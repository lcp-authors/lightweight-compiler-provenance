
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//vdir_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402378 <.init>:
  402378:	stp	x29, x30, [sp, #-16]!
  40237c:	mov	x29, sp
  402380:	bl	402ab0 <__fxstatat@plt+0x60>
  402384:	ldp	x29, x30, [sp], #16
  402388:	ret

Disassembly of section .plt:

0000000000402390 <mbrtowc@plt-0x20>:
  402390:	stp	x16, x30, [sp, #-16]!
  402394:	adrp	x16, 42c000 <_obstack_memory_used@@Base+0x16ad0>
  402398:	ldr	x17, [x16, #4088]
  40239c:	add	x16, x16, #0xff8
  4023a0:	br	x17
  4023a4:	nop
  4023a8:	nop
  4023ac:	nop

00000000004023b0 <mbrtowc@plt>:
  4023b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16]
  4023b8:	add	x16, x16, #0x0
  4023bc:	br	x17

00000000004023c0 <memcpy@plt>:
  4023c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #8]
  4023c8:	add	x16, x16, #0x8
  4023cc:	br	x17

00000000004023d0 <memmove@plt>:
  4023d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #16]
  4023d8:	add	x16, x16, #0x10
  4023dc:	br	x17

00000000004023e0 <cap_to_text@plt>:
  4023e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #24]
  4023e8:	add	x16, x16, #0x18
  4023ec:	br	x17

00000000004023f0 <_exit@plt>:
  4023f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #32]
  4023f8:	add	x16, x16, #0x20
  4023fc:	br	x17

0000000000402400 <getcwd@plt>:
  402400:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #40]
  402408:	add	x16, x16, #0x28
  40240c:	br	x17

0000000000402410 <fwrite_unlocked@plt>:
  402410:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #48]
  402418:	add	x16, x16, #0x30
  40241c:	br	x17

0000000000402420 <strtoul@plt>:
  402420:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #56]
  402428:	add	x16, x16, #0x38
  40242c:	br	x17

0000000000402430 <strlen@plt>:
  402430:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #64]
  402438:	add	x16, x16, #0x40
  40243c:	br	x17

0000000000402440 <__sprintf_chk@plt>:
  402440:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #72]
  402448:	add	x16, x16, #0x48
  40244c:	br	x17

0000000000402450 <mbstowcs@plt>:
  402450:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #80]
  402458:	add	x16, x16, #0x50
  40245c:	br	x17

0000000000402460 <exit@plt>:
  402460:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #88]
  402468:	add	x16, x16, #0x58
  40246c:	br	x17

0000000000402470 <_setjmp@plt>:
  402470:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #96]
  402478:	add	x16, x16, #0x60
  40247c:	br	x17

0000000000402480 <raise@plt>:
  402480:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #104]
  402488:	add	x16, x16, #0x68
  40248c:	br	x17

0000000000402490 <error@plt>:
  402490:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #112]
  402498:	add	x16, x16, #0x70
  40249c:	br	x17

00000000004024a0 <sigprocmask@plt>:
  4024a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #120]
  4024a8:	add	x16, x16, #0x78
  4024ac:	br	x17

00000000004024b0 <localtime_r@plt>:
  4024b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #128]
  4024b8:	add	x16, x16, #0x80
  4024bc:	br	x17

00000000004024c0 <setenv@plt>:
  4024c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #136]
  4024c8:	add	x16, x16, #0x88
  4024cc:	br	x17

00000000004024d0 <readlink@plt>:
  4024d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #144]
  4024d8:	add	x16, x16, #0x90
  4024dc:	br	x17

00000000004024e0 <getgrnam@plt>:
  4024e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #152]
  4024e8:	add	x16, x16, #0x98
  4024ec:	br	x17

00000000004024f0 <opendir@plt>:
  4024f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #160]
  4024f8:	add	x16, x16, #0xa0
  4024fc:	br	x17

0000000000402500 <strftime@plt>:
  402500:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #168]
  402508:	add	x16, x16, #0xa8
  40250c:	br	x17

0000000000402510 <__cxa_atexit@plt>:
  402510:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #176]
  402518:	add	x16, x16, #0xb0
  40251c:	br	x17

0000000000402520 <iswcntrl@plt>:
  402520:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #184]
  402528:	add	x16, x16, #0xb8
  40252c:	br	x17

0000000000402530 <clock_gettime@plt>:
  402530:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #192]
  402538:	add	x16, x16, #0xc0
  40253c:	br	x17

0000000000402540 <lseek@plt>:
  402540:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #200]
  402548:	add	x16, x16, #0xc8
  40254c:	br	x17

0000000000402550 <__fpending@plt>:
  402550:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #208]
  402558:	add	x16, x16, #0xd0
  40255c:	br	x17

0000000000402560 <__ctype_tolower_loc@plt>:
  402560:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #216]
  402568:	add	x16, x16, #0xd8
  40256c:	br	x17

0000000000402570 <localeconv@plt>:
  402570:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #224]
  402578:	add	x16, x16, #0xe0
  40257c:	br	x17

0000000000402580 <stpcpy@plt>:
  402580:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #232]
  402588:	add	x16, x16, #0xe8
  40258c:	br	x17

0000000000402590 <fileno@plt>:
  402590:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #240]
  402598:	add	x16, x16, #0xf0
  40259c:	br	x17

00000000004025a0 <__memcpy_chk@plt>:
  4025a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #248]
  4025a8:	add	x16, x16, #0xf8
  4025ac:	br	x17

00000000004025b0 <signal@plt>:
  4025b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #256]
  4025b8:	add	x16, x16, #0x100
  4025bc:	br	x17

00000000004025c0 <__snprintf_chk@plt>:
  4025c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #264]
  4025c8:	add	x16, x16, #0x108
  4025cc:	br	x17

00000000004025d0 <fclose@plt>:
  4025d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #272]
  4025d8:	add	x16, x16, #0x110
  4025dc:	br	x17

00000000004025e0 <nl_langinfo@plt>:
  4025e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #280]
  4025e8:	add	x16, x16, #0x118
  4025ec:	br	x17

00000000004025f0 <malloc@plt>:
  4025f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #288]
  4025f8:	add	x16, x16, #0x120
  4025fc:	br	x17

0000000000402600 <wcwidth@plt>:
  402600:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #296]
  402608:	add	x16, x16, #0x128
  40260c:	br	x17

0000000000402610 <tzset@plt>:
  402610:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #304]
  402618:	add	x16, x16, #0x130
  40261c:	br	x17

0000000000402620 <wcswidth@plt>:
  402620:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #312]
  402628:	add	x16, x16, #0x138
  40262c:	br	x17

0000000000402630 <sigemptyset@plt>:
  402630:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #320]
  402638:	add	x16, x16, #0x140
  40263c:	br	x17

0000000000402640 <strncmp@plt>:
  402640:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #328]
  402648:	add	x16, x16, #0x148
  40264c:	br	x17

0000000000402650 <bindtextdomain@plt>:
  402650:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #336]
  402658:	add	x16, x16, #0x150
  40265c:	br	x17

0000000000402660 <__libc_start_main@plt>:
  402660:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #344]
  402668:	add	x16, x16, #0x158
  40266c:	br	x17

0000000000402670 <__printf_chk@plt>:
  402670:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #352]
  402678:	add	x16, x16, #0x160
  40267c:	br	x17

0000000000402680 <memset@plt>:
  402680:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #360]
  402688:	add	x16, x16, #0x168
  40268c:	br	x17

0000000000402690 <getpwnam@plt>:
  402690:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #368]
  402698:	add	x16, x16, #0x170
  40269c:	br	x17

00000000004026a0 <gmtime_r@plt>:
  4026a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #376]
  4026a8:	add	x16, x16, #0x178
  4026ac:	br	x17

00000000004026b0 <__strtoul_internal@plt>:
  4026b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #384]
  4026b8:	add	x16, x16, #0x180
  4026bc:	br	x17

00000000004026c0 <calloc@plt>:
  4026c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #392]
  4026c8:	add	x16, x16, #0x188
  4026cc:	br	x17

00000000004026d0 <bcmp@plt>:
  4026d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #400]
  4026d8:	add	x16, x16, #0x190
  4026dc:	br	x17

00000000004026e0 <readdir@plt>:
  4026e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #408]
  4026e8:	add	x16, x16, #0x198
  4026ec:	br	x17

00000000004026f0 <realloc@plt>:
  4026f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #416]
  4026f8:	add	x16, x16, #0x1a0
  4026fc:	br	x17

0000000000402700 <__ctype_toupper_loc@plt>:
  402700:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #424]
  402708:	add	x16, x16, #0x1a8
  40270c:	br	x17

0000000000402710 <closedir@plt>:
  402710:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #432]
  402718:	add	x16, x16, #0x1b0
  40271c:	br	x17

0000000000402720 <sigaction@plt>:
  402720:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #440]
  402728:	add	x16, x16, #0x1b8
  40272c:	br	x17

0000000000402730 <strrchr@plt>:
  402730:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #448]
  402738:	add	x16, x16, #0x1c0
  40273c:	br	x17

0000000000402740 <tcgetpgrp@plt>:
  402740:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #456]
  402748:	add	x16, x16, #0x1c8
  40274c:	br	x17

0000000000402750 <__gmon_start__@plt>:
  402750:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #464]
  402758:	add	x16, x16, #0x1d0
  40275c:	br	x17

0000000000402760 <mktime@plt>:
  402760:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #472]
  402768:	add	x16, x16, #0x1d8
  40276c:	br	x17

0000000000402770 <abort@plt>:
  402770:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #480]
  402778:	add	x16, x16, #0x1e0
  40277c:	br	x17

0000000000402780 <mbsinit@plt>:
  402780:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #488]
  402788:	add	x16, x16, #0x1e8
  40278c:	br	x17

0000000000402790 <__overflow@plt>:
  402790:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #496]
  402798:	add	x16, x16, #0x1f0
  40279c:	br	x17

00000000004027a0 <getxattr@plt>:
  4027a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #504]
  4027a8:	add	x16, x16, #0x1f8
  4027ac:	br	x17

00000000004027b0 <textdomain@plt>:
  4027b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #512]
  4027b8:	add	x16, x16, #0x200
  4027bc:	br	x17

00000000004027c0 <stpncpy@plt>:
  4027c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #520]
  4027c8:	add	x16, x16, #0x208
  4027cc:	br	x17

00000000004027d0 <getopt_long@plt>:
  4027d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #528]
  4027d8:	add	x16, x16, #0x210
  4027dc:	br	x17

00000000004027e0 <__fprintf_chk@plt>:
  4027e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #536]
  4027e8:	add	x16, x16, #0x218
  4027ec:	br	x17

00000000004027f0 <sigismember@plt>:
  4027f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #544]
  4027f8:	add	x16, x16, #0x220
  4027fc:	br	x17

0000000000402800 <strcmp@plt>:
  402800:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #552]
  402808:	add	x16, x16, #0x228
  40280c:	br	x17

0000000000402810 <getpwuid@plt>:
  402810:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #560]
  402818:	add	x16, x16, #0x230
  40281c:	br	x17

0000000000402820 <__ctype_b_loc@plt>:
  402820:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #568]
  402828:	add	x16, x16, #0x238
  40282c:	br	x17

0000000000402830 <fseeko@plt>:
  402830:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #576]
  402838:	add	x16, x16, #0x240
  40283c:	br	x17

0000000000402840 <free@plt>:
  402840:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #584]
  402848:	add	x16, x16, #0x248
  40284c:	br	x17

0000000000402850 <__ctype_get_mb_cur_max@plt>:
  402850:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #592]
  402858:	add	x16, x16, #0x250
  40285c:	br	x17

0000000000402860 <strspn@plt>:
  402860:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #600]
  402868:	add	x16, x16, #0x258
  40286c:	br	x17

0000000000402870 <strchr@plt>:
  402870:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #608]
  402878:	add	x16, x16, #0x260
  40287c:	br	x17

0000000000402880 <fwrite@plt>:
  402880:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #616]
  402888:	add	x16, x16, #0x268
  40288c:	br	x17

0000000000402890 <fnmatch@plt>:
  402890:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #624]
  402898:	add	x16, x16, #0x270
  40289c:	br	x17

00000000004028a0 <fflush_unlocked@plt>:
  4028a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #632]
  4028a8:	add	x16, x16, #0x278
  4028ac:	br	x17

00000000004028b0 <fflush@plt>:
  4028b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #640]
  4028b8:	add	x16, x16, #0x280
  4028bc:	br	x17

00000000004028c0 <strcpy@plt>:
  4028c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #648]
  4028c8:	add	x16, x16, #0x288
  4028cc:	br	x17

00000000004028d0 <dirfd@plt>:
  4028d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #656]
  4028d8:	add	x16, x16, #0x290
  4028dc:	br	x17

00000000004028e0 <unsetenv@plt>:
  4028e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #664]
  4028e8:	add	x16, x16, #0x298
  4028ec:	br	x17

00000000004028f0 <__lxstat@plt>:
  4028f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #672]
  4028f8:	add	x16, x16, #0x2a0
  4028fc:	br	x17

0000000000402900 <cap_get_file@plt>:
  402900:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #680]
  402908:	add	x16, x16, #0x2a8
  40290c:	br	x17

0000000000402910 <isatty@plt>:
  402910:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #688]
  402918:	add	x16, x16, #0x2b0
  40291c:	br	x17

0000000000402920 <wcstombs@plt>:
  402920:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #696]
  402928:	add	x16, x16, #0x2b8
  40292c:	br	x17

0000000000402930 <gethostname@plt>:
  402930:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #704]
  402938:	add	x16, x16, #0x2c0
  40293c:	br	x17

0000000000402940 <__mempcpy_chk@plt>:
  402940:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #712]
  402948:	add	x16, x16, #0x2c8
  40294c:	br	x17

0000000000402950 <cap_free@plt>:
  402950:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #720]
  402958:	add	x16, x16, #0x2d0
  40295c:	br	x17

0000000000402960 <__fxstat@plt>:
  402960:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #728]
  402968:	add	x16, x16, #0x2d8
  40296c:	br	x17

0000000000402970 <dcgettext@plt>:
  402970:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #736]
  402978:	add	x16, x16, #0x2e0
  40297c:	br	x17

0000000000402980 <fputs_unlocked@plt>:
  402980:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #744]
  402988:	add	x16, x16, #0x2e8
  40298c:	br	x17

0000000000402990 <strcoll@plt>:
  402990:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #752]
  402998:	add	x16, x16, #0x2f0
  40299c:	br	x17

00000000004029a0 <__freading@plt>:
  4029a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #760]
  4029a8:	add	x16, x16, #0x2f8
  4029ac:	br	x17

00000000004029b0 <sigaddset@plt>:
  4029b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #768]
  4029b8:	add	x16, x16, #0x300
  4029bc:	br	x17

00000000004029c0 <iswprint@plt>:
  4029c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #776]
  4029c8:	add	x16, x16, #0x308
  4029cc:	br	x17

00000000004029d0 <__assert_fail@plt>:
  4029d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #784]
  4029d8:	add	x16, x16, #0x310
  4029dc:	br	x17

00000000004029e0 <__errno_location@plt>:
  4029e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #792]
  4029e8:	add	x16, x16, #0x318
  4029ec:	br	x17

00000000004029f0 <getenv@plt>:
  4029f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #800]
  4029f8:	add	x16, x16, #0x320
  4029fc:	br	x17

0000000000402a00 <__xstat@plt>:
  402a00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #808]
  402a08:	add	x16, x16, #0x328
  402a0c:	br	x17

0000000000402a10 <getgrgid@plt>:
  402a10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #816]
  402a18:	add	x16, x16, #0x330
  402a1c:	br	x17

0000000000402a20 <timegm@plt>:
  402a20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #824]
  402a28:	add	x16, x16, #0x338
  402a2c:	br	x17

0000000000402a30 <ioctl@plt>:
  402a30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #832]
  402a38:	add	x16, x16, #0x340
  402a3c:	br	x17

0000000000402a40 <setlocale@plt>:
  402a40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #840]
  402a48:	add	x16, x16, #0x348
  402a4c:	br	x17

0000000000402a50 <__fxstatat@plt>:
  402a50:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #848]
  402a58:	add	x16, x16, #0x350
  402a5c:	br	x17

Disassembly of section .text:

0000000000402a60 <_obstack_begin@@Base-0x12758>:
  402a60:	mov	x29, #0x0                   	// #0
  402a64:	mov	x30, #0x0                   	// #0
  402a68:	mov	x5, x0
  402a6c:	ldr	x1, [sp]
  402a70:	add	x2, sp, #0x8
  402a74:	mov	x6, sp
  402a78:	movz	x0, #0x0, lsl #48
  402a7c:	movk	x0, #0x0, lsl #32
  402a80:	movk	x0, #0x40, lsl #16
  402a84:	movk	x0, #0x2b6c
  402a88:	movz	x3, #0x0, lsl #48
  402a8c:	movk	x3, #0x0, lsl #32
  402a90:	movk	x3, #0x41, lsl #16
  402a94:	movk	x3, #0x7588
  402a98:	movz	x4, #0x0, lsl #48
  402a9c:	movk	x4, #0x0, lsl #32
  402aa0:	movk	x4, #0x41, lsl #16
  402aa4:	movk	x4, #0x7608
  402aa8:	bl	402660 <__libc_start_main@plt>
  402aac:	bl	402770 <abort@plt>
  402ab0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x16ad0>
  402ab4:	ldr	x0, [x0, #4064]
  402ab8:	cbz	x0, 402ac0 <__fxstatat@plt+0x70>
  402abc:	b	402750 <__gmon_start__@plt>
  402ac0:	ret
  402ac4:	nop
  402ac8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402acc:	add	x0, x0, #0x588
  402ad0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402ad4:	add	x1, x1, #0x588
  402ad8:	cmp	x1, x0
  402adc:	b.eq	402af4 <__fxstatat@plt+0xa4>  // b.none
  402ae0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x1ad0>
  402ae4:	ldr	x1, [x1, #1592]
  402ae8:	cbz	x1, 402af4 <__fxstatat@plt+0xa4>
  402aec:	mov	x16, x1
  402af0:	br	x16
  402af4:	ret
  402af8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402afc:	add	x0, x0, #0x588
  402b00:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402b04:	add	x1, x1, #0x588
  402b08:	sub	x1, x1, x0
  402b0c:	lsr	x2, x1, #63
  402b10:	add	x1, x2, x1, asr #3
  402b14:	cmp	xzr, x1, asr #1
  402b18:	asr	x1, x1, #1
  402b1c:	b.eq	402b34 <__fxstatat@plt+0xe4>  // b.none
  402b20:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x1ad0>
  402b24:	ldr	x2, [x2, #1600]
  402b28:	cbz	x2, 402b34 <__fxstatat@plt+0xe4>
  402b2c:	mov	x16, x2
  402b30:	br	x16
  402b34:	ret
  402b38:	stp	x29, x30, [sp, #-32]!
  402b3c:	mov	x29, sp
  402b40:	str	x19, [sp, #16]
  402b44:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402b48:	ldrb	w0, [x19, #1472]
  402b4c:	cbnz	w0, 402b5c <__fxstatat@plt+0x10c>
  402b50:	bl	402ac8 <__fxstatat@plt+0x78>
  402b54:	mov	w0, #0x1                   	// #1
  402b58:	strb	w0, [x19, #1472]
  402b5c:	ldr	x19, [sp, #16]
  402b60:	ldp	x29, x30, [sp], #32
  402b64:	ret
  402b68:	b	402af8 <__fxstatat@plt+0xa8>
  402b6c:	stp	x29, x30, [sp, #-96]!
  402b70:	stp	x28, x27, [sp, #16]
  402b74:	stp	x26, x25, [sp, #32]
  402b78:	stp	x24, x23, [sp, #48]
  402b7c:	stp	x22, x21, [sp, #64]
  402b80:	stp	x20, x19, [sp, #80]
  402b84:	mov	x29, sp
  402b88:	sub	sp, sp, #0x690
  402b8c:	ldr	x8, [x1]
  402b90:	mov	w20, w0
  402b94:	mov	x19, x1
  402b98:	mov	x0, x8
  402b9c:	bl	411f78 <__fxstatat@plt+0xf528>
  402ba0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402ba4:	add	x1, x1, #0x8d1
  402ba8:	mov	w0, #0x6                   	// #6
  402bac:	bl	402a40 <setlocale@plt>
  402bb0:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402bb4:	add	x22, x22, #0x3f2
  402bb8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  402bbc:	add	x1, x1, #0x530
  402bc0:	mov	x0, x22
  402bc4:	bl	402650 <bindtextdomain@plt>
  402bc8:	mov	x0, x22
  402bcc:	bl	4027b0 <textdomain@plt>
  402bd0:	adrp	x0, 40d000 <__fxstatat@plt+0xa5b0>
  402bd4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402bd8:	mov	w9, #0x2                   	// #2
  402bdc:	add	x0, x0, #0x528
  402be0:	str	w9, [x8, #1312]
  402be4:	bl	417610 <_obstack_memory_used@@Base+0x20e0>
  402be8:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402bec:	add	x10, x10, #0x1d0
  402bf0:	mov	w8, #0x1                   	// #1
  402bf4:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402bf8:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x1ad0>
  402bfc:	strb	w8, [x10]
  402c00:	ldr	w8, [x11, #1288]
  402c04:	ldr	q0, [x9, #1616]
  402c08:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402c0c:	str	wzr, [x10, #40]
  402c10:	cmp	w8, #0x1
  402c14:	str	xzr, [x10, #128]
  402c18:	strb	wzr, [x10, #22]
  402c1c:	str	q0, [x10, #336]
  402c20:	b.eq	402c50 <__fxstatat@plt+0x200>  // b.none
  402c24:	cmp	w8, #0x3
  402c28:	b.eq	402c3c <__fxstatat@plt+0x1ec>  // b.none
  402c2c:	cmp	w8, #0x2
  402c30:	b.ne	4057c8 <__fxstatat@plt+0x2d78>  // b.any
  402c34:	str	w8, [x9, #508]
  402c38:	b	402c40 <__fxstatat@plt+0x1f0>
  402c3c:	str	wzr, [x9, #508]
  402c40:	mov	w1, #0x7                   	// #7
  402c44:	mov	x0, xzr
  402c48:	bl	412088 <__fxstatat@plt+0xf638>
  402c4c:	b	402c8c <__fxstatat@plt+0x23c>
  402c50:	mov	w0, #0x1                   	// #1
  402c54:	mov	w21, #0x1                   	// #1
  402c58:	bl	402910 <isatty@plt>
  402c5c:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402c60:	add	x22, x22, #0x1e6
  402c64:	cbz	w0, 402c84 <__fxstatat@plt+0x234>
  402c68:	mov	w8, #0x2                   	// #2
  402c6c:	mov	w1, #0x3                   	// #3
  402c70:	mov	x0, xzr
  402c74:	stur	w8, [x22, #22]
  402c78:	bl	412088 <__fxstatat@plt+0xf638>
  402c7c:	strb	w21, [x22]
  402c80:	b	402c8c <__fxstatat@plt+0x23c>
  402c84:	stur	w21, [x22, #22]
  402c88:	strb	wzr, [x22]
  402c8c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402c90:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402c94:	add	x9, x9, #0x1d8
  402c98:	mov	w8, #0x1                   	// #1
  402c9c:	add	x0, x0, #0x4f4
  402ca0:	stur	xzr, [x9, #60]
  402ca4:	str	wzr, [x9, #48]
  402ca8:	sturh	wzr, [x9, #15]
  402cac:	strb	wzr, [x9, #17]
  402cb0:	str	x8, [x9, #40]
  402cb4:	str	wzr, [x9]
  402cb8:	stp	xzr, xzr, [x9, #192]
  402cbc:	bl	4029f0 <getenv@plt>
  402cc0:	cbz	x0, 402d30 <__fxstatat@plt+0x2e0>
  402cc4:	adrp	x23, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  402cc8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  402ccc:	add	x23, x23, #0xf8
  402cd0:	add	x1, x1, #0xa0
  402cd4:	mov	w3, #0x4                   	// #4
  402cd8:	mov	x2, x23
  402cdc:	mov	x22, x0
  402ce0:	bl	40c96c <__fxstatat@plt+0x9f1c>
  402ce4:	tbnz	w0, #31, 402cfc <__fxstatat@plt+0x2ac>
  402ce8:	sbfiz	x8, x0, #2, #32
  402cec:	ldr	w1, [x23, x8]
  402cf0:	mov	x0, xzr
  402cf4:	bl	412088 <__fxstatat@plt+0xf638>
  402cf8:	b	402d30 <__fxstatat@plt+0x2e0>
  402cfc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402d00:	add	x1, x1, #0x502
  402d04:	mov	w2, #0x5                   	// #5
  402d08:	mov	x0, xzr
  402d0c:	bl	402970 <dcgettext@plt>
  402d10:	mov	x23, x0
  402d14:	mov	x0, x22
  402d18:	bl	413aa8 <__fxstatat@plt+0x11058>
  402d1c:	mov	x3, x0
  402d20:	mov	w0, wzr
  402d24:	mov	w1, wzr
  402d28:	mov	x2, x23
  402d2c:	bl	402490 <error@plt>
  402d30:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402d34:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402d38:	mov	w8, #0x50                  	// #80
  402d3c:	add	x0, x0, #0x2b4
  402d40:	str	x8, [x9, #680]
  402d44:	bl	4029f0 <getenv@plt>
  402d48:	cbz	x0, 402dcc <__fxstatat@plt+0x37c>
  402d4c:	ldrb	w8, [x0]
  402d50:	mov	x22, x0
  402d54:	cbz	w8, 402dcc <__fxstatat@plt+0x37c>
  402d58:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402d5c:	add	x4, x4, #0x8d1
  402d60:	add	x3, sp, #0x70
  402d64:	mov	x0, x22
  402d68:	mov	x1, xzr
  402d6c:	mov	w2, wzr
  402d70:	bl	414d5c <__fxstatat@plt+0x1230c>
  402d74:	cmp	w0, #0x1
  402d78:	b.eq	402d88 <__fxstatat@plt+0x338>  // b.none
  402d7c:	cbnz	w0, 402d98 <__fxstatat@plt+0x348>
  402d80:	ldr	x8, [sp, #112]
  402d84:	b	402d8c <__fxstatat@plt+0x33c>
  402d88:	mov	x8, #0xffffffffffffffff    	// #-1
  402d8c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402d90:	str	x8, [x9, #680]
  402d94:	b	402dcc <__fxstatat@plt+0x37c>
  402d98:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402d9c:	add	x1, x1, #0x2bc
  402da0:	mov	w2, #0x5                   	// #5
  402da4:	mov	x0, xzr
  402da8:	bl	402970 <dcgettext@plt>
  402dac:	mov	x23, x0
  402db0:	mov	x0, x22
  402db4:	bl	413aa8 <__fxstatat@plt+0x11058>
  402db8:	mov	x3, x0
  402dbc:	mov	w0, wzr
  402dc0:	mov	w1, wzr
  402dc4:	mov	x2, x23
  402dc8:	bl	402490 <error@plt>
  402dcc:	add	x2, sp, #0x70
  402dd0:	mov	w0, #0x1                   	// #1
  402dd4:	mov	w1, #0x5413                	// #21523
  402dd8:	bl	402a30 <ioctl@plt>
  402ddc:	cmn	w0, #0x1
  402de0:	b.eq	402df4 <__fxstatat@plt+0x3a4>  // b.none
  402de4:	ldrh	w8, [sp, #114]
  402de8:	cbz	x8, 402df4 <__fxstatat@plt+0x3a4>
  402dec:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402df0:	str	x8, [x9, #680]
  402df4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402df8:	add	x0, x0, #0x2f7
  402dfc:	bl	4029f0 <getenv@plt>
  402e00:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402e04:	mov	w8, #0x8                   	// #8
  402e08:	str	x8, [x9, #688]
  402e0c:	cbz	x0, 402e70 <__fxstatat@plt+0x420>
  402e10:	add	x3, sp, #0x70
  402e14:	mov	x1, xzr
  402e18:	mov	w2, wzr
  402e1c:	mov	x4, xzr
  402e20:	mov	x22, x0
  402e24:	bl	4148fc <__fxstatat@plt+0x11eac>
  402e28:	cbz	w0, 402e64 <__fxstatat@plt+0x414>
  402e2c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402e30:	add	x1, x1, #0x2ff
  402e34:	mov	w2, #0x5                   	// #5
  402e38:	mov	x0, xzr
  402e3c:	bl	402970 <dcgettext@plt>
  402e40:	mov	x23, x0
  402e44:	mov	x0, x22
  402e48:	bl	413aa8 <__fxstatat@plt+0x11058>
  402e4c:	mov	x3, x0
  402e50:	mov	w0, wzr
  402e54:	mov	w1, wzr
  402e58:	mov	x2, x23
  402e5c:	bl	402490 <error@plt>
  402e60:	b	402e70 <__fxstatat@plt+0x420>
  402e64:	ldr	x8, [sp, #112]
  402e68:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402e6c:	str	x8, [x9, #688]
  402e70:	adrp	x24, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402e74:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x1ad0>
  402e78:	adrp	x27, 417000 <_obstack_memory_used@@Base+0x1ad0>
  402e7c:	mov	w28, wzr
  402e80:	mov	w21, wzr
  402e84:	mov	w23, #0xffffffff            	// #-1
  402e88:	add	x24, x24, #0x33d
  402e8c:	add	x25, x25, #0xa40
  402e90:	add	x27, x27, #0x670
  402e94:	str	xzr, [sp, #96]
  402e98:	sub	x4, x29, #0x10
  402e9c:	mov	w0, w20
  402ea0:	mov	x1, x19
  402ea4:	mov	x2, x24
  402ea8:	mov	x3, x25
  402eac:	stur	w23, [x29, #-16]
  402eb0:	bl	4027d0 <getopt_long@plt>
  402eb4:	add	w8, w0, #0x3
  402eb8:	cmp	w8, #0x113
  402ebc:	b.hi	405710 <__fxstatat@plt+0x2cc0>  // b.pmore
  402ec0:	adr	x9, 402ed4 <__fxstatat@plt+0x484>
  402ec4:	ldrh	w10, [x27, x8, lsl #1]
  402ec8:	add	x9, x9, x10, lsl #2
  402ecc:	mov	w8, #0x1                   	// #1
  402ed0:	br	x9
  402ed4:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402ed8:	ldr	w8, [x9, #508]
  402edc:	cbz	w8, 403594 <__fxstatat@plt+0xb44>
  402ee0:	mov	w8, #0x1                   	// #1
  402ee4:	str	w8, [x9, #508]
  402ee8:	b	403594 <__fxstatat@plt+0xb44>
  402eec:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402ef0:	str	wzr, [x8, #508]
  402ef4:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402ef8:	add	x8, x8, #0x3af
  402efc:	str	x8, [sp, #96]
  402f00:	b	403594 <__fxstatat@plt+0xb44>
  402f04:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402f08:	mov	w9, #0x1                   	// #1
  402f0c:	strb	w9, [x8, #487]
  402f10:	b	403594 <__fxstatat@plt+0xb44>
  402f14:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402f18:	strb	wzr, [x8, #486]
  402f1c:	b	403594 <__fxstatat@plt+0xb44>
  402f20:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402f24:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  402f28:	ldr	x1, [x8, #1440]
  402f2c:	ldr	x5, [x9, #1304]
  402f30:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x2ad0>
  402f34:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  402f38:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x2ad0>
  402f3c:	add	x26, x26, #0x8
  402f40:	add	x0, x0, #0x39f
  402f44:	add	x2, x2, #0x20
  402f48:	mov	w4, #0x4                   	// #4
  402f4c:	mov	x3, x26
  402f50:	bl	40cc7c <__fxstatat@plt+0xa22c>
  402f54:	ldr	w8, [x26, x0, lsl #2]
  402f58:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402f5c:	str	w8, [x9, #532]
  402f60:	b	403594 <__fxstatat@plt+0xb44>
  402f64:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402f68:	mov	w9, #0x1                   	// #1
  402f6c:	strb	w9, [x8, #486]
  402f70:	b	403594 <__fxstatat@plt+0xb44>
  402f74:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402f78:	mov	w9, #0x4                   	// #4
  402f7c:	str	w9, [x8, #512]
  402f80:	b	403594 <__fxstatat@plt+0xb44>
  402f84:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402f88:	add	x8, x8, #0x1ea
  402f8c:	mov	w9, #0x1                   	// #1
  402f90:	stur	wzr, [x8, #18]
  402f94:	strb	w9, [x8]
  402f98:	b	403594 <__fxstatat@plt+0xb44>
  402f9c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402fa0:	add	x8, x8, #0x1fc
  402fa4:	ldr	w9, [x8]
  402fa8:	mov	w10, #0x2                   	// #2
  402fac:	str	w10, [x8, #28]
  402fb0:	mov	w10, #0xffffffff            	// #-1
  402fb4:	str	w10, [x8, #12]
  402fb8:	cbnz	w9, 402fd8 <__fxstatat@plt+0x588>
  402fbc:	mov	w0, #0x1                   	// #1
  402fc0:	mov	w21, #0x1                   	// #1
  402fc4:	bl	402910 <isatty@plt>
  402fc8:	cmp	w0, #0x0
  402fcc:	cinc	w8, w21, ne  // ne = any
  402fd0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402fd4:	str	w8, [x9, #508]
  402fd8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402fdc:	add	x8, x8, #0x1d4
  402fe0:	strb	wzr, [x8, #7]
  402fe4:	strb	wzr, [x8]
  402fe8:	strb	wzr, [x8, #16]
  402fec:	mov	w21, #0x1                   	// #1
  402ff0:	b	403594 <__fxstatat@plt+0xb44>
  402ff4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  402ff8:	mov	w9, #0x1                   	// #1
  402ffc:	strb	w9, [x8, #469]
  403000:	b	403594 <__fxstatat@plt+0xb44>
  403004:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403008:	mov	w9, #0xffffffff            	// #-1
  40300c:	b	403398 <__fxstatat@plt+0x948>
  403010:	mov	w8, #0x3                   	// #3
  403014:	b	4033ec <__fxstatat@plt+0x99c>
  403018:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40301c:	mov	w9, #0x2                   	// #2
  403020:	str	w9, [x8, #536]
  403024:	b	403594 <__fxstatat@plt+0xb44>
  403028:	mov	w1, #0x7                   	// #7
  40302c:	b	403430 <__fxstatat@plt+0x9e0>
  403030:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403034:	add	x8, x8, #0x1eb
  403038:	mov	w9, #0x1                   	// #1
  40303c:	stur	wzr, [x8, #17]
  403040:	strb	w9, [x8]
  403044:	b	403594 <__fxstatat@plt+0xb44>
  403048:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40304c:	mov	w21, #0x1                   	// #1
  403050:	str	w21, [x8, #520]
  403054:	b	403594 <__fxstatat@plt+0xb44>
  403058:	mov	w0, #0x10                  	// #16
  40305c:	bl	414368 <__fxstatat@plt+0x11918>
  403060:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403064:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403068:	ldr	x8, [x8, #1440]
  40306c:	ldr	x10, [x9, #672]
  403070:	str	x0, [x9, #672]
  403074:	stp	x8, x10, [x0]
  403078:	b	403594 <__fxstatat@plt+0xb44>
  40307c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403080:	add	x8, x8, #0x1e8
  403084:	mov	w9, #0x1                   	// #1
  403088:	strb	w9, [x8]
  40308c:	str	wzr, [x8, #20]
  403090:	b	403594 <__fxstatat@plt+0xb44>
  403094:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403098:	mov	w9, #0x1                   	// #1
  40309c:	str	w9, [x8, #516]
  4030a0:	b	403594 <__fxstatat@plt+0xb44>
  4030a4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4030a8:	mov	w9, #0x1                   	// #1
  4030ac:	strb	w9, [x8, #473]
  4030b0:	b	403594 <__fxstatat@plt+0xb44>
  4030b4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4030b8:	mov	w9, #0x1                   	// #1
  4030bc:	strb	w9, [x8, #492]
  4030c0:	b	403594 <__fxstatat@plt+0xb44>
  4030c4:	mov	w8, #0x2                   	// #2
  4030c8:	b	4033ec <__fxstatat@plt+0x99c>
  4030cc:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4030d0:	mov	w22, w21
  4030d4:	ldr	x21, [x8, #1440]
  4030d8:	mov	w0, #0x10                  	// #16
  4030dc:	bl	414368 <__fxstatat@plt+0x11918>
  4030e0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4030e4:	ldr	x9, [x8, #664]
  4030e8:	str	x0, [x8, #664]
  4030ec:	stp	x21, x9, [x0]
  4030f0:	mov	w21, w22
  4030f4:	b	403594 <__fxstatat@plt+0xb44>
  4030f8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4030fc:	mov	w9, #0x1                   	// #1
  403100:	str	w9, [x8, #532]
  403104:	b	403594 <__fxstatat@plt+0xb44>
  403108:	mov	x0, xzr
  40310c:	mov	w1, wzr
  403110:	bl	412088 <__fxstatat@plt+0xf638>
  403114:	b	403594 <__fxstatat@plt+0xb44>
  403118:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40311c:	mov	w9, #0x1                   	// #1
  403120:	strb	w9, [x8, #481]
  403124:	b	403594 <__fxstatat@plt+0xb44>
  403128:	mov	w0, #0x10                  	// #16
  40312c:	bl	414368 <__fxstatat@plt+0x11918>
  403130:	mov	w22, w21
  403134:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403138:	ldr	x8, [x21, #664]
  40313c:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403140:	add	x9, x9, #0x384
  403144:	str	x0, [x21, #664]
  403148:	stp	x9, x8, [x0]
  40314c:	mov	w0, #0x10                  	// #16
  403150:	bl	414368 <__fxstatat@plt+0x11918>
  403154:	ldr	x8, [x21, #664]
  403158:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40315c:	add	x9, x9, #0x383
  403160:	str	x0, [x21, #664]
  403164:	stp	x9, x8, [x0]
  403168:	mov	w21, w22
  40316c:	b	403594 <__fxstatat@plt+0xb44>
  403170:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403174:	mov	w9, #0x1                   	// #1
  403178:	strb	w9, [x8, #474]
  40317c:	b	403594 <__fxstatat@plt+0xb44>
  403180:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403184:	ldr	x26, [x8, #1440]
  403188:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40318c:	add	x1, x1, #0x387
  403190:	mov	w2, #0x5                   	// #5
  403194:	mov	x0, xzr
  403198:	bl	402970 <dcgettext@plt>
  40319c:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4031a0:	mov	x5, x0
  4031a4:	add	x4, x4, #0x8d1
  4031a8:	mov	x3, #0xffffffffffffffff    	// #-1
  4031ac:	mov	w6, #0x2                   	// #2
  4031b0:	mov	x0, x26
  4031b4:	mov	w1, wzr
  4031b8:	mov	x2, xzr
  4031bc:	bl	4146e8 <__fxstatat@plt+0x11c98>
  4031c0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4031c4:	str	x0, [x8, #688]
  4031c8:	b	403594 <__fxstatat@plt+0xb44>
  4031cc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4031d0:	mov	w9, #0x1                   	// #1
  4031d4:	strb	w9, [x8, #472]
  4031d8:	b	403594 <__fxstatat@plt+0xb44>
  4031dc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4031e0:	mov	w9, #0x1                   	// #1
  4031e4:	strb	w9, [x8, #491]
  4031e8:	b	403594 <__fxstatat@plt+0xb44>
  4031ec:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4031f0:	mov	w9, #0x3                   	// #3
  4031f4:	str	w9, [x8, #512]
  4031f8:	b	403594 <__fxstatat@plt+0xb44>
  4031fc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403200:	str	wzr, [x8, #508]
  403204:	b	403594 <__fxstatat@plt+0xb44>
  403208:	mov	w8, #0x4                   	// #4
  40320c:	b	4033ec <__fxstatat@plt+0x99c>
  403210:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403214:	mov	w9, #0x1                   	// #1
  403218:	str	w9, [x8, #536]
  40321c:	b	403594 <__fxstatat@plt+0xb44>
  403220:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403224:	mov	w9, #0x2                   	// #2
  403228:	str	w9, [x8, #516]
  40322c:	b	403594 <__fxstatat@plt+0xb44>
  403230:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403234:	mov	w9, #0x3                   	// #3
  403238:	str	w9, [x8, #516]
  40323c:	b	403594 <__fxstatat@plt+0xb44>
  403240:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403244:	ldr	x0, [x26, #1440]
  403248:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40324c:	add	x4, x4, #0x8d1
  403250:	add	x3, sp, #0x70
  403254:	mov	x1, xzr
  403258:	mov	w2, wzr
  40325c:	bl	414d5c <__fxstatat@plt+0x1230c>
  403260:	cmp	w0, #0x1
  403264:	b.eq	403564 <__fxstatat@plt+0xb14>  // b.none
  403268:	cbnz	w0, 4057d0 <__fxstatat@plt+0x2d80>
  40326c:	ldr	x8, [sp, #112]
  403270:	b	403568 <__fxstatat@plt+0xb18>
  403274:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403278:	mov	x9, #0xb0                  	// #176
  40327c:	add	x8, x8, #0x21c
  403280:	movk	x9, #0xb0, lsl #32
  403284:	b	403320 <__fxstatat@plt+0x8d0>
  403288:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40328c:	ldr	x0, [x22, #1440]
  403290:	adrp	x26, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403294:	add	x26, x26, #0x21c
  403298:	add	x2, x26, #0x9c
  40329c:	mov	x1, x26
  4032a0:	bl	40fa24 <__fxstatat@plt+0xcfd4>
  4032a4:	cbnz	w0, 405810 <__fxstatat@plt+0x2dc0>
  4032a8:	ldr	w8, [x26]
  4032ac:	ldur	x9, [x26, #156]
  4032b0:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4032b4:	str	w8, [x26, #4]
  4032b8:	str	x9, [x10, #880]
  4032bc:	b	403594 <__fxstatat@plt+0xb44>
  4032c0:	mov	w1, #0x5                   	// #5
  4032c4:	b	403430 <__fxstatat@plt+0x9e0>
  4032c8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4032cc:	ldr	x8, [x8, #1440]
  4032d0:	str	x8, [sp, #96]
  4032d4:	b	403594 <__fxstatat@plt+0xb44>
  4032d8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4032dc:	mov	w9, #0x2                   	// #2
  4032e0:	b	403398 <__fxstatat@plt+0x948>
  4032e4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4032e8:	mov	w9, #0x3                   	// #3
  4032ec:	b	403398 <__fxstatat@plt+0x948>
  4032f0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4032f4:	mov	w9, #0x5                   	// #5
  4032f8:	str	w9, [x8, #512]
  4032fc:	b	403594 <__fxstatat@plt+0xb44>
  403300:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403304:	mov	w9, #0x1                   	// #1
  403308:	strb	w9, [x8, #489]
  40330c:	b	403594 <__fxstatat@plt+0xb44>
  403310:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403314:	mov	x9, #0x90                  	// #144
  403318:	add	x8, x8, #0x21c
  40331c:	movk	x9, #0x90, lsl #32
  403320:	mov	w10, #0x1                   	// #1
  403324:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403328:	str	x9, [x8]
  40332c:	stur	x10, [x8, #156]
  403330:	str	x10, [x11, #880]
  403334:	b	403594 <__fxstatat@plt+0xb44>
  403338:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40333c:	mov	w9, #0x1                   	// #1
  403340:	strb	w9, [x8, #475]
  403344:	b	403594 <__fxstatat@plt+0xb44>
  403348:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40334c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403350:	ldr	x1, [x8, #1440]
  403354:	ldr	x5, [x9, #1304]
  403358:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x1ad0>
  40335c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403360:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x1ad0>
  403364:	add	x26, x26, #0xfc0
  403368:	add	x0, x0, #0x398
  40336c:	add	x2, x2, #0xfd8
  403370:	mov	w4, #0x4                   	// #4
  403374:	mov	x3, x26
  403378:	bl	40cc7c <__fxstatat@plt+0xa22c>
  40337c:	ldr	w8, [x26, x0, lsl #2]
  403380:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403384:	mov	w21, #0x1                   	// #1
  403388:	str	w8, [x9, #520]
  40338c:	b	403594 <__fxstatat@plt+0xb44>
  403390:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403394:	mov	w9, #0x4                   	// #4
  403398:	str	w9, [x8, #520]
  40339c:	mov	w21, #0x1                   	// #1
  4033a0:	b	403594 <__fxstatat@plt+0xb44>
  4033a4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4033a8:	mov	w9, #0x2                   	// #2
  4033ac:	str	w9, [x8, #532]
  4033b0:	b	403594 <__fxstatat@plt+0xb44>
  4033b4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4033b8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4033bc:	ldr	x1, [x8, #1440]
  4033c0:	ldr	x5, [x9, #1304]
  4033c4:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x2ad0>
  4033c8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4033cc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x2ad0>
  4033d0:	add	x26, x26, #0x50
  4033d4:	add	x0, x0, #0x3a6
  4033d8:	add	x2, x2, #0x70
  4033dc:	mov	w4, #0x4                   	// #4
  4033e0:	mov	x3, x26
  4033e4:	bl	40cc7c <__fxstatat@plt+0xa22c>
  4033e8:	ldr	w8, [x26, x0, lsl #2]
  4033ec:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4033f0:	str	w8, [x9, #508]
  4033f4:	b	403594 <__fxstatat@plt+0xb44>
  4033f8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4033fc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403400:	ldr	x1, [x8, #1440]
  403404:	ldr	x5, [x9, #1304]
  403408:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  40340c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403410:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  403414:	add	x22, x22, #0xf8
  403418:	add	x0, x0, #0x3de
  40341c:	add	x2, x2, #0xa0
  403420:	mov	w4, #0x4                   	// #4
  403424:	mov	x3, x22
  403428:	bl	40cc7c <__fxstatat@plt+0xa22c>
  40342c:	ldr	w1, [x22, x0, lsl #2]
  403430:	mov	x0, xzr
  403434:	bl	412088 <__fxstatat@plt+0xf638>
  403438:	b	403594 <__fxstatat@plt+0xb44>
  40343c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403440:	ldr	x1, [x8, #1440]
  403444:	cbz	x1, 40354c <__fxstatat@plt+0xafc>
  403448:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40344c:	ldr	x5, [x8, #1304]
  403450:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x2ad0>
  403454:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403458:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x2ad0>
  40345c:	add	x26, x26, #0xb0
  403460:	add	x0, x0, #0x3b8
  403464:	add	x2, x2, #0xd8
  403468:	mov	w4, #0x4                   	// #4
  40346c:	mov	x3, x26
  403470:	bl	40cc7c <__fxstatat@plt+0xa22c>
  403474:	ldr	w8, [x26, x0, lsl #2]
  403478:	cmp	w8, #0x1
  40347c:	b.eq	40354c <__fxstatat@plt+0xafc>  // b.none
  403480:	cmp	w8, #0x2
  403484:	b.ne	40357c <__fxstatat@plt+0xb2c>  // b.any
  403488:	mov	w0, #0x1                   	// #1
  40348c:	bl	402910 <isatty@plt>
  403490:	cmp	w0, #0x0
  403494:	cset	w8, ne  // ne = any
  403498:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40349c:	strb	w8, [x9, #468]
  4034a0:	cbnz	w0, 403558 <__fxstatat@plt+0xb08>
  4034a4:	b	403594 <__fxstatat@plt+0xb44>
  4034a8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4034ac:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4034b0:	ldr	x1, [x8, #1440]
  4034b4:	ldr	x5, [x9, #1304]
  4034b8:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x2ad0>
  4034bc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4034c0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x2ad0>
  4034c4:	add	x26, x26, #0x128
  4034c8:	add	x0, x0, #0x3cc
  4034cc:	add	x2, x2, #0x138
  4034d0:	mov	w4, #0x4                   	// #4
  4034d4:	mov	x3, x26
  4034d8:	bl	40cc7c <__fxstatat@plt+0xa22c>
  4034dc:	ldr	w8, [x26, x0, lsl #2]
  4034e0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4034e4:	str	w8, [x9, #516]
  4034e8:	b	403594 <__fxstatat@plt+0xb44>
  4034ec:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4034f0:	ldr	x1, [x8, #1440]
  4034f4:	cbz	x1, 403574 <__fxstatat@plt+0xb24>
  4034f8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4034fc:	ldr	x5, [x8, #1304]
  403500:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x2ad0>
  403504:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403508:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x2ad0>
  40350c:	add	x26, x26, #0xb0
  403510:	add	x0, x0, #0x3c0
  403514:	add	x2, x2, #0xd8
  403518:	mov	w4, #0x4                   	// #4
  40351c:	mov	x3, x26
  403520:	bl	40cc7c <__fxstatat@plt+0xa22c>
  403524:	ldr	w8, [x26, x0, lsl #2]
  403528:	cmp	w8, #0x1
  40352c:	b.eq	40358c <__fxstatat@plt+0xb3c>  // b.none
  403530:	cmp	w8, #0x2
  403534:	b.ne	403588 <__fxstatat@plt+0xb38>  // b.any
  403538:	mov	w0, #0x1                   	// #1
  40353c:	bl	402910 <isatty@plt>
  403540:	cmp	w0, #0x0
  403544:	cset	w8, ne  // ne = any
  403548:	b	40358c <__fxstatat@plt+0xb3c>
  40354c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403550:	mov	w9, #0x1                   	// #1
  403554:	strb	w9, [x8, #468]
  403558:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40355c:	str	xzr, [x8, #688]
  403560:	b	403594 <__fxstatat@plt+0xb44>
  403564:	mov	x8, #0xffffffffffffffff    	// #-1
  403568:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40356c:	str	x8, [x9, #680]
  403570:	b	403594 <__fxstatat@plt+0xb44>
  403574:	mov	w8, #0x1                   	// #1
  403578:	b	40358c <__fxstatat@plt+0xb3c>
  40357c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403580:	strb	wzr, [x8, #468]
  403584:	b	403594 <__fxstatat@plt+0xb44>
  403588:	mov	w8, wzr
  40358c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403590:	strb	w8, [x9, #484]
  403594:	mov	w8, w28
  403598:	mov	w28, w8
  40359c:	b	402e98 <__fxstatat@plt+0x448>
  4035a0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4035a4:	ldr	x8, [x8, #696]
  4035a8:	adrp	x26, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4035ac:	add	x26, x26, #0x1d0
  4035b0:	cbnz	x8, 403610 <__fxstatat@plt+0xbc0>
  4035b4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4035b8:	add	x0, x0, #0x420
  4035bc:	bl	4029f0 <getenv@plt>
  4035c0:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4035c4:	add	x23, x23, #0x21c
  4035c8:	add	x2, x23, #0x9c
  4035cc:	mov	x1, x23
  4035d0:	mov	x24, x0
  4035d4:	bl	40fa24 <__fxstatat@plt+0xcfd4>
  4035d8:	cbnz	x24, 4035ec <__fxstatat@plt+0xb9c>
  4035dc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4035e0:	add	x0, x0, #0x423
  4035e4:	bl	4029f0 <getenv@plt>
  4035e8:	cbz	x0, 403600 <__fxstatat@plt+0xbb0>
  4035ec:	ldr	w8, [x23]
  4035f0:	ldur	x9, [x23, #156]
  4035f4:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4035f8:	str	w8, [x23, #4]
  4035fc:	str	x9, [x10, #880]
  403600:	tbz	w28, #0, 403610 <__fxstatat@plt+0xbc0>
  403604:	mov	w8, #0x400                 	// #1024
  403608:	str	wzr, [x23]
  40360c:	stur	x8, [x23, #156]
  403610:	mov	w25, w21
  403614:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403618:	add	x21, x21, #0x1fc
  40361c:	ldur	x8, [x21, #172]
  403620:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  403624:	movk	x9, #0xaaab
  403628:	mov	x0, xzr
  40362c:	umulh	x9, x8, x9
  403630:	lsr	x9, x9, #1
  403634:	add	x10, x9, x9, lsl #1
  403638:	cmp	x8, x10
  40363c:	cinc	x8, x9, ne  // ne = any
  403640:	stur	x8, [x21, #196]
  403644:	bl	412070 <__fxstatat@plt+0xf620>
  403648:	ldr	w9, [x21]
  40364c:	mov	w23, w0
  403650:	mov	w8, wzr
  403654:	cmp	w9, #0x1
  403658:	b.eq	40368c <__fxstatat@plt+0xc3c>  // b.none
  40365c:	cmp	w9, #0x4
  403660:	b.eq	40368c <__fxstatat@plt+0xc3c>  // b.none
  403664:	cbz	w9, 403674 <__fxstatat@plt+0xc24>
  403668:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40366c:	ldr	x8, [x8, #680]
  403670:	cbz	x8, 40368c <__fxstatat@plt+0xc3c>
  403674:	orr	w8, w23, #0x2
  403678:	cmp	w8, #0x3
  40367c:	cset	w8, eq  // eq = none
  403680:	cmp	w23, #0x6
  403684:	cset	w9, eq  // eq = none
  403688:	orr	w8, w9, w8
  40368c:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403690:	add	x21, x21, #0x1f0
  403694:	mov	x0, xzr
  403698:	strb	w8, [x21]
  40369c:	bl	412024 <__fxstatat@plt+0xf5d4>
  4036a0:	cmp	w23, #0x7
  4036a4:	str	x0, [x21, #160]
  4036a8:	b.ne	4036b8 <__fxstatat@plt+0xc68>  // b.any
  4036ac:	mov	w1, #0x20                  	// #32
  4036b0:	mov	w2, #0x1                   	// #1
  4036b4:	bl	4120a0 <__fxstatat@plt+0xf650>
  4036b8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4036bc:	ldr	w8, [x8, #516]
  4036c0:	subs	w8, w8, #0x2
  4036c4:	b.cc	4036f8 <__fxstatat@plt+0xca8>  // b.lo, b.ul, b.last
  4036c8:	cmp	w8, #0x5
  4036cc:	b.eq	4036f8 <__fxstatat@plt+0xca8>  // b.none
  4036d0:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4036d4:	add	x9, x9, #0x42e
  4036d8:	add	x23, x9, x8
  4036dc:	ldrb	w1, [x23], #1
  4036e0:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4036e4:	ldr	x0, [x24, #656]
  4036e8:	mov	w2, #0x1                   	// #1
  4036ec:	bl	4120a0 <__fxstatat@plt+0xf650>
  4036f0:	ldrb	w1, [x23], #1
  4036f4:	cbnz	w1, 4036e4 <__fxstatat@plt+0xc94>
  4036f8:	mov	x0, xzr
  4036fc:	bl	412024 <__fxstatat@plt+0xf5d4>
  403700:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403704:	add	x21, x21, #0x1e1
  403708:	mov	w1, #0x3a                  	// #58
  40370c:	mov	w2, #0x1                   	// #1
  403710:	stur	x0, [x21, #231]
  403714:	bl	4120a0 <__fxstatat@plt+0xf650>
  403718:	ldrb	w8, [x21]
  40371c:	cmp	w8, #0x1
  403720:	b.ne	403744 <__fxstatat@plt+0xcf4>  // b.any
  403724:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403728:	add	x8, x8, #0x1e4
  40372c:	ldr	w9, [x8, #24]
  403730:	cbnz	w9, 40373c <__fxstatat@plt+0xcec>
  403734:	ldrb	w8, [x8]
  403738:	cbz	w8, 403744 <__fxstatat@plt+0xcf4>
  40373c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403740:	strb	wzr, [x8, #481]
  403744:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403748:	ldr	w8, [x8, #532]
  40374c:	sub	w8, w8, #0x1
  403750:	cmp	w8, #0x1
  403754:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403758:	b.hi	40377c <__fxstatat@plt+0xd2c>  // b.pmore
  40375c:	ldr	w8, [x8, #508]
  403760:	cbz	w8, 403780 <__fxstatat@plt+0xd30>
  403764:	eor	w9, w25, #0x1
  403768:	tbz	w9, #0, 403780 <__fxstatat@plt+0xd30>
  40376c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403770:	mov	w9, #0x4                   	// #4
  403774:	str	w9, [x8, #520]
  403778:	b	403f94 <__fxstatat@plt+0x1544>
  40377c:	ldr	w8, [x8, #508]
  403780:	ldr	x21, [sp, #96]
  403784:	cbnz	w8, 403f94 <__fxstatat@plt+0x1544>
  403788:	cbnz	x21, 4037a8 <__fxstatat@plt+0xd58>
  40378c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403790:	add	x0, x0, #0x434
  403794:	bl	4029f0 <getenv@plt>
  403798:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40379c:	add	x8, x8, #0x53b
  4037a0:	cmp	x0, #0x0
  4037a4:	csel	x21, x8, x0, eq  // eq = none
  4037a8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x2ad0>
  4037ac:	add	x1, x1, #0x160
  4037b0:	mov	w2, #0x6                   	// #6
  4037b4:	mov	x0, x21
  4037b8:	bl	402640 <strncmp@plt>
  4037bc:	cbnz	w0, 4037ec <__fxstatat@plt+0xd9c>
  4037c0:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x2ad0>
  4037c4:	add	x23, x23, #0x160
  4037c8:	mov	w0, #0x2                   	// #2
  4037cc:	bl	40dfa0 <__fxstatat@plt+0xb550>
  4037d0:	tbz	w0, #0, 403f94 <__fxstatat@plt+0x1544>
  4037d4:	add	x21, x21, #0x6
  4037d8:	mov	w2, #0x6                   	// #6
  4037dc:	mov	x0, x21
  4037e0:	mov	x1, x23
  4037e4:	bl	402640 <strncmp@plt>
  4037e8:	cbz	w0, 4037c8 <__fxstatat@plt+0xd78>
  4037ec:	ldrb	w8, [x21]
  4037f0:	cmp	w8, #0x2b
  4037f4:	b.ne	40383c <__fxstatat@plt+0xdec>  // b.any
  4037f8:	add	x22, x21, #0x1
  4037fc:	mov	w1, #0xa                   	// #10
  403800:	mov	x0, x22
  403804:	bl	402870 <strchr@plt>
  403808:	mov	x23, x22
  40380c:	cbz	x0, 40382c <__fxstatat@plt+0xddc>
  403810:	add	x23, x0, #0x1
  403814:	mov	x24, x0
  403818:	mov	w1, #0xa                   	// #10
  40381c:	mov	x0, x23
  403820:	bl	402870 <strchr@plt>
  403824:	cbnz	x0, 405904 <__fxstatat@plt+0x2eb4>
  403828:	strb	wzr, [x24]
  40382c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403830:	add	x8, x8, #0x378
  403834:	stp	x22, x23, [x8]
  403838:	b	403908 <__fxstatat@plt+0xeb8>
  40383c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x2ad0>
  403840:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x2ad0>
  403844:	add	x1, x1, #0x168
  403848:	add	x2, x2, #0x190
  40384c:	mov	w3, #0x4                   	// #4
  403850:	mov	x0, x21
  403854:	bl	40c96c <__fxstatat@plt+0x9f1c>
  403858:	mov	x2, x0
  40385c:	tbnz	x0, #63, 405848 <__fxstatat@plt+0x2df8>
  403860:	cmp	x2, #0x3
  403864:	b.hi	403908 <__fxstatat@plt+0xeb8>  // b.pmore
  403868:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x1ad0>
  40386c:	add	x8, x8, #0x898
  403870:	adr	x9, 403880 <__fxstatat@plt+0xe30>
  403874:	ldrb	w10, [x8, x2]
  403878:	add	x9, x9, x10, lsl #2
  40387c:	br	x9
  403880:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403884:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403888:	add	x8, x8, #0x378
  40388c:	add	x9, x9, #0x4c3
  403890:	b	403904 <__fxstatat@plt+0xeb4>
  403894:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403898:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40389c:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4038a0:	add	x8, x8, #0x378
  4038a4:	add	x9, x9, #0x4ea
  4038a8:	add	x10, x10, #0x4de
  4038ac:	stp	x9, x10, [x8]
  4038b0:	b	403908 <__fxstatat@plt+0xeb8>
  4038b4:	mov	w0, #0x2                   	// #2
  4038b8:	bl	40dfa0 <__fxstatat@plt+0xb550>
  4038bc:	tbz	w0, #0, 403908 <__fxstatat@plt+0xeb8>
  4038c0:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4038c4:	add	x21, x21, #0x378
  4038c8:	ldr	x1, [x21]
  4038cc:	mov	w2, #0x2                   	// #2
  4038d0:	mov	x0, xzr
  4038d4:	bl	402970 <dcgettext@plt>
  4038d8:	ldr	x1, [x21, #8]
  4038dc:	str	x0, [x21]
  4038e0:	mov	w2, #0x2                   	// #2
  4038e4:	mov	x0, xzr
  4038e8:	bl	402970 <dcgettext@plt>
  4038ec:	str	x0, [x21, #8]
  4038f0:	b	403908 <__fxstatat@plt+0xeb8>
  4038f4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4038f8:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4038fc:	add	x8, x8, #0x378
  403900:	add	x9, x9, #0x4db
  403904:	stp	x9, x9, [x8]
  403908:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40390c:	ldr	x21, [x8, #888]
  403910:	b	40391c <__fxstatat@plt+0xecc>
  403914:	cbz	w8, 40394c <__fxstatat@plt+0xefc>
  403918:	add	x21, x21, #0x1
  40391c:	ldrb	w8, [x21]
  403920:	cmp	w8, #0x25
  403924:	b.ne	403914 <__fxstatat@plt+0xec4>  // b.any
  403928:	mov	x8, x21
  40392c:	ldrb	w9, [x8, #1]!
  403930:	cmp	w9, #0x25
  403934:	b.eq	403944 <__fxstatat@plt+0xef4>  // b.none
  403938:	cmp	w9, #0x62
  40393c:	b.ne	403918 <__fxstatat@plt+0xec8>  // b.any
  403940:	b	403950 <__fxstatat@plt+0xf00>
  403944:	mov	x21, x8
  403948:	b	403918 <__fxstatat@plt+0xec8>
  40394c:	mov	x21, xzr
  403950:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403954:	ldr	x25, [x8, #896]
  403958:	ldrb	w8, [x25]
  40395c:	cmp	w8, #0x25
  403960:	b.ne	4039a4 <__fxstatat@plt+0xf54>  // b.any
  403964:	b	403974 <__fxstatat@plt+0xf24>
  403968:	ldrb	w8, [x25, #1]!
  40396c:	cmp	w8, #0x25
  403970:	b.ne	4039a4 <__fxstatat@plt+0xf54>  // b.any
  403974:	mov	x8, x25
  403978:	ldrb	w9, [x8, #1]!
  40397c:	cmp	w9, #0x25
  403980:	b.eq	403990 <__fxstatat@plt+0xf40>  // b.none
  403984:	cmp	w9, #0x62
  403988:	b.ne	403968 <__fxstatat@plt+0xf18>  // b.any
  40398c:	b	4039b0 <__fxstatat@plt+0xf60>
  403990:	mov	x25, x8
  403994:	add	x25, x8, #0x1
  403998:	ldrb	w8, [x25]
  40399c:	cmp	w8, #0x25
  4039a0:	b.eq	403974 <__fxstatat@plt+0xf24>  // b.none
  4039a4:	cbnz	w8, 403968 <__fxstatat@plt+0xf18>
  4039a8:	cbz	x21, 403f94 <__fxstatat@plt+0x1544>
  4039ac:	mov	x25, xzr
  4039b0:	mov	w26, #0xe                   	// #14
  4039b4:	mov	w24, #0xc                   	// #12
  4039b8:	movk	w26, #0x2, lsl #16
  4039bc:	mov	x28, xzr
  4039c0:	mov	x27, xzr
  4039c4:	add	x22, sp, #0x70
  4039c8:	add	w0, w28, w26
  4039cc:	stur	x24, [x29, #-16]
  4039d0:	bl	4025e0 <nl_langinfo@plt>
  4039d4:	mov	w1, #0x25                  	// #37
  4039d8:	mov	x23, x0
  4039dc:	bl	402870 <strchr@plt>
  4039e0:	cbnz	x0, 403f8c <__fxstatat@plt+0x153c>
  4039e4:	bl	402820 <__ctype_b_loc@plt>
  4039e8:	ldr	x8, [x0]
  4039ec:	ldrb	w9, [x23]
  4039f0:	sub	x3, x29, #0x10
  4039f4:	mov	w2, #0x80                  	// #128
  4039f8:	mov	x0, x23
  4039fc:	ldrh	w8, [x8, x9, lsl #1]
  403a00:	mov	x1, x22
  403a04:	mov	w5, wzr
  403a08:	ubfx	w4, w8, #11, #1
  403a0c:	bl	40ffd8 <__fxstatat@plt+0xd588>
  403a10:	cmp	x0, #0x7f
  403a14:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403a18:	ldur	x8, [x29, #-16]
  403a1c:	add	x28, x28, #0x1
  403a20:	add	x22, x22, #0x80
  403a24:	cmp	x27, x8
  403a28:	csel	x27, x27, x8, hi  // hi = pmore
  403a2c:	cmp	x28, #0xc
  403a30:	b.ne	4039c8 <__fxstatat@plt+0xf78>  // b.any
  403a34:	cmp	x24, x27
  403a38:	mov	x24, x27
  403a3c:	b.hi	4039bc <__fxstatat@plt+0xf6c>  // b.pmore
  403a40:	add	x9, sp, #0x70
  403a44:	add	x10, x9, #0x80
  403a48:	str	x10, [sp, #96]
  403a4c:	add	x10, x9, #0x100
  403a50:	str	x10, [sp, #88]
  403a54:	add	x10, x9, #0x180
  403a58:	str	x10, [sp, #80]
  403a5c:	add	x10, x9, #0x200
  403a60:	str	x10, [sp, #72]
  403a64:	add	x10, x9, #0x280
  403a68:	str	x10, [sp, #64]
  403a6c:	add	x10, x9, #0x300
  403a70:	str	x10, [sp, #56]
  403a74:	add	x10, x9, #0x380
  403a78:	str	x10, [sp, #48]
  403a7c:	add	x10, x9, #0x400
  403a80:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403a84:	str	x10, [sp, #40]
  403a88:	add	x10, x9, #0x480
  403a8c:	mov	x8, xzr
  403a90:	mov	w28, #0x600                 	// #1536
  403a94:	add	x27, x27, #0x5d0
  403a98:	str	x10, [sp, #32]
  403a9c:	add	x10, x9, #0x500
  403aa0:	add	x9, x9, #0x580
  403aa4:	stp	x9, x10, [sp, #16]
  403aa8:	mov	x23, x8
  403aac:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403ab0:	add	x8, x8, #0x368
  403ab4:	add	x8, x8, x23, lsl #3
  403ab8:	ldr	x24, [x8, #16]
  403abc:	cbz	x21, 403d68 <__fxstatat@plt+0x1318>
  403ac0:	sub	x26, x21, x24
  403ac4:	cmp	x26, #0x80
  403ac8:	b.gt	403f8c <__fxstatat@plt+0x153c>
  403acc:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403ad0:	add	x22, x21, #0x2
  403ad4:	madd	x0, x23, x28, x27
  403ad8:	add	x7, sp, #0x70
  403adc:	mov	w1, #0x80                  	// #128
  403ae0:	mov	w2, #0x1                   	// #1
  403ae4:	mov	x3, #0xffffffffffffffff    	// #-1
  403ae8:	add	x4, x4, #0x750
  403aec:	mov	w5, w26
  403af0:	mov	x6, x24
  403af4:	str	x22, [sp]
  403af8:	bl	4025c0 <__snprintf_chk@plt>
  403afc:	cmp	w0, #0x7f
  403b00:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403b04:	ldr	x7, [sp, #96]
  403b08:	madd	x8, x23, x28, x27
  403b0c:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403b10:	add	x0, x8, #0x80
  403b14:	mov	w1, #0x80                  	// #128
  403b18:	mov	w2, #0x1                   	// #1
  403b1c:	mov	x3, #0xffffffffffffffff    	// #-1
  403b20:	add	x4, x4, #0x750
  403b24:	mov	w5, w26
  403b28:	mov	x6, x24
  403b2c:	str	x22, [sp]
  403b30:	bl	4025c0 <__snprintf_chk@plt>
  403b34:	cmp	w0, #0x80
  403b38:	b.cs	403f8c <__fxstatat@plt+0x153c>  // b.hs, b.nlast
  403b3c:	ldr	x7, [sp, #88]
  403b40:	madd	x8, x23, x28, x27
  403b44:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403b48:	add	x0, x8, #0x100
  403b4c:	mov	w1, #0x80                  	// #128
  403b50:	mov	w2, #0x1                   	// #1
  403b54:	mov	x3, #0xffffffffffffffff    	// #-1
  403b58:	add	x4, x4, #0x750
  403b5c:	mov	w5, w26
  403b60:	mov	x6, x24
  403b64:	str	x22, [sp]
  403b68:	bl	4025c0 <__snprintf_chk@plt>
  403b6c:	cmp	w0, #0x7f
  403b70:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403b74:	ldr	x7, [sp, #80]
  403b78:	madd	x8, x23, x28, x27
  403b7c:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403b80:	add	x0, x8, #0x180
  403b84:	mov	w1, #0x80                  	// #128
  403b88:	mov	w2, #0x1                   	// #1
  403b8c:	mov	x3, #0xffffffffffffffff    	// #-1
  403b90:	add	x4, x4, #0x750
  403b94:	mov	w5, w26
  403b98:	mov	x6, x24
  403b9c:	str	x22, [sp]
  403ba0:	bl	4025c0 <__snprintf_chk@plt>
  403ba4:	cmp	w0, #0x7f
  403ba8:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403bac:	ldr	x7, [sp, #72]
  403bb0:	madd	x8, x23, x28, x27
  403bb4:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403bb8:	add	x0, x8, #0x200
  403bbc:	mov	w1, #0x80                  	// #128
  403bc0:	mov	w2, #0x1                   	// #1
  403bc4:	mov	x3, #0xffffffffffffffff    	// #-1
  403bc8:	add	x4, x4, #0x750
  403bcc:	mov	w5, w26
  403bd0:	mov	x6, x24
  403bd4:	str	x22, [sp]
  403bd8:	bl	4025c0 <__snprintf_chk@plt>
  403bdc:	cmp	w0, #0x7f
  403be0:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403be4:	ldr	x7, [sp, #64]
  403be8:	madd	x8, x23, x28, x27
  403bec:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403bf0:	add	x0, x8, #0x280
  403bf4:	mov	w1, #0x80                  	// #128
  403bf8:	mov	w2, #0x1                   	// #1
  403bfc:	mov	x3, #0xffffffffffffffff    	// #-1
  403c00:	add	x4, x4, #0x750
  403c04:	mov	w5, w26
  403c08:	mov	x6, x24
  403c0c:	str	x22, [sp]
  403c10:	bl	4025c0 <__snprintf_chk@plt>
  403c14:	cmp	w0, #0x7f
  403c18:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403c1c:	ldr	x7, [sp, #56]
  403c20:	madd	x8, x23, x28, x27
  403c24:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403c28:	add	x0, x8, #0x300
  403c2c:	mov	w1, #0x80                  	// #128
  403c30:	mov	w2, #0x1                   	// #1
  403c34:	mov	x3, #0xffffffffffffffff    	// #-1
  403c38:	add	x4, x4, #0x750
  403c3c:	mov	w5, w26
  403c40:	mov	x6, x24
  403c44:	str	x22, [sp]
  403c48:	bl	4025c0 <__snprintf_chk@plt>
  403c4c:	cmp	w0, #0x7f
  403c50:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403c54:	ldr	x7, [sp, #48]
  403c58:	madd	x8, x23, x28, x27
  403c5c:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403c60:	add	x0, x8, #0x380
  403c64:	mov	w1, #0x80                  	// #128
  403c68:	mov	w2, #0x1                   	// #1
  403c6c:	mov	x3, #0xffffffffffffffff    	// #-1
  403c70:	add	x4, x4, #0x750
  403c74:	mov	w5, w26
  403c78:	mov	x6, x24
  403c7c:	str	x22, [sp]
  403c80:	bl	4025c0 <__snprintf_chk@plt>
  403c84:	cmp	w0, #0x7f
  403c88:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403c8c:	ldr	x7, [sp, #40]
  403c90:	madd	x8, x23, x28, x27
  403c94:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403c98:	add	x0, x8, #0x400
  403c9c:	mov	w1, #0x80                  	// #128
  403ca0:	mov	w2, #0x1                   	// #1
  403ca4:	mov	x3, #0xffffffffffffffff    	// #-1
  403ca8:	add	x4, x4, #0x750
  403cac:	mov	w5, w26
  403cb0:	mov	x6, x24
  403cb4:	str	x22, [sp]
  403cb8:	bl	4025c0 <__snprintf_chk@plt>
  403cbc:	cmp	w0, #0x7f
  403cc0:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403cc4:	ldr	x7, [sp, #32]
  403cc8:	madd	x8, x23, x28, x27
  403ccc:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403cd0:	add	x0, x8, #0x480
  403cd4:	mov	w1, #0x80                  	// #128
  403cd8:	mov	w2, #0x1                   	// #1
  403cdc:	mov	x3, #0xffffffffffffffff    	// #-1
  403ce0:	add	x4, x4, #0x750
  403ce4:	mov	w5, w26
  403ce8:	mov	x6, x24
  403cec:	str	x22, [sp]
  403cf0:	bl	4025c0 <__snprintf_chk@plt>
  403cf4:	cmp	w0, #0x7f
  403cf8:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403cfc:	ldr	x7, [sp, #24]
  403d00:	madd	x8, x23, x28, x27
  403d04:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403d08:	add	x0, x8, #0x500
  403d0c:	mov	w1, #0x80                  	// #128
  403d10:	mov	w2, #0x1                   	// #1
  403d14:	mov	x3, #0xffffffffffffffff    	// #-1
  403d18:	add	x4, x4, #0x750
  403d1c:	mov	w5, w26
  403d20:	mov	x6, x24
  403d24:	str	x22, [sp]
  403d28:	bl	4025c0 <__snprintf_chk@plt>
  403d2c:	cmp	w0, #0x7f
  403d30:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403d34:	ldr	x7, [sp, #16]
  403d38:	madd	x8, x23, x28, x27
  403d3c:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403d40:	add	x0, x8, #0x580
  403d44:	mov	w1, #0x80                  	// #128
  403d48:	mov	w2, #0x1                   	// #1
  403d4c:	mov	x3, #0xffffffffffffffff    	// #-1
  403d50:	add	x4, x4, #0x750
  403d54:	mov	w5, w26
  403d58:	mov	x6, x24
  403d5c:	str	x22, [sp]
  403d60:	bl	4025c0 <__snprintf_chk@plt>
  403d64:	b	403f6c <__fxstatat@plt+0x151c>
  403d68:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403d6c:	madd	x0, x23, x28, x27
  403d70:	mov	w1, #0x80                  	// #128
  403d74:	mov	w2, #0x1                   	// #1
  403d78:	mov	x3, #0xffffffffffffffff    	// #-1
  403d7c:	add	x4, x4, #0xc0f
  403d80:	mov	x5, x24
  403d84:	bl	4025c0 <__snprintf_chk@plt>
  403d88:	cmp	w0, #0x7f
  403d8c:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403d90:	madd	x8, x23, x28, x27
  403d94:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403d98:	add	x0, x8, #0x80
  403d9c:	mov	w1, #0x80                  	// #128
  403da0:	mov	w2, #0x1                   	// #1
  403da4:	mov	x3, #0xffffffffffffffff    	// #-1
  403da8:	add	x4, x4, #0xc0f
  403dac:	mov	x5, x24
  403db0:	bl	4025c0 <__snprintf_chk@plt>
  403db4:	cmp	w0, #0x80
  403db8:	b.cs	403f8c <__fxstatat@plt+0x153c>  // b.hs, b.nlast
  403dbc:	madd	x8, x23, x28, x27
  403dc0:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403dc4:	add	x0, x8, #0x100
  403dc8:	mov	w1, #0x80                  	// #128
  403dcc:	mov	w2, #0x1                   	// #1
  403dd0:	mov	x3, #0xffffffffffffffff    	// #-1
  403dd4:	add	x4, x4, #0xc0f
  403dd8:	mov	x5, x24
  403ddc:	bl	4025c0 <__snprintf_chk@plt>
  403de0:	cmp	w0, #0x7f
  403de4:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403de8:	madd	x8, x23, x28, x27
  403dec:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403df0:	add	x0, x8, #0x180
  403df4:	mov	w1, #0x80                  	// #128
  403df8:	mov	w2, #0x1                   	// #1
  403dfc:	mov	x3, #0xffffffffffffffff    	// #-1
  403e00:	add	x4, x4, #0xc0f
  403e04:	mov	x5, x24
  403e08:	bl	4025c0 <__snprintf_chk@plt>
  403e0c:	cmp	w0, #0x7f
  403e10:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403e14:	madd	x8, x23, x28, x27
  403e18:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403e1c:	add	x0, x8, #0x200
  403e20:	mov	w1, #0x80                  	// #128
  403e24:	mov	w2, #0x1                   	// #1
  403e28:	mov	x3, #0xffffffffffffffff    	// #-1
  403e2c:	add	x4, x4, #0xc0f
  403e30:	mov	x5, x24
  403e34:	bl	4025c0 <__snprintf_chk@plt>
  403e38:	cmp	w0, #0x7f
  403e3c:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403e40:	madd	x8, x23, x28, x27
  403e44:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403e48:	add	x0, x8, #0x280
  403e4c:	mov	w1, #0x80                  	// #128
  403e50:	mov	w2, #0x1                   	// #1
  403e54:	mov	x3, #0xffffffffffffffff    	// #-1
  403e58:	add	x4, x4, #0xc0f
  403e5c:	mov	x5, x24
  403e60:	bl	4025c0 <__snprintf_chk@plt>
  403e64:	cmp	w0, #0x7f
  403e68:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403e6c:	madd	x8, x23, x28, x27
  403e70:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403e74:	add	x0, x8, #0x300
  403e78:	mov	w1, #0x80                  	// #128
  403e7c:	mov	w2, #0x1                   	// #1
  403e80:	mov	x3, #0xffffffffffffffff    	// #-1
  403e84:	add	x4, x4, #0xc0f
  403e88:	mov	x5, x24
  403e8c:	bl	4025c0 <__snprintf_chk@plt>
  403e90:	cmp	w0, #0x7f
  403e94:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403e98:	madd	x8, x23, x28, x27
  403e9c:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403ea0:	add	x0, x8, #0x380
  403ea4:	mov	w1, #0x80                  	// #128
  403ea8:	mov	w2, #0x1                   	// #1
  403eac:	mov	x3, #0xffffffffffffffff    	// #-1
  403eb0:	add	x4, x4, #0xc0f
  403eb4:	mov	x5, x24
  403eb8:	bl	4025c0 <__snprintf_chk@plt>
  403ebc:	cmp	w0, #0x7f
  403ec0:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403ec4:	madd	x8, x23, x28, x27
  403ec8:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403ecc:	add	x0, x8, #0x400
  403ed0:	mov	w1, #0x80                  	// #128
  403ed4:	mov	w2, #0x1                   	// #1
  403ed8:	mov	x3, #0xffffffffffffffff    	// #-1
  403edc:	add	x4, x4, #0xc0f
  403ee0:	mov	x5, x24
  403ee4:	bl	4025c0 <__snprintf_chk@plt>
  403ee8:	cmp	w0, #0x7f
  403eec:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403ef0:	madd	x8, x23, x28, x27
  403ef4:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403ef8:	add	x0, x8, #0x480
  403efc:	mov	w1, #0x80                  	// #128
  403f00:	mov	w2, #0x1                   	// #1
  403f04:	mov	x3, #0xffffffffffffffff    	// #-1
  403f08:	add	x4, x4, #0xc0f
  403f0c:	mov	x5, x24
  403f10:	bl	4025c0 <__snprintf_chk@plt>
  403f14:	cmp	w0, #0x7f
  403f18:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403f1c:	madd	x8, x23, x28, x27
  403f20:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403f24:	add	x0, x8, #0x500
  403f28:	mov	w1, #0x80                  	// #128
  403f2c:	mov	w2, #0x1                   	// #1
  403f30:	mov	x3, #0xffffffffffffffff    	// #-1
  403f34:	add	x4, x4, #0xc0f
  403f38:	mov	x5, x24
  403f3c:	bl	4025c0 <__snprintf_chk@plt>
  403f40:	cmp	w0, #0x7f
  403f44:	b.hi	403f8c <__fxstatat@plt+0x153c>  // b.pmore
  403f48:	madd	x8, x23, x28, x27
  403f4c:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403f50:	add	x0, x8, #0x580
  403f54:	mov	w1, #0x80                  	// #128
  403f58:	mov	w2, #0x1                   	// #1
  403f5c:	mov	x3, #0xffffffffffffffff    	// #-1
  403f60:	add	x4, x4, #0xc0f
  403f64:	mov	x5, x24
  403f68:	bl	4025c0 <__snprintf_chk@plt>
  403f6c:	cmp	w0, #0x80
  403f70:	b.cs	403f8c <__fxstatat@plt+0x153c>  // b.hs, b.nlast
  403f74:	mov	x21, x25
  403f78:	mov	w8, #0x1                   	// #1
  403f7c:	cbz	x23, 403aa8 <__fxstatat@plt+0x1058>
  403f80:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403f84:	mov	w9, #0x1                   	// #1
  403f88:	strb	w9, [x8, #497]
  403f8c:	adrp	x26, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403f90:	add	x26, x26, #0x1d0
  403f94:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403f98:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403f9c:	ldrb	w9, [x9, #468]
  403fa0:	ldrsw	x21, [x8, #1448]
  403fa4:	cbz	w9, 40460c <__fxstatat@plt+0x1bbc>
  403fa8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  403fac:	add	x0, x0, #0x759
  403fb0:	bl	4029f0 <getenv@plt>
  403fb4:	str	x0, [sp, #112]
  403fb8:	cbz	x0, 4044ec <__fxstatat@plt+0x1a9c>
  403fbc:	ldrb	w8, [x0]
  403fc0:	cbz	w8, 4044ec <__fxstatat@plt+0x1a9c>
  403fc4:	mov	w8, #0x3f3f                	// #16191
  403fc8:	sturb	wzr, [x29, #-18]
  403fcc:	sturh	w8, [x29, #-20]
  403fd0:	bl	41464c <__fxstatat@plt+0x11bfc>
  403fd4:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x1ad0>
  403fd8:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  403fdc:	mov	x22, xzr
  403fe0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403fe4:	mov	w8, #0x1                   	// #1
  403fe8:	add	x25, x25, #0x89c
  403fec:	adrp	x26, 42e000 <__progname@@GLIBC_2.17+0xa48>
  403ff0:	mov	w27, #0x6                   	// #6
  403ff4:	mov	w23, #0x636c                	// #25452
  403ff8:	add	x28, x28, #0x368
  403ffc:	stur	x0, [x29, #-16]
  404000:	str	x0, [x9, #720]
  404004:	sub	w8, w8, #0x1
  404008:	cmp	w8, #0x5
  40400c:	b.hi	4057c8 <__fxstatat@plt+0x2d78>  // b.pmore
  404010:	adr	x9, 404020 <__fxstatat@plt+0x15d0>
  404014:	ldrh	w10, [x25, x8, lsl #1]
  404018:	add	x9, x9, x10, lsl #2
  40401c:	br	x9
  404020:	ldr	x24, [sp, #112]
  404024:	ldrb	w8, [x24]
  404028:	cmp	w8, #0x2a
  40402c:	b.eq	404388 <__fxstatat@plt+0x1938>  // b.none
  404030:	cmp	w8, #0x3a
  404034:	b.eq	404378 <__fxstatat@plt+0x1928>  // b.none
  404038:	cbz	w8, 4045d8 <__fxstatat@plt+0x1b88>
  40403c:	add	x9, x24, #0x1
  404040:	sturb	w8, [x29, #-20]
  404044:	str	x9, [sp, #112]
  404048:	mov	w8, #0x2                   	// #2
  40404c:	b	404004 <__fxstatat@plt+0x15b4>
  404050:	ldr	x8, [sp, #112]
  404054:	add	x9, x8, #0x1
  404058:	str	x9, [sp, #112]
  40405c:	ldrb	w8, [x8]
  404060:	cmp	w8, #0x3d
  404064:	mov	w8, #0x6                   	// #6
  404068:	b.ne	404004 <__fxstatat@plt+0x15b4>  // b.any
  40406c:	ldur	x8, [x29, #-16]
  404070:	add	x3, x22, #0x10
  404074:	sub	x0, x29, #0x10
  404078:	add	x1, sp, #0x70
  40407c:	mov	w2, wzr
  404080:	str	x8, [x22, #24]
  404084:	bl	408c10 <__fxstatat@plt+0x61c0>
  404088:	tst	w0, #0x1
  40408c:	csinc	w8, w27, wzr, eq  // eq = none
  404090:	b	404004 <__fxstatat@plt+0x15b4>
  404094:	ldr	x10, [sp, #112]
  404098:	mov	w8, #0x6                   	// #6
  40409c:	ldrb	w9, [x10]
  4040a0:	cbz	w9, 404004 <__fxstatat@plt+0x15b4>
  4040a4:	add	x8, x10, #0x1
  4040a8:	sturb	w9, [x29, #-19]
  4040ac:	str	x8, [sp, #112]
  4040b0:	mov	w8, #0x3                   	// #3
  4040b4:	b	404004 <__fxstatat@plt+0x15b4>
  4040b8:	ldr	x8, [sp, #112]
  4040bc:	add	x9, x8, #0x1
  4040c0:	str	x9, [sp, #112]
  4040c4:	ldrb	w8, [x8]
  4040c8:	cmp	w8, #0x3d
  4040cc:	mov	w8, #0x6                   	// #6
  4040d0:	b.ne	404004 <__fxstatat@plt+0x15b4>  // b.any
  4040d4:	ldurh	w8, [x29, #-20]
  4040d8:	ldurb	w9, [x29, #-18]
  4040dc:	eor	w8, w8, w23
  4040e0:	orr	w8, w8, w9
  4040e4:	tst	w8, #0xffff
  4040e8:	b.eq	4043d4 <__fxstatat@plt+0x1984>  // b.none
  4040ec:	ldurh	w8, [x29, #-20]
  4040f0:	ldurb	w9, [x29, #-18]
  4040f4:	mov	w10, #0x6372                	// #25458
  4040f8:	eor	w8, w8, w10
  4040fc:	orr	w8, w8, w9
  404100:	tst	w8, #0xffff
  404104:	b.eq	4043dc <__fxstatat@plt+0x198c>  // b.none
  404108:	ldurh	w8, [x29, #-20]
  40410c:	ldurb	w9, [x29, #-18]
  404110:	mov	w10, #0x6365                	// #25445
  404114:	eor	w8, w8, w10
  404118:	orr	w8, w8, w9
  40411c:	tst	w8, #0xffff
  404120:	b.eq	4043e4 <__fxstatat@plt+0x1994>  // b.none
  404124:	ldurh	w8, [x29, #-20]
  404128:	ldurb	w9, [x29, #-18]
  40412c:	mov	w10, #0x7372                	// #29554
  404130:	eor	w8, w8, w10
  404134:	orr	w8, w8, w9
  404138:	tst	w8, #0xffff
  40413c:	b.eq	4043ec <__fxstatat@plt+0x199c>  // b.none
  404140:	ldurh	w8, [x29, #-20]
  404144:	ldurb	w9, [x29, #-18]
  404148:	mov	w10, #0x6f6e                	// #28526
  40414c:	eor	w8, w8, w10
  404150:	orr	w8, w8, w9
  404154:	tst	w8, #0xffff
  404158:	b.eq	4043f4 <__fxstatat@plt+0x19a4>  // b.none
  40415c:	ldurh	w8, [x29, #-20]
  404160:	ldurb	w9, [x29, #-18]
  404164:	mov	w10, #0x6966                	// #26982
  404168:	eor	w8, w8, w10
  40416c:	orr	w8, w8, w9
  404170:	tst	w8, #0xffff
  404174:	b.eq	4043fc <__fxstatat@plt+0x19ac>  // b.none
  404178:	ldurh	w8, [x29, #-20]
  40417c:	ldurb	w9, [x29, #-18]
  404180:	mov	w10, #0x6964                	// #26980
  404184:	eor	w8, w8, w10
  404188:	orr	w8, w8, w9
  40418c:	tst	w8, #0xffff
  404190:	b.eq	404404 <__fxstatat@plt+0x19b4>  // b.none
  404194:	ldurh	w8, [x29, #-20]
  404198:	ldurb	w9, [x29, #-18]
  40419c:	mov	w10, #0x6e6c                	// #28268
  4041a0:	eor	w8, w8, w10
  4041a4:	orr	w8, w8, w9
  4041a8:	tst	w8, #0xffff
  4041ac:	b.eq	40440c <__fxstatat@plt+0x19bc>  // b.none
  4041b0:	ldurh	w8, [x29, #-20]
  4041b4:	ldurb	w9, [x29, #-18]
  4041b8:	mov	w10, #0x6970                	// #26992
  4041bc:	eor	w8, w8, w10
  4041c0:	orr	w8, w8, w9
  4041c4:	tst	w8, #0xffff
  4041c8:	b.eq	404414 <__fxstatat@plt+0x19c4>  // b.none
  4041cc:	ldurh	w8, [x29, #-20]
  4041d0:	ldurb	w9, [x29, #-18]
  4041d4:	mov	w10, #0x6f73                	// #28531
  4041d8:	eor	w8, w8, w10
  4041dc:	orr	w8, w8, w9
  4041e0:	tst	w8, #0xffff
  4041e4:	b.eq	40441c <__fxstatat@plt+0x19cc>  // b.none
  4041e8:	ldurh	w8, [x29, #-20]
  4041ec:	ldurb	w9, [x29, #-18]
  4041f0:	mov	w10, #0x6462                	// #25698
  4041f4:	eor	w8, w8, w10
  4041f8:	orr	w8, w8, w9
  4041fc:	tst	w8, #0xffff
  404200:	b.eq	404424 <__fxstatat@plt+0x19d4>  // b.none
  404204:	ldurh	w8, [x29, #-20]
  404208:	ldurb	w9, [x29, #-18]
  40420c:	mov	w10, #0x6463                	// #25699
  404210:	eor	w8, w8, w10
  404214:	orr	w8, w8, w9
  404218:	tst	w8, #0xffff
  40421c:	b.eq	40442c <__fxstatat@plt+0x19dc>  // b.none
  404220:	ldurh	w8, [x29, #-20]
  404224:	ldurb	w9, [x29, #-18]
  404228:	mov	w10, #0x696d                	// #26989
  40422c:	eor	w8, w8, w10
  404230:	orr	w8, w8, w9
  404234:	tst	w8, #0xffff
  404238:	b.eq	404434 <__fxstatat@plt+0x19e4>  // b.none
  40423c:	ldurh	w8, [x29, #-20]
  404240:	ldurb	w9, [x29, #-18]
  404244:	mov	w10, #0x726f                	// #29295
  404248:	eor	w8, w8, w10
  40424c:	orr	w8, w8, w9
  404250:	tst	w8, #0xffff
  404254:	b.eq	40443c <__fxstatat@plt+0x19ec>  // b.none
  404258:	ldurh	w8, [x29, #-20]
  40425c:	ldurb	w9, [x29, #-18]
  404260:	mov	w10, #0x7865                	// #30821
  404264:	eor	w8, w8, w10
  404268:	orr	w8, w8, w9
  40426c:	tst	w8, #0xffff
  404270:	b.eq	404444 <__fxstatat@plt+0x19f4>  // b.none
  404274:	ldurh	w8, [x29, #-20]
  404278:	ldurb	w9, [x29, #-18]
  40427c:	mov	w10, #0x6f64                	// #28516
  404280:	eor	w8, w8, w10
  404284:	orr	w8, w8, w9
  404288:	tst	w8, #0xffff
  40428c:	b.eq	40444c <__fxstatat@plt+0x19fc>  // b.none
  404290:	ldurh	w8, [x29, #-20]
  404294:	ldurb	w9, [x29, #-18]
  404298:	mov	w10, #0x7573                	// #30067
  40429c:	eor	w8, w8, w10
  4042a0:	orr	w8, w8, w9
  4042a4:	tst	w8, #0xffff
  4042a8:	b.eq	404454 <__fxstatat@plt+0x1a04>  // b.none
  4042ac:	ldurh	w8, [x29, #-20]
  4042b0:	ldurb	w9, [x29, #-18]
  4042b4:	mov	w10, #0x6773                	// #26483
  4042b8:	eor	w8, w8, w10
  4042bc:	orr	w8, w8, w9
  4042c0:	tst	w8, #0xffff
  4042c4:	b.eq	40445c <__fxstatat@plt+0x1a0c>  // b.none
  4042c8:	ldurh	w8, [x29, #-20]
  4042cc:	ldurb	w9, [x29, #-18]
  4042d0:	mov	w10, #0x7473                	// #29811
  4042d4:	eor	w8, w8, w10
  4042d8:	orr	w8, w8, w9
  4042dc:	tst	w8, #0xffff
  4042e0:	b.eq	404464 <__fxstatat@plt+0x1a14>  // b.none
  4042e4:	ldurh	w8, [x29, #-20]
  4042e8:	ldurb	w9, [x29, #-18]
  4042ec:	mov	w10, #0x776f                	// #30575
  4042f0:	eor	w8, w8, w10
  4042f4:	orr	w8, w8, w9
  4042f8:	tst	w8, #0xffff
  4042fc:	b.eq	40446c <__fxstatat@plt+0x1a1c>  // b.none
  404300:	ldurh	w8, [x29, #-20]
  404304:	ldurb	w9, [x29, #-18]
  404308:	mov	w10, #0x7774                	// #30580
  40430c:	eor	w8, w8, w10
  404310:	orr	w8, w8, w9
  404314:	tst	w8, #0xffff
  404318:	b.eq	404474 <__fxstatat@plt+0x1a24>  // b.none
  40431c:	ldurh	w8, [x29, #-20]
  404320:	ldurb	w9, [x29, #-18]
  404324:	mov	w10, #0x6163                	// #24931
  404328:	eor	w8, w8, w10
  40432c:	orr	w8, w8, w9
  404330:	tst	w8, #0xffff
  404334:	b.eq	40447c <__fxstatat@plt+0x1a2c>  // b.none
  404338:	ldurh	w8, [x29, #-20]
  40433c:	ldurb	w9, [x29, #-18]
  404340:	mov	w10, #0x686d                	// #26733
  404344:	eor	w8, w8, w10
  404348:	orr	w8, w8, w9
  40434c:	tst	w8, #0xffff
  404350:	b.eq	404484 <__fxstatat@plt+0x1a34>  // b.none
  404354:	ldurh	w8, [x29, #-20]
  404358:	ldurb	w9, [x29, #-18]
  40435c:	mov	w10, #0x6c63                	// #27747
  404360:	eor	w8, w8, w10
  404364:	orr	w8, w8, w9
  404368:	tst	w8, #0xffff
  40436c:	b.ne	4044b0 <__fxstatat@plt+0x1a60>  // b.any
  404370:	mov	w8, #0x17                  	// #23
  404374:	b	404488 <__fxstatat@plt+0x1a38>
  404378:	add	x8, x24, #0x1
  40437c:	str	x8, [sp, #112]
  404380:	mov	w8, #0x1                   	// #1
  404384:	b	404004 <__fxstatat@plt+0x15b4>
  404388:	mov	w0, #0x28                  	// #40
  40438c:	bl	414368 <__fxstatat@plt+0x11918>
  404390:	ldr	x8, [x26, #728]
  404394:	ldur	x9, [x29, #-16]
  404398:	mov	x22, x0
  40439c:	str	x0, [x26, #728]
  4043a0:	add	x10, x24, #0x1
  4043a4:	str	x8, [x0, #32]
  4043a8:	str	x9, [x0, #8]
  4043ac:	sub	x0, x29, #0x10
  4043b0:	add	x1, sp, #0x70
  4043b4:	mov	w2, #0x1                   	// #1
  4043b8:	mov	x3, x22
  4043bc:	str	x10, [sp, #112]
  4043c0:	bl	408c10 <__fxstatat@plt+0x61c0>
  4043c4:	tst	w0, #0x1
  4043c8:	mov	w8, #0x4                   	// #4
  4043cc:	csel	w8, w8, w27, ne  // ne = any
  4043d0:	b	404004 <__fxstatat@plt+0x15b4>
  4043d4:	mov	x8, xzr
  4043d8:	b	404488 <__fxstatat@plt+0x1a38>
  4043dc:	mov	w8, #0x1                   	// #1
  4043e0:	b	404488 <__fxstatat@plt+0x1a38>
  4043e4:	mov	w8, #0x2                   	// #2
  4043e8:	b	404488 <__fxstatat@plt+0x1a38>
  4043ec:	mov	w8, #0x3                   	// #3
  4043f0:	b	404488 <__fxstatat@plt+0x1a38>
  4043f4:	mov	w8, #0x4                   	// #4
  4043f8:	b	404488 <__fxstatat@plt+0x1a38>
  4043fc:	mov	w8, #0x5                   	// #5
  404400:	b	404488 <__fxstatat@plt+0x1a38>
  404404:	mov	w8, #0x6                   	// #6
  404408:	b	404488 <__fxstatat@plt+0x1a38>
  40440c:	mov	w8, #0x7                   	// #7
  404410:	b	404488 <__fxstatat@plt+0x1a38>
  404414:	mov	w8, #0x8                   	// #8
  404418:	b	404488 <__fxstatat@plt+0x1a38>
  40441c:	mov	w8, #0x9                   	// #9
  404420:	b	404488 <__fxstatat@plt+0x1a38>
  404424:	mov	w8, #0xa                   	// #10
  404428:	b	404488 <__fxstatat@plt+0x1a38>
  40442c:	mov	w8, #0xb                   	// #11
  404430:	b	404488 <__fxstatat@plt+0x1a38>
  404434:	mov	w8, #0xc                   	// #12
  404438:	b	404488 <__fxstatat@plt+0x1a38>
  40443c:	mov	w8, #0xd                   	// #13
  404440:	b	404488 <__fxstatat@plt+0x1a38>
  404444:	mov	w8, #0xe                   	// #14
  404448:	b	404488 <__fxstatat@plt+0x1a38>
  40444c:	mov	w8, #0xf                   	// #15
  404450:	b	404488 <__fxstatat@plt+0x1a38>
  404454:	mov	w8, #0x10                  	// #16
  404458:	b	404488 <__fxstatat@plt+0x1a38>
  40445c:	mov	w8, #0x11                  	// #17
  404460:	b	404488 <__fxstatat@plt+0x1a38>
  404464:	mov	w8, #0x12                  	// #18
  404468:	b	404488 <__fxstatat@plt+0x1a38>
  40446c:	mov	w8, #0x13                  	// #19
  404470:	b	404488 <__fxstatat@plt+0x1a38>
  404474:	mov	w8, #0x14                  	// #20
  404478:	b	404488 <__fxstatat@plt+0x1a38>
  40447c:	mov	w8, #0x15                  	// #21
  404480:	b	404488 <__fxstatat@plt+0x1a38>
  404484:	mov	w8, #0x16                  	// #22
  404488:	ldur	x9, [x29, #-16]
  40448c:	add	x8, x28, x8, lsl #4
  404490:	add	x3, x8, #0x20
  404494:	sub	x0, x29, #0x10
  404498:	add	x1, sp, #0x70
  40449c:	mov	w2, wzr
  4044a0:	str	x9, [x8, #40]
  4044a4:	bl	408c10 <__fxstatat@plt+0x61c0>
  4044a8:	mov	w8, #0x1                   	// #1
  4044ac:	tbnz	w0, #0, 404004 <__fxstatat@plt+0x15b4>
  4044b0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4044b4:	mov	w2, #0x5                   	// #5
  4044b8:	mov	x0, xzr
  4044bc:	add	x1, x1, #0x770
  4044c0:	bl	402970 <dcgettext@plt>
  4044c4:	mov	x24, x0
  4044c8:	sub	x0, x29, #0x14
  4044cc:	bl	413aa8 <__fxstatat@plt+0x11058>
  4044d0:	mov	x3, x0
  4044d4:	mov	w0, wzr
  4044d8:	mov	w1, wzr
  4044dc:	mov	x2, x24
  4044e0:	bl	402490 <error@plt>
  4044e4:	mov	w8, #0x6                   	// #6
  4044e8:	b	404004 <__fxstatat@plt+0x15b4>
  4044ec:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4044f0:	add	x0, x0, #0x763
  4044f4:	bl	4029f0 <getenv@plt>
  4044f8:	cbz	x0, 404504 <__fxstatat@plt+0x1ab4>
  4044fc:	ldrb	w8, [x0]
  404500:	cbnz	w8, 40460c <__fxstatat@plt+0x1bbc>
  404504:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404508:	add	x0, x0, #0x768
  40450c:	bl	4029f0 <getenv@plt>
  404510:	cbz	x0, 40462c <__fxstatat@plt+0x1bdc>
  404514:	ldrb	w8, [x0]
  404518:	mov	x22, x0
  40451c:	cbz	w8, 40462c <__fxstatat@plt+0x1bdc>
  404520:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x2ad0>
  404524:	add	x25, x25, #0x1a0
  404528:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40452c:	add	x23, x23, #0x7c3
  404530:	mov	x24, x25
  404534:	b	404558 <__fxstatat@plt+0x1b08>
  404538:	mov	x0, x24
  40453c:	bl	402430 <strlen@plt>
  404540:	add	x8, x0, x24
  404544:	add	x24, x8, #0x1
  404548:	sub	x8, x24, x25
  40454c:	lsr	x8, x8, #2
  404550:	cmp	x8, #0x431
  404554:	b.cs	40462c <__fxstatat@plt+0x1bdc>  // b.hs, b.nlast
  404558:	mov	w2, #0x5                   	// #5
  40455c:	mov	x0, x24
  404560:	mov	x1, x23
  404564:	bl	402640 <strncmp@plt>
  404568:	cbnz	w0, 404538 <__fxstatat@plt+0x1ae8>
  40456c:	add	x0, x24, #0x5
  404570:	mov	x1, x22
  404574:	mov	w2, wzr
  404578:	bl	402890 <fnmatch@plt>
  40457c:	cbnz	w0, 404538 <__fxstatat@plt+0x1ae8>
  404580:	b	40460c <__fxstatat@plt+0x1bbc>
  404584:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404588:	add	x1, x1, #0x788
  40458c:	mov	w2, #0x5                   	// #5
  404590:	mov	x0, xzr
  404594:	bl	402970 <dcgettext@plt>
  404598:	mov	x2, x0
  40459c:	mov	w0, wzr
  4045a0:	mov	w1, wzr
  4045a4:	bl	402490 <error@plt>
  4045a8:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4045ac:	add	x22, x22, #0x2d0
  4045b0:	ldr	x0, [x22]
  4045b4:	bl	402840 <free@plt>
  4045b8:	ldr	x0, [x22, #8]
  4045bc:	cbz	x0, 4045d0 <__fxstatat@plt+0x1b80>
  4045c0:	ldr	x22, [x0, #32]
  4045c4:	bl	402840 <free@plt>
  4045c8:	mov	x0, x22
  4045cc:	cbnz	x22, 4045c0 <__fxstatat@plt+0x1b70>
  4045d0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4045d4:	strb	wzr, [x8, #468]
  4045d8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4045dc:	ldr	x8, [x8, #1016]
  4045e0:	adrp	x26, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4045e4:	add	x26, x26, #0x1d0
  4045e8:	cmp	x8, #0x6
  4045ec:	b.ne	40460c <__fxstatat@plt+0x1bbc>  // b.any
  4045f0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4045f4:	ldr	x0, [x8, #1024]
  4045f8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4045fc:	add	x1, x1, #0x7bc
  404600:	mov	w2, #0x6                   	// #6
  404604:	bl	402640 <strncmp@plt>
  404608:	cbz	w0, 4046cc <__fxstatat@plt+0x1c7c>
  40460c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404610:	ldrb	w8, [x8, #469]
  404614:	cmp	w8, #0x1
  404618:	b.ne	404644 <__fxstatat@plt+0x1bf4>  // b.any
  40461c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404620:	mov	w9, #0x1                   	// #1
  404624:	strb	w9, [x8, #470]
  404628:	b	404770 <__fxstatat@plt+0x1d20>
  40462c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404630:	strb	wzr, [x8, #468]
  404634:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404638:	ldrb	w8, [x8, #469]
  40463c:	cmp	w8, #0x1
  404640:	b.eq	40461c <__fxstatat@plt+0x1bcc>  // b.none
  404644:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404648:	ldrb	w8, [x8, #468]
  40464c:	cbz	w8, 404770 <__fxstatat@plt+0x1d20>
  404650:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  404654:	add	x9, x9, #0x458
  404658:	ldr	x8, [x9]
  40465c:	cbz	x8, 404698 <__fxstatat@plt+0x1c48>
  404660:	ldr	x0, [x9, #8]
  404664:	cmp	x8, #0x2
  404668:	b.eq	404684 <__fxstatat@plt+0x1c34>  // b.none
  40466c:	cmp	x8, #0x1
  404670:	b.ne	40461c <__fxstatat@plt+0x1bcc>  // b.any
  404674:	ldrb	w8, [x0]
  404678:	cmp	w8, #0x30
  40467c:	b.ne	40461c <__fxstatat@plt+0x1bcc>  // b.any
  404680:	b	404698 <__fxstatat@plt+0x1c48>
  404684:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404688:	add	x1, x1, #0x20e
  40468c:	mov	w2, #0x2                   	// #2
  404690:	bl	402640 <strncmp@plt>
  404694:	cbnz	w0, 40461c <__fxstatat@plt+0x1bcc>
  404698:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40469c:	add	x9, x9, #0x468
  4046a0:	ldr	x8, [x9]
  4046a4:	cbz	x8, 40470c <__fxstatat@plt+0x1cbc>
  4046a8:	ldr	x0, [x9, #8]
  4046ac:	cmp	x8, #0x2
  4046b0:	b.eq	4046ec <__fxstatat@plt+0x1c9c>  // b.none
  4046b4:	cmp	x8, #0x1
  4046b8:	b.ne	404700 <__fxstatat@plt+0x1cb0>  // b.any
  4046bc:	ldrb	w8, [x0]
  4046c0:	cmp	w8, #0x30
  4046c4:	b.ne	404700 <__fxstatat@plt+0x1cb0>  // b.any
  4046c8:	b	40470c <__fxstatat@plt+0x1cbc>
  4046cc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4046d0:	mov	w9, #0x1                   	// #1
  4046d4:	strb	w9, [x8, #471]
  4046d8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4046dc:	ldrb	w8, [x8, #469]
  4046e0:	cmp	w8, #0x1
  4046e4:	b.ne	404644 <__fxstatat@plt+0x1bf4>  // b.any
  4046e8:	b	40461c <__fxstatat@plt+0x1bcc>
  4046ec:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4046f0:	add	x1, x1, #0x20e
  4046f4:	mov	w2, #0x2                   	// #2
  4046f8:	bl	402640 <strncmp@plt>
  4046fc:	cbz	w0, 40470c <__fxstatat@plt+0x1cbc>
  404700:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404704:	ldrb	w8, [x8, #471]
  404708:	tbnz	w8, #0, 40461c <__fxstatat@plt+0x1bcc>
  40470c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  404710:	add	x9, x9, #0x448
  404714:	ldr	x8, [x9]
  404718:	cbz	x8, 404770 <__fxstatat@plt+0x1d20>
  40471c:	ldr	x0, [x9, #8]
  404720:	cmp	x8, #0x2
  404724:	b.eq	404748 <__fxstatat@plt+0x1cf8>  // b.none
  404728:	cmp	x8, #0x1
  40472c:	b.ne	40473c <__fxstatat@plt+0x1cec>  // b.any
  404730:	ldrb	w8, [x0]
  404734:	cmp	w8, #0x30
  404738:	b.eq	404770 <__fxstatat@plt+0x1d20>  // b.none
  40473c:	mov	w8, #0x1                   	// #1
  404740:	cbnz	w8, 404764 <__fxstatat@plt+0x1d14>
  404744:	b	404770 <__fxstatat@plt+0x1d20>
  404748:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40474c:	add	x1, x1, #0x20e
  404750:	mov	w2, #0x2                   	// #2
  404754:	bl	402640 <strncmp@plt>
  404758:	cmp	w0, #0x0
  40475c:	cset	w8, ne  // ne = any
  404760:	cbz	w8, 404770 <__fxstatat@plt+0x1d20>
  404764:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404768:	ldr	w8, [x8, #508]
  40476c:	cbz	w8, 40461c <__fxstatat@plt+0x1bcc>
  404770:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404774:	ldr	w8, [x8, #512]
  404778:	cmp	w8, #0x1
  40477c:	b.ne	4047c0 <__fxstatat@plt+0x1d70>  // b.any
  404780:	adrp	x12, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404784:	add	x12, x12, #0x1d8
  404788:	ldr	w8, [x12, #44]
  40478c:	ldr	w10, [x12, #36]
  404790:	ldrb	w9, [x12]
  404794:	mov	w11, #0x4                   	// #4
  404798:	cmp	w8, #0x3
  40479c:	cset	w8, eq  // eq = none
  4047a0:	cmp	w10, #0x0
  4047a4:	orr	w8, w9, w8
  4047a8:	cset	w9, eq  // eq = none
  4047ac:	orr	w8, w8, w9
  4047b0:	tst	w8, #0x1
  4047b4:	mov	w8, #0x2                   	// #2
  4047b8:	csel	w8, w8, w11, ne  // ne = any
  4047bc:	str	w8, [x12, #40]
  4047c0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4047c4:	ldrb	w8, [x8, #473]
  4047c8:	cmp	w8, #0x1
  4047cc:	b.ne	404824 <__fxstatat@plt+0x1dd4>  // b.any
  4047d0:	adrp	x2, 405000 <__fxstatat@plt+0x25b0>
  4047d4:	adrp	x3, 405000 <__fxstatat@plt+0x25b0>
  4047d8:	adrp	x4, 405000 <__fxstatat@plt+0x25b0>
  4047dc:	add	x2, x2, #0x938
  4047e0:	add	x3, x3, #0x948
  4047e4:	add	x4, x4, #0x974
  4047e8:	mov	w0, #0x1e                  	// #30
  4047ec:	mov	x1, xzr
  4047f0:	bl	40e4c4 <__fxstatat@plt+0xba74>
  4047f4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4047f8:	str	x0, [x8, #600]
  4047fc:	cbz	x0, 4057cc <__fxstatat@plt+0x2d7c>
  404800:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404804:	adrp	x3, 402000 <mbrtowc@plt-0x3b0>
  404808:	adrp	x4, 402000 <mbrtowc@plt-0x3b0>
  40480c:	add	x0, x0, #0x330
  404810:	add	x3, x3, #0x5f0
  404814:	add	x4, x4, #0x840
  404818:	mov	x1, xzr
  40481c:	mov	x2, xzr
  404820:	bl	4151b8 <_obstack_begin@@Base>
  404824:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  404828:	add	x0, x0, #0x542
  40482c:	bl	4029f0 <getenv@plt>
  404830:	bl	4155a4 <_obstack_memory_used@@Base+0x74>
  404834:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404838:	add	x9, x9, #0x1fc
  40483c:	ldr	w8, [x9]
  404840:	stur	x0, [x9, #100]
  404844:	cbz	w8, 404860 <__fxstatat@plt+0x1e10>
  404848:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40484c:	ldr	w8, [x8, #520]
  404850:	cmp	w8, #0x4
  404854:	b.eq	404860 <__fxstatat@plt+0x1e10>  // b.none
  404858:	cmp	w8, #0x2
  40485c:	b.ne	404a7c <__fxstatat@plt+0x202c>  // b.any
  404860:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404864:	mov	w10, #0x1                   	// #1
  404868:	mov	w8, wzr
  40486c:	strb	w10, [x9, #476]
  404870:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404874:	add	x9, x9, #0x1e0
  404878:	ldrb	w10, [x9, #1]
  40487c:	and	w8, w8, #0x1
  404880:	strb	w8, [x9]
  404884:	cmp	w10, #0x1
  404888:	b.ne	4048d4 <__fxstatat@plt+0x1e84>  // b.any
  40488c:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404890:	adrp	x23, 402000 <mbrtowc@plt-0x3b0>
  404894:	adrp	x24, 402000 <mbrtowc@plt-0x3b0>
  404898:	add	x22, x22, #0x388
  40489c:	add	x23, x23, #0x5f0
  4048a0:	add	x24, x24, #0x840
  4048a4:	mov	x0, x22
  4048a8:	mov	x1, xzr
  4048ac:	mov	x2, xzr
  4048b0:	mov	x3, x23
  4048b4:	mov	x4, x24
  4048b8:	bl	4151b8 <_obstack_begin@@Base>
  4048bc:	add	x0, x22, #0x58
  4048c0:	mov	x1, xzr
  4048c4:	mov	x2, xzr
  4048c8:	mov	x3, x23
  4048cc:	mov	x4, x24
  4048d0:	bl	4151b8 <_obstack_begin@@Base>
  4048d4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4048d8:	ldrb	w8, [x8, #484]
  4048dc:	cbz	w8, 404958 <__fxstatat@plt+0x1f08>
  4048e0:	mov	x22, xzr
  4048e4:	b	404908 <__fxstatat@plt+0x1eb8>
  4048e8:	mov	w8, #0x1                   	// #1
  4048ec:	add	x9, x26, x22
  4048f0:	ldrb	w10, [x9, #744]
  4048f4:	add	x22, x22, #0x1
  4048f8:	cmp	x22, #0x100
  4048fc:	orr	w8, w10, w8
  404900:	strb	w8, [x9, #744]
  404904:	b.eq	40493c <__fxstatat@plt+0x1eec>  // b.none
  404908:	mov	w0, w22
  40490c:	bl	40cdd4 <__fxstatat@plt+0xa384>
  404910:	tbnz	w0, #0, 4048e8 <__fxstatat@plt+0x1e98>
  404914:	sub	w8, w22, #0x2d
  404918:	cmp	w8, #0x2
  40491c:	mov	w8, #0x1                   	// #1
  404920:	b.cc	4048ec <__fxstatat@plt+0x1e9c>  // b.lo, b.ul, b.last
  404924:	cmp	w22, #0x5f
  404928:	b.eq	4048ec <__fxstatat@plt+0x1e9c>  // b.none
  40492c:	cmp	w22, #0x7e
  404930:	b.eq	4048ec <__fxstatat@plt+0x1e9c>  // b.none
  404934:	mov	w8, wzr
  404938:	b	4048ec <__fxstatat@plt+0x1e9c>
  40493c:	bl	41483c <__fxstatat@plt+0x11dec>
  404940:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404944:	cmp	x0, #0x0
  404948:	add	x8, x8, #0x8d1
  40494c:	csel	x8, x8, x0, eq  // eq = none
  404950:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404954:	str	x8, [x9, #616]
  404958:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40495c:	add	x23, x23, #0x1f3
  404960:	mov	w8, #0x64                  	// #100
  404964:	mov	w0, #0x47e0                	// #18400
  404968:	stur	x8, [x23, #125]
  40496c:	bl	414368 <__fxstatat@plt+0x11918>
  404970:	sub	w22, w20, w21
  404974:	movi	v0.2d, #0x0
  404978:	cmp	w22, #0x1
  40497c:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404980:	stur	x0, [x23, #133]
  404984:	stur	xzr, [x23, #141]
  404988:	strh	wzr, [x23]
  40498c:	stur	xzr, [x23, #81]
  404990:	stur	q0, [x23, #49]
  404994:	stur	q0, [x23, #65]
  404998:	b.lt	404a40 <__fxstatat@plt+0x1ff0>  // b.tstop
  40499c:	sxtw	x23, w20
  4049a0:	adrp	x20, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4049a4:	add	x20, x20, #0x8d1
  4049a8:	ldr	x0, [x19, x21, lsl #3]
  4049ac:	mov	w2, #0x1                   	// #1
  4049b0:	mov	w1, wzr
  4049b4:	mov	x3, x20
  4049b8:	add	x21, x21, #0x1
  4049bc:	bl	405978 <__fxstatat@plt+0x2f28>
  4049c0:	cmp	x21, x23
  4049c4:	b.lt	4049a8 <__fxstatat@plt+0x1f58>  // b.tstop
  4049c8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4049cc:	ldr	x8, [x8, #640]
  4049d0:	cbz	x8, 404ae4 <__fxstatat@plt+0x2094>
  4049d4:	bl	4068f0 <__fxstatat@plt+0x3ea0>
  4049d8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4049dc:	ldrb	w8, [x8, #472]
  4049e0:	tbnz	w8, #0, 4049f0 <__fxstatat@plt+0x1fa0>
  4049e4:	mov	w1, #0x1                   	// #1
  4049e8:	mov	x0, xzr
  4049ec:	bl	406b74 <__fxstatat@plt+0x4124>
  4049f0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4049f4:	ldr	x8, [x8, #640]
  4049f8:	cbz	x8, 404ae4 <__fxstatat@plt+0x2094>
  4049fc:	bl	406e5c <__fxstatat@plt+0x440c>
  404a00:	ldr	x19, [x24, #592]
  404a04:	cbz	x19, 4053fc <__fxstatat@plt+0x29ac>
  404a08:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  404a0c:	ldr	x0, [x8, #1456]
  404a10:	ldp	x8, x9, [x0, #40]
  404a14:	cmp	x8, x9
  404a18:	b.cs	405700 <__fxstatat@plt+0x2cb0>  // b.hs, b.nlast
  404a1c:	add	x9, x8, #0x1
  404a20:	mov	w10, #0xa                   	// #10
  404a24:	str	x9, [x0, #40]
  404a28:	strb	w10, [x8]
  404a2c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404a30:	ldr	x9, [x8, #648]
  404a34:	add	x9, x9, #0x1
  404a38:	str	x9, [x8, #648]
  404a3c:	b	404b08 <__fxstatat@plt+0x20b8>
  404a40:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404a44:	ldrb	w8, [x8, #472]
  404a48:	cmp	w8, #0x1
  404a4c:	b.ne	404aa4 <__fxstatat@plt+0x2054>  // b.any
  404a50:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404a54:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404a58:	add	x0, x0, #0xcba
  404a5c:	add	x3, x3, #0x8d1
  404a60:	mov	w1, #0x3                   	// #3
  404a64:	mov	w2, #0x1                   	// #1
  404a68:	bl	405978 <__fxstatat@plt+0x2f28>
  404a6c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404a70:	ldr	x8, [x8, #640]
  404a74:	cbnz	x8, 4049d4 <__fxstatat@plt+0x1f84>
  404a78:	b	404ae4 <__fxstatat@plt+0x2094>
  404a7c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404a80:	add	x8, x8, #0x1da
  404a84:	ldrb	w9, [x8]
  404a88:	ldrb	w10, [x8, #1]
  404a8c:	orr	w9, w9, w10
  404a90:	and	w10, w9, #0x1
  404a94:	strb	w10, [x8, #2]
  404a98:	tbz	w9, #0, 4056ac <__fxstatat@plt+0x2c5c>
  404a9c:	mov	w8, wzr
  404aa0:	b	404870 <__fxstatat@plt+0x1e20>
  404aa4:	mov	w0, #0x20                  	// #32
  404aa8:	bl	414368 <__fxstatat@plt+0x11918>
  404aac:	mov	x19, x0
  404ab0:	str	xzr, [x0, #8]
  404ab4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404ab8:	add	x0, x0, #0xcba
  404abc:	bl	41464c <__fxstatat@plt+0x11bfc>
  404ac0:	ldr	x8, [x24, #592]
  404ac4:	mov	w9, #0x1                   	// #1
  404ac8:	str	x0, [x19]
  404acc:	strb	w9, [x19, #16]
  404ad0:	str	x8, [x19, #24]
  404ad4:	str	x19, [x24, #592]
  404ad8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404adc:	ldr	x8, [x8, #640]
  404ae0:	cbnz	x8, 4049d4 <__fxstatat@plt+0x1f84>
  404ae4:	ldr	x19, [x24, #592]
  404ae8:	cmp	w22, #0x1
  404aec:	b.gt	404b08 <__fxstatat@plt+0x20b8>
  404af0:	cbz	x19, 404b08 <__fxstatat@plt+0x20b8>
  404af4:	ldr	x8, [x19, #24]
  404af8:	cbnz	x8, 404b0c <__fxstatat@plt+0x20bc>
  404afc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404b00:	strb	wzr, [x8, #464]
  404b04:	b	404b0c <__fxstatat@plt+0x20bc>
  404b08:	cbz	x19, 4053fc <__fxstatat@plt+0x29ac>
  404b0c:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404b10:	adrp	x26, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404b14:	add	x20, x20, #0x250
  404b18:	add	x26, x26, #0x280
  404b1c:	b	404ba0 <__fxstatat@plt+0x2150>
  404b20:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404b24:	mov	w2, #0x5                   	// #5
  404b28:	add	x1, x1, #0x802
  404b2c:	bl	402970 <dcgettext@plt>
  404b30:	ldr	w21, [x23]
  404b34:	mov	x23, x0
  404b38:	mov	w0, #0x4                   	// #4
  404b3c:	mov	x1, x28
  404b40:	bl	413644 <__fxstatat@plt+0x10bf4>
  404b44:	mov	x3, x0
  404b48:	mov	w0, wzr
  404b4c:	mov	w1, w21
  404b50:	mov	x2, x23
  404b54:	bl	402490 <error@plt>
  404b58:	cbz	w22, 404d58 <__fxstatat@plt+0x2308>
  404b5c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404b60:	mov	w9, #0x2                   	// #2
  404b64:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404b68:	str	w9, [x8, #504]
  404b6c:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404b70:	add	x20, x20, #0x250
  404b74:	ldr	x0, [x19]
  404b78:	bl	402840 <free@plt>
  404b7c:	ldr	x0, [x19, #8]
  404b80:	bl	402840 <free@plt>
  404b84:	mov	x0, x19
  404b88:	bl	402840 <free@plt>
  404b8c:	mov	w8, #0x1                   	// #1
  404b90:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404b94:	strb	w8, [x9, #464]
  404b98:	ldr	x19, [x24, #592]
  404b9c:	cbz	x19, 4053fc <__fxstatat@plt+0x29ac>
  404ba0:	ldr	x8, [x19, #24]
  404ba4:	ldr	x0, [x20, #8]
  404ba8:	str	x8, [x20]
  404bac:	ldr	x28, [x19]
  404bb0:	cbz	x0, 404c18 <__fxstatat@plt+0x21c8>
  404bb4:	cbnz	x28, 404c18 <__fxstatat@plt+0x21c8>
  404bb8:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404bbc:	add	x9, x9, #0x340
  404bc0:	ldp	x9, x8, [x9]
  404bc4:	sub	x9, x8, x9
  404bc8:	cmp	x9, #0xf
  404bcc:	b.ls	405788 <__fxstatat@plt+0x2d38>  // b.plast
  404bd0:	sub	x9, x8, #0x10
  404bd4:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404bd8:	str	x9, [x10, #840]
  404bdc:	ldur	q0, [x8, #-16]
  404be0:	add	x1, sp, #0x70
  404be4:	str	q0, [sp, #112]
  404be8:	bl	40ef9c <__fxstatat@plt+0xc54c>
  404bec:	cbz	x0, 4057a8 <__fxstatat@plt+0x2d58>
  404bf0:	bl	402840 <free@plt>
  404bf4:	ldr	x0, [x19]
  404bf8:	bl	402840 <free@plt>
  404bfc:	ldr	x0, [x19, #8]
  404c00:	bl	402840 <free@plt>
  404c04:	mov	x0, x19
  404c08:	bl	402840 <free@plt>
  404c0c:	ldr	x19, [x24, #592]
  404c10:	cbnz	x19, 404ba0 <__fxstatat@plt+0x2150>
  404c14:	b	4053fc <__fxstatat@plt+0x29ac>
  404c18:	ldr	x25, [x19, #8]
  404c1c:	ldrb	w22, [x19, #16]
  404c20:	bl	4029e0 <__errno_location@plt>
  404c24:	mov	x23, x0
  404c28:	str	wzr, [x0]
  404c2c:	mov	x0, x28
  404c30:	bl	4024f0 <opendir@plt>
  404c34:	cbz	x0, 404b20 <__fxstatat@plt+0x20d0>
  404c38:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404c3c:	ldr	x8, [x8, #600]
  404c40:	mov	x27, x0
  404c44:	cbz	x8, 404dd0 <__fxstatat@plt+0x2380>
  404c48:	mov	x0, x27
  404c4c:	bl	4028d0 <dirfd@plt>
  404c50:	tbnz	w0, #31, 404ce8 <__fxstatat@plt+0x2298>
  404c54:	mov	w1, w0
  404c58:	add	x2, sp, #0x70
  404c5c:	mov	w0, wzr
  404c60:	bl	402960 <__fxstat@plt>
  404c64:	tbnz	w0, #31, 404cfc <__fxstatat@plt+0x22ac>
  404c68:	ldp	x20, x24, [sp, #112]
  404c6c:	mov	w0, #0x10                  	// #16
  404c70:	bl	414368 <__fxstatat@plt+0x11918>
  404c74:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404c78:	mov	x21, x0
  404c7c:	ldr	x0, [x8, #600]
  404c80:	mov	x1, x21
  404c84:	stp	x24, x20, [x21]
  404c88:	bl	40ef64 <__fxstatat@plt+0xc514>
  404c8c:	cbz	x0, 4057cc <__fxstatat@plt+0x2d7c>
  404c90:	cmp	x0, x21
  404c94:	b.eq	404d80 <__fxstatat@plt+0x2330>  // b.none
  404c98:	mov	x0, x21
  404c9c:	bl	402840 <free@plt>
  404ca0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404ca4:	mov	w2, #0x5                   	// #5
  404ca8:	mov	x0, xzr
  404cac:	add	x1, x1, #0x843
  404cb0:	bl	402970 <dcgettext@plt>
  404cb4:	mov	x21, x0
  404cb8:	mov	w1, #0x3                   	// #3
  404cbc:	mov	w0, wzr
  404cc0:	mov	x2, x28
  404cc4:	bl	413868 <__fxstatat@plt+0x10e18>
  404cc8:	mov	x3, x0
  404ccc:	mov	w0, wzr
  404cd0:	mov	w1, wzr
  404cd4:	mov	x2, x21
  404cd8:	bl	402490 <error@plt>
  404cdc:	mov	x0, x27
  404ce0:	bl	402710 <closedir@plt>
  404ce4:	b	404b5c <__fxstatat@plt+0x210c>
  404ce8:	add	x2, sp, #0x70
  404cec:	mov	w0, wzr
  404cf0:	mov	x1, x28
  404cf4:	bl	402a00 <__xstat@plt>
  404cf8:	tbz	w0, #31, 404c68 <__fxstatat@plt+0x2218>
  404cfc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404d00:	mov	w2, #0x5                   	// #5
  404d04:	mov	x0, xzr
  404d08:	add	x1, x1, #0x81b
  404d0c:	bl	402970 <dcgettext@plt>
  404d10:	ldr	w21, [x23]
  404d14:	mov	x23, x0
  404d18:	mov	w0, #0x4                   	// #4
  404d1c:	mov	x1, x28
  404d20:	bl	413644 <__fxstatat@plt+0x10bf4>
  404d24:	mov	x3, x0
  404d28:	mov	w0, wzr
  404d2c:	mov	w1, w21
  404d30:	mov	x2, x23
  404d34:	bl	402490 <error@plt>
  404d38:	cbz	w22, 404f3c <__fxstatat@plt+0x24ec>
  404d3c:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d40:	mov	w8, #0x2                   	// #2
  404d44:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d48:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d4c:	add	x20, x20, #0x250
  404d50:	str	w8, [x9, #504]
  404d54:	b	404f54 <__fxstatat@plt+0x2504>
  404d58:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d5c:	ldr	w8, [x8, #504]
  404d60:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d64:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d68:	add	x20, x20, #0x250
  404d6c:	cbnz	w8, 404b74 <__fxstatat@plt+0x2124>
  404d70:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d74:	mov	w9, #0x1                   	// #1
  404d78:	str	w9, [x8, #504]
  404d7c:	b	404b74 <__fxstatat@plt+0x2124>
  404d80:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404d84:	add	x8, x8, #0x348
  404d88:	ldp	x8, x9, [x8]
  404d8c:	ldr	q0, [sp, #112]
  404d90:	sub	x9, x9, x8
  404d94:	cmp	x9, #0xf
  404d98:	ext	v0.16b, v0.16b, v0.16b, #8
  404d9c:	b.hi	404dc0 <__fxstatat@plt+0x2370>  // b.pmore
  404da0:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404da4:	add	x20, x20, #0x330
  404da8:	mov	w1, #0x10                  	// #16
  404dac:	mov	x0, x20
  404db0:	str	q0, [sp, #96]
  404db4:	bl	41530c <_obstack_newchunk@@Base>
  404db8:	ldr	q0, [sp, #96]
  404dbc:	ldr	x8, [x20, #24]
  404dc0:	add	x9, x8, #0x10
  404dc4:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404dc8:	str	x9, [x10, #840]
  404dcc:	str	q0, [x8]
  404dd0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404dd4:	ldr	x8, [x8, #640]
  404dd8:	cbz	x8, 404e10 <__fxstatat@plt+0x23c0>
  404ddc:	mov	x21, xzr
  404de0:	ldr	x8, [x26, #96]
  404de4:	ldr	x20, [x8, x21, lsl #3]
  404de8:	ldr	x0, [x20]
  404dec:	bl	402840 <free@plt>
  404df0:	ldr	x0, [x20, #8]
  404df4:	bl	402840 <free@plt>
  404df8:	ldr	x0, [x20, #16]
  404dfc:	bl	402840 <free@plt>
  404e00:	ldr	x8, [x26]
  404e04:	add	x21, x21, #0x1
  404e08:	cmp	x21, x8
  404e0c:	b.cc	404de0 <__fxstatat@plt+0x2390>  // b.lo, b.ul, b.last
  404e10:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404e14:	add	x9, x9, #0x1d9
  404e18:	ldrb	w8, [x9]
  404e1c:	movi	v0.2d, #0x0
  404e20:	stur	xzr, [x9, #167]
  404e24:	strh	wzr, [x9, #26]
  404e28:	stur	q0, [x9, #75]
  404e2c:	stur	q0, [x9, #91]
  404e30:	stur	xzr, [x9, #107]
  404e34:	tbnz	w8, #0, 404e48 <__fxstatat@plt+0x23f8>
  404e38:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404e3c:	ldrb	w8, [x8, #464]
  404e40:	cmp	w8, #0x1
  404e44:	b.ne	404fc4 <__fxstatat@plt+0x2574>  // b.any
  404e48:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404e4c:	ldrb	w8, [x8, #498]
  404e50:	cmp	w8, #0x1
  404e54:	b.ne	404e8c <__fxstatat@plt+0x243c>  // b.any
  404e58:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  404e5c:	ldr	x0, [x8, #1456]
  404e60:	ldp	x8, x9, [x0, #40]
  404e64:	cmp	x8, x9
  404e68:	b.cs	4053f0 <__fxstatat@plt+0x29a0>  // b.hs, b.nlast
  404e6c:	add	x9, x8, #0x1
  404e70:	str	x9, [x0, #40]
  404e74:	mov	w9, #0xa                   	// #10
  404e78:	strb	w9, [x8]
  404e7c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404e80:	ldr	x8, [x9, #648]
  404e84:	add	x8, x8, #0x1
  404e88:	str	x8, [x9, #648]
  404e8c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404e90:	add	x9, x9, #0x1e1
  404e94:	ldrb	w8, [x9]
  404e98:	cmp	w8, #0x1
  404e9c:	mov	w8, #0x1                   	// #1
  404ea0:	strb	w8, [x9, #17]
  404ea4:	b.ne	404ecc <__fxstatat@plt+0x247c>  // b.any
  404ea8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  404eac:	ldr	x1, [x8, #1456]
  404eb0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404eb4:	add	x0, x0, #0x86c
  404eb8:	bl	402980 <fputs_unlocked@plt>
  404ebc:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404ec0:	ldr	x8, [x9, #648]
  404ec4:	add	x8, x8, #0x2
  404ec8:	str	x8, [x9, #648]
  404ecc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404ed0:	ldrb	w8, [x8, #484]
  404ed4:	cbz	w8, 404f6c <__fxstatat@plt+0x251c>
  404ed8:	mov	w1, #0x2                   	// #2
  404edc:	mov	x0, x28
  404ee0:	bl	40cfe0 <__fxstatat@plt+0xa590>
  404ee4:	mov	x21, x0
  404ee8:	cbnz	x0, 404f70 <__fxstatat@plt+0x2520>
  404eec:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404ef0:	mov	w2, #0x5                   	// #5
  404ef4:	add	x1, x1, #0x86f
  404ef8:	bl	402970 <dcgettext@plt>
  404efc:	ldr	w21, [x23]
  404f00:	mov	x24, x0
  404f04:	mov	w0, #0x4                   	// #4
  404f08:	mov	x1, x28
  404f0c:	bl	413644 <__fxstatat@plt+0x10bf4>
  404f10:	mov	x3, x0
  404f14:	mov	w0, wzr
  404f18:	mov	w1, w21
  404f1c:	mov	x2, x24
  404f20:	bl	402490 <error@plt>
  404f24:	cbz	w22, 404f60 <__fxstatat@plt+0x2510>
  404f28:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404f2c:	mov	w9, #0x2                   	// #2
  404f30:	mov	x21, xzr
  404f34:	str	w9, [x8, #504]
  404f38:	b	404f70 <__fxstatat@plt+0x2520>
  404f3c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404f40:	ldr	w8, [x9, #504]
  404f44:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404f48:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404f4c:	add	x20, x20, #0x250
  404f50:	cbz	w8, 4053c0 <__fxstatat@plt+0x2970>
  404f54:	mov	x0, x27
  404f58:	bl	402710 <closedir@plt>
  404f5c:	b	404b74 <__fxstatat@plt+0x2124>
  404f60:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404f64:	ldr	w8, [x9, #504]
  404f68:	cbz	w8, 4053c8 <__fxstatat@plt+0x2978>
  404f6c:	mov	x21, xzr
  404f70:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404f74:	add	x20, x20, #0x288
  404f78:	ldr	x1, [x20, #64]
  404f7c:	cmp	x25, #0x0
  404f80:	csel	x0, x28, x25, eq  // eq = none
  404f84:	add	x5, x20, #0x158
  404f88:	mov	w2, #0xffffffff            	// #-1
  404f8c:	mov	w4, #0x1                   	// #1
  404f90:	mov	x3, xzr
  404f94:	mov	x6, x21
  404f98:	bl	40907c <__fxstatat@plt+0x662c>
  404f9c:	mov	x0, x21
  404fa0:	bl	402840 <free@plt>
  404fa4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  404fa8:	ldr	x1, [x8, #1456]
  404fac:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  404fb0:	add	x0, x0, #0x47a
  404fb4:	bl	402980 <fputs_unlocked@plt>
  404fb8:	ldr	x8, [x20]
  404fbc:	add	x8, x8, #0x2
  404fc0:	str	x8, [x20]
  404fc4:	mov	x25, xzr
  404fc8:	mov	x0, x27
  404fcc:	str	wzr, [x23]
  404fd0:	bl	4026e0 <readdir@plt>
  404fd4:	cbz	x0, 405180 <__fxstatat@plt+0x2730>
  404fd8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  404fdc:	ldr	w8, [x8, #536]
  404fe0:	mov	x21, x0
  404fe4:	add	x24, x0, #0x13
  404fe8:	cmp	w8, #0x2
  404fec:	b.eq	405020 <__fxstatat@plt+0x25d0>  // b.none
  404ff0:	ldrb	w9, [x24]
  404ff4:	cmp	w9, #0x2e
  404ff8:	b.ne	40501c <__fxstatat@plt+0x25cc>  // b.any
  404ffc:	cbz	w8, 40516c <__fxstatat@plt+0x271c>
  405000:	ldrb	w9, [x21, #20]
  405004:	cmp	w9, #0x2e
  405008:	mov	w9, #0x1                   	// #1
  40500c:	cinc	x9, x9, eq  // eq = none
  405010:	add	x9, x21, x9
  405014:	ldrb	w9, [x9, #19]
  405018:	cbz	w9, 40516c <__fxstatat@plt+0x271c>
  40501c:	cbz	w8, 405128 <__fxstatat@plt+0x26d8>
  405020:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405024:	ldr	x20, [x8, #664]
  405028:	cbz	x20, 405048 <__fxstatat@plt+0x25f8>
  40502c:	ldr	x0, [x20]
  405030:	mov	w2, #0x4                   	// #4
  405034:	mov	x1, x24
  405038:	bl	402890 <fnmatch@plt>
  40503c:	cbz	w0, 40516c <__fxstatat@plt+0x271c>
  405040:	ldr	x20, [x20, #8]
  405044:	cbnz	x20, 40502c <__fxstatat@plt+0x25dc>
  405048:	ldrb	w8, [x21, #18]
  40504c:	sub	w8, w8, #0x1
  405050:	cmp	w8, #0xd
  405054:	b.hi	40506c <__fxstatat@plt+0x261c>  // b.pmore
  405058:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40505c:	sxtb	x8, w8
  405060:	add	x9, x9, #0x4c0
  405064:	ldr	w1, [x9, x8, lsl #2]
  405068:	b	405070 <__fxstatat@plt+0x2620>
  40506c:	mov	w1, wzr
  405070:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405074:	mov	x0, x24
  405078:	mov	w2, wzr
  40507c:	mov	x3, x28
  405080:	add	x20, x20, #0x1fc
  405084:	bl	405978 <__fxstatat@plt+0x2f28>
  405088:	ldr	w8, [x20]
  40508c:	add	x25, x0, x25
  405090:	cmp	w8, #0x1
  405094:	b.ne	40516c <__fxstatat@plt+0x271c>  // b.any
  405098:	ldr	w8, [x20, #12]
  40509c:	cmn	w8, #0x1
  4050a0:	b.ne	40516c <__fxstatat@plt+0x271c>  // b.any
  4050a4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4050a8:	ldrb	w8, [x8, #475]
  4050ac:	tbnz	w8, #0, 40516c <__fxstatat@plt+0x271c>
  4050b0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4050b4:	ldrb	w8, [x8, #473]
  4050b8:	tbnz	w8, #0, 40516c <__fxstatat@plt+0x271c>
  4050bc:	bl	4068f0 <__fxstatat@plt+0x3ea0>
  4050c0:	bl	406e5c <__fxstatat@plt+0x440c>
  4050c4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4050c8:	ldr	x8, [x8, #640]
  4050cc:	cbz	x8, 405104 <__fxstatat@plt+0x26b4>
  4050d0:	mov	x21, xzr
  4050d4:	ldr	x8, [x26, #96]
  4050d8:	ldr	x20, [x8, x21, lsl #3]
  4050dc:	ldr	x0, [x20]
  4050e0:	bl	402840 <free@plt>
  4050e4:	ldr	x0, [x20, #8]
  4050e8:	bl	402840 <free@plt>
  4050ec:	ldr	x0, [x20, #16]
  4050f0:	bl	402840 <free@plt>
  4050f4:	ldr	x8, [x26]
  4050f8:	add	x21, x21, #0x1
  4050fc:	cmp	x21, x8
  405100:	b.cc	4050d4 <__fxstatat@plt+0x2684>  // b.lo, b.ul, b.last
  405104:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405108:	add	x8, x8, #0x1f3
  40510c:	movi	v0.2d, #0x0
  405110:	stur	xzr, [x8, #141]
  405114:	strh	wzr, [x8]
  405118:	stur	q0, [x8, #49]
  40511c:	stur	q0, [x8, #65]
  405120:	stur	xzr, [x8, #81]
  405124:	b	40516c <__fxstatat@plt+0x271c>
  405128:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40512c:	ldr	x20, [x8, #672]
  405130:	cbz	x20, 405020 <__fxstatat@plt+0x25d0>
  405134:	ldr	x0, [x20]
  405138:	mov	w2, #0x4                   	// #4
  40513c:	mov	x1, x24
  405140:	bl	402890 <fnmatch@plt>
  405144:	cbz	w0, 40516c <__fxstatat@plt+0x271c>
  405148:	ldr	x20, [x20, #8]
  40514c:	cbnz	x20, 405134 <__fxstatat@plt+0x26e4>
  405150:	b	405020 <__fxstatat@plt+0x25d0>
  405154:	mov	w8, #0x2                   	// #2
  405158:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40515c:	str	w8, [x9, #504]
  405160:	ldr	w8, [x23]
  405164:	cmp	w8, #0x4b
  405168:	b.ne	4051dc <__fxstatat@plt+0x278c>  // b.any
  40516c:	bl	409500 <__fxstatat@plt+0x6ab0>
  405170:	mov	x0, x27
  405174:	str	wzr, [x23]
  405178:	bl	4026e0 <readdir@plt>
  40517c:	cbnz	x0, 404fd8 <__fxstatat@plt+0x2588>
  405180:	ldr	w8, [x23]
  405184:	cbz	w8, 4051dc <__fxstatat@plt+0x278c>
  405188:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40518c:	mov	w2, #0x5                   	// #5
  405190:	mov	x0, xzr
  405194:	add	x1, x1, #0x887
  405198:	bl	402970 <dcgettext@plt>
  40519c:	ldr	w21, [x23]
  4051a0:	mov	x24, x0
  4051a4:	mov	w0, #0x4                   	// #4
  4051a8:	mov	x1, x28
  4051ac:	bl	413644 <__fxstatat@plt+0x10bf4>
  4051b0:	mov	x3, x0
  4051b4:	mov	w0, wzr
  4051b8:	mov	w1, w21
  4051bc:	mov	x2, x24
  4051c0:	bl	402490 <error@plt>
  4051c4:	cbnz	w22, 405154 <__fxstatat@plt+0x2704>
  4051c8:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4051cc:	ldr	w8, [x9, #504]
  4051d0:	cbnz	w8, 405160 <__fxstatat@plt+0x2710>
  4051d4:	mov	w8, #0x1                   	// #1
  4051d8:	b	40515c <__fxstatat@plt+0x270c>
  4051dc:	mov	x0, x27
  4051e0:	bl	402710 <closedir@plt>
  4051e4:	cbz	w0, 40524c <__fxstatat@plt+0x27fc>
  4051e8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4051ec:	mov	w2, #0x5                   	// #5
  4051f0:	mov	x0, xzr
  4051f4:	add	x1, x1, #0x89c
  4051f8:	bl	402970 <dcgettext@plt>
  4051fc:	ldr	w21, [x23]
  405200:	mov	x23, x0
  405204:	mov	w0, #0x4                   	// #4
  405208:	mov	x1, x28
  40520c:	bl	413644 <__fxstatat@plt+0x10bf4>
  405210:	mov	x3, x0
  405214:	mov	w0, wzr
  405218:	mov	w1, w21
  40521c:	mov	x2, x23
  405220:	bl	402490 <error@plt>
  405224:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405228:	cbz	w22, 405238 <__fxstatat@plt+0x27e8>
  40522c:	mov	w9, #0x2                   	// #2
  405230:	str	w9, [x8, #504]
  405234:	b	40524c <__fxstatat@plt+0x27fc>
  405238:	ldr	w8, [x8, #504]
  40523c:	cbnz	w8, 40524c <__fxstatat@plt+0x27fc>
  405240:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405244:	mov	w9, #0x1                   	// #1
  405248:	str	w9, [x8, #504]
  40524c:	bl	4068f0 <__fxstatat@plt+0x3ea0>
  405250:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405254:	ldrb	w8, [x8, #473]
  405258:	cmp	w8, #0x1
  40525c:	b.ne	40526c <__fxstatat@plt+0x281c>  // b.any
  405260:	mov	x0, x28
  405264:	mov	w1, wzr
  405268:	bl	406b74 <__fxstatat@plt+0x4124>
  40526c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405270:	ldr	w8, [x8, #508]
  405274:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405278:	add	x20, x20, #0x250
  40527c:	cbz	w8, 405290 <__fxstatat@plt+0x2840>
  405280:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405284:	ldrb	w8, [x8, #475]
  405288:	cmp	w8, #0x1
  40528c:	b.ne	4053a8 <__fxstatat@plt+0x2958>  // b.any
  405290:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405294:	ldrb	w8, [x8, #481]
  405298:	cmp	w8, #0x1
  40529c:	b.ne	4052c4 <__fxstatat@plt+0x2874>  // b.any
  4052a0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4052a4:	ldr	x1, [x8, #1456]
  4052a8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4052ac:	add	x0, x0, #0x86c
  4052b0:	bl	402980 <fputs_unlocked@plt>
  4052b4:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4052b8:	ldr	x8, [x9, #648]
  4052bc:	add	x8, x8, #0x2
  4052c0:	str	x8, [x9, #648]
  4052c4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4052c8:	mov	w2, #0x5                   	// #5
  4052cc:	mov	x0, xzr
  4052d0:	add	x1, x1, #0x8b1
  4052d4:	bl	402970 <dcgettext@plt>
  4052d8:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4052dc:	ldr	x1, [x22, #1456]
  4052e0:	mov	x21, x0
  4052e4:	bl	402980 <fputs_unlocked@plt>
  4052e8:	mov	x0, x21
  4052ec:	bl	402430 <strlen@plt>
  4052f0:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4052f4:	ldr	x9, [x10, #648]
  4052f8:	mov	x8, x0
  4052fc:	ldr	x0, [x22, #1456]
  405300:	add	x8, x9, x8
  405304:	str	x8, [x10, #648]
  405308:	ldp	x8, x9, [x0, #40]
  40530c:	cmp	x8, x9
  405310:	b.cs	4053d8 <__fxstatat@plt+0x2988>  // b.hs, b.nlast
  405314:	add	x9, x8, #0x1
  405318:	str	x9, [x0, #40]
  40531c:	mov	w9, #0x20                  	// #32
  405320:	strb	w9, [x8]
  405324:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405328:	add	x23, x23, #0x21c
  40532c:	ldur	x8, [x23, #108]
  405330:	ldr	w2, [x23]
  405334:	ldur	x4, [x23, #156]
  405338:	add	x1, sp, #0x70
  40533c:	add	x8, x8, #0x1
  405340:	mov	w3, #0x200                 	// #512
  405344:	mov	x0, x25
  405348:	stur	x8, [x23, #108]
  40534c:	bl	40f2c8 <__fxstatat@plt+0xc878>
  405350:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405354:	ldr	x1, [x22, #1456]
  405358:	mov	x21, x0
  40535c:	bl	402980 <fputs_unlocked@plt>
  405360:	mov	x0, x21
  405364:	bl	402430 <strlen@plt>
  405368:	ldur	x9, [x23, #108]
  40536c:	mov	x8, x0
  405370:	ldr	x0, [x22, #1456]
  405374:	add	x8, x9, x8
  405378:	stur	x8, [x23, #108]
  40537c:	ldp	x8, x9, [x0, #40]
  405380:	cmp	x8, x9
  405384:	b.cs	4053e4 <__fxstatat@plt+0x2994>  // b.hs, b.nlast
  405388:	add	x9, x8, #0x1
  40538c:	str	x9, [x0, #40]
  405390:	mov	w9, #0xa                   	// #10
  405394:	strb	w9, [x8]
  405398:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40539c:	ldr	x8, [x9, #648]
  4053a0:	add	x8, x8, #0x1
  4053a4:	str	x8, [x9, #648]
  4053a8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4053ac:	ldr	x8, [x8, #640]
  4053b0:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4053b4:	cbz	x8, 404b74 <__fxstatat@plt+0x2124>
  4053b8:	bl	406e5c <__fxstatat@plt+0x440c>
  4053bc:	b	404b74 <__fxstatat@plt+0x2124>
  4053c0:	mov	w8, #0x1                   	// #1
  4053c4:	b	404d50 <__fxstatat@plt+0x2300>
  4053c8:	mov	x21, xzr
  4053cc:	mov	w8, #0x1                   	// #1
  4053d0:	str	w8, [x9, #504]
  4053d4:	b	404f70 <__fxstatat@plt+0x2520>
  4053d8:	mov	w1, #0x20                  	// #32
  4053dc:	bl	402790 <__overflow@plt>
  4053e0:	b	405324 <__fxstatat@plt+0x28d4>
  4053e4:	mov	w1, #0xa                   	// #10
  4053e8:	bl	402790 <__overflow@plt>
  4053ec:	b	405398 <__fxstatat@plt+0x2948>
  4053f0:	mov	w1, #0xa                   	// #10
  4053f4:	bl	402790 <__overflow@plt>
  4053f8:	b	404e7c <__fxstatat@plt+0x242c>
  4053fc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405400:	ldrb	w8, [x8, #468]
  405404:	cbz	w8, 4054bc <__fxstatat@plt+0x2a6c>
  405408:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40540c:	ldrb	w8, [x8, #485]
  405410:	cmp	w8, #0x1
  405414:	b.ne	4054bc <__fxstatat@plt+0x2a6c>  // b.any
  405418:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40541c:	ldr	x8, [x8, #904]
  405420:	cmp	x8, #0x2
  405424:	b.ne	405464 <__fxstatat@plt+0x2a14>  // b.any
  405428:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40542c:	add	x8, x8, #0x390
  405430:	ldr	x9, [x8]
  405434:	mov	w10, #0x5b1b                	// #23323
  405438:	ldrh	w9, [x9]
  40543c:	cmp	w9, w10
  405440:	b.ne	405464 <__fxstatat@plt+0x2a14>  // b.any
  405444:	ldr	x8, [x8, #8]
  405448:	cmp	x8, #0x1
  40544c:	b.ne	405464 <__fxstatat@plt+0x2a14>  // b.any
  405450:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405454:	ldr	x8, [x8, #928]
  405458:	ldrb	w8, [x8]
  40545c:	cmp	w8, #0x6d
  405460:	b.eq	40547c <__fxstatat@plt+0x2a2c>  // b.none
  405464:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405468:	add	x19, x19, #0x388
  40546c:	mov	x0, x19
  405470:	bl	408560 <__fxstatat@plt+0x5b10>
  405474:	add	x0, x19, #0x10
  405478:	bl	408560 <__fxstatat@plt+0x5b10>
  40547c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405480:	ldr	x0, [x8, #1456]
  405484:	bl	4028a0 <fflush_unlocked@plt>
  405488:	mov	w0, wzr
  40548c:	bl	4085e4 <__fxstatat@plt+0x5b94>
  405490:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405494:	ldr	w19, [x8, #524]
  405498:	cbz	w19, 4054ac <__fxstatat@plt+0x2a5c>
  40549c:	mov	w0, #0x13                  	// #19
  4054a0:	bl	402480 <raise@plt>
  4054a4:	subs	w19, w19, #0x1
  4054a8:	b.ne	40549c <__fxstatat@plt+0x2a4c>  // b.any
  4054ac:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4054b0:	ldr	w0, [x8, #528]
  4054b4:	cbz	w0, 4054bc <__fxstatat@plt+0x2a6c>
  4054b8:	bl	402480 <raise@plt>
  4054bc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4054c0:	ldrb	w8, [x8, #481]
  4054c4:	cmp	w8, #0x1
  4054c8:	b.ne	405664 <__fxstatat@plt+0x2c14>  // b.any
  4054cc:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4054d0:	add	x9, x9, #0x398
  4054d4:	ldp	x20, x8, [x9]
  4054d8:	subs	x9, x8, x20
  4054dc:	lsr	x21, x9, #3
  4054e0:	cbz	x21, 405584 <__fxstatat@plt+0x2b34>
  4054e4:	b.ne	4054f8 <__fxstatat@plt+0x2aa8>  // b.any
  4054e8:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4054ec:	ldrb	w10, [x9, #984]
  4054f0:	orr	w10, w10, #0x2
  4054f4:	strb	w10, [x9, #984]
  4054f8:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4054fc:	add	x9, x9, #0x390
  405500:	ldr	x10, [x9, #40]
  405504:	ldr	x11, [x9]
  405508:	ldr	x12, [x9, #24]
  40550c:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405510:	add	x8, x10, x8
  405514:	ldr	x1, [x22, #1456]
  405518:	bic	x8, x8, x10
  40551c:	sub	x13, x12, x11
  405520:	sub	x10, x8, x11
  405524:	cmp	x10, x13
  405528:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40552c:	csel	x8, x12, x8, hi  // hi = pmore
  405530:	add	x0, x0, #0x56e
  405534:	stp	x8, x8, [x9, #8]
  405538:	bl	402980 <fputs_unlocked@plt>
  40553c:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405540:	mov	x23, xzr
  405544:	add	x19, x19, #0x2af
  405548:	ldr	x2, [x20, x23, lsl #3]
  40554c:	mov	w0, #0x1                   	// #1
  405550:	mov	x1, x19
  405554:	bl	402670 <__printf_chk@plt>
  405558:	add	x23, x23, #0x1
  40555c:	cmp	x23, x21
  405560:	b.cc	405548 <__fxstatat@plt+0x2af8>  // b.lo, b.ul, b.last
  405564:	ldr	x0, [x22, #1456]
  405568:	ldp	x8, x9, [x0, #40]
  40556c:	cmp	x8, x9
  405570:	b.cs	4056e8 <__fxstatat@plt+0x2c98>  // b.hs, b.nlast
  405574:	add	x9, x8, #0x1
  405578:	mov	w10, #0xa                   	// #10
  40557c:	str	x9, [x0, #40]
  405580:	strb	w10, [x8]
  405584:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405588:	add	x9, x9, #0x3f0
  40558c:	ldp	x20, x8, [x9]
  405590:	subs	x9, x8, x20
  405594:	lsr	x21, x9, #3
  405598:	cbz	x21, 40563c <__fxstatat@plt+0x2bec>
  40559c:	b.ne	4055b0 <__fxstatat@plt+0x2b60>  // b.any
  4055a0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4055a4:	ldrb	w10, [x9, #1072]
  4055a8:	orr	w10, w10, #0x2
  4055ac:	strb	w10, [x9, #1072]
  4055b0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4055b4:	add	x9, x9, #0x3e8
  4055b8:	ldr	x10, [x9, #40]
  4055bc:	ldr	x11, [x9]
  4055c0:	ldr	x12, [x9, #24]
  4055c4:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4055c8:	add	x8, x10, x8
  4055cc:	ldr	x1, [x22, #1456]
  4055d0:	bic	x8, x8, x10
  4055d4:	sub	x13, x12, x11
  4055d8:	sub	x10, x8, x11
  4055dc:	cmp	x10, x13
  4055e0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4055e4:	csel	x8, x12, x8, hi  // hi = pmore
  4055e8:	add	x0, x0, #0x578
  4055ec:	stp	x8, x8, [x9, #8]
  4055f0:	bl	402980 <fputs_unlocked@plt>
  4055f4:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4055f8:	mov	x23, xzr
  4055fc:	add	x19, x19, #0x2af
  405600:	ldr	x2, [x20, x23, lsl #3]
  405604:	mov	w0, #0x1                   	// #1
  405608:	mov	x1, x19
  40560c:	bl	402670 <__printf_chk@plt>
  405610:	add	x23, x23, #0x1
  405614:	cmp	x23, x21
  405618:	b.cc	405600 <__fxstatat@plt+0x2bb0>  // b.lo, b.ul, b.last
  40561c:	ldr	x0, [x22, #1456]
  405620:	ldp	x8, x9, [x0, #40]
  405624:	cmp	x8, x9
  405628:	b.cs	4056f4 <__fxstatat@plt+0x2ca4>  // b.hs, b.nlast
  40562c:	add	x9, x8, #0x1
  405630:	mov	w10, #0xa                   	// #10
  405634:	str	x9, [x0, #40]
  405638:	strb	w10, [x8]
  40563c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405640:	ldr	x0, [x8, #656]
  405644:	bl	412070 <__fxstatat@plt+0xf620>
  405648:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  40564c:	add	x8, x8, #0xa0
  405650:	ldr	x2, [x8, w0, uxtw #3]
  405654:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  405658:	add	x1, x1, #0x585
  40565c:	mov	w0, #0x1                   	// #1
  405660:	bl	402670 <__printf_chk@plt>
  405664:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405668:	ldr	x19, [x8, #600]
  40566c:	cbz	x19, 405684 <__fxstatat@plt+0x2c34>
  405670:	mov	x0, x19
  405674:	bl	40e010 <__fxstatat@plt+0xb5c0>
  405678:	cbnz	x0, 405828 <__fxstatat@plt+0x2dd8>
  40567c:	mov	x0, x19
  405680:	bl	40e770 <__fxstatat@plt+0xbd20>
  405684:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405688:	ldr	w0, [x8, #504]
  40568c:	add	sp, sp, #0x690
  405690:	ldp	x20, x19, [sp, #80]
  405694:	ldp	x22, x21, [sp, #64]
  405698:	ldp	x24, x23, [sp, #48]
  40569c:	ldp	x26, x25, [sp, #32]
  4056a0:	ldp	x28, x27, [sp, #16]
  4056a4:	ldp	x29, x30, [sp], #96
  4056a8:	ret
  4056ac:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4056b0:	ldrb	w8, [x8, #473]
  4056b4:	tbz	w8, #0, 4056c0 <__fxstatat@plt+0x2c70>
  4056b8:	mov	w8, #0x1                   	// #1
  4056bc:	b	404870 <__fxstatat@plt+0x1e20>
  4056c0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4056c4:	add	x8, x8, #0x1d4
  4056c8:	ldrb	w9, [x8]
  4056cc:	ldr	w10, [x8, #48]
  4056d0:	ldrb	w8, [x8, #1]
  4056d4:	orr	w9, w9, w10
  4056d8:	cmp	w9, #0x0
  4056dc:	cset	w9, ne  // ne = any
  4056e0:	orr	w8, w8, w9
  4056e4:	b	404870 <__fxstatat@plt+0x1e20>
  4056e8:	mov	w1, #0xa                   	// #10
  4056ec:	bl	402790 <__overflow@plt>
  4056f0:	b	405584 <__fxstatat@plt+0x2b34>
  4056f4:	mov	w1, #0xa                   	// #10
  4056f8:	bl	402790 <__overflow@plt>
  4056fc:	b	40563c <__fxstatat@plt+0x2bec>
  405700:	mov	w1, #0xa                   	// #10
  405704:	bl	402790 <__overflow@plt>
  405708:	ldr	x19, [x24, #592]
  40570c:	b	404a2c <__fxstatat@plt+0x1fdc>
  405710:	mov	w0, #0x2                   	// #2
  405714:	bl	40802c <__fxstatat@plt+0x55dc>
  405718:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40571c:	ldr	w9, [x9, #1288]
  405720:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405724:	adrp	x13, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405728:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40572c:	adrp	x11, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405730:	ldr	x0, [x8, #1456]
  405734:	ldr	x3, [x13, #1296]
  405738:	add	x10, x10, #0x209
  40573c:	add	x11, x11, #0x62b
  405740:	adrp	x12, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405744:	cmp	w9, #0x2
  405748:	add	x12, x12, #0x3f9
  40574c:	csel	x8, x11, x10, eq  // eq = none
  405750:	cmp	w9, #0x1
  405754:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405758:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40575c:	adrp	x5, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405760:	csel	x1, x12, x8, eq  // eq = none
  405764:	add	x2, x2, #0x3ee
  405768:	add	x4, x4, #0x3fc
  40576c:	add	x5, x5, #0x410
  405770:	mov	x6, xzr
  405774:	bl	414240 <__fxstatat@plt+0x117f0>
  405778:	mov	w0, wzr
  40577c:	bl	402460 <exit@plt>
  405780:	mov	w0, wzr
  405784:	bl	40802c <__fxstatat@plt+0x55dc>
  405788:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40578c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  405790:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405794:	add	x0, x0, #0x211
  405798:	add	x1, x1, #0x54b
  40579c:	add	x3, x3, #0x248
  4057a0:	mov	w2, #0x403                 	// #1027
  4057a4:	bl	4029d0 <__assert_fail@plt>
  4057a8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4057ac:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4057b0:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4057b4:	add	x0, x0, #0x545
  4057b8:	add	x1, x1, #0x54b
  4057bc:	add	x3, x3, #0x554
  4057c0:	mov	w2, #0x640                 	// #1600
  4057c4:	bl	4029d0 <__assert_fail@plt>
  4057c8:	bl	402770 <abort@plt>
  4057cc:	bl	4146a4 <__fxstatat@plt+0x11c54>
  4057d0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4057d4:	add	x1, x1, #0x370
  4057d8:	mov	w2, #0x5                   	// #5
  4057dc:	mov	x0, xzr
  4057e0:	bl	402970 <dcgettext@plt>
  4057e4:	ldr	x8, [x26, #1440]
  4057e8:	mov	x19, x0
  4057ec:	mov	x0, x8
  4057f0:	bl	413aa8 <__fxstatat@plt+0x11058>
  4057f4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4057f8:	mov	x4, x0
  4057fc:	add	x2, x2, #0x369
  405800:	mov	w0, #0x2                   	// #2
  405804:	mov	w1, wzr
  405808:	mov	x3, x19
  40580c:	bl	402490 <error@plt>
  405810:	ldur	w1, [x29, #-16]
  405814:	ldr	x4, [x22, #1440]
  405818:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x1ad0>
  40581c:	add	x3, x3, #0xa40
  405820:	mov	w2, wzr
  405824:	bl	414c98 <__fxstatat@plt+0x12248>
  405828:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40582c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  405830:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x3ad0>
  405834:	add	x0, x0, #0x5ab
  405838:	add	x1, x1, #0x54b
  40583c:	add	x3, x3, #0x554
  405840:	mov	w2, #0x674                 	// #1652
  405844:	bl	4029d0 <__assert_fail@plt>
  405848:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40584c:	add	x0, x0, #0x45c
  405850:	mov	x1, x21
  405854:	bl	40caa8 <__fxstatat@plt+0xa058>
  405858:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40585c:	add	x1, x1, #0x467
  405860:	mov	w2, #0x5                   	// #5
  405864:	mov	x0, xzr
  405868:	bl	402970 <dcgettext@plt>
  40586c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405870:	ldr	x1, [x20, #1432]
  405874:	bl	402980 <fputs_unlocked@plt>
  405878:	ldr	x0, [x20, #1432]
  40587c:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405880:	add	x19, x19, #0x47d
  405884:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405888:	add	x3, x3, #0x3af
  40588c:	mov	w1, #0x1                   	// #1
  405890:	mov	x2, x19
  405894:	bl	4027e0 <__fprintf_chk@plt>
  405898:	ldr	x0, [x20, #1432]
  40589c:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4058a0:	add	x3, x3, #0x747
  4058a4:	mov	w1, #0x1                   	// #1
  4058a8:	mov	x2, x19
  4058ac:	bl	4027e0 <__fprintf_chk@plt>
  4058b0:	ldr	x0, [x20, #1432]
  4058b4:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4058b8:	add	x3, x3, #0x74c
  4058bc:	mov	w1, #0x1                   	// #1
  4058c0:	mov	x2, x19
  4058c4:	bl	4027e0 <__fprintf_chk@plt>
  4058c8:	ldr	x0, [x20, #1432]
  4058cc:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4058d0:	add	x3, x3, #0x53b
  4058d4:	mov	w1, #0x1                   	// #1
  4058d8:	mov	x2, x19
  4058dc:	bl	4027e0 <__fprintf_chk@plt>
  4058e0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4058e4:	add	x1, x1, #0x48d
  4058e8:	mov	w2, #0x5                   	// #5
  4058ec:	mov	x0, xzr
  4058f0:	bl	402970 <dcgettext@plt>
  4058f4:	ldr	x1, [x20, #1432]
  4058f8:	bl	402980 <fputs_unlocked@plt>
  4058fc:	mov	w0, #0x2                   	// #2
  405900:	bl	40802c <__fxstatat@plt+0x55dc>
  405904:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405908:	add	x1, x1, #0x43f
  40590c:	mov	w2, #0x5                   	// #5
  405910:	mov	x0, xzr
  405914:	bl	402970 <dcgettext@plt>
  405918:	mov	x19, x0
  40591c:	mov	x0, x22
  405920:	bl	413aa8 <__fxstatat@plt+0x11058>
  405924:	mov	x3, x0
  405928:	mov	w0, #0x2                   	// #2
  40592c:	mov	w1, wzr
  405930:	mov	x2, x19
  405934:	bl	402490 <error@plt>
  405938:	ldr	x8, [x0]
  40593c:	udiv	x9, x8, x1
  405940:	msub	x0, x9, x1, x8
  405944:	ret
  405948:	ldr	x8, [x0]
  40594c:	ldr	x9, [x1]
  405950:	cmp	x8, x9
  405954:	b.ne	40596c <__fxstatat@plt+0x2f1c>  // b.any
  405958:	ldr	x8, [x0, #8]
  40595c:	ldr	x9, [x1, #8]
  405960:	cmp	x8, x9
  405964:	cset	w0, eq  // eq = none
  405968:	ret
  40596c:	mov	w0, wzr
  405970:	ret
  405974:	b	402840 <free@plt>
  405978:	stp	x29, x30, [sp, #-96]!
  40597c:	stp	x28, x27, [sp, #16]
  405980:	stp	x26, x25, [sp, #32]
  405984:	stp	x24, x23, [sp, #48]
  405988:	stp	x22, x21, [sp, #64]
  40598c:	stp	x20, x19, [sp, #80]
  405990:	mov	x29, sp
  405994:	sub	sp, sp, #0x2e0
  405998:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40599c:	add	x22, x22, #0x270
  4059a0:	ldr	x28, [x22, #16]
  4059a4:	ldr	x8, [x22]
  4059a8:	mov	x19, sp
  4059ac:	mov	x25, x3
  4059b0:	mov	w23, w1
  4059b4:	cmp	x28, x8
  4059b8:	mov	x20, x0
  4059bc:	str	w2, [x19, #44]
  4059c0:	b.ne	405a04 <__fxstatat@plt+0x2fb4>  // b.any
  4059c4:	mov	x8, #0x8591                	// #34193
  4059c8:	movk	x8, #0x642c, lsl #16
  4059cc:	movk	x8, #0xb21, lsl #32
  4059d0:	movk	x8, #0x59, lsl #48
  4059d4:	cmp	x28, x8
  4059d8:	b.cs	4068ec <__fxstatat@plt+0x3e9c>  // b.hs, b.nlast
  4059dc:	ldr	x0, [x22, #8]
  4059e0:	mov	w8, #0x170                 	// #368
  4059e4:	mul	x1, x28, x8
  4059e8:	bl	4143e8 <__fxstatat@plt+0x11998>
  4059ec:	ldr	x8, [x22]
  4059f0:	ldr	x28, [x22, #16]
  4059f4:	mov	x26, x0
  4059f8:	lsl	x8, x8, #1
  4059fc:	stp	x8, x0, [x22]
  405a00:	b	405a0c <__fxstatat@plt+0x2fbc>
  405a04:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405a08:	ldr	x26, [x8, #632]
  405a0c:	mov	w8, #0xb8                  	// #184
  405a10:	madd	x27, x28, x8, x26
  405a14:	movi	v0.2d, #0x0
  405a18:	mov	x21, x27
  405a1c:	stp	q0, q0, [x27, #144]
  405a20:	stp	q0, q0, [x27, #112]
  405a24:	stp	q0, q0, [x27, #80]
  405a28:	stp	q0, q0, [x27, #48]
  405a2c:	stp	q0, q0, [x27]
  405a30:	mov	x8, x27
  405a34:	str	q0, [x21, #32]!
  405a38:	str	xzr, [x27, #176]
  405a3c:	str	xzr, [x21]
  405a40:	str	w23, [x8, #152]!
  405a44:	mov	w9, #0xffffffff            	// #-1
  405a48:	mov	x22, x27
  405a4c:	str	x8, [x19, #24]
  405a50:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405a54:	str	w9, [x22, #180]!
  405a58:	add	x8, x8, #0x1f0
  405a5c:	ldrb	w9, [x8, #3]
  405a60:	tbnz	w9, #0, 405acc <__fxstatat@plt+0x307c>
  405a64:	ldrb	w8, [x8]
  405a68:	cbz	w8, 405acc <__fxstatat@plt+0x307c>
  405a6c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405a70:	ldr	x4, [x8, #656]
  405a74:	add	x0, x19, #0x48
  405a78:	mov	w1, #0x2                   	// #2
  405a7c:	mov	x3, #0xffffffffffffffff    	// #-1
  405a80:	mov	x2, x20
  405a84:	bl	412130 <__fxstatat@plt+0xf6e0>
  405a88:	ldrb	w8, [x20]
  405a8c:	ldrb	w9, [x19, #72]
  405a90:	cmp	w8, w9
  405a94:	b.ne	405ab8 <__fxstatat@plt+0x3068>  // b.any
  405a98:	mov	x24, x0
  405a9c:	mov	x0, x20
  405aa0:	bl	402430 <strlen@plt>
  405aa4:	cmp	x0, x24
  405aa8:	cset	w8, ne  // ne = any
  405aac:	str	w8, [x22]
  405ab0:	b.ne	405ac0 <__fxstatat@plt+0x3070>  // b.any
  405ab4:	b	405acc <__fxstatat@plt+0x307c>
  405ab8:	mov	w8, #0x1                   	// #1
  405abc:	str	w8, [x22]
  405ac0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405ac4:	mov	w9, #0x1                   	// #1
  405ac8:	strb	w9, [x8, #499]
  405acc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405ad0:	add	x8, x8, #0x1dc
  405ad4:	str	x26, [x19, #32]
  405ad8:	ldrb	w26, [x8, #8]
  405adc:	ldrb	w8, [x8]
  405ae0:	orr	w8, w8, w26
  405ae4:	tst	w8, #0xff
  405ae8:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  405aec:	ldr	w8, [x19, #44]
  405af0:	tbnz	w8, #0, 405c58 <__fxstatat@plt+0x3208>
  405af4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405af8:	ldrb	w24, [x8, #468]
  405afc:	cmp	w23, #0x3
  405b00:	b.ne	405be0 <__fxstatat@plt+0x3190>  // b.any
  405b04:	cbz	w24, 405be0 <__fxstatat@plt+0x3190>
  405b08:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405b0c:	add	x9, x9, #0x4b8
  405b10:	ldr	x8, [x9]
  405b14:	cbz	x8, 405b50 <__fxstatat@plt+0x3100>
  405b18:	ldr	x0, [x9, #8]
  405b1c:	cmp	x8, #0x2
  405b20:	b.eq	405b3c <__fxstatat@plt+0x30ec>  // b.none
  405b24:	cmp	x8, #0x1
  405b28:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  405b2c:	ldrb	w8, [x0]
  405b30:	cmp	w8, #0x30
  405b34:	b.eq	405b50 <__fxstatat@plt+0x3100>  // b.none
  405b38:	b	405c58 <__fxstatat@plt+0x3208>
  405b3c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405b40:	add	x1, x1, #0x20e
  405b44:	mov	w2, #0x2                   	// #2
  405b48:	bl	402640 <strncmp@plt>
  405b4c:	cbnz	w0, 405c58 <__fxstatat@plt+0x3208>
  405b50:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405b54:	add	x9, x9, #0x4a8
  405b58:	ldr	x8, [x9]
  405b5c:	cbz	x8, 405b98 <__fxstatat@plt+0x3148>
  405b60:	ldr	x0, [x9, #8]
  405b64:	cmp	x8, #0x2
  405b68:	b.eq	405b84 <__fxstatat@plt+0x3134>  // b.none
  405b6c:	cmp	x8, #0x1
  405b70:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  405b74:	ldrb	w8, [x0]
  405b78:	cmp	w8, #0x30
  405b7c:	b.eq	405b98 <__fxstatat@plt+0x3148>  // b.none
  405b80:	b	405c58 <__fxstatat@plt+0x3208>
  405b84:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405b88:	add	x1, x1, #0x20e
  405b8c:	mov	w2, #0x2                   	// #2
  405b90:	bl	402640 <strncmp@plt>
  405b94:	cbnz	w0, 405c58 <__fxstatat@plt+0x3208>
  405b98:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405b9c:	add	x9, x9, #0x4c8
  405ba0:	ldr	x8, [x9]
  405ba4:	cbz	x8, 405be0 <__fxstatat@plt+0x3190>
  405ba8:	ldr	x0, [x9, #8]
  405bac:	cmp	x8, #0x2
  405bb0:	b.eq	405bcc <__fxstatat@plt+0x317c>  // b.none
  405bb4:	cmp	x8, #0x1
  405bb8:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  405bbc:	ldrb	w8, [x0]
  405bc0:	cmp	w8, #0x30
  405bc4:	b.eq	405be0 <__fxstatat@plt+0x3190>  // b.none
  405bc8:	b	405c58 <__fxstatat@plt+0x3208>
  405bcc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405bd0:	add	x1, x1, #0x20e
  405bd4:	mov	w2, #0x2                   	// #2
  405bd8:	bl	402640 <strncmp@plt>
  405bdc:	cbnz	w0, 405c58 <__fxstatat@plt+0x3208>
  405be0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405be4:	add	x9, x9, #0x1e0
  405be8:	ldrb	w8, [x9]
  405bec:	ldrb	w9, [x9, #9]
  405bf0:	cbnz	w8, 405bf8 <__fxstatat@plt+0x31a8>
  405bf4:	cbz	w9, 405c2c <__fxstatat@plt+0x31dc>
  405bf8:	cmp	w23, #0x6
  405bfc:	b.eq	405c04 <__fxstatat@plt+0x31b4>  // b.none
  405c00:	cbnz	w23, 405c2c <__fxstatat@plt+0x31dc>
  405c04:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405c08:	ldr	w10, [x10, #512]
  405c0c:	cmp	w10, #0x5
  405c10:	b.eq	405c58 <__fxstatat@plt+0x3208>  // b.none
  405c14:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405c18:	add	x10, x10, #0x1d6
  405c1c:	ldrb	w11, [x10, #1]
  405c20:	tbnz	w11, #0, 405c58 <__fxstatat@plt+0x3208>
  405c24:	ldrb	w10, [x10]
  405c28:	orr	w9, w9, w10
  405c2c:	tbnz	w9, #0, 405c58 <__fxstatat@plt+0x3208>
  405c30:	cbz	w8, 406874 <__fxstatat@plt+0x3e24>
  405c34:	cbz	w23, 405c58 <__fxstatat@plt+0x3208>
  405c38:	ldr	w8, [x19, #44]
  405c3c:	tbnz	w8, #0, 405c58 <__fxstatat@plt+0x3208>
  405c40:	cmp	w23, #0x5
  405c44:	b.ne	406874 <__fxstatat@plt+0x3e24>  // b.any
  405c48:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405c4c:	ldr	w8, [x8, #516]
  405c50:	cmp	w8, #0x3
  405c54:	b.ne	405fe0 <__fxstatat@plt+0x3590>  // b.any
  405c58:	ldrb	w8, [x20]
  405c5c:	mov	x24, x20
  405c60:	str	x22, [x19, #16]
  405c64:	cmp	w8, #0x2f
  405c68:	b.eq	405d04 <__fxstatat@plt+0x32b4>  // b.none
  405c6c:	ldrb	w22, [x25]
  405c70:	mov	x24, x20
  405c74:	cbz	w22, 405d04 <__fxstatat@plt+0x32b4>
  405c78:	mov	x0, x20
  405c7c:	bl	402430 <strlen@plt>
  405c80:	mov	x24, x0
  405c84:	mov	x0, x25
  405c88:	bl	402430 <strlen@plt>
  405c8c:	add	x8, x24, x0
  405c90:	add	x8, x8, #0x11
  405c94:	and	x8, x8, #0xfffffffffffffff0
  405c98:	mov	x9, sp
  405c9c:	sub	x24, x9, x8
  405ca0:	mov	sp, x24
  405ca4:	cmp	w22, #0x2e
  405ca8:	b.ne	405cb8 <__fxstatat@plt+0x3268>  // b.any
  405cac:	ldrb	w9, [x25, #1]
  405cb0:	mov	x8, x24
  405cb4:	cbz	w9, 405ce8 <__fxstatat@plt+0x3298>
  405cb8:	mov	x9, x25
  405cbc:	mov	x8, x24
  405cc0:	strb	w22, [x8], #1
  405cc4:	ldrb	w22, [x9, #1]!
  405cc8:	cbnz	w22, 405cc0 <__fxstatat@plt+0x3270>
  405ccc:	cmp	x9, x25
  405cd0:	b.ls	405ce8 <__fxstatat@plt+0x3298>  // b.plast
  405cd4:	ldurb	w9, [x9, #-1]
  405cd8:	cmp	w9, #0x2f
  405cdc:	b.eq	405ce8 <__fxstatat@plt+0x3298>  // b.none
  405ce0:	mov	w9, #0x2f                  	// #47
  405ce4:	strb	w9, [x8], #1
  405ce8:	ldrb	w9, [x20]
  405cec:	cbz	w9, 405d00 <__fxstatat@plt+0x32b0>
  405cf0:	add	x10, x20, #0x1
  405cf4:	strb	w9, [x8], #1
  405cf8:	ldrb	w9, [x10], #1
  405cfc:	cbnz	w9, 405cf4 <__fxstatat@plt+0x32a4>
  405d00:	strb	wzr, [x8]
  405d04:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405d08:	cbz	w26, 405d90 <__fxstatat@plt+0x3340>
  405d0c:	mov	w1, #0x2                   	// #2
  405d10:	mov	x0, x24
  405d14:	bl	40cfe0 <__fxstatat@plt+0xa590>
  405d18:	ldr	x9, [x19, #32]
  405d1c:	mov	w8, #0xb8                  	// #184
  405d20:	madd	x8, x28, x8, x9
  405d24:	str	x0, [x8, #16]
  405d28:	cbnz	x0, 405d90 <__fxstatat@plt+0x3340>
  405d2c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405d30:	add	x1, x1, #0x86f
  405d34:	mov	w2, #0x5                   	// #5
  405d38:	bl	402970 <dcgettext@plt>
  405d3c:	mov	x25, x0
  405d40:	bl	4029e0 <__errno_location@plt>
  405d44:	ldr	w26, [x0]
  405d48:	mov	w0, #0x4                   	// #4
  405d4c:	mov	x1, x24
  405d50:	bl	413644 <__fxstatat@plt+0x10bf4>
  405d54:	mov	x3, x0
  405d58:	mov	w0, wzr
  405d5c:	mov	w1, w26
  405d60:	mov	x2, x25
  405d64:	bl	402490 <error@plt>
  405d68:	ldr	w8, [x19, #44]
  405d6c:	tbz	w8, #0, 405d7c <__fxstatat@plt+0x332c>
  405d70:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405d74:	mov	w9, #0x2                   	// #2
  405d78:	b	405d8c <__fxstatat@plt+0x333c>
  405d7c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405d80:	ldr	w9, [x8, #504]
  405d84:	cbnz	w9, 405d90 <__fxstatat@plt+0x3340>
  405d88:	mov	w9, #0x1                   	// #1
  405d8c:	str	w9, [x8, #504]
  405d90:	ldr	w8, [x22, #512]
  405d94:	add	x25, x27, #0x18
  405d98:	sub	w9, w8, #0x3
  405d9c:	cmp	w9, #0x2
  405da0:	b.cs	405dec <__fxstatat@plt+0x339c>  // b.hs, b.nlast
  405da4:	ldr	x26, [x19, #32]
  405da8:	ldr	w8, [x19, #44]
  405dac:	tbz	w8, #0, 405e20 <__fxstatat@plt+0x33d0>
  405db0:	mov	w0, wzr
  405db4:	mov	x1, x24
  405db8:	mov	x2, x25
  405dbc:	bl	402a00 <__xstat@plt>
  405dc0:	ldr	w8, [x22, #512]
  405dc4:	cmp	w8, #0x3
  405dc8:	b.eq	405e08 <__fxstatat@plt+0x33b8>  // b.none
  405dcc:	tbnz	w0, #31, 405e10 <__fxstatat@plt+0x33c0>
  405dd0:	mov	w8, #0xb8                  	// #184
  405dd4:	madd	x8, x28, x8, x26
  405dd8:	ldr	w8, [x8, #40]
  405ddc:	and	w8, w8, #0xf000
  405de0:	cmp	w8, #0x4, lsl #12
  405de4:	b.eq	405e08 <__fxstatat@plt+0x33b8>  // b.none
  405de8:	b	405e20 <__fxstatat@plt+0x33d0>
  405dec:	ldr	x26, [x19, #32]
  405df0:	cmp	w8, #0x5
  405df4:	b.ne	405e20 <__fxstatat@plt+0x33d0>  // b.any
  405df8:	mov	w0, wzr
  405dfc:	mov	x1, x24
  405e00:	mov	x2, x25
  405e04:	bl	402a00 <__xstat@plt>
  405e08:	cbnz	w0, 405e34 <__fxstatat@plt+0x33e4>
  405e0c:	b	405e90 <__fxstatat@plt+0x3440>
  405e10:	bl	4029e0 <__errno_location@plt>
  405e14:	ldr	w8, [x0]
  405e18:	cmp	w8, #0x2
  405e1c:	b.ne	405e34 <__fxstatat@plt+0x33e4>  // b.any
  405e20:	mov	w0, wzr
  405e24:	mov	x1, x24
  405e28:	mov	x2, x25
  405e2c:	bl	4028f0 <__lxstat@plt>
  405e30:	cbz	w0, 405e90 <__fxstatat@plt+0x3440>
  405e34:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405e38:	add	x1, x1, #0x8d9
  405e3c:	mov	w2, #0x5                   	// #5
  405e40:	mov	x0, xzr
  405e44:	bl	402970 <dcgettext@plt>
  405e48:	mov	x21, x0
  405e4c:	bl	4029e0 <__errno_location@plt>
  405e50:	ldr	w23, [x0]
  405e54:	mov	w0, #0x4                   	// #4
  405e58:	mov	x1, x24
  405e5c:	bl	413644 <__fxstatat@plt+0x10bf4>
  405e60:	mov	x3, x0
  405e64:	mov	w0, wzr
  405e68:	mov	w1, w23
  405e6c:	mov	x2, x21
  405e70:	bl	402490 <error@plt>
  405e74:	ldr	w8, [x19, #44]
  405e78:	tbz	w8, #0, 405f04 <__fxstatat@plt+0x34b4>
  405e7c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405e80:	mov	w9, #0x2                   	// #2
  405e84:	mov	x24, xzr
  405e88:	str	w9, [x8, #504]
  405e8c:	b	4068c8 <__fxstatat@plt+0x3e78>
  405e90:	mov	w8, #0xb8                  	// #184
  405e94:	mov	w9, #0x1                   	// #1
  405e98:	madd	x8, x28, x8, x26
  405e9c:	cmp	w23, #0x5
  405ea0:	strb	w9, [x8, #168]
  405ea4:	str	x20, [x19, #8]
  405ea8:	b.eq	405ec4 <__fxstatat@plt+0x3474>  // b.none
  405eac:	mov	w8, #0xb8                  	// #184
  405eb0:	madd	x8, x28, x8, x26
  405eb4:	ldr	w8, [x8, #40]
  405eb8:	and	w8, w8, #0xf000
  405ebc:	cmp	w8, #0x8, lsl #12
  405ec0:	b.ne	406030 <__fxstatat@plt+0x35e0>  // b.any
  405ec4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405ec8:	ldrb	w8, [x8, #468]
  405ecc:	cbz	w8, 406030 <__fxstatat@plt+0x35e0>
  405ed0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405ed4:	add	x9, x9, #0x4d8
  405ed8:	ldr	x8, [x9]
  405edc:	cbz	x8, 406030 <__fxstatat@plt+0x35e0>
  405ee0:	ldr	x0, [x9, #8]
  405ee4:	cmp	x8, #0x2
  405ee8:	b.eq	405f28 <__fxstatat@plt+0x34d8>  // b.none
  405eec:	cmp	x8, #0x1
  405ef0:	b.ne	405f3c <__fxstatat@plt+0x34ec>  // b.any
  405ef4:	ldrb	w8, [x0]
  405ef8:	cmp	w8, #0x30
  405efc:	b.ne	405f3c <__fxstatat@plt+0x34ec>  // b.any
  405f00:	b	406030 <__fxstatat@plt+0x35e0>
  405f04:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405f08:	ldr	w9, [x8, #504]
  405f0c:	cbnz	w9, 405f18 <__fxstatat@plt+0x34c8>
  405f10:	mov	w9, #0x1                   	// #1
  405f14:	str	w9, [x8, #504]
  405f18:	mov	x0, x20
  405f1c:	bl	41464c <__fxstatat@plt+0x11bfc>
  405f20:	mov	x24, xzr
  405f24:	b	4068b4 <__fxstatat@plt+0x3e64>
  405f28:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  405f2c:	add	x1, x1, #0x20e
  405f30:	mov	w2, #0x2                   	// #2
  405f34:	bl	402640 <strncmp@plt>
  405f38:	cbz	w0, 406030 <__fxstatat@plt+0x35e0>
  405f3c:	mov	w8, #0xb8                  	// #184
  405f40:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405f44:	madd	x22, x28, x8, x26
  405f48:	ldr	x8, [x22, #24]!
  405f4c:	ldr	x9, [x9, #744]
  405f50:	cmp	x8, x9
  405f54:	b.ne	405f6c <__fxstatat@plt+0x351c>  // b.any
  405f58:	bl	4029e0 <__errno_location@plt>
  405f5c:	mov	w9, #0x5f                  	// #95
  405f60:	mov	w8, wzr
  405f64:	str	w9, [x0]
  405f68:	b	406024 <__fxstatat@plt+0x35d4>
  405f6c:	mov	x0, x24
  405f70:	bl	402900 <cap_get_file@plt>
  405f74:	cbz	x0, 405fac <__fxstatat@plt+0x355c>
  405f78:	mov	x1, xzr
  405f7c:	mov	x23, x0
  405f80:	bl	4023e0 <cap_to_text@plt>
  405f84:	mov	x26, x0
  405f88:	mov	x0, x23
  405f8c:	bl	402950 <cap_free@plt>
  405f90:	cbz	x26, 405fac <__fxstatat@plt+0x355c>
  405f94:	ldrb	w20, [x26]
  405f98:	mov	x0, x26
  405f9c:	bl	402950 <cap_free@plt>
  405fa0:	cbz	w20, 405fac <__fxstatat@plt+0x355c>
  405fa4:	mov	w8, #0x1                   	// #1
  405fa8:	b	40601c <__fxstatat@plt+0x35cc>
  405fac:	bl	4029e0 <__errno_location@plt>
  405fb0:	ldr	w8, [x0]
  405fb4:	cmp	w8, #0x16
  405fb8:	b.eq	405fcc <__fxstatat@plt+0x357c>  // b.none
  405fbc:	cmp	w8, #0x5f
  405fc0:	b.eq	405fcc <__fxstatat@plt+0x357c>  // b.none
  405fc4:	cmp	w8, #0x26
  405fc8:	b.ne	406018 <__fxstatat@plt+0x35c8>  // b.any
  405fcc:	ldr	x9, [x22]
  405fd0:	mov	w8, wzr
  405fd4:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  405fd8:	str	x9, [x10, #744]
  405fdc:	b	40601c <__fxstatat@plt+0x35cc>
  405fe0:	cbz	w24, 406874 <__fxstatat@plt+0x3e24>
  405fe4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  405fe8:	add	x9, x9, #0x468
  405fec:	ldr	x8, [x9]
  405ff0:	cbz	x8, 40679c <__fxstatat@plt+0x3d4c>
  405ff4:	ldr	x0, [x9, #8]
  405ff8:	cmp	x8, #0x2
  405ffc:	b.eq	406788 <__fxstatat@plt+0x3d38>  // b.none
  406000:	cmp	x8, #0x1
  406004:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  406008:	ldrb	w8, [x0]
  40600c:	cmp	w8, #0x30
  406010:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  406014:	b	40679c <__fxstatat@plt+0x3d4c>
  406018:	mov	w8, wzr
  40601c:	ldr	x20, [x19, #8]
  406020:	ldr	x26, [x19, #32]
  406024:	mov	w9, #0xb8                  	// #184
  406028:	madd	x9, x28, x9, x26
  40602c:	strb	w8, [x9, #176]
  406030:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406034:	ldr	w22, [x8, #508]
  406038:	cbz	w22, 40604c <__fxstatat@plt+0x35fc>
  40603c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406040:	ldrb	w8, [x8, #474]
  406044:	cmp	w8, #0x1
  406048:	b.ne	4061a8 <__fxstatat@plt+0x3758>  // b.any
  40604c:	mov	w8, #0xb8                  	// #184
  406050:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406054:	madd	x8, x28, x8, x26
  406058:	mov	x23, x21
  40605c:	ldr	x26, [x8, #24]
  406060:	ldr	x21, [x20, #752]
  406064:	bl	4029e0 <__errno_location@plt>
  406068:	mov	x12, x0
  40606c:	mov	w8, #0x5f                  	// #95
  406070:	cmp	x21, x26
  406074:	str	w8, [x0]
  406078:	b.eq	406080 <__fxstatat@plt+0x3630>  // b.none
  40607c:	str	x26, [x20, #752]
  406080:	ldr	x9, [x19, #32]
  406084:	mov	w8, #0xb8                  	// #184
  406088:	madd	x8, x28, x8, x9
  40608c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  406090:	add	x9, x9, #0x368
  406094:	str	x9, [x8, #160]
  406098:	cbz	w22, 4060b8 <__fxstatat@plt+0x3668>
  40609c:	ldr	x20, [x19, #8]
  4060a0:	ldr	x26, [x19, #32]
  4060a4:	mov	w8, wzr
  4060a8:	mov	w10, wzr
  4060ac:	mov	w9, wzr
  4060b0:	mov	x21, x23
  4060b4:	b	40615c <__fxstatat@plt+0x370c>
  4060b8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4060bc:	ldr	x8, [x8, #760]
  4060c0:	cmp	x26, x8
  4060c4:	b.ne	4060e4 <__fxstatat@plt+0x3694>  // b.any
  4060c8:	ldr	x20, [x19, #8]
  4060cc:	ldr	x26, [x19, #32]
  4060d0:	mov	w8, #0x5f                  	// #95
  4060d4:	mov	w0, wzr
  4060d8:	str	w8, [x12]
  4060dc:	mov	x21, x23
  4060e0:	b	40614c <__fxstatat@plt+0x36fc>
  4060e4:	mov	x0, x24
  4060e8:	mov	x1, x25
  4060ec:	str	wzr, [x12]
  4060f0:	mov	x22, x12
  4060f4:	bl	40d790 <__fxstatat@plt+0xad40>
  4060f8:	ldr	x20, [x19, #8]
  4060fc:	ldr	x26, [x19, #32]
  406100:	cmp	w0, #0x0
  406104:	mov	x21, x23
  406108:	b.le	406120 <__fxstatat@plt+0x36d0>
  40610c:	mov	w8, wzr
  406110:	mov	w9, #0x2                   	// #2
  406114:	mov	w10, #0x1                   	// #1
  406118:	mov	x12, x22
  40611c:	b	40615c <__fxstatat@plt+0x370c>
  406120:	ldr	w8, [x22]
  406124:	mov	x12, x22
  406128:	cmp	w8, #0x16
  40612c:	b.eq	406140 <__fxstatat@plt+0x36f0>  // b.none
  406130:	cmp	w8, #0x5f
  406134:	b.eq	406140 <__fxstatat@plt+0x36f0>  // b.none
  406138:	cmp	w8, #0x26
  40613c:	b.ne	40614c <__fxstatat@plt+0x36fc>  // b.any
  406140:	ldr	x8, [x25]
  406144:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406148:	str	x8, [x9, #760]
  40614c:	cmp	w0, #0x0
  406150:	mov	w9, wzr
  406154:	lsr	w8, w0, #31
  406158:	cset	w10, gt
  40615c:	mov	w11, #0xb8                  	// #184
  406160:	madd	x11, x28, x11, x26
  406164:	str	w9, [x11, #172]
  406168:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40616c:	ldrb	w11, [x9, #500]
  406170:	orr	w10, w11, w10
  406174:	strb	w10, [x9, #500]
  406178:	cbz	w8, 4061a8 <__fxstatat@plt+0x3758>
  40617c:	ldr	w23, [x12]
  406180:	mov	w1, #0x3                   	// #3
  406184:	mov	w0, wzr
  406188:	mov	x2, x24
  40618c:	bl	413868 <__fxstatat@plt+0x10e18>
  406190:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406194:	mov	x3, x0
  406198:	add	x2, x2, #0xc0f
  40619c:	mov	w0, wzr
  4061a0:	mov	w1, w23
  4061a4:	bl	402490 <error@plt>
  4061a8:	mov	w8, #0xb8                  	// #184
  4061ac:	madd	x22, x28, x8, x26
  4061b0:	ldr	w8, [x22, #40]!
  4061b4:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4061b8:	and	w9, w8, #0xf000
  4061bc:	cmp	w9, #0xa, lsl #12
  4061c0:	b.ne	4063d8 <__fxstatat@plt+0x3988>  // b.any
  4061c4:	ldr	w9, [x25, #508]
  4061c8:	cbz	w9, 4061dc <__fxstatat@plt+0x378c>
  4061cc:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4061d0:	ldrb	w9, [x9, #470]
  4061d4:	cmp	w9, #0x1
  4061d8:	b.ne	4063d8 <__fxstatat@plt+0x3988>  // b.any
  4061dc:	mov	w8, #0xb8                  	// #184
  4061e0:	str	x22, [x19]
  4061e4:	madd	x22, x28, x8, x26
  4061e8:	ldr	x1, [x22, #72]
  4061ec:	mov	x0, x24
  4061f0:	bl	40c890 <__fxstatat@plt+0x9e40>
  4061f4:	mov	x25, x0
  4061f8:	str	x0, [x22, #8]!
  4061fc:	cbnz	x0, 40626c <__fxstatat@plt+0x381c>
  406200:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406204:	add	x1, x1, #0x8ea
  406208:	mov	w2, #0x5                   	// #5
  40620c:	bl	402970 <dcgettext@plt>
  406210:	mov	x23, x0
  406214:	bl	4029e0 <__errno_location@plt>
  406218:	ldr	w25, [x0]
  40621c:	mov	w0, #0x4                   	// #4
  406220:	mov	x1, x24
  406224:	bl	413644 <__fxstatat@plt+0x10bf4>
  406228:	mov	x3, x0
  40622c:	mov	w0, wzr
  406230:	mov	w1, w25
  406234:	mov	x2, x23
  406238:	bl	402490 <error@plt>
  40623c:	ldr	w8, [x19, #44]
  406240:	tbz	w8, #0, 40624c <__fxstatat@plt+0x37fc>
  406244:	mov	w8, #0x2                   	// #2
  406248:	b	40625c <__fxstatat@plt+0x380c>
  40624c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406250:	ldr	w8, [x8, #504]
  406254:	cbnz	w8, 406264 <__fxstatat@plt+0x3814>
  406258:	mov	w8, #0x1                   	// #1
  40625c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406260:	str	w8, [x9, #504]
  406264:	ldr	x25, [x22]
  406268:	cbz	x25, 40635c <__fxstatat@plt+0x390c>
  40626c:	ldrb	w8, [x25]
  406270:	cmp	w8, #0x2f
  406274:	b.ne	4062e4 <__fxstatat@plt+0x3894>  // b.any
  406278:	mov	x0, x25
  40627c:	bl	41464c <__fxstatat@plt+0x11bfc>
  406280:	mov	x23, x0
  406284:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406288:	cbz	x23, 406338 <__fxstatat@plt+0x38e8>
  40628c:	ldr	x8, [x19, #16]
  406290:	ldr	w8, [x8]
  406294:	cbnz	w8, 40637c <__fxstatat@plt+0x392c>
  406298:	ldr	x24, [x22]
  40629c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4062a0:	ldr	x4, [x8, #656]
  4062a4:	add	x0, x19, #0x48
  4062a8:	mov	w1, #0x2                   	// #2
  4062ac:	mov	x3, #0xffffffffffffffff    	// #-1
  4062b0:	mov	x2, x24
  4062b4:	bl	412130 <__fxstatat@plt+0xf6e0>
  4062b8:	ldrb	w8, [x24]
  4062bc:	ldrb	w9, [x19, #72]
  4062c0:	cmp	w8, w9
  4062c4:	b.ne	40636c <__fxstatat@plt+0x391c>  // b.any
  4062c8:	mov	x25, x0
  4062cc:	mov	x0, x24
  4062d0:	bl	402430 <strlen@plt>
  4062d4:	cmp	x0, x25
  4062d8:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4062dc:	b.ne	406370 <__fxstatat@plt+0x3920>  // b.any
  4062e0:	b	40637c <__fxstatat@plt+0x392c>
  4062e4:	mov	x0, x24
  4062e8:	bl	40d5fc <__fxstatat@plt+0xabac>
  4062ec:	cbz	x0, 406340 <__fxstatat@plt+0x38f0>
  4062f0:	mov	x26, x0
  4062f4:	mov	x0, x25
  4062f8:	bl	402430 <strlen@plt>
  4062fc:	add	x8, x26, x0
  406300:	add	x0, x8, #0x2
  406304:	bl	414368 <__fxstatat@plt+0x11918>
  406308:	add	x8, x26, x24
  40630c:	ldurb	w8, [x8, #-1]
  406310:	mov	x1, x24
  406314:	mov	x23, x0
  406318:	cmp	w8, #0x2f
  40631c:	cinc	x2, x26, ne  // ne = any
  406320:	bl	4027c0 <stpncpy@plt>
  406324:	mov	x1, x25
  406328:	bl	402580 <stpcpy@plt>
  40632c:	ldr	x26, [x19, #32]
  406330:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406334:	cbnz	x23, 40628c <__fxstatat@plt+0x383c>
  406338:	ldr	x22, [x19]
  40633c:	b	4063cc <__fxstatat@plt+0x397c>
  406340:	mov	x0, x25
  406344:	bl	41464c <__fxstatat@plt+0x11bfc>
  406348:	mov	x23, x0
  40634c:	ldr	x26, [x19, #32]
  406350:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406354:	cbnz	x23, 40628c <__fxstatat@plt+0x383c>
  406358:	b	406338 <__fxstatat@plt+0x38e8>
  40635c:	ldr	x22, [x19]
  406360:	mov	x23, xzr
  406364:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406368:	b	4063cc <__fxstatat@plt+0x397c>
  40636c:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406370:	ldr	x9, [x19, #16]
  406374:	mov	w8, #0xffffffff            	// #-1
  406378:	str	w8, [x9]
  40637c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406380:	ldr	w8, [x8, #516]
  406384:	ldr	x22, [x19]
  406388:	cmp	w8, #0x1
  40638c:	b.hi	4063a0 <__fxstatat@plt+0x3950>  // b.pmore
  406390:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406394:	ldrb	w8, [x8, #470]
  406398:	cmp	w8, #0x1
  40639c:	b.ne	4063cc <__fxstatat@plt+0x397c>  // b.any
  4063a0:	add	x2, x19, #0x48
  4063a4:	mov	w0, wzr
  4063a8:	mov	x1, x23
  4063ac:	bl	402a00 <__xstat@plt>
  4063b0:	cbnz	w0, 4063cc <__fxstatat@plt+0x397c>
  4063b4:	mov	w8, #0xb8                  	// #184
  4063b8:	madd	x8, x28, x8, x26
  4063bc:	mov	w9, #0x1                   	// #1
  4063c0:	strb	w9, [x8, #169]
  4063c4:	ldr	w9, [x19, #88]
  4063c8:	str	w9, [x8, #156]
  4063cc:	mov	x0, x23
  4063d0:	bl	402840 <free@plt>
  4063d4:	ldr	w8, [x22]
  4063d8:	and	w8, w8, #0xf000
  4063dc:	cmp	w8, #0xa, lsl #12
  4063e0:	b.eq	40640c <__fxstatat@plt+0x39bc>  // b.none
  4063e4:	cmp	w8, #0x4, lsl #12
  4063e8:	b.ne	406414 <__fxstatat@plt+0x39c4>  // b.any
  4063ec:	ldr	w8, [x19, #44]
  4063f0:	tbz	w8, #0, 406404 <__fxstatat@plt+0x39b4>
  4063f4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4063f8:	ldrb	w8, [x8, #472]
  4063fc:	cmp	w8, #0x1
  406400:	b.ne	40641c <__fxstatat@plt+0x39cc>  // b.any
  406404:	mov	w8, #0x3                   	// #3
  406408:	b	406420 <__fxstatat@plt+0x39d0>
  40640c:	mov	w8, #0x6                   	// #6
  406410:	b	406420 <__fxstatat@plt+0x39d0>
  406414:	mov	w8, #0x5                   	// #5
  406418:	b	406420 <__fxstatat@plt+0x39d0>
  40641c:	mov	w8, #0x9                   	// #9
  406420:	ldr	x9, [x19, #24]
  406424:	str	w8, [x9]
  406428:	mov	w8, #0xb8                  	// #184
  40642c:	madd	x8, x28, x8, x26
  406430:	ldr	w9, [x25, #508]
  406434:	ldr	x24, [x8, #88]
  406438:	cbz	w9, 40644c <__fxstatat@plt+0x39fc>
  40643c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406440:	ldrb	w8, [x8, #475]
  406444:	cmp	w8, #0x1
  406448:	b.ne	40661c <__fxstatat@plt+0x3bcc>  // b.any
  40644c:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406450:	add	x20, x20, #0x21c
  406454:	ldr	w2, [x20]
  406458:	ldur	x4, [x20, #156]
  40645c:	add	x1, x19, #0x48
  406460:	mov	w3, #0x200                 	// #512
  406464:	mov	x0, x24
  406468:	bl	40f2c8 <__fxstatat@plt+0xc878>
  40646c:	mov	w1, wzr
  406470:	bl	410434 <__fxstatat@plt+0xd9e4>
  406474:	ldr	w8, [x20, #12]
  406478:	cmp	w8, w0
  40647c:	b.ge	406488 <__fxstatat@plt+0x3a38>  // b.tcont
  406480:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406484:	str	w0, [x8, #552]
  406488:	ldr	w8, [x25, #508]
  40648c:	ldr	x20, [x19, #8]
  406490:	cbnz	w8, 40661c <__fxstatat@plt+0x3bcc>
  406494:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406498:	ldrb	w8, [x8, #490]
  40649c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4064a0:	tbnz	w8, #0, 406518 <__fxstatat@plt+0x3ac8>
  4064a4:	mov	w8, #0xb8                  	// #184
  4064a8:	madd	x8, x28, x8, x26
  4064ac:	mov	x23, x22
  4064b0:	ldrb	w9, [x9, #488]
  4064b4:	ldr	w22, [x8, #48]
  4064b8:	tbnz	w9, #0, 4064d8 <__fxstatat@plt+0x3a88>
  4064bc:	mov	w0, w22
  4064c0:	bl	40fbd0 <__fxstatat@plt+0xd180>
  4064c4:	cbz	x0, 4064d8 <__fxstatat@plt+0x3a88>
  4064c8:	mov	w1, wzr
  4064cc:	bl	410434 <__fxstatat@plt+0xd9e4>
  4064d0:	bic	w0, w0, w0, asr #31
  4064d4:	b	4064fc <__fxstatat@plt+0x3aac>
  4064d8:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4064dc:	add	x3, x3, #0x2b0
  4064e0:	add	x0, x19, #0x48
  4064e4:	mov	w1, #0x1                   	// #1
  4064e8:	mov	w2, #0x15                  	// #21
  4064ec:	mov	x4, x22
  4064f0:	bl	402440 <__sprintf_chk@plt>
  4064f4:	add	x0, x19, #0x48
  4064f8:	bl	402430 <strlen@plt>
  4064fc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406500:	ldr	w9, [x8, #560]
  406504:	mov	x22, x23
  406508:	cmp	w9, w0
  40650c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406510:	b.ge	406518 <__fxstatat@plt+0x3ac8>  // b.tcont
  406514:	str	w0, [x8, #560]
  406518:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40651c:	ldrb	w8, [x8, #491]
  406520:	tbnz	w8, #0, 40659c <__fxstatat@plt+0x3b4c>
  406524:	mov	w8, #0xb8                  	// #184
  406528:	madd	x8, x28, x8, x26
  40652c:	str	x22, [x19]
  406530:	mov	x23, x9
  406534:	ldrb	w9, [x9, #488]
  406538:	ldr	w22, [x8, #52]
  40653c:	tbnz	w9, #0, 40655c <__fxstatat@plt+0x3b0c>
  406540:	mov	w0, w22
  406544:	bl	40fd70 <__fxstatat@plt+0xd320>
  406548:	cbz	x0, 40655c <__fxstatat@plt+0x3b0c>
  40654c:	mov	w1, wzr
  406550:	bl	410434 <__fxstatat@plt+0xd9e4>
  406554:	bic	w0, w0, w0, asr #31
  406558:	b	406580 <__fxstatat@plt+0x3b30>
  40655c:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406560:	add	x3, x3, #0x2b0
  406564:	add	x0, x19, #0x48
  406568:	mov	w1, #0x1                   	// #1
  40656c:	mov	w2, #0x15                  	// #21
  406570:	mov	x4, x22
  406574:	bl	402440 <__sprintf_chk@plt>
  406578:	add	x0, x19, #0x48
  40657c:	bl	402430 <strlen@plt>
  406580:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406584:	ldr	w9, [x8, #564]
  406588:	ldr	x22, [x19]
  40658c:	cmp	w9, w0
  406590:	mov	x9, x23
  406594:	b.ge	40659c <__fxstatat@plt+0x3b4c>  // b.tcont
  406598:	str	w0, [x8, #564]
  40659c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4065a0:	ldrb	w8, [x8, #492]
  4065a4:	cmp	w8, #0x1
  4065a8:	b.ne	40661c <__fxstatat@plt+0x3bcc>  // b.any
  4065ac:	mov	w8, #0xb8                  	// #184
  4065b0:	madd	x8, x28, x8, x26
  4065b4:	mov	x23, x22
  4065b8:	ldrb	w9, [x9, #488]
  4065bc:	ldr	w22, [x8, #48]
  4065c0:	tbnz	w9, #0, 4065e0 <__fxstatat@plt+0x3b90>
  4065c4:	mov	w0, w22
  4065c8:	bl	40fbd0 <__fxstatat@plt+0xd180>
  4065cc:	cbz	x0, 4065e0 <__fxstatat@plt+0x3b90>
  4065d0:	mov	w1, wzr
  4065d4:	bl	410434 <__fxstatat@plt+0xd9e4>
  4065d8:	bic	w0, w0, w0, asr #31
  4065dc:	b	406604 <__fxstatat@plt+0x3bb4>
  4065e0:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4065e4:	add	x3, x3, #0x2b0
  4065e8:	add	x0, x19, #0x48
  4065ec:	mov	w1, #0x1                   	// #1
  4065f0:	mov	w2, #0x15                  	// #21
  4065f4:	mov	x4, x22
  4065f8:	bl	402440 <__sprintf_chk@plt>
  4065fc:	add	x0, x19, #0x48
  406600:	bl	402430 <strlen@plt>
  406604:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406608:	ldr	w9, [x8, #568]
  40660c:	mov	x22, x23
  406610:	cmp	w9, w0
  406614:	b.ge	40661c <__fxstatat@plt+0x3bcc>  // b.tcont
  406618:	str	w0, [x8, #568]
  40661c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406620:	ldrb	w8, [x8, #474]
  406624:	cmp	w8, #0x1
  406628:	b.ne	406650 <__fxstatat@plt+0x3c00>  // b.any
  40662c:	mov	w8, #0xb8                  	// #184
  406630:	madd	x8, x28, x8, x26
  406634:	ldr	x0, [x8, #160]
  406638:	bl	402430 <strlen@plt>
  40663c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406640:	ldr	w9, [x8, #572]
  406644:	cmp	w9, w0
  406648:	b.ge	406650 <__fxstatat@plt+0x3c00>  // b.tcont
  40664c:	str	w0, [x8, #572]
  406650:	ldr	w8, [x25, #508]
  406654:	cbnz	w8, 406878 <__fxstatat@plt+0x3e28>
  406658:	mov	w8, #0xb8                  	// #184
  40665c:	madd	x8, x28, x8, x26
  406660:	ldr	w0, [x8, #44]
  406664:	add	x1, x19, #0x30
  406668:	bl	40ffa0 <__fxstatat@plt+0xd550>
  40666c:	bl	402430 <strlen@plt>
  406670:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406674:	ldr	w9, [x8, #556]
  406678:	cmp	w9, w0
  40667c:	b.ge	406684 <__fxstatat@plt+0x3c34>  // b.tcont
  406680:	str	w0, [x8, #556]
  406684:	ldr	w8, [x22]
  406688:	and	w8, w8, #0xf000
  40668c:	orr	w8, w8, #0x4000
  406690:	cmp	w8, #0x6, lsl #12
  406694:	b.ne	406738 <__fxstatat@plt+0x3ce8>  // b.any
  406698:	mov	w8, #0xb8                  	// #184
  40669c:	mov	x22, x21
  4066a0:	madd	x21, x28, x8, x26
  4066a4:	ldr	x8, [x21, #56]!
  4066a8:	add	x1, x19, #0x48
  4066ac:	lsr	x9, x8, #32
  4066b0:	and	x0, x9, #0xfffff000
  4066b4:	bfxil	x0, x8, #8, #12
  4066b8:	bl	40ffa0 <__fxstatat@plt+0xd550>
  4066bc:	bl	402430 <strlen@plt>
  4066c0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4066c4:	ldr	w9, [x8, #576]
  4066c8:	cmp	w9, w0
  4066cc:	b.ge	4066d4 <__fxstatat@plt+0x3c84>  // b.tcont
  4066d0:	str	w0, [x8, #576]
  4066d4:	ldr	x8, [x21]
  4066d8:	add	x1, x19, #0x48
  4066dc:	lsr	x9, x8, #12
  4066e0:	and	x0, x9, #0xffffff00
  4066e4:	bfxil	x0, x8, #0, #8
  4066e8:	bl	40ffa0 <__fxstatat@plt+0xd550>
  4066ec:	bl	402430 <strlen@plt>
  4066f0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4066f4:	ldr	w8, [x9, #580]
  4066f8:	cmp	w8, w0
  4066fc:	b.ge	406708 <__fxstatat@plt+0x3cb8>  // b.tcont
  406700:	mov	w8, w0
  406704:	str	w0, [x9, #580]
  406708:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40670c:	add	x9, x9, #0x240
  406710:	ldr	w10, [x9]
  406714:	ldr	w9, [x9, #8]
  406718:	mov	x21, x22
  40671c:	add	w8, w10, w8
  406720:	add	w8, w8, #0x2
  406724:	cmp	w9, w8
  406728:	b.ge	406878 <__fxstatat@plt+0x3e28>  // b.tcont
  40672c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406730:	str	w8, [x9, #584]
  406734:	b	406878 <__fxstatat@plt+0x3e28>
  406738:	mov	w8, #0xb8                  	// #184
  40673c:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406740:	add	x20, x20, #0x220
  406744:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  406748:	madd	x8, x28, x8, x26
  40674c:	ldr	w2, [x20]
  406750:	ldr	x0, [x8, #72]
  406754:	ldr	x4, [x9, #880]
  406758:	add	x1, x19, #0x48
  40675c:	mov	w3, #0x1                   	// #1
  406760:	bl	40f2c8 <__fxstatat@plt+0xc878>
  406764:	mov	w1, wzr
  406768:	bl	410434 <__fxstatat@plt+0xd9e4>
  40676c:	ldr	w8, [x20, #40]
  406770:	cmp	w8, w0
  406774:	b.ge	406780 <__fxstatat@plt+0x3d30>  // b.tcont
  406778:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40677c:	str	w0, [x8, #584]
  406780:	ldr	x20, [x19, #8]
  406784:	b	406878 <__fxstatat@plt+0x3e28>
  406788:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40678c:	add	x1, x1, #0x20e
  406790:	mov	w2, #0x2                   	// #2
  406794:	bl	402640 <strncmp@plt>
  406798:	cbnz	w0, 405c58 <__fxstatat@plt+0x3208>
  40679c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4067a0:	add	x9, x9, #0x488
  4067a4:	ldr	x8, [x9]
  4067a8:	cbz	x8, 4067e4 <__fxstatat@plt+0x3d94>
  4067ac:	ldr	x0, [x9, #8]
  4067b0:	cmp	x8, #0x2
  4067b4:	b.eq	4067d0 <__fxstatat@plt+0x3d80>  // b.none
  4067b8:	cmp	x8, #0x1
  4067bc:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  4067c0:	ldrb	w8, [x0]
  4067c4:	cmp	w8, #0x30
  4067c8:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  4067cc:	b	4067e4 <__fxstatat@plt+0x3d94>
  4067d0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4067d4:	add	x1, x1, #0x20e
  4067d8:	mov	w2, #0x2                   	// #2
  4067dc:	bl	402640 <strncmp@plt>
  4067e0:	cbnz	w0, 405c58 <__fxstatat@plt+0x3208>
  4067e4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4067e8:	add	x9, x9, #0x498
  4067ec:	ldr	x8, [x9]
  4067f0:	cbz	x8, 40682c <__fxstatat@plt+0x3ddc>
  4067f4:	ldr	x0, [x9, #8]
  4067f8:	cmp	x8, #0x2
  4067fc:	b.eq	406818 <__fxstatat@plt+0x3dc8>  // b.none
  406800:	cmp	x8, #0x1
  406804:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  406808:	ldrb	w8, [x0]
  40680c:	cmp	w8, #0x30
  406810:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  406814:	b	40682c <__fxstatat@plt+0x3ddc>
  406818:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40681c:	add	x1, x1, #0x20e
  406820:	mov	w2, #0x2                   	// #2
  406824:	bl	402640 <strncmp@plt>
  406828:	cbnz	w0, 405c58 <__fxstatat@plt+0x3208>
  40682c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  406830:	add	x8, x8, #0x4d8
  406834:	ldr	x24, [x8]
  406838:	cbz	x24, 406878 <__fxstatat@plt+0x3e28>
  40683c:	ldr	x0, [x8, #8]
  406840:	cmp	x24, #0x2
  406844:	b.eq	406860 <__fxstatat@plt+0x3e10>  // b.none
  406848:	cmp	x24, #0x1
  40684c:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  406850:	ldrb	w8, [x0]
  406854:	cmp	w8, #0x30
  406858:	b.ne	405c58 <__fxstatat@plt+0x3208>  // b.any
  40685c:	b	406874 <__fxstatat@plt+0x3e24>
  406860:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406864:	add	x1, x1, #0x20e
  406868:	mov	w2, #0x2                   	// #2
  40686c:	bl	402640 <strncmp@plt>
  406870:	cbnz	w0, 405c58 <__fxstatat@plt+0x3208>
  406874:	mov	x24, xzr
  406878:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40687c:	ldrb	w8, [x8, #489]
  406880:	cmp	w8, #0x1
  406884:	b.ne	4068ac <__fxstatat@plt+0x3e5c>  // b.any
  406888:	ldr	x0, [x21]
  40688c:	add	x1, x19, #0x48
  406890:	bl	40ffa0 <__fxstatat@plt+0xd550>
  406894:	bl	402430 <strlen@plt>
  406898:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40689c:	ldr	w9, [x8, #548]
  4068a0:	cmp	w9, w0
  4068a4:	b.ge	4068ac <__fxstatat@plt+0x3e5c>  // b.tcont
  4068a8:	str	w0, [x8, #548]
  4068ac:	mov	x0, x20
  4068b0:	bl	41464c <__fxstatat@plt+0x11bfc>
  4068b4:	str	x0, [x27]
  4068b8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4068bc:	ldr	x9, [x8, #640]
  4068c0:	add	x9, x9, #0x1
  4068c4:	str	x9, [x8, #640]
  4068c8:	mov	x0, x24
  4068cc:	mov	sp, x29
  4068d0:	ldp	x20, x19, [sp, #80]
  4068d4:	ldp	x22, x21, [sp, #64]
  4068d8:	ldp	x24, x23, [sp, #48]
  4068dc:	ldp	x26, x25, [sp, #32]
  4068e0:	ldp	x28, x27, [sp, #16]
  4068e4:	ldp	x29, x30, [sp], #96
  4068e8:	ret
  4068ec:	bl	4146a4 <__fxstatat@plt+0x11c54>
  4068f0:	stp	x29, x30, [sp, #-32]!
  4068f4:	str	x19, [sp, #16]
  4068f8:	adrp	x19, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4068fc:	add	x19, x19, #0x280
  406900:	ldr	x8, [x19]
  406904:	ldr	x9, [x19, #128]
  406908:	mov	x29, sp
  40690c:	add	x10, x8, x8, lsr #1
  406910:	cmp	x9, x10
  406914:	b.cs	406954 <__fxstatat@plt+0x3f04>  // b.hs, b.nlast
  406918:	ldr	x0, [x19, #96]
  40691c:	bl	402840 <free@plt>
  406920:	ldr	x8, [x19]
  406924:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  406928:	movk	x9, #0x5556
  40692c:	movk	x9, #0x555, lsl #48
  406930:	cmp	x8, x9
  406934:	b.cs	406b50 <__fxstatat@plt+0x4100>  // b.hs, b.nlast
  406938:	add	x8, x8, x8, lsl #1
  40693c:	lsl	x0, x8, #3
  406940:	bl	414368 <__fxstatat@plt+0x11918>
  406944:	ldr	x8, [x19]
  406948:	str	x0, [x19, #96]
  40694c:	add	x9, x8, x8, lsl #1
  406950:	str	x9, [x19, #128]
  406954:	cbz	x8, 406a00 <__fxstatat@plt+0x3fb0>
  406958:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40695c:	add	x10, x10, #0x278
  406960:	ldr	x9, [x10]
  406964:	ldr	x10, [x10, #104]
  406968:	cmp	x8, #0x4
  40696c:	b.cs	406978 <__fxstatat@plt+0x3f28>  // b.hs, b.nlast
  406970:	mov	x11, xzr
  406974:	b	4069e0 <__fxstatat@plt+0x3f90>
  406978:	adrp	x14, 417000 <_obstack_memory_used@@Base+0x1ad0>
  40697c:	ldr	q1, [x14, #1632]
  406980:	mov	w14, #0x170                 	// #368
  406984:	and	x11, x8, #0xfffffffffffffffc
  406988:	dup	v2.2d, x14
  40698c:	mov	w14, #0x4                   	// #4
  406990:	add	x12, x10, #0x10
  406994:	mov	w13, #0xb8                  	// #184
  406998:	dup	v0.2d, x9
  40699c:	dup	v3.2d, x14
  4069a0:	mov	x14, x11
  4069a4:	fmov	x16, d1
  4069a8:	mov	x15, v1.d[1]
  4069ac:	mul	x16, x16, x13
  4069b0:	mul	x15, x15, x13
  4069b4:	fmov	d4, x16
  4069b8:	mov	v4.d[1], x15
  4069bc:	add	v4.2d, v0.2d, v4.2d
  4069c0:	add	v5.2d, v4.2d, v2.2d
  4069c4:	add	v1.2d, v1.2d, v3.2d
  4069c8:	subs	x14, x14, #0x4
  4069cc:	stp	q4, q5, [x12, #-16]
  4069d0:	add	x12, x12, #0x20
  4069d4:	b.ne	4069a4 <__fxstatat@plt+0x3f54>  // b.any
  4069d8:	cmp	x8, x11
  4069dc:	b.eq	406a00 <__fxstatat@plt+0x3fb0>  // b.none
  4069e0:	mov	w12, #0xb8                  	// #184
  4069e4:	sub	x8, x8, x11
  4069e8:	add	x10, x10, x11, lsl #3
  4069ec:	madd	x9, x11, x12, x9
  4069f0:	str	x9, [x10], #8
  4069f4:	subs	x8, x8, #0x1
  4069f8:	add	x9, x9, #0xb8
  4069fc:	b.ne	4069f0 <__fxstatat@plt+0x3fa0>  // b.any
  406a00:	adrp	x19, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406a04:	ldr	w8, [x19, #520]
  406a08:	cmn	w8, #0x1
  406a0c:	b.eq	406b44 <__fxstatat@plt+0x40f4>  // b.none
  406a10:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406a14:	add	x0, x0, #0x5b8
  406a18:	bl	402470 <_setjmp@plt>
  406a1c:	cbz	w0, 406a58 <__fxstatat@plt+0x4008>
  406a20:	ldr	w8, [x19, #520]
  406a24:	cmp	w8, #0x3
  406a28:	b.eq	406b54 <__fxstatat@plt+0x4104>  // b.none
  406a2c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406a30:	ldr	x1, [x9, #640]
  406a34:	cbz	x1, 406ad8 <__fxstatat@plt+0x4088>
  406a38:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406a3c:	add	x9, x9, #0x278
  406a40:	ldr	x11, [x9]
  406a44:	ldr	x9, [x9, #104]
  406a48:	cmp	x1, #0x4
  406a4c:	b.cs	406a70 <__fxstatat@plt+0x4020>  // b.hs, b.nlast
  406a50:	mov	x10, xzr
  406a54:	b	406ae0 <__fxstatat@plt+0x4090>
  406a58:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406a5c:	add	x8, x8, #0x208
  406a60:	ldr	x1, [x8, #120]
  406a64:	ldr	w8, [x8]
  406a68:	mov	x11, xzr
  406a6c:	b	406b00 <__fxstatat@plt+0x40b0>
  406a70:	adrp	x14, 417000 <_obstack_memory_used@@Base+0x1ad0>
  406a74:	ldr	q1, [x14, #1632]
  406a78:	mov	w14, #0x170                 	// #368
  406a7c:	and	x10, x1, #0xfffffffffffffffc
  406a80:	dup	v2.2d, x14
  406a84:	mov	w14, #0x4                   	// #4
  406a88:	add	x12, x9, #0x10
  406a8c:	mov	w13, #0xb8                  	// #184
  406a90:	dup	v0.2d, x11
  406a94:	dup	v3.2d, x14
  406a98:	mov	x14, x10
  406a9c:	fmov	x16, d1
  406aa0:	mov	x15, v1.d[1]
  406aa4:	mul	x16, x16, x13
  406aa8:	mul	x15, x15, x13
  406aac:	fmov	d4, x16
  406ab0:	mov	v4.d[1], x15
  406ab4:	add	v4.2d, v0.2d, v4.2d
  406ab8:	add	v5.2d, v4.2d, v2.2d
  406abc:	add	v1.2d, v1.2d, v3.2d
  406ac0:	subs	x14, x14, #0x4
  406ac4:	stp	q4, q5, [x12, #-16]
  406ac8:	add	x12, x12, #0x20
  406acc:	b.ne	406a9c <__fxstatat@plt+0x404c>  // b.any
  406ad0:	cmp	x1, x10
  406ad4:	b.ne	406ae0 <__fxstatat@plt+0x4090>  // b.any
  406ad8:	mov	w11, #0x1                   	// #1
  406adc:	b	406b00 <__fxstatat@plt+0x40b0>
  406ae0:	mov	w12, #0xb8                  	// #184
  406ae4:	madd	x12, x10, x12, x11
  406ae8:	mov	w11, #0x1                   	// #1
  406aec:	str	x12, [x9, x10, lsl #3]
  406af0:	add	x10, x10, #0x1
  406af4:	cmp	x1, x10
  406af8:	add	x12, x12, #0xb8
  406afc:	b.ne	406aec <__fxstatat@plt+0x409c>  // b.any
  406b00:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406b04:	add	x9, x9, #0x1d5
  406b08:	ldur	w12, [x9, #63]
  406b0c:	cmp	w8, #0x4
  406b10:	add	x10, x9, #0x10b
  406b14:	ldr	x0, [x10]
  406b18:	csel	w10, w12, wzr, eq  // eq = none
  406b1c:	ldrb	w13, [x9, #18]
  406b20:	add	w8, w10, w8
  406b24:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x3ad0>
  406b28:	ldrb	w9, [x9]
  406b2c:	add	x10, x10, #0x268
  406b30:	add	x8, x10, x8, lsl #6
  406b34:	add	x8, x8, x11, lsl #5
  406b38:	add	x8, x8, x13, lsl #4
  406b3c:	ldr	x2, [x8, x9, lsl #3]
  406b40:	bl	4106f8 <__fxstatat@plt+0xdca8>
  406b44:	ldr	x19, [sp, #16]
  406b48:	ldp	x29, x30, [sp], #32
  406b4c:	ret
  406b50:	bl	4146a4 <__fxstatat@plt+0x11c54>
  406b54:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406b58:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  406b5c:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406b60:	add	x0, x0, #0x907
  406b64:	add	x1, x1, #0x54b
  406b68:	add	x3, x3, #0x921
  406b6c:	mov	w2, #0xeea                 	// #3818
  406b70:	bl	4029d0 <__assert_fail@plt>
  406b74:	stp	x29, x30, [sp, #-96]!
  406b78:	stp	x20, x19, [sp, #80]
  406b7c:	mov	w20, w1
  406b80:	mov	x19, x0
  406b84:	stp	x28, x27, [sp, #16]
  406b88:	stp	x26, x25, [sp, #32]
  406b8c:	stp	x24, x23, [sp, #48]
  406b90:	stp	x22, x21, [sp, #64]
  406b94:	mov	x29, sp
  406b98:	cbz	x0, 406bd4 <__fxstatat@plt+0x4184>
  406b9c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406ba0:	ldr	x8, [x8, #600]
  406ba4:	cbz	x8, 406bd4 <__fxstatat@plt+0x4184>
  406ba8:	mov	w0, #0x20                  	// #32
  406bac:	bl	414368 <__fxstatat@plt+0x11918>
  406bb0:	mov	x21, x0
  406bb4:	mov	x0, x19
  406bb8:	bl	41464c <__fxstatat@plt+0x11bfc>
  406bbc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406bc0:	ldr	x9, [x8, #592]
  406bc4:	stp	xzr, x0, [x21]
  406bc8:	strb	wzr, [x21, #16]
  406bcc:	str	x21, [x8, #592]
  406bd0:	str	x9, [x21, #24]
  406bd4:	adrp	x13, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406bd8:	ldr	x8, [x13, #640]
  406bdc:	cbz	x8, 406e38 <__fxstatat@plt+0x43e8>
  406be0:	sub	x24, x8, #0x1
  406be4:	and	w25, w20, #0x1
  406be8:	cbz	x19, 406d4c <__fxstatat@plt+0x42fc>
  406bec:	adrp	x26, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406bf0:	mov	w27, #0x1                   	// #1
  406bf4:	adrp	x28, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406bf8:	b	406c20 <__fxstatat@plt+0x41d0>
  406bfc:	ldr	x0, [x23]
  406c00:	bl	402840 <free@plt>
  406c04:	ldr	x0, [x23, #8]
  406c08:	bl	402840 <free@plt>
  406c0c:	ldr	x0, [x23, #16]
  406c10:	bl	402840 <free@plt>
  406c14:	sub	x24, x24, #0x1
  406c18:	cmn	x24, #0x1
  406c1c:	b.eq	406df8 <__fxstatat@plt+0x43a8>  // b.none
  406c20:	ldr	x8, [x26, #736]
  406c24:	ldr	x23, [x8, x24, lsl #3]
  406c28:	ldr	w8, [x23, #152]
  406c2c:	cmp	w8, #0x9
  406c30:	ccmp	w8, #0x3, #0x4, ne  // ne = any
  406c34:	b.ne	406c14 <__fxstatat@plt+0x41c4>  // b.any
  406c38:	ldr	x20, [x23]
  406c3c:	mov	x0, x20
  406c40:	bl	40d6ec <__fxstatat@plt+0xac9c>
  406c44:	ldrb	w8, [x0]
  406c48:	cmp	w8, #0x2e
  406c4c:	b.ne	406c6c <__fxstatat@plt+0x421c>  // b.any
  406c50:	ldrb	w8, [x0, #1]
  406c54:	cmp	w8, #0x2e
  406c58:	cinc	x8, x27, eq  // eq = none
  406c5c:	ldrb	w8, [x0, x8]
  406c60:	cbz	w8, 406c14 <__fxstatat@plt+0x41c4>
  406c64:	cmp	w8, #0x2f
  406c68:	b.eq	406c14 <__fxstatat@plt+0x41c4>  // b.none
  406c6c:	ldrb	w8, [x20]
  406c70:	cmp	w8, #0x2f
  406c74:	b.ne	406c98 <__fxstatat@plt+0x4248>  // b.any
  406c78:	ldr	x22, [x23, #8]
  406c7c:	mov	w0, #0x20                  	// #32
  406c80:	bl	414368 <__fxstatat@plt+0x11918>
  406c84:	mov	x21, x0
  406c88:	cbz	x22, 406cdc <__fxstatat@plt+0x428c>
  406c8c:	mov	x0, x22
  406c90:	bl	41464c <__fxstatat@plt+0x11bfc>
  406c94:	b	406ce0 <__fxstatat@plt+0x4290>
  406c98:	mov	x0, x19
  406c9c:	mov	x1, x20
  406ca0:	mov	x2, xzr
  406ca4:	bl	40da48 <__fxstatat@plt+0xaff8>
  406ca8:	ldr	x22, [x23, #8]
  406cac:	mov	x20, x0
  406cb0:	mov	w0, #0x20                  	// #32
  406cb4:	bl	414368 <__fxstatat@plt+0x11918>
  406cb8:	mov	x21, x0
  406cbc:	cbz	x22, 406d10 <__fxstatat@plt+0x42c0>
  406cc0:	mov	x0, x22
  406cc4:	bl	41464c <__fxstatat@plt+0x11bfc>
  406cc8:	str	x0, [x21, #8]
  406ccc:	cbz	x20, 406d1c <__fxstatat@plt+0x42cc>
  406cd0:	mov	x0, x20
  406cd4:	bl	41464c <__fxstatat@plt+0x11bfc>
  406cd8:	b	406d20 <__fxstatat@plt+0x42d0>
  406cdc:	mov	x0, xzr
  406ce0:	str	x0, [x21, #8]
  406ce4:	mov	x0, x20
  406ce8:	bl	41464c <__fxstatat@plt+0x11bfc>
  406cec:	ldr	x8, [x28, #592]
  406cf0:	str	x0, [x21]
  406cf4:	strb	w25, [x21, #16]
  406cf8:	str	x21, [x28, #592]
  406cfc:	str	x8, [x21, #24]
  406d00:	ldr	w8, [x23, #152]
  406d04:	cmp	w8, #0x9
  406d08:	b.ne	406c14 <__fxstatat@plt+0x41c4>  // b.any
  406d0c:	b	406bfc <__fxstatat@plt+0x41ac>
  406d10:	mov	x0, xzr
  406d14:	str	x0, [x21, #8]
  406d18:	cbnz	x20, 406cd0 <__fxstatat@plt+0x4280>
  406d1c:	mov	x0, xzr
  406d20:	ldr	x8, [x28, #592]
  406d24:	str	x0, [x21]
  406d28:	mov	x0, x20
  406d2c:	strb	w25, [x21, #16]
  406d30:	str	x8, [x21, #24]
  406d34:	str	x21, [x28, #592]
  406d38:	bl	402840 <free@plt>
  406d3c:	ldr	w8, [x23, #152]
  406d40:	cmp	w8, #0x9
  406d44:	b.ne	406c14 <__fxstatat@plt+0x41c4>  // b.any
  406d48:	b	406bfc <__fxstatat@plt+0x41ac>
  406d4c:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406d50:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406d54:	b	406d64 <__fxstatat@plt+0x4314>
  406d58:	sub	x24, x24, #0x1
  406d5c:	cmn	x24, #0x1
  406d60:	b.eq	406df8 <__fxstatat@plt+0x43a8>  // b.none
  406d64:	ldr	x8, [x22, #736]
  406d68:	ldr	x26, [x8, x24, lsl #3]
  406d6c:	ldr	w8, [x26, #152]
  406d70:	cmp	w8, #0x9
  406d74:	ccmp	w8, #0x3, #0x4, ne  // ne = any
  406d78:	b.ne	406d58 <__fxstatat@plt+0x4308>  // b.any
  406d7c:	ldp	x20, x21, [x26]
  406d80:	mov	w0, #0x20                  	// #32
  406d84:	bl	414368 <__fxstatat@plt+0x11918>
  406d88:	mov	x19, x0
  406d8c:	cbz	x21, 406dac <__fxstatat@plt+0x435c>
  406d90:	mov	x0, x21
  406d94:	bl	41464c <__fxstatat@plt+0x11bfc>
  406d98:	str	x0, [x19, #8]
  406d9c:	cbz	x20, 406db8 <__fxstatat@plt+0x4368>
  406da0:	mov	x0, x20
  406da4:	bl	41464c <__fxstatat@plt+0x11bfc>
  406da8:	b	406dbc <__fxstatat@plt+0x436c>
  406dac:	mov	x0, xzr
  406db0:	str	x0, [x19, #8]
  406db4:	cbnz	x20, 406da0 <__fxstatat@plt+0x4350>
  406db8:	mov	x0, xzr
  406dbc:	ldr	x8, [x23, #592]
  406dc0:	str	x0, [x19]
  406dc4:	strb	w25, [x19, #16]
  406dc8:	str	x19, [x23, #592]
  406dcc:	str	x8, [x19, #24]
  406dd0:	ldr	w8, [x26, #152]
  406dd4:	cmp	w8, #0x9
  406dd8:	b.ne	406d58 <__fxstatat@plt+0x4308>  // b.any
  406ddc:	ldr	x0, [x26]
  406de0:	bl	402840 <free@plt>
  406de4:	ldr	x0, [x26, #8]
  406de8:	bl	402840 <free@plt>
  406dec:	ldr	x0, [x26, #16]
  406df0:	bl	402840 <free@plt>
  406df4:	b	406d58 <__fxstatat@plt+0x4308>
  406df8:	adrp	x13, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406dfc:	ldr	x8, [x13, #640]
  406e00:	cbz	x8, 406e38 <__fxstatat@plt+0x43e8>
  406e04:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406e08:	ldr	x11, [x10, #736]
  406e0c:	mov	x9, xzr
  406e10:	mov	x10, xzr
  406e14:	ldr	x12, [x11, x9, lsl #3]
  406e18:	add	x9, x9, #0x1
  406e1c:	str	x12, [x11, x10, lsl #3]
  406e20:	ldr	w12, [x12, #152]
  406e24:	cmp	w12, #0x9
  406e28:	cinc	x10, x10, ne  // ne = any
  406e2c:	cmp	x9, x8
  406e30:	b.cc	406e14 <__fxstatat@plt+0x43c4>  // b.lo, b.ul, b.last
  406e34:	b	406e3c <__fxstatat@plt+0x43ec>
  406e38:	mov	x10, xzr
  406e3c:	ldp	x20, x19, [sp, #80]
  406e40:	ldp	x22, x21, [sp, #64]
  406e44:	ldp	x24, x23, [sp, #48]
  406e48:	ldp	x26, x25, [sp, #32]
  406e4c:	ldp	x28, x27, [sp, #16]
  406e50:	str	x10, [x13, #640]
  406e54:	ldp	x29, x30, [sp], #96
  406e58:	ret
  406e5c:	stp	x29, x30, [sp, #-96]!
  406e60:	stp	x28, x27, [sp, #16]
  406e64:	stp	x26, x25, [sp, #32]
  406e68:	stp	x24, x23, [sp, #48]
  406e6c:	stp	x22, x21, [sp, #64]
  406e70:	stp	x20, x19, [sp, #80]
  406e74:	mov	x29, sp
  406e78:	sub	sp, sp, #0x1, lsl #12
  406e7c:	sub	sp, sp, #0x2e0
  406e80:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406e84:	ldr	w8, [x8, #508]
  406e88:	cmp	w8, #0x4
  406e8c:	b.hi	407fdc <__fxstatat@plt+0x558c>  // b.pmore
  406e90:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x1ad0>
  406e94:	add	x9, x9, #0x8a8
  406e98:	adr	x10, 406ea8 <__fxstatat@plt+0x4458>
  406e9c:	ldrh	w11, [x9, x8, lsl #1]
  406ea0:	add	x10, x10, x11, lsl #2
  406ea4:	br	x10
  406ea8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406eac:	ldr	x8, [x8, #640]
  406eb0:	cbz	x8, 407fdc <__fxstatat@plt+0x558c>
  406eb4:	add	x8, sp, #0xea0
  406eb8:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  406ebc:	mov	x22, xzr
  406ec0:	mov	w19, #0x20                  	// #32
  406ec4:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  406ec8:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406ecc:	orr	x8, x8, #0x1
  406ed0:	add	x27, x27, #0x3c8
  406ed4:	str	x8, [sp, #16]
  406ed8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406edc:	ldrb	w8, [x8, #468]
  406ee0:	cbz	w8, 406f44 <__fxstatat@plt+0x44f4>
  406ee4:	ldr	x8, [x27]
  406ee8:	cbz	x8, 406f44 <__fxstatat@plt+0x44f4>
  406eec:	ldr	x0, [x27, #8]
  406ef0:	cmp	x8, #0x2
  406ef4:	b.eq	406f10 <__fxstatat@plt+0x44c0>  // b.none
  406ef8:	cmp	x8, #0x1
  406efc:	b.ne	406f24 <__fxstatat@plt+0x44d4>  // b.any
  406f00:	ldrb	w8, [x0]
  406f04:	cmp	w8, #0x30
  406f08:	b.ne	406f24 <__fxstatat@plt+0x44d4>  // b.any
  406f0c:	b	406f44 <__fxstatat@plt+0x44f4>
  406f10:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406f14:	mov	w2, #0x2                   	// #2
  406f18:	add	x1, x1, #0x20e
  406f1c:	bl	402640 <strncmp@plt>
  406f20:	cbz	w0, 406f44 <__fxstatat@plt+0x44f4>
  406f24:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  406f28:	add	x21, x21, #0x388
  406f2c:	mov	x0, x21
  406f30:	bl	408560 <__fxstatat@plt+0x5b10>
  406f34:	add	x0, x21, #0x40
  406f38:	bl	408560 <__fxstatat@plt+0x5b10>
  406f3c:	add	x0, x21, #0x10
  406f40:	bl	408560 <__fxstatat@plt+0x5b10>
  406f44:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406f48:	ldr	x8, [x8, #736]
  406f4c:	ldr	x28, [x8, x22, lsl #3]
  406f50:	ldrb	w8, [x28, #168]
  406f54:	cbz	w8, 406f74 <__fxstatat@plt+0x4524>
  406f58:	add	x0, x28, #0x18
  406f5c:	add	x1, sp, #0xea0
  406f60:	bl	40da40 <__fxstatat@plt+0xaff0>
  406f64:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406f68:	ldrb	w8, [x8, #500]
  406f6c:	cbnz	w8, 406fa8 <__fxstatat@plt+0x4558>
  406f70:	b	406fc8 <__fxstatat@plt+0x4578>
  406f74:	ldr	w8, [x28, #152]
  406f78:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  406f7c:	add	x9, x9, #0x937
  406f80:	ldrb	w8, [x9, x8]
  406f84:	ldr	x9, [sp, #16]
  406f88:	strb	w8, [sp, #3744]
  406f8c:	mov	x8, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  406f90:	strh	w8, [x9, #8]
  406f94:	str	x8, [x9]
  406f98:	strb	wzr, [sp, #3755]
  406f9c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406fa0:	ldrb	w8, [x8, #500]
  406fa4:	cbz	w8, 406fc8 <__fxstatat@plt+0x4578>
  406fa8:	ldr	w8, [x28, #172]
  406fac:	cmp	w8, #0x1
  406fb0:	b.eq	406fc4 <__fxstatat@plt+0x4574>  // b.none
  406fb4:	cmp	w8, #0x2
  406fb8:	b.ne	406fcc <__fxstatat@plt+0x457c>  // b.any
  406fbc:	mov	w8, #0x2b                  	// #43
  406fc0:	b	406fc8 <__fxstatat@plt+0x4578>
  406fc4:	mov	w8, #0x2e                  	// #46
  406fc8:	strb	w8, [sp, #3754]
  406fcc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  406fd0:	ldr	w8, [x8, #532]
  406fd4:	cbz	w8, 406ff8 <__fxstatat@plt+0x45a8>
  406fd8:	cmp	w8, #0x2
  406fdc:	b.eq	406ff0 <__fxstatat@plt+0x45a0>  // b.none
  406fe0:	cmp	w8, #0x1
  406fe4:	b.ne	408028 <__fxstatat@plt+0x55d8>  // b.any
  406fe8:	ldp	x9, x8, [x28, #128]
  406fec:	b	406ffc <__fxstatat@plt+0x45ac>
  406ff0:	ldp	x9, x8, [x28, #96]
  406ff4:	b	406ffc <__fxstatat@plt+0x45ac>
  406ff8:	ldp	x9, x8, [x28, #112]
  406ffc:	stp	x9, x8, [sp, #80]
  407000:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407004:	ldrb	w9, [x9, #489]
  407008:	cmp	w9, #0x1
  40700c:	b.ne	407038 <__fxstatat@plt+0x45e8>  // b.any
  407010:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407014:	ldrb	w8, [x28, #168]
  407018:	ldr	w23, [x9, #548]
  40701c:	cbz	w8, 407070 <__fxstatat@plt+0x4620>
  407020:	ldr	x0, [x28, #32]
  407024:	cbz	x0, 407070 <__fxstatat@plt+0x4620>
  407028:	add	x1, sp, #0xeac
  40702c:	bl	40ffa0 <__fxstatat@plt+0xd550>
  407030:	mov	x5, x0
  407034:	b	407078 <__fxstatat@plt+0x4628>
  407038:	add	x26, sp, #0x64
  40703c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407040:	ldrb	w8, [x8, #475]
  407044:	cmp	w8, #0x1
  407048:	b.eq	4070b4 <__fxstatat@plt+0x4664>  // b.none
  40704c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407050:	ldrb	w8, [x28, #168]
  407054:	ldr	w23, [x9, #556]
  407058:	cbz	w8, 407144 <__fxstatat@plt+0x46f4>
  40705c:	ldr	w0, [x28, #44]
  407060:	add	x1, sp, #0xeac
  407064:	bl	40ffa0 <__fxstatat@plt+0xd550>
  407068:	mov	x6, x0
  40706c:	b	40714c <__fxstatat@plt+0x46fc>
  407070:	adrp	x5, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407074:	add	x5, x5, #0x76e
  407078:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40707c:	add	x0, sp, #0x64
  407080:	mov	w1, #0x1                   	// #1
  407084:	mov	w2, #0xe3b                 	// #3643
  407088:	add	x3, x3, #0x94f
  40708c:	mov	w4, w23
  407090:	bl	402440 <__sprintf_chk@plt>
  407094:	add	x0, sp, #0x64
  407098:	bl	402430 <strlen@plt>
  40709c:	add	x8, sp, #0x64
  4070a0:	add	x26, x8, x0
  4070a4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4070a8:	ldrb	w8, [x8, #475]
  4070ac:	cmp	w8, #0x1
  4070b0:	b.ne	40704c <__fxstatat@plt+0x45fc>  // b.any
  4070b4:	ldrb	w8, [x28, #168]
  4070b8:	cbz	w8, 4070e4 <__fxstatat@plt+0x4694>
  4070bc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4070c0:	add	x8, x8, #0x21c
  4070c4:	ldr	x0, [x28, #88]
  4070c8:	ldr	w2, [x8]
  4070cc:	ldur	x4, [x8, #156]
  4070d0:	add	x1, sp, #0xeac
  4070d4:	mov	w3, #0x200                 	// #512
  4070d8:	bl	40f2c8 <__fxstatat@plt+0xc878>
  4070dc:	mov	x23, x0
  4070e0:	b	4070ec <__fxstatat@plt+0x469c>
  4070e4:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4070e8:	add	x23, x23, #0x76e
  4070ec:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4070f0:	ldr	w21, [x8, #552]
  4070f4:	mov	x0, x23
  4070f8:	mov	w1, wzr
  4070fc:	bl	410434 <__fxstatat@plt+0xd9e4>
  407100:	sub	w8, w21, w0
  407104:	subs	w21, w8, #0x1
  407108:	b.lt	407124 <__fxstatat@plt+0x46d4>  // b.tstop
  40710c:	add	x2, x21, #0x1
  407110:	mov	w1, #0x20                  	// #32
  407114:	mov	x0, x26
  407118:	bl	402680 <memset@plt>
  40711c:	add	x8, x26, x21
  407120:	add	x26, x8, #0x1
  407124:	ldrb	w8, [x23], #1
  407128:	strb	w8, [x26], #1
  40712c:	cbnz	w8, 407124 <__fxstatat@plt+0x46d4>
  407130:	sturb	w19, [x26, #-1]
  407134:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407138:	ldrb	w8, [x28, #168]
  40713c:	ldr	w23, [x9, #556]
  407140:	cbnz	w8, 40705c <__fxstatat@plt+0x460c>
  407144:	adrp	x6, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407148:	add	x6, x6, #0x76e
  40714c:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407150:	add	x4, sp, #0xea0
  407154:	mov	w1, #0x1                   	// #1
  407158:	mov	x2, #0xffffffffffffffff    	// #-1
  40715c:	mov	x0, x26
  407160:	add	x3, x3, #0x942
  407164:	mov	w5, w23
  407168:	bl	402440 <__sprintf_chk@plt>
  40716c:	mov	x0, x26
  407170:	bl	402430 <strlen@plt>
  407174:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407178:	ldrb	w8, [x8, #481]
  40717c:	mov	x23, x0
  407180:	cmp	w8, #0x1
  407184:	b.ne	4071a4 <__fxstatat@plt+0x4754>  // b.any
  407188:	ldr	x1, [x24, #1456]
  40718c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407190:	add	x0, x0, #0x86c
  407194:	bl	402980 <fputs_unlocked@plt>
  407198:	ldr	x8, [x20, #648]
  40719c:	add	x8, x8, #0x2
  4071a0:	str	x8, [x20, #648]
  4071a4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4071a8:	ldrb	w8, [x8, #490]
  4071ac:	add	x26, x26, x23
  4071b0:	cmp	w8, #0x1
  4071b4:	b.ne	4071e4 <__fxstatat@plt+0x4794>  // b.any
  4071b8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4071bc:	ldrb	w8, [x8, #491]
  4071c0:	cmp	w8, #0x1
  4071c4:	b.ne	4071e4 <__fxstatat@plt+0x4794>  // b.any
  4071c8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4071cc:	ldrb	w8, [x8, #492]
  4071d0:	tbnz	w8, #0, 4071e4 <__fxstatat@plt+0x4794>
  4071d4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4071d8:	ldrb	w8, [x8, #474]
  4071dc:	cmp	w8, #0x1
  4071e0:	b.ne	4075a0 <__fxstatat@plt+0x4b50>  // b.any
  4071e4:	ldr	x1, [x24, #1456]
  4071e8:	add	x0, sp, #0x64
  4071ec:	bl	402980 <fputs_unlocked@plt>
  4071f0:	adrp	x11, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4071f4:	add	x11, x11, #0x1ea
  4071f8:	ldur	x8, [x11, #158]
  4071fc:	ldrb	w9, [x11]
  407200:	add	x10, sp, #0x64
  407204:	sub	x10, x26, x10
  407208:	add	x8, x10, x8
  40720c:	stur	x8, [x11, #158]
  407210:	tbz	w9, #0, 40727c <__fxstatat@plt+0x482c>
  407214:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407218:	ldrb	w8, [x8, #491]
  40721c:	tbz	w8, #0, 407404 <__fxstatat@plt+0x49b4>
  407220:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407224:	ldrb	w8, [x8, #492]
  407228:	cmp	w8, #0x1
  40722c:	b.ne	4074e4 <__fxstatat@plt+0x4a94>  // b.any
  407230:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407234:	ldrb	w8, [x28, #168]
  407238:	ldrsw	x26, [x9, #568]
  40723c:	cbz	w8, 4072c8 <__fxstatat@plt+0x4878>
  407240:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407244:	ldrb	w8, [x8, #488]
  407248:	ldr	w25, [x28, #48]
  40724c:	tbnz	w8, #0, 407260 <__fxstatat@plt+0x4810>
  407250:	mov	w0, w25
  407254:	bl	40fbd0 <__fxstatat@plt+0xd180>
  407258:	mov	x23, x0
  40725c:	cbnz	x0, 4072d0 <__fxstatat@plt+0x4880>
  407260:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407264:	mov	w0, #0x1                   	// #1
  407268:	add	x1, x1, #0x959
  40726c:	mov	w2, w26
  407270:	mov	x3, x25
  407274:	bl	402670 <__printf_chk@plt>
  407278:	b	40733c <__fxstatat@plt+0x48ec>
  40727c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407280:	ldrb	w8, [x28, #168]
  407284:	ldrsw	x26, [x9, #560]
  407288:	cbz	w8, 407374 <__fxstatat@plt+0x4924>
  40728c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407290:	ldrb	w8, [x8, #488]
  407294:	ldr	w25, [x28, #48]
  407298:	tbnz	w8, #0, 4072ac <__fxstatat@plt+0x485c>
  40729c:	mov	w0, w25
  4072a0:	bl	40fbd0 <__fxstatat@plt+0xd180>
  4072a4:	mov	x23, x0
  4072a8:	cbnz	x0, 40737c <__fxstatat@plt+0x492c>
  4072ac:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4072b0:	mov	w0, #0x1                   	// #1
  4072b4:	add	x1, x1, #0x959
  4072b8:	mov	w2, w26
  4072bc:	mov	x3, x25
  4072c0:	bl	402670 <__printf_chk@plt>
  4072c4:	b	4073e8 <__fxstatat@plt+0x4998>
  4072c8:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4072cc:	add	x23, x23, #0x76e
  4072d0:	mov	x0, x23
  4072d4:	mov	w1, wzr
  4072d8:	bl	410434 <__fxstatat@plt+0xd9e4>
  4072dc:	ldr	x1, [x24, #1456]
  4072e0:	sub	w8, w26, w0
  4072e4:	mov	x0, x23
  4072e8:	bic	w21, w8, w8, asr #31
  4072ec:	bl	402980 <fputs_unlocked@plt>
  4072f0:	mov	x0, x23
  4072f4:	bl	402430 <strlen@plt>
  4072f8:	mov	x23, x0
  4072fc:	add	w25, w21, #0x1
  407300:	ldr	x0, [x24, #1456]
  407304:	ldp	x8, x9, [x0, #40]
  407308:	cmp	x8, x9
  40730c:	b.cs	407328 <__fxstatat@plt+0x48d8>  // b.hs, b.nlast
  407310:	add	x9, x8, #0x1
  407314:	str	x9, [x0, #40]
  407318:	strb	w19, [x8]
  40731c:	subs	w25, w25, #0x1
  407320:	b.ne	407300 <__fxstatat@plt+0x48b0>  // b.any
  407324:	b	407338 <__fxstatat@plt+0x48e8>
  407328:	mov	w1, #0x20                  	// #32
  40732c:	bl	402790 <__overflow@plt>
  407330:	subs	w25, w25, #0x1
  407334:	b.ne	407300 <__fxstatat@plt+0x48b0>  // b.any
  407338:	add	x26, x23, w21, uxtw
  40733c:	ldr	x8, [x20, #648]
  407340:	add	x8, x26, x8
  407344:	add	x8, x8, #0x1
  407348:	str	x8, [x20, #648]
  40734c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407350:	ldrb	w8, [x8, #474]
  407354:	cmp	w8, #0x1
  407358:	b.eq	4074f4 <__fxstatat@plt+0x4aa4>  // b.none
  40735c:	add	x26, sp, #0x64
  407360:	ldrb	w8, [x28, #168]
  407364:	cbnz	w8, 4075a8 <__fxstatat@plt+0x4b58>
  407368:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40736c:	add	x23, x23, #0x76e
  407370:	b	4076a4 <__fxstatat@plt+0x4c54>
  407374:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407378:	add	x23, x23, #0x76e
  40737c:	mov	x0, x23
  407380:	mov	w1, wzr
  407384:	bl	410434 <__fxstatat@plt+0xd9e4>
  407388:	ldr	x1, [x24, #1456]
  40738c:	sub	w8, w26, w0
  407390:	mov	x0, x23
  407394:	bic	w21, w8, w8, asr #31
  407398:	bl	402980 <fputs_unlocked@plt>
  40739c:	mov	x0, x23
  4073a0:	bl	402430 <strlen@plt>
  4073a4:	mov	x23, x0
  4073a8:	add	w25, w21, #0x1
  4073ac:	ldr	x0, [x24, #1456]
  4073b0:	ldp	x8, x9, [x0, #40]
  4073b4:	cmp	x8, x9
  4073b8:	b.cs	4073d4 <__fxstatat@plt+0x4984>  // b.hs, b.nlast
  4073bc:	add	x9, x8, #0x1
  4073c0:	str	x9, [x0, #40]
  4073c4:	strb	w19, [x8]
  4073c8:	subs	w25, w25, #0x1
  4073cc:	b.ne	4073ac <__fxstatat@plt+0x495c>  // b.any
  4073d0:	b	4073e4 <__fxstatat@plt+0x4994>
  4073d4:	mov	w1, #0x20                  	// #32
  4073d8:	bl	402790 <__overflow@plt>
  4073dc:	subs	w25, w25, #0x1
  4073e0:	b.ne	4073ac <__fxstatat@plt+0x495c>  // b.any
  4073e4:	add	x26, x23, w21, uxtw
  4073e8:	ldr	x8, [x20, #648]
  4073ec:	add	x8, x26, x8
  4073f0:	add	x8, x8, #0x1
  4073f4:	str	x8, [x20, #648]
  4073f8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4073fc:	ldrb	w8, [x8, #491]
  407400:	tbnz	w8, #0, 407220 <__fxstatat@plt+0x47d0>
  407404:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407408:	ldrb	w8, [x28, #168]
  40740c:	ldrsw	x26, [x9, #564]
  407410:	cbz	w8, 407450 <__fxstatat@plt+0x4a00>
  407414:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407418:	ldrb	w8, [x8, #488]
  40741c:	ldr	w25, [x28, #52]
  407420:	tbnz	w8, #0, 407434 <__fxstatat@plt+0x49e4>
  407424:	mov	w0, w25
  407428:	bl	40fd70 <__fxstatat@plt+0xd320>
  40742c:	mov	x23, x0
  407430:	cbnz	x0, 407458 <__fxstatat@plt+0x4a08>
  407434:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407438:	mov	w0, #0x1                   	// #1
  40743c:	add	x1, x1, #0x959
  407440:	mov	w2, w26
  407444:	mov	x3, x25
  407448:	bl	402670 <__printf_chk@plt>
  40744c:	b	4074c4 <__fxstatat@plt+0x4a74>
  407450:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407454:	add	x23, x23, #0x76e
  407458:	mov	x0, x23
  40745c:	mov	w1, wzr
  407460:	bl	410434 <__fxstatat@plt+0xd9e4>
  407464:	ldr	x1, [x24, #1456]
  407468:	sub	w8, w26, w0
  40746c:	mov	x0, x23
  407470:	bic	w21, w8, w8, asr #31
  407474:	bl	402980 <fputs_unlocked@plt>
  407478:	mov	x0, x23
  40747c:	bl	402430 <strlen@plt>
  407480:	mov	x23, x0
  407484:	add	w25, w21, #0x1
  407488:	ldr	x0, [x24, #1456]
  40748c:	ldp	x8, x9, [x0, #40]
  407490:	cmp	x8, x9
  407494:	b.cs	4074b0 <__fxstatat@plt+0x4a60>  // b.hs, b.nlast
  407498:	add	x9, x8, #0x1
  40749c:	str	x9, [x0, #40]
  4074a0:	strb	w19, [x8]
  4074a4:	subs	w25, w25, #0x1
  4074a8:	b.ne	407488 <__fxstatat@plt+0x4a38>  // b.any
  4074ac:	b	4074c0 <__fxstatat@plt+0x4a70>
  4074b0:	mov	w1, #0x20                  	// #32
  4074b4:	bl	402790 <__overflow@plt>
  4074b8:	subs	w25, w25, #0x1
  4074bc:	b.ne	407488 <__fxstatat@plt+0x4a38>  // b.any
  4074c0:	add	x26, x23, w21, uxtw
  4074c4:	ldr	x8, [x20, #648]
  4074c8:	add	x8, x26, x8
  4074cc:	add	x8, x8, #0x1
  4074d0:	str	x8, [x20, #648]
  4074d4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4074d8:	ldrb	w8, [x8, #492]
  4074dc:	cmp	w8, #0x1
  4074e0:	b.eq	407230 <__fxstatat@plt+0x47e0>  // b.none
  4074e4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4074e8:	ldrb	w8, [x8, #474]
  4074ec:	cmp	w8, #0x1
  4074f0:	b.ne	40735c <__fxstatat@plt+0x490c>  // b.any
  4074f4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4074f8:	ldr	x26, [x28, #160]
  4074fc:	ldrsw	x23, [x8, #572]
  407500:	cbz	x26, 407574 <__fxstatat@plt+0x4b24>
  407504:	mov	x0, x26
  407508:	mov	w1, wzr
  40750c:	bl	410434 <__fxstatat@plt+0xd9e4>
  407510:	ldr	x1, [x24, #1456]
  407514:	sub	w8, w23, w0
  407518:	mov	x0, x26
  40751c:	bic	w21, w8, w8, asr #31
  407520:	bl	402980 <fputs_unlocked@plt>
  407524:	mov	x0, x26
  407528:	bl	402430 <strlen@plt>
  40752c:	mov	x23, x0
  407530:	add	w25, w21, #0x1
  407534:	ldr	x0, [x24, #1456]
  407538:	ldp	x8, x9, [x0, #40]
  40753c:	cmp	x8, x9
  407540:	b.cs	40755c <__fxstatat@plt+0x4b0c>  // b.hs, b.nlast
  407544:	add	x9, x8, #0x1
  407548:	str	x9, [x0, #40]
  40754c:	strb	w19, [x8]
  407550:	subs	w25, w25, #0x1
  407554:	b.ne	407534 <__fxstatat@plt+0x4ae4>  // b.any
  407558:	b	40756c <__fxstatat@plt+0x4b1c>
  40755c:	mov	w1, #0x20                  	// #32
  407560:	bl	402790 <__overflow@plt>
  407564:	subs	w25, w25, #0x1
  407568:	b.ne	407534 <__fxstatat@plt+0x4ae4>  // b.any
  40756c:	add	x23, x23, w21, uxtw
  407570:	b	40758c <__fxstatat@plt+0x4b3c>
  407574:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  407578:	mov	w0, #0x1                   	// #1
  40757c:	add	x1, x1, #0x959
  407580:	mov	w2, w23
  407584:	mov	x3, xzr
  407588:	bl	402670 <__printf_chk@plt>
  40758c:	ldr	x8, [x20, #648]
  407590:	add	x26, sp, #0x64
  407594:	add	x8, x23, x8
  407598:	add	x8, x8, #0x1
  40759c:	str	x8, [x20, #648]
  4075a0:	ldrb	w8, [x28, #168]
  4075a4:	cbz	w8, 407368 <__fxstatat@plt+0x4918>
  4075a8:	ldr	w8, [x28, #40]
  4075ac:	and	w8, w8, #0xf000
  4075b0:	orr	w8, w8, #0x4000
  4075b4:	cmp	w8, #0x6, lsl #12
  4075b8:	b.ne	407680 <__fxstatat@plt+0x4c30>  // b.any
  4075bc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4075c0:	add	x8, x8, #0x240
  4075c4:	mov	x19, x22
  4075c8:	mov	x22, x20
  4075cc:	mov	x20, x27
  4075d0:	mov	x27, x8
  4075d4:	ldr	w8, [x8, #8]
  4075d8:	ldp	w9, w11, [x27]
  4075dc:	ldr	x10, [x28, #56]
  4075e0:	add	x1, sp, #0xeac
  4075e4:	sub	w8, w8, w9
  4075e8:	lsr	x12, x10, #32
  4075ec:	sub	w8, w8, w11
  4075f0:	and	x0, x12, #0xfffff000
  4075f4:	sub	w8, w8, #0x2
  4075f8:	bic	w8, w8, w8, asr #31
  4075fc:	bfxil	x0, x10, #8, #12
  407600:	add	w23, w8, w9
  407604:	bl	40ffa0 <__fxstatat@plt+0xd550>
  407608:	ldr	x8, [x28, #56]
  40760c:	ldr	w21, [x27, #4]
  407610:	mov	x25, x0
  407614:	sub	x1, x29, #0x48
  407618:	lsr	x9, x8, #12
  40761c:	and	x0, x9, #0xffffff00
  407620:	bfxil	x0, x8, #0, #8
  407624:	bl	40ffa0 <__fxstatat@plt+0xd550>
  407628:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40762c:	mov	x7, x0
  407630:	mov	w1, #0x1                   	// #1
  407634:	mov	x2, #0xffffffffffffffff    	// #-1
  407638:	mov	x0, x26
  40763c:	add	x3, x3, #0x94a
  407640:	mov	w4, w23
  407644:	mov	x5, x25
  407648:	mov	w6, w21
  40764c:	bl	402440 <__sprintf_chk@plt>
  407650:	ldrsw	x8, [x27, #8]
  407654:	mov	x27, x20
  407658:	mov	x20, x22
  40765c:	mov	x22, x19
  407660:	add	x8, x8, x26
  407664:	mov	w19, #0x20                  	// #32
  407668:	add	x26, x8, #0x1
  40766c:	mov	w8, #0x1                   	// #1
  407670:	strb	w8, [x26]
  407674:	ldrb	w8, [x28, #168]
  407678:	cbnz	w8, 4076fc <__fxstatat@plt+0x4cac>
  40767c:	b	407810 <__fxstatat@plt+0x4dc0>
  407680:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407684:	ldr	w2, [x8, #544]
  407688:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40768c:	ldr	x0, [x28, #72]
  407690:	ldr	x4, [x8, #880]
  407694:	add	x1, sp, #0xeac
  407698:	mov	w3, #0x1                   	// #1
  40769c:	bl	40f2c8 <__fxstatat@plt+0xc878>
  4076a0:	mov	x23, x0
  4076a4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4076a8:	ldr	w21, [x8, #584]
  4076ac:	mov	x0, x23
  4076b0:	mov	w1, wzr
  4076b4:	bl	410434 <__fxstatat@plt+0xd9e4>
  4076b8:	sub	w8, w21, w0
  4076bc:	subs	w21, w8, #0x1
  4076c0:	b.lt	4076dc <__fxstatat@plt+0x4c8c>  // b.tstop
  4076c4:	add	x2, x21, #0x1
  4076c8:	mov	w1, #0x20                  	// #32
  4076cc:	mov	x0, x26
  4076d0:	bl	402680 <memset@plt>
  4076d4:	add	x8, x26, x21
  4076d8:	add	x26, x8, #0x1
  4076dc:	ldrb	w8, [x23], #1
  4076e0:	strb	w8, [x26], #1
  4076e4:	cbnz	w8, 4076dc <__fxstatat@plt+0x4c8c>
  4076e8:	sturb	w19, [x26, #-1]
  4076ec:	mov	w8, #0x1                   	// #1
  4076f0:	strb	w8, [x26]
  4076f4:	ldrb	w8, [x28, #168]
  4076f8:	cbz	w8, 407810 <__fxstatat@plt+0x4dc0>
  4076fc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407700:	ldr	x0, [x8, #608]
  407704:	add	x1, sp, #0x50
  407708:	add	x2, sp, #0x18
  40770c:	bl	415670 <_obstack_memory_used@@Base+0x140>
  407710:	cbz	x0, 407808 <__fxstatat@plt+0x4db8>
  407714:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407718:	add	x8, x8, #0x320
  40771c:	ldr	x8, [x8]
  407720:	ldr	x10, [sp, #80]
  407724:	cmp	x8, x10
  407728:	b.ge	407748 <__fxstatat@plt+0x4cf8>  // b.tcont
  40772c:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407730:	add	x21, x21, #0x320
  407734:	mov	x0, x21
  407738:	bl	40df6c <__fxstatat@plt+0xb51c>
  40773c:	ldp	x8, x9, [x21]
  407740:	ldp	x10, x5, [sp, #80]
  407744:	b	407764 <__fxstatat@plt+0x4d14>
  407748:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40774c:	add	x9, x9, #0x320
  407750:	ldr	x9, [x9, #8]
  407754:	ldr	x5, [sp, #88]
  407758:	b.gt	407764 <__fxstatat@plt+0x4d14>
  40775c:	cmp	w9, w5
  407760:	b.mi	40772c <__fxstatat@plt+0x4cdc>  // b.first
  407764:	mov	x11, #0xffffffffffff3d54    	// #-49836
  407768:	movk	x11, #0xff0f, lsl #16
  40776c:	add	x11, x8, x11
  407770:	cmp	x11, x10
  407774:	b.ge	407788 <__fxstatat@plt+0x4d38>  // b.tcont
  407778:	cmp	x10, x8
  40777c:	b.ge	40779c <__fxstatat@plt+0x4d4c>  // b.tcont
  407780:	mov	w8, #0xffffffff            	// #-1
  407784:	b	4077ac <__fxstatat@plt+0x4d5c>
  407788:	b.gt	407794 <__fxstatat@plt+0x4d44>
  40778c:	cmp	w9, w5
  407790:	b.mi	407778 <__fxstatat@plt+0x4d28>  // b.first
  407794:	mov	w8, wzr
  407798:	b	4077b0 <__fxstatat@plt+0x4d60>
  40779c:	b.le	4077a8 <__fxstatat@plt+0x4d58>
  4077a0:	mov	w8, #0x1                   	// #1
  4077a4:	b	4077ac <__fxstatat@plt+0x4d5c>
  4077a8:	sub	w8, w5, w9
  4077ac:	lsr	w8, w8, #31
  4077b0:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4077b4:	add	x10, x10, #0x1f1
  4077b8:	ldrb	w9, [x10]
  4077bc:	ldur	x4, [x10, #111]
  4077c0:	cmp	w9, #0x1
  4077c4:	b.ne	4077e4 <__fxstatat@plt+0x4d94>  // b.any
  4077c8:	ldrsw	x9, [sp, #40]
  4077cc:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4077d0:	add	x10, x10, #0x5d0
  4077d4:	mov	w11, #0x600                 	// #1536
  4077d8:	madd	x8, x8, x11, x10
  4077dc:	add	x2, x8, x9, lsl #7
  4077e0:	b	4077f4 <__fxstatat@plt+0x4da4>
  4077e4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4077e8:	add	x9, x9, #0x368
  4077ec:	add	x8, x9, x8, lsl #3
  4077f0:	ldr	x2, [x8, #16]
  4077f4:	add	x3, sp, #0x18
  4077f8:	mov	w1, #0x3e9                 	// #1001
  4077fc:	mov	x0, x26
  407800:	bl	410944 <__fxstatat@plt+0xdef4>
  407804:	cbnz	x0, 4078c4 <__fxstatat@plt+0x4e74>
  407808:	ldrb	w8, [x26]
  40780c:	cbz	w8, 4078c0 <__fxstatat@plt+0x4e70>
  407810:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  407814:	ldr	w23, [x8, #876]
  407818:	tbnz	w23, #31, 407838 <__fxstatat@plt+0x4de8>
  40781c:	ldrb	w8, [x28, #168]
  407820:	cbz	w8, 4078f0 <__fxstatat@plt+0x4ea0>
  407824:	ldr	x0, [sp, #80]
  407828:	add	x1, sp, #0xeac
  40782c:	bl	40ff10 <__fxstatat@plt+0xd4c0>
  407830:	mov	x5, x0
  407834:	b	4078f8 <__fxstatat@plt+0x4ea8>
  407838:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40783c:	ldr	x0, [x8, #608]
  407840:	sub	x1, x29, #0x10
  407844:	sub	x2, x29, #0x48
  407848:	stur	xzr, [x29, #-16]
  40784c:	bl	415670 <_obstack_memory_used@@Base+0x140>
  407850:	cbz	x0, 4078d0 <__fxstatat@plt+0x4e80>
  407854:	adrp	x11, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407858:	add	x11, x11, #0x1f1
  40785c:	ldursw	x8, [x29, #-56]
  407860:	ldrb	w9, [x11]
  407864:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  407868:	ldr	x10, [x10, #888]
  40786c:	ldur	x4, [x11, #111]
  407870:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  407874:	add	x11, x11, #0x5d0
  407878:	add	x8, x11, x8, lsl #7
  40787c:	cmp	w9, #0x0
  407880:	csel	x2, x8, x10, ne  // ne = any
  407884:	add	x0, sp, #0xeac
  407888:	sub	x3, x29, #0x48
  40788c:	mov	w1, #0x3e9                 	// #1001
  407890:	mov	w5, wzr
  407894:	bl	410944 <__fxstatat@plt+0xdef4>
  407898:	cbz	x0, 4078d0 <__fxstatat@plt+0x4e80>
  40789c:	mov	x1, x0
  4078a0:	add	x0, sp, #0xeac
  4078a4:	mov	w2, wzr
  4078a8:	bl	410464 <__fxstatat@plt+0xda14>
  4078ac:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4078b0:	mov	w23, w0
  4078b4:	str	w0, [x8, #876]
  4078b8:	tbz	w23, #31, 40781c <__fxstatat@plt+0x4dcc>
  4078bc:	b	4078dc <__fxstatat@plt+0x4e8c>
  4078c0:	mov	x0, xzr
  4078c4:	add	x21, x26, x0
  4078c8:	strh	w19, [x21], #1
  4078cc:	b	407920 <__fxstatat@plt+0x4ed0>
  4078d0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4078d4:	ldr	w23, [x8, #876]
  4078d8:	tbz	w23, #31, 40781c <__fxstatat@plt+0x4dcc>
  4078dc:	mov	w23, wzr
  4078e0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4078e4:	str	wzr, [x8, #876]
  4078e8:	ldrb	w8, [x28, #168]
  4078ec:	cbnz	w8, 407824 <__fxstatat@plt+0x4dd4>
  4078f0:	adrp	x5, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4078f4:	add	x5, x5, #0x76e
  4078f8:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4078fc:	mov	w1, #0x1                   	// #1
  407900:	mov	x2, #0xffffffffffffffff    	// #-1
  407904:	mov	x0, x26
  407908:	add	x3, x3, #0x94f
  40790c:	mov	w4, w23
  407910:	bl	402440 <__sprintf_chk@plt>
  407914:	mov	x0, x26
  407918:	bl	402430 <strlen@plt>
  40791c:	add	x21, x26, x0
  407920:	ldr	x1, [x24, #1456]
  407924:	add	x0, sp, #0x64
  407928:	bl	402980 <fputs_unlocked@plt>
  40792c:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407930:	add	x10, x10, #0x288
  407934:	ldr	x8, [x10]
  407938:	add	x9, sp, #0x64
  40793c:	sub	x23, x21, x9
  407940:	add	x2, x10, #0x100
  407944:	add	x8, x8, x23
  407948:	mov	x0, x28
  40794c:	mov	w1, wzr
  407950:	mov	x3, x23
  407954:	str	x8, [x10]
  407958:	bl	40bc80 <__fxstatat@plt+0x9230>
  40795c:	ldr	w8, [x28, #152]
  407960:	cmp	w8, #0x6
  407964:	b.ne	4079ec <__fxstatat@plt+0x4f9c>  // b.any
  407968:	ldr	x8, [x28, #8]
  40796c:	cbz	x8, 407ac4 <__fxstatat@plt+0x5074>
  407970:	ldr	x1, [x24, #1456]
  407974:	mov	x25, x0
  407978:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40797c:	add	x0, x0, #0x954
  407980:	bl	402980 <fputs_unlocked@plt>
  407984:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407988:	add	x21, x21, #0x204
  40798c:	ldur	x8, [x21, #132]
  407990:	add	x9, x23, x25
  407994:	add	x3, x9, #0x4
  407998:	mov	w1, #0x1                   	// #1
  40799c:	add	x8, x8, #0x4
  4079a0:	mov	x0, x28
  4079a4:	mov	x2, xzr
  4079a8:	stur	x8, [x21, #132]
  4079ac:	bl	40bc80 <__fxstatat@plt+0x9230>
  4079b0:	ldr	w9, [x21]
  4079b4:	cbz	w9, 407ac4 <__fxstatat@plt+0x5074>
  4079b8:	ldr	w8, [x28, #156]
  4079bc:	and	w10, w8, #0xf000
  4079c0:	cmp	w10, #0x4, lsl #12
  4079c4:	b.eq	407a7c <__fxstatat@plt+0x502c>  // b.none
  4079c8:	cmp	w10, #0x8, lsl #12
  4079cc:	b.ne	407b08 <__fxstatat@plt+0x50b8>  // b.any
  4079d0:	cmp	w9, #0x3
  4079d4:	b.ne	407ac4 <__fxstatat@plt+0x5074>  // b.any
  4079d8:	mov	w9, #0x49                  	// #73
  4079dc:	and	w8, w8, w9
  4079e0:	cbz	w8, 407ac4 <__fxstatat@plt+0x5074>
  4079e4:	mov	w1, #0x2a                  	// #42
  4079e8:	b	407a80 <__fxstatat@plt+0x5030>
  4079ec:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4079f0:	ldr	w10, [x9, #516]
  4079f4:	cbz	w10, 407ac4 <__fxstatat@plt+0x5074>
  4079f8:	ldrb	w11, [x28, #168]
  4079fc:	ldr	w9, [x28, #40]
  407a00:	cbz	w11, 407a34 <__fxstatat@plt+0x4fe4>
  407a04:	and	w12, w9, #0xf000
  407a08:	cmp	w12, #0x4, lsl #12
  407a0c:	b.eq	407a98 <__fxstatat@plt+0x5048>  // b.none
  407a10:	cmp	w12, #0x8, lsl #12
  407a14:	b.ne	407a50 <__fxstatat@plt+0x5000>  // b.any
  407a18:	cmp	w10, #0x3
  407a1c:	b.ne	407ac4 <__fxstatat@plt+0x5074>  // b.any
  407a20:	mov	w8, #0x49                  	// #73
  407a24:	and	w8, w9, w8
  407a28:	cbz	w8, 407ac4 <__fxstatat@plt+0x5074>
  407a2c:	mov	w1, #0x2a                  	// #42
  407a30:	b	407a9c <__fxstatat@plt+0x504c>
  407a34:	cmp	w8, #0x3
  407a38:	mov	w1, #0x2f                  	// #47
  407a3c:	b.eq	407a9c <__fxstatat@plt+0x504c>  // b.none
  407a40:	cmp	w8, #0x5
  407a44:	b.eq	407ac4 <__fxstatat@plt+0x5074>  // b.none
  407a48:	cmp	w8, #0x9
  407a4c:	b.eq	407a9c <__fxstatat@plt+0x504c>  // b.none
  407a50:	cmp	w10, #0x1
  407a54:	b.eq	407ac4 <__fxstatat@plt+0x5074>  // b.none
  407a58:	cbz	w11, 407b38 <__fxstatat@plt+0x50e8>
  407a5c:	and	w8, w9, #0xf000
  407a60:	cmp	w8, #0x1, lsl #12
  407a64:	b.eq	407b50 <__fxstatat@plt+0x5100>  // b.none
  407a68:	cmp	w8, #0xa, lsl #12
  407a6c:	b.eq	407b68 <__fxstatat@plt+0x5118>  // b.none
  407a70:	cmp	w8, #0xc, lsl #12
  407a74:	b.ne	407ac4 <__fxstatat@plt+0x5074>  // b.any
  407a78:	b	407b48 <__fxstatat@plt+0x50f8>
  407a7c:	mov	w1, #0x2f                  	// #47
  407a80:	ldr	x0, [x24, #1456]
  407a84:	ldp	x8, x9, [x0, #40]
  407a88:	cmp	x8, x9
  407a8c:	b.cc	407aac <__fxstatat@plt+0x505c>  // b.lo, b.ul, b.last
  407a90:	bl	402790 <__overflow@plt>
  407a94:	b	407ab8 <__fxstatat@plt+0x5068>
  407a98:	mov	w1, #0x2f                  	// #47
  407a9c:	ldr	x0, [x24, #1456]
  407aa0:	ldp	x8, x9, [x0, #40]
  407aa4:	cmp	x8, x9
  407aa8:	b.cs	407a90 <__fxstatat@plt+0x5040>  // b.hs, b.nlast
  407aac:	add	x9, x8, #0x1
  407ab0:	str	x9, [x0, #40]
  407ab4:	strb	w1, [x8]
  407ab8:	ldr	x8, [x20, #648]
  407abc:	add	x8, x8, #0x1
  407ac0:	str	x8, [x20, #648]
  407ac4:	ldr	x0, [x24, #1456]
  407ac8:	ldp	x8, x9, [x0, #40]
  407acc:	cmp	x8, x9
  407ad0:	b.cs	407b70 <__fxstatat@plt+0x5120>  // b.hs, b.nlast
  407ad4:	add	x9, x8, #0x1
  407ad8:	str	x9, [x0, #40]
  407adc:	mov	w9, #0xa                   	// #10
  407ae0:	strb	w9, [x8]
  407ae4:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407ae8:	add	x10, x10, #0x280
  407aec:	ldp	x9, x8, [x10]
  407af0:	add	x22, x22, #0x1
  407af4:	add	x8, x8, #0x1
  407af8:	cmp	x22, x9
  407afc:	str	x8, [x10, #8]
  407b00:	b.cc	406ed8 <__fxstatat@plt+0x4488>  // b.lo, b.ul, b.last
  407b04:	b	407fdc <__fxstatat@plt+0x558c>
  407b08:	cmp	w9, #0x1
  407b0c:	b.eq	407ac4 <__fxstatat@plt+0x5074>  // b.none
  407b10:	and	w8, w8, #0xfffff000
  407b14:	and	w8, w8, #0xffff
  407b18:	cmp	w8, #0xc, lsl #12
  407b1c:	b.eq	407b58 <__fxstatat@plt+0x5108>  // b.none
  407b20:	cmp	w8, #0xa, lsl #12
  407b24:	b.eq	407b60 <__fxstatat@plt+0x5110>  // b.none
  407b28:	cmp	w8, #0x1, lsl #12
  407b2c:	b.ne	407ac4 <__fxstatat@plt+0x5074>  // b.any
  407b30:	mov	w1, #0x7c                  	// #124
  407b34:	b	407a80 <__fxstatat@plt+0x5030>
  407b38:	cmp	w8, #0x1
  407b3c:	b.eq	407b50 <__fxstatat@plt+0x5100>  // b.none
  407b40:	cmp	w8, #0x7
  407b44:	b.ne	407ac4 <__fxstatat@plt+0x5074>  // b.any
  407b48:	mov	w1, #0x3d                  	// #61
  407b4c:	b	407a9c <__fxstatat@plt+0x504c>
  407b50:	mov	w1, #0x7c                  	// #124
  407b54:	b	407a9c <__fxstatat@plt+0x504c>
  407b58:	mov	w1, #0x3d                  	// #61
  407b5c:	b	407a80 <__fxstatat@plt+0x5030>
  407b60:	mov	w1, #0x40                  	// #64
  407b64:	b	407a80 <__fxstatat@plt+0x5030>
  407b68:	mov	w1, #0x40                  	// #64
  407b6c:	b	407a9c <__fxstatat@plt+0x504c>
  407b70:	mov	w1, #0xa                   	// #10
  407b74:	bl	402790 <__overflow@plt>
  407b78:	b	407ae4 <__fxstatat@plt+0x5094>
  407b7c:	mov	w0, #0x2c                  	// #44
  407b80:	b	407f98 <__fxstatat@plt+0x5548>
  407b84:	adrp	x19, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407b88:	ldr	x8, [x19, #640]
  407b8c:	cbz	x8, 407fdc <__fxstatat@plt+0x558c>
  407b90:	mov	x20, xzr
  407b94:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407b98:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  407b9c:	mov	w23, #0xa                   	// #10
  407ba0:	ldr	x8, [x21, #736]
  407ba4:	mov	x1, xzr
  407ba8:	ldr	x0, [x8, x20, lsl #3]
  407bac:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  407bb0:	ldr	x0, [x22, #1456]
  407bb4:	ldp	x8, x9, [x0, #40]
  407bb8:	cmp	x8, x9
  407bbc:	b.cs	407be0 <__fxstatat@plt+0x5190>  // b.hs, b.nlast
  407bc0:	add	x9, x8, #0x1
  407bc4:	str	x9, [x0, #40]
  407bc8:	strb	w23, [x8]
  407bcc:	ldr	x8, [x19, #640]
  407bd0:	add	x20, x20, #0x1
  407bd4:	cmp	x20, x8
  407bd8:	b.cc	407ba0 <__fxstatat@plt+0x5150>  // b.lo, b.ul, b.last
  407bdc:	b	407fdc <__fxstatat@plt+0x558c>
  407be0:	mov	w1, #0xa                   	// #10
  407be4:	bl	402790 <__overflow@plt>
  407be8:	b	407bcc <__fxstatat@plt+0x517c>
  407bec:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407bf0:	ldr	x8, [x8, #680]
  407bf4:	cbz	x8, 407f94 <__fxstatat@plt+0x5544>
  407bf8:	mov	w0, #0x1                   	// #1
  407bfc:	bl	40c568 <__fxstatat@plt+0x9b18>
  407c00:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407c04:	ldr	x8, [x8, #640]
  407c08:	udiv	x9, x8, x0
  407c0c:	msub	x8, x9, x0, x8
  407c10:	cmp	x8, #0x0
  407c14:	cinc	x28, x9, ne  // ne = any
  407c18:	cbz	x28, 407fdc <__fxstatat@plt+0x558c>
  407c1c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407c20:	ldr	x9, [x9, #776]
  407c24:	mov	w8, #0x18                  	// #24
  407c28:	mov	x21, xzr
  407c2c:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407c30:	madd	x8, x0, x8, x9
  407c34:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  407c38:	mov	w27, #0x20                  	// #32
  407c3c:	sub	x8, x8, #0x8
  407c40:	str	x8, [sp, #16]
  407c44:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407c48:	add	x22, x22, #0x280
  407c4c:	ldr	x8, [x22, #96]
  407c50:	ldr	x19, [x8, x21, lsl #3]
  407c54:	mov	x0, x19
  407c58:	bl	40c308 <__fxstatat@plt+0x98b8>
  407c5c:	ldr	x8, [sp, #16]
  407c60:	mov	x20, x0
  407c64:	mov	x0, x19
  407c68:	mov	x1, xzr
  407c6c:	ldr	x8, [x8]
  407c70:	ldr	x23, [x8]
  407c74:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  407c78:	ldr	x8, [x22]
  407c7c:	add	x24, x21, x28
  407c80:	str	x21, [sp, #8]
  407c84:	cmp	x24, x8
  407c88:	b.cs	407dac <__fxstatat@plt+0x535c>  // b.hs, b.nlast
  407c8c:	mov	x19, xzr
  407c90:	mov	w22, #0x1                   	// #1
  407c94:	b	407ce4 <__fxstatat@plt+0x5294>
  407c98:	adrp	x27, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407c9c:	add	x27, x27, #0x280
  407ca0:	ldr	x8, [x27, #96]
  407ca4:	ldr	x21, [x8, x24, lsl #3]
  407ca8:	mov	x0, x21
  407cac:	bl	40c308 <__fxstatat@plt+0x98b8>
  407cb0:	ldr	x8, [sp, #16]
  407cb4:	mov	x20, x0
  407cb8:	mov	x0, x21
  407cbc:	mov	x1, x19
  407cc0:	ldr	x8, [x8]
  407cc4:	ldr	x23, [x8, x22, lsl #3]
  407cc8:	add	x22, x22, #0x1
  407ccc:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  407cd0:	ldr	x8, [x27]
  407cd4:	add	x24, x24, x28
  407cd8:	mov	w27, #0x20                  	// #32
  407cdc:	cmp	x24, x8
  407ce0:	b.cs	407dac <__fxstatat@plt+0x535c>  // b.hs, b.nlast
  407ce4:	add	x20, x19, x20
  407ce8:	add	x19, x19, x23
  407cec:	cmp	x20, x19
  407cf0:	mov	w21, #0x9                   	// #9
  407cf4:	b.cs	407c98 <__fxstatat@plt+0x5248>  // b.hs, b.nlast
  407cf8:	ldr	x8, [x25, #688]
  407cfc:	cbz	x8, 407d50 <__fxstatat@plt+0x5300>
  407d00:	add	x10, x20, #0x1
  407d04:	udiv	x9, x19, x8
  407d08:	udiv	x10, x10, x8
  407d0c:	cmp	x9, x10
  407d10:	b.ls	407d50 <__fxstatat@plt+0x5300>  // b.plast
  407d14:	ldr	x0, [x26, #1456]
  407d18:	ldp	x9, x10, [x0, #40]
  407d1c:	cmp	x9, x10
  407d20:	b.cs	407d9c <__fxstatat@plt+0x534c>  // b.hs, b.nlast
  407d24:	add	x10, x9, #0x1
  407d28:	str	x10, [x0, #40]
  407d2c:	strb	w21, [x9]
  407d30:	udiv	x9, x20, x8
  407d34:	neg	x10, x20
  407d38:	madd	x9, x9, x8, x10
  407d3c:	add	x8, x8, x9
  407d40:	add	x20, x8, x20
  407d44:	cmp	x20, x19
  407d48:	b.cc	407cf8 <__fxstatat@plt+0x52a8>  // b.lo, b.ul, b.last
  407d4c:	b	407c98 <__fxstatat@plt+0x5248>
  407d50:	ldr	x0, [x26, #1456]
  407d54:	ldp	x8, x9, [x0, #40]
  407d58:	cmp	x8, x9
  407d5c:	b.cs	407d80 <__fxstatat@plt+0x5330>  // b.hs, b.nlast
  407d60:	add	x9, x8, #0x1
  407d64:	str	x9, [x0, #40]
  407d68:	strb	w27, [x8]
  407d6c:	mov	w8, #0x1                   	// #1
  407d70:	add	x20, x8, x20
  407d74:	cmp	x20, x19
  407d78:	b.cc	407cf8 <__fxstatat@plt+0x52a8>  // b.lo, b.ul, b.last
  407d7c:	b	407c98 <__fxstatat@plt+0x5248>
  407d80:	mov	w1, #0x20                  	// #32
  407d84:	bl	402790 <__overflow@plt>
  407d88:	mov	w8, #0x1                   	// #1
  407d8c:	add	x20, x8, x20
  407d90:	cmp	x20, x19
  407d94:	b.cc	407cf8 <__fxstatat@plt+0x52a8>  // b.lo, b.ul, b.last
  407d98:	b	407c98 <__fxstatat@plt+0x5248>
  407d9c:	mov	w1, #0x9                   	// #9
  407da0:	bl	402790 <__overflow@plt>
  407da4:	ldr	x8, [x25, #688]
  407da8:	b	407d30 <__fxstatat@plt+0x52e0>
  407dac:	ldr	x0, [x26, #1456]
  407db0:	ldp	x8, x9, [x0, #40]
  407db4:	cmp	x8, x9
  407db8:	b.cs	407de0 <__fxstatat@plt+0x5390>  // b.hs, b.nlast
  407dbc:	add	x9, x8, #0x1
  407dc0:	str	x9, [x0, #40]
  407dc4:	mov	w9, #0xa                   	// #10
  407dc8:	strb	w9, [x8]
  407dcc:	ldr	x21, [sp, #8]
  407dd0:	add	x21, x21, #0x1
  407dd4:	cmp	x21, x28
  407dd8:	b.cc	407c44 <__fxstatat@plt+0x51f4>  // b.lo, b.ul, b.last
  407ddc:	b	407fdc <__fxstatat@plt+0x558c>
  407de0:	mov	w1, #0xa                   	// #10
  407de4:	bl	402790 <__overflow@plt>
  407de8:	b	407dcc <__fxstatat@plt+0x537c>
  407dec:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407df0:	ldr	x8, [x8, #680]
  407df4:	cbz	x8, 407f94 <__fxstatat@plt+0x5544>
  407df8:	mov	w0, wzr
  407dfc:	bl	40c568 <__fxstatat@plt+0x9b18>
  407e00:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407e04:	add	x24, x24, #0x280
  407e08:	ldr	x8, [x24, #96]
  407e0c:	ldr	x21, [x24, #136]
  407e10:	mov	x19, x0
  407e14:	mov	w22, #0x18                  	// #24
  407e18:	ldr	x20, [x8]
  407e1c:	mov	x0, x20
  407e20:	bl	40c308 <__fxstatat@plt+0x98b8>
  407e24:	madd	x9, x19, x22, x21
  407e28:	ldr	x8, [x9, #-8]!
  407e2c:	mov	x21, x0
  407e30:	mov	x0, x20
  407e34:	mov	x1, xzr
  407e38:	ldr	x23, [x8]
  407e3c:	str	x9, [sp, #16]
  407e40:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  407e44:	ldr	x8, [x24]
  407e48:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  407e4c:	cmp	x8, #0x2
  407e50:	b.cc	407fbc <__fxstatat@plt+0x556c>  // b.lo, b.ul, b.last
  407e54:	mov	x20, xzr
  407e58:	mov	w25, #0x1                   	// #1
  407e5c:	adrp	x27, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407e60:	mov	w28, #0x20                  	// #32
  407e64:	mov	w26, #0x9                   	// #9
  407e68:	b	407ed4 <__fxstatat@plt+0x5484>
  407e6c:	ldr	x0, [x24, #1456]
  407e70:	ldp	x8, x9, [x0, #40]
  407e74:	cmp	x8, x9
  407e78:	b.cs	407f84 <__fxstatat@plt+0x5534>  // b.hs, b.nlast
  407e7c:	add	x9, x8, #0x1
  407e80:	mov	x20, xzr
  407e84:	str	x9, [x0, #40]
  407e88:	mov	w9, #0xa                   	// #10
  407e8c:	strb	w9, [x8]
  407e90:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  407e94:	add	x23, x23, #0x280
  407e98:	ldr	x8, [x23, #96]
  407e9c:	mov	x1, x20
  407ea0:	ldr	x21, [x8, x25, lsl #3]
  407ea4:	mov	x0, x21
  407ea8:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  407eac:	mov	x0, x21
  407eb0:	bl	40c308 <__fxstatat@plt+0x98b8>
  407eb4:	ldr	x8, [sp, #16]
  407eb8:	ldr	x9, [x23]
  407ebc:	add	x25, x25, #0x1
  407ec0:	mov	x21, x0
  407ec4:	ldr	x8, [x8]
  407ec8:	cmp	x25, x9
  407ecc:	ldr	x23, [x8, x22, lsl #3]
  407ed0:	b.cs	407fbc <__fxstatat@plt+0x556c>  // b.hs, b.nlast
  407ed4:	udiv	x8, x25, x19
  407ed8:	msub	x22, x8, x19, x25
  407edc:	cbz	x22, 407e6c <__fxstatat@plt+0x541c>
  407ee0:	add	x21, x20, x21
  407ee4:	add	x20, x20, x23
  407ee8:	cmp	x21, x20
  407eec:	b.cs	407e90 <__fxstatat@plt+0x5440>  // b.hs, b.nlast
  407ef0:	ldr	x8, [x27, #688]
  407ef4:	cbz	x8, 407f40 <__fxstatat@plt+0x54f0>
  407ef8:	add	x10, x21, #0x1
  407efc:	udiv	x9, x20, x8
  407f00:	udiv	x10, x10, x8
  407f04:	cmp	x9, x10
  407f08:	b.ls	407f40 <__fxstatat@plt+0x54f0>  // b.plast
  407f0c:	ldr	x0, [x24, #1456]
  407f10:	ldp	x9, x10, [x0, #40]
  407f14:	cmp	x9, x10
  407f18:	b.cs	407f74 <__fxstatat@plt+0x5524>  // b.hs, b.nlast
  407f1c:	add	x10, x9, #0x1
  407f20:	str	x10, [x0, #40]
  407f24:	strb	w26, [x9]
  407f28:	udiv	x9, x21, x8
  407f2c:	neg	x10, x21
  407f30:	madd	x9, x9, x8, x10
  407f34:	add	x8, x8, x9
  407f38:	add	x21, x8, x21
  407f3c:	b	407ee8 <__fxstatat@plt+0x5498>
  407f40:	ldr	x0, [x24, #1456]
  407f44:	ldp	x8, x9, [x0, #40]
  407f48:	cmp	x8, x9
  407f4c:	b.cs	407f68 <__fxstatat@plt+0x5518>  // b.hs, b.nlast
  407f50:	add	x9, x8, #0x1
  407f54:	str	x9, [x0, #40]
  407f58:	strb	w28, [x8]
  407f5c:	mov	w8, #0x1                   	// #1
  407f60:	add	x21, x8, x21
  407f64:	b	407ee8 <__fxstatat@plt+0x5498>
  407f68:	mov	w1, #0x20                  	// #32
  407f6c:	bl	402790 <__overflow@plt>
  407f70:	b	407f5c <__fxstatat@plt+0x550c>
  407f74:	mov	w1, #0x9                   	// #9
  407f78:	bl	402790 <__overflow@plt>
  407f7c:	ldr	x8, [x27, #688]
  407f80:	b	407f28 <__fxstatat@plt+0x54d8>
  407f84:	mov	w1, #0xa                   	// #10
  407f88:	bl	402790 <__overflow@plt>
  407f8c:	mov	x20, xzr
  407f90:	b	407e90 <__fxstatat@plt+0x5440>
  407f94:	mov	w0, #0x20                  	// #32
  407f98:	add	sp, sp, #0x1, lsl #12
  407f9c:	add	sp, sp, #0x2e0
  407fa0:	ldp	x20, x19, [sp, #80]
  407fa4:	ldp	x22, x21, [sp, #64]
  407fa8:	ldp	x24, x23, [sp, #48]
  407fac:	ldp	x26, x25, [sp, #32]
  407fb0:	ldp	x28, x27, [sp, #16]
  407fb4:	ldp	x29, x30, [sp], #96
  407fb8:	b	40baac <__fxstatat@plt+0x905c>
  407fbc:	ldr	x0, [x24, #1456]
  407fc0:	ldp	x8, x9, [x0, #40]
  407fc4:	cmp	x8, x9
  407fc8:	b.cs	408000 <__fxstatat@plt+0x55b0>  // b.hs, b.nlast
  407fcc:	add	x9, x8, #0x1
  407fd0:	mov	w10, #0xa                   	// #10
  407fd4:	str	x9, [x0, #40]
  407fd8:	strb	w10, [x8]
  407fdc:	add	sp, sp, #0x1, lsl #12
  407fe0:	add	sp, sp, #0x2e0
  407fe4:	ldp	x20, x19, [sp, #80]
  407fe8:	ldp	x22, x21, [sp, #64]
  407fec:	ldp	x24, x23, [sp, #48]
  407ff0:	ldp	x26, x25, [sp, #32]
  407ff4:	ldp	x28, x27, [sp, #16]
  407ff8:	ldp	x29, x30, [sp], #96
  407ffc:	ret
  408000:	mov	w1, #0xa                   	// #10
  408004:	add	sp, sp, #0x1, lsl #12
  408008:	add	sp, sp, #0x2e0
  40800c:	ldp	x20, x19, [sp, #80]
  408010:	ldp	x22, x21, [sp, #64]
  408014:	ldp	x24, x23, [sp, #48]
  408018:	ldp	x26, x25, [sp, #32]
  40801c:	ldp	x28, x27, [sp, #16]
  408020:	ldp	x29, x30, [sp], #96
  408024:	b	402790 <__overflow@plt>
  408028:	bl	402770 <abort@plt>
  40802c:	sub	sp, sp, #0xa0
  408030:	stp	x20, x19, [sp, #144]
  408034:	mov	w19, w0
  408038:	stp	x29, x30, [sp, #112]
  40803c:	stp	x22, x21, [sp, #128]
  408040:	add	x29, sp, #0x70
  408044:	cbnz	w0, 408524 <__fxstatat@plt+0x5ad4>
  408048:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40804c:	add	x1, x1, #0x5fb
  408050:	mov	w2, #0x5                   	// #5
  408054:	mov	x0, xzr
  408058:	bl	402970 <dcgettext@plt>
  40805c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408060:	ldr	x2, [x8, #1824]
  408064:	mov	x1, x0
  408068:	mov	w0, #0x1                   	// #1
  40806c:	bl	402670 <__printf_chk@plt>
  408070:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  408074:	add	x1, x1, #0x61c
  408078:	mov	w2, #0x5                   	// #5
  40807c:	mov	x0, xzr
  408080:	bl	402970 <dcgettext@plt>
  408084:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  408088:	ldr	x1, [x22, #1456]
  40808c:	bl	402980 <fputs_unlocked@plt>
  408090:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  408094:	add	x1, x1, #0x95f
  408098:	mov	w2, #0x5                   	// #5
  40809c:	mov	x0, xzr
  4080a0:	bl	402970 <dcgettext@plt>
  4080a4:	ldr	x1, [x22, #1456]
  4080a8:	bl	402980 <fputs_unlocked@plt>
  4080ac:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4080b0:	add	x1, x1, #0x6ac
  4080b4:	mov	w2, #0x5                   	// #5
  4080b8:	mov	x0, xzr
  4080bc:	bl	402970 <dcgettext@plt>
  4080c0:	ldr	x1, [x22, #1456]
  4080c4:	bl	402980 <fputs_unlocked@plt>
  4080c8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4080cc:	add	x1, x1, #0x7bb
  4080d0:	mov	w2, #0x5                   	// #5
  4080d4:	mov	x0, xzr
  4080d8:	bl	402970 <dcgettext@plt>
  4080dc:	ldr	x1, [x22, #1456]
  4080e0:	bl	402980 <fputs_unlocked@plt>
  4080e4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4080e8:	add	x1, x1, #0x857
  4080ec:	mov	w2, #0x5                   	// #5
  4080f0:	mov	x0, xzr
  4080f4:	bl	402970 <dcgettext@plt>
  4080f8:	ldr	x1, [x22, #1456]
  4080fc:	bl	402980 <fputs_unlocked@plt>
  408100:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  408104:	add	x1, x1, #0x9c1
  408108:	mov	w2, #0x5                   	// #5
  40810c:	mov	x0, xzr
  408110:	bl	402970 <dcgettext@plt>
  408114:	ldr	x1, [x22, #1456]
  408118:	bl	402980 <fputs_unlocked@plt>
  40811c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  408120:	add	x1, x1, #0xb30
  408124:	mov	w2, #0x5                   	// #5
  408128:	mov	x0, xzr
  40812c:	bl	402970 <dcgettext@plt>
  408130:	ldr	x1, [x22, #1456]
  408134:	bl	402980 <fputs_unlocked@plt>
  408138:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40813c:	add	x1, x1, #0xcd3
  408140:	mov	w2, #0x5                   	// #5
  408144:	mov	x0, xzr
  408148:	bl	402970 <dcgettext@plt>
  40814c:	ldr	x1, [x22, #1456]
  408150:	bl	402980 <fputs_unlocked@plt>
  408154:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  408158:	add	x1, x1, #0xd10
  40815c:	mov	w2, #0x5                   	// #5
  408160:	mov	x0, xzr
  408164:	bl	402970 <dcgettext@plt>
  408168:	ldr	x1, [x22, #1456]
  40816c:	bl	402980 <fputs_unlocked@plt>
  408170:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  408174:	add	x1, x1, #0xe05
  408178:	mov	w2, #0x5                   	// #5
  40817c:	mov	x0, xzr
  408180:	bl	402970 <dcgettext@plt>
  408184:	ldr	x1, [x22, #1456]
  408188:	bl	402980 <fputs_unlocked@plt>
  40818c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  408190:	add	x1, x1, #0xe4e
  408194:	mov	w2, #0x5                   	// #5
  408198:	mov	x0, xzr
  40819c:	bl	402970 <dcgettext@plt>
  4081a0:	ldr	x1, [x22, #1456]
  4081a4:	bl	402980 <fputs_unlocked@plt>
  4081a8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4081ac:	add	x1, x1, #0xee4
  4081b0:	mov	w2, #0x5                   	// #5
  4081b4:	mov	x0, xzr
  4081b8:	bl	402970 <dcgettext@plt>
  4081bc:	ldr	x1, [x22, #1456]
  4081c0:	bl	402980 <fputs_unlocked@plt>
  4081c4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  4081c8:	add	x1, x1, #0x8a
  4081cc:	mov	w2, #0x5                   	// #5
  4081d0:	mov	x0, xzr
  4081d4:	bl	402970 <dcgettext@plt>
  4081d8:	ldr	x1, [x22, #1456]
  4081dc:	bl	402980 <fputs_unlocked@plt>
  4081e0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  4081e4:	add	x1, x1, #0x11b
  4081e8:	mov	w2, #0x5                   	// #5
  4081ec:	mov	x0, xzr
  4081f0:	bl	402970 <dcgettext@plt>
  4081f4:	ldr	x1, [x22, #1456]
  4081f8:	bl	402980 <fputs_unlocked@plt>
  4081fc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  408200:	add	x1, x1, #0x27d
  408204:	mov	w2, #0x5                   	// #5
  408208:	mov	x0, xzr
  40820c:	bl	402970 <dcgettext@plt>
  408210:	ldr	x1, [x22, #1456]
  408214:	bl	402980 <fputs_unlocked@plt>
  408218:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  40821c:	add	x1, x1, #0x311
  408220:	mov	w2, #0x5                   	// #5
  408224:	mov	x0, xzr
  408228:	bl	402970 <dcgettext@plt>
  40822c:	ldr	x1, [x22, #1456]
  408230:	bl	402980 <fputs_unlocked@plt>
  408234:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  408238:	add	x1, x1, #0x478
  40823c:	mov	w2, #0x5                   	// #5
  408240:	mov	x0, xzr
  408244:	bl	402970 <dcgettext@plt>
  408248:	ldr	x1, [x22, #1456]
  40824c:	bl	402980 <fputs_unlocked@plt>
  408250:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  408254:	add	x1, x1, #0x5a7
  408258:	mov	w2, #0x5                   	// #5
  40825c:	mov	x0, xzr
  408260:	bl	402970 <dcgettext@plt>
  408264:	ldr	x1, [x22, #1456]
  408268:	bl	402980 <fputs_unlocked@plt>
  40826c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  408270:	add	x1, x1, #0x7f0
  408274:	mov	w2, #0x5                   	// #5
  408278:	mov	x0, xzr
  40827c:	bl	402970 <dcgettext@plt>
  408280:	ldr	x1, [x22, #1456]
  408284:	bl	402980 <fputs_unlocked@plt>
  408288:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  40828c:	add	x1, x1, #0x8b5
  408290:	mov	w2, #0x5                   	// #5
  408294:	mov	x0, xzr
  408298:	bl	402970 <dcgettext@plt>
  40829c:	ldr	x1, [x22, #1456]
  4082a0:	bl	402980 <fputs_unlocked@plt>
  4082a4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  4082a8:	add	x1, x1, #0xabc
  4082ac:	mov	w2, #0x5                   	// #5
  4082b0:	mov	x0, xzr
  4082b4:	bl	402970 <dcgettext@plt>
  4082b8:	ldr	x1, [x22, #1456]
  4082bc:	bl	402980 <fputs_unlocked@plt>
  4082c0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  4082c4:	add	x1, x1, #0xb0b
  4082c8:	mov	w2, #0x5                   	// #5
  4082cc:	mov	x0, xzr
  4082d0:	bl	402970 <dcgettext@plt>
  4082d4:	ldr	x1, [x22, #1456]
  4082d8:	bl	402980 <fputs_unlocked@plt>
  4082dc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  4082e0:	add	x1, x1, #0xb99
  4082e4:	mov	w2, #0x5                   	// #5
  4082e8:	mov	x0, xzr
  4082ec:	bl	402970 <dcgettext@plt>
  4082f0:	ldr	x1, [x22, #1456]
  4082f4:	bl	402980 <fputs_unlocked@plt>
  4082f8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  4082fc:	add	x1, x1, #0xd0d
  408300:	mov	w2, #0x5                   	// #5
  408304:	mov	x0, xzr
  408308:	bl	402970 <dcgettext@plt>
  40830c:	ldr	x1, [x22, #1456]
  408310:	bl	402980 <fputs_unlocked@plt>
  408314:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  408318:	add	x1, x1, #0xe78
  40831c:	mov	w2, #0x5                   	// #5
  408320:	mov	x0, xzr
  408324:	bl	402970 <dcgettext@plt>
  408328:	ldr	x1, [x22, #1456]
  40832c:	bl	402980 <fputs_unlocked@plt>
  408330:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  408334:	add	x1, x1, #0xea5
  408338:	mov	w2, #0x5                   	// #5
  40833c:	mov	x0, xzr
  408340:	bl	402970 <dcgettext@plt>
  408344:	ldr	x1, [x22, #1456]
  408348:	bl	402980 <fputs_unlocked@plt>
  40834c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  408350:	add	x1, x1, #0x9aa
  408354:	mov	w2, #0x5                   	// #5
  408358:	mov	x0, xzr
  40835c:	bl	402970 <dcgettext@plt>
  408360:	ldr	x1, [x22, #1456]
  408364:	bl	402980 <fputs_unlocked@plt>
  408368:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x4ad0>
  40836c:	add	x1, x1, #0xedb
  408370:	mov	w2, #0x5                   	// #5
  408374:	mov	x0, xzr
  408378:	bl	402970 <dcgettext@plt>
  40837c:	ldr	x1, [x22, #1456]
  408380:	bl	402980 <fputs_unlocked@plt>
  408384:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  408388:	add	x1, x1, #0x53
  40838c:	mov	w2, #0x5                   	// #5
  408390:	mov	x0, xzr
  408394:	bl	402970 <dcgettext@plt>
  408398:	ldr	x1, [x22, #1456]
  40839c:	bl	402980 <fputs_unlocked@plt>
  4083a0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4083a4:	add	x1, x1, #0x171
  4083a8:	mov	w2, #0x5                   	// #5
  4083ac:	mov	x0, xzr
  4083b0:	bl	402970 <dcgettext@plt>
  4083b4:	ldr	x1, [x22, #1456]
  4083b8:	bl	402980 <fputs_unlocked@plt>
  4083bc:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4083c0:	add	x9, x9, #0x450
  4083c4:	ldp	q0, q1, [x9, #48]
  4083c8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4083cc:	ldr	w8, [x8, #1288]
  4083d0:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4083d4:	str	q0, [sp, #48]
  4083d8:	ldp	q2, q0, [x9, #80]
  4083dc:	add	x10, x10, #0x62b
  4083e0:	cmp	w8, #0x2
  4083e4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4083e8:	stp	q1, q2, [sp, #64]
  4083ec:	ldr	q1, [x9]
  4083f0:	str	q0, [sp, #96]
  4083f4:	ldp	q0, q3, [x9, #16]
  4083f8:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4083fc:	add	x9, x9, #0x209
  408400:	csel	x9, x10, x9, eq  // eq = none
  408404:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  408408:	add	x10, x10, #0x3f9
  40840c:	cmp	w8, #0x1
  408410:	add	x1, x1, #0x56c
  408414:	csel	x20, x10, x9, eq  // eq = none
  408418:	mov	x21, sp
  40841c:	stp	q1, q0, [sp]
  408420:	str	q3, [sp, #32]
  408424:	mov	x0, x20
  408428:	bl	402800 <strcmp@plt>
  40842c:	cbz	w0, 408438 <__fxstatat@plt+0x59e8>
  408430:	ldr	x1, [x21, #16]!
  408434:	cbnz	x1, 408424 <__fxstatat@plt+0x59d4>
  408438:	ldr	x8, [x21, #8]
  40843c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  408440:	add	x1, x1, #0xadb
  408444:	mov	w2, #0x5                   	// #5
  408448:	cmp	x8, #0x0
  40844c:	mov	x0, xzr
  408450:	csel	x21, x20, x8, eq  // eq = none
  408454:	bl	402970 <dcgettext@plt>
  408458:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40845c:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  408460:	mov	x1, x0
  408464:	add	x2, x2, #0x3ee
  408468:	add	x3, x3, #0xaf2
  40846c:	mov	w0, #0x1                   	// #1
  408470:	bl	402670 <__printf_chk@plt>
  408474:	mov	w0, #0x5                   	// #5
  408478:	mov	x1, xzr
  40847c:	bl	402a40 <setlocale@plt>
  408480:	cbz	x0, 4084b4 <__fxstatat@plt+0x5a64>
  408484:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  408488:	add	x1, x1, #0xb1a
  40848c:	mov	w2, #0x3                   	// #3
  408490:	bl	402640 <strncmp@plt>
  408494:	cbz	w0, 4084b4 <__fxstatat@plt+0x5a64>
  408498:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40849c:	add	x1, x1, #0xb1e
  4084a0:	mov	w2, #0x5                   	// #5
  4084a4:	mov	x0, xzr
  4084a8:	bl	402970 <dcgettext@plt>
  4084ac:	ldr	x1, [x22, #1456]
  4084b0:	bl	402980 <fputs_unlocked@plt>
  4084b4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4084b8:	add	x1, x1, #0xb65
  4084bc:	mov	w2, #0x5                   	// #5
  4084c0:	mov	x0, xzr
  4084c4:	bl	402970 <dcgettext@plt>
  4084c8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4084cc:	mov	x1, x0
  4084d0:	add	x2, x2, #0xaf2
  4084d4:	mov	w0, #0x1                   	// #1
  4084d8:	mov	x3, x20
  4084dc:	bl	402670 <__printf_chk@plt>
  4084e0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4084e4:	add	x1, x1, #0xb80
  4084e8:	mov	w2, #0x5                   	// #5
  4084ec:	mov	x0, xzr
  4084f0:	bl	402970 <dcgettext@plt>
  4084f4:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4084f8:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4084fc:	add	x8, x8, #0x8d1
  408500:	add	x9, x9, #0xa98
  408504:	cmp	x21, x20
  408508:	mov	x1, x0
  40850c:	csel	x3, x9, x8, eq  // eq = none
  408510:	mov	w0, #0x1                   	// #1
  408514:	mov	x2, x21
  408518:	bl	402670 <__printf_chk@plt>
  40851c:	mov	w0, w19
  408520:	bl	402460 <exit@plt>
  408524:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  408528:	ldr	x20, [x8, #1432]
  40852c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  408530:	add	x1, x1, #0x5d4
  408534:	mov	w2, #0x5                   	// #5
  408538:	mov	x0, xzr
  40853c:	bl	402970 <dcgettext@plt>
  408540:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408544:	ldr	x3, [x8, #1824]
  408548:	mov	x2, x0
  40854c:	mov	w1, #0x1                   	// #1
  408550:	mov	x0, x20
  408554:	bl	4027e0 <__fprintf_chk@plt>
  408558:	mov	w0, w19
  40855c:	bl	402460 <exit@plt>
  408560:	stp	x29, x30, [sp, #-32]!
  408564:	stp	x20, x19, [sp, #16]
  408568:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40856c:	ldrb	w9, [x8, #485]
  408570:	mov	x19, x0
  408574:	mov	x29, sp
  408578:	tbnz	w9, #0, 4085c8 <__fxstatat@plt+0x5b78>
  40857c:	mov	w9, #0x1                   	// #1
  408580:	mov	w0, #0x1                   	// #1
  408584:	strb	w9, [x8, #485]
  408588:	bl	402740 <tcgetpgrp@plt>
  40858c:	tbnz	w0, #31, 408598 <__fxstatat@plt+0x5b48>
  408590:	mov	w0, #0x1                   	// #1
  408594:	bl	4085e4 <__fxstatat@plt+0x5b94>
  408598:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40859c:	add	x0, x0, #0x3a8
  4085a0:	ldr	x8, [x0, #8]
  4085a4:	cbnz	x8, 4085c4 <__fxstatat@plt+0x5b74>
  4085a8:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4085ac:	add	x20, x20, #0x388
  4085b0:	mov	x0, x20
  4085b4:	bl	408560 <__fxstatat@plt+0x5b10>
  4085b8:	add	x0, x20, #0x30
  4085bc:	bl	408560 <__fxstatat@plt+0x5b10>
  4085c0:	add	x0, x20, #0x10
  4085c4:	bl	408560 <__fxstatat@plt+0x5b10>
  4085c8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4085cc:	ldp	x1, x0, [x19]
  4085d0:	ldr	x3, [x8, #1456]
  4085d4:	ldp	x20, x19, [sp, #16]
  4085d8:	mov	w2, #0x1                   	// #1
  4085dc:	ldp	x29, x30, [sp], #32
  4085e0:	b	402410 <fwrite_unlocked@plt>
  4085e4:	sub	sp, sp, #0xc0
  4085e8:	stp	x29, x30, [sp, #160]
  4085ec:	str	x19, [sp, #176]
  4085f0:	add	x29, sp, #0xa0
  4085f4:	tbz	w0, #0, 408a38 <__fxstatat@plt+0x5fe8>
  4085f8:	adrp	x19, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4085fc:	add	x19, x19, #0x438
  408600:	mov	x0, x19
  408604:	bl	402630 <sigemptyset@plt>
  408608:	add	x2, sp, #0x8
  40860c:	mov	w0, #0x14                  	// #20
  408610:	mov	x1, xzr
  408614:	bl	402720 <sigaction@plt>
  408618:	ldr	x8, [sp, #8]
  40861c:	cmp	x8, #0x1
  408620:	b.eq	408634 <__fxstatat@plt+0x5be4>  // b.none
  408624:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408628:	add	x0, x0, #0x438
  40862c:	mov	w1, #0x14                  	// #20
  408630:	bl	4029b0 <sigaddset@plt>
  408634:	add	x2, sp, #0x8
  408638:	mov	w0, #0xe                   	// #14
  40863c:	mov	x1, xzr
  408640:	bl	402720 <sigaction@plt>
  408644:	ldr	x8, [sp, #8]
  408648:	cmp	x8, #0x1
  40864c:	b.eq	408660 <__fxstatat@plt+0x5c10>  // b.none
  408650:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408654:	add	x0, x0, #0x438
  408658:	mov	w1, #0xe                   	// #14
  40865c:	bl	4029b0 <sigaddset@plt>
  408660:	add	x2, sp, #0x8
  408664:	mov	w0, #0x1                   	// #1
  408668:	mov	x1, xzr
  40866c:	bl	402720 <sigaction@plt>
  408670:	ldr	x8, [sp, #8]
  408674:	cmp	x8, #0x1
  408678:	b.eq	40868c <__fxstatat@plt+0x5c3c>  // b.none
  40867c:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408680:	add	x0, x0, #0x438
  408684:	mov	w1, #0x1                   	// #1
  408688:	bl	4029b0 <sigaddset@plt>
  40868c:	add	x2, sp, #0x8
  408690:	mov	w0, #0x2                   	// #2
  408694:	mov	x1, xzr
  408698:	bl	402720 <sigaction@plt>
  40869c:	ldr	x8, [sp, #8]
  4086a0:	cmp	x8, #0x1
  4086a4:	b.eq	4086b8 <__fxstatat@plt+0x5c68>  // b.none
  4086a8:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4086ac:	add	x0, x0, #0x438
  4086b0:	mov	w1, #0x2                   	// #2
  4086b4:	bl	4029b0 <sigaddset@plt>
  4086b8:	add	x2, sp, #0x8
  4086bc:	mov	w0, #0xd                   	// #13
  4086c0:	mov	x1, xzr
  4086c4:	bl	402720 <sigaction@plt>
  4086c8:	ldr	x8, [sp, #8]
  4086cc:	cmp	x8, #0x1
  4086d0:	b.eq	4086e4 <__fxstatat@plt+0x5c94>  // b.none
  4086d4:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4086d8:	add	x0, x0, #0x438
  4086dc:	mov	w1, #0xd                   	// #13
  4086e0:	bl	4029b0 <sigaddset@plt>
  4086e4:	add	x2, sp, #0x8
  4086e8:	mov	w0, #0x3                   	// #3
  4086ec:	mov	x1, xzr
  4086f0:	bl	402720 <sigaction@plt>
  4086f4:	ldr	x8, [sp, #8]
  4086f8:	cmp	x8, #0x1
  4086fc:	b.eq	408710 <__fxstatat@plt+0x5cc0>  // b.none
  408700:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408704:	add	x0, x0, #0x438
  408708:	mov	w1, #0x3                   	// #3
  40870c:	bl	4029b0 <sigaddset@plt>
  408710:	add	x2, sp, #0x8
  408714:	mov	w0, #0xf                   	// #15
  408718:	mov	x1, xzr
  40871c:	bl	402720 <sigaction@plt>
  408720:	ldr	x8, [sp, #8]
  408724:	cmp	x8, #0x1
  408728:	b.eq	40873c <__fxstatat@plt+0x5cec>  // b.none
  40872c:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408730:	add	x0, x0, #0x438
  408734:	mov	w1, #0xf                   	// #15
  408738:	bl	4029b0 <sigaddset@plt>
  40873c:	add	x2, sp, #0x8
  408740:	mov	w0, #0x1d                  	// #29
  408744:	mov	x1, xzr
  408748:	bl	402720 <sigaction@plt>
  40874c:	ldr	x8, [sp, #8]
  408750:	cmp	x8, #0x1
  408754:	b.eq	408768 <__fxstatat@plt+0x5d18>  // b.none
  408758:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40875c:	add	x0, x0, #0x438
  408760:	mov	w1, #0x1d                  	// #29
  408764:	bl	4029b0 <sigaddset@plt>
  408768:	add	x2, sp, #0x8
  40876c:	mov	w0, #0x1b                  	// #27
  408770:	mov	x1, xzr
  408774:	bl	402720 <sigaction@plt>
  408778:	ldr	x8, [sp, #8]
  40877c:	cmp	x8, #0x1
  408780:	b.eq	408794 <__fxstatat@plt+0x5d44>  // b.none
  408784:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408788:	add	x0, x0, #0x438
  40878c:	mov	w1, #0x1b                  	// #27
  408790:	bl	4029b0 <sigaddset@plt>
  408794:	add	x2, sp, #0x8
  408798:	mov	w0, #0x1a                  	// #26
  40879c:	mov	x1, xzr
  4087a0:	bl	402720 <sigaction@plt>
  4087a4:	ldr	x8, [sp, #8]
  4087a8:	cmp	x8, #0x1
  4087ac:	b.eq	4087c0 <__fxstatat@plt+0x5d70>  // b.none
  4087b0:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4087b4:	add	x0, x0, #0x438
  4087b8:	mov	w1, #0x1a                  	// #26
  4087bc:	bl	4029b0 <sigaddset@plt>
  4087c0:	add	x2, sp, #0x8
  4087c4:	mov	w0, #0x18                  	// #24
  4087c8:	mov	x1, xzr
  4087cc:	bl	402720 <sigaction@plt>
  4087d0:	ldr	x8, [sp, #8]
  4087d4:	cmp	x8, #0x1
  4087d8:	b.eq	4087ec <__fxstatat@plt+0x5d9c>  // b.none
  4087dc:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4087e0:	add	x0, x0, #0x438
  4087e4:	mov	w1, #0x18                  	// #24
  4087e8:	bl	4029b0 <sigaddset@plt>
  4087ec:	add	x2, sp, #0x8
  4087f0:	mov	w0, #0x19                  	// #25
  4087f4:	mov	x1, xzr
  4087f8:	bl	402720 <sigaction@plt>
  4087fc:	ldr	x8, [sp, #8]
  408800:	cmp	x8, #0x1
  408804:	b.eq	408818 <__fxstatat@plt+0x5dc8>  // b.none
  408808:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40880c:	add	x0, x0, #0x438
  408810:	mov	w1, #0x19                  	// #25
  408814:	bl	4029b0 <sigaddset@plt>
  408818:	ldp	q0, q1, [x19, #64]
  40881c:	mov	w8, #0x10000000            	// #268435456
  408820:	mov	w1, #0x14                  	// #20
  408824:	mov	x0, x19
  408828:	stur	q0, [sp, #80]
  40882c:	ldp	q2, q0, [x19, #96]
  408830:	str	w8, [sp, #144]
  408834:	stp	q1, q2, [sp, #96]
  408838:	ldp	q1, q2, [x19]
  40883c:	stur	q0, [sp, #128]
  408840:	stur	q1, [sp, #16]
  408844:	ldp	q0, q1, [x19, #32]
  408848:	stp	q2, q0, [sp, #32]
  40884c:	stur	q1, [sp, #64]
  408850:	bl	4027f0 <sigismember@plt>
  408854:	cbz	w0, 408874 <__fxstatat@plt+0x5e24>
  408858:	adrp	x8, 408000 <__fxstatat@plt+0x55b0>
  40885c:	add	x8, x8, #0xbd4
  408860:	add	x1, sp, #0x8
  408864:	mov	w0, #0x14                  	// #20
  408868:	mov	x2, xzr
  40886c:	str	x8, [sp, #8]
  408870:	bl	402720 <sigaction@plt>
  408874:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408878:	add	x0, x0, #0x438
  40887c:	mov	w1, #0xe                   	// #14
  408880:	bl	4027f0 <sigismember@plt>
  408884:	adrp	x19, 408000 <__fxstatat@plt+0x55b0>
  408888:	add	x19, x19, #0xbf8
  40888c:	cbz	w0, 4088a4 <__fxstatat@plt+0x5e54>
  408890:	add	x1, sp, #0x8
  408894:	mov	w0, #0xe                   	// #14
  408898:	mov	x2, xzr
  40889c:	str	x19, [sp, #8]
  4088a0:	bl	402720 <sigaction@plt>
  4088a4:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4088a8:	add	x0, x0, #0x438
  4088ac:	mov	w1, #0x1                   	// #1
  4088b0:	bl	4027f0 <sigismember@plt>
  4088b4:	cbz	w0, 4088cc <__fxstatat@plt+0x5e7c>
  4088b8:	add	x1, sp, #0x8
  4088bc:	mov	w0, #0x1                   	// #1
  4088c0:	mov	x2, xzr
  4088c4:	str	x19, [sp, #8]
  4088c8:	bl	402720 <sigaction@plt>
  4088cc:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4088d0:	add	x0, x0, #0x438
  4088d4:	mov	w1, #0x2                   	// #2
  4088d8:	bl	4027f0 <sigismember@plt>
  4088dc:	cbz	w0, 4088f4 <__fxstatat@plt+0x5ea4>
  4088e0:	add	x1, sp, #0x8
  4088e4:	mov	w0, #0x2                   	// #2
  4088e8:	mov	x2, xzr
  4088ec:	str	x19, [sp, #8]
  4088f0:	bl	402720 <sigaction@plt>
  4088f4:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4088f8:	add	x0, x0, #0x438
  4088fc:	mov	w1, #0xd                   	// #13
  408900:	bl	4027f0 <sigismember@plt>
  408904:	cbz	w0, 40891c <__fxstatat@plt+0x5ecc>
  408908:	add	x1, sp, #0x8
  40890c:	mov	w0, #0xd                   	// #13
  408910:	mov	x2, xzr
  408914:	str	x19, [sp, #8]
  408918:	bl	402720 <sigaction@plt>
  40891c:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408920:	add	x0, x0, #0x438
  408924:	mov	w1, #0x3                   	// #3
  408928:	bl	4027f0 <sigismember@plt>
  40892c:	cbz	w0, 408944 <__fxstatat@plt+0x5ef4>
  408930:	add	x1, sp, #0x8
  408934:	mov	w0, #0x3                   	// #3
  408938:	mov	x2, xzr
  40893c:	str	x19, [sp, #8]
  408940:	bl	402720 <sigaction@plt>
  408944:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408948:	add	x0, x0, #0x438
  40894c:	mov	w1, #0xf                   	// #15
  408950:	bl	4027f0 <sigismember@plt>
  408954:	cbz	w0, 40896c <__fxstatat@plt+0x5f1c>
  408958:	add	x1, sp, #0x8
  40895c:	mov	w0, #0xf                   	// #15
  408960:	mov	x2, xzr
  408964:	str	x19, [sp, #8]
  408968:	bl	402720 <sigaction@plt>
  40896c:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408970:	add	x0, x0, #0x438
  408974:	mov	w1, #0x1d                  	// #29
  408978:	bl	4027f0 <sigismember@plt>
  40897c:	cbz	w0, 408994 <__fxstatat@plt+0x5f44>
  408980:	add	x1, sp, #0x8
  408984:	mov	w0, #0x1d                  	// #29
  408988:	mov	x2, xzr
  40898c:	str	x19, [sp, #8]
  408990:	bl	402720 <sigaction@plt>
  408994:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408998:	add	x0, x0, #0x438
  40899c:	mov	w1, #0x1b                  	// #27
  4089a0:	bl	4027f0 <sigismember@plt>
  4089a4:	cbz	w0, 4089bc <__fxstatat@plt+0x5f6c>
  4089a8:	add	x1, sp, #0x8
  4089ac:	mov	w0, #0x1b                  	// #27
  4089b0:	mov	x2, xzr
  4089b4:	str	x19, [sp, #8]
  4089b8:	bl	402720 <sigaction@plt>
  4089bc:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4089c0:	add	x0, x0, #0x438
  4089c4:	mov	w1, #0x1a                  	// #26
  4089c8:	bl	4027f0 <sigismember@plt>
  4089cc:	cbz	w0, 4089e4 <__fxstatat@plt+0x5f94>
  4089d0:	add	x1, sp, #0x8
  4089d4:	mov	w0, #0x1a                  	// #26
  4089d8:	mov	x2, xzr
  4089dc:	str	x19, [sp, #8]
  4089e0:	bl	402720 <sigaction@plt>
  4089e4:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4089e8:	add	x0, x0, #0x438
  4089ec:	mov	w1, #0x18                  	// #24
  4089f0:	bl	4027f0 <sigismember@plt>
  4089f4:	cbz	w0, 408a0c <__fxstatat@plt+0x5fbc>
  4089f8:	add	x1, sp, #0x8
  4089fc:	mov	w0, #0x18                  	// #24
  408a00:	mov	x2, xzr
  408a04:	str	x19, [sp, #8]
  408a08:	bl	402720 <sigaction@plt>
  408a0c:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408a10:	add	x0, x0, #0x438
  408a14:	mov	w1, #0x19                  	// #25
  408a18:	bl	4027f0 <sigismember@plt>
  408a1c:	cbz	w0, 408bc4 <__fxstatat@plt+0x6174>
  408a20:	add	x1, sp, #0x8
  408a24:	mov	w0, #0x19                  	// #25
  408a28:	mov	x2, xzr
  408a2c:	str	x19, [sp, #8]
  408a30:	bl	402720 <sigaction@plt>
  408a34:	b	408bc4 <__fxstatat@plt+0x6174>
  408a38:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408a3c:	add	x0, x0, #0x438
  408a40:	mov	w1, #0x14                  	// #20
  408a44:	bl	4027f0 <sigismember@plt>
  408a48:	cbz	w0, 408a58 <__fxstatat@plt+0x6008>
  408a4c:	mov	w0, #0x14                  	// #20
  408a50:	mov	x1, xzr
  408a54:	bl	4025b0 <signal@plt>
  408a58:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408a5c:	add	x0, x0, #0x438
  408a60:	mov	w1, #0xe                   	// #14
  408a64:	bl	4027f0 <sigismember@plt>
  408a68:	cbz	w0, 408a78 <__fxstatat@plt+0x6028>
  408a6c:	mov	w0, #0xe                   	// #14
  408a70:	mov	x1, xzr
  408a74:	bl	4025b0 <signal@plt>
  408a78:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408a7c:	add	x0, x0, #0x438
  408a80:	mov	w1, #0x1                   	// #1
  408a84:	bl	4027f0 <sigismember@plt>
  408a88:	cbz	w0, 408a98 <__fxstatat@plt+0x6048>
  408a8c:	mov	w0, #0x1                   	// #1
  408a90:	mov	x1, xzr
  408a94:	bl	4025b0 <signal@plt>
  408a98:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408a9c:	add	x0, x0, #0x438
  408aa0:	mov	w1, #0x2                   	// #2
  408aa4:	bl	4027f0 <sigismember@plt>
  408aa8:	cbz	w0, 408ab8 <__fxstatat@plt+0x6068>
  408aac:	mov	w0, #0x2                   	// #2
  408ab0:	mov	x1, xzr
  408ab4:	bl	4025b0 <signal@plt>
  408ab8:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408abc:	add	x0, x0, #0x438
  408ac0:	mov	w1, #0xd                   	// #13
  408ac4:	bl	4027f0 <sigismember@plt>
  408ac8:	cbz	w0, 408ad8 <__fxstatat@plt+0x6088>
  408acc:	mov	w0, #0xd                   	// #13
  408ad0:	mov	x1, xzr
  408ad4:	bl	4025b0 <signal@plt>
  408ad8:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408adc:	add	x0, x0, #0x438
  408ae0:	mov	w1, #0x3                   	// #3
  408ae4:	bl	4027f0 <sigismember@plt>
  408ae8:	cbz	w0, 408af8 <__fxstatat@plt+0x60a8>
  408aec:	mov	w0, #0x3                   	// #3
  408af0:	mov	x1, xzr
  408af4:	bl	4025b0 <signal@plt>
  408af8:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408afc:	add	x0, x0, #0x438
  408b00:	mov	w1, #0xf                   	// #15
  408b04:	bl	4027f0 <sigismember@plt>
  408b08:	cbz	w0, 408b18 <__fxstatat@plt+0x60c8>
  408b0c:	mov	w0, #0xf                   	// #15
  408b10:	mov	x1, xzr
  408b14:	bl	4025b0 <signal@plt>
  408b18:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408b1c:	add	x0, x0, #0x438
  408b20:	mov	w1, #0x1d                  	// #29
  408b24:	bl	4027f0 <sigismember@plt>
  408b28:	cbz	w0, 408b38 <__fxstatat@plt+0x60e8>
  408b2c:	mov	w0, #0x1d                  	// #29
  408b30:	mov	x1, xzr
  408b34:	bl	4025b0 <signal@plt>
  408b38:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408b3c:	add	x0, x0, #0x438
  408b40:	mov	w1, #0x1b                  	// #27
  408b44:	bl	4027f0 <sigismember@plt>
  408b48:	cbz	w0, 408b58 <__fxstatat@plt+0x6108>
  408b4c:	mov	w0, #0x1b                  	// #27
  408b50:	mov	x1, xzr
  408b54:	bl	4025b0 <signal@plt>
  408b58:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408b5c:	add	x0, x0, #0x438
  408b60:	mov	w1, #0x1a                  	// #26
  408b64:	bl	4027f0 <sigismember@plt>
  408b68:	cbz	w0, 408b78 <__fxstatat@plt+0x6128>
  408b6c:	mov	w0, #0x1a                  	// #26
  408b70:	mov	x1, xzr
  408b74:	bl	4025b0 <signal@plt>
  408b78:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408b7c:	add	x0, x0, #0x438
  408b80:	mov	w1, #0x18                  	// #24
  408b84:	bl	4027f0 <sigismember@plt>
  408b88:	cbz	w0, 408b98 <__fxstatat@plt+0x6148>
  408b8c:	mov	w0, #0x18                  	// #24
  408b90:	mov	x1, xzr
  408b94:	bl	4025b0 <signal@plt>
  408b98:	adrp	x0, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408b9c:	add	x0, x0, #0x438
  408ba0:	mov	w1, #0x19                  	// #25
  408ba4:	bl	4027f0 <sigismember@plt>
  408ba8:	cbz	w0, 408bc4 <__fxstatat@plt+0x6174>
  408bac:	ldr	x19, [sp, #176]
  408bb0:	ldp	x29, x30, [sp, #160]
  408bb4:	mov	w0, #0x19                  	// #25
  408bb8:	mov	x1, xzr
  408bbc:	add	sp, sp, #0xc0
  408bc0:	b	4025b0 <signal@plt>
  408bc4:	ldr	x19, [sp, #176]
  408bc8:	ldp	x29, x30, [sp, #160]
  408bcc:	add	sp, sp, #0xc0
  408bd0:	ret
  408bd4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408bd8:	ldr	w8, [x8, #528]
  408bdc:	cbz	w8, 408be4 <__fxstatat@plt+0x6194>
  408be0:	ret
  408be4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408be8:	ldr	w9, [x8, #524]
  408bec:	add	w9, w9, #0x1
  408bf0:	str	w9, [x8, #524]
  408bf4:	ret
  408bf8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  408bfc:	ldr	w9, [x8, #528]
  408c00:	cbz	w9, 408c08 <__fxstatat@plt+0x61b8>
  408c04:	ret
  408c08:	str	w0, [x8, #528]
  408c0c:	ret
  408c10:	stp	x29, x30, [sp, #-16]!
  408c14:	ldr	x8, [x1]
  408c18:	ldr	x9, [x0]
  408c1c:	mov	w11, wzr
  408c20:	mov	x10, xzr
  408c24:	mov	x29, sp
  408c28:	tbz	w2, #0, 408e44 <__fxstatat@plt+0x63f4>
  408c2c:	adrp	x12, 417000 <_obstack_memory_used@@Base+0x1ad0>
  408c30:	adrp	x13, 417000 <_obstack_memory_used@@Base+0x1ad0>
  408c34:	adrp	x14, 417000 <_obstack_memory_used@@Base+0x1ad0>
  408c38:	mov	w17, wzr
  408c3c:	add	x12, x12, #0x930
  408c40:	add	x13, x13, #0x9ae
  408c44:	add	x14, x14, #0x935
  408c48:	mov	w15, #0x1                   	// #1
  408c4c:	mov	w16, #0x7f                  	// #127
  408c50:	b	408c68 <__fxstatat@plt+0x6218>
  408c54:	mov	w11, wzr
  408c58:	strb	w17, [x9], #1
  408c5c:	add	x10, x10, #0x1
  408c60:	cmp	w11, #0x5
  408c64:	b.cs	40905c <__fxstatat@plt+0x660c>  // b.hs, b.nlast
  408c68:	cmp	w11, #0x4
  408c6c:	b.hi	409078 <__fxstatat@plt+0x6628>  // b.pmore
  408c70:	mov	w11, w11
  408c74:	adr	x18, 408c84 <__fxstatat@plt+0x6234>
  408c78:	ldrb	w2, [x12, x11]
  408c7c:	add	x18, x18, x2, lsl #2
  408c80:	br	x18
  408c84:	ldrb	w18, [x8]
  408c88:	mov	w11, #0x5                   	// #5
  408c8c:	sub	w2, w18, #0x3a
  408c90:	cmp	w2, #0x24
  408c94:	b.hi	408dbc <__fxstatat@plt+0x636c>  // b.pmore
  408c98:	adr	x4, 408ca8 <__fxstatat@plt+0x6258>
  408c9c:	ldrb	w5, [x13, x2]
  408ca0:	add	x4, x4, x5, lsl #2
  408ca4:	br	x4
  408ca8:	add	x8, x8, #0x1
  408cac:	mov	w11, #0x1                   	// #1
  408cb0:	b	408c60 <__fxstatat@plt+0x6210>
  408cb4:	ldrb	w18, [x8]
  408cb8:	sub	w11, w18, #0x40
  408cbc:	cmp	w11, #0x3f
  408cc0:	b.cs	408d74 <__fxstatat@plt+0x6324>  // b.hs, b.nlast
  408cc4:	mov	w11, wzr
  408cc8:	add	x8, x8, #0x1
  408ccc:	and	w18, w18, #0x1f
  408cd0:	b	408dc8 <__fxstatat@plt+0x6378>
  408cd4:	ldrb	w11, [x8]
  408cd8:	and	w18, w11, #0xf8
  408cdc:	cmp	w18, #0x30
  408ce0:	b.ne	408c54 <__fxstatat@plt+0x6204>  // b.any
  408ce4:	add	w11, w11, w17, lsl #3
  408ce8:	add	x8, x8, #0x1
  408cec:	sub	w17, w11, #0x30
  408cf0:	mov	w11, #0x2                   	// #2
  408cf4:	b	408c60 <__fxstatat@plt+0x6210>
  408cf8:	ldrb	w4, [x8]
  408cfc:	cmp	w4, #0x78
  408d00:	b.hi	408ddc <__fxstatat@plt+0x638c>  // b.pmore
  408d04:	adr	x5, 408d20 <__fxstatat@plt+0x62d0>
  408d08:	ldrb	w11, [x14, x4]
  408d0c:	add	x5, x5, x11, lsl #2
  408d10:	mov	w2, wzr
  408d14:	mov	w18, #0x7                   	// #7
  408d18:	mov	w11, #0x3                   	// #3
  408d1c:	br	x5
  408d20:	sub	w2, w4, #0x30
  408d24:	mov	w11, #0x2                   	// #2
  408d28:	b	408e38 <__fxstatat@plt+0x63e8>
  408d2c:	ldrb	w11, [x8]
  408d30:	sub	w18, w11, #0x30
  408d34:	cmp	w18, #0x36
  408d38:	b.hi	408c54 <__fxstatat@plt+0x6204>  // b.pmore
  408d3c:	lsl	x2, x15, x18
  408d40:	tst	x2, #0x3ff
  408d44:	b.ne	408d88 <__fxstatat@plt+0x6338>  // b.any
  408d48:	lsl	x2, x15, x18
  408d4c:	tst	x2, #0x7e0000
  408d50:	b.ne	408da8 <__fxstatat@plt+0x6358>  // b.any
  408d54:	lsl	x18, x15, x18
  408d58:	tst	x18, #0x7e000000000000
  408d5c:	b.eq	408c54 <__fxstatat@plt+0x6204>  // b.none
  408d60:	add	w11, w11, w17, lsl #4
  408d64:	add	x8, x8, #0x1
  408d68:	sub	w17, w11, #0x57
  408d6c:	mov	w11, #0x3                   	// #3
  408d70:	b	408c60 <__fxstatat@plt+0x6210>
  408d74:	cmp	w18, #0x3f
  408d78:	b.ne	409058 <__fxstatat@plt+0x6608>  // b.any
  408d7c:	mov	w11, wzr
  408d80:	strb	w16, [x9], #1
  408d84:	b	408c5c <__fxstatat@plt+0x620c>
  408d88:	add	w11, w11, w17, lsl #4
  408d8c:	add	x8, x8, #0x1
  408d90:	sub	w17, w11, #0x30
  408d94:	mov	w11, #0x3                   	// #3
  408d98:	b	408c60 <__fxstatat@plt+0x6210>
  408d9c:	add	x8, x8, #0x1
  408da0:	mov	w11, #0x4                   	// #4
  408da4:	b	408c60 <__fxstatat@plt+0x6210>
  408da8:	add	w11, w11, w17, lsl #4
  408dac:	add	x8, x8, #0x1
  408db0:	sub	w17, w11, #0x37
  408db4:	mov	w11, #0x3                   	// #3
  408db8:	b	408c60 <__fxstatat@plt+0x6210>
  408dbc:	cbz	w18, 40905c <__fxstatat@plt+0x660c>
  408dc0:	mov	w11, wzr
  408dc4:	add	x8, x8, #0x1
  408dc8:	strb	w18, [x9], #1
  408dcc:	b	408c5c <__fxstatat@plt+0x620c>
  408dd0:	mov	w11, #0x6                   	// #6
  408dd4:	mov	w2, w17
  408dd8:	b	408e38 <__fxstatat@plt+0x63e8>
  408ddc:	mov	w18, w4
  408de0:	b	408e28 <__fxstatat@plt+0x63d8>
  408de4:	mov	w18, #0x7f                  	// #127
  408de8:	b	408e28 <__fxstatat@plt+0x63d8>
  408dec:	mov	w18, #0x20                  	// #32
  408df0:	b	408e28 <__fxstatat@plt+0x63d8>
  408df4:	mov	w18, #0x8                   	// #8
  408df8:	b	408e28 <__fxstatat@plt+0x63d8>
  408dfc:	mov	w18, #0x1b                  	// #27
  408e00:	b	408e28 <__fxstatat@plt+0x63d8>
  408e04:	mov	w18, #0xc                   	// #12
  408e08:	b	408e28 <__fxstatat@plt+0x63d8>
  408e0c:	mov	w18, #0xa                   	// #10
  408e10:	b	408e28 <__fxstatat@plt+0x63d8>
  408e14:	mov	w18, #0xd                   	// #13
  408e18:	b	408e28 <__fxstatat@plt+0x63d8>
  408e1c:	mov	w18, #0x9                   	// #9
  408e20:	b	408e28 <__fxstatat@plt+0x63d8>
  408e24:	mov	w18, #0xb                   	// #11
  408e28:	mov	w11, wzr
  408e2c:	strb	w18, [x9], #1
  408e30:	add	x10, x10, #0x1
  408e34:	mov	w2, w18
  408e38:	add	x8, x8, #0x1
  408e3c:	mov	w17, w2
  408e40:	b	408c60 <__fxstatat@plt+0x6210>
  408e44:	adrp	x12, 417000 <_obstack_memory_used@@Base+0x1ad0>
  408e48:	adrp	x13, 417000 <_obstack_memory_used@@Base+0x1ad0>
  408e4c:	mov	w16, wzr
  408e50:	add	x12, x12, #0x8b2
  408e54:	add	x13, x13, #0x8b7
  408e58:	mov	w14, #0x1                   	// #1
  408e5c:	mov	w15, #0x7f                  	// #127
  408e60:	b	408e78 <__fxstatat@plt+0x6428>
  408e64:	mov	w11, wzr
  408e68:	strb	w16, [x9], #1
  408e6c:	add	x10, x10, #0x1
  408e70:	cmp	w11, #0x5
  408e74:	b.cs	40905c <__fxstatat@plt+0x660c>  // b.hs, b.nlast
  408e78:	cmp	w11, #0x4
  408e7c:	b.hi	409078 <__fxstatat@plt+0x6628>  // b.pmore
  408e80:	mov	w11, w11
  408e84:	adr	x17, 408e94 <__fxstatat@plt+0x6444>
  408e88:	ldrb	w18, [x12, x11]
  408e8c:	add	x17, x17, x18, lsl #2
  408e90:	br	x17
  408e94:	ldrb	w17, [x8]
  408e98:	cmp	w17, #0x5d
  408e9c:	b.gt	408f88 <__fxstatat@plt+0x6538>
  408ea0:	cmp	w17, #0x5c
  408ea4:	b.ne	408fc4 <__fxstatat@plt+0x6574>  // b.any
  408ea8:	add	x8, x8, #0x1
  408eac:	mov	w11, #0x1                   	// #1
  408eb0:	b	408e70 <__fxstatat@plt+0x6420>
  408eb4:	ldrb	w17, [x8]
  408eb8:	sub	w11, w17, #0x40
  408ebc:	cmp	w11, #0x3e
  408ec0:	b.hi	408f74 <__fxstatat@plt+0x6524>  // b.pmore
  408ec4:	mov	w11, wzr
  408ec8:	add	x8, x8, #0x1
  408ecc:	and	w17, w17, #0x1f
  408ed0:	b	408fdc <__fxstatat@plt+0x658c>
  408ed4:	ldrb	w11, [x8]
  408ed8:	and	w17, w11, #0xf8
  408edc:	cmp	w17, #0x30
  408ee0:	b.ne	408e64 <__fxstatat@plt+0x6414>  // b.any
  408ee4:	add	w11, w11, w16, lsl #3
  408ee8:	add	x8, x8, #0x1
  408eec:	sub	w16, w11, #0x30
  408ef0:	mov	w11, #0x2                   	// #2
  408ef4:	b	408e70 <__fxstatat@plt+0x6420>
  408ef8:	ldrb	w11, [x8]
  408efc:	sub	w17, w11, #0x30
  408f00:	cmp	w17, #0x36
  408f04:	b.hi	408e64 <__fxstatat@plt+0x6414>  // b.pmore
  408f08:	lsl	x18, x14, x17
  408f0c:	tst	x18, #0x3ff
  408f10:	b.ne	408f9c <__fxstatat@plt+0x654c>  // b.any
  408f14:	lsl	x18, x14, x17
  408f18:	tst	x18, #0x7e0000
  408f1c:	b.ne	408fb0 <__fxstatat@plt+0x6560>  // b.any
  408f20:	lsl	x17, x14, x17
  408f24:	tst	x17, #0x7e000000000000
  408f28:	b.eq	408e64 <__fxstatat@plt+0x6414>  // b.none
  408f2c:	add	w11, w11, w16, lsl #4
  408f30:	add	x8, x8, #0x1
  408f34:	sub	w16, w11, #0x57
  408f38:	mov	w11, #0x3                   	// #3
  408f3c:	b	408e70 <__fxstatat@plt+0x6420>
  408f40:	ldrb	w2, [x8]
  408f44:	cmp	w2, #0x78
  408f48:	b.hi	408ff0 <__fxstatat@plt+0x65a0>  // b.pmore
  408f4c:	adr	x4, 408f68 <__fxstatat@plt+0x6518>
  408f50:	ldrb	w11, [x13, x2]
  408f54:	add	x4, x4, x11, lsl #2
  408f58:	mov	w18, wzr
  408f5c:	mov	w17, #0x7                   	// #7
  408f60:	mov	w11, #0x3                   	// #3
  408f64:	br	x4
  408f68:	sub	w18, w2, #0x30
  408f6c:	mov	w11, #0x2                   	// #2
  408f70:	b	40904c <__fxstatat@plt+0x65fc>
  408f74:	cmp	w17, #0x3f
  408f78:	b.ne	409058 <__fxstatat@plt+0x6608>  // b.any
  408f7c:	mov	w11, wzr
  408f80:	strb	w15, [x9], #1
  408f84:	b	408e6c <__fxstatat@plt+0x641c>
  408f88:	cmp	w17, #0x5e
  408f8c:	b.ne	408fd4 <__fxstatat@plt+0x6584>  // b.any
  408f90:	add	x8, x8, #0x1
  408f94:	mov	w11, #0x4                   	// #4
  408f98:	b	408e70 <__fxstatat@plt+0x6420>
  408f9c:	add	w11, w11, w16, lsl #4
  408fa0:	add	x8, x8, #0x1
  408fa4:	sub	w16, w11, #0x30
  408fa8:	mov	w11, #0x3                   	// #3
  408fac:	b	408e70 <__fxstatat@plt+0x6420>
  408fb0:	add	w11, w11, w16, lsl #4
  408fb4:	add	x8, x8, #0x1
  408fb8:	sub	w16, w11, #0x37
  408fbc:	mov	w11, #0x3                   	// #3
  408fc0:	b	408e70 <__fxstatat@plt+0x6420>
  408fc4:	mov	w11, #0x5                   	// #5
  408fc8:	cbz	w17, 40905c <__fxstatat@plt+0x660c>
  408fcc:	cmp	w17, #0x3a
  408fd0:	b.eq	40905c <__fxstatat@plt+0x660c>  // b.none
  408fd4:	mov	w11, wzr
  408fd8:	add	x8, x8, #0x1
  408fdc:	strb	w17, [x9], #1
  408fe0:	b	408e6c <__fxstatat@plt+0x641c>
  408fe4:	mov	w11, #0x6                   	// #6
  408fe8:	mov	w18, w16
  408fec:	b	40904c <__fxstatat@plt+0x65fc>
  408ff0:	mov	w17, w2
  408ff4:	b	40903c <__fxstatat@plt+0x65ec>
  408ff8:	mov	w17, #0x7f                  	// #127
  408ffc:	b	40903c <__fxstatat@plt+0x65ec>
  409000:	mov	w17, #0x20                  	// #32
  409004:	b	40903c <__fxstatat@plt+0x65ec>
  409008:	mov	w17, #0x8                   	// #8
  40900c:	b	40903c <__fxstatat@plt+0x65ec>
  409010:	mov	w17, #0x1b                  	// #27
  409014:	b	40903c <__fxstatat@plt+0x65ec>
  409018:	mov	w17, #0xc                   	// #12
  40901c:	b	40903c <__fxstatat@plt+0x65ec>
  409020:	mov	w17, #0xa                   	// #10
  409024:	b	40903c <__fxstatat@plt+0x65ec>
  409028:	mov	w17, #0xd                   	// #13
  40902c:	b	40903c <__fxstatat@plt+0x65ec>
  409030:	mov	w17, #0x9                   	// #9
  409034:	b	40903c <__fxstatat@plt+0x65ec>
  409038:	mov	w17, #0xb                   	// #11
  40903c:	mov	w11, wzr
  409040:	strb	w17, [x9], #1
  409044:	add	x10, x10, #0x1
  409048:	mov	w18, w17
  40904c:	add	x8, x8, #0x1
  409050:	mov	w16, w18
  409054:	b	408e70 <__fxstatat@plt+0x6420>
  409058:	mov	w11, #0x6                   	// #6
  40905c:	cmp	w11, #0x6
  409060:	str	x9, [x0]
  409064:	str	x8, [x1]
  409068:	cset	w0, ne  // ne = any
  40906c:	str	x10, [x3]
  409070:	ldp	x29, x30, [sp], #16
  409074:	ret
  409078:	bl	402770 <abort@plt>
  40907c:	stp	x29, x30, [sp, #-96]!
  409080:	stp	x28, x27, [sp, #16]
  409084:	stp	x26, x25, [sp, #32]
  409088:	stp	x24, x23, [sp, #48]
  40908c:	stp	x22, x21, [sp, #64]
  409090:	stp	x20, x19, [sp, #80]
  409094:	mov	x29, sp
  409098:	sub	sp, sp, #0x2, lsl #12
  40909c:	sub	sp, sp, #0x30
  4090a0:	mov	x20, x0
  4090a4:	mov	x22, x5
  4090a8:	mov	w24, w4
  4090ac:	mov	x23, x3
  4090b0:	mov	w3, w2
  4090b4:	mov	x2, x1
  4090b8:	add	x8, sp, #0x28
  4090bc:	add	x0, sp, #0x20
  4090c0:	add	x5, sp, #0x1c
  4090c4:	mov	x1, x20
  4090c8:	mov	x4, xzr
  4090cc:	mov	x21, x6
  4090d0:	str	x8, [sp, #32]
  4090d4:	bl	4095e0 <__fxstatat@plt+0x6b90>
  4090d8:	ldrb	w25, [sp, #28]
  4090dc:	mov	x19, x0
  4090e0:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4090e4:	adrp	x28, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4090e8:	cbz	w25, 40911c <__fxstatat@plt+0x66cc>
  4090ec:	tbz	w24, #0, 40911c <__fxstatat@plt+0x66cc>
  4090f0:	ldr	x0, [x26, #1456]
  4090f4:	ldp	x8, x9, [x0, #40]
  4090f8:	cmp	x8, x9
  4090fc:	b.cs	4094d0 <__fxstatat@plt+0x6a80>  // b.hs, b.nlast
  409100:	add	x9, x8, #0x1
  409104:	mov	w10, #0x20                  	// #32
  409108:	str	x9, [x0, #40]
  40910c:	strb	w10, [x8]
  409110:	ldr	x8, [x28, #648]
  409114:	add	x8, x8, #0x1
  409118:	str	x8, [x28, #648]
  40911c:	cbz	x23, 409198 <__fxstatat@plt+0x6748>
  409120:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  409124:	add	x9, x9, #0x3c8
  409128:	ldr	x8, [x9]
  40912c:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  409130:	add	x24, x24, #0x388
  409134:	cbz	x8, 409180 <__fxstatat@plt+0x6730>
  409138:	ldr	x0, [x9, #8]
  40913c:	cmp	x8, #0x2
  409140:	b.eq	40915c <__fxstatat@plt+0x670c>  // b.none
  409144:	cmp	x8, #0x1
  409148:	b.ne	409170 <__fxstatat@plt+0x6720>  // b.any
  40914c:	ldrb	w8, [x0]
  409150:	cmp	w8, #0x30
  409154:	b.ne	409170 <__fxstatat@plt+0x6720>  // b.any
  409158:	b	409180 <__fxstatat@plt+0x6730>
  40915c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409160:	add	x1, x1, #0x20e
  409164:	mov	w2, #0x2                   	// #2
  409168:	bl	402640 <strncmp@plt>
  40916c:	cbz	w0, 409180 <__fxstatat@plt+0x6730>
  409170:	mov	x0, x24
  409174:	bl	408560 <__fxstatat@plt+0x5b10>
  409178:	add	x0, x24, #0x10
  40917c:	bl	408560 <__fxstatat@plt+0x5b10>
  409180:	mov	x0, x24
  409184:	bl	408560 <__fxstatat@plt+0x5b10>
  409188:	mov	x0, x23
  40918c:	bl	408560 <__fxstatat@plt+0x5b10>
  409190:	add	x0, x24, #0x10
  409194:	bl	408560 <__fxstatat@plt+0x5b10>
  409198:	cbz	x21, 4093bc <__fxstatat@plt+0x696c>
  40919c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4091a0:	add	x8, x8, #0x1f0
  4091a4:	ldrb	w9, [x8]
  4091a8:	mov	w27, wzr
  4091ac:	cbz	w9, 4091e4 <__fxstatat@plt+0x6794>
  4091b0:	cbnz	w25, 4091e4 <__fxstatat@plt+0x6794>
  4091b4:	ldrb	w8, [x8, #3]
  4091b8:	cbz	w8, 4091e4 <__fxstatat@plt+0x6794>
  4091bc:	ldr	x0, [x26, #1456]
  4091c0:	ldr	x9, [sp, #32]
  4091c4:	ldp	x8, x10, [x0, #40]
  4091c8:	ldrb	w1, [x9]
  4091cc:	cmp	x8, x10
  4091d0:	b.cs	4094dc <__fxstatat@plt+0x6a8c>  // b.hs, b.nlast
  4091d4:	add	x9, x8, #0x1
  4091d8:	str	x9, [x0, #40]
  4091dc:	strb	w1, [x8]
  4091e0:	mov	w27, #0x1                   	// #1
  4091e4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4091e8:	ldr	x25, [x8, #616]
  4091ec:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4091f0:	movk	x26, #0x2aaa, lsl #48
  4091f4:	mov	x0, x25
  4091f8:	bl	402430 <strlen@plt>
  4091fc:	add	x8, x0, #0x1
  409200:	cmp	x8, x26
  409204:	b.hi	4094fc <__fxstatat@plt+0x6aac>  // b.pmore
  409208:	add	x0, x8, x8, lsl #1
  40920c:	str	x19, [sp, #8]
  409210:	bl	414368 <__fxstatat@plt+0x11918>
  409214:	ldrb	w8, [x25]
  409218:	adrp	x28, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40921c:	mov	x23, x0
  409220:	add	x28, x28, #0x1d0
  409224:	mov	x24, x0
  409228:	cbz	w8, 40927c <__fxstatat@plt+0x682c>
  40922c:	add	x19, x25, #0x1
  409230:	adrp	x25, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409234:	add	x25, x25, #0x8d2
  409238:	mov	x24, x23
  40923c:	b	409264 <__fxstatat@plt+0x6814>
  409240:	and	w4, w8, #0xff
  409244:	mov	w1, #0x1                   	// #1
  409248:	mov	x2, #0xffffffffffffffff    	// #-1
  40924c:	mov	x0, x24
  409250:	mov	x3, x25
  409254:	bl	402440 <__sprintf_chk@plt>
  409258:	add	x24, x24, w0, sxtw
  40925c:	ldrb	w8, [x19], #1
  409260:	cbz	w8, 40927c <__fxstatat@plt+0x682c>
  409264:	add	x9, x28, w8, uxtb
  409268:	ldrb	w9, [x9, #744]
  40926c:	cbz	w9, 409240 <__fxstatat@plt+0x67f0>
  409270:	strb	w8, [x24], #1
  409274:	ldrb	w8, [x19], #1
  409278:	cbnz	w8, 409264 <__fxstatat@plt+0x6814>
  40927c:	mov	x0, x21
  409280:	str	x20, [sp, #16]
  409284:	strb	wzr, [x24]
  409288:	bl	402430 <strlen@plt>
  40928c:	add	x8, x0, #0x1
  409290:	cmp	x8, x26
  409294:	b.hi	4094fc <__fxstatat@plt+0x6aac>  // b.pmore
  409298:	add	x0, x8, x8, lsl #1
  40929c:	bl	414368 <__fxstatat@plt+0x11918>
  4092a0:	ldrb	w8, [x21]
  4092a4:	mov	x24, x0
  4092a8:	mov	x25, x0
  4092ac:	cbz	w8, 409314 <__fxstatat@plt+0x68c4>
  4092b0:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4092b4:	add	x19, x21, #0x1
  4092b8:	mov	w20, #0x2f                  	// #47
  4092bc:	add	x26, x26, #0x8d2
  4092c0:	mov	x25, x24
  4092c4:	b	4092d4 <__fxstatat@plt+0x6884>
  4092c8:	strb	w20, [x25], #1
  4092cc:	ldrb	w8, [x19], #1
  4092d0:	cbz	w8, 409314 <__fxstatat@plt+0x68c4>
  4092d4:	and	w9, w8, #0xff
  4092d8:	cmp	w9, #0x2f
  4092dc:	b.eq	4092c8 <__fxstatat@plt+0x6878>  // b.none
  4092e0:	add	x9, x28, w8, uxtb
  4092e4:	ldrb	w9, [x9, #744]
  4092e8:	cbz	w9, 4092f4 <__fxstatat@plt+0x68a4>
  4092ec:	strb	w8, [x25], #1
  4092f0:	b	4092cc <__fxstatat@plt+0x687c>
  4092f4:	and	w4, w8, #0xff
  4092f8:	mov	w1, #0x1                   	// #1
  4092fc:	mov	x2, #0xffffffffffffffff    	// #-1
  409300:	mov	x0, x25
  409304:	mov	x3, x26
  409308:	bl	402440 <__sprintf_chk@plt>
  40930c:	add	x25, x25, w0, sxtw
  409310:	b	4092cc <__fxstatat@plt+0x687c>
  409314:	strb	wzr, [x25]
  409318:	ldrb	w8, [x24]
  40931c:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x3ad0>
  409320:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409324:	add	x9, x9, #0x576
  409328:	add	x10, x10, #0x8d1
  40932c:	cmp	w8, #0x2f
  409330:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409334:	csel	x3, x10, x9, eq  // eq = none
  409338:	add	x1, x1, #0x8b7
  40933c:	mov	w0, #0x1                   	// #1
  409340:	mov	x2, x23
  409344:	mov	x4, x24
  409348:	bl	402670 <__printf_chk@plt>
  40934c:	mov	x0, x23
  409350:	bl	402840 <free@plt>
  409354:	mov	x0, x24
  409358:	bl	402840 <free@plt>
  40935c:	ldp	x19, x20, [sp, #8]
  409360:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  409364:	adrp	x28, 42e000 <__progname@@GLIBC_2.17+0xa48>
  409368:	cmp	x22, #0x0
  40936c:	cset	w24, ne  // ne = any
  409370:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  409374:	cbz	x22, 4093d0 <__fxstatat@plt+0x6980>
  409378:	ldrb	w8, [x23, #481]
  40937c:	cmp	w8, #0x1
  409380:	b.ne	4093d4 <__fxstatat@plt+0x6984>  // b.any
  409384:	ldp	x8, x9, [x22, #24]
  409388:	sub	x9, x9, x8
  40938c:	cmp	x9, #0x7
  409390:	b.hi	4093a4 <__fxstatat@plt+0x6954>  // b.pmore
  409394:	mov	w1, #0x8                   	// #8
  409398:	mov	x0, x22
  40939c:	bl	41530c <_obstack_newchunk@@Base>
  4093a0:	ldr	x8, [x22, #24]
  4093a4:	ldr	x9, [x28, #648]
  4093a8:	str	x9, [x8]
  4093ac:	ldr	x8, [x22, #24]
  4093b0:	add	x8, x8, #0x8
  4093b4:	str	x8, [x22, #24]
  4093b8:	b	4093d4 <__fxstatat@plt+0x6984>
  4093bc:	mov	w27, wzr
  4093c0:	cmp	x22, #0x0
  4093c4:	cset	w24, ne  // ne = any
  4093c8:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4093cc:	cbnz	x22, 409378 <__fxstatat@plt+0x6928>
  4093d0:	mov	w24, wzr
  4093d4:	ldr	x9, [sp, #32]
  4093d8:	ldr	x3, [x26, #1456]
  4093dc:	cmp	w27, #0x0
  4093e0:	mov	w8, #0x2                   	// #2
  4093e4:	csel	x8, x8, xzr, ne  // ne = any
  4093e8:	sub	x2, x19, x8
  4093ec:	add	x0, x9, x27
  4093f0:	mov	w1, #0x1                   	// #1
  4093f4:	bl	402410 <fwrite_unlocked@plt>
  4093f8:	ldr	x8, [x28, #648]
  4093fc:	add	x8, x8, x19
  409400:	str	x8, [x28, #648]
  409404:	cbz	w24, 409448 <__fxstatat@plt+0x69f8>
  409408:	ldrb	w8, [x23, #481]
  40940c:	cmp	w8, #0x1
  409410:	b.ne	409448 <__fxstatat@plt+0x69f8>  // b.any
  409414:	ldp	x8, x9, [x22, #24]
  409418:	sub	x9, x9, x8
  40941c:	cmp	x9, #0x7
  409420:	b.hi	409434 <__fxstatat@plt+0x69e4>  // b.pmore
  409424:	mov	w1, #0x8                   	// #8
  409428:	mov	x0, x22
  40942c:	bl	41530c <_obstack_newchunk@@Base>
  409430:	ldr	x8, [x22, #24]
  409434:	ldr	x9, [x28, #648]
  409438:	str	x9, [x8]
  40943c:	ldr	x8, [x22, #24]
  409440:	add	x8, x8, #0x8
  409444:	str	x8, [x22, #24]
  409448:	cbz	x21, 409488 <__fxstatat@plt+0x6a38>
  40944c:	ldr	x1, [x26, #1456]
  409450:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409454:	add	x0, x0, #0x8cb
  409458:	bl	402980 <fputs_unlocked@plt>
  40945c:	cbz	w27, 409488 <__fxstatat@plt+0x6a38>
  409460:	ldr	x0, [x26, #1456]
  409464:	ldr	x9, [sp, #32]
  409468:	ldp	x8, x10, [x0, #40]
  40946c:	add	x9, x9, x19
  409470:	ldurb	w1, [x9, #-1]
  409474:	cmp	x8, x10
  409478:	b.cs	4094e4 <__fxstatat@plt+0x6a94>  // b.hs, b.nlast
  40947c:	add	x9, x8, #0x1
  409480:	str	x9, [x0, #40]
  409484:	strb	w1, [x8]
  409488:	ldr	x0, [sp, #32]
  40948c:	add	x8, sp, #0x28
  409490:	cmp	x0, x8
  409494:	b.eq	4094a4 <__fxstatat@plt+0x6a54>  // b.none
  409498:	cmp	x0, x20
  40949c:	b.eq	4094a4 <__fxstatat@plt+0x6a54>  // b.none
  4094a0:	bl	402840 <free@plt>
  4094a4:	ldrb	w8, [sp, #28]
  4094a8:	add	x0, x19, x8
  4094ac:	add	sp, sp, #0x2, lsl #12
  4094b0:	add	sp, sp, #0x30
  4094b4:	ldp	x20, x19, [sp, #80]
  4094b8:	ldp	x22, x21, [sp, #64]
  4094bc:	ldp	x24, x23, [sp, #48]
  4094c0:	ldp	x26, x25, [sp, #32]
  4094c4:	ldp	x28, x27, [sp, #16]
  4094c8:	ldp	x29, x30, [sp], #96
  4094cc:	ret
  4094d0:	mov	w1, #0x20                  	// #32
  4094d4:	bl	402790 <__overflow@plt>
  4094d8:	b	409110 <__fxstatat@plt+0x66c0>
  4094dc:	bl	402790 <__overflow@plt>
  4094e0:	b	4091e0 <__fxstatat@plt+0x6790>
  4094e4:	bl	402790 <__overflow@plt>
  4094e8:	ldr	x0, [sp, #32]
  4094ec:	add	x8, sp, #0x28
  4094f0:	cmp	x0, x8
  4094f4:	b.ne	409498 <__fxstatat@plt+0x6a48>  // b.any
  4094f8:	b	4094a4 <__fxstatat@plt+0x6a54>
  4094fc:	bl	4146a4 <__fxstatat@plt+0x11c54>
  409500:	sub	sp, sp, #0xd0
  409504:	str	x25, [sp, #144]
  409508:	stp	x20, x19, [sp, #192]
  40950c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  409510:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  409514:	stp	x24, x23, [sp, #160]
  409518:	stp	x22, x21, [sp, #176]
  40951c:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  409520:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  409524:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  409528:	add	x19, x19, #0x388
  40952c:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  409530:	add	x25, x25, #0x20c
  409534:	stp	x29, x30, [sp, #128]
  409538:	add	x29, sp, #0x80
  40953c:	b	409564 <__fxstatat@plt+0x6b14>
  409540:	mov	w0, w20
  409544:	mov	x1, xzr
  409548:	bl	4025b0 <signal@plt>
  40954c:	mov	w0, w20
  409550:	bl	402480 <raise@plt>
  409554:	mov	x1, sp
  409558:	mov	w0, #0x2                   	// #2
  40955c:	mov	x2, xzr
  409560:	bl	4024a0 <sigprocmask@plt>
  409564:	ldr	w8, [x21, #528]
  409568:	cbnz	w8, 409574 <__fxstatat@plt+0x6b24>
  40956c:	ldr	w8, [x22, #524]
  409570:	cbz	w8, 4095c4 <__fxstatat@plt+0x6b74>
  409574:	ldrb	w8, [x23, #485]
  409578:	cmp	w8, #0x1
  40957c:	b.ne	409590 <__fxstatat@plt+0x6b40>  // b.any
  409580:	mov	x0, x19
  409584:	bl	408560 <__fxstatat@plt+0x5b10>
  409588:	add	x0, x19, #0x10
  40958c:	bl	408560 <__fxstatat@plt+0x5b10>
  409590:	ldr	x0, [x24, #1456]
  409594:	bl	4028a0 <fflush_unlocked@plt>
  409598:	add	x1, x25, #0x22c
  40959c:	mov	x2, sp
  4095a0:	mov	w0, wzr
  4095a4:	bl	4024a0 <sigprocmask@plt>
  4095a8:	ldr	w20, [x25, #4]
  4095ac:	ldr	w8, [x25]
  4095b0:	cbz	w8, 409540 <__fxstatat@plt+0x6af0>
  4095b4:	sub	w8, w8, #0x1
  4095b8:	str	w8, [x22, #524]
  4095bc:	mov	w20, #0x13                  	// #19
  4095c0:	b	40954c <__fxstatat@plt+0x6afc>
  4095c4:	ldp	x20, x19, [sp, #192]
  4095c8:	ldp	x22, x21, [sp, #176]
  4095cc:	ldp	x24, x23, [sp, #160]
  4095d0:	ldr	x25, [sp, #144]
  4095d4:	ldp	x29, x30, [sp, #128]
  4095d8:	add	sp, sp, #0xd0
  4095dc:	ret
  4095e0:	sub	sp, sp, #0x80
  4095e4:	stp	x29, x30, [sp, #32]
  4095e8:	stp	x28, x27, [sp, #48]
  4095ec:	stp	x26, x25, [sp, #64]
  4095f0:	stp	x24, x23, [sp, #80]
  4095f4:	stp	x22, x21, [sp, #96]
  4095f8:	stp	x20, x19, [sp, #112]
  4095fc:	ldr	x21, [x0]
  409600:	mov	x20, x0
  409604:	mov	x0, x2
  409608:	add	x29, sp, #0x20
  40960c:	mov	x28, x5
  409610:	mov	x19, x4
  409614:	mov	w23, w3
  409618:	mov	x25, x2
  40961c:	mov	x24, x1
  409620:	bl	412070 <__fxstatat@plt+0xf620>
  409624:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  409628:	sub	w9, w0, #0x1
  40962c:	ldrb	w8, [x8, #486]
  409630:	cmp	w9, #0x2
  409634:	cset	w9, cc  // cc = lo, ul, last
  409638:	cmp	w0, #0x0
  40963c:	cset	w10, eq  // eq = none
  409640:	orr	w9, w10, w9
  409644:	and	w22, w8, w9
  409648:	cbz	w23, 4096e0 <__fxstatat@plt+0x6c90>
  40964c:	mov	w1, #0x2000                	// #8192
  409650:	mov	x3, #0xffffffffffffffff    	// #-1
  409654:	mov	x0, x21
  409658:	mov	x2, x24
  40965c:	mov	x4, x25
  409660:	bl	412130 <__fxstatat@plt+0xf6e0>
  409664:	mov	x23, x0
  409668:	cmp	x0, #0x2, lsl #12
  40966c:	b.cc	409694 <__fxstatat@plt+0x6c44>  // b.lo, b.ul, b.last
  409670:	add	x26, x23, #0x1
  409674:	mov	x0, x26
  409678:	bl	414368 <__fxstatat@plt+0x11918>
  40967c:	mov	x3, #0xffffffffffffffff    	// #-1
  409680:	mov	x1, x26
  409684:	mov	x2, x24
  409688:	mov	x4, x25
  40968c:	mov	x21, x0
  409690:	bl	412130 <__fxstatat@plt+0xf6e0>
  409694:	ldrb	w8, [x24]
  409698:	ldrb	w9, [x21]
  40969c:	cmp	w8, w9
  4096a0:	b.ne	409768 <__fxstatat@plt+0x6d18>  // b.any
  4096a4:	mov	x0, x24
  4096a8:	bl	402430 <strlen@plt>
  4096ac:	cmp	x0, x23
  4096b0:	cset	w25, ne  // ne = any
  4096b4:	cbnz	w22, 409770 <__fxstatat@plt+0x6d20>
  4096b8:	cbz	x19, 40990c <__fxstatat@plt+0x6ebc>
  4096bc:	bl	402850 <__ctype_get_mb_cur_max@plt>
  4096c0:	cmp	x0, #0x2
  4096c4:	b.cc	409910 <__fxstatat@plt+0x6ec0>  // b.lo, b.ul, b.last
  4096c8:	mov	x0, x21
  4096cc:	mov	x1, x23
  4096d0:	mov	w2, wzr
  4096d4:	bl	410464 <__fxstatat@plt+0xda14>
  4096d8:	sxtw	x26, w0
  4096dc:	b	4099c8 <__fxstatat@plt+0x6f78>
  4096e0:	mov	x0, x24
  4096e4:	bl	402430 <strlen@plt>
  4096e8:	mov	x23, x0
  4096ec:	cbz	w22, 409900 <__fxstatat@plt+0x6eb0>
  4096f0:	cmp	x23, #0x2, lsl #12
  4096f4:	add	x25, x23, #0x1
  4096f8:	b.cc	409708 <__fxstatat@plt+0x6cb8>  // b.lo, b.ul, b.last
  4096fc:	mov	x0, x25
  409700:	bl	414368 <__fxstatat@plt+0x11918>
  409704:	mov	x21, x0
  409708:	mov	x0, x21
  40970c:	mov	x1, x24
  409710:	mov	x2, x25
  409714:	bl	4023c0 <memcpy@plt>
  409718:	mov	w25, wzr
  40971c:	bl	402850 <__ctype_get_mb_cur_max@plt>
  409720:	cmp	x0, #0x1
  409724:	add	x27, x21, x23
  409728:	b.hi	409780 <__fxstatat@plt+0x6d30>  // b.pmore
  40972c:	cmp	x23, #0x1
  409730:	b.lt	4098f8 <__fxstatat@plt+0x6ea8>  // b.tstop
  409734:	bl	402820 <__ctype_b_loc@plt>
  409738:	mov	w8, #0x3f                  	// #63
  40973c:	mov	x9, x21
  409740:	b	409750 <__fxstatat@plt+0x6d00>
  409744:	add	x9, x9, #0x1
  409748:	cmp	x9, x27
  40974c:	b.cs	4098f8 <__fxstatat@plt+0x6ea8>  // b.hs, b.nlast
  409750:	ldr	x10, [x0]
  409754:	ldrb	w11, [x9]
  409758:	ldrh	w10, [x10, x11, lsl #1]
  40975c:	tbnz	w10, #14, 409744 <__fxstatat@plt+0x6cf4>
  409760:	strb	w8, [x9]
  409764:	b	409744 <__fxstatat@plt+0x6cf4>
  409768:	mov	w25, #0x1                   	// #1
  40976c:	cbz	w22, 4096b8 <__fxstatat@plt+0x6c68>
  409770:	bl	402850 <__ctype_get_mb_cur_max@plt>
  409774:	cmp	x0, #0x1
  409778:	add	x27, x21, x23
  40977c:	b.ls	40972c <__fxstatat@plt+0x6cdc>  // b.plast
  409780:	cmp	x23, #0x1
  409784:	mov	x26, xzr
  409788:	str	x28, [sp, #8]
  40978c:	b.lt	409948 <__fxstatat@plt+0x6ef8>  // b.tstop
  409790:	adrp	x28, 417000 <_obstack_memory_used@@Base+0x1ad0>
  409794:	add	x28, x28, #0x9d3
  409798:	mov	x22, x21
  40979c:	mov	x23, x21
  4097a0:	ldrb	w8, [x23]
  4097a4:	sub	w9, w8, #0x20
  4097a8:	cmp	w9, #0x5e
  4097ac:	b.hi	4097d8 <__fxstatat@plt+0x6d88>  // b.pmore
  4097b0:	adr	x10, 4097c0 <__fxstatat@plt+0x6d70>
  4097b4:	ldrb	w11, [x28, x9]
  4097b8:	add	x10, x10, x11, lsl #2
  4097bc:	br	x10
  4097c0:	add	x23, x23, #0x1
  4097c4:	strb	w8, [x22], #1
  4097c8:	add	x26, x26, #0x1
  4097cc:	cmp	x23, x27
  4097d0:	b.cc	4097a0 <__fxstatat@plt+0x6d50>  // b.lo, b.ul, b.last
  4097d4:	b	40994c <__fxstatat@plt+0x6efc>
  4097d8:	stur	xzr, [x29, #-8]
  4097dc:	b	409800 <__fxstatat@plt+0x6db0>
  4097e0:	mov	w8, #0x3f                  	// #63
  4097e4:	add	x23, x23, x24
  4097e8:	strb	w8, [x22], #1
  4097ec:	mov	w8, #0x1                   	// #1
  4097f0:	sub	x0, x29, #0x8
  4097f4:	add	x26, x8, x26
  4097f8:	bl	402780 <mbsinit@plt>
  4097fc:	cbnz	w0, 4097cc <__fxstatat@plt+0x6d7c>
  409800:	sub	x2, x27, x23
  409804:	sub	x0, x29, #0xc
  409808:	sub	x3, x29, #0x8
  40980c:	mov	x1, x23
  409810:	bl	415148 <__fxstatat@plt+0x126f8>
  409814:	cbz	x0, 40983c <__fxstatat@plt+0x6dec>
  409818:	mov	x24, x0
  40981c:	cmn	x0, #0x2
  409820:	b.eq	4098e0 <__fxstatat@plt+0x6e90>  // b.none
  409824:	cmn	x24, #0x1
  409828:	b.eq	4098ec <__fxstatat@plt+0x6e9c>  // b.none
  40982c:	ldur	w0, [x29, #-12]
  409830:	bl	402600 <wcwidth@plt>
  409834:	tbz	w0, #31, 40984c <__fxstatat@plt+0x6dfc>
  409838:	b	4097e0 <__fxstatat@plt+0x6d90>
  40983c:	mov	w24, #0x1                   	// #1
  409840:	ldur	w0, [x29, #-12]
  409844:	bl	402600 <wcwidth@plt>
  409848:	tbnz	w0, #31, 4097e0 <__fxstatat@plt+0x6d90>
  40984c:	cmp	x24, #0x20
  409850:	b.cc	40986c <__fxstatat@plt+0x6e1c>  // b.lo, b.ul, b.last
  409854:	add	x8, x23, x24
  409858:	cmp	x22, x8
  40985c:	b.cs	4098a0 <__fxstatat@plt+0x6e50>  // b.hs, b.nlast
  409860:	add	x8, x22, x24
  409864:	cmp	x23, x8
  409868:	b.cs	4098a0 <__fxstatat@plt+0x6e50>  // b.hs, b.nlast
  40986c:	mov	x8, x24
  409870:	mov	x9, x22
  409874:	ldrb	w10, [x23], #1
  409878:	subs	x8, x8, #0x1
  40987c:	strb	w10, [x9], #1
  409880:	b.ne	409874 <__fxstatat@plt+0x6e24>  // b.any
  409884:	sxtw	x8, w0
  409888:	mov	x22, x9
  40988c:	sub	x0, x29, #0x8
  409890:	add	x26, x8, x26
  409894:	bl	402780 <mbsinit@plt>
  409898:	cbz	w0, 409800 <__fxstatat@plt+0x6db0>
  40989c:	b	4097cc <__fxstatat@plt+0x6d7c>
  4098a0:	and	x10, x24, #0xffffffffffffffe0
  4098a4:	and	x8, x24, #0x1f
  4098a8:	add	x11, x23, #0x10
  4098ac:	add	x9, x22, x10
  4098b0:	add	x23, x23, x10
  4098b4:	add	x12, x22, #0x10
  4098b8:	mov	x13, x10
  4098bc:	ldp	q0, q1, [x11, #-16]
  4098c0:	add	x11, x11, #0x20
  4098c4:	subs	x13, x13, #0x20
  4098c8:	stp	q0, q1, [x12, #-16]
  4098cc:	add	x12, x12, #0x20
  4098d0:	b.ne	4098bc <__fxstatat@plt+0x6e6c>  // b.any
  4098d4:	cmp	x24, x10
  4098d8:	b.ne	409874 <__fxstatat@plt+0x6e24>  // b.any
  4098dc:	b	409884 <__fxstatat@plt+0x6e34>
  4098e0:	mov	x23, x27
  4098e4:	mov	w8, #0x3f                  	// #63
  4098e8:	b	4097c4 <__fxstatat@plt+0x6d74>
  4098ec:	add	x23, x23, #0x1
  4098f0:	mov	w8, #0x3f                  	// #63
  4098f4:	b	4097c4 <__fxstatat@plt+0x6d74>
  4098f8:	mov	x26, x23
  4098fc:	b	4099c8 <__fxstatat@plt+0x6f78>
  409900:	mov	w25, wzr
  409904:	mov	x21, x24
  409908:	cbnz	x19, 4096bc <__fxstatat@plt+0x6c6c>
  40990c:	b	4099c8 <__fxstatat@plt+0x6f78>
  409910:	cmp	x23, #0x1
  409914:	b.lt	409958 <__fxstatat@plt+0x6f08>  // b.tstop
  409918:	add	x22, x21, x23
  40991c:	bl	402820 <__ctype_b_loc@plt>
  409920:	add	x9, x21, #0x1
  409924:	ldr	x8, [x0]
  409928:	cmp	x22, x9
  40992c:	csinc	x9, x22, x21, hi  // hi = pmore
  409930:	sub	x10, x9, x21
  409934:	cmp	x10, #0x2
  409938:	b.cs	409960 <__fxstatat@plt+0x6f10>  // b.hs, b.nlast
  40993c:	mov	x26, xzr
  409940:	mov	x9, x21
  409944:	b	4099b0 <__fxstatat@plt+0x6f60>
  409948:	mov	x22, x21
  40994c:	ldr	x28, [sp, #8]
  409950:	sub	x23, x22, x21
  409954:	b	4099c8 <__fxstatat@plt+0x6f78>
  409958:	mov	x26, xzr
  40995c:	b	4099c8 <__fxstatat@plt+0x6f78>
  409960:	and	x13, x10, #0xfffffffffffffffe
  409964:	mov	x14, xzr
  409968:	mov	x11, xzr
  40996c:	mov	x12, xzr
  409970:	add	x9, x21, x13
  409974:	add	x15, x21, x14
  409978:	ldrb	w16, [x15]
  40997c:	ldrb	w15, [x15, #1]
  409980:	add	x14, x14, #0x2
  409984:	cmp	x13, x14
  409988:	ldrh	w16, [x8, x16, lsl #1]
  40998c:	ldrh	w15, [x8, x15, lsl #1]
  409990:	ubfx	x16, x16, #14, #1
  409994:	ubfx	x15, x15, #14, #1
  409998:	add	x11, x11, x16
  40999c:	add	x12, x12, x15
  4099a0:	b.ne	409974 <__fxstatat@plt+0x6f24>  // b.any
  4099a4:	cmp	x10, x13
  4099a8:	add	x26, x12, x11
  4099ac:	b.eq	4099c8 <__fxstatat@plt+0x6f78>  // b.none
  4099b0:	ldrb	w10, [x9], #1
  4099b4:	ldrh	w10, [x8, x10, lsl #1]
  4099b8:	cmp	x9, x22
  4099bc:	ubfx	x10, x10, #14, #1
  4099c0:	add	x26, x26, x10
  4099c4:	b.cc	4099b0 <__fxstatat@plt+0x6f60>  // b.lo, b.ul, b.last
  4099c8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4099cc:	ldrb	w8, [x8, #496]
  4099d0:	cbz	w8, 4099e8 <__fxstatat@plt+0x6f98>
  4099d4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4099d8:	ldrb	w8, [x8, #499]
  4099dc:	cmp	w8, #0x1
  4099e0:	b.ne	409a1c <__fxstatat@plt+0x6fcc>  // b.any
  4099e4:	eor	w8, w25, #0x1
  4099e8:	strb	w8, [x28]
  4099ec:	cbz	x19, 4099f4 <__fxstatat@plt+0x6fa4>
  4099f0:	str	x26, [x19]
  4099f4:	str	x21, [x20]
  4099f8:	mov	x0, x23
  4099fc:	ldp	x20, x19, [sp, #112]
  409a00:	ldp	x22, x21, [sp, #96]
  409a04:	ldp	x24, x23, [sp, #80]
  409a08:	ldp	x26, x25, [sp, #64]
  409a0c:	ldp	x28, x27, [sp, #48]
  409a10:	ldp	x29, x30, [sp, #32]
  409a14:	add	sp, sp, #0x80
  409a18:	ret
  409a1c:	mov	w8, wzr
  409a20:	strb	w8, [x28]
  409a24:	cbnz	x19, 4099f0 <__fxstatat@plt+0x6fa0>
  409a28:	b	4099f4 <__fxstatat@plt+0x6fa4>
  409a2c:	stp	x29, x30, [sp, #-32]!
  409a30:	stp	x20, x19, [sp, #16]
  409a34:	ldr	x19, [x0]
  409a38:	ldr	x20, [x1]
  409a3c:	mov	x29, sp
  409a40:	bl	4029e0 <__errno_location@plt>
  409a44:	str	wzr, [x0]
  409a48:	mov	x0, x19
  409a4c:	mov	x1, x20
  409a50:	ldp	x20, x19, [sp, #16]
  409a54:	ldp	x29, x30, [sp], #32
  409a58:	b	402990 <strcoll@plt>
  409a5c:	stp	x29, x30, [sp, #-32]!
  409a60:	stp	x20, x19, [sp, #16]
  409a64:	ldr	w9, [x0, #152]
  409a68:	mov	w8, #0x1                   	// #1
  409a6c:	mov	x29, sp
  409a70:	cmp	w9, #0x3
  409a74:	b.eq	409a90 <__fxstatat@plt+0x7040>  // b.none
  409a78:	cmp	w9, #0x9
  409a7c:	b.eq	409a90 <__fxstatat@plt+0x7040>  // b.none
  409a80:	ldr	w8, [x0, #156]
  409a84:	and	w8, w8, #0xf000
  409a88:	cmp	w8, #0x4, lsl #12
  409a8c:	cset	w8, eq  // eq = none
  409a90:	ldr	w9, [x1, #152]
  409a94:	cmp	w9, #0x9
  409a98:	b.eq	409aa4 <__fxstatat@plt+0x7054>  // b.none
  409a9c:	cmp	w9, #0x3
  409aa0:	b.ne	409ab0 <__fxstatat@plt+0x7060>  // b.any
  409aa4:	tbnz	w8, #0, 409aec <__fxstatat@plt+0x709c>
  409aa8:	mov	w8, #0x1                   	// #1
  409aac:	b	409adc <__fxstatat@plt+0x708c>
  409ab0:	ldr	w9, [x1, #156]
  409ab4:	eor	w10, w8, #0x1
  409ab8:	mov	w11, #0x1                   	// #1
  409abc:	and	w9, w9, #0xf000
  409ac0:	cmp	w9, #0x4, lsl #12
  409ac4:	cset	w9, eq  // eq = none
  409ac8:	orr	w10, w9, w10
  409acc:	cmp	w10, #0x0
  409ad0:	eor	w9, w8, w9
  409ad4:	cneg	w8, w11, eq  // eq = none
  409ad8:	tbz	w9, #0, 409aec <__fxstatat@plt+0x709c>
  409adc:	ldp	x20, x19, [sp, #16]
  409ae0:	mov	w0, w8
  409ae4:	ldp	x29, x30, [sp], #32
  409ae8:	ret
  409aec:	ldr	x19, [x0]
  409af0:	ldr	x20, [x1]
  409af4:	bl	4029e0 <__errno_location@plt>
  409af8:	str	wzr, [x0]
  409afc:	mov	x0, x19
  409b00:	mov	x1, x20
  409b04:	ldp	x20, x19, [sp, #16]
  409b08:	ldp	x29, x30, [sp], #32
  409b0c:	b	402990 <strcoll@plt>
  409b10:	stp	x29, x30, [sp, #-32]!
  409b14:	stp	x20, x19, [sp, #16]
  409b18:	ldr	x19, [x1]
  409b1c:	ldr	x20, [x0]
  409b20:	mov	x29, sp
  409b24:	bl	4029e0 <__errno_location@plt>
  409b28:	str	wzr, [x0]
  409b2c:	mov	x0, x19
  409b30:	mov	x1, x20
  409b34:	ldp	x20, x19, [sp, #16]
  409b38:	ldp	x29, x30, [sp], #32
  409b3c:	b	402990 <strcoll@plt>
  409b40:	stp	x29, x30, [sp, #-32]!
  409b44:	stp	x20, x19, [sp, #16]
  409b48:	ldr	w9, [x0, #152]
  409b4c:	mov	w8, #0x1                   	// #1
  409b50:	mov	x29, sp
  409b54:	cmp	w9, #0x3
  409b58:	b.eq	409b74 <__fxstatat@plt+0x7124>  // b.none
  409b5c:	cmp	w9, #0x9
  409b60:	b.eq	409b74 <__fxstatat@plt+0x7124>  // b.none
  409b64:	ldr	w8, [x0, #156]
  409b68:	and	w8, w8, #0xf000
  409b6c:	cmp	w8, #0x4, lsl #12
  409b70:	cset	w8, eq  // eq = none
  409b74:	ldr	w9, [x1, #152]
  409b78:	cmp	w9, #0x9
  409b7c:	b.eq	409b88 <__fxstatat@plt+0x7138>  // b.none
  409b80:	cmp	w9, #0x3
  409b84:	b.ne	409b94 <__fxstatat@plt+0x7144>  // b.any
  409b88:	tbnz	w8, #0, 409bd0 <__fxstatat@plt+0x7180>
  409b8c:	mov	w8, #0x1                   	// #1
  409b90:	b	409bc0 <__fxstatat@plt+0x7170>
  409b94:	ldr	w9, [x1, #156]
  409b98:	eor	w10, w8, #0x1
  409b9c:	mov	w11, #0x1                   	// #1
  409ba0:	and	w9, w9, #0xf000
  409ba4:	cmp	w9, #0x4, lsl #12
  409ba8:	cset	w9, eq  // eq = none
  409bac:	orr	w10, w9, w10
  409bb0:	cmp	w10, #0x0
  409bb4:	eor	w9, w8, w9
  409bb8:	cneg	w8, w11, eq  // eq = none
  409bbc:	tbz	w9, #0, 409bd0 <__fxstatat@plt+0x7180>
  409bc0:	ldp	x20, x19, [sp, #16]
  409bc4:	mov	w0, w8
  409bc8:	ldp	x29, x30, [sp], #32
  409bcc:	ret
  409bd0:	ldr	x19, [x1]
  409bd4:	ldr	x20, [x0]
  409bd8:	bl	4029e0 <__errno_location@plt>
  409bdc:	str	wzr, [x0]
  409be0:	mov	x0, x19
  409be4:	mov	x1, x20
  409be8:	ldp	x20, x19, [sp, #16]
  409bec:	ldp	x29, x30, [sp], #32
  409bf0:	b	402990 <strcoll@plt>
  409bf4:	ldr	x0, [x0]
  409bf8:	ldr	x1, [x1]
  409bfc:	b	402800 <strcmp@plt>
  409c00:	ldr	w9, [x0, #152]
  409c04:	mov	w8, #0x1                   	// #1
  409c08:	cmp	w9, #0x3
  409c0c:	b.eq	409c28 <__fxstatat@plt+0x71d8>  // b.none
  409c10:	cmp	w9, #0x9
  409c14:	b.eq	409c28 <__fxstatat@plt+0x71d8>  // b.none
  409c18:	ldr	w8, [x0, #156]
  409c1c:	and	w8, w8, #0xf000
  409c20:	cmp	w8, #0x4, lsl #12
  409c24:	cset	w8, eq  // eq = none
  409c28:	ldr	w9, [x1, #152]
  409c2c:	cmp	w9, #0x9
  409c30:	b.eq	409c3c <__fxstatat@plt+0x71ec>  // b.none
  409c34:	cmp	w9, #0x3
  409c38:	b.ne	409c48 <__fxstatat@plt+0x71f8>  // b.any
  409c3c:	tbnz	w8, #0, 409c7c <__fxstatat@plt+0x722c>
  409c40:	mov	w0, #0x1                   	// #1
  409c44:	ret
  409c48:	ldr	w9, [x1, #156]
  409c4c:	eor	w10, w8, #0x1
  409c50:	mov	w11, #0x1                   	// #1
  409c54:	and	w9, w9, #0xf000
  409c58:	cmp	w9, #0x4, lsl #12
  409c5c:	cset	w9, eq  // eq = none
  409c60:	orr	w10, w9, w10
  409c64:	cmp	w10, #0x0
  409c68:	eor	w9, w8, w9
  409c6c:	cneg	w8, w11, eq  // eq = none
  409c70:	tbz	w9, #0, 409c7c <__fxstatat@plt+0x722c>
  409c74:	mov	w0, w8
  409c78:	ret
  409c7c:	ldr	x0, [x0]
  409c80:	ldr	x1, [x1]
  409c84:	b	402800 <strcmp@plt>
  409c88:	ldr	x8, [x1]
  409c8c:	ldr	x1, [x0]
  409c90:	mov	x0, x8
  409c94:	b	402800 <strcmp@plt>
  409c98:	ldr	w9, [x0, #152]
  409c9c:	mov	w8, #0x1                   	// #1
  409ca0:	cmp	w9, #0x3
  409ca4:	b.eq	409cc0 <__fxstatat@plt+0x7270>  // b.none
  409ca8:	cmp	w9, #0x9
  409cac:	b.eq	409cc0 <__fxstatat@plt+0x7270>  // b.none
  409cb0:	ldr	w8, [x0, #156]
  409cb4:	and	w8, w8, #0xf000
  409cb8:	cmp	w8, #0x4, lsl #12
  409cbc:	cset	w8, eq  // eq = none
  409cc0:	ldr	w9, [x1, #152]
  409cc4:	cmp	w9, #0x9
  409cc8:	b.eq	409cd4 <__fxstatat@plt+0x7284>  // b.none
  409ccc:	cmp	w9, #0x3
  409cd0:	b.ne	409ce0 <__fxstatat@plt+0x7290>  // b.any
  409cd4:	tbnz	w8, #0, 409d14 <__fxstatat@plt+0x72c4>
  409cd8:	mov	w0, #0x1                   	// #1
  409cdc:	ret
  409ce0:	ldr	w9, [x1, #156]
  409ce4:	eor	w10, w8, #0x1
  409ce8:	mov	w11, #0x1                   	// #1
  409cec:	and	w9, w9, #0xf000
  409cf0:	cmp	w9, #0x4, lsl #12
  409cf4:	cset	w9, eq  // eq = none
  409cf8:	orr	w10, w9, w10
  409cfc:	cmp	w10, #0x0
  409d00:	eor	w9, w8, w9
  409d04:	cneg	w8, w11, eq  // eq = none
  409d08:	tbz	w9, #0, 409d14 <__fxstatat@plt+0x72c4>
  409d0c:	mov	w0, w8
  409d10:	ret
  409d14:	ldr	x8, [x1]
  409d18:	ldr	x1, [x0]
  409d1c:	mov	x0, x8
  409d20:	b	402800 <strcmp@plt>
  409d24:	stp	x29, x30, [sp, #-64]!
  409d28:	stp	x22, x21, [sp, #32]
  409d2c:	stp	x20, x19, [sp, #48]
  409d30:	ldr	x19, [x0]
  409d34:	mov	x20, x1
  409d38:	mov	w1, #0x2e                  	// #46
  409d3c:	str	x23, [sp, #16]
  409d40:	mov	x0, x19
  409d44:	mov	x29, sp
  409d48:	bl	402730 <strrchr@plt>
  409d4c:	ldr	x20, [x20]
  409d50:	mov	x21, x0
  409d54:	mov	w1, #0x2e                  	// #46
  409d58:	mov	x0, x20
  409d5c:	bl	402730 <strrchr@plt>
  409d60:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409d64:	add	x8, x8, #0x8d1
  409d68:	cmp	x21, #0x0
  409d6c:	csel	x22, x8, x21, eq  // eq = none
  409d70:	cmp	x0, #0x0
  409d74:	csel	x23, x8, x0, eq  // eq = none
  409d78:	bl	4029e0 <__errno_location@plt>
  409d7c:	mov	x21, x0
  409d80:	str	wzr, [x0]
  409d84:	mov	x0, x22
  409d88:	mov	x1, x23
  409d8c:	bl	402990 <strcoll@plt>
  409d90:	cbz	w0, 409da8 <__fxstatat@plt+0x7358>
  409d94:	ldp	x20, x19, [sp, #48]
  409d98:	ldp	x22, x21, [sp, #32]
  409d9c:	ldr	x23, [sp, #16]
  409da0:	ldp	x29, x30, [sp], #64
  409da4:	ret
  409da8:	str	wzr, [x21]
  409dac:	mov	x0, x19
  409db0:	mov	x1, x20
  409db4:	ldp	x20, x19, [sp, #48]
  409db8:	ldp	x22, x21, [sp, #32]
  409dbc:	ldr	x23, [sp, #16]
  409dc0:	ldp	x29, x30, [sp], #64
  409dc4:	b	402990 <strcoll@plt>
  409dc8:	stp	x29, x30, [sp, #-64]!
  409dcc:	stp	x22, x21, [sp, #32]
  409dd0:	stp	x20, x19, [sp, #48]
  409dd4:	ldr	w9, [x0, #152]
  409dd8:	mov	x19, x1
  409ddc:	mov	w8, #0x1                   	// #1
  409de0:	str	x23, [sp, #16]
  409de4:	cmp	w9, #0x3
  409de8:	mov	x29, sp
  409dec:	b.eq	409e08 <__fxstatat@plt+0x73b8>  // b.none
  409df0:	cmp	w9, #0x9
  409df4:	b.eq	409e08 <__fxstatat@plt+0x73b8>  // b.none
  409df8:	ldr	w8, [x0, #156]
  409dfc:	and	w8, w8, #0xf000
  409e00:	cmp	w8, #0x4, lsl #12
  409e04:	cset	w8, eq  // eq = none
  409e08:	ldr	w9, [x19, #152]
  409e0c:	cmp	w9, #0x9
  409e10:	b.eq	409e1c <__fxstatat@plt+0x73cc>  // b.none
  409e14:	cmp	w9, #0x3
  409e18:	b.ne	409e28 <__fxstatat@plt+0x73d8>  // b.any
  409e1c:	tbnz	w8, #0, 409e54 <__fxstatat@plt+0x7404>
  409e20:	mov	w8, #0x1                   	// #1
  409e24:	b	409eb0 <__fxstatat@plt+0x7460>
  409e28:	ldr	w9, [x19, #156]
  409e2c:	eor	w10, w8, #0x1
  409e30:	mov	w11, #0x1                   	// #1
  409e34:	and	w9, w9, #0xf000
  409e38:	cmp	w9, #0x4, lsl #12
  409e3c:	cset	w9, eq  // eq = none
  409e40:	orr	w10, w9, w10
  409e44:	cmp	w10, #0x0
  409e48:	eor	w9, w8, w9
  409e4c:	cneg	w8, w11, eq  // eq = none
  409e50:	tbnz	w9, #0, 409eb0 <__fxstatat@plt+0x7460>
  409e54:	ldr	x20, [x0]
  409e58:	mov	w1, #0x2e                  	// #46
  409e5c:	mov	x0, x20
  409e60:	bl	402730 <strrchr@plt>
  409e64:	ldr	x19, [x19]
  409e68:	mov	x21, x0
  409e6c:	mov	w1, #0x2e                  	// #46
  409e70:	mov	x0, x19
  409e74:	bl	402730 <strrchr@plt>
  409e78:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409e7c:	add	x8, x8, #0x8d1
  409e80:	cmp	x21, #0x0
  409e84:	csel	x22, x8, x21, eq  // eq = none
  409e88:	cmp	x0, #0x0
  409e8c:	csel	x23, x8, x0, eq  // eq = none
  409e90:	bl	4029e0 <__errno_location@plt>
  409e94:	mov	x21, x0
  409e98:	str	wzr, [x0]
  409e9c:	mov	x0, x22
  409ea0:	mov	x1, x23
  409ea4:	bl	402990 <strcoll@plt>
  409ea8:	mov	w8, w0
  409eac:	cbz	w0, 409ec8 <__fxstatat@plt+0x7478>
  409eb0:	ldp	x20, x19, [sp, #48]
  409eb4:	ldp	x22, x21, [sp, #32]
  409eb8:	ldr	x23, [sp, #16]
  409ebc:	mov	w0, w8
  409ec0:	ldp	x29, x30, [sp], #64
  409ec4:	ret
  409ec8:	str	wzr, [x21]
  409ecc:	mov	x0, x20
  409ed0:	mov	x1, x19
  409ed4:	ldp	x20, x19, [sp, #48]
  409ed8:	ldp	x22, x21, [sp, #32]
  409edc:	ldr	x23, [sp, #16]
  409ee0:	ldp	x29, x30, [sp], #64
  409ee4:	b	402990 <strcoll@plt>
  409ee8:	stp	x29, x30, [sp, #-64]!
  409eec:	stp	x22, x21, [sp, #32]
  409ef0:	stp	x20, x19, [sp, #48]
  409ef4:	ldr	x19, [x1]
  409ef8:	mov	x20, x0
  409efc:	mov	w1, #0x2e                  	// #46
  409f00:	str	x23, [sp, #16]
  409f04:	mov	x0, x19
  409f08:	mov	x29, sp
  409f0c:	bl	402730 <strrchr@plt>
  409f10:	ldr	x20, [x20]
  409f14:	mov	x21, x0
  409f18:	mov	w1, #0x2e                  	// #46
  409f1c:	mov	x0, x20
  409f20:	bl	402730 <strrchr@plt>
  409f24:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  409f28:	add	x8, x8, #0x8d1
  409f2c:	cmp	x21, #0x0
  409f30:	csel	x22, x8, x21, eq  // eq = none
  409f34:	cmp	x0, #0x0
  409f38:	csel	x23, x8, x0, eq  // eq = none
  409f3c:	bl	4029e0 <__errno_location@plt>
  409f40:	mov	x21, x0
  409f44:	str	wzr, [x0]
  409f48:	mov	x0, x22
  409f4c:	mov	x1, x23
  409f50:	bl	402990 <strcoll@plt>
  409f54:	cbz	w0, 409f6c <__fxstatat@plt+0x751c>
  409f58:	ldp	x20, x19, [sp, #48]
  409f5c:	ldp	x22, x21, [sp, #32]
  409f60:	ldr	x23, [sp, #16]
  409f64:	ldp	x29, x30, [sp], #64
  409f68:	ret
  409f6c:	str	wzr, [x21]
  409f70:	mov	x0, x19
  409f74:	mov	x1, x20
  409f78:	ldp	x20, x19, [sp, #48]
  409f7c:	ldp	x22, x21, [sp, #32]
  409f80:	ldr	x23, [sp, #16]
  409f84:	ldp	x29, x30, [sp], #64
  409f88:	b	402990 <strcoll@plt>
  409f8c:	stp	x29, x30, [sp, #-64]!
  409f90:	stp	x22, x21, [sp, #32]
  409f94:	stp	x20, x19, [sp, #48]
  409f98:	ldr	w9, [x0, #152]
  409f9c:	mov	x19, x0
  409fa0:	mov	w8, #0x1                   	// #1
  409fa4:	str	x23, [sp, #16]
  409fa8:	cmp	w9, #0x3
  409fac:	mov	x29, sp
  409fb0:	b.eq	409fcc <__fxstatat@plt+0x757c>  // b.none
  409fb4:	cmp	w9, #0x9
  409fb8:	b.eq	409fcc <__fxstatat@plt+0x757c>  // b.none
  409fbc:	ldr	w8, [x19, #156]
  409fc0:	and	w8, w8, #0xf000
  409fc4:	cmp	w8, #0x4, lsl #12
  409fc8:	cset	w8, eq  // eq = none
  409fcc:	ldr	w9, [x1, #152]
  409fd0:	cmp	w9, #0x9
  409fd4:	b.eq	409fe0 <__fxstatat@plt+0x7590>  // b.none
  409fd8:	cmp	w9, #0x3
  409fdc:	b.ne	409fec <__fxstatat@plt+0x759c>  // b.any
  409fe0:	tbnz	w8, #0, 40a018 <__fxstatat@plt+0x75c8>
  409fe4:	mov	w0, #0x1                   	// #1
  409fe8:	b	40a070 <__fxstatat@plt+0x7620>
  409fec:	ldr	w9, [x1, #156]
  409ff0:	eor	w10, w8, #0x1
  409ff4:	mov	w11, #0x1                   	// #1
  409ff8:	and	w9, w9, #0xf000
  409ffc:	cmp	w9, #0x4, lsl #12
  40a000:	cset	w9, eq  // eq = none
  40a004:	orr	w10, w9, w10
  40a008:	cmp	w10, #0x0
  40a00c:	eor	w8, w8, w9
  40a010:	cneg	w0, w11, eq  // eq = none
  40a014:	tbnz	w8, #0, 40a070 <__fxstatat@plt+0x7620>
  40a018:	ldr	x20, [x1]
  40a01c:	mov	w1, #0x2e                  	// #46
  40a020:	mov	x0, x20
  40a024:	bl	402730 <strrchr@plt>
  40a028:	ldr	x19, [x19]
  40a02c:	mov	x21, x0
  40a030:	mov	w1, #0x2e                  	// #46
  40a034:	mov	x0, x19
  40a038:	bl	402730 <strrchr@plt>
  40a03c:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40a040:	add	x8, x8, #0x8d1
  40a044:	cmp	x21, #0x0
  40a048:	csel	x22, x8, x21, eq  // eq = none
  40a04c:	cmp	x0, #0x0
  40a050:	csel	x23, x8, x0, eq  // eq = none
  40a054:	bl	4029e0 <__errno_location@plt>
  40a058:	mov	x21, x0
  40a05c:	str	wzr, [x0]
  40a060:	mov	x0, x22
  40a064:	mov	x1, x23
  40a068:	bl	402990 <strcoll@plt>
  40a06c:	cbz	w0, 40a084 <__fxstatat@plt+0x7634>
  40a070:	ldp	x20, x19, [sp, #48]
  40a074:	ldp	x22, x21, [sp, #32]
  40a078:	ldr	x23, [sp, #16]
  40a07c:	ldp	x29, x30, [sp], #64
  40a080:	ret
  40a084:	str	wzr, [x21]
  40a088:	mov	x0, x20
  40a08c:	mov	x1, x19
  40a090:	ldp	x20, x19, [sp, #48]
  40a094:	ldp	x22, x21, [sp, #32]
  40a098:	ldr	x23, [sp, #16]
  40a09c:	ldp	x29, x30, [sp], #64
  40a0a0:	b	402990 <strcoll@plt>
  40a0a4:	stp	x29, x30, [sp, #-48]!
  40a0a8:	stp	x20, x19, [sp, #32]
  40a0ac:	ldr	x19, [x0]
  40a0b0:	mov	x20, x1
  40a0b4:	mov	w1, #0x2e                  	// #46
  40a0b8:	str	x21, [sp, #16]
  40a0bc:	mov	x0, x19
  40a0c0:	mov	x29, sp
  40a0c4:	bl	402730 <strrchr@plt>
  40a0c8:	ldr	x20, [x20]
  40a0cc:	mov	x21, x0
  40a0d0:	mov	w1, #0x2e                  	// #46
  40a0d4:	mov	x0, x20
  40a0d8:	bl	402730 <strrchr@plt>
  40a0dc:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40a0e0:	add	x9, x9, #0x8d1
  40a0e4:	cmp	x21, #0x0
  40a0e8:	csel	x8, x9, x21, eq  // eq = none
  40a0ec:	cmp	x0, #0x0
  40a0f0:	csel	x1, x9, x0, eq  // eq = none
  40a0f4:	mov	x0, x8
  40a0f8:	bl	402800 <strcmp@plt>
  40a0fc:	cbz	w0, 40a110 <__fxstatat@plt+0x76c0>
  40a100:	ldp	x20, x19, [sp, #32]
  40a104:	ldr	x21, [sp, #16]
  40a108:	ldp	x29, x30, [sp], #48
  40a10c:	ret
  40a110:	mov	x0, x19
  40a114:	mov	x1, x20
  40a118:	ldp	x20, x19, [sp, #32]
  40a11c:	ldr	x21, [sp, #16]
  40a120:	ldp	x29, x30, [sp], #48
  40a124:	b	402800 <strcmp@plt>
  40a128:	stp	x29, x30, [sp, #-48]!
  40a12c:	stp	x20, x19, [sp, #32]
  40a130:	ldr	w9, [x0, #152]
  40a134:	mov	x19, x1
  40a138:	mov	w8, #0x1                   	// #1
  40a13c:	str	x21, [sp, #16]
  40a140:	cmp	w9, #0x3
  40a144:	mov	x29, sp
  40a148:	b.eq	40a164 <__fxstatat@plt+0x7714>  // b.none
  40a14c:	cmp	w9, #0x9
  40a150:	b.eq	40a164 <__fxstatat@plt+0x7714>  // b.none
  40a154:	ldr	w8, [x0, #156]
  40a158:	and	w8, w8, #0xf000
  40a15c:	cmp	w8, #0x4, lsl #12
  40a160:	cset	w8, eq  // eq = none
  40a164:	ldr	w9, [x19, #152]
  40a168:	cmp	w9, #0x9
  40a16c:	b.eq	40a178 <__fxstatat@plt+0x7728>  // b.none
  40a170:	cmp	w9, #0x3
  40a174:	b.ne	40a184 <__fxstatat@plt+0x7734>  // b.any
  40a178:	tbnz	w8, #0, 40a1b0 <__fxstatat@plt+0x7760>
  40a17c:	mov	w8, #0x1                   	// #1
  40a180:	b	40a1fc <__fxstatat@plt+0x77ac>
  40a184:	ldr	w9, [x19, #156]
  40a188:	eor	w10, w8, #0x1
  40a18c:	mov	w11, #0x1                   	// #1
  40a190:	and	w9, w9, #0xf000
  40a194:	cmp	w9, #0x4, lsl #12
  40a198:	cset	w9, eq  // eq = none
  40a19c:	orr	w10, w9, w10
  40a1a0:	cmp	w10, #0x0
  40a1a4:	eor	w9, w8, w9
  40a1a8:	cneg	w8, w11, eq  // eq = none
  40a1ac:	tbnz	w9, #0, 40a1fc <__fxstatat@plt+0x77ac>
  40a1b0:	ldr	x20, [x0]
  40a1b4:	mov	w1, #0x2e                  	// #46
  40a1b8:	mov	x0, x20
  40a1bc:	bl	402730 <strrchr@plt>
  40a1c0:	ldr	x19, [x19]
  40a1c4:	mov	x21, x0
  40a1c8:	mov	w1, #0x2e                  	// #46
  40a1cc:	mov	x0, x19
  40a1d0:	bl	402730 <strrchr@plt>
  40a1d4:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40a1d8:	add	x9, x9, #0x8d1
  40a1dc:	cmp	x21, #0x0
  40a1e0:	csel	x8, x9, x21, eq  // eq = none
  40a1e4:	cmp	x0, #0x0
  40a1e8:	csel	x1, x9, x0, eq  // eq = none
  40a1ec:	mov	x0, x8
  40a1f0:	bl	402800 <strcmp@plt>
  40a1f4:	mov	w8, w0
  40a1f8:	cbz	w0, 40a210 <__fxstatat@plt+0x77c0>
  40a1fc:	ldp	x20, x19, [sp, #32]
  40a200:	ldr	x21, [sp, #16]
  40a204:	mov	w0, w8
  40a208:	ldp	x29, x30, [sp], #48
  40a20c:	ret
  40a210:	mov	x0, x20
  40a214:	mov	x1, x19
  40a218:	ldp	x20, x19, [sp, #32]
  40a21c:	ldr	x21, [sp, #16]
  40a220:	ldp	x29, x30, [sp], #48
  40a224:	b	402800 <strcmp@plt>
  40a228:	stp	x29, x30, [sp, #-48]!
  40a22c:	stp	x20, x19, [sp, #32]
  40a230:	ldr	x19, [x1]
  40a234:	mov	x20, x0
  40a238:	mov	w1, #0x2e                  	// #46
  40a23c:	str	x21, [sp, #16]
  40a240:	mov	x0, x19
  40a244:	mov	x29, sp
  40a248:	bl	402730 <strrchr@plt>
  40a24c:	ldr	x20, [x20]
  40a250:	mov	x21, x0
  40a254:	mov	w1, #0x2e                  	// #46
  40a258:	mov	x0, x20
  40a25c:	bl	402730 <strrchr@plt>
  40a260:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40a264:	add	x9, x9, #0x8d1
  40a268:	cmp	x21, #0x0
  40a26c:	csel	x8, x9, x21, eq  // eq = none
  40a270:	cmp	x0, #0x0
  40a274:	csel	x1, x9, x0, eq  // eq = none
  40a278:	mov	x0, x8
  40a27c:	bl	402800 <strcmp@plt>
  40a280:	cbz	w0, 40a294 <__fxstatat@plt+0x7844>
  40a284:	ldp	x20, x19, [sp, #32]
  40a288:	ldr	x21, [sp, #16]
  40a28c:	ldp	x29, x30, [sp], #48
  40a290:	ret
  40a294:	mov	x0, x19
  40a298:	mov	x1, x20
  40a29c:	ldp	x20, x19, [sp, #32]
  40a2a0:	ldr	x21, [sp, #16]
  40a2a4:	ldp	x29, x30, [sp], #48
  40a2a8:	b	402800 <strcmp@plt>
  40a2ac:	stp	x29, x30, [sp, #-48]!
  40a2b0:	stp	x20, x19, [sp, #32]
  40a2b4:	ldr	w9, [x0, #152]
  40a2b8:	mov	x19, x0
  40a2bc:	mov	w8, #0x1                   	// #1
  40a2c0:	str	x21, [sp, #16]
  40a2c4:	cmp	w9, #0x3
  40a2c8:	mov	x29, sp
  40a2cc:	b.eq	40a2e8 <__fxstatat@plt+0x7898>  // b.none
  40a2d0:	cmp	w9, #0x9
  40a2d4:	b.eq	40a2e8 <__fxstatat@plt+0x7898>  // b.none
  40a2d8:	ldr	w8, [x19, #156]
  40a2dc:	and	w8, w8, #0xf000
  40a2e0:	cmp	w8, #0x4, lsl #12
  40a2e4:	cset	w8, eq  // eq = none
  40a2e8:	ldr	w9, [x1, #152]
  40a2ec:	cmp	w9, #0x9
  40a2f0:	b.eq	40a2fc <__fxstatat@plt+0x78ac>  // b.none
  40a2f4:	cmp	w9, #0x3
  40a2f8:	b.ne	40a308 <__fxstatat@plt+0x78b8>  // b.any
  40a2fc:	tbnz	w8, #0, 40a334 <__fxstatat@plt+0x78e4>
  40a300:	mov	w0, #0x1                   	// #1
  40a304:	b	40a37c <__fxstatat@plt+0x792c>
  40a308:	ldr	w9, [x1, #156]
  40a30c:	eor	w10, w8, #0x1
  40a310:	mov	w11, #0x1                   	// #1
  40a314:	and	w9, w9, #0xf000
  40a318:	cmp	w9, #0x4, lsl #12
  40a31c:	cset	w9, eq  // eq = none
  40a320:	orr	w10, w9, w10
  40a324:	cmp	w10, #0x0
  40a328:	eor	w8, w8, w9
  40a32c:	cneg	w0, w11, eq  // eq = none
  40a330:	tbnz	w8, #0, 40a37c <__fxstatat@plt+0x792c>
  40a334:	ldr	x20, [x1]
  40a338:	mov	w1, #0x2e                  	// #46
  40a33c:	mov	x0, x20
  40a340:	bl	402730 <strrchr@plt>
  40a344:	ldr	x19, [x19]
  40a348:	mov	x21, x0
  40a34c:	mov	w1, #0x2e                  	// #46
  40a350:	mov	x0, x19
  40a354:	bl	402730 <strrchr@plt>
  40a358:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40a35c:	add	x9, x9, #0x8d1
  40a360:	cmp	x21, #0x0
  40a364:	csel	x8, x9, x21, eq  // eq = none
  40a368:	cmp	x0, #0x0
  40a36c:	csel	x1, x9, x0, eq  // eq = none
  40a370:	mov	x0, x8
  40a374:	bl	402800 <strcmp@plt>
  40a378:	cbz	w0, 40a38c <__fxstatat@plt+0x793c>
  40a37c:	ldp	x20, x19, [sp, #32]
  40a380:	ldr	x21, [sp, #16]
  40a384:	ldp	x29, x30, [sp], #48
  40a388:	ret
  40a38c:	mov	x0, x20
  40a390:	mov	x1, x19
  40a394:	ldp	x20, x19, [sp, #32]
  40a398:	ldr	x21, [sp, #16]
  40a39c:	ldp	x29, x30, [sp], #48
  40a3a0:	b	402800 <strcmp@plt>
  40a3a4:	stp	x29, x30, [sp, #-32]!
  40a3a8:	stp	x20, x19, [sp, #16]
  40a3ac:	ldr	x8, [x1, #72]
  40a3b0:	ldr	x9, [x0, #72]
  40a3b4:	mov	x29, sp
  40a3b8:	cmp	x8, x9
  40a3bc:	cset	w8, gt
  40a3c0:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a3c4:	cbz	w8, 40a3d8 <__fxstatat@plt+0x7988>
  40a3c8:	ldp	x20, x19, [sp, #16]
  40a3cc:	mov	w0, w8
  40a3d0:	ldp	x29, x30, [sp], #32
  40a3d4:	ret
  40a3d8:	ldr	x19, [x0]
  40a3dc:	ldr	x20, [x1]
  40a3e0:	bl	4029e0 <__errno_location@plt>
  40a3e4:	str	wzr, [x0]
  40a3e8:	mov	x0, x19
  40a3ec:	mov	x1, x20
  40a3f0:	ldp	x20, x19, [sp, #16]
  40a3f4:	ldp	x29, x30, [sp], #32
  40a3f8:	b	402990 <strcoll@plt>
  40a3fc:	stp	x29, x30, [sp, #-32]!
  40a400:	stp	x20, x19, [sp, #16]
  40a404:	ldr	w9, [x0, #152]
  40a408:	mov	w8, #0x1                   	// #1
  40a40c:	mov	x29, sp
  40a410:	cmp	w9, #0x3
  40a414:	b.eq	40a430 <__fxstatat@plt+0x79e0>  // b.none
  40a418:	cmp	w9, #0x9
  40a41c:	b.eq	40a430 <__fxstatat@plt+0x79e0>  // b.none
  40a420:	ldr	w8, [x0, #156]
  40a424:	and	w8, w8, #0xf000
  40a428:	cmp	w8, #0x4, lsl #12
  40a42c:	cset	w8, eq  // eq = none
  40a430:	ldr	w9, [x1, #152]
  40a434:	cmp	w9, #0x9
  40a438:	b.eq	40a444 <__fxstatat@plt+0x79f4>  // b.none
  40a43c:	cmp	w9, #0x3
  40a440:	b.ne	40a450 <__fxstatat@plt+0x7a00>  // b.any
  40a444:	tbnz	w8, #0, 40a47c <__fxstatat@plt+0x7a2c>
  40a448:	mov	w8, #0x1                   	// #1
  40a44c:	b	40a494 <__fxstatat@plt+0x7a44>
  40a450:	ldr	w9, [x1, #156]
  40a454:	eor	w10, w8, #0x1
  40a458:	mov	w11, #0x1                   	// #1
  40a45c:	and	w9, w9, #0xf000
  40a460:	cmp	w9, #0x4, lsl #12
  40a464:	cset	w9, eq  // eq = none
  40a468:	orr	w10, w9, w10
  40a46c:	cmp	w10, #0x0
  40a470:	eor	w9, w8, w9
  40a474:	cneg	w8, w11, eq  // eq = none
  40a478:	tbnz	w9, #0, 40a494 <__fxstatat@plt+0x7a44>
  40a47c:	ldr	x8, [x1, #72]
  40a480:	ldr	x9, [x0, #72]
  40a484:	cmp	x8, x9
  40a488:	cset	w8, gt
  40a48c:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a490:	cbz	w8, 40a4a4 <__fxstatat@plt+0x7a54>
  40a494:	ldp	x20, x19, [sp, #16]
  40a498:	mov	w0, w8
  40a49c:	ldp	x29, x30, [sp], #32
  40a4a0:	ret
  40a4a4:	ldr	x19, [x0]
  40a4a8:	ldr	x20, [x1]
  40a4ac:	bl	4029e0 <__errno_location@plt>
  40a4b0:	str	wzr, [x0]
  40a4b4:	mov	x0, x19
  40a4b8:	mov	x1, x20
  40a4bc:	ldp	x20, x19, [sp, #16]
  40a4c0:	ldp	x29, x30, [sp], #32
  40a4c4:	b	402990 <strcoll@plt>
  40a4c8:	stp	x29, x30, [sp, #-32]!
  40a4cc:	stp	x20, x19, [sp, #16]
  40a4d0:	ldr	x8, [x0, #72]
  40a4d4:	ldr	x9, [x1, #72]
  40a4d8:	mov	x29, sp
  40a4dc:	cmp	x8, x9
  40a4e0:	cset	w8, gt
  40a4e4:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a4e8:	cbz	w8, 40a4fc <__fxstatat@plt+0x7aac>
  40a4ec:	ldp	x20, x19, [sp, #16]
  40a4f0:	mov	w0, w8
  40a4f4:	ldp	x29, x30, [sp], #32
  40a4f8:	ret
  40a4fc:	ldr	x19, [x1]
  40a500:	ldr	x20, [x0]
  40a504:	bl	4029e0 <__errno_location@plt>
  40a508:	str	wzr, [x0]
  40a50c:	mov	x0, x19
  40a510:	mov	x1, x20
  40a514:	ldp	x20, x19, [sp, #16]
  40a518:	ldp	x29, x30, [sp], #32
  40a51c:	b	402990 <strcoll@plt>
  40a520:	stp	x29, x30, [sp, #-32]!
  40a524:	stp	x20, x19, [sp, #16]
  40a528:	ldr	w9, [x0, #152]
  40a52c:	mov	w8, #0x1                   	// #1
  40a530:	mov	x29, sp
  40a534:	cmp	w9, #0x3
  40a538:	b.eq	40a554 <__fxstatat@plt+0x7b04>  // b.none
  40a53c:	cmp	w9, #0x9
  40a540:	b.eq	40a554 <__fxstatat@plt+0x7b04>  // b.none
  40a544:	ldr	w8, [x0, #156]
  40a548:	and	w8, w8, #0xf000
  40a54c:	cmp	w8, #0x4, lsl #12
  40a550:	cset	w8, eq  // eq = none
  40a554:	ldr	w9, [x1, #152]
  40a558:	cmp	w9, #0x9
  40a55c:	b.eq	40a568 <__fxstatat@plt+0x7b18>  // b.none
  40a560:	cmp	w9, #0x3
  40a564:	b.ne	40a574 <__fxstatat@plt+0x7b24>  // b.any
  40a568:	tbnz	w8, #0, 40a5a0 <__fxstatat@plt+0x7b50>
  40a56c:	mov	w8, #0x1                   	// #1
  40a570:	b	40a5b8 <__fxstatat@plt+0x7b68>
  40a574:	ldr	w9, [x1, #156]
  40a578:	eor	w10, w8, #0x1
  40a57c:	mov	w11, #0x1                   	// #1
  40a580:	and	w9, w9, #0xf000
  40a584:	cmp	w9, #0x4, lsl #12
  40a588:	cset	w9, eq  // eq = none
  40a58c:	orr	w10, w9, w10
  40a590:	cmp	w10, #0x0
  40a594:	eor	w9, w8, w9
  40a598:	cneg	w8, w11, eq  // eq = none
  40a59c:	tbnz	w9, #0, 40a5b8 <__fxstatat@plt+0x7b68>
  40a5a0:	ldr	x8, [x0, #72]
  40a5a4:	ldr	x9, [x1, #72]
  40a5a8:	cmp	x8, x9
  40a5ac:	cset	w8, gt
  40a5b0:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a5b4:	cbz	w8, 40a5c8 <__fxstatat@plt+0x7b78>
  40a5b8:	ldp	x20, x19, [sp, #16]
  40a5bc:	mov	w0, w8
  40a5c0:	ldp	x29, x30, [sp], #32
  40a5c4:	ret
  40a5c8:	ldr	x19, [x1]
  40a5cc:	ldr	x20, [x0]
  40a5d0:	bl	4029e0 <__errno_location@plt>
  40a5d4:	str	wzr, [x0]
  40a5d8:	mov	x0, x19
  40a5dc:	mov	x1, x20
  40a5e0:	ldp	x20, x19, [sp, #16]
  40a5e4:	ldp	x29, x30, [sp], #32
  40a5e8:	b	402990 <strcoll@plt>
  40a5ec:	ldr	x8, [x1, #72]
  40a5f0:	ldr	x9, [x0, #72]
  40a5f4:	cmp	x8, x9
  40a5f8:	cset	w8, gt
  40a5fc:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a600:	cbz	w8, 40a60c <__fxstatat@plt+0x7bbc>
  40a604:	mov	w0, w8
  40a608:	ret
  40a60c:	ldr	x0, [x0]
  40a610:	ldr	x1, [x1]
  40a614:	b	402800 <strcmp@plt>
  40a618:	ldr	w9, [x0, #152]
  40a61c:	mov	w8, #0x1                   	// #1
  40a620:	cmp	w9, #0x3
  40a624:	b.eq	40a640 <__fxstatat@plt+0x7bf0>  // b.none
  40a628:	cmp	w9, #0x9
  40a62c:	b.eq	40a640 <__fxstatat@plt+0x7bf0>  // b.none
  40a630:	ldr	w8, [x0, #156]
  40a634:	and	w8, w8, #0xf000
  40a638:	cmp	w8, #0x4, lsl #12
  40a63c:	cset	w8, eq  // eq = none
  40a640:	ldr	w9, [x1, #152]
  40a644:	cmp	w9, #0x9
  40a648:	b.eq	40a654 <__fxstatat@plt+0x7c04>  // b.none
  40a64c:	cmp	w9, #0x3
  40a650:	b.ne	40a660 <__fxstatat@plt+0x7c10>  // b.any
  40a654:	tbnz	w8, #0, 40a68c <__fxstatat@plt+0x7c3c>
  40a658:	mov	w0, #0x1                   	// #1
  40a65c:	ret
  40a660:	ldr	w9, [x1, #156]
  40a664:	eor	w10, w8, #0x1
  40a668:	mov	w11, #0x1                   	// #1
  40a66c:	and	w9, w9, #0xf000
  40a670:	cmp	w9, #0x4, lsl #12
  40a674:	cset	w9, eq  // eq = none
  40a678:	orr	w10, w9, w10
  40a67c:	cmp	w10, #0x0
  40a680:	eor	w9, w8, w9
  40a684:	cneg	w8, w11, eq  // eq = none
  40a688:	tbnz	w9, #0, 40a6a4 <__fxstatat@plt+0x7c54>
  40a68c:	ldr	x8, [x1, #72]
  40a690:	ldr	x9, [x0, #72]
  40a694:	cmp	x8, x9
  40a698:	cset	w8, gt
  40a69c:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a6a0:	cbz	w8, 40a6ac <__fxstatat@plt+0x7c5c>
  40a6a4:	mov	w0, w8
  40a6a8:	ret
  40a6ac:	ldr	x0, [x0]
  40a6b0:	ldr	x1, [x1]
  40a6b4:	b	402800 <strcmp@plt>
  40a6b8:	ldr	x8, [x0, #72]
  40a6bc:	ldr	x9, [x1, #72]
  40a6c0:	cmp	x8, x9
  40a6c4:	cset	w8, gt
  40a6c8:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a6cc:	cbz	w8, 40a6d8 <__fxstatat@plt+0x7c88>
  40a6d0:	mov	w0, w8
  40a6d4:	ret
  40a6d8:	ldr	x8, [x1]
  40a6dc:	ldr	x1, [x0]
  40a6e0:	mov	x0, x8
  40a6e4:	b	402800 <strcmp@plt>
  40a6e8:	ldr	w9, [x0, #152]
  40a6ec:	mov	w8, #0x1                   	// #1
  40a6f0:	cmp	w9, #0x3
  40a6f4:	b.eq	40a710 <__fxstatat@plt+0x7cc0>  // b.none
  40a6f8:	cmp	w9, #0x9
  40a6fc:	b.eq	40a710 <__fxstatat@plt+0x7cc0>  // b.none
  40a700:	ldr	w8, [x0, #156]
  40a704:	and	w8, w8, #0xf000
  40a708:	cmp	w8, #0x4, lsl #12
  40a70c:	cset	w8, eq  // eq = none
  40a710:	ldr	w9, [x1, #152]
  40a714:	cmp	w9, #0x9
  40a718:	b.eq	40a724 <__fxstatat@plt+0x7cd4>  // b.none
  40a71c:	cmp	w9, #0x3
  40a720:	b.ne	40a730 <__fxstatat@plt+0x7ce0>  // b.any
  40a724:	tbnz	w8, #0, 40a75c <__fxstatat@plt+0x7d0c>
  40a728:	mov	w0, #0x1                   	// #1
  40a72c:	ret
  40a730:	ldr	w9, [x1, #156]
  40a734:	eor	w10, w8, #0x1
  40a738:	mov	w11, #0x1                   	// #1
  40a73c:	and	w9, w9, #0xf000
  40a740:	cmp	w9, #0x4, lsl #12
  40a744:	cset	w9, eq  // eq = none
  40a748:	orr	w10, w9, w10
  40a74c:	cmp	w10, #0x0
  40a750:	eor	w9, w8, w9
  40a754:	cneg	w8, w11, eq  // eq = none
  40a758:	tbnz	w9, #0, 40a774 <__fxstatat@plt+0x7d24>
  40a75c:	ldr	x8, [x0, #72]
  40a760:	ldr	x9, [x1, #72]
  40a764:	cmp	x8, x9
  40a768:	cset	w8, gt
  40a76c:	csinv	w8, w8, wzr, ge  // ge = tcont
  40a770:	cbz	w8, 40a77c <__fxstatat@plt+0x7d2c>
  40a774:	mov	w0, w8
  40a778:	ret
  40a77c:	ldr	x8, [x1]
  40a780:	ldr	x1, [x0]
  40a784:	mov	x0, x8
  40a788:	b	402800 <strcmp@plt>
  40a78c:	ldr	x0, [x0]
  40a790:	ldr	x1, [x1]
  40a794:	b	40db60 <__fxstatat@plt+0xb110>
  40a798:	ldr	w9, [x0, #152]
  40a79c:	mov	w8, #0x1                   	// #1
  40a7a0:	cmp	w9, #0x3
  40a7a4:	b.eq	40a7c0 <__fxstatat@plt+0x7d70>  // b.none
  40a7a8:	cmp	w9, #0x9
  40a7ac:	b.eq	40a7c0 <__fxstatat@plt+0x7d70>  // b.none
  40a7b0:	ldr	w8, [x0, #156]
  40a7b4:	and	w8, w8, #0xf000
  40a7b8:	cmp	w8, #0x4, lsl #12
  40a7bc:	cset	w8, eq  // eq = none
  40a7c0:	ldr	w9, [x1, #152]
  40a7c4:	cmp	w9, #0x9
  40a7c8:	b.eq	40a7d4 <__fxstatat@plt+0x7d84>  // b.none
  40a7cc:	cmp	w9, #0x3
  40a7d0:	b.ne	40a7e0 <__fxstatat@plt+0x7d90>  // b.any
  40a7d4:	tbnz	w8, #0, 40a814 <__fxstatat@plt+0x7dc4>
  40a7d8:	mov	w0, #0x1                   	// #1
  40a7dc:	ret
  40a7e0:	ldr	w9, [x1, #156]
  40a7e4:	eor	w10, w8, #0x1
  40a7e8:	mov	w11, #0x1                   	// #1
  40a7ec:	and	w9, w9, #0xf000
  40a7f0:	cmp	w9, #0x4, lsl #12
  40a7f4:	cset	w9, eq  // eq = none
  40a7f8:	orr	w10, w9, w10
  40a7fc:	cmp	w10, #0x0
  40a800:	eor	w9, w8, w9
  40a804:	cneg	w8, w11, eq  // eq = none
  40a808:	tbz	w9, #0, 40a814 <__fxstatat@plt+0x7dc4>
  40a80c:	mov	w0, w8
  40a810:	ret
  40a814:	ldr	x0, [x0]
  40a818:	ldr	x1, [x1]
  40a81c:	b	40db60 <__fxstatat@plt+0xb110>
  40a820:	ldr	x8, [x1]
  40a824:	ldr	x1, [x0]
  40a828:	mov	x0, x8
  40a82c:	b	40db60 <__fxstatat@plt+0xb110>
  40a830:	ldr	w9, [x0, #152]
  40a834:	mov	w8, #0x1                   	// #1
  40a838:	cmp	w9, #0x3
  40a83c:	b.eq	40a858 <__fxstatat@plt+0x7e08>  // b.none
  40a840:	cmp	w9, #0x9
  40a844:	b.eq	40a858 <__fxstatat@plt+0x7e08>  // b.none
  40a848:	ldr	w8, [x0, #156]
  40a84c:	and	w8, w8, #0xf000
  40a850:	cmp	w8, #0x4, lsl #12
  40a854:	cset	w8, eq  // eq = none
  40a858:	ldr	w9, [x1, #152]
  40a85c:	cmp	w9, #0x9
  40a860:	b.eq	40a86c <__fxstatat@plt+0x7e1c>  // b.none
  40a864:	cmp	w9, #0x3
  40a868:	b.ne	40a878 <__fxstatat@plt+0x7e28>  // b.any
  40a86c:	tbnz	w8, #0, 40a8ac <__fxstatat@plt+0x7e5c>
  40a870:	mov	w0, #0x1                   	// #1
  40a874:	ret
  40a878:	ldr	w9, [x1, #156]
  40a87c:	eor	w10, w8, #0x1
  40a880:	mov	w11, #0x1                   	// #1
  40a884:	and	w9, w9, #0xf000
  40a888:	cmp	w9, #0x4, lsl #12
  40a88c:	cset	w9, eq  // eq = none
  40a890:	orr	w10, w9, w10
  40a894:	cmp	w10, #0x0
  40a898:	eor	w9, w8, w9
  40a89c:	cneg	w8, w11, eq  // eq = none
  40a8a0:	tbz	w9, #0, 40a8ac <__fxstatat@plt+0x7e5c>
  40a8a4:	mov	w0, w8
  40a8a8:	ret
  40a8ac:	ldr	x8, [x1]
  40a8b0:	ldr	x1, [x0]
  40a8b4:	mov	x0, x8
  40a8b8:	b	40db60 <__fxstatat@plt+0xb110>
  40a8bc:	stp	x29, x30, [sp, #-32]!
  40a8c0:	stp	x20, x19, [sp, #16]
  40a8c4:	ldr	x8, [x1, #112]
  40a8c8:	ldr	x9, [x0, #112]
  40a8cc:	mov	x29, sp
  40a8d0:	cmp	x8, x9
  40a8d4:	b.ge	40a8ec <__fxstatat@plt+0x7e9c>  // b.tcont
  40a8d8:	mov	w8, #0xffffffff            	// #-1
  40a8dc:	ldp	x20, x19, [sp, #16]
  40a8e0:	mov	w0, w8
  40a8e4:	ldp	x29, x30, [sp], #32
  40a8e8:	ret
  40a8ec:	b.le	40a904 <__fxstatat@plt+0x7eb4>
  40a8f0:	mov	w8, #0x1                   	// #1
  40a8f4:	ldp	x20, x19, [sp, #16]
  40a8f8:	mov	w0, w8
  40a8fc:	ldp	x29, x30, [sp], #32
  40a900:	ret
  40a904:	ldr	x8, [x1, #120]
  40a908:	ldr	x9, [x0, #120]
  40a90c:	subs	w8, w8, w9
  40a910:	b.ne	40a8dc <__fxstatat@plt+0x7e8c>  // b.any
  40a914:	ldr	x19, [x0]
  40a918:	ldr	x20, [x1]
  40a91c:	bl	4029e0 <__errno_location@plt>
  40a920:	str	wzr, [x0]
  40a924:	mov	x0, x19
  40a928:	mov	x1, x20
  40a92c:	ldp	x20, x19, [sp, #16]
  40a930:	ldp	x29, x30, [sp], #32
  40a934:	b	402990 <strcoll@plt>
  40a938:	stp	x29, x30, [sp, #-32]!
  40a93c:	stp	x20, x19, [sp, #16]
  40a940:	ldr	w9, [x0, #152]
  40a944:	mov	w8, #0x1                   	// #1
  40a948:	mov	x29, sp
  40a94c:	cmp	w9, #0x3
  40a950:	b.eq	40a96c <__fxstatat@plt+0x7f1c>  // b.none
  40a954:	cmp	w9, #0x9
  40a958:	b.eq	40a96c <__fxstatat@plt+0x7f1c>  // b.none
  40a95c:	ldr	w8, [x0, #156]
  40a960:	and	w8, w8, #0xf000
  40a964:	cmp	w8, #0x4, lsl #12
  40a968:	cset	w8, eq  // eq = none
  40a96c:	ldr	w9, [x1, #152]
  40a970:	cmp	w9, #0x9
  40a974:	b.eq	40a980 <__fxstatat@plt+0x7f30>  // b.none
  40a978:	cmp	w9, #0x3
  40a97c:	b.ne	40a998 <__fxstatat@plt+0x7f48>  // b.any
  40a980:	tbnz	w8, #0, 40a9c4 <__fxstatat@plt+0x7f74>
  40a984:	mov	w8, #0x1                   	// #1
  40a988:	ldp	x20, x19, [sp, #16]
  40a98c:	mov	w0, w8
  40a990:	ldp	x29, x30, [sp], #32
  40a994:	ret
  40a998:	ldr	w9, [x1, #156]
  40a99c:	eor	w10, w8, #0x1
  40a9a0:	mov	w11, #0x1                   	// #1
  40a9a4:	and	w9, w9, #0xf000
  40a9a8:	cmp	w9, #0x4, lsl #12
  40a9ac:	cset	w9, eq  // eq = none
  40a9b0:	orr	w10, w9, w10
  40a9b4:	cmp	w10, #0x0
  40a9b8:	eor	w9, w8, w9
  40a9bc:	cneg	w8, w11, eq  // eq = none
  40a9c0:	tbnz	w9, #0, 40a988 <__fxstatat@plt+0x7f38>
  40a9c4:	ldr	x8, [x1, #112]
  40a9c8:	ldr	x9, [x0, #112]
  40a9cc:	cmp	x8, x9
  40a9d0:	b.ge	40a9e8 <__fxstatat@plt+0x7f98>  // b.tcont
  40a9d4:	mov	w8, #0xffffffff            	// #-1
  40a9d8:	ldp	x20, x19, [sp, #16]
  40a9dc:	mov	w0, w8
  40a9e0:	ldp	x29, x30, [sp], #32
  40a9e4:	ret
  40a9e8:	b.le	40aa00 <__fxstatat@plt+0x7fb0>
  40a9ec:	mov	w8, #0x1                   	// #1
  40a9f0:	ldp	x20, x19, [sp, #16]
  40a9f4:	mov	w0, w8
  40a9f8:	ldp	x29, x30, [sp], #32
  40a9fc:	ret
  40aa00:	ldr	x8, [x1, #120]
  40aa04:	ldr	x9, [x0, #120]
  40aa08:	subs	w8, w8, w9
  40aa0c:	b.ne	40a988 <__fxstatat@plt+0x7f38>  // b.any
  40aa10:	ldr	x19, [x0]
  40aa14:	ldr	x20, [x1]
  40aa18:	bl	4029e0 <__errno_location@plt>
  40aa1c:	str	wzr, [x0]
  40aa20:	mov	x0, x19
  40aa24:	mov	x1, x20
  40aa28:	ldp	x20, x19, [sp, #16]
  40aa2c:	ldp	x29, x30, [sp], #32
  40aa30:	b	402990 <strcoll@plt>
  40aa34:	stp	x29, x30, [sp, #-32]!
  40aa38:	stp	x20, x19, [sp, #16]
  40aa3c:	ldr	x8, [x0, #112]
  40aa40:	ldr	x9, [x1, #112]
  40aa44:	mov	x29, sp
  40aa48:	cmp	x8, x9
  40aa4c:	b.ge	40aa64 <__fxstatat@plt+0x8014>  // b.tcont
  40aa50:	mov	w8, #0xffffffff            	// #-1
  40aa54:	ldp	x20, x19, [sp, #16]
  40aa58:	mov	w0, w8
  40aa5c:	ldp	x29, x30, [sp], #32
  40aa60:	ret
  40aa64:	b.le	40aa7c <__fxstatat@plt+0x802c>
  40aa68:	mov	w8, #0x1                   	// #1
  40aa6c:	ldp	x20, x19, [sp, #16]
  40aa70:	mov	w0, w8
  40aa74:	ldp	x29, x30, [sp], #32
  40aa78:	ret
  40aa7c:	ldr	x8, [x0, #120]
  40aa80:	ldr	x9, [x1, #120]
  40aa84:	subs	w8, w8, w9
  40aa88:	b.ne	40aa54 <__fxstatat@plt+0x8004>  // b.any
  40aa8c:	ldr	x19, [x1]
  40aa90:	ldr	x20, [x0]
  40aa94:	bl	4029e0 <__errno_location@plt>
  40aa98:	str	wzr, [x0]
  40aa9c:	mov	x0, x19
  40aaa0:	mov	x1, x20
  40aaa4:	ldp	x20, x19, [sp, #16]
  40aaa8:	ldp	x29, x30, [sp], #32
  40aaac:	b	402990 <strcoll@plt>
  40aab0:	stp	x29, x30, [sp, #-32]!
  40aab4:	stp	x20, x19, [sp, #16]
  40aab8:	ldr	w9, [x0, #152]
  40aabc:	mov	w8, #0x1                   	// #1
  40aac0:	mov	x29, sp
  40aac4:	cmp	w9, #0x3
  40aac8:	b.eq	40aae4 <__fxstatat@plt+0x8094>  // b.none
  40aacc:	cmp	w9, #0x9
  40aad0:	b.eq	40aae4 <__fxstatat@plt+0x8094>  // b.none
  40aad4:	ldr	w8, [x0, #156]
  40aad8:	and	w8, w8, #0xf000
  40aadc:	cmp	w8, #0x4, lsl #12
  40aae0:	cset	w8, eq  // eq = none
  40aae4:	ldr	w9, [x1, #152]
  40aae8:	cmp	w9, #0x9
  40aaec:	b.eq	40aaf8 <__fxstatat@plt+0x80a8>  // b.none
  40aaf0:	cmp	w9, #0x3
  40aaf4:	b.ne	40ab10 <__fxstatat@plt+0x80c0>  // b.any
  40aaf8:	tbnz	w8, #0, 40ab3c <__fxstatat@plt+0x80ec>
  40aafc:	mov	w8, #0x1                   	// #1
  40ab00:	ldp	x20, x19, [sp, #16]
  40ab04:	mov	w0, w8
  40ab08:	ldp	x29, x30, [sp], #32
  40ab0c:	ret
  40ab10:	ldr	w9, [x1, #156]
  40ab14:	eor	w10, w8, #0x1
  40ab18:	mov	w11, #0x1                   	// #1
  40ab1c:	and	w9, w9, #0xf000
  40ab20:	cmp	w9, #0x4, lsl #12
  40ab24:	cset	w9, eq  // eq = none
  40ab28:	orr	w10, w9, w10
  40ab2c:	cmp	w10, #0x0
  40ab30:	eor	w9, w8, w9
  40ab34:	cneg	w8, w11, eq  // eq = none
  40ab38:	tbnz	w9, #0, 40ab00 <__fxstatat@plt+0x80b0>
  40ab3c:	ldr	x8, [x0, #112]
  40ab40:	ldr	x9, [x1, #112]
  40ab44:	cmp	x8, x9
  40ab48:	b.ge	40ab60 <__fxstatat@plt+0x8110>  // b.tcont
  40ab4c:	mov	w8, #0xffffffff            	// #-1
  40ab50:	ldp	x20, x19, [sp, #16]
  40ab54:	mov	w0, w8
  40ab58:	ldp	x29, x30, [sp], #32
  40ab5c:	ret
  40ab60:	b.le	40ab78 <__fxstatat@plt+0x8128>
  40ab64:	mov	w8, #0x1                   	// #1
  40ab68:	ldp	x20, x19, [sp, #16]
  40ab6c:	mov	w0, w8
  40ab70:	ldp	x29, x30, [sp], #32
  40ab74:	ret
  40ab78:	ldr	x8, [x0, #120]
  40ab7c:	ldr	x9, [x1, #120]
  40ab80:	subs	w8, w8, w9
  40ab84:	b.ne	40ab00 <__fxstatat@plt+0x80b0>  // b.any
  40ab88:	ldr	x19, [x1]
  40ab8c:	ldr	x20, [x0]
  40ab90:	bl	4029e0 <__errno_location@plt>
  40ab94:	str	wzr, [x0]
  40ab98:	mov	x0, x19
  40ab9c:	mov	x1, x20
  40aba0:	ldp	x20, x19, [sp, #16]
  40aba4:	ldp	x29, x30, [sp], #32
  40aba8:	b	402990 <strcoll@plt>
  40abac:	ldr	x8, [x1, #112]
  40abb0:	ldr	x9, [x0, #112]
  40abb4:	cmp	x8, x9
  40abb8:	b.ge	40abc4 <__fxstatat@plt+0x8174>  // b.tcont
  40abbc:	mov	w0, #0xffffffff            	// #-1
  40abc0:	ret
  40abc4:	b.le	40abd0 <__fxstatat@plt+0x8180>
  40abc8:	mov	w0, #0x1                   	// #1
  40abcc:	ret
  40abd0:	ldr	x8, [x1, #120]
  40abd4:	ldr	x9, [x0, #120]
  40abd8:	subs	w8, w8, w9
  40abdc:	b.eq	40abe8 <__fxstatat@plt+0x8198>  // b.none
  40abe0:	mov	w0, w8
  40abe4:	ret
  40abe8:	ldr	x0, [x0]
  40abec:	ldr	x1, [x1]
  40abf0:	b	402800 <strcmp@plt>
  40abf4:	ldr	w9, [x0, #152]
  40abf8:	mov	w8, #0x1                   	// #1
  40abfc:	cmp	w9, #0x3
  40ac00:	b.eq	40ac1c <__fxstatat@plt+0x81cc>  // b.none
  40ac04:	cmp	w9, #0x9
  40ac08:	b.eq	40ac1c <__fxstatat@plt+0x81cc>  // b.none
  40ac0c:	ldr	w8, [x0, #156]
  40ac10:	and	w8, w8, #0xf000
  40ac14:	cmp	w8, #0x4, lsl #12
  40ac18:	cset	w8, eq  // eq = none
  40ac1c:	ldr	w9, [x1, #152]
  40ac20:	cmp	w9, #0x9
  40ac24:	b.eq	40ac30 <__fxstatat@plt+0x81e0>  // b.none
  40ac28:	cmp	w9, #0x3
  40ac2c:	b.ne	40ac3c <__fxstatat@plt+0x81ec>  // b.any
  40ac30:	tbnz	w8, #0, 40ac68 <__fxstatat@plt+0x8218>
  40ac34:	mov	w0, #0x1                   	// #1
  40ac38:	ret
  40ac3c:	ldr	w9, [x1, #156]
  40ac40:	eor	w10, w8, #0x1
  40ac44:	mov	w11, #0x1                   	// #1
  40ac48:	and	w9, w9, #0xf000
  40ac4c:	cmp	w9, #0x4, lsl #12
  40ac50:	cset	w9, eq  // eq = none
  40ac54:	orr	w10, w9, w10
  40ac58:	cmp	w10, #0x0
  40ac5c:	eor	w9, w8, w9
  40ac60:	cneg	w8, w11, eq  // eq = none
  40ac64:	tbnz	w9, #0, 40ac9c <__fxstatat@plt+0x824c>
  40ac68:	ldr	x8, [x1, #112]
  40ac6c:	ldr	x9, [x0, #112]
  40ac70:	cmp	x8, x9
  40ac74:	b.ge	40ac80 <__fxstatat@plt+0x8230>  // b.tcont
  40ac78:	mov	w0, #0xffffffff            	// #-1
  40ac7c:	ret
  40ac80:	b.le	40ac8c <__fxstatat@plt+0x823c>
  40ac84:	mov	w0, #0x1                   	// #1
  40ac88:	ret
  40ac8c:	ldr	x8, [x1, #120]
  40ac90:	ldr	x9, [x0, #120]
  40ac94:	subs	w8, w8, w9
  40ac98:	b.eq	40aca4 <__fxstatat@plt+0x8254>  // b.none
  40ac9c:	mov	w0, w8
  40aca0:	ret
  40aca4:	ldr	x0, [x0]
  40aca8:	ldr	x1, [x1]
  40acac:	b	402800 <strcmp@plt>
  40acb0:	ldr	x8, [x0, #112]
  40acb4:	ldr	x9, [x1, #112]
  40acb8:	cmp	x8, x9
  40acbc:	b.ge	40acc8 <__fxstatat@plt+0x8278>  // b.tcont
  40acc0:	mov	w0, #0xffffffff            	// #-1
  40acc4:	ret
  40acc8:	b.le	40acd4 <__fxstatat@plt+0x8284>
  40accc:	mov	w0, #0x1                   	// #1
  40acd0:	ret
  40acd4:	ldr	x8, [x0, #120]
  40acd8:	ldr	x9, [x1, #120]
  40acdc:	subs	w8, w8, w9
  40ace0:	b.eq	40acec <__fxstatat@plt+0x829c>  // b.none
  40ace4:	mov	w0, w8
  40ace8:	ret
  40acec:	ldr	x8, [x1]
  40acf0:	ldr	x1, [x0]
  40acf4:	mov	x0, x8
  40acf8:	b	402800 <strcmp@plt>
  40acfc:	ldr	w9, [x0, #152]
  40ad00:	mov	w8, #0x1                   	// #1
  40ad04:	cmp	w9, #0x3
  40ad08:	b.eq	40ad24 <__fxstatat@plt+0x82d4>  // b.none
  40ad0c:	cmp	w9, #0x9
  40ad10:	b.eq	40ad24 <__fxstatat@plt+0x82d4>  // b.none
  40ad14:	ldr	w8, [x0, #156]
  40ad18:	and	w8, w8, #0xf000
  40ad1c:	cmp	w8, #0x4, lsl #12
  40ad20:	cset	w8, eq  // eq = none
  40ad24:	ldr	w9, [x1, #152]
  40ad28:	cmp	w9, #0x9
  40ad2c:	b.eq	40ad38 <__fxstatat@plt+0x82e8>  // b.none
  40ad30:	cmp	w9, #0x3
  40ad34:	b.ne	40ad44 <__fxstatat@plt+0x82f4>  // b.any
  40ad38:	tbnz	w8, #0, 40ad70 <__fxstatat@plt+0x8320>
  40ad3c:	mov	w0, #0x1                   	// #1
  40ad40:	ret
  40ad44:	ldr	w9, [x1, #156]
  40ad48:	eor	w10, w8, #0x1
  40ad4c:	mov	w11, #0x1                   	// #1
  40ad50:	and	w9, w9, #0xf000
  40ad54:	cmp	w9, #0x4, lsl #12
  40ad58:	cset	w9, eq  // eq = none
  40ad5c:	orr	w10, w9, w10
  40ad60:	cmp	w10, #0x0
  40ad64:	eor	w9, w8, w9
  40ad68:	cneg	w8, w11, eq  // eq = none
  40ad6c:	tbnz	w9, #0, 40ada4 <__fxstatat@plt+0x8354>
  40ad70:	ldr	x8, [x0, #112]
  40ad74:	ldr	x9, [x1, #112]
  40ad78:	cmp	x8, x9
  40ad7c:	b.ge	40ad88 <__fxstatat@plt+0x8338>  // b.tcont
  40ad80:	mov	w0, #0xffffffff            	// #-1
  40ad84:	ret
  40ad88:	b.le	40ad94 <__fxstatat@plt+0x8344>
  40ad8c:	mov	w0, #0x1                   	// #1
  40ad90:	ret
  40ad94:	ldr	x8, [x0, #120]
  40ad98:	ldr	x9, [x1, #120]
  40ad9c:	subs	w8, w8, w9
  40ada0:	b.eq	40adac <__fxstatat@plt+0x835c>  // b.none
  40ada4:	mov	w0, w8
  40ada8:	ret
  40adac:	ldr	x8, [x1]
  40adb0:	ldr	x1, [x0]
  40adb4:	mov	x0, x8
  40adb8:	b	402800 <strcmp@plt>
  40adbc:	stp	x29, x30, [sp, #-32]!
  40adc0:	stp	x20, x19, [sp, #16]
  40adc4:	ldr	x8, [x1, #128]
  40adc8:	ldr	x9, [x0, #128]
  40adcc:	mov	x29, sp
  40add0:	cmp	x8, x9
  40add4:	b.ge	40adec <__fxstatat@plt+0x839c>  // b.tcont
  40add8:	mov	w8, #0xffffffff            	// #-1
  40addc:	ldp	x20, x19, [sp, #16]
  40ade0:	mov	w0, w8
  40ade4:	ldp	x29, x30, [sp], #32
  40ade8:	ret
  40adec:	b.le	40ae04 <__fxstatat@plt+0x83b4>
  40adf0:	mov	w8, #0x1                   	// #1
  40adf4:	ldp	x20, x19, [sp, #16]
  40adf8:	mov	w0, w8
  40adfc:	ldp	x29, x30, [sp], #32
  40ae00:	ret
  40ae04:	ldr	x8, [x1, #136]
  40ae08:	ldr	x9, [x0, #136]
  40ae0c:	subs	w8, w8, w9
  40ae10:	b.ne	40addc <__fxstatat@plt+0x838c>  // b.any
  40ae14:	ldr	x19, [x0]
  40ae18:	ldr	x20, [x1]
  40ae1c:	bl	4029e0 <__errno_location@plt>
  40ae20:	str	wzr, [x0]
  40ae24:	mov	x0, x19
  40ae28:	mov	x1, x20
  40ae2c:	ldp	x20, x19, [sp, #16]
  40ae30:	ldp	x29, x30, [sp], #32
  40ae34:	b	402990 <strcoll@plt>
  40ae38:	stp	x29, x30, [sp, #-32]!
  40ae3c:	stp	x20, x19, [sp, #16]
  40ae40:	ldr	w9, [x0, #152]
  40ae44:	mov	w8, #0x1                   	// #1
  40ae48:	mov	x29, sp
  40ae4c:	cmp	w9, #0x3
  40ae50:	b.eq	40ae6c <__fxstatat@plt+0x841c>  // b.none
  40ae54:	cmp	w9, #0x9
  40ae58:	b.eq	40ae6c <__fxstatat@plt+0x841c>  // b.none
  40ae5c:	ldr	w8, [x0, #156]
  40ae60:	and	w8, w8, #0xf000
  40ae64:	cmp	w8, #0x4, lsl #12
  40ae68:	cset	w8, eq  // eq = none
  40ae6c:	ldr	w9, [x1, #152]
  40ae70:	cmp	w9, #0x9
  40ae74:	b.eq	40ae80 <__fxstatat@plt+0x8430>  // b.none
  40ae78:	cmp	w9, #0x3
  40ae7c:	b.ne	40ae98 <__fxstatat@plt+0x8448>  // b.any
  40ae80:	tbnz	w8, #0, 40aec4 <__fxstatat@plt+0x8474>
  40ae84:	mov	w8, #0x1                   	// #1
  40ae88:	ldp	x20, x19, [sp, #16]
  40ae8c:	mov	w0, w8
  40ae90:	ldp	x29, x30, [sp], #32
  40ae94:	ret
  40ae98:	ldr	w9, [x1, #156]
  40ae9c:	eor	w10, w8, #0x1
  40aea0:	mov	w11, #0x1                   	// #1
  40aea4:	and	w9, w9, #0xf000
  40aea8:	cmp	w9, #0x4, lsl #12
  40aeac:	cset	w9, eq  // eq = none
  40aeb0:	orr	w10, w9, w10
  40aeb4:	cmp	w10, #0x0
  40aeb8:	eor	w9, w8, w9
  40aebc:	cneg	w8, w11, eq  // eq = none
  40aec0:	tbnz	w9, #0, 40ae88 <__fxstatat@plt+0x8438>
  40aec4:	ldr	x8, [x1, #128]
  40aec8:	ldr	x9, [x0, #128]
  40aecc:	cmp	x8, x9
  40aed0:	b.ge	40aee8 <__fxstatat@plt+0x8498>  // b.tcont
  40aed4:	mov	w8, #0xffffffff            	// #-1
  40aed8:	ldp	x20, x19, [sp, #16]
  40aedc:	mov	w0, w8
  40aee0:	ldp	x29, x30, [sp], #32
  40aee4:	ret
  40aee8:	b.le	40af00 <__fxstatat@plt+0x84b0>
  40aeec:	mov	w8, #0x1                   	// #1
  40aef0:	ldp	x20, x19, [sp, #16]
  40aef4:	mov	w0, w8
  40aef8:	ldp	x29, x30, [sp], #32
  40aefc:	ret
  40af00:	ldr	x8, [x1, #136]
  40af04:	ldr	x9, [x0, #136]
  40af08:	subs	w8, w8, w9
  40af0c:	b.ne	40ae88 <__fxstatat@plt+0x8438>  // b.any
  40af10:	ldr	x19, [x0]
  40af14:	ldr	x20, [x1]
  40af18:	bl	4029e0 <__errno_location@plt>
  40af1c:	str	wzr, [x0]
  40af20:	mov	x0, x19
  40af24:	mov	x1, x20
  40af28:	ldp	x20, x19, [sp, #16]
  40af2c:	ldp	x29, x30, [sp], #32
  40af30:	b	402990 <strcoll@plt>
  40af34:	stp	x29, x30, [sp, #-32]!
  40af38:	stp	x20, x19, [sp, #16]
  40af3c:	ldr	x8, [x0, #128]
  40af40:	ldr	x9, [x1, #128]
  40af44:	mov	x29, sp
  40af48:	cmp	x8, x9
  40af4c:	b.ge	40af64 <__fxstatat@plt+0x8514>  // b.tcont
  40af50:	mov	w8, #0xffffffff            	// #-1
  40af54:	ldp	x20, x19, [sp, #16]
  40af58:	mov	w0, w8
  40af5c:	ldp	x29, x30, [sp], #32
  40af60:	ret
  40af64:	b.le	40af7c <__fxstatat@plt+0x852c>
  40af68:	mov	w8, #0x1                   	// #1
  40af6c:	ldp	x20, x19, [sp, #16]
  40af70:	mov	w0, w8
  40af74:	ldp	x29, x30, [sp], #32
  40af78:	ret
  40af7c:	ldr	x8, [x0, #136]
  40af80:	ldr	x9, [x1, #136]
  40af84:	subs	w8, w8, w9
  40af88:	b.ne	40af54 <__fxstatat@plt+0x8504>  // b.any
  40af8c:	ldr	x19, [x1]
  40af90:	ldr	x20, [x0]
  40af94:	bl	4029e0 <__errno_location@plt>
  40af98:	str	wzr, [x0]
  40af9c:	mov	x0, x19
  40afa0:	mov	x1, x20
  40afa4:	ldp	x20, x19, [sp, #16]
  40afa8:	ldp	x29, x30, [sp], #32
  40afac:	b	402990 <strcoll@plt>
  40afb0:	stp	x29, x30, [sp, #-32]!
  40afb4:	stp	x20, x19, [sp, #16]
  40afb8:	ldr	w9, [x0, #152]
  40afbc:	mov	w8, #0x1                   	// #1
  40afc0:	mov	x29, sp
  40afc4:	cmp	w9, #0x3
  40afc8:	b.eq	40afe4 <__fxstatat@plt+0x8594>  // b.none
  40afcc:	cmp	w9, #0x9
  40afd0:	b.eq	40afe4 <__fxstatat@plt+0x8594>  // b.none
  40afd4:	ldr	w8, [x0, #156]
  40afd8:	and	w8, w8, #0xf000
  40afdc:	cmp	w8, #0x4, lsl #12
  40afe0:	cset	w8, eq  // eq = none
  40afe4:	ldr	w9, [x1, #152]
  40afe8:	cmp	w9, #0x9
  40afec:	b.eq	40aff8 <__fxstatat@plt+0x85a8>  // b.none
  40aff0:	cmp	w9, #0x3
  40aff4:	b.ne	40b010 <__fxstatat@plt+0x85c0>  // b.any
  40aff8:	tbnz	w8, #0, 40b03c <__fxstatat@plt+0x85ec>
  40affc:	mov	w8, #0x1                   	// #1
  40b000:	ldp	x20, x19, [sp, #16]
  40b004:	mov	w0, w8
  40b008:	ldp	x29, x30, [sp], #32
  40b00c:	ret
  40b010:	ldr	w9, [x1, #156]
  40b014:	eor	w10, w8, #0x1
  40b018:	mov	w11, #0x1                   	// #1
  40b01c:	and	w9, w9, #0xf000
  40b020:	cmp	w9, #0x4, lsl #12
  40b024:	cset	w9, eq  // eq = none
  40b028:	orr	w10, w9, w10
  40b02c:	cmp	w10, #0x0
  40b030:	eor	w9, w8, w9
  40b034:	cneg	w8, w11, eq  // eq = none
  40b038:	tbnz	w9, #0, 40b000 <__fxstatat@plt+0x85b0>
  40b03c:	ldr	x8, [x0, #128]
  40b040:	ldr	x9, [x1, #128]
  40b044:	cmp	x8, x9
  40b048:	b.ge	40b060 <__fxstatat@plt+0x8610>  // b.tcont
  40b04c:	mov	w8, #0xffffffff            	// #-1
  40b050:	ldp	x20, x19, [sp, #16]
  40b054:	mov	w0, w8
  40b058:	ldp	x29, x30, [sp], #32
  40b05c:	ret
  40b060:	b.le	40b078 <__fxstatat@plt+0x8628>
  40b064:	mov	w8, #0x1                   	// #1
  40b068:	ldp	x20, x19, [sp, #16]
  40b06c:	mov	w0, w8
  40b070:	ldp	x29, x30, [sp], #32
  40b074:	ret
  40b078:	ldr	x8, [x0, #136]
  40b07c:	ldr	x9, [x1, #136]
  40b080:	subs	w8, w8, w9
  40b084:	b.ne	40b000 <__fxstatat@plt+0x85b0>  // b.any
  40b088:	ldr	x19, [x1]
  40b08c:	ldr	x20, [x0]
  40b090:	bl	4029e0 <__errno_location@plt>
  40b094:	str	wzr, [x0]
  40b098:	mov	x0, x19
  40b09c:	mov	x1, x20
  40b0a0:	ldp	x20, x19, [sp, #16]
  40b0a4:	ldp	x29, x30, [sp], #32
  40b0a8:	b	402990 <strcoll@plt>
  40b0ac:	ldr	x8, [x1, #128]
  40b0b0:	ldr	x9, [x0, #128]
  40b0b4:	cmp	x8, x9
  40b0b8:	b.ge	40b0c4 <__fxstatat@plt+0x8674>  // b.tcont
  40b0bc:	mov	w0, #0xffffffff            	// #-1
  40b0c0:	ret
  40b0c4:	b.le	40b0d0 <__fxstatat@plt+0x8680>
  40b0c8:	mov	w0, #0x1                   	// #1
  40b0cc:	ret
  40b0d0:	ldr	x8, [x1, #136]
  40b0d4:	ldr	x9, [x0, #136]
  40b0d8:	subs	w8, w8, w9
  40b0dc:	b.eq	40b0e8 <__fxstatat@plt+0x8698>  // b.none
  40b0e0:	mov	w0, w8
  40b0e4:	ret
  40b0e8:	ldr	x0, [x0]
  40b0ec:	ldr	x1, [x1]
  40b0f0:	b	402800 <strcmp@plt>
  40b0f4:	ldr	w9, [x0, #152]
  40b0f8:	mov	w8, #0x1                   	// #1
  40b0fc:	cmp	w9, #0x3
  40b100:	b.eq	40b11c <__fxstatat@plt+0x86cc>  // b.none
  40b104:	cmp	w9, #0x9
  40b108:	b.eq	40b11c <__fxstatat@plt+0x86cc>  // b.none
  40b10c:	ldr	w8, [x0, #156]
  40b110:	and	w8, w8, #0xf000
  40b114:	cmp	w8, #0x4, lsl #12
  40b118:	cset	w8, eq  // eq = none
  40b11c:	ldr	w9, [x1, #152]
  40b120:	cmp	w9, #0x9
  40b124:	b.eq	40b130 <__fxstatat@plt+0x86e0>  // b.none
  40b128:	cmp	w9, #0x3
  40b12c:	b.ne	40b13c <__fxstatat@plt+0x86ec>  // b.any
  40b130:	tbnz	w8, #0, 40b168 <__fxstatat@plt+0x8718>
  40b134:	mov	w0, #0x1                   	// #1
  40b138:	ret
  40b13c:	ldr	w9, [x1, #156]
  40b140:	eor	w10, w8, #0x1
  40b144:	mov	w11, #0x1                   	// #1
  40b148:	and	w9, w9, #0xf000
  40b14c:	cmp	w9, #0x4, lsl #12
  40b150:	cset	w9, eq  // eq = none
  40b154:	orr	w10, w9, w10
  40b158:	cmp	w10, #0x0
  40b15c:	eor	w9, w8, w9
  40b160:	cneg	w8, w11, eq  // eq = none
  40b164:	tbnz	w9, #0, 40b19c <__fxstatat@plt+0x874c>
  40b168:	ldr	x8, [x1, #128]
  40b16c:	ldr	x9, [x0, #128]
  40b170:	cmp	x8, x9
  40b174:	b.ge	40b180 <__fxstatat@plt+0x8730>  // b.tcont
  40b178:	mov	w0, #0xffffffff            	// #-1
  40b17c:	ret
  40b180:	b.le	40b18c <__fxstatat@plt+0x873c>
  40b184:	mov	w0, #0x1                   	// #1
  40b188:	ret
  40b18c:	ldr	x8, [x1, #136]
  40b190:	ldr	x9, [x0, #136]
  40b194:	subs	w8, w8, w9
  40b198:	b.eq	40b1a4 <__fxstatat@plt+0x8754>  // b.none
  40b19c:	mov	w0, w8
  40b1a0:	ret
  40b1a4:	ldr	x0, [x0]
  40b1a8:	ldr	x1, [x1]
  40b1ac:	b	402800 <strcmp@plt>
  40b1b0:	ldr	x8, [x0, #128]
  40b1b4:	ldr	x9, [x1, #128]
  40b1b8:	cmp	x8, x9
  40b1bc:	b.ge	40b1c8 <__fxstatat@plt+0x8778>  // b.tcont
  40b1c0:	mov	w0, #0xffffffff            	// #-1
  40b1c4:	ret
  40b1c8:	b.le	40b1d4 <__fxstatat@plt+0x8784>
  40b1cc:	mov	w0, #0x1                   	// #1
  40b1d0:	ret
  40b1d4:	ldr	x8, [x0, #136]
  40b1d8:	ldr	x9, [x1, #136]
  40b1dc:	subs	w8, w8, w9
  40b1e0:	b.eq	40b1ec <__fxstatat@plt+0x879c>  // b.none
  40b1e4:	mov	w0, w8
  40b1e8:	ret
  40b1ec:	ldr	x8, [x1]
  40b1f0:	ldr	x1, [x0]
  40b1f4:	mov	x0, x8
  40b1f8:	b	402800 <strcmp@plt>
  40b1fc:	ldr	w9, [x0, #152]
  40b200:	mov	w8, #0x1                   	// #1
  40b204:	cmp	w9, #0x3
  40b208:	b.eq	40b224 <__fxstatat@plt+0x87d4>  // b.none
  40b20c:	cmp	w9, #0x9
  40b210:	b.eq	40b224 <__fxstatat@plt+0x87d4>  // b.none
  40b214:	ldr	w8, [x0, #156]
  40b218:	and	w8, w8, #0xf000
  40b21c:	cmp	w8, #0x4, lsl #12
  40b220:	cset	w8, eq  // eq = none
  40b224:	ldr	w9, [x1, #152]
  40b228:	cmp	w9, #0x9
  40b22c:	b.eq	40b238 <__fxstatat@plt+0x87e8>  // b.none
  40b230:	cmp	w9, #0x3
  40b234:	b.ne	40b244 <__fxstatat@plt+0x87f4>  // b.any
  40b238:	tbnz	w8, #0, 40b270 <__fxstatat@plt+0x8820>
  40b23c:	mov	w0, #0x1                   	// #1
  40b240:	ret
  40b244:	ldr	w9, [x1, #156]
  40b248:	eor	w10, w8, #0x1
  40b24c:	mov	w11, #0x1                   	// #1
  40b250:	and	w9, w9, #0xf000
  40b254:	cmp	w9, #0x4, lsl #12
  40b258:	cset	w9, eq  // eq = none
  40b25c:	orr	w10, w9, w10
  40b260:	cmp	w10, #0x0
  40b264:	eor	w9, w8, w9
  40b268:	cneg	w8, w11, eq  // eq = none
  40b26c:	tbnz	w9, #0, 40b2a4 <__fxstatat@plt+0x8854>
  40b270:	ldr	x8, [x0, #128]
  40b274:	ldr	x9, [x1, #128]
  40b278:	cmp	x8, x9
  40b27c:	b.ge	40b288 <__fxstatat@plt+0x8838>  // b.tcont
  40b280:	mov	w0, #0xffffffff            	// #-1
  40b284:	ret
  40b288:	b.le	40b294 <__fxstatat@plt+0x8844>
  40b28c:	mov	w0, #0x1                   	// #1
  40b290:	ret
  40b294:	ldr	x8, [x0, #136]
  40b298:	ldr	x9, [x1, #136]
  40b29c:	subs	w8, w8, w9
  40b2a0:	b.eq	40b2ac <__fxstatat@plt+0x885c>  // b.none
  40b2a4:	mov	w0, w8
  40b2a8:	ret
  40b2ac:	ldr	x8, [x1]
  40b2b0:	ldr	x1, [x0]
  40b2b4:	mov	x0, x8
  40b2b8:	b	402800 <strcmp@plt>
  40b2bc:	stp	x29, x30, [sp, #-32]!
  40b2c0:	stp	x20, x19, [sp, #16]
  40b2c4:	ldr	x8, [x1, #96]
  40b2c8:	ldr	x9, [x0, #96]
  40b2cc:	mov	x29, sp
  40b2d0:	cmp	x8, x9
  40b2d4:	b.ge	40b2ec <__fxstatat@plt+0x889c>  // b.tcont
  40b2d8:	mov	w8, #0xffffffff            	// #-1
  40b2dc:	ldp	x20, x19, [sp, #16]
  40b2e0:	mov	w0, w8
  40b2e4:	ldp	x29, x30, [sp], #32
  40b2e8:	ret
  40b2ec:	b.le	40b304 <__fxstatat@plt+0x88b4>
  40b2f0:	mov	w8, #0x1                   	// #1
  40b2f4:	ldp	x20, x19, [sp, #16]
  40b2f8:	mov	w0, w8
  40b2fc:	ldp	x29, x30, [sp], #32
  40b300:	ret
  40b304:	ldr	x8, [x1, #104]
  40b308:	ldr	x9, [x0, #104]
  40b30c:	subs	w8, w8, w9
  40b310:	b.ne	40b2dc <__fxstatat@plt+0x888c>  // b.any
  40b314:	ldr	x19, [x0]
  40b318:	ldr	x20, [x1]
  40b31c:	bl	4029e0 <__errno_location@plt>
  40b320:	str	wzr, [x0]
  40b324:	mov	x0, x19
  40b328:	mov	x1, x20
  40b32c:	ldp	x20, x19, [sp, #16]
  40b330:	ldp	x29, x30, [sp], #32
  40b334:	b	402990 <strcoll@plt>
  40b338:	stp	x29, x30, [sp, #-32]!
  40b33c:	stp	x20, x19, [sp, #16]
  40b340:	ldr	w9, [x0, #152]
  40b344:	mov	w8, #0x1                   	// #1
  40b348:	mov	x29, sp
  40b34c:	cmp	w9, #0x3
  40b350:	b.eq	40b36c <__fxstatat@plt+0x891c>  // b.none
  40b354:	cmp	w9, #0x9
  40b358:	b.eq	40b36c <__fxstatat@plt+0x891c>  // b.none
  40b35c:	ldr	w8, [x0, #156]
  40b360:	and	w8, w8, #0xf000
  40b364:	cmp	w8, #0x4, lsl #12
  40b368:	cset	w8, eq  // eq = none
  40b36c:	ldr	w9, [x1, #152]
  40b370:	cmp	w9, #0x9
  40b374:	b.eq	40b380 <__fxstatat@plt+0x8930>  // b.none
  40b378:	cmp	w9, #0x3
  40b37c:	b.ne	40b398 <__fxstatat@plt+0x8948>  // b.any
  40b380:	tbnz	w8, #0, 40b3c4 <__fxstatat@plt+0x8974>
  40b384:	mov	w8, #0x1                   	// #1
  40b388:	ldp	x20, x19, [sp, #16]
  40b38c:	mov	w0, w8
  40b390:	ldp	x29, x30, [sp], #32
  40b394:	ret
  40b398:	ldr	w9, [x1, #156]
  40b39c:	eor	w10, w8, #0x1
  40b3a0:	mov	w11, #0x1                   	// #1
  40b3a4:	and	w9, w9, #0xf000
  40b3a8:	cmp	w9, #0x4, lsl #12
  40b3ac:	cset	w9, eq  // eq = none
  40b3b0:	orr	w10, w9, w10
  40b3b4:	cmp	w10, #0x0
  40b3b8:	eor	w9, w8, w9
  40b3bc:	cneg	w8, w11, eq  // eq = none
  40b3c0:	tbnz	w9, #0, 40b388 <__fxstatat@plt+0x8938>
  40b3c4:	ldr	x8, [x1, #96]
  40b3c8:	ldr	x9, [x0, #96]
  40b3cc:	cmp	x8, x9
  40b3d0:	b.ge	40b3e8 <__fxstatat@plt+0x8998>  // b.tcont
  40b3d4:	mov	w8, #0xffffffff            	// #-1
  40b3d8:	ldp	x20, x19, [sp, #16]
  40b3dc:	mov	w0, w8
  40b3e0:	ldp	x29, x30, [sp], #32
  40b3e4:	ret
  40b3e8:	b.le	40b400 <__fxstatat@plt+0x89b0>
  40b3ec:	mov	w8, #0x1                   	// #1
  40b3f0:	ldp	x20, x19, [sp, #16]
  40b3f4:	mov	w0, w8
  40b3f8:	ldp	x29, x30, [sp], #32
  40b3fc:	ret
  40b400:	ldr	x8, [x1, #104]
  40b404:	ldr	x9, [x0, #104]
  40b408:	subs	w8, w8, w9
  40b40c:	b.ne	40b388 <__fxstatat@plt+0x8938>  // b.any
  40b410:	ldr	x19, [x0]
  40b414:	ldr	x20, [x1]
  40b418:	bl	4029e0 <__errno_location@plt>
  40b41c:	str	wzr, [x0]
  40b420:	mov	x0, x19
  40b424:	mov	x1, x20
  40b428:	ldp	x20, x19, [sp, #16]
  40b42c:	ldp	x29, x30, [sp], #32
  40b430:	b	402990 <strcoll@plt>
  40b434:	stp	x29, x30, [sp, #-32]!
  40b438:	stp	x20, x19, [sp, #16]
  40b43c:	ldr	x8, [x0, #96]
  40b440:	ldr	x9, [x1, #96]
  40b444:	mov	x29, sp
  40b448:	cmp	x8, x9
  40b44c:	b.ge	40b464 <__fxstatat@plt+0x8a14>  // b.tcont
  40b450:	mov	w8, #0xffffffff            	// #-1
  40b454:	ldp	x20, x19, [sp, #16]
  40b458:	mov	w0, w8
  40b45c:	ldp	x29, x30, [sp], #32
  40b460:	ret
  40b464:	b.le	40b47c <__fxstatat@plt+0x8a2c>
  40b468:	mov	w8, #0x1                   	// #1
  40b46c:	ldp	x20, x19, [sp, #16]
  40b470:	mov	w0, w8
  40b474:	ldp	x29, x30, [sp], #32
  40b478:	ret
  40b47c:	ldr	x8, [x0, #104]
  40b480:	ldr	x9, [x1, #104]
  40b484:	subs	w8, w8, w9
  40b488:	b.ne	40b454 <__fxstatat@plt+0x8a04>  // b.any
  40b48c:	ldr	x19, [x1]
  40b490:	ldr	x20, [x0]
  40b494:	bl	4029e0 <__errno_location@plt>
  40b498:	str	wzr, [x0]
  40b49c:	mov	x0, x19
  40b4a0:	mov	x1, x20
  40b4a4:	ldp	x20, x19, [sp, #16]
  40b4a8:	ldp	x29, x30, [sp], #32
  40b4ac:	b	402990 <strcoll@plt>
  40b4b0:	stp	x29, x30, [sp, #-32]!
  40b4b4:	stp	x20, x19, [sp, #16]
  40b4b8:	ldr	w9, [x0, #152]
  40b4bc:	mov	w8, #0x1                   	// #1
  40b4c0:	mov	x29, sp
  40b4c4:	cmp	w9, #0x3
  40b4c8:	b.eq	40b4e4 <__fxstatat@plt+0x8a94>  // b.none
  40b4cc:	cmp	w9, #0x9
  40b4d0:	b.eq	40b4e4 <__fxstatat@plt+0x8a94>  // b.none
  40b4d4:	ldr	w8, [x0, #156]
  40b4d8:	and	w8, w8, #0xf000
  40b4dc:	cmp	w8, #0x4, lsl #12
  40b4e0:	cset	w8, eq  // eq = none
  40b4e4:	ldr	w9, [x1, #152]
  40b4e8:	cmp	w9, #0x9
  40b4ec:	b.eq	40b4f8 <__fxstatat@plt+0x8aa8>  // b.none
  40b4f0:	cmp	w9, #0x3
  40b4f4:	b.ne	40b510 <__fxstatat@plt+0x8ac0>  // b.any
  40b4f8:	tbnz	w8, #0, 40b53c <__fxstatat@plt+0x8aec>
  40b4fc:	mov	w8, #0x1                   	// #1
  40b500:	ldp	x20, x19, [sp, #16]
  40b504:	mov	w0, w8
  40b508:	ldp	x29, x30, [sp], #32
  40b50c:	ret
  40b510:	ldr	w9, [x1, #156]
  40b514:	eor	w10, w8, #0x1
  40b518:	mov	w11, #0x1                   	// #1
  40b51c:	and	w9, w9, #0xf000
  40b520:	cmp	w9, #0x4, lsl #12
  40b524:	cset	w9, eq  // eq = none
  40b528:	orr	w10, w9, w10
  40b52c:	cmp	w10, #0x0
  40b530:	eor	w9, w8, w9
  40b534:	cneg	w8, w11, eq  // eq = none
  40b538:	tbnz	w9, #0, 40b500 <__fxstatat@plt+0x8ab0>
  40b53c:	ldr	x8, [x0, #96]
  40b540:	ldr	x9, [x1, #96]
  40b544:	cmp	x8, x9
  40b548:	b.ge	40b560 <__fxstatat@plt+0x8b10>  // b.tcont
  40b54c:	mov	w8, #0xffffffff            	// #-1
  40b550:	ldp	x20, x19, [sp, #16]
  40b554:	mov	w0, w8
  40b558:	ldp	x29, x30, [sp], #32
  40b55c:	ret
  40b560:	b.le	40b578 <__fxstatat@plt+0x8b28>
  40b564:	mov	w8, #0x1                   	// #1
  40b568:	ldp	x20, x19, [sp, #16]
  40b56c:	mov	w0, w8
  40b570:	ldp	x29, x30, [sp], #32
  40b574:	ret
  40b578:	ldr	x8, [x0, #104]
  40b57c:	ldr	x9, [x1, #104]
  40b580:	subs	w8, w8, w9
  40b584:	b.ne	40b500 <__fxstatat@plt+0x8ab0>  // b.any
  40b588:	ldr	x19, [x1]
  40b58c:	ldr	x20, [x0]
  40b590:	bl	4029e0 <__errno_location@plt>
  40b594:	str	wzr, [x0]
  40b598:	mov	x0, x19
  40b59c:	mov	x1, x20
  40b5a0:	ldp	x20, x19, [sp, #16]
  40b5a4:	ldp	x29, x30, [sp], #32
  40b5a8:	b	402990 <strcoll@plt>
  40b5ac:	ldr	x8, [x1, #96]
  40b5b0:	ldr	x9, [x0, #96]
  40b5b4:	cmp	x8, x9
  40b5b8:	b.ge	40b5c4 <__fxstatat@plt+0x8b74>  // b.tcont
  40b5bc:	mov	w0, #0xffffffff            	// #-1
  40b5c0:	ret
  40b5c4:	b.le	40b5d0 <__fxstatat@plt+0x8b80>
  40b5c8:	mov	w0, #0x1                   	// #1
  40b5cc:	ret
  40b5d0:	ldr	x8, [x1, #104]
  40b5d4:	ldr	x9, [x0, #104]
  40b5d8:	subs	w8, w8, w9
  40b5dc:	b.eq	40b5e8 <__fxstatat@plt+0x8b98>  // b.none
  40b5e0:	mov	w0, w8
  40b5e4:	ret
  40b5e8:	ldr	x0, [x0]
  40b5ec:	ldr	x1, [x1]
  40b5f0:	b	402800 <strcmp@plt>
  40b5f4:	ldr	w9, [x0, #152]
  40b5f8:	mov	w8, #0x1                   	// #1
  40b5fc:	cmp	w9, #0x3
  40b600:	b.eq	40b61c <__fxstatat@plt+0x8bcc>  // b.none
  40b604:	cmp	w9, #0x9
  40b608:	b.eq	40b61c <__fxstatat@plt+0x8bcc>  // b.none
  40b60c:	ldr	w8, [x0, #156]
  40b610:	and	w8, w8, #0xf000
  40b614:	cmp	w8, #0x4, lsl #12
  40b618:	cset	w8, eq  // eq = none
  40b61c:	ldr	w9, [x1, #152]
  40b620:	cmp	w9, #0x9
  40b624:	b.eq	40b630 <__fxstatat@plt+0x8be0>  // b.none
  40b628:	cmp	w9, #0x3
  40b62c:	b.ne	40b63c <__fxstatat@plt+0x8bec>  // b.any
  40b630:	tbnz	w8, #0, 40b668 <__fxstatat@plt+0x8c18>
  40b634:	mov	w0, #0x1                   	// #1
  40b638:	ret
  40b63c:	ldr	w9, [x1, #156]
  40b640:	eor	w10, w8, #0x1
  40b644:	mov	w11, #0x1                   	// #1
  40b648:	and	w9, w9, #0xf000
  40b64c:	cmp	w9, #0x4, lsl #12
  40b650:	cset	w9, eq  // eq = none
  40b654:	orr	w10, w9, w10
  40b658:	cmp	w10, #0x0
  40b65c:	eor	w9, w8, w9
  40b660:	cneg	w8, w11, eq  // eq = none
  40b664:	tbnz	w9, #0, 40b69c <__fxstatat@plt+0x8c4c>
  40b668:	ldr	x8, [x1, #96]
  40b66c:	ldr	x9, [x0, #96]
  40b670:	cmp	x8, x9
  40b674:	b.ge	40b680 <__fxstatat@plt+0x8c30>  // b.tcont
  40b678:	mov	w0, #0xffffffff            	// #-1
  40b67c:	ret
  40b680:	b.le	40b68c <__fxstatat@plt+0x8c3c>
  40b684:	mov	w0, #0x1                   	// #1
  40b688:	ret
  40b68c:	ldr	x8, [x1, #104]
  40b690:	ldr	x9, [x0, #104]
  40b694:	subs	w8, w8, w9
  40b698:	b.eq	40b6a4 <__fxstatat@plt+0x8c54>  // b.none
  40b69c:	mov	w0, w8
  40b6a0:	ret
  40b6a4:	ldr	x0, [x0]
  40b6a8:	ldr	x1, [x1]
  40b6ac:	b	402800 <strcmp@plt>
  40b6b0:	ldr	x8, [x0, #96]
  40b6b4:	ldr	x9, [x1, #96]
  40b6b8:	cmp	x8, x9
  40b6bc:	b.ge	40b6c8 <__fxstatat@plt+0x8c78>  // b.tcont
  40b6c0:	mov	w0, #0xffffffff            	// #-1
  40b6c4:	ret
  40b6c8:	b.le	40b6d4 <__fxstatat@plt+0x8c84>
  40b6cc:	mov	w0, #0x1                   	// #1
  40b6d0:	ret
  40b6d4:	ldr	x8, [x0, #104]
  40b6d8:	ldr	x9, [x1, #104]
  40b6dc:	subs	w8, w8, w9
  40b6e0:	b.eq	40b6ec <__fxstatat@plt+0x8c9c>  // b.none
  40b6e4:	mov	w0, w8
  40b6e8:	ret
  40b6ec:	ldr	x8, [x1]
  40b6f0:	ldr	x1, [x0]
  40b6f4:	mov	x0, x8
  40b6f8:	b	402800 <strcmp@plt>
  40b6fc:	ldr	w9, [x0, #152]
  40b700:	mov	w8, #0x1                   	// #1
  40b704:	cmp	w9, #0x3
  40b708:	b.eq	40b724 <__fxstatat@plt+0x8cd4>  // b.none
  40b70c:	cmp	w9, #0x9
  40b710:	b.eq	40b724 <__fxstatat@plt+0x8cd4>  // b.none
  40b714:	ldr	w8, [x0, #156]
  40b718:	and	w8, w8, #0xf000
  40b71c:	cmp	w8, #0x4, lsl #12
  40b720:	cset	w8, eq  // eq = none
  40b724:	ldr	w9, [x1, #152]
  40b728:	cmp	w9, #0x9
  40b72c:	b.eq	40b738 <__fxstatat@plt+0x8ce8>  // b.none
  40b730:	cmp	w9, #0x3
  40b734:	b.ne	40b744 <__fxstatat@plt+0x8cf4>  // b.any
  40b738:	tbnz	w8, #0, 40b770 <__fxstatat@plt+0x8d20>
  40b73c:	mov	w0, #0x1                   	// #1
  40b740:	ret
  40b744:	ldr	w9, [x1, #156]
  40b748:	eor	w10, w8, #0x1
  40b74c:	mov	w11, #0x1                   	// #1
  40b750:	and	w9, w9, #0xf000
  40b754:	cmp	w9, #0x4, lsl #12
  40b758:	cset	w9, eq  // eq = none
  40b75c:	orr	w10, w9, w10
  40b760:	cmp	w10, #0x0
  40b764:	eor	w9, w8, w9
  40b768:	cneg	w8, w11, eq  // eq = none
  40b76c:	tbnz	w9, #0, 40b7a4 <__fxstatat@plt+0x8d54>
  40b770:	ldr	x8, [x0, #96]
  40b774:	ldr	x9, [x1, #96]
  40b778:	cmp	x8, x9
  40b77c:	b.ge	40b788 <__fxstatat@plt+0x8d38>  // b.tcont
  40b780:	mov	w0, #0xffffffff            	// #-1
  40b784:	ret
  40b788:	b.le	40b794 <__fxstatat@plt+0x8d44>
  40b78c:	mov	w0, #0x1                   	// #1
  40b790:	ret
  40b794:	ldr	x8, [x0, #104]
  40b798:	ldr	x9, [x1, #104]
  40b79c:	subs	w8, w8, w9
  40b7a0:	b.eq	40b7ac <__fxstatat@plt+0x8d5c>  // b.none
  40b7a4:	mov	w0, w8
  40b7a8:	ret
  40b7ac:	ldr	x8, [x1]
  40b7b0:	ldr	x1, [x0]
  40b7b4:	mov	x0, x8
  40b7b8:	b	402800 <strcmp@plt>
  40b7bc:	stp	x29, x30, [sp, #-48]!
  40b7c0:	stp	x28, x21, [sp, #16]
  40b7c4:	stp	x20, x19, [sp, #32]
  40b7c8:	mov	x29, sp
  40b7cc:	sub	sp, sp, #0x290
  40b7d0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b7d4:	ldrb	w8, [x8, #468]
  40b7d8:	mov	x20, x1
  40b7dc:	mov	x19, x0
  40b7e0:	cbz	w8, 40b84c <__fxstatat@plt+0x8dfc>
  40b7e4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40b7e8:	add	x9, x9, #0x3c8
  40b7ec:	ldr	x8, [x9]
  40b7f0:	cbz	x8, 40b84c <__fxstatat@plt+0x8dfc>
  40b7f4:	ldr	x0, [x9, #8]
  40b7f8:	cmp	x8, #0x2
  40b7fc:	b.eq	40b818 <__fxstatat@plt+0x8dc8>  // b.none
  40b800:	cmp	x8, #0x1
  40b804:	b.ne	40b82c <__fxstatat@plt+0x8ddc>  // b.any
  40b808:	ldrb	w8, [x0]
  40b80c:	cmp	w8, #0x30
  40b810:	b.ne	40b82c <__fxstatat@plt+0x8ddc>  // b.any
  40b814:	b	40b84c <__fxstatat@plt+0x8dfc>
  40b818:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40b81c:	add	x1, x1, #0x20e
  40b820:	mov	w2, #0x2                   	// #2
  40b824:	bl	402640 <strncmp@plt>
  40b828:	cbz	w0, 40b84c <__fxstatat@plt+0x8dfc>
  40b82c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40b830:	add	x21, x21, #0x388
  40b834:	mov	x0, x21
  40b838:	bl	408560 <__fxstatat@plt+0x5b10>
  40b83c:	add	x0, x21, #0x40
  40b840:	bl	408560 <__fxstatat@plt+0x5b10>
  40b844:	add	x0, x21, #0x10
  40b848:	bl	408560 <__fxstatat@plt+0x5b10>
  40b84c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b850:	ldrb	w8, [x8, #489]
  40b854:	cmp	w8, #0x1
  40b858:	b.ne	40b894 <__fxstatat@plt+0x8e44>  // b.any
  40b85c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b860:	add	x8, x8, #0x1fc
  40b864:	ldr	w9, [x8]
  40b868:	ldr	w8, [x8, #40]
  40b86c:	ldrb	w10, [x19, #168]
  40b870:	cmp	w9, #0x4
  40b874:	csel	w21, wzr, w8, eq  // eq = none
  40b878:	cbz	w10, 40b8ec <__fxstatat@plt+0x8e9c>
  40b87c:	ldr	x0, [x19, #32]
  40b880:	cbz	x0, 40b8ec <__fxstatat@plt+0x8e9c>
  40b884:	add	x1, sp, #0x4
  40b888:	bl	40ffa0 <__fxstatat@plt+0xd550>
  40b88c:	mov	x3, x0
  40b890:	b	40b8f4 <__fxstatat@plt+0x8ea4>
  40b894:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b898:	ldrb	w8, [x8, #475]
  40b89c:	cmp	w8, #0x1
  40b8a0:	b.ne	40b918 <__fxstatat@plt+0x8ec8>  // b.any
  40b8a4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b8a8:	add	x8, x8, #0x1fc
  40b8ac:	ldr	w9, [x8]
  40b8b0:	ldr	w8, [x8, #44]
  40b8b4:	ldrb	w10, [x19, #168]
  40b8b8:	cmp	w9, #0x4
  40b8bc:	csel	w21, wzr, w8, eq  // eq = none
  40b8c0:	cbz	w10, 40b9fc <__fxstatat@plt+0x8fac>
  40b8c4:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b8c8:	add	x8, x8, #0x21c
  40b8cc:	ldr	x0, [x19, #88]
  40b8d0:	ldr	w2, [x8]
  40b8d4:	ldur	x4, [x8, #156]
  40b8d8:	add	x1, sp, #0x4
  40b8dc:	mov	w3, #0x200                 	// #512
  40b8e0:	bl	40f2c8 <__fxstatat@plt+0xc878>
  40b8e4:	mov	x3, x0
  40b8e8:	b	40ba04 <__fxstatat@plt+0x8fb4>
  40b8ec:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40b8f0:	add	x3, x3, #0x76e
  40b8f4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40b8f8:	add	x1, x1, #0x94f
  40b8fc:	mov	w0, #0x1                   	// #1
  40b900:	mov	w2, w21
  40b904:	bl	402670 <__printf_chk@plt>
  40b908:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b90c:	ldrb	w8, [x8, #475]
  40b910:	cmp	w8, #0x1
  40b914:	b.eq	40b8a4 <__fxstatat@plt+0x8e54>  // b.none
  40b918:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b91c:	ldrb	w8, [x8, #474]
  40b920:	cmp	w8, #0x1
  40b924:	b.ne	40b954 <__fxstatat@plt+0x8f04>  // b.any
  40b928:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b92c:	add	x8, x8, #0x1fc
  40b930:	ldr	w9, [x8]
  40b934:	ldr	w8, [x8, #64]
  40b938:	ldr	x3, [x19, #160]
  40b93c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40b940:	cmp	w9, #0x4
  40b944:	csel	w2, wzr, w8, eq  // eq = none
  40b948:	add	x1, x1, #0x94f
  40b94c:	mov	w0, #0x1                   	// #1
  40b950:	bl	402670 <__printf_chk@plt>
  40b954:	mov	x0, x19
  40b958:	mov	w1, wzr
  40b95c:	mov	x2, xzr
  40b960:	mov	x3, x20
  40b964:	bl	40bc80 <__fxstatat@plt+0x9230>
  40b968:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40b96c:	ldr	w9, [x8, #516]
  40b970:	cbz	w9, 40ba60 <__fxstatat@plt+0x9010>
  40b974:	ldrb	w11, [x19, #168]
  40b978:	ldr	w10, [x19, #40]
  40b97c:	ldr	w8, [x19, #152]
  40b980:	cbz	w11, 40b9b4 <__fxstatat@plt+0x8f64>
  40b984:	and	w12, w10, #0xf000
  40b988:	cmp	w12, #0x4, lsl #12
  40b98c:	b.eq	40ba2c <__fxstatat@plt+0x8fdc>  // b.none
  40b990:	cmp	w12, #0x8, lsl #12
  40b994:	b.ne	40b9d0 <__fxstatat@plt+0x8f80>  // b.any
  40b998:	mov	w8, #0x49                  	// #73
  40b99c:	tst	w10, w8
  40b9a0:	b.eq	40ba60 <__fxstatat@plt+0x9010>  // b.none
  40b9a4:	cmp	w9, #0x3
  40b9a8:	b.ne	40ba60 <__fxstatat@plt+0x9010>  // b.any
  40b9ac:	mov	w1, #0x2a                  	// #42
  40b9b0:	b	40ba30 <__fxstatat@plt+0x8fe0>
  40b9b4:	cmp	w8, #0x3
  40b9b8:	mov	w1, #0x2f                  	// #47
  40b9bc:	b.eq	40ba30 <__fxstatat@plt+0x8fe0>  // b.none
  40b9c0:	cmp	w8, #0x5
  40b9c4:	b.eq	40ba60 <__fxstatat@plt+0x9010>  // b.none
  40b9c8:	cmp	w8, #0x9
  40b9cc:	b.eq	40ba30 <__fxstatat@plt+0x8fe0>  // b.none
  40b9d0:	cmp	w9, #0x1
  40b9d4:	b.eq	40ba60 <__fxstatat@plt+0x9010>  // b.none
  40b9d8:	cbz	w11, 40ba74 <__fxstatat@plt+0x9024>
  40b9dc:	and	w8, w10, #0xf000
  40b9e0:	cmp	w8, #0x1, lsl #12
  40b9e4:	b.eq	40ba8c <__fxstatat@plt+0x903c>  // b.none
  40b9e8:	cmp	w8, #0xa, lsl #12
  40b9ec:	b.eq	40ba9c <__fxstatat@plt+0x904c>  // b.none
  40b9f0:	cmp	w8, #0xc, lsl #12
  40b9f4:	b.ne	40ba60 <__fxstatat@plt+0x9010>  // b.any
  40b9f8:	b	40ba94 <__fxstatat@plt+0x9044>
  40b9fc:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40ba00:	add	x3, x3, #0x76e
  40ba04:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40ba08:	add	x1, x1, #0x94f
  40ba0c:	mov	w0, #0x1                   	// #1
  40ba10:	mov	w2, w21
  40ba14:	bl	402670 <__printf_chk@plt>
  40ba18:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40ba1c:	ldrb	w8, [x8, #474]
  40ba20:	cmp	w8, #0x1
  40ba24:	b.eq	40b928 <__fxstatat@plt+0x8ed8>  // b.none
  40ba28:	b	40b954 <__fxstatat@plt+0x8f04>
  40ba2c:	mov	w1, #0x2f                  	// #47
  40ba30:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40ba34:	ldr	x0, [x8, #1456]
  40ba38:	ldp	x8, x9, [x0, #40]
  40ba3c:	cmp	x8, x9
  40ba40:	b.cs	40baa4 <__fxstatat@plt+0x9054>  // b.hs, b.nlast
  40ba44:	add	x9, x8, #0x1
  40ba48:	str	x9, [x0, #40]
  40ba4c:	strb	w1, [x8]
  40ba50:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40ba54:	ldr	x9, [x8, #648]
  40ba58:	add	x9, x9, #0x1
  40ba5c:	str	x9, [x8, #648]
  40ba60:	add	sp, sp, #0x290
  40ba64:	ldp	x20, x19, [sp, #32]
  40ba68:	ldp	x28, x21, [sp, #16]
  40ba6c:	ldp	x29, x30, [sp], #48
  40ba70:	ret
  40ba74:	cmp	w8, #0x7
  40ba78:	b.eq	40ba94 <__fxstatat@plt+0x9044>  // b.none
  40ba7c:	cmp	w8, #0x6
  40ba80:	b.eq	40ba9c <__fxstatat@plt+0x904c>  // b.none
  40ba84:	cmp	w8, #0x1
  40ba88:	b.ne	40ba60 <__fxstatat@plt+0x9010>  // b.any
  40ba8c:	mov	w1, #0x7c                  	// #124
  40ba90:	b	40ba30 <__fxstatat@plt+0x8fe0>
  40ba94:	mov	w1, #0x3d                  	// #61
  40ba98:	b	40ba30 <__fxstatat@plt+0x8fe0>
  40ba9c:	mov	w1, #0x40                  	// #64
  40baa0:	b	40ba30 <__fxstatat@plt+0x8fe0>
  40baa4:	bl	402790 <__overflow@plt>
  40baa8:	b	40ba50 <__fxstatat@plt+0x9000>
  40baac:	sub	sp, sp, #0x70
  40bab0:	stp	x29, x30, [sp, #16]
  40bab4:	stp	x28, x27, [sp, #32]
  40bab8:	stp	x26, x25, [sp, #48]
  40babc:	stp	x24, x23, [sp, #64]
  40bac0:	stp	x22, x21, [sp, #80]
  40bac4:	stp	x20, x19, [sp, #96]
  40bac8:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40bacc:	ldr	x8, [x25, #640]
  40bad0:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40bad4:	add	x29, sp, #0x10
  40bad8:	cbz	x8, 40bc1c <__fxstatat@plt+0x91cc>
  40badc:	adrp	x27, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40bae0:	add	x27, x27, #0x2a8
  40bae4:	ldr	x8, [x27, #56]
  40bae8:	ldr	x9, [x27]
  40baec:	mov	w19, w0
  40baf0:	ldr	x20, [x8]
  40baf4:	cbz	x9, 40bb08 <__fxstatat@plt+0x90b8>
  40baf8:	mov	x0, x20
  40bafc:	bl	40c308 <__fxstatat@plt+0x98b8>
  40bb00:	mov	x24, x0
  40bb04:	b	40bb0c <__fxstatat@plt+0x90bc>
  40bb08:	mov	x24, xzr
  40bb0c:	mov	x0, x20
  40bb10:	mov	x1, xzr
  40bb14:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  40bb18:	ldr	x8, [x25, #640]
  40bb1c:	cmp	x8, #0x2
  40bb20:	b.cc	40bc1c <__fxstatat@plt+0x91cc>  // b.lo, b.ul, b.last
  40bb24:	and	w8, w19, #0xff
  40bb28:	mov	w28, #0x1                   	// #1
  40bb2c:	adrp	x20, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40bb30:	stur	w8, [x29, #-4]
  40bb34:	ldr	x8, [x27, #56]
  40bb38:	ldr	x9, [x27]
  40bb3c:	ldr	x21, [x8, x28, lsl #3]
  40bb40:	cbz	x9, 40bb60 <__fxstatat@plt+0x9110>
  40bb44:	mov	x0, x21
  40bb48:	bl	40c308 <__fxstatat@plt+0x98b8>
  40bb4c:	mov	x22, x0
  40bb50:	ldr	x9, [x20, #680]
  40bb54:	add	x8, x24, #0x2
  40bb58:	cbnz	x9, 40bb70 <__fxstatat@plt+0x9120>
  40bb5c:	b	40bb94 <__fxstatat@plt+0x9144>
  40bb60:	mov	x22, xzr
  40bb64:	ldr	x9, [x20, #680]
  40bb68:	add	x8, x24, #0x2
  40bb6c:	cbz	x9, 40bb94 <__fxstatat@plt+0x9144>
  40bb70:	mov	x10, #0xfffffffffffffffd    	// #-3
  40bb74:	sub	x10, x10, x22
  40bb78:	mov	x23, xzr
  40bb7c:	cmp	x24, x10
  40bb80:	mov	w24, #0xa                   	// #10
  40bb84:	b.hi	40bb9c <__fxstatat@plt+0x914c>  // b.pmore
  40bb88:	add	x10, x8, x22
  40bb8c:	cmp	x10, x9
  40bb90:	b.cs	40bb9c <__fxstatat@plt+0x914c>  // b.hs, b.nlast
  40bb94:	mov	w24, #0x20                  	// #32
  40bb98:	mov	x23, x8
  40bb9c:	ldr	x0, [x26, #1456]
  40bba0:	ldp	x8, x9, [x0, #40]
  40bba4:	cmp	x8, x9
  40bba8:	b.cs	40bbf8 <__fxstatat@plt+0x91a8>  // b.hs, b.nlast
  40bbac:	add	x9, x8, #0x1
  40bbb0:	str	x9, [x0, #40]
  40bbb4:	strb	w19, [x8]
  40bbb8:	ldr	x0, [x26, #1456]
  40bbbc:	ldp	x8, x9, [x0, #40]
  40bbc0:	cmp	x8, x9
  40bbc4:	b.cs	40bc10 <__fxstatat@plt+0x91c0>  // b.hs, b.nlast
  40bbc8:	add	x9, x8, #0x1
  40bbcc:	str	x9, [x0, #40]
  40bbd0:	strb	w24, [x8]
  40bbd4:	mov	x0, x21
  40bbd8:	mov	x1, x23
  40bbdc:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  40bbe0:	ldr	x8, [x25, #640]
  40bbe4:	add	x28, x28, #0x1
  40bbe8:	add	x24, x23, x22
  40bbec:	cmp	x28, x8
  40bbf0:	b.cc	40bb34 <__fxstatat@plt+0x90e4>  // b.lo, b.ul, b.last
  40bbf4:	b	40bc1c <__fxstatat@plt+0x91cc>
  40bbf8:	ldur	w1, [x29, #-4]
  40bbfc:	bl	402790 <__overflow@plt>
  40bc00:	ldr	x0, [x26, #1456]
  40bc04:	ldp	x8, x9, [x0, #40]
  40bc08:	cmp	x8, x9
  40bc0c:	b.cc	40bbc8 <__fxstatat@plt+0x9178>  // b.lo, b.ul, b.last
  40bc10:	mov	w1, w24
  40bc14:	bl	402790 <__overflow@plt>
  40bc18:	b	40bbd4 <__fxstatat@plt+0x9184>
  40bc1c:	ldr	x0, [x26, #1456]
  40bc20:	ldp	x8, x9, [x0, #40]
  40bc24:	cmp	x8, x9
  40bc28:	b.cs	40bc5c <__fxstatat@plt+0x920c>  // b.hs, b.nlast
  40bc2c:	add	x9, x8, #0x1
  40bc30:	mov	w10, #0xa                   	// #10
  40bc34:	str	x9, [x0, #40]
  40bc38:	strb	w10, [x8]
  40bc3c:	ldp	x20, x19, [sp, #96]
  40bc40:	ldp	x22, x21, [sp, #80]
  40bc44:	ldp	x24, x23, [sp, #64]
  40bc48:	ldp	x26, x25, [sp, #48]
  40bc4c:	ldp	x28, x27, [sp, #32]
  40bc50:	ldp	x29, x30, [sp, #16]
  40bc54:	add	sp, sp, #0x70
  40bc58:	ret
  40bc5c:	ldp	x20, x19, [sp, #96]
  40bc60:	ldp	x22, x21, [sp, #80]
  40bc64:	ldp	x24, x23, [sp, #64]
  40bc68:	ldp	x26, x25, [sp, #48]
  40bc6c:	ldp	x28, x27, [sp, #32]
  40bc70:	ldp	x29, x30, [sp, #16]
  40bc74:	mov	w1, #0xa                   	// #10
  40bc78:	add	sp, sp, #0x70
  40bc7c:	b	402790 <__overflow@plt>
  40bc80:	stp	x29, x30, [sp, #-80]!
  40bc84:	tst	w1, #0x1
  40bc88:	mov	w8, #0x8                   	// #8
  40bc8c:	stp	x26, x25, [sp, #16]
  40bc90:	stp	x24, x23, [sp, #32]
  40bc94:	stp	x22, x21, [sp, #48]
  40bc98:	stp	x20, x19, [sp, #64]
  40bc9c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40bca0:	csel	x8, x8, xzr, ne  // ne = any
  40bca4:	ldrb	w9, [x9, #468]
  40bca8:	ldr	x23, [x0, x8]
  40bcac:	mov	x19, x3
  40bcb0:	mov	w20, w1
  40bcb4:	mov	x21, x0
  40bcb8:	mov	x22, x2
  40bcbc:	mov	x29, sp
  40bcc0:	cbz	w9, 40c088 <__fxstatat@plt+0x9638>
  40bcc4:	tbz	w20, #0, 40bd44 <__fxstatat@plt+0x92f4>
  40bcc8:	ldr	x24, [x21, #8]
  40bccc:	ldrb	w8, [x21, #169]
  40bcd0:	ldr	w25, [x21, #156]
  40bcd4:	cbz	w8, 40bdc0 <__fxstatat@plt+0x9370>
  40bcd8:	mov	w9, wzr
  40bcdc:	ldrb	w8, [x21, #168]
  40bce0:	cbnz	w8, 40bd7c <__fxstatat@plt+0x932c>
  40bce4:	ldr	w8, [x21, #152]
  40bce8:	cmp	w8, #0x8
  40bcec:	b.eq	40bcf8 <__fxstatat@plt+0x92a8>  // b.none
  40bcf0:	cmp	w8, #0x5
  40bcf4:	b.ne	40be00 <__fxstatat@plt+0x93b0>  // b.any
  40bcf8:	mov	x0, x24
  40bcfc:	bl	402430 <strlen@plt>
  40bd00:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40bd04:	ldr	x26, [x8, #728]
  40bd08:	cbz	x26, 40bd3c <__fxstatat@plt+0x92ec>
  40bd0c:	mov	x25, x0
  40bd10:	add	x24, x24, x0
  40bd14:	b	40bd20 <__fxstatat@plt+0x92d0>
  40bd18:	ldr	x26, [x26, #32]
  40bd1c:	cbz	x26, 40bd3c <__fxstatat@plt+0x92ec>
  40bd20:	ldr	x2, [x26]
  40bd24:	cmp	x2, x25
  40bd28:	b.hi	40bd18 <__fxstatat@plt+0x92c8>  // b.pmore
  40bd2c:	ldr	x1, [x26, #8]
  40bd30:	sub	x0, x24, x2
  40bd34:	bl	40cf78 <__fxstatat@plt+0xa528>
  40bd38:	cbnz	w0, 40bd18 <__fxstatat@plt+0x92c8>
  40bd3c:	mov	w8, #0x5                   	// #5
  40bd40:	b	40c02c <__fxstatat@plt+0x95dc>
  40bd44:	ldrb	w9, [x21, #169]
  40bd48:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40bd4c:	ldrb	w8, [x8, #471]
  40bd50:	mov	w10, #0x9c                  	// #156
  40bd54:	cmp	w9, #0x0
  40bd58:	cset	w11, eq  // eq = none
  40bd5c:	orn	w8, w11, w8
  40bd60:	tst	w8, #0x1
  40bd64:	mov	w8, #0x28                  	// #40
  40bd68:	csel	x8, x8, x10, ne  // ne = any
  40bd6c:	ldr	x24, [x21]
  40bd70:	ldr	w25, [x21, x8]
  40bd74:	ldrb	w8, [x21, #168]
  40bd78:	cbz	w8, 40bce4 <__fxstatat@plt+0x9294>
  40bd7c:	and	w8, w25, #0xf000
  40bd80:	sub	w8, w8, #0x1, lsl #12
  40bd84:	lsr	w10, w8, #12
  40bd88:	cmp	w10, #0xb
  40bd8c:	b.hi	40c024 <__fxstatat@plt+0x95d4>  // b.pmore
  40bd90:	adrp	x11, 417000 <_obstack_memory_used@@Base+0x1ad0>
  40bd94:	add	x11, x11, #0xa32
  40bd98:	adr	x12, 40bdb4 <__fxstatat@plt+0x9364>
  40bd9c:	ldrb	w13, [x11, x10]
  40bda0:	add	x12, x12, x13, lsl #2
  40bda4:	mov	x26, xzr
  40bda8:	mov	w8, #0x8                   	// #8
  40bdac:	mov	w10, #0x7                   	// #7
  40bdb0:	br	x12
  40bdb4:	mov	x26, xzr
  40bdb8:	mov	w8, #0xb                   	// #11
  40bdbc:	b	40c02c <__fxstatat@plt+0x95dc>
  40bdc0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40bdc4:	add	x9, x9, #0x448
  40bdc8:	ldr	x8, [x9]
  40bdcc:	cbz	x8, 40bdf0 <__fxstatat@plt+0x93a0>
  40bdd0:	ldr	x0, [x9, #8]
  40bdd4:	cmp	x8, #0x2
  40bdd8:	b.eq	40bfa8 <__fxstatat@plt+0x9558>  // b.none
  40bddc:	cmp	x8, #0x1
  40bde0:	b.ne	40bfbc <__fxstatat@plt+0x956c>  // b.any
  40bde4:	ldrb	w8, [x0]
  40bde8:	cmp	w8, #0x30
  40bdec:	b.ne	40bfbc <__fxstatat@plt+0x956c>  // b.any
  40bdf0:	mov	w9, #0xffffffff            	// #-1
  40bdf4:	ldrb	w8, [x21, #168]
  40bdf8:	cbnz	w8, 40bd7c <__fxstatat@plt+0x932c>
  40bdfc:	b	40bce4 <__fxstatat@plt+0x9294>
  40be00:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40be04:	add	x10, x10, #0x428
  40be08:	ldr	w10, [x10, x8, lsl #2]
  40be0c:	mov	x26, xzr
  40be10:	cbnz	w9, 40bfc8 <__fxstatat@plt+0x9578>
  40be14:	cmp	w10, #0x7
  40be18:	mov	w8, w10
  40be1c:	b.ne	40c02c <__fxstatat@plt+0x95dc>  // b.any
  40be20:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40be24:	ldrb	w8, [x8, #471]
  40be28:	tbnz	w8, #0, 40c024 <__fxstatat@plt+0x95d4>
  40be2c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40be30:	add	x9, x9, #0x458
  40be34:	ldr	x8, [x9]
  40be38:	cbz	x8, 40be5c <__fxstatat@plt+0x940c>
  40be3c:	ldr	x0, [x9, #8]
  40be40:	cmp	x8, #0x2
  40be44:	b.eq	40c010 <__fxstatat@plt+0x95c0>  // b.none
  40be48:	cmp	x8, #0x1
  40be4c:	b.ne	40c024 <__fxstatat@plt+0x95d4>  // b.any
  40be50:	ldrb	w8, [x0]
  40be54:	cmp	w8, #0x30
  40be58:	b.ne	40c024 <__fxstatat@plt+0x95d4>  // b.any
  40be5c:	mov	x26, xzr
  40be60:	mov	w8, #0x7                   	// #7
  40be64:	b	40c02c <__fxstatat@plt+0x95dc>
  40be68:	tst	w25, #0x200
  40be6c:	cset	w24, eq  // eq = none
  40be70:	tbz	w25, #1, 40bea8 <__fxstatat@plt+0x9458>
  40be74:	tbnz	w24, #0, 40bea8 <__fxstatat@plt+0x9458>
  40be78:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40be7c:	add	x9, x9, #0x4c8
  40be80:	ldr	x8, [x9]
  40be84:	cbz	x8, 40bea8 <__fxstatat@plt+0x9458>
  40be88:	ldr	x0, [x9, #8]
  40be8c:	cmp	x8, #0x2
  40be90:	b.eq	40c208 <__fxstatat@plt+0x97b8>  // b.none
  40be94:	cmp	x8, #0x1
  40be98:	b.ne	40c21c <__fxstatat@plt+0x97cc>  // b.any
  40be9c:	ldrb	w8, [x0]
  40bea0:	cmp	w8, #0x30
  40bea4:	b.ne	40c21c <__fxstatat@plt+0x97cc>  // b.any
  40bea8:	tbz	w25, #1, 40bfd0 <__fxstatat@plt+0x9580>
  40beac:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40beb0:	add	x9, x9, #0x4b8
  40beb4:	ldr	x8, [x9]
  40beb8:	cbz	x8, 40bfd0 <__fxstatat@plt+0x9580>
  40bebc:	ldr	x0, [x9, #8]
  40bec0:	cmp	x8, #0x2
  40bec4:	b.eq	40c248 <__fxstatat@plt+0x97f8>  // b.none
  40bec8:	cmp	x8, #0x1
  40becc:	b.ne	40c27c <__fxstatat@plt+0x982c>  // b.any
  40bed0:	ldrb	w8, [x0]
  40bed4:	mov	w9, #0x6                   	// #6
  40bed8:	cmp	w8, #0x30
  40bedc:	cset	w8, ne  // ne = any
  40bee0:	orr	w10, w8, w24
  40bee4:	mov	w8, #0x13                  	// #19
  40bee8:	csel	w8, w8, w9, ne  // ne = any
  40beec:	tbz	w10, #0, 40bfd4 <__fxstatat@plt+0x9584>
  40bef0:	b	40c274 <__fxstatat@plt+0x9824>
  40bef4:	mov	x26, xzr
  40bef8:	mov	w8, #0xa                   	// #10
  40befc:	b	40c02c <__fxstatat@plt+0x95dc>
  40bf00:	tbz	w25, #11, 40bf34 <__fxstatat@plt+0x94e4>
  40bf04:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40bf08:	add	x9, x9, #0x488
  40bf0c:	ldr	x8, [x9]
  40bf10:	cbz	x8, 40bf34 <__fxstatat@plt+0x94e4>
  40bf14:	ldr	x0, [x9, #8]
  40bf18:	cmp	x8, #0x2
  40bf1c:	b.eq	40c228 <__fxstatat@plt+0x97d8>  // b.none
  40bf20:	cmp	x8, #0x1
  40bf24:	b.ne	40c23c <__fxstatat@plt+0x97ec>  // b.any
  40bf28:	ldrb	w8, [x0]
  40bf2c:	cmp	w8, #0x30
  40bf30:	b.ne	40c23c <__fxstatat@plt+0x97ec>  // b.any
  40bf34:	tbz	w25, #10, 40bf68 <__fxstatat@plt+0x9518>
  40bf38:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40bf3c:	add	x9, x9, #0x498
  40bf40:	ldr	x8, [x9]
  40bf44:	cbz	x8, 40bf68 <__fxstatat@plt+0x9518>
  40bf48:	ldr	x0, [x9, #8]
  40bf4c:	cmp	x8, #0x2
  40bf50:	b.eq	40c288 <__fxstatat@plt+0x9838>  // b.none
  40bf54:	cmp	x8, #0x1
  40bf58:	b.ne	40c29c <__fxstatat@plt+0x984c>  // b.any
  40bf5c:	ldrb	w8, [x0]
  40bf60:	cmp	w8, #0x30
  40bf64:	b.ne	40c29c <__fxstatat@plt+0x984c>  // b.any
  40bf68:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40bf6c:	add	x9, x9, #0x4d8
  40bf70:	ldr	x8, [x9]
  40bf74:	cbz	x8, 40c18c <__fxstatat@plt+0x973c>
  40bf78:	ldr	x0, [x9, #8]
  40bf7c:	cmp	x8, #0x2
  40bf80:	b.eq	40c164 <__fxstatat@plt+0x9714>  // b.none
  40bf84:	cmp	x8, #0x1
  40bf88:	b.ne	40c178 <__fxstatat@plt+0x9728>  // b.any
  40bf8c:	ldrb	w8, [x0]
  40bf90:	cmp	w8, #0x30
  40bf94:	b.ne	40c178 <__fxstatat@plt+0x9728>  // b.any
  40bf98:	b	40c18c <__fxstatat@plt+0x973c>
  40bf9c:	mov	x26, xzr
  40bfa0:	mov	w8, #0x9                   	// #9
  40bfa4:	b	40c02c <__fxstatat@plt+0x95dc>
  40bfa8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40bfac:	add	x1, x1, #0x20e
  40bfb0:	mov	w2, #0x2                   	// #2
  40bfb4:	bl	402640 <strncmp@plt>
  40bfb8:	cbz	w0, 40bdf0 <__fxstatat@plt+0x93a0>
  40bfbc:	mov	x26, xzr
  40bfc0:	mov	w8, #0xc                   	// #12
  40bfc4:	b	40c02c <__fxstatat@plt+0x95dc>
  40bfc8:	mov	w8, w10
  40bfcc:	b	40c02c <__fxstatat@plt+0x95dc>
  40bfd0:	tbz	w25, #9, 40c004 <__fxstatat@plt+0x95b4>
  40bfd4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40bfd8:	add	x9, x9, #0x4a8
  40bfdc:	ldr	x8, [x9]
  40bfe0:	cbz	x8, 40c004 <__fxstatat@plt+0x95b4>
  40bfe4:	ldr	x0, [x9, #8]
  40bfe8:	cmp	x8, #0x2
  40bfec:	b.eq	40c2a8 <__fxstatat@plt+0x9858>  // b.none
  40bff0:	cmp	x8, #0x1
  40bff4:	b.ne	40c2bc <__fxstatat@plt+0x986c>  // b.any
  40bff8:	ldrb	w8, [x0]
  40bffc:	cmp	w8, #0x30
  40c000:	b.ne	40c2bc <__fxstatat@plt+0x986c>  // b.any
  40c004:	mov	x26, xzr
  40c008:	mov	w8, #0x6                   	// #6
  40c00c:	b	40c02c <__fxstatat@plt+0x95dc>
  40c010:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c014:	add	x1, x1, #0x20e
  40c018:	mov	w2, #0x2                   	// #2
  40c01c:	bl	402640 <strncmp@plt>
  40c020:	cbz	w0, 40be5c <__fxstatat@plt+0x940c>
  40c024:	mov	x26, xzr
  40c028:	mov	w8, #0xd                   	// #13
  40c02c:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40c030:	add	x10, x10, #0x368
  40c034:	add	x8, x10, w8, uxtw #4
  40c038:	add	x9, x26, #0x10
  40c03c:	add	x8, x8, #0x20
  40c040:	cmp	x26, #0x0
  40c044:	csel	x3, x8, x9, eq  // eq = none
  40c048:	ldr	x8, [x3, #8]
  40c04c:	cbz	x8, 40c058 <__fxstatat@plt+0x9608>
  40c050:	mov	w24, #0x1                   	// #1
  40c054:	b	40c090 <__fxstatat@plt+0x9640>
  40c058:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40c05c:	add	x9, x9, #0x3c8
  40c060:	ldr	x8, [x9]
  40c064:	cbz	x8, 40c088 <__fxstatat@plt+0x9638>
  40c068:	ldr	x0, [x9, #8]
  40c06c:	cmp	x8, #0x2
  40c070:	b.eq	40c144 <__fxstatat@plt+0x96f4>  // b.none
  40c074:	cmp	x8, #0x1
  40c078:	b.ne	40c13c <__fxstatat@plt+0x96ec>  // b.any
  40c07c:	ldrb	w8, [x0]
  40c080:	cmp	w8, #0x30
  40c084:	b.ne	40c13c <__fxstatat@plt+0x96ec>  // b.any
  40c088:	mov	x3, xzr
  40c08c:	mov	w24, wzr
  40c090:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c094:	ldr	w2, [x21, #180]
  40c098:	ldr	x1, [x8, #656]
  40c09c:	ldr	x6, [x21, #16]
  40c0a0:	mvn	w8, w20
  40c0a4:	and	w4, w8, #0x1
  40c0a8:	mov	x0, x23
  40c0ac:	mov	x5, x22
  40c0b0:	bl	40907c <__fxstatat@plt+0x662c>
  40c0b4:	mov	x20, x0
  40c0b8:	bl	409500 <__fxstatat@plt+0x6ab0>
  40c0bc:	cbz	w24, 40c120 <__fxstatat@plt+0x96d0>
  40c0c0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40c0c4:	add	x0, x0, #0x3a8
  40c0c8:	ldr	x8, [x0, #8]
  40c0cc:	cbnz	x8, 40c0ec <__fxstatat@plt+0x969c>
  40c0d0:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40c0d4:	add	x21, x21, #0x388
  40c0d8:	mov	x0, x21
  40c0dc:	bl	408560 <__fxstatat@plt+0x5b10>
  40c0e0:	add	x0, x21, #0x30
  40c0e4:	bl	408560 <__fxstatat@plt+0x5b10>
  40c0e8:	add	x0, x21, #0x10
  40c0ec:	bl	408560 <__fxstatat@plt+0x5b10>
  40c0f0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c0f4:	ldr	x8, [x8, #680]
  40c0f8:	cbz	x8, 40c120 <__fxstatat@plt+0x96d0>
  40c0fc:	add	x10, x19, x20
  40c100:	sub	x10, x10, #0x1
  40c104:	udiv	x9, x19, x8
  40c108:	udiv	x8, x10, x8
  40c10c:	cmp	x9, x8
  40c110:	b.eq	40c120 <__fxstatat@plt+0x96d0>  // b.none
  40c114:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40c118:	add	x0, x0, #0x4f8
  40c11c:	bl	408560 <__fxstatat@plt+0x5b10>
  40c120:	mov	x0, x20
  40c124:	ldp	x20, x19, [sp, #64]
  40c128:	ldp	x22, x21, [sp, #48]
  40c12c:	ldp	x24, x23, [sp, #32]
  40c130:	ldp	x26, x25, [sp, #16]
  40c134:	ldp	x29, x30, [sp], #80
  40c138:	ret
  40c13c:	mov	x3, xzr
  40c140:	b	40c050 <__fxstatat@plt+0x9600>
  40c144:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c148:	add	x1, x1, #0x20e
  40c14c:	mov	w2, #0x2                   	// #2
  40c150:	bl	402640 <strncmp@plt>
  40c154:	cmp	w0, #0x0
  40c158:	mov	x3, xzr
  40c15c:	cset	w24, ne  // ne = any
  40c160:	b	40c090 <__fxstatat@plt+0x9640>
  40c164:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c168:	add	x1, x1, #0x20e
  40c16c:	mov	w2, #0x2                   	// #2
  40c170:	bl	402640 <strncmp@plt>
  40c174:	cbz	w0, 40c18c <__fxstatat@plt+0x973c>
  40c178:	ldrb	w8, [x21, #176]
  40c17c:	cbz	w8, 40c18c <__fxstatat@plt+0x973c>
  40c180:	mov	x26, xzr
  40c184:	mov	w8, #0x15                  	// #21
  40c188:	b	40c02c <__fxstatat@plt+0x95dc>
  40c18c:	mov	w8, #0x49                  	// #73
  40c190:	tst	w25, w8
  40c194:	b.eq	40c1c8 <__fxstatat@plt+0x9778>  // b.none
  40c198:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40c19c:	add	x9, x9, #0x468
  40c1a0:	ldr	x8, [x9]
  40c1a4:	cbz	x8, 40c1c8 <__fxstatat@plt+0x9778>
  40c1a8:	ldr	x0, [x9, #8]
  40c1ac:	cmp	x8, #0x2
  40c1b0:	b.eq	40c2c8 <__fxstatat@plt+0x9878>  // b.none
  40c1b4:	cmp	x8, #0x1
  40c1b8:	b.ne	40c2dc <__fxstatat@plt+0x988c>  // b.any
  40c1bc:	ldrb	w8, [x0]
  40c1c0:	cmp	w8, #0x30
  40c1c4:	b.ne	40c2dc <__fxstatat@plt+0x988c>  // b.any
  40c1c8:	ldr	w8, [x21, #44]
  40c1cc:	cmp	w8, #0x2
  40c1d0:	b.cc	40bcf8 <__fxstatat@plt+0x92a8>  // b.lo, b.ul, b.last
  40c1d4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40c1d8:	add	x9, x9, #0x4e8
  40c1dc:	ldr	x8, [x9]
  40c1e0:	cbz	x8, 40bcf8 <__fxstatat@plt+0x92a8>
  40c1e4:	ldr	x0, [x9, #8]
  40c1e8:	cmp	x8, #0x2
  40c1ec:	b.eq	40c2e8 <__fxstatat@plt+0x9898>  // b.none
  40c1f0:	cmp	x8, #0x1
  40c1f4:	b.ne	40c2fc <__fxstatat@plt+0x98ac>  // b.any
  40c1f8:	ldrb	w8, [x0]
  40c1fc:	cmp	w8, #0x30
  40c200:	b.eq	40bcf8 <__fxstatat@plt+0x92a8>  // b.none
  40c204:	b	40c2fc <__fxstatat@plt+0x98ac>
  40c208:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c20c:	add	x1, x1, #0x20e
  40c210:	mov	w2, #0x2                   	// #2
  40c214:	bl	402640 <strncmp@plt>
  40c218:	cbz	w0, 40bea8 <__fxstatat@plt+0x9458>
  40c21c:	mov	x26, xzr
  40c220:	mov	w8, #0x14                  	// #20
  40c224:	b	40c02c <__fxstatat@plt+0x95dc>
  40c228:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c22c:	add	x1, x1, #0x20e
  40c230:	mov	w2, #0x2                   	// #2
  40c234:	bl	402640 <strncmp@plt>
  40c238:	cbz	w0, 40bf34 <__fxstatat@plt+0x94e4>
  40c23c:	mov	x26, xzr
  40c240:	mov	w8, #0x10                  	// #16
  40c244:	b	40c02c <__fxstatat@plt+0x95dc>
  40c248:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c24c:	add	x1, x1, #0x20e
  40c250:	mov	w2, #0x2                   	// #2
  40c254:	bl	402640 <strncmp@plt>
  40c258:	cmp	w0, #0x0
  40c25c:	mov	w8, #0x6                   	// #6
  40c260:	cset	w9, ne  // ne = any
  40c264:	mov	w10, #0x13                  	// #19
  40c268:	orr	w9, w9, w24
  40c26c:	csel	w8, w10, w8, ne  // ne = any
  40c270:	tbz	w9, #0, 40bfd4 <__fxstatat@plt+0x9584>
  40c274:	mov	x26, xzr
  40c278:	b	40c02c <__fxstatat@plt+0x95dc>
  40c27c:	mov	x26, xzr
  40c280:	mov	w8, #0x13                  	// #19
  40c284:	b	40c02c <__fxstatat@plt+0x95dc>
  40c288:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c28c:	add	x1, x1, #0x20e
  40c290:	mov	w2, #0x2                   	// #2
  40c294:	bl	402640 <strncmp@plt>
  40c298:	cbz	w0, 40bf68 <__fxstatat@plt+0x9518>
  40c29c:	mov	x26, xzr
  40c2a0:	mov	w8, #0x11                  	// #17
  40c2a4:	b	40c02c <__fxstatat@plt+0x95dc>
  40c2a8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c2ac:	add	x1, x1, #0x20e
  40c2b0:	mov	w2, #0x2                   	// #2
  40c2b4:	bl	402640 <strncmp@plt>
  40c2b8:	cbz	w0, 40c004 <__fxstatat@plt+0x95b4>
  40c2bc:	mov	x26, xzr
  40c2c0:	mov	w8, #0x12                  	// #18
  40c2c4:	b	40c02c <__fxstatat@plt+0x95dc>
  40c2c8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c2cc:	add	x1, x1, #0x20e
  40c2d0:	mov	w2, #0x2                   	// #2
  40c2d4:	bl	402640 <strncmp@plt>
  40c2d8:	cbz	w0, 40c1c8 <__fxstatat@plt+0x9778>
  40c2dc:	mov	x26, xzr
  40c2e0:	mov	w8, #0xe                   	// #14
  40c2e4:	b	40c02c <__fxstatat@plt+0x95dc>
  40c2e8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c2ec:	add	x1, x1, #0x20e
  40c2f0:	mov	w2, #0x2                   	// #2
  40c2f4:	bl	402640 <strncmp@plt>
  40c2f8:	cbz	w0, 40bcf8 <__fxstatat@plt+0x92a8>
  40c2fc:	mov	x26, xzr
  40c300:	mov	w8, #0x16                  	// #22
  40c304:	b	40c02c <__fxstatat@plt+0x95dc>
  40c308:	stp	x29, x30, [sp, #-64]!
  40c30c:	str	x28, [sp, #16]
  40c310:	stp	x22, x21, [sp, #32]
  40c314:	stp	x20, x19, [sp, #48]
  40c318:	mov	x29, sp
  40c31c:	sub	sp, sp, #0x2, lsl #12
  40c320:	sub	sp, sp, #0x2a0
  40c324:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c328:	ldrb	w8, [x8, #489]
  40c32c:	mov	x19, x0
  40c330:	cmp	w8, #0x1
  40c334:	b.ne	40c35c <__fxstatat@plt+0x990c>  // b.any
  40c338:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c33c:	ldr	w8, [x8, #508]
  40c340:	cmp	w8, #0x4
  40c344:	b.ne	40c374 <__fxstatat@plt+0x9924>  // b.any
  40c348:	ldr	x0, [x19, #32]
  40c34c:	add	x1, sp, #0x8
  40c350:	bl	40ffa0 <__fxstatat@plt+0xd550>
  40c354:	bl	402430 <strlen@plt>
  40c358:	b	40c37c <__fxstatat@plt+0x992c>
  40c35c:	mov	x21, xzr
  40c360:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c364:	ldrb	w8, [x8, #475]
  40c368:	cmp	w8, #0x1
  40c36c:	b.eq	40c390 <__fxstatat@plt+0x9940>  // b.none
  40c370:	b	40c3ec <__fxstatat@plt+0x999c>
  40c374:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c378:	ldrsw	x0, [x8, #548]
  40c37c:	add	x21, x0, #0x1
  40c380:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c384:	ldrb	w8, [x8, #475]
  40c388:	cmp	w8, #0x1
  40c38c:	b.ne	40c3ec <__fxstatat@plt+0x999c>  // b.any
  40c390:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c394:	ldr	w8, [x8, #508]
  40c398:	cmp	w8, #0x4
  40c39c:	b.ne	40c3cc <__fxstatat@plt+0x997c>  // b.any
  40c3a0:	ldrb	w8, [x19, #168]
  40c3a4:	cbz	w8, 40c3d8 <__fxstatat@plt+0x9988>
  40c3a8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c3ac:	add	x8, x8, #0x21c
  40c3b0:	ldr	x0, [x19, #88]
  40c3b4:	ldr	w2, [x8]
  40c3b8:	ldur	x4, [x8, #156]
  40c3bc:	add	x1, sp, #0x8
  40c3c0:	mov	w3, #0x200                 	// #512
  40c3c4:	bl	40f2c8 <__fxstatat@plt+0xc878>
  40c3c8:	b	40c3e0 <__fxstatat@plt+0x9990>
  40c3cc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c3d0:	ldrsw	x0, [x8, #552]
  40c3d4:	b	40c3e4 <__fxstatat@plt+0x9994>
  40c3d8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40c3dc:	add	x0, x0, #0x76e
  40c3e0:	bl	402430 <strlen@plt>
  40c3e4:	add	x8, x21, x0
  40c3e8:	add	x21, x8, #0x1
  40c3ec:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c3f0:	ldrb	w8, [x8, #474]
  40c3f4:	cmp	w8, #0x1
  40c3f8:	b.ne	40c428 <__fxstatat@plt+0x99d8>  // b.any
  40c3fc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c400:	ldr	w8, [x8, #508]
  40c404:	cmp	w8, #0x4
  40c408:	b.ne	40c418 <__fxstatat@plt+0x99c8>  // b.any
  40c40c:	ldr	x0, [x19, #160]
  40c410:	bl	402430 <strlen@plt>
  40c414:	b	40c420 <__fxstatat@plt+0x99d0>
  40c418:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c41c:	ldrsw	x0, [x8, #572]
  40c420:	add	x8, x21, x0
  40c424:	add	x21, x8, #0x1
  40c428:	ldr	x20, [x19]
  40c42c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c430:	ldr	x2, [x8, #656]
  40c434:	ldr	w3, [x19, #180]
  40c438:	add	x22, sp, #0x2a0
  40c43c:	add	x0, x29, #0x18
  40c440:	add	x4, sp, #0x298
  40c444:	add	x5, sp, #0x294
  40c448:	mov	x1, x20
  40c44c:	str	x22, [x29, #24]
  40c450:	bl	4095e0 <__fxstatat@plt+0x6b90>
  40c454:	ldr	x0, [x29, #24]
  40c458:	cmp	x0, x22
  40c45c:	b.eq	40c46c <__fxstatat@plt+0x9a1c>  // b.none
  40c460:	cmp	x0, x20
  40c464:	b.eq	40c46c <__fxstatat@plt+0x9a1c>  // b.none
  40c468:	bl	402840 <free@plt>
  40c46c:	ldrb	w8, [sp, #660]
  40c470:	ldr	x9, [sp, #664]
  40c474:	adrp	x10, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c478:	ldr	w10, [x10, #516]
  40c47c:	add	x8, x21, x8
  40c480:	add	x0, x8, x9
  40c484:	cbz	w10, 40c508 <__fxstatat@plt+0x9ab8>
  40c488:	ldrb	w11, [x19, #168]
  40c48c:	ldr	w8, [x19, #40]
  40c490:	ldr	w12, [x19, #152]
  40c494:	cbz	w11, 40c4d4 <__fxstatat@plt+0x9a84>
  40c498:	and	w9, w8, #0xf000
  40c49c:	cmp	w9, #0x4, lsl #12
  40c4a0:	b.eq	40c500 <__fxstatat@plt+0x9ab0>  // b.none
  40c4a4:	cmp	w9, #0x8, lsl #12
  40c4a8:	b.ne	40c4f0 <__fxstatat@plt+0x9aa0>  // b.any
  40c4ac:	cmp	w11, #0x0
  40c4b0:	mov	w9, #0x49                  	// #73
  40c4b4:	cset	w11, ne  // ne = any
  40c4b8:	cmp	w10, #0x3
  40c4bc:	cset	w10, eq  // eq = none
  40c4c0:	tst	w8, w9
  40c4c4:	and	w8, w10, w11
  40c4c8:	cset	w9, ne  // ne = any
  40c4cc:	and	w9, w8, w9
  40c4d0:	b	40c504 <__fxstatat@plt+0x9ab4>
  40c4d4:	cmp	w12, #0x3
  40c4d8:	mov	w9, #0x1                   	// #1
  40c4dc:	b.eq	40c504 <__fxstatat@plt+0x9ab4>  // b.none
  40c4e0:	cmp	w12, #0x9
  40c4e4:	b.eq	40c504 <__fxstatat@plt+0x9ab4>  // b.none
  40c4e8:	cmp	w12, #0x5
  40c4ec:	b.eq	40c4ac <__fxstatat@plt+0x9a5c>  // b.none
  40c4f0:	cmp	w10, #0x1
  40c4f4:	b.ne	40c524 <__fxstatat@plt+0x9ad4>  // b.any
  40c4f8:	mov	x9, xzr
  40c4fc:	b	40c504 <__fxstatat@plt+0x9ab4>
  40c500:	mov	w9, #0x1                   	// #1
  40c504:	add	x0, x9, x0
  40c508:	add	sp, sp, #0x2, lsl #12
  40c50c:	add	sp, sp, #0x2a0
  40c510:	ldp	x20, x19, [sp, #48]
  40c514:	ldp	x22, x21, [sp, #32]
  40c518:	ldr	x28, [sp, #16]
  40c51c:	ldp	x29, x30, [sp], #64
  40c520:	ret
  40c524:	cbz	w11, 40c54c <__fxstatat@plt+0x9afc>
  40c528:	and	w8, w8, #0xf000
  40c52c:	cmp	w8, #0x1, lsl #12
  40c530:	mov	w9, #0x1                   	// #1
  40c534:	b.eq	40c504 <__fxstatat@plt+0x9ab4>  // b.none
  40c538:	cmp	w8, #0xa, lsl #12
  40c53c:	b.eq	40c504 <__fxstatat@plt+0x9ab4>  // b.none
  40c540:	cmp	w8, #0xc, lsl #12
  40c544:	b.eq	40c504 <__fxstatat@plt+0x9ab4>  // b.none
  40c548:	b	40c4f8 <__fxstatat@plt+0x9aa8>
  40c54c:	sub	w8, w12, #0x1
  40c550:	cmp	w8, #0x7
  40c554:	b.cs	40c4f8 <__fxstatat@plt+0x9aa8>  // b.hs, b.nlast
  40c558:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40c55c:	add	x9, x9, #0x4f8
  40c560:	ldr	x9, [x9, w8, sxtw #3]
  40c564:	b	40c504 <__fxstatat@plt+0x9ab4>
  40c568:	stp	x29, x30, [sp, #-80]!
  40c56c:	stp	x22, x21, [sp, #48]
  40c570:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c574:	add	x21, x21, #0x280
  40c578:	ldr	x8, [x21, #64]
  40c57c:	ldr	x9, [x21]
  40c580:	ldr	x10, [x21, #144]
  40c584:	stp	x20, x19, [sp, #64]
  40c588:	mov	w19, w0
  40c58c:	cmp	x8, x9
  40c590:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40c594:	cmp	x10, x20
  40c598:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c59c:	stp	x26, x25, [sp, #16]
  40c5a0:	stp	x24, x23, [sp, #32]
  40c5a4:	mov	x29, sp
  40c5a8:	b.cs	40c68c <__fxstatat@plt+0x9c3c>  // b.hs, b.nlast
  40c5ac:	ldr	x0, [x22, #776]
  40c5b0:	cmp	x20, x8, lsr #1
  40c5b4:	b.cs	40c5e4 <__fxstatat@plt+0x9b94>  // b.hs, b.nlast
  40c5b8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40c5bc:	movk	x8, #0xaaab
  40c5c0:	movk	x8, #0x2aa, lsl #48
  40c5c4:	cmp	x20, x8
  40c5c8:	b.cs	40c88c <__fxstatat@plt+0x9e3c>  // b.hs, b.nlast
  40c5cc:	lsl	x23, x20, #1
  40c5d0:	add	x8, x23, x20
  40c5d4:	lsl	x1, x8, #4
  40c5d8:	bl	4143e8 <__fxstatat@plt+0x11998>
  40c5dc:	str	x0, [x22, #776]
  40c5e0:	b	40c614 <__fxstatat@plt+0x9bc4>
  40c5e4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40c5e8:	movk	x9, #0x5556
  40c5ec:	movk	x9, #0x555, lsl #48
  40c5f0:	cmp	x8, x9
  40c5f4:	b.cs	40c88c <__fxstatat@plt+0x9e3c>  // b.hs, b.nlast
  40c5f8:	add	x8, x8, x8, lsl #1
  40c5fc:	lsl	x1, x8, #3
  40c600:	bl	4143e8 <__fxstatat@plt+0x11998>
  40c604:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c608:	add	x8, x8, #0x2c0
  40c60c:	ldr	x23, [x8]
  40c610:	str	x0, [x8, #72]
  40c614:	adrp	x24, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c618:	ldr	x9, [x24, #784]
  40c61c:	sub	x8, x23, x9
  40c620:	add	x9, x23, x9
  40c624:	add	x9, x9, #0x1
  40c628:	umulh	x10, x8, x9
  40c62c:	cmp	xzr, x10
  40c630:	cset	w10, ne  // ne = any
  40c634:	cmp	x9, x23
  40c638:	b.cc	40c88c <__fxstatat@plt+0x9e3c>  // b.lo, b.ul, b.last
  40c63c:	cbnz	w10, 40c88c <__fxstatat@plt+0x9e3c>
  40c640:	mul	x8, x8, x9
  40c644:	lsr	x9, x8, #61
  40c648:	cbnz	x9, 40c88c <__fxstatat@plt+0x9e3c>
  40c64c:	lsl	x8, x8, #2
  40c650:	and	x0, x8, #0xfffffffffffffff8
  40c654:	bl	414368 <__fxstatat@plt+0x11918>
  40c658:	ldr	x8, [x24, #784]
  40c65c:	cmp	x8, x23
  40c660:	b.cs	40c688 <__fxstatat@plt+0x9c38>  // b.hs, b.nlast
  40c664:	ldr	x9, [x22, #776]
  40c668:	mov	w10, #0x18                  	// #24
  40c66c:	madd	x9, x8, x10, x9
  40c670:	add	x9, x9, #0x10
  40c674:	add	x8, x8, #0x1
  40c678:	str	x0, [x9], #24
  40c67c:	cmp	x23, x8
  40c680:	add	x0, x0, x8, lsl #3
  40c684:	b.ne	40c674 <__fxstatat@plt+0x9c24>  // b.any
  40c688:	str	x23, [x24, #784]
  40c68c:	cbz	x20, 40c71c <__fxstatat@plt+0x9ccc>
  40c690:	ldr	x8, [x22, #776]
  40c694:	mov	x10, xzr
  40c698:	mov	w9, #0x1                   	// #1
  40c69c:	mov	w11, #0x18                  	// #24
  40c6a0:	mov	w12, #0x3                   	// #3
  40c6a4:	mov	w13, #0x1                   	// #1
  40c6a8:	b	40c6b8 <__fxstatat@plt+0x9c68>
  40c6ac:	cmp	x10, x20
  40c6b0:	add	x13, x13, #0x1
  40c6b4:	b.cs	40c71c <__fxstatat@plt+0x9ccc>  // b.hs, b.nlast
  40c6b8:	madd	x15, x10, x11, x8
  40c6bc:	ldr	x14, [x15, #16]
  40c6c0:	add	x10, x10, #0x1
  40c6c4:	add	x16, x10, x10, lsl #1
  40c6c8:	cmp	x10, #0x4
  40c6cc:	strb	w9, [x15]
  40c6d0:	str	x16, [x15, #8]
  40c6d4:	b.cs	40c6e0 <__fxstatat@plt+0x9c90>  // b.hs, b.nlast
  40c6d8:	mov	x15, xzr
  40c6dc:	b	40c708 <__fxstatat@plt+0x9cb8>
  40c6e0:	and	x16, x13, #0xfffffffffffffffc
  40c6e4:	and	x15, x10, #0xfffffffffffffffc
  40c6e8:	add	x17, x14, #0x10
  40c6ec:	dup	v0.2d, x12
  40c6f0:	subs	x16, x16, #0x4
  40c6f4:	stp	q0, q0, [x17, #-16]
  40c6f8:	add	x17, x17, #0x20
  40c6fc:	b.ne	40c6ec <__fxstatat@plt+0x9c9c>  // b.any
  40c700:	cmp	x10, x15
  40c704:	b.eq	40c6ac <__fxstatat@plt+0x9c5c>  // b.none
  40c708:	str	x12, [x14, x15, lsl #3]
  40c70c:	add	x15, x15, #0x1
  40c710:	cmp	x13, x15
  40c714:	b.ne	40c708 <__fxstatat@plt+0x9cb8>  // b.any
  40c718:	b	40c6ac <__fxstatat@plt+0x9c5c>
  40c71c:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c720:	ldr	x8, [x23, #640]
  40c724:	cbz	x8, 40c84c <__fxstatat@plt+0x9dfc>
  40c728:	mov	x24, xzr
  40c72c:	adrp	x25, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40c730:	mov	w26, #0x18                  	// #24
  40c734:	b	40c748 <__fxstatat@plt+0x9cf8>
  40c738:	ldr	x8, [x23, #640]
  40c73c:	add	x24, x24, #0x1
  40c740:	cmp	x24, x8
  40c744:	b.cs	40c84c <__fxstatat@plt+0x9dfc>  // b.hs, b.nlast
  40c748:	ldr	x8, [x25, #736]
  40c74c:	ldr	x0, [x8, x24, lsl #3]
  40c750:	bl	40c308 <__fxstatat@plt+0x98b8>
  40c754:	cbz	x20, 40c738 <__fxstatat@plt+0x9ce8>
  40c758:	ldr	x10, [x21, #136]
  40c75c:	ldr	x8, [x21]
  40c760:	ldr	x9, [x21, #40]
  40c764:	mov	x12, xzr
  40c768:	tbnz	w19, #0, 40c7e8 <__fxstatat@plt+0x9d98>
  40c76c:	add	x10, x10, #0x8
  40c770:	b	40c784 <__fxstatat@plt+0x9d34>
  40c774:	cmp	x11, x20
  40c778:	add	x10, x10, #0x18
  40c77c:	mov	x12, x11
  40c780:	b.cs	40c73c <__fxstatat@plt+0x9cec>  // b.hs, b.nlast
  40c784:	ldurb	w13, [x10, #-8]
  40c788:	add	x11, x12, #0x1
  40c78c:	cbz	w13, 40c774 <__fxstatat@plt+0x9d24>
  40c790:	ldr	x13, [x10, #8]
  40c794:	udiv	x14, x24, x11
  40c798:	msub	x14, x14, x11, x24
  40c79c:	cmp	x12, x14
  40c7a0:	ldr	x15, [x13, x14, lsl #3]
  40c7a4:	cset	w12, ne  // ne = any
  40c7a8:	add	x12, x0, w12, uxtw #1
  40c7ac:	subs	x15, x12, x15
  40c7b0:	b.ls	40c774 <__fxstatat@plt+0x9d24>  // b.plast
  40c7b4:	ldr	x16, [x10]
  40c7b8:	add	x15, x15, x16
  40c7bc:	str	x15, [x10]
  40c7c0:	str	x12, [x13, x14, lsl #3]
  40c7c4:	ldr	x12, [x10]
  40c7c8:	cmp	x12, x9
  40c7cc:	cset	w12, cc  // cc = lo, ul, last
  40c7d0:	sturb	w12, [x10, #-8]
  40c7d4:	b	40c774 <__fxstatat@plt+0x9d24>
  40c7d8:	add	x13, x12, #0x1
  40c7dc:	cmp	x13, x20
  40c7e0:	mov	x12, x13
  40c7e4:	b.cs	40c73c <__fxstatat@plt+0x9cec>  // b.hs, b.nlast
  40c7e8:	madd	x11, x12, x26, x10
  40c7ec:	ldrb	w13, [x11]
  40c7f0:	cbz	w13, 40c7d8 <__fxstatat@plt+0x9d88>
  40c7f4:	madd	x13, x12, x26, x10
  40c7f8:	ldr	x14, [x13, #16]
  40c7fc:	add	x15, x8, x12
  40c800:	add	x13, x12, #0x1
  40c804:	udiv	x15, x15, x13
  40c808:	udiv	x15, x24, x15
  40c80c:	ldr	x17, [x14, x15, lsl #3]
  40c810:	cmp	x15, x12
  40c814:	cset	w16, ne  // ne = any
  40c818:	add	x16, x0, w16, uxtw #1
  40c81c:	subs	x17, x16, x17
  40c820:	b.ls	40c7dc <__fxstatat@plt+0x9d8c>  // b.plast
  40c824:	madd	x12, x12, x26, x10
  40c828:	ldr	x18, [x12, #8]
  40c82c:	add	x17, x17, x18
  40c830:	str	x17, [x12, #8]
  40c834:	str	x16, [x14, x15, lsl #3]
  40c838:	ldr	x12, [x12, #8]
  40c83c:	cmp	x12, x9
  40c840:	cset	w12, cc  // cc = lo, ul, last
  40c844:	strb	w12, [x11]
  40c848:	b	40c7dc <__fxstatat@plt+0x9d8c>
  40c84c:	ldr	x8, [x22, #776]
  40c850:	mov	w9, #0x18                  	// #24
  40c854:	madd	x8, x20, x9, x8
  40c858:	sub	x8, x8, #0x18
  40c85c:	mov	x0, x20
  40c860:	cmp	x20, #0x2
  40c864:	b.cc	40c874 <__fxstatat@plt+0x9e24>  // b.lo, b.ul, b.last
  40c868:	ldrb	w9, [x8], #-24
  40c86c:	sub	x20, x0, #0x1
  40c870:	cbz	w9, 40c85c <__fxstatat@plt+0x9e0c>
  40c874:	ldp	x20, x19, [sp, #64]
  40c878:	ldp	x22, x21, [sp, #48]
  40c87c:	ldp	x24, x23, [sp, #32]
  40c880:	ldp	x26, x25, [sp, #16]
  40c884:	ldp	x29, x30, [sp], #80
  40c888:	ret
  40c88c:	bl	4146a4 <__fxstatat@plt+0x11c54>
  40c890:	stp	x29, x30, [sp, #-64]!
  40c894:	cmp	x1, #0x401
  40c898:	mov	w8, #0x401                 	// #1025
  40c89c:	stp	x20, x19, [sp, #48]
  40c8a0:	mov	x19, x0
  40c8a4:	csinc	x20, x8, x1, cs  // cs = hs, nlast
  40c8a8:	stp	x24, x23, [sp, #16]
  40c8ac:	stp	x22, x21, [sp, #32]
  40c8b0:	mov	x29, sp
  40c8b4:	b	40c8bc <__fxstatat@plt+0x9e6c>
  40c8b8:	lsl	x20, x20, #1
  40c8bc:	mov	x0, x20
  40c8c0:	bl	4025f0 <malloc@plt>
  40c8c4:	mov	x21, x0
  40c8c8:	cbz	x0, 40c94c <__fxstatat@plt+0x9efc>
  40c8cc:	mov	x0, x19
  40c8d0:	mov	x1, x21
  40c8d4:	mov	x2, x20
  40c8d8:	bl	4024d0 <readlink@plt>
  40c8dc:	mov	x22, x0
  40c8e0:	tbz	x0, #63, 40c8f4 <__fxstatat@plt+0x9ea4>
  40c8e4:	bl	4029e0 <__errno_location@plt>
  40c8e8:	ldr	w24, [x0]
  40c8ec:	cmp	w24, #0x22
  40c8f0:	b.ne	40c938 <__fxstatat@plt+0x9ee8>  // b.any
  40c8f4:	cmp	x22, x20
  40c8f8:	b.cc	40c930 <__fxstatat@plt+0x9ee0>  // b.lo, b.ul, b.last
  40c8fc:	mov	x0, x21
  40c900:	bl	402840 <free@plt>
  40c904:	lsr	x8, x20, #62
  40c908:	cbz	x8, 40c8b8 <__fxstatat@plt+0x9e68>
  40c90c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c910:	cmp	x20, x8
  40c914:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  40c918:	b.cc	40c8bc <__fxstatat@plt+0x9e6c>  // b.lo, b.ul, b.last
  40c91c:	bl	4029e0 <__errno_location@plt>
  40c920:	mov	x21, xzr
  40c924:	mov	w8, #0xc                   	// #12
  40c928:	str	w8, [x0]
  40c92c:	b	40c94c <__fxstatat@plt+0x9efc>
  40c930:	strb	wzr, [x21, x22]
  40c934:	b	40c94c <__fxstatat@plt+0x9efc>
  40c938:	mov	x23, x0
  40c93c:	mov	x0, x21
  40c940:	bl	402840 <free@plt>
  40c944:	mov	x21, xzr
  40c948:	str	w24, [x23]
  40c94c:	mov	x0, x21
  40c950:	ldp	x20, x19, [sp, #48]
  40c954:	ldp	x22, x21, [sp, #32]
  40c958:	ldp	x24, x23, [sp, #16]
  40c95c:	ldp	x29, x30, [sp], #64
  40c960:	ret
  40c964:	mov	w0, #0x1                   	// #1
  40c968:	b	40802c <__fxstatat@plt+0x55dc>
  40c96c:	stp	x29, x30, [sp, #-96]!
  40c970:	stp	x28, x27, [sp, #16]
  40c974:	stp	x26, x25, [sp, #32]
  40c978:	stp	x24, x23, [sp, #48]
  40c97c:	stp	x22, x21, [sp, #64]
  40c980:	stp	x20, x19, [sp, #80]
  40c984:	mov	x29, sp
  40c988:	mov	x22, x3
  40c98c:	mov	x23, x2
  40c990:	mov	x25, x1
  40c994:	mov	x19, x0
  40c998:	bl	402430 <strlen@plt>
  40c99c:	ldr	x24, [x25]
  40c9a0:	cbz	x24, 40ca24 <__fxstatat@plt+0x9fd4>
  40c9a4:	mov	x20, x0
  40c9a8:	mov	w26, wzr
  40c9ac:	mov	x21, xzr
  40c9b0:	cbz	x23, 40ca30 <__fxstatat@plt+0x9fe0>
  40c9b4:	add	x28, x25, #0x8
  40c9b8:	mov	x27, #0xffffffffffffffff    	// #-1
  40c9bc:	mov	x25, x23
  40c9c0:	b	40c9f0 <__fxstatat@plt+0x9fa0>
  40c9c4:	madd	x0, x27, x22, x23
  40c9c8:	mov	x1, x25
  40c9cc:	mov	x2, x22
  40c9d0:	bl	4026d0 <bcmp@plt>
  40c9d4:	cmp	w0, #0x0
  40c9d8:	cset	w8, ne  // ne = any
  40c9dc:	orr	w26, w26, w8
  40c9e0:	ldr	x24, [x28, x21, lsl #3]
  40c9e4:	add	x21, x21, #0x1
  40c9e8:	add	x25, x25, x22
  40c9ec:	cbz	x24, 40ca80 <__fxstatat@plt+0xa030>
  40c9f0:	mov	x0, x24
  40c9f4:	mov	x1, x19
  40c9f8:	mov	x2, x20
  40c9fc:	bl	402640 <strncmp@plt>
  40ca00:	cbnz	w0, 40c9e0 <__fxstatat@plt+0x9f90>
  40ca04:	mov	x0, x24
  40ca08:	bl	402430 <strlen@plt>
  40ca0c:	cmp	x0, x20
  40ca10:	b.eq	40ca28 <__fxstatat@plt+0x9fd8>  // b.none
  40ca14:	cmn	x27, #0x1
  40ca18:	b.ne	40c9c4 <__fxstatat@plt+0x9f74>  // b.any
  40ca1c:	mov	x27, x21
  40ca20:	b	40c9e0 <__fxstatat@plt+0x9f90>
  40ca24:	mov	x21, #0xffffffffffffffff    	// #-1
  40ca28:	mov	x0, x21
  40ca2c:	b	40ca8c <__fxstatat@plt+0xa03c>
  40ca30:	add	x22, x25, #0x8
  40ca34:	mov	x27, #0xffffffffffffffff    	// #-1
  40ca38:	b	40ca58 <__fxstatat@plt+0xa008>
  40ca3c:	cmn	x27, #0x1
  40ca40:	cset	w8, ne  // ne = any
  40ca44:	csel	x27, x21, x27, eq  // eq = none
  40ca48:	orr	w26, w26, w8
  40ca4c:	ldr	x24, [x22, x21, lsl #3]
  40ca50:	add	x21, x21, #0x1
  40ca54:	cbz	x24, 40ca80 <__fxstatat@plt+0xa030>
  40ca58:	mov	x0, x24
  40ca5c:	mov	x1, x19
  40ca60:	mov	x2, x20
  40ca64:	bl	402640 <strncmp@plt>
  40ca68:	cbnz	w0, 40ca4c <__fxstatat@plt+0x9ffc>
  40ca6c:	mov	x0, x24
  40ca70:	bl	402430 <strlen@plt>
  40ca74:	cmp	x0, x20
  40ca78:	b.ne	40ca3c <__fxstatat@plt+0x9fec>  // b.any
  40ca7c:	b	40ca28 <__fxstatat@plt+0x9fd8>
  40ca80:	tst	w26, #0x1
  40ca84:	mov	x8, #0xfffffffffffffffe    	// #-2
  40ca88:	csel	x0, x8, x27, ne  // ne = any
  40ca8c:	ldp	x20, x19, [sp, #80]
  40ca90:	ldp	x22, x21, [sp, #64]
  40ca94:	ldp	x24, x23, [sp, #48]
  40ca98:	ldp	x26, x25, [sp, #32]
  40ca9c:	ldp	x28, x27, [sp, #16]
  40caa0:	ldp	x29, x30, [sp], #96
  40caa4:	ret
  40caa8:	stp	x29, x30, [sp, #-48]!
  40caac:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40cab0:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40cab4:	add	x8, x8, #0xbd3
  40cab8:	add	x9, x9, #0xbb8
  40cabc:	cmn	x2, #0x1
  40cac0:	stp	x20, x19, [sp, #32]
  40cac4:	mov	x19, x1
  40cac8:	mov	x20, x0
  40cacc:	csel	x1, x9, x8, eq  // eq = none
  40cad0:	mov	w2, #0x5                   	// #5
  40cad4:	mov	x0, xzr
  40cad8:	str	x21, [sp, #16]
  40cadc:	mov	x29, sp
  40cae0:	bl	402970 <dcgettext@plt>
  40cae4:	mov	x21, x0
  40cae8:	mov	w1, #0x8                   	// #8
  40caec:	mov	w0, wzr
  40caf0:	mov	x2, x19
  40caf4:	bl	4135ac <__fxstatat@plt+0x10b5c>
  40caf8:	mov	x19, x0
  40cafc:	mov	w0, #0x1                   	// #1
  40cb00:	mov	x1, x20
  40cb04:	bl	413a98 <__fxstatat@plt+0x11048>
  40cb08:	mov	x2, x21
  40cb0c:	mov	x3, x19
  40cb10:	ldp	x20, x19, [sp, #32]
  40cb14:	ldr	x21, [sp, #16]
  40cb18:	mov	x4, x0
  40cb1c:	mov	w0, wzr
  40cb20:	mov	w1, wzr
  40cb24:	ldp	x29, x30, [sp], #48
  40cb28:	b	402490 <error@plt>
  40cb2c:	stp	x29, x30, [sp, #-96]!
  40cb30:	stp	x20, x19, [sp, #80]
  40cb34:	mov	x20, x1
  40cb38:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40cb3c:	stp	x22, x21, [sp, #64]
  40cb40:	mov	x19, x2
  40cb44:	mov	x21, x0
  40cb48:	add	x1, x1, #0xbf0
  40cb4c:	mov	w2, #0x5                   	// #5
  40cb50:	mov	x0, xzr
  40cb54:	stp	x28, x27, [sp, #16]
  40cb58:	stp	x26, x25, [sp, #32]
  40cb5c:	stp	x24, x23, [sp, #48]
  40cb60:	mov	x29, sp
  40cb64:	bl	402970 <dcgettext@plt>
  40cb68:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40cb6c:	ldr	x1, [x26, #1432]
  40cb70:	bl	402980 <fputs_unlocked@plt>
  40cb74:	ldr	x24, [x21]
  40cb78:	cbz	x24, 40cc20 <__fxstatat@plt+0xa1d0>
  40cb7c:	add	x28, x21, #0x8
  40cb80:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40cb84:	mov	x27, xzr
  40cb88:	mov	x23, xzr
  40cb8c:	mov	x22, xzr
  40cb90:	add	x21, x21, #0xc05
  40cb94:	b	40cbd0 <__fxstatat@plt+0xa180>
  40cb98:	mov	x25, xzr
  40cb9c:	ldr	x23, [x26, #1432]
  40cba0:	mov	x0, x24
  40cba4:	bl	413aa8 <__fxstatat@plt+0x11058>
  40cba8:	mov	x3, x0
  40cbac:	mov	w1, #0x1                   	// #1
  40cbb0:	mov	x0, x23
  40cbb4:	mov	x2, x21
  40cbb8:	bl	4027e0 <__fprintf_chk@plt>
  40cbbc:	add	x23, x20, x25
  40cbc0:	ldr	x24, [x28, x22, lsl #3]
  40cbc4:	add	x22, x22, #0x1
  40cbc8:	add	x27, x27, x19
  40cbcc:	cbz	x24, 40cc20 <__fxstatat@plt+0xa1d0>
  40cbd0:	cbz	x22, 40cb98 <__fxstatat@plt+0xa148>
  40cbd4:	add	x1, x20, x27
  40cbd8:	mov	x0, x23
  40cbdc:	mov	x2, x19
  40cbe0:	bl	4026d0 <bcmp@plt>
  40cbe4:	mov	x25, x27
  40cbe8:	cbnz	w0, 40cb9c <__fxstatat@plt+0xa14c>
  40cbec:	ldr	x25, [x26, #1432]
  40cbf0:	mov	x0, x24
  40cbf4:	bl	413aa8 <__fxstatat@plt+0x11058>
  40cbf8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40cbfc:	mov	x3, x0
  40cc00:	mov	w1, #0x1                   	// #1
  40cc04:	mov	x0, x25
  40cc08:	add	x2, x2, #0xc0d
  40cc0c:	bl	4027e0 <__fprintf_chk@plt>
  40cc10:	ldr	x24, [x28, x22, lsl #3]
  40cc14:	add	x22, x22, #0x1
  40cc18:	add	x27, x27, x19
  40cc1c:	cbnz	x24, 40cbd0 <__fxstatat@plt+0xa180>
  40cc20:	ldr	x0, [x26, #1432]
  40cc24:	ldp	x8, x9, [x0, #40]
  40cc28:	cmp	x8, x9
  40cc2c:	b.cs	40cc5c <__fxstatat@plt+0xa20c>  // b.hs, b.nlast
  40cc30:	add	x9, x8, #0x1
  40cc34:	mov	w10, #0xa                   	// #10
  40cc38:	str	x9, [x0, #40]
  40cc3c:	strb	w10, [x8]
  40cc40:	ldp	x20, x19, [sp, #80]
  40cc44:	ldp	x22, x21, [sp, #64]
  40cc48:	ldp	x24, x23, [sp, #48]
  40cc4c:	ldp	x26, x25, [sp, #32]
  40cc50:	ldp	x28, x27, [sp, #16]
  40cc54:	ldp	x29, x30, [sp], #96
  40cc58:	ret
  40cc5c:	ldp	x20, x19, [sp, #80]
  40cc60:	ldp	x22, x21, [sp, #64]
  40cc64:	ldp	x24, x23, [sp, #48]
  40cc68:	ldp	x26, x25, [sp, #32]
  40cc6c:	ldp	x28, x27, [sp, #16]
  40cc70:	mov	w1, #0xa                   	// #10
  40cc74:	ldp	x29, x30, [sp], #96
  40cc78:	b	402790 <__overflow@plt>
  40cc7c:	stp	x29, x30, [sp, #-80]!
  40cc80:	stp	x24, x23, [sp, #32]
  40cc84:	stp	x22, x21, [sp, #48]
  40cc88:	mov	x21, x3
  40cc8c:	mov	x22, x2
  40cc90:	mov	x24, x1
  40cc94:	mov	x23, x0
  40cc98:	mov	x0, x1
  40cc9c:	mov	x1, x2
  40cca0:	mov	x2, x3
  40cca4:	mov	x3, x4
  40cca8:	str	x25, [sp, #16]
  40ccac:	stp	x20, x19, [sp, #64]
  40ccb0:	mov	x29, sp
  40ccb4:	mov	x19, x5
  40ccb8:	mov	x20, x4
  40ccbc:	bl	40c96c <__fxstatat@plt+0x9f1c>
  40ccc0:	tbz	x0, #63, 40cd3c <__fxstatat@plt+0xa2ec>
  40ccc4:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40ccc8:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40cccc:	add	x8, x8, #0xbd3
  40ccd0:	add	x9, x9, #0xbb8
  40ccd4:	cmn	x0, #0x1
  40ccd8:	csel	x1, x9, x8, eq  // eq = none
  40ccdc:	mov	w2, #0x5                   	// #5
  40cce0:	mov	x0, xzr
  40cce4:	bl	402970 <dcgettext@plt>
  40cce8:	mov	x25, x0
  40ccec:	mov	w1, #0x8                   	// #8
  40ccf0:	mov	w0, wzr
  40ccf4:	mov	x2, x24
  40ccf8:	bl	4135ac <__fxstatat@plt+0x10b5c>
  40ccfc:	mov	x24, x0
  40cd00:	mov	w0, #0x1                   	// #1
  40cd04:	mov	x1, x23
  40cd08:	bl	413a98 <__fxstatat@plt+0x11048>
  40cd0c:	mov	x4, x0
  40cd10:	mov	w0, wzr
  40cd14:	mov	w1, wzr
  40cd18:	mov	x2, x25
  40cd1c:	mov	x3, x24
  40cd20:	bl	402490 <error@plt>
  40cd24:	mov	x0, x22
  40cd28:	mov	x1, x21
  40cd2c:	mov	x2, x20
  40cd30:	bl	40cb2c <__fxstatat@plt+0xa0dc>
  40cd34:	blr	x19
  40cd38:	mov	x0, #0xffffffffffffffff    	// #-1
  40cd3c:	ldp	x20, x19, [sp, #64]
  40cd40:	ldp	x22, x21, [sp, #48]
  40cd44:	ldp	x24, x23, [sp, #32]
  40cd48:	ldr	x25, [sp, #16]
  40cd4c:	ldp	x29, x30, [sp], #80
  40cd50:	ret
  40cd54:	stp	x29, x30, [sp, #-64]!
  40cd58:	stp	x22, x21, [sp, #32]
  40cd5c:	stp	x20, x19, [sp, #48]
  40cd60:	ldr	x20, [x1]
  40cd64:	str	x23, [sp, #16]
  40cd68:	mov	x29, sp
  40cd6c:	cbz	x20, 40cdbc <__fxstatat@plt+0xa36c>
  40cd70:	mov	x22, x2
  40cd74:	mov	x23, x1
  40cd78:	mov	x1, x2
  40cd7c:	mov	x2, x3
  40cd80:	mov	x19, x3
  40cd84:	mov	x21, x0
  40cd88:	bl	4026d0 <bcmp@plt>
  40cd8c:	cbz	w0, 40cdbc <__fxstatat@plt+0xa36c>
  40cd90:	add	x22, x22, x19
  40cd94:	add	x23, x23, #0x8
  40cd98:	ldr	x20, [x23]
  40cd9c:	cbz	x20, 40cdbc <__fxstatat@plt+0xa36c>
  40cda0:	mov	x0, x21
  40cda4:	mov	x1, x22
  40cda8:	mov	x2, x19
  40cdac:	bl	4026d0 <bcmp@plt>
  40cdb0:	add	x22, x22, x19
  40cdb4:	add	x23, x23, #0x8
  40cdb8:	cbnz	w0, 40cd98 <__fxstatat@plt+0xa348>
  40cdbc:	mov	x0, x20
  40cdc0:	ldp	x20, x19, [sp, #48]
  40cdc4:	ldp	x22, x21, [sp, #32]
  40cdc8:	ldr	x23, [sp, #16]
  40cdcc:	ldp	x29, x30, [sp], #64
  40cdd0:	ret
  40cdd4:	sub	w9, w0, #0x41
  40cdd8:	mov	w8, w0
  40cddc:	cmp	w9, #0x39
  40cde0:	mov	w0, #0x1                   	// #1
  40cde4:	b.hi	40cdfc <__fxstatat@plt+0xa3ac>  // b.pmore
  40cde8:	mov	w10, #0x1                   	// #1
  40cdec:	lsl	x9, x10, x9
  40cdf0:	tst	x9, #0x3ffffff03ffffff
  40cdf4:	b.eq	40cdfc <__fxstatat@plt+0xa3ac>  // b.none
  40cdf8:	ret
  40cdfc:	sub	w8, w8, #0x30
  40ce00:	cmp	w8, #0xa
  40ce04:	b.cc	40cdf8 <__fxstatat@plt+0xa3a8>  // b.lo, b.ul, b.last
  40ce08:	mov	w0, wzr
  40ce0c:	ret
  40ce10:	sub	w8, w0, #0x41
  40ce14:	cmp	w8, #0x39
  40ce18:	b.hi	40ce2c <__fxstatat@plt+0xa3dc>  // b.pmore
  40ce1c:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  40ce20:	lsr	x8, x9, x8
  40ce24:	and	w0, w8, #0x1
  40ce28:	ret
  40ce2c:	mov	w0, wzr
  40ce30:	ret
  40ce34:	cmp	w0, #0x80
  40ce38:	cset	w0, cc  // cc = lo, ul, last
  40ce3c:	ret
  40ce40:	cmp	w0, #0x20
  40ce44:	cset	w8, eq  // eq = none
  40ce48:	cmp	w0, #0x9
  40ce4c:	cset	w9, eq  // eq = none
  40ce50:	orr	w0, w8, w9
  40ce54:	ret
  40ce58:	mov	w8, w0
  40ce5c:	cmp	w0, #0x20
  40ce60:	mov	w0, #0x1                   	// #1
  40ce64:	b.cs	40ce6c <__fxstatat@plt+0xa41c>  // b.hs, b.nlast
  40ce68:	ret
  40ce6c:	cmp	w8, #0x7f
  40ce70:	b.eq	40ce68 <__fxstatat@plt+0xa418>  // b.none
  40ce74:	mov	w0, wzr
  40ce78:	ret
  40ce7c:	sub	w8, w0, #0x30
  40ce80:	cmp	w8, #0xa
  40ce84:	cset	w0, cc  // cc = lo, ul, last
  40ce88:	ret
  40ce8c:	sub	w8, w0, #0x21
  40ce90:	cmp	w8, #0x5e
  40ce94:	cset	w0, cc  // cc = lo, ul, last
  40ce98:	ret
  40ce9c:	sub	w8, w0, #0x61
  40cea0:	cmp	w8, #0x1a
  40cea4:	cset	w0, cc  // cc = lo, ul, last
  40cea8:	ret
  40ceac:	sub	w8, w0, #0x20
  40ceb0:	cmp	w8, #0x5f
  40ceb4:	cset	w0, cc  // cc = lo, ul, last
  40ceb8:	ret
  40cebc:	sub	w8, w0, #0x21
  40cec0:	cmp	w8, #0x5d
  40cec4:	b.hi	40cee8 <__fxstatat@plt+0xa498>  // b.pmore
  40cec8:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40cecc:	add	x9, x9, #0xc12
  40ced0:	adr	x10, 40cee4 <__fxstatat@plt+0xa494>
  40ced4:	ldrb	w11, [x9, x8]
  40ced8:	add	x10, x10, x11, lsl #2
  40cedc:	mov	w0, #0x1                   	// #1
  40cee0:	br	x10
  40cee4:	ret
  40cee8:	mov	w0, wzr
  40ceec:	ret
  40cef0:	sub	w8, w0, #0x9
  40cef4:	cmp	w8, #0x17
  40cef8:	b.hi	40cf10 <__fxstatat@plt+0xa4c0>  // b.pmore
  40cefc:	mov	w9, #0x1f                  	// #31
  40cf00:	movk	w9, #0x80, lsl #16
  40cf04:	lsr	w8, w9, w8
  40cf08:	and	w0, w8, #0x1
  40cf0c:	ret
  40cf10:	mov	w0, wzr
  40cf14:	ret
  40cf18:	sub	w8, w0, #0x41
  40cf1c:	cmp	w8, #0x1a
  40cf20:	cset	w0, cc  // cc = lo, ul, last
  40cf24:	ret
  40cf28:	sub	w8, w0, #0x30
  40cf2c:	cmp	w8, #0x36
  40cf30:	b.hi	40cf48 <__fxstatat@plt+0xa4f8>  // b.pmore
  40cf34:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  40cf38:	movk	x9, #0x3ff
  40cf3c:	lsr	x8, x9, x8
  40cf40:	and	w0, w8, #0x1
  40cf44:	ret
  40cf48:	mov	w0, wzr
  40cf4c:	ret
  40cf50:	sub	w8, w0, #0x41
  40cf54:	add	w9, w0, #0x20
  40cf58:	cmp	w8, #0x1a
  40cf5c:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40cf60:	ret
  40cf64:	sub	w8, w0, #0x61
  40cf68:	sub	w9, w0, #0x20
  40cf6c:	cmp	w8, #0x1a
  40cf70:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40cf74:	ret
  40cf78:	cmp	x0, x1
  40cf7c:	mov	w8, wzr
  40cf80:	b.eq	40cfd8 <__fxstatat@plt+0xa588>  // b.none
  40cf84:	cbz	x2, 40cfd8 <__fxstatat@plt+0xa588>
  40cf88:	sub	x8, x2, #0x1
  40cf8c:	ldrb	w9, [x0]
  40cf90:	ldrb	w10, [x1]
  40cf94:	sub	w11, w9, #0x41
  40cf98:	add	w12, w9, #0x20
  40cf9c:	sub	w13, w10, #0x41
  40cfa0:	cmp	w11, #0x1a
  40cfa4:	add	w14, w10, #0x20
  40cfa8:	csel	w11, w12, w9, cc  // cc = lo, ul, last
  40cfac:	cmp	w13, #0x1a
  40cfb0:	csel	w9, w14, w10, cc  // cc = lo, ul, last
  40cfb4:	and	w10, w11, #0xff
  40cfb8:	cbz	x8, 40cfd4 <__fxstatat@plt+0xa584>
  40cfbc:	cbz	w10, 40cfd4 <__fxstatat@plt+0xa584>
  40cfc0:	add	x0, x0, #0x1
  40cfc4:	add	x1, x1, #0x1
  40cfc8:	cmp	w10, w9, uxtb
  40cfcc:	sub	x8, x8, #0x1
  40cfd0:	b.eq	40cf8c <__fxstatat@plt+0xa53c>  // b.none
  40cfd4:	sub	w8, w10, w9, uxtb
  40cfd8:	mov	w0, w8
  40cfdc:	ret
  40cfe0:	sub	sp, sp, #0x110
  40cfe4:	stp	x26, x25, [sp, #208]
  40cfe8:	and	w26, w1, #0x3
  40cfec:	sub	w8, w26, #0x1
  40cff0:	tst	w26, w8
  40cff4:	stp	x29, x30, [sp, #176]
  40cff8:	stp	x28, x27, [sp, #192]
  40cffc:	stp	x24, x23, [sp, #224]
  40d000:	stp	x22, x21, [sp, #240]
  40d004:	stp	x20, x19, [sp, #256]
  40d008:	add	x29, sp, #0xb0
  40d00c:	b.ne	40d038 <__fxstatat@plt+0xa5e8>  // b.any
  40d010:	mov	x27, x0
  40d014:	cbz	x0, 40d038 <__fxstatat@plt+0xa5e8>
  40d018:	ldrb	w8, [x27]
  40d01c:	mov	w22, w1
  40d020:	cmp	w8, #0x2f
  40d024:	b.eq	40d06c <__fxstatat@plt+0xa61c>  // b.none
  40d028:	cbnz	w8, 40d40c <__fxstatat@plt+0xa9bc>
  40d02c:	bl	4029e0 <__errno_location@plt>
  40d030:	mov	w8, #0x2                   	// #2
  40d034:	b	40d040 <__fxstatat@plt+0xa5f0>
  40d038:	bl	4029e0 <__errno_location@plt>
  40d03c:	mov	w8, #0x16                  	// #22
  40d040:	mov	x21, xzr
  40d044:	str	w8, [x0]
  40d048:	mov	x0, x21
  40d04c:	ldp	x20, x19, [sp, #256]
  40d050:	ldp	x22, x21, [sp, #240]
  40d054:	ldp	x24, x23, [sp, #224]
  40d058:	ldp	x26, x25, [sp, #208]
  40d05c:	ldp	x28, x27, [sp, #192]
  40d060:	ldp	x29, x30, [sp, #176]
  40d064:	add	sp, sp, #0x110
  40d068:	ret
  40d06c:	mov	w0, #0x1000                	// #4096
  40d070:	bl	414368 <__fxstatat@plt+0x11918>
  40d074:	mov	w8, #0x2f                  	// #47
  40d078:	mov	x19, x0
  40d07c:	mov	x21, x0
  40d080:	add	x20, x0, #0x1, lsl #12
  40d084:	strb	w8, [x19], #1
  40d088:	ldrb	w8, [x27]
  40d08c:	cbz	w8, 40d468 <__fxstatat@plt+0xaa18>
  40d090:	and	w9, w22, #0x7
  40d094:	mov	x24, x19
  40d098:	mov	x23, x27
  40d09c:	stp	xzr, xzr, [sp, #8]
  40d0a0:	str	xzr, [sp, #24]
  40d0a4:	stp	w22, w9, [sp, #32]
  40d0a8:	b	40d0bc <__fxstatat@plt+0xa66c>
  40d0ac:	mov	x19, x24
  40d0b0:	ldrb	w8, [x23]
  40d0b4:	mov	x24, x19
  40d0b8:	cbz	w8, 40d46c <__fxstatat@plt+0xaa1c>
  40d0bc:	and	w9, w8, #0xff
  40d0c0:	cmp	w9, #0x2f
  40d0c4:	mov	x28, x23
  40d0c8:	b.ne	40d0dc <__fxstatat@plt+0xa68c>  // b.any
  40d0cc:	ldrb	w8, [x28, #1]!
  40d0d0:	cmp	w8, #0x2f
  40d0d4:	b.eq	40d0cc <__fxstatat@plt+0xa67c>  // b.none
  40d0d8:	mov	x23, x28
  40d0dc:	mov	w9, w8
  40d0e0:	ands	w9, w9, #0xff
  40d0e4:	b.eq	40d0fc <__fxstatat@plt+0xa6ac>  // b.none
  40d0e8:	cmp	w9, #0x2f
  40d0ec:	b.eq	40d0fc <__fxstatat@plt+0xa6ac>  // b.none
  40d0f0:	ldrb	w9, [x23, #1]!
  40d0f4:	ands	w9, w9, #0xff
  40d0f8:	b.ne	40d0e8 <__fxstatat@plt+0xa698>  // b.any
  40d0fc:	sub	x25, x23, x28
  40d100:	cmp	x25, #0x1
  40d104:	b.eq	40d160 <__fxstatat@plt+0xa710>  // b.none
  40d108:	cmp	x25, #0x2
  40d10c:	b.eq	40d118 <__fxstatat@plt+0xa6c8>  // b.none
  40d110:	cbnz	x25, 40d16c <__fxstatat@plt+0xa71c>
  40d114:	b	40d450 <__fxstatat@plt+0xaa00>
  40d118:	and	w8, w8, #0xff
  40d11c:	cmp	w8, #0x2e
  40d120:	b.ne	40d16c <__fxstatat@plt+0xa71c>  // b.any
  40d124:	ldrb	w8, [x28, #1]
  40d128:	cmp	w8, #0x2e
  40d12c:	b.ne	40d16c <__fxstatat@plt+0xa71c>  // b.any
  40d130:	add	x8, x21, #0x1
  40d134:	cmp	x24, x8
  40d138:	b.ls	40d0ac <__fxstatat@plt+0xa65c>  // b.plast
  40d13c:	sub	x8, x24, #0x1
  40d140:	mov	x19, x8
  40d144:	cmp	x8, x21
  40d148:	b.ls	40d0b0 <__fxstatat@plt+0xa660>  // b.plast
  40d14c:	mov	x8, x19
  40d150:	ldrb	w9, [x8, #-1]!
  40d154:	cmp	w9, #0x2f
  40d158:	b.ne	40d140 <__fxstatat@plt+0xa6f0>  // b.any
  40d15c:	b	40d0b0 <__fxstatat@plt+0xa660>
  40d160:	and	w8, w8, #0xff
  40d164:	cmp	w8, #0x2e
  40d168:	b.eq	40d0ac <__fxstatat@plt+0xa65c>  // b.none
  40d16c:	ldurb	w8, [x24, #-1]
  40d170:	cmp	w8, #0x2f
  40d174:	b.eq	40d180 <__fxstatat@plt+0xa730>  // b.none
  40d178:	mov	w8, #0x2f                  	// #47
  40d17c:	strb	w8, [x24], #1
  40d180:	add	x8, x24, x25
  40d184:	cmp	x8, x20
  40d188:	b.cc	40d1bc <__fxstatat@plt+0xa76c>  // b.lo, b.ul, b.last
  40d18c:	cmp	x25, #0x1, lsl #12
  40d190:	mov	w9, #0x1000                	// #4096
  40d194:	sub	x8, x20, x21
  40d198:	csinc	x9, x9, x25, lt  // lt = tstop
  40d19c:	add	x22, x9, x8
  40d1a0:	mov	x0, x21
  40d1a4:	mov	x1, x22
  40d1a8:	sub	x19, x24, x21
  40d1ac:	bl	4143e8 <__fxstatat@plt+0x11998>
  40d1b0:	mov	x21, x0
  40d1b4:	add	x20, x0, x22
  40d1b8:	add	x24, x0, x19
  40d1bc:	mov	x0, x24
  40d1c0:	mov	x1, x28
  40d1c4:	mov	x2, x25
  40d1c8:	bl	4023c0 <memcpy@plt>
  40d1cc:	ldr	w8, [sp, #36]
  40d1d0:	add	x19, x24, x25
  40d1d4:	strb	wzr, [x19]
  40d1d8:	cmp	w8, #0x6
  40d1dc:	b.eq	40d210 <__fxstatat@plt+0xa7c0>  // b.none
  40d1e0:	ldr	w8, [sp, #32]
  40d1e4:	tbnz	w8, #2, 40d228 <__fxstatat@plt+0xa7d8>
  40d1e8:	add	x2, sp, #0x28
  40d1ec:	mov	w0, wzr
  40d1f0:	mov	x1, x21
  40d1f4:	bl	4028f0 <__lxstat@plt>
  40d1f8:	cbz	w0, 40d23c <__fxstatat@plt+0xa7ec>
  40d1fc:	bl	4029e0 <__errno_location@plt>
  40d200:	ldr	w22, [x0]
  40d204:	cmp	w26, #0x1
  40d208:	b.eq	40d258 <__fxstatat@plt+0xa808>  // b.none
  40d20c:	cbz	w26, 40d4cc <__fxstatat@plt+0xaa7c>
  40d210:	str	wzr, [sp, #56]
  40d214:	cmp	w26, #0x2
  40d218:	b.eq	40d278 <__fxstatat@plt+0xa828>  // b.none
  40d21c:	ldrb	w8, [x23]
  40d220:	cbz	w8, 40d278 <__fxstatat@plt+0xa828>
  40d224:	b	40d4c8 <__fxstatat@plt+0xaa78>
  40d228:	add	x2, sp, #0x28
  40d22c:	mov	w0, wzr
  40d230:	mov	x1, x21
  40d234:	bl	402a00 <__xstat@plt>
  40d238:	cbnz	w0, 40d1fc <__fxstatat@plt+0xa7ac>
  40d23c:	ldr	w8, [sp, #56]
  40d240:	and	w8, w8, #0xf000
  40d244:	cmp	w8, #0xa, lsl #12
  40d248:	b.eq	40d284 <__fxstatat@plt+0xa834>  // b.none
  40d24c:	cmp	w8, #0x4, lsl #12
  40d250:	b.eq	40d278 <__fxstatat@plt+0xa828>  // b.none
  40d254:	b	40d214 <__fxstatat@plt+0xa7c4>
  40d258:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x3ad0>
  40d25c:	mov	x0, x23
  40d260:	add	x1, x1, #0x576
  40d264:	bl	402860 <strspn@plt>
  40d268:	cmp	w22, #0x2
  40d26c:	b.ne	40d4cc <__fxstatat@plt+0xaa7c>  // b.any
  40d270:	ldrb	w8, [x23, x0]
  40d274:	cbnz	w8, 40d4cc <__fxstatat@plt+0xaa7c>
  40d278:	mov	x22, x23
  40d27c:	mov	x23, x22
  40d280:	b	40d0b0 <__fxstatat@plt+0xa660>
  40d284:	ldr	x0, [sp, #24]
  40d288:	cbnz	x0, 40d2b4 <__fxstatat@plt+0xa864>
  40d28c:	adrp	x2, 40f000 <__fxstatat@plt+0xc5b0>
  40d290:	adrp	x3, 40f000 <__fxstatat@plt+0xc5b0>
  40d294:	adrp	x4, 40f000 <__fxstatat@plt+0xc5b0>
  40d298:	mov	w0, #0x7                   	// #7
  40d29c:	mov	x1, xzr
  40d2a0:	add	x2, x2, #0x1d4
  40d2a4:	add	x3, x3, #0x250
  40d2a8:	add	x4, x4, #0x2a0
  40d2ac:	bl	40e4c4 <__fxstatat@plt+0xba74>
  40d2b0:	cbz	x0, 40d508 <__fxstatat@plt+0xaab8>
  40d2b4:	add	x2, sp, #0x28
  40d2b8:	mov	x1, x27
  40d2bc:	mov	x22, x0
  40d2c0:	bl	40d8e0 <__fxstatat@plt+0xae90>
  40d2c4:	str	x22, [sp, #24]
  40d2c8:	tbz	w0, #0, 40d2d8 <__fxstatat@plt+0xa888>
  40d2cc:	cmp	w26, #0x2
  40d2d0:	b.eq	40d0b0 <__fxstatat@plt+0xa660>  // b.none
  40d2d4:	b	40d4f8 <__fxstatat@plt+0xaaa8>
  40d2d8:	add	x2, sp, #0x28
  40d2dc:	mov	x0, x22
  40d2e0:	mov	x1, x27
  40d2e4:	bl	40d85c <__fxstatat@plt+0xae0c>
  40d2e8:	ldr	x1, [sp, #88]
  40d2ec:	mov	x0, x21
  40d2f0:	bl	40c890 <__fxstatat@plt+0x9e40>
  40d2f4:	cbz	x0, 40d348 <__fxstatat@plt+0xa8f8>
  40d2f8:	mov	x28, x0
  40d2fc:	bl	402430 <strlen@plt>
  40d300:	mov	x22, x0
  40d304:	mov	x0, x23
  40d308:	bl	402430 <strlen@plt>
  40d30c:	ldr	x8, [sp, #8]
  40d310:	add	x2, x0, #0x1
  40d314:	add	x27, x2, x22
  40d318:	str	x22, [sp]
  40d31c:	cbz	x8, 40d364 <__fxstatat@plt+0xa914>
  40d320:	cmp	x27, x8
  40d324:	b.ls	40d388 <__fxstatat@plt+0xa938>  // b.plast
  40d328:	ldr	x0, [sp, #16]
  40d32c:	mov	x1, x27
  40d330:	mov	x22, x2
  40d334:	bl	4143e8 <__fxstatat@plt+0x11998>
  40d338:	mov	x2, x22
  40d33c:	mov	x22, x0
  40d340:	str	x27, [sp, #8]
  40d344:	b	40d38c <__fxstatat@plt+0xa93c>
  40d348:	bl	4029e0 <__errno_location@plt>
  40d34c:	cmp	w26, #0x2
  40d350:	b.ne	40d500 <__fxstatat@plt+0xaab0>  // b.any
  40d354:	ldr	w8, [x0]
  40d358:	cmp	w8, #0xc
  40d35c:	b.ne	40d0b0 <__fxstatat@plt+0xa660>  // b.any
  40d360:	b	40d500 <__fxstatat@plt+0xaab0>
  40d364:	cmp	x27, #0x1, lsl #12
  40d368:	mov	w8, #0x1000                	// #4096
  40d36c:	csel	x0, x27, x8, hi  // hi = pmore
  40d370:	str	x0, [sp, #8]
  40d374:	mov	x22, x2
  40d378:	bl	414368 <__fxstatat@plt+0x11918>
  40d37c:	mov	x2, x22
  40d380:	mov	x22, x0
  40d384:	b	40d38c <__fxstatat@plt+0xa93c>
  40d388:	ldr	x22, [sp, #16]
  40d38c:	ldr	x27, [sp]
  40d390:	mov	x1, x23
  40d394:	add	x0, x22, x27
  40d398:	bl	4023d0 <memmove@plt>
  40d39c:	mov	x0, x22
  40d3a0:	mov	x1, x28
  40d3a4:	mov	x2, x27
  40d3a8:	bl	4023c0 <memcpy@plt>
  40d3ac:	ldrb	w8, [x28]
  40d3b0:	cmp	w8, #0x2f
  40d3b4:	add	x8, x21, #0x1
  40d3b8:	b.ne	40d3cc <__fxstatat@plt+0xa97c>  // b.any
  40d3bc:	mov	w9, #0x2f                  	// #47
  40d3c0:	strb	w9, [x21]
  40d3c4:	mov	x19, x8
  40d3c8:	b	40d3f8 <__fxstatat@plt+0xa9a8>
  40d3cc:	cmp	x19, x8
  40d3d0:	b.ls	40d3f8 <__fxstatat@plt+0xa9a8>  // b.plast
  40d3d4:	add	x8, x24, x25
  40d3d8:	sub	x8, x8, #0x1
  40d3dc:	mov	x19, x8
  40d3e0:	cmp	x8, x21
  40d3e4:	b.ls	40d3f8 <__fxstatat@plt+0xa9a8>  // b.plast
  40d3e8:	mov	x8, x19
  40d3ec:	ldrb	w9, [x8, #-1]!
  40d3f0:	cmp	w9, #0x2f
  40d3f4:	b.ne	40d3dc <__fxstatat@plt+0xa98c>  // b.any
  40d3f8:	mov	x0, x28
  40d3fc:	bl	402840 <free@plt>
  40d400:	mov	x27, x22
  40d404:	str	x22, [sp, #16]
  40d408:	b	40d27c <__fxstatat@plt+0xa82c>
  40d40c:	bl	4147f8 <__fxstatat@plt+0x11da8>
  40d410:	mov	x21, x0
  40d414:	cbz	x0, 40d048 <__fxstatat@plt+0xa5f8>
  40d418:	mov	x0, x21
  40d41c:	bl	402430 <strlen@plt>
  40d420:	mov	x20, x0
  40d424:	cmp	x0, #0xfff
  40d428:	b.gt	40d458 <__fxstatat@plt+0xaa08>
  40d42c:	mov	w1, #0x1000                	// #4096
  40d430:	mov	x0, x21
  40d434:	bl	4143e8 <__fxstatat@plt+0x11998>
  40d438:	mov	x21, x0
  40d43c:	add	x19, x0, x20
  40d440:	add	x20, x0, #0x1, lsl #12
  40d444:	ldrb	w8, [x27]
  40d448:	cbnz	w8, 40d090 <__fxstatat@plt+0xa640>
  40d44c:	b	40d468 <__fxstatat@plt+0xaa18>
  40d450:	mov	x19, x24
  40d454:	b	40d46c <__fxstatat@plt+0xaa1c>
  40d458:	add	x20, x21, x20
  40d45c:	mov	x19, x20
  40d460:	ldrb	w8, [x27]
  40d464:	cbnz	w8, 40d090 <__fxstatat@plt+0xa640>
  40d468:	stp	xzr, xzr, [sp, #16]
  40d46c:	add	x8, x21, #0x1
  40d470:	cmp	x19, x8
  40d474:	b.ls	40d488 <__fxstatat@plt+0xaa38>  // b.plast
  40d478:	mov	x8, x19
  40d47c:	ldrb	w9, [x8, #-1]!
  40d480:	cmp	w9, #0x2f
  40d484:	csel	x19, x8, x19, eq  // eq = none
  40d488:	ldr	x22, [sp, #16]
  40d48c:	mov	x8, x19
  40d490:	strb	wzr, [x8], #1
  40d494:	cmp	x20, x8
  40d498:	b.eq	40d4b0 <__fxstatat@plt+0xaa60>  // b.none
  40d49c:	sub	x8, x19, x21
  40d4a0:	add	x1, x8, #0x1
  40d4a4:	mov	x0, x21
  40d4a8:	bl	4143e8 <__fxstatat@plt+0x11998>
  40d4ac:	mov	x21, x0
  40d4b0:	mov	x0, x22
  40d4b4:	bl	402840 <free@plt>
  40d4b8:	ldr	x0, [sp, #24]
  40d4bc:	cbz	x0, 40d048 <__fxstatat@plt+0xa5f8>
  40d4c0:	bl	40e770 <__fxstatat@plt+0xbd20>
  40d4c4:	b	40d048 <__fxstatat@plt+0xa5f8>
  40d4c8:	mov	w22, #0x14                  	// #20
  40d4cc:	ldr	x0, [sp, #16]
  40d4d0:	bl	402840 <free@plt>
  40d4d4:	mov	x0, x21
  40d4d8:	bl	402840 <free@plt>
  40d4dc:	ldr	x0, [sp, #24]
  40d4e0:	cbz	x0, 40d4e8 <__fxstatat@plt+0xaa98>
  40d4e4:	bl	40e770 <__fxstatat@plt+0xbd20>
  40d4e8:	bl	4029e0 <__errno_location@plt>
  40d4ec:	mov	x21, xzr
  40d4f0:	str	w22, [x0]
  40d4f4:	b	40d048 <__fxstatat@plt+0xa5f8>
  40d4f8:	mov	w22, #0x28                  	// #40
  40d4fc:	b	40d4cc <__fxstatat@plt+0xaa7c>
  40d500:	ldr	w22, [x0]
  40d504:	b	40d4cc <__fxstatat@plt+0xaa7c>
  40d508:	bl	4146a4 <__fxstatat@plt+0x11c54>
  40d50c:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40d510:	str	x0, [x8, #1784]
  40d514:	ret
  40d518:	and	w8, w0, #0x1
  40d51c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40d520:	strb	w8, [x9, #1776]
  40d524:	ret
  40d528:	stp	x29, x30, [sp, #-48]!
  40d52c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40d530:	ldr	x0, [x8, #1456]
  40d534:	str	x21, [sp, #16]
  40d538:	stp	x20, x19, [sp, #32]
  40d53c:	mov	x29, sp
  40d540:	bl	415d10 <_obstack_memory_used@@Base+0x7e0>
  40d544:	cbz	w0, 40d564 <__fxstatat@plt+0xab14>
  40d548:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40d54c:	ldrb	w8, [x8, #1776]
  40d550:	cbz	w8, 40d584 <__fxstatat@plt+0xab34>
  40d554:	bl	4029e0 <__errno_location@plt>
  40d558:	ldr	w8, [x0]
  40d55c:	cmp	w8, #0x20
  40d560:	b.ne	40d584 <__fxstatat@plt+0xab34>  // b.any
  40d564:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40d568:	ldr	x0, [x8, #1432]
  40d56c:	bl	415d10 <_obstack_memory_used@@Base+0x7e0>
  40d570:	cbnz	w0, 40d5f0 <__fxstatat@plt+0xaba0>
  40d574:	ldp	x20, x19, [sp, #32]
  40d578:	ldr	x21, [sp, #16]
  40d57c:	ldp	x29, x30, [sp], #48
  40d580:	ret
  40d584:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40d588:	add	x1, x1, #0xc70
  40d58c:	mov	w2, #0x5                   	// #5
  40d590:	mov	x0, xzr
  40d594:	bl	402970 <dcgettext@plt>
  40d598:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40d59c:	ldr	x21, [x8, #1784]
  40d5a0:	mov	x19, x0
  40d5a4:	bl	4029e0 <__errno_location@plt>
  40d5a8:	ldr	w20, [x0]
  40d5ac:	cbnz	x21, 40d5cc <__fxstatat@plt+0xab7c>
  40d5b0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40d5b4:	add	x2, x2, #0xc0f
  40d5b8:	mov	w0, wzr
  40d5bc:	mov	w1, w20
  40d5c0:	mov	x3, x19
  40d5c4:	bl	402490 <error@plt>
  40d5c8:	b	40d5f0 <__fxstatat@plt+0xaba0>
  40d5cc:	mov	x0, x21
  40d5d0:	bl	4137c0 <__fxstatat@plt+0x10d70>
  40d5d4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40d5d8:	mov	x3, x0
  40d5dc:	add	x2, x2, #0x369
  40d5e0:	mov	w0, wzr
  40d5e4:	mov	w1, w20
  40d5e8:	mov	x4, x19
  40d5ec:	bl	402490 <error@plt>
  40d5f0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  40d5f4:	ldr	w0, [x8, #1312]
  40d5f8:	bl	4023f0 <_exit@plt>
  40d5fc:	stp	x29, x30, [sp, #-48]!
  40d600:	str	x21, [sp, #16]
  40d604:	stp	x20, x19, [sp, #32]
  40d608:	mov	x20, x0
  40d60c:	ldrb	w8, [x20], #-1
  40d610:	mov	x29, sp
  40d614:	mov	x19, x0
  40d618:	cmp	w8, #0x2f
  40d61c:	cset	w21, eq  // eq = none
  40d620:	bl	40d6ec <__fxstatat@plt+0xac9c>
  40d624:	sub	x8, x0, x19
  40d628:	mov	x0, x8
  40d62c:	cmp	x8, x21
  40d630:	b.ls	40d644 <__fxstatat@plt+0xabf4>  // b.plast
  40d634:	ldrb	w8, [x20, x0]
  40d638:	cmp	w8, #0x2f
  40d63c:	sub	x8, x0, #0x1
  40d640:	b.eq	40d628 <__fxstatat@plt+0xabd8>  // b.none
  40d644:	ldp	x20, x19, [sp, #32]
  40d648:	ldr	x21, [sp, #16]
  40d64c:	ldp	x29, x30, [sp], #48
  40d650:	ret
  40d654:	stp	x29, x30, [sp, #-48]!
  40d658:	stp	x22, x21, [sp, #16]
  40d65c:	stp	x20, x19, [sp, #32]
  40d660:	mov	x21, x0
  40d664:	ldrb	w8, [x21], #-1
  40d668:	mov	x29, sp
  40d66c:	mov	x19, x0
  40d670:	cmp	w8, #0x2f
  40d674:	cset	w22, eq  // eq = none
  40d678:	bl	40d6ec <__fxstatat@plt+0xac9c>
  40d67c:	sub	x8, x0, x19
  40d680:	mov	x20, x8
  40d684:	cmp	x8, x22
  40d688:	b.ls	40d69c <__fxstatat@plt+0xac4c>  // b.plast
  40d68c:	ldrb	w8, [x21, x20]
  40d690:	cmp	w8, #0x2f
  40d694:	sub	x8, x20, #0x1
  40d698:	b.eq	40d680 <__fxstatat@plt+0xac30>  // b.none
  40d69c:	cmp	x20, #0x0
  40d6a0:	cinc	x8, x20, eq  // eq = none
  40d6a4:	add	x0, x8, #0x1
  40d6a8:	bl	4025f0 <malloc@plt>
  40d6ac:	mov	x21, x0
  40d6b0:	cbz	x0, 40d6d8 <__fxstatat@plt+0xac88>
  40d6b4:	mov	x0, x21
  40d6b8:	mov	x1, x19
  40d6bc:	mov	x2, x20
  40d6c0:	bl	4023c0 <memcpy@plt>
  40d6c4:	cbnz	x20, 40d6d4 <__fxstatat@plt+0xac84>
  40d6c8:	mov	w8, #0x2e                  	// #46
  40d6cc:	mov	w20, #0x1                   	// #1
  40d6d0:	strb	w8, [x21]
  40d6d4:	strb	wzr, [x21, x20]
  40d6d8:	mov	x0, x21
  40d6dc:	ldp	x20, x19, [sp, #32]
  40d6e0:	ldp	x22, x21, [sp, #16]
  40d6e4:	ldp	x29, x30, [sp], #48
  40d6e8:	ret
  40d6ec:	sub	x0, x0, #0x1
  40d6f0:	ldrb	w10, [x0, #1]!
  40d6f4:	cmp	w10, #0x2f
  40d6f8:	b.eq	40d6f0 <__fxstatat@plt+0xaca0>  // b.none
  40d6fc:	mov	w8, wzr
  40d700:	mov	x9, x0
  40d704:	and	w10, w10, #0xff
  40d708:	cmp	w10, #0x2f
  40d70c:	b.ne	40d724 <__fxstatat@plt+0xacd4>  // b.any
  40d710:	ldrb	w10, [x9, #1]!
  40d714:	mov	w8, #0x1                   	// #1
  40d718:	and	w10, w10, #0xff
  40d71c:	cmp	w10, #0x2f
  40d720:	b.eq	40d710 <__fxstatat@plt+0xacc0>  // b.none
  40d724:	cbz	w10, 40d748 <__fxstatat@plt+0xacf8>
  40d728:	tst	w8, #0x1
  40d72c:	csel	x0, x9, x0, ne  // ne = any
  40d730:	ldrb	w10, [x9, #1]!
  40d734:	mov	w8, wzr
  40d738:	and	w10, w10, #0xff
  40d73c:	cmp	w10, #0x2f
  40d740:	b.ne	40d724 <__fxstatat@plt+0xacd4>  // b.any
  40d744:	b	40d710 <__fxstatat@plt+0xacc0>
  40d748:	ret
  40d74c:	stp	x29, x30, [sp, #-32]!
  40d750:	str	x19, [sp, #16]
  40d754:	mov	x29, sp
  40d758:	mov	x19, x0
  40d75c:	bl	402430 <strlen@plt>
  40d760:	mov	x8, x0
  40d764:	sub	x9, x19, #0x1
  40d768:	mov	x0, x8
  40d76c:	cmp	x8, #0x2
  40d770:	b.cc	40d784 <__fxstatat@plt+0xad34>  // b.lo, b.ul, b.last
  40d774:	ldrb	w8, [x9, x0]
  40d778:	cmp	w8, #0x2f
  40d77c:	sub	x8, x0, #0x1
  40d780:	b.eq	40d768 <__fxstatat@plt+0xad18>  // b.none
  40d784:	ldr	x19, [sp, #16]
  40d788:	ldp	x29, x30, [sp], #32
  40d78c:	ret
  40d790:	stp	x29, x30, [sp, #-32]!
  40d794:	stp	x20, x19, [sp, #16]
  40d798:	ldr	w8, [x1, #16]
  40d79c:	mov	x29, sp
  40d7a0:	and	w8, w8, #0xf000
  40d7a4:	cmp	w8, #0xa, lsl #12
  40d7a8:	b.ne	40d7bc <__fxstatat@plt+0xad6c>  // b.any
  40d7ac:	mov	w0, wzr
  40d7b0:	ldp	x20, x19, [sp, #16]
  40d7b4:	ldp	x29, x30, [sp], #32
  40d7b8:	ret
  40d7bc:	mov	x20, x1
  40d7c0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40d7c4:	add	x1, x1, #0xc7c
  40d7c8:	mov	x2, xzr
  40d7cc:	mov	x3, xzr
  40d7d0:	mov	x19, x0
  40d7d4:	bl	4027a0 <getxattr@plt>
  40d7d8:	tbnz	x0, #63, 40d7f0 <__fxstatat@plt+0xada0>
  40d7dc:	cbz	x0, 40d800 <__fxstatat@plt+0xadb0>
  40d7e0:	mov	w0, #0x1                   	// #1
  40d7e4:	ldp	x20, x19, [sp, #16]
  40d7e8:	ldp	x29, x30, [sp], #32
  40d7ec:	ret
  40d7f0:	bl	4029e0 <__errno_location@plt>
  40d7f4:	ldr	w8, [x0]
  40d7f8:	cmp	w8, #0x3d
  40d7fc:	b.ne	40d844 <__fxstatat@plt+0xadf4>  // b.any
  40d800:	ldr	w8, [x20, #16]
  40d804:	and	w8, w8, #0xf000
  40d808:	cmp	w8, #0x4, lsl #12
  40d80c:	b.ne	40d7ac <__fxstatat@plt+0xad5c>  // b.any
  40d810:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40d814:	add	x1, x1, #0xc94
  40d818:	mov	x0, x19
  40d81c:	mov	x2, xzr
  40d820:	mov	x3, xzr
  40d824:	bl	4027a0 <getxattr@plt>
  40d828:	tbnz	x0, #63, 40d834 <__fxstatat@plt+0xade4>
  40d82c:	cbnz	x0, 40d7e0 <__fxstatat@plt+0xad90>
  40d830:	b	40d7ac <__fxstatat@plt+0xad5c>
  40d834:	bl	4029e0 <__errno_location@plt>
  40d838:	ldr	w8, [x0]
  40d83c:	cmp	w8, #0x3d
  40d840:	b.eq	40d7ac <__fxstatat@plt+0xad5c>  // b.none
  40d844:	ldr	w0, [x0]
  40d848:	bl	415cd0 <_obstack_memory_used@@Base+0x7a0>
  40d84c:	sbfx	w0, w0, #0, #1
  40d850:	ldp	x20, x19, [sp, #16]
  40d854:	ldp	x29, x30, [sp], #32
  40d858:	ret
  40d85c:	stp	x29, x30, [sp, #-48]!
  40d860:	stp	x22, x21, [sp, #16]
  40d864:	stp	x20, x19, [sp, #32]
  40d868:	mov	x29, sp
  40d86c:	cbz	x0, 40d8cc <__fxstatat@plt+0xae7c>
  40d870:	mov	x20, x0
  40d874:	mov	w0, #0x18                  	// #24
  40d878:	mov	x21, x2
  40d87c:	mov	x22, x1
  40d880:	bl	414368 <__fxstatat@plt+0x11918>
  40d884:	mov	x19, x0
  40d888:	mov	x0, x22
  40d88c:	bl	41464c <__fxstatat@plt+0x11bfc>
  40d890:	str	x0, [x19]
  40d894:	ldr	q0, [x21]
  40d898:	mov	x0, x20
  40d89c:	mov	x1, x19
  40d8a0:	ext	v0.16b, v0.16b, v0.16b, #8
  40d8a4:	stur	q0, [x19, #8]
  40d8a8:	bl	40ef64 <__fxstatat@plt+0xc514>
  40d8ac:	cbz	x0, 40d8dc <__fxstatat@plt+0xae8c>
  40d8b0:	cmp	x0, x19
  40d8b4:	b.eq	40d8cc <__fxstatat@plt+0xae7c>  // b.none
  40d8b8:	mov	x0, x19
  40d8bc:	ldp	x20, x19, [sp, #32]
  40d8c0:	ldp	x22, x21, [sp, #16]
  40d8c4:	ldp	x29, x30, [sp], #48
  40d8c8:	b	40f2a0 <__fxstatat@plt+0xc850>
  40d8cc:	ldp	x20, x19, [sp, #32]
  40d8d0:	ldp	x22, x21, [sp, #16]
  40d8d4:	ldp	x29, x30, [sp], #48
  40d8d8:	ret
  40d8dc:	bl	4146a4 <__fxstatat@plt+0x11c54>
  40d8e0:	cbz	x0, 40d918 <__fxstatat@plt+0xaec8>
  40d8e4:	sub	sp, sp, #0x30
  40d8e8:	stp	x29, x30, [sp, #32]
  40d8ec:	str	x1, [sp, #8]
  40d8f0:	ldr	q0, [x2]
  40d8f4:	add	x1, sp, #0x8
  40d8f8:	add	x29, sp, #0x20
  40d8fc:	ext	v0.16b, v0.16b, v0.16b, #8
  40d900:	stur	q0, [sp, #16]
  40d904:	bl	40e1bc <__fxstatat@plt+0xb76c>
  40d908:	ldp	x29, x30, [sp, #32]
  40d90c:	cmp	x0, #0x0
  40d910:	cset	w0, ne  // ne = any
  40d914:	add	sp, sp, #0x30
  40d918:	ret
  40d91c:	and	w8, w0, #0xf000
  40d920:	sub	w8, w8, #0x1, lsl #12
  40d924:	lsr	w8, w8, #12
  40d928:	cmp	w8, #0xb
  40d92c:	b.hi	40d95c <__fxstatat@plt+0xaf0c>  // b.pmore
  40d930:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40d934:	add	x9, x9, #0xcad
  40d938:	adr	x10, 40d94c <__fxstatat@plt+0xaefc>
  40d93c:	ldrb	w11, [x9, x8]
  40d940:	add	x10, x10, x11, lsl #2
  40d944:	mov	w8, #0x2d                  	// #45
  40d948:	br	x10
  40d94c:	mov	w8, #0x70                  	// #112
  40d950:	b	40d980 <__fxstatat@plt+0xaf30>
  40d954:	mov	w8, #0x63                  	// #99
  40d958:	b	40d980 <__fxstatat@plt+0xaf30>
  40d95c:	mov	w8, #0x3f                  	// #63
  40d960:	b	40d980 <__fxstatat@plt+0xaf30>
  40d964:	mov	w8, #0x64                  	// #100
  40d968:	b	40d980 <__fxstatat@plt+0xaf30>
  40d96c:	mov	w8, #0x6c                  	// #108
  40d970:	b	40d980 <__fxstatat@plt+0xaf30>
  40d974:	mov	w8, #0x73                  	// #115
  40d978:	b	40d980 <__fxstatat@plt+0xaf30>
  40d97c:	mov	w8, #0x62                  	// #98
  40d980:	strb	w8, [x1]
  40d984:	tst	w0, #0x100
  40d988:	mov	w8, #0x72                  	// #114
  40d98c:	mov	w9, #0x2d                  	// #45
  40d990:	mov	w10, #0x77                  	// #119
  40d994:	csel	w14, w9, w8, eq  // eq = none
  40d998:	tst	w0, #0x80
  40d99c:	mov	w11, #0x53                  	// #83
  40d9a0:	mov	w12, #0x73                  	// #115
  40d9a4:	mov	w13, #0x78                  	// #120
  40d9a8:	strb	w14, [x1, #1]
  40d9ac:	csel	w14, w9, w10, eq  // eq = none
  40d9b0:	tst	w0, #0x40
  40d9b4:	strb	w14, [x1, #2]
  40d9b8:	csel	w14, w12, w11, ne  // ne = any
  40d9bc:	csel	w15, w13, w9, ne  // ne = any
  40d9c0:	tst	w0, #0x800
  40d9c4:	csel	w14, w15, w14, eq  // eq = none
  40d9c8:	tst	w0, #0x20
  40d9cc:	strb	w14, [x1, #3]
  40d9d0:	csel	w14, w9, w8, eq  // eq = none
  40d9d4:	tst	w0, #0x10
  40d9d8:	strb	w14, [x1, #4]
  40d9dc:	csel	w14, w9, w10, eq  // eq = none
  40d9e0:	tst	w0, #0x8
  40d9e4:	csel	w11, w12, w11, ne  // ne = any
  40d9e8:	csel	w12, w13, w9, ne  // ne = any
  40d9ec:	tst	w0, #0x400
  40d9f0:	csel	w11, w12, w11, eq  // eq = none
  40d9f4:	tst	w0, #0x4
  40d9f8:	csel	w8, w9, w8, eq  // eq = none
  40d9fc:	tst	w0, #0x2
  40da00:	mov	w15, #0x54                  	// #84
  40da04:	strb	w14, [x1, #5]
  40da08:	mov	w14, #0x74                  	// #116
  40da0c:	strb	w8, [x1, #7]
  40da10:	csel	w8, w9, w10, eq  // eq = none
  40da14:	tst	w0, #0x1
  40da18:	strb	w8, [x1, #8]
  40da1c:	csel	w8, w14, w15, ne  // ne = any
  40da20:	csel	w9, w13, w9, ne  // ne = any
  40da24:	tst	w0, #0x200
  40da28:	mov	w12, #0x20                  	// #32
  40da2c:	csel	w8, w9, w8, eq  // eq = none
  40da30:	strb	w11, [x1, #6]
  40da34:	strb	w8, [x1, #9]
  40da38:	strh	w12, [x1, #10]
  40da3c:	ret
  40da40:	ldr	w0, [x0, #16]
  40da44:	b	40d91c <__fxstatat@plt+0xaecc>
  40da48:	stp	x29, x30, [sp, #-16]!
  40da4c:	mov	x29, sp
  40da50:	bl	40da64 <__fxstatat@plt+0xb014>
  40da54:	cbz	x0, 40da60 <__fxstatat@plt+0xb010>
  40da58:	ldp	x29, x30, [sp], #16
  40da5c:	ret
  40da60:	bl	4146a4 <__fxstatat@plt+0x11c54>
  40da64:	stp	x29, x30, [sp, #-80]!
  40da68:	stp	x26, x25, [sp, #16]
  40da6c:	stp	x24, x23, [sp, #32]
  40da70:	stp	x22, x21, [sp, #48]
  40da74:	stp	x20, x19, [sp, #64]
  40da78:	mov	x29, sp
  40da7c:	mov	x20, x2
  40da80:	mov	x19, x1
  40da84:	mov	x21, x0
  40da88:	bl	40d6ec <__fxstatat@plt+0xac9c>
  40da8c:	mov	x22, x0
  40da90:	bl	40d74c <__fxstatat@plt+0xacfc>
  40da94:	sub	x8, x22, x21
  40da98:	mov	x24, x0
  40da9c:	add	x23, x8, x0
  40daa0:	mov	x0, x19
  40daa4:	bl	402430 <strlen@plt>
  40daa8:	mov	x22, x0
  40daac:	cbz	x24, 40dac8 <__fxstatat@plt+0xb078>
  40dab0:	add	x8, x23, x21
  40dab4:	ldurb	w8, [x8, #-1]
  40dab8:	cmp	w8, #0x2f
  40dabc:	b.ne	40dadc <__fxstatat@plt+0xb08c>  // b.any
  40dac0:	mov	w25, wzr
  40dac4:	b	40daec <__fxstatat@plt+0xb09c>
  40dac8:	ldrb	w8, [x19]
  40dacc:	cmp	w8, #0x2f
  40dad0:	mov	w8, #0x2e                  	// #46
  40dad4:	csel	w25, w8, wzr, eq  // eq = none
  40dad8:	b	40daec <__fxstatat@plt+0xb09c>
  40dadc:	ldrb	w8, [x19]
  40dae0:	cmp	w8, #0x2f
  40dae4:	mov	w8, #0x2f                  	// #47
  40dae8:	csel	w25, wzr, w8, eq  // eq = none
  40daec:	cmp	w25, #0x0
  40daf0:	add	x8, x22, x23
  40daf4:	cinc	x8, x8, ne  // ne = any
  40daf8:	add	x0, x8, #0x1
  40dafc:	cset	w26, ne  // ne = any
  40db00:	bl	4025f0 <malloc@plt>
  40db04:	mov	x24, x0
  40db08:	cbz	x0, 40db44 <__fxstatat@plt+0xb0f4>
  40db0c:	mov	x3, #0xffffffffffffffff    	// #-1
  40db10:	mov	x0, x24
  40db14:	mov	x1, x21
  40db18:	mov	x2, x23
  40db1c:	bl	402940 <__mempcpy_chk@plt>
  40db20:	strb	w25, [x0]
  40db24:	add	x0, x0, x26
  40db28:	cbz	x20, 40db30 <__fxstatat@plt+0xb0e0>
  40db2c:	str	x0, [x20]
  40db30:	mov	x3, #0xffffffffffffffff    	// #-1
  40db34:	mov	x1, x19
  40db38:	mov	x2, x22
  40db3c:	bl	402940 <__mempcpy_chk@plt>
  40db40:	strb	wzr, [x0]
  40db44:	mov	x0, x24
  40db48:	ldp	x20, x19, [sp, #64]
  40db4c:	ldp	x22, x21, [sp, #48]
  40db50:	ldp	x24, x23, [sp, #32]
  40db54:	ldp	x26, x25, [sp, #16]
  40db58:	ldp	x29, x30, [sp], #80
  40db5c:	ret
  40db60:	stp	x29, x30, [sp, #-80]!
  40db64:	stp	x26, x25, [sp, #16]
  40db68:	stp	x24, x23, [sp, #32]
  40db6c:	stp	x22, x21, [sp, #48]
  40db70:	stp	x20, x19, [sp, #64]
  40db74:	mov	x29, sp
  40db78:	mov	x19, x1
  40db7c:	mov	x21, x0
  40db80:	bl	402800 <strcmp@plt>
  40db84:	cbz	w0, 40dcbc <__fxstatat@plt+0xb26c>
  40db88:	ldrb	w24, [x21]
  40db8c:	cbz	w24, 40dbfc <__fxstatat@plt+0xb1ac>
  40db90:	ldrb	w22, [x19]
  40db94:	cbz	w22, 40dcb8 <__fxstatat@plt+0xb268>
  40db98:	mov	w20, w0
  40db9c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40dba0:	add	x0, x0, #0xcba
  40dba4:	mov	x1, x21
  40dba8:	bl	402800 <strcmp@plt>
  40dbac:	cbz	w0, 40dbfc <__fxstatat@plt+0xb1ac>
  40dbb0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40dbb4:	add	x0, x0, #0xcba
  40dbb8:	mov	x1, x19
  40dbbc:	bl	402800 <strcmp@plt>
  40dbc0:	cbz	w0, 40dcb8 <__fxstatat@plt+0xb268>
  40dbc4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40dbc8:	add	x0, x0, #0xcb9
  40dbcc:	mov	x1, x21
  40dbd0:	bl	402800 <strcmp@plt>
  40dbd4:	cbz	w0, 40dbfc <__fxstatat@plt+0xb1ac>
  40dbd8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40dbdc:	add	x0, x0, #0xcb9
  40dbe0:	mov	x1, x19
  40dbe4:	bl	402800 <strcmp@plt>
  40dbe8:	cbz	w0, 40dcb8 <__fxstatat@plt+0xb268>
  40dbec:	cmp	w24, #0x2e
  40dbf0:	b.ne	40dc04 <__fxstatat@plt+0xb1b4>  // b.any
  40dbf4:	cmp	w22, #0x2e
  40dbf8:	b.eq	40dc04 <__fxstatat@plt+0xb1b4>  // b.none
  40dbfc:	mov	w0, #0xffffffff            	// #-1
  40dc00:	b	40dcbc <__fxstatat@plt+0xb26c>
  40dc04:	cmp	w24, #0x2e
  40dc08:	b.ne	40dcb0 <__fxstatat@plt+0xb260>  // b.any
  40dc0c:	cmp	w22, #0x2e
  40dc10:	b.ne	40dee8 <__fxstatat@plt+0xb498>  // b.any
  40dc14:	ldrb	w24, [x21, #1]!
  40dc18:	add	x19, x19, #0x1
  40dc1c:	cbnz	w24, 40deec <__fxstatat@plt+0xb49c>
  40dc20:	mov	x22, xzr
  40dc24:	mov	x23, x21
  40dc28:	ldrb	w9, [x19]
  40dc2c:	cbz	w9, 40dcd4 <__fxstatat@plt+0xb284>
  40dc30:	mov	w8, wzr
  40dc34:	mov	x25, xzr
  40dc38:	mov	w26, #0x1                   	// #1
  40dc3c:	mov	x24, x19
  40dc40:	b	40dc58 <__fxstatat@plt+0xb208>
  40dc44:	cmp	x25, #0x0
  40dc48:	csel	x25, x24, x25, eq  // eq = none
  40dc4c:	mov	w8, #0x1                   	// #1
  40dc50:	ldrb	w9, [x24, #1]!
  40dc54:	cbz	w9, 40dcdc <__fxstatat@plt+0xb28c>
  40dc58:	tbz	w8, #0, 40dc80 <__fxstatat@plt+0xb230>
  40dc5c:	and	w9, w9, #0xff
  40dc60:	sub	w8, w9, #0x41
  40dc64:	cmp	w8, #0x39
  40dc68:	b.hi	40dca8 <__fxstatat@plt+0xb258>  // b.pmore
  40dc6c:	lsl	x8, x26, x8
  40dc70:	tst	x8, #0x3ffffff03ffffff
  40dc74:	b.eq	40dca8 <__fxstatat@plt+0xb258>  // b.none
  40dc78:	mov	w8, wzr
  40dc7c:	b	40dc50 <__fxstatat@plt+0xb200>
  40dc80:	and	w0, w9, #0xff
  40dc84:	cmp	w0, #0x2e
  40dc88:	b.eq	40dc44 <__fxstatat@plt+0xb1f4>  // b.none
  40dc8c:	bl	40cdd4 <__fxstatat@plt+0xa384>
  40dc90:	mov	w8, wzr
  40dc94:	tbnz	w0, #0, 40dc50 <__fxstatat@plt+0xb200>
  40dc98:	ldrb	w9, [x24]
  40dc9c:	cmp	w9, #0x7e
  40dca0:	csel	x25, x25, xzr, eq  // eq = none
  40dca4:	b	40dc50 <__fxstatat@plt+0xb200>
  40dca8:	mov	w8, wzr
  40dcac:	b	40dc9c <__fxstatat@plt+0xb24c>
  40dcb0:	cmp	w22, #0x2e
  40dcb4:	b.ne	40deec <__fxstatat@plt+0xb49c>  // b.any
  40dcb8:	mov	w0, #0x1                   	// #1
  40dcbc:	ldp	x20, x19, [sp, #64]
  40dcc0:	ldp	x22, x21, [sp, #48]
  40dcc4:	ldp	x24, x23, [sp, #32]
  40dcc8:	ldp	x26, x25, [sp, #16]
  40dccc:	ldp	x29, x30, [sp], #80
  40dcd0:	ret
  40dcd4:	mov	x25, xzr
  40dcd8:	mov	x24, x19
  40dcdc:	cmp	x22, #0x0
  40dce0:	csel	x8, x22, x23, ne  // ne = any
  40dce4:	cmp	x25, #0x0
  40dce8:	orr	x9, x22, x25
  40dcec:	sub	x22, x8, x21
  40dcf0:	csel	x8, x25, x24, ne  // ne = any
  40dcf4:	sub	x8, x8, x19
  40dcf8:	cbz	x9, 40dd24 <__fxstatat@plt+0xb2d4>
  40dcfc:	cmp	x22, x8
  40dd00:	b.ne	40dd24 <__fxstatat@plt+0xb2d4>  // b.any
  40dd04:	mov	x0, x21
  40dd08:	mov	x1, x19
  40dd0c:	mov	x2, x22
  40dd10:	bl	402640 <strncmp@plt>
  40dd14:	mov	x8, x22
  40dd18:	cbnz	w0, 40dd24 <__fxstatat@plt+0xb2d4>
  40dd1c:	sub	x22, x23, x21
  40dd20:	sub	x8, x24, x19
  40dd24:	mov	x9, xzr
  40dd28:	mov	x11, xzr
  40dd2c:	mov	w10, #0x1                   	// #1
  40dd30:	cmp	x9, x8
  40dd34:	b.cc	40dd40 <__fxstatat@plt+0xb2f0>  // b.lo, b.ul, b.last
  40dd38:	cmp	x11, x22
  40dd3c:	b.cs	40dee0 <__fxstatat@plt+0xb490>  // b.hs, b.nlast
  40dd40:	cmp	x11, x22
  40dd44:	b.cs	40dd58 <__fxstatat@plt+0xb308>  // b.hs, b.nlast
  40dd48:	ldrb	w12, [x21, x11]
  40dd4c:	sub	w12, w12, #0x30
  40dd50:	cmp	w12, #0x9
  40dd54:	b.hi	40dd70 <__fxstatat@plt+0xb320>  // b.pmore
  40dd58:	cmp	x9, x8
  40dd5c:	b.cs	40de3c <__fxstatat@plt+0xb3ec>  // b.hs, b.nlast
  40dd60:	ldrb	w12, [x19, x9]
  40dd64:	sub	w12, w12, #0x30
  40dd68:	cmp	w12, #0xa
  40dd6c:	b.cc	40de3c <__fxstatat@plt+0xb3ec>  // b.lo, b.ul, b.last
  40dd70:	cmp	x22, x11
  40dd74:	b.eq	40dd88 <__fxstatat@plt+0xb338>  // b.none
  40dd78:	ldrb	w12, [x21, x11]
  40dd7c:	sub	w13, w12, #0x30
  40dd80:	cmp	w13, #0xa
  40dd84:	b.cs	40dd98 <__fxstatat@plt+0xb348>  // b.hs, b.nlast
  40dd88:	mov	w12, wzr
  40dd8c:	cmp	x8, x9
  40dd90:	b.eq	40ddc8 <__fxstatat@plt+0xb378>  // b.none
  40dd94:	b	40ddb8 <__fxstatat@plt+0xb368>
  40dd98:	sub	w13, w12, #0x41
  40dd9c:	cmp	w13, #0x39
  40dda0:	b.hi	40de0c <__fxstatat@plt+0xb3bc>  // b.pmore
  40dda4:	lsl	x13, x10, x13
  40dda8:	tst	x13, #0x3ffffff03ffffff
  40ddac:	b.eq	40de0c <__fxstatat@plt+0xb3bc>  // b.none
  40ddb0:	cmp	x8, x9
  40ddb4:	b.eq	40ddc8 <__fxstatat@plt+0xb378>  // b.none
  40ddb8:	ldrb	w13, [x19, x9]
  40ddbc:	sub	w14, w13, #0x30
  40ddc0:	cmp	w14, #0xa
  40ddc4:	b.cs	40ddd8 <__fxstatat@plt+0xb388>  // b.hs, b.nlast
  40ddc8:	mov	w13, wzr
  40ddcc:	subs	w0, w12, w13
  40ddd0:	b.eq	40ddf8 <__fxstatat@plt+0xb3a8>  // b.none
  40ddd4:	b	40dedc <__fxstatat@plt+0xb48c>
  40ddd8:	sub	w14, w13, #0x41
  40dddc:	cmp	w14, #0x39
  40dde0:	b.hi	40de24 <__fxstatat@plt+0xb3d4>  // b.pmore
  40dde4:	lsl	x14, x10, x14
  40dde8:	tst	x14, #0x3ffffff03ffffff
  40ddec:	b.eq	40de24 <__fxstatat@plt+0xb3d4>  // b.none
  40ddf0:	subs	w0, w12, w13
  40ddf4:	b.ne	40dedc <__fxstatat@plt+0xb48c>  // b.any
  40ddf8:	add	x11, x11, #0x1
  40ddfc:	add	x9, x9, #0x1
  40de00:	cmp	x11, x22
  40de04:	b.cc	40dd48 <__fxstatat@plt+0xb2f8>  // b.lo, b.ul, b.last
  40de08:	b	40dd58 <__fxstatat@plt+0xb308>
  40de0c:	orr	w13, w12, #0x100
  40de10:	cmp	w12, #0x7e
  40de14:	csinv	w12, w13, wzr, ne  // ne = any
  40de18:	cmp	x8, x9
  40de1c:	b.eq	40ddc8 <__fxstatat@plt+0xb378>  // b.none
  40de20:	b	40ddb8 <__fxstatat@plt+0xb368>
  40de24:	orr	w14, w13, #0x100
  40de28:	cmp	w13, #0x7e
  40de2c:	csinv	w13, w14, wzr, ne  // ne = any
  40de30:	subs	w0, w12, w13
  40de34:	b.eq	40ddf8 <__fxstatat@plt+0xb3a8>  // b.none
  40de38:	b	40dedc <__fxstatat@plt+0xb48c>
  40de3c:	mov	x12, x11
  40de40:	ldrb	w13, [x21, x12]
  40de44:	add	x12, x12, #0x1
  40de48:	subs	w16, w13, #0x30
  40de4c:	b.eq	40de40 <__fxstatat@plt+0xb3f0>  // b.none
  40de50:	sub	x11, x12, #0x1
  40de54:	ldrb	w15, [x19, x9]
  40de58:	add	x9, x9, #0x1
  40de5c:	subs	w14, w15, #0x30
  40de60:	b.eq	40de54 <__fxstatat@plt+0xb404>  // b.none
  40de64:	cmp	w14, #0xa
  40de68:	cset	w14, cc  // cc = lo, ul, last
  40de6c:	cmp	w16, #0x9
  40de70:	b.hi	40dec8 <__fxstatat@plt+0xb478>  // b.pmore
  40de74:	mov	x11, xzr
  40de78:	mov	w0, wzr
  40de7c:	add	x16, x21, x12
  40de80:	add	x17, x19, x9
  40de84:	tbz	w14, #0, 40dcb8 <__fxstatat@plt+0xb268>
  40de88:	sub	w14, w13, w15
  40de8c:	ldrb	w15, [x17, x11]
  40de90:	ldrb	w13, [x16, x11]
  40de94:	cmp	w0, #0x0
  40de98:	csel	w0, w14, w0, eq  // eq = none
  40de9c:	sub	w14, w15, #0x30
  40dea0:	sub	w18, w13, #0x30
  40dea4:	cmp	w14, #0xa
  40dea8:	cset	w14, cc  // cc = lo, ul, last
  40deac:	cmp	w18, #0xa
  40deb0:	add	x11, x11, #0x1
  40deb4:	b.cc	40de84 <__fxstatat@plt+0xb434>  // b.lo, b.ul, b.last
  40deb8:	add	x12, x12, x11
  40debc:	add	x9, x9, x11
  40dec0:	sub	x11, x12, #0x1
  40dec4:	b	40decc <__fxstatat@plt+0xb47c>
  40dec8:	mov	w0, wzr
  40decc:	sub	x9, x9, #0x1
  40ded0:	tbnz	w14, #0, 40dbfc <__fxstatat@plt+0xb1ac>
  40ded4:	cbz	w0, 40dd30 <__fxstatat@plt+0xb2e0>
  40ded8:	b	40dcbc <__fxstatat@plt+0xb26c>
  40dedc:	b.ne	40dcbc <__fxstatat@plt+0xb26c>  // b.any
  40dee0:	mov	w0, w20
  40dee4:	b	40dcbc <__fxstatat@plt+0xb26c>
  40dee8:	mov	w24, #0x2e                  	// #46
  40deec:	mov	w8, wzr
  40def0:	mov	x22, xzr
  40def4:	mov	w25, #0x1                   	// #1
  40def8:	mov	x23, x21
  40defc:	b	40df14 <__fxstatat@plt+0xb4c4>
  40df00:	cmp	x22, #0x0
  40df04:	csel	x22, x23, x22, eq  // eq = none
  40df08:	mov	w8, #0x1                   	// #1
  40df0c:	ldrb	w24, [x23, #1]!
  40df10:	cbz	w24, 40dc28 <__fxstatat@plt+0xb1d8>
  40df14:	tbz	w8, #0, 40df3c <__fxstatat@plt+0xb4ec>
  40df18:	and	w9, w24, #0xff
  40df1c:	sub	w8, w9, #0x41
  40df20:	cmp	w8, #0x39
  40df24:	b.hi	40df64 <__fxstatat@plt+0xb514>  // b.pmore
  40df28:	lsl	x8, x25, x8
  40df2c:	tst	x8, #0x3ffffff03ffffff
  40df30:	b.eq	40df64 <__fxstatat@plt+0xb514>  // b.none
  40df34:	mov	w8, wzr
  40df38:	b	40df0c <__fxstatat@plt+0xb4bc>
  40df3c:	and	w0, w24, #0xff
  40df40:	cmp	w0, #0x2e
  40df44:	b.eq	40df00 <__fxstatat@plt+0xb4b0>  // b.none
  40df48:	bl	40cdd4 <__fxstatat@plt+0xa384>
  40df4c:	mov	w8, wzr
  40df50:	tbnz	w0, #0, 40df0c <__fxstatat@plt+0xb4bc>
  40df54:	ldrb	w9, [x23]
  40df58:	cmp	w9, #0x7e
  40df5c:	csel	x22, x22, xzr, eq  // eq = none
  40df60:	b	40df0c <__fxstatat@plt+0xb4bc>
  40df64:	mov	w8, wzr
  40df68:	b	40df58 <__fxstatat@plt+0xb508>
  40df6c:	mov	x1, x0
  40df70:	mov	w0, wzr
  40df74:	b	402530 <clock_gettime@plt>
  40df78:	sub	sp, sp, #0x20
  40df7c:	mov	x1, sp
  40df80:	mov	w0, wzr
  40df84:	stp	x29, x30, [sp, #16]
  40df88:	add	x29, sp, #0x10
  40df8c:	bl	402530 <clock_gettime@plt>
  40df90:	ldp	x0, x1, [sp]
  40df94:	ldp	x29, x30, [sp, #16]
  40df98:	add	sp, sp, #0x20
  40df9c:	ret
  40dfa0:	stp	x29, x30, [sp, #-32]!
  40dfa4:	mov	x1, xzr
  40dfa8:	str	x19, [sp, #16]
  40dfac:	mov	x29, sp
  40dfb0:	bl	402a40 <setlocale@plt>
  40dfb4:	cbz	x0, 40dfe0 <__fxstatat@plt+0xb590>
  40dfb8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40dfbc:	add	x1, x1, #0xcbc
  40dfc0:	mov	x19, x0
  40dfc4:	bl	402800 <strcmp@plt>
  40dfc8:	cbz	w0, 40dff0 <__fxstatat@plt+0xb5a0>
  40dfcc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40dfd0:	add	x1, x1, #0xcbe
  40dfd4:	mov	x0, x19
  40dfd8:	bl	402800 <strcmp@plt>
  40dfdc:	cbz	w0, 40dff0 <__fxstatat@plt+0xb5a0>
  40dfe0:	mov	w0, #0x1                   	// #1
  40dfe4:	ldr	x19, [sp, #16]
  40dfe8:	ldp	x29, x30, [sp], #32
  40dfec:	ret
  40dff0:	mov	w0, wzr
  40dff4:	ldr	x19, [sp, #16]
  40dff8:	ldp	x29, x30, [sp], #32
  40dffc:	ret
  40e000:	ldr	x0, [x0, #16]
  40e004:	ret
  40e008:	ldr	x0, [x0, #24]
  40e00c:	ret
  40e010:	ldr	x0, [x0, #32]
  40e014:	ret
  40e018:	ldp	x8, x9, [x0]
  40e01c:	cmp	x8, x9
  40e020:	b.cs	40e060 <__fxstatat@plt+0xb610>  // b.hs, b.nlast
  40e024:	mov	x0, xzr
  40e028:	b	40e038 <__fxstatat@plt+0xb5e8>
  40e02c:	add	x8, x8, #0x10
  40e030:	cmp	x8, x9
  40e034:	b.cs	40e064 <__fxstatat@plt+0xb614>  // b.hs, b.nlast
  40e038:	ldr	x10, [x8]
  40e03c:	cbz	x10, 40e02c <__fxstatat@plt+0xb5dc>
  40e040:	mov	x10, xzr
  40e044:	mov	x11, x8
  40e048:	ldr	x11, [x11, #8]
  40e04c:	add	x10, x10, #0x1
  40e050:	cbnz	x11, 40e048 <__fxstatat@plt+0xb5f8>
  40e054:	cmp	x10, x0
  40e058:	csel	x0, x10, x0, hi  // hi = pmore
  40e05c:	b	40e02c <__fxstatat@plt+0xb5dc>
  40e060:	mov	x0, xzr
  40e064:	ret
  40e068:	ldp	x9, x10, [x0]
  40e06c:	cmp	x9, x10
  40e070:	b.cs	40e0ac <__fxstatat@plt+0xb65c>  // b.hs, b.nlast
  40e074:	mov	x8, xzr
  40e078:	mov	x11, xzr
  40e07c:	b	40e08c <__fxstatat@plt+0xb63c>
  40e080:	add	x9, x9, #0x10
  40e084:	cmp	x9, x10
  40e088:	b.cs	40e0b4 <__fxstatat@plt+0xb664>  // b.hs, b.nlast
  40e08c:	ldr	x12, [x9]
  40e090:	cbz	x12, 40e080 <__fxstatat@plt+0xb630>
  40e094:	mov	x12, x9
  40e098:	ldr	x12, [x12, #8]
  40e09c:	add	x8, x8, #0x1
  40e0a0:	cbnz	x12, 40e098 <__fxstatat@plt+0xb648>
  40e0a4:	add	x11, x11, #0x1
  40e0a8:	b	40e080 <__fxstatat@plt+0xb630>
  40e0ac:	mov	x11, xzr
  40e0b0:	mov	x8, xzr
  40e0b4:	ldr	x9, [x0, #24]
  40e0b8:	cmp	x11, x9
  40e0bc:	b.ne	40e0d4 <__fxstatat@plt+0xb684>  // b.any
  40e0c0:	ldr	x9, [x0, #32]
  40e0c4:	cmp	x8, x9
  40e0c8:	b.ne	40e0d4 <__fxstatat@plt+0xb684>  // b.any
  40e0cc:	mov	w0, #0x1                   	// #1
  40e0d0:	ret
  40e0d4:	mov	w0, wzr
  40e0d8:	ret
  40e0dc:	stp	x29, x30, [sp, #-48]!
  40e0e0:	stp	x22, x21, [sp, #16]
  40e0e4:	stp	x20, x19, [sp, #32]
  40e0e8:	ldp	x8, x9, [x0]
  40e0ec:	ldp	x20, x3, [x0, #24]
  40e0f0:	ldr	x22, [x0, #16]
  40e0f4:	mov	x19, x1
  40e0f8:	cmp	x8, x9
  40e0fc:	mov	x21, xzr
  40e100:	mov	x29, sp
  40e104:	b.cc	40e194 <__fxstatat@plt+0xb744>  // b.lo, b.ul, b.last
  40e108:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40e10c:	add	x2, x2, #0xcc4
  40e110:	mov	w1, #0x1                   	// #1
  40e114:	mov	x0, x19
  40e118:	bl	4027e0 <__fprintf_chk@plt>
  40e11c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40e120:	add	x2, x2, #0xcdc
  40e124:	mov	w1, #0x1                   	// #1
  40e128:	mov	x0, x19
  40e12c:	mov	x3, x22
  40e130:	bl	4027e0 <__fprintf_chk@plt>
  40e134:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40e138:	ucvtf	d0, x20
  40e13c:	fmov	d1, x8
  40e140:	fmul	d0, d0, d1
  40e144:	ucvtf	d1, x22
  40e148:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40e14c:	fdiv	d0, d0, d1
  40e150:	add	x2, x2, #0xcf4
  40e154:	mov	w1, #0x1                   	// #1
  40e158:	mov	x0, x19
  40e15c:	mov	x3, x20
  40e160:	bl	4027e0 <__fprintf_chk@plt>
  40e164:	mov	x0, x19
  40e168:	mov	x3, x21
  40e16c:	ldp	x20, x19, [sp, #32]
  40e170:	ldp	x22, x21, [sp, #16]
  40e174:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40e178:	add	x2, x2, #0xd15
  40e17c:	mov	w1, #0x1                   	// #1
  40e180:	ldp	x29, x30, [sp], #48
  40e184:	b	4027e0 <__fprintf_chk@plt>
  40e188:	add	x8, x8, #0x10
  40e18c:	cmp	x8, x9
  40e190:	b.cs	40e108 <__fxstatat@plt+0xb6b8>  // b.hs, b.nlast
  40e194:	ldr	x10, [x8]
  40e198:	cbz	x10, 40e188 <__fxstatat@plt+0xb738>
  40e19c:	mov	x10, xzr
  40e1a0:	mov	x11, x8
  40e1a4:	ldr	x11, [x11, #8]
  40e1a8:	add	x10, x10, #0x1
  40e1ac:	cbnz	x11, 40e1a4 <__fxstatat@plt+0xb754>
  40e1b0:	cmp	x10, x21
  40e1b4:	csel	x21, x10, x21, hi  // hi = pmore
  40e1b8:	b	40e188 <__fxstatat@plt+0xb738>
  40e1bc:	stp	x29, x30, [sp, #-48]!
  40e1c0:	stp	x20, x19, [sp, #32]
  40e1c4:	ldr	x8, [x0, #16]
  40e1c8:	ldr	x9, [x0, #48]
  40e1cc:	mov	x19, x0
  40e1d0:	mov	x20, x1
  40e1d4:	mov	x0, x1
  40e1d8:	mov	x1, x8
  40e1dc:	str	x21, [sp, #16]
  40e1e0:	mov	x29, sp
  40e1e4:	blr	x9
  40e1e8:	ldr	x8, [x19, #16]
  40e1ec:	cmp	x0, x8
  40e1f0:	b.cs	40e274 <__fxstatat@plt+0xb824>  // b.hs, b.nlast
  40e1f4:	ldr	x8, [x19]
  40e1f8:	add	x21, x8, x0, lsl #4
  40e1fc:	ldr	x1, [x21]
  40e200:	mov	x0, xzr
  40e204:	cbz	x1, 40e23c <__fxstatat@plt+0xb7ec>
  40e208:	cbz	x8, 40e23c <__fxstatat@plt+0xb7ec>
  40e20c:	cmp	x1, x20
  40e210:	b.eq	40e238 <__fxstatat@plt+0xb7e8>  // b.none
  40e214:	ldr	x8, [x19, #56]
  40e218:	mov	x0, x20
  40e21c:	blr	x8
  40e220:	tbnz	w0, #0, 40e24c <__fxstatat@plt+0xb7fc>
  40e224:	ldr	x21, [x21, #8]
  40e228:	cbz	x21, 40e260 <__fxstatat@plt+0xb810>
  40e22c:	ldr	x1, [x21]
  40e230:	cmp	x1, x20
  40e234:	b.ne	40e214 <__fxstatat@plt+0xb7c4>  // b.any
  40e238:	mov	x0, x20
  40e23c:	ldp	x20, x19, [sp, #32]
  40e240:	ldr	x21, [sp, #16]
  40e244:	ldp	x29, x30, [sp], #48
  40e248:	ret
  40e24c:	ldr	x0, [x21]
  40e250:	ldp	x20, x19, [sp, #32]
  40e254:	ldr	x21, [sp, #16]
  40e258:	ldp	x29, x30, [sp], #48
  40e25c:	ret
  40e260:	mov	x0, xzr
  40e264:	ldp	x20, x19, [sp, #32]
  40e268:	ldr	x21, [sp, #16]
  40e26c:	ldp	x29, x30, [sp], #48
  40e270:	ret
  40e274:	bl	402770 <abort@plt>
  40e278:	stp	x29, x30, [sp, #-16]!
  40e27c:	ldr	x8, [x0, #32]
  40e280:	mov	x29, sp
  40e284:	cbz	x8, 40e2a4 <__fxstatat@plt+0xb854>
  40e288:	ldp	x8, x9, [x0]
  40e28c:	cmp	x8, x9
  40e290:	b.cs	40e2b0 <__fxstatat@plt+0xb860>  // b.hs, b.nlast
  40e294:	ldr	x0, [x8], #16
  40e298:	cbz	x0, 40e28c <__fxstatat@plt+0xb83c>
  40e29c:	ldp	x29, x30, [sp], #16
  40e2a0:	ret
  40e2a4:	mov	x0, xzr
  40e2a8:	ldp	x29, x30, [sp], #16
  40e2ac:	ret
  40e2b0:	bl	402770 <abort@plt>
  40e2b4:	stp	x29, x30, [sp, #-32]!
  40e2b8:	stp	x20, x19, [sp, #16]
  40e2bc:	ldr	x8, [x0, #16]
  40e2c0:	ldr	x9, [x0, #48]
  40e2c4:	mov	x19, x0
  40e2c8:	mov	x20, x1
  40e2cc:	mov	x0, x1
  40e2d0:	mov	x1, x8
  40e2d4:	mov	x29, sp
  40e2d8:	blr	x9
  40e2dc:	ldr	x8, [x19, #16]
  40e2e0:	cmp	x0, x8
  40e2e4:	b.cs	40e348 <__fxstatat@plt+0xb8f8>  // b.hs, b.nlast
  40e2e8:	ldr	x8, [x19]
  40e2ec:	add	x9, x8, x0, lsl #4
  40e2f0:	ldp	x10, x9, [x9]
  40e2f4:	cmp	x10, x20
  40e2f8:	b.eq	40e304 <__fxstatat@plt+0xb8b4>  // b.none
  40e2fc:	cbnz	x9, 40e2f0 <__fxstatat@plt+0xb8a0>
  40e300:	b	40e318 <__fxstatat@plt+0xb8c8>
  40e304:	cbz	x9, 40e318 <__fxstatat@plt+0xb8c8>
  40e308:	ldr	x0, [x9]
  40e30c:	ldp	x20, x19, [sp, #16]
  40e310:	ldp	x29, x30, [sp], #32
  40e314:	ret
  40e318:	ldr	x9, [x19, #8]
  40e31c:	add	x8, x8, x0, lsl #4
  40e320:	add	x8, x8, #0x10
  40e324:	cmp	x8, x9
  40e328:	b.cs	40e338 <__fxstatat@plt+0xb8e8>  // b.hs, b.nlast
  40e32c:	ldr	x0, [x8], #16
  40e330:	cbz	x0, 40e324 <__fxstatat@plt+0xb8d4>
  40e334:	b	40e30c <__fxstatat@plt+0xb8bc>
  40e338:	mov	x0, xzr
  40e33c:	ldp	x20, x19, [sp, #16]
  40e340:	ldp	x29, x30, [sp], #32
  40e344:	ret
  40e348:	bl	402770 <abort@plt>
  40e34c:	ldp	x9, x10, [x0]
  40e350:	cmp	x9, x10
  40e354:	b.cs	40e3c0 <__fxstatat@plt+0xb970>  // b.hs, b.nlast
  40e358:	mov	x11, xzr
  40e35c:	ldr	x8, [x9]
  40e360:	cbz	x8, 40e3a4 <__fxstatat@plt+0xb954>
  40e364:	cbz	x9, 40e3a4 <__fxstatat@plt+0xb954>
  40e368:	mov	x10, x9
  40e36c:	cmp	x11, x2
  40e370:	b.cs	40e3c8 <__fxstatat@plt+0xb978>  // b.hs, b.nlast
  40e374:	ldr	x8, [x10]
  40e378:	str	x8, [x1, x11, lsl #3]
  40e37c:	ldr	x10, [x10, #8]
  40e380:	add	x8, x11, #0x1
  40e384:	mov	x11, x8
  40e388:	cbnz	x10, 40e36c <__fxstatat@plt+0xb91c>
  40e38c:	ldr	x10, [x0, #8]
  40e390:	add	x9, x9, #0x10
  40e394:	cmp	x9, x10
  40e398:	mov	x11, x8
  40e39c:	b.cc	40e35c <__fxstatat@plt+0xb90c>  // b.lo, b.ul, b.last
  40e3a0:	b	40e3b8 <__fxstatat@plt+0xb968>
  40e3a4:	mov	x8, x11
  40e3a8:	add	x9, x9, #0x10
  40e3ac:	cmp	x9, x10
  40e3b0:	mov	x11, x8
  40e3b4:	b.cc	40e35c <__fxstatat@plt+0xb90c>  // b.lo, b.ul, b.last
  40e3b8:	mov	x0, x8
  40e3bc:	ret
  40e3c0:	mov	x0, xzr
  40e3c4:	ret
  40e3c8:	mov	x0, x11
  40e3cc:	ret
  40e3d0:	stp	x29, x30, [sp, #-64]!
  40e3d4:	stp	x24, x23, [sp, #16]
  40e3d8:	stp	x22, x21, [sp, #32]
  40e3dc:	stp	x20, x19, [sp, #48]
  40e3e0:	ldp	x23, x8, [x0]
  40e3e4:	mov	x29, sp
  40e3e8:	cmp	x23, x8
  40e3ec:	b.cs	40e404 <__fxstatat@plt+0xb9b4>  // b.hs, b.nlast
  40e3f0:	mov	x19, x2
  40e3f4:	mov	x20, x0
  40e3f8:	mov	x21, x1
  40e3fc:	mov	x22, xzr
  40e400:	b	40e41c <__fxstatat@plt+0xb9cc>
  40e404:	mov	x22, xzr
  40e408:	b	40e454 <__fxstatat@plt+0xba04>
  40e40c:	ldr	x8, [x20, #8]
  40e410:	add	x23, x23, #0x10
  40e414:	cmp	x23, x8
  40e418:	b.cs	40e454 <__fxstatat@plt+0xba04>  // b.hs, b.nlast
  40e41c:	ldr	x0, [x23]
  40e420:	cbz	x0, 40e410 <__fxstatat@plt+0xb9c0>
  40e424:	cbz	x23, 40e410 <__fxstatat@plt+0xb9c0>
  40e428:	mov	x1, x19
  40e42c:	blr	x21
  40e430:	tbz	w0, #0, 40e454 <__fxstatat@plt+0xba04>
  40e434:	mov	x24, x23
  40e438:	ldr	x24, [x24, #8]
  40e43c:	add	x22, x22, #0x1
  40e440:	cbz	x24, 40e40c <__fxstatat@plt+0xb9bc>
  40e444:	ldr	x0, [x24]
  40e448:	mov	x1, x19
  40e44c:	blr	x21
  40e450:	tbnz	w0, #0, 40e438 <__fxstatat@plt+0xb9e8>
  40e454:	mov	x0, x22
  40e458:	ldp	x20, x19, [sp, #48]
  40e45c:	ldp	x22, x21, [sp, #32]
  40e460:	ldp	x24, x23, [sp, #16]
  40e464:	ldp	x29, x30, [sp], #64
  40e468:	ret
  40e46c:	ldrb	w9, [x0]
  40e470:	cbz	w9, 40e4a0 <__fxstatat@plt+0xba50>
  40e474:	mov	x8, x0
  40e478:	mov	x0, xzr
  40e47c:	add	x8, x8, #0x1
  40e480:	lsl	x10, x0, #5
  40e484:	sub	x10, x10, x0
  40e488:	add	x10, x10, w9, uxtb
  40e48c:	ldrb	w9, [x8], #1
  40e490:	udiv	x11, x10, x1
  40e494:	msub	x0, x11, x1, x10
  40e498:	cbnz	w9, 40e480 <__fxstatat@plt+0xba30>
  40e49c:	ret
  40e4a0:	mov	x0, xzr
  40e4a4:	ret
  40e4a8:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40e4ac:	add	x8, x8, #0xd30
  40e4b0:	ldr	w9, [x8, #16]
  40e4b4:	ldr	q0, [x8]
  40e4b8:	str	w9, [x0, #16]
  40e4bc:	str	q0, [x0]
  40e4c0:	ret
  40e4c4:	stp	x29, x30, [sp, #-64]!
  40e4c8:	adrp	x8, 40e000 <__fxstatat@plt+0xb5b0>
  40e4cc:	add	x8, x8, #0x6ac
  40e4d0:	cmp	x2, #0x0
  40e4d4:	adrp	x9, 40e000 <__fxstatat@plt+0xb5b0>
  40e4d8:	stp	x24, x23, [sp, #16]
  40e4dc:	stp	x22, x21, [sp, #32]
  40e4e0:	mov	x21, x0
  40e4e4:	add	x9, x9, #0x6bc
  40e4e8:	csel	x23, x8, x2, eq  // eq = none
  40e4ec:	cmp	x3, #0x0
  40e4f0:	mov	w0, #0x50                  	// #80
  40e4f4:	stp	x20, x19, [sp, #48]
  40e4f8:	mov	x29, sp
  40e4fc:	mov	x19, x4
  40e500:	mov	x22, x1
  40e504:	csel	x24, x9, x3, eq  // eq = none
  40e508:	bl	4025f0 <malloc@plt>
  40e50c:	mov	x20, x0
  40e510:	cbz	x0, 40e694 <__fxstatat@plt+0xbc44>
  40e514:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40e518:	add	x9, x9, #0xd30
  40e51c:	cmp	x22, #0x0
  40e520:	csel	x8, x9, x22, eq  // eq = none
  40e524:	cmp	x8, x9
  40e528:	str	x8, [x20, #40]
  40e52c:	b.eq	40e5b0 <__fxstatat@plt+0xbb60>  // b.none
  40e530:	ldr	s0, [x8, #8]
  40e534:	mov	w9, #0xcccd                	// #52429
  40e538:	movk	w9, #0x3dcc, lsl #16
  40e53c:	fmov	s1, w9
  40e540:	fcmp	s0, s1
  40e544:	b.le	40e688 <__fxstatat@plt+0xbc38>
  40e548:	mov	w9, #0x6666                	// #26214
  40e54c:	movk	w9, #0x3f66, lsl #16
  40e550:	fmov	s1, w9
  40e554:	fcmp	s0, s1
  40e558:	b.pl	40e688 <__fxstatat@plt+0xbc38>  // b.nfrst
  40e55c:	ldr	s1, [x8, #12]
  40e560:	mov	w9, #0xcccd                	// #52429
  40e564:	movk	w9, #0x3f8c, lsl #16
  40e568:	fmov	s2, w9
  40e56c:	fcmp	s1, s2
  40e570:	b.le	40e688 <__fxstatat@plt+0xbc38>
  40e574:	ldr	s1, [x8]
  40e578:	fcmp	s1, #0.0
  40e57c:	b.lt	40e688 <__fxstatat@plt+0xbc38>  // b.tstop
  40e580:	mov	w9, #0xcccd                	// #52429
  40e584:	movk	w9, #0x3dcc, lsl #16
  40e588:	fmov	s2, w9
  40e58c:	fadd	s1, s1, s2
  40e590:	fcmp	s1, s0
  40e594:	b.pl	40e688 <__fxstatat@plt+0xbc38>  // b.nfrst
  40e598:	ldr	s0, [x8, #4]
  40e59c:	fmov	s2, #1.000000000000000000e+00
  40e5a0:	fcmp	s0, s2
  40e5a4:	b.hi	40e688 <__fxstatat@plt+0xbc38>  // b.pmore
  40e5a8:	fcmp	s1, s0
  40e5ac:	b.pl	40e688 <__fxstatat@plt+0xbc38>  // b.nfrst
  40e5b0:	ldrb	w9, [x8, #16]
  40e5b4:	cbnz	w9, 40e5d8 <__fxstatat@plt+0xbb88>
  40e5b8:	ldr	s0, [x8, #8]
  40e5bc:	ucvtf	s1, x21
  40e5c0:	mov	w8, #0x5f800000            	// #1602224128
  40e5c4:	fdiv	s0, s1, s0
  40e5c8:	fmov	s1, w8
  40e5cc:	fcmp	s0, s1
  40e5d0:	b.ge	40e688 <__fxstatat@plt+0xbc38>  // b.tcont
  40e5d4:	fcvtzu	x21, s0
  40e5d8:	cmp	x21, #0xa
  40e5dc:	mov	w8, #0xa                   	// #10
  40e5e0:	csel	x8, x21, x8, hi  // hi = pmore
  40e5e4:	orr	x21, x8, #0x1
  40e5e8:	cmn	x21, #0x1
  40e5ec:	b.eq	40e688 <__fxstatat@plt+0xbc38>  // b.none
  40e5f0:	cmp	x21, #0xa
  40e5f4:	b.cc	40e62c <__fxstatat@plt+0xbbdc>  // b.lo, b.ul, b.last
  40e5f8:	mov	w9, #0xc                   	// #12
  40e5fc:	mov	w10, #0x9                   	// #9
  40e600:	mov	w8, #0x3                   	// #3
  40e604:	udiv	x11, x21, x8
  40e608:	msub	x11, x11, x8, x21
  40e60c:	cbz	x11, 40e630 <__fxstatat@plt+0xbbe0>
  40e610:	add	x10, x10, x9
  40e614:	add	x10, x10, #0x4
  40e618:	add	x8, x8, #0x2
  40e61c:	cmp	x10, x21
  40e620:	add	x9, x9, #0x8
  40e624:	b.cc	40e604 <__fxstatat@plt+0xbbb4>  // b.lo, b.ul, b.last
  40e628:	b	40e630 <__fxstatat@plt+0xbbe0>
  40e62c:	mov	w8, #0x3                   	// #3
  40e630:	udiv	x9, x21, x8
  40e634:	msub	x8, x9, x8, x21
  40e638:	cbnz	x8, 40e64c <__fxstatat@plt+0xbbfc>
  40e63c:	add	x21, x21, #0x2
  40e640:	cmn	x21, #0x1
  40e644:	b.ne	40e5f0 <__fxstatat@plt+0xbba0>  // b.any
  40e648:	b	40e688 <__fxstatat@plt+0xbc38>
  40e64c:	lsr	x8, x21, #60
  40e650:	cbnz	x8, 40e688 <__fxstatat@plt+0xbc38>
  40e654:	str	x21, [x20, #16]
  40e658:	cbz	x21, 40e688 <__fxstatat@plt+0xbc38>
  40e65c:	mov	w1, #0x10                  	// #16
  40e660:	mov	x0, x21
  40e664:	bl	4150fc <__fxstatat@plt+0x126ac>
  40e668:	str	x0, [x20]
  40e66c:	cbz	x0, 40e688 <__fxstatat@plt+0xbc38>
  40e670:	add	x8, x0, x21, lsl #4
  40e674:	stp	xzr, xzr, [x20, #24]
  40e678:	stp	x23, x24, [x20, #48]
  40e67c:	str	x8, [x20, #8]
  40e680:	stp	x19, xzr, [x20, #64]
  40e684:	b	40e694 <__fxstatat@plt+0xbc44>
  40e688:	mov	x0, x20
  40e68c:	bl	402840 <free@plt>
  40e690:	mov	x20, xzr
  40e694:	mov	x0, x20
  40e698:	ldp	x20, x19, [sp, #48]
  40e69c:	ldp	x22, x21, [sp, #32]
  40e6a0:	ldp	x24, x23, [sp, #16]
  40e6a4:	ldp	x29, x30, [sp], #64
  40e6a8:	ret
  40e6ac:	ror	x8, x0, #3
  40e6b0:	udiv	x9, x8, x1
  40e6b4:	msub	x0, x9, x1, x8
  40e6b8:	ret
  40e6bc:	cmp	x0, x1
  40e6c0:	cset	w0, eq  // eq = none
  40e6c4:	ret
  40e6c8:	stp	x29, x30, [sp, #-48]!
  40e6cc:	str	x21, [sp, #16]
  40e6d0:	stp	x20, x19, [sp, #32]
  40e6d4:	ldp	x20, x8, [x0]
  40e6d8:	mov	x19, x0
  40e6dc:	mov	x29, sp
  40e6e0:	b	40e6f0 <__fxstatat@plt+0xbca0>
  40e6e4:	stp	xzr, xzr, [x20]
  40e6e8:	ldr	x8, [x19, #8]
  40e6ec:	add	x20, x20, #0x10
  40e6f0:	cmp	x20, x8
  40e6f4:	b.cs	40e75c <__fxstatat@plt+0xbd0c>  // b.hs, b.nlast
  40e6f8:	ldr	x9, [x20]
  40e6fc:	cbz	x9, 40e6ec <__fxstatat@plt+0xbc9c>
  40e700:	ldr	x8, [x19, #64]
  40e704:	ldr	x21, [x20, #8]
  40e708:	cmp	x8, #0x0
  40e70c:	cset	w9, ne  // ne = any
  40e710:	cbnz	x21, 40e748 <__fxstatat@plt+0xbcf8>
  40e714:	cbz	w9, 40e6e4 <__fxstatat@plt+0xbc94>
  40e718:	ldr	x0, [x20]
  40e71c:	blr	x8
  40e720:	b	40e6e4 <__fxstatat@plt+0xbc94>
  40e724:	str	xzr, [x21]
  40e728:	ldr	x9, [x19, #72]
  40e72c:	ldr	x10, [x21, #8]
  40e730:	cmp	x8, #0x0
  40e734:	str	x9, [x21, #8]
  40e738:	str	x21, [x19, #72]
  40e73c:	cset	w9, ne  // ne = any
  40e740:	mov	x21, x10
  40e744:	cbz	x10, 40e714 <__fxstatat@plt+0xbcc4>
  40e748:	tbz	w9, #0, 40e724 <__fxstatat@plt+0xbcd4>
  40e74c:	ldr	x0, [x21]
  40e750:	blr	x8
  40e754:	ldr	x8, [x19, #64]
  40e758:	b	40e724 <__fxstatat@plt+0xbcd4>
  40e75c:	stp	xzr, xzr, [x19, #24]
  40e760:	ldp	x20, x19, [sp, #32]
  40e764:	ldr	x21, [sp, #16]
  40e768:	ldp	x29, x30, [sp], #48
  40e76c:	ret
  40e770:	stp	x29, x30, [sp, #-48]!
  40e774:	stp	x20, x19, [sp, #32]
  40e778:	ldr	x8, [x0, #64]
  40e77c:	mov	x19, x0
  40e780:	str	x21, [sp, #16]
  40e784:	mov	x29, sp
  40e788:	cbz	x8, 40e7e0 <__fxstatat@plt+0xbd90>
  40e78c:	ldr	x8, [x19, #32]
  40e790:	cbz	x8, 40e7e0 <__fxstatat@plt+0xbd90>
  40e794:	ldp	x20, x8, [x19]
  40e798:	b	40e7a4 <__fxstatat@plt+0xbd54>
  40e79c:	ldr	x8, [x19, #8]
  40e7a0:	add	x20, x20, #0x10
  40e7a4:	cmp	x20, x8
  40e7a8:	b.cs	40e7e0 <__fxstatat@plt+0xbd90>  // b.hs, b.nlast
  40e7ac:	ldr	x0, [x20]
  40e7b0:	cbz	x0, 40e7a0 <__fxstatat@plt+0xbd50>
  40e7b4:	cbz	x20, 40e7a0 <__fxstatat@plt+0xbd50>
  40e7b8:	ldr	x8, [x19, #64]
  40e7bc:	blr	x8
  40e7c0:	ldr	x21, [x20, #8]
  40e7c4:	cbz	x21, 40e79c <__fxstatat@plt+0xbd4c>
  40e7c8:	ldr	x0, [x21]
  40e7cc:	ldr	x8, [x19, #64]
  40e7d0:	blr	x8
  40e7d4:	ldr	x21, [x21, #8]
  40e7d8:	cbnz	x21, 40e7c8 <__fxstatat@plt+0xbd78>
  40e7dc:	b	40e79c <__fxstatat@plt+0xbd4c>
  40e7e0:	ldp	x20, x8, [x19]
  40e7e4:	b	40e7ec <__fxstatat@plt+0xbd9c>
  40e7e8:	add	x20, x20, #0x10
  40e7ec:	cmp	x20, x8
  40e7f0:	b.cs	40e814 <__fxstatat@plt+0xbdc4>  // b.hs, b.nlast
  40e7f4:	ldr	x0, [x20, #8]
  40e7f8:	cbz	x0, 40e7e8 <__fxstatat@plt+0xbd98>
  40e7fc:	ldr	x21, [x0, #8]
  40e800:	bl	402840 <free@plt>
  40e804:	mov	x0, x21
  40e808:	cbnz	x21, 40e7fc <__fxstatat@plt+0xbdac>
  40e80c:	ldr	x8, [x19, #8]
  40e810:	b	40e7e8 <__fxstatat@plt+0xbd98>
  40e814:	ldr	x0, [x19, #72]
  40e818:	cbz	x0, 40e82c <__fxstatat@plt+0xbddc>
  40e81c:	ldr	x20, [x0, #8]
  40e820:	bl	402840 <free@plt>
  40e824:	mov	x0, x20
  40e828:	cbnz	x20, 40e81c <__fxstatat@plt+0xbdcc>
  40e82c:	ldr	x0, [x19]
  40e830:	bl	402840 <free@plt>
  40e834:	mov	x0, x19
  40e838:	ldp	x20, x19, [sp, #32]
  40e83c:	ldr	x21, [sp, #16]
  40e840:	ldp	x29, x30, [sp], #48
  40e844:	b	402840 <free@plt>
  40e848:	sub	sp, sp, #0x90
  40e84c:	stp	x29, x30, [sp, #80]
  40e850:	stp	x24, x23, [sp, #96]
  40e854:	stp	x22, x21, [sp, #112]
  40e858:	stp	x20, x19, [sp, #128]
  40e85c:	ldr	x8, [x0, #40]
  40e860:	mov	x19, x0
  40e864:	add	x29, sp, #0x50
  40e868:	ldrb	w9, [x8, #16]
  40e86c:	cbnz	w9, 40e890 <__fxstatat@plt+0xbe40>
  40e870:	ldr	s0, [x8, #8]
  40e874:	ucvtf	s1, x1
  40e878:	mov	w8, #0x5f800000            	// #1602224128
  40e87c:	fdiv	s0, s1, s0
  40e880:	fmov	s1, w8
  40e884:	fcmp	s0, s1
  40e888:	b.ge	40e914 <__fxstatat@plt+0xbec4>  // b.tcont
  40e88c:	fcvtzu	x1, s0
  40e890:	cmp	x1, #0xa
  40e894:	mov	w8, #0xa                   	// #10
  40e898:	csel	x8, x1, x8, hi  // hi = pmore
  40e89c:	orr	x20, x8, #0x1
  40e8a0:	cmn	x20, #0x1
  40e8a4:	b.eq	40e914 <__fxstatat@plt+0xbec4>  // b.none
  40e8a8:	cmp	x20, #0xa
  40e8ac:	b.cc	40e8e4 <__fxstatat@plt+0xbe94>  // b.lo, b.ul, b.last
  40e8b0:	mov	w9, #0xc                   	// #12
  40e8b4:	mov	w10, #0x9                   	// #9
  40e8b8:	mov	w8, #0x3                   	// #3
  40e8bc:	udiv	x11, x20, x8
  40e8c0:	msub	x11, x11, x8, x20
  40e8c4:	cbz	x11, 40e8e8 <__fxstatat@plt+0xbe98>
  40e8c8:	add	x10, x10, x9
  40e8cc:	add	x10, x10, #0x4
  40e8d0:	add	x8, x8, #0x2
  40e8d4:	cmp	x10, x20
  40e8d8:	add	x9, x9, #0x8
  40e8dc:	b.cc	40e8bc <__fxstatat@plt+0xbe6c>  // b.lo, b.ul, b.last
  40e8e0:	b	40e8e8 <__fxstatat@plt+0xbe98>
  40e8e4:	mov	w8, #0x3                   	// #3
  40e8e8:	udiv	x9, x20, x8
  40e8ec:	msub	x8, x9, x8, x20
  40e8f0:	cbnz	x8, 40e904 <__fxstatat@plt+0xbeb4>
  40e8f4:	add	x20, x20, #0x2
  40e8f8:	cmn	x20, #0x1
  40e8fc:	b.ne	40e8a8 <__fxstatat@plt+0xbe58>  // b.any
  40e900:	b	40e914 <__fxstatat@plt+0xbec4>
  40e904:	sub	x8, x20, #0x1
  40e908:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  40e90c:	cmp	x8, x9
  40e910:	b.ls	40e930 <__fxstatat@plt+0xbee0>  // b.plast
  40e914:	mov	w0, wzr
  40e918:	ldp	x20, x19, [sp, #128]
  40e91c:	ldp	x22, x21, [sp, #112]
  40e920:	ldp	x24, x23, [sp, #96]
  40e924:	ldp	x29, x30, [sp, #80]
  40e928:	add	sp, sp, #0x90
  40e92c:	ret
  40e930:	ldr	x8, [x19, #16]
  40e934:	cmp	x20, x8
  40e938:	b.ne	40e944 <__fxstatat@plt+0xbef4>  // b.any
  40e93c:	mov	w0, #0x1                   	// #1
  40e940:	b	40e918 <__fxstatat@plt+0xbec8>
  40e944:	mov	w1, #0x10                  	// #16
  40e948:	mov	x0, x20
  40e94c:	bl	4150fc <__fxstatat@plt+0x126ac>
  40e950:	str	x0, [sp]
  40e954:	cbz	x0, 40e918 <__fxstatat@plt+0xbec8>
  40e958:	add	x8, x0, x20, lsl #4
  40e95c:	stp	x8, x20, [sp, #8]
  40e960:	stp	xzr, xzr, [sp, #24]
  40e964:	ldur	q0, [x19, #40]
  40e968:	mov	x21, x19
  40e96c:	mov	x0, sp
  40e970:	mov	x1, x19
  40e974:	stur	q0, [sp, #40]
  40e978:	ldur	q0, [x19, #56]
  40e97c:	mov	w2, wzr
  40e980:	stur	q0, [sp, #56]
  40e984:	ldr	x8, [x21, #72]!
  40e988:	str	x8, [sp, #72]
  40e98c:	bl	40ea7c <__fxstatat@plt+0xc02c>
  40e990:	tbz	w0, #0, 40e9bc <__fxstatat@plt+0xbf6c>
  40e994:	ldr	x0, [x19]
  40e998:	bl	402840 <free@plt>
  40e99c:	ldr	q0, [sp]
  40e9a0:	mov	w0, #0x1                   	// #1
  40e9a4:	str	q0, [x19]
  40e9a8:	ldr	q0, [sp, #16]
  40e9ac:	str	q0, [x19, #16]
  40e9b0:	ldr	x8, [sp, #72]
  40e9b4:	str	x8, [x19, #72]
  40e9b8:	b	40e918 <__fxstatat@plt+0xbec8>
  40e9bc:	ldr	x8, [sp, #72]
  40e9c0:	str	x8, [x21]
  40e9c4:	ldp	x22, x23, [sp]
  40e9c8:	b	40e9d4 <__fxstatat@plt+0xbf84>
  40e9cc:	str	xzr, [x22, #8]
  40e9d0:	add	x22, x22, #0x10
  40e9d4:	cmp	x22, x23
  40e9d8:	b.cs	40ea58 <__fxstatat@plt+0xc008>  // b.hs, b.nlast
  40e9dc:	ldr	x8, [x22]
  40e9e0:	cbz	x8, 40e9d0 <__fxstatat@plt+0xbf80>
  40e9e4:	ldr	x24, [x22, #8]
  40e9e8:	cbz	x24, 40e9cc <__fxstatat@plt+0xbf7c>
  40e9ec:	ldr	x1, [x19, #16]
  40e9f0:	b	40ea20 <__fxstatat@plt+0xbfd0>
  40e9f4:	str	x20, [x9]
  40e9f8:	ldr	x9, [x19, #24]
  40e9fc:	add	x9, x9, #0x1
  40ea00:	str	x9, [x19, #24]
  40ea04:	mov	x9, x21
  40ea08:	str	xzr, [x24]
  40ea0c:	ldr	x10, [x9]
  40ea10:	str	x10, [x24, #8]
  40ea14:	str	x24, [x9]
  40ea18:	mov	x24, x8
  40ea1c:	cbz	x8, 40e9cc <__fxstatat@plt+0xbf7c>
  40ea20:	ldr	x20, [x24]
  40ea24:	ldr	x8, [x19, #48]
  40ea28:	mov	x0, x20
  40ea2c:	blr	x8
  40ea30:	ldr	x1, [x19, #16]
  40ea34:	cmp	x0, x1
  40ea38:	b.cs	40ea78 <__fxstatat@plt+0xc028>  // b.hs, b.nlast
  40ea3c:	ldr	x8, [x19]
  40ea40:	add	x9, x8, x0, lsl #4
  40ea44:	ldr	x10, [x9]
  40ea48:	ldr	x8, [x24, #8]
  40ea4c:	cbz	x10, 40e9f4 <__fxstatat@plt+0xbfa4>
  40ea50:	add	x9, x9, #0x8
  40ea54:	b	40ea0c <__fxstatat@plt+0xbfbc>
  40ea58:	mov	x1, sp
  40ea5c:	mov	x0, x19
  40ea60:	mov	w2, wzr
  40ea64:	bl	40ea7c <__fxstatat@plt+0xc02c>
  40ea68:	tbz	w0, #0, 40ea78 <__fxstatat@plt+0xc028>
  40ea6c:	ldr	x0, [sp]
  40ea70:	bl	402840 <free@plt>
  40ea74:	b	40e914 <__fxstatat@plt+0xbec4>
  40ea78:	bl	402770 <abort@plt>
  40ea7c:	stp	x29, x30, [sp, #-80]!
  40ea80:	str	x25, [sp, #16]
  40ea84:	stp	x24, x23, [sp, #32]
  40ea88:	stp	x22, x21, [sp, #48]
  40ea8c:	stp	x20, x19, [sp, #64]
  40ea90:	ldp	x23, x8, [x1]
  40ea94:	mov	x29, sp
  40ea98:	cmp	x23, x8
  40ea9c:	b.cs	40ec5c <__fxstatat@plt+0xc20c>  // b.hs, b.nlast
  40eaa0:	mov	x19, x1
  40eaa4:	mov	x20, x0
  40eaa8:	add	x24, x0, #0x48
  40eaac:	tbz	w2, #0, 40eb74 <__fxstatat@plt+0xc124>
  40eab0:	b	40eac8 <__fxstatat@plt+0xc078>
  40eab4:	ldr	x8, [x19, #8]
  40eab8:	str	xzr, [x23, #8]
  40eabc:	add	x23, x23, #0x10
  40eac0:	cmp	x23, x8
  40eac4:	b.cs	40ec5c <__fxstatat@plt+0xc20c>  // b.hs, b.nlast
  40eac8:	ldr	x9, [x23]
  40eacc:	cbz	x9, 40eabc <__fxstatat@plt+0xc06c>
  40ead0:	ldr	x22, [x23, #8]
  40ead4:	cbz	x22, 40eab8 <__fxstatat@plt+0xc068>
  40ead8:	ldr	x1, [x20, #16]
  40eadc:	b	40eb0c <__fxstatat@plt+0xc0bc>
  40eae0:	str	x21, [x9]
  40eae4:	ldr	x9, [x20, #24]
  40eae8:	add	x9, x9, #0x1
  40eaec:	str	x9, [x20, #24]
  40eaf0:	mov	x9, x24
  40eaf4:	str	xzr, [x22]
  40eaf8:	ldr	x10, [x9]
  40eafc:	str	x10, [x22, #8]
  40eb00:	str	x22, [x9]
  40eb04:	mov	x22, x8
  40eb08:	cbz	x8, 40eab4 <__fxstatat@plt+0xc064>
  40eb0c:	ldr	x21, [x22]
  40eb10:	ldr	x8, [x20, #48]
  40eb14:	mov	x0, x21
  40eb18:	blr	x8
  40eb1c:	ldr	x1, [x20, #16]
  40eb20:	cmp	x0, x1
  40eb24:	b.cs	40ec78 <__fxstatat@plt+0xc228>  // b.hs, b.nlast
  40eb28:	ldr	x8, [x20]
  40eb2c:	add	x9, x8, x0, lsl #4
  40eb30:	ldr	x10, [x9]
  40eb34:	ldr	x8, [x22, #8]
  40eb38:	cbz	x10, 40eae0 <__fxstatat@plt+0xc090>
  40eb3c:	add	x9, x9, #0x8
  40eb40:	b	40eaf8 <__fxstatat@plt+0xc0a8>
  40eb44:	str	x21, [x8]
  40eb48:	ldr	x8, [x20, #24]
  40eb4c:	add	x8, x8, #0x1
  40eb50:	str	x8, [x20, #24]
  40eb54:	str	xzr, [x23]
  40eb58:	ldr	x9, [x19, #24]
  40eb5c:	ldr	x8, [x19, #8]
  40eb60:	sub	x9, x9, #0x1
  40eb64:	str	x9, [x19, #24]
  40eb68:	add	x23, x23, #0x10
  40eb6c:	cmp	x23, x8
  40eb70:	b.cs	40ec5c <__fxstatat@plt+0xc20c>  // b.hs, b.nlast
  40eb74:	ldr	x21, [x23]
  40eb78:	cbz	x21, 40eb68 <__fxstatat@plt+0xc118>
  40eb7c:	ldr	x22, [x23, #8]
  40eb80:	ldr	x1, [x20, #16]
  40eb84:	cbnz	x22, 40eba4 <__fxstatat@plt+0xc154>
  40eb88:	b	40ebf4 <__fxstatat@plt+0xc1a4>
  40eb8c:	add	x9, x9, #0x8
  40eb90:	ldr	x10, [x9]
  40eb94:	str	x10, [x22, #8]
  40eb98:	str	x22, [x9]
  40eb9c:	mov	x22, x8
  40eba0:	cbz	x8, 40ebf0 <__fxstatat@plt+0xc1a0>
  40eba4:	ldr	x21, [x22]
  40eba8:	ldr	x8, [x20, #48]
  40ebac:	mov	x0, x21
  40ebb0:	blr	x8
  40ebb4:	ldr	x1, [x20, #16]
  40ebb8:	cmp	x0, x1
  40ebbc:	b.cs	40ec78 <__fxstatat@plt+0xc228>  // b.hs, b.nlast
  40ebc0:	ldr	x8, [x20]
  40ebc4:	add	x9, x8, x0, lsl #4
  40ebc8:	ldr	x10, [x9]
  40ebcc:	ldr	x8, [x22, #8]
  40ebd0:	cbnz	x10, 40eb8c <__fxstatat@plt+0xc13c>
  40ebd4:	str	x21, [x9]
  40ebd8:	ldr	x9, [x20, #24]
  40ebdc:	add	x9, x9, #0x1
  40ebe0:	str	x9, [x20, #24]
  40ebe4:	mov	x9, x24
  40ebe8:	str	xzr, [x22]
  40ebec:	b	40eb90 <__fxstatat@plt+0xc140>
  40ebf0:	ldr	x21, [x23]
  40ebf4:	str	xzr, [x23, #8]
  40ebf8:	ldr	x8, [x20, #48]
  40ebfc:	mov	x0, x21
  40ec00:	blr	x8
  40ec04:	ldr	x8, [x20, #16]
  40ec08:	cmp	x0, x8
  40ec0c:	b.cs	40ec78 <__fxstatat@plt+0xc228>  // b.hs, b.nlast
  40ec10:	ldr	x25, [x20]
  40ec14:	mov	x22, x0
  40ec18:	add	x8, x25, x0, lsl #4
  40ec1c:	ldr	x9, [x8]
  40ec20:	cbz	x9, 40eb44 <__fxstatat@plt+0xc0f4>
  40ec24:	ldr	x0, [x24]
  40ec28:	cbz	x0, 40ec38 <__fxstatat@plt+0xc1e8>
  40ec2c:	ldr	x8, [x0, #8]
  40ec30:	str	x8, [x24]
  40ec34:	b	40ec44 <__fxstatat@plt+0xc1f4>
  40ec38:	mov	w0, #0x10                  	// #16
  40ec3c:	bl	4025f0 <malloc@plt>
  40ec40:	cbz	x0, 40ec60 <__fxstatat@plt+0xc210>
  40ec44:	str	x21, [x0]
  40ec48:	add	x8, x25, x22, lsl #4
  40ec4c:	ldr	x9, [x8, #8]
  40ec50:	str	x9, [x0, #8]
  40ec54:	str	x0, [x8, #8]
  40ec58:	b	40eb54 <__fxstatat@plt+0xc104>
  40ec5c:	mov	w0, #0x1                   	// #1
  40ec60:	ldp	x20, x19, [sp, #64]
  40ec64:	ldp	x22, x21, [sp, #48]
  40ec68:	ldp	x24, x23, [sp, #32]
  40ec6c:	ldr	x25, [sp, #16]
  40ec70:	ldp	x29, x30, [sp], #80
  40ec74:	ret
  40ec78:	bl	402770 <abort@plt>
  40ec7c:	stp	x29, x30, [sp, #-80]!
  40ec80:	str	x25, [sp, #16]
  40ec84:	stp	x24, x23, [sp, #32]
  40ec88:	stp	x22, x21, [sp, #48]
  40ec8c:	stp	x20, x19, [sp, #64]
  40ec90:	mov	x29, sp
  40ec94:	cbz	x1, 40ef60 <__fxstatat@plt+0xc510>
  40ec98:	mov	x20, x1
  40ec9c:	ldr	x8, [x0, #48]
  40eca0:	ldr	x1, [x0, #16]
  40eca4:	mov	x19, x0
  40eca8:	mov	x0, x20
  40ecac:	mov	x21, x2
  40ecb0:	blr	x8
  40ecb4:	ldr	x8, [x19, #16]
  40ecb8:	cmp	x0, x8
  40ecbc:	b.cs	40ef60 <__fxstatat@plt+0xc510>  // b.hs, b.nlast
  40ecc0:	ldr	x25, [x19]
  40ecc4:	mov	x22, x0
  40ecc8:	add	x23, x25, x0, lsl #4
  40eccc:	ldr	x1, [x23]
  40ecd0:	cbz	x1, 40ecf8 <__fxstatat@plt+0xc2a8>
  40ecd4:	cmp	x1, x20
  40ecd8:	b.eq	40ee6c <__fxstatat@plt+0xc41c>  // b.none
  40ecdc:	ldr	x8, [x19, #56]
  40ece0:	mov	x0, x20
  40ece4:	blr	x8
  40ece8:	mov	x24, x23
  40ecec:	tbz	w0, #0, 40ee80 <__fxstatat@plt+0xc430>
  40ecf0:	ldr	x8, [x24]
  40ecf4:	cbnz	x8, 40ee70 <__fxstatat@plt+0xc420>
  40ecf8:	ldr	x8, [x19, #40]
  40ecfc:	ldp	x10, x9, [x19, #16]
  40ed00:	ldr	s1, [x8, #8]
  40ed04:	ucvtf	s0, x10
  40ed08:	ucvtf	s2, x9
  40ed0c:	fmul	s3, s1, s0
  40ed10:	fcmp	s3, s2
  40ed14:	b.pl	40ee50 <__fxstatat@plt+0xc400>  // b.nfrst
  40ed18:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40ed1c:	add	x9, x9, #0xd30
  40ed20:	cmp	x8, x9
  40ed24:	b.eq	40edb4 <__fxstatat@plt+0xc364>  // b.none
  40ed28:	mov	w10, #0xcccd                	// #52429
  40ed2c:	movk	w10, #0x3dcc, lsl #16
  40ed30:	fmov	s3, w10
  40ed34:	fcmp	s1, s3
  40ed38:	b.le	40eda4 <__fxstatat@plt+0xc354>
  40ed3c:	mov	w10, #0x6666                	// #26214
  40ed40:	movk	w10, #0x3f66, lsl #16
  40ed44:	fmov	s3, w10
  40ed48:	fcmp	s1, s3
  40ed4c:	b.pl	40eda4 <__fxstatat@plt+0xc354>  // b.nfrst
  40ed50:	ldr	s3, [x8, #12]
  40ed54:	mov	w10, #0xcccd                	// #52429
  40ed58:	movk	w10, #0x3f8c, lsl #16
  40ed5c:	fmov	s4, w10
  40ed60:	fcmp	s3, s4
  40ed64:	b.le	40eda4 <__fxstatat@plt+0xc354>
  40ed68:	ldr	s3, [x8]
  40ed6c:	fcmp	s3, #0.0
  40ed70:	b.lt	40eda4 <__fxstatat@plt+0xc354>  // b.tstop
  40ed74:	mov	w10, #0xcccd                	// #52429
  40ed78:	movk	w10, #0x3dcc, lsl #16
  40ed7c:	fmov	s4, w10
  40ed80:	fadd	s3, s3, s4
  40ed84:	fcmp	s3, s1
  40ed88:	b.pl	40eda4 <__fxstatat@plt+0xc354>  // b.nfrst
  40ed8c:	ldr	s4, [x8, #4]
  40ed90:	fmov	s5, #1.000000000000000000e+00
  40ed94:	fcmp	s4, s5
  40ed98:	b.hi	40eda4 <__fxstatat@plt+0xc354>  // b.pmore
  40ed9c:	fcmp	s3, s4
  40eda0:	b.mi	40edb8 <__fxstatat@plt+0xc368>  // b.first
  40eda4:	mov	w8, #0xcccd                	// #52429
  40eda8:	movk	w8, #0x3f4c, lsl #16
  40edac:	fmov	s1, w8
  40edb0:	str	x9, [x19, #40]
  40edb4:	mov	x8, x9
  40edb8:	fmul	s3, s1, s0
  40edbc:	fcmp	s3, s2
  40edc0:	b.pl	40ee50 <__fxstatat@plt+0xc400>  // b.nfrst
  40edc4:	ldr	s2, [x8, #12]
  40edc8:	ldrb	w8, [x8, #16]
  40edcc:	fmul	s0, s2, s0
  40edd0:	cmp	w8, #0x0
  40edd4:	fmul	s1, s1, s0
  40edd8:	mov	w8, #0x5f800000            	// #1602224128
  40eddc:	fcsel	s0, s1, s0, eq  // eq = none
  40ede0:	fmov	s1, w8
  40ede4:	fcmp	s0, s1
  40ede8:	b.ge	40eefc <__fxstatat@plt+0xc4ac>  // b.tcont
  40edec:	fcvtzu	x1, s0
  40edf0:	mov	x0, x19
  40edf4:	bl	40e848 <__fxstatat@plt+0xbdf8>
  40edf8:	tbz	w0, #0, 40eefc <__fxstatat@plt+0xc4ac>
  40edfc:	ldr	x8, [x19, #48]
  40ee00:	ldr	x1, [x19, #16]
  40ee04:	mov	x0, x20
  40ee08:	blr	x8
  40ee0c:	ldr	x8, [x19, #16]
  40ee10:	cmp	x0, x8
  40ee14:	b.cs	40ef60 <__fxstatat@plt+0xc510>  // b.hs, b.nlast
  40ee18:	ldr	x22, [x19]
  40ee1c:	mov	x21, x0
  40ee20:	add	x23, x22, x0, lsl #4
  40ee24:	ldr	x1, [x23]
  40ee28:	cbz	x1, 40ee50 <__fxstatat@plt+0xc400>
  40ee2c:	cmp	x1, x20
  40ee30:	mov	x8, x20
  40ee34:	b.eq	40ee4c <__fxstatat@plt+0xc3fc>  // b.none
  40ee38:	ldr	x8, [x19, #56]
  40ee3c:	mov	x0, x20
  40ee40:	blr	x8
  40ee44:	tbz	w0, #0, 40ef24 <__fxstatat@plt+0xc4d4>
  40ee48:	ldr	x8, [x23]
  40ee4c:	cbnz	x8, 40ef60 <__fxstatat@plt+0xc510>
  40ee50:	ldr	x8, [x23]
  40ee54:	cbz	x8, 40eeb0 <__fxstatat@plt+0xc460>
  40ee58:	ldr	x0, [x19, #72]
  40ee5c:	cbz	x0, 40eecc <__fxstatat@plt+0xc47c>
  40ee60:	ldr	x8, [x0, #8]
  40ee64:	str	x8, [x19, #72]
  40ee68:	b	40eed8 <__fxstatat@plt+0xc488>
  40ee6c:	mov	x8, x20
  40ee70:	mov	w0, wzr
  40ee74:	cbz	x21, 40ef00 <__fxstatat@plt+0xc4b0>
  40ee78:	str	x8, [x21]
  40ee7c:	b	40ef00 <__fxstatat@plt+0xc4b0>
  40ee80:	add	x24, x25, x22, lsl #4
  40ee84:	ldr	x8, [x24, #8]!
  40ee88:	cbz	x8, 40ecf8 <__fxstatat@plt+0xc2a8>
  40ee8c:	ldr	x1, [x8]
  40ee90:	cmp	x1, x20
  40ee94:	b.eq	40ef18 <__fxstatat@plt+0xc4c8>  // b.none
  40ee98:	ldr	x8, [x19, #56]
  40ee9c:	mov	x0, x20
  40eea0:	blr	x8
  40eea4:	ldr	x24, [x24]
  40eea8:	tbz	w0, #0, 40ee84 <__fxstatat@plt+0xc434>
  40eeac:	b	40ecf0 <__fxstatat@plt+0xc2a0>
  40eeb0:	str	x20, [x23]
  40eeb4:	ldur	q0, [x19, #24]
  40eeb8:	mov	w0, #0x1                   	// #1
  40eebc:	dup	v1.2d, x0
  40eec0:	add	v0.2d, v0.2d, v1.2d
  40eec4:	stur	q0, [x19, #24]
  40eec8:	b	40ef00 <__fxstatat@plt+0xc4b0>
  40eecc:	mov	w0, #0x10                  	// #16
  40eed0:	bl	4025f0 <malloc@plt>
  40eed4:	cbz	x0, 40eefc <__fxstatat@plt+0xc4ac>
  40eed8:	str	x20, [x0]
  40eedc:	ldr	x8, [x23, #8]
  40eee0:	str	x8, [x0, #8]
  40eee4:	str	x0, [x23, #8]
  40eee8:	ldr	x8, [x19, #32]
  40eeec:	mov	w0, #0x1                   	// #1
  40eef0:	add	x8, x8, #0x1
  40eef4:	str	x8, [x19, #32]
  40eef8:	b	40ef00 <__fxstatat@plt+0xc4b0>
  40eefc:	mov	w0, #0xffffffff            	// #-1
  40ef00:	ldp	x20, x19, [sp, #64]
  40ef04:	ldp	x22, x21, [sp, #48]
  40ef08:	ldp	x24, x23, [sp, #32]
  40ef0c:	ldr	x25, [sp, #16]
  40ef10:	ldp	x29, x30, [sp], #80
  40ef14:	ret
  40ef18:	mov	x8, x20
  40ef1c:	cbnz	x8, 40ee70 <__fxstatat@plt+0xc420>
  40ef20:	b	40ecf8 <__fxstatat@plt+0xc2a8>
  40ef24:	add	x21, x22, x21, lsl #4
  40ef28:	ldr	x8, [x21, #8]!
  40ef2c:	cbz	x8, 40ee50 <__fxstatat@plt+0xc400>
  40ef30:	ldr	x1, [x8]
  40ef34:	cmp	x1, x20
  40ef38:	b.eq	40ef58 <__fxstatat@plt+0xc508>  // b.none
  40ef3c:	ldr	x8, [x19, #56]
  40ef40:	mov	x0, x20
  40ef44:	blr	x8
  40ef48:	ldr	x21, [x21]
  40ef4c:	tbz	w0, #0, 40ef28 <__fxstatat@plt+0xc4d8>
  40ef50:	ldr	x8, [x21]
  40ef54:	b	40ee4c <__fxstatat@plt+0xc3fc>
  40ef58:	mov	x8, x20
  40ef5c:	b	40ee4c <__fxstatat@plt+0xc3fc>
  40ef60:	bl	402770 <abort@plt>
  40ef64:	stp	x29, x30, [sp, #-32]!
  40ef68:	mov	x29, sp
  40ef6c:	add	x2, x29, #0x18
  40ef70:	str	x19, [sp, #16]
  40ef74:	mov	x19, x1
  40ef78:	bl	40ec7c <__fxstatat@plt+0xc22c>
  40ef7c:	ldr	x8, [x29, #24]
  40ef80:	cmp	w0, #0x0
  40ef84:	csel	x8, x8, x19, eq  // eq = none
  40ef88:	ldr	x19, [sp, #16]
  40ef8c:	cmn	w0, #0x1
  40ef90:	csel	x0, xzr, x8, eq  // eq = none
  40ef94:	ldp	x29, x30, [sp], #32
  40ef98:	ret
  40ef9c:	stp	x29, x30, [sp, #-64]!
  40efa0:	stp	x22, x21, [sp, #32]
  40efa4:	stp	x20, x19, [sp, #48]
  40efa8:	ldr	x8, [x0, #16]
  40efac:	ldr	x9, [x0, #48]
  40efb0:	mov	x20, x0
  40efb4:	mov	x19, x1
  40efb8:	mov	x0, x1
  40efbc:	mov	x1, x8
  40efc0:	str	x23, [sp, #16]
  40efc4:	mov	x29, sp
  40efc8:	blr	x9
  40efcc:	ldr	x8, [x20, #16]
  40efd0:	cmp	x0, x8
  40efd4:	b.cs	40f1d0 <__fxstatat@plt+0xc780>  // b.hs, b.nlast
  40efd8:	ldr	x23, [x20]
  40efdc:	mov	x21, x0
  40efe0:	add	x22, x23, x0, lsl #4
  40efe4:	ldr	x1, [x22]
  40efe8:	cbz	x1, 40f058 <__fxstatat@plt+0xc608>
  40efec:	cmp	x1, x19
  40eff0:	b.eq	40f008 <__fxstatat@plt+0xc5b8>  // b.none
  40eff4:	ldr	x8, [x20, #56]
  40eff8:	mov	x0, x19
  40effc:	blr	x8
  40f000:	tbz	w0, #0, 40f020 <__fxstatat@plt+0xc5d0>
  40f004:	ldr	x19, [x22]
  40f008:	add	x8, x23, x21, lsl #4
  40f00c:	ldr	x8, [x8, #8]
  40f010:	cbz	x8, 40f060 <__fxstatat@plt+0xc610>
  40f014:	ldr	q0, [x8]
  40f018:	str	q0, [x22]
  40f01c:	b	40f080 <__fxstatat@plt+0xc630>
  40f020:	add	x21, x23, x21, lsl #4
  40f024:	ldr	x9, [x21, #8]!
  40f028:	cbz	x9, 40f058 <__fxstatat@plt+0xc608>
  40f02c:	ldr	x1, [x9]
  40f030:	cmp	x1, x19
  40f034:	b.eq	40f06c <__fxstatat@plt+0xc61c>  // b.none
  40f038:	ldr	x8, [x20, #56]
  40f03c:	mov	x0, x19
  40f040:	blr	x8
  40f044:	ldr	x8, [x21]
  40f048:	tbnz	w0, #0, 40f074 <__fxstatat@plt+0xc624>
  40f04c:	ldr	x9, [x8, #8]!
  40f050:	mov	x21, x8
  40f054:	cbnz	x9, 40f02c <__fxstatat@plt+0xc5dc>
  40f058:	mov	x19, xzr
  40f05c:	b	40f1b8 <__fxstatat@plt+0xc768>
  40f060:	str	xzr, [x22]
  40f064:	cbnz	x19, 40f094 <__fxstatat@plt+0xc644>
  40f068:	b	40f1b8 <__fxstatat@plt+0xc768>
  40f06c:	mov	x8, x9
  40f070:	b	40f078 <__fxstatat@plt+0xc628>
  40f074:	ldr	x19, [x8]
  40f078:	ldr	x9, [x8, #8]
  40f07c:	str	x9, [x21]
  40f080:	str	xzr, [x8]
  40f084:	ldr	x9, [x20, #72]
  40f088:	str	x9, [x8, #8]
  40f08c:	str	x8, [x20, #72]
  40f090:	cbz	x19, 40f1b8 <__fxstatat@plt+0xc768>
  40f094:	ldr	x8, [x20, #32]
  40f098:	sub	x8, x8, #0x1
  40f09c:	str	x8, [x20, #32]
  40f0a0:	ldr	x8, [x22]
  40f0a4:	cbnz	x8, 40f1b8 <__fxstatat@plt+0xc768>
  40f0a8:	ldp	x10, x9, [x20, #16]
  40f0ac:	ldr	x8, [x20, #40]
  40f0b0:	sub	x9, x9, #0x1
  40f0b4:	str	x9, [x20, #24]
  40f0b8:	ldr	s2, [x8]
  40f0bc:	ucvtf	s0, x10
  40f0c0:	ucvtf	s1, x9
  40f0c4:	fmul	s3, s2, s0
  40f0c8:	fcmp	s3, s1
  40f0cc:	b.le	40f1b8 <__fxstatat@plt+0xc768>
  40f0d0:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f0d4:	add	x9, x9, #0xd30
  40f0d8:	cmp	x8, x9
  40f0dc:	b.eq	40f164 <__fxstatat@plt+0xc714>  // b.none
  40f0e0:	ldr	s3, [x8, #8]
  40f0e4:	mov	w10, #0xcccd                	// #52429
  40f0e8:	movk	w10, #0x3dcc, lsl #16
  40f0ec:	fmov	s4, w10
  40f0f0:	fcmp	s3, s4
  40f0f4:	b.le	40f15c <__fxstatat@plt+0xc70c>
  40f0f8:	mov	w10, #0x6666                	// #26214
  40f0fc:	movk	w10, #0x3f66, lsl #16
  40f100:	fmov	s4, w10
  40f104:	fcmp	s3, s4
  40f108:	b.pl	40f15c <__fxstatat@plt+0xc70c>  // b.nfrst
  40f10c:	fcmp	s2, #0.0
  40f110:	b.lt	40f15c <__fxstatat@plt+0xc70c>  // b.tstop
  40f114:	ldr	s4, [x8, #12]
  40f118:	mov	w10, #0xcccd                	// #52429
  40f11c:	movk	w10, #0x3f8c, lsl #16
  40f120:	fmov	s5, w10
  40f124:	fcmp	s4, s5
  40f128:	b.le	40f15c <__fxstatat@plt+0xc70c>
  40f12c:	mov	w10, #0xcccd                	// #52429
  40f130:	movk	w10, #0x3dcc, lsl #16
  40f134:	fmov	s4, w10
  40f138:	fadd	s4, s2, s4
  40f13c:	fcmp	s4, s3
  40f140:	b.pl	40f15c <__fxstatat@plt+0xc70c>  // b.nfrst
  40f144:	ldr	s3, [x8, #4]
  40f148:	fmov	s5, #1.000000000000000000e+00
  40f14c:	fcmp	s3, s5
  40f150:	b.hi	40f15c <__fxstatat@plt+0xc70c>  // b.pmore
  40f154:	fcmp	s4, s3
  40f158:	b.mi	40f168 <__fxstatat@plt+0xc718>  // b.first
  40f15c:	fmov	s2, wzr
  40f160:	str	x9, [x20, #40]
  40f164:	mov	x8, x9
  40f168:	fmul	s2, s2, s0
  40f16c:	fcmp	s2, s1
  40f170:	b.le	40f1b8 <__fxstatat@plt+0xc768>
  40f174:	ldr	s1, [x8, #4]
  40f178:	ldrb	w9, [x8, #16]
  40f17c:	fmul	s0, s1, s0
  40f180:	cbnz	w9, 40f18c <__fxstatat@plt+0xc73c>
  40f184:	ldr	s1, [x8, #8]
  40f188:	fmul	s0, s0, s1
  40f18c:	fcvtzu	x1, s0
  40f190:	mov	x0, x20
  40f194:	bl	40e848 <__fxstatat@plt+0xbdf8>
  40f198:	tbnz	w0, #0, 40f1b8 <__fxstatat@plt+0xc768>
  40f19c:	ldr	x0, [x20, #72]
  40f1a0:	cbz	x0, 40f1b4 <__fxstatat@plt+0xc764>
  40f1a4:	ldr	x21, [x0, #8]
  40f1a8:	bl	402840 <free@plt>
  40f1ac:	mov	x0, x21
  40f1b0:	cbnz	x21, 40f1a4 <__fxstatat@plt+0xc754>
  40f1b4:	str	xzr, [x20, #72]
  40f1b8:	mov	x0, x19
  40f1bc:	ldp	x20, x19, [sp, #48]
  40f1c0:	ldp	x22, x21, [sp, #32]
  40f1c4:	ldr	x23, [sp, #16]
  40f1c8:	ldp	x29, x30, [sp], #64
  40f1cc:	ret
  40f1d0:	bl	402770 <abort@plt>
  40f1d4:	stp	x29, x30, [sp, #-32]!
  40f1d8:	stp	x20, x19, [sp, #16]
  40f1dc:	mov	x19, x0
  40f1e0:	ldr	x0, [x0]
  40f1e4:	mov	x29, sp
  40f1e8:	mov	x20, x1
  40f1ec:	bl	415dac <_obstack_memory_used@@Base+0x87c>
  40f1f0:	ldr	x8, [x19, #8]
  40f1f4:	eor	x8, x8, x0
  40f1f8:	udiv	x9, x8, x20
  40f1fc:	msub	x0, x9, x20, x8
  40f200:	ldp	x20, x19, [sp, #16]
  40f204:	ldp	x29, x30, [sp], #32
  40f208:	ret
  40f20c:	ldr	x8, [x0, #8]
  40f210:	udiv	x9, x8, x1
  40f214:	msub	x0, x9, x1, x8
  40f218:	ret
  40f21c:	ldr	x8, [x0, #8]
  40f220:	ldr	x9, [x1, #8]
  40f224:	cmp	x8, x9
  40f228:	b.ne	40f248 <__fxstatat@plt+0xc7f8>  // b.any
  40f22c:	ldr	x8, [x0, #16]
  40f230:	ldr	x9, [x1, #16]
  40f234:	cmp	x8, x9
  40f238:	b.ne	40f248 <__fxstatat@plt+0xc7f8>  // b.any
  40f23c:	ldr	x0, [x0]
  40f240:	ldr	x1, [x1]
  40f244:	b	413ac0 <__fxstatat@plt+0x11070>
  40f248:	mov	w0, wzr
  40f24c:	ret
  40f250:	stp	x29, x30, [sp, #-16]!
  40f254:	ldr	x8, [x0, #8]
  40f258:	ldr	x9, [x1, #8]
  40f25c:	mov	x29, sp
  40f260:	cmp	x8, x9
  40f264:	b.ne	40f294 <__fxstatat@plt+0xc844>  // b.any
  40f268:	ldr	x8, [x0, #16]
  40f26c:	ldr	x9, [x1, #16]
  40f270:	cmp	x8, x9
  40f274:	b.ne	40f294 <__fxstatat@plt+0xc844>  // b.any
  40f278:	ldr	x0, [x0]
  40f27c:	ldr	x1, [x1]
  40f280:	bl	402800 <strcmp@plt>
  40f284:	cmp	w0, #0x0
  40f288:	cset	w0, eq  // eq = none
  40f28c:	ldp	x29, x30, [sp], #16
  40f290:	ret
  40f294:	mov	w0, wzr
  40f298:	ldp	x29, x30, [sp], #16
  40f29c:	ret
  40f2a0:	stp	x29, x30, [sp, #-32]!
  40f2a4:	str	x19, [sp, #16]
  40f2a8:	mov	x19, x0
  40f2ac:	ldr	x0, [x0]
  40f2b0:	mov	x29, sp
  40f2b4:	bl	402840 <free@plt>
  40f2b8:	mov	x0, x19
  40f2bc:	ldr	x19, [sp, #16]
  40f2c0:	ldp	x29, x30, [sp], #32
  40f2c4:	b	402840 <free@plt>
  40f2c8:	sub	sp, sp, #0xe0
  40f2cc:	tst	w2, #0x20
  40f2d0:	mov	w8, #0x3e8                 	// #1000
  40f2d4:	mov	w9, #0x400                 	// #1024
  40f2d8:	stp	x29, x30, [sp, #128]
  40f2dc:	stp	x28, x27, [sp, #144]
  40f2e0:	stp	x26, x25, [sp, #160]
  40f2e4:	stp	x24, x23, [sp, #176]
  40f2e8:	stp	x22, x21, [sp, #192]
  40f2ec:	stp	x20, x19, [sp, #208]
  40f2f0:	add	x29, sp, #0x80
  40f2f4:	mov	x21, x4
  40f2f8:	mov	x27, x3
  40f2fc:	mov	x19, x1
  40f300:	mov	x26, x0
  40f304:	and	w28, w2, #0x3
  40f308:	str	w2, [sp, #20]
  40f30c:	csel	w22, w9, w8, ne  // ne = any
  40f310:	bl	402570 <localeconv@plt>
  40f314:	ldr	x25, [x0]
  40f318:	mov	x23, x0
  40f31c:	mov	x0, x25
  40f320:	bl	402430 <strlen@plt>
  40f324:	ldp	x23, x20, [x23, #8]
  40f328:	sub	x8, x0, #0x1
  40f32c:	cmp	x8, #0x10
  40f330:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f334:	csinc	x24, x0, xzr, cc  // cc = lo, ul, last
  40f338:	add	x8, x8, #0xcba
  40f33c:	mov	x0, x23
  40f340:	csel	x25, x25, x8, cc  // cc = lo, ul, last
  40f344:	bl	402430 <strlen@plt>
  40f348:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f34c:	mov	x11, x21
  40f350:	add	x8, x8, #0x8d1
  40f354:	cmp	x0, #0x11
  40f358:	csel	x21, x23, x8, cc  // cc = lo, ul, last
  40f35c:	cmp	x11, x27
  40f360:	str	x19, [sp, #24]
  40f364:	add	x19, x19, #0x287
  40f368:	stp	x21, x11, [sp]
  40f36c:	b.ls	40f3d0 <__fxstatat@plt+0xc980>  // b.plast
  40f370:	cbz	x27, 40f3e8 <__fxstatat@plt+0xc998>
  40f374:	udiv	x9, x11, x27
  40f378:	msub	x8, x9, x27, x11
  40f37c:	cbnz	x8, 40f3e8 <__fxstatat@plt+0xc998>
  40f380:	udiv	x27, x26, x9
  40f384:	msub	x8, x27, x9, x26
  40f388:	add	x8, x8, x8, lsl #2
  40f38c:	lsl	x11, x8, #1
  40f390:	udiv	x8, x11, x9
  40f394:	msub	x11, x8, x9, x11
  40f398:	lsl	x11, x11, #1
  40f39c:	cmp	x11, #0x0
  40f3a0:	mov	w10, #0x2                   	// #2
  40f3a4:	cset	w12, ne  // ne = any
  40f3a8:	cmp	x9, x11
  40f3ac:	cinc	w10, w10, cc  // cc = lo, ul, last
  40f3b0:	cmp	x11, x9
  40f3b4:	csel	w9, w12, w10, cc  // cc = lo, ul, last
  40f3b8:	ldr	w23, [sp, #20]
  40f3bc:	tbz	w23, #4, 40f668 <__fxstatat@plt+0xcc18>
  40f3c0:	cmp	x27, x22
  40f3c4:	b.cs	40f6bc <__fxstatat@plt+0xcc6c>  // b.hs, b.nlast
  40f3c8:	mov	w21, wzr
  40f3cc:	b	40f7b4 <__fxstatat@plt+0xcd64>
  40f3d0:	udiv	x10, x27, x11
  40f3d4:	msub	x8, x10, x11, x27
  40f3d8:	cbnz	x8, 40f3e8 <__fxstatat@plt+0xc998>
  40f3dc:	umulh	x8, x10, x26
  40f3e0:	cmp	xzr, x8
  40f3e4:	b.eq	40f654 <__fxstatat@plt+0xcc04>  // b.none
  40f3e8:	mov	x0, x11
  40f3ec:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f3f0:	mov	x0, x26
  40f3f4:	str	q0, [sp, #48]
  40f3f8:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f3fc:	mov	x0, x27
  40f400:	str	q0, [sp, #64]
  40f404:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f408:	ldr	q1, [sp, #48]
  40f40c:	bl	415fa0 <_obstack_memory_used@@Base+0xa70>
  40f410:	ldr	q1, [sp, #64]
  40f414:	bl	416b08 <_obstack_memory_used@@Base+0x15d8>
  40f418:	ldr	w23, [sp, #20]
  40f41c:	tbnz	w23, #4, 40f484 <__fxstatat@plt+0xca34>
  40f420:	cmp	w28, #0x1
  40f424:	b.eq	40f614 <__fxstatat@plt+0xcbc4>  // b.none
  40f428:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f42c:	ldr	q1, [x8, #3424]
  40f430:	str	q0, [sp, #32]
  40f434:	bl	4169c8 <_obstack_memory_used@@Base+0x1498>
  40f438:	ldr	x25, [sp, #24]
  40f43c:	cmp	w0, #0x0
  40f440:	mov	x27, x19
  40f444:	b.ge	40f620 <__fxstatat@plt+0xcbd0>  // b.tcont
  40f448:	ldr	q0, [sp, #32]
  40f44c:	bl	417358 <_obstack_memory_used@@Base+0x1e28>
  40f450:	cmp	w28, #0x0
  40f454:	mov	x24, x0
  40f458:	cset	w19, eq  // eq = none
  40f45c:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f460:	mov	v1.16b, v0.16b
  40f464:	ldr	q0, [sp, #32]
  40f468:	bl	4168c0 <_obstack_memory_used@@Base+0x1390>
  40f46c:	cmp	w0, #0x0
  40f470:	cset	w8, ne  // ne = any
  40f474:	and	w8, w19, w8
  40f478:	add	x0, x8, x24
  40f47c:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f480:	b	40f624 <__fxstatat@plt+0xcbd4>
  40f484:	mov	w0, w22
  40f488:	str	q0, [sp, #32]
  40f48c:	mov	x27, x19
  40f490:	bl	4172f0 <_obstack_memory_used@@Base+0x1dc0>
  40f494:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f498:	str	q0, [sp, #48]
  40f49c:	ldr	q0, [x8, #3408]
  40f4a0:	mov	w21, wzr
  40f4a4:	str	q0, [sp, #64]
  40f4a8:	ldp	q1, q0, [sp, #48]
  40f4ac:	mov	w19, w21
  40f4b0:	bl	416b08 <_obstack_memory_used@@Base+0x15d8>
  40f4b4:	ldr	q1, [sp, #48]
  40f4b8:	add	w21, w21, #0x1
  40f4bc:	str	q0, [sp, #64]
  40f4c0:	bl	416b08 <_obstack_memory_used@@Base+0x15d8>
  40f4c4:	cmp	w19, #0x6
  40f4c8:	b.hi	40f4dc <__fxstatat@plt+0xca8c>  // b.pmore
  40f4cc:	ldr	q1, [sp, #32]
  40f4d0:	bl	4169c8 <_obstack_memory_used@@Base+0x1498>
  40f4d4:	cmp	w0, #0x0
  40f4d8:	b.le	40f4a8 <__fxstatat@plt+0xca58>
  40f4dc:	ldr	q0, [sp, #32]
  40f4e0:	ldr	q1, [sp, #64]
  40f4e4:	bl	415fa0 <_obstack_memory_used@@Base+0xa70>
  40f4e8:	ldr	x25, [sp, #24]
  40f4ec:	cmp	w28, #0x1
  40f4f0:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f4f4:	str	q0, [sp, #64]
  40f4f8:	b.eq	40f550 <__fxstatat@plt+0xcb00>  // b.none
  40f4fc:	ldr	q1, [x26, #3424]
  40f500:	bl	4169c8 <_obstack_memory_used@@Base+0x1498>
  40f504:	ldr	q1, [sp, #64]
  40f508:	cmp	w0, #0x0
  40f50c:	mov	v0.16b, v1.16b
  40f510:	b.ge	40f550 <__fxstatat@plt+0xcb00>  // b.tcont
  40f514:	mov	v0.16b, v1.16b
  40f518:	bl	417358 <_obstack_memory_used@@Base+0x1e28>
  40f51c:	cmp	w28, #0x0
  40f520:	mov	x25, x0
  40f524:	cset	w19, eq  // eq = none
  40f528:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f52c:	mov	v1.16b, v0.16b
  40f530:	ldr	q0, [sp, #64]
  40f534:	bl	4168c0 <_obstack_memory_used@@Base+0x1390>
  40f538:	cmp	w0, #0x0
  40f53c:	cset	w8, ne  // ne = any
  40f540:	and	w8, w19, w8
  40f544:	add	x0, x8, x25
  40f548:	ldr	x25, [sp, #24]
  40f54c:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f550:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f554:	add	x3, x3, #0xd86
  40f558:	mov	w1, #0x1                   	// #1
  40f55c:	mov	x2, #0xffffffffffffffff    	// #-1
  40f560:	mov	x0, x25
  40f564:	bl	402440 <__sprintf_chk@plt>
  40f568:	mov	x0, x25
  40f56c:	bl	402430 <strlen@plt>
  40f570:	ldr	q0, [sp, #64]
  40f574:	tst	w23, #0x20
  40f578:	mov	w8, #0x2                   	// #2
  40f57c:	cinc	x8, x8, eq  // eq = none
  40f580:	add	x8, x8, x24
  40f584:	cmp	x8, x0
  40f588:	b.cc	40f5a8 <__fxstatat@plt+0xcb58>  // b.lo, b.ul, b.last
  40f58c:	mov	x2, x0
  40f590:	add	x19, x24, #0x1
  40f594:	tbz	w23, #3, 40f6a0 <__fxstatat@plt+0xcc50>
  40f598:	add	x8, x2, x25
  40f59c:	ldurb	w8, [x8, #-1]
  40f5a0:	cmp	w8, #0x30
  40f5a4:	b.ne	40f6a0 <__fxstatat@plt+0xcc50>  // b.any
  40f5a8:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f5ac:	ldr	q1, [x8, #3440]
  40f5b0:	str	q1, [sp, #64]
  40f5b4:	bl	416b08 <_obstack_memory_used@@Base+0x15d8>
  40f5b8:	cmp	w28, #0x1
  40f5bc:	b.eq	40f60c <__fxstatat@plt+0xcbbc>  // b.none
  40f5c0:	ldr	q1, [x26, #3424]
  40f5c4:	str	q0, [sp, #48]
  40f5c8:	bl	4169c8 <_obstack_memory_used@@Base+0x1498>
  40f5cc:	cmp	w0, #0x0
  40f5d0:	b.ge	40f670 <__fxstatat@plt+0xcc20>  // b.tcont
  40f5d4:	ldr	q0, [sp, #48]
  40f5d8:	bl	417358 <_obstack_memory_used@@Base+0x1e28>
  40f5dc:	cmp	w28, #0x0
  40f5e0:	mov	x24, x0
  40f5e4:	cset	w19, eq  // eq = none
  40f5e8:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f5ec:	mov	v1.16b, v0.16b
  40f5f0:	ldr	q0, [sp, #48]
  40f5f4:	bl	4168c0 <_obstack_memory_used@@Base+0x1390>
  40f5f8:	cmp	w0, #0x0
  40f5fc:	cset	w8, ne  // ne = any
  40f600:	and	w8, w19, w8
  40f604:	add	x0, x8, x24
  40f608:	bl	417478 <_obstack_memory_used@@Base+0x1f48>
  40f60c:	ldr	q1, [sp, #64]
  40f610:	b	40f674 <__fxstatat@plt+0xcc24>
  40f614:	ldr	x25, [sp, #24]
  40f618:	mov	x27, x19
  40f61c:	b	40f624 <__fxstatat@plt+0xcbd4>
  40f620:	ldr	q0, [sp, #32]
  40f624:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f628:	add	x3, x3, #0xd80
  40f62c:	mov	w1, #0x1                   	// #1
  40f630:	mov	x2, #0xffffffffffffffff    	// #-1
  40f634:	mov	x0, x25
  40f638:	bl	402440 <__sprintf_chk@plt>
  40f63c:	mov	x0, x25
  40f640:	bl	402430 <strlen@plt>
  40f644:	mov	x2, x0
  40f648:	mov	x19, xzr
  40f64c:	mov	w21, #0xffffffff            	// #-1
  40f650:	b	40f6a0 <__fxstatat@plt+0xcc50>
  40f654:	mov	w9, wzr
  40f658:	mov	w8, wzr
  40f65c:	mul	x27, x10, x26
  40f660:	ldr	w23, [sp, #20]
  40f664:	tbnz	w23, #4, 40f3c0 <__fxstatat@plt+0xc970>
  40f668:	mov	w21, #0xffffffff            	// #-1
  40f66c:	b	40f7b4 <__fxstatat@plt+0xcd64>
  40f670:	ldp	q0, q1, [sp, #48]
  40f674:	bl	415fa0 <_obstack_memory_used@@Base+0xa70>
  40f678:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f67c:	add	x3, x3, #0xd80
  40f680:	mov	w1, #0x1                   	// #1
  40f684:	mov	x2, #0xffffffffffffffff    	// #-1
  40f688:	mov	x0, x25
  40f68c:	bl	402440 <__sprintf_chk@plt>
  40f690:	mov	x0, x25
  40f694:	bl	402430 <strlen@plt>
  40f698:	mov	x2, x0
  40f69c:	mov	x19, xzr
  40f6a0:	sub	x24, x27, x2
  40f6a4:	mov	x0, x24
  40f6a8:	mov	x1, x25
  40f6ac:	bl	4023d0 <memmove@plt>
  40f6b0:	sub	x26, x27, x19
  40f6b4:	mov	x19, x27
  40f6b8:	b	40f85c <__fxstatat@plt+0xce0c>
  40f6bc:	mov	w12, wzr
  40f6c0:	mov	w10, #0xa                   	// #10
  40f6c4:	mov	w11, #0x2                   	// #2
  40f6c8:	mov	x13, x27
  40f6cc:	udiv	x27, x27, x22
  40f6d0:	msub	w13, w27, w22, w13
  40f6d4:	madd	w13, w13, w10, w8
  40f6d8:	udiv	w8, w13, w22
  40f6dc:	msub	w13, w8, w22, w13
  40f6e0:	lsl	w13, w13, #1
  40f6e4:	add	w13, w13, w9, lsr #1
  40f6e8:	cmp	w13, w22
  40f6ec:	b.cs	40f6fc <__fxstatat@plt+0xccac>  // b.hs, b.nlast
  40f6f0:	cmn	w13, w9
  40f6f4:	cset	w9, ne  // ne = any
  40f6f8:	b	40f708 <__fxstatat@plt+0xccb8>
  40f6fc:	add	w9, w13, w9
  40f700:	cmp	w22, w9
  40f704:	cinc	w9, w11, cc  // cc = lo, ul, last
  40f708:	cmp	w12, #0x6
  40f70c:	add	w21, w12, #0x1
  40f710:	b.hi	40f720 <__fxstatat@plt+0xccd0>  // b.pmore
  40f714:	cmp	x27, x22
  40f718:	mov	w12, w21
  40f71c:	b.cs	40f6c8 <__fxstatat@plt+0xcc78>  // b.hs, b.nlast
  40f720:	cmp	x27, #0x9
  40f724:	b.hi	40f7b4 <__fxstatat@plt+0xcd64>  // b.pmore
  40f728:	cmp	w28, #0x1
  40f72c:	b.ne	40f744 <__fxstatat@plt+0xccf4>  // b.any
  40f730:	and	w10, w8, #0x1
  40f734:	add	w10, w9, w10
  40f738:	cmp	w10, #0x2
  40f73c:	b.hi	40f74c <__fxstatat@plt+0xccfc>  // b.pmore
  40f740:	b	40f774 <__fxstatat@plt+0xcd24>
  40f744:	cbnz	w28, 40f774 <__fxstatat@plt+0xcd24>
  40f748:	cbz	w9, 40f774 <__fxstatat@plt+0xcd24>
  40f74c:	add	w8, w8, #0x1
  40f750:	cmp	w8, #0xa
  40f754:	b.ne	40f770 <__fxstatat@plt+0xcd20>  // b.any
  40f758:	cmp	x27, #0x8
  40f75c:	mov	w8, wzr
  40f760:	b.hi	40f7ac <__fxstatat@plt+0xcd5c>  // b.pmore
  40f764:	add	x27, x27, #0x1
  40f768:	mov	w9, w8
  40f76c:	b	40f774 <__fxstatat@plt+0xcd24>
  40f770:	mov	w9, wzr
  40f774:	tbz	w23, #3, 40f77c <__fxstatat@plt+0xcd2c>
  40f778:	cbz	w8, 40f7b4 <__fxstatat@plt+0xcd64>
  40f77c:	ldr	x10, [sp, #24]
  40f780:	add	w8, w8, #0x30
  40f784:	mov	x1, x25
  40f788:	mov	x2, x24
  40f78c:	add	x9, x10, #0x286
  40f790:	sub	x26, x9, x24
  40f794:	mov	x0, x26
  40f798:	strb	w8, [x10, #646]
  40f79c:	bl	4023c0 <memcpy@plt>
  40f7a0:	mov	w9, wzr
  40f7a4:	mov	w8, wzr
  40f7a8:	b	40f7b8 <__fxstatat@plt+0xcd68>
  40f7ac:	mov	w27, #0xa                   	// #10
  40f7b0:	mov	w9, w8
  40f7b4:	mov	x26, x19
  40f7b8:	cbz	w28, 40f7dc <__fxstatat@plt+0xcd8c>
  40f7bc:	cmp	w28, #0x1
  40f7c0:	b.ne	40f828 <__fxstatat@plt+0xcdd8>  // b.any
  40f7c4:	and	x10, x27, #0x1
  40f7c8:	cmn	x10, w9, uxtw
  40f7cc:	cinc	w8, w8, ne  // ne = any
  40f7d0:	cmp	w8, #0x5
  40f7d4:	b.gt	40f7e8 <__fxstatat@plt+0xcd98>
  40f7d8:	b	40f828 <__fxstatat@plt+0xcdd8>
  40f7dc:	add	w8, w8, w9
  40f7e0:	cmp	w8, #0x1
  40f7e4:	b.lt	40f828 <__fxstatat@plt+0xcdd8>  // b.tstop
  40f7e8:	cmp	w21, #0x7
  40f7ec:	add	x27, x27, #0x1
  40f7f0:	b.gt	40f828 <__fxstatat@plt+0xcdd8>
  40f7f4:	tbz	w23, #4, 40f828 <__fxstatat@plt+0xcdd8>
  40f7f8:	cmp	x27, x22
  40f7fc:	b.ne	40f828 <__fxstatat@plt+0xcdd8>  // b.any
  40f800:	add	w21, w21, #0x1
  40f804:	tbnz	w23, #3, 40f824 <__fxstatat@plt+0xcdd4>
  40f808:	mov	w8, #0x30                  	// #48
  40f80c:	strb	w8, [x26, #-1]!
  40f810:	sub	x26, x26, x24
  40f814:	mov	x0, x26
  40f818:	mov	x1, x25
  40f81c:	mov	x2, x24
  40f820:	bl	4023c0 <memcpy@plt>
  40f824:	mov	w27, #0x1                   	// #1
  40f828:	ldr	x25, [sp, #24]
  40f82c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40f830:	movk	x8, #0xcccd
  40f834:	mov	w9, #0xa                   	// #10
  40f838:	mov	x24, x26
  40f83c:	umulh	x10, x27, x8
  40f840:	lsr	x10, x10, #3
  40f844:	msub	w11, w10, w9, w27
  40f848:	orr	w11, w11, #0x30
  40f84c:	cmp	x27, #0x9
  40f850:	strb	w11, [x24, #-1]!
  40f854:	mov	x27, x10
  40f858:	b.hi	40f83c <__fxstatat@plt+0xcdec>  // b.pmore
  40f85c:	tbnz	w23, #2, 40f86c <__fxstatat@plt+0xce1c>
  40f860:	ldr	x9, [sp, #8]
  40f864:	tbnz	w23, #7, 40f958 <__fxstatat@plt+0xcf08>
  40f868:	b	40f9ec <__fxstatat@plt+0xcf9c>
  40f86c:	ldr	x0, [sp]
  40f870:	str	x22, [sp, #48]
  40f874:	str	x19, [sp, #64]
  40f878:	sub	x28, x26, x24
  40f87c:	bl	402430 <strlen@plt>
  40f880:	mov	x25, x0
  40f884:	sub	x0, x29, #0x2c
  40f888:	mov	w3, #0x29                  	// #41
  40f88c:	mov	x1, x24
  40f890:	mov	x2, x28
  40f894:	sub	x19, x29, #0x2c
  40f898:	bl	4025a0 <__memcpy_chk@plt>
  40f89c:	ldrb	w8, [x20]
  40f8a0:	cmp	x8, #0x0
  40f8a4:	cset	w23, eq  // eq = none
  40f8a8:	cmp	w8, #0xff
  40f8ac:	csel	x9, x28, x8, eq  // eq = none
  40f8b0:	cmp	w8, #0x0
  40f8b4:	csinv	x8, x9, xzr, ne  // ne = any
  40f8b8:	cmp	x8, x28
  40f8bc:	csel	x27, x28, x8, hi  // hi = pmore
  40f8c0:	sub	x24, x26, x27
  40f8c4:	sub	x26, x28, x27
  40f8c8:	add	x1, x19, x26
  40f8cc:	mov	x0, x24
  40f8d0:	mov	x2, x27
  40f8d4:	bl	4023c0 <memcpy@plt>
  40f8d8:	cbz	x26, 40f940 <__fxstatat@plt+0xcef0>
  40f8dc:	ldr	x22, [sp]
  40f8e0:	neg	x28, x25
  40f8e4:	add	x24, x24, x28
  40f8e8:	tst	w23, #0x1
  40f8ec:	mov	x0, x24
  40f8f0:	mov	x1, x22
  40f8f4:	mov	x2, x25
  40f8f8:	cinc	x20, x20, eq  // eq = none
  40f8fc:	bl	4023c0 <memcpy@plt>
  40f900:	ldrb	w8, [x20]
  40f904:	cmp	x8, #0x0
  40f908:	cset	w23, eq  // eq = none
  40f90c:	cmp	w8, #0xff
  40f910:	csel	x9, x26, x8, eq  // eq = none
  40f914:	cmp	w8, #0x0
  40f918:	csel	x8, x27, x9, eq  // eq = none
  40f91c:	cmp	x26, x8
  40f920:	csel	x27, x26, x8, cc  // cc = lo, ul, last
  40f924:	sub	x24, x24, x27
  40f928:	sub	x26, x26, x27
  40f92c:	add	x1, x19, x26
  40f930:	mov	x0, x24
  40f934:	mov	x2, x27
  40f938:	bl	4023c0 <memcpy@plt>
  40f93c:	cbnz	x26, 40f8e4 <__fxstatat@plt+0xce94>
  40f940:	ldr	w23, [sp, #20]
  40f944:	ldr	x19, [sp, #64]
  40f948:	ldr	x25, [sp, #24]
  40f94c:	ldr	x9, [sp, #8]
  40f950:	ldr	x22, [sp, #48]
  40f954:	tbz	w23, #7, 40f9ec <__fxstatat@plt+0xcf9c>
  40f958:	tbz	w21, #31, 40f98c <__fxstatat@plt+0xcf3c>
  40f95c:	cmp	x9, #0x2
  40f960:	b.cc	40f988 <__fxstatat@plt+0xcf38>  // b.lo, b.ul, b.last
  40f964:	mov	w21, wzr
  40f968:	mov	w8, #0x1                   	// #1
  40f96c:	cmp	w21, #0x7
  40f970:	b.eq	40fa14 <__fxstatat@plt+0xcfc4>  // b.none
  40f974:	mul	x8, x8, x22
  40f978:	cmp	x8, x9
  40f97c:	add	w21, w21, #0x1
  40f980:	b.cc	40f96c <__fxstatat@plt+0xcf1c>  // b.lo, b.ul, b.last
  40f984:	b	40f98c <__fxstatat@plt+0xcf3c>
  40f988:	mov	w21, wzr
  40f98c:	and	w8, w23, #0x100
  40f990:	tbz	w23, #6, 40f9a8 <__fxstatat@plt+0xcf58>
  40f994:	orr	w9, w21, w8
  40f998:	cbz	w9, 40f9a8 <__fxstatat@plt+0xcf58>
  40f99c:	add	x19, x25, #0x288
  40f9a0:	mov	w9, #0x20                  	// #32
  40f9a4:	strb	w9, [x25, #647]
  40f9a8:	cbz	w21, 40f9d0 <__fxstatat@plt+0xcf80>
  40f9ac:	tbnz	w23, #5, 40f9c0 <__fxstatat@plt+0xcf70>
  40f9b0:	cmp	w21, #0x1
  40f9b4:	b.ne	40f9c0 <__fxstatat@plt+0xcf70>  // b.any
  40f9b8:	mov	w9, #0x6b                  	// #107
  40f9bc:	b	40f9cc <__fxstatat@plt+0xcf7c>
  40f9c0:	adrp	x9, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40f9c4:	add	x9, x9, #0xdb8
  40f9c8:	ldrb	w9, [x9, w21, sxtw]
  40f9cc:	strb	w9, [x19], #1
  40f9d0:	cbz	w8, 40f9ec <__fxstatat@plt+0xcf9c>
  40f9d4:	tbz	w23, #5, 40f9e4 <__fxstatat@plt+0xcf94>
  40f9d8:	cbz	w21, 40f9e4 <__fxstatat@plt+0xcf94>
  40f9dc:	mov	w8, #0x69                  	// #105
  40f9e0:	strb	w8, [x19], #1
  40f9e4:	mov	w8, #0x42                  	// #66
  40f9e8:	strb	w8, [x19], #1
  40f9ec:	strb	wzr, [x19]
  40f9f0:	mov	x0, x24
  40f9f4:	ldp	x20, x19, [sp, #208]
  40f9f8:	ldp	x22, x21, [sp, #192]
  40f9fc:	ldp	x24, x23, [sp, #176]
  40fa00:	ldp	x26, x25, [sp, #160]
  40fa04:	ldp	x28, x27, [sp, #144]
  40fa08:	ldp	x29, x30, [sp, #128]
  40fa0c:	add	sp, sp, #0xe0
  40fa10:	ret
  40fa14:	mov	w21, #0x8                   	// #8
  40fa18:	and	w8, w23, #0x100
  40fa1c:	tbnz	w23, #6, 40f994 <__fxstatat@plt+0xcf44>
  40fa20:	b	40f9a8 <__fxstatat@plt+0xcf58>
  40fa24:	stp	x29, x30, [sp, #-64]!
  40fa28:	stp	x20, x19, [sp, #48]
  40fa2c:	mov	x19, x2
  40fa30:	mov	x20, x1
  40fa34:	str	x23, [sp, #16]
  40fa38:	stp	x22, x21, [sp, #32]
  40fa3c:	mov	x29, sp
  40fa40:	cbnz	x0, 40fa64 <__fxstatat@plt+0xd014>
  40fa44:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fa48:	add	x0, x0, #0x423
  40fa4c:	bl	4029f0 <getenv@plt>
  40fa50:	cbnz	x0, 40fa64 <__fxstatat@plt+0xd014>
  40fa54:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fa58:	add	x0, x0, #0xd8c
  40fa5c:	bl	4029f0 <getenv@plt>
  40fa60:	cbz	x0, 40fb5c <__fxstatat@plt+0xd10c>
  40fa64:	mov	x8, x0
  40fa68:	ldrb	w9, [x8], #1
  40fa6c:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fa70:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fa74:	add	x22, x22, #0xde0
  40fa78:	cmp	w9, #0x27
  40fa7c:	csel	x21, x8, x0, eq  // eq = none
  40fa80:	cset	w9, eq  // eq = none
  40fa84:	add	x1, x1, #0xdc8
  40fa88:	mov	w3, #0x4                   	// #4
  40fa8c:	mov	x0, x21
  40fa90:	mov	x2, x22
  40fa94:	lsl	w23, w9, #2
  40fa98:	bl	40c96c <__fxstatat@plt+0x9f1c>
  40fa9c:	tbnz	w0, #31, 40fafc <__fxstatat@plt+0xd0ac>
  40faa0:	sbfiz	x8, x0, #2, #32
  40faa4:	ldr	w8, [x22, x8]
  40faa8:	mov	w9, #0x1                   	// #1
  40faac:	str	x9, [x19]
  40fab0:	orr	w23, w8, w23
  40fab4:	mov	w0, wzr
  40fab8:	str	w23, [x20]
  40fabc:	ldr	x8, [x19]
  40fac0:	cbnz	x8, 40fae8 <__fxstatat@plt+0xd098>
  40fac4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fac8:	add	x0, x0, #0xda8
  40facc:	bl	4029f0 <getenv@plt>
  40fad0:	cmp	x0, #0x0
  40fad4:	mov	w8, #0x200                 	// #512
  40fad8:	mov	w9, #0x400                 	// #1024
  40fadc:	csel	x8, x9, x8, eq  // eq = none
  40fae0:	mov	w0, #0x4                   	// #4
  40fae4:	str	x8, [x19]
  40fae8:	ldp	x20, x19, [sp, #48]
  40faec:	ldp	x22, x21, [sp, #32]
  40faf0:	ldr	x23, [sp, #16]
  40faf4:	ldp	x29, x30, [sp], #64
  40faf8:	ret
  40fafc:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fb00:	add	x4, x4, #0xd96
  40fb04:	add	x1, x29, #0x18
  40fb08:	mov	x0, x21
  40fb0c:	mov	w2, wzr
  40fb10:	mov	x3, x19
  40fb14:	bl	414d5c <__fxstatat@plt+0x1230c>
  40fb18:	cbz	w0, 40fb2c <__fxstatat@plt+0xd0dc>
  40fb1c:	str	wzr, [x20]
  40fb20:	ldr	x8, [x19]
  40fb24:	cbnz	x8, 40fae8 <__fxstatat@plt+0xd098>
  40fb28:	b	40fac4 <__fxstatat@plt+0xd074>
  40fb2c:	ldrb	w8, [x21]
  40fb30:	sub	w8, w8, #0x30
  40fb34:	cmp	w8, #0xa
  40fb38:	b.cc	40fab4 <__fxstatat@plt+0xd064>  // b.lo, b.ul, b.last
  40fb3c:	ldr	x8, [x29, #24]
  40fb40:	cmp	x8, x21
  40fb44:	b.eq	40fb94 <__fxstatat@plt+0xd144>  // b.none
  40fb48:	ldrb	w9, [x21, #1]!
  40fb4c:	sub	w9, w9, #0x30
  40fb50:	cmp	w9, #0xa
  40fb54:	b.cs	40fb40 <__fxstatat@plt+0xd0f0>  // b.hs, b.nlast
  40fb58:	b	40fab4 <__fxstatat@plt+0xd064>
  40fb5c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fb60:	add	x0, x0, #0xda8
  40fb64:	bl	4029f0 <getenv@plt>
  40fb68:	cmp	x0, #0x0
  40fb6c:	mov	w8, #0x200                 	// #512
  40fb70:	mov	w9, #0x400                 	// #1024
  40fb74:	csel	x8, x9, x8, eq  // eq = none
  40fb78:	mov	w23, wzr
  40fb7c:	str	x8, [x19]
  40fb80:	mov	w0, wzr
  40fb84:	str	w23, [x20]
  40fb88:	ldr	x8, [x19]
  40fb8c:	cbnz	x8, 40fae8 <__fxstatat@plt+0xd098>
  40fb90:	b	40fac4 <__fxstatat@plt+0xd074>
  40fb94:	ldurb	w9, [x8, #-1]
  40fb98:	orr	w10, w23, #0x80
  40fb9c:	orr	w23, w23, #0x180
  40fba0:	cmp	w9, #0x42
  40fba4:	csel	w9, w23, w10, eq  // eq = none
  40fba8:	b.ne	40fbb8 <__fxstatat@plt+0xd168>  // b.any
  40fbac:	ldurb	w8, [x8, #-2]
  40fbb0:	cmp	w8, #0x69
  40fbb4:	b.ne	40fab4 <__fxstatat@plt+0xd064>  // b.any
  40fbb8:	orr	w23, w9, #0x20
  40fbbc:	mov	w0, wzr
  40fbc0:	str	w23, [x20]
  40fbc4:	ldr	x8, [x19]
  40fbc8:	cbnz	x8, 40fae8 <__fxstatat@plt+0xd098>
  40fbcc:	b	40fac4 <__fxstatat@plt+0xd074>
  40fbd0:	stp	x29, x30, [sp, #-48]!
  40fbd4:	stp	x22, x21, [sp, #16]
  40fbd8:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40fbdc:	stp	x20, x19, [sp, #32]
  40fbe0:	ldr	x20, [x22, #1792]
  40fbe4:	mov	w19, w0
  40fbe8:	mov	x29, sp
  40fbec:	cbz	x20, 40fc04 <__fxstatat@plt+0xd1b4>
  40fbf0:	ldr	w8, [x20]
  40fbf4:	cmp	w8, w19
  40fbf8:	b.eq	40fc50 <__fxstatat@plt+0xd200>  // b.none
  40fbfc:	ldr	x20, [x20, #8]
  40fc00:	cbnz	x20, 40fbf0 <__fxstatat@plt+0xd1a0>
  40fc04:	mov	w0, w19
  40fc08:	bl	402810 <getpwuid@plt>
  40fc0c:	cbz	x0, 40fc18 <__fxstatat@plt+0xd1c8>
  40fc10:	ldr	x21, [x0]
  40fc14:	b	40fc20 <__fxstatat@plt+0xd1d0>
  40fc18:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fc1c:	add	x21, x21, #0x8d1
  40fc20:	mov	x0, x21
  40fc24:	bl	402430 <strlen@plt>
  40fc28:	add	x8, x0, #0x18
  40fc2c:	and	x0, x8, #0xfffffffffffffff8
  40fc30:	bl	414368 <__fxstatat@plt+0x11918>
  40fc34:	mov	x20, x0
  40fc38:	str	w19, [x0], #16
  40fc3c:	mov	x1, x21
  40fc40:	bl	4028c0 <strcpy@plt>
  40fc44:	ldr	x8, [x22, #1792]
  40fc48:	str	x20, [x22, #1792]
  40fc4c:	str	x8, [x20, #8]
  40fc50:	ldrb	w8, [x20, #16]!
  40fc54:	ldp	x22, x21, [sp, #16]
  40fc58:	cmp	w8, #0x0
  40fc5c:	csel	x0, xzr, x20, eq  // eq = none
  40fc60:	ldp	x20, x19, [sp, #32]
  40fc64:	ldp	x29, x30, [sp], #48
  40fc68:	ret
  40fc6c:	stp	x29, x30, [sp, #-64]!
  40fc70:	stp	x22, x21, [sp, #32]
  40fc74:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40fc78:	stp	x20, x19, [sp, #48]
  40fc7c:	ldr	x20, [x22, #1792]
  40fc80:	mov	x19, x0
  40fc84:	str	x23, [sp, #16]
  40fc88:	mov	x29, sp
  40fc8c:	cbz	x20, 40fcc0 <__fxstatat@plt+0xd270>
  40fc90:	ldrb	w21, [x19]
  40fc94:	b	40fca0 <__fxstatat@plt+0xd250>
  40fc98:	ldr	x20, [x20, #8]
  40fc9c:	cbz	x20, 40fcc0 <__fxstatat@plt+0xd270>
  40fca0:	mov	x0, x20
  40fca4:	ldrb	w8, [x0, #16]!
  40fca8:	cmp	w8, w21
  40fcac:	b.ne	40fc98 <__fxstatat@plt+0xd248>  // b.any
  40fcb0:	mov	x1, x19
  40fcb4:	bl	402800 <strcmp@plt>
  40fcb8:	cbnz	w0, 40fc98 <__fxstatat@plt+0xd248>
  40fcbc:	b	40fd58 <__fxstatat@plt+0xd308>
  40fcc0:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40fcc4:	ldr	x20, [x23, #1800]
  40fcc8:	cbz	x20, 40fcfc <__fxstatat@plt+0xd2ac>
  40fccc:	ldrb	w21, [x19]
  40fcd0:	b	40fcdc <__fxstatat@plt+0xd28c>
  40fcd4:	ldr	x20, [x20, #8]
  40fcd8:	cbz	x20, 40fcfc <__fxstatat@plt+0xd2ac>
  40fcdc:	mov	x0, x20
  40fce0:	ldrb	w8, [x0, #16]!
  40fce4:	cmp	w8, w21
  40fce8:	b.ne	40fcd4 <__fxstatat@plt+0xd284>  // b.any
  40fcec:	mov	x1, x19
  40fcf0:	bl	402800 <strcmp@plt>
  40fcf4:	cbnz	w0, 40fcd4 <__fxstatat@plt+0xd284>
  40fcf8:	b	40fd54 <__fxstatat@plt+0xd304>
  40fcfc:	mov	x0, x19
  40fd00:	bl	402690 <getpwnam@plt>
  40fd04:	mov	x21, x0
  40fd08:	mov	x0, x19
  40fd0c:	bl	402430 <strlen@plt>
  40fd10:	add	x8, x0, #0x18
  40fd14:	and	x0, x8, #0xfffffffffffffff8
  40fd18:	bl	414368 <__fxstatat@plt+0x11918>
  40fd1c:	mov	x20, x0
  40fd20:	add	x0, x0, #0x10
  40fd24:	mov	x1, x19
  40fd28:	bl	4028c0 <strcpy@plt>
  40fd2c:	cbz	x21, 40fd48 <__fxstatat@plt+0xd2f8>
  40fd30:	ldr	w8, [x21, #16]
  40fd34:	ldr	x9, [x22, #1792]
  40fd38:	str	x20, [x22, #1792]
  40fd3c:	str	w8, [x20]
  40fd40:	str	x9, [x20, #8]
  40fd44:	b	40fd58 <__fxstatat@plt+0xd308>
  40fd48:	ldr	x8, [x23, #1800]
  40fd4c:	str	x20, [x23, #1800]
  40fd50:	str	x8, [x20, #8]
  40fd54:	mov	x20, xzr
  40fd58:	mov	x0, x20
  40fd5c:	ldp	x20, x19, [sp, #48]
  40fd60:	ldp	x22, x21, [sp, #32]
  40fd64:	ldr	x23, [sp, #16]
  40fd68:	ldp	x29, x30, [sp], #64
  40fd6c:	ret
  40fd70:	stp	x29, x30, [sp, #-48]!
  40fd74:	stp	x22, x21, [sp, #16]
  40fd78:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40fd7c:	stp	x20, x19, [sp, #32]
  40fd80:	ldr	x20, [x22, #1808]
  40fd84:	mov	w19, w0
  40fd88:	mov	x29, sp
  40fd8c:	cbz	x20, 40fda4 <__fxstatat@plt+0xd354>
  40fd90:	ldr	w8, [x20]
  40fd94:	cmp	w8, w19
  40fd98:	b.eq	40fdf0 <__fxstatat@plt+0xd3a0>  // b.none
  40fd9c:	ldr	x20, [x20, #8]
  40fda0:	cbnz	x20, 40fd90 <__fxstatat@plt+0xd340>
  40fda4:	mov	w0, w19
  40fda8:	bl	402a10 <getgrgid@plt>
  40fdac:	cbz	x0, 40fdb8 <__fxstatat@plt+0xd368>
  40fdb0:	ldr	x21, [x0]
  40fdb4:	b	40fdc0 <__fxstatat@plt+0xd370>
  40fdb8:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  40fdbc:	add	x21, x21, #0x8d1
  40fdc0:	mov	x0, x21
  40fdc4:	bl	402430 <strlen@plt>
  40fdc8:	add	x8, x0, #0x18
  40fdcc:	and	x0, x8, #0xfffffffffffffff8
  40fdd0:	bl	414368 <__fxstatat@plt+0x11918>
  40fdd4:	mov	x20, x0
  40fdd8:	str	w19, [x0], #16
  40fddc:	mov	x1, x21
  40fde0:	bl	4028c0 <strcpy@plt>
  40fde4:	ldr	x8, [x22, #1808]
  40fde8:	str	x20, [x22, #1808]
  40fdec:	str	x8, [x20, #8]
  40fdf0:	ldrb	w8, [x20, #16]!
  40fdf4:	ldp	x22, x21, [sp, #16]
  40fdf8:	cmp	w8, #0x0
  40fdfc:	csel	x0, xzr, x20, eq  // eq = none
  40fe00:	ldp	x20, x19, [sp, #32]
  40fe04:	ldp	x29, x30, [sp], #48
  40fe08:	ret
  40fe0c:	stp	x29, x30, [sp, #-64]!
  40fe10:	stp	x22, x21, [sp, #32]
  40fe14:	adrp	x22, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40fe18:	stp	x20, x19, [sp, #48]
  40fe1c:	ldr	x20, [x22, #1808]
  40fe20:	mov	x19, x0
  40fe24:	str	x23, [sp, #16]
  40fe28:	mov	x29, sp
  40fe2c:	cbz	x20, 40fe60 <__fxstatat@plt+0xd410>
  40fe30:	ldrb	w21, [x19]
  40fe34:	b	40fe40 <__fxstatat@plt+0xd3f0>
  40fe38:	ldr	x20, [x20, #8]
  40fe3c:	cbz	x20, 40fe60 <__fxstatat@plt+0xd410>
  40fe40:	mov	x0, x20
  40fe44:	ldrb	w8, [x0, #16]!
  40fe48:	cmp	w8, w21
  40fe4c:	b.ne	40fe38 <__fxstatat@plt+0xd3e8>  // b.any
  40fe50:	mov	x1, x19
  40fe54:	bl	402800 <strcmp@plt>
  40fe58:	cbnz	w0, 40fe38 <__fxstatat@plt+0xd3e8>
  40fe5c:	b	40fef8 <__fxstatat@plt+0xd4a8>
  40fe60:	adrp	x23, 42e000 <__progname@@GLIBC_2.17+0xa48>
  40fe64:	ldr	x20, [x23, #1816]
  40fe68:	cbz	x20, 40fe9c <__fxstatat@plt+0xd44c>
  40fe6c:	ldrb	w21, [x19]
  40fe70:	b	40fe7c <__fxstatat@plt+0xd42c>
  40fe74:	ldr	x20, [x20, #8]
  40fe78:	cbz	x20, 40fe9c <__fxstatat@plt+0xd44c>
  40fe7c:	mov	x0, x20
  40fe80:	ldrb	w8, [x0, #16]!
  40fe84:	cmp	w8, w21
  40fe88:	b.ne	40fe74 <__fxstatat@plt+0xd424>  // b.any
  40fe8c:	mov	x1, x19
  40fe90:	bl	402800 <strcmp@plt>
  40fe94:	cbnz	w0, 40fe74 <__fxstatat@plt+0xd424>
  40fe98:	b	40fef4 <__fxstatat@plt+0xd4a4>
  40fe9c:	mov	x0, x19
  40fea0:	bl	4024e0 <getgrnam@plt>
  40fea4:	mov	x21, x0
  40fea8:	mov	x0, x19
  40feac:	bl	402430 <strlen@plt>
  40feb0:	add	x8, x0, #0x18
  40feb4:	and	x0, x8, #0xfffffffffffffff8
  40feb8:	bl	414368 <__fxstatat@plt+0x11918>
  40febc:	mov	x20, x0
  40fec0:	add	x0, x0, #0x10
  40fec4:	mov	x1, x19
  40fec8:	bl	4028c0 <strcpy@plt>
  40fecc:	cbz	x21, 40fee8 <__fxstatat@plt+0xd498>
  40fed0:	ldr	w8, [x21, #16]
  40fed4:	ldr	x9, [x22, #1808]
  40fed8:	str	x20, [x22, #1808]
  40fedc:	str	w8, [x20]
  40fee0:	str	x9, [x20, #8]
  40fee4:	b	40fef8 <__fxstatat@plt+0xd4a8>
  40fee8:	ldr	x8, [x23, #1816]
  40feec:	str	x20, [x23, #1816]
  40fef0:	str	x8, [x20, #8]
  40fef4:	mov	x20, xzr
  40fef8:	mov	x0, x20
  40fefc:	ldp	x20, x19, [sp, #48]
  40ff00:	ldp	x22, x21, [sp, #32]
  40ff04:	ldr	x23, [sp, #16]
  40ff08:	ldp	x29, x30, [sp], #64
  40ff0c:	ret
  40ff10:	mov	x8, x0
  40ff14:	mov	x0, x1
  40ff18:	strb	wzr, [x0, #20]!
  40ff1c:	tbnz	x8, #63, 40ff58 <__fxstatat@plt+0xd508>
  40ff20:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40ff24:	movk	x9, #0x6667
  40ff28:	mov	w10, #0xa                   	// #10
  40ff2c:	smulh	x11, x8, x9
  40ff30:	asr	x13, x11, #2
  40ff34:	add	x11, x13, x11, lsr #63
  40ff38:	add	x12, x8, #0x9
  40ff3c:	msub	w8, w11, w10, w8
  40ff40:	add	w8, w8, #0x30
  40ff44:	cmp	x12, #0x12
  40ff48:	strb	w8, [x0, #-1]!
  40ff4c:	mov	x8, x11
  40ff50:	b.hi	40ff2c <__fxstatat@plt+0xd4dc>  // b.pmore
  40ff54:	ret
  40ff58:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40ff5c:	add	x0, x1, #0x13
  40ff60:	movk	x9, #0x6667
  40ff64:	mov	w10, #0xa                   	// #10
  40ff68:	smulh	x11, x8, x9
  40ff6c:	asr	x13, x11, #2
  40ff70:	neg	w12, w8
  40ff74:	add	x11, x13, x11, lsr #63
  40ff78:	madd	w12, w11, w10, w12
  40ff7c:	add	x8, x8, #0x9
  40ff80:	add	w12, w12, #0x30
  40ff84:	cmp	x8, #0x12
  40ff88:	strb	w12, [x0], #-1
  40ff8c:	mov	x8, x11
  40ff90:	b.hi	40ff68 <__fxstatat@plt+0xd518>  // b.pmore
  40ff94:	mov	w8, #0x2d                  	// #45
  40ff98:	strb	w8, [x0]
  40ff9c:	ret
  40ffa0:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40ffa4:	movk	x8, #0xcccd
  40ffa8:	strb	wzr, [x1, #20]!
  40ffac:	mov	w9, #0xa                   	// #10
  40ffb0:	umulh	x10, x0, x8
  40ffb4:	lsr	x10, x10, #3
  40ffb8:	msub	w11, w10, w9, w0
  40ffbc:	orr	w11, w11, #0x30
  40ffc0:	cmp	x0, #0x9
  40ffc4:	strb	w11, [x1, #-1]!
  40ffc8:	mov	x0, x10
  40ffcc:	b.hi	40ffb0 <__fxstatat@plt+0xd560>  // b.pmore
  40ffd0:	mov	x0, x1
  40ffd4:	ret
  40ffd8:	sub	sp, sp, #0x70
  40ffdc:	stp	x29, x30, [sp, #16]
  40ffe0:	stp	x28, x27, [sp, #32]
  40ffe4:	stp	x26, x25, [sp, #48]
  40ffe8:	stp	x24, x23, [sp, #64]
  40ffec:	stp	x22, x21, [sp, #80]
  40fff0:	stp	x20, x19, [sp, #96]
  40fff4:	add	x29, sp, #0x10
  40fff8:	mov	w22, w5
  40fffc:	mov	w23, w4
  410000:	mov	x25, x3
  410004:	mov	x28, x2
  410008:	mov	x19, x1
  41000c:	mov	x24, x0
  410010:	bl	402430 <strlen@plt>
  410014:	mov	x21, x0
  410018:	tbnz	w22, #1, 4100ac <__fxstatat@plt+0xd65c>
  41001c:	bl	402850 <__ctype_get_mb_cur_max@plt>
  410020:	cmp	x0, #0x2
  410024:	b.cc	4100ac <__fxstatat@plt+0xd65c>  // b.lo, b.ul, b.last
  410028:	mov	x0, xzr
  41002c:	mov	x1, x24
  410030:	mov	x2, xzr
  410034:	str	x28, [sp, #8]
  410038:	bl	402450 <mbstowcs@plt>
  41003c:	cmn	x0, #0x1
  410040:	b.eq	410238 <__fxstatat@plt+0xd7e8>  // b.none
  410044:	add	x26, x0, #0x1
  410048:	mov	x28, x0
  41004c:	lsl	x0, x26, #2
  410050:	bl	4025f0 <malloc@plt>
  410054:	cbz	x0, 41024c <__fxstatat@plt+0xd7fc>
  410058:	mov	x1, x24
  41005c:	mov	x2, x26
  410060:	mov	x20, x0
  410064:	bl	402450 <mbstowcs@plt>
  410068:	cbz	x0, 410290 <__fxstatat@plt+0xd840>
  41006c:	str	wzr, [x20, x28, lsl #2]
  410070:	ldr	w0, [x20]
  410074:	mov	x8, x20
  410078:	str	x20, [sp]
  41007c:	cbz	w0, 4102ac <__fxstatat@plt+0xd85c>
  410080:	mov	w28, wzr
  410084:	add	x27, x8, #0x4
  410088:	mov	w20, #0xfffd                	// #65533
  41008c:	b	410098 <__fxstatat@plt+0xd648>
  410090:	ldr	w0, [x27], #4
  410094:	cbz	w0, 410264 <__fxstatat@plt+0xd814>
  410098:	bl	4029c0 <iswprint@plt>
  41009c:	cbnz	w0, 410090 <__fxstatat@plt+0xd640>
  4100a0:	mov	w28, #0x1                   	// #1
  4100a4:	stur	w20, [x27, #-4]
  4100a8:	b	410090 <__fxstatat@plt+0xd640>
  4100ac:	mov	x20, xzr
  4100b0:	mov	x10, xzr
  4100b4:	mov	x27, x21
  4100b8:	ldr	x8, [x25]
  4100bc:	cmp	x27, x8
  4100c0:	csel	x9, x8, x27, hi  // hi = pmore
  4100c4:	csel	x21, x8, x21, hi  // hi = pmore
  4100c8:	cmp	x8, x27
  4100cc:	sub	x8, x8, x9
  4100d0:	csel	x26, x8, xzr, hi  // hi = pmore
  4100d4:	str	x9, [x25]
  4100d8:	cbz	w23, 4100f0 <__fxstatat@plt+0xd6a0>
  4100dc:	cmp	w23, #0x1
  4100e0:	b.ne	4100f8 <__fxstatat@plt+0xd6a8>  // b.any
  4100e4:	mov	x27, x26
  4100e8:	mov	x26, xzr
  4100ec:	b	410104 <__fxstatat@plt+0xd6b4>
  4100f0:	mov	x27, xzr
  4100f4:	b	410104 <__fxstatat@plt+0xd6b4>
  4100f8:	and	x8, x26, #0x1
  4100fc:	lsr	x26, x26, #1
  410100:	add	x27, x26, x8
  410104:	tst	w22, #0x4
  410108:	csel	x23, x27, xzr, eq  // eq = none
  41010c:	tst	w22, #0x8
  410110:	csel	x25, x26, xzr, eq  // eq = none
  410114:	cbz	x28, 4101fc <__fxstatat@plt+0xd7ac>
  410118:	add	x8, x19, x28
  41011c:	mov	x22, x24
  410120:	mov	x24, x28
  410124:	sub	x28, x8, #0x1
  410128:	str	x20, [sp, #8]
  41012c:	mov	x20, x10
  410130:	cmp	x28, x19
  410134:	mov	x0, x19
  410138:	b.ls	410180 <__fxstatat@plt+0xd730>  // b.plast
  41013c:	mov	x0, x19
  410140:	cbz	x23, 410180 <__fxstatat@plt+0xd730>
  410144:	mvn	x8, x19
  410148:	add	x8, x28, x8
  41014c:	sub	x9, x23, #0x1
  410150:	cmp	x9, x8
  410154:	csel	x8, x8, x9, hi  // hi = pmore
  410158:	add	x2, x8, #0x1
  41015c:	mov	w1, #0x20                  	// #32
  410160:	mov	x0, x19
  410164:	bl	402680 <memset@plt>
  410168:	sub	x8, x27, #0x1
  41016c:	sub	x9, x24, #0x2
  410170:	cmp	x8, x9
  410174:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  410178:	add	x8, x8, x19
  41017c:	add	x0, x8, #0x1
  410180:	sub	x8, x28, x0
  410184:	cmp	x21, x8
  410188:	csel	x2, x21, x8, cc  // cc = lo, ul, last
  41018c:	mov	x3, #0xffffffffffffffff    	// #-1
  410190:	mov	x1, x22
  410194:	strb	wzr, [x0]
  410198:	bl	402940 <__mempcpy_chk@plt>
  41019c:	mov	x22, x0
  4101a0:	cbz	x25, 4101f0 <__fxstatat@plt+0xd7a0>
  4101a4:	cmp	x22, x28
  4101a8:	b.cs	4101f0 <__fxstatat@plt+0xd7a0>  // b.hs, b.nlast
  4101ac:	mvn	x8, x22
  4101b0:	add	x8, x28, x8
  4101b4:	sub	x9, x25, #0x1
  4101b8:	cmp	x9, x8
  4101bc:	csel	x8, x8, x9, hi  // hi = pmore
  4101c0:	add	x2, x8, #0x1
  4101c4:	mov	w1, #0x20                  	// #32
  4101c8:	mov	x0, x22
  4101cc:	bl	402680 <memset@plt>
  4101d0:	sub	x8, x24, x22
  4101d4:	add	x8, x8, x19
  4101d8:	sub	x8, x8, #0x2
  4101dc:	sub	x9, x26, #0x1
  4101e0:	cmp	x9, x8
  4101e4:	csel	x8, x8, x9, hi  // hi = pmore
  4101e8:	add	x8, x8, x22
  4101ec:	add	x22, x8, #0x1
  4101f0:	mov	x10, x20
  4101f4:	ldr	x20, [sp, #8]
  4101f8:	strb	wzr, [x22]
  4101fc:	add	x8, x23, x21
  410200:	add	x19, x8, x25
  410204:	mov	x0, x10
  410208:	bl	402840 <free@plt>
  41020c:	mov	x0, x20
  410210:	bl	402840 <free@plt>
  410214:	mov	x0, x19
  410218:	ldp	x20, x19, [sp, #96]
  41021c:	ldp	x22, x21, [sp, #80]
  410220:	ldp	x24, x23, [sp, #64]
  410224:	ldp	x26, x25, [sp, #48]
  410228:	ldp	x28, x27, [sp, #32]
  41022c:	ldp	x29, x30, [sp, #16]
  410230:	add	sp, sp, #0x70
  410234:	ret
  410238:	mov	x20, xzr
  41023c:	tbz	w22, #0, 410258 <__fxstatat@plt+0xd808>
  410240:	mov	x10, x20
  410244:	mov	x27, x21
  410248:	b	410378 <__fxstatat@plt+0xd928>
  41024c:	ldr	x28, [sp, #8]
  410250:	mov	x20, xzr
  410254:	tbnz	w22, #0, 4102a4 <__fxstatat@plt+0xd854>
  410258:	mov	x19, #0xffffffffffffffff    	// #-1
  41025c:	mov	x10, x20
  410260:	b	410204 <__fxstatat@plt+0xd7b4>
  410264:	ldr	x20, [sp]
  410268:	mov	x1, x26
  41026c:	mov	x0, x20
  410270:	bl	402620 <wcswidth@plt>
  410274:	sxtw	x27, w0
  410278:	tbz	w28, #0, 4102bc <__fxstatat@plt+0xd86c>
  41027c:	mov	x0, xzr
  410280:	mov	x1, x20
  410284:	mov	x2, xzr
  410288:	bl	402920 <wcstombs@plt>
  41028c:	b	4102d0 <__fxstatat@plt+0xd880>
  410290:	mov	x8, xzr
  410294:	mov	x27, x21
  410298:	mov	x10, x20
  41029c:	mov	x20, xzr
  4102a0:	b	410378 <__fxstatat@plt+0xd928>
  4102a4:	mov	x10, x20
  4102a8:	b	4100b4 <__fxstatat@plt+0xd664>
  4102ac:	mov	x0, x8
  4102b0:	mov	x1, x26
  4102b4:	bl	402620 <wcswidth@plt>
  4102b8:	sxtw	x27, w0
  4102bc:	ldr	x8, [x25]
  4102c0:	ldr	x28, [sp, #8]
  4102c4:	cmp	x27, x8
  4102c8:	b.ls	41032c <__fxstatat@plt+0xd8dc>  // b.plast
  4102cc:	mov	x0, x21
  4102d0:	add	x28, x0, #0x1
  4102d4:	mov	x0, x28
  4102d8:	bl	4025f0 <malloc@plt>
  4102dc:	mov	x20, x0
  4102e0:	cbz	x0, 410338 <__fxstatat@plt+0xd8e8>
  4102e4:	ldr	x21, [sp]
  4102e8:	ldr	w0, [x21]
  4102ec:	cbz	w0, 410348 <__fxstatat@plt+0xd8f8>
  4102f0:	ldr	x24, [x25]
  4102f4:	mov	x26, xzr
  4102f8:	bl	402600 <wcwidth@plt>
  4102fc:	cmn	w0, #0x1
  410300:	b.ne	410310 <__fxstatat@plt+0xd8c0>  // b.any
  410304:	mov	w8, #0xfffd                	// #65533
  410308:	mov	w0, #0x1                   	// #1
  41030c:	str	w8, [x21]
  410310:	add	x27, x26, w0, sxtw
  410314:	cmp	x27, x24
  410318:	b.hi	410350 <__fxstatat@plt+0xd900>  // b.pmore
  41031c:	ldr	w0, [x21, #4]!
  410320:	mov	x26, x27
  410324:	cbnz	w0, 4102f8 <__fxstatat@plt+0xd8a8>
  410328:	b	410354 <__fxstatat@plt+0xd904>
  41032c:	ldr	x10, [sp]
  410330:	mov	x20, xzr
  410334:	b	4100b8 <__fxstatat@plt+0xd668>
  410338:	ldr	x10, [sp]
  41033c:	tbnz	w22, #0, 410378 <__fxstatat@plt+0xd928>
  410340:	mov	x19, #0xffffffffffffffff    	// #-1
  410344:	b	410204 <__fxstatat@plt+0xd7b4>
  410348:	mov	x27, xzr
  41034c:	b	410354 <__fxstatat@plt+0xd904>
  410350:	mov	x27, x26
  410354:	str	wzr, [x21]
  410358:	ldr	x21, [sp]
  41035c:	mov	x0, x20
  410360:	mov	x2, x28
  410364:	mov	x1, x21
  410368:	bl	402920 <wcstombs@plt>
  41036c:	mov	x10, x21
  410370:	mov	x21, x0
  410374:	mov	x24, x20
  410378:	ldr	x28, [sp, #8]
  41037c:	b	4100b8 <__fxstatat@plt+0xd668>
  410380:	stp	x29, x30, [sp, #-80]!
  410384:	stp	x26, x25, [sp, #16]
  410388:	stp	x24, x23, [sp, #32]
  41038c:	stp	x22, x21, [sp, #48]
  410390:	stp	x20, x19, [sp, #64]
  410394:	ldr	x26, [x1]
  410398:	mov	w19, w3
  41039c:	mov	w20, w2
  4103a0:	mov	x21, x1
  4103a4:	mov	x22, x0
  4103a8:	mov	x23, xzr
  4103ac:	mov	x0, x26
  4103b0:	mov	x24, x26
  4103b4:	mov	x29, sp
  4103b8:	cmp	x0, x24
  4103bc:	b.cc	410418 <__fxstatat@plt+0xd9c8>  // b.lo, b.ul, b.last
  4103c0:	add	x24, x0, #0x1
  4103c4:	mov	x0, x23
  4103c8:	mov	x1, x24
  4103cc:	bl	4026f0 <realloc@plt>
  4103d0:	cbz	x0, 41040c <__fxstatat@plt+0xd9bc>
  4103d4:	mov	x25, x0
  4103d8:	mov	x0, x22
  4103dc:	mov	x1, x25
  4103e0:	mov	x2, x24
  4103e4:	mov	x3, x21
  4103e8:	mov	w4, w20
  4103ec:	mov	w5, w19
  4103f0:	str	x26, [x21]
  4103f4:	bl	40ffd8 <__fxstatat@plt+0xd588>
  4103f8:	cmn	x0, #0x1
  4103fc:	mov	x23, x25
  410400:	b.ne	4103b8 <__fxstatat@plt+0xd968>  // b.any
  410404:	mov	x0, x25
  410408:	b	410410 <__fxstatat@plt+0xd9c0>
  41040c:	mov	x0, x23
  410410:	bl	402840 <free@plt>
  410414:	mov	x23, xzr
  410418:	mov	x0, x23
  41041c:	ldp	x20, x19, [sp, #64]
  410420:	ldp	x22, x21, [sp, #48]
  410424:	ldp	x24, x23, [sp, #32]
  410428:	ldp	x26, x25, [sp, #16]
  41042c:	ldp	x29, x30, [sp], #80
  410430:	ret
  410434:	stp	x29, x30, [sp, #-32]!
  410438:	stp	x20, x19, [sp, #16]
  41043c:	mov	x29, sp
  410440:	mov	w19, w1
  410444:	mov	x20, x0
  410448:	bl	402430 <strlen@plt>
  41044c:	mov	x1, x0
  410450:	mov	x0, x20
  410454:	mov	w2, w19
  410458:	ldp	x20, x19, [sp, #16]
  41045c:	ldp	x29, x30, [sp], #32
  410460:	b	410464 <__fxstatat@plt+0xda14>
  410464:	sub	sp, sp, #0x60
  410468:	stp	x29, x30, [sp, #16]
  41046c:	str	x25, [sp, #32]
  410470:	stp	x24, x23, [sp, #48]
  410474:	stp	x22, x21, [sp, #64]
  410478:	stp	x20, x19, [sp, #80]
  41047c:	add	x29, sp, #0x10
  410480:	mov	w21, w2
  410484:	mov	x20, x1
  410488:	mov	x19, x0
  41048c:	add	x23, x0, x1
  410490:	bl	402850 <__ctype_get_mb_cur_max@plt>
  410494:	cmp	x0, #0x1
  410498:	b.ls	410594 <__fxstatat@plt+0xdb44>  // b.plast
  41049c:	cmp	x20, #0x1
  4104a0:	b.lt	4105dc <__fxstatat@plt+0xdb8c>  // b.tstop
  4104a4:	mov	w20, wzr
  4104a8:	mov	w24, #0x7fffffff            	// #2147483647
  4104ac:	tbnz	w21, #1, 410600 <__fxstatat@plt+0xdbb0>
  4104b0:	adrp	x25, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4104b4:	add	x25, x25, #0xe47
  4104b8:	ldrb	w8, [x19]
  4104bc:	sub	w8, w8, #0x20
  4104c0:	cmp	w8, #0x5e
  4104c4:	b.hi	4104ec <__fxstatat@plt+0xda9c>  // b.pmore
  4104c8:	adr	x9, 4104d8 <__fxstatat@plt+0xda88>
  4104cc:	ldrb	w10, [x25, x8]
  4104d0:	add	x9, x9, x10, lsl #2
  4104d4:	br	x9
  4104d8:	add	x19, x19, #0x1
  4104dc:	add	w20, w20, #0x1
  4104e0:	cmp	x19, x23
  4104e4:	b.cc	4104b8 <__fxstatat@plt+0xda68>  // b.lo, b.ul, b.last
  4104e8:	b	4105e0 <__fxstatat@plt+0xdb90>
  4104ec:	str	xzr, [x29, #24]
  4104f0:	b	410510 <__fxstatat@plt+0xdac0>
  4104f4:	ldur	w0, [x29, #-4]
  4104f8:	bl	402520 <iswcntrl@plt>
  4104fc:	cbz	w0, 410570 <__fxstatat@plt+0xdb20>
  410500:	add	x0, x29, #0x18
  410504:	add	x19, x19, x22
  410508:	bl	402780 <mbsinit@plt>
  41050c:	cbnz	w0, 4104e0 <__fxstatat@plt+0xda90>
  410510:	sub	x2, x23, x19
  410514:	sub	x0, x29, #0x4
  410518:	add	x3, x29, #0x18
  41051c:	mov	x1, x19
  410520:	bl	415148 <__fxstatat@plt+0x126f8>
  410524:	cbz	x0, 41054c <__fxstatat@plt+0xdafc>
  410528:	mov	x22, x0
  41052c:	cmn	x0, #0x2
  410530:	b.eq	410580 <__fxstatat@plt+0xdb30>  // b.none
  410534:	cmn	x22, #0x1
  410538:	b.eq	41058c <__fxstatat@plt+0xdb3c>  // b.none
  41053c:	ldur	w0, [x29, #-4]
  410540:	bl	402600 <wcwidth@plt>
  410544:	tbz	w0, #31, 41055c <__fxstatat@plt+0xdb0c>
  410548:	b	4104f4 <__fxstatat@plt+0xdaa4>
  41054c:	mov	w22, #0x1                   	// #1
  410550:	ldur	w0, [x29, #-4]
  410554:	bl	402600 <wcwidth@plt>
  410558:	tbnz	w0, #31, 4104f4 <__fxstatat@plt+0xdaa4>
  41055c:	sub	w8, w24, w20
  410560:	cmp	w0, w8
  410564:	b.gt	4106f0 <__fxstatat@plt+0xdca0>
  410568:	add	w20, w0, w20
  41056c:	b	410500 <__fxstatat@plt+0xdab0>
  410570:	cmp	w20, w24
  410574:	b.eq	4106f0 <__fxstatat@plt+0xdca0>  // b.none
  410578:	add	w20, w20, #0x1
  41057c:	b	410500 <__fxstatat@plt+0xdab0>
  410580:	mov	x19, x23
  410584:	tbz	w21, #0, 4104dc <__fxstatat@plt+0xda8c>
  410588:	b	4106b4 <__fxstatat@plt+0xdc64>
  41058c:	tbz	w21, #0, 4104d8 <__fxstatat@plt+0xda88>
  410590:	b	4106b4 <__fxstatat@plt+0xdc64>
  410594:	cmp	x20, #0x1
  410598:	b.lt	4105dc <__fxstatat@plt+0xdb8c>  // b.tstop
  41059c:	bl	402820 <__ctype_b_loc@plt>
  4105a0:	ldr	x8, [x0]
  4105a4:	tbnz	w21, #1, 4106bc <__fxstatat@plt+0xdc6c>
  4105a8:	mov	w20, wzr
  4105ac:	b	4105c8 <__fxstatat@plt+0xdb78>
  4105b0:	mov	w9, #0x7fffffff            	// #2147483647
  4105b4:	cmp	w20, w9
  4105b8:	b.eq	4106f0 <__fxstatat@plt+0xdca0>  // b.none
  4105bc:	add	w20, w20, #0x1
  4105c0:	cmp	x19, x23
  4105c4:	b.cs	4105e0 <__fxstatat@plt+0xdb90>  // b.hs, b.nlast
  4105c8:	ldrb	w9, [x19], #1
  4105cc:	ldrh	w9, [x8, x9, lsl #1]
  4105d0:	tbnz	w9, #14, 4105b0 <__fxstatat@plt+0xdb60>
  4105d4:	tbz	w9, #1, 4105b0 <__fxstatat@plt+0xdb60>
  4105d8:	b	4105c0 <__fxstatat@plt+0xdb70>
  4105dc:	mov	w20, wzr
  4105e0:	mov	w0, w20
  4105e4:	ldp	x20, x19, [sp, #80]
  4105e8:	ldp	x22, x21, [sp, #64]
  4105ec:	ldp	x24, x23, [sp, #48]
  4105f0:	ldr	x25, [sp, #32]
  4105f4:	ldp	x29, x30, [sp, #16]
  4105f8:	add	sp, sp, #0x60
  4105fc:	ret
  410600:	adrp	x25, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  410604:	add	x25, x25, #0xde8
  410608:	ldrb	w8, [x19]
  41060c:	sub	w8, w8, #0x20
  410610:	cmp	w8, #0x5e
  410614:	b.hi	41063c <__fxstatat@plt+0xdbec>  // b.pmore
  410618:	adr	x9, 410628 <__fxstatat@plt+0xdbd8>
  41061c:	ldrb	w10, [x25, x8]
  410620:	add	x9, x9, x10, lsl #2
  410624:	br	x9
  410628:	add	x19, x19, #0x1
  41062c:	add	w20, w20, #0x1
  410630:	cmp	x19, x23
  410634:	b.cc	410608 <__fxstatat@plt+0xdbb8>  // b.lo, b.ul, b.last
  410638:	b	4105e0 <__fxstatat@plt+0xdb90>
  41063c:	str	xzr, [x29, #24]
  410640:	sub	x2, x23, x19
  410644:	sub	x0, x29, #0x4
  410648:	add	x3, x29, #0x18
  41064c:	mov	x1, x19
  410650:	bl	415148 <__fxstatat@plt+0x126f8>
  410654:	cbz	x0, 410670 <__fxstatat@plt+0xdc20>
  410658:	mov	x22, x0
  41065c:	cmn	x0, #0x2
  410660:	b.eq	4106a4 <__fxstatat@plt+0xdc54>  // b.none
  410664:	cmn	x22, #0x1
  410668:	b.ne	410674 <__fxstatat@plt+0xdc24>  // b.any
  41066c:	b	4106b0 <__fxstatat@plt+0xdc60>
  410670:	mov	w22, #0x1                   	// #1
  410674:	ldur	w0, [x29, #-4]
  410678:	bl	402600 <wcwidth@plt>
  41067c:	tbnz	w0, #31, 4106b4 <__fxstatat@plt+0xdc64>
  410680:	sub	w8, w24, w20
  410684:	cmp	w0, w8
  410688:	b.gt	4106f0 <__fxstatat@plt+0xdca0>
  41068c:	add	w20, w0, w20
  410690:	add	x0, x29, #0x18
  410694:	add	x19, x19, x22
  410698:	bl	402780 <mbsinit@plt>
  41069c:	cbz	w0, 410640 <__fxstatat@plt+0xdbf0>
  4106a0:	b	410630 <__fxstatat@plt+0xdbe0>
  4106a4:	mov	x19, x23
  4106a8:	tbz	w21, #0, 41062c <__fxstatat@plt+0xdbdc>
  4106ac:	b	4106b4 <__fxstatat@plt+0xdc64>
  4106b0:	tbz	w21, #0, 410628 <__fxstatat@plt+0xdbd8>
  4106b4:	mov	w20, #0xffffffff            	// #-1
  4106b8:	b	4105e0 <__fxstatat@plt+0xdb90>
  4106bc:	mov	x9, xzr
  4106c0:	mov	w20, #0x7fffffff            	// #2147483647
  4106c4:	ldrb	w10, [x19, x9]
  4106c8:	ldrh	w10, [x8, x10, lsl #1]
  4106cc:	tbz	w10, #14, 4106b4 <__fxstatat@plt+0xdc64>
  4106d0:	cmp	w9, w20
  4106d4:	b.eq	4105e0 <__fxstatat@plt+0xdb90>  // b.none
  4106d8:	add	x9, x9, #0x1
  4106dc:	add	x10, x19, x9
  4106e0:	cmp	x10, x23
  4106e4:	b.cc	4106c4 <__fxstatat@plt+0xdc74>  // b.lo, b.ul, b.last
  4106e8:	mov	w20, w9
  4106ec:	b	4105e0 <__fxstatat@plt+0xdb90>
  4106f0:	mov	w20, #0x7fffffff            	// #2147483647
  4106f4:	b	4105e0 <__fxstatat@plt+0xdb90>
  4106f8:	add	x8, x0, x1, lsl #3
  4106fc:	mov	x3, x2
  410700:	mov	x2, x8
  410704:	b	410708 <__fxstatat@plt+0xdcb8>
  410708:	sub	sp, sp, #0x90
  41070c:	stp	x20, x19, [sp, #128]
  410710:	mov	x20, x3
  410714:	cmp	x1, #0x2
  410718:	mov	x19, x0
  41071c:	stp	x29, x30, [sp, #48]
  410720:	stp	x28, x27, [sp, #64]
  410724:	stp	x26, x25, [sp, #80]
  410728:	stp	x24, x23, [sp, #96]
  41072c:	stp	x22, x21, [sp, #112]
  410730:	add	x29, sp, #0x30
  410734:	b.hi	41075c <__fxstatat@plt+0xdd0c>  // b.pmore
  410738:	b.ne	410924 <__fxstatat@plt+0xded4>  // b.any
  41073c:	ldp	x21, x22, [x19]
  410740:	mov	x0, x21
  410744:	mov	x1, x22
  410748:	blr	x20
  41074c:	cmp	w0, #0x1
  410750:	b.lt	410924 <__fxstatat@plt+0xded4>  // b.tstop
  410754:	stp	x22, x21, [x19]
  410758:	b	410924 <__fxstatat@plt+0xded4>
  41075c:	lsr	x28, x1, #1
  410760:	add	x21, x19, x28, lsl #3
  410764:	mov	x22, x1
  410768:	sub	x1, x1, x28
  41076c:	mov	x0, x21
  410770:	mov	x3, x20
  410774:	mov	x27, x2
  410778:	bl	410708 <__fxstatat@plt+0xdcb8>
  41077c:	cmp	x22, #0x3
  410780:	stp	x27, x28, [x29, #-16]
  410784:	b.ne	410794 <__fxstatat@plt+0xdd44>  // b.any
  410788:	ldr	x24, [x19]
  41078c:	str	x24, [x27]
  410790:	b	410864 <__fxstatat@plt+0xde14>
  410794:	lsr	x23, x22, #2
  410798:	add	x25, x19, x23, lsl #3
  41079c:	sub	x1, x28, x23
  4107a0:	mov	x0, x25
  4107a4:	mov	x2, x27
  4107a8:	mov	x3, x20
  4107ac:	str	x21, [sp, #8]
  4107b0:	bl	410708 <__fxstatat@plt+0xdcb8>
  4107b4:	mov	x0, x19
  4107b8:	mov	x1, x23
  4107bc:	mov	x2, x27
  4107c0:	mov	x3, x20
  4107c4:	bl	410708 <__fxstatat@plt+0xdcb8>
  4107c8:	ldr	x26, [x25]
  4107cc:	mov	x8, x28
  4107d0:	mov	x21, xzr
  4107d4:	add	x28, x19, #0x8
  4107d8:	sub	x24, x8, #0x1
  4107dc:	mov	x25, x27
  4107e0:	str	x23, [sp, #16]
  4107e4:	ldr	x27, [x19, x21, lsl #3]
  4107e8:	mov	x0, x27
  4107ec:	mov	x1, x26
  4107f0:	add	x25, x25, #0x8
  4107f4:	blr	x20
  4107f8:	cmp	w0, #0x0
  4107fc:	b.le	410818 <__fxstatat@plt+0xddc8>
  410800:	cmp	x24, x23
  410804:	stur	x26, [x25, #-8]
  410808:	b.eq	41083c <__fxstatat@plt+0xddec>  // b.none
  41080c:	ldr	x26, [x28, x23, lsl #3]
  410810:	add	x23, x23, #0x1
  410814:	b	4107e8 <__fxstatat@plt+0xdd98>
  410818:	ldr	x8, [sp, #16]
  41081c:	add	x21, x21, #0x1
  410820:	stur	x27, [x25, #-8]
  410824:	cmp	x21, x8
  410828:	b.ne	4107e4 <__fxstatat@plt+0xdd94>  // b.any
  41082c:	ldur	x28, [x29, #-8]
  410830:	mov	x21, x23
  410834:	str	x28, [sp, #16]
  410838:	b	410840 <__fxstatat@plt+0xddf0>
  41083c:	ldur	x28, [x29, #-8]
  410840:	ldr	x8, [sp, #16]
  410844:	add	x1, x19, x21, lsl #3
  410848:	mov	x0, x25
  41084c:	sub	x8, x8, x21
  410850:	lsl	x2, x8, #3
  410854:	bl	4023c0 <memcpy@plt>
  410858:	ldur	x8, [x29, #-16]
  41085c:	ldr	x21, [sp, #8]
  410860:	ldr	x24, [x8]
  410864:	ldr	x23, [x21]
  410868:	mov	w8, #0x1                   	// #1
  41086c:	mov	x25, xzr
  410870:	mov	x9, xzr
  410874:	add	x10, x19, #0x8
  410878:	sub	x8, x8, x22
  41087c:	stp	x10, x19, [sp, #16]
  410880:	str	x8, [sp, #8]
  410884:	mov	x27, xzr
  410888:	add	x21, x10, x28, lsl #3
  41088c:	add	x22, x8, x28
  410890:	mov	x26, x9
  410894:	add	x19, x19, x9, lsl #3
  410898:	mov	x0, x24
  41089c:	mov	x1, x23
  4108a0:	blr	x20
  4108a4:	cmp	w0, #0x0
  4108a8:	b.le	4108c4 <__fxstatat@plt+0xde74>
  4108ac:	cmn	x22, x27
  4108b0:	str	x23, [x19, x27, lsl #3]
  4108b4:	b.eq	4108fc <__fxstatat@plt+0xdeac>  // b.none
  4108b8:	ldr	x23, [x21, x27, lsl #3]
  4108bc:	add	x27, x27, #0x1
  4108c0:	b	410898 <__fxstatat@plt+0xde48>
  4108c4:	ldr	x19, [sp, #24]
  4108c8:	ldur	x9, [x29, #-8]
  4108cc:	add	x25, x25, #0x1
  4108d0:	add	x8, x19, x26, lsl #3
  4108d4:	cmp	x25, x9
  4108d8:	str	x24, [x8, x27, lsl #3]
  4108dc:	b.eq	410924 <__fxstatat@plt+0xded4>  // b.none
  4108e0:	ldur	x8, [x29, #-16]
  4108e4:	add	x28, x28, x27
  4108e8:	ldr	x24, [x8, x25, lsl #3]
  4108ec:	add	x8, x26, x27
  4108f0:	add	x9, x8, #0x1
  4108f4:	ldp	x8, x10, [sp, #8]
  4108f8:	b	410884 <__fxstatat@plt+0xde34>
  4108fc:	ldur	x9, [x29, #-16]
  410900:	ldr	x8, [sp, #24]
  410904:	add	x1, x9, x25, lsl #3
  410908:	ldur	x9, [x29, #-8]
  41090c:	add	x8, x8, x26, lsl #3
  410910:	add	x8, x8, x27, lsl #3
  410914:	add	x0, x8, #0x8
  410918:	sub	x9, x9, x25
  41091c:	lsl	x2, x9, #3
  410920:	bl	4023c0 <memcpy@plt>
  410924:	ldp	x20, x19, [sp, #128]
  410928:	ldp	x22, x21, [sp, #112]
  41092c:	ldp	x24, x23, [sp, #96]
  410930:	ldp	x26, x25, [sp, #80]
  410934:	ldp	x28, x27, [sp, #64]
  410938:	ldp	x29, x30, [sp, #48]
  41093c:	add	sp, sp, #0x90
  410940:	ret
  410944:	mov	x7, x4
  410948:	mov	w6, #0xffffffff            	// #-1
  41094c:	str	w5, [sp, #-32]!
  410950:	mov	w4, wzr
  410954:	mov	w5, wzr
  410958:	stp	x29, x30, [sp, #16]
  41095c:	add	x29, sp, #0x10
  410960:	bl	410970 <__fxstatat@plt+0xdf20>
  410964:	ldp	x29, x30, [sp, #16]
  410968:	add	sp, sp, #0x20
  41096c:	ret
  410970:	stp	x29, x30, [sp, #-96]!
  410974:	stp	x28, x27, [sp, #16]
  410978:	stp	x26, x25, [sp, #32]
  41097c:	stp	x24, x23, [sp, #48]
  410980:	stp	x22, x21, [sp, #64]
  410984:	stp	x20, x19, [sp, #80]
  410988:	mov	x29, sp
  41098c:	sub	sp, sp, #0x4b0
  410990:	ldr	x8, [x3, #48]
  410994:	ldr	w9, [x3, #8]
  410998:	adrp	x10, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  41099c:	mov	x25, x2
  4109a0:	add	x10, x10, #0x8d1
  4109a4:	cmp	x8, #0x0
  4109a8:	csel	x12, x10, x8, eq  // eq = none
  4109ac:	ldrb	w8, [x25]
  4109b0:	mov	w11, #0xc                   	// #12
  4109b4:	cmp	w9, #0x0
  4109b8:	csel	w10, w11, w9, eq  // eq = none
  4109bc:	subs	w9, w9, #0xc
  4109c0:	mov	x2, x0
  4109c4:	csel	w9, w9, w10, gt
  4109c8:	str	x7, [sp, #56]
  4109cc:	str	w4, [sp, #116]
  4109d0:	str	x1, [sp, #120]
  4109d4:	cbz	w8, 410a3c <__fxstatat@plt+0xdfec>
  4109d8:	stp	w9, w5, [sp, #32]
  4109dc:	ldr	w9, [x29, #96]
  4109e0:	sub	x10, x29, #0x28
  4109e4:	add	x11, sp, #0x80
  4109e8:	str	x12, [sp, #24]
  4109ec:	str	w9, [sp, #52]
  4109f0:	sub	x9, x29, #0x20
  4109f4:	add	x9, x9, #0x17
  4109f8:	str	x9, [sp, #80]
  4109fc:	orr	x9, x10, #0x2
  410a00:	str	x9, [sp, #72]
  410a04:	orr	x9, x10, #0x3
  410a08:	sub	x12, x12, #0x1
  410a0c:	str	x9, [sp, #64]
  410a10:	orr	x9, x11, #0x1
  410a14:	adrp	x20, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  410a18:	mov	w22, w6
  410a1c:	mov	x0, xzr
  410a20:	mov	w1, #0xa                   	// #10
  410a24:	stp	x12, x9, [sp, #8]
  410a28:	sub	x9, x11, #0x1
  410a2c:	add	x20, x20, #0xea6
  410a30:	str	x3, [sp, #96]
  410a34:	str	x9, [sp, #40]
  410a38:	b	410a8c <__fxstatat@plt+0xe03c>
  410a3c:	mov	x0, xzr
  410a40:	ldr	x8, [sp, #120]
  410a44:	cbz	x8, 411f58 <__fxstatat@plt+0xf508>
  410a48:	cbz	x2, 411f58 <__fxstatat@plt+0xf508>
  410a4c:	strb	wzr, [x2]
  410a50:	b	411f58 <__fxstatat@plt+0xf508>
  410a54:	mov	w1, #0x30                  	// #48
  410a58:	mov	x0, x2
  410a5c:	mov	x22, x2
  410a60:	mov	x2, x21
  410a64:	bl	402680 <memset@plt>
  410a68:	add	x2, x22, x21
  410a6c:	mov	x0, x19
  410a70:	mov	w1, #0xa                   	// #10
  410a74:	mov	w8, #0x9                   	// #9
  410a78:	strb	w8, [x2], #1
  410a7c:	add	x0, x0, x23
  410a80:	ldrb	w8, [x25, #1]!
  410a84:	mov	w22, #0xffffffff            	// #-1
  410a88:	cbz	w8, 410a40 <__fxstatat@plt+0xdff0>
  410a8c:	and	w9, w8, #0xff
  410a90:	cmp	w9, #0x25
  410a94:	b.ne	410afc <__fxstatat@plt+0xe0ac>  // b.any
  410a98:	ldr	w3, [sp, #116]
  410a9c:	mov	w24, wzr
  410aa0:	mov	w28, wzr
  410aa4:	add	x25, x25, #0x1
  410aa8:	b	410abc <__fxstatat@plt+0xe06c>
  410aac:	cmp	w8, #0x5f
  410ab0:	b.ne	410ae8 <__fxstatat@plt+0xe098>  // b.any
  410ab4:	add	x25, x25, #0x1
  410ab8:	mov	w28, w8
  410abc:	ldrb	w8, [x25]
  410ac0:	sub	w9, w8, #0x23
  410ac4:	cmp	w9, #0xd
  410ac8:	b.hi	410aac <__fxstatat@plt+0xe05c>  // b.pmore
  410acc:	adr	x10, 410ab4 <__fxstatat@plt+0xe064>
  410ad0:	ldrb	w11, [x20, x9]
  410ad4:	add	x10, x10, x11, lsl #2
  410ad8:	br	x10
  410adc:	mov	w24, #0x1                   	// #1
  410ae0:	add	x25, x25, #0x1
  410ae4:	b	410abc <__fxstatat@plt+0xe06c>
  410ae8:	cmp	w8, #0x5e
  410aec:	b.ne	410b5c <__fxstatat@plt+0xe10c>  // b.any
  410af0:	mov	w3, #0x1                   	// #1
  410af4:	add	x25, x25, #0x1
  410af8:	b	410abc <__fxstatat@plt+0xe06c>
  410afc:	ldr	x10, [sp, #120]
  410b00:	bic	w9, w22, w22, asr #31
  410b04:	cmp	w9, #0x1
  410b08:	csinc	w23, w9, wzr, hi  // hi = pmore
  410b0c:	sub	x10, x10, x0
  410b10:	cmp	x10, x23
  410b14:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  410b18:	cbz	x2, 410a7c <__fxstatat@plt+0xe02c>
  410b1c:	cmp	w9, #0x2
  410b20:	b.cc	410a78 <__fxstatat@plt+0xe028>  // b.lo, b.ul, b.last
  410b24:	sxtw	x8, w22
  410b28:	sub	x21, x8, #0x1
  410b2c:	mov	w1, #0x20                  	// #32
  410b30:	mov	x19, x0
  410b34:	mov	x0, x2
  410b38:	mov	x22, x2
  410b3c:	mov	x2, x21
  410b40:	bl	402680 <memset@plt>
  410b44:	ldrb	w8, [x25]
  410b48:	mov	x2, x22
  410b4c:	mov	w1, #0xa                   	// #10
  410b50:	mov	x0, x19
  410b54:	add	x2, x22, x21
  410b58:	b	410a78 <__fxstatat@plt+0xe028>
  410b5c:	sub	w9, w8, #0x30
  410b60:	cmp	w9, #0x9
  410b64:	b.hi	410bc0 <__fxstatat@plt+0xe170>  // b.pmore
  410b68:	mov	w10, #0xcccc                	// #52428
  410b6c:	mov	w22, wzr
  410b70:	movk	w10, #0xccc, lsl #16
  410b74:	b	410b8c <__fxstatat@plt+0xe13c>
  410b78:	mov	w22, #0x7fffffff            	// #2147483647
  410b7c:	ldrb	w8, [x25, #1]!
  410b80:	sub	w9, w8, #0x30
  410b84:	cmp	w9, #0xa
  410b88:	b.cs	410bc0 <__fxstatat@plt+0xe170>  // b.hs, b.nlast
  410b8c:	cmp	w22, w10
  410b90:	b.gt	410b78 <__fxstatat@plt+0xe128>
  410b94:	b.ne	410ba4 <__fxstatat@plt+0xe154>  // b.any
  410b98:	and	w9, w8, #0xff
  410b9c:	cmp	w9, #0x37
  410ba0:	b.hi	410b78 <__fxstatat@plt+0xe128>  // b.pmore
  410ba4:	mul	w9, w22, w1
  410ba8:	add	w8, w9, w8, uxtb
  410bac:	sub	w22, w8, #0x30
  410bb0:	ldrb	w8, [x25, #1]!
  410bb4:	sub	w9, w8, #0x30
  410bb8:	cmp	w9, #0xa
  410bbc:	b.cc	410b8c <__fxstatat@plt+0xe13c>  // b.lo, b.ul, b.last
  410bc0:	cmp	w8, #0x4f
  410bc4:	b.eq	410bd0 <__fxstatat@plt+0xe180>  // b.none
  410bc8:	cmp	w8, #0x45
  410bcc:	b.ne	410be8 <__fxstatat@plt+0xe198>  // b.any
  410bd0:	ldrb	w10, [x25, #1]!
  410bd4:	mov	w9, w8
  410bd8:	mov	w8, w10
  410bdc:	cmp	w8, #0x7a
  410be0:	b.ls	410bf4 <__fxstatat@plt+0xe1a4>  // b.plast
  410be4:	b	4113b8 <__fxstatat@plt+0xe968>
  410be8:	mov	w9, wzr
  410bec:	cmp	w8, #0x7a
  410bf0:	b.hi	4113b8 <__fxstatat@plt+0xe968>  // b.pmore
  410bf4:	adrp	x14, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  410bf8:	add	x14, x14, #0xeb4
  410bfc:	adr	x12, 410c28 <__fxstatat@plt+0xe1d8>
  410c00:	ldrh	w13, [x14, x8, lsl #1]
  410c04:	add	x12, x12, x13, lsl #2
  410c08:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  410c0c:	mov	w27, wzr
  410c10:	mov	w19, wzr
  410c14:	mov	w10, wzr
  410c18:	mov	x11, xzr
  410c1c:	mov	w21, #0xffffffff            	// #-1
  410c20:	add	x26, x26, #0x4e4
  410c24:	br	x12
  410c28:	cmp	w9, #0x45
  410c2c:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410c30:	ldr	x10, [sp, #96]
  410c34:	mov	w13, #0xffffff9c            	// #-100
  410c38:	mov	w14, #0x12c                 	// #300
  410c3c:	ldr	w12, [x10, #20]
  410c40:	ldp	w10, w11, [x10, #24]
  410c44:	cmp	w12, #0x0
  410c48:	sub	w15, w11, w10
  410c4c:	csel	w13, w14, w13, lt  // lt = tstop
  410c50:	add	w14, w15, #0x17e
  410c54:	mov	w15, #0x2493                	// #9363
  410c58:	movk	w15, #0x9249, lsl #16
  410c5c:	smull	x15, w14, w15
  410c60:	lsr	x15, x15, #32
  410c64:	add	w15, w15, w14
  410c68:	asr	w16, w15, #2
  410c6c:	add	w15, w16, w15, lsr #31
  410c70:	lsl	w16, w15, #3
  410c74:	sub	w15, w16, w15
  410c78:	sub	w14, w15, w14
  410c7c:	add	w14, w11, w14
  410c80:	adds	w14, w14, #0x3
  410c84:	add	w15, w13, w12
  410c88:	b.mi	4114ec <__fxstatat@plt+0xea9c>  // b.first
  410c8c:	tst	w15, #0x3
  410c90:	mov	w13, #0x16d                 	// #365
  410c94:	b.ne	410cd0 <__fxstatat@plt+0xe280>  // b.any
  410c98:	mov	w16, #0x5c29                	// #23593
  410c9c:	mov	w17, #0xb850                	// #47184
  410ca0:	movk	w16, #0xc28f, lsl #16
  410ca4:	movk	w17, #0x51e, lsl #16
  410ca8:	mov	w18, #0xd70b                	// #55051
  410cac:	madd	w15, w15, w16, w17
  410cb0:	movk	w18, #0xa3, lsl #16
  410cb4:	ror	w16, w15, #2
  410cb8:	ror	w15, w15, #4
  410cbc:	cmp	w15, w18
  410cc0:	mov	w15, #0x5c28                	// #23592
  410cc4:	movk	w15, #0x28f, lsl #16
  410cc8:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  410ccc:	cinc	w13, w13, hi  // hi = pmore
  410cd0:	add	w13, w10, w13
  410cd4:	sub	w11, w11, w13
  410cd8:	mov	w13, #0x2493                	// #9363
  410cdc:	movk	w13, #0x9249, lsl #16
  410ce0:	add	w11, w11, #0x17e
  410ce4:	smull	x13, w11, w13
  410ce8:	lsr	x13, x13, #32
  410cec:	add	w11, w13, w11
  410cf0:	asr	w13, w11, #2
  410cf4:	add	w11, w13, w11, lsr #31
  410cf8:	lsl	w13, w11, #3
  410cfc:	sub	w11, w13, w11
  410d00:	add	w10, w10, w11
  410d04:	sub	w10, w10, #0x17b
  410d08:	mvn	w11, w10
  410d0c:	cmp	w10, #0x0
  410d10:	lsr	w13, w11, #31
  410d14:	csel	w10, w10, w14, ge  // ge = tcont
  410d18:	cmp	w8, #0x47
  410d1c:	b.eq	41157c <__fxstatat@plt+0xeb2c>  // b.none
  410d20:	cmp	w8, #0x67
  410d24:	b.ne	41159c <__fxstatat@plt+0xeb4c>  // b.any
  410d28:	mov	w10, #0x851f                	// #34079
  410d2c:	movk	w10, #0x51eb, lsl #16
  410d30:	smull	x14, w12, w10
  410d34:	lsr	x15, x14, #63
  410d38:	asr	x14, x14, #37
  410d3c:	mov	w11, #0x64                  	// #100
  410d40:	add	w14, w14, w15
  410d44:	msub	w14, w14, w11, w12
  410d48:	add	w14, w13, w14
  410d4c:	smull	x10, w14, w10
  410d50:	lsr	x15, x10, #63
  410d54:	asr	x10, x10, #37
  410d58:	add	w10, w10, w15
  410d5c:	msub	w11, w10, w11, w14
  410d60:	tbnz	w11, #31, 411c14 <__fxstatat@plt+0xf1c4>
  410d64:	mov	w10, wzr
  410d68:	b	411c2c <__fxstatat@plt+0xf1dc>
  410d6c:	cmp	w9, #0x45
  410d70:	orr	w3, w24, w3
  410d74:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410d78:	mov	w27, wzr
  410d7c:	mov	w19, wzr
  410d80:	b	4115e4 <__fxstatat@plt+0xeb94>
  410d84:	sub	x25, x25, #0x1
  410d88:	b	4113b8 <__fxstatat@plt+0xe968>
  410d8c:	cbnz	w9, 4113b8 <__fxstatat@plt+0xe968>
  410d90:	ldr	x9, [sp, #120]
  410d94:	bic	w8, w22, w22, asr #31
  410d98:	cmp	w8, #0x1
  410d9c:	csinc	w23, w8, wzr, hi  // hi = pmore
  410da0:	sub	x9, x9, x0
  410da4:	cmp	x9, x23
  410da8:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  410dac:	cbz	x2, 410a7c <__fxstatat@plt+0xe02c>
  410db0:	cmp	w8, #0x2
  410db4:	b.cc	411cdc <__fxstatat@plt+0xf28c>  // b.lo, b.ul, b.last
  410db8:	sxtw	x9, w22
  410dbc:	and	w8, w28, #0xff
  410dc0:	cmp	w8, #0x30
  410dc4:	sub	x21, x9, #0x1
  410dc8:	b.eq	410dd4 <__fxstatat@plt+0xe384>  // b.none
  410dcc:	cmp	w8, #0x2b
  410dd0:	b.ne	411f14 <__fxstatat@plt+0xf4c4>  // b.any
  410dd4:	mov	w1, #0x30                  	// #48
  410dd8:	b	411f18 <__fxstatat@plt+0xf4c8>
  410ddc:	mov	w11, #0x1                   	// #1
  410de0:	ldrb	w10, [x25, x11]
  410de4:	cmp	w10, #0x3a
  410de8:	b.ne	410dfc <__fxstatat@plt+0xe3ac>  // b.any
  410dec:	add	x11, x11, #0x1
  410df0:	ldrb	w10, [x25, x11]
  410df4:	cmp	w10, #0x3a
  410df8:	b.eq	410dec <__fxstatat@plt+0xe39c>  // b.none
  410dfc:	cmp	w10, #0x7a
  410e00:	b.ne	4113b8 <__fxstatat@plt+0xe968>  // b.any
  410e04:	add	x25, x25, x11
  410e08:	ldr	x12, [sp, #96]
  410e0c:	ldr	w10, [x12, #32]
  410e10:	tbnz	w10, #31, 410a80 <__fxstatat@plt+0xe030>
  410e14:	ldr	w12, [x12, #40]
  410e18:	tbnz	w12, #31, 411a9c <__fxstatat@plt+0xf04c>
  410e1c:	cbz	w12, 411b74 <__fxstatat@plt+0xf124>
  410e20:	mov	w10, wzr
  410e24:	cmp	x11, #0x3
  410e28:	b.ls	411b8c <__fxstatat@plt+0xf13c>  // b.plast
  410e2c:	b	4113b8 <__fxstatat@plt+0xe968>
  410e30:	cbnz	w9, 4113b8 <__fxstatat@plt+0xe968>
  410e34:	mov	w27, wzr
  410e38:	mov	w19, wzr
  410e3c:	orr	w3, w24, w3
  410e40:	mov	w8, #0x41                  	// #65
  410e44:	b	4115e4 <__fxstatat@plt+0xeb94>
  410e48:	cmp	w9, #0x45
  410e4c:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410e50:	mov	w27, wzr
  410e54:	mov	w19, wzr
  410e58:	orr	w3, w24, w3
  410e5c:	mov	w8, #0x42                  	// #66
  410e60:	b	4115e4 <__fxstatat@plt+0xeb94>
  410e64:	cmp	w9, #0x45
  410e68:	b.ne	4119a0 <__fxstatat@plt+0xef50>  // b.any
  410e6c:	mov	w27, wzr
  410e70:	mov	w19, wzr
  410e74:	mov	w8, #0x43                  	// #67
  410e78:	b	4115e4 <__fxstatat@plt+0xeb94>
  410e7c:	cbnz	w9, 4113b8 <__fxstatat@plt+0xe968>
  410e80:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  410e84:	add	x26, x26, #0xfae
  410e88:	b	410f8c <__fxstatat@plt+0xe53c>
  410e8c:	cbnz	w9, 4113b8 <__fxstatat@plt+0xe968>
  410e90:	cmp	w28, #0x0
  410e94:	cset	w11, eq  // eq = none
  410e98:	cmp	w22, #0x0
  410e9c:	mov	w8, #0x6                   	// #6
  410ea0:	cset	w12, lt  // lt = tstop
  410ea4:	cmp	w22, #0x6
  410ea8:	csel	w8, w22, w8, gt
  410eac:	mov	w9, #0x4                   	// #4
  410eb0:	mov	w10, #0x2b                  	// #43
  410eb4:	tst	w11, w12
  410eb8:	sub	w8, w8, #0x6
  410ebc:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  410ec0:	csel	w28, w10, w28, ne  // ne = any
  410ec4:	csel	w21, w9, w8, ne  // ne = any
  410ec8:	add	x26, x26, #0xfb7
  410ecc:	b	410f90 <__fxstatat@plt+0xe540>
  410ed0:	cmp	w9, #0x45
  410ed4:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410ed8:	ldr	x10, [sp, #96]
  410edc:	ldr	w11, [x10, #8]
  410ee0:	b	4115bc <__fxstatat@plt+0xeb6c>
  410ee4:	cmp	w9, #0x45
  410ee8:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410eec:	ldr	w11, [sp, #32]
  410ef0:	b	4115bc <__fxstatat@plt+0xeb6c>
  410ef4:	cmp	w9, #0x45
  410ef8:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410efc:	ldr	x10, [sp, #96]
  410f00:	ldr	w11, [x10, #4]
  410f04:	b	4115bc <__fxstatat@plt+0xeb6c>
  410f08:	cmp	w9, #0x45
  410f0c:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410f10:	cmn	w22, #0x1
  410f14:	b.eq	411c7c <__fxstatat@plt+0xf22c>  // b.none
  410f18:	cmp	w22, #0x8
  410f1c:	b.gt	411cb0 <__fxstatat@plt+0xf260>
  410f20:	ldr	w11, [sp, #52]
  410f24:	sub	w10, w22, #0x1
  410f28:	mov	w12, #0x6667                	// #26215
  410f2c:	movk	w12, #0x6666, lsl #16
  410f30:	smull	x11, w11, w12
  410f34:	add	w10, w10, #0x1
  410f38:	lsr	x12, x11, #63
  410f3c:	asr	x11, x11, #34
  410f40:	cmp	w10, #0x8
  410f44:	add	w11, w11, w12
  410f48:	b.lt	410f28 <__fxstatat@plt+0xe4d8>  // b.tstop
  410f4c:	mov	w19, w22
  410f50:	b	4115c0 <__fxstatat@plt+0xeb70>
  410f54:	mov	w10, #0x1                   	// #1
  410f58:	eor	w8, w24, #0x1
  410f5c:	mov	w19, wzr
  410f60:	orr	w27, w24, w10
  410f64:	and	w3, w3, w8
  410f68:	mov	w8, #0x70                  	// #112
  410f6c:	b	4115e4 <__fxstatat@plt+0xeb94>
  410f70:	cmp	w9, #0x45
  410f74:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  410f78:	ldr	x10, [sp, #96]
  410f7c:	ldr	w11, [x10]
  410f80:	b	4115bc <__fxstatat@plt+0xeb6c>
  410f84:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  410f88:	add	x26, x26, #0xfc0
  410f8c:	mov	w21, #0xffffffff            	// #-1
  410f90:	str	w3, [sp, #92]
  410f94:	and	w4, w3, #0x1
  410f98:	ldr	w8, [sp, #52]
  410f9c:	ldr	x3, [sp, #96]
  410fa0:	ldr	x7, [sp, #56]
  410fa4:	mov	x1, #0xffffffffffffffff    	// #-1
  410fa8:	mov	x19, x0
  410fac:	mov	x0, xzr
  410fb0:	mov	x23, x2
  410fb4:	mov	x2, x26
  410fb8:	mov	w5, w28
  410fbc:	mov	w6, w21
  410fc0:	str	w8, [sp]
  410fc4:	bl	410970 <__fxstatat@plt+0xdf20>
  410fc8:	ldr	x9, [sp, #120]
  410fcc:	mov	x10, x23
  410fd0:	mov	x23, x0
  410fd4:	bic	w8, w22, w22, asr #31
  410fd8:	mov	x0, x19
  410fdc:	cmp	x23, x8
  410fe0:	csel	x27, x8, x23, cc  // cc = lo, ul, last
  410fe4:	sub	x24, x9, x0
  410fe8:	mov	w1, #0xa                   	// #10
  410fec:	cmp	x27, x24
  410ff0:	b.cs	411f54 <__fxstatat@plt+0xf504>  // b.hs, b.nlast
  410ff4:	cbz	x10, 4114e0 <__fxstatat@plt+0xea90>
  410ff8:	cmp	x23, x8
  410ffc:	b.cs	411b28 <__fxstatat@plt+0xf0d8>  // b.hs, b.nlast
  411000:	sxtw	x8, w22
  411004:	cmp	w28, #0x30
  411008:	sub	x8, x8, x23
  41100c:	str	x8, [sp, #104]
  411010:	b.eq	41101c <__fxstatat@plt+0xe5cc>  // b.none
  411014:	cmp	w28, #0x2b
  411018:	b.ne	411b0c <__fxstatat@plt+0xf0bc>  // b.any
  41101c:	mov	w1, #0x30                  	// #48
  411020:	b	411b10 <__fxstatat@plt+0xf0c0>
  411024:	cmp	w9, #0x45
  411028:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  41102c:	ldr	x11, [sp, #96]
  411030:	mov	w12, #0x2493                	// #9363
  411034:	movk	w12, #0x9249, lsl #16
  411038:	ldp	w11, w10, [x11, #24]
  41103c:	sub	w10, w10, w11
  411040:	b	411084 <__fxstatat@plt+0xe634>
  411044:	cmp	w9, #0x45
  411048:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  41104c:	ldr	x11, [sp, #96]
  411050:	mov	w12, #0x2493                	// #9363
  411054:	movk	w12, #0x9249, lsl #16
  411058:	ldp	w10, w11, [x11, #24]
  41105c:	add	w10, w10, #0x6
  411060:	smull	x13, w10, w12
  411064:	lsr	x13, x13, #32
  411068:	add	w13, w13, w10
  41106c:	asr	w14, w13, #2
  411070:	add	w13, w14, w13, lsr #31
  411074:	lsl	w14, w13, #3
  411078:	sub	w13, w14, w13
  41107c:	sub	w10, w13, w10
  411080:	add	w10, w11, w10
  411084:	add	w10, w10, #0x7
  411088:	smull	x11, w10, w12
  41108c:	lsr	x11, x11, #32
  411090:	add	w10, w11, w10
  411094:	asr	w11, w10, #2
  411098:	add	w11, w11, w10, lsr #31
  41109c:	b	4115bc <__fxstatat@plt+0xeb6c>
  4110a0:	cmp	w9, #0x4f
  4110a4:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  4110a8:	mov	w27, wzr
  4110ac:	mov	w19, wzr
  4110b0:	mov	w8, #0x58                  	// #88
  4110b4:	b	4115e4 <__fxstatat@plt+0xeb94>
  4110b8:	cmp	w9, #0x45
  4110bc:	b.eq	411aac <__fxstatat@plt+0xf05c>  // b.none
  4110c0:	cmp	w9, #0x4f
  4110c4:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  4110c8:	ldr	x10, [sp, #96]
  4110cc:	ldr	w10, [x10, #20]
  4110d0:	cmn	w10, #0x76c
  4110d4:	add	w11, w10, #0x76c
  4110d8:	b	411590 <__fxstatat@plt+0xeb40>
  4110dc:	mov	x19, x0
  4110e0:	ldr	x0, [sp, #24]
  4110e4:	mov	w27, w3
  4110e8:	mov	x21, x2
  4110ec:	bl	402430 <strlen@plt>
  4110f0:	ldr	x9, [sp, #120]
  4110f4:	bic	w8, w22, w22, asr #31
  4110f8:	cmp	x0, x8
  4110fc:	csel	x23, x8, x0, cc  // cc = lo, ul, last
  411100:	sub	x9, x9, x19
  411104:	mov	w1, #0xa                   	// #10
  411108:	mov	x2, x21
  41110c:	mov	x21, x0
  411110:	cmp	x23, x9
  411114:	b.cs	411f54 <__fxstatat@plt+0xf504>  // b.hs, b.nlast
  411118:	cbz	x2, 411d44 <__fxstatat@plt+0xf2f4>
  41111c:	cmp	x21, x8
  411120:	b.cs	411abc <__fxstatat@plt+0xf06c>  // b.hs, b.nlast
  411124:	sxtw	x9, w22
  411128:	and	w8, w28, #0xff
  41112c:	cmp	w8, #0x30
  411130:	sub	x22, x9, x21
  411134:	b.eq	411140 <__fxstatat@plt+0xe6f0>  // b.none
  411138:	cmp	w8, #0x2b
  41113c:	b.ne	411ce4 <__fxstatat@plt+0xf294>  // b.any
  411140:	mov	w1, #0x30                  	// #48
  411144:	b	411ce8 <__fxstatat@plt+0xf298>
  411148:	cbnz	w9, 4113b8 <__fxstatat@plt+0xe968>
  41114c:	mov	w27, wzr
  411150:	mov	w19, wzr
  411154:	orr	w3, w24, w3
  411158:	mov	w8, #0x61                  	// #97
  41115c:	b	4115e4 <__fxstatat@plt+0xeb94>
  411160:	cmp	w9, #0x4f
  411164:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  411168:	mov	w27, wzr
  41116c:	mov	w19, wzr
  411170:	mov	w8, #0x63                  	// #99
  411174:	b	4115e4 <__fxstatat@plt+0xeb94>
  411178:	cmp	w9, #0x45
  41117c:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  411180:	ldr	x10, [sp, #96]
  411184:	ldr	w11, [x10, #12]
  411188:	b	4115bc <__fxstatat@plt+0xeb6c>
  41118c:	cmp	w9, #0x45
  411190:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  411194:	ldr	x10, [sp, #96]
  411198:	ldr	w11, [x10, #12]
  41119c:	b	4111e4 <__fxstatat@plt+0xe794>
  4111a0:	cmp	w9, #0x45
  4111a4:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  4111a8:	ldr	x10, [sp, #96]
  4111ac:	mov	w19, #0x3                   	// #3
  4111b0:	ldr	w10, [x10, #28]
  4111b4:	cmn	w10, #0x1
  4111b8:	add	w11, w10, #0x1
  4111bc:	cset	w10, lt  // lt = tstop
  4111c0:	b	4115c4 <__fxstatat@plt+0xeb74>
  4111c4:	cmp	w9, #0x45
  4111c8:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  4111cc:	ldr	x10, [sp, #96]
  4111d0:	ldr	w11, [x10, #8]
  4111d4:	b	4111e4 <__fxstatat@plt+0xe794>
  4111d8:	ldr	w11, [sp, #32]
  4111dc:	cmp	w9, #0x45
  4111e0:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  4111e4:	cmp	w28, #0x0
  4111e8:	mov	w10, #0x5f                  	// #95
  4111ec:	csel	w28, w10, w28, eq  // eq = none
  4111f0:	b	4115bc <__fxstatat@plt+0xeb6c>
  4111f4:	cmp	w9, #0x45
  4111f8:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  4111fc:	ldr	x10, [sp, #96]
  411200:	mov	w19, #0x2                   	// #2
  411204:	ldr	w10, [x10, #16]
  411208:	cmn	w10, #0x1
  41120c:	add	w11, w10, #0x1
  411210:	cset	w10, lt  // lt = tstop
  411214:	b	4115c4 <__fxstatat@plt+0xeb74>
  411218:	ldr	x9, [sp, #120]
  41121c:	bic	w8, w22, w22, asr #31
  411220:	cmp	w8, #0x1
  411224:	csinc	w23, w8, wzr, hi  // hi = pmore
  411228:	sub	x9, x9, x0
  41122c:	cmp	x9, x23
  411230:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  411234:	cbz	x2, 410a7c <__fxstatat@plt+0xe02c>
  411238:	cmp	w8, #0x2
  41123c:	b.cc	411d70 <__fxstatat@plt+0xf320>  // b.lo, b.ul, b.last
  411240:	sxtw	x9, w22
  411244:	and	w8, w28, #0xff
  411248:	mov	x19, x0
  41124c:	cmp	w8, #0x30
  411250:	sub	x21, x9, #0x1
  411254:	b.eq	411260 <__fxstatat@plt+0xe810>  // b.none
  411258:	cmp	w8, #0x2b
  41125c:	b.ne	411d50 <__fxstatat@plt+0xf300>  // b.any
  411260:	mov	w1, #0x30                  	// #48
  411264:	b	411d54 <__fxstatat@plt+0xf304>
  411268:	ldr	x11, [sp, #96]
  41126c:	mov	w12, #0xb                   	// #11
  411270:	mov	w10, wzr
  411274:	mov	w19, #0x1                   	// #1
  411278:	ldr	w11, [x11, #16]
  41127c:	mul	w11, w11, w12
  411280:	asr	w11, w11, #5
  411284:	add	w11, w11, #0x1
  411288:	b	4115c4 <__fxstatat@plt+0xeb74>
  41128c:	ldr	x9, [sp, #96]
  411290:	mov	x19, x0
  411294:	ldr	x0, [sp, #56]
  411298:	add	x1, sp, #0x80
  41129c:	ldr	x8, [x9, #48]
  4112a0:	ldp	q1, q0, [x9, #16]
  4112a4:	ldr	q2, [x9]
  4112a8:	mov	w24, w3
  4112ac:	mov	x23, x2
  4112b0:	str	x8, [sp, #176]
  4112b4:	stp	q1, q0, [sp, #144]
  4112b8:	str	q2, [sp, #128]
  4112bc:	bl	415a28 <_obstack_memory_used@@Base+0x4f8>
  4112c0:	lsr	x10, x0, #63
  4112c4:	tbnz	x0, #63, 411a40 <__fxstatat@plt+0xeff0>
  4112c8:	ldr	x21, [sp, #80]
  4112cc:	mov	x2, x23
  4112d0:	mov	w1, #0xa                   	// #10
  4112d4:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  4112d8:	movk	x8, #0x6667
  4112dc:	smulh	x8, x0, x8
  4112e0:	asr	x12, x8, #2
  4112e4:	mov	w9, #0xa                   	// #10
  4112e8:	add	x8, x12, x8, lsr #63
  4112ec:	msub	w9, w8, w9, w0
  4112f0:	add	x11, x0, #0x9
  4112f4:	add	w9, w9, #0x30
  4112f8:	cmp	x11, #0x12
  4112fc:	strb	w9, [x21, #-1]!
  411300:	mov	x0, x8
  411304:	b.hi	4112d4 <__fxstatat@plt+0xe884>  // b.pmore
  411308:	b	411a80 <__fxstatat@plt+0xf030>
  41130c:	ldr	x9, [sp, #120]
  411310:	bic	w8, w22, w22, asr #31
  411314:	cmp	w8, #0x1
  411318:	csinc	w23, w8, wzr, hi  // hi = pmore
  41131c:	sub	x9, x9, x0
  411320:	cmp	x9, x23
  411324:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  411328:	cbz	x2, 410a7c <__fxstatat@plt+0xe02c>
  41132c:	cmp	w8, #0x2
  411330:	b.cc	410a74 <__fxstatat@plt+0xe024>  // b.lo, b.ul, b.last
  411334:	sxtw	x9, w22
  411338:	and	w8, w28, #0xff
  41133c:	mov	x19, x0
  411340:	cmp	w8, #0x30
  411344:	sub	x21, x9, #0x1
  411348:	b.eq	410a54 <__fxstatat@plt+0xe004>  // b.none
  41134c:	cmp	w8, #0x2b
  411350:	b.eq	410a54 <__fxstatat@plt+0xe004>  // b.none
  411354:	mov	w1, #0x20                  	// #32
  411358:	b	410a58 <__fxstatat@plt+0xe008>
  41135c:	ldr	x10, [sp, #96]
  411360:	mov	w11, #0x2493                	// #9363
  411364:	movk	w11, #0x9249, lsl #16
  411368:	mov	w19, #0x1                   	// #1
  41136c:	ldr	w10, [x10, #24]
  411370:	add	w10, w10, #0x6
  411374:	smull	x11, w10, w11
  411378:	lsr	x11, x11, #32
  41137c:	add	w11, w11, w10
  411380:	asr	w12, w11, #2
  411384:	add	w11, w12, w11, lsr #31
  411388:	sub	w11, w11, w11, lsl #3
  41138c:	add	w10, w10, w11
  411390:	add	w11, w10, #0x1
  411394:	b	4115c0 <__fxstatat@plt+0xeb70>
  411398:	cmp	w9, #0x45
  41139c:	b.eq	4113b8 <__fxstatat@plt+0xe968>  // b.none
  4113a0:	ldr	x10, [sp, #96]
  4113a4:	mov	w19, #0x1                   	// #1
  4113a8:	ldr	w11, [x10, #24]
  4113ac:	b	4115c0 <__fxstatat@plt+0xeb70>
  4113b0:	cmp	w9, #0x4f
  4113b4:	b.ne	4119ec <__fxstatat@plt+0xef9c>  // b.any
  4113b8:	mov	w11, #0x1                   	// #1
  4113bc:	mov	w19, w3
  4113c0:	sub	x8, x25, #0x1
  4113c4:	mov	w9, #0x1                   	// #1
  4113c8:	sub	x27, x11, x9
  4113cc:	ldrb	w10, [x25, x27]
  4113d0:	mov	x24, x9
  4113d4:	mov	x26, x8
  4113d8:	add	x9, x9, #0x1
  4113dc:	cmp	w10, #0x25
  4113e0:	sub	x8, x8, #0x1
  4113e4:	b.ne	4113c8 <__fxstatat@plt+0xe978>  // b.any
  4113e8:	ldr	x9, [sp, #120]
  4113ec:	bic	w8, w22, w22, asr #31
  4113f0:	cmp	w8, w24
  4113f4:	csel	w23, w24, w8, cc  // cc = lo, ul, last
  4113f8:	sub	x9, x9, x0
  4113fc:	cmp	x9, x23
  411400:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  411404:	cbz	x2, 410a7c <__fxstatat@plt+0xe02c>
  411408:	cmp	w8, w24
  41140c:	and	x21, x24, #0xffffffff
  411410:	b.ls	411458 <__fxstatat@plt+0xea08>  // b.plast
  411414:	sxtw	x9, w22
  411418:	and	w8, w28, #0xff
  41141c:	cmp	w8, #0x30
  411420:	sub	x22, x9, x21
  411424:	str	x0, [sp, #104]
  411428:	b.eq	411434 <__fxstatat@plt+0xe9e4>  // b.none
  41142c:	cmp	w8, #0x2b
  411430:	b.ne	41143c <__fxstatat@plt+0xe9ec>  // b.any
  411434:	mov	w1, #0x30                  	// #48
  411438:	b	411440 <__fxstatat@plt+0xe9f0>
  41143c:	mov	w1, #0x20                  	// #32
  411440:	mov	x0, x2
  411444:	mov	x28, x2
  411448:	mov	x2, x22
  41144c:	bl	402680 <memset@plt>
  411450:	ldr	x0, [sp, #104]
  411454:	add	x2, x28, x22
  411458:	tbz	w19, #0, 41149c <__fxstatat@plt+0xea4c>
  41145c:	mov	x19, x0
  411460:	mov	x22, x2
  411464:	bl	402700 <__ctype_toupper_loc@plt>
  411468:	mov	w1, #0xa                   	// #10
  41146c:	mov	x2, x22
  411470:	sub	x8, x22, #0x1
  411474:	add	x9, x26, w24, uxtw
  411478:	mov	x10, x21
  41147c:	ldr	x11, [x0]
  411480:	ldrb	w12, [x9], #-1
  411484:	ldr	w11, [x11, x12, lsl #2]
  411488:	subs	x12, x10, #0x1
  41148c:	strb	w11, [x8, x10]
  411490:	mov	x10, x12
  411494:	b.ne	41147c <__fxstatat@plt+0xea2c>  // b.any
  411498:	b	4114bc <__fxstatat@plt+0xea6c>
  41149c:	mov	x19, x0
  4114a0:	add	x1, x25, x27
  4114a4:	mov	x0, x2
  4114a8:	mov	x22, x2
  4114ac:	mov	x2, x21
  4114b0:	bl	4023c0 <memcpy@plt>
  4114b4:	mov	w1, #0xa                   	// #10
  4114b8:	mov	x2, x22
  4114bc:	add	x2, x2, x21
  4114c0:	mov	x0, x19
  4114c4:	b	410a7c <__fxstatat@plt+0xe02c>
  4114c8:	cmp	w9, #0x45
  4114cc:	b.ne	4119fc <__fxstatat@plt+0xefac>  // b.any
  4114d0:	mov	w27, wzr
  4114d4:	mov	w19, wzr
  4114d8:	mov	w8, #0x79                  	// #121
  4114dc:	b	4115e4 <__fxstatat@plt+0xeb94>
  4114e0:	mov	x2, xzr
  4114e4:	add	x0, x27, x0
  4114e8:	b	410a80 <__fxstatat@plt+0xe030>
  4114ec:	sub	w14, w15, #0x1
  4114f0:	tst	w14, #0x3
  4114f4:	mov	w13, #0x16d                 	// #365
  4114f8:	b.ne	411534 <__fxstatat@plt+0xeae4>  // b.any
  4114fc:	mov	w15, #0x5c29                	// #23593
  411500:	mov	w16, #0xb850                	// #47184
  411504:	movk	w15, #0xc28f, lsl #16
  411508:	movk	w16, #0x51e, lsl #16
  41150c:	mov	w17, #0xd70b                	// #55051
  411510:	madd	w14, w14, w15, w16
  411514:	movk	w17, #0xa3, lsl #16
  411518:	ror	w15, w14, #2
  41151c:	ror	w14, w14, #4
  411520:	cmp	w14, w17
  411524:	mov	w14, #0x5c28                	// #23592
  411528:	movk	w14, #0x28f, lsl #16
  41152c:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  411530:	cinc	w13, w13, hi  // hi = pmore
  411534:	add	w11, w13, w11
  411538:	mov	w13, #0x17e                 	// #382
  41153c:	mov	w14, #0x2493                	// #9363
  411540:	sub	w10, w13, w10
  411544:	movk	w14, #0x9249, lsl #16
  411548:	add	w11, w10, w11
  41154c:	smull	x13, w11, w14
  411550:	lsr	x13, x13, #32
  411554:	add	w11, w13, w11
  411558:	asr	w13, w11, #2
  41155c:	add	w11, w13, w11, lsr #31
  411560:	lsl	w13, w11, #3
  411564:	sub	w11, w13, w11
  411568:	sub	w10, w11, w10
  41156c:	add	w10, w10, #0x3
  411570:	mov	w13, #0xffffffff            	// #-1
  411574:	cmp	w8, #0x47
  411578:	b.ne	410d20 <__fxstatat@plt+0xe2d0>  // b.any
  41157c:	mov	w10, #0xfffff894            	// #-1900
  411580:	add	w11, w12, w13
  411584:	sub	w10, w10, w13
  411588:	add	w11, w11, #0x76c
  41158c:	cmp	w12, w10
  411590:	cset	w10, lt  // lt = tstop
  411594:	mov	w19, #0x4                   	// #4
  411598:	b	411c30 <__fxstatat@plt+0xf1e0>
  41159c:	mov	w11, #0x2493                	// #9363
  4115a0:	movk	w11, #0x9249, lsl #16
  4115a4:	smull	x11, w10, w11
  4115a8:	lsr	x11, x11, #32
  4115ac:	add	w10, w11, w10
  4115b0:	asr	w11, w10, #2
  4115b4:	add	w10, w11, w10, lsr #31
  4115b8:	add	w11, w10, #0x1
  4115bc:	mov	w19, #0x2                   	// #2
  4115c0:	lsr	w10, w11, #31
  4115c4:	cmp	w10, #0x0
  4115c8:	mov	w12, wzr
  4115cc:	mov	w13, wzr
  4115d0:	cset	w10, ne  // ne = any
  4115d4:	cmp	w9, #0x4f
  4115d8:	b.ne	411684 <__fxstatat@plt+0xec34>  // b.any
  4115dc:	cbnz	w10, 411684 <__fxstatat@plt+0xec34>
  4115e0:	mov	w27, wzr
  4115e4:	mov	w10, #0x2520                	// #9504
  4115e8:	sturh	w10, [x29, #-40]
  4115ec:	ldr	x10, [sp, #72]
  4115f0:	mov	x23, x2
  4115f4:	str	w3, [sp, #92]
  4115f8:	str	x0, [sp, #104]
  4115fc:	cbz	w9, 411608 <__fxstatat@plt+0xebb8>
  411600:	ldr	x10, [sp, #64]
  411604:	sturb	w9, [x29, #-38]
  411608:	ldr	x3, [sp, #96]
  41160c:	add	x0, sp, #0x80
  411610:	sub	x2, x29, #0x28
  411614:	mov	w1, #0x400                 	// #1024
  411618:	strb	w8, [x10]
  41161c:	strb	wzr, [x10, #1]
  411620:	bl	402500 <strftime@plt>
  411624:	cbz	x0, 411738 <__fxstatat@plt+0xece8>
  411628:	mov	x26, x0
  41162c:	sub	x21, x0, #0x1
  411630:	ldr	x9, [sp, #120]
  411634:	ldr	x0, [sp, #104]
  411638:	bic	w8, w22, w22, asr #31
  41163c:	cmp	x21, x8
  411640:	csel	x24, x8, x21, cc  // cc = lo, ul, last
  411644:	sub	x9, x9, x0
  411648:	cmp	x24, x9
  41164c:	b.cs	411f54 <__fxstatat@plt+0xf504>  // b.hs, b.nlast
  411650:	mov	x2, x23
  411654:	cbz	x23, 411994 <__fxstatat@plt+0xef44>
  411658:	cbnz	w19, 4118f8 <__fxstatat@plt+0xeea8>
  41165c:	cmp	x21, x8
  411660:	b.cs	4118f8 <__fxstatat@plt+0xeea8>  // b.hs, b.nlast
  411664:	sxtw	x8, w22
  411668:	cmp	w28, #0x30
  41166c:	sub	x22, x8, x21
  411670:	b.eq	41167c <__fxstatat@plt+0xec2c>  // b.none
  411674:	cmp	w28, #0x2b
  411678:	b.ne	4118e0 <__fxstatat@plt+0xee90>  // b.any
  41167c:	mov	w1, #0x30                  	// #48
  411680:	b	4118e4 <__fxstatat@plt+0xee94>
  411684:	ldr	x21, [sp, #80]
  411688:	cmp	w10, #0x0
  41168c:	cneg	w8, w11, ne  // ne = any
  411690:	tbz	w12, #0, 41169c <__fxstatat@plt+0xec4c>
  411694:	mov	w9, #0x3a                  	// #58
  411698:	strb	w9, [x21, #-1]!
  41169c:	mov	w9, #0xcccd                	// #52429
  4116a0:	movk	w9, #0xcccc, lsl #16
  4116a4:	umull	x9, w8, w9
  4116a8:	mov	w11, #0xa                   	// #10
  4116ac:	lsr	x9, x9, #35
  4116b0:	msub	w11, w9, w11, w8
  4116b4:	orr	w11, w11, #0x30
  4116b8:	asr	w12, w12, #1
  4116bc:	cmp	w8, #0x9
  4116c0:	strb	w11, [x21, #-1]!
  4116c4:	mov	w8, w9
  4116c8:	b.hi	411690 <__fxstatat@plt+0xec40>  // b.pmore
  4116cc:	mov	w8, w9
  4116d0:	cbnz	w12, 411690 <__fxstatat@plt+0xec40>
  4116d4:	cmp	w19, w22
  4116d8:	csel	w24, w22, w19, lt  // lt = tstop
  4116dc:	cmp	w13, #0x0
  4116e0:	mov	w8, #0x2b                  	// #43
  4116e4:	csel	w8, w8, wzr, ne  // ne = any
  4116e8:	cmp	w10, #0x0
  4116ec:	mov	w9, #0x2d                  	// #45
  4116f0:	csel	w26, w9, w8, ne  // ne = any
  4116f4:	cmp	w28, #0x2d
  4116f8:	str	w3, [sp, #92]
  4116fc:	b.ne	411748 <__fxstatat@plt+0xecf8>  // b.any
  411700:	cbz	w26, 411da0 <__fxstatat@plt+0xf350>
  411704:	ldr	x9, [sp, #120]
  411708:	bic	w8, w22, w22, asr #31
  41170c:	cmp	w8, #0x1
  411710:	csinc	w27, w8, wzr, hi  // hi = pmore
  411714:	sub	x9, x9, x0
  411718:	cmp	x9, x27
  41171c:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  411720:	cbz	x2, 411d9c <__fxstatat@plt+0xf34c>
  411724:	cbnz	w24, 411d98 <__fxstatat@plt+0xf348>
  411728:	cmp	w8, #0x2
  41172c:	b.cc	411d98 <__fxstatat@plt+0xf348>  // b.lo, b.ul, b.last
  411730:	sxtw	x8, w22
  411734:	b	4117f8 <__fxstatat@plt+0xeda8>
  411738:	ldr	x0, [sp, #104]
  41173c:	mov	x2, x23
  411740:	mov	w1, #0xa                   	// #10
  411744:	b	410a80 <__fxstatat@plt+0xe030>
  411748:	ldr	x10, [sp, #80]
  41174c:	sxtw	x8, w24
  411750:	cmp	w26, #0x0
  411754:	cset	w9, ne  // ne = any
  411758:	sub	x10, x8, x10
  41175c:	add	x10, x10, x21
  411760:	sub	x27, x10, x9
  411764:	cmp	w27, #0x1
  411768:	b.lt	411830 <__fxstatat@plt+0xede0>  // b.tstop
  41176c:	cmp	w28, #0x5f
  411770:	b.ne	411884 <__fxstatat@plt+0xee34>  // b.any
  411774:	ldr	x8, [sp, #120]
  411778:	sxtw	x23, w27
  41177c:	sub	x8, x8, x0
  411780:	cmp	x23, x8
  411784:	b.cs	411f54 <__fxstatat@plt+0xf504>  // b.hs, b.nlast
  411788:	cbz	x2, 4117bc <__fxstatat@plt+0xed6c>
  41178c:	mov	w1, #0x20                  	// #32
  411790:	mov	x19, x0
  411794:	mov	x0, x2
  411798:	str	x24, [sp, #104]
  41179c:	mov	x24, x2
  4117a0:	mov	x2, x23
  4117a4:	bl	402680 <memset@plt>
  4117a8:	mov	x2, x24
  4117ac:	ldr	x24, [sp, #104]
  4117b0:	mov	w1, #0xa                   	// #10
  4117b4:	mov	x0, x19
  4117b8:	add	x2, x2, x23
  4117bc:	subs	w8, w22, w27
  4117c0:	add	x0, x23, x0
  4117c4:	csel	w22, w8, wzr, gt
  4117c8:	cbz	w26, 411da0 <__fxstatat@plt+0xf350>
  4117cc:	ldr	x8, [sp, #120]
  4117d0:	cmp	w22, #0x1
  4117d4:	csinc	w27, w22, wzr, hi  // hi = pmore
  4117d8:	sub	x8, x8, x0
  4117dc:	cmp	x8, x27
  4117e0:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  4117e4:	cbz	x2, 411d9c <__fxstatat@plt+0xf34c>
  4117e8:	cbnz	w24, 411d98 <__fxstatat@plt+0xf348>
  4117ec:	cmp	w22, #0x2
  4117f0:	b.cc	411d98 <__fxstatat@plt+0xf348>  // b.lo, b.ul, b.last
  4117f4:	mov	w8, w22
  4117f8:	sub	x23, x8, #0x1
  4117fc:	mov	w1, #0x20                  	// #32
  411800:	mov	x19, x0
  411804:	mov	x0, x2
  411808:	str	x24, [sp, #104]
  41180c:	mov	x24, x2
  411810:	mov	x2, x23
  411814:	bl	402680 <memset@plt>
  411818:	mov	x2, x24
  41181c:	ldr	x24, [sp, #104]
  411820:	mov	w1, #0xa                   	// #10
  411824:	mov	x0, x19
  411828:	add	x2, x2, x23
  41182c:	b	411d98 <__fxstatat@plt+0xf348>
  411830:	cbz	w26, 411da0 <__fxstatat@plt+0xf350>
  411834:	ldr	x9, [sp, #120]
  411838:	bic	w8, w22, w22, asr #31
  41183c:	cmp	w8, #0x1
  411840:	csinc	w27, w8, wzr, hi  // hi = pmore
  411844:	sub	x9, x9, x0
  411848:	cmp	x9, x27
  41184c:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  411850:	cbz	x2, 411d9c <__fxstatat@plt+0xf34c>
  411854:	cbnz	w24, 411d98 <__fxstatat@plt+0xf348>
  411858:	cmp	w8, #0x2
  41185c:	b.cc	411d98 <__fxstatat@plt+0xf348>  // b.lo, b.ul, b.last
  411860:	sxtw	x8, w22
  411864:	cmp	w28, #0x30
  411868:	sub	x23, x8, #0x1
  41186c:	str	x0, [sp, #104]
  411870:	b.eq	41187c <__fxstatat@plt+0xee2c>  // b.none
  411874:	cmp	w28, #0x2b
  411878:	b.ne	411d78 <__fxstatat@plt+0xf328>  // b.any
  41187c:	mov	w1, #0x30                  	// #48
  411880:	b	411d7c <__fxstatat@plt+0xf32c>
  411884:	ldr	x9, [sp, #120]
  411888:	sub	x9, x9, x0
  41188c:	cmp	x9, x8
  411890:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  411894:	cbz	w26, 411eb8 <__fxstatat@plt+0xf468>
  411898:	bic	w8, w22, w22, asr #31
  41189c:	cmp	w8, #0x1
  4118a0:	csinc	w23, w8, wzr, hi  // hi = pmore
  4118a4:	cmp	x9, x23
  4118a8:	b.ls	411f54 <__fxstatat@plt+0xf504>  // b.plast
  4118ac:	cbz	x2, 411eb4 <__fxstatat@plt+0xf464>
  4118b0:	cbnz	w24, 411eb0 <__fxstatat@plt+0xf460>
  4118b4:	cmp	w8, #0x2
  4118b8:	b.cc	411eb0 <__fxstatat@plt+0xf460>  // b.lo, b.ul, b.last
  4118bc:	sxtw	x8, w22
  4118c0:	cmp	w28, #0x30
  4118c4:	sub	x22, x8, #0x1
  4118c8:	str	x0, [sp, #104]
  4118cc:	b.eq	4118d8 <__fxstatat@plt+0xee88>  // b.none
  4118d0:	cmp	w28, #0x2b
  4118d4:	b.ne	411e90 <__fxstatat@plt+0xf440>  // b.any
  4118d8:	mov	w1, #0x30                  	// #48
  4118dc:	b	411e94 <__fxstatat@plt+0xf444>
  4118e0:	mov	w1, #0x20                  	// #32
  4118e4:	mov	x0, x2
  4118e8:	mov	x23, x2
  4118ec:	mov	x2, x22
  4118f0:	bl	402680 <memset@plt>
  4118f4:	add	x2, x23, x22
  4118f8:	tbz	w27, #0, 411934 <__fxstatat@plt+0xeee4>
  4118fc:	cbz	x21, 41198c <__fxstatat@plt+0xef3c>
  411900:	mov	x22, x2
  411904:	bl	402560 <__ctype_tolower_loc@plt>
  411908:	ldr	x11, [sp, #40]
  41190c:	mov	x2, x22
  411910:	sub	x8, x22, #0x2
  411914:	ldr	x9, [x0]
  411918:	ldrb	w10, [x11, x26]
  41191c:	ldr	w9, [x9, x10, lsl #2]
  411920:	strb	w9, [x8, x26]
  411924:	sub	x26, x26, #0x1
  411928:	cmp	x26, #0x1
  41192c:	b.ne	411914 <__fxstatat@plt+0xeec4>  // b.any
  411930:	b	41198c <__fxstatat@plt+0xef3c>
  411934:	ldr	w8, [sp, #92]
  411938:	tbz	w8, #0, 411974 <__fxstatat@plt+0xef24>
  41193c:	cbz	x21, 41198c <__fxstatat@plt+0xef3c>
  411940:	mov	x22, x2
  411944:	bl	402700 <__ctype_toupper_loc@plt>
  411948:	ldr	x11, [sp, #40]
  41194c:	mov	x2, x22
  411950:	sub	x8, x22, #0x2
  411954:	ldr	x9, [x0]
  411958:	ldrb	w10, [x11, x26]
  41195c:	ldr	w9, [x9, x10, lsl #2]
  411960:	strb	w9, [x8, x26]
  411964:	sub	x26, x26, #0x1
  411968:	cmp	x26, #0x1
  41196c:	b.ne	411954 <__fxstatat@plt+0xef04>  // b.any
  411970:	b	41198c <__fxstatat@plt+0xef3c>
  411974:	ldr	x1, [sp, #16]
  411978:	mov	x0, x2
  41197c:	mov	x22, x2
  411980:	mov	x2, x21
  411984:	bl	4023c0 <memcpy@plt>
  411988:	mov	x2, x22
  41198c:	ldr	x0, [sp, #104]
  411990:	add	x2, x2, x21
  411994:	mov	w1, #0xa                   	// #10
  411998:	add	x0, x24, x0
  41199c:	b	410a80 <__fxstatat@plt+0xe030>
  4119a0:	ldr	x10, [sp, #96]
  4119a4:	mov	w12, #0x64                  	// #100
  4119a8:	ldrsw	x11, [x10, #20]
  4119ac:	mov	w10, #0x851f                	// #34079
  4119b0:	movk	w10, #0x51eb, lsl #16
  4119b4:	mul	x13, x11, x10
  4119b8:	lsr	x14, x13, #63
  4119bc:	asr	x13, x13, #37
  4119c0:	add	w13, w13, w14
  4119c4:	cmn	x11, #0x76c
  4119c8:	msub	w11, w13, w12, w11
  4119cc:	cset	w10, lt  // lt = tstop
  4119d0:	cset	w14, gt
  4119d4:	cmp	w11, #0x0
  4119d8:	cset	w11, lt  // lt = tstop
  4119dc:	and	w11, w14, w11
  4119e0:	sub	w11, w13, w11
  4119e4:	add	w11, w11, #0x13
  4119e8:	b	411c2c <__fxstatat@plt+0xf1dc>
  4119ec:	mov	w27, wzr
  4119f0:	mov	w19, wzr
  4119f4:	mov	w8, #0x78                  	// #120
  4119f8:	b	4115e4 <__fxstatat@plt+0xeb94>
  4119fc:	ldr	x11, [sp, #96]
  411a00:	mov	w12, #0x851f                	// #34079
  411a04:	movk	w12, #0x51eb, lsl #16
  411a08:	mov	w13, #0x64                  	// #100
  411a0c:	ldrsw	x11, [x11, #20]
  411a10:	mov	w10, wzr
  411a14:	mul	x12, x11, x12
  411a18:	lsr	x14, x12, #63
  411a1c:	asr	x12, x12, #37
  411a20:	add	w12, w12, w14
  411a24:	cmn	w11, #0x76c
  411a28:	msub	w11, w12, w13, w11
  411a2c:	add	w12, w11, #0x64
  411a30:	csneg	w12, w12, w11, ge  // ge = tcont
  411a34:	cmp	w11, #0x0
  411a38:	csel	w11, w12, w11, lt  // lt = tstop
  411a3c:	b	411c2c <__fxstatat@plt+0xf1dc>
  411a40:	ldr	x21, [sp, #80]
  411a44:	mov	x2, x23
  411a48:	mov	w1, #0xa                   	// #10
  411a4c:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  411a50:	movk	x8, #0x6667
  411a54:	smulh	x8, x0, x8
  411a58:	asr	x13, x8, #2
  411a5c:	mov	w9, #0xa                   	// #10
  411a60:	neg	w11, w0
  411a64:	add	x12, x0, #0x9
  411a68:	add	x0, x13, x8, lsr #63
  411a6c:	madd	w8, w0, w9, w11
  411a70:	add	w8, w8, #0x30
  411a74:	cmp	x12, #0x12
  411a78:	strb	w8, [x21, #-1]!
  411a7c:	b.hi	411a4c <__fxstatat@plt+0xeffc>  // b.pmore
  411a80:	cmp	w22, #0x1
  411a84:	csinc	w9, w22, wzr, gt
  411a88:	mov	w8, wzr
  411a8c:	mov	x0, x19
  411a90:	mov	w3, w24
  411a94:	mov	x24, x9
  411a98:	b	4116e8 <__fxstatat@plt+0xec98>
  411a9c:	mov	w10, #0x1                   	// #1
  411aa0:	cmp	x11, #0x3
  411aa4:	b.ls	411b8c <__fxstatat@plt+0xf13c>  // b.plast
  411aa8:	b	4113b8 <__fxstatat@plt+0xe968>
  411aac:	mov	w27, wzr
  411ab0:	mov	w19, wzr
  411ab4:	mov	w8, #0x59                  	// #89
  411ab8:	b	4115e4 <__fxstatat@plt+0xeb94>
  411abc:	ldr	x22, [sp, #8]
  411ac0:	tbnz	w24, #0, 411d08 <__fxstatat@plt+0xf2b8>
  411ac4:	eor	w8, w24, #0x1
  411ac8:	and	w8, w27, w8
  411acc:	tbz	w8, #0, 411cbc <__fxstatat@plt+0xf26c>
  411ad0:	cbz	x21, 411d40 <__fxstatat@plt+0xf2f0>
  411ad4:	mov	x24, x2
  411ad8:	bl	402700 <__ctype_toupper_loc@plt>
  411adc:	mov	w1, #0xa                   	// #10
  411ae0:	mov	x2, x24
  411ae4:	sub	x8, x24, #0x1
  411ae8:	mov	x9, x21
  411aec:	ldr	x10, [x0]
  411af0:	ldrb	w11, [x22, x9]
  411af4:	ldr	w10, [x10, x11, lsl #2]
  411af8:	subs	x11, x9, #0x1
  411afc:	strb	w10, [x8, x9]
  411b00:	mov	x9, x11
  411b04:	b.ne	411aec <__fxstatat@plt+0xf09c>  // b.any
  411b08:	b	411d40 <__fxstatat@plt+0xf2f0>
  411b0c:	mov	w1, #0x20                  	// #32
  411b10:	mov	x0, x10
  411b14:	mov	x2, x8
  411b18:	mov	x22, x10
  411b1c:	bl	402680 <memset@plt>
  411b20:	ldr	x8, [sp, #104]
  411b24:	add	x10, x22, x8
  411b28:	ldr	w8, [sp, #92]
  411b2c:	ldr	x3, [sp, #96]
  411b30:	ldr	x7, [sp, #56]
  411b34:	mov	x0, x10
  411b38:	and	w4, w8, #0x1
  411b3c:	ldr	w8, [sp, #52]
  411b40:	mov	x1, x24
  411b44:	mov	x2, x26
  411b48:	mov	w5, w28
  411b4c:	mov	w6, w21
  411b50:	str	w8, [sp]
  411b54:	mov	x22, x10
  411b58:	bl	410970 <__fxstatat@plt+0xdf20>
  411b5c:	mov	x2, x22
  411b60:	mov	x0, x19
  411b64:	add	x2, x22, x23
  411b68:	mov	w1, #0xa                   	// #10
  411b6c:	add	x0, x27, x19
  411b70:	b	410a80 <__fxstatat@plt+0xe030>
  411b74:	ldr	x10, [sp, #24]
  411b78:	ldrb	w10, [x10]
  411b7c:	cmp	w10, #0x2d
  411b80:	cset	w10, eq  // eq = none
  411b84:	cmp	x11, #0x3
  411b88:	b.hi	4113b8 <__fxstatat@plt+0xe968>  // b.pmore
  411b8c:	mov	w13, #0x8889                	// #34953
  411b90:	movk	w13, #0x8888, lsl #16
  411b94:	adrp	x15, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  411b98:	add	x15, x15, #0xfaa
  411b9c:	smull	x16, w12, w13
  411ba0:	adr	x17, 411bfc <__fxstatat@plt+0xf1ac>
  411ba4:	ldrb	w18, [x15, x11]
  411ba8:	add	x17, x17, x18, lsl #2
  411bac:	lsr	x11, x16, #32
  411bb0:	mov	w14, #0xb3c5                	// #46021
  411bb4:	add	w11, w11, w12
  411bb8:	movk	w14, #0x91a2, lsl #16
  411bbc:	asr	w15, w11, #5
  411bc0:	smull	x14, w12, w14
  411bc4:	add	w15, w15, w11, lsr #31
  411bc8:	lsr	x14, x14, #32
  411bcc:	smull	x13, w15, w13
  411bd0:	add	w14, w14, w12
  411bd4:	lsr	x13, x13, #32
  411bd8:	asr	w11, w14, #11
  411bdc:	add	w13, w13, w15
  411be0:	add	w11, w11, w14, lsr #31
  411be4:	asr	w14, w13, #5
  411be8:	add	w13, w14, w13, lsr #31
  411bec:	mov	w16, #0x3c                  	// #60
  411bf0:	msub	w14, w13, w16, w15
  411bf4:	msub	w12, w15, w16, w12
  411bf8:	br	x17
  411bfc:	mov	w13, #0x64                  	// #100
  411c00:	mov	w12, wzr
  411c04:	mov	w19, #0x5                   	// #5
  411c08:	madd	w11, w11, w13, w14
  411c0c:	mov	w13, #0x1                   	// #1
  411c10:	b	4115d4 <__fxstatat@plt+0xeb84>
  411c14:	mov	w14, #0xfffff894            	// #-1900
  411c18:	sub	w13, w14, w13
  411c1c:	add	w15, w11, #0x64
  411c20:	cmp	w12, w13
  411c24:	mov	w10, wzr
  411c28:	csneg	w11, w15, w11, ge  // ge = tcont
  411c2c:	mov	w19, #0x2                   	// #2
  411c30:	ldr	w12, [sp, #36]
  411c34:	cmp	w28, #0x0
  411c38:	csel	w28, w12, w28, eq  // eq = none
  411c3c:	cmp	w28, #0x2b
  411c40:	b.ne	411c70 <__fxstatat@plt+0xf220>  // b.any
  411c44:	cmp	w19, #0x2
  411c48:	mov	w13, #0x270f                	// #9999
  411c4c:	mov	w14, #0x63                  	// #99
  411c50:	csel	w13, w14, w13, eq  // eq = none
  411c54:	cmp	w13, w11
  411c58:	cset	w13, cc  // cc = lo, ul, last
  411c5c:	cmp	w19, w22
  411c60:	cset	w14, lt  // lt = tstop
  411c64:	mov	w12, wzr
  411c68:	orr	w13, w14, w13
  411c6c:	b	4115d4 <__fxstatat@plt+0xeb84>
  411c70:	mov	w12, wzr
  411c74:	mov	w13, wzr
  411c78:	b	4115d4 <__fxstatat@plt+0xeb84>
  411c7c:	ldr	w11, [sp, #52]
  411c80:	mov	w19, #0x9                   	// #9
  411c84:	mov	w22, #0x9                   	// #9
  411c88:	b	4115c0 <__fxstatat@plt+0xeb70>
  411c8c:	cbz	w12, 411ef8 <__fxstatat@plt+0xf4a8>
  411c90:	mov	w15, #0x2710                	// #10000
  411c94:	mov	w16, #0x64                  	// #100
  411c98:	madd	w11, w11, w15, w12
  411c9c:	mov	w19, #0x9                   	// #9
  411ca0:	mov	w13, #0x1                   	// #1
  411ca4:	madd	w11, w14, w16, w11
  411ca8:	mov	w12, #0x14                  	// #20
  411cac:	b	4115d4 <__fxstatat@plt+0xeb84>
  411cb0:	ldr	w11, [sp, #52]
  411cb4:	mov	w19, w22
  411cb8:	b	4115c0 <__fxstatat@plt+0xeb70>
  411cbc:	ldr	x1, [sp, #24]
  411cc0:	mov	x0, x2
  411cc4:	mov	x22, x2
  411cc8:	mov	x2, x21
  411ccc:	bl	4023c0 <memcpy@plt>
  411cd0:	mov	w1, #0xa                   	// #10
  411cd4:	mov	x2, x22
  411cd8:	b	411d40 <__fxstatat@plt+0xf2f0>
  411cdc:	mov	w8, #0x25                  	// #37
  411ce0:	b	410a78 <__fxstatat@plt+0xe028>
  411ce4:	mov	w1, #0x20                  	// #32
  411ce8:	mov	x0, x2
  411cec:	mov	x26, x2
  411cf0:	mov	x2, x22
  411cf4:	bl	402680 <memset@plt>
  411cf8:	add	x2, x26, x22
  411cfc:	ldr	x22, [sp, #8]
  411d00:	mov	w1, #0xa                   	// #10
  411d04:	tbz	w24, #0, 411ac4 <__fxstatat@plt+0xf074>
  411d08:	cbz	x21, 411d40 <__fxstatat@plt+0xf2f0>
  411d0c:	mov	x24, x2
  411d10:	bl	402560 <__ctype_tolower_loc@plt>
  411d14:	mov	w1, #0xa                   	// #10
  411d18:	mov	x2, x24
  411d1c:	sub	x8, x24, #0x1
  411d20:	mov	x9, x21
  411d24:	ldr	x10, [x0]
  411d28:	ldrb	w11, [x22, x9]
  411d2c:	ldr	w10, [x10, x11, lsl #2]
  411d30:	subs	x11, x9, #0x1
  411d34:	strb	w10, [x8, x9]
  411d38:	mov	x9, x11
  411d3c:	b.ne	411d24 <__fxstatat@plt+0xf2d4>  // b.any
  411d40:	add	x2, x2, x21
  411d44:	mov	x0, x19
  411d48:	add	x0, x23, x19
  411d4c:	b	410a80 <__fxstatat@plt+0xe030>
  411d50:	mov	w1, #0x20                  	// #32
  411d54:	mov	x0, x2
  411d58:	mov	x22, x2
  411d5c:	mov	x2, x21
  411d60:	bl	402680 <memset@plt>
  411d64:	add	x2, x22, x21
  411d68:	mov	x0, x19
  411d6c:	mov	w1, #0xa                   	// #10
  411d70:	mov	w8, #0xa                   	// #10
  411d74:	b	410a78 <__fxstatat@plt+0xe028>
  411d78:	mov	w1, #0x20                  	// #32
  411d7c:	mov	x0, x2
  411d80:	mov	x19, x2
  411d84:	mov	x2, x23
  411d88:	bl	402680 <memset@plt>
  411d8c:	ldr	x0, [sp, #104]
  411d90:	add	x2, x19, x23
  411d94:	mov	w1, #0xa                   	// #10
  411d98:	strb	w26, [x2], #1
  411d9c:	add	x0, x0, x27
  411da0:	bic	w8, w22, w22, asr #31
  411da4:	ldr	x9, [sp, #80]
  411da8:	mov	w8, w8
  411dac:	sub	x26, x9, x21
  411db0:	ldr	x9, [sp, #120]
  411db4:	cmp	x26, x8
  411db8:	csel	x23, x8, x26, cc  // cc = lo, ul, last
  411dbc:	sub	x9, x9, x0
  411dc0:	cmp	x23, x9
  411dc4:	b.cs	411f54 <__fxstatat@plt+0xf504>  // b.hs, b.nlast
  411dc8:	cbz	x2, 411e88 <__fxstatat@plt+0xf438>
  411dcc:	cbnz	w24, 411e1c <__fxstatat@plt+0xf3cc>
  411dd0:	cmp	x26, x8
  411dd4:	b.cs	411e1c <__fxstatat@plt+0xf3cc>  // b.hs, b.nlast
  411dd8:	sxtw	x8, w22
  411ddc:	cmp	w28, #0x30
  411de0:	sub	x22, x8, x26
  411de4:	b.eq	411df0 <__fxstatat@plt+0xf3a0>  // b.none
  411de8:	cmp	w28, #0x2b
  411dec:	b.ne	411df8 <__fxstatat@plt+0xf3a8>  // b.any
  411df0:	mov	w1, #0x30                  	// #48
  411df4:	b	411dfc <__fxstatat@plt+0xf3ac>
  411df8:	mov	w1, #0x20                  	// #32
  411dfc:	mov	x19, x0
  411e00:	mov	x0, x2
  411e04:	mov	x24, x2
  411e08:	mov	x2, x22
  411e0c:	bl	402680 <memset@plt>
  411e10:	mov	x2, x24
  411e14:	mov	x0, x19
  411e18:	add	x2, x24, x22
  411e1c:	ldr	w8, [sp, #92]
  411e20:	mov	x19, x0
  411e24:	tbz	w8, #0, 411e64 <__fxstatat@plt+0xf414>
  411e28:	cbz	x26, 411e7c <__fxstatat@plt+0xf42c>
  411e2c:	mov	x22, x2
  411e30:	bl	402700 <__ctype_toupper_loc@plt>
  411e34:	mov	x2, x22
  411e38:	sub	x8, x22, #0x1
  411e3c:	sub	x9, x21, #0x1
  411e40:	mov	x10, x26
  411e44:	ldr	x11, [x0]
  411e48:	ldrb	w12, [x9, x10]
  411e4c:	ldr	w11, [x11, x12, lsl #2]
  411e50:	subs	x12, x10, #0x1
  411e54:	strb	w11, [x8, x10]
  411e58:	mov	x10, x12
  411e5c:	b.ne	411e44 <__fxstatat@plt+0xf3f4>  // b.any
  411e60:	b	411e7c <__fxstatat@plt+0xf42c>
  411e64:	mov	x0, x2
  411e68:	mov	x1, x21
  411e6c:	mov	x21, x2
  411e70:	mov	x2, x26
  411e74:	bl	4023c0 <memcpy@plt>
  411e78:	mov	x2, x21
  411e7c:	add	x2, x2, x26
  411e80:	mov	x0, x19
  411e84:	mov	w1, #0xa                   	// #10
  411e88:	add	x0, x23, x0
  411e8c:	b	410a80 <__fxstatat@plt+0xe030>
  411e90:	mov	w1, #0x20                  	// #32
  411e94:	mov	x0, x2
  411e98:	mov	x19, x2
  411e9c:	mov	x2, x22
  411ea0:	bl	402680 <memset@plt>
  411ea4:	ldr	x0, [sp, #104]
  411ea8:	add	x2, x19, x22
  411eac:	mov	w1, #0xa                   	// #10
  411eb0:	strb	w26, [x2], #1
  411eb4:	add	x0, x0, x23
  411eb8:	sxtw	x23, w27
  411ebc:	cbz	x2, 411ee8 <__fxstatat@plt+0xf498>
  411ec0:	mov	w1, #0x30                  	// #48
  411ec4:	mov	x19, x0
  411ec8:	mov	x0, x2
  411ecc:	mov	x22, x2
  411ed0:	mov	x2, x23
  411ed4:	bl	402680 <memset@plt>
  411ed8:	mov	x2, x22
  411edc:	mov	w1, #0xa                   	// #10
  411ee0:	mov	x0, x19
  411ee4:	add	x2, x22, x23
  411ee8:	mov	w22, wzr
  411eec:	mov	w8, wzr
  411ef0:	add	x0, x0, x23
  411ef4:	b	411da4 <__fxstatat@plt+0xf354>
  411ef8:	cbz	w14, 411f44 <__fxstatat@plt+0xf4f4>
  411efc:	mov	w12, #0x64                  	// #100
  411f00:	mov	w19, #0x6                   	// #6
  411f04:	mov	w13, #0x1                   	// #1
  411f08:	madd	w11, w11, w12, w14
  411f0c:	mov	w12, #0x4                   	// #4
  411f10:	b	4115d4 <__fxstatat@plt+0xeb84>
  411f14:	mov	w1, #0x20                  	// #32
  411f18:	mov	x19, x0
  411f1c:	mov	x0, x2
  411f20:	mov	x22, x2
  411f24:	mov	x2, x21
  411f28:	bl	402680 <memset@plt>
  411f2c:	ldrb	w8, [x25]
  411f30:	mov	x2, x22
  411f34:	add	x2, x22, x21
  411f38:	mov	w1, #0xa                   	// #10
  411f3c:	mov	x0, x19
  411f40:	b	410a78 <__fxstatat@plt+0xe028>
  411f44:	mov	w12, wzr
  411f48:	mov	w19, #0x3                   	// #3
  411f4c:	mov	w13, #0x1                   	// #1
  411f50:	b	4115d4 <__fxstatat@plt+0xeb84>
  411f54:	mov	x0, xzr
  411f58:	add	sp, sp, #0x4b0
  411f5c:	ldp	x20, x19, [sp, #80]
  411f60:	ldp	x22, x21, [sp, #64]
  411f64:	ldp	x24, x23, [sp, #48]
  411f68:	ldp	x26, x25, [sp, #32]
  411f6c:	ldp	x28, x27, [sp, #16]
  411f70:	ldp	x29, x30, [sp], #96
  411f74:	ret
  411f78:	stp	x29, x30, [sp, #-32]!
  411f7c:	stp	x20, x19, [sp, #16]
  411f80:	mov	x29, sp
  411f84:	cbz	x0, 412004 <__fxstatat@plt+0xf5b4>
  411f88:	mov	w1, #0x2f                  	// #47
  411f8c:	mov	x19, x0
  411f90:	bl	402730 <strrchr@plt>
  411f94:	cmp	x0, #0x0
  411f98:	csinc	x20, x19, x0, eq  // eq = none
  411f9c:	sub	x8, x20, x19
  411fa0:	cmp	x8, #0x7
  411fa4:	b.lt	411fe8 <__fxstatat@plt+0xf598>  // b.tstop
  411fa8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  411fac:	sub	x0, x20, #0x7
  411fb0:	add	x1, x1, #0x1
  411fb4:	mov	w2, #0x7                   	// #7
  411fb8:	bl	402640 <strncmp@plt>
  411fbc:	cbnz	w0, 411fe8 <__fxstatat@plt+0xf598>
  411fc0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  411fc4:	add	x1, x1, #0x9
  411fc8:	mov	w2, #0x3                   	// #3
  411fcc:	mov	x0, x20
  411fd0:	bl	402640 <strncmp@plt>
  411fd4:	mov	x19, x20
  411fd8:	cbnz	w0, 411fe8 <__fxstatat@plt+0xf598>
  411fdc:	add	x19, x20, #0x3
  411fe0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  411fe4:	str	x19, [x8, #1464]
  411fe8:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  411fec:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  411ff0:	str	x19, [x8, #1824]
  411ff4:	str	x19, [x9, #1424]
  411ff8:	ldp	x20, x19, [sp, #16]
  411ffc:	ldp	x29, x30, [sp], #32
  412000:	ret
  412004:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  412008:	ldr	x3, [x8, #1432]
  41200c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  412010:	add	x0, x0, #0xfc9
  412014:	mov	w1, #0x37                  	// #55
  412018:	mov	w2, #0x1                   	// #1
  41201c:	bl	402880 <fwrite@plt>
  412020:	bl	402770 <abort@plt>
  412024:	stp	x29, x30, [sp, #-48]!
  412028:	str	x21, [sp, #16]
  41202c:	stp	x20, x19, [sp, #32]
  412030:	mov	x29, sp
  412034:	mov	x19, x0
  412038:	bl	4029e0 <__errno_location@plt>
  41203c:	ldr	w21, [x0]
  412040:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  412044:	add	x8, x8, #0x728
  412048:	cmp	x19, #0x0
  41204c:	mov	x20, x0
  412050:	csel	x0, x8, x19, eq  // eq = none
  412054:	mov	w1, #0x38                  	// #56
  412058:	bl	4145f8 <__fxstatat@plt+0x11ba8>
  41205c:	str	w21, [x20]
  412060:	ldp	x20, x19, [sp, #32]
  412064:	ldr	x21, [sp, #16]
  412068:	ldp	x29, x30, [sp], #48
  41206c:	ret
  412070:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  412074:	add	x8, x8, #0x728
  412078:	cmp	x0, #0x0
  41207c:	csel	x8, x8, x0, eq  // eq = none
  412080:	ldr	w0, [x8]
  412084:	ret
  412088:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  41208c:	add	x8, x8, #0x728
  412090:	cmp	x0, #0x0
  412094:	csel	x8, x8, x0, eq  // eq = none
  412098:	str	w1, [x8]
  41209c:	ret
  4120a0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4120a4:	add	x8, x8, #0x728
  4120a8:	cmp	x0, #0x0
  4120ac:	ubfx	w9, w1, #5, #3
  4120b0:	csel	x8, x8, x0, eq  // eq = none
  4120b4:	add	x8, x8, w9, uxtw #2
  4120b8:	ldr	w9, [x8, #8]
  4120bc:	lsr	w10, w9, w1
  4120c0:	and	w0, w10, #0x1
  4120c4:	and	w10, w2, #0x1
  4120c8:	eor	w10, w0, w10
  4120cc:	lsl	w10, w10, w1
  4120d0:	eor	w9, w10, w9
  4120d4:	str	w9, [x8, #8]
  4120d8:	ret
  4120dc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4120e0:	add	x8, x8, #0x728
  4120e4:	cmp	x0, #0x0
  4120e8:	csel	x8, x8, x0, eq  // eq = none
  4120ec:	ldr	w0, [x8, #4]
  4120f0:	str	w1, [x8, #4]
  4120f4:	ret
  4120f8:	stp	x29, x30, [sp, #-16]!
  4120fc:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  412100:	add	x8, x8, #0x728
  412104:	cmp	x0, #0x0
  412108:	csel	x8, x8, x0, eq  // eq = none
  41210c:	mov	w9, #0xa                   	// #10
  412110:	mov	x29, sp
  412114:	str	w9, [x8]
  412118:	cbz	x1, 41212c <__fxstatat@plt+0xf6dc>
  41211c:	cbz	x2, 41212c <__fxstatat@plt+0xf6dc>
  412120:	stp	x1, x2, [x8, #40]
  412124:	ldp	x29, x30, [sp], #16
  412128:	ret
  41212c:	bl	402770 <abort@plt>
  412130:	sub	sp, sp, #0x60
  412134:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  412138:	add	x8, x8, #0x728
  41213c:	cmp	x4, #0x0
  412140:	stp	x29, x30, [sp, #16]
  412144:	str	x25, [sp, #32]
  412148:	stp	x24, x23, [sp, #48]
  41214c:	stp	x22, x21, [sp, #64]
  412150:	stp	x20, x19, [sp, #80]
  412154:	add	x29, sp, #0x10
  412158:	mov	x19, x3
  41215c:	mov	x20, x2
  412160:	mov	x21, x1
  412164:	mov	x22, x0
  412168:	csel	x24, x8, x4, eq  // eq = none
  41216c:	bl	4029e0 <__errno_location@plt>
  412170:	ldp	w4, w5, [x24]
  412174:	ldp	x7, x8, [x24, #40]
  412178:	ldr	w25, [x0]
  41217c:	mov	x23, x0
  412180:	add	x6, x24, #0x8
  412184:	mov	x0, x22
  412188:	mov	x1, x21
  41218c:	mov	x2, x20
  412190:	mov	x3, x19
  412194:	str	x8, [sp]
  412198:	bl	4121bc <__fxstatat@plt+0xf76c>
  41219c:	str	w25, [x23]
  4121a0:	ldp	x20, x19, [sp, #80]
  4121a4:	ldp	x22, x21, [sp, #64]
  4121a8:	ldp	x24, x23, [sp, #48]
  4121ac:	ldr	x25, [sp, #32]
  4121b0:	ldp	x29, x30, [sp, #16]
  4121b4:	add	sp, sp, #0x60
  4121b8:	ret
  4121bc:	sub	sp, sp, #0x120
  4121c0:	stp	x29, x30, [sp, #192]
  4121c4:	add	x29, sp, #0xc0
  4121c8:	ldr	x8, [x29, #96]
  4121cc:	stp	x28, x27, [sp, #208]
  4121d0:	stp	x26, x25, [sp, #224]
  4121d4:	stp	x24, x23, [sp, #240]
  4121d8:	stp	x22, x21, [sp, #256]
  4121dc:	stp	x20, x19, [sp, #272]
  4121e0:	str	x7, [sp, #96]
  4121e4:	stur	x6, [x29, #-40]
  4121e8:	mov	w20, w5
  4121ec:	mov	w24, w4
  4121f0:	mov	x22, x3
  4121f4:	mov	x19, x2
  4121f8:	mov	x23, x1
  4121fc:	stur	x8, [x29, #-88]
  412200:	mov	x28, x0
  412204:	bl	402850 <__ctype_get_mb_cur_max@plt>
  412208:	mov	w8, wzr
  41220c:	mov	w15, wzr
  412210:	stp	wzr, w20, [sp, #84]
  412214:	ubfx	w21, w20, #1, #1
  412218:	mov	w20, w24
  41221c:	add	x9, x19, #0x1
  412220:	mov	w14, #0x1                   	// #1
  412224:	str	x0, [sp, #32]
  412228:	str	xzr, [sp, #72]
  41222c:	stur	xzr, [x29, #-64]
  412230:	stur	xzr, [x29, #-32]
  412234:	stur	x9, [x29, #-80]
  412238:	cmp	w20, #0xa
  41223c:	b.hi	413168 <__fxstatat@plt+0x10718>  // b.pmore
  412240:	adrp	x12, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412244:	mov	w9, w20
  412248:	add	x12, x12, #0x10
  41224c:	adr	x10, 412270 <__fxstatat@plt+0xf820>
  412250:	ldrb	w11, [x12, x9]
  412254:	add	x10, x10, x11, lsl #2
  412258:	mov	x24, x23
  41225c:	mov	x27, xzr
  412260:	mov	w17, wzr
  412264:	mov	w16, #0x1                   	// #1
  412268:	mov	x23, x22
  41226c:	br	x10
  412270:	adrp	x25, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412274:	add	x25, x25, #0x166
  412278:	mov	w2, #0x5                   	// #5
  41227c:	mov	x0, xzr
  412280:	mov	x1, x25
  412284:	mov	w27, w15
  412288:	mov	w26, w14
  41228c:	mov	w22, w20
  412290:	bl	402970 <dcgettext@plt>
  412294:	mov	x20, x0
  412298:	cmp	x0, x25
  41229c:	b.ne	41246c <__fxstatat@plt+0xfa1c>  // b.any
  4122a0:	bl	415de8 <_obstack_memory_used@@Base+0x8b8>
  4122a4:	ldrb	w8, [x0]
  4122a8:	and	w8, w8, #0xffffffdf
  4122ac:	cmp	w8, #0x47
  4122b0:	b.eq	4123fc <__fxstatat@plt+0xf9ac>  // b.none
  4122b4:	cmp	w8, #0x55
  4122b8:	mov	w9, w22
  4122bc:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  4122c0:	ldrb	w8, [x0, #1]
  4122c4:	and	w8, w8, #0xffffffdf
  4122c8:	cmp	w8, #0x54
  4122cc:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  4122d0:	ldrb	w8, [x0, #2]
  4122d4:	and	w8, w8, #0xffffffdf
  4122d8:	cmp	w8, #0x46
  4122dc:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  4122e0:	ldrb	w8, [x0, #3]
  4122e4:	cmp	w8, #0x2d
  4122e8:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  4122ec:	ldrb	w8, [x0, #4]
  4122f0:	cmp	w8, #0x38
  4122f4:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  4122f8:	ldrb	w8, [x0, #5]
  4122fc:	cbnz	w8, 412454 <__fxstatat@plt+0xfa04>
  412300:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412304:	add	x20, x20, #0x168
  412308:	b	41246c <__fxstatat@plt+0xfa1c>
  41230c:	mov	w8, #0x1                   	// #1
  412310:	b	412390 <__fxstatat@plt+0xf940>
  412314:	tbnz	w21, #0, 412390 <__fxstatat@plt+0xf940>
  412318:	mov	w16, w8
  41231c:	mov	w17, wzr
  412320:	cbz	x24, 41232c <__fxstatat@plt+0xf8dc>
  412324:	mov	w8, #0x27                  	// #39
  412328:	strb	w8, [x28]
  41232c:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412330:	add	x8, x8, #0x578
  412334:	stur	x8, [x29, #-64]
  412338:	mov	w8, #0x1                   	// #1
  41233c:	mov	w20, #0x2                   	// #2
  412340:	mov	w27, #0x1                   	// #1
  412344:	stur	x8, [x29, #-32]
  412348:	b	4125fc <__fxstatat@plt+0xfbac>
  41234c:	tbz	w21, #0, 4123b8 <__fxstatat@plt+0xf968>
  412350:	mov	w8, #0x1                   	// #1
  412354:	stur	x8, [x29, #-32]
  412358:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  41235c:	add	x8, x8, #0x164
  412360:	mov	x27, xzr
  412364:	mov	w20, #0x5                   	// #5
  412368:	stur	x8, [x29, #-64]
  41236c:	mov	w16, #0x1                   	// #1
  412370:	mov	w17, #0x1                   	// #1
  412374:	b	4125fc <__fxstatat@plt+0xfbac>
  412378:	mov	w20, wzr
  41237c:	mov	x27, xzr
  412380:	mov	w17, wzr
  412384:	mov	w16, w8
  412388:	b	4125fc <__fxstatat@plt+0xfbac>
  41238c:	tbz	w21, #0, 4123ec <__fxstatat@plt+0xf99c>
  412390:	mov	w9, #0x1                   	// #1
  412394:	stur	x9, [x29, #-32]
  412398:	adrp	x9, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  41239c:	add	x9, x9, #0x578
  4123a0:	mov	x27, xzr
  4123a4:	mov	w20, #0x2                   	// #2
  4123a8:	stur	x9, [x29, #-64]
  4123ac:	mov	w16, w8
  4123b0:	mov	w17, #0x1                   	// #1
  4123b4:	b	4125fc <__fxstatat@plt+0xfbac>
  4123b8:	mov	w17, wzr
  4123bc:	cbz	x24, 4123c8 <__fxstatat@plt+0xf978>
  4123c0:	mov	w8, #0x22                  	// #34
  4123c4:	strb	w8, [x28]
  4123c8:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4123cc:	add	x8, x8, #0x164
  4123d0:	stur	x8, [x29, #-64]
  4123d4:	mov	w8, #0x1                   	// #1
  4123d8:	mov	w27, #0x1                   	// #1
  4123dc:	mov	w20, #0x5                   	// #5
  4123e0:	stur	x8, [x29, #-32]
  4123e4:	mov	w16, #0x1                   	// #1
  4123e8:	b	4125fc <__fxstatat@plt+0xfbac>
  4123ec:	mov	w16, #0x1                   	// #1
  4123f0:	mov	w17, wzr
  4123f4:	cbnz	x24, 412324 <__fxstatat@plt+0xf8d4>
  4123f8:	b	41232c <__fxstatat@plt+0xf8dc>
  4123fc:	ldrb	w8, [x0, #1]
  412400:	mov	w9, w22
  412404:	and	w8, w8, #0xffffffdf
  412408:	cmp	w8, #0x42
  41240c:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  412410:	ldrb	w8, [x0, #2]
  412414:	cmp	w8, #0x31
  412418:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  41241c:	ldrb	w8, [x0, #3]
  412420:	cmp	w8, #0x38
  412424:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  412428:	ldrb	w8, [x0, #4]
  41242c:	cmp	w8, #0x30
  412430:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  412434:	ldrb	w8, [x0, #5]
  412438:	cmp	w8, #0x33
  41243c:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  412440:	ldrb	w8, [x0, #6]
  412444:	cmp	w8, #0x30
  412448:	b.ne	412454 <__fxstatat@plt+0xfa04>  // b.any
  41244c:	ldrb	w8, [x0, #7]
  412450:	cbz	w8, 413034 <__fxstatat@plt+0x105e4>
  412454:	cmp	w9, #0x9
  412458:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  41245c:	adrp	x9, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412460:	add	x8, x8, #0x578
  412464:	add	x9, x9, #0x164
  412468:	csel	x20, x9, x8, eq  // eq = none
  41246c:	adrp	x25, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412470:	add	x25, x25, #0x578
  412474:	mov	w2, #0x5                   	// #5
  412478:	mov	x0, xzr
  41247c:	mov	x1, x25
  412480:	bl	402970 <dcgettext@plt>
  412484:	cmp	x0, x25
  412488:	stur	x0, [x29, #-88]
  41248c:	str	x20, [sp, #96]
  412490:	b.eq	41249c <__fxstatat@plt+0xfa4c>  // b.none
  412494:	mov	w20, w22
  412498:	b	412580 <__fxstatat@plt+0xfb30>
  41249c:	bl	415de8 <_obstack_memory_used@@Base+0x8b8>
  4124a0:	ldrb	w8, [x0]
  4124a4:	and	w8, w8, #0xffffffdf
  4124a8:	cmp	w8, #0x47
  4124ac:	b.eq	41250c <__fxstatat@plt+0xfabc>  // b.none
  4124b0:	cmp	w8, #0x55
  4124b4:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  4124b8:	ldrb	w8, [x0, #1]
  4124bc:	and	w8, w8, #0xffffffdf
  4124c0:	cmp	w8, #0x54
  4124c4:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  4124c8:	ldrb	w8, [x0, #2]
  4124cc:	and	w8, w8, #0xffffffdf
  4124d0:	cmp	w8, #0x46
  4124d4:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  4124d8:	ldrb	w8, [x0, #3]
  4124dc:	cmp	w8, #0x2d
  4124e0:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  4124e4:	ldrb	w8, [x0, #4]
  4124e8:	cmp	w8, #0x38
  4124ec:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  4124f0:	ldrb	w8, [x0, #5]
  4124f4:	cbnz	w8, 412560 <__fxstatat@plt+0xfb10>
  4124f8:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4124fc:	add	x8, x8, #0x16c
  412500:	stur	x8, [x29, #-88]
  412504:	mov	w20, w22
  412508:	b	412580 <__fxstatat@plt+0xfb30>
  41250c:	ldrb	w8, [x0, #1]
  412510:	and	w8, w8, #0xffffffdf
  412514:	cmp	w8, #0x42
  412518:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  41251c:	ldrb	w8, [x0, #2]
  412520:	cmp	w8, #0x31
  412524:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  412528:	ldrb	w8, [x0, #3]
  41252c:	cmp	w8, #0x38
  412530:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  412534:	ldrb	w8, [x0, #4]
  412538:	cmp	w8, #0x30
  41253c:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  412540:	ldrb	w8, [x0, #5]
  412544:	cmp	w8, #0x33
  412548:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  41254c:	ldrb	w8, [x0, #6]
  412550:	cmp	w8, #0x30
  412554:	b.ne	412560 <__fxstatat@plt+0xfb10>  // b.any
  412558:	ldrb	w8, [x0, #7]
  41255c:	cbz	w8, 413040 <__fxstatat@plt+0x105f0>
  412560:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412564:	adrp	x9, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412568:	cmp	w22, #0x9
  41256c:	add	x8, x8, #0x578
  412570:	add	x9, x9, #0x164
  412574:	mov	w20, w22
  412578:	csel	x8, x9, x8, eq  // eq = none
  41257c:	stur	x8, [x29, #-88]
  412580:	mov	w14, w26
  412584:	mov	w15, w27
  412588:	tbnz	w21, #0, 4125cc <__fxstatat@plt+0xfb7c>
  41258c:	ldr	x8, [sp, #96]
  412590:	ldrb	w9, [x8]
  412594:	cbz	w9, 4125cc <__fxstatat@plt+0xfb7c>
  412598:	mov	w26, w15
  41259c:	mov	w22, w14
  4125a0:	mov	x10, xzr
  4125a4:	add	x8, x8, #0x1
  4125a8:	b	4125bc <__fxstatat@plt+0xfb6c>
  4125ac:	ldrb	w9, [x8, x10]
  4125b0:	add	x27, x10, #0x1
  4125b4:	mov	x10, x27
  4125b8:	cbz	w9, 4125d8 <__fxstatat@plt+0xfb88>
  4125bc:	cmp	x10, x24
  4125c0:	b.cs	4125ac <__fxstatat@plt+0xfb5c>  // b.hs, b.nlast
  4125c4:	strb	w9, [x28, x10]
  4125c8:	b	4125ac <__fxstatat@plt+0xfb5c>
  4125cc:	mov	w26, w15
  4125d0:	mov	w22, w14
  4125d4:	mov	x27, xzr
  4125d8:	ldur	x25, [x29, #-88]
  4125dc:	mov	x0, x25
  4125e0:	bl	402430 <strlen@plt>
  4125e4:	stur	x0, [x29, #-32]
  4125e8:	mov	w16, #0x1                   	// #1
  4125ec:	stur	x25, [x29, #-64]
  4125f0:	mov	w17, w21
  4125f4:	mov	w14, w22
  4125f8:	mov	w15, w26
  4125fc:	ldp	x8, x9, [x29, #-40]
  412600:	eor	w18, w17, #0x1
  412604:	stur	w18, [x29, #-68]
  412608:	mov	x22, xzr
  41260c:	cmp	x8, #0x0
  412610:	cset	w8, eq  // eq = none
  412614:	cmp	x9, #0x0
  412618:	cset	w9, ne  // ne = any
  41261c:	cmp	w20, #0x2
  412620:	cset	w10, ne  // ne = any
  412624:	and	w13, w10, w16
  412628:	and	w12, w9, w17
  41262c:	orr	w10, w10, w18
  412630:	and	w18, w9, w13
  412634:	orr	w9, w13, w17
  412638:	eor	w9, w9, #0x1
  41263c:	cset	w11, eq  // eq = none
  412640:	orr	w8, w8, w9
  412644:	and	w12, w16, w12
  412648:	str	w10, [sp, #92]
  41264c:	and	w10, w11, w17
  412650:	stur	w8, [x29, #-24]
  412654:	eor	w8, w16, #0x1
  412658:	stp	w10, w12, [sp, #60]
  41265c:	stur	w16, [x29, #-72]
  412660:	str	w8, [sp, #68]
  412664:	stp	w17, w20, [x29, #-48]
  412668:	stur	w18, [x29, #-52]
  41266c:	cmn	x23, #0x1
  412670:	b.eq	412680 <__fxstatat@plt+0xfc30>  // b.none
  412674:	cmp	x22, x23
  412678:	b.ne	412688 <__fxstatat@plt+0xfc38>  // b.any
  41267c:	b	412fc4 <__fxstatat@plt+0x10574>
  412680:	ldrb	w8, [x19, x22]
  412684:	cbz	w8, 412fcc <__fxstatat@plt+0x1057c>
  412688:	cbz	w18, 4126d0 <__fxstatat@plt+0xfc80>
  41268c:	ldur	x8, [x29, #-32]
  412690:	cmp	x8, #0x2
  412694:	add	x20, x22, x8
  412698:	b.cc	4126c4 <__fxstatat@plt+0xfc74>  // b.lo, b.ul, b.last
  41269c:	cmn	x23, #0x1
  4126a0:	b.ne	4126c4 <__fxstatat@plt+0xfc74>  // b.any
  4126a4:	mov	x0, x19
  4126a8:	mov	w21, w14
  4126ac:	mov	w25, w15
  4126b0:	bl	402430 <strlen@plt>
  4126b4:	ldp	w18, w17, [x29, #-52]
  4126b8:	mov	x23, x0
  4126bc:	mov	w15, w25
  4126c0:	mov	w14, w21
  4126c4:	cmp	x20, x23
  4126c8:	b.ls	4126e4 <__fxstatat@plt+0xfc94>  // b.plast
  4126cc:	ldur	w20, [x29, #-44]
  4126d0:	mov	w25, wzr
  4126d4:	ldrb	w21, [x19, x22]
  4126d8:	cmp	w21, #0x7e
  4126dc:	b.ls	412730 <__fxstatat@plt+0xfce0>  // b.plast
  4126e0:	b	412980 <__fxstatat@plt+0xff30>
  4126e4:	ldur	x1, [x29, #-64]
  4126e8:	ldur	x2, [x29, #-32]
  4126ec:	add	x0, x19, x22
  4126f0:	mov	w26, w15
  4126f4:	mov	w21, w14
  4126f8:	bl	4026d0 <bcmp@plt>
  4126fc:	ldur	w9, [x29, #-68]
  412700:	ldur	w20, [x29, #-44]
  412704:	cmp	w0, #0x0
  412708:	cset	w8, ne  // ne = any
  41270c:	orr	w8, w8, w9
  412710:	cset	w25, eq  // eq = none
  412714:	tbz	w8, #0, 41308c <__fxstatat@plt+0x1063c>
  412718:	ldp	w18, w17, [x29, #-52]
  41271c:	mov	w14, w21
  412720:	mov	w15, w26
  412724:	ldrb	w21, [x19, x22]
  412728:	cmp	w21, #0x7e
  41272c:	b.hi	412980 <__fxstatat@plt+0xff30>  // b.pmore
  412730:	adrp	x13, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  412734:	add	x13, x13, #0x1b
  412738:	adr	x12, 41275c <__fxstatat@plt+0xfd0c>
  41273c:	ldrb	w9, [x13, x21]
  412740:	add	x12, x12, x9, lsl #2
  412744:	mov	w10, wzr
  412748:	mov	w8, wzr
  41274c:	mov	w26, #0x1                   	// #1
  412750:	mov	w11, #0x6e                  	// #110
  412754:	mov	w9, #0x61                  	// #97
  412758:	br	x12
  41275c:	ldur	w9, [x29, #-24]
  412760:	tbnz	w9, #0, 412780 <__fxstatat@plt+0xfd30>
  412764:	ldur	x10, [x29, #-40]
  412768:	lsr	w9, w21, #5
  41276c:	ldr	w9, [x10, w9, uxtw #2]
  412770:	lsr	w9, w9, w21
  412774:	tbz	w9, #0, 412780 <__fxstatat@plt+0xfd30>
  412778:	mov	w9, w21
  41277c:	b	412788 <__fxstatat@plt+0xfd38>
  412780:	mov	w9, w21
  412784:	cbz	w25, 4129c0 <__fxstatat@plt+0xff70>
  412788:	tbnz	w17, #0, 41304c <__fxstatat@plt+0x105fc>
  41278c:	cmp	w20, #0x2
  412790:	cset	w8, ne  // ne = any
  412794:	orr	w8, w8, w15
  412798:	tbnz	w8, #0, 4127d4 <__fxstatat@plt+0xfd84>
  41279c:	cmp	x27, x24
  4127a0:	b.cs	41280c <__fxstatat@plt+0xfdbc>  // b.hs, b.nlast
  4127a4:	mov	w8, #0x27                  	// #39
  4127a8:	strb	w8, [x28, x27]
  4127ac:	add	x8, x27, #0x1
  4127b0:	cmp	x8, x24
  4127b4:	b.cc	412818 <__fxstatat@plt+0xfdc8>  // b.lo, b.ul, b.last
  4127b8:	add	x8, x27, #0x2
  4127bc:	cmp	x8, x24
  4127c0:	b.cs	4127cc <__fxstatat@plt+0xfd7c>  // b.hs, b.nlast
  4127c4:	mov	w10, #0x27                  	// #39
  4127c8:	strb	w10, [x28, x8]
  4127cc:	add	x27, x27, #0x3
  4127d0:	mov	w15, #0x1                   	// #1
  4127d4:	cmp	x27, x24
  4127d8:	b.cs	4127e4 <__fxstatat@plt+0xfd94>  // b.hs, b.nlast
  4127dc:	mov	w8, #0x5c                  	// #92
  4127e0:	strb	w8, [x28, x27]
  4127e4:	add	x27, x27, #0x1
  4127e8:	cmp	x27, x24
  4127ec:	b.cs	4127f4 <__fxstatat@plt+0xfda4>  // b.hs, b.nlast
  4127f0:	strb	w9, [x28, x27]
  4127f4:	add	x27, x27, #0x1
  4127f8:	and	w14, w14, w26
  4127fc:	add	x22, x22, #0x1
  412800:	cmn	x23, #0x1
  412804:	b.ne	412674 <__fxstatat@plt+0xfc24>  // b.any
  412808:	b	412680 <__fxstatat@plt+0xfc30>
  41280c:	add	x8, x27, #0x1
  412810:	cmp	x8, x24
  412814:	b.cs	4127b8 <__fxstatat@plt+0xfd68>  // b.hs, b.nlast
  412818:	mov	w10, #0x24                  	// #36
  41281c:	strb	w10, [x28, x8]
  412820:	add	x8, x27, #0x2
  412824:	cmp	x8, x24
  412828:	b.cc	4127c4 <__fxstatat@plt+0xfd74>  // b.lo, b.ul, b.last
  41282c:	b	4127cc <__fxstatat@plt+0xfd7c>
  412830:	cmp	x23, #0x1
  412834:	b.eq	412858 <__fxstatat@plt+0xfe08>  // b.none
  412838:	cmn	x23, #0x1
  41283c:	b.ne	41285c <__fxstatat@plt+0xfe0c>  // b.any
  412840:	ldrb	w8, [x19, #1]
  412844:	cbz	w8, 412858 <__fxstatat@plt+0xfe08>
  412848:	mov	w8, wzr
  41284c:	mov	w26, wzr
  412850:	mov	x23, #0xffffffffffffffff    	// #-1
  412854:	b	41275c <__fxstatat@plt+0xfd0c>
  412858:	cbz	x22, 412868 <__fxstatat@plt+0xfe18>
  41285c:	mov	w8, wzr
  412860:	mov	w26, wzr
  412864:	b	41275c <__fxstatat@plt+0xfd0c>
  412868:	mov	w10, #0x1                   	// #1
  41286c:	cmp	w20, #0x2
  412870:	b.ne	412878 <__fxstatat@plt+0xfe28>  // b.any
  412874:	tbnz	w17, #0, 41304c <__fxstatat@plt+0x105fc>
  412878:	mov	w8, wzr
  41287c:	mov	w26, w10
  412880:	b	41275c <__fxstatat@plt+0xfd0c>
  412884:	cmp	w20, #0x2
  412888:	b.ne	4129a8 <__fxstatat@plt+0xff58>  // b.any
  41288c:	tbz	w17, #0, 4129b4 <__fxstatat@plt+0xff64>
  412890:	b	41304c <__fxstatat@plt+0x105fc>
  412894:	mov	w9, #0x66                  	// #102
  412898:	b	412a04 <__fxstatat@plt+0xffb4>
  41289c:	mov	w11, #0x74                  	// #116
  4128a0:	b	4128b0 <__fxstatat@plt+0xfe60>
  4128a4:	mov	w9, #0x62                  	// #98
  4128a8:	b	412a04 <__fxstatat@plt+0xffb4>
  4128ac:	mov	w11, #0x72                  	// #114
  4128b0:	ldr	w8, [sp, #92]
  4128b4:	mov	w9, w11
  4128b8:	tbnz	w8, #0, 412a04 <__fxstatat@plt+0xffb4>
  4128bc:	b	41304c <__fxstatat@plt+0x105fc>
  4128c0:	ldur	w8, [x29, #-72]
  4128c4:	tbz	w8, #0, 412a18 <__fxstatat@plt+0xffc8>
  4128c8:	cmp	w20, #0x2
  4128cc:	tbnz	w17, #0, 41315c <__fxstatat@plt+0x1070c>
  4128d0:	cset	w8, ne  // ne = any
  4128d4:	orr	w8, w8, w15
  4128d8:	tbz	w8, #0, 412bec <__fxstatat@plt+0x1019c>
  4128dc:	mov	x8, x27
  4128e0:	cmp	x8, x24
  4128e4:	b.cc	412c2c <__fxstatat@plt+0x101dc>  // b.lo, b.ul, b.last
  4128e8:	b	412c34 <__fxstatat@plt+0x101e4>
  4128ec:	cmp	w20, #0x5
  4128f0:	b.eq	412b4c <__fxstatat@plt+0x100fc>  // b.none
  4128f4:	cmp	w20, #0x2
  4128f8:	b.ne	412bdc <__fxstatat@plt+0x1018c>  // b.any
  4128fc:	tbz	w17, #0, 412bdc <__fxstatat@plt+0x1018c>
  412900:	b	41304c <__fxstatat@plt+0x105fc>
  412904:	mov	w9, #0x76                  	// #118
  412908:	b	412a04 <__fxstatat@plt+0xffb4>
  41290c:	cmp	w20, #0x2
  412910:	b.ne	412a28 <__fxstatat@plt+0xffd8>  // b.any
  412914:	tbnz	w17, #0, 41304c <__fxstatat@plt+0x105fc>
  412918:	ldr	x10, [sp, #72]
  41291c:	cmp	x24, #0x0
  412920:	cset	w8, eq  // eq = none
  412924:	cmp	x10, #0x0
  412928:	cset	w9, ne  // ne = any
  41292c:	orr	w8, w9, w8
  412930:	cmp	w8, #0x0
  412934:	csel	x10, x10, x24, ne  // ne = any
  412938:	csel	x24, x24, xzr, ne  // ne = any
  41293c:	cmp	x27, x24
  412940:	str	x10, [sp, #72]
  412944:	b.cs	412b28 <__fxstatat@plt+0x100d8>  // b.hs, b.nlast
  412948:	mov	w8, #0x27                  	// #39
  41294c:	strb	w8, [x28, x27]
  412950:	add	x8, x27, #0x1
  412954:	cmp	x8, x24
  412958:	b.cc	412b34 <__fxstatat@plt+0x100e4>  // b.lo, b.ul, b.last
  41295c:	add	x8, x27, #0x2
  412960:	cmp	x8, x24
  412964:	b.cs	412970 <__fxstatat@plt+0xff20>  // b.hs, b.nlast
  412968:	mov	w9, #0x27                  	// #39
  41296c:	strb	w9, [x28, x8]
  412970:	mov	w15, wzr
  412974:	mov	w8, wzr
  412978:	add	x27, x27, #0x3
  41297c:	b	412a2c <__fxstatat@plt+0xffdc>
  412980:	ldr	x8, [sp, #32]
  412984:	stp	w15, w14, [sp, #24]
  412988:	cmp	x8, #0x1
  41298c:	b.ne	412a40 <__fxstatat@plt+0xfff0>  // b.any
  412990:	bl	402820 <__ctype_b_loc@plt>
  412994:	ldr	x8, [x0]
  412998:	mov	w20, #0x1                   	// #1
  41299c:	ldrh	w8, [x8, x21, lsl #1]
  4129a0:	ubfx	w26, w8, #14, #1
  4129a4:	b	412d9c <__fxstatat@plt+0x1034c>
  4129a8:	ldr	w8, [sp, #64]
  4129ac:	mov	w9, #0x5c                  	// #92
  4129b0:	tbz	w8, #0, 412a04 <__fxstatat@plt+0xffb4>
  4129b4:	mov	w8, wzr
  4129b8:	mov	w26, wzr
  4129bc:	mov	w21, #0x5c                  	// #92
  4129c0:	tbnz	w8, #0, 4129f4 <__fxstatat@plt+0xffa4>
  4129c4:	tbz	w15, #0, 4129f4 <__fxstatat@plt+0xffa4>
  4129c8:	cmp	x27, x24
  4129cc:	b.cs	4129d8 <__fxstatat@plt+0xff88>  // b.hs, b.nlast
  4129d0:	mov	w8, #0x27                  	// #39
  4129d4:	strb	w8, [x28, x27]
  4129d8:	add	x8, x27, #0x1
  4129dc:	cmp	x8, x24
  4129e0:	b.cs	4129ec <__fxstatat@plt+0xff9c>  // b.hs, b.nlast
  4129e4:	mov	w9, #0x27                  	// #39
  4129e8:	strb	w9, [x28, x8]
  4129ec:	mov	w15, wzr
  4129f0:	add	x27, x27, #0x2
  4129f4:	mov	w9, w21
  4129f8:	cmp	x27, x24
  4129fc:	b.cc	4127f0 <__fxstatat@plt+0xfda0>  // b.lo, b.ul, b.last
  412a00:	b	4127f4 <__fxstatat@plt+0xfda4>
  412a04:	ldur	w10, [x29, #-72]
  412a08:	mov	w8, wzr
  412a0c:	mov	w26, wzr
  412a10:	tbz	w10, #0, 41275c <__fxstatat@plt+0xfd0c>
  412a14:	b	412788 <__fxstatat@plt+0xfd38>
  412a18:	ldr	w8, [sp, #88]
  412a1c:	tbnz	w8, #0, 4127fc <__fxstatat@plt+0xfdac>
  412a20:	mov	w21, wzr
  412a24:	b	41285c <__fxstatat@plt+0xfe0c>
  412a28:	mov	w8, wzr
  412a2c:	mov	w9, #0x1                   	// #1
  412a30:	mov	w21, #0x27                  	// #39
  412a34:	str	w9, [sp, #84]
  412a38:	mov	w26, #0x1                   	// #1
  412a3c:	b	41275c <__fxstatat@plt+0xfd0c>
  412a40:	cmn	x23, #0x1
  412a44:	stur	xzr, [x29, #-16]
  412a48:	b.eq	412cc0 <__fxstatat@plt+0x10270>  // b.none
  412a4c:	ldr	w8, [sp, #60]
  412a50:	stp	x23, x19, [sp, #40]
  412a54:	tbz	w8, #0, 412cd8 <__fxstatat@plt+0x10288>
  412a58:	ldur	x8, [x29, #-80]
  412a5c:	mov	x20, xzr
  412a60:	mov	w26, #0x1                   	// #1
  412a64:	add	x8, x8, x22
  412a68:	str	x8, [sp, #16]
  412a6c:	b	412a98 <__fxstatat@plt+0x10048>
  412a70:	ldur	w0, [x29, #-20]
  412a74:	bl	4029c0 <iswprint@plt>
  412a78:	cmp	w0, #0x0
  412a7c:	cset	w8, ne  // ne = any
  412a80:	sub	x0, x29, #0x10
  412a84:	and	w26, w26, w8
  412a88:	add	x20, x23, x20
  412a8c:	bl	402780 <mbsinit@plt>
  412a90:	ldr	x23, [sp, #40]
  412a94:	cbnz	w0, 412d98 <__fxstatat@plt+0x10348>
  412a98:	ldr	x8, [sp, #48]
  412a9c:	mov	x19, x28
  412aa0:	add	x28, x20, x22
  412aa4:	sub	x2, x23, x28
  412aa8:	add	x1, x8, x28
  412aac:	sub	x0, x29, #0x14
  412ab0:	sub	x3, x29, #0x10
  412ab4:	bl	415148 <__fxstatat@plt+0x126f8>
  412ab8:	cmn	x0, #0x2
  412abc:	b.eq	412d58 <__fxstatat@plt+0x10308>  // b.none
  412ac0:	mov	x23, x0
  412ac4:	cmn	x0, #0x1
  412ac8:	b.eq	412d48 <__fxstatat@plt+0x102f8>  // b.none
  412acc:	mov	x28, x19
  412ad0:	cbz	x23, 412d50 <__fxstatat@plt+0x10300>
  412ad4:	ldr	x19, [sp, #48]
  412ad8:	cmp	x23, #0x2
  412adc:	b.cc	412a70 <__fxstatat@plt+0x10020>  // b.lo, b.ul, b.last
  412ae0:	ldr	x9, [sp, #16]
  412ae4:	sub	x8, x23, #0x1
  412ae8:	add	x9, x9, x20
  412aec:	b	412afc <__fxstatat@plt+0x100ac>
  412af0:	subs	x8, x8, #0x1
  412af4:	add	x9, x9, #0x1
  412af8:	b.eq	412a70 <__fxstatat@plt+0x10020>  // b.none
  412afc:	ldrb	w10, [x9]
  412b00:	sub	w10, w10, #0x5b
  412b04:	cmp	w10, #0x21
  412b08:	b.hi	412af0 <__fxstatat@plt+0x100a0>  // b.pmore
  412b0c:	mov	w11, #0x1                   	// #1
  412b10:	lsl	x10, x11, x10
  412b14:	mov	x11, #0x2b                  	// #43
  412b18:	movk	x11, #0x2, lsl #32
  412b1c:	tst	x10, x11
  412b20:	b.eq	412af0 <__fxstatat@plt+0x100a0>  // b.none
  412b24:	b	413074 <__fxstatat@plt+0x10624>
  412b28:	add	x8, x27, #0x1
  412b2c:	cmp	x8, x24
  412b30:	b.cs	41295c <__fxstatat@plt+0xff0c>  // b.hs, b.nlast
  412b34:	mov	w9, #0x5c                  	// #92
  412b38:	strb	w9, [x28, x8]
  412b3c:	add	x8, x27, #0x2
  412b40:	cmp	x8, x24
  412b44:	b.cc	412968 <__fxstatat@plt+0xff18>  // b.lo, b.ul, b.last
  412b48:	b	412970 <__fxstatat@plt+0xff20>
  412b4c:	ldr	w8, [sp, #88]
  412b50:	tbz	w8, #2, 412bdc <__fxstatat@plt+0x1018c>
  412b54:	add	x9, x22, #0x2
  412b58:	cmp	x9, x23
  412b5c:	b.cs	412bdc <__fxstatat@plt+0x1018c>  // b.hs, b.nlast
  412b60:	add	x8, x22, x19
  412b64:	ldrb	w8, [x8, #1]
  412b68:	cmp	w8, #0x3f
  412b6c:	b.ne	412bdc <__fxstatat@plt+0x1018c>  // b.any
  412b70:	ldrb	w21, [x19, x9]
  412b74:	mov	w8, wzr
  412b78:	cmp	w21, #0x3e
  412b7c:	b.hi	412fb8 <__fxstatat@plt+0x10568>  // b.pmore
  412b80:	mov	w10, #0x1                   	// #1
  412b84:	mov	x11, #0xa38200000000        	// #179778741075968
  412b88:	lsl	x10, x10, x21
  412b8c:	movk	x11, #0x7000, lsl #48
  412b90:	tst	x10, x11
  412b94:	b.eq	412fb8 <__fxstatat@plt+0x10568>  // b.none
  412b98:	tbnz	w17, #0, 41304c <__fxstatat@plt+0x105fc>
  412b9c:	cmp	x27, x24
  412ba0:	b.cs	412f70 <__fxstatat@plt+0x10520>  // b.hs, b.nlast
  412ba4:	mov	w8, #0x3f                  	// #63
  412ba8:	strb	w8, [x28, x27]
  412bac:	add	x8, x27, #0x1
  412bb0:	cmp	x8, x24
  412bb4:	b.cc	412f7c <__fxstatat@plt+0x1052c>  // b.lo, b.ul, b.last
  412bb8:	add	x8, x27, #0x2
  412bbc:	cmp	x8, x24
  412bc0:	b.cs	412f90 <__fxstatat@plt+0x10540>  // b.hs, b.nlast
  412bc4:	mov	w10, #0x22                  	// #34
  412bc8:	strb	w10, [x28, x8]
  412bcc:	add	x8, x27, #0x3
  412bd0:	cmp	x8, x24
  412bd4:	b.cc	412f9c <__fxstatat@plt+0x1054c>  // b.lo, b.ul, b.last
  412bd8:	b	412fa4 <__fxstatat@plt+0x10554>
  412bdc:	mov	w8, wzr
  412be0:	mov	w26, wzr
  412be4:	mov	w21, #0x3f                  	// #63
  412be8:	b	41275c <__fxstatat@plt+0xfd0c>
  412bec:	cmp	x27, x24
  412bf0:	b.cs	412c9c <__fxstatat@plt+0x1024c>  // b.hs, b.nlast
  412bf4:	mov	w8, #0x27                  	// #39
  412bf8:	strb	w8, [x28, x27]
  412bfc:	add	x8, x27, #0x1
  412c00:	cmp	x8, x24
  412c04:	b.cc	412ca8 <__fxstatat@plt+0x10258>  // b.lo, b.ul, b.last
  412c08:	add	x8, x27, #0x2
  412c0c:	cmp	x8, x24
  412c10:	b.cs	412c1c <__fxstatat@plt+0x101cc>  // b.hs, b.nlast
  412c14:	mov	w9, #0x27                  	// #39
  412c18:	strb	w9, [x28, x8]
  412c1c:	add	x8, x27, #0x3
  412c20:	mov	w15, #0x1                   	// #1
  412c24:	cmp	x8, x24
  412c28:	b.cs	412c34 <__fxstatat@plt+0x101e4>  // b.hs, b.nlast
  412c2c:	mov	w9, #0x5c                  	// #92
  412c30:	strb	w9, [x28, x8]
  412c34:	cmp	w20, #0x2
  412c38:	add	x27, x8, #0x1
  412c3c:	b.eq	412c8c <__fxstatat@plt+0x1023c>  // b.none
  412c40:	add	x9, x22, #0x1
  412c44:	cmp	x9, x23
  412c48:	b.cs	412c8c <__fxstatat@plt+0x1023c>  // b.hs, b.nlast
  412c4c:	ldrb	w9, [x19, x9]
  412c50:	sub	w9, w9, #0x30
  412c54:	cmp	w9, #0x9
  412c58:	b.hi	412c8c <__fxstatat@plt+0x1023c>  // b.pmore
  412c5c:	cmp	x27, x24
  412c60:	b.cs	412c6c <__fxstatat@plt+0x1021c>  // b.hs, b.nlast
  412c64:	mov	w9, #0x30                  	// #48
  412c68:	strb	w9, [x28, x27]
  412c6c:	add	x9, x8, #0x2
  412c70:	cmp	x9, x24
  412c74:	b.cs	412c80 <__fxstatat@plt+0x10230>  // b.hs, b.nlast
  412c78:	mov	w10, #0x30                  	// #48
  412c7c:	strb	w10, [x28, x9]
  412c80:	mov	w26, wzr
  412c84:	add	x27, x8, #0x3
  412c88:	b	412c90 <__fxstatat@plt+0x10240>
  412c8c:	mov	w26, wzr
  412c90:	mov	w8, #0x1                   	// #1
  412c94:	mov	w21, #0x30                  	// #48
  412c98:	b	41275c <__fxstatat@plt+0xfd0c>
  412c9c:	add	x8, x27, #0x1
  412ca0:	cmp	x8, x24
  412ca4:	b.cs	412c08 <__fxstatat@plt+0x101b8>  // b.hs, b.nlast
  412ca8:	mov	w9, #0x24                  	// #36
  412cac:	strb	w9, [x28, x8]
  412cb0:	add	x8, x27, #0x2
  412cb4:	cmp	x8, x24
  412cb8:	b.cc	412c14 <__fxstatat@plt+0x101c4>  // b.lo, b.ul, b.last
  412cbc:	b	412c1c <__fxstatat@plt+0x101cc>
  412cc0:	mov	x0, x19
  412cc4:	bl	402430 <strlen@plt>
  412cc8:	mov	x23, x0
  412ccc:	ldr	w8, [sp, #60]
  412cd0:	stp	x23, x19, [sp, #40]
  412cd4:	tbnz	w8, #0, 412a58 <__fxstatat@plt+0x10008>
  412cd8:	mov	x20, xzr
  412cdc:	mov	w26, #0x1                   	// #1
  412ce0:	ldr	x8, [sp, #48]
  412ce4:	mov	x19, x28
  412ce8:	add	x28, x20, x22
  412cec:	sub	x2, x23, x28
  412cf0:	add	x1, x8, x28
  412cf4:	sub	x0, x29, #0x14
  412cf8:	sub	x3, x29, #0x10
  412cfc:	bl	415148 <__fxstatat@plt+0x126f8>
  412d00:	cmn	x0, #0x2
  412d04:	b.eq	412d58 <__fxstatat@plt+0x10308>  // b.none
  412d08:	mov	x23, x0
  412d0c:	cmn	x0, #0x1
  412d10:	b.eq	412d48 <__fxstatat@plt+0x102f8>  // b.none
  412d14:	mov	x28, x19
  412d18:	cbz	x23, 412d50 <__fxstatat@plt+0x10300>
  412d1c:	ldur	w0, [x29, #-20]
  412d20:	bl	4029c0 <iswprint@plt>
  412d24:	cmp	w0, #0x0
  412d28:	cset	w8, ne  // ne = any
  412d2c:	sub	x0, x29, #0x10
  412d30:	and	w26, w26, w8
  412d34:	add	x20, x23, x20
  412d38:	bl	402780 <mbsinit@plt>
  412d3c:	ldr	x23, [sp, #40]
  412d40:	cbz	w0, 412ce0 <__fxstatat@plt+0x10290>
  412d44:	b	412d98 <__fxstatat@plt+0x10348>
  412d48:	mov	w26, wzr
  412d4c:	mov	x28, x19
  412d50:	ldr	x23, [sp, #40]
  412d54:	b	412d98 <__fxstatat@plt+0x10348>
  412d58:	ldr	x23, [sp, #40]
  412d5c:	cmp	x28, x23
  412d60:	b.cs	412d90 <__fxstatat@plt+0x10340>  // b.hs, b.nlast
  412d64:	sub	x8, x23, x22
  412d68:	ldr	x9, [sp, #48]
  412d6c:	ldrb	w9, [x9, x28]
  412d70:	cbz	w9, 412d90 <__fxstatat@plt+0x10340>
  412d74:	add	x20, x20, #0x1
  412d78:	add	x28, x20, x22
  412d7c:	cmp	x28, x23
  412d80:	b.cc	412d68 <__fxstatat@plt+0x10318>  // b.lo, b.ul, b.last
  412d84:	mov	w26, wzr
  412d88:	mov	x20, x8
  412d8c:	b	412d94 <__fxstatat@plt+0x10344>
  412d90:	mov	w26, wzr
  412d94:	mov	x28, x19
  412d98:	ldr	x19, [sp, #48]
  412d9c:	ldr	w8, [sp, #68]
  412da0:	ldp	w15, w14, [sp, #24]
  412da4:	ldp	w18, w17, [x29, #-52]
  412da8:	cmp	x20, #0x1
  412dac:	orr	w8, w26, w8
  412db0:	b.hi	412dc4 <__fxstatat@plt+0x10374>  // b.pmore
  412db4:	tbz	w8, #0, 412dc4 <__fxstatat@plt+0x10374>
  412db8:	ldur	w20, [x29, #-44]
  412dbc:	mov	w8, wzr
  412dc0:	b	41275c <__fxstatat@plt+0xfd0c>
  412dc4:	add	x9, x20, x22
  412dc8:	ldur	w20, [x29, #-44]
  412dcc:	mov	w10, wzr
  412dd0:	b	412de4 <__fxstatat@plt+0x10394>
  412dd4:	ldur	x12, [x29, #-80]
  412dd8:	add	x27, x27, #0x1
  412ddc:	ldrb	w21, [x12, x22]
  412de0:	mov	x22, x11
  412de4:	tbz	w8, #0, 412e14 <__fxstatat@plt+0x103c4>
  412de8:	tbz	w25, #0, 412e80 <__fxstatat@plt+0x10430>
  412dec:	cmp	x27, x24
  412df0:	b.cs	412dfc <__fxstatat@plt+0x103ac>  // b.hs, b.nlast
  412df4:	mov	w11, #0x5c                  	// #92
  412df8:	strb	w11, [x28, x27]
  412dfc:	mov	w25, wzr
  412e00:	add	x27, x27, #0x1
  412e04:	add	x11, x22, #0x1
  412e08:	cmp	x9, x11
  412e0c:	b.hi	412e90 <__fxstatat@plt+0x10440>  // b.pmore
  412e10:	b	412f64 <__fxstatat@plt+0x10514>
  412e14:	tbnz	w17, #0, 41304c <__fxstatat@plt+0x105fc>
  412e18:	cmp	w20, #0x2
  412e1c:	cset	w10, ne  // ne = any
  412e20:	orr	w10, w10, w15
  412e24:	tbz	w10, #0, 412ed8 <__fxstatat@plt+0x10488>
  412e28:	cmp	x27, x24
  412e2c:	b.cs	412f18 <__fxstatat@plt+0x104c8>  // b.hs, b.nlast
  412e30:	mov	w10, #0x5c                  	// #92
  412e34:	strb	w10, [x28, x27]
  412e38:	add	x10, x27, #0x1
  412e3c:	cmp	x10, x24
  412e40:	b.cc	412f24 <__fxstatat@plt+0x104d4>  // b.lo, b.ul, b.last
  412e44:	add	x10, x27, #0x2
  412e48:	cmp	x10, x24
  412e4c:	b.cs	412e5c <__fxstatat@plt+0x1040c>  // b.hs, b.nlast
  412e50:	mov	w11, #0x30                  	// #48
  412e54:	bfxil	w11, w21, #3, #3
  412e58:	strb	w11, [x28, x10]
  412e5c:	mov	w11, #0x30                  	// #48
  412e60:	bfxil	w11, w21, #0, #3
  412e64:	add	x27, x27, #0x3
  412e68:	mov	w10, #0x1                   	// #1
  412e6c:	mov	w21, w11
  412e70:	add	x11, x22, #0x1
  412e74:	cmp	x9, x11
  412e78:	b.hi	412e90 <__fxstatat@plt+0x10440>  // b.pmore
  412e7c:	b	412f64 <__fxstatat@plt+0x10514>
  412e80:	mov	w25, wzr
  412e84:	add	x11, x22, #0x1
  412e88:	cmp	x9, x11
  412e8c:	b.ls	412f64 <__fxstatat@plt+0x10514>  // b.plast
  412e90:	and	w12, w10, #0x1
  412e94:	orn	w12, w12, w15
  412e98:	tbnz	w12, #0, 412ec8 <__fxstatat@plt+0x10478>
  412e9c:	cmp	x27, x24
  412ea0:	b.cs	412eac <__fxstatat@plt+0x1045c>  // b.hs, b.nlast
  412ea4:	mov	w12, #0x27                  	// #39
  412ea8:	strb	w12, [x28, x27]
  412eac:	add	x12, x27, #0x1
  412eb0:	cmp	x12, x24
  412eb4:	b.cs	412ec0 <__fxstatat@plt+0x10470>  // b.hs, b.nlast
  412eb8:	mov	w13, #0x27                  	// #39
  412ebc:	strb	w13, [x28, x12]
  412ec0:	mov	w15, wzr
  412ec4:	add	x27, x27, #0x2
  412ec8:	cmp	x27, x24
  412ecc:	b.cs	412dd4 <__fxstatat@plt+0x10384>  // b.hs, b.nlast
  412ed0:	strb	w21, [x28, x27]
  412ed4:	b	412dd4 <__fxstatat@plt+0x10384>
  412ed8:	cmp	x27, x24
  412edc:	b.cs	412f40 <__fxstatat@plt+0x104f0>  // b.hs, b.nlast
  412ee0:	mov	w10, #0x27                  	// #39
  412ee4:	strb	w10, [x28, x27]
  412ee8:	add	x10, x27, #0x1
  412eec:	cmp	x10, x24
  412ef0:	b.cc	412f4c <__fxstatat@plt+0x104fc>  // b.lo, b.ul, b.last
  412ef4:	add	x10, x27, #0x2
  412ef8:	cmp	x10, x24
  412efc:	b.cs	412f08 <__fxstatat@plt+0x104b8>  // b.hs, b.nlast
  412f00:	mov	w11, #0x27                  	// #39
  412f04:	strb	w11, [x28, x10]
  412f08:	add	x27, x27, #0x3
  412f0c:	mov	w15, #0x1                   	// #1
  412f10:	cmp	x27, x24
  412f14:	b.cc	412e30 <__fxstatat@plt+0x103e0>  // b.lo, b.ul, b.last
  412f18:	add	x10, x27, #0x1
  412f1c:	cmp	x10, x24
  412f20:	b.cs	412e44 <__fxstatat@plt+0x103f4>  // b.hs, b.nlast
  412f24:	mov	w11, #0x30                  	// #48
  412f28:	bfxil	w11, w21, #6, #2
  412f2c:	strb	w11, [x28, x10]
  412f30:	add	x10, x27, #0x2
  412f34:	cmp	x10, x24
  412f38:	b.cc	412e50 <__fxstatat@plt+0x10400>  // b.lo, b.ul, b.last
  412f3c:	b	412e5c <__fxstatat@plt+0x1040c>
  412f40:	add	x10, x27, #0x1
  412f44:	cmp	x10, x24
  412f48:	b.cs	412ef4 <__fxstatat@plt+0x104a4>  // b.hs, b.nlast
  412f4c:	mov	w11, #0x24                  	// #36
  412f50:	strb	w11, [x28, x10]
  412f54:	add	x10, x27, #0x2
  412f58:	cmp	x10, x24
  412f5c:	b.cc	412f00 <__fxstatat@plt+0x104b0>  // b.lo, b.ul, b.last
  412f60:	b	412f08 <__fxstatat@plt+0x104b8>
  412f64:	and	w8, w10, #0x1
  412f68:	tbz	w8, #0, 4129c4 <__fxstatat@plt+0xff74>
  412f6c:	b	4129f4 <__fxstatat@plt+0xffa4>
  412f70:	add	x8, x27, #0x1
  412f74:	cmp	x8, x24
  412f78:	b.cs	412bb8 <__fxstatat@plt+0x10168>  // b.hs, b.nlast
  412f7c:	mov	w10, #0x22                  	// #34
  412f80:	strb	w10, [x28, x8]
  412f84:	add	x8, x27, #0x2
  412f88:	cmp	x8, x24
  412f8c:	b.cc	412bc4 <__fxstatat@plt+0x10174>  // b.lo, b.ul, b.last
  412f90:	add	x8, x27, #0x3
  412f94:	cmp	x8, x24
  412f98:	b.cs	412fa4 <__fxstatat@plt+0x10554>  // b.hs, b.nlast
  412f9c:	mov	w10, #0x3f                  	// #63
  412fa0:	strb	w10, [x28, x8]
  412fa4:	mov	w8, wzr
  412fa8:	mov	w26, wzr
  412fac:	add	x27, x27, #0x4
  412fb0:	mov	x22, x9
  412fb4:	b	41275c <__fxstatat@plt+0xfd0c>
  412fb8:	mov	w21, #0x3f                  	// #63
  412fbc:	mov	w26, w8
  412fc0:	b	41275c <__fxstatat@plt+0xfd0c>
  412fc4:	mov	x23, x22
  412fc8:	b	412fd0 <__fxstatat@plt+0x10580>
  412fcc:	mov	x23, #0xffffffffffffffff    	// #-1
  412fd0:	cmp	w20, #0x2
  412fd4:	cset	w8, eq  // eq = none
  412fd8:	cmp	x27, #0x0
  412fdc:	cset	w9, eq  // eq = none
  412fe0:	and	w8, w8, w9
  412fe4:	and	w8, w17, w8
  412fe8:	tbnz	w8, #0, 41304c <__fxstatat@plt+0x105fc>
  412fec:	cmp	w20, #0x2
  412ff0:	cset	w8, ne  // ne = any
  412ff4:	orr	w8, w17, w8
  412ff8:	tbnz	w8, #0, 413114 <__fxstatat@plt+0x106c4>
  412ffc:	ldr	w8, [sp, #84]
  413000:	eor	w8, w8, #0x1
  413004:	tbnz	w8, #0, 413114 <__fxstatat@plt+0x106c4>
  413008:	mov	x22, x23
  41300c:	tbnz	w14, #0, 4130e4 <__fxstatat@plt+0x10694>
  413010:	ldr	x23, [sp, #72]
  413014:	mov	w21, wzr
  413018:	cbz	x23, 413110 <__fxstatat@plt+0x106c0>
  41301c:	ldur	w8, [x29, #-72]
  413020:	mov	w20, #0x2                   	// #2
  413024:	mov	w14, w21
  413028:	mov	w17, w21
  41302c:	cbz	x24, 412238 <__fxstatat@plt+0xf7e8>
  413030:	b	413114 <__fxstatat@plt+0x106c4>
  413034:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413038:	add	x20, x20, #0x170
  41303c:	b	41246c <__fxstatat@plt+0xfa1c>
  413040:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413044:	add	x8, x8, #0x174
  413048:	b	412500 <__fxstatat@plt+0xfab0>
  41304c:	ldur	w8, [x29, #-72]
  413050:	ldr	x7, [sp, #96]
  413054:	mov	w9, #0x4                   	// #4
  413058:	tst	w8, #0x1
  41305c:	mov	w8, #0x2                   	// #2
  413060:	csel	w8, w9, w8, ne  // ne = any
  413064:	cmp	w20, #0x2
  413068:	b.ne	413090 <__fxstatat@plt+0x10640>  // b.any
  41306c:	mov	w20, w8
  413070:	b	413090 <__fxstatat@plt+0x10640>
  413074:	ldur	w8, [x29, #-72]
  413078:	ldr	x23, [sp, #40]
  41307c:	mov	w9, #0x4                   	// #4
  413080:	tst	w8, #0x1
  413084:	mov	w8, #0x2                   	// #2
  413088:	csel	w20, w9, w8, ne  // ne = any
  41308c:	ldr	x7, [sp, #96]
  413090:	ldr	w8, [sp, #88]
  413094:	mov	x0, x28
  413098:	mov	x1, x24
  41309c:	mov	x2, x19
  4130a0:	and	w5, w8, #0xfffffffd
  4130a4:	ldur	x8, [x29, #-88]
  4130a8:	mov	x3, x23
  4130ac:	mov	w4, w20
  4130b0:	mov	x6, xzr
  4130b4:	str	x8, [sp]
  4130b8:	bl	4121bc <__fxstatat@plt+0xf76c>
  4130bc:	mov	x27, x0
  4130c0:	mov	x0, x27
  4130c4:	ldp	x20, x19, [sp, #272]
  4130c8:	ldp	x22, x21, [sp, #256]
  4130cc:	ldp	x24, x23, [sp, #240]
  4130d0:	ldp	x26, x25, [sp, #224]
  4130d4:	ldp	x28, x27, [sp, #208]
  4130d8:	ldp	x29, x30, [sp, #192]
  4130dc:	add	sp, sp, #0x120
  4130e0:	ret
  4130e4:	ldur	x8, [x29, #-88]
  4130e8:	ldr	x1, [sp, #72]
  4130ec:	ldr	w5, [sp, #88]
  4130f0:	ldur	x6, [x29, #-40]
  4130f4:	ldr	x7, [sp, #96]
  4130f8:	mov	w4, #0x5                   	// #5
  4130fc:	str	x8, [sp]
  413100:	mov	x0, x28
  413104:	mov	x2, x19
  413108:	mov	x3, x22
  41310c:	b	4130b8 <__fxstatat@plt+0x10668>
  413110:	mov	w17, w21
  413114:	ldur	x8, [x29, #-64]
  413118:	cbz	x8, 41314c <__fxstatat@plt+0x106fc>
  41311c:	tbnz	w17, #0, 41314c <__fxstatat@plt+0x106fc>
  413120:	ldrb	w9, [x8]
  413124:	cbz	w9, 41314c <__fxstatat@plt+0x106fc>
  413128:	add	x8, x8, #0x1
  41312c:	b	41313c <__fxstatat@plt+0x106ec>
  413130:	ldrb	w9, [x8], #1
  413134:	add	x27, x27, #0x1
  413138:	cbz	w9, 41314c <__fxstatat@plt+0x106fc>
  41313c:	cmp	x27, x24
  413140:	b.cs	413130 <__fxstatat@plt+0x106e0>  // b.hs, b.nlast
  413144:	strb	w9, [x28, x27]
  413148:	b	413130 <__fxstatat@plt+0x106e0>
  41314c:	cmp	x27, x24
  413150:	b.cs	4130c0 <__fxstatat@plt+0x10670>  // b.hs, b.nlast
  413154:	strb	wzr, [x28, x27]
  413158:	b	4130c0 <__fxstatat@plt+0x10670>
  41315c:	b.ne	41308c <__fxstatat@plt+0x1063c>  // b.any
  413160:	mov	w20, #0x4                   	// #4
  413164:	b	41308c <__fxstatat@plt+0x1063c>
  413168:	bl	402770 <abort@plt>
  41316c:	sub	sp, sp, #0x60
  413170:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413174:	add	x8, x8, #0x728
  413178:	cmp	x2, #0x0
  41317c:	stp	x29, x30, [sp, #16]
  413180:	stp	x26, x25, [sp, #32]
  413184:	stp	x24, x23, [sp, #48]
  413188:	stp	x22, x21, [sp, #64]
  41318c:	stp	x20, x19, [sp, #80]
  413190:	add	x29, sp, #0x10
  413194:	mov	x19, x1
  413198:	mov	x20, x0
  41319c:	csel	x25, x8, x2, eq  // eq = none
  4131a0:	bl	4029e0 <__errno_location@plt>
  4131a4:	ldp	w4, w8, [x25]
  4131a8:	ldp	x7, x9, [x25, #40]
  4131ac:	ldr	w26, [x0]
  4131b0:	add	x23, x25, #0x8
  4131b4:	orr	w22, w8, #0x1
  4131b8:	mov	x21, x0
  4131bc:	mov	x0, xzr
  4131c0:	mov	x1, xzr
  4131c4:	mov	x2, x20
  4131c8:	mov	x3, x19
  4131cc:	mov	w5, w22
  4131d0:	mov	x6, x23
  4131d4:	str	x9, [sp]
  4131d8:	bl	4121bc <__fxstatat@plt+0xf76c>
  4131dc:	add	x24, x0, #0x1
  4131e0:	mov	x0, x24
  4131e4:	bl	414368 <__fxstatat@plt+0x11918>
  4131e8:	ldr	w4, [x25]
  4131ec:	ldp	x7, x8, [x25, #40]
  4131f0:	mov	x1, x24
  4131f4:	mov	x2, x20
  4131f8:	mov	x3, x19
  4131fc:	mov	w5, w22
  413200:	mov	x6, x23
  413204:	mov	x25, x0
  413208:	str	x8, [sp]
  41320c:	bl	4121bc <__fxstatat@plt+0xf76c>
  413210:	str	w26, [x21]
  413214:	mov	x0, x25
  413218:	ldp	x20, x19, [sp, #80]
  41321c:	ldp	x22, x21, [sp, #64]
  413220:	ldp	x24, x23, [sp, #48]
  413224:	ldp	x26, x25, [sp, #32]
  413228:	ldp	x29, x30, [sp, #16]
  41322c:	add	sp, sp, #0x60
  413230:	ret
  413234:	sub	sp, sp, #0x70
  413238:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  41323c:	add	x8, x8, #0x728
  413240:	cmp	x3, #0x0
  413244:	stp	x29, x30, [sp, #16]
  413248:	stp	x28, x27, [sp, #32]
  41324c:	stp	x26, x25, [sp, #48]
  413250:	stp	x24, x23, [sp, #64]
  413254:	stp	x22, x21, [sp, #80]
  413258:	stp	x20, x19, [sp, #96]
  41325c:	add	x29, sp, #0x10
  413260:	mov	x19, x2
  413264:	mov	x22, x1
  413268:	mov	x23, x0
  41326c:	csel	x21, x8, x3, eq  // eq = none
  413270:	bl	4029e0 <__errno_location@plt>
  413274:	ldp	w4, w8, [x21]
  413278:	cmp	x19, #0x0
  41327c:	ldp	x7, x9, [x21, #40]
  413280:	ldr	w28, [x0]
  413284:	cset	w10, eq  // eq = none
  413288:	orr	w25, w8, w10
  41328c:	add	x26, x21, #0x8
  413290:	mov	x24, x0
  413294:	mov	x0, xzr
  413298:	mov	x1, xzr
  41329c:	mov	x2, x23
  4132a0:	mov	x3, x22
  4132a4:	mov	w5, w25
  4132a8:	mov	x6, x26
  4132ac:	str	x9, [sp]
  4132b0:	bl	4121bc <__fxstatat@plt+0xf76c>
  4132b4:	add	x27, x0, #0x1
  4132b8:	mov	x20, x0
  4132bc:	mov	x0, x27
  4132c0:	bl	414368 <__fxstatat@plt+0x11918>
  4132c4:	ldr	w4, [x21]
  4132c8:	ldp	x7, x8, [x21, #40]
  4132cc:	mov	x1, x27
  4132d0:	mov	x2, x23
  4132d4:	mov	x3, x22
  4132d8:	mov	w5, w25
  4132dc:	mov	x6, x26
  4132e0:	mov	x21, x0
  4132e4:	str	x8, [sp]
  4132e8:	bl	4121bc <__fxstatat@plt+0xf76c>
  4132ec:	str	w28, [x24]
  4132f0:	cbz	x19, 4132f8 <__fxstatat@plt+0x108a8>
  4132f4:	str	x20, [x19]
  4132f8:	mov	x0, x21
  4132fc:	ldp	x20, x19, [sp, #96]
  413300:	ldp	x22, x21, [sp, #80]
  413304:	ldp	x24, x23, [sp, #64]
  413308:	ldp	x26, x25, [sp, #48]
  41330c:	ldp	x28, x27, [sp, #32]
  413310:	ldp	x29, x30, [sp, #16]
  413314:	add	sp, sp, #0x70
  413318:	ret
  41331c:	stp	x29, x30, [sp, #-48]!
  413320:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413324:	add	x8, x8, #0x560
  413328:	ldr	w9, [x8]
  41332c:	stp	x20, x19, [sp, #32]
  413330:	ldr	x19, [x8, #8]
  413334:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413338:	cmp	w9, #0x2
  41333c:	stp	x22, x21, [sp, #16]
  413340:	mov	x29, sp
  413344:	b.lt	413368 <__fxstatat@plt+0x10918>  // b.tstop
  413348:	add	x21, x19, #0x18
  41334c:	mov	w22, #0x1                   	// #1
  413350:	ldr	x0, [x21], #16
  413354:	bl	402840 <free@plt>
  413358:	ldrsw	x8, [x20, #1376]
  41335c:	add	x22, x22, #0x1
  413360:	cmp	x22, x8
  413364:	b.lt	413350 <__fxstatat@plt+0x10900>  // b.tstop
  413368:	ldr	x0, [x19, #8]
  41336c:	adrp	x21, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413370:	add	x21, x21, #0x760
  413374:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413378:	cmp	x0, x21
  41337c:	add	x22, x22, #0x570
  413380:	b.eq	413390 <__fxstatat@plt+0x10940>  // b.none
  413384:	bl	402840 <free@plt>
  413388:	mov	w8, #0x100                 	// #256
  41338c:	stp	x8, x21, [x22]
  413390:	cmp	x19, x22
  413394:	b.eq	4133b0 <__fxstatat@plt+0x10960>  // b.none
  413398:	mov	x0, x19
  41339c:	bl	402840 <free@plt>
  4133a0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4133a4:	add	x8, x8, #0x568
  4133a8:	add	x9, x8, #0x8
  4133ac:	str	x9, [x8]
  4133b0:	mov	w8, #0x1                   	// #1
  4133b4:	str	w8, [x20, #1376]
  4133b8:	ldp	x20, x19, [sp, #32]
  4133bc:	ldp	x22, x21, [sp, #16]
  4133c0:	ldp	x29, x30, [sp], #48
  4133c4:	ret
  4133c8:	adrp	x3, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4133cc:	add	x3, x3, #0x728
  4133d0:	mov	x2, #0xffffffffffffffff    	// #-1
  4133d4:	b	4133d8 <__fxstatat@plt+0x10988>
  4133d8:	sub	sp, sp, #0x80
  4133dc:	stp	x29, x30, [sp, #32]
  4133e0:	add	x29, sp, #0x20
  4133e4:	stp	x28, x27, [sp, #48]
  4133e8:	stp	x26, x25, [sp, #64]
  4133ec:	stp	x24, x23, [sp, #80]
  4133f0:	stp	x22, x21, [sp, #96]
  4133f4:	stp	x20, x19, [sp, #112]
  4133f8:	mov	x22, x3
  4133fc:	stur	x2, [x29, #-8]
  413400:	mov	x21, x1
  413404:	mov	w23, w0
  413408:	bl	4029e0 <__errno_location@plt>
  41340c:	tbnz	w23, #31, 413568 <__fxstatat@plt+0x10b18>
  413410:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413414:	ldr	w8, [x25, #1376]
  413418:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  41341c:	ldr	w20, [x0]
  413420:	ldr	x27, [x9, #1384]
  413424:	mov	x19, x0
  413428:	cmp	w8, w23
  41342c:	b.gt	4134a4 <__fxstatat@plt+0x10a54>
  413430:	mov	w8, #0x7fffffff            	// #2147483647
  413434:	cmp	w23, w8
  413438:	stur	w20, [x29, #-12]
  41343c:	b.eq	41356c <__fxstatat@plt+0x10b1c>  // b.none
  413440:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413444:	add	x28, x28, #0x568
  413448:	add	x20, x28, #0x8
  41344c:	add	w26, w23, #0x1
  413450:	cmp	x27, x20
  413454:	csel	x0, xzr, x27, eq  // eq = none
  413458:	sbfiz	x1, x26, #4, #32
  41345c:	bl	4143e8 <__fxstatat@plt+0x11998>
  413460:	mov	x24, x0
  413464:	cmp	x27, x20
  413468:	str	x0, [x28]
  41346c:	b.ne	413480 <__fxstatat@plt+0x10a30>  // b.any
  413470:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413474:	add	x8, x8, #0x570
  413478:	ldr	q0, [x8]
  41347c:	str	q0, [x24]
  413480:	ldrsw	x8, [x25, #1376]
  413484:	mov	w1, wzr
  413488:	add	x0, x24, x8, lsl #4
  41348c:	sub	w8, w26, w8
  413490:	sbfiz	x2, x8, #4, #32
  413494:	bl	402680 <memset@plt>
  413498:	ldur	w20, [x29, #-12]
  41349c:	mov	x27, x24
  4134a0:	str	w26, [x25, #1376]
  4134a4:	add	x28, x27, w23, uxtw #4
  4134a8:	mov	x27, x28
  4134ac:	ldr	x26, [x28]
  4134b0:	ldr	x23, [x27, #8]!
  4134b4:	ldp	w4, w8, [x22]
  4134b8:	ldp	x7, x9, [x22, #40]
  4134bc:	ldur	x3, [x29, #-8]
  4134c0:	add	x24, x22, #0x8
  4134c4:	orr	w25, w8, #0x1
  4134c8:	mov	x0, x23
  4134cc:	mov	x1, x26
  4134d0:	mov	x2, x21
  4134d4:	mov	w5, w25
  4134d8:	mov	x6, x24
  4134dc:	str	x9, [sp]
  4134e0:	bl	4121bc <__fxstatat@plt+0xf76c>
  4134e4:	cmp	x26, x0
  4134e8:	b.hi	413540 <__fxstatat@plt+0x10af0>  // b.pmore
  4134ec:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4134f0:	add	x8, x8, #0x760
  4134f4:	add	x26, x0, #0x1
  4134f8:	cmp	x23, x8
  4134fc:	str	x26, [x28]
  413500:	b.eq	41350c <__fxstatat@plt+0x10abc>  // b.none
  413504:	mov	x0, x23
  413508:	bl	402840 <free@plt>
  41350c:	mov	x0, x26
  413510:	bl	414368 <__fxstatat@plt+0x11918>
  413514:	str	x0, [x27]
  413518:	ldr	w4, [x22]
  41351c:	ldp	x7, x8, [x22, #40]
  413520:	ldur	x3, [x29, #-8]
  413524:	mov	x1, x26
  413528:	mov	x2, x21
  41352c:	mov	w5, w25
  413530:	mov	x6, x24
  413534:	mov	x23, x0
  413538:	str	x8, [sp]
  41353c:	bl	4121bc <__fxstatat@plt+0xf76c>
  413540:	str	w20, [x19]
  413544:	mov	x0, x23
  413548:	ldp	x20, x19, [sp, #112]
  41354c:	ldp	x22, x21, [sp, #96]
  413550:	ldp	x24, x23, [sp, #80]
  413554:	ldp	x26, x25, [sp, #64]
  413558:	ldp	x28, x27, [sp, #48]
  41355c:	ldp	x29, x30, [sp, #32]
  413560:	add	sp, sp, #0x80
  413564:	ret
  413568:	bl	402770 <abort@plt>
  41356c:	bl	4146a4 <__fxstatat@plt+0x11c54>
  413570:	adrp	x3, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413574:	add	x3, x3, #0x728
  413578:	b	4133d8 <__fxstatat@plt+0x10988>
  41357c:	adrp	x3, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413580:	add	x3, x3, #0x728
  413584:	mov	x2, #0xffffffffffffffff    	// #-1
  413588:	mov	x1, x0
  41358c:	mov	w0, wzr
  413590:	b	4133d8 <__fxstatat@plt+0x10988>
  413594:	adrp	x3, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413598:	mov	x2, x1
  41359c:	add	x3, x3, #0x728
  4135a0:	mov	x1, x0
  4135a4:	mov	w0, wzr
  4135a8:	b	4133d8 <__fxstatat@plt+0x10988>
  4135ac:	sub	sp, sp, #0x50
  4135b0:	movi	v0.2d, #0x0
  4135b4:	cmp	w1, #0xa
  4135b8:	stp	x29, x30, [sp, #64]
  4135bc:	add	x29, sp, #0x40
  4135c0:	str	xzr, [sp, #48]
  4135c4:	stp	q0, q0, [sp, #16]
  4135c8:	str	q0, [sp]
  4135cc:	b.eq	4135f4 <__fxstatat@plt+0x10ba4>  // b.none
  4135d0:	mov	x8, x2
  4135d4:	str	w1, [sp]
  4135d8:	mov	x3, sp
  4135dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4135e0:	mov	x1, x8
  4135e4:	bl	4133d8 <__fxstatat@plt+0x10988>
  4135e8:	ldp	x29, x30, [sp, #64]
  4135ec:	add	sp, sp, #0x50
  4135f0:	ret
  4135f4:	bl	402770 <abort@plt>
  4135f8:	sub	sp, sp, #0x50
  4135fc:	movi	v0.2d, #0x0
  413600:	cmp	w1, #0xa
  413604:	stp	x29, x30, [sp, #64]
  413608:	add	x29, sp, #0x40
  41360c:	str	xzr, [sp, #48]
  413610:	stp	q0, q0, [sp, #16]
  413614:	str	q0, [sp]
  413618:	b.eq	413640 <__fxstatat@plt+0x10bf0>  // b.none
  41361c:	mov	x8, x3
  413620:	str	w1, [sp]
  413624:	mov	x3, sp
  413628:	mov	x1, x2
  41362c:	mov	x2, x8
  413630:	bl	4133d8 <__fxstatat@plt+0x10988>
  413634:	ldp	x29, x30, [sp, #64]
  413638:	add	sp, sp, #0x50
  41363c:	ret
  413640:	bl	402770 <abort@plt>
  413644:	sub	sp, sp, #0x50
  413648:	movi	v0.2d, #0x0
  41364c:	cmp	w0, #0xa
  413650:	stp	x29, x30, [sp, #64]
  413654:	add	x29, sp, #0x40
  413658:	str	xzr, [sp, #48]
  41365c:	stp	q0, q0, [sp, #16]
  413660:	str	q0, [sp]
  413664:	b.eq	413688 <__fxstatat@plt+0x10c38>  // b.none
  413668:	str	w0, [sp]
  41366c:	mov	x3, sp
  413670:	mov	x2, #0xffffffffffffffff    	// #-1
  413674:	mov	w0, wzr
  413678:	bl	4133d8 <__fxstatat@plt+0x10988>
  41367c:	ldp	x29, x30, [sp, #64]
  413680:	add	sp, sp, #0x50
  413684:	ret
  413688:	bl	402770 <abort@plt>
  41368c:	sub	sp, sp, #0x50
  413690:	movi	v0.2d, #0x0
  413694:	cmp	w0, #0xa
  413698:	stp	x29, x30, [sp, #64]
  41369c:	add	x29, sp, #0x40
  4136a0:	str	xzr, [sp, #48]
  4136a4:	stp	q0, q0, [sp, #16]
  4136a8:	str	q0, [sp]
  4136ac:	b.eq	4136cc <__fxstatat@plt+0x10c7c>  // b.none
  4136b0:	str	w0, [sp]
  4136b4:	mov	x3, sp
  4136b8:	mov	w0, wzr
  4136bc:	bl	4133d8 <__fxstatat@plt+0x10988>
  4136c0:	ldp	x29, x30, [sp, #64]
  4136c4:	add	sp, sp, #0x50
  4136c8:	ret
  4136cc:	bl	402770 <abort@plt>
  4136d0:	sub	sp, sp, #0x50
  4136d4:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4136d8:	add	x9, x9, #0x728
  4136dc:	ldp	q0, q1, [x9]
  4136e0:	ubfx	w10, w2, #5, #3
  4136e4:	mov	x11, sp
  4136e8:	mov	x8, x1
  4136ec:	stp	q0, q1, [sp]
  4136f0:	ldr	q0, [x9, #32]
  4136f4:	ldr	x9, [x9, #48]
  4136f8:	mov	x1, x0
  4136fc:	mov	x3, sp
  413700:	str	q0, [sp, #32]
  413704:	str	x9, [sp, #48]
  413708:	add	x9, x11, w10, uxtw #2
  41370c:	ldr	w10, [x9, #8]
  413710:	mov	w0, wzr
  413714:	stp	x29, x30, [sp, #64]
  413718:	add	x29, sp, #0x40
  41371c:	lsr	w11, w10, w2
  413720:	mvn	w11, w11
  413724:	and	w11, w11, #0x1
  413728:	lsl	w11, w11, w2
  41372c:	eor	w10, w11, w10
  413730:	mov	x2, x8
  413734:	str	w10, [x9, #8]
  413738:	bl	4133d8 <__fxstatat@plt+0x10988>
  41373c:	ldp	x29, x30, [sp, #64]
  413740:	add	sp, sp, #0x50
  413744:	ret
  413748:	sub	sp, sp, #0x50
  41374c:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413750:	add	x9, x9, #0x728
  413754:	ldp	q0, q1, [x9]
  413758:	ubfx	w10, w1, #5, #3
  41375c:	mov	x11, sp
  413760:	mov	x8, x0
  413764:	stp	q0, q1, [sp]
  413768:	ldr	q0, [x9, #32]
  41376c:	ldr	x9, [x9, #48]
  413770:	mov	x3, sp
  413774:	mov	x2, #0xffffffffffffffff    	// #-1
  413778:	str	q0, [sp, #32]
  41377c:	str	x9, [sp, #48]
  413780:	add	x9, x11, w10, uxtw #2
  413784:	ldr	w10, [x9, #8]
  413788:	mov	w0, wzr
  41378c:	stp	x29, x30, [sp, #64]
  413790:	add	x29, sp, #0x40
  413794:	lsr	w11, w10, w1
  413798:	mvn	w11, w11
  41379c:	and	w11, w11, #0x1
  4137a0:	lsl	w11, w11, w1
  4137a4:	eor	w10, w11, w10
  4137a8:	mov	x1, x8
  4137ac:	str	w10, [x9, #8]
  4137b0:	bl	4133d8 <__fxstatat@plt+0x10988>
  4137b4:	ldp	x29, x30, [sp, #64]
  4137b8:	add	sp, sp, #0x50
  4137bc:	ret
  4137c0:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4137c4:	add	x8, x8, #0x728
  4137c8:	ldp	q0, q1, [x8]
  4137cc:	ldr	q2, [x8, #32]
  4137d0:	ldr	x8, [x8, #48]
  4137d4:	mov	x1, x0
  4137d8:	stp	q0, q1, [sp, #-80]!
  4137dc:	ldr	w9, [sp, #12]
  4137e0:	str	x8, [sp, #48]
  4137e4:	mov	x3, sp
  4137e8:	mov	x2, #0xffffffffffffffff    	// #-1
  4137ec:	orr	w8, w9, #0x4000000
  4137f0:	mov	w0, wzr
  4137f4:	stp	x29, x30, [sp, #64]
  4137f8:	add	x29, sp, #0x40
  4137fc:	str	q2, [sp, #32]
  413800:	str	w8, [sp, #12]
  413804:	bl	4133d8 <__fxstatat@plt+0x10988>
  413808:	ldp	x29, x30, [sp, #64]
  41380c:	add	sp, sp, #0x50
  413810:	ret
  413814:	adrp	x8, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413818:	add	x8, x8, #0x728
  41381c:	ldp	q0, q1, [x8]
  413820:	ldr	q2, [x8, #32]
  413824:	ldr	x8, [x8, #48]
  413828:	mov	x2, x1
  41382c:	stp	q0, q1, [sp, #-80]!
  413830:	ldr	w9, [sp, #12]
  413834:	mov	x1, x0
  413838:	str	x8, [sp, #48]
  41383c:	mov	x3, sp
  413840:	orr	w8, w9, #0x4000000
  413844:	mov	w0, wzr
  413848:	stp	x29, x30, [sp, #64]
  41384c:	add	x29, sp, #0x40
  413850:	str	q2, [sp, #32]
  413854:	str	w8, [sp, #12]
  413858:	bl	4133d8 <__fxstatat@plt+0x10988>
  41385c:	ldp	x29, x30, [sp, #64]
  413860:	add	sp, sp, #0x50
  413864:	ret
  413868:	sub	sp, sp, #0x80
  41386c:	movi	v0.2d, #0x0
  413870:	cmp	w1, #0xa
  413874:	stp	x29, x30, [sp, #112]
  413878:	add	x29, sp, #0x70
  41387c:	str	wzr, [sp, #48]
  413880:	stp	q0, q0, [sp, #16]
  413884:	str	q0, [sp]
  413888:	b.eq	4138d8 <__fxstatat@plt+0x10e88>  // b.none
  41388c:	ldp	q0, q1, [sp]
  413890:	ldr	w9, [sp, #48]
  413894:	ldr	q2, [sp, #32]
  413898:	mov	x8, x2
  41389c:	stur	q0, [sp, #60]
  4138a0:	ldr	w10, [sp, #68]
  4138a4:	str	w1, [sp, #56]
  4138a8:	str	w9, [sp, #108]
  4138ac:	add	x3, sp, #0x38
  4138b0:	orr	w9, w10, #0x4000000
  4138b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4138b8:	mov	x1, x8
  4138bc:	stur	q1, [sp, #76]
  4138c0:	stur	q2, [sp, #92]
  4138c4:	str	w9, [sp, #68]
  4138c8:	bl	4133d8 <__fxstatat@plt+0x10988>
  4138cc:	ldp	x29, x30, [sp, #112]
  4138d0:	add	sp, sp, #0x80
  4138d4:	ret
  4138d8:	bl	402770 <abort@plt>
  4138dc:	sub	sp, sp, #0x50
  4138e0:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4138e4:	add	x9, x9, #0x728
  4138e8:	ldp	q0, q1, [x9]
  4138ec:	ldr	q2, [x9, #32]
  4138f0:	ldr	x9, [x9, #48]
  4138f4:	mov	w10, #0xa                   	// #10
  4138f8:	stp	x29, x30, [sp, #64]
  4138fc:	add	x29, sp, #0x40
  413900:	stp	q0, q1, [sp]
  413904:	str	q2, [sp, #32]
  413908:	str	x9, [sp, #48]
  41390c:	str	w10, [sp]
  413910:	cbz	x1, 41393c <__fxstatat@plt+0x10eec>
  413914:	cbz	x2, 41393c <__fxstatat@plt+0x10eec>
  413918:	mov	x8, x3
  41391c:	stp	x1, x2, [sp, #40]
  413920:	mov	x3, sp
  413924:	mov	x2, #0xffffffffffffffff    	// #-1
  413928:	mov	x1, x8
  41392c:	bl	4133d8 <__fxstatat@plt+0x10988>
  413930:	ldp	x29, x30, [sp, #64]
  413934:	add	sp, sp, #0x50
  413938:	ret
  41393c:	bl	402770 <abort@plt>
  413940:	sub	sp, sp, #0x50
  413944:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413948:	add	x9, x9, #0x728
  41394c:	ldp	q0, q1, [x9]
  413950:	ldr	x10, [x9, #48]
  413954:	stp	x29, x30, [sp, #64]
  413958:	add	x29, sp, #0x40
  41395c:	stp	q0, q1, [sp]
  413960:	ldr	q0, [x9, #32]
  413964:	mov	w9, #0xa                   	// #10
  413968:	str	x10, [sp, #48]
  41396c:	str	w9, [sp]
  413970:	str	q0, [sp, #32]
  413974:	cbz	x1, 4139a0 <__fxstatat@plt+0x10f50>
  413978:	cbz	x2, 4139a0 <__fxstatat@plt+0x10f50>
  41397c:	mov	x8, x3
  413980:	stp	x1, x2, [sp, #40]
  413984:	mov	x3, sp
  413988:	mov	x1, x8
  41398c:	mov	x2, x4
  413990:	bl	4133d8 <__fxstatat@plt+0x10988>
  413994:	ldp	x29, x30, [sp, #64]
  413998:	add	sp, sp, #0x50
  41399c:	ret
  4139a0:	bl	402770 <abort@plt>
  4139a4:	sub	sp, sp, #0x50
  4139a8:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  4139ac:	add	x9, x9, #0x728
  4139b0:	ldp	q0, q1, [x9]
  4139b4:	ldr	q2, [x9, #32]
  4139b8:	ldr	x9, [x9, #48]
  4139bc:	mov	w10, #0xa                   	// #10
  4139c0:	stp	x29, x30, [sp, #64]
  4139c4:	add	x29, sp, #0x40
  4139c8:	stp	q0, q1, [sp]
  4139cc:	str	q2, [sp, #32]
  4139d0:	str	x9, [sp, #48]
  4139d4:	str	w10, [sp]
  4139d8:	cbz	x0, 413a08 <__fxstatat@plt+0x10fb8>
  4139dc:	cbz	x1, 413a08 <__fxstatat@plt+0x10fb8>
  4139e0:	mov	x8, x2
  4139e4:	stp	x0, x1, [sp, #40]
  4139e8:	mov	x3, sp
  4139ec:	mov	x2, #0xffffffffffffffff    	// #-1
  4139f0:	mov	w0, wzr
  4139f4:	mov	x1, x8
  4139f8:	bl	4133d8 <__fxstatat@plt+0x10988>
  4139fc:	ldp	x29, x30, [sp, #64]
  413a00:	add	sp, sp, #0x50
  413a04:	ret
  413a08:	bl	402770 <abort@plt>
  413a0c:	sub	sp, sp, #0x50
  413a10:	adrp	x9, 42e000 <__progname@@GLIBC_2.17+0xa48>
  413a14:	add	x9, x9, #0x728
  413a18:	ldp	q0, q1, [x9]
  413a1c:	ldr	q2, [x9, #32]
  413a20:	ldr	x9, [x9, #48]
  413a24:	mov	w10, #0xa                   	// #10
  413a28:	stp	x29, x30, [sp, #64]
  413a2c:	add	x29, sp, #0x40
  413a30:	stp	q0, q1, [sp]
  413a34:	str	q2, [sp, #32]
  413a38:	str	x9, [sp, #48]
  413a3c:	str	w10, [sp]
  413a40:	cbz	x0, 413a70 <__fxstatat@plt+0x11020>
  413a44:	cbz	x1, 413a70 <__fxstatat@plt+0x11020>
  413a48:	mov	x8, x3
  413a4c:	stp	x0, x1, [sp, #40]
  413a50:	mov	x3, sp
  413a54:	mov	w0, wzr
  413a58:	mov	x1, x2
  413a5c:	mov	x2, x8
  413a60:	bl	4133d8 <__fxstatat@plt+0x10988>
  413a64:	ldp	x29, x30, [sp, #64]
  413a68:	add	sp, sp, #0x50
  413a6c:	ret
  413a70:	bl	402770 <abort@plt>
  413a74:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413a78:	add	x3, x3, #0x528
  413a7c:	b	4133d8 <__fxstatat@plt+0x10988>
  413a80:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413a84:	mov	x2, x1
  413a88:	add	x3, x3, #0x528
  413a8c:	mov	x1, x0
  413a90:	mov	w0, wzr
  413a94:	b	4133d8 <__fxstatat@plt+0x10988>
  413a98:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413a9c:	add	x3, x3, #0x528
  413aa0:	mov	x2, #0xffffffffffffffff    	// #-1
  413aa4:	b	4133d8 <__fxstatat@plt+0x10988>
  413aa8:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  413aac:	add	x3, x3, #0x528
  413ab0:	mov	x2, #0xffffffffffffffff    	// #-1
  413ab4:	mov	x1, x0
  413ab8:	mov	w0, wzr
  413abc:	b	4133d8 <__fxstatat@plt+0x10988>
  413ac0:	mov	x8, x0
  413ac4:	mov	w0, #0xffffff9c            	// #-100
  413ac8:	mov	w2, #0xffffff9c            	// #-100
  413acc:	mov	x3, x1
  413ad0:	mov	x1, x8
  413ad4:	b	413ad8 <__fxstatat@plt+0x11088>
  413ad8:	sub	sp, sp, #0x150
  413adc:	stp	x22, x21, [sp, #304]
  413ae0:	mov	w21, w0
  413ae4:	mov	x0, x1
  413ae8:	stp	x29, x30, [sp, #256]
  413aec:	stp	x28, x25, [sp, #272]
  413af0:	stp	x24, x23, [sp, #288]
  413af4:	stp	x20, x19, [sp, #320]
  413af8:	add	x29, sp, #0x100
  413afc:	mov	x20, x3
  413b00:	mov	w19, w2
  413b04:	mov	x22, x1
  413b08:	bl	40d6ec <__fxstatat@plt+0xac9c>
  413b0c:	mov	x23, x0
  413b10:	mov	x0, x20
  413b14:	bl	40d6ec <__fxstatat@plt+0xac9c>
  413b18:	mov	x24, x0
  413b1c:	mov	x0, x23
  413b20:	bl	40d74c <__fxstatat@plt+0xacfc>
  413b24:	mov	x25, x0
  413b28:	mov	x0, x24
  413b2c:	bl	40d74c <__fxstatat@plt+0xacfc>
  413b30:	cmp	x25, x0
  413b34:	b.ne	413b4c <__fxstatat@plt+0x110fc>  // b.any
  413b38:	mov	x0, x23
  413b3c:	mov	x1, x24
  413b40:	mov	x2, x25
  413b44:	bl	4026d0 <bcmp@plt>
  413b48:	cbz	w0, 413b70 <__fxstatat@plt+0x11120>
  413b4c:	mov	w19, wzr
  413b50:	mov	w0, w19
  413b54:	ldp	x20, x19, [sp, #320]
  413b58:	ldp	x22, x21, [sp, #304]
  413b5c:	ldp	x24, x23, [sp, #288]
  413b60:	ldp	x28, x25, [sp, #272]
  413b64:	ldp	x29, x30, [sp, #256]
  413b68:	add	sp, sp, #0x150
  413b6c:	ret
  413b70:	mov	x0, x22
  413b74:	bl	415d90 <_obstack_memory_used@@Base+0x860>
  413b78:	mov	x22, x0
  413b7c:	add	x3, sp, #0x80
  413b80:	mov	w4, #0x100                 	// #256
  413b84:	mov	w0, wzr
  413b88:	mov	w1, w21
  413b8c:	mov	x2, x22
  413b90:	bl	402a50 <__fxstatat@plt>
  413b94:	cbz	w0, 413bb4 <__fxstatat@plt+0x11164>
  413b98:	bl	4029e0 <__errno_location@plt>
  413b9c:	ldr	w1, [x0]
  413ba0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  413ba4:	add	x2, x2, #0xc0f
  413ba8:	mov	w0, #0x1                   	// #1
  413bac:	mov	x3, x22
  413bb0:	bl	402490 <error@plt>
  413bb4:	mov	x0, x22
  413bb8:	bl	402840 <free@plt>
  413bbc:	mov	x0, x20
  413bc0:	bl	415d90 <_obstack_memory_used@@Base+0x860>
  413bc4:	mov	x20, x0
  413bc8:	mov	x3, sp
  413bcc:	mov	w4, #0x100                 	// #256
  413bd0:	mov	w0, wzr
  413bd4:	mov	w1, w19
  413bd8:	mov	x2, x20
  413bdc:	bl	402a50 <__fxstatat@plt>
  413be0:	cbz	w0, 413c00 <__fxstatat@plt+0x111b0>
  413be4:	bl	4029e0 <__errno_location@plt>
  413be8:	ldr	w1, [x0]
  413bec:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  413bf0:	add	x2, x2, #0xc0f
  413bf4:	mov	w0, #0x1                   	// #1
  413bf8:	mov	x3, x20
  413bfc:	bl	402490 <error@plt>
  413c00:	ldp	x11, x8, [sp]
  413c04:	ldp	x10, x9, [sp, #128]
  413c08:	mov	x0, x20
  413c0c:	cmp	x9, x8
  413c10:	cset	w8, eq  // eq = none
  413c14:	cmp	x10, x11
  413c18:	cset	w9, eq  // eq = none
  413c1c:	and	w19, w8, w9
  413c20:	bl	402840 <free@plt>
  413c24:	b	413b50 <__fxstatat@plt+0x11100>
  413c28:	sub	sp, sp, #0x50
  413c2c:	str	x21, [sp, #48]
  413c30:	stp	x20, x19, [sp, #64]
  413c34:	mov	x21, x5
  413c38:	mov	x20, x4
  413c3c:	mov	x5, x3
  413c40:	mov	x4, x2
  413c44:	mov	x19, x0
  413c48:	stp	x29, x30, [sp, #32]
  413c4c:	add	x29, sp, #0x20
  413c50:	cbz	x1, 413c70 <__fxstatat@plt+0x11220>
  413c54:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413c58:	mov	x3, x1
  413c5c:	add	x2, x2, #0x181
  413c60:	mov	w1, #0x1                   	// #1
  413c64:	mov	x0, x19
  413c68:	bl	4027e0 <__fprintf_chk@plt>
  413c6c:	b	413c8c <__fxstatat@plt+0x1123c>
  413c70:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413c74:	add	x2, x2, #0x18d
  413c78:	mov	w1, #0x1                   	// #1
  413c7c:	mov	x0, x19
  413c80:	mov	x3, x4
  413c84:	mov	x4, x5
  413c88:	bl	4027e0 <__fprintf_chk@plt>
  413c8c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413c90:	add	x1, x1, #0x194
  413c94:	mov	w2, #0x5                   	// #5
  413c98:	mov	x0, xzr
  413c9c:	bl	402970 <dcgettext@plt>
  413ca0:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413ca4:	mov	x3, x0
  413ca8:	add	x2, x2, #0x45f
  413cac:	mov	w1, #0x1                   	// #1
  413cb0:	mov	w4, #0x7e3                 	// #2019
  413cb4:	mov	x0, x19
  413cb8:	bl	4027e0 <__fprintf_chk@plt>
  413cbc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413cc0:	add	x1, x1, #0x198
  413cc4:	mov	w2, #0x5                   	// #5
  413cc8:	mov	x0, xzr
  413ccc:	bl	402970 <dcgettext@plt>
  413cd0:	mov	x1, x19
  413cd4:	bl	402980 <fputs_unlocked@plt>
  413cd8:	cmp	x21, #0x9
  413cdc:	b.hi	413d30 <__fxstatat@plt+0x112e0>  // b.pmore
  413ce0:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413ce4:	add	x8, x8, #0x177
  413ce8:	adr	x9, 413cf8 <__fxstatat@plt+0x112a8>
  413cec:	ldrb	w10, [x8, x21]
  413cf0:	add	x9, x9, x10, lsl #2
  413cf4:	br	x9
  413cf8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413cfc:	add	x1, x1, #0x264
  413d00:	mov	w2, #0x5                   	// #5
  413d04:	mov	x0, xzr
  413d08:	bl	402970 <dcgettext@plt>
  413d0c:	ldr	x3, [x20]
  413d10:	mov	x2, x0
  413d14:	mov	x0, x19
  413d18:	ldp	x20, x19, [sp, #64]
  413d1c:	ldr	x21, [sp, #48]
  413d20:	ldp	x29, x30, [sp, #32]
  413d24:	mov	w1, #0x1                   	// #1
  413d28:	add	sp, sp, #0x50
  413d2c:	b	4027e0 <__fprintf_chk@plt>
  413d30:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413d34:	add	x1, x1, #0x3a3
  413d38:	b	413e94 <__fxstatat@plt+0x11444>
  413d3c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413d40:	add	x1, x1, #0x274
  413d44:	mov	w2, #0x5                   	// #5
  413d48:	mov	x0, xzr
  413d4c:	bl	402970 <dcgettext@plt>
  413d50:	ldp	x3, x4, [x20]
  413d54:	mov	x2, x0
  413d58:	mov	x0, x19
  413d5c:	ldp	x20, x19, [sp, #64]
  413d60:	ldr	x21, [sp, #48]
  413d64:	ldp	x29, x30, [sp, #32]
  413d68:	mov	w1, #0x1                   	// #1
  413d6c:	add	sp, sp, #0x50
  413d70:	b	4027e0 <__fprintf_chk@plt>
  413d74:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413d78:	add	x1, x1, #0x28b
  413d7c:	mov	w2, #0x5                   	// #5
  413d80:	mov	x0, xzr
  413d84:	bl	402970 <dcgettext@plt>
  413d88:	ldp	x3, x4, [x20]
  413d8c:	ldr	x5, [x20, #16]
  413d90:	mov	x2, x0
  413d94:	mov	x0, x19
  413d98:	ldp	x20, x19, [sp, #64]
  413d9c:	ldr	x21, [sp, #48]
  413da0:	ldp	x29, x30, [sp, #32]
  413da4:	mov	w1, #0x1                   	// #1
  413da8:	add	sp, sp, #0x50
  413dac:	b	4027e0 <__fprintf_chk@plt>
  413db0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413db4:	add	x1, x1, #0x2a7
  413db8:	mov	w2, #0x5                   	// #5
  413dbc:	mov	x0, xzr
  413dc0:	bl	402970 <dcgettext@plt>
  413dc4:	ldp	x3, x4, [x20]
  413dc8:	ldp	x5, x6, [x20, #16]
  413dcc:	mov	x2, x0
  413dd0:	mov	x0, x19
  413dd4:	ldp	x20, x19, [sp, #64]
  413dd8:	ldr	x21, [sp, #48]
  413ddc:	ldp	x29, x30, [sp, #32]
  413de0:	mov	w1, #0x1                   	// #1
  413de4:	add	sp, sp, #0x50
  413de8:	b	4027e0 <__fprintf_chk@plt>
  413dec:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413df0:	add	x1, x1, #0x2c7
  413df4:	mov	w2, #0x5                   	// #5
  413df8:	mov	x0, xzr
  413dfc:	bl	402970 <dcgettext@plt>
  413e00:	ldp	x3, x4, [x20]
  413e04:	ldp	x5, x6, [x20, #16]
  413e08:	ldr	x7, [x20, #32]
  413e0c:	mov	x2, x0
  413e10:	mov	x0, x19
  413e14:	ldp	x20, x19, [sp, #64]
  413e18:	ldr	x21, [sp, #48]
  413e1c:	ldp	x29, x30, [sp, #32]
  413e20:	mov	w1, #0x1                   	// #1
  413e24:	add	sp, sp, #0x50
  413e28:	b	4027e0 <__fprintf_chk@plt>
  413e2c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413e30:	add	x1, x1, #0x2eb
  413e34:	mov	w2, #0x5                   	// #5
  413e38:	mov	x0, xzr
  413e3c:	bl	402970 <dcgettext@plt>
  413e40:	ldp	x3, x4, [x20]
  413e44:	ldp	x5, x6, [x20, #16]
  413e48:	ldp	x7, x8, [x20, #32]
  413e4c:	mov	x2, x0
  413e50:	b	413e80 <__fxstatat@plt+0x11430>
  413e54:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413e58:	add	x1, x1, #0x313
  413e5c:	mov	w2, #0x5                   	// #5
  413e60:	mov	x0, xzr
  413e64:	bl	402970 <dcgettext@plt>
  413e68:	ldr	x9, [x20, #48]
  413e6c:	ldp	x3, x4, [x20]
  413e70:	ldp	x5, x6, [x20, #16]
  413e74:	ldp	x7, x8, [x20, #32]
  413e78:	mov	x2, x0
  413e7c:	str	x9, [sp, #8]
  413e80:	mov	w1, #0x1                   	// #1
  413e84:	str	x8, [sp]
  413e88:	b	413ef8 <__fxstatat@plt+0x114a8>
  413e8c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413e90:	add	x1, x1, #0x36f
  413e94:	mov	w2, #0x5                   	// #5
  413e98:	mov	x0, xzr
  413e9c:	bl	402970 <dcgettext@plt>
  413ea0:	ldp	x8, x9, [x20, #56]
  413ea4:	ldp	x3, x4, [x20]
  413ea8:	ldp	x5, x6, [x20, #16]
  413eac:	ldr	x7, [x20, #32]
  413eb0:	ldur	q0, [x20, #40]
  413eb4:	mov	x2, x0
  413eb8:	str	x9, [sp, #24]
  413ebc:	b	413eec <__fxstatat@plt+0x1149c>
  413ec0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  413ec4:	add	x1, x1, #0x33f
  413ec8:	mov	w2, #0x5                   	// #5
  413ecc:	mov	x0, xzr
  413ed0:	bl	402970 <dcgettext@plt>
  413ed4:	ldp	x3, x4, [x20]
  413ed8:	ldp	x5, x6, [x20, #16]
  413edc:	ldr	x7, [x20, #32]
  413ee0:	ldur	q0, [x20, #40]
  413ee4:	ldr	x8, [x20, #56]
  413ee8:	mov	x2, x0
  413eec:	str	x8, [sp, #16]
  413ef0:	mov	w1, #0x1                   	// #1
  413ef4:	str	q0, [sp]
  413ef8:	mov	x0, x19
  413efc:	bl	4027e0 <__fprintf_chk@plt>
  413f00:	ldp	x20, x19, [sp, #64]
  413f04:	ldr	x21, [sp, #48]
  413f08:	ldp	x29, x30, [sp, #32]
  413f0c:	add	sp, sp, #0x50
  413f10:	ret
  413f14:	mov	x8, xzr
  413f18:	ldr	x9, [x4, x8, lsl #3]
  413f1c:	add	x8, x8, #0x1
  413f20:	cbnz	x9, 413f18 <__fxstatat@plt+0x114c8>
  413f24:	sub	x5, x8, #0x1
  413f28:	b	413c28 <__fxstatat@plt+0x111d8>
  413f2c:	sub	sp, sp, #0x60
  413f30:	stp	x29, x30, [sp, #80]
  413f34:	ldr	w9, [x4, #24]
  413f38:	add	x29, sp, #0x50
  413f3c:	mov	w8, w9
  413f40:	tbz	w9, #31, 413f74 <__fxstatat@plt+0x11524>
  413f44:	add	w8, w9, #0x8
  413f48:	cmn	w9, #0x8
  413f4c:	str	w8, [x4, #24]
  413f50:	b.gt	413f74 <__fxstatat@plt+0x11524>
  413f54:	ldr	x10, [x4, #8]
  413f58:	sxtw	x9, w9
  413f5c:	add	x9, x10, x9
  413f60:	ldr	x9, [x9]
  413f64:	str	x9, [sp]
  413f68:	cbnz	x9, 413f8c <__fxstatat@plt+0x1153c>
  413f6c:	mov	x5, xzr
  413f70:	b	41422c <__fxstatat@plt+0x117dc>
  413f74:	ldr	x9, [x4]
  413f78:	add	x10, x9, #0x8
  413f7c:	str	x10, [x4]
  413f80:	ldr	x9, [x9]
  413f84:	str	x9, [sp]
  413f88:	cbz	x9, 413f6c <__fxstatat@plt+0x1151c>
  413f8c:	tbnz	w8, #31, 413f98 <__fxstatat@plt+0x11548>
  413f90:	mov	w9, w8
  413f94:	b	413fc4 <__fxstatat@plt+0x11574>
  413f98:	add	w9, w8, #0x8
  413f9c:	cmn	w8, #0x8
  413fa0:	str	w9, [x4, #24]
  413fa4:	b.gt	413fc4 <__fxstatat@plt+0x11574>
  413fa8:	ldr	x10, [x4, #8]
  413fac:	add	x8, x10, w8, sxtw
  413fb0:	ldr	x8, [x8]
  413fb4:	str	x8, [sp, #8]
  413fb8:	cbnz	x8, 413fdc <__fxstatat@plt+0x1158c>
  413fbc:	mov	w5, #0x1                   	// #1
  413fc0:	b	41422c <__fxstatat@plt+0x117dc>
  413fc4:	ldr	x8, [x4]
  413fc8:	add	x10, x8, #0x8
  413fcc:	str	x10, [x4]
  413fd0:	ldr	x8, [x8]
  413fd4:	str	x8, [sp, #8]
  413fd8:	cbz	x8, 413fbc <__fxstatat@plt+0x1156c>
  413fdc:	tbnz	w9, #31, 413fe8 <__fxstatat@plt+0x11598>
  413fe0:	mov	w8, w9
  413fe4:	b	414014 <__fxstatat@plt+0x115c4>
  413fe8:	add	w8, w9, #0x8
  413fec:	cmn	w9, #0x8
  413ff0:	str	w8, [x4, #24]
  413ff4:	b.gt	414014 <__fxstatat@plt+0x115c4>
  413ff8:	ldr	x10, [x4, #8]
  413ffc:	add	x9, x10, w9, sxtw
  414000:	ldr	x9, [x9]
  414004:	str	x9, [sp, #16]
  414008:	cbnz	x9, 41402c <__fxstatat@plt+0x115dc>
  41400c:	mov	w5, #0x2                   	// #2
  414010:	b	41422c <__fxstatat@plt+0x117dc>
  414014:	ldr	x9, [x4]
  414018:	add	x10, x9, #0x8
  41401c:	str	x10, [x4]
  414020:	ldr	x9, [x9]
  414024:	str	x9, [sp, #16]
  414028:	cbz	x9, 41400c <__fxstatat@plt+0x115bc>
  41402c:	tbnz	w8, #31, 414038 <__fxstatat@plt+0x115e8>
  414030:	mov	w9, w8
  414034:	b	414064 <__fxstatat@plt+0x11614>
  414038:	add	w9, w8, #0x8
  41403c:	cmn	w8, #0x8
  414040:	str	w9, [x4, #24]
  414044:	b.gt	414064 <__fxstatat@plt+0x11614>
  414048:	ldr	x10, [x4, #8]
  41404c:	add	x8, x10, w8, sxtw
  414050:	ldr	x8, [x8]
  414054:	str	x8, [sp, #24]
  414058:	cbnz	x8, 41407c <__fxstatat@plt+0x1162c>
  41405c:	mov	w5, #0x3                   	// #3
  414060:	b	41422c <__fxstatat@plt+0x117dc>
  414064:	ldr	x8, [x4]
  414068:	add	x10, x8, #0x8
  41406c:	str	x10, [x4]
  414070:	ldr	x8, [x8]
  414074:	str	x8, [sp, #24]
  414078:	cbz	x8, 41405c <__fxstatat@plt+0x1160c>
  41407c:	tbnz	w9, #31, 414088 <__fxstatat@plt+0x11638>
  414080:	mov	w8, w9
  414084:	b	4140b4 <__fxstatat@plt+0x11664>
  414088:	add	w8, w9, #0x8
  41408c:	cmn	w9, #0x8
  414090:	str	w8, [x4, #24]
  414094:	b.gt	4140b4 <__fxstatat@plt+0x11664>
  414098:	ldr	x10, [x4, #8]
  41409c:	add	x9, x10, w9, sxtw
  4140a0:	ldr	x9, [x9]
  4140a4:	str	x9, [sp, #32]
  4140a8:	cbnz	x9, 4140cc <__fxstatat@plt+0x1167c>
  4140ac:	mov	w5, #0x4                   	// #4
  4140b0:	b	41422c <__fxstatat@plt+0x117dc>
  4140b4:	ldr	x9, [x4]
  4140b8:	add	x10, x9, #0x8
  4140bc:	str	x10, [x4]
  4140c0:	ldr	x9, [x9]
  4140c4:	str	x9, [sp, #32]
  4140c8:	cbz	x9, 4140ac <__fxstatat@plt+0x1165c>
  4140cc:	tbnz	w8, #31, 4140d8 <__fxstatat@plt+0x11688>
  4140d0:	mov	w9, w8
  4140d4:	b	4140f4 <__fxstatat@plt+0x116a4>
  4140d8:	add	w9, w8, #0x8
  4140dc:	cmn	w8, #0x8
  4140e0:	str	w9, [x4, #24]
  4140e4:	b.gt	4140f4 <__fxstatat@plt+0x116a4>
  4140e8:	ldr	x10, [x4, #8]
  4140ec:	add	x8, x10, w8, sxtw
  4140f0:	b	414100 <__fxstatat@plt+0x116b0>
  4140f4:	ldr	x8, [x4]
  4140f8:	add	x10, x8, #0x8
  4140fc:	str	x10, [x4]
  414100:	ldr	x8, [x8]
  414104:	str	x8, [sp, #40]
  414108:	cbz	x8, 414118 <__fxstatat@plt+0x116c8>
  41410c:	tbnz	w9, #31, 414120 <__fxstatat@plt+0x116d0>
  414110:	mov	w8, w9
  414114:	b	41413c <__fxstatat@plt+0x116ec>
  414118:	mov	w5, #0x5                   	// #5
  41411c:	b	41422c <__fxstatat@plt+0x117dc>
  414120:	add	w8, w9, #0x8
  414124:	cmn	w9, #0x8
  414128:	str	w8, [x4, #24]
  41412c:	b.gt	41413c <__fxstatat@plt+0x116ec>
  414130:	ldr	x10, [x4, #8]
  414134:	add	x9, x10, w9, sxtw
  414138:	b	414148 <__fxstatat@plt+0x116f8>
  41413c:	ldr	x9, [x4]
  414140:	add	x10, x9, #0x8
  414144:	str	x10, [x4]
  414148:	ldr	x9, [x9]
  41414c:	str	x9, [sp, #48]
  414150:	cbz	x9, 414160 <__fxstatat@plt+0x11710>
  414154:	tbnz	w8, #31, 414168 <__fxstatat@plt+0x11718>
  414158:	mov	w9, w8
  41415c:	b	414184 <__fxstatat@plt+0x11734>
  414160:	mov	w5, #0x6                   	// #6
  414164:	b	41422c <__fxstatat@plt+0x117dc>
  414168:	add	w9, w8, #0x8
  41416c:	cmn	w8, #0x8
  414170:	str	w9, [x4, #24]
  414174:	b.gt	414184 <__fxstatat@plt+0x11734>
  414178:	ldr	x10, [x4, #8]
  41417c:	add	x8, x10, w8, sxtw
  414180:	b	414190 <__fxstatat@plt+0x11740>
  414184:	ldr	x8, [x4]
  414188:	add	x10, x8, #0x8
  41418c:	str	x10, [x4]
  414190:	ldr	x8, [x8]
  414194:	str	x8, [sp, #56]
  414198:	cbz	x8, 4141a8 <__fxstatat@plt+0x11758>
  41419c:	tbnz	w9, #31, 4141b0 <__fxstatat@plt+0x11760>
  4141a0:	mov	w8, w9
  4141a4:	b	4141cc <__fxstatat@plt+0x1177c>
  4141a8:	mov	w5, #0x7                   	// #7
  4141ac:	b	41422c <__fxstatat@plt+0x117dc>
  4141b0:	add	w8, w9, #0x8
  4141b4:	cmn	w9, #0x8
  4141b8:	str	w8, [x4, #24]
  4141bc:	b.gt	4141cc <__fxstatat@plt+0x1177c>
  4141c0:	ldr	x10, [x4, #8]
  4141c4:	add	x9, x10, w9, sxtw
  4141c8:	b	4141d8 <__fxstatat@plt+0x11788>
  4141cc:	ldr	x9, [x4]
  4141d0:	add	x10, x9, #0x8
  4141d4:	str	x10, [x4]
  4141d8:	ldr	x9, [x9]
  4141dc:	str	x9, [sp, #64]
  4141e0:	cbz	x9, 414228 <__fxstatat@plt+0x117d8>
  4141e4:	tbz	w8, #31, 414204 <__fxstatat@plt+0x117b4>
  4141e8:	add	w9, w8, #0x8
  4141ec:	cmn	w8, #0x8
  4141f0:	str	w9, [x4, #24]
  4141f4:	b.gt	414204 <__fxstatat@plt+0x117b4>
  4141f8:	ldr	x9, [x4, #8]
  4141fc:	add	x8, x9, w8, sxtw
  414200:	b	414210 <__fxstatat@plt+0x117c0>
  414204:	ldr	x8, [x4]
  414208:	add	x9, x8, #0x8
  41420c:	str	x9, [x4]
  414210:	ldr	x8, [x8]
  414214:	str	x8, [sp, #72]
  414218:	cmp	x8, #0x0
  41421c:	mov	w8, #0x9                   	// #9
  414220:	cinc	x5, x8, ne  // ne = any
  414224:	b	41422c <__fxstatat@plt+0x117dc>
  414228:	mov	w5, #0x8                   	// #8
  41422c:	mov	x4, sp
  414230:	bl	413c28 <__fxstatat@plt+0x111d8>
  414234:	ldp	x29, x30, [sp, #80]
  414238:	add	sp, sp, #0x60
  41423c:	ret
  414240:	sub	sp, sp, #0xf0
  414244:	stp	x29, x30, [sp, #224]
  414248:	add	x29, sp, #0xe0
  41424c:	mov	x8, #0xffffffffffffffe0    	// #-32
  414250:	mov	x9, sp
  414254:	sub	x10, x29, #0x60
  414258:	movk	x8, #0xff80, lsl #32
  41425c:	add	x11, x29, #0x10
  414260:	add	x9, x9, #0x80
  414264:	add	x10, x10, #0x20
  414268:	stp	x9, x8, [x29, #-16]
  41426c:	stp	x11, x10, [x29, #-32]
  414270:	stp	x4, x5, [x29, #-96]
  414274:	stp	x6, x7, [x29, #-80]
  414278:	stp	q0, q1, [sp]
  41427c:	ldp	q0, q1, [x29, #-32]
  414280:	sub	x4, x29, #0x40
  414284:	stp	q2, q3, [sp, #32]
  414288:	stp	q4, q5, [sp, #64]
  41428c:	stp	q6, q7, [sp, #96]
  414290:	stp	q0, q1, [x29, #-64]
  414294:	bl	413f2c <__fxstatat@plt+0x114dc>
  414298:	ldp	x29, x30, [sp, #224]
  41429c:	add	sp, sp, #0xf0
  4142a0:	ret
  4142a4:	stp	x29, x30, [sp, #-16]!
  4142a8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4142ac:	add	x1, x1, #0x3df
  4142b0:	mov	w2, #0x5                   	// #5
  4142b4:	mov	x0, xzr
  4142b8:	mov	x29, sp
  4142bc:	bl	402970 <dcgettext@plt>
  4142c0:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4142c4:	mov	x1, x0
  4142c8:	add	x2, x2, #0x3f4
  4142cc:	mov	w0, #0x1                   	// #1
  4142d0:	bl	402670 <__printf_chk@plt>
  4142d4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4142d8:	add	x1, x1, #0x40a
  4142dc:	mov	w2, #0x5                   	// #5
  4142e0:	mov	x0, xzr
  4142e4:	bl	402970 <dcgettext@plt>
  4142e8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4142ec:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4142f0:	mov	x1, x0
  4142f4:	add	x2, x2, #0x3ee
  4142f8:	add	x3, x3, #0xaf2
  4142fc:	mov	w0, #0x1                   	// #1
  414300:	bl	402670 <__printf_chk@plt>
  414304:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414308:	add	x1, x1, #0x41e
  41430c:	mov	w2, #0x5                   	// #5
  414310:	mov	x0, xzr
  414314:	bl	402970 <dcgettext@plt>
  414318:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  41431c:	ldr	x1, [x8, #1456]
  414320:	ldp	x29, x30, [sp], #16
  414324:	b	402980 <fputs_unlocked@plt>
  414328:	stp	x29, x30, [sp, #-32]!
  41432c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  414330:	udiv	x8, x8, x1
  414334:	cmp	x8, x0
  414338:	str	x19, [sp, #16]
  41433c:	mov	x29, sp
  414340:	b.cc	414364 <__fxstatat@plt+0x11914>  // b.lo, b.ul, b.last
  414344:	mul	x19, x1, x0
  414348:	mov	x0, x19
  41434c:	bl	4025f0 <malloc@plt>
  414350:	cbz	x19, 414358 <__fxstatat@plt+0x11908>
  414354:	cbz	x0, 414364 <__fxstatat@plt+0x11914>
  414358:	ldr	x19, [sp, #16]
  41435c:	ldp	x29, x30, [sp], #32
  414360:	ret
  414364:	bl	4146a4 <__fxstatat@plt+0x11c54>
  414368:	stp	x29, x30, [sp, #-32]!
  41436c:	str	x19, [sp, #16]
  414370:	mov	x29, sp
  414374:	mov	x19, x0
  414378:	bl	4025f0 <malloc@plt>
  41437c:	cbz	x19, 414384 <__fxstatat@plt+0x11934>
  414380:	cbz	x0, 414390 <__fxstatat@plt+0x11940>
  414384:	ldr	x19, [sp, #16]
  414388:	ldp	x29, x30, [sp], #32
  41438c:	ret
  414390:	bl	4146a4 <__fxstatat@plt+0x11c54>
  414394:	stp	x29, x30, [sp, #-32]!
  414398:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41439c:	udiv	x8, x8, x2
  4143a0:	cmp	x8, x1
  4143a4:	str	x19, [sp, #16]
  4143a8:	mov	x29, sp
  4143ac:	b.cc	4143e4 <__fxstatat@plt+0x11994>  // b.lo, b.ul, b.last
  4143b0:	mul	x19, x2, x1
  4143b4:	cbz	x0, 4143c8 <__fxstatat@plt+0x11978>
  4143b8:	cbnz	x19, 4143c8 <__fxstatat@plt+0x11978>
  4143bc:	bl	402840 <free@plt>
  4143c0:	mov	x0, xzr
  4143c4:	b	4143d8 <__fxstatat@plt+0x11988>
  4143c8:	mov	x1, x19
  4143cc:	bl	4026f0 <realloc@plt>
  4143d0:	cbz	x19, 4143d8 <__fxstatat@plt+0x11988>
  4143d4:	cbz	x0, 4143e4 <__fxstatat@plt+0x11994>
  4143d8:	ldr	x19, [sp, #16]
  4143dc:	ldp	x29, x30, [sp], #32
  4143e0:	ret
  4143e4:	bl	4146a4 <__fxstatat@plt+0x11c54>
  4143e8:	stp	x29, x30, [sp, #-32]!
  4143ec:	str	x19, [sp, #16]
  4143f0:	mov	x19, x1
  4143f4:	mov	x29, sp
  4143f8:	cbz	x0, 41440c <__fxstatat@plt+0x119bc>
  4143fc:	cbnz	x19, 41440c <__fxstatat@plt+0x119bc>
  414400:	bl	402840 <free@plt>
  414404:	mov	x0, xzr
  414408:	b	41441c <__fxstatat@plt+0x119cc>
  41440c:	mov	x1, x19
  414410:	bl	4026f0 <realloc@plt>
  414414:	cbz	x19, 41441c <__fxstatat@plt+0x119cc>
  414418:	cbz	x0, 414428 <__fxstatat@plt+0x119d8>
  41441c:	ldr	x19, [sp, #16]
  414420:	ldp	x29, x30, [sp], #32
  414424:	ret
  414428:	bl	4146a4 <__fxstatat@plt+0x11c54>
  41442c:	stp	x29, x30, [sp, #-32]!
  414430:	ldr	x8, [x1]
  414434:	str	x19, [sp, #16]
  414438:	mov	x29, sp
  41443c:	cbz	x0, 414480 <__fxstatat@plt+0x11a30>
  414440:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  414444:	movk	x9, #0x5554
  414448:	udiv	x9, x9, x2
  41444c:	cmp	x9, x8
  414450:	b.ls	4144bc <__fxstatat@plt+0x11a6c>  // b.plast
  414454:	add	x8, x8, x8, lsr #1
  414458:	add	x9, x8, #0x1
  41445c:	mul	x8, x9, x2
  414460:	str	x9, [x1]
  414464:	cbz	x8, 4144c0 <__fxstatat@plt+0x11a70>
  414468:	mov	x1, x8
  41446c:	bl	4026f0 <realloc@plt>
  414470:	cbz	x0, 4144bc <__fxstatat@plt+0x11a6c>
  414474:	ldr	x19, [sp, #16]
  414478:	ldp	x29, x30, [sp], #32
  41447c:	ret
  414480:	cbnz	x8, 414494 <__fxstatat@plt+0x11a44>
  414484:	mov	w8, #0x80                  	// #128
  414488:	udiv	x8, x8, x2
  41448c:	cmp	x2, #0x80
  414490:	cinc	x8, x8, hi  // hi = pmore
  414494:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  414498:	udiv	x9, x9, x2
  41449c:	cmp	x9, x8
  4144a0:	b.cc	4144bc <__fxstatat@plt+0x11a6c>  // b.lo, b.ul, b.last
  4144a4:	mul	x19, x8, x2
  4144a8:	mov	x0, x19
  4144ac:	str	x8, [x1]
  4144b0:	bl	4025f0 <malloc@plt>
  4144b4:	cbz	x19, 414474 <__fxstatat@plt+0x11a24>
  4144b8:	cbnz	x0, 414474 <__fxstatat@plt+0x11a24>
  4144bc:	bl	4146a4 <__fxstatat@plt+0x11c54>
  4144c0:	bl	402840 <free@plt>
  4144c4:	mov	x0, xzr
  4144c8:	ldr	x19, [sp, #16]
  4144cc:	ldp	x29, x30, [sp], #32
  4144d0:	ret
  4144d4:	stp	x29, x30, [sp, #-32]!
  4144d8:	str	x19, [sp, #16]
  4144dc:	mov	x29, sp
  4144e0:	mov	x19, x0
  4144e4:	bl	4025f0 <malloc@plt>
  4144e8:	cbz	x19, 4144f0 <__fxstatat@plt+0x11aa0>
  4144ec:	cbz	x0, 4144fc <__fxstatat@plt+0x11aac>
  4144f0:	ldr	x19, [sp, #16]
  4144f4:	ldp	x29, x30, [sp], #32
  4144f8:	ret
  4144fc:	bl	4146a4 <__fxstatat@plt+0x11c54>
  414500:	stp	x29, x30, [sp, #-16]!
  414504:	ldr	x8, [x1]
  414508:	mov	x29, sp
  41450c:	cbz	x0, 414540 <__fxstatat@plt+0x11af0>
  414510:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  414514:	movk	x9, #0x5554
  414518:	cmp	x8, x9
  41451c:	b.cs	414584 <__fxstatat@plt+0x11b34>  // b.hs, b.nlast
  414520:	add	x8, x8, x8, lsr #1
  414524:	adds	x8, x8, #0x1
  414528:	str	x8, [x1]
  41452c:	b.eq	414560 <__fxstatat@plt+0x11b10>  // b.none
  414530:	mov	x1, x8
  414534:	bl	4026f0 <realloc@plt>
  414538:	cbnz	x0, 414558 <__fxstatat@plt+0x11b08>
  41453c:	b	414584 <__fxstatat@plt+0x11b34>
  414540:	cbz	x8, 414570 <__fxstatat@plt+0x11b20>
  414544:	tbnz	x8, #63, 414584 <__fxstatat@plt+0x11b34>
  414548:	mov	x0, x8
  41454c:	str	x8, [x1]
  414550:	bl	4025f0 <malloc@plt>
  414554:	cbz	x0, 414584 <__fxstatat@plt+0x11b34>
  414558:	ldp	x29, x30, [sp], #16
  41455c:	ret
  414560:	bl	402840 <free@plt>
  414564:	mov	x0, xzr
  414568:	ldp	x29, x30, [sp], #16
  41456c:	ret
  414570:	mov	w8, #0x80                  	// #128
  414574:	mov	x0, x8
  414578:	str	x8, [x1]
  41457c:	bl	4025f0 <malloc@plt>
  414580:	cbnz	x0, 414558 <__fxstatat@plt+0x11b08>
  414584:	bl	4146a4 <__fxstatat@plt+0x11c54>
  414588:	stp	x29, x30, [sp, #-32]!
  41458c:	stp	x20, x19, [sp, #16]
  414590:	mov	x29, sp
  414594:	mov	x19, x0
  414598:	bl	4025f0 <malloc@plt>
  41459c:	mov	x20, x0
  4145a0:	cbz	x19, 4145a8 <__fxstatat@plt+0x11b58>
  4145a4:	cbz	x20, 4145c8 <__fxstatat@plt+0x11b78>
  4145a8:	mov	x0, x20
  4145ac:	mov	w1, wzr
  4145b0:	mov	x2, x19
  4145b4:	bl	402680 <memset@plt>
  4145b8:	mov	x0, x20
  4145bc:	ldp	x20, x19, [sp, #16]
  4145c0:	ldp	x29, x30, [sp], #32
  4145c4:	ret
  4145c8:	bl	4146a4 <__fxstatat@plt+0x11c54>
  4145cc:	stp	x29, x30, [sp, #-16]!
  4145d0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4145d4:	udiv	x8, x8, x1
  4145d8:	cmp	x8, x0
  4145dc:	mov	x29, sp
  4145e0:	b.cc	4145f4 <__fxstatat@plt+0x11ba4>  // b.lo, b.ul, b.last
  4145e4:	bl	4150fc <__fxstatat@plt+0x126ac>
  4145e8:	cbz	x0, 4145f4 <__fxstatat@plt+0x11ba4>
  4145ec:	ldp	x29, x30, [sp], #16
  4145f0:	ret
  4145f4:	bl	4146a4 <__fxstatat@plt+0x11c54>
  4145f8:	stp	x29, x30, [sp, #-48]!
  4145fc:	stp	x20, x19, [sp, #32]
  414600:	mov	x20, x0
  414604:	mov	x0, x1
  414608:	str	x21, [sp, #16]
  41460c:	mov	x29, sp
  414610:	mov	x19, x1
  414614:	bl	4025f0 <malloc@plt>
  414618:	mov	x21, x0
  41461c:	cbz	x19, 414624 <__fxstatat@plt+0x11bd4>
  414620:	cbz	x21, 414648 <__fxstatat@plt+0x11bf8>
  414624:	mov	x0, x21
  414628:	mov	x1, x20
  41462c:	mov	x2, x19
  414630:	bl	4023c0 <memcpy@plt>
  414634:	mov	x0, x21
  414638:	ldp	x20, x19, [sp, #32]
  41463c:	ldr	x21, [sp, #16]
  414640:	ldp	x29, x30, [sp], #48
  414644:	ret
  414648:	bl	4146a4 <__fxstatat@plt+0x11c54>
  41464c:	stp	x29, x30, [sp, #-48]!
  414650:	str	x21, [sp, #16]
  414654:	stp	x20, x19, [sp, #32]
  414658:	mov	x29, sp
  41465c:	mov	x19, x0
  414660:	bl	402430 <strlen@plt>
  414664:	add	x20, x0, #0x1
  414668:	mov	x0, x20
  41466c:	bl	4025f0 <malloc@plt>
  414670:	mov	x21, x0
  414674:	cbz	x20, 41467c <__fxstatat@plt+0x11c2c>
  414678:	cbz	x21, 4146a0 <__fxstatat@plt+0x11c50>
  41467c:	mov	x0, x21
  414680:	mov	x1, x19
  414684:	mov	x2, x20
  414688:	bl	4023c0 <memcpy@plt>
  41468c:	mov	x0, x21
  414690:	ldp	x20, x19, [sp, #32]
  414694:	ldr	x21, [sp, #16]
  414698:	ldp	x29, x30, [sp], #48
  41469c:	ret
  4146a0:	bl	4146a4 <__fxstatat@plt+0x11c54>
  4146a4:	stp	x29, x30, [sp, #-32]!
  4146a8:	str	x19, [sp, #16]
  4146ac:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  4146b0:	ldr	w19, [x8, #1312]
  4146b4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4146b8:	add	x1, x1, #0x48e
  4146bc:	mov	w2, #0x5                   	// #5
  4146c0:	mov	x0, xzr
  4146c4:	mov	x29, sp
  4146c8:	bl	402970 <dcgettext@plt>
  4146cc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4146d0:	mov	x3, x0
  4146d4:	add	x2, x2, #0xc0f
  4146d8:	mov	w0, w19
  4146dc:	mov	w1, wzr
  4146e0:	bl	402490 <error@plt>
  4146e4:	bl	402770 <abort@plt>
  4146e8:	sub	sp, sp, #0x50
  4146ec:	stp	x24, x23, [sp, #32]
  4146f0:	stp	x22, x21, [sp, #48]
  4146f4:	mov	x22, x3
  4146f8:	mov	x24, x2
  4146fc:	mov	w2, w1
  414700:	add	x3, sp, #0x8
  414704:	mov	x1, xzr
  414708:	stp	x29, x30, [sp, #16]
  41470c:	stp	x20, x19, [sp, #64]
  414710:	add	x29, sp, #0x10
  414714:	mov	w20, w6
  414718:	mov	x19, x5
  41471c:	mov	x21, x0
  414720:	bl	414d5c <__fxstatat@plt+0x1230c>
  414724:	cbz	w0, 414754 <__fxstatat@plt+0x11d04>
  414728:	cmp	w0, #0x1
  41472c:	b.eq	414744 <__fxstatat@plt+0x11cf4>  // b.none
  414730:	cmp	w0, #0x3
  414734:	b.ne	414780 <__fxstatat@plt+0x11d30>  // b.any
  414738:	bl	4029e0 <__errno_location@plt>
  41473c:	str	wzr, [x0]
  414740:	b	414784 <__fxstatat@plt+0x11d34>
  414744:	bl	4029e0 <__errno_location@plt>
  414748:	mov	w8, #0x4b                  	// #75
  41474c:	str	w8, [x0]
  414750:	b	414784 <__fxstatat@plt+0x11d34>
  414754:	ldr	x23, [sp, #8]
  414758:	cmp	x23, x24
  41475c:	b.cc	414768 <__fxstatat@plt+0x11d18>  // b.lo, b.ul, b.last
  414760:	cmp	x23, x22
  414764:	b.ls	4147c0 <__fxstatat@plt+0x11d70>  // b.plast
  414768:	bl	4029e0 <__errno_location@plt>
  41476c:	lsr	x8, x23, #30
  414770:	cbnz	x8, 414748 <__fxstatat@plt+0x11cf8>
  414774:	mov	w8, #0x22                  	// #34
  414778:	str	w8, [x0]
  41477c:	b	414784 <__fxstatat@plt+0x11d34>
  414780:	bl	4029e0 <__errno_location@plt>
  414784:	ldr	w8, [x0]
  414788:	cmp	w20, #0x0
  41478c:	csinc	w20, w20, wzr, ne  // ne = any
  414790:	mov	x0, x21
  414794:	cmp	w8, #0x16
  414798:	csel	w22, wzr, w8, eq  // eq = none
  41479c:	bl	413aa8 <__fxstatat@plt+0x11058>
  4147a0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  4147a4:	mov	x4, x0
  4147a8:	add	x2, x2, #0x369
  4147ac:	mov	w0, w20
  4147b0:	mov	w1, w22
  4147b4:	mov	x3, x19
  4147b8:	bl	402490 <error@plt>
  4147bc:	ldr	x23, [sp, #8]
  4147c0:	mov	x0, x23
  4147c4:	ldp	x20, x19, [sp, #64]
  4147c8:	ldp	x22, x21, [sp, #48]
  4147cc:	ldp	x24, x23, [sp, #32]
  4147d0:	ldp	x29, x30, [sp, #16]
  4147d4:	add	sp, sp, #0x50
  4147d8:	ret
  4147dc:	mov	w6, w5
  4147e0:	mov	x5, x4
  4147e4:	mov	x4, x3
  4147e8:	mov	x3, x2
  4147ec:	mov	x2, x1
  4147f0:	mov	w1, #0xa                   	// #10
  4147f4:	b	4146e8 <__fxstatat@plt+0x11c98>
  4147f8:	stp	x29, x30, [sp, #-32]!
  4147fc:	mov	x0, xzr
  414800:	mov	x1, xzr
  414804:	str	x19, [sp, #16]
  414808:	mov	x29, sp
  41480c:	bl	402400 <getcwd@plt>
  414810:	mov	x19, x0
  414814:	cbnz	x0, 414828 <__fxstatat@plt+0x11dd8>
  414818:	bl	4029e0 <__errno_location@plt>
  41481c:	ldr	w8, [x0]
  414820:	cmp	w8, #0xc
  414824:	b.eq	414838 <__fxstatat@plt+0x11de8>  // b.none
  414828:	mov	x0, x19
  41482c:	ldr	x19, [sp, #16]
  414830:	ldp	x29, x30, [sp], #32
  414834:	ret
  414838:	bl	4146a4 <__fxstatat@plt+0x11c54>
  41483c:	sub	sp, sp, #0x50
  414840:	stp	x24, x23, [sp, #32]
  414844:	mov	x23, #0x1001                	// #4097
  414848:	movk	x23, #0x40, lsl #16
  41484c:	stp	x22, x21, [sp, #48]
  414850:	stp	x20, x19, [sp, #64]
  414854:	mov	x19, xzr
  414858:	mov	w8, #0x22                  	// #34
  41485c:	mov	w22, #0x1                   	// #1
  414860:	movk	x23, #0x10, lsl #32
  414864:	stp	x29, x30, [sp, #16]
  414868:	add	x29, sp, #0x10
  41486c:	str	x8, [sp, #8]
  414870:	b	41487c <__fxstatat@plt+0x11e2c>
  414874:	ldrb	w8, [x19, x24]
  414878:	cbz	w8, 4148e0 <__fxstatat@plt+0x11e90>
  41487c:	add	x1, sp, #0x8
  414880:	mov	x0, x19
  414884:	bl	414500 <__fxstatat@plt+0x11ab0>
  414888:	ldr	x8, [sp, #8]
  41488c:	mov	x19, x0
  414890:	sub	x24, x8, #0x2
  414894:	sub	x21, x8, #0x1
  414898:	strb	wzr, [x0, x24]
  41489c:	bl	4029e0 <__errno_location@plt>
  4148a0:	mov	x20, x0
  4148a4:	str	wzr, [x0]
  4148a8:	mov	x0, x19
  4148ac:	mov	x1, x21
  4148b0:	bl	402930 <gethostname@plt>
  4148b4:	cbz	w0, 414874 <__fxstatat@plt+0x11e24>
  4148b8:	ldr	w21, [x20]
  4148bc:	cmp	w21, #0x24
  4148c0:	b.hi	4148d0 <__fxstatat@plt+0x11e80>  // b.pmore
  4148c4:	lsl	x8, x22, x21
  4148c8:	tst	x8, x23
  4148cc:	b.ne	41487c <__fxstatat@plt+0x11e2c>  // b.any
  4148d0:	mov	x0, x19
  4148d4:	bl	402840 <free@plt>
  4148d8:	mov	x19, xzr
  4148dc:	str	w21, [x20]
  4148e0:	mov	x0, x19
  4148e4:	ldp	x20, x19, [sp, #64]
  4148e8:	ldp	x22, x21, [sp, #48]
  4148ec:	ldp	x24, x23, [sp, #32]
  4148f0:	ldp	x29, x30, [sp, #16]
  4148f4:	add	sp, sp, #0x50
  4148f8:	ret
  4148fc:	stp	x29, x30, [sp, #-80]!
  414900:	cmp	w2, #0x25
  414904:	str	x25, [sp, #16]
  414908:	stp	x24, x23, [sp, #32]
  41490c:	stp	x22, x21, [sp, #48]
  414910:	stp	x20, x19, [sp, #64]
  414914:	mov	x29, sp
  414918:	b.cs	414c78 <__fxstatat@plt+0x12228>  // b.hs, b.nlast
  41491c:	mov	x23, x4
  414920:	mov	x19, x3
  414924:	mov	w22, w2
  414928:	mov	x21, x1
  41492c:	mov	x20, x0
  414930:	bl	4029e0 <__errno_location@plt>
  414934:	mov	x24, x0
  414938:	str	wzr, [x0]
  41493c:	bl	402820 <__ctype_b_loc@plt>
  414940:	ldr	x8, [x0]
  414944:	mov	x10, x20
  414948:	ldrb	w9, [x10], #1
  41494c:	ldrh	w11, [x8, x9, lsl #1]
  414950:	tbnz	w11, #13, 414948 <__fxstatat@plt+0x11ef8>
  414954:	cmp	x21, #0x0
  414958:	add	x8, x29, #0x18
  41495c:	csel	x21, x8, x21, eq  // eq = none
  414960:	cmp	w9, #0x2d
  414964:	b.ne	414970 <__fxstatat@plt+0x11f20>  // b.any
  414968:	mov	w20, #0x4                   	// #4
  41496c:	b	414c48 <__fxstatat@plt+0x121f8>
  414970:	mov	x0, x20
  414974:	mov	x1, x21
  414978:	mov	w2, w22
  41497c:	bl	402420 <strtoul@plt>
  414980:	ldr	x25, [x21]
  414984:	cmp	x25, x20
  414988:	b.eq	4149b4 <__fxstatat@plt+0x11f64>  // b.none
  41498c:	ldr	w20, [x24]
  414990:	mov	x22, x0
  414994:	cbz	w20, 4149a4 <__fxstatat@plt+0x11f54>
  414998:	cmp	w20, #0x22
  41499c:	b.ne	414968 <__fxstatat@plt+0x11f18>  // b.any
  4149a0:	mov	w20, #0x1                   	// #1
  4149a4:	cbz	x23, 414c44 <__fxstatat@plt+0x121f4>
  4149a8:	ldrb	w24, [x25]
  4149ac:	cbnz	w24, 4149dc <__fxstatat@plt+0x11f8c>
  4149b0:	b	414c44 <__fxstatat@plt+0x121f4>
  4149b4:	cbz	x23, 414968 <__fxstatat@plt+0x11f18>
  4149b8:	ldrb	w1, [x20]
  4149bc:	cbz	w1, 414968 <__fxstatat@plt+0x11f18>
  4149c0:	mov	x0, x23
  4149c4:	bl	402870 <strchr@plt>
  4149c8:	cbz	x0, 414968 <__fxstatat@plt+0x11f18>
  4149cc:	mov	w20, wzr
  4149d0:	mov	w22, #0x1                   	// #1
  4149d4:	ldrb	w24, [x25]
  4149d8:	cbz	w24, 414c44 <__fxstatat@plt+0x121f4>
  4149dc:	mov	x0, x23
  4149e0:	mov	w1, w24
  4149e4:	bl	402870 <strchr@plt>
  4149e8:	cbz	x0, 414ab4 <__fxstatat@plt+0x12064>
  4149ec:	sub	w10, w24, #0x45
  4149f0:	mov	w8, #0x1                   	// #1
  4149f4:	cmp	w10, #0x2f
  4149f8:	mov	w9, #0x400                 	// #1024
  4149fc:	b.hi	414a74 <__fxstatat@plt+0x12024>  // b.pmore
  414a00:	mov	w11, #0x1                   	// #1
  414a04:	lsl	x10, x11, x10
  414a08:	mov	x11, #0x8945                	// #35141
  414a0c:	movk	x11, #0x30, lsl #16
  414a10:	movk	x11, #0x8144, lsl #32
  414a14:	tst	x10, x11
  414a18:	b.eq	414a74 <__fxstatat@plt+0x12024>  // b.none
  414a1c:	mov	w1, #0x30                  	// #48
  414a20:	mov	x0, x23
  414a24:	bl	402870 <strchr@plt>
  414a28:	cbz	x0, 414a60 <__fxstatat@plt+0x12010>
  414a2c:	ldrb	w8, [x25, #1]
  414a30:	cmp	w8, #0x42
  414a34:	b.eq	414a6c <__fxstatat@plt+0x1201c>  // b.none
  414a38:	cmp	w8, #0x44
  414a3c:	b.eq	414a6c <__fxstatat@plt+0x1201c>  // b.none
  414a40:	cmp	w8, #0x69
  414a44:	b.ne	414a60 <__fxstatat@plt+0x12010>  // b.any
  414a48:	ldrb	w8, [x25, #2]
  414a4c:	mov	w9, #0x3                   	// #3
  414a50:	cmp	w8, #0x42
  414a54:	csinc	x8, x9, xzr, eq  // eq = none
  414a58:	mov	w9, #0x400                 	// #1024
  414a5c:	b	414a74 <__fxstatat@plt+0x12024>
  414a60:	mov	w8, #0x1                   	// #1
  414a64:	mov	w9, #0x400                 	// #1024
  414a68:	b	414a74 <__fxstatat@plt+0x12024>
  414a6c:	mov	w8, #0x2                   	// #2
  414a70:	mov	w9, #0x3e8                 	// #1000
  414a74:	sub	w10, w24, #0x42
  414a78:	cmp	w10, #0x35
  414a7c:	b.hi	414ab4 <__fxstatat@plt+0x12064>  // b.pmore
  414a80:	adrp	x11, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414a84:	add	x11, x11, #0x49f
  414a88:	adr	x12, 414a9c <__fxstatat@plt+0x1204c>
  414a8c:	ldrb	w13, [x11, x10]
  414a90:	add	x12, x12, x13, lsl #2
  414a94:	mov	w10, wzr
  414a98:	br	x12
  414a9c:	umulh	x10, x9, x22
  414aa0:	mul	x11, x22, x9
  414aa4:	cmp	xzr, x10
  414aa8:	cset	w10, ne  // ne = any
  414aac:	csinv	x11, x11, xzr, eq  // eq = none
  414ab0:	b	414be0 <__fxstatat@plt+0x12190>
  414ab4:	str	x22, [x19]
  414ab8:	orr	w20, w20, #0x2
  414abc:	b	414c48 <__fxstatat@plt+0x121f8>
  414ac0:	umulh	x10, x9, x22
  414ac4:	mul	x9, x22, x9
  414ac8:	cmp	xzr, x10
  414acc:	b	414c1c <__fxstatat@plt+0x121cc>
  414ad0:	umulh	x10, x9, x22
  414ad4:	mul	x11, x22, x9
  414ad8:	cmp	xzr, x10
  414adc:	cset	w10, ne  // ne = any
  414ae0:	csinv	x11, x11, xzr, eq  // eq = none
  414ae4:	b	414bf8 <__fxstatat@plt+0x121a8>
  414ae8:	umulh	x10, x9, x22
  414aec:	mul	x11, x22, x9
  414af0:	cmp	xzr, x10
  414af4:	cset	w10, ne  // ne = any
  414af8:	csinv	x11, x11, xzr, eq  // eq = none
  414afc:	b	414bc8 <__fxstatat@plt+0x12178>
  414b00:	umulh	x10, x9, x22
  414b04:	mul	x11, x22, x9
  414b08:	cmp	xzr, x10
  414b0c:	cset	w10, ne  // ne = any
  414b10:	csinv	x11, x11, xzr, eq  // eq = none
  414b14:	b	414b80 <__fxstatat@plt+0x12130>
  414b18:	cmp	xzr, x22, lsr #54
  414b1c:	lsl	x9, x22, #10
  414b20:	b	414c1c <__fxstatat@plt+0x121cc>
  414b24:	umulh	x10, x9, x22
  414b28:	mul	x11, x22, x9
  414b2c:	cmp	xzr, x10
  414b30:	cset	w10, ne  // ne = any
  414b34:	csinv	x11, x11, xzr, eq  // eq = none
  414b38:	b	414b98 <__fxstatat@plt+0x12148>
  414b3c:	umulh	x10, x9, x22
  414b40:	mul	x11, x22, x9
  414b44:	cmp	xzr, x10
  414b48:	cset	w10, ne  // ne = any
  414b4c:	csinv	x11, x11, xzr, eq  // eq = none
  414b50:	b	414bb0 <__fxstatat@plt+0x12160>
  414b54:	umulh	x10, x9, x22
  414b58:	mul	x11, x22, x9
  414b5c:	cmp	xzr, x10
  414b60:	csinv	x11, x11, xzr, eq  // eq = none
  414b64:	umulh	x12, x9, x11
  414b68:	cset	w10, ne  // ne = any
  414b6c:	cmp	xzr, x12
  414b70:	mul	x11, x11, x9
  414b74:	cset	w12, ne  // ne = any
  414b78:	csinv	x11, x11, xzr, eq  // eq = none
  414b7c:	orr	w10, w10, w12
  414b80:	umulh	x12, x9, x11
  414b84:	cmp	xzr, x12
  414b88:	mul	x11, x11, x9
  414b8c:	cset	w12, ne  // ne = any
  414b90:	csinv	x11, x11, xzr, eq  // eq = none
  414b94:	orr	w10, w10, w12
  414b98:	umulh	x12, x9, x11
  414b9c:	cmp	xzr, x12
  414ba0:	mul	x11, x11, x9
  414ba4:	cset	w12, ne  // ne = any
  414ba8:	csinv	x11, x11, xzr, eq  // eq = none
  414bac:	orr	w10, w10, w12
  414bb0:	umulh	x12, x9, x11
  414bb4:	cmp	xzr, x12
  414bb8:	mul	x11, x11, x9
  414bbc:	cset	w12, ne  // ne = any
  414bc0:	csinv	x11, x11, xzr, eq  // eq = none
  414bc4:	orr	w10, w10, w12
  414bc8:	umulh	x12, x9, x11
  414bcc:	cmp	xzr, x12
  414bd0:	mul	x11, x11, x9
  414bd4:	cset	w12, ne  // ne = any
  414bd8:	csinv	x11, x11, xzr, eq  // eq = none
  414bdc:	orr	w10, w10, w12
  414be0:	umulh	x12, x9, x11
  414be4:	cmp	xzr, x12
  414be8:	mul	x11, x11, x9
  414bec:	cset	w12, ne  // ne = any
  414bf0:	csinv	x11, x11, xzr, eq  // eq = none
  414bf4:	orr	w10, w10, w12
  414bf8:	umulh	x12, x9, x11
  414bfc:	cmp	xzr, x12
  414c00:	mul	x9, x11, x9
  414c04:	cset	w11, ne  // ne = any
  414c08:	csinv	x22, x9, xzr, eq  // eq = none
  414c0c:	orr	w10, w10, w11
  414c10:	b	414c24 <__fxstatat@plt+0x121d4>
  414c14:	cmp	xzr, x22, lsr #55
  414c18:	lsl	x9, x22, #9
  414c1c:	cset	w10, ne  // ne = any
  414c20:	csinv	x22, x9, xzr, eq  // eq = none
  414c24:	add	x9, x25, x8
  414c28:	str	x9, [x21]
  414c2c:	ldrb	w8, [x25, x8]
  414c30:	and	w9, w10, #0x1
  414c34:	orr	w9, w20, w9
  414c38:	orr	w10, w9, #0x2
  414c3c:	cmp	w8, #0x0
  414c40:	csel	w20, w9, w10, eq  // eq = none
  414c44:	str	x22, [x19]
  414c48:	mov	w0, w20
  414c4c:	ldp	x20, x19, [sp, #64]
  414c50:	ldp	x22, x21, [sp, #48]
  414c54:	ldp	x24, x23, [sp, #32]
  414c58:	ldr	x25, [sp, #16]
  414c5c:	ldp	x29, x30, [sp], #80
  414c60:	ret
  414c64:	cmn	x22, x22
  414c68:	lsl	x9, x22, #1
  414c6c:	cset	w10, cs  // cs = hs, nlast
  414c70:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  414c74:	b	414c24 <__fxstatat@plt+0x121d4>
  414c78:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414c7c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414c80:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414c84:	add	x0, x0, #0x4d5
  414c88:	add	x1, x1, #0x4fb
  414c8c:	add	x3, x3, #0x50b
  414c90:	mov	w2, #0x54                  	// #84
  414c94:	bl	4029d0 <__assert_fail@plt>
  414c98:	stp	x29, x30, [sp, #-16]!
  414c9c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  414ca0:	ldr	w5, [x8, #1312]
  414ca4:	mov	x29, sp
  414ca8:	bl	414cb0 <__fxstatat@plt+0x12260>
  414cac:	bl	402770 <abort@plt>
  414cb0:	sub	sp, sp, #0x40
  414cb4:	sub	w9, w0, #0x1
  414cb8:	cmp	w9, #0x4
  414cbc:	stp	x29, x30, [sp, #16]
  414cc0:	stp	x22, x21, [sp, #32]
  414cc4:	stp	x20, x19, [sp, #48]
  414cc8:	add	x29, sp, #0x10
  414ccc:	b.cs	414d58 <__fxstatat@plt+0x12308>  // b.hs, b.nlast
  414cd0:	adrp	x10, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414cd4:	add	x10, x10, #0x5c0
  414cd8:	mov	w8, w1
  414cdc:	ldr	x1, [x10, w9, sxtw #3]
  414ce0:	mov	w20, w5
  414ce4:	mov	x19, x4
  414ce8:	sxtw	x9, w8
  414cec:	tbnz	w8, #31, 414d04 <__fxstatat@plt+0x122b4>
  414cf0:	lsl	x8, x9, #5
  414cf4:	ldr	x21, [x3, x8]
  414cf8:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414cfc:	add	x22, x22, #0x55c
  414d00:	b	414d1c <__fxstatat@plt+0x122cc>
  414d04:	adrp	x8, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414d08:	add	x8, x8, #0x55c
  414d0c:	sub	x21, x29, #0x4
  414d10:	sturb	w2, [x29, #-4]
  414d14:	sub	x22, x8, x9
  414d18:	sturb	wzr, [x29, #-3]
  414d1c:	mov	w2, #0x5                   	// #5
  414d20:	mov	x0, xzr
  414d24:	bl	402970 <dcgettext@plt>
  414d28:	mov	x2, x0
  414d2c:	mov	w0, w20
  414d30:	mov	w1, wzr
  414d34:	mov	x3, x22
  414d38:	mov	x4, x21
  414d3c:	mov	x5, x19
  414d40:	bl	402490 <error@plt>
  414d44:	ldp	x20, x19, [sp, #48]
  414d48:	ldp	x22, x21, [sp, #32]
  414d4c:	ldp	x29, x30, [sp, #16]
  414d50:	add	sp, sp, #0x40
  414d54:	ret
  414d58:	bl	402770 <abort@plt>
  414d5c:	stp	x29, x30, [sp, #-80]!
  414d60:	cmp	w2, #0x25
  414d64:	str	x25, [sp, #16]
  414d68:	stp	x24, x23, [sp, #32]
  414d6c:	stp	x22, x21, [sp, #48]
  414d70:	stp	x20, x19, [sp, #64]
  414d74:	mov	x29, sp
  414d78:	b.cs	4150dc <__fxstatat@plt+0x1268c>  // b.hs, b.nlast
  414d7c:	mov	x23, x4
  414d80:	mov	x19, x3
  414d84:	mov	w22, w2
  414d88:	mov	x21, x1
  414d8c:	mov	x20, x0
  414d90:	bl	4029e0 <__errno_location@plt>
  414d94:	mov	x24, x0
  414d98:	str	wzr, [x0]
  414d9c:	bl	402820 <__ctype_b_loc@plt>
  414da0:	ldr	x8, [x0]
  414da4:	mov	x10, x20
  414da8:	ldrb	w9, [x10], #1
  414dac:	ldrh	w11, [x8, x9, lsl #1]
  414db0:	tbnz	w11, #13, 414da8 <__fxstatat@plt+0x12358>
  414db4:	cmp	x21, #0x0
  414db8:	add	x8, x29, #0x18
  414dbc:	csel	x21, x8, x21, eq  // eq = none
  414dc0:	cmp	w9, #0x2d
  414dc4:	b.ne	414dd0 <__fxstatat@plt+0x12380>  // b.any
  414dc8:	mov	w20, #0x4                   	// #4
  414dcc:	b	4150ac <__fxstatat@plt+0x1265c>
  414dd0:	mov	x0, x20
  414dd4:	mov	x1, x21
  414dd8:	mov	w2, w22
  414ddc:	mov	w3, wzr
  414de0:	bl	4026b0 <__strtoul_internal@plt>
  414de4:	ldr	x25, [x21]
  414de8:	cmp	x25, x20
  414dec:	b.eq	414e18 <__fxstatat@plt+0x123c8>  // b.none
  414df0:	ldr	w20, [x24]
  414df4:	mov	x22, x0
  414df8:	cbz	w20, 414e08 <__fxstatat@plt+0x123b8>
  414dfc:	cmp	w20, #0x22
  414e00:	b.ne	414dc8 <__fxstatat@plt+0x12378>  // b.any
  414e04:	mov	w20, #0x1                   	// #1
  414e08:	cbz	x23, 4150a8 <__fxstatat@plt+0x12658>
  414e0c:	ldrb	w24, [x25]
  414e10:	cbnz	w24, 414e40 <__fxstatat@plt+0x123f0>
  414e14:	b	4150a8 <__fxstatat@plt+0x12658>
  414e18:	cbz	x23, 414dc8 <__fxstatat@plt+0x12378>
  414e1c:	ldrb	w1, [x20]
  414e20:	cbz	w1, 414dc8 <__fxstatat@plt+0x12378>
  414e24:	mov	x0, x23
  414e28:	bl	402870 <strchr@plt>
  414e2c:	cbz	x0, 414dc8 <__fxstatat@plt+0x12378>
  414e30:	mov	w20, wzr
  414e34:	mov	w22, #0x1                   	// #1
  414e38:	ldrb	w24, [x25]
  414e3c:	cbz	w24, 4150a8 <__fxstatat@plt+0x12658>
  414e40:	mov	x0, x23
  414e44:	mov	w1, w24
  414e48:	bl	402870 <strchr@plt>
  414e4c:	cbz	x0, 414f18 <__fxstatat@plt+0x124c8>
  414e50:	sub	w10, w24, #0x45
  414e54:	mov	w8, #0x1                   	// #1
  414e58:	cmp	w10, #0x2f
  414e5c:	mov	w9, #0x400                 	// #1024
  414e60:	b.hi	414ed8 <__fxstatat@plt+0x12488>  // b.pmore
  414e64:	mov	w11, #0x1                   	// #1
  414e68:	lsl	x10, x11, x10
  414e6c:	mov	x11, #0x8945                	// #35141
  414e70:	movk	x11, #0x30, lsl #16
  414e74:	movk	x11, #0x8144, lsl #32
  414e78:	tst	x10, x11
  414e7c:	b.eq	414ed8 <__fxstatat@plt+0x12488>  // b.none
  414e80:	mov	w1, #0x30                  	// #48
  414e84:	mov	x0, x23
  414e88:	bl	402870 <strchr@plt>
  414e8c:	cbz	x0, 414ec4 <__fxstatat@plt+0x12474>
  414e90:	ldrb	w8, [x25, #1]
  414e94:	cmp	w8, #0x42
  414e98:	b.eq	414ed0 <__fxstatat@plt+0x12480>  // b.none
  414e9c:	cmp	w8, #0x44
  414ea0:	b.eq	414ed0 <__fxstatat@plt+0x12480>  // b.none
  414ea4:	cmp	w8, #0x69
  414ea8:	b.ne	414ec4 <__fxstatat@plt+0x12474>  // b.any
  414eac:	ldrb	w8, [x25, #2]
  414eb0:	mov	w9, #0x3                   	// #3
  414eb4:	cmp	w8, #0x42
  414eb8:	csinc	x8, x9, xzr, eq  // eq = none
  414ebc:	mov	w9, #0x400                 	// #1024
  414ec0:	b	414ed8 <__fxstatat@plt+0x12488>
  414ec4:	mov	w8, #0x1                   	// #1
  414ec8:	mov	w9, #0x400                 	// #1024
  414ecc:	b	414ed8 <__fxstatat@plt+0x12488>
  414ed0:	mov	w8, #0x2                   	// #2
  414ed4:	mov	w9, #0x3e8                 	// #1000
  414ed8:	sub	w10, w24, #0x42
  414edc:	cmp	w10, #0x35
  414ee0:	b.hi	414f18 <__fxstatat@plt+0x124c8>  // b.pmore
  414ee4:	adrp	x11, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  414ee8:	add	x11, x11, #0x5e0
  414eec:	adr	x12, 414f00 <__fxstatat@plt+0x124b0>
  414ef0:	ldrb	w13, [x11, x10]
  414ef4:	add	x12, x12, x13, lsl #2
  414ef8:	mov	w10, wzr
  414efc:	br	x12
  414f00:	umulh	x10, x9, x22
  414f04:	mul	x11, x22, x9
  414f08:	cmp	xzr, x10
  414f0c:	cset	w10, ne  // ne = any
  414f10:	csinv	x11, x11, xzr, eq  // eq = none
  414f14:	b	415044 <__fxstatat@plt+0x125f4>
  414f18:	str	x22, [x19]
  414f1c:	orr	w20, w20, #0x2
  414f20:	b	4150ac <__fxstatat@plt+0x1265c>
  414f24:	umulh	x10, x9, x22
  414f28:	mul	x9, x22, x9
  414f2c:	cmp	xzr, x10
  414f30:	b	415080 <__fxstatat@plt+0x12630>
  414f34:	umulh	x10, x9, x22
  414f38:	mul	x11, x22, x9
  414f3c:	cmp	xzr, x10
  414f40:	cset	w10, ne  // ne = any
  414f44:	csinv	x11, x11, xzr, eq  // eq = none
  414f48:	b	41505c <__fxstatat@plt+0x1260c>
  414f4c:	umulh	x10, x9, x22
  414f50:	mul	x11, x22, x9
  414f54:	cmp	xzr, x10
  414f58:	cset	w10, ne  // ne = any
  414f5c:	csinv	x11, x11, xzr, eq  // eq = none
  414f60:	b	41502c <__fxstatat@plt+0x125dc>
  414f64:	umulh	x10, x9, x22
  414f68:	mul	x11, x22, x9
  414f6c:	cmp	xzr, x10
  414f70:	cset	w10, ne  // ne = any
  414f74:	csinv	x11, x11, xzr, eq  // eq = none
  414f78:	b	414fe4 <__fxstatat@plt+0x12594>
  414f7c:	cmp	xzr, x22, lsr #54
  414f80:	lsl	x9, x22, #10
  414f84:	b	415080 <__fxstatat@plt+0x12630>
  414f88:	umulh	x10, x9, x22
  414f8c:	mul	x11, x22, x9
  414f90:	cmp	xzr, x10
  414f94:	cset	w10, ne  // ne = any
  414f98:	csinv	x11, x11, xzr, eq  // eq = none
  414f9c:	b	414ffc <__fxstatat@plt+0x125ac>
  414fa0:	umulh	x10, x9, x22
  414fa4:	mul	x11, x22, x9
  414fa8:	cmp	xzr, x10
  414fac:	cset	w10, ne  // ne = any
  414fb0:	csinv	x11, x11, xzr, eq  // eq = none
  414fb4:	b	415014 <__fxstatat@plt+0x125c4>
  414fb8:	umulh	x10, x9, x22
  414fbc:	mul	x11, x22, x9
  414fc0:	cmp	xzr, x10
  414fc4:	csinv	x11, x11, xzr, eq  // eq = none
  414fc8:	umulh	x12, x9, x11
  414fcc:	cset	w10, ne  // ne = any
  414fd0:	cmp	xzr, x12
  414fd4:	mul	x11, x11, x9
  414fd8:	cset	w12, ne  // ne = any
  414fdc:	csinv	x11, x11, xzr, eq  // eq = none
  414fe0:	orr	w10, w10, w12
  414fe4:	umulh	x12, x9, x11
  414fe8:	cmp	xzr, x12
  414fec:	mul	x11, x11, x9
  414ff0:	cset	w12, ne  // ne = any
  414ff4:	csinv	x11, x11, xzr, eq  // eq = none
  414ff8:	orr	w10, w10, w12
  414ffc:	umulh	x12, x9, x11
  415000:	cmp	xzr, x12
  415004:	mul	x11, x11, x9
  415008:	cset	w12, ne  // ne = any
  41500c:	csinv	x11, x11, xzr, eq  // eq = none
  415010:	orr	w10, w10, w12
  415014:	umulh	x12, x9, x11
  415018:	cmp	xzr, x12
  41501c:	mul	x11, x11, x9
  415020:	cset	w12, ne  // ne = any
  415024:	csinv	x11, x11, xzr, eq  // eq = none
  415028:	orr	w10, w10, w12
  41502c:	umulh	x12, x9, x11
  415030:	cmp	xzr, x12
  415034:	mul	x11, x11, x9
  415038:	cset	w12, ne  // ne = any
  41503c:	csinv	x11, x11, xzr, eq  // eq = none
  415040:	orr	w10, w10, w12
  415044:	umulh	x12, x9, x11
  415048:	cmp	xzr, x12
  41504c:	mul	x11, x11, x9
  415050:	cset	w12, ne  // ne = any
  415054:	csinv	x11, x11, xzr, eq  // eq = none
  415058:	orr	w10, w10, w12
  41505c:	umulh	x12, x9, x11
  415060:	cmp	xzr, x12
  415064:	mul	x9, x11, x9
  415068:	cset	w11, ne  // ne = any
  41506c:	csinv	x22, x9, xzr, eq  // eq = none
  415070:	orr	w10, w10, w11
  415074:	b	415088 <__fxstatat@plt+0x12638>
  415078:	cmp	xzr, x22, lsr #55
  41507c:	lsl	x9, x22, #9
  415080:	cset	w10, ne  // ne = any
  415084:	csinv	x22, x9, xzr, eq  // eq = none
  415088:	add	x9, x25, x8
  41508c:	str	x9, [x21]
  415090:	ldrb	w8, [x25, x8]
  415094:	and	w9, w10, #0x1
  415098:	orr	w9, w20, w9
  41509c:	orr	w10, w9, #0x2
  4150a0:	cmp	w8, #0x0
  4150a4:	csel	w20, w9, w10, eq  // eq = none
  4150a8:	str	x22, [x19]
  4150ac:	mov	w0, w20
  4150b0:	ldp	x20, x19, [sp, #64]
  4150b4:	ldp	x22, x21, [sp, #48]
  4150b8:	ldp	x24, x23, [sp, #32]
  4150bc:	ldr	x25, [sp, #16]
  4150c0:	ldp	x29, x30, [sp], #80
  4150c4:	ret
  4150c8:	cmn	x22, x22
  4150cc:	lsl	x9, x22, #1
  4150d0:	cset	w10, cs  // cs = hs, nlast
  4150d4:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  4150d8:	b	415088 <__fxstatat@plt+0x12638>
  4150dc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4150e0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4150e4:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  4150e8:	add	x0, x0, #0x4d5
  4150ec:	add	x1, x1, #0x4fb
  4150f0:	add	x3, x3, #0x616
  4150f4:	mov	w2, #0x54                  	// #84
  4150f8:	bl	4029d0 <__assert_fail@plt>
  4150fc:	mov	x8, x1
  415100:	mov	w1, #0x1                   	// #1
  415104:	mov	w9, #0x1                   	// #1
  415108:	cbz	x0, 415140 <__fxstatat@plt+0x126f0>
  41510c:	cbz	x8, 415140 <__fxstatat@plt+0x126f0>
  415110:	umulh	x10, x8, x0
  415114:	mov	x1, x8
  415118:	mov	x9, x0
  41511c:	cbz	x10, 415140 <__fxstatat@plt+0x126f0>
  415120:	stp	x29, x30, [sp, #-16]!
  415124:	mov	x29, sp
  415128:	bl	4029e0 <__errno_location@plt>
  41512c:	mov	w8, #0xc                   	// #12
  415130:	str	w8, [x0]
  415134:	mov	x0, xzr
  415138:	ldp	x29, x30, [sp], #16
  41513c:	ret
  415140:	mov	x0, x9
  415144:	b	4026c0 <calloc@plt>
  415148:	sub	sp, sp, #0x40
  41514c:	stp	x29, x30, [sp, #16]
  415150:	add	x29, sp, #0x10
  415154:	cmp	x0, #0x0
  415158:	sub	x8, x29, #0x4
  41515c:	stp	x20, x19, [sp, #48]
  415160:	csel	x20, x8, x0, eq  // eq = none
  415164:	mov	x0, x20
  415168:	stp	x22, x21, [sp, #32]
  41516c:	mov	x22, x2
  415170:	mov	x19, x1
  415174:	bl	4023b0 <mbrtowc@plt>
  415178:	mov	x21, x0
  41517c:	cbz	x22, 4151a0 <__fxstatat@plt+0x12750>
  415180:	cmn	x21, #0x2
  415184:	b.cc	4151a0 <__fxstatat@plt+0x12750>  // b.lo, b.ul, b.last
  415188:	mov	w0, wzr
  41518c:	bl	40dfa0 <__fxstatat@plt+0xb550>
  415190:	tbnz	w0, #0, 4151a0 <__fxstatat@plt+0x12750>
  415194:	ldrb	w8, [x19]
  415198:	mov	w21, #0x1                   	// #1
  41519c:	str	w8, [x20]
  4151a0:	mov	x0, x21
  4151a4:	ldp	x20, x19, [sp, #48]
  4151a8:	ldp	x22, x21, [sp, #32]
  4151ac:	ldp	x29, x30, [sp, #16]
  4151b0:	add	sp, sp, #0x40
  4151b4:	ret

00000000004151b8 <_obstack_begin@@Base>:
  4151b8:	stp	x29, x30, [sp, #-48]!
  4151bc:	stp	x20, x19, [sp, #32]
  4151c0:	ldrb	w8, [x0, #80]
  4151c4:	cmp	x2, #0x0
  4151c8:	mov	w9, #0x10                  	// #16
  4151cc:	csel	x20, x9, x2, eq  // eq = none
  4151d0:	mov	w9, #0xfe0                 	// #4064
  4151d4:	cmp	x1, #0x0
  4151d8:	str	x21, [sp, #16]
  4151dc:	mov	x19, x0
  4151e0:	str	x4, [x0, #64]
  4151e4:	csel	x0, x9, x1, eq  // eq = none
  4151e8:	and	w8, w8, #0xfe
  4151ec:	sub	x21, x20, #0x1
  4151f0:	mov	x29, sp
  4151f4:	strb	w8, [x19, #80]
  4151f8:	str	x0, [x19]
  4151fc:	stp	x21, x3, [x19, #48]
  415200:	blr	x3
  415204:	str	x0, [x19, #8]
  415208:	cbz	x0, 415254 <_obstack_begin@@Base+0x9c>
  41520c:	ldr	x10, [x19]
  415210:	add	x8, x0, x21
  415214:	neg	x9, x20
  415218:	add	x8, x8, #0x10
  41521c:	and	x8, x8, x9
  415220:	stp	x8, x8, [x19, #16]
  415224:	add	x8, x0, x10
  415228:	str	x8, [x0]
  41522c:	str	x8, [x19, #32]
  415230:	str	xzr, [x0, #8]
  415234:	ldrb	w8, [x19, #80]
  415238:	ldr	x21, [sp, #16]
  41523c:	mov	w0, #0x1                   	// #1
  415240:	and	w8, w8, #0xfffffff9
  415244:	strb	w8, [x19, #80]
  415248:	ldp	x20, x19, [sp, #32]
  41524c:	ldp	x29, x30, [sp], #48
  415250:	ret
  415254:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  415258:	ldr	x8, [x8, #1408]
  41525c:	blr	x8

0000000000415260 <_obstack_begin_1@@Base>:
  415260:	stp	x29, x30, [sp, #-48]!
  415264:	stp	x20, x19, [sp, #32]
  415268:	ldrb	w8, [x0, #80]
  41526c:	cmp	x2, #0x0
  415270:	mov	w9, #0x10                  	// #16
  415274:	csel	x20, x9, x2, eq  // eq = none
  415278:	mov	w9, #0xfe0                 	// #4064
  41527c:	cmp	x1, #0x0
  415280:	str	x21, [sp, #16]
  415284:	csel	x1, x9, x1, eq  // eq = none
  415288:	orr	w8, w8, #0x1
  41528c:	sub	x21, x20, #0x1
  415290:	mov	x19, x0
  415294:	stp	x4, x5, [x0, #64]
  415298:	strb	w8, [x0, #80]
  41529c:	str	x1, [x0]
  4152a0:	stp	x21, x3, [x0, #48]
  4152a4:	mov	x0, x5
  4152a8:	mov	x29, sp
  4152ac:	blr	x3
  4152b0:	str	x0, [x19, #8]
  4152b4:	cbz	x0, 415300 <_obstack_begin_1@@Base+0xa0>
  4152b8:	ldr	x10, [x19]
  4152bc:	add	x8, x0, x21
  4152c0:	neg	x9, x20
  4152c4:	add	x8, x8, #0x10
  4152c8:	and	x8, x8, x9
  4152cc:	stp	x8, x8, [x19, #16]
  4152d0:	add	x8, x0, x10
  4152d4:	str	x8, [x0]
  4152d8:	str	x8, [x19, #32]
  4152dc:	str	xzr, [x0, #8]
  4152e0:	ldrb	w8, [x19, #80]
  4152e4:	ldr	x21, [sp, #16]
  4152e8:	mov	w0, #0x1                   	// #1
  4152ec:	and	w8, w8, #0xfffffff9
  4152f0:	strb	w8, [x19, #80]
  4152f4:	ldp	x20, x19, [sp, #32]
  4152f8:	ldp	x29, x30, [sp], #48
  4152fc:	ret
  415300:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  415304:	ldr	x8, [x8, #1408]
  415308:	blr	x8

000000000041530c <_obstack_newchunk@@Base>:
  41530c:	stp	x29, x30, [sp, #-64]!
  415310:	str	x23, [sp, #16]
  415314:	stp	x22, x21, [sp, #32]
  415318:	stp	x20, x19, [sp, #48]
  41531c:	ldp	x9, x8, [x0, #16]
  415320:	ldr	x10, [x0, #48]
  415324:	ldr	x11, [x0]
  415328:	mov	x29, sp
  41532c:	sub	x20, x8, x9
  415330:	adds	x8, x20, x1
  415334:	lsr	x9, x20, #3
  415338:	cset	w12, cs  // cs = hs, nlast
  41533c:	adds	x10, x8, x10
  415340:	add	x9, x9, #0x64
  415344:	cset	w8, cs  // cs = hs, nlast
  415348:	adds	x9, x9, x10
  41534c:	csel	x9, x10, x9, cs  // cs = hs, nlast
  415350:	cmp	x9, x11
  415354:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  415358:	tbnz	w12, #0, 415444 <_obstack_newchunk@@Base+0x138>
  41535c:	tbnz	w8, #0, 415444 <_obstack_newchunk@@Base+0x138>
  415360:	ldrb	w8, [x0, #80]
  415364:	ldr	x21, [x0, #8]
  415368:	mov	x19, x0
  41536c:	tbnz	w8, #0, 415380 <_obstack_newchunk@@Base+0x74>
  415370:	ldr	x8, [x19, #56]
  415374:	mov	x0, x23
  415378:	blr	x8
  41537c:	b	415390 <_obstack_newchunk@@Base+0x84>
  415380:	ldr	x8, [x19, #56]
  415384:	ldr	x0, [x19, #72]
  415388:	mov	x1, x23
  41538c:	blr	x8
  415390:	mov	x22, x0
  415394:	cbz	x0, 415444 <_obstack_newchunk@@Base+0x138>
  415398:	add	x8, x22, x23
  41539c:	str	x22, [x19, #8]
  4153a0:	str	x21, [x22, #8]
  4153a4:	str	x8, [x19, #32]
  4153a8:	str	x8, [x22]
  4153ac:	ldr	x8, [x19, #48]
  4153b0:	ldr	x1, [x19, #16]
  4153b4:	mov	x2, x20
  4153b8:	add	x9, x22, x8
  4153bc:	add	x9, x9, #0x10
  4153c0:	bic	x23, x9, x8
  4153c4:	mov	x0, x23
  4153c8:	bl	4023c0 <memcpy@plt>
  4153cc:	ldrb	w8, [x19, #80]
  4153d0:	tbnz	w8, #1, 41541c <_obstack_newchunk@@Base+0x110>
  4153d4:	ldr	x8, [x19, #48]
  4153d8:	ldr	x9, [x19, #16]
  4153dc:	add	x10, x21, x8
  4153e0:	add	x10, x10, #0x10
  4153e4:	bic	x8, x10, x8
  4153e8:	cmp	x9, x8
  4153ec:	b.ne	41541c <_obstack_newchunk@@Base+0x110>  // b.any
  4153f0:	ldr	x8, [x21, #8]
  4153f4:	str	x8, [x22, #8]
  4153f8:	ldrb	w8, [x19, #80]
  4153fc:	tbnz	w8, #0, 415410 <_obstack_newchunk@@Base+0x104>
  415400:	ldr	x8, [x19, #64]
  415404:	mov	x0, x21
  415408:	blr	x8
  41540c:	b	41541c <_obstack_newchunk@@Base+0x110>
  415410:	ldp	x8, x0, [x19, #64]
  415414:	mov	x1, x21
  415418:	blr	x8
  41541c:	ldrb	w8, [x19, #80]
  415420:	add	x9, x23, x20
  415424:	stp	x23, x9, [x19, #16]
  415428:	ldr	x23, [sp, #16]
  41542c:	and	w8, w8, #0xfffffffd
  415430:	strb	w8, [x19, #80]
  415434:	ldp	x20, x19, [sp, #48]
  415438:	ldp	x22, x21, [sp, #32]
  41543c:	ldp	x29, x30, [sp], #64
  415440:	ret
  415444:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  415448:	ldr	x8, [x8, #1408]
  41544c:	blr	x8

0000000000415450 <_obstack_allocated_p@@Base>:
  415450:	ldr	x8, [x0, #8]
  415454:	cbnz	x8, 415468 <_obstack_allocated_p@@Base+0x18>
  415458:	mov	w0, wzr
  41545c:	ret
  415460:	ldr	x8, [x8, #8]
  415464:	cbz	x8, 415458 <_obstack_allocated_p@@Base+0x8>
  415468:	cmp	x8, x1
  41546c:	b.cs	415460 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  415470:	ldr	x9, [x8]
  415474:	cmp	x9, x1
  415478:	b.cc	415460 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  41547c:	mov	w0, #0x1                   	// #1
  415480:	ret

0000000000415484 <_obstack_free@@Base>:
  415484:	stp	x29, x30, [sp, #-48]!
  415488:	stp	x20, x19, [sp, #32]
  41548c:	ldr	x8, [x0, #8]
  415490:	mov	x20, x1
  415494:	str	x21, [sp, #16]
  415498:	mov	x29, sp
  41549c:	cbz	x8, 4154f8 <_obstack_free@@Base+0x74>
  4154a0:	mov	x19, x0
  4154a4:	b	4154c8 <_obstack_free@@Base+0x44>
  4154a8:	ldr	x9, [x19, #64]
  4154ac:	mov	x0, x8
  4154b0:	blr	x9
  4154b4:	ldrb	w8, [x19, #80]
  4154b8:	orr	w8, w8, #0x2
  4154bc:	strb	w8, [x19, #80]
  4154c0:	mov	x8, x21
  4154c4:	cbz	x21, 4154f8 <_obstack_free@@Base+0x74>
  4154c8:	cmp	x8, x20
  4154cc:	b.cs	4154dc <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  4154d0:	ldr	x9, [x8]
  4154d4:	cmp	x9, x20
  4154d8:	b.cs	41550c <_obstack_free@@Base+0x88>  // b.hs, b.nlast
  4154dc:	ldrb	w9, [x19, #80]
  4154e0:	ldr	x21, [x8, #8]
  4154e4:	tbz	w9, #0, 4154a8 <_obstack_free@@Base+0x24>
  4154e8:	ldp	x9, x0, [x19, #64]
  4154ec:	mov	x1, x8
  4154f0:	blr	x9
  4154f4:	b	4154b4 <_obstack_free@@Base+0x30>
  4154f8:	cbnz	x20, 41552c <_obstack_free@@Base+0xa8>
  4154fc:	ldp	x20, x19, [sp, #32]
  415500:	ldr	x21, [sp, #16]
  415504:	ldp	x29, x30, [sp], #48
  415508:	ret
  41550c:	stp	x20, x20, [x19, #16]
  415510:	ldr	x9, [x8]
  415514:	str	x8, [x19, #8]
  415518:	str	x9, [x19, #32]
  41551c:	ldp	x20, x19, [sp, #32]
  415520:	ldr	x21, [sp, #16]
  415524:	ldp	x29, x30, [sp], #48
  415528:	ret
  41552c:	bl	402770 <abort@plt>

0000000000415530 <_obstack_memory_used@@Base>:
  415530:	ldr	x8, [x0, #8]
  415534:	cbz	x8, 415550 <_obstack_memory_used@@Base+0x20>
  415538:	mov	x0, xzr
  41553c:	sub	x10, x0, x8
  415540:	ldp	x9, x8, [x8]
  415544:	add	x0, x10, x9
  415548:	cbnz	x8, 41553c <_obstack_memory_used@@Base+0xc>
  41554c:	ret
  415550:	mov	x0, xzr
  415554:	ret
  415558:	stp	x29, x30, [sp, #-32]!
  41555c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  415560:	str	x19, [sp, #16]
  415564:	ldr	x19, [x8, #1432]
  415568:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  41556c:	add	x1, x1, #0x48e
  415570:	mov	w2, #0x5                   	// #5
  415574:	mov	x0, xzr
  415578:	mov	x29, sp
  41557c:	bl	402970 <dcgettext@plt>
  415580:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  415584:	mov	x3, x0
  415588:	add	x2, x2, #0x189
  41558c:	mov	w1, #0x1                   	// #1
  415590:	mov	x0, x19
  415594:	bl	4027e0 <__fprintf_chk@plt>
  415598:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  41559c:	ldr	w0, [x8, #1312]
  4155a0:	bl	402460 <exit@plt>
  4155a4:	stp	x29, x30, [sp, #-48]!
  4155a8:	stp	x20, x19, [sp, #32]
  4155ac:	mov	x19, x0
  4155b0:	stp	x22, x21, [sp, #16]
  4155b4:	mov	x29, sp
  4155b8:	cbz	x0, 4155e8 <_obstack_memory_used@@Base+0xb8>
  4155bc:	mov	x0, x19
  4155c0:	bl	402430 <strlen@plt>
  4155c4:	add	x20, x0, #0x1
  4155c8:	cmp	x20, #0x76
  4155cc:	b.ls	4155ec <_obstack_memory_used@@Base+0xbc>  // b.plast
  4155d0:	add	x8, x0, #0x12
  4155d4:	and	x0, x8, #0xfffffffffffffff8
  4155d8:	bl	4025f0 <malloc@plt>
  4155dc:	mov	x21, x0
  4155e0:	cbnz	x0, 4155fc <_obstack_memory_used@@Base+0xcc>
  4155e4:	b	41562c <_obstack_memory_used@@Base+0xfc>
  4155e8:	mov	x20, xzr
  4155ec:	mov	w0, #0x80                  	// #128
  4155f0:	bl	4025f0 <malloc@plt>
  4155f4:	mov	x21, x0
  4155f8:	cbz	x0, 41562c <_obstack_memory_used@@Base+0xfc>
  4155fc:	cmp	x19, #0x0
  415600:	mov	x22, x21
  415604:	cset	w8, ne  // ne = any
  415608:	str	xzr, [x21]
  41560c:	strb	w8, [x21, #8]
  415610:	strb	wzr, [x22, #9]!
  415614:	cbz	x19, 41562c <_obstack_memory_used@@Base+0xfc>
  415618:	mov	x0, x22
  41561c:	mov	x1, x19
  415620:	mov	x2, x20
  415624:	bl	4023c0 <memcpy@plt>
  415628:	strb	wzr, [x22, x20]
  41562c:	mov	x0, x21
  415630:	ldp	x20, x19, [sp, #32]
  415634:	ldp	x22, x21, [sp, #16]
  415638:	ldp	x29, x30, [sp], #48
  41563c:	ret
  415640:	stp	x29, x30, [sp, #-32]!
  415644:	cmp	x0, #0x2
  415648:	str	x19, [sp, #16]
  41564c:	mov	x29, sp
  415650:	b.cc	415664 <_obstack_memory_used@@Base+0x134>  // b.lo, b.ul, b.last
  415654:	ldr	x19, [x0]
  415658:	bl	402840 <free@plt>
  41565c:	mov	x0, x19
  415660:	cbnz	x19, 415654 <_obstack_memory_used@@Base+0x124>
  415664:	ldr	x19, [sp, #16]
  415668:	ldp	x29, x30, [sp], #32
  41566c:	ret
  415670:	stp	x29, x30, [sp, #-96]!
  415674:	stp	x22, x21, [sp, #64]
  415678:	stp	x20, x19, [sp, #80]
  41567c:	mov	x19, x2
  415680:	mov	x22, x1
  415684:	str	x27, [sp, #16]
  415688:	stp	x26, x25, [sp, #32]
  41568c:	stp	x24, x23, [sp, #48]
  415690:	mov	x29, sp
  415694:	cbz	x0, 4156f4 <_obstack_memory_used@@Base+0x1c4>
  415698:	mov	x21, x0
  41569c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4156a0:	add	x0, x0, #0x542
  4156a4:	bl	4029f0 <getenv@plt>
  4156a8:	ldrb	w26, [x21, #8]
  4156ac:	mov	x23, x0
  4156b0:	cbz	x0, 415718 <_obstack_memory_used@@Base+0x1e8>
  4156b4:	cbz	w26, 4156c8 <_obstack_memory_used@@Base+0x198>
  4156b8:	add	x0, x21, #0x9
  4156bc:	mov	x1, x23
  4156c0:	bl	402800 <strcmp@plt>
  4156c4:	cbz	w0, 4157b0 <_obstack_memory_used@@Base+0x280>
  4156c8:	mov	x0, x23
  4156cc:	bl	402430 <strlen@plt>
  4156d0:	add	x24, x0, #0x1
  4156d4:	cmp	x24, #0x76
  4156d8:	mov	w27, #0x1                   	// #1
  4156dc:	b.ls	415724 <_obstack_memory_used@@Base+0x1f4>  // b.plast
  4156e0:	add	x8, x0, #0x12
  4156e4:	and	x0, x8, #0xfffffffffffffff8
  4156e8:	bl	4025f0 <malloc@plt>
  4156ec:	cbnz	x0, 415730 <_obstack_memory_used@@Base+0x200>
  4156f0:	b	4157a8 <_obstack_memory_used@@Base+0x278>
  4156f4:	mov	x0, x22
  4156f8:	mov	x1, x19
  4156fc:	ldp	x20, x19, [sp, #80]
  415700:	ldp	x22, x21, [sp, #64]
  415704:	ldp	x24, x23, [sp, #48]
  415708:	ldp	x26, x25, [sp, #32]
  41570c:	ldr	x27, [sp, #16]
  415710:	ldp	x29, x30, [sp], #96
  415714:	b	4026a0 <gmtime_r@plt>
  415718:	cbz	w26, 4157b0 <_obstack_memory_used@@Base+0x280>
  41571c:	mov	w27, wzr
  415720:	mov	x24, xzr
  415724:	mov	w0, #0x80                  	// #128
  415728:	bl	4025f0 <malloc@plt>
  41572c:	cbz	x0, 4157a8 <_obstack_memory_used@@Base+0x278>
  415730:	mov	x25, x0
  415734:	mov	x20, x0
  415738:	str	xzr, [x0]
  41573c:	strb	w27, [x0, #8]
  415740:	strb	wzr, [x25, #9]!
  415744:	cbz	w27, 415760 <_obstack_memory_used@@Base+0x230>
  415748:	mov	x0, x25
  41574c:	mov	x1, x23
  415750:	mov	x2, x24
  415754:	bl	4023c0 <memcpy@plt>
  415758:	strb	wzr, [x25, x24]
  41575c:	ldrb	w26, [x21, #8]
  415760:	cbz	w26, 415834 <_obstack_memory_used@@Base+0x304>
  415764:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415768:	add	x1, x21, #0x9
  41576c:	add	x0, x0, #0x542
  415770:	mov	w2, #0x1                   	// #1
  415774:	bl	4024c0 <setenv@plt>
  415778:	cbz	w0, 415844 <_obstack_memory_used@@Base+0x314>
  41577c:	bl	4029e0 <__errno_location@plt>
  415780:	ldr	w21, [x0]
  415784:	mov	x19, x0
  415788:	cmp	x20, #0x2
  41578c:	b.cc	4157a4 <_obstack_memory_used@@Base+0x274>  // b.lo, b.ul, b.last
  415790:	ldr	x22, [x20]
  415794:	mov	x0, x20
  415798:	bl	402840 <free@plt>
  41579c:	mov	x20, x22
  4157a0:	cbnz	x22, 415790 <_obstack_memory_used@@Base+0x260>
  4157a4:	str	w21, [x19]
  4157a8:	mov	x0, xzr
  4157ac:	b	415874 <_obstack_memory_used@@Base+0x344>
  4157b0:	mov	w20, #0x1                   	// #1
  4157b4:	mov	x0, x22
  4157b8:	mov	x1, x19
  4157bc:	bl	4024b0 <localtime_r@plt>
  4157c0:	cbz	x0, 415858 <_obstack_memory_used@@Base+0x328>
  4157c4:	mov	x0, x21
  4157c8:	mov	x1, x19
  4157cc:	bl	4158b4 <_obstack_memory_used@@Base+0x384>
  4157d0:	eor	w22, w0, #0x1
  4157d4:	cmp	x20, #0x1
  4157d8:	b.eq	415864 <_obstack_memory_used@@Base+0x334>  // b.none
  4157dc:	bl	4029e0 <__errno_location@plt>
  4157e0:	ldrb	w8, [x20, #8]
  4157e4:	ldr	w23, [x0]
  4157e8:	mov	x21, x0
  4157ec:	cbz	w8, 415890 <_obstack_memory_used@@Base+0x360>
  4157f0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  4157f4:	add	x1, x20, #0x9
  4157f8:	add	x0, x0, #0x542
  4157fc:	mov	w2, #0x1                   	// #1
  415800:	bl	4024c0 <setenv@plt>
  415804:	cbz	w0, 4158a0 <_obstack_memory_used@@Base+0x370>
  415808:	ldr	w23, [x21]
  41580c:	mov	w24, wzr
  415810:	cmp	x20, #0x2
  415814:	b.cc	41582c <_obstack_memory_used@@Base+0x2fc>  // b.lo, b.ul, b.last
  415818:	ldr	x25, [x20]
  41581c:	mov	x0, x20
  415820:	bl	402840 <free@plt>
  415824:	mov	x20, x25
  415828:	cbnz	x25, 415818 <_obstack_memory_used@@Base+0x2e8>
  41582c:	str	w23, [x21]
  415830:	b	415868 <_obstack_memory_used@@Base+0x338>
  415834:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415838:	add	x0, x0, #0x542
  41583c:	bl	4028e0 <unsetenv@plt>
  415840:	cbnz	w0, 41577c <_obstack_memory_used@@Base+0x24c>
  415844:	bl	402610 <tzset@plt>
  415848:	mov	x0, x22
  41584c:	mov	x1, x19
  415850:	bl	4024b0 <localtime_r@plt>
  415854:	cbnz	x0, 4157c4 <_obstack_memory_used@@Base+0x294>
  415858:	mov	w22, #0x1                   	// #1
  41585c:	cmp	x20, #0x1
  415860:	b.ne	4157dc <_obstack_memory_used@@Base+0x2ac>  // b.any
  415864:	mov	w24, #0x1                   	// #1
  415868:	orn	w8, w22, w24
  41586c:	tst	w8, #0x1
  415870:	csel	x0, xzr, x19, ne  // ne = any
  415874:	ldp	x20, x19, [sp, #80]
  415878:	ldp	x22, x21, [sp, #64]
  41587c:	ldp	x24, x23, [sp, #48]
  415880:	ldp	x26, x25, [sp, #32]
  415884:	ldr	x27, [sp, #16]
  415888:	ldp	x29, x30, [sp], #96
  41588c:	ret
  415890:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415894:	add	x0, x0, #0x542
  415898:	bl	4028e0 <unsetenv@plt>
  41589c:	cbnz	w0, 415808 <_obstack_memory_used@@Base+0x2d8>
  4158a0:	bl	402610 <tzset@plt>
  4158a4:	mov	w24, #0x1                   	// #1
  4158a8:	cmp	x20, #0x2
  4158ac:	b.cs	415818 <_obstack_memory_used@@Base+0x2e8>  // b.hs, b.nlast
  4158b0:	b	41582c <_obstack_memory_used@@Base+0x2fc>
  4158b4:	stp	x29, x30, [sp, #-64]!
  4158b8:	stp	x24, x23, [sp, #16]
  4158bc:	stp	x22, x21, [sp, #32]
  4158c0:	stp	x20, x19, [sp, #48]
  4158c4:	ldr	x21, [x1, #48]
  4158c8:	mov	x29, sp
  4158cc:	cbz	x21, 41595c <_obstack_memory_used@@Base+0x42c>
  4158d0:	mov	x19, x1
  4158d4:	mov	x20, x0
  4158d8:	cmp	x21, x1
  4158dc:	b.cc	4158ec <_obstack_memory_used@@Base+0x3bc>  // b.lo, b.ul, b.last
  4158e0:	add	x8, x19, #0x38
  4158e4:	cmp	x21, x8
  4158e8:	b.cc	41595c <_obstack_memory_used@@Base+0x42c>  // b.lo, b.ul, b.last
  4158ec:	ldrb	w8, [x21]
  4158f0:	cbz	w8, 415950 <_obstack_memory_used@@Base+0x420>
  4158f4:	add	x22, x20, #0x9
  4158f8:	mov	x0, x22
  4158fc:	mov	x1, x21
  415900:	bl	402800 <strcmp@plt>
  415904:	cbz	w0, 415958 <_obstack_memory_used@@Base+0x428>
  415908:	ldrb	w8, [x22]
  41590c:	cbnz	w8, 415924 <_obstack_memory_used@@Base+0x3f4>
  415910:	add	x24, x20, #0x9
  415914:	cmp	x22, x24
  415918:	b.ne	415978 <_obstack_memory_used@@Base+0x448>  // b.any
  41591c:	ldrb	w8, [x20, #8]
  415920:	cbz	w8, 415974 <_obstack_memory_used@@Base+0x444>
  415924:	mov	x0, x22
  415928:	bl	402430 <strlen@plt>
  41592c:	add	x22, x0, x22
  415930:	ldrb	w8, [x22, #1]!
  415934:	cbnz	w8, 4158f8 <_obstack_memory_used@@Base+0x3c8>
  415938:	ldr	x8, [x20]
  41593c:	add	x9, x8, #0x9
  415940:	cmp	x8, #0x0
  415944:	csel	x22, x22, x9, eq  // eq = none
  415948:	csel	x20, x20, x8, eq  // eq = none
  41594c:	b	4158f8 <_obstack_memory_used@@Base+0x3c8>
  415950:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  415954:	add	x22, x22, #0x8d1
  415958:	str	x22, [x19, #48]
  41595c:	mov	w0, #0x1                   	// #1
  415960:	ldp	x20, x19, [sp, #48]
  415964:	ldp	x22, x21, [sp, #32]
  415968:	ldp	x24, x23, [sp, #16]
  41596c:	ldp	x29, x30, [sp], #64
  415970:	ret
  415974:	mov	x24, x22
  415978:	mov	x0, x21
  41597c:	bl	402430 <strlen@plt>
  415980:	sub	x8, x22, x24
  415984:	add	x23, x0, #0x1
  415988:	mvn	x9, x8
  41598c:	cmp	x23, x9
  415990:	b.ls	4159ac <_obstack_memory_used@@Base+0x47c>  // b.plast
  415994:	bl	4029e0 <__errno_location@plt>
  415998:	mov	x8, x0
  41599c:	mov	w9, #0xc                   	// #12
  4159a0:	mov	w0, wzr
  4159a4:	str	w9, [x8]
  4159a8:	b	415960 <_obstack_memory_used@@Base+0x430>
  4159ac:	add	x8, x23, x8
  4159b0:	cmp	x8, #0x76
  4159b4:	b.hi	4159d0 <_obstack_memory_used@@Base+0x4a0>  // b.pmore
  4159b8:	mov	x0, x22
  4159bc:	mov	x1, x21
  4159c0:	mov	x2, x23
  4159c4:	bl	4023c0 <memcpy@plt>
  4159c8:	strb	wzr, [x22, x23]
  4159cc:	b	415958 <_obstack_memory_used@@Base+0x428>
  4159d0:	add	x8, x0, #0x12
  4159d4:	cmp	x23, #0x77
  4159d8:	and	x8, x8, #0xfffffffffffffff8
  4159dc:	mov	w9, #0x80                  	// #128
  4159e0:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  4159e4:	bl	4025f0 <malloc@plt>
  4159e8:	cbz	x0, 415a20 <_obstack_memory_used@@Base+0x4f0>
  4159ec:	mov	w8, #0x1                   	// #1
  4159f0:	add	x22, x0, #0x9
  4159f4:	mov	x24, x0
  4159f8:	str	xzr, [x0]
  4159fc:	strh	w8, [x0, #8]
  415a00:	mov	x0, x22
  415a04:	mov	x1, x21
  415a08:	mov	x2, x23
  415a0c:	bl	4023c0 <memcpy@plt>
  415a10:	strb	wzr, [x22, x23]
  415a14:	str	x24, [x20]
  415a18:	strb	wzr, [x24, #8]
  415a1c:	b	415958 <_obstack_memory_used@@Base+0x428>
  415a20:	str	xzr, [x20]
  415a24:	b	415960 <_obstack_memory_used@@Base+0x430>
  415a28:	sub	sp, sp, #0x90
  415a2c:	stp	x20, x19, [sp, #128]
  415a30:	mov	x20, x1
  415a34:	stp	x29, x30, [sp, #64]
  415a38:	stp	x26, x25, [sp, #80]
  415a3c:	stp	x24, x23, [sp, #96]
  415a40:	stp	x22, x21, [sp, #112]
  415a44:	add	x29, sp, #0x40
  415a48:	cbz	x0, 415aa8 <_obstack_memory_used@@Base+0x578>
  415a4c:	mov	x21, x0
  415a50:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415a54:	add	x0, x0, #0x542
  415a58:	bl	4029f0 <getenv@plt>
  415a5c:	ldrb	w25, [x21, #8]
  415a60:	mov	x22, x0
  415a64:	cbz	x0, 415ac8 <_obstack_memory_used@@Base+0x598>
  415a68:	cbz	w25, 415a7c <_obstack_memory_used@@Base+0x54c>
  415a6c:	add	x0, x21, #0x9
  415a70:	mov	x1, x22
  415a74:	bl	402800 <strcmp@plt>
  415a78:	cbz	w0, 415b5c <_obstack_memory_used@@Base+0x62c>
  415a7c:	mov	x0, x22
  415a80:	bl	402430 <strlen@plt>
  415a84:	add	x23, x0, #0x1
  415a88:	cmp	x23, #0x76
  415a8c:	mov	w26, #0x1                   	// #1
  415a90:	b.ls	415ad4 <_obstack_memory_used@@Base+0x5a4>  // b.plast
  415a94:	add	x8, x0, #0x12
  415a98:	and	x0, x8, #0xfffffffffffffff8
  415a9c:	bl	4025f0 <malloc@plt>
  415aa0:	cbnz	x0, 415ae0 <_obstack_memory_used@@Base+0x5b0>
  415aa4:	b	415c8c <_obstack_memory_used@@Base+0x75c>
  415aa8:	mov	x0, x20
  415aac:	ldp	x20, x19, [sp, #128]
  415ab0:	ldp	x22, x21, [sp, #112]
  415ab4:	ldp	x24, x23, [sp, #96]
  415ab8:	ldp	x26, x25, [sp, #80]
  415abc:	ldp	x29, x30, [sp, #64]
  415ac0:	add	sp, sp, #0x90
  415ac4:	b	402a20 <timegm@plt>
  415ac8:	cbz	w25, 415b5c <_obstack_memory_used@@Base+0x62c>
  415acc:	mov	w26, wzr
  415ad0:	mov	x23, xzr
  415ad4:	mov	w0, #0x80                  	// #128
  415ad8:	bl	4025f0 <malloc@plt>
  415adc:	cbz	x0, 415c8c <_obstack_memory_used@@Base+0x75c>
  415ae0:	mov	x24, x0
  415ae4:	mov	x19, x0
  415ae8:	str	xzr, [x0]
  415aec:	strb	w26, [x0, #8]
  415af0:	strb	wzr, [x24, #9]!
  415af4:	cbz	w26, 415b10 <_obstack_memory_used@@Base+0x5e0>
  415af8:	mov	x0, x24
  415afc:	mov	x1, x22
  415b00:	mov	x2, x23
  415b04:	bl	4023c0 <memcpy@plt>
  415b08:	strb	wzr, [x24, x23]
  415b0c:	ldrb	w25, [x21, #8]
  415b10:	cbz	w25, 415b64 <_obstack_memory_used@@Base+0x634>
  415b14:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415b18:	add	x1, x21, #0x9
  415b1c:	add	x0, x0, #0x542
  415b20:	mov	w2, #0x1                   	// #1
  415b24:	bl	4024c0 <setenv@plt>
  415b28:	cbz	w0, 415b74 <_obstack_memory_used@@Base+0x644>
  415b2c:	bl	4029e0 <__errno_location@plt>
  415b30:	ldr	w21, [x0]
  415b34:	mov	x20, x0
  415b38:	cmp	x19, #0x2
  415b3c:	b.cc	415b54 <_obstack_memory_used@@Base+0x624>  // b.lo, b.ul, b.last
  415b40:	ldr	x22, [x19]
  415b44:	mov	x0, x19
  415b48:	bl	402840 <free@plt>
  415b4c:	mov	x19, x22
  415b50:	cbnz	x22, 415b40 <_obstack_memory_used@@Base+0x610>
  415b54:	str	w21, [x20]
  415b58:	b	415c8c <_obstack_memory_used@@Base+0x75c>
  415b5c:	mov	w19, #0x1                   	// #1
  415b60:	b	415b78 <_obstack_memory_used@@Base+0x648>
  415b64:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415b68:	add	x0, x0, #0x542
  415b6c:	bl	4028e0 <unsetenv@plt>
  415b70:	cbnz	w0, 415b2c <_obstack_memory_used@@Base+0x5fc>
  415b74:	bl	402610 <tzset@plt>
  415b78:	mov	x0, x20
  415b7c:	bl	402760 <mktime@plt>
  415b80:	cmn	x0, #0x1
  415b84:	stur	x0, [x29, #-8]
  415b88:	b.eq	415ba8 <_obstack_memory_used@@Base+0x678>  // b.none
  415b8c:	mov	x0, x21
  415b90:	mov	x1, x20
  415b94:	bl	4158b4 <_obstack_memory_used@@Base+0x384>
  415b98:	tbnz	w0, #0, 415c24 <_obstack_memory_used@@Base+0x6f4>
  415b9c:	mov	x8, #0xffffffffffffffff    	// #-1
  415ba0:	stur	x8, [x29, #-8]
  415ba4:	b	415c24 <_obstack_memory_used@@Base+0x6f4>
  415ba8:	sub	x0, x29, #0x8
  415bac:	mov	x1, sp
  415bb0:	bl	4024b0 <localtime_r@plt>
  415bb4:	cbz	x0, 415c24 <_obstack_memory_used@@Base+0x6f4>
  415bb8:	ldr	q0, [x20]
  415bbc:	ldr	q1, [sp]
  415bc0:	ldr	w12, [x20, #32]
  415bc4:	ldp	w8, w9, [x20, #16]
  415bc8:	ldp	w10, w11, [sp, #16]
  415bcc:	ldr	w13, [sp, #32]
  415bd0:	eor	v0.16b, v1.16b, v0.16b
  415bd4:	cmp	w12, #0x0
  415bd8:	ext	v1.16b, v0.16b, v0.16b, #8
  415bdc:	eor	w8, w10, w8
  415be0:	eor	w9, w11, w9
  415be4:	orr	w10, w13, w12
  415be8:	cset	w11, eq  // eq = none
  415bec:	cmp	w13, #0x0
  415bf0:	orr	v0.16b, v0.16b, v1.16b
  415bf4:	cset	w12, eq  // eq = none
  415bf8:	cmp	w10, #0x0
  415bfc:	dup	v1.4s, v0.s[1]
  415c00:	eor	w10, w11, w12
  415c04:	cset	w11, ge  // ge = tcont
  415c08:	orr	v0.16b, v0.16b, v1.16b
  415c0c:	and	w10, w11, w10
  415c10:	fmov	w11, s0
  415c14:	orr	w8, w11, w8
  415c18:	orr	w8, w8, w9
  415c1c:	orr	w8, w8, w10
  415c20:	cbz	w8, 415b8c <_obstack_memory_used@@Base+0x65c>
  415c24:	cmp	x19, #0x1
  415c28:	b.eq	415c84 <_obstack_memory_used@@Base+0x754>  // b.none
  415c2c:	bl	4029e0 <__errno_location@plt>
  415c30:	ldrb	w8, [x19, #8]
  415c34:	ldr	w21, [x0]
  415c38:	mov	x20, x0
  415c3c:	cbz	w8, 415cac <_obstack_memory_used@@Base+0x77c>
  415c40:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415c44:	add	x1, x19, #0x9
  415c48:	add	x0, x0, #0x542
  415c4c:	mov	w2, #0x1                   	// #1
  415c50:	bl	4024c0 <setenv@plt>
  415c54:	cbz	w0, 415cbc <_obstack_memory_used@@Base+0x78c>
  415c58:	ldr	w21, [x20]
  415c5c:	mov	w22, wzr
  415c60:	cmp	x19, #0x2
  415c64:	b.cc	415c7c <_obstack_memory_used@@Base+0x74c>  // b.lo, b.ul, b.last
  415c68:	ldr	x23, [x19]
  415c6c:	mov	x0, x19
  415c70:	bl	402840 <free@plt>
  415c74:	mov	x19, x23
  415c78:	cbnz	x23, 415c68 <_obstack_memory_used@@Base+0x738>
  415c7c:	str	w21, [x20]
  415c80:	tbz	w22, #0, 415c8c <_obstack_memory_used@@Base+0x75c>
  415c84:	ldur	x0, [x29, #-8]
  415c88:	b	415c90 <_obstack_memory_used@@Base+0x760>
  415c8c:	mov	x0, #0xffffffffffffffff    	// #-1
  415c90:	ldp	x20, x19, [sp, #128]
  415c94:	ldp	x22, x21, [sp, #112]
  415c98:	ldp	x24, x23, [sp, #96]
  415c9c:	ldp	x26, x25, [sp, #80]
  415ca0:	ldp	x29, x30, [sp, #64]
  415ca4:	add	sp, sp, #0x90
  415ca8:	ret
  415cac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x3ad0>
  415cb0:	add	x0, x0, #0x542
  415cb4:	bl	4028e0 <unsetenv@plt>
  415cb8:	cbnz	w0, 415c58 <_obstack_memory_used@@Base+0x728>
  415cbc:	bl	402610 <tzset@plt>
  415cc0:	mov	w22, #0x1                   	// #1
  415cc4:	cmp	x19, #0x2
  415cc8:	b.cs	415c68 <_obstack_memory_used@@Base+0x738>  // b.hs, b.nlast
  415ccc:	b	415c7c <_obstack_memory_used@@Base+0x74c>
  415cd0:	mov	w8, w0
  415cd4:	cmp	w0, #0x26
  415cd8:	mov	w0, wzr
  415cdc:	b.hi	415cfc <_obstack_memory_used@@Base+0x7cc>  // b.pmore
  415ce0:	mov	w9, w8
  415ce4:	mov	w10, #0x1                   	// #1
  415ce8:	lsl	x9, x10, x9
  415cec:	mov	x10, #0x410000              	// #4259840
  415cf0:	movk	x10, #0x40, lsl #32
  415cf4:	tst	x9, x10
  415cf8:	b.ne	415d04 <_obstack_memory_used@@Base+0x7d4>  // b.any
  415cfc:	cmp	w8, #0x5f
  415d00:	b.ne	415d08 <_obstack_memory_used@@Base+0x7d8>  // b.any
  415d04:	ret
  415d08:	mov	w0, #0x1                   	// #1
  415d0c:	ret
  415d10:	stp	x29, x30, [sp, #-48]!
  415d14:	str	x21, [sp, #16]
  415d18:	stp	x20, x19, [sp, #32]
  415d1c:	mov	x29, sp
  415d20:	mov	x20, x0
  415d24:	bl	402550 <__fpending@plt>
  415d28:	ldr	w21, [x20]
  415d2c:	mov	x19, x0
  415d30:	mov	x0, x20
  415d34:	bl	415e24 <_obstack_memory_used@@Base+0x8f4>
  415d38:	mov	w8, w0
  415d3c:	tbnz	w21, #5, 415d70 <_obstack_memory_used@@Base+0x840>
  415d40:	cmp	w8, #0x0
  415d44:	csetm	w0, ne  // ne = any
  415d48:	cbnz	x19, 415d60 <_obstack_memory_used@@Base+0x830>
  415d4c:	cbz	w8, 415d60 <_obstack_memory_used@@Base+0x830>
  415d50:	bl	4029e0 <__errno_location@plt>
  415d54:	ldr	w8, [x0]
  415d58:	cmp	w8, #0x9
  415d5c:	csetm	w0, ne  // ne = any
  415d60:	ldp	x20, x19, [sp, #32]
  415d64:	ldr	x21, [sp, #16]
  415d68:	ldp	x29, x30, [sp], #48
  415d6c:	ret
  415d70:	cbnz	w8, 415d7c <_obstack_memory_used@@Base+0x84c>
  415d74:	bl	4029e0 <__errno_location@plt>
  415d78:	str	wzr, [x0]
  415d7c:	mov	w0, #0xffffffff            	// #-1
  415d80:	ldp	x20, x19, [sp, #32]
  415d84:	ldr	x21, [sp, #16]
  415d88:	ldp	x29, x30, [sp], #48
  415d8c:	ret
  415d90:	stp	x29, x30, [sp, #-16]!
  415d94:	mov	x29, sp
  415d98:	bl	40d654 <__fxstatat@plt+0xac04>
  415d9c:	cbz	x0, 415da8 <_obstack_memory_used@@Base+0x878>
  415da0:	ldp	x29, x30, [sp], #16
  415da4:	ret
  415da8:	bl	4146a4 <__fxstatat@plt+0x11c54>
  415dac:	ldrb	w9, [x0]
  415db0:	cbz	w9, 415dd8 <_obstack_memory_used@@Base+0x8a8>
  415db4:	mov	x8, xzr
  415db8:	add	x10, x0, #0x1
  415dbc:	ror	x8, x8, #55
  415dc0:	add	x8, x8, w9, uxtb
  415dc4:	ldrb	w9, [x10], #1
  415dc8:	cbnz	w9, 415dbc <_obstack_memory_used@@Base+0x88c>
  415dcc:	udiv	x9, x8, x1
  415dd0:	msub	x0, x9, x1, x8
  415dd4:	ret
  415dd8:	mov	x8, xzr
  415ddc:	udiv	x9, x8, x1
  415de0:	msub	x0, x9, x1, x8
  415de4:	ret
  415de8:	stp	x29, x30, [sp, #-16]!
  415dec:	mov	w0, #0xe                   	// #14
  415df0:	mov	x29, sp
  415df4:	bl	4025e0 <nl_langinfo@plt>
  415df8:	adrp	x8, 41b000 <_obstack_memory_used@@Base+0x5ad0>
  415dfc:	add	x8, x8, #0x8d1
  415e00:	cmp	x0, #0x0
  415e04:	csel	x8, x8, x0, eq  // eq = none
  415e08:	ldrb	w9, [x8]
  415e0c:	adrp	x10, 41c000 <_obstack_memory_used@@Base+0x6ad0>
  415e10:	add	x10, x10, #0x665
  415e14:	cmp	w9, #0x0
  415e18:	csel	x0, x10, x8, eq  // eq = none
  415e1c:	ldp	x29, x30, [sp], #16
  415e20:	ret
  415e24:	stp	x29, x30, [sp, #-48]!
  415e28:	str	x21, [sp, #16]
  415e2c:	stp	x20, x19, [sp, #32]
  415e30:	mov	x29, sp
  415e34:	mov	x19, x0
  415e38:	bl	402590 <fileno@plt>
  415e3c:	tbnz	w0, #31, 415ea4 <_obstack_memory_used@@Base+0x974>
  415e40:	mov	x0, x19
  415e44:	bl	4029a0 <__freading@plt>
  415e48:	cbz	w0, 415e68 <_obstack_memory_used@@Base+0x938>
  415e4c:	mov	x0, x19
  415e50:	bl	402590 <fileno@plt>
  415e54:	mov	w2, #0x1                   	// #1
  415e58:	mov	x1, xzr
  415e5c:	bl	402540 <lseek@plt>
  415e60:	cmn	x0, #0x1
  415e64:	b.eq	415ea4 <_obstack_memory_used@@Base+0x974>  // b.none
  415e68:	mov	x0, x19
  415e6c:	bl	415eb8 <_obstack_memory_used@@Base+0x988>
  415e70:	cbz	w0, 415ea4 <_obstack_memory_used@@Base+0x974>
  415e74:	bl	4029e0 <__errno_location@plt>
  415e78:	ldr	w21, [x0]
  415e7c:	mov	x20, x0
  415e80:	mov	x0, x19
  415e84:	bl	4025d0 <fclose@plt>
  415e88:	cbz	w21, 415e94 <_obstack_memory_used@@Base+0x964>
  415e8c:	mov	w0, #0xffffffff            	// #-1
  415e90:	str	w21, [x20]
  415e94:	ldp	x20, x19, [sp, #32]
  415e98:	ldr	x21, [sp, #16]
  415e9c:	ldp	x29, x30, [sp], #48
  415ea0:	ret
  415ea4:	mov	x0, x19
  415ea8:	ldp	x20, x19, [sp, #32]
  415eac:	ldr	x21, [sp, #16]
  415eb0:	ldp	x29, x30, [sp], #48
  415eb4:	b	4025d0 <fclose@plt>
  415eb8:	stp	x29, x30, [sp, #-32]!
  415ebc:	str	x19, [sp, #16]
  415ec0:	mov	x19, x0
  415ec4:	mov	x29, sp
  415ec8:	cbz	x0, 415ef0 <_obstack_memory_used@@Base+0x9c0>
  415ecc:	mov	x0, x19
  415ed0:	bl	4029a0 <__freading@plt>
  415ed4:	cbz	w0, 415ef0 <_obstack_memory_used@@Base+0x9c0>
  415ed8:	ldrb	w8, [x19, #1]
  415edc:	tbz	w8, #0, 415ef0 <_obstack_memory_used@@Base+0x9c0>
  415ee0:	mov	w2, #0x1                   	// #1
  415ee4:	mov	x0, x19
  415ee8:	mov	x1, xzr
  415eec:	bl	415f00 <_obstack_memory_used@@Base+0x9d0>
  415ef0:	mov	x0, x19
  415ef4:	ldr	x19, [sp, #16]
  415ef8:	ldp	x29, x30, [sp], #32
  415efc:	b	4028b0 <fflush@plt>
  415f00:	stp	x29, x30, [sp, #-48]!
  415f04:	str	x21, [sp, #16]
  415f08:	stp	x20, x19, [sp, #32]
  415f0c:	ldp	x9, x8, [x0, #8]
  415f10:	mov	w20, w2
  415f14:	mov	x19, x0
  415f18:	mov	x21, x1
  415f1c:	cmp	x8, x9
  415f20:	mov	x29, sp
  415f24:	b.ne	415f3c <_obstack_memory_used@@Base+0xa0c>  // b.any
  415f28:	ldp	x9, x8, [x19, #32]
  415f2c:	cmp	x8, x9
  415f30:	b.ne	415f3c <_obstack_memory_used@@Base+0xa0c>  // b.any
  415f34:	ldr	x8, [x19, #72]
  415f38:	cbz	x8, 415f58 <_obstack_memory_used@@Base+0xa28>
  415f3c:	mov	x0, x19
  415f40:	mov	x1, x21
  415f44:	mov	w2, w20
  415f48:	ldp	x20, x19, [sp, #32]
  415f4c:	ldr	x21, [sp, #16]
  415f50:	ldp	x29, x30, [sp], #48
  415f54:	b	402830 <fseeko@plt>
  415f58:	mov	x0, x19
  415f5c:	bl	402590 <fileno@plt>
  415f60:	mov	x1, x21
  415f64:	mov	w2, w20
  415f68:	bl	402540 <lseek@plt>
  415f6c:	cmn	x0, #0x1
  415f70:	b.eq	415f8c <_obstack_memory_used@@Base+0xa5c>  // b.none
  415f74:	ldr	w9, [x19]
  415f78:	mov	x8, x0
  415f7c:	mov	w0, wzr
  415f80:	str	x8, [x19, #144]
  415f84:	and	w9, w9, #0xffffffef
  415f88:	str	w9, [x19]
  415f8c:	ldp	x20, x19, [sp, #32]
  415f90:	ldr	x21, [sp, #16]
  415f94:	ldp	x29, x30, [sp], #48
  415f98:	ret
  415f9c:	nop
  415fa0:	stp	x29, x30, [sp, #-48]!
  415fa4:	mov	x29, sp
  415fa8:	str	q0, [sp, #16]
  415fac:	str	q1, [sp, #32]
  415fb0:	ldp	x2, x0, [sp, #16]
  415fb4:	ldp	x5, x3, [sp, #32]
  415fb8:	mrs	x10, fpcr
  415fbc:	lsr	x1, x0, #63
  415fc0:	ubfx	x6, x0, #0, #48
  415fc4:	and	w13, w1, #0xff
  415fc8:	mov	x14, x1
  415fcc:	ubfx	x7, x0, #48, #15
  415fd0:	cbz	w7, 4163f0 <_obstack_memory_used@@Base+0xec0>
  415fd4:	mov	w4, #0x7fff                	// #32767
  415fd8:	cmp	w7, w4
  415fdc:	b.eq	416438 <_obstack_memory_used@@Base+0xf08>  // b.none
  415fe0:	and	x7, x7, #0xffff
  415fe4:	extr	x6, x6, x2, #61
  415fe8:	mov	x15, #0xffffffffffffc001    	// #-16383
  415fec:	orr	x4, x6, #0x8000000000000
  415ff0:	add	x7, x7, x15
  415ff4:	lsl	x2, x2, #3
  415ff8:	mov	x1, #0x0                   	// #0
  415ffc:	mov	x16, #0x0                   	// #0
  416000:	mov	w0, #0x0                   	// #0
  416004:	lsr	x8, x3, #63
  416008:	ubfx	x6, x3, #0, #48
  41600c:	and	w15, w8, #0xff
  416010:	ubfx	x9, x3, #48, #15
  416014:	cbz	w9, 4163ac <_obstack_memory_used@@Base+0xe7c>
  416018:	mov	w11, #0x7fff                	// #32767
  41601c:	cmp	w9, w11
  416020:	b.eq	4160e4 <_obstack_memory_used@@Base+0xbb4>  // b.none
  416024:	and	x9, x9, #0xffff
  416028:	extr	x6, x6, x5, #61
  41602c:	mov	x12, #0xffffffffffffc001    	// #-16383
  416030:	orr	x6, x6, #0x8000000000000
  416034:	add	x9, x9, x12
  416038:	lsl	x5, x5, #3
  41603c:	sub	x7, x7, x9
  416040:	mov	x9, #0x0                   	// #0
  416044:	eor	w11, w13, w15
  416048:	cmp	x1, #0x9
  41604c:	and	x3, x11, #0xff
  416050:	mov	x12, x3
  416054:	b.gt	416384 <_obstack_memory_used@@Base+0xe54>
  416058:	cmp	x1, #0x7
  41605c:	b.gt	416544 <_obstack_memory_used@@Base+0x1014>
  416060:	cmp	x1, #0x3
  416064:	b.eq	416080 <_obstack_memory_used@@Base+0xb50>  // b.none
  416068:	b.le	416354 <_obstack_memory_used@@Base+0xe24>
  41606c:	cmp	x1, #0x5
  416070:	b.eq	416394 <_obstack_memory_used@@Base+0xe64>  // b.none
  416074:	b.le	416178 <_obstack_memory_used@@Base+0xc48>
  416078:	cmp	x1, #0x6
  41607c:	b.eq	416148 <_obstack_memory_used@@Base+0xc18>  // b.none
  416080:	cmp	x9, #0x1
  416084:	b.eq	4164c8 <_obstack_memory_used@@Base+0xf98>  // b.none
  416088:	cbz	x9, 41609c <_obstack_memory_used@@Base+0xb6c>
  41608c:	cmp	x9, #0x2
  416090:	b.eq	4166cc <_obstack_memory_used@@Base+0x119c>  // b.none
  416094:	cmp	x9, #0x3
  416098:	b.eq	4166b4 <_obstack_memory_used@@Base+0x1184>  // b.none
  41609c:	mov	x1, #0x3fff                	// #16383
  4160a0:	mov	x12, x8
  4160a4:	add	x3, x7, x1
  4160a8:	cmp	x3, #0x0
  4160ac:	b.le	416588 <_obstack_memory_used@@Base+0x1058>
  4160b0:	tst	x5, #0x7
  4160b4:	b.ne	4164f8 <_obstack_memory_used@@Base+0xfc8>  // b.any
  4160b8:	and	w11, w12, #0x1
  4160bc:	tbz	x6, #52, 4160c8 <_obstack_memory_used@@Base+0xb98>
  4160c0:	and	x6, x6, #0xffefffffffffffff
  4160c4:	add	x3, x7, #0x4, lsl #12
  4160c8:	mov	x1, #0x7ffe                	// #32766
  4160cc:	cmp	x3, x1
  4160d0:	b.gt	416670 <_obstack_memory_used@@Base+0x1140>
  4160d4:	and	w1, w3, #0x7fff
  4160d8:	extr	x2, x6, x5, #3
  4160dc:	ubfx	x6, x6, #3, #48
  4160e0:	b	416154 <_obstack_memory_used@@Base+0xc24>
  4160e4:	mov	x9, #0xffffffffffff8001    	// #-32767
  4160e8:	orr	x3, x6, x5
  4160ec:	add	x7, x7, x9
  4160f0:	cbz	x3, 41646c <_obstack_memory_used@@Base+0xf3c>
  4160f4:	tst	x6, #0x800000000000
  4160f8:	orr	x1, x1, #0x3
  4160fc:	csinc	w0, w0, wzr, ne  // ne = any
  416100:	mov	x9, #0x3                   	// #3
  416104:	eor	w11, w13, w15
  416108:	cmp	x1, #0x9
  41610c:	and	x3, x11, #0xff
  416110:	mov	x12, x3
  416114:	b.le	416058 <_obstack_memory_used@@Base+0xb28>
  416118:	cmp	x1, #0xf
  41611c:	b.ne	416384 <_obstack_memory_used@@Base+0xe54>  // b.any
  416120:	tbz	x4, #47, 416530 <_obstack_memory_used@@Base+0x1000>
  416124:	tbnz	x6, #47, 416530 <_obstack_memory_used@@Base+0x1000>
  416128:	orr	x6, x6, #0x800000000000
  41612c:	mov	w11, w15
  416130:	and	x6, x6, #0xffffffffffff
  416134:	mov	x2, x5
  416138:	mov	w1, #0x7fff                	// #32767
  41613c:	b	416154 <_obstack_memory_used@@Base+0xc24>
  416140:	cmp	x1, #0x2
  416144:	b.ne	416180 <_obstack_memory_used@@Base+0xc50>  // b.any
  416148:	mov	w1, #0x0                   	// #0
  41614c:	mov	x6, #0x0                   	// #0
  416150:	mov	x2, #0x0                   	// #0
  416154:	mov	x5, #0x0                   	// #0
  416158:	orr	w1, w1, w11, lsl #15
  41615c:	bfxil	x5, x6, #0, #48
  416160:	fmov	d0, x2
  416164:	bfi	x5, x1, #48, #16
  416168:	fmov	v0.d[1], x5
  41616c:	cbnz	w0, 416374 <_obstack_memory_used@@Base+0xe44>
  416170:	ldp	x29, x30, [sp], #48
  416174:	ret
  416178:	cmp	x1, #0x4
  41617c:	b.eq	416148 <_obstack_memory_used@@Base+0xc18>  // b.none
  416180:	cmp	x4, x6
  416184:	b.ls	4164dc <_obstack_memory_used@@Base+0xfac>  // b.plast
  416188:	lsr	x3, x4, #1
  41618c:	extr	x8, x4, x2, #1
  416190:	lsl	x2, x2, #63
  416194:	ubfx	x14, x6, #20, #32
  416198:	extr	x9, x6, x5, #52
  41619c:	lsl	x13, x5, #12
  4161a0:	and	x15, x9, #0xffffffff
  4161a4:	udiv	x5, x3, x14
  4161a8:	msub	x3, x5, x14, x3
  4161ac:	mul	x1, x15, x5
  4161b0:	extr	x3, x3, x8, #32
  4161b4:	cmp	x1, x3
  4161b8:	b.ls	4161cc <_obstack_memory_used@@Base+0xc9c>  // b.plast
  4161bc:	adds	x3, x9, x3
  4161c0:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  4161c4:	b.hi	4167ac <_obstack_memory_used@@Base+0x127c>  // b.pmore
  4161c8:	sub	x5, x5, #0x1
  4161cc:	sub	x3, x3, x1
  4161d0:	mov	x4, x8
  4161d4:	udiv	x1, x3, x14
  4161d8:	msub	x3, x1, x14, x3
  4161dc:	mul	x6, x15, x1
  4161e0:	bfi	x4, x3, #32, #32
  4161e4:	cmp	x6, x4
  4161e8:	b.ls	4161fc <_obstack_memory_used@@Base+0xccc>  // b.plast
  4161ec:	adds	x4, x9, x4
  4161f0:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  4161f4:	b.hi	4167a0 <_obstack_memory_used@@Base+0x1270>  // b.pmore
  4161f8:	sub	x1, x1, #0x1
  4161fc:	orr	x8, x1, x5, lsl #32
  416200:	and	x17, x13, #0xffffffff
  416204:	and	x1, x8, #0xffffffff
  416208:	lsr	x16, x13, #32
  41620c:	lsr	x5, x8, #32
  416210:	sub	x4, x4, x6
  416214:	mov	x18, #0x100000000           	// #4294967296
  416218:	mul	x3, x1, x17
  41621c:	mul	x30, x5, x17
  416220:	madd	x6, x16, x1, x30
  416224:	and	x1, x3, #0xffffffff
  416228:	mul	x5, x5, x16
  41622c:	add	x3, x6, x3, lsr #32
  416230:	add	x6, x5, x18
  416234:	cmp	x30, x3
  416238:	csel	x5, x6, x5, hi  // hi = pmore
  41623c:	add	x1, x1, x3, lsl #32
  416240:	add	x5, x5, x3, lsr #32
  416244:	cmp	x4, x5
  416248:	b.cc	416554 <_obstack_memory_used@@Base+0x1024>  // b.lo, b.ul, b.last
  41624c:	ccmp	x2, x1, #0x2, eq  // eq = none
  416250:	mov	x6, x8
  416254:	b.cc	416554 <_obstack_memory_used@@Base+0x1024>  // b.lo, b.ul, b.last
  416258:	subs	x8, x2, x1
  41625c:	mov	x3, #0x3fff                	// #16383
  416260:	cmp	x2, x1
  416264:	add	x3, x7, x3
  416268:	sbc	x4, x4, x5
  41626c:	cmp	x9, x4
  416270:	b.eq	4167b8 <_obstack_memory_used@@Base+0x1288>  // b.none
  416274:	udiv	x5, x4, x14
  416278:	msub	x4, x5, x14, x4
  41627c:	mul	x2, x15, x5
  416280:	extr	x1, x4, x8, #32
  416284:	cmp	x2, x1
  416288:	b.ls	41629c <_obstack_memory_used@@Base+0xd6c>  // b.plast
  41628c:	adds	x1, x9, x1
  416290:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  416294:	b.hi	416870 <_obstack_memory_used@@Base+0x1340>  // b.pmore
  416298:	sub	x5, x5, #0x1
  41629c:	sub	x1, x1, x2
  4162a0:	udiv	x2, x1, x14
  4162a4:	msub	x1, x2, x14, x1
  4162a8:	mul	x15, x15, x2
  4162ac:	bfi	x8, x1, #32, #32
  4162b0:	mov	x1, x8
  4162b4:	cmp	x15, x8
  4162b8:	b.ls	4162cc <_obstack_memory_used@@Base+0xd9c>  // b.plast
  4162bc:	adds	x1, x9, x8
  4162c0:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  4162c4:	b.hi	41687c <_obstack_memory_used@@Base+0x134c>  // b.pmore
  4162c8:	sub	x2, x2, #0x1
  4162cc:	orr	x5, x2, x5, lsl #32
  4162d0:	mov	x11, #0x100000000           	// #4294967296
  4162d4:	and	x4, x5, #0xffffffff
  4162d8:	sub	x1, x1, x15
  4162dc:	lsr	x14, x5, #32
  4162e0:	mul	x2, x17, x4
  4162e4:	mul	x17, x14, x17
  4162e8:	madd	x4, x16, x4, x17
  4162ec:	and	x8, x2, #0xffffffff
  4162f0:	mul	x16, x16, x14
  4162f4:	add	x2, x4, x2, lsr #32
  4162f8:	add	x4, x16, x11
  4162fc:	cmp	x17, x2
  416300:	csel	x16, x4, x16, hi  // hi = pmore
  416304:	add	x4, x8, x2, lsl #32
  416308:	add	x16, x16, x2, lsr #32
  41630c:	cmp	x1, x16
  416310:	b.cs	4166f0 <_obstack_memory_used@@Base+0x11c0>  // b.hs, b.nlast
  416314:	adds	x2, x9, x1
  416318:	sub	x8, x5, #0x1
  41631c:	mov	x1, x2
  416320:	b.cs	416334 <_obstack_memory_used@@Base+0xe04>  // b.hs, b.nlast
  416324:	cmp	x2, x16
  416328:	b.cc	4167f0 <_obstack_memory_used@@Base+0x12c0>  // b.lo, b.ul, b.last
  41632c:	ccmp	x13, x4, #0x2, eq  // eq = none
  416330:	b.cc	4167f0 <_obstack_memory_used@@Base+0x12c0>  // b.lo, b.ul, b.last
  416334:	cmp	x13, x4
  416338:	mov	x5, x8
  41633c:	cset	w2, ne  // ne = any
  416340:	cmp	w2, #0x0
  416344:	orr	x2, x5, #0x1
  416348:	ccmp	x1, x16, #0x0, eq  // eq = none
  41634c:	csel	x5, x2, x5, ne  // ne = any
  416350:	b	4160a8 <_obstack_memory_used@@Base+0xb78>
  416354:	cmp	x1, #0x1
  416358:	b.ne	416140 <_obstack_memory_used@@Base+0xc10>  // b.any
  41635c:	mov	x4, #0x0                   	// #0
  416360:	fmov	d0, x4
  416364:	lsl	x3, x3, #63
  416368:	orr	w0, w0, #0x2
  41636c:	orr	x5, x3, #0x7fff000000000000
  416370:	fmov	v0.d[1], x5
  416374:	str	q0, [sp, #16]
  416378:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  41637c:	ldr	q0, [sp, #16]
  416380:	b	416170 <_obstack_memory_used@@Base+0xc40>
  416384:	cmp	x1, #0xb
  416388:	b.gt	416458 <_obstack_memory_used@@Base+0xf28>
  41638c:	cmp	x1, #0xa
  416390:	b.ne	416080 <_obstack_memory_used@@Base+0xb50>  // b.any
  416394:	mov	w11, #0x0                   	// #0
  416398:	mov	x6, #0xffffffffffff        	// #281474976710655
  41639c:	mov	x2, #0xffffffffffffffff    	// #-1
  4163a0:	mov	w0, #0x1                   	// #1
  4163a4:	mov	w1, #0x7fff                	// #32767
  4163a8:	b	416154 <_obstack_memory_used@@Base+0xc24>
  4163ac:	orr	x3, x6, x5
  4163b0:	cbz	x3, 416498 <_obstack_memory_used@@Base+0xf68>
  4163b4:	cbz	x6, 41664c <_obstack_memory_used@@Base+0x111c>
  4163b8:	clz	x3, x6
  4163bc:	sub	x9, x3, #0xf
  4163c0:	add	w12, w9, #0x3
  4163c4:	mov	w11, #0x3d                  	// #61
  4163c8:	sub	w9, w11, w9
  4163cc:	lsl	x6, x6, x12
  4163d0:	lsr	x9, x5, x9
  4163d4:	orr	x6, x9, x6
  4163d8:	lsl	x5, x5, x12
  4163dc:	add	x7, x3, x7
  4163e0:	mov	x11, #0x3fef                	// #16367
  4163e4:	mov	x9, #0x0                   	// #0
  4163e8:	add	x7, x7, x11
  4163ec:	b	416044 <_obstack_memory_used@@Base+0xb14>
  4163f0:	orr	x4, x6, x2
  4163f4:	cbz	x4, 416480 <_obstack_memory_used@@Base+0xf50>
  4163f8:	cbz	x6, 416628 <_obstack_memory_used@@Base+0x10f8>
  4163fc:	clz	x0, x6
  416400:	sub	x4, x0, #0xf
  416404:	add	w7, w4, #0x3
  416408:	mov	w1, #0x3d                  	// #61
  41640c:	sub	w4, w1, w4
  416410:	lsl	x6, x6, x7
  416414:	lsr	x4, x2, x4
  416418:	orr	x4, x4, x6
  41641c:	lsl	x2, x2, x7
  416420:	mov	x7, #0xffffffffffffc011    	// #-16367
  416424:	mov	x1, #0x0                   	// #0
  416428:	sub	x7, x7, x0
  41642c:	mov	x16, #0x0                   	// #0
  416430:	mov	w0, #0x0                   	// #0
  416434:	b	416004 <_obstack_memory_used@@Base+0xad4>
  416438:	orr	x4, x6, x2
  41643c:	cbnz	x4, 4164ac <_obstack_memory_used@@Base+0xf7c>
  416440:	mov	x2, #0x0                   	// #0
  416444:	mov	x1, #0x8                   	// #8
  416448:	mov	x7, #0x7fff                	// #32767
  41644c:	mov	x16, #0x2                   	// #2
  416450:	mov	w0, #0x0                   	// #0
  416454:	b	416004 <_obstack_memory_used@@Base+0xad4>
  416458:	mov	x6, x4
  41645c:	mov	x5, x2
  416460:	mov	x8, x14
  416464:	mov	x9, x16
  416468:	b	416080 <_obstack_memory_used@@Base+0xb50>
  41646c:	orr	x1, x1, #0x2
  416470:	mov	x6, #0x0                   	// #0
  416474:	mov	x5, #0x0                   	// #0
  416478:	mov	x9, #0x2                   	// #2
  41647c:	b	416104 <_obstack_memory_used@@Base+0xbd4>
  416480:	mov	x2, #0x0                   	// #0
  416484:	mov	x1, #0x4                   	// #4
  416488:	mov	x7, #0x0                   	// #0
  41648c:	mov	x16, #0x1                   	// #1
  416490:	mov	w0, #0x0                   	// #0
  416494:	b	416004 <_obstack_memory_used@@Base+0xad4>
  416498:	orr	x1, x1, #0x1
  41649c:	mov	x6, #0x0                   	// #0
  4164a0:	mov	x5, #0x0                   	// #0
  4164a4:	mov	x9, #0x1                   	// #1
  4164a8:	b	416044 <_obstack_memory_used@@Base+0xb14>
  4164ac:	lsr	x0, x6, #47
  4164b0:	mov	x4, x6
  4164b4:	eor	w0, w0, #0x1
  4164b8:	mov	x1, #0xc                   	// #12
  4164bc:	mov	x7, #0x7fff                	// #32767
  4164c0:	mov	x16, #0x3                   	// #3
  4164c4:	b	416004 <_obstack_memory_used@@Base+0xad4>
  4164c8:	mov	w11, w8
  4164cc:	mov	w1, #0x0                   	// #0
  4164d0:	mov	x6, #0x0                   	// #0
  4164d4:	mov	x2, #0x0                   	// #0
  4164d8:	b	416154 <_obstack_memory_used@@Base+0xc24>
  4164dc:	ccmp	x5, x2, #0x2, eq  // eq = none
  4164e0:	b.ls	416188 <_obstack_memory_used@@Base+0xc58>  // b.plast
  4164e4:	mov	x8, x2
  4164e8:	sub	x7, x7, #0x1
  4164ec:	mov	x3, x4
  4164f0:	mov	x2, #0x0                   	// #0
  4164f4:	b	416194 <_obstack_memory_used@@Base+0xc64>
  4164f8:	and	x1, x10, #0xc00000
  4164fc:	orr	w0, w0, #0x10
  416500:	cmp	x1, #0x400, lsl #12
  416504:	b.eq	416858 <_obstack_memory_used@@Base+0x1328>  // b.none
  416508:	cmp	x1, #0x800, lsl #12
  41650c:	b.eq	41676c <_obstack_memory_used@@Base+0x123c>  // b.none
  416510:	cbnz	x1, 4160b8 <_obstack_memory_used@@Base+0xb88>
  416514:	and	x1, x5, #0xf
  416518:	and	w11, w12, #0x1
  41651c:	cmp	x1, #0x4
  416520:	b.eq	4160bc <_obstack_memory_used@@Base+0xb8c>  // b.none
  416524:	adds	x5, x5, #0x4
  416528:	cinc	x6, x6, cs  // cs = hs, nlast
  41652c:	b	4160bc <_obstack_memory_used@@Base+0xb8c>
  416530:	orr	x6, x4, #0x800000000000
  416534:	mov	w11, w13
  416538:	and	x6, x6, #0xffffffffffff
  41653c:	mov	w1, #0x7fff                	// #32767
  416540:	b	416154 <_obstack_memory_used@@Base+0xc24>
  416544:	mov	w1, #0x7fff                	// #32767
  416548:	mov	x6, #0x0                   	// #0
  41654c:	mov	x2, #0x0                   	// #0
  416550:	b	416154 <_obstack_memory_used@@Base+0xc24>
  416554:	adds	x3, x2, x13
  416558:	sub	x6, x8, #0x1
  41655c:	adc	x4, x4, x9
  416560:	cset	x18, cs  // cs = hs, nlast
  416564:	mov	x2, x3
  416568:	cmp	x9, x4
  41656c:	b.cs	4166e0 <_obstack_memory_used@@Base+0x11b0>  // b.hs, b.nlast
  416570:	cmp	x5, x4
  416574:	b.ls	416708 <_obstack_memory_used@@Base+0x11d8>  // b.plast
  416578:	adds	x2, x13, x3
  41657c:	sub	x6, x8, #0x2
  416580:	adc	x4, x4, x9
  416584:	b	416258 <_obstack_memory_used@@Base+0xd28>
  416588:	mov	x1, #0x1                   	// #1
  41658c:	sub	x1, x1, x3
  416590:	cmp	x1, #0x74
  416594:	and	w11, w12, #0x1
  416598:	b.le	4165b4 <_obstack_memory_used@@Base+0x1084>
  41659c:	orr	x2, x5, x6
  4165a0:	cbnz	x2, 4167d4 <_obstack_memory_used@@Base+0x12a4>
  4165a4:	orr	w0, w0, #0x8
  4165a8:	mov	w1, #0x0                   	// #0
  4165ac:	mov	x6, #0x0                   	// #0
  4165b0:	b	416698 <_obstack_memory_used@@Base+0x1168>
  4165b4:	cmp	x1, #0x3f
  4165b8:	b.le	416714 <_obstack_memory_used@@Base+0x11e4>
  4165bc:	mov	w2, #0x80                  	// #128
  4165c0:	sub	w2, w2, w1
  4165c4:	cmp	x1, #0x40
  4165c8:	sub	w1, w1, #0x40
  4165cc:	lsl	x2, x6, x2
  4165d0:	orr	x2, x5, x2
  4165d4:	csel	x5, x2, x5, ne  // ne = any
  4165d8:	lsr	x6, x6, x1
  4165dc:	cmp	x5, #0x0
  4165e0:	cset	x2, ne  // ne = any
  4165e4:	orr	x2, x2, x6
  4165e8:	ands	x6, x2, #0x7
  4165ec:	b.eq	416748 <_obstack_memory_used@@Base+0x1218>  // b.none
  4165f0:	mov	x6, #0x0                   	// #0
  4165f4:	and	x10, x10, #0xc00000
  4165f8:	orr	w0, w0, #0x10
  4165fc:	cmp	x10, #0x400, lsl #12
  416600:	b.eq	416894 <_obstack_memory_used@@Base+0x1364>  // b.none
  416604:	cmp	x10, #0x800, lsl #12
  416608:	b.eq	4168a8 <_obstack_memory_used@@Base+0x1378>  // b.none
  41660c:	cbz	x10, 416810 <_obstack_memory_used@@Base+0x12e0>
  416610:	tbnz	x6, #51, 416828 <_obstack_memory_used@@Base+0x12f8>
  416614:	orr	w0, w0, #0x8
  416618:	extr	x2, x6, x2, #3
  41661c:	mov	w1, #0x0                   	// #0
  416620:	ubfx	x6, x6, #3, #48
  416624:	b	416698 <_obstack_memory_used@@Base+0x1168>
  416628:	clz	x7, x2
  41662c:	add	x4, x7, #0x31
  416630:	add	x0, x7, #0x40
  416634:	cmp	x4, #0x3c
  416638:	b.le	416404 <_obstack_memory_used@@Base+0xed4>
  41663c:	sub	w4, w4, #0x3d
  416640:	lsl	x4, x2, x4
  416644:	mov	x2, #0x0                   	// #0
  416648:	b	416420 <_obstack_memory_used@@Base+0xef0>
  41664c:	clz	x3, x5
  416650:	add	x9, x3, #0x31
  416654:	add	x3, x3, #0x40
  416658:	cmp	x9, #0x3c
  41665c:	b.le	4163c0 <_obstack_memory_used@@Base+0xe90>
  416660:	sub	w6, w9, #0x3d
  416664:	lsl	x6, x5, x6
  416668:	mov	x5, #0x0                   	// #0
  41666c:	b	4163dc <_obstack_memory_used@@Base+0xeac>
  416670:	and	x2, x10, #0xc00000
  416674:	cmp	x2, #0x400, lsl #12
  416678:	b.eq	41683c <_obstack_memory_used@@Base+0x130c>  // b.none
  41667c:	cmp	x2, #0x800, lsl #12
  416680:	b.eq	416784 <_obstack_memory_used@@Base+0x1254>  // b.none
  416684:	cbz	x2, 416760 <_obstack_memory_used@@Base+0x1230>
  416688:	mov	x6, #0xffffffffffff        	// #281474976710655
  41668c:	mov	x2, #0xffffffffffffffff    	// #-1
  416690:	mov	w3, #0x14                  	// #20
  416694:	orr	w0, w0, w3
  416698:	mov	x5, #0x0                   	// #0
  41669c:	orr	w1, w1, w11, lsl #15
  4166a0:	bfxil	x5, x6, #0, #48
  4166a4:	fmov	d0, x2
  4166a8:	bfi	x5, x1, #48, #16
  4166ac:	fmov	v0.d[1], x5
  4166b0:	b	416374 <_obstack_memory_used@@Base+0xe44>
  4166b4:	orr	x6, x6, #0x800000000000
  4166b8:	mov	w11, w8
  4166bc:	and	x6, x6, #0xffffffffffff
  4166c0:	mov	x2, x5
  4166c4:	mov	w1, #0x7fff                	// #32767
  4166c8:	b	416154 <_obstack_memory_used@@Base+0xc24>
  4166cc:	mov	w11, w8
  4166d0:	mov	w1, #0x7fff                	// #32767
  4166d4:	mov	x6, #0x0                   	// #0
  4166d8:	mov	x2, #0x0                   	// #0
  4166dc:	b	416154 <_obstack_memory_used@@Base+0xc24>
  4166e0:	cmp	x18, #0x0
  4166e4:	ccmp	x9, x4, #0x0, eq  // eq = none
  4166e8:	b.ne	416258 <_obstack_memory_used@@Base+0xd28>  // b.any
  4166ec:	b	416570 <_obstack_memory_used@@Base+0x1040>
  4166f0:	cmp	x4, #0x0
  4166f4:	cset	w2, ne  // ne = any
  4166f8:	cmp	w2, #0x0
  4166fc:	ccmp	x1, x16, #0x0, ne  // ne = any
  416700:	b.ne	416340 <_obstack_memory_used@@Base+0xe10>  // b.any
  416704:	b	416314 <_obstack_memory_used@@Base+0xde4>
  416708:	ccmp	x1, x3, #0x0, eq  // eq = none
  41670c:	b.ls	416258 <_obstack_memory_used@@Base+0xd28>  // b.plast
  416710:	b	416578 <_obstack_memory_used@@Base+0x1048>
  416714:	mov	w2, #0x40                  	// #64
  416718:	sub	w2, w2, w1
  41671c:	lsr	x4, x5, x1
  416720:	lsl	x5, x5, x2
  416724:	cmp	x5, #0x0
  416728:	cset	x3, ne  // ne = any
  41672c:	lsl	x2, x6, x2
  416730:	orr	x2, x2, x4
  416734:	lsr	x6, x6, x1
  416738:	orr	x2, x2, x3
  41673c:	tst	x2, #0x7
  416740:	b.ne	4165f4 <_obstack_memory_used@@Base+0x10c4>  // b.any
  416744:	tbnz	x6, #51, 4168b4 <_obstack_memory_used@@Base+0x1384>
  416748:	mov	w1, #0x0                   	// #0
  41674c:	extr	x2, x6, x2, #3
  416750:	ubfx	x6, x6, #3, #48
  416754:	tbz	w10, #11, 416154 <_obstack_memory_used@@Base+0xc24>
  416758:	orr	w0, w0, #0x8
  41675c:	b	416698 <_obstack_memory_used@@Base+0x1168>
  416760:	mov	w1, #0x7fff                	// #32767
  416764:	mov	x6, #0x0                   	// #0
  416768:	b	416690 <_obstack_memory_used@@Base+0x1160>
  41676c:	mov	w11, #0x0                   	// #0
  416770:	cbz	x12, 4160bc <_obstack_memory_used@@Base+0xb8c>
  416774:	adds	x5, x5, #0x8
  416778:	mov	w11, #0x1                   	// #1
  41677c:	cinc	x6, x6, cs  // cs = hs, nlast
  416780:	b	4160bc <_obstack_memory_used@@Base+0xb8c>
  416784:	cmp	x12, #0x0
  416788:	mov	w2, #0x7fff                	// #32767
  41678c:	mov	x6, #0xffffffffffff        	// #281474976710655
  416790:	csel	w1, w1, w2, eq  // eq = none
  416794:	csel	x6, x6, xzr, eq  // eq = none
  416798:	csetm	x2, eq  // eq = none
  41679c:	b	416690 <_obstack_memory_used@@Base+0x1160>
  4167a0:	sub	x1, x1, #0x2
  4167a4:	add	x4, x4, x9
  4167a8:	b	4161fc <_obstack_memory_used@@Base+0xccc>
  4167ac:	sub	x5, x5, #0x2
  4167b0:	add	x3, x3, x9
  4167b4:	b	4161cc <_obstack_memory_used@@Base+0xc9c>
  4167b8:	cmp	x3, #0x0
  4167bc:	mov	x5, #0xffffffffffffffff    	// #-1
  4167c0:	b.gt	4164f8 <_obstack_memory_used@@Base+0xfc8>
  4167c4:	mov	x1, #0x1                   	// #1
  4167c8:	sub	x1, x1, x3
  4167cc:	cmp	x1, #0x74
  4167d0:	b.le	4165b4 <_obstack_memory_used@@Base+0x1084>
  4167d4:	and	x10, x10, #0xc00000
  4167d8:	orr	w0, w0, #0x10
  4167dc:	cmp	x10, #0x400, lsl #12
  4167e0:	b.eq	416888 <_obstack_memory_used@@Base+0x1358>  // b.none
  4167e4:	cmp	x10, #0x800, lsl #12
  4167e8:	csel	x2, x12, xzr, eq  // eq = none
  4167ec:	b	4165a4 <_obstack_memory_used@@Base+0x1074>
  4167f0:	lsl	x8, x13, #1
  4167f4:	sub	x5, x5, #0x2
  4167f8:	cmp	x13, x8
  4167fc:	cinc	x1, x9, hi  // hi = pmore
  416800:	cmp	x4, x8
  416804:	add	x1, x2, x1
  416808:	cset	w2, ne  // ne = any
  41680c:	b	416340 <_obstack_memory_used@@Base+0xe10>
  416810:	and	x1, x2, #0xf
  416814:	cmp	x1, #0x4
  416818:	b.eq	416824 <_obstack_memory_used@@Base+0x12f4>  // b.none
  41681c:	adds	x2, x2, #0x4
  416820:	cinc	x6, x6, cs  // cs = hs, nlast
  416824:	tbz	x6, #51, 416614 <_obstack_memory_used@@Base+0x10e4>
  416828:	orr	w0, w0, #0x8
  41682c:	mov	w1, #0x1                   	// #1
  416830:	mov	x6, #0x0                   	// #0
  416834:	mov	x2, #0x0                   	// #0
  416838:	b	416698 <_obstack_memory_used@@Base+0x1168>
  41683c:	cmp	x12, #0x0
  416840:	mov	w2, #0x7fff                	// #32767
  416844:	mov	x6, #0xffffffffffff        	// #281474976710655
  416848:	csel	w1, w1, w2, ne  // ne = any
  41684c:	csel	x6, x6, xzr, ne  // ne = any
  416850:	csetm	x2, ne  // ne = any
  416854:	b	416690 <_obstack_memory_used@@Base+0x1160>
  416858:	mov	w11, #0x1                   	// #1
  41685c:	cbnz	x12, 4160bc <_obstack_memory_used@@Base+0xb8c>
  416860:	adds	x5, x5, #0x8
  416864:	mov	w11, #0x0                   	// #0
  416868:	cinc	x6, x6, cs  // cs = hs, nlast
  41686c:	b	4160bc <_obstack_memory_used@@Base+0xb8c>
  416870:	sub	x5, x5, #0x2
  416874:	add	x1, x1, x9
  416878:	b	41629c <_obstack_memory_used@@Base+0xd6c>
  41687c:	sub	x2, x2, #0x2
  416880:	add	x1, x1, x9
  416884:	b	4162cc <_obstack_memory_used@@Base+0xd9c>
  416888:	mov	x2, #0x1                   	// #1
  41688c:	sub	x2, x2, x12
  416890:	b	4165a4 <_obstack_memory_used@@Base+0x1074>
  416894:	cbnz	x12, 416824 <_obstack_memory_used@@Base+0x12f4>
  416898:	adds	x2, x2, #0x8
  41689c:	cinc	x6, x6, cs  // cs = hs, nlast
  4168a0:	tbnz	x6, #51, 416828 <_obstack_memory_used@@Base+0x12f8>
  4168a4:	b	416614 <_obstack_memory_used@@Base+0x10e4>
  4168a8:	cbnz	x12, 416898 <_obstack_memory_used@@Base+0x1368>
  4168ac:	tbnz	x6, #51, 416828 <_obstack_memory_used@@Base+0x12f8>
  4168b0:	b	416614 <_obstack_memory_used@@Base+0x10e4>
  4168b4:	orr	w0, w0, #0x10
  4168b8:	b	416828 <_obstack_memory_used@@Base+0x12f8>
  4168bc:	nop
  4168c0:	stp	x29, x30, [sp, #-48]!
  4168c4:	mov	x29, sp
  4168c8:	str	q0, [sp, #16]
  4168cc:	str	q1, [sp, #32]
  4168d0:	ldp	x6, x1, [sp, #16]
  4168d4:	ldp	x7, x0, [sp, #32]
  4168d8:	mrs	x2, fpcr
  4168dc:	ubfx	x4, x1, #48, #15
  4168e0:	lsr	x2, x1, #63
  4168e4:	lsr	x3, x0, #63
  4168e8:	ubfx	x9, x0, #0, #48
  4168ec:	mov	x5, #0x7fff                	// #32767
  4168f0:	mov	x10, x6
  4168f4:	cmp	x4, x5
  4168f8:	and	w2, w2, #0xff
  4168fc:	ubfx	x1, x1, #0, #48
  416900:	and	w3, w3, #0xff
  416904:	ubfx	x0, x0, #48, #15
  416908:	b.eq	41693c <_obstack_memory_used@@Base+0x140c>  // b.none
  41690c:	cmp	x0, x5
  416910:	b.eq	416928 <_obstack_memory_used@@Base+0x13f8>  // b.none
  416914:	cmp	x4, x0
  416918:	mov	w0, #0x1                   	// #1
  41691c:	b.eq	416954 <_obstack_memory_used@@Base+0x1424>  // b.none
  416920:	ldp	x29, x30, [sp], #48
  416924:	ret
  416928:	orr	x8, x9, x7
  41692c:	cbnz	x8, 4169b8 <_obstack_memory_used@@Base+0x1488>
  416930:	mov	w0, #0x1                   	// #1
  416934:	ldp	x29, x30, [sp], #48
  416938:	ret
  41693c:	orr	x5, x1, x6
  416940:	cbnz	x5, 416988 <_obstack_memory_used@@Base+0x1458>
  416944:	cmp	x0, x4
  416948:	b.ne	416930 <_obstack_memory_used@@Base+0x1400>  // b.any
  41694c:	orr	x8, x9, x7
  416950:	cbnz	x8, 4169b8 <_obstack_memory_used@@Base+0x1488>
  416954:	cmp	x1, x9
  416958:	mov	w0, #0x1                   	// #1
  41695c:	ccmp	x6, x7, #0x0, eq  // eq = none
  416960:	b.ne	416920 <_obstack_memory_used@@Base+0x13f0>  // b.any
  416964:	cmp	w2, w3
  416968:	mov	w0, #0x0                   	// #0
  41696c:	b.eq	416920 <_obstack_memory_used@@Base+0x13f0>  // b.none
  416970:	mov	w0, #0x1                   	// #1
  416974:	cbnz	x4, 416920 <_obstack_memory_used@@Base+0x13f0>
  416978:	orr	x1, x1, x10
  41697c:	cmp	x1, #0x0
  416980:	cset	w0, ne  // ne = any
  416984:	b	416920 <_obstack_memory_used@@Base+0x13f0>
  416988:	tst	x1, #0x800000000000
  41698c:	b.ne	4169a4 <_obstack_memory_used@@Base+0x1474>  // b.any
  416990:	mov	w0, #0x1                   	// #1
  416994:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  416998:	mov	w0, #0x1                   	// #1
  41699c:	ldp	x29, x30, [sp], #48
  4169a0:	ret
  4169a4:	cmp	x0, x4
  4169a8:	mov	w0, #0x1                   	// #1
  4169ac:	b.ne	416920 <_obstack_memory_used@@Base+0x13f0>  // b.any
  4169b0:	orr	x8, x9, x7
  4169b4:	cbz	x8, 416920 <_obstack_memory_used@@Base+0x13f0>
  4169b8:	tst	x9, #0x800000000000
  4169bc:	b.eq	416990 <_obstack_memory_used@@Base+0x1460>  // b.none
  4169c0:	b	416930 <_obstack_memory_used@@Base+0x1400>
  4169c4:	nop
  4169c8:	stp	x29, x30, [sp, #-48]!
  4169cc:	mov	x29, sp
  4169d0:	str	q0, [sp, #16]
  4169d4:	str	q1, [sp, #32]
  4169d8:	ldp	x8, x1, [sp, #16]
  4169dc:	ldp	x9, x0, [sp, #32]
  4169e0:	mrs	x2, fpcr
  4169e4:	ubfx	x4, x1, #48, #15
  4169e8:	ubfx	x10, x1, #0, #48
  4169ec:	lsr	x2, x1, #63
  4169f0:	mov	x5, #0x7fff                	// #32767
  4169f4:	mov	x6, x8
  4169f8:	cmp	x4, x5
  4169fc:	ubfx	x11, x0, #0, #48
  416a00:	ubfx	x7, x0, #48, #15
  416a04:	lsr	x1, x0, #63
  416a08:	mov	x3, x9
  416a0c:	b.eq	416a44 <_obstack_memory_used@@Base+0x1514>  // b.none
  416a10:	cmp	x7, x5
  416a14:	b.eq	416a54 <_obstack_memory_used@@Base+0x1524>  // b.none
  416a18:	cbnz	x4, 416a80 <_obstack_memory_used@@Base+0x1550>
  416a1c:	orr	x6, x10, x8
  416a20:	cmp	x6, #0x0
  416a24:	cset	w0, eq  // eq = none
  416a28:	cbnz	x7, 416a6c <_obstack_memory_used@@Base+0x153c>
  416a2c:	orr	x3, x11, x9
  416a30:	cbnz	x3, 416a6c <_obstack_memory_used@@Base+0x153c>
  416a34:	mov	w0, #0x0                   	// #0
  416a38:	cbnz	x6, 416a94 <_obstack_memory_used@@Base+0x1564>
  416a3c:	ldp	x29, x30, [sp], #48
  416a40:	ret
  416a44:	orr	x0, x10, x8
  416a48:	cbnz	x0, 416aa8 <_obstack_memory_used@@Base+0x1578>
  416a4c:	cmp	x7, x4
  416a50:	b.ne	416a80 <_obstack_memory_used@@Base+0x1550>  // b.any
  416a54:	orr	x3, x11, x3
  416a58:	cbnz	x3, 416aa8 <_obstack_memory_used@@Base+0x1578>
  416a5c:	cbnz	x4, 416a8c <_obstack_memory_used@@Base+0x155c>
  416a60:	orr	x6, x10, x6
  416a64:	cmp	x6, #0x0
  416a68:	cset	w0, eq  // eq = none
  416a6c:	cbz	w0, 416a8c <_obstack_memory_used@@Base+0x155c>
  416a70:	cmp	x1, #0x0
  416a74:	csinv	w0, w0, wzr, ne  // ne = any
  416a78:	ldp	x29, x30, [sp], #48
  416a7c:	ret
  416a80:	cbnz	x7, 416a8c <_obstack_memory_used@@Base+0x155c>
  416a84:	orr	x3, x11, x3
  416a88:	cbz	x3, 416a94 <_obstack_memory_used@@Base+0x1564>
  416a8c:	cmp	x2, x1
  416a90:	b.eq	416abc <_obstack_memory_used@@Base+0x158c>  // b.none
  416a94:	cmp	x2, #0x0
  416a98:	mov	w0, #0xffffffff            	// #-1
  416a9c:	cneg	w0, w0, eq  // eq = none
  416aa0:	ldp	x29, x30, [sp], #48
  416aa4:	ret
  416aa8:	mov	w0, #0x1                   	// #1
  416aac:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  416ab0:	mov	w0, #0x2                   	// #2
  416ab4:	ldp	x29, x30, [sp], #48
  416ab8:	ret
  416abc:	cmp	x4, x7
  416ac0:	b.gt	416a94 <_obstack_memory_used@@Base+0x1564>
  416ac4:	b.lt	416af8 <_obstack_memory_used@@Base+0x15c8>  // b.tstop
  416ac8:	cmp	x10, x11
  416acc:	b.hi	416a94 <_obstack_memory_used@@Base+0x1564>  // b.pmore
  416ad0:	cset	w0, eq  // eq = none
  416ad4:	cmp	w0, #0x0
  416ad8:	ccmp	x8, x9, #0x0, ne  // ne = any
  416adc:	b.hi	416a94 <_obstack_memory_used@@Base+0x1564>  // b.pmore
  416ae0:	cmp	x10, x11
  416ae4:	b.cc	416af8 <_obstack_memory_used@@Base+0x15c8>  // b.lo, b.ul, b.last
  416ae8:	cmp	w0, #0x0
  416aec:	mov	w0, #0x0                   	// #0
  416af0:	ccmp	x8, x9, #0x2, ne  // ne = any
  416af4:	b.cs	416a3c <_obstack_memory_used@@Base+0x150c>  // b.hs, b.nlast
  416af8:	cmp	x2, #0x0
  416afc:	mov	w0, #0x1                   	// #1
  416b00:	cneg	w0, w0, eq  // eq = none
  416b04:	b	416a3c <_obstack_memory_used@@Base+0x150c>
  416b08:	stp	x29, x30, [sp, #-80]!
  416b0c:	mov	x29, sp
  416b10:	str	q0, [sp, #48]
  416b14:	str	q1, [sp, #64]
  416b18:	ldp	x1, x0, [sp, #48]
  416b1c:	ldp	x6, x2, [sp, #64]
  416b20:	mrs	x11, fpcr
  416b24:	lsr	x3, x0, #63
  416b28:	ubfx	x7, x0, #0, #48
  416b2c:	and	w12, w3, #0xff
  416b30:	mov	x14, x3
  416b34:	ubfx	x3, x0, #48, #15
  416b38:	cbz	w3, 416ee0 <_obstack_memory_used@@Base+0x19b0>
  416b3c:	mov	w4, #0x7fff                	// #32767
  416b40:	cmp	w3, w4
  416b44:	b.eq	416f84 <_obstack_memory_used@@Base+0x1a54>  // b.none
  416b48:	and	x3, x3, #0xffff
  416b4c:	extr	x4, x7, x1, #61
  416b50:	mov	x18, #0xffffffffffffc001    	// #-16383
  416b54:	orr	x7, x4, #0x8000000000000
  416b58:	add	x3, x3, x18
  416b5c:	lsl	x5, x1, #3
  416b60:	mov	x16, #0x0                   	// #0
  416b64:	mov	x1, #0x0                   	// #0
  416b68:	mov	w0, #0x0                   	// #0
  416b6c:	lsr	x8, x2, #63
  416b70:	ubfx	x4, x2, #0, #48
  416b74:	and	w15, w8, #0xff
  416b78:	mov	x13, x8
  416b7c:	ubfx	x9, x2, #48, #15
  416b80:	cbz	w9, 416f40 <_obstack_memory_used@@Base+0x1a10>
  416b84:	mov	w8, #0x7fff                	// #32767
  416b88:	cmp	w9, w8
  416b8c:	b.eq	416c10 <_obstack_memory_used@@Base+0x16e0>  // b.none
  416b90:	and	x9, x9, #0xffff
  416b94:	mov	x17, #0xffffffffffffc001    	// #-16383
  416b98:	add	x9, x9, x17
  416b9c:	extr	x2, x4, x6, #61
  416ba0:	add	x9, x9, x3
  416ba4:	lsl	x6, x6, #3
  416ba8:	orr	x4, x2, #0x8000000000000
  416bac:	mov	x2, #0x0                   	// #0
  416bb0:	eor	w8, w12, w15
  416bb4:	cmp	x1, #0xa
  416bb8:	and	w10, w8, #0xff
  416bbc:	add	x3, x9, #0x1
  416bc0:	and	x8, x8, #0xff
  416bc4:	b.le	416c48 <_obstack_memory_used@@Base+0x1718>
  416bc8:	cmp	x1, #0xb
  416bcc:	b.eq	4172e0 <_obstack_memory_used@@Base+0x1db0>  // b.none
  416bd0:	mov	w15, w12
  416bd4:	mov	x13, x14
  416bd8:	mov	w10, w15
  416bdc:	cmp	x16, #0x2
  416be0:	b.eq	416fa4 <_obstack_memory_used@@Base+0x1a74>  // b.none
  416be4:	mov	x4, x7
  416be8:	mov	x6, x5
  416bec:	mov	x2, x16
  416bf0:	mov	x8, x13
  416bf4:	cmp	x2, #0x3
  416bf8:	b.ne	416c64 <_obstack_memory_used@@Base+0x1734>  // b.any
  416bfc:	orr	x4, x4, #0x800000000000
  416c00:	mov	x5, x6
  416c04:	and	x4, x4, #0xffffffffffff
  416c08:	mov	w1, #0x7fff                	// #32767
  416c0c:	b	416c78 <_obstack_memory_used@@Base+0x1748>
  416c10:	mov	x8, #0x7fff                	// #32767
  416c14:	orr	x2, x4, x6
  416c18:	add	x9, x3, x8
  416c1c:	cbnz	x2, 416c9c <_obstack_memory_used@@Base+0x176c>
  416c20:	eor	w8, w12, w15
  416c24:	orr	x1, x1, #0x2
  416c28:	and	w10, w8, #0xff
  416c2c:	cmp	x1, #0xa
  416c30:	add	x3, x3, #0x8, lsl #12
  416c34:	and	x8, x8, #0xff
  416c38:	mov	x6, #0x0                   	// #0
  416c3c:	b.gt	417254 <_obstack_memory_used@@Base+0x1d24>
  416c40:	mov	x4, #0x0                   	// #0
  416c44:	mov	x2, #0x2                   	// #2
  416c48:	cmp	x1, #0x2
  416c4c:	b.gt	416cc4 <_obstack_memory_used@@Base+0x1794>
  416c50:	sub	x1, x1, #0x1
  416c54:	cmp	x1, #0x1
  416c58:	b.hi	416d00 <_obstack_memory_used@@Base+0x17d0>  // b.pmore
  416c5c:	cmp	x2, #0x2
  416c60:	b.eq	416fa4 <_obstack_memory_used@@Base+0x1a74>  // b.none
  416c64:	cmp	x2, #0x1
  416c68:	b.ne	416e60 <_obstack_memory_used@@Base+0x1930>  // b.any
  416c6c:	mov	w1, #0x0                   	// #0
  416c70:	mov	x4, #0x0                   	// #0
  416c74:	mov	x5, #0x0                   	// #0
  416c78:	mov	x3, #0x0                   	// #0
  416c7c:	orr	w1, w1, w10, lsl #15
  416c80:	bfxil	x3, x4, #0, #48
  416c84:	fmov	d0, x5
  416c88:	bfi	x3, x1, #48, #16
  416c8c:	fmov	v0.d[1], x3
  416c90:	cbnz	w0, 4170d0 <_obstack_memory_used@@Base+0x1ba0>
  416c94:	ldp	x29, x30, [sp], #80
  416c98:	ret
  416c9c:	tst	x4, #0x800000000000
  416ca0:	eor	w8, w12, w15
  416ca4:	orr	x1, x1, #0x3
  416ca8:	csinc	w0, w0, wzr, ne  // ne = any
  416cac:	and	w10, w8, #0xff
  416cb0:	add	x3, x3, #0x8, lsl #12
  416cb4:	cmp	x1, #0xa
  416cb8:	and	x8, x8, #0xff
  416cbc:	mov	x2, #0x3                   	// #3
  416cc0:	b.gt	4172d4 <_obstack_memory_used@@Base+0x1da4>
  416cc4:	mov	x12, #0x1                   	// #1
  416cc8:	mov	x14, #0x530                 	// #1328
  416ccc:	lsl	x1, x12, x1
  416cd0:	tst	x1, x14
  416cd4:	b.ne	416ed4 <_obstack_memory_used@@Base+0x19a4>  // b.any
  416cd8:	mov	x14, #0x240                 	// #576
  416cdc:	tst	x1, x14
  416ce0:	b.ne	416ebc <_obstack_memory_used@@Base+0x198c>  // b.any
  416ce4:	mov	x12, #0x88                  	// #136
  416ce8:	tst	x1, x12
  416cec:	b.eq	416d00 <_obstack_memory_used@@Base+0x17d0>  // b.none
  416cf0:	mov	x7, x4
  416cf4:	mov	x5, x6
  416cf8:	mov	x16, x2
  416cfc:	b	416bd8 <_obstack_memory_used@@Base+0x16a8>
  416d00:	lsr	x13, x5, #32
  416d04:	and	x12, x6, #0xffffffff
  416d08:	and	x15, x5, #0xffffffff
  416d0c:	lsr	x6, x6, #32
  416d10:	and	x18, x4, #0xffffffff
  416d14:	lsr	x2, x4, #32
  416d18:	mul	x4, x13, x12
  416d1c:	stp	x21, x22, [sp, #32]
  416d20:	lsr	x22, x7, #32
  416d24:	and	x5, x7, #0xffffffff
  416d28:	mul	x16, x12, x15
  416d2c:	madd	x7, x6, x15, x4
  416d30:	stp	x19, x20, [sp, #16]
  416d34:	mul	x1, x13, x18
  416d38:	mul	x17, x15, x18
  416d3c:	and	x30, x16, #0xffffffff
  416d40:	madd	x15, x2, x15, x1
  416d44:	add	x16, x7, x16, lsr #32
  416d48:	mul	x21, x22, x12
  416d4c:	cmp	x4, x16
  416d50:	mul	x20, x22, x18
  416d54:	mov	x14, #0x100000000           	// #4294967296
  416d58:	mul	x19, x13, x6
  416d5c:	add	x15, x15, x17, lsr #32
  416d60:	mul	x12, x12, x5
  416d64:	and	x17, x17, #0xffffffff
  416d68:	mul	x18, x5, x18
  416d6c:	add	x4, x19, x14
  416d70:	madd	x7, x6, x5, x21
  416d74:	csel	x19, x4, x19, hi  // hi = pmore
  416d78:	madd	x5, x2, x5, x20
  416d7c:	cmp	x1, x15
  416d80:	mul	x13, x13, x2
  416d84:	add	x17, x17, x15, lsl #32
  416d88:	mul	x6, x6, x22
  416d8c:	add	x7, x7, x12, lsr #32
  416d90:	add	x5, x5, x18, lsr #32
  416d94:	add	x4, x13, x14
  416d98:	mul	x2, x2, x22
  416d9c:	csel	x13, x4, x13, hi  // hi = pmore
  416da0:	and	x1, x18, #0xffffffff
  416da4:	cmp	x21, x7
  416da8:	add	x4, x6, x14
  416dac:	add	x30, x30, x16, lsl #32
  416db0:	csel	x6, x4, x6, hi  // hi = pmore
  416db4:	add	x13, x13, x15, lsr #32
  416db8:	cmp	x20, x5
  416dbc:	add	x1, x1, x5, lsl #32
  416dc0:	add	x16, x17, x16, lsr #32
  416dc4:	add	x14, x2, x14
  416dc8:	csel	x2, x14, x2, hi  // hi = pmore
  416dcc:	add	x16, x19, x16
  416dd0:	adds	x1, x1, x13
  416dd4:	and	x12, x12, #0xffffffff
  416dd8:	cset	x13, cs  // cs = hs, nlast
  416ddc:	cmp	x16, x17
  416de0:	cset	x4, cc  // cc = lo, ul, last
  416de4:	add	x12, x12, x7, lsl #32
  416de8:	adds	x1, x1, x4
  416dec:	lsr	x5, x5, #32
  416df0:	cset	x4, cs  // cs = hs, nlast
  416df4:	cmp	x13, #0x0
  416df8:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  416dfc:	add	x7, x6, x7, lsr #32
  416e00:	cinc	x5, x5, ne  // ne = any
  416e04:	adds	x6, x16, x12
  416e08:	cset	x4, cs  // cs = hs, nlast
  416e0c:	adds	x1, x1, x7
  416e10:	cset	x7, cs  // cs = hs, nlast
  416e14:	adds	x4, x1, x4
  416e18:	cset	x1, cs  // cs = hs, nlast
  416e1c:	cmp	x7, #0x0
  416e20:	orr	x30, x30, x6, lsl #13
  416e24:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  416e28:	cinc	x1, x2, ne  // ne = any
  416e2c:	cmp	x30, #0x0
  416e30:	add	x1, x1, x5
  416e34:	cset	x2, ne  // ne = any
  416e38:	orr	x6, x2, x6, lsr #51
  416e3c:	orr	x6, x6, x4, lsl #13
  416e40:	extr	x4, x1, x4, #51
  416e44:	tbz	x1, #39, 417158 <_obstack_memory_used@@Base+0x1c28>
  416e48:	ldp	x19, x20, [sp, #16]
  416e4c:	and	x1, x6, #0x1
  416e50:	ldp	x21, x22, [sp, #32]
  416e54:	orr	x6, x1, x6, lsr #1
  416e58:	orr	x6, x6, x4, lsl #63
  416e5c:	lsr	x4, x4, #1
  416e60:	mov	x1, #0x3fff                	// #16383
  416e64:	add	x2, x3, x1
  416e68:	cmp	x2, #0x0
  416e6c:	b.le	417004 <_obstack_memory_used@@Base+0x1ad4>
  416e70:	tst	x6, #0x7
  416e74:	b.eq	416e94 <_obstack_memory_used@@Base+0x1964>  // b.none
  416e78:	and	x1, x11, #0xc00000
  416e7c:	orr	w0, w0, #0x10
  416e80:	cmp	x1, #0x400, lsl #12
  416e84:	b.eq	41724c <_obstack_memory_used@@Base+0x1d1c>  // b.none
  416e88:	cmp	x1, #0x800, lsl #12
  416e8c:	b.eq	4171f4 <_obstack_memory_used@@Base+0x1cc4>  // b.none
  416e90:	cbz	x1, 4171dc <_obstack_memory_used@@Base+0x1cac>
  416e94:	tbz	x4, #52, 416ea0 <_obstack_memory_used@@Base+0x1970>
  416e98:	and	x4, x4, #0xffefffffffffffff
  416e9c:	add	x2, x3, #0x4, lsl #12
  416ea0:	mov	x1, #0x7ffe                	// #32766
  416ea4:	cmp	x2, x1
  416ea8:	b.gt	41712c <_obstack_memory_used@@Base+0x1bfc>
  416eac:	and	w1, w2, #0x7fff
  416eb0:	extr	x5, x4, x6, #3
  416eb4:	ubfx	x4, x4, #3, #48
  416eb8:	b	416c78 <_obstack_memory_used@@Base+0x1748>
  416ebc:	mov	w0, w12
  416ec0:	mov	w10, #0x0                   	// #0
  416ec4:	mov	x4, #0xffffffffffff        	// #281474976710655
  416ec8:	mov	x5, #0xffffffffffffffff    	// #-1
  416ecc:	mov	w1, #0x7fff                	// #32767
  416ed0:	b	416c78 <_obstack_memory_used@@Base+0x1748>
  416ed4:	mov	w15, w10
  416ed8:	mov	x13, x8
  416edc:	b	416bd8 <_obstack_memory_used@@Base+0x16a8>
  416ee0:	orr	x5, x7, x1
  416ee4:	cbz	x5, 416fec <_obstack_memory_used@@Base+0x1abc>
  416ee8:	cbz	x7, 417108 <_obstack_memory_used@@Base+0x1bd8>
  416eec:	clz	x0, x7
  416ef0:	sub	x4, x0, #0xf
  416ef4:	add	w5, w4, #0x3
  416ef8:	mov	w3, #0x3d                  	// #61
  416efc:	sub	w3, w3, w4
  416f00:	lsl	x4, x7, x5
  416f04:	lsr	x3, x1, x3
  416f08:	orr	x7, x3, x4
  416f0c:	lsl	x5, x1, x5
  416f10:	lsr	x8, x2, #63
  416f14:	mov	x3, #0xffffffffffffc011    	// #-16367
  416f18:	ubfx	x4, x2, #0, #48
  416f1c:	sub	x3, x3, x0
  416f20:	and	w15, w8, #0xff
  416f24:	mov	x13, x8
  416f28:	ubfx	x9, x2, #48, #15
  416f2c:	mov	x1, #0x0                   	// #0
  416f30:	mov	x16, #0x0                   	// #0
  416f34:	mov	w0, #0x0                   	// #0
  416f38:	cbnz	w9, 416b84 <_obstack_memory_used@@Base+0x1654>
  416f3c:	nop
  416f40:	orr	x2, x4, x6
  416f44:	cbz	x2, 416fb4 <_obstack_memory_used@@Base+0x1a84>
  416f48:	cbz	x4, 4170e4 <_obstack_memory_used@@Base+0x1bb4>
  416f4c:	clz	x9, x4
  416f50:	sub	x2, x9, #0xf
  416f54:	add	w10, w2, #0x3
  416f58:	mov	w8, #0x3d                  	// #61
  416f5c:	sub	w8, w8, w2
  416f60:	lsl	x2, x4, x10
  416f64:	lsr	x8, x6, x8
  416f68:	orr	x4, x8, x2
  416f6c:	lsl	x6, x6, x10
  416f70:	sub	x9, x3, x9
  416f74:	mov	x10, #0xffffffffffffc011    	// #-16367
  416f78:	mov	x2, #0x0                   	// #0
  416f7c:	add	x9, x9, x10
  416f80:	b	416bb0 <_obstack_memory_used@@Base+0x1680>
  416f84:	orr	x5, x7, x1
  416f88:	cbnz	x5, 416fcc <_obstack_memory_used@@Base+0x1a9c>
  416f8c:	mov	x7, #0x0                   	// #0
  416f90:	mov	x1, #0x8                   	// #8
  416f94:	mov	x3, #0x7fff                	// #32767
  416f98:	mov	x16, #0x2                   	// #2
  416f9c:	mov	w0, #0x0                   	// #0
  416fa0:	b	416b6c <_obstack_memory_used@@Base+0x163c>
  416fa4:	mov	w1, #0x7fff                	// #32767
  416fa8:	mov	x4, #0x0                   	// #0
  416fac:	mov	x5, #0x0                   	// #0
  416fb0:	b	416c78 <_obstack_memory_used@@Base+0x1748>
  416fb4:	orr	x1, x1, #0x1
  416fb8:	mov	x9, x3
  416fbc:	mov	x4, #0x0                   	// #0
  416fc0:	mov	x6, #0x0                   	// #0
  416fc4:	mov	x2, #0x1                   	// #1
  416fc8:	b	416bb0 <_obstack_memory_used@@Base+0x1680>
  416fcc:	lsr	x0, x7, #47
  416fd0:	mov	x5, x1
  416fd4:	eor	x0, x0, #0x1
  416fd8:	mov	x1, #0xc                   	// #12
  416fdc:	and	w0, w0, #0x1
  416fe0:	mov	x3, #0x7fff                	// #32767
  416fe4:	mov	x16, #0x3                   	// #3
  416fe8:	b	416b6c <_obstack_memory_used@@Base+0x163c>
  416fec:	mov	x7, #0x0                   	// #0
  416ff0:	mov	x1, #0x4                   	// #4
  416ff4:	mov	x3, #0x0                   	// #0
  416ff8:	mov	x16, #0x1                   	// #1
  416ffc:	mov	w0, #0x0                   	// #0
  417000:	b	416b6c <_obstack_memory_used@@Base+0x163c>
  417004:	mov	x1, #0x1                   	// #1
  417008:	sub	x2, x1, x2
  41700c:	cmp	x2, #0x74
  417010:	b.gt	417088 <_obstack_memory_used@@Base+0x1b58>
  417014:	cmp	x2, #0x3f
  417018:	b.le	417168 <_obstack_memory_used@@Base+0x1c38>
  41701c:	mov	w1, #0x80                  	// #128
  417020:	sub	w1, w1, w2
  417024:	cmp	x2, #0x40
  417028:	sub	w2, w2, #0x40
  41702c:	lsl	x1, x4, x1
  417030:	orr	x1, x6, x1
  417034:	csel	x6, x1, x6, ne  // ne = any
  417038:	lsr	x2, x4, x2
  41703c:	cmp	x6, #0x0
  417040:	cset	x5, ne  // ne = any
  417044:	orr	x5, x5, x2
  417048:	ands	x2, x5, #0x7
  41704c:	b.eq	41719c <_obstack_memory_used@@Base+0x1c6c>  // b.none
  417050:	mov	x2, #0x0                   	// #0
  417054:	and	x11, x11, #0xc00000
  417058:	orr	w0, w0, #0x10
  41705c:	cmp	x11, #0x400, lsl #12
  417060:	b.eq	4172ac <_obstack_memory_used@@Base+0x1d7c>  // b.none
  417064:	cmp	x11, #0x800, lsl #12
  417068:	b.eq	4172c0 <_obstack_memory_used@@Base+0x1d90>  // b.none
  41706c:	cbz	x11, 417204 <_obstack_memory_used@@Base+0x1cd4>
  417070:	tbnz	x2, #51, 41721c <_obstack_memory_used@@Base+0x1cec>
  417074:	ubfx	x4, x2, #3, #48
  417078:	extr	x5, x2, x5, #3
  41707c:	orr	w0, w0, #0x8
  417080:	mov	w1, #0x0                   	// #0
  417084:	b	4170b8 <_obstack_memory_used@@Base+0x1b88>
  417088:	orr	x5, x6, x4
  41708c:	cbz	x5, 4170ac <_obstack_memory_used@@Base+0x1b7c>
  417090:	and	x11, x11, #0xc00000
  417094:	orr	w0, w0, #0x10
  417098:	cmp	x11, #0x400, lsl #12
  41709c:	sub	x5, x1, x8
  4170a0:	b.eq	4170ac <_obstack_memory_used@@Base+0x1b7c>  // b.none
  4170a4:	cmp	x11, #0x800, lsl #12
  4170a8:	csel	x5, x8, xzr, eq  // eq = none
  4170ac:	orr	w0, w0, #0x8
  4170b0:	mov	w1, #0x0                   	// #0
  4170b4:	mov	x4, #0x0                   	// #0
  4170b8:	mov	x3, #0x0                   	// #0
  4170bc:	fmov	d0, x5
  4170c0:	bfxil	x3, x4, #0, #48
  4170c4:	bfi	x3, x1, #48, #15
  4170c8:	bfi	x3, x10, #63, #1
  4170cc:	fmov	v0.d[1], x3
  4170d0:	str	q0, [sp, #48]
  4170d4:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  4170d8:	ldr	q0, [sp, #48]
  4170dc:	ldp	x29, x30, [sp], #80
  4170e0:	ret
  4170e4:	clz	x9, x6
  4170e8:	add	x2, x9, #0x31
  4170ec:	add	x9, x9, #0x40
  4170f0:	cmp	x2, #0x3c
  4170f4:	b.le	416f54 <_obstack_memory_used@@Base+0x1a24>
  4170f8:	sub	w2, w2, #0x3d
  4170fc:	lsl	x4, x6, x2
  417100:	mov	x6, #0x0                   	// #0
  417104:	b	416f70 <_obstack_memory_used@@Base+0x1a40>
  417108:	clz	x3, x1
  41710c:	add	x4, x3, #0x31
  417110:	add	x0, x3, #0x40
  417114:	cmp	x4, #0x3c
  417118:	b.le	416ef4 <_obstack_memory_used@@Base+0x19c4>
  41711c:	sub	w4, w4, #0x3d
  417120:	mov	x5, #0x0                   	// #0
  417124:	lsl	x7, x1, x4
  417128:	b	416f10 <_obstack_memory_used@@Base+0x19e0>
  41712c:	and	x5, x11, #0xc00000
  417130:	cmp	x5, #0x400, lsl #12
  417134:	b.eq	417230 <_obstack_memory_used@@Base+0x1d00>  // b.none
  417138:	cmp	x5, #0x800, lsl #12
  41713c:	b.eq	4171c0 <_obstack_memory_used@@Base+0x1c90>  // b.none
  417140:	cbz	x5, 4171b4 <_obstack_memory_used@@Base+0x1c84>
  417144:	mov	x4, #0xffffffffffff        	// #281474976710655
  417148:	mov	x5, #0xffffffffffffffff    	// #-1
  41714c:	mov	w2, #0x14                  	// #20
  417150:	orr	w0, w0, w2
  417154:	b	4170b8 <_obstack_memory_used@@Base+0x1b88>
  417158:	mov	x3, x9
  41715c:	ldp	x19, x20, [sp, #16]
  417160:	ldp	x21, x22, [sp, #32]
  417164:	b	416e60 <_obstack_memory_used@@Base+0x1930>
  417168:	mov	w1, #0x40                  	// #64
  41716c:	sub	w1, w1, w2
  417170:	lsr	x3, x6, x2
  417174:	lsl	x6, x6, x1
  417178:	cmp	x6, #0x0
  41717c:	lsl	x5, x4, x1
  417180:	cset	x1, ne  // ne = any
  417184:	orr	x5, x5, x3
  417188:	lsr	x2, x4, x2
  41718c:	orr	x5, x5, x1
  417190:	tst	x5, #0x7
  417194:	b.ne	417054 <_obstack_memory_used@@Base+0x1b24>  // b.any
  417198:	tbnz	x2, #51, 4172cc <_obstack_memory_used@@Base+0x1d9c>
  41719c:	ubfx	x4, x2, #3, #48
  4171a0:	extr	x5, x2, x5, #3
  4171a4:	mov	w1, #0x0                   	// #0
  4171a8:	tbz	w11, #11, 416c78 <_obstack_memory_used@@Base+0x1748>
  4171ac:	orr	w0, w0, #0x8
  4171b0:	b	4170b8 <_obstack_memory_used@@Base+0x1b88>
  4171b4:	mov	w1, #0x7fff                	// #32767
  4171b8:	mov	x4, #0x0                   	// #0
  4171bc:	b	41714c <_obstack_memory_used@@Base+0x1c1c>
  4171c0:	cmp	x8, #0x0
  4171c4:	mov	w2, #0x7fff                	// #32767
  4171c8:	mov	x4, #0xffffffffffff        	// #281474976710655
  4171cc:	csel	w1, w1, w2, eq  // eq = none
  4171d0:	csel	x4, x4, xzr, eq  // eq = none
  4171d4:	csetm	x5, eq  // eq = none
  4171d8:	b	41714c <_obstack_memory_used@@Base+0x1c1c>
  4171dc:	and	x1, x6, #0xf
  4171e0:	cmp	x1, #0x4
  4171e4:	b.eq	416e94 <_obstack_memory_used@@Base+0x1964>  // b.none
  4171e8:	adds	x6, x6, #0x4
  4171ec:	cinc	x4, x4, cs  // cs = hs, nlast
  4171f0:	b	416e94 <_obstack_memory_used@@Base+0x1964>
  4171f4:	cbz	x8, 416e94 <_obstack_memory_used@@Base+0x1964>
  4171f8:	adds	x6, x6, #0x8
  4171fc:	cinc	x4, x4, cs  // cs = hs, nlast
  417200:	b	416e94 <_obstack_memory_used@@Base+0x1964>
  417204:	and	x1, x5, #0xf
  417208:	cmp	x1, #0x4
  41720c:	b.eq	417218 <_obstack_memory_used@@Base+0x1ce8>  // b.none
  417210:	adds	x5, x5, #0x4
  417214:	cinc	x2, x2, cs  // cs = hs, nlast
  417218:	tbz	x2, #51, 417074 <_obstack_memory_used@@Base+0x1b44>
  41721c:	orr	w0, w0, #0x8
  417220:	mov	w1, #0x1                   	// #1
  417224:	mov	x4, #0x0                   	// #0
  417228:	mov	x5, #0x0                   	// #0
  41722c:	b	4170b8 <_obstack_memory_used@@Base+0x1b88>
  417230:	cmp	x8, #0x0
  417234:	mov	w2, #0x7fff                	// #32767
  417238:	mov	x4, #0xffffffffffff        	// #281474976710655
  41723c:	csel	w1, w1, w2, ne  // ne = any
  417240:	csel	x4, x4, xzr, ne  // ne = any
  417244:	csetm	x5, ne  // ne = any
  417248:	b	41714c <_obstack_memory_used@@Base+0x1c1c>
  41724c:	cbnz	x8, 416e94 <_obstack_memory_used@@Base+0x1964>
  417250:	b	4171f8 <_obstack_memory_used@@Base+0x1cc8>
  417254:	mov	x4, #0x2                   	// #2
  417258:	cmp	x1, #0xf
  41725c:	b.ne	417280 <_obstack_memory_used@@Base+0x1d50>  // b.any
  417260:	tbz	x7, #47, 417298 <_obstack_memory_used@@Base+0x1d68>
  417264:	tbnz	x2, #47, 417298 <_obstack_memory_used@@Base+0x1d68>
  417268:	orr	x4, x2, #0x800000000000
  41726c:	mov	w10, w15
  417270:	and	x4, x4, #0xffffffffffff
  417274:	mov	x5, x6
  417278:	mov	w1, #0x7fff                	// #32767
  41727c:	b	416c78 <_obstack_memory_used@@Base+0x1748>
  417280:	cmp	x1, #0xb
  417284:	b.ne	416bd0 <_obstack_memory_used@@Base+0x16a0>  // b.any
  417288:	mov	x7, x2
  41728c:	mov	x5, x6
  417290:	mov	x16, x4
  417294:	b	416bd8 <_obstack_memory_used@@Base+0x16a8>
  417298:	orr	x4, x7, #0x800000000000
  41729c:	mov	w10, w12
  4172a0:	and	x4, x4, #0xffffffffffff
  4172a4:	mov	w1, #0x7fff                	// #32767
  4172a8:	b	416c78 <_obstack_memory_used@@Base+0x1748>
  4172ac:	cbnz	x8, 417218 <_obstack_memory_used@@Base+0x1ce8>
  4172b0:	adds	x5, x5, #0x8
  4172b4:	cinc	x2, x2, cs  // cs = hs, nlast
  4172b8:	tbnz	x2, #51, 41721c <_obstack_memory_used@@Base+0x1cec>
  4172bc:	b	417074 <_obstack_memory_used@@Base+0x1b44>
  4172c0:	cbnz	x8, 4172b0 <_obstack_memory_used@@Base+0x1d80>
  4172c4:	tbnz	x2, #51, 41721c <_obstack_memory_used@@Base+0x1cec>
  4172c8:	b	417074 <_obstack_memory_used@@Base+0x1b44>
  4172cc:	orr	w0, w0, #0x10
  4172d0:	b	41721c <_obstack_memory_used@@Base+0x1cec>
  4172d4:	mov	x2, x4
  4172d8:	mov	x4, #0x3                   	// #3
  4172dc:	b	417258 <_obstack_memory_used@@Base+0x1d28>
  4172e0:	mov	w10, w15
  4172e4:	mov	x8, x13
  4172e8:	b	416bf4 <_obstack_memory_used@@Base+0x16c4>
  4172ec:	nop
  4172f0:	cbz	w0, 417334 <_obstack_memory_used@@Base+0x1e04>
  4172f4:	mov	w0, w0
  4172f8:	mov	w1, #0x403e                	// #16446
  4172fc:	clz	x3, x0
  417300:	mov	w2, #0x402f                	// #16431
  417304:	sub	w1, w1, w3
  417308:	mov	x3, #0x0                   	// #0
  41730c:	sub	w2, w2, w1
  417310:	and	w1, w1, #0x7fff
  417314:	lsl	x0, x0, x2
  417318:	and	x0, x0, #0xffffffffffff
  41731c:	mov	x2, #0x0                   	// #0
  417320:	fmov	d0, x2
  417324:	bfxil	x3, x0, #0, #48
  417328:	bfi	x3, x1, #48, #16
  41732c:	fmov	v0.d[1], x3
  417330:	ret
  417334:	mov	x0, #0x0                   	// #0
  417338:	mov	x3, #0x0                   	// #0
  41733c:	bfxil	x3, x0, #0, #48
  417340:	mov	x2, #0x0                   	// #0
  417344:	fmov	d0, x2
  417348:	mov	w1, #0x0                   	// #0
  41734c:	bfi	x3, x1, #48, #16
  417350:	fmov	v0.d[1], x3
  417354:	ret
  417358:	stp	x29, x30, [sp, #-48]!
  41735c:	mov	x29, sp
  417360:	str	x19, [sp, #16]
  417364:	str	q0, [sp, #32]
  417368:	ldr	x19, [sp, #32]
  41736c:	ldr	x1, [sp, #40]
  417370:	mrs	x0, fpcr
  417374:	ubfx	x3, x1, #48, #15
  417378:	mov	x2, x19
  41737c:	mov	x4, #0x3ffe                	// #16382
  417380:	ubfx	x19, x1, #0, #48
  417384:	cmp	x3, x4
  417388:	b.gt	4173b4 <_obstack_memory_used@@Base+0x1e84>
  41738c:	cbnz	x3, 417398 <_obstack_memory_used@@Base+0x1e68>
  417390:	orr	x19, x2, x19
  417394:	cbz	x19, 4173a4 <_obstack_memory_used@@Base+0x1e74>
  417398:	mov	w0, #0x10                  	// #16
  41739c:	mov	x19, #0x0                   	// #0
  4173a0:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  4173a4:	mov	x0, x19
  4173a8:	ldr	x19, [sp, #16]
  4173ac:	ldp	x29, x30, [sp], #48
  4173b0:	ret
  4173b4:	lsr	x0, x1, #63
  4173b8:	mov	x4, #0x403f                	// #16447
  4173bc:	and	w0, w0, #0xff
  4173c0:	and	x5, x0, #0xff
  4173c4:	sub	x4, x4, x5
  4173c8:	cmp	x4, x3
  4173cc:	b.le	417420 <_obstack_memory_used@@Base+0x1ef0>
  4173d0:	cbnz	x5, 417434 <_obstack_memory_used@@Base+0x1f04>
  4173d4:	mov	x1, x3
  4173d8:	mov	x0, #0x406f                	// #16495
  4173dc:	sub	x3, x0, x3
  4173e0:	orr	x4, x19, #0x1000000000000
  4173e4:	cmp	x3, #0x3f
  4173e8:	b.gt	417444 <_obstack_memory_used@@Base+0x1f14>
  4173ec:	mov	w3, #0xffffbfd1            	// #-16431
  4173f0:	add	w3, w1, w3
  4173f4:	sub	w1, w0, w1
  4173f8:	lsl	x0, x2, x3
  4173fc:	cmp	x0, #0x0
  417400:	lsr	x19, x2, x1
  417404:	cset	w0, ne  // ne = any
  417408:	lsl	x4, x4, x3
  41740c:	orr	x19, x19, x4
  417410:	cbz	w0, 4173a4 <_obstack_memory_used@@Base+0x1e74>
  417414:	mov	w0, #0x10                  	// #16
  417418:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  41741c:	b	4173a4 <_obstack_memory_used@@Base+0x1e74>
  417420:	eor	w19, w0, #0x1
  417424:	mov	w0, #0x1                   	// #1
  417428:	sbfx	x19, x19, #0, #1
  41742c:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  417430:	b	4173a4 <_obstack_memory_used@@Base+0x1e74>
  417434:	mov	w0, #0x1                   	// #1
  417438:	mov	x19, #0x0                   	// #0
  41743c:	bl	417518 <_obstack_memory_used@@Base+0x1fe8>
  417440:	b	4173a4 <_obstack_memory_used@@Base+0x1e74>
  417444:	mov	w0, #0xffffc011            	// #-16367
  417448:	add	w5, w1, w0
  41744c:	mov	w0, #0x402f                	// #16431
  417450:	cmp	x3, #0x40
  417454:	sub	w1, w0, w1
  417458:	lsl	x0, x4, x5
  41745c:	orr	x0, x2, x0
  417460:	csel	x2, x0, x2, ne  // ne = any
  417464:	lsr	x19, x4, x1
  417468:	cmp	x2, #0x0
  41746c:	cset	w0, ne  // ne = any
  417470:	b	417410 <_obstack_memory_used@@Base+0x1ee0>
  417474:	nop
  417478:	cbz	x0, 4174cc <_obstack_memory_used@@Base+0x1f9c>
  41747c:	clz	x2, x0
  417480:	mov	w1, #0x403e                	// #16446
  417484:	sub	w1, w1, w2
  417488:	mov	x2, #0x406f                	// #16495
  41748c:	and	w4, w1, #0x7fff
  417490:	sub	x3, x2, w1, sxtw
  417494:	cmp	x3, #0x3f
  417498:	b.gt	4174ec <_obstack_memory_used@@Base+0x1fbc>
  41749c:	sub	w2, w2, w1
  4174a0:	mov	w3, #0xffffbfd1            	// #-16431
  4174a4:	add	w1, w1, w3
  4174a8:	mov	x3, #0x0                   	// #0
  4174ac:	lsr	x1, x0, x1
  4174b0:	and	x1, x1, #0xffffffffffff
  4174b4:	lsl	x0, x0, x2
  4174b8:	fmov	d0, x0
  4174bc:	bfxil	x3, x1, #0, #48
  4174c0:	bfi	x3, x4, #48, #16
  4174c4:	fmov	v0.d[1], x3
  4174c8:	ret
  4174cc:	mov	x1, #0x0                   	// #0
  4174d0:	mov	x3, #0x0                   	// #0
  4174d4:	bfxil	x3, x1, #0, #48
  4174d8:	fmov	d0, x0
  4174dc:	mov	w4, #0x0                   	// #0
  4174e0:	bfi	x3, x4, #48, #16
  4174e4:	fmov	v0.d[1], x3
  4174e8:	ret
  4174ec:	mov	w2, #0x402f                	// #16431
  4174f0:	sub	w1, w2, w1
  4174f4:	mov	x3, #0x0                   	// #0
  4174f8:	lsl	x1, x0, x1
  4174fc:	and	x1, x1, #0xffffffffffff
  417500:	mov	x0, #0x0                   	// #0
  417504:	fmov	d0, x0
  417508:	bfxil	x3, x1, #0, #48
  41750c:	bfi	x3, x4, #48, #16
  417510:	fmov	v0.d[1], x3
  417514:	ret
  417518:	tbz	w0, #0, 417528 <_obstack_memory_used@@Base+0x1ff8>
  41751c:	movi	v1.2s, #0x0
  417520:	fdiv	s0, s1, s1
  417524:	mrs	x1, fpsr
  417528:	tbz	w0, #1, 41753c <_obstack_memory_used@@Base+0x200c>
  41752c:	fmov	s1, #1.000000000000000000e+00
  417530:	movi	v2.2s, #0x0
  417534:	fdiv	s0, s1, s2
  417538:	mrs	x1, fpsr
  41753c:	tbz	w0, #2, 41755c <_obstack_memory_used@@Base+0x202c>
  417540:	mov	w2, #0xc5ae                	// #50606
  417544:	mov	w1, #0x7f7fffff            	// #2139095039
  417548:	movk	w2, #0x749d, lsl #16
  41754c:	fmov	s1, w1
  417550:	fmov	s2, w2
  417554:	fadd	s0, s1, s2
  417558:	mrs	x1, fpsr
  41755c:	tbz	w0, #3, 41756c <_obstack_memory_used@@Base+0x203c>
  417560:	movi	v1.2s, #0x80, lsl #16
  417564:	fmul	s0, s1, s1
  417568:	mrs	x1, fpsr
  41756c:	tbz	w0, #4, 417584 <_obstack_memory_used@@Base+0x2054>
  417570:	mov	w0, #0x7f7fffff            	// #2139095039
  417574:	fmov	s2, #1.000000000000000000e+00
  417578:	fmov	s1, w0
  41757c:	fsub	s0, s1, s2
  417580:	mrs	x0, fpsr
  417584:	ret
  417588:	stp	x29, x30, [sp, #-64]!
  41758c:	mov	x29, sp
  417590:	stp	x19, x20, [sp, #16]
  417594:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x16ad0>
  417598:	add	x20, x20, #0xde0
  41759c:	stp	x21, x22, [sp, #32]
  4175a0:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x16ad0>
  4175a4:	add	x21, x21, #0xdd8
  4175a8:	sub	x20, x20, x21
  4175ac:	mov	w22, w0
  4175b0:	stp	x23, x24, [sp, #48]
  4175b4:	mov	x23, x1
  4175b8:	mov	x24, x2
  4175bc:	bl	402378 <mbrtowc@plt-0x38>
  4175c0:	cmp	xzr, x20, asr #3
  4175c4:	b.eq	4175f0 <_obstack_memory_used@@Base+0x20c0>  // b.none
  4175c8:	asr	x20, x20, #3
  4175cc:	mov	x19, #0x0                   	// #0
  4175d0:	ldr	x3, [x21, x19, lsl #3]
  4175d4:	mov	x2, x24
  4175d8:	add	x19, x19, #0x1
  4175dc:	mov	x1, x23
  4175e0:	mov	w0, w22
  4175e4:	blr	x3
  4175e8:	cmp	x20, x19
  4175ec:	b.ne	4175d0 <_obstack_memory_used@@Base+0x20a0>  // b.any
  4175f0:	ldp	x19, x20, [sp, #16]
  4175f4:	ldp	x21, x22, [sp, #32]
  4175f8:	ldp	x23, x24, [sp, #48]
  4175fc:	ldp	x29, x30, [sp], #64
  417600:	ret
  417604:	nop
  417608:	ret
  41760c:	nop
  417610:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x17ad0>
  417614:	mov	x1, #0x0                   	// #0
  417618:	ldr	x2, [x2, #864]
  41761c:	b	402510 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000417620 <.fini>:
  417620:	stp	x29, x30, [sp, #-16]!
  417624:	mov	x29, sp
  417628:	ldp	x29, x30, [sp], #16
  41762c:	ret
