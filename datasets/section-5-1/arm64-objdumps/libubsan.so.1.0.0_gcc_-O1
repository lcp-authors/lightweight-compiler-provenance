
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libubsan.so.1.0.0_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006318 <.init>:
    6318:	stp	x29, x30, [sp, #-16]!
    631c:	mov	x29, sp
    6320:	bl	6a40 <__asan_backtrace_open@plt+0x10>
    6324:	ldp	x29, x30, [sp], #16
    6328:	ret

Disassembly of section .plt:

0000000000006330 <_Unwind_Backtrace@plt-0x20>:
    6330:	stp	x16, x30, [sp, #-16]!
    6334:	adrp	x16, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    6338:	ldr	x17, [x16, #4088]
    633c:	add	x16, x16, #0xff8
    6340:	br	x17
    6344:	nop
    6348:	nop
    634c:	nop

0000000000006350 <_Unwind_Backtrace@plt>:
    6350:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6354:	ldr	x17, [x16]
    6358:	add	x16, x16, #0x0
    635c:	br	x17

0000000000006360 <__fxstat@plt>:
    6360:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6364:	ldr	x17, [x16, #8]
    6368:	add	x16, x16, #0x8
    636c:	br	x17

0000000000006370 <__sanitizer_report_error_summary@plt>:
    6370:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6374:	ldr	x17, [x16, #16]
    6378:	add	x16, x16, #0x10
    637c:	br	x17

0000000000006380 <OnPrint@plt>:
    6380:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6384:	ldr	x17, [x16, #24]
    6388:	add	x16, x16, #0x18
    638c:	br	x17

0000000000006390 <__asan_cplus_demangle_init_info@plt>:
    6390:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6394:	ldr	x17, [x16, #32]
    6398:	add	x16, x16, #0x20
    639c:	br	x17

00000000000063a0 <__asan_backtrace_qsort@plt>:
    63a0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    63a4:	ldr	x17, [x16, #40]
    63a8:	add	x16, x16, #0x28
    63ac:	br	x17

00000000000063b0 <readlink@plt>:
    63b0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    63b4:	ldr	x17, [x16, #48]
    63b8:	add	x16, x16, #0x30
    63bc:	br	x17

00000000000063c0 <shm_open@plt>:
    63c0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    63c4:	ldr	x17, [x16, #56]
    63c8:	add	x16, x16, #0x38
    63cc:	br	x17

00000000000063d0 <sched_getaffinity@plt>:
    63d0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    63d4:	ldr	x17, [x16, #64]
    63d8:	add	x16, x16, #0x40
    63dc:	br	x17

00000000000063e0 <__asan_backtrace_pcinfo@plt>:
    63e0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    63e4:	ldr	x17, [x16, #72]
    63e8:	add	x16, x16, #0x48
    63ec:	br	x17

00000000000063f0 <execv@plt>:
    63f0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    63f4:	ldr	x17, [x16, #80]
    63f8:	add	x16, x16, #0x50
    63fc:	br	x17

0000000000006400 <pipe@plt>:
    6400:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6404:	ldr	x17, [x16, #88]
    6408:	add	x16, x16, #0x58
    640c:	br	x17

0000000000006410 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6410:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6414:	ldr	x17, [x16, #96]
    6418:	add	x16, x16, #0x60
    641c:	br	x17

0000000000006420 <__asan_cplus_demangle_type@plt>:
    6420:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6424:	ldr	x17, [x16, #104]
    6428:	add	x16, x16, #0x68
    642c:	br	x17

0000000000006430 <__asan_backtrace_release_view@plt>:
    6430:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6434:	ldr	x17, [x16, #112]
    6438:	add	x16, x16, #0x70
    643c:	br	x17

0000000000006440 <__asan_backtrace_dwarf_add@plt>:
    6440:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6444:	ldr	x17, [x16, #120]
    6448:	add	x16, x16, #0x78
    644c:	br	x17

0000000000006450 <dlvsym@plt>:
    6450:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6454:	ldr	x17, [x16, #128]
    6458:	add	x16, x16, #0x80
    645c:	br	x17

0000000000006460 <pthread_getattr_np@plt>:
    6460:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6464:	ldr	x17, [x16, #136]
    6468:	add	x16, x16, #0x88
    646c:	br	x17

0000000000006470 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    6470:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6474:	ldr	x17, [x16, #144]
    6478:	add	x16, x16, #0x90
    647c:	br	x17

0000000000006480 <__sanitizer_symbolize_demangle@plt>:
    6480:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6484:	ldr	x17, [x16, #152]
    6488:	add	x16, x16, #0x98
    648c:	br	x17

0000000000006490 <__asan_cplus_demangle_fill_name@plt>:
    6490:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6494:	ldr	x17, [x16, #160]
    6498:	add	x16, x16, #0xa0
    649c:	br	x17

00000000000064a0 <__asan_internal_memcpy@plt>:
    64a0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    64a4:	ldr	x17, [x16, #168]
    64a8:	add	x16, x16, #0xa8
    64ac:	br	x17

00000000000064b0 <__asan_internal_strlen@plt>:
    64b0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    64b4:	ldr	x17, [x16, #176]
    64b8:	add	x16, x16, #0xb0
    64bc:	br	x17

00000000000064c0 <open@plt>:
    64c0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    64c4:	ldr	x17, [x16, #184]
    64c8:	add	x16, x16, #0xb8
    64cc:	br	x17

00000000000064d0 <pthread_attr_init@plt>:
    64d0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    64d4:	ldr	x17, [x16, #192]
    64d8:	add	x16, x16, #0xc0
    64dc:	br	x17

00000000000064e0 <real_pthread_attr_getstack@plt>:
    64e0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    64e4:	ldr	x17, [x16, #200]
    64e8:	add	x16, x16, #0xc8
    64ec:	br	x17

00000000000064f0 <sleep@plt>:
    64f0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    64f4:	ldr	x17, [x16, #208]
    64f8:	add	x16, x16, #0xd0
    64fc:	br	x17

0000000000006500 <dlsym@plt>:
    6500:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6504:	ldr	x17, [x16, #216]
    6508:	add	x16, x16, #0xd8
    650c:	br	x17

0000000000006510 <__asan_backtrace_vector_grow@plt>:
    6510:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6514:	ldr	x17, [x16, #224]
    6518:	add	x16, x16, #0xe0
    651c:	br	x17

0000000000006520 <__asan_backtrace_syminfo@plt>:
    6520:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6524:	ldr	x17, [x16, #232]
    6528:	add	x16, x16, #0xe8
    652c:	br	x17

0000000000006530 <__asan_internal_memset@plt>:
    6530:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6534:	ldr	x17, [x16, #240]
    6538:	add	x16, x16, #0xf0
    653c:	br	x17

0000000000006540 <free@plt>:
    6540:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6544:	ldr	x17, [x16, #248]
    6548:	add	x16, x16, #0xf8
    654c:	br	x17

0000000000006550 <__sanitizer_symbolize_data@plt>:
    6550:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6554:	ldr	x17, [x16, #256]
    6558:	add	x16, x16, #0x100
    655c:	br	x17

0000000000006560 <isatty@plt>:
    6560:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6564:	ldr	x17, [x16, #264]
    6568:	add	x16, x16, #0x108
    656c:	br	x17

0000000000006570 <dlerror@plt>:
    6570:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6574:	ldr	x17, [x16, #272]
    6578:	add	x16, x16, #0x110
    657c:	br	x17

0000000000006580 <__cxa_finalize@plt>:
    6580:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6584:	ldr	x17, [x16, #280]
    6588:	add	x16, x16, #0x118
    658c:	br	x17

0000000000006590 <realloc@plt>:
    6590:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6594:	ldr	x17, [x16, #288]
    6598:	add	x16, x16, #0x120
    659c:	br	x17

00000000000065a0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>:
    65a0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    65a4:	ldr	x17, [x16, #296]
    65a8:	add	x16, x16, #0x128
    65ac:	br	x17

00000000000065b0 <__asan_backtrace_alloc@plt>:
    65b0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    65b4:	ldr	x17, [x16, #304]
    65b8:	add	x16, x16, #0x130
    65bc:	br	x17

00000000000065c0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    65c0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    65c4:	ldr	x17, [x16, #312]
    65c8:	add	x16, x16, #0x138
    65cc:	br	x17

00000000000065d0 <getrusage@plt>:
    65d0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    65d4:	ldr	x17, [x16, #320]
    65d8:	add	x16, x16, #0x140
    65dc:	br	x17

00000000000065e0 <pthread_attr_destroy@plt>:
    65e0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    65e4:	ldr	x17, [x16, #328]
    65e8:	add	x16, x16, #0x148
    65ec:	br	x17

00000000000065f0 <sprintf@plt>:
    65f0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    65f4:	ldr	x17, [x16, #336]
    65f8:	add	x16, x16, #0x150
    65fc:	br	x17

0000000000006600 <__asan_backtrace_vector_release@plt>:
    6600:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6604:	ldr	x17, [x16, #344]
    6608:	add	x16, x16, #0x158
    660c:	br	x17

0000000000006610 <real_clock_gettime@plt>:
    6610:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6614:	ldr	x17, [x16, #352]
    6618:	add	x16, x16, #0x160
    661c:	br	x17

0000000000006620 <__cxa_demangle@plt>:
    6620:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6624:	ldr	x17, [x16, #360]
    6628:	add	x16, x16, #0x168
    662c:	br	x17

0000000000006630 <__sanitizer_symbolize_code@plt>:
    6630:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6634:	ldr	x17, [x16, #368]
    6638:	add	x16, x16, #0x170
    663c:	br	x17

0000000000006640 <dl_iterate_phdr@plt>:
    6640:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6644:	ldr	x17, [x16, #376]
    6648:	add	x16, x16, #0x178
    664c:	br	x17

0000000000006650 <__sanitizer_dump_coverage@plt>:
    6650:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16, #384]
    6658:	add	x16, x16, #0x180
    665c:	br	x17

0000000000006660 <clock_gettime@plt>:
    6660:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #392]
    6668:	add	x16, x16, #0x188
    666c:	br	x17

0000000000006670 <getpid@plt>:
    6670:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #400]
    6678:	add	x16, x16, #0x190
    667c:	br	x17

0000000000006680 <__sanitizer_symbolize_flush@plt>:
    6680:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #408]
    6688:	add	x16, x16, #0x198
    668c:	br	x17

0000000000006690 <__asan_backtrace_create_state@plt>:
    6690:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #416]
    6698:	add	x16, x16, #0x1a0
    669c:	br	x17

00000000000066a0 <mmap@plt>:
    66a0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #424]
    66a8:	add	x16, x16, #0x1a8
    66ac:	br	x17

00000000000066b0 <munmap@plt>:
    66b0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #432]
    66b8:	add	x16, x16, #0x1b0
    66bc:	br	x17

00000000000066c0 <__asan_cplus_demangle_print_callback@plt>:
    66c0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #440]
    66c8:	add	x16, x16, #0x1b8
    66cc:	br	x17

00000000000066d0 <__ubsan_on_report@plt>:
    66d0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #448]
    66d8:	add	x16, x16, #0x1c0
    66dc:	br	x17

00000000000066e0 <__dynamic_cast@plt>:
    66e0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #456]
    66e8:	add	x16, x16, #0x1c8
    66ec:	br	x17

00000000000066f0 <__cxa_atexit@plt>:
    66f0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #464]
    66f8:	add	x16, x16, #0x1d0
    66fc:	br	x17

0000000000006700 <snprintf@plt>:
    6700:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #472]
    6708:	add	x16, x16, #0x1d8
    670c:	br	x17

0000000000006710 <pthread_attr_getstack@plt>:
    6710:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #480]
    6718:	add	x16, x16, #0x1e0
    671c:	br	x17

0000000000006720 <pthread_attr_setstacksize@plt>:
    6720:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #488]
    6728:	add	x16, x16, #0x1e8
    672c:	br	x17

0000000000006730 <_Unwind_GetIP@plt>:
    6730:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #496]
    6738:	add	x16, x16, #0x1f0
    673c:	br	x17

0000000000006740 <madvise@plt>:
    6740:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #504]
    6748:	add	x16, x16, #0x1f8
    674c:	br	x17

0000000000006750 <usleep@plt>:
    6750:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #512]
    6758:	add	x16, x16, #0x200
    675c:	br	x17

0000000000006760 <shm_unlink@plt>:
    6760:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #520]
    6768:	add	x16, x16, #0x208
    676c:	br	x17

0000000000006770 <__sched_cpucount@plt>:
    6770:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #528]
    6778:	add	x16, x16, #0x210
    677c:	br	x17

0000000000006780 <strrchr@plt>:
    6780:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #536]
    6788:	add	x16, x16, #0x218
    678c:	br	x17

0000000000006790 <__errno_location@plt>:
    6790:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #544]
    6798:	add	x16, x16, #0x220
    679c:	br	x17

00000000000067a0 <sched_yield@plt>:
    67a0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #552]
    67a8:	add	x16, x16, #0x228
    67ac:	br	x17

00000000000067b0 <__asan_backtrace_get_view@plt>:
    67b0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #560]
    67b8:	add	x16, x16, #0x230
    67bc:	br	x17

00000000000067c0 <syslog@plt>:
    67c0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #568]
    67c8:	add	x16, x16, #0x238
    67cc:	br	x17

00000000000067d0 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    67d0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #576]
    67d8:	add	x16, x16, #0x240
    67dc:	br	x17

00000000000067e0 <__asan_cplus_demangle_fill_extended_operator@plt>:
    67e0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #584]
    67e8:	add	x16, x16, #0x248
    67ec:	br	x17

00000000000067f0 <__asan_internal_strcmp@plt>:
    67f0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #592]
    67f8:	add	x16, x16, #0x250
    67fc:	br	x17

0000000000006800 <__asan_internal_strnlen@plt>:
    6800:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #600]
    6808:	add	x16, x16, #0x258
    680c:	br	x17

0000000000006810 <close@plt>:
    6810:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #608]
    6818:	add	x16, x16, #0x260
    681c:	br	x17

0000000000006820 <__extenddftf2@plt>:
    6820:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #616]
    6828:	add	x16, x16, #0x268
    682c:	br	x17

0000000000006830 <__asan_internal_strncmp@plt>:
    6830:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #624]
    6838:	add	x16, x16, #0x270
    683c:	br	x17

0000000000006840 <__ubsan_handle_cfi_bad_type@plt>:
    6840:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #632]
    6848:	add	x16, x16, #0x278
    684c:	br	x17

0000000000006850 <__asan_cplus_demangle_fill_ctor@plt>:
    6850:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #640]
    6858:	add	x16, x16, #0x280
    685c:	br	x17

0000000000006860 <setrlimit@plt>:
    6860:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #648]
    6868:	add	x16, x16, #0x288
    686c:	br	x17

0000000000006870 <getauxval@plt>:
    6870:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #656]
    6878:	add	x16, x16, #0x290
    687c:	br	x17

0000000000006880 <malloc@plt>:
    6880:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #664]
    6888:	add	x16, x16, #0x298
    688c:	br	x17

0000000000006890 <__asan_backtrace_free@plt>:
    6890:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #672]
    6898:	add	x16, x16, #0x2a0
    689c:	br	x17

00000000000068a0 <__lxstat@plt>:
    68a0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #680]
    68a8:	add	x16, x16, #0x2a8
    68ac:	br	x17

00000000000068b0 <abort@plt>:
    68b0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #688]
    68b8:	add	x16, x16, #0x2b0
    68bc:	br	x17

00000000000068c0 <getenv@plt>:
    68c0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #696]
    68c8:	add	x16, x16, #0x2b8
    68cc:	br	x17

00000000000068d0 <__asan_backtrace_initialize@plt>:
    68d0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #704]
    68d8:	add	x16, x16, #0x2c0
    68dc:	br	x17

00000000000068e0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    68e0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #712]
    68e8:	add	x16, x16, #0x2c8
    68ec:	br	x17

00000000000068f0 <__asan_internal_memcmp@plt>:
    68f0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #720]
    68f8:	add	x16, x16, #0x2d0
    68fc:	br	x17

0000000000006900 <sysconf@plt>:
    6900:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #728]
    6908:	add	x16, x16, #0x2d8
    690c:	br	x17

0000000000006910 <__extendsftf2@plt>:
    6910:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #736]
    6918:	add	x16, x16, #0x2e0
    691c:	br	x17

0000000000006920 <pthread_self@plt>:
    6920:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #744]
    6928:	add	x16, x16, #0x2e8
    692c:	br	x17

0000000000006930 <getuid@plt>:
    6930:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #752]
    6938:	add	x16, x16, #0x2f0
    693c:	br	x17

0000000000006940 <getpagesize@plt>:
    6940:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #760]
    6948:	add	x16, x16, #0x2f8
    694c:	br	x17

0000000000006950 <__asan_backtrace_vector_finish@plt>:
    6950:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #768]
    6958:	add	x16, x16, #0x300
    695c:	br	x17

0000000000006960 <__asan_backtrace_close@plt>:
    6960:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #776]
    6968:	add	x16, x16, #0x308
    696c:	br	x17

0000000000006970 <__asan_cplus_demangle_mangled_name@plt>:
    6970:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #784]
    6978:	add	x16, x16, #0x310
    697c:	br	x17

0000000000006980 <__ubsan_default_options@plt>:
    6980:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #792]
    6988:	add	x16, x16, #0x318
    698c:	br	x17

0000000000006990 <getrlimit@plt>:
    6990:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #800]
    6998:	add	x16, x16, #0x320
    699c:	br	x17

00000000000069a0 <sigaltstack@plt>:
    69a0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #808]
    69a8:	add	x16, x16, #0x328
    69ac:	br	x17

00000000000069b0 <fcntl@plt>:
    69b0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #816]
    69b8:	add	x16, x16, #0x330
    69bc:	br	x17

00000000000069c0 <__gmon_start__@plt>:
    69c0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #824]
    69c8:	add	x16, x16, #0x338
    69cc:	br	x17

00000000000069d0 <sigaction@plt>:
    69d0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #832]
    69d8:	add	x16, x16, #0x340
    69dc:	br	x17

00000000000069e0 <__sanitizer_set_report_path@plt>:
    69e0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #840]
    69e8:	add	x16, x16, #0x348
    69ec:	br	x17

00000000000069f0 <__asan_cplus_demangle_v3_callback@plt>:
    69f0:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #848]
    69f8:	add	x16, x16, #0x350
    69fc:	br	x17

0000000000006a00 <__sanitizer_print_memory_profile@plt>:
    6a00:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #856]
    6a08:	add	x16, x16, #0x358
    6a0c:	br	x17

0000000000006a10 <__asan_cplus_demangle_fill_dtor@plt>:
    6a10:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #864]
    6a18:	add	x16, x16, #0x360
    6a1c:	br	x17

0000000000006a20 <__sancov_default_options@plt>:
    6a20:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #872]
    6a28:	add	x16, x16, #0x368
    6a2c:	br	x17

0000000000006a30 <__asan_backtrace_open@plt>:
    6a30:	adrp	x16, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #880]
    6a38:	add	x16, x16, #0x370
    6a3c:	br	x17

Disassembly of section .text:

0000000000006a40 <__ubsan_default_options@@Base-0x1888>:
    6a40:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    6a44:	ldr	x0, [x0, #4032]
    6a48:	cbz	x0, 6a50 <__asan_backtrace_open@plt+0x20>
    6a4c:	b	69c0 <__gmon_start__@plt>
    6a50:	ret
    6a54:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a58:	add	x0, x0, #0xd68
    6a5c:	adrp	x1, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a60:	add	x1, x1, #0xd68
    6a64:	cmp	x0, x1
    6a68:	b.eq	6a94 <__asan_backtrace_open@plt+0x64>  // b.none
    6a6c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    6a70:	ldr	x1, [x1, #4000]
    6a74:	cbz	x1, 6a94 <__asan_backtrace_open@plt+0x64>
    6a78:	stp	x29, x30, [sp, #-16]!
    6a7c:	mov	x29, sp
    6a80:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a84:	add	x0, x0, #0xd68
    6a88:	blr	x1
    6a8c:	ldp	x29, x30, [sp], #16
    6a90:	ret
    6a94:	ret
    6a98:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a9c:	add	x0, x0, #0xd68
    6aa0:	adrp	x1, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6aa4:	add	x1, x1, #0xd68
    6aa8:	sub	x0, x0, x1
    6aac:	lsr	x1, x0, #63
    6ab0:	add	x0, x1, x0, asr #3
    6ab4:	cmp	xzr, x0, asr #1
    6ab8:	b.eq	6ae8 <__asan_backtrace_open@plt+0xb8>  // b.none
    6abc:	asr	x1, x0, #1
    6ac0:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    6ac4:	ldr	x2, [x2, #4040]
    6ac8:	cbz	x2, 6ae8 <__asan_backtrace_open@plt+0xb8>
    6acc:	stp	x29, x30, [sp, #-16]!
    6ad0:	mov	x29, sp
    6ad4:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6ad8:	add	x0, x0, #0xd68
    6adc:	blr	x2
    6ae0:	ldp	x29, x30, [sp], #16
    6ae4:	ret
    6ae8:	ret
    6aec:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6af0:	ldrb	w0, [x0, #3456]
    6af4:	cbnz	w0, 6b30 <__asan_backtrace_open@plt+0x100>
    6af8:	stp	x29, x30, [sp, #-16]!
    6afc:	mov	x29, sp
    6b00:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    6b04:	ldr	x0, [x0, #3864]
    6b08:	cbz	x0, 6b18 <__asan_backtrace_open@plt+0xe8>
    6b0c:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    6b10:	ldr	x0, [x0, #888]
    6b14:	bl	6580 <__cxa_finalize@plt>
    6b18:	bl	6a54 <__asan_backtrace_open@plt+0x24>
    6b1c:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6b20:	mov	w1, #0x1                   	// #1
    6b24:	strb	w1, [x0, #3456]
    6b28:	ldp	x29, x30, [sp], #16
    6b2c:	ret
    6b30:	ret
    6b34:	stp	x29, x30, [sp, #-16]!
    6b38:	mov	x29, sp
    6b3c:	bl	6a98 <__asan_backtrace_open@plt+0x68>
    6b40:	ldp	x29, x30, [sp], #16
    6b44:	ret
    6b48:	cmp	w0, #0x19
    6b4c:	b.hi	6c88 <__asan_backtrace_open@plt+0x258>  // b.pmore
    6b50:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6b54:	add	x1, x1, #0x508
    6b58:	ldrb	w0, [x1, w0, uxtw]
    6b5c:	adr	x1, 6b68 <__asan_backtrace_open@plt+0x138>
    6b60:	add	x0, x1, w0, sxtb #2
    6b64:	br	x0
    6b68:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6b6c:	add	x0, x0, #0x1a8
    6b70:	ret
    6b74:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6b78:	add	x0, x0, #0xf70
    6b7c:	ret
    6b80:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6b84:	add	x0, x0, #0xf88
    6b88:	ret
    6b8c:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6b90:	add	x0, x0, #0xfa8
    6b94:	ret
    6b98:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6b9c:	add	x0, x0, #0xfc0
    6ba0:	ret
    6ba4:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6ba8:	add	x0, x0, #0xfe0
    6bac:	ret
    6bb0:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6bb4:	add	x0, x0, #0xff8
    6bb8:	ret
    6bbc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6bc0:	add	x0, x0, #0x10
    6bc4:	ret
    6bc8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6bcc:	add	x0, x0, #0x28
    6bd0:	ret
    6bd4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6bd8:	add	x0, x0, #0x50
    6bdc:	ret
    6be0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6be4:	add	x0, x0, #0x78
    6be8:	ret
    6bec:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6bf0:	add	x0, x0, #0x90
    6bf4:	ret
    6bf8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6bfc:	add	x0, x0, #0xa8
    6c00:	ret
    6c04:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c08:	add	x0, x0, #0xc0
    6c0c:	ret
    6c10:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c14:	add	x0, x0, #0xd8
    6c18:	ret
    6c1c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c20:	add	x0, x0, #0xe8
    6c24:	ret
    6c28:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c2c:	add	x0, x0, #0x100
    6c30:	ret
    6c34:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c38:	add	x0, x0, #0x118
    6c3c:	ret
    6c40:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c44:	add	x0, x0, #0x130
    6c48:	ret
    6c4c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c50:	add	x0, x0, #0x148
    6c54:	ret
    6c58:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c5c:	add	x0, x0, #0x160
    6c60:	ret
    6c64:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c68:	add	x0, x0, #0x178
    6c6c:	ret
    6c70:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c74:	add	x0, x0, #0x190
    6c78:	ret
    6c7c:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6c80:	add	x0, x0, #0xf30
    6c84:	ret
    6c88:	str	x30, [sp, #-16]!
    6c8c:	mov	x4, #0x0                   	// #0
    6c90:	mov	x3, #0x0                   	// #0
    6c94:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6c98:	add	x2, x2, #0x1c0
    6c9c:	mov	w1, #0x39                  	// #57
    6ca0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6ca4:	add	x0, x0, #0x1e8
    6ca8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    6cac:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6cb0:	add	x0, x0, #0xf40
    6cb4:	ret
    6cb8:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    6cbc:	add	x0, x0, #0xf58
    6cc0:	ret
    6cc4:	cbz	w2, 6da8 <__asan_backtrace_open@plt+0x378>
    6cc8:	str	x30, [sp, #-16]!
    6ccc:	mov	x3, x1
    6cd0:	sub	w4, w2, #0x1
    6cd4:	add	x2, x4, x4, lsl #1
    6cd8:	lsl	x2, x2, #2
    6cdc:	sub	x2, x2, x4
    6ce0:	add	x1, x1, #0x58
    6ce4:	add	x1, x1, x2, lsl #3
    6ce8:	mov	x5, #0x0                   	// #0
    6cec:	b	6d60 <__asan_backtrace_open@plt+0x330>
    6cf0:	mov	x4, #0x0                   	// #0
    6cf4:	mov	x3, #0x0                   	// #0
    6cf8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6cfc:	add	x2, x2, #0x218
    6d00:	mov	w1, #0x55                  	// #85
    6d04:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6d08:	add	x0, x0, #0x238
    6d0c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    6d10:	mov	x4, #0x0                   	// #0
    6d14:	mov	x3, #0x0                   	// #0
    6d18:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6d1c:	add	x2, x2, #0x218
    6d20:	mov	w1, #0x55                  	// #85
    6d24:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6d28:	add	x0, x0, #0x238
    6d2c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    6d30:	mov	x4, #0x0                   	// #0
    6d34:	mov	x3, #0x0                   	// #0
    6d38:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6d3c:	add	x2, x2, #0x218
    6d40:	mov	w1, #0x55                  	// #85
    6d44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6d48:	add	x0, x0, #0x238
    6d4c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    6d50:	mov	x5, x3
    6d54:	add	x3, x3, #0x58
    6d58:	cmp	x3, x1
    6d5c:	b.eq	6db4 <__asan_backtrace_open@plt+0x384>  // b.none
    6d60:	ldr	x6, [x3, #64]
    6d64:	ldr	w2, [x3, #40]
    6d68:	cmp	w2, #0x2
    6d6c:	b.ne	6cf0 <__asan_backtrace_open@plt+0x2c0>  // b.any
    6d70:	cmp	x6, x0
    6d74:	b.ls	6d54 <__asan_backtrace_open@plt+0x324>  // b.plast
    6d78:	cbz	x5, 6d50 <__asan_backtrace_open@plt+0x320>
    6d7c:	ldr	x6, [x5, #24]
    6d80:	ldr	w2, [x5]
    6d84:	cmp	w2, #0x2
    6d88:	b.ne	6d10 <__asan_backtrace_open@plt+0x2e0>  // b.any
    6d8c:	ldr	x7, [x3, #24]
    6d90:	ldr	w2, [x3]
    6d94:	cmp	w2, #0x2
    6d98:	b.ne	6d30 <__asan_backtrace_open@plt+0x300>  // b.any
    6d9c:	cmp	x6, x7
    6da0:	csel	x5, x5, x3, ls  // ls = plast
    6da4:	b	6d54 <__asan_backtrace_open@plt+0x324>
    6da8:	mov	x5, #0x0                   	// #0
    6dac:	mov	x0, x5
    6db0:	ret
    6db4:	mov	x0, x5
    6db8:	ldr	x30, [sp], #16
    6dbc:	ret
    6dc0:	str	x30, [sp, #-16]!
    6dc4:	mov	w5, w2
    6dc8:	lsr	x4, x2, #32
    6dcc:	lsr	x2, x3, #32
    6dd0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6dd4:	add	x1, x1, #0x268
    6dd8:	bl	1a490 <OnPrint@@Base+0x46c>
    6ddc:	ldr	x30, [sp], #16
    6de0:	ret
    6de4:	stp	x19, x20, [sp, #-96]!
    6de8:	str	x30, [sp, #56]
    6dec:	mov	x19, x2
    6df0:	ldrb	w2, [x1]
    6df4:	cbz	w2, 6f7c <__asan_backtrace_open@plt+0x54c>
    6df8:	stp	x21, x22, [sp, #16]
    6dfc:	stp	x23, x24, [sp, #32]
    6e00:	str	x25, [sp, #48]
    6e04:	mov	x20, x0
    6e08:	mov	x25, x1
    6e0c:	adrp	x22, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6e10:	add	x22, x22, #0x298
    6e14:	adrp	x21, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6e18:	add	x21, x21, #0x2a8
    6e1c:	add	x23, sp, #0x40
    6e20:	b	6e44 <__asan_backtrace_open@plt+0x414>
    6e24:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6e28:	add	x1, x1, #0x280
    6e2c:	mov	x0, x20
    6e30:	bl	1a490 <OnPrint@@Base+0x46c>
    6e34:	mov	x24, x25
    6e38:	add	x25, x24, #0x1
    6e3c:	ldrb	w2, [x24, #1]
    6e40:	cbz	w2, 6f70 <__asan_backtrace_open@plt+0x540>
    6e44:	cmp	w2, #0x25
    6e48:	b.ne	6e24 <__asan_backtrace_open@plt+0x3f4>  // b.any
    6e4c:	add	x24, x25, #0x1
    6e50:	ldrb	w1, [x25, #1]
    6e54:	lsl	x1, x1, #5
    6e58:	sub	x1, x1, #0x600
    6e5c:	add	x25, x19, x1
    6e60:	ldr	w1, [x19, x1]
    6e64:	cmp	w1, #0x3
    6e68:	b.eq	6f08 <__asan_backtrace_open@plt+0x4d8>  // b.none
    6e6c:	b.hi	6ebc <__asan_backtrace_open@plt+0x48c>  // b.pmore
    6e70:	cmp	w1, #0x1
    6e74:	b.eq	6ee4 <__asan_backtrace_open@plt+0x4b4>  // b.none
    6e78:	cmp	w1, #0x2
    6e7c:	b.ne	6ea0 <__asan_backtrace_open@plt+0x470>  // b.any
    6e80:	ldr	x2, [x25, #16]
    6e84:	ldr	x3, [x25, #24]
    6e88:	cbnz	x3, 6f38 <__asan_backtrace_open@plt+0x508>
    6e8c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6e90:	add	x1, x1, #0x2a0
    6e94:	mov	x0, x20
    6e98:	bl	1a490 <OnPrint@@Base+0x46c>
    6e9c:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6ea0:	cbnz	w1, 6e38 <__asan_backtrace_open@plt+0x408>
    6ea4:	ldr	x2, [x25, #16]
    6ea8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6eac:	add	x1, x1, #0x288
    6eb0:	mov	x0, x20
    6eb4:	bl	1a490 <OnPrint@@Base+0x46c>
    6eb8:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6ebc:	cmp	w1, #0x4
    6ec0:	b.eq	6f44 <__asan_backtrace_open@plt+0x514>  // b.none
    6ec4:	cmp	w1, #0x5
    6ec8:	b.ne	6e38 <__asan_backtrace_open@plt+0x408>  // b.any
    6ecc:	ldr	x2, [x25, #16]
    6ed0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6ed4:	add	x1, x1, #0x2b0
    6ed8:	mov	x0, x20
    6edc:	bl	1a490 <OnPrint@@Base+0x46c>
    6ee0:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6ee4:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    6ee8:	ldr	x1, [x25, #16]
    6eec:	bl	21214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x446c>
    6ef0:	mov	x2, x0
    6ef4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6ef8:	add	x1, x1, #0x290
    6efc:	mov	x0, x20
    6f00:	bl	1a490 <OnPrint@@Base+0x46c>
    6f04:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f08:	ldr	x2, [x25, #16]
    6f0c:	ldr	x3, [x25, #24]
    6f10:	cmp	x2, #0x0
    6f14:	cinc	x0, x3, lt  // lt = tstop
    6f18:	cbnz	x0, 6f2c <__asan_backtrace_open@plt+0x4fc>
    6f1c:	mov	x1, x22
    6f20:	mov	x0, x20
    6f24:	bl	1a490 <OnPrint@@Base+0x46c>
    6f28:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f2c:	mov	x0, x20
    6f30:	bl	6dc0 <__asan_backtrace_open@plt+0x390>
    6f34:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f38:	mov	x0, x20
    6f3c:	bl	6dc0 <__asan_backtrace_open@plt+0x390>
    6f40:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f44:	ldr	q0, [x25, #16]
    6f48:	mov	x2, x21
    6f4c:	mov	x1, #0x20                  	// #32
    6f50:	mov	x0, x23
    6f54:	bl	6700 <snprintf@plt>
    6f58:	mov	x2, x23
    6f5c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    6f60:	add	x1, x1, #0x288
    6f64:	mov	x0, x20
    6f68:	bl	1a490 <OnPrint@@Base+0x46c>
    6f6c:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f70:	ldp	x21, x22, [sp, #16]
    6f74:	ldp	x23, x24, [sp, #32]
    6f78:	ldr	x25, [sp, #48]
    6f7c:	ldr	x30, [sp, #56]
    6f80:	ldp	x19, x20, [sp], #96
    6f84:	ret
    6f88:	stp	x19, x20, [sp, #-80]!
    6f8c:	stp	x21, x22, [sp, #16]
    6f90:	stp	x23, x24, [sp, #32]
    6f94:	str	x30, [sp, #48]
    6f98:	mov	x19, x0
    6f9c:	mov	x20, x1
    6fa0:	mov	x21, x2
    6fa4:	mov	x22, x3
    6fa8:	mov	x23, x4
    6fac:	str	xzr, [sp, #72]
    6fb0:	str	xzr, [sp, #64]
    6fb4:	ands	w24, w5, #0xff
    6fb8:	b.ne	6ff4 <__asan_backtrace_open@plt+0x5c4>  // b.any
    6fbc:	mov	w7, w24
    6fc0:	ldr	x6, [sp, #64]
    6fc4:	ldr	x5, [sp, #72]
    6fc8:	mov	x4, x23
    6fcc:	mov	x3, x22
    6fd0:	mov	x2, x21
    6fd4:	mov	w1, w20
    6fd8:	mov	x0, x19
    6fdc:	bl	1c764 <OnPrint@@Base+0x2740>
    6fe0:	ldp	x21, x22, [sp, #16]
    6fe4:	ldp	x23, x24, [sp, #32]
    6fe8:	ldr	x30, [sp, #48]
    6fec:	ldp	x19, x20, [sp], #80
    6ff0:	ret
    6ff4:	add	x2, sp, #0x40
    6ff8:	add	x1, sp, #0x48
    6ffc:	mov	w0, #0x0                   	// #0
    7000:	bl	171e4 <__sanitizer_set_report_fd@@Base+0x43a0>
    7004:	b	6fbc <__asan_backtrace_open@plt+0x58c>
    7008:	adrp	x4, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    700c:	ldr	x4, [x4, #3816]
    7010:	ldrb	w2, [x4, #1]
    7014:	cbnz	w2, 701c <__asan_backtrace_open@plt+0x5ec>
    7018:	ret
    701c:	sub	sp, sp, #0x830
    7020:	stp	x19, x30, [sp]
    7024:	add	x19, sp, #0x18
    7028:	add	x2, sp, #0x28
    702c:	str	x2, [sp, #24]
    7030:	str	wzr, [sp, #32]
    7034:	str	wzr, [sp, #36]
    7038:	str	xzr, [sp, #2088]
    703c:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7040:	ldr	x2, [x2, #4056]
    7044:	ldrb	w5, [x2, #33]
    7048:	mov	x4, #0x0                   	// #0
    704c:	mov	x3, x1
    7050:	mov	x2, x0
    7054:	mov	x1, #0x100                 	// #256
    7058:	mov	x0, x19
    705c:	bl	6f88 <__asan_backtrace_open@plt+0x558>
    7060:	mov	x0, x19
    7064:	bl	1c1b4 <OnPrint@@Base+0x2190>
    7068:	ldp	x19, x30, [sp]
    706c:	add	sp, sp, #0x830
    7070:	ret
    7074:	stp	x19, x30, [sp, #-16]!
    7078:	mov	x19, x0
    707c:	bl	c224 <__ubsan_handle_cfi_bad_type@@Base+0x504>
    7080:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    7084:	mov	x1, x19
    7088:	bl	21478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
    708c:	ldp	x19, x30, [sp], #16
    7090:	ret
    7094:	ldr	w2, [x0, #320]
    7098:	cmp	w2, #0x8
    709c:	b.eq	70c4 <__asan_backtrace_open@plt+0x694>  // b.none
    70a0:	add	x1, x1, #0x4
    70a4:	add	w3, w2, #0x1
    70a8:	str	w3, [x0, #320]
    70ac:	ubfiz	x2, x2, #5, #32
    70b0:	add	x2, x2, #0x40
    70b4:	add	x3, x0, x2
    70b8:	str	wzr, [x0, x2]
    70bc:	str	x1, [x3, #16]
    70c0:	ret
    70c4:	str	x30, [sp, #-16]!
    70c8:	mov	x4, #0x0                   	// #0
    70cc:	mov	x3, #0x0                   	// #0
    70d0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    70d4:	add	x2, x2, #0x2b8
    70d8:	mov	w1, #0xbf                  	// #191
    70dc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    70e0:	add	x0, x0, #0x238
    70e4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    70e8:	stp	x19, x30, [sp, #-16]!
    70ec:	mov	x19, x0
    70f0:	mov	x0, x1
    70f4:	ldr	x1, [x1]
    70f8:	ldrh	w2, [x1]
    70fc:	cbnz	w2, 7198 <__asan_backtrace_open@plt+0x768>
    7100:	ldrh	w1, [x1, #2]
    7104:	tbz	w1, #0, 7160 <__asan_backtrace_open@plt+0x730>
    7108:	bl	ca48 <__ubsan_get_current_report_data@@Base+0x530>
    710c:	ldr	w2, [x19, #320]
    7110:	cmp	w2, #0x8
    7114:	b.eq	7140 <__asan_backtrace_open@plt+0x710>  // b.none
    7118:	add	w3, w2, #0x1
    711c:	str	w3, [x19, #320]
    7120:	ubfiz	x2, x2, #5, #32
    7124:	add	x2, x2, #0x40
    7128:	add	x3, x19, x2
    712c:	mov	w4, #0x3                   	// #3
    7130:	str	w4, [x19, x2]
    7134:	str	x0, [x3, #16]
    7138:	str	x1, [x3, #24]
    713c:	b	7244 <__asan_backtrace_open@plt+0x814>
    7140:	mov	x4, #0x0                   	// #0
    7144:	mov	x3, #0x0                   	// #0
    7148:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    714c:	add	x2, x2, #0x2b8
    7150:	mov	w1, #0xbf                  	// #191
    7154:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7158:	add	x0, x0, #0x238
    715c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7160:	bl	cb2c <__ubsan_get_current_report_data@@Base+0x614>
    7164:	ldr	w2, [x19, #320]
    7168:	cmp	w2, #0x8
    716c:	b.eq	71d4 <__asan_backtrace_open@plt+0x7a4>  // b.none
    7170:	add	w3, w2, #0x1
    7174:	str	w3, [x19, #320]
    7178:	ubfiz	x2, x2, #5, #32
    717c:	add	x2, x2, #0x40
    7180:	add	x3, x19, x2
    7184:	mov	w4, #0x2                   	// #2
    7188:	str	w4, [x19, x2]
    718c:	str	x0, [x3, #16]
    7190:	str	x1, [x3, #24]
    7194:	b	7244 <__asan_backtrace_open@plt+0x814>
    7198:	cmp	w2, #0x1
    719c:	b.ne	7214 <__asan_backtrace_open@plt+0x7e4>  // b.any
    71a0:	bl	cc10 <__ubsan_get_current_report_data@@Base+0x6f8>
    71a4:	ldr	w0, [x19, #320]
    71a8:	cmp	w0, #0x8
    71ac:	b.eq	71f4 <__asan_backtrace_open@plt+0x7c4>  // b.none
    71b0:	add	w1, w0, #0x1
    71b4:	str	w1, [x19, #320]
    71b8:	ubfiz	x0, x0, #5, #32
    71bc:	add	x0, x0, #0x40
    71c0:	add	x1, x19, x0
    71c4:	mov	w2, #0x4                   	// #4
    71c8:	str	w2, [x19, x0]
    71cc:	str	q0, [x1, #16]
    71d0:	b	7244 <__asan_backtrace_open@plt+0x814>
    71d4:	mov	x4, #0x0                   	// #0
    71d8:	mov	x3, #0x0                   	// #0
    71dc:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    71e0:	add	x2, x2, #0x2b8
    71e4:	mov	w1, #0xbf                  	// #191
    71e8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    71ec:	add	x0, x0, #0x238
    71f0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    71f4:	mov	x4, #0x0                   	// #0
    71f8:	mov	x3, #0x0                   	// #0
    71fc:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7200:	add	x2, x2, #0x2b8
    7204:	mov	w1, #0xbf                  	// #191
    7208:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    720c:	add	x0, x0, #0x238
    7210:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7214:	ldr	w0, [x19, #320]
    7218:	cmp	w0, #0x8
    721c:	b.eq	7250 <__asan_backtrace_open@plt+0x820>  // b.none
    7220:	add	w1, w0, #0x1
    7224:	str	w1, [x19, #320]
    7228:	ubfiz	x0, x0, #5, #32
    722c:	add	x0, x0, #0x40
    7230:	add	x1, x19, x0
    7234:	str	wzr, [x19, x0]
    7238:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    723c:	add	x0, x0, #0x2d8
    7240:	str	x0, [x1, #16]
    7244:	mov	x0, x19
    7248:	ldp	x19, x30, [sp], #16
    724c:	ret
    7250:	mov	x4, #0x0                   	// #0
    7254:	mov	x3, #0x0                   	// #0
    7258:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    725c:	add	x2, x2, #0x2b8
    7260:	mov	w1, #0xbf                  	// #191
    7264:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7268:	add	x0, x0, #0x238
    726c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7270:	stp	x19, x20, [sp, #-224]!
    7274:	stp	x25, x26, [sp, #48]
    7278:	str	x30, [sp, #80]
    727c:	mov	x20, x0
    7280:	bl	1dec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1118>
    7284:	bl	1d098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
    7288:	and	w26, w0, #0xff
    728c:	str	xzr, [sp, #152]
    7290:	str	xzr, [sp, #160]
    7294:	str	xzr, [sp, #144]
    7298:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    729c:	ldr	x0, [x0, #4016]
    72a0:	ldr	x0, [x0]
    72a4:	cbz	x0, 73d0 <__asan_backtrace_open@plt+0x9a0>
    72a8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    72ac:	ldr	x0, [x0, #4016]
    72b0:	ldr	x1, [x0]
    72b4:	sub	x25, x1, #0x1
    72b8:	ands	x25, x25, x1
    72bc:	b.ne	73e4 <__asan_backtrace_open@plt+0x9b4>  // b.any
    72c0:	stp	x21, x22, [sp, #16]
    72c4:	add	x19, x1, #0x3ff
    72c8:	neg	x1, x1
    72cc:	and	x19, x19, x1
    72d0:	mov	w2, #0x0                   	// #0
    72d4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    72d8:	add	x1, x1, #0x350
    72dc:	mov	x0, x19
    72e0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    72e4:	mov	x21, x0
    72e8:	ldr	x2, [sp, #160]
    72ec:	ldr	x1, [sp, #144]
    72f0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    72f4:	ldr	x1, [sp, #152]
    72f8:	ldr	x0, [sp, #144]
    72fc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    7300:	str	x21, [sp, #144]
    7304:	str	x19, [sp, #152]
    7308:	ldr	x0, [sp, #160]
    730c:	cmp	x0, #0x3ff
    7310:	b.hi	7338 <__asan_backtrace_open@plt+0x908>  // b.pmore
    7314:	cmp	x19, #0x3ff
    7318:	b.ls	7400 <__asan_backtrace_open@plt+0x9d0>  // b.plast
    731c:	ldr	x0, [sp, #160]
    7320:	mov	x2, #0x400                 	// #1024
    7324:	sub	x2, x2, x0
    7328:	mov	w1, #0x0                   	// #0
    732c:	ldr	x3, [sp, #144]
    7330:	add	x0, x3, x0
    7334:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    7338:	mov	x0, #0x400                 	// #1024
    733c:	str	x0, [sp, #160]
    7340:	str	xzr, [sp, #168]
    7344:	ldr	x0, [sp, #144]
    7348:	strb	wzr, [x0]
    734c:	ldr	w0, [x20, #40]
    7350:	cbz	w0, 749c <__asan_backtrace_open@plt+0xa6c>
    7354:	adrp	x19, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    7358:	add	x0, x19, #0x640
    735c:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7360:	add	x19, x19, #0x2e8
    7364:	cmp	w26, #0x0
    7368:	csel	x19, x19, x0, ne  // ne = any
    736c:	mov	x1, x19
    7370:	add	x0, sp, #0x90
    7374:	bl	1a490 <OnPrint@@Base+0x46c>
    7378:	ldp	x0, x1, [x20]
    737c:	stp	x0, x1, [sp, #176]
    7380:	ldp	x0, x1, [x20, #16]
    7384:	stp	x0, x1, [sp, #192]
    7388:	ldr	x0, [x20, #32]
    738c:	str	x0, [sp, #208]
    7390:	ldr	w0, [x20]
    7394:	cmp	w0, #0x2
    7398:	b.eq	7564 <__asan_backtrace_open@plt+0xb34>  // b.none
    739c:	b.hi	7518 <__asan_backtrace_open@plt+0xae8>  // b.pmore
    73a0:	cbz	w0, 7654 <__asan_backtrace_open@plt+0xc24>
    73a4:	ldr	x1, [sp, #184]
    73a8:	cbz	x1, 7550 <__asan_backtrace_open@plt+0xb20>
    73ac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    73b0:	ldr	x0, [x0, #4056]
    73b4:	ldr	x5, [x0, #24]
    73b8:	ldrb	w4, [x0, #181]
    73bc:	ldr	w3, [sp, #196]
    73c0:	ldr	w2, [sp, #192]
    73c4:	add	x0, sp, #0x90
    73c8:	bl	1e070 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c8>
    73cc:	b	7578 <__asan_backtrace_open@plt+0xb48>
    73d0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    73d4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    73d8:	ldr	x1, [x1, #4016]
    73dc:	str	x0, [x1]
    73e0:	b	72a8 <__asan_backtrace_open@plt+0x878>
    73e4:	stp	x21, x22, [sp, #16]
    73e8:	stp	x23, x24, [sp, #32]
    73ec:	stp	x27, x28, [sp, #64]
    73f0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    73f4:	add	x0, x0, #0x338
    73f8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    73fc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    7400:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7404:	ldr	x0, [x0, #4016]
    7408:	ldr	x0, [x0]
    740c:	cbz	x0, 7470 <__asan_backtrace_open@plt+0xa40>
    7410:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7414:	ldr	x0, [x0, #4016]
    7418:	ldr	x0, [x0]
    741c:	sub	x1, x0, #0x1
    7420:	tst	x1, x0
    7424:	b.ne	7484 <__asan_backtrace_open@plt+0xa54>  // b.any
    7428:	add	x19, x0, #0x3ff
    742c:	neg	x0, x0
    7430:	and	x19, x19, x0
    7434:	mov	w2, #0x0                   	// #0
    7438:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    743c:	add	x1, x1, #0x350
    7440:	mov	x0, x19
    7444:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    7448:	mov	x21, x0
    744c:	ldr	x2, [sp, #160]
    7450:	ldr	x1, [sp, #144]
    7454:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    7458:	ldr	x1, [sp, #152]
    745c:	ldr	x0, [sp, #144]
    7460:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    7464:	str	x21, [sp, #144]
    7468:	str	x19, [sp, #152]
    746c:	b	731c <__asan_backtrace_open@plt+0x8ec>
    7470:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    7474:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7478:	ldr	x1, [x1, #4016]
    747c:	str	x0, [x1]
    7480:	b	7410 <__asan_backtrace_open@plt+0x9e0>
    7484:	stp	x23, x24, [sp, #32]
    7488:	stp	x27, x28, [sp, #64]
    748c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7490:	add	x0, x0, #0x338
    7494:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    7498:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    749c:	add	x19, sp, #0x90
    74a0:	add	x2, x20, #0x40
    74a4:	ldr	x1, [x20, #48]
    74a8:	mov	x0, x19
    74ac:	bl	6de4 <__asan_backtrace_open@plt+0x3b4>
    74b0:	ldr	w0, [x20, #44]
    74b4:	bl	6b48 <__asan_backtrace_open@plt+0x118>
    74b8:	mov	x3, x19
    74bc:	mov	x2, x20
    74c0:	mov	x1, x0
    74c4:	add	x0, sp, #0xb0
    74c8:	bl	c310 <__ubsan_on_report@@Base+0x4>
    74cc:	ldr	x0, [sp, #160]
    74d0:	cbz	x0, 74f0 <__asan_backtrace_open@plt+0xac0>
    74d4:	ldr	x0, [sp, #144]
    74d8:	strb	wzr, [x0]
    74dc:	str	xzr, [sp, #168]
    74e0:	ldr	x1, [sp, #200]
    74e4:	ldr	x0, [sp, #192]
    74e8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    74ec:	b	7354 <__asan_backtrace_open@plt+0x924>
    74f0:	stp	x23, x24, [sp, #32]
    74f4:	stp	x27, x28, [sp, #64]
    74f8:	mov	x4, #0x0                   	// #0
    74fc:	mov	x3, #0x0                   	// #0
    7500:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7504:	add	x2, x2, #0x368
    7508:	mov	w1, #0x1b6                 	// #438
    750c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7510:	add	x0, x0, #0x380
    7514:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7518:	cmp	w0, #0x3
    751c:	b.ne	7578 <__asan_backtrace_open@plt+0xb48>  // b.any
    7520:	ldr	x0, [x20, #32]
    7524:	ldr	x1, [x0, #56]
    7528:	cbz	x1, 7614 <__asan_backtrace_open@plt+0xbe4>
    752c:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7530:	ldr	x2, [x2, #4056]
    7534:	ldr	x5, [x2, #24]
    7538:	ldrb	w4, [x2, #181]
    753c:	ldr	w3, [x0, #68]
    7540:	ldr	w2, [x0, #64]
    7544:	add	x0, sp, #0x90
    7548:	bl	1e070 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c8>
    754c:	b	7578 <__asan_backtrace_open@plt+0xb48>
    7550:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7554:	add	x1, x1, #0x2d8
    7558:	add	x0, sp, #0x90
    755c:	bl	1a490 <OnPrint@@Base+0x46c>
    7560:	b	7578 <__asan_backtrace_open@plt+0xb48>
    7564:	ldr	x2, [x20, #24]
    7568:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    756c:	add	x1, x1, #0x2b0
    7570:	add	x0, sp, #0x90
    7574:	bl	1a490 <OnPrint@@Base+0x46c>
    7578:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    757c:	add	x1, x1, #0x3c0
    7580:	add	x0, sp, #0x90
    7584:	bl	1a490 <OnPrint@@Base+0x46c>
    7588:	ldr	w0, [x20, #40]
    758c:	cbz	w0, 7668 <__asan_backtrace_open@plt+0xc38>
    7590:	cmp	w0, #0x1
    7594:	b.eq	76a4 <__asan_backtrace_open@plt+0xc74>  // b.none
    7598:	add	x22, x20, #0x40
    759c:	mov	x2, x22
    75a0:	ldr	x1, [x20, #48]
    75a4:	add	x0, sp, #0x90
    75a8:	bl	6de4 <__asan_backtrace_open@plt+0x3b4>
    75ac:	adrp	x19, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    75b0:	add	x0, x19, #0x640
    75b4:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    75b8:	add	x19, x19, #0x300
    75bc:	cmp	w26, #0x0
    75c0:	csel	x19, x19, x0, ne  // ne = any
    75c4:	mov	x2, x19
    75c8:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
    75cc:	add	x1, x1, #0x40
    75d0:	add	x0, sp, #0x90
    75d4:	bl	1a490 <OnPrint@@Base+0x46c>
    75d8:	ldr	x1, [sp, #144]
    75dc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    75e0:	add	x0, x0, #0x288
    75e4:	bl	1a368 <OnPrint@@Base+0x344>
    75e8:	ldr	w21, [x20]
    75ec:	cmp	w21, #0x2
    75f0:	b.eq	76dc <__asan_backtrace_open@plt+0xcac>  // b.none
    75f4:	ldr	x1, [sp, #152]
    75f8:	ldr	x0, [sp, #144]
    75fc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    7600:	ldp	x21, x22, [sp, #16]
    7604:	ldp	x25, x26, [sp, #48]
    7608:	ldr	x30, [sp, #80]
    760c:	ldp	x19, x20, [sp], #224
    7610:	ret
    7614:	ldr	x1, [x0, #16]
    7618:	cbz	x1, 763c <__asan_backtrace_open@plt+0xc0c>
    761c:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7620:	ldr	x2, [x2, #4056]
    7624:	ldr	x4, [x2, #24]
    7628:	ldr	w3, [x0, #32]
    762c:	ldr	x2, [x0, #24]
    7630:	add	x0, sp, #0x90
    7634:	bl	1e14c <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a4>
    7638:	b	7578 <__asan_backtrace_open@plt+0xb48>
    763c:	ldr	x2, [x0, #8]
    7640:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7644:	add	x1, x1, #0x2b0
    7648:	add	x0, sp, #0x90
    764c:	bl	1a490 <OnPrint@@Base+0x46c>
    7650:	b	7578 <__asan_backtrace_open@plt+0xb48>
    7654:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7658:	add	x1, x1, #0x2d8
    765c:	add	x0, sp, #0x90
    7660:	bl	1a490 <OnPrint@@Base+0x46c>
    7664:	b	7578 <__asan_backtrace_open@plt+0xb48>
    7668:	cbnz	w26, 7690 <__asan_backtrace_open@plt+0xc60>
    766c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    7670:	add	x2, x2, #0x640
    7674:	mov	x3, x2
    7678:	mov	x4, x19
    767c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7680:	add	x1, x1, #0x3c8
    7684:	add	x0, sp, #0x90
    7688:	bl	1a490 <OnPrint@@Base+0x46c>
    768c:	b	7598 <__asan_backtrace_open@plt+0xb68>
    7690:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7694:	add	x2, x2, #0x2f0
    7698:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    769c:	add	x3, x3, #0x300
    76a0:	b	7678 <__asan_backtrace_open@plt+0xc48>
    76a4:	cbnz	w26, 76c8 <__asan_backtrace_open@plt+0xc98>
    76a8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    76ac:	add	x2, x2, #0x640
    76b0:	mov	x3, x2
    76b4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    76b8:	add	x1, x1, #0x3e0
    76bc:	add	x0, sp, #0x90
    76c0:	bl	1a490 <OnPrint@@Base+0x46c>
    76c4:	b	7598 <__asan_backtrace_open@plt+0xb68>
    76c8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    76cc:	add	x2, x2, #0x310
    76d0:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    76d4:	add	x3, x3, #0x300
    76d8:	b	76b4 <__asan_backtrace_open@plt+0xc84>
    76dc:	stp	x23, x24, [sp, #32]
    76e0:	stp	x27, x28, [sp, #64]
    76e4:	ldr	x23, [x20, #24]
    76e8:	add	x28, x20, #0x148
    76ec:	ldr	w24, [x20, #416]
    76f0:	sub	x0, x23, #0x4
    76f4:	cmp	x23, #0x3
    76f8:	csel	x25, x0, x25, hi  // hi = pmore
    76fc:	add	x1, x23, #0x4
    7700:	cmn	x23, #0x4
    7704:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
    7708:	cbz	w24, 7970 <__asan_backtrace_open@plt+0xf40>
    770c:	mov	x0, x28
    7710:	sub	w2, w24, #0x1
    7714:	add	x3, x2, x2, lsl #1
    7718:	lsl	x3, x3, #2
    771c:	sub	x3, x3, x2
    7720:	add	x20, x20, #0x1a0
    7724:	add	x3, x20, x3, lsl #3
    7728:	mov	x20, x25
    772c:	ldr	x2, [x0, #24]
    7730:	ldr	w4, [x0]
    7734:	cmp	w4, #0x2
    7738:	b.ne	7930 <__asan_backtrace_open@plt+0xf00>  // b.any
    773c:	cmp	x20, x2
    7740:	csel	x20, x20, x2, ls  // ls = plast
    7744:	ldr	x2, [x0, #64]
    7748:	ldr	w4, [x0, #40]
    774c:	cmp	w4, #0x2
    7750:	b.ne	7950 <__asan_backtrace_open@plt+0xf20>  // b.any
    7754:	cmp	x1, x2
    7758:	csel	x1, x1, x2, cs  // cs = hs, nlast
    775c:	add	x0, x0, #0x58
    7760:	cmp	x0, x3
    7764:	b.ne	772c <__asan_backtrace_open@plt+0xcfc>  // b.any
    7768:	sub	x0, x1, x20
    776c:	cmp	x0, #0x20
    7770:	b.ls	7780 <__asan_backtrace_open@plt+0xd50>  // b.plast
    7774:	sub	x1, x1, #0x20
    7778:	cmp	x1, x25
    777c:	csel	x20, x1, x25, ls  // ls = plast
    7780:	add	x25, x20, #0x20
    7784:	cmn	x20, #0x20
    7788:	csinv	x25, x25, xzr, cc  // cc = lo, ul, last
    778c:	sub	x1, x25, x20
    7790:	mov	x0, x20
    7794:	bl	18e38 <__sanitizer_set_report_fd@@Base+0x5ff4>
    7798:	and	w0, w0, #0xff
    779c:	cbz	w0, 7978 <__asan_backtrace_open@plt+0xf48>
    77a0:	str	xzr, [sp, #184]
    77a4:	str	xzr, [sp, #192]
    77a8:	str	xzr, [sp, #176]
    77ac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    77b0:	ldr	x0, [x0, #4016]
    77b4:	ldr	x0, [x0]
    77b8:	cbz	x0, 7990 <__asan_backtrace_open@plt+0xf60>
    77bc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    77c0:	ldr	x0, [x0, #4016]
    77c4:	ldr	x0, [x0]
    77c8:	sub	x1, x0, #0x1
    77cc:	tst	x1, x0
    77d0:	b.ne	79a4 <__asan_backtrace_open@plt+0xf74>  // b.any
    77d4:	add	x27, x0, #0x3ff
    77d8:	neg	x0, x0
    77dc:	and	x27, x27, x0
    77e0:	mov	w2, #0x0                   	// #0
    77e4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    77e8:	add	x1, x1, #0x350
    77ec:	mov	x0, x27
    77f0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    77f4:	str	x0, [sp, #104]
    77f8:	ldr	x2, [sp, #192]
    77fc:	ldr	x1, [sp, #176]
    7800:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    7804:	ldr	x1, [sp, #184]
    7808:	ldr	x0, [sp, #176]
    780c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    7810:	ldr	x0, [sp, #104]
    7814:	str	x0, [sp, #176]
    7818:	str	x27, [sp, #184]
    781c:	ldr	x0, [sp, #192]
    7820:	cmp	x0, #0x3ff
    7824:	b.hi	784c <__asan_backtrace_open@plt+0xe1c>  // b.pmore
    7828:	cmp	x27, #0x3ff
    782c:	b.ls	79b4 <__asan_backtrace_open@plt+0xf84>  // b.plast
    7830:	ldr	x0, [sp, #192]
    7834:	mov	x2, #0x400                 	// #1024
    7838:	sub	x2, x2, x0
    783c:	mov	w1, #0x0                   	// #0
    7840:	ldr	x3, [sp, #176]
    7844:	add	x0, x3, x0
    7848:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    784c:	mov	x0, #0x400                 	// #1024
    7850:	str	x0, [sp, #192]
    7854:	str	xzr, [sp, #200]
    7858:	ldr	x0, [sp, #176]
    785c:	strb	wzr, [x0]
    7860:	cmp	x20, x25
    7864:	b.eq	7cf8 <__asan_backtrace_open@plt+0x12c8>  // b.none
    7868:	mov	x27, x20
    786c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
    7870:	add	x0, x0, #0xa38
    7874:	str	x0, [sp, #120]
    7878:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    787c:	add	x0, x0, #0x320
    7880:	str	x0, [sp, #128]
    7884:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7888:	add	x0, x0, #0x410
    788c:	str	x0, [sp, #104]
    7890:	add	x0, sp, #0xb0
    7894:	str	x0, [sp, #112]
    7898:	tst	x27, #0x7
    789c:	ldrb	w3, [x27]
    78a0:	ldr	x0, [sp, #128]
    78a4:	ldr	x1, [sp, #120]
    78a8:	csel	x2, x0, x1, eq  // eq = none
    78ac:	ldr	x1, [sp, #104]
    78b0:	ldr	x0, [sp, #112]
    78b4:	bl	1a490 <OnPrint@@Base+0x46c>
    78b8:	add	x27, x27, #0x1
    78bc:	cmp	x25, x27
    78c0:	b.ne	7898 <__asan_backtrace_open@plt+0xe68>  // b.any
    78c4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
    78c8:	add	x1, x1, #0xce8
    78cc:	add	x0, sp, #0xb0
    78d0:	bl	1a490 <OnPrint@@Base+0x46c>
    78d4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    78d8:	add	x1, x1, #0x640
    78dc:	cbz	w26, 78e8 <__asan_backtrace_open@plt+0xeb8>
    78e0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    78e4:	add	x1, x1, #0x328
    78e8:	add	x0, sp, #0xb0
    78ec:	bl	1a490 <OnPrint@@Base+0x46c>
    78f0:	mov	w2, w24
    78f4:	mov	x1, x28
    78f8:	mov	x0, x20
    78fc:	bl	6cc4 <__asan_backtrace_open@plt+0x294>
    7900:	mov	x27, x0
    7904:	cmp	x20, x25
    7908:	b.eq	7d2c <__asan_backtrace_open@plt+0x12fc>  // b.none
    790c:	mov	x26, x20
    7910:	mov	w0, #0x20                  	// #32
    7914:	str	w0, [sp, #140]
    7918:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    791c:	add	x0, x0, #0x280
    7920:	str	x0, [sp, #104]
    7924:	add	x0, sp, #0xb0
    7928:	str	x0, [sp, #112]
    792c:	b	7af0 <__asan_backtrace_open@plt+0x10c0>
    7930:	mov	x4, #0x0                   	// #0
    7934:	mov	x3, #0x0                   	// #0
    7938:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    793c:	add	x2, x2, #0x218
    7940:	mov	w1, #0x55                  	// #85
    7944:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7948:	add	x0, x0, #0x238
    794c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7950:	mov	x4, #0x0                   	// #0
    7954:	mov	x3, #0x0                   	// #0
    7958:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    795c:	add	x2, x2, #0x218
    7960:	mov	w1, #0x55                  	// #85
    7964:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7968:	add	x0, x0, #0x238
    796c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7970:	mov	x20, x25
    7974:	b	7768 <__asan_backtrace_open@plt+0xd38>
    7978:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    797c:	add	x0, x0, #0x3f0
    7980:	bl	1a368 <OnPrint@@Base+0x344>
    7984:	ldp	x23, x24, [sp, #32]
    7988:	ldp	x27, x28, [sp, #64]
    798c:	b	75f4 <__asan_backtrace_open@plt+0xbc4>
    7990:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    7994:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7998:	ldr	x1, [x1, #4016]
    799c:	str	x0, [x1]
    79a0:	b	77bc <__asan_backtrace_open@plt+0xd8c>
    79a4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    79a8:	add	x0, x0, #0x338
    79ac:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    79b0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    79b4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    79b8:	ldr	x0, [x0, #4016]
    79bc:	ldr	x0, [x0]
    79c0:	cbz	x0, 7a28 <__asan_backtrace_open@plt+0xff8>
    79c4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    79c8:	ldr	x0, [x0, #4016]
    79cc:	ldr	x0, [x0]
    79d0:	sub	x1, x0, #0x1
    79d4:	tst	x1, x0
    79d8:	b.ne	7a3c <__asan_backtrace_open@plt+0x100c>  // b.any
    79dc:	add	x27, x0, #0x3ff
    79e0:	neg	x0, x0
    79e4:	and	x27, x27, x0
    79e8:	mov	w2, #0x0                   	// #0
    79ec:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    79f0:	add	x1, x1, #0x350
    79f4:	mov	x0, x27
    79f8:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    79fc:	str	x0, [sp, #104]
    7a00:	ldr	x2, [sp, #192]
    7a04:	ldr	x1, [sp, #176]
    7a08:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    7a0c:	ldr	x1, [sp, #184]
    7a10:	ldr	x0, [sp, #176]
    7a14:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    7a18:	ldr	x0, [sp, #104]
    7a1c:	str	x0, [sp, #176]
    7a20:	str	x27, [sp, #184]
    7a24:	b	7830 <__asan_backtrace_open@plt+0xe00>
    7a28:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    7a2c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7a30:	ldr	x1, [x1, #4016]
    7a34:	str	x0, [x1]
    7a38:	b	79c4 <__asan_backtrace_open@plt+0xf94>
    7a3c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7a40:	add	x0, x0, #0x338
    7a44:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    7a48:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    7a4c:	mov	x4, #0x0                   	// #0
    7a50:	mov	x3, #0x0                   	// #0
    7a54:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7a58:	add	x2, x2, #0x218
    7a5c:	mov	w1, #0x55                  	// #85
    7a60:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7a64:	add	x0, x0, #0x238
    7a68:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7a6c:	cbz	x0, 7b64 <__asan_backtrace_open@plt+0x1134>
    7a70:	ldr	x0, [x27, #24]
    7a74:	ldr	w1, [x27]
    7a78:	cmp	w1, #0x2
    7a7c:	b.ne	7b44 <__asan_backtrace_open@plt+0x1114>  // b.any
    7a80:	cmp	x26, x0
    7a84:	mov	w1, #0x7e                  	// #126
    7a88:	mov	w2, #0x20                  	// #32
    7a8c:	csel	w1, w2, w1, ls  // ls = plast
    7a90:	str	w1, [sp, #128]
    7a94:	mov	w0, #0x7e                  	// #126
    7a98:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    7a9c:	str	w0, [sp, #120]
    7aa0:	tst	x26, #0x7
    7aa4:	b.eq	7b78 <__asan_backtrace_open@plt+0x1148>  // b.none
    7aa8:	ldr	w2, [sp, #128]
    7aac:	ldr	x1, [sp, #104]
    7ab0:	ldr	x0, [sp, #112]
    7ab4:	bl	1a490 <OnPrint@@Base+0x46c>
    7ab8:	cmp	x23, x26
    7abc:	mov	w2, #0x5e                  	// #94
    7ac0:	ldr	w3, [sp, #120]
    7ac4:	csel	w2, w3, w2, ne  // ne = any
    7ac8:	ldr	x1, [sp, #104]
    7acc:	ldr	x0, [sp, #112]
    7ad0:	bl	1a490 <OnPrint@@Base+0x46c>
    7ad4:	ldr	w2, [sp, #120]
    7ad8:	ldr	x1, [sp, #104]
    7adc:	ldr	x0, [sp, #112]
    7ae0:	bl	1a490 <OnPrint@@Base+0x46c>
    7ae4:	add	x26, x26, #0x1
    7ae8:	cmp	x25, x26
    7aec:	b.eq	7b8c <__asan_backtrace_open@plt+0x115c>  // b.none
    7af0:	cbz	x27, 7cdc <__asan_backtrace_open@plt+0x12ac>
    7af4:	ldr	x1, [x27, #64]
    7af8:	ldr	w0, [x27, #40]
    7afc:	cmp	w0, #0x2
    7b00:	b.ne	7a4c <__asan_backtrace_open@plt+0x101c>  // b.any
    7b04:	cmp	x26, x1
    7b08:	b.ne	7a70 <__asan_backtrace_open@plt+0x1040>  // b.any
    7b0c:	mov	w2, w24
    7b10:	mov	x1, x28
    7b14:	mov	x0, x26
    7b18:	bl	6cc4 <__asan_backtrace_open@plt+0x294>
    7b1c:	mov	x27, x0
    7b20:	cmp	x0, #0x0
    7b24:	ccmp	x23, x26, #0x2, eq  // eq = none
    7b28:	b.cs	7a6c <__asan_backtrace_open@plt+0x103c>  // b.hs, b.nlast
    7b2c:	mov	x2, x19
    7b30:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
    7b34:	add	x1, x1, #0x40
    7b38:	add	x0, sp, #0xb0
    7b3c:	bl	1a490 <OnPrint@@Base+0x46c>
    7b40:	b	7ba8 <__asan_backtrace_open@plt+0x1178>
    7b44:	mov	x4, #0x0                   	// #0
    7b48:	mov	x3, #0x0                   	// #0
    7b4c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7b50:	add	x2, x2, #0x218
    7b54:	mov	w1, #0x55                  	// #85
    7b58:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7b5c:	add	x0, x0, #0x238
    7b60:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7b64:	mov	w0, #0x20                  	// #32
    7b68:	str	w0, [sp, #128]
    7b6c:	ldr	w0, [sp, #140]
    7b70:	str	w0, [sp, #120]
    7b74:	b	7aa0 <__asan_backtrace_open@plt+0x1070>
    7b78:	ldr	w2, [sp, #128]
    7b7c:	ldr	x1, [sp, #104]
    7b80:	ldr	x0, [sp, #112]
    7b84:	bl	1a490 <OnPrint@@Base+0x46c>
    7b88:	b	7aa8 <__asan_backtrace_open@plt+0x1078>
    7b8c:	mov	x2, x19
    7b90:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
    7b94:	add	x1, x1, #0x40
    7b98:	add	x0, sp, #0xb0
    7b9c:	bl	1a490 <OnPrint@@Base+0x46c>
    7ba0:	cmp	x20, x26
    7ba4:	b.eq	7cb4 <__asan_backtrace_open@plt+0x1284>  // b.none
    7ba8:	mov	w23, #0x0                   	// #0
    7bac:	mov	x19, #0x0                   	// #0
    7bb0:	mov	w26, #0x1                   	// #1
    7bb4:	b	7c24 <__asan_backtrace_open@plt+0x11f4>
    7bb8:	mov	x4, #0x0                   	// #0
    7bbc:	mov	x3, #0x0                   	// #0
    7bc0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7bc4:	add	x2, x2, #0x218
    7bc8:	mov	w1, #0x55                  	// #85
    7bcc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7bd0:	add	x0, x0, #0x238
    7bd4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7bd8:	mov	w2, w24
    7bdc:	mov	x1, x28
    7be0:	mov	x0, x20
    7be4:	bl	6cc4 <__asan_backtrace_open@plt+0x294>
    7be8:	mov	x19, x0
    7bec:	cbz	x0, 7cb4 <__asan_backtrace_open@plt+0x1284>
    7bf0:	tst	x20, #0x7
    7bf4:	csel	w0, w21, w26, eq  // eq = none
    7bf8:	add	w0, w0, w23
    7bfc:	ldr	x1, [x19, #24]
    7c00:	ldr	w2, [x19]
    7c04:	cmp	w2, #0x2
    7c08:	b.ne	7c44 <__asan_backtrace_open@plt+0x1214>  // b.any
    7c0c:	cmp	x1, x20
    7c10:	b.eq	7c64 <__asan_backtrace_open@plt+0x1234>  // b.none
    7c14:	add	w23, w0, #0x2
    7c18:	add	x20, x20, #0x1
    7c1c:	cmp	x25, x20
    7c20:	b.eq	7cb4 <__asan_backtrace_open@plt+0x1284>  // b.none
    7c24:	cbz	x19, 7bd8 <__asan_backtrace_open@plt+0x11a8>
    7c28:	ldr	x1, [x19, #64]
    7c2c:	ldr	w0, [x19, #40]
    7c30:	cmp	w0, #0x2
    7c34:	b.ne	7bb8 <__asan_backtrace_open@plt+0x1188>  // b.any
    7c38:	cmp	x1, x20
    7c3c:	b.ne	7bf0 <__asan_backtrace_open@plt+0x11c0>  // b.any
    7c40:	b	7bd8 <__asan_backtrace_open@plt+0x11a8>
    7c44:	mov	x4, #0x0                   	// #0
    7c48:	mov	x3, #0x0                   	// #0
    7c4c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7c50:	add	x2, x2, #0x218
    7c54:	mov	w1, #0x55                  	// #85
    7c58:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7c5c:	add	x0, x0, #0x238
    7c60:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7c64:	sub	w21, w0, #0x1
    7c68:	cbz	w0, 7c90 <__asan_backtrace_open@plt+0x1260>
    7c6c:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
    7c70:	add	x20, x20, #0xa38
    7c74:	add	x23, sp, #0xb0
    7c78:	mov	x1, x20
    7c7c:	mov	x0, x23
    7c80:	bl	1a490 <OnPrint@@Base+0x46c>
    7c84:	sub	w21, w21, #0x1
    7c88:	cmn	w21, #0x1
    7c8c:	b.ne	7c78 <__asan_backtrace_open@plt+0x1248>  // b.any
    7c90:	add	x0, sp, #0xb0
    7c94:	mov	x2, x22
    7c98:	ldr	x1, [x19, #80]
    7c9c:	mov	x19, x0
    7ca0:	bl	6de4 <__asan_backtrace_open@plt+0x3b4>
    7ca4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
    7ca8:	add	x1, x1, #0xce8
    7cac:	mov	x0, x19
    7cb0:	bl	1a490 <OnPrint@@Base+0x46c>
    7cb4:	ldr	x1, [sp, #176]
    7cb8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7cbc:	add	x0, x0, #0x288
    7cc0:	bl	1a368 <OnPrint@@Base+0x344>
    7cc4:	ldr	x1, [sp, #184]
    7cc8:	ldr	x0, [sp, #176]
    7ccc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    7cd0:	ldp	x23, x24, [sp, #32]
    7cd4:	ldp	x27, x28, [sp, #64]
    7cd8:	b	75f4 <__asan_backtrace_open@plt+0xbc4>
    7cdc:	cmp	x23, x26
    7ce0:	b.cc	7b2c <__asan_backtrace_open@plt+0x10fc>  // b.lo, b.ul, b.last
    7ce4:	mov	w0, #0x20                  	// #32
    7ce8:	str	w0, [sp, #128]
    7cec:	ldr	w0, [sp, #140]
    7cf0:	str	w0, [sp, #120]
    7cf4:	b	7aa0 <__asan_backtrace_open@plt+0x1070>
    7cf8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
    7cfc:	add	x1, x1, #0xce8
    7d00:	add	x0, sp, #0xb0
    7d04:	bl	1a490 <OnPrint@@Base+0x46c>
    7d08:	cbnz	w26, 78e0 <__asan_backtrace_open@plt+0xeb0>
    7d0c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    7d10:	add	x1, x1, #0x640
    7d14:	add	x0, sp, #0xb0
    7d18:	bl	1a490 <OnPrint@@Base+0x46c>
    7d1c:	mov	w2, w24
    7d20:	mov	x1, x28
    7d24:	mov	x0, x20
    7d28:	bl	6cc4 <__asan_backtrace_open@plt+0x294>
    7d2c:	mov	x2, x19
    7d30:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
    7d34:	add	x1, x1, #0x40
    7d38:	add	x0, sp, #0xb0
    7d3c:	bl	1a490 <OnPrint@@Base+0x46c>
    7d40:	b	7cb4 <__asan_backtrace_open@plt+0x1284>
    7d44:	str	x30, [sp, #-16]!
    7d48:	bl	c224 <__ubsan_handle_cfi_bad_type@@Base+0x504>
    7d4c:	ldr	x30, [sp], #16
    7d50:	ret
    7d54:	stp	x19, x20, [sp, #-48]!
    7d58:	stp	x21, x22, [sp, #16]
    7d5c:	str	x30, [sp, #32]
    7d60:	mov	x19, x0
    7d64:	mov	x21, x1
    7d68:	mov	x20, x2
    7d6c:	mov	w22, w3
    7d70:	bl	c224 <__ubsan_handle_cfi_bad_type@@Base+0x504>
    7d74:	add	x0, x19, #0x1
    7d78:	bl	1dac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd1c>
    7d7c:	ldp	x0, x1, [x21]
    7d80:	stp	x0, x1, [x19, #8]
    7d84:	ldr	x0, [x21, #16]
    7d88:	str	x0, [x19, #24]
    7d8c:	ldp	x2, x3, [x20]
    7d90:	stp	x2, x3, [x19, #32]
    7d94:	ldp	x2, x3, [x20, #16]
    7d98:	stp	x2, x3, [x19, #48]
    7d9c:	ldr	x1, [x20, #32]
    7da0:	str	x1, [x19, #64]
    7da4:	str	w22, [x19, #72]
    7da8:	ldp	x21, x22, [sp, #16]
    7dac:	ldr	x30, [sp, #32]
    7db0:	ldp	x19, x20, [sp], #48
    7db4:	ret
    7db8:	stp	x19, x20, [sp, #-176]!
    7dbc:	str	x30, [sp, #48]
    7dc0:	mov	x19, x0
    7dc4:	ldr	x1, [x0, #24]
    7dc8:	ldr	x0, [x0, #16]
    7dcc:	bl	7008 <__asan_backtrace_open@plt+0x5d8>
    7dd0:	ldr	w0, [x19, #72]
    7dd4:	ldp	x2, x3, [x19, #32]
    7dd8:	stp	x2, x3, [sp, #72]
    7ddc:	ldp	x2, x3, [x19, #48]
    7de0:	stp	x2, x3, [sp, #88]
    7de4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7de8:	ldr	x1, [x1, #4056]
    7dec:	ldrb	w1, [x1, #60]
    7df0:	cbz	w1, 7e3c <__asan_backtrace_open@plt+0x140c>
    7df4:	stp	x21, x22, [sp, #16]
    7df8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7dfc:	ldr	x1, [x1, #3816]
    7e00:	ldrb	w1, [x1, #16]
    7e04:	cmp	w1, #0x0
    7e08:	ldr	w20, [x19, #32]
    7e0c:	csel	w0, w0, wzr, ne  // ne = any
    7e10:	bl	6b48 <__asan_backtrace_open@plt+0x118>
    7e14:	mov	x21, x0
    7e18:	cmp	w20, #0x1
    7e1c:	b.eq	7e60 <__asan_backtrace_open@plt+0x1430>  // b.none
    7e20:	cmp	w20, #0x3
    7e24:	b.eq	7ecc <__asan_backtrace_open@plt+0x149c>  // b.none
    7e28:	bl	c170 <__ubsan_handle_cfi_bad_type@@Base+0x450>
    7e2c:	mov	x1, x0
    7e30:	mov	x0, x21
    7e34:	bl	f7f4 <__sanitizer_report_error_summary@@Base+0x1c>
    7e38:	ldp	x21, x22, [sp, #16]
    7e3c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7e40:	ldr	x0, [x0, #3816]
    7e44:	ldrb	w0, [x0]
    7e48:	cbnz	w0, 7ef0 <__asan_backtrace_open@plt+0x14c0>
    7e4c:	add	x0, x19, #0x1
    7e50:	bl	1dc18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>
    7e54:	ldr	x30, [sp, #48]
    7e58:	ldp	x19, x20, [sp], #176
    7e5c:	ret
    7e60:	ldr	x20, [sp, #80]
    7e64:	cbz	x20, 7e28 <__asan_backtrace_open@plt+0x13f8>
    7e68:	stp	x23, x24, [sp, #32]
    7e6c:	ldr	w24, [sp, #88]
    7e70:	ldr	w23, [sp, #92]
    7e74:	add	x22, sp, #0x70
    7e78:	mov	x0, x22
    7e7c:	bl	202e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3540>
    7e80:	mov	x0, x20
    7e84:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
    7e88:	str	x0, [sp, #160]
    7e8c:	str	w24, [sp, #168]
    7e90:	str	w23, [sp, #172]
    7e94:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    7e98:	add	x0, x0, #0x640
    7e9c:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
    7ea0:	str	x0, [sp, #144]
    7ea4:	bl	c170 <__ubsan_handle_cfi_bad_type@@Base+0x450>
    7ea8:	mov	x2, x0
    7eac:	mov	x1, x22
    7eb0:	mov	x0, x21
    7eb4:	bl	1ce2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
    7eb8:	mov	x0, x22
    7ebc:	bl	2030c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3564>
    7ec0:	ldp	x21, x22, [sp, #16]
    7ec4:	ldp	x23, x24, [sp, #32]
    7ec8:	b	7e3c <__asan_backtrace_open@plt+0x140c>
    7ecc:	ldr	x20, [x19, #64]
    7ed0:	add	x20, x20, #0x8
    7ed4:	bl	c170 <__ubsan_handle_cfi_bad_type@@Base+0x450>
    7ed8:	mov	x2, x0
    7edc:	mov	x1, x20
    7ee0:	mov	x0, x21
    7ee4:	bl	1ce2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
    7ee8:	ldp	x21, x22, [sp, #16]
    7eec:	b	7e3c <__asan_backtrace_open@plt+0x140c>
    7ef0:	stp	x21, x22, [sp, #16]
    7ef4:	stp	x23, x24, [sp, #32]
    7ef8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    7efc:	stp	x19, x20, [sp, #-32]!
    7f00:	str	x30, [sp, #16]
    7f04:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7f08:	ldr	x4, [x0, #3520]
    7f0c:	cbnz	x4, 7f54 <__asan_backtrace_open@plt+0x1524>
    7f10:	adrp	x20, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7f14:	add	x19, x20, #0xdc0
    7f18:	add	x19, x19, #0x40
    7f1c:	mov	w2, #0x1b                  	// #27
    7f20:	adrp	x1, 5c000 <_Unwind_Backtrace@GCC_3.3>
    7f24:	add	x1, x1, #0x380
    7f28:	mov	x0, x19
    7f2c:	bl	1f700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2958>
    7f30:	str	x19, [x20, #3520]
    7f34:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    7f38:	ldr	x0, [x0, #3816]
    7f3c:	ldr	x1, [x0, #8]
    7f40:	mov	x0, x19
    7f44:	bl	1fb90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2de8>
    7f48:	ldr	x30, [sp, #16]
    7f4c:	ldp	x19, x20, [sp], #32
    7f50:	ret
    7f54:	mov	x3, #0x0                   	// #0
    7f58:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7f5c:	add	x2, x2, #0x418
    7f60:	mov	w1, #0x18d                 	// #397
    7f64:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7f68:	add	x0, x0, #0x1e8
    7f6c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7f70:	stp	x19, x30, [sp, #-32]!
    7f74:	mov	x19, x0
    7f78:	bl	c224 <__ubsan_handle_cfi_bad_type@@Base+0x504>
    7f7c:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7f80:	ldr	x0, [x0, #3520]
    7f84:	cbz	x0, 7fa4 <__asan_backtrace_open@plt+0x1574>
    7f88:	add	x3, sp, #0x18
    7f8c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7f90:	add	x2, x2, #0x558
    7f94:	mov	x1, x19
    7f98:	bl	20008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    7f9c:	ldp	x19, x30, [sp], #32
    7fa0:	ret
    7fa4:	mov	x4, #0x0                   	// #0
    7fa8:	mov	x3, #0x0                   	// #0
    7fac:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7fb0:	add	x2, x2, #0x440
    7fb4:	mov	w1, #0x195                 	// #405
    7fb8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7fbc:	add	x0, x0, #0x1e8
    7fc0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7fc4:	stp	x19, x20, [sp, #-80]!
    7fc8:	stp	x21, x22, [sp, #16]
    7fcc:	str	x30, [sp, #32]
    7fd0:	mov	w19, w0
    7fd4:	mov	x22, x1
    7fd8:	mov	x21, x2
    7fdc:	bl	c224 <__ubsan_handle_cfi_bad_type@@Base+0x504>
    7fe0:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7fe4:	ldr	x0, [x0, #3520]
    7fe8:	cbz	x0, 800c <__asan_backtrace_open@plt+0x15dc>
    7fec:	cmp	w19, #0x19
    7ff0:	b.hi	814c <__asan_backtrace_open@plt+0x171c>  // b.pmore
    7ff4:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    7ff8:	add	x2, x2, #0x524
    7ffc:	ldrh	w1, [x2, w19, uxtw #1]
    8000:	adr	x2, 800c <__asan_backtrace_open@plt+0x15dc>
    8004:	add	x1, x2, w1, sxth #2
    8008:	br	x1
    800c:	mov	x4, #0x0                   	// #0
    8010:	mov	x3, #0x0                   	// #0
    8014:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8018:	add	x2, x2, #0x440
    801c:	mov	w1, #0x19c                 	// #412
    8020:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8024:	add	x0, x0, #0x1e8
    8028:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    802c:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8030:	add	x19, x19, #0x500
    8034:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8038:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    803c:	add	x19, x19, #0x478
    8040:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8044:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8048:	add	x19, x19, #0x488
    804c:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8050:	adrp	x19, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    8054:	add	x19, x19, #0xfa8
    8058:	b	8174 <__asan_backtrace_open@plt+0x1744>
    805c:	adrp	x19, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    8060:	add	x19, x19, #0xfc0
    8064:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8068:	adrp	x19, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    806c:	add	x19, x19, #0xfe0
    8070:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8074:	adrp	x19, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    8078:	add	x19, x19, #0xff8
    807c:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8080:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8084:	add	x19, x19, #0x10
    8088:	b	8174 <__asan_backtrace_open@plt+0x1744>
    808c:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8090:	add	x19, x19, #0x28
    8094:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8098:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    809c:	add	x19, x19, #0x50
    80a0:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80a4:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80a8:	add	x19, x19, #0x80
    80ac:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80b0:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80b4:	add	x19, x19, #0x98
    80b8:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80bc:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80c0:	add	x19, x19, #0x498
    80c4:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80c8:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80cc:	add	x19, x19, #0x4a0
    80d0:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80d4:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80d8:	add	x19, x19, #0xe0
    80dc:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80e0:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80e4:	add	x19, x19, #0x4b0
    80e8:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80ec:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80f0:	add	x19, x19, #0x100
    80f4:	b	8174 <__asan_backtrace_open@plt+0x1744>
    80f8:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    80fc:	add	x19, x19, #0x4c0
    8100:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8104:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8108:	add	x19, x19, #0x4c8
    810c:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8110:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8114:	add	x19, x19, #0x4d0
    8118:	b	8174 <__asan_backtrace_open@plt+0x1744>
    811c:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8120:	add	x19, x19, #0x4e0
    8124:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8128:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    812c:	add	x19, x19, #0x4e8
    8130:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8134:	adrp	x19, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    8138:	add	x19, x19, #0x1d0
    813c:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8140:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8144:	add	x19, x19, #0x460
    8148:	b	8174 <__asan_backtrace_open@plt+0x1744>
    814c:	mov	x4, #0x0                   	// #0
    8150:	mov	x3, #0x0                   	// #0
    8154:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8158:	add	x2, x2, #0x1c0
    815c:	mov	w1, #0x44                  	// #68
    8160:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8164:	add	x0, x0, #0x1e8
    8168:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    816c:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8170:	add	x19, x19, #0x468
    8174:	mov	x1, x19
    8178:	bl	1ff94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31ec>
    817c:	ands	w20, w0, #0xff
    8180:	b.eq	8228 <__asan_backtrace_open@plt+0x17f8>  // b.none
    8184:	str	xzr, [sp, #72]
    8188:	cbz	x21, 81ac <__asan_backtrace_open@plt+0x177c>
    818c:	add	x3, sp, #0x48
    8190:	mov	x2, x19
    8194:	mov	x1, x21
    8198:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    819c:	ldr	x0, [x0, #3520]
    81a0:	bl	20008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    81a4:	ands	w20, w0, #0xff
    81a8:	b.ne	8228 <__asan_backtrace_open@plt+0x17f8>  // b.any
    81ac:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    81b0:	str	xzr, [sp, #56]
    81b4:	add	x3, sp, #0x40
    81b8:	add	x2, sp, #0x38
    81bc:	mov	x1, x22
    81c0:	bl	213f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4650>
    81c4:	and	w0, w0, #0xff
    81c8:	cbz	w0, 81f0 <__asan_backtrace_open@plt+0x17c0>
    81cc:	ldr	x1, [sp, #56]
    81d0:	cbz	x1, 81f0 <__asan_backtrace_open@plt+0x17c0>
    81d4:	add	x3, sp, #0x48
    81d8:	mov	x2, x19
    81dc:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    81e0:	ldr	x0, [x0, #3520]
    81e4:	bl	20008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    81e8:	ands	w20, w0, #0xff
    81ec:	b.ne	8228 <__asan_backtrace_open@plt+0x17f8>  // b.any
    81f0:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    81f4:	mov	x1, x22
    81f8:	bl	21478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
    81fc:	mov	x21, x0
    8200:	add	x3, sp, #0x48
    8204:	mov	x2, x19
    8208:	ldr	x1, [x0, #40]
    820c:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    8210:	ldr	x0, [x0, #3520]
    8214:	bl	20008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    8218:	ands	w20, w0, #0xff
    821c:	b.eq	8248 <__asan_backtrace_open@plt+0x1818>  // b.none
    8220:	mov	x0, x21
    8224:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
    8228:	mov	w0, w20
    822c:	ldp	x21, x22, [sp, #16]
    8230:	ldr	x30, [sp, #32]
    8234:	ldp	x19, x20, [sp], #80
    8238:	ret
    823c:	adrp	x19, 36000 <__asan_internal_strnlen@@Base+0x28f0>
    8240:	add	x19, x19, #0xf58
    8244:	b	8174 <__asan_backtrace_open@plt+0x1744>
    8248:	add	x3, sp, #0x48
    824c:	mov	x2, x19
    8250:	ldr	x1, [x21, #56]
    8254:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    8258:	ldr	x0, [x0, #3520]
    825c:	bl	20008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    8260:	and	w20, w0, #0xff
    8264:	b	8220 <__asan_backtrace_open@plt+0x17f0>
    8268:	stp	x19, x20, [sp, #-48]!
    826c:	stp	x21, x22, [sp, #16]
    8270:	str	x30, [sp, #32]
    8274:	mov	x19, x0
    8278:	mov	x20, x1
    827c:	mov	x21, x2
    8280:	mov	x22, x3
    8284:	mov	x1, #0x10                  	// #16
    8288:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    828c:	ldr	x0, [x0, #3776]
    8290:	bl	cfac <__sancov_default_options@@Base+0x2b0>
    8294:	mov	x2, x0
    8298:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
    829c:	add	x0, x0, #0xd48
    82a0:	str	x0, [x2]
    82a4:	str	x22, [x2, #8]
    82a8:	mov	x3, x21
    82ac:	mov	x1, x20
    82b0:	mov	x0, x19
    82b4:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
    82b8:	ldp	x21, x22, [sp, #16]
    82bc:	ldr	x30, [sp, #32]
    82c0:	ldp	x19, x20, [sp], #48
    82c4:	ret

00000000000082c8 <__ubsan_default_options@@Base>:
    82c8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    82cc:	add	x0, x0, #0x640
    82d0:	ret
    82d4:	str	x30, [sp, #-16]!
    82d8:	bl	6980 <__ubsan_default_options@plt>
    82dc:	ldr	x30, [sp], #16
    82e0:	ret
    82e4:	strb	wzr, [x0]
    82e8:	strb	wzr, [x0, #1]
    82ec:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    82f0:	add	x1, x1, #0x640
    82f4:	str	x1, [x0, #8]
    82f8:	strb	wzr, [x0, #16]
    82fc:	strb	wzr, [x0, #17]
    8300:	ret
    8304:	stp	x19, x20, [sp, #-32]!
    8308:	str	x30, [sp, #16]
    830c:	mov	x20, x0
    8310:	mov	x19, x1
    8314:	mov	x3, x1
    8318:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    831c:	add	x2, x2, #0x5c0
    8320:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8324:	add	x1, x1, #0x5f8
    8328:	bl	8268 <__asan_backtrace_open@plt+0x1838>
    832c:	add	x3, x19, #0x1
    8330:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8334:	add	x2, x2, #0x608
    8338:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    833c:	add	x1, x1, #0x638
    8340:	mov	x0, x20
    8344:	bl	8268 <__asan_backtrace_open@plt+0x1838>
    8348:	mov	x1, #0x10                  	// #16
    834c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    8350:	ldr	x0, [x0, #3776]
    8354:	bl	cfac <__sancov_default_options@@Base+0x2b0>
    8358:	mov	x2, x0
    835c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
    8360:	add	x0, x0, #0xd60
    8364:	str	x0, [x2]
    8368:	add	x0, x19, #0x8
    836c:	str	x0, [x2, #8]
    8370:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8374:	add	x3, x3, #0x650
    8378:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    837c:	add	x1, x1, #0x668
    8380:	mov	x0, x20
    8384:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
    8388:	add	x3, x19, #0x10
    838c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8390:	add	x2, x2, #0x678
    8394:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8398:	add	x1, x1, #0x6c0
    839c:	mov	x0, x20
    83a0:	bl	8268 <__asan_backtrace_open@plt+0x1838>
    83a4:	add	x3, x19, #0x11
    83a8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    83ac:	add	x2, x2, #0x6d8
    83b0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    83b4:	add	x1, x1, #0x750
    83b8:	mov	x0, x20
    83bc:	bl	8268 <__asan_backtrace_open@plt+0x1838>
    83c0:	ldr	x30, [sp, #16]
    83c4:	ldp	x19, x20, [sp], #32
    83c8:	ret
    83cc:	stp	x19, x20, [sp, #-304]!
    83d0:	stp	x21, x30, [sp, #16]
    83d4:	adrp	x19, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    83d8:	ldr	x19, [x19, #4056]
    83dc:	mov	x0, x19
    83e0:	bl	13044 <__sanitizer_set_report_fd@@Base+0x200>
    83e4:	add	x20, sp, #0x20
    83e8:	mov	x1, x19
    83ec:	mov	x0, x20
    83f0:	bl	131b4 <__sanitizer_set_report_fd@@Base+0x370>
    83f4:	strb	wzr, [sp, #92]
    83f8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    83fc:	add	x0, x0, #0x770
    8400:	bl	68c0 <getenv@plt>
    8404:	str	x0, [sp, #40]
    8408:	mov	x1, x20
    840c:	mov	x0, x19
    8410:	bl	131b4 <__sanitizer_set_report_fd@@Base+0x370>
    8414:	adrp	x21, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    8418:	add	x21, x21, #0xe50
    841c:	mov	x0, x21
    8420:	bl	82e4 <__ubsan_default_options@@Base+0x1c>
    8424:	add	x20, sp, #0x110
    8428:	mov	x0, x20
    842c:	bl	14508 <__sanitizer_set_report_fd@@Base+0x16c4>
    8430:	mov	x1, x19
    8434:	mov	x0, x20
    8438:	bl	133dc <__sanitizer_set_report_fd@@Base+0x598>
    843c:	mov	x1, x21
    8440:	mov	x0, x20
    8444:	bl	8304 <__ubsan_default_options@@Base+0x3c>
    8448:	bl	6980 <__ubsan_default_options@plt>
    844c:	mov	x1, x0
    8450:	mov	x0, x20
    8454:	bl	14394 <__sanitizer_set_report_fd@@Base+0x1550>
    8458:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    845c:	add	x0, x0, #0x788
    8460:	bl	68c0 <getenv@plt>
    8464:	mov	x1, x0
    8468:	mov	x0, x20
    846c:	bl	14394 <__sanitizer_set_report_fd@@Base+0x1550>
    8470:	mov	x0, x19
    8474:	bl	13c34 <__sanitizer_set_report_fd@@Base+0xdf0>
    8478:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    847c:	ldr	x0, [x0, #3896]
    8480:	ldr	w0, [x0]
    8484:	cbnz	w0, 84a4 <__ubsan_default_options@@Base+0x1dc>
    8488:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    848c:	ldr	x0, [x0, #4056]
    8490:	ldrb	w0, [x0, #122]
    8494:	cbnz	w0, 84ac <__ubsan_default_options@@Base+0x1e4>
    8498:	ldp	x21, x30, [sp, #16]
    849c:	ldp	x19, x20, [sp], #304
    84a0:	ret
    84a4:	bl	13ec0 <__sanitizer_set_report_fd@@Base+0x107c>
    84a8:	b	8488 <__ubsan_default_options@@Base+0x1c0>
    84ac:	add	x0, sp, #0x110
    84b0:	bl	13f94 <__sanitizer_set_report_fd@@Base+0x1150>
    84b4:	b	8498 <__ubsan_default_options@@Base+0x1d0>
    84b8:	ldr	x0, [x0, #8]
    84bc:	str	x1, [x0]
    84c0:	mov	w0, #0x1                   	// #1
    84c4:	ret
    84c8:	stp	x19, x20, [sp, #-32]!
    84cc:	str	x30, [sp, #16]
    84d0:	mov	x19, x1
    84d4:	ldr	x20, [x0, #8]
    84d8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    84dc:	add	x1, x1, #0x568
    84e0:	mov	x0, x19
    84e4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    84e8:	cbnz	w0, 8500 <__ubsan_default_options@@Base+0x238>
    84ec:	strb	wzr, [x20]
    84f0:	mov	w0, #0x1                   	// #1
    84f4:	ldr	x30, [sp, #16]
    84f8:	ldp	x19, x20, [sp], #32
    84fc:	ret
    8500:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8504:	add	x1, x1, #0x570
    8508:	mov	x0, x19
    850c:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    8510:	cbz	w0, 84ec <__ubsan_default_options@@Base+0x224>
    8514:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8518:	add	x1, x1, #0x578
    851c:	mov	x0, x19
    8520:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    8524:	cbz	w0, 84ec <__ubsan_default_options@@Base+0x224>
    8528:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    852c:	add	x1, x1, #0xdc0
    8530:	mov	x0, x19
    8534:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    8538:	cbnz	w0, 8548 <__ubsan_default_options@@Base+0x280>
    853c:	mov	w0, #0x1                   	// #1
    8540:	strb	w0, [x20]
    8544:	b	84f0 <__ubsan_default_options@@Base+0x228>
    8548:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    854c:	add	x1, x1, #0x580
    8550:	mov	x0, x19
    8554:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    8558:	cbz	w0, 853c <__ubsan_default_options@@Base+0x274>
    855c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8560:	add	x1, x1, #0x588
    8564:	mov	x0, x19
    8568:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    856c:	cbz	w0, 853c <__ubsan_default_options@@Base+0x274>
    8570:	mov	x1, x19
    8574:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8578:	add	x0, x0, #0x590
    857c:	bl	1a368 <OnPrint@@Base+0x344>
    8580:	mov	w0, #0x0                   	// #0
    8584:	b	84f4 <__ubsan_default_options@@Base+0x22c>
    8588:	sub	sp, sp, #0x270
    858c:	stp	x19, x20, [sp]
    8590:	stp	x21, x30, [sp, #16]
    8594:	mov	x19, x0
    8598:	ldr	x3, [x0]
    859c:	ldr	w2, [x0, #8]
    85a0:	ldr	w0, [x0, #12]
    85a4:	mov	w21, #0x1                   	// #1
    85a8:	str	w21, [sp, #112]
    85ac:	str	x3, [sp, #120]
    85b0:	str	w2, [sp, #128]
    85b4:	str	w0, [sp, #132]
    85b8:	ldp	x2, x3, [x1]
    85bc:	stp	x2, x3, [sp, #80]
    85c0:	ldr	x0, [x1, #16]
    85c4:	str	x0, [sp, #96]
    85c8:	ldp	x0, x1, [sp, #112]
    85cc:	stp	x0, x1, [sp, #32]
    85d0:	ldp	x0, x1, [sp, #128]
    85d4:	stp	x0, x1, [sp, #48]
    85d8:	ldr	x0, [sp, #144]
    85dc:	str	x0, [sp, #64]
    85e0:	add	x20, sp, #0x220
    85e4:	mov	w3, #0xf                   	// #15
    85e8:	add	x2, sp, #0x20
    85ec:	add	x1, sp, #0x50
    85f0:	mov	x0, x20
    85f4:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    85f8:	ldr	x2, [x19]
    85fc:	ldr	w1, [x19, #8]
    8600:	ldr	w0, [x19, #12]
    8604:	str	w21, [sp, #112]
    8608:	str	x2, [sp, #120]
    860c:	str	w1, [sp, #128]
    8610:	str	w0, [sp, #132]
    8614:	str	wzr, [sp, #152]
    8618:	mov	w0, #0xf                   	// #15
    861c:	str	w0, [sp, #156]
    8620:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8624:	add	x0, x0, #0x798
    8628:	str	x0, [sp, #160]
    862c:	str	wzr, [sp, #432]
    8630:	str	wzr, [sp, #440]
    8634:	str	xzr, [sp, #448]
    8638:	str	wzr, [sp, #456]
    863c:	str	wzr, [sp, #460]
    8640:	str	wzr, [sp, #480]
    8644:	str	xzr, [sp, #488]
    8648:	str	wzr, [sp, #496]
    864c:	str	wzr, [sp, #500]
    8650:	str	xzr, [sp, #520]
    8654:	str	wzr, [sp, #528]
    8658:	add	x0, sp, #0x70
    865c:	bl	7270 <__asan_backtrace_open@plt+0x840>
    8660:	mov	x0, x20
    8664:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    8668:	ldp	x19, x20, [sp]
    866c:	ldp	x21, x30, [sp, #16]
    8670:	add	sp, sp, #0x270
    8674:	ret
    8678:	sub	sp, sp, #0x270
    867c:	stp	x19, x20, [sp]
    8680:	stp	x21, x30, [sp, #16]
    8684:	mov	x19, x0
    8688:	ldr	x3, [x0]
    868c:	ldr	w2, [x0, #8]
    8690:	ldr	w0, [x0, #12]
    8694:	mov	w21, #0x1                   	// #1
    8698:	str	w21, [sp, #112]
    869c:	str	x3, [sp, #120]
    86a0:	str	w2, [sp, #128]
    86a4:	str	w0, [sp, #132]
    86a8:	ldp	x2, x3, [x1]
    86ac:	stp	x2, x3, [sp, #80]
    86b0:	ldr	x0, [x1, #16]
    86b4:	str	x0, [sp, #96]
    86b8:	ldp	x0, x1, [sp, #112]
    86bc:	stp	x0, x1, [sp, #32]
    86c0:	ldp	x0, x1, [sp, #128]
    86c4:	stp	x0, x1, [sp, #48]
    86c8:	ldr	x0, [sp, #144]
    86cc:	str	x0, [sp, #64]
    86d0:	add	x20, sp, #0x220
    86d4:	mov	w3, #0x10                  	// #16
    86d8:	add	x2, sp, #0x20
    86dc:	add	x1, sp, #0x50
    86e0:	mov	x0, x20
    86e4:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    86e8:	ldr	x2, [x19]
    86ec:	ldr	w1, [x19, #8]
    86f0:	ldr	w0, [x19, #12]
    86f4:	str	w21, [sp, #112]
    86f8:	str	x2, [sp, #120]
    86fc:	str	w1, [sp, #128]
    8700:	str	w0, [sp, #132]
    8704:	str	wzr, [sp, #152]
    8708:	mov	w0, #0x10                  	// #16
    870c:	str	w0, [sp, #156]
    8710:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8714:	add	x0, x0, #0x7c8
    8718:	str	x0, [sp, #160]
    871c:	str	wzr, [sp, #432]
    8720:	str	wzr, [sp, #440]
    8724:	str	xzr, [sp, #448]
    8728:	str	wzr, [sp, #456]
    872c:	str	wzr, [sp, #460]
    8730:	str	wzr, [sp, #480]
    8734:	str	xzr, [sp, #488]
    8738:	str	wzr, [sp, #496]
    873c:	str	wzr, [sp, #500]
    8740:	str	xzr, [sp, #520]
    8744:	str	wzr, [sp, #528]
    8748:	add	x0, sp, #0x70
    874c:	bl	7270 <__asan_backtrace_open@plt+0x840>
    8750:	mov	x0, x20
    8754:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    8758:	ldp	x19, x20, [sp]
    875c:	ldp	x21, x30, [sp, #16]
    8760:	add	sp, sp, #0x270
    8764:	ret
    8768:	mov	x4, x2
    876c:	ldrb	w2, [x2]
    8770:	cbnz	w2, 87a8 <__ubsan_default_options@@Base+0x4e0>
    8774:	lsr	x1, x1, #32
    8778:	mov	w2, #0x1                   	// #1
    877c:	cmn	w1, #0x1
    8780:	b.eq	87ac <__ubsan_default_options@@Base+0x4e4>  // b.none
    8784:	str	x30, [sp, #-16]!
    8788:	mov	x2, x0
    878c:	ldr	x1, [x4, #8]
    8790:	mov	w0, w3
    8794:	bl	7fc4 <__asan_backtrace_open@plt+0x1594>
    8798:	and	w2, w0, #0xff
    879c:	mov	w0, w2
    87a0:	ldr	x30, [sp], #16
    87a4:	ret
    87a8:	mov	w2, #0x0                   	// #0
    87ac:	mov	w0, w2
    87b0:	ret
    87b4:	sub	sp, sp, #0x2f0
    87b8:	stp	x19, x20, [sp]
    87bc:	stp	x21, x22, [sp, #16]
    87c0:	stp	x23, x24, [sp, #32]
    87c4:	stp	x25, x26, [sp, #48]
    87c8:	str	x30, [sp, #80]
    87cc:	mov	x19, x0
    87d0:	mov	x22, x1
    87d4:	mov	x20, x2
    87d8:	add	x0, x0, #0xc
    87dc:	mov	w1, #0xffffffff            	// #-1
    87e0:	ldxr	w24, [x0]
    87e4:	stxr	w2, w1, [x0]
    87e8:	cbnz	w2, 87e0 <__ubsan_default_options@@Base+0x518>
    87ec:	dmb	ish
    87f0:	ldr	x26, [x19]
    87f4:	ldr	w25, [x19, #8]
    87f8:	ldrb	w0, [x19, #24]
    87fc:	mov	x23, #0x1                   	// #1
    8800:	lsl	x23, x23, x0
    8804:	mov	w21, #0x1                   	// #1
    8808:	cbz	x22, 881c <__ubsan_default_options@@Base+0x554>
    880c:	sub	x0, x23, #0x1
    8810:	tst	x0, x22
    8814:	cset	w21, eq  // eq = none
    8818:	add	w21, w21, #0x3
    881c:	mov	x1, #0x0                   	// #0
    8820:	bfxil	x1, x25, #0, #32
    8824:	bfi	x1, x24, #32, #32
    8828:	ldp	x2, x3, [x20]
    882c:	stp	x2, x3, [sp, #160]
    8830:	ldr	x0, [x20, #16]
    8834:	str	x0, [sp, #176]
    8838:	mov	w3, w21
    883c:	add	x2, sp, #0xa0
    8840:	mov	x0, x26
    8844:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    8848:	and	w0, w0, #0xff
    884c:	cbnz	w0, 8a44 <__ubsan_default_options@@Base+0x77c>
    8850:	stp	x27, x28, [sp, #64]
    8854:	ldr	x28, [x19]
    8858:	mov	w27, #0x1                   	// #1
    885c:	str	xzr, [sp, #96]
    8860:	cbz	x28, 88f0 <__ubsan_default_options@@Base+0x628>
    8864:	str	w27, [sp, #712]
    8868:	str	x26, [sp, #720]
    886c:	str	w25, [sp, #728]
    8870:	str	w24, [sp, #732]
    8874:	ldp	x0, x1, [x20]
    8878:	stp	x0, x1, [sp, #160]
    887c:	ldr	x0, [x20, #16]
    8880:	str	x0, [sp, #176]
    8884:	add	x0, sp, #0x210
    8888:	ldp	x0, x1, [x0, #184]
    888c:	stp	x0, x1, [sp, #112]
    8890:	add	x0, sp, #0x210
    8894:	ldp	x0, x1, [x0, #200]
    8898:	stp	x0, x1, [sp, #128]
    889c:	ldr	x20, [sp, #104]
    88a0:	str	x20, [sp, #144]
    88a4:	mov	w3, w21
    88a8:	add	x2, sp, #0x70
    88ac:	add	x1, sp, #0xa0
    88b0:	add	x0, sp, #0x278
    88b4:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    88b8:	cmp	w21, #0x3
    88bc:	b.eq	8a60 <__ubsan_default_options@@Base+0x798>  // b.none
    88c0:	cmp	w21, #0x4
    88c4:	b.eq	8b0c <__ubsan_default_options@@Base+0x844>  // b.none
    88c8:	cmp	w21, #0x1
    88cc:	b.eq	893c <__ubsan_default_options@@Base+0x674>  // b.none
    88d0:	mov	x4, #0x0                   	// #0
    88d4:	mov	x3, #0x0                   	// #0
    88d8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    88dc:	add	x2, x2, #0x8e0
    88e0:	mov	w1, #0x58                  	// #88
    88e4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    88e8:	add	x0, x0, #0x910
    88ec:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    88f0:	ldr	x0, [x20, #8]
    88f4:	cbz	x0, 891c <__ubsan_default_options@@Base+0x654>
    88f8:	sub	x0, x0, #0x4
    88fc:	bl	7074 <__asan_backtrace_open@plt+0x644>
    8900:	str	x0, [sp, #96]
    8904:	str	x0, [sp, #104]
    8908:	mov	x26, x28
    890c:	mov	w24, #0x0                   	// #0
    8910:	mov	w25, #0x0                   	// #0
    8914:	mov	w27, #0x3                   	// #3
    8918:	b	8864 <__ubsan_default_options@@Base+0x59c>
    891c:	mov	x4, #0x0                   	// #0
    8920:	mov	x3, #0x0                   	// #0
    8924:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8928:	add	x2, x2, #0x820
    892c:	mov	w1, #0x2b                  	// #43
    8930:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8934:	add	x0, x0, #0x238
    8938:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    893c:	str	w27, [sp, #192]
    8940:	str	x26, [sp, #200]
    8944:	str	w25, [sp, #208]
    8948:	str	w24, [sp, #212]
    894c:	str	x20, [sp, #224]
    8950:	str	wzr, [sp, #232]
    8954:	mov	w1, #0x1                   	// #1
    8958:	str	w1, [sp, #236]
    895c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8960:	add	x0, x0, #0x838
    8964:	str	x0, [sp, #240]
    8968:	str	wzr, [sp, #520]
    896c:	str	xzr, [sp, #528]
    8970:	str	wzr, [sp, #536]
    8974:	str	wzr, [sp, #540]
    8978:	str	wzr, [sp, #560]
    897c:	str	xzr, [sp, #568]
    8980:	str	wzr, [sp, #576]
    8984:	str	wzr, [sp, #580]
    8988:	str	xzr, [sp, #600]
    898c:	str	wzr, [sp, #608]
    8990:	ldrb	w2, [x19, #25]
    8994:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    8998:	add	x0, x0, #0x458
    899c:	ldr	x0, [x0, x2, lsl #3]
    89a0:	str	w1, [sp, #512]
    89a4:	str	wzr, [sp, #256]
    89a8:	str	x0, [sp, #272]
    89ac:	add	x0, sp, #0xc0
    89b0:	ldr	x1, [x19, #16]
    89b4:	mov	x19, x0
    89b8:	bl	7094 <__asan_backtrace_open@plt+0x664>
    89bc:	mov	x0, x19
    89c0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    89c4:	cbz	x22, 8a2c <__ubsan_default_options@@Base+0x764>
    89c8:	mov	w0, #0x2                   	// #2
    89cc:	str	w0, [sp, #192]
    89d0:	str	xzr, [sp, #200]
    89d4:	str	wzr, [sp, #208]
    89d8:	str	wzr, [sp, #212]
    89dc:	str	x22, [sp, #216]
    89e0:	mov	w0, #0x1                   	// #1
    89e4:	str	w0, [sp, #232]
    89e8:	str	w21, [sp, #236]
    89ec:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    89f0:	add	x0, x0, #0x948
    89f4:	str	x0, [sp, #240]
    89f8:	str	wzr, [sp, #512]
    89fc:	str	wzr, [sp, #520]
    8a00:	str	xzr, [sp, #528]
    8a04:	str	wzr, [sp, #536]
    8a08:	str	wzr, [sp, #540]
    8a0c:	str	wzr, [sp, #560]
    8a10:	str	xzr, [sp, #568]
    8a14:	str	wzr, [sp, #576]
    8a18:	str	wzr, [sp, #580]
    8a1c:	str	xzr, [sp, #600]
    8a20:	str	wzr, [sp, #608]
    8a24:	add	x0, sp, #0xc0
    8a28:	bl	7270 <__asan_backtrace_open@plt+0x840>
    8a2c:	add	x0, sp, #0x278
    8a30:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    8a34:	ldr	x0, [sp, #96]
    8a38:	cbz	x0, 8bac <__ubsan_default_options@@Base+0x8e4>
    8a3c:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
    8a40:	ldp	x27, x28, [sp, #64]
    8a44:	ldp	x19, x20, [sp]
    8a48:	ldp	x21, x22, [sp, #16]
    8a4c:	ldp	x23, x24, [sp, #32]
    8a50:	ldp	x25, x26, [sp, #48]
    8a54:	ldr	x30, [sp, #80]
    8a58:	add	sp, sp, #0x2f0
    8a5c:	ret
    8a60:	str	w27, [sp, #192]
    8a64:	str	x26, [sp, #200]
    8a68:	str	w25, [sp, #208]
    8a6c:	str	w24, [sp, #212]
    8a70:	ldr	x0, [sp, #104]
    8a74:	str	x0, [sp, #224]
    8a78:	str	wzr, [sp, #232]
    8a7c:	mov	w1, #0x3                   	// #3
    8a80:	str	w1, [sp, #236]
    8a84:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8a88:	add	x0, x0, #0x858
    8a8c:	str	x0, [sp, #240]
    8a90:	str	wzr, [sp, #520]
    8a94:	str	xzr, [sp, #528]
    8a98:	str	wzr, [sp, #536]
    8a9c:	str	wzr, [sp, #540]
    8aa0:	str	wzr, [sp, #560]
    8aa4:	str	xzr, [sp, #568]
    8aa8:	str	wzr, [sp, #576]
    8aac:	str	wzr, [sp, #580]
    8ab0:	str	xzr, [sp, #600]
    8ab4:	str	wzr, [sp, #608]
    8ab8:	ldrb	w2, [x19, #25]
    8abc:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    8ac0:	add	x0, x0, #0x458
    8ac4:	ldr	x0, [x0, x2, lsl #3]
    8ac8:	str	wzr, [sp, #256]
    8acc:	str	x0, [sp, #272]
    8ad0:	mov	w0, #0x5                   	// #5
    8ad4:	str	w0, [sp, #288]
    8ad8:	str	x22, [sp, #304]
    8adc:	str	w1, [sp, #512]
    8ae0:	mov	w0, #0x2                   	// #2
    8ae4:	str	w0, [sp, #320]
    8ae8:	str	x23, [sp, #336]
    8aec:	str	xzr, [sp, #344]
    8af0:	add	x0, sp, #0xc0
    8af4:	ldr	x1, [x19, #16]
    8af8:	mov	x19, x0
    8afc:	bl	7094 <__asan_backtrace_open@plt+0x664>
    8b00:	mov	x0, x19
    8b04:	bl	7270 <__asan_backtrace_open@plt+0x840>
    8b08:	b	89c4 <__ubsan_default_options@@Base+0x6fc>
    8b0c:	str	w27, [sp, #192]
    8b10:	str	x26, [sp, #200]
    8b14:	str	w25, [sp, #208]
    8b18:	str	w24, [sp, #212]
    8b1c:	ldr	x0, [sp, #104]
    8b20:	str	x0, [sp, #224]
    8b24:	str	wzr, [sp, #232]
    8b28:	mov	w0, #0x4                   	// #4
    8b2c:	str	w0, [sp, #236]
    8b30:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8b34:	add	x0, x0, #0x8a0
    8b38:	str	x0, [sp, #240]
    8b3c:	str	wzr, [sp, #520]
    8b40:	str	xzr, [sp, #528]
    8b44:	str	wzr, [sp, #536]
    8b48:	str	wzr, [sp, #540]
    8b4c:	str	wzr, [sp, #560]
    8b50:	str	xzr, [sp, #568]
    8b54:	str	wzr, [sp, #576]
    8b58:	str	wzr, [sp, #580]
    8b5c:	str	xzr, [sp, #600]
    8b60:	str	wzr, [sp, #608]
    8b64:	ldrb	w1, [x19, #25]
    8b68:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    8b6c:	add	x0, x0, #0x458
    8b70:	ldr	x0, [x0, x1, lsl #3]
    8b74:	str	wzr, [sp, #256]
    8b78:	str	x0, [sp, #272]
    8b7c:	mov	w0, #0x2                   	// #2
    8b80:	str	w0, [sp, #512]
    8b84:	mov	w0, #0x5                   	// #5
    8b88:	str	w0, [sp, #288]
    8b8c:	str	x22, [sp, #304]
    8b90:	add	x0, sp, #0xc0
    8b94:	ldr	x1, [x19, #16]
    8b98:	mov	x19, x0
    8b9c:	bl	7094 <__asan_backtrace_open@plt+0x664>
    8ba0:	mov	x0, x19
    8ba4:	bl	7270 <__asan_backtrace_open@plt+0x840>
    8ba8:	b	89c4 <__ubsan_default_options@@Base+0x6fc>
    8bac:	ldp	x27, x28, [sp, #64]
    8bb0:	b	8a44 <__ubsan_default_options@@Base+0x77c>
    8bb4:	sub	sp, sp, #0x2d0
    8bb8:	stp	x19, x20, [sp]
    8bbc:	stp	x21, x22, [sp, #16]
    8bc0:	stp	x23, x24, [sp, #32]
    8bc4:	stp	x25, x26, [sp, #48]
    8bc8:	stp	x27, x28, [sp, #64]
    8bcc:	str	x30, [sp, #80]
    8bd0:	mov	x19, x0
    8bd4:	mov	x21, x1
    8bd8:	mov	x22, x2
    8bdc:	stp	x3, x4, [sp, #176]
    8be0:	mov	x20, x5
    8be4:	add	x0, x0, #0xc
    8be8:	mov	w1, #0xffffffff            	// #-1
    8bec:	ldxr	w23, [x0]
    8bf0:	stxr	w2, w1, [x0]
    8bf4:	cbnz	w2, 8bec <__ubsan_default_options@@Base+0x924>
    8bf8:	dmb	ish
    8bfc:	ldr	x24, [x19]
    8c00:	ldr	w25, [x19, #8]
    8c04:	ldr	x0, [x19, #16]
    8c08:	ldrh	w1, [x0]
    8c0c:	cbnz	w1, 8c18 <__ubsan_default_options@@Base+0x950>
    8c10:	ldrh	w0, [x0, #2]
    8c14:	tbnz	w0, #0, 8dc0 <__ubsan_default_options@@Base+0xaf8>
    8c18:	mov	x1, #0x0                   	// #0
    8c1c:	bfxil	x1, x25, #0, #32
    8c20:	bfi	x1, x23, #32, #32
    8c24:	ldp	x2, x3, [x20]
    8c28:	stp	x2, x3, [sp, #96]
    8c2c:	ldr	x0, [x20, #16]
    8c30:	str	x0, [sp, #112]
    8c34:	mov	w3, #0x6                   	// #6
    8c38:	add	x2, sp, #0x60
    8c3c:	mov	x0, x24
    8c40:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    8c44:	and	w0, w0, #0xff
    8c48:	cbnz	w0, 8d80 <__ubsan_default_options@@Base+0xab8>
    8c4c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    8c50:	ldr	x0, [x0, #3816]
    8c54:	ldrb	w26, [x0, #17]
    8c58:	cbnz	w26, 8d80 <__ubsan_default_options@@Base+0xab8>
    8c5c:	mov	w28, #0x6                   	// #6
    8c60:	mov	w27, #0x1                   	// #1
    8c64:	str	w27, [sp, #192]
    8c68:	str	x24, [sp, #200]
    8c6c:	str	w25, [sp, #208]
    8c70:	str	w23, [sp, #212]
    8c74:	ldp	x0, x1, [x20]
    8c78:	stp	x0, x1, [sp, #144]
    8c7c:	ldr	x0, [x20, #16]
    8c80:	str	x0, [sp, #160]
    8c84:	ldp	x0, x1, [sp, #192]
    8c88:	stp	x0, x1, [sp, #96]
    8c8c:	ldp	x0, x1, [sp, #208]
    8c90:	stp	x0, x1, [sp, #112]
    8c94:	ldr	x0, [sp, #224]
    8c98:	str	x0, [sp, #128]
    8c9c:	mov	w3, w28
    8ca0:	add	x2, sp, #0x60
    8ca4:	add	x1, sp, #0x90
    8ca8:	add	x0, sp, #0x270
    8cac:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    8cb0:	str	w27, [sp, #192]
    8cb4:	str	x24, [sp, #200]
    8cb8:	str	w25, [sp, #208]
    8cbc:	str	w23, [sp, #212]
    8cc0:	str	wzr, [sp, #232]
    8cc4:	str	w28, [sp, #236]
    8cc8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8ccc:	add	x0, x0, #0x978
    8cd0:	str	x0, [sp, #240]
    8cd4:	str	wzr, [sp, #520]
    8cd8:	str	xzr, [sp, #528]
    8cdc:	str	wzr, [sp, #536]
    8ce0:	str	wzr, [sp, #540]
    8ce4:	str	wzr, [sp, #560]
    8ce8:	str	xzr, [sp, #568]
    8cec:	str	wzr, [sp, #576]
    8cf0:	str	wzr, [sp, #580]
    8cf4:	str	xzr, [sp, #600]
    8cf8:	str	wzr, [sp, #608]
    8cfc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8d00:	add	x1, x0, #0x968
    8d04:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8d08:	add	x0, x0, #0x960
    8d0c:	cmp	w26, #0x0
    8d10:	csel	x0, x0, x1, ne  // ne = any
    8d14:	str	w27, [sp, #512]
    8d18:	str	wzr, [sp, #256]
    8d1c:	str	x0, [sp, #272]
    8d20:	ldr	x0, [x19, #16]
    8d24:	str	x0, [sp, #704]
    8d28:	str	x21, [sp, #712]
    8d2c:	add	x1, sp, #0x2c0
    8d30:	add	x0, sp, #0xc0
    8d34:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    8d38:	ldr	w1, [x0, #320]
    8d3c:	cmp	w1, #0x8
    8d40:	b.eq	8da0 <__ubsan_default_options@@Base+0xad8>  // b.none
    8d44:	add	w2, w1, #0x1
    8d48:	str	w2, [x0, #320]
    8d4c:	ubfiz	x1, x1, #5, #32
    8d50:	add	x1, x1, #0x40
    8d54:	add	x2, x0, x1
    8d58:	str	wzr, [x0, x1]
    8d5c:	str	x22, [x2, #16]
    8d60:	add	x1, sp, #0xb0
    8d64:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    8d68:	ldr	x1, [x19, #16]
    8d6c:	bl	7094 <__asan_backtrace_open@plt+0x664>
    8d70:	add	x0, sp, #0xc0
    8d74:	bl	7270 <__asan_backtrace_open@plt+0x840>
    8d78:	add	x0, sp, #0x270
    8d7c:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    8d80:	ldp	x19, x20, [sp]
    8d84:	ldp	x21, x22, [sp, #16]
    8d88:	ldp	x23, x24, [sp, #32]
    8d8c:	ldp	x25, x26, [sp, #48]
    8d90:	ldp	x27, x28, [sp, #64]
    8d94:	ldr	x30, [sp, #80]
    8d98:	add	sp, sp, #0x2d0
    8d9c:	ret
    8da0:	mov	x4, #0x0                   	// #0
    8da4:	mov	x3, #0x0                   	// #0
    8da8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8dac:	add	x2, x2, #0x2b8
    8db0:	mov	w1, #0xbf                  	// #191
    8db4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8db8:	add	x0, x0, #0x238
    8dbc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8dc0:	mov	x1, #0x0                   	// #0
    8dc4:	bfxil	x1, x25, #0, #32
    8dc8:	bfi	x1, x23, #32, #32
    8dcc:	ldp	x2, x3, [x20]
    8dd0:	stp	x2, x3, [sp, #96]
    8dd4:	ldr	x0, [x20, #16]
    8dd8:	str	x0, [sp, #112]
    8ddc:	mov	w3, #0x5                   	// #5
    8de0:	add	x2, sp, #0x60
    8de4:	mov	x0, x24
    8de8:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    8dec:	and	w0, w0, #0xff
    8df0:	cbnz	w0, 8d80 <__ubsan_default_options@@Base+0xab8>
    8df4:	mov	w28, #0x5                   	// #5
    8df8:	mov	w26, #0x1                   	// #1
    8dfc:	b	8c60 <__ubsan_default_options@@Base+0x998>
    8e00:	sub	sp, sp, #0x2b0
    8e04:	stp	x19, x20, [sp]
    8e08:	stp	x21, x22, [sp, #16]
    8e0c:	stp	x23, x24, [sp, #32]
    8e10:	str	x30, [sp, #56]
    8e14:	mov	x19, x0
    8e18:	mov	x21, x1
    8e1c:	mov	x20, x2
    8e20:	add	x0, x0, #0xc
    8e24:	mov	w1, #0xffffffff            	// #-1
    8e28:	ldxr	w23, [x0]
    8e2c:	stxr	w2, w1, [x0]
    8e30:	cbnz	w2, 8e28 <__ubsan_default_options@@Base+0xb60>
    8e34:	dmb	ish
    8e38:	ldr	x22, [x19]
    8e3c:	ldr	w24, [x19, #8]
    8e40:	ldr	x0, [x19, #16]
    8e44:	ldrh	w1, [x0]
    8e48:	cbnz	w1, 8f68 <__ubsan_default_options@@Base+0xca0>
    8e4c:	ldrh	w0, [x0, #2]
    8e50:	tbz	w0, #0, 8f68 <__ubsan_default_options@@Base+0xca0>
    8e54:	str	x25, [sp, #48]
    8e58:	mov	x1, #0x0                   	// #0
    8e5c:	bfxil	x1, x24, #0, #32
    8e60:	bfi	x1, x23, #32, #32
    8e64:	ldp	x2, x3, [x20]
    8e68:	stp	x2, x3, [sp, #112]
    8e6c:	ldr	x0, [x20, #16]
    8e70:	str	x0, [sp, #128]
    8e74:	mov	w3, #0x5                   	// #5
    8e78:	add	x2, sp, #0x70
    8e7c:	mov	x0, x22
    8e80:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    8e84:	and	w0, w0, #0xff
    8e88:	cbnz	w0, 8f60 <__ubsan_default_options@@Base+0xc98>
    8e8c:	mov	w25, #0x1                   	// #1
    8e90:	str	w25, [sp, #144]
    8e94:	str	x22, [sp, #152]
    8e98:	str	w24, [sp, #160]
    8e9c:	str	w23, [sp, #164]
    8ea0:	ldp	x0, x1, [x20]
    8ea4:	stp	x0, x1, [sp, #64]
    8ea8:	ldr	x0, [x20, #16]
    8eac:	str	x0, [sp, #80]
    8eb0:	add	x20, sp, #0x90
    8eb4:	ldp	x0, x1, [sp, #144]
    8eb8:	stp	x0, x1, [sp, #96]
    8ebc:	ldp	x0, x1, [sp, #160]
    8ec0:	stp	x0, x1, [sp, #112]
    8ec4:	ldr	x0, [sp, #176]
    8ec8:	str	x0, [sp, #128]
    8ecc:	mov	w3, #0x5                   	// #5
    8ed0:	add	x2, sp, #0x60
    8ed4:	add	x1, sp, #0x40
    8ed8:	add	x0, sp, #0x240
    8edc:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    8ee0:	str	w25, [sp, #144]
    8ee4:	str	x22, [sp, #152]
    8ee8:	str	w24, [sp, #160]
    8eec:	str	w23, [sp, #164]
    8ef0:	str	wzr, [sp, #184]
    8ef4:	mov	w0, #0x5                   	// #5
    8ef8:	str	w0, [sp, #188]
    8efc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    8f00:	add	x0, x0, #0x9e8
    8f04:	str	x0, [sp, #192]
    8f08:	str	wzr, [sp, #464]
    8f0c:	str	wzr, [sp, #472]
    8f10:	str	xzr, [sp, #480]
    8f14:	str	wzr, [sp, #488]
    8f18:	str	wzr, [sp, #492]
    8f1c:	str	wzr, [sp, #512]
    8f20:	str	xzr, [sp, #520]
    8f24:	str	wzr, [sp, #528]
    8f28:	str	wzr, [sp, #532]
    8f2c:	str	xzr, [sp, #552]
    8f30:	str	wzr, [sp, #560]
    8f34:	ldr	x0, [x19, #16]
    8f38:	str	x0, [sp, #656]
    8f3c:	str	x21, [sp, #664]
    8f40:	add	x1, sp, #0x290
    8f44:	mov	x0, x20
    8f48:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    8f4c:	ldr	x1, [x19, #16]
    8f50:	bl	7094 <__asan_backtrace_open@plt+0x664>
    8f54:	mov	x0, x20
    8f58:	bl	7270 <__asan_backtrace_open@plt+0x840>
    8f5c:	b	9080 <__ubsan_default_options@@Base+0xdb8>
    8f60:	ldr	x25, [sp, #48]
    8f64:	b	908c <__ubsan_default_options@@Base+0xdc4>
    8f68:	mov	x1, #0x0                   	// #0
    8f6c:	bfxil	x1, x24, #0, #32
    8f70:	bfi	x1, x23, #32, #32
    8f74:	ldp	x2, x3, [x20]
    8f78:	stp	x2, x3, [sp, #64]
    8f7c:	ldr	x0, [x20, #16]
    8f80:	str	x0, [sp, #80]
    8f84:	mov	w3, #0x6                   	// #6
    8f88:	add	x2, sp, #0x40
    8f8c:	mov	x0, x22
    8f90:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    8f94:	and	w0, w0, #0xff
    8f98:	cbnz	w0, 908c <__ubsan_default_options@@Base+0xdc4>
    8f9c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    8fa0:	ldr	x0, [x0, #3816]
    8fa4:	ldrb	w0, [x0, #17]
    8fa8:	cbnz	w0, 908c <__ubsan_default_options@@Base+0xdc4>
    8fac:	str	x25, [sp, #48]
    8fb0:	mov	w25, #0x1                   	// #1
    8fb4:	str	w25, [sp, #144]
    8fb8:	str	x22, [sp, #152]
    8fbc:	str	w24, [sp, #160]
    8fc0:	str	w23, [sp, #164]
    8fc4:	ldp	x0, x1, [x20]
    8fc8:	stp	x0, x1, [sp, #112]
    8fcc:	ldr	x0, [x20, #16]
    8fd0:	str	x0, [sp, #128]
    8fd4:	add	x20, sp, #0x90
    8fd8:	ldp	x0, x1, [sp, #144]
    8fdc:	stp	x0, x1, [sp, #64]
    8fe0:	ldp	x0, x1, [sp, #160]
    8fe4:	stp	x0, x1, [sp, #80]
    8fe8:	ldr	x0, [sp, #176]
    8fec:	str	x0, [sp, #96]
    8ff0:	mov	w3, #0x6                   	// #6
    8ff4:	add	x2, sp, #0x40
    8ff8:	add	x1, sp, #0x70
    8ffc:	add	x0, sp, #0x240
    9000:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    9004:	str	w25, [sp, #144]
    9008:	str	x22, [sp, #152]
    900c:	str	w24, [sp, #160]
    9010:	str	w23, [sp, #164]
    9014:	str	wzr, [sp, #184]
    9018:	mov	w0, #0x6                   	// #6
    901c:	str	w0, [sp, #188]
    9020:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9024:	add	x0, x0, #0x9b8
    9028:	str	x0, [sp, #192]
    902c:	str	wzr, [sp, #464]
    9030:	str	wzr, [sp, #472]
    9034:	str	xzr, [sp, #480]
    9038:	str	wzr, [sp, #488]
    903c:	str	wzr, [sp, #492]
    9040:	str	wzr, [sp, #512]
    9044:	str	xzr, [sp, #520]
    9048:	str	wzr, [sp, #528]
    904c:	str	wzr, [sp, #532]
    9050:	str	xzr, [sp, #552]
    9054:	str	wzr, [sp, #560]
    9058:	ldr	x0, [x19, #16]
    905c:	str	x0, [sp, #672]
    9060:	str	x21, [sp, #680]
    9064:	add	x1, sp, #0x2a0
    9068:	mov	x0, x20
    906c:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9070:	ldr	x1, [x19, #16]
    9074:	bl	7094 <__asan_backtrace_open@plt+0x664>
    9078:	mov	x0, x20
    907c:	bl	7270 <__asan_backtrace_open@plt+0x840>
    9080:	add	x0, sp, #0x240
    9084:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    9088:	ldr	x25, [sp, #48]
    908c:	ldp	x19, x20, [sp]
    9090:	ldp	x21, x22, [sp, #16]
    9094:	ldp	x23, x24, [sp, #32]
    9098:	ldr	x30, [sp, #56]
    909c:	add	sp, sp, #0x2b0
    90a0:	ret
    90a4:	sub	sp, sp, #0x2b0
    90a8:	stp	x19, x20, [sp]
    90ac:	stp	x21, x22, [sp, #16]
    90b0:	stp	x23, x24, [sp, #32]
    90b4:	str	x30, [sp, #48]
    90b8:	mov	x19, x0
    90bc:	mov	x20, x3
    90c0:	add	x0, x0, #0xc
    90c4:	mov	w3, #0xffffffff            	// #-1
    90c8:	ldxr	w22, [x0]
    90cc:	stxr	w4, w3, [x0]
    90d0:	cbnz	w4, 90c8 <__ubsan_default_options@@Base+0xe00>
    90d4:	dmb	ish
    90d8:	ldr	x24, [x19]
    90dc:	ldr	w23, [x19, #8]
    90e0:	ldr	x0, [x19, #16]
    90e4:	str	x0, [sp, #672]
    90e8:	str	x1, [sp, #680]
    90ec:	str	x0, [sp, #656]
    90f0:	str	x2, [sp, #664]
    90f4:	ldrh	w1, [x0]
    90f8:	mov	w21, #0x8                   	// #8
    90fc:	cbnz	w1, 9128 <__ubsan_default_options@@Base+0xe60>
    9100:	ldrh	w0, [x0, #2]
    9104:	mov	w21, #0x7                   	// #7
    9108:	tbz	w0, #0, 9128 <__ubsan_default_options@@Base+0xe60>
    910c:	add	x0, sp, #0x290
    9110:	bl	ca48 <__ubsan_get_current_report_data@@Base+0x530>
    9114:	cmn	x0, #0x1
    9118:	b.ne	9174 <__ubsan_default_options@@Base+0xeac>  // b.any
    911c:	mov	w21, #0x5                   	// #5
    9120:	cmn	x1, #0x1
    9124:	b.ne	9174 <__ubsan_default_options@@Base+0xeac>  // b.any
    9128:	mov	x1, #0x0                   	// #0
    912c:	bfxil	x1, x23, #0, #32
    9130:	bfi	x1, x22, #32, #32
    9134:	ldp	x2, x3, [x20]
    9138:	stp	x2, x3, [sp, #112]
    913c:	ldr	x0, [x20, #16]
    9140:	str	x0, [sp, #128]
    9144:	mov	w3, w21
    9148:	add	x2, sp, #0x70
    914c:	mov	x0, x24
    9150:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    9154:	and	w0, w0, #0xff
    9158:	cbz	w0, 918c <__ubsan_default_options@@Base+0xec4>
    915c:	ldp	x19, x20, [sp]
    9160:	ldp	x21, x22, [sp, #16]
    9164:	ldp	x23, x24, [sp, #32]
    9168:	ldr	x30, [sp, #48]
    916c:	add	sp, sp, #0x2b0
    9170:	ret
    9174:	ldr	x0, [x19, #16]
    9178:	ldrh	w0, [x0]
    917c:	cmp	w0, #0x0
    9180:	cset	w21, ne  // ne = any
    9184:	add	w21, w21, #0x7
    9188:	b	9128 <__ubsan_default_options@@Base+0xe60>
    918c:	mov	w0, #0x1                   	// #1
    9190:	str	w0, [sp, #144]
    9194:	str	x24, [sp, #152]
    9198:	str	w23, [sp, #160]
    919c:	str	w22, [sp, #164]
    91a0:	ldp	x0, x1, [x20]
    91a4:	stp	x0, x1, [sp, #112]
    91a8:	ldr	x0, [x20, #16]
    91ac:	str	x0, [sp, #128]
    91b0:	ldp	x0, x1, [sp, #144]
    91b4:	stp	x0, x1, [sp, #64]
    91b8:	ldp	x0, x1, [sp, #160]
    91bc:	stp	x0, x1, [sp, #80]
    91c0:	ldr	x0, [sp, #176]
    91c4:	str	x0, [sp, #96]
    91c8:	mov	w3, w21
    91cc:	add	x2, sp, #0x40
    91d0:	add	x1, sp, #0x70
    91d4:	add	x0, sp, #0x240
    91d8:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    91dc:	cmp	w21, #0x5
    91e0:	b.eq	924c <__ubsan_default_options@@Base+0xf84>  // b.none
    91e4:	mov	w0, #0x1                   	// #1
    91e8:	str	w0, [sp, #144]
    91ec:	str	x24, [sp, #152]
    91f0:	str	w23, [sp, #160]
    91f4:	str	w22, [sp, #164]
    91f8:	str	wzr, [sp, #184]
    91fc:	str	w21, [sp, #188]
    9200:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9204:	add	x0, x0, #0xa90
    9208:	str	x0, [sp, #192]
    920c:	str	wzr, [sp, #464]
    9210:	str	wzr, [sp, #472]
    9214:	str	xzr, [sp, #480]
    9218:	str	wzr, [sp, #488]
    921c:	str	wzr, [sp, #492]
    9220:	str	wzr, [sp, #512]
    9224:	str	xzr, [sp, #520]
    9228:	str	wzr, [sp, #528]
    922c:	str	wzr, [sp, #532]
    9230:	str	xzr, [sp, #552]
    9234:	str	wzr, [sp, #560]
    9238:	add	x0, sp, #0x90
    923c:	bl	7270 <__asan_backtrace_open@plt+0x840>
    9240:	add	x0, sp, #0x240
    9244:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    9248:	b	915c <__ubsan_default_options@@Base+0xe94>
    924c:	mov	w0, #0x1                   	// #1
    9250:	str	w0, [sp, #144]
    9254:	str	x24, [sp, #152]
    9258:	str	w23, [sp, #160]
    925c:	str	w22, [sp, #164]
    9260:	str	wzr, [sp, #184]
    9264:	mov	w0, #0x5                   	// #5
    9268:	str	w0, [sp, #188]
    926c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9270:	add	x0, x0, #0xa58
    9274:	str	x0, [sp, #192]
    9278:	str	wzr, [sp, #464]
    927c:	str	wzr, [sp, #472]
    9280:	str	xzr, [sp, #480]
    9284:	str	wzr, [sp, #488]
    9288:	str	wzr, [sp, #492]
    928c:	str	wzr, [sp, #512]
    9290:	str	xzr, [sp, #520]
    9294:	str	wzr, [sp, #528]
    9298:	str	wzr, [sp, #532]
    929c:	str	xzr, [sp, #552]
    92a0:	str	wzr, [sp, #560]
    92a4:	add	x20, sp, #0x90
    92a8:	add	x1, sp, #0x2a0
    92ac:	mov	x0, x20
    92b0:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    92b4:	ldr	x1, [x19, #16]
    92b8:	bl	7094 <__asan_backtrace_open@plt+0x664>
    92bc:	mov	x0, x20
    92c0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    92c4:	b	9240 <__ubsan_default_options@@Base+0xf78>
    92c8:	sub	sp, sp, #0x2b0
    92cc:	stp	x19, x20, [sp]
    92d0:	stp	x21, x22, [sp, #16]
    92d4:	stp	x23, x24, [sp, #32]
    92d8:	str	x30, [sp, #48]
    92dc:	mov	x19, x0
    92e0:	mov	x20, x3
    92e4:	add	x0, x0, #0xc
    92e8:	mov	w3, #0xffffffff            	// #-1
    92ec:	ldxr	w21, [x0]
    92f0:	stxr	w4, w3, [x0]
    92f4:	cbnz	w4, 92ec <__ubsan_default_options@@Base+0x1024>
    92f8:	dmb	ish
    92fc:	ldr	x23, [x19]
    9300:	ldr	w22, [x19, #8]
    9304:	ldr	x0, [x19, #16]
    9308:	str	x0, [sp, #672]
    930c:	str	x1, [sp, #680]
    9310:	ldr	x0, [x19, #24]
    9314:	str	x0, [sp, #656]
    9318:	str	x2, [sp, #664]
    931c:	ldrh	w1, [x0]
    9320:	cbnz	w1, 9388 <__ubsan_default_options@@Base+0x10c0>
    9324:	ldrh	w0, [x0, #2]
    9328:	tbz	w0, #0, 9388 <__ubsan_default_options@@Base+0x10c0>
    932c:	add	x0, sp, #0x290
    9330:	bl	ca48 <__ubsan_get_current_report_data@@Base+0x530>
    9334:	mov	w24, #0xd                   	// #13
    9338:	tbz	x1, #63, 9388 <__ubsan_default_options@@Base+0x10c0>
    933c:	mov	x1, #0x0                   	// #0
    9340:	bfxil	x1, x22, #0, #32
    9344:	bfi	x1, x21, #32, #32
    9348:	ldp	x2, x3, [x20]
    934c:	stp	x2, x3, [sp, #112]
    9350:	ldr	x0, [x20, #16]
    9354:	str	x0, [sp, #128]
    9358:	mov	w3, w24
    935c:	add	x2, sp, #0x70
    9360:	mov	x0, x23
    9364:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    9368:	and	w0, w0, #0xff
    936c:	cbz	w0, 93e4 <__ubsan_default_options@@Base+0x111c>
    9370:	ldp	x19, x20, [sp]
    9374:	ldp	x21, x22, [sp, #16]
    9378:	ldp	x23, x24, [sp, #32]
    937c:	ldr	x30, [sp, #48]
    9380:	add	sp, sp, #0x2b0
    9384:	ret
    9388:	add	x0, sp, #0x290
    938c:	bl	cbc0 <__ubsan_get_current_report_data@@Base+0x6a8>
    9390:	ldr	x2, [x19, #16]
    9394:	ldrh	w3, [x2]
    9398:	cbnz	w3, 93c4 <__ubsan_default_options@@Base+0x10fc>
    939c:	ldrh	w2, [x2, #2]
    93a0:	asr	w2, w2, #1
    93a4:	mov	w3, #0x1                   	// #1
    93a8:	lsl	w2, w3, w2
    93ac:	cbnz	x1, 93bc <__ubsan_default_options@@Base+0x10f4>
    93b0:	mov	w24, #0xc                   	// #12
    93b4:	cmp	x2, x0
    93b8:	b.hi	933c <__ubsan_default_options@@Base+0x1074>  // b.pmore
    93bc:	mov	w24, #0xd                   	// #13
    93c0:	b	933c <__ubsan_default_options@@Base+0x1074>
    93c4:	mov	x4, #0x0                   	// #0
    93c8:	mov	x3, #0x0                   	// #0
    93cc:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    93d0:	add	x2, x2, #0xaa8
    93d4:	mov	w1, #0x7b                  	// #123
    93d8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    93dc:	add	x0, x0, #0xac8
    93e0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    93e4:	mov	w0, #0x1                   	// #1
    93e8:	str	w0, [sp, #144]
    93ec:	str	x23, [sp, #152]
    93f0:	str	w22, [sp, #160]
    93f4:	str	w21, [sp, #164]
    93f8:	ldp	x0, x1, [x20]
    93fc:	stp	x0, x1, [sp, #112]
    9400:	ldr	x0, [x20, #16]
    9404:	str	x0, [sp, #128]
    9408:	ldp	x0, x1, [sp, #144]
    940c:	stp	x0, x1, [sp, #64]
    9410:	ldp	x0, x1, [sp, #160]
    9414:	stp	x0, x1, [sp, #80]
    9418:	ldr	x0, [sp, #176]
    941c:	str	x0, [sp, #96]
    9420:	mov	w3, w24
    9424:	add	x2, sp, #0x40
    9428:	add	x1, sp, #0x70
    942c:	add	x0, sp, #0x240
    9430:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    9434:	cmp	w24, #0xd
    9438:	b.eq	94d0 <__ubsan_default_options@@Base+0x1208>  // b.none
    943c:	ldr	x0, [sp, #672]
    9440:	ldrh	w1, [x0]
    9444:	cbnz	w1, 9668 <__ubsan_default_options@@Base+0x13a0>
    9448:	ldrh	w0, [x0, #2]
    944c:	tbz	w0, #0, 9668 <__ubsan_default_options@@Base+0x13a0>
    9450:	add	x0, sp, #0x2a0
    9454:	bl	ca48 <__ubsan_get_current_report_data@@Base+0x530>
    9458:	tbz	x1, #63, 9668 <__ubsan_default_options@@Base+0x13a0>
    945c:	mov	w0, #0x1                   	// #1
    9460:	str	w0, [sp, #144]
    9464:	str	x23, [sp, #152]
    9468:	str	w22, [sp, #160]
    946c:	str	w21, [sp, #164]
    9470:	str	wzr, [sp, #184]
    9474:	mov	w0, #0xc                   	// #12
    9478:	str	w0, [sp, #188]
    947c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9480:	add	x0, x0, #0xb50
    9484:	str	x0, [sp, #192]
    9488:	str	wzr, [sp, #464]
    948c:	str	wzr, [sp, #472]
    9490:	str	xzr, [sp, #480]
    9494:	str	wzr, [sp, #488]
    9498:	str	wzr, [sp, #492]
    949c:	str	wzr, [sp, #512]
    94a0:	str	xzr, [sp, #520]
    94a4:	str	wzr, [sp, #528]
    94a8:	str	wzr, [sp, #532]
    94ac:	str	xzr, [sp, #552]
    94b0:	str	wzr, [sp, #560]
    94b4:	add	x19, sp, #0x90
    94b8:	add	x1, sp, #0x2a0
    94bc:	mov	x0, x19
    94c0:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    94c4:	mov	x0, x19
    94c8:	bl	7270 <__asan_backtrace_open@plt+0x840>
    94cc:	b	96e8 <__ubsan_default_options@@Base+0x1420>
    94d0:	ldr	x0, [sp, #656]
    94d4:	ldrh	w1, [x0]
    94d8:	cbnz	w1, 9564 <__ubsan_default_options@@Base+0x129c>
    94dc:	ldrh	w0, [x0, #2]
    94e0:	tbz	w0, #0, 9564 <__ubsan_default_options@@Base+0x129c>
    94e4:	add	x0, sp, #0x290
    94e8:	bl	ca48 <__ubsan_get_current_report_data@@Base+0x530>
    94ec:	tbz	x1, #63, 9564 <__ubsan_default_options@@Base+0x129c>
    94f0:	mov	w0, #0x1                   	// #1
    94f4:	str	w0, [sp, #144]
    94f8:	str	x23, [sp, #152]
    94fc:	str	w22, [sp, #160]
    9500:	str	w21, [sp, #164]
    9504:	str	wzr, [sp, #184]
    9508:	mov	w0, #0xd                   	// #13
    950c:	str	w0, [sp, #188]
    9510:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9514:	add	x0, x0, #0xaf8
    9518:	str	x0, [sp, #192]
    951c:	str	wzr, [sp, #464]
    9520:	str	wzr, [sp, #472]
    9524:	str	xzr, [sp, #480]
    9528:	str	wzr, [sp, #488]
    952c:	str	wzr, [sp, #492]
    9530:	str	wzr, [sp, #512]
    9534:	str	xzr, [sp, #520]
    9538:	str	wzr, [sp, #528]
    953c:	str	wzr, [sp, #532]
    9540:	str	xzr, [sp, #552]
    9544:	str	wzr, [sp, #560]
    9548:	add	x19, sp, #0x90
    954c:	add	x1, sp, #0x290
    9550:	mov	x0, x19
    9554:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9558:	mov	x0, x19
    955c:	bl	7270 <__asan_backtrace_open@plt+0x840>
    9560:	b	96e8 <__ubsan_default_options@@Base+0x1420>
    9564:	mov	w0, #0x1                   	// #1
    9568:	str	w0, [sp, #144]
    956c:	str	x23, [sp, #152]
    9570:	str	w22, [sp, #160]
    9574:	str	w21, [sp, #164]
    9578:	str	wzr, [sp, #184]
    957c:	mov	w0, #0xd                   	// #13
    9580:	str	w0, [sp, #188]
    9584:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9588:	add	x0, x0, #0xb18
    958c:	str	x0, [sp, #192]
    9590:	str	wzr, [sp, #464]
    9594:	str	wzr, [sp, #472]
    9598:	str	xzr, [sp, #480]
    959c:	str	wzr, [sp, #488]
    95a0:	str	wzr, [sp, #492]
    95a4:	str	wzr, [sp, #512]
    95a8:	str	xzr, [sp, #520]
    95ac:	str	wzr, [sp, #528]
    95b0:	str	wzr, [sp, #532]
    95b4:	str	xzr, [sp, #552]
    95b8:	str	wzr, [sp, #560]
    95bc:	add	x1, sp, #0x290
    95c0:	add	x0, sp, #0x90
    95c4:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    95c8:	ldr	x1, [x19, #16]
    95cc:	ldrh	w2, [x1]
    95d0:	cbnz	w2, 9628 <__ubsan_default_options@@Base+0x1360>
    95d4:	ldrh	w1, [x1, #2]
    95d8:	asr	w1, w1, #1
    95dc:	mov	w2, #0x1                   	// #1
    95e0:	lsl	w2, w2, w1
    95e4:	ldr	w1, [x0, #320]
    95e8:	cmp	w1, #0x8
    95ec:	b.eq	9648 <__ubsan_default_options@@Base+0x1380>  // b.none
    95f0:	add	w3, w1, #0x1
    95f4:	str	w3, [x0, #320]
    95f8:	ubfiz	x1, x1, #5, #32
    95fc:	add	x1, x1, #0x40
    9600:	add	x3, x0, x1
    9604:	mov	w4, #0x2                   	// #2
    9608:	str	w4, [x0, x1]
    960c:	str	x2, [x3, #16]
    9610:	str	xzr, [x3, #24]
    9614:	ldr	x1, [x19, #16]
    9618:	bl	7094 <__asan_backtrace_open@plt+0x664>
    961c:	add	x0, sp, #0x90
    9620:	bl	7270 <__asan_backtrace_open@plt+0x840>
    9624:	b	96e8 <__ubsan_default_options@@Base+0x1420>
    9628:	mov	x4, #0x0                   	// #0
    962c:	mov	x3, #0x0                   	// #0
    9630:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9634:	add	x2, x2, #0xaa8
    9638:	mov	w1, #0x7b                  	// #123
    963c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9640:	add	x0, x0, #0xac8
    9644:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    9648:	mov	x4, #0x0                   	// #0
    964c:	mov	x3, #0x0                   	// #0
    9650:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9654:	add	x2, x2, #0x2b8
    9658:	mov	w1, #0xbf                  	// #191
    965c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9660:	add	x0, x0, #0x238
    9664:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    9668:	mov	w0, #0x1                   	// #1
    966c:	str	w0, [sp, #144]
    9670:	str	x23, [sp, #152]
    9674:	str	w22, [sp, #160]
    9678:	str	w21, [sp, #164]
    967c:	str	wzr, [sp, #184]
    9680:	mov	w0, #0xc                   	// #12
    9684:	str	w0, [sp, #188]
    9688:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    968c:	add	x0, x0, #0xb70
    9690:	str	x0, [sp, #192]
    9694:	str	wzr, [sp, #464]
    9698:	str	wzr, [sp, #472]
    969c:	str	xzr, [sp, #480]
    96a0:	str	wzr, [sp, #488]
    96a4:	str	wzr, [sp, #492]
    96a8:	str	wzr, [sp, #512]
    96ac:	str	xzr, [sp, #520]
    96b0:	str	wzr, [sp, #528]
    96b4:	str	wzr, [sp, #532]
    96b8:	str	xzr, [sp, #552]
    96bc:	str	wzr, [sp, #560]
    96c0:	add	x20, sp, #0x90
    96c4:	add	x1, sp, #0x2a0
    96c8:	mov	x0, x20
    96cc:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    96d0:	add	x1, sp, #0x290
    96d4:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    96d8:	ldr	x1, [x19, #16]
    96dc:	bl	7094 <__asan_backtrace_open@plt+0x664>
    96e0:	mov	x0, x20
    96e4:	bl	7270 <__asan_backtrace_open@plt+0x840>
    96e8:	add	x0, sp, #0x240
    96ec:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    96f0:	b	9370 <__ubsan_default_options@@Base+0x10a8>
    96f4:	sub	sp, sp, #0x2b0
    96f8:	stp	x19, x20, [sp]
    96fc:	stp	x21, x22, [sp, #16]
    9700:	stp	x23, x24, [sp, #32]
    9704:	str	x30, [sp, #64]
    9708:	mov	x19, x0
    970c:	mov	x21, x1
    9710:	mov	x20, x2
    9714:	add	x0, x0, #0xc
    9718:	mov	w1, #0xffffffff            	// #-1
    971c:	ldxr	w22, [x0]
    9720:	stxr	w2, w1, [x0]
    9724:	cbnz	w2, 971c <__ubsan_default_options@@Base+0x1454>
    9728:	dmb	ish
    972c:	ldr	x24, [x19]
    9730:	ldr	w23, [x19, #8]
    9734:	mov	x1, #0x0                   	// #0
    9738:	bfxil	x1, x23, #0, #32
    973c:	bfi	x1, x22, #32, #32
    9740:	ldp	x2, x3, [x20]
    9744:	stp	x2, x3, [sp, #128]
    9748:	ldr	x0, [x20, #16]
    974c:	str	x0, [sp, #144]
    9750:	mov	w3, #0xe                   	// #14
    9754:	add	x2, sp, #0x80
    9758:	mov	x0, x24
    975c:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    9760:	and	w0, w0, #0xff
    9764:	cbz	w0, 9780 <__ubsan_default_options@@Base+0x14b8>
    9768:	ldp	x19, x20, [sp]
    976c:	ldp	x21, x22, [sp, #16]
    9770:	ldp	x23, x24, [sp, #32]
    9774:	ldr	x30, [sp, #64]
    9778:	add	sp, sp, #0x2b0
    977c:	ret
    9780:	stp	x25, x26, [sp, #48]
    9784:	mov	w26, #0x1                   	// #1
    9788:	str	w26, [sp, #160]
    978c:	str	x24, [sp, #168]
    9790:	str	w23, [sp, #176]
    9794:	str	w22, [sp, #180]
    9798:	ldp	x0, x1, [x20]
    979c:	stp	x0, x1, [sp, #128]
    97a0:	ldr	x0, [x20, #16]
    97a4:	str	x0, [sp, #144]
    97a8:	add	x25, sp, #0xa0
    97ac:	ldp	x0, x1, [sp, #160]
    97b0:	stp	x0, x1, [sp, #80]
    97b4:	ldp	x0, x1, [sp, #176]
    97b8:	stp	x0, x1, [sp, #96]
    97bc:	ldr	x0, [sp, #192]
    97c0:	str	x0, [sp, #112]
    97c4:	add	x20, sp, #0x260
    97c8:	mov	w3, #0xe                   	// #14
    97cc:	add	x2, sp, #0x50
    97d0:	add	x1, sp, #0x80
    97d4:	mov	x0, x20
    97d8:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    97dc:	ldr	x0, [x19, #24]
    97e0:	str	x0, [sp, #592]
    97e4:	str	x21, [sp, #600]
    97e8:	str	w26, [sp, #160]
    97ec:	str	x24, [sp, #168]
    97f0:	str	w23, [sp, #176]
    97f4:	str	w22, [sp, #180]
    97f8:	str	wzr, [sp, #200]
    97fc:	mov	w0, #0xe                   	// #14
    9800:	str	w0, [sp, #204]
    9804:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9808:	add	x0, x0, #0xbb0
    980c:	str	x0, [sp, #208]
    9810:	str	wzr, [sp, #480]
    9814:	str	wzr, [sp, #488]
    9818:	str	xzr, [sp, #496]
    981c:	str	wzr, [sp, #504]
    9820:	str	wzr, [sp, #508]
    9824:	str	wzr, [sp, #528]
    9828:	str	xzr, [sp, #536]
    982c:	str	wzr, [sp, #544]
    9830:	str	wzr, [sp, #548]
    9834:	str	xzr, [sp, #568]
    9838:	str	wzr, [sp, #576]
    983c:	add	x1, sp, #0x250
    9840:	mov	x0, x25
    9844:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9848:	ldr	x1, [x19, #16]
    984c:	bl	7094 <__asan_backtrace_open@plt+0x664>
    9850:	mov	x0, x25
    9854:	bl	7270 <__asan_backtrace_open@plt+0x840>
    9858:	mov	x0, x20
    985c:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    9860:	ldp	x25, x26, [sp, #48]
    9864:	b	9768 <__ubsan_default_options@@Base+0x14a0>
    9868:	sub	sp, sp, #0x2b0
    986c:	stp	x19, x20, [sp]
    9870:	stp	x21, x22, [sp, #16]
    9874:	stp	x23, x24, [sp, #32]
    9878:	str	x30, [sp, #64]
    987c:	mov	x19, x0
    9880:	mov	x21, x1
    9884:	mov	x20, x2
    9888:	add	x0, x0, #0xc
    988c:	mov	w1, #0xffffffff            	// #-1
    9890:	ldxr	w22, [x0]
    9894:	stxr	w2, w1, [x0]
    9898:	cbnz	w2, 9890 <__ubsan_default_options@@Base+0x15c8>
    989c:	dmb	ish
    98a0:	ldr	x24, [x19]
    98a4:	ldr	w23, [x19, #8]
    98a8:	mov	x1, #0x0                   	// #0
    98ac:	bfxil	x1, x23, #0, #32
    98b0:	bfi	x1, x22, #32, #32
    98b4:	ldp	x2, x3, [x20]
    98b8:	stp	x2, x3, [sp, #128]
    98bc:	ldr	x0, [x20, #16]
    98c0:	str	x0, [sp, #144]
    98c4:	mov	w3, #0x11                  	// #17
    98c8:	add	x2, sp, #0x80
    98cc:	mov	x0, x24
    98d0:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    98d4:	and	w0, w0, #0xff
    98d8:	cbz	w0, 98f4 <__ubsan_default_options@@Base+0x162c>
    98dc:	ldp	x19, x20, [sp]
    98e0:	ldp	x21, x22, [sp, #16]
    98e4:	ldp	x23, x24, [sp, #32]
    98e8:	ldr	x30, [sp, #64]
    98ec:	add	sp, sp, #0x2b0
    98f0:	ret
    98f4:	stp	x25, x26, [sp, #48]
    98f8:	mov	w26, #0x1                   	// #1
    98fc:	str	w26, [sp, #160]
    9900:	str	x24, [sp, #168]
    9904:	str	w23, [sp, #176]
    9908:	str	w22, [sp, #180]
    990c:	ldp	x0, x1, [x20]
    9910:	stp	x0, x1, [sp, #128]
    9914:	ldr	x0, [x20, #16]
    9918:	str	x0, [sp, #144]
    991c:	add	x25, sp, #0xa0
    9920:	ldp	x0, x1, [sp, #160]
    9924:	stp	x0, x1, [sp, #80]
    9928:	ldp	x0, x1, [sp, #176]
    992c:	stp	x0, x1, [sp, #96]
    9930:	ldr	x0, [sp, #192]
    9934:	str	x0, [sp, #112]
    9938:	add	x20, sp, #0x250
    993c:	mov	w3, #0x11                  	// #17
    9940:	add	x2, sp, #0x50
    9944:	add	x1, sp, #0x80
    9948:	mov	x0, x20
    994c:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    9950:	str	w26, [sp, #160]
    9954:	str	x24, [sp, #168]
    9958:	str	w23, [sp, #176]
    995c:	str	w22, [sp, #180]
    9960:	str	wzr, [sp, #200]
    9964:	mov	w0, #0x11                  	// #17
    9968:	str	w0, [sp, #204]
    996c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9970:	add	x0, x0, #0xbd8
    9974:	str	x0, [sp, #208]
    9978:	str	wzr, [sp, #480]
    997c:	str	wzr, [sp, #488]
    9980:	str	xzr, [sp, #496]
    9984:	str	wzr, [sp, #504]
    9988:	str	wzr, [sp, #508]
    998c:	str	wzr, [sp, #528]
    9990:	str	xzr, [sp, #536]
    9994:	str	wzr, [sp, #544]
    9998:	str	wzr, [sp, #548]
    999c:	str	xzr, [sp, #568]
    99a0:	str	wzr, [sp, #576]
    99a4:	ldr	x0, [x19, #16]
    99a8:	str	x0, [sp, #672]
    99ac:	str	x21, [sp, #680]
    99b0:	add	x1, sp, #0x2a0
    99b4:	mov	x0, x25
    99b8:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    99bc:	mov	x0, x25
    99c0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    99c4:	mov	x0, x20
    99c8:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    99cc:	ldp	x25, x26, [sp, #48]
    99d0:	b	98dc <__ubsan_default_options@@Base+0x1614>
    99d4:	sub	sp, sp, #0x2f0
    99d8:	stp	x19, x20, [sp]
    99dc:	stp	x21, x22, [sp, #16]
    99e0:	stp	x23, x24, [sp, #32]
    99e4:	stp	x25, x26, [sp, #48]
    99e8:	stp	x27, x28, [sp, #64]
    99ec:	str	x30, [sp, #80]
    99f0:	mov	x19, x0
    99f4:	mov	x21, x1
    99f8:	mov	x20, x2
    99fc:	mov	x2, #0x8                   	// #8
    9a00:	mov	x1, x0
    9a04:	add	x0, sp, #0xb0
    9a08:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    9a0c:	ldr	x0, [sp, #176]
    9a10:	ldrb	w1, [x0]
    9a14:	ldrb	w0, [x0, #1]
    9a18:	add	w2, w1, w0
    9a1c:	cmp	w1, #0xff
    9a20:	mov	w1, #0xff                  	// #255
    9a24:	ccmp	w0, w1, #0x4, ne  // ne = any
    9a28:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    9a2c:	b.hi	9b90 <__ubsan_default_options@@Base+0x18c8>  // b.pmore
    9a30:	ldr	x0, [x20, #8]
    9a34:	cbz	x0, 9b70 <__ubsan_default_options@@Base+0x18a8>
    9a38:	sub	x0, x0, #0x4
    9a3c:	bl	7074 <__asan_backtrace_open@plt+0x644>
    9a40:	mov	x22, x0
    9a44:	ldr	x26, [x19]
    9a48:	ldr	x28, [x19, #8]
    9a4c:	mov	x27, x0
    9a50:	mov	w23, #0x0                   	// #0
    9a54:	mov	w24, #0x0                   	// #0
    9a58:	mov	x25, #0x0                   	// #0
    9a5c:	mov	w19, #0x3                   	// #3
    9a60:	str	w19, [sp, #696]
    9a64:	str	x25, [sp, #704]
    9a68:	str	w24, [sp, #712]
    9a6c:	str	w23, [sp, #716]
    9a70:	ldp	x0, x1, [x20]
    9a74:	stp	x0, x1, [sp, #144]
    9a78:	ldr	x0, [x20, #16]
    9a7c:	str	x0, [sp, #160]
    9a80:	add	x0, sp, #0x200
    9a84:	ldp	x0, x1, [x0, #184]
    9a88:	stp	x0, x1, [sp, #96]
    9a8c:	add	x0, sp, #0x200
    9a90:	ldp	x0, x1, [x0, #200]
    9a94:	stp	x0, x1, [sp, #112]
    9a98:	str	x27, [sp, #128]
    9a9c:	add	x20, sp, #0x268
    9aa0:	mov	w3, #0x12                  	// #18
    9aa4:	add	x2, sp, #0x60
    9aa8:	add	x1, sp, #0x90
    9aac:	mov	x0, x20
    9ab0:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    9ab4:	str	w19, [sp, #176]
    9ab8:	str	x25, [sp, #184]
    9abc:	str	w24, [sp, #192]
    9ac0:	str	w23, [sp, #196]
    9ac4:	str	x27, [sp, #208]
    9ac8:	str	wzr, [sp, #216]
    9acc:	mov	w0, #0x12                  	// #18
    9ad0:	str	w0, [sp, #220]
    9ad4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9ad8:	add	x0, x0, #0xc18
    9adc:	str	x0, [sp, #224]
    9ae0:	str	wzr, [sp, #496]
    9ae4:	str	wzr, [sp, #504]
    9ae8:	str	xzr, [sp, #512]
    9aec:	str	wzr, [sp, #520]
    9af0:	str	wzr, [sp, #524]
    9af4:	str	wzr, [sp, #544]
    9af8:	str	xzr, [sp, #552]
    9afc:	str	wzr, [sp, #560]
    9b00:	str	wzr, [sp, #564]
    9b04:	str	xzr, [sp, #584]
    9b08:	str	wzr, [sp, #592]
    9b0c:	str	x26, [sp, #736]
    9b10:	str	x21, [sp, #744]
    9b14:	add	x19, sp, #0xb0
    9b18:	add	x1, sp, #0x2e0
    9b1c:	mov	x0, x19
    9b20:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9b24:	mov	x1, x26
    9b28:	bl	7094 <__asan_backtrace_open@plt+0x664>
    9b2c:	mov	x1, x28
    9b30:	bl	7094 <__asan_backtrace_open@plt+0x664>
    9b34:	mov	x0, x19
    9b38:	bl	7270 <__asan_backtrace_open@plt+0x840>
    9b3c:	mov	x0, x20
    9b40:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    9b44:	cbz	x22, 9b50 <__ubsan_default_options@@Base+0x1888>
    9b48:	mov	x0, x22
    9b4c:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
    9b50:	ldp	x19, x20, [sp]
    9b54:	ldp	x21, x22, [sp, #16]
    9b58:	ldp	x23, x24, [sp, #32]
    9b5c:	ldp	x25, x26, [sp, #48]
    9b60:	ldp	x27, x28, [sp, #64]
    9b64:	ldr	x30, [sp, #80]
    9b68:	add	sp, sp, #0x2f0
    9b6c:	ret
    9b70:	mov	x4, #0x0                   	// #0
    9b74:	mov	x3, #0x0                   	// #0
    9b78:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9b7c:	add	x2, x2, #0x820
    9b80:	mov	w1, #0x2b                  	// #43
    9b84:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9b88:	add	x0, x0, #0x238
    9b8c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    9b90:	add	x0, x19, #0xc
    9b94:	mov	w1, #0xffffffff            	// #-1
    9b98:	ldxr	w23, [x0]
    9b9c:	stxr	w2, w1, [x0]
    9ba0:	cbnz	w2, 9b98 <__ubsan_default_options@@Base+0x18d0>
    9ba4:	dmb	ish
    9ba8:	ldr	x25, [x19]
    9bac:	ldr	w24, [x19, #8]
    9bb0:	mov	x1, #0x0                   	// #0
    9bb4:	bfxil	x1, x24, #0, #32
    9bb8:	bfi	x1, x23, #32, #32
    9bbc:	ldp	x2, x3, [x20]
    9bc0:	stp	x2, x3, [sp, #144]
    9bc4:	ldr	x0, [x20, #16]
    9bc8:	str	x0, [sp, #160]
    9bcc:	mov	w3, #0x12                  	// #18
    9bd0:	add	x2, sp, #0x90
    9bd4:	mov	x0, x25
    9bd8:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    9bdc:	and	w0, w0, #0xff
    9be0:	cbnz	w0, 9b50 <__ubsan_default_options@@Base+0x1888>
    9be4:	ldr	x26, [x19, #16]
    9be8:	ldr	x28, [x19, #24]
    9bec:	mov	w19, #0x1                   	// #1
    9bf0:	mov	x22, #0x0                   	// #0
    9bf4:	b	9a60 <__ubsan_default_options@@Base+0x1798>
    9bf8:	sub	sp, sp, #0x2b0
    9bfc:	stp	x19, x20, [sp]
    9c00:	stp	x21, x22, [sp, #16]
    9c04:	stp	x23, x24, [sp, #32]
    9c08:	stp	x25, x26, [sp, #48]
    9c0c:	str	x30, [sp, #72]
    9c10:	mov	x19, x0
    9c14:	mov	x22, x1
    9c18:	mov	x20, x2
    9c1c:	add	x0, x0, #0xc
    9c20:	mov	w1, #0xffffffff            	// #-1
    9c24:	ldxr	w23, [x0]
    9c28:	stxr	w2, w1, [x0]
    9c2c:	cbnz	w2, 9c24 <__ubsan_default_options@@Base+0x195c>
    9c30:	dmb	ish
    9c34:	ldr	x25, [x19]
    9c38:	ldr	w24, [x19, #8]
    9c3c:	ldr	x0, [x19, #16]
    9c40:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9c44:	add	x1, x1, #0xc58
    9c48:	add	x0, x0, #0x4
    9c4c:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    9c50:	mov	w21, #0x13                  	// #19
    9c54:	cbnz	w0, 9ca8 <__ubsan_default_options@@Base+0x19e0>
    9c58:	mov	x1, #0x0                   	// #0
    9c5c:	bfxil	x1, x24, #0, #32
    9c60:	bfi	x1, x23, #32, #32
    9c64:	ldp	x2, x3, [x20]
    9c68:	stp	x2, x3, [sp, #128]
    9c6c:	ldr	x0, [x20, #16]
    9c70:	str	x0, [sp, #144]
    9c74:	mov	w3, w21
    9c78:	add	x2, sp, #0x80
    9c7c:	mov	x0, x25
    9c80:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    9c84:	and	w0, w0, #0xff
    9c88:	cbz	w0, 9cd0 <__ubsan_default_options@@Base+0x1a08>
    9c8c:	ldp	x19, x20, [sp]
    9c90:	ldp	x21, x22, [sp, #16]
    9c94:	ldp	x23, x24, [sp, #32]
    9c98:	ldp	x25, x26, [sp, #48]
    9c9c:	ldr	x30, [sp, #72]
    9ca0:	add	sp, sp, #0x2b0
    9ca4:	ret
    9ca8:	ldr	x0, [x19, #16]
    9cac:	mov	x2, #0x6                   	// #6
    9cb0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9cb4:	add	x1, x1, #0xc60
    9cb8:	add	x0, x0, #0x4
    9cbc:	bl	146fc <__sanitizer_set_report_fd@@Base+0x18b8>
    9cc0:	cmp	w0, #0x0
    9cc4:	cset	w21, ne  // ne = any
    9cc8:	add	w21, w21, #0x13
    9ccc:	b	9c58 <__ubsan_default_options@@Base+0x1990>
    9cd0:	str	x27, [sp, #64]
    9cd4:	mov	w27, #0x1                   	// #1
    9cd8:	str	w27, [sp, #160]
    9cdc:	str	x25, [sp, #168]
    9ce0:	str	w24, [sp, #176]
    9ce4:	str	w23, [sp, #180]
    9ce8:	ldp	x0, x1, [x20]
    9cec:	stp	x0, x1, [sp, #128]
    9cf0:	ldr	x0, [x20, #16]
    9cf4:	str	x0, [sp, #144]
    9cf8:	add	x26, sp, #0xa0
    9cfc:	ldp	x0, x1, [sp, #160]
    9d00:	stp	x0, x1, [sp, #80]
    9d04:	ldp	x0, x1, [sp, #176]
    9d08:	stp	x0, x1, [sp, #96]
    9d0c:	ldr	x0, [sp, #192]
    9d10:	str	x0, [sp, #112]
    9d14:	add	x20, sp, #0x250
    9d18:	mov	w3, w21
    9d1c:	add	x2, sp, #0x50
    9d20:	add	x1, sp, #0x80
    9d24:	mov	x0, x20
    9d28:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    9d2c:	str	w27, [sp, #160]
    9d30:	str	x25, [sp, #168]
    9d34:	str	w24, [sp, #176]
    9d38:	str	w23, [sp, #180]
    9d3c:	str	wzr, [sp, #200]
    9d40:	str	w21, [sp, #204]
    9d44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9d48:	add	x0, x0, #0xc68
    9d4c:	str	x0, [sp, #208]
    9d50:	str	wzr, [sp, #480]
    9d54:	str	wzr, [sp, #488]
    9d58:	str	xzr, [sp, #496]
    9d5c:	str	wzr, [sp, #504]
    9d60:	str	wzr, [sp, #508]
    9d64:	str	wzr, [sp, #528]
    9d68:	str	xzr, [sp, #536]
    9d6c:	str	wzr, [sp, #544]
    9d70:	str	wzr, [sp, #548]
    9d74:	str	xzr, [sp, #568]
    9d78:	str	wzr, [sp, #576]
    9d7c:	ldr	x0, [x19, #16]
    9d80:	str	x0, [sp, #672]
    9d84:	str	x22, [sp, #680]
    9d88:	add	x1, sp, #0x2a0
    9d8c:	mov	x0, x26
    9d90:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9d94:	ldr	x1, [x19, #16]
    9d98:	bl	7094 <__asan_backtrace_open@plt+0x664>
    9d9c:	mov	x0, x26
    9da0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    9da4:	mov	x0, x20
    9da8:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    9dac:	ldr	x27, [sp, #64]
    9db0:	b	9c8c <__ubsan_default_options@@Base+0x19c4>
    9db4:	sub	sp, sp, #0x2e0
    9db8:	stp	x19, x20, [sp]
    9dbc:	stp	x21, x22, [sp, #16]
    9dc0:	stp	x23, x24, [sp, #32]
    9dc4:	stp	x25, x26, [sp, #48]
    9dc8:	stp	x27, x28, [sp, #64]
    9dcc:	str	x30, [sp, #80]
    9dd0:	mov	x19, x1
    9dd4:	str	x2, [sp, #96]
    9dd8:	str	x3, [sp, #104]
    9ddc:	add	x1, x0, #0xc
    9de0:	mov	w2, #0xffffffff            	// #-1
    9de4:	ldxr	w25, [x1]
    9de8:	stxr	w3, w2, [x1]
    9dec:	cbnz	w3, 9de4 <__ubsan_default_options@@Base+0x1b1c>
    9df0:	dmb	ish
    9df4:	ldr	x27, [x0]
    9df8:	ldr	w26, [x0, #8]
    9dfc:	ldr	x21, [x0, #16]
    9e00:	ldr	x22, [x0, #24]
    9e04:	ldrh	w1, [x21]
    9e08:	mov	w23, #0x0                   	// #0
    9e0c:	cbnz	w1, 9e18 <__ubsan_default_options@@Base+0x1b50>
    9e10:	ldrh	w23, [x21, #2]
    9e14:	and	w23, w23, #0x1
    9e18:	ldrh	w1, [x22]
    9e1c:	mov	w24, #0x0                   	// #0
    9e20:	cbnz	w1, 9e2c <__ubsan_default_options@@Base+0x1b64>
    9e24:	ldrh	w24, [x22, #2]
    9e28:	and	w24, w24, #0x1
    9e2c:	ldrb	w0, [x0, #32]
    9e30:	mov	w20, #0xa                   	// #10
    9e34:	cmp	w0, #0x1
    9e38:	b.eq	9e50 <__ubsan_default_options@@Base+0x1b88>  // b.none
    9e3c:	mov	w20, #0xb                   	// #11
    9e40:	cmp	w0, #0x2
    9e44:	b.eq	9e50 <__ubsan_default_options@@Base+0x1b88>  // b.none
    9e48:	mov	w20, #0x0                   	// #0
    9e4c:	cbz	w0, 9ea4 <__ubsan_default_options@@Base+0x1bdc>
    9e50:	mov	x1, #0x0                   	// #0
    9e54:	bfxil	x1, x26, #0, #32
    9e58:	bfi	x1, x25, #32, #32
    9e5c:	ldp	x2, x3, [x19]
    9e60:	stp	x2, x3, [sp, #160]
    9e64:	ldr	x0, [x19, #16]
    9e68:	str	x0, [sp, #176]
    9e6c:	mov	w3, w20
    9e70:	add	x2, sp, #0xa0
    9e74:	mov	x0, x27
    9e78:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    9e7c:	and	w0, w0, #0xff
    9e80:	cbz	w0, 9eb8 <__ubsan_default_options@@Base+0x1bf0>
    9e84:	ldp	x19, x20, [sp]
    9e88:	ldp	x21, x22, [sp, #16]
    9e8c:	ldp	x23, x24, [sp, #32]
    9e90:	ldp	x25, x26, [sp, #48]
    9e94:	ldp	x27, x28, [sp, #64]
    9e98:	ldr	x30, [sp, #80]
    9e9c:	add	sp, sp, #0x2e0
    9ea0:	ret
    9ea4:	cmp	w24, #0x0
    9ea8:	ccmp	w23, #0x0, #0x0, eq  // eq = none
    9eac:	cset	w20, ne  // ne = any
    9eb0:	add	w20, w20, #0xa
    9eb4:	b	9e50 <__ubsan_default_options@@Base+0x1b88>
    9eb8:	mov	w28, #0x1                   	// #1
    9ebc:	str	w28, [sp, #192]
    9ec0:	str	x27, [sp, #200]
    9ec4:	str	w26, [sp, #208]
    9ec8:	str	w25, [sp, #212]
    9ecc:	ldp	x0, x1, [x19]
    9ed0:	stp	x0, x1, [sp, #160]
    9ed4:	ldr	x0, [x19, #16]
    9ed8:	str	x0, [sp, #176]
    9edc:	ldp	x0, x1, [sp, #192]
    9ee0:	stp	x0, x1, [sp, #112]
    9ee4:	ldp	x0, x1, [sp, #208]
    9ee8:	stp	x0, x1, [sp, #128]
    9eec:	ldr	x0, [sp, #224]
    9ef0:	str	x0, [sp, #144]
    9ef4:	mov	w3, w20
    9ef8:	add	x2, sp, #0x70
    9efc:	add	x1, sp, #0xa0
    9f00:	add	x0, sp, #0x270
    9f04:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    9f08:	str	w28, [sp, #192]
    9f0c:	str	x27, [sp, #200]
    9f10:	str	w26, [sp, #208]
    9f14:	str	w25, [sp, #212]
    9f18:	str	wzr, [sp, #232]
    9f1c:	str	w20, [sp, #236]
    9f20:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9f24:	add	x0, x0, #0xcb0
    9f28:	str	x0, [sp, #240]
    9f2c:	str	wzr, [sp, #512]
    9f30:	str	wzr, [sp, #520]
    9f34:	str	xzr, [sp, #528]
    9f38:	str	wzr, [sp, #536]
    9f3c:	str	wzr, [sp, #540]
    9f40:	str	wzr, [sp, #560]
    9f44:	str	xzr, [sp, #568]
    9f48:	str	wzr, [sp, #576]
    9f4c:	str	wzr, [sp, #580]
    9f50:	str	xzr, [sp, #600]
    9f54:	str	wzr, [sp, #608]
    9f58:	mov	x1, x21
    9f5c:	add	x0, sp, #0xc0
    9f60:	bl	7094 <__asan_backtrace_open@plt+0x664>
    9f64:	str	x21, [sp, #704]
    9f68:	ldr	x1, [sp, #96]
    9f6c:	str	x1, [sp, #712]
    9f70:	add	x1, sp, #0x2c0
    9f74:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9f78:	ldrh	w1, [x21]
    9f7c:	cbnz	w1, a0b0 <__ubsan_default_options@@Base+0x1de8>
    9f80:	ldrh	w1, [x21, #2]
    9f84:	asr	w1, w1, #1
    9f88:	mov	w2, #0x1                   	// #1
    9f8c:	lsl	w4, w2, w1
    9f90:	ldr	w2, [x0, #320]
    9f94:	cmp	w2, #0x8
    9f98:	b.eq	a0d0 <__ubsan_default_options@@Base+0x1e08>  // b.none
    9f9c:	add	w1, w2, #0x1
    9fa0:	str	w1, [x0, #320]
    9fa4:	ubfiz	x3, x2, #5, #32
    9fa8:	add	x3, x3, #0x40
    9fac:	add	x5, x0, x3
    9fb0:	mov	w6, #0x2                   	// #2
    9fb4:	str	w6, [x0, x3]
    9fb8:	str	x4, [x5, #16]
    9fbc:	str	xzr, [x5, #24]
    9fc0:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    9fc4:	add	x4, x3, #0xca8
    9fc8:	adrp	x3, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    9fcc:	add	x3, x3, #0x640
    9fd0:	cmp	w23, #0x0
    9fd4:	csel	x3, x3, x4, ne  // ne = any
    9fd8:	cmp	w1, #0x8
    9fdc:	b.eq	a0f0 <__ubsan_default_options@@Base+0x1e28>  // b.none
    9fe0:	add	w2, w2, #0x2
    9fe4:	str	w2, [x0, #320]
    9fe8:	ubfiz	x1, x1, #5, #32
    9fec:	add	x1, x1, #0x40
    9ff0:	add	x2, x0, x1
    9ff4:	str	wzr, [x0, x1]
    9ff8:	str	x3, [x2, #16]
    9ffc:	mov	x1, x22
    a000:	bl	7094 <__asan_backtrace_open@plt+0x664>
    a004:	str	x22, [sp, #720]
    a008:	ldr	x1, [sp, #104]
    a00c:	str	x1, [sp, #728]
    a010:	add	x1, sp, #0x2d0
    a014:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    a018:	ldrh	w1, [x22]
    a01c:	cbnz	w1, a110 <__ubsan_default_options@@Base+0x1e48>
    a020:	ldrh	w1, [x22, #2]
    a024:	asr	w1, w1, #1
    a028:	mov	w2, #0x1                   	// #1
    a02c:	lsl	w4, w2, w1
    a030:	ldr	w2, [x0, #320]
    a034:	cmp	w2, #0x8
    a038:	b.eq	a130 <__ubsan_default_options@@Base+0x1e68>  // b.none
    a03c:	add	w1, w2, #0x1
    a040:	str	w1, [x0, #320]
    a044:	ubfiz	x3, x2, #5, #32
    a048:	add	x3, x3, #0x40
    a04c:	add	x5, x0, x3
    a050:	mov	w6, #0x2                   	// #2
    a054:	str	w6, [x0, x3]
    a058:	str	x4, [x5, #16]
    a05c:	str	xzr, [x5, #24]
    a060:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a064:	add	x4, x3, #0xca8
    a068:	adrp	x3, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    a06c:	add	x3, x3, #0x640
    a070:	cmp	w24, #0x0
    a074:	csel	x3, x3, x4, ne  // ne = any
    a078:	cmp	w1, #0x8
    a07c:	b.eq	a150 <__ubsan_default_options@@Base+0x1e88>  // b.none
    a080:	add	w2, w2, #0x2
    a084:	str	w2, [x0, #320]
    a088:	ubfiz	x1, x1, #5, #32
    a08c:	add	x1, x1, #0x40
    a090:	add	x2, x0, x1
    a094:	str	wzr, [x0, x1]
    a098:	str	x3, [x2, #16]
    a09c:	add	x0, sp, #0xc0
    a0a0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a0a4:	add	x0, sp, #0x270
    a0a8:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    a0ac:	b	9e84 <__ubsan_default_options@@Base+0x1bbc>
    a0b0:	mov	x4, #0x0                   	// #0
    a0b4:	mov	x3, #0x0                   	// #0
    a0b8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a0bc:	add	x2, x2, #0xaa8
    a0c0:	mov	w1, #0x7b                  	// #123
    a0c4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a0c8:	add	x0, x0, #0xac8
    a0cc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    a0d0:	mov	x4, #0x0                   	// #0
    a0d4:	mov	x3, #0x0                   	// #0
    a0d8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a0dc:	add	x2, x2, #0x2b8
    a0e0:	mov	w1, #0xbf                  	// #191
    a0e4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a0e8:	add	x0, x0, #0x238
    a0ec:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    a0f0:	mov	x4, #0x0                   	// #0
    a0f4:	mov	x3, #0x0                   	// #0
    a0f8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a0fc:	add	x2, x2, #0x2b8
    a100:	mov	w1, #0xbf                  	// #191
    a104:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a108:	add	x0, x0, #0x238
    a10c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    a110:	mov	x4, #0x0                   	// #0
    a114:	mov	x3, #0x0                   	// #0
    a118:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a11c:	add	x2, x2, #0xaa8
    a120:	mov	w1, #0x7b                  	// #123
    a124:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a128:	add	x0, x0, #0xac8
    a12c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    a130:	mov	x4, #0x0                   	// #0
    a134:	mov	x3, #0x0                   	// #0
    a138:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a13c:	add	x2, x2, #0x2b8
    a140:	mov	w1, #0xbf                  	// #191
    a144:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a148:	add	x0, x0, #0x238
    a14c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    a150:	mov	x4, #0x0                   	// #0
    a154:	mov	x3, #0x0                   	// #0
    a158:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a15c:	add	x2, x2, #0x2b8
    a160:	mov	w1, #0xbf                  	// #191
    a164:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a168:	add	x0, x0, #0x238
    a16c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    a170:	sub	sp, sp, #0x290
    a174:	stp	x19, x20, [sp]
    a178:	stp	x21, x22, [sp, #16]
    a17c:	stp	x23, x24, [sp, #32]
    a180:	str	x30, [sp, #48]
    a184:	mov	x19, x0
    a188:	mov	x20, x1
    a18c:	add	x0, x0, #0xc
    a190:	mov	w1, #0xffffffff            	// #-1
    a194:	ldxr	w21, [x0]
    a198:	stxr	w2, w1, [x0]
    a19c:	cbnz	w2, a194 <__ubsan_default_options@@Base+0x1ecc>
    a1a0:	dmb	ish
    a1a4:	ldr	x23, [x19]
    a1a8:	ldr	w22, [x19, #8]
    a1ac:	mov	x1, #0x0                   	// #0
    a1b0:	bfxil	x1, x22, #0, #32
    a1b4:	bfi	x1, x21, #32, #32
    a1b8:	ldp	x2, x3, [x20]
    a1bc:	stp	x2, x3, [sp, #112]
    a1c0:	ldr	x0, [x20, #16]
    a1c4:	str	x0, [sp, #128]
    a1c8:	mov	w3, #0x9                   	// #9
    a1cc:	add	x2, sp, #0x70
    a1d0:	mov	x0, x23
    a1d4:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    a1d8:	and	w0, w0, #0xff
    a1dc:	cbz	w0, a1f8 <__ubsan_default_options@@Base+0x1f30>
    a1e0:	ldp	x19, x20, [sp]
    a1e4:	ldp	x21, x22, [sp, #16]
    a1e8:	ldp	x23, x24, [sp, #32]
    a1ec:	ldr	x30, [sp, #48]
    a1f0:	add	sp, sp, #0x290
    a1f4:	ret
    a1f8:	mov	w24, #0x1                   	// #1
    a1fc:	str	w24, [sp, #144]
    a200:	str	x23, [sp, #152]
    a204:	str	w22, [sp, #160]
    a208:	str	w21, [sp, #164]
    a20c:	ldp	x0, x1, [x20]
    a210:	stp	x0, x1, [sp, #112]
    a214:	ldr	x0, [x20, #16]
    a218:	str	x0, [sp, #128]
    a21c:	ldp	x0, x1, [sp, #144]
    a220:	stp	x0, x1, [sp, #64]
    a224:	ldp	x0, x1, [sp, #160]
    a228:	stp	x0, x1, [sp, #80]
    a22c:	ldr	x0, [sp, #176]
    a230:	str	x0, [sp, #96]
    a234:	mov	w3, #0x9                   	// #9
    a238:	add	x2, sp, #0x40
    a23c:	add	x1, sp, #0x70
    a240:	add	x0, sp, #0x240
    a244:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    a248:	str	w24, [sp, #144]
    a24c:	str	x23, [sp, #152]
    a250:	str	w22, [sp, #160]
    a254:	str	w21, [sp, #164]
    a258:	str	wzr, [sp, #184]
    a25c:	mov	w0, #0x9                   	// #9
    a260:	str	w0, [sp, #188]
    a264:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a268:	add	x0, x0, #0xd38
    a26c:	str	x0, [sp, #192]
    a270:	str	wzr, [sp, #472]
    a274:	str	xzr, [sp, #480]
    a278:	str	wzr, [sp, #488]
    a27c:	str	wzr, [sp, #492]
    a280:	str	wzr, [sp, #512]
    a284:	str	xzr, [sp, #520]
    a288:	str	wzr, [sp, #528]
    a28c:	str	wzr, [sp, #532]
    a290:	str	xzr, [sp, #552]
    a294:	str	wzr, [sp, #560]
    a298:	ldrb	w2, [x19, #16]
    a29c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a2a0:	add	x1, x0, #0xd30
    a2a4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a2a8:	add	x0, x0, #0xd28
    a2ac:	cmp	w2, #0x0
    a2b0:	csel	x0, x0, x1, eq  // eq = none
    a2b4:	str	w24, [sp, #464]
    a2b8:	str	wzr, [sp, #208]
    a2bc:	str	x0, [sp, #224]
    a2c0:	add	x0, sp, #0x90
    a2c4:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a2c8:	add	x0, sp, #0x240
    a2cc:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    a2d0:	b	a1e0 <__ubsan_default_options@@Base+0x1f18>
    a2d4:	sub	sp, sp, #0x290
    a2d8:	stp	x19, x20, [sp]
    a2dc:	stp	x21, x22, [sp, #16]
    a2e0:	stp	x23, x24, [sp, #32]
    a2e4:	str	x30, [sp, #56]
    a2e8:	mov	x19, x0
    a2ec:	mov	x21, x1
    a2f0:	mov	x20, x2
    a2f4:	add	x0, x0, #0xc
    a2f8:	mov	w1, #0xffffffff            	// #-1
    a2fc:	ldxr	w22, [x0]
    a300:	stxr	w2, w1, [x0]
    a304:	cbnz	w2, a2fc <__ubsan_default_options@@Base+0x2034>
    a308:	dmb	ish
    a30c:	ldr	x24, [x19]
    a310:	ldr	w23, [x19, #8]
    a314:	mov	x1, #0x0                   	// #0
    a318:	bfxil	x1, x23, #0, #32
    a31c:	bfi	x1, x22, #32, #32
    a320:	ldp	x2, x3, [x20]
    a324:	stp	x2, x3, [sp, #112]
    a328:	ldr	x0, [x20, #16]
    a32c:	str	x0, [sp, #128]
    a330:	mov	w3, #0x15                  	// #21
    a334:	add	x2, sp, #0x70
    a338:	mov	x0, x24
    a33c:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    a340:	and	w0, w0, #0xff
    a344:	cbz	w0, a360 <__ubsan_default_options@@Base+0x2098>
    a348:	ldp	x19, x20, [sp]
    a34c:	ldp	x21, x22, [sp, #16]
    a350:	ldp	x23, x24, [sp, #32]
    a354:	ldr	x30, [sp, #56]
    a358:	add	sp, sp, #0x290
    a35c:	ret
    a360:	str	x25, [sp, #48]
    a364:	mov	w0, #0x1                   	// #1
    a368:	str	w0, [sp, #144]
    a36c:	str	x24, [sp, #152]
    a370:	str	w23, [sp, #160]
    a374:	str	w22, [sp, #164]
    a378:	ldp	x0, x1, [x20]
    a37c:	stp	x0, x1, [sp, #112]
    a380:	ldr	x0, [x20, #16]
    a384:	str	x0, [sp, #128]
    a388:	ldp	x0, x1, [sp, #144]
    a38c:	stp	x0, x1, [sp, #64]
    a390:	ldp	x0, x1, [sp, #160]
    a394:	stp	x0, x1, [sp, #80]
    a398:	ldr	x0, [sp, #176]
    a39c:	str	x0, [sp, #96]
    a3a0:	mov	w3, #0x15                  	// #21
    a3a4:	add	x2, sp, #0x40
    a3a8:	add	x1, sp, #0x70
    a3ac:	add	x0, sp, #0x240
    a3b0:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    a3b4:	mov	x0, x21
    a3b8:	bl	7074 <__asan_backtrace_open@plt+0x644>
    a3bc:	mov	x20, x0
    a3c0:	ldr	x21, [x0, #40]
    a3c4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a3c8:	add	x0, x0, #0xd70
    a3cc:	cmp	x21, #0x0
    a3d0:	csel	x21, x0, x21, eq  // eq = none
    a3d4:	mov	w25, #0x1                   	// #1
    a3d8:	str	w25, [sp, #144]
    a3dc:	str	x24, [sp, #152]
    a3e0:	str	w23, [sp, #160]
    a3e4:	str	w22, [sp, #164]
    a3e8:	str	wzr, [sp, #184]
    a3ec:	mov	w22, #0x15                  	// #21
    a3f0:	str	w22, [sp, #188]
    a3f4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a3f8:	add	x0, x0, #0xd80
    a3fc:	str	x0, [sp, #192]
    a400:	str	wzr, [sp, #472]
    a404:	str	xzr, [sp, #480]
    a408:	str	wzr, [sp, #488]
    a40c:	str	wzr, [sp, #492]
    a410:	str	wzr, [sp, #512]
    a414:	str	xzr, [sp, #520]
    a418:	str	wzr, [sp, #528]
    a41c:	str	wzr, [sp, #532]
    a420:	str	xzr, [sp, #552]
    a424:	str	wzr, [sp, #560]
    a428:	str	w25, [sp, #464]
    a42c:	str	wzr, [sp, #208]
    a430:	str	x21, [sp, #224]
    a434:	add	x0, sp, #0x90
    a438:	ldr	x1, [x19, #16]
    a43c:	mov	x19, x0
    a440:	bl	7094 <__asan_backtrace_open@plt+0x664>
    a444:	mov	x0, x19
    a448:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a44c:	mov	w0, #0x3                   	// #3
    a450:	str	w0, [sp, #144]
    a454:	str	xzr, [sp, #152]
    a458:	str	wzr, [sp, #160]
    a45c:	str	wzr, [sp, #164]
    a460:	str	x20, [sp, #176]
    a464:	str	w25, [sp, #184]
    a468:	str	w22, [sp, #188]
    a46c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a470:	add	x0, x0, #0xdc8
    a474:	str	x0, [sp, #192]
    a478:	str	wzr, [sp, #472]
    a47c:	str	xzr, [sp, #480]
    a480:	str	wzr, [sp, #488]
    a484:	str	wzr, [sp, #492]
    a488:	str	wzr, [sp, #512]
    a48c:	str	xzr, [sp, #520]
    a490:	str	wzr, [sp, #528]
    a494:	str	wzr, [sp, #532]
    a498:	str	xzr, [sp, #552]
    a49c:	str	wzr, [sp, #560]
    a4a0:	str	w25, [sp, #464]
    a4a4:	str	wzr, [sp, #208]
    a4a8:	str	x21, [sp, #224]
    a4ac:	mov	x0, x19
    a4b0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a4b4:	mov	x0, x20
    a4b8:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
    a4bc:	add	x0, sp, #0x240
    a4c0:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    a4c4:	ldr	x25, [sp, #48]
    a4c8:	b	a348 <__ubsan_default_options@@Base+0x2080>
    a4cc:	sub	sp, sp, #0x290
    a4d0:	stp	x19, x20, [sp]
    a4d4:	str	x30, [sp, #56]
    a4d8:	cbz	x1, a55c <__ubsan_default_options@@Base+0x2294>
    a4dc:	stp	x21, x22, [sp, #16]
    a4e0:	stp	x23, x24, [sp, #32]
    a4e4:	mov	x20, x0
    a4e8:	mov	x19, x2
    a4ec:	and	w23, w3, #0xff
    a4f0:	add	x0, x1, #0xc
    a4f4:	mov	w2, #0xffffffff            	// #-1
    a4f8:	ldxr	w21, [x0]
    a4fc:	stxr	w3, w2, [x0]
    a500:	cbnz	w3, a4f8 <__ubsan_default_options@@Base+0x2230>
    a504:	dmb	ish
    a508:	ldr	x24, [x1]
    a50c:	ldr	w22, [x1, #8]
    a510:	mov	x1, #0x0                   	// #0
    a514:	bfxil	x1, x22, #0, #32
    a518:	bfi	x1, x21, #32, #32
    a51c:	ldp	x2, x3, [x19]
    a520:	stp	x2, x3, [sp, #112]
    a524:	ldr	x0, [x19, #16]
    a528:	str	x0, [sp, #128]
    a52c:	mov	w3, #0x16                  	// #22
    a530:	add	x2, sp, #0x70
    a534:	mov	x0, x24
    a538:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    a53c:	and	w0, w0, #0xff
    a540:	cbz	w0, a588 <__ubsan_default_options@@Base+0x22c0>
    a544:	ldp	x21, x22, [sp, #16]
    a548:	ldp	x23, x24, [sp, #32]
    a54c:	ldp	x19, x20, [sp]
    a550:	ldr	x30, [sp, #56]
    a554:	add	sp, sp, #0x290
    a558:	ret
    a55c:	stp	x21, x22, [sp, #16]
    a560:	stp	x23, x24, [sp, #32]
    a564:	str	x25, [sp, #48]
    a568:	mov	x4, #0x0                   	// #0
    a56c:	mov	x3, #0x0                   	// #0
    a570:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a574:	add	x2, x2, #0xe18
    a578:	mov	w1, #0x23f                 	// #575
    a57c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a580:	add	x0, x0, #0x910
    a584:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    a588:	str	x25, [sp, #48]
    a58c:	mov	w25, #0x1                   	// #1
    a590:	str	w25, [sp, #144]
    a594:	str	x24, [sp, #152]
    a598:	str	w22, [sp, #160]
    a59c:	str	w21, [sp, #164]
    a5a0:	ldp	x0, x1, [x19]
    a5a4:	stp	x0, x1, [sp, #112]
    a5a8:	ldr	x0, [x19, #16]
    a5ac:	str	x0, [sp, #128]
    a5b0:	ldp	x0, x1, [sp, #144]
    a5b4:	stp	x0, x1, [sp, #64]
    a5b8:	ldp	x0, x1, [sp, #160]
    a5bc:	stp	x0, x1, [sp, #80]
    a5c0:	ldr	x0, [sp, #176]
    a5c4:	str	x0, [sp, #96]
    a5c8:	mov	w3, #0x16                  	// #22
    a5cc:	add	x2, sp, #0x40
    a5d0:	add	x1, sp, #0x70
    a5d4:	add	x0, sp, #0x240
    a5d8:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    a5dc:	str	w25, [sp, #144]
    a5e0:	str	x24, [sp, #152]
    a5e4:	str	w22, [sp, #160]
    a5e8:	str	w21, [sp, #164]
    a5ec:	str	wzr, [sp, #184]
    a5f0:	mov	w0, #0x16                  	// #22
    a5f4:	str	w0, [sp, #188]
    a5f8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a5fc:	add	x0, x0, #0xe50
    a600:	str	x0, [sp, #192]
    a604:	str	wzr, [sp, #464]
    a608:	str	wzr, [sp, #472]
    a60c:	str	xzr, [sp, #480]
    a610:	str	wzr, [sp, #488]
    a614:	str	wzr, [sp, #492]
    a618:	str	wzr, [sp, #512]
    a61c:	str	xzr, [sp, #520]
    a620:	str	wzr, [sp, #528]
    a624:	str	wzr, [sp, #532]
    a628:	str	xzr, [sp, #552]
    a62c:	str	wzr, [sp, #560]
    a630:	add	x0, sp, #0x90
    a634:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a638:	ldr	x0, [x20]
    a63c:	cbz	x0, a6c4 <__ubsan_default_options@@Base+0x23fc>
    a640:	ldr	w3, [x20, #8]
    a644:	ldr	w2, [x20, #12]
    a648:	str	w25, [sp, #144]
    a64c:	str	x0, [sp, #152]
    a650:	str	w3, [sp, #160]
    a654:	str	w2, [sp, #164]
    a658:	str	w25, [sp, #184]
    a65c:	mov	w0, #0x16                  	// #22
    a660:	str	w0, [sp, #188]
    a664:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a668:	add	x0, x0, #0xe98
    a66c:	str	x0, [sp, #192]
    a670:	str	wzr, [sp, #472]
    a674:	str	xzr, [sp, #480]
    a678:	str	wzr, [sp, #488]
    a67c:	str	wzr, [sp, #492]
    a680:	str	wzr, [sp, #512]
    a684:	str	xzr, [sp, #520]
    a688:	str	wzr, [sp, #528]
    a68c:	str	wzr, [sp, #532]
    a690:	str	xzr, [sp, #552]
    a694:	str	wzr, [sp, #560]
    a698:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a69c:	add	x1, x0, #0xdf8
    a6a0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a6a4:	add	x0, x0, #0xdd8
    a6a8:	cmp	w23, #0x0
    a6ac:	csel	x0, x0, x1, ne  // ne = any
    a6b0:	str	w25, [sp, #464]
    a6b4:	str	wzr, [sp, #208]
    a6b8:	str	x0, [sp, #224]
    a6bc:	add	x0, sp, #0x90
    a6c0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a6c4:	add	x0, sp, #0x240
    a6c8:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    a6cc:	ldr	x25, [sp, #48]
    a6d0:	b	a544 <__ubsan_default_options@@Base+0x227c>
    a6d4:	sub	sp, sp, #0x290
    a6d8:	stp	x19, x20, [sp]
    a6dc:	stp	x21, x22, [sp, #16]
    a6e0:	stp	x23, x24, [sp, #32]
    a6e4:	str	x30, [sp, #56]
    a6e8:	mov	x19, x0
    a6ec:	mov	x20, x1
    a6f0:	and	w24, w2, #0xff
    a6f4:	add	x0, x0, #0xc
    a6f8:	mov	w1, #0xffffffff            	// #-1
    a6fc:	ldxr	w21, [x0]
    a700:	stxr	w2, w1, [x0]
    a704:	cbnz	w2, a6fc <__ubsan_default_options@@Base+0x2434>
    a708:	dmb	ish
    a70c:	ldr	x23, [x19]
    a710:	ldr	w22, [x19, #8]
    a714:	mov	x1, #0x0                   	// #0
    a718:	bfxil	x1, x22, #0, #32
    a71c:	bfi	x1, x21, #32, #32
    a720:	ldp	x2, x3, [x20]
    a724:	stp	x2, x3, [sp, #112]
    a728:	ldr	x0, [x20, #16]
    a72c:	str	x0, [sp, #128]
    a730:	mov	w3, #0x17                  	// #23
    a734:	add	x2, sp, #0x70
    a738:	mov	x0, x23
    a73c:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    a740:	and	w0, w0, #0xff
    a744:	cbz	w0, a760 <__ubsan_default_options@@Base+0x2498>
    a748:	ldp	x19, x20, [sp]
    a74c:	ldp	x21, x22, [sp, #16]
    a750:	ldp	x23, x24, [sp, #32]
    a754:	ldr	x30, [sp, #56]
    a758:	add	sp, sp, #0x290
    a75c:	ret
    a760:	str	x25, [sp, #48]
    a764:	mov	w25, #0x1                   	// #1
    a768:	str	w25, [sp, #144]
    a76c:	str	x23, [sp, #152]
    a770:	str	w22, [sp, #160]
    a774:	str	w21, [sp, #164]
    a778:	ldp	x0, x1, [x20]
    a77c:	stp	x0, x1, [sp, #112]
    a780:	ldr	x0, [x20, #16]
    a784:	str	x0, [sp, #128]
    a788:	ldp	x0, x1, [sp, #144]
    a78c:	stp	x0, x1, [sp, #64]
    a790:	ldp	x0, x1, [sp, #160]
    a794:	stp	x0, x1, [sp, #80]
    a798:	ldr	x0, [sp, #176]
    a79c:	str	x0, [sp, #96]
    a7a0:	mov	w3, #0x17                  	// #23
    a7a4:	add	x2, sp, #0x40
    a7a8:	add	x1, sp, #0x70
    a7ac:	add	x0, sp, #0x240
    a7b0:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    a7b4:	str	w25, [sp, #144]
    a7b8:	str	x23, [sp, #152]
    a7bc:	str	w22, [sp, #160]
    a7c0:	str	w21, [sp, #164]
    a7c4:	str	wzr, [sp, #184]
    a7c8:	mov	w0, #0x17                  	// #23
    a7cc:	str	w0, [sp, #188]
    a7d0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a7d4:	add	x0, x0, #0xed0
    a7d8:	str	x0, [sp, #192]
    a7dc:	str	wzr, [sp, #472]
    a7e0:	str	xzr, [sp, #480]
    a7e4:	str	wzr, [sp, #488]
    a7e8:	str	wzr, [sp, #492]
    a7ec:	str	wzr, [sp, #512]
    a7f0:	str	xzr, [sp, #520]
    a7f4:	str	wzr, [sp, #528]
    a7f8:	str	wzr, [sp, #532]
    a7fc:	str	xzr, [sp, #552]
    a800:	str	wzr, [sp, #560]
    a804:	ldrsw	x0, [x19, #32]
    a808:	str	w25, [sp, #464]
    a80c:	mov	w1, #0x2                   	// #2
    a810:	str	w1, [sp, #208]
    a814:	str	x0, [sp, #224]
    a818:	str	xzr, [sp, #232]
    a81c:	add	x0, sp, #0x90
    a820:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a824:	ldr	x0, [x19, #16]
    a828:	cbz	x0, a8b0 <__ubsan_default_options@@Base+0x25e8>
    a82c:	ldr	w3, [x19, #24]
    a830:	ldr	w2, [x19, #28]
    a834:	str	w25, [sp, #144]
    a838:	str	x0, [sp, #152]
    a83c:	str	w3, [sp, #160]
    a840:	str	w2, [sp, #164]
    a844:	str	w25, [sp, #184]
    a848:	mov	w0, #0x17                  	// #23
    a84c:	str	w0, [sp, #188]
    a850:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a854:	add	x0, x0, #0xe98
    a858:	str	x0, [sp, #192]
    a85c:	str	wzr, [sp, #472]
    a860:	str	xzr, [sp, #480]
    a864:	str	wzr, [sp, #488]
    a868:	str	wzr, [sp, #492]
    a86c:	str	wzr, [sp, #512]
    a870:	str	xzr, [sp, #520]
    a874:	str	wzr, [sp, #528]
    a878:	str	wzr, [sp, #532]
    a87c:	str	xzr, [sp, #552]
    a880:	str	wzr, [sp, #560]
    a884:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a888:	add	x1, x0, #0xeb0
    a88c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a890:	add	x0, x0, #0xde0
    a894:	cmp	w24, #0x0
    a898:	csel	x0, x0, x1, ne  // ne = any
    a89c:	str	w25, [sp, #464]
    a8a0:	str	wzr, [sp, #208]
    a8a4:	str	x0, [sp, #224]
    a8a8:	add	x0, sp, #0x90
    a8ac:	bl	7270 <__asan_backtrace_open@plt+0x840>
    a8b0:	add	x0, sp, #0x240
    a8b4:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    a8b8:	ldr	x25, [sp, #48]
    a8bc:	b	a748 <__ubsan_default_options@@Base+0x2480>
    a8c0:	sub	sp, sp, #0x290
    a8c4:	stp	x19, x20, [sp]
    a8c8:	stp	x21, x22, [sp, #16]
    a8cc:	stp	x23, x24, [sp, #32]
    a8d0:	str	x30, [sp, #48]
    a8d4:	mov	x21, x1
    a8d8:	mov	x20, x2
    a8dc:	mov	x19, x3
    a8e0:	add	x1, x0, #0xc
    a8e4:	mov	w2, #0xffffffff            	// #-1
    a8e8:	ldxr	w22, [x1]
    a8ec:	stxr	w3, w2, [x1]
    a8f0:	cbnz	w3, a8e8 <__ubsan_default_options@@Base+0x2620>
    a8f4:	dmb	ish
    a8f8:	ldr	x24, [x0]
    a8fc:	ldr	w23, [x0, #8]
    a900:	mov	x1, #0x0                   	// #0
    a904:	bfxil	x1, x23, #0, #32
    a908:	bfi	x1, x22, #32, #32
    a90c:	ldp	x2, x3, [x19]
    a910:	stp	x2, x3, [sp, #112]
    a914:	ldr	x0, [x19, #16]
    a918:	str	x0, [sp, #128]
    a91c:	mov	w3, #0x2                   	// #2
    a920:	add	x2, sp, #0x70
    a924:	mov	x0, x24
    a928:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    a92c:	and	w0, w0, #0xff
    a930:	cbz	w0, a94c <__ubsan_default_options@@Base+0x2684>
    a934:	ldp	x19, x20, [sp]
    a938:	ldp	x21, x22, [sp, #16]
    a93c:	ldp	x23, x24, [sp, #32]
    a940:	ldr	x30, [sp, #48]
    a944:	add	sp, sp, #0x290
    a948:	ret
    a94c:	mov	w0, #0x1                   	// #1
    a950:	str	w0, [sp, #144]
    a954:	str	x24, [sp, #152]
    a958:	str	w23, [sp, #160]
    a95c:	str	w22, [sp, #164]
    a960:	ldp	x0, x1, [x19]
    a964:	stp	x0, x1, [sp, #112]
    a968:	ldr	x0, [x19, #16]
    a96c:	str	x0, [sp, #128]
    a970:	ldp	x0, x1, [sp, #144]
    a974:	stp	x0, x1, [sp, #64]
    a978:	ldp	x0, x1, [sp, #160]
    a97c:	stp	x0, x1, [sp, #80]
    a980:	ldr	x0, [sp, #176]
    a984:	str	x0, [sp, #96]
    a988:	mov	w3, #0x2                   	// #2
    a98c:	add	x2, sp, #0x40
    a990:	add	x1, sp, #0x70
    a994:	add	x0, sp, #0x240
    a998:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    a99c:	mvn	x0, x21
    a9a0:	lsr	x0, x0, #63
    a9a4:	mvn	x1, x20
    a9a8:	lsr	x1, x1, #63
    a9ac:	cmp	w0, w1, uxtb
    a9b0:	b.eq	aa34 <__ubsan_default_options@@Base+0x276c>  // b.none
    a9b4:	mov	w0, #0x1                   	// #1
    a9b8:	str	w0, [sp, #144]
    a9bc:	str	x24, [sp, #152]
    a9c0:	str	w23, [sp, #160]
    a9c4:	str	w22, [sp, #164]
    a9c8:	str	wzr, [sp, #184]
    a9cc:	mov	w1, #0x2                   	// #2
    a9d0:	str	w1, [sp, #188]
    a9d4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    a9d8:	add	x0, x0, #0xf88
    a9dc:	str	x0, [sp, #192]
    a9e0:	str	wzr, [sp, #472]
    a9e4:	str	xzr, [sp, #480]
    a9e8:	str	wzr, [sp, #488]
    a9ec:	str	wzr, [sp, #492]
    a9f0:	str	wzr, [sp, #512]
    a9f4:	str	xzr, [sp, #520]
    a9f8:	str	wzr, [sp, #528]
    a9fc:	str	wzr, [sp, #532]
    aa00:	str	xzr, [sp, #552]
    aa04:	str	wzr, [sp, #560]
    aa08:	mov	w0, #0x5                   	// #5
    aa0c:	str	w0, [sp, #208]
    aa10:	str	x21, [sp, #224]
    aa14:	str	w1, [sp, #464]
    aa18:	str	w0, [sp, #240]
    aa1c:	str	x20, [sp, #256]
    aa20:	add	x0, sp, #0x90
    aa24:	bl	7270 <__asan_backtrace_open@plt+0x840>
    aa28:	add	x0, sp, #0x240
    aa2c:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    aa30:	b	a934 <__ubsan_default_options@@Base+0x266c>
    aa34:	cmp	x21, x20
    aa38:	b.ls	aab4 <__ubsan_default_options@@Base+0x27ec>  // b.plast
    aa3c:	mov	w0, #0x1                   	// #1
    aa40:	str	w0, [sp, #144]
    aa44:	str	x24, [sp, #152]
    aa48:	str	w23, [sp, #160]
    aa4c:	str	w22, [sp, #164]
    aa50:	str	wzr, [sp, #184]
    aa54:	mov	w1, #0x2                   	// #2
    aa58:	str	w1, [sp, #188]
    aa5c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    aa60:	add	x0, x0, #0xf18
    aa64:	str	x0, [sp, #192]
    aa68:	str	wzr, [sp, #472]
    aa6c:	str	xzr, [sp, #480]
    aa70:	str	wzr, [sp, #488]
    aa74:	str	wzr, [sp, #492]
    aa78:	str	wzr, [sp, #512]
    aa7c:	str	xzr, [sp, #520]
    aa80:	str	wzr, [sp, #528]
    aa84:	str	wzr, [sp, #532]
    aa88:	str	xzr, [sp, #552]
    aa8c:	str	wzr, [sp, #560]
    aa90:	mov	w0, #0x5                   	// #5
    aa94:	str	w0, [sp, #208]
    aa98:	str	x21, [sp, #224]
    aa9c:	str	w1, [sp, #464]
    aaa0:	str	w0, [sp, #240]
    aaa4:	str	x20, [sp, #256]
    aaa8:	add	x0, sp, #0x90
    aaac:	bl	7270 <__asan_backtrace_open@plt+0x840>
    aab0:	b	aa28 <__ubsan_default_options@@Base+0x2760>
    aab4:	mov	w0, #0x1                   	// #1
    aab8:	str	w0, [sp, #144]
    aabc:	str	x24, [sp, #152]
    aac0:	str	w23, [sp, #160]
    aac4:	str	w22, [sp, #164]
    aac8:	str	wzr, [sp, #184]
    aacc:	mov	w1, #0x2                   	// #2
    aad0:	str	w1, [sp, #188]
    aad4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    aad8:	add	x0, x0, #0xf50
    aadc:	str	x0, [sp, #192]
    aae0:	str	wzr, [sp, #472]
    aae4:	str	xzr, [sp, #480]
    aae8:	str	wzr, [sp, #488]
    aaec:	str	wzr, [sp, #492]
    aaf0:	str	wzr, [sp, #512]
    aaf4:	str	xzr, [sp, #520]
    aaf8:	str	wzr, [sp, #528]
    aafc:	str	wzr, [sp, #532]
    ab00:	str	xzr, [sp, #552]
    ab04:	str	wzr, [sp, #560]
    ab08:	mov	w0, #0x5                   	// #5
    ab0c:	str	w0, [sp, #208]
    ab10:	str	x21, [sp, #224]
    ab14:	str	w1, [sp, #464]
    ab18:	str	w0, [sp, #240]
    ab1c:	str	x20, [sp, #256]
    ab20:	add	x0, sp, #0x90
    ab24:	bl	7270 <__asan_backtrace_open@plt+0x840>
    ab28:	b	aa28 <__ubsan_default_options@@Base+0x2760>
    ab2c:	sub	sp, sp, #0x2a0
    ab30:	stp	x19, x20, [sp]
    ab34:	str	x30, [sp, #56]
    ab38:	mov	x19, x0
    ab3c:	ldrb	w0, [x0]
    ab40:	sub	w0, w0, #0x4
    ab44:	and	w0, w0, #0xff
    ab48:	cmp	w0, #0x1
    ab4c:	b.hi	abcc <__ubsan_default_options@@Base+0x2904>  // b.pmore
    ab50:	stp	x21, x22, [sp, #16]
    ab54:	stp	x23, x24, [sp, #32]
    ab58:	mov	x21, x1
    ab5c:	mov	x20, x2
    ab60:	add	x0, x19, #0x14
    ab64:	mov	w1, #0xffffffff            	// #-1
    ab68:	ldxr	w22, [x0]
    ab6c:	stxr	w2, w1, [x0]
    ab70:	cbnz	w2, ab68 <__ubsan_default_options@@Base+0x28a0>
    ab74:	dmb	ish
    ab78:	ldr	x24, [x19, #8]
    ab7c:	ldr	w23, [x19, #16]
    ab80:	mov	x1, #0x0                   	// #0
    ab84:	bfxil	x1, x23, #0, #32
    ab88:	bfi	x1, x22, #32, #32
    ab8c:	ldp	x2, x3, [x20]
    ab90:	stp	x2, x3, [sp, #112]
    ab94:	ldr	x0, [x20, #16]
    ab98:	str	x0, [sp, #128]
    ab9c:	mov	w3, #0x19                  	// #25
    aba0:	add	x2, sp, #0x70
    aba4:	mov	x0, x24
    aba8:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    abac:	and	w0, w0, #0xff
    abb0:	cbz	w0, abdc <__ubsan_default_options@@Base+0x2914>
    abb4:	ldp	x21, x22, [sp, #16]
    abb8:	ldp	x23, x24, [sp, #32]
    abbc:	ldp	x19, x20, [sp]
    abc0:	ldr	x30, [sp, #56]
    abc4:	add	sp, sp, #0x2a0
    abc8:	ret
    abcc:	stp	x21, x22, [sp, #16]
    abd0:	stp	x23, x24, [sp, #32]
    abd4:	str	x25, [sp, #48]
    abd8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    abdc:	str	x25, [sp, #48]
    abe0:	mov	w0, #0x1                   	// #1
    abe4:	str	w0, [sp, #160]
    abe8:	str	x24, [sp, #168]
    abec:	str	w23, [sp, #176]
    abf0:	str	w22, [sp, #180]
    abf4:	ldp	x0, x1, [x20]
    abf8:	stp	x0, x1, [sp, #112]
    abfc:	ldr	x0, [x20, #16]
    ac00:	str	x0, [sp, #128]
    ac04:	ldp	x0, x1, [sp, #160]
    ac08:	stp	x0, x1, [sp, #64]
    ac0c:	ldp	x0, x1, [sp, #176]
    ac10:	stp	x0, x1, [sp, #80]
    ac14:	ldr	x0, [sp, #192]
    ac18:	str	x0, [sp, #96]
    ac1c:	mov	w3, #0x19                  	// #25
    ac20:	add	x2, sp, #0x40
    ac24:	add	x1, sp, #0x70
    ac28:	add	x0, sp, #0x250
    ac2c:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    ac30:	ldrb	w1, [x19]
    ac34:	adrp	x25, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ac38:	add	x0, x25, #0xff0
    ac3c:	adrp	x25, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ac40:	add	x25, x25, #0xfc0
    ac44:	cmp	w1, #0x5
    ac48:	csel	x25, x25, x0, eq  // eq = none
    ac4c:	mov	w0, #0x1                   	// #1
    ac50:	str	w0, [sp, #160]
    ac54:	str	x24, [sp, #168]
    ac58:	str	w23, [sp, #176]
    ac5c:	str	w22, [sp, #180]
    ac60:	str	wzr, [sp, #200]
    ac64:	mov	w0, #0x19                  	// #25
    ac68:	str	w0, [sp, #204]
    ac6c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ac70:	add	x0, x0, #0x8
    ac74:	str	x0, [sp, #208]
    ac78:	str	wzr, [sp, #480]
    ac7c:	str	wzr, [sp, #488]
    ac80:	str	xzr, [sp, #496]
    ac84:	str	wzr, [sp, #504]
    ac88:	str	wzr, [sp, #508]
    ac8c:	str	wzr, [sp, #528]
    ac90:	str	xzr, [sp, #536]
    ac94:	str	wzr, [sp, #544]
    ac98:	str	wzr, [sp, #548]
    ac9c:	str	xzr, [sp, #568]
    aca0:	str	wzr, [sp, #576]
    aca4:	ldr	x1, [x19, #24]
    aca8:	add	x0, sp, #0xa0
    acac:	bl	7094 <__asan_backtrace_open@plt+0x664>
    acb0:	ldr	w2, [x0, #320]
    acb4:	cmp	w2, #0x8
    acb8:	b.eq	ae5c <__ubsan_default_options@@Base+0x2b94>  // b.none
    acbc:	add	w1, w2, #0x1
    acc0:	str	w1, [x0, #320]
    acc4:	ubfiz	x2, x2, #5, #32
    acc8:	add	x2, x2, #0x40
    accc:	add	x1, x0, x2
    acd0:	str	wzr, [x0, x2]
    acd4:	str	x25, [x1, #16]
    acd8:	add	x0, sp, #0xa0
    acdc:	bl	7270 <__asan_backtrace_open@plt+0x840>
    ace0:	mov	x0, x21
    ace4:	bl	7074 <__asan_backtrace_open@plt+0x644>
    ace8:	mov	x19, x0
    acec:	ldr	x0, [x0, #40]
    acf0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    acf4:	add	x1, x1, #0xd70
    acf8:	cmp	x0, #0x0
    acfc:	csel	x0, x1, x0, eq  // eq = none
    ad00:	mov	w1, #0x3                   	// #3
    ad04:	str	w1, [sp, #160]
    ad08:	str	xzr, [sp, #168]
    ad0c:	str	wzr, [sp, #176]
    ad10:	str	wzr, [sp, #180]
    ad14:	str	x19, [sp, #192]
    ad18:	mov	w2, #0x1                   	// #1
    ad1c:	str	w2, [sp, #200]
    ad20:	mov	w1, #0x19                  	// #25
    ad24:	str	w1, [sp, #204]
    ad28:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ad2c:	add	x1, x1, #0xdc8
    ad30:	str	x1, [sp, #208]
    ad34:	str	wzr, [sp, #488]
    ad38:	str	xzr, [sp, #496]
    ad3c:	str	wzr, [sp, #504]
    ad40:	str	wzr, [sp, #508]
    ad44:	str	wzr, [sp, #528]
    ad48:	str	xzr, [sp, #536]
    ad4c:	str	wzr, [sp, #544]
    ad50:	str	wzr, [sp, #548]
    ad54:	str	xzr, [sp, #568]
    ad58:	str	wzr, [sp, #576]
    ad5c:	str	w2, [sp, #480]
    ad60:	str	wzr, [sp, #224]
    ad64:	str	x0, [sp, #240]
    ad68:	add	x0, sp, #0xa0
    ad6c:	bl	7270 <__asan_backtrace_open@plt+0x840>
    ad70:	ldr	x21, [x19, #16]
    ad74:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ad78:	add	x0, x0, #0xd70
    ad7c:	cmp	x21, #0x0
    ad80:	csel	x21, x0, x21, eq  // eq = none
    ad84:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    ad88:	str	xzr, [sp, #152]
    ad8c:	add	x3, sp, #0xa0
    ad90:	add	x2, sp, #0x98
    ad94:	ldr	x1, [x20, #8]
    ad98:	bl	213f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4650>
    ad9c:	and	w0, w0, #0xff
    ada0:	adrp	x20, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ada4:	add	x20, x20, #0xd70
    ada8:	cbz	w0, adc0 <__ubsan_default_options@@Base+0x2af8>
    adac:	ldr	x20, [sp, #152]
    adb0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    adb4:	add	x0, x0, #0xd70
    adb8:	cmp	x20, #0x0
    adbc:	csel	x20, x0, x20, eq  // eq = none
    adc0:	mov	x1, x21
    adc4:	mov	x0, x20
    adc8:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    adcc:	cbz	w0, ae44 <__ubsan_default_options@@Base+0x2b7c>
    add0:	mov	w0, #0x1                   	// #1
    add4:	str	w0, [sp, #160]
    add8:	str	x24, [sp, #168]
    addc:	str	w23, [sp, #176]
    ade0:	str	w22, [sp, #180]
    ade4:	str	w0, [sp, #200]
    ade8:	mov	w0, #0x19                  	// #25
    adec:	str	w0, [sp, #204]
    adf0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    adf4:	add	x0, x0, #0x48
    adf8:	str	x0, [sp, #208]
    adfc:	str	wzr, [sp, #488]
    ae00:	str	xzr, [sp, #496]
    ae04:	str	wzr, [sp, #504]
    ae08:	str	wzr, [sp, #508]
    ae0c:	str	wzr, [sp, #528]
    ae10:	str	xzr, [sp, #536]
    ae14:	str	wzr, [sp, #544]
    ae18:	str	wzr, [sp, #548]
    ae1c:	str	xzr, [sp, #568]
    ae20:	str	wzr, [sp, #576]
    ae24:	str	wzr, [sp, #224]
    ae28:	str	x20, [sp, #240]
    ae2c:	mov	w0, #0x2                   	// #2
    ae30:	str	w0, [sp, #480]
    ae34:	str	wzr, [sp, #256]
    ae38:	str	x21, [sp, #272]
    ae3c:	add	x0, sp, #0xa0
    ae40:	bl	7270 <__asan_backtrace_open@plt+0x840>
    ae44:	mov	x0, x19
    ae48:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
    ae4c:	add	x0, sp, #0x250
    ae50:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    ae54:	ldr	x25, [sp, #48]
    ae58:	b	abb4 <__ubsan_default_options@@Base+0x28ec>
    ae5c:	mov	x4, #0x0                   	// #0
    ae60:	mov	x3, #0x0                   	// #0
    ae64:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ae68:	add	x2, x2, #0x2b8
    ae6c:	mov	w1, #0xbf                  	// #191
    ae70:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ae74:	add	x0, x0, #0x238
    ae78:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>

000000000000ae7c <__ubsan_handle_type_mismatch_v1@@Base>:
    ae7c:	stp	x29, x30, [sp, #-80]!
    ae80:	mov	x29, sp
    ae84:	str	xzr, [x29, #56]
    ae88:	str	x30, [x29, #64]
    ae8c:	ldp	x2, x3, [x29, #56]
    ae90:	stp	x2, x3, [x29, #16]
    ae94:	str	x29, [x29, #32]
    ae98:	add	x2, x29, #0x10
    ae9c:	bl	87b4 <__ubsan_default_options@@Base+0x4ec>
    aea0:	ldp	x29, x30, [sp], #80
    aea4:	ret

000000000000aea8 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
    aea8:	stp	x29, x30, [sp, #-80]!
    aeac:	mov	x29, sp
    aeb0:	stur	wzr, [x29, #57]
    aeb4:	sturh	wzr, [x29, #61]
    aeb8:	strb	wzr, [x29, #63]
    aebc:	mov	w2, #0x1                   	// #1
    aec0:	strb	w2, [x29, #56]
    aec4:	str	x30, [x29, #64]
    aec8:	ldp	x2, x3, [x29, #56]
    aecc:	stp	x2, x3, [x29, #16]
    aed0:	str	x29, [x29, #32]
    aed4:	add	x2, x29, #0x10
    aed8:	bl	87b4 <__ubsan_default_options@@Base+0x4ec>
    aedc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000aee0 <__ubsan_handle_add_overflow@@Base>:
    aee0:	stp	x29, x30, [sp, #-80]!
    aee4:	mov	x29, sp
    aee8:	str	xzr, [x29, #56]
    aeec:	str	x30, [x29, #64]
    aef0:	ldr	x3, [x0, #16]
    aef4:	ldp	x4, x5, [x29, #56]
    aef8:	stp	x4, x5, [x29, #16]
    aefc:	str	x29, [x29, #32]
    af00:	add	x5, x29, #0x10
    af04:	mov	x4, x2
    af08:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    af0c:	add	x2, x2, #0x80
    af10:	bl	8bb4 <__ubsan_default_options@@Base+0x8ec>
    af14:	ldp	x29, x30, [sp], #80
    af18:	ret

000000000000af1c <__ubsan_handle_add_overflow_abort@@Base>:
    af1c:	stp	x29, x30, [sp, #-80]!
    af20:	mov	x29, sp
    af24:	stur	wzr, [x29, #57]
    af28:	sturh	wzr, [x29, #61]
    af2c:	strb	wzr, [x29, #63]
    af30:	mov	w3, #0x1                   	// #1
    af34:	strb	w3, [x29, #56]
    af38:	str	x30, [x29, #64]
    af3c:	ldr	x3, [x0, #16]
    af40:	ldp	x4, x5, [x29, #56]
    af44:	stp	x4, x5, [x29, #16]
    af48:	str	x29, [x29, #32]
    af4c:	add	x5, x29, #0x10
    af50:	mov	x4, x2
    af54:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    af58:	add	x2, x2, #0x80
    af5c:	bl	8bb4 <__ubsan_default_options@@Base+0x8ec>
    af60:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000af64 <__ubsan_handle_sub_overflow@@Base>:
    af64:	stp	x29, x30, [sp, #-80]!
    af68:	mov	x29, sp
    af6c:	str	xzr, [x29, #56]
    af70:	str	x30, [x29, #64]
    af74:	ldr	x3, [x0, #16]
    af78:	ldp	x4, x5, [x29, #56]
    af7c:	stp	x4, x5, [x29, #16]
    af80:	str	x29, [x29, #32]
    af84:	add	x5, x29, #0x10
    af88:	mov	x4, x2
    af8c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    af90:	add	x2, x2, #0x88
    af94:	bl	8bb4 <__ubsan_default_options@@Base+0x8ec>
    af98:	ldp	x29, x30, [sp], #80
    af9c:	ret

000000000000afa0 <__ubsan_handle_sub_overflow_abort@@Base>:
    afa0:	stp	x29, x30, [sp, #-80]!
    afa4:	mov	x29, sp
    afa8:	stur	wzr, [x29, #57]
    afac:	sturh	wzr, [x29, #61]
    afb0:	strb	wzr, [x29, #63]
    afb4:	mov	w3, #0x1                   	// #1
    afb8:	strb	w3, [x29, #56]
    afbc:	str	x30, [x29, #64]
    afc0:	ldr	x3, [x0, #16]
    afc4:	ldp	x4, x5, [x29, #56]
    afc8:	stp	x4, x5, [x29, #16]
    afcc:	str	x29, [x29, #32]
    afd0:	add	x5, x29, #0x10
    afd4:	mov	x4, x2
    afd8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    afdc:	add	x2, x2, #0x88
    afe0:	bl	8bb4 <__ubsan_default_options@@Base+0x8ec>
    afe4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000afe8 <__ubsan_handle_mul_overflow@@Base>:
    afe8:	stp	x29, x30, [sp, #-80]!
    afec:	mov	x29, sp
    aff0:	str	xzr, [x29, #56]
    aff4:	str	x30, [x29, #64]
    aff8:	ldr	x3, [x0, #16]
    affc:	ldp	x4, x5, [x29, #56]
    b000:	stp	x4, x5, [x29, #16]
    b004:	str	x29, [x29, #32]
    b008:	add	x5, x29, #0x10
    b00c:	mov	x4, x2
    b010:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    b014:	add	x2, x2, #0x90
    b018:	bl	8bb4 <__ubsan_default_options@@Base+0x8ec>
    b01c:	ldp	x29, x30, [sp], #80
    b020:	ret

000000000000b024 <__ubsan_handle_mul_overflow_abort@@Base>:
    b024:	stp	x29, x30, [sp, #-80]!
    b028:	mov	x29, sp
    b02c:	stur	wzr, [x29, #57]
    b030:	sturh	wzr, [x29, #61]
    b034:	strb	wzr, [x29, #63]
    b038:	mov	w3, #0x1                   	// #1
    b03c:	strb	w3, [x29, #56]
    b040:	str	x30, [x29, #64]
    b044:	ldr	x3, [x0, #16]
    b048:	ldp	x4, x5, [x29, #56]
    b04c:	stp	x4, x5, [x29, #16]
    b050:	str	x29, [x29, #32]
    b054:	add	x5, x29, #0x10
    b058:	mov	x4, x2
    b05c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    b060:	add	x2, x2, #0x90
    b064:	bl	8bb4 <__ubsan_default_options@@Base+0x8ec>
    b068:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b06c <__ubsan_handle_negate_overflow@@Base>:
    b06c:	stp	x29, x30, [sp, #-80]!
    b070:	mov	x29, sp
    b074:	str	xzr, [x29, #56]
    b078:	str	x30, [x29, #64]
    b07c:	ldp	x2, x3, [x29, #56]
    b080:	stp	x2, x3, [x29, #16]
    b084:	str	x29, [x29, #32]
    b088:	add	x2, x29, #0x10
    b08c:	bl	8e00 <__ubsan_default_options@@Base+0xb38>
    b090:	ldp	x29, x30, [sp], #80
    b094:	ret

000000000000b098 <__ubsan_handle_negate_overflow_abort@@Base>:
    b098:	stp	x29, x30, [sp, #-80]!
    b09c:	mov	x29, sp
    b0a0:	stur	wzr, [x29, #57]
    b0a4:	sturh	wzr, [x29, #61]
    b0a8:	strb	wzr, [x29, #63]
    b0ac:	mov	w2, #0x1                   	// #1
    b0b0:	strb	w2, [x29, #56]
    b0b4:	str	x30, [x29, #64]
    b0b8:	ldp	x2, x3, [x29, #56]
    b0bc:	stp	x2, x3, [x29, #16]
    b0c0:	str	x29, [x29, #32]
    b0c4:	add	x2, x29, #0x10
    b0c8:	bl	8e00 <__ubsan_default_options@@Base+0xb38>
    b0cc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b0d0 <__ubsan_handle_divrem_overflow@@Base>:
    b0d0:	stp	x29, x30, [sp, #-80]!
    b0d4:	mov	x29, sp
    b0d8:	str	xzr, [x29, #56]
    b0dc:	str	x30, [x29, #64]
    b0e0:	ldp	x4, x5, [x29, #56]
    b0e4:	stp	x4, x5, [x29, #16]
    b0e8:	str	x29, [x29, #32]
    b0ec:	add	x3, x29, #0x10
    b0f0:	bl	90a4 <__ubsan_default_options@@Base+0xddc>
    b0f4:	ldp	x29, x30, [sp], #80
    b0f8:	ret

000000000000b0fc <__ubsan_handle_divrem_overflow_abort@@Base>:
    b0fc:	stp	x29, x30, [sp, #-80]!
    b100:	mov	x29, sp
    b104:	stur	wzr, [x29, #57]
    b108:	sturh	wzr, [x29, #61]
    b10c:	strb	wzr, [x29, #63]
    b110:	mov	w3, #0x1                   	// #1
    b114:	strb	w3, [x29, #56]
    b118:	str	x30, [x29, #64]
    b11c:	ldp	x4, x5, [x29, #56]
    b120:	stp	x4, x5, [x29, #16]
    b124:	str	x29, [x29, #32]
    b128:	add	x3, x29, #0x10
    b12c:	bl	90a4 <__ubsan_default_options@@Base+0xddc>
    b130:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b134 <__ubsan_handle_shift_out_of_bounds@@Base>:
    b134:	stp	x29, x30, [sp, #-80]!
    b138:	mov	x29, sp
    b13c:	str	xzr, [x29, #56]
    b140:	str	x30, [x29, #64]
    b144:	ldp	x4, x5, [x29, #56]
    b148:	stp	x4, x5, [x29, #16]
    b14c:	str	x29, [x29, #32]
    b150:	add	x3, x29, #0x10
    b154:	bl	92c8 <__ubsan_default_options@@Base+0x1000>
    b158:	ldp	x29, x30, [sp], #80
    b15c:	ret

000000000000b160 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
    b160:	stp	x29, x30, [sp, #-80]!
    b164:	mov	x29, sp
    b168:	stur	wzr, [x29, #57]
    b16c:	sturh	wzr, [x29, #61]
    b170:	strb	wzr, [x29, #63]
    b174:	mov	w3, #0x1                   	// #1
    b178:	strb	w3, [x29, #56]
    b17c:	str	x30, [x29, #64]
    b180:	ldp	x4, x5, [x29, #56]
    b184:	stp	x4, x5, [x29, #16]
    b188:	str	x29, [x29, #32]
    b18c:	add	x3, x29, #0x10
    b190:	bl	92c8 <__ubsan_default_options@@Base+0x1000>
    b194:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b198 <__ubsan_handle_out_of_bounds@@Base>:
    b198:	stp	x29, x30, [sp, #-80]!
    b19c:	mov	x29, sp
    b1a0:	str	xzr, [x29, #56]
    b1a4:	str	x30, [x29, #64]
    b1a8:	ldp	x2, x3, [x29, #56]
    b1ac:	stp	x2, x3, [x29, #16]
    b1b0:	str	x29, [x29, #32]
    b1b4:	add	x2, x29, #0x10
    b1b8:	bl	96f4 <__ubsan_default_options@@Base+0x142c>
    b1bc:	ldp	x29, x30, [sp], #80
    b1c0:	ret

000000000000b1c4 <__ubsan_handle_out_of_bounds_abort@@Base>:
    b1c4:	stp	x29, x30, [sp, #-80]!
    b1c8:	mov	x29, sp
    b1cc:	stur	wzr, [x29, #57]
    b1d0:	sturh	wzr, [x29, #61]
    b1d4:	strb	wzr, [x29, #63]
    b1d8:	mov	w2, #0x1                   	// #1
    b1dc:	strb	w2, [x29, #56]
    b1e0:	str	x30, [x29, #64]
    b1e4:	ldp	x2, x3, [x29, #56]
    b1e8:	stp	x2, x3, [x29, #16]
    b1ec:	str	x29, [x29, #32]
    b1f0:	add	x2, x29, #0x10
    b1f4:	bl	96f4 <__ubsan_default_options@@Base+0x142c>
    b1f8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b1fc <__ubsan_handle_builtin_unreachable@@Base>:
    b1fc:	stp	x29, x30, [sp, #-80]!
    b200:	mov	x29, sp
    b204:	stur	wzr, [x29, #57]
    b208:	sturh	wzr, [x29, #61]
    b20c:	strb	wzr, [x29, #63]
    b210:	mov	w1, #0x1                   	// #1
    b214:	strb	w1, [x29, #56]
    b218:	str	x30, [x29, #64]
    b21c:	ldp	x2, x3, [x29, #56]
    b220:	stp	x2, x3, [x29, #16]
    b224:	str	x29, [x29, #32]
    b228:	add	x1, x29, #0x10
    b22c:	bl	8588 <__ubsan_default_options@@Base+0x2c0>
    b230:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b234 <__ubsan_handle_missing_return@@Base>:
    b234:	stp	x29, x30, [sp, #-80]!
    b238:	mov	x29, sp
    b23c:	stur	wzr, [x29, #57]
    b240:	sturh	wzr, [x29, #61]
    b244:	strb	wzr, [x29, #63]
    b248:	mov	w1, #0x1                   	// #1
    b24c:	strb	w1, [x29, #56]
    b250:	str	x30, [x29, #64]
    b254:	ldp	x2, x3, [x29, #56]
    b258:	stp	x2, x3, [x29, #16]
    b25c:	str	x29, [x29, #32]
    b260:	add	x1, x29, #0x10
    b264:	bl	8678 <__ubsan_default_options@@Base+0x3b0>
    b268:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b26c <__ubsan_handle_vla_bound_not_positive@@Base>:
    b26c:	stp	x29, x30, [sp, #-80]!
    b270:	mov	x29, sp
    b274:	str	xzr, [x29, #56]
    b278:	str	x30, [x29, #64]
    b27c:	ldp	x2, x3, [x29, #56]
    b280:	stp	x2, x3, [x29, #16]
    b284:	str	x29, [x29, #32]
    b288:	add	x2, x29, #0x10
    b28c:	bl	9868 <__ubsan_default_options@@Base+0x15a0>
    b290:	ldp	x29, x30, [sp], #80
    b294:	ret

000000000000b298 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
    b298:	stp	x29, x30, [sp, #-80]!
    b29c:	mov	x29, sp
    b2a0:	stur	wzr, [x29, #57]
    b2a4:	sturh	wzr, [x29, #61]
    b2a8:	strb	wzr, [x29, #63]
    b2ac:	mov	w2, #0x1                   	// #1
    b2b0:	strb	w2, [x29, #56]
    b2b4:	str	x30, [x29, #64]
    b2b8:	ldp	x2, x3, [x29, #56]
    b2bc:	stp	x2, x3, [x29, #16]
    b2c0:	str	x29, [x29, #32]
    b2c4:	add	x2, x29, #0x10
    b2c8:	bl	9868 <__ubsan_default_options@@Base+0x15a0>
    b2cc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b2d0 <__ubsan_handle_float_cast_overflow@@Base>:
    b2d0:	stp	x29, x30, [sp, #-80]!
    b2d4:	mov	x29, sp
    b2d8:	str	xzr, [x29, #56]
    b2dc:	str	x30, [x29, #64]
    b2e0:	ldp	x2, x3, [x29, #56]
    b2e4:	stp	x2, x3, [x29, #16]
    b2e8:	str	x29, [x29, #32]
    b2ec:	add	x2, x29, #0x10
    b2f0:	bl	99d4 <__ubsan_default_options@@Base+0x170c>
    b2f4:	ldp	x29, x30, [sp], #80
    b2f8:	ret

000000000000b2fc <__ubsan_handle_float_cast_overflow_abort@@Base>:
    b2fc:	stp	x29, x30, [sp, #-80]!
    b300:	mov	x29, sp
    b304:	stur	wzr, [x29, #57]
    b308:	sturh	wzr, [x29, #61]
    b30c:	strb	wzr, [x29, #63]
    b310:	mov	w2, #0x1                   	// #1
    b314:	strb	w2, [x29, #56]
    b318:	str	x30, [x29, #64]
    b31c:	ldp	x2, x3, [x29, #56]
    b320:	stp	x2, x3, [x29, #16]
    b324:	str	x29, [x29, #32]
    b328:	add	x2, x29, #0x10
    b32c:	bl	99d4 <__ubsan_default_options@@Base+0x170c>
    b330:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b334 <__ubsan_handle_load_invalid_value@@Base>:
    b334:	stp	x29, x30, [sp, #-80]!
    b338:	mov	x29, sp
    b33c:	str	xzr, [x29, #56]
    b340:	str	x30, [x29, #64]
    b344:	ldp	x2, x3, [x29, #56]
    b348:	stp	x2, x3, [x29, #16]
    b34c:	str	x29, [x29, #32]
    b350:	add	x2, x29, #0x10
    b354:	bl	9bf8 <__ubsan_default_options@@Base+0x1930>
    b358:	ldp	x29, x30, [sp], #80
    b35c:	ret

000000000000b360 <__ubsan_handle_load_invalid_value_abort@@Base>:
    b360:	stp	x29, x30, [sp, #-80]!
    b364:	mov	x29, sp
    b368:	stur	wzr, [x29, #57]
    b36c:	sturh	wzr, [x29, #61]
    b370:	strb	wzr, [x29, #63]
    b374:	mov	w2, #0x1                   	// #1
    b378:	strb	w2, [x29, #56]
    b37c:	str	x30, [x29, #64]
    b380:	ldp	x2, x3, [x29, #56]
    b384:	stp	x2, x3, [x29, #16]
    b388:	str	x29, [x29, #32]
    b38c:	add	x2, x29, #0x10
    b390:	bl	9bf8 <__ubsan_default_options@@Base+0x1930>
    b394:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b398 <__ubsan_handle_implicit_conversion@@Base>:
    b398:	stp	x29, x30, [sp, #-80]!
    b39c:	mov	x29, sp
    b3a0:	str	xzr, [x29, #56]
    b3a4:	str	x30, [x29, #64]
    b3a8:	ldp	x4, x5, [x29, #56]
    b3ac:	stp	x4, x5, [x29, #16]
    b3b0:	str	x29, [x29, #32]
    b3b4:	mov	x3, x2
    b3b8:	mov	x2, x1
    b3bc:	add	x1, x29, #0x10
    b3c0:	bl	9db4 <__ubsan_default_options@@Base+0x1aec>
    b3c4:	ldp	x29, x30, [sp], #80
    b3c8:	ret

000000000000b3cc <__ubsan_handle_implicit_conversion_abort@@Base>:
    b3cc:	stp	x29, x30, [sp, #-80]!
    b3d0:	mov	x29, sp
    b3d4:	stur	wzr, [x29, #57]
    b3d8:	sturh	wzr, [x29, #61]
    b3dc:	strb	wzr, [x29, #63]
    b3e0:	mov	w3, #0x1                   	// #1
    b3e4:	strb	w3, [x29, #56]
    b3e8:	str	x30, [x29, #64]
    b3ec:	ldp	x4, x5, [x29, #56]
    b3f0:	stp	x4, x5, [x29, #16]
    b3f4:	str	x29, [x29, #32]
    b3f8:	mov	x3, x2
    b3fc:	mov	x2, x1
    b400:	add	x1, x29, #0x10
    b404:	bl	9db4 <__ubsan_default_options@@Base+0x1aec>
    b408:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b40c <__ubsan_handle_invalid_builtin@@Base>:
    b40c:	stp	x29, x30, [sp, #-80]!
    b410:	mov	x29, sp
    b414:	stur	wzr, [x29, #57]
    b418:	sturh	wzr, [x29, #61]
    b41c:	strb	wzr, [x29, #63]
    b420:	mov	w1, #0x1                   	// #1
    b424:	strb	w1, [x29, #56]
    b428:	str	x30, [x29, #64]
    b42c:	ldp	x2, x3, [x29, #56]
    b430:	stp	x2, x3, [x29, #16]
    b434:	str	x29, [x29, #32]
    b438:	add	x1, x29, #0x10
    b43c:	bl	a170 <__ubsan_default_options@@Base+0x1ea8>
    b440:	ldp	x29, x30, [sp], #80
    b444:	ret

000000000000b448 <__ubsan_handle_invalid_builtin_abort@@Base>:
    b448:	stp	x29, x30, [sp, #-80]!
    b44c:	mov	x29, sp
    b450:	stur	wzr, [x29, #57]
    b454:	sturh	wzr, [x29, #61]
    b458:	strb	wzr, [x29, #63]
    b45c:	mov	w1, #0x1                   	// #1
    b460:	strb	w1, [x29, #56]
    b464:	str	x30, [x29, #64]
    b468:	ldp	x2, x3, [x29, #56]
    b46c:	stp	x2, x3, [x29, #16]
    b470:	str	x29, [x29, #32]
    b474:	add	x1, x29, #0x10
    b478:	bl	a170 <__ubsan_default_options@@Base+0x1ea8>
    b47c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b480 <__ubsan_handle_function_type_mismatch@@Base>:
    b480:	stp	x29, x30, [sp, #-80]!
    b484:	mov	x29, sp
    b488:	str	xzr, [x29, #56]
    b48c:	str	x30, [x29, #64]
    b490:	ldp	x2, x3, [x29, #56]
    b494:	stp	x2, x3, [x29, #16]
    b498:	str	x29, [x29, #32]
    b49c:	add	x2, x29, #0x10
    b4a0:	bl	a2d4 <__ubsan_default_options@@Base+0x200c>
    b4a4:	ldp	x29, x30, [sp], #80
    b4a8:	ret

000000000000b4ac <__ubsan_handle_function_type_mismatch_abort@@Base>:
    b4ac:	stp	x29, x30, [sp, #-80]!
    b4b0:	mov	x29, sp
    b4b4:	stur	wzr, [x29, #57]
    b4b8:	sturh	wzr, [x29, #61]
    b4bc:	strb	wzr, [x29, #63]
    b4c0:	mov	w2, #0x1                   	// #1
    b4c4:	strb	w2, [x29, #56]
    b4c8:	str	x30, [x29, #64]
    b4cc:	ldp	x2, x3, [x29, #56]
    b4d0:	stp	x2, x3, [x29, #16]
    b4d4:	str	x29, [x29, #32]
    b4d8:	add	x2, x29, #0x10
    b4dc:	bl	a2d4 <__ubsan_default_options@@Base+0x200c>
    b4e0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b4e4 <__ubsan_handle_nonnull_return_v1@@Base>:
    b4e4:	stp	x29, x30, [sp, #-80]!
    b4e8:	mov	x29, sp
    b4ec:	str	xzr, [x29, #56]
    b4f0:	str	x30, [x29, #64]
    b4f4:	ldp	x2, x3, [x29, #56]
    b4f8:	stp	x2, x3, [x29, #16]
    b4fc:	str	x29, [x29, #32]
    b500:	mov	w3, #0x1                   	// #1
    b504:	add	x2, x29, #0x10
    b508:	bl	a4cc <__ubsan_default_options@@Base+0x2204>
    b50c:	ldp	x29, x30, [sp], #80
    b510:	ret

000000000000b514 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
    b514:	stp	x29, x30, [sp, #-80]!
    b518:	mov	x29, sp
    b51c:	stur	wzr, [x29, #57]
    b520:	sturh	wzr, [x29, #61]
    b524:	strb	wzr, [x29, #63]
    b528:	mov	w3, #0x1                   	// #1
    b52c:	strb	w3, [x29, #56]
    b530:	str	x30, [x29, #64]
    b534:	ldp	x4, x5, [x29, #56]
    b538:	stp	x4, x5, [x29, #16]
    b53c:	str	x29, [x29, #32]
    b540:	add	x2, x29, #0x10
    b544:	bl	a4cc <__ubsan_default_options@@Base+0x2204>
    b548:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b54c <__ubsan_handle_nullability_return_v1@@Base>:
    b54c:	stp	x29, x30, [sp, #-80]!
    b550:	mov	x29, sp
    b554:	str	xzr, [x29, #56]
    b558:	str	x30, [x29, #64]
    b55c:	ldp	x2, x3, [x29, #56]
    b560:	stp	x2, x3, [x29, #16]
    b564:	str	x29, [x29, #32]
    b568:	mov	w3, #0x0                   	// #0
    b56c:	add	x2, x29, #0x10
    b570:	bl	a4cc <__ubsan_default_options@@Base+0x2204>
    b574:	ldp	x29, x30, [sp], #80
    b578:	ret

000000000000b57c <__ubsan_handle_nullability_return_v1_abort@@Base>:
    b57c:	stp	x29, x30, [sp, #-80]!
    b580:	mov	x29, sp
    b584:	stur	wzr, [x29, #57]
    b588:	sturh	wzr, [x29, #61]
    b58c:	strb	wzr, [x29, #63]
    b590:	mov	w2, #0x1                   	// #1
    b594:	strb	w2, [x29, #56]
    b598:	str	x30, [x29, #64]
    b59c:	ldp	x2, x3, [x29, #56]
    b5a0:	stp	x2, x3, [x29, #16]
    b5a4:	str	x29, [x29, #32]
    b5a8:	mov	w3, #0x0                   	// #0
    b5ac:	add	x2, x29, #0x10
    b5b0:	bl	a4cc <__ubsan_default_options@@Base+0x2204>
    b5b4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b5b8 <__ubsan_handle_nonnull_arg@@Base>:
    b5b8:	stp	x29, x30, [sp, #-80]!
    b5bc:	mov	x29, sp
    b5c0:	str	xzr, [x29, #56]
    b5c4:	str	x30, [x29, #64]
    b5c8:	ldp	x2, x3, [x29, #56]
    b5cc:	stp	x2, x3, [x29, #16]
    b5d0:	str	x29, [x29, #32]
    b5d4:	mov	w2, #0x1                   	// #1
    b5d8:	add	x1, x29, #0x10
    b5dc:	bl	a6d4 <__ubsan_default_options@@Base+0x240c>
    b5e0:	ldp	x29, x30, [sp], #80
    b5e4:	ret

000000000000b5e8 <__ubsan_handle_nonnull_arg_abort@@Base>:
    b5e8:	stp	x29, x30, [sp, #-80]!
    b5ec:	mov	x29, sp
    b5f0:	stur	wzr, [x29, #57]
    b5f4:	sturh	wzr, [x29, #61]
    b5f8:	strb	wzr, [x29, #63]
    b5fc:	mov	w2, #0x1                   	// #1
    b600:	strb	w2, [x29, #56]
    b604:	str	x30, [x29, #64]
    b608:	ldp	x4, x5, [x29, #56]
    b60c:	stp	x4, x5, [x29, #16]
    b610:	str	x29, [x29, #32]
    b614:	add	x1, x29, #0x10
    b618:	bl	a6d4 <__ubsan_default_options@@Base+0x240c>
    b61c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b620 <__ubsan_handle_nullability_arg@@Base>:
    b620:	stp	x29, x30, [sp, #-80]!
    b624:	mov	x29, sp
    b628:	str	xzr, [x29, #56]
    b62c:	str	x30, [x29, #64]
    b630:	ldp	x2, x3, [x29, #56]
    b634:	stp	x2, x3, [x29, #16]
    b638:	str	x29, [x29, #32]
    b63c:	mov	w2, #0x0                   	// #0
    b640:	add	x1, x29, #0x10
    b644:	bl	a6d4 <__ubsan_default_options@@Base+0x240c>
    b648:	ldp	x29, x30, [sp], #80
    b64c:	ret

000000000000b650 <__ubsan_handle_nullability_arg_abort@@Base>:
    b650:	stp	x29, x30, [sp, #-80]!
    b654:	mov	x29, sp
    b658:	stur	wzr, [x29, #57]
    b65c:	sturh	wzr, [x29, #61]
    b660:	strb	wzr, [x29, #63]
    b664:	mov	w1, #0x1                   	// #1
    b668:	strb	w1, [x29, #56]
    b66c:	str	x30, [x29, #64]
    b670:	ldp	x2, x3, [x29, #56]
    b674:	stp	x2, x3, [x29, #16]
    b678:	str	x29, [x29, #32]
    b67c:	mov	w2, #0x0                   	// #0
    b680:	add	x1, x29, #0x10
    b684:	bl	a6d4 <__ubsan_default_options@@Base+0x240c>
    b688:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b68c <__ubsan_handle_pointer_overflow@@Base>:
    b68c:	stp	x29, x30, [sp, #-80]!
    b690:	mov	x29, sp
    b694:	str	xzr, [x29, #56]
    b698:	str	x30, [x29, #64]
    b69c:	ldp	x4, x5, [x29, #56]
    b6a0:	stp	x4, x5, [x29, #16]
    b6a4:	str	x29, [x29, #32]
    b6a8:	add	x3, x29, #0x10
    b6ac:	bl	a8c0 <__ubsan_default_options@@Base+0x25f8>
    b6b0:	ldp	x29, x30, [sp], #80
    b6b4:	ret

000000000000b6b8 <__ubsan_handle_pointer_overflow_abort@@Base>:
    b6b8:	stp	x29, x30, [sp, #-80]!
    b6bc:	mov	x29, sp
    b6c0:	stur	wzr, [x29, #57]
    b6c4:	sturh	wzr, [x29, #61]
    b6c8:	strb	wzr, [x29, #63]
    b6cc:	mov	w3, #0x1                   	// #1
    b6d0:	strb	w3, [x29, #56]
    b6d4:	str	x30, [x29, #64]
    b6d8:	ldp	x4, x5, [x29, #56]
    b6dc:	stp	x4, x5, [x29, #16]
    b6e0:	str	x29, [x29, #32]
    b6e4:	add	x3, x29, #0x10
    b6e8:	bl	a8c0 <__ubsan_default_options@@Base+0x25f8>
    b6ec:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b6f0 <__ubsan_handle_cfi_bad_icall@@Base>:
    b6f0:	stp	x29, x30, [sp, #-112]!
    b6f4:	mov	x29, sp
    b6f8:	str	xzr, [x29, #88]
    b6fc:	str	x30, [x29, #96]
    b700:	stur	wzr, [x29, #57]
    b704:	sturh	wzr, [x29, #61]
    b708:	strb	wzr, [x29, #63]
    b70c:	mov	w2, #0x4                   	// #4
    b710:	strb	w2, [x29, #56]
    b714:	ldp	x2, x3, [x0]
    b718:	stp	x2, x3, [x29, #64]
    b71c:	ldr	x0, [x0, #16]
    b720:	str	x0, [x29, #80]
    b724:	ldp	x2, x3, [x29, #88]
    b728:	stp	x2, x3, [x29, #16]
    b72c:	str	x29, [x29, #32]
    b730:	add	x2, x29, #0x10
    b734:	add	x0, x29, #0x38
    b738:	bl	ab2c <__ubsan_default_options@@Base+0x2864>
    b73c:	ldp	x29, x30, [sp], #112
    b740:	ret

000000000000b744 <__ubsan_handle_cfi_bad_icall_abort@@Base>:
    b744:	stp	x29, x30, [sp, #-112]!
    b748:	mov	x29, sp
    b74c:	stur	wzr, [x29, #89]
    b750:	sturh	wzr, [x29, #93]
    b754:	strb	wzr, [x29, #95]
    b758:	mov	w2, #0x1                   	// #1
    b75c:	strb	w2, [x29, #88]
    b760:	str	x30, [x29, #96]
    b764:	stur	wzr, [x29, #57]
    b768:	sturh	wzr, [x29, #61]
    b76c:	strb	wzr, [x29, #63]
    b770:	mov	w2, #0x4                   	// #4
    b774:	strb	w2, [x29, #56]
    b778:	ldp	x2, x3, [x0]
    b77c:	stp	x2, x3, [x29, #64]
    b780:	ldr	x0, [x0, #16]
    b784:	str	x0, [x29, #80]
    b788:	ldp	x2, x3, [x29, #88]
    b78c:	stp	x2, x3, [x29, #16]
    b790:	str	x29, [x29, #32]
    b794:	add	x2, x29, #0x10
    b798:	add	x0, x29, #0x38
    b79c:	bl	ab2c <__ubsan_default_options@@Base+0x2864>
    b7a0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000b7a4 <__ubsan_handle_cfi_check_fail@@Base>:
    b7a4:	stp	x29, x30, [sp, #-80]!
    b7a8:	mov	x29, sp
    b7ac:	str	xzr, [x29, #56]
    b7b0:	str	x30, [x29, #64]
    b7b4:	str	x29, [x29, #72]
    b7b8:	ldrb	w3, [x0]
    b7bc:	sub	w3, w3, #0x4
    b7c0:	and	w3, w3, #0xff
    b7c4:	cmp	w3, #0x1
    b7c8:	b.ls	b7f4 <__ubsan_handle_cfi_check_fail@@Base+0x50>  // b.plast
    b7cc:	ldp	x4, x5, [x29, #56]
    b7d0:	stp	x4, x5, [x29, #16]
    b7d4:	ldr	x3, [x29, #72]
    b7d8:	str	x3, [x29, #32]
    b7dc:	cmp	x2, #0x0
    b7e0:	add	x3, x29, #0x10
    b7e4:	cset	w2, ne  // ne = any
    b7e8:	bl	6840 <__ubsan_handle_cfi_bad_type@plt>
    b7ec:	ldp	x29, x30, [sp], #80
    b7f0:	ret
    b7f4:	ldp	x2, x3, [x29, #56]
    b7f8:	stp	x2, x3, [x29, #16]
    b7fc:	str	x29, [x29, #32]
    b800:	add	x2, x29, #0x10
    b804:	bl	ab2c <__ubsan_default_options@@Base+0x2864>
    b808:	b	b7ec <__ubsan_handle_cfi_check_fail@@Base+0x48>

000000000000b80c <__ubsan_handle_cfi_check_fail_abort@@Base>:
    b80c:	stp	x29, x30, [sp, #-80]!
    b810:	mov	x29, sp
    b814:	stur	wzr, [x29, #57]
    b818:	sturh	wzr, [x29, #61]
    b81c:	strb	wzr, [x29, #63]
    b820:	mov	w3, #0x1                   	// #1
    b824:	strb	w3, [x29, #56]
    b828:	str	x30, [x29, #64]
    b82c:	str	x29, [x29, #72]
    b830:	ldrb	w3, [x0]
    b834:	sub	w3, w3, #0x4
    b838:	and	w3, w3, #0xff
    b83c:	cmp	w3, #0x1
    b840:	b.ls	b868 <__ubsan_handle_cfi_check_fail_abort@@Base+0x5c>  // b.plast
    b844:	ldp	x4, x5, [x29, #56]
    b848:	stp	x4, x5, [x29, #16]
    b84c:	ldr	x3, [x29, #72]
    b850:	str	x3, [x29, #32]
    b854:	cmp	x2, #0x0
    b858:	add	x3, x29, #0x10
    b85c:	cset	w2, ne  // ne = any
    b860:	bl	6840 <__ubsan_handle_cfi_bad_type@plt>
    b864:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    b868:	ldp	x2, x3, [x29, #56]
    b86c:	stp	x2, x3, [x29, #16]
    b870:	str	x29, [x29, #32]
    b874:	add	x2, x29, #0x10
    b878:	bl	ab2c <__ubsan_default_options@@Base+0x2864>
    b87c:	b	b864 <__ubsan_handle_cfi_check_fail_abort@@Base+0x58>
    b880:	sub	sp, sp, #0x2d0
    b884:	stp	x19, x20, [sp]
    b888:	stp	x21, x22, [sp, #16]
    b88c:	str	x30, [sp, #80]
    b890:	mov	x20, x0
    b894:	mov	x21, x1
    b898:	mov	x22, x3
    b89c:	ldr	x1, [x0, #24]
    b8a0:	mov	x0, x21
    b8a4:	bl	c87c <__ubsan_get_current_report_data@@Base+0x364>
    b8a8:	ands	w19, w0, #0xff
    b8ac:	b.eq	b8b8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xac>  // b.none
    b8b0:	mov	w19, #0x0                   	// #0
    b8b4:	b	b94c <__ubsan_handle_cfi_check_fail_abort@@Base+0x140>
    b8b8:	stp	x23, x24, [sp, #32]
    b8bc:	stp	x25, x26, [sp, #48]
    b8c0:	add	x8, sp, #0x2b8
    b8c4:	mov	x0, x21
    b8c8:	bl	c5fc <__ubsan_get_current_report_data@@Base+0xe4>
    b8cc:	ldr	x23, [sp, #696]
    b8d0:	ldr	x25, [sp, #704]
    b8d4:	cbz	x23, b8e8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xdc>
    b8d8:	mov	x0, x23
    b8dc:	bl	7f70 <__asan_backtrace_open@plt+0x1540>
    b8e0:	and	w0, w0, #0xff
    b8e4:	cbnz	w0, bcb0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x4a4>
    b8e8:	stp	x27, x28, [sp, #64]
    b8ec:	add	x0, x20, #0xc
    b8f0:	mov	w1, #0xffffffff            	// #-1
    b8f4:	ldxr	w24, [x0]
    b8f8:	stxr	w2, w1, [x0]
    b8fc:	cbnz	w2, b8f4 <__ubsan_handle_cfi_check_fail_abort@@Base+0xe8>
    b900:	dmb	ish
    b904:	ldr	x27, [x20]
    b908:	ldr	w26, [x20, #8]
    b90c:	mov	x1, #0x0                   	// #0
    b910:	bfxil	x1, x26, #0, #32
    b914:	bfi	x1, x24, #32, #32
    b918:	ldp	x2, x3, [x22]
    b91c:	stp	x2, x3, [sp, #144]
    b920:	ldr	x0, [x22, #16]
    b924:	str	x0, [sp, #160]
    b928:	mov	w3, #0x18                  	// #24
    b92c:	add	x2, sp, #0x90
    b930:	mov	x0, x27
    b934:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    b938:	and	w0, w0, #0xff
    b93c:	cbz	w0, b964 <__ubsan_handle_cfi_check_fail_abort@@Base+0x158>
    b940:	ldp	x23, x24, [sp, #32]
    b944:	ldp	x25, x26, [sp, #48]
    b948:	ldp	x27, x28, [sp, #64]
    b94c:	mov	w0, w19
    b950:	ldp	x19, x20, [sp]
    b954:	ldp	x21, x22, [sp, #16]
    b958:	ldr	x30, [sp, #80]
    b95c:	add	sp, sp, #0x2d0
    b960:	ret
    b964:	mov	w28, #0x1                   	// #1
    b968:	str	w28, [sp, #176]
    b96c:	str	x27, [sp, #184]
    b970:	str	w26, [sp, #192]
    b974:	str	w24, [sp, #196]
    b978:	ldp	x0, x1, [x22]
    b97c:	stp	x0, x1, [sp, #144]
    b980:	ldr	x0, [x22, #16]
    b984:	str	x0, [sp, #160]
    b988:	add	x19, sp, #0xb0
    b98c:	ldp	x0, x1, [sp, #176]
    b990:	stp	x0, x1, [sp, #96]
    b994:	ldp	x0, x1, [sp, #192]
    b998:	stp	x0, x1, [sp, #112]
    b99c:	ldr	x0, [sp, #208]
    b9a0:	str	x0, [sp, #128]
    b9a4:	mov	w3, #0x18                  	// #24
    b9a8:	add	x2, sp, #0x60
    b9ac:	add	x1, sp, #0x90
    b9b0:	add	x0, sp, #0x268
    b9b4:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    b9b8:	str	w28, [sp, #176]
    b9bc:	str	x27, [sp, #184]
    b9c0:	str	w26, [sp, #192]
    b9c4:	str	w24, [sp, #196]
    b9c8:	str	wzr, [sp, #216]
    b9cc:	mov	w0, #0x18                  	// #24
    b9d0:	str	w0, [sp, #220]
    b9d4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    b9d8:	add	x0, x0, #0x170
    b9dc:	str	x0, [sp, #224]
    b9e0:	str	wzr, [sp, #504]
    b9e4:	str	xzr, [sp, #512]
    b9e8:	str	wzr, [sp, #520]
    b9ec:	str	wzr, [sp, #524]
    b9f0:	str	wzr, [sp, #544]
    b9f4:	str	xzr, [sp, #552]
    b9f8:	str	wzr, [sp, #560]
    b9fc:	str	wzr, [sp, #564]
    ba00:	str	xzr, [sp, #584]
    ba04:	str	wzr, [sp, #592]
    ba08:	ldrb	w1, [x20, #32]
    ba0c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ba10:	ldr	x0, [x0, #3760]
    ba14:	ldr	x0, [x0, x1, lsl #3]
    ba18:	str	wzr, [sp, #240]
    ba1c:	str	x0, [sp, #256]
    ba20:	mov	w0, #0x2                   	// #2
    ba24:	str	w0, [sp, #496]
    ba28:	mov	w0, #0x5                   	// #5
    ba2c:	str	w0, [sp, #272]
    ba30:	str	x21, [sp, #288]
    ba34:	ldr	x1, [x20, #16]
    ba38:	mov	x0, x19
    ba3c:	bl	7094 <__asan_backtrace_open@plt+0x664>
    ba40:	mov	x0, x19
    ba44:	bl	7270 <__asan_backtrace_open@plt+0x840>
    ba48:	cbz	x23, baf0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2e4>
    ba4c:	cbnz	x25, bc08 <__ubsan_handle_cfi_check_fail_abort@@Base+0x3fc>
    ba50:	mov	w1, #0x2                   	// #2
    ba54:	str	w1, [sp, #176]
    ba58:	str	xzr, [sp, #184]
    ba5c:	str	wzr, [sp, #192]
    ba60:	str	wzr, [sp, #196]
    ba64:	str	x21, [sp, #200]
    ba68:	mov	w0, #0x1                   	// #1
    ba6c:	str	w0, [sp, #216]
    ba70:	mov	w2, #0x18                  	// #24
    ba74:	str	w2, [sp, #220]
    ba78:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ba7c:	add	x2, x2, #0x230
    ba80:	str	x2, [sp, #224]
    ba84:	str	w0, [sp, #496]
    ba88:	str	w0, [sp, #240]
    ba8c:	str	x23, [sp, #256]
    ba90:	str	w0, [sp, #592]
    ba94:	str	w1, [sp, #504]
    ba98:	str	xzr, [sp, #512]
    ba9c:	str	wzr, [sp, #520]
    baa0:	str	wzr, [sp, #524]
    baa4:	str	x21, [sp, #528]
    baa8:	str	w1, [sp, #544]
    baac:	str	xzr, [sp, #552]
    bab0:	str	wzr, [sp, #560]
    bab4:	str	wzr, [sp, #564]
    bab8:	add	x0, x21, #0x8
    babc:	str	x0, [sp, #568]
    bac0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bac4:	add	x0, x0, #0x248
    bac8:	str	x0, [sp, #584]
    bacc:	add	x0, sp, #0xb0
    bad0:	bl	7270 <__asan_backtrace_open@plt+0x840>
    bad4:	add	x0, sp, #0x268
    bad8:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    badc:	mov	w19, #0x1                   	// #1
    bae0:	ldp	x23, x24, [sp, #32]
    bae4:	ldp	x25, x26, [sp, #48]
    bae8:	ldp	x27, x28, [sp, #64]
    baec:	b	b94c <__ubsan_handle_cfi_check_fail_abort@@Base+0x140>
    baf0:	add	x25, x25, #0x100, lsl #12
    baf4:	cmp	x25, #0x200, lsl #12
    baf8:	b.ls	bb84 <__ubsan_handle_cfi_check_fail_abort@@Base+0x378>  // b.plast
    bafc:	mov	w1, #0x2                   	// #2
    bb00:	str	w1, [sp, #176]
    bb04:	str	xzr, [sp, #184]
    bb08:	str	wzr, [sp, #192]
    bb0c:	str	wzr, [sp, #196]
    bb10:	str	x21, [sp, #200]
    bb14:	mov	w0, #0x1                   	// #1
    bb18:	str	w0, [sp, #216]
    bb1c:	mov	w2, #0x18                  	// #24
    bb20:	str	w2, [sp, #220]
    bb24:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bb28:	add	x2, x2, #0x1d8
    bb2c:	str	x2, [sp, #224]
    bb30:	str	w0, [sp, #496]
    bb34:	str	w0, [sp, #240]
    bb38:	str	xzr, [sp, #256]
    bb3c:	str	w0, [sp, #592]
    bb40:	str	w1, [sp, #504]
    bb44:	str	xzr, [sp, #512]
    bb48:	str	wzr, [sp, #520]
    bb4c:	str	wzr, [sp, #524]
    bb50:	str	x21, [sp, #528]
    bb54:	str	w1, [sp, #544]
    bb58:	str	xzr, [sp, #552]
    bb5c:	str	wzr, [sp, #560]
    bb60:	str	wzr, [sp, #564]
    bb64:	add	x0, x21, #0x8
    bb68:	str	x0, [sp, #568]
    bb6c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bb70:	add	x0, x0, #0x218
    bb74:	str	x0, [sp, #584]
    bb78:	add	x0, sp, #0xb0
    bb7c:	bl	7270 <__asan_backtrace_open@plt+0x840>
    bb80:	b	bad4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2c8>
    bb84:	mov	w1, #0x2                   	// #2
    bb88:	str	w1, [sp, #176]
    bb8c:	str	xzr, [sp, #184]
    bb90:	str	wzr, [sp, #192]
    bb94:	str	wzr, [sp, #196]
    bb98:	str	x21, [sp, #200]
    bb9c:	str	w28, [sp, #216]
    bba0:	mov	w2, #0x18                  	// #24
    bba4:	str	w2, [sp, #220]
    bba8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bbac:	add	x2, x2, #0x1b0
    bbb0:	str	x2, [sp, #224]
    bbb4:	str	w28, [sp, #496]
    bbb8:	str	w28, [sp, #240]
    bbbc:	str	xzr, [sp, #256]
    bbc0:	str	w28, [sp, #592]
    bbc4:	str	w1, [sp, #504]
    bbc8:	str	xzr, [sp, #512]
    bbcc:	str	wzr, [sp, #520]
    bbd0:	str	wzr, [sp, #524]
    bbd4:	str	x21, [sp, #528]
    bbd8:	str	w1, [sp, #544]
    bbdc:	str	xzr, [sp, #552]
    bbe0:	str	wzr, [sp, #560]
    bbe4:	str	wzr, [sp, #564]
    bbe8:	add	x0, x21, #0x8
    bbec:	str	x0, [sp, #568]
    bbf0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bbf4:	add	x0, x0, #0x1c8
    bbf8:	str	x0, [sp, #584]
    bbfc:	add	x0, sp, #0xb0
    bc00:	bl	7270 <__asan_backtrace_open@plt+0x840>
    bc04:	b	bad4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2c8>
    bc08:	mov	w0, #0x2                   	// #2
    bc0c:	str	w0, [sp, #176]
    bc10:	str	xzr, [sp, #184]
    bc14:	str	wzr, [sp, #192]
    bc18:	str	wzr, [sp, #196]
    bc1c:	sub	x1, x21, x25
    bc20:	str	x1, [sp, #200]
    bc24:	mov	w1, #0x1                   	// #1
    bc28:	str	w1, [sp, #216]
    bc2c:	mov	w2, #0x18                  	// #24
    bc30:	str	w2, [sp, #220]
    bc34:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bc38:	add	x2, x2, #0x258
    bc3c:	str	x2, [sp, #224]
    bc40:	str	w0, [sp, #240]
    bc44:	str	x25, [sp, #256]
    bc48:	str	xzr, [sp, #264]
    bc4c:	str	w1, [sp, #272]
    bc50:	str	x23, [sp, #288]
    bc54:	mov	w2, #0x3                   	// #3
    bc58:	str	w2, [sp, #496]
    bc5c:	str	w1, [sp, #304]
    bc60:	ldr	x2, [sp, #712]
    bc64:	str	x2, [sp, #320]
    bc68:	str	w1, [sp, #592]
    bc6c:	str	w0, [sp, #504]
    bc70:	str	xzr, [sp, #512]
    bc74:	str	wzr, [sp, #520]
    bc78:	str	wzr, [sp, #524]
    bc7c:	str	x21, [sp, #528]
    bc80:	str	w0, [sp, #544]
    bc84:	str	xzr, [sp, #552]
    bc88:	str	wzr, [sp, #560]
    bc8c:	str	wzr, [sp, #564]
    bc90:	add	x0, x21, #0x8
    bc94:	str	x0, [sp, #568]
    bc98:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bc9c:	add	x0, x0, #0x2a0
    bca0:	str	x0, [sp, #584]
    bca4:	add	x0, sp, #0xb0
    bca8:	bl	7270 <__asan_backtrace_open@plt+0x840>
    bcac:	b	bad4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2c8>
    bcb0:	ldp	x23, x24, [sp, #32]
    bcb4:	ldp	x25, x26, [sp, #48]
    bcb8:	b	b94c <__ubsan_handle_cfi_check_fail_abort@@Base+0x140>

000000000000bcbc <__ubsan_handle_dynamic_type_cache_miss@@Base>:
    bcbc:	stp	x29, x30, [sp, #-80]!
    bcc0:	mov	x29, sp
    bcc4:	str	xzr, [x29, #56]
    bcc8:	str	x30, [x29, #64]
    bccc:	ldp	x4, x5, [x29, #56]
    bcd0:	stp	x4, x5, [x29, #16]
    bcd4:	str	x29, [x29, #32]
    bcd8:	add	x3, x29, #0x10
    bcdc:	bl	b880 <__ubsan_handle_cfi_check_fail_abort@@Base+0x74>
    bce0:	ldp	x29, x30, [sp], #80
    bce4:	ret

000000000000bce8 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
    bce8:	stp	x29, x30, [sp, #-80]!
    bcec:	mov	x29, sp
    bcf0:	str	xzr, [x29, #56]
    bcf4:	str	x30, [x29, #64]
    bcf8:	ldp	x4, x5, [x29, #56]
    bcfc:	stp	x4, x5, [x29, #16]
    bd00:	str	x29, [x29, #32]
    bd04:	add	x3, x29, #0x10
    bd08:	bl	b880 <__ubsan_handle_cfi_check_fail_abort@@Base+0x74>
    bd0c:	and	w0, w0, #0xff
    bd10:	cbnz	w0, bd1c <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x34>
    bd14:	ldp	x29, x30, [sp], #80
    bd18:	ret
    bd1c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000bd20 <__ubsan_handle_cfi_bad_type@@Base>:
    bd20:	sub	sp, sp, #0x2d0
    bd24:	stp	x19, x20, [sp]
    bd28:	stp	x21, x22, [sp, #16]
    bd2c:	stp	x23, x24, [sp, #32]
    bd30:	stp	x25, x26, [sp, #48]
    bd34:	str	x30, [sp, #64]
    bd38:	mov	x20, x0
    bd3c:	mov	x22, x1
    bd40:	and	w19, w2, #0xff
    bd44:	mov	x21, x3
    bd48:	add	x0, x0, #0x14
    bd4c:	mov	w1, #0xffffffff            	// #-1
    bd50:	ldxr	w23, [x0]
    bd54:	stxr	w2, w1, [x0]
    bd58:	cbnz	w2, bd50 <__ubsan_handle_cfi_bad_type@@Base+0x30>
    bd5c:	dmb	ish
    bd60:	ldr	x25, [x20, #8]
    bd64:	ldr	w24, [x20, #16]
    bd68:	mov	x1, #0x0                   	// #0
    bd6c:	bfxil	x1, x24, #0, #32
    bd70:	bfi	x1, x23, #32, #32
    bd74:	ldp	x2, x3, [x21]
    bd78:	stp	x2, x3, [sp, #128]
    bd7c:	ldr	x0, [x21, #16]
    bd80:	str	x0, [sp, #144]
    bd84:	mov	w3, #0x19                  	// #25
    bd88:	add	x2, sp, #0x80
    bd8c:	mov	x0, x25
    bd90:	bl	8768 <__ubsan_default_options@@Base+0x4a0>
    bd94:	and	w0, w0, #0xff
    bd98:	cbz	w0, bdb8 <__ubsan_handle_cfi_bad_type@@Base+0x98>
    bd9c:	ldp	x19, x20, [sp]
    bda0:	ldp	x21, x22, [sp, #16]
    bda4:	ldp	x23, x24, [sp, #32]
    bda8:	ldp	x25, x26, [sp, #48]
    bdac:	ldr	x30, [sp, #64]
    bdb0:	add	sp, sp, #0x2d0
    bdb4:	ret
    bdb8:	mov	w0, #0x1                   	// #1
    bdbc:	str	w0, [sp, #176]
    bdc0:	str	x25, [sp, #184]
    bdc4:	str	w24, [sp, #192]
    bdc8:	str	w23, [sp, #196]
    bdcc:	ldp	x0, x1, [x21]
    bdd0:	stp	x0, x1, [sp, #128]
    bdd4:	ldr	x0, [x21, #16]
    bdd8:	str	x0, [sp, #144]
    bddc:	ldp	x0, x1, [sp, #176]
    bde0:	stp	x0, x1, [sp, #80]
    bde4:	ldp	x0, x1, [sp, #192]
    bde8:	stp	x0, x1, [sp, #96]
    bdec:	ldr	x0, [sp, #208]
    bdf0:	str	x0, [sp, #112]
    bdf4:	mov	w3, #0x19                  	// #25
    bdf8:	add	x2, sp, #0x50
    bdfc:	add	x1, sp, #0x80
    be00:	add	x0, sp, #0x280
    be04:	bl	7d54 <__asan_backtrace_open@plt+0x1324>
    be08:	mov	x26, #0x0                   	// #0
    be0c:	cbnz	w19, be3c <__ubsan_handle_cfi_bad_type@@Base+0x11c>
    be10:	ldrb	w0, [x20]
    be14:	cmp	w0, #0x2
    be18:	b.eq	c0b8 <__ubsan_handle_cfi_bad_type@@Base+0x398>  // b.none
    be1c:	b.ls	be50 <__ubsan_handle_cfi_bad_type@@Base+0x130>  // b.plast
    be20:	cmp	w0, #0x5
    be24:	b.hi	c0a0 <__ubsan_handle_cfi_bad_type@@Base+0x380>  // b.pmore
    be28:	cmp	w0, #0x3
    be2c:	b.hi	c0b4 <__ubsan_handle_cfi_bad_type@@Base+0x394>  // b.pmore
    be30:	adrp	x19, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    be34:	add	x19, x19, #0x2c0
    be38:	b	be68 <__ubsan_handle_cfi_bad_type@@Base+0x148>
    be3c:	add	x8, sp, #0x268
    be40:	mov	x0, x22
    be44:	bl	c9b8 <__ubsan_get_current_report_data@@Base+0x4a0>
    be48:	ldr	x26, [sp, #616]
    be4c:	b	be10 <__ubsan_handle_cfi_bad_type@@Base+0xf0>
    be50:	adrp	x19, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    be54:	add	x1, x19, #0x308
    be58:	adrp	x19, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    be5c:	add	x19, x19, #0x2f0
    be60:	cmp	w0, #0x0
    be64:	csel	x19, x19, x1, ne  // ne = any
    be68:	mov	w0, #0x1                   	// #1
    be6c:	str	w0, [sp, #176]
    be70:	str	x25, [sp, #184]
    be74:	str	w24, [sp, #192]
    be78:	str	w23, [sp, #196]
    be7c:	str	wzr, [sp, #216]
    be80:	mov	w0, #0x19                  	// #25
    be84:	str	w0, [sp, #220]
    be88:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    be8c:	add	x0, x0, #0x340
    be90:	str	x0, [sp, #224]
    be94:	str	wzr, [sp, #496]
    be98:	str	wzr, [sp, #504]
    be9c:	str	xzr, [sp, #512]
    bea0:	str	wzr, [sp, #520]
    bea4:	str	wzr, [sp, #524]
    bea8:	str	wzr, [sp, #544]
    beac:	str	xzr, [sp, #552]
    beb0:	str	wzr, [sp, #560]
    beb4:	str	wzr, [sp, #564]
    beb8:	str	xzr, [sp, #584]
    bebc:	str	wzr, [sp, #592]
    bec0:	ldr	x1, [x20, #24]
    bec4:	add	x0, sp, #0xb0
    bec8:	bl	7094 <__asan_backtrace_open@plt+0x664>
    becc:	ldr	w2, [x0, #320]
    bed0:	cmp	w2, #0x8
    bed4:	b.eq	c0c4 <__ubsan_handle_cfi_bad_type@@Base+0x3a4>  // b.none
    bed8:	add	w1, w2, #0x1
    bedc:	str	w1, [x0, #320]
    bee0:	ubfiz	x3, x2, #5, #32
    bee4:	add	x3, x3, #0x40
    bee8:	add	x4, x0, x3
    beec:	str	wzr, [x0, x3]
    bef0:	str	x19, [x4, #16]
    bef4:	cmp	w1, #0x8
    bef8:	b.eq	c0e4 <__ubsan_handle_cfi_bad_type@@Base+0x3c4>  // b.none
    befc:	add	w2, w2, #0x2
    bf00:	str	w2, [x0, #320]
    bf04:	ubfiz	x1, x1, #5, #32
    bf08:	add	x1, x1, #0x40
    bf0c:	add	x2, x0, x1
    bf10:	mov	w3, #0x5                   	// #5
    bf14:	str	w3, [x0, x1]
    bf18:	str	x22, [x2, #16]
    bf1c:	add	x0, sp, #0xb0
    bf20:	bl	7270 <__asan_backtrace_open@plt+0x840>
    bf24:	cbz	x26, c104 <__ubsan_handle_cfi_bad_type@@Base+0x3e4>
    bf28:	mov	w0, #0x2                   	// #2
    bf2c:	str	w0, [sp, #176]
    bf30:	str	xzr, [sp, #184]
    bf34:	str	wzr, [sp, #192]
    bf38:	str	wzr, [sp, #196]
    bf3c:	str	x22, [sp, #200]
    bf40:	mov	w0, #0x1                   	// #1
    bf44:	str	w0, [sp, #216]
    bf48:	mov	w1, #0x19                  	// #25
    bf4c:	str	w1, [sp, #220]
    bf50:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    bf54:	add	x1, x1, #0x3a0
    bf58:	str	x1, [sp, #224]
    bf5c:	str	wzr, [sp, #504]
    bf60:	str	xzr, [sp, #512]
    bf64:	str	wzr, [sp, #520]
    bf68:	str	wzr, [sp, #524]
    bf6c:	str	wzr, [sp, #544]
    bf70:	str	xzr, [sp, #552]
    bf74:	str	wzr, [sp, #560]
    bf78:	str	wzr, [sp, #564]
    bf7c:	str	xzr, [sp, #584]
    bf80:	str	wzr, [sp, #592]
    bf84:	str	w0, [sp, #496]
    bf88:	str	w0, [sp, #240]
    bf8c:	str	x26, [sp, #256]
    bf90:	add	x0, sp, #0xb0
    bf94:	bl	7270 <__asan_backtrace_open@plt+0x840>
    bf98:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    bf9c:	str	xzr, [sp, #168]
    bfa0:	add	x3, sp, #0xb0
    bfa4:	add	x2, sp, #0xa8
    bfa8:	mov	x1, x22
    bfac:	bl	213f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4650>
    bfb0:	and	w0, w0, #0xff
    bfb4:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    bfb8:	add	x19, x19, #0xd70
    bfbc:	cbz	w0, bfd4 <__ubsan_handle_cfi_bad_type@@Base+0x2b4>
    bfc0:	ldr	x19, [sp, #168]
    bfc4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    bfc8:	add	x0, x0, #0xd70
    bfcc:	cmp	x19, #0x0
    bfd0:	csel	x19, x0, x19, eq  // eq = none
    bfd4:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    bfd8:	str	xzr, [sp, #168]
    bfdc:	add	x3, sp, #0xb0
    bfe0:	add	x2, sp, #0xa8
    bfe4:	ldr	x1, [x21, #8]
    bfe8:	bl	213f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4650>
    bfec:	and	w0, w0, #0xff
    bff0:	adrp	x20, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    bff4:	add	x20, x20, #0xd70
    bff8:	cbz	w0, c010 <__ubsan_handle_cfi_bad_type@@Base+0x2f0>
    bffc:	ldr	x20, [sp, #168]
    c000:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c004:	add	x0, x0, #0xd70
    c008:	cmp	x20, #0x0
    c00c:	csel	x20, x0, x20, eq  // eq = none
    c010:	mov	x1, x19
    c014:	mov	x0, x20
    c018:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    c01c:	cbz	w0, c094 <__ubsan_handle_cfi_bad_type@@Base+0x374>
    c020:	mov	w0, #0x1                   	// #1
    c024:	str	w0, [sp, #176]
    c028:	str	x25, [sp, #184]
    c02c:	str	w24, [sp, #192]
    c030:	str	w23, [sp, #196]
    c034:	str	w0, [sp, #216]
    c038:	mov	w0, #0x19                  	// #25
    c03c:	str	w0, [sp, #220]
    c040:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c044:	add	x0, x0, #0x3b8
    c048:	str	x0, [sp, #224]
    c04c:	str	wzr, [sp, #504]
    c050:	str	xzr, [sp, #512]
    c054:	str	wzr, [sp, #520]
    c058:	str	wzr, [sp, #524]
    c05c:	str	wzr, [sp, #544]
    c060:	str	xzr, [sp, #552]
    c064:	str	wzr, [sp, #560]
    c068:	str	wzr, [sp, #564]
    c06c:	str	xzr, [sp, #584]
    c070:	str	wzr, [sp, #592]
    c074:	str	wzr, [sp, #240]
    c078:	str	x20, [sp, #256]
    c07c:	mov	w0, #0x2                   	// #2
    c080:	str	w0, [sp, #496]
    c084:	str	wzr, [sp, #272]
    c088:	str	x19, [sp, #288]
    c08c:	add	x0, sp, #0xb0
    c090:	bl	7270 <__asan_backtrace_open@plt+0x840>
    c094:	add	x0, sp, #0x280
    c098:	bl	7db8 <__asan_backtrace_open@plt+0x1388>
    c09c:	b	bd9c <__ubsan_handle_cfi_bad_type@@Base+0x7c>
    c0a0:	adrp	x19, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c0a4:	add	x19, x19, #0x318
    c0a8:	cmp	w0, #0x6
    c0ac:	csel	x19, x19, xzr, eq  // eq = none
    c0b0:	b	be68 <__ubsan_handle_cfi_bad_type@@Base+0x148>
    c0b4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    c0b8:	adrp	x19, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c0bc:	add	x19, x19, #0x2d8
    c0c0:	b	be68 <__ubsan_handle_cfi_bad_type@@Base+0x148>
    c0c4:	mov	x4, #0x0                   	// #0
    c0c8:	mov	x3, #0x0                   	// #0
    c0cc:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c0d0:	add	x2, x2, #0x2b8
    c0d4:	mov	w1, #0xbf                  	// #191
    c0d8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c0dc:	add	x0, x0, #0x238
    c0e0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c0e4:	mov	x4, #0x0                   	// #0
    c0e8:	mov	x3, #0x0                   	// #0
    c0ec:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c0f0:	add	x2, x2, #0x2b8
    c0f4:	mov	w1, #0xbf                  	// #191
    c0f8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c0fc:	add	x0, x0, #0x238
    c100:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c104:	mov	w0, #0x2                   	// #2
    c108:	str	w0, [sp, #176]
    c10c:	str	xzr, [sp, #184]
    c110:	str	wzr, [sp, #192]
    c114:	str	wzr, [sp, #196]
    c118:	str	x22, [sp, #200]
    c11c:	mov	w0, #0x1                   	// #1
    c120:	str	w0, [sp, #216]
    c124:	mov	w0, #0x19                  	// #25
    c128:	str	w0, [sp, #220]
    c12c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c130:	add	x0, x0, #0x390
    c134:	str	x0, [sp, #224]
    c138:	str	wzr, [sp, #496]
    c13c:	str	wzr, [sp, #504]
    c140:	str	xzr, [sp, #512]
    c144:	str	wzr, [sp, #520]
    c148:	str	wzr, [sp, #524]
    c14c:	str	wzr, [sp, #544]
    c150:	str	xzr, [sp, #552]
    c154:	str	wzr, [sp, #560]
    c158:	str	wzr, [sp, #564]
    c15c:	str	xzr, [sp, #584]
    c160:	str	wzr, [sp, #592]
    c164:	add	x0, sp, #0xb0
    c168:	bl	7270 <__asan_backtrace_open@plt+0x840>
    c16c:	b	bf98 <__ubsan_handle_cfi_bad_type@@Base+0x278>
    c170:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c174:	add	x0, x0, #0x3e8
    c178:	ret
    c17c:	stp	x19, x30, [sp, #-16]!
    c180:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c184:	add	x0, x0, #0xe68
    c188:	mov	w2, #0x1                   	// #1
    c18c:	ldxrb	w1, [x0]
    c190:	stxrb	w3, w2, [x0]
    c194:	cbnz	w3, c18c <__ubsan_handle_cfi_bad_type@@Base+0x46c>
    c198:	dmb	ish
    c19c:	and	w0, w1, #0xff
    c1a0:	cbnz	w0, c1c4 <__ubsan_handle_cfi_bad_type@@Base+0x4a4>
    c1a4:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c1a8:	ldrb	w0, [x0, #3689]
    c1ac:	cbz	w0, c1d4 <__ubsan_handle_cfi_bad_type@@Base+0x4b4>
    c1b0:	dmb	ish
    c1b4:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c1b8:	strb	wzr, [x0, #3688]
    c1bc:	ldp	x19, x30, [sp], #16
    c1c0:	ret
    c1c4:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c1c8:	add	x0, x0, #0xe68
    c1cc:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    c1d0:	b	c1a4 <__ubsan_handle_cfi_bad_type@@Base+0x484>
    c1d4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c1d8:	ldr	x0, [x0, #4024]
    c1dc:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c1e0:	add	x1, x1, #0x3e8
    c1e4:	str	x1, [x0]
    c1e8:	bl	f648 <__sancov_default_options@@Base+0x294c>
    c1ec:	bl	83cc <__ubsan_default_options@@Base+0x104>
    c1f0:	adrp	x19, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c1f4:	ldr	x19, [x19, #4056]
    c1f8:	ldr	x0, [x19, #40]
    c1fc:	bl	69e0 <__sanitizer_set_report_path@plt>
    c200:	bl	17a14 <__sanitizer_set_report_fd@@Base+0x4bd0>
    c204:	ldr	x1, [x19, #168]
    c208:	ldrb	w0, [x19, #161]
    c20c:	bl	1001c <__sanitizer_sandbox_on_notify@@Base+0x134>
    c210:	bl	7efc <__asan_backtrace_open@plt+0x14cc>
    c214:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c218:	mov	w1, #0x1                   	// #1
    c21c:	strb	w1, [x0, #3689]
    c220:	b	c1b0 <__ubsan_handle_cfi_bad_type@@Base+0x490>
    c224:	str	x30, [sp, #-16]!
    c228:	bl	c17c <__ubsan_handle_cfi_bad_type@@Base+0x45c>
    c22c:	ldr	x30, [sp], #16
    c230:	ret
    c234:	str	x30, [sp, #-16]!
    c238:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c23c:	add	x0, x0, #0xe68
    c240:	mov	w2, #0x1                   	// #1
    c244:	ldxrb	w1, [x0]
    c248:	stxrb	w3, w2, [x0]
    c24c:	cbnz	w3, c244 <__ubsan_handle_cfi_bad_type@@Base+0x524>
    c250:	dmb	ish
    c254:	and	w0, w1, #0xff
    c258:	cbnz	w0, c27c <__ubsan_handle_cfi_bad_type@@Base+0x55c>
    c25c:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c260:	ldrb	w0, [x0, #3689]
    c264:	cbz	w0, c28c <__ubsan_handle_cfi_bad_type@@Base+0x56c>
    c268:	dmb	ish
    c26c:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c270:	strb	wzr, [x0, #3688]
    c274:	ldr	x30, [sp], #16
    c278:	ret
    c27c:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c280:	add	x0, x0, #0xe68
    c284:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    c288:	b	c25c <__ubsan_handle_cfi_bad_type@@Base+0x53c>
    c28c:	bl	7efc <__asan_backtrace_open@plt+0x14cc>
    c290:	adrp	x0, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c294:	mov	w1, #0x1                   	// #1
    c298:	strb	w1, [x0, #3689]
    c29c:	b	c268 <__ubsan_handle_cfi_bad_type@@Base+0x548>
    c2a0:	stp	x19, x20, [sp, #-32]!
    c2a4:	stp	x21, x30, [sp, #16]
    c2a8:	mov	x20, x0
    c2ac:	mov	w19, #0x0                   	// #0
    c2b0:	mov	w21, #0x1                   	// #1
    c2b4:	b	c2dc <__ubsan_handle_cfi_bad_type@@Base+0x5bc>
    c2b8:	bl	156c4 <__sanitizer_set_report_fd@@Base+0x2880>
    c2bc:	b	c2e4 <__ubsan_handle_cfi_bad_type@@Base+0x5c4>
    c2c0:	ldxrb	w0, [x20]
    c2c4:	stxrb	w1, w21, [x20]
    c2c8:	cbnz	w1, c2c0 <__ubsan_handle_cfi_bad_type@@Base+0x5a0>
    c2cc:	dmb	ish
    c2d0:	and	w0, w0, #0xff
    c2d4:	cbz	w0, c2f4 <__ubsan_handle_cfi_bad_type@@Base+0x5d4>
    c2d8:	add	w19, w19, #0x1
    c2dc:	cmp	w19, #0x9
    c2e0:	b.gt	c2b8 <__ubsan_handle_cfi_bad_type@@Base+0x598>
    c2e4:	ldrb	w1, [x20]
    c2e8:	and	w1, w1, #0xff
    c2ec:	cbnz	w1, c2d8 <__ubsan_handle_cfi_bad_type@@Base+0x5b8>
    c2f0:	b	c2c0 <__ubsan_handle_cfi_bad_type@@Base+0x5a0>
    c2f4:	ldp	x21, x30, [sp, #16]
    c2f8:	ldp	x19, x20, [sp], #32
    c2fc:	ret

000000000000c300 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@@Base>:
    c300:	adrp	x1, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c304:	str	x0, [x1, #3696]
    c308:	ret

000000000000c30c <__ubsan_on_report@@Base>:
    c30c:	ret
    c310:	stp	x19, x20, [sp, #-64]!
    c314:	stp	x21, x22, [sp, #16]
    c318:	stp	x23, x24, [sp, #32]
    c31c:	stp	x25, x30, [sp, #48]
    c320:	mov	x19, x0
    c324:	str	x1, [x0]
    c328:	str	x2, [x0, #8]
    c32c:	add	x22, x0, #0x10
    c330:	ldr	x0, [x3, #24]
    c334:	str	xzr, [x22, #8]
    c338:	str	xzr, [x22, #16]
    c33c:	str	xzr, [x19, #16]
    c340:	adds	x20, x0, #0x1
    c344:	b.ne	c374 <__ubsan_on_report@@Base+0x68>  // b.any
    c348:	add	x19, x19, #0x10
    c34c:	str	x20, [x19, #16]
    c350:	str	xzr, [x19, #24]
    c354:	mov	x4, #0x0                   	// #0
    c358:	mov	x3, #0x0                   	// #0
    c35c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c360:	add	x2, x2, #0x368
    c364:	mov	w1, #0x1b6                 	// #438
    c368:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c36c:	add	x0, x0, #0x380
    c370:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c374:	mov	x21, x3
    c378:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c37c:	ldr	x0, [x0, #4016]
    c380:	ldr	x0, [x0]
    c384:	cbz	x0, c454 <__ubsan_on_report@@Base+0x148>
    c388:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c38c:	ldr	x0, [x0, #4016]
    c390:	ldr	x23, [x0]
    c394:	sub	x0, x23, #0x1
    c398:	tst	x23, x0
    c39c:	b.ne	c468 <__ubsan_on_report@@Base+0x15c>  // b.any
    c3a0:	add	x0, x20, x0
    c3a4:	neg	x23, x23
    c3a8:	and	x23, x0, x23
    c3ac:	mov	w2, #0x0                   	// #0
    c3b0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c3b4:	add	x1, x1, #0x350
    c3b8:	mov	x0, x23
    c3bc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    c3c0:	mov	x25, x0
    c3c4:	ldr	x2, [x19, #32]
    c3c8:	ldr	x1, [x19, #16]
    c3cc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    c3d0:	ldr	x1, [x19, #24]
    c3d4:	ldr	x0, [x19, #16]
    c3d8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    c3dc:	str	x25, [x19, #16]
    c3e0:	str	x23, [x19, #24]
    c3e4:	ldr	x0, [x19, #32]
    c3e8:	cmp	x20, x0
    c3ec:	b.ls	c50c <__ubsan_on_report@@Base+0x200>  // b.plast
    c3f0:	cmp	x20, x23
    c3f4:	b.hi	c478 <__ubsan_on_report@@Base+0x16c>  // b.pmore
    c3f8:	ldr	x0, [x19, #32]
    c3fc:	ldr	x3, [x19, #16]
    c400:	sub	x2, x20, x0
    c404:	mov	w1, #0x0                   	// #0
    c408:	add	x0, x3, x0
    c40c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    c410:	str	x20, [x19, #32]
    c414:	str	xzr, [x19, #40]
    c418:	ldr	x0, [x19, #16]
    c41c:	strb	wzr, [x0]
    c420:	mov	x0, x19
    c424:	bl	65a0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>
    c428:	ldr	x2, [x21]
    c42c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c430:	add	x1, x1, #0x288
    c434:	mov	x0, x22
    c438:	bl	1a490 <OnPrint@@Base+0x46c>
    c43c:	bl	66d0 <__ubsan_on_report@plt>
    c440:	ldp	x21, x22, [sp, #16]
    c444:	ldp	x23, x24, [sp, #32]
    c448:	ldp	x25, x30, [sp, #48]
    c44c:	ldp	x19, x20, [sp], #64
    c450:	ret
    c454:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    c458:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c45c:	ldr	x1, [x1, #4016]
    c460:	str	x0, [x1]
    c464:	b	c388 <__ubsan_on_report@@Base+0x7c>
    c468:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c46c:	add	x0, x0, #0x338
    c470:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    c474:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    c478:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c47c:	ldr	x0, [x0, #4016]
    c480:	ldr	x0, [x0]
    c484:	cbz	x0, c4e8 <__ubsan_on_report@@Base+0x1dc>
    c488:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c48c:	ldr	x0, [x0, #4016]
    c490:	ldr	x23, [x0]
    c494:	sub	x0, x23, #0x1
    c498:	tst	x23, x0
    c49c:	b.ne	c4fc <__ubsan_on_report@@Base+0x1f0>  // b.any
    c4a0:	add	x0, x20, x0
    c4a4:	neg	x23, x23
    c4a8:	and	x23, x0, x23
    c4ac:	mov	w2, #0x0                   	// #0
    c4b0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c4b4:	add	x1, x1, #0x350
    c4b8:	mov	x0, x23
    c4bc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    c4c0:	mov	x25, x0
    c4c4:	ldr	x2, [x19, #32]
    c4c8:	ldr	x1, [x19, #16]
    c4cc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    c4d0:	ldr	x1, [x19, #24]
    c4d4:	ldr	x0, [x19, #16]
    c4d8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    c4dc:	str	x25, [x19, #16]
    c4e0:	str	x23, [x19, #24]
    c4e4:	b	c3f8 <__ubsan_on_report@@Base+0xec>
    c4e8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    c4ec:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c4f0:	ldr	x1, [x1, #4016]
    c4f4:	str	x0, [x1]
    c4f8:	b	c488 <__ubsan_on_report@@Base+0x17c>
    c4fc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c500:	add	x0, x0, #0x338
    c504:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    c508:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    c50c:	str	x20, [x19, #32]
    c510:	str	xzr, [x19, #40]
    c514:	b	c418 <__ubsan_on_report@@Base+0x10c>

000000000000c518 <__ubsan_get_current_report_data@@Base>:
    c518:	cmp	x0, #0x0
    c51c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    c520:	b.eq	c5b4 <__ubsan_get_current_report_data@@Base+0x9c>  // b.none
    c524:	cmp	x2, #0x0
    c528:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    c52c:	b.eq	c5b4 <__ubsan_get_current_report_data@@Base+0x9c>  // b.none
    c530:	cmp	x4, #0x0
    c534:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    c538:	b.eq	c5b4 <__ubsan_get_current_report_data@@Base+0x9c>  // b.none
    c53c:	adrp	x6, 5e000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    c540:	ldr	x6, [x6, #3696]
    c544:	ldr	x9, [x6, #16]
    c548:	ldrb	w8, [x9]
    c54c:	sub	w7, w8, #0x61
    c550:	and	w7, w7, #0xff
    c554:	cmp	w7, #0x19
    c558:	b.hi	c564 <__ubsan_get_current_report_data@@Base+0x4c>  // b.pmore
    c55c:	sub	w8, w8, #0x20
    c560:	strb	w8, [x9]
    c564:	ldr	x7, [x6]
    c568:	str	x7, [x0]
    c56c:	ldr	x0, [x6, #16]
    c570:	str	x0, [x1]
    c574:	ldr	x0, [x6, #8]
    c578:	ldr	w1, [x0]
    c57c:	cmp	w1, #0x1
    c580:	b.eq	c5d8 <__ubsan_get_current_report_data@@Base+0xc0>  // b.none
    c584:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    c588:	add	x0, x0, #0x2d8
    c58c:	str	x0, [x2]
    c590:	str	wzr, [x4]
    c594:	str	wzr, [x3]
    c598:	ldr	x1, [x6, #8]
    c59c:	ldr	w2, [x1]
    c5a0:	mov	x0, #0x0                   	// #0
    c5a4:	cmp	w2, #0x2
    c5a8:	b.eq	c5f4 <__ubsan_get_current_report_data@@Base+0xdc>  // b.none
    c5ac:	str	x0, [x5]
    c5b0:	ret
    c5b4:	str	x30, [sp, #-16]!
    c5b8:	mov	x4, #0x0                   	// #0
    c5bc:	mov	x3, #0x0                   	// #0
    c5c0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c5c4:	add	x2, x2, #0x408
    c5c8:	mov	w1, #0x30                  	// #48
    c5cc:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    c5d0:	add	x0, x0, #0x458
    c5d4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c5d8:	ldr	x7, [x0, #8]
    c5dc:	ldr	w1, [x0, #16]
    c5e0:	ldr	w0, [x0, #20]
    c5e4:	str	x7, [x2]
    c5e8:	str	w1, [x3]
    c5ec:	str	w0, [x4]
    c5f0:	b	c598 <__ubsan_get_current_report_data@@Base+0x80>
    c5f4:	ldr	x0, [x1, #24]
    c5f8:	b	c5ac <__ubsan_get_current_report_data@@Base+0x94>
    c5fc:	str	x30, [sp, #-16]!
    c600:	ldr	x0, [x0]
    c604:	bl	c9b8 <__ubsan_get_current_report_data@@Base+0x4a0>
    c608:	ldr	x30, [sp], #16
    c60c:	ret
    c610:	stp	x19, x20, [sp, #-48]!
    c614:	str	x30, [sp, #40]
    c618:	mov	x19, x0
    c61c:	cbz	x1, c668 <__ubsan_get_current_report_data@@Base+0x150>
    c620:	str	x23, [sp, #32]
    c624:	mov	x23, x1
    c628:	cbz	x0, c70c <__ubsan_get_current_report_data@@Base+0x1f4>
    c62c:	stp	x21, x22, [sp, #16]
    c630:	mov	x3, #0x0                   	// #0
    c634:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c638:	ldr	x2, [x2, #3960]
    c63c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c640:	ldr	x1, [x1, #4064]
    c644:	bl	66e0 <__dynamic_cast@plt>
    c648:	mov	x22, x0
    c64c:	cbz	x0, c678 <__ubsan_get_current_report_data@@Base+0x160>
    c650:	mov	x1, x23
    c654:	ldr	x0, [x0, #16]
    c658:	bl	c610 <__ubsan_get_current_report_data@@Base+0xf8>
    c65c:	mov	x19, x0
    c660:	ldp	x21, x22, [sp, #16]
    c664:	ldr	x23, [sp, #32]
    c668:	mov	x0, x19
    c66c:	ldr	x30, [sp, #40]
    c670:	ldp	x19, x20, [sp], #48
    c674:	ret
    c678:	mov	x3, #0x0                   	// #0
    c67c:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c680:	ldr	x2, [x2, #3920]
    c684:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c688:	ldr	x1, [x1, #4064]
    c68c:	mov	x0, x19
    c690:	bl	66e0 <__dynamic_cast@plt>
    c694:	mov	x19, x0
    c698:	cbz	x0, c714 <__ubsan_get_current_report_data@@Base+0x1fc>
    c69c:	ldr	w21, [x0, #20]
    c6a0:	cbz	w21, c6fc <__ubsan_get_current_report_data@@Base+0x1e4>
    c6a4:	add	x20, x0, #0x18
    c6a8:	sub	w21, w21, #0x1
    c6ac:	add	x19, x0, #0x28
    c6b0:	add	x21, x19, x21, lsl #4
    c6b4:	b	c6c4 <__ubsan_get_current_report_data@@Base+0x1ac>
    c6b8:	add	x20, x20, #0x10
    c6bc:	cmp	x20, x21
    c6c0:	b.eq	c6ec <__ubsan_get_current_report_data@@Base+0x1d4>  // b.none
    c6c4:	ldr	x1, [x20, #8]
    c6c8:	tbnz	w1, #0, c6b8 <__ubsan_get_current_report_data@@Base+0x1a0>
    c6cc:	sub	x1, x23, x1, asr #8
    c6d0:	ldr	x0, [x20]
    c6d4:	bl	c610 <__ubsan_get_current_report_data@@Base+0xf8>
    c6d8:	mov	x19, x0
    c6dc:	cbz	x0, c6b8 <__ubsan_get_current_report_data@@Base+0x1a0>
    c6e0:	ldp	x21, x22, [sp, #16]
    c6e4:	ldr	x23, [sp, #32]
    c6e8:	b	c668 <__ubsan_get_current_report_data@@Base+0x150>
    c6ec:	mov	x19, x22
    c6f0:	ldp	x21, x22, [sp, #16]
    c6f4:	ldr	x23, [sp, #32]
    c6f8:	b	c668 <__ubsan_get_current_report_data@@Base+0x150>
    c6fc:	mov	x19, x22
    c700:	ldp	x21, x22, [sp, #16]
    c704:	ldr	x23, [sp, #32]
    c708:	b	c668 <__ubsan_get_current_report_data@@Base+0x150>
    c70c:	ldr	x23, [sp, #32]
    c710:	b	c668 <__ubsan_get_current_report_data@@Base+0x150>
    c714:	ldp	x21, x22, [sp, #16]
    c718:	ldr	x23, [sp, #32]
    c71c:	b	c668 <__ubsan_get_current_report_data@@Base+0x150>
    c720:	stp	x19, x20, [sp, #-32]!
    c724:	str	x30, [sp, #16]
    c728:	mov	x19, x0
    c72c:	sub	x20, x0, #0x10
    c730:	mov	x1, #0x10                  	// #16
    c734:	mov	x0, x20
    c738:	bl	18e38 <__sanitizer_set_report_fd@@Base+0x5ff4>
    c73c:	and	w0, w0, #0xff
    c740:	cbz	w0, c760 <__ubsan_get_current_report_data@@Base+0x248>
    c744:	ldur	x0, [x19, #-8]
    c748:	cmp	x0, #0x0
    c74c:	csel	x20, x20, x0, ne  // ne = any
    c750:	mov	x0, x20
    c754:	ldr	x30, [sp, #16]
    c758:	ldp	x19, x20, [sp], #32
    c75c:	ret
    c760:	mov	x20, #0x0                   	// #0
    c764:	b	c750 <__ubsan_get_current_report_data@@Base+0x238>
    c768:	stp	x19, x20, [sp, #-48]!
    c76c:	stp	x21, x22, [sp, #16]
    c770:	str	x30, [sp, #32]
    c774:	mov	x20, x0
    c778:	mov	x19, x1
    c77c:	mov	x21, x2
    c780:	ldr	x0, [x0, #8]
    c784:	ldr	x1, [x1, #8]
    c788:	cmp	x0, x1
    c78c:	b.eq	c7dc <__ubsan_get_current_report_data@@Base+0x2c4>  // b.none
    c790:	ldrb	w2, [x0]
    c794:	cmp	w2, #0x2a
    c798:	b.ne	c7d4 <__ubsan_get_current_report_data@@Base+0x2bc>  // b.any
    c79c:	mov	x3, #0x0                   	// #0
    c7a0:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c7a4:	ldr	x2, [x2, #3960]
    c7a8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c7ac:	ldr	x1, [x1, #4064]
    c7b0:	mov	x0, x20
    c7b4:	bl	66e0 <__dynamic_cast@plt>
    c7b8:	cbz	x0, c7f4 <__ubsan_get_current_report_data@@Base+0x2dc>
    c7bc:	mov	x2, x21
    c7c0:	mov	x1, x19
    c7c4:	ldr	x0, [x0, #16]
    c7c8:	bl	c768 <__ubsan_get_current_report_data@@Base+0x250>
    c7cc:	and	w0, w0, #0xff
    c7d0:	b	c7e4 <__ubsan_get_current_report_data@@Base+0x2cc>
    c7d4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
    c7d8:	cbnz	w0, c79c <__ubsan_get_current_report_data@@Base+0x284>
    c7dc:	cmp	x21, #0x0
    c7e0:	cset	w0, eq  // eq = none
    c7e4:	ldp	x21, x22, [sp, #16]
    c7e8:	ldr	x30, [sp, #32]
    c7ec:	ldp	x19, x20, [sp], #48
    c7f0:	ret
    c7f4:	mov	x3, #0x0                   	// #0
    c7f8:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c7fc:	ldr	x2, [x2, #3920]
    c800:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c804:	ldr	x1, [x1, #4064]
    c808:	mov	x0, x20
    c80c:	bl	66e0 <__dynamic_cast@plt>
    c810:	mov	x22, x0
    c814:	cbz	x0, c864 <__ubsan_get_current_report_data@@Base+0x34c>
    c818:	ldr	w0, [x0, #20]
    c81c:	cbz	w0, c86c <__ubsan_get_current_report_data@@Base+0x354>
    c820:	mov	w20, #0x0                   	// #0
    c824:	ubfiz	x3, x20, #4, #32
    c828:	add	x3, x22, x3
    c82c:	ldr	x0, [x3, #32]
    c830:	asr	x2, x0, #8
    c834:	tbnz	w0, #0, c874 <__ubsan_get_current_report_data@@Base+0x35c>
    c838:	sub	x2, x21, x2
    c83c:	mov	x1, x19
    c840:	ldr	x0, [x3, #24]
    c844:	bl	c768 <__ubsan_get_current_report_data@@Base+0x250>
    c848:	ands	w0, w0, #0xff
    c84c:	b.ne	c7e4 <__ubsan_get_current_report_data@@Base+0x2cc>  // b.any
    c850:	add	w20, w20, #0x1
    c854:	ldr	w1, [x22, #20]
    c858:	cmp	w1, w20
    c85c:	b.ne	c824 <__ubsan_get_current_report_data@@Base+0x30c>  // b.any
    c860:	b	c7e4 <__ubsan_get_current_report_data@@Base+0x2cc>
    c864:	mov	w0, #0x0                   	// #0
    c868:	b	c7e4 <__ubsan_get_current_report_data@@Base+0x2cc>
    c86c:	mov	w0, #0x0                   	// #0
    c870:	b	c7e4 <__ubsan_get_current_report_data@@Base+0x2cc>
    c874:	mov	w0, #0x1                   	// #1
    c878:	b	c7e4 <__ubsan_get_current_report_data@@Base+0x2cc>
    c87c:	stp	x19, x20, [sp, #-48]!
    c880:	stp	x21, x22, [sp, #16]
    c884:	str	x30, [sp, #32]
    c888:	mov	x21, x1
    c88c:	mov	x19, x2
    c890:	and	w3, w2, #0xffff
    c894:	eor	w3, w3, #0x1
    c898:	lsr	w6, w2, #16
    c89c:	mov	w2, w3
    c8a0:	mov	w1, #0x5                   	// #5
    c8a4:	adrp	x5, 5f000 <__ubsan_vptr_type_cache@@Base+0x188>
    c8a8:	add	x5, x5, #0x278
    c8ac:	ldr	x4, [x5, w2, uxtw #3]
    c8b0:	cmp	x4, #0x0
    c8b4:	ccmp	x19, x4, #0x4, ne  // ne = any
    c8b8:	b.eq	c974 <__ubsan_get_current_report_data@@Base+0x45c>  // b.none
    c8bc:	add	w4, w6, w2
    c8c0:	add	w2, w4, #0x1
    c8c4:	sub	w4, w4, #0x10, lsl #12
    c8c8:	cmp	w2, #0x10, lsl #12
    c8cc:	csel	w2, w4, w2, hi  // hi = pmore
    c8d0:	subs	w1, w1, #0x1
    c8d4:	b.ne	c8ac <__ubsan_get_current_report_data@@Base+0x394>  // b.any
    c8d8:	mov	w2, w3
    c8dc:	adrp	x1, 5f000 <__ubsan_vptr_type_cache@@Base+0x188>
    c8e0:	add	x1, x1, #0x278
    c8e4:	add	x20, x1, w3, uxth #3
    c8e8:	ldr	x4, [x1, x2, lsl #3]
    c8ec:	cmp	x4, x19
    c8f0:	b.eq	c984 <__ubsan_get_current_report_data@@Base+0x46c>  // b.none
    c8f4:	ldr	x0, [x0]
    c8f8:	bl	c720 <__ubsan_get_current_report_data@@Base+0x208>
    c8fc:	mov	x1, x0
    c900:	cbz	x0, c9a8 <__ubsan_get_current_report_data@@Base+0x490>
    c904:	ldr	x22, [x0]
    c908:	add	x2, x22, #0x100, lsl #12
    c90c:	mov	w0, #0x0                   	// #0
    c910:	cmp	x2, #0x200, lsl #12
    c914:	b.hi	c998 <__ubsan_get_current_report_data@@Base+0x480>  // b.pmore
    c918:	ldr	x0, [x1, #8]
    c91c:	cbz	x0, c9b0 <__ubsan_get_current_report_data@@Base+0x498>
    c920:	mov	x3, #0x0                   	// #0
    c924:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c928:	ldr	x2, [x2, #4064]
    c92c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c930:	ldr	x1, [x1, #3928]
    c934:	bl	66e0 <__dynamic_cast@plt>
    c938:	mov	x3, x0
    c93c:	mov	w0, #0x0                   	// #0
    c940:	cbz	x3, c998 <__ubsan_get_current_report_data@@Base+0x480>
    c944:	neg	x2, x22
    c948:	mov	x1, x21
    c94c:	mov	x0, x3
    c950:	bl	c768 <__ubsan_get_current_report_data@@Base+0x250>
    c954:	ands	w0, w0, #0xff
    c958:	b.eq	c998 <__ubsan_get_current_report_data@@Base+0x480>  // b.none
    c95c:	and	x2, x19, #0x7f
    c960:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c964:	ldr	x1, [x1, #3792]
    c968:	str	x19, [x1, x2, lsl #3]
    c96c:	str	x19, [x20]
    c970:	b	c998 <__ubsan_get_current_report_data@@Base+0x480>
    c974:	adrp	x3, 5f000 <__ubsan_vptr_type_cache@@Base+0x188>
    c978:	add	x3, x3, #0x278
    c97c:	add	x20, x3, w2, uxtw #3
    c980:	b	c8ec <__ubsan_get_current_report_data@@Base+0x3d4>
    c984:	and	x1, x19, #0x7f
    c988:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    c98c:	ldr	x0, [x0, #3792]
    c990:	str	x19, [x0, x1, lsl #3]
    c994:	mov	w0, #0x1                   	// #1
    c998:	ldp	x21, x22, [sp, #16]
    c99c:	ldr	x30, [sp, #32]
    c9a0:	ldp	x19, x20, [sp], #48
    c9a4:	ret
    c9a8:	mov	w0, #0x0                   	// #0
    c9ac:	b	c998 <__ubsan_get_current_report_data@@Base+0x480>
    c9b0:	mov	w0, #0x0                   	// #0
    c9b4:	b	c998 <__ubsan_get_current_report_data@@Base+0x480>
    c9b8:	stp	x19, x20, [sp, #-32]!
    c9bc:	str	x30, [sp, #24]
    c9c0:	mov	x19, x8
    c9c4:	bl	c720 <__ubsan_get_current_report_data@@Base+0x208>
    c9c8:	cbz	x0, c9f4 <__ubsan_get_current_report_data@@Base+0x4dc>
    c9cc:	ldr	x1, [x0]
    c9d0:	add	x2, x1, #0x100, lsl #12
    c9d4:	cmp	x2, #0x200, lsl #12
    c9d8:	b.ls	ca04 <__ubsan_get_current_report_data@@Base+0x4ec>  // b.plast
    c9dc:	str	xzr, [x19]
    c9e0:	str	x1, [x19, #8]
    c9e4:	str	xzr, [x19, #16]
    c9e8:	ldr	x30, [sp, #24]
    c9ec:	ldp	x19, x20, [sp], #32
    c9f0:	ret
    c9f4:	str	xzr, [x19]
    c9f8:	str	xzr, [x19, #8]
    c9fc:	str	xzr, [x19, #16]
    ca00:	b	c9e8 <__ubsan_get_current_report_data@@Base+0x4d0>
    ca04:	str	x21, [sp, #16]
    ca08:	ldr	x21, [x0, #8]
    ca0c:	neg	x20, x1
    ca10:	mov	x1, x20
    ca14:	mov	x0, x21
    ca18:	bl	c610 <__ubsan_get_current_report_data@@Base+0xf8>
    ca1c:	ldr	x1, [x21, #8]
    ca20:	cbz	x0, ca3c <__ubsan_get_current_report_data@@Base+0x524>
    ca24:	ldr	x0, [x0, #8]
    ca28:	str	x1, [x19]
    ca2c:	str	x20, [x19, #8]
    ca30:	str	x0, [x19, #16]
    ca34:	ldr	x21, [sp, #16]
    ca38:	b	c9e8 <__ubsan_get_current_report_data@@Base+0x4d0>
    ca3c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ca40:	add	x0, x0, #0x2d8
    ca44:	b	ca28 <__ubsan_get_current_report_data@@Base+0x510>
    ca48:	str	x30, [sp, #-16]!
    ca4c:	ldr	x1, [x0]
    ca50:	ldrh	w2, [x1]
    ca54:	cbnz	w2, cb0c <__ubsan_get_current_report_data@@Base+0x5f4>
    ca58:	ldrh	w1, [x1, #2]
    ca5c:	tbz	w1, #0, cb0c <__ubsan_get_current_report_data@@Base+0x5f4>
    ca60:	asr	w2, w1, #1
    ca64:	mov	w1, #0x1                   	// #1
    ca68:	lsl	w1, w1, w2
    ca6c:	cmp	w1, #0x40
    ca70:	b.ls	ca90 <__ubsan_get_current_report_data@@Base+0x578>  // b.plast
    ca74:	cmp	w1, #0x80
    ca78:	b.ne	caec <__ubsan_get_current_report_data@@Base+0x5d4>  // b.any
    ca7c:	ldr	x1, [x0, #8]
    ca80:	ldr	x0, [x1]
    ca84:	ldr	x1, [x1, #8]
    ca88:	ldr	x30, [sp], #16
    ca8c:	ret
    ca90:	mov	w2, #0x80                  	// #128
    ca94:	sub	w2, w2, w1
    ca98:	ldr	x0, [x0, #8]
    ca9c:	sub	w3, w2, #0x40
    caa0:	lsl	x1, x0, x3
    caa4:	lsr	x5, x0, #1
    caa8:	mov	w4, #0x3f                  	// #63
    caac:	sub	w4, w4, w2
    cab0:	lsr	x5, x5, x4
    cab4:	lsl	x0, x0, x2
    cab8:	cmp	w3, #0x0
    cabc:	csel	x1, x1, x5, ge  // ge = tcont
    cac0:	csel	x0, xzr, x0, ge  // ge = tcont
    cac4:	asr	x7, x1, x3
    cac8:	asr	x6, x1, #63
    cacc:	lsl	x5, x1, #1
    cad0:	lsl	x4, x5, x4
    cad4:	lsr	x0, x0, x2
    cad8:	orr	x0, x4, x0
    cadc:	asr	x1, x1, x2
    cae0:	csel	x0, x7, x0, ge  // ge = tcont
    cae4:	csel	x1, x6, x1, ge  // ge = tcont
    cae8:	b	ca88 <__ubsan_get_current_report_data@@Base+0x570>
    caec:	mov	x4, #0x0                   	// #0
    caf0:	mov	x3, #0x0                   	// #0
    caf4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    caf8:	add	x2, x2, #0x488
    cafc:	mov	w1, #0x27                  	// #39
    cb00:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cb04:	add	x0, x0, #0x4b0
    cb08:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cb0c:	mov	x4, #0x0                   	// #0
    cb10:	mov	x3, #0x0                   	// #0
    cb14:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cb18:	add	x2, x2, #0x4e0
    cb1c:	mov	w1, #0x16                  	// #22
    cb20:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cb24:	add	x0, x0, #0x4b0
    cb28:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cb2c:	str	x30, [sp, #-16]!
    cb30:	ldr	x1, [x0]
    cb34:	ldrh	w2, [x1]
    cb38:	cbnz	w2, cba0 <__ubsan_get_current_report_data@@Base+0x688>
    cb3c:	ldrh	w1, [x1, #2]
    cb40:	tbnz	w1, #0, cba0 <__ubsan_get_current_report_data@@Base+0x688>
    cb44:	asr	w1, w1, #1
    cb48:	mov	w2, #0x1                   	// #1
    cb4c:	lsl	w1, w2, w1
    cb50:	cmp	w1, #0x40
    cb54:	b.hi	cb68 <__ubsan_get_current_report_data@@Base+0x650>  // b.pmore
    cb58:	ldr	x0, [x0, #8]
    cb5c:	mov	x1, #0x0                   	// #0
    cb60:	ldr	x30, [sp], #16
    cb64:	ret
    cb68:	cmp	w1, #0x80
    cb6c:	b.ne	cb80 <__ubsan_get_current_report_data@@Base+0x668>  // b.any
    cb70:	ldr	x1, [x0, #8]
    cb74:	ldr	x0, [x1]
    cb78:	ldr	x1, [x1, #8]
    cb7c:	b	cb60 <__ubsan_get_current_report_data@@Base+0x648>
    cb80:	mov	x4, #0x0                   	// #0
    cb84:	mov	x3, #0x0                   	// #0
    cb88:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cb8c:	add	x2, x2, #0x488
    cb90:	mov	w1, #0x37                  	// #55
    cb94:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cb98:	add	x0, x0, #0x4b0
    cb9c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cba0:	mov	x4, #0x0                   	// #0
    cba4:	mov	x3, #0x0                   	// #0
    cba8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cbac:	add	x2, x2, #0x510
    cbb0:	mov	w1, #0x2b                  	// #43
    cbb4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cbb8:	add	x0, x0, #0x4b0
    cbbc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cbc0:	str	x30, [sp, #-16]!
    cbc4:	ldr	x1, [x0]
    cbc8:	ldrh	w2, [x1]
    cbcc:	cbnz	w2, cbe0 <__ubsan_get_current_report_data@@Base+0x6c8>
    cbd0:	ldrh	w1, [x1, #2]
    cbd4:	tbnz	w1, #0, cbe0 <__ubsan_get_current_report_data@@Base+0x6c8>
    cbd8:	bl	cb2c <__ubsan_get_current_report_data@@Base+0x614>
    cbdc:	b	cbe8 <__ubsan_get_current_report_data@@Base+0x6d0>
    cbe0:	bl	ca48 <__ubsan_get_current_report_data@@Base+0x530>
    cbe4:	tbnz	x1, #63, cbf0 <__ubsan_get_current_report_data@@Base+0x6d8>
    cbe8:	ldr	x30, [sp], #16
    cbec:	ret
    cbf0:	mov	x4, #0x0                   	// #0
    cbf4:	mov	x3, #0x0                   	// #0
    cbf8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cbfc:	add	x2, x2, #0x540
    cc00:	mov	w1, #0x3e                  	// #62
    cc04:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cc08:	add	x0, x0, #0x4b0
    cc0c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cc10:	str	x30, [sp, #-32]!
    cc14:	ldr	x1, [x0]
    cc18:	ldrh	w2, [x1]
    cc1c:	cmp	w2, #0x1
    cc20:	b.ne	cc5c <__ubsan_get_current_report_data@@Base+0x744>  // b.any
    cc24:	ldrh	w1, [x1, #2]
    cc28:	cmp	w1, #0x40
    cc2c:	b.hi	cc9c <__ubsan_get_current_report_data@@Base+0x784>  // b.pmore
    cc30:	cmp	w1, #0x20
    cc34:	b.eq	cc7c <__ubsan_get_current_report_data@@Base+0x764>  // b.none
    cc38:	cmp	w1, #0x40
    cc3c:	b.ne	ccdc <__ubsan_get_current_report_data@@Base+0x7c4>  // b.any
    cc40:	mov	x2, #0x8                   	// #8
    cc44:	add	x1, x0, x2
    cc48:	add	x0, sp, #0x18
    cc4c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    cc50:	ldr	d0, [sp, #24]
    cc54:	bl	6820 <__extenddftf2@plt>
    cc58:	b	cc94 <__ubsan_get_current_report_data@@Base+0x77c>
    cc5c:	mov	x4, #0x0                   	// #0
    cc60:	mov	x3, #0x0                   	// #0
    cc64:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cc68:	add	x2, x2, #0x558
    cc6c:	mov	w1, #0x46                  	// #70
    cc70:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cc74:	add	x0, x0, #0x4b0
    cc78:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cc7c:	mov	x2, #0x4                   	// #4
    cc80:	add	x1, x0, #0x8
    cc84:	add	x0, sp, #0x18
    cc88:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    cc8c:	ldr	s0, [sp, #24]
    cc90:	bl	6910 <__extendsftf2@plt>
    cc94:	ldr	x30, [sp], #32
    cc98:	ret
    cc9c:	cmp	w1, #0x60
    cca0:	b.eq	ccd0 <__ubsan_get_current_report_data@@Base+0x7b8>  // b.none
    cca4:	b.hi	ccbc <__ubsan_get_current_report_data@@Base+0x7a4>  // b.pmore
    cca8:	cmp	w1, #0x50
    ccac:	b.ne	ccdc <__ubsan_get_current_report_data@@Base+0x7c4>  // b.any
    ccb0:	ldr	x0, [x0, #8]
    ccb4:	ldr	q0, [x0]
    ccb8:	b	cc94 <__ubsan_get_current_report_data@@Base+0x77c>
    ccbc:	cmp	w1, #0x80
    ccc0:	b.ne	ccdc <__ubsan_get_current_report_data@@Base+0x7c4>  // b.any
    ccc4:	ldr	x0, [x0, #8]
    ccc8:	ldr	q0, [x0]
    cccc:	b	cc94 <__ubsan_get_current_report_data@@Base+0x77c>
    ccd0:	ldr	x0, [x0, #8]
    ccd4:	ldr	q0, [x0]
    ccd8:	b	cc94 <__ubsan_get_current_report_data@@Base+0x77c>
    ccdc:	mov	x4, #0x0                   	// #0
    cce0:	mov	x3, #0x0                   	// #0
    cce4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cce8:	add	x2, x2, #0x580
    ccec:	mov	w1, #0x6c                  	// #108
    ccf0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ccf4:	add	x0, x0, #0x4b0
    ccf8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>

000000000000ccfc <__sancov_default_options@@Base>:
    ccfc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    cd00:	add	x0, x0, #0x640
    cd04:	ret
    cd08:	mov	w1, #0x1                   	// #1
    cd0c:	strb	w1, [x0]
    cd10:	strb	wzr, [x0, #1]
    cd14:	ret
    cd18:	stp	x19, x20, [sp, #-80]!
    cd1c:	stp	x21, x22, [sp, #16]
    cd20:	str	x30, [sp, #32]
    cd24:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cd28:	add	x20, x0, #0x280
    cd2c:	mov	w1, #0x1                   	// #1
    cd30:	strb	w1, [x0, #640]
    cd34:	strb	wzr, [x20, #1]
    cd38:	add	x19, sp, #0x30
    cd3c:	mov	x0, x19
    cd40:	bl	14508 <__sanitizer_set_report_fd@@Base+0x16c4>
    cd44:	adrp	x22, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    cd48:	ldr	x22, [x22, #3776]
    cd4c:	mov	x1, #0x10                  	// #16
    cd50:	mov	x0, x22
    cd54:	bl	cfac <__sancov_default_options@@Base+0x2b0>
    cd58:	mov	x2, x0
    cd5c:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
    cd60:	add	x21, x21, #0xd48
    cd64:	str	x21, [x0]
    cd68:	str	x20, [x0, #8]
    cd6c:	adrp	x3, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cd70:	add	x3, x3, #0x5b8
    cd74:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cd78:	add	x1, x1, #0x608
    cd7c:	mov	x0, x19
    cd80:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
    cd84:	mov	x1, #0x10                  	// #16
    cd88:	mov	x0, x22
    cd8c:	bl	cfac <__sancov_default_options@@Base+0x2b0>
    cd90:	mov	x2, x0
    cd94:	str	x21, [x0]
    cd98:	add	x0, x20, #0x1
    cd9c:	str	x0, [x2, #8]
    cda0:	adrp	x3, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cda4:	add	x3, x3, #0x618
    cda8:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cdac:	add	x1, x1, #0x630
    cdb0:	mov	x0, x19
    cdb4:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
    cdb8:	bl	6a20 <__sancov_default_options@plt>
    cdbc:	mov	x1, x0
    cdc0:	mov	x0, x19
    cdc4:	bl	14394 <__sanitizer_set_report_fd@@Base+0x1550>
    cdc8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    cdcc:	add	x0, x0, #0x638
    cdd0:	bl	157e8 <__sanitizer_set_report_fd@@Base+0x29a4>
    cdd4:	mov	x1, x0
    cdd8:	mov	x0, x19
    cddc:	bl	14394 <__sanitizer_set_report_fd@@Base+0x1550>
    cde0:	bl	13ec0 <__sanitizer_set_report_fd@@Base+0x107c>
    cde4:	ldrb	w0, [x20, #1]
    cde8:	cbnz	w0, cdfc <__sancov_default_options@@Base+0x100>
    cdec:	ldp	x21, x22, [sp, #16]
    cdf0:	ldr	x30, [sp, #32]
    cdf4:	ldp	x19, x20, [sp], #80
    cdf8:	ret
    cdfc:	add	x0, sp, #0x30
    ce00:	bl	13f94 <__sanitizer_set_report_fd@@Base+0x1150>
    ce04:	b	cdec <__sancov_default_options@@Base+0xf0>
    ce08:	str	x30, [sp, #-16]!
    ce0c:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ce10:	mov	w2, #0x1                   	// #1
    ce14:	strb	w2, [x1, #704]
    ce18:	mov	x2, x0
    ce1c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ce20:	ldr	x0, [x0, #4024]
    ce24:	ldr	x1, [x0]
    ce28:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ce2c:	add	x0, x0, #0x648
    ce30:	bl	1a3fc <OnPrint@@Base+0x3d8>
    ce34:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ce38:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ce3c:	add	x0, x0, #0x2c0
    ce40:	ldrb	w0, [x0, #8]
    ce44:	and	w0, w0, #0xff
    ce48:	dmb	ish
    ce4c:	cbz	w0, ce5c <__sancov_default_options@@Base+0x160>
    ce50:	adrp	x0, ec000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    ce54:	add	x0, x0, #0xb40
    ce58:	ret
    ce5c:	stp	x19, x20, [sp, #-32]!
    ce60:	str	x30, [sp, #16]
    ce64:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ce68:	add	x0, x0, #0x2c0
    ce6c:	add	x0, x0, #0x10
    ce70:	mov	w2, #0x1                   	// #1
    ce74:	ldxrb	w1, [x0]
    ce78:	stxrb	w3, w2, [x0]
    ce7c:	cbnz	w3, ce74 <__sancov_default_options@@Base+0x178>
    ce80:	dmb	ish
    ce84:	and	w0, w1, #0xff
    ce88:	cbnz	w0, cec4 <__sancov_default_options@@Base+0x1c8>
    ce8c:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ce90:	add	x0, x0, #0x2c0
    ce94:	ldrb	w0, [x0, #8]
    ce98:	and	w0, w0, #0xff
    ce9c:	cbz	w0, ced8 <__sancov_default_options@@Base+0x1dc>
    cea0:	dmb	ish
    cea4:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cea8:	add	x0, x0, #0x2c0
    ceac:	strb	wzr, [x0, #16]
    ceb0:	adrp	x0, ec000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    ceb4:	add	x0, x0, #0xb40
    ceb8:	ldr	x30, [sp, #16]
    cebc:	ldp	x19, x20, [sp], #32
    cec0:	ret
    cec4:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cec8:	add	x0, x0, #0x2c0
    cecc:	add	x0, x0, #0x10
    ced0:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    ced4:	b	ce8c <__sancov_default_options@@Base+0x190>
    ced8:	adrp	x19, ec000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    cedc:	add	x19, x19, #0xb40
    cee0:	mov	x2, #0x80000               	// #524288
    cee4:	mov	w1, #0x0                   	// #0
    cee8:	mov	x0, x19
    ceec:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    cef0:	add	x19, x19, #0x80, lsl #12
    cef4:	strb	wzr, [x19]
    cef8:	mov	x2, #0xd80                 	// #3456
    cefc:	mov	w1, #0x0                   	// #0
    cf00:	adrp	x0, 16c000 <__ubsan_vptr_type_cache@@Base+0x10d188>
    cf04:	add	x0, x0, #0xb80
    cf08:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    cf0c:	mov	x2, #0x248                 	// #584
    cf10:	movk	x2, #0x4, lsl #16
    cf14:	mov	w1, #0x0                   	// #0
    cf18:	adrp	x0, 16d000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    cf1c:	add	x0, x0, #0x900
    cf20:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    cf24:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    cf28:	ldr	x0, [x0, #4016]
    cf2c:	ldr	x0, [x0]
    cf30:	cbz	x0, cf98 <__sancov_default_options@@Base+0x29c>
    cf34:	adrp	x19, ec000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    cf38:	add	x19, x19, #0xb40
    cf3c:	add	x1, x19, #0x80, lsl #12
    cf40:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    cf44:	ldr	x0, [x0, #4016]
    cf48:	ldr	x0, [x0]
    cf4c:	str	x0, [x1, #3520]
    cf50:	adrp	x0, 16d000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    cf54:	add	x0, x0, #0x910
    cf58:	str	x0, [x1, #3528]
    cf5c:	mov	x2, #0x28                  	// #40
    cf60:	mov	w1, #0x0                   	// #0
    cf64:	adrp	x20, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    cf68:	add	x0, x20, #0xb48
    cf6c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    cf70:	add	x19, x19, #0xc0, lsl #12
    cf74:	add	x20, x20, #0xb48
    cf78:	str	x20, [x19, #4104]
    cf7c:	str	x20, [x19, #4112]
    cf80:	dmb	ish
    cf84:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cf88:	add	x0, x0, #0x2c0
    cf8c:	mov	w1, #0x1                   	// #1
    cf90:	strb	w1, [x0, #8]
    cf94:	b	cea0 <__sancov_default_options@@Base+0x1a4>
    cf98:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    cf9c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    cfa0:	ldr	x1, [x1, #4016]
    cfa4:	str	x0, [x1]
    cfa8:	b	cf34 <__sancov_default_options@@Base+0x238>
    cfac:	stp	x19, x20, [sp, #-32]!
    cfb0:	str	x30, [sp, #24]
    cfb4:	mov	x20, x0
    cfb8:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    cfbc:	ldr	x2, [x0, #1208]
    cfc0:	sub	x19, x2, #0x1
    cfc4:	tst	x2, x19
    cfc8:	b.ne	d074 <__sancov_default_options@@Base+0x378>  // b.any
    cfcc:	add	x1, x1, x19
    cfd0:	neg	x2, x2
    cfd4:	and	x19, x1, x2
    cfd8:	ldr	x0, [x20, #8]
    cfdc:	ldr	x1, [x20]
    cfe0:	sub	x1, x1, x0
    cfe4:	cmp	x1, x19
    cfe8:	b.ge	d060 <__sancov_default_options@@Base+0x364>  // b.tcont
    cfec:	str	x21, [sp, #16]
    cff0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    cff4:	ldr	x0, [x0, #4016]
    cff8:	ldr	x0, [x0]
    cffc:	cbz	x0, d088 <__sancov_default_options@@Base+0x38c>
    d000:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    d004:	ldr	x0, [x0, #4016]
    d008:	ldr	x21, [x0]
    d00c:	cmp	x21, x19
    d010:	csel	x21, x21, x19, cs  // cs = hs, nlast
    d014:	mov	w2, #0x0                   	// #0
    d018:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d01c:	add	x1, x1, #0x698
    d020:	mov	x0, x21
    d024:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    d028:	str	x0, [x20, #8]
    d02c:	add	x1, x0, x21
    d030:	str	x1, [x20]
    d034:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d038:	ldr	x2, [x1, #728]
    d03c:	cbz	x2, d048 <__sancov_default_options@@Base+0x34c>
    d040:	mov	x1, x21
    d044:	blr	x2
    d048:	ldr	x0, [x20, #8]
    d04c:	ldr	x1, [x20]
    d050:	sub	x1, x1, x0
    d054:	cmp	x19, x1
    d058:	b.gt	d09c <__sancov_default_options@@Base+0x3a0>
    d05c:	ldr	x21, [sp, #16]
    d060:	add	x19, x0, x19
    d064:	str	x19, [x20, #8]
    d068:	ldr	x30, [sp, #24]
    d06c:	ldp	x19, x20, [sp], #32
    d070:	ret
    d074:	str	x21, [sp, #16]
    d078:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    d07c:	add	x0, x0, #0x338
    d080:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    d084:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    d088:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    d08c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    d090:	ldr	x1, [x1, #4016]
    d094:	str	x0, [x1]
    d098:	b	d000 <__sancov_default_options@@Base+0x304>
    d09c:	mov	x4, #0x0                   	// #0
    d0a0:	mov	x3, #0x0                   	// #0
    d0a4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d0a8:	add	x2, x2, #0x6a8
    d0ac:	mov	w1, #0xd4                  	// #212
    d0b0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d0b4:	add	x0, x0, #0x6e8
    d0b8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d0bc:	sub	x1, x0, #0x1
    d0c0:	tst	x1, x0
    d0c4:	b.ne	d0e0 <__sancov_default_options@@Base+0x3e4>  // b.any
    d0c8:	adrp	x2, 5c000 <_Unwind_Backtrace@GCC_3.3>
    d0cc:	ldr	x1, [x2, #1208]
    d0d0:	cmp	x1, x0
    d0d4:	csel	x0, x1, x0, cs  // cs = hs, nlast
    d0d8:	str	x0, [x2, #1208]
    d0dc:	ret
    d0e0:	str	x30, [sp, #-16]!
    d0e4:	mov	x4, #0x0                   	// #0
    d0e8:	mov	x3, #0x0                   	// #0
    d0ec:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d0f0:	add	x2, x2, #0x730
    d0f4:	mov	w1, #0xdb                  	// #219
    d0f8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d0fc:	add	x0, x0, #0x6e8
    d100:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d104:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d108:	str	x0, [x1, #728]
    d10c:	ret
    d110:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d114:	ldrb	w0, [x0, #704]
    d118:	ands	w0, w0, #0xff
    d11c:	cset	w0, ne  // ne = any
    d120:	ret
    d124:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d128:	mov	w1, #0x1                   	// #1
    d12c:	strb	w1, [x0, #704]
    d130:	ret
    d134:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d138:	add	x0, x0, #0x2c0
    d13c:	ldrb	w0, [x0, #32]
    d140:	ands	w0, w0, #0xff
    d144:	cset	w0, ne  // ne = any
    d148:	ret
    d14c:	and	w0, w0, #0xff
    d150:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d154:	add	x1, x1, #0x2c0
    d158:	strb	w0, [x1, #32]
    d15c:	ret
    d160:	str	x30, [sp, #-16]!
    d164:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d168:	add	x0, x0, #0x758
    d16c:	bl	1a3fc <OnPrint@@Base+0x3d8>
    d170:	ldr	x30, [sp], #16
    d174:	ret
    d178:	cmn	x0, #0x9
    d17c:	b.hi	d248 <__sancov_default_options@@Base+0x54c>  // b.pmore
    d180:	stp	x19, x20, [sp, #-32]!
    d184:	stp	x21, x30, [sp, #16]
    d188:	mov	x21, x1
    d18c:	add	x20, x0, #0x8
    d190:	cmp	x2, #0x0
    d194:	mov	x0, #0x8                   	// #8
    d198:	csel	x19, x2, x0, ne  // ne = any
    d19c:	cbz	x1, d1d8 <__sancov_default_options@@Base+0x4dc>
    d1a0:	bl	ce38 <__sancov_default_options@@Base+0x13c>
    d1a4:	mov	x3, x19
    d1a8:	mov	x2, x20
    d1ac:	mov	x1, x21
    d1b0:	bl	df84 <__sancov_default_options@@Base+0x1288>
    d1b4:	cbz	x0, d240 <__sancov_default_options@@Base+0x544>
    d1b8:	mov	x1, #0xc041                	// #49217
    d1bc:	movk	x1, #0xbceb, lsl #16
    d1c0:	movk	x1, #0xb03a, lsl #32
    d1c4:	movk	x1, #0x6a6c, lsl #48
    d1c8:	str	x1, [x0], #8
    d1cc:	ldp	x21, x30, [sp, #16]
    d1d0:	ldp	x19, x20, [sp], #32
    d1d4:	ret
    d1d8:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d1dc:	add	x0, x0, #0x2c0
    d1e0:	add	x0, x0, #0x28
    d1e4:	mov	w2, #0x1                   	// #1
    d1e8:	ldxrb	w1, [x0]
    d1ec:	stxrb	w3, w2, [x0]
    d1f0:	cbnz	w3, d1e8 <__sancov_default_options@@Base+0x4ec>
    d1f4:	dmb	ish
    d1f8:	and	w0, w1, #0xff
    d1fc:	cbnz	w0, d22c <__sancov_default_options@@Base+0x530>
    d200:	bl	ce38 <__sancov_default_options@@Base+0x13c>
    d204:	mov	x3, x19
    d208:	mov	x2, x20
    d20c:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d210:	add	x1, x1, #0x2f0
    d214:	bl	df84 <__sancov_default_options@@Base+0x1288>
    d218:	dmb	ish
    d21c:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d220:	add	x1, x1, #0x2c0
    d224:	strb	wzr, [x1, #40]
    d228:	b	d1b4 <__sancov_default_options@@Base+0x4b8>
    d22c:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d230:	add	x0, x0, #0x2c0
    d234:	add	x0, x0, #0x28
    d238:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    d23c:	b	d200 <__sancov_default_options@@Base+0x504>
    d240:	mov	x0, x20
    d244:	bl	ce08 <__sancov_default_options@@Base+0x10c>
    d248:	mov	x0, #0x0                   	// #0
    d24c:	ret
    d250:	stp	x19, x20, [sp, #-32]!
    d254:	str	x30, [sp, #16]
    d258:	mov	x3, x1
    d25c:	mov	x1, x2
    d260:	cbz	x0, d26c <__sancov_default_options@@Base+0x570>
    d264:	umulh	x2, x3, x0
    d268:	cbnz	x2, d2a0 <__sancov_default_options@@Base+0x5a4>
    d26c:	mul	x19, x0, x3
    d270:	mov	x2, #0x0                   	// #0
    d274:	mov	x0, x19
    d278:	bl	d178 <__sancov_default_options@@Base+0x47c>
    d27c:	mov	x20, x0
    d280:	cbz	x0, d290 <__sancov_default_options@@Base+0x594>
    d284:	mov	x2, x19
    d288:	mov	w1, #0x0                   	// #0
    d28c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    d290:	mov	x0, x20
    d294:	ldr	x30, [sp, #16]
    d298:	ldp	x19, x20, [sp], #32
    d29c:	ret
    d2a0:	mov	x2, x0
    d2a4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    d2a8:	ldr	x0, [x0, #4024]
    d2ac:	ldr	x1, [x0]
    d2b0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d2b4:	add	x0, x0, #0x7b0
    d2b8:	bl	1a3fc <OnPrint@@Base+0x3d8>
    d2bc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    d2c0:	stp	x19, x20, [sp, #-32]!
    d2c4:	str	x30, [sp, #24]
    d2c8:	mov	x19, x1
    d2cc:	mov	x20, x2
    d2d0:	cbz	x0, d33c <__sancov_default_options@@Base+0x640>
    d2d4:	cmn	x1, #0x9
    d2d8:	b.hi	d3f0 <__sancov_default_options@@Base+0x6f4>  // b.pmore
    d2dc:	str	x21, [sp, #16]
    d2e0:	sub	x21, x0, #0x8
    d2e4:	add	x19, x1, #0x8
    d2e8:	ldur	x4, [x0, #-8]
    d2ec:	mov	x0, #0xc041                	// #49217
    d2f0:	movk	x0, #0xbceb, lsl #16
    d2f4:	movk	x0, #0xb03a, lsl #32
    d2f8:	movk	x0, #0x6a6c, lsl #48
    d2fc:	cmp	x4, x0
    d300:	b.ne	d350 <__sancov_default_options@@Base+0x654>  // b.any
    d304:	cbz	x2, d378 <__sancov_default_options@@Base+0x67c>
    d308:	bl	ce38 <__sancov_default_options@@Base+0x13c>
    d30c:	mov	x4, #0x8                   	// #8
    d310:	mov	x3, x19
    d314:	mov	x2, x21
    d318:	mov	x1, x20
    d31c:	bl	e8e0 <__sancov_default_options@@Base+0x1be4>
    d320:	mov	x1, x0
    d324:	add	x0, x1, #0x8
    d328:	cbz	x1, d3e8 <__sancov_default_options@@Base+0x6ec>
    d32c:	ldr	x21, [sp, #16]
    d330:	ldr	x30, [sp, #24]
    d334:	ldp	x19, x20, [sp], #32
    d338:	ret
    d33c:	mov	x2, #0x0                   	// #0
    d340:	mov	x1, x20
    d344:	mov	x0, x19
    d348:	bl	d178 <__sancov_default_options@@Base+0x47c>
    d34c:	b	d330 <__sancov_default_options@@Base+0x634>
    d350:	mov	x3, #0xc041                	// #49217
    d354:	movk	x3, #0xbceb, lsl #16
    d358:	movk	x3, #0xb03a, lsl #32
    d35c:	movk	x3, #0x6a6c, lsl #48
    d360:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d364:	add	x2, x2, #0x818
    d368:	mov	w1, #0xa5                  	// #165
    d36c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d370:	add	x0, x0, #0x6e8
    d374:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d378:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d37c:	add	x0, x0, #0x2c0
    d380:	add	x0, x0, #0x28
    d384:	mov	w2, #0x1                   	// #1
    d388:	ldxrb	w1, [x0]
    d38c:	stxrb	w3, w2, [x0]
    d390:	cbnz	w3, d388 <__sancov_default_options@@Base+0x68c>
    d394:	dmb	ish
    d398:	and	w0, w1, #0xff
    d39c:	cbnz	w0, d3d4 <__sancov_default_options@@Base+0x6d8>
    d3a0:	bl	ce38 <__sancov_default_options@@Base+0x13c>
    d3a4:	mov	x4, #0x8                   	// #8
    d3a8:	mov	x3, x19
    d3ac:	mov	x2, x21
    d3b0:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d3b4:	add	x1, x1, #0x2f0
    d3b8:	bl	e8e0 <__sancov_default_options@@Base+0x1be4>
    d3bc:	mov	x1, x0
    d3c0:	dmb	ish
    d3c4:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d3c8:	add	x0, x0, #0x2c0
    d3cc:	strb	wzr, [x0, #40]
    d3d0:	b	d324 <__sancov_default_options@@Base+0x628>
    d3d4:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d3d8:	add	x0, x0, #0x2c0
    d3dc:	add	x0, x0, #0x28
    d3e0:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    d3e4:	b	d3a0 <__sancov_default_options@@Base+0x6a4>
    d3e8:	mov	x0, x19
    d3ec:	bl	ce08 <__sancov_default_options@@Base+0x10c>
    d3f0:	mov	x0, #0x0                   	// #0
    d3f4:	b	d330 <__sancov_default_options@@Base+0x634>
    d3f8:	cbz	x0, d4d8 <__sancov_default_options@@Base+0x7dc>
    d3fc:	stp	x19, x20, [sp, #-32]!
    d400:	str	x30, [sp, #16]
    d404:	mov	x19, x1
    d408:	sub	x20, x0, #0x8
    d40c:	ldur	x4, [x0, #-8]
    d410:	mov	x1, #0xc041                	// #49217
    d414:	movk	x1, #0xbceb, lsl #16
    d418:	movk	x1, #0xb03a, lsl #32
    d41c:	movk	x1, #0x6a6c, lsl #48
    d420:	cmp	x4, x1
    d424:	b.ne	d44c <__sancov_default_options@@Base+0x750>  // b.any
    d428:	stur	xzr, [x0, #-8]
    d42c:	cbz	x19, d474 <__sancov_default_options@@Base+0x778>
    d430:	bl	ce38 <__sancov_default_options@@Base+0x13c>
    d434:	mov	x2, x20
    d438:	mov	x1, x19
    d43c:	bl	e588 <__sancov_default_options@@Base+0x188c>
    d440:	ldr	x30, [sp, #16]
    d444:	ldp	x19, x20, [sp], #32
    d448:	ret
    d44c:	mov	x3, #0xc041                	// #49217
    d450:	movk	x3, #0xbceb, lsl #16
    d454:	movk	x3, #0xb03a, lsl #32
    d458:	movk	x3, #0x6a6c, lsl #48
    d45c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d460:	add	x2, x2, #0x818
    d464:	mov	w1, #0xbd                  	// #189
    d468:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d46c:	add	x0, x0, #0x6e8
    d470:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d474:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d478:	add	x0, x0, #0x2c0
    d47c:	add	x0, x0, #0x28
    d480:	mov	w2, #0x1                   	// #1
    d484:	ldxrb	w1, [x0]
    d488:	stxrb	w3, w2, [x0]
    d48c:	cbnz	w3, d484 <__sancov_default_options@@Base+0x788>
    d490:	dmb	ish
    d494:	and	w0, w1, #0xff
    d498:	cbnz	w0, d4c4 <__sancov_default_options@@Base+0x7c8>
    d49c:	bl	ce38 <__sancov_default_options@@Base+0x13c>
    d4a0:	mov	x2, x20
    d4a4:	adrp	x1, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d4a8:	add	x1, x1, #0x2f0
    d4ac:	bl	e588 <__sancov_default_options@@Base+0x188c>
    d4b0:	dmb	ish
    d4b4:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d4b8:	add	x0, x0, #0x2c0
    d4bc:	strb	wzr, [x0, #40]
    d4c0:	b	d440 <__sancov_default_options@@Base+0x744>
    d4c4:	adrp	x0, df000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d4c8:	add	x0, x0, #0x2c0
    d4cc:	add	x0, x0, #0x28
    d4d0:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    d4d4:	b	d49c <__sancov_default_options@@Base+0x7a0>
    d4d8:	ret
    d4dc:	stp	x19, x20, [sp, #-48]!
    d4e0:	stp	x21, x22, [sp, #16]
    d4e4:	str	x30, [sp, #32]
    d4e8:	mov	x21, x0
    d4ec:	ldr	x0, [x3, #8]
    d4f0:	cbz	x0, d568 <__sancov_default_options@@Base+0x86c>
    d4f4:	mov	x19, x2
    d4f8:	mov	x20, x3
    d4fc:	add	x22, x2, #0x2, lsl #12
    d500:	add	x22, x22, #0x1
    d504:	lsl	x22, x22, #6
    d508:	add	x0, x21, x22
    d50c:	mov	w2, #0x1                   	// #1
    d510:	ldxrb	w1, [x0]
    d514:	stxrb	w3, w2, [x0]
    d518:	cbnz	w3, d510 <__sancov_default_options@@Base+0x814>
    d51c:	dmb	ish
    d520:	and	w1, w1, #0xff
    d524:	cbnz	w1, d588 <__sancov_default_options@@Base+0x88c>
    d528:	add	x1, x21, x19, lsl #6
    d52c:	add	x0, x1, #0x80, lsl #12
    d530:	ldr	x0, [x0, #72]
    d534:	cbnz	x0, d590 <__sancov_default_options@@Base+0x894>
    d538:	str	xzr, [x20]
    d53c:	add	x19, x1, #0x80, lsl #12
    d540:	str	x20, [x19, #88]
    d544:	str	x20, [x19, #80]
    d548:	mov	x0, #0x1                   	// #1
    d54c:	str	x0, [x19, #72]
    d550:	dmb	ish
    d554:	strb	wzr, [x21, x22]
    d558:	ldp	x21, x22, [sp, #16]
    d55c:	ldr	x30, [sp, #32]
    d560:	ldp	x19, x20, [sp], #48
    d564:	ret
    d568:	mov	x4, #0x0                   	// #0
    d56c:	mov	x3, #0x0                   	// #0
    d570:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d574:	add	x2, x2, #0x870
    d578:	mov	w1, #0xad                  	// #173
    d57c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d580:	add	x0, x0, #0x888
    d584:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d588:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    d58c:	b	d528 <__sancov_default_options@@Base+0x82c>
    d590:	add	x1, x1, #0x80, lsl #12
    d594:	ldr	x0, [x1, #80]
    d598:	str	x0, [x20]
    d59c:	str	x20, [x1, #80]
    d5a0:	ldr	x0, [x1, #72]
    d5a4:	add	x0, x0, #0x1
    d5a8:	str	x0, [x1, #72]
    d5ac:	b	d550 <__sancov_default_options@@Base+0x854>
    d5b0:	sub	sp, sp, #0x210
    d5b4:	stp	x19, x20, [sp]
    d5b8:	stp	x21, x22, [sp, #16]
    d5bc:	stp	x23, x24, [sp, #32]
    d5c0:	str	x30, [sp, #80]
    d5c4:	str	x0, [sp, #112]
    d5c8:	mov	x19, x1
    d5cc:	mov	x23, x2
    d5d0:	mov	x21, x3
    d5d4:	str	x4, [sp, #104]
    d5d8:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    d5dc:	ldr	x2, [x0, #1216]
    d5e0:	mov	x1, #0x100000              	// #1048576
    d5e4:	mov	x0, x1
    d5e8:	bl	17d48 <__sanitizer_set_report_fd@@Base+0x4f04>
    d5ec:	cbz	x0, db2c <__sancov_default_options@@Base+0xe30>
    d5f0:	stp	x25, x26, [sp, #48]
    d5f4:	stp	x27, x28, [sp, #64]
    d5f8:	mov	x20, x0
    d5fc:	ldr	x0, [x19, #24]
    d600:	add	x0, x0, #0x100, lsl #12
    d604:	str	x0, [x19, #24]
    d608:	tst	x20, #0xfffff
    d60c:	b.ne	d6f0 <__sancov_default_options@@Base+0x9f4>  // b.any
    d610:	lsr	x19, x20, #20
    d614:	mov	x0, #0xfffffff             	// #268435455
    d618:	cmp	x0, x20, lsr #20
    d61c:	b.cc	d710 <__sancov_default_options@@Base+0xa14>  // b.lo, b.ul, b.last
    d620:	ldrb	w22, [sp, #104]
    d624:	lsr	x24, x19, #12
    d628:	ldr	x0, [sp, #112]
    d62c:	ldr	x0, [x0, x24, lsl #3]
    d630:	dmb	ish
    d634:	mov	x1, x0
    d638:	cbz	x0, d730 <__sancov_default_options@@Base+0xa34>
    d63c:	and	x19, x19, #0xfff
    d640:	ldrb	w0, [x1, x19]
    d644:	str	x0, [sp, #136]
    d648:	cbnz	x0, d7ac <__sancov_default_options@@Base+0xab0>
    d64c:	strb	w22, [x1, x19]
    d650:	ldr	x0, [sp, #104]
    d654:	cmp	x0, #0x35
    d658:	b.eq	d7cc <__sancov_default_options@@Base+0xad0>  // b.none
    d65c:	lsl	x26, x0, #4
    d660:	cmp	x0, #0x10
    d664:	b.ls	d688 <__sancov_default_options@@Base+0x98c>  // b.plast
    d668:	ldr	x0, [sp, #104]
    d66c:	sub	x1, x0, #0x10
    d670:	lsr	x26, x1, #2
    d674:	mov	x0, #0x100                 	// #256
    d678:	lsl	x0, x0, x26
    d67c:	lsr	x26, x0, #2
    d680:	and	x1, x1, #0x3
    d684:	madd	x26, x26, x1, x0
    d688:	mov	x27, #0x100000              	// #1048576
    d68c:	udiv	x27, x27, x26
    d690:	cbz	x26, db48 <__sancov_default_options@@Base+0xe4c>
    d694:	mov	w0, #0x4000                	// #16384
    d698:	udiv	w0, w0, w26
    d69c:	mov	w22, w0
    d6a0:	cmp	w0, #0x40
    d6a4:	mov	x0, #0x40                  	// #64
    d6a8:	csel	x22, x22, x0, ls  // ls = plast
    d6ac:	cmp	x22, #0x0
    d6b0:	csinc	x22, x22, xzr, ne  // ne = any
    d6b4:	cmp	x22, #0x3e
    d6b8:	mov	x0, #0x3e                  	// #62
    d6bc:	csel	x22, x22, x0, ls  // ls = plast
    d6c0:	madd	x27, x27, x26, x20
    d6c4:	cmp	x20, x27
    d6c8:	b.cs	db58 <__sancov_default_options@@Base+0xe5c>  // b.hs, b.nlast
    d6cc:	str	x20, [sp, #144]
    d6d0:	mov	x0, #0x0                   	// #0
    d6d4:	mov	x19, #0x1                   	// #1
    d6d8:	add	x28, sp, #0x90
    d6dc:	add	x25, sp, #0x210
    d6e0:	ldr	x1, [sp, #104]
    d6e4:	add	x1, x23, x1, lsl #10
    d6e8:	str	x1, [sp, #96]
    d6ec:	b	d920 <__sancov_default_options@@Base+0xc24>
    d6f0:	mov	x4, #0x0                   	// #0
    d6f4:	mov	x3, #0x0                   	// #0
    d6f8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d6fc:	add	x2, x2, #0x8d8
    d700:	mov	w1, #0x126                 	// #294
    d704:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d708:	add	x0, x0, #0x888
    d70c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d710:	mov	x4, #0x10000000            	// #268435456
    d714:	mov	x3, x19
    d718:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d71c:	add	x2, x2, #0x900
    d720:	mov	w1, #0x116                 	// #278
    d724:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d728:	add	x0, x0, #0x888
    d72c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d730:	ldr	x0, [sp, #112]
    d734:	add	x0, x0, #0x80, lsl #12
    d738:	mov	w2, #0x1                   	// #1
    d73c:	ldxrb	w1, [x0]
    d740:	stxrb	w3, w2, [x0]
    d744:	cbnz	w3, d73c <__sancov_default_options@@Base+0xa40>
    d748:	dmb	ish
    d74c:	and	w1, w1, #0xff
    d750:	cbnz	w1, d77c <__sancov_default_options@@Base+0xa80>
    d754:	ldr	x0, [sp, #112]
    d758:	ldr	x0, [x0, x24, lsl #3]
    d75c:	dmb	ish
    d760:	mov	x1, x0
    d764:	cbz	x0, d784 <__sancov_default_options@@Base+0xa88>
    d768:	dmb	ish
    d76c:	ldr	x0, [sp, #112]
    d770:	add	x0, x0, #0x80, lsl #12
    d774:	strb	wzr, [x0]
    d778:	b	d63c <__sancov_default_options@@Base+0x940>
    d77c:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    d780:	b	d754 <__sancov_default_options@@Base+0xa58>
    d784:	mov	w2, #0x0                   	// #0
    d788:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d78c:	add	x1, x1, #0x928
    d790:	mov	x0, #0x1000                	// #4096
    d794:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    d798:	mov	x1, x0
    d79c:	dmb	ish
    d7a0:	ldr	x0, [sp, #112]
    d7a4:	str	x1, [x0, x24, lsl #3]
    d7a8:	b	d768 <__sancov_default_options@@Base+0xa6c>
    d7ac:	mov	x4, x0
    d7b0:	mov	x3, #0x0                   	// #0
    d7b4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d7b8:	add	x2, x2, #0x938
    d7bc:	mov	w1, #0x42                  	// #66
    d7c0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d7c4:	add	x0, x0, #0x960
    d7c8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d7cc:	mov	x26, #0x200                 	// #512
    d7d0:	mov	x27, #0x800                 	// #2048
    d7d4:	b	d694 <__sancov_default_options@@Base+0x998>
    d7d8:	ldr	x0, [sp, #96]
    d7dc:	ldr	x24, [x0, #24]
    d7e0:	cbnz	x24, d7f4 <__sancov_default_options@@Base+0xaf8>
    d7e4:	ldr	x0, [x19]
    d7e8:	cbz	x0, d894 <__sancov_default_options@@Base+0xb98>
    d7ec:	str	xzr, [x0, #8]
    d7f0:	b	d8d4 <__sancov_default_options@@Base+0xbd8>
    d7f4:	cmp	x24, #0x35
    d7f8:	b.hi	d85c <__sancov_default_options@@Base+0xb60>  // b.pmore
    d7fc:	lsl	x0, x24, #10
    d800:	str	x0, [sp, #128]
    d804:	add	x1, x23, x0
    d808:	ldr	x0, [x23, x0]
    d80c:	cbz	x0, d87c <__sancov_default_options@@Base+0xb80>
    d810:	ldr	x1, [sp, #128]
    d814:	ldr	x2, [x23, x1]
    d818:	sub	x0, x2, #0x1
    d81c:	str	x0, [x23, x1]
    d820:	lsl	x1, x24, #7
    d824:	add	x0, x1, x0
    d828:	add	x0, x0, #0x4
    d82c:	ldr	x0, [x23, x0, lsl #3]
    d830:	add	x1, x1, x2
    d834:	add	x1, x1, #0x2
    d838:	ldr	x1, [x23, x1, lsl #3]
    d83c:	prfm	pldl1keep, [x1]
    d840:	ldr	x3, [sp, #120]
    d844:	ldr	x1, [x3, #16]
    d848:	add	x24, x23, x24, lsl #10
    d84c:	ldr	x2, [x24, #16]
    d850:	add	x1, x1, x2
    d854:	str	x1, [x3, #16]
    d858:	b	d7e8 <__sancov_default_options@@Base+0xaec>
    d85c:	mov	x4, #0x36                  	// #54
    d860:	mov	x3, x24
    d864:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d868:	add	x2, x2, #0x9a8
    d86c:	mov	w1, #0xa0                  	// #160
    d870:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    d874:	add	x0, x0, #0x9c8
    d878:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d87c:	mov	x3, x24
    d880:	ldr	x2, [sp, #112]
    d884:	mov	x0, x23
    d888:	bl	dc8c <__sancov_default_options@@Base+0xf90>
    d88c:	and	w0, w0, #0xff
    d890:	cbnz	w0, d810 <__sancov_default_options@@Base+0xb14>
    d894:	mov	w0, #0x0                   	// #0
    d898:	ldp	x25, x26, [sp, #48]
    d89c:	ldp	x27, x28, [sp, #64]
    d8a0:	b	db30 <__sancov_default_options@@Base+0xe34>
    d8a4:	str	xzr, [x0]
    d8a8:	ldr	x2, [x21, #24]
    d8ac:	str	x0, [x2]
    d8b0:	str	x0, [x21, #24]
    d8b4:	ldr	x0, [x21, #8]
    d8b8:	add	x0, x0, #0x1
    d8bc:	str	x0, [x21, #8]
    d8c0:	mov	x0, #0x0                   	// #0
    d8c4:	add	x19, x19, #0x8
    d8c8:	cmp	x25, x19
    d8cc:	b.eq	d918 <__sancov_default_options@@Base+0xc1c>  // b.none
    d8d0:	cbz	x0, d7d8 <__sancov_default_options@@Base+0xadc>
    d8d4:	ldr	x3, [x19]
    d8d8:	ldr	x1, [x0, #8]
    d8dc:	add	x2, x1, #0x1
    d8e0:	str	x2, [x0, #8]
    d8e4:	add	x1, x1, #0x2
    d8e8:	str	x3, [x0, x1, lsl #3]
    d8ec:	cmp	x22, x2
    d8f0:	b.ne	d8c4 <__sancov_default_options@@Base+0xbc8>  // b.any
    d8f4:	ldr	x1, [x21, #8]
    d8f8:	cbnz	x1, d8a4 <__sancov_default_options@@Base+0xba8>
    d8fc:	str	xzr, [x0]
    d900:	str	x0, [x21, #24]
    d904:	str	x0, [x21, #16]
    d908:	mov	x0, #0x1                   	// #1
    d90c:	str	x0, [x21, #8]
    d910:	mov	x0, #0x0                   	// #0
    d914:	b	d8c4 <__sancov_default_options@@Base+0xbc8>
    d918:	ldr	x1, [sp, #136]
    d91c:	mov	x19, x1
    d920:	add	x20, x20, x26
    d924:	cmp	x20, x27
    d928:	b.cs	d950 <__sancov_default_options@@Base+0xc54>  // b.hs, b.nlast
    d92c:	add	x1, x19, #0x1
    d930:	str	x20, [x28, x19, lsl #3]
    d934:	cmp	x19, #0x2f
    d938:	b.ne	d91c <__sancov_default_options@@Base+0xc20>  // b.any
    d93c:	add	x19, sp, #0x90
    d940:	add	x1, x23, #0xd, lsl #12
    d944:	add	x1, x1, #0x800
    d948:	str	x1, [sp, #120]
    d94c:	b	d8d0 <__sancov_default_options@@Base+0xbd4>
    d950:	cbnz	x19, d988 <__sancov_default_options@@Base+0xc8c>
    d954:	cbz	x0, db68 <__sancov_default_options@@Base+0xe6c>
    d958:	ldr	x1, [x0, #8]
    d95c:	cbz	x1, dae0 <__sancov_default_options@@Base+0xde4>
    d960:	ldr	x1, [x21, #8]
    d964:	cbnz	x1, db00 <__sancov_default_options@@Base+0xe04>
    d968:	str	xzr, [x0]
    d96c:	str	x0, [x21, #24]
    d970:	str	x0, [x21, #16]
    d974:	mov	x0, #0x1                   	// #1
    d978:	str	x0, [x21, #8]
    d97c:	ldp	x25, x26, [sp, #48]
    d980:	ldp	x27, x28, [sp, #64]
    d984:	b	db30 <__sancov_default_options@@Base+0xe34>
    d988:	mov	x20, #0x1                   	// #1
    d98c:	ldr	x1, [sp, #104]
    d990:	add	x26, x23, x1, lsl #10
    d994:	add	x28, x23, #0xd, lsl #12
    d998:	add	x28, x28, #0x800
    d99c:	add	x24, sp, #0x90
    d9a0:	b	da94 <__sancov_default_options@@Base+0xd98>
    d9a4:	ldr	x25, [x26, #24]
    d9a8:	cbnz	x25, d9c0 <__sancov_default_options@@Base+0xcc4>
    d9ac:	add	x0, x24, x20, lsl #3
    d9b0:	ldur	x0, [x0, #-8]
    d9b4:	cbz	x0, da54 <__sancov_default_options@@Base+0xd58>
    d9b8:	str	xzr, [x0, #8]
    d9bc:	b	da98 <__sancov_default_options@@Base+0xd9c>
    d9c0:	cmp	x25, #0x35
    d9c4:	b.hi	da1c <__sancov_default_options@@Base+0xd20>  // b.pmore
    d9c8:	lsl	x27, x25, #10
    d9cc:	add	x1, x23, x27
    d9d0:	ldr	x0, [x23, x27]
    d9d4:	cbz	x0, da3c <__sancov_default_options@@Base+0xd40>
    d9d8:	ldr	x2, [x23, x27]
    d9dc:	sub	x0, x2, #0x1
    d9e0:	str	x0, [x23, x27]
    d9e4:	lsl	x1, x25, #7
    d9e8:	add	x0, x1, x0
    d9ec:	add	x0, x0, #0x4
    d9f0:	ldr	x0, [x23, x0, lsl #3]
    d9f4:	add	x1, x1, x2
    d9f8:	add	x1, x1, #0x2
    d9fc:	ldr	x1, [x23, x1, lsl #3]
    da00:	prfm	pldl1keep, [x1]
    da04:	ldr	x1, [x28, #16]
    da08:	add	x25, x23, x25, lsl #10
    da0c:	ldr	x2, [x25, #16]
    da10:	add	x1, x1, x2
    da14:	str	x1, [x28, #16]
    da18:	b	d9b4 <__sancov_default_options@@Base+0xcb8>
    da1c:	mov	x4, #0x36                  	// #54
    da20:	mov	x3, x25
    da24:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    da28:	add	x2, x2, #0x9a8
    da2c:	mov	w1, #0xa0                  	// #160
    da30:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    da34:	add	x0, x0, #0x9c8
    da38:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    da3c:	mov	x3, x25
    da40:	ldr	x2, [sp, #112]
    da44:	mov	x0, x23
    da48:	bl	dc8c <__sancov_default_options@@Base+0xf90>
    da4c:	and	w0, w0, #0xff
    da50:	cbnz	w0, d9d8 <__sancov_default_options@@Base+0xcdc>
    da54:	mov	w0, #0x0                   	// #0
    da58:	ldp	x25, x26, [sp, #48]
    da5c:	ldp	x27, x28, [sp, #64]
    da60:	b	db30 <__sancov_default_options@@Base+0xe34>
    da64:	str	xzr, [x0]
    da68:	ldr	x2, [x21, #24]
    da6c:	str	x0, [x2]
    da70:	str	x0, [x21, #24]
    da74:	ldr	x0, [x21, #8]
    da78:	add	x0, x0, #0x1
    da7c:	str	x0, [x21, #8]
    da80:	mov	x0, #0x0                   	// #0
    da84:	add	x1, x20, #0x1
    da88:	cmp	x19, x20
    da8c:	b.eq	d954 <__sancov_default_options@@Base+0xc58>  // b.none
    da90:	mov	x20, x1
    da94:	cbz	x0, d9a4 <__sancov_default_options@@Base+0xca8>
    da98:	add	x1, x24, x20, lsl #3
    da9c:	ldur	x3, [x1, #-8]
    daa0:	ldr	x1, [x0, #8]
    daa4:	add	x2, x1, #0x1
    daa8:	str	x2, [x0, #8]
    daac:	add	x1, x1, #0x2
    dab0:	str	x3, [x0, x1, lsl #3]
    dab4:	cmp	x22, x2
    dab8:	b.ne	da84 <__sancov_default_options@@Base+0xd88>  // b.any
    dabc:	ldr	x1, [x21, #8]
    dac0:	cbnz	x1, da64 <__sancov_default_options@@Base+0xd68>
    dac4:	str	xzr, [x0]
    dac8:	str	x0, [x21, #24]
    dacc:	str	x0, [x21, #16]
    dad0:	mov	x0, #0x1                   	// #1
    dad4:	str	x0, [x21, #8]
    dad8:	mov	x0, #0x0                   	// #0
    dadc:	b	da84 <__sancov_default_options@@Base+0xd88>
    dae0:	mov	x4, #0x0                   	// #0
    dae4:	mov	x3, #0x0                   	// #0
    dae8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    daec:	add	x2, x2, #0x870
    daf0:	mov	w1, #0x169                 	// #361
    daf4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    daf8:	add	x0, x0, #0x888
    dafc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    db00:	str	xzr, [x0]
    db04:	ldr	x2, [x21, #24]
    db08:	str	x0, [x2]
    db0c:	str	x0, [x21, #24]
    db10:	ldr	x0, [x21, #8]
    db14:	add	x0, x0, #0x1
    db18:	str	x0, [x21, #8]
    db1c:	mov	w0, #0x1                   	// #1
    db20:	ldp	x25, x26, [sp, #48]
    db24:	ldp	x27, x28, [sp, #64]
    db28:	b	db30 <__sancov_default_options@@Base+0xe34>
    db2c:	mov	w0, #0x0                   	// #0
    db30:	ldp	x19, x20, [sp]
    db34:	ldp	x21, x22, [sp, #16]
    db38:	ldp	x23, x24, [sp, #32]
    db3c:	ldr	x30, [sp, #80]
    db40:	add	sp, sp, #0x210
    db44:	ret
    db48:	mov	w0, #0x1                   	// #1
    db4c:	ldp	x25, x26, [sp, #48]
    db50:	ldp	x27, x28, [sp, #64]
    db54:	b	db30 <__sancov_default_options@@Base+0xe34>
    db58:	mov	w0, #0x1                   	// #1
    db5c:	ldp	x25, x26, [sp, #48]
    db60:	ldp	x27, x28, [sp, #64]
    db64:	b	db30 <__sancov_default_options@@Base+0xe34>
    db68:	mov	w0, #0x1                   	// #1
    db6c:	ldp	x25, x26, [sp, #48]
    db70:	ldp	x27, x28, [sp, #64]
    db74:	b	db30 <__sancov_default_options@@Base+0xe34>
    db78:	stp	x19, x20, [sp, #-64]!
    db7c:	stp	x21, x22, [sp, #16]
    db80:	stp	x23, x24, [sp, #32]
    db84:	stp	x25, x30, [sp, #48]
    db88:	mov	x21, x0
    db8c:	mov	x24, x1
    db90:	mov	x25, x2
    db94:	mov	x19, x3
    db98:	add	x22, x3, #0x2, lsl #12
    db9c:	add	x22, x22, #0x1
    dba0:	lsl	x22, x22, #6
    dba4:	add	x23, x0, x22
    dba8:	mov	w1, #0x1                   	// #1
    dbac:	ldxrb	w0, [x23]
    dbb0:	stxrb	w2, w1, [x23]
    dbb4:	cbnz	w2, dbac <__sancov_default_options@@Base+0xeb0>
    dbb8:	dmb	ish
    dbbc:	and	w0, w0, #0xff
    dbc0:	cbnz	w0, dc0c <__sancov_default_options@@Base+0xf10>
    dbc4:	add	x20, x21, x19, lsl #6
    dbc8:	add	x0, x20, #0x80, lsl #12
    dbcc:	ldr	x4, [x0, #72]
    dbd0:	cbnz	x4, dc4c <__sancov_default_options@@Base+0xf50>
    dbd4:	mov	x4, x19
    dbd8:	mov	x3, x23
    dbdc:	mov	x2, x25
    dbe0:	mov	x1, x24
    dbe4:	mov	x0, x21
    dbe8:	bl	d5b0 <__sancov_default_options@@Base+0x8b4>
    dbec:	and	w0, w0, #0xff
    dbf0:	cbz	w0, dc44 <__sancov_default_options@@Base+0xf48>
    dbf4:	add	x0, x20, #0x80, lsl #12
    dbf8:	ldr	x4, [x0, #72]
    dbfc:	cbz	x4, dc18 <__sancov_default_options@@Base+0xf1c>
    dc00:	add	x0, x20, #0x80, lsl #12
    dc04:	ldr	x0, [x0, #80]
    dc08:	b	dc54 <__sancov_default_options@@Base+0xf58>
    dc0c:	mov	x0, x23
    dc10:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    dc14:	b	dbc4 <__sancov_default_options@@Base+0xec8>
    dc18:	mov	x3, #0x0                   	// #0
    dc1c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    dc20:	add	x2, x2, #0xa18
    dc24:	mov	w1, #0x40                  	// #64
    dc28:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    dc2c:	add	x0, x0, #0xa30
    dc30:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dc34:	add	x19, x21, x19, lsl #6
    dc38:	add	x19, x19, #0x80, lsl #12
    dc3c:	str	xzr, [x19, #88]
    dc40:	b	dc64 <__sancov_default_options@@Base+0xf68>
    dc44:	mov	x0, #0x0                   	// #0
    dc48:	b	dc70 <__sancov_default_options@@Base+0xf74>
    dc4c:	add	x0, x20, #0x80, lsl #12
    dc50:	ldr	x0, [x0, #80]
    dc54:	ldr	x1, [x0]
    dc58:	add	x2, x20, #0x80, lsl #12
    dc5c:	str	x1, [x2, #80]
    dc60:	cbz	x1, dc34 <__sancov_default_options@@Base+0xf38>
    dc64:	add	x20, x20, #0x80, lsl #12
    dc68:	sub	x4, x4, #0x1
    dc6c:	str	x4, [x20, #72]
    dc70:	dmb	ish
    dc74:	strb	wzr, [x21, x22]
    dc78:	ldp	x21, x22, [sp, #16]
    dc7c:	ldp	x23, x24, [sp, #32]
    dc80:	ldp	x25, x30, [sp, #48]
    dc84:	ldp	x19, x20, [sp], #64
    dc88:	ret
    dc8c:	stp	x19, x20, [sp, #-48]!
    dc90:	stp	x21, x22, [sp, #16]
    dc94:	stp	x23, x30, [sp, #32]
    dc98:	mov	x19, x0
    dc9c:	mov	x21, x1
    dca0:	mov	x22, x2
    dca4:	mov	x20, x3
    dca8:	ldr	x2, [x1, #8]
    dcac:	cbz	x2, dd20 <__sancov_default_options@@Base+0x1024>
    dcb0:	mov	x3, x20
    dcb4:	mov	x2, x19
    dcb8:	add	x1, x19, #0xd, lsl #12
    dcbc:	add	x1, x1, #0x800
    dcc0:	mov	x0, x22
    dcc4:	bl	db78 <__sancov_default_options@@Base+0xe7c>
    dcc8:	mov	x23, x0
    dccc:	cbz	x0, df2c <__sancov_default_options@@Base+0x1230>
    dcd0:	ldr	x2, [x0, #8]
    dcd4:	mov	x4, #0x0                   	// #0
    dcd8:	add	x3, x0, #0x10
    dcdc:	add	x0, x21, #0x20
    dce0:	cbz	x2, ddcc <__sancov_default_options@@Base+0x10d0>
    dce4:	ldr	x1, [x3, x4, lsl #3]
    dce8:	str	x1, [x0, x4, lsl #3]
    dcec:	add	x4, x4, #0x1
    dcf0:	cmp	x2, x4
    dcf4:	b.ne	dce4 <__sancov_default_options@@Base+0xfe8>  // b.any
    dcf8:	ldr	x0, [x23, #8]
    dcfc:	str	x0, [x21]
    dd00:	add	x20, x19, x20, lsl #10
    dd04:	ldr	x20, [x20, #24]
    dd08:	mov	w0, #0x1                   	// #1
    dd0c:	cbnz	x20, dde8 <__sancov_default_options@@Base+0x10ec>
    dd10:	ldp	x21, x22, [sp, #16]
    dd14:	ldp	x23, x30, [sp, #32]
    dd18:	ldp	x19, x20, [sp], #48
    dd1c:	ret
    dd20:	add	x6, x0, #0x408
    dd24:	mov	x5, #0x1                   	// #1
    dd28:	mov	x3, #0x40                  	// #64
    dd2c:	mov	x14, #0x200                 	// #512
    dd30:	mov	x13, x2
    dd34:	mov	x8, #0x14                  	// #20
    dd38:	mov	w11, #0x4000                	// #16384
    dd3c:	mov	x10, x5
    dd40:	mov	x9, #0x3e                  	// #62
    dd44:	mov	x12, #0x100                 	// #256
    dd48:	b	ddb4 <__sancov_default_options@@Base+0x10b8>
    dd4c:	sub	x1, x5, #0x10
    dd50:	lsr	x0, x1, #2
    dd54:	lsl	x0, x12, x0
    dd58:	lsr	x7, x0, #2
    dd5c:	and	x1, x1, #0x3
    dd60:	madd	x7, x7, x1, x0
    dd64:	cbz	x7, df4c <__sancov_default_options@@Base+0x1250>
    dd68:	udiv	w0, w11, w7
    dd6c:	mov	w4, w0
    dd70:	cmp	w0, #0x40
    dd74:	csel	x4, x4, x3, ls  // ls = plast
    dd78:	cmp	x4, #0x0
    dd7c:	csel	x4, x4, x10, ne  // ne = any
    dd80:	cmp	x4, #0x3e
    dd84:	csel	x4, x4, x9, ls  // ls = plast
    dd88:	lsl	x0, x4, #1
    dd8c:	str	x0, [x6]
    dd90:	str	x7, [x6, #8]
    dd94:	add	x4, x4, #0x2
    dd98:	cmp	x7, x4, lsl #3
    dd9c:	csel	x0, x2, x8, cs  // cs = hs, nlast
    dda0:	str	x0, [x6, #16]
    dda4:	add	x5, x5, #0x1
    dda8:	add	x6, x6, #0x400
    ddac:	cmp	x5, #0x36
    ddb0:	b.eq	dcb0 <__sancov_default_options@@Base+0xfb4>  // b.none
    ddb4:	cmp	x5, #0x35
    ddb8:	b.eq	df74 <__sancov_default_options@@Base+0x1278>  // b.none
    ddbc:	lsl	x7, x5, #4
    ddc0:	cmp	x5, #0x10
    ddc4:	b.hi	dd4c <__sancov_default_options@@Base+0x1050>  // b.pmore
    ddc8:	b	dd64 <__sancov_default_options@@Base+0x1068>
    ddcc:	mov	x3, #0x0                   	// #0
    ddd0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ddd4:	add	x2, x2, #0x870
    ddd8:	mov	w1, #0xf6                  	// #246
    dddc:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    dde0:	add	x0, x0, #0x9c8
    dde4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dde8:	cmp	x20, #0x35
    ddec:	b.hi	de4c <__sancov_default_options@@Base+0x1150>  // b.pmore
    ddf0:	lsl	x21, x20, #10
    ddf4:	add	x1, x19, x21
    ddf8:	ldr	x6, [x1, #8]
    ddfc:	cbz	x6, de6c <__sancov_default_options@@Base+0x1170>
    de00:	ldr	x2, [x19, x21]
    de04:	ldr	x0, [x1, #8]
    de08:	cmp	x2, x0
    de0c:	b.eq	df18 <__sancov_default_options@@Base+0x121c>  // b.none
    de10:	ldr	x0, [x19, x21]
    de14:	add	x1, x0, #0x1
    de18:	str	x1, [x19, x21]
    de1c:	add	x0, x0, x20, lsl #7
    de20:	add	x0, x0, #0x4
    de24:	str	x23, [x19, x0, lsl #3]
    de28:	add	x1, x19, #0xd, lsl #12
    de2c:	add	x1, x1, #0x800
    de30:	ldr	x0, [x1, #16]
    de34:	add	x19, x19, x20, lsl #10
    de38:	ldr	x2, [x19, #16]
    de3c:	sub	x0, x0, x2
    de40:	str	x0, [x1, #16]
    de44:	mov	w0, #0x1                   	// #1
    de48:	b	dd10 <__sancov_default_options@@Base+0x1014>
    de4c:	mov	x4, #0x36                  	// #54
    de50:	mov	x3, x20
    de54:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    de58:	add	x2, x2, #0x9a8
    de5c:	mov	w1, #0xaf                  	// #175
    de60:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    de64:	add	x0, x0, #0x9c8
    de68:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    de6c:	add	x3, x19, #0x408
    de70:	mov	x0, #0x1                   	// #1
    de74:	mov	x7, #0x40                  	// #64
    de78:	mov	x14, #0x200                 	// #512
    de7c:	mov	x13, x6
    de80:	mov	x8, #0x14                  	// #20
    de84:	mov	w11, #0x4000                	// #16384
    de88:	mov	x10, x0
    de8c:	mov	x9, #0x3e                  	// #62
    de90:	mov	x12, #0x100                 	// #256
    de94:	b	dee8 <__sancov_default_options@@Base+0x11ec>
    de98:	cbz	x4, df34 <__sancov_default_options@@Base+0x1238>
    de9c:	udiv	w5, w11, w4
    dea0:	mov	w2, w5
    dea4:	cmp	w5, #0x40
    dea8:	csel	x2, x2, x7, ls  // ls = plast
    deac:	cmp	x2, #0x0
    deb0:	csel	x2, x2, x10, ne  // ne = any
    deb4:	cmp	x2, #0x3e
    deb8:	csel	x2, x2, x9, ls  // ls = plast
    debc:	lsl	x5, x2, #1
    dec0:	str	x5, [x3]
    dec4:	str	x4, [x3, #8]
    dec8:	add	x2, x2, #0x2
    decc:	cmp	x4, x2, lsl #3
    ded0:	csel	x2, x6, x8, cs  // cs = hs, nlast
    ded4:	str	x2, [x3, #16]
    ded8:	add	x0, x0, #0x1
    dedc:	add	x3, x3, #0x400
    dee0:	cmp	x0, #0x36
    dee4:	b.eq	de00 <__sancov_default_options@@Base+0x1104>  // b.none
    dee8:	cmp	x0, #0x35
    deec:	b.eq	df64 <__sancov_default_options@@Base+0x1268>  // b.none
    def0:	lsl	x4, x0, #4
    def4:	cmp	x0, #0x10
    def8:	b.ls	de98 <__sancov_default_options@@Base+0x119c>  // b.plast
    defc:	sub	x5, x0, #0x10
    df00:	lsr	x2, x5, #2
    df04:	lsl	x2, x12, x2
    df08:	lsr	x4, x2, #2
    df0c:	and	x5, x5, #0x3
    df10:	madd	x4, x4, x5, x2
    df14:	b	de98 <__sancov_default_options@@Base+0x119c>
    df18:	mov	x3, x20
    df1c:	mov	x2, x22
    df20:	mov	x0, x19
    df24:	bl	e41c <__sancov_default_options@@Base+0x1720>
    df28:	b	de10 <__sancov_default_options@@Base+0x1114>
    df2c:	mov	w0, #0x0                   	// #0
    df30:	b	dd10 <__sancov_default_options@@Base+0x1014>
    df34:	str	xzr, [x3]
    df38:	str	xzr, [x3, #8]
    df3c:	str	x8, [x3, #16]
    df40:	add	x0, x0, #0x1
    df44:	add	x3, x3, #0x400
    df48:	b	dee8 <__sancov_default_options@@Base+0x11ec>
    df4c:	str	xzr, [x6]
    df50:	str	xzr, [x6, #8]
    df54:	str	x8, [x6, #16]
    df58:	add	x5, x5, #0x1
    df5c:	add	x6, x6, #0x400
    df60:	b	ddb4 <__sancov_default_options@@Base+0x10b8>
    df64:	str	x7, [x3]
    df68:	str	x14, [x3, #8]
    df6c:	mov	x2, x13
    df70:	b	ded4 <__sancov_default_options@@Base+0x11d8>
    df74:	str	x3, [x6]
    df78:	str	x14, [x6, #8]
    df7c:	mov	x0, x13
    df80:	b	dda0 <__sancov_default_options@@Base+0x10a4>
    df84:	stp	x19, x20, [sp, #-64]!
    df88:	stp	x23, x24, [sp, #32]
    df8c:	str	x30, [sp, #48]
    df90:	mov	x23, x0
    df94:	mov	x19, x3
    df98:	cmp	x2, #0x0
    df9c:	csinc	x20, x2, xzr, ne  // ne = any
    dfa0:	adds	x0, x20, x3
    dfa4:	b.cs	e078 <__sancov_default_options@@Base+0x137c>  // b.hs, b.nlast
    dfa8:	stp	x21, x22, [sp, #16]
    dfac:	mov	x21, x1
    dfb0:	cmp	x3, #0x8
    dfb4:	b.hi	e09c <__sancov_default_options@@Base+0x13a0>  // b.pmore
    dfb8:	cmp	x2, #0x20, lsl #12
    dfbc:	b.hi	e148 <__sancov_default_options@@Base+0x144c>  // b.pmore
    dfc0:	cmp	x20, #0x100
    dfc4:	b.ls	e0dc <__sancov_default_options@@Base+0x13e0>  // b.plast
    dfc8:	clz	x0, x20
    dfcc:	mov	w22, #0x3f                  	// #63
    dfd0:	sub	w22, w22, w0
    dfd4:	sub	w0, w22, #0x2
    dfd8:	mov	w1, #0x1                   	// #1
    dfdc:	lsl	w1, w1, w0
    dfe0:	sub	w1, w1, #0x1
    dfe4:	tst	x1, x20
    dfe8:	lsr	x0, x20, x0
    dfec:	and	x0, x0, #0x3
    dff0:	cinc	x0, x0, ne  // ne = any
    dff4:	add	x22, x0, w22, sxtw #2
    dff8:	sub	x22, x22, #0x10
    dffc:	cmp	x22, #0x35
    e000:	b.hi	e10c <__sancov_default_options@@Base+0x1410>  // b.pmore
    e004:	lsl	x20, x22, #10
    e008:	add	x1, x21, x20
    e00c:	ldr	x0, [x21, x20]
    e010:	cbz	x0, e12c <__sancov_default_options@@Base+0x1430>
    e014:	ldr	x2, [x21, x20]
    e018:	sub	x0, x2, #0x1
    e01c:	str	x0, [x21, x20]
    e020:	lsl	x1, x22, #7
    e024:	add	x0, x1, x0
    e028:	add	x0, x0, #0x4
    e02c:	ldr	x0, [x21, x0, lsl #3]
    e030:	add	x1, x1, x2
    e034:	add	x1, x1, #0x2
    e038:	ldr	x1, [x21, x1, lsl #3]
    e03c:	prfm	pldl1keep, [x1]
    e040:	add	x2, x21, #0xd, lsl #12
    e044:	add	x2, x2, #0x800
    e048:	ldr	x1, [x2, #16]
    e04c:	add	x21, x21, x22, lsl #10
    e050:	ldr	x3, [x21, #16]
    e054:	add	x1, x1, x3
    e058:	str	x1, [x2, #16]
    e05c:	cmp	x19, #0x8
    e060:	b.ls	e408 <__sancov_default_options@@Base+0x170c>  // b.plast
    e064:	sub	x19, x19, #0x1
    e068:	ands	x3, x0, x19
    e06c:	b.ne	e3ec <__sancov_default_options@@Base+0x16f0>  // b.any
    e070:	ldp	x21, x22, [sp, #16]
    e074:	b	e40c <__sancov_default_options@@Base+0x1710>
    e078:	mov	x2, x20
    e07c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    e080:	ldr	x0, [x0, #4024]
    e084:	ldr	x1, [x0]
    e088:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e08c:	add	x0, x0, #0xa70
    e090:	bl	1a3fc <OnPrint@@Base+0x3d8>
    e094:	mov	x0, #0x0                   	// #0
    e098:	b	e40c <__sancov_default_options@@Base+0x1710>
    e09c:	sub	x24, x3, #0x1
    e0a0:	tst	x3, x24
    e0a4:	b.ne	e0cc <__sancov_default_options@@Base+0x13d0>  // b.any
    e0a8:	sub	x0, x0, #0x1
    e0ac:	neg	x1, x3
    e0b0:	and	x0, x0, x1
    e0b4:	cmp	x0, #0x20, lsl #12
    e0b8:	mov	x1, #0x20000               	// #131072
    e0bc:	ccmp	x3, x1, #0x2, ls  // ls = plast
    e0c0:	b.hi	e154 <__sancov_default_options@@Base+0x1458>  // b.pmore
    e0c4:	mov	x20, x0
    e0c8:	b	dfc0 <__sancov_default_options@@Base+0x12c4>
    e0cc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    e0d0:	add	x0, x0, #0x338
    e0d4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    e0d8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    e0dc:	add	x20, x20, #0xf
    e0e0:	lsr	x22, x20, #4
    e0e4:	cmp	xzr, x20, lsr #4
    e0e8:	b.ne	e004 <__sancov_default_options@@Base+0x1308>  // b.any
    e0ec:	mov	x4, #0x0                   	// #0
    e0f0:	mov	x3, #0x0                   	// #0
    e0f4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e0f8:	add	x2, x2, #0xad0
    e0fc:	mov	w1, #0x9f                  	// #159
    e100:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e104:	add	x0, x0, #0x9c8
    e108:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e10c:	mov	x4, #0x36                  	// #54
    e110:	mov	x3, x22
    e114:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e118:	add	x2, x2, #0x9a8
    e11c:	mov	w1, #0xa0                  	// #160
    e120:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e124:	add	x0, x0, #0x9c8
    e128:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e12c:	mov	x3, x22
    e130:	mov	x2, x23
    e134:	mov	x0, x21
    e138:	bl	dc8c <__sancov_default_options@@Base+0xf90>
    e13c:	and	w0, w0, #0xff
    e140:	cbnz	w0, e014 <__sancov_default_options@@Base+0x1318>
    e144:	b	e328 <__sancov_default_options@@Base+0x162c>
    e148:	sub	x24, x3, #0x1
    e14c:	tst	x3, x24
    e150:	b.ne	e2d8 <__sancov_default_options@@Base+0x15dc>  // b.any
    e154:	add	x0, x23, #0x80, lsl #12
    e158:	add	x0, x0, #0xc00
    e15c:	ldr	x0, [x0, #448]
    e160:	sub	x21, x0, #0x1
    e164:	tst	x0, x21
    e168:	b.ne	e2f8 <__sancov_default_options@@Base+0x15fc>  // b.any
    e16c:	add	x21, x20, x21
    e170:	neg	x1, x0
    e174:	and	x21, x21, x1
    e178:	add	x21, x21, x0
    e17c:	add	x1, x21, x19
    e180:	cmp	x19, x0
    e184:	csel	x21, x1, x21, hi  // hi = pmore
    e188:	cmp	x20, x21
    e18c:	b.hi	e308 <__sancov_default_options@@Base+0x160c>  // b.pmore
    e190:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    e194:	ldr	x1, [x0, #1224]
    e198:	mov	x0, x21
    e19c:	bl	17c70 <__sanitizer_set_report_fd@@Base+0x4e2c>
    e1a0:	cbz	x0, e328 <__sancov_default_options@@Base+0x162c>
    e1a4:	add	x1, x23, #0x80, lsl #12
    e1a8:	add	x1, x1, #0xc00
    e1ac:	ldr	x1, [x1, #448]
    e1b0:	sub	x2, x1, #0x1
    e1b4:	tst	x0, x2
    e1b8:	b.ne	e334 <__sancov_default_options@@Base+0x1638>  // b.any
    e1bc:	add	x22, x0, x1
    e1c0:	ands	x3, x24, x22
    e1c4:	b.eq	e1d8 <__sancov_default_options@@Base+0x14dc>  // b.none
    e1c8:	add	x22, x19, x22
    e1cc:	sub	x22, x22, x3
    e1d0:	tst	x24, x22
    e1d4:	b.ne	e354 <__sancov_default_options@@Base+0x1658>  // b.any
    e1d8:	tst	x22, x2
    e1dc:	b.ne	e374 <__sancov_default_options@@Base+0x1678>  // b.any
    e1e0:	add	x3, x20, x22
    e1e4:	cmp	x0, x3
    e1e8:	b.hi	e394 <__sancov_default_options@@Base+0x1698>  // b.pmore
    e1ec:	add	x4, x21, x0
    e1f0:	cmp	x4, x3
    e1f4:	b.cc	e3b0 <__sancov_default_options@@Base+0x16b4>  // b.lo, b.ul, b.last
    e1f8:	sub	x24, x22, x1
    e1fc:	str	x20, [x24, #16]
    e200:	str	x0, [x24]
    e204:	str	x21, [x24, #8]
    e208:	add	x0, x23, #0xc1, lsl #12
    e20c:	mov	w2, #0x1                   	// #1
    e210:	ldxrb	w1, [x0]
    e214:	stxrb	w3, w2, [x0]
    e218:	cbnz	w3, e210 <__sancov_default_options@@Base+0x1514>
    e21c:	dmb	ish
    e220:	and	w1, w1, #0xff
    e224:	cbnz	w1, e3c8 <__sancov_default_options@@Base+0x16cc>
    e228:	add	x0, x23, #0xc0, lsl #12
    e22c:	add	x0, x0, #0xdc0
    e230:	ldr	x3, [x0, #16]
    e234:	mov	x0, #0x7fff                	// #32767
    e238:	cmp	x3, x0
    e23c:	b.hi	e3d0 <__sancov_default_options@@Base+0x16d4>  // b.pmore
    e240:	clz	x4, x21
    e244:	add	x2, x23, #0x80, lsl #12
    e248:	add	x2, x2, #0xdc0
    e24c:	add	x1, x2, #0x40, lsl #12
    e250:	add	x0, x3, #0x1
    e254:	str	x0, [x1, #16]
    e258:	str	x3, [x24, #24]
    e25c:	ldr	x0, [x2, #8]
    e260:	str	x24, [x0, x3, lsl #3]
    e264:	strb	wzr, [x1, #24]
    e268:	ldr	x2, [x1, #32]
    e26c:	add	x2, x2, #0x1
    e270:	str	x2, [x1, #32]
    e274:	ldr	x2, [x1, #48]
    e278:	add	x2, x21, x2
    e27c:	str	x2, [x1, #48]
    e280:	ldr	x3, [x1, #56]
    e284:	cmp	x3, x2
    e288:	csel	x2, x3, x2, cs  // cs = hs, nlast
    e28c:	str	x2, [x1, #56]
    e290:	mov	w0, #0x3f                  	// #63
    e294:	sub	w0, w0, w4
    e298:	add	x0, x23, w0, sxtw #3
    e29c:	add	x0, x0, #0xc0, lsl #12
    e2a0:	ldr	x1, [x0, #3584]
    e2a4:	add	x1, x1, #0x1
    e2a8:	str	x1, [x0, #3584]
    e2ac:	add	x0, x23, #0xc1, lsl #12
    e2b0:	ldr	x2, [x0, #24]
    e2b4:	add	x2, x21, x2
    e2b8:	str	x2, [x0, #24]
    e2bc:	ldr	x2, [x0, #32]
    e2c0:	add	x21, x21, x2
    e2c4:	str	x21, [x0, #32]
    e2c8:	dmb	ish
    e2cc:	strb	wzr, [x0]
    e2d0:	mov	x0, x22
    e2d4:	b	e05c <__sancov_default_options@@Base+0x1360>
    e2d8:	mov	x4, #0x0                   	// #0
    e2dc:	mov	x3, #0x0                   	// #0
    e2e0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e2e4:	add	x2, x2, #0x730
    e2e8:	mov	w1, #0x53                  	// #83
    e2ec:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e2f0:	add	x0, x0, #0xae8
    e2f4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e2f8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    e2fc:	add	x0, x0, #0x338
    e300:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    e304:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    e308:	mov	x3, x19
    e30c:	mov	x2, x21
    e310:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    e314:	ldr	x0, [x0, #4024]
    e318:	ldr	x1, [x0]
    e31c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e320:	add	x0, x0, #0xb38
    e324:	bl	1a3fc <OnPrint@@Base+0x3d8>
    e328:	mov	x0, #0x0                   	// #0
    e32c:	ldp	x21, x22, [sp, #16]
    e330:	b	e40c <__sancov_default_options@@Base+0x1710>
    e334:	mov	x4, #0x0                   	// #0
    e338:	mov	x3, #0x0                   	// #0
    e33c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e340:	add	x2, x2, #0xba0
    e344:	mov	w1, #0x62                  	// #98
    e348:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e34c:	add	x0, x0, #0xae8
    e350:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e354:	mov	x4, #0x0                   	// #0
    e358:	mov	x3, #0x0                   	// #0
    e35c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e360:	add	x2, x2, #0xbd0
    e364:	mov	w1, #0x68                  	// #104
    e368:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e36c:	add	x0, x0, #0xae8
    e370:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e374:	mov	x4, #0x0                   	// #0
    e378:	mov	x3, #0x0                   	// #0
    e37c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e380:	add	x2, x2, #0xbf8
    e384:	mov	w1, #0x69                  	// #105
    e388:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e38c:	add	x0, x0, #0xae8
    e390:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e394:	mov	x4, x0
    e398:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e39c:	add	x2, x2, #0xc20
    e3a0:	mov	w1, #0x6a                  	// #106
    e3a4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e3a8:	add	x0, x0, #0xae8
    e3ac:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e3b0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e3b4:	add	x2, x2, #0xc40
    e3b8:	mov	w1, #0x6b                  	// #107
    e3bc:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e3c0:	add	x0, x0, #0xae8
    e3c4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e3c8:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    e3cc:	b	e228 <__sancov_default_options@@Base+0x152c>
    e3d0:	mov	x4, #0x8000                	// #32768
    e3d4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e3d8:	add	x2, x2, #0xc60
    e3dc:	mov	w1, #0x15                  	// #21
    e3e0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e3e4:	add	x0, x0, #0xae8
    e3e8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e3ec:	mov	x4, #0x0                   	// #0
    e3f0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e3f4:	add	x2, x2, #0xc80
    e3f8:	mov	w1, #0x42                  	// #66
    e3fc:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e400:	add	x0, x0, #0xcc0
    e404:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e408:	ldp	x21, x22, [sp, #16]
    e40c:	ldp	x23, x24, [sp, #32]
    e410:	ldr	x30, [sp, #48]
    e414:	ldp	x19, x20, [sp], #64
    e418:	ret
    e41c:	stp	x19, x20, [sp, #-80]!
    e420:	stp	x21, x22, [sp, #16]
    e424:	stp	x23, x24, [sp, #32]
    e428:	stp	x25, x26, [sp, #48]
    e42c:	str	x30, [sp, #64]
    e430:	mov	x21, x0
    e434:	mov	x20, x1
    e438:	mov	x23, x2
    e43c:	mov	x22, x3
    e440:	ldr	x6, [x1]
    e444:	ldr	x19, [x1, #8]
    e448:	lsr	x19, x19, #1
    e44c:	cmp	x19, x6
    e450:	csel	x19, x19, x6, ls  // ls = plast
    e454:	sub	x24, x6, x19
    e458:	add	x0, x0, x3, lsl #10
    e45c:	ldr	x25, [x0, #24]
    e460:	cbnz	x25, e4d4 <__sancov_default_options@@Base+0x17d8>
    e464:	add	x0, x24, #0x4
    e468:	ldr	x3, [x1, x0, lsl #3]
    e46c:	cbz	x3, e56c <__sancov_default_options@@Base+0x1870>
    e470:	add	x6, x24, #0x4
    e474:	add	x6, x20, x6, lsl #3
    e478:	str	x19, [x3, #8]
    e47c:	cbz	x19, e49c <__sancov_default_options@@Base+0x17a0>
    e480:	mov	x4, #0x0                   	// #0
    e484:	add	x1, x3, #0x10
    e488:	ldr	x5, [x6, x4, lsl #3]
    e48c:	str	x5, [x1, x4, lsl #3]
    e490:	add	x4, x4, #0x1
    e494:	cmp	x4, x19
    e498:	b.ne	e488 <__sancov_default_options@@Base+0x178c>  // b.any
    e49c:	ldr	x0, [x20]
    e4a0:	sub	x19, x0, x19
    e4a4:	str	x19, [x20]
    e4a8:	mov	x2, x22
    e4ac:	add	x1, x21, #0xd, lsl #12
    e4b0:	add	x1, x1, #0x800
    e4b4:	mov	x0, x23
    e4b8:	bl	d4dc <__sancov_default_options@@Base+0x7e0>
    e4bc:	ldp	x21, x22, [sp, #16]
    e4c0:	ldp	x23, x24, [sp, #32]
    e4c4:	ldp	x25, x26, [sp, #48]
    e4c8:	ldr	x30, [sp, #64]
    e4cc:	ldp	x19, x20, [sp], #80
    e4d0:	ret
    e4d4:	cmp	x25, #0x35
    e4d8:	b.hi	e538 <__sancov_default_options@@Base+0x183c>  // b.pmore
    e4dc:	lsl	x26, x25, #10
    e4e0:	add	x1, x21, x26
    e4e4:	ldr	x0, [x21, x26]
    e4e8:	cbz	x0, e558 <__sancov_default_options@@Base+0x185c>
    e4ec:	ldr	x2, [x21, x26]
    e4f0:	sub	x1, x2, #0x1
    e4f4:	str	x1, [x21, x26]
    e4f8:	lsl	x0, x25, #7
    e4fc:	add	x1, x0, x1
    e500:	add	x1, x1, #0x4
    e504:	ldr	x3, [x21, x1, lsl #3]
    e508:	add	x0, x0, x2
    e50c:	add	x0, x0, #0x2
    e510:	ldr	x0, [x21, x0, lsl #3]
    e514:	prfm	pldl1keep, [x0]
    e518:	add	x1, x21, #0xd, lsl #12
    e51c:	add	x1, x1, #0x800
    e520:	ldr	x0, [x1, #16]
    e524:	add	x25, x21, x25, lsl #10
    e528:	ldr	x2, [x25, #16]
    e52c:	add	x0, x0, x2
    e530:	str	x0, [x1, #16]
    e534:	b	e46c <__sancov_default_options@@Base+0x1770>
    e538:	mov	x4, #0x36                  	// #54
    e53c:	mov	x3, x25
    e540:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e544:	add	x2, x2, #0x9a8
    e548:	mov	w1, #0xa0                  	// #160
    e54c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e550:	add	x0, x0, #0x9c8
    e554:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e558:	mov	x3, x25
    e55c:	mov	x0, x21
    e560:	bl	dc8c <__sancov_default_options@@Base+0xf90>
    e564:	and	w0, w0, #0xff
    e568:	cbnz	w0, e4ec <__sancov_default_options@@Base+0x17f0>
    e56c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    e570:	ldr	x0, [x0, #4024]
    e574:	ldr	x1, [x0]
    e578:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e57c:	add	x0, x0, #0xd10
    e580:	bl	1a3fc <OnPrint@@Base+0x3d8>
    e584:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    e588:	cbz	x2, e8dc <__sancov_default_options@@Base+0x1be0>
    e58c:	stp	x19, x20, [sp, #-48]!
    e590:	stp	x21, x22, [sp, #16]
    e594:	str	x30, [sp, #40]
    e598:	mov	x20, x0
    e59c:	mov	x21, x1
    e5a0:	mov	x19, x2
    e5a4:	mov	x0, #0xffffffffffff        	// #281474976710655
    e5a8:	cmp	x2, x0
    e5ac:	b.ls	e6ac <__sancov_default_options@@Base+0x19b0>  // b.plast
    e5b0:	add	x0, x20, #0x80, lsl #12
    e5b4:	add	x0, x0, #0xc00
    e5b8:	ldr	x2, [x0, #448]
    e5bc:	sub	x0, x2, #0x1
    e5c0:	tst	x19, x0
    e5c4:	b.ne	e848 <__sancov_default_options@@Base+0x1b4c>  // b.any
    e5c8:	sub	x19, x19, x2
    e5cc:	add	x0, x20, #0xc1, lsl #12
    e5d0:	mov	w2, #0x1                   	// #1
    e5d4:	ldxrb	w1, [x0]
    e5d8:	stxrb	w3, w2, [x0]
    e5dc:	cbnz	w3, e5d4 <__sancov_default_options@@Base+0x18d8>
    e5e0:	dmb	ish
    e5e4:	and	w1, w1, #0xff
    e5e8:	cbnz	w1, e86c <__sancov_default_options@@Base+0x1b70>
    e5ec:	ldr	x1, [x19, #24]
    e5f0:	add	x0, x20, #0x80, lsl #12
    e5f4:	add	x0, x0, #0xdc0
    e5f8:	ldr	x2, [x0, #8]
    e5fc:	ldr	x3, [x2, x1, lsl #3]
    e600:	cmp	x3, x19
    e604:	b.ne	e874 <__sancov_default_options@@Base+0x1b78>  // b.any
    e608:	add	x0, x20, #0xc0, lsl #12
    e60c:	add	x0, x0, #0xdc0
    e610:	ldr	x4, [x0, #16]
    e614:	cmp	x1, x4
    e618:	b.cs	e894 <__sancov_default_options@@Base+0x1b98>  // b.hs, b.nlast
    e61c:	sub	x4, x4, #0x1
    e620:	add	x3, x20, #0x80, lsl #12
    e624:	add	x3, x3, #0xdc0
    e628:	add	x0, x3, #0x40, lsl #12
    e62c:	str	x4, [x0, #16]
    e630:	ldr	x4, [x2, x4, lsl #3]
    e634:	str	x4, [x2, x1, lsl #3]
    e638:	ldr	x2, [x3, #8]
    e63c:	ldr	x2, [x2, x1, lsl #3]
    e640:	str	x1, [x2, #24]
    e644:	strb	wzr, [x0, #24]
    e648:	ldr	x1, [x0, #40]
    e64c:	add	x1, x1, #0x1
    e650:	str	x1, [x0, #40]
    e654:	ldr	x1, [x0, #48]
    e658:	ldr	x2, [x19, #8]
    e65c:	sub	x1, x1, x2
    e660:	str	x1, [x0, #48]
    e664:	add	x20, x20, #0xc1, lsl #12
    e668:	ldr	x1, [x20, #24]
    e66c:	ldr	x2, [x19, #8]
    e670:	sub	x1, x1, x2
    e674:	str	x1, [x20, #24]
    e678:	ldr	x1, [x20, #32]
    e67c:	ldr	x2, [x19, #8]
    e680:	sub	x1, x1, x2
    e684:	str	x1, [x20, #32]
    e688:	dmb	ish
    e68c:	strb	wzr, [x20]
    e690:	ldr	x1, [x19, #8]
    e694:	ldr	x0, [x19]
    e698:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    e69c:	ldp	x21, x22, [sp, #16]
    e6a0:	ldr	x30, [sp, #40]
    e6a4:	ldp	x19, x20, [sp], #48
    e6a8:	ret
    e6ac:	lsr	x0, x2, #20
    e6b0:	lsr	x2, x2, #32
    e6b4:	ldr	x1, [x20, x2, lsl #3]
    e6b8:	dmb	ish
    e6bc:	cbz	x1, e5b0 <__sancov_default_options@@Base+0x18b4>
    e6c0:	and	x0, x0, #0xfff
    e6c4:	ldrb	w1, [x1, x0]
    e6c8:	cbz	w1, e5b0 <__sancov_default_options@@Base+0x18b4>
    e6cc:	str	x23, [sp, #32]
    e6d0:	ldr	x1, [x20, x2, lsl #3]
    e6d4:	dmb	ish
    e6d8:	cbz	x1, e748 <__sancov_default_options@@Base+0x1a4c>
    e6dc:	ldrb	w22, [x1, x0]
    e6e0:	cbz	x22, e748 <__sancov_default_options@@Base+0x1a4c>
    e6e4:	cmp	x22, #0x35
    e6e8:	b.hi	e768 <__sancov_default_options@@Base+0x1a6c>  // b.pmore
    e6ec:	lsl	x23, x22, #10
    e6f0:	add	x1, x21, x23
    e6f4:	ldr	x6, [x1, #8]
    e6f8:	cbz	x6, e788 <__sancov_default_options@@Base+0x1a8c>
    e6fc:	ldr	x2, [x21, x23]
    e700:	ldr	x0, [x1, #8]
    e704:	cmp	x2, x0
    e708:	b.eq	e834 <__sancov_default_options@@Base+0x1b38>  // b.none
    e70c:	ldr	x0, [x21, x23]
    e710:	add	x1, x0, #0x1
    e714:	str	x1, [x21, x23]
    e718:	add	x0, x0, x22, lsl #7
    e71c:	add	x0, x0, #0x4
    e720:	str	x19, [x21, x0, lsl #3]
    e724:	add	x2, x21, #0xd, lsl #12
    e728:	add	x2, x2, #0x800
    e72c:	ldr	x0, [x2, #16]
    e730:	add	x1, x21, x22, lsl #10
    e734:	ldr	x1, [x1, #16]
    e738:	sub	x0, x0, x1
    e73c:	str	x0, [x2, #16]
    e740:	ldr	x23, [sp, #32]
    e744:	b	e69c <__sancov_default_options@@Base+0x19a0>
    e748:	mov	x4, #0x0                   	// #0
    e74c:	mov	x3, #0x0                   	// #0
    e750:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e754:	add	x2, x2, #0xad0
    e758:	mov	w1, #0xae                  	// #174
    e75c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e760:	add	x0, x0, #0x9c8
    e764:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e768:	mov	x4, #0x36                  	// #54
    e76c:	mov	x3, x22
    e770:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e774:	add	x2, x2, #0x9a8
    e778:	mov	w1, #0xaf                  	// #175
    e77c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e780:	add	x0, x0, #0x9c8
    e784:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e788:	add	x3, x21, #0x408
    e78c:	mov	x2, #0x1                   	// #1
    e790:	mov	x7, #0x40                  	// #64
    e794:	mov	x14, #0x200                 	// #512
    e798:	mov	x13, x6
    e79c:	mov	x8, #0x14                  	// #20
    e7a0:	mov	w11, #0x4000                	// #16384
    e7a4:	mov	x10, x2
    e7a8:	mov	x9, #0x3e                  	// #62
    e7ac:	mov	x12, #0x100                 	// #256
    e7b0:	b	e81c <__sancov_default_options@@Base+0x1b20>
    e7b4:	sub	x5, x2, #0x10
    e7b8:	lsr	x0, x5, #2
    e7bc:	lsl	x0, x12, x0
    e7c0:	lsr	x4, x0, #2
    e7c4:	and	x5, x5, #0x3
    e7c8:	madd	x4, x4, x5, x0
    e7cc:	cbz	x4, e8b4 <__sancov_default_options@@Base+0x1bb8>
    e7d0:	udiv	w5, w11, w4
    e7d4:	mov	w0, w5
    e7d8:	cmp	w5, #0x40
    e7dc:	csel	x0, x0, x7, ls  // ls = plast
    e7e0:	cmp	x0, #0x0
    e7e4:	csel	x0, x0, x10, ne  // ne = any
    e7e8:	cmp	x0, #0x3e
    e7ec:	csel	x0, x0, x9, ls  // ls = plast
    e7f0:	lsl	x5, x0, #1
    e7f4:	str	x5, [x3]
    e7f8:	str	x4, [x3, #8]
    e7fc:	add	x0, x0, #0x2
    e800:	cmp	x4, x0, lsl #3
    e804:	csel	x0, x6, x8, cs  // cs = hs, nlast
    e808:	str	x0, [x3, #16]
    e80c:	add	x2, x2, #0x1
    e810:	add	x3, x3, #0x400
    e814:	cmp	x2, #0x36
    e818:	b.eq	e6fc <__sancov_default_options@@Base+0x1a00>  // b.none
    e81c:	cmp	x2, #0x35
    e820:	b.eq	e8cc <__sancov_default_options@@Base+0x1bd0>  // b.none
    e824:	lsl	x4, x2, #4
    e828:	cmp	x2, #0x10
    e82c:	b.hi	e7b4 <__sancov_default_options@@Base+0x1ab8>  // b.pmore
    e830:	b	e7cc <__sancov_default_options@@Base+0x1ad0>
    e834:	mov	x3, x22
    e838:	mov	x2, x20
    e83c:	mov	x0, x21
    e840:	bl	e41c <__sancov_default_options@@Base+0x1720>
    e844:	b	e70c <__sancov_default_options@@Base+0x1a10>
    e848:	str	x23, [sp, #32]
    e84c:	mov	x4, #0x0                   	// #0
    e850:	mov	x3, #0x0                   	// #0
    e854:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e858:	add	x2, x2, #0xd60
    e85c:	mov	w1, #0x123                 	// #291
    e860:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e864:	add	x0, x0, #0xae8
    e868:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e86c:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    e870:	b	e5ec <__sancov_default_options@@Base+0x18f0>
    e874:	str	x23, [sp, #32]
    e878:	mov	x4, x19
    e87c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e880:	add	x2, x2, #0xd88
    e884:	mov	w1, #0x88                  	// #136
    e888:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e88c:	add	x0, x0, #0xae8
    e890:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e894:	str	x23, [sp, #32]
    e898:	mov	x3, x1
    e89c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e8a0:	add	x2, x2, #0xda8
    e8a4:	mov	w1, #0x89                  	// #137
    e8a8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    e8ac:	add	x0, x0, #0xae8
    e8b0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e8b4:	str	xzr, [x3]
    e8b8:	str	xzr, [x3, #8]
    e8bc:	str	x8, [x3, #16]
    e8c0:	add	x2, x2, #0x1
    e8c4:	add	x3, x3, #0x400
    e8c8:	b	e81c <__sancov_default_options@@Base+0x1b20>
    e8cc:	str	x7, [x3]
    e8d0:	str	x14, [x3, #8]
    e8d4:	mov	x0, x13
    e8d8:	b	e808 <__sancov_default_options@@Base+0x1b0c>
    e8dc:	ret
    e8e0:	stp	x19, x20, [sp, #-64]!
    e8e4:	stp	x21, x22, [sp, #16]
    e8e8:	stp	x23, x24, [sp, #32]
    e8ec:	str	x30, [sp, #56]
    e8f0:	mov	x20, x0
    e8f4:	mov	x22, x1
    e8f8:	mov	x21, x3
    e8fc:	mov	x24, x4
    e900:	cbz	x2, e968 <__sancov_default_options@@Base+0x1c6c>
    e904:	mov	x19, x2
    e908:	cbz	x3, e97c <__sancov_default_options@@Base+0x1c80>
    e90c:	str	x25, [sp, #48]
    e910:	mov	x23, x2
    e914:	mov	x0, #0xffffffffffff        	// #281474976710655
    e918:	cmp	x2, x0
    e91c:	b.ls	e988 <__sancov_default_options@@Base+0x1c8c>  // b.plast
    e920:	add	x0, x20, #0xc1, lsl #12
    e924:	mov	w2, #0x1                   	// #1
    e928:	ldxrb	w1, [x0]
    e92c:	stxrb	w3, w2, [x0]
    e930:	cbnz	w3, e928 <__sancov_default_options@@Base+0x1c2c>
    e934:	dmb	ish
    e938:	and	w1, w1, #0xff
    e93c:	cbnz	w1, ea20 <__sancov_default_options@@Base+0x1d24>
    e940:	add	x0, x20, #0xc0, lsl #12
    e944:	add	x0, x0, #0xdc0
    e948:	ldr	x0, [x0, #16]
    e94c:	cbz	x0, ebc0 <__sancov_default_options@@Base+0x1ec4>
    e950:	add	x1, x20, #0x80, lsl #12
    e954:	add	x1, x1, #0xdc0
    e958:	ldr	x2, [x1, #8]
    e95c:	add	x1, x2, x0, lsl #3
    e960:	mov	x0, #0x0                   	// #0
    e964:	b	ea34 <__sancov_default_options@@Base+0x1d38>
    e968:	mov	x3, x4
    e96c:	mov	x2, x21
    e970:	bl	df84 <__sancov_default_options@@Base+0x1288>
    e974:	mov	x23, x0
    e978:	b	eb30 <__sancov_default_options@@Base+0x1e34>
    e97c:	bl	e588 <__sancov_default_options@@Base+0x188c>
    e980:	mov	x23, #0x0                   	// #0
    e984:	b	eb30 <__sancov_default_options@@Base+0x1e34>
    e988:	lsr	x1, x2, #20
    e98c:	lsr	x0, x2, #32
    e990:	ldr	x0, [x20, x0, lsl #3]
    e994:	dmb	ish
    e998:	cbz	x0, e920 <__sancov_default_options@@Base+0x1c24>
    e99c:	and	x1, x1, #0xfff
    e9a0:	ldrb	w0, [x0, x1]
    e9a4:	cbz	w0, e920 <__sancov_default_options@@Base+0x1c24>
    e9a8:	lsr	x0, x19, #20
    e9ac:	lsr	x2, x19, #32
    e9b0:	ldr	x1, [x20, x2, lsl #3]
    e9b4:	dmb	ish
    e9b8:	cbz	x1, eabc <__sancov_default_options@@Base+0x1dc0>
    e9bc:	and	x0, x0, #0xfff
    e9c0:	ldrb	w1, [x1, x0]
    e9c4:	cbz	w1, eabc <__sancov_default_options@@Base+0x1dc0>
    e9c8:	ldr	x1, [x20, x2, lsl #3]
    e9cc:	dmb	ish
    e9d0:	cbz	x1, ebf8 <__sancov_default_options@@Base+0x1efc>
    e9d4:	ldrb	w1, [x1, x0]
    e9d8:	cbz	w1, ebf8 <__sancov_default_options@@Base+0x1efc>
    e9dc:	ldr	x1, [x20, x2, lsl #3]
    e9e0:	dmb	ish
    e9e4:	cbz	x1, ec18 <__sancov_default_options@@Base+0x1f1c>
    e9e8:	ldrb	w1, [x1, x0]
    e9ec:	mov	x25, #0x200                 	// #512
    e9f0:	cmp	x1, #0x35
    e9f4:	b.eq	eaf0 <__sancov_default_options@@Base+0x1df4>  // b.none
    e9f8:	cmp	x1, #0x10
    e9fc:	b.ls	ec18 <__sancov_default_options@@Base+0x1f1c>  // b.plast
    ea00:	sub	x1, x1, #0x10
    ea04:	lsr	x25, x1, #2
    ea08:	mov	x0, #0x100                 	// #256
    ea0c:	lsl	x0, x0, x25
    ea10:	lsr	x25, x0, #2
    ea14:	and	x1, x1, #0x3
    ea18:	madd	x25, x25, x1, x0
    ea1c:	b	eaf0 <__sancov_default_options@@Base+0x1df4>
    ea20:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
    ea24:	b	e940 <__sancov_default_options@@Base+0x1c44>
    ea28:	add	x2, x2, #0x8
    ea2c:	cmp	x1, x2
    ea30:	b.eq	ea54 <__sancov_default_options@@Base+0x1d58>  // b.none
    ea34:	ldr	x3, [x2]
    ea38:	cmp	x23, x3
    ea3c:	b.cc	ea28 <__sancov_default_options@@Base+0x1d2c>  // b.lo, b.ul, b.last
    ea40:	sub	x5, x23, x3
    ea44:	sub	x4, x23, x0
    ea48:	cmp	x5, x4
    ea4c:	csel	x0, x0, x3, cs  // cs = hs, nlast
    ea50:	b	ea28 <__sancov_default_options@@Base+0x1d2c>
    ea54:	cbz	x0, ebc8 <__sancov_default_options@@Base+0x1ecc>
    ea58:	ldr	x4, [x0]
    ea5c:	cmp	x4, x0
    ea60:	b.hi	eb48 <__sancov_default_options@@Base+0x1e4c>  // b.pmore
    ea64:	ldr	x1, [x0, #8]
    ea68:	add	x4, x4, x1
    ea6c:	cmp	x4, x0
    ea70:	b.ls	eb64 <__sancov_default_options@@Base+0x1e68>  // b.plast
    ea74:	cmp	x19, x0
    ea78:	b.cc	eb80 <__sancov_default_options@@Base+0x1e84>  // b.lo, b.ul, b.last
    ea7c:	cmp	x19, x4
    ea80:	b.cs	ebd0 <__sancov_default_options@@Base+0x1ed4>  // b.hs, b.nlast
    ea84:	add	x1, x20, #0x80, lsl #12
    ea88:	add	x1, x1, #0xc00
    ea8c:	ldr	x1, [x1, #448]
    ea90:	sub	x2, x1, #0x1
    ea94:	add	x1, x0, x1
    ea98:	tst	x2, x0
    ea9c:	b.ne	eba0 <__sancov_default_options@@Base+0x1ea4>  // b.any
    eaa0:	dmb	ish
    eaa4:	add	x0, x20, #0xc1, lsl #12
    eaa8:	strb	wzr, [x0]
    eaac:	cbz	x1, ebd8 <__sancov_default_options@@Base+0x1edc>
    eab0:	mov	x0, #0xffffffffffff        	// #281474976710655
    eab4:	cmp	x19, x0
    eab8:	b.ls	e9a8 <__sancov_default_options@@Base+0x1cac>  // b.plast
    eabc:	add	x0, x20, #0x80, lsl #12
    eac0:	add	x0, x0, #0xc00
    eac4:	ldr	x0, [x0, #448]
    eac8:	sub	x1, x0, #0x1
    eacc:	tst	x19, x1
    ead0:	b.ne	ec20 <__sancov_default_options@@Base+0x1f24>  // b.any
    ead4:	sub	x2, x19, x0
    ead8:	ldr	x25, [x2, #16]
    eadc:	add	x25, x25, x1
    eae0:	neg	x2, x0
    eae4:	and	x25, x25, x2
    eae8:	tst	x0, x1
    eaec:	b.ne	ec40 <__sancov_default_options@@Base+0x1f44>  // b.any
    eaf0:	mov	x3, x24
    eaf4:	mov	x2, x21
    eaf8:	mov	x1, x22
    eafc:	mov	x0, x20
    eb00:	bl	df84 <__sancov_default_options@@Base+0x1288>
    eb04:	mov	x23, x0
    eb08:	cbz	x0, eb1c <__sancov_default_options@@Base+0x1e20>
    eb0c:	cmp	x21, x25
    eb10:	csel	x2, x21, x25, ls  // ls = plast
    eb14:	mov	x1, x19
    eb18:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    eb1c:	mov	x2, x19
    eb20:	mov	x1, x22
    eb24:	mov	x0, x20
    eb28:	bl	e588 <__sancov_default_options@@Base+0x188c>
    eb2c:	ldr	x25, [sp, #48]
    eb30:	mov	x0, x23
    eb34:	ldp	x21, x22, [sp, #16]
    eb38:	ldp	x23, x24, [sp, #32]
    eb3c:	ldr	x30, [sp, #56]
    eb40:	ldp	x19, x20, [sp], #64
    eb44:	ret
    eb48:	mov	x3, x0
    eb4c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eb50:	add	x2, x2, #0xdc0
    eb54:	mov	w1, #0xc1                  	// #193
    eb58:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eb5c:	add	x0, x0, #0xae8
    eb60:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    eb64:	mov	x3, x0
    eb68:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eb6c:	add	x2, x2, #0xde8
    eb70:	mov	w1, #0xc2                  	// #194
    eb74:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eb78:	add	x0, x0, #0xae8
    eb7c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    eb80:	mov	x4, x19
    eb84:	mov	x3, x0
    eb88:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eb8c:	add	x2, x2, #0xe20
    eb90:	mov	w1, #0xc3                  	// #195
    eb94:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eb98:	add	x0, x0, #0xae8
    eb9c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    eba0:	mov	x4, #0x0                   	// #0
    eba4:	mov	x3, #0x0                   	// #0
    eba8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ebac:	add	x2, x2, #0xe40
    ebb0:	mov	w1, #0x12b                 	// #299
    ebb4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ebb8:	add	x0, x0, #0xae8
    ebbc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ebc0:	mov	x1, #0x0                   	// #0
    ebc4:	b	eaa0 <__sancov_default_options@@Base+0x1da4>
    ebc8:	mov	x1, #0x0                   	// #0
    ebcc:	b	eaa0 <__sancov_default_options@@Base+0x1da4>
    ebd0:	mov	x1, #0x0                   	// #0
    ebd4:	b	eaa0 <__sancov_default_options@@Base+0x1da4>
    ebd8:	mov	x4, #0x0                   	// #0
    ebdc:	mov	x3, #0x0                   	// #0
    ebe0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ebe4:	add	x2, x2, #0xe70
    ebe8:	mov	w1, #0x62                  	// #98
    ebec:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ebf0:	add	x0, x0, #0xcc0
    ebf4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ebf8:	mov	x4, #0x0                   	// #0
    ebfc:	mov	x3, #0x0                   	// #0
    ec00:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ec04:	add	x2, x2, #0xe70
    ec08:	mov	w1, #0xcc                  	// #204
    ec0c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ec10:	add	x0, x0, #0x888
    ec14:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ec18:	lsl	x25, x1, #4
    ec1c:	b	eaf0 <__sancov_default_options@@Base+0x1df4>
    ec20:	mov	x4, #0x0                   	// #0
    ec24:	mov	x3, #0x0                   	// #0
    ec28:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ec2c:	add	x2, x2, #0xd60
    ec30:	mov	w1, #0x123                 	// #291
    ec34:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ec38:	add	x0, x0, #0xae8
    ec3c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ec40:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ec44:	add	x0, x0, #0x338
    ec48:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    ec4c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ec50:	str	x30, [sp, #-16]!
    ec54:	bl	6790 <__errno_location@plt>
    ec58:	mov	w1, #0xc                   	// #12
    ec5c:	str	w1, [x0]
    ec60:	ldr	x30, [sp], #16
    ec64:	ret
    ec68:	stp	x19, x20, [sp, #-64]!
    ec6c:	stp	x21, x30, [sp, #16]
    ec70:	mov	x20, x0
    ec74:	mov	x21, x1
    ec78:	add	x19, sp, #0x20
    ec7c:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ec80:	add	x1, x1, #0xe90
    ec84:	mov	x0, x19
    ec88:	bl	eebc <__sancov_default_options@@Base+0x21c0>
    ec8c:	mov	x3, x21
    ec90:	mov	x2, x20
    ec94:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ec98:	ldr	x0, [x0, #4024]
    ec9c:	ldr	x1, [x0]
    eca0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eca4:	add	x0, x0, #0xea0
    eca8:	bl	1a3fc <OnPrint@@Base+0x3d8>
    ecac:	mov	x0, x19
    ecb0:	bl	ef14 <__sancov_default_options@@Base+0x2218>
    ecb4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ecb8:	stp	x19, x20, [sp, #-64]!
    ecbc:	str	x30, [sp, #16]
    ecc0:	mov	x19, x0
    ecc4:	mov	x2, x1
    ecc8:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    eccc:	add	x1, x1, #0xf08
    ecd0:	add	x0, sp, #0x20
    ecd4:	bl	eebc <__sancov_default_options@@Base+0x21c0>
    ecd8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ecdc:	ldr	x0, [x0, #4024]
    ece0:	ldr	x20, [x0]
    ece4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ece8:	ldr	x0, [x0, #4016]
    ecec:	ldr	x0, [x0]
    ecf0:	cbz	x0, ed20 <__sancov_default_options@@Base+0x2024>
    ecf4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ecf8:	ldr	x0, [x0, #4016]
    ecfc:	ldr	x3, [x0]
    ed00:	mov	x2, x19
    ed04:	mov	x1, x20
    ed08:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ed0c:	add	x0, x0, #0xf20
    ed10:	bl	1a3fc <OnPrint@@Base+0x3d8>
    ed14:	add	x0, sp, #0x20
    ed18:	bl	ef14 <__sancov_default_options@@Base+0x2218>
    ed1c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ed20:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    ed24:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ed28:	ldr	x1, [x1, #4016]
    ed2c:	str	x0, [x1]
    ed30:	b	ecf4 <__sancov_default_options@@Base+0x1ff8>
    ed34:	stp	x19, x20, [sp, #-64]!
    ed38:	str	x30, [sp, #16]
    ed3c:	mov	x20, x0
    ed40:	add	x19, sp, #0x20
    ed44:	mov	x2, x1
    ed48:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ed4c:	add	x1, x1, #0xfa0
    ed50:	mov	x0, x19
    ed54:	bl	eebc <__sancov_default_options@@Base+0x21c0>
    ed58:	mov	x2, x20
    ed5c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ed60:	ldr	x0, [x0, #4024]
    ed64:	ldr	x1, [x0]
    ed68:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
    ed6c:	add	x0, x0, #0xfc0
    ed70:	bl	1a3fc <OnPrint@@Base+0x3d8>
    ed74:	mov	x0, x19
    ed78:	bl	ef14 <__sancov_default_options@@Base+0x2218>
    ed7c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ed80:	stp	x19, x20, [sp, #-64]!
    ed84:	stp	x21, x30, [sp, #16]
    ed88:	mov	x21, x0
    ed8c:	mov	x20, x1
    ed90:	add	x19, sp, #0x20
    ed94:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ed98:	add	x1, x1, #0x10
    ed9c:	mov	x0, x19
    eda0:	bl	eebc <__sancov_default_options@@Base+0x21c0>
    eda4:	mov	x3, x21
    eda8:	mov	x2, x20
    edac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    edb0:	ldr	x0, [x0, #4024]
    edb4:	ldr	x1, [x0]
    edb8:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    edbc:	add	x0, x0, #0x30
    edc0:	bl	1a3fc <OnPrint@@Base+0x3d8>
    edc4:	mov	x0, x19
    edc8:	bl	ef14 <__sancov_default_options@@Base+0x2218>
    edcc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    edd0:	stp	x19, x20, [sp, #-64]!
    edd4:	str	x30, [sp, #16]
    edd8:	mov	x20, x0
    eddc:	add	x19, sp, #0x20
    ede0:	mov	x2, x1
    ede4:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ede8:	add	x1, x1, #0xd0
    edec:	mov	x0, x19
    edf0:	bl	eebc <__sancov_default_options@@Base+0x21c0>
    edf4:	mov	x3, #0x8                   	// #8
    edf8:	mov	x2, x20
    edfc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ee00:	ldr	x0, [x0, #4024]
    ee04:	ldr	x1, [x0]
    ee08:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ee0c:	add	x0, x0, #0xf8
    ee10:	bl	1a3fc <OnPrint@@Base+0x3d8>
    ee14:	mov	x0, x19
    ee18:	bl	ef14 <__sancov_default_options@@Base+0x2218>
    ee1c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ee20:	stp	x19, x20, [sp, #-64]!
    ee24:	stp	x21, x30, [sp, #16]
    ee28:	mov	x20, x0
    ee2c:	mov	x21, x1
    ee30:	add	x19, sp, #0x20
    ee34:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ee38:	add	x1, x1, #0x180
    ee3c:	mov	x0, x19
    ee40:	bl	eebc <__sancov_default_options@@Base+0x21c0>
    ee44:	mov	x3, x21
    ee48:	mov	x2, x20
    ee4c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ee50:	ldr	x0, [x0, #4024]
    ee54:	ldr	x1, [x0]
    ee58:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ee5c:	add	x0, x0, #0x198
    ee60:	bl	1a3fc <OnPrint@@Base+0x3d8>
    ee64:	mov	x0, x19
    ee68:	bl	ef14 <__sancov_default_options@@Base+0x2218>
    ee6c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ee70:	stp	x19, x20, [sp, #-64]!
    ee74:	str	x30, [sp, #16]
    ee78:	mov	x20, x0
    ee7c:	add	x19, sp, #0x20
    ee80:	mov	x2, x1
    ee84:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ee88:	add	x1, x1, #0x1f0
    ee8c:	mov	x0, x19
    ee90:	bl	eebc <__sancov_default_options@@Base+0x21c0>
    ee94:	mov	x2, x20
    ee98:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ee9c:	ldr	x0, [x0, #4024]
    eea0:	ldr	x1, [x0]
    eea4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    eea8:	add	x0, x0, #0x200
    eeac:	bl	1a3fc <OnPrint@@Base+0x3d8>
    eeb0:	mov	x0, x19
    eeb4:	bl	ef14 <__sancov_default_options@@Base+0x2218>
    eeb8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    eebc:	stp	x19, x20, [sp, #-32]!
    eec0:	stp	x21, x30, [sp, #16]
    eec4:	mov	x19, x0
    eec8:	mov	x21, x1
    eecc:	mov	x20, x2
    eed0:	bl	1dac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd1c>
    eed4:	str	x21, [x19, #8]
    eed8:	str	x20, [x19, #16]
    eedc:	bl	1d098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
    eee0:	ands	w2, w0, #0xff
    eee4:	strb	w0, [x19, #24]
    eee8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    eeec:	add	x0, x0, #0x640
    eef0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    eef4:	add	x1, x1, #0x2f0
    eef8:	csel	x1, x1, x0, ne  // ne = any
    eefc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ef00:	add	x0, x0, #0x288
    ef04:	bl	1a368 <OnPrint@@Base+0x344>
    ef08:	ldp	x21, x30, [sp, #16]
    ef0c:	ldp	x19, x20, [sp], #32
    ef10:	ret
    ef14:	stp	x19, x30, [sp, #-16]!
    ef18:	mov	x19, x0
    ef1c:	ldrb	w2, [x0, #24]
    ef20:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    ef24:	add	x0, x0, #0x640
    ef28:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ef2c:	add	x1, x1, #0x300
    ef30:	cmp	w2, #0x0
    ef34:	csel	x1, x1, x0, ne  // ne = any
    ef38:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    ef3c:	add	x0, x0, #0x288
    ef40:	bl	1a368 <OnPrint@@Base+0x344>
    ef44:	ldr	x0, [x19, #16]
    ef48:	bl	1c1b4 <OnPrint@@Base+0x2190>
    ef4c:	bl	d160 <__sancov_default_options@@Base+0x464>
    ef50:	mov	x2, #0x0                   	// #0
    ef54:	ldr	x1, [x19, #16]
    ef58:	ldr	x0, [x19, #8]
    ef5c:	bl	1d0f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
    ef60:	mov	x0, x19
    ef64:	bl	1dc18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>
    ef68:	ldp	x19, x30, [sp], #16
    ef6c:	ret
    ef70:	str	x30, [sp, #-16]!
    ef74:	tst	w4, #0xff
    ef78:	b.ne	ef88 <__sancov_default_options@@Base+0x228c>  // b.any
    ef7c:	adrp	x4, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    ef80:	ldr	w4, [x4, #2944]
    ef84:	cbz	w4, ef98 <__sancov_default_options@@Base+0x229c>
    ef88:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ef8c:	add	x0, x0, #0x248
    ef90:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    ef94:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ef98:	adrp	x4, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    ef9c:	mov	w5, #0x1                   	// #1
    efa0:	str	w5, [x4, #2944]
    efa4:	mov	w6, w3
    efa8:	mov	x5, x1
    efac:	mov	x4, x0
    efb0:	mov	x3, x0
    efb4:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    efb8:	ldr	x1, [x0, #1232]
    efbc:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    efc0:	add	x0, x0, #0x260
    efc4:	bl	1a3fc <OnPrint@@Base+0x3d8>
    efc8:	bl	18438 <__sanitizer_set_report_fd@@Base+0x55f4>
    efcc:	mov	x4, #0x0                   	// #0
    efd0:	mov	x3, #0x0                   	// #0
    efd4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    efd8:	add	x2, x2, #0x2a8
    efdc:	mov	w1, #0x35                  	// #53
    efe0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    efe4:	add	x0, x0, #0x2d0
    efe8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    efec:	stp	x19, x20, [sp, #-32]!
    eff0:	str	x30, [sp, #24]
    eff4:	mov	x19, x0
    eff8:	cbz	x0, f034 <__sancov_default_options@@Base+0x2338>
    effc:	mov	x20, x1
    f000:	cbz	x1, f034 <__sancov_default_options@@Base+0x2338>
    f004:	str	x21, [sp, #16]
    f008:	bl	14a5c <__sanitizer_set_report_fd@@Base+0x1c18>
    f00c:	mov	x21, x0
    f010:	mov	x0, x19
    f014:	cbz	x21, f024 <__sancov_default_options@@Base+0x2328>
    f018:	mov	x0, x20
    f01c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
    f020:	add	x0, x21, x0
    f024:	ldrb	w1, [x0]
    f028:	cmp	w1, #0x2e
    f02c:	b.eq	f040 <__sancov_default_options@@Base+0x2344>  // b.none
    f030:	ldr	x21, [sp, #16]
    f034:	ldr	x30, [sp, #24]
    f038:	ldp	x19, x20, [sp], #32
    f03c:	ret
    f040:	ldrb	w2, [x0, #1]
    f044:	add	x1, x0, #0x2
    f048:	cmp	w2, #0x2f
    f04c:	csel	x0, x1, x0, eq  // eq = none
    f050:	ldr	x21, [sp, #16]
    f054:	b	f034 <__sancov_default_options@@Base+0x2338>
    f058:	stp	x19, x30, [sp, #-16]!
    f05c:	mov	x19, x0
    f060:	cbz	x0, f074 <__sancov_default_options@@Base+0x2378>
    f064:	mov	w1, #0x2f                  	// #47
    f068:	bl	147c0 <__sanitizer_set_report_fd@@Base+0x197c>
    f06c:	cmp	x0, #0x0
    f070:	csinc	x19, x19, x0, eq  // eq = none
    f074:	mov	x0, x19
    f078:	ldp	x19, x30, [sp], #16
    f07c:	ret
    f080:	stp	x19, x20, [sp, #-32]!
    f084:	stp	x21, x30, [sp, #16]
    f088:	mov	x19, x0
    f08c:	bl	166b0 <__sanitizer_set_report_fd@@Base+0x386c>
    f090:	mov	x0, x19
    f094:	bl	f058 <__sancov_default_options@@Base+0x235c>
    f098:	mov	x21, x0
    f09c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
    f0a0:	mov	x20, x0
    f0a4:	cmp	x19, x21
    f0a8:	b.eq	f0c0 <__sancov_default_options@@Base+0x23c4>  // b.none
    f0ac:	mov	x2, x0
    f0b0:	mov	x1, x21
    f0b4:	mov	x0, x19
    f0b8:	bl	14600 <__sanitizer_set_report_fd@@Base+0x17bc>
    f0bc:	strb	wzr, [x19, x20]
    f0c0:	mov	x0, x20
    f0c4:	ldp	x21, x30, [sp, #16]
    f0c8:	ldp	x19, x20, [sp], #32
    f0cc:	ret
    f0d0:	cbz	x0, f17c <__sancov_default_options@@Base+0x2480>
    f0d4:	stp	x19, x20, [sp, #-32]!
    f0d8:	str	x30, [sp, #16]
    f0dc:	ldrb	w1, [x0]
    f0e0:	cbz	w1, f174 <__sancov_default_options@@Base+0x2478>
    f0e4:	mov	x19, x0
    f0e8:	mov	w20, #0x6d                  	// #109
    f0ec:	b	f15c <__sancov_default_options@@Base+0x2460>
    f0f0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    f0f4:	add	x2, x2, #0x310
    f0f8:	mov	w1, #0x68                  	// #104
    f0fc:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    f100:	add	x0, x0, #0x2d0
    f104:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f108:	ldrb	w2, [x0, #1]
    f10c:	cmp	w2, #0x5b
    f110:	b.ne	f164 <__sancov_default_options@@Base+0x2468>  // b.any
    f114:	mov	w1, w20
    f118:	bl	1485c <__sanitizer_set_report_fd@@Base+0x1a18>
    f11c:	ldrb	w1, [x0]
    f120:	cbnz	w1, f134 <__sancov_default_options@@Base+0x2438>
    f124:	strb	wzr, [x19]
    f128:	ldr	x30, [sp, #16]
    f12c:	ldp	x19, x20, [sp], #32
    f130:	ret
    f134:	add	x0, x0, #0x1
    f138:	b	f144 <__sancov_default_options@@Base+0x2448>
    f13c:	add	x19, x19, #0x1
    f140:	add	x0, x0, #0x1
    f144:	ldrb	w1, [x0]
    f148:	cbz	w1, f124 <__sancov_default_options@@Base+0x2428>
    f14c:	mov	x3, x0
    f150:	mov	x4, x19
    f154:	cmp	x0, x19
    f158:	b.cc	f0f0 <__sancov_default_options@@Base+0x23f4>  // b.lo, b.ul, b.last
    f15c:	cmp	w1, #0x1b
    f160:	b.eq	f108 <__sancov_default_options@@Base+0x240c>  // b.none
    f164:	cmp	x0, x19
    f168:	b.eq	f13c <__sancov_default_options@@Base+0x2440>  // b.none
    f16c:	strb	w1, [x19]
    f170:	b	f13c <__sancov_default_options@@Base+0x2440>
    f174:	mov	x19, x0
    f178:	b	f124 <__sancov_default_options@@Base+0x2428>
    f17c:	ret
    f180:	stp	x19, x30, [sp, #-16]!
    f184:	mov	x19, x0
    f188:	mov	x1, #0x0                   	// #0
    f18c:	ldr	x0, [x0]
    f190:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
    f194:	str	xzr, [x19, #8]
    f198:	str	xzr, [x19, #16]
    f19c:	str	xzr, [x19]
    f1a0:	str	wzr, [x19, #24]
    f1a4:	mov	x2, #0x10                  	// #16
    f1a8:	mov	w1, #0x0                   	// #0
    f1ac:	add	x0, x19, #0x1c
    f1b0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    f1b4:	strb	wzr, [x19, #44]
    f1b8:	ldr	x1, [x19, #48]
    f1bc:	cbnz	x1, f1e0 <__sancov_default_options@@Base+0x24e4>
    f1c0:	ldp	x19, x30, [sp], #16
    f1c4:	ret
    f1c8:	sub	x1, x1, #0x1
    f1cc:	str	x1, [x19, #48]
    f1d0:	mov	x1, #0x0                   	// #0
    f1d4:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
    f1d8:	ldr	x1, [x19, #48]
    f1dc:	cbz	x1, f1c0 <__sancov_default_options@@Base+0x24c4>
    f1e0:	ldr	x0, [x19, #56]
    f1e4:	ldr	x2, [x0]
    f1e8:	str	x2, [x19, #56]
    f1ec:	cbnz	x2, f1c8 <__sancov_default_options@@Base+0x24cc>
    f1f0:	str	xzr, [x19, #64]
    f1f4:	b	f1c8 <__sancov_default_options@@Base+0x24cc>
    f1f8:	stp	x19, x20, [sp, #-32]!
    f1fc:	stp	x21, x30, [sp, #16]
    f200:	mov	x19, x0
    f204:	mov	x21, x1
    f208:	mov	x20, x2
    f20c:	bl	f180 <__sancov_default_options@@Base+0x2484>
    f210:	mov	x0, x21
    f214:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
    f218:	str	x0, [x19]
    f21c:	str	x20, [x19, #8]
    f220:	ldp	x21, x30, [sp, #16]
    f224:	ldp	x19, x20, [sp], #32
    f228:	ret
    f22c:	stp	x19, x20, [sp, #-48]!
    f230:	stp	x21, x22, [sp, #16]
    f234:	str	x30, [sp, #32]
    f238:	mov	x19, x0
    f23c:	mov	w21, w3
    f240:	mov	x20, x4
    f244:	and	w22, w5, #0xff
    f248:	bl	f1f8 <__sancov_default_options@@Base+0x24fc>
    f24c:	str	w21, [x19, #24]
    f250:	mov	x2, #0x10                  	// #16
    f254:	mov	x1, x20
    f258:	add	x0, x19, #0x1c
    f25c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    f260:	strb	w22, [x19, #44]
    f264:	ldp	x21, x22, [sp, #16]
    f268:	ldr	x30, [sp, #32]
    f26c:	ldp	x19, x20, [sp], #48
    f270:	ret
    f274:	stp	x19, x20, [sp, #-64]!
    f278:	stp	x21, x22, [sp, #16]
    f27c:	stp	x23, x24, [sp, #32]
    f280:	stp	x25, x30, [sp, #48]
    f284:	mov	x20, x0
    f288:	mov	x23, x1
    f28c:	mov	x22, x2
    f290:	and	w24, w3, #0xff
    f294:	and	w25, w4, #0xff
    f298:	mov	x21, x5
    f29c:	mov	x2, #0x0                   	// #0
    f2a0:	mov	x1, #0x0                   	// #0
    f2a4:	mov	x0, #0x30                  	// #48
    f2a8:	bl	d178 <__sancov_default_options@@Base+0x47c>
    f2ac:	mov	x19, x0
    f2b0:	str	xzr, [x0]
    f2b4:	str	x23, [x0, #8]
    f2b8:	str	x22, [x0, #16]
    f2bc:	strb	w24, [x0, #24]
    f2c0:	strb	w25, [x0, #25]
    f2c4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
    f2c8:	add	x1, x1, #0x640
    f2cc:	cmp	x21, #0x0
    f2d0:	mov	x2, #0x10                  	// #16
    f2d4:	csel	x1, x1, x21, eq  // eq = none
    f2d8:	add	x0, x0, #0x1a
    f2dc:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
    f2e0:	ldr	x0, [x20, #48]
    f2e4:	cbnz	x0, f324 <__sancov_default_options@@Base+0x2628>
    f2e8:	str	xzr, [x19]
    f2ec:	str	x19, [x20, #64]
    f2f0:	str	x19, [x20, #56]
    f2f4:	mov	x0, #0x1                   	// #1
    f2f8:	str	x0, [x20, #48]
    f2fc:	cbz	w24, f310 <__sancov_default_options@@Base+0x2614>
    f300:	ldr	x0, [x20, #16]
    f304:	cmp	x0, x22
    f308:	b.cs	f310 <__sancov_default_options@@Base+0x2614>  // b.hs, b.nlast
    f30c:	str	x22, [x20, #16]
    f310:	ldp	x21, x22, [sp, #16]
    f314:	ldp	x23, x24, [sp, #32]
    f318:	ldp	x25, x30, [sp, #48]
    f31c:	ldp	x19, x20, [sp], #64
    f320:	ret
    f324:	str	xzr, [x19]
    f328:	ldr	x1, [x20, #64]
    f32c:	str	x19, [x1]
    f330:	str	x19, [x20, #64]
    f334:	ldr	x0, [x20, #48]
    f338:	add	x0, x0, #0x1
    f33c:	str	x0, [x20, #48]
    f340:	b	f2fc <__sancov_default_options@@Base+0x2600>
    f344:	ldr	x0, [x0, #56]
    f348:	cbnz	x0, f35c <__sancov_default_options@@Base+0x2660>
    f34c:	mov	w0, #0x0                   	// #0
    f350:	b	f378 <__sancov_default_options@@Base+0x267c>
    f354:	ldr	x0, [x0]
    f358:	cbz	x0, f378 <__sancov_default_options@@Base+0x267c>
    f35c:	ldr	x2, [x0, #8]
    f360:	cmp	x2, x1
    f364:	b.hi	f354 <__sancov_default_options@@Base+0x2658>  // b.pmore
    f368:	ldr	x2, [x0, #16]
    f36c:	cmp	x2, x1
    f370:	b.ls	f354 <__sancov_default_options@@Base+0x2658>  // b.plast
    f374:	mov	w0, #0x1                   	// #1
    f378:	ret
    f37c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    f380:	ldr	x1, [x1, #4056]
    f384:	ldr	x1, [x1, #128]
    f388:	cbz	x1, f3c4 <__sancov_default_options@@Base+0x26c8>
    f38c:	adrp	x1, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f390:	add	x1, x1, #0xb80
    f394:	add	x1, x1, #0x8
    f398:	ldxr	x2, [x1]
    f39c:	add	x3, x2, x0
    f3a0:	stlxr	w4, x3, [x1]
    f3a4:	cbnz	w4, f398 <__sancov_default_options@@Base+0x269c>
    f3a8:	dmb	ish
    f3ac:	add	x0, x2, x0
    f3b0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    f3b4:	ldr	x1, [x1, #4056]
    f3b8:	ldr	x1, [x1, #128]
    f3bc:	cmp	x1, x0, lsr #20
    f3c0:	b.ls	f3c8 <__sancov_default_options@@Base+0x26cc>  // b.plast
    f3c4:	ret
    f3c8:	str	x30, [sp, #-16]!
    f3cc:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    f3d0:	add	x0, x0, #0x320
    f3d4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    f3d8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    f3dc:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    f3e0:	ldr	x1, [x1, #4056]
    f3e4:	ldr	x1, [x1, #128]
    f3e8:	cbz	x1, f410 <__sancov_default_options@@Base+0x2714>
    f3ec:	neg	x0, x0
    f3f0:	adrp	x1, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f3f4:	add	x1, x1, #0xb80
    f3f8:	add	x1, x1, #0x8
    f3fc:	ldxr	x2, [x1]
    f400:	add	x2, x2, x0
    f404:	stlxr	w3, x2, [x1]
    f408:	cbnz	w3, f3fc <__sancov_default_options@@Base+0x2700>
    f40c:	dmb	ish
    f410:	ret
    f414:	cbz	x1, f5bc <__sancov_default_options@@Base+0x28c0>
    f418:	stp	x19, x20, [sp, #-96]!
    f41c:	stp	x23, x24, [sp, #32]
    f420:	str	x30, [sp, #80]
    f424:	mov	x19, x0
    f428:	mov	x23, x1
    f42c:	ldrb	w1, [x1]
    f430:	mov	w0, #0x0                   	// #0
    f434:	cbz	w1, f5e8 <__sancov_default_options@@Base+0x28ec>
    f438:	mov	w0, #0x1                   	// #1
    f43c:	cbz	x19, f5e8 <__sancov_default_options@@Base+0x28ec>
    f440:	stp	x21, x22, [sp, #16]
    f444:	stp	x25, x26, [sp, #48]
    f448:	stp	x27, x28, [sp, #64]
    f44c:	ldrb	w0, [x19]
    f450:	mov	w24, #0x0                   	// #0
    f454:	cmp	w0, #0x5e
    f458:	b.eq	f474 <__sancov_default_options@@Base+0x2778>  // b.none
    f45c:	mov	w1, #0x0                   	// #0
    f460:	mov	w26, #0x2a                  	// #42
    f464:	mov	w25, #0x24                  	// #36
    f468:	mov	w28, #0x1                   	// #1
    f46c:	mov	w27, #0x0                   	// #0
    f470:	b	f52c <__sancov_default_options@@Base+0x2830>
    f474:	add	x19, x19, #0x1
    f478:	mov	w24, #0x1                   	// #1
    f47c:	b	f45c <__sancov_default_options@@Base+0x2760>
    f480:	add	x19, x19, #0x1
    f484:	mov	x0, x23
    f488:	mov	w1, w28
    f48c:	b	f524 <__sancov_default_options@@Base+0x2828>
    f490:	ldrb	w0, [x23]
    f494:	cmp	w0, #0x0
    f498:	cset	w0, eq  // eq = none
    f49c:	orr	w1, w1, w0
    f4a0:	and	w0, w1, #0xff
    f4a4:	ldp	x21, x22, [sp, #16]
    f4a8:	ldp	x25, x26, [sp, #48]
    f4ac:	ldp	x27, x28, [sp, #64]
    f4b0:	b	f5e8 <__sancov_default_options@@Base+0x28ec>
    f4b4:	cbnz	x0, f57c <__sancov_default_options@@Base+0x2880>
    f4b8:	mov	x1, x19
    f4bc:	mov	x0, x23
    f4c0:	bl	14a5c <__sanitizer_set_report_fd@@Base+0x1c18>
    f4c4:	mov	x21, x0
    f4c8:	mov	x0, x19
    f4cc:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
    f4d0:	add	x0, x21, x0
    f4d4:	mov	x19, x22
    f4d8:	b	f50c <__sancov_default_options@@Base+0x2810>
    f4dc:	strb	wzr, [x20]
    f4e0:	mov	x1, x19
    f4e4:	mov	x0, x23
    f4e8:	bl	14a5c <__sanitizer_set_report_fd@@Base+0x1c18>
    f4ec:	mov	x21, x0
    f4f0:	mov	x0, x19
    f4f4:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
    f4f8:	add	x0, x21, x0
    f4fc:	mov	x19, x20
    f500:	cmp	x20, x22
    f504:	csel	w1, w25, w26, eq  // eq = none
    f508:	strb	w1, [x19]
    f50c:	cbz	x21, f60c <__sancov_default_options@@Base+0x2910>
    f510:	cmp	x23, x21
    f514:	cset	w1, ne  // ne = any
    f518:	ands	w1, w24, w1
    f51c:	b.ne	f5a8 <__sancov_default_options@@Base+0x28ac>  // b.any
    f520:	cbz	x19, f5c4 <__sancov_default_options@@Base+0x28c8>
    f524:	mov	x23, x0
    f528:	mov	w24, w27
    f52c:	ldrb	w0, [x19]
    f530:	cbz	w0, f5d8 <__sancov_default_options@@Base+0x28dc>
    f534:	cmp	w0, #0x2a
    f538:	b.eq	f480 <__sancov_default_options@@Base+0x2784>  // b.none
    f53c:	cmp	w0, #0x24
    f540:	b.eq	f490 <__sancov_default_options@@Base+0x2794>  // b.none
    f544:	ldrb	w0, [x23]
    f548:	cbz	w0, f5f8 <__sancov_default_options@@Base+0x28fc>
    f54c:	mov	w1, w26
    f550:	mov	x0, x19
    f554:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1904>
    f558:	mov	x20, x0
    f55c:	mov	w1, w25
    f560:	mov	x0, x19
    f564:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1904>
    f568:	mov	x22, x0
    f56c:	cbz	x20, f4b4 <__sancov_default_options@@Base+0x27b8>
    f570:	cmp	x0, #0x0
    f574:	ccmp	x20, x0, #0x0, ne  // ne = any
    f578:	b.ls	f4dc <__sancov_default_options@@Base+0x27e0>  // b.plast
    f57c:	strb	wzr, [x22]
    f580:	mov	x1, x19
    f584:	mov	x0, x23
    f588:	bl	14a5c <__sanitizer_set_report_fd@@Base+0x1c18>
    f58c:	mov	x21, x0
    f590:	mov	x0, x19
    f594:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
    f598:	add	x0, x21, x0
    f59c:	mov	x19, x22
    f5a0:	mov	w1, w25
    f5a4:	b	f508 <__sancov_default_options@@Base+0x280c>
    f5a8:	mov	w0, #0x0                   	// #0
    f5ac:	ldp	x21, x22, [sp, #16]
    f5b0:	ldp	x25, x26, [sp, #48]
    f5b4:	ldp	x27, x28, [sp, #64]
    f5b8:	b	f5e8 <__sancov_default_options@@Base+0x28ec>
    f5bc:	mov	w0, #0x0                   	// #0
    f5c0:	ret
    f5c4:	mov	w0, #0x1                   	// #1
    f5c8:	ldp	x21, x22, [sp, #16]
    f5cc:	ldp	x25, x26, [sp, #48]
    f5d0:	ldp	x27, x28, [sp, #64]
    f5d4:	b	f5e8 <__sancov_default_options@@Base+0x28ec>
    f5d8:	mov	w0, #0x1                   	// #1
    f5dc:	ldp	x21, x22, [sp, #16]
    f5e0:	ldp	x25, x26, [sp, #48]
    f5e4:	ldp	x27, x28, [sp, #64]
    f5e8:	ldp	x23, x24, [sp, #32]
    f5ec:	ldr	x30, [sp, #80]
    f5f0:	ldp	x19, x20, [sp], #96
    f5f4:	ret
    f5f8:	mov	w0, #0x0                   	// #0
    f5fc:	ldp	x21, x22, [sp, #16]
    f600:	ldp	x25, x26, [sp, #48]
    f604:	ldp	x27, x28, [sp, #64]
    f608:	b	f5e8 <__sancov_default_options@@Base+0x28ec>
    f60c:	mov	w0, #0x0                   	// #0
    f610:	ldp	x21, x22, [sp, #16]
    f614:	ldp	x25, x26, [sp, #48]
    f618:	ldp	x27, x28, [sp, #64]
    f61c:	b	f5e8 <__sancov_default_options@@Base+0x28ec>
    f620:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f624:	add	x0, x0, #0xbf0
    f628:	ret
    f62c:	str	x30, [sp, #-16]!
    f630:	mov	x1, #0x1000                	// #4096
    f634:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f638:	add	x0, x0, #0xbf0
    f63c:	bl	f080 <__sancov_default_options@@Base+0x2384>
    f640:	ldr	x30, [sp], #16
    f644:	ret
    f648:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    f64c:	ldrb	w0, [x0, #3056]
    f650:	cbz	w0, f658 <__sancov_default_options@@Base+0x295c>
    f654:	ret
    f658:	str	x30, [sp, #-16]!
    f65c:	mov	x1, #0x1000                	// #4096
    f660:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    f664:	add	x0, x0, #0xbf0
    f668:	bl	1661c <__sanitizer_set_report_fd@@Base+0x37d8>
    f66c:	mov	x1, #0x1000                	// #4096
    f670:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f674:	add	x0, x0, #0xbf0
    f678:	bl	f080 <__sancov_default_options@@Base+0x2384>
    f67c:	ldr	x30, [sp], #16
    f680:	ret
    f684:	stp	x19, x20, [sp, #-32]!
    f688:	str	x30, [sp, #16]
    f68c:	mov	x20, x0
    f690:	mov	x19, x1
    f694:	bl	f648 <__sancov_default_options@@Base+0x294c>
    f698:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    f69c:	add	x0, x0, #0xbf0
    f6a0:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
    f6a4:	cbnz	x19, f6b8 <__sancov_default_options@@Base+0x29bc>
    f6a8:	mov	x0, x19
    f6ac:	ldr	x30, [sp, #16]
    f6b0:	ldp	x19, x20, [sp], #32
    f6b4:	ret
    f6b8:	sub	x19, x19, #0x1
    f6bc:	cmp	x19, x0
    f6c0:	csel	x19, x19, x0, ls  // ls = plast
    f6c4:	mov	x2, x19
    f6c8:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    f6cc:	add	x1, x1, #0xbf0
    f6d0:	mov	x0, x20
    f6d4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    f6d8:	strb	wzr, [x20, x19]
    f6dc:	b	f6a8 <__sancov_default_options@@Base+0x29ac>
    f6e0:	stp	x19, x20, [sp, #-32]!
    f6e4:	str	x30, [sp, #16]
    f6e8:	bl	15918 <__sanitizer_set_report_fd@@Base+0x2ad4>
    f6ec:	cbz	x0, f730 <__sancov_default_options@@Base+0x2a34>
    f6f0:	mov	x19, x0
    f6f4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    f6f8:	add	x0, x0, #0x358
    f6fc:	bl	1a368 <OnPrint@@Base+0x344>
    f700:	ldr	x1, [x19]
    f704:	cbz	x1, f724 <__sancov_default_options@@Base+0x2a28>
    f708:	add	x19, x19, #0x8
    f70c:	adrp	x20, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
    f710:	add	x20, x20, #0xb48
    f714:	mov	x0, x20
    f718:	bl	1a368 <OnPrint@@Base+0x344>
    f71c:	ldr	x1, [x19], #8
    f720:	cbnz	x1, f714 <__sancov_default_options@@Base+0x2a18>
    f724:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    f728:	add	x0, x0, #0x368
    f72c:	bl	1a368 <OnPrint@@Base+0x344>
    f730:	ldr	x30, [sp, #16]
    f734:	ldp	x19, x20, [sp], #32
    f738:	ret
    f73c:	stp	x19, x20, [sp, #-48]!
    f740:	stp	x21, x22, [sp, #16]
    f744:	str	x30, [sp, #32]
    f748:	mov	x22, x0
    f74c:	mov	x21, x1
    f750:	adrp	x20, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f754:	add	x20, x20, #0xb80
    f758:	add	x19, x20, #0x10
    f75c:	add	x20, x20, #0x60
    f760:	ldr	x2, [x19]
    f764:	cbz	x2, f780 <__sancov_default_options@@Base+0x2a84>
    f768:	mov	x1, x21
    f76c:	mov	x0, x22
    f770:	blr	x2
    f774:	add	x19, x19, #0x10
    f778:	cmp	x19, x20
    f77c:	b.ne	f760 <__sancov_default_options@@Base+0x2a64>  // b.any
    f780:	ldp	x21, x22, [sp, #16]
    f784:	ldr	x30, [sp, #32]
    f788:	ldp	x19, x20, [sp], #48
    f78c:	ret
    f790:	stp	x19, x20, [sp, #-32]!
    f794:	stp	x21, x30, [sp, #16]
    f798:	mov	x21, x0
    f79c:	mov	x19, #0x0                   	// #0
    f7a0:	adrp	x20, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f7a4:	add	x20, x20, #0xb80
    f7a8:	add	x20, x20, #0x10
    f7ac:	add	x1, x20, x19
    f7b0:	ldr	x1, [x1, #8]
    f7b4:	cbz	x1, f7cc <__sancov_default_options@@Base+0x2ad0>
    f7b8:	mov	x0, x21
    f7bc:	blr	x1
    f7c0:	add	x19, x19, #0x10
    f7c4:	cmp	x19, #0x50
    f7c8:	b.ne	f7ac <__sancov_default_options@@Base+0x2ab0>  // b.any
    f7cc:	ldp	x21, x30, [sp, #16]
    f7d0:	ldp	x19, x20, [sp], #32
    f7d4:	ret

000000000000f7d8 <__sanitizer_report_error_summary@@Base>:
    f7d8:	str	x30, [sp, #-16]!
    f7dc:	mov	x1, x0
    f7e0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
    f7e4:	add	x0, x0, #0x40
    f7e8:	bl	1a368 <OnPrint@@Base+0x344>
    f7ec:	ldr	x30, [sp], #16
    f7f0:	ret
    f7f4:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    f7f8:	ldr	x2, [x2, #4056]
    f7fc:	ldrb	w2, [x2, #60]
    f800:	cbnz	w2, f808 <__sanitizer_report_error_summary@@Base+0x30>
    f804:	ret
    f808:	stp	x19, x20, [sp, #-80]!
    f80c:	stp	x21, x22, [sp, #16]
    f810:	str	x30, [sp, #32]
    f814:	mov	x20, x0
    f818:	mov	x19, x1
    f81c:	str	xzr, [sp, #56]
    f820:	str	xzr, [sp, #64]
    f824:	str	xzr, [sp, #48]
    f828:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f82c:	ldr	x0, [x0, #3040]
    f830:	cbz	x0, f918 <__sanitizer_report_error_summary@@Base+0x140>
    f834:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f838:	ldr	x2, [x0, #3040]
    f83c:	sub	x0, x2, #0x1
    f840:	tst	x0, x2
    f844:	b.ne	f928 <__sanitizer_report_error_summary@@Base+0x150>  // b.any
    f848:	add	x21, x2, #0x3ff
    f84c:	neg	x2, x2
    f850:	and	x21, x21, x2
    f854:	mov	w2, #0x0                   	// #0
    f858:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    f85c:	add	x1, x1, #0x350
    f860:	mov	x0, x21
    f864:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    f868:	mov	x22, x0
    f86c:	ldr	x2, [sp, #64]
    f870:	ldr	x1, [sp, #48]
    f874:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    f878:	ldr	x1, [sp, #56]
    f87c:	ldr	x0, [sp, #48]
    f880:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    f884:	str	x22, [sp, #48]
    f888:	str	x21, [sp, #56]
    f88c:	ldr	x0, [sp, #64]
    f890:	cmp	x0, #0x3ff
    f894:	b.hi	f8bc <__sanitizer_report_error_summary@@Base+0xe4>  // b.pmore
    f898:	cmp	x21, #0x3ff
    f89c:	b.ls	f938 <__sanitizer_report_error_summary@@Base+0x160>  // b.plast
    f8a0:	ldr	x0, [sp, #64]
    f8a4:	mov	x2, #0x400                 	// #1024
    f8a8:	sub	x2, x2, x0
    f8ac:	mov	w1, #0x0                   	// #0
    f8b0:	ldr	x3, [sp, #48]
    f8b4:	add	x0, x3, x0
    f8b8:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    f8bc:	mov	x0, #0x400                 	// #1024
    f8c0:	str	x0, [sp, #64]
    f8c4:	str	xzr, [sp, #72]
    f8c8:	ldr	x0, [sp, #48]
    f8cc:	strb	wzr, [x0]
    f8d0:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
    f8d4:	ldr	x2, [x0, #1232]
    f8d8:	cmp	x19, #0x0
    f8dc:	mov	x3, x20
    f8e0:	csel	x2, x2, x19, eq  // eq = none
    f8e4:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    f8e8:	add	x1, x1, #0x370
    f8ec:	add	x0, sp, #0x30
    f8f0:	bl	1a490 <OnPrint@@Base+0x46c>
    f8f4:	ldr	x0, [sp, #48]
    f8f8:	bl	6370 <__sanitizer_report_error_summary@plt>
    f8fc:	ldr	x1, [sp, #56]
    f900:	ldr	x0, [sp, #48]
    f904:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    f908:	ldp	x21, x22, [sp, #16]
    f90c:	ldr	x30, [sp, #32]
    f910:	ldp	x19, x20, [sp], #80
    f914:	ret
    f918:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    f91c:	adrp	x1, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f920:	str	x0, [x1, #3040]
    f924:	b	f834 <__sanitizer_report_error_summary@@Base+0x5c>
    f928:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    f92c:	add	x0, x0, #0x338
    f930:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    f934:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    f938:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f93c:	ldr	x0, [x0, #3040]
    f940:	cbz	x0, f9a0 <__sanitizer_report_error_summary@@Base+0x1c8>
    f944:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f948:	ldr	x0, [x0, #3040]
    f94c:	sub	x1, x0, #0x1
    f950:	tst	x1, x0
    f954:	b.ne	f9b0 <__sanitizer_report_error_summary@@Base+0x1d8>  // b.any
    f958:	add	x21, x0, #0x3ff
    f95c:	neg	x0, x0
    f960:	and	x21, x21, x0
    f964:	mov	w2, #0x0                   	// #0
    f968:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    f96c:	add	x1, x1, #0x350
    f970:	mov	x0, x21
    f974:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    f978:	mov	x22, x0
    f97c:	ldr	x2, [sp, #64]
    f980:	ldr	x1, [sp, #48]
    f984:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    f988:	ldr	x1, [sp, #56]
    f98c:	ldr	x0, [sp, #48]
    f990:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    f994:	str	x22, [sp, #48]
    f998:	str	x21, [sp, #56]
    f99c:	b	f8a0 <__sanitizer_report_error_summary@@Base+0xc8>
    f9a0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    f9a4:	adrp	x1, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f9a8:	str	x0, [x1, #3040]
    f9ac:	b	f944 <__sanitizer_report_error_summary@@Base+0x16c>
    f9b0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    f9b4:	add	x0, x0, #0x338
    f9b8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    f9bc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

000000000000f9c0 <__sanitizer_acquire_crash_state@@Base>:
    f9c0:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f9c4:	add	x0, x0, #0xb80
    f9c8:	add	x0, x0, #0x68
    f9cc:	mov	w2, #0x1                   	// #1
    f9d0:	ldxrb	w1, [x0]
    f9d4:	stxrb	w3, w2, [x0]
    f9d8:	cbnz	w3, f9d0 <__sanitizer_acquire_crash_state@@Base+0x10>
    f9dc:	dmb	ish
    f9e0:	ands	w0, w1, #0xff
    f9e4:	cset	w0, eq  // eq = none
    f9e8:	ret

000000000000f9ec <__sanitizer_install_malloc_and_free_hooks@@Base>:
    f9ec:	cmp	x0, #0x0
    f9f0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    f9f4:	b.eq	fa50 <__sanitizer_install_malloc_and_free_hooks@@Base+0x64>  // b.none
    f9f8:	mov	x2, #0x0                   	// #0
    f9fc:	adrp	x3, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fa00:	add	x3, x3, #0xb80
    fa04:	add	x3, x3, #0x10
    fa08:	mov	w4, w2
    fa0c:	lsl	x5, x2, #4
    fa10:	ldr	x5, [x5, x3]
    fa14:	cbz	x5, fa2c <__sanitizer_install_malloc_and_free_hooks@@Base+0x40>
    fa18:	add	x2, x2, #0x1
    fa1c:	cmp	x2, #0x5
    fa20:	b.ne	fa08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c>  // b.any
    fa24:	mov	w0, #0x0                   	// #0
    fa28:	ret
    fa2c:	adrp	x2, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fa30:	add	x2, x2, #0xb80
    fa34:	add	x2, x2, #0x10
    fa38:	sbfiz	x3, x4, #4, #32
    fa3c:	add	x5, x2, x3
    fa40:	str	x0, [x2, x3]
    fa44:	str	x1, [x5, #8]
    fa48:	add	w0, w4, #0x1
    fa4c:	b	fa28 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c>
    fa50:	mov	w0, #0x0                   	// #0
    fa54:	b	fa28 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c>
    fa58:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fa5c:	ldr	x3, [x1, #3088]
    fa60:	cbnz	x3, fa70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x84>
    fa64:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fa68:	str	x0, [x1, #3088]
    fa6c:	ret
    fa70:	str	x30, [sp, #-16]!
    fa74:	mov	x4, #0x0                   	// #0
    fa78:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fa7c:	add	x2, x2, #0x390
    fa80:	mov	w1, #0x16                  	// #22
    fa84:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fa88:	add	x0, x0, #0x3c0
    fa8c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fa90:	mov	x0, #0x0                   	// #0
    fa94:	ret
    fa98:	stp	x19, x20, [sp, #-128]!
    fa9c:	stp	x21, x22, [sp, #16]
    faa0:	stp	x23, x24, [sp, #32]
    faa4:	stp	x25, x26, [sp, #48]
    faa8:	stp	x27, x28, [sp, #64]
    faac:	str	x30, [sp, #80]
    fab0:	stp	d8, d9, [sp, #96]
    fab4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fab8:	ldr	x0, [x0, #4056]
    fabc:	ldr	x21, [x0, #136]
    fac0:	ldr	x22, [x0, #144]
    fac4:	ldrb	w27, [x0, #152]
    fac8:	fmov	d8, xzr
    facc:	mov	w24, #0x0                   	// #0
    fad0:	mov	x26, #0x0                   	// #0
    fad4:	mov	x23, #0x0                   	// #0
    fad8:	adrp	x25, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fadc:	ldr	x25, [x25, #3896]
    fae0:	mov	x28, #0xcccccccccccccccc    	// #-3689348814741910324
    fae4:	movk	x28, #0xcccd
    fae8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    faec:	ldr	x0, [x0, #4024]
    faf0:	str	x0, [sp, #120]
    faf4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    faf8:	ldr	d9, [x0, #1224]
    fafc:	b	fbc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d4>
    fb00:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fb04:	ldr	x0, [x0, #4024]
    fb08:	mov	x2, x19
    fb0c:	ldr	x1, [x0]
    fb10:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fb14:	add	x0, x0, #0x408
    fb18:	bl	1a368 <OnPrint@@Base+0x344>
    fb1c:	mov	x23, x19
    fb20:	b	fbf0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x204>
    fb24:	lsr	x3, x3, #20
    fb28:	ldr	x2, [x20]
    fb2c:	ldr	x0, [sp, #120]
    fb30:	ldr	x1, [x0]
    fb34:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fb38:	add	x0, x0, #0x418
    fb3c:	bl	1a368 <OnPrint@@Base+0x344>
    fb40:	ldr	x26, [x20, #8]
    fb44:	b	fc18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>
    fb48:	mov	x3, x19
    fb4c:	mov	x2, x21
    fb50:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fb54:	ldr	x0, [x0, #4024]
    fb58:	ldr	x1, [x0]
    fb5c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fb60:	add	x0, x0, #0x448
    fb64:	bl	1a3fc <OnPrint@@Base+0x3d8>
    fb68:	bl	18438 <__sanitizer_set_report_fd@@Base+0x55f4>
    fb6c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    fb70:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fb74:	ldr	x0, [x0, #4024]
    fb78:	mov	x3, x19
    fb7c:	mov	x2, x22
    fb80:	ldr	x1, [x0]
    fb84:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fb88:	add	x0, x0, #0x478
    fb8c:	bl	1a3fc <OnPrint@@Base+0x3d8>
    fb90:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fb94:	ldr	x1, [x0, #3088]
    fb98:	mov	w24, w20
    fb9c:	cbz	x1, fba8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
    fba0:	mov	w0, #0x1                   	// #1
    fba4:	blr	x1
    fba8:	cbz	w27, fbc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d4>
    fbac:	ucvtf	d1, x19
    fbb0:	ucvtf	d0, d8
    fbb4:	fmul	d0, d0, d9
    fbb8:	fcmpe	d1, d0
    fbbc:	b.gt	fc64 <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
    fbc0:	mov	w0, #0x64                  	// #100
    fbc4:	bl	18bac <__sanitizer_set_report_fd@@Base+0x5d68>
    fbc8:	bl	17864 <__sanitizer_set_report_fd@@Base+0x4a20>
    fbcc:	lsr	x19, x0, #20
    fbd0:	ldr	w0, [x25]
    fbd4:	cbz	w0, fc18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>
    fbd8:	add	x0, x23, x23, lsl #1
    fbdc:	lsl	x0, x0, #2
    fbe0:	sub	x0, x0, x23
    fbe4:	umulh	x0, x0, x28
    fbe8:	cmp	x19, x0, lsr #3
    fbec:	b.hi	fb00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x114>  // b.pmore
    fbf0:	bl	1b304 <OnPrint@@Base+0x12e0>
    fbf4:	mov	x20, x0
    fbf8:	cbz	x0, fc18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>
    fbfc:	ldr	x3, [x0, #8]
    fc00:	add	x0, x26, x26, lsl #1
    fc04:	lsl	x0, x0, #2
    fc08:	sub	x0, x0, x26
    fc0c:	umulh	x0, x0, x28
    fc10:	cmp	x3, x0, lsr #3
    fc14:	b.hi	fb24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x138>  // b.pmore
    fc18:	cmp	x21, #0x0
    fc1c:	ccmp	x21, x19, #0x2, ne  // ne = any
    fc20:	b.cc	fb48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15c>  // b.lo, b.ul, b.last
    fc24:	cbz	x22, fba8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
    fc28:	cmp	x22, x19
    fc2c:	cset	w20, cc  // cc = lo, ul, last
    fc30:	eor	w0, w24, #0x1
    fc34:	ands	w20, w20, w0
    fc38:	b.ne	fb70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x184>  // b.any
    fc3c:	cmp	w24, #0x0
    fc40:	ccmp	x22, x19, #0x0, ne  // ne = any
    fc44:	b.cc	fba8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>  // b.lo, b.ul, b.last
    fc48:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fc4c:	ldr	x1, [x0, #3088]
    fc50:	mov	w24, w20
    fc54:	cbz	x1, fba8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
    fc58:	mov	w0, #0x0                   	// #0
    fc5c:	blr	x1
    fc60:	b	fba8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
    fc64:	mov	x1, x19
    fc68:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fc6c:	add	x0, x0, #0x4a8
    fc70:	bl	1a368 <OnPrint@@Base+0x344>
    fc74:	mov	x1, #0x14                  	// #20
    fc78:	mov	x0, #0x5a                  	// #90
    fc7c:	bl	6a00 <__sanitizer_print_memory_profile@plt>
    fc80:	fmov	d8, x19
    fc84:	b	fbc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d4>
    fc88:	stp	x19, x20, [sp, #-80]!
    fc8c:	stp	x21, x22, [sp, #16]
    fc90:	str	x30, [sp, #32]
    fc94:	mov	x20, x0
    fc98:	str	xzr, [sp, #56]
    fc9c:	str	xzr, [sp, #64]
    fca0:	str	xzr, [sp, #48]
    fca4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fca8:	ldr	x1, [x1, #4016]
    fcac:	ldr	x0, [x1]
    fcb0:	cbz	x0, fd9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x3b0>
    fcb4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fcb8:	ldr	x0, [x0, #4016]
    fcbc:	ldr	x1, [x0]
    fcc0:	sub	x0, x1, #0x1
    fcc4:	tst	x0, x1
    fcc8:	b.ne	fdb0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c4>  // b.any
    fccc:	mov	x22, #0xffff                	// #65535
    fcd0:	add	x19, x1, x22
    fcd4:	neg	x1, x1
    fcd8:	and	x19, x19, x1
    fcdc:	mov	w2, #0x0                   	// #0
    fce0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    fce4:	add	x1, x1, #0x350
    fce8:	mov	x0, x19
    fcec:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    fcf0:	mov	x21, x0
    fcf4:	ldr	x2, [sp, #64]
    fcf8:	ldr	x1, [sp, #48]
    fcfc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    fd00:	ldr	x1, [sp, #56]
    fd04:	ldr	x0, [sp, #48]
    fd08:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    fd0c:	str	x21, [sp, #48]
    fd10:	str	x19, [sp, #56]
    fd14:	ldr	x0, [sp, #64]
    fd18:	cmp	x0, x22
    fd1c:	b.hi	fd44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x358>  // b.pmore
    fd20:	cmp	x19, x22
    fd24:	b.ls	fdc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3d4>  // b.plast
    fd28:	ldr	x0, [sp, #64]
    fd2c:	mov	x2, #0x10000               	// #65536
    fd30:	sub	x2, x2, x0
    fd34:	mov	w1, #0x0                   	// #0
    fd38:	ldr	x3, [sp, #48]
    fd3c:	add	x0, x3, x0
    fd40:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
    fd44:	mov	x0, #0x10000               	// #65536
    fd48:	str	x0, [sp, #64]
    fd4c:	str	xzr, [sp, #72]
    fd50:	ldr	x0, [sp, #48]
    fd54:	strb	wzr, [x0]
    fd58:	mov	x2, x20
    fd5c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    fd60:	add	x1, x1, #0x288
    fd64:	add	x0, sp, #0x30
    fd68:	bl	1a490 <OnPrint@@Base+0x46c>
    fd6c:	ldr	x20, [sp, #48]
    fd70:	mov	w21, #0xa                   	// #10
    fd74:	mov	w1, w21
    fd78:	mov	x0, x20
    fd7c:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1904>
    fd80:	mov	x19, x0
    fd84:	cbz	x0, fe58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x46c>
    fd88:	strb	wzr, [x0]
    fd8c:	mov	x0, x20
    fd90:	bl	17a18 <__sanitizer_set_report_fd@@Base+0x4bd4>
    fd94:	add	x20, x19, #0x1
    fd98:	b	fd74 <__sanitizer_install_malloc_and_free_hooks@@Base+0x388>
    fd9c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    fda0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fda4:	ldr	x1, [x1, #4016]
    fda8:	str	x0, [x1]
    fdac:	b	fcb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c8>
    fdb0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    fdb4:	add	x0, x0, #0x338
    fdb8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    fdbc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    fdc0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fdc4:	ldr	x0, [x0, #4016]
    fdc8:	ldr	x0, [x0]
    fdcc:	cbz	x0, fe34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x448>
    fdd0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fdd4:	ldr	x0, [x0, #4016]
    fdd8:	ldr	x0, [x0]
    fddc:	sub	x1, x0, #0x1
    fde0:	tst	x1, x0
    fde4:	b.ne	fe48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x45c>  // b.any
    fde8:	add	x19, x0, #0xf, lsl #12
    fdec:	add	x19, x19, #0xfff
    fdf0:	neg	x0, x0
    fdf4:	and	x19, x19, x0
    fdf8:	mov	w2, #0x0                   	// #0
    fdfc:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    fe00:	add	x1, x1, #0x350
    fe04:	mov	x0, x19
    fe08:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
    fe0c:	mov	x21, x0
    fe10:	ldr	x2, [sp, #64]
    fe14:	ldr	x1, [sp, #48]
    fe18:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
    fe1c:	ldr	x1, [sp, #56]
    fe20:	ldr	x0, [sp, #48]
    fe24:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    fe28:	str	x21, [sp, #48]
    fe2c:	str	x19, [sp, #56]
    fe30:	b	fd28 <__sanitizer_install_malloc_and_free_hooks@@Base+0x33c>
    fe34:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
    fe38:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fe3c:	ldr	x1, [x1, #4016]
    fe40:	str	x0, [x1]
    fe44:	b	fdd0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3e4>
    fe48:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
    fe4c:	add	x0, x0, #0x338
    fe50:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
    fe54:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    fe58:	ldrb	w0, [x20]
    fe5c:	cbnz	w0, fe7c <__sanitizer_install_malloc_and_free_hooks@@Base+0x490>
    fe60:	ldr	x1, [sp, #56]
    fe64:	ldr	x0, [sp, #48]
    fe68:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
    fe6c:	ldp	x21, x22, [sp, #16]
    fe70:	ldr	x30, [sp, #32]
    fe74:	ldp	x19, x20, [sp], #80
    fe78:	ret
    fe7c:	mov	x0, x20
    fe80:	bl	17a18 <__sanitizer_set_report_fd@@Base+0x4bd4>
    fe84:	b	fe60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x474>
    fe88:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fe8c:	ldr	x0, [x0, #4056]
    fe90:	ldr	x1, [x0, #136]
    fe94:	ldr	x0, [x0, #144]
    fe98:	orr	x0, x1, x0
    fe9c:	cbnz	x0, feb0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c4>
    fea0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    fea4:	ldr	x0, [x0, #4056]
    fea8:	ldrb	w0, [x0, #152]
    feac:	cbz	w0, fed8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4ec>
    feb0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    feb4:	ldr	x0, [x0, #3992]
    feb8:	cbz	x0, fed8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4ec>
    febc:	str	x30, [sp, #-16]!
    fec0:	mov	x1, #0x0                   	// #0
    fec4:	adrp	x0, f000 <__sancov_default_options@@Base+0x2304>
    fec8:	add	x0, x0, #0xa98
    fecc:	bl	16a9c <__sanitizer_set_report_fd@@Base+0x3c58>
    fed0:	ldr	x30, [sp], #16
    fed4:	ret
    fed8:	ret
    fedc:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fee0:	str	x0, [x1, #3096]
    fee4:	ret

000000000000fee8 <__sanitizer_sandbox_on_notify@@Base>:
    fee8:	str	x30, [sp, #-16]!
    feec:	bl	18f2c <__sanitizer_set_report_fd@@Base+0x60e8>
    fef0:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fef4:	ldr	x0, [x0, #3096]
    fef8:	cbz	x0, ff00 <__sanitizer_sandbox_on_notify@@Base+0x18>
    fefc:	blr	x0
    ff00:	ldr	x30, [sp], #16
    ff04:	ret
    ff08:	stp	x19, x20, [sp, #-64]!
    ff0c:	stp	x21, x22, [sp, #16]
    ff10:	stp	x23, x30, [sp, #32]
    ff14:	mov	x20, x0
    ff18:	mov	x0, x1
    ff1c:	mov	x22, x2
    ff20:	mov	x21, x3
    ff24:	bl	f058 <__sancov_default_options@@Base+0x235c>
    ff28:	cbz	x0, ffe4 <__sanitizer_sandbox_on_notify@@Base+0xfc>
    ff2c:	mov	x19, x0
    ff30:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
    ff34:	ldr	x0, [x0, #4056]
    ff38:	ldr	x23, [x0, #168]
    ff3c:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
    ff40:	adrp	x6, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ff44:	add	x6, x6, #0x530
    ff48:	mov	x5, x0
    ff4c:	mov	x4, x19
    ff50:	mov	x3, x23
    ff54:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ff58:	add	x2, x2, #0x538
    ff5c:	mov	x1, #0x1000                	// #4096
    ff60:	mov	x0, x20
    ff64:	bl	1a028 <OnPrint@@Base+0x4>
    ff68:	add	x2, sp, #0x3c
    ff6c:	mov	w1, #0x1                   	// #1
    ff70:	mov	x0, x20
    ff74:	bl	18054 <__sanitizer_set_report_fd@@Base+0x5210>
    ff78:	mov	w19, w0
    ff7c:	cmn	w0, #0x1
    ff80:	b.eq	10004 <__sanitizer_sandbox_on_notify@@Base+0x11c>  // b.none
    ff84:	mov	x4, #0x0                   	// #0
    ff88:	mov	x3, #0x0                   	// #0
    ff8c:	mov	x2, #0x8                   	// #8
    ff90:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ff94:	add	x1, x1, #0x618
    ff98:	mov	w0, w19
    ff9c:	bl	18108 <__sanitizer_set_report_fd@@Base+0x52c4>
    ffa0:	mov	x4, #0x0                   	// #0
    ffa4:	mov	x3, #0x0                   	// #0
    ffa8:	lsl	x2, x21, #3
    ffac:	mov	x1, x22
    ffb0:	mov	w0, w19
    ffb4:	bl	18108 <__sanitizer_set_report_fd@@Base+0x52c4>
    ffb8:	mov	w0, w19
    ffbc:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
    ffc0:	mov	x2, x21
    ffc4:	mov	x1, x20
    ffc8:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    ffcc:	add	x0, x0, #0x588
    ffd0:	bl	1a368 <OnPrint@@Base+0x344>
    ffd4:	ldp	x21, x22, [sp, #16]
    ffd8:	ldp	x23, x30, [sp, #32]
    ffdc:	ldp	x19, x20, [sp], #64
    ffe0:	ret
    ffe4:	mov	x4, #0x0                   	// #0
    ffe8:	mov	x3, #0x0                   	// #0
    ffec:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fff0:	add	x2, x2, #0x4d0
    fff4:	mov	w1, #0x28                  	// #40
    fff8:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
    fffc:	add	x0, x0, #0x4e0
   10000:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10004:	ldr	w2, [sp, #60]
   10008:	mov	x1, x20
   1000c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10010:	add	x0, x0, #0x548
   10014:	bl	1a3fc <OnPrint@@Base+0x3d8>
   10018:	b	ff84 <__sanitizer_sandbox_on_notify@@Base+0x9c>
   1001c:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10020:	ldrb	w1, [x1, #3104]
   10024:	cbz	w1, 1002c <__sanitizer_sandbox_on_notify@@Base+0x144>
   10028:	ret
   1002c:	stp	x19, x30, [sp, #-16]!
   10030:	and	w0, w0, #0xff
   10034:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10038:	strb	w0, [x1, #3104]
   1003c:	adrp	x19, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   10040:	ldr	x19, [x19, #3952]
   10044:	mov	x0, x19
   10048:	bl	18c04 <__sanitizer_set_report_fd@@Base+0x5dc0>
   1004c:	mov	x0, x19
   10050:	bl	22eac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6104>
   10054:	ldp	x19, x30, [sp], #16
   10058:	ret

000000000001005c <__sanitizer_cov_trace_pc_guard@@Base>:
   1005c:	ldr	w1, [x0]
   10060:	cbnz	w1, 10068 <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   10064:	ret
   10068:	ldr	w3, [x0]
   1006c:	cbz	w3, 10064 <__sanitizer_cov_trace_pc_guard@@Base+0x8>
   10070:	str	x30, [sp, #-16]!
   10074:	sub	w3, w3, #0x1
   10078:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1007c:	ldr	x4, [x0, #3136]
   10080:	cmp	x3, x4
   10084:	b.cs	100a8 <__sanitizer_cov_trace_pc_guard@@Base+0x4c>  // b.hs, b.nlast
   10088:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1008c:	ldr	x0, [x0, #3120]
   10090:	ldr	x1, [x0, x3, lsl #3]
   10094:	cbnz	x1, 100a0 <__sanitizer_cov_trace_pc_guard@@Base+0x44>
   10098:	sub	x30, x30, #0x1
   1009c:	str	x30, [x0, x3, lsl #3]
   100a0:	ldr	x30, [sp], #16
   100a4:	ret
   100a8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   100ac:	add	x2, x2, #0x368
   100b0:	mov	w1, #0x1b6                 	// #438
   100b4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   100b8:	add	x0, x0, #0x380
   100bc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>

00000000000100c0 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   100c0:	cmp	x0, x1
   100c4:	b.eq	102b4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1f4>  // b.none
   100c8:	stp	x19, x20, [sp, #-48]!
   100cc:	str	x30, [sp, #32]
   100d0:	mov	x19, x0
   100d4:	mov	x20, x1
   100d8:	ldr	w0, [x0]
   100dc:	cbz	w0, 100ec <__sanitizer_cov_trace_pc_guard_init@@Base+0x2c>
   100e0:	ldr	x30, [sp, #32]
   100e4:	ldp	x19, x20, [sp], #48
   100e8:	ret
   100ec:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   100f0:	ldrb	w0, [x0, #3112]
   100f4:	cbz	w0, 1018c <__sanitizer_cov_trace_pc_guard_init@@Base+0xcc>
   100f8:	mov	x2, x19
   100fc:	cmp	x19, x20
   10100:	b.eq	101e4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x124>  // b.none
   10104:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10108:	ldr	x1, [x0, #3136]
   1010c:	mov	w0, w1
   10110:	b.cs	10138 <__sanitizer_cov_trace_pc_guard_init@@Base+0x78>  // b.hs, b.nlast
   10114:	add	w0, w0, #0x1
   10118:	str	w0, [x19], #4
   1011c:	cmp	x20, x19
   10120:	b.hi	10114 <__sanitizer_cov_trace_pc_guard_init@@Base+0x54>  // b.pmore
   10124:	add	w1, w1, #0x1
   10128:	sub	x20, x20, #0x1
   1012c:	sub	x20, x20, x2
   10130:	lsr	x20, x20, #2
   10134:	add	w0, w1, w20
   10138:	mov	w19, w0
   1013c:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10140:	ldr	x1, [x1, #3136]
   10144:	cmp	x1, w0, uxtw
   10148:	b.cs	10180 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc0>  // b.hs, b.nlast
   1014c:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10150:	ldr	x0, [x0, #3128]
   10154:	cmp	x19, x0, lsr #3
   10158:	b.hi	10208 <__sanitizer_cov_trace_pc_guard_init@@Base+0x148>  // b.pmore
   1015c:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10160:	add	x1, x1, #0xc20
   10164:	ldr	x0, [x1, #32]
   10168:	sub	x2, x19, x0
   1016c:	ldr	x3, [x1, #16]
   10170:	lsl	x2, x2, #3
   10174:	mov	w1, #0x0                   	// #0
   10178:	add	x0, x3, x0, lsl #3
   1017c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   10180:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10184:	str	x19, [x0, #3136]
   10188:	b	100e0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x20>
   1018c:	stp	x21, x22, [sp, #16]
   10190:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10194:	add	x0, x0, #0xc20
   10198:	add	x21, x0, #0x8
   1019c:	mov	w1, #0x1                   	// #1
   101a0:	strb	w1, [x0, #8]
   101a4:	bl	cd18 <__sancov_default_options@@Base+0x1c>
   101a8:	str	xzr, [x21, #16]
   101ac:	str	xzr, [x21, #24]
   101b0:	str	xzr, [x21, #8]
   101b4:	ldr	w0, [x19]
   101b8:	cbnz	w0, 101c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x104>
   101bc:	ldp	x21, x22, [sp, #16]
   101c0:	b	100f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x38>
   101c4:	mov	x4, #0x0                   	// #0
   101c8:	mov	x3, #0x0                   	// #0
   101cc:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   101d0:	add	x2, x2, #0x5b0
   101d4:	mov	w1, #0x77                  	// #119
   101d8:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   101dc:	add	x0, x0, #0x4e0
   101e0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   101e4:	stp	x21, x22, [sp, #16]
   101e8:	mov	x4, x20
   101ec:	mov	x3, x19
   101f0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   101f4:	add	x2, x2, #0x5c8
   101f8:	mov	w1, #0x78                  	// #120
   101fc:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10200:	add	x0, x0, #0x4e0
   10204:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10208:	stp	x21, x22, [sp, #16]
   1020c:	lsl	x20, x19, #3
   10210:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   10214:	ldr	x0, [x0, #4016]
   10218:	ldr	x0, [x0]
   1021c:	cbz	x0, 10290 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d0>
   10220:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   10224:	ldr	x0, [x0, #4016]
   10228:	ldr	x0, [x0]
   1022c:	sub	x21, x0, #0x1
   10230:	tst	x0, x21
   10234:	b.ne	102a4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1e4>  // b.any
   10238:	add	x20, x20, x21
   1023c:	neg	x21, x0
   10240:	and	x21, x20, x21
   10244:	mov	w2, #0x0                   	// #0
   10248:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1024c:	add	x1, x1, #0x350
   10250:	mov	x0, x21
   10254:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   10258:	mov	x22, x0
   1025c:	adrp	x20, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10260:	add	x20, x20, #0xc20
   10264:	ldr	x2, [x20, #32]
   10268:	lsl	x2, x2, #3
   1026c:	ldr	x1, [x20, #16]
   10270:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   10274:	ldr	x1, [x20, #24]
   10278:	ldr	x0, [x20, #16]
   1027c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   10280:	str	x22, [x20, #16]
   10284:	str	x21, [x20, #24]
   10288:	ldp	x21, x22, [sp, #16]
   1028c:	b	1015c <__sanitizer_cov_trace_pc_guard_init@@Base+0x9c>
   10290:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   10294:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   10298:	ldr	x1, [x1, #4016]
   1029c:	str	x0, [x1]
   102a0:	b	10220 <__sanitizer_cov_trace_pc_guard_init@@Base+0x160>
   102a4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   102a8:	add	x0, x0, #0x338
   102ac:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   102b0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   102b4:	ret

00000000000102b8 <__sanitizer_cov_reset@@Base>:
   102b8:	str	x30, [sp, #-16]!
   102bc:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   102c0:	ldr	x2, [x0, #3136]
   102c4:	cbz	x2, 102e4 <__sanitizer_cov_reset@@Base+0x2c>
   102c8:	lsl	x2, x2, #3
   102cc:	mov	w1, #0x0                   	// #0
   102d0:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   102d4:	ldr	x0, [x0, #3120]
   102d8:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   102dc:	ldr	x30, [sp], #16
   102e0:	ret
   102e4:	mov	x4, #0x0                   	// #0
   102e8:	mov	x3, #0x0                   	// #0
   102ec:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   102f0:	add	x2, x2, #0x368
   102f4:	mov	w1, #0x1b6                 	// #438
   102f8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   102fc:	add	x0, x0, #0x380
   10300:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>

0000000000010304 <__sanitizer_cov_trace_cmp@@Base>:
   10304:	ret

0000000000010308 <__sanitizer_cov_trace_cmp1@@Base>:
   10308:	ret

000000000001030c <__sanitizer_cov_trace_cmp2@@Base>:
   1030c:	ret

0000000000010310 <__sanitizer_cov_trace_cmp4@@Base>:
   10310:	ret

0000000000010314 <__sanitizer_cov_trace_cmp8@@Base>:
   10314:	ret

0000000000010318 <__sanitizer_cov_trace_const_cmp1@@Base>:
   10318:	ret

000000000001031c <__sanitizer_cov_trace_const_cmp2@@Base>:
   1031c:	ret

0000000000010320 <__sanitizer_cov_trace_const_cmp4@@Base>:
   10320:	ret

0000000000010324 <__sanitizer_cov_trace_const_cmp8@@Base>:
   10324:	ret

0000000000010328 <__sanitizer_cov_trace_switch@@Base>:
   10328:	ret

000000000001032c <__sanitizer_cov_trace_div4@@Base>:
   1032c:	ret

0000000000010330 <__sanitizer_cov_trace_div8@@Base>:
   10330:	ret

0000000000010334 <__sanitizer_cov_trace_gep@@Base>:
   10334:	ret

0000000000010338 <__sanitizer_cov_trace_pc_indir@@Base>:
   10338:	ret

000000000001033c <__sanitizer_cov_8bit_counters_init@@Base>:
   1033c:	ret

0000000000010340 <__sanitizer_cov_pcs_init@@Base>:
   10340:	ret

0000000000010344 <__sanitizer_dump_coverage@@Base>:
   10344:	cbnz	x1, 1034c <__sanitizer_dump_coverage@@Base+0x8>
   10348:	ret
   1034c:	stp	x19, x20, [sp, #-128]!
   10350:	stp	x21, x22, [sp, #16]
   10354:	stp	x23, x24, [sp, #32]
   10358:	stp	x25, x26, [sp, #48]
   1035c:	stp	x27, x28, [sp, #64]
   10360:	str	x30, [sp, #80]
   10364:	mov	x22, x0
   10368:	mov	x20, x1
   1036c:	mov	x2, #0x0                   	// #0
   10370:	mov	x1, #0x0                   	// #0
   10374:	mov	x0, #0x1000                	// #4096
   10378:	bl	d178 <__sancov_default_options@@Base+0x47c>
   1037c:	str	x0, [sp, #112]
   10380:	mov	x2, #0x0                   	// #0
   10384:	mov	x1, #0x0                   	// #0
   10388:	mov	x0, #0x1000                	// #4096
   1038c:	bl	d178 <__sancov_default_options@@Base+0x47c>
   10390:	mov	x26, x0
   10394:	lsl	x19, x20, #3
   10398:	mov	x2, #0x0                   	// #0
   1039c:	mov	x1, #0x0                   	// #0
   103a0:	mov	x0, x19
   103a4:	bl	d178 <__sancov_default_options@@Base+0x47c>
   103a8:	mov	x21, x0
   103ac:	mov	x2, x19
   103b0:	mov	x1, x22
   103b4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   103b8:	mov	w2, #0x0                   	// #0
   103bc:	mov	x1, x20
   103c0:	mov	x0, x21
   103c4:	bl	10540 <__sanitizer_cov_dump@@Base+0x10>
   103c8:	str	xzr, [sp, #104]
   103cc:	mov	w25, #0x0                   	// #0
   103d0:	mov	x28, #0x0                   	// #0
   103d4:	mov	x19, #0x0                   	// #0
   103d8:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   103dc:	add	x0, x0, #0x5e0
   103e0:	str	x0, [sp, #120]
   103e4:	b	10424 <__sanitizer_dump_coverage@@Base+0xe0>
   103e8:	mov	x1, x22
   103ec:	ldr	x0, [sp, #120]
   103f0:	bl	1a368 <OnPrint@@Base+0x344>
   103f4:	b	10418 <__sanitizer_dump_coverage@@Base+0xd4>
   103f8:	ldr	x0, [sp, #104]
   103fc:	sub	x3, x19, x0
   10400:	add	x2, x21, x0, lsl #3
   10404:	mov	x1, x26
   10408:	ldr	x0, [sp, #112]
   1040c:	bl	ff08 <__sanitizer_sandbox_on_notify@@Base+0x20>
   10410:	b	10468 <__sanitizer_dump_coverage@@Base+0x124>
   10414:	mov	w25, #0x1                   	// #1
   10418:	add	x19, x19, #0x1
   1041c:	cmp	x20, x19
   10420:	b.eq	1048c <__sanitizer_dump_coverage@@Base+0x148>  // b.none
   10424:	add	x27, x21, x19, lsl #3
   10428:	ldr	x22, [x21, x19, lsl #3]
   1042c:	cbz	x22, 10418 <__sanitizer_dump_coverage@@Base+0xd4>
   10430:	mov	x3, x27
   10434:	mov	x2, #0x0                   	// #0
   10438:	mov	x1, #0x0                   	// #0
   1043c:	mov	x0, x22
   10440:	bl	6410 <__sanitizer_get_module_and_offset_for_pc@plt>
   10444:	cbz	w0, 103e8 <__sanitizer_dump_coverage@@Base+0xa4>
   10448:	ldr	x24, [x21, x19, lsl #3]
   1044c:	sub	x24, x22, x24
   10450:	cmp	x24, x28
   10454:	cset	w23, ne  // ne = any
   10458:	eor	w0, w25, #0x1
   1045c:	orr	w23, w23, w0
   10460:	cbz	w23, 10414 <__sanitizer_dump_coverage@@Base+0xd0>
   10464:	cbnz	w25, 103f8 <__sanitizer_dump_coverage@@Base+0xb4>
   10468:	mov	x3, x27
   1046c:	mov	x2, #0x1000                	// #4096
   10470:	mov	x1, x26
   10474:	mov	x0, x22
   10478:	bl	6410 <__sanitizer_get_module_and_offset_for_pc@plt>
   1047c:	str	x19, [sp, #104]
   10480:	mov	x28, x24
   10484:	mov	w25, w23
   10488:	b	10418 <__sanitizer_dump_coverage@@Base+0xd4>
   1048c:	cbnz	w25, 104d0 <__sanitizer_dump_coverage@@Base+0x18c>
   10490:	mov	x1, #0x0                   	// #0
   10494:	ldr	x0, [sp, #112]
   10498:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   1049c:	mov	x1, #0x0                   	// #0
   104a0:	mov	x0, x26
   104a4:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   104a8:	mov	x1, #0x0                   	// #0
   104ac:	mov	x0, x21
   104b0:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   104b4:	ldp	x21, x22, [sp, #16]
   104b8:	ldp	x23, x24, [sp, #32]
   104bc:	ldp	x25, x26, [sp, #48]
   104c0:	ldp	x27, x28, [sp, #64]
   104c4:	ldr	x30, [sp, #80]
   104c8:	ldp	x19, x20, [sp], #128
   104cc:	ret
   104d0:	ldr	x0, [sp, #104]
   104d4:	sub	x3, x19, x0
   104d8:	add	x2, x21, x0, lsl #3
   104dc:	mov	x1, x26
   104e0:	ldr	x0, [sp, #112]
   104e4:	bl	ff08 <__sanitizer_sandbox_on_notify@@Base+0x20>
   104e8:	b	10490 <__sanitizer_dump_coverage@@Base+0x14c>

00000000000104ec <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   104ec:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   104f0:	ldrb	w0, [x0, #3112]
   104f4:	cbz	w0, 10508 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x1c>
   104f8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   104fc:	ldr	x0, [x0, #4056]
   10500:	ldrb	w0, [x0, #161]
   10504:	cbnz	w0, 1050c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x20>
   10508:	ret
   1050c:	str	x30, [sp, #-16]!
   10510:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10514:	add	x0, x0, #0xc20
   10518:	ldr	x1, [x0, #32]
   1051c:	add	x0, x0, #0x8
   10520:	ldr	x0, [x0, #8]
   10524:	bl	6650 <__sanitizer_dump_coverage@plt>
   10528:	ldr	x30, [sp], #16
   1052c:	ret

0000000000010530 <__sanitizer_cov_dump@@Base>:
   10530:	str	x30, [sp, #-16]!
   10534:	bl	67d0 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   10538:	ldr	x30, [sp], #16
   1053c:	ret
   10540:	cmp	x1, #0x1
   10544:	b.ls	10658 <__sanitizer_cov_dump@@Base+0x128>  // b.plast
   10548:	mov	x7, #0x1                   	// #1
   1054c:	b	10560 <__sanitizer_cov_dump@@Base+0x30>
   10550:	add	x2, x7, #0x1
   10554:	cmp	x1, x2
   10558:	b.ls	10598 <__sanitizer_cov_dump@@Base+0x68>  // b.plast
   1055c:	add	x7, x7, #0x1
   10560:	cbz	x7, 1055c <__sanitizer_cov_dump@@Base+0x2c>
   10564:	mov	x2, x7
   10568:	sub	x3, x2, #0x1
   1056c:	mov	x5, x2
   10570:	lsr	x2, x3, #1
   10574:	ldr	x6, [x0, x2, lsl #3]
   10578:	ldr	x4, [x0, x5, lsl #3]
   1057c:	cmp	x4, x6
   10580:	b.ls	10550 <__sanitizer_cov_dump@@Base+0x20>  // b.plast
   10584:	str	x6, [x0, x5, lsl #3]
   10588:	str	x4, [x0, x2, lsl #3]
   1058c:	cmp	x3, #0x1
   10590:	b.hi	10568 <__sanitizer_cov_dump@@Base+0x38>  // b.pmore
   10594:	b	10550 <__sanitizer_cov_dump@@Base+0x20>
   10598:	sub	x3, x1, #0x1
   1059c:	mov	x8, #0x0                   	// #0
   105a0:	b	105c4 <__sanitizer_cov_dump@@Base+0x94>
   105a4:	lsl	x5, x5, #4
   105a8:	ldr	x5, [x0, x5]
   105ac:	cmp	x6, x5
   105b0:	csel	x1, x1, x4, cc  // cc = lo, ul, last
   105b4:	b	105fc <__sanitizer_cov_dump@@Base+0xcc>
   105b8:	cmp	x3, #0x1
   105bc:	b.eq	10658 <__sanitizer_cov_dump@@Base+0x128>  // b.none
   105c0:	sub	x3, x3, #0x1
   105c4:	ldr	x1, [x0]
   105c8:	ldr	x2, [x0, x3, lsl #3]
   105cc:	str	x2, [x0]
   105d0:	str	x1, [x0, x3, lsl #3]
   105d4:	cbz	x3, 105c0 <__sanitizer_cov_dump@@Base+0x90>
   105d8:	mov	x2, x8
   105dc:	b	10620 <__sanitizer_cov_dump@@Base+0xf0>
   105e0:	cmp	x3, x1
   105e4:	b.ls	105b8 <__sanitizer_cov_dump@@Base+0x88>  // b.plast
   105e8:	lsl	x5, x5, #4
   105ec:	ldr	x6, [x0, x2, lsl #3]
   105f0:	ldr	x4, [x0, x5]
   105f4:	cmp	x6, x4
   105f8:	b.cs	105b8 <__sanitizer_cov_dump@@Base+0x88>  // b.hs, b.nlast
   105fc:	cmp	x1, x2
   10600:	b.eq	105b8 <__sanitizer_cov_dump@@Base+0x88>  // b.none
   10604:	ldr	x4, [x0, x2, lsl #3]
   10608:	ldr	x5, [x0, x1, lsl #3]
   1060c:	str	x5, [x0, x2, lsl #3]
   10610:	str	x4, [x0, x1, lsl #3]
   10614:	cmp	x1, x3
   10618:	b.cs	105b8 <__sanitizer_cov_dump@@Base+0x88>  // b.hs, b.nlast
   1061c:	mov	x2, x1
   10620:	lsl	x1, x2, #1
   10624:	add	x4, x1, #0x1
   10628:	add	x5, x2, #0x1
   1062c:	add	x1, x1, #0x2
   10630:	cmp	x3, x4
   10634:	b.ls	105e0 <__sanitizer_cov_dump@@Base+0xb0>  // b.plast
   10638:	ldr	x7, [x0, x2, lsl #3]
   1063c:	ldr	x6, [x0, x4, lsl #3]
   10640:	cmp	x7, x6
   10644:	b.cs	105e0 <__sanitizer_cov_dump@@Base+0xb0>  // b.hs, b.nlast
   10648:	cmp	x3, x1
   1064c:	b.hi	105a4 <__sanitizer_cov_dump@@Base+0x74>  // b.pmore
   10650:	mov	x1, x4
   10654:	b	105fc <__sanitizer_cov_dump@@Base+0xcc>
   10658:	ret
   1065c:	mov	x0, #0x0                   	// #0
   10660:	ret
   10664:	ret
   10668:	stp	x19, x30, [sp, #-16]!
   1066c:	mov	x0, x1
   10670:	mov	x19, x2
   10674:	str	xzr, [x2]
   10678:	ldr	x1, [x1]
   1067c:	ldr	x1, [x1]
   10680:	blr	x1
   10684:	str	w0, [x19, #8]
   10688:	ldp	x19, x30, [sp], #16
   1068c:	ret
   10690:	ldr	x0, [x1, #16]
   10694:	ldrb	w2, [x0, #2224]
   10698:	cbz	w2, 106ac <__sanitizer_cov_dump@@Base+0x17c>
   1069c:	strb	wzr, [x0, #2224]
   106a0:	ldr	x0, [x1, #16]
   106a4:	add	x0, x0, #0x628
   106a8:	ret
   106ac:	mov	x0, #0x0                   	// #0
   106b0:	b	106a8 <__sanitizer_cov_dump@@Base+0x178>
   106b4:	stp	x19, x30, [sp, #-16]!
   106b8:	mov	x19, x1
   106bc:	mov	x2, #0x0                   	// #0
   106c0:	mov	x1, #0x0                   	// #0
   106c4:	mov	x0, #0x8b8                 	// #2232
   106c8:	bl	d178 <__sancov_default_options@@Base+0x47c>
   106cc:	mov	x3, x0
   106d0:	str	x19, [x3], #8
   106d4:	str	xzr, [x0, #8]
   106d8:	str	xzr, [x3, #520]
   106dc:	str	xzr, [x3, #1040]
   106e0:	str	xzr, [x3, #1560]
   106e4:	strb	wzr, [x0, #2224]
   106e8:	ldp	x19, x30, [sp], #16
   106ec:	ret
   106f0:	str	x30, [sp, #-16]!
   106f4:	mov	x0, x1
   106f8:	mov	x1, #0x0                   	// #0
   106fc:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   10700:	ldr	x30, [sp], #16
   10704:	ret
   10708:	ldr	x1, [x1, #16]
   1070c:	ldr	x2, [x2]
   10710:	and	x0, x2, #0xfffffffffffff000
   10714:	ldr	x3, [x1, #528]
   10718:	cmp	x3, x0
   1071c:	b.eq	10724 <__sanitizer_cov_dump@@Base+0x1f4>  // b.none
   10720:	ret
   10724:	and	x4, x2, #0xfff
   10728:	ldr	x6, [x1, #1048]
   1072c:	cbz	x6, 10754 <__sanitizer_cov_dump@@Base+0x224>
   10730:	sub	x7, x6, #0x1
   10734:	mov	x0, x7
   10738:	tbnz	x7, #63, 10754 <__sanitizer_cov_dump@@Base+0x224>
   1073c:	add	x5, x1, #0x218
   10740:	ldr	x3, [x5, x0, lsl #3]
   10744:	cmp	x4, x3
   10748:	b.eq	107c8 <__sanitizer_cov_dump@@Base+0x298>  // b.none
   1074c:	subs	x0, x0, #0x1
   10750:	b.pl	10740 <__sanitizer_cov_dump@@Base+0x210>  // b.nfrst
   10754:	lsr	x3, x4, #6
   10758:	ldr	x6, [x1, #8]
   1075c:	mov	x0, #0x1                   	// #1
   10760:	lsl	x0, x0, x3
   10764:	tst	x6, x0
   10768:	b.eq	10720 <__sanitizer_cov_dump@@Base+0x1f0>  // b.none
   1076c:	add	x3, x1, x3, lsl #3
   10770:	ldr	x7, [x3, #16]
   10774:	mov	x5, #0x1                   	// #1
   10778:	lsl	x2, x5, x2
   1077c:	bic	x2, x7, x2
   10780:	str	x2, [x3, #16]
   10784:	cbz	x2, 107e8 <__sanitizer_cov_dump@@Base+0x2b8>
   10788:	cmp	x7, x2
   1078c:	b.eq	10720 <__sanitizer_cov_dump@@Base+0x1f0>  // b.none
   10790:	ldr	x7, [x1, #1568]
   10794:	cbz	x7, 10720 <__sanitizer_cov_dump@@Base+0x1f0>
   10798:	sub	x8, x7, #0x1
   1079c:	mov	x0, x8
   107a0:	tbnz	x8, #63, 10720 <__sanitizer_cov_dump@@Base+0x1f0>
   107a4:	add	x5, x1, #0x420
   107a8:	mov	w6, w4
   107ac:	lsl	x2, x0, #3
   107b0:	ldr	w2, [x5, x2]
   107b4:	cmp	w2, w4
   107b8:	b.eq	107f4 <__sanitizer_cov_dump@@Base+0x2c4>  // b.none
   107bc:	subs	x0, x0, #0x1
   107c0:	b.pl	107a8 <__sanitizer_cov_dump@@Base+0x278>  // b.nfrst
   107c4:	b	10720 <__sanitizer_cov_dump@@Base+0x1f0>
   107c8:	add	x2, x1, #0x8
   107cc:	str	x7, [x1, #1048]
   107d0:	add	x1, x1, x6, lsl #3
   107d4:	ldr	x4, [x1, #528]
   107d8:	add	x0, x0, #0x42
   107dc:	str	x4, [x2, x0, lsl #3]
   107e0:	str	x3, [x1, #528]
   107e4:	b	10720 <__sanitizer_cov_dump@@Base+0x1f0>
   107e8:	bic	x0, x6, x0
   107ec:	str	x0, [x1, #8]
   107f0:	b	10788 <__sanitizer_cov_dump@@Base+0x258>
   107f4:	add	x1, x1, #0x8
   107f8:	add	x2, x7, #0x82
   107fc:	lsl	x2, x2, #3
   10800:	add	x4, x1, x2
   10804:	add	x3, x1, x0, lsl #3
   10808:	ldr	w3, [x3, #1052]
   1080c:	add	x0, x1, x0, lsl #3
   10810:	add	x8, x1, x8, lsl #3
   10814:	ldr	x5, [x8, #1048]
   10818:	str	x5, [x0, #1048]
   1081c:	str	w6, [x1, x2]
   10820:	str	w3, [x4, #4]
   10824:	ldr	x0, [x1, #1560]
   10828:	sub	x0, x0, #0x1
   1082c:	str	x0, [x1, #1560]
   10830:	b	10720 <__sanitizer_cov_dump@@Base+0x1f0>
   10834:	ldr	x1, [x2]
   10838:	cbnz	x1, 10840 <__sanitizer_cov_dump@@Base+0x310>
   1083c:	ret
   10840:	stp	x19, x20, [sp, #-32]!
   10844:	str	x30, [sp, #16]
   10848:	mov	x20, x0
   1084c:	mov	x19, x2
   10850:	add	x0, x0, #0x8
   10854:	mov	w2, #0x1                   	// #1
   10858:	ldxrb	w1, [x0]
   1085c:	stxrb	w3, w2, [x0]
   10860:	cbnz	w3, 10858 <__sanitizer_cov_dump@@Base+0x328>
   10864:	dmb	ish
   10868:	and	w1, w1, #0xff
   1086c:	cbnz	w1, 108a0 <__sanitizer_cov_dump@@Base+0x370>
   10870:	ldr	x3, [x19]
   10874:	cbz	x3, 10888 <__sanitizer_cov_dump@@Base+0x358>
   10878:	and	x0, x3, #0xfffffffffffff000
   1087c:	ldr	x1, [x20, #16]
   10880:	cmp	x0, x1
   10884:	b.eq	108a8 <__sanitizer_cov_dump@@Base+0x378>  // b.none
   10888:	str	xzr, [x19]
   1088c:	dmb	ish
   10890:	strb	wzr, [x20, #8]
   10894:	ldr	x30, [sp, #16]
   10898:	ldp	x19, x20, [sp], #32
   1089c:	ret
   108a0:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   108a4:	b	10870 <__sanitizer_cov_dump@@Base+0x340>
   108a8:	cmp	x3, #0xfff
   108ac:	b.ls	1090c <__sanitizer_cov_dump@@Base+0x3dc>  // b.plast
   108b0:	and	x4, x3, #0xfff
   108b4:	ubfx	x1, x3, #6, #6
   108b8:	and	x3, x3, #0x3f
   108bc:	mov	x0, #0x1                   	// #1
   108c0:	lsl	x0, x0, x1
   108c4:	ldr	x2, [x20, #24]
   108c8:	tst	x0, x2
   108cc:	b.ne	10928 <__sanitizer_cov_dump@@Base+0x3f8>  // b.any
   108d0:	ldr	x2, [x20, #544]
   108d4:	tst	x0, x2
   108d8:	b.eq	10960 <__sanitizer_cov_dump@@Base+0x430>  // b.none
   108dc:	add	x1, x20, x1, lsl #3
   108e0:	ldr	x2, [x1, #552]
   108e4:	mov	x0, #0x1                   	// #1
   108e8:	lsl	x3, x0, x3
   108ec:	orr	x0, x3, x2
   108f0:	str	x0, [x1, #552]
   108f4:	cmp	x2, x0
   108f8:	b.eq	10974 <__sanitizer_cov_dump@@Base+0x444>  // b.none
   108fc:	add	x0, x20, #0x630
   10900:	add	x4, x4, x4, lsl #6
   10904:	str	xzr, [x0, x4, lsl #3]
   10908:	b	10888 <__sanitizer_cov_dump@@Base+0x358>
   1090c:	mov	x4, #0x1000                	// #4096
   10910:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10914:	add	x2, x2, #0x620
   10918:	mov	w1, #0x172                 	// #370
   1091c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10920:	add	x0, x0, #0x638
   10924:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10928:	add	x5, x20, x1, lsl #3
   1092c:	mov	x2, #0x1                   	// #1
   10930:	lsl	x2, x2, x3
   10934:	ldr	x5, [x5, #32]
   10938:	tst	x2, x5
   1093c:	b.eq	108d0 <__sanitizer_cov_dump@@Base+0x3a0>  // b.none
   10940:	mov	x4, #0x0                   	// #0
   10944:	mov	x3, #0x0                   	// #0
   10948:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1094c:	add	x2, x2, #0x680
   10950:	mov	w1, #0xc0                  	// #192
   10954:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10958:	add	x0, x0, #0x638
   1095c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10960:	orr	x0, x0, x2
   10964:	str	x0, [x20, #544]
   10968:	add	x0, x20, x1, lsl #3
   1096c:	str	xzr, [x0, #552]
   10970:	b	108dc <__sanitizer_cov_dump@@Base+0x3ac>
   10974:	mov	x4, #0x0                   	// #0
   10978:	mov	x3, #0x0                   	// #0
   1097c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10980:	add	x2, x2, #0x6b0
   10984:	mov	w1, #0xc1                  	// #193
   10988:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1098c:	add	x0, x0, #0x638
   10990:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10994:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   10998:	add	x2, x2, #0xd78
   1099c:	str	x2, [x0]
   109a0:	strb	wzr, [x0, #8]
   109a4:	add	x2, x0, #0x410, lsl #12
   109a8:	ldrb	w1, [x1]
   109ac:	strb	w1, [x2, #2632]
   109b0:	str	xzr, [x0, #16]
   109b4:	str	xzr, [x0, #24]
   109b8:	str	xzr, [x0, #544]
   109bc:	add	x1, x0, #0x630
   109c0:	add	x2, x0, #0x208, lsl #12
   109c4:	add	x2, x2, #0x630
   109c8:	str	xzr, [x1]
   109cc:	add	x1, x1, #0x208
   109d0:	cmp	x2, x1
   109d4:	b.ne	109c8 <__sanitizer_cov_dump@@Base+0x498>  // b.any
   109d8:	add	x0, x0, #0x10
   109dc:	add	x0, x0, #0x410, lsl #12
   109e0:	str	xzr, [x0, #2608]
   109e4:	ret
   109e8:	stp	x19, x20, [sp, #-32]!
   109ec:	str	x30, [sp, #16]
   109f0:	mov	x20, x0
   109f4:	mov	w2, #0x0                   	// #0
   109f8:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   109fc:	add	x1, x1, #0x6d8
   10a00:	mov	x0, #0xa50                 	// #2640
   10a04:	movk	x0, #0x41, lsl #16
   10a08:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   10a0c:	mov	x19, x0
   10a10:	mov	x1, x20
   10a14:	bl	10994 <__sanitizer_cov_dump@@Base+0x464>
   10a18:	mov	x0, x19
   10a1c:	ldr	x30, [sp, #16]
   10a20:	ldp	x19, x20, [sp], #32
   10a24:	ret
   10a28:	ldr	x3, [x2]
   10a2c:	cbz	x3, 10a40 <__sanitizer_cov_dump@@Base+0x510>
   10a30:	and	x3, x3, #0xfffffffffffff000
   10a34:	ldr	x4, [x0, #16]
   10a38:	cmp	x3, x4
   10a3c:	b.eq	10ed0 <__sanitizer_cov_dump@@Base+0x9a0>  // b.none
   10a40:	stp	x19, x30, [sp, #-16]!
   10a44:	ldr	x8, [x0, #24]
   10a48:	cbnz	x8, 10b10 <__sanitizer_cov_dump@@Base+0x5e0>
   10a4c:	ldr	x3, [x0, #544]
   10a50:	cbnz	x3, 10e94 <__sanitizer_cov_dump@@Base+0x964>
   10a54:	ldr	x4, [x0, #16]
   10a58:	add	x4, x4, #0x1, lsl #12
   10a5c:	str	x4, [x0, #16]
   10a60:	str	xzr, [x0, #544]
   10a64:	add	x3, x0, #0x20
   10a68:	add	x6, x0, #0x220
   10a6c:	mov	x5, #0xffffffffffffffff    	// #-1
   10a70:	str	x5, [x3], #8
   10a74:	cmp	x3, x6
   10a78:	b.ne	10a70 <__sanitizer_cov_dump@@Base+0x540>  // b.any
   10a7c:	add	x3, x0, #0x630
   10a80:	add	x5, x0, #0x208, lsl #12
   10a84:	add	x5, x5, #0x630
   10a88:	str	xzr, [x3]
   10a8c:	add	x3, x3, #0x208
   10a90:	cmp	x3, x5
   10a94:	b.ne	10a88 <__sanitizer_cov_dump@@Base+0x558>  // b.any
   10a98:	add	x3, x0, #0x10
   10a9c:	add	x3, x3, #0x410, lsl #12
   10aa0:	str	xzr, [x3, #2608]
   10aa4:	mov	x3, #0xfffffffffffffffe    	// #-2
   10aa8:	str	x3, [x0, #24]
   10aac:	ldr	x3, [x0, #32]
   10ab0:	cbz	x3, 10e4c <__sanitizer_cov_dump@@Base+0x91c>
   10ab4:	rbit	x6, x3
   10ab8:	clz	x6, x6
   10abc:	mov	x5, #0x1                   	// #1
   10ac0:	lsl	x5, x5, x6
   10ac4:	bic	x3, x3, x5
   10ac8:	str	x3, [x0, #32]
   10acc:	cbnz	x3, 10e68 <__sanitizer_cov_dump@@Base+0x938>
   10ad0:	add	x3, x0, #0x10
   10ad4:	add	x5, x6, #0x41, lsl #12
   10ad8:	add	x5, x5, #0x146
   10adc:	str	x2, [x3, x5, lsl #3]
   10ae0:	add	x4, x4, x6
   10ae4:	str	x4, [x2]
   10ae8:	ldr	x2, [x0, #16]
   10aec:	ldr	x0, [x1, #528]
   10af0:	cmp	x2, x0
   10af4:	b.eq	10b08 <__sanitizer_cov_dump@@Base+0x5d8>  // b.none
   10af8:	str	xzr, [x1, #8]
   10afc:	str	x2, [x1, #528]
   10b00:	str	xzr, [x1, #1048]
   10b04:	str	xzr, [x1, #1568]
   10b08:	ldp	x19, x30, [sp], #16
   10b0c:	ret
   10b10:	rbit	x3, x8
   10b14:	clz	x3, x3
   10b18:	mov	x6, #0x1                   	// #1
   10b1c:	lsl	x6, x6, x3
   10b20:	bic	x4, x8, x6
   10b24:	str	x4, [x0, #24]
   10b28:	add	x9, x0, x3, lsl #3
   10b2c:	ldr	x7, [x9, #32]
   10b30:	cbz	x7, 10b70 <__sanitizer_cov_dump@@Base+0x640>
   10b34:	rbit	x4, x7
   10b38:	clz	x4, x4
   10b3c:	mov	x5, #0x1                   	// #1
   10b40:	lsl	x5, x5, x4
   10b44:	bic	x5, x7, x5
   10b48:	str	x5, [x9, #32]
   10b4c:	cbnz	x5, 10b90 <__sanitizer_cov_dump@@Base+0x660>
   10b50:	add	x4, x4, x3, lsl #6
   10b54:	add	x3, x0, #0x10
   10b58:	add	x5, x4, #0x41, lsl #12
   10b5c:	add	x5, x5, #0x146
   10b60:	str	x2, [x3, x5, lsl #3]
   10b64:	ldr	x3, [x0, #16]
   10b68:	add	x4, x4, x3
   10b6c:	b	10ae4 <__sanitizer_cov_dump@@Base+0x5b4>
   10b70:	mov	x4, #0x0                   	// #0
   10b74:	mov	x3, #0x0                   	// #0
   10b78:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   10b7c:	add	x2, x2, #0xa18
   10b80:	mov	w1, #0x30                  	// #48
   10b84:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10b88:	add	x0, x0, #0x6f0
   10b8c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10b90:	orr	x6, x8, x6
   10b94:	str	x6, [x0, #24]
   10b98:	b	10b50 <__sanitizer_cov_dump@@Base+0x620>
   10b9c:	ldr	x3, [x0, #24]
   10ba0:	cbnz	x3, 10e74 <__sanitizer_cov_dump@@Base+0x944>
   10ba4:	ldr	x15, [x0, #544]
   10ba8:	add	x7, x0, #0x630
   10bac:	mov	x13, #0x1                   	// #1
   10bb0:	add	x12, x0, #0x220
   10bb4:	mov	x11, x7
   10bb8:	mov	x14, x7
   10bbc:	ldr	x4, [x7]
   10bc0:	and	x4, x15, x4
   10bc4:	add	x9, x8, x8, lsl #6
   10bc8:	cbz	x4, 10d20 <__sanitizer_cov_dump@@Base+0x7f0>
   10bcc:	rbit	x3, x4
   10bd0:	clz	x3, x3
   10bd4:	lsl	x5, x13, x3
   10bd8:	mvn	x10, x5
   10bdc:	bic	x4, x4, x5
   10be0:	add	x5, x12, x3, lsl #3
   10be4:	ldr	x5, [x5, #8]
   10be8:	add	x3, x9, x3
   10bec:	add	x3, x11, x3, lsl #3
   10bf0:	ldr	x6, [x3, #8]
   10bf4:	bic	x5, x6, x5
   10bf8:	str	x5, [x3, #8]
   10bfc:	cbnz	x5, 10bc8 <__sanitizer_cov_dump@@Base+0x698>
   10c00:	ldr	x3, [x14]
   10c04:	and	x10, x3, x10
   10c08:	str	x10, [x14]
   10c0c:	b	10bc8 <__sanitizer_cov_dump@@Base+0x698>
   10c10:	mov	x4, #0x1000                	// #4096
   10c14:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10c18:	add	x2, x2, #0x730
   10c1c:	mov	w1, #0x143                 	// #323
   10c20:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10c24:	add	x0, x0, #0x6f0
   10c28:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10c2c:	lsl	x9, x12, x10
   10c30:	add	x3, x3, x6, lsl #6
   10c34:	add	x3, x15, x3, lsl #3
   10c38:	ldr	x6, [x3, #8]
   10c3c:	tst	x9, x6
   10c40:	b.eq	10cc4 <__sanitizer_cov_dump@@Base+0x794>  // b.none
   10c44:	ldr	x3, [x13, #2608]
   10c48:	add	x3, x3, x16
   10c4c:	lsl	x3, x3, #4
   10c50:	add	x9, x14, x3
   10c54:	ldrh	w19, [x5, #2]
   10c58:	ldr	w30, [x5, #4]
   10c5c:	ldr	w18, [x5, #8]
   10c60:	ldr	w17, [x5, #12]
   10c64:	ldp	x6, x7, [x9]
   10c68:	stp	x6, x7, [x5]
   10c6c:	strh	w10, [x14, x3]
   10c70:	strh	w19, [x9, #2]
   10c74:	str	w30, [x9, #4]
   10c78:	str	w18, [x9, #8]
   10c7c:	str	w17, [x9, #12]
   10c80:	ldr	x3, [x13, #2608]
   10c84:	sub	x3, x3, #0x1
   10c88:	str	x3, [x13, #2608]
   10c8c:	sub	x4, x4, #0x10
   10c90:	subs	x11, x11, #0x1
   10c94:	b.mi	10b9c <__sanitizer_cov_dump@@Base+0x66c>  // b.first
   10c98:	mov	x5, x4
   10c9c:	ldrh	w10, [x4]
   10ca0:	and	x3, x10, #0xffff
   10ca4:	cmp	x3, #0x1, lsl #12
   10ca8:	b.hi	10c10 <__sanitizer_cov_dump@@Base+0x6e0>  // b.pmore
   10cac:	lsr	x6, x3, #12
   10cb0:	ubfx	x3, x3, #6, #6
   10cb4:	ldr	x7, [x15, x6, lsl #3]
   10cb8:	lsl	x9, x12, x3
   10cbc:	tst	x9, x7
   10cc0:	b.ne	10c2c <__sanitizer_cov_dump@@Base+0x6fc>  // b.any
   10cc4:	ldrh	w6, [x5, #2]
   10cc8:	and	x3, x6, #0xffff
   10ccc:	cmp	x3, #0x1, lsl #12
   10cd0:	b.hi	10d04 <__sanitizer_cov_dump@@Base+0x7d4>  // b.pmore
   10cd4:	ubfx	x9, x3, #6, #6
   10cd8:	lsl	x17, x12, x9
   10cdc:	tst	x17, x7
   10ce0:	b.eq	10c8c <__sanitizer_cov_dump@@Base+0x75c>  // b.none
   10ce4:	lsr	x3, x3, #12
   10ce8:	add	x3, x9, x3, lsl #6
   10cec:	add	x3, x15, x3, lsl #3
   10cf0:	lsl	x6, x12, x6
   10cf4:	ldr	x3, [x3, #8]
   10cf8:	tst	x6, x3
   10cfc:	b.ne	10c44 <__sanitizer_cov_dump@@Base+0x714>  // b.any
   10d00:	b	10c8c <__sanitizer_cov_dump@@Base+0x75c>
   10d04:	mov	x4, #0x1000                	// #4096
   10d08:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10d0c:	add	x2, x2, #0x730
   10d10:	mov	w1, #0x143                 	// #323
   10d14:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10d18:	add	x0, x0, #0x6f0
   10d1c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10d20:	add	x8, x8, #0x1
   10d24:	add	x7, x7, #0x208
   10d28:	cmp	x8, #0x1, lsl #12
   10d2c:	b.ne	10bb8 <__sanitizer_cov_dump@@Base+0x688>  // b.any
   10d30:	ldr	x4, [x0, #544]
   10d34:	cbz	x4, 10d98 <__sanitizer_cov_dump@@Base+0x868>
   10d38:	rbit	x3, x4
   10d3c:	clz	x3, x3
   10d40:	mov	x6, x0
   10d44:	ldr	x5, [x6, #24]!
   10d48:	mov	x9, #0x1                   	// #1
   10d4c:	b	10d74 <__sanitizer_cov_dump@@Base+0x844>
   10d50:	add	x3, x0, x3, lsl #3
   10d54:	ldr	x5, [x3, #32]
   10d58:	ldr	x7, [x3, #552]
   10d5c:	orr	x5, x5, x7
   10d60:	str	x5, [x3, #32]
   10d64:	cbz	x4, 10d94 <__sanitizer_cov_dump@@Base+0x864>
   10d68:	rbit	x3, x4
   10d6c:	clz	x3, x3
   10d70:	mov	x5, x8
   10d74:	lsl	x7, x9, x3
   10d78:	bic	x4, x4, x7
   10d7c:	orr	x8, x5, x7
   10d80:	bics	xzr, x7, x5
   10d84:	b.eq	10d50 <__sanitizer_cov_dump@@Base+0x820>  // b.none
   10d88:	add	x5, x6, x3, lsl #3
   10d8c:	str	xzr, [x5, #8]
   10d90:	b	10d50 <__sanitizer_cov_dump@@Base+0x820>
   10d94:	str	x8, [x0, #24]
   10d98:	str	xzr, [x0, #544]
   10d9c:	ldr	x4, [x0, #24]
   10da0:	cbnz	x4, 10dc0 <__sanitizer_cov_dump@@Base+0x890>
   10da4:	mov	x3, #0x0                   	// #0
   10da8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10dac:	add	x2, x2, #0x748
   10db0:	mov	w1, #0xbf                  	// #191
   10db4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10db8:	add	x0, x0, #0x6f0
   10dbc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10dc0:	rbit	x3, x4
   10dc4:	clz	x3, x3
   10dc8:	mov	x6, #0x1                   	// #1
   10dcc:	lsl	x6, x6, x3
   10dd0:	bic	x5, x4, x6
   10dd4:	str	x5, [x0, #24]
   10dd8:	add	x9, x0, x3, lsl #3
   10ddc:	ldr	x7, [x9, #32]
   10de0:	cbz	x7, 10e20 <__sanitizer_cov_dump@@Base+0x8f0>
   10de4:	rbit	x8, x7
   10de8:	clz	x8, x8
   10dec:	mov	x5, #0x1                   	// #1
   10df0:	lsl	x5, x5, x8
   10df4:	bic	x5, x7, x5
   10df8:	str	x5, [x9, #32]
   10dfc:	cbnz	x5, 10e40 <__sanitizer_cov_dump@@Base+0x910>
   10e00:	add	x4, x8, x3, lsl #6
   10e04:	add	x3, x0, #0x10
   10e08:	add	x5, x4, #0x41, lsl #12
   10e0c:	add	x5, x5, #0x146
   10e10:	str	x2, [x3, x5, lsl #3]
   10e14:	ldr	x3, [x0, #16]
   10e18:	add	x4, x4, x3
   10e1c:	b	10ae4 <__sanitizer_cov_dump@@Base+0x5b4>
   10e20:	mov	x4, #0x0                   	// #0
   10e24:	mov	x3, #0x0                   	// #0
   10e28:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   10e2c:	add	x2, x2, #0xa18
   10e30:	mov	w1, #0x30                  	// #48
   10e34:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10e38:	add	x0, x0, #0x6f0
   10e3c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10e40:	orr	x4, x4, x6
   10e44:	str	x4, [x0, #24]
   10e48:	b	10e00 <__sanitizer_cov_dump@@Base+0x8d0>
   10e4c:	mov	x4, #0x0                   	// #0
   10e50:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   10e54:	add	x2, x2, #0xa18
   10e58:	mov	w1, #0x30                  	// #48
   10e5c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10e60:	add	x0, x0, #0x6f0
   10e64:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10e68:	mov	x3, #0xffffffffffffffff    	// #-1
   10e6c:	str	x3, [x0, #24]
   10e70:	b	10ad0 <__sanitizer_cov_dump@@Base+0x5a0>
   10e74:	mov	x4, #0x0                   	// #0
   10e78:	mov	x3, #0x0                   	// #0
   10e7c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10e80:	add	x2, x2, #0x758
   10e84:	mov	w1, #0xa7                  	// #167
   10e88:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   10e8c:	add	x0, x0, #0x638
   10e90:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10e94:	add	x3, x0, #0x10
   10e98:	add	x3, x3, #0x410, lsl #12
   10e9c:	ldr	x4, [x3, #2608]
   10ea0:	subs	x11, x4, #0x1
   10ea4:	b.mi	10ba4 <__sanitizer_cov_dump@@Base+0x674>  // b.first
   10ea8:	add	x4, x4, #0x21, lsl #12
   10eac:	add	x4, x4, #0xa3
   10eb0:	add	x4, x0, x4, lsl #4
   10eb4:	add	x15, x0, #0x220
   10eb8:	mov	x12, #0x1                   	// #1
   10ebc:	add	x14, x0, #0x10
   10ec0:	add	x13, x14, #0x410, lsl #12
   10ec4:	mov	x16, #0x10a2                	// #4258
   10ec8:	movk	x16, #0x2, lsl #16
   10ecc:	b	10c98 <__sanitizer_cov_dump@@Base+0x768>
   10ed0:	ldr	x2, [x0, #16]
   10ed4:	ldr	x0, [x1, #528]
   10ed8:	cmp	x2, x0
   10edc:	b.eq	10ef0 <__sanitizer_cov_dump@@Base+0x9c0>  // b.none
   10ee0:	str	xzr, [x1, #8]
   10ee4:	str	x2, [x1, #528]
   10ee8:	str	xzr, [x1, #1048]
   10eec:	str	xzr, [x1, #1568]
   10ef0:	ret
   10ef4:	stp	x19, x20, [sp, #-64]!
   10ef8:	stp	x21, x22, [sp, #16]
   10efc:	stp	x23, x24, [sp, #32]
   10f00:	stp	x25, x30, [sp, #48]
   10f04:	mov	x20, x0
   10f08:	mov	x21, x1
   10f0c:	mov	x22, x2
   10f10:	and	w24, w3, #0xff
   10f14:	and	w25, w4, #0xff
   10f18:	ldr	x19, [x1, #16]
   10f1c:	add	x0, x0, #0x410, lsl #12
   10f20:	ldrb	w0, [x0, #2632]
   10f24:	mov	w23, #0x0                   	// #0
   10f28:	cbz	w0, 10f40 <__sanitizer_cov_dump@@Base+0xa10>
   10f2c:	ldr	x0, [x1]
   10f30:	ldr	x1, [x0]
   10f34:	mov	x0, x21
   10f38:	blr	x1
   10f3c:	mov	w23, w0
   10f40:	ldr	x1, [x19, #8]
   10f44:	cbnz	x1, 10f60 <__sanitizer_cov_dump@@Base+0xa30>
   10f48:	ldr	x0, [x19, #528]
   10f4c:	cbz	x0, 10f60 <__sanitizer_cov_dump@@Base+0xa30>
   10f50:	ldr	x2, [x22]
   10f54:	and	x3, x2, #0xfffffffffffff000
   10f58:	cmp	x0, x3
   10f5c:	b.eq	110a8 <__sanitizer_cov_dump@@Base+0xb78>  // b.none
   10f60:	ldr	x0, [x22]
   10f64:	cbnz	x0, 1116c <__sanitizer_cov_dump@@Base+0xc3c>
   10f68:	add	x0, x20, #0x8
   10f6c:	mov	w2, #0x1                   	// #1
   10f70:	ldxrb	w1, [x0]
   10f74:	stxrb	w3, w2, [x0]
   10f78:	cbnz	w3, 10f70 <__sanitizer_cov_dump@@Base+0xa40>
   10f7c:	dmb	ish
   10f80:	and	w1, w1, #0xff
   10f84:	cbnz	w1, 11270 <__sanitizer_cov_dump@@Base+0xd40>
   10f88:	mov	x2, x22
   10f8c:	mov	x1, x19
   10f90:	mov	x0, x20
   10f94:	bl	10a28 <__sanitizer_cov_dump@@Base+0x4f8>
   10f98:	cbnz	w24, 11278 <__sanitizer_cov_dump@@Base+0xd48>
   10f9c:	cbnz	w25, 10fe8 <__sanitizer_cov_dump@@Base+0xab8>
   10fa0:	ldr	x25, [x22]
   10fa4:	mov	w24, w23
   10fa8:	cbnz	w23, 10fc0 <__sanitizer_cov_dump@@Base+0xa90>
   10fac:	ldr	x0, [x21]
   10fb0:	ldr	x1, [x0]
   10fb4:	mov	x0, x21
   10fb8:	blr	x1
   10fbc:	mov	w24, w0
   10fc0:	ldr	x0, [x21]
   10fc4:	ldr	x1, [x0, #8]
   10fc8:	mov	x0, x21
   10fcc:	blr	x1
   10fd0:	mov	w4, w0
   10fd4:	mov	w3, w24
   10fd8:	mov	x2, x25
   10fdc:	add	x1, x19, #0x8
   10fe0:	add	x0, x20, #0x10
   10fe4:	bl	11e84 <__sanitizer_cov_dump@@Base+0x1954>
   10fe8:	ldr	x1, [x22]
   10fec:	ldr	x2, [x20, #16]
   10ff0:	ldr	x0, [x19, #528]
   10ff4:	cmp	x2, x0
   10ff8:	b.eq	1100c <__sanitizer_cov_dump@@Base+0xadc>  // b.none
   10ffc:	str	xzr, [x19, #8]
   11000:	str	x2, [x19, #528]
   11004:	str	xzr, [x19, #1048]
   11008:	str	xzr, [x19, #1568]
   1100c:	cmp	x1, #0xfff
   11010:	b.ls	11354 <__sanitizer_cov_dump@@Base+0xe24>  // b.plast
   11014:	ldr	x3, [x20, #16]
   11018:	and	x4, x1, #0xfffffffffffff000
   1101c:	cmp	x3, x4
   11020:	b.ne	11374 <__sanitizer_cov_dump@@Base+0xe44>  // b.any
   11024:	and	x4, x1, #0xfff
   11028:	ldr	x0, [x19, #528]
   1102c:	cmp	x0, x3
   11030:	b.ne	1138c <__sanitizer_cov_dump@@Base+0xe5c>  // b.any
   11034:	lsr	x0, x4, #6
   11038:	ldr	x3, [x19, #8]
   1103c:	mov	x2, #0x1                   	// #1
   11040:	lsl	x2, x2, x0
   11044:	tst	x3, x2
   11048:	b.eq	113ac <__sanitizer_cov_dump@@Base+0xe7c>  // b.none
   1104c:	add	x0, x19, x0, lsl #3
   11050:	ldr	x3, [x0, #16]
   11054:	mov	x2, #0x1                   	// #1
   11058:	lsl	x1, x2, x1
   1105c:	orr	x1, x1, x3
   11060:	str	x1, [x0, #16]
   11064:	cmp	x3, x1
   11068:	b.ne	113dc <__sanitizer_cov_dump@@Base+0xeac>  // b.any
   1106c:	ldr	x3, [x19, #1048]
   11070:	cmp	x3, #0x3f
   11074:	b.hi	113c0 <__sanitizer_cov_dump@@Base+0xe90>  // b.pmore
   11078:	add	x0, x3, #0x1
   1107c:	str	x0, [x19, #1048]
   11080:	add	x19, x19, #0x8
   11084:	add	x3, x3, #0x42
   11088:	str	x4, [x19, x3, lsl #3]
   1108c:	dmb	ish
   11090:	strb	wzr, [x20, #8]
   11094:	ldp	x21, x22, [sp, #16]
   11098:	ldp	x23, x24, [sp, #32]
   1109c:	ldp	x25, x30, [sp, #48]
   110a0:	ldp	x19, x20, [sp], #64
   110a4:	ret
   110a8:	and	x4, x2, #0xfff
   110ac:	ubfx	x0, x2, #6, #6
   110b0:	mov	x1, #0x1                   	// #1
   110b4:	lsl	x3, x1, x0
   110b8:	str	x3, [x19, #8]
   110bc:	lsl	x0, x0, #3
   110c0:	add	x3, x19, x0
   110c4:	mov	x0, x3
   110c8:	mov	x3, #0x0                   	// #0
   110cc:	lsl	x2, x1, x2
   110d0:	orr	x2, x2, x3
   110d4:	str	x2, [x0, #16]
   110d8:	cmp	x3, x2
   110dc:	b.ne	11120 <__sanitizer_cov_dump@@Base+0xbf0>  // b.any
   110e0:	ldr	x3, [x19, #1048]
   110e4:	cmp	x3, #0x3f
   110e8:	b.hi	11104 <__sanitizer_cov_dump@@Base+0xbd4>  // b.pmore
   110ec:	add	x0, x3, #0x1
   110f0:	str	x0, [x19, #1048]
   110f4:	add	x19, x19, #0x8
   110f8:	add	x3, x3, #0x42
   110fc:	str	x4, [x19, x3, lsl #3]
   11100:	b	11094 <__sanitizer_cov_dump@@Base+0xb64>
   11104:	mov	x4, #0x40                  	// #64
   11108:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1110c:	add	x2, x2, #0x780
   11110:	mov	w1, #0x3f                  	// #63
   11114:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11118:	add	x0, x0, #0x638
   1111c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11120:	ldr	x3, [x19, #1568]
   11124:	cmp	x3, #0x3f
   11128:	b.hi	11150 <__sanitizer_cov_dump@@Base+0xc20>  // b.pmore
   1112c:	add	x0, x3, #0x1
   11130:	str	x0, [x19, #1568]
   11134:	add	x19, x19, #0x8
   11138:	add	x0, x3, #0x83
   1113c:	lsl	x0, x0, #3
   11140:	add	x1, x19, x0
   11144:	str	w4, [x19, x0]
   11148:	str	w23, [x1, #4]
   1114c:	b	11094 <__sanitizer_cov_dump@@Base+0xb64>
   11150:	mov	x4, #0x40                  	// #64
   11154:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11158:	add	x2, x2, #0x7d8
   1115c:	mov	w1, #0x43                  	// #67
   11160:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11164:	add	x0, x0, #0x638
   11168:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1116c:	ldr	x2, [x19, #528]
   11170:	ldr	x3, [x20, #16]
   11174:	cmp	x2, x3
   11178:	b.ne	10f68 <__sanitizer_cov_dump@@Base+0xa38>  // b.any
   1117c:	and	x3, x0, #0xfffffffffffff000
   11180:	cmp	x2, x3
   11184:	b.ne	10f68 <__sanitizer_cov_dump@@Base+0xa38>  // b.any
   11188:	and	x4, x0, #0xfff
   1118c:	ldr	x8, [x19, #1568]
   11190:	cbz	x8, 11428 <__sanitizer_cov_dump@@Base+0xef8>
   11194:	lsr	x9, x4, #6
   11198:	mov	x2, #0x1                   	// #1
   1119c:	lsl	x11, x2, x9
   111a0:	lsl	x5, x2, x0
   111a4:	mov	x3, #0x0                   	// #0
   111a8:	add	x10, x19, #0x420
   111ac:	add	x6, x20, #0x630
   111b0:	b	111d8 <__sanitizer_cov_dump@@Base+0xca8>
   111b4:	add	x2, x2, x2, lsl #6
   111b8:	add	x2, x2, x9
   111bc:	add	x2, x6, x2, lsl #3
   111c0:	ldr	x2, [x2, #8]
   111c4:	tst	x5, x2
   111c8:	b.eq	10f68 <__sanitizer_cov_dump@@Base+0xa38>  // b.none
   111cc:	add	x3, x3, #0x1
   111d0:	cmp	x8, x3
   111d4:	b.eq	11428 <__sanitizer_cov_dump@@Base+0xef8>  // b.none
   111d8:	lsl	x2, x3, #3
   111dc:	ldr	w2, [x10, x2]
   111e0:	add	x7, x2, x2, lsl #6
   111e4:	ldr	x7, [x6, x7, lsl #3]
   111e8:	tst	x11, x7
   111ec:	b.eq	10f68 <__sanitizer_cov_dump@@Base+0xa38>  // b.none
   111f0:	b	111b4 <__sanitizer_cov_dump@@Base+0xc84>
   111f4:	orr	x1, x1, x3
   111f8:	str	x1, [x19, #8]
   111fc:	add	x1, x19, x2, lsl #3
   11200:	str	xzr, [x1, #16]
   11204:	b	1143c <__sanitizer_cov_dump@@Base+0xf0c>
   11208:	mov	x4, #0x40                  	// #64
   1120c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11210:	add	x2, x2, #0x780
   11214:	mov	w1, #0x3f                  	// #63
   11218:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1121c:	add	x0, x0, #0x638
   11220:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11224:	ldr	x3, [x19, #1568]
   11228:	cmp	x3, #0x3f
   1122c:	b.hi	11254 <__sanitizer_cov_dump@@Base+0xd24>  // b.pmore
   11230:	add	x0, x3, #0x1
   11234:	str	x0, [x19, #1568]
   11238:	add	x19, x19, #0x8
   1123c:	add	x0, x3, #0x83
   11240:	lsl	x0, x0, #3
   11244:	add	x1, x19, x0
   11248:	str	w4, [x19, x0]
   1124c:	str	w23, [x1, #4]
   11250:	b	11094 <__sanitizer_cov_dump@@Base+0xb64>
   11254:	mov	x4, #0x40                  	// #64
   11258:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1125c:	add	x2, x2, #0x7d8
   11260:	mov	w1, #0x43                  	// #67
   11264:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11268:	add	x0, x0, #0x638
   1126c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11270:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   11274:	b	10f88 <__sanitizer_cov_dump@@Base+0xa58>
   11278:	ldr	x0, [x22]
   1127c:	ldr	x1, [x20, #16]
   11280:	ldr	x3, [x19, #528]
   11284:	cmp	x1, x3
   11288:	b.ne	112c4 <__sanitizer_cov_dump@@Base+0xd94>  // b.any
   1128c:	cmp	x0, #0xfff
   11290:	b.ls	112e0 <__sanitizer_cov_dump@@Base+0xdb0>  // b.plast
   11294:	and	x4, x0, #0xfffffffffffff000
   11298:	cmp	x1, x4
   1129c:	b.ne	11300 <__sanitizer_cov_dump@@Base+0xdd0>  // b.any
   112a0:	ubfx	x2, x0, #6, #6
   112a4:	mov	x1, #0x1                   	// #1
   112a8:	lsl	x1, x1, x2
   112ac:	ldr	x3, [x19, #8]
   112b0:	tst	x1, x3
   112b4:	b.ne	1131c <__sanitizer_cov_dump@@Base+0xdec>  // b.any
   112b8:	cbz	w25, 10fa0 <__sanitizer_cov_dump@@Base+0xa70>
   112bc:	ldr	x1, [x22]
   112c0:	b	1100c <__sanitizer_cov_dump@@Base+0xadc>
   112c4:	mov	x4, x1
   112c8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   112cc:	add	x2, x2, #0x980
   112d0:	mov	w1, #0x6c                  	// #108
   112d4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   112d8:	add	x0, x0, #0x638
   112dc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   112e0:	mov	x4, #0x1000                	// #4096
   112e4:	mov	x3, x0
   112e8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   112ec:	add	x2, x2, #0x620
   112f0:	mov	w1, #0x172                 	// #370
   112f4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   112f8:	add	x0, x0, #0x638
   112fc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11300:	mov	x3, x1
   11304:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11308:	add	x2, x2, #0x950
   1130c:	mov	w1, #0x173                 	// #371
   11310:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11314:	add	x0, x0, #0x638
   11318:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1131c:	mov	x1, #0x1                   	// #1
   11320:	lsl	x0, x1, x0
   11324:	add	x2, x19, x2, lsl #3
   11328:	ldr	x1, [x2, #16]
   1132c:	tst	x0, x1
   11330:	b.eq	112b8 <__sanitizer_cov_dump@@Base+0xd88>  // b.none
   11334:	mov	x4, #0x0                   	// #0
   11338:	mov	x3, #0x0                   	// #0
   1133c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11340:	add	x2, x2, #0x838
   11344:	mov	w1, #0xa5                  	// #165
   11348:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1134c:	add	x0, x0, #0x860
   11350:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11354:	mov	x4, #0x1000                	// #4096
   11358:	mov	x3, x1
   1135c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11360:	add	x2, x2, #0x620
   11364:	mov	w1, #0x172                 	// #370
   11368:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1136c:	add	x0, x0, #0x638
   11370:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11374:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11378:	add	x2, x2, #0x950
   1137c:	mov	w1, #0x173                 	// #371
   11380:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11384:	add	x0, x0, #0x638
   11388:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1138c:	mov	x4, x3
   11390:	mov	x3, x0
   11394:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11398:	add	x2, x2, #0x980
   1139c:	mov	w1, #0x3c                  	// #60
   113a0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   113a4:	add	x0, x0, #0x638
   113a8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   113ac:	orr	x2, x3, x2
   113b0:	str	x2, [x19, #8]
   113b4:	add	x2, x19, x0, lsl #3
   113b8:	str	xzr, [x2, #16]
   113bc:	b	1104c <__sanitizer_cov_dump@@Base+0xb1c>
   113c0:	mov	x4, #0x40                  	// #64
   113c4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   113c8:	add	x2, x2, #0x780
   113cc:	mov	w1, #0x3f                  	// #63
   113d0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   113d4:	add	x0, x0, #0x638
   113d8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   113dc:	ldr	x3, [x19, #1568]
   113e0:	cmp	x3, #0x3f
   113e4:	b.hi	1140c <__sanitizer_cov_dump@@Base+0xedc>  // b.pmore
   113e8:	add	x0, x3, #0x1
   113ec:	str	x0, [x19, #1568]
   113f0:	add	x19, x19, #0x8
   113f4:	add	x3, x3, #0x83
   113f8:	lsl	x3, x3, #3
   113fc:	add	x0, x19, x3
   11400:	str	w4, [x19, x3]
   11404:	str	w23, [x0, #4]
   11408:	b	1108c <__sanitizer_cov_dump@@Base+0xb5c>
   1140c:	mov	x4, #0x40                  	// #64
   11410:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11414:	add	x2, x2, #0x7d8
   11418:	mov	w1, #0x43                  	// #67
   1141c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11420:	add	x0, x0, #0x638
   11424:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11428:	lsr	x2, x4, #6
   1142c:	mov	x3, #0x1                   	// #1
   11430:	lsl	x3, x3, x2
   11434:	tst	x1, x3
   11438:	b.eq	111f4 <__sanitizer_cov_dump@@Base+0xcc4>  // b.none
   1143c:	add	x2, x19, x2, lsl #3
   11440:	ldr	x3, [x2, #16]
   11444:	mov	x1, #0x1                   	// #1
   11448:	lsl	x0, x1, x0
   1144c:	orr	x0, x0, x3
   11450:	str	x0, [x2, #16]
   11454:	cmp	x3, x0
   11458:	b.ne	11224 <__sanitizer_cov_dump@@Base+0xcf4>  // b.any
   1145c:	ldr	x3, [x19, #1048]
   11460:	cmp	x3, #0x3f
   11464:	b.hi	11208 <__sanitizer_cov_dump@@Base+0xcd8>  // b.pmore
   11468:	add	x0, x3, #0x1
   1146c:	str	x0, [x19, #1048]
   11470:	add	x19, x19, #0x8
   11474:	add	x3, x3, #0x42
   11478:	str	x4, [x19, x3, lsl #3]
   1147c:	b	11094 <__sanitizer_cov_dump@@Base+0xb64>
   11480:	stp	x19, x20, [sp, #-320]!
   11484:	stp	x21, x22, [sp, #16]
   11488:	stp	x23, x24, [sp, #32]
   1148c:	stp	x25, x26, [sp, #48]
   11490:	stp	x27, x28, [sp, #64]
   11494:	str	x30, [sp, #80]
   11498:	ldr	x22, [x1, #16]
   1149c:	ldr	x25, [x2]
   114a0:	ldr	x5, [x0, #16]
   114a4:	ldr	x3, [x22, #528]
   114a8:	cmp	x5, x3
   114ac:	b.ne	11524 <__sanitizer_cov_dump@@Base+0xff4>  // b.any
   114b0:	mov	x19, x0
   114b4:	mov	x21, x2
   114b8:	str	xzr, [x0, #1064]
   114bc:	ldr	x1, [x22, #8]
   114c0:	rbit	x0, x1
   114c4:	clz	x0, x0
   114c8:	mov	x3, #0x1                   	// #1
   114cc:	add	x6, x22, #0x8
   114d0:	cbz	x1, 11540 <__sanitizer_cov_dump@@Base+0x1010>
   114d4:	lsl	x2, x3, x0
   114d8:	bic	x1, x1, x2
   114dc:	ldr	x4, [x19, #1064]
   114e0:	orr	x2, x4, x2
   114e4:	str	x2, [x19, #1064]
   114e8:	cmp	x4, x2
   114ec:	b.eq	114f8 <__sanitizer_cov_dump@@Base+0xfc8>  // b.none
   114f0:	add	x2, x19, x0, lsl #3
   114f4:	str	xzr, [x2, #1072]
   114f8:	lsl	x0, x0, #3
   114fc:	add	x4, x19, x0
   11500:	add	x0, x6, x0
   11504:	ldr	x2, [x4, #1072]
   11508:	ldr	x0, [x0, #8]
   1150c:	orr	x0, x2, x0
   11510:	str	x0, [x4, #1072]
   11514:	cbz	x1, 11540 <__sanitizer_cov_dump@@Base+0x1010>
   11518:	rbit	x0, x1
   1151c:	clz	x0, x0
   11520:	b	114d4 <__sanitizer_cov_dump@@Base+0xfa4>
   11524:	mov	x4, x5
   11528:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1152c:	add	x2, x2, #0x980
   11530:	mov	w1, #0x6c                  	// #108
   11534:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11538:	add	x0, x0, #0x638
   1153c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11540:	cmp	x25, #0xfff
   11544:	b.ls	115b0 <__sanitizer_cov_dump@@Base+0x1080>  // b.plast
   11548:	and	x4, x25, #0xfffffffffffff000
   1154c:	cmp	x5, x4
   11550:	b.ne	115d0 <__sanitizer_cov_dump@@Base+0x10a0>  // b.any
   11554:	and	x27, x25, #0xfff
   11558:	ubfx	x0, x25, #6, #6
   1155c:	mov	x2, x0
   11560:	str	x0, [sp, #112]
   11564:	and	x1, x25, #0x3f
   11568:	mov	x0, #0x1                   	// #1
   1156c:	lsl	x0, x0, x2
   11570:	mov	x2, x0
   11574:	str	x0, [sp, #104]
   11578:	ldr	x0, [x19, #1064]
   1157c:	tst	x2, x0
   11580:	b.ne	115ec <__sanitizer_cov_dump@@Base+0x10bc>  // b.any
   11584:	add	x0, x19, #0x630
   11588:	str	x0, [sp, #128]
   1158c:	mov	x24, #0x1                   	// #1
   11590:	lsl	x0, x24, x1
   11594:	str	x0, [sp, #152]
   11598:	add	x0, x27, x27, lsl #6
   1159c:	add	x0, x0, x24
   115a0:	str	x0, [sp, #144]
   115a4:	add	x26, x27, x27, lsl #6
   115a8:	add	x26, x19, x26, lsl #3
   115ac:	b	116b0 <__sanitizer_cov_dump@@Base+0x1180>
   115b0:	mov	x4, #0x1000                	// #4096
   115b4:	mov	x3, x25
   115b8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   115bc:	add	x2, x2, #0x620
   115c0:	mov	w1, #0x172                 	// #370
   115c4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   115c8:	add	x0, x0, #0x638
   115cc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   115d0:	mov	x3, x5
   115d4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   115d8:	add	x2, x2, #0x950
   115dc:	mov	w1, #0x173                 	// #371
   115e0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   115e4:	add	x0, x0, #0x638
   115e8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   115ec:	ldr	x0, [sp, #112]
   115f0:	add	x2, x19, x0, lsl #3
   115f4:	mov	x0, #0x1                   	// #1
   115f8:	lsl	x0, x0, x1
   115fc:	ldr	x2, [x2, #1072]
   11600:	tst	x0, x2
   11604:	b.eq	11584 <__sanitizer_cov_dump@@Base+0x1054>  // b.none
   11608:	mov	x4, #0x0                   	// #0
   1160c:	mov	x3, #0x0                   	// #0
   11610:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11614:	add	x2, x2, #0x8b0
   11618:	mov	w1, #0x13e                 	// #318
   1161c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11620:	add	x0, x0, #0x638
   11624:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11628:	ldr	x0, [sp, #112]
   1162c:	add	x0, x19, x0, lsl #3
   11630:	ldr	x23, [x0, #1072]
   11634:	mov	x1, #0x1                   	// #1
   11638:	ldr	x0, [sp, #152]
   1163c:	ands	x23, x0, x23
   11640:	b.eq	1168c <__sanitizer_cov_dump@@Base+0x115c>  // b.none
   11644:	cmp	x24, x1
   11648:	b.ne	116a4 <__sanitizer_cov_dump@@Base+0x1174>  // b.any
   1164c:	cbz	x1, 118f0 <__sanitizer_cov_dump@@Base+0x13c0>
   11650:	mov	x0, #0x1                   	// #1
   11654:	add	x4, sp, #0xa0
   11658:	add	x2, x4, x0, lsl #3
   1165c:	ldur	x3, [x2, #-8]
   11660:	cmp	x3, #0xfff
   11664:	b.hi	11784 <__sanitizer_cov_dump@@Base+0x1254>  // b.pmore
   11668:	add	x5, x4, x0, lsl #3
   1166c:	ldr	x2, [x19, #16]
   11670:	add	x2, x2, x3
   11674:	stur	x2, [x5, #-8]
   11678:	add	x2, x0, #0x1
   1167c:	cmp	x1, x0
   11680:	b.eq	11918 <__sanitizer_cov_dump@@Base+0x13e8>  // b.none
   11684:	mov	x0, x2
   11688:	b	11658 <__sanitizer_cov_dump@@Base+0x1128>
   1168c:	mov	x28, x23
   11690:	mov	x20, x23
   11694:	str	x23, [sp, #120]
   11698:	b	116d0 <__sanitizer_cov_dump@@Base+0x11a0>
   1169c:	ldr	x20, [x26, #1584]
   116a0:	cbnz	x20, 119d4 <__sanitizer_cov_dump@@Base+0x14a4>
   116a4:	add	x24, x24, #0x1
   116a8:	cmp	x24, #0x15
   116ac:	b.eq	118f0 <__sanitizer_cov_dump@@Base+0x13c0>  // b.none
   116b0:	str	x27, [sp, #160]
   116b4:	ldr	x23, [x19, #1064]
   116b8:	ldr	x0, [sp, #104]
   116bc:	ands	x23, x0, x23
   116c0:	b.ne	11628 <__sanitizer_cov_dump@@Base+0x10f8>  // b.any
   116c4:	mov	x28, x23
   116c8:	mov	x20, x23
   116cc:	str	x23, [sp, #120]
   116d0:	sub	x0, x24, #0x1
   116d4:	str	x0, [sp, #136]
   116d8:	cbnz	x20, 116e4 <__sanitizer_cov_dump@@Base+0x11b4>
   116dc:	cbz	x23, 1169c <__sanitizer_cov_dump@@Base+0x116c>
   116e0:	b	116a4 <__sanitizer_cov_dump@@Base+0x1174>
   116e4:	cbnz	x28, 11718 <__sanitizer_cov_dump@@Base+0x11e8>
   116e8:	rbit	x1, x20
   116ec:	clz	x1, x1
   116f0:	str	x1, [sp, #120]
   116f4:	mov	x0, #0x1                   	// #1
   116f8:	lsl	x0, x0, x1
   116fc:	bic	x20, x20, x0
   11700:	ldr	x0, [sp, #144]
   11704:	add	x0, x0, x23, lsl #6
   11708:	add	x0, x0, x1
   1170c:	add	x0, x19, x0, lsl #3
   11710:	ldr	x28, [x0, #1584]
   11714:	cbz	x28, 11764 <__sanitizer_cov_dump@@Base+0x1234>
   11718:	rbit	x1, x28
   1171c:	clz	x1, x1
   11720:	mov	x0, #0x1                   	// #1
   11724:	lsl	x0, x0, x1
   11728:	bic	x28, x28, x0
   1172c:	ldr	x0, [sp, #120]
   11730:	add	x0, x0, x23, lsl #6
   11734:	orr	x2, x28, x20
   11738:	cmp	x2, #0x0
   1173c:	cinc	x23, x23, eq  // eq = none
   11740:	ldr	x4, [sp, #136]
   11744:	add	x3, sp, #0xa8
   11748:	add	x2, x19, #0x428
   1174c:	add	x1, x1, x0, lsl #6
   11750:	ldr	x0, [sp, #128]
   11754:	bl	12180 <__sanitizer_cov_dump@@Base+0x1c50>
   11758:	cbz	x0, 116d8 <__sanitizer_cov_dump@@Base+0x11a8>
   1175c:	add	x1, x0, #0x1
   11760:	b	11644 <__sanitizer_cov_dump@@Base+0x1114>
   11764:	mov	x4, #0x0                   	// #0
   11768:	mov	x3, #0x0                   	// #0
   1176c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11770:	add	x2, x2, #0x9a0
   11774:	mov	w1, #0x132                 	// #306
   11778:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1177c:	add	x0, x0, #0x6f0
   11780:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11784:	mov	x4, #0x1000                	// #4096
   11788:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1178c:	add	x2, x2, #0x8d0
   11790:	mov	w1, #0x16f                 	// #367
   11794:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11798:	add	x0, x0, #0x638
   1179c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   117a0:	mov	x4, x25
   117a4:	mov	x3, x0
   117a8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   117ac:	add	x2, x2, #0x8e8
   117b0:	mov	w1, #0x143                 	// #323
   117b4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   117b8:	add	x0, x0, #0x638
   117bc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   117c0:	mov	x4, x0
   117c4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   117c8:	add	x2, x2, #0x908
   117cc:	mov	w1, #0x7f                  	// #127
   117d0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   117d4:	add	x0, x0, #0x860
   117d8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   117dc:	mov	x4, #0x1000                	// #4096
   117e0:	mov	x3, x5
   117e4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   117e8:	add	x2, x2, #0x620
   117ec:	mov	w1, #0x172                 	// #370
   117f0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   117f4:	add	x0, x0, #0x638
   117f8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   117fc:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11800:	add	x2, x2, #0x950
   11804:	mov	w1, #0x173                 	// #371
   11808:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1180c:	add	x0, x0, #0x638
   11810:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11814:	mov	x4, #0x1000                	// #4096
   11818:	mov	x3, x6
   1181c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11820:	add	x2, x2, #0x620
   11824:	mov	w1, #0x172                 	// #370
   11828:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1182c:	add	x0, x0, #0x638
   11830:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11834:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11838:	add	x2, x2, #0x950
   1183c:	mov	w1, #0x173                 	// #371
   11840:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11844:	add	x0, x0, #0x638
   11848:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1184c:	add	x0, x0, #0x1
   11850:	add	x2, x2, #0x10
   11854:	cmp	x4, x0
   11858:	b.eq	1188c <__sanitizer_cov_dump@@Base+0x135c>  // b.none
   1185c:	ldrh	w3, [x2]
   11860:	cmp	x5, x3
   11864:	b.ne	1184c <__sanitizer_cov_dump@@Base+0x131c>  // b.any
   11868:	ldrh	w3, [x2, #2]
   1186c:	cmp	x6, x3
   11870:	b.ne	1184c <__sanitizer_cov_dump@@Base+0x131c>  // b.any
   11874:	add	x0, x19, x0, lsl #4
   11878:	add	x0, x0, #0x210, lsl #12
   1187c:	ldr	w3, [x0, #2628]
   11880:	ldr	w4, [x0, #2632]
   11884:	ldr	w2, [x0, #2636]
   11888:	b	11898 <__sanitizer_cov_dump@@Base+0x1368>
   1188c:	mov	w2, w14
   11890:	mov	w4, w10
   11894:	mov	w3, w13
   11898:	add	x5, x5, x11
   1189c:	ldr	x5, [x8, x5, lsl #3]
   118a0:	add	x0, x6, x11
   118a4:	ldr	x0, [x8, x0, lsl #3]
   118a8:	sxtw	x2, w2
   118ac:	str	x2, [x22]
   118b0:	ldr	x2, [x5, #16]
   118b4:	str	x2, [x22, #8]
   118b8:	ldr	x0, [x0, #16]
   118bc:	str	x0, [x22, #16]
   118c0:	str	w4, [x22, #24]
   118c4:	str	w3, [x22, #28]
   118c8:	add	x0, x7, #0x1
   118cc:	add	x22, x22, #0x20
   118d0:	cmp	x7, x1
   118d4:	b.eq	118fc <__sanitizer_cov_dump@@Base+0x13cc>  // b.none
   118d8:	mov	x7, x0
   118dc:	b	11978 <__sanitizer_cov_dump@@Base+0x1448>
   118e0:	mov	w2, w14
   118e4:	mov	w4, w10
   118e8:	mov	w3, w13
   118ec:	b	11898 <__sanitizer_cov_dump@@Base+0x1368>
   118f0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   118f4:	add	x0, x0, #0x928
   118f8:	bl	1a368 <OnPrint@@Base+0x344>
   118fc:	ldp	x21, x22, [sp, #16]
   11900:	ldp	x23, x24, [sp, #32]
   11904:	ldp	x25, x26, [sp, #48]
   11908:	ldp	x27, x28, [sp, #64]
   1190c:	ldr	x30, [sp, #80]
   11910:	ldp	x19, x20, [sp], #320
   11914:	ret
   11918:	ldr	x0, [sp, #160]
   1191c:	cmp	x25, x0
   11920:	b.ne	117a0 <__sanitizer_cov_dump@@Base+0x1270>  // b.any
   11924:	ldr	x3, [x21]
   11928:	cmp	x3, x0
   1192c:	b.ne	117c0 <__sanitizer_cov_dump@@Base+0x1290>  // b.any
   11930:	mov	w0, #0x1                   	// #1
   11934:	strb	w0, [x22, #2224]
   11938:	cmp	x1, #0x14
   1193c:	mov	x0, #0x14                  	// #20
   11940:	csel	x1, x1, x0, ls  // ls = plast
   11944:	str	w1, [x22, #1576]
   11948:	add	x22, x22, #0x630
   1194c:	mov	x7, #0x1                   	// #1
   11950:	add	x9, sp, #0xa0
   11954:	add	x8, x19, #0x10
   11958:	add	x15, x8, #0x410, lsl #12
   1195c:	mov	w14, #0x0                   	// #0
   11960:	mov	w10, #0xffffffff            	// #-1
   11964:	mov	w13, w10
   11968:	mov	x12, #0xa40                 	// #2624
   1196c:	movk	x12, #0x21, lsl #16
   11970:	mov	x11, #0x1146                	// #4422
   11974:	movk	x11, #0x4, lsl #16
   11978:	add	x0, x9, x7, lsl #3
   1197c:	ldur	x5, [x0, #-8]
   11980:	udiv	x0, x7, x1
   11984:	msub	x0, x0, x1, x7
   11988:	cmp	x5, #0xfff
   1198c:	b.ls	117dc <__sanitizer_cov_dump@@Base+0x12ac>  // b.plast
   11990:	ldr	x3, [x8]
   11994:	and	x4, x5, #0xfffffffffffff000
   11998:	cmp	x3, x4
   1199c:	b.ne	117fc <__sanitizer_cov_dump@@Base+0x12cc>  // b.any
   119a0:	ldr	x6, [x9, x0, lsl #3]
   119a4:	and	x5, x5, #0xfff
   119a8:	cmp	x6, #0xfff
   119ac:	b.ls	11814 <__sanitizer_cov_dump@@Base+0x12e4>  // b.plast
   119b0:	and	x4, x6, #0xfffffffffffff000
   119b4:	cmp	x4, x3
   119b8:	b.ne	11834 <__sanitizer_cov_dump@@Base+0x1304>  // b.any
   119bc:	and	x6, x6, #0xfff
   119c0:	ldr	x4, [x15, #2608]
   119c4:	cbz	x4, 118e0 <__sanitizer_cov_dump@@Base+0x13b0>
   119c8:	add	x2, x19, x12
   119cc:	mov	x0, #0x0                   	// #0
   119d0:	b	1185c <__sanitizer_cov_dump@@Base+0x132c>
   119d4:	cbz	x28, 119e0 <__sanitizer_cov_dump@@Base+0x14b0>
   119d8:	mov	x20, x23
   119dc:	b	11718 <__sanitizer_cov_dump@@Base+0x11e8>
   119e0:	mov	x23, x28
   119e4:	b	116e8 <__sanitizer_cov_dump@@Base+0x11b8>
   119e8:	stp	x19, x20, [sp, #-64]!
   119ec:	stp	x21, x22, [sp, #16]
   119f0:	str	x30, [sp, #48]
   119f4:	mov	x19, x0
   119f8:	ldr	x21, [x1, #16]
   119fc:	ldr	x0, [x21, #8]
   11a00:	cbnz	x0, 11d54 <__sanitizer_cov_dump@@Base+0x1824>
   11a04:	ldp	x21, x22, [sp, #16]
   11a08:	ldr	x30, [sp, #48]
   11a0c:	ldp	x19, x20, [sp], #64
   11a10:	ret
   11a14:	and	x2, x0, #0xfffffffffffff000
   11a18:	cmp	x1, x2
   11a1c:	b.ne	11d78 <__sanitizer_cov_dump@@Base+0x1848>  // b.any
   11a20:	and	x3, x0, #0xfff
   11a24:	ldr	x6, [x21, #1568]
   11a28:	cbz	x6, 11e7c <__sanitizer_cov_dump@@Base+0x194c>
   11a2c:	lsr	x3, x3, #6
   11a30:	mov	x1, #0x1                   	// #1
   11a34:	lsl	x8, x1, x3
   11a38:	lsl	x2, x1, x0
   11a3c:	mov	x1, #0x0                   	// #0
   11a40:	add	x7, x21, #0x420
   11a44:	add	x4, x19, #0x630
   11a48:	b	11a70 <__sanitizer_cov_dump@@Base+0x1540>
   11a4c:	add	x0, x0, x0, lsl #6
   11a50:	add	x0, x0, x3
   11a54:	add	x0, x4, x0, lsl #3
   11a58:	ldr	x0, [x0, #8]
   11a5c:	tst	x2, x0
   11a60:	b.eq	11d78 <__sanitizer_cov_dump@@Base+0x1848>  // b.none
   11a64:	add	x1, x1, #0x1
   11a68:	cmp	x6, x1
   11a6c:	b.eq	11a8c <__sanitizer_cov_dump@@Base+0x155c>  // b.none
   11a70:	lsl	x0, x1, #3
   11a74:	ldr	w0, [x7, x0]
   11a78:	add	x5, x0, x0, lsl #6
   11a7c:	ldr	x5, [x4, x5, lsl #3]
   11a80:	tst	x8, x5
   11a84:	b.eq	11d78 <__sanitizer_cov_dump@@Base+0x1848>  // b.none
   11a88:	b	11a4c <__sanitizer_cov_dump@@Base+0x151c>
   11a8c:	ldp	x23, x24, [sp, #32]
   11a90:	b	11a04 <__sanitizer_cov_dump@@Base+0x14d4>
   11a94:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   11a98:	b	11d98 <__sanitizer_cov_dump@@Base+0x1868>
   11a9c:	mov	x4, x1
   11aa0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11aa4:	add	x2, x2, #0x980
   11aa8:	mov	w1, #0x6c                  	// #108
   11aac:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11ab0:	add	x0, x0, #0x638
   11ab4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11ab8:	mov	x4, #0x1000                	// #4096
   11abc:	mov	x3, x0
   11ac0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11ac4:	add	x2, x2, #0x620
   11ac8:	mov	w1, #0x172                 	// #370
   11acc:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11ad0:	add	x0, x0, #0x638
   11ad4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11ad8:	mov	x3, x1
   11adc:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11ae0:	add	x2, x2, #0x950
   11ae4:	mov	w1, #0x173                 	// #371
   11ae8:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11aec:	add	x0, x0, #0x638
   11af0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11af4:	add	x4, x21, x5, lsl #3
   11af8:	mov	x2, #0x1                   	// #1
   11afc:	lsl	x2, x2, x0
   11b00:	ldr	x4, [x4, #16]
   11b04:	tst	x2, x4
   11b08:	b.eq	11df0 <__sanitizer_cov_dump@@Base+0x18c0>  // b.none
   11b0c:	dmb	ish
   11b10:	strb	wzr, [x19, #8]
   11b14:	ldp	x23, x24, [sp, #32]
   11b18:	b	11a04 <__sanitizer_cov_dump@@Base+0x14d4>
   11b1c:	add	x2, x19, #0x208, lsl #12
   11b20:	add	x2, x2, #0x630
   11b24:	str	x8, [x2]
   11b28:	add	x2, x19, #0x208, lsl #12
   11b2c:	add	x2, x2, #0x800
   11b30:	str	x1, [x2, #56]
   11b34:	add	x1, x19, x5, lsl #3
   11b38:	add	x1, x1, #0x208, lsl #12
   11b3c:	mov	x2, #0x1                   	// #1
   11b40:	lsl	x0, x2, x0
   11b44:	str	x0, [x1, #2112]
   11b48:	add	x0, x19, #0x208, lsl #12
   11b4c:	add	x0, x0, #0x800
   11b50:	sub	x1, x0, #0x1d0
   11b54:	mov	x4, x2
   11b58:	add	x9, x19, #0x208, lsl #12
   11b5c:	add	x3, x0, #0x38
   11b60:	mov	x12, #0x208                 	// #520
   11b64:	add	x11, x19, #0x630
   11b68:	ldr	x0, [x1]
   11b6c:	cbnz	x0, 11bd8 <__sanitizer_cov_dump@@Base+0x16a8>
   11b70:	add	x0, x19, #0x208, lsl #12
   11b74:	add	x0, x0, #0x800
   11b78:	ldr	x1, [x0, #56]
   11b7c:	ldr	x0, [x21, #8]
   11b80:	and	x0, x1, x0
   11b84:	rbit	x2, x0
   11b88:	clz	x2, x2
   11b8c:	cbz	x0, 11d44 <__sanitizer_cov_dump@@Base+0x1814>
   11b90:	mov	x5, #0x1                   	// #1
   11b94:	add	x4, x21, #0x8
   11b98:	add	x3, x19, #0x208, lsl #12
   11b9c:	add	x3, x3, #0x838
   11ba0:	lsl	x6, x5, x2
   11ba4:	bic	x0, x0, x6
   11ba8:	tst	x1, x6
   11bac:	b.eq	11bc8 <__sanitizer_cov_dump@@Base+0x1698>  // b.none
   11bb0:	add	x6, x4, x2, lsl #3
   11bb4:	add	x2, x3, x2, lsl #3
   11bb8:	ldr	x6, [x6, #8]
   11bbc:	ldr	x2, [x2, #8]
   11bc0:	tst	x6, x2
   11bc4:	b.ne	11cf4 <__sanitizer_cov_dump@@Base+0x17c4>  // b.any
   11bc8:	cbz	x0, 11d44 <__sanitizer_cov_dump@@Base+0x1814>
   11bcc:	rbit	x2, x0
   11bd0:	clz	x2, x2
   11bd4:	b	11ba0 <__sanitizer_cov_dump@@Base+0x1670>
   11bd8:	rbit	x2, x0
   11bdc:	clz	x2, x2
   11be0:	lsl	x8, x4, x2
   11be4:	bic	x5, x0, x8
   11be8:	str	x5, [x1]
   11bec:	add	x5, x19, x2, lsl #3
   11bf0:	add	x6, x5, #0x208, lsl #12
   11bf4:	ldr	x6, [x6, #1592]
   11bf8:	cbz	x6, 11c60 <__sanitizer_cov_dump@@Base+0x1730>
   11bfc:	rbit	x13, x6
   11c00:	clz	x13, x13
   11c04:	lsl	x7, x4, x13
   11c08:	bic	x6, x6, x7
   11c0c:	add	x5, x5, #0x208, lsl #12
   11c10:	str	x6, [x5, #1592]
   11c14:	cbnz	x6, 11c80 <__sanitizer_cov_dump@@Base+0x1750>
   11c18:	add	x2, x13, x2, lsl #6
   11c1c:	lsr	x0, x2, #6
   11c20:	and	x5, x2, #0x3f
   11c24:	ldr	x6, [x9, #2104]
   11c28:	lsl	x7, x4, x0
   11c2c:	tst	x6, x7
   11c30:	b.eq	11c8c <__sanitizer_cov_dump@@Base+0x175c>  // b.none
   11c34:	add	x0, x3, x0, lsl #3
   11c38:	ldr	x6, [x0, #8]
   11c3c:	lsl	x5, x4, x5
   11c40:	orr	x5, x5, x6
   11c44:	str	x5, [x0, #8]
   11c48:	cmp	x6, x5
   11c4c:	b.eq	11b68 <__sanitizer_cov_dump@@Base+0x1638>  // b.none
   11c50:	mul	x0, x2, x12
   11c54:	ldr	x6, [x10, x0]
   11c58:	add	x2, x2, x2, lsl #6
   11c5c:	b	11cc0 <__sanitizer_cov_dump@@Base+0x1790>
   11c60:	mov	x4, #0x0                   	// #0
   11c64:	mov	x3, #0x0                   	// #0
   11c68:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   11c6c:	add	x2, x2, #0xa18
   11c70:	mov	w1, #0x30                  	// #48
   11c74:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11c78:	add	x0, x0, #0x6f0
   11c7c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11c80:	orr	x0, x0, x8
   11c84:	str	x0, [x1]
   11c88:	b	11c18 <__sanitizer_cov_dump@@Base+0x16e8>
   11c8c:	orr	x6, x6, x7
   11c90:	str	x6, [x9, #2104]
   11c94:	add	x6, x3, x0, lsl #3
   11c98:	str	xzr, [x6, #8]
   11c9c:	b	11c34 <__sanitizer_cov_dump@@Base+0x1704>
   11ca0:	add	x5, x19, x0, lsl #3
   11ca4:	add	x5, x5, #0x208, lsl #12
   11ca8:	add	x0, x2, x0
   11cac:	add	x0, x11, x0, lsl #3
   11cb0:	ldr	x7, [x5, #1592]
   11cb4:	ldr	x0, [x0, #8]
   11cb8:	orr	x0, x7, x0
   11cbc:	str	x0, [x5, #1592]
   11cc0:	cbz	x6, 11b68 <__sanitizer_cov_dump@@Base+0x1638>
   11cc4:	rbit	x0, x6
   11cc8:	clz	x0, x0
   11ccc:	lsl	x5, x4, x0
   11cd0:	bic	x6, x6, x5
   11cd4:	ldr	x7, [x1]
   11cd8:	orr	x5, x7, x5
   11cdc:	str	x5, [x1]
   11ce0:	cmp	x7, x5
   11ce4:	b.eq	11ca0 <__sanitizer_cov_dump@@Base+0x1770>  // b.none
   11ce8:	add	x5, x1, x0, lsl #3
   11cec:	str	xzr, [x5, #8]
   11cf0:	b	11ca0 <__sanitizer_cov_dump@@Base+0x1770>
   11cf4:	ldr	x23, [x22]
   11cf8:	ldr	x0, [x20]
   11cfc:	ldr	x1, [x0]
   11d00:	mov	x0, x20
   11d04:	blr	x1
   11d08:	mov	w24, w0
   11d0c:	ldr	x0, [x20]
   11d10:	ldr	x1, [x0, #8]
   11d14:	mov	x0, x20
   11d18:	blr	x1
   11d1c:	mov	w4, w0
   11d20:	mov	w3, w24
   11d24:	mov	x2, x23
   11d28:	add	x1, x21, #0x8
   11d2c:	add	x0, x19, #0x10
   11d30:	bl	11e84 <__sanitizer_cov_dump@@Base+0x1954>
   11d34:	mov	x2, x22
   11d38:	mov	x1, x20
   11d3c:	mov	x0, x19
   11d40:	bl	11480 <__sanitizer_cov_dump@@Base+0xf50>
   11d44:	dmb	ish
   11d48:	strb	wzr, [x19, #8]
   11d4c:	ldp	x23, x24, [sp, #32]
   11d50:	b	11a04 <__sanitizer_cov_dump@@Base+0x14d4>
   11d54:	stp	x23, x24, [sp, #32]
   11d58:	mov	x20, x1
   11d5c:	mov	x22, x2
   11d60:	ldr	x0, [x2]
   11d64:	cbz	x0, 11d78 <__sanitizer_cov_dump@@Base+0x1848>
   11d68:	ldr	x1, [x21, #528]
   11d6c:	ldr	x2, [x19, #16]
   11d70:	cmp	x1, x2
   11d74:	b.eq	11a14 <__sanitizer_cov_dump@@Base+0x14e4>  // b.none
   11d78:	add	x0, x19, #0x8
   11d7c:	mov	w2, #0x1                   	// #1
   11d80:	ldxrb	w1, [x0]
   11d84:	stxrb	w3, w2, [x0]
   11d88:	cbnz	w3, 11d80 <__sanitizer_cov_dump@@Base+0x1850>
   11d8c:	dmb	ish
   11d90:	and	w1, w1, #0xff
   11d94:	cbnz	w1, 11a94 <__sanitizer_cov_dump@@Base+0x1564>
   11d98:	mov	x2, x22
   11d9c:	mov	x1, x21
   11da0:	mov	x0, x19
   11da4:	bl	10a28 <__sanitizer_cov_dump@@Base+0x4f8>
   11da8:	ldr	x0, [x22]
   11dac:	ldr	x1, [x19, #16]
   11db0:	ldr	x3, [x21, #528]
   11db4:	cmp	x1, x3
   11db8:	b.ne	11a9c <__sanitizer_cov_dump@@Base+0x156c>  // b.any
   11dbc:	cmp	x0, #0xfff
   11dc0:	b.ls	11ab8 <__sanitizer_cov_dump@@Base+0x1588>  // b.plast
   11dc4:	and	x4, x0, #0xfffffffffffff000
   11dc8:	cmp	x1, x4
   11dcc:	b.ne	11ad8 <__sanitizer_cov_dump@@Base+0x15a8>  // b.any
   11dd0:	and	x3, x0, #0xfff
   11dd4:	ubfx	x5, x0, #6, #6
   11dd8:	and	x0, x0, #0x3f
   11ddc:	mov	x1, #0x1                   	// #1
   11de0:	lsl	x1, x1, x5
   11de4:	ldr	x2, [x21, #8]
   11de8:	tst	x1, x2
   11dec:	b.ne	11af4 <__sanitizer_cov_dump@@Base+0x15c4>  // b.any
   11df0:	add	x2, x19, #0x208, lsl #12
   11df4:	add	x2, x2, #0x630
   11df8:	str	xzr, [x2]
   11dfc:	add	x10, x19, #0x630
   11e00:	add	x2, x3, x3, lsl #6
   11e04:	ldr	x4, [x10, x2, lsl #3]
   11e08:	rbit	x2, x4
   11e0c:	clz	x2, x2
   11e10:	mov	x7, #0x0                   	// #0
   11e14:	cbz	x4, 11b28 <__sanitizer_cov_dump@@Base+0x15f8>
   11e18:	mov	x9, #0x1                   	// #1
   11e1c:	add	x12, x19, #0x208, lsl #12
   11e20:	add	x12, x12, #0x630
   11e24:	mov	x11, x10
   11e28:	add	x3, x3, x3, lsl #6
   11e2c:	lsl	x6, x9, x2
   11e30:	bic	x4, x4, x6
   11e34:	orr	x8, x6, x7
   11e38:	bics	xzr, x6, x7
   11e3c:	b.eq	11e48 <__sanitizer_cov_dump@@Base+0x1918>  // b.none
   11e40:	add	x6, x12, x2, lsl #3
   11e44:	str	xzr, [x6, #8]
   11e48:	add	x6, x19, x2, lsl #3
   11e4c:	add	x6, x6, #0x208, lsl #12
   11e50:	add	x2, x3, x2
   11e54:	add	x2, x11, x2, lsl #3
   11e58:	ldr	x7, [x6, #1592]
   11e5c:	ldr	x2, [x2, #8]
   11e60:	orr	x2, x7, x2
   11e64:	str	x2, [x6, #1592]
   11e68:	cbz	x4, 11b1c <__sanitizer_cov_dump@@Base+0x15ec>
   11e6c:	rbit	x2, x4
   11e70:	clz	x2, x2
   11e74:	mov	x7, x8
   11e78:	b	11e2c <__sanitizer_cov_dump@@Base+0x18fc>
   11e7c:	ldp	x23, x24, [sp, #32]
   11e80:	b	11a04 <__sanitizer_cov_dump@@Base+0x14d4>
   11e84:	sub	sp, sp, #0x150
   11e88:	str	x30, [sp]
   11e8c:	ldr	x5, [x0]
   11e90:	ldr	x6, [x1, #520]
   11e94:	cmp	x5, x6
   11e98:	b.eq	11eac <__sanitizer_cov_dump@@Base+0x197c>  // b.none
   11e9c:	str	xzr, [x1]
   11ea0:	str	x5, [x1, #520]
   11ea4:	str	xzr, [x1, #1040]
   11ea8:	str	xzr, [x1, #1560]
   11eac:	cmp	x2, #0xfff
   11eb0:	b.ls	11f4c <__sanitizer_cov_dump@@Base+0x1a1c>  // b.plast
   11eb4:	ldr	x5, [x0]
   11eb8:	and	x6, x2, #0xfffffffffffff000
   11ebc:	cmp	x5, x6
   11ec0:	b.ne	11f6c <__sanitizer_cov_dump@@Base+0x1a3c>  // b.any
   11ec4:	ldr	x6, [x1, #520]
   11ec8:	cmp	x6, x5
   11ecc:	b.ne	11f8c <__sanitizer_cov_dump@@Base+0x1a5c>  // b.any
   11ed0:	add	x5, x0, #0x208, lsl #12
   11ed4:	add	x5, x5, #0x620
   11ed8:	str	xzr, [x5]
   11edc:	ldr	x6, [x1]
   11ee0:	rbit	x5, x6
   11ee4:	clz	x5, x5
   11ee8:	cbz	x6, 11fac <__sanitizer_cov_dump@@Base+0x1a7c>
   11eec:	mov	x10, #0x1                   	// #1
   11ef0:	add	x9, x0, #0x208, lsl #12
   11ef4:	add	x9, x9, #0x620
   11ef8:	lsl	x7, x10, x5
   11efc:	bic	x6, x6, x7
   11f00:	ldr	x8, [x9]
   11f04:	orr	x7, x8, x7
   11f08:	str	x7, [x9]
   11f0c:	cmp	x8, x7
   11f10:	b.eq	11f1c <__sanitizer_cov_dump@@Base+0x19ec>  // b.none
   11f14:	add	x7, x9, x5, lsl #3
   11f18:	str	xzr, [x7, #8]
   11f1c:	lsl	x5, x5, #3
   11f20:	add	x7, x0, x5
   11f24:	add	x7, x7, #0x208, lsl #12
   11f28:	add	x5, x1, x5
   11f2c:	ldr	x8, [x7, #1576]
   11f30:	ldr	x5, [x5, #8]
   11f34:	orr	x5, x8, x5
   11f38:	str	x5, [x7, #1576]
   11f3c:	cbz	x6, 11fac <__sanitizer_cov_dump@@Base+0x1a7c>
   11f40:	rbit	x5, x6
   11f44:	clz	x5, x5
   11f48:	b	11ef8 <__sanitizer_cov_dump@@Base+0x19c8>
   11f4c:	mov	x4, #0x1000                	// #4096
   11f50:	mov	x3, x2
   11f54:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11f58:	add	x2, x2, #0x620
   11f5c:	mov	w1, #0x172                 	// #370
   11f60:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11f64:	add	x0, x0, #0x638
   11f68:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11f6c:	mov	x4, x6
   11f70:	mov	x3, x5
   11f74:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11f78:	add	x2, x2, #0x950
   11f7c:	mov	w1, #0x173                 	// #371
   11f80:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11f84:	add	x0, x0, #0x638
   11f88:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11f8c:	mov	x4, x5
   11f90:	mov	x3, x6
   11f94:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11f98:	add	x2, x2, #0x980
   11f9c:	mov	w1, #0x6c                  	// #108
   11fa0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   11fa4:	add	x0, x0, #0x638
   11fa8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11fac:	and	x5, x2, #0xfff
   11fb0:	ubfx	x14, x2, #6, #6
   11fb4:	mov	x6, #0x1                   	// #1
   11fb8:	lsl	x17, x6, x14
   11fbc:	lsl	x11, x6, x2
   11fc0:	mov	x12, #0x0                   	// #0
   11fc4:	add	x6, x0, #0x208, lsl #12
   11fc8:	add	x6, x6, #0x620
   11fcc:	mov	x13, #0x1                   	// #1
   11fd0:	add	x18, x0, #0x620
   11fd4:	add	x30, sp, #0x10
   11fd8:	ldr	x9, [x6]
   11fdc:	cbnz	x9, 12028 <__sanitizer_cov_dump@@Base+0x1af8>
   11fe0:	cbz	x12, 12170 <__sanitizer_cov_dump@@Base+0x1c40>
   11fe4:	mov	x6, #0x1                   	// #1
   11fe8:	add	x14, x0, #0x410, lsl #12
   11fec:	mov	x15, #0x1ffff               	// #131071
   11ff0:	add	x17, sp, #0x10
   11ff4:	and	w13, w5, #0xffff
   11ff8:	mov	x16, #0x10a3                	// #4259
   11ffc:	movk	x16, #0x2, lsl #16
   12000:	mov	w18, #0x0                   	// #0
   12004:	add	x8, x1, #0x418
   12008:	ldr	x7, [x14, #2608]
   1200c:	cmp	x7, x15
   12010:	b.ls	120f8 <__sanitizer_cov_dump@@Base+0x1bc8>  // b.plast
   12014:	add	x2, x6, #0x1
   12018:	cmp	x12, x6
   1201c:	b.eq	12170 <__sanitizer_cov_dump@@Base+0x1c40>  // b.none
   12020:	mov	x6, x2
   12024:	b	12008 <__sanitizer_cov_dump@@Base+0x1ad8>
   12028:	rbit	x2, x9
   1202c:	clz	x2, x2
   12030:	lsl	x15, x13, x2
   12034:	bic	x7, x9, x15
   12038:	str	x7, [x6]
   1203c:	add	x7, x0, x2, lsl #3
   12040:	add	x8, x7, #0x208, lsl #12
   12044:	ldr	x10, [x8, #1576]
   12048:	cbz	x10, 120b0 <__sanitizer_cov_dump@@Base+0x1b80>
   1204c:	rbit	x16, x10
   12050:	clz	x16, x16
   12054:	lsl	x8, x13, x16
   12058:	bic	x8, x10, x8
   1205c:	add	x7, x7, #0x208, lsl #12
   12060:	str	x8, [x7, #1576]
   12064:	cbnz	x8, 120d0 <__sanitizer_cov_dump@@Base+0x1ba0>
   12068:	add	x2, x16, x2, lsl #6
   1206c:	add	x7, x2, x2, lsl #6
   12070:	add	x7, x0, x7, lsl #3
   12074:	ldr	x8, [x7, #1568]
   12078:	tst	x8, x17
   1207c:	b.eq	120dc <__sanitizer_cov_dump@@Base+0x1bac>  // b.none
   12080:	add	x7, x2, x2, lsl #6
   12084:	add	x7, x7, x14
   12088:	add	x7, x18, x7, lsl #3
   1208c:	ldr	x9, [x7, #8]
   12090:	orr	x8, x9, x11
   12094:	str	x8, [x7, #8]
   12098:	cmp	x12, #0x27
   1209c:	ccmp	x9, x8, #0x4, ls  // ls = plast
   120a0:	b.eq	11fd8 <__sanitizer_cov_dump@@Base+0x1aa8>  // b.none
   120a4:	str	x2, [x30, x12, lsl #3]
   120a8:	add	x12, x12, #0x1
   120ac:	b	11fd8 <__sanitizer_cov_dump@@Base+0x1aa8>
   120b0:	mov	x4, #0x0                   	// #0
   120b4:	mov	x3, #0x0                   	// #0
   120b8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   120bc:	add	x2, x2, #0xa18
   120c0:	mov	w1, #0x30                  	// #48
   120c4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   120c8:	add	x0, x0, #0x6f0
   120cc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   120d0:	orr	x9, x9, x15
   120d4:	str	x9, [x6]
   120d8:	b	12068 <__sanitizer_cov_dump@@Base+0x1b38>
   120dc:	orr	x8, x8, x17
   120e0:	str	x8, [x7, #1568]
   120e4:	add	x7, x2, x2, lsl #6
   120e8:	add	x7, x7, x14
   120ec:	add	x7, x18, x7, lsl #3
   120f0:	str	xzr, [x7, #8]
   120f4:	b	12080 <__sanitizer_cov_dump@@Base+0x1b50>
   120f8:	add	x2, x17, x6, lsl #3
   120fc:	ldur	x10, [x2, #-8]
   12100:	and	w30, w10, #0xffff
   12104:	ldr	x11, [x1, #1560]
   12108:	cbz	x11, 12168 <__sanitizer_cov_dump@@Base+0x1c38>
   1210c:	mov	x2, x9
   12110:	lsl	x5, x2, #3
   12114:	ldr	w5, [x8, x5]
   12118:	cmp	w5, w10
   1211c:	b.eq	12134 <__sanitizer_cov_dump@@Base+0x1c04>  // b.none
   12120:	add	x2, x2, #0x1
   12124:	cmp	x2, x11
   12128:	b.ne	12110 <__sanitizer_cov_dump@@Base+0x1be0>  // b.any
   1212c:	mov	w10, w18
   12130:	b	1213c <__sanitizer_cov_dump@@Base+0x1c0c>
   12134:	add	x2, x1, x2, lsl #3
   12138:	ldr	w10, [x2, #1052]
   1213c:	add	x2, x7, #0x1
   12140:	str	x2, [x14, #2608]
   12144:	add	x2, x7, x16
   12148:	lsl	x2, x2, #4
   1214c:	add	x5, x0, x2
   12150:	strh	w30, [x0, x2]
   12154:	strh	w13, [x5, #2]
   12158:	str	w10, [x5, #4]
   1215c:	str	w3, [x5, #8]
   12160:	str	w4, [x5, #12]
   12164:	b	12014 <__sanitizer_cov_dump@@Base+0x1ae4>
   12168:	mov	w10, w18
   1216c:	b	1213c <__sanitizer_cov_dump@@Base+0x1c0c>
   12170:	mov	x0, x12
   12174:	ldr	x30, [sp]
   12178:	add	sp, sp, #0x150
   1217c:	ret
   12180:	stp	x19, x20, [sp, #-112]!
   12184:	str	x30, [sp, #80]
   12188:	mov	x20, x0
   1218c:	mov	x0, x4
   12190:	cbnz	x4, 121a0 <__sanitizer_cov_dump@@Base+0x1c70>
   12194:	ldr	x30, [sp, #80]
   12198:	ldp	x19, x20, [sp], #112
   1219c:	ret
   121a0:	stp	x21, x22, [sp, #16]
   121a4:	stp	x23, x24, [sp, #32]
   121a8:	mov	x22, x2
   121ac:	mov	x23, x3
   121b0:	str	x1, [x3]
   121b4:	cmp	x1, #0x1, lsl #12
   121b8:	b.hi	12234 <__sanitizer_cov_dump@@Base+0x1d04>  // b.pmore
   121bc:	lsr	x3, x1, #12
   121c0:	ubfx	x4, x1, #6, #6
   121c4:	mov	x2, #0x1                   	// #1
   121c8:	lsl	x2, x2, x4
   121cc:	ldr	x5, [x22, x3, lsl #3]
   121d0:	tst	x2, x5
   121d4:	b.ne	1225c <__sanitizer_cov_dump@@Base+0x1d2c>  // b.any
   121d8:	stp	x25, x26, [sp, #48]
   121dc:	stp	x27, x28, [sp, #64]
   121e0:	add	x2, x1, x1, lsl #6
   121e4:	add	x2, x2, #0x1
   121e8:	str	x2, [sp, #104]
   121ec:	mov	x24, #0x0                   	// #0
   121f0:	mov	x26, #0x0                   	// #0
   121f4:	mov	x27, #0x0                   	// #0
   121f8:	mov	x25, #0x0                   	// #0
   121fc:	mov	x28, #0x1                   	// #1
   12200:	add	x1, x1, x1, lsl #6
   12204:	lsl	x19, x1, #3
   12208:	sub	x21, x0, #0x1
   1220c:	cbnz	x26, 12288 <__sanitizer_cov_dump@@Base+0x1d58>
   12210:	cbnz	x25, 1221c <__sanitizer_cov_dump@@Base+0x1cec>
   12214:	ldr	x0, [x20, x19]
   12218:	cbnz	x0, 12324 <__sanitizer_cov_dump@@Base+0x1df4>
   1221c:	mov	x0, x26
   12220:	ldp	x21, x22, [sp, #16]
   12224:	ldp	x23, x24, [sp, #32]
   12228:	ldp	x25, x26, [sp, #48]
   1222c:	ldp	x27, x28, [sp, #64]
   12230:	b	12194 <__sanitizer_cov_dump@@Base+0x1c64>
   12234:	stp	x25, x26, [sp, #48]
   12238:	stp	x27, x28, [sp, #64]
   1223c:	mov	x4, #0x1000                	// #4096
   12240:	mov	x3, x1
   12244:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12248:	add	x2, x2, #0x730
   1224c:	mov	w1, #0x143                 	// #323
   12250:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12254:	add	x0, x0, #0x6f0
   12258:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1225c:	mov	x5, #0x1                   	// #1
   12260:	lsl	x5, x5, x1
   12264:	add	x2, x4, x3, lsl #6
   12268:	add	x2, x22, x2, lsl #3
   1226c:	ldr	x2, [x2, #8]
   12270:	tst	x5, x2
   12274:	b.eq	121d8 <__sanitizer_cov_dump@@Base+0x1ca8>  // b.none
   12278:	mov	x0, #0x1                   	// #1
   1227c:	ldp	x21, x22, [sp, #16]
   12280:	ldp	x23, x24, [sp, #32]
   12284:	b	12194 <__sanitizer_cov_dump@@Base+0x1c64>
   12288:	cbnz	x24, 122b0 <__sanitizer_cov_dump@@Base+0x1d80>
   1228c:	rbit	x27, x26
   12290:	clz	x27, x27
   12294:	lsl	x0, x28, x27
   12298:	bic	x26, x26, x0
   1229c:	ldr	x0, [sp, #104]
   122a0:	add	x0, x0, x25, lsl #6
   122a4:	add	x0, x0, x27
   122a8:	ldr	x24, [x20, x0, lsl #3]
   122ac:	cbz	x24, 12304 <__sanitizer_cov_dump@@Base+0x1dd4>
   122b0:	rbit	x0, x24
   122b4:	clz	x0, x0
   122b8:	lsl	x1, x28, x0
   122bc:	bic	x24, x24, x1
   122c0:	add	x1, x27, x25, lsl #6
   122c4:	orr	x2, x26, x24
   122c8:	cmp	x2, #0x0
   122cc:	cinc	x25, x25, eq  // eq = none
   122d0:	mov	x4, x21
   122d4:	add	x3, x23, #0x8
   122d8:	mov	x2, x22
   122dc:	add	x1, x0, x1, lsl #6
   122e0:	mov	x0, x20
   122e4:	bl	12180 <__sanitizer_cov_dump@@Base+0x1c50>
   122e8:	cbz	x0, 1220c <__sanitizer_cov_dump@@Base+0x1cdc>
   122ec:	add	x0, x0, #0x1
   122f0:	ldp	x21, x22, [sp, #16]
   122f4:	ldp	x23, x24, [sp, #32]
   122f8:	ldp	x25, x26, [sp, #48]
   122fc:	ldp	x27, x28, [sp, #64]
   12300:	b	12194 <__sanitizer_cov_dump@@Base+0x1c64>
   12304:	mov	x4, #0x0                   	// #0
   12308:	mov	x3, #0x0                   	// #0
   1230c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12310:	add	x2, x2, #0x9a0
   12314:	mov	w1, #0x132                 	// #306
   12318:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1231c:	add	x0, x0, #0x6f0
   12320:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12324:	mov	x26, x25
   12328:	cbnz	x24, 122b0 <__sanitizer_cov_dump@@Base+0x1d80>
   1232c:	mov	x26, x0
   12330:	mov	x25, x24
   12334:	b	1228c <__sanitizer_cov_dump@@Base+0x1d5c>
   12338:	str	x30, [sp, #-16]!
   1233c:	mov	x4, #0x0                   	// #0
   12340:	mov	x3, #0x0                   	// #0
   12344:	mov	x2, x1
   12348:	mov	x1, x0
   1234c:	mov	w0, #0x2                   	// #2
   12350:	bl	18108 <__sanitizer_set_report_fd@@Base+0x52c4>
   12354:	ldr	x30, [sp], #16
   12358:	ret
   1235c:	stp	x19, x30, [sp, #-16]!
   12360:	mov	x19, x0
   12364:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   12368:	mov	x2, x0
   1236c:	mov	x1, x19
   12370:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
   12374:	add	x0, x0, #0x4d8
   12378:	bl	18534 <__sanitizer_set_report_fd@@Base+0x56f0>
   1237c:	ldp	x19, x30, [sp], #16
   12380:	ret
   12384:	stp	x19, x20, [sp, #-32]!
   12388:	str	x30, [sp, #24]
   1238c:	mov	x19, x0
   12390:	ldr	x0, [x0]
   12394:	ldrb	w3, [x0]
   12398:	and	x3, x3, #0xff
   1239c:	cmp	x3, #0x1
   123a0:	b.ne	1246c <__sanitizer_cov_dump@@Base+0x1f3c>  // b.any
   123a4:	ldr	w0, [x19, #8]
   123a8:	sub	w0, w0, #0x1
   123ac:	cmp	w0, #0x1
   123b0:	b.ls	12460 <__sanitizer_cov_dump@@Base+0x1f30>  // b.plast
   123b4:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   123b8:	mov	x20, x0
   123bc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   123c0:	ldr	x0, [x0, #3848]
   123c4:	ldr	x0, [x0]
   123c8:	cmp	x0, x20
   123cc:	b.eq	1248c <__sanitizer_cov_dump@@Base+0x1f5c>  // b.none
   123d0:	ldr	w0, [x19, #8]
   123d4:	cmn	w0, #0x1
   123d8:	b.eq	1249c <__sanitizer_cov_dump@@Base+0x1f6c>  // b.none
   123dc:	ldr	x1, [x19, #8208]
   123e0:	cmp	x1, x20
   123e4:	b.eq	12460 <__sanitizer_cov_dump@@Base+0x1f30>  // b.none
   123e8:	str	x21, [sp, #16]
   123ec:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   123f0:	bl	f620 <__sancov_default_options@@Base+0x2924>
   123f4:	mov	x4, x0
   123f8:	cmp	x0, #0x0
   123fc:	cset	w1, ne  // ne = any
   12400:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12404:	ldr	x0, [x0, #4056]
   12408:	ldrb	w0, [x0, #48]
   1240c:	tst	w1, w0
   12410:	b.ne	124a4 <__sanitizer_cov_dump@@Base+0x1f74>  // b.any
   12414:	mov	x4, x20
   12418:	add	x3, x19, #0xc
   1241c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12420:	add	x2, x2, #0xa48
   12424:	mov	x1, #0x1000                	// #4096
   12428:	add	x0, x19, #0x1, lsl #12
   1242c:	add	x0, x0, #0xc
   12430:	bl	1a028 <OnPrint@@Base+0x4>
   12434:	add	x21, x19, #0x1, lsl #12
   12438:	add	x21, x21, #0xc
   1243c:	mov	x2, #0x0                   	// #0
   12440:	mov	w1, #0x1                   	// #1
   12444:	mov	x0, x21
   12448:	bl	18054 <__sanitizer_set_report_fd@@Base+0x5210>
   1244c:	str	w0, [x19, #8]
   12450:	cmn	w0, #0x1
   12454:	b.eq	124c8 <__sanitizer_cov_dump@@Base+0x1f98>  // b.none
   12458:	str	x20, [x19, #8208]
   1245c:	ldr	x21, [sp, #16]
   12460:	ldr	x30, [sp, #24]
   12464:	ldp	x19, x20, [sp], #32
   12468:	ret
   1246c:	str	x21, [sp, #16]
   12470:	mov	x4, #0x1                   	// #1
   12474:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12478:	add	x2, x2, #0x9c0
   1247c:	mov	w1, #0x2a                  	// #42
   12480:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12484:	add	x0, x0, #0x9f8
   12488:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1248c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12490:	ldr	x0, [x0, #3840]
   12494:	ldr	x20, [x0]
   12498:	b	123d0 <__sanitizer_cov_dump@@Base+0x1ea0>
   1249c:	str	x21, [sp, #16]
   124a0:	b	123f0 <__sanitizer_cov_dump@@Base+0x1ec0>
   124a4:	mov	x5, x20
   124a8:	add	x3, x19, #0xc
   124ac:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   124b0:	add	x2, x2, #0xa38
   124b4:	mov	x1, #0x1000                	// #4096
   124b8:	add	x0, x19, #0x1, lsl #12
   124bc:	add	x0, x0, #0xc
   124c0:	bl	1a028 <OnPrint@@Base+0x4>
   124c4:	b	12434 <__sanitizer_cov_dump@@Base+0x1f04>
   124c8:	adrp	x19, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   124cc:	add	x19, x19, #0xa50
   124d0:	mov	x0, x19
   124d4:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   124d8:	mov	x4, #0x0                   	// #0
   124dc:	mov	x3, #0x0                   	// #0
   124e0:	mov	x2, x0
   124e4:	mov	x1, x19
   124e8:	mov	w0, #0x2                   	// #2
   124ec:	bl	18108 <__sanitizer_set_report_fd@@Base+0x52c4>
   124f0:	mov	x0, x21
   124f4:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   124f8:	mov	x4, #0x0                   	// #0
   124fc:	mov	x3, #0x0                   	// #0
   12500:	mov	x2, x0
   12504:	mov	x1, x21
   12508:	mov	w0, #0x2                   	// #2
   1250c:	bl	18108 <__sanitizer_set_report_fd@@Base+0x52c4>
   12510:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12514:	cbz	x1, 12630 <__sanitizer_cov_dump@@Base+0x2100>
   12518:	sub	sp, sp, #0x30
   1251c:	stp	x19, x20, [sp, #16]
   12520:	stp	x21, x30, [sp, #32]
   12524:	mov	x19, x0
   12528:	mov	x20, x1
   1252c:	mov	x0, x1
   12530:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   12534:	cmp	x0, #0xf9c
   12538:	b.hi	125ac <__sanitizer_cov_dump@@Base+0x207c>  // b.pmore
   1253c:	ldr	x21, [x19]
   12540:	mov	w1, #0x1                   	// #1
   12544:	ldxrb	w0, [x21]
   12548:	stxrb	w2, w1, [x21]
   1254c:	cbnz	w2, 12544 <__sanitizer_cov_dump@@Base+0x2014>
   12550:	dmb	ish
   12554:	and	w0, w0, #0xff
   12558:	cbnz	w0, 125e0 <__sanitizer_cov_dump@@Base+0x20b0>
   1255c:	ldr	w0, [x19, #8]
   12560:	sub	w1, w0, #0x1
   12564:	cmp	w1, #0x1
   12568:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   1256c:	b.ne	125ec <__sanitizer_cov_dump@@Base+0x20bc>  // b.any
   12570:	mov	w0, #0xffffffff            	// #-1
   12574:	str	w0, [x19, #8]
   12578:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1257c:	add	x1, x1, #0xaa0
   12580:	mov	x0, x20
   12584:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   12588:	cbnz	w0, 125f4 <__sanitizer_cov_dump@@Base+0x20c4>
   1258c:	mov	w0, #0x1                   	// #1
   12590:	str	w0, [x19, #8]
   12594:	dmb	ish
   12598:	strb	wzr, [x21]
   1259c:	ldp	x19, x20, [sp, #16]
   125a0:	ldp	x21, x30, [sp, #32]
   125a4:	add	sp, sp, #0x30
   125a8:	ret
   125ac:	ldrb	w0, [x20, #7]
   125b0:	str	w0, [sp]
   125b4:	ldrb	w7, [x20, #6]
   125b8:	ldrb	w6, [x20, #5]
   125bc:	ldrb	w5, [x20, #4]
   125c0:	ldrb	w4, [x20, #3]
   125c4:	ldrb	w3, [x20, #2]
   125c8:	ldrb	w2, [x20, #1]
   125cc:	ldrb	w1, [x20]
   125d0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   125d4:	add	x0, x0, #0xa70
   125d8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   125dc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   125e0:	mov	x0, x21
   125e4:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   125e8:	b	1255c <__sanitizer_cov_dump@@Base+0x202c>
   125ec:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   125f0:	b	12570 <__sanitizer_cov_dump@@Base+0x2040>
   125f4:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   125f8:	add	x1, x1, #0xaa8
   125fc:	mov	x0, x20
   12600:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   12604:	cbnz	w0, 12614 <__sanitizer_cov_dump@@Base+0x20e4>
   12608:	mov	w0, #0x2                   	// #2
   1260c:	str	w0, [x19, #8]
   12610:	b	12594 <__sanitizer_cov_dump@@Base+0x2064>
   12614:	mov	x3, x20
   12618:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1261c:	add	x2, x2, #0x288
   12620:	mov	x1, #0x1000                	// #4096
   12624:	add	x0, x19, #0xc
   12628:	bl	1a028 <OnPrint@@Base+0x4>
   1262c:	b	12594 <__sanitizer_cov_dump@@Base+0x2064>
   12630:	ret
   12634:	stp	x19, x20, [sp, #-128]!
   12638:	str	x30, [sp, #80]
   1263c:	str	x0, [sp, #104]
   12640:	str	xzr, [x1]
   12644:	str	xzr, [x2]
   12648:	str	xzr, [x3]
   1264c:	mov	w19, #0x1                   	// #1
   12650:	cbz	x4, 12724 <__sanitizer_cov_dump@@Base+0x21f4>
   12654:	stp	x21, x22, [sp, #16]
   12658:	stp	x23, x24, [sp, #32]
   1265c:	stp	x25, x26, [sp, #48]
   12660:	stp	x27, x28, [sp, #64]
   12664:	mov	x23, x1
   12668:	mov	x27, x2
   1266c:	mov	x21, x3
   12670:	mov	x24, x4
   12674:	mov	x25, x5
   12678:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1267c:	ldr	x0, [x0, #4016]
   12680:	ldr	x0, [x0]
   12684:	cbz	x0, 126ac <__sanitizer_cov_dump@@Base+0x217c>
   12688:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1268c:	ldr	x0, [x0, #4016]
   12690:	ldr	x20, [x0]
   12694:	cmp	x20, x24
   12698:	csel	x20, x20, x24, ls  // ls = plast
   1269c:	adrp	x28, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   126a0:	add	x28, x28, #0xab0
   126a4:	add	x26, sp, #0x78
   126a8:	b	12748 <__sanitizer_cov_dump@@Base+0x2218>
   126ac:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   126b0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   126b4:	ldr	x1, [x1, #4016]
   126b8:	str	x0, [x1]
   126bc:	b	12688 <__sanitizer_cov_dump@@Base+0x2158>
   126c0:	ldr	x1, [x27]
   126c4:	ldr	x0, [x23]
   126c8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   126cc:	mov	w19, #0x0                   	// #0
   126d0:	ldp	x21, x22, [sp, #16]
   126d4:	ldp	x23, x24, [sp, #32]
   126d8:	ldp	x25, x26, [sp, #48]
   126dc:	ldp	x27, x28, [sp, #64]
   126e0:	b	12724 <__sanitizer_cov_dump@@Base+0x21f4>
   126e4:	ldr	x1, [x27]
   126e8:	ldr	x0, [x23]
   126ec:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   126f0:	mov	w0, w22
   126f4:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   126f8:	ldp	x21, x22, [sp, #16]
   126fc:	ldp	x23, x24, [sp, #32]
   12700:	ldp	x25, x26, [sp, #48]
   12704:	ldp	x27, x28, [sp, #64]
   12708:	b	12724 <__sanitizer_cov_dump@@Base+0x21f4>
   1270c:	mov	w0, w22
   12710:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   12714:	ldp	x21, x22, [sp, #16]
   12718:	ldp	x23, x24, [sp, #32]
   1271c:	ldp	x25, x26, [sp, #48]
   12720:	ldp	x27, x28, [sp, #64]
   12724:	mov	w0, w19
   12728:	ldr	x30, [sp, #80]
   1272c:	ldp	x19, x20, [sp], #128
   12730:	ret
   12734:	mov	w0, w22
   12738:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   1273c:	lsl	x20, x20, #1
   12740:	cmp	x20, x24
   12744:	csel	x20, x20, x24, ls  // ls = plast
   12748:	ldr	x1, [x27]
   1274c:	ldr	x0, [x23]
   12750:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   12754:	mov	w2, #0x0                   	// #0
   12758:	mov	x1, x28
   1275c:	mov	x0, x20
   12760:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   12764:	str	x0, [x23]
   12768:	str	x20, [x27]
   1276c:	mov	x2, x25
   12770:	mov	w1, #0x0                   	// #0
   12774:	ldr	x0, [sp, #104]
   12778:	bl	18054 <__sanitizer_set_report_fd@@Base+0x5210>
   1277c:	mov	w22, w0
   12780:	cmn	w0, #0x1
   12784:	b.eq	126c0 <__sanitizer_cov_dump@@Base+0x2190>  // b.none
   12788:	str	xzr, [x21]
   1278c:	cbz	x20, 12734 <__sanitizer_cov_dump@@Base+0x2204>
   12790:	mov	x1, #0x0                   	// #0
   12794:	ldr	x0, [x23]
   12798:	mov	x4, x25
   1279c:	mov	x3, x26
   127a0:	sub	x2, x20, x1
   127a4:	add	x1, x0, x1
   127a8:	mov	w0, w22
   127ac:	bl	180c4 <__sanitizer_set_report_fd@@Base+0x5280>
   127b0:	ands	w19, w0, #0xff
   127b4:	b.eq	126e4 <__sanitizer_cov_dump@@Base+0x21b4>  // b.none
   127b8:	ldr	x0, [sp, #120]
   127bc:	ldr	x1, [x21]
   127c0:	add	x1, x0, x1
   127c4:	str	x1, [x21]
   127c8:	cmp	x0, #0x0
   127cc:	cset	w19, eq  // eq = none
   127d0:	cmp	x1, x24
   127d4:	csinc	w19, w19, wzr, ne  // ne = any
   127d8:	cbnz	w19, 1270c <__sanitizer_cov_dump@@Base+0x21dc>
   127dc:	cmp	x1, x20
   127e0:	b.cc	12794 <__sanitizer_cov_dump@@Base+0x2264>  // b.lo, b.ul, b.last
   127e4:	b	12734 <__sanitizer_cov_dump@@Base+0x2204>
   127e8:	stp	x19, x20, [sp, #-144]!
   127ec:	stp	x21, x22, [sp, #16]
   127f0:	str	x30, [sp, #80]
   127f4:	str	xzr, [x1, #16]
   127f8:	cbz	x2, 12b3c <__sanitizer_cov_dump@@Base+0x260c>
   127fc:	stp	x23, x24, [sp, #32]
   12800:	stp	x25, x26, [sp, #48]
   12804:	stp	x27, x28, [sp, #64]
   12808:	mov	x20, x0
   1280c:	mov	x19, x1
   12810:	mov	x21, x2
   12814:	mov	x23, x3
   12818:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1281c:	ldr	x0, [x0, #4016]
   12820:	ldr	x0, [x0]
   12824:	cbz	x0, 12874 <__sanitizer_cov_dump@@Base+0x2344>
   12828:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1282c:	ldr	x0, [x0, #4016]
   12830:	ldr	x27, [x0]
   12834:	mov	x2, x23
   12838:	mov	w1, #0x0                   	// #0
   1283c:	mov	x0, x20
   12840:	bl	18054 <__sanitizer_set_report_fd@@Base+0x5210>
   12844:	mov	w25, w0
   12848:	cmn	w0, #0x1
   1284c:	b.eq	12b54 <__sanitizer_cov_dump@@Base+0x2624>  // b.none
   12850:	mov	x20, #0x0                   	// #0
   12854:	adrp	x28, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12858:	ldr	x0, [x28, #4016]
   1285c:	str	x0, [sp, #104]
   12860:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12864:	add	x0, x0, #0x350
   12868:	str	x0, [sp, #112]
   1286c:	add	x26, sp, #0x88
   12870:	b	1291c <__sanitizer_cov_dump@@Base+0x23ec>
   12874:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   12878:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1287c:	ldr	x1, [x1, #4016]
   12880:	str	x0, [x1]
   12884:	b	12828 <__sanitizer_cov_dump@@Base+0x22f8>
   12888:	lsl	x22, x20, #1
   1288c:	cmp	x22, x27
   12890:	csel	x22, x22, x27, cs  // cs = hs, nlast
   12894:	cmp	x22, x21
   12898:	csel	x22, x22, x21, ls  // ls = plast
   1289c:	cmp	x0, x22
   128a0:	b.cs	128c8 <__sanitizer_cov_dump@@Base+0x2398>  // b.hs, b.nlast
   128a4:	ldr	x0, [x19, #8]
   128a8:	cmp	x0, x22
   128ac:	b.cc	12930 <__sanitizer_cov_dump@@Base+0x2400>  // b.lo, b.ul, b.last
   128b0:	ldr	x0, [x19, #16]
   128b4:	ldr	x3, [x19]
   128b8:	sub	x2, x22, x0
   128bc:	mov	w1, #0x0                   	// #0
   128c0:	add	x0, x3, x0
   128c4:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   128c8:	str	x22, [x19, #16]
   128cc:	mov	x2, x22
   128d0:	cmp	x22, x20
   128d4:	b.ls	129dc <__sanitizer_cov_dump@@Base+0x24ac>  // b.plast
   128d8:	cmp	x21, x2
   128dc:	b.cc	129fc <__sanitizer_cov_dump@@Base+0x24cc>  // b.lo, b.ul, b.last
   128e0:	ldr	x1, [x19]
   128e4:	mov	x4, x23
   128e8:	mov	x3, x26
   128ec:	sub	x2, x2, x20
   128f0:	add	x1, x1, x20
   128f4:	mov	w0, w25
   128f8:	bl	180c4 <__sanitizer_set_report_fd@@Base+0x5280>
   128fc:	ands	w22, w0, #0xff
   12900:	b.eq	12a1c <__sanitizer_cov_dump@@Base+0x24ec>  // b.none
   12904:	ldr	x0, [sp, #136]
   12908:	add	x24, x0, x20
   1290c:	cbz	x0, 12a34 <__sanitizer_cov_dump@@Base+0x2504>
   12910:	cmp	x21, x24
   12914:	b.ls	12a38 <__sanitizer_cov_dump@@Base+0x2508>  // b.plast
   12918:	mov	x20, x24
   1291c:	ldr	x0, [x19, #16]
   12920:	cmp	x0, x20
   12924:	b.ls	12888 <__sanitizer_cov_dump@@Base+0x2358>  // b.plast
   12928:	ldr	x2, [x19, #16]
   1292c:	b	128d8 <__sanitizer_cov_dump@@Base+0x23a8>
   12930:	cbz	x22, 1299c <__sanitizer_cov_dump@@Base+0x246c>
   12934:	ldr	x0, [sp, #104]
   12938:	ldr	x0, [x0]
   1293c:	cbz	x0, 129bc <__sanitizer_cov_dump@@Base+0x248c>
   12940:	ldr	x0, [x28, #4016]
   12944:	ldr	x0, [x0]
   12948:	sub	x24, x0, #0x1
   1294c:	tst	x0, x24
   12950:	b.ne	129cc <__sanitizer_cov_dump@@Base+0x249c>  // b.any
   12954:	add	x24, x22, x24
   12958:	neg	x0, x0
   1295c:	and	x24, x24, x0
   12960:	mov	w2, #0x0                   	// #0
   12964:	ldr	x1, [sp, #112]
   12968:	mov	x0, x24
   1296c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   12970:	str	x0, [sp, #120]
   12974:	ldr	x2, [x19, #16]
   12978:	ldr	x1, [x19]
   1297c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   12980:	ldr	x1, [x19, #8]
   12984:	ldr	x0, [x19]
   12988:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1298c:	ldr	x0, [sp, #120]
   12990:	str	x0, [x19]
   12994:	str	x24, [x19, #8]
   12998:	b	128b0 <__sanitizer_cov_dump@@Base+0x2380>
   1299c:	mov	x4, #0x0                   	// #0
   129a0:	mov	x3, #0x0                   	// #0
   129a4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   129a8:	add	x2, x2, #0xac8
   129ac:	mov	w1, #0x1fc                 	// #508
   129b0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   129b4:	add	x0, x0, #0x380
   129b8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   129bc:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   129c0:	ldr	x1, [x28, #4016]
   129c4:	str	x0, [x1]
   129c8:	b	12940 <__sanitizer_cov_dump@@Base+0x2410>
   129cc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   129d0:	add	x0, x0, #0x338
   129d4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   129d8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   129dc:	mov	x4, x22
   129e0:	mov	x3, x20
   129e4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   129e8:	add	x2, x2, #0xae8
   129ec:	mov	w1, #0x98                  	// #152
   129f0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   129f4:	add	x0, x0, #0xb08
   129f8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   129fc:	mov	x4, x21
   12a00:	mov	x3, x2
   12a04:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12a08:	add	x2, x2, #0xb48
   12a0c:	mov	w1, #0x99                  	// #153
   12a10:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12a14:	add	x0, x0, #0xb08
   12a18:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12a1c:	mov	w0, w25
   12a20:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   12a24:	ldp	x23, x24, [sp, #32]
   12a28:	ldp	x25, x26, [sp, #48]
   12a2c:	ldp	x27, x28, [sp, #64]
   12a30:	b	12b40 <__sanitizer_cov_dump@@Base+0x2610>
   12a34:	mov	x24, x20
   12a38:	mov	w0, w25
   12a3c:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   12a40:	ldr	x0, [x19, #16]
   12a44:	cmp	x24, x0
   12a48:	b.ls	12a70 <__sanitizer_cov_dump@@Base+0x2540>  // b.plast
   12a4c:	ldr	x0, [x19, #8]
   12a50:	cmp	x24, x0
   12a54:	b.hi	12a84 <__sanitizer_cov_dump@@Base+0x2554>  // b.pmore
   12a58:	ldr	x0, [x19, #16]
   12a5c:	ldr	x3, [x19]
   12a60:	sub	x2, x24, x0
   12a64:	mov	w1, #0x0                   	// #0
   12a68:	add	x0, x3, x0
   12a6c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   12a70:	str	x24, [x19, #16]
   12a74:	ldp	x23, x24, [sp, #32]
   12a78:	ldp	x25, x26, [sp, #48]
   12a7c:	ldp	x27, x28, [sp, #64]
   12a80:	b	12b40 <__sanitizer_cov_dump@@Base+0x2610>
   12a84:	cbz	x24, 12af8 <__sanitizer_cov_dump@@Base+0x25c8>
   12a88:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12a8c:	ldr	x0, [x0, #4016]
   12a90:	ldr	x0, [x0]
   12a94:	cbz	x0, 12b18 <__sanitizer_cov_dump@@Base+0x25e8>
   12a98:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12a9c:	ldr	x0, [x0, #4016]
   12aa0:	ldr	x1, [x0]
   12aa4:	sub	x0, x1, #0x1
   12aa8:	tst	x1, x0
   12aac:	b.ne	12b2c <__sanitizer_cov_dump@@Base+0x25fc>  // b.any
   12ab0:	add	x0, x24, x0
   12ab4:	neg	x1, x1
   12ab8:	and	x20, x0, x1
   12abc:	mov	w2, #0x0                   	// #0
   12ac0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12ac4:	add	x1, x1, #0x350
   12ac8:	mov	x0, x20
   12acc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   12ad0:	mov	x21, x0
   12ad4:	ldr	x2, [x19, #16]
   12ad8:	ldr	x1, [x19]
   12adc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   12ae0:	ldr	x1, [x19, #8]
   12ae4:	ldr	x0, [x19]
   12ae8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   12aec:	str	x21, [x19]
   12af0:	str	x20, [x19, #8]
   12af4:	b	12a58 <__sanitizer_cov_dump@@Base+0x2528>
   12af8:	mov	x4, #0x0                   	// #0
   12afc:	mov	x3, #0x0                   	// #0
   12b00:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12b04:	add	x2, x2, #0xac8
   12b08:	mov	w1, #0x1fc                 	// #508
   12b0c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12b10:	add	x0, x0, #0x380
   12b14:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12b18:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   12b1c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12b20:	ldr	x1, [x1, #4016]
   12b24:	str	x0, [x1]
   12b28:	b	12a98 <__sanitizer_cov_dump@@Base+0x2568>
   12b2c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12b30:	add	x0, x0, #0x338
   12b34:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   12b38:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12b3c:	mov	w22, #0x1                   	// #1
   12b40:	mov	w0, w22
   12b44:	ldp	x21, x22, [sp, #16]
   12b48:	ldr	x30, [sp, #80]
   12b4c:	ldp	x19, x20, [sp], #144
   12b50:	ret
   12b54:	mov	w22, #0x0                   	// #0
   12b58:	ldp	x23, x24, [sp, #32]
   12b5c:	ldp	x25, x26, [sp, #48]
   12b60:	ldp	x27, x28, [sp, #64]
   12b64:	b	12b40 <__sanitizer_cov_dump@@Base+0x2610>
   12b68:	stp	x19, x20, [sp, #-96]!
   12b6c:	stp	x23, x24, [sp, #32]
   12b70:	str	x30, [sp, #80]
   12b74:	mov	x24, x0
   12b78:	bl	15724 <__sanitizer_set_report_fd@@Base+0x28e0>
   12b7c:	and	w0, w0, #0xff
   12b80:	cbz	w0, 12ba4 <__sanitizer_cov_dump@@Base+0x2674>
   12b84:	mov	x0, x24
   12b88:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   12b8c:	mov	x20, x0
   12b90:	mov	x0, x20
   12b94:	ldp	x23, x24, [sp, #32]
   12b98:	ldr	x30, [sp, #80]
   12b9c:	ldp	x19, x20, [sp], #96
   12ba0:	ret
   12ba4:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   12ba8:	add	x0, x0, #0xb68
   12bac:	bl	157e8 <__sanitizer_set_report_fd@@Base+0x29a4>
   12bb0:	mov	x20, x0
   12bb4:	cbz	x0, 12b90 <__sanitizer_cov_dump@@Base+0x2660>
   12bb8:	stp	x21, x22, [sp, #16]
   12bbc:	stp	x25, x26, [sp, #48]
   12bc0:	stp	x27, x28, [sp, #64]
   12bc4:	mov	x0, x24
   12bc8:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   12bcc:	mov	x25, x0
   12bd0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12bd4:	ldr	x0, [x0, #4016]
   12bd8:	ldr	x0, [x0]
   12bdc:	cbz	x0, 12c58 <__sanitizer_cov_dump@@Base+0x2728>
   12be0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12be4:	ldr	x0, [x0, #4016]
   12be8:	ldr	x0, [x0]
   12bec:	sub	x1, x0, #0x1
   12bf0:	tst	x1, x0
   12bf4:	b.ne	12c6c <__sanitizer_cov_dump@@Base+0x273c>  // b.any
   12bf8:	add	x27, x0, #0xfff
   12bfc:	neg	x0, x0
   12c00:	and	x27, x27, x0
   12c04:	mov	w2, #0x0                   	// #0
   12c08:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12c0c:	add	x1, x1, #0x350
   12c10:	mov	x0, x27
   12c14:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   12c18:	mov	x23, x0
   12c1c:	mov	x2, #0x0                   	// #0
   12c20:	mov	x1, #0x0                   	// #0
   12c24:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   12c28:	mov	x1, #0x0                   	// #0
   12c2c:	mov	x0, #0x0                   	// #0
   12c30:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   12c34:	cmp	x27, #0xfff
   12c38:	b.ls	12c7c <__sanitizer_cov_dump@@Base+0x274c>  // b.plast
   12c3c:	mov	x2, #0x1000                	// #4096
   12c40:	mov	w1, #0x0                   	// #0
   12c44:	mov	x0, x23
   12c48:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   12c4c:	mov	w26, #0x3a                  	// #58
   12c50:	mov	w28, #0x2f                  	// #47
   12c54:	b	12d7c <__sanitizer_cov_dump@@Base+0x284c>
   12c58:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   12c5c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12c60:	ldr	x1, [x1, #4016]
   12c64:	str	x0, [x1]
   12c68:	b	12be0 <__sanitizer_cov_dump@@Base+0x26b0>
   12c6c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12c70:	add	x0, x0, #0x338
   12c74:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   12c78:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12c7c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12c80:	ldr	x0, [x0, #4016]
   12c84:	ldr	x0, [x0]
   12c88:	cbz	x0, 12cec <__sanitizer_cov_dump@@Base+0x27bc>
   12c8c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12c90:	ldr	x0, [x0, #4016]
   12c94:	ldr	x0, [x0]
   12c98:	sub	x1, x0, #0x1
   12c9c:	tst	x1, x0
   12ca0:	b.ne	12d00 <__sanitizer_cov_dump@@Base+0x27d0>  // b.any
   12ca4:	add	x19, x0, #0xfff
   12ca8:	neg	x0, x0
   12cac:	and	x19, x19, x0
   12cb0:	mov	w2, #0x0                   	// #0
   12cb4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12cb8:	add	x1, x1, #0x350
   12cbc:	mov	x0, x19
   12cc0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   12cc4:	mov	x21, x0
   12cc8:	mov	x2, #0x0                   	// #0
   12ccc:	mov	x1, x23
   12cd0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   12cd4:	mov	x1, x27
   12cd8:	mov	x0, x23
   12cdc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   12ce0:	mov	x27, x19
   12ce4:	mov	x23, x21
   12ce8:	b	12c3c <__sanitizer_cov_dump@@Base+0x270c>
   12cec:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   12cf0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12cf4:	ldr	x1, [x1, #4016]
   12cf8:	str	x0, [x1]
   12cfc:	b	12c8c <__sanitizer_cov_dump@@Base+0x275c>
   12d00:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12d04:	add	x0, x0, #0x338
   12d08:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   12d0c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12d10:	mov	x4, #0x1000                	// #4096
   12d14:	mov	x3, x21
   12d18:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12d1c:	add	x2, x2, #0x368
   12d20:	mov	w1, #0x1b6                 	// #438
   12d24:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12d28:	add	x0, x0, #0x380
   12d2c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12d30:	mov	x4, #0x1000                	// #4096
   12d34:	mov	x3, x4
   12d38:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12d3c:	add	x2, x2, #0x368
   12d40:	mov	w1, #0x1b6                 	// #438
   12d44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12d48:	add	x0, x0, #0x380
   12d4c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12d50:	mov	x4, #0x1000                	// #4096
   12d54:	mov	x3, #0xffffffffffffffff    	// #-1
   12d58:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12d5c:	add	x2, x2, #0x368
   12d60:	mov	w1, #0x1b6                 	// #438
   12d64:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   12d68:	add	x0, x0, #0x380
   12d6c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12d70:	ldrb	w0, [x19]
   12d74:	cbz	w0, 12e08 <__sanitizer_cov_dump@@Base+0x28d8>
   12d78:	add	x20, x19, #0x1
   12d7c:	mov	w1, w26
   12d80:	mov	x0, x20
   12d84:	bl	1485c <__sanitizer_set_report_fd@@Base+0x1a18>
   12d88:	mov	x19, x0
   12d8c:	sub	x21, x0, x20
   12d90:	add	x22, x25, x21
   12d94:	add	x0, x22, #0x2
   12d98:	cmp	x0, #0x1, lsl #12
   12d9c:	b.hi	12d70 <__sanitizer_cov_dump@@Base+0x2840>  // b.pmore
   12da0:	mov	x2, x21
   12da4:	mov	x1, x20
   12da8:	mov	x0, x23
   12dac:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   12db0:	cmp	x21, #0xfff
   12db4:	b.hi	12d10 <__sanitizer_cov_dump@@Base+0x27e0>  // b.pmore
   12db8:	strb	w28, [x23, x21]
   12dbc:	add	x21, x21, #0x1
   12dc0:	cmp	x21, #0xfff
   12dc4:	b.hi	12d30 <__sanitizer_cov_dump@@Base+0x2800>  // b.pmore
   12dc8:	mov	x2, x25
   12dcc:	mov	x1, x24
   12dd0:	add	x0, x23, x21
   12dd4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   12dd8:	add	x22, x22, #0x1
   12ddc:	cmp	x22, #0xfff
   12de0:	b.hi	12d50 <__sanitizer_cov_dump@@Base+0x2820>  // b.pmore
   12de4:	strb	wzr, [x23, x22]
   12de8:	mov	x0, x23
   12dec:	bl	15724 <__sanitizer_set_report_fd@@Base+0x28e0>
   12df0:	and	w0, w0, #0xff
   12df4:	cbz	w0, 12d70 <__sanitizer_cov_dump@@Base+0x2840>
   12df8:	mov	x0, x23
   12dfc:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   12e00:	mov	x20, x0
   12e04:	b	12e0c <__sanitizer_cov_dump@@Base+0x28dc>
   12e08:	mov	x20, #0x0                   	// #0
   12e0c:	mov	x1, x27
   12e10:	mov	x0, x23
   12e14:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   12e18:	ldp	x21, x22, [sp, #16]
   12e1c:	ldp	x25, x26, [sp, #48]
   12e20:	ldp	x27, x28, [sp, #64]
   12e24:	b	12b90 <__sanitizer_cov_dump@@Base+0x2660>

0000000000012e28 <__sanitizer_set_report_path@@Base>:
   12e28:	str	x30, [sp, #-16]!
   12e2c:	mov	x1, x0
   12e30:	adrp	x0, 5c000 <_Unwind_Backtrace@GCC_3.3>
   12e34:	add	x0, x0, #0x4d8
   12e38:	bl	12514 <__sanitizer_cov_dump@@Base+0x1fe4>
   12e3c:	ldr	x30, [sp], #16
   12e40:	ret

0000000000012e44 <__sanitizer_set_report_fd@@Base>:
   12e44:	stp	x19, x30, [sp, #-16]!
   12e48:	adrp	x19, 5c000 <_Unwind_Backtrace@GCC_3.3>
   12e4c:	add	x19, x19, #0x4d8
   12e50:	str	w0, [x19, #8]
   12e54:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   12e58:	str	x0, [x19, #8208]
   12e5c:	ldp	x19, x30, [sp], #16
   12e60:	ret
   12e64:	stp	x19, x20, [sp, #-48]!
   12e68:	stp	x21, x22, [sp, #16]
   12e6c:	str	x30, [sp, #32]
   12e70:	mov	x19, x0
   12e74:	mov	x20, x1
   12e78:	mov	x21, x2
   12e7c:	mov	x22, x3
   12e80:	mov	x1, #0x10                  	// #16
   12e84:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12e88:	ldr	x0, [x0, #3776]
   12e8c:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   12e90:	mov	x2, x0
   12e94:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   12e98:	add	x0, x0, #0xd48
   12e9c:	str	x0, [x2]
   12ea0:	str	x22, [x2, #8]
   12ea4:	mov	x3, x21
   12ea8:	mov	x1, x20
   12eac:	mov	x0, x19
   12eb0:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
   12eb4:	ldp	x21, x22, [sp, #16]
   12eb8:	ldr	x30, [sp, #32]
   12ebc:	ldp	x19, x20, [sp], #48
   12ec0:	ret
   12ec4:	stp	x19, x20, [sp, #-48]!
   12ec8:	stp	x21, x22, [sp, #16]
   12ecc:	str	x30, [sp, #32]
   12ed0:	mov	x19, x0
   12ed4:	mov	x20, x1
   12ed8:	mov	x21, x2
   12edc:	mov	x22, x3
   12ee0:	mov	x1, #0x10                  	// #16
   12ee4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12ee8:	ldr	x0, [x0, #3776]
   12eec:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   12ef0:	mov	x2, x0
   12ef4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   12ef8:	add	x0, x0, #0xd60
   12efc:	str	x0, [x2]
   12f00:	str	x22, [x2, #8]
   12f04:	mov	x3, x21
   12f08:	mov	x1, x20
   12f0c:	mov	x0, x19
   12f10:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
   12f14:	ldp	x21, x22, [sp, #16]
   12f18:	ldr	x30, [sp, #32]
   12f1c:	ldp	x19, x20, [sp], #48
   12f20:	ret
   12f24:	stp	x19, x20, [sp, #-48]!
   12f28:	stp	x21, x22, [sp, #16]
   12f2c:	str	x30, [sp, #32]
   12f30:	mov	x19, x0
   12f34:	mov	x20, x1
   12f38:	mov	x21, x2
   12f3c:	mov	x22, x3
   12f40:	mov	x1, #0x10                  	// #16
   12f44:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12f48:	ldr	x0, [x0, #3776]
   12f4c:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   12f50:	mov	x2, x0
   12f54:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   12f58:	add	x0, x0, #0xdf0
   12f5c:	str	x0, [x2]
   12f60:	str	x22, [x2, #8]
   12f64:	mov	x3, x21
   12f68:	mov	x1, x20
   12f6c:	mov	x0, x19
   12f70:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
   12f74:	ldp	x21, x22, [sp, #16]
   12f78:	ldr	x30, [sp, #32]
   12f7c:	ldp	x19, x20, [sp], #48
   12f80:	ret
   12f84:	stp	x19, x20, [sp, #-48]!
   12f88:	stp	x21, x22, [sp, #16]
   12f8c:	str	x30, [sp, #32]
   12f90:	mov	x19, x0
   12f94:	mov	x20, x1
   12f98:	mov	x21, x2
   12f9c:	mov	x22, x3
   12fa0:	mov	x1, #0x10                  	// #16
   12fa4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   12fa8:	ldr	x0, [x0, #3776]
   12fac:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   12fb0:	mov	x2, x0
   12fb4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   12fb8:	add	x0, x0, #0xdd8
   12fbc:	str	x0, [x2]
   12fc0:	str	x22, [x2, #8]
   12fc4:	mov	x3, x21
   12fc8:	mov	x1, x20
   12fcc:	mov	x0, x19
   12fd0:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
   12fd4:	ldp	x21, x22, [sp, #16]
   12fd8:	ldr	x30, [sp, #32]
   12fdc:	ldp	x19, x20, [sp], #48
   12fe0:	ret
   12fe4:	stp	x19, x20, [sp, #-48]!
   12fe8:	stp	x21, x22, [sp, #16]
   12fec:	str	x30, [sp, #32]
   12ff0:	mov	x19, x0
   12ff4:	mov	x20, x1
   12ff8:	mov	x21, x2
   12ffc:	mov	x22, x3
   13000:	mov	x1, #0x10                  	// #16
   13004:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   13008:	ldr	x0, [x0, #3776]
   1300c:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   13010:	mov	x2, x0
   13014:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   13018:	add	x0, x0, #0xe08
   1301c:	str	x0, [x2]
   13020:	str	x22, [x2, #8]
   13024:	mov	x3, x21
   13028:	mov	x1, x20
   1302c:	mov	x0, x19
   13030:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
   13034:	ldp	x21, x22, [sp, #16]
   13038:	ldr	x30, [sp, #32]
   1303c:	ldp	x19, x20, [sp], #48
   13040:	ret
   13044:	mov	w1, #0x1                   	// #1
   13048:	strb	w1, [x0]
   1304c:	str	xzr, [x0, #8]
   13050:	strb	wzr, [x0, #16]
   13054:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   13058:	add	x2, x2, #0x640
   1305c:	str	x2, [x0, #24]
   13060:	strb	wzr, [x0, #32]
   13064:	strb	wzr, [x0, #33]
   13068:	strb	w1, [x0, #34]
   1306c:	strb	wzr, [x0, #35]
   13070:	mov	w2, #0x1                   	// #1
   13074:	str	w2, [x0, #36]
   13078:	adrp	x3, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1307c:	add	x3, x3, #0xaa8
   13080:	str	x3, [x0, #40]
   13084:	strb	wzr, [x0, #48]
   13088:	strb	wzr, [x0, #49]
   1308c:	str	wzr, [x0, #52]
   13090:	strb	w1, [x0, #56]
   13094:	strb	w1, [x0, #57]
   13098:	strb	w1, [x0, #58]
   1309c:	strb	wzr, [x0, #59]
   130a0:	strb	w1, [x0, #60]
   130a4:	str	wzr, [x0, #64]
   130a8:	strb	w1, [x0, #68]
   130ac:	str	w2, [x0, #72]
   130b0:	str	w2, [x0, #76]
   130b4:	str	wzr, [x0, #80]
   130b8:	str	wzr, [x0, #84]
   130bc:	str	wzr, [x0, #88]
   130c0:	str	w2, [x0, #92]
   130c4:	strb	w1, [x0, #96]
   130c8:	strb	w1, [x0, #97]
   130cc:	strb	wzr, [x0, #98]
   130d0:	mov	x3, #0x10000               	// #65536
   130d4:	str	x3, [x0, #104]
   130d8:	adrp	x3, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   130dc:	add	x3, x3, #0xc18
   130e0:	str	x3, [x0, #112]
   130e4:	strb	wzr, [x0, #120]
   130e8:	strb	wzr, [x0, #121]
   130ec:	strb	wzr, [x0, #122]
   130f0:	str	xzr, [x0, #128]
   130f4:	str	xzr, [x0, #136]
   130f8:	str	xzr, [x0, #144]
   130fc:	strb	wzr, [x0, #152]
   13100:	mov	w3, #0x1388                	// #5000
   13104:	str	w3, [x0, #156]
   13108:	strb	w1, [x0, #160]
   1310c:	strb	wzr, [x0, #161]
   13110:	adrp	x3, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   13114:	add	x3, x3, #0x268
   13118:	str	x3, [x0, #168]
   1311c:	strb	wzr, [x0, #176]
   13120:	strb	w1, [x0, #177]
   13124:	strb	w1, [x0, #178]
   13128:	strb	w1, [x0, #179]
   1312c:	strb	w1, [x0, #180]
   13130:	strb	wzr, [x0, #181]
   13134:	str	wzr, [x0, #184]
   13138:	adrp	x3, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1313c:	add	x3, x3, #0xc20
   13140:	str	x3, [x0, #192]
   13144:	strb	w1, [x0, #200]
   13148:	strb	wzr, [x0, #201]
   1314c:	strb	w1, [x0, #202]
   13150:	strb	w1, [x0, #203]
   13154:	strb	w1, [x0, #204]
   13158:	strb	w1, [x0, #205]
   1315c:	strb	w1, [x0, #206]
   13160:	strb	w1, [x0, #207]
   13164:	strb	w1, [x0, #208]
   13168:	strb	w1, [x0, #209]
   1316c:	strb	w1, [x0, #210]
   13170:	strb	w1, [x0, #211]
   13174:	strb	w1, [x0, #212]
   13178:	strb	w1, [x0, #213]
   1317c:	strb	w1, [x0, #214]
   13180:	strb	wzr, [x0, #215]
   13184:	str	w2, [x0, #216]
   13188:	strb	wzr, [x0, #220]
   1318c:	strb	w1, [x0, #221]
   13190:	strb	wzr, [x0, #222]
   13194:	strb	wzr, [x0, #223]
   13198:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1319c:	add	x2, x2, #0x530
   131a0:	str	x2, [x0, #224]
   131a4:	strb	wzr, [x0, #232]
   131a8:	strb	w1, [x0, #233]
   131ac:	strb	wzr, [x0, #234]
   131b0:	ret
   131b4:	str	x30, [sp, #-16]!
   131b8:	mov	x2, #0xf0                  	// #240
   131bc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   131c0:	ldr	x30, [sp], #16
   131c4:	ret
   131c8:	stp	x19, x20, [sp, #-96]!
   131cc:	stp	x21, x22, [sp, #16]
   131d0:	stp	x23, x24, [sp, #32]
   131d4:	str	x30, [sp, #48]
   131d8:	mov	x21, x0
   131dc:	mov	x19, x1
   131e0:	add	x23, x1, x2
   131e4:	ldrb	w0, [x0]
   131e8:	cbz	w0, 132f8 <__sanitizer_set_report_fd@@Base+0x4b4>
   131ec:	sub	x20, x23, #0x1
   131f0:	cmp	x1, x20
   131f4:	b.cs	13324 <__sanitizer_set_report_fd@@Base+0x4e0>  // b.hs, b.nlast
   131f8:	mov	w24, #0x25                  	// #37
   131fc:	mov	w22, #0x6667                	// #26215
   13200:	movk	w22, #0x6666, lsl #16
   13204:	b	13220 <__sanitizer_set_report_fd@@Base+0x3dc>
   13208:	add	x21, x21, #0x1
   1320c:	strb	w0, [x19], #1
   13210:	ldrb	w0, [x21]
   13214:	cbz	w0, 132f8 <__sanitizer_set_report_fd@@Base+0x4b4>
   13218:	cmp	x19, x20
   1321c:	b.cs	13324 <__sanitizer_set_report_fd@@Base+0x4e0>  // b.hs, b.nlast
   13220:	cmp	w0, #0x25
   13224:	b.ne	13208 <__sanitizer_set_report_fd@@Base+0x3c4>  // b.any
   13228:	ldrb	w0, [x21, #1]
   1322c:	cmp	w0, #0x62
   13230:	b.eq	13248 <__sanitizer_set_report_fd@@Base+0x404>  // b.none
   13234:	cmp	w0, #0x70
   13238:	b.eq	1329c <__sanitizer_set_report_fd@@Base+0x458>  // b.none
   1323c:	add	x21, x21, #0x1
   13240:	strb	w24, [x19], #1
   13244:	b	13210 <__sanitizer_set_report_fd@@Base+0x3cc>
   13248:	bl	f620 <__sancov_default_options@@Base+0x2924>
   1324c:	cbz	x0, 1327c <__sanitizer_set_report_fd@@Base+0x438>
   13250:	ldrb	w1, [x0]
   13254:	cmp	w1, #0x0
   13258:	ccmp	x20, x19, #0x0, ne  // ne = any
   1325c:	b.ls	13274 <__sanitizer_set_report_fd@@Base+0x430>  // b.plast
   13260:	strb	w1, [x19], #1
   13264:	ldrb	w1, [x0, #1]!
   13268:	cmp	w1, #0x0
   1326c:	ccmp	x19, x20, #0x2, ne  // ne = any
   13270:	b.cc	13260 <__sanitizer_set_report_fd@@Base+0x41c>  // b.lo, b.ul, b.last
   13274:	add	x21, x21, #0x2
   13278:	b	13210 <__sanitizer_set_report_fd@@Base+0x3cc>
   1327c:	mov	x4, #0x0                   	// #0
   13280:	mov	x3, #0x0                   	// #0
   13284:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13288:	add	x2, x2, #0xc28
   1328c:	mov	w1, #0x2e                  	// #46
   13290:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13294:	add	x0, x0, #0xc38
   13298:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1329c:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   132a0:	add	x2, sp, #0x60
   132a4:	smull	x3, w0, w22
   132a8:	asr	x3, x3, #34
   132ac:	sub	w3, w3, w0, asr #31
   132b0:	add	w1, w3, w3, lsl #2
   132b4:	sub	w1, w0, w1, lsl #1
   132b8:	add	w1, w1, #0x30
   132bc:	strb	w1, [x2, #-1]!
   132c0:	mov	w0, w3
   132c4:	cbnz	w3, 132a4 <__sanitizer_set_report_fd@@Base+0x460>
   132c8:	cmp	x20, x19
   132cc:	add	x0, sp, #0x60
   132d0:	ccmp	x0, x2, #0x0, hi  // hi = pmore
   132d4:	b.ls	132f0 <__sanitizer_set_report_fd@@Base+0x4ac>  // b.plast
   132d8:	ldrb	w0, [x2], #1
   132dc:	strb	w0, [x19], #1
   132e0:	cmp	x19, x20
   132e4:	add	x0, sp, #0x60
   132e8:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
   132ec:	b.hi	132d8 <__sanitizer_set_report_fd@@Base+0x494>  // b.pmore
   132f0:	add	x21, x21, #0x2
   132f4:	b	13210 <__sanitizer_set_report_fd@@Base+0x3cc>
   132f8:	sub	x23, x23, #0x1
   132fc:	cmp	x19, x23
   13300:	b.cs	1331c <__sanitizer_set_report_fd@@Base+0x4d8>  // b.hs, b.nlast
   13304:	strb	wzr, [x19]
   13308:	ldp	x21, x22, [sp, #16]
   1330c:	ldp	x23, x24, [sp, #32]
   13310:	ldr	x30, [sp, #48]
   13314:	ldp	x19, x20, [sp], #96
   13318:	ret
   1331c:	mov	x3, #0x0                   	// #0
   13320:	b	1332c <__sanitizer_set_report_fd@@Base+0x4e8>
   13324:	cmp	x19, x20
   13328:	cset	x3, cc  // cc = lo, ul, last
   1332c:	mov	x4, #0x0                   	// #0
   13330:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13334:	add	x2, x2, #0xc78
   13338:	mov	w1, #0x46                  	// #70
   1333c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13340:	add	x0, x0, #0xc38
   13344:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   13348:	stp	x19, x20, [sp, #-32]!
   1334c:	stp	x21, x30, [sp, #16]
   13350:	mov	x19, x0
   13354:	adrp	x21, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   13358:	ldr	x21, [x21, #3776]
   1335c:	mov	x1, #0x18                  	// #24
   13360:	mov	x0, x21
   13364:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   13368:	mov	x2, x0
   1336c:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   13370:	add	x20, x20, #0xe20
   13374:	str	x20, [x0]
   13378:	str	x19, [x0, #8]
   1337c:	strb	wzr, [x0, #16]
   13380:	adrp	x3, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13384:	add	x3, x3, #0xc98
   13388:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1338c:	add	x1, x1, #0xcc0
   13390:	mov	x0, x19
   13394:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
   13398:	mov	x1, #0x18                  	// #24
   1339c:	mov	x0, x21
   133a0:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   133a4:	mov	x2, x0
   133a8:	str	x20, [x0]
   133ac:	str	x19, [x0, #8]
   133b0:	mov	w0, #0x1                   	// #1
   133b4:	strb	w0, [x2, #16]
   133b8:	adrp	x3, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   133bc:	add	x3, x3, #0xcc8
   133c0:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   133c4:	add	x1, x1, #0xd00
   133c8:	mov	x0, x19
   133cc:	bl	14494 <__sanitizer_set_report_fd@@Base+0x1650>
   133d0:	ldp	x21, x30, [sp, #16]
   133d4:	ldp	x19, x20, [sp], #32
   133d8:	ret
   133dc:	stp	x19, x20, [sp, #-32]!
   133e0:	str	x30, [sp, #16]
   133e4:	mov	x20, x0
   133e8:	mov	x19, x1
   133ec:	mov	x3, x1
   133f0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   133f4:	add	x2, x2, #0xd18
   133f8:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   133fc:	add	x1, x1, #0x608
   13400:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13404:	add	x3, x19, #0x8
   13408:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1340c:	add	x2, x2, #0xd90
   13410:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13414:	add	x1, x1, #0xde8
   13418:	mov	x0, x20
   1341c:	bl	12ec4 <__sanitizer_set_report_fd@@Base+0x80>
   13420:	add	x3, x19, #0x10
   13424:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13428:	add	x2, x2, #0xe08
   1342c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13430:	add	x1, x1, #0xea8
   13434:	mov	x0, x20
   13438:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   1343c:	add	x3, x19, #0x18
   13440:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13444:	add	x2, x2, #0xeb8
   13448:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1344c:	add	x1, x1, #0xef0
   13450:	mov	x0, x20
   13454:	bl	12ec4 <__sanitizer_set_report_fd@@Base+0x80>
   13458:	add	x3, x19, #0x20
   1345c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13460:	add	x2, x2, #0xf08
   13464:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13468:	add	x1, x1, #0xf60
   1346c:	mov	x0, x20
   13470:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13474:	add	x3, x19, #0x21
   13478:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1347c:	add	x2, x2, #0xf78
   13480:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13484:	add	x1, x1, #0xfc8
   13488:	mov	x0, x20
   1348c:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13490:	add	x3, x19, #0x22
   13494:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13498:	add	x2, x2, #0xfe0
   1349c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   134a0:	add	x1, x1, #0x28
   134a4:	mov	x0, x20
   134a8:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   134ac:	add	x3, x19, #0x23
   134b0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   134b4:	add	x2, x2, #0x40
   134b8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   134bc:	add	x1, x1, #0x68
   134c0:	mov	x0, x20
   134c4:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   134c8:	add	x3, x19, #0x24
   134cc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   134d0:	add	x2, x2, #0x78
   134d4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   134d8:	add	x1, x1, #0xc0
   134dc:	mov	x0, x20
   134e0:	bl	12f24 <__sanitizer_set_report_fd@@Base+0xe0>
   134e4:	add	x3, x19, #0x28
   134e8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   134ec:	add	x2, x2, #0xd8
   134f0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   134f4:	add	x1, x1, #0x140
   134f8:	mov	x0, x20
   134fc:	bl	12ec4 <__sanitizer_set_report_fd@@Base+0x80>
   13500:	add	x3, x19, #0x30
   13504:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13508:	add	x2, x2, #0x150
   1350c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13510:	add	x1, x1, #0x1c8
   13514:	mov	x0, x20
   13518:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   1351c:	add	x3, x19, #0x31
   13520:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13524:	add	x2, x2, #0x1d8
   13528:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1352c:	add	x1, x1, #0x228
   13530:	mov	x0, x20
   13534:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13538:	add	x3, x19, #0x34
   1353c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13540:	add	x2, x2, #0x238
   13544:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13548:	add	x1, x1, #0x280
   1354c:	mov	x0, x20
   13550:	bl	12f24 <__sanitizer_set_report_fd@@Base+0xe0>
   13554:	add	x3, x19, #0x38
   13558:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1355c:	add	x2, x2, #0x290
   13560:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13564:	add	x1, x1, #0x300
   13568:	mov	x0, x20
   1356c:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13570:	add	x3, x19, #0x39
   13574:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13578:	add	x2, x2, #0x310
   1357c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13580:	add	x1, x1, #0x330
   13584:	mov	x0, x20
   13588:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   1358c:	add	x3, x19, #0x3a
   13590:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13594:	add	x2, x2, #0x340
   13598:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1359c:	add	x1, x1, #0x3e0
   135a0:	mov	x0, x20
   135a4:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   135a8:	add	x3, x19, #0x3b
   135ac:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   135b0:	add	x2, x2, #0x3f8
   135b4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   135b8:	add	x1, x1, #0x448
   135bc:	mov	x0, x20
   135c0:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   135c4:	add	x3, x19, #0x3c
   135c8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   135cc:	add	x2, x2, #0x468
   135d0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   135d4:	add	x1, x1, #0x4b8
   135d8:	mov	x0, x20
   135dc:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   135e0:	add	x3, x19, #0x40
   135e4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   135e8:	add	x2, x2, #0x4c8
   135ec:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   135f0:	add	x1, x1, #0x530
   135f4:	mov	x0, x20
   135f8:	bl	12f24 <__sanitizer_set_report_fd@@Base+0xe0>
   135fc:	add	x3, x19, #0x44
   13600:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13604:	add	x2, x2, #0x548
   13608:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1360c:	add	x1, x1, #0x560
   13610:	mov	x0, x20
   13614:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13618:	add	x3, x19, #0x48
   1361c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13620:	add	x2, x2, #0x570
   13624:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13628:	add	x1, x1, #0x630
   1362c:	mov	x0, x20
   13630:	bl	12f84 <__sanitizer_set_report_fd@@Base+0x140>
   13634:	add	x3, x19, #0x4c
   13638:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1363c:	add	x2, x2, #0x640
   13640:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13644:	add	x1, x1, #0x700
   13648:	mov	x0, x20
   1364c:	bl	12f84 <__sanitizer_set_report_fd@@Base+0x140>
   13650:	add	x3, x19, #0x50
   13654:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13658:	add	x2, x2, #0x710
   1365c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13660:	add	x1, x1, #0x7d0
   13664:	mov	x0, x20
   13668:	bl	12f84 <__sanitizer_set_report_fd@@Base+0x140>
   1366c:	add	x3, x19, #0x54
   13670:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13674:	add	x2, x2, #0x7e0
   13678:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1367c:	add	x1, x1, #0x8a0
   13680:	mov	x0, x20
   13684:	bl	12f84 <__sanitizer_set_report_fd@@Base+0x140>
   13688:	add	x3, x19, #0x58
   1368c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13690:	add	x2, x2, #0x8b0
   13694:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13698:	add	x1, x1, #0x970
   1369c:	mov	x0, x20
   136a0:	bl	12f84 <__sanitizer_set_report_fd@@Base+0x140>
   136a4:	add	x3, x19, #0x5c
   136a8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   136ac:	add	x2, x2, #0x980
   136b0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   136b4:	add	x1, x1, #0xa40
   136b8:	mov	x0, x20
   136bc:	bl	12f84 <__sanitizer_set_report_fd@@Base+0x140>
   136c0:	add	x3, x19, #0x60
   136c4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   136c8:	add	x2, x2, #0xa50
   136cc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   136d0:	add	x1, x1, #0xac0
   136d4:	mov	x0, x20
   136d8:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   136dc:	add	x3, x19, #0x61
   136e0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   136e4:	add	x2, x2, #0xad8
   136e8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   136ec:	add	x1, x1, #0xb10
   136f0:	mov	x0, x20
   136f4:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   136f8:	add	x3, x19, #0x62
   136fc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13700:	add	x2, x2, #0xb20
   13704:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13708:	add	x1, x1, #0xb48
   1370c:	mov	x0, x20
   13710:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13714:	add	x3, x19, #0x68
   13718:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1371c:	add	x2, x2, #0xb60
   13720:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13724:	add	x1, x1, #0xbd8
   13728:	mov	x0, x20
   1372c:	bl	12fe4 <__sanitizer_set_report_fd@@Base+0x1a0>
   13730:	add	x3, x19, #0x70
   13734:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13738:	add	x2, x2, #0xbf8
   1373c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13740:	add	x1, x1, #0xc20
   13744:	mov	x0, x20
   13748:	bl	12ec4 <__sanitizer_set_report_fd@@Base+0x80>
   1374c:	add	x3, x19, #0x78
   13750:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13754:	add	x2, x2, #0xc28
   13758:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1375c:	add	x1, x1, #0xc70
   13760:	mov	x0, x20
   13764:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13768:	add	x3, x19, #0x79
   1376c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13770:	add	x2, x2, #0xc88
   13774:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13778:	add	x1, x1, #0xca8
   1377c:	mov	x0, x20
   13780:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13784:	add	x3, x19, #0x7a
   13788:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   1378c:	add	x2, x2, #0xcc0
   13790:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   13794:	add	x1, x1, #0x630
   13798:	mov	x0, x20
   1379c:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   137a0:	add	x3, x19, #0x80
   137a4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   137a8:	add	x2, x2, #0xce0
   137ac:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   137b0:	add	x1, x1, #0xd58
   137b4:	mov	x0, x20
   137b8:	bl	12fe4 <__sanitizer_set_report_fd@@Base+0x1a0>
   137bc:	add	x3, x19, #0x88
   137c0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   137c4:	add	x2, x2, #0xd68
   137c8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   137cc:	add	x1, x1, #0xe08
   137d0:	mov	x0, x20
   137d4:	bl	12fe4 <__sanitizer_set_report_fd@@Base+0x1a0>
   137d8:	add	x3, x19, #0x90
   137dc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   137e0:	add	x2, x2, #0xe20
   137e4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   137e8:	add	x1, x1, #0xf80
   137ec:	mov	x0, x20
   137f0:	bl	12fe4 <__sanitizer_set_report_fd@@Base+0x1a0>
   137f4:	add	x3, x19, #0x98
   137f8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   137fc:	add	x2, x2, #0xf98
   13800:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13804:	add	x1, x1, #0xfc0
   13808:	mov	x0, x20
   1380c:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13810:	add	x3, x19, #0x9c
   13814:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   13818:	add	x2, x2, #0xfd0
   1381c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13820:	add	x1, x1, #0xa0
   13824:	mov	x0, x20
   13828:	bl	12f24 <__sanitizer_set_report_fd@@Base+0xe0>
   1382c:	add	x3, x19, #0xa0
   13830:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13834:	add	x2, x2, #0xc8
   13838:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   1383c:	add	x1, x1, #0x128
   13840:	mov	x0, x20
   13844:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13848:	add	x3, x19, #0xa1
   1384c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13850:	add	x2, x2, #0x140
   13854:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13858:	add	x1, x1, #0x1c0
   1385c:	mov	x0, x20
   13860:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13864:	add	x3, x19, #0xa8
   13868:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   1386c:	add	x2, x2, #0x1d0
   13870:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13874:	add	x1, x1, #0x218
   13878:	mov	x0, x20
   1387c:	bl	12ec4 <__sanitizer_set_report_fd@@Base+0x80>
   13880:	add	x3, x19, #0xb0
   13884:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13888:	add	x2, x2, #0x228
   1388c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13890:	add	x1, x1, #0x290
   13894:	mov	x0, x20
   13898:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   1389c:	add	x3, x19, #0xb1
   138a0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   138a4:	add	x2, x2, #0x2a8
   138a8:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   138ac:	add	x1, x1, #0x2d0
   138b0:	mov	x0, x20
   138b4:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   138b8:	add	x3, x19, #0xb2
   138bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   138c0:	add	x2, x2, #0x2e8
   138c4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   138c8:	add	x1, x1, #0x3b8
   138cc:	mov	x0, x20
   138d0:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   138d4:	add	x3, x19, #0xb3
   138d8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   138dc:	add	x2, x2, #0x3d0
   138e0:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   138e4:	add	x1, x1, #0x418
   138e8:	mov	x0, x20
   138ec:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   138f0:	add	x3, x19, #0xb4
   138f4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   138f8:	add	x2, x2, #0x430
   138fc:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13900:	add	x1, x1, #0x468
   13904:	mov	x0, x20
   13908:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   1390c:	add	x3, x19, #0xb5
   13910:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13914:	add	x2, x2, #0x480
   13918:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   1391c:	add	x1, x1, #0x4c8
   13920:	mov	x0, x20
   13924:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13928:	add	x3, x19, #0xb8
   1392c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13930:	add	x2, x2, #0x4e0
   13934:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13938:	add	x1, x1, #0x5b0
   1393c:	mov	x0, x20
   13940:	bl	12f24 <__sanitizer_set_report_fd@@Base+0xe0>
   13944:	add	x3, x19, #0xc0
   13948:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   1394c:	add	x2, x2, #0x5c8
   13950:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13954:	add	x1, x1, #0x658
   13958:	mov	x0, x20
   1395c:	bl	12ec4 <__sanitizer_set_report_fd@@Base+0x80>
   13960:	add	x3, x19, #0xc8
   13964:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13968:	add	x2, x2, #0x670
   1396c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13970:	add	x1, x1, #0x6a8
   13974:	mov	x0, x20
   13978:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   1397c:	add	x3, x19, #0xc9
   13980:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13984:	add	x2, x2, #0x6c8
   13988:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   1398c:	add	x1, x1, #0x708
   13990:	mov	x0, x20
   13994:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13998:	add	x3, x19, #0xca
   1399c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139a0:	add	x2, x2, #0x720
   139a4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139a8:	add	x1, x1, #0x778
   139ac:	mov	x0, x20
   139b0:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   139b4:	add	x3, x19, #0xcb
   139b8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139bc:	add	x2, x2, #0x790
   139c0:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139c4:	add	x1, x1, #0x7e8
   139c8:	mov	x0, x20
   139cc:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   139d0:	add	x3, x19, #0xcc
   139d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139d8:	add	x2, x2, #0x800
   139dc:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139e0:	add	x1, x1, #0x850
   139e4:	mov	x0, x20
   139e8:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   139ec:	add	x3, x19, #0xcd
   139f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139f4:	add	x2, x2, #0x868
   139f8:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   139fc:	add	x1, x1, #0x8b0
   13a00:	mov	x0, x20
   13a04:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13a08:	add	x3, x19, #0xce
   13a0c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a10:	add	x2, x2, #0x8c8
   13a14:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a18:	add	x1, x1, #0x920
   13a1c:	mov	x0, x20
   13a20:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13a24:	add	x3, x19, #0xcf
   13a28:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a2c:	add	x2, x2, #0x938
   13a30:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a34:	add	x1, x1, #0x980
   13a38:	mov	x0, x20
   13a3c:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13a40:	add	x3, x19, #0xd0
   13a44:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a48:	add	x2, x2, #0x998
   13a4c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a50:	add	x1, x1, #0x9f8
   13a54:	mov	x0, x20
   13a58:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13a5c:	add	x3, x19, #0xd1
   13a60:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a64:	add	x2, x2, #0xa10
   13a68:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a6c:	add	x1, x1, #0xa58
   13a70:	mov	x0, x20
   13a74:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13a78:	add	x3, x19, #0xd2
   13a7c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a80:	add	x2, x2, #0xa70
   13a84:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a88:	add	x1, x1, #0xac8
   13a8c:	mov	x0, x20
   13a90:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13a94:	add	x3, x19, #0xd3
   13a98:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13a9c:	add	x2, x2, #0xad8
   13aa0:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13aa4:	add	x1, x1, #0xb18
   13aa8:	mov	x0, x20
   13aac:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13ab0:	add	x3, x19, #0xd4
   13ab4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13ab8:	add	x2, x2, #0xb30
   13abc:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13ac0:	add	x1, x1, #0xb88
   13ac4:	mov	x0, x20
   13ac8:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13acc:	add	x3, x19, #0xd5
   13ad0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13ad4:	add	x2, x2, #0xba0
   13ad8:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13adc:	add	x1, x1, #0xbe8
   13ae0:	mov	x0, x20
   13ae4:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13ae8:	add	x3, x19, #0xd6
   13aec:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13af0:	add	x2, x2, #0xbf8
   13af4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13af8:	add	x1, x1, #0xc40
   13afc:	mov	x0, x20
   13b00:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13b04:	add	x3, x19, #0xd7
   13b08:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b0c:	add	x2, x2, #0xc50
   13b10:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b14:	add	x1, x1, #0xca0
   13b18:	mov	x0, x20
   13b1c:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13b20:	add	x3, x19, #0xd8
   13b24:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b28:	add	x2, x2, #0xcb8
   13b2c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b30:	add	x1, x1, #0xcf8
   13b34:	mov	x0, x20
   13b38:	bl	12f24 <__sanitizer_set_report_fd@@Base+0xe0>
   13b3c:	add	x3, x19, #0xdc
   13b40:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b44:	add	x2, x2, #0xd08
   13b48:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b4c:	add	x1, x1, #0xd60
   13b50:	mov	x0, x20
   13b54:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13b58:	add	x3, x19, #0xdd
   13b5c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b60:	add	x2, x2, #0xd70
   13b64:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b68:	add	x1, x1, #0xdd8
   13b6c:	mov	x0, x20
   13b70:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13b74:	add	x3, x19, #0xde
   13b78:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b7c:	add	x2, x2, #0xdf0
   13b80:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b84:	add	x1, x1, #0xe20
   13b88:	mov	x0, x20
   13b8c:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13b90:	add	x3, x19, #0xdf
   13b94:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13b98:	add	x2, x2, #0xe30
   13b9c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13ba0:	add	x1, x1, #0xe50
   13ba4:	mov	x0, x20
   13ba8:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13bac:	add	x3, x19, #0xe0
   13bb0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13bb4:	add	x2, x2, #0xe60
   13bb8:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13bbc:	add	x1, x1, #0xe78
   13bc0:	mov	x0, x20
   13bc4:	bl	12ec4 <__sanitizer_set_report_fd@@Base+0x80>
   13bc8:	add	x3, x19, #0xe8
   13bcc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13bd0:	add	x2, x2, #0xe88
   13bd4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13bd8:	add	x1, x1, #0xed0
   13bdc:	mov	x0, x20
   13be0:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13be4:	add	x3, x19, #0xe9
   13be8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13bec:	add	x2, x2, #0xee8
   13bf0:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13bf4:	add	x1, x1, #0xf48
   13bf8:	mov	x0, x20
   13bfc:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13c00:	add	x3, x19, #0xea
   13c04:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13c08:	add	x2, x2, #0xf58
   13c0c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13c10:	add	x1, x1, #0xfb0
   13c14:	mov	x0, x20
   13c18:	bl	12e64 <__sanitizer_set_report_fd@@Base+0x20>
   13c1c:	mov	x1, x19
   13c20:	mov	x0, x20
   13c24:	bl	13348 <__sanitizer_set_report_fd@@Base+0x504>
   13c28:	ldr	x30, [sp, #16]
   13c2c:	ldp	x19, x20, [sp], #32
   13c30:	ret
   13c34:	ldrb	w1, [x0, #161]
   13c38:	ldrb	w2, [x0, #223]
   13c3c:	orr	w1, w1, w2
   13c40:	strb	w1, [x0, #161]
   13c44:	ldr	w1, [x0, #52]
   13c48:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   13c4c:	ldr	x0, [x0, #3896]
   13c50:	str	w1, [x0]
   13c54:	ret
   13c58:	stp	x19, x20, [sp, #-32]!
   13c5c:	str	x30, [sp, #16]
   13c60:	mov	x20, x0
   13c64:	mov	x19, x1
   13c68:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   13c6c:	add	x1, x1, #0x568
   13c70:	mov	x0, x19
   13c74:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13c78:	mov	w1, #0x0                   	// #0
   13c7c:	cbnz	w0, 13c98 <__sanitizer_set_report_fd@@Base+0xe54>
   13c80:	ldr	x0, [x20, #8]
   13c84:	str	w1, [x0]
   13c88:	mov	w0, #0x1                   	// #1
   13c8c:	ldr	x30, [sp, #16]
   13c90:	ldp	x19, x20, [sp], #32
   13c94:	ret
   13c98:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   13c9c:	add	x1, x1, #0x570
   13ca0:	mov	x0, x19
   13ca4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13ca8:	mov	w1, #0x0                   	// #0
   13cac:	cbz	w0, 13c80 <__sanitizer_set_report_fd@@Base+0xe3c>
   13cb0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   13cb4:	add	x1, x1, #0x578
   13cb8:	mov	x0, x19
   13cbc:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13cc0:	mov	w1, #0x0                   	// #0
   13cc4:	cbz	w0, 13c80 <__sanitizer_set_report_fd@@Base+0xe3c>
   13cc8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   13ccc:	add	x1, x1, #0xdc0
   13cd0:	mov	x0, x19
   13cd4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13cd8:	mov	w1, #0x1                   	// #1
   13cdc:	cbz	w0, 13c80 <__sanitizer_set_report_fd@@Base+0xe3c>
   13ce0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   13ce4:	add	x1, x1, #0x580
   13ce8:	mov	x0, x19
   13cec:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13cf0:	mov	w1, #0x1                   	// #1
   13cf4:	cbz	w0, 13c80 <__sanitizer_set_report_fd@@Base+0xe3c>
   13cf8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   13cfc:	add	x1, x1, #0x588
   13d00:	mov	x0, x19
   13d04:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13d08:	cbz	w0, 13d60 <__sanitizer_set_report_fd@@Base+0xf1c>
   13d0c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   13d10:	add	x1, x1, #0xb48
   13d14:	mov	x0, x19
   13d18:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13d1c:	cbnz	w0, 13d34 <__sanitizer_set_report_fd@@Base+0xef0>
   13d20:	ldr	x0, [x20, #8]
   13d24:	mov	w1, #0x2                   	// #2
   13d28:	str	w1, [x0]
   13d2c:	mov	w0, #0x1                   	// #1
   13d30:	b	13c8c <__sanitizer_set_report_fd@@Base+0xe48>
   13d34:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13d38:	add	x1, x1, #0xb70
   13d3c:	mov	x0, x19
   13d40:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   13d44:	cbz	w0, 13d20 <__sanitizer_set_report_fd@@Base+0xedc>
   13d48:	mov	x1, x19
   13d4c:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13d50:	add	x0, x0, #0xb80
   13d54:	bl	1a368 <OnPrint@@Base+0x344>
   13d58:	mov	w0, #0x0                   	// #0
   13d5c:	b	13c8c <__sanitizer_set_report_fd@@Base+0xe48>
   13d60:	mov	w1, #0x1                   	// #1
   13d64:	b	13c80 <__sanitizer_set_report_fd@@Base+0xe3c>
   13d68:	stp	x19, x20, [sp, #-48]!
   13d6c:	str	x30, [sp, #16]
   13d70:	mov	x20, x0
   13d74:	mov	x19, x1
   13d78:	mov	w2, #0xa                   	// #10
   13d7c:	add	x1, sp, #0x28
   13d80:	mov	x0, x19
   13d84:	bl	14ae0 <__sanitizer_set_report_fd@@Base+0x1c9c>
   13d88:	ldr	x1, [x20, #8]
   13d8c:	str	x0, [x1]
   13d90:	ldr	x0, [sp, #40]
   13d94:	ldrb	w0, [x0]
   13d98:	cmp	w0, #0x0
   13d9c:	cset	w20, eq  // eq = none
   13da0:	cbnz	w0, 13db4 <__sanitizer_set_report_fd@@Base+0xf70>
   13da4:	mov	w0, w20
   13da8:	ldr	x30, [sp, #16]
   13dac:	ldp	x19, x20, [sp], #48
   13db0:	ret
   13db4:	mov	x1, x19
   13db8:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13dbc:	add	x0, x0, #0xbb8
   13dc0:	bl	1a368 <OnPrint@@Base+0x344>
   13dc4:	b	13da4 <__sanitizer_set_report_fd@@Base+0xf60>
   13dc8:	stp	x19, x20, [sp, #-48]!
   13dcc:	str	x30, [sp, #16]
   13dd0:	mov	x20, x0
   13dd4:	mov	x19, x1
   13dd8:	mov	w2, #0xa                   	// #10
   13ddc:	add	x1, sp, #0x28
   13de0:	mov	x0, x19
   13de4:	bl	14ae0 <__sanitizer_set_report_fd@@Base+0x1c9c>
   13de8:	ldr	x1, [x20, #8]
   13dec:	str	w0, [x1]
   13df0:	ldr	x0, [sp, #40]
   13df4:	ldrb	w0, [x0]
   13df8:	cmp	w0, #0x0
   13dfc:	cset	w20, eq  // eq = none
   13e00:	cbnz	w0, 13e14 <__sanitizer_set_report_fd@@Base+0xfd0>
   13e04:	mov	w0, w20
   13e08:	ldr	x30, [sp, #16]
   13e0c:	ldp	x19, x20, [sp], #48
   13e10:	ret
   13e14:	mov	x1, x19
   13e18:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   13e1c:	add	x0, x0, #0xbe8
   13e20:	bl	1a368 <OnPrint@@Base+0x344>
   13e24:	b	13e04 <__sanitizer_set_report_fd@@Base+0xfc0>
   13e28:	stp	x19, x20, [sp, #-32]!
   13e2c:	str	x30, [sp, #24]
   13e30:	mov	x20, x0
   13e34:	mov	x19, x1
   13e38:	mov	w1, #0x25                  	// #37
   13e3c:	mov	x0, x19
   13e40:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1904>
   13e44:	cbz	x0, 13ea8 <__sanitizer_set_report_fd@@Base+0x1064>
   13e48:	str	x21, [sp, #16]
   13e4c:	mov	w2, #0x0                   	// #0
   13e50:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13e54:	add	x1, x1, #0xfc8
   13e58:	mov	x0, #0x1000                	// #4096
   13e5c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   13e60:	mov	x21, x0
   13e64:	mov	x2, #0x1000                	// #4096
   13e68:	mov	x1, x0
   13e6c:	mov	x0, x19
   13e70:	bl	131c8 <__sanitizer_set_report_fd@@Base+0x384>
   13e74:	ldrb	w2, [x20, #16]
   13e78:	mov	x1, x21
   13e7c:	ldr	x0, [x20, #8]
   13e80:	bl	143d0 <__sanitizer_set_report_fd@@Base+0x158c>
   13e84:	and	w19, w0, #0xff
   13e88:	mov	x1, #0x1000                	// #4096
   13e8c:	mov	x0, x21
   13e90:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   13e94:	ldr	x21, [sp, #16]
   13e98:	mov	w0, w19
   13e9c:	ldr	x30, [sp, #24]
   13ea0:	ldp	x19, x20, [sp], #32
   13ea4:	ret
   13ea8:	ldrb	w2, [x20, #16]
   13eac:	mov	x1, x19
   13eb0:	ldr	x0, [x20, #8]
   13eb4:	bl	143d0 <__sanitizer_set_report_fd@@Base+0x158c>
   13eb8:	and	w19, w0, #0xff
   13ebc:	b	13e98 <__sanitizer_set_report_fd@@Base+0x1054>
   13ec0:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13ec4:	ldr	w1, [x0, #3552]
   13ec8:	cbnz	w1, 13ed0 <__sanitizer_set_report_fd@@Base+0x108c>
   13ecc:	ret
   13ed0:	stp	x19, x20, [sp, #-32]!
   13ed4:	str	x30, [sp, #24]
   13ed8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   13edc:	add	x0, x0, #0xfe0
   13ee0:	bl	1a368 <OnPrint@@Base+0x344>
   13ee4:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13ee8:	ldr	w0, [x0, #3552]
   13eec:	cmp	w0, #0x0
   13ef0:	b.le	13f2c <__sanitizer_set_report_fd@@Base+0x10e8>
   13ef4:	str	x21, [sp, #16]
   13ef8:	mov	x19, #0x0                   	// #0
   13efc:	adrp	x20, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13f00:	add	x20, x20, #0xd40
   13f04:	adrp	x21, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   13f08:	add	x21, x21, #0x10
   13f0c:	ldr	x1, [x20, x19, lsl #3]
   13f10:	mov	x0, x21
   13f14:	bl	1a368 <OnPrint@@Base+0x344>
   13f18:	add	x19, x19, #0x1
   13f1c:	ldr	w0, [x20, #160]
   13f20:	cmp	w0, w19
   13f24:	b.gt	13f0c <__sanitizer_set_report_fd@@Base+0x10c8>
   13f28:	ldr	x21, [sp, #16]
   13f2c:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13f30:	str	wzr, [x0, #3552]
   13f34:	ldr	x30, [sp, #24]
   13f38:	ldp	x19, x20, [sp], #32
   13f3c:	ret
   13f40:	stp	x19, x20, [sp, #-32]!
   13f44:	stp	x21, x30, [sp, #16]
   13f48:	mov	x21, x1
   13f4c:	mov	x1, x2
   13f50:	mov	x0, x21
   13f54:	bl	149a0 <__sanitizer_set_report_fd@@Base+0x1b5c>
   13f58:	mov	x19, x0
   13f5c:	add	x1, x0, #0x1
   13f60:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13f64:	add	x0, x0, #0xd40
   13f68:	add	x0, x0, #0xa8
   13f6c:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   13f70:	mov	x20, x0
   13f74:	mov	x2, x19
   13f78:	mov	x1, x21
   13f7c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   13f80:	strb	wzr, [x20, x19]
   13f84:	mov	x0, x20
   13f88:	ldp	x21, x30, [sp, #16]
   13f8c:	ldp	x19, x20, [sp], #32
   13f90:	ret
   13f94:	stp	x19, x20, [sp, #-48]!
   13f98:	stp	x21, x22, [sp, #16]
   13f9c:	str	x30, [sp, #32]
   13fa0:	mov	x21, x0
   13fa4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   13fa8:	ldr	x0, [x0, #4024]
   13fac:	ldr	x1, [x0]
   13fb0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   13fb4:	add	x0, x0, #0x18
   13fb8:	bl	1a368 <OnPrint@@Base+0x344>
   13fbc:	ldr	w0, [x21, #8]
   13fc0:	cmp	w0, #0x0
   13fc4:	b.le	14004 <__sanitizer_set_report_fd@@Base+0x11c0>
   13fc8:	mov	x19, #0x0                   	// #0
   13fcc:	mov	w20, #0x0                   	// #0
   13fd0:	adrp	x22, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   13fd4:	add	x22, x22, #0x38
   13fd8:	ldr	x1, [x21]
   13fdc:	add	x0, x1, x19
   13fe0:	ldr	x2, [x0, #8]
   13fe4:	ldr	x1, [x1, x19]
   13fe8:	mov	x0, x22
   13fec:	bl	1a368 <OnPrint@@Base+0x344>
   13ff0:	add	w20, w20, #0x1
   13ff4:	add	x19, x19, #0x18
   13ff8:	ldr	w0, [x21, #8]
   13ffc:	cmp	w0, w20
   14000:	b.gt	13fd8 <__sanitizer_set_report_fd@@Base+0x1194>
   14004:	ldp	x21, x22, [sp, #16]
   14008:	ldr	x30, [sp, #32]
   1400c:	ldp	x19, x20, [sp], #48
   14010:	ret
   14014:	str	x30, [sp, #-16]!
   14018:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1401c:	add	x0, x0, #0x48
   14020:	bl	1a368 <OnPrint@@Base+0x344>
   14024:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   14028:	and	w1, w1, #0xff
   1402c:	cmp	w1, #0x20
   14030:	cset	w0, eq  // eq = none
   14034:	cmp	w1, #0x2c
   14038:	csinc	w0, w0, wzr, ne  // ne = any
   1403c:	cbnz	w0, 14064 <__sanitizer_set_report_fd@@Base+0x1220>
   14040:	cmp	w1, #0x3a
   14044:	cset	w0, eq  // eq = none
   14048:	cmp	w1, #0xa
   1404c:	csinc	w0, w0, wzr, ne  // ne = any
   14050:	cbnz	w0, 14064 <__sanitizer_set_report_fd@@Base+0x1220>
   14054:	and	w1, w1, #0xfffffffb
   14058:	and	w1, w1, #0xff
   1405c:	cmp	w1, #0x9
   14060:	cset	w0, eq  // eq = none
   14064:	ret
   14068:	stp	x19, x20, [sp, #-32]!
   1406c:	stp	x21, x30, [sp, #16]
   14070:	mov	x20, x0
   14074:	ldr	x21, [x0, #16]
   14078:	ldr	x19, [x20, #24]
   1407c:	ldrb	w1, [x21, x19]
   14080:	mov	x0, x20
   14084:	bl	14028 <__sanitizer_set_report_fd@@Base+0x11e4>
   14088:	and	w0, w0, #0xff
   1408c:	cbz	w0, 1409c <__sanitizer_set_report_fd@@Base+0x1258>
   14090:	add	x19, x19, #0x1
   14094:	str	x19, [x20, #24]
   14098:	b	14078 <__sanitizer_set_report_fd@@Base+0x1234>
   1409c:	ldp	x21, x30, [sp, #16]
   140a0:	ldp	x19, x20, [sp], #32
   140a4:	ret
   140a8:	stp	x19, x20, [sp, #-48]!
   140ac:	stp	x21, x22, [sp, #16]
   140b0:	str	x30, [sp, #40]
   140b4:	mov	x21, x0
   140b8:	mov	x22, x1
   140bc:	ldr	w0, [x0, #8]
   140c0:	cmp	w0, #0x0
   140c4:	b.le	14104 <__sanitizer_set_report_fd@@Base+0x12c0>
   140c8:	str	x23, [sp, #32]
   140cc:	mov	x23, x2
   140d0:	mov	x19, #0x0                   	// #0
   140d4:	mov	w20, #0x0                   	// #0
   140d8:	ldr	x0, [x21]
   140dc:	ldr	x1, [x0, x19]
   140e0:	mov	x0, x22
   140e4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   140e8:	cbz	w0, 14134 <__sanitizer_set_report_fd@@Base+0x12f0>
   140ec:	add	w20, w20, #0x1
   140f0:	add	x19, x19, #0x18
   140f4:	ldr	w0, [x21, #8]
   140f8:	cmp	w0, w20
   140fc:	b.gt	140d8 <__sanitizer_set_report_fd@@Base+0x1294>
   14100:	ldr	x23, [sp, #32]
   14104:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14108:	ldr	w1, [x0, #3552]
   1410c:	sxtw	x3, w1
   14110:	cmp	x3, #0x13
   14114:	b.hi	14168 <__sanitizer_set_report_fd@@Base+0x1324>  // b.pmore
   14118:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1411c:	add	x0, x0, #0xd40
   14120:	add	w2, w1, #0x1
   14124:	str	w2, [x0, #160]
   14128:	str	x22, [x0, w1, sxtw #3]
   1412c:	mov	w0, #0x1                   	// #1
   14130:	b	14158 <__sanitizer_set_report_fd@@Base+0x1314>
   14134:	ldr	x0, [x21]
   14138:	add	x19, x0, x19
   1413c:	ldr	x0, [x19, #16]
   14140:	ldr	x1, [x0]
   14144:	ldr	x2, [x1]
   14148:	mov	x1, x23
   1414c:	blr	x2
   14150:	and	w0, w0, #0xff
   14154:	ldr	x23, [sp, #32]
   14158:	ldp	x21, x22, [sp, #16]
   1415c:	ldr	x30, [sp, #40]
   14160:	ldp	x19, x20, [sp], #48
   14164:	ret
   14168:	str	x23, [sp, #32]
   1416c:	mov	x4, #0x14                  	// #20
   14170:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14174:	add	x2, x2, #0x58
   14178:	mov	w1, #0x1e                  	// #30
   1417c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14180:	add	x0, x0, #0x88
   14184:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14188:	stp	x19, x20, [sp, #-64]!
   1418c:	stp	x21, x22, [sp, #16]
   14190:	stp	x23, x24, [sp, #32]
   14194:	str	x30, [sp, #48]
   14198:	mov	x19, x0
   1419c:	ldr	x23, [x0, #24]
   141a0:	ldr	x22, [x0, #16]
   141a4:	add	x24, x22, x23
   141a8:	ldrb	w20, [x22, x23]
   141ac:	cmp	w20, #0x3d
   141b0:	ccmp	w20, #0x0, #0x4, ne  // ne = any
   141b4:	b.eq	14294 <__sanitizer_set_report_fd@@Base+0x1450>  // b.none
   141b8:	mov	x21, x23
   141bc:	mov	w1, w20
   141c0:	mov	x0, x19
   141c4:	bl	14028 <__sanitizer_set_report_fd@@Base+0x11e4>
   141c8:	and	w0, w0, #0xff
   141cc:	cbnz	w0, 141e8 <__sanitizer_set_report_fd@@Base+0x13a4>
   141d0:	add	x21, x21, #0x1
   141d4:	str	x21, [x19, #24]
   141d8:	ldrb	w20, [x22, x21]
   141dc:	cmp	w20, #0x3d
   141e0:	ccmp	w20, #0x0, #0x4, ne  // ne = any
   141e4:	b.ne	141bc <__sanitizer_set_report_fd@@Base+0x1378>  // b.any
   141e8:	cmp	w20, #0x3d
   141ec:	b.ne	1429c <__sanitizer_set_report_fd@@Base+0x1458>  // b.any
   141f0:	sub	x2, x21, x23
   141f4:	mov	x1, x24
   141f8:	mov	x0, x19
   141fc:	bl	13f40 <__sanitizer_set_report_fd@@Base+0x10fc>
   14200:	mov	x23, x0
   14204:	ldr	x3, [x19, #24]
   14208:	add	x22, x3, #0x1
   1420c:	str	x22, [x19, #24]
   14210:	ldr	x21, [x19, #16]
   14214:	add	x24, x21, x22
   14218:	ldrb	w1, [x21, x22]
   1421c:	cmp	w1, #0x27
   14220:	mov	w0, #0x22                  	// #34
   14224:	ccmp	w1, w0, #0x4, ne  // ne = any
   14228:	b.ne	142bc <__sanitizer_set_report_fd@@Base+0x1478>  // b.any
   1422c:	add	x4, x3, #0x2
   14230:	str	x4, [x19, #24]
   14234:	ldrb	w2, [x21, x22]
   14238:	add	x1, x21, x4
   1423c:	ldrb	w0, [x21, x4]
   14240:	cmp	w0, #0x0
   14244:	ccmp	w2, w0, #0x4, ne  // ne = any
   14248:	b.eq	1426c <__sanitizer_set_report_fd@@Base+0x1428>  // b.none
   1424c:	add	x3, x3, #0x3
   14250:	str	x3, [x19, #24]
   14254:	ldrb	w0, [x21, x3]
   14258:	mov	x4, x3
   1425c:	add	x3, x3, #0x1
   14260:	cmp	w0, #0x0
   14264:	ccmp	w0, w2, #0x4, ne  // ne = any
   14268:	b.ne	14250 <__sanitizer_set_report_fd@@Base+0x140c>  // b.any
   1426c:	cbz	w0, 142ac <__sanitizer_set_report_fd@@Base+0x1468>
   14270:	mvn	x2, x22
   14274:	add	x2, x2, x4
   14278:	mov	x0, x19
   1427c:	bl	13f40 <__sanitizer_set_report_fd@@Base+0x10fc>
   14280:	mov	x2, x0
   14284:	ldr	x0, [x19, #24]
   14288:	add	x0, x0, #0x1
   1428c:	str	x0, [x19, #24]
   14290:	b	142f8 <__sanitizer_set_report_fd@@Base+0x14b4>
   14294:	mov	x21, x23
   14298:	b	141e8 <__sanitizer_set_report_fd@@Base+0x13a4>
   1429c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   142a0:	add	x1, x1, #0xd0
   142a4:	mov	x0, x19
   142a8:	bl	14014 <__sanitizer_set_report_fd@@Base+0x11d0>
   142ac:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   142b0:	add	x1, x1, #0xe0
   142b4:	mov	x0, x19
   142b8:	bl	14014 <__sanitizer_set_report_fd@@Base+0x11d0>
   142bc:	cbz	w1, 14330 <__sanitizer_set_report_fd@@Base+0x14ec>
   142c0:	mov	x20, x22
   142c4:	mov	x0, x19
   142c8:	bl	14028 <__sanitizer_set_report_fd@@Base+0x11e4>
   142cc:	and	w0, w0, #0xff
   142d0:	cbnz	w0, 142e4 <__sanitizer_set_report_fd@@Base+0x14a0>
   142d4:	add	x20, x20, #0x1
   142d8:	str	x20, [x19, #24]
   142dc:	ldrb	w1, [x21, x20]
   142e0:	cbnz	w1, 142c4 <__sanitizer_set_report_fd@@Base+0x1480>
   142e4:	sub	x2, x20, x22
   142e8:	mov	x1, x24
   142ec:	mov	x0, x19
   142f0:	bl	13f40 <__sanitizer_set_report_fd@@Base+0x10fc>
   142f4:	mov	x2, x0
   142f8:	mov	x1, x23
   142fc:	mov	x0, x19
   14300:	bl	140a8 <__sanitizer_set_report_fd@@Base+0x1264>
   14304:	and	w0, w0, #0xff
   14308:	cbz	w0, 14320 <__sanitizer_set_report_fd@@Base+0x14dc>
   1430c:	ldp	x21, x22, [sp, #16]
   14310:	ldp	x23, x24, [sp, #32]
   14314:	ldr	x30, [sp, #48]
   14318:	ldp	x19, x20, [sp], #64
   1431c:	ret
   14320:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14324:	add	x1, x1, #0xf8
   14328:	mov	x0, x19
   1432c:	bl	14014 <__sanitizer_set_report_fd@@Base+0x11d0>
   14330:	mov	x20, x22
   14334:	b	142e4 <__sanitizer_set_report_fd@@Base+0x14a0>
   14338:	stp	x19, x30, [sp, #-16]!
   1433c:	mov	x19, x0
   14340:	mov	x0, x19
   14344:	bl	14068 <__sanitizer_set_report_fd@@Base+0x1224>
   14348:	ldr	x1, [x19, #16]
   1434c:	ldr	x0, [x19, #24]
   14350:	ldrb	w0, [x1, x0]
   14354:	cbz	w0, 14364 <__sanitizer_set_report_fd@@Base+0x1520>
   14358:	mov	x0, x19
   1435c:	bl	14188 <__sanitizer_set_report_fd@@Base+0x1344>
   14360:	b	14340 <__sanitizer_set_report_fd@@Base+0x14fc>
   14364:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14368:	ldr	x0, [x0, #4056]
   1436c:	ldr	w0, [x0, #36]
   14370:	cmp	w0, #0x0
   14374:	b.le	14380 <__sanitizer_set_report_fd@@Base+0x153c>
   14378:	ldp	x19, x30, [sp], #16
   1437c:	ret
   14380:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14384:	ldr	x0, [x0, #4056]
   14388:	mov	w1, #0x1                   	// #1
   1438c:	str	w1, [x0, #36]
   14390:	b	14378 <__sanitizer_set_report_fd@@Base+0x1534>
   14394:	cbz	x1, 143cc <__sanitizer_set_report_fd@@Base+0x1588>
   14398:	stp	x19, x20, [sp, #-32]!
   1439c:	stp	x21, x30, [sp, #16]
   143a0:	mov	x19, x0
   143a4:	ldr	x21, [x0, #16]
   143a8:	ldr	x20, [x0, #24]
   143ac:	str	x1, [x0, #16]
   143b0:	str	xzr, [x0, #24]
   143b4:	bl	14338 <__sanitizer_set_report_fd@@Base+0x14f4>
   143b8:	str	x21, [x19, #16]
   143bc:	str	x20, [x19, #24]
   143c0:	ldp	x21, x30, [sp, #16]
   143c4:	ldp	x19, x20, [sp], #32
   143c8:	ret
   143cc:	ret
   143d0:	stp	x19, x20, [sp, #-80]!
   143d4:	stp	x21, x22, [sp, #16]
   143d8:	str	x30, [sp, #32]
   143dc:	mov	x21, x0
   143e0:	mov	x20, x1
   143e4:	and	w22, w2, #0xff
   143e8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   143ec:	ldr	x1, [x1, #4016]
   143f0:	ldr	x0, [x1]
   143f4:	cbz	x0, 14448 <__sanitizer_set_report_fd@@Base+0x1604>
   143f8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   143fc:	ldr	x1, [x1, #4016]
   14400:	ldr	x0, [x1]
   14404:	cmp	x0, #0x8, lsl #12
   14408:	add	x5, sp, #0x3c
   1440c:	mov	x4, #0x8000                	// #32768
   14410:	csel	x4, x0, x4, cs  // cs = hs, nlast
   14414:	add	x3, sp, #0x30
   14418:	add	x2, sp, #0x40
   1441c:	add	x1, sp, #0x48
   14420:	mov	x0, x20
   14424:	bl	12634 <__sanitizer_cov_dump@@Base+0x2104>
   14428:	ands	w19, w0, #0xff
   1442c:	b.ne	14474 <__sanitizer_set_report_fd@@Base+0x1630>  // b.any
   14430:	cbz	w22, 1445c <__sanitizer_set_report_fd@@Base+0x1618>
   14434:	mov	w0, w22
   14438:	ldp	x21, x22, [sp, #16]
   1443c:	ldr	x30, [sp, #32]
   14440:	ldp	x19, x20, [sp], #80
   14444:	ret
   14448:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1444c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14450:	ldr	x1, [x1, #4016]
   14454:	str	x0, [x1]
   14458:	b	143f8 <__sanitizer_set_report_fd@@Base+0x15b4>
   1445c:	ldr	w2, [sp, #60]
   14460:	mov	x1, x20
   14464:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14468:	add	x0, x0, #0x110
   1446c:	bl	1a368 <OnPrint@@Base+0x344>
   14470:	b	14434 <__sanitizer_set_report_fd@@Base+0x15f0>
   14474:	ldr	x1, [sp, #72]
   14478:	mov	x0, x21
   1447c:	bl	14394 <__sanitizer_set_report_fd@@Base+0x1550>
   14480:	ldr	x1, [sp, #64]
   14484:	ldr	x0, [sp, #72]
   14488:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1448c:	mov	w22, w19
   14490:	b	14434 <__sanitizer_set_report_fd@@Base+0x15f0>
   14494:	ldrsw	x5, [x0, #8]
   14498:	cmp	x5, #0xc7
   1449c:	b.hi	144e4 <__sanitizer_set_report_fd@@Base+0x16a0>  // b.pmore
   144a0:	ldr	x4, [x0]
   144a4:	add	x5, x5, x5, lsl #1
   144a8:	str	x1, [x4, x5, lsl #3]
   144ac:	ldrsw	x1, [x0, #8]
   144b0:	ldr	x4, [x0]
   144b4:	add	x1, x1, x1, lsl #1
   144b8:	add	x1, x4, x1, lsl #3
   144bc:	str	x3, [x1, #8]
   144c0:	ldrsw	x1, [x0, #8]
   144c4:	ldr	x3, [x0]
   144c8:	add	x1, x1, x1, lsl #1
   144cc:	add	x1, x3, x1, lsl #3
   144d0:	str	x2, [x1, #16]
   144d4:	ldr	w1, [x0, #8]
   144d8:	add	w1, w1, #0x1
   144dc:	str	w1, [x0, #8]
   144e0:	ret
   144e4:	str	x30, [sp, #-16]!
   144e8:	mov	x4, #0xc8                  	// #200
   144ec:	mov	x3, x5
   144f0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   144f4:	add	x2, x2, #0x140
   144f8:	mov	w1, #0x9e                  	// #158
   144fc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14500:	add	x0, x0, #0x88
   14504:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14508:	stp	x19, x30, [sp, #-16]!
   1450c:	mov	x19, x0
   14510:	str	wzr, [x0, #8]
   14514:	str	xzr, [x0, #16]
   14518:	str	xzr, [x0, #24]
   1451c:	mov	x1, #0x12c0                	// #4800
   14520:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14524:	add	x0, x0, #0xd40
   14528:	add	x0, x0, #0xa8
   1452c:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   14530:	str	x0, [x19]
   14534:	ldp	x19, x30, [sp], #16
   14538:	ret
   1453c:	cbz	x2, 14564 <__sanitizer_set_report_fd@@Base+0x1720>
   14540:	add	x3, x0, x2
   14544:	ldrb	w2, [x0]
   14548:	cmp	w2, w1
   1454c:	b.eq	14560 <__sanitizer_set_report_fd@@Base+0x171c>  // b.none
   14550:	add	x0, x0, #0x1
   14554:	cmp	x3, x0
   14558:	b.ne	14544 <__sanitizer_set_report_fd@@Base+0x1700>  // b.any
   1455c:	mov	x0, #0x0                   	// #0
   14560:	ret
   14564:	mov	x0, #0x0                   	// #0
   14568:	b	14560 <__sanitizer_set_report_fd@@Base+0x171c>
   1456c:	mov	x3, x0
   14570:	cbz	x2, 14598 <__sanitizer_set_report_fd@@Base+0x1754>
   14574:	add	x4, x0, x2
   14578:	mov	x0, #0x0                   	// #0
   1457c:	ldrb	w2, [x3]
   14580:	cmp	w2, w1
   14584:	csel	x0, x0, x3, ne  // ne = any
   14588:	add	x3, x3, #0x1
   1458c:	cmp	x4, x3
   14590:	b.ne	1457c <__sanitizer_set_report_fd@@Base+0x1738>  // b.any
   14594:	ret
   14598:	mov	x0, #0x0                   	// #0
   1459c:	b	14594 <__sanitizer_set_report_fd@@Base+0x1750>
   145a0:	cbz	x2, 145d8 <__sanitizer_set_report_fd@@Base+0x1794>
   145a4:	mov	x3, #0x0                   	// #0
   145a8:	ldrb	w5, [x0, x3]
   145ac:	ldrb	w4, [x1, x3]
   145b0:	cmp	w5, w4
   145b4:	b.ne	145cc <__sanitizer_set_report_fd@@Base+0x1788>  // b.any
   145b8:	add	x3, x3, #0x1
   145bc:	cmp	x2, x3
   145c0:	b.ne	145a8 <__sanitizer_set_report_fd@@Base+0x1764>  // b.any
   145c4:	mov	w0, #0x0                   	// #0
   145c8:	b	145d4 <__sanitizer_set_report_fd@@Base+0x1790>
   145cc:	mov	w0, #0x1                   	// #1
   145d0:	cneg	w0, w0, cc  // cc = lo, ul, last
   145d4:	ret
   145d8:	mov	w0, #0x0                   	// #0
   145dc:	b	145d4 <__sanitizer_set_report_fd@@Base+0x1790>
   145e0:	cbz	x2, 145fc <__sanitizer_set_report_fd@@Base+0x17b8>
   145e4:	mov	x3, #0x0                   	// #0
   145e8:	ldrb	w4, [x1, x3]
   145ec:	strb	w4, [x0, x3]
   145f0:	add	x3, x3, #0x1
   145f4:	cmp	x2, x3
   145f8:	b.ne	145e8 <__sanitizer_set_report_fd@@Base+0x17a4>  // b.any
   145fc:	ret
   14600:	cmp	x0, x1
   14604:	b.cs	1462c <__sanitizer_set_report_fd@@Base+0x17e8>  // b.hs, b.nlast
   14608:	cmp	x2, #0x0
   1460c:	b.le	14628 <__sanitizer_set_report_fd@@Base+0x17e4>
   14610:	mov	x3, #0x0                   	// #0
   14614:	ldrb	w4, [x1, x3]
   14618:	strb	w4, [x0, x3]
   1461c:	add	x3, x3, #0x1
   14620:	cmp	x2, x3
   14624:	b.ne	14614 <__sanitizer_set_report_fd@@Base+0x17d0>  // b.any
   14628:	ret
   1462c:	cmp	x2, #0x0
   14630:	ccmp	x0, x1, #0x0, gt
   14634:	b.ls	14628 <__sanitizer_set_report_fd@@Base+0x17e4>  // b.plast
   14638:	sub	x2, x2, #0x1
   1463c:	ldrb	w3, [x1, x2]
   14640:	strb	w3, [x0, x2]
   14644:	subs	x2, x2, #0x1
   14648:	b.pl	1463c <__sanitizer_set_report_fd@@Base+0x17f8>  // b.nfrst
   1464c:	b	14628 <__sanitizer_set_report_fd@@Base+0x17e4>
   14650:	orr	x3, x0, x2
   14654:	tst	x3, #0xf
   14658:	b.eq	1467c <__sanitizer_set_report_fd@@Base+0x1838>  // b.none
   1465c:	cbz	x2, 14678 <__sanitizer_set_report_fd@@Base+0x1834>
   14660:	add	x3, x0, x2
   14664:	mov	x2, x0
   14668:	and	w1, w1, #0xff
   1466c:	strb	w1, [x2], #1
   14670:	cmp	x3, x2
   14674:	b.ne	1466c <__sanitizer_set_report_fd@@Base+0x1828>  // b.any
   14678:	ret
   1467c:	and	x2, x2, #0xfffffffffffffff8
   14680:	add	x2, x0, x2
   14684:	sxtw	x3, w1
   14688:	sbfiz	x1, x1, #8, #32
   1468c:	orr	x1, x1, x3
   14690:	orr	x1, x1, x1, lsl #16
   14694:	orr	x1, x1, x1, lsl #32
   14698:	cmp	x0, x2
   1469c:	b.cs	14678 <__sanitizer_set_report_fd@@Base+0x1834>  // b.hs, b.nlast
   146a0:	mov	x3, x0
   146a4:	str	x1, [x3, #8]
   146a8:	str	x1, [x3], #16
   146ac:	cmp	x2, x3
   146b0:	b.hi	146a4 <__sanitizer_set_report_fd@@Base+0x1860>  // b.pmore
   146b4:	b	14678 <__sanitizer_set_report_fd@@Base+0x1834>
   146b8:	ldrb	w3, [x0]
   146bc:	ldrb	w4, [x1]
   146c0:	mov	x2, #0x1                   	// #1
   146c4:	cmp	w3, w4
   146c8:	b.ne	146e4 <__sanitizer_set_report_fd@@Base+0x18a0>  // b.any
   146cc:	cbz	w3, 146f4 <__sanitizer_set_report_fd@@Base+0x18b0>
   146d0:	ldrb	w3, [x0, x2]
   146d4:	ldrb	w4, [x1, x2]
   146d8:	add	x2, x2, #0x1
   146dc:	cmp	w3, w4
   146e0:	b.eq	146cc <__sanitizer_set_report_fd@@Base+0x1888>  // b.none
   146e4:	mov	w0, #0x1                   	// #1
   146e8:	cmp	w3, w4
   146ec:	cneg	w0, w0, cc  // cc = lo, ul, last
   146f0:	ret
   146f4:	mov	w0, #0x0                   	// #0
   146f8:	b	146f0 <__sanitizer_set_report_fd@@Base+0x18ac>
   146fc:	cbz	x2, 14738 <__sanitizer_set_report_fd@@Base+0x18f4>
   14700:	mov	x3, #0x0                   	// #0
   14704:	ldrb	w4, [x0, x3]
   14708:	ldrb	w5, [x1, x3]
   1470c:	cmp	w4, w5
   14710:	b.ne	1472c <__sanitizer_set_report_fd@@Base+0x18e8>  // b.any
   14714:	cbz	w4, 14740 <__sanitizer_set_report_fd@@Base+0x18fc>
   14718:	add	x3, x3, #0x1
   1471c:	cmp	x2, x3
   14720:	b.ne	14704 <__sanitizer_set_report_fd@@Base+0x18c0>  // b.any
   14724:	mov	w0, #0x0                   	// #0
   14728:	b	14734 <__sanitizer_set_report_fd@@Base+0x18f0>
   1472c:	mov	w0, #0x1                   	// #1
   14730:	cneg	w0, w0, cc  // cc = lo, ul, last
   14734:	ret
   14738:	mov	w0, #0x0                   	// #0
   1473c:	b	14734 <__sanitizer_set_report_fd@@Base+0x18f0>
   14740:	mov	w0, #0x0                   	// #0
   14744:	b	14734 <__sanitizer_set_report_fd@@Base+0x18f0>
   14748:	ldrb	w2, [x0]
   1474c:	and	w3, w1, #0xff
   14750:	cmp	w2, w1, uxtb
   14754:	b.eq	14770 <__sanitizer_set_report_fd@@Base+0x192c>  // b.none
   14758:	cbz	w2, 1476c <__sanitizer_set_report_fd@@Base+0x1928>
   1475c:	ldrb	w2, [x0, #1]!
   14760:	cmp	w2, w3
   14764:	b.ne	14758 <__sanitizer_set_report_fd@@Base+0x1914>  // b.any
   14768:	b	14770 <__sanitizer_set_report_fd@@Base+0x192c>
   1476c:	mov	x0, #0x0                   	// #0
   14770:	ret
   14774:	stp	x19, x20, [sp, #-32]!
   14778:	stp	x21, x30, [sp, #16]
   1477c:	mov	x21, x1
   14780:	ldrb	w1, [x0]
   14784:	cbz	w1, 147b8 <__sanitizer_set_report_fd@@Base+0x1974>
   14788:	mov	x20, x0
   1478c:	mov	x19, #0x0                   	// #0
   14790:	mov	x0, x21
   14794:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1904>
   14798:	cbnz	x0, 147a8 <__sanitizer_set_report_fd@@Base+0x1964>
   1479c:	add	x19, x19, #0x1
   147a0:	ldrb	w1, [x20, x19]
   147a4:	cbnz	w1, 14790 <__sanitizer_set_report_fd@@Base+0x194c>
   147a8:	mov	x0, x19
   147ac:	ldp	x21, x30, [sp, #16]
   147b0:	ldp	x19, x20, [sp], #32
   147b4:	ret
   147b8:	mov	x19, #0x0                   	// #0
   147bc:	b	147a8 <__sanitizer_set_report_fd@@Base+0x1964>
   147c0:	mov	x2, x0
   147c4:	ldrb	w3, [x0]
   147c8:	cbz	w3, 147e4 <__sanitizer_set_report_fd@@Base+0x19a0>
   147cc:	mov	x0, #0x0                   	// #0
   147d0:	cmp	w3, w1
   147d4:	csel	x0, x0, x2, ne  // ne = any
   147d8:	ldrb	w3, [x2, #1]!
   147dc:	cbnz	w3, 147d0 <__sanitizer_set_report_fd@@Base+0x198c>
   147e0:	ret
   147e4:	mov	x0, #0x0                   	// #0
   147e8:	b	147e0 <__sanitizer_set_report_fd@@Base+0x199c>
   147ec:	mov	x2, x0
   147f0:	ldrb	w0, [x0]
   147f4:	cbz	w0, 1480c <__sanitizer_set_report_fd@@Base+0x19c8>
   147f8:	mov	x0, #0x0                   	// #0
   147fc:	add	x0, x0, #0x1
   14800:	ldrb	w1, [x2, x0]
   14804:	cbnz	w1, 147fc <__sanitizer_set_report_fd@@Base+0x19b8>
   14808:	ret
   1480c:	mov	x0, #0x0                   	// #0
   14810:	b	14808 <__sanitizer_set_report_fd@@Base+0x19c4>
   14814:	stp	x19, x20, [sp, #-32]!
   14818:	stp	x21, x30, [sp, #16]
   1481c:	mov	x21, x0
   14820:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   14824:	mov	x19, x0
   14828:	mov	x2, #0x0                   	// #0
   1482c:	mov	x1, #0x0                   	// #0
   14830:	add	x0, x0, #0x1
   14834:	bl	d178 <__sancov_default_options@@Base+0x47c>
   14838:	mov	x20, x0
   1483c:	mov	x2, x19
   14840:	mov	x1, x21
   14844:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   14848:	strb	wzr, [x20, x19]
   1484c:	mov	x0, x20
   14850:	ldp	x21, x30, [sp, #16]
   14854:	ldp	x19, x20, [sp], #32
   14858:	ret
   1485c:	stp	x19, x30, [sp, #-16]!
   14860:	mov	x19, x0
   14864:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1904>
   14868:	cbz	x0, 14874 <__sanitizer_set_report_fd@@Base+0x1a30>
   1486c:	ldp	x19, x30, [sp], #16
   14870:	ret
   14874:	mov	x0, x19
   14878:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1487c:	add	x0, x19, x0
   14880:	b	1486c <__sanitizer_set_report_fd@@Base+0x1a28>
   14884:	stp	x19, x20, [sp, #-32]!
   14888:	stp	x21, x30, [sp, #16]
   1488c:	mov	x21, x0
   14890:	mov	x20, x1
   14894:	mov	x19, x2
   14898:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1489c:	cbz	x19, 148d8 <__sanitizer_set_report_fd@@Base+0x1a94>
   148a0:	mov	x3, #0x0                   	// #0
   148a4:	add	x1, x21, x0
   148a8:	ldrb	w4, [x20, x3]
   148ac:	cbz	w4, 148c0 <__sanitizer_set_report_fd@@Base+0x1a7c>
   148b0:	strb	w4, [x1, x3]
   148b4:	add	x3, x3, #0x1
   148b8:	cmp	x19, x3
   148bc:	b.ne	148a8 <__sanitizer_set_report_fd@@Base+0x1a64>  // b.any
   148c0:	add	x0, x21, x0
   148c4:	strb	wzr, [x0, x3]
   148c8:	mov	x0, x21
   148cc:	ldp	x21, x30, [sp, #16]
   148d0:	ldp	x19, x20, [sp], #32
   148d4:	ret
   148d8:	mov	x3, x19
   148dc:	b	148c0 <__sanitizer_set_report_fd@@Base+0x1a7c>
   148e0:	stp	x19, x20, [sp, #-48]!
   148e4:	stp	x21, x22, [sp, #16]
   148e8:	str	x30, [sp, #32]
   148ec:	mov	x22, x0
   148f0:	mov	x21, x1
   148f4:	mov	x19, x2
   148f8:	mov	x0, x1
   148fc:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   14900:	mov	x20, x0
   14904:	cmp	x0, x19
   14908:	b.cc	14924 <__sanitizer_set_report_fd@@Base+0x1ae0>  // b.lo, b.ul, b.last
   1490c:	cbnz	x19, 14938 <__sanitizer_set_report_fd@@Base+0x1af4>
   14910:	mov	x0, x20
   14914:	ldp	x21, x22, [sp, #16]
   14918:	ldr	x30, [sp, #32]
   1491c:	ldp	x19, x20, [sp], #48
   14920:	ret
   14924:	add	x2, x0, #0x1
   14928:	mov	x1, x21
   1492c:	mov	x0, x22
   14930:	bl	14600 <__sanitizer_set_report_fd@@Base+0x17bc>
   14934:	b	14910 <__sanitizer_set_report_fd@@Base+0x1acc>
   14938:	sub	x19, x19, #0x1
   1493c:	mov	x2, x19
   14940:	mov	x1, x21
   14944:	mov	x0, x22
   14948:	bl	14600 <__sanitizer_set_report_fd@@Base+0x17bc>
   1494c:	strb	wzr, [x22, x19]
   14950:	b	14910 <__sanitizer_set_report_fd@@Base+0x1acc>
   14954:	stp	x19, x30, [sp, #-16]!
   14958:	mov	x19, x0
   1495c:	cbz	x2, 14998 <__sanitizer_set_report_fd@@Base+0x1b54>
   14960:	mov	x0, #0x0                   	// #0
   14964:	ldrb	w4, [x1, x0]
   14968:	cbz	w4, 1497c <__sanitizer_set_report_fd@@Base+0x1b38>
   1496c:	strb	w4, [x19, x0]
   14970:	add	x0, x0, #0x1
   14974:	cmp	x2, x0
   14978:	b.ne	14964 <__sanitizer_set_report_fd@@Base+0x1b20>  // b.any
   1497c:	sub	x2, x2, x0
   14980:	mov	w1, #0x0                   	// #0
   14984:	add	x0, x19, x0
   14988:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1498c:	mov	x0, x19
   14990:	ldp	x19, x30, [sp], #16
   14994:	ret
   14998:	mov	x0, x2
   1499c:	b	1497c <__sanitizer_set_report_fd@@Base+0x1b38>
   149a0:	mov	x3, x0
   149a4:	cbz	x1, 149c4 <__sanitizer_set_report_fd@@Base+0x1b80>
   149a8:	mov	x0, #0x0                   	// #0
   149ac:	ldrb	w2, [x3, x0]
   149b0:	cbz	w2, 149c0 <__sanitizer_set_report_fd@@Base+0x1b7c>
   149b4:	add	x0, x0, #0x1
   149b8:	cmp	x1, x0
   149bc:	b.ne	149ac <__sanitizer_set_report_fd@@Base+0x1b68>  // b.any
   149c0:	ret
   149c4:	mov	x0, x1
   149c8:	b	149c0 <__sanitizer_set_report_fd@@Base+0x1b7c>
   149cc:	stp	x19, x20, [sp, #-48]!
   149d0:	stp	x21, x22, [sp, #16]
   149d4:	stp	x23, x30, [sp, #32]
   149d8:	mov	x22, x0
   149dc:	mov	x23, x1
   149e0:	mov	x21, x2
   149e4:	mov	x0, x1
   149e8:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   149ec:	mov	x19, x0
   149f0:	mov	x1, x21
   149f4:	mov	x0, x22
   149f8:	bl	149a0 <__sanitizer_set_report_fd@@Base+0x1b5c>
   149fc:	mov	x20, x0
   14a00:	cmp	x21, x0
   14a04:	b.eq	14a38 <__sanitizer_set_report_fd@@Base+0x1bf4>  // b.none
   14a08:	sub	x2, x21, x0
   14a0c:	cmp	x2, x19
   14a10:	b.ls	14a40 <__sanitizer_set_report_fd@@Base+0x1bfc>  // b.plast
   14a14:	add	x2, x19, #0x1
   14a18:	mov	x1, x23
   14a1c:	add	x0, x22, x0
   14a20:	bl	14600 <__sanitizer_set_report_fd@@Base+0x17bc>
   14a24:	add	x0, x19, x20
   14a28:	ldp	x21, x22, [sp, #16]
   14a2c:	ldp	x23, x30, [sp, #32]
   14a30:	ldp	x19, x20, [sp], #48
   14a34:	ret
   14a38:	add	x0, x19, x0
   14a3c:	b	14a28 <__sanitizer_set_report_fd@@Base+0x1be4>
   14a40:	sub	x2, x2, #0x1
   14a44:	mov	x1, x23
   14a48:	add	x0, x22, x0
   14a4c:	bl	14600 <__sanitizer_set_report_fd@@Base+0x17bc>
   14a50:	add	x21, x22, x21
   14a54:	sturb	wzr, [x21, #-1]
   14a58:	b	14a24 <__sanitizer_set_report_fd@@Base+0x1be0>
   14a5c:	stp	x19, x20, [sp, #-64]!
   14a60:	stp	x21, x22, [sp, #16]
   14a64:	stp	x23, x24, [sp, #32]
   14a68:	str	x30, [sp, #48]
   14a6c:	mov	x24, x0
   14a70:	mov	x23, x1
   14a74:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   14a78:	mov	x21, x0
   14a7c:	mov	x0, x23
   14a80:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   14a84:	cmp	x21, x0
   14a88:	b.cc	14ad8 <__sanitizer_set_report_fd@@Base+0x1c94>  // b.lo, b.ul, b.last
   14a8c:	mov	x22, x0
   14a90:	sub	x21, x21, x0
   14a94:	mov	x19, #0x0                   	// #0
   14a98:	add	x20, x24, x19
   14a9c:	mov	x2, x22
   14aa0:	mov	x1, x23
   14aa4:	mov	x0, x20
   14aa8:	bl	145a0 <__sanitizer_set_report_fd@@Base+0x175c>
   14aac:	cbz	w0, 14ac0 <__sanitizer_set_report_fd@@Base+0x1c7c>
   14ab0:	add	x19, x19, #0x1
   14ab4:	cmp	x19, x21
   14ab8:	b.ls	14a98 <__sanitizer_set_report_fd@@Base+0x1c54>  // b.plast
   14abc:	mov	x20, #0x0                   	// #0
   14ac0:	mov	x0, x20
   14ac4:	ldp	x21, x22, [sp, #16]
   14ac8:	ldp	x23, x24, [sp, #32]
   14acc:	ldr	x30, [sp, #48]
   14ad0:	ldp	x19, x20, [sp], #64
   14ad4:	ret
   14ad8:	mov	x20, #0x0                   	// #0
   14adc:	b	14ac0 <__sanitizer_set_report_fd@@Base+0x1c7c>
   14ae0:	cmp	w2, #0xa
   14ae4:	b.eq	14b10 <__sanitizer_set_report_fd@@Base+0x1ccc>  // b.none
   14ae8:	str	x30, [sp, #-16]!
   14aec:	sxtw	x3, w2
   14af0:	mov	x4, #0xa                   	// #10
   14af4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14af8:	add	x2, x2, #0x160
   14afc:	mov	w1, #0xe5                  	// #229
   14b00:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14b04:	add	x0, x0, #0x178
   14b08:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14b0c:	add	x0, x0, #0x1
   14b10:	ldrb	w2, [x0]
   14b14:	cmp	w2, #0x20
   14b18:	b.eq	14b0c <__sanitizer_set_report_fd@@Base+0x1cc8>  // b.none
   14b1c:	sub	w3, w2, #0x9
   14b20:	and	w3, w3, #0xff
   14b24:	cmp	w3, #0x4
   14b28:	b.ls	14b0c <__sanitizer_set_report_fd@@Base+0x1cc8>  // b.plast
   14b2c:	cmp	w2, #0x2b
   14b30:	b.eq	14bbc <__sanitizer_set_report_fd@@Base+0x1d78>  // b.none
   14b34:	mov	x4, x0
   14b38:	mov	w7, #0x1                   	// #1
   14b3c:	cmp	w2, #0x2d
   14b40:	b.eq	14bc8 <__sanitizer_set_report_fd@@Base+0x1d84>  // b.none
   14b44:	ldrb	w2, [x4]
   14b48:	sub	w3, w2, #0x30
   14b4c:	cmp	w3, #0x9
   14b50:	b.hi	14be8 <__sanitizer_set_report_fd@@Base+0x1da4>  // b.pmore
   14b54:	mov	x3, #0x0                   	// #0
   14b58:	mov	x6, #0x9999999999999999    	// #-7378697629483820647
   14b5c:	movk	x6, #0x1999, lsl #48
   14b60:	mov	x5, #0xffffffffffffffff    	// #-1
   14b64:	add	x0, x3, x3, lsl #2
   14b68:	lsl	x0, x0, #1
   14b6c:	cmp	x3, x6
   14b70:	csel	x0, x0, x5, ls  // ls = plast
   14b74:	sub	w2, w2, #0x30
   14b78:	sxtw	x2, w2
   14b7c:	mvn	x3, x2
   14b80:	add	x2, x2, x0
   14b84:	cmp	x3, x0
   14b88:	csel	x3, x2, x5, cs  // cs = hs, nlast
   14b8c:	ldrb	w2, [x4, #1]!
   14b90:	sub	w0, w2, #0x30
   14b94:	cmp	w0, #0x9
   14b98:	b.ls	14b64 <__sanitizer_set_report_fd@@Base+0x1d20>  // b.plast
   14b9c:	cbz	x1, 14ba4 <__sanitizer_set_report_fd@@Base+0x1d60>
   14ba0:	str	x4, [x1]
   14ba4:	cmp	w7, #0x0
   14ba8:	b.le	14bd4 <__sanitizer_set_report_fd@@Base+0x1d90>
   14bac:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   14bb0:	cmp	x3, x0
   14bb4:	csel	x0, x3, x0, ls  // ls = plast
   14bb8:	ret
   14bbc:	add	x4, x0, #0x1
   14bc0:	mov	w7, #0x1                   	// #1
   14bc4:	b	14b44 <__sanitizer_set_report_fd@@Base+0x1d00>
   14bc8:	add	x4, x0, #0x1
   14bcc:	mov	w7, #0xffffffff            	// #-1
   14bd0:	b	14b44 <__sanitizer_set_report_fd@@Base+0x1d00>
   14bd4:	mov	x1, x3
   14bd8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14bdc:	tbnz	x3, #63, 14c08 <__sanitizer_set_report_fd@@Base+0x1dc4>
   14be0:	neg	x0, x1
   14be4:	ret
   14be8:	cbz	x1, 14bf8 <__sanitizer_set_report_fd@@Base+0x1db4>
   14bec:	mov	x4, x0
   14bf0:	mov	x3, #0x0                   	// #0
   14bf4:	b	14ba0 <__sanitizer_set_report_fd@@Base+0x1d5c>
   14bf8:	cmp	w7, #0x0
   14bfc:	b.le	14be0 <__sanitizer_set_report_fd@@Base+0x1d9c>
   14c00:	mov	x3, #0x0                   	// #0
   14c04:	b	14bac <__sanitizer_set_report_fd@@Base+0x1d68>
   14c08:	ret
   14c0c:	str	x30, [sp, #-16]!
   14c10:	mov	w2, #0xa                   	// #10
   14c14:	mov	x1, #0x0                   	// #0
   14c18:	bl	14ae0 <__sanitizer_set_report_fd@@Base+0x1c9c>
   14c1c:	ldr	x30, [sp], #16
   14c20:	ret
   14c24:	mov	x2, #0x10000000000         	// #1099511627776
   14c28:	cmp	x1, x2
   14c2c:	b.hi	14cac <__sanitizer_set_report_fd@@Base+0x1e68>  // b.pmore
   14c30:	add	x5, x0, x1
   14c34:	add	x2, x0, #0x7
   14c38:	and	x2, x2, #0xfffffffffffffff8
   14c3c:	and	x4, x5, #0xfffffffffffffff8
   14c40:	cmp	x0, x2
   14c44:	mov	x3, x0
   14c48:	mov	x1, #0x0                   	// #0
   14c4c:	ccmp	x0, x5, #0x2, cc  // cc = lo, ul, last
   14c50:	b.cs	14c68 <__sanitizer_set_report_fd@@Base+0x1e24>  // b.hs, b.nlast
   14c54:	ldrb	w6, [x3], #1
   14c58:	orr	x1, x1, x6
   14c5c:	cmp	x2, x3
   14c60:	ccmp	x5, x3, #0x0, hi  // hi = pmore
   14c64:	b.hi	14c54 <__sanitizer_set_report_fd@@Base+0x1e10>  // b.pmore
   14c68:	cmp	x2, x4
   14c6c:	b.cs	14c80 <__sanitizer_set_report_fd@@Base+0x1e3c>  // b.hs, b.nlast
   14c70:	ldr	x3, [x2], #8
   14c74:	orr	x1, x1, x3
   14c78:	cmp	x4, x2
   14c7c:	b.hi	14c70 <__sanitizer_set_report_fd@@Base+0x1e2c>  // b.pmore
   14c80:	cmp	x0, x4
   14c84:	b.hi	14ca0 <__sanitizer_set_report_fd@@Base+0x1e5c>  // b.pmore
   14c88:	cmp	x5, x4
   14c8c:	b.ls	14ca0 <__sanitizer_set_report_fd@@Base+0x1e5c>  // b.plast
   14c90:	ldrb	w0, [x4], #1
   14c94:	orr	x1, x1, x0
   14c98:	cmp	x5, x4
   14c9c:	b.hi	14c90 <__sanitizer_set_report_fd@@Base+0x1e4c>  // b.pmore
   14ca0:	cmp	x1, #0x0
   14ca4:	cset	w0, eq  // eq = none
   14ca8:	ret
   14cac:	str	x30, [sp, #-16]!
   14cb0:	mov	x4, x2
   14cb4:	mov	x3, x1
   14cb8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14cbc:	add	x2, x2, #0x1b8
   14cc0:	mov	w1, #0x104                 	// #260
   14cc4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14cc8:	add	x0, x0, #0x178
   14ccc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14cd0:	str	x30, [sp, #-16]!
   14cd4:	add	x0, x0, #0x4, lsl #12
   14cd8:	add	x0, x0, #0x810
   14cdc:	bl	15994 <__sanitizer_set_report_fd@@Base+0x2b50>
   14ce0:	ldr	x30, [sp], #16
   14ce4:	ret
   14ce8:	stp	x19, x20, [sp, #-48]!
   14cec:	stp	x21, x22, [sp, #16]
   14cf0:	str	x30, [sp, #32]
   14cf4:	mov	x20, x0
   14cf8:	mov	x21, x1
   14cfc:	add	x22, x0, #0x4, lsl #12
   14d00:	add	x22, x22, #0x810
   14d04:	mov	x0, x22
   14d08:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   14d0c:	ldr	x19, [x20, #18536]
   14d10:	cmp	x19, #0x3ff
   14d14:	b.hi	14d58 <__sanitizer_set_report_fd@@Base+0x1f14>  // b.pmore
   14d18:	add	x0, x19, #0x1
   14d1c:	str	x0, [x20, #18536]
   14d20:	mov	x0, x21
   14d24:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   14d28:	add	x1, x20, x19, lsl #5
   14d2c:	str	x0, [x1, #18544]
   14d30:	str	xzr, [x1, #18552]
   14d34:	str	xzr, [x1, #18560]
   14d38:	add	x1, x1, #0x4, lsl #12
   14d3c:	strb	wzr, [x1, #2184]
   14d40:	mov	x0, x22
   14d44:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   14d48:	ldp	x21, x22, [sp, #16]
   14d4c:	ldr	x30, [sp, #32]
   14d50:	ldp	x19, x20, [sp], #48
   14d54:	ret
   14d58:	mov	x2, #0x400                 	// #1024
   14d5c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14d60:	ldr	x0, [x0, #4024]
   14d64:	ldr	x1, [x0]
   14d68:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14d6c:	add	x0, x0, #0x1d8
   14d70:	bl	1a3fc <OnPrint@@Base+0x3d8>
   14d74:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   14d78:	stp	x19, x20, [sp, #-176]!
   14d7c:	str	x30, [sp, #80]
   14d80:	mov	x20, x0
   14d84:	mov	x19, x1
   14d88:	add	x0, x0, #0x4, lsl #12
   14d8c:	add	x0, x0, #0x810
   14d90:	str	x0, [sp, #120]
   14d94:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   14d98:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14d9c:	ldr	x0, [x0, #4016]
   14da0:	ldr	x0, [x0]
   14da4:	cbz	x0, 14e60 <__sanitizer_set_report_fd@@Base+0x201c>
   14da8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14dac:	ldr	x0, [x0, #4016]
   14db0:	ldr	x0, [x0]
   14db4:	sub	x1, x0, #0x1
   14db8:	ands	x1, x1, x0
   14dbc:	str	x1, [sp, #96]
   14dc0:	b.ne	14e74 <__sanitizer_set_report_fd@@Base+0x2030>  // b.any
   14dc4:	stp	x27, x28, [sp, #64]
   14dc8:	add	x28, x0, #0xfff
   14dcc:	neg	x0, x0
   14dd0:	and	x28, x28, x0
   14dd4:	mov	w2, #0x0                   	// #0
   14dd8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   14ddc:	add	x1, x1, #0x350
   14de0:	mov	x0, x28
   14de4:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   14de8:	mov	x27, x0
   14dec:	mov	x2, #0x0                   	// #0
   14df0:	mov	x1, #0x0                   	// #0
   14df4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   14df8:	mov	x1, #0x0                   	// #0
   14dfc:	mov	x0, #0x0                   	// #0
   14e00:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   14e04:	cmp	x28, #0xfff
   14e08:	b.ls	14e94 <__sanitizer_set_report_fd@@Base+0x2050>  // b.plast
   14e0c:	mov	x2, #0x1000                	// #4096
   14e10:	mov	w1, #0x0                   	// #0
   14e14:	mov	x0, x27
   14e18:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   14e1c:	strb	wzr, [x27]
   14e20:	cbz	x19, 14f8c <__sanitizer_set_report_fd@@Base+0x2148>
   14e24:	mov	x2, #0xfff                 	// #4095
   14e28:	mov	x1, x27
   14e2c:	mov	x0, x19
   14e30:	bl	15668 <__sanitizer_set_report_fd@@Base+0x2824>
   14e34:	cbz	x0, 14f8c <__sanitizer_set_report_fd@@Base+0x2148>
   14e38:	ldrb	w0, [x27]
   14e3c:	cbz	w0, 14f8c <__sanitizer_set_report_fd@@Base+0x2148>
   14e40:	ldr	x0, [x20, #18536]
   14e44:	cbz	x0, 14f8c <__sanitizer_set_report_fd@@Base+0x2148>
   14e48:	stp	x21, x22, [sp, #16]
   14e4c:	stp	x23, x24, [sp, #32]
   14e50:	add	x21, x20, #0x4, lsl #12
   14e54:	add	x21, x21, #0x870
   14e58:	ldr	x22, [sp, #96]
   14e5c:	b	14f50 <__sanitizer_set_report_fd@@Base+0x210c>
   14e60:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   14e64:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14e68:	ldr	x1, [x1, #4016]
   14e6c:	str	x0, [x1]
   14e70:	b	14da8 <__sanitizer_set_report_fd@@Base+0x1f64>
   14e74:	stp	x21, x22, [sp, #16]
   14e78:	stp	x23, x24, [sp, #32]
   14e7c:	stp	x25, x26, [sp, #48]
   14e80:	stp	x27, x28, [sp, #64]
   14e84:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   14e88:	add	x0, x0, #0x338
   14e8c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   14e90:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   14e94:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14e98:	ldr	x0, [x0, #4016]
   14e9c:	ldr	x0, [x0]
   14ea0:	cbz	x0, 14f0c <__sanitizer_set_report_fd@@Base+0x20c8>
   14ea4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14ea8:	ldr	x0, [x0, #4016]
   14eac:	ldr	x0, [x0]
   14eb0:	sub	x1, x0, #0x1
   14eb4:	tst	x1, x0
   14eb8:	b.ne	14f20 <__sanitizer_set_report_fd@@Base+0x20dc>  // b.any
   14ebc:	stp	x21, x22, [sp, #16]
   14ec0:	add	x21, x0, #0xfff
   14ec4:	neg	x0, x0
   14ec8:	and	x21, x21, x0
   14ecc:	mov	w2, #0x0                   	// #0
   14ed0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   14ed4:	add	x1, x1, #0x350
   14ed8:	mov	x0, x21
   14edc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   14ee0:	mov	x22, x0
   14ee4:	mov	x2, #0x0                   	// #0
   14ee8:	mov	x1, x27
   14eec:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   14ef0:	mov	x1, x28
   14ef4:	mov	x0, x27
   14ef8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   14efc:	mov	x28, x21
   14f00:	mov	x27, x22
   14f04:	ldp	x21, x22, [sp, #16]
   14f08:	b	14e0c <__sanitizer_set_report_fd@@Base+0x1fc8>
   14f0c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   14f10:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14f14:	ldr	x1, [x1, #4016]
   14f18:	str	x0, [x1]
   14f1c:	b	14ea4 <__sanitizer_set_report_fd@@Base+0x2060>
   14f20:	stp	x21, x22, [sp, #16]
   14f24:	stp	x23, x24, [sp, #32]
   14f28:	stp	x25, x26, [sp, #48]
   14f2c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   14f30:	add	x0, x0, #0x338
   14f34:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   14f38:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   14f3c:	add	x22, x22, #0x1
   14f40:	add	x21, x21, #0x20
   14f44:	ldr	x0, [x20, #18536]
   14f48:	cmp	x0, x22
   14f4c:	b.ls	14f84 <__sanitizer_set_report_fd@@Base+0x2140>  // b.plast
   14f50:	ldrb	w0, [x21, #24]
   14f54:	cbnz	w0, 14f3c <__sanitizer_set_report_fd@@Base+0x20f8>
   14f58:	ldr	x0, [x21, #16]
   14f5c:	cbnz	x0, 14f3c <__sanitizer_set_report_fd@@Base+0x20f8>
   14f60:	mov	x1, x19
   14f64:	ldr	x0, [x21]
   14f68:	bl	f414 <__sancov_default_options@@Base+0x2718>
   14f6c:	and	w0, w0, #0xff
   14f70:	cbz	w0, 14f3c <__sanitizer_set_report_fd@@Base+0x20f8>
   14f74:	mov	x0, x27
   14f78:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   14f7c:	str	x0, [x21, #16]
   14f80:	b	14f3c <__sanitizer_set_report_fd@@Base+0x20f8>
   14f84:	ldp	x21, x22, [sp, #16]
   14f88:	ldp	x23, x24, [sp, #32]
   14f8c:	strb	wzr, [sp, #168]
   14f90:	add	x0, sp, #0x90
   14f94:	bl	17630 <__sanitizer_set_report_fd@@Base+0x47ec>
   14f98:	ldr	x0, [x20, #18536]
   14f9c:	cbnz	x0, 14fe4 <__sanitizer_set_report_fd@@Base+0x21a0>
   14fa0:	add	x0, x20, #0xc, lsl #12
   14fa4:	ldrb	w0, [x0, #2160]
   14fa8:	cbz	w0, 15300 <__sanitizer_set_report_fd@@Base+0x24bc>
   14fac:	stp	x21, x22, [sp, #16]
   14fb0:	ldr	x21, [sp, #144]
   14fb4:	ldr	x22, [sp, #160]
   14fb8:	add	x22, x22, x22, lsl #3
   14fbc:	add	x22, x21, x22, lsl #3
   14fc0:	cmp	x22, x21
   14fc4:	b.eq	15350 <__sanitizer_set_report_fd@@Base+0x250c>  // b.none
   14fc8:	stp	x23, x24, [sp, #32]
   14fcc:	stp	x25, x26, [sp, #48]
   14fd0:	adrp	x23, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   14fd4:	ldr	x23, [x23, #3896]
   14fd8:	adrp	x25, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   14fdc:	add	x25, x25, #0x390
   14fe0:	b	152dc <__sanitizer_set_report_fd@@Base+0x2498>
   14fe4:	stp	x21, x22, [sp, #16]
   14fe8:	stp	x23, x24, [sp, #32]
   14fec:	stp	x25, x26, [sp, #48]
   14ff0:	add	x25, x20, #0x4, lsl #12
   14ff4:	add	x25, x25, #0x870
   14ff8:	ldr	x0, [sp, #96]
   14ffc:	str	x0, [sp, #136]
   15000:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15004:	ldr	x0, [x0, #3896]
   15008:	str	x0, [sp, #112]
   1500c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15010:	add	x0, x0, #0x260
   15014:	str	x0, [sp, #128]
   15018:	ldr	x22, [sp, #144]
   1501c:	ldr	x0, [sp, #160]
   15020:	add	x0, x0, x0, lsl #3
   15024:	add	x0, x22, x0, lsl #3
   15028:	str	x0, [sp, #104]
   1502c:	cmp	x22, x0
   15030:	b.eq	15154 <__sanitizer_set_report_fd@@Base+0x2310>  // b.none
   15034:	mov	w24, #0x0                   	// #0
   15038:	b	15144 <__sanitizer_set_report_fd@@Base+0x2300>
   1503c:	ldr	x0, [sp, #136]
   15040:	add	x20, x20, x0, lsl #5
   15044:	ldr	x4, [x26]
   15048:	ldr	x3, [x20, #18552]
   1504c:	ldr	x2, [x20, #18544]
   15050:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15054:	ldr	x0, [x0, #4024]
   15058:	ldr	x1, [x0]
   1505c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15060:	add	x0, x0, #0x208
   15064:	bl	1a3fc <OnPrint@@Base+0x3d8>
   15068:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1506c:	ldr	x2, [x26]
   15070:	ldr	x1, [x23]
   15074:	ldr	x0, [sp, #128]
   15078:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1507c:	b	150f0 <__sanitizer_set_report_fd@@Base+0x22ac>
   15080:	mov	x4, #0x80                  	// #128
   15084:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15088:	add	x2, x2, #0x2a0
   1508c:	mov	w1, #0x52                  	// #82
   15090:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15094:	add	x0, x0, #0x2f0
   15098:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1509c:	ldr	x19, [x19]
   150a0:	cbz	x19, 15134 <__sanitizer_set_report_fd@@Base+0x22f0>
   150a4:	ldrb	w21, [x19, #24]
   150a8:	cbz	w21, 1509c <__sanitizer_set_report_fd@@Base+0x2258>
   150ac:	mov	x23, x25
   150b0:	ldr	x1, [x26]
   150b4:	ldr	x0, [x25]
   150b8:	bl	f414 <__sancov_default_options@@Base+0x2718>
   150bc:	and	w0, w0, #0xff
   150c0:	cbnz	w0, 150d8 <__sanitizer_set_report_fd@@Base+0x2294>
   150c4:	ldr	x0, [x25, #16]
   150c8:	cbz	x0, 1509c <__sanitizer_set_report_fd@@Base+0x2258>
   150cc:	ldr	x1, [x26]
   150d0:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   150d4:	cbnz	w0, 1509c <__sanitizer_set_report_fd@@Base+0x2258>
   150d8:	cbnz	w24, 1503c <__sanitizer_set_report_fd@@Base+0x21f8>
   150dc:	ldrb	w24, [x23, #24]
   150e0:	cbnz	w24, 1509c <__sanitizer_set_report_fd@@Base+0x2258>
   150e4:	ldr	x0, [sp, #112]
   150e8:	ldr	w0, [x0]
   150ec:	cbnz	w0, 1506c <__sanitizer_set_report_fd@@Base+0x2228>
   150f0:	mov	w0, #0x1                   	// #1
   150f4:	strb	w0, [x23, #24]
   150f8:	ldr	x0, [x26]
   150fc:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   15100:	str	x0, [x23, #8]
   15104:	ldr	x3, [x20]
   15108:	cmp	x3, #0x7f
   1510c:	b.hi	15080 <__sanitizer_set_report_fd@@Base+0x223c>  // b.pmore
   15110:	ldr	x1, [x19, #8]
   15114:	add	x0, x20, x3, lsl #4
   15118:	str	x1, [x0, #8]
   1511c:	ldr	x1, [x19, #16]
   15120:	str	x1, [x0, #16]
   15124:	add	x3, x3, #0x1
   15128:	dmb	ish
   1512c:	str	x3, [x20]
   15130:	mov	w24, w21
   15134:	add	x22, x22, #0x48
   15138:	ldr	x0, [sp, #104]
   1513c:	cmp	x0, x22
   15140:	b.eq	15158 <__sanitizer_set_report_fd@@Base+0x2314>  // b.none
   15144:	mov	x26, x22
   15148:	ldr	x19, [x22, #56]
   1514c:	cbnz	x19, 150a4 <__sanitizer_set_report_fd@@Base+0x2260>
   15150:	b	15134 <__sanitizer_set_report_fd@@Base+0x22f0>
   15154:	mov	w24, #0x0                   	// #0
   15158:	ldrb	w0, [x25, #24]
   1515c:	eor	w0, w0, #0x1
   15160:	orr	w24, w24, w0
   15164:	tst	w24, #0xff
   15168:	b.eq	1519c <__sanitizer_set_report_fd@@Base+0x2358>  // b.none
   1516c:	ldr	x0, [sp, #136]
   15170:	add	x0, x0, #0x1
   15174:	mov	x1, x0
   15178:	str	x0, [sp, #136]
   1517c:	add	x25, x25, #0x20
   15180:	ldr	x0, [x20, #18536]
   15184:	cmp	x0, x1
   15188:	b.hi	15018 <__sanitizer_set_report_fd@@Base+0x21d4>  // b.pmore
   1518c:	ldp	x21, x22, [sp, #16]
   15190:	ldp	x23, x24, [sp, #32]
   15194:	ldp	x25, x26, [sp, #48]
   15198:	b	14fa0 <__sanitizer_set_report_fd@@Base+0x215c>
   1519c:	ldr	x0, [sp, #136]
   151a0:	add	x20, x20, x0, lsl #5
   151a4:	ldr	x3, [x20, #18544]
   151a8:	ldr	x2, [x20, #18552]
   151ac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   151b0:	ldr	x0, [x0, #4024]
   151b4:	ldr	x1, [x0]
   151b8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   151bc:	add	x0, x0, #0x338
   151c0:	bl	1a3fc <OnPrint@@Base+0x3d8>
   151c4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   151c8:	add	x1, x1, #0x1
   151cc:	add	x0, x0, #0x10
   151d0:	cmp	x4, x1
   151d4:	b.eq	15238 <__sanitizer_set_report_fd@@Base+0x23f4>  // b.none
   151d8:	ldr	x2, [x0]
   151dc:	cmp	x3, x2
   151e0:	b.cc	151c8 <__sanitizer_set_report_fd@@Base+0x2384>  // b.lo, b.ul, b.last
   151e4:	ldr	x2, [x0, #8]
   151e8:	cmp	x3, x2
   151ec:	b.cs	151c8 <__sanitizer_set_report_fd@@Base+0x2384>  // b.hs, b.nlast
   151f0:	ldr	x1, [x19, #16]
   151f4:	sub	x1, x1, #0x1
   151f8:	ldr	x3, [x20, #2056]
   151fc:	dmb	ish
   15200:	cbz	x3, 15238 <__sanitizer_set_report_fd@@Base+0x23f4>
   15204:	ldr	x0, [sp, #96]
   15208:	b	1521c <__sanitizer_set_report_fd@@Base+0x23d8>
   1520c:	add	x0, x0, #0x1
   15210:	add	x5, x5, #0x10
   15214:	cmp	x3, x0
   15218:	b.eq	15238 <__sanitizer_set_report_fd@@Base+0x23f4>  // b.none
   1521c:	ldr	x2, [x5]
   15220:	cmp	x1, x2
   15224:	b.cc	1520c <__sanitizer_set_report_fd@@Base+0x23c8>  // b.lo, b.ul, b.last
   15228:	ldr	x2, [x5, #8]
   1522c:	cmp	x1, x2
   15230:	b.cc	1526c <__sanitizer_set_report_fd@@Base+0x2428>  // b.lo, b.ul, b.last
   15234:	b	1520c <__sanitizer_set_report_fd@@Base+0x23c8>
   15238:	ldr	w0, [x23]
   1523c:	cbnz	w0, 1529c <__sanitizer_set_report_fd@@Base+0x2458>
   15240:	ldr	x3, [x20, #2056]
   15244:	cmp	x3, #0x3ff
   15248:	b.hi	152b4 <__sanitizer_set_report_fd@@Base+0x2470>  // b.pmore
   1524c:	ldr	x1, [x19, #8]
   15250:	add	x0, x20, x3, lsl #4
   15254:	str	x1, [x0, #2064]
   15258:	ldr	x1, [x19, #16]
   1525c:	str	x1, [x0, #2072]
   15260:	add	x3, x3, #0x1
   15264:	dmb	ish
   15268:	str	x3, [x20, #2056]
   1526c:	ldr	x19, [x19]
   15270:	cbz	x19, 152d0 <__sanitizer_set_report_fd@@Base+0x248c>
   15274:	ldrb	w0, [x19, #24]
   15278:	cbz	w0, 1526c <__sanitizer_set_report_fd@@Base+0x2428>
   1527c:	ldr	x3, [x19, #8]
   15280:	ldr	x4, [x20, #2056]
   15284:	dmb	ish
   15288:	cbz	x4, 15238 <__sanitizer_set_report_fd@@Base+0x23f4>
   1528c:	add	x5, x20, #0x810
   15290:	mov	x0, x5
   15294:	ldr	x1, [sp, #96]
   15298:	b	151d8 <__sanitizer_set_report_fd@@Base+0x2394>
   1529c:	ldr	x3, [x24]
   152a0:	ldr	x2, [x19, #16]
   152a4:	ldr	x1, [x19, #8]
   152a8:	mov	x0, x25
   152ac:	bl	1a3fc <OnPrint@@Base+0x3d8>
   152b0:	b	15240 <__sanitizer_set_report_fd@@Base+0x23fc>
   152b4:	mov	x4, #0x400                 	// #1024
   152b8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   152bc:	add	x2, x2, #0x3c8
   152c0:	mov	w1, #0x6f                  	// #111
   152c4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   152c8:	add	x0, x0, #0x2f0
   152cc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   152d0:	add	x21, x21, #0x48
   152d4:	cmp	x22, x21
   152d8:	b.eq	152f4 <__sanitizer_set_report_fd@@Base+0x24b0>  // b.none
   152dc:	mov	x24, x21
   152e0:	ldrb	w0, [x21, #44]
   152e4:	cbz	w0, 152d0 <__sanitizer_set_report_fd@@Base+0x248c>
   152e8:	ldr	x19, [x21, #56]
   152ec:	cbnz	x19, 15274 <__sanitizer_set_report_fd@@Base+0x2430>
   152f0:	b	152d0 <__sanitizer_set_report_fd@@Base+0x248c>
   152f4:	ldp	x21, x22, [sp, #16]
   152f8:	ldp	x23, x24, [sp, #32]
   152fc:	ldp	x25, x26, [sp, #48]
   15300:	ldr	x19, [sp, #144]
   15304:	ldr	x20, [sp, #160]
   15308:	add	x20, x20, x20, lsl #3
   1530c:	add	x20, x19, x20, lsl #3
   15310:	cmp	x19, x20
   15314:	b.eq	1532c <__sanitizer_set_report_fd@@Base+0x24e8>  // b.none
   15318:	mov	x0, x19
   1531c:	bl	f180 <__sancov_default_options@@Base+0x2484>
   15320:	add	x19, x19, #0x48
   15324:	cmp	x20, x19
   15328:	b.ne	15318 <__sanitizer_set_report_fd@@Base+0x24d4>  // b.any
   1532c:	mov	x1, x28
   15330:	mov	x0, x27
   15334:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   15338:	ldr	x0, [sp, #120]
   1533c:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   15340:	ldp	x27, x28, [sp, #64]
   15344:	ldr	x30, [sp, #80]
   15348:	ldp	x19, x20, [sp], #176
   1534c:	ret
   15350:	ldp	x21, x22, [sp, #16]
   15354:	b	1532c <__sanitizer_set_report_fd@@Base+0x24e8>
   15358:	str	x30, [sp, #-16]!
   1535c:	mov	x1, #0x0                   	// #0
   15360:	bl	14d78 <__sanitizer_set_report_fd@@Base+0x1f34>
   15364:	ldr	x30, [sp], #16
   15368:	ret
   1536c:	stp	x19, x20, [sp, #-64]!
   15370:	stp	x21, x30, [sp, #16]
   15374:	mov	x21, x0
   15378:	mov	x20, x1
   1537c:	mov	w19, w2
   15380:	mov	w2, #0x0                   	// #0
   15384:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15388:	add	x1, x1, #0x428
   1538c:	sbfiz	x0, x19, #3, #32
   15390:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   15394:	str	x0, [x20]
   15398:	mov	x5, #0x0                   	// #0
   1539c:	mov	x4, #0x100000              	// #1048576
   153a0:	add	x3, sp, #0x28
   153a4:	add	x2, sp, #0x30
   153a8:	add	x1, sp, #0x38
   153ac:	mov	x0, x21
   153b0:	bl	12634 <__sanitizer_cov_dump@@Base+0x2104>
   153b4:	and	w0, w0, #0xff
   153b8:	cbz	w0, 153dc <__sanitizer_set_report_fd@@Base+0x2598>
   153bc:	ldr	x0, [x20]
   153c0:	ldr	x1, [sp, #56]
   153c4:	str	x1, [x0]
   153c8:	mov	x0, #0x1                   	// #1
   153cc:	mov	w6, w0
   153d0:	sub	w5, w19, #0x1
   153d4:	sxtw	x5, w5
   153d8:	b	153f8 <__sanitizer_set_report_fd@@Base+0x25b4>
   153dc:	ldr	x0, [x20]
   153e0:	str	xzr, [x0]
   153e4:	ldp	x21, x30, [sp, #16]
   153e8:	ldp	x19, x20, [sp], #64
   153ec:	ret
   153f0:	add	w6, w6, #0x1
   153f4:	add	x0, x0, #0x1
   153f8:	ldr	x2, [sp, #56]
   153fc:	ldrb	w3, [x2, x0]
   15400:	cbnz	w3, 153f4 <__sanitizer_set_report_fd@@Base+0x25b0>
   15404:	add	x3, x0, #0x1
   15408:	add	x4, x2, x3
   1540c:	ldrb	w1, [x2, x3]
   15410:	cbz	w1, 15444 <__sanitizer_set_report_fd@@Base+0x2600>
   15414:	sxtw	x3, w6
   15418:	ldr	x1, [x20]
   1541c:	str	x4, [x1, x3, lsl #3]
   15420:	mov	x4, x5
   15424:	cmp	x3, x5
   15428:	b.ls	153f0 <__sanitizer_set_report_fd@@Base+0x25ac>  // b.plast
   1542c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15430:	add	x2, x2, #0x440
   15434:	mov	w1, #0x23f                 	// #575
   15438:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1543c:	add	x0, x0, #0x460
   15440:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15444:	ldr	x0, [x20]
   15448:	str	xzr, [x0, w6, sxtw #3]
   1544c:	b	153e4 <__sanitizer_set_report_fd@@Base+0x25a0>
   15450:	stp	x19, x30, [sp, #-16]!
   15454:	mov	x19, x1
   15458:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1545c:	ldr	x2, [x2, #4048]
   15460:	cbz	x2, 15488 <__sanitizer_set_report_fd@@Base+0x2644>
   15464:	ldr	x3, [x2]
   15468:	mov	x1, x3
   1546c:	ldr	x2, [x1], #8
   15470:	str	x1, [x0]
   15474:	add	x0, x3, w2, sxtw #3
   15478:	add	x0, x0, #0x10
   1547c:	str	x0, [x19]
   15480:	ldp	x19, x30, [sp], #16
   15484:	ret
   15488:	mov	w2, #0x7d0                 	// #2000
   1548c:	mov	x1, x0
   15490:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15494:	add	x0, x0, #0x4a0
   15498:	bl	1536c <__sanitizer_set_report_fd@@Base+0x2528>
   1549c:	mov	w2, #0x7d0                 	// #2000
   154a0:	mov	x1, x19
   154a4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   154a8:	add	x0, x0, #0x4b8
   154ac:	bl	1536c <__sanitizer_set_report_fd@@Base+0x2528>
   154b0:	b	15480 <__sanitizer_set_report_fd@@Base+0x263c>
   154b4:	mov	x2, x0
   154b8:	mov	w0, #0x0                   	// #0
   154bc:	cmn	x2, #0x1, lsl #12
   154c0:	b.hi	154c8 <__sanitizer_set_report_fd@@Base+0x2684>  // b.pmore
   154c4:	ret
   154c8:	mov	w0, #0x1                   	// #1
   154cc:	cbz	x1, 154c4 <__sanitizer_set_report_fd@@Base+0x2680>
   154d0:	neg	w2, w2
   154d4:	str	w2, [x1]
   154d8:	b	154c4 <__sanitizer_set_report_fd@@Base+0x2680>
   154dc:	mov	x8, #0xde                  	// #222
   154e0:	sxtw	x2, w2
   154e4:	sxtw	x3, w3
   154e8:	sxtw	x4, w4
   154ec:	svc	#0x0
   154f0:	ret
   154f4:	mov	x8, #0xd7                  	// #215
   154f8:	svc	#0x0
   154fc:	ret
   15500:	mov	x8, #0xe2                  	// #226
   15504:	sxtw	x2, w2
   15508:	svc	#0x0
   1550c:	ret
   15510:	mov	x8, #0x39                  	// #57
   15514:	sxtw	x0, w0
   15518:	svc	#0x0
   1551c:	ret
   15520:	mov	x3, x0
   15524:	mov	w2, w1
   15528:	mov	x8, #0x38                  	// #56
   1552c:	mov	x0, #0xffffffffffffff9c    	// #-100
   15530:	mov	x1, x3
   15534:	sxtw	x2, w2
   15538:	svc	#0x0
   1553c:	ret
   15540:	mov	x5, x0
   15544:	mov	w4, w1
   15548:	mov	w3, w2
   1554c:	mov	x8, #0x38                  	// #56
   15550:	mov	x0, #0xffffffffffffff9c    	// #-100
   15554:	mov	x1, x5
   15558:	sxtw	x2, w4
   1555c:	mov	w3, w3
   15560:	svc	#0x0
   15564:	ret
   15568:	sxtw	x3, w0
   1556c:	mov	x8, #0x3f                  	// #63
   15570:	b	1557c <__sanitizer_set_report_fd@@Base+0x2738>
   15574:	cmn	w0, #0x4
   15578:	b.ne	1558c <__sanitizer_set_report_fd@@Base+0x2748>  // b.any
   1557c:	mov	x0, x3
   15580:	svc	#0x0
   15584:	cmn	x0, #0x1, lsl #12
   15588:	b.hi	15574 <__sanitizer_set_report_fd@@Base+0x2730>  // b.pmore
   1558c:	ret
   15590:	sxtw	x3, w0
   15594:	mov	x8, #0x40                  	// #64
   15598:	b	155a4 <__sanitizer_set_report_fd@@Base+0x2760>
   1559c:	cmn	w0, #0x4
   155a0:	b.ne	155b4 <__sanitizer_set_report_fd@@Base+0x2770>  // b.any
   155a4:	mov	x0, x3
   155a8:	svc	#0x0
   155ac:	cmn	x0, #0x1, lsl #12
   155b0:	b.hi	1559c <__sanitizer_set_report_fd@@Base+0x2758>  // b.pmore
   155b4:	ret
   155b8:	sxtw	x2, w0
   155bc:	mov	x8, #0x2e                  	// #46
   155c0:	b	155cc <__sanitizer_set_report_fd@@Base+0x2788>
   155c4:	cmn	w0, #0x4
   155c8:	b.ne	155dc <__sanitizer_set_report_fd@@Base+0x2798>  // b.any
   155cc:	mov	x0, x2
   155d0:	svc	#0x0
   155d4:	cmn	x0, #0x1, lsl #12
   155d8:	b.hi	155c4 <__sanitizer_set_report_fd@@Base+0x2780>  // b.pmore
   155dc:	ret
   155e0:	mov	x3, x0
   155e4:	mov	x2, x1
   155e8:	mov	x8, #0x4f                  	// #79
   155ec:	mov	x0, #0xffffffffffffff9c    	// #-100
   155f0:	mov	x1, x3
   155f4:	mov	x3, #0x0                   	// #0
   155f8:	svc	#0x0
   155fc:	ret
   15600:	mov	x3, x0
   15604:	mov	x2, x1
   15608:	mov	x8, #0x4f                  	// #79
   1560c:	mov	x0, #0xffffffffffffff9c    	// #-100
   15610:	mov	x1, x3
   15614:	mov	x3, #0x100                 	// #256
   15618:	svc	#0x0
   1561c:	ret
   15620:	mov	x8, #0x50                  	// #80
   15624:	sxtw	x0, w0
   15628:	svc	#0x0
   1562c:	ret
   15630:	str	x30, [sp, #-144]!
   15634:	add	x1, sp, #0x10
   15638:	bl	15620 <__sanitizer_set_report_fd@@Base+0x27dc>
   1563c:	cmp	x0, #0x0
   15640:	ldr	x0, [sp, #64]
   15644:	csinv	x0, x0, xzr, eq  // eq = none
   15648:	ldr	x30, [sp], #144
   1564c:	ret
   15650:	mov	x8, #0x18                  	// #24
   15654:	sxtw	x0, w0
   15658:	sxtw	x1, w1
   1565c:	mov	x2, #0x0                   	// #0
   15660:	svc	#0x0
   15664:	ret
   15668:	mov	x5, x0
   1566c:	mov	x4, x1
   15670:	mov	x3, x2
   15674:	mov	x8, #0x4e                  	// #78
   15678:	mov	x0, #0xffffffffffffff9c    	// #-100
   1567c:	mov	x1, x5
   15680:	mov	x2, x4
   15684:	svc	#0x0
   15688:	ret
   1568c:	mov	x1, x0
   15690:	mov	x8, #0x23                  	// #35
   15694:	mov	x0, #0xffffffffffffff9c    	// #-100
   15698:	mov	x2, #0x0                   	// #0
   1569c:	svc	#0x0
   156a0:	ret
   156a4:	mov	x2, x0
   156a8:	mov	x3, x1
   156ac:	mov	x8, #0x26                  	// #38
   156b0:	mov	x0, #0xffffffffffffff9c    	// #-100
   156b4:	mov	x1, x2
   156b8:	mov	x2, x0
   156bc:	svc	#0x0
   156c0:	ret
   156c4:	mov	x8, #0x7c                  	// #124
   156c8:	svc	#0x0
   156cc:	ret
   156d0:	str	x30, [sp, #-16]!
   156d4:	mov	x8, #0x5e                  	// #94
   156d8:	sxtw	x0, w0
   156dc:	svc	#0x0
   156e0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   156e4:	sub	sp, sp, #0x10
   156e8:	mov	x0, #0x1                   	// #1
   156ec:	str	x0, [sp]
   156f0:	str	xzr, [sp, #8]
   156f4:	mov	x1, sp
   156f8:	mov	x8, #0x65                  	// #101
   156fc:	mov	x0, x1
   15700:	svc	#0x0
   15704:	cmp	w0, #0x0
   15708:	ldr	w0, [sp]
   1570c:	csel	w0, w0, wzr, ne  // ne = any
   15710:	add	sp, sp, #0x10
   15714:	ret
   15718:	mov	x8, #0xdd                  	// #221
   1571c:	svc	#0x0
   15720:	ret
   15724:	sub	sp, sp, #0x80
   15728:	mov	x1, x0
   1572c:	mov	x8, #0x4f                  	// #79
   15730:	mov	x0, #0xffffffffffffff9c    	// #-100
   15734:	mov	x2, sp
   15738:	mov	x3, #0x0                   	// #0
   1573c:	svc	#0x0
   15740:	cbnz	x0, 1575c <__sanitizer_set_report_fd@@Base+0x2918>
   15744:	ldr	w0, [sp, #16]
   15748:	and	w0, w0, #0xf000
   1574c:	cmp	w0, #0x8, lsl #12
   15750:	cset	w0, eq  // eq = none
   15754:	add	sp, sp, #0x80
   15758:	ret
   1575c:	mov	w0, #0x0                   	// #0
   15760:	b	15754 <__sanitizer_set_report_fd@@Base+0x2910>
   15764:	mov	x8, #0xb2                  	// #178
   15768:	svc	#0x0
   1576c:	ret
   15770:	mov	x8, #0x83                  	// #131
   15774:	sxtw	x0, w0
   15778:	sxtw	x2, w2
   1577c:	svc	#0x0
   15780:	ret
   15784:	stp	x19, x30, [sp, #-32]!
   15788:	add	x19, sp, #0x10
   1578c:	mov	x2, #0x10                  	// #16
   15790:	mov	w1, #0x0                   	// #0
   15794:	mov	x0, x19
   15798:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1579c:	mov	x8, #0xa9                  	// #169
   157a0:	mov	x0, x19
   157a4:	mov	x1, #0x0                   	// #0
   157a8:	svc	#0x0
   157ac:	ldr	x0, [sp, #24]
   157b0:	lsl	x1, x0, #5
   157b4:	sub	x1, x1, x0
   157b8:	add	x1, x0, x1, lsl #2
   157bc:	lsl	x1, x1, #3
   157c0:	ldr	x2, [sp, #16]
   157c4:	mov	x0, #0xca00                	// #51712
   157c8:	movk	x0, #0x3b9a, lsl #16
   157cc:	madd	x0, x2, x0, x1
   157d0:	ldp	x19, x30, [sp], #32
   157d4:	ret
   157d8:	mov	x8, #0x71                  	// #113
   157dc:	sxtw	x0, w0
   157e0:	svc	#0x0
   157e4:	ret
   157e8:	stp	x19, x20, [sp, #-64]!
   157ec:	stp	x23, x30, [sp, #32]
   157f0:	mov	x23, x0
   157f4:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   157f8:	ldrb	w0, [x0, #3576]
   157fc:	cbz	w0, 15848 <__sanitizer_set_report_fd@@Base+0x2a04>
   15800:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   15804:	ldr	x19, [x0, #3592]
   15808:	cbz	x19, 15908 <__sanitizer_set_report_fd@@Base+0x2ac4>
   1580c:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   15810:	ldr	x0, [x0, #3584]
   15814:	mov	x19, #0x0                   	// #0
   15818:	cbz	x0, 15908 <__sanitizer_set_report_fd@@Base+0x2ac4>
   1581c:	stp	x21, x22, [sp, #16]
   15820:	mov	x0, x23
   15824:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   15828:	mov	x22, x0
   1582c:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   15830:	ldr	x20, [x0, #3592]
   15834:	ldrb	w0, [x20]
   15838:	cbz	w0, 158f8 <__sanitizer_set_report_fd@@Base+0x2ab4>
   1583c:	adrp	x21, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   15840:	add	x21, x21, #0xdf8
   15844:	b	15898 <__sanitizer_set_report_fd@@Base+0x2a54>
   15848:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1584c:	add	x1, x0, #0xdf8
   15850:	mov	w2, #0x1                   	// #1
   15854:	strb	w2, [x0, #3576]
   15858:	mov	x5, #0x0                   	// #0
   1585c:	mov	x4, #0x4000000             	// #67108864
   15860:	add	x3, x1, #0x8
   15864:	add	x2, sp, #0x38
   15868:	add	x1, x1, #0x10
   1586c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15870:	add	x0, x0, #0x4b8
   15874:	bl	12634 <__sanitizer_cov_dump@@Base+0x2104>
   15878:	and	w0, w0, #0xff
   1587c:	cbnz	w0, 15800 <__sanitizer_set_report_fd@@Base+0x29bc>
   15880:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   15884:	str	xzr, [x0, #3592]
   15888:	b	15800 <__sanitizer_set_report_fd@@Base+0x29bc>
   1588c:	add	x20, x19, #0x1
   15890:	ldrb	w0, [x19, #1]
   15894:	cbz	w0, 158ec <__sanitizer_set_report_fd@@Base+0x2aa8>
   15898:	ldr	x1, [x21, #16]
   1589c:	sub	x1, x20, x1
   158a0:	ldr	x2, [x21, #8]
   158a4:	sub	x2, x2, x1
   158a8:	mov	w1, #0x0                   	// #0
   158ac:	mov	x0, x20
   158b0:	bl	1453c <__sanitizer_set_report_fd@@Base+0x16f8>
   158b4:	mov	x19, x0
   158b8:	cbz	x0, 15904 <__sanitizer_set_report_fd@@Base+0x2ac0>
   158bc:	mov	x2, x22
   158c0:	mov	x1, x23
   158c4:	mov	x0, x20
   158c8:	bl	145a0 <__sanitizer_set_report_fd@@Base+0x175c>
   158cc:	cbnz	w0, 1588c <__sanitizer_set_report_fd@@Base+0x2a48>
   158d0:	ldrb	w0, [x20, x22]
   158d4:	cmp	w0, #0x3d
   158d8:	b.ne	1588c <__sanitizer_set_report_fd@@Base+0x2a48>  // b.any
   158dc:	add	x19, x22, #0x1
   158e0:	add	x19, x20, x19
   158e4:	ldp	x21, x22, [sp, #16]
   158e8:	b	15908 <__sanitizer_set_report_fd@@Base+0x2ac4>
   158ec:	mov	x19, #0x0                   	// #0
   158f0:	ldp	x21, x22, [sp, #16]
   158f4:	b	15908 <__sanitizer_set_report_fd@@Base+0x2ac4>
   158f8:	mov	x19, #0x0                   	// #0
   158fc:	ldp	x21, x22, [sp, #16]
   15900:	b	15908 <__sanitizer_set_report_fd@@Base+0x2ac4>
   15904:	ldp	x21, x22, [sp, #16]
   15908:	mov	x0, x19
   1590c:	ldp	x23, x30, [sp, #32]
   15910:	ldp	x19, x20, [sp], #64
   15914:	ret
   15918:	str	x30, [sp, #-32]!
   1591c:	add	x1, sp, #0x10
   15920:	add	x0, sp, #0x18
   15924:	bl	15450 <__sanitizer_set_report_fd@@Base+0x260c>
   15928:	ldr	x0, [sp, #24]
   1592c:	ldr	x30, [sp], #32
   15930:	ret
   15934:	str	x30, [sp, #-32]!
   15938:	add	x1, sp, #0x10
   1593c:	add	x0, sp, #0x18
   15940:	bl	15450 <__sanitizer_set_report_fd@@Base+0x260c>
   15944:	ldr	x2, [sp, #16]
   15948:	ldr	x1, [sp, #24]
   1594c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15950:	add	x0, x0, #0x4d0
   15954:	bl	15718 <__sanitizer_set_report_fd@@Base+0x28d4>
   15958:	cmn	x0, #0x1, lsl #12
   1595c:	b.hi	15980 <__sanitizer_set_report_fd@@Base+0x2b3c>  // b.pmore
   15960:	mov	x4, #0x1                   	// #1
   15964:	mov	x3, #0x0                   	// #0
   15968:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1596c:	add	x2, x2, #0x500
   15970:	mov	w1, #0x286                 	// #646
   15974:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15978:	add	x0, x0, #0x460
   1597c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15980:	neg	w1, w0
   15984:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15988:	add	x0, x0, #0x4e0
   1598c:	bl	1a368 <OnPrint@@Base+0x344>
   15990:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   15994:	str	x30, [sp, #-16]!
   15998:	mov	x2, #0x58                  	// #88
   1599c:	mov	w1, #0x0                   	// #0
   159a0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   159a4:	ldr	x30, [sp], #16
   159a8:	ret
   159ac:	ldr	x3, [x0, #80]
   159b0:	mov	x6, x0
   159b4:	mov	w1, #0x1                   	// #1
   159b8:	cbnz	x3, 15a0c <__sanitizer_set_report_fd@@Base+0x2bc8>
   159bc:	ldxr	w0, [x6]
   159c0:	stxr	w2, w1, [x6]
   159c4:	cbnz	w2, 159bc <__sanitizer_set_report_fd@@Base+0x2b78>
   159c8:	dmb	ish
   159cc:	cbz	w0, 15a2c <__sanitizer_set_report_fd@@Base+0x2be8>
   159d0:	mov	w7, #0x2                   	// #2
   159d4:	mov	x8, #0x62                  	// #98
   159d8:	mov	x1, #0x80                  	// #128
   159dc:	mov	x2, #0x2                   	// #2
   159e0:	ldxr	w0, [x6]
   159e4:	stxr	w3, w7, [x6]
   159e8:	cbnz	w3, 159e0 <__sanitizer_set_report_fd@@Base+0x2b9c>
   159ec:	dmb	ish
   159f0:	cbz	w0, 15a2c <__sanitizer_set_report_fd@@Base+0x2be8>
   159f4:	mov	x0, x6
   159f8:	mov	x3, #0x0                   	// #0
   159fc:	mov	x4, #0x0                   	// #0
   15a00:	mov	x5, #0x0                   	// #0
   15a04:	svc	#0x0
   15a08:	b	159e0 <__sanitizer_set_report_fd@@Base+0x2b9c>
   15a0c:	str	x30, [sp, #-16]!
   15a10:	mov	x4, #0x0                   	// #0
   15a14:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15a18:	add	x2, x2, #0x530
   15a1c:	mov	w1, #0x298                 	// #664
   15a20:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15a24:	add	x0, x0, #0x460
   15a28:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15a2c:	ret
   15a30:	dmb	ish
   15a34:	ldxr	w1, [x0]
   15a38:	stxr	w2, wzr, [x0]
   15a3c:	cbnz	w2, 15a34 <__sanitizer_set_report_fd@@Base+0x2bf0>
   15a40:	dmb	ish
   15a44:	cbz	w1, 15a54 <__sanitizer_set_report_fd@@Base+0x2c10>
   15a48:	cmp	w1, #0x2
   15a4c:	b.eq	15a78 <__sanitizer_set_report_fd@@Base+0x2c34>  // b.none
   15a50:	ret
   15a54:	str	x30, [sp, #-16]!
   15a58:	mov	x4, #0x0                   	// #0
   15a5c:	mov	x3, #0x0                   	// #0
   15a60:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15a64:	add	x2, x2, #0x548
   15a68:	mov	w1, #0x2ab                 	// #683
   15a6c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15a70:	add	x0, x0, #0x460
   15a74:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15a78:	mov	x8, #0x62                  	// #98
   15a7c:	mov	x1, #0x81                  	// #129
   15a80:	mov	x2, #0x1                   	// #1
   15a84:	mov	x3, #0x0                   	// #0
   15a88:	mov	x4, #0x0                   	// #0
   15a8c:	mov	x5, #0x0                   	// #0
   15a90:	svc	#0x0
   15a94:	b	15a50 <__sanitizer_set_report_fd@@Base+0x2c0c>
   15a98:	ldr	w0, [x0]
   15a9c:	cbz	w0, 15aa4 <__sanitizer_set_report_fd@@Base+0x2c60>
   15aa0:	ret
   15aa4:	str	x30, [sp, #-16]!
   15aa8:	mov	x4, #0x0                   	// #0
   15aac:	mov	x3, #0x0                   	// #0
   15ab0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15ab4:	add	x2, x2, #0x568
   15ab8:	mov	w1, #0x2b9                 	// #697
   15abc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15ac0:	add	x0, x0, #0x460
   15ac4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15ac8:	mov	x8, #0x75                  	// #117
   15acc:	sxtw	x0, w0
   15ad0:	sxtw	x1, w1
   15ad4:	svc	#0x0
   15ad8:	ret
   15adc:	mov	x8, #0x104                 	// #260
   15ae0:	sxtw	x0, w0
   15ae4:	sxtw	x2, w2
   15ae8:	mov	x3, #0x0                   	// #0
   15aec:	svc	#0x0
   15af0:	ret
   15af4:	mov	x8, #0xac                  	// #172
   15af8:	svc	#0x0
   15afc:	ret
   15b00:	mov	x8, #0xad                  	// #173
   15b04:	svc	#0x0
   15b08:	ret
   15b0c:	mov	x8, #0x3d                  	// #61
   15b10:	sxtw	x0, w0
   15b14:	mov	w2, w2
   15b18:	svc	#0x0
   15b1c:	ret
   15b20:	mov	x8, #0x3e                  	// #62
   15b24:	sxtw	x0, w0
   15b28:	sxtw	x2, w2
   15b2c:	svc	#0x0
   15b30:	ret
   15b34:	mov	x8, #0xa7                  	// #167
   15b38:	sxtw	x0, w0
   15b3c:	svc	#0x0
   15b40:	ret
   15b44:	mov	x8, #0x84                  	// #132
   15b48:	svc	#0x0
   15b4c:	ret
   15b50:	mov	x8, #0xdc                  	// #220
   15b54:	mov	x0, #0x11                  	// #17
   15b58:	mov	x1, #0x0                   	// #0
   15b5c:	svc	#0x0
   15b60:	ret
   15b64:	stp	x19, x20, [sp, #-112]!
   15b68:	stp	x21, x22, [sp, #16]
   15b6c:	str	x30, [sp, #32]
   15b70:	mov	w20, w0
   15b74:	mov	x19, x1
   15b78:	mov	x21, x2
   15b7c:	mov	x2, #0x20                  	// #32
   15b80:	mov	w1, #0x0                   	// #0
   15b84:	add	x0, sp, #0x50
   15b88:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   15b8c:	mov	x2, #0x20                  	// #32
   15b90:	mov	w1, #0x0                   	// #0
   15b94:	add	x0, sp, #0x30
   15b98:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   15b9c:	cbz	x19, 15c44 <__sanitizer_set_report_fd@@Base+0x2e00>
   15ba0:	mov	x1, x19
   15ba4:	ldr	x0, [x1], #8
   15ba8:	str	x0, [sp, #80]
   15bac:	add	x22, sp, #0x50
   15bb0:	mov	x2, #0x8                   	// #8
   15bb4:	add	x0, sp, #0x68
   15bb8:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   15bbc:	ldr	w0, [x19, #136]
   15bc0:	orr	w0, w0, #0x4000000
   15bc4:	sxtw	x0, w0
   15bc8:	str	x0, [sp, #88]
   15bcc:	ldr	x0, [x19, #144]
   15bd0:	str	x0, [sp, #96]
   15bd4:	sxtw	x0, w20
   15bd8:	mov	x1, x22
   15bdc:	cmp	x21, #0x0
   15be0:	mov	x8, #0x86                  	// #134
   15be4:	add	x2, sp, #0x30
   15be8:	csel	x2, x2, xzr, ne  // ne = any
   15bec:	mov	x3, #0x8                   	// #8
   15bf0:	svc	#0x0
   15bf4:	mov	x19, x0
   15bf8:	cmp	x0, #0x0
   15bfc:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   15c00:	b.ne	15c18 <__sanitizer_set_report_fd@@Base+0x2dd4>  // b.any
   15c04:	mov	w0, w19
   15c08:	ldp	x21, x22, [sp, #16]
   15c0c:	ldr	x30, [sp, #32]
   15c10:	ldp	x19, x20, [sp], #112
   15c14:	ret
   15c18:	mov	x0, x21
   15c1c:	ldr	x1, [sp, #48]
   15c20:	str	x1, [x0], #8
   15c24:	mov	x2, x3
   15c28:	add	x1, sp, #0x48
   15c2c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   15c30:	ldr	x0, [sp, #56]
   15c34:	str	w0, [x21, #136]
   15c38:	ldr	x0, [sp, #64]
   15c3c:	str	x0, [x21, #144]
   15c40:	b	15c04 <__sanitizer_set_report_fd@@Base+0x2dc0>
   15c44:	sxtw	x0, w20
   15c48:	mov	x1, #0x0                   	// #0
   15c4c:	b	15bdc <__sanitizer_set_report_fd@@Base+0x2d98>
   15c50:	mov	x8, #0x87                  	// #135
   15c54:	sxtw	x0, w0
   15c58:	mov	x3, #0x8                   	// #8
   15c5c:	svc	#0x0
   15c60:	ret
   15c64:	str	x30, [sp, #-16]!
   15c68:	mov	x2, #0x80                  	// #128
   15c6c:	mov	w1, #0xff                  	// #255
   15c70:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   15c74:	ldr	x30, [sp], #16
   15c78:	ret
   15c7c:	str	x30, [sp, #-16]!
   15c80:	mov	x2, #0x80                  	// #128
   15c84:	mov	w1, #0x0                   	// #0
   15c88:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   15c8c:	ldr	x30, [sp], #16
   15c90:	ret
   15c94:	sub	w1, w1, #0x1
   15c98:	sxtw	x3, w1
   15c9c:	cmp	x3, #0x3ff
   15ca0:	b.hi	15cc4 <__sanitizer_set_report_fd@@Base+0x2e80>  // b.pmore
   15ca4:	lsr	x3, x3, #3
   15ca8:	and	x1, x1, #0x7
   15cac:	mov	w2, #0x1                   	// #1
   15cb0:	lsl	w1, w2, w1
   15cb4:	ldrb	w2, [x0, x3]
   15cb8:	bic	w1, w2, w1
   15cbc:	strb	w1, [x0, x3]
   15cc0:	ret
   15cc4:	str	x30, [sp, #-16]!
   15cc8:	mov	x4, #0x400                 	// #1024
   15ccc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15cd0:	add	x2, x2, #0x5a8
   15cd4:	mov	w1, #0x381                 	// #897
   15cd8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15cdc:	add	x0, x0, #0x460
   15ce0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15ce4:	sub	w1, w1, #0x1
   15ce8:	sxtw	x3, w1
   15cec:	cmp	x3, #0x3ff
   15cf0:	b.hi	15d0c <__sanitizer_set_report_fd@@Base+0x2ec8>  // b.pmore
   15cf4:	lsr	x3, x3, #3
   15cf8:	ldrb	w0, [x0, x3]
   15cfc:	and	x1, x1, #0x7
   15d00:	asr	w0, w0, w1
   15d04:	and	w0, w0, #0x1
   15d08:	ret
   15d0c:	str	x30, [sp, #-16]!
   15d10:	mov	x4, #0x400                 	// #1024
   15d14:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15d18:	add	x2, x2, #0x5a8
   15d1c:	mov	w1, #0x38b                 	// #907
   15d20:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15d24:	add	x0, x0, #0x460
   15d28:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15d2c:	stp	x19, x30, [sp, #-16]!
   15d30:	mov	x19, x0
   15d34:	ldr	w0, [x0, #4]
   15d38:	sxtw	x1, w0
   15d3c:	cmn	x1, #0x1, lsl #12
   15d40:	b.ls	15d58 <__sanitizer_set_report_fd@@Base+0x2f14>  // b.plast
   15d44:	ldr	x1, [x19, #16]
   15d48:	ldr	x0, [x19, #8]
   15d4c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   15d50:	ldp	x19, x30, [sp], #16
   15d54:	ret
   15d58:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   15d5c:	b	15d44 <__sanitizer_set_report_fd@@Base+0x2f00>
   15d60:	stp	x29, x30, [sp, #-16]!
   15d64:	mov	x29, sp
   15d68:	clz	x0, x29
   15d6c:	neg	w1, w0
   15d70:	mov	x0, #0x1                   	// #1
   15d74:	lsl	x0, x0, x1
   15d78:	sub	x0, x0, #0x1
   15d7c:	ldp	x29, x30, [sp], #16
   15d80:	ret
   15d84:	str	x30, [sp, #-16]!
   15d88:	bl	15d60 <__sanitizer_set_report_fd@@Base+0x2f1c>
   15d8c:	ldr	x30, [sp], #16
   15d90:	ret
   15d94:	str	x30, [sp, #-16]!
   15d98:	mov	x0, #0x6                   	// #6
   15d9c:	bl	6870 <getauxval@plt>
   15da0:	ldr	x30, [sp], #16
   15da4:	ret
   15da8:	stp	x19, x20, [sp, #-128]!
   15dac:	stp	x21, x22, [sp, #16]
   15db0:	stp	x23, x30, [sp, #32]
   15db4:	mov	x19, x0
   15db8:	mov	w20, w1
   15dbc:	str	w1, [x0]
   15dc0:	mov	w0, #0xffffffff            	// #-1
   15dc4:	str	w0, [x19, #4]
   15dc8:	str	xzr, [x19, #16]
   15dcc:	str	xzr, [x19, #24]
   15dd0:	str	xzr, [x19, #8]
   15dd4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15dd8:	ldr	x0, [x0, #4016]
   15ddc:	ldr	x0, [x0]
   15de0:	cbz	x0, 15ec0 <__sanitizer_set_report_fd@@Base+0x307c>
   15de4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15de8:	ldr	x0, [x0, #4016]
   15dec:	ldr	x2, [x0]
   15df0:	sub	x0, x2, #0x1
   15df4:	tst	x0, x2
   15df8:	b.ne	15ed4 <__sanitizer_set_report_fd@@Base+0x3090>  // b.any
   15dfc:	add	x21, x2, #0xfff
   15e00:	neg	x2, x2
   15e04:	and	x21, x21, x2
   15e08:	mov	w2, #0x0                   	// #0
   15e0c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   15e10:	add	x1, x1, #0x350
   15e14:	mov	x0, x21
   15e18:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   15e1c:	mov	x23, x0
   15e20:	ldr	x2, [x19, #24]
   15e24:	ldr	x1, [x19, #8]
   15e28:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   15e2c:	ldr	x1, [x19, #16]
   15e30:	ldr	x0, [x19, #8]
   15e34:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   15e38:	str	x23, [x19, #8]
   15e3c:	str	x21, [x19, #16]
   15e40:	ldr	x0, [x19, #24]
   15e44:	cmp	x0, #0xfff
   15e48:	b.hi	15e70 <__sanitizer_set_report_fd@@Base+0x302c>  // b.pmore
   15e4c:	cmp	x21, #0xfff
   15e50:	b.ls	15ee4 <__sanitizer_set_report_fd@@Base+0x30a0>  // b.plast
   15e54:	ldr	x0, [x19, #24]
   15e58:	ldr	x3, [x19, #8]
   15e5c:	mov	x2, #0x1000                	// #4096
   15e60:	sub	x2, x2, x0
   15e64:	mov	w1, #0x0                   	// #0
   15e68:	add	x0, x3, x0
   15e6c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   15e70:	mov	x0, #0x1000                	// #4096
   15e74:	str	x0, [x19, #24]
   15e78:	add	x21, sp, #0x30
   15e7c:	mov	w3, w20
   15e80:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15e84:	add	x2, x2, #0x5e0
   15e88:	mov	x1, #0x50                  	// #80
   15e8c:	mov	x0, x21
   15e90:	bl	1a028 <OnPrint@@Base+0x4>
   15e94:	mov	w1, #0x4000                	// #16384
   15e98:	mov	x0, x21
   15e9c:	bl	15520 <__sanitizer_set_report_fd@@Base+0x26dc>
   15ea0:	str	w0, [x19, #4]
   15ea4:	sxtw	x0, w0
   15ea8:	cmn	x0, #0x1, lsl #12
   15eac:	b.hi	15f78 <__sanitizer_set_report_fd@@Base+0x3134>  // b.pmore
   15eb0:	ldp	x21, x22, [sp, #16]
   15eb4:	ldp	x23, x30, [sp, #32]
   15eb8:	ldp	x19, x20, [sp], #128
   15ebc:	ret
   15ec0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   15ec4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15ec8:	ldr	x1, [x1, #4016]
   15ecc:	str	x0, [x1]
   15ed0:	b	15de4 <__sanitizer_set_report_fd@@Base+0x2fa0>
   15ed4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   15ed8:	add	x0, x0, #0x338
   15edc:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   15ee0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   15ee4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15ee8:	ldr	x0, [x0, #4016]
   15eec:	ldr	x0, [x0]
   15ef0:	cbz	x0, 15f54 <__sanitizer_set_report_fd@@Base+0x3110>
   15ef4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15ef8:	ldr	x0, [x0, #4016]
   15efc:	ldr	x0, [x0]
   15f00:	sub	x1, x0, #0x1
   15f04:	tst	x1, x0
   15f08:	b.ne	15f68 <__sanitizer_set_report_fd@@Base+0x3124>  // b.any
   15f0c:	add	x21, x0, #0xfff
   15f10:	neg	x0, x0
   15f14:	and	x21, x21, x0
   15f18:	mov	w2, #0x0                   	// #0
   15f1c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   15f20:	add	x1, x1, #0x350
   15f24:	mov	x0, x21
   15f28:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   15f2c:	mov	x23, x0
   15f30:	ldr	x2, [x19, #24]
   15f34:	ldr	x1, [x19, #8]
   15f38:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   15f3c:	ldr	x1, [x19, #16]
   15f40:	ldr	x0, [x19, #8]
   15f44:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   15f48:	str	x23, [x19, #8]
   15f4c:	str	x21, [x19, #16]
   15f50:	b	15e54 <__sanitizer_set_report_fd@@Base+0x3010>
   15f54:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   15f58:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   15f5c:	ldr	x1, [x1, #4016]
   15f60:	str	x0, [x1]
   15f64:	b	15ef4 <__sanitizer_set_report_fd@@Base+0x30b0>
   15f68:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   15f6c:	add	x0, x0, #0x338
   15f70:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   15f74:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   15f78:	mov	w1, w20
   15f7c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15f80:	add	x0, x0, #0x5f0
   15f84:	bl	1a3fc <OnPrint@@Base+0x3d8>
   15f88:	b	15eb0 <__sanitizer_set_report_fd@@Base+0x306c>
   15f8c:	stp	x19, x20, [sp, #-144]!
   15f90:	stp	x21, x22, [sp, #16]
   15f94:	str	x30, [sp, #32]
   15f98:	mov	x19, x0
   15f9c:	mov	x21, x0
   15fa0:	add	x20, sp, #0x38
   15fa4:	mov	w4, w1
   15fa8:	ldr	w3, [x21], #8
   15fac:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   15fb0:	add	x2, x2, #0x618
   15fb4:	mov	x1, #0x50                  	// #80
   15fb8:	mov	x0, x20
   15fbc:	bl	1a028 <OnPrint@@Base+0x4>
   15fc0:	mov	x3, #0x0                   	// #0
   15fc4:	mov	x2, #0x4000000             	// #67108864
   15fc8:	mov	x1, x21
   15fcc:	mov	x0, x20
   15fd0:	bl	127e8 <__sanitizer_cov_dump@@Base+0x22b8>
   15fd4:	ands	w0, w0, #0xff
   15fd8:	b.eq	15fe8 <__sanitizer_set_report_fd@@Base+0x31a4>  // b.none
   15fdc:	ldr	x3, [x19, #24]
   15fe0:	mov	w0, #0x0                   	// #0
   15fe4:	cbnz	x3, 15ff8 <__sanitizer_set_report_fd@@Base+0x31b4>
   15fe8:	ldp	x21, x22, [sp, #16]
   15fec:	ldr	x30, [sp, #32]
   15ff0:	ldp	x19, x20, [sp], #144
   15ff4:	ret
   15ff8:	strb	wzr, [sp, #143]
   15ffc:	ldr	x4, [x19, #16]
   16000:	cmp	x3, x4
   16004:	b.hi	16068 <__sanitizer_set_report_fd@@Base+0x3224>  // b.pmore
   16008:	b.eq	16080 <__sanitizer_set_report_fd@@Base+0x323c>  // b.none
   1600c:	ldr	x3, [x19, #8]
   16010:	ldr	x0, [x19, #24]
   16014:	add	x2, x0, #0x1
   16018:	str	x2, [x19, #24]
   1601c:	mov	x2, #0x1                   	// #1
   16020:	add	x1, sp, #0x8f
   16024:	add	x0, x3, x0
   16028:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1602c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16030:	add	x1, x1, #0x950
   16034:	ldr	x0, [x19, #8]
   16038:	bl	14a5c <__sanitizer_set_report_fd@@Base+0x1c18>
   1603c:	mov	x19, x0
   16040:	mov	w0, #0x0                   	// #0
   16044:	cbz	x19, 15fe8 <__sanitizer_set_report_fd@@Base+0x31a4>
   16048:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1604c:	add	x0, x0, #0x950
   16050:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   16054:	add	x0, x19, x0
   16058:	bl	14c0c <__sanitizer_set_report_fd@@Base+0x1dc8>
   1605c:	cmp	w0, #0x0
   16060:	cset	w0, ne  // ne = any
   16064:	b	15fe8 <__sanitizer_set_report_fd@@Base+0x31a4>
   16068:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1606c:	add	x2, x2, #0x630
   16070:	mov	w1, #0x1be                 	// #446
   16074:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16078:	add	x0, x0, #0x380
   1607c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16080:	adds	x1, x3, #0x1
   16084:	b.eq	16138 <__sanitizer_set_report_fd@@Base+0x32f4>  // b.none
   16088:	tst	x3, x1
   1608c:	b.eq	161b0 <__sanitizer_set_report_fd@@Base+0x336c>  // b.none
   16090:	clz	x0, x1
   16094:	mov	w2, #0x3f                  	// #63
   16098:	sub	w2, w2, w0
   1609c:	add	w0, w2, #0x1
   160a0:	mov	x20, #0x1                   	// #1
   160a4:	lsl	x20, x20, x0
   160a8:	cmp	x1, x20
   160ac:	b.cs	16158 <__sanitizer_set_report_fd@@Base+0x3314>  // b.hs, b.nlast
   160b0:	mov	x4, #0x1                   	// #1
   160b4:	lsl	x4, x4, x2
   160b8:	cmp	x1, x4
   160bc:	b.ls	16178 <__sanitizer_set_report_fd@@Base+0x3334>  // b.plast
   160c0:	cmp	x3, x20
   160c4:	b.hi	16194 <__sanitizer_set_report_fd@@Base+0x3350>  // b.pmore
   160c8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   160cc:	ldr	x0, [x0, #4016]
   160d0:	ldr	x0, [x0]
   160d4:	cbz	x0, 161b8 <__sanitizer_set_report_fd@@Base+0x3374>
   160d8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   160dc:	ldr	x0, [x0, #4016]
   160e0:	ldr	x1, [x0]
   160e4:	sub	x0, x1, #0x1
   160e8:	tst	x1, x0
   160ec:	b.ne	161cc <__sanitizer_set_report_fd@@Base+0x3388>  // b.any
   160f0:	add	x0, x20, x0
   160f4:	neg	x20, x1
   160f8:	and	x20, x0, x20
   160fc:	mov	w2, #0x0                   	// #0
   16100:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16104:	add	x1, x1, #0x350
   16108:	mov	x0, x20
   1610c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   16110:	mov	x22, x0
   16114:	ldr	x2, [x19, #24]
   16118:	ldr	x1, [x19, #8]
   1611c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   16120:	ldr	x1, [x19, #16]
   16124:	ldr	x0, [x19, #8]
   16128:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1612c:	str	x22, [x19, #8]
   16130:	str	x20, [x19, #16]
   16134:	b	1600c <__sanitizer_set_report_fd@@Base+0x31c8>
   16138:	mov	x4, #0x0                   	// #0
   1613c:	mov	x3, #0x0                   	// #0
   16140:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16144:	add	x2, x2, #0x650
   16148:	mov	w1, #0x177                 	// #375
   1614c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16150:	add	x0, x0, #0x380
   16154:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16158:	mov	x4, x20
   1615c:	mov	x3, x1
   16160:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16164:	add	x2, x2, #0x660
   16168:	mov	w1, #0x17b                 	// #379
   1616c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16170:	add	x0, x0, #0x380
   16174:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16178:	mov	x3, x1
   1617c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16180:	add	x2, x2, #0x688
   16184:	mov	w1, #0x17c                 	// #380
   16188:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1618c:	add	x0, x0, #0x380
   16190:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16194:	mov	x4, x20
   16198:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1619c:	add	x2, x2, #0x6a8
   161a0:	mov	w1, #0x1fd                 	// #509
   161a4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   161a8:	add	x0, x0, #0x380
   161ac:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   161b0:	mov	x20, x1
   161b4:	b	160c8 <__sanitizer_set_report_fd@@Base+0x3284>
   161b8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   161bc:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   161c0:	ldr	x1, [x1, #4016]
   161c4:	str	x0, [x1]
   161c8:	b	160d8 <__sanitizer_set_report_fd@@Base+0x3294>
   161cc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   161d0:	add	x0, x0, #0x338
   161d4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   161d8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   161dc:	stp	x19, x20, [sp, #-144]!
   161e0:	stp	x23, x24, [sp, #32]
   161e4:	str	x30, [sp, #80]
   161e8:	mov	x20, x0
   161ec:	mov	x23, x1
   161f0:	ldr	w0, [x0, #4]
   161f4:	sxtw	x1, w0
   161f8:	mov	w24, #0x0                   	// #0
   161fc:	cmn	x1, #0x1, lsl #12
   16200:	b.ls	16218 <__sanitizer_set_report_fd@@Base+0x33d4>  // b.plast
   16204:	mov	w0, w24
   16208:	ldp	x23, x24, [sp, #32]
   1620c:	ldr	x30, [sp, #80]
   16210:	ldp	x19, x20, [sp], #144
   16214:	ret
   16218:	stp	x21, x22, [sp, #16]
   1621c:	stp	x25, x26, [sp, #48]
   16220:	stp	x27, x28, [sp, #64]
   16224:	mov	w2, #0x0                   	// #0
   16228:	mov	x1, #0x0                   	// #0
   1622c:	bl	15b20 <__sanitizer_set_report_fd@@Base+0x2cdc>
   16230:	str	xzr, [x23, #16]
   16234:	mov	w26, #0x1                   	// #1
   16238:	mov	w24, #0x2                   	// #2
   1623c:	adrp	x27, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16240:	ldr	x0, [x27, #4016]
   16244:	str	x0, [sp, #104]
   16248:	add	x28, sp, #0x88
   1624c:	b	16258 <__sanitizer_set_report_fd@@Base+0x3414>
   16250:	mov	w24, #0x1                   	// #1
   16254:	mov	w26, #0x0                   	// #0
   16258:	ldr	x19, [x20, #16]
   1625c:	ldr	x0, [x20, #24]
   16260:	cmp	x19, x0
   16264:	b.ls	1627c <__sanitizer_set_report_fd@@Base+0x3438>  // b.plast
   16268:	ldr	x3, [x20, #8]
   1626c:	sub	x2, x19, x0
   16270:	mov	w1, #0x0                   	// #0
   16274:	add	x0, x3, x0
   16278:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1627c:	str	x19, [x20, #24]
   16280:	cmp	x19, #0xfff
   16284:	b.ls	162c4 <__sanitizer_set_report_fd@@Base+0x3480>  // b.plast
   16288:	mov	w2, w19
   1628c:	ldr	x1, [x20, #8]
   16290:	ldr	w0, [x20, #4]
   16294:	bl	15b0c <__sanitizer_set_report_fd@@Base+0x2cc8>
   16298:	mov	x22, x0
   1629c:	cbz	x0, 1660c <__sanitizer_set_report_fd@@Base+0x37c8>
   162a0:	cmn	x0, #0x1, lsl #12
   162a4:	b.hi	162e4 <__sanitizer_set_report_fd@@Base+0x34a0>  // b.pmore
   162a8:	ldr	x19, [x20, #8]
   162ac:	add	x21, x0, x19
   162b0:	cmp	x19, x21
   162b4:	b.cs	164e8 <__sanitizer_set_report_fd@@Base+0x36a4>  // b.hs, b.nlast
   162b8:	adrp	x25, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   162bc:	add	x25, x25, #0x350
   162c0:	b	16328 <__sanitizer_set_report_fd@@Base+0x34e4>
   162c4:	mov	x4, #0x1000                	// #4096
   162c8:	mov	x3, x19
   162cc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   162d0:	add	x2, x2, #0x6c8
   162d4:	mov	w1, #0x3b5                 	// #949
   162d8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   162dc:	add	x0, x0, #0x460
   162e0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   162e4:	ldr	w1, [x20]
   162e8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   162ec:	add	x0, x0, #0x6e8
   162f0:	bl	1a3fc <OnPrint@@Base+0x3d8>
   162f4:	mov	w24, #0x0                   	// #0
   162f8:	ldp	x21, x22, [sp, #16]
   162fc:	ldp	x25, x26, [sp, #48]
   16300:	ldp	x27, x28, [sp, #64]
   16304:	b	16204 <__sanitizer_set_report_fd@@Base+0x33c0>
   16308:	mov	w24, #0x1                   	// #1
   1630c:	ldrb	w1, [x0, #19]
   16310:	sub	w1, w1, #0x30
   16314:	and	w1, w1, #0xff
   16318:	cmp	w1, #0x9
   1631c:	b.ls	16348 <__sanitizer_set_report_fd@@Base+0x3504>  // b.plast
   16320:	cmp	x21, x19
   16324:	b.ls	164e8 <__sanitizer_set_report_fd@@Base+0x36a4>  // b.plast
   16328:	mov	x0, x19
   1632c:	ldrh	w1, [x19, #16]
   16330:	add	x19, x19, x1
   16334:	ldr	x1, [x0]
   16338:	cmp	x1, #0x1
   1633c:	b.eq	16308 <__sanitizer_set_report_fd@@Base+0x34c4>  // b.none
   16340:	cbz	x1, 16320 <__sanitizer_set_report_fd@@Base+0x34dc>
   16344:	b	1630c <__sanitizer_set_report_fd@@Base+0x34c8>
   16348:	add	x0, x0, #0x13
   1634c:	bl	14c0c <__sanitizer_set_report_fd@@Base+0x1dc8>
   16350:	str	x0, [sp, #136]
   16354:	ldr	x3, [x23, #16]
   16358:	ldr	x0, [x23, #8]
   1635c:	lsr	x4, x0, #3
   16360:	cmp	x3, x0, lsr #3
   16364:	b.hi	16394 <__sanitizer_set_report_fd@@Base+0x3550>  // b.pmore
   16368:	cmp	x3, x4
   1636c:	b.eq	163ac <__sanitizer_set_report_fd@@Base+0x3568>  // b.none
   16370:	ldr	x3, [x23]
   16374:	ldr	x0, [x23, #16]
   16378:	add	x1, x0, #0x1
   1637c:	str	x1, [x23, #16]
   16380:	mov	x2, #0x8                   	// #8
   16384:	mov	x1, x28
   16388:	add	x0, x3, x0, lsl #3
   1638c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   16390:	b	16320 <__sanitizer_set_report_fd@@Base+0x34dc>
   16394:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16398:	add	x2, x2, #0x630
   1639c:	mov	w1, #0x1be                 	// #446
   163a0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   163a4:	add	x0, x0, #0x380
   163a8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   163ac:	add	x0, x3, #0x1
   163b0:	tst	x3, x0
   163b4:	b.eq	164c0 <__sanitizer_set_report_fd@@Base+0x367c>  // b.none
   163b8:	clz	x2, x0
   163bc:	mov	w1, #0x3f                  	// #63
   163c0:	sub	w1, w1, w2
   163c4:	add	w2, w1, #0x1
   163c8:	mov	x4, #0x1                   	// #1
   163cc:	lsl	x4, x4, x2
   163d0:	cmp	x0, x4
   163d4:	b.cs	1646c <__sanitizer_set_report_fd@@Base+0x3628>  // b.hs, b.nlast
   163d8:	mov	x2, #0x1                   	// #1
   163dc:	lsl	x1, x2, x1
   163e0:	cmp	x0, x1
   163e4:	b.ls	16488 <__sanitizer_set_report_fd@@Base+0x3644>  // b.plast
   163e8:	cmp	x3, x4
   163ec:	b.hi	164a8 <__sanitizer_set_report_fd@@Base+0x3664>  // b.pmore
   163f0:	lsl	x0, x4, #3
   163f4:	str	x0, [sp, #112]
   163f8:	ldr	x0, [sp, #104]
   163fc:	ldr	x0, [x0]
   16400:	cbz	x0, 164c8 <__sanitizer_set_report_fd@@Base+0x3684>
   16404:	ldr	x0, [x27, #4016]
   16408:	ldr	x1, [x0]
   1640c:	sub	x0, x1, #0x1
   16410:	tst	x1, x0
   16414:	b.ne	164d8 <__sanitizer_set_report_fd@@Base+0x3694>  // b.any
   16418:	ldr	x2, [sp, #112]
   1641c:	add	x0, x2, x0
   16420:	neg	x1, x1
   16424:	and	x0, x0, x1
   16428:	mov	w2, #0x0                   	// #0
   1642c:	mov	x1, x25
   16430:	str	x0, [sp, #120]
   16434:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   16438:	str	x0, [sp, #112]
   1643c:	ldr	x2, [x23, #16]
   16440:	lsl	x2, x2, #3
   16444:	ldr	x1, [x23]
   16448:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1644c:	ldr	x1, [x23, #8]
   16450:	ldr	x0, [x23]
   16454:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   16458:	ldr	x1, [sp, #112]
   1645c:	str	x1, [x23]
   16460:	ldr	x0, [sp, #120]
   16464:	str	x0, [x23, #8]
   16468:	b	16370 <__sanitizer_set_report_fd@@Base+0x352c>
   1646c:	mov	x3, x0
   16470:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16474:	add	x2, x2, #0x660
   16478:	mov	w1, #0x17b                 	// #379
   1647c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16480:	add	x0, x0, #0x380
   16484:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16488:	mov	x4, x1
   1648c:	mov	x3, x0
   16490:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16494:	add	x2, x2, #0x688
   16498:	mov	w1, #0x17c                 	// #380
   1649c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   164a0:	add	x0, x0, #0x380
   164a4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   164a8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   164ac:	add	x2, x2, #0x6a8
   164b0:	mov	w1, #0x1fd                 	// #509
   164b4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   164b8:	add	x0, x0, #0x380
   164bc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   164c0:	mov	x4, x0
   164c4:	b	163f0 <__sanitizer_set_report_fd@@Base+0x35ac>
   164c8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   164cc:	ldr	x1, [x27, #4016]
   164d0:	str	x0, [x1]
   164d4:	b	16404 <__sanitizer_set_report_fd@@Base+0x35c0>
   164d8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   164dc:	add	x0, x0, #0x338
   164e0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   164e4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   164e8:	cbz	w26, 16250 <__sanitizer_set_report_fd@@Base+0x340c>
   164ec:	ldr	x0, [x20, #24]
   164f0:	sub	x1, x0, #0x400
   164f4:	cmp	x1, x22
   164f8:	b.cc	16524 <__sanitizer_set_report_fd@@Base+0x36e0>  // b.lo, b.ul, b.last
   164fc:	ldr	x0, [x23, #16]
   16500:	cbz	x0, 16254 <__sanitizer_set_report_fd@@Base+0x3410>
   16504:	ldr	x1, [x23]
   16508:	add	x0, x1, x0, lsl #3
   1650c:	ldur	w1, [x0, #-8]
   16510:	mov	x0, x20
   16514:	bl	15f8c <__sanitizer_set_report_fd@@Base+0x3148>
   16518:	ands	w0, w0, #0xff
   1651c:	csinc	w24, w24, wzr, ne  // ne = any
   16520:	b	16254 <__sanitizer_set_report_fd@@Base+0x3410>
   16524:	lsl	x19, x0, #1
   16528:	cmp	x0, x0, lsl #1
   1652c:	b.cs	16554 <__sanitizer_set_report_fd@@Base+0x3710>  // b.hs, b.nlast
   16530:	ldr	x0, [x20, #16]
   16534:	cmp	x19, x0
   16538:	b.hi	16560 <__sanitizer_set_report_fd@@Base+0x371c>  // b.pmore
   1653c:	ldr	x0, [x20, #24]
   16540:	ldr	x3, [x20, #8]
   16544:	sub	x2, x19, x0
   16548:	mov	w1, #0x0                   	// #0
   1654c:	add	x0, x3, x0
   16550:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   16554:	str	x19, [x20, #24]
   16558:	mov	w24, #0x1                   	// #1
   1655c:	b	16254 <__sanitizer_set_report_fd@@Base+0x3410>
   16560:	cbz	x19, 165cc <__sanitizer_set_report_fd@@Base+0x3788>
   16564:	ldr	x0, [x27, #4016]
   16568:	ldr	x0, [x0]
   1656c:	cbz	x0, 165ec <__sanitizer_set_report_fd@@Base+0x37a8>
   16570:	ldr	x0, [x27, #4016]
   16574:	ldr	x0, [x0]
   16578:	sub	x1, x0, #0x1
   1657c:	tst	x0, x1
   16580:	b.ne	165fc <__sanitizer_set_report_fd@@Base+0x37b8>  // b.any
   16584:	add	x1, x19, x1
   16588:	neg	x0, x0
   1658c:	and	x21, x1, x0
   16590:	mov	w2, #0x0                   	// #0
   16594:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16598:	add	x1, x1, #0x350
   1659c:	mov	x0, x21
   165a0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   165a4:	mov	x24, x0
   165a8:	ldr	x2, [x20, #24]
   165ac:	ldr	x1, [x20, #8]
   165b0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   165b4:	ldr	x1, [x20, #16]
   165b8:	ldr	x0, [x20, #8]
   165bc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   165c0:	str	x24, [x20, #8]
   165c4:	str	x21, [x20, #16]
   165c8:	b	1653c <__sanitizer_set_report_fd@@Base+0x36f8>
   165cc:	mov	x4, #0x0                   	// #0
   165d0:	mov	x3, #0x0                   	// #0
   165d4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   165d8:	add	x2, x2, #0xac8
   165dc:	mov	w1, #0x1fc                 	// #508
   165e0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   165e4:	add	x0, x0, #0x380
   165e8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   165ec:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   165f0:	ldr	x1, [x27, #4016]
   165f4:	str	x0, [x1]
   165f8:	b	16570 <__sanitizer_set_report_fd@@Base+0x372c>
   165fc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16600:	add	x0, x0, #0x338
   16604:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   16608:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1660c:	ldp	x21, x22, [sp, #16]
   16610:	ldp	x25, x26, [sp, #48]
   16614:	ldp	x27, x28, [sp, #64]
   16618:	b	16204 <__sanitizer_set_report_fd@@Base+0x33c0>
   1661c:	stp	x19, x20, [sp, #-32]!
   16620:	str	x30, [sp, #16]
   16624:	mov	x20, x0
   16628:	mov	x19, x1
   1662c:	mov	x2, x1
   16630:	mov	x1, x0
   16634:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16638:	add	x0, x0, #0x4d0
   1663c:	bl	15668 <__sanitizer_set_report_fd@@Base+0x2824>
   16640:	cmn	x0, #0x1, lsl #12
   16644:	b.hi	16654 <__sanitizer_set_report_fd@@Base+0x3810>  // b.pmore
   16648:	ldr	x30, [sp, #16]
   1664c:	ldp	x19, x20, [sp], #32
   16650:	ret
   16654:	neg	w1, w0
   16658:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1665c:	add	x0, x0, #0x720
   16660:	bl	1a3fc <OnPrint@@Base+0x3d8>
   16664:	adrp	x3, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16668:	add	x3, x3, #0x4d0
   1666c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16670:	add	x2, x2, #0x288
   16674:	mov	x1, x19
   16678:	mov	x0, x20
   1667c:	bl	1a028 <OnPrint@@Base+0x4>
   16680:	mov	w1, w0
   16684:	sxtw	x0, w0
   16688:	cmp	x19, w1, sxtw
   1668c:	b.hi	16648 <__sanitizer_set_report_fd@@Base+0x3804>  // b.pmore
   16690:	mov	x4, x19
   16694:	mov	x3, x0
   16698:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1669c:	add	x2, x2, #0x780
   166a0:	mov	w1, #0x470                 	// #1136
   166a4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   166a8:	add	x0, x0, #0x460
   166ac:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   166b0:	stp	x19, x20, [sp, #-64]!
   166b4:	str	x30, [sp, #16]
   166b8:	mov	x19, x0
   166bc:	mov	x20, x1
   166c0:	mov	x5, #0x0                   	// #0
   166c4:	mov	x4, #0x100000              	// #1048576
   166c8:	add	x3, sp, #0x28
   166cc:	add	x2, sp, #0x30
   166d0:	add	x1, sp, #0x38
   166d4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   166d8:	add	x0, x0, #0x4a0
   166dc:	bl	12634 <__sanitizer_cov_dump@@Base+0x2104>
   166e0:	and	w0, w0, #0xff
   166e4:	cbz	w0, 16718 <__sanitizer_set_report_fd@@Base+0x38d4>
   166e8:	mov	x2, x20
   166ec:	ldr	x1, [sp, #56]
   166f0:	mov	x0, x19
   166f4:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
   166f8:	ldr	x1, [sp, #48]
   166fc:	ldr	x0, [sp, #56]
   16700:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   16704:	mov	x0, x19
   16708:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1670c:	ldr	x30, [sp, #16]
   16710:	ldp	x19, x20, [sp], #64
   16714:	ret
   16718:	mov	x1, x20
   1671c:	mov	x0, x19
   16720:	bl	1661c <__sanitizer_set_report_fd@@Base+0x37d8>
   16724:	b	1670c <__sanitizer_set_report_fd@@Base+0x38c8>
   16728:	stp	x19, x20, [sp, #-32]!
   1672c:	stp	x21, x30, [sp, #16]
   16730:	mov	x20, x1
   16734:	ldrb	w1, [x0]
   16738:	cbz	w1, 167c4 <__sanitizer_set_report_fd@@Base+0x3980>
   1673c:	mov	x19, x0
   16740:	ldrb	w2, [x19, #1]!
   16744:	cbnz	w2, 16740 <__sanitizer_set_report_fd@@Base+0x38fc>
   16748:	cmp	x0, x19
   1674c:	b.cs	16774 <__sanitizer_set_report_fd@@Base+0x3930>  // b.hs, b.nlast
   16750:	ldrb	w2, [x19]
   16754:	cmp	w2, #0x2f
   16758:	b.eq	167bc <__sanitizer_set_report_fd@@Base+0x3978>  // b.none
   1675c:	sub	x19, x19, #0x1
   16760:	cmp	x0, x19
   16764:	b.ne	16750 <__sanitizer_set_report_fd@@Base+0x390c>  // b.any
   16768:	ldrb	w0, [x19]
   1676c:	cmp	w0, #0x2f
   16770:	b.eq	167bc <__sanitizer_set_report_fd@@Base+0x3978>  // b.none
   16774:	mov	x0, x20
   16778:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1677c:	mov	x21, x0
   16780:	mov	x2, x0
   16784:	mov	x1, x20
   16788:	mov	x0, x19
   1678c:	bl	146fc <__sanitizer_set_report_fd@@Base+0x18b8>
   16790:	mov	w1, #0x0                   	// #0
   16794:	cbnz	w0, 167ac <__sanitizer_set_report_fd@@Base+0x3968>
   16798:	ldrb	w0, [x19, x21]
   1679c:	sub	w0, w0, #0x2d
   167a0:	and	w0, w0, #0xff
   167a4:	cmp	w0, #0x1
   167a8:	cset	w1, ls  // ls = plast
   167ac:	mov	w0, w1
   167b0:	ldp	x21, x30, [sp, #16]
   167b4:	ldp	x19, x20, [sp], #32
   167b8:	ret
   167bc:	add	x19, x19, #0x1
   167c0:	b	16774 <__sanitizer_set_report_fd@@Base+0x3930>
   167c4:	mov	x19, x0
   167c8:	b	16774 <__sanitizer_set_report_fd@@Base+0x3930>
   167cc:	stp	x19, x20, [sp, #-112]!
   167d0:	str	x30, [sp, #80]
   167d4:	cbz	x0, 16824 <__sanitizer_set_report_fd@@Base+0x39e0>
   167d8:	stp	x23, x24, [sp, #32]
   167dc:	stp	x25, x26, [sp, #48]
   167e0:	mov	x26, x1
   167e4:	ldr	x23, [x0]
   167e8:	mov	x25, x23
   167ec:	ldr	x19, [x23, #32]
   167f0:	add	x19, x23, x19
   167f4:	ldrh	w2, [x23, #54]
   167f8:	ldrh	w20, [x23, #56]
   167fc:	mul	w20, w20, w2
   16800:	add	x20, x19, w20, sxtw
   16804:	cmp	x19, x20
   16808:	b.eq	16920 <__sanitizer_set_report_fd@@Base+0x3adc>  // b.none
   1680c:	stp	x21, x22, [sp, #16]
   16810:	stp	x27, x28, [sp, #64]
   16814:	mov	x0, x19
   16818:	mov	x3, #0xffffffffffffffff    	// #-1
   1681c:	and	x2, x2, #0xffff
   16820:	b	16860 <__sanitizer_set_report_fd@@Base+0x3a1c>
   16824:	stp	x21, x22, [sp, #16]
   16828:	stp	x23, x24, [sp, #32]
   1682c:	stp	x25, x26, [sp, #48]
   16830:	stp	x27, x28, [sp, #64]
   16834:	mov	x4, #0x0                   	// #0
   16838:	mov	x3, #0x0                   	// #0
   1683c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16840:	add	x2, x2, #0x7a8
   16844:	mov	w1, #0x495                 	// #1173
   16848:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1684c:	add	x0, x0, #0x460
   16850:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16854:	add	x0, x0, x2
   16858:	cmp	x20, x0
   1685c:	b.eq	16934 <__sanitizer_set_report_fd@@Base+0x3af0>  // b.none
   16860:	ldr	w1, [x0]
   16864:	cmp	w1, #0x1
   16868:	b.ne	16854 <__sanitizer_set_report_fd@@Base+0x3a10>  // b.any
   1686c:	ldr	x1, [x0, #16]
   16870:	cmp	x3, x1
   16874:	csel	x3, x3, x1, ls  // ls = plast
   16878:	b	16854 <__sanitizer_set_report_fd@@Base+0x3a10>
   1687c:	ldr	x0, [x27]
   16880:	sub	x1, x0, #0x1
   16884:	tst	x1, x0
   16888:	b.ne	16908 <__sanitizer_set_report_fd@@Base+0x3ac4>  // b.any
   1688c:	add	x1, x1, x24
   16890:	neg	x0, x0
   16894:	and	x1, x1, x0
   16898:	sub	x1, x1, x21
   1689c:	mov	x0, x21
   168a0:	blr	x26
   168a4:	ldrh	w0, [x25, #54]
   168a8:	add	x19, x19, x0
   168ac:	cmp	x20, x19
   168b0:	b.eq	16918 <__sanitizer_set_report_fd@@Base+0x3ad4>  // b.none
   168b4:	ldr	w0, [x19]
   168b8:	cmp	w0, #0x1
   168bc:	b.ne	168a4 <__sanitizer_set_report_fd@@Base+0x3a60>  // b.any
   168c0:	ldr	x22, [x19, #16]
   168c4:	add	x22, x23, x22
   168c8:	ldr	x24, [x19, #40]
   168cc:	add	x24, x22, x24
   168d0:	ldr	x0, [x28]
   168d4:	neg	x21, x0
   168d8:	and	x21, x21, x22
   168dc:	cbnz	x0, 1687c <__sanitizer_set_report_fd@@Base+0x3a38>
   168e0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   168e4:	ldr	x1, [sp, #96]
   168e8:	str	x0, [x1]
   168ec:	neg	x21, x0
   168f0:	and	x21, x21, x22
   168f4:	cbnz	x0, 1687c <__sanitizer_set_report_fd@@Base+0x3a38>
   168f8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   168fc:	ldr	x1, [sp, #104]
   16900:	str	x0, [x1]
   16904:	b	1687c <__sanitizer_set_report_fd@@Base+0x3a38>
   16908:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1690c:	add	x0, x0, #0x338
   16910:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   16914:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   16918:	ldp	x21, x22, [sp, #16]
   1691c:	ldp	x27, x28, [sp, #64]
   16920:	ldp	x23, x24, [sp, #32]
   16924:	ldp	x25, x26, [sp, #48]
   16928:	ldr	x30, [sp, #80]
   1692c:	ldp	x19, x20, [sp], #112
   16930:	ret
   16934:	sub	x23, x23, x3
   16938:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1693c:	ldr	x28, [x0, #4016]
   16940:	mov	x27, x28
   16944:	str	x28, [sp, #96]
   16948:	str	x28, [sp, #104]
   1694c:	b	168b4 <__sanitizer_set_report_fd@@Base+0x3a70>
   16950:	cmp	x0, #0x0
   16954:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   16958:	b.eq	169cc <__sanitizer_set_report_fd@@Base+0x3b88>  // b.none
   1695c:	str	x30, [sp, #-16]!
   16960:	ands	x7, x1, #0xf
   16964:	b.ne	169ac <__sanitizer_set_report_fd@@Base+0x3b68>  // b.any
   16968:	stur	x0, [x1, #-16]
   1696c:	stur	x3, [x1, #-8]
   16970:	sub	x1, x1, #0x10
   16974:	mov	x0, x2
   16978:	mov	x2, x4
   1697c:	mov	x3, x5
   16980:	mov	x4, x6
   16984:	mov	x8, #0xdc                  	// #220
   16988:	svc	#0x0
   1698c:	cmp	x0, #0x0
   16990:	b.ne	169a4 <__sanitizer_set_report_fd@@Base+0x3b60>  // b.any
   16994:	ldp	x1, x0, [sp], #16
   16998:	blr	x1
   1699c:	mov	x8, #0x5d                  	// #93
   169a0:	svc	#0x0
   169a4:	ldr	x30, [sp], #16
   169a8:	ret
   169ac:	mov	x4, x7
   169b0:	mov	x3, #0x0                   	// #0
   169b4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   169b8:	add	x2, x2, #0x7c0
   169bc:	mov	w1, #0x54b                 	// #1355
   169c0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   169c4:	add	x0, x0, #0x460
   169c8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   169cc:	mov	x0, #0xffffffffffffffea    	// #-22
   169d0:	ret
   169d4:	cmp	w0, #0x7
   169d8:	b.eq	16a8c <__sanitizer_set_report_fd@@Base+0x3c48>  // b.none
   169dc:	cmp	w0, #0x7
   169e0:	b.gt	16a44 <__sanitizer_set_report_fd@@Base+0x3c00>
   169e4:	cmp	w0, #0x5
   169e8:	b.eq	16a6c <__sanitizer_set_report_fd@@Base+0x3c28>  // b.none
   169ec:	cmp	w0, #0x6
   169f0:	b.ne	16a24 <__sanitizer_set_report_fd@@Base+0x3be0>  // b.any
   169f4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   169f8:	ldr	x0, [x0, #4056]
   169fc:	ldr	w0, [x0, #80]
   16a00:	cmp	w0, #0x1
   16a04:	b.ne	16a20 <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.any
   16a08:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16a0c:	ldr	x1, [x1, #4056]
   16a10:	ldrb	w1, [x1, #96]
   16a14:	cmp	w1, #0x0
   16a18:	mov	w1, #0x2                   	// #2
   16a1c:	csel	w0, w0, w1, ne  // ne = any
   16a20:	ret
   16a24:	cmp	w0, #0x4
   16a28:	b.ne	16a3c <__sanitizer_set_report_fd@@Base+0x3bf8>  // b.any
   16a2c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16a30:	ldr	x0, [x0, #4056]
   16a34:	ldr	w0, [x0, #84]
   16a38:	b	16a00 <__sanitizer_set_report_fd@@Base+0x3bbc>
   16a3c:	mov	w0, #0x0                   	// #0
   16a40:	b	16a20 <__sanitizer_set_report_fd@@Base+0x3bdc>
   16a44:	cmp	w0, #0x8
   16a48:	b.eq	16a7c <__sanitizer_set_report_fd@@Base+0x3c38>  // b.none
   16a4c:	cmp	w0, #0xb
   16a50:	b.ne	16a64 <__sanitizer_set_report_fd@@Base+0x3c20>  // b.any
   16a54:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16a58:	ldr	x0, [x0, #4056]
   16a5c:	ldr	w0, [x0, #72]
   16a60:	b	16a00 <__sanitizer_set_report_fd@@Base+0x3bbc>
   16a64:	mov	w0, #0x0                   	// #0
   16a68:	b	16a20 <__sanitizer_set_report_fd@@Base+0x3bdc>
   16a6c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16a70:	ldr	x0, [x0, #4056]
   16a74:	ldr	w0, [x0, #88]
   16a78:	b	16a00 <__sanitizer_set_report_fd@@Base+0x3bbc>
   16a7c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16a80:	ldr	x0, [x0, #4056]
   16a84:	ldr	w0, [x0, #92]
   16a88:	b	16a00 <__sanitizer_set_report_fd@@Base+0x3bbc>
   16a8c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16a90:	ldr	x0, [x0, #4056]
   16a94:	ldr	w0, [x0, #76]
   16a98:	b	16a00 <__sanitizer_set_report_fd@@Base+0x3bbc>
   16a9c:	stp	x19, x20, [sp, #-320]!
   16aa0:	stp	x21, x22, [sp, #16]
   16aa4:	str	x30, [sp, #32]
   16aa8:	mov	x19, x0
   16aac:	mov	x20, x1
   16ab0:	add	x21, sp, #0xc0
   16ab4:	mov	x0, x21
   16ab8:	bl	15c64 <__sanitizer_set_report_fd@@Base+0x2e20>
   16abc:	mov	w1, #0x21                  	// #33
   16ac0:	mov	x0, x21
   16ac4:	bl	15c94 <__sanitizer_set_report_fd@@Base+0x2e50>
   16ac8:	add	x22, sp, #0x40
   16acc:	mov	x2, x22
   16ad0:	mov	x1, x21
   16ad4:	mov	w0, #0x2                   	// #2
   16ad8:	bl	15c50 <__sanitizer_set_report_fd@@Base+0x2e0c>
   16adc:	mov	x3, x20
   16ae0:	mov	x2, x19
   16ae4:	mov	x1, #0x0                   	// #0
   16ae8:	add	x0, sp, #0x38
   16aec:	bl	68e0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   16af0:	mov	x2, #0x0                   	// #0
   16af4:	mov	x1, x22
   16af8:	mov	w0, #0x2                   	// #2
   16afc:	bl	15c50 <__sanitizer_set_report_fd@@Base+0x2e0c>
   16b00:	ldr	x0, [sp, #56]
   16b04:	ldp	x21, x22, [sp, #16]
   16b08:	ldr	x30, [sp, #32]
   16b0c:	ldp	x19, x20, [sp], #320
   16b10:	ret
   16b14:	str	x30, [sp, #-16]!
   16b18:	mov	x1, #0x0                   	// #0
   16b1c:	bl	65c0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   16b20:	ldr	x30, [sp], #16
   16b24:	ret
   16b28:	ldr	x0, [x0, #8]
   16b2c:	add	x1, x0, #0x1d0
   16b30:	ldr	w0, [x0, #468]
   16b34:	cbz	w0, 16b68 <__sanitizer_set_report_fd@@Base+0x3d24>
   16b38:	mov	w3, #0x5201                	// #20993
   16b3c:	movk	w3, #0x4553, lsl #16
   16b40:	ldr	w2, [x1]
   16b44:	cmp	w2, w3
   16b48:	b.eq	16b5c <__sanitizer_set_report_fd@@Base+0x3d18>  // b.none
   16b4c:	add	x1, x1, w0, uxtw
   16b50:	ldr	w0, [x1, #4]
   16b54:	cbnz	w0, 16b40 <__sanitizer_set_report_fd@@Base+0x3cfc>
   16b58:	b	16b68 <__sanitizer_set_report_fd@@Base+0x3d24>
   16b5c:	ldr	x0, [x1, #8]
   16b60:	ubfx	w0, w0, #6, #1
   16b64:	add	w0, w0, #0x1
   16b68:	ret
   16b6c:	ret
   16b70:	ldr	x1, [x0, #8]
   16b74:	ldr	x2, [x1, #440]
   16b78:	str	x2, [x0, #24]
   16b7c:	ldr	x2, [x1, #416]
   16b80:	str	x2, [x0, #40]
   16b84:	ldr	x1, [x1, #432]
   16b88:	str	x1, [x0, #32]
   16b8c:	ret
   16b90:	ret
   16b94:	ret
   16b98:	ret
   16b9c:	tbnz	w1, #3, 16ba4 <__sanitizer_set_report_fd@@Base+0x3d60>
   16ba0:	ret
   16ba4:	str	x30, [sp, #-16]!
   16ba8:	mov	x2, x0
   16bac:	mov	x1, x0
   16bb0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16bb4:	add	x0, x0, #0x7e8
   16bb8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   16bbc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   16bc0:	str	x30, [sp, #-16]!
   16bc4:	mov	x4, #0x0                   	// #0
   16bc8:	mov	x3, #0x0                   	// #0
   16bcc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16bd0:	add	x2, x2, #0x900
   16bd4:	mov	w1, #0x80a                 	// #2058
   16bd8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16bdc:	add	x0, x0, #0x460
   16be0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16be4:	stp	x19, x20, [sp, #-48]!
   16be8:	str	x30, [sp, #32]
   16bec:	mov	x20, x1
   16bf0:	sub	x1, x1, #0x1
   16bf4:	cmp	x1, #0xff
   16bf8:	cset	w19, hi  // hi = pmore
   16bfc:	cmp	x0, #0x0
   16c00:	csinc	w19, w19, wzr, ne  // ne = any
   16c04:	cbz	w19, 16c1c <__sanitizer_set_report_fd@@Base+0x3dd8>
   16c08:	mov	w19, #0x0                   	// #0
   16c0c:	mov	w0, w19
   16c10:	ldr	x30, [sp, #32]
   16c14:	ldp	x19, x20, [sp], #48
   16c18:	ret
   16c1c:	stp	x21, x22, [sp, #16]
   16c20:	mov	x21, x0
   16c24:	and	w2, w2, #0xff
   16c28:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16c2c:	add	x0, x0, #0xdf8
   16c30:	ldrb	w0, [x0, #24]
   16c34:	and	w0, w0, #0xff
   16c38:	cbnz	w0, 16c64 <__sanitizer_set_report_fd@@Base+0x3e20>
   16c3c:	eor	w2, w2, #0x1
   16c40:	mov	x8, #0x116                 	// #278
   16c44:	mov	x0, x21
   16c48:	mov	x1, x20
   16c4c:	and	x2, x2, #0xff
   16c50:	svc	#0x0
   16c54:	cmn	x0, #0x1, lsl #12
   16c58:	b.hi	16c88 <__sanitizer_set_report_fd@@Base+0x3e44>  // b.pmore
   16c5c:	cmp	x20, x0
   16c60:	b.eq	16cd4 <__sanitizer_set_report_fd@@Base+0x3e90>  // b.none
   16c64:	mov	w1, #0x0                   	// #0
   16c68:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   16c6c:	add	x0, x0, #0x940
   16c70:	bl	15520 <__sanitizer_set_report_fd@@Base+0x26dc>
   16c74:	mov	x22, x0
   16c78:	cmn	x0, #0x1, lsl #12
   16c7c:	b.ls	16ca4 <__sanitizer_set_report_fd@@Base+0x3e60>  // b.plast
   16c80:	ldp	x21, x22, [sp, #16]
   16c84:	b	16c0c <__sanitizer_set_report_fd@@Base+0x3dc8>
   16c88:	cmn	w0, #0x26
   16c8c:	b.ne	16c64 <__sanitizer_set_report_fd@@Base+0x3e20>  // b.any
   16c90:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16c94:	add	x0, x0, #0xdf8
   16c98:	mov	w1, #0x1                   	// #1
   16c9c:	strb	w1, [x0, #24]
   16ca0:	b	16c64 <__sanitizer_set_report_fd@@Base+0x3e20>
   16ca4:	mov	x2, x20
   16ca8:	mov	x1, x21
   16cac:	bl	15568 <__sanitizer_set_report_fd@@Base+0x2724>
   16cb0:	cmn	x0, #0x1, lsl #12
   16cb4:	b.ls	16cc0 <__sanitizer_set_report_fd@@Base+0x3e7c>  // b.plast
   16cb8:	ldp	x21, x22, [sp, #16]
   16cbc:	b	16c0c <__sanitizer_set_report_fd@@Base+0x3dc8>
   16cc0:	mov	w0, w22
   16cc4:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   16cc8:	mov	w19, #0x1                   	// #1
   16ccc:	ldp	x21, x22, [sp, #16]
   16cd0:	b	16c0c <__sanitizer_set_report_fd@@Base+0x3dc8>
   16cd4:	mov	w19, #0x1                   	// #1
   16cd8:	ldp	x21, x22, [sp, #16]
   16cdc:	b	16c0c <__sanitizer_set_report_fd@@Base+0x3dc8>
   16ce0:	stp	x19, x20, [sp, #-64]!
   16ce4:	str	x30, [sp, #16]
   16ce8:	mov	x20, x0
   16cec:	add	x19, sp, #0x20
   16cf0:	mov	w1, #0x1                   	// #1
   16cf4:	mov	x0, x19
   16cf8:	bl	1a864 <OnPrint@@Base+0x840>
   16cfc:	mov	x1, x20
   16d00:	mov	x0, x19
   16d04:	bl	1a8f8 <OnPrint@@Base+0x8d4>
   16d08:	mov	x0, x19
   16d0c:	bl	1a718 <OnPrint@@Base+0x6f4>
   16d10:	ldr	x30, [sp, #16]
   16d14:	ldp	x19, x20, [sp], #64
   16d18:	ret
   16d1c:	str	x30, [sp, #-160]!
   16d20:	add	x1, sp, #0x10
   16d24:	mov	w0, #0x0                   	// #0
   16d28:	bl	65d0 <getrusage@plt>
   16d2c:	mov	w1, w0
   16d30:	mov	x0, #0x0                   	// #0
   16d34:	cbnz	w1, 16d40 <__sanitizer_set_report_fd@@Base+0x3efc>
   16d38:	ldr	x0, [sp, #48]
   16d3c:	lsl	x0, x0, #10
   16d40:	ldr	x30, [sp], #160
   16d44:	ret
   16d48:	stp	x19, x20, [sp, #-160]!
   16d4c:	stp	x21, x22, [sp, #16]
   16d50:	stp	x23, x30, [sp, #32]
   16d54:	mov	x20, x0
   16d58:	mov	x22, x2
   16d5c:	str	xzr, [sp, #136]
   16d60:	str	xzr, [sp, #144]
   16d64:	str	xzr, [sp, #128]
   16d68:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16d6c:	ldr	x0, [x0, #4016]
   16d70:	ldr	x0, [x0]
   16d74:	cbz	x0, 16e6c <__sanitizer_set_report_fd@@Base+0x4028>
   16d78:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16d7c:	ldr	x0, [x0, #4016]
   16d80:	ldr	x1, [x0]
   16d84:	sub	x19, x1, #0x1
   16d88:	ands	x19, x19, x1
   16d8c:	b.ne	16e80 <__sanitizer_set_report_fd@@Base+0x403c>  // b.any
   16d90:	add	x21, x1, #0xfff
   16d94:	neg	x1, x1
   16d98:	and	x21, x21, x1
   16d9c:	mov	w2, #0x0                   	// #0
   16da0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16da4:	add	x1, x1, #0x350
   16da8:	mov	x0, x21
   16dac:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   16db0:	mov	x23, x0
   16db4:	ldr	x2, [sp, #144]
   16db8:	ldr	x1, [sp, #128]
   16dbc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   16dc0:	ldr	x1, [sp, #136]
   16dc4:	ldr	x0, [sp, #128]
   16dc8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   16dcc:	str	x23, [sp, #128]
   16dd0:	str	x21, [sp, #136]
   16dd4:	ldr	x0, [sp, #144]
   16dd8:	cmp	x0, #0xfff
   16ddc:	b.hi	16e04 <__sanitizer_set_report_fd@@Base+0x3fc0>  // b.pmore
   16de0:	cmp	x21, #0xfff
   16de4:	b.ls	16e90 <__sanitizer_set_report_fd@@Base+0x404c>  // b.plast
   16de8:	ldr	x0, [sp, #144]
   16dec:	mov	x2, #0x1000                	// #4096
   16df0:	sub	x2, x2, x0
   16df4:	mov	w1, #0x0                   	// #0
   16df8:	ldr	x3, [sp, #128]
   16dfc:	add	x0, x3, x0
   16e00:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   16e04:	mov	x0, #0x1000                	// #4096
   16e08:	str	x0, [sp, #144]
   16e0c:	str	xzr, [sp, #152]
   16e10:	ldr	x0, [sp, #128]
   16e14:	strb	wzr, [x0]
   16e18:	ldrb	w0, [x22, #8]
   16e1c:	cbnz	w0, 16f24 <__sanitizer_set_report_fd@@Base+0x40e0>
   16e20:	ldr	x2, [x20, #8]
   16e24:	cbz	x2, 16e38 <__sanitizer_set_report_fd@@Base+0x3ff4>
   16e28:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16e2c:	add	x1, x1, #0x288
   16e30:	add	x0, sp, #0x80
   16e34:	bl	1a490 <OnPrint@@Base+0x46c>
   16e38:	ldr	x0, [sp, #144]
   16e3c:	cbz	x0, 16f38 <__sanitizer_set_report_fd@@Base+0x40f4>
   16e40:	ldr	x0, [sp, #128]
   16e44:	ldrb	w0, [x0]
   16e48:	cbnz	w0, 16f58 <__sanitizer_set_report_fd@@Base+0x4114>
   16e4c:	ldr	x1, [sp, #136]
   16e50:	ldr	x0, [sp, #128]
   16e54:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   16e58:	mov	w0, #0x0                   	// #0
   16e5c:	ldp	x21, x22, [sp, #16]
   16e60:	ldp	x23, x30, [sp, #32]
   16e64:	ldp	x19, x20, [sp], #160
   16e68:	ret
   16e6c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   16e70:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16e74:	ldr	x1, [x1, #4016]
   16e78:	str	x0, [x1]
   16e7c:	b	16d78 <__sanitizer_set_report_fd@@Base+0x3f34>
   16e80:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16e84:	add	x0, x0, #0x338
   16e88:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   16e8c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   16e90:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16e94:	ldr	x0, [x0, #4016]
   16e98:	ldr	x0, [x0]
   16e9c:	cbz	x0, 16f00 <__sanitizer_set_report_fd@@Base+0x40bc>
   16ea0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16ea4:	ldr	x0, [x0, #4016]
   16ea8:	ldr	x0, [x0]
   16eac:	sub	x1, x0, #0x1
   16eb0:	tst	x1, x0
   16eb4:	b.ne	16f14 <__sanitizer_set_report_fd@@Base+0x40d0>  // b.any
   16eb8:	add	x21, x0, #0xfff
   16ebc:	neg	x0, x0
   16ec0:	and	x21, x21, x0
   16ec4:	mov	w2, #0x0                   	// #0
   16ec8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16ecc:	add	x1, x1, #0x350
   16ed0:	mov	x0, x21
   16ed4:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   16ed8:	mov	x23, x0
   16edc:	ldr	x2, [sp, #144]
   16ee0:	ldr	x1, [sp, #128]
   16ee4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   16ee8:	ldr	x1, [sp, #136]
   16eec:	ldr	x0, [sp, #128]
   16ef0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   16ef4:	str	x23, [sp, #128]
   16ef8:	str	x21, [sp, #136]
   16efc:	b	16de8 <__sanitizer_set_report_fd@@Base+0x3fa4>
   16f00:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   16f04:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   16f08:	ldr	x1, [x1, #4016]
   16f0c:	str	x0, [x1]
   16f10:	b	16ea0 <__sanitizer_set_report_fd@@Base+0x405c>
   16f14:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16f18:	add	x0, x0, #0x338
   16f1c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   16f20:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   16f24:	strb	wzr, [x22, #8]
   16f28:	ldr	x1, [sp, #144]
   16f2c:	ldr	x0, [sp, #128]
   16f30:	bl	f684 <__sancov_default_options@@Base+0x2988>
   16f34:	b	16e38 <__sanitizer_set_report_fd@@Base+0x3ff4>
   16f38:	mov	x4, #0x0                   	// #0
   16f3c:	mov	x3, #0x0                   	// #0
   16f40:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16f44:	add	x2, x2, #0x368
   16f48:	mov	w1, #0x1b6                 	// #438
   16f4c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   16f50:	add	x0, x0, #0x380
   16f54:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16f58:	str	xzr, [sp, #56]
   16f5c:	str	xzr, [sp, #64]
   16f60:	str	xzr, [sp, #72]
   16f64:	str	wzr, [sp, #80]
   16f68:	strb	wzr, [sp, #100]
   16f6c:	add	x21, sp, #0x38
   16f70:	mov	x2, #0x10                  	// #16
   16f74:	mov	w1, #0x0                   	// #0
   16f78:	add	x0, sp, #0x54
   16f7c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   16f80:	str	xzr, [sp, #120]
   16f84:	str	xzr, [sp, #112]
   16f88:	str	xzr, [sp, #104]
   16f8c:	ldr	x2, [x20]
   16f90:	ldr	x1, [sp, #128]
   16f94:	mov	x0, x21
   16f98:	bl	f1f8 <__sancov_default_options@@Base+0x24fc>
   16f9c:	ldrh	w0, [x20, #24]
   16fa0:	cbz	w0, 17008 <__sanitizer_set_report_fd@@Base+0x41c4>
   16fa4:	mov	w21, #0x0                   	// #0
   16fa8:	add	x23, sp, #0x38
   16fac:	b	16ff0 <__sanitizer_set_report_fd@@Base+0x41ac>
   16fb0:	ldr	x1, [x20]
   16fb4:	ldr	x0, [x2, #16]
   16fb8:	add	x1, x1, x0
   16fbc:	ldr	w3, [x2, #4]
   16fc0:	ldr	x2, [x2, #40]
   16fc4:	mov	x5, #0x0                   	// #0
   16fc8:	ubfx	x4, x3, #1, #1
   16fcc:	and	w3, w3, #0x1
   16fd0:	add	x2, x1, x2
   16fd4:	mov	x0, x23
   16fd8:	bl	f274 <__sancov_default_options@@Base+0x2578>
   16fdc:	add	w21, w21, #0x1
   16fe0:	add	x19, x19, #0x38
   16fe4:	ldrh	w0, [x20, #24]
   16fe8:	cmp	w0, w21
   16fec:	b.le	17008 <__sanitizer_set_report_fd@@Base+0x41c4>
   16ff0:	ldr	x0, [x20, #16]
   16ff4:	add	x2, x0, x19
   16ff8:	ldr	w0, [x0, x19]
   16ffc:	cmp	w0, #0x1
   17000:	b.ne	16fdc <__sanitizer_set_report_fd@@Base+0x4198>  // b.any
   17004:	b	16fb0 <__sanitizer_set_report_fd@@Base+0x416c>
   17008:	ldr	x19, [x22]
   1700c:	ldr	x3, [x19, #16]
   17010:	ldr	x0, [x19, #8]
   17014:	mov	x1, #0xe38f                	// #58255
   17018:	movk	x1, #0x8e38, lsl #16
   1701c:	movk	x1, #0x38e3, lsl #32
   17020:	movk	x1, #0xe38e, lsl #48
   17024:	umulh	x0, x0, x1
   17028:	lsr	x4, x0, #6
   1702c:	cmp	x3, x0, lsr #6
   17030:	b.hi	17064 <__sanitizer_set_report_fd@@Base+0x4220>  // b.pmore
   17034:	cmp	x3, x4
   17038:	b.eq	1707c <__sanitizer_set_report_fd@@Base+0x4238>  // b.none
   1703c:	ldr	x3, [x19]
   17040:	ldr	x1, [x19, #16]
   17044:	add	x0, x1, #0x1
   17048:	str	x0, [x19, #16]
   1704c:	add	x0, x1, x1, lsl #3
   17050:	mov	x2, #0x48                  	// #72
   17054:	add	x1, sp, #0x38
   17058:	add	x0, x3, x0, lsl #3
   1705c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   17060:	b	16e4c <__sanitizer_set_report_fd@@Base+0x4008>
   17064:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17068:	add	x2, x2, #0x630
   1706c:	mov	w1, #0x1be                 	// #446
   17070:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17074:	add	x0, x0, #0x380
   17078:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1707c:	add	x0, x3, #0x1
   17080:	tst	x3, x0
   17084:	b.eq	17194 <__sanitizer_set_report_fd@@Base+0x4350>  // b.none
   17088:	clz	x2, x0
   1708c:	mov	w1, #0x3f                  	// #63
   17090:	sub	w1, w1, w2
   17094:	add	w2, w1, #0x1
   17098:	mov	x4, #0x1                   	// #1
   1709c:	lsl	x4, x4, x2
   170a0:	cmp	x0, x4
   170a4:	b.cs	17140 <__sanitizer_set_report_fd@@Base+0x42fc>  // b.hs, b.nlast
   170a8:	mov	x2, #0x1                   	// #1
   170ac:	lsl	x1, x2, x1
   170b0:	cmp	x0, x1
   170b4:	b.ls	1715c <__sanitizer_set_report_fd@@Base+0x4318>  // b.plast
   170b8:	cmp	x3, x4
   170bc:	b.hi	1717c <__sanitizer_set_report_fd@@Base+0x4338>  // b.pmore
   170c0:	add	x4, x4, x4, lsl #3
   170c4:	lsl	x20, x4, #3
   170c8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   170cc:	ldr	x0, [x0, #4016]
   170d0:	ldr	x0, [x0]
   170d4:	cbz	x0, 1719c <__sanitizer_set_report_fd@@Base+0x4358>
   170d8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   170dc:	ldr	x0, [x0, #4016]
   170e0:	ldr	x0, [x0]
   170e4:	sub	x1, x0, #0x1
   170e8:	tst	x0, x1
   170ec:	b.ne	171b0 <__sanitizer_set_report_fd@@Base+0x436c>  // b.any
   170f0:	add	x20, x20, x1
   170f4:	neg	x0, x0
   170f8:	and	x20, x20, x0
   170fc:	mov	w2, #0x0                   	// #0
   17100:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17104:	add	x1, x1, #0x350
   17108:	mov	x0, x20
   1710c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   17110:	mov	x21, x0
   17114:	ldr	x1, [x19, #16]
   17118:	add	x1, x1, x1, lsl #3
   1711c:	lsl	x2, x1, #3
   17120:	ldr	x1, [x19]
   17124:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   17128:	ldr	x1, [x19, #8]
   1712c:	ldr	x0, [x19]
   17130:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   17134:	str	x21, [x19]
   17138:	str	x20, [x19, #8]
   1713c:	b	1703c <__sanitizer_set_report_fd@@Base+0x41f8>
   17140:	mov	x3, x0
   17144:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17148:	add	x2, x2, #0x660
   1714c:	mov	w1, #0x17b                 	// #379
   17150:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17154:	add	x0, x0, #0x380
   17158:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1715c:	mov	x4, x1
   17160:	mov	x3, x0
   17164:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17168:	add	x2, x2, #0x688
   1716c:	mov	w1, #0x17c                 	// #380
   17170:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17174:	add	x0, x0, #0x380
   17178:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1717c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17180:	add	x2, x2, #0x6a8
   17184:	mov	w1, #0x1fd                 	// #509
   17188:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1718c:	add	x0, x0, #0x380
   17190:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17194:	mov	x4, x0
   17198:	b	170c0 <__sanitizer_set_report_fd@@Base+0x427c>
   1719c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   171a0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   171a4:	ldr	x1, [x1, #4016]
   171a8:	str	x0, [x1]
   171ac:	b	170d8 <__sanitizer_set_report_fd@@Base+0x4294>
   171b0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   171b4:	add	x0, x0, #0x338
   171b8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   171bc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   171c0:	str	x30, [sp, #-16]!
   171c4:	adrp	x3, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   171c8:	ldr	x3, [x3, #3800]
   171cc:	cbz	x3, 171dc <__sanitizer_set_report_fd@@Base+0x4398>
   171d0:	bl	6470 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   171d4:	ldr	x30, [sp], #16
   171d8:	ret
   171dc:	bl	69d0 <sigaction@plt>
   171e0:	b	171d4 <__sanitizer_set_report_fd@@Base+0x4390>
   171e4:	stp	x19, x20, [sp, #-272]!
   171e8:	str	x30, [sp, #48]
   171ec:	cbz	x1, 17248 <__sanitizer_set_report_fd@@Base+0x4404>
   171f0:	stp	x21, x22, [sp, #16]
   171f4:	and	w0, w0, #0xff
   171f8:	mov	x20, x1
   171fc:	mov	x21, x2
   17200:	cbz	x2, 17270 <__sanitizer_set_report_fd@@Base+0x442c>
   17204:	cbz	w0, 17314 <__sanitizer_set_report_fd@@Base+0x44d0>
   17208:	stp	x23, x24, [sp, #32]
   1720c:	add	x1, sp, #0x40
   17210:	mov	w0, #0x3                   	// #3
   17214:	bl	6990 <getrlimit@plt>
   17218:	sxtw	x19, w0
   1721c:	cbnz	w0, 17294 <__sanitizer_set_report_fd@@Base+0x4450>
   17220:	mov	w1, #0x1                   	// #1
   17224:	add	x0, sp, #0x50
   17228:	bl	1a864 <OnPrint@@Base+0x840>
   1722c:	str	xzr, [sp, #136]
   17230:	str	xzr, [sp, #144]
   17234:	str	xzr, [sp, #184]
   17238:	add	x23, sp, #0x70
   1723c:	add	x22, sp, #0x50
   17240:	add	x24, sp, #0x40
   17244:	b	172b8 <__sanitizer_set_report_fd@@Base+0x4474>
   17248:	stp	x21, x22, [sp, #16]
   1724c:	stp	x23, x24, [sp, #32]
   17250:	mov	x4, #0x0                   	// #0
   17254:	mov	x3, #0x0                   	// #0
   17258:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1725c:	add	x2, x2, #0x958
   17260:	mov	w1, #0x5b                  	// #91
   17264:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17268:	add	x0, x0, #0x970
   1726c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17270:	stp	x23, x24, [sp, #32]
   17274:	mov	x4, #0x0                   	// #0
   17278:	mov	x3, #0x0                   	// #0
   1727c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17280:	add	x2, x2, #0x9b8
   17284:	mov	w1, #0x5c                  	// #92
   17288:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1728c:	add	x0, x0, #0x970
   17290:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17294:	mov	x4, #0x0                   	// #0
   17298:	mov	x3, x19
   1729c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   172a0:	add	x2, x2, #0x9d0
   172a4:	mov	w1, #0x60                  	// #96
   172a8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   172ac:	add	x0, x0, #0x970
   172b0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   172b4:	mov	x19, x0
   172b8:	mov	x1, x23
   172bc:	mov	x0, x22
   172c0:	bl	1aea8 <OnPrint@@Base+0xe84>
   172c4:	and	w0, w0, #0xff
   172c8:	cbz	w0, 172d8 <__sanitizer_set_report_fd@@Base+0x4494>
   172cc:	ldr	x0, [sp, #120]
   172d0:	cmp	x24, x0
   172d4:	b.cs	172b4 <__sanitizer_set_report_fd@@Base+0x4470>  // b.hs, b.nlast
   172d8:	add	x1, sp, #0x40
   172dc:	ldr	x0, [sp, #112]
   172e0:	cmp	x1, x0
   172e4:	b.cc	172f4 <__sanitizer_set_report_fd@@Base+0x44b0>  // b.lo, b.ul, b.last
   172e8:	ldr	x0, [sp, #120]
   172ec:	cmp	x1, x0
   172f0:	b.cc	1739c <__sanitizer_set_report_fd@@Base+0x4558>  // b.lo, b.ul, b.last
   172f4:	mov	x4, #0x0                   	// #0
   172f8:	mov	x3, #0x0                   	// #0
   172fc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17300:	add	x2, x2, #0xa38
   17304:	mov	w1, #0x6a                  	// #106
   17308:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1730c:	add	x0, x0, #0x970
   17310:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17314:	str	xzr, [sp, #264]
   17318:	str	xzr, [sp, #256]
   1731c:	add	x19, sp, #0xc0
   17320:	mov	x0, x19
   17324:	bl	64d0 <pthread_attr_init@plt>
   17328:	bl	6920 <pthread_self@plt>
   1732c:	mov	x1, x19
   17330:	bl	6460 <pthread_getattr_np@plt>
   17334:	sxtw	x3, w0
   17338:	cbnz	w0, 1737c <__sanitizer_set_report_fd@@Base+0x4538>
   1733c:	add	x19, sp, #0xc0
   17340:	add	x2, sp, #0x108
   17344:	add	x1, sp, #0x100
   17348:	mov	x0, x19
   1734c:	bl	192d8 <__sanitizer_set_report_fd@@Base+0x6494>
   17350:	mov	x0, x19
   17354:	bl	65e0 <pthread_attr_destroy@plt>
   17358:	ldr	x1, [sp, #256]
   1735c:	ldr	x0, [sp, #264]
   17360:	add	x0, x0, x1
   17364:	str	x0, [x20]
   17368:	str	x1, [x21]
   1736c:	ldp	x21, x22, [sp, #16]
   17370:	ldr	x30, [sp, #48]
   17374:	ldp	x19, x20, [sp], #272
   17378:	ret
   1737c:	stp	x23, x24, [sp, #32]
   17380:	mov	x4, #0x0                   	// #0
   17384:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17388:	add	x2, x2, #0xa00
   1738c:	mov	w1, #0x88                  	// #136
   17390:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17394:	add	x0, x0, #0x970
   17398:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1739c:	ldr	x1, [sp, #64]
   173a0:	mov	x2, #0x40000000            	// #1073741824
   173a4:	cmp	x1, x2
   173a8:	csel	x1, x1, x2, ls  // ls = plast
   173ac:	str	x0, [x20]
   173b0:	sub	x19, x0, x19
   173b4:	cmp	x19, x1
   173b8:	csel	x19, x19, x1, ls  // ls = plast
   173bc:	sub	x19, x0, x19
   173c0:	str	x19, [x21]
   173c4:	add	x0, sp, #0x50
   173c8:	bl	1a718 <OnPrint@@Base+0x6f4>
   173cc:	ldp	x23, x24, [sp, #32]
   173d0:	b	1736c <__sanitizer_set_report_fd@@Base+0x4528>
   173d4:	stp	x19, x20, [sp, #-48]!
   173d8:	str	x30, [sp, #16]
   173dc:	mov	x19, x0
   173e0:	mov	x20, x1
   173e4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   173e8:	add	x1, x1, #0xa80
   173ec:	mov	x0, #0xffffffffffffffff    	// #-1
   173f0:	bl	6500 <dlsym@plt>
   173f4:	str	x0, [sp, #40]
   173f8:	cbz	x0, 17434 <__sanitizer_set_report_fd@@Base+0x45f0>
   173fc:	mov	x2, #0x8                   	// #8
   17400:	add	x1, sp, #0x28
   17404:	add	x0, sp, #0x20
   17408:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1740c:	mov	w2, #0x1                   	// #1
   17410:	mov	x1, x20
   17414:	mov	x0, x19
   17418:	ldr	x3, [sp, #32]
   1741c:	blr	x3
   17420:	cmp	w0, #0x0
   17424:	cset	w0, eq  // eq = none
   17428:	ldr	x30, [sp, #16]
   1742c:	ldp	x19, x20, [sp], #48
   17430:	ret
   17434:	mov	w0, #0x0                   	// #0
   17438:	b	17428 <__sanitizer_set_report_fd@@Base+0x45e4>
   1743c:	str	x30, [sp, #-48]!
   17440:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17444:	add	x1, x1, #0xa88
   17448:	mov	x0, #0xffffffffffffffff    	// #-1
   1744c:	bl	6500 <dlsym@plt>
   17450:	str	xzr, [sp, #40]
   17454:	str	xzr, [sp, #32]
   17458:	str	x0, [sp, #16]
   1745c:	mov	x2, #0x8                   	// #8
   17460:	add	x1, sp, #0x10
   17464:	add	x0, sp, #0x18
   17468:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1746c:	ldr	x2, [sp, #24]
   17470:	cbz	x2, 174b4 <__sanitizer_set_report_fd@@Base+0x4670>
   17474:	add	x1, sp, #0x20
   17478:	add	x0, sp, #0x28
   1747c:	blr	x2
   17480:	ldr	x1, [sp, #32]
   17484:	cmp	x1, #0xf
   17488:	b.hi	174d4 <__sanitizer_set_report_fd@@Base+0x4690>  // b.pmore
   1748c:	ldr	x0, [sp, #40]
   17490:	mov	x1, #0x10                  	// #16
   17494:	add	x0, x0, x1
   17498:	sub	x0, x0, #0x1
   1749c:	neg	x1, x1
   174a0:	and	x0, x0, x1
   174a4:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   174a8:	str	x0, [x1, #3608]
   174ac:	ldr	x30, [sp], #48
   174b0:	ret
   174b4:	mov	x4, #0x0                   	// #0
   174b8:	mov	x3, #0x0                   	// #0
   174bc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   174c0:	add	x2, x2, #0xaa0
   174c4:	mov	w1, #0xd4                  	// #212
   174c8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   174cc:	add	x0, x0, #0x970
   174d0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   174d4:	sub	x0, x1, #0x1
   174d8:	tst	x0, x1
   174dc:	b.ne	174e8 <__sanitizer_set_report_fd@@Base+0x46a4>  // b.any
   174e0:	ldr	x0, [sp, #40]
   174e4:	b	17494 <__sanitizer_set_report_fd@@Base+0x4650>
   174e8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   174ec:	add	x0, x0, #0x338
   174f0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   174f4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   174f8:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   174fc:	add	x0, x0, #0xe18
   17500:	ldr	x0, [x0, #8]
   17504:	cbnz	x0, 17518 <__sanitizer_set_report_fd@@Base+0x46d4>
   17508:	mov	x0, #0x6f0                 	// #1776
   1750c:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   17510:	add	x1, x1, #0xe18
   17514:	str	x0, [x1, #8]
   17518:	ret
   1751c:	mov	x0, #0x10                  	// #16
   17520:	ret
   17524:	str	x30, [sp, #-16]!
   17528:	bl	174f8 <__sanitizer_set_report_fd@@Base+0x46b4>
   1752c:	mrs	x1, tpidr_el0
   17530:	sub	x0, x1, x0
   17534:	ldr	x30, [sp], #16
   17538:	ret
   1753c:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   17540:	ldr	x0, [x0, #3608]
   17544:	ret
   17548:	stp	x19, x20, [sp, #-64]!
   1754c:	stp	x21, x22, [sp, #16]
   17550:	stp	x23, x30, [sp, #32]
   17554:	and	w23, w0, #0xff
   17558:	mov	x20, x1
   1755c:	mov	x22, x2
   17560:	mov	x19, x3
   17564:	mov	x21, x4
   17568:	bl	17524 <__sanitizer_set_report_fd@@Base+0x46e0>
   1756c:	str	x0, [x19]
   17570:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   17574:	ldr	x0, [x0, #3608]
   17578:	str	x0, [x21]
   1757c:	add	x2, sp, #0x30
   17580:	add	x1, sp, #0x38
   17584:	mov	w0, w23
   17588:	bl	171e4 <__sanitizer_set_report_fd@@Base+0x43a0>
   1758c:	ldr	x1, [sp, #48]
   17590:	str	x1, [x20]
   17594:	ldr	x0, [sp, #56]
   17598:	sub	x0, x0, x1
   1759c:	str	x0, [x22]
   175a0:	cbnz	w23, 175ec <__sanitizer_set_report_fd@@Base+0x47a8>
   175a4:	ldr	x3, [x19]
   175a8:	ldr	x4, [x20]
   175ac:	cmp	x3, x4
   175b0:	b.ls	175ec <__sanitizer_set_report_fd@@Base+0x47a8>  // b.plast
   175b4:	add	x1, x0, x4
   175b8:	cmp	x3, x1
   175bc:	b.cs	175ec <__sanitizer_set_report_fd@@Base+0x47a8>  // b.hs, b.nlast
   175c0:	ldr	x2, [x21]
   175c4:	add	x3, x3, x2
   175c8:	cmp	x4, x3
   175cc:	b.cs	175fc <__sanitizer_set_report_fd@@Base+0x47b8>  // b.hs, b.nlast
   175d0:	cmp	x1, x3
   175d4:	b.cc	17614 <__sanitizer_set_report_fd@@Base+0x47d0>  // b.lo, b.ul, b.last
   175d8:	sub	x0, x0, x2
   175dc:	str	x0, [x22]
   175e0:	ldr	x1, [x20]
   175e4:	add	x0, x1, x0
   175e8:	str	x0, [x19]
   175ec:	ldp	x21, x22, [sp, #16]
   175f0:	ldp	x23, x30, [sp, #32]
   175f4:	ldp	x19, x20, [sp], #64
   175f8:	ret
   175fc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17600:	add	x2, x2, #0xab8
   17604:	mov	w1, #0x203                 	// #515
   17608:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1760c:	add	x0, x0, #0x970
   17610:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17614:	mov	x4, x1
   17618:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1761c:	add	x2, x2, #0xae8
   17620:	mov	w1, #0x204                 	// #516
   17624:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17628:	add	x0, x0, #0x970
   1762c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17630:	stp	x19, x20, [sp, #-48]!
   17634:	stp	x21, x30, [sp, #16]
   17638:	mov	x19, x0
   1763c:	ldrb	w0, [x0, #24]
   17640:	cbz	w0, 176ac <__sanitizer_set_report_fd@@Base+0x4868>
   17644:	ldr	x20, [x19]
   17648:	ldr	x21, [x19, #16]
   1764c:	add	x21, x21, x21, lsl #3
   17650:	add	x21, x20, x21, lsl #3
   17654:	cmp	x20, x21
   17658:	b.eq	17670 <__sanitizer_set_report_fd@@Base+0x482c>  // b.none
   1765c:	mov	x0, x20
   17660:	bl	f180 <__sancov_default_options@@Base+0x2484>
   17664:	add	x20, x20, #0x48
   17668:	cmp	x21, x20
   1766c:	b.ne	1765c <__sanitizer_set_report_fd@@Base+0x4818>  // b.any
   17670:	str	xzr, [x19, #16]
   17674:	mov	w0, #0x1                   	// #1
   17678:	strb	w0, [x19, #24]
   1767c:	stur	wzr, [sp, #41]
   17680:	sturh	wzr, [sp, #45]
   17684:	strb	wzr, [sp, #47]
   17688:	strb	w0, [sp, #40]
   1768c:	str	x19, [sp, #32]
   17690:	add	x1, sp, #0x20
   17694:	adrp	x0, 16000 <__sanitizer_set_report_fd@@Base+0x31bc>
   17698:	add	x0, x0, #0xd48
   1769c:	bl	6640 <dl_iterate_phdr@plt>
   176a0:	ldp	x21, x30, [sp, #16]
   176a4:	ldp	x19, x20, [sp], #48
   176a8:	ret
   176ac:	str	xzr, [x19, #8]
   176b0:	str	xzr, [x19, #16]
   176b4:	str	xzr, [x19]
   176b8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   176bc:	ldr	x0, [x0, #4016]
   176c0:	ldr	x0, [x0]
   176c4:	cbz	x0, 17734 <__sanitizer_set_report_fd@@Base+0x48f0>
   176c8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   176cc:	ldr	x0, [x0, #4016]
   176d0:	ldr	x1, [x0]
   176d4:	sub	x0, x1, #0x1
   176d8:	tst	x0, x1
   176dc:	b.ne	17748 <__sanitizer_set_report_fd@@Base+0x4904>  // b.any
   176e0:	add	x20, x1, #0x11f, lsl #12
   176e4:	add	x20, x20, #0xfff
   176e8:	neg	x1, x1
   176ec:	and	x20, x20, x1
   176f0:	mov	w2, #0x0                   	// #0
   176f4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   176f8:	add	x1, x1, #0x350
   176fc:	mov	x0, x20
   17700:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   17704:	mov	x21, x0
   17708:	ldr	x2, [x19, #16]
   1770c:	add	x2, x2, x2, lsl #3
   17710:	lsl	x2, x2, #3
   17714:	ldr	x1, [x19]
   17718:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1771c:	ldr	x1, [x19, #8]
   17720:	ldr	x0, [x19]
   17724:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   17728:	str	x21, [x19]
   1772c:	str	x20, [x19, #8]
   17730:	b	17674 <__sanitizer_set_report_fd@@Base+0x4830>
   17734:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   17738:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1773c:	ldr	x1, [x1, #4016]
   17740:	str	x0, [x1]
   17744:	b	176c8 <__sanitizer_set_report_fd@@Base+0x4884>
   17748:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1774c:	add	x0, x0, #0x338
   17750:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   17754:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   17758:	stp	x19, x20, [sp, #-32]!
   1775c:	stp	x21, x30, [sp, #16]
   17760:	mov	x20, x0
   17764:	ldrb	w0, [x0, #24]
   17768:	cbz	w0, 177b8 <__sanitizer_set_report_fd@@Base+0x4974>
   1776c:	ldr	x19, [x20]
   17770:	ldr	x21, [x20, #16]
   17774:	add	x21, x21, x21, lsl #3
   17778:	add	x21, x19, x21, lsl #3
   1777c:	cmp	x19, x21
   17780:	b.eq	17798 <__sanitizer_set_report_fd@@Base+0x4954>  // b.none
   17784:	mov	x0, x19
   17788:	bl	f180 <__sancov_default_options@@Base+0x2484>
   1778c:	add	x19, x19, #0x48
   17790:	cmp	x21, x19
   17794:	b.ne	17784 <__sanitizer_set_report_fd@@Base+0x4940>  // b.any
   17798:	str	xzr, [x20, #16]
   1779c:	mov	w0, #0x1                   	// #1
   177a0:	strb	w0, [x20, #24]
   177a4:	mov	x0, x20
   177a8:	bl	16ce0 <__sanitizer_set_report_fd@@Base+0x3e9c>
   177ac:	ldp	x21, x30, [sp, #16]
   177b0:	ldp	x19, x20, [sp], #32
   177b4:	ret
   177b8:	str	xzr, [x20, #8]
   177bc:	str	xzr, [x20, #16]
   177c0:	str	xzr, [x20]
   177c4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   177c8:	ldr	x0, [x0, #4016]
   177cc:	ldr	x0, [x0]
   177d0:	cbz	x0, 17840 <__sanitizer_set_report_fd@@Base+0x49fc>
   177d4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   177d8:	ldr	x0, [x0, #4016]
   177dc:	ldr	x0, [x0]
   177e0:	sub	x1, x0, #0x1
   177e4:	tst	x1, x0
   177e8:	b.ne	17854 <__sanitizer_set_report_fd@@Base+0x4a10>  // b.any
   177ec:	add	x19, x0, #0x11f, lsl #12
   177f0:	add	x19, x19, #0xfff
   177f4:	neg	x0, x0
   177f8:	and	x19, x19, x0
   177fc:	mov	w2, #0x0                   	// #0
   17800:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17804:	add	x1, x1, #0x350
   17808:	mov	x0, x19
   1780c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   17810:	mov	x21, x0
   17814:	ldr	x1, [x20, #16]
   17818:	add	x1, x1, x1, lsl #3
   1781c:	lsl	x2, x1, #3
   17820:	ldr	x1, [x20]
   17824:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   17828:	ldr	x1, [x20, #8]
   1782c:	ldr	x0, [x20]
   17830:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   17834:	str	x21, [x20]
   17838:	str	x19, [x20, #8]
   1783c:	b	1779c <__sanitizer_set_report_fd@@Base+0x4958>
   17840:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   17844:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17848:	ldr	x1, [x1, #4016]
   1784c:	str	x0, [x1]
   17850:	b	177d4 <__sanitizer_set_report_fd@@Base+0x4990>
   17854:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17858:	add	x0, x0, #0x338
   1785c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   17860:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   17864:	stp	x19, x20, [sp, #-96]!
   17868:	str	x30, [sp, #16]
   1786c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17870:	ldr	x0, [x0, #4056]
   17874:	ldrb	w0, [x0, #160]
   17878:	cbnz	w0, 1788c <__sanitizer_set_report_fd@@Base+0x4a48>
   1787c:	bl	16d1c <__sanitizer_set_report_fd@@Base+0x3ed8>
   17880:	ldr	x30, [sp, #16]
   17884:	ldp	x19, x20, [sp], #96
   17888:	ret
   1788c:	mov	x2, #0x0                   	// #0
   17890:	mov	w1, #0x0                   	// #0
   17894:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17898:	add	x0, x0, #0xb20
   1789c:	bl	18054 <__sanitizer_set_report_fd@@Base+0x5210>
   178a0:	mov	w19, w0
   178a4:	cmn	w0, #0x1
   178a8:	b.eq	17994 <__sanitizer_set_report_fd@@Base+0x4b50>  // b.none
   178ac:	mov	x2, #0x3f                  	// #63
   178b0:	add	x1, sp, #0x20
   178b4:	bl	15568 <__sanitizer_set_report_fd@@Base+0x2724>
   178b8:	mov	x20, x0
   178bc:	mov	w0, w19
   178c0:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   178c4:	mov	x0, #0x0                   	// #0
   178c8:	cmp	x20, #0x0
   178cc:	b.le	17880 <__sanitizer_set_report_fd@@Base+0x4a3c>
   178d0:	add	x0, sp, #0x20
   178d4:	strb	wzr, [x0, x20]
   178d8:	ldrb	w0, [sp, #32]
   178dc:	sub	w0, w0, #0x30
   178e0:	and	w0, w0, #0xff
   178e4:	cmp	w0, #0x9
   178e8:	b.hi	179c0 <__sanitizer_set_report_fd@@Base+0x4b7c>  // b.pmore
   178ec:	add	x1, sp, #0x20
   178f0:	ldrb	w0, [x1, #1]!
   178f4:	sub	w0, w0, #0x30
   178f8:	and	w0, w0, #0xff
   178fc:	cmp	w0, #0x9
   17900:	b.ls	178f0 <__sanitizer_set_report_fd@@Base+0x4aac>  // b.plast
   17904:	ldrb	w2, [x1]
   17908:	sub	w0, w2, #0x30
   1790c:	and	w0, w0, #0xff
   17910:	cmp	w2, #0x0
   17914:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   17918:	b.ls	179a4 <__sanitizer_set_report_fd@@Base+0x4b60>  // b.plast
   1791c:	ldrb	w2, [x1, #1]!
   17920:	sub	w0, w2, #0x30
   17924:	and	w0, w0, #0xff
   17928:	cmp	w2, #0x0
   1792c:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   17930:	b.hi	1791c <__sanitizer_set_report_fd@@Base+0x4ad8>  // b.pmore
   17934:	ldrb	w2, [x1]
   17938:	sub	w0, w2, #0x30
   1793c:	and	w0, w0, #0xff
   17940:	cmp	w0, #0x9
   17944:	b.hi	1799c <__sanitizer_set_report_fd@@Base+0x4b58>  // b.pmore
   17948:	mov	x19, #0x0                   	// #0
   1794c:	add	x19, x19, x19, lsl #2
   17950:	and	x2, x2, #0xff
   17954:	add	x2, x2, x19, lsl #1
   17958:	sub	x19, x2, #0x30
   1795c:	ldrb	w2, [x1, #1]!
   17960:	sub	w0, w2, #0x30
   17964:	and	w0, w0, #0xff
   17968:	cmp	w0, #0x9
   1796c:	b.ls	1794c <__sanitizer_set_report_fd@@Base+0x4b08>  // b.plast
   17970:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17974:	ldr	x0, [x0, #4016]
   17978:	ldr	x0, [x0]
   1797c:	cbz	x0, 179ac <__sanitizer_set_report_fd@@Base+0x4b68>
   17980:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17984:	ldr	x0, [x0, #4016]
   17988:	ldr	x0, [x0]
   1798c:	mul	x0, x19, x0
   17990:	b	17880 <__sanitizer_set_report_fd@@Base+0x4a3c>
   17994:	bl	16d1c <__sanitizer_set_report_fd@@Base+0x3ed8>
   17998:	b	17880 <__sanitizer_set_report_fd@@Base+0x4a3c>
   1799c:	mov	x19, #0x0                   	// #0
   179a0:	b	17970 <__sanitizer_set_report_fd@@Base+0x4b2c>
   179a4:	mov	x19, #0x0                   	// #0
   179a8:	b	17970 <__sanitizer_set_report_fd@@Base+0x4b2c>
   179ac:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   179b0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   179b4:	ldr	x1, [x1, #4016]
   179b8:	str	x0, [x1]
   179bc:	b	17980 <__sanitizer_set_report_fd@@Base+0x4b3c>
   179c0:	add	x1, sp, #0x20
   179c4:	b	17904 <__sanitizer_set_report_fd@@Base+0x4ac0>
   179c8:	str	x30, [sp, #-144]!
   179cc:	add	x2, sp, #0x10
   179d0:	mov	x1, #0x80                  	// #128
   179d4:	mov	w0, #0x0                   	// #0
   179d8:	bl	63d0 <sched_getaffinity@plt>
   179dc:	cbnz	w0, 179f4 <__sanitizer_set_report_fd@@Base+0x4bb0>
   179e0:	add	x1, sp, #0x10
   179e4:	mov	x0, #0x80                  	// #128
   179e8:	bl	6770 <__sched_cpucount@plt>
   179ec:	ldr	x30, [sp], #144
   179f0:	ret
   179f4:	sxtw	x3, w0
   179f8:	mov	x4, #0x0                   	// #0
   179fc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17a00:	add	x2, x2, #0xb38
   17a04:	mov	w1, #0x2bb                 	// #699
   17a08:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17a0c:	add	x0, x0, #0x970
   17a10:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17a14:	ret
   17a18:	str	x30, [sp, #-16]!
   17a1c:	mov	x2, x0
   17a20:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17a24:	add	x1, x1, #0x288
   17a28:	mov	w0, #0x6                   	// #6
   17a2c:	bl	67c0 <syslog@plt>
   17a30:	ldr	x30, [sp], #16
   17a34:	ret
   17a38:	ret
   17a3c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17a40:	ldr	x1, [x1, #4056]
   17a44:	ldrb	w1, [x1, #49]
   17a48:	cbz	w1, 17a5c <__sanitizer_set_report_fd@@Base+0x4c18>
   17a4c:	str	x30, [sp, #-16]!
   17a50:	bl	fc88 <__sanitizer_install_malloc_and_free_hooks@@Base+0x29c>
   17a54:	ldr	x30, [sp], #16
   17a58:	ret
   17a5c:	ret
   17a60:	str	x30, [sp, #-32]!
   17a64:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17a68:	ldr	x0, [x0, #4008]
   17a6c:	cbz	x0, 17a88 <__sanitizer_set_report_fd@@Base+0x4c44>
   17a70:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17a74:	ldr	x0, [x0, #4008]
   17a78:	ldr	x0, [x0]
   17a7c:	cbz	x0, 17a88 <__sanitizer_set_report_fd@@Base+0x4c44>
   17a80:	ldrb	w0, [x0]
   17a84:	cbnz	w0, 17ab0 <__sanitizer_set_report_fd@@Base+0x4c6c>
   17a88:	add	x1, sp, #0x10
   17a8c:	mov	w0, #0x1                   	// #1
   17a90:	bl	157d8 <__sanitizer_set_report_fd@@Base+0x2994>
   17a94:	ldr	x2, [sp, #16]
   17a98:	mov	x0, #0xca00                	// #51712
   17a9c:	movk	x0, #0x3b9a, lsl #16
   17aa0:	ldr	x1, [sp, #24]
   17aa4:	madd	x0, x2, x0, x1
   17aa8:	ldr	x30, [sp], #32
   17aac:	ret
   17ab0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17ab4:	ldr	x0, [x0, #3872]
   17ab8:	cbz	x0, 17acc <__sanitizer_set_report_fd@@Base+0x4c88>
   17abc:	add	x1, sp, #0x10
   17ac0:	mov	w0, #0x1                   	// #1
   17ac4:	bl	6610 <real_clock_gettime@plt>
   17ac8:	b	17a94 <__sanitizer_set_report_fd@@Base+0x4c50>
   17acc:	add	x1, sp, #0x10
   17ad0:	mov	w0, #0x1                   	// #1
   17ad4:	bl	6660 <clock_gettime@plt>
   17ad8:	b	17a94 <__sanitizer_set_report_fd@@Base+0x4c50>
   17adc:	cmp	w0, #0x2
   17ae0:	b.eq	17af4 <__sanitizer_set_report_fd@@Base+0x4cb0>  // b.none
   17ae4:	cmp	w0, #0xa
   17ae8:	cset	x0, eq  // eq = none
   17aec:	lsl	x0, x0, #4
   17af0:	ret
   17af4:	mov	x0, #0x4                   	// #4
   17af8:	b	17af0 <__sanitizer_set_report_fd@@Base+0x4cac>
   17afc:	str	x30, [sp, #-16]!
   17b00:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   17b04:	ldr	x30, [sp], #16
   17b08:	ret
   17b0c:	stp	x19, x20, [sp, #-64]!
   17b10:	stp	x21, x22, [sp, #16]
   17b14:	str	x30, [sp, #32]
   17b18:	mov	x19, x0
   17b1c:	mov	x20, x1
   17b20:	and	w21, w2, #0xff
   17b24:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17b28:	ldr	x0, [x0, #4016]
   17b2c:	ldr	x0, [x0]
   17b30:	cbz	x0, 17ba4 <__sanitizer_set_report_fd@@Base+0x4d60>
   17b34:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17b38:	ldr	x0, [x0, #4016]
   17b3c:	ldr	x2, [x0]
   17b40:	sub	x0, x2, #0x1
   17b44:	tst	x2, x0
   17b48:	b.ne	17bb8 <__sanitizer_set_report_fd@@Base+0x4d74>  // b.any
   17b4c:	add	x19, x19, x0
   17b50:	neg	x2, x2
   17b54:	and	x19, x19, x2
   17b58:	mov	x5, #0x0                   	// #0
   17b5c:	mov	w4, #0xffffffff            	// #-1
   17b60:	mov	w3, #0x22                  	// #34
   17b64:	mov	w2, #0x3                   	// #3
   17b68:	mov	x1, x19
   17b6c:	mov	x0, #0x0                   	// #0
   17b70:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   17b74:	mov	x22, x0
   17b78:	add	x1, sp, #0x3c
   17b7c:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   17b80:	and	w1, w0, #0xff
   17b84:	cbnz	w1, 17bc8 <__sanitizer_set_report_fd@@Base+0x4d84>
   17b88:	mov	x0, x19
   17b8c:	bl	f37c <__sancov_default_options@@Base+0x2680>
   17b90:	mov	x0, x22
   17b94:	ldp	x21, x22, [sp, #16]
   17b98:	ldr	x30, [sp, #32]
   17b9c:	ldp	x19, x20, [sp], #64
   17ba0:	ret
   17ba4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   17ba8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17bac:	ldr	x1, [x1, #4016]
   17bb0:	str	x0, [x1]
   17bb4:	b	17b34 <__sanitizer_set_report_fd@@Base+0x4cf0>
   17bb8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17bbc:	add	x0, x0, #0x338
   17bc0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   17bc4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   17bc8:	mov	w4, w21
   17bcc:	ldr	w3, [sp, #60]
   17bd0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17bd4:	add	x2, x2, #0xba8
   17bd8:	mov	x1, x20
   17bdc:	mov	x0, x19
   17be0:	bl	ef70 <__sancov_default_options@@Base+0x2274>
   17be4:	cmp	x0, #0x0
   17be8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   17bec:	b.ne	17bf4 <__sanitizer_set_report_fd@@Base+0x4db0>  // b.any
   17bf0:	ret
   17bf4:	stp	x19, x20, [sp, #-32]!
   17bf8:	str	x30, [sp, #16]
   17bfc:	mov	x20, x0
   17c00:	mov	x19, x1
   17c04:	bl	154f4 <__sanitizer_set_report_fd@@Base+0x26b0>
   17c08:	mov	x1, #0x0                   	// #0
   17c0c:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   17c10:	and	w0, w0, #0xff
   17c14:	cbnz	w0, 17c2c <__sanitizer_set_report_fd@@Base+0x4de8>
   17c18:	mov	x0, x19
   17c1c:	bl	f3dc <__sancov_default_options@@Base+0x26e0>
   17c20:	ldr	x30, [sp, #16]
   17c24:	ldp	x19, x20, [sp], #32
   17c28:	ret
   17c2c:	mov	x4, x20
   17c30:	mov	x3, x19
   17c34:	mov	x2, x19
   17c38:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17c3c:	ldr	x0, [x0, #4024]
   17c40:	ldr	x1, [x0]
   17c44:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17c48:	add	x0, x0, #0xbb8
   17c4c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   17c50:	mov	x4, #0x0                   	// #0
   17c54:	mov	x3, #0x0                   	// #0
   17c58:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17c5c:	add	x2, x2, #0xbf8
   17c60:	mov	w1, #0x3c                  	// #60
   17c64:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17c68:	add	x0, x0, #0xc20
   17c6c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17c70:	stp	x19, x20, [sp, #-48]!
   17c74:	stp	x21, x30, [sp, #16]
   17c78:	mov	x19, x0
   17c7c:	mov	x21, x1
   17c80:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17c84:	ldr	x1, [x1, #4016]
   17c88:	ldr	x1, [x1]
   17c8c:	cbz	x1, 17cfc <__sanitizer_set_report_fd@@Base+0x4eb8>
   17c90:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17c94:	ldr	x2, [x2, #4016]
   17c98:	ldr	x2, [x2]
   17c9c:	sub	x1, x2, #0x1
   17ca0:	tst	x2, x1
   17ca4:	b.ne	17d10 <__sanitizer_set_report_fd@@Base+0x4ecc>  // b.any
   17ca8:	add	x19, x19, x1
   17cac:	neg	x2, x2
   17cb0:	and	x19, x19, x2
   17cb4:	mov	x5, #0x0                   	// #0
   17cb8:	mov	w4, #0xffffffff            	// #-1
   17cbc:	mov	w3, #0x22                  	// #34
   17cc0:	mov	w2, #0x3                   	// #3
   17cc4:	mov	x1, x19
   17cc8:	mov	x0, #0x0                   	// #0
   17ccc:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   17cd0:	mov	x20, x0
   17cd4:	add	x1, sp, #0x2c
   17cd8:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   17cdc:	and	w0, w0, #0xff
   17ce0:	cbnz	w0, 17d20 <__sanitizer_set_report_fd@@Base+0x4edc>
   17ce4:	mov	x0, x19
   17ce8:	bl	f37c <__sancov_default_options@@Base+0x2680>
   17cec:	mov	x0, x20
   17cf0:	ldp	x21, x30, [sp, #16]
   17cf4:	ldp	x19, x20, [sp], #48
   17cf8:	ret
   17cfc:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   17d00:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17d04:	ldr	x1, [x1, #4016]
   17d08:	str	x0, [x1]
   17d0c:	b	17c90 <__sanitizer_set_report_fd@@Base+0x4e4c>
   17d10:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17d14:	add	x0, x0, #0x338
   17d18:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   17d1c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   17d20:	ldr	w3, [sp, #44]
   17d24:	mov	x0, #0x0                   	// #0
   17d28:	cmp	w3, #0xc
   17d2c:	b.eq	17cf0 <__sanitizer_set_report_fd@@Base+0x4eac>  // b.none
   17d30:	mov	w4, #0x0                   	// #0
   17d34:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17d38:	add	x2, x2, #0xba8
   17d3c:	mov	x1, x21
   17d40:	mov	x0, x19
   17d44:	bl	ef70 <__sancov_default_options@@Base+0x2274>
   17d48:	stp	x19, x20, [sp, #-48]!
   17d4c:	stp	x21, x22, [sp, #16]
   17d50:	stp	x23, x30, [sp, #32]
   17d54:	mov	x19, x0
   17d58:	sub	x0, x0, #0x1
   17d5c:	tst	x0, x19
   17d60:	b.ne	17db8 <__sanitizer_set_report_fd@@Base+0x4f74>  // b.any
   17d64:	mov	x20, x1
   17d68:	mov	x1, x2
   17d6c:	sub	x22, x20, #0x1
   17d70:	tst	x20, x22
   17d74:	b.ne	17dd8 <__sanitizer_set_report_fd@@Base+0x4f94>  // b.any
   17d78:	add	x21, x19, x20
   17d7c:	mov	x0, x21
   17d80:	bl	17c70 <__sanitizer_set_report_fd@@Base+0x4e2c>
   17d84:	mov	x23, x0
   17d88:	cbz	x0, 17da8 <__sanitizer_set_report_fd@@Base+0x4f64>
   17d8c:	add	x21, x0, x21
   17d90:	tst	x0, x22
   17d94:	b.ne	17df8 <__sanitizer_set_report_fd@@Base+0x4fb4>  // b.any
   17d98:	add	x0, x23, x19
   17d9c:	cmp	x21, x0
   17da0:	b.ne	17e14 <__sanitizer_set_report_fd@@Base+0x4fd0>  // b.any
   17da4:	mov	x0, x23
   17da8:	ldp	x21, x22, [sp, #16]
   17dac:	ldp	x23, x30, [sp, #32]
   17db0:	ldp	x19, x20, [sp], #48
   17db4:	ret
   17db8:	mov	x4, #0x0                   	// #0
   17dbc:	mov	x3, #0x0                   	// #0
   17dc0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17dc4:	add	x2, x2, #0xc60
   17dc8:	mov	w1, #0x55                  	// #85
   17dcc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17dd0:	add	x0, x0, #0xc20
   17dd4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17dd8:	mov	x4, #0x0                   	// #0
   17ddc:	mov	x3, #0x0                   	// #0
   17de0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x1150>
   17de4:	add	x2, x2, #0x730
   17de8:	mov	w1, #0x56                  	// #86
   17dec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17df0:	add	x0, x0, #0xc20
   17df4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17df8:	add	x22, x0, x22
   17dfc:	neg	x20, x20
   17e00:	and	x20, x22, x20
   17e04:	sub	x1, x20, x0
   17e08:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   17e0c:	mov	x23, x20
   17e10:	b	17d98 <__sanitizer_set_report_fd@@Base+0x4f54>
   17e14:	sub	x1, x21, x0
   17e18:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   17e1c:	b	17da4 <__sanitizer_set_report_fd@@Base+0x4f60>
   17e20:	stp	x19, x20, [sp, #-48]!
   17e24:	stp	x21, x30, [sp, #16]
   17e28:	mov	x19, x0
   17e2c:	mov	x20, x1
   17e30:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17e34:	ldr	x0, [x0, #4016]
   17e38:	ldr	x0, [x0]
   17e3c:	cbz	x0, 17ea8 <__sanitizer_set_report_fd@@Base+0x5064>
   17e40:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17e44:	ldr	x0, [x0, #4016]
   17e48:	ldr	x2, [x0]
   17e4c:	sub	x0, x2, #0x1
   17e50:	tst	x2, x0
   17e54:	b.ne	17ebc <__sanitizer_set_report_fd@@Base+0x5078>  // b.any
   17e58:	add	x0, x19, x0
   17e5c:	neg	x1, x2
   17e60:	mov	x5, #0x0                   	// #0
   17e64:	mov	w4, #0xffffffff            	// #-1
   17e68:	mov	w3, #0x4022                	// #16418
   17e6c:	mov	w2, #0x3                   	// #3
   17e70:	and	x1, x0, x1
   17e74:	mov	x0, #0x0                   	// #0
   17e78:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   17e7c:	mov	x21, x0
   17e80:	add	x1, sp, #0x2c
   17e84:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   17e88:	and	w1, w0, #0xff
   17e8c:	cbnz	w1, 17ecc <__sanitizer_set_report_fd@@Base+0x5088>
   17e90:	mov	x0, x19
   17e94:	bl	f37c <__sancov_default_options@@Base+0x2680>
   17e98:	mov	x0, x21
   17e9c:	ldp	x21, x30, [sp, #16]
   17ea0:	ldp	x19, x20, [sp], #48
   17ea4:	ret
   17ea8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   17eac:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17eb0:	ldr	x1, [x1, #4016]
   17eb4:	str	x0, [x1]
   17eb8:	b	17e40 <__sanitizer_set_report_fd@@Base+0x4ffc>
   17ebc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17ec0:	add	x0, x0, #0x338
   17ec4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   17ec8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   17ecc:	mov	w4, #0x0                   	// #0
   17ed0:	ldr	w3, [sp, #44]
   17ed4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17ed8:	add	x2, x2, #0xc80
   17edc:	mov	x1, x20
   17ee0:	mov	x0, x19
   17ee4:	bl	ef70 <__sancov_default_options@@Base+0x2274>
   17ee8:	stp	x19, x20, [sp, #-96]!
   17eec:	stp	x21, x22, [sp, #16]
   17ef0:	str	x30, [sp, #32]
   17ef4:	mov	x21, x0
   17ef8:	mov	x20, x1
   17efc:	and	w22, w2, #0xff
   17f00:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17f04:	ldr	x0, [x0, #4016]
   17f08:	ldr	x0, [x0]
   17f0c:	cbz	x0, 17f7c <__sanitizer_set_report_fd@@Base+0x5138>
   17f10:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17f14:	ldr	x0, [x0, #4016]
   17f18:	ldr	x3, [x0]
   17f1c:	neg	x6, x3
   17f20:	and	x0, x6, x21
   17f24:	sub	x2, x3, #0x1
   17f28:	tst	x3, x2
   17f2c:	b.ne	17f90 <__sanitizer_set_report_fd@@Base+0x514c>  // b.any
   17f30:	add	x1, x20, x2
   17f34:	mov	x5, #0x0                   	// #0
   17f38:	mov	w4, #0xffffffff            	// #-1
   17f3c:	mov	w3, #0x32                  	// #50
   17f40:	mov	w2, #0x3                   	// #3
   17f44:	and	x1, x1, x6
   17f48:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   17f4c:	mov	x19, x0
   17f50:	add	x1, sp, #0x5c
   17f54:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   17f58:	and	w0, w0, #0xff
   17f5c:	cbnz	w0, 17fa0 <__sanitizer_set_report_fd@@Base+0x515c>
   17f60:	mov	x0, x20
   17f64:	bl	f37c <__sancov_default_options@@Base+0x2680>
   17f68:	mov	x0, x19
   17f6c:	ldp	x21, x22, [sp, #16]
   17f70:	ldr	x30, [sp, #32]
   17f74:	ldp	x19, x20, [sp], #96
   17f78:	ret
   17f7c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   17f80:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   17f84:	ldr	x1, [x1, #4016]
   17f88:	str	x0, [x1]
   17f8c:	b	17f10 <__sanitizer_set_report_fd@@Base+0x50cc>
   17f90:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   17f94:	add	x0, x0, #0x338
   17f98:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   17f9c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   17fa0:	cbz	w22, 17fb8 <__sanitizer_set_report_fd@@Base+0x5174>
   17fa4:	ldr	w0, [sp, #92]
   17fa8:	cmp	w0, #0xc
   17fac:	b.ne	17fb8 <__sanitizer_set_report_fd@@Base+0x5174>  // b.any
   17fb0:	mov	x0, #0x0                   	// #0
   17fb4:	b	17f6c <__sanitizer_set_report_fd@@Base+0x5128>
   17fb8:	add	x19, sp, #0x30
   17fbc:	mov	x3, x21
   17fc0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17fc4:	add	x2, x2, #0xc98
   17fc8:	mov	x1, #0x28                  	// #40
   17fcc:	mov	x0, x19
   17fd0:	bl	1a028 <OnPrint@@Base+0x4>
   17fd4:	mov	w4, #0x0                   	// #0
   17fd8:	ldr	w3, [sp, #92]
   17fdc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   17fe0:	add	x2, x2, #0xba8
   17fe4:	mov	x1, x19
   17fe8:	mov	x0, x20
   17fec:	bl	ef70 <__sancov_default_options@@Base+0x2274>
   17ff0:	str	x30, [sp, #-16]!
   17ff4:	mov	w2, #0x0                   	// #0
   17ff8:	bl	17ee8 <__sanitizer_set_report_fd@@Base+0x50a4>
   17ffc:	ldr	x30, [sp], #16
   18000:	ret
   18004:	str	x30, [sp, #-16]!
   18008:	mov	w2, #0x1                   	// #1
   1800c:	bl	17ee8 <__sanitizer_set_report_fd@@Base+0x50a4>
   18010:	ldr	x30, [sp], #16
   18014:	ret
   18018:	str	x30, [sp, #-16]!
   1801c:	mov	w2, #0x0                   	// #0
   18020:	bl	15500 <__sanitizer_set_report_fd@@Base+0x26bc>
   18024:	cmp	w0, #0x0
   18028:	cset	w0, eq  // eq = none
   1802c:	ldr	x30, [sp], #16
   18030:	ret
   18034:	str	x30, [sp, #-16]!
   18038:	mov	w2, #0x1                   	// #1
   1803c:	bl	15500 <__sanitizer_set_report_fd@@Base+0x26bc>
   18040:	cmp	w0, #0x0
   18044:	cset	w0, eq  // eq = none
   18048:	ldr	x30, [sp], #16
   1804c:	ret
   18050:	ret
   18054:	stp	x19, x20, [sp, #-32]!
   18058:	str	x30, [sp, #16]
   1805c:	mov	w3, w1
   18060:	mov	x20, x2
   18064:	mov	w1, #0x241                 	// #577
   18068:	cmp	w3, #0x1
   1806c:	b.eq	18080 <__sanitizer_set_report_fd@@Base+0x523c>  // b.none
   18070:	cmp	w3, #0x2
   18074:	b.eq	180ac <__sanitizer_set_report_fd@@Base+0x5268>  // b.none
   18078:	cmp	w3, #0x0
   1807c:	csel	w1, w1, wzr, ne  // ne = any
   18080:	mov	w2, #0x1b0                 	// #432
   18084:	bl	15540 <__sanitizer_set_report_fd@@Base+0x26fc>
   18088:	mov	x19, x0
   1808c:	mov	x1, x20
   18090:	sxtw	x0, w0
   18094:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   18098:	ands	w0, w0, #0xff
   1809c:	csinv	w0, w19, wzr, eq  // eq = none
   180a0:	ldr	x30, [sp, #16]
   180a4:	ldp	x19, x20, [sp], #32
   180a8:	ret
   180ac:	mov	w1, #0x42                  	// #66
   180b0:	b	18080 <__sanitizer_set_report_fd@@Base+0x523c>
   180b4:	str	x30, [sp, #-16]!
   180b8:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   180bc:	ldr	x30, [sp], #16
   180c0:	ret
   180c4:	stp	x19, x20, [sp, #-32]!
   180c8:	stp	x21, x30, [sp, #16]
   180cc:	mov	x19, x3
   180d0:	mov	x20, x4
   180d4:	bl	15568 <__sanitizer_set_report_fd@@Base+0x2724>
   180d8:	mov	x21, x0
   180dc:	mov	x1, x20
   180e0:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   180e4:	and	w1, w0, #0xff
   180e8:	mov	w0, #0x0                   	// #0
   180ec:	cbnz	w1, 180fc <__sanitizer_set_report_fd@@Base+0x52b8>
   180f0:	mov	w0, #0x1                   	// #1
   180f4:	cbz	x19, 180fc <__sanitizer_set_report_fd@@Base+0x52b8>
   180f8:	str	x21, [x19]
   180fc:	ldp	x21, x30, [sp, #16]
   18100:	ldp	x19, x20, [sp], #32
   18104:	ret
   18108:	stp	x19, x20, [sp, #-32]!
   1810c:	stp	x21, x30, [sp, #16]
   18110:	mov	x19, x3
   18114:	mov	x20, x4
   18118:	bl	15590 <__sanitizer_set_report_fd@@Base+0x274c>
   1811c:	mov	x21, x0
   18120:	mov	x1, x20
   18124:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   18128:	and	w1, w0, #0xff
   1812c:	mov	w0, #0x0                   	// #0
   18130:	cbnz	w1, 18140 <__sanitizer_set_report_fd@@Base+0x52fc>
   18134:	mov	w0, #0x1                   	// #1
   18138:	cbz	x19, 18140 <__sanitizer_set_report_fd@@Base+0x52fc>
   1813c:	str	x21, [x19]
   18140:	ldp	x21, x30, [sp, #16]
   18144:	ldp	x19, x20, [sp], #32
   18148:	ret
   1814c:	stp	x19, x30, [sp, #-16]!
   18150:	mov	x19, x2
   18154:	bl	156a4 <__sanitizer_set_report_fd@@Base+0x2860>
   18158:	mov	x1, x19
   1815c:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   18160:	and	w0, w0, #0xff
   18164:	eor	w0, w0, #0x1
   18168:	ldp	x19, x30, [sp], #16
   1816c:	ret
   18170:	stp	x19, x20, [sp, #-48]!
   18174:	stp	x21, x22, [sp, #16]
   18178:	str	x30, [sp, #32]
   1817c:	mov	x21, x1
   18180:	mov	x2, #0x0                   	// #0
   18184:	mov	w1, #0x0                   	// #0
   18188:	bl	18054 <__sanitizer_set_report_fd@@Base+0x5210>
   1818c:	cmn	w0, #0x1
   18190:	b.eq	18220 <__sanitizer_set_report_fd@@Base+0x53dc>  // b.none
   18194:	mov	w20, w0
   18198:	bl	15630 <__sanitizer_set_report_fd@@Base+0x27ec>
   1819c:	mov	x19, x0
   181a0:	cmn	x0, #0x1
   181a4:	b.eq	18240 <__sanitizer_set_report_fd@@Base+0x53fc>  // b.none
   181a8:	cbz	x0, 18260 <__sanitizer_set_report_fd@@Base+0x541c>
   181ac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   181b0:	ldr	x0, [x0, #4016]
   181b4:	ldr	x0, [x0]
   181b8:	cbz	x0, 18280 <__sanitizer_set_report_fd@@Base+0x543c>
   181bc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   181c0:	ldr	x0, [x0, #4016]
   181c4:	ldr	x2, [x0]
   181c8:	sub	x1, x2, #0x1
   181cc:	ands	x22, x2, x1
   181d0:	b.ne	18294 <__sanitizer_set_report_fd@@Base+0x5450>  // b.any
   181d4:	add	x19, x19, x1
   181d8:	neg	x2, x2
   181dc:	and	x1, x19, x2
   181e0:	str	x1, [x21]
   181e4:	mov	x5, #0x0                   	// #0
   181e8:	mov	w4, w20
   181ec:	mov	w3, #0x2                   	// #2
   181f0:	mov	w2, #0x1                   	// #1
   181f4:	mov	x0, #0x0                   	// #0
   181f8:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   181fc:	mov	x19, x0
   18200:	mov	x1, #0x0                   	// #0
   18204:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   18208:	ands	w0, w0, #0xff
   1820c:	csel	x0, x22, x19, ne  // ne = any
   18210:	ldp	x21, x22, [sp, #16]
   18214:	ldr	x30, [sp, #32]
   18218:	ldp	x19, x20, [sp], #48
   1821c:	ret
   18220:	mov	x4, #0x0                   	// #0
   18224:	mov	x3, #0x0                   	// #0
   18228:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1822c:	add	x2, x2, #0xcb0
   18230:	mov	w1, #0xc9                  	// #201
   18234:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18238:	add	x0, x0, #0xc20
   1823c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18240:	mov	x4, #0xffffffffffffffff    	// #-1
   18244:	mov	x3, x4
   18248:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1824c:	add	x2, x2, #0xcd0
   18250:	mov	w1, #0xcb                  	// #203
   18254:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18258:	add	x0, x0, #0xc20
   1825c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18260:	mov	x4, #0x0                   	// #0
   18264:	mov	x3, #0x0                   	// #0
   18268:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1826c:	add	x2, x2, #0xcf0
   18270:	mov	w1, #0xcc                  	// #204
   18274:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18278:	add	x0, x0, #0xc20
   1827c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18280:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   18284:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18288:	ldr	x1, [x1, #4016]
   1828c:	str	x0, [x1]
   18290:	b	181bc <__sanitizer_set_report_fd@@Base+0x5378>
   18294:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   18298:	add	x0, x0, #0x338
   1829c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   182a0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   182a4:	stp	x19, x20, [sp, #-64]!
   182a8:	stp	x21, x22, [sp, #16]
   182ac:	str	x30, [sp, #32]
   182b0:	mov	x22, x1
   182b4:	mov	w20, w2
   182b8:	mov	x21, x3
   182bc:	cmp	x0, #0x0
   182c0:	mov	x5, x3
   182c4:	mov	w4, w2
   182c8:	mov	x3, #0x11                  	// #17
   182cc:	csinc	x3, x3, xzr, ne  // ne = any
   182d0:	mov	w2, #0x3                   	// #3
   182d4:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   182d8:	mov	x19, x0
   182dc:	str	wzr, [sp, #60]
   182e0:	add	x1, sp, #0x3c
   182e4:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   182e8:	and	w0, w0, #0xff
   182ec:	cbnz	w0, 18304 <__sanitizer_set_report_fd@@Base+0x54c0>
   182f0:	mov	x0, x19
   182f4:	ldp	x21, x22, [sp, #16]
   182f8:	ldr	x30, [sp, #32]
   182fc:	ldp	x19, x20, [sp], #64
   18300:	ret
   18304:	ldr	w5, [sp, #60]
   18308:	mov	x4, x19
   1830c:	mov	x3, x22
   18310:	mov	x2, x21
   18314:	mov	w1, w20
   18318:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1831c:	add	x0, x0, #0xd08
   18320:	bl	1a368 <OnPrint@@Base+0x344>
   18324:	mov	x0, #0x0                   	// #0
   18328:	b	182f4 <__sanitizer_set_report_fd@@Base+0x54b0>
   1832c:	stp	x19, x20, [sp, #-160]!
   18330:	stp	x21, x22, [sp, #16]
   18334:	stp	x23, x30, [sp, #32]
   18338:	mov	x21, x0
   1833c:	mov	x20, x1
   18340:	mov	w1, #0x1                   	// #1
   18344:	add	x0, sp, #0x80
   18348:	bl	1a864 <OnPrint@@Base+0x840>
   1834c:	str	xzr, [sp, #72]
   18350:	str	xzr, [sp, #80]
   18354:	str	xzr, [sp, #120]
   18358:	add	x23, sp, #0x30
   1835c:	add	x22, sp, #0x80
   18360:	mov	x1, x23
   18364:	mov	x0, x22
   18368:	bl	1aea8 <OnPrint@@Base+0xe84>
   1836c:	and	w2, w0, #0xff
   18370:	cbz	w2, 18418 <__sanitizer_set_report_fd@@Base+0x55d4>
   18374:	ldr	x3, [sp, #48]
   18378:	ldr	x2, [sp, #56]
   1837c:	cmp	x3, x2
   18380:	b.eq	18360 <__sanitizer_set_report_fd@@Base+0x551c>  // b.none
   18384:	cbz	x2, 183b8 <__sanitizer_set_report_fd@@Base+0x5574>
   18388:	sub	x2, x2, #0x1
   1838c:	cmp	x3, x2
   18390:	b.hi	183d8 <__sanitizer_set_report_fd@@Base+0x5594>  // b.pmore
   18394:	cmp	x21, x20
   18398:	b.hi	183f8 <__sanitizer_set_report_fd@@Base+0x55b4>  // b.pmore
   1839c:	cmp	x2, x21
   183a0:	cset	w19, cc  // cc = lo, ul, last
   183a4:	cmp	x3, x20
   183a8:	cset	w0, hi  // hi = pmore
   183ac:	orr	w19, w19, w0
   183b0:	cbnz	w19, 18360 <__sanitizer_set_report_fd@@Base+0x551c>
   183b4:	b	1841c <__sanitizer_set_report_fd@@Base+0x55d8>
   183b8:	mov	x4, #0x0                   	// #0
   183bc:	mov	x3, #0x0                   	// #0
   183c0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   183c4:	add	x2, x2, #0xd48
   183c8:	mov	w1, #0xef                  	// #239
   183cc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   183d0:	add	x0, x0, #0xc20
   183d4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   183d8:	mov	x4, #0x0                   	// #0
   183dc:	mov	x3, #0x0                   	// #0
   183e0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   183e4:	add	x2, x2, #0xd68
   183e8:	mov	w1, #0xe1                  	// #225
   183ec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   183f0:	add	x0, x0, #0xc20
   183f4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   183f8:	mov	x4, #0x0                   	// #0
   183fc:	mov	x3, #0x0                   	// #0
   18400:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18404:	add	x2, x2, #0xd88
   18408:	mov	w1, #0xe2                  	// #226
   1840c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18410:	add	x0, x0, #0xc20
   18414:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18418:	mov	w19, #0x1                   	// #1
   1841c:	add	x0, sp, #0x80
   18420:	bl	1a718 <OnPrint@@Base+0x6f4>
   18424:	mov	w0, w19
   18428:	ldp	x21, x22, [sp, #16]
   1842c:	ldp	x23, x30, [sp, #32]
   18430:	ldp	x19, x20, [sp], #160
   18434:	ret
   18438:	stp	x19, x20, [sp, #-160]!
   1843c:	stp	x21, x22, [sp, #16]
   18440:	str	x30, [sp, #32]
   18444:	mov	w1, #0x1                   	// #1
   18448:	add	x0, sp, #0x80
   1844c:	bl	1a864 <OnPrint@@Base+0x840>
   18450:	mov	w2, #0x0                   	// #0
   18454:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18458:	add	x1, x1, #0xda8
   1845c:	mov	x0, #0xfff                 	// #4095
   18460:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   18464:	mov	x22, x0
   18468:	str	x0, [sp, #72]
   1846c:	mov	x0, #0xfff                 	// #4095
   18470:	str	x0, [sp, #80]
   18474:	str	xzr, [sp, #120]
   18478:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1847c:	add	x0, x0, #0xdb8
   18480:	bl	1a3fc <OnPrint@@Base+0x3d8>
   18484:	add	x21, sp, #0x30
   18488:	add	x20, sp, #0x80
   1848c:	adrp	x19, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18490:	add	x19, x19, #0xdd8
   18494:	mov	x1, x21
   18498:	mov	x0, x20
   1849c:	bl	1aea8 <OnPrint@@Base+0xe84>
   184a0:	and	w0, w0, #0xff
   184a4:	cbz	w0, 184c0 <__sanitizer_set_report_fd@@Base+0x567c>
   184a8:	ldr	x3, [sp, #72]
   184ac:	ldr	x2, [sp, #56]
   184b0:	ldr	x1, [sp, #48]
   184b4:	mov	x0, x19
   184b8:	bl	1a368 <OnPrint@@Base+0x344>
   184bc:	b	18494 <__sanitizer_set_report_fd@@Base+0x5650>
   184c0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   184c4:	add	x0, x0, #0xde8
   184c8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   184cc:	mov	x1, #0xfff                 	// #4095
   184d0:	mov	x0, x22
   184d4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   184d8:	add	x0, sp, #0x80
   184dc:	bl	1a718 <OnPrint@@Base+0x6f4>
   184e0:	ldp	x21, x22, [sp, #16]
   184e4:	ldr	x30, [sp, #32]
   184e8:	ldp	x19, x20, [sp], #160
   184ec:	ret
   184f0:	str	x30, [sp, #-16]!
   184f4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   184f8:	add	x0, x0, #0xe08
   184fc:	bl	157e8 <__sanitizer_set_report_fd@@Base+0x29a4>
   18500:	ldr	x30, [sp], #16
   18504:	ret
   18508:	and	w0, w0, #0xff
   1850c:	cmp	w0, #0x2f
   18510:	cset	w0, eq  // eq = none
   18514:	ret
   18518:	cbz	x0, 1852c <__sanitizer_set_report_fd@@Base+0x56e8>
   1851c:	ldrb	w0, [x0]
   18520:	cmp	w0, #0x2f
   18524:	cset	w0, eq  // eq = none
   18528:	ret
   1852c:	mov	w0, #0x0                   	// #0
   18530:	b	18528 <__sanitizer_set_report_fd@@Base+0x56e4>
   18534:	stp	x19, x20, [sp, #-48]!
   18538:	stp	x21, x22, [sp, #16]
   1853c:	str	x30, [sp, #32]
   18540:	mov	x19, x0
   18544:	mov	x22, x1
   18548:	mov	x20, x2
   1854c:	ldr	x21, [x0]
   18550:	mov	w1, #0x1                   	// #1
   18554:	ldxrb	w0, [x21]
   18558:	stxrb	w2, w1, [x21]
   1855c:	cbnz	w2, 18554 <__sanitizer_set_report_fd@@Base+0x5710>
   18560:	dmb	ish
   18564:	and	w0, w0, #0xff
   18568:	cbnz	w0, 185a4 <__sanitizer_set_report_fd@@Base+0x5760>
   1856c:	mov	x0, x19
   18570:	bl	12384 <__sanitizer_cov_dump@@Base+0x1e54>
   18574:	mov	x2, x20
   18578:	mov	x1, x22
   1857c:	ldr	w0, [x19, #8]
   18580:	bl	15590 <__sanitizer_set_report_fd@@Base+0x274c>
   18584:	cmp	x0, x20
   18588:	b.ne	185b0 <__sanitizer_set_report_fd@@Base+0x576c>  // b.any
   1858c:	dmb	ish
   18590:	strb	wzr, [x21]
   18594:	ldp	x21, x22, [sp, #16]
   18598:	ldr	x30, [sp, #32]
   1859c:	ldp	x19, x20, [sp], #48
   185a0:	ret
   185a4:	mov	x0, x21
   185a8:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   185ac:	b	1856c <__sanitizer_set_report_fd@@Base+0x5728>
   185b0:	ldr	w20, [x19, #8]
   185b4:	adrp	x19, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   185b8:	add	x19, x19, #0xe10
   185bc:	mov	x0, x19
   185c0:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   185c4:	mov	x2, x0
   185c8:	mov	x1, x19
   185cc:	mov	w0, w20
   185d0:	bl	15590 <__sanitizer_set_report_fd@@Base+0x274c>
   185d4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   185d8:	stp	x19, x20, [sp, #-192]!
   185dc:	stp	x21, x22, [sp, #16]
   185e0:	stp	x23, x24, [sp, #32]
   185e4:	stp	x25, x26, [sp, #48]
   185e8:	str	x30, [sp, #64]
   185ec:	mov	x22, x0
   185f0:	mov	x24, x1
   185f4:	mov	x23, x2
   185f8:	mov	w1, #0x0                   	// #0
   185fc:	add	x0, sp, #0xa0
   18600:	bl	1a864 <OnPrint@@Base+0x840>
   18604:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18608:	ldr	x0, [x0, #4016]
   1860c:	ldr	x0, [x0]
   18610:	cbz	x0, 18708 <__sanitizer_set_report_fd@@Base+0x58c4>
   18614:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18618:	ldr	x0, [x0, #4016]
   1861c:	ldr	x3, [x0]
   18620:	sub	x0, x3, #0x1
   18624:	tst	x0, x3
   18628:	b.ne	1871c <__sanitizer_set_report_fd@@Base+0x58d8>  // b.any
   1862c:	add	x26, x3, #0xfff
   18630:	neg	x3, x3
   18634:	and	x26, x26, x3
   18638:	mov	w2, #0x0                   	// #0
   1863c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   18640:	add	x1, x1, #0x350
   18644:	mov	x0, x26
   18648:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1864c:	mov	x25, x0
   18650:	mov	x2, #0x0                   	// #0
   18654:	mov	x1, #0x0                   	// #0
   18658:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1865c:	mov	x1, #0x0                   	// #0
   18660:	mov	x0, #0x0                   	// #0
   18664:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   18668:	cmp	x26, #0xfff
   1866c:	b.ls	1872c <__sanitizer_set_report_fd@@Base+0x58e8>  // b.plast
   18670:	mov	x2, #0x1000                	// #4096
   18674:	mov	w1, #0x0                   	// #0
   18678:	mov	x0, x25
   1867c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   18680:	strb	wzr, [x25]
   18684:	str	x25, [sp, #104]
   18688:	mov	x0, #0x1000                	// #4096
   1868c:	str	x0, [sp, #112]
   18690:	str	xzr, [sp, #152]
   18694:	add	x21, sp, #0x50
   18698:	add	x20, sp, #0xa0
   1869c:	mov	x1, x21
   186a0:	mov	x0, x20
   186a4:	bl	1aea8 <OnPrint@@Base+0xe84>
   186a8:	ands	w19, w0, #0xff
   186ac:	b.eq	186d8 <__sanitizer_set_report_fd@@Base+0x5894>  // b.none
   186b0:	ldr	x3, [sp, #120]
   186b4:	tbz	w3, #2, 1869c <__sanitizer_set_report_fd@@Base+0x5858>
   186b8:	ldr	x1, [sp, #104]
   186bc:	mov	x0, x22
   186c0:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   186c4:	cbnz	w0, 1869c <__sanitizer_set_report_fd@@Base+0x5858>
   186c8:	ldr	x0, [sp, #80]
   186cc:	str	x0, [x24]
   186d0:	ldr	x0, [sp, #88]
   186d4:	str	x0, [x23]
   186d8:	mov	x1, x26
   186dc:	mov	x0, x25
   186e0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   186e4:	add	x0, sp, #0xa0
   186e8:	bl	1a718 <OnPrint@@Base+0x6f4>
   186ec:	mov	w0, w19
   186f0:	ldp	x21, x22, [sp, #16]
   186f4:	ldp	x23, x24, [sp, #32]
   186f8:	ldp	x25, x26, [sp, #48]
   186fc:	ldr	x30, [sp, #64]
   18700:	ldp	x19, x20, [sp], #192
   18704:	ret
   18708:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1870c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18710:	ldr	x1, [x1, #4016]
   18714:	str	x0, [x1]
   18718:	b	18614 <__sanitizer_set_report_fd@@Base+0x57d0>
   1871c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   18720:	add	x0, x0, #0x338
   18724:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   18728:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1872c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18730:	ldr	x0, [x0, #4016]
   18734:	ldr	x0, [x0]
   18738:	cbz	x0, 1879c <__sanitizer_set_report_fd@@Base+0x5958>
   1873c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18740:	ldr	x0, [x0, #4016]
   18744:	ldr	x0, [x0]
   18748:	sub	x1, x0, #0x1
   1874c:	tst	x1, x0
   18750:	b.ne	187b0 <__sanitizer_set_report_fd@@Base+0x596c>  // b.any
   18754:	add	x19, x0, #0xfff
   18758:	neg	x0, x0
   1875c:	and	x19, x19, x0
   18760:	mov	w2, #0x0                   	// #0
   18764:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   18768:	add	x1, x1, #0x350
   1876c:	mov	x0, x19
   18770:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   18774:	mov	x20, x0
   18778:	mov	x2, #0x0                   	// #0
   1877c:	mov	x1, x25
   18780:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   18784:	mov	x1, x26
   18788:	mov	x0, x25
   1878c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   18790:	mov	x26, x19
   18794:	mov	x25, x20
   18798:	b	18670 <__sanitizer_set_report_fd@@Base+0x582c>
   1879c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   187a0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   187a4:	ldr	x1, [x1, #4016]
   187a8:	str	x0, [x1]
   187ac:	b	1873c <__sanitizer_set_report_fd@@Base+0x58f8>
   187b0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   187b4:	add	x0, x0, #0x338
   187b8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   187bc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   187c0:	ldr	x0, [x0]
   187c4:	ldr	x0, [x0, #16]
   187c8:	ret
   187cc:	ldr	x0, [x0]
   187d0:	ldr	w0, [x0]
   187d4:	cmp	w0, #0xb
   187d8:	cset	w0, eq  // eq = none
   187dc:	ret
   187e0:	ldr	x0, [x0]
   187e4:	ldr	w0, [x0]
   187e8:	ret
   187ec:	ldr	x0, [x0]
   187f0:	ldr	w0, [x0]
   187f4:	cmp	w0, #0x7
   187f8:	b.eq	1883c <__sanitizer_set_report_fd@@Base+0x59f8>  // b.none
   187fc:	cmp	w0, #0x7
   18800:	b.le	18820 <__sanitizer_set_report_fd@@Base+0x59dc>
   18804:	cmp	w0, #0x8
   18808:	b.eq	18860 <__sanitizer_set_report_fd@@Base+0x5a1c>  // b.none
   1880c:	cmp	w0, #0xb
   18810:	b.ne	1886c <__sanitizer_set_report_fd@@Base+0x5a28>  // b.any
   18814:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18818:	add	x0, x0, #0xe78
   1881c:	b	18838 <__sanitizer_set_report_fd@@Base+0x59f4>
   18820:	cmp	w0, #0x4
   18824:	b.eq	18848 <__sanitizer_set_report_fd@@Base+0x5a04>  // b.none
   18828:	cmp	w0, #0x6
   1882c:	b.ne	18854 <__sanitizer_set_report_fd@@Base+0x5a10>  // b.any
   18830:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18834:	add	x0, x0, #0xe70
   18838:	ret
   1883c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18840:	add	x0, x0, #0xe58
   18844:	b	18838 <__sanitizer_set_report_fd@@Base+0x59f4>
   18848:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1884c:	add	x0, x0, #0xe60
   18850:	b	18838 <__sanitizer_set_report_fd@@Base+0x59f4>
   18854:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18858:	add	x0, x0, #0xe48
   1885c:	b	18838 <__sanitizer_set_report_fd@@Base+0x59f4>
   18860:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18864:	add	x0, x0, #0xe68
   18868:	b	18838 <__sanitizer_set_report_fd@@Base+0x59f4>
   1886c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18870:	add	x0, x0, #0xe48
   18874:	b	18838 <__sanitizer_set_report_fd@@Base+0x59f4>
   18878:	stp	x19, x30, [sp, #-32]!
   1887c:	str	x1, [sp, #16]
   18880:	str	x1, [sp, #24]
   18884:	add	x1, sp, #0x10
   18888:	bl	6860 <setrlimit@plt>
   1888c:	cbnz	w0, 18898 <__sanitizer_set_report_fd@@Base+0x5a54>
   18890:	ldp	x19, x30, [sp], #32
   18894:	ret
   18898:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1889c:	ldr	x0, [x0, #4024]
   188a0:	ldr	x19, [x0]
   188a4:	bl	6790 <__errno_location@plt>
   188a8:	ldr	w2, [x0]
   188ac:	mov	x1, x19
   188b0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   188b4:	add	x0, x0, #0xe80
   188b8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   188bc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   188c0:	str	x30, [sp, #-32]!
   188c4:	add	x1, sp, #0x10
   188c8:	bl	6990 <getrlimit@plt>
   188cc:	cbnz	w0, 188dc <__sanitizer_set_report_fd@@Base+0x5a98>
   188d0:	ldr	x0, [sp, #16]
   188d4:	ldr	x30, [sp], #32
   188d8:	ret
   188dc:	sxtw	x4, w0
   188e0:	mov	x3, #0x0                   	// #0
   188e4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   188e8:	add	x2, x2, #0xea8
   188ec:	mov	w1, #0x5a                  	// #90
   188f0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   188f4:	add	x0, x0, #0xed0
   188f8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   188fc:	stp	x19, x20, [sp, #-192]!
   18900:	str	x30, [sp, #16]
   18904:	mov	w20, w0
   18908:	mov	x19, x1
   1890c:	bl	169d4 <__sanitizer_set_report_fd@@Base+0x3b90>
   18910:	cbnz	w0, 18920 <__sanitizer_set_report_fd@@Base+0x5adc>
   18914:	ldr	x30, [sp, #16]
   18918:	ldp	x19, x20, [sp], #192
   1891c:	ret
   18920:	mov	x2, #0x98                  	// #152
   18924:	mov	w1, #0x0                   	// #0
   18928:	add	x0, sp, #0x28
   1892c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   18930:	str	x19, [sp, #40]
   18934:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18938:	ldr	x0, [x0, #4056]
   1893c:	ldrb	w0, [x0, #97]
   18940:	cmp	w0, #0x0
   18944:	mov	w0, #0x4                   	// #4
   18948:	movk	w0, #0x4800, lsl #16
   1894c:	mov	w1, #0x4                   	// #4
   18950:	movk	w1, #0x4000, lsl #16
   18954:	csel	w0, w0, w1, ne  // ne = any
   18958:	str	w0, [sp, #176]
   1895c:	mov	x2, #0x0                   	// #0
   18960:	add	x1, sp, #0x28
   18964:	mov	w0, w20
   18968:	bl	171c0 <__sanitizer_set_report_fd@@Base+0x437c>
   1896c:	sxtw	x4, w0
   18970:	cbnz	w0, 18998 <__sanitizer_set_report_fd@@Base+0x5b54>
   18974:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18978:	ldr	x0, [x0, #3896]
   1897c:	ldr	w0, [x0]
   18980:	cbz	w0, 18914 <__sanitizer_set_report_fd@@Base+0x5ad0>
   18984:	mov	w1, w20
   18988:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1898c:	add	x0, x0, #0xf58
   18990:	bl	1a3fc <OnPrint@@Base+0x3d8>
   18994:	b	18914 <__sanitizer_set_report_fd@@Base+0x5ad0>
   18998:	mov	x3, #0x0                   	// #0
   1899c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   189a0:	add	x2, x2, #0xf18
   189a4:	mov	w1, #0xd2                  	// #210
   189a8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   189ac:	add	x0, x0, #0xed0
   189b0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   189b4:	str	x30, [sp, #-16]!
   189b8:	bl	6930 <getuid@plt>
   189bc:	ldr	x30, [sp], #16
   189c0:	ret
   189c4:	str	x30, [sp, #-16]!
   189c8:	bl	6920 <pthread_self@plt>
   189cc:	ldr	x30, [sp], #16
   189d0:	ret
   189d4:	stp	x19, x20, [sp, #-32]!
   189d8:	str	x30, [sp, #16]
   189dc:	mov	x19, x0
   189e0:	mov	x20, x1
   189e4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   189e8:	ldr	x0, [x0, #4016]
   189ec:	ldr	x0, [x0]
   189f0:	cbz	x0, 18a30 <__sanitizer_set_report_fd@@Base+0x5bec>
   189f4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   189f8:	ldr	x0, [x0, #4016]
   189fc:	ldr	x2, [x0]
   18a00:	sub	x0, x2, #0x1
   18a04:	tst	x2, x0
   18a08:	b.ne	18a44 <__sanitizer_set_report_fd@@Base+0x5c00>  // b.any
   18a0c:	neg	x2, x2
   18a10:	add	x0, x19, x0
   18a14:	and	x0, x0, x2
   18a18:	and	x20, x20, x2
   18a1c:	cmp	x20, x0
   18a20:	b.hi	18a54 <__sanitizer_set_report_fd@@Base+0x5c10>  // b.pmore
   18a24:	ldr	x30, [sp, #16]
   18a28:	ldp	x19, x20, [sp], #32
   18a2c:	ret
   18a30:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   18a34:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18a38:	ldr	x1, [x1, #4016]
   18a3c:	str	x0, [x1]
   18a40:	b	189f4 <__sanitizer_set_report_fd@@Base+0x5bb0>
   18a44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   18a48:	add	x0, x0, #0x338
   18a4c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   18a50:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   18a54:	mov	w2, #0x4                   	// #4
   18a58:	sub	x1, x20, x0
   18a5c:	bl	6740 <madvise@plt>
   18a60:	b	18a24 <__sanitizer_set_report_fd@@Base+0x5be0>
   18a64:	str	x30, [sp, #-16]!
   18a68:	mov	w2, #0xf                   	// #15
   18a6c:	bl	6740 <madvise@plt>
   18a70:	cmp	w0, #0x0
   18a74:	cset	w0, eq  // eq = none
   18a78:	ldr	x30, [sp], #16
   18a7c:	ret
   18a80:	str	x30, [sp, #-16]!
   18a84:	mov	w2, #0x10                  	// #16
   18a88:	bl	6740 <madvise@plt>
   18a8c:	cmp	w0, #0x0
   18a90:	cset	w0, eq  // eq = none
   18a94:	ldr	x30, [sp], #16
   18a98:	ret
   18a9c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18aa0:	ldr	x0, [x0, #4056]
   18aa4:	ldrb	w0, [x0, #178]
   18aa8:	cbnz	w0, 18ab0 <__sanitizer_set_report_fd@@Base+0x5c6c>
   18aac:	ret
   18ab0:	str	x30, [sp, #-16]!
   18ab4:	mov	x1, #0x0                   	// #0
   18ab8:	mov	w0, #0x4                   	// #4
   18abc:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5a34>
   18ac0:	ldr	x30, [sp], #16
   18ac4:	ret
   18ac8:	str	x30, [sp, #-16]!
   18acc:	mov	w0, #0x3                   	// #3
   18ad0:	bl	188c0 <__sanitizer_set_report_fd@@Base+0x5a7c>
   18ad4:	cmn	x0, #0x1
   18ad8:	cset	w0, eq  // eq = none
   18adc:	ldr	x30, [sp], #16
   18ae0:	ret
   18ae4:	str	x30, [sp, #-16]!
   18ae8:	mov	w0, #0x3                   	// #3
   18aec:	bl	188c0 <__sanitizer_set_report_fd@@Base+0x5a7c>
   18af0:	ldr	x30, [sp], #16
   18af4:	ret
   18af8:	str	x30, [sp, #-16]!
   18afc:	mov	x1, x0
   18b00:	mov	w0, #0x3                   	// #3
   18b04:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5a34>
   18b08:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x5c84>
   18b0c:	and	w0, w0, #0xff
   18b10:	cbnz	w0, 18b1c <__sanitizer_set_report_fd@@Base+0x5cd8>
   18b14:	ldr	x30, [sp], #16
   18b18:	ret
   18b1c:	mov	x4, #0x0                   	// #0
   18b20:	mov	x3, #0x0                   	// #0
   18b24:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18b28:	add	x2, x2, #0xf80
   18b2c:	mov	w1, #0x7a                  	// #122
   18b30:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18b34:	add	x0, x0, #0xed0
   18b38:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18b3c:	str	x30, [sp, #-16]!
   18b40:	mov	w0, #0x9                   	// #9
   18b44:	bl	188c0 <__sanitizer_set_report_fd@@Base+0x5a7c>
   18b48:	cmn	x0, #0x1
   18b4c:	cset	w0, eq  // eq = none
   18b50:	ldr	x30, [sp], #16
   18b54:	ret
   18b58:	str	x30, [sp, #-16]!
   18b5c:	mov	x1, #0xffffffffffffffff    	// #-1
   18b60:	mov	w0, #0x9                   	// #9
   18b64:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5a34>
   18b68:	bl	18b3c <__sanitizer_set_report_fd@@Base+0x5cf8>
   18b6c:	and	w0, w0, #0xff
   18b70:	cbz	w0, 18b7c <__sanitizer_set_report_fd@@Base+0x5d38>
   18b74:	ldr	x30, [sp], #16
   18b78:	ret
   18b7c:	mov	x4, #0x0                   	// #0
   18b80:	mov	x3, #0x0                   	// #0
   18b84:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18b88:	add	x2, x2, #0xfa8
   18b8c:	mov	w1, #0x84                  	// #132
   18b90:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18b94:	add	x0, x0, #0xed0
   18b98:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18b9c:	str	x30, [sp, #-16]!
   18ba0:	bl	64f0 <sleep@plt>
   18ba4:	ldr	x30, [sp], #16
   18ba8:	ret
   18bac:	str	x30, [sp, #-16]!
   18bb0:	mov	w1, #0x3e8                 	// #1000
   18bb4:	mul	w0, w0, w1
   18bb8:	bl	6750 <usleep@plt>
   18bbc:	ldr	x30, [sp], #16
   18bc0:	ret
   18bc4:	stp	x19, x30, [sp, #-176]!
   18bc8:	mov	w0, #0x6                   	// #6
   18bcc:	bl	169d4 <__sanitizer_set_report_fd@@Base+0x3b90>
   18bd0:	cbnz	w0, 18bd8 <__sanitizer_set_report_fd@@Base+0x5d94>
   18bd4:	bl	68b0 <abort@plt>
   18bd8:	add	x19, sp, #0x18
   18bdc:	mov	x2, #0x98                  	// #152
   18be0:	mov	w1, #0x0                   	// #0
   18be4:	mov	x0, x19
   18be8:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   18bec:	str	xzr, [sp, #24]
   18bf0:	mov	x2, #0x0                   	// #0
   18bf4:	mov	x1, x19
   18bf8:	mov	w0, #0x6                   	// #6
   18bfc:	bl	171c0 <__sanitizer_set_report_fd@@Base+0x437c>
   18c00:	b	18bd4 <__sanitizer_set_report_fd@@Base+0x5d90>
   18c04:	str	x30, [sp, #-16]!
   18c08:	bl	36f10 <__asan_backtrace_vector_release@@Base+0x60>
   18c0c:	ldr	x30, [sp], #16
   18c10:	ret
   18c14:	str	x30, [sp, #-16]!
   18c18:	bl	6560 <isatty@plt>
   18c1c:	cmp	w0, #0x0
   18c20:	cset	w0, ne  // ne = any
   18c24:	ldr	x30, [sp], #16
   18c28:	ret
   18c2c:	str	x30, [sp, #-64]!
   18c30:	add	x1, sp, #0x10
   18c34:	mov	x0, #0x0                   	// #0
   18c38:	bl	69a0 <sigaltstack@plt>
   18c3c:	cbnz	w0, 18c50 <__sanitizer_set_report_fd@@Base+0x5e0c>
   18c40:	ldr	w0, [sp, #24]
   18c44:	tbnz	w0, #1, 18c70 <__sanitizer_set_report_fd@@Base+0x5e2c>
   18c48:	ldr	x30, [sp], #64
   18c4c:	ret
   18c50:	sxtw	x4, w0
   18c54:	mov	x3, #0x0                   	// #0
   18c58:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18c5c:	add	x2, x2, #0xfd0
   18c60:	mov	w1, #0xb0                  	// #176
   18c64:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18c68:	add	x0, x0, #0xed0
   18c6c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18c70:	mov	w2, #0x0                   	// #0
   18c74:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   18c78:	add	x1, x1, #0x0
   18c7c:	mov	x0, #0x10000               	// #65536
   18c80:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   18c84:	str	x0, [sp, #40]
   18c88:	str	wzr, [sp, #48]
   18c8c:	mov	x0, #0x10000               	// #65536
   18c90:	str	x0, [sp, #56]
   18c94:	mov	x1, #0x0                   	// #0
   18c98:	add	x0, sp, #0x28
   18c9c:	bl	69a0 <sigaltstack@plt>
   18ca0:	sxtw	x4, w0
   18ca4:	cbz	w0, 18c48 <__sanitizer_set_report_fd@@Base+0x5e04>
   18ca8:	mov	x3, #0x0                   	// #0
   18cac:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   18cb0:	add	x2, x2, #0x18
   18cb4:	mov	w1, #0xbb                  	// #187
   18cb8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18cbc:	add	x0, x0, #0xed0
   18cc0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18cc4:	str	x30, [sp, #-64]!
   18cc8:	str	xzr, [sp, #40]
   18ccc:	mov	w0, #0x2                   	// #2
   18cd0:	str	w0, [sp, #48]
   18cd4:	mov	x0, #0x10000               	// #65536
   18cd8:	str	x0, [sp, #56]
   18cdc:	add	x1, sp, #0x10
   18ce0:	add	x0, sp, #0x28
   18ce4:	bl	69a0 <sigaltstack@plt>
   18ce8:	cbnz	w0, 18d00 <__sanitizer_set_report_fd@@Base+0x5ebc>
   18cec:	ldr	x1, [sp, #32]
   18cf0:	ldr	x0, [sp, #16]
   18cf4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   18cf8:	ldr	x30, [sp], #64
   18cfc:	ret
   18d00:	sxtw	x4, w0
   18d04:	mov	x3, #0x0                   	// #0
   18d08:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   18d0c:	add	x2, x2, #0x48
   18d10:	mov	w1, #0xc3                  	// #195
   18d14:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18d18:	add	x0, x0, #0xed0
   18d1c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18d20:	stp	x19, x30, [sp, #-16]!
   18d24:	mov	x19, x0
   18d28:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18d2c:	ldr	x0, [x0, #4056]
   18d30:	ldrb	w0, [x0, #97]
   18d34:	cbnz	w0, 18d88 <__sanitizer_set_report_fd@@Base+0x5f44>
   18d38:	mov	x1, x19
   18d3c:	mov	w0, #0xb                   	// #11
   18d40:	bl	188fc <__sanitizer_set_report_fd@@Base+0x5ab8>
   18d44:	mov	x1, x19
   18d48:	mov	w0, #0x7                   	// #7
   18d4c:	bl	188fc <__sanitizer_set_report_fd@@Base+0x5ab8>
   18d50:	mov	x1, x19
   18d54:	mov	w0, #0x6                   	// #6
   18d58:	bl	188fc <__sanitizer_set_report_fd@@Base+0x5ab8>
   18d5c:	mov	x1, x19
   18d60:	mov	w0, #0x8                   	// #8
   18d64:	bl	188fc <__sanitizer_set_report_fd@@Base+0x5ab8>
   18d68:	mov	x1, x19
   18d6c:	mov	w0, #0x4                   	// #4
   18d70:	bl	188fc <__sanitizer_set_report_fd@@Base+0x5ab8>
   18d74:	mov	x1, x19
   18d78:	mov	w0, #0x5                   	// #5
   18d7c:	bl	188fc <__sanitizer_set_report_fd@@Base+0x5ab8>
   18d80:	ldp	x19, x30, [sp], #16
   18d84:	ret
   18d88:	bl	18c2c <__sanitizer_set_report_fd@@Base+0x5de8>
   18d8c:	b	18d38 <__sanitizer_set_report_fd@@Base+0x5ef4>
   18d90:	stp	x19, x20, [sp, #-32]!
   18d94:	str	x30, [sp, #16]
   18d98:	mov	x19, x0
   18d9c:	ldr	x20, [x0, #16]
   18da0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18da4:	ldr	x0, [x0, #4016]
   18da8:	ldr	x0, [x0]
   18dac:	cbz	x0, 18e24 <__sanitizer_set_report_fd@@Base+0x5fe0>
   18db0:	ldr	x1, [x19, #32]
   18db4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18db8:	ldr	x0, [x0, #4016]
   18dbc:	ldr	x0, [x0]
   18dc0:	add	x20, x20, x0
   18dc4:	mov	w0, #0x0                   	// #0
   18dc8:	cmp	x20, x1
   18dcc:	b.ls	18e18 <__sanitizer_set_report_fd@@Base+0x5fd4>  // b.plast
   18dd0:	add	x1, x1, #0xf, lsl #12
   18dd4:	add	x1, x1, #0xfff
   18dd8:	ldr	x2, [x19, #16]
   18ddc:	cmp	x2, x1
   18de0:	b.cs	18e18 <__sanitizer_set_report_fd@@Base+0x5fd4>  // b.hs, b.nlast
   18de4:	ldr	x0, [x19]
   18de8:	ldr	w1, [x0, #8]
   18dec:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18df0:	ldr	x0, [x0, #3768]
   18df4:	ldr	w2, [x0]
   18df8:	mov	w0, #0x1                   	// #1
   18dfc:	cmp	w1, w2
   18e00:	b.eq	18e18 <__sanitizer_set_report_fd@@Base+0x5fd4>  // b.none
   18e04:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18e08:	ldr	x0, [x0, #3784]
   18e0c:	ldr	w0, [x0]
   18e10:	cmp	w0, w1
   18e14:	cset	w0, eq  // eq = none
   18e18:	ldr	x30, [sp, #16]
   18e1c:	ldp	x19, x20, [sp], #32
   18e20:	ret
   18e24:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   18e28:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18e2c:	ldr	x1, [x1, #4016]
   18e30:	str	x0, [x1]
   18e34:	b	18db0 <__sanitizer_set_report_fd@@Base+0x5f6c>
   18e38:	stp	x19, x20, [sp, #-48]!
   18e3c:	stp	x21, x30, [sp, #16]
   18e40:	mov	x20, x0
   18e44:	mov	x19, x1
   18e48:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18e4c:	ldr	x1, [x1, #4016]
   18e50:	ldr	x0, [x1]
   18e54:	cbz	x0, 18e94 <__sanitizer_set_report_fd@@Base+0x6050>
   18e58:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18e5c:	ldr	x1, [x1, #4016]
   18e60:	ldr	x2, [x1]
   18e64:	add	x2, x2, x2, lsl #2
   18e68:	lsl	x4, x2, #1
   18e6c:	cmp	x19, x2, lsl #1
   18e70:	b.cs	18ea8 <__sanitizer_set_report_fd@@Base+0x6064>  // b.hs, b.nlast
   18e74:	add	x0, sp, #0x28
   18e78:	bl	6400 <pipe@plt>
   18e7c:	mov	w21, #0x0                   	// #0
   18e80:	cbz	w0, 18ec4 <__sanitizer_set_report_fd@@Base+0x6080>
   18e84:	mov	w0, w21
   18e88:	ldp	x21, x30, [sp, #16]
   18e8c:	ldp	x19, x20, [sp], #48
   18e90:	ret
   18e94:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   18e98:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18e9c:	ldr	x1, [x1, #4016]
   18ea0:	str	x0, [x1]
   18ea4:	b	18e58 <__sanitizer_set_report_fd@@Base+0x6014>
   18ea8:	mov	x3, x19
   18eac:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   18eb0:	add	x2, x2, #0x78
   18eb4:	mov	w1, #0x118                 	// #280
   18eb8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18ebc:	add	x0, x0, #0xed0
   18ec0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18ec4:	mov	x2, x19
   18ec8:	mov	x1, x20
   18ecc:	ldr	w0, [sp, #44]
   18ed0:	bl	15590 <__sanitizer_set_report_fd@@Base+0x274c>
   18ed4:	mov	x20, x0
   18ed8:	add	x1, sp, #0x24
   18edc:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   18ee0:	and	w1, w0, #0xff
   18ee4:	cbz	w1, 18f10 <__sanitizer_set_report_fd@@Base+0x60cc>
   18ee8:	ldrsw	x4, [sp, #36]
   18eec:	cmp	x4, #0xe
   18ef0:	b.eq	18f18 <__sanitizer_set_report_fd@@Base+0x60d4>  // b.none
   18ef4:	mov	x3, #0xe                   	// #14
   18ef8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   18efc:	add	x2, x2, #0x98
   18f00:	mov	w1, #0x121                 	// #289
   18f04:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18f08:	add	x0, x0, #0xed0
   18f0c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18f10:	cmp	x19, x20
   18f14:	cset	w21, eq  // eq = none
   18f18:	ldr	w0, [sp, #40]
   18f1c:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   18f20:	ldr	w0, [sp, #44]
   18f24:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   18f28:	b	18e84 <__sanitizer_set_report_fd@@Base+0x6040>
   18f2c:	str	x30, [sp, #-16]!
   18f30:	bl	1a754 <OnPrint@@Base+0x730>
   18f34:	ldr	x30, [sp], #16
   18f38:	ret
   18f3c:	stp	x19, x20, [sp, #-240]!
   18f40:	str	x30, [sp, #16]
   18f44:	mov	x19, x0
   18f48:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   18f4c:	ldr	x0, [x0, #4056]
   18f50:	ldrb	w0, [x0, #215]
   18f54:	cbz	w0, 19030 <__sanitizer_set_report_fd@@Base+0x61ec>
   18f58:	mov	x20, x1
   18f5c:	mov	x0, x19
   18f60:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   18f64:	cmp	x0, #0xbd
   18f68:	b.hi	18fd8 <__sanitizer_set_report_fd@@Base+0x6194>  // b.pmore
   18f6c:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   18f70:	add	x5, sp, #0x28
   18f74:	mov	x4, x19
   18f78:	mov	x3, x0
   18f7c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   18f80:	add	x2, x2, #0xf0
   18f84:	mov	x1, #0xc8                  	// #200
   18f88:	mov	x19, x5
   18f8c:	mov	x0, x5
   18f90:	bl	1a028 <OnPrint@@Base+0x4>
   18f94:	mov	w2, #0x1c0                 	// #448
   18f98:	mov	w1, #0x242                 	// #578
   18f9c:	mov	x0, x19
   18fa0:	bl	63c0 <shm_open@plt>
   18fa4:	mov	w19, w0
   18fa8:	mov	x1, x20
   18fac:	bl	155b8 <__sanitizer_set_report_fd@@Base+0x2774>
   18fb0:	sxtw	x4, w0
   18fb4:	cbnz	w0, 18ff8 <__sanitizer_set_report_fd@@Base+0x61b4>
   18fb8:	add	x0, sp, #0x28
   18fbc:	bl	6760 <shm_unlink@plt>
   18fc0:	sxtw	x4, w0
   18fc4:	cbnz	w0, 19014 <__sanitizer_set_report_fd@@Base+0x61d0>
   18fc8:	mov	w0, w19
   18fcc:	ldr	x30, [sp, #16]
   18fd0:	ldp	x19, x20, [sp], #240
   18fd4:	ret
   18fd8:	mov	x4, #0x0                   	// #0
   18fdc:	mov	x3, #0x0                   	// #0
   18fe0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   18fe4:	add	x2, x2, #0xb8
   18fe8:	mov	w1, #0x13c                 	// #316
   18fec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   18ff0:	add	x0, x0, #0xed0
   18ff4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18ff8:	mov	x3, #0x0                   	// #0
   18ffc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19000:	add	x2, x2, #0x100
   19004:	mov	w1, #0x142                 	// #322
   19008:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1900c:	add	x0, x0, #0xed0
   19010:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19014:	mov	x3, #0x0                   	// #0
   19018:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1901c:	add	x2, x2, #0x100
   19020:	mov	w1, #0x144                 	// #324
   19024:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   19028:	add	x0, x0, #0xed0
   1902c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19030:	mov	w19, #0xffffffff            	// #-1
   19034:	b	18fc8 <__sanitizer_set_report_fd@@Base+0x6184>
   19038:	stp	x19, x20, [sp, #-64]!
   1903c:	stp	x21, x22, [sp, #16]
   19040:	str	x30, [sp, #32]
   19044:	mov	x20, x0
   19048:	mov	x19, x1
   1904c:	cbz	x2, 190e4 <__sanitizer_set_report_fd@@Base+0x62a0>
   19050:	mov	x0, x2
   19054:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x60f8>
   19058:	mov	w21, w0
   1905c:	cmn	w0, #0x1
   19060:	mov	w22, #0x4012                	// #16402
   19064:	mov	w0, #0x4032                	// #16434
   19068:	csel	w22, w22, w0, ne  // ne = any
   1906c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   19070:	ldr	x1, [x1, #4016]
   19074:	ldr	x0, [x1]
   19078:	cbz	x0, 190f0 <__sanitizer_set_report_fd@@Base+0x62ac>
   1907c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   19080:	ldr	x1, [x1, #4016]
   19084:	ldr	x3, [x1]
   19088:	neg	x6, x3
   1908c:	and	x0, x6, x20
   19090:	sub	x2, x3, #0x1
   19094:	tst	x3, x2
   19098:	b.ne	19104 <__sanitizer_set_report_fd@@Base+0x62c0>  // b.any
   1909c:	add	x1, x19, x2
   190a0:	mov	x5, #0x0                   	// #0
   190a4:	mov	w4, w21
   190a8:	mov	w3, w22
   190ac:	mov	w2, #0x3                   	// #3
   190b0:	and	x1, x1, x6
   190b4:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   190b8:	add	x1, sp, #0x3c
   190bc:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   190c0:	and	w0, w0, #0xff
   190c4:	cbnz	w0, 19114 <__sanitizer_set_report_fd@@Base+0x62d0>
   190c8:	mov	x0, x19
   190cc:	bl	f37c <__sancov_default_options@@Base+0x2680>
   190d0:	mov	w0, #0x1                   	// #1
   190d4:	ldp	x21, x22, [sp, #16]
   190d8:	ldr	x30, [sp, #32]
   190dc:	ldp	x19, x20, [sp], #64
   190e0:	ret
   190e4:	mov	w21, #0xffffffff            	// #-1
   190e8:	mov	w22, #0x4032                	// #16434
   190ec:	b	1906c <__sanitizer_set_report_fd@@Base+0x6228>
   190f0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   190f4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   190f8:	ldr	x1, [x1, #4016]
   190fc:	str	x0, [x1]
   19100:	b	1907c <__sanitizer_set_report_fd@@Base+0x6238>
   19104:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   19108:	add	x0, x0, #0x338
   1910c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   19110:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19114:	ldr	w5, [sp, #60]
   19118:	mov	x4, x20
   1911c:	mov	x3, x19
   19120:	mov	x2, x19
   19124:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   19128:	ldr	x0, [x0, #4024]
   1912c:	ldr	x1, [x0]
   19130:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19134:	add	x0, x0, #0x118
   19138:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1913c:	mov	w0, #0x0                   	// #0
   19140:	b	190d4 <__sanitizer_set_report_fd@@Base+0x6290>
   19144:	str	x30, [sp, #-16]!
   19148:	mov	x0, x1
   1914c:	mov	x1, x2
   19150:	bl	18004 <__sanitizer_set_report_fd@@Base+0x51c0>
   19154:	ldr	x30, [sp], #16
   19158:	ret
   1915c:	str	x30, [sp, #-16]!
   19160:	mov	x0, x1
   19164:	mov	x1, x2
   19168:	bl	17ff0 <__sanitizer_set_report_fd@@Base+0x51ac>
   1916c:	ldr	x30, [sp], #16
   19170:	ret
   19174:	str	x30, [sp, #-16]!
   19178:	mov	x5, x0
   1917c:	mov	x0, x1
   19180:	mov	x1, x2
   19184:	ldr	x4, [x5, #8]
   19188:	cmp	x2, x4
   1918c:	b.hi	191c0 <__sanitizer_set_report_fd@@Base+0x637c>  // b.pmore
   19190:	ldr	x2, [x5]
   19194:	cmp	x2, x0
   19198:	b.eq	191dc <__sanitizer_set_report_fd@@Base+0x6398>  // b.none
   1919c:	add	x3, x1, x0
   191a0:	add	x2, x2, x4
   191a4:	cmp	x3, x2
   191a8:	b.ne	191f0 <__sanitizer_set_report_fd@@Base+0x63ac>  // b.any
   191ac:	sub	x4, x4, x1
   191b0:	str	x4, [x5, #8]
   191b4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   191b8:	ldr	x30, [sp], #16
   191bc:	ret
   191c0:	mov	x3, x2
   191c4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   191c8:	add	x2, x2, #0x168
   191cc:	mov	w1, #0x175                 	// #373
   191d0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   191d4:	add	x0, x0, #0xed0
   191d8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   191dc:	add	x2, x1, x0
   191e0:	cmp	x1, x4
   191e4:	csel	x2, x2, xzr, ne  // ne = any
   191e8:	str	x2, [x5]
   191ec:	b	191ac <__sanitizer_set_report_fd@@Base+0x6368>
   191f0:	mov	x4, x2
   191f4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   191f8:	add	x2, x2, #0x180
   191fc:	mov	w1, #0x17a                 	// #378
   19200:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   19204:	add	x0, x0, #0xed0
   19208:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1920c:	stp	x19, x20, [sp, #-32]!
   19210:	str	x30, [sp, #16]
   19214:	mov	x20, x0
   19218:	mov	x19, x1
   1921c:	cbz	x2, 1925c <__sanitizer_set_report_fd@@Base+0x6418>
   19220:	mov	x0, x2
   19224:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x60f8>
   19228:	mov	w4, w0
   1922c:	cmn	w0, #0x1
   19230:	mov	w3, #0x4012                	// #16402
   19234:	mov	w0, #0x4032                	// #16434
   19238:	csel	w3, w3, w0, ne  // ne = any
   1923c:	mov	x5, #0x0                   	// #0
   19240:	mov	w2, #0x0                   	// #0
   19244:	mov	x1, x19
   19248:	mov	x0, x20
   1924c:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   19250:	ldr	x30, [sp, #16]
   19254:	ldp	x19, x20, [sp], #32
   19258:	ret
   1925c:	mov	w4, #0xffffffff            	// #-1
   19260:	mov	w3, #0x4032                	// #16434
   19264:	b	1923c <__sanitizer_set_report_fd@@Base+0x63f8>
   19268:	str	x30, [sp, #-16]!
   1926c:	mov	x5, #0x0                   	// #0
   19270:	mov	w4, #0xffffffff            	// #-1
   19274:	mov	w3, #0x4022                	// #16418
   19278:	mov	w2, #0x0                   	// #0
   1927c:	mov	x1, x0
   19280:	mov	x0, #0x0                   	// #0
   19284:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2698>
   19288:	ldr	x30, [sp], #16
   1928c:	ret
   19290:	stp	x19, x20, [sp, #-32]!
   19294:	stp	x21, x30, [sp, #16]
   19298:	mov	x19, x0
   1929c:	mov	x20, x1
   192a0:	mov	x21, x2
   192a4:	cbz	x3, 192cc <__sanitizer_set_report_fd@@Base+0x6488>
   192a8:	mov	x0, x3
   192ac:	mov	x2, #0x0                   	// #0
   192b0:	bl	1920c <__sanitizer_set_report_fd@@Base+0x63c8>
   192b4:	str	x0, [x19]
   192b8:	str	x20, [x19, #8]
   192bc:	str	x21, [x19, #16]
   192c0:	ldp	x21, x30, [sp, #16]
   192c4:	ldp	x19, x20, [sp], #32
   192c8:	ret
   192cc:	mov	x0, x1
   192d0:	bl	19268 <__sanitizer_set_report_fd@@Base+0x6424>
   192d4:	b	192b4 <__sanitizer_set_report_fd@@Base+0x6470>
   192d8:	str	x30, [sp, #-16]!
   192dc:	adrp	x3, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   192e0:	ldr	x3, [x3, #3832]
   192e4:	cbz	x3, 192f4 <__sanitizer_set_report_fd@@Base+0x64b0>
   192e8:	bl	64e0 <real_pthread_attr_getstack@plt>
   192ec:	ldr	x30, [sp], #16
   192f0:	ret
   192f4:	bl	6710 <pthread_attr_getstack@plt>
   192f8:	b	192ec <__sanitizer_set_report_fd@@Base+0x64a8>
   192fc:	stp	x19, x20, [sp, #-48]!
   19300:	str	x30, [sp, #16]
   19304:	mov	x20, x0
   19308:	str	xzr, [sp, #40]
   1930c:	str	xzr, [sp, #32]
   19310:	add	x2, sp, #0x20
   19314:	add	x1, sp, #0x28
   19318:	bl	192d8 <__sanitizer_set_report_fd@@Base+0x6494>
   1931c:	ldr	x0, [sp, #40]
   19320:	cbz	x0, 19330 <__sanitizer_set_report_fd@@Base+0x64ec>
   19324:	ldr	x1, [sp, #32]
   19328:	cmn	x0, x1
   1932c:	b.ne	19388 <__sanitizer_set_report_fd@@Base+0x6544>  // b.any
   19330:	bl	1753c <__sanitizer_set_report_fd@@Base+0x46f8>
   19334:	add	x19, x0, #0x20, lsl #12
   19338:	ldr	x1, [sp, #32]
   1933c:	cmp	x19, x1
   19340:	b.hi	19350 <__sanitizer_set_report_fd@@Base+0x650c>  // b.pmore
   19344:	ldr	x30, [sp, #16]
   19348:	ldp	x19, x20, [sp], #48
   1934c:	ret
   19350:	cbz	x1, 19344 <__sanitizer_set_report_fd@@Base+0x6500>
   19354:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   19358:	ldr	x0, [x0, #3896]
   1935c:	ldr	w0, [x0]
   19360:	cbnz	w0, 19374 <__sanitizer_set_report_fd@@Base+0x6530>
   19364:	mov	x1, x19
   19368:	mov	x0, x20
   1936c:	bl	6720 <pthread_attr_setstacksize@plt>
   19370:	b	19344 <__sanitizer_set_report_fd@@Base+0x6500>
   19374:	mov	x2, x19
   19378:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1937c:	add	x0, x0, #0x1c0
   19380:	bl	1a368 <OnPrint@@Base+0x344>
   19384:	b	19364 <__sanitizer_set_report_fd@@Base+0x6520>
   19388:	bl	1753c <__sanitizer_set_report_fd@@Base+0x46f8>
   1938c:	add	x2, x0, #0x20, lsl #12
   19390:	ldr	x1, [sp, #32]
   19394:	cmp	x2, x1
   19398:	b.ls	19344 <__sanitizer_set_report_fd@@Base+0x6500>  // b.plast
   1939c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   193a0:	add	x0, x0, #0x1f0
   193a4:	bl	1a368 <OnPrint@@Base+0x344>
   193a8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   193ac:	add	x0, x0, #0x230
   193b0:	bl	1a368 <OnPrint@@Base+0x344>
   193b4:	b	19344 <__sanitizer_set_report_fd@@Base+0x6500>
   193b8:	stp	x19, x20, [sp, #-80]!
   193bc:	stp	x21, x22, [sp, #16]
   193c0:	stp	x23, x24, [sp, #32]
   193c4:	str	x30, [sp, #48]
   193c8:	mov	x23, x0
   193cc:	mov	x24, x1
   193d0:	mov	w22, w2
   193d4:	mov	w21, w3
   193d8:	mov	w20, w4
   193dc:	bl	15b50 <__sanitizer_set_report_fd@@Base+0x2d0c>
   193e0:	mov	w19, w0
   193e4:	tbnz	w0, #31, 1941c <__sanitizer_set_report_fd@@Base+0x65d8>
   193e8:	cbz	w0, 19444 <__sanitizer_set_report_fd@@Base+0x6600>
   193ec:	cmn	w22, #0x1
   193f0:	b.ne	194f8 <__sanitizer_set_report_fd@@Base+0x66b4>  // b.any
   193f4:	cmn	w21, #0x1
   193f8:	b.ne	19504 <__sanitizer_set_report_fd@@Base+0x66c0>  // b.any
   193fc:	cmn	w20, #0x1
   19400:	b.ne	19510 <__sanitizer_set_report_fd@@Base+0x66cc>  // b.any
   19404:	mov	w0, w19
   19408:	ldp	x21, x22, [sp, #16]
   1940c:	ldp	x23, x24, [sp, #32]
   19410:	ldr	x30, [sp, #48]
   19414:	ldp	x19, x20, [sp], #80
   19418:	ret
   1941c:	add	x1, sp, #0x4c
   19420:	sxtw	x0, w0
   19424:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   19428:	and	w0, w0, #0xff
   1942c:	cbz	w0, 193ec <__sanitizer_set_report_fd@@Base+0x65a8>
   19430:	ldr	w1, [sp, #76]
   19434:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19438:	add	x0, x0, #0x260
   1943c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   19440:	b	193ec <__sanitizer_set_report_fd@@Base+0x65a8>
   19444:	cmn	w22, #0x1
   19448:	b.ne	19498 <__sanitizer_set_report_fd@@Base+0x6654>  // b.any
   1944c:	cmn	w21, #0x1
   19450:	b.ne	194b8 <__sanitizer_set_report_fd@@Base+0x6674>  // b.any
   19454:	cmn	w20, #0x1
   19458:	b.ne	194d8 <__sanitizer_set_report_fd@@Base+0x6694>  // b.any
   1945c:	mov	w0, #0x4                   	// #4
   19460:	bl	6900 <sysconf@plt>
   19464:	mov	w19, w0
   19468:	cmp	w0, #0x2
   1946c:	b.le	19484 <__sanitizer_set_report_fd@@Base+0x6640>
   19470:	mov	w0, w19
   19474:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   19478:	sub	w19, w19, #0x1
   1947c:	cmp	w19, #0x2
   19480:	b.ne	19470 <__sanitizer_set_report_fd@@Base+0x662c>  // b.any
   19484:	mov	x1, x24
   19488:	mov	x0, x23
   1948c:	bl	63f0 <execv@plt>
   19490:	mov	w0, #0x1                   	// #1
   19494:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x288c>
   19498:	mov	w0, #0x0                   	// #0
   1949c:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   194a0:	mov	w1, #0x0                   	// #0
   194a4:	mov	w0, w22
   194a8:	bl	15650 <__sanitizer_set_report_fd@@Base+0x280c>
   194ac:	mov	w0, w22
   194b0:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   194b4:	b	1944c <__sanitizer_set_report_fd@@Base+0x6608>
   194b8:	mov	w0, #0x1                   	// #1
   194bc:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   194c0:	mov	w1, #0x1                   	// #1
   194c4:	mov	w0, w21
   194c8:	bl	15650 <__sanitizer_set_report_fd@@Base+0x280c>
   194cc:	mov	w0, w21
   194d0:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   194d4:	b	19454 <__sanitizer_set_report_fd@@Base+0x6610>
   194d8:	mov	w0, #0x2                   	// #2
   194dc:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   194e0:	mov	w1, #0x2                   	// #2
   194e4:	mov	w0, w20
   194e8:	bl	15650 <__sanitizer_set_report_fd@@Base+0x280c>
   194ec:	mov	w0, w20
   194f0:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   194f4:	b	1945c <__sanitizer_set_report_fd@@Base+0x6618>
   194f8:	mov	w0, w22
   194fc:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   19500:	b	193f4 <__sanitizer_set_report_fd@@Base+0x65b0>
   19504:	mov	w0, w21
   19508:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   1950c:	b	193fc <__sanitizer_set_report_fd@@Base+0x65b8>
   19510:	mov	w0, w20
   19514:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   19518:	b	19404 <__sanitizer_set_report_fd@@Base+0x65c0>
   1951c:	stp	x19, x30, [sp, #-32]!
   19520:	mov	w2, #0x1                   	// #1
   19524:	add	x1, sp, #0x1c
   19528:	bl	15adc <__sanitizer_set_report_fd@@Base+0x2c98>
   1952c:	mov	x19, x0
   19530:	add	x1, sp, #0x18
   19534:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   19538:	and	w1, w0, #0xff
   1953c:	cmp	x19, #0x0
   19540:	cset	w0, eq  // eq = none
   19544:	cbnz	w1, 19550 <__sanitizer_set_report_fd@@Base+0x670c>
   19548:	ldp	x19, x30, [sp], #32
   1954c:	ret
   19550:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   19554:	ldr	x0, [x0, #3896]
   19558:	ldr	w1, [x0]
   1955c:	mov	w0, #0x0                   	// #0
   19560:	cbz	w1, 19548 <__sanitizer_set_report_fd@@Base+0x6704>
   19564:	ldr	w1, [sp, #24]
   19568:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1956c:	add	x0, x0, #0x288
   19570:	bl	1a3fc <OnPrint@@Base+0x3d8>
   19574:	mov	w0, #0x0                   	// #0
   19578:	b	19548 <__sanitizer_set_report_fd@@Base+0x6704>
   1957c:	str	x30, [sp, #-32]!
   19580:	mov	w2, #0x0                   	// #0
   19584:	add	x1, sp, #0x1c
   19588:	bl	15adc <__sanitizer_set_report_fd@@Base+0x2c98>
   1958c:	add	x1, sp, #0x18
   19590:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   19594:	and	w0, w0, #0xff
   19598:	cbnz	w0, 195a8 <__sanitizer_set_report_fd@@Base+0x6764>
   1959c:	ldr	w0, [sp, #28]
   195a0:	ldr	x30, [sp], #32
   195a4:	ret
   195a8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   195ac:	ldr	x0, [x0, #3896]
   195b0:	ldr	w1, [x0]
   195b4:	mov	w0, #0xffffffff            	// #-1
   195b8:	cbz	w1, 195a0 <__sanitizer_set_report_fd@@Base+0x675c>
   195bc:	ldr	w1, [sp, #24]
   195c0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   195c4:	add	x0, x0, #0x288
   195c8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   195cc:	mov	w0, #0xffffffff            	// #-1
   195d0:	b	195a0 <__sanitizer_set_report_fd@@Base+0x675c>
   195d4:	cmp	w0, #0x1
   195d8:	cset	w0, eq  // eq = none
   195dc:	ret
   195e0:	and	w2, w2, #0xff
   195e4:	ldr	x3, [x0]
   195e8:	cmp	x3, x1
   195ec:	b.cs	19600 <__sanitizer_set_report_fd@@Base+0x67bc>  // b.hs, b.nlast
   195f0:	strb	w2, [x3]
   195f4:	ldr	x1, [x0]
   195f8:	add	x1, x1, #0x1
   195fc:	str	x1, [x0]
   19600:	mov	w0, #0x1                   	// #1
   19604:	ret
   19608:	stp	x19, x20, [sp, #-64]!
   1960c:	stp	x21, x22, [sp, #16]
   19610:	stp	x23, x24, [sp, #32]
   19614:	str	x30, [sp, #56]
   19618:	mov	x21, x0
   1961c:	mov	x22, x1
   19620:	mov	w23, w2
   19624:	mov	w24, w3
   19628:	cbz	x4, 19678 <__sanitizer_set_report_fd@@Base+0x6834>
   1962c:	mov	x20, x4
   19630:	ldrb	w2, [x4]
   19634:	cbz	w2, 1968c <__sanitizer_set_report_fd@@Base+0x6848>
   19638:	str	x25, [sp, #48]
   1963c:	mvn	w25, w24
   19640:	lsr	w25, w25, #31
   19644:	cbz	w24, 19694 <__sanitizer_set_report_fd@@Base+0x6850>
   19648:	mov	w19, #0x0                   	// #0
   1964c:	mov	x1, x22
   19650:	mov	x0, x21
   19654:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19658:	add	w19, w19, w0
   1965c:	ldrb	w2, [x20, #1]!
   19660:	cbz	w2, 196a0 <__sanitizer_set_report_fd@@Base+0x685c>
   19664:	cmp	w25, #0x0
   19668:	ccmp	w24, w19, #0x0, ne  // ne = any
   1966c:	b.gt	1964c <__sanitizer_set_report_fd@@Base+0x6808>
   19670:	ldr	x25, [sp, #48]
   19674:	b	196a4 <__sanitizer_set_report_fd@@Base+0x6860>
   19678:	str	x25, [sp, #48]
   1967c:	mov	w2, #0x3c                  	// #60
   19680:	adrp	x20, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19684:	add	x20, x20, #0x2b8
   19688:	b	1963c <__sanitizer_set_report_fd@@Base+0x67f8>
   1968c:	mov	w19, #0x0                   	// #0
   19690:	b	196a4 <__sanitizer_set_report_fd@@Base+0x6860>
   19694:	mov	w19, w24
   19698:	ldr	x25, [sp, #48]
   1969c:	b	196a4 <__sanitizer_set_report_fd@@Base+0x6860>
   196a0:	ldr	x25, [sp, #48]
   196a4:	neg	w0, w19
   196a8:	cmp	w23, w0
   196ac:	b.ge	196d4 <__sanitizer_set_report_fd@@Base+0x6890>  // b.tcont
   196b0:	mov	w20, #0x20                  	// #32
   196b4:	mov	w2, w20
   196b8:	mov	x1, x22
   196bc:	mov	x0, x21
   196c0:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   196c4:	add	w19, w19, w0
   196c8:	neg	w0, w19
   196cc:	cmp	w0, w23
   196d0:	b.gt	196b4 <__sanitizer_set_report_fd@@Base+0x6870>
   196d4:	mov	w0, w19
   196d8:	ldp	x21, x22, [sp, #16]
   196dc:	ldp	x23, x24, [sp, #32]
   196e0:	ldr	x30, [sp, #56]
   196e4:	ldp	x19, x20, [sp], #64
   196e8:	ret
   196ec:	stp	x19, x20, [sp, #-352]!
   196f0:	stp	x21, x22, [sp, #16]
   196f4:	stp	x23, x24, [sp, #32]
   196f8:	stp	x25, x26, [sp, #48]
   196fc:	stp	x27, x28, [sp, #64]
   19700:	str	x30, [sp, #80]
   19704:	mov	x22, x0
   19708:	and	w26, w3, #0xff
   1970c:	and	w0, w7, #0xff
   19710:	str	w0, [sp, #108]
   19714:	cmp	w26, #0xa
   19718:	cset	w0, ne  // ne = any
   1971c:	cmp	w0, #0x0
   19720:	ccmp	w26, #0x10, #0x4, ne  // ne = any
   19724:	b.ne	197cc <__sanitizer_set_report_fd@@Base+0x6988>  // b.any
   19728:	mov	x23, x1
   1972c:	mov	x19, x2
   19730:	and	w20, w4, #0xff
   19734:	and	w25, w5, #0xff
   19738:	and	w24, w6, #0xff
   1973c:	cmp	w0, #0x0
   19740:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   19744:	b.ne	197dc <__sanitizer_set_report_fd@@Base+0x6998>  // b.any
   19748:	cmp	x2, #0x0
   1974c:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   19750:	b.ne	197ec <__sanitizer_set_report_fd@@Base+0x69a8>  // b.any
   19754:	cmp	w20, #0x1d
   19758:	b.hi	197fc <__sanitizer_set_report_fd@@Base+0x69b8>  // b.pmore
   1975c:	cmp	w20, #0x0
   19760:	sub	w0, w20, #0x1
   19764:	and	w0, w0, #0xff
   19768:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1976c:	csel	w20, w0, w20, ne  // ne = any
   19770:	cmp	w24, #0x0
   19774:	mov	w21, #0x0                   	// #0
   19778:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   1977c:	b.ne	1980c <__sanitizer_set_report_fd@@Base+0x69c8>  // b.any
   19780:	mov	x1, #0x1                   	// #1
   19784:	and	x2, x26, #0xff
   19788:	add	x6, sp, #0x70
   1978c:	mov	w0, w1
   19790:	add	x4, x6, x1, lsl #3
   19794:	udiv	x3, x19, x2
   19798:	msub	x5, x3, x2, x19
   1979c:	stur	x5, [x4, #-8]
   197a0:	mov	x4, x19
   197a4:	mov	x19, x3
   197a8:	cmp	x2, x4
   197ac:	b.hi	19820 <__sanitizer_set_report_fd@@Base+0x69dc>  // b.pmore
   197b0:	add	x1, x1, #0x1
   197b4:	cmp	x1, #0x1f
   197b8:	b.ne	1978c <__sanitizer_set_report_fd@@Base+0x6948>  // b.any
   197bc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   197c0:	add	x0, x0, #0x338
   197c4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   197c8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   197cc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   197d0:	add	x0, x0, #0x2c0
   197d4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   197d8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   197dc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   197e0:	add	x0, x0, #0x2e0
   197e4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   197e8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   197ec:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   197f0:	add	x0, x0, #0x2f8
   197f4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   197f8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   197fc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19800:	add	x0, x0, #0x318
   19804:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   19808:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1980c:	mov	w2, #0x2d                  	// #45
   19810:	mov	x0, x22
   19814:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19818:	mov	w21, w0
   1981c:	b	19780 <__sanitizer_set_report_fd@@Base+0x693c>
   19820:	cmp	w20, w1
   19824:	b.gt	1989c <__sanitizer_set_report_fd@@Base+0x6a58>
   19828:	sub	w19, w0, #0x1
   1982c:	sxtw	x19, w19
   19830:	cmp	w0, #0x0
   19834:	b.le	198bc <__sanitizer_set_report_fd@@Base+0x6a78>
   19838:	add	x27, sp, #0x70
   1983c:	mov	w28, #0x30                  	// #48
   19840:	mov	w20, w19
   19844:	ldr	x0, [x27, x19, lsl #3]
   19848:	cbnz	x0, 198cc <__sanitizer_set_report_fd@@Base+0x6a88>
   1984c:	cmp	w19, #0x0
   19850:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   19854:	mov	w0, #0x20                  	// #32
   19858:	csel	w2, w28, w0, ne  // ne = any
   1985c:	mov	x1, x23
   19860:	mov	x0, x22
   19864:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19868:	add	w21, w21, w0
   1986c:	sub	w20, w19, #0x1
   19870:	sub	x19, x19, #0x1
   19874:	tbz	w19, #31, 19840 <__sanitizer_set_report_fd@@Base+0x69fc>
   19878:	eor	w25, w25, #0x1
   1987c:	tst	w24, w25
   19880:	b.eq	19938 <__sanitizer_set_report_fd@@Base+0x6af4>  // b.none
   19884:	mov	w2, #0x2d                  	// #45
   19888:	mov	x1, x23
   1988c:	mov	x0, x22
   19890:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19894:	add	w21, w21, w0
   19898:	b	198d8 <__sanitizer_set_report_fd@@Base+0x6a94>
   1989c:	sub	w2, w20, w1
   198a0:	sbfiz	x2, x2, #3, #32
   198a4:	mov	w1, #0x0                   	// #0
   198a8:	add	x3, sp, #0x70
   198ac:	add	x0, x3, w0, sxtw #3
   198b0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   198b4:	mov	w0, w20
   198b8:	b	19828 <__sanitizer_set_report_fd@@Base+0x69e4>
   198bc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   198c0:	add	x0, x0, #0x358
   198c4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   198c8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   198cc:	eor	w25, w25, #0x1
   198d0:	tst	w24, w25
   198d4:	b.ne	19884 <__sanitizer_set_report_fd@@Base+0x6a40>  // b.any
   198d8:	tbnz	w20, #31, 19938 <__sanitizer_set_report_fd@@Base+0x6af4>
   198dc:	ldr	w0, [sp, #108]
   198e0:	cmp	w0, #0x0
   198e4:	mov	w19, #0x41                  	// #65
   198e8:	mov	w0, #0x61                  	// #97
   198ec:	csel	w19, w19, w0, ne  // ne = any
   198f0:	and	w19, w19, #0xff
   198f4:	sxtw	x20, w20
   198f8:	add	x24, sp, #0x70
   198fc:	sub	w19, w19, #0xa
   19900:	ldr	x0, [x24, x20, lsl #3]
   19904:	and	w0, w0, #0xff
   19908:	add	w1, w0, #0x30
   1990c:	and	w1, w1, #0xff
   19910:	add	w2, w0, w19
   19914:	and	w2, w2, #0xff
   19918:	cmp	w0, #0x9
   1991c:	csel	w2, w2, w1, hi  // hi = pmore
   19920:	mov	x1, x23
   19924:	mov	x0, x22
   19928:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   1992c:	add	w21, w21, w0
   19930:	sub	x20, x20, #0x1
   19934:	tbz	w20, #31, 19900 <__sanitizer_set_report_fd@@Base+0x6abc>
   19938:	mov	w0, w21
   1993c:	ldp	x21, x22, [sp, #16]
   19940:	ldp	x23, x24, [sp, #32]
   19944:	ldp	x25, x26, [sp, #48]
   19948:	ldp	x27, x28, [sp, #64]
   1994c:	ldr	x30, [sp, #80]
   19950:	ldp	x19, x20, [sp], #352
   19954:	ret
   19958:	stp	x19, x20, [sp, #-144]!
   1995c:	stp	x21, x22, [sp, #16]
   19960:	stp	x23, x24, [sp, #32]
   19964:	stp	x27, x28, [sp, #64]
   19968:	str	x30, [sp, #80]
   1996c:	str	x0, [sp, #136]
   19970:	cbz	x2, 199d0 <__sanitizer_set_report_fd@@Base+0x6b8c>
   19974:	mov	x19, x2
   19978:	cmp	w1, #0x0
   1997c:	b.le	199e4 <__sanitizer_set_report_fd@@Base+0x6ba0>
   19980:	ldr	x28, [sp, #136]
   19984:	sxtw	x0, w1
   19988:	str	x0, [sp, #128]
   1998c:	sub	x24, x0, #0x1
   19990:	add	x24, x28, x24
   19994:	ldrb	w2, [x2]
   19998:	cbz	w2, 19ffc <__sanitizer_set_report_fd@@Base+0x71b8>
   1999c:	stp	x25, x26, [sp, #48]
   199a0:	ldr	x23, [x3]
   199a4:	ldr	x0, [x3, #8]
   199a8:	str	x0, [sp, #112]
   199ac:	ldr	w25, [x3, #24]
   199b0:	mov	w22, #0x0                   	// #0
   199b4:	mov	w21, #0x0                   	// #0
   199b8:	mov	w26, #0xffffffff            	// #-1
   199bc:	add	x27, sp, #0x88
   199c0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   199c4:	add	x0, x0, #0x450
   199c8:	str	x0, [sp, #104]
   199cc:	b	19a18 <__sanitizer_set_report_fd@@Base+0x6bd4>
   199d0:	stp	x25, x26, [sp, #48]
   199d4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   199d8:	add	x0, x0, #0x360
   199dc:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   199e0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   199e4:	stp	x25, x26, [sp, #48]
   199e8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   199ec:	add	x0, x0, #0x368
   199f0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   199f4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   199f8:	mov	x1, x24
   199fc:	mov	x0, x27
   19a00:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19a04:	add	w22, w22, w0
   19a08:	mov	x20, x19
   19a0c:	add	x19, x20, #0x1
   19a10:	ldrb	w2, [x20, #1]
   19a14:	cbz	w2, 19fbc <__sanitizer_set_report_fd@@Base+0x7178>
   19a18:	cmp	w2, #0x25
   19a1c:	b.ne	199f8 <__sanitizer_set_report_fd@@Base+0x6bb4>  // b.any
   19a20:	ldrb	w8, [x19, #1]
   19a24:	cmp	w8, #0x2d
   19a28:	cinc	x19, x19, eq  // eq = none
   19a2c:	ldrb	w1, [x19, #1]!
   19a30:	sub	w4, w1, #0x30
   19a34:	and	w4, w4, #0xff
   19a38:	cmp	w4, #0x9
   19a3c:	cset	w6, ls  // ls = plast
   19a40:	cmp	w1, #0x30
   19a44:	cset	w5, eq  // eq = none
   19a48:	mov	w0, w21
   19a4c:	cmp	w4, #0x9
   19a50:	b.ls	19a98 <__sanitizer_set_report_fd@@Base+0x6c54>  // b.plast
   19a54:	ldrb	w1, [x19]
   19a58:	mov	w3, w26
   19a5c:	cmp	w1, #0x2e
   19a60:	b.eq	19abc <__sanitizer_set_report_fd@@Base+0x6c78>  // b.none
   19a64:	ldrb	w1, [x19]
   19a68:	cmp	w1, #0x7a
   19a6c:	cset	w2, eq  // eq = none
   19a70:	cinc	x19, x19, eq  // eq = none
   19a74:	b.eq	19acc <__sanitizer_set_report_fd@@Base+0x6c88>  // b.none
   19a78:	ldrb	w1, [x19]
   19a7c:	cmp	w1, #0x6c
   19a80:	b.ne	19acc <__sanitizer_set_report_fd@@Base+0x6c88>  // b.any
   19a84:	ldrb	w1, [x19, #1]
   19a88:	mov	w7, #0x1                   	// #1
   19a8c:	cmp	w1, #0x6c
   19a90:	b.ne	19acc <__sanitizer_set_report_fd@@Base+0x6c88>  // b.any
   19a94:	b	19ad0 <__sanitizer_set_report_fd@@Base+0x6c8c>
   19a98:	add	w0, w0, w0, lsl #2
   19a9c:	add	w0, w1, w0, lsl #1
   19aa0:	sub	w0, w0, #0x30
   19aa4:	ldrb	w1, [x19, #1]!
   19aa8:	sub	w2, w1, #0x30
   19aac:	and	w2, w2, #0xff
   19ab0:	cmp	w2, #0x9
   19ab4:	b.ls	19a98 <__sanitizer_set_report_fd@@Base+0x6c54>  // b.plast
   19ab8:	b	19a54 <__sanitizer_set_report_fd@@Base+0x6c10>
   19abc:	ldrb	w1, [x19, #1]
   19ac0:	mov	w2, w21
   19ac4:	cmp	w1, #0x2a
   19ac8:	b.eq	19b3c <__sanitizer_set_report_fd@@Base+0x6cf8>  // b.none
   19acc:	mov	w7, w21
   19ad0:	lsl	w1, w7, #1
   19ad4:	add	x20, x19, w1, sxtw
   19ad8:	orr	w2, w7, w2
   19adc:	orr	w6, w6, w2
   19ae0:	cmp	w8, #0x2d
   19ae4:	ccmp	w3, #0x0, #0x0, ne  // ne = any
   19ae8:	b.lt	19ba8 <__sanitizer_set_report_fd@@Base+0x6d64>  // b.tstop
   19aec:	ldrb	w1, [x19, w1, sxtw]
   19af0:	cmp	w1, #0x73
   19af4:	b.ne	19b88 <__sanitizer_set_report_fd@@Base+0x6d44>  // b.any
   19af8:	cbnz	w2, 19efc <__sanitizer_set_report_fd@@Base+0x70b8>
   19afc:	cmp	w8, #0x2d
   19b00:	ccmp	w4, #0x9, #0x2, ne  // ne = any
   19b04:	b.ls	19f0c <__sanitizer_set_report_fd@@Base+0x70c8>  // b.plast
   19b08:	cmp	w8, #0x2d
   19b0c:	cneg	w0, w0, eq  // eq = none
   19b10:	tbnz	w25, #31, 19f2c <__sanitizer_set_report_fd@@Base+0x70e8>
   19b14:	add	x2, x23, #0xf
   19b18:	mov	x1, x23
   19b1c:	and	x23, x2, #0xfffffffffffffff8
   19b20:	ldr	x4, [x1]
   19b24:	mov	w2, w0
   19b28:	mov	x1, x24
   19b2c:	mov	x0, x27
   19b30:	bl	19608 <__sanitizer_set_report_fd@@Base+0x67c4>
   19b34:	add	w22, w22, w0
   19b38:	b	19a0c <__sanitizer_set_report_fd@@Base+0x6bc8>
   19b3c:	add	x19, x19, #0x2
   19b40:	tbnz	w25, #31, 19b58 <__sanitizer_set_report_fd@@Base+0x6d14>
   19b44:	add	x2, x23, #0xb
   19b48:	mov	x1, x23
   19b4c:	and	x23, x2, #0xfffffffffffffff8
   19b50:	ldr	w3, [x1]
   19b54:	b	19a64 <__sanitizer_set_report_fd@@Base+0x6c20>
   19b58:	add	w2, w25, #0x8
   19b5c:	cmp	w2, #0x0
   19b60:	b.le	19b78 <__sanitizer_set_report_fd@@Base+0x6d34>
   19b64:	add	x3, x23, #0xb
   19b68:	mov	w25, w2
   19b6c:	mov	x1, x23
   19b70:	and	x23, x3, #0xfffffffffffffff8
   19b74:	b	19b50 <__sanitizer_set_report_fd@@Base+0x6d0c>
   19b78:	ldr	x1, [sp, #112]
   19b7c:	add	x1, x1, w25, sxtw
   19b80:	mov	w25, w2
   19b84:	b	19b50 <__sanitizer_set_report_fd@@Base+0x6d0c>
   19b88:	mov	x4, #0x0                   	// #0
   19b8c:	mov	x3, #0x0                   	// #0
   19b90:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19b94:	add	x2, x2, #0x378
   19b98:	mov	w1, #0xa9                  	// #169
   19b9c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19ba0:	add	x0, x0, #0x3b8
   19ba4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19ba8:	ldrb	w1, [x19, w1, sxtw]
   19bac:	cmp	w1, #0x64
   19bb0:	b.eq	19cf0 <__sanitizer_set_report_fd@@Base+0x6eac>  // b.none
   19bb4:	b.hi	19c18 <__sanitizer_set_report_fd@@Base+0x6dd4>  // b.pmore
   19bb8:	cmp	w1, #0x58
   19bbc:	b.eq	19c34 <__sanitizer_set_report_fd@@Base+0x6df0>  // b.none
   19bc0:	cmp	w1, #0x63
   19bc4:	b.ne	19bf4 <__sanitizer_set_report_fd@@Base+0x6db0>  // b.any
   19bc8:	cbnz	w6, 19f5c <__sanitizer_set_report_fd@@Base+0x7118>
   19bcc:	tbnz	w25, #31, 19f6c <__sanitizer_set_report_fd@@Base+0x7128>
   19bd0:	add	x1, x23, #0xb
   19bd4:	mov	x0, x23
   19bd8:	and	x23, x1, #0xfffffffffffffff8
   19bdc:	ldrb	w2, [x0]
   19be0:	mov	x1, x24
   19be4:	mov	x0, x27
   19be8:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19bec:	add	w22, w22, w0
   19bf0:	b	19a0c <__sanitizer_set_report_fd@@Base+0x6bc8>
   19bf4:	cmp	w1, #0x25
   19bf8:	b.ne	19fac <__sanitizer_set_report_fd@@Base+0x7168>  // b.any
   19bfc:	cbnz	w6, 19f9c <__sanitizer_set_report_fd@@Base+0x7158>
   19c00:	mov	w2, #0x25                  	// #37
   19c04:	mov	x1, x24
   19c08:	mov	x0, x27
   19c0c:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19c10:	add	w22, w22, w0
   19c14:	b	19a0c <__sanitizer_set_report_fd@@Base+0x6bc8>
   19c18:	cmp	w1, #0x73
   19c1c:	b.eq	19af8 <__sanitizer_set_report_fd@@Base+0x6cb4>  // b.none
   19c20:	b.ls	19c80 <__sanitizer_set_report_fd@@Base+0x6e3c>  // b.plast
   19c24:	cmp	w1, #0x75
   19c28:	b.eq	19c34 <__sanitizer_set_report_fd@@Base+0x6df0>  // b.none
   19c2c:	cmp	w1, #0x78
   19c30:	b.ne	19fac <__sanitizer_set_report_fd@@Base+0x7168>  // b.any
   19c34:	cbz	w7, 19e28 <__sanitizer_set_report_fd@@Base+0x6fe4>
   19c38:	tbnz	w25, #31, 19df8 <__sanitizer_set_report_fd@@Base+0x6fb4>
   19c3c:	add	x3, x23, #0xf
   19c40:	mov	x2, x23
   19c44:	and	x23, x3, #0xfffffffffffffff8
   19c48:	ldr	x2, [x2]
   19c4c:	cmp	w1, #0x58
   19c50:	cset	w7, eq  // eq = none
   19c54:	cmp	w1, #0x75
   19c58:	mov	w6, #0x0                   	// #0
   19c5c:	mov	w4, w0
   19c60:	mov	w3, #0xa                   	// #10
   19c64:	mov	w0, #0x10                  	// #16
   19c68:	csel	w3, w3, w0, eq  // eq = none
   19c6c:	mov	x1, x24
   19c70:	mov	x0, x27
   19c74:	bl	196ec <__sanitizer_set_report_fd@@Base+0x68a8>
   19c78:	add	w22, w22, w0
   19c7c:	b	19a0c <__sanitizer_set_report_fd@@Base+0x6bc8>
   19c80:	cmp	w1, #0x70
   19c84:	b.ne	19fac <__sanitizer_set_report_fd@@Base+0x7168>  // b.any
   19c88:	cbnz	w6, 19ebc <__sanitizer_set_report_fd@@Base+0x7078>
   19c8c:	tbnz	w25, #31, 19ecc <__sanitizer_set_report_fd@@Base+0x7088>
   19c90:	add	x1, x23, #0xf
   19c94:	mov	x0, x23
   19c98:	and	x23, x1, #0xfffffffffffffff8
   19c9c:	ldr	x19, [x0]
   19ca0:	ldr	x4, [sp, #104]
   19ca4:	mov	w3, w26
   19ca8:	mov	w2, w21
   19cac:	mov	x1, x24
   19cb0:	mov	x0, x27
   19cb4:	bl	19608 <__sanitizer_set_report_fd@@Base+0x67c4>
   19cb8:	str	w0, [sp, #124]
   19cbc:	mov	w7, #0x0                   	// #0
   19cc0:	mov	w6, #0x0                   	// #0
   19cc4:	mov	w5, #0x1                   	// #1
   19cc8:	mov	w4, #0xc                   	// #12
   19ccc:	mov	w3, #0x10                  	// #16
   19cd0:	mov	x2, x19
   19cd4:	mov	x1, x24
   19cd8:	mov	x0, x27
   19cdc:	bl	196ec <__sanitizer_set_report_fd@@Base+0x68a8>
   19ce0:	ldr	w1, [sp, #124]
   19ce4:	add	w0, w1, w0
   19ce8:	add	w22, w22, w0
   19cec:	b	19a0c <__sanitizer_set_report_fd@@Base+0x6bc8>
   19cf0:	cbz	w7, 19d64 <__sanitizer_set_report_fd@@Base+0x6f20>
   19cf4:	tbnz	w25, #31, 19d34 <__sanitizer_set_report_fd@@Base+0x6ef0>
   19cf8:	add	x2, x23, #0xf
   19cfc:	mov	x1, x23
   19d00:	and	x23, x2, #0xfffffffffffffff8
   19d04:	ldr	x2, [x1]
   19d08:	cmp	x2, #0x0
   19d0c:	mov	w7, #0x0                   	// #0
   19d10:	lsr	x6, x2, #63
   19d14:	mov	w4, w0
   19d18:	mov	w3, #0xa                   	// #10
   19d1c:	cneg	x2, x2, lt  // lt = tstop
   19d20:	mov	x1, x24
   19d24:	mov	x0, x27
   19d28:	bl	196ec <__sanitizer_set_report_fd@@Base+0x68a8>
   19d2c:	add	w22, w22, w0
   19d30:	b	19a0c <__sanitizer_set_report_fd@@Base+0x6bc8>
   19d34:	add	w2, w25, #0x8
   19d38:	cmp	w2, #0x0
   19d3c:	b.le	19d54 <__sanitizer_set_report_fd@@Base+0x6f10>
   19d40:	add	x3, x23, #0xf
   19d44:	mov	w25, w2
   19d48:	mov	x1, x23
   19d4c:	and	x23, x3, #0xfffffffffffffff8
   19d50:	b	19d04 <__sanitizer_set_report_fd@@Base+0x6ec0>
   19d54:	ldr	x1, [sp, #112]
   19d58:	add	x1, x1, w25, sxtw
   19d5c:	mov	w25, w2
   19d60:	b	19d04 <__sanitizer_set_report_fd@@Base+0x6ec0>
   19d64:	cbnz	w2, 19d80 <__sanitizer_set_report_fd@@Base+0x6f3c>
   19d68:	tbnz	w25, #31, 19dc8 <__sanitizer_set_report_fd@@Base+0x6f84>
   19d6c:	add	x2, x23, #0xb
   19d70:	mov	x1, x23
   19d74:	and	x23, x2, #0xfffffffffffffff8
   19d78:	ldrsw	x2, [x1]
   19d7c:	b	19d08 <__sanitizer_set_report_fd@@Base+0x6ec4>
   19d80:	tbnz	w25, #31, 19d98 <__sanitizer_set_report_fd@@Base+0x6f54>
   19d84:	add	x2, x23, #0xf
   19d88:	mov	x1, x23
   19d8c:	and	x23, x2, #0xfffffffffffffff8
   19d90:	ldr	x2, [x1]
   19d94:	b	19d08 <__sanitizer_set_report_fd@@Base+0x6ec4>
   19d98:	add	w2, w25, #0x8
   19d9c:	cmp	w2, #0x0
   19da0:	b.le	19db8 <__sanitizer_set_report_fd@@Base+0x6f74>
   19da4:	add	x3, x23, #0xf
   19da8:	mov	w25, w2
   19dac:	mov	x1, x23
   19db0:	and	x23, x3, #0xfffffffffffffff8
   19db4:	b	19d90 <__sanitizer_set_report_fd@@Base+0x6f4c>
   19db8:	ldr	x1, [sp, #112]
   19dbc:	add	x1, x1, w25, sxtw
   19dc0:	mov	w25, w2
   19dc4:	b	19d90 <__sanitizer_set_report_fd@@Base+0x6f4c>
   19dc8:	add	w2, w25, #0x8
   19dcc:	cmp	w2, #0x0
   19dd0:	b.le	19de8 <__sanitizer_set_report_fd@@Base+0x6fa4>
   19dd4:	add	x3, x23, #0xb
   19dd8:	mov	w25, w2
   19ddc:	mov	x1, x23
   19de0:	and	x23, x3, #0xfffffffffffffff8
   19de4:	b	19d78 <__sanitizer_set_report_fd@@Base+0x6f34>
   19de8:	ldr	x1, [sp, #112]
   19dec:	add	x1, x1, w25, sxtw
   19df0:	mov	w25, w2
   19df4:	b	19d78 <__sanitizer_set_report_fd@@Base+0x6f34>
   19df8:	add	w3, w25, #0x8
   19dfc:	cmp	w3, #0x0
   19e00:	b.le	19e18 <__sanitizer_set_report_fd@@Base+0x6fd4>
   19e04:	add	x4, x23, #0xf
   19e08:	mov	w25, w3
   19e0c:	mov	x2, x23
   19e10:	and	x23, x4, #0xfffffffffffffff8
   19e14:	b	19c48 <__sanitizer_set_report_fd@@Base+0x6e04>
   19e18:	ldr	x2, [sp, #112]
   19e1c:	add	x2, x2, w25, sxtw
   19e20:	mov	w25, w3
   19e24:	b	19c48 <__sanitizer_set_report_fd@@Base+0x6e04>
   19e28:	cbnz	w2, 19e44 <__sanitizer_set_report_fd@@Base+0x7000>
   19e2c:	tbnz	w25, #31, 19e8c <__sanitizer_set_report_fd@@Base+0x7048>
   19e30:	add	x3, x23, #0xb
   19e34:	mov	x2, x23
   19e38:	and	x23, x3, #0xfffffffffffffff8
   19e3c:	ldr	w2, [x2]
   19e40:	b	19c4c <__sanitizer_set_report_fd@@Base+0x6e08>
   19e44:	tbnz	w25, #31, 19e5c <__sanitizer_set_report_fd@@Base+0x7018>
   19e48:	add	x3, x23, #0xf
   19e4c:	mov	x2, x23
   19e50:	and	x23, x3, #0xfffffffffffffff8
   19e54:	ldr	x2, [x2]
   19e58:	b	19c4c <__sanitizer_set_report_fd@@Base+0x6e08>
   19e5c:	add	w3, w25, #0x8
   19e60:	cmp	w3, #0x0
   19e64:	b.le	19e7c <__sanitizer_set_report_fd@@Base+0x7038>
   19e68:	add	x4, x23, #0xf
   19e6c:	mov	w25, w3
   19e70:	mov	x2, x23
   19e74:	and	x23, x4, #0xfffffffffffffff8
   19e78:	b	19e54 <__sanitizer_set_report_fd@@Base+0x7010>
   19e7c:	ldr	x2, [sp, #112]
   19e80:	add	x2, x2, w25, sxtw
   19e84:	mov	w25, w3
   19e88:	b	19e54 <__sanitizer_set_report_fd@@Base+0x7010>
   19e8c:	add	w3, w25, #0x8
   19e90:	cmp	w3, #0x0
   19e94:	b.le	19eac <__sanitizer_set_report_fd@@Base+0x7068>
   19e98:	add	x4, x23, #0xb
   19e9c:	mov	w25, w3
   19ea0:	mov	x2, x23
   19ea4:	and	x23, x4, #0xfffffffffffffff8
   19ea8:	b	19e3c <__sanitizer_set_report_fd@@Base+0x6ff8>
   19eac:	ldr	x2, [sp, #112]
   19eb0:	add	x2, x2, w25, sxtw
   19eb4:	mov	w25, w3
   19eb8:	b	19e3c <__sanitizer_set_report_fd@@Base+0x6ff8>
   19ebc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19ec0:	add	x0, x0, #0x3f8
   19ec4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   19ec8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19ecc:	add	w1, w25, #0x8
   19ed0:	cmp	w1, #0x0
   19ed4:	b.le	19eec <__sanitizer_set_report_fd@@Base+0x70a8>
   19ed8:	add	x2, x23, #0xf
   19edc:	mov	w25, w1
   19ee0:	mov	x0, x23
   19ee4:	and	x23, x2, #0xfffffffffffffff8
   19ee8:	b	19c9c <__sanitizer_set_report_fd@@Base+0x6e58>
   19eec:	ldr	x0, [sp, #112]
   19ef0:	add	x0, x0, w25, sxtw
   19ef4:	mov	w25, w1
   19ef8:	b	19c9c <__sanitizer_set_report_fd@@Base+0x6e58>
   19efc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19f00:	add	x0, x0, #0x3f8
   19f04:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   19f08:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19f0c:	mov	x4, #0x0                   	// #0
   19f10:	mov	x3, #0x0                   	// #0
   19f14:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19f18:	add	x2, x2, #0x458
   19f1c:	mov	w1, #0xc6                  	// #198
   19f20:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19f24:	add	x0, x0, #0x3b8
   19f28:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19f2c:	add	w2, w25, #0x8
   19f30:	cmp	w2, #0x0
   19f34:	b.le	19f4c <__sanitizer_set_report_fd@@Base+0x7108>
   19f38:	add	x4, x23, #0xf
   19f3c:	mov	w25, w2
   19f40:	mov	x1, x23
   19f44:	and	x23, x4, #0xfffffffffffffff8
   19f48:	b	19b20 <__sanitizer_set_report_fd@@Base+0x6cdc>
   19f4c:	ldr	x1, [sp, #112]
   19f50:	add	x1, x1, w25, sxtw
   19f54:	mov	w25, w2
   19f58:	b	19b20 <__sanitizer_set_report_fd@@Base+0x6cdc>
   19f5c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19f60:	add	x0, x0, #0x3f8
   19f64:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   19f68:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19f6c:	add	w1, w25, #0x8
   19f70:	cmp	w1, #0x0
   19f74:	b.le	19f8c <__sanitizer_set_report_fd@@Base+0x7148>
   19f78:	add	x2, x23, #0xb
   19f7c:	mov	w25, w1
   19f80:	mov	x0, x23
   19f84:	and	x23, x2, #0xfffffffffffffff8
   19f88:	b	19bdc <__sanitizer_set_report_fd@@Base+0x6d98>
   19f8c:	ldr	x0, [sp, #112]
   19f90:	add	x0, x0, w25, sxtw
   19f94:	mov	w25, w1
   19f98:	b	19bdc <__sanitizer_set_report_fd@@Base+0x6d98>
   19f9c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19fa0:	add	x0, x0, #0x3f8
   19fa4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   19fa8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19fac:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   19fb0:	add	x0, x0, #0x3f8
   19fb4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   19fb8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19fbc:	ldp	x25, x26, [sp, #48]
   19fc0:	ldr	x0, [sp, #136]
   19fc4:	cmp	x0, x24
   19fc8:	b.hi	1a004 <__sanitizer_set_report_fd@@Base+0x71c0>  // b.pmore
   19fcc:	mov	w2, #0x0                   	// #0
   19fd0:	ldr	x0, [sp, #128]
   19fd4:	add	x1, x28, x0
   19fd8:	add	x0, sp, #0x88
   19fdc:	bl	195e0 <__sanitizer_set_report_fd@@Base+0x679c>
   19fe0:	mov	w0, w22
   19fe4:	ldp	x21, x22, [sp, #16]
   19fe8:	ldp	x23, x24, [sp, #32]
   19fec:	ldp	x27, x28, [sp, #64]
   19ff0:	ldr	x30, [sp, #80]
   19ff4:	ldp	x19, x20, [sp], #144
   19ff8:	ret
   19ffc:	mov	w22, #0x0                   	// #0
   1a000:	b	19fc0 <__sanitizer_set_report_fd@@Base+0x717c>
   1a004:	stp	x25, x26, [sp, #48]
   1a008:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a00c:	add	x0, x0, #0x488
   1a010:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1a014:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a018:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a01c:	str	x0, [x1, #3656]
   1a020:	ret

000000000001a024 <OnPrint@@Base>:
   1a024:	ret
   1a028:	sub	sp, sp, #0x100
   1a02c:	str	x30, [sp]
   1a030:	str	x3, [sp, #216]
   1a034:	str	x4, [sp, #224]
   1a038:	str	x5, [sp, #232]
   1a03c:	str	x6, [sp, #240]
   1a040:	str	x7, [sp, #248]
   1a044:	str	q0, [sp, #80]
   1a048:	str	q1, [sp, #96]
   1a04c:	str	q2, [sp, #112]
   1a050:	str	q3, [sp, #128]
   1a054:	str	q4, [sp, #144]
   1a058:	str	q5, [sp, #160]
   1a05c:	str	q6, [sp, #176]
   1a060:	str	q7, [sp, #192]
   1a064:	add	x3, sp, #0x100
   1a068:	str	x3, [sp, #48]
   1a06c:	str	x3, [sp, #56]
   1a070:	add	x3, sp, #0xd0
   1a074:	str	x3, [sp, #64]
   1a078:	mov	w3, #0xffffffd8            	// #-40
   1a07c:	str	w3, [sp, #72]
   1a080:	mov	w3, #0xffffff80            	// #-128
   1a084:	str	w3, [sp, #76]
   1a088:	ldp	x4, x5, [sp, #48]
   1a08c:	stp	x4, x5, [sp, #16]
   1a090:	ldp	x4, x5, [sp, #64]
   1a094:	stp	x4, x5, [sp, #32]
   1a098:	add	x3, sp, #0x10
   1a09c:	bl	19958 <__sanitizer_set_report_fd@@Base+0x6b14>
   1a0a0:	ldr	x30, [sp]
   1a0a4:	add	sp, sp, #0x100
   1a0a8:	ret
   1a0ac:	stp	x19, x20, [sp, #-192]!
   1a0b0:	stp	x21, x22, [sp, #16]
   1a0b4:	stp	x23, x24, [sp, #32]
   1a0b8:	stp	x25, x26, [sp, #48]
   1a0bc:	stp	x27, x28, [sp, #64]
   1a0c0:	str	x30, [sp, #80]
   1a0c4:	and	w28, w0, #0xff
   1a0c8:	mov	x23, x1
   1a0cc:	mov	w22, w2
   1a0d0:	str	x3, [sp, #104]
   1a0d4:	mov	x20, x4
   1a0d8:	ldp	x0, x1, [x4]
   1a0dc:	stp	x0, x1, [sp, #160]
   1a0e0:	ldp	x0, x1, [x4, #16]
   1a0e4:	stp	x0, x1, [sp, #176]
   1a0e8:	mov	x19, x23
   1a0ec:	mov	w27, #0x0                   	// #0
   1a0f0:	add	x26, sp, #0x80
   1a0f4:	adrp	x24, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1a0f8:	ldr	x24, [x24, #4056]
   1a0fc:	adrp	x25, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a100:	add	x25, x25, #0x4c8
   1a104:	cbz	w28, 1a2b4 <OnPrint@@Base+0x290>
   1a108:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   1a10c:	str	x0, [sp, #112]
   1a110:	str	w0, [sp, #124]
   1a114:	bl	f620 <__sancov_default_options@@Base+0x2924>
   1a118:	mov	x3, x0
   1a11c:	cmp	x0, #0x0
   1a120:	cset	w1, ne  // ne = any
   1a124:	ldrb	w0, [x24, #48]
   1a128:	mov	w21, #0x0                   	// #0
   1a12c:	tst	w1, w0
   1a130:	b.ne	1a208 <OnPrint@@Base+0x1e4>  // b.any
   1a134:	sub	w1, w22, w21
   1a138:	ldr	w3, [sp, #112]
   1a13c:	mov	x2, x25
   1a140:	sxtw	x1, w1
   1a144:	add	x0, x19, w21, sxtw
   1a148:	bl	1a028 <OnPrint@@Base+0x4>
   1a14c:	add	w21, w21, w0
   1a150:	cmp	w22, w21
   1a154:	b.gt	1a2b8 <OnPrint@@Base+0x294>
   1a158:	cbz	w27, 1a2ec <OnPrint@@Base+0x2c8>
   1a15c:	mov	w0, #0x3fff                	// #16383
   1a160:	cmp	w21, w0
   1a164:	b.gt	1a2a4 <OnPrint@@Base+0x280>
   1a168:	ldp	x0, x1, [x20]
   1a16c:	stp	x0, x1, [sp, #128]
   1a170:	ldp	x0, x1, [x20, #16]
   1a174:	stp	x0, x1, [sp, #144]
   1a178:	add	x3, sp, #0x80
   1a17c:	ldr	x2, [sp, #104]
   1a180:	sub	w1, w22, w21
   1a184:	add	x0, x19, w21, sxtw
   1a188:	bl	19958 <__sanitizer_set_report_fd@@Base+0x6b14>
   1a18c:	add	w0, w0, w21
   1a190:	cmp	w22, w0
   1a194:	b.gt	1a1a4 <OnPrint@@Base+0x180>
   1a198:	mov	w1, #0x3fff                	// #16383
   1a19c:	cmp	w0, w1
   1a1a0:	b.gt	1a320 <OnPrint@@Base+0x2fc>
   1a1a4:	mov	x0, x19
   1a1a8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1a1ac:	mov	x0, x19
   1a1b0:	bl	f0d0 <__sancov_default_options@@Base+0x23d4>
   1a1b4:	mov	x0, x19
   1a1b8:	bl	6380 <OnPrint@plt>
   1a1bc:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a1c0:	ldr	x1, [x0, #3656]
   1a1c4:	cbz	x1, 1a1d0 <OnPrint@@Base+0x1ac>
   1a1c8:	mov	x0, x19
   1a1cc:	blr	x1
   1a1d0:	mov	x0, x19
   1a1d4:	bl	17a3c <__sanitizer_set_report_fd@@Base+0x4bf8>
   1a1d8:	cmp	x19, x23
   1a1dc:	b.eq	1a1ec <OnPrint@@Base+0x1c8>  // b.none
   1a1e0:	sxtw	x1, w22
   1a1e4:	mov	x0, x19
   1a1e8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1a1ec:	ldp	x21, x22, [sp, #16]
   1a1f0:	ldp	x23, x24, [sp, #32]
   1a1f4:	ldp	x25, x26, [sp, #48]
   1a1f8:	ldp	x27, x28, [sp, #64]
   1a1fc:	ldr	x30, [sp, #80]
   1a200:	ldp	x19, x20, [sp], #192
   1a204:	ret
   1a208:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a20c:	add	x2, x2, #0x4a0
   1a210:	sxtw	x1, w22
   1a214:	mov	x0, x19
   1a218:	bl	1a028 <OnPrint@@Base+0x4>
   1a21c:	mov	w21, w0
   1a220:	cmp	w22, w0
   1a224:	b.gt	1a134 <OnPrint@@Base+0x110>
   1a228:	cbz	w27, 1a2ec <OnPrint@@Base+0x2c8>
   1a22c:	mov	w0, #0x3fff                	// #16383
   1a230:	cmp	w21, w0
   1a234:	b.gt	1a294 <OnPrint@@Base+0x270>
   1a238:	sub	w1, w22, w21
   1a23c:	ldr	w3, [sp, #124]
   1a240:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a244:	add	x2, x2, #0x4c8
   1a248:	sxtw	x1, w1
   1a24c:	add	x0, x19, w21, sxtw
   1a250:	bl	1a028 <OnPrint@@Base+0x4>
   1a254:	add	w21, w21, w0
   1a258:	cmp	w22, w21
   1a25c:	b.le	1a15c <OnPrint@@Base+0x138>
   1a260:	ldp	x0, x1, [x20]
   1a264:	stp	x0, x1, [sp, #128]
   1a268:	ldp	x0, x1, [x20, #16]
   1a26c:	stp	x0, x1, [sp, #144]
   1a270:	add	x3, sp, #0x80
   1a274:	ldr	x2, [sp, #104]
   1a278:	sub	w1, w22, w21
   1a27c:	add	x0, x19, w21, sxtw
   1a280:	bl	19958 <__sanitizer_set_report_fd@@Base+0x6b14>
   1a284:	add	w0, w21, w0
   1a288:	cmp	w22, w0
   1a28c:	b.le	1a198 <OnPrint@@Base+0x174>
   1a290:	b	1a1a4 <OnPrint@@Base+0x180>
   1a294:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a298:	add	x0, x0, #0x4a8
   1a29c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1a2a0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a2a4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a2a8:	add	x0, x0, #0x4a8
   1a2ac:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1a2b0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a2b4:	mov	w21, #0x0                   	// #0
   1a2b8:	ldp	x0, x1, [x20]
   1a2bc:	stp	x0, x1, [x26]
   1a2c0:	ldp	x0, x1, [x20, #16]
   1a2c4:	stp	x0, x1, [x26, #16]
   1a2c8:	mov	x3, x26
   1a2cc:	ldr	x2, [sp, #104]
   1a2d0:	sub	w1, w22, w21
   1a2d4:	add	x0, x19, w21, sxtw
   1a2d8:	bl	19958 <__sanitizer_set_report_fd@@Base+0x6b14>
   1a2dc:	add	w0, w21, w0
   1a2e0:	cmp	w22, w0
   1a2e4:	b.gt	1a1a4 <OnPrint@@Base+0x180>
   1a2e8:	cbnz	w27, 1a198 <OnPrint@@Base+0x174>
   1a2ec:	add	w27, w27, #0x1
   1a2f0:	ldp	x0, x1, [sp, #160]
   1a2f4:	stp	x0, x1, [x20]
   1a2f8:	ldp	x0, x1, [sp, #176]
   1a2fc:	stp	x0, x1, [x20, #16]
   1a300:	mov	w2, #0x0                   	// #0
   1a304:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a308:	add	x1, x1, #0x4d0
   1a30c:	mov	x0, #0x4000                	// #16384
   1a310:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1a314:	mov	x19, x0
   1a318:	mov	w22, #0x4000                	// #16384
   1a31c:	b	1a104 <OnPrint@@Base+0xe0>
   1a320:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a324:	add	x0, x0, #0x4a8
   1a328:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1a32c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a330:	sub	sp, sp, #0x1c0
   1a334:	str	x30, [sp]
   1a338:	ldp	x4, x5, [x2]
   1a33c:	stp	x4, x5, [sp, #16]
   1a340:	ldp	x2, x3, [x2, #16]
   1a344:	stp	x2, x3, [sp, #32]
   1a348:	add	x4, sp, #0x10
   1a34c:	mov	x3, x1
   1a350:	mov	w2, #0x190                 	// #400
   1a354:	add	x1, sp, #0x30
   1a358:	bl	1a0ac <OnPrint@@Base+0x88>
   1a35c:	ldr	x30, [sp]
   1a360:	add	sp, sp, #0x1c0
   1a364:	ret
   1a368:	sub	sp, sp, #0x110
   1a36c:	str	x30, [sp]
   1a370:	str	x1, [sp, #216]
   1a374:	str	x2, [sp, #224]
   1a378:	str	x3, [sp, #232]
   1a37c:	str	x4, [sp, #240]
   1a380:	str	x5, [sp, #248]
   1a384:	str	x6, [sp, #256]
   1a388:	str	x7, [sp, #264]
   1a38c:	str	q0, [sp, #80]
   1a390:	str	q1, [sp, #96]
   1a394:	str	q2, [sp, #112]
   1a398:	str	q3, [sp, #128]
   1a39c:	str	q4, [sp, #144]
   1a3a0:	str	q5, [sp, #160]
   1a3a4:	str	q6, [sp, #176]
   1a3a8:	str	q7, [sp, #192]
   1a3ac:	add	x1, sp, #0x110
   1a3b0:	str	x1, [sp, #48]
   1a3b4:	str	x1, [sp, #56]
   1a3b8:	add	x1, sp, #0xd0
   1a3bc:	str	x1, [sp, #64]
   1a3c0:	mov	w1, #0xffffffc8            	// #-56
   1a3c4:	str	w1, [sp, #72]
   1a3c8:	mov	w1, #0xffffff80            	// #-128
   1a3cc:	str	w1, [sp, #76]
   1a3d0:	ldp	x2, x3, [sp, #48]
   1a3d4:	stp	x2, x3, [sp, #16]
   1a3d8:	ldp	x2, x3, [sp, #64]
   1a3dc:	stp	x2, x3, [sp, #32]
   1a3e0:	add	x2, sp, #0x10
   1a3e4:	mov	x1, x0
   1a3e8:	mov	w0, #0x0                   	// #0
   1a3ec:	bl	1a330 <OnPrint@@Base+0x30c>
   1a3f0:	ldr	x30, [sp]
   1a3f4:	add	sp, sp, #0x110
   1a3f8:	ret
   1a3fc:	sub	sp, sp, #0x110
   1a400:	str	x30, [sp]
   1a404:	str	x1, [sp, #216]
   1a408:	str	x2, [sp, #224]
   1a40c:	str	x3, [sp, #232]
   1a410:	str	x4, [sp, #240]
   1a414:	str	x5, [sp, #248]
   1a418:	str	x6, [sp, #256]
   1a41c:	str	x7, [sp, #264]
   1a420:	str	q0, [sp, #80]
   1a424:	str	q1, [sp, #96]
   1a428:	str	q2, [sp, #112]
   1a42c:	str	q3, [sp, #128]
   1a430:	str	q4, [sp, #144]
   1a434:	str	q5, [sp, #160]
   1a438:	str	q6, [sp, #176]
   1a43c:	str	q7, [sp, #192]
   1a440:	add	x1, sp, #0x110
   1a444:	str	x1, [sp, #48]
   1a448:	str	x1, [sp, #56]
   1a44c:	add	x1, sp, #0xd0
   1a450:	str	x1, [sp, #64]
   1a454:	mov	w1, #0xffffffc8            	// #-56
   1a458:	str	w1, [sp, #72]
   1a45c:	mov	w1, #0xffffff80            	// #-128
   1a460:	str	w1, [sp, #76]
   1a464:	ldp	x2, x3, [sp, #48]
   1a468:	stp	x2, x3, [sp, #16]
   1a46c:	ldp	x2, x3, [sp, #64]
   1a470:	stp	x2, x3, [sp, #32]
   1a474:	add	x2, sp, #0x10
   1a478:	mov	x1, x0
   1a47c:	mov	w0, #0x1                   	// #1
   1a480:	bl	1a330 <OnPrint@@Base+0x30c>
   1a484:	ldr	x30, [sp]
   1a488:	add	sp, sp, #0x110
   1a48c:	ret
   1a490:	stp	x19, x30, [sp, #-256]!
   1a494:	str	x2, [sp, #208]
   1a498:	str	x3, [sp, #216]
   1a49c:	str	x4, [sp, #224]
   1a4a0:	str	x5, [sp, #232]
   1a4a4:	str	x6, [sp, #240]
   1a4a8:	str	x7, [sp, #248]
   1a4ac:	str	q0, [sp, #80]
   1a4b0:	str	q1, [sp, #96]
   1a4b4:	str	q2, [sp, #112]
   1a4b8:	str	q3, [sp, #128]
   1a4bc:	str	q4, [sp, #144]
   1a4c0:	str	q5, [sp, #160]
   1a4c4:	str	q6, [sp, #176]
   1a4c8:	str	q7, [sp, #192]
   1a4cc:	ldr	x3, [x0, #24]
   1a4d0:	ldr	x4, [x0, #16]
   1a4d4:	cmp	x3, x4
   1a4d8:	b.cs	1a564 <OnPrint@@Base+0x540>  // b.hs, b.nlast
   1a4dc:	mov	x19, x0
   1a4e0:	add	x0, sp, #0x100
   1a4e4:	str	x0, [sp, #48]
   1a4e8:	str	x0, [sp, #56]
   1a4ec:	add	x0, sp, #0xd0
   1a4f0:	str	x0, [sp, #64]
   1a4f4:	mov	w0, #0xffffffd0            	// #-48
   1a4f8:	str	w0, [sp, #72]
   1a4fc:	mov	w0, #0xffffff80            	// #-128
   1a500:	str	w0, [sp, #76]
   1a504:	ldr	x0, [x19, #24]
   1a508:	ldp	x2, x3, [sp, #48]
   1a50c:	stp	x2, x3, [sp, #16]
   1a510:	ldp	x2, x3, [sp, #64]
   1a514:	stp	x2, x3, [sp, #32]
   1a518:	ldr	x5, [x19, #16]
   1a51c:	ldr	x4, [x19]
   1a520:	add	x3, sp, #0x10
   1a524:	mov	x2, x1
   1a528:	sub	w1, w5, w0
   1a52c:	add	x0, x4, x0
   1a530:	bl	19958 <__sanitizer_set_report_fd@@Base+0x6b14>
   1a534:	ldr	x1, [x19]
   1a538:	ldr	x0, [x19, #24]
   1a53c:	add	x0, x1, x0
   1a540:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1a544:	ldr	x3, [x19, #24]
   1a548:	add	x3, x0, x3
   1a54c:	str	x3, [x19, #24]
   1a550:	ldr	x4, [x19, #16]
   1a554:	cmp	x3, x4
   1a558:	b.cs	1a57c <OnPrint@@Base+0x558>  // b.hs, b.nlast
   1a55c:	ldp	x19, x30, [sp], #256
   1a560:	ret
   1a564:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a568:	add	x2, x2, #0x4d8
   1a56c:	mov	w1, #0x15c                 	// #348
   1a570:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a574:	add	x0, x0, #0x3b8
   1a578:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a57c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a580:	add	x2, x2, #0x4d8
   1a584:	mov	w1, #0x162                 	// #354
   1a588:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a58c:	add	x0, x0, #0x3b8
   1a590:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a594:	and	w0, w0, #0xff
   1a598:	sub	w1, w0, #0x30
   1a59c:	and	w1, w1, #0xff
   1a5a0:	cmp	w1, #0x9
   1a5a4:	b.ls	1a5d0 <OnPrint@@Base+0x5ac>  // b.plast
   1a5a8:	sub	w1, w0, #0x61
   1a5ac:	and	w1, w1, #0xff
   1a5b0:	cmp	w1, #0x5
   1a5b4:	b.ls	1a5d8 <OnPrint@@Base+0x5b4>  // b.plast
   1a5b8:	sub	w1, w0, #0x41
   1a5bc:	and	w1, w1, #0xff
   1a5c0:	sub	w0, w0, #0x37
   1a5c4:	cmp	w1, #0x6
   1a5c8:	csinv	w0, w0, wzr, cc  // cc = lo, ul, last
   1a5cc:	ret
   1a5d0:	sub	w0, w0, #0x30
   1a5d4:	b	1a5cc <OnPrint@@Base+0x5a8>
   1a5d8:	sub	w0, w0, #0x57
   1a5dc:	b	1a5cc <OnPrint@@Base+0x5a8>
   1a5e0:	stp	x19, x20, [sp, #-48]!
   1a5e4:	stp	x21, x22, [sp, #16]
   1a5e8:	stp	x23, x30, [sp, #32]
   1a5ec:	mov	x20, x0
   1a5f0:	mov	w22, w1
   1a5f4:	sub	w0, w1, #0x2
   1a5f8:	mov	x21, #0x0                   	// #0
   1a5fc:	sxtw	x23, w1
   1a600:	cmp	w0, #0xe
   1a604:	b.hi	1a634 <OnPrint@@Base+0x610>  // b.pmore
   1a608:	ldr	x19, [x20]
   1a60c:	ldrb	w0, [x19]
   1a610:	bl	1a594 <OnPrint@@Base+0x570>
   1a614:	cmp	w0, #0x0
   1a618:	ccmp	w22, w0, #0x4, ge  // ge = tcont
   1a61c:	b.le	1a654 <OnPrint@@Base+0x630>
   1a620:	sxtw	x0, w0
   1a624:	madd	x21, x23, x21, x0
   1a628:	add	x19, x19, #0x1
   1a62c:	str	x19, [x20]
   1a630:	b	1a608 <OnPrint@@Base+0x5e4>
   1a634:	mov	x4, #0x0                   	// #0
   1a638:	mov	x3, #0x0                   	// #0
   1a63c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a640:	add	x2, x2, #0x4f8
   1a644:	mov	w1, #0x27                  	// #39
   1a648:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a64c:	add	x0, x0, #0x520
   1a650:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a654:	mov	x0, x21
   1a658:	ldp	x21, x22, [sp, #16]
   1a65c:	ldp	x23, x30, [sp, #32]
   1a660:	ldp	x19, x20, [sp], #48
   1a664:	ret
   1a668:	str	x30, [sp, #-16]!
   1a66c:	bl	1a594 <OnPrint@@Base+0x570>
   1a670:	cmp	w0, #0x9
   1a674:	cset	w0, ls  // ls = plast
   1a678:	ldr	x30, [sp], #16
   1a67c:	ret
   1a680:	str	x30, [sp, #-16]!
   1a684:	mov	w1, #0xa                   	// #10
   1a688:	bl	1a5e0 <OnPrint@@Base+0x5bc>
   1a68c:	ldr	x30, [sp], #16
   1a690:	ret
   1a694:	str	x30, [sp, #-16]!
   1a698:	bl	1a594 <OnPrint@@Base+0x570>
   1a69c:	cmp	w0, #0xf
   1a6a0:	cset	w0, ls  // ls = plast
   1a6a4:	ldr	x30, [sp], #16
   1a6a8:	ret
   1a6ac:	str	x30, [sp, #-16]!
   1a6b0:	mov	w1, #0x10                  	// #16
   1a6b4:	bl	1a5e0 <OnPrint@@Base+0x5bc>
   1a6b8:	ldr	x30, [sp], #16
   1a6bc:	ret
   1a6c0:	str	x30, [sp, #-16]!
   1a6c4:	mov	x6, x0
   1a6c8:	mov	x0, x1
   1a6cc:	ldr	x1, [x6, #72]
   1a6d0:	cbnz	x1, 1a6f8 <OnPrint@@Base+0x6d4>
   1a6d4:	ldr	x3, [x6, #40]
   1a6d8:	ubfx	w4, w3, #1, #1
   1a6dc:	ubfx	w3, w3, #2, #1
   1a6e0:	mov	x5, #0x0                   	// #0
   1a6e4:	ldr	x2, [x6, #8]
   1a6e8:	ldr	x1, [x6]
   1a6ec:	bl	f274 <__sancov_default_options@@Base+0x2578>
   1a6f0:	ldr	x30, [sp], #16
   1a6f4:	ret
   1a6f8:	mov	x4, #0x0                   	// #0
   1a6fc:	mov	x3, #0x0                   	// #0
   1a700:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a704:	add	x2, x2, #0x568
   1a708:	mov	w1, #0x43                  	// #67
   1a70c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a710:	add	x0, x0, #0x520
   1a714:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a718:	mov	x1, x0
   1a71c:	ldr	x0, [x0]
   1a720:	adrp	x2, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a724:	ldr	x2, [x2, #3664]
   1a728:	cmp	x0, x2
   1a72c:	b.eq	1a744 <OnPrint@@Base+0x720>  // b.none
   1a730:	str	x30, [sp, #-16]!
   1a734:	ldr	x1, [x1, #8]
   1a738:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1a73c:	ldr	x30, [sp], #16
   1a740:	ret
   1a744:	ret
   1a748:	ldr	x1, [x0]
   1a74c:	str	x1, [x0, #24]
   1a750:	ret
   1a754:	str	x30, [sp, #-48]!
   1a758:	add	x0, sp, #0x18
   1a75c:	bl	1ae64 <OnPrint@@Base+0xe40>
   1a760:	ldr	x0, [sp, #32]
   1a764:	cbnz	x0, 1a770 <OnPrint@@Base+0x74c>
   1a768:	ldr	x30, [sp], #48
   1a76c:	ret
   1a770:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a774:	add	x0, x0, #0xe50
   1a778:	add	x0, x0, #0x18
   1a77c:	mov	w2, #0x1                   	// #1
   1a780:	ldxrb	w1, [x0]
   1a784:	stxrb	w3, w2, [x0]
   1a788:	cbnz	w3, 1a780 <OnPrint@@Base+0x75c>
   1a78c:	dmb	ish
   1a790:	and	w0, w1, #0xff
   1a794:	cbnz	w0, 1a7c8 <OnPrint@@Base+0x7a4>
   1a798:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a79c:	ldr	x1, [x0, #3672]
   1a7a0:	cbnz	x1, 1a7dc <OnPrint@@Base+0x7b8>
   1a7a4:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a7a8:	add	x0, x0, #0xe50
   1a7ac:	ldp	x2, x3, [sp, #24]
   1a7b0:	stp	x2, x3, [x0]
   1a7b4:	ldr	x1, [sp, #40]
   1a7b8:	str	x1, [x0, #16]
   1a7bc:	dmb	ish
   1a7c0:	strb	wzr, [x0, #24]
   1a7c4:	b	1a768 <OnPrint@@Base+0x744>
   1a7c8:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a7cc:	add	x0, x0, #0xe50
   1a7d0:	add	x0, x0, #0x18
   1a7d4:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   1a7d8:	b	1a798 <OnPrint@@Base+0x774>
   1a7dc:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a7e0:	ldr	x0, [x0, #3664]
   1a7e4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1a7e8:	b	1a7a4 <OnPrint@@Base+0x780>
   1a7ec:	stp	x19, x30, [sp, #-16]!
   1a7f0:	mov	x19, x0
   1a7f4:	adrp	x1, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a7f8:	add	x1, x1, #0xe50
   1a7fc:	add	x1, x1, #0x18
   1a800:	mov	w2, #0x1                   	// #1
   1a804:	ldxrb	w0, [x1]
   1a808:	stxrb	w3, w2, [x1]
   1a80c:	cbnz	w3, 1a804 <OnPrint@@Base+0x7e0>
   1a810:	dmb	ish
   1a814:	and	w0, w0, #0xff
   1a818:	cbnz	w0, 1a858 <OnPrint@@Base+0x834>
   1a81c:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a820:	ldr	x0, [x0, #3664]
   1a824:	cbz	x0, 1a840 <OnPrint@@Base+0x81c>
   1a828:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a82c:	add	x0, x0, #0xe50
   1a830:	ldp	x2, x3, [x0]
   1a834:	stp	x2, x3, [x19]
   1a838:	ldr	x0, [x0, #16]
   1a83c:	str	x0, [x19, #16]
   1a840:	dmb	ish
   1a844:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a848:	add	x0, x0, #0xe50
   1a84c:	strb	wzr, [x0, #24]
   1a850:	ldp	x19, x30, [sp], #16
   1a854:	ret
   1a858:	mov	x0, x1
   1a85c:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   1a860:	b	1a81c <OnPrint@@Base+0x7f8>
   1a864:	stp	x19, x30, [sp, #-16]!
   1a868:	mov	x19, x0
   1a86c:	tst	w1, #0xff
   1a870:	b.ne	1a898 <OnPrint@@Base+0x874>  // b.any
   1a874:	bl	1ae64 <OnPrint@@Base+0xe40>
   1a878:	ldr	x0, [x19, #8]
   1a87c:	cbz	x0, 1a8b8 <OnPrint@@Base+0x894>
   1a880:	ldr	x0, [x19, #16]
   1a884:	cbz	x0, 1a8d8 <OnPrint@@Base+0x8b4>
   1a888:	ldr	x0, [x19]
   1a88c:	str	x0, [x19, #24]
   1a890:	ldp	x19, x30, [sp], #16
   1a894:	ret
   1a898:	bl	1a754 <OnPrint@@Base+0x730>
   1a89c:	mov	x0, x19
   1a8a0:	bl	1ae64 <OnPrint@@Base+0xe40>
   1a8a4:	ldr	x0, [x19, #8]
   1a8a8:	cbnz	x0, 1a880 <OnPrint@@Base+0x85c>
   1a8ac:	mov	x0, x19
   1a8b0:	bl	1a7ec <OnPrint@@Base+0x7c8>
   1a8b4:	b	1a878 <OnPrint@@Base+0x854>
   1a8b8:	mov	x4, #0x0                   	// #0
   1a8bc:	mov	x3, #0x0                   	// #0
   1a8c0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a8c4:	add	x2, x2, #0x580
   1a8c8:	mov	w1, #0x51                  	// #81
   1a8cc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a8d0:	add	x0, x0, #0x520
   1a8d4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a8d8:	mov	x4, #0x0                   	// #0
   1a8dc:	mov	x3, #0x0                   	// #0
   1a8e0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a8e4:	add	x2, x2, #0x5b0
   1a8e8:	mov	w1, #0x52                  	// #82
   1a8ec:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1a8f0:	add	x0, x0, #0x520
   1a8f4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a8f8:	stp	x19, x20, [sp, #-272]!
   1a8fc:	stp	x21, x22, [sp, #16]
   1a900:	stp	x23, x24, [sp, #32]
   1a904:	stp	x25, x26, [sp, #48]
   1a908:	stp	x27, x28, [sp, #64]
   1a90c:	str	x30, [sp, #80]
   1a910:	mov	x22, x0
   1a914:	mov	x19, x1
   1a918:	ldr	x0, [x0]
   1a91c:	str	x0, [x22, #24]
   1a920:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1a924:	ldr	x0, [x0, #4016]
   1a928:	ldr	x0, [x0]
   1a92c:	cbz	x0, 1a9d4 <OnPrint@@Base+0x9b0>
   1a930:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1a934:	ldr	x0, [x0, #4016]
   1a938:	ldr	x0, [x0]
   1a93c:	sub	x20, x0, #0x1
   1a940:	ands	x20, x20, x0
   1a944:	b.ne	1a9e8 <OnPrint@@Base+0x9c4>  // b.any
   1a948:	add	x27, x0, #0xfff
   1a94c:	neg	x0, x0
   1a950:	and	x27, x27, x0
   1a954:	mov	w2, #0x0                   	// #0
   1a958:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1a95c:	add	x1, x1, #0x350
   1a960:	mov	x0, x27
   1a964:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1a968:	mov	x26, x0
   1a96c:	mov	x2, #0x0                   	// #0
   1a970:	mov	x1, #0x0                   	// #0
   1a974:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1a978:	mov	x1, #0x0                   	// #0
   1a97c:	mov	x0, #0x0                   	// #0
   1a980:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1a984:	cmp	x27, #0xfff
   1a988:	b.ls	1a9f8 <OnPrint@@Base+0x9d4>  // b.plast
   1a98c:	mov	x2, #0x1000                	// #4096
   1a990:	mov	w1, #0x0                   	// #0
   1a994:	mov	x0, x26
   1a998:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1a99c:	strb	wzr, [x26]
   1a9a0:	str	x26, [sp, #216]
   1a9a4:	mov	x0, #0x1000                	// #4096
   1a9a8:	str	x0, [sp, #224]
   1a9ac:	str	xzr, [sp, #264]
   1a9b0:	add	x25, sp, #0xc0
   1a9b4:	add	x24, sp, #0x78
   1a9b8:	add	x0, x24, #0x1c
   1a9bc:	str	x0, [sp, #104]
   1a9c0:	mov	x28, #0xe38f                	// #58255
   1a9c4:	movk	x28, #0x8e38, lsl #16
   1a9c8:	movk	x28, #0x38e3, lsl #32
   1a9cc:	movk	x28, #0xe38e, lsl #48
   1a9d0:	b	1ab88 <OnPrint@@Base+0xb64>
   1a9d4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1a9d8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1a9dc:	ldr	x1, [x1, #4016]
   1a9e0:	str	x0, [x1]
   1a9e4:	b	1a930 <OnPrint@@Base+0x90c>
   1a9e8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1a9ec:	add	x0, x0, #0x338
   1a9f0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1a9f4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a9f8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1a9fc:	ldr	x0, [x0, #4016]
   1aa00:	ldr	x0, [x0]
   1aa04:	cbz	x0, 1aa68 <OnPrint@@Base+0xa44>
   1aa08:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1aa0c:	ldr	x0, [x0, #4016]
   1aa10:	ldr	x0, [x0]
   1aa14:	sub	x1, x0, #0x1
   1aa18:	tst	x1, x0
   1aa1c:	b.ne	1aa7c <OnPrint@@Base+0xa58>  // b.any
   1aa20:	add	x21, x0, #0xfff
   1aa24:	neg	x0, x0
   1aa28:	and	x21, x21, x0
   1aa2c:	mov	w2, #0x0                   	// #0
   1aa30:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1aa34:	add	x1, x1, #0x350
   1aa38:	mov	x0, x21
   1aa3c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1aa40:	mov	x23, x0
   1aa44:	mov	x2, #0x0                   	// #0
   1aa48:	mov	x1, x26
   1aa4c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1aa50:	mov	x1, x27
   1aa54:	mov	x0, x26
   1aa58:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1aa5c:	mov	x27, x21
   1aa60:	mov	x26, x23
   1aa64:	b	1a98c <OnPrint@@Base+0x968>
   1aa68:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1aa6c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1aa70:	ldr	x1, [x1, #4016]
   1aa74:	str	x0, [x1]
   1aa78:	b	1aa08 <OnPrint@@Base+0x9e4>
   1aa7c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1aa80:	add	x0, x0, #0x338
   1aa84:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1aa88:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1aa8c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1aa90:	add	x2, x2, #0x630
   1aa94:	mov	w1, #0x1be                 	// #446
   1aa98:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1aa9c:	add	x0, x0, #0x380
   1aaa0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1aaa4:	mov	x3, x0
   1aaa8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1aaac:	add	x2, x2, #0x660
   1aab0:	mov	w1, #0x17b                 	// #379
   1aab4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1aab8:	add	x0, x0, #0x380
   1aabc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1aac0:	mov	x4, x1
   1aac4:	mov	x3, x0
   1aac8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1aacc:	add	x2, x2, #0x688
   1aad0:	mov	w1, #0x17c                 	// #380
   1aad4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1aad8:	add	x0, x0, #0x380
   1aadc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1aae0:	mov	x4, x0
   1aae4:	add	x4, x4, x4, lsl #3
   1aae8:	lsl	x21, x4, #3
   1aaec:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1aaf0:	ldr	x0, [x0, #4016]
   1aaf4:	ldr	x0, [x0]
   1aaf8:	cbz	x0, 1ac84 <OnPrint@@Base+0xc60>
   1aafc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ab00:	ldr	x0, [x0, #4016]
   1ab04:	ldr	x0, [x0]
   1ab08:	sub	x1, x0, #0x1
   1ab0c:	tst	x0, x1
   1ab10:	b.ne	1ac98 <OnPrint@@Base+0xc74>  // b.any
   1ab14:	add	x21, x21, x1
   1ab18:	neg	x0, x0
   1ab1c:	and	x21, x21, x0
   1ab20:	mov	w2, #0x0                   	// #0
   1ab24:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ab28:	add	x1, x1, #0x350
   1ab2c:	mov	x0, x21
   1ab30:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1ab34:	mov	x23, x0
   1ab38:	ldr	x2, [x19, #16]
   1ab3c:	add	x2, x2, x2, lsl #3
   1ab40:	lsl	x2, x2, #3
   1ab44:	ldr	x1, [x19]
   1ab48:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1ab4c:	ldr	x1, [x19, #8]
   1ab50:	ldr	x0, [x19]
   1ab54:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1ab58:	str	x23, [x19]
   1ab5c:	str	x21, [x19, #8]
   1ab60:	ldr	x3, [x19]
   1ab64:	ldr	x1, [x19, #16]
   1ab68:	add	x0, x1, #0x1
   1ab6c:	str	x0, [x19, #16]
   1ab70:	add	x0, x1, x1, lsl #3
   1ab74:	mov	x2, #0x48                  	// #72
   1ab78:	mov	x1, x24
   1ab7c:	add	x0, x3, x0, lsl #3
   1ab80:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1ab84:	add	x20, x20, #0x1
   1ab88:	mov	x1, x25
   1ab8c:	mov	x0, x22
   1ab90:	bl	1aea8 <OnPrint@@Base+0xe84>
   1ab94:	and	w0, w0, #0xff
   1ab98:	cbz	w0, 1aca8 <OnPrint@@Base+0xc84>
   1ab9c:	ldr	x23, [sp, #216]
   1aba0:	ldrb	w0, [x23]
   1aba4:	cbz	w0, 1ab84 <OnPrint@@Base+0xb60>
   1aba8:	cmp	x20, #0x0
   1abac:	ldr	x21, [sp, #192]
   1abb0:	csel	x21, x21, x20, ne  // ne = any
   1abb4:	ldr	x0, [sp, #208]
   1abb8:	sub	x21, x21, x0
   1abbc:	str	xzr, [sp, #120]
   1abc0:	str	xzr, [sp, #128]
   1abc4:	str	xzr, [sp, #136]
   1abc8:	str	wzr, [sp, #144]
   1abcc:	strb	wzr, [sp, #164]
   1abd0:	mov	x2, #0x10                  	// #16
   1abd4:	mov	w1, #0x0                   	// #0
   1abd8:	ldr	x0, [sp, #104]
   1abdc:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1abe0:	str	xzr, [sp, #184]
   1abe4:	str	xzr, [sp, #176]
   1abe8:	str	xzr, [sp, #168]
   1abec:	mov	x2, x21
   1abf0:	mov	x1, x23
   1abf4:	mov	x0, x24
   1abf8:	bl	f1f8 <__sancov_default_options@@Base+0x24fc>
   1abfc:	mov	x1, x24
   1ac00:	mov	x0, x25
   1ac04:	bl	1a6c0 <OnPrint@@Base+0x69c>
   1ac08:	ldr	x3, [x19, #16]
   1ac0c:	ldr	x0, [x19, #8]
   1ac10:	umulh	x0, x0, x28
   1ac14:	lsr	x4, x0, #6
   1ac18:	cmp	x3, x0, lsr #6
   1ac1c:	b.hi	1aa8c <OnPrint@@Base+0xa68>  // b.pmore
   1ac20:	cmp	x3, x4
   1ac24:	b.ne	1ab60 <OnPrint@@Base+0xb3c>  // b.any
   1ac28:	add	x0, x3, #0x1
   1ac2c:	tst	x3, x0
   1ac30:	b.eq	1aae0 <OnPrint@@Base+0xabc>  // b.none
   1ac34:	clz	x2, x0
   1ac38:	mov	w1, #0x3f                  	// #63
   1ac3c:	sub	w1, w1, w2
   1ac40:	add	w2, w1, #0x1
   1ac44:	mov	x4, #0x1                   	// #1
   1ac48:	lsl	x4, x4, x2
   1ac4c:	cmp	x0, x4
   1ac50:	b.cs	1aaa4 <OnPrint@@Base+0xa80>  // b.hs, b.nlast
   1ac54:	mov	x2, #0x1                   	// #1
   1ac58:	lsl	x1, x2, x1
   1ac5c:	cmp	x0, x1
   1ac60:	b.ls	1aac0 <OnPrint@@Base+0xa9c>  // b.plast
   1ac64:	cmp	x3, x4
   1ac68:	b.ls	1aae4 <OnPrint@@Base+0xac0>  // b.plast
   1ac6c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1ac70:	add	x2, x2, #0x6a8
   1ac74:	mov	w1, #0x1fd                 	// #509
   1ac78:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ac7c:	add	x0, x0, #0x380
   1ac80:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ac84:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1ac88:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ac8c:	ldr	x1, [x1, #4016]
   1ac90:	str	x0, [x1]
   1ac94:	b	1aafc <OnPrint@@Base+0xad8>
   1ac98:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ac9c:	add	x0, x0, #0x338
   1aca0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1aca4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1aca8:	mov	x1, x27
   1acac:	mov	x0, x26
   1acb0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1acb4:	ldp	x21, x22, [sp, #16]
   1acb8:	ldp	x23, x24, [sp, #32]
   1acbc:	ldp	x25, x26, [sp, #48]
   1acc0:	ldp	x27, x28, [sp, #64]
   1acc4:	ldr	x30, [sp, #80]
   1acc8:	ldp	x19, x20, [sp], #272
   1accc:	ret
   1acd0:	stp	x19, x20, [sp, #-112]!
   1acd4:	stp	x23, x24, [sp, #32]
   1acd8:	stp	x25, x26, [sp, #48]
   1acdc:	str	x30, [sp, #72]
   1ace0:	mov	x24, x0
   1ace4:	mov	x25, x1
   1ace8:	mov	x26, x2
   1acec:	str	xzr, [sp, #104]
   1acf0:	str	xzr, [sp, #96]
   1acf4:	str	xzr, [sp, #88]
   1acf8:	mov	x5, #0x0                   	// #0
   1acfc:	mov	x4, #0x4000000             	// #67108864
   1ad00:	add	x3, sp, #0x58
   1ad04:	add	x2, sp, #0x60
   1ad08:	add	x1, sp, #0x68
   1ad0c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1ad10:	add	x0, x0, #0x5d8
   1ad14:	bl	12634 <__sanitizer_cov_dump@@Base+0x2104>
   1ad18:	and	w0, w0, #0xff
   1ad1c:	cbz	w0, 1ae50 <OnPrint@@Base+0xe2c>
   1ad20:	ldr	x19, [sp, #104]
   1ad24:	str	x19, [sp, #80]
   1ad28:	ldr	x0, [sp, #88]
   1ad2c:	add	x0, x19, x0
   1ad30:	cmp	x19, x0
   1ad34:	b.cs	1ae38 <OnPrint@@Base+0xe14>  // b.hs, b.nlast
   1ad38:	stp	x21, x22, [sp, #16]
   1ad3c:	str	x27, [sp, #64]
   1ad40:	mov	w20, #0x0                   	// #0
   1ad44:	mov	x21, #0x0                   	// #0
   1ad48:	adrp	x22, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1ad4c:	add	x22, x22, #0x5f0
   1ad50:	mov	x23, #0x4                   	// #4
   1ad54:	add	x27, sp, #0x50
   1ad58:	b	1add0 <OnPrint@@Base+0xdac>
   1ad5c:	mov	x0, x27
   1ad60:	bl	1a6ac <OnPrint@@Base+0x688>
   1ad64:	mov	x21, x0
   1ad68:	ldr	x0, [sp, #80]
   1ad6c:	ldrb	w1, [x0]
   1ad70:	cmp	w1, #0x2f
   1ad74:	cset	w20, eq  // eq = none
   1ad78:	cmp	w20, #0x0
   1ad7c:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1ad80:	b.ls	1ada4 <OnPrint@@Base+0xd80>  // b.plast
   1ad84:	add	x0, x0, #0x1
   1ad88:	str	x0, [sp, #80]
   1ad8c:	ldrb	w1, [x0], #1
   1ad90:	cmp	w1, #0x2f
   1ad94:	cset	w20, eq  // eq = none
   1ad98:	cmp	w20, #0x0
   1ad9c:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1ada0:	b.hi	1ad88 <OnPrint@@Base+0xd64>  // b.pmore
   1ada4:	ldr	x3, [sp, #80]
   1ada8:	add	x19, x3, #0x1
   1adac:	str	x19, [sp, #80]
   1adb0:	ldrb	w0, [x3]
   1adb4:	cmp	w0, #0xa
   1adb8:	b.ne	1ada4 <OnPrint@@Base+0xd80>  // b.any
   1adbc:	ldr	x0, [sp, #104]
   1adc0:	ldr	x1, [sp, #88]
   1adc4:	add	x1, x0, x1
   1adc8:	cmp	x19, x1
   1adcc:	b.cs	1ae40 <OnPrint@@Base+0xe1c>  // b.hs, b.nlast
   1add0:	ldrb	w0, [x19]
   1add4:	bl	1a694 <OnPrint@@Base+0x670>
   1add8:	and	w0, w0, #0xff
   1addc:	cbnz	w0, 1ad5c <OnPrint@@Base+0xd38>
   1ade0:	mov	x2, x23
   1ade4:	mov	x1, x22
   1ade8:	mov	x0, x19
   1adec:	bl	146fc <__sanitizer_set_report_fd@@Base+0x18b8>
   1adf0:	cbnz	w0, 1ada4 <OnPrint@@Base+0xd80>
   1adf4:	ldr	x19, [sp, #80]
   1adf8:	ldrb	w0, [x19]
   1adfc:	bl	1a668 <OnPrint@@Base+0x644>
   1ae00:	and	w0, w0, #0xff
   1ae04:	cbnz	w0, 1ae14 <OnPrint@@Base+0xdf0>
   1ae08:	add	x19, x19, #0x1
   1ae0c:	str	x19, [sp, #80]
   1ae10:	b	1adf4 <OnPrint@@Base+0xdd0>
   1ae14:	mov	x0, x27
   1ae18:	bl	1a680 <OnPrint@@Base+0x65c>
   1ae1c:	mov	x4, x26
   1ae20:	mov	x3, x25
   1ae24:	mov	w2, w20
   1ae28:	lsl	x1, x0, #10
   1ae2c:	mov	x0, x21
   1ae30:	blr	x24
   1ae34:	b	1ada4 <OnPrint@@Base+0xd80>
   1ae38:	mov	x0, x19
   1ae3c:	b	1ae48 <OnPrint@@Base+0xe24>
   1ae40:	ldp	x21, x22, [sp, #16]
   1ae44:	ldr	x27, [sp, #64]
   1ae48:	ldr	x1, [sp, #96]
   1ae4c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1ae50:	ldp	x23, x24, [sp, #32]
   1ae54:	ldp	x25, x26, [sp, #48]
   1ae58:	ldr	x30, [sp, #72]
   1ae5c:	ldp	x19, x20, [sp], #112
   1ae60:	ret
   1ae64:	stp	x19, x30, [sp, #-16]!
   1ae68:	mov	x19, x0
   1ae6c:	mov	x5, #0x0                   	// #0
   1ae70:	mov	x4, #0x4000000             	// #67108864
   1ae74:	add	x3, x0, #0x10
   1ae78:	add	x2, x0, #0x8
   1ae7c:	mov	x1, x0
   1ae80:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1ae84:	add	x0, x0, #0x5f8
   1ae88:	bl	12634 <__sanitizer_cov_dump@@Base+0x2104>
   1ae8c:	and	w0, w0, #0xff
   1ae90:	cbnz	w0, 1aea0 <OnPrint@@Base+0xe7c>
   1ae94:	str	xzr, [x19]
   1ae98:	str	xzr, [x19, #8]
   1ae9c:	str	xzr, [x19, #16]
   1aea0:	ldp	x19, x30, [sp], #16
   1aea4:	ret
   1aea8:	stp	x19, x20, [sp, #-48]!
   1aeac:	stp	x21, x22, [sp, #16]
   1aeb0:	str	x30, [sp, #40]
   1aeb4:	mov	x19, x0
   1aeb8:	ldr	x22, [x0]
   1aebc:	ldr	x0, [x0, #16]
   1aec0:	add	x22, x22, x0
   1aec4:	ldr	x0, [x19, #24]
   1aec8:	cmp	x0, x22
   1aecc:	b.cc	1aee8 <OnPrint@@Base+0xec4>  // b.lo, b.ul, b.last
   1aed0:	mov	w22, #0x0                   	// #0
   1aed4:	mov	w0, w22
   1aed8:	ldp	x21, x22, [sp, #16]
   1aedc:	ldr	x30, [sp, #40]
   1aee0:	ldp	x19, x20, [sp], #48
   1aee4:	ret
   1aee8:	str	x23, [sp, #32]
   1aeec:	mov	x20, x1
   1aef0:	sub	x2, x22, x0
   1aef4:	mov	w1, #0xa                   	// #10
   1aef8:	bl	1453c <__sanitizer_set_report_fd@@Base+0x16f8>
   1aefc:	cmp	x0, #0x0
   1af00:	csel	x21, x0, x22, ne  // ne = any
   1af04:	add	x23, x19, #0x18
   1af08:	mov	x0, x23
   1af0c:	bl	1a6ac <OnPrint@@Base+0x688>
   1af10:	str	x0, [x20]
   1af14:	ldr	x0, [x19, #24]
   1af18:	add	x1, x0, #0x1
   1af1c:	str	x1, [x19, #24]
   1af20:	ldrb	w3, [x0]
   1af24:	cmp	x3, #0x2d
   1af28:	b.ne	1b0a8 <OnPrint@@Base+0x1084>  // b.any
   1af2c:	mov	x0, x23
   1af30:	bl	1a6ac <OnPrint@@Base+0x688>
   1af34:	str	x0, [x20, #8]
   1af38:	ldr	x0, [x19, #24]
   1af3c:	add	x1, x0, #0x1
   1af40:	str	x1, [x19, #24]
   1af44:	ldrb	w3, [x0]
   1af48:	cmp	x3, #0x20
   1af4c:	b.ne	1b0c4 <OnPrint@@Base+0x10a0>  // b.any
   1af50:	ldrb	w0, [x0, #1]
   1af54:	cmp	w0, #0x2d
   1af58:	mov	w1, #0x72                  	// #114
   1af5c:	ccmp	w0, w1, #0x4, ne  // ne = any
   1af60:	b.ne	1b0e0 <OnPrint@@Base+0x10bc>  // b.any
   1af64:	str	xzr, [x20, #40]
   1af68:	ldr	x0, [x19, #24]
   1af6c:	add	x1, x0, #0x1
   1af70:	str	x1, [x19, #24]
   1af74:	ldrb	w0, [x0]
   1af78:	cmp	w0, #0x72
   1af7c:	b.eq	1b100 <OnPrint@@Base+0x10dc>  // b.none
   1af80:	ldr	x0, [x19, #24]
   1af84:	ldrb	w1, [x0]
   1af88:	cmp	w1, #0x2d
   1af8c:	mov	w2, #0x77                  	// #119
   1af90:	ccmp	w1, w2, #0x4, ne  // ne = any
   1af94:	b.ne	1b110 <OnPrint@@Base+0x10ec>  // b.any
   1af98:	add	x1, x0, #0x1
   1af9c:	str	x1, [x19, #24]
   1afa0:	ldrb	w0, [x0]
   1afa4:	cmp	w0, #0x77
   1afa8:	b.eq	1b130 <OnPrint@@Base+0x110c>  // b.none
   1afac:	ldr	x0, [x19, #24]
   1afb0:	ldrb	w1, [x0]
   1afb4:	cmp	w1, #0x2d
   1afb8:	mov	w2, #0x78                  	// #120
   1afbc:	ccmp	w1, w2, #0x4, ne  // ne = any
   1afc0:	b.ne	1b140 <OnPrint@@Base+0x111c>  // b.any
   1afc4:	add	x1, x0, #0x1
   1afc8:	str	x1, [x19, #24]
   1afcc:	ldrb	w0, [x0]
   1afd0:	cmp	w0, #0x78
   1afd4:	b.eq	1b160 <OnPrint@@Base+0x113c>  // b.none
   1afd8:	ldr	x0, [x19, #24]
   1afdc:	ldrb	w1, [x0]
   1afe0:	cmp	w1, #0x73
   1afe4:	cset	w22, eq  // eq = none
   1afe8:	cmp	w1, #0x70
   1afec:	csinc	w22, w22, wzr, ne  // ne = any
   1aff0:	cbz	w22, 1b170 <OnPrint@@Base+0x114c>
   1aff4:	add	x1, x0, #0x1
   1aff8:	str	x1, [x19, #24]
   1affc:	ldrb	w0, [x0]
   1b000:	cmp	w0, #0x73
   1b004:	b.eq	1b190 <OnPrint@@Base+0x116c>  // b.none
   1b008:	ldr	x0, [x19, #24]
   1b00c:	add	x1, x0, #0x1
   1b010:	str	x1, [x19, #24]
   1b014:	ldrb	w3, [x0]
   1b018:	cmp	x3, #0x20
   1b01c:	b.ne	1b1a0 <OnPrint@@Base+0x117c>  // b.any
   1b020:	mov	x0, x23
   1b024:	bl	1a6ac <OnPrint@@Base+0x688>
   1b028:	str	x0, [x20, #16]
   1b02c:	ldr	x0, [x19, #24]
   1b030:	add	x1, x0, #0x1
   1b034:	str	x1, [x19, #24]
   1b038:	ldrb	w3, [x0]
   1b03c:	cmp	x3, #0x20
   1b040:	b.ne	1b1bc <OnPrint@@Base+0x1198>  // b.any
   1b044:	mov	x0, x23
   1b048:	bl	1a6ac <OnPrint@@Base+0x688>
   1b04c:	ldr	x0, [x19, #24]
   1b050:	add	x1, x0, #0x1
   1b054:	str	x1, [x19, #24]
   1b058:	ldrb	w3, [x0]
   1b05c:	cmp	x3, #0x3a
   1b060:	b.ne	1b1d8 <OnPrint@@Base+0x11b4>  // b.any
   1b064:	mov	x0, x23
   1b068:	bl	1a6ac <OnPrint@@Base+0x688>
   1b06c:	ldr	x0, [x19, #24]
   1b070:	add	x1, x0, #0x1
   1b074:	str	x1, [x19, #24]
   1b078:	ldrb	w3, [x0]
   1b07c:	cmp	x3, #0x20
   1b080:	b.ne	1b1f4 <OnPrint@@Base+0x11d0>  // b.any
   1b084:	ldr	x0, [x19, #24]
   1b088:	ldrb	w0, [x0]
   1b08c:	bl	1a668 <OnPrint@@Base+0x644>
   1b090:	and	w2, w0, #0xff
   1b094:	cbz	w2, 1b210 <OnPrint@@Base+0x11ec>
   1b098:	ldr	x1, [x19, #24]
   1b09c:	add	x1, x1, #0x1
   1b0a0:	str	x1, [x19, #24]
   1b0a4:	b	1b084 <OnPrint@@Base+0x1060>
   1b0a8:	mov	x4, #0x2d                  	// #45
   1b0ac:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b0b0:	add	x2, x2, #0x608
   1b0b4:	mov	w1, #0x28                  	// #40
   1b0b8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b0bc:	add	x0, x0, #0x628
   1b0c0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b0c4:	mov	x4, #0x20                  	// #32
   1b0c8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b0cc:	add	x2, x2, #0x670
   1b0d0:	mov	w1, #0x2a                  	// #42
   1b0d4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b0d8:	add	x0, x0, #0x628
   1b0dc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b0e0:	mov	x4, #0x0                   	// #0
   1b0e4:	mov	x3, #0x0                   	// #0
   1b0e8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b0ec:	add	x2, x2, #0x690
   1b0f0:	mov	w1, #0x2b                  	// #43
   1b0f4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b0f8:	add	x0, x0, #0x628
   1b0fc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b100:	ldr	x0, [x20, #40]
   1b104:	orr	x0, x0, #0x1
   1b108:	str	x0, [x20, #40]
   1b10c:	b	1af80 <OnPrint@@Base+0xf5c>
   1b110:	mov	x4, #0x0                   	// #0
   1b114:	mov	x3, #0x0                   	// #0
   1b118:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b11c:	add	x2, x2, #0x6c0
   1b120:	mov	w1, #0x2e                  	// #46
   1b124:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b128:	add	x0, x0, #0x628
   1b12c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b130:	ldr	x0, [x20, #40]
   1b134:	orr	x0, x0, #0x2
   1b138:	str	x0, [x20, #40]
   1b13c:	b	1afac <OnPrint@@Base+0xf88>
   1b140:	mov	x4, #0x0                   	// #0
   1b144:	mov	x3, #0x0                   	// #0
   1b148:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b14c:	add	x2, x2, #0x6f0
   1b150:	mov	w1, #0x30                  	// #48
   1b154:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b158:	add	x0, x0, #0x628
   1b15c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b160:	ldr	x0, [x20, #40]
   1b164:	orr	x0, x0, #0x4
   1b168:	str	x0, [x20, #40]
   1b16c:	b	1afd8 <OnPrint@@Base+0xfb4>
   1b170:	mov	x4, #0x0                   	// #0
   1b174:	mov	x3, #0x0                   	// #0
   1b178:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b17c:	add	x2, x2, #0x720
   1b180:	mov	w1, #0x32                  	// #50
   1b184:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b188:	add	x0, x0, #0x628
   1b18c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b190:	ldr	x0, [x20, #40]
   1b194:	orr	x0, x0, #0x8
   1b198:	str	x0, [x20, #40]
   1b19c:	b	1b008 <OnPrint@@Base+0xfe4>
   1b1a0:	mov	x4, #0x20                  	// #32
   1b1a4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b1a8:	add	x2, x2, #0x670
   1b1ac:	mov	w1, #0x34                  	// #52
   1b1b0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b1b4:	add	x0, x0, #0x628
   1b1b8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b1bc:	mov	x4, #0x20                  	// #32
   1b1c0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b1c4:	add	x2, x2, #0x670
   1b1c8:	mov	w1, #0x36                  	// #54
   1b1cc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b1d0:	add	x0, x0, #0x628
   1b1d4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b1d8:	mov	x4, #0x3a                  	// #58
   1b1dc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b1e0:	add	x2, x2, #0x750
   1b1e4:	mov	w1, #0x38                  	// #56
   1b1e8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b1ec:	add	x0, x0, #0x628
   1b1f0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b1f4:	mov	x4, #0x20                  	// #32
   1b1f8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b1fc:	add	x2, x2, #0x670
   1b200:	mov	w1, #0x3a                  	// #58
   1b204:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b208:	add	x0, x0, #0x628
   1b20c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b210:	ldr	x3, [x19, #24]
   1b214:	cmp	x3, x21
   1b218:	b.cs	1b23c <OnPrint@@Base+0x1218>  // b.hs, b.nlast
   1b21c:	ldrb	w0, [x3]
   1b220:	cmp	w0, #0x20
   1b224:	b.ne	1b23c <OnPrint@@Base+0x1218>  // b.any
   1b228:	add	x3, x3, #0x1
   1b22c:	str	x3, [x19, #24]
   1b230:	cmp	x3, x21
   1b234:	b.ne	1b21c <OnPrint@@Base+0x11f8>  // b.any
   1b238:	mov	x3, x21
   1b23c:	ldr	x0, [x20, #24]
   1b240:	cbz	x0, 1b26c <OnPrint@@Base+0x1248>
   1b244:	ldr	x23, [x20, #32]
   1b248:	sub	x23, x23, #0x1
   1b24c:	sub	x1, x21, x3
   1b250:	cmp	x23, x1
   1b254:	csel	x23, x23, x1, ls  // ls = plast
   1b258:	mov	x2, x23
   1b25c:	mov	x1, x3
   1b260:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
   1b264:	ldr	x0, [x20, #24]
   1b268:	strb	wzr, [x0, x23]
   1b26c:	add	x21, x21, #0x1
   1b270:	str	x21, [x19, #24]
   1b274:	ldr	x23, [sp, #32]
   1b278:	b	1aed4 <OnPrint@@Base+0xeb0>
   1b27c:	ldr	w2, [x0]
   1b280:	ldr	w0, [x1]
   1b284:	cmp	w2, w0
   1b288:	cset	w0, cc  // cc = lo, ul, last
   1b28c:	ret
   1b290:	ldr	x0, [x0]
   1b294:	ldr	w0, [x0, #8]
   1b298:	ret
   1b29c:	ldr	x0, [x0]
   1b2a0:	ldr	w0, [x0, #12]
   1b2a4:	and	w0, w0, #0xfffff
   1b2a8:	ret
   1b2ac:	ldr	x1, [x0]
   1b2b0:	add	x1, x1, #0xc
   1b2b4:	ldxr	w0, [x1]
   1b2b8:	add	w2, w0, #0x1
   1b2bc:	stlxr	w3, w2, [x1]
   1b2c0:	cbnz	w3, 1b2b4 <OnPrint@@Base+0x1290>
   1b2c4:	dmb	ish
   1b2c8:	and	w0, w0, #0xfffff
   1b2cc:	add	w0, w0, #0x1
   1b2d0:	mov	w1, #0xfffff               	// #1048575
   1b2d4:	cmp	w0, w1
   1b2d8:	b.hi	1b2e0 <OnPrint@@Base+0x12bc>  // b.pmore
   1b2dc:	ret
   1b2e0:	str	x30, [sp, #-16]!
   1b2e4:	mov	x4, #0x100000              	// #1048576
   1b2e8:	mov	x3, x4
   1b2ec:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b2f0:	add	x2, x2, #0x770
   1b2f4:	mov	w1, #0x61                  	// #97
   1b2f8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b2fc:	add	x0, x0, #0x7a0
   1b300:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b304:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1b308:	add	x0, x0, #0x270
   1b30c:	ret
   1b310:	mov	w1, #0x0                   	// #0
   1b314:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b318:	add	x0, x0, #0xe70
   1b31c:	sxtw	x3, w1
   1b320:	ldr	x2, [x0, x3, lsl #3]
   1b324:	and	x2, x2, #0xfffffffffffffffe
   1b328:	dmb	ish
   1b32c:	str	x2, [x0, x3, lsl #3]
   1b330:	add	w1, w1, #0x1
   1b334:	cmp	w1, #0x100, lsl #12
   1b338:	b.ne	1b31c <OnPrint@@Base+0x12f8>  // b.any
   1b33c:	ret
   1b340:	stp	x19, x20, [sp, #-80]!
   1b344:	stp	x21, x22, [sp, #16]
   1b348:	str	x30, [sp, #56]
   1b34c:	ldr	x21, [x0, #16]
   1b350:	cbnz	x21, 1b36c <OnPrint@@Base+0x1348>
   1b354:	mov	x0, #0x0                   	// #0
   1b358:	mov	x1, #0x0                   	// #0
   1b35c:	ldp	x21, x22, [sp, #16]
   1b360:	ldr	x30, [sp, #56]
   1b364:	ldp	x19, x20, [sp], #80
   1b368:	ret
   1b36c:	stp	x23, x24, [sp, #32]
   1b370:	str	x25, [sp, #48]
   1b374:	mov	x19, x0
   1b378:	mov	w24, w1
   1b37c:	stp	xzr, xzr, [sp, #64]
   1b380:	str	w1, [sp, #64]
   1b384:	mov	x23, x21
   1b388:	mov	x22, #0x0                   	// #0
   1b38c:	add	x25, sp, #0x40
   1b390:	b	1b398 <OnPrint@@Base+0x1374>
   1b394:	mov	x23, x20
   1b398:	cmp	x23, x22
   1b39c:	b.ls	1b3f0 <OnPrint@@Base+0x13cc>  // b.plast
   1b3a0:	add	x0, x23, x22
   1b3a4:	lsr	x20, x0, #1
   1b3a8:	cmp	x21, x0, lsr #1
   1b3ac:	b.ls	1b3d0 <OnPrint@@Base+0x13ac>  // b.plast
   1b3b0:	ldr	x0, [x19]
   1b3b4:	mov	x1, x25
   1b3b8:	add	x0, x0, x20, lsl #4
   1b3bc:	bl	1b27c <OnPrint@@Base+0x1258>
   1b3c0:	and	w0, w0, #0xff
   1b3c4:	cbz	w0, 1b394 <OnPrint@@Base+0x1370>
   1b3c8:	add	x22, x20, #0x1
   1b3cc:	b	1b398 <OnPrint@@Base+0x1374>
   1b3d0:	mov	x4, x21
   1b3d4:	mov	x3, x20
   1b3d8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b3dc:	add	x2, x2, #0x368
   1b3e0:	mov	w1, #0x1ba                 	// #442
   1b3e4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b3e8:	add	x0, x0, #0x380
   1b3ec:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b3f0:	cmp	x21, x22
   1b3f4:	b.cc	1b414 <OnPrint@@Base+0x13f0>  // b.lo, b.ul, b.last
   1b3f8:	b.eq	1b428 <OnPrint@@Base+0x1404>  // b.none
   1b3fc:	lsl	x22, x22, #4
   1b400:	ldr	x0, [x19]
   1b404:	add	x1, x0, x22
   1b408:	ldr	w0, [x0, x22]
   1b40c:	cmp	w0, w24
   1b410:	b.eq	1b448 <OnPrint@@Base+0x1424>  // b.none
   1b414:	mov	x0, #0x0                   	// #0
   1b418:	mov	x1, #0x0                   	// #0
   1b41c:	ldp	x23, x24, [sp, #32]
   1b420:	ldr	x25, [sp, #48]
   1b424:	b	1b35c <OnPrint@@Base+0x1338>
   1b428:	mov	x4, x22
   1b42c:	mov	x3, x22
   1b430:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b434:	add	x2, x2, #0x368
   1b438:	mov	w1, #0x1b6                 	// #438
   1b43c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b440:	add	x0, x0, #0x380
   1b444:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b448:	ldr	x2, [x1, #8]
   1b44c:	add	x0, x2, #0x18
   1b450:	ldr	w3, [x2, #16]
   1b454:	mov	x1, #0x0                   	// #0
   1b458:	bfxil	x1, x3, #0, #32
   1b45c:	ldr	w2, [x2, #20]
   1b460:	bfi	x1, x2, #32, #32
   1b464:	ldp	x23, x24, [sp, #32]
   1b468:	ldr	x25, [sp, #48]
   1b46c:	b	1b35c <OnPrint@@Base+0x1338>
   1b470:	str	x30, [sp, #-16]!
   1b474:	mov	w1, w0
   1b478:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b47c:	add	x0, x0, #0xe70
   1b480:	bl	1b8a4 <OnPrint@@Base+0x1880>
   1b484:	ldr	x30, [sp], #16
   1b488:	ret
   1b48c:	stp	x19, x20, [sp, #-96]!
   1b490:	stp	x21, x22, [sp, #16]
   1b494:	stp	x23, x24, [sp, #32]
   1b498:	stp	x25, x26, [sp, #48]
   1b49c:	stp	x27, x30, [sp, #64]
   1b4a0:	mov	x19, x0
   1b4a4:	str	xzr, [x0, #8]
   1b4a8:	str	xzr, [x0, #16]
   1b4ac:	str	xzr, [x0]
   1b4b0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1b4b4:	ldr	x0, [x0, #4016]
   1b4b8:	ldr	x0, [x0]
   1b4bc:	cbz	x0, 1b570 <OnPrint@@Base+0x154c>
   1b4c0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1b4c4:	ldr	x0, [x0, #4016]
   1b4c8:	ldr	x0, [x0]
   1b4cc:	sub	x1, x0, #0x1
   1b4d0:	tst	x1, x0
   1b4d4:	b.ne	1b584 <OnPrint@@Base+0x1560>  // b.any
   1b4d8:	add	x20, x0, #0xf
   1b4dc:	neg	x0, x0
   1b4e0:	and	x20, x20, x0
   1b4e4:	mov	w2, #0x0                   	// #0
   1b4e8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b4ec:	add	x1, x1, #0x350
   1b4f0:	mov	x0, x20
   1b4f4:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1b4f8:	mov	x21, x0
   1b4fc:	ldr	x2, [x19, #16]
   1b500:	lsl	x2, x2, #4
   1b504:	ldr	x1, [x19]
   1b508:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1b50c:	ldr	x1, [x19, #8]
   1b510:	ldr	x0, [x19]
   1b514:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1b518:	str	x21, [x19]
   1b51c:	str	x20, [x19, #8]
   1b520:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b524:	add	x0, x0, #0xe70
   1b528:	add	x0, x0, #0x800, lsl #12
   1b52c:	ldr	x4, [x0, #1024]
   1b530:	add	x4, x4, #0x64
   1b534:	cmp	x4, x20, lsr #4
   1b538:	b.hi	1b594 <OnPrint@@Base+0x1570>  // b.pmore
   1b53c:	mov	w22, #0x0                   	// #0
   1b540:	adrp	x24, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1b544:	ldr	x26, [x24, #4016]
   1b548:	add	x23, sp, #0x50
   1b54c:	sxtw	x1, w22
   1b550:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b554:	add	x0, x0, #0xe70
   1b558:	ldr	x20, [x0, x1, lsl #3]
   1b55c:	ands	x20, x20, #0xfffffffffffffffe
   1b560:	b.eq	1b7e0 <OnPrint@@Base+0x17bc>  // b.none
   1b564:	adrp	x25, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b568:	add	x25, x25, #0x350
   1b56c:	b	1b74c <OnPrint@@Base+0x1728>
   1b570:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1b574:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1b578:	ldr	x1, [x1, #4016]
   1b57c:	str	x0, [x1]
   1b580:	b	1b4c0 <OnPrint@@Base+0x149c>
   1b584:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b588:	add	x0, x0, #0x338
   1b58c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1b590:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b594:	ldr	x3, [x19, #16]
   1b598:	cmp	x4, x3
   1b59c:	b.cc	1b618 <OnPrint@@Base+0x15f4>  // b.lo, b.ul, b.last
   1b5a0:	lsl	x20, x4, #4
   1b5a4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1b5a8:	ldr	x0, [x0, #4016]
   1b5ac:	ldr	x0, [x0]
   1b5b0:	cbz	x0, 1b630 <OnPrint@@Base+0x160c>
   1b5b4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1b5b8:	ldr	x0, [x0, #4016]
   1b5bc:	ldr	x0, [x0]
   1b5c0:	sub	x1, x0, #0x1
   1b5c4:	tst	x0, x1
   1b5c8:	b.ne	1b644 <OnPrint@@Base+0x1620>  // b.any
   1b5cc:	add	x20, x20, x1
   1b5d0:	neg	x0, x0
   1b5d4:	and	x20, x20, x0
   1b5d8:	mov	w2, #0x0                   	// #0
   1b5dc:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b5e0:	add	x1, x1, #0x350
   1b5e4:	mov	x0, x20
   1b5e8:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1b5ec:	mov	x21, x0
   1b5f0:	ldr	x2, [x19, #16]
   1b5f4:	lsl	x2, x2, #4
   1b5f8:	ldr	x1, [x19]
   1b5fc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1b600:	ldr	x1, [x19, #8]
   1b604:	ldr	x0, [x19]
   1b608:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1b60c:	str	x21, [x19]
   1b610:	str	x20, [x19, #8]
   1b614:	b	1b53c <OnPrint@@Base+0x1518>
   1b618:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1b61c:	add	x2, x2, #0x6a8
   1b620:	mov	w1, #0x1fd                 	// #509
   1b624:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b628:	add	x0, x0, #0x380
   1b62c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b630:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1b634:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1b638:	ldr	x1, [x1, #4016]
   1b63c:	str	x0, [x1]
   1b640:	b	1b5b4 <OnPrint@@Base+0x1590>
   1b644:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b648:	add	x0, x0, #0x338
   1b64c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1b650:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b654:	mov	x3, x0
   1b658:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1b65c:	add	x2, x2, #0x630
   1b660:	mov	w1, #0x1be                 	// #446
   1b664:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b668:	add	x0, x0, #0x380
   1b66c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b670:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1b674:	add	x2, x2, #0x660
   1b678:	mov	w1, #0x17b                 	// #379
   1b67c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b680:	add	x0, x0, #0x380
   1b684:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b688:	mov	x4, x1
   1b68c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1b690:	add	x2, x2, #0x688
   1b694:	mov	w1, #0x17c                 	// #380
   1b698:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b69c:	add	x0, x0, #0x380
   1b6a0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b6a4:	mov	x3, x0
   1b6a8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1b6ac:	add	x2, x2, #0x6a8
   1b6b0:	mov	w1, #0x1fd                 	// #509
   1b6b4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b6b8:	add	x0, x0, #0x380
   1b6bc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b6c0:	lsl	x21, x3, #4
   1b6c4:	ldr	x0, [x26]
   1b6c8:	cbz	x0, 1b7c0 <OnPrint@@Base+0x179c>
   1b6cc:	ldr	x0, [x24, #4016]
   1b6d0:	ldr	x0, [x0]
   1b6d4:	sub	x1, x0, #0x1
   1b6d8:	tst	x0, x1
   1b6dc:	b.ne	1b7d0 <OnPrint@@Base+0x17ac>  // b.any
   1b6e0:	add	x21, x21, x1
   1b6e4:	neg	x0, x0
   1b6e8:	and	x21, x21, x0
   1b6ec:	mov	w2, #0x0                   	// #0
   1b6f0:	mov	x1, x25
   1b6f4:	mov	x0, x21
   1b6f8:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1b6fc:	mov	x27, x0
   1b700:	ldr	x2, [x19, #16]
   1b704:	lsl	x2, x2, #4
   1b708:	ldr	x1, [x19]
   1b70c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1b710:	ldr	x1, [x19, #8]
   1b714:	ldr	x0, [x19]
   1b718:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1b71c:	str	x27, [x19]
   1b720:	str	x21, [x19, #8]
   1b724:	ldr	x3, [x19]
   1b728:	ldr	x0, [x19, #16]
   1b72c:	add	x1, x0, #0x1
   1b730:	str	x1, [x19, #16]
   1b734:	mov	x2, #0x10                  	// #16
   1b738:	mov	x1, x23
   1b73c:	add	x0, x3, x0, lsl #4
   1b740:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1b744:	ldr	x20, [x20]
   1b748:	cbz	x20, 1b7e0 <OnPrint@@Base+0x17bc>
   1b74c:	ldr	w0, [x20, #8]
   1b750:	str	w0, [sp, #80]
   1b754:	str	x20, [sp, #88]
   1b758:	ldr	x0, [x19, #16]
   1b75c:	ldr	x1, [x19, #8]
   1b760:	lsr	x4, x1, #4
   1b764:	cmp	x0, x1, lsr #4
   1b768:	b.hi	1b654 <OnPrint@@Base+0x1630>  // b.pmore
   1b76c:	cmp	x0, x4
   1b770:	b.ne	1b724 <OnPrint@@Base+0x1700>  // b.any
   1b774:	add	x3, x0, #0x1
   1b778:	tst	x0, x3
   1b77c:	b.eq	1b6c0 <OnPrint@@Base+0x169c>  // b.none
   1b780:	clz	x2, x3
   1b784:	mov	w1, #0x3f                  	// #63
   1b788:	sub	w2, w1, w2
   1b78c:	add	w1, w2, #0x1
   1b790:	mov	x4, #0x1                   	// #1
   1b794:	lsl	x4, x4, x1
   1b798:	cmp	x3, x4
   1b79c:	b.cs	1b670 <OnPrint@@Base+0x164c>  // b.hs, b.nlast
   1b7a0:	mov	x1, #0x1                   	// #1
   1b7a4:	lsl	x1, x1, x2
   1b7a8:	cmp	x3, x1
   1b7ac:	b.ls	1b688 <OnPrint@@Base+0x1664>  // b.plast
   1b7b0:	cmp	x0, x4
   1b7b4:	b.hi	1b6a4 <OnPrint@@Base+0x1680>  // b.pmore
   1b7b8:	mov	x3, x4
   1b7bc:	b	1b6c0 <OnPrint@@Base+0x169c>
   1b7c0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1b7c4:	ldr	x1, [x24, #4016]
   1b7c8:	str	x0, [x1]
   1b7cc:	b	1b6cc <OnPrint@@Base+0x16a8>
   1b7d0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1b7d4:	add	x0, x0, #0x338
   1b7d8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1b7dc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b7e0:	add	w22, w22, #0x1
   1b7e4:	cmp	w22, #0x100, lsl #12
   1b7e8:	b.ne	1b54c <OnPrint@@Base+0x1528>  // b.any
   1b7ec:	adrp	x2, 1b000 <OnPrint@@Base+0xfdc>
   1b7f0:	add	x2, x2, #0x27c
   1b7f4:	ldr	x1, [x19, #16]
   1b7f8:	ldr	x0, [x19]
   1b7fc:	bl	1b974 <OnPrint@@Base+0x1950>
   1b800:	ldp	x21, x22, [sp, #16]
   1b804:	ldp	x23, x24, [sp, #32]
   1b808:	ldp	x25, x26, [sp, #48]
   1b80c:	ldp	x27, x30, [sp, #64]
   1b810:	ldp	x19, x20, [sp], #96
   1b814:	ret
   1b818:	stp	x19, x20, [sp, #-32]!
   1b81c:	str	x30, [sp, #16]
   1b820:	adrp	x19, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b824:	add	x19, x19, #0xe70
   1b828:	add	x20, x19, #0x800, lsl #12
   1b82c:	mov	x0, x19
   1b830:	bl	1bb88 <OnPrint@@Base+0x1b64>
   1b834:	add	x19, x19, #0x8
   1b838:	cmp	x19, x20
   1b83c:	b.ne	1b82c <OnPrint@@Base+0x1808>  // b.any
   1b840:	ldr	x30, [sp, #16]
   1b844:	ldp	x19, x20, [sp], #32
   1b848:	ret
   1b84c:	str	x30, [sp, #-16]!
   1b850:	mov	x2, x1
   1b854:	mov	x1, x0
   1b858:	mov	x3, #0x0                   	// #0
   1b85c:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b860:	add	x0, x0, #0xe70
   1b864:	bl	1bbe8 <OnPrint@@Base+0x1bc4>
   1b868:	cbz	x0, 1b878 <OnPrint@@Base+0x1854>
   1b86c:	ldr	w0, [x0, #8]
   1b870:	ldr	x30, [sp], #16
   1b874:	ret
   1b878:	mov	w0, #0x0                   	// #0
   1b87c:	b	1b870 <OnPrint@@Base+0x184c>
   1b880:	str	x30, [sp, #-16]!
   1b884:	mov	x2, x1
   1b888:	mov	x1, x0
   1b88c:	mov	x3, #0x0                   	// #0
   1b890:	adrp	x0, 1af000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b894:	add	x0, x0, #0xe70
   1b898:	bl	1bbe8 <OnPrint@@Base+0x1bc4>
   1b89c:	ldr	x30, [sp], #16
   1b8a0:	ret
   1b8a4:	cbnz	w1, 1b8b4 <OnPrint@@Base+0x1890>
   1b8a8:	mov	x0, #0x0                   	// #0
   1b8ac:	mov	x1, #0x0                   	// #0
   1b8b0:	ret
   1b8b4:	str	x30, [sp, #-16]!
   1b8b8:	mov	w4, w1
   1b8bc:	and	x3, x1, #0x7fffffff
   1b8c0:	cmp	x3, w1, uxtw
   1b8c4:	b.ne	1b930 <OnPrint@@Base+0x190c>  // b.any
   1b8c8:	lsr	w2, w1, #23
   1b8cc:	lsl	x3, x2, #12
   1b8d0:	mov	x4, #0xfffff               	// #1048575
   1b8d4:	add	x5, x3, #0xfff
   1b8d8:	cmp	x4, x2, lsl #12
   1b8dc:	b.cc	1b914 <OnPrint@@Base+0x18f0>  // b.lo, b.ul, b.last
   1b8e0:	ldr	x2, [x0, x3, lsl #3]
   1b8e4:	ands	x2, x2, #0xfffffffffffffffe
   1b8e8:	b.eq	1b900 <OnPrint@@Base+0x18dc>  // b.none
   1b8ec:	ldr	w4, [x2, #8]
   1b8f0:	cmp	w4, w1
   1b8f4:	b.eq	1b948 <OnPrint@@Base+0x1924>  // b.none
   1b8f8:	ldr	x2, [x2]
   1b8fc:	cbnz	x2, 1b8ec <OnPrint@@Base+0x18c8>
   1b900:	cmp	x5, x3
   1b904:	b.eq	1b968 <OnPrint@@Base+0x1944>  // b.none
   1b908:	add	x3, x3, #0x1
   1b90c:	cmp	x3, #0x100, lsl #12
   1b910:	b.ne	1b8e0 <OnPrint@@Base+0x18bc>  // b.any
   1b914:	mov	x4, #0x100000              	// #1048576
   1b918:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b91c:	add	x2, x2, #0x860
   1b920:	mov	w1, #0x91                  	// #145
   1b924:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b928:	add	x0, x0, #0x818
   1b92c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b930:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b934:	add	x2, x2, #0x7e8
   1b938:	mov	w1, #0x8c                  	// #140
   1b93c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1b940:	add	x0, x0, #0x818
   1b944:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b948:	add	x0, x2, #0x18
   1b94c:	ldr	w3, [x2, #16]
   1b950:	mov	x1, #0x0                   	// #0
   1b954:	bfxil	x1, x3, #0, #32
   1b958:	ldr	w2, [x2, #20]
   1b95c:	bfi	x1, x2, #32, #32
   1b960:	ldr	x30, [sp], #16
   1b964:	ret
   1b968:	mov	x0, #0x0                   	// #0
   1b96c:	mov	x1, #0x0                   	// #0
   1b970:	b	1b960 <OnPrint@@Base+0x193c>
   1b974:	cmp	x1, #0x1
   1b978:	b.ls	1bb1c <OnPrint@@Base+0x1af8>  // b.plast
   1b97c:	stp	x19, x20, [sp, #-96]!
   1b980:	stp	x21, x22, [sp, #16]
   1b984:	stp	x23, x24, [sp, #32]
   1b988:	stp	x25, x26, [sp, #48]
   1b98c:	stp	x27, x28, [sp, #64]
   1b990:	str	x30, [sp, #80]
   1b994:	mov	x19, x0
   1b998:	mov	x27, x1
   1b99c:	mov	x26, x2
   1b9a0:	mov	x28, #0x1                   	// #1
   1b9a4:	b	1b9b8 <OnPrint@@Base+0x1994>
   1b9a8:	add	x0, x28, #0x1
   1b9ac:	cmp	x27, x0
   1b9b0:	b.ls	1ba14 <OnPrint@@Base+0x19f0>  // b.plast
   1b9b4:	add	x28, x28, #0x1
   1b9b8:	cbz	x28, 1b9b4 <OnPrint@@Base+0x1990>
   1b9bc:	mov	x21, x28
   1b9c0:	sub	x24, x21, #0x1
   1b9c4:	mov	x20, x21
   1b9c8:	lsr	x21, x24, #1
   1b9cc:	lsl	x25, x21, #4
   1b9d0:	add	x22, x19, x25
   1b9d4:	lsl	x20, x20, #4
   1b9d8:	add	x23, x19, x20
   1b9dc:	mov	x1, x23
   1b9e0:	mov	x0, x22
   1b9e4:	blr	x26
   1b9e8:	and	w0, w0, #0xff
   1b9ec:	cbz	w0, 1b9a8 <OnPrint@@Base+0x1984>
   1b9f0:	ldr	w1, [x19, x20]
   1b9f4:	ldr	x0, [x23, #8]
   1b9f8:	ldp	x2, x3, [x22]
   1b9fc:	stp	x2, x3, [x23]
   1ba00:	str	w1, [x19, x25]
   1ba04:	str	x0, [x22, #8]
   1ba08:	cmp	x24, #0x1
   1ba0c:	b.hi	1b9c0 <OnPrint@@Base+0x199c>  // b.pmore
   1ba10:	b	1b9a8 <OnPrint@@Base+0x1984>
   1ba14:	sub	x23, x27, #0x1
   1ba18:	add	x27, x19, x27, lsl #4
   1ba1c:	mov	x24, #0x0                   	// #0
   1ba20:	b	1ba34 <OnPrint@@Base+0x1a10>
   1ba24:	cmp	x23, #0x1
   1ba28:	b.eq	1bb00 <OnPrint@@Base+0x1adc>  // b.none
   1ba2c:	sub	x27, x27, #0x10
   1ba30:	sub	x23, x23, #0x1
   1ba34:	ldr	w1, [x19]
   1ba38:	ldr	x0, [x19, #8]
   1ba3c:	ldp	x2, x3, [x27, #-16]
   1ba40:	stp	x2, x3, [x19]
   1ba44:	stur	w1, [x27, #-16]
   1ba48:	stur	x0, [x27, #-8]
   1ba4c:	cbz	x23, 1ba2c <OnPrint@@Base+0x1a08>
   1ba50:	mov	x20, x24
   1ba54:	b	1bab4 <OnPrint@@Base+0x1a90>
   1ba58:	cmp	x23, x22
   1ba5c:	b.ls	1ba24 <OnPrint@@Base+0x1a00>  // b.plast
   1ba60:	add	x1, x19, x25, lsl #5
   1ba64:	add	x0, x19, x20, lsl #4
   1ba68:	blr	x26
   1ba6c:	and	w0, w0, #0xff
   1ba70:	cbz	w0, 1ba24 <OnPrint@@Base+0x1a00>
   1ba74:	mov	x21, x22
   1ba78:	cmp	x21, x20
   1ba7c:	b.eq	1ba24 <OnPrint@@Base+0x1a00>  // b.none
   1ba80:	lsl	x20, x20, #4
   1ba84:	add	x2, x19, x20
   1ba88:	lsl	x1, x21, #4
   1ba8c:	add	x0, x19, x1
   1ba90:	ldr	w6, [x19, x20]
   1ba94:	ldr	x3, [x2, #8]
   1ba98:	ldp	x4, x5, [x0]
   1ba9c:	stp	x4, x5, [x2]
   1baa0:	str	w6, [x19, x1]
   1baa4:	str	x3, [x0, #8]
   1baa8:	cmp	x21, x23
   1baac:	b.cs	1ba24 <OnPrint@@Base+0x1a00>  // b.hs, b.nlast
   1bab0:	mov	x20, x21
   1bab4:	lsl	x0, x20, #1
   1bab8:	add	x21, x0, #0x1
   1babc:	add	x25, x20, #0x1
   1bac0:	add	x22, x0, #0x2
   1bac4:	cmp	x23, x21
   1bac8:	b.ls	1ba58 <OnPrint@@Base+0x1a34>  // b.plast
   1bacc:	add	x1, x19, x21, lsl #4
   1bad0:	add	x0, x19, x20, lsl #4
   1bad4:	blr	x26
   1bad8:	and	w0, w0, #0xff
   1badc:	cbz	w0, 1ba58 <OnPrint@@Base+0x1a34>
   1bae0:	cmp	x23, x22
   1bae4:	b.ls	1ba78 <OnPrint@@Base+0x1a54>  // b.plast
   1bae8:	add	x1, x19, x25, lsl #5
   1baec:	add	x0, x19, x21, lsl #4
   1baf0:	blr	x26
   1baf4:	and	w0, w0, #0xff
   1baf8:	cbz	w0, 1ba78 <OnPrint@@Base+0x1a54>
   1bafc:	b	1ba74 <OnPrint@@Base+0x1a50>
   1bb00:	ldp	x21, x22, [sp, #16]
   1bb04:	ldp	x23, x24, [sp, #32]
   1bb08:	ldp	x25, x26, [sp, #48]
   1bb0c:	ldp	x27, x28, [sp, #64]
   1bb10:	ldr	x30, [sp, #80]
   1bb14:	ldp	x19, x20, [sp], #96
   1bb18:	ret
   1bb1c:	ret
   1bb20:	cbz	x0, 1bb84 <OnPrint@@Base+0x1b60>
   1bb24:	mov	x8, x2
   1bb28:	mov	x5, x1
   1bb2c:	and	w7, w3, #0xfff00000
   1bb30:	b	1bb3c <OnPrint@@Base+0x1b18>
   1bb34:	ldr	x0, [x0]
   1bb38:	cbz	x0, 1bb84 <OnPrint@@Base+0x1b60>
   1bb3c:	ldr	w1, [x0, #12]
   1bb40:	and	w1, w1, #0xfff00000
   1bb44:	cmp	w1, w7
   1bb48:	b.ne	1bb34 <OnPrint@@Base+0x1b10>  // b.any
   1bb4c:	ldr	x1, [x0, #16]
   1bb50:	cmp	x8, x1
   1bb54:	b.ne	1bb34 <OnPrint@@Base+0x1b10>  // b.any
   1bb58:	ldr	w4, [x0, #16]
   1bb5c:	cbz	x4, 1bb84 <OnPrint@@Base+0x1b60>
   1bb60:	mov	x1, #0x0                   	// #0
   1bb64:	add	x6, x0, #0x18
   1bb68:	ldr	x3, [x6, x1, lsl #3]
   1bb6c:	ldr	x2, [x5, x1, lsl #3]
   1bb70:	cmp	x3, x2
   1bb74:	b.ne	1bb34 <OnPrint@@Base+0x1b10>  // b.any
   1bb78:	add	x1, x1, #0x1
   1bb7c:	cmp	x1, x4
   1bb80:	b.ne	1bb68 <OnPrint@@Base+0x1b44>  // b.any
   1bb84:	ret
   1bb88:	stp	x19, x20, [sp, #-32]!
   1bb8c:	str	x30, [sp, #16]
   1bb90:	mov	x20, x0
   1bb94:	mov	w19, #0x0                   	// #0
   1bb98:	b	1bba8 <OnPrint@@Base+0x1b84>
   1bb9c:	cmp	w19, #0x9
   1bba0:	b.gt	1bbe0 <OnPrint@@Base+0x1bbc>
   1bba4:	add	w19, w19, #0x1
   1bba8:	ldr	x1, [x20]
   1bbac:	tbnz	w1, #0, 1bb9c <OnPrint@@Base+0x1b78>
   1bbb0:	orr	x2, x1, #0x1
   1bbb4:	ldxr	x0, [x20]
   1bbb8:	cmp	x0, x1
   1bbbc:	b.ne	1bbc8 <OnPrint@@Base+0x1ba4>  // b.any
   1bbc0:	stlxr	w3, x2, [x20]
   1bbc4:	cbnz	w3, 1bbb4 <OnPrint@@Base+0x1b90>
   1bbc8:	dmb	ish
   1bbcc:	cmp	x1, x0
   1bbd0:	b.ne	1bb9c <OnPrint@@Base+0x1b78>  // b.any
   1bbd4:	ldr	x30, [sp, #16]
   1bbd8:	ldp	x19, x20, [sp], #32
   1bbdc:	ret
   1bbe0:	bl	156c4 <__sanitizer_set_report_fd@@Base+0x2880>
   1bbe4:	b	1bba4 <OnPrint@@Base+0x1b80>
   1bbe8:	stp	x19, x20, [sp, #-144]!
   1bbec:	stp	x21, x22, [sp, #16]
   1bbf0:	stp	x23, x24, [sp, #32]
   1bbf4:	str	x30, [sp, #80]
   1bbf8:	mov	x23, x0
   1bbfc:	mov	x21, x2
   1bc00:	mov	x22, x3
   1bc04:	mov	x20, x1
   1bc08:	mov	w24, w2
   1bc0c:	cbz	x3, 1bc14 <OnPrint@@Base+0x1bf0>
   1bc10:	strb	wzr, [x3]
   1bc14:	cbz	w24, 1bcb0 <OnPrint@@Base+0x1c8c>
   1bc18:	cbz	x20, 1bcb0 <OnPrint@@Base+0x1c8c>
   1bc1c:	stp	x25, x26, [sp, #48]
   1bc20:	stp	x27, x28, [sp, #64]
   1bc24:	mov	w0, #0xb28c                	// #45708
   1bc28:	movk	w0, #0x9747, lsl #16
   1bc2c:	eor	w19, w0, w24, lsl #3
   1bc30:	mov	w25, w24
   1bc34:	mov	x1, #0x0                   	// #0
   1bc38:	mov	w2, #0xe995                	// #59797
   1bc3c:	movk	w2, #0x5bd1, lsl #16
   1bc40:	ldr	x0, [x20, x1, lsl #3]
   1bc44:	mul	w0, w2, w0
   1bc48:	eor	w0, w0, w0, lsr #24
   1bc4c:	mul	w19, w19, w2
   1bc50:	mul	w0, w0, w2
   1bc54:	eor	w19, w0, w19
   1bc58:	add	x1, x1, #0x1
   1bc5c:	cmp	x25, x1
   1bc60:	b.ne	1bc40 <OnPrint@@Base+0x1c1c>  // b.any
   1bc64:	eor	w19, w19, w19, lsr #13
   1bc68:	mov	w0, #0xe995                	// #59797
   1bc6c:	movk	w0, #0x5bd1, lsl #16
   1bc70:	mul	w19, w19, w0
   1bc74:	eor	w19, w19, w19, lsr #15
   1bc78:	and	x26, x19, #0xfffff
   1bc7c:	add	x28, x23, x26, lsl #3
   1bc80:	ldr	x27, [x23, x26, lsl #3]
   1bc84:	and	x27, x27, #0xfffffffffffffffe
   1bc88:	bfxil	x21, x24, #0, #32
   1bc8c:	mov	w3, w19
   1bc90:	mov	x1, x20
   1bc94:	mov	x2, x21
   1bc98:	mov	x0, x27
   1bc9c:	bl	1bb20 <OnPrint@@Base+0x1afc>
   1bca0:	cbz	x0, 1bcc8 <OnPrint@@Base+0x1ca4>
   1bca4:	ldp	x25, x26, [sp, #48]
   1bca8:	ldp	x27, x28, [sp, #64]
   1bcac:	b	1bcb4 <OnPrint@@Base+0x1c90>
   1bcb0:	mov	x0, #0x0                   	// #0
   1bcb4:	ldp	x21, x22, [sp, #16]
   1bcb8:	ldp	x23, x24, [sp, #32]
   1bcbc:	ldr	x30, [sp, #80]
   1bcc0:	ldp	x19, x20, [sp], #144
   1bcc4:	ret
   1bcc8:	mov	x0, x28
   1bccc:	bl	1bb88 <OnPrint@@Base+0x1b64>
   1bcd0:	str	x0, [sp, #112]
   1bcd4:	cmp	x27, x0
   1bcd8:	b.eq	1bd08 <OnPrint@@Base+0x1ce4>  // b.none
   1bcdc:	mov	w3, w19
   1bce0:	mov	x1, x20
   1bce4:	mov	x2, x21
   1bce8:	mov	x27, x0
   1bcec:	bl	1bb20 <OnPrint@@Base+0x1afc>
   1bcf0:	cbz	x0, 1bd08 <OnPrint@@Base+0x1ce4>
   1bcf4:	dmb	ish
   1bcf8:	str	x27, [x23, x26, lsl #3]
   1bcfc:	ldp	x25, x26, [sp, #48]
   1bd00:	ldp	x27, x28, [sp, #64]
   1bd04:	b	1bcb4 <OnPrint@@Base+0x1c90>
   1bd08:	lsr	x2, x26, #12
   1bd0c:	add	x0, x2, #0x200, lsl #12
   1bd10:	add	x0, x23, x0, lsl #2
   1bd14:	ldxr	w3, [x0]
   1bd18:	add	w1, w3, #0x1
   1bd1c:	stlxr	w4, w1, [x0]
   1bd20:	cbnz	w4, 1bd14 <OnPrint@@Base+0x1cf0>
   1bd24:	dmb	ish
   1bd28:	add	w4, w3, #0x1
   1bd2c:	add	x1, x23, #0x800, lsl #12
   1bd30:	ldr	x0, [x1, #1024]
   1bd34:	add	x0, x0, #0x1
   1bd38:	str	x0, [x1, #1024]
   1bd3c:	add	w3, w3, #0x1
   1bd40:	mov	x0, #0x7fffff              	// #8388607
   1bd44:	cmp	x3, x0
   1bd48:	b.hi	1bdb4 <OnPrint@@Base+0x1d90>  // b.pmore
   1bd4c:	orr	w0, w4, w2, lsl #23
   1bd50:	str	w0, [sp, #140]
   1bd54:	cbz	w0, 1bdd0 <OnPrint@@Base+0x1dac>
   1bd58:	sub	w27, w24, #0x1
   1bd5c:	add	x27, x27, #0x4
   1bd60:	lsl	x27, x27, #3
   1bd64:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1bd68:	ldr	x4, [x0, #3824]
   1bd6c:	add	x2, x4, #0x8
   1bd70:	ldr	x1, [x4, #8]
   1bd74:	dmb	ish
   1bd78:	ldr	x0, [x4, #16]
   1bd7c:	dmb	ish
   1bd80:	cbz	x1, 1bf14 <OnPrint@@Base+0x1ef0>
   1bd84:	add	x3, x27, x1
   1bd88:	cmp	x0, x3
   1bd8c:	b.cc	1bf14 <OnPrint@@Base+0x1ef0>  // b.lo, b.ul, b.last
   1bd90:	ldxr	x28, [x2]
   1bd94:	cmp	x28, x1
   1bd98:	b.ne	1bda4 <OnPrint@@Base+0x1d80>  // b.any
   1bd9c:	stlxr	w0, x3, [x2]
   1bda0:	cbnz	w0, 1bd90 <OnPrint@@Base+0x1d6c>
   1bda4:	dmb	ish
   1bda8:	cmp	x1, x28
   1bdac:	b.ne	1bd70 <OnPrint@@Base+0x1d4c>  // b.any
   1bdb0:	b	1beac <OnPrint@@Base+0x1e88>
   1bdb4:	mov	x4, #0x800000              	// #8388608
   1bdb8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1bdbc:	add	x2, x2, #0x878
   1bdc0:	mov	w1, #0x77                  	// #119
   1bdc4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1bdc8:	add	x0, x0, #0x818
   1bdcc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1bdd0:	mov	x4, #0x0                   	// #0
   1bdd4:	mov	x3, #0x0                   	// #0
   1bdd8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1bddc:	add	x2, x2, #0x890
   1bde0:	mov	w1, #0x79                  	// #121
   1bde4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1bde8:	add	x0, x0, #0x818
   1bdec:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1bdf0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1bdf4:	ldr	x0, [x0, #3824]
   1bdf8:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   1bdfc:	b	1bf38 <OnPrint@@Base+0x1f14>
   1be00:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1be04:	ldr	x0, [x0, #3824]
   1be08:	str	x0, [sp, #128]
   1be0c:	str	xzr, [x0, #8]
   1be10:	cmp	x27, #0x10, lsl #12
   1be14:	mov	x0, #0x10000               	// #65536
   1be18:	csel	x1, x27, x0, cs  // cs = hs, nlast
   1be1c:	mov	x3, x1
   1be20:	mov	w2, #0x0                   	// #0
   1be24:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1be28:	add	x1, x1, #0x8a0
   1be2c:	str	x3, [sp, #120]
   1be30:	mov	x0, x3
   1be34:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1be38:	ldr	x1, [sp, #120]
   1be3c:	add	x1, x1, x0
   1be40:	dmb	ish
   1be44:	ldr	x2, [sp, #128]
   1be48:	str	x1, [x2, #16]
   1be4c:	dmb	ish
   1be50:	str	x0, [x2, #8]
   1be54:	ldr	x1, [x28, #8]
   1be58:	dmb	ish
   1be5c:	ldr	x0, [x28, #16]
   1be60:	dmb	ish
   1be64:	cbz	x1, 1be00 <OnPrint@@Base+0x1ddc>
   1be68:	add	x2, x27, x1
   1be6c:	cmp	x0, x2
   1be70:	b.cc	1be00 <OnPrint@@Base+0x1ddc>  // b.lo, b.ul, b.last
   1be74:	ldr	x3, [sp, #104]
   1be78:	ldxr	x0, [x3]
   1be7c:	cmp	x0, x1
   1be80:	b.ne	1be8c <OnPrint@@Base+0x1e68>  // b.any
   1be84:	stlxr	w4, x2, [x3]
   1be88:	cbnz	w4, 1be78 <OnPrint@@Base+0x1e54>
   1be8c:	dmb	ish
   1be90:	cmp	x1, x0
   1be94:	b.ne	1be54 <OnPrint@@Base+0x1e30>  // b.any
   1be98:	mov	x28, x0
   1be9c:	dmb	ish
   1bea0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1bea4:	ldr	x0, [x0, #3824]
   1bea8:	strb	wzr, [x0]
   1beac:	add	x1, x23, #0x800, lsl #12
   1beb0:	ldr	x0, [x1, #1032]
   1beb4:	add	x27, x0, x27
   1beb8:	str	x27, [x1, #1032]
   1bebc:	ldr	w0, [sp, #140]
   1bec0:	str	w0, [x28, #8]
   1bec4:	and	w19, w19, #0xfff00000
   1bec8:	str	w19, [x28, #12]
   1becc:	str	w24, [x28, #16]
   1bed0:	lsr	x21, x21, #32
   1bed4:	str	w21, [x28, #20]
   1bed8:	lsl	x2, x25, #3
   1bedc:	mov	x1, x20
   1bee0:	add	x0, x28, #0x18
   1bee4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1bee8:	ldr	x0, [sp, #112]
   1beec:	str	x0, [x28]
   1bef0:	dmb	ish
   1bef4:	str	x28, [x23, x26, lsl #3]
   1bef8:	cbz	x22, 1bf04 <OnPrint@@Base+0x1ee0>
   1befc:	mov	w0, #0x1                   	// #1
   1bf00:	strb	w0, [x22]
   1bf04:	mov	x0, x28
   1bf08:	ldp	x25, x26, [sp, #48]
   1bf0c:	ldp	x27, x28, [sp, #64]
   1bf10:	b	1bcb4 <OnPrint@@Base+0x1c90>
   1bf14:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1bf18:	ldr	x0, [x0, #3824]
   1bf1c:	mov	w2, #0x1                   	// #1
   1bf20:	ldxrb	w1, [x0]
   1bf24:	stxrb	w3, w2, [x0]
   1bf28:	cbnz	w3, 1bf20 <OnPrint@@Base+0x1efc>
   1bf2c:	dmb	ish
   1bf30:	and	w0, w1, #0xff
   1bf34:	cbnz	w0, 1bdf0 <OnPrint@@Base+0x1dcc>
   1bf38:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1bf3c:	ldr	x28, [x0, #3824]
   1bf40:	add	x0, x28, #0x8
   1bf44:	str	x0, [sp, #104]
   1bf48:	b	1be54 <OnPrint@@Base+0x1e30>
   1bf4c:	add	x0, x0, #0x4
   1bf50:	ret
   1bf54:	str	x30, [sp, #-16]!
   1bf58:	mov	x0, x30
   1bf5c:	ldr	x30, [sp], #16
   1bf60:	ret
   1bf64:	stp	x19, x20, [sp, #-32]!
   1bf68:	stp	x21, x30, [sp, #16]
   1bf6c:	mov	x19, x0
   1bf70:	cmp	x3, #0x0
   1bf74:	cinc	w0, w2, ne  // ne = any
   1bf78:	str	w0, [x19, #8]
   1bf7c:	cmp	w0, #0x100
   1bf80:	b.hi	1bfb4 <OnPrint@@Base+0x1f90>  // b.pmore
   1bf84:	mov	x20, x2
   1bf88:	mov	x21, x3
   1bf8c:	lsl	x2, x2, #3
   1bf90:	add	x0, x19, #0x10
   1bf94:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1bf98:	cbz	x21, 1bfa4 <OnPrint@@Base+0x1f80>
   1bf9c:	add	x20, x20, #0x2
   1bfa0:	str	x21, [x19, x20, lsl #3]
   1bfa4:	str	xzr, [x19, #2064]
   1bfa8:	ldp	x21, x30, [sp, #16]
   1bfac:	ldp	x19, x20, [sp], #32
   1bfb0:	ret
   1bfb4:	mov	w3, w0
   1bfb8:	mov	x4, #0x100                 	// #256
   1bfbc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1bfc0:	add	x2, x2, #0x8b0
   1bfc4:	mov	w1, #0x22                  	// #34
   1bfc8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1bfcc:	add	x0, x0, #0x8d0
   1bfd0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1bfd4:	stp	x19, x20, [sp, #-64]!
   1bfd8:	stp	x21, x22, [sp, #16]
   1bfdc:	stp	x23, x24, [sp, #32]
   1bfe0:	str	x30, [sp, #48]
   1bfe4:	mov	x19, x0
   1bfe8:	mov	x23, x1
   1bfec:	mov	x22, x2
   1bff0:	mov	x21, x3
   1bff4:	mov	x24, x4
   1bff8:	mov	w20, w5
   1bffc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c000:	ldr	x0, [x0, #4016]
   1c004:	ldr	x0, [x0]
   1c008:	cbz	x0, 1c0a4 <OnPrint@@Base+0x2080>
   1c00c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c010:	ldr	x0, [x0, #4016]
   1c014:	ldr	x1, [x0]
   1c018:	mov	w3, w20
   1c01c:	cmp	w20, #0x1
   1c020:	b.ls	1c0b8 <OnPrint@@Base+0x2094>  // b.plast
   1c024:	str	x23, [x19, #16]
   1c028:	mov	w0, #0x1                   	// #1
   1c02c:	str	w0, [x19, #8]
   1c030:	cmp	x21, #0xfff
   1c034:	b.ls	1c090 <OnPrint@@Base+0x206c>  // b.plast
   1c038:	cmp	x22, x24
   1c03c:	b.ls	1c090 <OnPrint@@Base+0x206c>  // b.plast
   1c040:	sub	x21, x21, #0x10
   1c044:	cmp	x22, x21
   1c048:	b.cs	1c090 <OnPrint@@Base+0x206c>  // b.hs, b.nlast
   1c04c:	mov	x0, x22
   1c050:	mov	w2, #0x1                   	// #1
   1c054:	tst	x22, #0x7
   1c058:	b.ne	1c090 <OnPrint@@Base+0x206c>  // b.any
   1c05c:	ldr	x3, [x0, #8]
   1c060:	cmp	x1, x3
   1c064:	b.hi	1c090 <OnPrint@@Base+0x206c>  // b.pmore
   1c068:	cmp	x23, x3
   1c06c:	b.eq	1c080 <OnPrint@@Base+0x205c>  // b.none
   1c070:	add	w4, w2, #0x1
   1c074:	str	w4, [x19, #8]
   1c078:	add	x2, x19, w2, uxtw #3
   1c07c:	str	x3, [x2, #16]
   1c080:	ldr	x0, [x0]
   1c084:	mov	x3, x0
   1c088:	cmp	x22, x0
   1c08c:	b.cc	1c0d4 <OnPrint@@Base+0x20b0>  // b.lo, b.ul, b.last
   1c090:	ldp	x21, x22, [sp, #16]
   1c094:	ldp	x23, x24, [sp, #32]
   1c098:	ldr	x30, [sp, #48]
   1c09c:	ldp	x19, x20, [sp], #64
   1c0a0:	ret
   1c0a4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1c0a8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c0ac:	ldr	x1, [x1, #4016]
   1c0b0:	str	x0, [x1]
   1c0b4:	b	1c00c <OnPrint@@Base+0x1fe8>
   1c0b8:	mov	x4, #0x2                   	// #2
   1c0bc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c0c0:	add	x2, x2, #0x918
   1c0c4:	mov	w1, #0x47                  	// #71
   1c0c8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c0cc:	add	x0, x0, #0x8d0
   1c0d0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c0d4:	cmp	x0, x21
   1c0d8:	b.cs	1c090 <OnPrint@@Base+0x206c>  // b.hs, b.nlast
   1c0dc:	tst	x3, #0x7
   1c0e0:	b.ne	1c090 <OnPrint@@Base+0x206c>  // b.any
   1c0e4:	ldr	w2, [x19, #8]
   1c0e8:	cmp	w2, w20
   1c0ec:	b.cs	1c090 <OnPrint@@Base+0x206c>  // b.hs, b.nlast
   1c0f0:	mov	x22, x3
   1c0f4:	b	1c05c <OnPrint@@Base+0x2038>
   1c0f8:	ldr	w2, [x0, #8]
   1c0fc:	cmp	x1, w2, uxtw
   1c100:	b.cs	1c130 <OnPrint@@Base+0x210c>  // b.hs, b.nlast
   1c104:	sub	w2, w2, w1
   1c108:	str	w2, [x0, #8]
   1c10c:	mov	w3, w2
   1c110:	cbz	w2, 1c12c <OnPrint@@Base+0x2108>
   1c114:	add	x0, x0, #0x10
   1c118:	add	x3, x0, x3, lsl #3
   1c11c:	ldr	x2, [x0, x1, lsl #3]
   1c120:	str	x2, [x0], #8
   1c124:	cmp	x0, x3
   1c128:	b.ne	1c11c <OnPrint@@Base+0x20f8>  // b.any
   1c12c:	ret
   1c130:	str	x30, [sp, #-16]!
   1c134:	mov	w4, w2
   1c138:	mov	x3, x1
   1c13c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c140:	add	x2, x2, #0x930
   1c144:	mov	w1, #0x78                  	// #120
   1c148:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c14c:	add	x0, x0, #0x8d0
   1c150:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c154:	ldr	w8, [x0, #8]
   1c158:	cmp	x8, #0x1
   1c15c:	b.ls	1c1ac <OnPrint@@Base+0x2188>  // b.plast
   1c160:	ldr	x6, [x0]
   1c164:	mov	x2, #0x1                   	// #1
   1c168:	mov	x0, #0x0                   	// #0
   1c16c:	ldr	x4, [x6, x2, lsl #3]
   1c170:	sub	x5, x1, x4
   1c174:	sub	x3, x4, x1
   1c178:	cmp	x4, x1
   1c17c:	csel	x3, x3, x5, cs  // cs = hs, nlast
   1c180:	ldr	x5, [x6, x0, lsl #3]
   1c184:	sub	x7, x1, x5
   1c188:	sub	x4, x5, x1
   1c18c:	cmp	x5, x1
   1c190:	csel	x4, x4, x7, cs  // cs = hs, nlast
   1c194:	cmp	x4, x3
   1c198:	csel	x0, x0, x2, ls  // ls = plast
   1c19c:	add	x2, x2, #0x1
   1c1a0:	cmp	x2, x8
   1c1a4:	b.ne	1c16c <OnPrint@@Base+0x2148>  // b.any
   1c1a8:	ret
   1c1ac:	mov	x0, #0x0                   	// #0
   1c1b0:	b	1c1a8 <OnPrint@@Base+0x2184>
   1c1b4:	stp	x19, x20, [sp, #-176]!
   1c1b8:	stp	x23, x24, [sp, #32]
   1c1bc:	str	x30, [sp, #80]
   1c1c0:	mov	x23, x0
   1c1c4:	ldr	x0, [x0]
   1c1c8:	cbz	x0, 1c230 <OnPrint@@Base+0x220c>
   1c1cc:	ldr	w0, [x23, #8]
   1c1d0:	cbz	w0, 1c230 <OnPrint@@Base+0x220c>
   1c1d4:	stp	x21, x22, [sp, #16]
   1c1d8:	stp	x25, x26, [sp, #48]
   1c1dc:	stp	x27, x28, [sp, #64]
   1c1e0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c1e4:	ldr	x0, [x0, #4016]
   1c1e8:	ldr	x0, [x0]
   1c1ec:	cbz	x0, 1c24c <OnPrint@@Base+0x2228>
   1c1f0:	lsl	x19, x0, #1
   1c1f4:	str	xzr, [sp, #152]
   1c1f8:	str	xzr, [sp, #160]
   1c1fc:	str	xzr, [sp, #144]
   1c200:	cmp	xzr, x0, lsl #1
   1c204:	b.ne	1c28c <OnPrint@@Base+0x2268>  // b.any
   1c208:	str	xzr, [sp, #160]
   1c20c:	str	xzr, [sp, #168]
   1c210:	mov	x4, #0x0                   	// #0
   1c214:	mov	x3, #0x0                   	// #0
   1c218:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c21c:	add	x2, x2, #0x368
   1c220:	mov	w1, #0x1b6                 	// #438
   1c224:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c228:	add	x0, x0, #0x380
   1c22c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c230:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c234:	add	x0, x0, #0x948
   1c238:	bl	1a368 <OnPrint@@Base+0x344>
   1c23c:	ldp	x23, x24, [sp, #32]
   1c240:	ldr	x30, [sp, #80]
   1c244:	ldp	x19, x20, [sp], #176
   1c248:	ret
   1c24c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1c250:	mov	x19, x0
   1c254:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c258:	ldr	x0, [x0, #4016]
   1c25c:	str	x19, [x0]
   1c260:	lsl	x0, x19, #1
   1c264:	str	xzr, [sp, #152]
   1c268:	str	xzr, [sp, #160]
   1c26c:	str	xzr, [sp, #144]
   1c270:	cmp	xzr, x19, lsl #1
   1c274:	b.eq	1c208 <OnPrint@@Base+0x21e4>  // b.none
   1c278:	cbnz	x19, 1c434 <OnPrint@@Base+0x2410>
   1c27c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1c280:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c284:	ldr	x1, [x1, #4016]
   1c288:	str	x0, [x1]
   1c28c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c290:	ldr	x0, [x0, #4016]
   1c294:	ldr	x1, [x0]
   1c298:	sub	x0, x1, #0x1
   1c29c:	tst	x1, x0
   1c2a0:	b.ne	1c43c <OnPrint@@Base+0x2418>  // b.any
   1c2a4:	add	x0, x0, x19
   1c2a8:	neg	x1, x1
   1c2ac:	and	x20, x0, x1
   1c2b0:	mov	w2, #0x0                   	// #0
   1c2b4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c2b8:	add	x1, x1, #0x350
   1c2bc:	mov	x0, x20
   1c2c0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1c2c4:	mov	x21, x0
   1c2c8:	ldr	x2, [sp, #160]
   1c2cc:	ldr	x1, [sp, #144]
   1c2d0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1c2d4:	ldr	x1, [sp, #152]
   1c2d8:	ldr	x0, [sp, #144]
   1c2dc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c2e0:	str	x21, [sp, #144]
   1c2e4:	str	x20, [sp, #152]
   1c2e8:	ldr	x0, [sp, #160]
   1c2ec:	cmp	x0, x19
   1c2f0:	b.cs	1c758 <OnPrint@@Base+0x2734>  // b.hs, b.nlast
   1c2f4:	cmp	x19, x20
   1c2f8:	b.hi	1c44c <OnPrint@@Base+0x2428>  // b.pmore
   1c2fc:	ldr	x0, [sp, #160]
   1c300:	sub	x2, x19, x0
   1c304:	mov	w1, #0x0                   	// #0
   1c308:	ldr	x3, [sp, #144]
   1c30c:	add	x0, x3, x0
   1c310:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1c314:	str	x19, [sp, #160]
   1c318:	str	xzr, [sp, #168]
   1c31c:	cbz	x19, 1c210 <OnPrint@@Base+0x21ec>
   1c320:	ldr	x0, [sp, #144]
   1c324:	strb	wzr, [x0]
   1c328:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c32c:	ldr	x0, [x0, #4016]
   1c330:	ldr	x19, [x0]
   1c334:	cbz	x19, 1c4e0 <OnPrint@@Base+0x24bc>
   1c338:	str	xzr, [sp, #120]
   1c33c:	str	xzr, [sp, #128]
   1c340:	str	xzr, [sp, #112]
   1c344:	sub	x24, x19, #0x1
   1c348:	ands	x24, x24, x19
   1c34c:	b.ne	1c52c <OnPrint@@Base+0x2508>  // b.any
   1c350:	lsl	x20, x19, #1
   1c354:	sub	x20, x20, #0x1
   1c358:	neg	x0, x19
   1c35c:	and	x20, x20, x0
   1c360:	mov	w2, #0x0                   	// #0
   1c364:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c368:	add	x1, x1, #0x350
   1c36c:	mov	x0, x20
   1c370:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1c374:	mov	x21, x0
   1c378:	ldr	x2, [sp, #128]
   1c37c:	ldr	x1, [sp, #112]
   1c380:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1c384:	ldr	x1, [sp, #120]
   1c388:	ldr	x0, [sp, #112]
   1c38c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c390:	str	x21, [sp, #112]
   1c394:	str	x20, [sp, #120]
   1c398:	ldr	x0, [sp, #128]
   1c39c:	cmp	x0, x19
   1c3a0:	b.cs	1c74c <OnPrint@@Base+0x2728>  // b.hs, b.nlast
   1c3a4:	cmp	x19, x20
   1c3a8:	b.hi	1c53c <OnPrint@@Base+0x2518>  // b.pmore
   1c3ac:	ldr	x0, [sp, #128]
   1c3b0:	sub	x2, x19, x0
   1c3b4:	mov	w1, #0x0                   	// #0
   1c3b8:	ldr	x3, [sp, #112]
   1c3bc:	add	x0, x3, x0
   1c3c0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1c3c4:	str	x19, [sp, #128]
   1c3c8:	str	xzr, [sp, #136]
   1c3cc:	cbz	x19, 1c50c <OnPrint@@Base+0x24e8>
   1c3d0:	ldr	x0, [sp, #112]
   1c3d4:	strb	wzr, [x0]
   1c3d8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c3dc:	ldr	x0, [x0, #4056]
   1c3e0:	ldr	w26, [x0, #184]
   1c3e4:	ldr	w0, [x23, #8]
   1c3e8:	cbz	w0, 1c6fc <OnPrint@@Base+0x26d8>
   1c3ec:	str	x24, [sp, #96]
   1c3f0:	adrp	x25, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1c3f4:	add	x25, x25, #0x640
   1c3f8:	add	x27, sp, #0x90
   1c3fc:	ldr	x0, [x23]
   1c400:	ldr	x1, [sp, #96]
   1c404:	ldr	x19, [x0, x1, lsl #3]
   1c408:	cbz	x19, 1c6fc <OnPrint@@Base+0x26d8>
   1c40c:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   1c410:	sub	x1, x19, #0x4
   1c414:	bl	21478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
   1c418:	str	x0, [sp, #104]
   1c41c:	cbz	x0, 1c5f4 <OnPrint@@Base+0x25d0>
   1c420:	ldr	x19, [sp, #104]
   1c424:	mov	x20, x24
   1c428:	adrp	x21, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c42c:	ldr	x21, [x21, #4056]
   1c430:	b	1c654 <OnPrint@@Base+0x2630>
   1c434:	mov	x19, x0
   1c438:	b	1c28c <OnPrint@@Base+0x2268>
   1c43c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c440:	add	x0, x0, #0x338
   1c444:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1c448:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1c44c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c450:	ldr	x0, [x0, #4016]
   1c454:	ldr	x0, [x0]
   1c458:	cbz	x0, 1c4bc <OnPrint@@Base+0x2498>
   1c45c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c460:	ldr	x0, [x0, #4016]
   1c464:	ldr	x1, [x0]
   1c468:	sub	x0, x1, #0x1
   1c46c:	tst	x1, x0
   1c470:	b.ne	1c4d0 <OnPrint@@Base+0x24ac>  // b.any
   1c474:	add	x0, x19, x0
   1c478:	neg	x1, x1
   1c47c:	and	x20, x0, x1
   1c480:	mov	w2, #0x0                   	// #0
   1c484:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c488:	add	x1, x1, #0x350
   1c48c:	mov	x0, x20
   1c490:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1c494:	mov	x21, x0
   1c498:	ldr	x2, [sp, #160]
   1c49c:	ldr	x1, [sp, #144]
   1c4a0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1c4a4:	ldr	x1, [sp, #152]
   1c4a8:	ldr	x0, [sp, #144]
   1c4ac:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c4b0:	str	x21, [sp, #144]
   1c4b4:	str	x20, [sp, #152]
   1c4b8:	b	1c2fc <OnPrint@@Base+0x22d8>
   1c4bc:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1c4c0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c4c4:	ldr	x1, [x1, #4016]
   1c4c8:	str	x0, [x1]
   1c4cc:	b	1c45c <OnPrint@@Base+0x2438>
   1c4d0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c4d4:	add	x0, x0, #0x338
   1c4d8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1c4dc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1c4e0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1c4e4:	mov	x19, x0
   1c4e8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c4ec:	ldr	x0, [x0, #4016]
   1c4f0:	str	x19, [x0]
   1c4f4:	str	xzr, [sp, #120]
   1c4f8:	str	xzr, [sp, #128]
   1c4fc:	str	xzr, [sp, #112]
   1c500:	cbnz	x19, 1c344 <OnPrint@@Base+0x2320>
   1c504:	str	x19, [sp, #128]
   1c508:	str	xzr, [sp, #136]
   1c50c:	mov	x4, #0x0                   	// #0
   1c510:	mov	x3, #0x0                   	// #0
   1c514:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c518:	add	x2, x2, #0x368
   1c51c:	mov	w1, #0x1b6                 	// #438
   1c520:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c524:	add	x0, x0, #0x380
   1c528:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c52c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c530:	add	x0, x0, #0x338
   1c534:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1c538:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1c53c:	cbz	x19, 1c5b0 <OnPrint@@Base+0x258c>
   1c540:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c544:	ldr	x0, [x0, #4016]
   1c548:	ldr	x0, [x0]
   1c54c:	cbz	x0, 1c5d0 <OnPrint@@Base+0x25ac>
   1c550:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c554:	ldr	x0, [x0, #4016]
   1c558:	ldr	x1, [x0]
   1c55c:	sub	x0, x1, #0x1
   1c560:	tst	x1, x0
   1c564:	b.ne	1c5e4 <OnPrint@@Base+0x25c0>  // b.any
   1c568:	add	x0, x19, x0
   1c56c:	neg	x1, x1
   1c570:	and	x20, x0, x1
   1c574:	mov	w2, #0x0                   	// #0
   1c578:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c57c:	add	x1, x1, #0x350
   1c580:	mov	x0, x20
   1c584:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1c588:	mov	x21, x0
   1c58c:	ldr	x2, [sp, #128]
   1c590:	ldr	x1, [sp, #112]
   1c594:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1c598:	ldr	x1, [sp, #120]
   1c59c:	ldr	x0, [sp, #112]
   1c5a0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c5a4:	str	x21, [sp, #112]
   1c5a8:	str	x20, [sp, #120]
   1c5ac:	b	1c3ac <OnPrint@@Base+0x2388>
   1c5b0:	mov	x4, #0x0                   	// #0
   1c5b4:	mov	x3, #0x0                   	// #0
   1c5b8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1c5bc:	add	x2, x2, #0xac8
   1c5c0:	mov	w1, #0x1fc                 	// #508
   1c5c4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c5c8:	add	x0, x0, #0x380
   1c5cc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c5d0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1c5d4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c5d8:	ldr	x1, [x1, #4016]
   1c5dc:	str	x0, [x1]
   1c5e0:	b	1c550 <OnPrint@@Base+0x252c>
   1c5e4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c5e8:	add	x0, x0, #0x338
   1c5ec:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1c5f0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1c5f4:	mov	x4, #0x0                   	// #0
   1c5f8:	mov	x3, #0x0                   	// #0
   1c5fc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c600:	add	x2, x2, #0x960
   1c604:	mov	w1, #0x22                  	// #34
   1c608:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c60c:	add	x0, x0, #0x978
   1c610:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c614:	mov	x4, #0x0                   	// #0
   1c618:	mov	x3, #0x0                   	// #0
   1c61c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c620:	add	x2, x2, #0x368
   1c624:	mov	w1, #0x1b6                 	// #438
   1c628:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c62c:	add	x0, x0, #0x380
   1c630:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c634:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c638:	add	x1, x1, #0x9c8
   1c63c:	add	x0, sp, #0x70
   1c640:	bl	1a490 <OnPrint@@Base+0x46c>
   1c644:	b	1c6b8 <OnPrint@@Base+0x2694>
   1c648:	ldr	x19, [x19]
   1c64c:	cbz	x19, 1c6cc <OnPrint@@Base+0x26a8>
   1c650:	mov	x20, x22
   1c654:	ldr	x0, [sp, #160]
   1c658:	cbz	x0, 1c614 <OnPrint@@Base+0x25f0>
   1c65c:	ldr	x0, [sp, #144]
   1c660:	strb	wzr, [x0]
   1c664:	str	xzr, [sp, #168]
   1c668:	add	x22, x20, #0x1
   1c66c:	mov	x6, x25
   1c670:	ldr	x5, [x21, #24]
   1c674:	ldrb	w4, [x21, #181]
   1c678:	add	x3, x19, #0x8
   1c67c:	mov	w2, w20
   1c680:	ldr	x1, [x21, #192]
   1c684:	mov	x0, x27
   1c688:	bl	1e280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14d8>
   1c68c:	ldr	x1, [sp, #144]
   1c690:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1c694:	add	x0, x0, #0x40
   1c698:	bl	1a368 <OnPrint@@Base+0x344>
   1c69c:	add	w0, w26, w24
   1c6a0:	sub	w28, w0, w22
   1c6a4:	sub	w20, w0, w20
   1c6a8:	cmp	w20, #0x0
   1c6ac:	b.le	1c648 <OnPrint@@Base+0x2624>
   1c6b0:	ldr	x0, [sp, #136]
   1c6b4:	cbnz	x0, 1c634 <OnPrint@@Base+0x2610>
   1c6b8:	ldr	x1, [x19, #40]
   1c6bc:	cbz	x1, 1c648 <OnPrint@@Base+0x2624>
   1c6c0:	add	x0, sp, #0x70
   1c6c4:	bl	1a490 <OnPrint@@Base+0x46c>
   1c6c8:	b	1c648 <OnPrint@@Base+0x2624>
   1c6cc:	ldr	x0, [sp, #104]
   1c6d0:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   1c6d4:	ldr	x0, [sp, #96]
   1c6d8:	add	x0, x0, #0x1
   1c6dc:	mov	x1, x0
   1c6e0:	str	x0, [sp, #96]
   1c6e4:	ldr	w0, [x23, #8]
   1c6e8:	cmp	x0, x1
   1c6ec:	b.ls	1c6fc <OnPrint@@Base+0x26d8>  // b.plast
   1c6f0:	mov	x24, x22
   1c6f4:	mov	w26, w28
   1c6f8:	b	1c3fc <OnPrint@@Base+0x23d8>
   1c6fc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c700:	add	x0, x0, #0xce8
   1c704:	bl	1a368 <OnPrint@@Base+0x344>
   1c708:	ldr	x0, [sp, #136]
   1c70c:	cbnz	x0, 1c738 <OnPrint@@Base+0x2714>
   1c710:	ldr	x1, [sp, #120]
   1c714:	ldr	x0, [sp, #112]
   1c718:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c71c:	ldr	x1, [sp, #152]
   1c720:	ldr	x0, [sp, #144]
   1c724:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c728:	ldp	x21, x22, [sp, #16]
   1c72c:	ldp	x25, x26, [sp, #48]
   1c730:	ldp	x27, x28, [sp, #64]
   1c734:	b	1c23c <OnPrint@@Base+0x2218>
   1c738:	ldr	x1, [sp, #112]
   1c73c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c740:	add	x0, x0, #0x9d0
   1c744:	bl	1a368 <OnPrint@@Base+0x344>
   1c748:	b	1c710 <OnPrint@@Base+0x26ec>
   1c74c:	str	x19, [sp, #128]
   1c750:	str	xzr, [sp, #136]
   1c754:	b	1c3d0 <OnPrint@@Base+0x23ac>
   1c758:	str	x19, [sp, #160]
   1c75c:	str	xzr, [sp, #168]
   1c760:	b	1c320 <OnPrint@@Base+0x22fc>
   1c764:	mov	w8, w1
   1c768:	cbnz	w1, 1c7a4 <OnPrint@@Base+0x2780>
   1c76c:	str	xzr, [x0, #2064]
   1c770:	str	wzr, [x0, #8]
   1c774:	ret
   1c778:	mov	w2, #0x1                   	// #1
   1c77c:	str	w2, [x0, #8]
   1c780:	str	x1, [x0, #16]
   1c784:	ret
   1c788:	mov	w2, w8
   1c78c:	bl	244a8 <__sanitizer_set_death_callback@@Base+0x1438>
   1c790:	b	1c7d8 <OnPrint@@Base+0x27b4>
   1c794:	mov	w5, w8
   1c798:	mov	x4, x6
   1c79c:	bl	1bfd4 <OnPrint@@Base+0x1fb0>
   1c7a0:	b	1c7d8 <OnPrint@@Base+0x27b4>
   1c7a4:	mov	x1, x2
   1c7a8:	mov	x2, x3
   1c7ac:	mov	x3, x5
   1c7b0:	and	w7, w7, #0xff
   1c7b4:	str	x2, [x0, #2064]
   1c7b8:	cmp	w8, #0x1
   1c7bc:	b.eq	1c778 <OnPrint@@Base+0x2754>  // b.none
   1c7c0:	str	x30, [sp, #-16]!
   1c7c4:	cbnz	w7, 1c794 <OnPrint@@Base+0x2770>
   1c7c8:	cbz	x4, 1c788 <OnPrint@@Base+0x2764>
   1c7cc:	mov	w3, w8
   1c7d0:	mov	x2, x4
   1c7d4:	bl	24544 <__sanitizer_set_death_callback@@Base+0x14d4>
   1c7d8:	ldr	x30, [sp], #16
   1c7dc:	ret

000000000001c7e0 <__sanitizer_symbolize_pc@@Base>:
   1c7e0:	cbnz	x3, 1c7e8 <__sanitizer_symbolize_pc@@Base+0x8>
   1c7e4:	ret
   1c7e8:	stp	x19, x20, [sp, #-112]!
   1c7ec:	stp	x21, x22, [sp, #16]
   1c7f0:	stp	x23, x24, [sp, #32]
   1c7f4:	str	x30, [sp, #72]
   1c7f8:	mov	x21, x0
   1c7fc:	mov	x23, x1
   1c800:	mov	x19, x2
   1c804:	mov	x20, x3
   1c808:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   1c80c:	sub	x1, x21, #0x4
   1c810:	bl	21478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
   1c814:	mov	x21, x0
   1c818:	cbz	x0, 1c900 <__sanitizer_symbolize_pc@@Base+0x120>
   1c81c:	stp	x25, x26, [sp, #48]
   1c820:	str	x27, [sp, #64]
   1c824:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c828:	ldr	x0, [x0, #4016]
   1c82c:	ldr	x22, [x0]
   1c830:	cbz	x22, 1c920 <__sanitizer_symbolize_pc@@Base+0x140>
   1c834:	str	xzr, [sp, #88]
   1c838:	str	xzr, [sp, #96]
   1c83c:	str	xzr, [sp, #80]
   1c840:	sub	x0, x22, #0x1
   1c844:	tst	x0, x22
   1c848:	b.ne	1c96c <__sanitizer_symbolize_pc@@Base+0x18c>  // b.any
   1c84c:	lsl	x24, x22, #1
   1c850:	sub	x24, x24, #0x1
   1c854:	neg	x0, x22
   1c858:	and	x24, x24, x0
   1c85c:	mov	w2, #0x0                   	// #0
   1c860:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c864:	add	x1, x1, #0x350
   1c868:	mov	x0, x24
   1c86c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1c870:	mov	x25, x0
   1c874:	ldr	x2, [sp, #96]
   1c878:	ldr	x1, [sp, #80]
   1c87c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1c880:	ldr	x1, [sp, #88]
   1c884:	ldr	x0, [sp, #80]
   1c888:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c88c:	str	x25, [sp, #80]
   1c890:	str	x24, [sp, #88]
   1c894:	ldr	x0, [sp, #96]
   1c898:	cmp	x22, x0
   1c89c:	b.ls	1cb28 <__sanitizer_symbolize_pc@@Base+0x348>  // b.plast
   1c8a0:	cmp	x22, x24
   1c8a4:	b.hi	1c97c <__sanitizer_symbolize_pc@@Base+0x19c>  // b.pmore
   1c8a8:	ldr	x0, [sp, #96]
   1c8ac:	sub	x2, x22, x0
   1c8b0:	mov	w1, #0x0                   	// #0
   1c8b4:	ldr	x3, [sp, #80]
   1c8b8:	add	x0, x3, x0
   1c8bc:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1c8c0:	str	x22, [sp, #96]
   1c8c4:	str	xzr, [sp, #104]
   1c8c8:	cbz	x22, 1c94c <__sanitizer_symbolize_pc@@Base+0x16c>
   1c8cc:	ldr	x0, [sp, #80]
   1c8d0:	strb	wzr, [x0]
   1c8d4:	sub	x20, x20, #0x1
   1c8d8:	add	x20, x19, x20
   1c8dc:	cmp	x19, x20
   1c8e0:	b.cs	1cad4 <__sanitizer_symbolize_pc@@Base+0x2f4>  // b.hs, b.nlast
   1c8e4:	mov	w22, #0x0                   	// #0
   1c8e8:	adrp	x26, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1c8ec:	add	x26, x26, #0x640
   1c8f0:	adrp	x25, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c8f4:	ldr	x25, [x25, #4056]
   1c8f8:	add	x27, sp, #0x50
   1c8fc:	b	1ca68 <__sanitizer_symbolize_pc@@Base+0x288>
   1c900:	mov	x2, x20
   1c904:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1c908:	add	x1, x1, #0x9e8
   1c90c:	mov	x0, x19
   1c910:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
   1c914:	add	x19, x19, x20
   1c918:	sturb	wzr, [x19, #-1]
   1c91c:	b	1caf4 <__sanitizer_symbolize_pc@@Base+0x314>
   1c920:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1c924:	mov	x22, x0
   1c928:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c92c:	ldr	x0, [x0, #4016]
   1c930:	str	x22, [x0]
   1c934:	str	xzr, [sp, #88]
   1c938:	str	xzr, [sp, #96]
   1c93c:	str	xzr, [sp, #80]
   1c940:	cbnz	x22, 1c840 <__sanitizer_symbolize_pc@@Base+0x60>
   1c944:	str	x22, [sp, #96]
   1c948:	str	xzr, [sp, #104]
   1c94c:	mov	x4, #0x0                   	// #0
   1c950:	mov	x3, #0x0                   	// #0
   1c954:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c958:	add	x2, x2, #0x368
   1c95c:	mov	w1, #0x1b6                 	// #438
   1c960:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c964:	add	x0, x0, #0x380
   1c968:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c96c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c970:	add	x0, x0, #0x338
   1c974:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1c978:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1c97c:	cbz	x22, 1c9f0 <__sanitizer_symbolize_pc@@Base+0x210>
   1c980:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c984:	ldr	x0, [x0, #4016]
   1c988:	ldr	x0, [x0]
   1c98c:	cbz	x0, 1ca10 <__sanitizer_symbolize_pc@@Base+0x230>
   1c990:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1c994:	ldr	x0, [x0, #4016]
   1c998:	ldr	x1, [x0]
   1c99c:	sub	x0, x1, #0x1
   1c9a0:	tst	x1, x0
   1c9a4:	b.ne	1ca24 <__sanitizer_symbolize_pc@@Base+0x244>  // b.any
   1c9a8:	add	x0, x22, x0
   1c9ac:	neg	x1, x1
   1c9b0:	and	x24, x0, x1
   1c9b4:	mov	w2, #0x0                   	// #0
   1c9b8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1c9bc:	add	x1, x1, #0x350
   1c9c0:	mov	x0, x24
   1c9c4:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1c9c8:	mov	x25, x0
   1c9cc:	ldr	x2, [sp, #96]
   1c9d0:	ldr	x1, [sp, #80]
   1c9d4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1c9d8:	ldr	x1, [sp, #88]
   1c9dc:	ldr	x0, [sp, #80]
   1c9e0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1c9e4:	str	x25, [sp, #80]
   1c9e8:	str	x24, [sp, #88]
   1c9ec:	b	1c8a8 <__sanitizer_symbolize_pc@@Base+0xc8>
   1c9f0:	mov	x4, #0x0                   	// #0
   1c9f4:	mov	x3, #0x0                   	// #0
   1c9f8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1c9fc:	add	x2, x2, #0xac8
   1ca00:	mov	w1, #0x1fc                 	// #508
   1ca04:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ca08:	add	x0, x0, #0x380
   1ca0c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ca10:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1ca14:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ca18:	ldr	x1, [x1, #4016]
   1ca1c:	str	x0, [x1]
   1ca20:	b	1c990 <__sanitizer_symbolize_pc@@Base+0x1b0>
   1ca24:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ca28:	add	x0, x0, #0x338
   1ca2c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1ca30:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ca34:	mov	x4, #0x0                   	// #0
   1ca38:	mov	x3, #0x0                   	// #0
   1ca3c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ca40:	add	x2, x2, #0x368
   1ca44:	mov	w1, #0x1b6                 	// #438
   1ca48:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ca4c:	add	x0, x0, #0x380
   1ca50:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ca54:	ldr	x21, [x21]
   1ca58:	add	w22, w22, #0x1
   1ca5c:	cmp	x21, #0x0
   1ca60:	ccmp	x19, x20, #0x2, ne  // ne = any
   1ca64:	b.cs	1cad4 <__sanitizer_symbolize_pc@@Base+0x2f4>  // b.hs, b.nlast
   1ca68:	ldr	x0, [sp, #96]
   1ca6c:	cbz	x0, 1ca34 <__sanitizer_symbolize_pc@@Base+0x254>
   1ca70:	ldr	x0, [sp, #80]
   1ca74:	strb	wzr, [x0]
   1ca78:	str	xzr, [sp, #104]
   1ca7c:	mov	x6, x26
   1ca80:	ldr	x5, [x25, #24]
   1ca84:	ldrb	w4, [x25, #181]
   1ca88:	add	x3, x21, #0x8
   1ca8c:	mov	w2, w22
   1ca90:	mov	x1, x23
   1ca94:	mov	x0, x27
   1ca98:	bl	1e280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14d8>
   1ca9c:	ldr	x0, [sp, #104]
   1caa0:	cbz	x0, 1ca54 <__sanitizer_symbolize_pc@@Base+0x274>
   1caa4:	sub	x24, x20, x19
   1caa8:	sub	x24, x24, #0x1
   1caac:	mov	x2, x24
   1cab0:	ldr	x1, [sp, #80]
   1cab4:	mov	x0, x19
   1cab8:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
   1cabc:	ldr	x0, [sp, #104]
   1cac0:	cmp	x0, x24
   1cac4:	csel	x24, x0, x24, ls  // ls = plast
   1cac8:	add	x19, x19, x24
   1cacc:	strb	wzr, [x19], #1
   1cad0:	b	1ca54 <__sanitizer_symbolize_pc@@Base+0x274>
   1cad4:	cmp	x19, x20
   1cad8:	b.hi	1cb08 <__sanitizer_symbolize_pc@@Base+0x328>  // b.pmore
   1cadc:	strb	wzr, [x19]
   1cae0:	ldr	x1, [sp, #88]
   1cae4:	ldr	x0, [sp, #80]
   1cae8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1caec:	ldp	x25, x26, [sp, #48]
   1caf0:	ldr	x27, [sp, #64]
   1caf4:	ldp	x21, x22, [sp, #16]
   1caf8:	ldp	x23, x24, [sp, #32]
   1cafc:	ldr	x30, [sp, #72]
   1cb00:	ldp	x19, x20, [sp], #112
   1cb04:	ret
   1cb08:	mov	x4, #0x0                   	// #0
   1cb0c:	mov	x3, #0x0                   	// #0
   1cb10:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1cb14:	add	x2, x2, #0xa00
   1cb18:	mov	w1, #0x84                  	// #132
   1cb1c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1cb20:	add	x0, x0, #0x978
   1cb24:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1cb28:	str	x22, [sp, #96]
   1cb2c:	str	xzr, [sp, #104]
   1cb30:	b	1c8cc <__sanitizer_symbolize_pc@@Base+0xec>

000000000001cb34 <__sanitizer_symbolize_global@@Base>:
   1cb34:	cbnz	x3, 1cb3c <__sanitizer_symbolize_global@@Base+0x8>
   1cb38:	ret
   1cb3c:	stp	x19, x20, [sp, #-160]!
   1cb40:	stp	x21, x22, [sp, #16]
   1cb44:	stp	x23, x24, [sp, #32]
   1cb48:	str	x30, [sp, #48]
   1cb4c:	mov	x20, x0
   1cb50:	mov	x22, x1
   1cb54:	mov	x21, x2
   1cb58:	mov	x19, x3
   1cb5c:	strb	wzr, [x2]
   1cb60:	add	x23, sp, #0x60
   1cb64:	mov	x0, x23
   1cb68:	bl	20408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3660>
   1cb6c:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   1cb70:	mov	x2, x23
   1cb74:	mov	x1, x20
   1cb78:	bl	21554 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47ac>
   1cb7c:	and	w0, w0, #0xff
   1cb80:	cbz	w0, 1cc74 <__sanitizer_symbolize_global@@Base+0x140>
   1cb84:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cb88:	ldr	x0, [x0, #4016]
   1cb8c:	ldr	x20, [x0]
   1cb90:	cbz	x20, 1cc88 <__sanitizer_symbolize_global@@Base+0x154>
   1cb94:	str	xzr, [sp, #72]
   1cb98:	str	xzr, [sp, #80]
   1cb9c:	str	xzr, [sp, #64]
   1cba0:	sub	x0, x20, #0x1
   1cba4:	tst	x0, x20
   1cba8:	b.ne	1ccd4 <__sanitizer_symbolize_global@@Base+0x1a0>  // b.any
   1cbac:	lsl	x23, x20, #1
   1cbb0:	sub	x23, x23, #0x1
   1cbb4:	neg	x0, x20
   1cbb8:	and	x23, x23, x0
   1cbbc:	mov	w2, #0x0                   	// #0
   1cbc0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cbc4:	add	x1, x1, #0x350
   1cbc8:	mov	x0, x23
   1cbcc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1cbd0:	mov	x24, x0
   1cbd4:	ldr	x2, [sp, #80]
   1cbd8:	ldr	x1, [sp, #64]
   1cbdc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1cbe0:	ldr	x1, [sp, #72]
   1cbe4:	ldr	x0, [sp, #64]
   1cbe8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1cbec:	str	x24, [sp, #64]
   1cbf0:	str	x23, [sp, #72]
   1cbf4:	ldr	x0, [sp, #80]
   1cbf8:	cmp	x0, x20
   1cbfc:	b.cs	1cd9c <__sanitizer_symbolize_global@@Base+0x268>  // b.hs, b.nlast
   1cc00:	cmp	x23, x20
   1cc04:	b.cc	1cce4 <__sanitizer_symbolize_global@@Base+0x1b0>  // b.lo, b.ul, b.last
   1cc08:	ldr	x0, [sp, #80]
   1cc0c:	sub	x2, x20, x0
   1cc10:	mov	w1, #0x0                   	// #0
   1cc14:	ldr	x3, [sp, #64]
   1cc18:	add	x0, x3, x0
   1cc1c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1cc20:	str	x20, [sp, #80]
   1cc24:	str	xzr, [sp, #88]
   1cc28:	cbz	x20, 1ccb4 <__sanitizer_symbolize_global@@Base+0x180>
   1cc2c:	ldr	x0, [sp, #64]
   1cc30:	strb	wzr, [x0]
   1cc34:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cc38:	ldr	x0, [x0, #4056]
   1cc3c:	ldr	x3, [x0, #24]
   1cc40:	add	x2, sp, #0x60
   1cc44:	mov	x1, x22
   1cc48:	add	x0, sp, #0x40
   1cc4c:	bl	1df54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11ac>
   1cc50:	mov	x2, x19
   1cc54:	ldr	x1, [sp, #64]
   1cc58:	mov	x0, x21
   1cc5c:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
   1cc60:	add	x2, x21, x19
   1cc64:	sturb	wzr, [x2, #-1]
   1cc68:	ldr	x1, [sp, #72]
   1cc6c:	ldr	x0, [sp, #64]
   1cc70:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1cc74:	ldp	x21, x22, [sp, #16]
   1cc78:	ldp	x23, x24, [sp, #32]
   1cc7c:	ldr	x30, [sp, #48]
   1cc80:	ldp	x19, x20, [sp], #160
   1cc84:	ret
   1cc88:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1cc8c:	mov	x20, x0
   1cc90:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cc94:	ldr	x0, [x0, #4016]
   1cc98:	str	x20, [x0]
   1cc9c:	str	xzr, [sp, #72]
   1cca0:	str	xzr, [sp, #80]
   1cca4:	str	xzr, [sp, #64]
   1cca8:	cbnz	x20, 1cba0 <__sanitizer_symbolize_global@@Base+0x6c>
   1ccac:	str	x20, [sp, #80]
   1ccb0:	str	xzr, [sp, #88]
   1ccb4:	mov	x4, #0x0                   	// #0
   1ccb8:	mov	x3, #0x0                   	// #0
   1ccbc:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ccc0:	add	x2, x2, #0x368
   1ccc4:	mov	w1, #0x1b6                 	// #438
   1ccc8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cccc:	add	x0, x0, #0x380
   1ccd0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ccd4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ccd8:	add	x0, x0, #0x338
   1ccdc:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1cce0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cce4:	cbz	x20, 1cd58 <__sanitizer_symbolize_global@@Base+0x224>
   1cce8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ccec:	ldr	x0, [x0, #4016]
   1ccf0:	ldr	x0, [x0]
   1ccf4:	cbz	x0, 1cd78 <__sanitizer_symbolize_global@@Base+0x244>
   1ccf8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ccfc:	ldr	x0, [x0, #4016]
   1cd00:	ldr	x23, [x0]
   1cd04:	sub	x0, x23, #0x1
   1cd08:	tst	x23, x0
   1cd0c:	b.ne	1cd8c <__sanitizer_symbolize_global@@Base+0x258>  // b.any
   1cd10:	add	x0, x0, x20
   1cd14:	neg	x23, x23
   1cd18:	and	x23, x0, x23
   1cd1c:	mov	w2, #0x0                   	// #0
   1cd20:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cd24:	add	x1, x1, #0x350
   1cd28:	mov	x0, x23
   1cd2c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1cd30:	mov	x24, x0
   1cd34:	ldr	x2, [sp, #80]
   1cd38:	ldr	x1, [sp, #64]
   1cd3c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1cd40:	ldr	x1, [sp, #72]
   1cd44:	ldr	x0, [sp, #64]
   1cd48:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1cd4c:	str	x24, [sp, #64]
   1cd50:	str	x23, [sp, #72]
   1cd54:	b	1cc08 <__sanitizer_symbolize_global@@Base+0xd4>
   1cd58:	mov	x4, #0x0                   	// #0
   1cd5c:	mov	x3, #0x0                   	// #0
   1cd60:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1cd64:	add	x2, x2, #0xac8
   1cd68:	mov	w1, #0x1fc                 	// #508
   1cd6c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cd70:	add	x0, x0, #0x380
   1cd74:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1cd78:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1cd7c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cd80:	ldr	x1, [x1, #4016]
   1cd84:	str	x0, [x1]
   1cd88:	b	1ccf8 <__sanitizer_symbolize_global@@Base+0x1c4>
   1cd8c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cd90:	add	x0, x0, #0x338
   1cd94:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1cd98:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cd9c:	str	x20, [sp, #80]
   1cda0:	str	xzr, [sp, #88]
   1cda4:	b	1cc2c <__sanitizer_symbolize_global@@Base+0xf8>

000000000001cda8 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   1cda8:	stp	x19, x20, [sp, #-64]!
   1cdac:	stp	x21, x22, [sp, #16]
   1cdb0:	str	x30, [sp, #32]
   1cdb4:	mov	x21, x0
   1cdb8:	mov	x19, x1
   1cdbc:	mov	x20, x2
   1cdc0:	mov	x22, x3
   1cdc4:	str	xzr, [sp, #56]
   1cdc8:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   1cdcc:	mov	x3, x22
   1cdd0:	add	x2, sp, #0x38
   1cdd4:	mov	x1, x21
   1cdd8:	bl	213f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4650>
   1cddc:	and	w0, w0, #0xff
   1cde0:	cbz	w0, 1ce24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   1cde4:	cmp	x19, #0x0
   1cde8:	mov	w0, #0x1                   	// #1
   1cdec:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1cdf0:	b.ne	1ce04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c>  // b.any
   1cdf4:	ldp	x21, x22, [sp, #16]
   1cdf8:	ldr	x30, [sp, #32]
   1cdfc:	ldp	x19, x20, [sp], #64
   1ce00:	ret
   1ce04:	mov	x2, x20
   1ce08:	ldr	x1, [sp, #56]
   1ce0c:	mov	x0, x19
   1ce10:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
   1ce14:	add	x19, x19, x20
   1ce18:	sturb	wzr, [x19, #-1]
   1ce1c:	mov	w0, #0x1                   	// #1
   1ce20:	b	1cdf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c>
   1ce24:	mov	w0, #0x0                   	// #0
   1ce28:	b	1cdf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c>
   1ce2c:	adrp	x3, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ce30:	ldr	x3, [x3, #4056]
   1ce34:	ldrb	w3, [x3, #60]
   1ce38:	cbnz	w3, 1ce40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x98>
   1ce3c:	ret
   1ce40:	stp	x19, x20, [sp, #-80]!
   1ce44:	stp	x21, x22, [sp, #16]
   1ce48:	stp	x23, x30, [sp, #32]
   1ce4c:	mov	x21, x0
   1ce50:	mov	x20, x1
   1ce54:	mov	x19, x2
   1ce58:	str	xzr, [sp, #56]
   1ce5c:	str	xzr, [sp, #64]
   1ce60:	str	xzr, [sp, #48]
   1ce64:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ce68:	ldr	x0, [x0, #4016]
   1ce6c:	ldr	x0, [x0]
   1ce70:	cbz	x0, 1cf84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dc>
   1ce74:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ce78:	ldr	x0, [x0, #4016]
   1ce7c:	ldr	x3, [x0]
   1ce80:	sub	x0, x3, #0x1
   1ce84:	tst	x0, x3
   1ce88:	b.ne	1cf98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f0>  // b.any
   1ce8c:	add	x22, x3, #0x3ff
   1ce90:	neg	x3, x3
   1ce94:	and	x22, x22, x3
   1ce98:	mov	w2, #0x0                   	// #0
   1ce9c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cea0:	add	x1, x1, #0x350
   1cea4:	mov	x0, x22
   1cea8:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1ceac:	mov	x23, x0
   1ceb0:	ldr	x2, [sp, #64]
   1ceb4:	ldr	x1, [sp, #48]
   1ceb8:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1cebc:	ldr	x1, [sp, #56]
   1cec0:	ldr	x0, [sp, #48]
   1cec4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1cec8:	str	x23, [sp, #48]
   1cecc:	str	x22, [sp, #56]
   1ced0:	ldr	x0, [sp, #64]
   1ced4:	cmp	x0, #0x3ff
   1ced8:	b.hi	1cf00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x158>  // b.pmore
   1cedc:	cmp	x22, #0x3ff
   1cee0:	b.ls	1cfa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x200>  // b.plast
   1cee4:	ldr	x0, [sp, #64]
   1cee8:	mov	x2, #0x400                 	// #1024
   1ceec:	sub	x2, x2, x0
   1cef0:	mov	w1, #0x0                   	// #0
   1cef4:	ldr	x3, [sp, #48]
   1cef8:	add	x0, x3, x0
   1cefc:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1cf00:	mov	x0, #0x400                 	// #1024
   1cf04:	str	x0, [sp, #64]
   1cf08:	str	xzr, [sp, #72]
   1cf0c:	ldr	x0, [sp, #48]
   1cf10:	strb	wzr, [x0]
   1cf14:	add	x0, sp, #0x30
   1cf18:	mov	x2, x21
   1cf1c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1cf20:	add	x1, x1, #0xb48
   1cf24:	mov	x21, x0
   1cf28:	bl	1a490 <OnPrint@@Base+0x46c>
   1cf2c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cf30:	ldr	x0, [x0, #4056]
   1cf34:	adrp	x6, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1cf38:	add	x6, x6, #0x640
   1cf3c:	ldr	x5, [x0, #24]
   1cf40:	ldrb	w4, [x0, #181]
   1cf44:	mov	x3, x20
   1cf48:	mov	w2, #0x0                   	// #0
   1cf4c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1cf50:	add	x1, x1, #0xa20
   1cf54:	mov	x0, x21
   1cf58:	bl	1e280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14d8>
   1cf5c:	mov	x1, x19
   1cf60:	ldr	x0, [sp, #48]
   1cf64:	bl	f7f4 <__sanitizer_report_error_summary@@Base+0x1c>
   1cf68:	ldr	x1, [sp, #56]
   1cf6c:	ldr	x0, [sp, #48]
   1cf70:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1cf74:	ldp	x21, x22, [sp, #16]
   1cf78:	ldp	x23, x30, [sp, #32]
   1cf7c:	ldp	x19, x20, [sp], #80
   1cf80:	ret
   1cf84:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1cf88:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cf8c:	ldr	x1, [x1, #4016]
   1cf90:	str	x0, [x1]
   1cf94:	b	1ce74 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcc>
   1cf98:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cf9c:	add	x0, x0, #0x338
   1cfa0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1cfa4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cfa8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cfac:	ldr	x0, [x0, #4016]
   1cfb0:	ldr	x0, [x0]
   1cfb4:	cbz	x0, 1d018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x270>
   1cfb8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1cfbc:	ldr	x0, [x0, #4016]
   1cfc0:	ldr	x0, [x0]
   1cfc4:	sub	x1, x0, #0x1
   1cfc8:	tst	x1, x0
   1cfcc:	b.ne	1d02c <__sanitizer_get_module_and_offset_for_pc@@Base+0x284>  // b.any
   1cfd0:	add	x22, x0, #0x3ff
   1cfd4:	neg	x0, x0
   1cfd8:	and	x22, x22, x0
   1cfdc:	mov	w2, #0x0                   	// #0
   1cfe0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1cfe4:	add	x1, x1, #0x350
   1cfe8:	mov	x0, x22
   1cfec:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1cff0:	mov	x23, x0
   1cff4:	ldr	x2, [sp, #64]
   1cff8:	ldr	x1, [sp, #48]
   1cffc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1d000:	ldr	x1, [sp, #56]
   1d004:	ldr	x0, [sp, #48]
   1d008:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d00c:	str	x23, [sp, #48]
   1d010:	str	x22, [sp, #56]
   1d014:	b	1cee4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13c>
   1d018:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d01c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d020:	ldr	x1, [x1, #4016]
   1d024:	str	x0, [x1]
   1d028:	b	1cfb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x210>
   1d02c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d030:	add	x0, x0, #0x338
   1d034:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1d038:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d03c:	stp	x19, x20, [sp, #-32]!
   1d040:	str	x30, [sp, #16]
   1d044:	mov	x19, x0
   1d048:	ldr	x20, [x0]
   1d04c:	mov	w1, #0x1                   	// #1
   1d050:	ldxrb	w0, [x20]
   1d054:	stxrb	w2, w1, [x20]
   1d058:	cbnz	w2, 1d050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   1d05c:	dmb	ish
   1d060:	and	w0, w0, #0xff
   1d064:	cbnz	w0, 1d08c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e4>
   1d068:	mov	x0, x19
   1d06c:	bl	12384 <__sanitizer_cov_dump@@Base+0x1e54>
   1d070:	ldr	w0, [x19, #8]
   1d074:	bl	18c14 <__sanitizer_set_report_fd@@Base+0x5dd0>
   1d078:	dmb	ish
   1d07c:	strb	wzr, [x20]
   1d080:	ldr	x30, [sp, #16]
   1d084:	ldp	x19, x20, [sp], #32
   1d088:	ret
   1d08c:	mov	x0, x20
   1d090:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   1d094:	b	1d068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c0>
   1d098:	stp	x19, x30, [sp, #-16]!
   1d09c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d0a0:	ldr	x0, [x0, #4056]
   1d0a4:	ldr	x19, [x0, #112]
   1d0a8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d0ac:	add	x1, x1, #0xa28
   1d0b0:	mov	x0, x19
   1d0b4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   1d0b8:	mov	w1, #0x1                   	// #1
   1d0bc:	cbnz	w0, 1d0cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x324>
   1d0c0:	mov	w0, w1
   1d0c4:	ldp	x19, x30, [sp], #16
   1d0c8:	ret
   1d0cc:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1d0d0:	add	x1, x1, #0xc18
   1d0d4:	mov	x0, x19
   1d0d8:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   1d0dc:	mov	w1, #0x0                   	// #0
   1d0e0:	cbnz	w0, 1d0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x318>
   1d0e4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d0e8:	ldr	x0, [x0, #3976]
   1d0ec:	bl	1d03c <__sanitizer_get_module_and_offset_for_pc@@Base+0x294>
   1d0f0:	and	w1, w0, #0xff
   1d0f4:	b	1d0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x318>
   1d0f8:	adrp	x3, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d0fc:	ldr	x3, [x3, #4056]
   1d100:	ldrb	w3, [x3, #60]
   1d104:	cbz	w3, 1d170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c8>
   1d108:	stp	x19, x20, [sp, #-32]!
   1d10c:	stp	x21, x30, [sp, #16]
   1d110:	mov	x21, x0
   1d114:	mov	x20, x2
   1d118:	ldr	w0, [x1, #8]
   1d11c:	cbz	w0, 1d160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b8>
   1d120:	ldr	x0, [x1]
   1d124:	ldr	x19, [x0]
   1d128:	sub	x19, x19, #0x4
   1d12c:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   1d130:	mov	x1, x19
   1d134:	bl	21478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
   1d138:	mov	x19, x0
   1d13c:	mov	x2, x20
   1d140:	add	x1, x0, #0x8
   1d144:	mov	x0, x21
   1d148:	bl	1ce2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   1d14c:	mov	x0, x19
   1d150:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   1d154:	ldp	x21, x30, [sp, #16]
   1d158:	ldp	x19, x20, [sp], #32
   1d15c:	ret
   1d160:	mov	x1, #0x0                   	// #0
   1d164:	mov	x0, x21
   1d168:	bl	f7f4 <__sanitizer_report_error_summary@@Base+0x1c>
   1d16c:	b	1d154 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   1d170:	ret
   1d174:	stp	x19, x30, [sp, #-16]!
   1d178:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d17c:	ldr	x0, [x0, #4024]
   1d180:	ldr	x19, [x0]
   1d184:	mov	x0, x19
   1d188:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1d18c:	mov	x1, x0
   1d190:	mov	x0, x19
   1d194:	bl	12338 <__sanitizer_cov_dump@@Base+0x1e08>
   1d198:	mov	x1, #0xe                   	// #14
   1d19c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d1a0:	add	x0, x0, #0xc50
   1d1a4:	bl	12338 <__sanitizer_cov_dump@@Base+0x1e08>
   1d1a8:	ldp	x19, x30, [sp], #16
   1d1ac:	ret
   1d1b0:	stp	x19, x20, [sp, #-208]!
   1d1b4:	stp	x21, x22, [sp, #16]
   1d1b8:	stp	x23, x24, [sp, #32]
   1d1bc:	str	x30, [sp, #80]
   1d1c0:	mov	x19, x0
   1d1c4:	mov	w20, w1
   1d1c8:	mov	x21, x2
   1d1cc:	mov	x22, x3
   1d1d0:	bl	18d90 <__sanitizer_set_report_fd@@Base+0x5f4c>
   1d1d4:	and	w0, w0, #0xff
   1d1d8:	cbz	w0, 1d310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x568>
   1d1dc:	bl	1d098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   1d1e0:	and	w0, w0, #0xff
   1d1e4:	cbnz	w0, 1d6e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x940>
   1d1e8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1d1ec:	add	x23, x1, #0x640
   1d1f0:	mov	x1, x23
   1d1f4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d1f8:	add	x0, x0, #0x288
   1d1fc:	bl	1a368 <OnPrint@@Base+0x344>
   1d200:	mov	w7, w20
   1d204:	ldr	x6, [x19, #32]
   1d208:	ldr	x5, [x19, #40]
   1d20c:	ldr	x4, [x19, #24]
   1d210:	ldr	x3, [x19, #16]
   1d214:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d218:	add	x2, x2, #0xc50
   1d21c:	add	x2, x2, #0x10
   1d220:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d224:	ldr	x0, [x0, #4024]
   1d228:	ldr	x1, [x0]
   1d22c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d230:	add	x0, x0, #0xb88
   1d234:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1d238:	mov	x1, x23
   1d23c:	b	1d73c <__sanitizer_get_module_and_offset_for_pc@@Base+0x994>
   1d240:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d244:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d248:	ldr	x1, [x1, #4016]
   1d24c:	str	x0, [x1]
   1d250:	b	1d758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9b0>
   1d254:	stp	x25, x26, [sp, #48]
   1d258:	stp	x27, x28, [sp, #64]
   1d25c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d260:	add	x0, x0, #0x338
   1d264:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1d268:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d26c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d270:	ldr	x0, [x0, #4016]
   1d274:	ldr	x0, [x0]
   1d278:	cbz	x0, 1d2e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53c>
   1d27c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d280:	ldr	x0, [x0, #4016]
   1d284:	ldr	x0, [x0]
   1d288:	sub	x1, x0, #0x1
   1d28c:	tst	x1, x0
   1d290:	b.ne	1d2f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x550>  // b.any
   1d294:	stp	x25, x26, [sp, #48]
   1d298:	add	x24, x0, #0x817
   1d29c:	neg	x0, x0
   1d2a0:	and	x24, x24, x0
   1d2a4:	mov	w2, #0x0                   	// #0
   1d2a8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d2ac:	add	x1, x1, #0x350
   1d2b0:	mov	x0, x24
   1d2b4:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1d2b8:	mov	x25, x0
   1d2bc:	mov	x2, #0x0                   	// #0
   1d2c0:	mov	x1, x20
   1d2c4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1d2c8:	mov	x1, x23
   1d2cc:	mov	x0, x20
   1d2d0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d2d4:	mov	x23, x24
   1d2d8:	mov	x20, x25
   1d2dc:	ldp	x25, x26, [sp, #48]
   1d2e0:	b	1d7b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa0c>
   1d2e4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d2e8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d2ec:	ldr	x1, [x1, #4016]
   1d2f0:	str	x0, [x1]
   1d2f4:	b	1d27c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d4>
   1d2f8:	stp	x25, x26, [sp, #48]
   1d2fc:	stp	x27, x28, [sp, #64]
   1d300:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d304:	add	x0, x0, #0x338
   1d308:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1d30c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d310:	stp	x25, x26, [sp, #48]
   1d314:	stp	x27, x28, [sp, #64]
   1d318:	bl	1d098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   1d31c:	and	w0, w0, #0xff
   1d320:	cbnz	w0, 1d96c <__sanitizer_get_module_and_offset_for_pc@@Base+0xbc4>
   1d324:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1d328:	add	x24, x1, #0x640
   1d32c:	mov	x1, x24
   1d330:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d334:	add	x0, x0, #0x288
   1d338:	bl	1a368 <OnPrint@@Base+0x344>
   1d33c:	mov	x0, x19
   1d340:	bl	187ec <__sanitizer_set_report_fd@@Base+0x59a8>
   1d344:	mov	x23, x0
   1d348:	mov	w7, w20
   1d34c:	ldr	x6, [x19, #32]
   1d350:	ldr	x5, [x19, #40]
   1d354:	ldr	x4, [x19, #24]
   1d358:	ldr	x3, [x19, #16]
   1d35c:	mov	x2, x0
   1d360:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d364:	ldr	x0, [x0, #4024]
   1d368:	ldr	x1, [x0]
   1d36c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d370:	add	x0, x0, #0xbc0
   1d374:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1d378:	mov	x1, x24
   1d37c:	b	1d9c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc1c>
   1d380:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d384:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d388:	ldr	x1, [x1, #4016]
   1d38c:	str	x0, [x1]
   1d390:	b	1d9e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc3c>
   1d394:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d398:	add	x0, x0, #0xa58
   1d39c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1d3a0:	b	1d9f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc50>
   1d3a4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d3a8:	add	x1, x1, #0xa30
   1d3ac:	b	1da24 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc7c>
   1d3b0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d3b4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d3b8:	ldr	x1, [x1, #4016]
   1d3bc:	str	x0, [x1]
   1d3c0:	b	1da44 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc9c>
   1d3c4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d3c8:	add	x0, x0, #0xab0
   1d3cc:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1d3d0:	b	1da58 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcb0>
   1d3d4:	add	x0, sp, #0x60
   1d3d8:	bl	1a718 <OnPrint@@Base+0x6f4>
   1d3dc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d3e0:	ldr	x0, [x0, #4016]
   1d3e4:	ldr	x0, [x0]
   1d3e8:	cbz	x0, 1d500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x758>
   1d3ec:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d3f0:	ldr	x0, [x0, #4016]
   1d3f4:	ldr	x0, [x0]
   1d3f8:	sub	x1, x0, #0x1
   1d3fc:	tst	x1, x0
   1d400:	b.ne	1d514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x76c>  // b.any
   1d404:	add	x24, x0, #0x817
   1d408:	neg	x0, x0
   1d40c:	and	x24, x24, x0
   1d410:	mov	w2, #0x0                   	// #0
   1d414:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d418:	add	x1, x1, #0x350
   1d41c:	mov	x0, x24
   1d420:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1d424:	mov	x20, x0
   1d428:	mov	x2, #0x0                   	// #0
   1d42c:	mov	x1, #0x0                   	// #0
   1d430:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1d434:	mov	x1, #0x0                   	// #0
   1d438:	mov	x0, #0x0                   	// #0
   1d43c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d440:	cmp	x24, #0x817
   1d444:	b.ls	1d524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x77c>  // b.plast
   1d448:	mov	x2, #0x818                 	// #2072
   1d44c:	mov	w1, #0x0                   	// #0
   1d450:	mov	x0, x20
   1d454:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1d458:	add	x0, x20, #0x10
   1d45c:	str	x0, [x20]
   1d460:	str	wzr, [x20, #8]
   1d464:	str	wzr, [x20, #12]
   1d468:	str	xzr, [x20, #2064]
   1d46c:	mov	x2, x20
   1d470:	mov	x1, x22
   1d474:	mov	x0, x19
   1d478:	blr	x21
   1d47c:	mov	x0, x20
   1d480:	bl	1c1b4 <OnPrint@@Base+0x2190>
   1d484:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d488:	ldr	x0, [x0, #4056]
   1d48c:	ldrb	w0, [x0, #232]
   1d490:	cbz	w0, 1d4b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x708>
   1d494:	ldr	x22, [x19, #24]
   1d498:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d49c:	ldr	x0, [x0, #4016]
   1d4a0:	ldr	x0, [x0]
   1d4a4:	cbz	x0, 1d5b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x810>
   1d4a8:	cmp	x22, x0
   1d4ac:	b.cs	1d880 <__sanitizer_get_module_and_offset_for_pc@@Base+0xad8>  // b.hs, b.nlast
   1d4b0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d4b4:	ldr	x0, [x0, #4056]
   1d4b8:	ldrb	w0, [x0, #233]
   1d4bc:	cbnz	w0, 1d6dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x934>
   1d4c0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d4c4:	ldr	x0, [x0, #4024]
   1d4c8:	ldr	x1, [x0]
   1d4cc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d4d0:	add	x0, x0, #0xb60
   1d4d4:	bl	1a368 <OnPrint@@Base+0x344>
   1d4d8:	mov	x2, #0x0                   	// #0
   1d4dc:	mov	x1, x20
   1d4e0:	mov	x0, x23
   1d4e4:	bl	1d0f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   1d4e8:	mov	x1, x24
   1d4ec:	mov	x0, x20
   1d4f0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d4f4:	ldp	x25, x26, [sp, #48]
   1d4f8:	ldp	x27, x28, [sp, #64]
   1d4fc:	b	1d814 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa6c>
   1d500:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d504:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d508:	ldr	x1, [x1, #4016]
   1d50c:	str	x0, [x1]
   1d510:	b	1d3ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x644>
   1d514:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d518:	add	x0, x0, #0x338
   1d51c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1d520:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d524:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d528:	ldr	x0, [x0, #4016]
   1d52c:	ldr	x0, [x0]
   1d530:	cbz	x0, 1d594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7ec>
   1d534:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d538:	ldr	x0, [x0, #4016]
   1d53c:	ldr	x0, [x0]
   1d540:	sub	x1, x0, #0x1
   1d544:	tst	x1, x0
   1d548:	b.ne	1d5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x800>  // b.any
   1d54c:	add	x25, x0, #0x817
   1d550:	neg	x0, x0
   1d554:	and	x25, x25, x0
   1d558:	mov	w2, #0x0                   	// #0
   1d55c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d560:	add	x1, x1, #0x350
   1d564:	mov	x0, x25
   1d568:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1d56c:	mov	x26, x0
   1d570:	mov	x2, #0x0                   	// #0
   1d574:	mov	x1, x20
   1d578:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1d57c:	mov	x1, x24
   1d580:	mov	x0, x20
   1d584:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d588:	mov	x24, x25
   1d58c:	mov	x20, x26
   1d590:	b	1d448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a0>
   1d594:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d598:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d59c:	ldr	x1, [x1, #4016]
   1d5a0:	str	x0, [x1]
   1d5a4:	b	1d534 <__sanitizer_get_module_and_offset_for_pc@@Base+0x78c>
   1d5a8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d5ac:	add	x0, x0, #0x338
   1d5b0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1d5b4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d5b8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d5bc:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d5c0:	ldr	x1, [x1, #4016]
   1d5c4:	str	x0, [x1]
   1d5c8:	cmp	x22, x0
   1d5cc:	b.cc	1d4b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x708>  // b.lo, b.ul, b.last
   1d5d0:	str	xzr, [sp, #136]
   1d5d4:	str	xzr, [sp, #144]
   1d5d8:	str	xzr, [sp, #128]
   1d5dc:	cbnz	x0, 1d88c <__sanitizer_get_module_and_offset_for_pc@@Base+0xae4>
   1d5e0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d5e4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d5e8:	ldr	x1, [x1, #4016]
   1d5ec:	str	x0, [x1]
   1d5f0:	b	1d88c <__sanitizer_get_module_and_offset_for_pc@@Base+0xae4>
   1d5f4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d5f8:	add	x0, x0, #0x338
   1d5fc:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1d600:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d604:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d608:	ldr	x0, [x0, #4016]
   1d60c:	ldr	x0, [x0]
   1d610:	cbz	x0, 1d674 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8cc>
   1d614:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d618:	ldr	x0, [x0, #4016]
   1d61c:	ldr	x0, [x0]
   1d620:	sub	x1, x0, #0x1
   1d624:	tst	x1, x0
   1d628:	b.ne	1d688 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e0>  // b.any
   1d62c:	add	x21, x0, #0x3ff
   1d630:	neg	x0, x0
   1d634:	and	x21, x21, x0
   1d638:	mov	w2, #0x0                   	// #0
   1d63c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d640:	add	x1, x1, #0x350
   1d644:	mov	x0, x21
   1d648:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1d64c:	mov	x25, x0
   1d650:	ldr	x2, [sp, #144]
   1d654:	ldr	x1, [sp, #128]
   1d658:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1d65c:	ldr	x1, [sp, #136]
   1d660:	ldr	x0, [sp, #128]
   1d664:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d668:	str	x25, [sp, #128]
   1d66c:	str	x21, [sp, #136]
   1d670:	b	1d8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb54>
   1d674:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1d678:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d67c:	ldr	x1, [x1, #4016]
   1d680:	str	x0, [x1]
   1d684:	b	1d614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x86c>
   1d688:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d68c:	add	x0, x0, #0x338
   1d690:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1d694:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d698:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d69c:	add	x1, x1, #0xce8
   1d6a0:	add	x0, sp, #0x80
   1d6a4:	bl	1a490 <OnPrint@@Base+0x46c>
   1d6a8:	ldr	x1, [sp, #128]
   1d6ac:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d6b0:	add	x0, x0, #0x288
   1d6b4:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1d6b8:	ldr	x1, [sp, #136]
   1d6bc:	ldr	x0, [sp, #128]
   1d6c0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d6c4:	b	1d4b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x708>
   1d6c8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d6cc:	add	x1, x1, #0xb50
   1d6d0:	add	x0, sp, #0x80
   1d6d4:	bl	1a490 <OnPrint@@Base+0x46c>
   1d6d8:	b	1d6a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x900>
   1d6dc:	ldr	x0, [x19, #8]
   1d6e0:	bl	16b6c <__sanitizer_set_report_fd@@Base+0x3d28>
   1d6e4:	b	1d4c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x718>
   1d6e8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d6ec:	add	x1, x1, #0x2f0
   1d6f0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d6f4:	add	x0, x0, #0x288
   1d6f8:	bl	1a368 <OnPrint@@Base+0x344>
   1d6fc:	mov	w7, w20
   1d700:	ldr	x6, [x19, #32]
   1d704:	ldr	x5, [x19, #40]
   1d708:	ldr	x4, [x19, #24]
   1d70c:	ldr	x3, [x19, #16]
   1d710:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d714:	add	x2, x2, #0xc50
   1d718:	add	x2, x2, #0x10
   1d71c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d720:	ldr	x0, [x0, #4024]
   1d724:	ldr	x1, [x0]
   1d728:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d72c:	add	x0, x0, #0xb88
   1d730:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1d734:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d738:	add	x1, x1, #0x300
   1d73c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d740:	add	x0, x0, #0x288
   1d744:	bl	1a368 <OnPrint@@Base+0x344>
   1d748:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d74c:	ldr	x0, [x0, #4016]
   1d750:	ldr	x0, [x0]
   1d754:	cbz	x0, 1d240 <__sanitizer_get_module_and_offset_for_pc@@Base+0x498>
   1d758:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d75c:	ldr	x0, [x0, #4016]
   1d760:	ldr	x2, [x0]
   1d764:	sub	x0, x2, #0x1
   1d768:	tst	x0, x2
   1d76c:	b.ne	1d254 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac>  // b.any
   1d770:	add	x23, x2, #0x817
   1d774:	neg	x2, x2
   1d778:	and	x23, x23, x2
   1d77c:	mov	w2, #0x0                   	// #0
   1d780:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d784:	add	x1, x1, #0x350
   1d788:	mov	x0, x23
   1d78c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1d790:	mov	x20, x0
   1d794:	mov	x2, #0x0                   	// #0
   1d798:	mov	x1, #0x0                   	// #0
   1d79c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1d7a0:	mov	x1, #0x0                   	// #0
   1d7a4:	mov	x0, #0x0                   	// #0
   1d7a8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d7ac:	cmp	x23, #0x817
   1d7b0:	b.ls	1d26c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c4>  // b.plast
   1d7b4:	mov	x2, #0x818                 	// #2072
   1d7b8:	mov	w1, #0x0                   	// #0
   1d7bc:	mov	x0, x20
   1d7c0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1d7c4:	add	x0, x20, #0x10
   1d7c8:	str	x0, [x20]
   1d7cc:	str	wzr, [x20, #8]
   1d7d0:	str	wzr, [x20, #12]
   1d7d4:	str	xzr, [x20, #2064]
   1d7d8:	mov	x2, x20
   1d7dc:	mov	x1, x22
   1d7e0:	mov	x0, x19
   1d7e4:	blr	x21
   1d7e8:	mov	x0, x20
   1d7ec:	bl	1c1b4 <OnPrint@@Base+0x2190>
   1d7f0:	mov	x2, #0x0                   	// #0
   1d7f4:	mov	x1, x20
   1d7f8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d7fc:	add	x0, x0, #0xc50
   1d800:	add	x0, x0, #0x10
   1d804:	bl	1d0f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   1d808:	mov	x1, x23
   1d80c:	mov	x0, x20
   1d810:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d814:	ldp	x21, x22, [sp, #16]
   1d818:	ldp	x23, x24, [sp, #32]
   1d81c:	ldr	x30, [sp, #80]
   1d820:	ldp	x19, x20, [sp], #208
   1d824:	ret
   1d828:	asr	w4, w21, #4
   1d82c:	and	w5, w21, #0xf
   1d830:	mov	x3, x28
   1d834:	adrp	x6, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d838:	add	x6, x6, #0x300
   1d83c:	mov	x2, x25
   1d840:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d844:	add	x1, x1, #0xb40
   1d848:	add	x0, sp, #0x80
   1d84c:	bl	1a490 <OnPrint@@Base+0x46c>
   1d850:	add	x22, x22, #0x1
   1d854:	cmp	x26, x22
   1d858:	b.eq	1d698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8f0>  // b.none
   1d85c:	ldrb	w21, [x22]
   1d860:	bl	1d098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   1d864:	and	w0, w0, #0xff
   1d868:	cbnz	w0, 1d828 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa80>
   1d86c:	asr	w4, w21, #4
   1d870:	and	w5, w21, #0xf
   1d874:	mov	x3, x27
   1d878:	mov	x6, x25
   1d87c:	b	1d83c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa94>
   1d880:	str	xzr, [sp, #136]
   1d884:	str	xzr, [sp, #144]
   1d888:	str	xzr, [sp, #128]
   1d88c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d890:	ldr	x0, [x0, #4016]
   1d894:	ldr	x0, [x0]
   1d898:	sub	x1, x0, #0x1
   1d89c:	tst	x1, x0
   1d8a0:	b.ne	1d5f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x84c>  // b.any
   1d8a4:	add	x21, x0, #0x3ff
   1d8a8:	neg	x0, x0
   1d8ac:	and	x21, x21, x0
   1d8b0:	mov	w2, #0x0                   	// #0
   1d8b4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d8b8:	add	x1, x1, #0x350
   1d8bc:	mov	x0, x21
   1d8c0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1d8c4:	mov	x25, x0
   1d8c8:	ldr	x2, [sp, #144]
   1d8cc:	ldr	x1, [sp, #128]
   1d8d0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1d8d4:	ldr	x1, [sp, #136]
   1d8d8:	ldr	x0, [sp, #128]
   1d8dc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1d8e0:	str	x25, [sp, #128]
   1d8e4:	str	x21, [sp, #136]
   1d8e8:	ldr	x0, [sp, #144]
   1d8ec:	cmp	x0, #0x3ff
   1d8f0:	b.hi	1d918 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>  // b.pmore
   1d8f4:	cmp	x21, #0x3ff
   1d8f8:	b.ls	1d604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x85c>  // b.plast
   1d8fc:	ldr	x0, [sp, #144]
   1d900:	mov	x2, #0x400                 	// #1024
   1d904:	sub	x2, x2, x0
   1d908:	mov	w1, #0x0                   	// #0
   1d90c:	ldr	x3, [sp, #128]
   1d910:	add	x0, x3, x0
   1d914:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1d918:	mov	x0, #0x400                 	// #1024
   1d91c:	str	x0, [sp, #144]
   1d920:	str	xzr, [sp, #152]
   1d924:	ldr	x0, [sp, #128]
   1d928:	strb	wzr, [x0]
   1d92c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d930:	add	x1, x1, #0xb18
   1d934:	add	x0, sp, #0x80
   1d938:	bl	1a490 <OnPrint@@Base+0x46c>
   1d93c:	mov	x1, #0x10                  	// #16
   1d940:	mov	x0, x22
   1d944:	bl	18e38 <__sanitizer_set_report_fd@@Base+0x5ff4>
   1d948:	and	w0, w0, #0xff
   1d94c:	cbz	w0, 1d6c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x920>
   1d950:	add	x26, x22, #0x10
   1d954:	adrp	x28, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d958:	add	x28, x28, #0xa48
   1d95c:	adrp	x27, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1d960:	add	x27, x27, #0x640
   1d964:	mov	x25, x27
   1d968:	b	1d85c <__sanitizer_get_module_and_offset_for_pc@@Base+0xab4>
   1d96c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d970:	add	x1, x1, #0x2f0
   1d974:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d978:	add	x0, x0, #0x288
   1d97c:	bl	1a368 <OnPrint@@Base+0x344>
   1d980:	mov	x0, x19
   1d984:	bl	187ec <__sanitizer_set_report_fd@@Base+0x59a8>
   1d988:	mov	x23, x0
   1d98c:	mov	w7, w20
   1d990:	ldr	x6, [x19, #32]
   1d994:	ldr	x5, [x19, #40]
   1d998:	ldr	x4, [x19, #24]
   1d99c:	ldr	x3, [x19, #16]
   1d9a0:	mov	x2, x0
   1d9a4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d9a8:	ldr	x0, [x0, #4024]
   1d9ac:	ldr	x1, [x0]
   1d9b0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1d9b4:	add	x0, x0, #0xbc0
   1d9b8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1d9bc:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d9c0:	add	x1, x1, #0x300
   1d9c4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1d9c8:	add	x0, x0, #0x288
   1d9cc:	bl	1a368 <OnPrint@@Base+0x344>
   1d9d0:	ldr	x20, [x19, #24]
   1d9d4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d9d8:	ldr	x0, [x0, #4016]
   1d9dc:	ldr	x0, [x0]
   1d9e0:	cbz	x0, 1d380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d8>
   1d9e4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1d9e8:	ldr	x0, [x0, #4016]
   1d9ec:	ldr	x0, [x0]
   1d9f0:	cmp	x20, x0
   1d9f4:	b.cc	1d394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec>  // b.lo, b.ul, b.last
   1d9f8:	ldrb	w0, [x19, #48]
   1d9fc:	cbz	w0, 1da58 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcb0>
   1da00:	ldr	w0, [x19, #52]
   1da04:	cmp	w0, #0x2
   1da08:	b.eq	1d3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fc>  // b.none
   1da0c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1da10:	add	x2, x1, #0xa40
   1da14:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1da18:	add	x1, x1, #0xa38
   1da1c:	cmp	w0, #0x1
   1da20:	csel	x1, x1, x2, eq  // eq = none
   1da24:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1da28:	add	x0, x0, #0xa80
   1da2c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1da30:	ldr	x20, [x19, #16]
   1da34:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1da38:	ldr	x0, [x0, #4016]
   1da3c:	ldr	x0, [x0]
   1da40:	cbz	x0, 1d3b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x608>
   1da44:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1da48:	ldr	x0, [x0, #4016]
   1da4c:	ldr	x0, [x0]
   1da50:	cmp	x20, x0
   1da54:	b.cc	1d3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61c>  // b.lo, b.ul, b.last
   1da58:	ldr	x20, [x19, #24]
   1da5c:	mov	w1, #0x1                   	// #1
   1da60:	add	x0, sp, #0x60
   1da64:	bl	1a864 <OnPrint@@Base+0x840>
   1da68:	str	xzr, [sp, #152]
   1da6c:	str	xzr, [sp, #160]
   1da70:	str	xzr, [sp, #200]
   1da74:	add	x26, sp, #0x80
   1da78:	add	x25, sp, #0x60
   1da7c:	adrp	x24, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1da80:	add	x24, x24, #0xad8
   1da84:	mov	x1, x26
   1da88:	mov	x0, x25
   1da8c:	bl	1aea8 <OnPrint@@Base+0xe84>
   1da90:	and	w1, w0, #0xff
   1da94:	cbz	w1, 1d3d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62c>
   1da98:	ldr	x0, [sp, #128]
   1da9c:	cmp	x20, x0
   1daa0:	b.cc	1da84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>  // b.lo, b.ul, b.last
   1daa4:	ldr	x0, [sp, #136]
   1daa8:	cmp	x20, x0
   1daac:	b.cs	1da84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>  // b.hs, b.nlast
   1dab0:	ldr	x0, [sp, #168]
   1dab4:	tbnz	w0, #2, 1da84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>
   1dab8:	mov	x0, x24
   1dabc:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1dac0:	b	1da84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>
   1dac4:	stp	x19, x20, [sp, #-32]!
   1dac8:	str	x30, [sp, #16]
   1dacc:	bl	189c4 <__sanitizer_set_report_fd@@Base+0x5b80>
   1dad0:	mov	x20, x0
   1dad4:	adrp	x19, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1dad8:	add	x19, x19, #0x280
   1dadc:	b	1db00 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>
   1dae0:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1dae4:	add	x0, x0, #0x280
   1dae8:	add	x0, x0, #0x8
   1daec:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   1daf0:	b	1db40 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd98>
   1daf4:	cmp	x20, x1
   1daf8:	b.eq	1db4c <__sanitizer_get_module_and_offset_for_pc@@Base+0xda4>  // b.none
   1dafc:	bl	156c4 <__sanitizer_set_report_fd@@Base+0x2880>
   1db00:	ldxr	x1, [x19]
   1db04:	cbnz	x1, 1db10 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd68>
   1db08:	stlxr	w0, x20, [x19]
   1db0c:	cbnz	w0, 1db00 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>
   1db10:	dmb	ish
   1db14:	cbnz	x1, 1daf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4c>
   1db18:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1db1c:	add	x0, x0, #0x280
   1db20:	add	x0, x0, #0x8
   1db24:	mov	w2, #0x1                   	// #1
   1db28:	ldxrb	w1, [x0]
   1db2c:	stxrb	w3, w2, [x0]
   1db30:	cbnz	w3, 1db28 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd80>
   1db34:	dmb	ish
   1db38:	and	w0, w1, #0xff
   1db3c:	cbnz	w0, 1dae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd38>
   1db40:	ldr	x30, [sp, #16]
   1db44:	ldp	x19, x20, [sp], #32
   1db48:	ret
   1db4c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1db50:	ldr	x0, [x0, #4024]
   1db54:	ldr	x19, [x0]
   1db58:	mov	x0, x19
   1db5c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1db60:	mov	x1, x0
   1db64:	mov	x0, x19
   1db68:	bl	12338 <__sanitizer_cov_dump@@Base+0x1e08>
   1db6c:	mov	x1, #0x2b                  	// #43
   1db70:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1db74:	add	x0, x0, #0xc50
   1db78:	add	x0, x0, #0x20
   1db7c:	bl	12338 <__sanitizer_cov_dump@@Base+0x1e08>
   1db80:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1db84:	ldr	x0, [x0, #4056]
   1db88:	ldr	w0, [x0, #216]
   1db8c:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x288c>
   1db90:	stp	x19, x20, [sp, #-112]!
   1db94:	stp	x21, x22, [sp, #16]
   1db98:	stp	x23, x30, [sp, #32]
   1db9c:	mov	x23, x0
   1dba0:	mov	x19, x1
   1dba4:	mov	w20, w2
   1dba8:	mov	x21, x3
   1dbac:	mov	x22, x4
   1dbb0:	bl	1d174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc>
   1dbb4:	add	x0, sp, #0x68
   1dbb8:	bl	1dac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd1c>
   1dbbc:	str	x23, [sp, #48]
   1dbc0:	str	x19, [sp, #56]
   1dbc4:	add	x19, sp, #0x30
   1dbc8:	mov	x0, x19
   1dbcc:	bl	187c0 <__sanitizer_set_report_fd@@Base+0x597c>
   1dbd0:	str	x0, [sp, #64]
   1dbd4:	mov	x0, x19
   1dbd8:	bl	187cc <__sanitizer_set_report_fd@@Base+0x5988>
   1dbdc:	strb	w0, [sp, #96]
   1dbe0:	mov	x0, x19
   1dbe4:	bl	16b28 <__sanitizer_set_report_fd@@Base+0x3ce4>
   1dbe8:	str	w0, [sp, #100]
   1dbec:	mov	x0, x19
   1dbf0:	bl	16b70 <__sanitizer_set_report_fd@@Base+0x3d2c>
   1dbf4:	mov	x3, x22
   1dbf8:	mov	x2, x21
   1dbfc:	mov	w1, w20
   1dc00:	mov	x0, x19
   1dc04:	bl	1d1b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408>
   1dc08:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1dc0c:	add	x0, x0, #0xc00
   1dc10:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1dc14:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1dc18:	dmb	ish
   1dc1c:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1dc20:	add	x1, x0, #0x280
   1dc24:	strb	wzr, [x1, #8]
   1dc28:	str	xzr, [x0, #640]
   1dc2c:	ret
   1dc30:	and	w0, w0, #0x6
   1dc34:	cmp	w0, #0x6
   1dc38:	b.eq	1dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe98>  // b.none
   1dc3c:	ret
   1dc40:	stp	x29, x30, [sp, #-96]!
   1dc44:	mov	x29, sp
   1dc48:	stp	x19, x20, [sp, #16]
   1dc4c:	stp	x21, x22, [sp, #32]
   1dc50:	stp	x23, x24, [sp, #48]
   1dc54:	mov	x20, x30
   1dc58:	add	x0, x29, #0x58
   1dc5c:	bl	1dac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd1c>
   1dc60:	bl	1d098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   1dc64:	and	w22, w0, #0xff
   1dc68:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1dc6c:	ldr	x1, [x1, #4016]
   1dc70:	ldr	x0, [x1]
   1dc74:	cbz	x0, 1dd70 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfc8>
   1dc78:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1dc7c:	ldr	x0, [x0, #4016]
   1dc80:	ldr	x2, [x0]
   1dc84:	sub	x0, x2, #0x1
   1dc88:	tst	x0, x2
   1dc8c:	b.ne	1dd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfdc>  // b.any
   1dc90:	add	x21, x2, #0x817
   1dc94:	neg	x2, x2
   1dc98:	and	x21, x21, x2
   1dc9c:	mov	w2, #0x0                   	// #0
   1dca0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1dca4:	add	x1, x1, #0x350
   1dca8:	mov	x0, x21
   1dcac:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1dcb0:	mov	x19, x0
   1dcb4:	mov	x2, #0x0                   	// #0
   1dcb8:	mov	x1, #0x0                   	// #0
   1dcbc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1dcc0:	mov	x1, #0x0                   	// #0
   1dcc4:	mov	x0, #0x0                   	// #0
   1dcc8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1dccc:	cmp	x21, #0x817
   1dcd0:	b.ls	1dd94 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfec>  // b.plast
   1dcd4:	mov	x2, #0x818                 	// #2072
   1dcd8:	mov	w1, #0x0                   	// #0
   1dcdc:	mov	x0, x19
   1dce0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1dce4:	add	x0, x19, #0x10
   1dce8:	str	x0, [x19]
   1dcec:	str	wzr, [x19, #8]
   1dcf0:	str	wzr, [x19, #12]
   1dcf4:	str	xzr, [x19, #2064]
   1dcf8:	str	xzr, [x29, #80]
   1dcfc:	str	xzr, [x29, #72]
   1dd00:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1dd04:	ldr	x0, [x0, #4056]
   1dd08:	ldrb	w23, [x0, #33]
   1dd0c:	cbnz	w23, 1de28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1080>
   1dd10:	mov	w7, w23
   1dd14:	ldr	x6, [x29, #72]
   1dd18:	ldr	x5, [x29, #80]
   1dd1c:	mov	x4, #0x0                   	// #0
   1dd20:	mov	x3, x29
   1dd24:	mov	x2, x20
   1dd28:	mov	w1, #0x100                 	// #256
   1dd2c:	mov	x0, x19
   1dd30:	bl	1c764 <OnPrint@@Base+0x2740>
   1dd34:	cbnz	w22, 1de3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1094>
   1dd38:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1dd3c:	add	x20, x1, #0x640
   1dd40:	mov	x1, x20
   1dd44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1dd48:	add	x0, x0, #0x288
   1dd4c:	bl	1a368 <OnPrint@@Base+0x344>
   1dd50:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1dd54:	ldr	x0, [x0, #4024]
   1dd58:	ldr	x1, [x0]
   1dd5c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1dd60:	add	x0, x0, #0xc20
   1dd64:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1dd68:	mov	x1, x20
   1dd6c:	b	1de70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   1dd70:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1dd74:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1dd78:	ldr	x1, [x1, #4016]
   1dd7c:	str	x0, [x1]
   1dd80:	b	1dc78 <__sanitizer_get_module_and_offset_for_pc@@Base+0xed0>
   1dd84:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1dd88:	add	x0, x0, #0x338
   1dd8c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1dd90:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1dd94:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1dd98:	ldr	x0, [x0, #4016]
   1dd9c:	ldr	x0, [x0]
   1dda0:	cbz	x0, 1de04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x105c>
   1dda4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1dda8:	ldr	x0, [x0, #4016]
   1ddac:	ldr	x0, [x0]
   1ddb0:	sub	x1, x0, #0x1
   1ddb4:	tst	x1, x0
   1ddb8:	b.ne	1de18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1070>  // b.any
   1ddbc:	add	x23, x0, #0x817
   1ddc0:	neg	x0, x0
   1ddc4:	and	x23, x23, x0
   1ddc8:	mov	w2, #0x0                   	// #0
   1ddcc:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ddd0:	add	x1, x1, #0x350
   1ddd4:	mov	x0, x23
   1ddd8:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1dddc:	mov	x24, x0
   1dde0:	mov	x2, #0x0                   	// #0
   1dde4:	mov	x1, x19
   1dde8:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1ddec:	mov	x1, x21
   1ddf0:	mov	x0, x19
   1ddf4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1ddf8:	mov	x21, x23
   1ddfc:	mov	x19, x24
   1de00:	b	1dcd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf2c>
   1de04:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1de08:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1de0c:	ldr	x1, [x1, #4016]
   1de10:	str	x0, [x1]
   1de14:	b	1dda4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>
   1de18:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1de1c:	add	x0, x0, #0x338
   1de20:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1de24:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1de28:	add	x2, x29, #0x48
   1de2c:	add	x1, x29, #0x50
   1de30:	mov	w0, #0x0                   	// #0
   1de34:	bl	171e4 <__sanitizer_set_report_fd@@Base+0x43a0>
   1de38:	b	1dd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf68>
   1de3c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1de40:	add	x1, x1, #0x2f0
   1de44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1de48:	add	x0, x0, #0x288
   1de4c:	bl	1a368 <OnPrint@@Base+0x344>
   1de50:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1de54:	ldr	x0, [x0, #4024]
   1de58:	ldr	x1, [x0]
   1de5c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1de60:	add	x0, x0, #0xc20
   1de64:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1de68:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1de6c:	add	x1, x1, #0x300
   1de70:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1de74:	add	x0, x0, #0x288
   1de78:	bl	1a368 <OnPrint@@Base+0x344>
   1de7c:	mov	x0, x19
   1de80:	bl	1c1b4 <OnPrint@@Base+0x2190>
   1de84:	mov	x2, #0x0                   	// #0
   1de88:	mov	x1, x19
   1de8c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1de90:	add	x0, x0, #0xc10
   1de94:	bl	1d0f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   1de98:	mov	x1, x21
   1de9c:	mov	x0, x19
   1dea0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1dea4:	add	x0, x29, #0x58
   1dea8:	bl	1dc18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>
   1deac:	ldp	x19, x20, [sp, #16]
   1deb0:	ldp	x21, x22, [sp, #32]
   1deb4:	ldp	x23, x24, [sp, #48]
   1deb8:	ldp	x29, x30, [sp], #96
   1debc:	ret
   1dec0:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1dec4:	add	x0, x0, #0x280
   1dec8:	ldrb	w3, [x0, #8]
   1decc:	and	x3, x3, #0xff
   1ded0:	cmp	x3, #0x1
   1ded4:	b.ne	1dedc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1134>  // b.any
   1ded8:	ret
   1dedc:	str	x30, [sp, #-16]!
   1dee0:	mov	x4, #0x1                   	// #1
   1dee4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1dee8:	add	x2, x2, #0x9c0
   1deec:	mov	w1, #0x2a                  	// #42
   1def0:	adrp	x0, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1def4:	add	x0, x0, #0x9f8
   1def8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1defc:	stp	x19, x20, [sp, #-32]!
   1df00:	str	x30, [sp, #24]
   1df04:	mov	x19, x0
   1df08:	cbz	x0, 1df44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x119c>
   1df0c:	mov	x20, x1
   1df10:	cbz	x1, 1df44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x119c>
   1df14:	str	x21, [sp, #16]
   1df18:	mov	x0, x1
   1df1c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1df20:	mov	x21, x0
   1df24:	mov	x2, x0
   1df28:	mov	x1, x20
   1df2c:	mov	x0, x19
   1df30:	bl	146fc <__sanitizer_set_report_fd@@Base+0x18b8>
   1df34:	add	x21, x19, x21
   1df38:	cmp	w0, #0x0
   1df3c:	csel	x19, x21, x19, eq  // eq = none
   1df40:	ldr	x21, [sp, #16]
   1df44:	mov	x0, x19
   1df48:	ldr	x30, [sp, #24]
   1df4c:	ldp	x19, x20, [sp], #32
   1df50:	ret
   1df54:	stp	x19, x20, [sp, #-80]!
   1df58:	stp	x21, x22, [sp, #16]
   1df5c:	str	x30, [sp, #64]
   1df60:	mov	x22, x2
   1df64:	ldrb	w2, [x1]
   1df68:	cbz	w2, 1e060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12b8>
   1df6c:	stp	x23, x24, [sp, #32]
   1df70:	stp	x25, x26, [sp, #48]
   1df74:	mov	x21, x0
   1df78:	mov	x20, x1
   1df7c:	mov	x24, x3
   1df80:	adrp	x25, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1df84:	add	x25, x25, #0xca8
   1df88:	adrp	x23, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1df8c:	add	x23, x23, #0x288
   1df90:	adrp	x26, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1df94:	b	1dfb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1210>
   1df98:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1df9c:	add	x1, x1, #0x280
   1dfa0:	mov	x0, x21
   1dfa4:	bl	1a490 <OnPrint@@Base+0x46c>
   1dfa8:	mov	x19, x20
   1dfac:	add	x20, x19, #0x1
   1dfb0:	ldrb	w2, [x19, #1]
   1dfb4:	cbz	w2, 1e058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12b0>
   1dfb8:	cmp	w2, #0x25
   1dfbc:	b.ne	1df98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11f0>  // b.any
   1dfc0:	add	x19, x20, #0x1
   1dfc4:	ldrb	w1, [x20, #1]
   1dfc8:	cmp	w1, #0x6c
   1dfcc:	b.eq	1e030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1288>  // b.none
   1dfd0:	b.hi	1dff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1250>  // b.pmore
   1dfd4:	cmp	w1, #0x25
   1dfd8:	b.eq	1e020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1278>  // b.none
   1dfdc:	cmp	w1, #0x67
   1dfe0:	b.ne	1e044 <__sanitizer_get_module_and_offset_for_pc@@Base+0x129c>  // b.any
   1dfe4:	ldr	x2, [x22, #40]
   1dfe8:	mov	x1, x23
   1dfec:	mov	x0, x21
   1dff0:	bl	1a490 <OnPrint@@Base+0x46c>
   1dff4:	b	1dfac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   1dff8:	cmp	w1, #0x73
   1dffc:	b.ne	1e044 <__sanitizer_get_module_and_offset_for_pc@@Base+0x129c>  // b.any
   1e000:	mov	x1, x24
   1e004:	ldr	x0, [x22, #24]
   1e008:	bl	efec <__sancov_default_options@@Base+0x22f0>
   1e00c:	mov	x2, x0
   1e010:	mov	x1, x23
   1e014:	mov	x0, x21
   1e018:	bl	1a490 <OnPrint@@Base+0x46c>
   1e01c:	b	1dfac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   1e020:	add	x1, x26, #0xca0
   1e024:	mov	x0, x21
   1e028:	bl	1a490 <OnPrint@@Base+0x46c>
   1e02c:	b	1dfac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   1e030:	ldr	x2, [x22, #32]
   1e034:	mov	x1, x25
   1e038:	mov	x0, x21
   1e03c:	bl	1a490 <OnPrint@@Base+0x46c>
   1e040:	b	1dfac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   1e044:	mov	w2, w1
   1e048:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e04c:	add	x0, x0, #0xcb0
   1e050:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1e054:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1e058:	ldp	x23, x24, [sp, #32]
   1e05c:	ldp	x25, x26, [sp, #48]
   1e060:	ldp	x21, x22, [sp, #16]
   1e064:	ldr	x30, [sp, #64]
   1e068:	ldp	x19, x20, [sp], #80
   1e06c:	ret
   1e070:	stp	x19, x20, [sp, #-32]!
   1e074:	stp	x21, x30, [sp, #16]
   1e078:	mov	x21, x0
   1e07c:	mov	x0, x1
   1e080:	mov	w19, w2
   1e084:	mov	w20, w3
   1e088:	and	w4, w4, #0xff
   1e08c:	mov	x1, x5
   1e090:	cmp	w2, #0x0
   1e094:	ccmp	w4, #0x0, #0x4, gt
   1e098:	b.ne	1e0c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1320>  // b.any
   1e09c:	bl	efec <__sancov_default_options@@Base+0x22f0>
   1e0a0:	mov	x2, x0
   1e0a4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1e0a8:	add	x1, x1, #0x288
   1e0ac:	mov	x0, x21
   1e0b0:	bl	1a490 <OnPrint@@Base+0x46c>
   1e0b4:	cmp	w19, #0x0
   1e0b8:	b.gt	1e118 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1370>
   1e0bc:	ldp	x21, x30, [sp, #16]
   1e0c0:	ldp	x19, x20, [sp], #32
   1e0c4:	ret
   1e0c8:	bl	efec <__sancov_default_options@@Base+0x22f0>
   1e0cc:	mov	w3, w19
   1e0d0:	mov	x2, x0
   1e0d4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e0d8:	add	x1, x1, #0xcf0
   1e0dc:	mov	x0, x21
   1e0e0:	bl	1a490 <OnPrint@@Base+0x46c>
   1e0e4:	cmp	w20, #0x0
   1e0e8:	b.gt	1e100 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1358>
   1e0ec:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1e0f0:	add	x1, x1, #0x680
   1e0f4:	mov	x0, x21
   1e0f8:	bl	1a490 <OnPrint@@Base+0x46c>
   1e0fc:	b	1e0bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1314>
   1e100:	mov	w2, w20
   1e104:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e108:	add	x1, x1, #0xcf8
   1e10c:	mov	x0, x21
   1e110:	bl	1a490 <OnPrint@@Base+0x46c>
   1e114:	b	1e0ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   1e118:	mov	w2, w19
   1e11c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e120:	add	x1, x1, #0xd00
   1e124:	mov	x0, x21
   1e128:	bl	1a490 <OnPrint@@Base+0x46c>
   1e12c:	cmp	w20, #0x0
   1e130:	b.le	1e0bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1314>
   1e134:	mov	w2, w20
   1e138:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e13c:	add	x1, x1, #0xd00
   1e140:	mov	x0, x21
   1e144:	bl	1a490 <OnPrint@@Base+0x46c>
   1e148:	b	1e0bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1314>
   1e14c:	stp	x19, x20, [sp, #-32]!
   1e150:	stp	x21, x30, [sp, #16]
   1e154:	mov	x20, x0
   1e158:	mov	x0, x1
   1e15c:	mov	x21, x2
   1e160:	mov	w19, w3
   1e164:	mov	x1, x4
   1e168:	bl	efec <__sancov_default_options@@Base+0x22f0>
   1e16c:	mov	x2, x0
   1e170:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e174:	add	x1, x1, #0xd48
   1e178:	mov	x0, x20
   1e17c:	bl	1a490 <OnPrint@@Base+0x46c>
   1e180:	cbnz	w19, 1e1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13fc>
   1e184:	mov	x2, x21
   1e188:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e18c:	add	x1, x1, #0xd80
   1e190:	mov	x0, x20
   1e194:	bl	1a490 <OnPrint@@Base+0x46c>
   1e198:	ldp	x21, x30, [sp, #16]
   1e19c:	ldp	x19, x20, [sp], #32
   1e1a0:	ret
   1e1a4:	cmp	w19, #0x4
   1e1a8:	b.eq	1e250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a8>  // b.none
   1e1ac:	b.hi	1e1f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x144c>  // b.pmore
   1e1b0:	cmp	w19, #0x2
   1e1b4:	b.eq	1e25c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14b4>  // b.none
   1e1b8:	b.ls	1e1d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1428>  // b.plast
   1e1bc:	cmp	w19, #0x3
   1e1c0:	b.ne	1e230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   1e1c4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e1c8:	add	x2, x1, #0xd28
   1e1cc:	b	1e1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   1e1d0:	cmp	w19, #0x1
   1e1d4:	b.ne	1e230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   1e1d8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e1dc:	add	x2, x1, #0xd20
   1e1e0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e1e4:	add	x1, x1, #0xd78
   1e1e8:	mov	x0, x20
   1e1ec:	bl	1a490 <OnPrint@@Base+0x46c>
   1e1f0:	b	1e184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13dc>
   1e1f4:	cmp	w19, #0x7
   1e1f8:	b.eq	1e268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c0>  // b.none
   1e1fc:	b.ls	1e214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x146c>  // b.plast
   1e200:	cmp	w19, #0x8
   1e204:	b.ne	1e230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   1e208:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e20c:	add	x2, x1, #0xd40
   1e210:	b	1e1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   1e214:	cmp	w19, #0x5
   1e218:	b.eq	1e274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14cc>  // b.none
   1e21c:	cmp	w19, #0x6
   1e220:	b.ne	1e230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   1e224:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e228:	add	x2, x1, #0xd08
   1e22c:	b	1e1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   1e230:	mov	x4, #0x0                   	// #0
   1e234:	mov	x3, #0x0                   	// #0
   1e238:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e23c:	add	x2, x2, #0xd50
   1e240:	mov	w1, #0x2a9                 	// #681
   1e244:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1e248:	add	x0, x0, #0x380
   1e24c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e250:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e254:	add	x2, x2, #0xd18
   1e258:	b	1e1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   1e25c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e260:	add	x2, x2, #0xd10
   1e264:	b	1e1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   1e268:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e26c:	add	x2, x2, #0xd30
   1e270:	b	1e1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   1e274:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e278:	add	x2, x1, #0xd38
   1e27c:	b	1e1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   1e280:	stp	x19, x20, [sp, #-96]!
   1e284:	stp	x21, x22, [sp, #16]
   1e288:	stp	x25, x26, [sp, #48]
   1e28c:	stp	x27, x28, [sp, #64]
   1e290:	str	x30, [sp, #80]
   1e294:	mov	x20, x0
   1e298:	mov	x28, x1
   1e29c:	mov	w26, w2
   1e2a0:	mov	x21, x3
   1e2a4:	and	w27, w4, #0xff
   1e2a8:	mov	x22, x5
   1e2ac:	mov	x25, x6
   1e2b0:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   1e2b4:	add	x1, x1, #0xc20
   1e2b8:	mov	x0, x28
   1e2bc:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   1e2c0:	cbz	w0, 1e2d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x152c>
   1e2c4:	ldrb	w2, [x28]
   1e2c8:	cbz	w2, 1e5cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1824>
   1e2cc:	stp	x23, x24, [sp, #32]
   1e2d0:	b	1e2e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   1e2d4:	stp	x23, x24, [sp, #32]
   1e2d8:	adrp	x28, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e2dc:	add	x28, x28, #0xdc8
   1e2e0:	mov	w2, #0x20                  	// #32
   1e2e4:	adrp	x24, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e2e8:	add	x24, x24, #0xca8
   1e2ec:	adrp	x23, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e2f0:	add	x23, x23, #0xd90
   1e2f4:	b	1e318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1570>
   1e2f8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1e2fc:	add	x1, x1, #0x280
   1e300:	mov	x0, x20
   1e304:	bl	1a490 <OnPrint@@Base+0x46c>
   1e308:	mov	x19, x28
   1e30c:	add	x28, x19, #0x1
   1e310:	ldrb	w2, [x19, #1]
   1e314:	cbz	w2, 1e5c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>
   1e318:	cmp	w2, #0x25
   1e31c:	b.ne	1e2f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1550>  // b.any
   1e320:	add	x19, x28, #0x1
   1e324:	ldrb	w1, [x28, #1]
   1e328:	cmp	w1, #0x6c
   1e32c:	b.eq	1e4c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x171c>  // b.none
   1e330:	b.hi	1e3ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1644>  // b.pmore
   1e334:	cmp	w1, #0x4d
   1e338:	b.eq	1e56c <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c4>  // b.none
   1e33c:	b.ls	1e374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15cc>  // b.plast
   1e340:	cmp	w1, #0x63
   1e344:	b.eq	1e4d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1730>  // b.none
   1e348:	cmp	w1, #0x66
   1e34c:	b.ne	1e3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x161c>  // b.any
   1e350:	mov	x1, x25
   1e354:	ldr	x0, [x21, #32]
   1e358:	bl	1defc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1154>
   1e35c:	mov	x2, x0
   1e360:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1e364:	add	x1, x1, #0x288
   1e368:	mov	x0, x20
   1e36c:	bl	1a490 <OnPrint@@Base+0x46c>
   1e370:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e374:	cmp	w1, #0x46
   1e378:	b.eq	1e4ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1744>  // b.none
   1e37c:	cmp	w1, #0x4c
   1e380:	b.ne	1e3a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1600>  // b.any
   1e384:	ldr	x1, [x21, #48]
   1e388:	cbz	x1, 1e538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1790>
   1e38c:	mov	x5, x22
   1e390:	mov	w4, w27
   1e394:	ldr	w3, [x21, #60]
   1e398:	ldr	w2, [x21, #56]
   1e39c:	mov	x0, x20
   1e3a0:	bl	1e070 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c8>
   1e3a4:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e3a8:	cmp	w1, #0x25
   1e3ac:	b.ne	1e5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   1e3b0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e3b4:	add	x1, x1, #0xca0
   1e3b8:	mov	x0, x20
   1e3bc:	bl	1a490 <OnPrint@@Base+0x46c>
   1e3c0:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e3c4:	cmp	w1, #0x53
   1e3c8:	b.ne	1e5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   1e3cc:	mov	x5, x22
   1e3d0:	mov	w4, w27
   1e3d4:	ldr	w3, [x21, #60]
   1e3d8:	ldr	w2, [x21, #56]
   1e3dc:	ldr	x1, [x21, #48]
   1e3e0:	mov	x0, x20
   1e3e4:	bl	1e070 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c8>
   1e3e8:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e3ec:	cmp	w1, #0x70
   1e3f0:	b.eq	1e494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16ec>  // b.none
   1e3f4:	b.ls	1e42c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1684>  // b.plast
   1e3f8:	cmp	w1, #0x71
   1e3fc:	b.eq	1e4a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1700>  // b.none
   1e400:	cmp	w1, #0x73
   1e404:	b.ne	1e5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   1e408:	mov	x1, x22
   1e40c:	ldr	x0, [x21, #48]
   1e410:	bl	efec <__sancov_default_options@@Base+0x22f0>
   1e414:	mov	x2, x0
   1e418:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1e41c:	add	x1, x1, #0x288
   1e420:	mov	x0, x20
   1e424:	bl	1a490 <OnPrint@@Base+0x46c>
   1e428:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e42c:	cmp	w1, #0x6e
   1e430:	b.eq	1e47c <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d4>  // b.none
   1e434:	cmp	w1, #0x6f
   1e438:	b.ne	1e450 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a8>  // b.any
   1e43c:	ldr	x2, [x21, #16]
   1e440:	mov	x1, x23
   1e444:	mov	x0, x20
   1e448:	bl	1a490 <OnPrint@@Base+0x46c>
   1e44c:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e450:	cmp	w1, #0x6d
   1e454:	b.ne	1e5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   1e458:	mov	x1, x22
   1e45c:	ldr	x0, [x21, #8]
   1e460:	bl	efec <__sancov_default_options@@Base+0x22f0>
   1e464:	mov	x2, x0
   1e468:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1e46c:	add	x1, x1, #0x288
   1e470:	mov	x0, x20
   1e474:	bl	1a490 <OnPrint@@Base+0x46c>
   1e478:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e47c:	mov	w2, w26
   1e480:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e484:	add	x1, x1, #0xd88
   1e488:	mov	x0, x20
   1e48c:	bl	1a490 <OnPrint@@Base+0x46c>
   1e490:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e494:	ldr	x2, [x21]
   1e498:	mov	x1, x23
   1e49c:	mov	x0, x20
   1e4a0:	bl	1a490 <OnPrint@@Base+0x46c>
   1e4a4:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e4a8:	ldr	x2, [x21, #40]
   1e4ac:	cmn	x2, #0x1
   1e4b0:	csel	x2, x2, xzr, ne  // ne = any
   1e4b4:	mov	x1, x23
   1e4b8:	mov	x0, x20
   1e4bc:	bl	1a490 <OnPrint@@Base+0x46c>
   1e4c0:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e4c4:	ldr	w2, [x21, #56]
   1e4c8:	mov	x1, x24
   1e4cc:	mov	x0, x20
   1e4d0:	bl	1a490 <OnPrint@@Base+0x46c>
   1e4d4:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e4d8:	ldr	w2, [x21, #60]
   1e4dc:	mov	x1, x24
   1e4e0:	mov	x0, x20
   1e4e4:	bl	1a490 <OnPrint@@Base+0x46c>
   1e4e8:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e4ec:	ldr	x0, [x21, #32]
   1e4f0:	cbz	x0, 1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e4f4:	mov	x1, x25
   1e4f8:	bl	1defc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1154>
   1e4fc:	mov	x2, x0
   1e500:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e504:	add	x1, x1, #0xd98
   1e508:	mov	x0, x20
   1e50c:	bl	1a490 <OnPrint@@Base+0x46c>
   1e510:	ldr	x0, [x21, #48]
   1e514:	cbnz	x0, 1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e518:	ldr	x2, [x21, #40]
   1e51c:	cmn	x2, #0x1
   1e520:	b.eq	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>  // b.none
   1e524:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e528:	add	x1, x1, #0xda0
   1e52c:	mov	x0, x20
   1e530:	bl	1a490 <OnPrint@@Base+0x46c>
   1e534:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e538:	ldr	x1, [x21, #8]
   1e53c:	cbz	x1, 1e558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b0>
   1e540:	mov	x4, x22
   1e544:	ldr	w3, [x21, #24]
   1e548:	ldr	x2, [x21, #16]
   1e54c:	mov	x0, x20
   1e550:	bl	1e14c <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a4>
   1e554:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e558:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e55c:	add	x1, x1, #0xda8
   1e560:	mov	x0, x20
   1e564:	bl	1a490 <OnPrint@@Base+0x46c>
   1e568:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e56c:	ldr	x2, [x21]
   1e570:	tbnz	x2, #60, 1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e574:	ldr	x0, [x21, #8]
   1e578:	cbz	x0, 1e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17f8>
   1e57c:	bl	f058 <__sancov_default_options@@Base+0x235c>
   1e580:	adrp	x4, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1e584:	add	x4, x4, #0x640
   1e588:	ldr	w3, [x21, #24]
   1e58c:	ldr	x2, [x21, #16]
   1e590:	mov	x1, x0
   1e594:	mov	x0, x20
   1e598:	bl	1e14c <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a4>
   1e59c:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e5a0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e5a4:	add	x1, x1, #0xdc0
   1e5a8:	mov	x0, x20
   1e5ac:	bl	1a490 <OnPrint@@Base+0x46c>
   1e5b0:	b	1e30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   1e5b4:	mov	w2, w1
   1e5b8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e5bc:	add	x0, x0, #0xcb0
   1e5c0:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1e5c4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1e5c8:	ldp	x23, x24, [sp, #32]
   1e5cc:	ldp	x21, x22, [sp, #16]
   1e5d0:	ldp	x25, x26, [sp, #48]
   1e5d4:	ldp	x27, x28, [sp, #64]
   1e5d8:	ldr	x30, [sp, #80]
   1e5dc:	ldp	x19, x20, [sp], #96
   1e5e0:	ret
   1e5e4:	ldr	x0, [x0, #24]
   1e5e8:	ret
   1e5ec:	mov	x0, #0x22                  	// #34
   1e5f0:	ret
   1e5f4:	ldr	x4, [x0, #24]
   1e5f8:	cmp	x1, x4
   1e5fc:	b.cs	1e60c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1864>  // b.hs, b.nlast
   1e600:	ldr	x0, [x0, #8]
   1e604:	ldr	x0, [x0, x1, lsl #3]
   1e608:	ret
   1e60c:	str	x30, [sp, #-16]!
   1e610:	mov	x3, x1
   1e614:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e618:	add	x2, x2, #0xde0
   1e61c:	mov	w1, #0x202                 	// #514
   1e620:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e624:	add	x0, x0, #0xe08
   1e628:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e62c:	stp	x19, x20, [sp, #-336]!
   1e630:	stp	x21, x30, [sp, #16]
   1e634:	mov	x20, x2
   1e638:	mov	x21, x3
   1e63c:	ldr	x2, [x0]
   1e640:	ldr	x2, [x2, #24]
   1e644:	blr	x2
   1e648:	mov	x19, x0
   1e64c:	add	x0, sp, #0x40
   1e650:	str	x0, [sp, #40]
   1e654:	mov	x0, #0x110                 	// #272
   1e658:	str	x0, [sp, #48]
   1e65c:	add	x3, sp, #0x28
   1e660:	mov	x2, #0x1                   	// #1
   1e664:	mov	w1, w19
   1e668:	mov	w0, #0x4204                	// #16900
   1e66c:	bl	15ac8 <__sanitizer_set_report_fd@@Base+0x2c84>
   1e670:	add	x1, sp, #0x3c
   1e674:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   1e678:	and	w0, w0, #0xff
   1e67c:	cbz	w0, 1e6c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1918>
   1e680:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1e684:	ldr	x0, [x0, #3896]
   1e688:	ldr	w0, [x0]
   1e68c:	cbnz	w0, 1e6a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1900>
   1e690:	ldr	w0, [sp, #60]
   1e694:	cmp	w0, #0x3
   1e698:	csetm	w0, eq  // eq = none
   1e69c:	ldp	x21, x30, [sp, #16]
   1e6a0:	ldp	x19, x20, [sp], #336
   1e6a4:	ret
   1e6a8:	ldr	w2, [sp, #60]
   1e6ac:	mov	w1, w19
   1e6b0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e6b4:	add	x0, x0, #0xe60
   1e6b8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1e6bc:	b	1e690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e8>
   1e6c0:	ldr	x0, [sp, #312]
   1e6c4:	str	x0, [x21]
   1e6c8:	mov	x2, #0x110                 	// #272
   1e6cc:	add	x1, sp, #0x40
   1e6d0:	mov	x0, x20
   1e6d4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1e6d8:	mov	w0, #0x1                   	// #1
   1e6dc:	b	1e69c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18f4>
   1e6e0:	stp	x19, x20, [sp, #-96]!
   1e6e4:	stp	x21, x22, [sp, #16]
   1e6e8:	str	x30, [sp, #64]
   1e6ec:	mov	x21, x0
   1e6f0:	add	x22, x0, #0x8
   1e6f4:	ldr	x0, [x0, #32]
   1e6f8:	cbz	x0, 1e7b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a08>
   1e6fc:	stp	x23, x24, [sp, #32]
   1e700:	stp	x25, x26, [sp, #48]
   1e704:	mov	x20, #0x0                   	// #0
   1e708:	add	x23, sp, #0x5c
   1e70c:	adrp	x24, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1e710:	ldr	x25, [x24, #3896]
   1e714:	adrp	x26, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e718:	add	x26, x26, #0xeb8
   1e71c:	b	1e738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1990>
   1e720:	ldr	w0, [x25]
   1e724:	cbnz	w0, 1e794 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19ec>
   1e728:	add	x20, x20, #0x1
   1e72c:	ldr	x0, [x21, #32]
   1e730:	cmp	x20, x0
   1e734:	b.cs	1e7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a00>  // b.hs, b.nlast
   1e738:	mov	x1, x20
   1e73c:	mov	x0, x22
   1e740:	bl	1e5f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x184c>
   1e744:	mov	x19, x0
   1e748:	mov	x3, #0x0                   	// #0
   1e74c:	mov	x2, #0x0                   	// #0
   1e750:	mov	w1, w0
   1e754:	mov	w0, #0x11                  	// #17
   1e758:	bl	15ac8 <__sanitizer_set_report_fd@@Base+0x2c84>
   1e75c:	mov	x1, x23
   1e760:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   1e764:	and	w0, w0, #0xff
   1e768:	cbnz	w0, 1e720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1978>
   1e76c:	ldr	x0, [x24, #3896]
   1e770:	ldr	w0, [x0]
   1e774:	sxtw	x0, w0
   1e778:	cmp	x0, #0x1
   1e77c:	b.ls	1e728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1980>  // b.plast
   1e780:	mov	w1, w19
   1e784:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e788:	add	x0, x0, #0xe98
   1e78c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1e790:	b	1e728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1980>
   1e794:	ldr	w2, [sp, #92]
   1e798:	mov	w1, w19
   1e79c:	mov	x0, x26
   1e7a0:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1e7a4:	b	1e728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1980>
   1e7a8:	ldp	x23, x24, [sp, #32]
   1e7ac:	ldp	x25, x26, [sp, #48]
   1e7b0:	ldp	x21, x22, [sp, #16]
   1e7b4:	ldr	x30, [sp, #64]
   1e7b8:	ldp	x19, x20, [sp], #96
   1e7bc:	ret
   1e7c0:	stp	x19, x20, [sp, #-48]!
   1e7c4:	stp	x21, x22, [sp, #16]
   1e7c8:	str	x30, [sp, #32]
   1e7cc:	mov	x20, x0
   1e7d0:	add	x21, x0, #0x8
   1e7d4:	ldr	x0, [x0, #32]
   1e7d8:	cbz	x0, 1e814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a6c>
   1e7dc:	mov	x19, #0x0                   	// #0
   1e7e0:	mov	w22, #0x8                   	// #8
   1e7e4:	mov	x1, x19
   1e7e8:	mov	x0, x21
   1e7ec:	bl	1e5f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x184c>
   1e7f0:	mov	x3, #0x0                   	// #0
   1e7f4:	mov	x2, #0x0                   	// #0
   1e7f8:	mov	w1, w0
   1e7fc:	mov	w0, w22
   1e800:	bl	15ac8 <__sanitizer_set_report_fd@@Base+0x2c84>
   1e804:	add	x19, x19, #0x1
   1e808:	ldr	x1, [x20, #32]
   1e80c:	cmp	x19, x1
   1e810:	b.cc	1e7e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a3c>  // b.lo, b.ul, b.last
   1e814:	ldp	x21, x22, [sp, #16]
   1e818:	ldr	x30, [sp, #32]
   1e81c:	ldp	x19, x20, [sp], #48
   1e820:	ret
   1e824:	stp	x19, x20, [sp, #-96]!
   1e828:	str	x30, [sp, #16]
   1e82c:	mov	w19, w0
   1e830:	str	x1, [sp, #40]
   1e834:	str	x2, [sp, #48]
   1e838:	add	x20, sp, #0x28
   1e83c:	mov	x0, x20
   1e840:	bl	187c0 <__sanitizer_set_report_fd@@Base+0x597c>
   1e844:	str	x0, [sp, #56]
   1e848:	mov	x0, x20
   1e84c:	bl	187cc <__sanitizer_set_report_fd@@Base+0x5988>
   1e850:	strb	w0, [sp, #88]
   1e854:	mov	x0, x20
   1e858:	bl	16b28 <__sanitizer_set_report_fd@@Base+0x3ce4>
   1e85c:	str	w0, [sp, #92]
   1e860:	mov	x0, x20
   1e864:	bl	16b70 <__sanitizer_set_report_fd@@Base+0x3d2c>
   1e868:	ldr	x4, [sp, #72]
   1e86c:	ldr	x3, [sp, #64]
   1e870:	ldr	x2, [sp, #56]
   1e874:	mov	w1, w19
   1e878:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e87c:	add	x0, x0, #0xee8
   1e880:	bl	1a368 <OnPrint@@Base+0x344>
   1e884:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e888:	ldr	x20, [x0, #656]
   1e88c:	cbz	x20, 1e8c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b20>
   1e890:	cmp	w19, #0x6
   1e894:	b.eq	1e8d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b30>  // b.none
   1e898:	mov	x0, x20
   1e89c:	bl	1e6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1938>
   1e8a0:	adrp	x0, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1258>
   1e8a4:	add	x0, x0, #0x8f4
   1e8a8:	bl	22eec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6144>
   1e8ac:	and	w0, w0, #0xff
   1e8b0:	cbz	w0, 1e8e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b3c>
   1e8b4:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e8b8:	str	xzr, [x0, #656]
   1e8bc:	ldr	x0, [x20]
   1e8c0:	mov	x1, #0x1                   	// #1
   1e8c4:	str	x1, [x0, #104]
   1e8c8:	cmp	w19, #0x6
   1e8cc:	cset	w0, ne  // ne = any
   1e8d0:	add	w0, w0, #0x1
   1e8d4:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x288c>
   1e8d8:	mov	x0, x20
   1e8dc:	bl	1e7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a18>
   1e8e0:	b	1e8a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af8>
   1e8e4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e8e8:	add	x0, x0, #0xf20
   1e8ec:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1e8f0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1e8f4:	stp	x19, x30, [sp, #-16]!
   1e8f8:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e8fc:	ldr	x19, [x0, #656]
   1e900:	cbz	x19, 1e91c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b74>
   1e904:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   1e908:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1e90c:	ldr	x1, [x1, #3848]
   1e910:	ldr	x1, [x1]
   1e914:	cmp	x0, x1
   1e918:	b.eq	1e924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>  // b.none
   1e91c:	ldp	x19, x30, [sp], #16
   1e920:	ret
   1e924:	mov	x0, x19
   1e928:	bl	1e7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a18>
   1e92c:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e930:	str	xzr, [x0, #656]
   1e934:	b	1e91c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b74>
   1e938:	stp	x19, x20, [sp, #-192]!
   1e93c:	stp	x21, x22, [sp, #16]
   1e940:	stp	x23, x24, [sp, #32]
   1e944:	str	x30, [sp, #48]
   1e948:	mov	x20, x0
   1e94c:	mov	x19, x1
   1e950:	mov	x4, #0x0                   	// #0
   1e954:	mov	x3, #0x0                   	// #0
   1e958:	mov	x2, #0x0                   	// #0
   1e95c:	mov	x1, #0x0                   	// #0
   1e960:	mov	w0, #0x3                   	// #3
   1e964:	bl	15b34 <__sanitizer_set_report_fd@@Base+0x2cf0>
   1e968:	mov	x22, x0
   1e96c:	cbz	w0, 1ead4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d2c>
   1e970:	add	x0, sp, #0x58
   1e974:	bl	15994 <__sanitizer_set_report_fd@@Base+0x2b50>
   1e978:	str	x20, [sp, #72]
   1e97c:	str	x19, [sp, #80]
   1e980:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   1e984:	str	x0, [sp, #184]
   1e988:	str	xzr, [sp, #176]
   1e98c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1e990:	ldr	x0, [x0, #4016]
   1e994:	ldr	x0, [x0]
   1e998:	cbz	x0, 1eaf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   1e99c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1e9a0:	ldr	x0, [x0, #4016]
   1e9a4:	ldr	x19, [x0]
   1e9a8:	add	x24, x19, #0x200, lsl #12
   1e9ac:	mov	w2, #0x0                   	// #0
   1e9b0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1e9b4:	add	x1, x1, #0xf50
   1e9b8:	mov	x0, x24
   1e9bc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1e9c0:	mov	x23, x0
   1e9c4:	mov	x1, x19
   1e9c8:	bl	18018 <__sanitizer_set_report_fd@@Base+0x51d4>
   1e9cc:	and	w0, w0, #0xff
   1e9d0:	cbz	w0, 1eb04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d5c>
   1e9d4:	add	x0, sp, #0x58
   1e9d8:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   1e9dc:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e9e0:	add	x0, x0, #0x290
   1e9e4:	add	x0, x0, #0x8
   1e9e8:	bl	15c64 <__sanitizer_set_report_fd@@Base+0x2e20>
   1e9ec:	mov	x19, #0x0                   	// #0
   1e9f0:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1e9f4:	add	x21, x21, #0xf0
   1e9f8:	adrp	x20, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e9fc:	add	x20, x20, #0x290
   1ea00:	add	x20, x20, #0x8
   1ea04:	ldr	w1, [x21, x19, lsl #2]
   1ea08:	mov	x0, x20
   1ea0c:	bl	15c94 <__sanitizer_set_report_fd@@Base+0x2e50>
   1ea10:	add	x19, x19, #0x1
   1ea14:	cmp	x19, #0x7
   1ea18:	b.ne	1ea04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c5c>  // b.any
   1ea1c:	adrp	x1, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1ea20:	add	x1, x1, #0x290
   1ea24:	add	x2, x1, #0x88
   1ea28:	add	x1, x1, #0x8
   1ea2c:	mov	w0, #0x0                   	// #0
   1ea30:	bl	15c50 <__sanitizer_set_report_fd@@Base+0x2e0c>
   1ea34:	sxtw	x3, w0
   1ea38:	cbnz	w0, 1eb24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d7c>
   1ea3c:	mov	x6, #0x0                   	// #0
   1ea40:	mov	x5, #0x0                   	// #0
   1ea44:	mov	x4, #0x0                   	// #0
   1ea48:	add	x3, sp, #0x48
   1ea4c:	mov	w2, #0x700                 	// #1792
   1ea50:	movk	w2, #0x80, lsl #16
   1ea54:	add	x1, x23, x24
   1ea58:	adrp	x0, 1f000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2258>
   1ea5c:	add	x0, x0, #0x264
   1ea60:	bl	16950 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1ea64:	mov	x19, x0
   1ea68:	mov	x2, #0x0                   	// #0
   1ea6c:	adrp	x1, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1ea70:	add	x1, x1, #0x290
   1ea74:	add	x1, x1, #0x88
   1ea78:	mov	w0, #0x2                   	// #2
   1ea7c:	bl	15c50 <__sanitizer_set_report_fd@@Base+0x2e0c>
   1ea80:	str	wzr, [sp, #68]
   1ea84:	add	x1, sp, #0x44
   1ea88:	mov	x0, x19
   1ea8c:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   1ea90:	and	w0, w0, #0xff
   1ea94:	cbz	w0, 1eb54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dac>
   1ea98:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ea9c:	ldr	x0, [x0, #3896]
   1eaa0:	ldr	w0, [x0]
   1eaa4:	cbnz	w0, 1eb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d98>
   1eaa8:	add	x0, sp, #0x58
   1eaac:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   1eab0:	mov	x1, x24
   1eab4:	mov	x0, x23
   1eab8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1eabc:	cbz	w22, 1ec18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e70>
   1eac0:	ldp	x21, x22, [sp, #16]
   1eac4:	ldp	x23, x24, [sp, #32]
   1eac8:	ldr	x30, [sp, #48]
   1eacc:	ldp	x19, x20, [sp], #192
   1ead0:	ret
   1ead4:	mov	x4, #0x0                   	// #0
   1ead8:	mov	x3, #0x0                   	// #0
   1eadc:	mov	x2, #0x0                   	// #0
   1eae0:	mov	x1, #0x1                   	// #1
   1eae4:	mov	w0, #0x4                   	// #4
   1eae8:	bl	15b34 <__sanitizer_set_report_fd@@Base+0x2cf0>
   1eaec:	b	1e970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc8>
   1eaf0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1eaf4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1eaf8:	ldr	x1, [x1, #4016]
   1eafc:	str	x0, [x1]
   1eb00:	b	1e99c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bf4>
   1eb04:	mov	x4, #0x0                   	// #0
   1eb08:	mov	x3, #0x0                   	// #0
   1eb0c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1eb10:	add	x2, x2, #0xf68
   1eb14:	mov	w1, #0x152                 	// #338
   1eb18:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1eb1c:	add	x0, x0, #0xe08
   1eb20:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1eb24:	mov	x4, #0x0                   	// #0
   1eb28:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1eb2c:	add	x2, x2, #0xfa8
   1eb30:	mov	w1, #0x1ac                 	// #428
   1eb34:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1eb38:	add	x0, x0, #0xe08
   1eb3c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1eb40:	ldr	w1, [sp, #68]
   1eb44:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1eb48:	add	x0, x0, #0xfb8
   1eb4c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1eb50:	b	1eaa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d00>
   1eb54:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1eb58:	ldr	x0, [x0, #3848]
   1eb5c:	str	x19, [x0]
   1eb60:	bl	15af4 <__sanitizer_set_report_fd@@Base+0x2cb0>
   1eb64:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1eb68:	ldr	x1, [x1, #3840]
   1eb6c:	str	x0, [x1]
   1eb70:	mov	x4, #0x0                   	// #0
   1eb74:	mov	x3, #0x0                   	// #0
   1eb78:	mov	x2, #0x0                   	// #0
   1eb7c:	mov	x1, x19
   1eb80:	mov	w0, #0x6d61                	// #28001
   1eb84:	movk	w0, #0x5961, lsl #16
   1eb88:	bl	15b34 <__sanitizer_set_report_fd@@Base+0x2cf0>
   1eb8c:	add	x0, sp, #0x58
   1eb90:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   1eb94:	ldr	x0, [sp, #176]
   1eb98:	cbnz	x0, 1eba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e00>
   1eb9c:	bl	67a0 <sched_yield@plt>
   1eba0:	ldr	x1, [sp, #176]
   1eba4:	cbz	x1, 1eb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df4>
   1eba8:	mov	w21, #0x40000000            	// #1073741824
   1ebac:	add	x20, sp, #0x44
   1ebb0:	mov	w2, w21
   1ebb4:	mov	x1, #0x0                   	// #0
   1ebb8:	mov	w0, w19
   1ebbc:	bl	15adc <__sanitizer_set_report_fd@@Base+0x2c98>
   1ebc0:	mov	x1, x20
   1ebc4:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   1ebc8:	and	w0, w0, #0xff
   1ebcc:	cbz	w0, 1ebec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e44>
   1ebd0:	ldr	w1, [sp, #68]
   1ebd4:	cmp	w1, #0x4
   1ebd8:	b.eq	1ebb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e08>  // b.none
   1ebdc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ebe0:	ldr	x0, [x0, #3896]
   1ebe4:	ldr	w0, [x0]
   1ebe8:	cbnz	w0, 1ec08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e60>
   1ebec:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ebf0:	ldr	x0, [x0, #3848]
   1ebf4:	str	xzr, [x0]
   1ebf8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ebfc:	ldr	x0, [x0, #3840]
   1ec00:	str	xzr, [x0]
   1ec04:	b	1eab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d08>
   1ec08:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1ec0c:	add	x0, x0, #0xfe8
   1ec10:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1ec14:	b	1ebec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e44>
   1ec18:	mov	x4, #0x0                   	// #0
   1ec1c:	mov	x3, #0x0                   	// #0
   1ec20:	mov	x2, #0x0                   	// #0
   1ec24:	mov	x1, #0x0                   	// #0
   1ec28:	mov	w0, #0x4                   	// #4
   1ec2c:	bl	15b34 <__sanitizer_set_report_fd@@Base+0x2cf0>
   1ec30:	b	1eac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d18>
   1ec34:	ldr	x3, [x0, #24]
   1ec38:	cbz	x3, 1ec64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ebc>
   1ec3c:	ldr	x4, [x0, #8]
   1ec40:	mov	x0, #0x0                   	// #0
   1ec44:	ldr	x2, [x4, x0, lsl #3]
   1ec48:	cmp	x2, x1
   1ec4c:	b.eq	1ec6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec4>  // b.none
   1ec50:	add	x0, x0, #0x1
   1ec54:	cmp	x0, x3
   1ec58:	b.ne	1ec44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.any
   1ec5c:	mov	w0, #0x0                   	// #0
   1ec60:	b	1ec70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec8>
   1ec64:	mov	w0, #0x0                   	// #0
   1ec68:	b	1ec70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec8>
   1ec6c:	mov	w0, #0x1                   	// #1
   1ec70:	ret
   1ec74:	stp	x19, x20, [sp, #-64]!
   1ec78:	str	x30, [sp, #32]
   1ec7c:	mov	x19, x0
   1ec80:	str	x1, [sp, #56]
   1ec84:	ldr	x3, [x0, #24]
   1ec88:	ldr	x0, [x0, #16]
   1ec8c:	lsr	x4, x0, #3
   1ec90:	cmp	x3, x0, lsr #3
   1ec94:	b.hi	1eccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f24>  // b.pmore
   1ec98:	cmp	x3, x4
   1ec9c:	b.eq	1ece8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f40>  // b.none
   1eca0:	ldr	x3, [x19, #8]
   1eca4:	ldr	x0, [x19, #24]
   1eca8:	add	x2, x0, #0x1
   1ecac:	str	x2, [x19, #24]
   1ecb0:	mov	x2, #0x8                   	// #8
   1ecb4:	add	x1, sp, #0x38
   1ecb8:	add	x0, x3, x0, lsl #3
   1ecbc:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1ecc0:	ldr	x30, [sp, #32]
   1ecc4:	ldp	x19, x20, [sp], #64
   1ecc8:	ret
   1eccc:	stp	x21, x22, [sp, #16]
   1ecd0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1ecd4:	add	x2, x2, #0x630
   1ecd8:	mov	w1, #0x1be                 	// #446
   1ecdc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ece0:	add	x0, x0, #0x380
   1ece4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ece8:	stp	x21, x22, [sp, #16]
   1ecec:	add	x0, x3, #0x1
   1ecf0:	tst	x3, x0
   1ecf4:	b.eq	1ee00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2058>  // b.none
   1ecf8:	clz	x4, x0
   1ecfc:	mov	w1, #0x3f                  	// #63
   1ed00:	sub	w1, w1, w4
   1ed04:	add	w20, w1, #0x1
   1ed08:	mov	x4, #0x1                   	// #1
   1ed0c:	lsl	x4, x4, x20
   1ed10:	cmp	x0, x4
   1ed14:	b.cs	1edac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2004>  // b.hs, b.nlast
   1ed18:	mov	x2, #0x1                   	// #1
   1ed1c:	lsl	x1, x2, x1
   1ed20:	cmp	x0, x1
   1ed24:	b.ls	1edc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2020>  // b.plast
   1ed28:	cmp	x3, x4
   1ed2c:	b.hi	1ede8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2040>  // b.pmore
   1ed30:	lsl	x20, x4, #3
   1ed34:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ed38:	ldr	x0, [x0, #4016]
   1ed3c:	ldr	x0, [x0]
   1ed40:	cbz	x0, 1ee08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2060>
   1ed44:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ed48:	ldr	x0, [x0, #4016]
   1ed4c:	ldr	x0, [x0]
   1ed50:	sub	x1, x0, #0x1
   1ed54:	tst	x0, x1
   1ed58:	b.ne	1ee1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2074>  // b.any
   1ed5c:	add	x20, x20, x1
   1ed60:	neg	x0, x0
   1ed64:	and	x20, x20, x0
   1ed68:	mov	w2, #0x0                   	// #0
   1ed6c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ed70:	add	x1, x1, #0x350
   1ed74:	mov	x0, x20
   1ed78:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1ed7c:	mov	x22, x0
   1ed80:	ldr	x2, [x19, #24]
   1ed84:	lsl	x2, x2, #3
   1ed88:	ldr	x1, [x19, #8]
   1ed8c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1ed90:	ldr	x1, [x19, #16]
   1ed94:	ldr	x0, [x19, #8]
   1ed98:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1ed9c:	str	x22, [x19, #8]
   1eda0:	str	x20, [x19, #16]
   1eda4:	ldp	x21, x22, [sp, #16]
   1eda8:	b	1eca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ef8>
   1edac:	mov	x3, x0
   1edb0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1edb4:	add	x2, x2, #0x660
   1edb8:	mov	w1, #0x17b                 	// #379
   1edbc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1edc0:	add	x0, x0, #0x380
   1edc4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1edc8:	mov	x4, x1
   1edcc:	mov	x3, x0
   1edd0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1edd4:	add	x2, x2, #0x688
   1edd8:	mov	w1, #0x17c                 	// #380
   1eddc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ede0:	add	x0, x0, #0x380
   1ede4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ede8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1edec:	add	x2, x2, #0x6a8
   1edf0:	mov	w1, #0x1fd                 	// #509
   1edf4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1edf8:	add	x0, x0, #0x380
   1edfc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ee00:	mov	x4, x0
   1ee04:	b	1ed30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f88>
   1ee08:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1ee0c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ee10:	ldr	x1, [x1, #4016]
   1ee14:	str	x0, [x1]
   1ee18:	b	1ed44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f9c>
   1ee1c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1ee20:	add	x0, x0, #0x338
   1ee24:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1ee28:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ee2c:	stp	x19, x20, [sp, #-96]!
   1ee30:	stp	x21, x22, [sp, #16]
   1ee34:	str	x30, [sp, #72]
   1ee38:	mov	x20, x1
   1ee3c:	add	x21, x0, #0x8
   1ee40:	mov	x0, x21
   1ee44:	bl	1ec34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e8c>
   1ee48:	ands	w19, w0, #0xff
   1ee4c:	b.eq	1ee68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20c0>  // b.none
   1ee50:	mov	w19, #0x0                   	// #0
   1ee54:	mov	w0, w19
   1ee58:	ldp	x21, x22, [sp, #16]
   1ee5c:	ldr	x30, [sp, #72]
   1ee60:	ldp	x19, x20, [sp], #96
   1ee64:	ret
   1ee68:	stp	x23, x24, [sp, #32]
   1ee6c:	mov	w23, w20
   1ee70:	mov	x3, #0x0                   	// #0
   1ee74:	mov	x2, #0x0                   	// #0
   1ee78:	mov	w1, w20
   1ee7c:	mov	w0, #0x10                  	// #16
   1ee80:	bl	15ac8 <__sanitizer_set_report_fd@@Base+0x2c84>
   1ee84:	add	x1, sp, #0x5c
   1ee88:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   1ee8c:	ands	w22, w0, #0xff
   1ee90:	b.ne	1ef48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21a0>  // b.any
   1ee94:	stp	x25, x26, [sp, #48]
   1ee98:	str	x27, [sp, #64]
   1ee9c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1eea0:	ldr	x0, [x0, #3896]
   1eea4:	ldr	w0, [x0]
   1eea8:	sxtw	x0, w0
   1eeac:	cmp	x0, #0x1
   1eeb0:	b.hi	1ef7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21d4>  // b.pmore
   1eeb4:	add	x25, sp, #0x54
   1eeb8:	mov	w24, #0x40000000            	// #1073741824
   1eebc:	add	x19, sp, #0x58
   1eec0:	mov	w26, #0x7                   	// #7
   1eec4:	mov	w2, w24
   1eec8:	mov	x1, x25
   1eecc:	mov	w0, w23
   1eed0:	bl	15adc <__sanitizer_set_report_fd@@Base+0x2c98>
   1eed4:	mov	x27, x0
   1eed8:	mov	x1, x19
   1eedc:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   1eee0:	and	w1, w0, #0xff
   1eee4:	cbz	w1, 1eef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x214c>
   1eee8:	ldr	w0, [sp, #88]
   1eeec:	cmp	w0, #0x4
   1eef0:	b.eq	1eec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x211c>  // b.none
   1eef4:	mov	x1, x19
   1eef8:	mov	x0, x27
   1eefc:	bl	154b4 <__sanitizer_set_report_fd@@Base+0x2670>
   1ef00:	and	w0, w0, #0xff
   1ef04:	cbnz	w0, 1ef90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21e8>
   1ef08:	ldr	w1, [sp, #84]
   1ef0c:	and	w0, w1, #0xff
   1ef10:	cmp	w0, #0x7f
   1ef14:	b.ne	1ef28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2180>  // b.any
   1ef18:	asr	w3, w1, #8
   1ef1c:	ubfx	x1, x1, #8, #8
   1ef20:	cmp	w1, #0x13
   1ef24:	b.ne	1efe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2238>  // b.any
   1ef28:	mov	x1, x20
   1ef2c:	mov	x0, x21
   1ef30:	bl	1ec74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ecc>
   1ef34:	mov	w19, #0x1                   	// #1
   1ef38:	ldp	x23, x24, [sp, #32]
   1ef3c:	ldp	x25, x26, [sp, #48]
   1ef40:	ldr	x27, [sp, #64]
   1ef44:	b	1ee54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   1ef48:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ef4c:	ldr	x0, [x0, #3896]
   1ef50:	ldr	w0, [x0]
   1ef54:	cbnz	w0, 1ef60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21b8>
   1ef58:	ldp	x23, x24, [sp, #32]
   1ef5c:	b	1ee54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   1ef60:	ldr	w2, [sp, #92]
   1ef64:	mov	x1, x20
   1ef68:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1ef6c:	add	x0, x0, #0x20
   1ef70:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1ef74:	ldp	x23, x24, [sp, #32]
   1ef78:	b	1ee54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   1ef7c:	mov	x1, x20
   1ef80:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1ef84:	add	x0, x0, #0x50
   1ef88:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1ef8c:	b	1eeb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x210c>
   1ef90:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ef94:	ldr	x0, [x0, #3896]
   1ef98:	ldr	w0, [x0]
   1ef9c:	cbnz	w0, 1efc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2220>
   1efa0:	mov	x3, #0x0                   	// #0
   1efa4:	mov	x2, #0x0                   	// #0
   1efa8:	mov	w1, w20
   1efac:	mov	w0, #0x11                  	// #17
   1efb0:	bl	15ac8 <__sanitizer_set_report_fd@@Base+0x2c84>
   1efb4:	mov	w19, w22
   1efb8:	ldp	x23, x24, [sp, #32]
   1efbc:	ldp	x25, x26, [sp, #48]
   1efc0:	ldr	x27, [sp, #64]
   1efc4:	b	1ee54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   1efc8:	ldr	w2, [sp, #88]
   1efcc:	mov	x1, x20
   1efd0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1efd4:	add	x0, x0, #0x70
   1efd8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1efdc:	b	1efa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21f8>
   1efe0:	and	x3, x3, #0xff
   1efe4:	mov	x2, #0x0                   	// #0
   1efe8:	mov	w1, w23
   1efec:	mov	w0, w26
   1eff0:	bl	15ac8 <__sanitizer_set_report_fd@@Base+0x2c84>
   1eff4:	b	1eec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x211c>
   1eff8:	stp	x19, x20, [sp, #-128]!
   1effc:	stp	x21, x22, [sp, #16]
   1f000:	stp	x23, x24, [sp, #32]
   1f004:	stp	x25, x30, [sp, #48]
   1f008:	mov	x21, x0
   1f00c:	ldr	w1, [x0, #40]
   1f010:	add	x0, sp, #0x60
   1f014:	bl	15da8 <__sanitizer_set_report_fd@@Base+0x2f64>
   1f018:	str	xzr, [sp, #80]
   1f01c:	str	xzr, [sp, #88]
   1f020:	str	xzr, [sp, #72]
   1f024:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f028:	ldr	x0, [x0, #4016]
   1f02c:	ldr	x0, [x0]
   1f030:	cbz	x0, 1f0ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2304>
   1f034:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f038:	ldr	x0, [x0, #4016]
   1f03c:	ldr	x0, [x0]
   1f040:	sub	x1, x0, #0x1
   1f044:	tst	x1, x0
   1f048:	b.ne	1f0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2318>  // b.any
   1f04c:	add	x19, x0, #0x7
   1f050:	neg	x0, x0
   1f054:	and	x19, x19, x0
   1f058:	mov	w2, #0x0                   	// #0
   1f05c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f060:	add	x1, x1, #0x350
   1f064:	mov	x0, x19
   1f068:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1f06c:	mov	x20, x0
   1f070:	ldr	x2, [sp, #88]
   1f074:	lsl	x2, x2, #3
   1f078:	ldr	x1, [sp, #72]
   1f07c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f080:	ldr	x1, [sp, #80]
   1f084:	ldr	x0, [sp, #72]
   1f088:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f08c:	str	x20, [sp, #72]
   1f090:	str	x19, [sp, #80]
   1f094:	cmp	x19, #0x3ff
   1f098:	b.ls	1f0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2328>  // b.plast
   1f09c:	mov	w23, #0x0                   	// #0
   1f0a0:	add	x25, sp, #0x48
   1f0a4:	add	x24, sp, #0x60
   1f0a8:	b	1f230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2488>
   1f0ac:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1f0b0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f0b4:	ldr	x1, [x1, #4016]
   1f0b8:	str	x0, [x1]
   1f0bc:	b	1f034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x228c>
   1f0c0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f0c4:	add	x0, x0, #0x338
   1f0c8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f0cc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f0d0:	ldr	x3, [sp, #88]
   1f0d4:	cmp	x3, #0x80
   1f0d8:	b.hi	1f150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23a8>  // b.pmore
   1f0dc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f0e0:	ldr	x0, [x0, #4016]
   1f0e4:	ldr	x0, [x0]
   1f0e8:	cbz	x0, 1f16c <__sanitizer_get_module_and_offset_for_pc@@Base+0x23c4>
   1f0ec:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f0f0:	ldr	x0, [x0, #4016]
   1f0f4:	ldr	x0, [x0]
   1f0f8:	sub	x1, x0, #0x1
   1f0fc:	tst	x1, x0
   1f100:	b.ne	1f180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>  // b.any
   1f104:	add	x19, x0, #0x3ff
   1f108:	neg	x0, x0
   1f10c:	and	x19, x19, x0
   1f110:	mov	w2, #0x0                   	// #0
   1f114:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f118:	add	x1, x1, #0x350
   1f11c:	mov	x0, x19
   1f120:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1f124:	mov	x20, x0
   1f128:	ldr	x2, [sp, #88]
   1f12c:	lsl	x2, x2, #3
   1f130:	ldr	x1, [sp, #72]
   1f134:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f138:	ldr	x1, [sp, #80]
   1f13c:	ldr	x0, [sp, #72]
   1f140:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f144:	str	x20, [sp, #72]
   1f148:	str	x19, [sp, #80]
   1f14c:	b	1f09c <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f4>
   1f150:	mov	x4, #0x80                  	// #128
   1f154:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1f158:	add	x2, x2, #0x6a8
   1f15c:	mov	w1, #0x1fd                 	// #509
   1f160:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f164:	add	x0, x0, #0x380
   1f168:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f16c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1f170:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f174:	ldr	x1, [x1, #4016]
   1f178:	str	x0, [x1]
   1f17c:	b	1f0ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2344>
   1f180:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f184:	add	x0, x0, #0x338
   1f188:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f18c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f190:	mov	x0, x21
   1f194:	bl	1e6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1938>
   1f198:	mov	w19, #0x0                   	// #0
   1f19c:	ldr	x1, [sp, #80]
   1f1a0:	ldr	x0, [sp, #72]
   1f1a4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f1a8:	add	x0, sp, #0x60
   1f1ac:	bl	15d2c <__sanitizer_set_report_fd@@Base+0x2ee8>
   1f1b0:	mov	w0, w19
   1f1b4:	ldp	x21, x22, [sp, #16]
   1f1b8:	ldp	x23, x24, [sp, #32]
   1f1bc:	ldp	x25, x30, [sp, #48]
   1f1c0:	ldp	x19, x20, [sp], #128
   1f1c4:	ret
   1f1c8:	mov	w20, #0x1                   	// #1
   1f1cc:	b	1f214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x246c>
   1f1d0:	ldr	x0, [x21, #32]
   1f1d4:	cmp	x0, #0x0
   1f1d8:	cset	w19, ne  // ne = any
   1f1dc:	b	1f19c <__sanitizer_get_module_and_offset_for_pc@@Base+0x23f4>
   1f1e0:	ldr	x19, [sp, #72]
   1f1e4:	ldr	x22, [sp, #88]
   1f1e8:	add	x22, x19, x22, lsl #3
   1f1ec:	cmp	x19, x22
   1f1f0:	b.eq	1f1d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2428>  // b.none
   1f1f4:	mov	w20, #0x0                   	// #0
   1f1f8:	ldr	x1, [x19], #8
   1f1fc:	mov	x0, x21
   1f200:	bl	1ee2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2084>
   1f204:	ands	w0, w0, #0xff
   1f208:	csel	w20, w20, w0, eq  // eq = none
   1f20c:	cmp	x22, x19
   1f210:	b.ne	1f1f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2450>  // b.any
   1f214:	add	w23, w23, #0x1
   1f218:	cmp	w23, #0x1d
   1f21c:	cset	w0, gt
   1f220:	eor	w20, w20, #0x1
   1f224:	orr	w20, w0, w20
   1f228:	tst	w20, #0xff
   1f22c:	b.ne	1f1d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2428>  // b.any
   1f230:	mov	x1, x25
   1f234:	mov	x0, x24
   1f238:	bl	161dc <__sanitizer_set_report_fd@@Base+0x3398>
   1f23c:	cbz	w0, 1f190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23e8>
   1f240:	cmp	w0, #0x1
   1f244:	b.ne	1f1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2438>  // b.any
   1f248:	ldr	x19, [sp, #72]
   1f24c:	ldr	x22, [sp, #88]
   1f250:	add	x22, x19, x22, lsl #3
   1f254:	cmp	x22, x19
   1f258:	b.eq	1f1c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2420>  // b.none
   1f25c:	mov	w20, #0x1                   	// #1
   1f260:	b	1f1f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2450>
   1f264:	stp	x19, x20, [sp, #-304]!
   1f268:	stp	x21, x22, [sp, #16]
   1f26c:	stp	x23, x24, [sp, #32]
   1f270:	stp	x25, x26, [sp, #48]
   1f274:	stp	x27, x30, [sp, #64]
   1f278:	mov	x20, x0
   1f27c:	mov	x4, #0x0                   	// #0
   1f280:	mov	x3, #0x0                   	// #0
   1f284:	mov	x2, #0x0                   	// #0
   1f288:	mov	x1, #0x9                   	// #9
   1f28c:	mov	w0, #0x1                   	// #1
   1f290:	bl	15b34 <__sanitizer_set_report_fd@@Base+0x2cf0>
   1f294:	bl	15b00 <__sanitizer_set_report_fd@@Base+0x2cbc>
   1f298:	ldr	x1, [x20, #112]
   1f29c:	cmp	x0, x1
   1f2a0:	b.ne	1f4b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2708>  // b.any
   1f2a4:	add	x19, x20, #0x10
   1f2a8:	mov	x0, x19
   1f2ac:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   1f2b0:	mov	x0, x19
   1f2b4:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   1f2b8:	adrp	x0, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1258>
   1f2bc:	add	x0, x0, #0x8f4
   1f2c0:	bl	22eac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6104>
   1f2c4:	and	w0, w0, #0xff
   1f2c8:	cbz	w0, 1f4b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>
   1f2cc:	bl	15b00 <__sanitizer_set_report_fd@@Base+0x2cbc>
   1f2d0:	mov	x21, x0
   1f2d4:	str	x20, [sp, #256]
   1f2d8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   1f2dc:	add	x1, x1, #0xe38
   1f2e0:	str	x1, [sp, #264]
   1f2e4:	str	xzr, [sp, #280]
   1f2e8:	str	xzr, [sp, #288]
   1f2ec:	str	xzr, [sp, #272]
   1f2f0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f2f4:	ldr	x1, [x1, #4016]
   1f2f8:	ldr	x0, [x1]
   1f2fc:	cbz	x0, 1f4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2720>
   1f300:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f304:	ldr	x0, [x0, #4016]
   1f308:	ldr	x1, [x0]
   1f30c:	sub	x0, x1, #0x1
   1f310:	tst	x0, x1
   1f314:	b.ne	1f4dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2734>  // b.any
   1f318:	add	x19, x1, #0x7
   1f31c:	neg	x1, x1
   1f320:	and	x19, x19, x1
   1f324:	mov	w2, #0x0                   	// #0
   1f328:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f32c:	add	x1, x1, #0x350
   1f330:	mov	x0, x19
   1f334:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1f338:	mov	x22, x0
   1f33c:	ldr	x2, [sp, #288]
   1f340:	lsl	x2, x2, #3
   1f344:	ldr	x1, [sp, #272]
   1f348:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f34c:	ldr	x1, [sp, #280]
   1f350:	ldr	x0, [sp, #272]
   1f354:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f358:	str	x22, [sp, #272]
   1f35c:	str	x19, [sp, #280]
   1f360:	mov	x0, #0x1fff                	// #8191
   1f364:	cmp	x19, x0
   1f368:	b.ls	1f4ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2744>  // b.plast
   1f36c:	str	w21, [sp, #296]
   1f370:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1f374:	add	x1, sp, #0x100
   1f378:	str	x1, [x0, #656]
   1f37c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f380:	ldr	x0, [x0, #4016]
   1f384:	ldr	x0, [x0]
   1f388:	cbz	x0, 1f5b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2808>
   1f38c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f390:	ldr	x0, [x0, #4016]
   1f394:	ldr	x0, [x0]
   1f398:	sub	x19, x0, #0x1
   1f39c:	ands	x19, x19, x0
   1f3a0:	b.ne	1f5c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x281c>  // b.any
   1f3a4:	mov	x21, #0x1fff                	// #8191
   1f3a8:	add	x26, x0, x21
   1f3ac:	neg	x0, x0
   1f3b0:	and	x26, x26, x0
   1f3b4:	mov	w2, #0x0                   	// #0
   1f3b8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f3bc:	add	x1, x1, #0x350
   1f3c0:	mov	x0, x26
   1f3c4:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1f3c8:	mov	x25, x0
   1f3cc:	mov	x2, #0x0                   	// #0
   1f3d0:	mov	x1, #0x0                   	// #0
   1f3d4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f3d8:	mov	x1, #0x0                   	// #0
   1f3dc:	mov	x0, #0x0                   	// #0
   1f3e0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f3e4:	cmp	x26, x21
   1f3e8:	b.ls	1f5d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x282c>  // b.plast
   1f3ec:	mov	x2, #0x2000                	// #8192
   1f3f0:	mov	w1, #0x0                   	// #0
   1f3f4:	mov	x0, x25
   1f3f8:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1f3fc:	add	x21, sp, #0xe8
   1f400:	mov	x2, #0x18                  	// #24
   1f404:	mov	w1, #0x0                   	// #0
   1f408:	mov	x0, x21
   1f40c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1f410:	str	x25, [sp, #232]
   1f414:	mov	x0, #0x2000                	// #8192
   1f418:	str	x0, [sp, #248]
   1f41c:	mov	x1, #0x0                   	// #0
   1f420:	mov	x0, x21
   1f424:	bl	15b44 <__sanitizer_set_report_fd@@Base+0x2d00>
   1f428:	add	x21, sp, #0x50
   1f42c:	mov	x24, #0x98                  	// #152
   1f430:	adrp	x23, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1258>
   1f434:	add	x23, x23, #0x824
   1f438:	mov	w27, #0x4                   	// #4
   1f43c:	movk	w27, #0x800, lsl #16
   1f440:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1f444:	add	x22, x22, #0xf0
   1f448:	mov	x2, x24
   1f44c:	mov	w1, #0x0                   	// #0
   1f450:	mov	x0, x21
   1f454:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1f458:	str	x23, [sp, #80]
   1f45c:	str	w27, [sp, #216]
   1f460:	mov	x2, #0x0                   	// #0
   1f464:	mov	x1, x21
   1f468:	ldr	w0, [x22, x19, lsl #2]
   1f46c:	bl	15b64 <__sanitizer_set_report_fd@@Base+0x2d20>
   1f470:	add	x19, x19, #0x1
   1f474:	cmp	x19, #0x7
   1f478:	b.ne	1f448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26a0>  // b.any
   1f47c:	add	x0, sp, #0x100
   1f480:	bl	1eff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2250>
   1f484:	and	w0, w0, #0xff
   1f488:	cbnz	w0, 1f66c <__sanitizer_get_module_and_offset_for_pc@@Base+0x28c4>
   1f48c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f490:	ldr	x0, [x0, #3896]
   1f494:	ldr	w0, [x0]
   1f498:	mov	w19, #0x3                   	// #3
   1f49c:	cbz	w0, 1f68c <__sanitizer_get_module_and_offset_for_pc@@Base+0x28e4>
   1f4a0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1f4a4:	add	x0, x0, #0xd0
   1f4a8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   1f4ac:	b	1f68c <__sanitizer_get_module_and_offset_for_pc@@Base+0x28e4>
   1f4b0:	mov	w0, #0x4                   	// #4
   1f4b4:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x288c>
   1f4b8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1f4bc:	add	x0, x0, #0xa8
   1f4c0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f4c4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f4c8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1f4cc:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f4d0:	ldr	x1, [x1, #4016]
   1f4d4:	str	x0, [x1]
   1f4d8:	b	1f300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2558>
   1f4dc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f4e0:	add	x0, x0, #0x338
   1f4e4:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f4e8:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f4ec:	ldr	x3, [sp, #288]
   1f4f0:	cmp	x3, #0x400
   1f4f4:	b.hi	1f570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27c8>  // b.pmore
   1f4f8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f4fc:	ldr	x0, [x0, #4016]
   1f500:	ldr	x0, [x0]
   1f504:	cbz	x0, 1f58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27e4>
   1f508:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f50c:	ldr	x0, [x0, #4016]
   1f510:	ldr	x0, [x0]
   1f514:	sub	x1, x0, #0x1
   1f518:	tst	x1, x0
   1f51c:	b.ne	1f5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27f8>  // b.any
   1f520:	add	x19, x0, #0x1, lsl #12
   1f524:	add	x19, x19, #0xfff
   1f528:	neg	x0, x0
   1f52c:	and	x19, x19, x0
   1f530:	mov	w2, #0x0                   	// #0
   1f534:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f538:	add	x1, x1, #0x350
   1f53c:	mov	x0, x19
   1f540:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1f544:	mov	x22, x0
   1f548:	ldr	x2, [sp, #288]
   1f54c:	lsl	x2, x2, #3
   1f550:	ldr	x1, [sp, #272]
   1f554:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f558:	ldr	x1, [sp, #280]
   1f55c:	ldr	x0, [sp, #272]
   1f560:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f564:	str	x22, [sp, #272]
   1f568:	str	x19, [sp, #280]
   1f56c:	b	1f36c <__sanitizer_get_module_and_offset_for_pc@@Base+0x25c4>
   1f570:	mov	x4, #0x400                 	// #1024
   1f574:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1f578:	add	x2, x2, #0x6a8
   1f57c:	mov	w1, #0x1fd                 	// #509
   1f580:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f584:	add	x0, x0, #0x380
   1f588:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f58c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1f590:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f594:	ldr	x1, [x1, #4016]
   1f598:	str	x0, [x1]
   1f59c:	b	1f508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2760>
   1f5a0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f5a4:	add	x0, x0, #0x338
   1f5a8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f5ac:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f5b0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1f5b4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f5b8:	ldr	x1, [x1, #4016]
   1f5bc:	str	x0, [x1]
   1f5c0:	b	1f38c <__sanitizer_get_module_and_offset_for_pc@@Base+0x25e4>
   1f5c4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f5c8:	add	x0, x0, #0x338
   1f5cc:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f5d0:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f5d4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f5d8:	ldr	x0, [x0, #4016]
   1f5dc:	ldr	x0, [x0]
   1f5e0:	cbz	x0, 1f648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28a0>
   1f5e4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f5e8:	ldr	x0, [x0, #4016]
   1f5ec:	ldr	x0, [x0]
   1f5f0:	sub	x1, x0, #0x1
   1f5f4:	tst	x1, x0
   1f5f8:	b.ne	1f65c <__sanitizer_get_module_and_offset_for_pc@@Base+0x28b4>  // b.any
   1f5fc:	add	x21, x0, #0x1, lsl #12
   1f600:	add	x21, x21, #0xfff
   1f604:	neg	x0, x0
   1f608:	and	x21, x21, x0
   1f60c:	mov	w2, #0x0                   	// #0
   1f610:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f614:	add	x1, x1, #0x350
   1f618:	mov	x0, x21
   1f61c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1f620:	mov	x22, x0
   1f624:	mov	x2, #0x0                   	// #0
   1f628:	mov	x1, x25
   1f62c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f630:	mov	x1, x26
   1f634:	mov	x0, x25
   1f638:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f63c:	mov	x26, x21
   1f640:	mov	x25, x22
   1f644:	b	1f3ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2644>
   1f648:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1f64c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f650:	ldr	x1, [x1, #4016]
   1f654:	str	x0, [x1]
   1f658:	b	1f5e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x283c>
   1f65c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f660:	add	x0, x0, #0x338
   1f664:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f668:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f66c:	add	x19, sp, #0x100
   1f670:	ldr	x2, [x20]
   1f674:	ldr	x1, [x20, #8]
   1f678:	add	x0, sp, #0x108
   1f67c:	blr	x2
   1f680:	mov	x0, x19
   1f684:	bl	1e6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1938>
   1f688:	mov	w19, #0x0                   	// #0
   1f68c:	adrp	x0, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1258>
   1f690:	add	x0, x0, #0x8f4
   1f694:	bl	22eec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6144>
   1f698:	and	w0, w0, #0xff
   1f69c:	cbz	w0, 1f6f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2948>
   1f6a0:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1f6a4:	str	xzr, [x0, #656]
   1f6a8:	mov	x0, #0x1                   	// #1
   1f6ac:	str	x0, [x20, #104]
   1f6b0:	mov	x1, x26
   1f6b4:	mov	x0, x25
   1f6b8:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f6bc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   1f6c0:	add	x0, x0, #0xe38
   1f6c4:	str	x0, [sp, #264]
   1f6c8:	ldr	x1, [sp, #280]
   1f6cc:	ldr	x0, [sp, #272]
   1f6d0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f6d4:	mov	w0, w19
   1f6d8:	ldp	x21, x22, [sp, #16]
   1f6dc:	ldp	x23, x24, [sp, #32]
   1f6e0:	ldp	x25, x26, [sp, #48]
   1f6e4:	ldp	x27, x30, [sp, #64]
   1f6e8:	ldp	x19, x20, [sp], #304
   1f6ec:	ret
   1f6f0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   1f6f4:	add	x0, x0, #0xf20
   1f6f8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f6fc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f700:	stp	x19, x20, [sp, #-48]!
   1f704:	stp	x21, x22, [sp, #16]
   1f708:	str	x30, [sp, #32]
   1f70c:	mov	x19, x0
   1f710:	str	x1, [x0]
   1f714:	str	w2, [x0, #8]
   1f718:	str	xzr, [x0, #24]
   1f71c:	str	xzr, [x0, #32]
   1f720:	str	xzr, [x0, #16]
   1f724:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f728:	ldr	x0, [x0, #4016]
   1f72c:	ldr	x0, [x0]
   1f730:	cbz	x0, 1f7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a1c>
   1f734:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f738:	ldr	x0, [x0, #4016]
   1f73c:	ldr	x1, [x0]
   1f740:	sub	x0, x1, #0x1
   1f744:	tst	x0, x1
   1f748:	b.ne	1f7d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a30>  // b.any
   1f74c:	add	x20, x1, #0x1f
   1f750:	neg	x1, x1
   1f754:	and	x20, x20, x1
   1f758:	mov	w2, #0x0                   	// #0
   1f75c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f760:	add	x1, x1, #0x350
   1f764:	mov	x0, x20
   1f768:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1f76c:	mov	x22, x0
   1f770:	ldr	x2, [x19, #32]
   1f774:	lsl	x2, x2, #5
   1f778:	ldr	x1, [x19, #16]
   1f77c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f780:	ldr	x1, [x19, #24]
   1f784:	ldr	x0, [x19, #16]
   1f788:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1f78c:	str	x22, [x19, #16]
   1f790:	str	x20, [x19, #24]
   1f794:	mov	w0, #0x1                   	// #1
   1f798:	strb	w0, [x19, #72]
   1f79c:	ldrsw	x2, [x19, #8]
   1f7a0:	cmp	x2, #0x20
   1f7a4:	b.hi	1f7e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a40>  // b.pmore
   1f7a8:	mov	w1, #0x0                   	// #0
   1f7ac:	add	x0, x19, #0x28
   1f7b0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1f7b4:	ldp	x21, x22, [sp, #16]
   1f7b8:	ldr	x30, [sp, #32]
   1f7bc:	ldp	x19, x20, [sp], #48
   1f7c0:	ret
   1f7c4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1f7c8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f7cc:	ldr	x1, [x1, #4016]
   1f7d0:	str	x0, [x1]
   1f7d4:	b	1f734 <__sanitizer_get_module_and_offset_for_pc@@Base+0x298c>
   1f7d8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f7dc:	add	x0, x0, #0x338
   1f7e0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1f7e4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f7e8:	mov	x4, #0x20                  	// #32
   1f7ec:	mov	x3, x2
   1f7f0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1f7f4:	add	x2, x2, #0x110
   1f7f8:	mov	w1, #0x1c                  	// #28
   1f7fc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1f800:	add	x0, x0, #0x148
   1f804:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f808:	stp	x19, x20, [sp, #-128]!
   1f80c:	stp	x23, x24, [sp, #32]
   1f810:	str	x30, [sp, #80]
   1f814:	mov	x23, x0
   1f818:	ldrb	w0, [x0, #72]
   1f81c:	cbz	w0, 1f84c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aa4>
   1f820:	mov	x19, x1
   1f824:	cbz	x1, 1fb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dd8>
   1f828:	stp	x21, x22, [sp, #16]
   1f82c:	stp	x25, x26, [sp, #48]
   1f830:	stp	x27, x28, [sp, #64]
   1f834:	add	x24, sp, #0x60
   1f838:	adrp	x26, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1f83c:	ldr	x27, [x26, #4016]
   1f840:	adrp	x25, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1f844:	add	x25, x25, #0x350
   1f848:	b	1f984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bdc>
   1f84c:	stp	x21, x22, [sp, #16]
   1f850:	stp	x25, x26, [sp, #48]
   1f854:	stp	x27, x28, [sp, #64]
   1f858:	mov	x4, #0x0                   	// #0
   1f85c:	mov	x3, #0x0                   	// #0
   1f860:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1f864:	add	x2, x2, #0x190
   1f868:	mov	w1, #0x6a                  	// #106
   1f86c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1f870:	add	x0, x0, #0x148
   1f874:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f878:	mov	x0, x19
   1f87c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1f880:	add	x21, x19, x0
   1f884:	b	1f9b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c10>
   1f888:	ldrb	w1, [x2]
   1f88c:	cbnz	w1, 1f89c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2af4>
   1f890:	ldrb	w1, [x0]
   1f894:	cmp	w1, #0x3a
   1f898:	b.eq	1f8d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b30>  // b.none
   1f89c:	add	w22, w5, #0x1
   1f8a0:	add	x4, x4, #0x1
   1f8a4:	cmp	w6, w4
   1f8a8:	b.le	1f8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b34>
   1f8ac:	mov	w5, w4
   1f8b0:	mov	w22, w4
   1f8b4:	ldr	x2, [x7, x4, lsl #3]
   1f8b8:	mov	x0, x19
   1f8bc:	ldrb	w3, [x0]
   1f8c0:	ldrb	w1, [x2]
   1f8c4:	cmp	w3, w1
   1f8c8:	b.ne	1f888 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae0>  // b.any
   1f8cc:	add	x0, x0, #0x1
   1f8d0:	add	x2, x2, #0x1
   1f8d4:	b	1f8bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b14>
   1f8d8:	add	x19, x0, #0x1
   1f8dc:	cmp	w22, w6
   1f8e0:	b.eq	1fa18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c70>  // b.none
   1f8e4:	mov	x2, #0x20                  	// #32
   1f8e8:	mov	w1, #0x0                   	// #0
   1f8ec:	mov	x0, x24
   1f8f0:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1f8f4:	mov	x28, x23
   1f8f8:	ldr	x0, [x28], #16
   1f8fc:	ldr	x0, [x0, w22, sxtw #3]
   1f900:	str	x0, [sp, #96]
   1f904:	sub	x20, x20, x19
   1f908:	mov	x2, #0x0                   	// #0
   1f90c:	mov	x1, #0x0                   	// #0
   1f910:	add	x0, x20, #0x1
   1f914:	bl	d178 <__sancov_default_options@@Base+0x47c>
   1f918:	str	x0, [sp, #104]
   1f91c:	mov	x2, x20
   1f920:	mov	x1, x19
   1f924:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f928:	ldr	x0, [sp, #104]
   1f92c:	strb	wzr, [x0, x20]
   1f930:	ldr	x0, [x28, #16]
   1f934:	ldr	x1, [x28, #8]
   1f938:	lsr	x4, x1, #5
   1f93c:	cmp	x0, x1, lsr #5
   1f940:	b.hi	1fa34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c8c>  // b.pmore
   1f944:	cmp	x0, x4
   1f948:	b.eq	1fa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ca8>  // b.none
   1f94c:	ldr	x3, [x23, #16]
   1f950:	ldr	x0, [x23, #32]
   1f954:	add	x2, x0, #0x1
   1f958:	str	x2, [x23, #32]
   1f95c:	mov	x2, #0x20                  	// #32
   1f960:	mov	x1, x24
   1f964:	add	x0, x3, x0, lsl #5
   1f968:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1f96c:	add	x22, x23, w22, sxtw
   1f970:	mov	w0, #0x1                   	// #1
   1f974:	strb	w0, [x22, #40]
   1f978:	ldrb	w0, [x21]
   1f97c:	cbz	w0, 1fb74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dcc>
   1f980:	add	x19, x21, #0x1
   1f984:	ldrb	w0, [x19]
   1f988:	cmp	w0, #0x20
   1f98c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   1f990:	b.ne	1f9a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bfc>  // b.any
   1f994:	ldrb	w0, [x19, #1]!
   1f998:	cmp	w0, #0x20
   1f99c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   1f9a0:	b.eq	1f994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bec>  // b.none
   1f9a4:	mov	w1, #0xa                   	// #10
   1f9a8:	mov	x0, x19
   1f9ac:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1904>
   1f9b0:	mov	x21, x0
   1f9b4:	cbz	x0, 1f878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ad0>
   1f9b8:	cmp	x21, x19
   1f9bc:	b.eq	1f978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bd0>  // b.none
   1f9c0:	ldrb	w0, [x19]
   1f9c4:	cmp	w0, #0x23
   1f9c8:	b.eq	1f978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bd0>  // b.none
   1f9cc:	mov	x20, x21
   1f9d0:	ldurb	w1, [x20, #-1]
   1f9d4:	and	w0, w1, #0xfffffffb
   1f9d8:	and	w0, w0, #0xff
   1f9dc:	cmp	w1, #0x20
   1f9e0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   1f9e4:	b.ne	1f9f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c50>  // b.any
   1f9e8:	sub	x20, x20, #0x1
   1f9ec:	cmp	x20, x19
   1f9f0:	b.ne	1f9d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c28>  // b.any
   1f9f4:	mov	x20, x19
   1f9f8:	ldr	w6, [x23, #8]
   1f9fc:	cmp	w6, #0x0
   1fa00:	b.le	1fa10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c68>
   1fa04:	ldr	x7, [x23]
   1fa08:	mov	x4, #0x0                   	// #0
   1fa0c:	b	1f8ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b04>
   1fa10:	mov	w22, #0x0                   	// #0
   1fa14:	b	1f8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b34>
   1fa18:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fa1c:	ldr	x0, [x0, #4024]
   1fa20:	ldr	x1, [x0]
   1fa24:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1fa28:	add	x0, x0, #0x1a8
   1fa2c:	bl	1a368 <OnPrint@@Base+0x344>
   1fa30:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fa34:	mov	x3, x0
   1fa38:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1fa3c:	add	x2, x2, #0x630
   1fa40:	mov	w1, #0x1be                 	// #446
   1fa44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fa48:	add	x0, x0, #0x380
   1fa4c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fa50:	add	x3, x0, #0x1
   1fa54:	tst	x0, x3
   1fa58:	b.eq	1fb4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2da4>  // b.none
   1fa5c:	clz	x2, x3
   1fa60:	mov	w1, #0x3f                  	// #63
   1fa64:	sub	w1, w1, w2
   1fa68:	add	w2, w1, #0x1
   1fa6c:	mov	x4, #0x1                   	// #1
   1fa70:	lsl	x4, x4, x2
   1fa74:	cmp	x3, x4
   1fa78:	b.cs	1fafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d54>  // b.hs, b.nlast
   1fa7c:	mov	x2, #0x1                   	// #1
   1fa80:	lsl	x1, x2, x1
   1fa84:	cmp	x3, x1
   1fa88:	b.ls	1fb14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d6c>  // b.plast
   1fa8c:	cmp	x0, x4
   1fa90:	b.hi	1fb30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d88>  // b.pmore
   1fa94:	lsl	x19, x4, #5
   1fa98:	ldr	x0, [x27]
   1fa9c:	cbz	x0, 1fb54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dac>
   1faa0:	ldr	x0, [x26, #4016]
   1faa4:	ldr	x0, [x0]
   1faa8:	sub	x1, x0, #0x1
   1faac:	tst	x0, x1
   1fab0:	b.ne	1fb64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dbc>  // b.any
   1fab4:	add	x19, x19, x1
   1fab8:	neg	x0, x0
   1fabc:	and	x19, x19, x0
   1fac0:	mov	w2, #0x0                   	// #0
   1fac4:	mov	x1, x25
   1fac8:	mov	x0, x19
   1facc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1fad0:	mov	x28, x0
   1fad4:	ldr	x2, [x23, #32]
   1fad8:	lsl	x2, x2, #5
   1fadc:	ldr	x1, [x23, #16]
   1fae0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1fae4:	ldr	x1, [x23, #24]
   1fae8:	ldr	x0, [x23, #16]
   1faec:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1faf0:	str	x28, [x23, #16]
   1faf4:	str	x19, [x23, #24]
   1faf8:	b	1f94c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ba4>
   1fafc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1fb00:	add	x2, x2, #0x660
   1fb04:	mov	w1, #0x17b                 	// #379
   1fb08:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fb0c:	add	x0, x0, #0x380
   1fb10:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fb14:	mov	x4, x1
   1fb18:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1fb1c:	add	x2, x2, #0x688
   1fb20:	mov	w1, #0x17c                 	// #380
   1fb24:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fb28:	add	x0, x0, #0x380
   1fb2c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fb30:	mov	x3, x0
   1fb34:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   1fb38:	add	x2, x2, #0x6a8
   1fb3c:	mov	w1, #0x1fd                 	// #509
   1fb40:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fb44:	add	x0, x0, #0x380
   1fb48:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fb4c:	mov	x4, x3
   1fb50:	b	1fa94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cec>
   1fb54:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1fb58:	ldr	x1, [x26, #4016]
   1fb5c:	str	x0, [x1]
   1fb60:	b	1faa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cf8>
   1fb64:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fb68:	add	x0, x0, #0x338
   1fb6c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1fb70:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fb74:	ldp	x21, x22, [sp, #16]
   1fb78:	ldp	x25, x26, [sp, #48]
   1fb7c:	ldp	x27, x28, [sp, #64]
   1fb80:	ldp	x23, x24, [sp, #32]
   1fb84:	ldr	x30, [sp, #80]
   1fb88:	ldp	x19, x20, [sp], #128
   1fb8c:	ret
   1fb90:	stp	x19, x20, [sp, #-112]!
   1fb94:	str	x30, [sp, #64]
   1fb98:	mov	x19, x1
   1fb9c:	ldrb	w1, [x1]
   1fba0:	cbnz	w1, 1fbb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e08>
   1fba4:	ldr	x30, [sp, #64]
   1fba8:	ldp	x19, x20, [sp], #112
   1fbac:	ret
   1fbb0:	stp	x21, x22, [sp, #16]
   1fbb4:	mov	x22, x0
   1fbb8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fbbc:	ldr	x0, [x0, #4016]
   1fbc0:	ldr	x0, [x0]
   1fbc4:	cbz	x0, 1fc9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ef4>
   1fbc8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fbcc:	ldr	x0, [x0, #4016]
   1fbd0:	ldr	x2, [x0]
   1fbd4:	sub	x0, x2, #0x1
   1fbd8:	tst	x0, x2
   1fbdc:	b.ne	1fcb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f08>  // b.any
   1fbe0:	add	x21, x2, #0xfff
   1fbe4:	neg	x2, x2
   1fbe8:	and	x21, x21, x2
   1fbec:	mov	w2, #0x0                   	// #0
   1fbf0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fbf4:	add	x1, x1, #0x350
   1fbf8:	mov	x0, x21
   1fbfc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1fc00:	mov	x20, x0
   1fc04:	mov	x2, #0x0                   	// #0
   1fc08:	mov	x1, #0x0                   	// #0
   1fc0c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1fc10:	mov	x1, #0x0                   	// #0
   1fc14:	mov	x0, #0x0                   	// #0
   1fc18:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1fc1c:	cmp	x21, #0xfff
   1fc20:	b.ls	1fcc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.plast
   1fc24:	mov	x2, #0x1000                	// #4096
   1fc28:	mov	w1, #0x0                   	// #0
   1fc2c:	mov	x0, x20
   1fc30:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1fc34:	strb	wzr, [x20]
   1fc38:	mov	x0, x19
   1fc3c:	bl	15724 <__sanitizer_set_report_fd@@Base+0x28e0>
   1fc40:	and	w0, w0, #0xff
   1fc44:	cbz	w0, 1fd68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fc0>
   1fc48:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fc4c:	ldr	x0, [x0, #3896]
   1fc50:	ldr	w0, [x0]
   1fc54:	cbnz	w0, 1ff44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x319c>
   1fc58:	mov	x5, #0x0                   	// #0
   1fc5c:	mov	x4, #0x4000000             	// #67108864
   1fc60:	add	x3, sp, #0x58
   1fc64:	add	x2, sp, #0x60
   1fc68:	add	x1, sp, #0x68
   1fc6c:	mov	x0, x19
   1fc70:	bl	12634 <__sanitizer_cov_dump@@Base+0x2104>
   1fc74:	and	w0, w0, #0xff
   1fc78:	cbz	w0, 1ff64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31bc>
   1fc7c:	ldr	x1, [sp, #104]
   1fc80:	mov	x0, x22
   1fc84:	bl	1f808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a60>
   1fc88:	mov	x1, x21
   1fc8c:	mov	x0, x20
   1fc90:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1fc94:	ldp	x21, x22, [sp, #16]
   1fc98:	b	1fba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dfc>
   1fc9c:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1fca0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fca4:	ldr	x1, [x1, #4016]
   1fca8:	str	x0, [x1]
   1fcac:	b	1fbc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e20>
   1fcb0:	stp	x23, x24, [sp, #32]
   1fcb4:	stp	x25, x26, [sp, #48]
   1fcb8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fcbc:	add	x0, x0, #0x338
   1fcc0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1fcc4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fcc8:	stp	x23, x24, [sp, #32]
   1fccc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fcd0:	ldr	x0, [x0, #4016]
   1fcd4:	ldr	x0, [x0]
   1fcd8:	cbz	x0, 1fd40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f98>
   1fcdc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fce0:	ldr	x0, [x0, #4016]
   1fce4:	ldr	x0, [x0]
   1fce8:	sub	x1, x0, #0x1
   1fcec:	tst	x1, x0
   1fcf0:	b.ne	1fd54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fac>  // b.any
   1fcf4:	add	x23, x0, #0xfff
   1fcf8:	neg	x0, x0
   1fcfc:	and	x23, x23, x0
   1fd00:	mov	w2, #0x0                   	// #0
   1fd04:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fd08:	add	x1, x1, #0x350
   1fd0c:	mov	x0, x23
   1fd10:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1fd14:	mov	x24, x0
   1fd18:	mov	x2, #0x0                   	// #0
   1fd1c:	mov	x1, x20
   1fd20:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1fd24:	mov	x1, x21
   1fd28:	mov	x0, x20
   1fd2c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1fd30:	mov	x21, x23
   1fd34:	mov	x20, x24
   1fd38:	ldp	x23, x24, [sp, #32]
   1fd3c:	b	1fc24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e7c>
   1fd40:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1fd44:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fd48:	ldr	x1, [x1, #4016]
   1fd4c:	str	x0, [x1]
   1fd50:	b	1fcdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f34>
   1fd54:	stp	x25, x26, [sp, #48]
   1fd58:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fd5c:	add	x0, x0, #0x338
   1fd60:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1fd64:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fd68:	mov	x0, x19
   1fd6c:	bl	18518 <__sanitizer_set_report_fd@@Base+0x56d4>
   1fd70:	and	w0, w0, #0xff
   1fd74:	cbnz	w0, 1fc48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   1fd78:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fd7c:	ldr	x0, [x0, #4016]
   1fd80:	ldr	x0, [x0]
   1fd84:	cbz	x0, 1fe20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3078>
   1fd88:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fd8c:	ldr	x0, [x0, #4016]
   1fd90:	ldr	x0, [x0]
   1fd94:	sub	x1, x0, #0x1
   1fd98:	tst	x1, x0
   1fd9c:	b.ne	1fe34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308c>  // b.any
   1fda0:	stp	x23, x24, [sp, #32]
   1fda4:	add	x24, x0, #0xfff
   1fda8:	neg	x0, x0
   1fdac:	and	x24, x24, x0
   1fdb0:	mov	w2, #0x0                   	// #0
   1fdb4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fdb8:	add	x1, x1, #0x350
   1fdbc:	mov	x0, x24
   1fdc0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1fdc4:	mov	x23, x0
   1fdc8:	mov	x2, #0x0                   	// #0
   1fdcc:	mov	x1, #0x0                   	// #0
   1fdd0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1fdd4:	mov	x1, #0x0                   	// #0
   1fdd8:	mov	x0, #0x0                   	// #0
   1fddc:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1fde0:	cmp	x24, #0xfff
   1fde4:	b.ls	1fe4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a4>  // b.plast
   1fde8:	mov	x2, #0x1000                	// #4096
   1fdec:	mov	w1, #0x0                   	// #0
   1fdf0:	mov	x0, x23
   1fdf4:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   1fdf8:	strb	wzr, [x23]
   1fdfc:	mov	x1, #0x1000                	// #4096
   1fe00:	mov	x0, x23
   1fe04:	bl	f684 <__sancov_default_options@@Base+0x2988>
   1fe08:	cbnz	x0, 1fee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3140>
   1fe0c:	mov	x1, x24
   1fe10:	mov	x0, x23
   1fe14:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1fe18:	ldp	x23, x24, [sp, #32]
   1fe1c:	b	1fc48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   1fe20:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1fe24:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fe28:	ldr	x1, [x1, #4016]
   1fe2c:	str	x0, [x1]
   1fe30:	b	1fd88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fe0>
   1fe34:	stp	x23, x24, [sp, #32]
   1fe38:	stp	x25, x26, [sp, #48]
   1fe3c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fe40:	add	x0, x0, #0x338
   1fe44:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1fe48:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fe4c:	stp	x25, x26, [sp, #48]
   1fe50:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fe54:	ldr	x0, [x0, #4016]
   1fe58:	ldr	x0, [x0]
   1fe5c:	cbz	x0, 1fec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x311c>
   1fe60:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fe64:	ldr	x0, [x0, #4016]
   1fe68:	ldr	x0, [x0]
   1fe6c:	sub	x1, x0, #0x1
   1fe70:	tst	x1, x0
   1fe74:	b.ne	1fed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3130>  // b.any
   1fe78:	add	x25, x0, #0xfff
   1fe7c:	neg	x0, x0
   1fe80:	and	x25, x25, x0
   1fe84:	mov	w2, #0x0                   	// #0
   1fe88:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fe8c:	add	x1, x1, #0x350
   1fe90:	mov	x0, x25
   1fe94:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   1fe98:	mov	x26, x0
   1fe9c:	mov	x2, #0x0                   	// #0
   1fea0:	mov	x1, x23
   1fea4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   1fea8:	mov	x1, x24
   1feac:	mov	x0, x23
   1feb0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1feb4:	mov	x24, x25
   1feb8:	mov	x23, x26
   1febc:	ldp	x25, x26, [sp, #48]
   1fec0:	b	1fde8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3040>
   1fec4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   1fec8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1fecc:	ldr	x1, [x1, #4016]
   1fed0:	str	x0, [x1]
   1fed4:	b	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b8>
   1fed8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   1fedc:	add	x0, x0, #0x338
   1fee0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   1fee4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fee8:	stp	x25, x26, [sp, #48]
   1feec:	mov	x0, x23
   1fef0:	bl	f058 <__sancov_default_options@@Base+0x235c>
   1fef4:	sub	x2, x0, x23
   1fef8:	mov	x25, #0xfff                 	// #4095
   1fefc:	cmp	x2, x25
   1ff00:	csel	x2, x2, x25, ls  // ls = plast
   1ff04:	mov	x1, x23
   1ff08:	mov	x0, x20
   1ff0c:	bl	14884 <__sanitizer_set_report_fd@@Base+0x1a40>
   1ff10:	mov	x0, x20
   1ff14:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   1ff18:	sub	x2, x25, x0
   1ff1c:	mov	x1, x19
   1ff20:	mov	x0, x20
   1ff24:	bl	14884 <__sanitizer_set_report_fd@@Base+0x1a40>
   1ff28:	mov	x1, x24
   1ff2c:	mov	x0, x23
   1ff30:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   1ff34:	mov	x19, x20
   1ff38:	ldp	x23, x24, [sp, #32]
   1ff3c:	ldp	x25, x26, [sp, #48]
   1ff40:	b	1fc48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   1ff44:	mov	x2, x19
   1ff48:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ff4c:	ldr	x0, [x0, #4024]
   1ff50:	ldr	x1, [x0]
   1ff54:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1ff58:	add	x0, x0, #0x1d0
   1ff5c:	bl	1a368 <OnPrint@@Base+0x344>
   1ff60:	b	1fc58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eb0>
   1ff64:	stp	x23, x24, [sp, #32]
   1ff68:	stp	x25, x26, [sp, #48]
   1ff6c:	mov	x2, x19
   1ff70:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   1ff74:	ldr	x0, [x0, #4024]
   1ff78:	ldr	x1, [x0]
   1ff7c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   1ff80:	add	x0, x0, #0x1f8
   1ff84:	bl	1a368 <OnPrint@@Base+0x344>
   1ff88:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ff8c:	ldr	x0, [x0, #32]
   1ff90:	ret
   1ff94:	stp	x19, x20, [sp, #-48]!
   1ff98:	str	x30, [sp, #32]
   1ff9c:	mov	x20, x0
   1ffa0:	ldr	w0, [x0, #8]
   1ffa4:	cmp	w0, #0x0
   1ffa8:	b.le	20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   1ffac:	stp	x21, x22, [sp, #16]
   1ffb0:	mov	x21, x1
   1ffb4:	mov	x19, #0x0                   	// #0
   1ffb8:	ldr	x0, [x20]
   1ffbc:	ldr	x1, [x0, x19, lsl #3]
   1ffc0:	mov	x0, x21
   1ffc4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   1ffc8:	cbz	w0, 1ffe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3240>
   1ffcc:	add	x19, x19, #0x1
   1ffd0:	ldr	w0, [x20, #8]
   1ffd4:	cmp	w0, w19
   1ffd8:	b.gt	1ffb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3210>
   1ffdc:	mov	w0, #0x0                   	// #0
   1ffe0:	ldp	x21, x22, [sp, #16]
   1ffe4:	b	1fff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x324c>
   1ffe8:	add	x20, x20, w19, sxtw
   1ffec:	ldrb	w0, [x20, #40]
   1fff0:	ldp	x21, x22, [sp, #16]
   1fff4:	ldr	x30, [sp, #32]
   1fff8:	ldp	x19, x20, [sp], #48
   1fffc:	ret
   20000:	mov	w0, #0x0                   	// #0
   20004:	b	1fff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x324c>
   20008:	stp	x19, x20, [sp, #-64]!
   2000c:	stp	x21, x22, [sp, #16]
   20010:	stp	x23, x24, [sp, #32]
   20014:	str	x30, [sp, #48]
   20018:	mov	x20, x0
   2001c:	mov	x22, x1
   20020:	mov	x21, x2
   20024:	mov	x23, x3
   20028:	strb	wzr, [x0, #72]
   2002c:	mov	x1, x2
   20030:	bl	1ff94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31ec>
   20034:	ands	w0, w0, #0xff
   20038:	b.eq	20098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f0>  // b.none
   2003c:	ldr	x0, [x20, #32]
   20040:	cbz	x0, 200ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3304>
   20044:	mov	x19, #0x0                   	// #0
   20048:	b	2005c <__sanitizer_get_module_and_offset_for_pc@@Base+0x32b4>
   2004c:	add	x19, x19, #0x1
   20050:	ldr	x0, [x20, #32]
   20054:	cmp	x0, x19
   20058:	b.ls	20094 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32ec>  // b.plast
   2005c:	lsl	x4, x19, #5
   20060:	ldr	x5, [x20, #16]
   20064:	add	x24, x5, x4
   20068:	mov	x1, x21
   2006c:	ldr	x0, [x5, x4]
   20070:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   20074:	cbnz	w0, 2004c <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a4>
   20078:	mov	x1, x22
   2007c:	ldr	x0, [x24, #8]
   20080:	bl	f414 <__sancov_default_options@@Base+0x2718>
   20084:	ands	w0, w0, #0xff
   20088:	b.eq	2004c <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a4>  // b.none
   2008c:	str	x24, [x23]
   20090:	b	20098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f0>
   20094:	mov	w0, #0x0                   	// #0
   20098:	ldp	x21, x22, [sp, #16]
   2009c:	ldp	x23, x24, [sp, #32]
   200a0:	ldr	x30, [sp, #48]
   200a4:	ldp	x19, x20, [sp], #64
   200a8:	ret
   200ac:	mov	w0, #0x0                   	// #0
   200b0:	b	20098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f0>
   200b4:	ldr	x4, [x0, #32]
   200b8:	cmp	x1, x4
   200bc:	b.cs	200cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3324>  // b.hs, b.nlast
   200c0:	ldr	x0, [x0, #16]
   200c4:	add	x0, x0, x1, lsl #5
   200c8:	ret
   200cc:	str	x30, [sp, #-16]!
   200d0:	mov	x3, x1
   200d4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   200d8:	add	x2, x2, #0x228
   200dc:	mov	w1, #0x9e                  	// #158
   200e0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   200e4:	add	x0, x0, #0x148
   200e8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   200ec:	stp	x19, x20, [sp, #-96]!
   200f0:	str	x30, [sp, #72]
   200f4:	mov	x20, x0
   200f8:	ldr	x0, [x0, #32]
   200fc:	cbz	x0, 202dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3534>
   20100:	stp	x21, x22, [sp, #16]
   20104:	stp	x23, x24, [sp, #32]
   20108:	stp	x25, x26, [sp, #48]
   2010c:	mov	x21, x1
   20110:	mov	x19, #0x0                   	// #0
   20114:	add	x23, sp, #0x58
   20118:	adrp	x24, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2011c:	ldr	x25, [x24, #4016]
   20120:	adrp	x22, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   20124:	add	x22, x22, #0x350
   20128:	b	20220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3478>
   2012c:	str	x27, [sp, #64]
   20130:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   20134:	add	x2, x2, #0x630
   20138:	mov	w1, #0x1be                 	// #446
   2013c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   20140:	add	x0, x0, #0x380
   20144:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20148:	mov	x3, x0
   2014c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   20150:	add	x2, x2, #0x660
   20154:	mov	w1, #0x17b                 	// #379
   20158:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2015c:	add	x0, x0, #0x380
   20160:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20164:	mov	x4, x1
   20168:	mov	x3, x0
   2016c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   20170:	add	x2, x2, #0x688
   20174:	mov	w1, #0x17c                 	// #380
   20178:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2017c:	add	x0, x0, #0x380
   20180:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20184:	mov	x4, x0
   20188:	lsl	x26, x4, #3
   2018c:	ldr	x0, [x25]
   20190:	cbz	x0, 202b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3508>
   20194:	ldr	x0, [x24, #4016]
   20198:	ldr	x0, [x0]
   2019c:	sub	x1, x0, #0x1
   201a0:	tst	x0, x1
   201a4:	b.ne	202c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3518>  // b.any
   201a8:	add	x26, x26, x1
   201ac:	neg	x0, x0
   201b0:	and	x26, x26, x0
   201b4:	mov	w2, #0x0                   	// #0
   201b8:	mov	x1, x22
   201bc:	mov	x0, x26
   201c0:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   201c4:	mov	x27, x0
   201c8:	ldr	x2, [x21, #16]
   201cc:	lsl	x2, x2, #3
   201d0:	ldr	x1, [x21]
   201d4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   201d8:	ldr	x1, [x21, #8]
   201dc:	ldr	x0, [x21]
   201e0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   201e4:	str	x27, [x21]
   201e8:	str	x26, [x21, #8]
   201ec:	ldr	x27, [sp, #64]
   201f0:	ldr	x3, [x21]
   201f4:	ldr	x0, [x21, #16]
   201f8:	add	x1, x0, #0x1
   201fc:	str	x1, [x21, #16]
   20200:	mov	x2, #0x8                   	// #8
   20204:	mov	x1, x23
   20208:	add	x0, x3, x0, lsl #3
   2020c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   20210:	add	x19, x19, #0x1
   20214:	ldr	x0, [x20, #32]
   20218:	cmp	x0, x19
   2021c:	b.ls	202d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3528>  // b.plast
   20220:	ldr	x2, [x20, #16]
   20224:	add	x2, x2, x19, lsl #5
   20228:	ldr	w0, [x2, #16]
   2022c:	cbz	w0, 20210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3468>
   20230:	str	x2, [sp, #88]
   20234:	ldr	x3, [x21, #16]
   20238:	ldr	x0, [x21, #8]
   2023c:	lsr	x4, x0, #3
   20240:	cmp	x3, x0, lsr #3
   20244:	b.hi	2012c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3384>  // b.pmore
   20248:	cmp	x3, x4
   2024c:	b.ne	201f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3448>  // b.any
   20250:	str	x27, [sp, #64]
   20254:	add	x0, x3, #0x1
   20258:	tst	x3, x0
   2025c:	b.eq	20184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33dc>  // b.none
   20260:	clz	x2, x0
   20264:	mov	w1, #0x3f                  	// #63
   20268:	sub	w1, w1, w2
   2026c:	add	w2, w1, #0x1
   20270:	mov	x4, #0x1                   	// #1
   20274:	lsl	x4, x4, x2
   20278:	cmp	x0, x4
   2027c:	b.cs	20148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33a0>  // b.hs, b.nlast
   20280:	mov	x2, #0x1                   	// #1
   20284:	lsl	x1, x2, x1
   20288:	cmp	x0, x1
   2028c:	b.ls	20164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33bc>  // b.plast
   20290:	cmp	x3, x4
   20294:	b.ls	20188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33e0>  // b.plast
   20298:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   2029c:	add	x2, x2, #0x6a8
   202a0:	mov	w1, #0x1fd                 	// #509
   202a4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   202a8:	add	x0, x0, #0x380
   202ac:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   202b0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   202b4:	ldr	x1, [x24, #4016]
   202b8:	str	x0, [x1]
   202bc:	b	20194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33ec>
   202c0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   202c4:	add	x0, x0, #0x338
   202c8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   202cc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   202d0:	ldp	x21, x22, [sp, #16]
   202d4:	ldp	x23, x24, [sp, #32]
   202d8:	ldp	x25, x26, [sp, #48]
   202dc:	ldr	x30, [sp, #72]
   202e0:	ldp	x19, x20, [sp], #96
   202e4:	ret
   202e8:	stp	x19, x30, [sp, #-16]!
   202ec:	mov	x19, x0
   202f0:	mov	x2, #0x40                  	// #64
   202f4:	mov	w1, #0x0                   	// #0
   202f8:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   202fc:	mov	x0, #0xffffffffffffffff    	// #-1
   20300:	str	x0, [x19, #40]
   20304:	ldp	x19, x30, [sp], #16
   20308:	ret
   2030c:	stp	x19, x30, [sp, #-16]!
   20310:	mov	x19, x0
   20314:	mov	x1, #0x0                   	// #0
   20318:	ldr	x0, [x0, #8]
   2031c:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20320:	mov	x1, #0x0                   	// #0
   20324:	ldr	x0, [x19, #32]
   20328:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   2032c:	mov	x1, #0x0                   	// #0
   20330:	ldr	x0, [x19, #48]
   20334:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20338:	mov	x2, #0x40                  	// #64
   2033c:	mov	w1, #0x0                   	// #0
   20340:	mov	x0, x19
   20344:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   20348:	mov	x0, #0xffffffffffffffff    	// #-1
   2034c:	str	x0, [x19, #40]
   20350:	ldp	x19, x30, [sp], #16
   20354:	ret
   20358:	stp	x19, x20, [sp, #-32]!
   2035c:	stp	x21, x30, [sp, #16]
   20360:	mov	x19, x0
   20364:	mov	x0, x1
   20368:	mov	x21, x2
   2036c:	mov	w20, w3
   20370:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   20374:	str	x0, [x19, #8]
   20378:	str	x21, [x19, #16]
   2037c:	str	w20, [x19, #24]
   20380:	ldp	x21, x30, [sp, #16]
   20384:	ldp	x19, x20, [sp], #32
   20388:	ret
   2038c:	str	x30, [sp, #-16]!
   20390:	str	xzr, [x0], #8
   20394:	bl	202e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3540>
   20398:	ldr	x30, [sp], #16
   2039c:	ret
   203a0:	stp	x19, x20, [sp, #-32]!
   203a4:	str	x30, [sp, #16]
   203a8:	mov	x20, x0
   203ac:	mov	x2, #0x0                   	// #0
   203b0:	mov	x1, #0x0                   	// #0
   203b4:	mov	x0, #0x48                  	// #72
   203b8:	bl	d178 <__sancov_default_options@@Base+0x47c>
   203bc:	mov	x19, x0
   203c0:	bl	2038c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35e4>
   203c4:	str	x20, [x19, #8]
   203c8:	mov	x0, x19
   203cc:	ldr	x30, [sp, #16]
   203d0:	ldp	x19, x20, [sp], #32
   203d4:	ret
   203d8:	stp	x19, x30, [sp, #-16]!
   203dc:	mov	x19, x0
   203e0:	add	x0, x0, #0x8
   203e4:	bl	2030c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3564>
   203e8:	ldr	x0, [x19]
   203ec:	cbz	x0, 203f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x364c>
   203f0:	bl	203d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   203f4:	mov	x1, #0x0                   	// #0
   203f8:	mov	x0, x19
   203fc:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20400:	ldp	x19, x30, [sp], #16
   20404:	ret
   20408:	str	x30, [sp, #-16]!
   2040c:	mov	x2, #0x40                  	// #64
   20410:	mov	w1, #0x0                   	// #0
   20414:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   20418:	ldr	x30, [sp], #16
   2041c:	ret
   20420:	stp	x19, x30, [sp, #-16]!
   20424:	mov	x19, x0
   20428:	mov	x1, #0x0                   	// #0
   2042c:	ldr	x0, [x0]
   20430:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20434:	mov	x1, #0x0                   	// #0
   20438:	ldr	x0, [x19, #24]
   2043c:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20440:	mov	x1, #0x0                   	// #0
   20444:	ldr	x0, [x19, #40]
   20448:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   2044c:	mov	x2, #0x40                  	// #64
   20450:	mov	w1, #0x0                   	// #0
   20454:	mov	x0, x19
   20458:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   2045c:	ldp	x19, x30, [sp], #16
   20460:	ret
   20464:	strb	wzr, [x0, #104]
   20468:	ret
   2046c:	ldr	x3, [x0, #224]
   20470:	cbz	x3, 20498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f0>
   20474:	str	x30, [sp, #-16]!
   20478:	mov	x4, #0x0                   	// #0
   2047c:	mov	x3, #0x0                   	// #0
   20480:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20484:	add	x2, x2, #0x250
   20488:	mov	w1, #0x4e                  	// #78
   2048c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20490:	add	x0, x0, #0x280
   20494:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20498:	ldr	x3, [x0, #232]
   2049c:	cbnz	x3, 20474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36cc>
   204a0:	str	x1, [x0, #224]
   204a4:	str	x2, [x0, #232]
   204a8:	ret
   204ac:	stp	x19, x20, [sp, #-48]!
   204b0:	stp	x21, x22, [sp, #16]
   204b4:	str	x30, [sp, #32]
   204b8:	mov	x20, x0
   204bc:	mov	x21, x1
   204c0:	ldr	x0, [x0, #32]
   204c4:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2c54>
   204c8:	ldr	x0, [x20, #24]
   204cc:	cbz	x0, 204dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3734>
   204d0:	mov	x1, x21
   204d4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   204d8:	cbz	w0, 20564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37bc>
   204dc:	ldr	x0, [x20, #16]
   204e0:	mov	x19, #0x0                   	// #0
   204e4:	cbz	x0, 20510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3768>
   204e8:	lsl	x22, x19, #3
   204ec:	ldr	x0, [x20]
   204f0:	mov	x1, x21
   204f4:	ldr	x0, [x0, x19, lsl #3]
   204f8:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   204fc:	cbz	w0, 2056c <__sanitizer_get_module_and_offset_for_pc@@Base+0x37c4>
   20500:	add	x19, x19, #0x1
   20504:	ldr	x0, [x20, #16]
   20508:	cmp	x19, x0
   2050c:	b.cc	204e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>  // b.lo, b.ul, b.last
   20510:	mov	x0, x21
   20514:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   20518:	mov	x19, x20
   2051c:	str	x0, [x19, #24]!
   20520:	ldr	x3, [x20, #16]
   20524:	ldr	x0, [x20, #8]
   20528:	lsr	x4, x0, #3
   2052c:	cmp	x3, x0, lsr #3
   20530:	b.hi	205b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3808>  // b.pmore
   20534:	cmp	x3, x4
   20538:	b.eq	205c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3820>  // b.none
   2053c:	ldr	x3, [x20]
   20540:	ldr	x0, [x20, #16]
   20544:	add	x1, x0, #0x1
   20548:	str	x1, [x20, #16]
   2054c:	mov	x2, #0x8                   	// #8
   20550:	mov	x1, x19
   20554:	add	x0, x3, x0, lsl #3
   20558:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   2055c:	ldr	x0, [x20, #24]
   20560:	b	20584 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37dc>
   20564:	ldr	x0, [x20, #24]
   20568:	b	20584 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37dc>
   2056c:	ldr	x4, [x20, #16]
   20570:	cmp	x4, x19
   20574:	b.ls	20594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37ec>  // b.plast
   20578:	ldr	x0, [x20]
   2057c:	ldr	x0, [x0, x22]
   20580:	str	x0, [x20, #24]
   20584:	ldp	x21, x22, [sp, #16]
   20588:	ldr	x30, [sp, #32]
   2058c:	ldp	x19, x20, [sp], #48
   20590:	ret
   20594:	mov	x3, x19
   20598:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2059c:	add	x2, x2, #0x368
   205a0:	mov	w1, #0x1b6                 	// #438
   205a4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   205a8:	add	x0, x0, #0x380
   205ac:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   205b0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   205b4:	add	x2, x2, #0x630
   205b8:	mov	w1, #0x1be                 	// #446
   205bc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   205c0:	add	x0, x0, #0x380
   205c4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   205c8:	add	x0, x3, #0x1
   205cc:	tst	x3, x0
   205d0:	b.eq	206d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3930>  // b.none
   205d4:	clz	x2, x0
   205d8:	mov	w1, #0x3f                  	// #63
   205dc:	sub	w1, w1, w2
   205e0:	add	w2, w1, #0x1
   205e4:	mov	x4, #0x1                   	// #1
   205e8:	lsl	x4, x4, x2
   205ec:	cmp	x0, x4
   205f0:	b.cs	20684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38dc>  // b.hs, b.nlast
   205f4:	mov	x2, #0x1                   	// #1
   205f8:	lsl	x1, x2, x1
   205fc:	cmp	x0, x1
   20600:	b.ls	206a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38f8>  // b.plast
   20604:	cmp	x3, x4
   20608:	b.hi	206c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3918>  // b.pmore
   2060c:	lsl	x21, x4, #3
   20610:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20614:	ldr	x0, [x0, #4016]
   20618:	ldr	x0, [x0]
   2061c:	cbz	x0, 206e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3938>
   20620:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20624:	ldr	x0, [x0, #4016]
   20628:	ldr	x0, [x0]
   2062c:	sub	x1, x0, #0x1
   20630:	tst	x0, x1
   20634:	b.ne	206f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x394c>  // b.any
   20638:	add	x21, x21, x1
   2063c:	neg	x0, x0
   20640:	and	x21, x21, x0
   20644:	mov	w2, #0x0                   	// #0
   20648:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2064c:	add	x1, x1, #0x350
   20650:	mov	x0, x21
   20654:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   20658:	mov	x22, x0
   2065c:	ldr	x2, [x20, #16]
   20660:	lsl	x2, x2, #3
   20664:	ldr	x1, [x20]
   20668:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   2066c:	ldr	x1, [x20, #8]
   20670:	ldr	x0, [x20]
   20674:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   20678:	str	x22, [x20]
   2067c:	str	x21, [x20, #8]
   20680:	b	2053c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3794>
   20684:	mov	x3, x0
   20688:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   2068c:	add	x2, x2, #0x660
   20690:	mov	w1, #0x17b                 	// #379
   20694:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   20698:	add	x0, x0, #0x380
   2069c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   206a0:	mov	x4, x1
   206a4:	mov	x3, x0
   206a8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   206ac:	add	x2, x2, #0x688
   206b0:	mov	w1, #0x17c                 	// #380
   206b4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   206b8:	add	x0, x0, #0x380
   206bc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   206c0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   206c4:	add	x2, x2, #0x6a8
   206c8:	mov	w1, #0x1fd                 	// #509
   206cc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   206d0:	add	x0, x0, #0x380
   206d4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   206d8:	mov	x4, x0
   206dc:	b	2060c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3864>
   206e0:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   206e4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   206e8:	ldr	x1, [x1, #4016]
   206ec:	str	x0, [x1]
   206f0:	b	20620 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3878>
   206f4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   206f8:	add	x0, x0, #0x338
   206fc:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   20700:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   20704:	stp	x19, x20, [sp, #-48]!
   20708:	stp	x21, x22, [sp, #16]
   2070c:	stp	x23, x30, [sp, #32]
   20710:	mov	x19, x0
   20714:	mov	x21, x1
   20718:	str	xzr, [x0, #8]
   2071c:	str	xzr, [x0, #16]
   20720:	str	xzr, [x0]
   20724:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20728:	ldr	x0, [x0, #4016]
   2072c:	ldr	x0, [x0]
   20730:	cbz	x0, 207e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a40>
   20734:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20738:	ldr	x0, [x0, #4016]
   2073c:	ldr	x2, [x0]
   20740:	sub	x0, x2, #0x1
   20744:	tst	x0, x2
   20748:	b.ne	207fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a54>  // b.any
   2074c:	add	x23, x19, #0x70
   20750:	add	x20, x2, #0x7
   20754:	neg	x2, x2
   20758:	and	x20, x20, x2
   2075c:	mov	w2, #0x0                   	// #0
   20760:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   20764:	add	x1, x1, #0x350
   20768:	mov	x0, x20
   2076c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   20770:	mov	x22, x0
   20774:	ldr	x2, [x19, #16]
   20778:	lsl	x2, x2, #3
   2077c:	ldr	x1, [x19]
   20780:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   20784:	ldr	x1, [x19, #8]
   20788:	ldr	x0, [x19]
   2078c:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   20790:	str	x22, [x19]
   20794:	str	x20, [x19, #8]
   20798:	str	xzr, [x19, #24]
   2079c:	str	x23, [x19, #32]
   207a0:	mov	x0, #0x1f3f                	// #7999
   207a4:	cmp	x20, x0
   207a8:	b.ls	2080c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a64>  // b.plast
   207ac:	strb	wzr, [x19, #64]
   207b0:	strb	wzr, [x19, #96]
   207b4:	strb	wzr, [x19, #104]
   207b8:	mov	x0, x23
   207bc:	bl	15994 <__sanitizer_set_report_fd@@Base+0x2b50>
   207c0:	ldp	x0, x1, [x21]
   207c4:	stp	x0, x1, [x19, #200]
   207c8:	ldr	x0, [x21, #16]
   207cc:	str	x0, [x19, #216]
   207d0:	str	xzr, [x19, #224]
   207d4:	str	xzr, [x19, #232]
   207d8:	ldp	x21, x22, [sp, #16]
   207dc:	ldp	x23, x30, [sp, #32]
   207e0:	ldp	x19, x20, [sp], #48
   207e4:	ret
   207e8:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   207ec:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   207f0:	ldr	x1, [x1, #4016]
   207f4:	str	x0, [x1]
   207f8:	b	20734 <__sanitizer_get_module_and_offset_for_pc@@Base+0x398c>
   207fc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   20800:	add	x0, x0, #0x338
   20804:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   20808:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   2080c:	ldr	x3, [x19, #16]
   20810:	cmp	x3, #0x3e8
   20814:	b.hi	20890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ae8>  // b.pmore
   20818:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2081c:	ldr	x0, [x0, #4016]
   20820:	ldr	x0, [x0]
   20824:	cbz	x0, 208ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b04>
   20828:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2082c:	ldr	x0, [x0, #4016]
   20830:	ldr	x1, [x0]
   20834:	sub	x0, x1, #0x1
   20838:	tst	x0, x1
   2083c:	b.ne	208c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b18>  // b.any
   20840:	add	x20, x1, #0x1, lsl #12
   20844:	add	x20, x20, #0xf3f
   20848:	neg	x1, x1
   2084c:	and	x20, x20, x1
   20850:	mov	w2, #0x0                   	// #0
   20854:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   20858:	add	x1, x1, #0x350
   2085c:	mov	x0, x20
   20860:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   20864:	mov	x22, x0
   20868:	ldr	x2, [x19, #16]
   2086c:	lsl	x2, x2, #3
   20870:	ldr	x1, [x19]
   20874:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   20878:	ldr	x1, [x19, #8]
   2087c:	ldr	x0, [x19]
   20880:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   20884:	str	x22, [x19]
   20888:	str	x20, [x19, #8]
   2088c:	b	207ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a04>
   20890:	mov	x4, #0x3e8                 	// #1000
   20894:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   20898:	add	x2, x2, #0x6a8
   2089c:	mov	w1, #0x1fd                 	// #509
   208a0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   208a4:	add	x0, x0, #0x380
   208a8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   208ac:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   208b0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   208b4:	ldr	x1, [x1, #4016]
   208b8:	str	x0, [x1]
   208bc:	b	20828 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a80>
   208c0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   208c4:	add	x0, x0, #0x338
   208c8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   208cc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   208d0:	str	x1, [x0]
   208d4:	ldr	x0, [x1, #224]
   208d8:	cbz	x0, 208ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b44>
   208dc:	str	x30, [sp, #-16]!
   208e0:	blr	x0
   208e4:	ldr	x30, [sp], #16
   208e8:	ret
   208ec:	ret
   208f0:	ldr	x0, [x0]
   208f4:	ldr	x0, [x0, #232]
   208f8:	cbz	x0, 2090c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b64>
   208fc:	str	x30, [sp, #-16]!
   20900:	blr	x0
   20904:	ldr	x30, [sp], #16
   20908:	ret
   2090c:	ret
   20910:	ret
   20914:	stp	x19, x20, [sp, #-64]!
   20918:	str	x30, [sp, #16]
   2091c:	mov	x19, x0
   20920:	mov	x20, x1
   20924:	str	x2, [sp, #40]
   20928:	str	x2, [sp, #48]
   2092c:	str	xzr, [sp, #56]
   20930:	add	x4, sp, #0x28
   20934:	adrp	x3, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   20938:	add	x3, x3, #0x910
   2093c:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   20940:	add	x2, x2, #0xc80
   20944:	ldr	x0, [x0, #16]
   20948:	bl	63e0 <__asan_backtrace_pcinfo@plt>
   2094c:	ldr	x0, [sp, #56]
   20950:	cbz	x0, 20964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bbc>
   20954:	mov	w0, #0x1                   	// #1
   20958:	ldr	x30, [sp, #16]
   2095c:	ldp	x19, x20, [sp], #64
   20960:	ret
   20964:	add	x4, sp, #0x28
   20968:	adrp	x3, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   2096c:	add	x3, x3, #0x910
   20970:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   20974:	add	x2, x2, #0xaf8
   20978:	mov	x1, x20
   2097c:	ldr	x0, [x19, #16]
   20980:	bl	6520 <__asan_backtrace_syminfo@plt>
   20984:	ldr	x0, [sp, #56]
   20988:	cmp	x0, #0x0
   2098c:	cset	w0, ne  // ne = any
   20990:	b	20958 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bb0>
   20994:	str	x30, [sp, #-16]!
   20998:	mov	x4, x2
   2099c:	adrp	x3, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   209a0:	add	x3, x3, #0x910
   209a4:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   209a8:	add	x2, x2, #0xc20
   209ac:	ldr	x0, [x0, #16]
   209b0:	bl	6520 <__asan_backtrace_syminfo@plt>
   209b4:	mov	w0, #0x1                   	// #1
   209b8:	ldr	x30, [sp], #16
   209bc:	ret
   209c0:	stp	x19, x30, [sp, #-48]!
   209c4:	str	xzr, [sp, #24]
   209c8:	str	xzr, [sp, #32]
   209cc:	str	xzr, [sp, #40]
   209d0:	add	x3, sp, #0x18
   209d4:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   209d8:	add	x2, x2, #0xa44
   209dc:	mov	w1, #0x3                   	// #3
   209e0:	bl	69f0 <__asan_cplus_demangle_v3_callback@plt>
   209e4:	cbz	w0, 20a28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c80>
   209e8:	ldr	x0, [sp, #32]
   209ec:	add	x0, x0, #0x40
   209f0:	ldr	x1, [sp, #40]
   209f4:	cmp	x0, x1
   209f8:	b.ls	20a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c64>  // b.plast
   209fc:	ldr	x19, [sp, #24]
   20a00:	mov	x0, x19
   20a04:	ldp	x19, x30, [sp], #48
   20a08:	ret
   20a0c:	ldr	x0, [sp, #24]
   20a10:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   20a14:	mov	x19, x0
   20a18:	mov	x1, #0x0                   	// #0
   20a1c:	ldr	x0, [sp, #24]
   20a20:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20a24:	b	20a00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c58>
   20a28:	ldr	x19, [sp, #24]
   20a2c:	cbz	x19, 20a00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c58>
   20a30:	mov	x1, #0x0                   	// #0
   20a34:	mov	x0, x19
   20a38:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20a3c:	mov	x19, #0x0                   	// #0
   20a40:	b	20a00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c58>
   20a44:	stp	x19, x20, [sp, #-48]!
   20a48:	stp	x21, x22, [sp, #16]
   20a4c:	str	x30, [sp, #32]
   20a50:	mov	x21, x0
   20a54:	mov	x20, x1
   20a58:	mov	x19, x2
   20a5c:	add	x1, x1, #0x1
   20a60:	ldr	x0, [x2, #8]
   20a64:	add	x1, x1, x0
   20a68:	ldr	x0, [x2, #16]
   20a6c:	cmp	x0, x1
   20a70:	b.cs	20ab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d0c>  // b.hs, b.nlast
   20a74:	lsl	x0, x0, #1
   20a78:	cmp	x0, x1
   20a7c:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   20a80:	str	x0, [x2, #16]
   20a84:	mov	x2, #0x0                   	// #0
   20a88:	mov	x1, #0x0                   	// #0
   20a8c:	bl	d178 <__sancov_default_options@@Base+0x47c>
   20a90:	mov	x22, x0
   20a94:	ldr	x1, [x19]
   20a98:	cbz	x1, 20ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d08>
   20a9c:	ldr	x2, [x19, #8]
   20aa0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   20aa4:	mov	x1, #0x0                   	// #0
   20aa8:	ldr	x0, [x19]
   20aac:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   20ab0:	str	x22, [x19]
   20ab4:	ldr	x3, [x19]
   20ab8:	ldr	x0, [x19, #8]
   20abc:	mov	x2, x20
   20ac0:	mov	x1, x21
   20ac4:	add	x0, x3, x0
   20ac8:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   20acc:	ldr	x0, [x19]
   20ad0:	ldr	x1, [x19, #8]
   20ad4:	add	x0, x0, x20
   20ad8:	strb	wzr, [x0, x1]
   20adc:	ldr	x1, [x19, #8]
   20ae0:	add	x20, x1, x20
   20ae4:	str	x20, [x19, #8]
   20ae8:	ldp	x21, x22, [sp, #16]
   20aec:	ldr	x30, [sp, #32]
   20af0:	ldp	x19, x20, [sp], #48
   20af4:	ret
   20af8:	cbz	x2, 20c08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e60>
   20afc:	stp	x19, x20, [sp, #-48]!
   20b00:	stp	x21, x22, [sp, #16]
   20b04:	str	x30, [sp, #32]
   20b08:	mov	x19, x0
   20b0c:	mov	x21, x1
   20b10:	mov	x20, x2
   20b14:	ldr	x0, [x0, #8]
   20b18:	cbz	x0, 20b70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dc8>
   20b1c:	ldr	x0, [x19, #16]
   20b20:	cbnz	x0, 20b90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3de8>
   20b24:	ldr	x0, [x19]
   20b28:	ldr	x3, [x0, #8]
   20b2c:	cmp	x21, x3
   20b30:	b.ne	20bc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e1c>  // b.any
   20b34:	ldr	x21, [x19, #8]
   20b38:	ldr	x4, [x21, #8]
   20b3c:	cmp	x3, x4
   20b40:	b.ne	20be4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e3c>  // b.any
   20b44:	mov	x0, x20
   20b48:	bl	209c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   20b4c:	cbz	x0, 20bfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e54>
   20b50:	str	x0, [x21, #40]
   20b54:	ldr	x0, [x19, #16]
   20b58:	add	x0, x0, #0x1
   20b5c:	str	x0, [x19, #16]
   20b60:	ldp	x21, x22, [sp, #16]
   20b64:	ldr	x30, [sp, #32]
   20b68:	ldp	x19, x20, [sp], #48
   20b6c:	ret
   20b70:	mov	x4, #0x0                   	// #0
   20b74:	mov	x3, #0x0                   	// #0
   20b78:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20b7c:	add	x2, x2, #0x2c8
   20b80:	mov	w1, #0x5c                  	// #92
   20b84:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20b88:	add	x0, x0, #0x2d8
   20b8c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20b90:	mov	x0, x1
   20b94:	bl	203a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   20b98:	mov	x22, x0
   20b9c:	ldr	x0, [x19]
   20ba0:	ldr	w3, [x0, #32]
   20ba4:	ldr	x2, [x0, #24]
   20ba8:	ldr	x1, [x0, #16]
   20bac:	add	x0, x22, #0x8
   20bb0:	bl	20358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   20bb4:	ldr	x0, [x19, #8]
   20bb8:	str	x22, [x0]
   20bbc:	str	x22, [x19, #8]
   20bc0:	b	20b24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d7c>
   20bc4:	mov	x4, x3
   20bc8:	mov	x3, x21
   20bcc:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20bd0:	add	x2, x2, #0x328
   20bd4:	mov	w1, #0x65                  	// #101
   20bd8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20bdc:	add	x0, x0, #0x2d8
   20be0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20be4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20be8:	add	x2, x2, #0x350
   20bec:	mov	w1, #0x66                  	// #102
   20bf0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20bf4:	add	x0, x0, #0x2d8
   20bf8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20bfc:	mov	x0, x20
   20c00:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   20c04:	b	20b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3da8>
   20c08:	ret
   20c0c:	str	x30, [sp, #-16]!
   20c10:	mov	x0, x1
   20c14:	bl	209c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   20c18:	ldr	x30, [sp], #16
   20c1c:	ret
   20c20:	cmp	x2, #0x0
   20c24:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   20c28:	b.ne	20c30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e88>  // b.any
   20c2c:	ret
   20c30:	stp	x19, x20, [sp, #-48]!
   20c34:	stp	x21, x22, [sp, #16]
   20c38:	str	x30, [sp, #32]
   20c3c:	mov	x21, x0
   20c40:	mov	x19, x2
   20c44:	mov	x20, x3
   20c48:	mov	x22, x4
   20c4c:	mov	x0, x2
   20c50:	bl	209c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   20c54:	cbz	x0, 20c74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ecc>
   20c58:	str	x0, [x21, #40]
   20c5c:	str	x20, [x21, #48]
   20c60:	str	x22, [x21, #56]
   20c64:	ldp	x21, x22, [sp, #16]
   20c68:	ldr	x30, [sp, #32]
   20c6c:	ldp	x19, x20, [sp], #48
   20c70:	ret
   20c74:	mov	x0, x19
   20c78:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   20c7c:	b	20c58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3eb0>
   20c80:	cbz	x4, 20db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4010>
   20c84:	stp	x19, x20, [sp, #-64]!
   20c88:	stp	x21, x22, [sp, #16]
   20c8c:	stp	x23, x24, [sp, #32]
   20c90:	str	x30, [sp, #48]
   20c94:	mov	x19, x0
   20c98:	mov	x21, x1
   20c9c:	mov	x22, x2
   20ca0:	mov	w23, w3
   20ca4:	mov	x20, x4
   20ca8:	ldr	x0, [x0, #8]
   20cac:	cbz	x0, 20d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f78>
   20cb0:	ldr	x0, [x19, #16]
   20cb4:	cbnz	x0, 20d40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   20cb8:	ldr	x0, [x19]
   20cbc:	ldr	x3, [x0, #8]
   20cc0:	cmp	x21, x3
   20cc4:	b.ne	20d74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fcc>  // b.any
   20cc8:	ldr	x21, [x19, #8]
   20ccc:	ldr	x4, [x21, #8]
   20cd0:	cmp	x3, x4
   20cd4:	b.ne	20d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fec>  // b.any
   20cd8:	mov	x0, x20
   20cdc:	bl	209c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   20ce0:	cbz	x0, 20dac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4004>
   20ce4:	str	x0, [x21, #40]
   20ce8:	cbz	x22, 20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f50>
   20cec:	mov	x0, x22
   20cf0:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   20cf4:	str	x0, [x21, #56]
   20cf8:	str	w23, [x21, #64]
   20cfc:	ldr	x0, [x19, #16]
   20d00:	add	x0, x0, #0x1
   20d04:	str	x0, [x19, #16]
   20d08:	mov	w0, #0x0                   	// #0
   20d0c:	ldp	x21, x22, [sp, #16]
   20d10:	ldp	x23, x24, [sp, #32]
   20d14:	ldr	x30, [sp, #48]
   20d18:	ldp	x19, x20, [sp], #64
   20d1c:	ret
   20d20:	mov	x4, #0x0                   	// #0
   20d24:	mov	x3, #0x0                   	// #0
   20d28:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20d2c:	add	x2, x2, #0x2c8
   20d30:	mov	w1, #0x5c                  	// #92
   20d34:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20d38:	add	x0, x0, #0x2d8
   20d3c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20d40:	mov	x0, x1
   20d44:	bl	203a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   20d48:	mov	x24, x0
   20d4c:	ldr	x0, [x19]
   20d50:	ldr	w3, [x0, #32]
   20d54:	ldr	x2, [x0, #24]
   20d58:	ldr	x1, [x0, #16]
   20d5c:	add	x0, x24, #0x8
   20d60:	bl	20358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   20d64:	ldr	x0, [x19, #8]
   20d68:	str	x24, [x0]
   20d6c:	str	x24, [x19, #8]
   20d70:	b	20cb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f10>
   20d74:	mov	x4, x3
   20d78:	mov	x3, x21
   20d7c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20d80:	add	x2, x2, #0x328
   20d84:	mov	w1, #0x65                  	// #101
   20d88:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20d8c:	add	x0, x0, #0x2d8
   20d90:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20d94:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20d98:	add	x2, x2, #0x350
   20d9c:	mov	w1, #0x66                  	// #102
   20da0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20da4:	add	x0, x0, #0x2d8
   20da8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20dac:	mov	x0, x20
   20db0:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   20db4:	b	20ce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f3c>
   20db8:	mov	w0, #0x0                   	// #0
   20dbc:	ret
   20dc0:	stp	x19, x20, [sp, #-32]!
   20dc4:	str	x30, [sp, #16]
   20dc8:	mov	x20, x0
   20dcc:	mov	x3, #0x0                   	// #0
   20dd0:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   20dd4:	add	x2, x2, #0x910
   20dd8:	mov	w1, #0x0                   	// #0
   20ddc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   20de0:	add	x0, x0, #0x4d0
   20de4:	bl	6690 <__asan_backtrace_create_state@plt>
   20de8:	mov	x19, x0
   20dec:	cbz	x0, 20e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   20df0:	mov	x1, #0x18                  	// #24
   20df4:	mov	x0, x20
   20df8:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   20dfc:	str	xzr, [x0, #8]
   20e00:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   20e04:	add	x1, x1, #0xe68
   20e08:	str	x1, [x0]
   20e0c:	str	x19, [x0, #16]
   20e10:	ldr	x30, [sp, #16]
   20e14:	ldp	x19, x20, [sp], #32
   20e18:	ret
   20e1c:	ret
   20e20:	stp	x19, x20, [sp, #-48]!
   20e24:	stp	x21, x22, [sp, #16]
   20e28:	str	x30, [sp, #32]
   20e2c:	mov	x21, x0
   20e30:	ldr	x0, [x0, #16]
   20e34:	cbz	x0, 20eb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4110>
   20e38:	mov	x22, x1
   20e3c:	mov	x19, #0x0                   	// #0
   20e40:	mov	x20, #0x0                   	// #0
   20e44:	ldr	x0, [x21]
   20e48:	mov	x1, x22
   20e4c:	add	x0, x0, x19
   20e50:	bl	f344 <__sancov_default_options@@Base+0x2648>
   20e54:	and	w0, w0, #0xff
   20e58:	cbnz	w0, 20e84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40dc>
   20e5c:	add	x20, x20, #0x1
   20e60:	add	x19, x19, #0x48
   20e64:	ldr	x0, [x21, #16]
   20e68:	cmp	x20, x0
   20e6c:	b.cc	20e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x409c>  // b.lo, b.ul, b.last
   20e70:	mov	x0, #0x0                   	// #0
   20e74:	ldp	x21, x22, [sp, #16]
   20e78:	ldr	x30, [sp, #32]
   20e7c:	ldp	x19, x20, [sp], #48
   20e80:	ret
   20e84:	ldr	x4, [x21, #16]
   20e88:	cmp	x4, x20
   20e8c:	b.ls	20e9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x40f4>  // b.plast
   20e90:	ldr	x0, [x21]
   20e94:	add	x0, x0, x19
   20e98:	b	20e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40cc>
   20e9c:	mov	x3, x20
   20ea0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20ea4:	add	x2, x2, #0x428
   20ea8:	mov	w1, #0x2f9                 	// #761
   20eac:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   20eb0:	add	x0, x0, #0x380
   20eb4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20eb8:	mov	x0, #0x0                   	// #0
   20ebc:	b	20e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40cc>
   20ec0:	stp	x19, x20, [sp, #-80]!
   20ec4:	str	x30, [sp, #56]
   20ec8:	mov	w20, #0x1                   	// #1
   20ecc:	cbz	x2, 20f94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41ec>
   20ed0:	stp	x21, x22, [sp, #16]
   20ed4:	stp	x23, x24, [sp, #32]
   20ed8:	str	x25, [sp, #48]
   20edc:	mov	x21, x0
   20ee0:	mov	x22, x1
   20ee4:	mov	x23, x2
   20ee8:	mov	x19, #0x0                   	// #0
   20eec:	add	x25, sp, #0x48
   20ef0:	sub	x24, x2, #0x1
   20ef4:	str	xzr, [sp, #72]
   20ef8:	mov	x4, #0x0                   	// #0
   20efc:	mov	x3, x25
   20f00:	sub	x2, x24, x19
   20f04:	add	x1, x22, x19
   20f08:	ldr	w0, [x21, #16]
   20f0c:	bl	180c4 <__sanitizer_set_report_fd@@Base+0x5280>
   20f10:	ands	w20, w0, #0xff
   20f14:	b.eq	20f74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41cc>  // b.none
   20f18:	ldr	x0, [sp, #72]
   20f1c:	cbz	x0, 20f74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41cc>
   20f20:	add	x19, x19, x0
   20f24:	ldr	x0, [x21]
   20f28:	ldr	x3, [x0]
   20f2c:	mov	x2, x19
   20f30:	mov	x1, x22
   20f34:	mov	x0, x21
   20f38:	blr	x3
   20f3c:	and	w3, w0, #0xff
   20f40:	cbnz	w3, 20f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41b8>
   20f44:	add	x0, x19, #0x1
   20f48:	cmp	x0, x23
   20f4c:	b.ne	20ef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x414c>  // b.any
   20f50:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20f54:	add	x0, x0, #0x478
   20f58:	bl	1a3fc <OnPrint@@Base+0x3d8>
   20f5c:	mov	x19, #0x0                   	// #0
   20f60:	strb	wzr, [x22, x19]
   20f64:	ldp	x21, x22, [sp, #16]
   20f68:	ldp	x23, x24, [sp, #32]
   20f6c:	ldr	x25, [sp, #48]
   20f70:	b	20f94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41ec>
   20f74:	ldr	w1, [x21, #16]
   20f78:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   20f7c:	add	x0, x0, #0x448
   20f80:	bl	1a3fc <OnPrint@@Base+0x3d8>
   20f84:	mov	w20, #0x0                   	// #0
   20f88:	ldp	x21, x22, [sp, #16]
   20f8c:	ldp	x23, x24, [sp, #32]
   20f90:	ldr	x25, [sp, #48]
   20f94:	mov	w0, w20
   20f98:	ldr	x30, [sp, #56]
   20f9c:	ldp	x19, x20, [sp], #80
   20fa0:	ret
   20fa4:	str	x30, [sp, #-16]!
   20fa8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20fac:	ldr	x0, [x0, #3984]
   20fb0:	mov	w2, #0x1                   	// #1
   20fb4:	ldxrb	w1, [x0]
   20fb8:	stxrb	w3, w2, [x0]
   20fbc:	cbnz	w3, 20fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420c>
   20fc0:	dmb	ish
   20fc4:	and	w0, w1, #0xff
   20fc8:	cbnz	w0, 20ff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x424c>
   20fcc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20fd0:	ldr	x0, [x0, #3936]
   20fd4:	ldr	x0, [x0]
   20fd8:	cbz	x0, 21004 <__sanitizer_get_module_and_offset_for_pc@@Base+0x425c>
   20fdc:	dmb	ish
   20fe0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20fe4:	ldr	x1, [x1, #3984]
   20fe8:	strb	wzr, [x1]
   20fec:	ldr	x30, [sp], #16
   20ff0:	ret
   20ff4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   20ff8:	ldr	x0, [x0, #3984]
   20ffc:	bl	c2a0 <__ubsan_handle_cfi_bad_type@@Base+0x580>
   21000:	b	20fcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4224>
   21004:	bl	222a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54fc>
   21008:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2100c:	ldr	x1, [x1, #3936]
   21010:	str	x0, [x1]
   21014:	cbnz	x0, 20fdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4234>
   21018:	mov	x4, #0x0                   	// #0
   2101c:	mov	x3, #0x0                   	// #0
   21020:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21024:	add	x2, x2, #0x4a0
   21028:	mov	w1, #0x17                  	// #23
   2102c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21030:	add	x0, x0, #0x4b8
   21034:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21038:	stp	x19, x20, [sp, #-32]!
   2103c:	stp	x21, x30, [sp, #16]
   21040:	mov	x20, x0
   21044:	mov	x21, x2
   21048:	bl	14774 <__sanitizer_set_report_fd@@Base+0x1930>
   2104c:	mov	x19, x0
   21050:	mov	x2, #0x0                   	// #0
   21054:	mov	x1, #0x0                   	// #0
   21058:	add	x0, x0, #0x1
   2105c:	bl	d178 <__sancov_default_options@@Base+0x47c>
   21060:	str	x0, [x21]
   21064:	mov	x2, x19
   21068:	mov	x1, x20
   2106c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   21070:	ldr	x0, [x21]
   21074:	strb	wzr, [x0, x19]
   21078:	add	x0, x20, x19
   2107c:	ldrb	w1, [x20, x19]
   21080:	cmp	w1, #0x0
   21084:	cinc	x0, x0, ne  // ne = any
   21088:	ldp	x21, x30, [sp, #16]
   2108c:	ldp	x19, x20, [sp], #32
   21090:	ret
   21094:	stp	x19, x20, [sp, #-48]!
   21098:	str	x30, [sp, #16]
   2109c:	mov	x20, x2
   210a0:	add	x2, sp, #0x28
   210a4:	bl	21038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   210a8:	mov	x19, x0
   210ac:	ldr	x0, [sp, #40]
   210b0:	cbz	x0, 210bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4314>
   210b4:	bl	14c0c <__sanitizer_set_report_fd@@Base+0x1dc8>
   210b8:	str	w0, [x20]
   210bc:	mov	x1, #0x0                   	// #0
   210c0:	ldr	x0, [sp, #40]
   210c4:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   210c8:	mov	x0, x19
   210cc:	ldr	x30, [sp, #16]
   210d0:	ldp	x19, x20, [sp], #48
   210d4:	ret
   210d8:	stp	x19, x20, [sp, #-48]!
   210dc:	str	x30, [sp, #16]
   210e0:	mov	x20, x2
   210e4:	add	x2, sp, #0x28
   210e8:	bl	21038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   210ec:	mov	x19, x0
   210f0:	ldr	x0, [sp, #40]
   210f4:	cbz	x0, 21100 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4358>
   210f8:	bl	14c0c <__sanitizer_set_report_fd@@Base+0x1dc8>
   210fc:	str	x0, [x20]
   21100:	mov	x1, #0x0                   	// #0
   21104:	ldr	x0, [sp, #40]
   21108:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   2110c:	mov	x0, x19
   21110:	ldr	x30, [sp, #16]
   21114:	ldp	x19, x20, [sp], #48
   21118:	ret
   2111c:	stp	x19, x20, [sp, #-48]!
   21120:	stp	x21, x22, [sp, #16]
   21124:	str	x30, [sp, #32]
   21128:	mov	x20, x0
   2112c:	mov	x22, x1
   21130:	mov	x21, x2
   21134:	bl	14a5c <__sanitizer_set_report_fd@@Base+0x1c18>
   21138:	cbz	x0, 21188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e0>
   2113c:	sub	x19, x0, x20
   21140:	mov	x2, #0x0                   	// #0
   21144:	mov	x1, #0x0                   	// #0
   21148:	add	x0, x19, #0x1
   2114c:	bl	d178 <__sancov_default_options@@Base+0x47c>
   21150:	str	x0, [x21]
   21154:	mov	x2, x19
   21158:	mov	x1, x20
   2115c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   21160:	ldr	x0, [x21]
   21164:	strb	wzr, [x0, x19]
   21168:	add	x21, x20, x19
   2116c:	ldrb	w0, [x20, x19]
   21170:	cbnz	w0, 21198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   21174:	mov	x0, x21
   21178:	ldp	x21, x22, [sp, #16]
   2117c:	ldr	x30, [sp, #32]
   21180:	ldp	x19, x20, [sp], #48
   21184:	ret
   21188:	mov	x0, x20
   2118c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   21190:	mov	x19, x0
   21194:	b	21140 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4398>
   21198:	mov	x0, x22
   2119c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   211a0:	add	x21, x21, x0
   211a4:	b	21174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43cc>
   211a8:	stp	x19, x20, [sp, #-64]!
   211ac:	stp	x21, x22, [sp, #16]
   211b0:	str	x30, [sp, #32]
   211b4:	mov	x21, x0
   211b8:	add	x22, x0, #0x70
   211bc:	mov	x0, x22
   211c0:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   211c4:	ldr	x19, [x21, #208]
   211c8:	cbz	x19, 211fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4454>
   211cc:	add	x20, sp, #0x38
   211d0:	mov	x1, x21
   211d4:	mov	x0, x20
   211d8:	bl	208d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   211dc:	ldr	x1, [x19]
   211e0:	ldr	x1, [x1, #16]
   211e4:	mov	x0, x19
   211e8:	blr	x1
   211ec:	mov	x0, x20
   211f0:	bl	208f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   211f4:	ldr	x19, [x19, #8]
   211f8:	cbnz	x19, 211d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4428>
   211fc:	mov	x0, x22
   21200:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   21204:	ldp	x21, x22, [sp, #16]
   21208:	ldr	x30, [sp, #32]
   2120c:	ldp	x19, x20, [sp], #64
   21210:	ret
   21214:	stp	x19, x20, [sp, #-80]!
   21218:	stp	x21, x22, [sp, #16]
   2121c:	stp	x23, x24, [sp, #32]
   21220:	str	x30, [sp, #48]
   21224:	mov	x22, x0
   21228:	mov	x23, x1
   2122c:	add	x24, x0, #0x70
   21230:	mov	x0, x24
   21234:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   21238:	ldr	x19, [x22, #208]
   2123c:	cbz	x19, 2127c <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d4>
   21240:	add	x21, sp, #0x48
   21244:	mov	x1, x22
   21248:	mov	x0, x21
   2124c:	bl	208d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   21250:	ldr	x2, [x19]
   21254:	ldr	x2, [x2, #24]
   21258:	mov	x1, x23
   2125c:	mov	x0, x19
   21260:	blr	x2
   21264:	mov	x20, x0
   21268:	cbnz	x0, 212ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4504>
   2126c:	mov	x0, x21
   21270:	bl	208f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   21274:	ldr	x19, [x19, #8]
   21278:	cbnz	x19, 21244 <__sanitizer_get_module_and_offset_for_pc@@Base+0x449c>
   2127c:	mov	x1, x23
   21280:	mov	x0, x22
   21284:	bl	22290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54e8>
   21288:	mov	x20, x0
   2128c:	mov	x0, x24
   21290:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   21294:	mov	x0, x20
   21298:	ldp	x21, x22, [sp, #16]
   2129c:	ldp	x23, x24, [sp, #32]
   212a0:	ldr	x30, [sp, #48]
   212a4:	ldp	x19, x20, [sp], #80
   212a8:	ret
   212ac:	add	x0, sp, #0x48
   212b0:	bl	208f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   212b4:	b	2128c <__sanitizer_get_module_and_offset_for_pc@@Base+0x44e4>
   212b8:	stp	x19, x20, [sp, #-32]!
   212bc:	str	x30, [sp, #16]
   212c0:	mov	x19, x0
   212c4:	add	x20, x0, #0x28
   212c8:	mov	x0, x20
   212cc:	bl	17630 <__sanitizer_set_report_fd@@Base+0x47ec>
   212d0:	add	x0, x19, #0x48
   212d4:	bl	17758 <__sanitizer_set_report_fd@@Base+0x4914>
   212d8:	ldr	x0, [x19, #56]
   212dc:	cbz	x0, 212f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x454c>
   212e0:	mov	w0, #0x1                   	// #1
   212e4:	strb	w0, [x19, #104]
   212e8:	ldr	x30, [sp, #16]
   212ec:	ldp	x19, x20, [sp], #32
   212f0:	ret
   212f4:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   212f8:	add	x0, x0, #0x508
   212fc:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   21300:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   21304:	stp	x19, x20, [sp, #-32]!
   21308:	str	x30, [sp, #24]
   2130c:	mov	x19, x0
   21310:	mov	x20, x1
   21314:	ldrb	w0, [x0, #104]
   21318:	cbz	w0, 21340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4598>
   2131c:	str	x21, [sp, #16]
   21320:	add	x21, x19, #0x28
   21324:	mov	x0, x21
   21328:	bl	20e20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   2132c:	cbz	x0, 21374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45cc>
   21330:	ldr	x21, [sp, #16]
   21334:	ldr	x30, [sp, #24]
   21338:	ldp	x19, x20, [sp], #32
   2133c:	ret
   21340:	mov	x0, x19
   21344:	bl	212b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4510>
   21348:	mov	x1, x20
   2134c:	add	x0, x19, #0x28
   21350:	bl	20e20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   21354:	cbnz	x0, 21334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   21358:	ldr	x1, [x19, #88]
   2135c:	mov	x0, #0x0                   	// #0
   21360:	cbz	x1, 21334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   21364:	mov	x1, x20
   21368:	add	x0, x19, #0x48
   2136c:	bl	20e20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   21370:	b	21334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   21374:	mov	x0, x19
   21378:	bl	212b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4510>
   2137c:	mov	x1, x20
   21380:	mov	x0, x21
   21384:	bl	20e20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   21388:	cbz	x0, 21394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45ec>
   2138c:	ldr	x21, [sp, #16]
   21390:	b	21334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   21394:	ldr	x21, [sp, #16]
   21398:	b	21358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45b0>
   2139c:	stp	x19, x20, [sp, #-48]!
   213a0:	stp	x21, x22, [sp, #16]
   213a4:	str	x30, [sp, #32]
   213a8:	mov	x22, x1
   213ac:	mov	x21, x2
   213b0:	mov	x20, x3
   213b4:	mov	x19, x4
   213b8:	bl	21304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x455c>
   213bc:	cbz	x0, 213f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4648>
   213c0:	ldr	x1, [x0]
   213c4:	str	x1, [x21]
   213c8:	ldr	x1, [x0, #8]
   213cc:	sub	x1, x22, x1
   213d0:	str	x1, [x20]
   213d4:	ldr	w0, [x0, #24]
   213d8:	str	w0, [x19]
   213dc:	mov	w0, #0x1                   	// #1
   213e0:	ldp	x21, x22, [sp, #16]
   213e4:	ldr	x30, [sp, #32]
   213e8:	ldp	x19, x20, [sp], #48
   213ec:	ret
   213f0:	mov	w0, #0x0                   	// #0
   213f4:	b	213e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4638>
   213f8:	stp	x19, x20, [sp, #-64]!
   213fc:	stp	x21, x22, [sp, #16]
   21400:	stp	x23, x30, [sp, #32]
   21404:	mov	x19, x0
   21408:	mov	x21, x1
   2140c:	mov	x20, x2
   21410:	mov	x22, x3
   21414:	add	x23, x0, #0x70
   21418:	mov	x0, x23
   2141c:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   21420:	str	xzr, [sp, #56]
   21424:	add	x4, sp, #0x34
   21428:	mov	x3, x22
   2142c:	add	x2, sp, #0x38
   21430:	mov	x1, x21
   21434:	mov	x0, x19
   21438:	bl	2139c <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f4>
   2143c:	mov	w21, w0
   21440:	tst	w0, #0xff
   21444:	b.eq	2145c <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b4>  // b.none
   21448:	cbz	x20, 2145c <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b4>
   2144c:	ldr	x1, [sp, #56]
   21450:	mov	x0, x19
   21454:	bl	204ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3704>
   21458:	str	x0, [x20]
   2145c:	mov	x0, x23
   21460:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   21464:	mov	w0, w21
   21468:	ldp	x21, x22, [sp, #16]
   2146c:	ldp	x23, x30, [sp, #32]
   21470:	ldp	x19, x20, [sp], #64
   21474:	ret
   21478:	stp	x19, x20, [sp, #-96]!
   2147c:	stp	x21, x22, [sp, #16]
   21480:	stp	x23, x24, [sp, #32]
   21484:	str	x30, [sp, #48]
   21488:	mov	x20, x0
   2148c:	mov	x21, x1
   21490:	add	x24, x0, #0x70
   21494:	mov	x0, x24
   21498:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   2149c:	mov	x0, x21
   214a0:	bl	203a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   214a4:	mov	x23, x0
   214a8:	add	x4, sp, #0x4c
   214ac:	add	x3, sp, #0x50
   214b0:	add	x2, sp, #0x58
   214b4:	mov	x1, x21
   214b8:	mov	x0, x20
   214bc:	bl	2139c <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f4>
   214c0:	and	w0, w0, #0xff
   214c4:	cbnz	w0, 214e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4740>
   214c8:	mov	x0, x24
   214cc:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   214d0:	mov	x0, x23
   214d4:	ldp	x21, x22, [sp, #16]
   214d8:	ldp	x23, x24, [sp, #32]
   214dc:	ldr	x30, [sp, #48]
   214e0:	ldp	x19, x20, [sp], #96
   214e4:	ret
   214e8:	ldr	w3, [sp, #76]
   214ec:	ldr	x2, [sp, #80]
   214f0:	ldr	x1, [sp, #88]
   214f4:	add	x0, x23, #0x8
   214f8:	bl	20358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   214fc:	ldr	x19, [x20, #208]
   21500:	cbz	x19, 214c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>
   21504:	add	x22, sp, #0x40
   21508:	mov	x1, x20
   2150c:	mov	x0, x22
   21510:	bl	208d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   21514:	ldr	x0, [x19]
   21518:	ldr	x3, [x0]
   2151c:	mov	x2, x23
   21520:	mov	x1, x21
   21524:	mov	x0, x19
   21528:	blr	x3
   2152c:	and	w2, w0, #0xff
   21530:	cbnz	w2, 21548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47a0>
   21534:	mov	x0, x22
   21538:	bl	208f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   2153c:	ldr	x19, [x19, #8]
   21540:	cbnz	x19, 21508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4760>
   21544:	b	214c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>
   21548:	add	x0, sp, #0x40
   2154c:	bl	208f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   21550:	b	214c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>
   21554:	stp	x19, x20, [sp, #-112]!
   21558:	stp	x21, x22, [sp, #16]
   2155c:	stp	x23, x24, [sp, #32]
   21560:	stp	x25, x26, [sp, #48]
   21564:	str	x30, [sp, #64]
   21568:	mov	x21, x0
   2156c:	mov	x24, x1
   21570:	mov	x22, x2
   21574:	add	x26, x0, #0x70
   21578:	mov	x0, x26
   2157c:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   21580:	add	x4, sp, #0x5c
   21584:	add	x3, sp, #0x60
   21588:	add	x2, sp, #0x68
   2158c:	mov	x1, x24
   21590:	mov	x0, x21
   21594:	bl	2139c <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f4>
   21598:	ands	w25, w0, #0xff
   2159c:	b.ne	215c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x481c>  // b.any
   215a0:	mov	x0, x26
   215a4:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   215a8:	mov	w0, w25
   215ac:	ldp	x21, x22, [sp, #16]
   215b0:	ldp	x23, x24, [sp, #32]
   215b4:	ldp	x25, x26, [sp, #48]
   215b8:	ldr	x30, [sp, #64]
   215bc:	ldp	x19, x20, [sp], #112
   215c0:	ret
   215c4:	mov	x0, x22
   215c8:	bl	20420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3678>
   215cc:	ldr	x0, [sp, #104]
   215d0:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   215d4:	str	x0, [x22]
   215d8:	ldr	x0, [sp, #96]
   215dc:	str	x0, [x22, #8]
   215e0:	ldr	w0, [sp, #92]
   215e4:	str	w0, [x22, #16]
   215e8:	ldr	x19, [x21, #208]
   215ec:	cbz	x19, 215a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47f8>
   215f0:	add	x23, sp, #0x50
   215f4:	mov	x1, x21
   215f8:	mov	x0, x23
   215fc:	bl	208d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   21600:	ldr	x0, [x19]
   21604:	ldr	x3, [x0, #8]
   21608:	mov	x2, x22
   2160c:	mov	x1, x24
   21610:	mov	x0, x19
   21614:	blr	x3
   21618:	ands	w20, w0, #0xff
   2161c:	b.ne	21634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x488c>  // b.any
   21620:	mov	x0, x23
   21624:	bl	208f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   21628:	ldr	x19, [x19, #8]
   2162c:	cbnz	x19, 215f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x484c>
   21630:	b	215a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47f8>
   21634:	add	x0, sp, #0x50
   21638:	bl	208f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   2163c:	mov	w25, w20
   21640:	b	215a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47f8>
   21644:	stp	x19, x20, [sp, #-128]!
   21648:	stp	x21, x22, [sp, #16]
   2164c:	stp	x23, x24, [sp, #32]
   21650:	stp	x25, x26, [sp, #48]
   21654:	stp	x27, x28, [sp, #64]
   21658:	str	x30, [sp, #80]
   2165c:	mov	x21, x0
   21660:	mov	x22, x1
   21664:	str	x1, [sp, #104]
   21668:	mov	w19, #0x1                   	// #1
   2166c:	add	x26, sp, #0x70
   21670:	adrp	x23, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21674:	add	x23, x23, #0xce8
   21678:	add	x27, sp, #0x78
   2167c:	adrp	x28, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21680:	add	x28, x28, #0x640
   21684:	b	217d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a2c>
   21688:	mov	x4, #0x0                   	// #0
   2168c:	mov	x3, #0x0                   	// #0
   21690:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21694:	add	x2, x2, #0x520
   21698:	mov	w1, #0x12c                 	// #300
   2169c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   216a0:	add	x0, x0, #0x4b8
   216a4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   216a8:	mov	x1, #0x0                   	// #0
   216ac:	mov	x0, x2
   216b0:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   216b4:	ldp	x21, x22, [sp, #16]
   216b8:	ldp	x23, x24, [sp, #32]
   216bc:	ldp	x25, x26, [sp, #48]
   216c0:	ldp	x27, x28, [sp, #64]
   216c4:	ldr	x30, [sp, #80]
   216c8:	ldp	x19, x20, [sp], #128
   216cc:	ret
   216d0:	ldr	x0, [x22, #8]
   216d4:	bl	203a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   216d8:	mov	x20, x0
   216dc:	ldr	w3, [x22, #32]
   216e0:	ldr	x2, [x22, #24]
   216e4:	ldr	x1, [x22, #16]
   216e8:	add	x0, x0, #0x8
   216ec:	bl	20358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   216f0:	ldr	x0, [sp, #104]
   216f4:	str	x20, [x0]
   216f8:	str	x20, [sp, #104]
   216fc:	b	21804 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a5c>
   21700:	mov	x4, #0x0                   	// #0
   21704:	mov	x3, #0x0                   	// #0
   21708:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2170c:	add	x2, x2, #0x540
   21710:	mov	w1, #0x10d                 	// #269
   21714:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21718:	add	x0, x0, #0x4b8
   2171c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21720:	ldrb	w0, [x19]
   21724:	cmp	w0, #0x3a
   21728:	b.ne	2178c <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e4>  // b.any
   2172c:	ldrb	w0, [x19, #1]
   21730:	sub	w0, w0, #0x30
   21734:	cmp	w0, #0x9
   21738:	b.hi	2178c <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e4>  // b.pmore
   2173c:	ldr	w0, [x20, #64]
   21740:	str	w0, [x20, #68]
   21744:	add	x0, x19, #0x1
   21748:	bl	14c0c <__sanitizer_set_report_fd@@Base+0x1dc8>
   2174c:	str	w0, [x20, #64]
   21750:	strb	wzr, [x19], #-1
   21754:	subs	w25, w25, #0x1
   21758:	b.eq	2178c <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e4>  // b.none
   2175c:	ldr	x1, [sp, #120]
   21760:	cmp	x19, x1
   21764:	b.ls	21720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4978>  // b.plast
   21768:	ldrb	w0, [x19]
   2176c:	sub	w0, w0, #0x30
   21770:	cmp	w0, #0x9
   21774:	b.hi	21720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4978>  // b.pmore
   21778:	sub	x19, x19, #0x1
   2177c:	cmp	x1, x19
   21780:	b.ne	21768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49c0>  // b.any
   21784:	mov	x19, x1
   21788:	b	21720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4978>
   2178c:	add	x2, x20, #0x38
   21790:	mov	x1, x28
   21794:	ldr	x0, [sp, #120]
   21798:	bl	21038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   2179c:	mov	x1, #0x0                   	// #0
   217a0:	ldr	x0, [sp, #120]
   217a4:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   217a8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   217ac:	add	x1, x1, #0x560
   217b0:	ldr	x0, [x20, #40]
   217b4:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   217b8:	cbz	w0, 21848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aa0>
   217bc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   217c0:	add	x1, x1, #0x560
   217c4:	ldr	x0, [x20, #56]
   217c8:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   217cc:	cbz	w0, 2185c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab4>
   217d0:	mov	w19, #0x0                   	// #0
   217d4:	str	xzr, [sp, #112]
   217d8:	mov	x2, x26
   217dc:	mov	x1, x23
   217e0:	mov	x0, x21
   217e4:	bl	21038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   217e8:	mov	x21, x0
   217ec:	ldr	x2, [sp, #112]
   217f0:	cbz	x2, 21688 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48e0>
   217f4:	ldrb	w0, [x2]
   217f8:	cbz	w0, 216a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4900>
   217fc:	mov	x20, x22
   21800:	cbz	w19, 216d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4928>
   21804:	ldr	x0, [sp, #112]
   21808:	str	x0, [x20, #40]
   2180c:	str	xzr, [sp, #120]
   21810:	mov	x2, x27
   21814:	mov	x1, x23
   21818:	mov	x0, x21
   2181c:	bl	21038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   21820:	mov	x21, x0
   21824:	ldr	x0, [sp, #120]
   21828:	cbz	x0, 21700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4958>
   2182c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   21830:	cbz	x0, 2179c <__sanitizer_get_module_and_offset_for_pc@@Base+0x49f4>
   21834:	sub	x0, x0, #0x1
   21838:	ldr	x19, [sp, #120]
   2183c:	add	x19, x19, x0
   21840:	mov	w25, #0x2                   	// #2
   21844:	b	2175c <__sanitizer_get_module_and_offset_for_pc@@Base+0x49b4>
   21848:	mov	x1, #0x0                   	// #0
   2184c:	ldr	x0, [x20, #40]
   21850:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   21854:	str	xzr, [x20, #40]
   21858:	b	217bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a14>
   2185c:	mov	x1, #0x0                   	// #0
   21860:	ldr	x0, [x20, #56]
   21864:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   21868:	str	xzr, [x20, #56]
   2186c:	b	217d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a28>
   21870:	stp	x19, x20, [sp, #-32]!
   21874:	str	x30, [sp, #16]
   21878:	mov	x19, x1
   2187c:	adrp	x20, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21880:	add	x20, x20, #0xce8
   21884:	add	x2, x1, #0x28
   21888:	mov	x1, x20
   2188c:	bl	21038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   21890:	add	x2, x19, #0x30
   21894:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x3150>
   21898:	add	x1, x1, #0xa38
   2189c:	bl	210d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4330>
   218a0:	add	x2, x19, #0x38
   218a4:	mov	x1, x20
   218a8:	bl	210d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4330>
   218ac:	ldr	x30, [sp, #16]
   218b0:	ldp	x19, x20, [sp], #32
   218b4:	ret
   218b8:	str	x30, [sp, #-16]!
   218bc:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   218c0:	add	x3, x3, #0xef0
   218c4:	str	x3, [x0]
   218c8:	str	x1, [x0, #8]
   218cc:	mov	w3, #0xffffffff            	// #-1
   218d0:	str	w3, [x0, #16]
   218d4:	str	w3, [x0, #20]
   218d8:	str	xzr, [x0, #16408]
   218dc:	add	x0, x0, #0x4, lsl #12
   218e0:	strb	wzr, [x0, #32]
   218e4:	strb	wzr, [x0, #33]
   218e8:	strb	w2, [x0, #34]
   218ec:	cbz	x1, 21900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b58>
   218f0:	ldrb	w0, [x1]
   218f4:	cbz	w0, 21920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b78>
   218f8:	ldr	x30, [sp], #16
   218fc:	ret
   21900:	mov	x4, #0x0                   	// #0
   21904:	mov	x3, #0x0                   	// #0
   21908:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2190c:	add	x2, x2, #0x568
   21910:	mov	w1, #0x18f                 	// #399
   21914:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21918:	add	x0, x0, #0x4b8
   2191c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21920:	mov	x4, #0x0                   	// #0
   21924:	mov	x3, #0x0                   	// #0
   21928:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2192c:	add	x2, x2, #0x580
   21930:	mov	w1, #0x190                 	// #400
   21934:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21938:	add	x0, x0, #0x4b8
   2193c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21940:	stp	x19, x20, [sp, #-32]!
   21944:	stp	x21, x30, [sp, #16]
   21948:	mov	x19, x0
   2194c:	mov	x21, x1
   21950:	mov	x0, x2
   21954:	str	xzr, [x19, #8]
   21958:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   2195c:	add	x1, x1, #0xec0
   21960:	str	x1, [x19]
   21964:	mov	x1, #0x4028                	// #16424
   21968:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   2196c:	mov	x20, x0
   21970:	mov	w2, #0x0                   	// #0
   21974:	mov	x1, x21
   21978:	bl	218b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b10>
   2197c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   21980:	add	x0, x0, #0xe98
   21984:	str	x0, [x20]
   21988:	str	x20, [x19, #16]
   2198c:	ldp	x21, x30, [sp, #16]
   21990:	ldp	x19, x20, [sp], #32
   21994:	ret
   21998:	stp	x19, x30, [sp, #-16]!
   2199c:	mov	x19, x0
   219a0:	ldr	w0, [x0, #16]
   219a4:	cmn	w0, #0x1
   219a8:	b.ne	219c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c20>  // b.any
   219ac:	ldr	w0, [x19, #20]
   219b0:	cmn	w0, #0x1
   219b4:	b.ne	219d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c28>  // b.any
   219b8:	mov	x0, x19
   219bc:	bl	21fdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5234>
   219c0:	ldp	x19, x30, [sp], #16
   219c4:	ret
   219c8:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   219cc:	b	219ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c04>
   219d0:	bl	180b4 <__sanitizer_set_report_fd@@Base+0x5270>
   219d4:	b	219b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c10>
   219d8:	cbnz	x2, 219e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c3c>
   219dc:	mov	w0, #0x1                   	// #1
   219e0:	ret
   219e4:	stp	x19, x20, [sp, #-48]!
   219e8:	str	x30, [sp, #16]
   219ec:	mov	x20, x0
   219f0:	mov	x19, x2
   219f4:	str	xzr, [sp, #40]
   219f8:	mov	x4, #0x0                   	// #0
   219fc:	add	x3, sp, #0x28
   21a00:	ldr	w0, [x0, #20]
   21a04:	bl	18108 <__sanitizer_set_report_fd@@Base+0x52c4>
   21a08:	ands	w0, w0, #0xff
   21a0c:	b.eq	21a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c74>  // b.none
   21a10:	ldr	x1, [sp, #40]
   21a14:	cmp	x1, x19
   21a18:	b.eq	21a30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c88>  // b.none
   21a1c:	ldr	w1, [x20, #20]
   21a20:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21a24:	add	x0, x0, #0x5a0
   21a28:	bl	1a3fc <OnPrint@@Base+0x3d8>
   21a2c:	mov	w0, #0x0                   	// #0
   21a30:	ldr	x30, [sp, #16]
   21a34:	ldp	x19, x20, [sp], #48
   21a38:	ret
   21a3c:	stp	x19, x20, [sp, #-32]!
   21a40:	str	x30, [sp, #16]
   21a44:	mov	x19, x0
   21a48:	ldr	w0, [x0, #16]
   21a4c:	cmn	w0, #0x1
   21a50:	b.eq	21ab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d10>  // b.none
   21a54:	mov	x20, x1
   21a58:	ldr	w0, [x19, #20]
   21a5c:	cmn	w0, #0x1
   21a60:	b.eq	21ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d18>  // b.none
   21a64:	mov	x0, x1
   21a68:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   21a6c:	mov	x2, x0
   21a70:	mov	x1, x20
   21a74:	mov	x0, x19
   21a78:	bl	219d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c30>
   21a7c:	and	w0, w0, #0xff
   21a80:	cbz	w0, 21ac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d20>
   21a84:	mov	x0, x19
   21a88:	ldr	x1, [x0], #24
   21a8c:	ldr	x3, [x1, #16]
   21a90:	mov	x2, #0x4000                	// #16384
   21a94:	mov	x1, x0
   21a98:	mov	x0, x19
   21a9c:	blr	x3
   21aa0:	ands	w0, w0, #0xff
   21aa4:	add	x19, x19, #0x18
   21aa8:	csel	x0, x19, xzr, ne  // ne = any
   21aac:	ldr	x30, [sp, #16]
   21ab0:	ldp	x19, x20, [sp], #32
   21ab4:	ret
   21ab8:	mov	x0, #0x0                   	// #0
   21abc:	b	21aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d04>
   21ac0:	mov	x0, #0x0                   	// #0
   21ac4:	b	21aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d04>
   21ac8:	mov	x0, #0x0                   	// #0
   21acc:	b	21aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d04>
   21ad0:	stp	x19, x20, [sp, #-48]!
   21ad4:	str	x30, [sp, #32]
   21ad8:	mov	x19, x0
   21adc:	add	x0, x0, #0x4, lsl #12
   21ae0:	ldrb	w0, [x0, #32]
   21ae4:	cbnz	w0, 21bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e0c>
   21ae8:	stp	x21, x22, [sp, #16]
   21aec:	mov	x20, x1
   21af0:	ldr	x22, [x19, #8]
   21af4:	bl	f620 <__sancov_default_options@@Base+0x2924>
   21af8:	mov	x21, x0
   21afc:	cbz	x0, 21b1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d74>
   21b00:	mov	x0, x22
   21b04:	bl	f058 <__sancov_default_options@@Base+0x235c>
   21b08:	mov	x1, x0
   21b0c:	cbz	x0, 21b1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d74>
   21b10:	mov	x0, x21
   21b14:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   21b18:	cbz	w0, 21b6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc4>
   21b1c:	ldr	x0, [x19, #16408]
   21b20:	cmp	x0, #0x4
   21b24:	b.hi	21b54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dac>  // b.pmore
   21b28:	mov	x1, x20
   21b2c:	mov	x0, x19
   21b30:	bl	21a3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c94>
   21b34:	cbnz	x0, 21bbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e14>
   21b38:	mov	x0, x19
   21b3c:	bl	21998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bf0>
   21b40:	ldr	x0, [x19, #16408]
   21b44:	add	x0, x0, #0x1
   21b48:	str	x0, [x19, #16408]
   21b4c:	cmp	x0, #0x4
   21b50:	b.ls	21b28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d80>  // b.plast
   21b54:	add	x0, x19, #0x4, lsl #12
   21b58:	ldrb	w1, [x0, #32]
   21b5c:	mov	x0, #0x0                   	// #0
   21b60:	cbz	w1, 21b90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4de8>
   21b64:	ldp	x21, x22, [sp, #16]
   21b68:	b	21bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   21b6c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21b70:	add	x0, x0, #0x5d0
   21b74:	bl	1a3fc <OnPrint@@Base+0x3d8>
   21b78:	add	x19, x19, #0x4, lsl #12
   21b7c:	mov	w0, #0x1                   	// #1
   21b80:	strb	w0, [x19, #32]
   21b84:	mov	x0, #0x0                   	// #0
   21b88:	ldp	x21, x22, [sp, #16]
   21b8c:	b	21bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   21b90:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21b94:	add	x0, x0, #0x608
   21b98:	bl	1a3fc <OnPrint@@Base+0x3d8>
   21b9c:	add	x19, x19, #0x4, lsl #12
   21ba0:	mov	w0, #0x1                   	// #1
   21ba4:	strb	w0, [x19, #32]
   21ba8:	mov	x0, #0x0                   	// #0
   21bac:	ldp	x21, x22, [sp, #16]
   21bb0:	b	21bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   21bb4:	mov	x0, #0x0                   	// #0
   21bb8:	b	21bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   21bbc:	ldp	x21, x22, [sp, #16]
   21bc0:	ldr	x30, [sp, #32]
   21bc4:	ldp	x19, x20, [sp], #48
   21bc8:	ret
   21bcc:	stp	x19, x30, [sp, #-16]!
   21bd0:	cbz	x2, 21c34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e8c>
   21bd4:	mov	x19, x0
   21bd8:	and	w1, w1, #0xff
   21bdc:	mov	x5, x3
   21be0:	adrp	x3, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21be4:	add	x3, x3, #0x640
   21be8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21bec:	add	x0, x0, #0x648
   21bf0:	cmp	w1, #0x0
   21bf4:	csel	x3, x0, x3, ne  // ne = any
   21bf8:	cbnz	w4, 21c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ec0>
   21bfc:	mov	x4, x2
   21c00:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21c04:	add	x2, x2, #0x668
   21c08:	mov	x1, #0x4000                	// #16384
   21c0c:	add	x0, x19, #0x18
   21c10:	bl	1a028 <OnPrint@@Base+0x4>
   21c14:	mov	w1, #0x3fff                	// #16383
   21c18:	cmp	w0, w1
   21c1c:	b.gt	21c54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eac>
   21c20:	add	x1, x19, #0x18
   21c24:	ldr	x0, [x19, #16]
   21c28:	bl	21ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d28>
   21c2c:	ldp	x19, x30, [sp], #16
   21c30:	ret
   21c34:	mov	x4, #0x0                   	// #0
   21c38:	mov	x3, #0x0                   	// #0
   21c3c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21c40:	add	x2, x2, #0x650
   21c44:	mov	w1, #0x173                 	// #371
   21c48:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21c4c:	add	x0, x0, #0x4b8
   21c50:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21c54:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21c58:	add	x0, x0, #0x678
   21c5c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   21c60:	mov	x0, #0x0                   	// #0
   21c64:	b	21c2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e84>
   21c68:	add	x0, x19, #0x18
   21c6c:	cmp	w4, #0x4
   21c70:	b.eq	21d40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f98>  // b.none
   21c74:	b.hi	21ce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f3c>  // b.pmore
   21c78:	cmp	w4, #0x2
   21c7c:	b.eq	21d4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fa4>  // b.none
   21c80:	b.ls	21c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ef0>  // b.plast
   21c84:	cmp	w4, #0x3
   21c88:	b.ne	21d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   21c8c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21c90:	add	x1, x1, #0xd28
   21c94:	b	21ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   21c98:	cmp	w4, #0x1
   21c9c:	b.ne	21d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   21ca0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21ca4:	add	x1, x1, #0xd20
   21ca8:	mov	x6, x5
   21cac:	mov	x5, x1
   21cb0:	mov	x4, x2
   21cb4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21cb8:	add	x2, x2, #0x6a0
   21cbc:	mov	x1, #0x4000                	// #16384
   21cc0:	bl	1a028 <OnPrint@@Base+0x4>
   21cc4:	mov	w1, #0x3fff                	// #16383
   21cc8:	cmp	w0, w1
   21ccc:	b.le	21c20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e78>
   21cd0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21cd4:	add	x0, x0, #0x678
   21cd8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   21cdc:	mov	x0, #0x0                   	// #0
   21ce0:	b	21c2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e84>
   21ce4:	cmp	w4, #0x7
   21ce8:	b.eq	21d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fb0>  // b.none
   21cec:	b.ls	21d04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f5c>  // b.plast
   21cf0:	cmp	w4, #0x8
   21cf4:	b.ne	21d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   21cf8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21cfc:	add	x1, x1, #0xd40
   21d00:	b	21ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   21d04:	cmp	w4, #0x5
   21d08:	b.eq	21d64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fbc>  // b.none
   21d0c:	cmp	w4, #0x6
   21d10:	b.ne	21d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   21d14:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21d18:	add	x1, x1, #0xd08
   21d1c:	b	21ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   21d20:	mov	x4, #0x0                   	// #0
   21d24:	mov	x3, #0x0                   	// #0
   21d28:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21d2c:	add	x2, x2, #0xd50
   21d30:	mov	w1, #0x2a9                 	// #681
   21d34:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   21d38:	add	x0, x0, #0x380
   21d3c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21d40:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21d44:	add	x1, x1, #0xd18
   21d48:	b	21ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   21d4c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21d50:	add	x1, x1, #0xd10
   21d54:	b	21ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   21d58:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21d5c:	add	x1, x1, #0xd30
   21d60:	b	21ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   21d64:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   21d68:	add	x1, x1, #0xd38
   21d6c:	b	21ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   21d70:	stp	x19, x30, [sp, #-16]!
   21d74:	mov	x19, x2
   21d78:	ldr	w4, [x2, #32]
   21d7c:	ldr	x3, [x2, #24]
   21d80:	ldr	x2, [x2, #16]
   21d84:	mov	w1, #0x0                   	// #0
   21d88:	bl	21bcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e24>
   21d8c:	cbnz	x0, 21d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ff4>
   21d90:	mov	w0, #0x0                   	// #0
   21d94:	ldp	x19, x30, [sp], #16
   21d98:	ret
   21d9c:	mov	x1, x19
   21da0:	bl	21644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x489c>
   21da4:	mov	w0, #0x1                   	// #1
   21da8:	b	21d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fec>
   21dac:	stp	x19, x20, [sp, #-32]!
   21db0:	str	x30, [sp, #16]
   21db4:	mov	x20, x1
   21db8:	mov	x19, x2
   21dbc:	ldr	w4, [x2, #16]
   21dc0:	ldr	x3, [x2, #8]
   21dc4:	ldr	x2, [x2]
   21dc8:	mov	w1, #0x1                   	// #1
   21dcc:	bl	21bcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e24>
   21dd0:	cbnz	x0, 21de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x503c>
   21dd4:	mov	w0, #0x0                   	// #0
   21dd8:	ldr	x30, [sp, #16]
   21ddc:	ldp	x19, x20, [sp], #32
   21de0:	ret
   21de4:	mov	x1, x19
   21de8:	bl	21870 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac8>
   21dec:	ldr	x1, [x19, #48]
   21df0:	add	x1, x20, x1
   21df4:	ldr	x20, [x19, #8]
   21df8:	sub	x1, x1, x20
   21dfc:	str	x1, [x19, #48]
   21e00:	mov	w0, #0x1                   	// #1
   21e04:	b	21dd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5030>
   21e08:	mov	x0, #0x0                   	// #0
   21e0c:	ret
   21e10:	mov	w0, #0x0                   	// #0
   21e14:	cmp	x2, #0x1
   21e18:	b.ls	21e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5088>  // b.plast
   21e1c:	add	x0, x1, x2
   21e20:	ldurb	w3, [x0, #-1]
   21e24:	mov	w0, #0x0                   	// #0
   21e28:	cmp	w3, #0xa
   21e2c:	b.eq	21e34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x508c>  // b.none
   21e30:	ret
   21e34:	add	x1, x1, x2
   21e38:	ldurb	w0, [x1, #-2]
   21e3c:	cmp	w0, #0xa
   21e40:	cset	w0, eq  // eq = none
   21e44:	b	21e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5088>
   21e48:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   21e4c:	ldr	x0, [x0, #4056]
   21e50:	ldrb	w4, [x0, #180]
   21e54:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21e58:	add	x3, x0, #0x388
   21e5c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21e60:	add	x0, x0, #0x378
   21e64:	cmp	w4, #0x0
   21e68:	csel	x0, x0, x3, ne  // ne = any
   21e6c:	str	x1, [x2]
   21e70:	str	x0, [x2, #8]
   21e74:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21e78:	add	x0, x0, #0x3a0
   21e7c:	str	x0, [x2, #16]
   21e80:	str	xzr, [x2, #24]
   21e84:	ret
   21e88:	str	x30, [sp, #-16]!
   21e8c:	mov	x4, #0x0                   	// #0
   21e90:	mov	x3, #0x0                   	// #0
   21e94:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21e98:	add	x2, x2, #0x3b8
   21e9c:	mov	w1, #0x57                  	// #87
   21ea0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21ea4:	add	x0, x0, #0x3d8
   21ea8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21eac:	str	x30, [sp, #-16]!
   21eb0:	mov	x4, #0x0                   	// #0
   21eb4:	mov	x3, #0x0                   	// #0
   21eb8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21ebc:	add	x2, x2, #0x3b8
   21ec0:	mov	w1, #0x4e                  	// #78
   21ec4:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21ec8:	add	x0, x0, #0x3d8
   21ecc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21ed0:	mov	w0, #0x0                   	// #0
   21ed4:	cmp	x2, #0x8
   21ed8:	b.hi	21ee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5138>  // b.pmore
   21edc:	ret
   21ee0:	str	x30, [sp, #-16]!
   21ee4:	mov	x3, x1
   21ee8:	sub	x0, x2, #0x8
   21eec:	mov	x2, #0x8                   	// #8
   21ef0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   21ef4:	add	x1, x1, #0xaf0
   21ef8:	add	x0, x3, x0
   21efc:	bl	145a0 <__sanitizer_set_report_fd@@Base+0x175c>
   21f00:	cmp	w0, #0x0
   21f04:	cset	w0, eq  // eq = none
   21f08:	ldr	x30, [sp], #16
   21f0c:	ret
   21f10:	stp	x19, x30, [sp, #-16]!
   21f14:	mov	x19, x0
   21f18:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   21f1c:	ldr	x0, [x0, #3880]
   21f20:	cbz	x0, 21f40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5198>
   21f24:	mov	x3, #0x0                   	// #0
   21f28:	mov	x2, #0x0                   	// #0
   21f2c:	mov	x1, #0x0                   	// #0
   21f30:	mov	x0, x19
   21f34:	bl	6620 <__cxa_demangle@plt>
   21f38:	cmp	x0, #0x0
   21f3c:	csel	x19, x19, x0, eq  // eq = none
   21f40:	mov	x0, x19
   21f44:	ldp	x19, x30, [sp], #16
   21f48:	ret
   21f4c:	stp	x19, x20, [sp, #-32]!
   21f50:	str	x30, [sp, #16]
   21f54:	mov	x19, x0
   21f58:	cbz	x0, 21fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>
   21f5c:	ldrb	w1, [x0]
   21f60:	mov	x0, #0x0                   	// #0
   21f64:	cmp	w1, #0x5f
   21f68:	b.ne	21fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>  // b.any
   21f6c:	ldrb	w1, [x19, #1]
   21f70:	cmp	w1, #0x54
   21f74:	b.ne	21fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>  // b.any
   21f78:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21f7c:	ldr	x20, [x0, #952]
   21f80:	mov	x0, #0x0                   	// #0
   21f84:	cbz	x20, 21fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>
   21f88:	mov	x0, x19
   21f8c:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   21f90:	mov	w4, #0x0                   	// #0
   21f94:	mov	x3, #0x0                   	// #0
   21f98:	mov	x2, #0x0                   	// #0
   21f9c:	mov	x1, x0
   21fa0:	mov	x0, x19
   21fa4:	blr	x20
   21fa8:	ldr	x30, [sp, #16]
   21fac:	ldp	x19, x20, [sp], #32
   21fb0:	ret
   21fb4:	stp	x19, x30, [sp, #-16]!
   21fb8:	mov	x19, x0
   21fbc:	cbz	x0, 21fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5220>
   21fc0:	bl	21f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x51a4>
   21fc4:	cbz	x0, 21fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5228>
   21fc8:	ldp	x19, x30, [sp], #16
   21fcc:	ret
   21fd0:	mov	x0, x19
   21fd4:	bl	21f10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5168>
   21fd8:	b	21fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5220>
   21fdc:	stp	x19, x20, [sp, #-128]!
   21fe0:	stp	x21, x22, [sp, #16]
   21fe4:	str	x30, [sp, #48]
   21fe8:	mov	x19, x0
   21fec:	ldr	x0, [x0, #8]
   21ff0:	bl	15724 <__sanitizer_set_report_fd@@Base+0x28e0>
   21ff4:	ands	w20, w0, #0xff
   21ff8:	b.ne	2203c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5294>  // b.any
   21ffc:	add	x0, x19, #0x4, lsl #12
   22000:	ldrb	w21, [x0, #33]
   22004:	cbz	w21, 2201c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>
   22008:	mov	w0, w20
   2200c:	ldp	x21, x22, [sp, #16]
   22010:	ldr	x30, [sp, #48]
   22014:	ldp	x19, x20, [sp], #128
   22018:	ret
   2201c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22020:	add	x0, x0, #0x768
   22024:	bl	1a3fc <OnPrint@@Base+0x3d8>
   22028:	add	x19, x19, #0x4, lsl #12
   2202c:	mov	w0, #0x1                   	// #1
   22030:	strb	w0, [x19, #33]
   22034:	mov	w20, w21
   22038:	b	22008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   2203c:	stp	x23, x24, [sp, #32]
   22040:	mov	x2, #0x8                   	// #8
   22044:	mov	w1, #0x0                   	// #0
   22048:	add	x0, sp, #0x78
   2204c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   22050:	mov	x2, #0x8                   	// #8
   22054:	mov	w1, #0x0                   	// #0
   22058:	add	x0, sp, #0x70
   2205c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   22060:	add	x24, sp, #0x40
   22064:	mov	x20, x24
   22068:	mov	x23, #0x0                   	// #0
   2206c:	mov	w21, #0x0                   	// #0
   22070:	b	2210c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5364>
   22074:	cmp	w21, #0x0
   22078:	b.le	220a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52f8>
   2207c:	mov	w19, #0x0                   	// #0
   22080:	ldr	w0, [x24]
   22084:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   22088:	ldr	w0, [x24, #4]
   2208c:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   22090:	add	w19, w19, #0x1
   22094:	add	x24, x24, #0x8
   22098:	cmp	w19, w21
   2209c:	b.ne	22080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52d8>  // b.any
   220a0:	bl	6790 <__errno_location@plt>
   220a4:	ldr	w1, [x0]
   220a8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   220ac:	add	x0, x0, #0x810
   220b0:	bl	1a3fc <OnPrint@@Base+0x3d8>
   220b4:	mov	w20, #0x0                   	// #0
   220b8:	ldp	x23, x24, [sp, #32]
   220bc:	b	22008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   220c0:	cmp	w21, #0x0
   220c4:	b.le	221d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>
   220c8:	mov	w20, #0x0                   	// #0
   220cc:	b	220f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5348>
   220d0:	ldr	w0, [x24]
   220d4:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   220d8:	ldr	w0, [x24, #4]
   220dc:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   220e0:	add	w20, w20, #0x1
   220e4:	add	x24, x24, #0x8
   220e8:	cmp	w20, w21
   220ec:	b.eq	221d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>  // b.none
   220f0:	cmp	x24, x23
   220f4:	b.ne	220d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5328>  // b.any
   220f8:	b	220e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5338>
   220fc:	add	w21, w21, #0x1
   22100:	add	x20, x20, #0x8
   22104:	cmp	w21, #0x5
   22108:	b.eq	2226c <__sanitizer_get_module_and_offset_for_pc@@Base+0x54c4>  // b.none
   2210c:	mov	x22, x20
   22110:	mov	x0, x20
   22114:	bl	6400 <pipe@plt>
   22118:	cmn	w0, #0x1
   2211c:	b.eq	22074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52cc>  // b.none
   22120:	ldr	w0, [x20]
   22124:	cmp	w0, #0x2
   22128:	b.le	220fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   2212c:	ldr	w0, [x20, #4]
   22130:	cmp	w0, #0x2
   22134:	b.le	220fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   22138:	cbnz	x23, 220c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5318>
   2213c:	mov	x23, x20
   22140:	b	220fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   22144:	mov	x4, #0x0                   	// #0
   22148:	mov	x3, #0x0                   	// #0
   2214c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22150:	add	x2, x2, #0x7a8
   22154:	mov	w1, #0x88                  	// #136
   22158:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2215c:	add	x0, x0, #0x708
   22160:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22164:	mov	x4, #0x0                   	// #0
   22168:	mov	x3, #0x0                   	// #0
   2216c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22170:	add	x2, x2, #0x3b8
   22174:	mov	w1, #0xde                  	// #222
   22178:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2217c:	add	x0, x0, #0x708
   22180:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22184:	ldr	w0, [sp, #120]
   22188:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   2218c:	ldr	w0, [sp, #116]
   22190:	bl	15510 <__sanitizer_set_report_fd@@Base+0x26cc>
   22194:	ldp	x23, x24, [sp, #32]
   22198:	b	22008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   2219c:	mov	x4, #0x0                   	// #0
   221a0:	mov	x3, #0x0                   	// #0
   221a4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   221a8:	add	x2, x2, #0x7c0
   221ac:	mov	w1, #0xef                  	// #239
   221b0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   221b4:	add	x0, x0, #0x708
   221b8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   221bc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   221c0:	add	x0, x0, #0x7d0
   221c4:	bl	1a3fc <OnPrint@@Base+0x3d8>
   221c8:	ldp	x23, x24, [sp, #32]
   221cc:	b	22008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   221d0:	ldr	w0, [x23]
   221d4:	str	w0, [sp, #120]
   221d8:	ldr	w0, [x23, #4]
   221dc:	str	w0, [sp, #124]
   221e0:	ldr	w0, [x22]
   221e4:	str	w0, [sp, #112]
   221e8:	ldr	w0, [x22, #4]
   221ec:	str	w0, [sp, #116]
   221f0:	add	x0, x19, #0x4, lsl #12
   221f4:	ldrb	w20, [x0, #34]
   221f8:	cbnz	w20, 22164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53bc>
   221fc:	add	x21, sp, #0x40
   22200:	ldr	x0, [x19]
   22204:	ldr	x3, [x0, #8]
   22208:	mov	x2, x21
   2220c:	ldr	x1, [x19, #8]
   22210:	mov	x0, x19
   22214:	blr	x3
   22218:	mov	w4, #0xffffffff            	// #-1
   2221c:	ldr	w3, [sp, #124]
   22220:	ldr	w2, [sp, #112]
   22224:	mov	x1, x21
   22228:	ldr	x0, [x19, #8]
   2222c:	bl	193b8 <__sanitizer_set_report_fd@@Base+0x6574>
   22230:	mov	w21, w0
   22234:	tbnz	w0, #31, 22184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53dc>
   22238:	ldr	w0, [sp, #120]
   2223c:	str	w0, [x19, #16]
   22240:	ldr	w0, [sp, #116]
   22244:	str	w0, [x19, #20]
   22248:	cbz	w21, 2219c <__sanitizer_get_module_and_offset_for_pc@@Base+0x53f4>
   2224c:	mov	w0, #0xa                   	// #10
   22250:	bl	18bac <__sanitizer_set_report_fd@@Base+0x5d68>
   22254:	mov	w0, w21
   22258:	bl	1951c <__sanitizer_set_report_fd@@Base+0x66d8>
   2225c:	ands	w20, w0, #0xff
   22260:	b.eq	221bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5414>  // b.none
   22264:	ldp	x23, x24, [sp, #32]
   22268:	b	22008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   2226c:	cbnz	x23, 22144 <__sanitizer_get_module_and_offset_for_pc@@Base+0x539c>
   22270:	mov	x4, #0x0                   	// #0
   22274:	mov	x3, #0x0                   	// #0
   22278:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2227c:	add	x2, x2, #0x798
   22280:	mov	w1, #0x87                  	// #135
   22284:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22288:	add	x0, x0, #0x708
   2228c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22290:	str	x30, [sp, #-16]!
   22294:	mov	x0, x1
   22298:	bl	21fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>
   2229c:	ldr	x30, [sp], #16
   222a0:	ret
   222a4:	stp	x19, x20, [sp, #-112]!
   222a8:	str	x30, [sp, #32]
   222ac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   222b0:	ldr	x0, [x0, #4056]
   222b4:	ldrb	w0, [x0]
   222b8:	cbnz	w0, 22338 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5590>
   222bc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   222c0:	ldr	x0, [x0, #3896]
   222c4:	ldr	w1, [x0]
   222c8:	sxtw	x1, w1
   222cc:	mov	x19, #0x0                   	// #0
   222d0:	mov	x0, #0x0                   	// #0
   222d4:	cmp	x1, #0x1
   222d8:	b.hi	22324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x557c>  // b.pmore
   222dc:	str	x0, [sp, #88]
   222e0:	str	x19, [sp, #96]
   222e4:	str	x19, [sp, #104]
   222e8:	mov	x1, #0xf0                  	// #240
   222ec:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   222f0:	ldr	x0, [x0, #3968]
   222f4:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   222f8:	mov	x19, x0
   222fc:	ldp	x2, x3, [sp, #88]
   22300:	stp	x2, x3, [sp, #48]
   22304:	ldr	x1, [sp, #104]
   22308:	str	x1, [sp, #64]
   2230c:	add	x1, sp, #0x30
   22310:	bl	20704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x395c>
   22314:	mov	x0, x19
   22318:	ldr	x30, [sp, #32]
   2231c:	ldp	x19, x20, [sp], #112
   22320:	ret
   22324:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22328:	add	x0, x0, #0x860
   2232c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   22330:	mov	x0, #0x0                   	// #0
   22334:	b	222dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   22338:	bl	d110 <__sancov_default_options@@Base+0x414>
   2233c:	and	w0, w0, #0xff
   22340:	cbz	w0, 223a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55fc>
   22344:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22348:	ldr	x0, [x0, #3896]
   2234c:	ldr	w0, [x0]
   22350:	sxtw	x0, w0
   22354:	cmp	x0, #0x1
   22358:	b.hi	22394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55ec>  // b.pmore
   2235c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22360:	ldr	x0, [x0, #3968]
   22364:	bl	20dc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4018>
   22368:	mov	x19, x0
   2236c:	cbz	x0, 22428 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5680>
   22370:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22374:	ldr	x0, [x0, #3896]
   22378:	ldr	w0, [x0]
   2237c:	sxtw	x0, w0
   22380:	cmp	x0, #0x1
   22384:	b.hi	22418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5670>  // b.pmore
   22388:	str	xzr, [x19, #8]
   2238c:	mov	x0, #0x1                   	// #1
   22390:	b	222dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   22394:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22398:	add	x0, x0, #0x880
   2239c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   223a0:	b	2235c <__sanitizer_get_module_and_offset_for_pc@@Base+0x55b4>
   223a4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   223a8:	ldr	x0, [x0, #3856]
   223ac:	cmp	x0, #0x0
   223b0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   223b4:	ldr	x0, [x0, #3888]
   223b8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   223bc:	b.eq	2235c <__sanitizer_get_module_and_offset_for_pc@@Base+0x55b4>  // b.none
   223c0:	mov	x1, #0x4010                	// #16400
   223c4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   223c8:	ldr	x0, [x0, #3968]
   223cc:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   223d0:	mov	x19, x0
   223d4:	str	xzr, [x0, #8]
   223d8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   223dc:	add	x0, x0, #0xf70
   223e0:	str	x0, [x19]
   223e4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   223e8:	ldr	x0, [x0, #3896]
   223ec:	ldr	w0, [x0]
   223f0:	sxtw	x0, w0
   223f4:	cmp	x0, #0x1
   223f8:	b.hi	22408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5660>  // b.pmore
   223fc:	str	xzr, [x19, #8]
   22400:	mov	x0, #0x1                   	// #1
   22404:	b	222dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   22408:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2240c:	add	x0, x0, #0x8b0
   22410:	bl	1a3fc <OnPrint@@Base+0x3d8>
   22414:	b	223fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5654>
   22418:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2241c:	add	x0, x0, #0x8d0
   22420:	bl	1a3fc <OnPrint@@Base+0x3d8>
   22424:	b	22388 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55e0>
   22428:	stp	x21, x22, [sp, #16]
   2242c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22430:	ldr	x0, [x0, #4056]
   22434:	ldr	x21, [x0, #8]
   22438:	cbz	x21, 224e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5740>
   2243c:	mov	x0, x21
   22440:	bl	f058 <__sancov_default_options@@Base+0x235c>
   22444:	mov	x20, x0
   22448:	ldrb	w0, [x21]
   2244c:	cbz	w0, 224b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x570c>
   22450:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22454:	add	x1, x1, #0x920
   22458:	mov	x0, x20
   2245c:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   22460:	cbnz	w0, 22508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5760>
   22464:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22468:	ldr	x0, [x0, #3896]
   2246c:	ldr	w0, [x0]
   22470:	sxtw	x0, w0
   22474:	cmp	x0, #0x1
   22478:	b.hi	224f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x574c>  // b.pmore
   2247c:	adrp	x20, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22480:	ldr	x20, [x20, #3968]
   22484:	mov	x1, #0x4018                	// #16408
   22488:	mov	x0, x20
   2248c:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   22490:	mov	x19, x0
   22494:	mov	x2, x20
   22498:	mov	x1, x21
   2249c:	bl	21940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b98>
   224a0:	cbz	x19, 22974 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bcc>
   224a4:	str	xzr, [x19, #8]
   224a8:	mov	x0, #0x1                   	// #1
   224ac:	ldp	x21, x22, [sp, #16]
   224b0:	b	222dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   224b4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   224b8:	ldr	x0, [x0, #3896]
   224bc:	ldr	w0, [x0]
   224c0:	sxtw	x0, w0
   224c4:	cmp	x0, #0x1
   224c8:	b.hi	224d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5730>  // b.pmore
   224cc:	mov	x0, #0x0                   	// #0
   224d0:	ldp	x21, x22, [sp, #16]
   224d4:	b	222dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   224d8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   224dc:	add	x0, x0, #0x8f0
   224e0:	bl	1a3fc <OnPrint@@Base+0x3d8>
   224e4:	b	224cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5724>
   224e8:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   224ec:	add	x20, x20, #0x640
   224f0:	b	22450 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56a8>
   224f4:	mov	x1, x21
   224f8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   224fc:	add	x0, x0, #0x930
   22500:	bl	1a3fc <OnPrint@@Base+0x3d8>
   22504:	b	2247c <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d4>
   22508:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2250c:	add	x1, x1, #0x968
   22510:	mov	x0, x20
   22514:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   22518:	cbz	w0, 22680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d8>
   2251c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22520:	add	x1, x1, #0x9a8
   22524:	mov	x0, x20
   22528:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   2252c:	cbnz	w0, 22708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5960>
   22530:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22534:	ldr	x0, [x0, #3896]
   22538:	ldr	w0, [x0]
   2253c:	sxtw	x0, w0
   22540:	cmp	x0, #0x1
   22544:	b.hi	22690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58e8>  // b.pmore
   22548:	adrp	x20, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2254c:	ldr	x20, [x20, #3968]
   22550:	mov	x1, #0x38                  	// #56
   22554:	mov	x0, x20
   22558:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   2255c:	mov	x19, x0
   22560:	str	xzr, [x0, #8]
   22564:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   22568:	add	x0, x0, #0xf40
   2256c:	str	x0, [x19]
   22570:	str	x21, [x19, #16]
   22574:	str	x20, [x19, #24]
   22578:	str	xzr, [x19, #40]
   2257c:	str	xzr, [x19, #48]
   22580:	str	xzr, [x19, #32]
   22584:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22588:	ldr	x0, [x0, #4016]
   2258c:	ldr	x0, [x0]
   22590:	cbz	x0, 226a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58fc>
   22594:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22598:	ldr	x0, [x0, #4016]
   2259c:	ldr	x0, [x0]
   225a0:	sub	x1, x0, #0x1
   225a4:	tst	x1, x0
   225a8:	b.ne	226b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5910>  // b.any
   225ac:	add	x20, x0, #0x7
   225b0:	neg	x0, x0
   225b4:	and	x20, x20, x0
   225b8:	mov	w2, #0x0                   	// #0
   225bc:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   225c0:	add	x1, x1, #0x350
   225c4:	mov	x0, x20
   225c8:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   225cc:	mov	x22, x0
   225d0:	add	x21, x19, #0x20
   225d4:	ldr	x2, [x21, #16]
   225d8:	lsl	x2, x2, #3
   225dc:	ldr	x1, [x19, #32]
   225e0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   225e4:	ldr	x1, [x21, #8]
   225e8:	ldr	x0, [x19, #32]
   225ec:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   225f0:	str	x22, [x19, #32]
   225f4:	str	x20, [x21, #8]
   225f8:	cmp	x20, #0x7f
   225fc:	b.hi	224a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>  // b.pmore
   22600:	ldr	x3, [x19, #48]
   22604:	cmp	x3, #0x10
   22608:	b.hi	226c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5920>  // b.pmore
   2260c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22610:	ldr	x0, [x0, #4016]
   22614:	ldr	x0, [x0]
   22618:	cbz	x0, 226e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x593c>
   2261c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22620:	ldr	x0, [x0, #4016]
   22624:	ldr	x0, [x0]
   22628:	sub	x1, x0, #0x1
   2262c:	tst	x1, x0
   22630:	b.ne	226f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>  // b.any
   22634:	add	x20, x0, #0x7f
   22638:	neg	x0, x0
   2263c:	and	x20, x20, x0
   22640:	mov	w2, #0x0                   	// #0
   22644:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22648:	add	x1, x1, #0x350
   2264c:	mov	x0, x20
   22650:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   22654:	mov	x22, x0
   22658:	ldr	x2, [x19, #48]
   2265c:	lsl	x2, x2, #3
   22660:	ldr	x1, [x19, #32]
   22664:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   22668:	ldr	x1, [x19, #40]
   2266c:	ldr	x0, [x19, #32]
   22670:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   22674:	str	x22, [x19, #32]
   22678:	str	x20, [x19, #40]
   2267c:	b	224a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>
   22680:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22684:	add	x0, x0, #0x970
   22688:	bl	1a3fc <OnPrint@@Base+0x3d8>
   2268c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22690:	mov	x1, x21
   22694:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22698:	add	x0, x0, #0x9b8
   2269c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   226a0:	b	22548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57a0>
   226a4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   226a8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   226ac:	ldr	x1, [x1, #4016]
   226b0:	str	x0, [x1]
   226b4:	b	22594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57ec>
   226b8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   226bc:	add	x0, x0, #0x338
   226c0:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   226c4:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   226c8:	mov	x4, #0x10                  	// #16
   226cc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   226d0:	add	x2, x2, #0x6a8
   226d4:	mov	w1, #0x1fd                 	// #509
   226d8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   226dc:	add	x0, x0, #0x380
   226e0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   226e4:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   226e8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   226ec:	ldr	x1, [x1, #4016]
   226f0:	str	x0, [x1]
   226f4:	b	2261c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5874>
   226f8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   226fc:	add	x0, x0, #0x338
   22700:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   22704:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22708:	cbnz	x21, 22760 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59b8>
   2270c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22710:	add	x0, x0, #0x920
   22714:	bl	12b68 <__sanitizer_cov_dump@@Base+0x2638>
   22718:	mov	x20, x0
   2271c:	cbz	x0, 22788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59e0>
   22720:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22724:	ldr	x0, [x0, #3896]
   22728:	ldr	w0, [x0]
   2272c:	sxtw	x0, w0
   22730:	cmp	x0, #0x1
   22734:	b.hi	22774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59cc>  // b.pmore
   22738:	adrp	x21, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2273c:	ldr	x21, [x21, #3968]
   22740:	mov	x1, #0x4018                	// #16408
   22744:	mov	x0, x21
   22748:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   2274c:	mov	x19, x0
   22750:	mov	x2, x21
   22754:	mov	x1, x20
   22758:	bl	21940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b98>
   2275c:	b	224a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f8>
   22760:	mov	x1, x21
   22764:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22768:	add	x0, x0, #0x9e8
   2276c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   22770:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22774:	mov	x1, x20
   22778:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2277c:	add	x0, x0, #0xa80
   22780:	bl	1a3fc <OnPrint@@Base+0x3d8>
   22784:	b	22738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5990>
   22788:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2278c:	ldr	x0, [x0, #4056]
   22790:	ldrb	w0, [x0, #16]
   22794:	cbz	w0, 224cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5724>
   22798:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2279c:	add	x0, x0, #0x9a8
   227a0:	bl	12b68 <__sanitizer_cov_dump@@Base+0x2638>
   227a4:	mov	x20, x0
   227a8:	cbz	x0, 224cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5724>
   227ac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   227b0:	ldr	x0, [x0, #3896]
   227b4:	ldr	w0, [x0]
   227b8:	sxtw	x0, w0
   227bc:	cmp	x0, #0x1
   227c0:	b.hi	228fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b54>  // b.pmore
   227c4:	adrp	x21, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   227c8:	ldr	x21, [x21, #3968]
   227cc:	mov	x1, #0x38                  	// #56
   227d0:	mov	x0, x21
   227d4:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   227d8:	mov	x19, x0
   227dc:	str	xzr, [x0, #8]
   227e0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   227e4:	add	x0, x0, #0xf40
   227e8:	str	x0, [x19]
   227ec:	str	x20, [x19, #16]
   227f0:	str	x21, [x19, #24]
   227f4:	str	xzr, [x19, #40]
   227f8:	str	xzr, [x19, #48]
   227fc:	str	xzr, [x19, #32]
   22800:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22804:	ldr	x0, [x0, #4016]
   22808:	ldr	x0, [x0]
   2280c:	cbz	x0, 22910 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b68>
   22810:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22814:	ldr	x0, [x0, #4016]
   22818:	ldr	x0, [x0]
   2281c:	sub	x1, x0, #0x1
   22820:	tst	x1, x0
   22824:	b.ne	22924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b7c>  // b.any
   22828:	add	x20, x0, #0x7
   2282c:	neg	x0, x0
   22830:	and	x20, x20, x0
   22834:	mov	w2, #0x0                   	// #0
   22838:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2283c:	add	x1, x1, #0x350
   22840:	mov	x0, x20
   22844:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   22848:	mov	x22, x0
   2284c:	add	x21, x19, #0x20
   22850:	ldr	x2, [x21, #16]
   22854:	lsl	x2, x2, #3
   22858:	ldr	x1, [x19, #32]
   2285c:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   22860:	ldr	x1, [x21, #8]
   22864:	ldr	x0, [x19, #32]
   22868:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   2286c:	str	x22, [x19, #32]
   22870:	str	x20, [x21, #8]
   22874:	cmp	x20, #0x7f
   22878:	b.hi	224a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>  // b.pmore
   2287c:	ldr	x3, [x19, #48]
   22880:	cmp	x3, #0x10
   22884:	b.hi	22934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b8c>  // b.pmore
   22888:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2288c:	ldr	x0, [x0, #4016]
   22890:	ldr	x0, [x0]
   22894:	cbz	x0, 22950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ba8>
   22898:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2289c:	ldr	x0, [x0, #4016]
   228a0:	ldr	x0, [x0]
   228a4:	sub	x1, x0, #0x1
   228a8:	tst	x1, x0
   228ac:	b.ne	22964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bbc>  // b.any
   228b0:	add	x20, x0, #0x7f
   228b4:	neg	x0, x0
   228b8:	and	x20, x20, x0
   228bc:	mov	w2, #0x0                   	// #0
   228c0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   228c4:	add	x1, x1, #0x350
   228c8:	mov	x0, x20
   228cc:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   228d0:	mov	x22, x0
   228d4:	ldr	x2, [x19, #48]
   228d8:	lsl	x2, x2, #3
   228dc:	ldr	x1, [x19, #32]
   228e0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   228e4:	ldr	x1, [x19, #40]
   228e8:	ldr	x0, [x19, #32]
   228ec:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   228f0:	str	x22, [x19, #32]
   228f4:	str	x20, [x19, #40]
   228f8:	b	224a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>
   228fc:	mov	x1, x20
   22900:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22904:	add	x0, x0, #0xaa8
   22908:	bl	1a3fc <OnPrint@@Base+0x3d8>
   2290c:	b	227c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a1c>
   22910:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   22914:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22918:	ldr	x1, [x1, #4016]
   2291c:	str	x0, [x1]
   22920:	b	22810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a68>
   22924:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22928:	add	x0, x0, #0x338
   2292c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   22930:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22934:	mov	x4, #0x10                  	// #16
   22938:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   2293c:	add	x2, x2, #0x6a8
   22940:	mov	w1, #0x1fd                 	// #509
   22944:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22948:	add	x0, x0, #0x380
   2294c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22950:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   22954:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22958:	ldr	x1, [x1, #4016]
   2295c:	str	x0, [x1]
   22960:	b	22898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   22964:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22968:	add	x0, x0, #0x338
   2296c:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   22970:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22974:	mov	x0, #0x0                   	// #0
   22978:	ldp	x21, x22, [sp, #16]
   2297c:	b	222dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   22980:	str	x30, [sp, #-16]!
   22984:	bl	20fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   22988:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2298c:	add	x1, x1, #0xac8
   22990:	mov	x0, #0x0                   	// #0
   22994:	bl	6500 <dlsym@plt>
   22998:	adrp	x1, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   2299c:	str	x0, [x1, #952]
   229a0:	bl	6570 <dlerror@plt>
   229a4:	ldr	x30, [sp], #16
   229a8:	ret
   229ac:	str	x1, [x2]
   229b0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   229b4:	add	x1, x1, #0x6b8
   229b8:	str	x1, [x2, #8]
   229bc:	ldr	x0, [x0, #16424]
   229c0:	str	x0, [x2, #16]
   229c4:	str	xzr, [x2, #24]
   229c8:	ret
   229cc:	mov	w0, #0x0                   	// #0
   229d0:	ret
   229d4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   229d8:	ldr	x0, [x0, #3904]
   229dc:	cbz	x0, 229f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c48>
   229e0:	str	x30, [sp, #-16]!
   229e4:	bl	6680 <__sanitizer_symbolize_flush@plt>
   229e8:	ldr	x30, [sp], #16
   229ec:	ret
   229f0:	ret
   229f4:	stp	x19, x20, [sp, #-32]!
   229f8:	str	x30, [sp, #24]
   229fc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22a00:	ldr	x0, [x0, #3808]
   22a04:	mov	x19, x1
   22a08:	cbz	x0, 22a4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ca4>
   22a0c:	str	x21, [sp, #16]
   22a10:	mov	x20, x1
   22a14:	mov	x21, #0x400                 	// #1024
   22a18:	mov	x2, #0x0                   	// #0
   22a1c:	mov	x1, #0x0                   	// #0
   22a20:	mov	x0, x21
   22a24:	bl	d178 <__sancov_default_options@@Base+0x47c>
   22a28:	mov	x19, x0
   22a2c:	mov	w2, w21
   22a30:	mov	x1, x0
   22a34:	mov	x0, x20
   22a38:	bl	6480 <__sanitizer_symbolize_demangle@plt>
   22a3c:	sxtw	x1, w0
   22a40:	cmp	x21, w0, sxtw
   22a44:	b.cc	22a5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cb4>  // b.lo, b.ul, b.last
   22a48:	ldr	x21, [sp, #16]
   22a4c:	mov	x0, x19
   22a50:	ldr	x30, [sp, #24]
   22a54:	ldp	x19, x20, [sp], #32
   22a58:	ret
   22a5c:	add	x21, x1, #0x1
   22a60:	mov	x1, #0x0                   	// #0
   22a64:	mov	x0, x19
   22a68:	bl	d3f8 <__sancov_default_options@@Base+0x6fc>
   22a6c:	cmp	x21, #0x20, lsl #12
   22a70:	b.ls	22a18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c70>  // b.plast
   22a74:	mov	x19, x20
   22a78:	ldr	x21, [sp, #16]
   22a7c:	b	22a4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ca4>
   22a80:	stp	x19, x20, [sp, #-48]!
   22a84:	stp	x21, x22, [sp, #16]
   22a88:	str	x30, [sp, #32]
   22a8c:	mov	x20, x1
   22a90:	mov	x19, x2
   22a94:	add	x21, x0, #0x10
   22a98:	mov	w3, #0x4000                	// #16384
   22a9c:	mov	x2, x21
   22aa0:	ldr	x1, [x19, #8]
   22aa4:	ldr	x0, [x19]
   22aa8:	bl	6550 <__sanitizer_symbolize_data@plt>
   22aac:	mov	w22, w0
   22ab0:	tst	w0, #0xff
   22ab4:	b.ne	22acc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d24>  // b.any
   22ab8:	mov	w0, w22
   22abc:	ldp	x21, x22, [sp, #16]
   22ac0:	ldr	x30, [sp, #32]
   22ac4:	ldp	x19, x20, [sp], #48
   22ac8:	ret
   22acc:	mov	x1, x19
   22ad0:	mov	x0, x21
   22ad4:	bl	21870 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac8>
   22ad8:	ldr	x1, [x19, #48]
   22adc:	add	x1, x20, x1
   22ae0:	ldr	x20, [x19, #8]
   22ae4:	sub	x1, x1, x20
   22ae8:	str	x1, [x19, #48]
   22aec:	b	22ab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d10>
   22af0:	stp	x19, x20, [sp, #-32]!
   22af4:	stp	x21, x30, [sp, #16]
   22af8:	mov	x19, x2
   22afc:	add	x20, x0, #0x10
   22b00:	mov	w3, #0x4000                	// #16384
   22b04:	mov	x2, x20
   22b08:	ldr	x1, [x19, #24]
   22b0c:	ldr	x0, [x19, #16]
   22b10:	bl	6630 <__sanitizer_symbolize_code@plt>
   22b14:	mov	w21, w0
   22b18:	tst	w0, #0xff
   22b1c:	b.ne	22b30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d88>  // b.any
   22b20:	mov	w0, w21
   22b24:	ldp	x21, x30, [sp, #16]
   22b28:	ldp	x19, x20, [sp], #32
   22b2c:	ret
   22b30:	mov	x1, x19
   22b34:	mov	x0, x20
   22b38:	bl	21644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x489c>
   22b3c:	b	22b20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   22b40:	stp	x19, x20, [sp, #-144]!
   22b44:	stp	x21, x22, [sp, #16]
   22b48:	stp	x23, x24, [sp, #32]
   22b4c:	stp	x25, x30, [sp, #48]
   22b50:	mov	x19, x0
   22b54:	mov	x22, x2
   22b58:	ldr	x21, [x2, #16]
   22b5c:	ldr	x23, [x2, #24]
   22b60:	str	xzr, [sp, #72]
   22b64:	ldr	x0, [x0, #48]
   22b68:	cbz	x0, 22c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e98>
   22b6c:	mov	x20, #0x0                   	// #0
   22b70:	lsl	x24, x20, #3
   22b74:	ldr	x0, [x19, #32]
   22b78:	ldr	x0, [x0, x20, lsl #3]
   22b7c:	ldr	x1, [x0, #16424]
   22b80:	mov	x0, x21
   22b84:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   22b88:	cbz	w0, 22c08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e60>
   22b8c:	add	x20, x20, #0x1
   22b90:	ldr	x0, [x19, #48]
   22b94:	cmp	x0, x20
   22b98:	b.hi	22b70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dc8>  // b.pmore
   22b9c:	ldr	x0, [sp, #72]
   22ba0:	cbz	x0, 22c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e98>
   22ba4:	ldr	x0, [sp, #72]
   22ba8:	ldr	x1, [x0, #16424]
   22bac:	mov	x0, x21
   22bb0:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   22bb4:	sxtw	x4, w0
   22bb8:	cbnz	w0, 22e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6068>
   22bbc:	add	x19, sp, #0x50
   22bc0:	mov	x4, #0xffffffffffffffff    	// #-1
   22bc4:	mov	x3, x23
   22bc8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22bcc:	add	x2, x2, #0x758
   22bd0:	mov	x1, #0x40                  	// #64
   22bd4:	mov	x0, x19
   22bd8:	bl	1a028 <OnPrint@@Base+0x4>
   22bdc:	mov	x1, x19
   22be0:	ldr	x0, [sp, #72]
   22be4:	bl	21ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d28>
   22be8:	mov	w1, #0x0                   	// #0
   22bec:	cbnz	x0, 22e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6084>
   22bf0:	mov	w0, w1
   22bf4:	ldp	x21, x22, [sp, #16]
   22bf8:	ldp	x23, x24, [sp, #32]
   22bfc:	ldp	x25, x30, [sp, #48]
   22c00:	ldp	x19, x20, [sp], #144
   22c04:	ret
   22c08:	ldr	x4, [x19, #48]
   22c0c:	cmp	x4, x20
   22c10:	b.ls	22c24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e7c>  // b.plast
   22c14:	ldr	x0, [x19, #32]
   22c18:	ldr	x0, [x0, x24]
   22c1c:	str	x0, [sp, #72]
   22c20:	b	22b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5df4>
   22c24:	mov	x3, x20
   22c28:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22c2c:	add	x2, x2, #0x368
   22c30:	mov	w1, #0x1b6                 	// #438
   22c34:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22c38:	add	x0, x0, #0x380
   22c3c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22c40:	mov	x1, #0x4030                	// #16432
   22c44:	ldr	x0, [x19, #24]
   22c48:	bl	cfac <__sancov_default_options@@Base+0x2b0>
   22c4c:	mov	x20, x0
   22c50:	mov	w2, #0x0                   	// #0
   22c54:	ldr	x1, [x19, #16]
   22c58:	bl	218b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b10>
   22c5c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   22c60:	add	x0, x0, #0xf18
   22c64:	str	x0, [x20]
   22c68:	mov	x0, x21
   22c6c:	bl	14814 <__sanitizer_set_report_fd@@Base+0x19d0>
   22c70:	str	x0, [x20, #16424]
   22c74:	str	x20, [sp, #72]
   22c78:	ldr	x3, [x19, #48]
   22c7c:	ldr	x0, [x19, #40]
   22c80:	lsr	x4, x0, #3
   22c84:	cmp	x3, x0, lsr #3
   22c88:	b.hi	22cb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f10>  // b.pmore
   22c8c:	cmp	x3, x4
   22c90:	b.eq	22cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f28>  // b.none
   22c94:	ldr	x3, [x19, #32]
   22c98:	ldr	x0, [x19, #48]
   22c9c:	add	x2, x0, #0x1
   22ca0:	str	x2, [x19, #48]
   22ca4:	mov	x2, #0x8                   	// #8
   22ca8:	add	x1, sp, #0x48
   22cac:	add	x0, x3, x0, lsl #3
   22cb0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   22cb4:	b	22ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dfc>
   22cb8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   22cbc:	add	x2, x2, #0x630
   22cc0:	mov	w1, #0x1be                 	// #446
   22cc4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22cc8:	add	x0, x0, #0x380
   22ccc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22cd0:	add	x0, x3, #0x1
   22cd4:	tst	x3, x0
   22cd8:	b.eq	22de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x603c>  // b.none
   22cdc:	clz	x2, x0
   22ce0:	mov	w1, #0x3f                  	// #63
   22ce4:	sub	w1, w1, w2
   22ce8:	add	w2, w1, #0x1
   22cec:	mov	x4, #0x1                   	// #1
   22cf0:	lsl	x4, x4, x2
   22cf4:	cmp	x0, x4
   22cf8:	b.cs	22d90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fe8>  // b.hs, b.nlast
   22cfc:	mov	x2, #0x1                   	// #1
   22d00:	lsl	x1, x2, x1
   22d04:	cmp	x0, x1
   22d08:	b.ls	22dac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6004>  // b.plast
   22d0c:	cmp	x3, x4
   22d10:	b.hi	22dcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6024>  // b.pmore
   22d14:	lsl	x20, x4, #3
   22d18:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22d1c:	ldr	x0, [x0, #4016]
   22d20:	ldr	x0, [x0]
   22d24:	cbz	x0, 22dec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6044>
   22d28:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22d2c:	ldr	x0, [x0, #4016]
   22d30:	ldr	x0, [x0]
   22d34:	sub	x1, x0, #0x1
   22d38:	tst	x0, x1
   22d3c:	b.ne	22e00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6058>  // b.any
   22d40:	add	x20, x20, x1
   22d44:	neg	x0, x0
   22d48:	and	x20, x20, x0
   22d4c:	mov	w2, #0x0                   	// #0
   22d50:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22d54:	add	x1, x1, #0x350
   22d58:	mov	x0, x20
   22d5c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   22d60:	mov	x25, x0
   22d64:	add	x24, x19, #0x20
   22d68:	ldr	x2, [x24, #16]
   22d6c:	lsl	x2, x2, #3
   22d70:	ldr	x1, [x19, #32]
   22d74:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   22d78:	ldr	x1, [x24, #8]
   22d7c:	ldr	x0, [x19, #32]
   22d80:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   22d84:	str	x25, [x19, #32]
   22d88:	str	x20, [x24, #8]
   22d8c:	b	22c94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5eec>
   22d90:	mov	x3, x0
   22d94:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   22d98:	add	x2, x2, #0x660
   22d9c:	mov	w1, #0x17b                 	// #379
   22da0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22da4:	add	x0, x0, #0x380
   22da8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22dac:	mov	x4, x1
   22db0:	mov	x3, x0
   22db4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   22db8:	add	x2, x2, #0x688
   22dbc:	mov	w1, #0x17c                 	// #380
   22dc0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22dc4:	add	x0, x0, #0x380
   22dc8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22dcc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   22dd0:	add	x2, x2, #0x6a8
   22dd4:	mov	w1, #0x1fd                 	// #509
   22dd8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22ddc:	add	x0, x0, #0x380
   22de0:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22de4:	mov	x4, x0
   22de8:	b	22d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f6c>
   22dec:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   22df0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22df4:	ldr	x1, [x1, #4016]
   22df8:	str	x0, [x1]
   22dfc:	b	22d28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f80>
   22e00:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   22e04:	add	x0, x0, #0x338
   22e08:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   22e0c:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22e10:	mov	x3, #0x0                   	// #0
   22e14:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22e18:	add	x2, x2, #0x6c0
   22e1c:	mov	w1, #0x15c                 	// #348
   22e20:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22e24:	add	x0, x0, #0x708
   22e28:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22e2c:	mov	x1, x22
   22e30:	bl	21644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x489c>
   22e34:	mov	w1, #0x1                   	// #1
   22e38:	b	22bf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e48>
   22e3c:	stp	x19, x20, [sp, #-32]!
   22e40:	str	x30, [sp, #16]
   22e44:	mov	x19, x1
   22e48:	bl	20ec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4118>
   22e4c:	mov	w20, w0
   22e50:	tst	w0, #0xff
   22e54:	b.eq	22e60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b8>  // b.none
   22e58:	ldrb	w0, [x19]
   22e5c:	cbnz	w0, 22e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c8>
   22e60:	mov	w0, w20
   22e64:	ldr	x30, [sp, #16]
   22e68:	ldp	x19, x20, [sp], #32
   22e6c:	ret
   22e70:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22e74:	add	x1, x1, #0xaf0
   22e78:	add	x0, x19, #0x1
   22e7c:	bl	14a5c <__sanitizer_set_report_fd@@Base+0x1c18>
   22e80:	cbz	x0, 22e8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x60e4>
   22e84:	strb	wzr, [x0]
   22e88:	b	22e60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b8>
   22e8c:	mov	x4, #0x0                   	// #0
   22e90:	mov	x3, #0x0                   	// #0
   22e94:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22e98:	add	x2, x2, #0xad8
   22e9c:	mov	w1, #0x11e                 	// #286
   22ea0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   22ea4:	add	x0, x0, #0x708
   22ea8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22eac:	mov	x1, #0x0                   	// #0
   22eb0:	adrp	x3, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22eb4:	add	x3, x3, #0x3c0
   22eb8:	mov	w4, w1
   22ebc:	ldr	x2, [x3, x1, lsl #3]
   22ec0:	cbz	x2, 22ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6130>
   22ec4:	add	x1, x1, #0x1
   22ec8:	cmp	x1, #0x5
   22ecc:	b.ne	22eb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6110>  // b.any
   22ed0:	mov	w0, #0x0                   	// #0
   22ed4:	ret
   22ed8:	adrp	x1, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22edc:	add	x1, x1, #0x3c0
   22ee0:	str	x0, [x1, w4, sxtw #3]
   22ee4:	mov	w0, #0x1                   	// #1
   22ee8:	b	22ed4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x612c>
   22eec:	mov	x1, #0x0                   	// #0
   22ef0:	adrp	x3, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22ef4:	add	x3, x3, #0x3c0
   22ef8:	ldr	x2, [x3, x1, lsl #3]
   22efc:	cmp	x2, x0
   22f00:	b.eq	22f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6170>  // b.none
   22f04:	add	x1, x1, #0x1
   22f08:	cmp	x1, #0x5
   22f0c:	b.ne	22ef8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6150>  // b.any
   22f10:	mov	w0, #0x0                   	// #0
   22f14:	ret
   22f18:	stp	x19, x30, [sp, #-16]!
   22f1c:	sbfiz	x0, x1, #3, #32
   22f20:	mov	w2, #0x4                   	// #4
   22f24:	sub	w2, w2, w1
   22f28:	adrp	x19, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22f2c:	add	x19, x19, #0x3c0
   22f30:	add	x1, x0, #0x8
   22f34:	sbfiz	x2, x2, #3, #32
   22f38:	add	x1, x19, x1
   22f3c:	add	x0, x19, x0
   22f40:	bl	14600 <__sanitizer_set_report_fd@@Base+0x17bc>
   22f44:	str	xzr, [x19, #32]
   22f48:	mov	w0, #0x1                   	// #1
   22f4c:	ldp	x19, x30, [sp], #16
   22f50:	ret
   22f54:	adrp	x1, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22f58:	str	x0, [x1, #1000]
   22f5c:	ret
   22f60:	stp	x19, x20, [sp, #-32]!
   22f64:	str	x30, [sp, #16]
   22f68:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22f6c:	ldr	x0, [x0, #1000]
   22f70:	cbz	x0, 22f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61d0>
   22f74:	blr	x0
   22f78:	mov	x19, #0x4                   	// #4
   22f7c:	adrp	x20, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22f80:	add	x20, x20, #0x3c0
   22f84:	b	22f94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61ec>
   22f88:	sub	x19, x19, #0x1
   22f8c:	cmn	x19, #0x1
   22f90:	b.eq	22fa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61fc>  // b.none
   22f94:	ldr	x0, [x20, x19, lsl #3]
   22f98:	cbz	x0, 22f88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   22f9c:	blr	x0
   22fa0:	b	22f88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   22fa4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22fa8:	ldr	x0, [x0, #4056]
   22fac:	ldrb	w0, [x0, #220]
   22fb0:	cbz	w0, 22fb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6210>
   22fb4:	bl	18bc4 <__sanitizer_set_report_fd@@Base+0x5d80>
   22fb8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   22fbc:	ldr	x0, [x0, #4056]
   22fc0:	ldr	w0, [x0, #216]
   22fc4:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x288c>
   22fc8:	adrp	x1, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22fcc:	str	x0, [x1, #1008]
   22fd0:	ret
   22fd4:	stp	x19, x20, [sp, #-48]!
   22fd8:	stp	x21, x22, [sp, #16]
   22fdc:	stp	x23, x30, [sp, #32]
   22fe0:	mov	x19, x0
   22fe4:	mov	w20, w1
   22fe8:	mov	x21, x2
   22fec:	mov	x22, x3
   22ff0:	mov	x23, x4
   22ff4:	adrp	x5, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22ff8:	add	x5, x5, #0x3c0
   22ffc:	add	x5, x5, #0x38
   23000:	ldxr	w0, [x5]
   23004:	add	w1, w0, #0x1
   23008:	stlxr	w2, w1, [x5]
   2300c:	cbnz	w2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>
   23010:	dmb	ish
   23014:	cmp	w0, #0xa
   23018:	b.hi	23064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62bc>  // b.pmore
   2301c:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   23020:	ldr	x5, [x0, #1008]
   23024:	cbz	x5, 23040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6298>
   23028:	mov	x4, x23
   2302c:	mov	x3, x22
   23030:	mov	x2, x21
   23034:	mov	w1, w20
   23038:	mov	x0, x19
   2303c:	blr	x5
   23040:	mov	x5, x23
   23044:	mov	x4, x22
   23048:	mov	x3, x21
   2304c:	mov	w2, w20
   23050:	mov	x1, x19
   23054:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23058:	add	x0, x0, #0xb00
   2305c:	bl	1a3fc <OnPrint@@Base+0x3d8>
   23060:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23064:	mov	w0, #0x2                   	// #2
   23068:	bl	18b9c <__sanitizer_set_report_fd@@Base+0x5d58>
   2306c:	brk	#0x3e8

0000000000023070 <__sanitizer_set_death_callback@@Base>:
   23070:	adrp	x1, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   23074:	str	x0, [x1, #1000]
   23078:	ret
   2307c:	ldr	x2, [x0, #32]
   23080:	cmp	x1, x2
   23084:	b.eq	23090 <__sanitizer_set_death_callback@@Base+0x20>  // b.none
   23088:	mov	w0, #0x0                   	// #0
   2308c:	ret
   23090:	ldr	w0, [x0, #112]
   23094:	tst	w0, #0xfffffffb
   23098:	cset	w0, ne  // ne = any
   2309c:	b	2308c <__sanitizer_set_death_callback@@Base+0x1c>
   230a0:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   230a4:	add	x2, x2, #0xfa0
   230a8:	str	x2, [x0]
   230ac:	str	w1, [x0, #8]
   230b0:	str	xzr, [x0, #16]
   230b4:	str	wzr, [x0, #24]
   230b8:	str	xzr, [x0, #32]
   230bc:	str	xzr, [x0, #40]
   230c0:	str	wzr, [x0, #112]
   230c4:	strb	wzr, [x0, #116]
   230c8:	strb	wzr, [x0, #117]
   230cc:	str	wzr, [x0, #120]
   230d0:	str	xzr, [x0, #128]
   230d4:	strb	wzr, [x0, #48]
   230d8:	dmb	ish
   230dc:	str	wzr, [x0, #136]
   230e0:	ret
   230e4:	str	x30, [sp, #-16]!
   230e8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   230ec:	add	x1, x1, #0xfa0
   230f0:	str	x1, [x0]
   230f4:	mov	x4, #0x0                   	// #0
   230f8:	mov	x3, #0x0                   	// #0
   230fc:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   23100:	add	x2, x2, #0x748
   23104:	mov	w1, #0x1b                  	// #27
   23108:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2310c:	add	x0, x0, #0xb30
   23110:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23114:	strb	wzr, [x0, #48]
   23118:	cbz	x1, 2313c <__sanitizer_set_death_callback@@Base+0xcc>
   2311c:	stp	x19, x30, [sp, #-16]!
   23120:	mov	x19, x0
   23124:	mov	x2, #0x40                  	// #64
   23128:	add	x0, x0, #0x30
   2312c:	bl	14954 <__sanitizer_set_report_fd@@Base+0x1b10>
   23130:	strb	wzr, [x19, #111]
   23134:	ldp	x19, x30, [sp], #16
   23138:	ret
   2313c:	ret
   23140:	str	x30, [sp, #-16]!
   23144:	ldr	w1, [x0, #112]
   23148:	sub	w1, w1, #0x2
   2314c:	cmp	w1, #0x1
   23150:	b.hi	23174 <__sanitizer_set_death_callback@@Base+0x104>  // b.pmore
   23154:	mov	w1, #0x4                   	// #4
   23158:	str	w1, [x0, #112]
   2315c:	str	xzr, [x0, #40]
   23160:	ldr	x1, [x0]
   23164:	ldr	x1, [x1]
   23168:	blr	x1
   2316c:	ldr	x30, [sp], #16
   23170:	ret
   23174:	mov	x4, #0x0                   	// #0
   23178:	mov	x3, #0x0                   	// #0
   2317c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23180:	add	x2, x2, #0xb78
   23184:	mov	w1, #0x27                  	// #39
   23188:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2318c:	add	x0, x0, #0xb30
   23190:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23194:	dmb	ish
   23198:	mov	w1, #0x1                   	// #1
   2319c:	str	w1, [x0, #136]
   231a0:	ret
   231a4:	ldr	w0, [x0, #136]
   231a8:	dmb	ish
   231ac:	cmp	w0, #0x0
   231b0:	cset	w0, ne  // ne = any
   231b4:	ret
   231b8:	str	x30, [sp, #-16]!
   231bc:	ldrb	w2, [x0, #116]
   231c0:	cbnz	w2, 231f0 <__sanitizer_set_death_callback@@Base+0x180>
   231c4:	ldr	w4, [x0, #112]
   231c8:	cmp	x4, #0x3
   231cc:	b.ne	23210 <__sanitizer_set_death_callback@@Base+0x1a0>  // b.any
   231d0:	mov	w2, #0x4                   	// #4
   231d4:	str	w2, [x0, #112]
   231d8:	str	xzr, [x0, #40]
   231dc:	ldr	x2, [x0]
   231e0:	ldr	x2, [x2, #8]
   231e4:	blr	x2
   231e8:	ldr	x30, [sp], #16
   231ec:	ret
   231f0:	mov	x4, #0x1                   	// #1
   231f4:	mov	x3, #0x0                   	// #0
   231f8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   231fc:	add	x2, x2, #0xbc8
   23200:	mov	w1, #0x38                  	// #56
   23204:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23208:	add	x0, x0, #0xb30
   2320c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23210:	mov	x3, #0x3                   	// #3
   23214:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23218:	add	x2, x2, #0xbe8
   2321c:	mov	w1, #0x39                  	// #57
   23220:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23224:	add	x0, x0, #0xb30
   23228:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2322c:	str	x30, [sp, #-16]!
   23230:	ldrb	w1, [x0, #116]
   23234:	cbz	w1, 23244 <__sanitizer_set_death_callback@@Base+0x1d4>
   23238:	ldr	w1, [x0, #112]
   2323c:	cmp	w1, #0x1
   23240:	b.ne	2324c <__sanitizer_set_death_callback@@Base+0x1dc>  // b.any
   23244:	mov	w1, #0x3                   	// #3
   23248:	str	w1, [x0, #112]
   2324c:	ldr	x1, [x0]
   23250:	ldr	x1, [x1, #16]
   23254:	blr	x1
   23258:	ldr	x30, [sp], #16
   2325c:	ret
   23260:	str	x30, [sp, #-16]!
   23264:	mov	w5, #0x2                   	// #2
   23268:	str	w5, [x0, #112]
   2326c:	str	x1, [x0, #32]
   23270:	strb	w2, [x0, #117]
   23274:	ldr	x1, [x0]
   23278:	ldr	x2, [x1, #24]
   2327c:	mov	x1, x3
   23280:	blr	x2
   23284:	ldr	x30, [sp], #16
   23288:	ret
   2328c:	str	x30, [sp, #-16]!
   23290:	mov	w6, #0x1                   	// #1
   23294:	str	w6, [x0, #112]
   23298:	str	x1, [x0, #40]
   2329c:	str	x2, [x0, #16]
   232a0:	strb	w3, [x0, #116]
   232a4:	ldr	w1, [x0, #8]
   232a8:	cbz	w1, 232b0 <__sanitizer_set_death_callback@@Base+0x240>
   232ac:	str	w4, [x0, #120]
   232b0:	ldr	x1, [x0]
   232b4:	ldr	x2, [x1, #32]
   232b8:	mov	x1, x5
   232bc:	blr	x2
   232c0:	ldr	x30, [sp], #16
   232c4:	ret
   232c8:	stp	x19, x30, [sp, #-16]!
   232cc:	mov	x19, x0
   232d0:	str	wzr, [x0, #112]
   232d4:	mov	x1, #0x0                   	// #0
   232d8:	bl	23114 <__sanitizer_set_death_callback@@Base+0xa4>
   232dc:	dmb	ish
   232e0:	str	wzr, [x19, #136]
   232e4:	ldr	x0, [x19]
   232e8:	ldr	x1, [x0, #40]
   232ec:	mov	x0, x19
   232f0:	blr	x1
   232f4:	ldp	x19, x30, [sp], #16
   232f8:	ret
   232fc:	stp	x19, x30, [sp, #-16]!
   23300:	mov	x19, x0
   23304:	str	x1, [x0]
   23308:	str	w2, [x0, #8]
   2330c:	str	w3, [x0, #12]
   23310:	str	w4, [x0, #16]
   23314:	add	x0, x0, #0x18
   23318:	bl	15994 <__sanitizer_set_report_fd@@Base+0x2b50>
   2331c:	str	wzr, [x19, #112]
   23320:	str	xzr, [x19, #120]
   23324:	str	xzr, [x19, #128]
   23328:	str	xzr, [x19, #136]
   2332c:	str	xzr, [x19, #144]
   23330:	ldr	w0, [x19, #8]
   23334:	mov	w2, #0x0                   	// #0
   23338:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2333c:	add	x1, x1, #0xc10
   23340:	lsl	x0, x0, #3
   23344:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   23348:	str	x0, [x19, #152]
   2334c:	str	xzr, [x19, #176]
   23350:	str	xzr, [x19, #168]
   23354:	str	xzr, [x19, #160]
   23358:	str	xzr, [x19, #200]
   2335c:	str	xzr, [x19, #192]
   23360:	str	xzr, [x19, #184]
   23364:	ldp	x19, x30, [sp], #16
   23368:	ret
   2336c:	stp	x19, x20, [sp, #-48]!
   23370:	stp	x21, x22, [sp, #16]
   23374:	stp	x23, x30, [sp, #32]
   23378:	mov	x19, x0
   2337c:	mov	x22, x1
   23380:	mov	x21, x2
   23384:	mov	x20, x3
   23388:	add	x23, x0, #0x18
   2338c:	mov	x0, x23
   23390:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   23394:	cbz	x22, 233a0 <__sanitizer_set_death_callback@@Base+0x330>
   23398:	ldr	w0, [x19, #112]
   2339c:	str	x0, [x22]
   233a0:	cbz	x21, 233ac <__sanitizer_set_death_callback@@Base+0x33c>
   233a4:	ldr	x0, [x19, #144]
   233a8:	str	x0, [x21]
   233ac:	cbz	x20, 233b8 <__sanitizer_set_death_callback@@Base+0x348>
   233b0:	ldr	x0, [x19, #128]
   233b4:	str	x0, [x20]
   233b8:	mov	x0, x23
   233bc:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   233c0:	ldp	x21, x22, [sp, #16]
   233c4:	ldp	x23, x30, [sp, #32]
   233c8:	ldp	x19, x20, [sp], #48
   233cc:	ret
   233d0:	stp	x19, x20, [sp, #-32]!
   233d4:	str	x30, [sp, #16]
   233d8:	mov	x19, x0
   233dc:	add	x20, x0, #0x18
   233e0:	mov	x0, x20
   233e4:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   233e8:	ldr	x19, [x19, #136]
   233ec:	mov	x0, x20
   233f0:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   233f4:	mov	x0, x19
   233f8:	ldr	x30, [sp, #16]
   233fc:	ldp	x19, x20, [sp], #32
   23400:	ret
   23404:	stp	x19, x20, [sp, #-48]!
   23408:	stp	x21, x22, [sp, #16]
   2340c:	str	x30, [sp, #32]
   23410:	mov	x20, x0
   23414:	mov	x21, x1
   23418:	mov	x22, x2
   2341c:	add	x0, x0, #0x18
   23420:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2c54>
   23424:	ldr	w0, [x20, #112]
   23428:	cbz	w0, 2345c <__sanitizer_set_death_callback@@Base+0x3ec>
   2342c:	mov	w19, #0x0                   	// #0
   23430:	b	23444 <__sanitizer_set_death_callback@@Base+0x3d4>
   23434:	add	w19, w19, #0x1
   23438:	ldr	w0, [x20, #112]
   2343c:	cmp	w0, w19
   23440:	b.ls	2345c <__sanitizer_set_death_callback@@Base+0x3ec>  // b.plast
   23444:	ldr	x0, [x20, #152]
   23448:	ldr	x0, [x0, w19, uxtw #3]
   2344c:	cbz	x0, 23434 <__sanitizer_set_death_callback@@Base+0x3c4>
   23450:	mov	x1, x22
   23454:	blr	x21
   23458:	b	23434 <__sanitizer_set_death_callback@@Base+0x3c4>
   2345c:	ldp	x21, x22, [sp, #16]
   23460:	ldr	x30, [sp, #32]
   23464:	ldp	x19, x20, [sp], #48
   23468:	ret
   2346c:	stp	x19, x20, [sp, #-64]!
   23470:	stp	x21, x22, [sp, #16]
   23474:	stp	x23, x24, [sp, #32]
   23478:	str	x30, [sp, #48]
   2347c:	mov	x21, x0
   23480:	mov	x22, x1
   23484:	mov	x23, x2
   23488:	add	x24, x0, #0x18
   2348c:	mov	x0, x24
   23490:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   23494:	ldr	w0, [x21, #112]
   23498:	cbz	w0, 23500 <__sanitizer_set_death_callback@@Base+0x490>
   2349c:	mov	w19, #0x0                   	// #0
   234a0:	b	234b4 <__sanitizer_set_death_callback@@Base+0x444>
   234a4:	add	w19, w19, #0x1
   234a8:	ldr	w0, [x21, #112]
   234ac:	cmp	w0, w19
   234b0:	b.ls	234dc <__sanitizer_set_death_callback@@Base+0x46c>  // b.plast
   234b4:	ldr	x0, [x21, #152]
   234b8:	ldr	x20, [x0, w19, uxtw #3]
   234bc:	cbz	x20, 234a4 <__sanitizer_set_death_callback@@Base+0x434>
   234c0:	mov	x1, x23
   234c4:	mov	x0, x20
   234c8:	blr	x22
   234cc:	and	w0, w0, #0xff
   234d0:	cbz	w0, 234a4 <__sanitizer_set_death_callback@@Base+0x434>
   234d4:	ldr	w19, [x20, #8]
   234d8:	b	234e0 <__sanitizer_set_death_callback@@Base+0x470>
   234dc:	mov	w19, #0xffffffff            	// #-1
   234e0:	mov	x0, x24
   234e4:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   234e8:	mov	w0, w19
   234ec:	ldp	x21, x22, [sp, #16]
   234f0:	ldp	x23, x24, [sp, #32]
   234f4:	ldr	x30, [sp, #48]
   234f8:	ldp	x19, x20, [sp], #64
   234fc:	ret
   23500:	mov	w19, #0xffffffff            	// #-1
   23504:	b	234e0 <__sanitizer_set_death_callback@@Base+0x470>
   23508:	stp	x19, x20, [sp, #-48]!
   2350c:	stp	x21, x22, [sp, #16]
   23510:	stp	x23, x30, [sp, #32]
   23514:	mov	x21, x0
   23518:	mov	x22, x1
   2351c:	mov	x23, x2
   23520:	add	x0, x0, #0x18
   23524:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2c54>
   23528:	ldr	w0, [x21, #112]
   2352c:	cbz	w0, 23584 <__sanitizer_set_death_callback@@Base+0x514>
   23530:	mov	w19, #0x0                   	// #0
   23534:	b	23548 <__sanitizer_set_death_callback@@Base+0x4d8>
   23538:	add	w19, w19, #0x1
   2353c:	ldr	w0, [x21, #112]
   23540:	cmp	w0, w19
   23544:	b.ls	2356c <__sanitizer_set_death_callback@@Base+0x4fc>  // b.plast
   23548:	ldr	x0, [x21, #152]
   2354c:	ldr	x20, [x0, w19, uxtw #3]
   23550:	cbz	x20, 23538 <__sanitizer_set_death_callback@@Base+0x4c8>
   23554:	mov	x1, x23
   23558:	mov	x0, x20
   2355c:	blr	x22
   23560:	and	w0, w0, #0xff
   23564:	cbz	w0, 23538 <__sanitizer_set_death_callback@@Base+0x4c8>
   23568:	b	23570 <__sanitizer_set_death_callback@@Base+0x500>
   2356c:	mov	x20, #0x0                   	// #0
   23570:	mov	x0, x20
   23574:	ldp	x21, x22, [sp, #16]
   23578:	ldp	x23, x30, [sp, #32]
   2357c:	ldp	x19, x20, [sp], #48
   23580:	ret
   23584:	mov	x20, #0x0                   	// #0
   23588:	b	23570 <__sanitizer_set_death_callback@@Base+0x500>
   2358c:	str	x30, [sp, #-16]!
   23590:	mov	x2, x1
   23594:	adrp	x1, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>
   23598:	add	x1, x1, #0x7c
   2359c:	bl	23508 <__sanitizer_set_death_callback@@Base+0x498>
   235a0:	ldr	x30, [sp], #16
   235a4:	ret
   235a8:	stp	x19, x20, [sp, #-48]!
   235ac:	stp	x21, x22, [sp, #16]
   235b0:	str	x30, [sp, #32]
   235b4:	mov	x19, x0
   235b8:	mov	w20, w1
   235bc:	mov	x21, x2
   235c0:	add	x22, x0, #0x18
   235c4:	mov	x0, x22
   235c8:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   235cc:	mov	w3, w20
   235d0:	ldr	w4, [x19, #112]
   235d4:	cmp	x4, w20, uxtw
   235d8:	b.ls	23614 <__sanitizer_set_death_callback@@Base+0x5a4>  // b.plast
   235dc:	ldr	x0, [x19, #152]
   235e0:	ldr	x0, [x0, x3, lsl #3]
   235e4:	cbz	x0, 2362c <__sanitizer_set_death_callback@@Base+0x5bc>
   235e8:	ldr	w4, [x0, #112]
   235ec:	cmp	x4, #0x2
   235f0:	b.ne	2364c <__sanitizer_set_death_callback@@Base+0x5dc>  // b.any
   235f4:	mov	x1, x21
   235f8:	bl	23114 <__sanitizer_set_death_callback@@Base+0xa4>
   235fc:	mov	x0, x22
   23600:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23604:	ldp	x21, x22, [sp, #16]
   23608:	ldr	x30, [sp, #32]
   2360c:	ldp	x19, x20, [sp], #48
   23610:	ret
   23614:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23618:	add	x2, x2, #0xc20
   2361c:	mov	w1, #0xd7                  	// #215
   23620:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23624:	add	x0, x0, #0xb30
   23628:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2362c:	mov	x4, #0x0                   	// #0
   23630:	mov	x3, #0x0                   	// #0
   23634:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23638:	add	x2, x2, #0xc40
   2363c:	mov	w1, #0xd9                  	// #217
   23640:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23644:	add	x0, x0, #0xb30
   23648:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2364c:	mov	x3, #0x2                   	// #2
   23650:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23654:	add	x2, x2, #0xc58
   23658:	mov	w1, #0xda                  	// #218
   2365c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23660:	add	x0, x0, #0xb30
   23664:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23668:	stp	x19, x20, [sp, #-48]!
   2366c:	stp	x21, x22, [sp, #16]
   23670:	str	x30, [sp, #32]
   23674:	mov	x20, x0
   23678:	mov	x19, x1
   2367c:	mov	x21, x2
   23680:	add	x22, x0, #0x18
   23684:	mov	x0, x22
   23688:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   2368c:	ldr	w5, [x20, #112]
   23690:	cbz	w5, 236dc <__sanitizer_set_death_callback@@Base+0x66c>
   23694:	ldr	x6, [x20, #152]
   23698:	mov	x3, #0x0                   	// #0
   2369c:	b	236ac <__sanitizer_set_death_callback@@Base+0x63c>
   236a0:	add	x3, x3, #0x1
   236a4:	cmp	w5, w3
   236a8:	b.ls	236dc <__sanitizer_set_death_callback@@Base+0x66c>  // b.plast
   236ac:	ldr	x0, [x6, x3, lsl #3]
   236b0:	cbz	x0, 236a0 <__sanitizer_set_death_callback@@Base+0x630>
   236b4:	ldr	x4, [x0, #40]
   236b8:	cmp	x4, x19
   236bc:	b.ne	236a0 <__sanitizer_set_death_callback@@Base+0x630>  // b.any
   236c0:	ldr	w1, [x0, #112]
   236c4:	cbz	w1, 236a0 <__sanitizer_set_death_callback@@Base+0x630>
   236c8:	mov	x1, x21
   236cc:	bl	23114 <__sanitizer_set_death_callback@@Base+0xa4>
   236d0:	mov	x0, x22
   236d4:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   236d8:	b	236e4 <__sanitizer_set_death_callback@@Base+0x674>
   236dc:	mov	x0, x22
   236e0:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   236e4:	ldp	x21, x22, [sp, #16]
   236e8:	ldr	x30, [sp, #32]
   236ec:	ldp	x19, x20, [sp], #48
   236f0:	ret
   236f4:	stp	x19, x20, [sp, #-64]!
   236f8:	stp	x21, x22, [sp, #16]
   236fc:	stp	x23, x24, [sp, #32]
   23700:	str	x30, [sp, #48]
   23704:	mov	x19, x0
   23708:	mov	w20, w1
   2370c:	mov	x21, x2
   23710:	and	w24, w3, #0xff
   23714:	mov	x22, x4
   23718:	add	x23, x0, #0x18
   2371c:	mov	x0, x23
   23720:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   23724:	ldr	x0, [x19, #144]
   23728:	add	x0, x0, #0x1
   2372c:	str	x0, [x19, #144]
   23730:	mov	w3, w20
   23734:	ldr	w4, [x19, #112]
   23738:	cmp	x4, w20, uxtw
   2373c:	b.ls	23784 <__sanitizer_set_death_callback@@Base+0x714>  // b.plast
   23740:	ldr	x0, [x19, #152]
   23744:	ldr	x0, [x0, x3, lsl #3]
   23748:	cbz	x0, 2379c <__sanitizer_set_death_callback@@Base+0x72c>
   2374c:	ldr	w4, [x0, #112]
   23750:	cmp	x4, #0x1
   23754:	b.ne	237bc <__sanitizer_set_death_callback@@Base+0x74c>  // b.any
   23758:	mov	x3, x22
   2375c:	mov	w2, w24
   23760:	mov	x1, x21
   23764:	bl	23260 <__sanitizer_set_death_callback@@Base+0x1f0>
   23768:	mov	x0, x23
   2376c:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23770:	ldp	x21, x22, [sp, #16]
   23774:	ldp	x23, x24, [sp, #32]
   23778:	ldr	x30, [sp, #48]
   2377c:	ldp	x19, x20, [sp], #64
   23780:	ret
   23784:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23788:	add	x2, x2, #0xc20
   2378c:	mov	w1, #0x134                 	// #308
   23790:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23794:	add	x0, x0, #0xb30
   23798:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2379c:	mov	x4, #0x0                   	// #0
   237a0:	mov	x3, #0x0                   	// #0
   237a4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   237a8:	add	x2, x2, #0xc40
   237ac:	mov	w1, #0x136                 	// #310
   237b0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   237b4:	add	x0, x0, #0xb30
   237b8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   237bc:	mov	x3, #0x1                   	// #1
   237c0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   237c4:	add	x2, x2, #0xca0
   237c8:	mov	w1, #0x137                 	// #311
   237cc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   237d0:	add	x0, x0, #0xb30
   237d4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   237d8:	stp	x19, x20, [sp, #-32]!
   237dc:	str	x30, [sp, #16]
   237e0:	mov	x19, x0
   237e4:	ldr	w0, [x1, #8]
   237e8:	cbz	w0, 23818 <__sanitizer_set_death_callback@@Base+0x7a8>
   237ec:	ldr	x0, [x19, #160]
   237f0:	cbnz	x0, 23824 <__sanitizer_set_death_callback@@Base+0x7b4>
   237f4:	str	xzr, [x1, #128]
   237f8:	str	x1, [x19, #176]
   237fc:	str	x1, [x19, #168]
   23800:	mov	x0, #0x1                   	// #1
   23804:	str	x0, [x19, #160]
   23808:	ldr	x0, [x19, #160]
   2380c:	ldr	w1, [x19, #12]
   23810:	cmp	x1, x0
   23814:	b.cc	23844 <__sanitizer_set_death_callback@@Base+0x7d4>  // b.lo, b.ul, b.last
   23818:	ldr	x30, [sp, #16]
   2381c:	ldp	x19, x20, [sp], #32
   23820:	ret
   23824:	str	xzr, [x1, #128]
   23828:	ldr	x2, [x19, #176]
   2382c:	str	x1, [x2, #128]
   23830:	str	x1, [x19, #176]
   23834:	ldr	x0, [x19, #160]
   23838:	add	x0, x0, #0x1
   2383c:	str	x0, [x19, #160]
   23840:	b	23808 <__sanitizer_set_death_callback@@Base+0x798>
   23844:	ldr	x20, [x19, #168]
   23848:	ldr	x1, [x20, #128]
   2384c:	str	x1, [x19, #168]
   23850:	cbz	x1, 238ac <__sanitizer_set_death_callback@@Base+0x83c>
   23854:	sub	x0, x0, #0x1
   23858:	str	x0, [x19, #160]
   2385c:	ldr	w3, [x20, #112]
   23860:	cmp	x3, #0x4
   23864:	b.ne	238b4 <__sanitizer_set_death_callback@@Base+0x844>  // b.any
   23868:	mov	x0, x20
   2386c:	bl	232c8 <__sanitizer_set_death_callback@@Base+0x258>
   23870:	ldr	w0, [x20, #24]
   23874:	add	w0, w0, #0x1
   23878:	str	w0, [x20, #24]
   2387c:	ldr	w1, [x19, #16]
   23880:	cmp	w1, #0x0
   23884:	ccmp	w0, w1, #0x0, ne  // ne = any
   23888:	b.cs	23818 <__sanitizer_set_death_callback@@Base+0x7a8>  // b.hs, b.nlast
   2388c:	ldr	x0, [x19, #184]
   23890:	cbnz	x0, 238d0 <__sanitizer_set_death_callback@@Base+0x860>
   23894:	str	xzr, [x20, #128]
   23898:	str	x20, [x19, #200]
   2389c:	str	x20, [x19, #192]
   238a0:	mov	x0, #0x1                   	// #1
   238a4:	str	x0, [x19, #184]
   238a8:	b	23818 <__sanitizer_set_death_callback@@Base+0x7a8>
   238ac:	str	xzr, [x19, #176]
   238b0:	b	23854 <__sanitizer_set_death_callback@@Base+0x7e4>
   238b4:	mov	x4, #0x4                   	// #4
   238b8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   238bc:	add	x2, x2, #0xcd0
   238c0:	mov	w1, #0x143                 	// #323
   238c4:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   238c8:	add	x0, x0, #0xb30
   238cc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   238d0:	str	xzr, [x20, #128]
   238d4:	ldr	x1, [x19, #200]
   238d8:	str	x20, [x1, #128]
   238dc:	str	x20, [x19, #200]
   238e0:	ldr	x0, [x19, #184]
   238e4:	add	x0, x0, #0x1
   238e8:	str	x0, [x19, #184]
   238ec:	b	23818 <__sanitizer_set_death_callback@@Base+0x7a8>
   238f0:	stp	x19, x20, [sp, #-48]!
   238f4:	stp	x21, x22, [sp, #16]
   238f8:	str	x30, [sp, #32]
   238fc:	mov	x19, x0
   23900:	mov	w20, w1
   23904:	mov	x21, x2
   23908:	add	x22, x0, #0x18
   2390c:	mov	x0, x22
   23910:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   23914:	mov	w3, w20
   23918:	ldr	w4, [x19, #112]
   2391c:	cmp	x4, w20, uxtw
   23920:	b.ls	23978 <__sanitizer_set_death_callback@@Base+0x908>  // b.plast
   23924:	ldr	x0, [x19, #152]
   23928:	ldr	x20, [x0, x3, lsl #3]
   2392c:	cbz	x20, 23990 <__sanitizer_set_death_callback@@Base+0x920>
   23930:	ldr	w0, [x20, #112]
   23934:	cbz	w0, 239b0 <__sanitizer_set_death_callback@@Base+0x940>
   23938:	ldr	x0, [x20]
   2393c:	ldr	x2, [x0, #48]
   23940:	mov	x1, x21
   23944:	mov	x0, x20
   23948:	blr	x2
   2394c:	ldr	w0, [x20, #112]
   23950:	cmp	w0, #0x3
   23954:	b.eq	239d4 <__sanitizer_set_death_callback@@Base+0x964>  // b.none
   23958:	mov	w0, #0x1                   	// #1
   2395c:	strb	w0, [x20, #116]
   23960:	mov	x0, x22
   23964:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23968:	ldp	x21, x22, [sp, #16]
   2396c:	ldr	x30, [sp, #32]
   23970:	ldp	x19, x20, [sp], #48
   23974:	ret
   23978:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2397c:	add	x2, x2, #0xc20
   23980:	mov	w1, #0xed                  	// #237
   23984:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23988:	add	x0, x0, #0xb30
   2398c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23990:	mov	x4, #0x0                   	// #0
   23994:	mov	x3, #0x0                   	// #0
   23998:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2399c:	add	x2, x2, #0xc40
   239a0:	mov	w1, #0xef                  	// #239
   239a4:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   239a8:	add	x0, x0, #0xb30
   239ac:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   239b0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   239b4:	ldr	x0, [x0, #4024]
   239b8:	ldr	x1, [x0]
   239bc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   239c0:	add	x0, x0, #0xd00
   239c4:	bl	1a3fc <OnPrint@@Base+0x3d8>
   239c8:	mov	x0, x22
   239cc:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   239d0:	b	23968 <__sanitizer_set_death_callback@@Base+0x8f8>
   239d4:	mov	x0, x20
   239d8:	bl	23140 <__sanitizer_set_death_callback@@Base+0xd0>
   239dc:	mov	x1, x20
   239e0:	mov	x0, x19
   239e4:	bl	237d8 <__sanitizer_set_death_callback@@Base+0x768>
   239e8:	b	23960 <__sanitizer_set_death_callback@@Base+0x8f0>
   239ec:	stp	x19, x20, [sp, #-64]!
   239f0:	stp	x21, x22, [sp, #16]
   239f4:	stp	x23, x24, [sp, #32]
   239f8:	str	x30, [sp, #48]
   239fc:	mov	x20, x0
   23a00:	mov	x24, x2
   23a04:	mov	w23, w1
   23a08:	ubfiz	x21, x1, #3, #32
   23a0c:	add	x22, x0, #0x18
   23a10:	mov	x0, x22
   23a14:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   23a18:	ldr	w4, [x20, #112]
   23a1c:	cmp	x23, x4
   23a20:	b.cs	23a58 <__sanitizer_set_death_callback@@Base+0x9e8>  // b.hs, b.nlast
   23a24:	ldr	x0, [x20, #152]
   23a28:	ldr	x19, [x0, x21]
   23a2c:	cbz	x19, 23a74 <__sanitizer_set_death_callback@@Base+0xa04>
   23a30:	ldr	w0, [x19, #112]
   23a34:	cbz	w0, 23a94 <__sanitizer_set_death_callback@@Base+0xa24>
   23a38:	mov	x0, x19
   23a3c:	bl	231a4 <__sanitizer_set_death_callback@@Base+0x134>
   23a40:	and	w3, w0, #0xff
   23a44:	cbnz	w3, 23ab8 <__sanitizer_set_death_callback@@Base+0xa48>
   23a48:	mov	x0, x22
   23a4c:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23a50:	bl	156c4 <__sanitizer_set_report_fd@@Base+0x2880>
   23a54:	b	23a10 <__sanitizer_set_death_callback@@Base+0x9a0>
   23a58:	mov	x3, x23
   23a5c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23a60:	add	x2, x2, #0xc20
   23a64:	mov	w1, #0x102                 	// #258
   23a68:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23a6c:	add	x0, x0, #0xb30
   23a70:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23a74:	mov	x4, #0x0                   	// #0
   23a78:	mov	x3, #0x0                   	// #0
   23a7c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23a80:	add	x2, x2, #0xc40
   23a84:	mov	w1, #0x104                 	// #260
   23a88:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23a8c:	add	x0, x0, #0xb30
   23a90:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23a94:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23a98:	ldr	x0, [x0, #4024]
   23a9c:	ldr	x1, [x0]
   23aa0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23aa4:	add	x0, x0, #0xd28
   23aa8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   23aac:	mov	x0, x22
   23ab0:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23ab4:	b	23ad8 <__sanitizer_set_death_callback@@Base+0xa68>
   23ab8:	mov	x1, x24
   23abc:	mov	x0, x19
   23ac0:	bl	231b8 <__sanitizer_set_death_callback@@Base+0x148>
   23ac4:	mov	x1, x19
   23ac8:	mov	x0, x20
   23acc:	bl	237d8 <__sanitizer_set_death_callback@@Base+0x768>
   23ad0:	mov	x0, x22
   23ad4:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23ad8:	ldp	x21, x22, [sp, #16]
   23adc:	ldp	x23, x24, [sp, #32]
   23ae0:	ldr	x30, [sp, #48]
   23ae4:	ldp	x19, x20, [sp], #64
   23ae8:	ret
   23aec:	stp	x19, x20, [sp, #-48]!
   23af0:	stp	x21, x22, [sp, #16]
   23af4:	str	x30, [sp, #32]
   23af8:	mov	x19, x0
   23afc:	mov	w20, w1
   23b00:	add	x21, x0, #0x18
   23b04:	mov	x0, x21
   23b08:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   23b0c:	ldr	x0, [x19, #128]
   23b10:	cbz	x0, 23b70 <__sanitizer_set_death_callback@@Base+0xb00>
   23b14:	sub	x0, x0, #0x1
   23b18:	str	x0, [x19, #128]
   23b1c:	mov	w3, w20
   23b20:	ldr	w4, [x19, #112]
   23b24:	cmp	x4, w20, uxtw
   23b28:	b.ls	23b90 <__sanitizer_set_death_callback@@Base+0xb20>  // b.plast
   23b2c:	ldr	x0, [x19, #152]
   23b30:	ldr	x20, [x0, x3, lsl #3]
   23b34:	cbz	x20, 23ba8 <__sanitizer_set_death_callback@@Base+0xb38>
   23b38:	ldr	w0, [x20, #112]
   23b3c:	cmp	w0, #0x2
   23b40:	b.eq	23bc8 <__sanitizer_set_death_callback@@Base+0xb58>  // b.none
   23b44:	mov	w3, w0
   23b48:	cmp	w0, #0x1
   23b4c:	b.ne	23c28 <__sanitizer_set_death_callback@@Base+0xbb8>  // b.any
   23b50:	mov	x0, x20
   23b54:	bl	2322c <__sanitizer_set_death_callback@@Base+0x1bc>
   23b58:	mov	x0, x20
   23b5c:	bl	23140 <__sanitizer_set_death_callback@@Base+0xd0>
   23b60:	mov	x1, x20
   23b64:	mov	x0, x19
   23b68:	bl	237d8 <__sanitizer_set_death_callback@@Base+0x768>
   23b6c:	b	23be8 <__sanitizer_set_death_callback@@Base+0xb78>
   23b70:	mov	x4, #0x0                   	// #0
   23b74:	mov	x3, #0x0                   	// #0
   23b78:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23b7c:	add	x2, x2, #0xd50
   23b80:	mov	w1, #0x11a                 	// #282
   23b84:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23b88:	add	x0, x0, #0xb30
   23b8c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23b90:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23b94:	add	x2, x2, #0xc20
   23b98:	mov	w1, #0x11c                 	// #284
   23b9c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23ba0:	add	x0, x0, #0xb30
   23ba4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23ba8:	mov	x4, #0x0                   	// #0
   23bac:	mov	x3, #0x0                   	// #0
   23bb0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23bb4:	add	x2, x2, #0xc40
   23bb8:	mov	w1, #0x11e                 	// #286
   23bbc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23bc0:	add	x0, x0, #0xb30
   23bc4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23bc8:	ldr	x0, [x19, #144]
   23bcc:	cbz	x0, 23c08 <__sanitizer_set_death_callback@@Base+0xb98>
   23bd0:	ldrb	w22, [x20, #116]
   23bd4:	sub	x0, x0, #0x1
   23bd8:	str	x0, [x19, #144]
   23bdc:	mov	x0, x20
   23be0:	bl	2322c <__sanitizer_set_death_callback@@Base+0x1bc>
   23be4:	cbnz	w22, 23b58 <__sanitizer_set_death_callback@@Base+0xae8>
   23be8:	mov	x0, x20
   23bec:	bl	23194 <__sanitizer_set_death_callback@@Base+0x124>
   23bf0:	mov	x0, x21
   23bf4:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23bf8:	ldp	x21, x22, [sp, #16]
   23bfc:	ldr	x30, [sp, #32]
   23c00:	ldp	x19, x20, [sp], #48
   23c04:	ret
   23c08:	mov	x4, #0x0                   	// #0
   23c0c:	mov	x3, #0x0                   	// #0
   23c10:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23c14:	add	x2, x2, #0xd70
   23c18:	mov	w1, #0x121                 	// #289
   23c1c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23c20:	add	x0, x0, #0xb30
   23c24:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23c28:	mov	x4, #0x1                   	// #1
   23c2c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23c30:	add	x2, x2, #0xd90
   23c34:	mov	w1, #0x125                 	// #293
   23c38:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23c3c:	add	x0, x0, #0xb30
   23c40:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23c44:	mov	x1, x0
   23c48:	ldr	x2, [x0, #184]
   23c4c:	mov	x0, #0x0                   	// #0
   23c50:	cbz	x2, 23c6c <__sanitizer_set_death_callback@@Base+0xbfc>
   23c54:	ldr	x0, [x1, #192]
   23c58:	ldr	x3, [x0, #128]
   23c5c:	str	x3, [x1, #192]
   23c60:	cbz	x3, 23c70 <__sanitizer_set_death_callback@@Base+0xc00>
   23c64:	sub	x2, x2, #0x1
   23c68:	str	x2, [x1, #184]
   23c6c:	ret
   23c70:	str	xzr, [x1, #200]
   23c74:	b	23c64 <__sanitizer_set_death_callback@@Base+0xbf4>
   23c78:	stp	x19, x20, [sp, #-64]!
   23c7c:	stp	x21, x22, [sp, #16]
   23c80:	stp	x23, x24, [sp, #32]
   23c84:	stp	x25, x30, [sp, #48]
   23c88:	mov	x19, x0
   23c8c:	mov	x21, x1
   23c90:	and	w25, w2, #0xff
   23c94:	mov	w22, w3
   23c98:	mov	x23, x4
   23c9c:	add	x24, x0, #0x18
   23ca0:	mov	x0, x24
   23ca4:	bl	159ac <__sanitizer_set_report_fd@@Base+0x2b68>
   23ca8:	mov	x0, x19
   23cac:	bl	23c44 <__sanitizer_set_death_callback@@Base+0xbd4>
   23cb0:	cbz	x0, 23d44 <__sanitizer_set_death_callback@@Base+0xcd4>
   23cb4:	ldr	w20, [x0, #8]
   23cb8:	mov	w3, w20
   23cbc:	mov	x1, #0xffffffff            	// #4294967295
   23cc0:	cmp	x1, w20, uxtw
   23cc4:	b.eq	23db0 <__sanitizer_set_death_callback@@Base+0xd40>  // b.none
   23cc8:	ldr	w4, [x19, #8]
   23ccc:	cmp	x3, x4
   23cd0:	b.cs	23dd0 <__sanitizer_set_death_callback@@Base+0xd60>  // b.hs, b.nlast
   23cd4:	ldr	w3, [x0, #112]
   23cd8:	cbnz	x3, 23de8 <__sanitizer_set_death_callback@@Base+0xd78>
   23cdc:	ldr	x2, [x19, #128]
   23ce0:	add	x3, x2, #0x1
   23ce4:	str	x3, [x19, #128]
   23ce8:	ldr	x1, [x19, #136]
   23cec:	cmp	x3, x1
   23cf0:	b.ls	23d04 <__sanitizer_set_death_callback@@Base+0xc94>  // b.plast
   23cf4:	add	x4, x1, #0x1
   23cf8:	str	x4, [x19, #136]
   23cfc:	cmp	x2, x1
   23d00:	b.ne	23e04 <__sanitizer_set_death_callback@@Base+0xd94>  // b.any
   23d04:	ldr	x2, [x19, #120]
   23d08:	add	x1, x2, #0x1
   23d0c:	str	x1, [x19, #120]
   23d10:	mov	x5, x23
   23d14:	mov	w4, w22
   23d18:	mov	w3, w25
   23d1c:	mov	x1, x21
   23d20:	bl	2328c <__sanitizer_set_death_callback@@Base+0x21c>
   23d24:	mov	x0, x24
   23d28:	bl	15a30 <__sanitizer_set_report_fd@@Base+0x2bec>
   23d2c:	mov	w0, w20
   23d30:	ldp	x21, x22, [sp, #16]
   23d34:	ldp	x23, x24, [sp, #32]
   23d38:	ldp	x25, x30, [sp, #48]
   23d3c:	ldp	x19, x20, [sp], #64
   23d40:	ret
   23d44:	ldr	w20, [x19, #112]
   23d48:	ldr	w2, [x19, #8]
   23d4c:	cmp	w20, w2
   23d50:	b.cs	23d94 <__sanitizer_set_death_callback@@Base+0xd24>  // b.hs, b.nlast
   23d54:	add	w0, w20, #0x1
   23d58:	str	w0, [x19, #112]
   23d5c:	ldr	x1, [x19]
   23d60:	mov	w0, w20
   23d64:	blr	x1
   23d68:	ldr	x1, [x19, #152]
   23d6c:	str	x0, [x1, w20, uxtw #3]
   23d70:	cbnz	x0, 23cb8 <__sanitizer_set_death_callback@@Base+0xc48>
   23d74:	mov	x4, #0x0                   	// #0
   23d78:	mov	x3, #0x0                   	// #0
   23d7c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23d80:	add	x2, x2, #0xc40
   23d84:	mov	w1, #0x9c                  	// #156
   23d88:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23d8c:	add	x0, x0, #0xb30
   23d90:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23d94:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23d98:	ldr	x0, [x0, #4024]
   23d9c:	ldr	x1, [x0]
   23da0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23da4:	add	x0, x0, #0xdc0
   23da8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   23dac:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23db0:	mov	x4, x1
   23db4:	mov	x3, x1
   23db8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23dbc:	add	x2, x2, #0xdf0
   23dc0:	mov	w1, #0x9d                  	// #157
   23dc4:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23dc8:	add	x0, x0, #0xb30
   23dcc:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23dd0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23dd4:	add	x2, x2, #0xe10
   23dd8:	mov	w1, #0x9e                  	// #158
   23ddc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23de0:	add	x0, x0, #0xb30
   23de4:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23de8:	mov	x4, #0x0                   	// #0
   23dec:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23df0:	add	x2, x2, #0xe30
   23df4:	mov	w1, #0x9f                  	// #159
   23df8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23dfc:	add	x0, x0, #0xb30
   23e00:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23e04:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23e08:	add	x2, x2, #0xe60
   23e0c:	mov	w1, #0xa3                  	// #163
   23e10:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23e14:	add	x0, x0, #0xb30
   23e18:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23e1c:	ret
   23e20:	ret
   23e24:	ret
   23e28:	ret
   23e2c:	ret
   23e30:	ret
   23e34:	ret
   23e38:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23e3c:	ldr	x0, [x0, #4056]
   23e40:	ldrb	w0, [x0, #121]
   23e44:	cbz	w0, 23f1c <__sanitizer_set_death_callback@@Base+0xeac>
   23e48:	stp	x19, x20, [sp, #-32]!
   23e4c:	str	x30, [sp, #16]
   23e50:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23e54:	ldr	x0, [x0, #3896]
   23e58:	ldr	w0, [x0]
   23e5c:	sxtw	x0, w0
   23e60:	cmp	x0, #0x1
   23e64:	b.hi	23ee0 <__sanitizer_set_death_callback@@Base+0xe70>  // b.pmore
   23e68:	mrs	x0, tpidr_el0
   23e6c:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23e70:	ldr	x1, [x1, #3752]
   23e74:	ldr	x19, [x0, x1]
   23e78:	mov	x2, #0xffffffffffffffff    	// #-1
   23e7c:	str	x2, [x0, x1]
   23e80:	cbz	x19, 23ed4 <__sanitizer_set_death_callback@@Base+0xe64>
   23e84:	mov	x0, x1
   23e88:	mrs	x1, tpidr_el0
   23e8c:	add	x0, x1, x0
   23e90:	ldr	x20, [x0, #8]
   23e94:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23e98:	ldr	x0, [x0, #3896]
   23e9c:	ldr	w0, [x0]
   23ea0:	sxtw	x0, w0
   23ea4:	cmp	x0, #0x1
   23ea8:	b.hi	23f04 <__sanitizer_set_death_callback@@Base+0xe94>  // b.pmore
   23eac:	lsl	x1, x19, #4
   23eb0:	mov	x0, x20
   23eb4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   23eb8:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   23ebc:	add	x0, x0, #0x400
   23ec0:	ldxr	x1, [x0]
   23ec4:	sub	x1, x1, #0x1
   23ec8:	stlxr	w2, x1, [x0]
   23ecc:	cbnz	w2, 23ec0 <__sanitizer_set_death_callback@@Base+0xe50>
   23ed0:	dmb	ish
   23ed4:	ldr	x30, [sp, #16]
   23ed8:	ldp	x19, x20, [sp], #32
   23edc:	ret
   23ee0:	mrs	x1, tpidr_el0
   23ee4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23ee8:	ldr	x0, [x0, #3752]
   23eec:	ldr	x2, [x1, x0]
   23ef0:	add	x1, x1, x0
   23ef4:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23ef8:	add	x0, x0, #0xe98
   23efc:	bl	1a3fc <OnPrint@@Base+0x3d8>
   23f00:	b	23e68 <__sanitizer_set_death_callback@@Base+0xdf8>
   23f04:	mov	x2, x19
   23f08:	mov	x1, x20
   23f0c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   23f10:	add	x0, x0, #0xec0
   23f14:	bl	1a3fc <OnPrint@@Base+0x3d8>
   23f18:	b	23eac <__sanitizer_set_death_callback@@Base+0xe3c>
   23f1c:	ret
   23f20:	stp	x19, x20, [sp, #-144]!
   23f24:	str	x30, [sp, #80]
   23f28:	mov	x20, x0
   23f2c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23f30:	ldr	x0, [x0, #4056]
   23f34:	ldrb	w0, [x0, #121]
   23f38:	cbz	w0, 24320 <__sanitizer_set_death_callback@@Base+0x12b0>
   23f3c:	stp	x21, x22, [sp, #16]
   23f40:	stp	x23, x24, [sp, #32]
   23f44:	mov	x21, x1
   23f48:	mov	x22, x2
   23f4c:	mov	x23, x3
   23f50:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23f54:	ldr	x0, [x0, #3752]
   23f58:	mrs	x1, tpidr_el0
   23f5c:	ldr	x0, [x1, x0]
   23f60:	cmn	x0, #0x1
   23f64:	b.eq	24328 <__sanitizer_set_death_callback@@Base+0x12b8>  // b.none
   23f68:	ldr	x19, [x20]
   23f6c:	add	x3, x19, #0x1
   23f70:	cmp	x0, x3
   23f74:	b.cc	2401c <__sanitizer_set_death_callback@@Base+0xfac>  // b.lo, b.ul, b.last
   23f78:	lsl	x19, x19, #4
   23f7c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23f80:	ldr	x0, [x0, #3752]
   23f84:	mrs	x1, tpidr_el0
   23f88:	add	x0, x1, x0
   23f8c:	ldr	x0, [x0, #8]
   23f90:	ldr	x24, [x0, x19]
   23f94:	cbnz	x24, 24338 <__sanitizer_set_death_callback@@Base+0x12c8>
   23f98:	ldr	x3, [x20, #8]
   23f9c:	sub	x5, x21, x3
   23fa0:	str	x5, [sp, #136]
   23fa4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23fa8:	ldr	x0, [x0, #3896]
   23fac:	ldr	w0, [x0]
   23fb0:	sxtw	x0, w0
   23fb4:	cmp	x0, #0x1
   23fb8:	b.hi	24218 <__sanitizer_set_death_callback@@Base+0x11a8>  // b.pmore
   23fbc:	ldr	x1, [sp, #136]
   23fc0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23fc4:	ldr	x0, [x0, #3752]
   23fc8:	mrs	x2, tpidr_el0
   23fcc:	add	x0, x2, x0
   23fd0:	ldr	x0, [x0, #24]
   23fd4:	cmp	x0, x1
   23fd8:	b.eq	24240 <__sanitizer_set_death_callback@@Base+0x11d0>  // b.none
   23fdc:	cmp	x1, x23
   23fe0:	ccmp	x1, x22, #0x0, cc  // cc = lo, ul, last
   23fe4:	b.cs	242c0 <__sanitizer_set_death_callback@@Base+0x1250>  // b.hs, b.nlast
   23fe8:	and	x0, x1, #0xfff
   23fec:	cmp	x0, #0x10
   23ff0:	b.eq	242e8 <__sanitizer_set_death_callback@@Base+0x1278>  // b.none
   23ff4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   23ff8:	ldr	x0, [x0, #3896]
   23ffc:	ldr	w0, [x0]
   24000:	sxtw	x0, w0
   24004:	cmp	x0, #0x1
   24008:	b.ls	24268 <__sanitizer_set_death_callback@@Base+0x11f8>  // b.plast
   2400c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   24010:	add	x0, x0, #0x68
   24014:	bl	1a3fc <OnPrint@@Base+0x3d8>
   24018:	b	24268 <__sanitizer_set_death_callback@@Base+0x11f8>
   2401c:	stp	x25, x26, [sp, #48]
   24020:	tst	x3, x19
   24024:	b.eq	2412c <__sanitizer_set_death_callback@@Base+0x10bc>  // b.none
   24028:	clz	x0, x3
   2402c:	mov	w4, #0x3f                  	// #63
   24030:	sub	w4, w4, w0
   24034:	add	w0, w4, #0x1
   24038:	mov	x24, #0x1                   	// #1
   2403c:	lsl	x24, x24, x0
   24040:	cmp	x3, x24
   24044:	b.cs	240f0 <__sanitizer_set_death_callback@@Base+0x1080>  // b.hs, b.nlast
   24048:	mov	x0, #0x1                   	// #1
   2404c:	lsl	x4, x0, x4
   24050:	cmp	x3, x4
   24054:	b.ls	24110 <__sanitizer_set_death_callback@@Base+0x10a0>  // b.plast
   24058:	cmp	x24, #0x100
   2405c:	mov	x4, #0x100                 	// #256
   24060:	csel	x24, x24, x4, cs  // cs = hs, nlast
   24064:	mov	w2, #0x0                   	// #0
   24068:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2406c:	add	x1, x1, #0xee8
   24070:	lsl	x0, x24, #4
   24074:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   24078:	mov	x25, x0
   2407c:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   24080:	add	x0, x0, #0x400
   24084:	ldxr	x26, [x0]
   24088:	add	x1, x26, #0x1
   2408c:	stlxr	w2, x1, [x0]
   24090:	cbnz	w2, 24084 <__sanitizer_set_death_callback@@Base+0x1014>
   24094:	dmb	ish
   24098:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2409c:	ldr	x0, [x0, #3896]
   240a0:	ldr	w0, [x0]
   240a4:	sxtw	x0, w0
   240a8:	cmp	x0, #0x1
   240ac:	b.hi	24134 <__sanitizer_set_death_callback@@Base+0x10c4>  // b.pmore
   240b0:	mov	x0, #0xfffff               	// #1048575
   240b4:	cmp	x26, x0
   240b8:	b.hi	24158 <__sanitizer_set_death_callback@@Base+0x10e8>  // b.pmore
   240bc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   240c0:	ldr	x0, [x0, #3752]
   240c4:	mrs	x1, tpidr_el0
   240c8:	ldr	x26, [x1, x0]
   240cc:	cbnz	x26, 2417c <__sanitizer_set_death_callback@@Base+0x110c>
   240d0:	mrs	x0, tpidr_el0
   240d4:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   240d8:	ldr	x1, [x1, #3752]
   240dc:	add	x2, x0, x1
   240e0:	str	x25, [x2, #8]
   240e4:	str	x24, [x0, x1]
   240e8:	ldp	x25, x26, [sp, #48]
   240ec:	b	23f78 <__sanitizer_set_death_callback@@Base+0xf08>
   240f0:	stp	x27, x28, [sp, #64]
   240f4:	mov	x4, x24
   240f8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   240fc:	add	x2, x2, #0x660
   24100:	mov	w1, #0x17b                 	// #379
   24104:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   24108:	add	x0, x0, #0x380
   2410c:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24110:	stp	x27, x28, [sp, #64]
   24114:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   24118:	add	x2, x2, #0x688
   2411c:	mov	w1, #0x17c                 	// #380
   24120:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   24124:	add	x0, x0, #0x380
   24128:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2412c:	mov	x24, x3
   24130:	b	24058 <__sanitizer_set_death_callback@@Base+0xfe8>
   24134:	mov	x2, x26
   24138:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2413c:	ldr	x0, [x0, #3752]
   24140:	mrs	x1, tpidr_el0
   24144:	add	x1, x1, x0
   24148:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2414c:	add	x0, x0, #0xef8
   24150:	bl	1a3fc <OnPrint@@Base+0x3d8>
   24154:	b	240b0 <__sanitizer_set_death_callback@@Base+0x1040>
   24158:	stp	x27, x28, [sp, #64]
   2415c:	mov	x4, #0x100000              	// #1048576
   24160:	mov	x3, x26
   24164:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   24168:	add	x2, x2, #0xf20
   2416c:	mov	w1, #0x3c                  	// #60
   24170:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   24174:	add	x0, x0, #0xf40
   24178:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2417c:	stp	x27, x28, [sp, #64]
   24180:	str	x1, [sp, #120]
   24184:	str	x0, [sp, #112]
   24188:	add	x28, x1, x0
   2418c:	ldr	x27, [x28, #8]
   24190:	lsl	x2, x26, #4
   24194:	str	x2, [sp, #104]
   24198:	mov	x1, x27
   2419c:	mov	x0, x25
   241a0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   241a4:	str	x25, [x28, #8]
   241a8:	ldr	x1, [sp, #120]
   241ac:	ldr	x0, [sp, #112]
   241b0:	str	x24, [x1, x0]
   241b4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   241b8:	ldr	x0, [x0, #3896]
   241bc:	ldr	w0, [x0]
   241c0:	sxtw	x0, w0
   241c4:	cmp	x0, #0x1
   241c8:	b.hi	24200 <__sanitizer_set_death_callback@@Base+0x1190>  // b.pmore
   241cc:	ldr	x1, [sp, #104]
   241d0:	mov	x0, x27
   241d4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   241d8:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   241dc:	add	x0, x0, #0x400
   241e0:	ldxr	x1, [x0]
   241e4:	sub	x1, x1, #0x1
   241e8:	stlxr	w2, x1, [x0]
   241ec:	cbnz	w2, 241e0 <__sanitizer_set_death_callback@@Base+0x1170>
   241f0:	dmb	ish
   241f4:	ldp	x25, x26, [sp, #48]
   241f8:	ldp	x27, x28, [sp, #64]
   241fc:	b	23f78 <__sanitizer_set_death_callback@@Base+0xf08>
   24200:	mov	x2, x26
   24204:	mov	x1, x27
   24208:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2420c:	add	x0, x0, #0xec0
   24210:	bl	1a3fc <OnPrint@@Base+0x3d8>
   24214:	b	241cc <__sanitizer_set_death_callback@@Base+0x115c>
   24218:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   2421c:	ldr	x7, [x0, #1024]
   24220:	add	x6, sp, #0x88
   24224:	mov	x4, x21
   24228:	ldr	x2, [x20]
   2422c:	mov	x1, x20
   24230:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   24234:	add	x0, x0, #0xf88
   24238:	bl	1a3fc <OnPrint@@Base+0x3d8>
   2423c:	b	23fbc <__sanitizer_set_death_callback@@Base+0xf4c>
   24240:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   24244:	ldr	x0, [x0, #3752]
   24248:	add	x0, x2, x0
   2424c:	ldr	x24, [x0, #16]
   24250:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   24254:	ldr	x0, [x0, #3896]
   24258:	ldr	w0, [x0]
   2425c:	sxtw	x0, w0
   24260:	cmp	x0, #0x1
   24264:	b.hi	242ac <__sanitizer_set_death_callback@@Base+0x123c>  // b.pmore
   24268:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2426c:	ldr	x1, [x1, #3752]
   24270:	mrs	x2, tpidr_el0
   24274:	add	x1, x2, x1
   24278:	ldr	x0, [x1, #8]
   2427c:	ldr	x2, [sp, #136]
   24280:	str	x2, [x0, x19]
   24284:	ldr	x0, [x1, #8]
   24288:	add	x0, x0, x19
   2428c:	str	x24, [x0, #8]
   24290:	ldr	x0, [x1, #8]
   24294:	add	x0, x0, x19
   24298:	ldp	x21, x22, [sp, #16]
   2429c:	ldp	x23, x24, [sp, #32]
   242a0:	ldr	x30, [sp, #80]
   242a4:	ldp	x19, x20, [sp], #144
   242a8:	ret
   242ac:	mov	x2, x24
   242b0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   242b4:	add	x0, x0, #0xfd8
   242b8:	bl	1a3fc <OnPrint@@Base+0x3d8>
   242bc:	b	24268 <__sanitizer_set_death_callback@@Base+0x11f8>
   242c0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   242c4:	ldr	x0, [x0, #3896]
   242c8:	ldr	w0, [x0]
   242cc:	sxtw	x0, w0
   242d0:	cmp	x0, #0x1
   242d4:	b.ls	24268 <__sanitizer_set_death_callback@@Base+0x11f8>  // b.plast
   242d8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   242dc:	add	x0, x0, #0x10
   242e0:	bl	1a3fc <OnPrint@@Base+0x3d8>
   242e4:	b	24268 <__sanitizer_set_death_callback@@Base+0x11f8>
   242e8:	ldur	x24, [x1, #-16]
   242ec:	ldur	x1, [x1, #-8]
   242f0:	str	x1, [sp, #136]
   242f4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   242f8:	ldr	x0, [x0, #3896]
   242fc:	ldr	w0, [x0]
   24300:	sxtw	x0, w0
   24304:	cmp	x0, #0x1
   24308:	b.ls	24268 <__sanitizer_set_death_callback@@Base+0x11f8>  // b.plast
   2430c:	mov	x2, x24
   24310:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   24314:	add	x0, x0, #0x30
   24318:	bl	1a3fc <OnPrint@@Base+0x3d8>
   2431c:	b	24268 <__sanitizer_set_death_callback@@Base+0x11f8>
   24320:	mov	x0, #0x0                   	// #0
   24324:	b	242a0 <__sanitizer_set_death_callback@@Base+0x1230>
   24328:	mov	x0, #0x0                   	// #0
   2432c:	ldp	x21, x22, [sp, #16]
   24330:	ldp	x23, x24, [sp, #32]
   24334:	b	242a0 <__sanitizer_set_death_callback@@Base+0x1230>
   24338:	mov	x0, #0x0                   	// #0
   2433c:	ldp	x21, x22, [sp, #16]
   24340:	ldp	x23, x24, [sp, #32]
   24344:	b	242a0 <__sanitizer_set_death_callback@@Base+0x1230>
   24348:	stp	x19, x20, [sp, #-32]!
   2434c:	str	x30, [sp, #16]
   24350:	mov	x20, x0
   24354:	adrp	x2, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   24358:	ldr	x2, [x2, #4056]
   2435c:	ldrb	w0, [x2, #121]
   24360:	cbz	w0, 24398 <__sanitizer_set_death_callback@@Base+0x1328>
   24364:	mov	x19, x1
   24368:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2436c:	ldr	x0, [x0, #3896]
   24370:	ldr	w0, [x0]
   24374:	sxtw	x0, w0
   24378:	cmp	x0, #0x1
   2437c:	b.hi	243a4 <__sanitizer_set_death_callback@@Base+0x1334>  // b.pmore
   24380:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   24384:	ldr	x0, [x0, #3752]
   24388:	mrs	x1, tpidr_el0
   2438c:	add	x0, x1, x0
   24390:	str	x20, [x0, #24]
   24394:	str	x19, [x0, #16]
   24398:	ldr	x30, [sp, #16]
   2439c:	ldp	x19, x20, [sp], #32
   243a0:	ret
   243a4:	mov	x2, x1
   243a8:	mov	x1, x20
   243ac:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   243b0:	add	x0, x0, #0x98
   243b4:	bl	1a3fc <OnPrint@@Base+0x3d8>
   243b8:	b	24380 <__sanitizer_set_death_callback@@Base+0x1310>
   243bc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   243c0:	ldr	x0, [x0, #3752]
   243c4:	mrs	x1, tpidr_el0
   243c8:	add	x0, x1, x0
   243cc:	ret
   243d0:	ldr	x0, [x0]
   243d4:	cmn	x0, #0x1
   243d8:	cset	w0, eq  // eq = none
   243dc:	ret
   243e0:	stp	x19, x20, [sp, #-32]!
   243e4:	str	x30, [sp, #16]
   243e8:	mov	x19, x1
   243ec:	ldr	x1, [x1]
   243f0:	ldr	w3, [x1, #8]
   243f4:	ldr	w4, [x19, #8]
   243f8:	cmp	x3, x4
   243fc:	b.cs	2446c <__sanitizer_set_death_callback@@Base+0x13fc>  // b.hs, b.nlast
   24400:	bl	6730 <_Unwind_GetIP@plt>
   24404:	mov	x20, x0
   24408:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2440c:	ldr	x0, [x0, #4016]
   24410:	ldr	x0, [x0]
   24414:	cbz	x0, 24484 <__sanitizer_set_death_callback@@Base+0x1414>
   24418:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2441c:	ldr	x0, [x0, #4016]
   24420:	ldr	x1, [x0]
   24424:	mov	w0, #0x4                   	// #4
   24428:	cmp	x1, x20
   2442c:	b.hi	24460 <__sanitizer_set_death_callback@@Base+0x13f0>  // b.pmore
   24430:	ldr	x1, [x19]
   24434:	ldr	w0, [x1, #8]
   24438:	add	w2, w0, #0x1
   2443c:	str	w2, [x1, #8]
   24440:	add	x0, x1, w0, uxtw #3
   24444:	str	x20, [x0, #16]
   24448:	ldr	x0, [x19]
   2444c:	ldr	w1, [x0, #8]
   24450:	ldr	w0, [x19, #8]
   24454:	cmp	w1, w0
   24458:	cset	w0, eq  // eq = none
   2445c:	lsl	w0, w0, #2
   24460:	ldr	x30, [sp, #16]
   24464:	ldp	x19, x20, [sp], #32
   24468:	ret
   2446c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   24470:	add	x2, x2, #0xb8
   24474:	mov	w1, #0x6d                  	// #109
   24478:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2447c:	add	x0, x0, #0xe8
   24480:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24484:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   24488:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2448c:	ldr	x1, [x1, #4016]
   24490:	str	x0, [x1]
   24494:	b	24418 <__sanitizer_set_death_callback@@Base+0x13a8>
   24498:	str	x30, [sp, #-16]!
   2449c:	bl	6730 <_Unwind_GetIP@plt>
   244a0:	ldr	x30, [sp], #16
   244a4:	ret
   244a8:	stp	x19, x20, [sp, #-48]!
   244ac:	str	x30, [sp, #16]
   244b0:	cmp	w2, #0x1
   244b4:	b.ls	24524 <__sanitizer_set_death_callback@@Base+0x14b4>  // b.plast
   244b8:	mov	x19, x0
   244bc:	mov	x20, x1
   244c0:	str	wzr, [x0, #8]
   244c4:	str	x0, [sp, #32]
   244c8:	add	w2, w2, #0x1
   244cc:	cmp	w2, #0x100
   244d0:	mov	w0, #0x100                 	// #256
   244d4:	csel	w2, w2, w0, ls  // ls = plast
   244d8:	str	w2, [sp, #40]
   244dc:	add	x1, sp, #0x20
   244e0:	adrp	x0, 24000 <__sanitizer_set_death_callback@@Base+0xf90>
   244e4:	add	x0, x0, #0x3e0
   244e8:	bl	6350 <_Unwind_Backtrace@plt>
   244ec:	mov	x1, x20
   244f0:	mov	x0, x19
   244f4:	bl	1c154 <OnPrint@@Base+0x2130>
   244f8:	mov	x1, x0
   244fc:	cbnz	x0, 2450c <__sanitizer_set_death_callback@@Base+0x149c>
   24500:	ldr	w0, [x19, #8]
   24504:	cmp	w0, #0x1
   24508:	cset	x1, hi  // hi = pmore
   2450c:	mov	x0, x19
   24510:	bl	1c0f8 <OnPrint@@Base+0x20d4>
   24514:	str	x20, [x19, #16]
   24518:	ldr	x30, [sp, #16]
   2451c:	ldp	x19, x20, [sp], #48
   24520:	ret
   24524:	mov	w3, w2
   24528:	mov	x4, #0x2                   	// #2
   2452c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   24530:	add	x2, x2, #0x918
   24534:	mov	w1, #0x7a                  	// #122
   24538:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2453c:	add	x0, x0, #0xe8
   24540:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24544:	stp	x19, x20, [sp, #-80]!
   24548:	stp	x23, x24, [sp, #32]
   2454c:	str	x30, [sp, #64]
   24550:	mov	w24, w3
   24554:	cmp	w3, #0x1
   24558:	b.ls	24664 <__sanitizer_set_death_callback@@Base+0x15f4>  // b.plast
   2455c:	mov	x19, x0
   24560:	mov	x20, x2
   24564:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   24568:	ldr	x0, [x0, #1032]
   2456c:	cbz	x0, 2468c <__sanitizer_set_death_callback@@Base+0x161c>
   24570:	stp	x21, x22, [sp, #16]
   24574:	stp	x25, x26, [sp, #48]
   24578:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   2457c:	ldr	x0, [x0, #1040]
   24580:	blr	x0
   24584:	mov	x23, x0
   24588:	cbz	x0, 2469c <__sanitizer_set_death_callback@@Base+0x162c>
   2458c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   24590:	ldr	x0, [x0, #4016]
   24594:	ldr	x0, [x0]
   24598:	cbz	x0, 246bc <__sanitizer_set_death_callback@@Base+0x164c>
   2459c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   245a0:	ldr	x0, [x0, #4016]
   245a4:	ldr	x0, [x0]
   245a8:	sub	x1, x0, #0x1
   245ac:	tst	x1, x0
   245b0:	b.ne	246d0 <__sanitizer_set_death_callback@@Base+0x1660>  // b.any
   245b4:	mov	x25, #0x17ff                	// #6143
   245b8:	add	x22, x0, x25
   245bc:	neg	x0, x0
   245c0:	and	x22, x22, x0
   245c4:	mov	w2, #0x0                   	// #0
   245c8:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   245cc:	add	x1, x1, #0x350
   245d0:	mov	x0, x22
   245d4:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   245d8:	mov	x21, x0
   245dc:	mov	x2, #0x0                   	// #0
   245e0:	mov	x1, #0x0                   	// #0
   245e4:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   245e8:	mov	x1, #0x0                   	// #0
   245ec:	mov	x0, #0x0                   	// #0
   245f0:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   245f4:	cmp	x22, x25
   245f8:	b.ls	246e0 <__sanitizer_set_death_callback@@Base+0x1670>  // b.plast
   245fc:	mov	x2, #0x1800                	// #6144
   24600:	mov	w1, #0x0                   	// #0
   24604:	mov	x0, x21
   24608:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   2460c:	adrp	x0, 9b0000 <__ubsan_vptr_type_cache@@Base+0x951188>
   24610:	add	x25, x0, #0x408
   24614:	ldr	x6, [x0, #1032]
   24618:	mov	x5, x24
   2461c:	mov	x4, #0x0                   	// #0
   24620:	mov	x3, x21
   24624:	mov	x2, x23
   24628:	mov	x1, x20
   2462c:	mov	x0, #0x0                   	// #0
   24630:	blr	x6
   24634:	mov	x20, x0
   24638:	ldr	x1, [x25, #16]
   2463c:	mov	x0, x23
   24640:	blr	x1
   24644:	tbnz	x20, #63, 24778 <__sanitizer_set_death_callback@@Base+0x1708>
   24648:	cmp	x20, #0x100
   2464c:	b.hi	24790 <__sanitizer_set_death_callback@@Base+0x1720>  // b.pmore
   24650:	str	wzr, [x19, #8]
   24654:	mov	x4, x21
   24658:	mov	x3, #0x0                   	// #0
   2465c:	cbnz	x20, 247b4 <__sanitizer_set_death_callback@@Base+0x1744>
   24660:	b	247dc <__sanitizer_set_death_callback@@Base+0x176c>
   24664:	stp	x21, x22, [sp, #16]
   24668:	stp	x25, x26, [sp, #48]
   2466c:	mov	x4, #0x2                   	// #2
   24670:	mov	x3, x24
   24674:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   24678:	add	x2, x2, #0x918
   2467c:	mov	w1, #0x94                  	// #148
   24680:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   24684:	add	x0, x0, #0xe8
   24688:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2468c:	mov	w2, w3
   24690:	mov	x0, x19
   24694:	bl	244a8 <__sanitizer_set_death_callback@@Base+0x1438>
   24698:	b	247f0 <__sanitizer_set_death_callback@@Base+0x1780>
   2469c:	mov	x4, #0x0                   	// #0
   246a0:	mov	x3, #0x0                   	// #0
   246a4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   246a8:	add	x2, x2, #0x138
   246ac:	mov	w1, #0x9b                  	// #155
   246b0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   246b4:	add	x0, x0, #0xe8
   246b8:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   246bc:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   246c0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   246c4:	ldr	x1, [x1, #4016]
   246c8:	str	x0, [x1]
   246cc:	b	2459c <__sanitizer_set_death_callback@@Base+0x152c>
   246d0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   246d4:	add	x0, x0, #0x338
   246d8:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   246dc:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   246e0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   246e4:	ldr	x0, [x0, #4016]
   246e8:	ldr	x0, [x0]
   246ec:	cbz	x0, 24754 <__sanitizer_set_death_callback@@Base+0x16e4>
   246f0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   246f4:	ldr	x0, [x0, #4016]
   246f8:	ldr	x0, [x0]
   246fc:	sub	x1, x0, #0x1
   24700:	tst	x1, x0
   24704:	b.ne	24768 <__sanitizer_set_death_callback@@Base+0x16f8>  // b.any
   24708:	add	x25, x0, #0x1, lsl #12
   2470c:	add	x25, x25, #0x7ff
   24710:	neg	x0, x0
   24714:	and	x25, x25, x0
   24718:	mov	w2, #0x0                   	// #0
   2471c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   24720:	add	x1, x1, #0x350
   24724:	mov	x0, x25
   24728:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x4cc8>
   2472c:	mov	x26, x0
   24730:	mov	x2, #0x0                   	// #0
   24734:	mov	x1, x21
   24738:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   2473c:	mov	x1, x22
   24740:	mov	x0, x21
   24744:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   24748:	mov	x22, x25
   2474c:	mov	x21, x26
   24750:	b	245fc <__sanitizer_set_death_callback@@Base+0x158c>
   24754:	bl	15d94 <__sanitizer_set_report_fd@@Base+0x2f50>
   24758:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2475c:	ldr	x1, [x1, #4016]
   24760:	str	x0, [x1]
   24764:	b	246f0 <__sanitizer_set_death_callback@@Base+0x1680>
   24768:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2476c:	add	x0, x0, #0x338
   24770:	bl	1235c <__sanitizer_cov_dump@@Base+0x1e2c>
   24774:	bl	22f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   24778:	mov	x1, x22
   2477c:	mov	x0, x21
   24780:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   24784:	ldp	x21, x22, [sp, #16]
   24788:	ldp	x25, x26, [sp, #48]
   2478c:	b	247f0 <__sanitizer_set_death_callback@@Base+0x1780>
   24790:	mov	x4, #0x100                 	// #256
   24794:	mov	x3, x20
   24798:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2479c:	add	x2, x2, #0x148
   247a0:	mov	w1, #0xa3                  	// #163
   247a4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   247a8:	add	x0, x0, #0xe8
   247ac:	bl	22fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   247b0:	add	x4, x4, #0x18
   247b4:	ldr	x2, [x4]
   247b8:	ldr	w1, [x19, #8]
   247bc:	add	w0, w1, #0x1
   247c0:	str	w0, [x19, #8]
   247c4:	add	x1, x19, w1, uxtw #3
   247c8:	add	x2, x2, #0x2
   247cc:	str	x2, [x1, #16]
   247d0:	add	x3, x3, #0x1
   247d4:	cmp	x20, x3
   247d8:	b.gt	247b0 <__sanitizer_set_death_callback@@Base+0x1740>
   247dc:	mov	x1, x22
   247e0:	mov	x0, x21
   247e4:	bl	17be4 <__sanitizer_set_report_fd@@Base+0x4da0>
   247e8:	ldp	x21, x22, [sp, #16]
   247ec:	ldp	x25, x26, [sp, #48]
   247f0:	ldp	x23, x24, [sp, #32]
   247f4:	ldr	x30, [sp, #64]
   247f8:	ldp	x19, x20, [sp], #80
   247fc:	ret
   24800:	stp	x19, x20, [sp, #-48]!
   24804:	stp	x21, x22, [sp, #16]
   24808:	str	x30, [sp, #32]
   2480c:	mov	x20, x0
   24810:	mov	x19, x1
   24814:	mov	x22, x2
   24818:	mov	x21, x3
   2481c:	mov	x1, x0
   24820:	mov	x0, #0xffffffffffffffff    	// #-1
   24824:	bl	6500 <dlsym@plt>
   24828:	str	x0, [x19]
   2482c:	cbz	x0, 24848 <__sanitizer_set_death_callback@@Base+0x17d8>
   24830:	cmp	x22, x21
   24834:	cset	w0, eq  // eq = none
   24838:	ldp	x21, x22, [sp, #16]
   2483c:	ldr	x30, [sp, #32]
   24840:	ldp	x19, x20, [sp], #48
   24844:	ret
   24848:	mov	x1, x20
   2484c:	bl	6500 <dlsym@plt>
   24850:	str	x0, [x19]
   24854:	b	24830 <__sanitizer_set_death_callback@@Base+0x17c0>
   24858:	str	x30, [sp, #-16]!
   2485c:	mov	x2, x1
   24860:	mov	x1, x0
   24864:	mov	x0, #0xffffffffffffffff    	// #-1
   24868:	bl	6450 <dlvsym@plt>
   2486c:	ldr	x30, [sp], #16
   24870:	ret
   24874:	cmp	w1, #0x4
   24878:	b.eq	248d0 <__sanitizer_set_death_callback@@Base+0x1860>  // b.none
   2487c:	b.gt	248a8 <__sanitizer_set_death_callback@@Base+0x1838>
   24880:	cmp	w1, #0x1
   24884:	b.eq	248c4 <__sanitizer_set_death_callback@@Base+0x1854>  // b.none
   24888:	cmp	w1, #0x2
   2488c:	b.ne	248a0 <__sanitizer_set_death_callback@@Base+0x1830>  // b.any
   24890:	mov	x1, #0xffff                	// #65535
   24894:	cmp	x0, x1
   24898:	cset	w0, eq  // eq = none
   2489c:	b	248c0 <__sanitizer_set_death_callback@@Base+0x1850>
   248a0:	mov	w0, #0x0                   	// #0
   248a4:	b	248c0 <__sanitizer_set_death_callback@@Base+0x1850>
   248a8:	cmp	w1, #0x8
   248ac:	b.ne	248bc <__sanitizer_set_death_callback@@Base+0x184c>  // b.any
   248b0:	cmn	x0, #0x1
   248b4:	cset	w0, eq  // eq = none
   248b8:	b	248c0 <__sanitizer_set_death_callback@@Base+0x1850>
   248bc:	mov	w0, #0x0                   	// #0
   248c0:	ret
   248c4:	cmp	x0, #0xff
   248c8:	cset	w0, eq  // eq = none
   248cc:	b	248c0 <__sanitizer_set_death_callback@@Base+0x1850>
   248d0:	mov	x1, #0xffffffff            	// #4294967295
   248d4:	cmp	x0, x1
   248d8:	cset	w0, eq  // eq = none
   248dc:	b	248c0 <__sanitizer_set_death_callback@@Base+0x1850>
   248e0:	mov	x4, #0x0                   	// #0
   248e4:	b	248ec <__sanitizer_set_death_callback@@Base+0x187c>
   248e8:	mov	x1, x3
   248ec:	cmp	x1, x4
   248f0:	b.ls	24924 <__sanitizer_set_death_callback@@Base+0x18b4>  // b.plast
   248f4:	add	x3, x1, x4
   248f8:	lsr	x3, x3, #1
   248fc:	add	x7, x0, x3, lsl #3
   24900:	ldr	x5, [x0, x3, lsl #3]
   24904:	ldr	x6, [x5, #24]
   24908:	cmp	x6, x2
   2490c:	b.hi	248e8 <__sanitizer_set_death_callback@@Base+0x1878>  // b.pmore
   24910:	ldr	x4, [x5, #32]
   24914:	cmp	x4, x2
   24918:	b.hi	2492c <__sanitizer_set_death_callback@@Base+0x18bc>  // b.pmore
   2491c:	add	x4, x3, #0x1
   24920:	b	248ec <__sanitizer_set_death_callback@@Base+0x187c>
   24924:	mov	x0, #0x0                   	// #0
   24928:	b	24930 <__sanitizer_set_death_callback@@Base+0x18c0>
   2492c:	ldr	x0, [x7]
   24930:	ret
   24934:	mov	x2, x0
   24938:	ldr	x4, [x0]
   2493c:	ldr	x3, [x1]
   24940:	mov	w0, #0xffffffff            	// #-1
   24944:	cmp	x4, x3
   24948:	b.cc	2498c <__sanitizer_set_death_callback@@Base+0x191c>  // b.lo, b.ul, b.last
   2494c:	mov	w0, #0x1                   	// #1
   24950:	b.hi	2498c <__sanitizer_set_death_callback@@Base+0x191c>  // b.pmore
   24954:	ldr	x4, [x2, #8]
   24958:	ldr	x3, [x1, #8]
   2495c:	cmp	x4, x3
   24960:	b.cc	2498c <__sanitizer_set_death_callback@@Base+0x191c>  // b.lo, b.ul, b.last
   24964:	mov	w0, #0xffffffff            	// #-1
   24968:	b.hi	2498c <__sanitizer_set_death_callback@@Base+0x191c>  // b.pmore
   2496c:	ldr	x0, [x2, #16]
   24970:	ldr	x2, [x0, #56]
   24974:	ldr	x0, [x1, #16]
   24978:	ldr	x1, [x0, #56]
   2497c:	mov	w0, #0xffffffff            	// #-1
   24980:	cmp	x2, x1
   24984:	b.lt	2498c <__sanitizer_set_death_callback@@Base+0x191c>  // b.tstop
   24988:	cset	w0, gt
   2498c:	ret
   24990:	mov	x2, x0
   24994:	ldr	x4, [x0]
   24998:	ldr	x3, [x1]
   2499c:	mov	w0, #0xffffffff            	// #-1
   249a0:	cmp	x4, x3
   249a4:	b.cc	249c8 <__sanitizer_set_death_callback@@Base+0x1958>  // b.lo, b.ul, b.last
   249a8:	mov	w0, #0x1                   	// #1
   249ac:	b.hi	249c8 <__sanitizer_set_death_callback@@Base+0x1958>  // b.pmore
   249b0:	ldr	w2, [x2, #20]
   249b4:	ldr	w1, [x1, #20]
   249b8:	mov	w0, #0xffffffff            	// #-1
   249bc:	cmp	w2, w1
   249c0:	b.lt	249c8 <__sanitizer_set_death_callback@@Base+0x1958>  // b.tstop
   249c4:	cset	w0, gt
   249c8:	ret
   249cc:	ldr	x2, [x0]
   249d0:	ldr	x0, [x1]
   249d4:	cmp	x2, x0
   249d8:	b.cc	249e4 <__sanitizer_set_death_callback@@Base+0x1974>  // b.lo, b.ul, b.last
   249dc:	cset	w0, hi  // hi = pmore
   249e0:	ret
   249e4:	mov	w0, #0xffffffff            	// #-1
   249e8:	b	249e0 <__sanitizer_set_death_callback@@Base+0x1970>
   249ec:	ldr	x7, [x1, #32]
   249f0:	cbz	x7, 24a8c <__sanitizer_set_death_callback@@Base+0x1a1c>
   249f4:	stp	x29, x30, [sp, #-64]!
   249f8:	mov	x29, sp
   249fc:	stp	x19, x20, [sp, #16]
   24a00:	stp	x21, x22, [sp, #32]
   24a04:	stp	x23, x24, [sp, #48]
   24a08:	mov	x19, x0
   24a0c:	mov	x22, x2
   24a10:	mov	x23, x3
   24a14:	mov	x20, x4
   24a18:	mov	x21, x5
   24a1c:	ldr	x2, [x1, #24]
   24a20:	mov	x4, x7
   24a24:	mov	x3, #0x0                   	// #0
   24a28:	b	24a30 <__sanitizer_set_death_callback@@Base+0x19c0>
   24a2c:	mov	x4, x0
   24a30:	cmp	x4, x3
   24a34:	b.ls	24a74 <__sanitizer_set_death_callback@@Base+0x1a04>  // b.plast
   24a38:	add	x1, x4, x3
   24a3c:	lsr	x0, x1, #1
   24a40:	and	x1, x1, #0xfffffffffffffffe
   24a44:	add	x1, x1, x0
   24a48:	lsl	x6, x1, #3
   24a4c:	mov	x5, x6
   24a50:	add	x6, x2, x6
   24a54:	ldr	x1, [x2, x1, lsl #3]
   24a58:	cmp	x1, x19
   24a5c:	b.hi	24a2c <__sanitizer_set_death_callback@@Base+0x19bc>  // b.pmore
   24a60:	ldr	x1, [x6, #8]
   24a64:	cmp	x1, x19
   24a68:	b.hi	24a94 <__sanitizer_set_death_callback@@Base+0x1a24>  // b.pmore
   24a6c:	add	x3, x0, #0x1
   24a70:	b	24a30 <__sanitizer_set_death_callback@@Base+0x19c0>
   24a74:	mov	w0, #0x0                   	// #0
   24a78:	ldp	x19, x20, [sp, #16]
   24a7c:	ldp	x21, x22, [sp, #32]
   24a80:	ldp	x23, x24, [sp, #48]
   24a84:	ldp	x29, x30, [sp], #64
   24a88:	ret
   24a8c:	mov	w0, #0x0                   	// #0
   24a90:	ret
   24a94:	asr	x0, x5, #3
   24a98:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   24a9c:	movk	x5, #0xaaab
   24aa0:	mul	x0, x0, x5
   24aa4:	add	x0, x0, #0x1
   24aa8:	mov	x1, x5
   24aac:	cmp	x7, x0
   24ab0:	b.ls	24ae8 <__sanitizer_set_death_callback@@Base+0x1a78>  // b.plast
   24ab4:	ldr	x0, [x6, #24]
   24ab8:	cmp	x0, x19
   24abc:	b.hi	24ae8 <__sanitizer_set_death_callback@@Base+0x1a78>  // b.pmore
   24ac0:	ldr	x0, [x6, #32]
   24ac4:	cmp	x0, x19
   24ac8:	b.ls	24ae8 <__sanitizer_set_death_callback@@Base+0x1a78>  // b.plast
   24acc:	add	x6, x6, #0x18
   24ad0:	sub	x0, x6, x2
   24ad4:	asr	x0, x0, #3
   24ad8:	mul	x0, x0, x1
   24adc:	add	x0, x0, #0x1
   24ae0:	cmp	x7, x0
   24ae4:	b.hi	24ab4 <__sanitizer_set_death_callback@@Base+0x1a44>  // b.pmore
   24ae8:	ldr	x24, [x6, #16]
   24aec:	mov	x5, x21
   24af0:	mov	x4, x20
   24af4:	mov	x3, x23
   24af8:	mov	x2, x22
   24afc:	mov	x1, x24
   24b00:	mov	x0, x19
   24b04:	bl	249ec <__sanitizer_set_death_callback@@Base+0x197c>
   24b08:	cbnz	w0, 24a78 <__sanitizer_set_death_callback@@Base+0x1a08>
   24b0c:	ldr	x4, [x24]
   24b10:	ldr	w3, [x21]
   24b14:	ldr	x2, [x20]
   24b18:	mov	x1, x19
   24b1c:	mov	x0, x23
   24b20:	blr	x22
   24b24:	cbnz	w0, 24a78 <__sanitizer_set_death_callback@@Base+0x1a08>
   24b28:	ldr	x1, [x24, #8]
   24b2c:	str	x1, [x20]
   24b30:	ldr	w1, [x24, #16]
   24b34:	str	w1, [x21]
   24b38:	b	24a78 <__sanitizer_set_death_callback@@Base+0x1a08>
   24b3c:	stp	x29, x30, [sp, #-112]!
   24b40:	mov	x29, sp
   24b44:	stp	x19, x20, [sp, #16]
   24b48:	stp	x23, x24, [sp, #48]
   24b4c:	stp	x25, x26, [sp, #64]
   24b50:	mov	x19, x0
   24b54:	mov	x20, x1
   24b58:	mov	x24, x2
   24b5c:	mov	x25, x3
   24b60:	sub	x1, x1, #0x1
   24b64:	ldr	x0, [x0]
   24b68:	cmp	x1, x0
   24b6c:	b.cs	24b8c <__sanitizer_set_death_callback@@Base+0x1b1c>  // b.hs, b.nlast
   24b70:	lsl	x0, x20, #5
   24b74:	sub	x0, x0, #0x20
   24b78:	ldr	x1, [x19, #8]
   24b7c:	add	x26, x1, x0
   24b80:	ldr	x0, [x1, x0]
   24b84:	cmp	x0, x20
   24b88:	b.eq	24bf8 <__sanitizer_set_death_callback@@Base+0x1b88>  // b.none
   24b8c:	stp	x21, x22, [sp, #32]
   24b90:	mov	x2, #0x20                  	// #32
   24b94:	mov	w1, #0x0                   	// #0
   24b98:	add	x0, sp, #0x50
   24b9c:	bl	6530 <__asan_internal_memset@plt>
   24ba0:	str	x20, [sp, #80]
   24ba4:	ldr	x23, [x19, #8]
   24ba8:	ldr	x21, [x19]
   24bac:	mov	x20, #0x0                   	// #0
   24bb0:	add	x22, sp, #0x50
   24bb4:	b	24bbc <__sanitizer_set_death_callback@@Base+0x1b4c>
   24bb8:	mov	x21, x19
   24bbc:	cmp	x21, x20
   24bc0:	b.ls	24c10 <__sanitizer_set_death_callback@@Base+0x1ba0>  // b.plast
   24bc4:	add	x19, x21, x20
   24bc8:	lsr	x19, x19, #1
   24bcc:	add	x26, x23, x19, lsl #5
   24bd0:	mov	x1, x26
   24bd4:	mov	x0, x22
   24bd8:	bl	249cc <__sanitizer_set_death_callback@@Base+0x195c>
   24bdc:	tbnz	w0, #31, 24bb8 <__sanitizer_set_death_callback@@Base+0x1b48>
   24be0:	cmp	w0, #0x0
   24be4:	b.le	24bf0 <__sanitizer_set_death_callback@@Base+0x1b80>
   24be8:	add	x20, x19, #0x1
   24bec:	b	24bbc <__sanitizer_set_death_callback@@Base+0x1b4c>
   24bf0:	cbz	x26, 24c10 <__sanitizer_set_death_callback@@Base+0x1ba0>
   24bf4:	ldp	x21, x22, [sp, #32]
   24bf8:	mov	x0, x26
   24bfc:	ldp	x19, x20, [sp, #16]
   24c00:	ldp	x23, x24, [sp, #48]
   24c04:	ldp	x25, x26, [sp, #64]
   24c08:	ldp	x29, x30, [sp], #112
   24c0c:	ret
   24c10:	mov	w2, #0x0                   	// #0
   24c14:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   24c18:	add	x1, x1, #0x170
   24c1c:	mov	x0, x25
   24c20:	blr	x24
   24c24:	mov	x26, #0x0                   	// #0
   24c28:	ldp	x21, x22, [sp, #32]
   24c2c:	b	24bf8 <__sanitizer_set_death_callback@@Base+0x1b88>
   24c30:	stp	x29, x30, [sp, #-64]!
   24c34:	mov	x29, sp
   24c38:	stp	x19, x20, [sp, #16]
   24c3c:	stp	x21, x22, [sp, #32]
   24c40:	str	x23, [sp, #48]
   24c44:	mov	x23, x1
   24c48:	mov	x20, x2
   24c4c:	mov	x21, x3
   24c50:	mov	w22, w4
   24c54:	mov	x2, x5
   24c58:	mov	x3, x6
   24c5c:	mov	x19, x7
   24c60:	ldr	x7, [x7, #24]
   24c64:	cbz	x7, 24c88 <__sanitizer_set_death_callback@@Base+0x1c18>
   24c68:	add	x7, x7, x7, lsl #1
   24c6c:	lsl	x7, x7, #3
   24c70:	sub	x7, x7, #0x18
   24c74:	ldr	x1, [x19]
   24c78:	add	x4, x1, x7
   24c7c:	ldr	x1, [x1, x7]
   24c80:	cmp	x1, x20
   24c84:	b.eq	24cdc <__sanitizer_set_death_callback@@Base+0x1c6c>  // b.none
   24c88:	mov	x4, x19
   24c8c:	mov	x1, #0x18                  	// #24
   24c90:	bl	6510 <__asan_backtrace_vector_grow@plt>
   24c94:	cbz	x0, 24cfc <__sanitizer_set_death_callback@@Base+0x1c8c>
   24c98:	ldr	x2, [x23, #16]
   24c9c:	add	x20, x2, x20
   24ca0:	str	x20, [x0]
   24ca4:	str	x21, [x0, #8]
   24ca8:	str	w22, [x0, #16]
   24cac:	ldr	x1, [x19, #24]
   24cb0:	str	w1, [x0, #20]
   24cb4:	ldr	x0, [x19, #24]
   24cb8:	add	x0, x0, #0x1
   24cbc:	str	x0, [x19, #24]
   24cc0:	mov	w1, #0x1                   	// #1
   24cc4:	mov	w0, w1
   24cc8:	ldp	x19, x20, [sp, #16]
   24ccc:	ldp	x21, x22, [sp, #32]
   24cd0:	ldr	x23, [sp, #48]
   24cd4:	ldp	x29, x30, [sp], #64
   24cd8:	ret
   24cdc:	ldr	x1, [x4, #8]
   24ce0:	cmp	x1, x21
   24ce4:	b.ne	24c88 <__sanitizer_set_death_callback@@Base+0x1c18>  // b.any
   24ce8:	ldr	w4, [x4, #16]
   24cec:	mov	w1, #0x1                   	// #1
   24cf0:	cmp	w4, w22
   24cf4:	b.ne	24c88 <__sanitizer_set_death_callback@@Base+0x1c18>  // b.any
   24cf8:	b	24cc4 <__sanitizer_set_death_callback@@Base+0x1c54>
   24cfc:	mov	w1, #0x0                   	// #0
   24d00:	b	24cc4 <__sanitizer_set_death_callback@@Base+0x1c54>
   24d04:	stp	x29, x30, [sp, #-48]!
   24d08:	mov	x29, sp
   24d0c:	stp	x19, x20, [sp, #16]
   24d10:	stp	x21, x22, [sp, #32]
   24d14:	mov	x22, x2
   24d18:	mov	x2, x5
   24d1c:	mov	x19, x7
   24d20:	ldr	x21, [x1, #16]
   24d24:	add	x20, x21, x3
   24d28:	add	x21, x21, x4
   24d2c:	ldr	x1, [x7, #24]
   24d30:	cbz	x1, 24d6c <__sanitizer_set_death_callback@@Base+0x1cfc>
   24d34:	add	x1, x1, x1, lsl #1
   24d38:	lsl	x1, x1, #3
   24d3c:	sub	x1, x1, #0x18
   24d40:	ldr	x3, [x7]
   24d44:	add	x1, x3, x1
   24d48:	ldr	x3, [x1, #8]
   24d4c:	cmp	x3, x20
   24d50:	b.eq	24d60 <__sanitizer_set_death_callback@@Base+0x1cf0>  // b.none
   24d54:	add	x4, x3, #0x1
   24d58:	cmp	x4, x20
   24d5c:	b.ne	24d6c <__sanitizer_set_death_callback@@Base+0x1cfc>  // b.any
   24d60:	ldr	x4, [x1, #16]
   24d64:	cmp	x4, x22
   24d68:	b.eq	24dac <__sanitizer_set_death_callback@@Base+0x1d3c>  // b.none
   24d6c:	mov	x4, x19
   24d70:	mov	x3, x6
   24d74:	mov	x1, #0x18                  	// #24
   24d78:	bl	6510 <__asan_backtrace_vector_grow@plt>
   24d7c:	cbz	x0, 24dc0 <__sanitizer_set_death_callback@@Base+0x1d50>
   24d80:	str	x20, [x0]
   24d84:	str	x21, [x0, #8]
   24d88:	str	x22, [x0, #16]
   24d8c:	ldr	x0, [x19, #24]
   24d90:	add	x0, x0, #0x1
   24d94:	str	x0, [x19, #24]
   24d98:	mov	w0, #0x1                   	// #1
   24d9c:	ldp	x19, x20, [sp, #16]
   24da0:	ldp	x21, x22, [sp, #32]
   24da4:	ldp	x29, x30, [sp], #48
   24da8:	ret
   24dac:	mov	w0, #0x1                   	// #1
   24db0:	cmp	x3, x21
   24db4:	b.cs	24d9c <__sanitizer_set_death_callback@@Base+0x1d2c>  // b.hs, b.nlast
   24db8:	str	x21, [x1, #8]
   24dbc:	b	24d9c <__sanitizer_set_death_callback@@Base+0x1d2c>
   24dc0:	mov	w0, #0x0                   	// #0
   24dc4:	b	24d9c <__sanitizer_set_death_callback@@Base+0x1d2c>
   24dc8:	stp	x29, x30, [sp, #-48]!
   24dcc:	mov	x29, sp
   24dd0:	stp	x19, x20, [sp, #16]
   24dd4:	stp	x21, x22, [sp, #32]
   24dd8:	mov	x19, x2
   24ddc:	mov	x2, x3
   24de0:	mov	x3, x4
   24de4:	mov	x20, x5
   24de8:	ldr	x21, [x19]
   24dec:	add	x21, x1, x21
   24df0:	ldr	x22, [x19, #8]
   24df4:	add	x22, x1, x22
   24df8:	ldr	x1, [x5, #24]
   24dfc:	cbz	x1, 24e3c <__sanitizer_set_death_callback@@Base+0x1dcc>
   24e00:	add	x1, x1, x1, lsl #1
   24e04:	lsl	x1, x1, #3
   24e08:	sub	x1, x1, #0x18
   24e0c:	ldr	x4, [x5]
   24e10:	add	x1, x4, x1
   24e14:	ldr	x4, [x1, #8]
   24e18:	cmp	x21, x4
   24e1c:	b.eq	24e2c <__sanitizer_set_death_callback@@Base+0x1dbc>  // b.none
   24e20:	add	x5, x4, #0x1
   24e24:	cmp	x21, x5
   24e28:	b.ne	24e3c <__sanitizer_set_death_callback@@Base+0x1dcc>  // b.any
   24e2c:	ldr	x6, [x19, #16]
   24e30:	ldr	x5, [x1, #16]
   24e34:	cmp	x6, x5
   24e38:	b.eq	24e84 <__sanitizer_set_death_callback@@Base+0x1e14>  // b.none
   24e3c:	mov	x4, x20
   24e40:	mov	x1, #0x18                  	// #24
   24e44:	bl	6510 <__asan_backtrace_vector_grow@plt>
   24e48:	cbz	x0, 24e98 <__sanitizer_set_death_callback@@Base+0x1e28>
   24e4c:	str	x21, [x19]
   24e50:	str	x22, [x19, #8]
   24e54:	ldp	x2, x3, [x19]
   24e58:	stp	x2, x3, [x0]
   24e5c:	ldr	x1, [x19, #16]
   24e60:	str	x1, [x0, #16]
   24e64:	ldr	x0, [x20, #24]
   24e68:	add	x0, x0, #0x1
   24e6c:	str	x0, [x20, #24]
   24e70:	mov	w0, #0x1                   	// #1
   24e74:	ldp	x19, x20, [sp, #16]
   24e78:	ldp	x21, x22, [sp, #32]
   24e7c:	ldp	x29, x30, [sp], #48
   24e80:	ret
   24e84:	mov	w0, #0x1                   	// #1
   24e88:	cmp	x22, x4
   24e8c:	b.ls	24e74 <__sanitizer_set_death_callback@@Base+0x1e04>  // b.plast
   24e90:	str	x22, [x1, #8]
   24e94:	b	24e74 <__sanitizer_set_death_callback@@Base+0x1e04>
   24e98:	mov	w0, #0x0                   	// #0
   24e9c:	b	24e74 <__sanitizer_set_death_callback@@Base+0x1e04>
   24ea0:	stp	x29, x30, [sp, #-240]!
   24ea4:	mov	x29, sp
   24ea8:	stp	x19, x20, [sp, #16]
   24eac:	mov	x19, x0
   24eb0:	ldr	x5, [x0, #16]
   24eb4:	ldr	x0, [x0, #8]
   24eb8:	add	x20, sp, #0x28
   24ebc:	sub	w5, w5, w0
   24ec0:	ldr	x4, [x19]
   24ec4:	mov	x3, x1
   24ec8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   24ecc:	add	x2, x2, #0x190
   24ed0:	mov	x1, #0xc8                  	// #200
   24ed4:	mov	x0, x20
   24ed8:	bl	6700 <snprintf@plt>
   24edc:	ldr	x3, [x19, #40]
   24ee0:	mov	w2, #0x0                   	// #0
   24ee4:	mov	x1, x20
   24ee8:	ldr	x0, [x19, #48]
   24eec:	blr	x3
   24ef0:	ldp	x19, x20, [sp, #16]
   24ef4:	ldp	x29, x30, [sp], #240
   24ef8:	ret
   24efc:	stp	x29, x30, [sp, #-32]!
   24f00:	mov	x29, sp
   24f04:	str	x19, [sp, #16]
   24f08:	mov	x19, x0
   24f0c:	ldr	x0, [x0, #24]
   24f10:	cmp	x1, x0
   24f14:	b.ls	24f44 <__sanitizer_set_death_callback@@Base+0x1ed4>  // b.plast
   24f18:	ldr	w0, [x19, #56]
   24f1c:	cbz	w0, 24f28 <__sanitizer_set_death_callback@@Base+0x1eb8>
   24f20:	mov	w0, #0x0                   	// #0
   24f24:	b	24f5c <__sanitizer_set_death_callback@@Base+0x1eec>
   24f28:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   24f2c:	add	x1, x1, #0x1a0
   24f30:	mov	x0, x19
   24f34:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   24f38:	mov	w0, #0x1                   	// #1
   24f3c:	str	w0, [x19, #56]
   24f40:	b	24f20 <__sanitizer_set_death_callback@@Base+0x1eb0>
   24f44:	ldr	x2, [x19, #16]
   24f48:	add	x2, x2, x1
   24f4c:	str	x2, [x19, #16]
   24f50:	sub	x1, x0, x1
   24f54:	str	x1, [x19, #24]
   24f58:	mov	w0, #0x1                   	// #1
   24f5c:	ldr	x19, [sp, #16]
   24f60:	ldp	x29, x30, [sp], #32
   24f64:	ret
   24f68:	stp	x29, x30, [sp, #-32]!
   24f6c:	mov	x29, sp
   24f70:	stp	x19, x20, [sp, #16]
   24f74:	mov	x19, x0
   24f78:	ldr	x20, [x0, #16]
   24f7c:	mov	x1, #0x4                   	// #4
   24f80:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   24f84:	cbz	w0, 24fd8 <__sanitizer_set_death_callback@@Base+0x1f68>
   24f88:	ldr	w0, [x19, #32]
   24f8c:	cbz	w0, 24fb4 <__sanitizer_set_death_callback@@Base+0x1f44>
   24f90:	ldrb	w0, [x20]
   24f94:	ldrb	w1, [x20, #1]
   24f98:	lsl	w1, w1, #16
   24f9c:	orr	w0, w1, w0, lsl #24
   24fa0:	ldrb	w1, [x20, #2]
   24fa4:	ldrb	w2, [x20, #3]
   24fa8:	orr	w1, w2, w1, lsl #8
   24fac:	orr	w0, w0, w1
   24fb0:	b	24fdc <__sanitizer_set_death_callback@@Base+0x1f6c>
   24fb4:	ldrb	w0, [x20, #3]
   24fb8:	ldrb	w1, [x20, #2]
   24fbc:	lsl	w1, w1, #16
   24fc0:	orr	w0, w1, w0, lsl #24
   24fc4:	ldrb	w1, [x20, #1]
   24fc8:	ldrb	w2, [x20]
   24fcc:	orr	w1, w2, w1, lsl #8
   24fd0:	orr	w0, w0, w1
   24fd4:	b	24fdc <__sanitizer_set_death_callback@@Base+0x1f6c>
   24fd8:	mov	w0, #0x0                   	// #0
   24fdc:	ldp	x19, x20, [sp, #16]
   24fe0:	ldp	x29, x30, [sp], #32
   24fe4:	ret
   24fe8:	stp	x29, x30, [sp, #-32]!
   24fec:	mov	x29, sp
   24ff0:	stp	x19, x20, [sp, #16]
   24ff4:	mov	x20, x0
   24ff8:	ldr	x19, [x0, #16]
   24ffc:	mov	x1, #0x8                   	// #8
   25000:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   25004:	cbz	w0, 250a8 <__sanitizer_set_death_callback@@Base+0x2038>
   25008:	ldr	w0, [x20, #32]
   2500c:	cbz	w0, 2505c <__sanitizer_set_death_callback@@Base+0x1fec>
   25010:	ldrb	w0, [x19]
   25014:	ldrb	w1, [x19, #1]
   25018:	lsl	x1, x1, #48
   2501c:	orr	x0, x1, x0, lsl #56
   25020:	ldrb	w1, [x19, #2]
   25024:	ldrb	w2, [x19, #3]
   25028:	lsl	x2, x2, #32
   2502c:	orr	x1, x2, x1, lsl #40
   25030:	orr	x0, x0, x1
   25034:	ldrb	w1, [x19, #4]
   25038:	ldrb	w2, [x19, #5]
   2503c:	lsl	x2, x2, #16
   25040:	orr	x1, x2, x1, lsl #24
   25044:	orr	x0, x0, x1
   25048:	ldrb	w1, [x19, #6]
   2504c:	ldrb	w2, [x19, #7]
   25050:	orr	x1, x2, x1, lsl #8
   25054:	orr	x0, x0, x1
   25058:	b	250ac <__sanitizer_set_death_callback@@Base+0x203c>
   2505c:	ldrb	w0, [x19, #7]
   25060:	ldrb	w1, [x19, #6]
   25064:	lsl	x1, x1, #48
   25068:	orr	x0, x1, x0, lsl #56
   2506c:	ldrb	w1, [x19, #5]
   25070:	ldrb	w2, [x19, #4]
   25074:	lsl	x2, x2, #32
   25078:	orr	x1, x2, x1, lsl #40
   2507c:	orr	x0, x0, x1
   25080:	ldrb	w1, [x19, #3]
   25084:	ldrb	w2, [x19, #2]
   25088:	lsl	x2, x2, #16
   2508c:	orr	x1, x2, x1, lsl #24
   25090:	orr	x0, x0, x1
   25094:	ldrb	w1, [x19, #1]
   25098:	ldrb	w2, [x19]
   2509c:	orr	x1, x2, x1, lsl #8
   250a0:	orr	x0, x0, x1
   250a4:	b	250ac <__sanitizer_set_death_callback@@Base+0x203c>
   250a8:	mov	x0, #0x0                   	// #0
   250ac:	ldp	x19, x20, [sp, #16]
   250b0:	ldp	x29, x30, [sp], #32
   250b4:	ret
   250b8:	stp	x29, x30, [sp, #-16]!
   250bc:	mov	x29, sp
   250c0:	cbz	w1, 250d0 <__sanitizer_set_death_callback@@Base+0x2060>
   250c4:	bl	24fe8 <__sanitizer_set_death_callback@@Base+0x1f78>
   250c8:	ldp	x29, x30, [sp], #16
   250cc:	ret
   250d0:	bl	24f68 <__sanitizer_set_death_callback@@Base+0x1ef8>
   250d4:	mov	w0, w0
   250d8:	b	250c8 <__sanitizer_set_death_callback@@Base+0x2058>
   250dc:	stp	x29, x30, [sp, #-32]!
   250e0:	mov	x29, sp
   250e4:	stp	x19, x20, [sp, #16]
   250e8:	mov	x19, x0
   250ec:	ldr	x20, [x0, #16]
   250f0:	mov	x1, #0x2                   	// #2
   250f4:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   250f8:	cbz	w0, 25124 <__sanitizer_set_death_callback@@Base+0x20b4>
   250fc:	ldr	w0, [x19, #32]
   25100:	cbz	w0, 25114 <__sanitizer_set_death_callback@@Base+0x20a4>
   25104:	ldrb	w1, [x20]
   25108:	ldrb	w0, [x20, #1]
   2510c:	bfi	w0, w1, #8, #24
   25110:	b	25128 <__sanitizer_set_death_callback@@Base+0x20b8>
   25114:	ldrb	w1, [x20, #1]
   25118:	ldrb	w0, [x20]
   2511c:	bfi	w0, w1, #8, #24
   25120:	b	25128 <__sanitizer_set_death_callback@@Base+0x20b8>
   25124:	mov	w0, #0x0                   	// #0
   25128:	ldp	x19, x20, [sp, #16]
   2512c:	ldp	x29, x30, [sp], #32
   25130:	ret
   25134:	stp	x29, x30, [sp, #-32]!
   25138:	mov	x29, sp
   2513c:	str	x19, [sp, #16]
   25140:	ldr	x19, [x0, #16]
   25144:	mov	x1, #0x1                   	// #1
   25148:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   2514c:	cbz	w0, 25160 <__sanitizer_set_death_callback@@Base+0x20f0>
   25150:	ldrb	w0, [x19]
   25154:	ldr	x19, [sp, #16]
   25158:	ldp	x29, x30, [sp], #32
   2515c:	ret
   25160:	mov	w0, #0x0                   	// #0
   25164:	b	25154 <__sanitizer_set_death_callback@@Base+0x20e4>
   25168:	stp	x29, x30, [sp, #-80]!
   2516c:	mov	x29, sp
   25170:	stp	x19, x20, [sp, #16]
   25174:	stp	x21, x22, [sp, #32]
   25178:	stp	x23, x24, [sp, #48]
   2517c:	stp	x25, x26, [sp, #64]
   25180:	mov	x20, x0
   25184:	mov	w24, #0x0                   	// #0
   25188:	mov	w19, #0x0                   	// #0
   2518c:	mov	x22, #0x0                   	// #0
   25190:	mov	x23, #0x1                   	// #1
   25194:	adrp	x25, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   25198:	add	x25, x25, #0x1b0
   2519c:	mov	w26, #0x1                   	// #1
   251a0:	b	251b0 <__sanitizer_set_death_callback@@Base+0x2140>
   251a4:	cbz	w24, 251e0 <__sanitizer_set_death_callback@@Base+0x2170>
   251a8:	add	w19, w19, #0x7
   251ac:	tbz	w21, #7, 251f8 <__sanitizer_set_death_callback@@Base+0x2188>
   251b0:	ldr	x21, [x20, #16]
   251b4:	mov	x1, x23
   251b8:	mov	x0, x20
   251bc:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   251c0:	cbz	w0, 251f4 <__sanitizer_set_death_callback@@Base+0x2184>
   251c4:	ldrb	w21, [x21]
   251c8:	cmp	w19, #0x3f
   251cc:	b.hi	251a4 <__sanitizer_set_death_callback@@Base+0x2134>  // b.pmore
   251d0:	and	x0, x21, #0x7f
   251d4:	lsl	x0, x0, x19
   251d8:	orr	x22, x22, x0
   251dc:	b	251a8 <__sanitizer_set_death_callback@@Base+0x2138>
   251e0:	mov	x1, x25
   251e4:	mov	x0, x20
   251e8:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   251ec:	mov	w24, w26
   251f0:	b	251a8 <__sanitizer_set_death_callback@@Base+0x2138>
   251f4:	mov	x22, #0x0                   	// #0
   251f8:	mov	x0, x22
   251fc:	ldp	x19, x20, [sp, #16]
   25200:	ldp	x21, x22, [sp, #32]
   25204:	ldp	x23, x24, [sp, #48]
   25208:	ldp	x25, x26, [sp, #64]
   2520c:	ldp	x29, x30, [sp], #80
   25210:	ret
   25214:	stp	x29, x30, [sp, #-16]!
   25218:	mov	x29, sp
   2521c:	cmp	w1, #0x4
   25220:	b.eq	25264 <__sanitizer_set_death_callback@@Base+0x21f4>  // b.none
   25224:	b.gt	25244 <__sanitizer_set_death_callback@@Base+0x21d4>
   25228:	cmp	w1, #0x1
   2522c:	b.eq	25254 <__sanitizer_set_death_callback@@Base+0x21e4>  // b.none
   25230:	cmp	w1, #0x2
   25234:	b.ne	25270 <__sanitizer_set_death_callback@@Base+0x2200>  // b.any
   25238:	bl	250dc <__sanitizer_set_death_callback@@Base+0x206c>
   2523c:	and	x0, x0, #0xffff
   25240:	b	2525c <__sanitizer_set_death_callback@@Base+0x21ec>
   25244:	cmp	w1, #0x8
   25248:	b.ne	25270 <__sanitizer_set_death_callback@@Base+0x2200>  // b.any
   2524c:	bl	24fe8 <__sanitizer_set_death_callback@@Base+0x1f78>
   25250:	b	2525c <__sanitizer_set_death_callback@@Base+0x21ec>
   25254:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   25258:	and	x0, x0, #0xff
   2525c:	ldp	x29, x30, [sp], #16
   25260:	ret
   25264:	bl	24f68 <__sanitizer_set_death_callback@@Base+0x1ef8>
   25268:	mov	w0, w0
   2526c:	b	2525c <__sanitizer_set_death_callback@@Base+0x21ec>
   25270:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   25274:	add	x1, x1, #0x1d0
   25278:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   2527c:	mov	x0, #0x0                   	// #0
   25280:	b	2525c <__sanitizer_set_death_callback@@Base+0x21ec>
   25284:	stp	x29, x30, [sp, #-80]!
   25288:	mov	x29, sp
   2528c:	stp	x19, x20, [sp, #16]
   25290:	stp	x21, x22, [sp, #32]
   25294:	stp	x23, x24, [sp, #48]
   25298:	stp	x25, x26, [sp, #64]
   2529c:	mov	x21, x0
   252a0:	mov	w24, #0x0                   	// #0
   252a4:	mov	w19, #0x0                   	// #0
   252a8:	mov	x22, #0x0                   	// #0
   252ac:	mov	x23, #0x1                   	// #1
   252b0:	adrp	x25, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   252b4:	add	x25, x25, #0x1f0
   252b8:	mov	w26, #0x1                   	// #1
   252bc:	b	252cc <__sanitizer_set_death_callback@@Base+0x225c>
   252c0:	cbz	w24, 252fc <__sanitizer_set_death_callback@@Base+0x228c>
   252c4:	add	w19, w19, #0x7
   252c8:	tbz	w20, #7, 25310 <__sanitizer_set_death_callback@@Base+0x22a0>
   252cc:	ldr	x20, [x21, #16]
   252d0:	mov	x1, x23
   252d4:	mov	x0, x21
   252d8:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   252dc:	cbz	w0, 25330 <__sanitizer_set_death_callback@@Base+0x22c0>
   252e0:	ldrb	w20, [x20]
   252e4:	cmp	w19, #0x3f
   252e8:	b.hi	252c0 <__sanitizer_set_death_callback@@Base+0x2250>  // b.pmore
   252ec:	and	x0, x20, #0x7f
   252f0:	lsl	x0, x0, x19
   252f4:	orr	x22, x22, x0
   252f8:	b	252c4 <__sanitizer_set_death_callback@@Base+0x2254>
   252fc:	mov	x1, x25
   25300:	mov	x0, x21
   25304:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   25308:	mov	w24, w26
   2530c:	b	252c4 <__sanitizer_set_death_callback@@Base+0x2254>
   25310:	and	w20, w20, #0x40
   25314:	cmp	w19, #0x3f
   25318:	mov	x0, #0xffffffffffffffff    	// #-1
   2531c:	lsl	x0, x0, x19
   25320:	orr	x0, x22, x0
   25324:	ccmp	w20, #0x0, #0x4, ls  // ls = plast
   25328:	csel	x0, x0, x22, ne  // ne = any
   2532c:	b	25334 <__sanitizer_set_death_callback@@Base+0x22c4>
   25330:	mov	x0, #0x0                   	// #0
   25334:	ldp	x19, x20, [sp, #16]
   25338:	ldp	x21, x22, [sp, #32]
   2533c:	ldp	x23, x24, [sp, #48]
   25340:	ldp	x25, x26, [sp, #64]
   25344:	ldp	x29, x30, [sp], #80
   25348:	ret
   2534c:	stp	x29, x30, [sp, #-32]!
   25350:	mov	x29, sp
   25354:	stp	x19, x20, [sp, #16]
   25358:	mov	x19, x0
   2535c:	ldr	x20, [x0, #16]
   25360:	ldr	x1, [x0, #24]
   25364:	mov	x0, x20
   25368:	bl	6800 <__asan_internal_strnlen@plt>
   2536c:	add	x1, x0, #0x1
   25370:	mov	x0, x19
   25374:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   25378:	cmp	w0, #0x0
   2537c:	csel	x0, x20, xzr, ne  // ne = any
   25380:	ldp	x19, x20, [sp, #16]
   25384:	ldp	x29, x30, [sp], #32
   25388:	ret
   2538c:	sub	sp, sp, #0x70
   25390:	stp	x29, x30, [sp, #16]
   25394:	add	x29, sp, #0x10
   25398:	stp	x19, x20, [sp, #32]
   2539c:	stp	x21, x22, [sp, #48]
   253a0:	stp	x23, x24, [sp, #64]
   253a4:	stp	x25, x26, [sp, #80]
   253a8:	str	x27, [sp, #96]
   253ac:	mov	w19, w0
   253b0:	mov	x20, x1
   253b4:	mov	w22, w2
   253b8:	mov	w25, w3
   253bc:	mov	w24, w4
   253c0:	mov	x27, x5
   253c4:	mov	x26, x6
   253c8:	mov	x23, x7
   253cc:	ldr	x21, [sp, #112]
   253d0:	mov	x2, #0x10                  	// #16
   253d4:	mov	w1, #0x0                   	// #0
   253d8:	mov	x0, x21
   253dc:	bl	6530 <__asan_internal_memset@plt>
   253e0:	cmp	w19, #0x20
   253e4:	b.hi	25410 <__sanitizer_set_death_callback@@Base+0x23a0>  // b.pmore
   253e8:	cbz	w19, 25874 <__sanitizer_set_death_callback@@Base+0x2804>
   253ec:	sub	w19, w19, #0x1
   253f0:	cmp	w19, #0x1f
   253f4:	b.hi	25874 <__sanitizer_set_death_callback@@Base+0x2804>  // b.pmore
   253f8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   253fc:	add	x1, x1, #0x4b0
   25400:	ldrh	w0, [x1, w19, uxtw #1]
   25404:	adr	x1, 25410 <__sanitizer_set_death_callback@@Base+0x23a0>
   25408:	add	x0, x1, w0, sxth #2
   2540c:	br	x0
   25410:	mov	w0, #0x1f20                	// #7968
   25414:	cmp	w19, w0
   25418:	b.eq	25820 <__sanitizer_set_death_callback@@Base+0x27b0>  // b.none
   2541c:	b.ls	25464 <__sanitizer_set_death_callback@@Base+0x23f4>  // b.plast
   25420:	mov	w0, #0x1f21                	// #7969
   25424:	cmp	w19, w0
   25428:	b.ne	25874 <__sanitizer_set_death_callback@@Base+0x2804>  // b.any
   2542c:	mov	w1, w22
   25430:	mov	x0, x20
   25434:	bl	250b8 <__sanitizer_set_death_callback@@Base+0x2048>
   25438:	cbz	x23, 25850 <__sanitizer_set_death_callback@@Base+0x27e0>
   2543c:	ldr	x1, [x23, #112]
   25440:	cmp	x1, x0
   25444:	b.ls	2585c <__sanitizer_set_death_callback@@Base+0x27ec>  // b.plast
   25448:	mov	w1, #0x4                   	// #4
   2544c:	str	w1, [x21]
   25450:	ldr	x1, [x23, #104]
   25454:	add	x0, x1, x0
   25458:	str	x0, [x21, #8]
   2545c:	mov	w0, #0x1                   	// #1
   25460:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25464:	mov	w0, #0x1f01                	// #7937
   25468:	cmp	w19, w0
   2546c:	b.eq	25804 <__sanitizer_set_death_callback@@Base+0x2794>  // b.none
   25470:	mov	w0, #0x1f02                	// #7938
   25474:	cmp	w19, w0
   25478:	b.ne	25874 <__sanitizer_set_death_callback@@Base+0x2804>  // b.any
   2547c:	mov	w0, #0x8                   	// #8
   25480:	str	w0, [x21]
   25484:	mov	x0, x20
   25488:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   2548c:	str	x0, [x21, #8]
   25490:	mov	w0, #0x1                   	// #1
   25494:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25498:	mov	w19, #0x1                   	// #1
   2549c:	str	w19, [x21]
   254a0:	mov	w1, w24
   254a4:	mov	x0, x20
   254a8:	bl	25214 <__sanitizer_set_death_callback@@Base+0x21a4>
   254ac:	str	x0, [x21, #8]
   254b0:	mov	w0, w19
   254b4:	ldp	x19, x20, [sp, #32]
   254b8:	ldp	x21, x22, [sp, #48]
   254bc:	ldp	x23, x24, [sp, #64]
   254c0:	ldp	x25, x26, [sp, #80]
   254c4:	ldr	x27, [sp, #96]
   254c8:	ldp	x29, x30, [sp, #16]
   254cc:	add	sp, sp, #0x70
   254d0:	ret
   254d4:	mov	w0, #0xa                   	// #10
   254d8:	str	w0, [x21]
   254dc:	mov	x0, x20
   254e0:	bl	250dc <__sanitizer_set_death_callback@@Base+0x206c>
   254e4:	and	x1, x0, #0xffff
   254e8:	mov	x0, x20
   254ec:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   254f0:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   254f4:	mov	w0, #0xa                   	// #10
   254f8:	str	w0, [x21]
   254fc:	mov	x0, x20
   25500:	bl	24f68 <__sanitizer_set_death_callback@@Base+0x1ef8>
   25504:	mov	w1, w0
   25508:	mov	x0, x20
   2550c:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   25510:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25514:	mov	w0, #0x2                   	// #2
   25518:	str	w0, [x21]
   2551c:	mov	x0, x20
   25520:	bl	250dc <__sanitizer_set_death_callback@@Base+0x206c>
   25524:	and	x0, x0, #0xffff
   25528:	str	x0, [x21, #8]
   2552c:	mov	w0, #0x1                   	// #1
   25530:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25534:	mov	w0, #0x2                   	// #2
   25538:	str	w0, [x21]
   2553c:	mov	x0, x20
   25540:	bl	24f68 <__sanitizer_set_death_callback@@Base+0x1ef8>
   25544:	mov	w0, w0
   25548:	str	x0, [x21, #8]
   2554c:	mov	w0, #0x1                   	// #1
   25550:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25554:	mov	w0, #0x2                   	// #2
   25558:	str	w0, [x21]
   2555c:	mov	x0, x20
   25560:	bl	24fe8 <__sanitizer_set_death_callback@@Base+0x1f78>
   25564:	str	x0, [x21, #8]
   25568:	mov	w0, #0x1                   	// #1
   2556c:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25570:	mov	w0, #0x4                   	// #4
   25574:	str	w0, [x21]
   25578:	mov	x0, x20
   2557c:	bl	2534c <__sanitizer_set_death_callback@@Base+0x22dc>
   25580:	str	x0, [x21, #8]
   25584:	cmp	x0, #0x0
   25588:	cset	w0, ne  // ne = any
   2558c:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25590:	mov	w0, #0xa                   	// #10
   25594:	str	w0, [x21]
   25598:	mov	x0, x20
   2559c:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   255a0:	mov	x1, x0
   255a4:	mov	x0, x20
   255a8:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   255ac:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   255b0:	mov	w0, #0xa                   	// #10
   255b4:	str	w0, [x21]
   255b8:	mov	x0, x20
   255bc:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   255c0:	and	x1, x0, #0xff
   255c4:	mov	x0, x20
   255c8:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   255cc:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   255d0:	mov	w0, #0x2                   	// #2
   255d4:	str	w0, [x21]
   255d8:	mov	x0, x20
   255dc:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   255e0:	and	x0, x0, #0xff
   255e4:	str	x0, [x21, #8]
   255e8:	mov	w0, #0x1                   	// #1
   255ec:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   255f0:	mov	w0, #0x2                   	// #2
   255f4:	str	w0, [x21]
   255f8:	mov	x0, x20
   255fc:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   25600:	and	x0, x0, #0xff
   25604:	str	x0, [x21, #8]
   25608:	mov	w0, #0x1                   	// #1
   2560c:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25610:	mov	w0, #0x3                   	// #3
   25614:	str	w0, [x21]
   25618:	mov	x0, x20
   2561c:	bl	25284 <__sanitizer_set_death_callback@@Base+0x2214>
   25620:	str	x0, [x21, #8]
   25624:	mov	w0, #0x1                   	// #1
   25628:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   2562c:	mov	w1, w22
   25630:	mov	x0, x20
   25634:	bl	250b8 <__sanitizer_set_death_callback@@Base+0x2048>
   25638:	cmp	x26, x0
   2563c:	b.ls	25658 <__sanitizer_set_death_callback@@Base+0x25e8>  // b.plast
   25640:	mov	w1, #0x4                   	// #4
   25644:	str	w1, [x21]
   25648:	add	x0, x27, x0
   2564c:	str	x0, [x21, #8]
   25650:	mov	w0, #0x1                   	// #1
   25654:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25658:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2565c:	add	x1, x1, #0x218
   25660:	mov	x0, x20
   25664:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   25668:	mov	w0, #0x0                   	// #0
   2566c:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25670:	mov	w0, #0x2                   	// #2
   25674:	str	w0, [x21]
   25678:	mov	x0, x20
   2567c:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   25680:	str	x0, [x21, #8]
   25684:	mov	w0, #0x1                   	// #1
   25688:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   2568c:	mov	w0, #0x6                   	// #6
   25690:	str	w0, [x21]
   25694:	cmp	w25, #0x2
   25698:	b.eq	256b4 <__sanitizer_set_death_callback@@Base+0x2644>  // b.none
   2569c:	mov	w1, w22
   256a0:	mov	x0, x20
   256a4:	bl	250b8 <__sanitizer_set_death_callback@@Base+0x2048>
   256a8:	str	x0, [x21, #8]
   256ac:	mov	w0, #0x1                   	// #1
   256b0:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   256b4:	mov	w1, w24
   256b8:	mov	x0, x20
   256bc:	bl	25214 <__sanitizer_set_death_callback@@Base+0x21a4>
   256c0:	str	x0, [x21, #8]
   256c4:	mov	w0, #0x1                   	// #1
   256c8:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   256cc:	mov	w0, #0x5                   	// #5
   256d0:	str	w0, [x21]
   256d4:	mov	x0, x20
   256d8:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   256dc:	and	x0, x0, #0xff
   256e0:	str	x0, [x21, #8]
   256e4:	mov	w0, #0x1                   	// #1
   256e8:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   256ec:	mov	w0, #0x5                   	// #5
   256f0:	str	w0, [x21]
   256f4:	mov	x0, x20
   256f8:	bl	250dc <__sanitizer_set_death_callback@@Base+0x206c>
   256fc:	and	x0, x0, #0xffff
   25700:	str	x0, [x21, #8]
   25704:	mov	w0, #0x1                   	// #1
   25708:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   2570c:	mov	w0, #0x5                   	// #5
   25710:	str	w0, [x21]
   25714:	mov	x0, x20
   25718:	bl	24f68 <__sanitizer_set_death_callback@@Base+0x1ef8>
   2571c:	mov	w0, w0
   25720:	str	x0, [x21, #8]
   25724:	mov	w0, #0x1                   	// #1
   25728:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   2572c:	mov	w0, #0x5                   	// #5
   25730:	str	w0, [x21]
   25734:	mov	x0, x20
   25738:	bl	24fe8 <__sanitizer_set_death_callback@@Base+0x1f78>
   2573c:	str	x0, [x21, #8]
   25740:	mov	w0, #0x1                   	// #1
   25744:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25748:	mov	w0, #0x5                   	// #5
   2574c:	str	w0, [x21]
   25750:	mov	x0, x20
   25754:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   25758:	str	x0, [x21, #8]
   2575c:	mov	w0, #0x1                   	// #1
   25760:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25764:	mov	x0, x20
   25768:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   2576c:	str	x21, [sp]
   25770:	mov	x7, x23
   25774:	mov	x6, x26
   25778:	mov	x5, x27
   2577c:	mov	w4, w24
   25780:	mov	w3, w25
   25784:	mov	w2, w22
   25788:	mov	x1, x20
   2578c:	bl	2538c <__sanitizer_set_death_callback@@Base+0x231c>
   25790:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25794:	mov	w0, #0x8                   	// #8
   25798:	str	w0, [x21]
   2579c:	mov	w1, w22
   257a0:	mov	x0, x20
   257a4:	bl	250b8 <__sanitizer_set_death_callback@@Base+0x2048>
   257a8:	str	x0, [x21, #8]
   257ac:	mov	w0, #0x1                   	// #1
   257b0:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   257b4:	mov	w0, #0xb                   	// #11
   257b8:	str	w0, [x21]
   257bc:	mov	x0, x20
   257c0:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   257c4:	mov	x1, x0
   257c8:	mov	x0, x20
   257cc:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   257d0:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   257d4:	mov	w0, #0x2                   	// #2
   257d8:	str	w0, [x21]
   257dc:	mov	x0, #0x1                   	// #1
   257e0:	str	x0, [x21, #8]
   257e4:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   257e8:	mov	w0, #0x9                   	// #9
   257ec:	str	w0, [x21]
   257f0:	mov	x0, x20
   257f4:	bl	24fe8 <__sanitizer_set_death_callback@@Base+0x1f78>
   257f8:	str	x0, [x21, #8]
   257fc:	mov	w0, #0x1                   	// #1
   25800:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25804:	mov	w0, #0x8                   	// #8
   25808:	str	w0, [x21]
   2580c:	mov	x0, x20
   25810:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   25814:	str	x0, [x21, #8]
   25818:	mov	w0, #0x1                   	// #1
   2581c:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25820:	mov	w1, w22
   25824:	mov	x0, x20
   25828:	bl	250b8 <__sanitizer_set_death_callback@@Base+0x2048>
   2582c:	str	x0, [x21, #8]
   25830:	cbz	x23, 25844 <__sanitizer_set_death_callback@@Base+0x27d4>
   25834:	mov	w0, #0x7                   	// #7
   25838:	str	w0, [x21]
   2583c:	mov	w0, #0x1                   	// #1
   25840:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25844:	str	wzr, [x21]
   25848:	mov	w0, #0x1                   	// #1
   2584c:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25850:	str	wzr, [x21]
   25854:	mov	w0, #0x1                   	// #1
   25858:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   2585c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   25860:	add	x1, x1, #0x238
   25864:	mov	x0, x20
   25868:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   2586c:	mov	w0, #0x0                   	// #0
   25870:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   25874:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   25878:	add	x1, x1, #0x260
   2587c:	mov	x0, x20
   25880:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   25884:	mov	w0, #0x0                   	// #0
   25888:	b	254b4 <__sanitizer_set_death_callback@@Base+0x2444>
   2588c:	sub	sp, sp, #0xd0
   25890:	stp	x29, x30, [sp, #16]
   25894:	add	x29, sp, #0x10
   25898:	stp	x19, x20, [sp, #32]
   2589c:	stp	x25, x26, [sp, #80]
   258a0:	mov	x20, x0
   258a4:	mov	x26, x3
   258a8:	str	x4, [sp, #120]
   258ac:	ldr	x0, [x1, #16]
   258b0:	cmp	x0, x2
   258b4:	b.hi	25964 <__sanitizer_set_death_callback@@Base+0x28f4>  // b.pmore
   258b8:	mov	x19, x1
   258bc:	sub	x5, x2, x0
   258c0:	ldr	x4, [x1, #8]
   258c4:	cmp	x5, x4
   258c8:	b.cs	25964 <__sanitizer_set_death_callback@@Base+0x28f4>  // b.hs, b.nlast
   258cc:	adrp	x3, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   258d0:	add	x3, x3, #0x2a8
   258d4:	str	x3, [sp, #144]
   258d8:	ldr	x1, [x20, #56]
   258dc:	str	x1, [sp, #152]
   258e0:	ldr	x1, [x19]
   258e4:	add	x1, x1, x5
   258e8:	str	x1, [sp, #160]
   258ec:	add	x0, x0, x4
   258f0:	sub	x0, x0, x2
   258f4:	str	x0, [sp, #168]
   258f8:	ldr	w0, [x20, #120]
   258fc:	str	w0, [sp, #176]
   25900:	str	x26, [sp, #184]
   25904:	ldr	x0, [sp, #120]
   25908:	str	x0, [sp, #192]
   2590c:	str	wzr, [sp, #200]
   25910:	add	x0, sp, #0x90
   25914:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   25918:	mov	x1, x0
   2591c:	cbz	x0, 25994 <__sanitizer_set_death_callback@@Base+0x2924>
   25920:	stp	x23, x24, [sp, #64]
   25924:	ldr	x3, [sp, #120]
   25928:	mov	x2, x26
   2592c:	add	x0, x19, #0x58
   25930:	bl	24b3c <__sanitizer_set_death_callback@@Base+0x1acc>
   25934:	mov	x23, x0
   25938:	cbz	x0, 25ab0 <__sanitizer_set_death_callback@@Base+0x2a40>
   2593c:	stp	x21, x22, [sp, #48]
   25940:	ldr	x0, [x0, #16]
   25944:	mov	x21, #0x0                   	// #0
   25948:	mov	x25, #0x0                   	// #0
   2594c:	cbz	x0, 25aa0 <__sanitizer_set_death_callback@@Base+0x2a30>
   25950:	stp	x27, x28, [sp, #96]
   25954:	add	x27, sp, #0x90
   25958:	add	x24, sp, #0x80
   2595c:	mov	w28, #0x2007                	// #8199
   25960:	b	25a0c <__sanitizer_set_death_callback@@Base+0x299c>
   25964:	mov	w2, #0x0                   	// #0
   25968:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2596c:	add	x1, x1, #0x278
   25970:	ldr	x0, [sp, #120]
   25974:	blr	x26
   25978:	mov	x25, #0x0                   	// #0
   2597c:	mov	x0, x25
   25980:	ldp	x19, x20, [sp, #32]
   25984:	ldp	x25, x26, [sp, #80]
   25988:	ldp	x29, x30, [sp, #16]
   2598c:	add	sp, sp, #0xd0
   25990:	ret
   25994:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   25998:	add	x1, x1, #0x2b8
   2599c:	add	x0, sp, #0x90
   259a0:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   259a4:	mov	x25, #0x0                   	// #0
   259a8:	b	2597c <__sanitizer_set_death_callback@@Base+0x290c>
   259ac:	cmp	w0, #0x6e
   259b0:	b.eq	259bc <__sanitizer_set_death_callback@@Base+0x294c>  // b.none
   259b4:	cmp	w0, w28
   259b8:	b.ne	259fc <__sanitizer_set_death_callback@@Base+0x298c>  // b.any
   259bc:	ldr	w0, [sp, #128]
   259c0:	cmp	w0, #0x4
   259c4:	b.ne	259fc <__sanitizer_set_death_callback@@Base+0x298c>  // b.any
   259c8:	ldr	x25, [sp, #136]
   259cc:	ldp	x21, x22, [sp, #48]
   259d0:	ldp	x23, x24, [sp, #64]
   259d4:	ldp	x27, x28, [sp, #96]
   259d8:	b	2597c <__sanitizer_set_death_callback@@Base+0x290c>
   259dc:	ldr	x5, [sp, #120]
   259e0:	mov	x4, x26
   259e4:	mov	x3, x24
   259e8:	mov	x1, x19
   259ec:	mov	x0, x20
   259f0:	bl	25abc <__sanitizer_set_death_callback@@Base+0x2a4c>
   259f4:	cmp	x0, #0x0
   259f8:	csel	x25, x25, x0, eq  // eq = none
   259fc:	add	x21, x21, #0x1
   25a00:	ldr	x0, [x23, #16]
   25a04:	cmp	x0, x21
   25a08:	b.ls	25a7c <__sanitizer_set_death_callback@@Base+0x2a0c>  // b.plast
   25a0c:	lsl	x22, x21, #3
   25a10:	ldr	x0, [x23, #24]
   25a14:	add	x0, x0, x22
   25a18:	ldr	w0, [x0, #4]
   25a1c:	str	x24, [sp]
   25a20:	ldr	x7, [x20, #8]
   25a24:	ldr	x6, [x20, #112]
   25a28:	ldr	x5, [x20, #104]
   25a2c:	ldr	w4, [x19, #48]
   25a30:	ldr	w3, [x19, #40]
   25a34:	ldr	w2, [x19, #44]
   25a38:	mov	x1, x27
   25a3c:	bl	2538c <__sanitizer_set_death_callback@@Base+0x231c>
   25a40:	cbz	w0, 25a8c <__sanitizer_set_death_callback@@Base+0x2a1c>
   25a44:	ldr	x0, [x23, #24]
   25a48:	add	x2, x0, x22
   25a4c:	ldr	w0, [x0, x22]
   25a50:	cmp	w0, #0x47
   25a54:	b.eq	259dc <__sanitizer_set_death_callback@@Base+0x296c>  // b.none
   25a58:	b.hi	259ac <__sanitizer_set_death_callback@@Base+0x293c>  // b.pmore
   25a5c:	cmp	w0, #0x3
   25a60:	b.ne	259fc <__sanitizer_set_death_callback@@Base+0x298c>  // b.any
   25a64:	cbnz	x25, 259fc <__sanitizer_set_death_callback@@Base+0x298c>
   25a68:	ldr	w0, [sp, #128]
   25a6c:	cmp	w0, #0x4
   25a70:	ldr	x0, [sp, #136]
   25a74:	csel	x25, x0, x25, eq  // eq = none
   25a78:	b	259fc <__sanitizer_set_death_callback@@Base+0x298c>
   25a7c:	ldp	x21, x22, [sp, #48]
   25a80:	ldp	x23, x24, [sp, #64]
   25a84:	ldp	x27, x28, [sp, #96]
   25a88:	b	2597c <__sanitizer_set_death_callback@@Base+0x290c>
   25a8c:	mov	x25, #0x0                   	// #0
   25a90:	ldp	x21, x22, [sp, #48]
   25a94:	ldp	x23, x24, [sp, #64]
   25a98:	ldp	x27, x28, [sp, #96]
   25a9c:	b	2597c <__sanitizer_set_death_callback@@Base+0x290c>
   25aa0:	mov	x25, #0x0                   	// #0
   25aa4:	ldp	x21, x22, [sp, #48]
   25aa8:	ldp	x23, x24, [sp, #64]
   25aac:	b	2597c <__sanitizer_set_death_callback@@Base+0x290c>
   25ab0:	mov	x25, x0
   25ab4:	ldp	x23, x24, [sp, #64]
   25ab8:	b	2597c <__sanitizer_set_death_callback@@Base+0x290c>
   25abc:	stp	x29, x30, [sp, #-48]!
   25ac0:	mov	x29, sp
   25ac4:	stp	x19, x20, [sp, #16]
   25ac8:	stp	x21, x22, [sp, #32]
   25acc:	mov	x19, x0
   25ad0:	mov	x6, x3
   25ad4:	mov	x20, x4
   25ad8:	mov	x21, x5
   25adc:	ldr	w3, [x2]
   25ae0:	cmp	w3, #0x31
   25ae4:	b.eq	25af4 <__sanitizer_set_death_callback@@Base+0x2a84>  // b.none
   25ae8:	mov	x0, #0x0                   	// #0
   25aec:	cmp	w3, #0x47
   25af0:	b.ne	25b24 <__sanitizer_set_death_callback@@Base+0x2ab4>  // b.any
   25af4:	ldr	w0, [x2, #4]
   25af8:	cmp	w0, #0x20
   25afc:	b.eq	25bc0 <__sanitizer_set_death_callback@@Base+0x2b50>  // b.none
   25b00:	ldr	w2, [x6]
   25b04:	cmp	w2, #0x6
   25b08:	b.eq	25b34 <__sanitizer_set_death_callback@@Base+0x2ac4>  // b.none
   25b0c:	cmp	w2, #0x2
   25b10:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   25b14:	b.eq	25b6c <__sanitizer_set_death_callback@@Base+0x2afc>  // b.none
   25b18:	mov	x0, #0x0                   	// #0
   25b1c:	cmp	w2, #0x7
   25b20:	b.eq	25b84 <__sanitizer_set_death_callback@@Base+0x2b14>  // b.none
   25b24:	ldp	x19, x20, [sp, #16]
   25b28:	ldp	x21, x22, [sp, #32]
   25b2c:	ldp	x29, x30, [sp], #48
   25b30:	ret
   25b34:	ldr	x22, [x6, #8]
   25b38:	mov	x2, x22
   25b3c:	ldr	x1, [x19, #48]
   25b40:	ldr	x0, [x19, #40]
   25b44:	bl	248e0 <__sanitizer_set_death_callback@@Base+0x1870>
   25b48:	cbz	x0, 25b24 <__sanitizer_set_death_callback@@Base+0x2ab4>
   25b4c:	ldr	x2, [x0, #24]
   25b50:	mov	x4, x21
   25b54:	mov	x3, x20
   25b58:	sub	x2, x22, x2
   25b5c:	mov	x1, x0
   25b60:	mov	x0, x19
   25b64:	bl	2588c <__sanitizer_set_death_callback@@Base+0x281c>
   25b68:	b	25b24 <__sanitizer_set_death_callback@@Base+0x2ab4>
   25b6c:	mov	x4, x21
   25b70:	mov	x3, x20
   25b74:	ldr	x2, [x6, #8]
   25b78:	mov	x0, x19
   25b7c:	bl	2588c <__sanitizer_set_death_callback@@Base+0x281c>
   25b80:	b	25b24 <__sanitizer_set_death_callback@@Base+0x2ab4>
   25b84:	ldr	x19, [x19, #8]
   25b88:	ldr	x22, [x6, #8]
   25b8c:	mov	x2, x22
   25b90:	ldr	x1, [x19, #48]
   25b94:	ldr	x0, [x19, #40]
   25b98:	bl	248e0 <__sanitizer_set_death_callback@@Base+0x1870>
   25b9c:	cbz	x0, 25b24 <__sanitizer_set_death_callback@@Base+0x2ab4>
   25ba0:	ldr	x2, [x0, #24]
   25ba4:	mov	x4, x21
   25ba8:	mov	x3, x20
   25bac:	sub	x2, x22, x2
   25bb0:	mov	x1, x0
   25bb4:	mov	x0, x19
   25bb8:	bl	2588c <__sanitizer_set_death_callback@@Base+0x281c>
   25bbc:	b	25b24 <__sanitizer_set_death_callback@@Base+0x2ab4>
   25bc0:	mov	x0, #0x0                   	// #0
   25bc4:	b	25b24 <__sanitizer_set_death_callback@@Base+0x2ab4>
   25bc8:	sub	sp, sp, #0x170
   25bcc:	stp	x29, x30, [sp, #48]
   25bd0:	add	x29, sp, #0x30
   25bd4:	stp	x19, x20, [sp, #64]
   25bd8:	stp	x21, x22, [sp, #80]
   25bdc:	stp	x23, x24, [sp, #96]
   25be0:	stp	x25, x26, [sp, #112]
   25be4:	stp	x27, x28, [sp, #128]
   25be8:	str	x0, [sp, #192]
   25bec:	str	x1, [sp, #200]
   25bf0:	mov	x24, x2
   25bf4:	str	x5, [sp, #224]
   25bf8:	str	x6, [sp, #184]
   25bfc:	str	w7, [sp, #236]
   25c00:	ldr	x22, [sp, #392]
   25c04:	add	x0, sp, #0x130
   25c08:	str	x0, [sp, #216]
   25c0c:	mov	x25, x0
   25c10:	add	x0, sp, #0xf0
   25c14:	str	x0, [sp, #208]
   25c18:	str	x25, [sp, #176]
   25c1c:	mov	x28, x4
   25c20:	mov	x26, x3
   25c24:	ldr	x27, [sp, #368]
   25c28:	ldr	x0, [x24, #24]
   25c2c:	cbz	x0, 26024 <__sanitizer_set_death_callback@@Base+0x2fb4>
   25c30:	mov	x0, x24
   25c34:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   25c38:	mov	x1, x0
   25c3c:	cbz	x0, 2602c <__sanitizer_set_death_callback@@Base+0x2fbc>
   25c40:	ldr	x3, [sp, #384]
   25c44:	ldr	x2, [sp, #376]
   25c48:	add	x0, x22, #0x58
   25c4c:	bl	24b3c <__sanitizer_set_death_callback@@Base+0x1acc>
   25c50:	mov	x20, x0
   25c54:	cbz	x0, 26034 <__sanitizer_set_death_callback@@Base+0x2fc4>
   25c58:	ldr	x0, [sp, #408]
   25c5c:	cbz	x0, 25c6c <__sanitizer_set_death_callback@@Base+0x2bfc>
   25c60:	ldr	w0, [x20, #8]
   25c64:	ldr	x1, [sp, #408]
   25c68:	str	w0, [x1]
   25c6c:	ldr	x0, [x20, #16]
   25c70:	cbz	x0, 25e9c <__sanitizer_set_death_callback@@Base+0x2e2c>
   25c74:	mov	x21, #0x0                   	// #0
   25c78:	str	wzr, [sp, #168]
   25c7c:	str	xzr, [sp, #160]
   25c80:	str	wzr, [sp, #232]
   25c84:	mov	w23, #0x0                   	// #0
   25c88:	str	xzr, [sp, #152]
   25c8c:	str	wzr, [sp, #172]
   25c90:	str	xzr, [sp, #144]
   25c94:	b	25d54 <__sanitizer_set_death_callback@@Base+0x2ce4>
   25c98:	cmp	w0, #0x3
   25c9c:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25ca0:	ldr	w0, [x20, #8]
   25ca4:	cmp	w0, #0x11
   25ca8:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25cac:	ldr	w0, [sp, #304]
   25cb0:	cmp	w0, #0x4
   25cb4:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25cb8:	ldr	x0, [sp, #312]
   25cbc:	str	x0, [x22, #64]
   25cc0:	b	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>
   25cc4:	cmp	w0, #0x1b
   25cc8:	b.eq	25dec <__sanitizer_set_death_callback@@Base+0x2d7c>  // b.none
   25ccc:	cmp	w0, #0x55
   25cd0:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25cd4:	ldr	w0, [sp, #304]
   25cd8:	cmp	w0, #0x2
   25cdc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   25ce0:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25ce4:	ldr	x0, [sp, #312]
   25ce8:	str	x0, [sp, #160]
   25cec:	mov	w0, #0x1                   	// #1
   25cf0:	str	w0, [sp, #168]
   25cf4:	b	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>
   25cf8:	ldr	w0, [sp, #304]
   25cfc:	cmp	w0, #0x1
   25d00:	b.eq	25d24 <__sanitizer_set_death_callback@@Base+0x2cb4>  // b.none
   25d04:	cmp	w0, #0x2
   25d08:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25d0c:	ldr	x0, [sp, #312]
   25d10:	str	x0, [sp, #152]
   25d14:	mov	w0, #0x1                   	// #1
   25d18:	str	w0, [sp, #232]
   25d1c:	mov	w23, w0
   25d20:	b	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>
   25d24:	ldr	x0, [sp, #312]
   25d28:	str	x0, [sp, #152]
   25d2c:	mov	w0, #0x1                   	// #1
   25d30:	mov	w23, w0
   25d34:	b	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>
   25d38:	ldr	w0, [x20, #8]
   25d3c:	cmp	w0, #0x11
   25d40:	b.eq	25dd0 <__sanitizer_set_death_callback@@Base+0x2d60>  // b.none
   25d44:	add	x21, x21, #0x1
   25d48:	ldr	x0, [x20, #16]
   25d4c:	cmp	x0, x21
   25d50:	b.ls	25e10 <__sanitizer_set_death_callback@@Base+0x2da0>  // b.plast
   25d54:	lsl	x19, x21, #3
   25d58:	ldr	x0, [x20, #24]
   25d5c:	add	x0, x0, x19
   25d60:	ldr	w0, [x0, #4]
   25d64:	str	x25, [sp]
   25d68:	mov	x7, x27
   25d6c:	mov	x6, x28
   25d70:	mov	x5, x26
   25d74:	ldr	w4, [x22, #48]
   25d78:	ldr	w3, [x22, #40]
   25d7c:	ldr	w2, [x22, #44]
   25d80:	mov	x1, x24
   25d84:	bl	2538c <__sanitizer_set_death_callback@@Base+0x231c>
   25d88:	cbz	w0, 26044 <__sanitizer_set_death_callback@@Base+0x2fd4>
   25d8c:	ldr	x0, [x20, #24]
   25d90:	ldr	w0, [x0, x19]
   25d94:	cmp	w0, #0x12
   25d98:	b.eq	25cf8 <__sanitizer_set_death_callback@@Base+0x2c88>  // b.none
   25d9c:	b.hi	25cc4 <__sanitizer_set_death_callback@@Base+0x2c54>  // b.pmore
   25da0:	cmp	w0, #0x10
   25da4:	b.eq	25d38 <__sanitizer_set_death_callback@@Base+0x2cc8>  // b.none
   25da8:	cmp	w0, #0x11
   25dac:	b.ne	25c98 <__sanitizer_set_death_callback@@Base+0x2c28>  // b.any
   25db0:	ldr	w0, [sp, #304]
   25db4:	cmp	w0, #0x1
   25db8:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25dbc:	ldr	x0, [sp, #312]
   25dc0:	str	x0, [sp, #144]
   25dc4:	mov	w0, #0x1                   	// #1
   25dc8:	str	w0, [sp, #172]
   25dcc:	b	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>
   25dd0:	ldr	w0, [sp, #304]
   25dd4:	cmp	w0, #0x2
   25dd8:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   25ddc:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25de0:	ldr	x0, [sp, #312]
   25de4:	str	x0, [x22, #56]
   25de8:	b	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>
   25dec:	ldr	w0, [x20, #8]
   25df0:	cmp	w0, #0x11
   25df4:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25df8:	ldr	w0, [sp, #304]
   25dfc:	cmp	w0, #0x4
   25e00:	b.ne	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>  // b.any
   25e04:	ldr	x0, [sp, #312]
   25e08:	str	x0, [x22, #72]
   25e0c:	b	25d44 <__sanitizer_set_death_callback@@Base+0x2cd4>
   25e10:	ldr	w0, [x20, #8]
   25e14:	cmp	w0, #0x2e
   25e18:	ccmp	w0, #0x11, #0x4, ne  // ne = any
   25e1c:	b.ne	25e9c <__sanitizer_set_death_callback@@Base+0x2e2c>  // b.any
   25e20:	ldr	w0, [sp, #168]
   25e24:	cbnz	w0, 25ef8 <__sanitizer_set_death_callback@@Base+0x2e88>
   25e28:	ldr	w0, [sp, #172]
   25e2c:	cmp	w0, #0x0
   25e30:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   25e34:	b.eq	25e9c <__sanitizer_set_death_callback@@Base+0x2e2c>  // b.none
   25e38:	ldr	x1, [sp, #152]
   25e3c:	ldr	x2, [sp, #144]
   25e40:	add	x0, x1, x2
   25e44:	ldr	w3, [sp, #232]
   25e48:	cmp	w3, #0x0
   25e4c:	csel	x0, x0, x1, ne  // ne = any
   25e50:	str	x2, [sp, #304]
   25e54:	str	x0, [sp, #312]
   25e58:	str	x22, [sp, #320]
   25e5c:	ldr	x0, [sp, #216]
   25e60:	ldp	x0, x1, [x0]
   25e64:	ldr	x2, [sp, #208]
   25e68:	stp	x0, x1, [x2]
   25e6c:	str	x22, [x2, #16]
   25e70:	ldr	x5, [sp, #400]
   25e74:	ldr	x4, [sp, #384]
   25e78:	ldr	x3, [sp, #376]
   25e7c:	ldr	x1, [sp, #200]
   25e80:	ldr	x0, [sp, #192]
   25e84:	bl	24dc8 <__sanitizer_set_death_callback@@Base+0x1d58>
   25e88:	mov	w19, w0
   25e8c:	cbz	w0, 26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   25e90:	ldr	w0, [x20, #8]
   25e94:	cmp	w0, #0x11
   25e98:	b.eq	2603c <__sanitizer_set_death_callback@@Base+0x2fcc>  // b.none
   25e9c:	ldr	w0, [x20, #12]
   25ea0:	cbz	w0, 25c28 <__sanitizer_set_death_callback@@Base+0x2bb8>
   25ea4:	str	xzr, [sp, #40]
   25ea8:	ldr	x0, [sp, #400]
   25eac:	str	x0, [sp, #32]
   25eb0:	str	x22, [sp, #24]
   25eb4:	ldr	x0, [sp, #384]
   25eb8:	str	x0, [sp, #16]
   25ebc:	ldr	x0, [sp, #376]
   25ec0:	str	x0, [sp, #8]
   25ec4:	str	x27, [sp]
   25ec8:	ldr	w7, [sp, #236]
   25ecc:	ldr	x6, [sp, #184]
   25ed0:	ldr	x5, [sp, #224]
   25ed4:	mov	x4, x28
   25ed8:	mov	x3, x26
   25edc:	mov	x2, x24
   25ee0:	ldr	x1, [sp, #200]
   25ee4:	ldr	x0, [sp, #192]
   25ee8:	bl	25bc8 <__sanitizer_set_death_callback@@Base+0x2b58>
   25eec:	mov	w19, w0
   25ef0:	cbnz	w0, 25c28 <__sanitizer_set_death_callback@@Base+0x2bb8>
   25ef4:	b	26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   25ef8:	ldr	x0, [sp, #160]
   25efc:	ldr	x1, [sp, #184]
   25f00:	cmp	x0, x1
   25f04:	b.cs	25f54 <__sanitizer_set_death_callback@@Base+0x2ee4>  // b.hs, b.nlast
   25f08:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   25f0c:	add	x0, x0, #0x308
   25f10:	str	x0, [sp, #304]
   25f14:	ldr	x0, [sp, #224]
   25f18:	str	x0, [sp, #312]
   25f1c:	ldr	x1, [sp, #160]
   25f20:	add	x0, x0, x1
   25f24:	str	x0, [sp, #320]
   25f28:	ldr	x0, [sp, #184]
   25f2c:	sub	x0, x0, x1
   25f30:	str	x0, [sp, #328]
   25f34:	ldr	w0, [sp, #236]
   25f38:	str	w0, [sp, #336]
   25f3c:	ldr	x0, [sp, #376]
   25f40:	str	x0, [sp, #344]
   25f44:	ldr	x0, [sp, #384]
   25f48:	str	x0, [sp, #352]
   25f4c:	str	wzr, [sp, #360]
   25f50:	b	25f78 <__sanitizer_set_death_callback@@Base+0x2f08>
   25f54:	mov	w2, #0x0                   	// #0
   25f58:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   25f5c:	add	x1, x1, #0x2e8
   25f60:	ldr	x0, [sp, #384]
   25f64:	ldr	x3, [sp, #376]
   25f68:	blr	x3
   25f6c:	mov	w19, #0x0                   	// #0
   25f70:	b	26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   25f74:	str	x23, [sp, #144]
   25f78:	ldr	w19, [sp, #360]
   25f7c:	cbnz	w19, 25f6c <__sanitizer_set_death_callback@@Base+0x2efc>
   25f80:	ldr	w1, [x22, #48]
   25f84:	ldr	x23, [sp, #176]
   25f88:	mov	x0, x23
   25f8c:	bl	25214 <__sanitizer_set_death_callback@@Base+0x21a4>
   25f90:	mov	x21, x0
   25f94:	ldr	w1, [x22, #48]
   25f98:	mov	x0, x23
   25f9c:	bl	25214 <__sanitizer_set_death_callback@@Base+0x21a4>
   25fa0:	mov	x23, x0
   25fa4:	orr	x0, x21, x0
   25fa8:	cbz	x0, 26008 <__sanitizer_set_death_callback@@Base+0x2f98>
   25fac:	ldr	w1, [x22, #48]
   25fb0:	mov	x0, x21
   25fb4:	bl	24874 <__sanitizer_set_death_callback@@Base+0x1804>
   25fb8:	cbnz	w0, 25f74 <__sanitizer_set_death_callback@@Base+0x2f04>
   25fbc:	ldr	x0, [sp, #144]
   25fc0:	add	x21, x21, x0
   25fc4:	str	x21, [sp, #280]
   25fc8:	add	x23, x23, x0
   25fcc:	str	x23, [sp, #288]
   25fd0:	str	x22, [sp, #296]
   25fd4:	add	x0, sp, #0x200
   25fd8:	ldp	x0, x1, [x0, #-232]
   25fdc:	ldr	x2, [sp, #208]
   25fe0:	stp	x0, x1, [x2]
   25fe4:	str	x22, [x2, #16]
   25fe8:	ldr	x5, [sp, #400]
   25fec:	ldr	x4, [sp, #384]
   25ff0:	ldr	x3, [sp, #376]
   25ff4:	ldr	x1, [sp, #200]
   25ff8:	ldr	x0, [sp, #192]
   25ffc:	bl	24dc8 <__sanitizer_set_death_callback@@Base+0x1d58>
   26000:	cbnz	w0, 25f78 <__sanitizer_set_death_callback@@Base+0x2f08>
   26004:	b	25f6c <__sanitizer_set_death_callback@@Base+0x2efc>
   26008:	ldr	w0, [sp, #360]
   2600c:	cbnz	w0, 26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   26010:	ldr	w0, [x20, #8]
   26014:	cmp	w0, #0x11
   26018:	b.ne	25e9c <__sanitizer_set_death_callback@@Base+0x2e2c>  // b.any
   2601c:	ldr	w19, [sp, #168]
   26020:	b	26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   26024:	mov	w19, #0x1                   	// #1
   26028:	b	26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   2602c:	mov	w19, #0x1                   	// #1
   26030:	b	26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   26034:	mov	w19, #0x0                   	// #0
   26038:	b	26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   2603c:	mov	w19, #0x1                   	// #1
   26040:	b	26048 <__sanitizer_set_death_callback@@Base+0x2fd8>
   26044:	mov	w19, w0
   26048:	mov	w0, w19
   2604c:	ldp	x19, x20, [sp, #64]
   26050:	ldp	x21, x22, [sp, #80]
   26054:	ldp	x23, x24, [sp, #96]
   26058:	ldp	x25, x26, [sp, #112]
   2605c:	ldp	x27, x28, [sp, #128]
   26060:	ldp	x29, x30, [sp, #48]
   26064:	add	sp, sp, #0x170
   26068:	ret
   2606c:	ldr	x4, [x0]
   26070:	ldr	x3, [x1]
   26074:	cmp	x4, x3
   26078:	b.cc	260c0 <__sanitizer_set_death_callback@@Base+0x3050>  // b.lo, b.ul, b.last
   2607c:	mov	x2, x0
   26080:	mov	w0, #0x1                   	// #1
   26084:	b.hi	260d0 <__sanitizer_set_death_callback@@Base+0x3060>  // b.pmore
   26088:	ldr	x4, [x2, #8]
   2608c:	ldr	x3, [x1, #8]
   26090:	cmp	x4, x3
   26094:	b.cc	260d0 <__sanitizer_set_death_callback@@Base+0x3060>  // b.lo, b.ul, b.last
   26098:	b.hi	260c8 <__sanitizer_set_death_callback@@Base+0x3058>  // b.pmore
   2609c:	stp	x29, x30, [sp, #-16]!
   260a0:	mov	x29, sp
   260a4:	ldr	x1, [x1, #16]
   260a8:	ldr	x0, [x2, #16]
   260ac:	ldr	x1, [x1]
   260b0:	ldr	x0, [x0]
   260b4:	bl	67f0 <__asan_internal_strcmp@plt>
   260b8:	ldp	x29, x30, [sp], #16
   260bc:	ret
   260c0:	mov	w0, #0xffffffff            	// #-1
   260c4:	ret
   260c8:	mov	w0, #0xffffffff            	// #-1
   260cc:	ret
   260d0:	ret
   260d4:	sub	sp, sp, #0x120
   260d8:	stp	x29, x30, [sp, #16]
   260dc:	add	x29, sp, #0x10
   260e0:	stp	x19, x20, [sp, #32]
   260e4:	str	x0, [sp, #176]
   260e8:	str	x3, [sp, #184]
   260ec:	str	x5, [sp, #208]
   260f0:	str	x6, [sp, #112]
   260f4:	str	x7, [sp, #120]
   260f8:	ldr	x0, [x4, #24]
   260fc:	cbz	x0, 26790 <__sanitizer_set_death_callback@@Base+0x3720>
   26100:	stp	x21, x22, [sp, #48]
   26104:	stp	x23, x24, [sp, #64]
   26108:	stp	x25, x26, [sp, #80]
   2610c:	stp	x27, x28, [sp, #96]
   26110:	mov	x23, x1
   26114:	mov	x21, x2
   26118:	mov	x27, x4
   2611c:	add	x0, x2, #0x58
   26120:	str	x0, [sp, #136]
   26124:	add	x28, sp, #0xe0
   26128:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   2612c:	add	x0, x0, #0x640
   26130:	str	x0, [sp, #216]
   26134:	mov	x0, x27
   26138:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   2613c:	mov	x1, x0
   26140:	cbz	x0, 26798 <__sanitizer_set_death_callback@@Base+0x3728>
   26144:	ldr	x3, [sp, #120]
   26148:	ldr	x2, [sp, #112]
   2614c:	ldr	x0, [sp, #136]
   26150:	bl	24b3c <__sanitizer_set_death_callback@@Base+0x1acc>
   26154:	mov	x19, x0
   26158:	cbz	x0, 267b0 <__sanitizer_set_death_callback@@Base+0x3740>
   2615c:	ldr	w0, [x0, #8]
   26160:	cmp	w0, #0x2e
   26164:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   26168:	cset	w25, eq  // eq = none
   2616c:	cmp	w0, #0x1d
   26170:	csinc	w25, w25, wzr, ne  // ne = any
   26174:	b.eq	261cc <__sanitizer_set_death_callback@@Base+0x315c>  // b.none
   26178:	cbnz	w25, 261c0 <__sanitizer_set_death_callback@@Base+0x3150>
   2617c:	ldr	x0, [sp, #288]
   26180:	str	x0, [sp, #192]
   26184:	mov	x22, #0x0                   	// #0
   26188:	ldr	x26, [x19, #16]
   2618c:	cbz	x26, 26480 <__sanitizer_set_death_callback@@Base+0x3410>
   26190:	str	wzr, [sp, #128]
   26194:	str	wzr, [sp, #148]
   26198:	str	xzr, [sp, #160]
   2619c:	str	wzr, [sp, #200]
   261a0:	str	wzr, [sp, #168]
   261a4:	str	xzr, [sp, #152]
   261a8:	str	wzr, [sp, #172]
   261ac:	mov	x26, #0x0                   	// #0
   261b0:	mov	x20, #0x0                   	// #0
   261b4:	mov	w0, #0x1                   	// #1
   261b8:	str	w0, [sp, #204]
   261bc:	b	2628c <__sanitizer_set_death_callback@@Base+0x321c>
   261c0:	ldr	x0, [sp, #288]
   261c4:	str	x0, [sp, #192]
   261c8:	b	261d4 <__sanitizer_set_death_callback@@Base+0x3164>
   261cc:	ldr	x0, [sp, #296]
   261d0:	str	x0, [sp, #192]
   261d4:	ldr	x3, [sp, #120]
   261d8:	ldr	x2, [sp, #112]
   261dc:	mov	x1, #0x28                  	// #40
   261e0:	ldr	x0, [sp, #176]
   261e4:	bl	65b0 <__asan_backtrace_alloc@plt>
   261e8:	mov	x22, x0
   261ec:	cbz	x0, 267c8 <__sanitizer_set_death_callback@@Base+0x3758>
   261f0:	mov	x2, #0x28                  	// #40
   261f4:	mov	w1, #0x0                   	// #0
   261f8:	bl	6530 <__asan_internal_memset@plt>
   261fc:	b	26188 <__sanitizer_set_death_callback@@Base+0x3118>
   26200:	ldr	x0, [x19, #24]
   26204:	ldr	w0, [x0, x24]
   26208:	cmp	w0, #0x11
   2620c:	b.ne	262d0 <__sanitizer_set_death_callback@@Base+0x3260>  // b.any
   26210:	ldr	w0, [sp, #224]
   26214:	cmp	w0, #0x1
   26218:	b.eq	26230 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.none
   2621c:	cbz	w25, 2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26220:	ldr	w0, [sp, #224]
   26224:	cmp	w0, #0x1
   26228:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   2622c:	b	2623c <__sanitizer_set_death_callback@@Base+0x31cc>
   26230:	ldr	x0, [sp, #232]
   26234:	str	x0, [sp, #184]
   26238:	cbz	w25, 2627c <__sanitizer_set_death_callback@@Base+0x320c>
   2623c:	ldr	x26, [sp, #232]
   26240:	mov	w0, #0x1                   	// #1
   26244:	str	w0, [sp, #172]
   26248:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   2624c:	cmp	w0, #0x3
   26250:	b.ne	26274 <__sanitizer_set_death_callback@@Base+0x3204>  // b.any
   26254:	ldr	x0, [x22]
   26258:	cbnz	x0, 2627c <__sanitizer_set_death_callback@@Base+0x320c>
   2625c:	ldr	w0, [sp, #224]
   26260:	cmp	w0, #0x4
   26264:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   26268:	ldr	x0, [sp, #232]
   2626c:	str	x0, [x22]
   26270:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26274:	cmp	w0, #0x11
   26278:	b.eq	26220 <__sanitizer_set_death_callback@@Base+0x31b0>  // b.none
   2627c:	add	x20, x20, #0x1
   26280:	ldr	x0, [x19, #16]
   26284:	cmp	x0, x20
   26288:	b.ls	26498 <__sanitizer_set_death_callback@@Base+0x3428>  // b.plast
   2628c:	lsl	x24, x20, #3
   26290:	ldr	x0, [x19, #24]
   26294:	add	x0, x0, x24
   26298:	ldr	w0, [x0, #4]
   2629c:	str	x28, [sp]
   262a0:	ldr	x7, [x23, #8]
   262a4:	ldr	x6, [x23, #112]
   262a8:	ldr	x5, [x23, #104]
   262ac:	ldr	w4, [x21, #48]
   262b0:	ldr	w3, [x21, #40]
   262b4:	ldr	w2, [x21, #44]
   262b8:	mov	x1, x27
   262bc:	bl	2538c <__sanitizer_set_death_callback@@Base+0x231c>
   262c0:	cbz	w0, 263d8 <__sanitizer_set_death_callback@@Base+0x3368>
   262c4:	ldr	w0, [x19, #8]
   262c8:	cmp	w0, #0x11
   262cc:	b.eq	26200 <__sanitizer_set_death_callback@@Base+0x3190>  // b.none
   262d0:	cbz	w25, 2627c <__sanitizer_set_death_callback@@Base+0x320c>
   262d4:	ldr	x0, [x19, #24]
   262d8:	add	x2, x0, x24
   262dc:	ldr	w0, [x0, x24]
   262e0:	cmp	w0, #0x55
   262e4:	b.eq	2645c <__sanitizer_set_death_callback@@Base+0x33ec>  // b.none
   262e8:	b.hi	26334 <__sanitizer_set_death_callback@@Base+0x32c4>  // b.pmore
   262ec:	cmp	w0, #0x12
   262f0:	b.eq	26418 <__sanitizer_set_death_callback@@Base+0x33a8>  // b.none
   262f4:	b.ls	2624c <__sanitizer_set_death_callback@@Base+0x31dc>  // b.plast
   262f8:	cmp	w0, #0x31
   262fc:	b.eq	26308 <__sanitizer_set_death_callback@@Base+0x3298>  // b.none
   26300:	cmp	w0, #0x47
   26304:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   26308:	ldr	w0, [sp, #128]
   2630c:	cbnz	w0, 2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26310:	ldr	x5, [sp, #120]
   26314:	ldr	x4, [sp, #112]
   26318:	mov	x3, x28
   2631c:	mov	x1, x21
   26320:	mov	x0, x23
   26324:	bl	25abc <__sanitizer_set_death_callback@@Base+0x2a4c>
   26328:	cbz	x0, 2627c <__sanitizer_set_death_callback@@Base+0x320c>
   2632c:	str	x0, [x22]
   26330:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26334:	cmp	w0, #0x59
   26338:	b.eq	26400 <__sanitizer_set_death_callback@@Base+0x3390>  // b.none
   2633c:	b.ls	26374 <__sanitizer_set_death_callback@@Base+0x3304>  // b.plast
   26340:	cmp	w0, #0x6e
   26344:	b.eq	26354 <__sanitizer_set_death_callback@@Base+0x32e4>  // b.none
   26348:	mov	w1, #0x2007                	// #8199
   2634c:	cmp	w0, w1
   26350:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   26354:	ldr	w0, [sp, #224]
   26358:	cmp	w0, #0x4
   2635c:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   26360:	ldr	x0, [sp, #232]
   26364:	str	x0, [x22]
   26368:	mov	w0, #0x1                   	// #1
   2636c:	str	w0, [sp, #128]
   26370:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26374:	cmp	w0, #0x58
   26378:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   2637c:	ldr	w0, [sp, #224]
   26380:	cmp	w0, #0x2
   26384:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   26388:	ldr	x0, [sp, #232]
   2638c:	cbnz	x0, 2639c <__sanitizer_set_death_callback@@Base+0x332c>
   26390:	ldr	x0, [sp, #216]
   26394:	str	x0, [x22, #8]
   26398:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   2639c:	sub	x1, x0, #0x1
   263a0:	ldr	x2, [sp, #208]
   263a4:	ldr	x2, [x2, #48]
   263a8:	cmp	x1, x2
   263ac:	b.cs	263c8 <__sanitizer_set_death_callback@@Base+0x3358>  // b.hs, b.nlast
   263b0:	ldr	x1, [sp, #208]
   263b4:	ldr	x1, [x1, #56]
   263b8:	add	x0, x1, x0, lsl #3
   263bc:	ldur	x0, [x0, #-8]
   263c0:	str	x0, [x22, #8]
   263c4:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   263c8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   263cc:	add	x1, x1, #0x318
   263d0:	mov	x0, x27
   263d4:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   263d8:	mov	w20, #0x0                   	// #0
   263dc:	ldp	x21, x22, [sp, #48]
   263e0:	ldp	x23, x24, [sp, #64]
   263e4:	ldp	x25, x26, [sp, #80]
   263e8:	ldp	x27, x28, [sp, #96]
   263ec:	mov	w0, w20
   263f0:	ldp	x19, x20, [sp, #32]
   263f4:	ldp	x29, x30, [sp, #16]
   263f8:	add	sp, sp, #0x120
   263fc:	ret
   26400:	ldr	w0, [sp, #224]
   26404:	cmp	w0, #0x2
   26408:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   2640c:	ldr	x0, [sp, #232]
   26410:	str	w0, [x22, #16]
   26414:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26418:	ldr	w0, [sp, #224]
   2641c:	cmp	w0, #0x1
   26420:	b.eq	26448 <__sanitizer_set_death_callback@@Base+0x33d8>  // b.none
   26424:	cmp	w0, #0x2
   26428:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   2642c:	ldr	x0, [sp, #232]
   26430:	str	x0, [sp, #152]
   26434:	mov	w0, #0x1                   	// #1
   26438:	str	w0, [sp, #200]
   2643c:	ldr	w0, [sp, #204]
   26440:	str	w0, [sp, #168]
   26444:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26448:	ldr	x0, [sp, #232]
   2644c:	str	x0, [sp, #152]
   26450:	mov	w0, #0x1                   	// #1
   26454:	str	w0, [sp, #168]
   26458:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   2645c:	ldr	w0, [sp, #224]
   26460:	cmp	w0, #0x2
   26464:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   26468:	b.ne	2627c <__sanitizer_set_death_callback@@Base+0x320c>  // b.any
   2646c:	ldr	x0, [sp, #232]
   26470:	str	x0, [sp, #160]
   26474:	mov	w0, #0x1                   	// #1
   26478:	str	w0, [sp, #148]
   2647c:	b	2627c <__sanitizer_set_death_callback@@Base+0x320c>
   26480:	str	x26, [sp, #160]
   26484:	str	x26, [sp, #152]
   26488:	str	wzr, [sp, #148]
   2648c:	str	wzr, [sp, #200]
   26490:	str	wzr, [sp, #168]
   26494:	str	wzr, [sp, #172]
   26498:	cbz	w25, 26700 <__sanitizer_set_death_callback@@Base+0x3690>
   2649c:	ldr	x0, [x22]
   264a0:	cbz	x0, 26594 <__sanitizer_set_death_callback@@Base+0x3524>
   264a4:	ldr	w0, [sp, #148]
   264a8:	cbnz	w0, 265b0 <__sanitizer_set_death_callback@@Base+0x3540>
   264ac:	ldr	w0, [sp, #172]
   264b0:	cmp	w0, #0x0
   264b4:	ldr	w0, [sp, #168]
   264b8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   264bc:	b.eq	266e8 <__sanitizer_set_death_callback@@Base+0x3678>  // b.none
   264c0:	ldr	x0, [sp, #152]
   264c4:	add	x4, x0, x26
   264c8:	ldr	w1, [sp, #200]
   264cc:	cmp	w1, #0x0
   264d0:	ldr	x7, [sp, #192]
   264d4:	ldr	x6, [sp, #120]
   264d8:	ldr	x5, [sp, #112]
   264dc:	csel	x4, x4, x0, ne  // ne = any
   264e0:	mov	x3, x26
   264e4:	mov	x2, x22
   264e8:	mov	x1, x23
   264ec:	ldr	x0, [sp, #176]
   264f0:	bl	24d04 <__sanitizer_set_death_callback@@Base+0x1c94>
   264f4:	mov	w20, w0
   264f8:	cbz	w0, 266d4 <__sanitizer_set_death_callback@@Base+0x3664>
   264fc:	ldr	w0, [x19, #12]
   26500:	cbz	w0, 26708 <__sanitizer_set_death_callback@@Base+0x3698>
   26504:	mov	x2, #0x20                  	// #32
   26508:	mov	w1, #0x0                   	// #0
   2650c:	mov	x0, x28
   26510:	bl	6530 <__asan_internal_memset@plt>
   26514:	str	x28, [sp, #8]
   26518:	ldr	x0, [sp, #288]
   2651c:	str	x0, [sp]
   26520:	ldr	x7, [sp, #120]
   26524:	ldr	x6, [sp, #112]
   26528:	ldr	x5, [sp, #208]
   2652c:	mov	x4, x27
   26530:	ldr	x3, [sp, #184]
   26534:	mov	x2, x21
   26538:	mov	x1, x23
   2653c:	ldr	x0, [sp, #176]
   26540:	bl	260d4 <__sanitizer_set_death_callback@@Base+0x3064>
   26544:	cbz	w0, 26778 <__sanitizer_set_death_callback@@Base+0x3708>
   26548:	ldr	x0, [sp, #248]
   2654c:	cbz	x0, 26708 <__sanitizer_set_death_callback@@Base+0x3698>
   26550:	ldr	x3, [sp, #120]
   26554:	ldr	x2, [sp, #112]
   26558:	mov	x1, x28
   2655c:	ldr	x0, [sp, #176]
   26560:	bl	6600 <__asan_backtrace_vector_release@plt>
   26564:	cbz	w0, 26778 <__sanitizer_set_death_callback@@Base+0x3708>
   26568:	ldr	x19, [sp, #224]
   2656c:	adrp	x3, 26000 <__sanitizer_set_death_callback@@Base+0x2f90>
   26570:	add	x3, x3, #0x6c
   26574:	mov	x2, #0x18                  	// #24
   26578:	ldr	x1, [sp, #248]
   2657c:	mov	x0, x19
   26580:	bl	63a0 <__asan_backtrace_qsort@plt>
   26584:	str	x19, [x22, #24]
   26588:	ldr	x0, [sp, #248]
   2658c:	str	x0, [x22, #32]
   26590:	b	26708 <__sanitizer_set_death_callback@@Base+0x3698>
   26594:	ldr	x4, [sp, #120]
   26598:	ldr	x3, [sp, #112]
   2659c:	mov	x2, #0x28                  	// #40
   265a0:	mov	x1, x22
   265a4:	ldr	x0, [sp, #176]
   265a8:	bl	6890 <__asan_backtrace_free@plt>
   265ac:	b	26700 <__sanitizer_set_death_callback@@Base+0x3690>
   265b0:	ldr	x0, [x23, #96]
   265b4:	ldr	x1, [sp, #160]
   265b8:	cmp	x0, x1
   265bc:	b.ls	26614 <__sanitizer_set_death_callback@@Base+0x35a4>  // b.plast
   265c0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   265c4:	add	x1, x1, #0x308
   265c8:	str	x1, [sp, #224]
   265cc:	ldr	x1, [x23, #88]
   265d0:	str	x1, [sp, #232]
   265d4:	ldr	x2, [sp, #160]
   265d8:	add	x1, x1, x2
   265dc:	str	x1, [sp, #240]
   265e0:	sub	x0, x0, x2
   265e4:	str	x0, [sp, #248]
   265e8:	ldr	w0, [x23, #120]
   265ec:	str	w0, [sp, #256]
   265f0:	ldr	x0, [sp, #112]
   265f4:	str	x0, [sp, #264]
   265f8:	ldr	x0, [sp, #120]
   265fc:	str	x0, [sp, #272]
   26600:	str	wzr, [sp, #280]
   26604:	ldr	x0, [sp, #184]
   26608:	str	x0, [sp, #128]
   2660c:	mov	x26, x28
   26610:	b	26648 <__sanitizer_set_death_callback@@Base+0x35d8>
   26614:	mov	w2, #0x0                   	// #0
   26618:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2661c:	add	x1, x1, #0x350
   26620:	ldr	x0, [sp, #120]
   26624:	ldr	x3, [sp, #112]
   26628:	blr	x3
   2662c:	mov	w20, #0x0                   	// #0
   26630:	ldp	x21, x22, [sp, #48]
   26634:	ldp	x23, x24, [sp, #64]
   26638:	ldp	x25, x26, [sp, #80]
   2663c:	ldp	x27, x28, [sp, #96]
   26640:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   26644:	str	x25, [sp, #128]
   26648:	ldr	w20, [sp, #280]
   2664c:	cbnz	w20, 2662c <__sanitizer_set_death_callback@@Base+0x35bc>
   26650:	ldr	w1, [x21, #48]
   26654:	mov	x0, x26
   26658:	bl	25214 <__sanitizer_set_death_callback@@Base+0x21a4>
   2665c:	mov	x24, x0
   26660:	ldr	w1, [x21, #48]
   26664:	mov	x0, x26
   26668:	bl	25214 <__sanitizer_set_death_callback@@Base+0x21a4>
   2666c:	mov	x25, x0
   26670:	orr	x0, x24, x0
   26674:	cbz	x0, 266b8 <__sanitizer_set_death_callback@@Base+0x3648>
   26678:	ldr	w1, [x21, #48]
   2667c:	mov	x0, x24
   26680:	bl	24874 <__sanitizer_set_death_callback@@Base+0x1804>
   26684:	cbnz	w0, 26644 <__sanitizer_set_death_callback@@Base+0x35d4>
   26688:	ldr	x7, [sp, #192]
   2668c:	ldr	x6, [sp, #120]
   26690:	ldr	x5, [sp, #112]
   26694:	ldr	x0, [sp, #128]
   26698:	add	x4, x25, x0
   2669c:	add	x3, x24, x0
   266a0:	mov	x2, x22
   266a4:	mov	x1, x23
   266a8:	ldr	x0, [sp, #176]
   266ac:	bl	24d04 <__sanitizer_set_death_callback@@Base+0x1c94>
   266b0:	cbnz	w0, 26648 <__sanitizer_set_death_callback@@Base+0x35d8>
   266b4:	b	2662c <__sanitizer_set_death_callback@@Base+0x35bc>
   266b8:	ldr	w0, [sp, #280]
   266bc:	cbz	w0, 264fc <__sanitizer_set_death_callback@@Base+0x348c>
   266c0:	ldp	x21, x22, [sp, #48]
   266c4:	ldp	x23, x24, [sp, #64]
   266c8:	ldp	x25, x26, [sp, #80]
   266cc:	ldp	x27, x28, [sp, #96]
   266d0:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   266d4:	ldp	x21, x22, [sp, #48]
   266d8:	ldp	x23, x24, [sp, #64]
   266dc:	ldp	x25, x26, [sp, #80]
   266e0:	ldp	x27, x28, [sp, #96]
   266e4:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   266e8:	ldr	x4, [sp, #120]
   266ec:	ldr	x3, [sp, #112]
   266f0:	mov	x2, #0x28                  	// #40
   266f4:	mov	x1, x22
   266f8:	ldr	x0, [sp, #176]
   266fc:	bl	6890 <__asan_backtrace_free@plt>
   26700:	ldr	w0, [x19, #12]
   26704:	cbnz	w0, 26728 <__sanitizer_set_death_callback@@Base+0x36b8>
   26708:	ldr	x0, [x27, #24]
   2670c:	cbnz	x0, 26134 <__sanitizer_set_death_callback@@Base+0x30c4>
   26710:	mov	w20, #0x1                   	// #1
   26714:	ldp	x21, x22, [sp, #48]
   26718:	ldp	x23, x24, [sp, #64]
   2671c:	ldp	x25, x26, [sp, #80]
   26720:	ldp	x27, x28, [sp, #96]
   26724:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   26728:	ldr	x0, [sp, #296]
   2672c:	str	x0, [sp, #8]
   26730:	ldr	x0, [sp, #288]
   26734:	str	x0, [sp]
   26738:	ldr	x7, [sp, #120]
   2673c:	ldr	x6, [sp, #112]
   26740:	ldr	x5, [sp, #208]
   26744:	mov	x4, x27
   26748:	ldr	x3, [sp, #184]
   2674c:	mov	x2, x21
   26750:	mov	x1, x23
   26754:	ldr	x0, [sp, #176]
   26758:	bl	260d4 <__sanitizer_set_death_callback@@Base+0x3064>
   2675c:	mov	w20, w0
   26760:	cbnz	w0, 26708 <__sanitizer_set_death_callback@@Base+0x3698>
   26764:	ldp	x21, x22, [sp, #48]
   26768:	ldp	x23, x24, [sp, #64]
   2676c:	ldp	x25, x26, [sp, #80]
   26770:	ldp	x27, x28, [sp, #96]
   26774:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   26778:	mov	w20, #0x0                   	// #0
   2677c:	ldp	x21, x22, [sp, #48]
   26780:	ldp	x23, x24, [sp, #64]
   26784:	ldp	x25, x26, [sp, #80]
   26788:	ldp	x27, x28, [sp, #96]
   2678c:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   26790:	mov	w20, #0x1                   	// #1
   26794:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   26798:	mov	w20, #0x1                   	// #1
   2679c:	ldp	x21, x22, [sp, #48]
   267a0:	ldp	x23, x24, [sp, #64]
   267a4:	ldp	x25, x26, [sp, #80]
   267a8:	ldp	x27, x28, [sp, #96]
   267ac:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   267b0:	mov	w20, #0x0                   	// #0
   267b4:	ldp	x21, x22, [sp, #48]
   267b8:	ldp	x23, x24, [sp, #64]
   267bc:	ldp	x25, x26, [sp, #80]
   267c0:	ldp	x27, x28, [sp, #96]
   267c4:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   267c8:	mov	w20, #0x0                   	// #0
   267cc:	ldp	x21, x22, [sp, #48]
   267d0:	ldp	x23, x24, [sp, #64]
   267d4:	ldp	x25, x26, [sp, #80]
   267d8:	ldp	x27, x28, [sp, #96]
   267dc:	b	263ec <__sanitizer_set_death_callback@@Base+0x337c>
   267e0:	stp	x29, x30, [sp, #-48]!
   267e4:	mov	x29, sp
   267e8:	stp	x19, x20, [sp, #16]
   267ec:	stp	x21, x22, [sp, #32]
   267f0:	mov	x20, x0
   267f4:	mov	x19, x1
   267f8:	mov	x21, x2
   267fc:	mov	x22, x3
   26800:	ldr	x2, [x1, #32]
   26804:	cbnz	x2, 26834 <__sanitizer_set_death_callback@@Base+0x37c4>
   26808:	ldr	x2, [x19, #48]
   2680c:	mov	x4, x22
   26810:	mov	x3, x21
   26814:	lsl	x2, x2, #3
   26818:	ldr	x1, [x19, #56]
   2681c:	mov	x0, x20
   26820:	bl	6890 <__asan_backtrace_free@plt>
   26824:	ldp	x19, x20, [sp, #16]
   26828:	ldp	x21, x22, [sp, #32]
   2682c:	ldp	x29, x30, [sp], #48
   26830:	ret
   26834:	mov	x4, x3
   26838:	mov	x3, x21
   2683c:	lsl	x2, x2, #3
   26840:	ldr	x1, [x1, #40]
   26844:	bl	6890 <__asan_backtrace_free@plt>
   26848:	b	26808 <__sanitizer_set_death_callback@@Base+0x3798>
   2684c:	stp	x29, x30, [sp, #-64]!
   26850:	mov	x29, sp
   26854:	stp	x19, x20, [sp, #16]
   26858:	stp	x21, x22, [sp, #32]
   2685c:	str	x23, [sp, #48]
   26860:	mov	x21, x0
   26864:	mov	x20, x1
   26868:	mov	x22, x2
   2686c:	mov	x23, x3
   26870:	ldr	x2, [x1]
   26874:	cbz	x2, 268b0 <__sanitizer_set_death_callback@@Base+0x3840>
   26878:	mov	x19, #0x0                   	// #0
   2687c:	ldr	x5, [x20, #8]
   26880:	add	x5, x5, x19, lsl #5
   26884:	ldr	x2, [x5, #16]
   26888:	mov	x4, x23
   2688c:	mov	x3, x22
   26890:	lsl	x2, x2, #3
   26894:	ldr	x1, [x5, #24]
   26898:	mov	x0, x21
   2689c:	bl	6890 <__asan_backtrace_free@plt>
   268a0:	add	x19, x19, #0x1
   268a4:	ldr	x2, [x20]
   268a8:	cmp	x2, x19
   268ac:	b.hi	2687c <__sanitizer_set_death_callback@@Base+0x380c>  // b.pmore
   268b0:	mov	x4, x23
   268b4:	mov	x3, x22
   268b8:	lsl	x2, x2, #5
   268bc:	ldr	x1, [x20, #8]
   268c0:	mov	x0, x21
   268c4:	bl	6890 <__asan_backtrace_free@plt>
   268c8:	str	xzr, [x20]
   268cc:	str	xzr, [x20, #8]
   268d0:	ldp	x19, x20, [sp, #16]
   268d4:	ldp	x21, x22, [sp, #32]
   268d8:	ldr	x23, [sp, #48]
   268dc:	ldp	x29, x30, [sp], #64
   268e0:	ret
   268e4:	sub	sp, sp, #0x1d0
   268e8:	stp	x29, x30, [sp, #16]
   268ec:	add	x29, sp, #0x10
   268f0:	stp	x23, x24, [sp, #64]
   268f4:	stp	x25, x26, [sp, #80]
   268f8:	mov	x24, x0
   268fc:	str	x3, [sp, #120]
   26900:	str	x4, [sp, #128]
   26904:	mov	x26, x6
   26908:	mov	w0, #0x1                   	// #1
   2690c:	str	w0, [x6]
   26910:	ldr	x6, [x1, #32]
   26914:	cbz	x6, 2698c <__sanitizer_set_death_callback@@Base+0x391c>
   26918:	stp	x19, x20, [sp, #32]
   2691c:	stp	x27, x28, [sp, #96]
   26920:	mov	x23, x1
   26924:	mov	x20, x2
   26928:	mov	x27, x5
   2692c:	ldr	x2, [x1, #24]
   26930:	mov	x4, x6
   26934:	mov	x3, #0x0                   	// #0
   26938:	b	26940 <__sanitizer_set_death_callback@@Base+0x38d0>
   2693c:	mov	x4, x7
   26940:	cmp	x4, x3
   26944:	b.ls	26984 <__sanitizer_set_death_callback@@Base+0x3914>  // b.plast
   26948:	add	x0, x4, x3
   2694c:	lsr	x7, x0, #1
   26950:	and	x0, x0, #0xfffffffffffffffe
   26954:	add	x0, x0, x7
   26958:	lsl	x1, x0, #3
   2695c:	mov	x5, x1
   26960:	add	x1, x2, x1
   26964:	ldr	x0, [x2, x0, lsl #3]
   26968:	cmp	x0, x20
   2696c:	b.hi	2693c <__sanitizer_set_death_callback@@Base+0x38cc>  // b.pmore
   26970:	ldr	x0, [x1, #8]
   26974:	cmp	x0, x20
   26978:	b.hi	27980 <__sanitizer_set_death_callback@@Base+0x4910>  // b.pmore
   2697c:	add	x3, x7, #0x1
   26980:	b	26940 <__sanitizer_set_death_callback@@Base+0x38d0>
   26984:	ldp	x19, x20, [sp, #32]
   26988:	ldp	x27, x28, [sp, #96]
   2698c:	str	wzr, [x26]
   26990:	mov	w0, #0x0                   	// #0
   26994:	ldp	x23, x24, [sp, #64]
   26998:	ldp	x25, x26, [sp, #80]
   2699c:	ldp	x29, x30, [sp, #16]
   269a0:	add	sp, sp, #0x1d0
   269a4:	ret
   269a8:	add	x0, x22, #0x68
   269ac:	ldar	x21, [x0]
   269b0:	cmn	x21, #0x1
   269b4:	b.ne	279ec <__sanitizer_set_death_callback@@Base+0x497c>  // b.any
   269b8:	sub	x19, x19, #0x18
   269bc:	ldr	x22, [x19, #16]
   269c0:	ldr	x21, [x22, #104]
   269c4:	ldr	x0, [x23, #24]
   269c8:	cmp	x0, x19
   269cc:	b.cs	279ec <__sanitizer_set_death_callback@@Base+0x497c>  // b.hs, b.nlast
   269d0:	ldur	x0, [x19, #-24]
   269d4:	cmp	x0, x20
   269d8:	b.hi	279ec <__sanitizer_set_death_callback@@Base+0x497c>  // b.pmore
   269dc:	ldur	x0, [x19, #-16]
   269e0:	cmp	x0, x20
   269e4:	b.ls	279ec <__sanitizer_set_death_callback@@Base+0x497c>  // b.plast
   269e8:	ldr	w0, [x24, #8]
   269ec:	cbz	w0, 269b0 <__sanitizer_set_death_callback@@Base+0x3940>
   269f0:	b	269a8 <__sanitizer_set_death_callback@@Base+0x3938>
   269f4:	add	x0, x22, #0x68
   269f8:	ldar	x21, [x0]
   269fc:	b	279f4 <__sanitizer_set_death_callback@@Base+0x4984>
   26a00:	ldr	x0, [x19, #16]
   26a04:	mov	x25, x0
   26a08:	str	x0, [sp, #136]
   26a0c:	mov	x2, #0x18                  	// #24
   26a10:	mov	w1, #0x0                   	// #0
   26a14:	add	x0, sp, #0xe0
   26a18:	bl	6530 <__asan_internal_memset@plt>
   26a1c:	str	xzr, [sp, #248]
   26a20:	mov	x2, #0x40                  	// #64
   26a24:	mov	w1, #0x0                   	// #0
   26a28:	add	x0, sp, #0x100
   26a2c:	bl	6530 <__asan_internal_memset@plt>
   26a30:	ldr	x1, [x25, #56]
   26a34:	ldr	x0, [x23, #80]
   26a38:	cmp	x1, x0
   26a3c:	b.cc	26b0c <__sanitizer_set_death_callback@@Base+0x3a9c>  // b.lo, b.ul, b.last
   26a40:	mov	w2, #0x0                   	// #0
   26a44:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   26a48:	add	x1, x1, #0x378
   26a4c:	mov	x0, x27
   26a50:	ldr	x3, [sp, #128]
   26a54:	blr	x3
   26a58:	ldr	x0, [sp, #240]
   26a5c:	ldr	x1, [sp, #232]
   26a60:	add	x0, x0, x1
   26a64:	str	x0, [sp, #240]
   26a68:	str	xzr, [sp, #232]
   26a6c:	mov	x3, x27
   26a70:	ldr	x25, [sp, #128]
   26a74:	mov	x2, x25
   26a78:	add	x1, sp, #0xe0
   26a7c:	mov	x0, x24
   26a80:	bl	6600 <__asan_backtrace_vector_release@plt>
   26a84:	mov	x3, x27
   26a88:	mov	x2, x25
   26a8c:	add	x1, sp, #0x100
   26a90:	mov	x0, x24
   26a94:	bl	267e0 <__sanitizer_set_death_callback@@Base+0x3770>
   26a98:	str	xzr, [sp, #144]
   26a9c:	mov	x0, #0xffffffffffffffff    	// #-1
   26aa0:	str	x0, [sp, #136]
   26aa4:	mov	x28, #0x0                   	// #0
   26aa8:	mov	w0, #0x0                   	// #0
   26aac:	ldr	w1, [x24, #8]
   26ab0:	cbnz	w1, 27674 <__sanitizer_set_death_callback@@Base+0x4604>
   26ab4:	ldr	x1, [sp, #144]
   26ab8:	str	x1, [x22, #112]
   26abc:	str	x21, [x22, #120]
   26ac0:	str	x28, [x22, #128]
   26ac4:	ldr	x1, [sp, #136]
   26ac8:	str	x1, [x22, #104]
   26acc:	ldr	x1, [sp, #136]
   26ad0:	cmn	x1, #0x1
   26ad4:	b.ne	276cc <__sanitizer_set_death_callback@@Base+0x465c>  // b.any
   26ad8:	cbz	w0, 276a0 <__sanitizer_set_death_callback@@Base+0x4630>
   26adc:	mov	x6, x26
   26ae0:	mov	x5, x27
   26ae4:	ldr	x4, [sp, #128]
   26ae8:	ldr	x3, [sp, #120]
   26aec:	mov	x2, x20
   26af0:	mov	x1, x23
   26af4:	mov	x0, x24
   26af8:	bl	268e4 <__sanitizer_set_death_callback@@Base+0x3874>
   26afc:	ldp	x19, x20, [sp, #32]
   26b00:	ldp	x21, x22, [sp, #48]
   26b04:	ldp	x27, x28, [sp, #96]
   26b08:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   26b0c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   26b10:	add	x2, x2, #0x398
   26b14:	str	x2, [sp, #320]
   26b18:	ldr	x2, [x23, #72]
   26b1c:	str	x2, [sp, #328]
   26b20:	add	x2, x2, x1
   26b24:	str	x2, [sp, #336]
   26b28:	sub	x0, x0, x1
   26b2c:	str	x0, [sp, #344]
   26b30:	ldr	w0, [x23, #120]
   26b34:	str	w0, [sp, #352]
   26b38:	ldr	x0, [sp, #128]
   26b3c:	str	x0, [sp, #360]
   26b40:	str	x27, [sp, #368]
   26b44:	str	wzr, [sp, #376]
   26b48:	add	x0, sp, #0x140
   26b4c:	bl	24f68 <__sanitizer_set_death_callback@@Base+0x1ef8>
   26b50:	mov	w1, w0
   26b54:	mov	w25, #0x0                   	// #0
   26b58:	mov	x2, #0xffffffff            	// #4294967295
   26b5c:	cmp	x2, w0, uxtw
   26b60:	b.eq	26d80 <__sanitizer_set_death_callback@@Base+0x3d10>  // b.none
   26b64:	str	x1, [sp, #344]
   26b68:	add	x0, sp, #0x140
   26b6c:	bl	250dc <__sanitizer_set_death_callback@@Base+0x206c>
   26b70:	and	w0, w0, #0xffff
   26b74:	str	w0, [sp, #256]
   26b78:	sub	w0, w0, #0x2
   26b7c:	cmp	w0, #0x2
   26b80:	b.hi	26d94 <__sanitizer_set_death_callback@@Base+0x3d24>  // b.pmore
   26b84:	add	x0, sp, #0x140
   26b88:	mov	w1, w25
   26b8c:	mov	x25, x0
   26b90:	bl	250b8 <__sanitizer_set_death_callback@@Base+0x2048>
   26b94:	mov	x1, x0
   26b98:	ldp	x2, x3, [sp, #320]
   26b9c:	stp	x2, x3, [sp, #384]
   26ba0:	ldp	x2, x3, [sp, #336]
   26ba4:	stp	x2, x3, [sp, #400]
   26ba8:	ldp	x2, x3, [sp, #352]
   26bac:	stp	x2, x3, [sp, #416]
   26bb0:	ldp	x2, x3, [sp, #368]
   26bb4:	stp	x2, x3, [sp, #432]
   26bb8:	str	x0, [sp, #408]
   26bbc:	mov	x0, x25
   26bc0:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   26bc4:	cbz	w0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26bc8:	add	x0, sp, #0x180
   26bcc:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   26bd0:	and	w0, w0, #0xff
   26bd4:	str	w0, [sp, #260]
   26bd8:	ldr	w0, [sp, #256]
   26bdc:	cmp	w0, #0x3
   26be0:	b.gt	26da8 <__sanitizer_set_death_callback@@Base+0x3d38>
   26be4:	mov	w0, #0x1                   	// #1
   26be8:	str	w0, [sp, #264]
   26bec:	add	x25, sp, #0x180
   26bf0:	mov	x0, x25
   26bf4:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   26bf8:	ldr	x28, [sp, #400]
   26bfc:	mov	x1, #0x1                   	// #1
   26c00:	mov	x0, x25
   26c04:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   26c08:	mov	w1, #0x0                   	// #0
   26c0c:	cbz	w0, 26c20 <__sanitizer_set_death_callback@@Base+0x3bb0>
   26c10:	ldrb	w1, [x28]
   26c14:	eor	w1, w1, #0xffffff80
   26c18:	sub	w1, w1, #0x80
   26c1c:	sxtb	w1, w1
   26c20:	str	w1, [sp, #268]
   26c24:	add	x25, sp, #0x180
   26c28:	mov	x0, x25
   26c2c:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   26c30:	and	w0, w0, #0xff
   26c34:	str	w0, [sp, #272]
   26c38:	mov	x0, x25
   26c3c:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   26c40:	and	w1, w0, #0xff
   26c44:	str	w1, [sp, #276]
   26c48:	ldr	x0, [sp, #400]
   26c4c:	str	x0, [sp, #280]
   26c50:	sub	w1, w1, #0x1
   26c54:	mov	x0, x25
   26c58:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   26c5c:	cbz	w0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26c60:	str	xzr, [sp, #288]
   26c64:	ldr	x25, [sp, #400]
   26c68:	ldr	x28, [sp, #408]
   26c6c:	add	x28, x25, x28
   26c70:	cmp	x25, x28
   26c74:	b.cs	26ca8 <__sanitizer_set_death_callback@@Base+0x3c38>  // b.hs, b.nlast
   26c78:	ldrb	w0, [x25]
   26c7c:	cbz	w0, 26ca8 <__sanitizer_set_death_callback@@Base+0x3c38>
   26c80:	sub	x1, x28, x25
   26c84:	mov	x0, x25
   26c88:	bl	6800 <__asan_internal_strnlen@plt>
   26c8c:	add	x0, x0, #0x1
   26c90:	add	x25, x25, x0
   26c94:	ldr	x0, [sp, #288]
   26c98:	add	x0, x0, #0x1
   26c9c:	str	x0, [sp, #288]
   26ca0:	cmp	x28, x25
   26ca4:	b.hi	26c78 <__sanitizer_set_death_callback@@Base+0x3c08>  // b.pmore
   26ca8:	str	xzr, [sp, #296]
   26cac:	ldr	x1, [sp, #288]
   26cb0:	cbnz	x1, 26dbc <__sanitizer_set_death_callback@@Base+0x3d4c>
   26cb4:	ldr	x0, [sp, #400]
   26cb8:	ldrb	w0, [x0]
   26cbc:	mov	x28, #0x0                   	// #0
   26cc0:	add	x1, sp, #0x180
   26cc4:	cbz	w0, 26d08 <__sanitizer_set_death_callback@@Base+0x3c98>
   26cc8:	str	x21, [sp, #144]
   26ccc:	mov	x25, x1
   26cd0:	ldr	w0, [sp, #440]
   26cd4:	cbnz	w0, 27568 <__sanitizer_set_death_callback@@Base+0x44f8>
   26cd8:	ldr	x21, [sp, #296]
   26cdc:	mov	x0, x25
   26ce0:	bl	2534c <__sanitizer_set_death_callback@@Base+0x22dc>
   26ce4:	str	x0, [x21, x28]
   26ce8:	ldr	x0, [sp, #296]
   26cec:	ldr	x0, [x0, x28]
   26cf0:	cbz	x0, 27570 <__sanitizer_set_death_callback@@Base+0x4500>
   26cf4:	add	x28, x28, #0x8
   26cf8:	ldr	x0, [sp, #400]
   26cfc:	ldrb	w0, [x0]
   26d00:	cbnz	w0, 26cd0 <__sanitizer_set_death_callback@@Base+0x3c60>
   26d04:	ldr	x21, [sp, #144]
   26d08:	mov	x1, #0x1                   	// #1
   26d0c:	add	x0, sp, #0x180
   26d10:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   26d14:	cbz	w0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26d18:	str	xzr, [sp, #304]
   26d1c:	ldr	x25, [sp, #400]
   26d20:	ldr	x28, [sp, #408]
   26d24:	add	x28, x25, x28
   26d28:	cmp	x25, x28
   26d2c:	b.cc	26e08 <__sanitizer_set_death_callback@@Base+0x3d98>  // b.lo, b.ul, b.last
   26d30:	ldr	x3, [sp, #368]
   26d34:	ldr	x2, [sp, #360]
   26d38:	ldr	x1, [sp, #304]
   26d3c:	lsl	x1, x1, #3
   26d40:	mov	x0, x24
   26d44:	bl	65b0 <__asan_backtrace_alloc@plt>
   26d48:	str	x0, [sp, #312]
   26d4c:	cbz	x0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26d50:	ldr	x0, [sp, #400]
   26d54:	ldrb	w0, [x0]
   26d58:	cbz	w0, 26fb0 <__sanitizer_set_death_callback@@Base+0x3f40>
   26d5c:	mov	x25, #0x0                   	// #0
   26d60:	add	x0, sp, #0x180
   26d64:	str	x21, [sp, #144]
   26d68:	str	x22, [sp, #152]
   26d6c:	str	x19, [sp, #160]
   26d70:	str	x23, [sp, #168]
   26d74:	str	x20, [sp, #176]
   26d78:	mov	x22, x0
   26d7c:	b	26f2c <__sanitizer_set_death_callback@@Base+0x3ebc>
   26d80:	add	x0, sp, #0x140
   26d84:	bl	24fe8 <__sanitizer_set_death_callback@@Base+0x1f78>
   26d88:	mov	x1, x0
   26d8c:	mov	w25, #0x1                   	// #1
   26d90:	b	26b64 <__sanitizer_set_death_callback@@Base+0x3af4>
   26d94:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   26d98:	add	x1, x1, #0x3a8
   26d9c:	add	x0, sp, #0x140
   26da0:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   26da4:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26da8:	add	x0, sp, #0x180
   26dac:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   26db0:	and	w0, w0, #0xff
   26db4:	str	w0, [sp, #264]
   26db8:	b	26bec <__sanitizer_set_death_callback@@Base+0x3b7c>
   26dbc:	ldr	x3, [sp, #368]
   26dc0:	ldr	x2, [sp, #360]
   26dc4:	lsl	x1, x1, #3
   26dc8:	mov	x0, x24
   26dcc:	bl	65b0 <__asan_backtrace_alloc@plt>
   26dd0:	str	x0, [sp, #296]
   26dd4:	cbnz	x0, 26cb4 <__sanitizer_set_death_callback@@Base+0x3c44>
   26dd8:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26ddc:	mov	x0, #0x1                   	// #1
   26de0:	b	26e44 <__sanitizer_set_death_callback@@Base+0x3dd4>
   26de4:	mov	x0, #0x1                   	// #1
   26de8:	b	26e64 <__sanitizer_set_death_callback@@Base+0x3df4>
   26dec:	mov	x0, #0x1                   	// #1
   26df0:	add	x25, x25, x0
   26df4:	ldr	x0, [sp, #304]
   26df8:	add	x0, x0, #0x1
   26dfc:	str	x0, [sp, #304]
   26e00:	cmp	x28, x25
   26e04:	b.ls	26d30 <__sanitizer_set_death_callback@@Base+0x3cc0>  // b.plast
   26e08:	ldrb	w0, [x25]
   26e0c:	cbz	w0, 26d30 <__sanitizer_set_death_callback@@Base+0x3cc0>
   26e10:	sub	x1, x28, x25
   26e14:	mov	x0, x25
   26e18:	bl	6800 <__asan_internal_strnlen@plt>
   26e1c:	mov	x1, x0
   26e20:	add	x0, x0, #0x1
   26e24:	add	x2, x25, x0
   26e28:	ldrsb	w0, [x25, x0]
   26e2c:	tbz	w0, #31, 26ddc <__sanitizer_set_death_callback@@Base+0x3d6c>
   26e30:	mov	x0, #0x1                   	// #1
   26e34:	add	x25, x25, x1
   26e38:	add	x0, x0, #0x1
   26e3c:	ldrsb	w1, [x25, x0]
   26e40:	tbnz	w1, #31, 26e38 <__sanitizer_set_death_callback@@Base+0x3dc8>
   26e44:	add	x3, x2, x0
   26e48:	ldrsb	w0, [x2, x0]
   26e4c:	tbz	w0, #31, 26de4 <__sanitizer_set_death_callback@@Base+0x3d74>
   26e50:	mov	x0, #0x1                   	// #1
   26e54:	sub	x2, x3, #0x1
   26e58:	add	x0, x0, #0x1
   26e5c:	ldrsb	w1, [x2, x0]
   26e60:	tbnz	w1, #31, 26e58 <__sanitizer_set_death_callback@@Base+0x3de8>
   26e64:	add	x25, x3, x0
   26e68:	ldrsb	w0, [x3, x0]
   26e6c:	tbz	w0, #31, 26dec <__sanitizer_set_death_callback@@Base+0x3d7c>
   26e70:	mov	x0, #0x1                   	// #1
   26e74:	sub	x2, x25, #0x1
   26e78:	add	x0, x0, #0x1
   26e7c:	ldrsb	w1, [x2, x0]
   26e80:	tbnz	w1, #31, 26e78 <__sanitizer_set_death_callback@@Base+0x3e08>
   26e84:	b	26df0 <__sanitizer_set_death_callback@@Base+0x3d80>
   26e88:	sub	x1, x0, #0x1
   26e8c:	ldr	x2, [sp, #288]
   26e90:	cmp	x1, x2
   26e94:	b.cs	26f74 <__sanitizer_set_death_callback@@Base+0x3f04>  // b.hs, b.nlast
   26e98:	ldr	x1, [sp, #296]
   26e9c:	add	x0, x1, x0, lsl #3
   26ea0:	ldur	x28, [x0, #-8]
   26ea4:	mov	x0, x28
   26ea8:	bl	64b0 <__asan_internal_strlen@plt>
   26eac:	mov	x20, x0
   26eb0:	mov	x0, x19
   26eb4:	bl	64b0 <__asan_internal_strlen@plt>
   26eb8:	mov	x23, x0
   26ebc:	add	x1, x20, x0
   26ec0:	ldr	x3, [sp, #368]
   26ec4:	ldr	x2, [sp, #360]
   26ec8:	add	x1, x1, #0x2
   26ecc:	mov	x0, x24
   26ed0:	bl	65b0 <__asan_backtrace_alloc@plt>
   26ed4:	mov	x21, x0
   26ed8:	cbz	x0, 275a8 <__sanitizer_set_death_callback@@Base+0x4538>
   26edc:	mov	x2, x20
   26ee0:	mov	x1, x28
   26ee4:	bl	64a0 <__asan_internal_memcpy@plt>
   26ee8:	mov	w0, #0x2f                  	// #47
   26eec:	strb	w0, [x21, x20]
   26ef0:	add	x0, x20, #0x1
   26ef4:	add	x2, x23, #0x1
   26ef8:	mov	x1, x19
   26efc:	add	x0, x21, x0
   26f00:	bl	64a0 <__asan_internal_memcpy@plt>
   26f04:	ldr	x0, [sp, #312]
   26f08:	str	x21, [x0, x25]
   26f0c:	mov	x0, x22
   26f10:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   26f14:	mov	x0, x22
   26f18:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   26f1c:	add	x25, x25, #0x8
   26f20:	ldr	x0, [sp, #400]
   26f24:	ldrb	w0, [x0]
   26f28:	cbz	w0, 26f9c <__sanitizer_set_death_callback@@Base+0x3f2c>
   26f2c:	ldr	w0, [sp, #440]
   26f30:	cbnz	w0, 27578 <__sanitizer_set_death_callback@@Base+0x4508>
   26f34:	mov	x0, x22
   26f38:	bl	2534c <__sanitizer_set_death_callback@@Base+0x22dc>
   26f3c:	mov	x19, x0
   26f40:	cbz	x0, 27590 <__sanitizer_set_death_callback@@Base+0x4520>
   26f44:	mov	x0, x22
   26f48:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   26f4c:	ldrb	w1, [x19]
   26f50:	cmp	w1, #0x2f
   26f54:	b.eq	26f68 <__sanitizer_set_death_callback@@Base+0x3ef8>  // b.none
   26f58:	cbnz	x0, 26e88 <__sanitizer_set_death_callback@@Base+0x3e18>
   26f5c:	ldr	x0, [sp, #136]
   26f60:	ldr	x28, [x0, #72]
   26f64:	cbnz	x28, 26ea4 <__sanitizer_set_death_callback@@Base+0x3e34>
   26f68:	ldr	x0, [sp, #312]
   26f6c:	str	x19, [x0, x25]
   26f70:	b	26f0c <__sanitizer_set_death_callback@@Base+0x3e9c>
   26f74:	ldr	x21, [sp, #144]
   26f78:	ldr	x22, [sp, #152]
   26f7c:	ldr	x19, [sp, #160]
   26f80:	ldr	x23, [sp, #168]
   26f84:	ldr	x20, [sp, #176]
   26f88:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   26f8c:	add	x1, x1, #0x3c8
   26f90:	add	x0, sp, #0x140
   26f94:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   26f98:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26f9c:	ldr	x21, [sp, #144]
   26fa0:	ldr	x22, [sp, #152]
   26fa4:	ldr	x19, [sp, #160]
   26fa8:	ldr	x23, [sp, #168]
   26fac:	ldr	x20, [sp, #176]
   26fb0:	ldr	w0, [sp, #440]
   26fb4:	cbnz	w0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   26fb8:	ldr	x0, [sp, #304]
   26fbc:	cbz	x0, 26fd0 <__sanitizer_set_death_callback@@Base+0x3f60>
   26fc0:	ldr	x0, [sp, #312]
   26fc4:	ldr	x0, [x0]
   26fc8:	str	x0, [sp, #144]
   26fcc:	b	26fdc <__sanitizer_set_death_callback@@Base+0x3f6c>
   26fd0:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   26fd4:	add	x0, x0, #0x640
   26fd8:	str	x0, [sp, #144]
   26fdc:	ldr	x0, [sp, #344]
   26fe0:	cbz	x0, 27414 <__sanitizer_set_death_callback@@Base+0x43a4>
   26fe4:	ldr	x1, [sp, #144]
   26fe8:	mov	w2, #0x1                   	// #1
   26fec:	mov	x4, #0x0                   	// #0
   26ff0:	mov	w3, #0x0                   	// #0
   26ff4:	add	x28, sp, #0x140
   26ff8:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   26ffc:	add	x0, x0, #0x640
   27000:	str	x0, [sp, #216]
   27004:	add	x25, sp, #0xe0
   27008:	str	x21, [sp, #152]
   2700c:	str	x22, [sp, #160]
   27010:	str	x19, [sp, #168]
   27014:	mov	x22, x1
   27018:	mov	w21, w2
   2701c:	mov	w19, w3
   27020:	str	x20, [sp, #176]
   27024:	mov	x20, x4
   27028:	str	x27, [sp, #184]
   2702c:	str	x26, [sp, #192]
   27030:	b	2709c <__sanitizer_set_death_callback@@Base+0x402c>
   27034:	sub	w26, w26, w1
   27038:	ldr	w3, [sp, #272]
   2703c:	udiv	w1, w26, w3
   27040:	add	w19, w1, w19
   27044:	ldr	w2, [sp, #264]
   27048:	ldr	w0, [sp, #260]
   2704c:	mul	w0, w19, w0
   27050:	udiv	w0, w0, w2
   27054:	add	x20, x20, x0
   27058:	udiv	w0, w19, w2
   2705c:	msub	w19, w0, w2, w19
   27060:	msub	w1, w1, w3, w26
   27064:	ldr	w26, [sp, #268]
   27068:	add	w1, w1, w26
   2706c:	add	w21, w21, w1
   27070:	mov	x7, x25
   27074:	ldr	x6, [sp, #368]
   27078:	ldr	x5, [sp, #360]
   2707c:	mov	w4, w21
   27080:	mov	x3, x22
   27084:	mov	x2, x20
   27088:	mov	x1, x23
   2708c:	mov	x0, x24
   27090:	bl	24c30 <__sanitizer_set_death_callback@@Base+0x1bc0>
   27094:	ldr	x0, [sp, #344]
   27098:	cbz	x0, 273fc <__sanitizer_set_death_callback@@Base+0x438c>
   2709c:	mov	x0, x28
   270a0:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   270a4:	and	w26, w0, #0xff
   270a8:	ldr	w1, [sp, #276]
   270ac:	cmp	w1, w0, uxtb
   270b0:	b.ls	27034 <__sanitizer_set_death_callback@@Base+0x3fc4>  // b.plast
   270b4:	cbz	w26, 27104 <__sanitizer_set_death_callback@@Base+0x4094>
   270b8:	cmp	w26, #0x5
   270bc:	b.eq	2739c <__sanitizer_set_death_callback@@Base+0x432c>  // b.none
   270c0:	b.hi	272cc <__sanitizer_set_death_callback@@Base+0x425c>  // b.pmore
   270c4:	cmp	w26, #0x3
   270c8:	b.eq	27360 <__sanitizer_set_death_callback@@Base+0x42f0>  // b.none
   270cc:	b.ls	27290 <__sanitizer_set_death_callback@@Base+0x4220>  // b.plast
   270d0:	cmp	w26, #0x4
   270d4:	b.ne	273bc <__sanitizer_set_death_callback@@Base+0x434c>  // b.any
   270d8:	mov	x0, x28
   270dc:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   270e0:	cbz	x0, 273f4 <__sanitizer_set_death_callback@@Base+0x4384>
   270e4:	sub	x1, x0, #0x1
   270e8:	ldr	x2, [sp, #304]
   270ec:	cmp	x1, x2
   270f0:	b.cs	27370 <__sanitizer_set_death_callback@@Base+0x4300>  // b.hs, b.nlast
   270f4:	ldr	x1, [sp, #312]
   270f8:	add	x0, x1, x0, lsl #3
   270fc:	ldur	x22, [x0, #-8]
   27100:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27104:	mov	x0, x28
   27108:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   2710c:	mov	x27, x0
   27110:	mov	x0, x28
   27114:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   27118:	and	w0, w0, #0xff
   2711c:	cmp	w0, #0x3
   27120:	b.eq	27164 <__sanitizer_set_death_callback@@Base+0x40f4>  // b.none
   27124:	b.hi	27150 <__sanitizer_set_death_callback@@Base+0x40e0>  // b.pmore
   27128:	cmp	w0, #0x1
   2712c:	b.eq	273e0 <__sanitizer_set_death_callback@@Base+0x4370>  // b.none
   27130:	cmp	w0, #0x2
   27134:	b.ne	27264 <__sanitizer_set_death_callback@@Base+0x41f4>  // b.any
   27138:	ldr	x0, [sp, #136]
   2713c:	ldr	w1, [x0, #48]
   27140:	mov	x0, x28
   27144:	bl	25214 <__sanitizer_set_death_callback@@Base+0x21a4>
   27148:	mov	x20, x0
   2714c:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27150:	cmp	w0, #0x4
   27154:	b.ne	27264 <__sanitizer_set_death_callback@@Base+0x41f4>  // b.any
   27158:	mov	x0, x28
   2715c:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27160:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27164:	mov	x0, x28
   27168:	bl	2534c <__sanitizer_set_death_callback@@Base+0x22dc>
   2716c:	mov	x22, x0
   27170:	cbz	x0, 275c0 <__sanitizer_set_death_callback@@Base+0x4550>
   27174:	mov	x0, x28
   27178:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   2717c:	mov	x26, x0
   27180:	mov	x0, x28
   27184:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27188:	mov	x0, x28
   2718c:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27190:	ldrb	w0, [x22]
   27194:	cmp	w0, #0x2f
   27198:	b.eq	27094 <__sanitizer_set_death_callback@@Base+0x4024>  // b.none
   2719c:	cbnz	w26, 27218 <__sanitizer_set_death_callback@@Base+0x41a8>
   271a0:	ldr	x0, [sp, #136]
   271a4:	ldr	x0, [x0, #72]
   271a8:	str	x0, [sp, #200]
   271ac:	ldr	x0, [sp, #200]
   271b0:	bl	64b0 <__asan_internal_strlen@plt>
   271b4:	mov	x26, x0
   271b8:	mov	x0, x22
   271bc:	bl	64b0 <__asan_internal_strlen@plt>
   271c0:	str	x0, [sp, #208]
   271c4:	add	x1, x26, x0
   271c8:	ldr	x3, [sp, #368]
   271cc:	ldr	x2, [sp, #360]
   271d0:	add	x1, x1, #0x2
   271d4:	mov	x0, x24
   271d8:	bl	65b0 <__asan_backtrace_alloc@plt>
   271dc:	mov	x27, x0
   271e0:	cbz	x0, 275dc <__sanitizer_set_death_callback@@Base+0x456c>
   271e4:	mov	x2, x26
   271e8:	ldr	x1, [sp, #200]
   271ec:	bl	64a0 <__asan_internal_memcpy@plt>
   271f0:	mov	w0, #0x2f                  	// #47
   271f4:	strb	w0, [x27, x26]
   271f8:	add	x0, x26, #0x1
   271fc:	ldr	x2, [sp, #208]
   27200:	add	x2, x2, #0x1
   27204:	mov	x1, x22
   27208:	add	x0, x27, x0
   2720c:	bl	64a0 <__asan_internal_memcpy@plt>
   27210:	mov	x22, x27
   27214:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27218:	sub	w26, w26, #0x1
   2721c:	ldr	x0, [sp, #288]
   27220:	cmp	x26, x0
   27224:	b.cs	27238 <__sanitizer_set_death_callback@@Base+0x41c8>  // b.hs, b.nlast
   27228:	ldr	x0, [sp, #296]
   2722c:	ldr	x0, [x0, x26, lsl #3]
   27230:	str	x0, [sp, #200]
   27234:	b	271ac <__sanitizer_set_death_callback@@Base+0x413c>
   27238:	ldr	x21, [sp, #152]
   2723c:	ldr	x22, [sp, #160]
   27240:	ldr	x19, [sp, #168]
   27244:	ldr	x20, [sp, #176]
   27248:	ldr	x27, [sp, #184]
   2724c:	ldr	x26, [sp, #192]
   27250:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   27254:	add	x1, x1, #0x400
   27258:	add	x0, sp, #0x140
   2725c:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   27260:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27264:	sub	x1, x27, #0x1
   27268:	mov	x0, x28
   2726c:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   27270:	cbnz	w0, 27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27274:	ldr	x21, [sp, #152]
   27278:	ldr	x22, [sp, #160]
   2727c:	ldr	x19, [sp, #168]
   27280:	ldr	x20, [sp, #176]
   27284:	ldr	x27, [sp, #184]
   27288:	ldr	x26, [sp, #192]
   2728c:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27290:	cmp	w26, #0x1
   27294:	b.eq	27338 <__sanitizer_set_death_callback@@Base+0x42c8>  // b.none
   27298:	cmp	w26, #0x2
   2729c:	b.ne	273bc <__sanitizer_set_death_callback@@Base+0x434c>  // b.any
   272a0:	mov	x0, x28
   272a4:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   272a8:	add	x19, x0, w19, uxtw
   272ac:	ldr	w1, [sp, #264]
   272b0:	ldr	w0, [sp, #260]
   272b4:	mul	x0, x0, x19
   272b8:	udiv	x0, x0, x1
   272bc:	add	x20, x20, x0
   272c0:	udiv	x0, x19, x1
   272c4:	msub	w19, w0, w1, w19
   272c8:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   272cc:	cmp	w26, #0x9
   272d0:	b.eq	273a8 <__sanitizer_set_death_callback@@Base+0x4338>  // b.none
   272d4:	b.ls	272f4 <__sanitizer_set_death_callback@@Base+0x4284>  // b.plast
   272d8:	cmp	w26, #0xb
   272dc:	b.ls	27094 <__sanitizer_set_death_callback@@Base+0x4024>  // b.plast
   272e0:	cmp	w26, #0xc
   272e4:	b.ne	273bc <__sanitizer_set_death_callback@@Base+0x434c>  // b.any
   272e8:	mov	x0, x28
   272ec:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   272f0:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   272f4:	cmp	w26, #0x7
   272f8:	b.ls	27094 <__sanitizer_set_death_callback@@Base+0x4024>  // b.plast
   272fc:	cmp	w26, #0x8
   27300:	b.ne	273bc <__sanitizer_set_death_callback@@Base+0x434c>  // b.any
   27304:	mov	w0, #0xff                  	// #255
   27308:	sub	w0, w0, w1
   2730c:	ldr	w1, [sp, #272]
   27310:	udiv	w0, w0, w1
   27314:	add	w19, w0, w19
   27318:	ldr	w1, [sp, #264]
   2731c:	ldr	w0, [sp, #260]
   27320:	mul	w0, w19, w0
   27324:	udiv	w0, w0, w1
   27328:	add	x20, x20, x0
   2732c:	udiv	w0, w19, w1
   27330:	msub	w19, w0, w1, w19
   27334:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27338:	mov	x7, x25
   2733c:	ldr	x6, [sp, #368]
   27340:	ldr	x5, [sp, #360]
   27344:	mov	w4, w21
   27348:	mov	x3, x22
   2734c:	mov	x2, x20
   27350:	mov	x1, x23
   27354:	mov	x0, x24
   27358:	bl	24c30 <__sanitizer_set_death_callback@@Base+0x1bc0>
   2735c:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27360:	mov	x0, x28
   27364:	bl	25284 <__sanitizer_set_death_callback@@Base+0x2214>
   27368:	add	w21, w21, w0
   2736c:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   27370:	ldr	x21, [sp, #152]
   27374:	ldr	x22, [sp, #160]
   27378:	ldr	x19, [sp, #168]
   2737c:	ldr	x20, [sp, #176]
   27380:	ldr	x27, [sp, #184]
   27384:	ldr	x26, [sp, #192]
   27388:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2738c:	add	x1, x1, #0x430
   27390:	add	x0, sp, #0x140
   27394:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   27398:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   2739c:	mov	x0, x28
   273a0:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   273a4:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   273a8:	mov	x0, x28
   273ac:	bl	250dc <__sanitizer_set_death_callback@@Base+0x206c>
   273b0:	add	x20, x20, w0, uxth
   273b4:	mov	w19, #0x0                   	// #0
   273b8:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   273bc:	sub	w26, w26, #0x1
   273c0:	ldr	x0, [sp, #280]
   273c4:	ldrb	w26, [x0, w26, uxtw]
   273c8:	cbz	w26, 27094 <__sanitizer_set_death_callback@@Base+0x4024>
   273cc:	mov	x0, x28
   273d0:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   273d4:	subs	w26, w26, #0x1
   273d8:	b.ne	273cc <__sanitizer_set_death_callback@@Base+0x435c>  // b.any
   273dc:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   273e0:	ldr	x22, [sp, #144]
   273e4:	mov	w19, w26
   273e8:	mov	w21, #0x1                   	// #1
   273ec:	mov	x20, #0x0                   	// #0
   273f0:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   273f4:	ldr	x22, [sp, #216]
   273f8:	b	27094 <__sanitizer_set_death_callback@@Base+0x4024>
   273fc:	ldr	x21, [sp, #152]
   27400:	ldr	x22, [sp, #160]
   27404:	ldr	x19, [sp, #168]
   27408:	ldr	x20, [sp, #176]
   2740c:	ldr	x27, [sp, #184]
   27410:	ldr	x26, [sp, #192]
   27414:	ldr	w0, [sp, #376]
   27418:	cbnz	w0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   2741c:	ldr	x0, [sp, #248]
   27420:	cbz	x0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27424:	add	x4, sp, #0xe0
   27428:	mov	x3, x27
   2742c:	ldr	x25, [sp, #128]
   27430:	mov	x2, x25
   27434:	mov	x1, #0x18                  	// #24
   27438:	mov	x0, x24
   2743c:	bl	6510 <__asan_backtrace_vector_grow@plt>
   27440:	cbz	x0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27444:	mov	x1, #0xffffffffffffffff    	// #-1
   27448:	str	x1, [x0]
   2744c:	str	xzr, [x0, #8]
   27450:	str	wzr, [x0, #16]
   27454:	str	wzr, [x0, #20]
   27458:	mov	x3, x27
   2745c:	mov	x2, x25
   27460:	add	x1, sp, #0xe0
   27464:	mov	x0, x24
   27468:	bl	6600 <__asan_backtrace_vector_release@plt>
   2746c:	cbz	w0, 26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27470:	ldr	x0, [sp, #224]
   27474:	str	x0, [sp, #136]
   27478:	adrp	x3, 24000 <__sanitizer_set_death_callback@@Base+0xf90>
   2747c:	add	x3, x3, #0x990
   27480:	mov	x2, #0x18                  	// #24
   27484:	ldr	x1, [sp, #248]
   27488:	bl	63a0 <__asan_backtrace_qsort@plt>
   2748c:	ldr	x0, [sp, #248]
   27490:	str	x0, [sp, #144]
   27494:	ldr	w0, [x24, #8]
   27498:	cbnz	w0, 27960 <__sanitizer_set_death_callback@@Base+0x48f0>
   2749c:	add	x25, x23, #0x80
   274a0:	ldr	x28, [x19, #16]
   274a4:	str	x25, [sp, #176]
   274a8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   274ac:	add	x0, x0, #0x2a8
   274b0:	str	x0, [sp, #384]
   274b4:	ldr	x0, [x23, #56]
   274b8:	str	x0, [sp, #392]
   274bc:	ldr	x0, [x28]
   274c0:	str	x0, [sp, #400]
   274c4:	ldr	x0, [x28, #8]
   274c8:	str	x0, [sp, #408]
   274cc:	ldr	w0, [x23, #120]
   274d0:	str	w0, [sp, #416]
   274d4:	ldr	x0, [sp, #128]
   274d8:	str	x0, [sp, #424]
   274dc:	str	x27, [sp, #432]
   274e0:	str	wzr, [sp, #440]
   274e4:	add	x1, sp, #0x100
   274e8:	add	x2, sp, #0x180
   274ec:	str	x21, [sp, #152]
   274f0:	str	x22, [sp, #160]
   274f4:	str	x19, [sp, #168]
   274f8:	mov	x19, x0
   274fc:	mov	x21, x1
   27500:	mov	x22, x2
   27504:	ldr	x0, [sp, #408]
   27508:	cbz	x0, 275f8 <__sanitizer_set_death_callback@@Base+0x4588>
   2750c:	str	x25, [sp, #8]
   27510:	str	x25, [sp]
   27514:	mov	x7, x27
   27518:	mov	x6, x19
   2751c:	mov	x5, x21
   27520:	mov	x4, x22
   27524:	mov	x3, #0x0                   	// #0
   27528:	mov	x2, x28
   2752c:	mov	x1, x23
   27530:	mov	x0, x24
   27534:	bl	260d4 <__sanitizer_set_death_callback@@Base+0x3064>
   27538:	cbnz	w0, 27504 <__sanitizer_set_death_callback@@Base+0x4494>
   2753c:	ldr	x21, [sp, #152]
   27540:	ldr	x22, [sp, #160]
   27544:	ldr	x19, [sp, #168]
   27548:	mov	x28, #0x0                   	// #0
   2754c:	mov	x3, x27
   27550:	ldr	x2, [sp, #128]
   27554:	add	x1, sp, #0x100
   27558:	mov	x0, x24
   2755c:	bl	267e0 <__sanitizer_set_death_callback@@Base+0x3770>
   27560:	mov	w0, #0x1                   	// #1
   27564:	b	26aac <__sanitizer_set_death_callback@@Base+0x3a3c>
   27568:	ldr	x21, [sp, #144]
   2756c:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27570:	ldr	x21, [sp, #144]
   27574:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27578:	ldr	x21, [sp, #144]
   2757c:	ldr	x22, [sp, #152]
   27580:	ldr	x19, [sp, #160]
   27584:	ldr	x23, [sp, #168]
   27588:	ldr	x20, [sp, #176]
   2758c:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   27590:	ldr	x21, [sp, #144]
   27594:	ldr	x22, [sp, #152]
   27598:	ldr	x19, [sp, #160]
   2759c:	ldr	x23, [sp, #168]
   275a0:	ldr	x20, [sp, #176]
   275a4:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   275a8:	ldr	x21, [sp, #144]
   275ac:	ldr	x22, [sp, #152]
   275b0:	ldr	x19, [sp, #160]
   275b4:	ldr	x23, [sp, #168]
   275b8:	ldr	x20, [sp, #176]
   275bc:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   275c0:	ldr	x21, [sp, #152]
   275c4:	ldr	x22, [sp, #160]
   275c8:	ldr	x19, [sp, #168]
   275cc:	ldr	x20, [sp, #176]
   275d0:	ldr	x27, [sp, #184]
   275d4:	ldr	x26, [sp, #192]
   275d8:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   275dc:	ldr	x21, [sp, #152]
   275e0:	ldr	x22, [sp, #160]
   275e4:	ldr	x19, [sp, #168]
   275e8:	ldr	x20, [sp, #176]
   275ec:	ldr	x27, [sp, #184]
   275f0:	ldr	x26, [sp, #192]
   275f4:	b	26a58 <__sanitizer_set_death_callback@@Base+0x39e8>
   275f8:	ldr	x21, [sp, #152]
   275fc:	ldr	x22, [sp, #160]
   27600:	ldr	x19, [sp, #168]
   27604:	ldr	x28, [x25, #24]
   27608:	cbz	x28, 27548 <__sanitizer_set_death_callback@@Base+0x44d8>
   2760c:	ldr	x0, [sp, #176]
   27610:	cbz	x0, 27654 <__sanitizer_set_death_callback@@Base+0x45e4>
   27614:	mov	x3, x27
   27618:	ldr	x2, [sp, #128]
   2761c:	ldr	x25, [sp, #176]
   27620:	mov	x1, x25
   27624:	mov	x0, x24
   27628:	bl	6950 <__asan_backtrace_vector_finish@plt>
   2762c:	cbz	x0, 27548 <__sanitizer_set_death_callback@@Base+0x44d8>
   27630:	str	xzr, [x25, #24]
   27634:	mov	x21, x0
   27638:	adrp	x3, 26000 <__sanitizer_set_death_callback@@Base+0x2f90>
   2763c:	add	x3, x3, #0x6c
   27640:	mov	x2, #0x18                  	// #24
   27644:	mov	x1, x28
   27648:	mov	x0, x21
   2764c:	bl	63a0 <__asan_backtrace_qsort@plt>
   27650:	b	2754c <__sanitizer_set_death_callback@@Base+0x44dc>
   27654:	mov	x3, x27
   27658:	ldr	x2, [sp, #128]
   2765c:	add	x1, sp, #0x140
   27660:	mov	x0, x24
   27664:	bl	6600 <__asan_backtrace_vector_release@plt>
   27668:	cbz	w0, 27548 <__sanitizer_set_death_callback@@Base+0x44d8>
   2766c:	ldr	x21, [x25]
   27670:	b	27638 <__sanitizer_set_death_callback@@Base+0x45c8>
   27674:	add	x1, x22, #0x70
   27678:	ldr	x2, [sp, #144]
   2767c:	stlr	x2, [x1]
   27680:	add	x1, x22, #0x78
   27684:	stlr	x21, [x1]
   27688:	add	x1, x22, #0x80
   2768c:	stlr	x28, [x1]
   27690:	add	x22, x22, #0x68
   27694:	ldr	x1, [sp, #136]
   27698:	stlr	x1, [x22]
   2769c:	b	26acc <__sanitizer_set_death_callback@@Base+0x3a5c>
   276a0:	mov	x4, #0x0                   	// #0
   276a4:	mov	w3, #0x0                   	// #0
   276a8:	mov	x2, #0x0                   	// #0
   276ac:	mov	x1, x20
   276b0:	mov	x0, x27
   276b4:	ldr	x5, [sp, #120]
   276b8:	blr	x5
   276bc:	ldp	x19, x20, [sp, #32]
   276c0:	ldp	x21, x22, [sp, #48]
   276c4:	ldp	x27, x28, [sp, #96]
   276c8:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   276cc:	ldr	x21, [sp, #136]
   276d0:	b	27a00 <__sanitizer_set_death_callback@@Base+0x4990>
   276d4:	mov	x3, x1
   276d8:	cmp	x2, x3
   276dc:	b.cs	27928 <__sanitizer_set_death_callback@@Base+0x48b8>  // b.hs, b.nlast
   276e0:	add	x0, x2, x3
   276e4:	lsr	x1, x0, #1
   276e8:	and	x0, x0, #0xfffffffffffffffe
   276ec:	add	x0, x0, x1
   276f0:	add	x5, x21, x0, lsl #3
   276f4:	ldr	x0, [x21, x0, lsl #3]
   276f8:	cmp	x0, x20
   276fc:	b.hi	276d4 <__sanitizer_set_death_callback@@Base+0x4664>  // b.pmore
   27700:	ldr	x0, [x5, #24]
   27704:	cmp	x0, x20
   27708:	b.hi	27910 <__sanitizer_set_death_callback@@Base+0x48a0>  // b.pmore
   2770c:	add	x2, x1, #0x1
   27710:	b	276d8 <__sanitizer_set_death_callback@@Base+0x4668>
   27714:	ldr	x21, [x4, #64]
   27718:	cbz	x21, 2779c <__sanitizer_set_death_callback@@Base+0x472c>
   2771c:	ldrb	w0, [x21]
   27720:	cmp	w0, #0x2f
   27724:	b.eq	2779c <__sanitizer_set_death_callback@@Base+0x472c>  // b.none
   27728:	ldr	x0, [x4, #72]
   2772c:	cbz	x0, 2779c <__sanitizer_set_death_callback@@Base+0x472c>
   27730:	mov	x0, x21
   27734:	bl	64b0 <__asan_internal_strlen@plt>
   27738:	mov	x25, x0
   2773c:	ldr	x0, [x19, #16]
   27740:	ldr	x23, [x0, #72]
   27744:	mov	x0, x23
   27748:	bl	64b0 <__asan_internal_strlen@plt>
   2774c:	mov	x22, x0
   27750:	add	x1, x25, x0
   27754:	mov	x3, x27
   27758:	ldr	x2, [sp, #128]
   2775c:	add	x1, x1, #0x2
   27760:	mov	x0, x24
   27764:	bl	65b0 <__asan_backtrace_alloc@plt>
   27768:	mov	x24, x0
   2776c:	cbz	x0, 277a8 <__sanitizer_set_death_callback@@Base+0x4738>
   27770:	mov	x2, x22
   27774:	mov	x1, x23
   27778:	bl	64a0 <__asan_internal_memcpy@plt>
   2777c:	mov	w0, #0x2f                  	// #47
   27780:	strb	w0, [x24, x22]
   27784:	add	x0, x22, #0x1
   27788:	add	x2, x25, #0x1
   2778c:	mov	x1, x21
   27790:	add	x0, x24, x0
   27794:	bl	64a0 <__asan_internal_memcpy@plt>
   27798:	mov	x21, x24
   2779c:	ldr	x0, [x19, #16]
   277a0:	str	x21, [x0, #80]
   277a4:	b	27930 <__sanitizer_set_death_callback@@Base+0x48c0>
   277a8:	str	wzr, [x26]
   277ac:	mov	w0, #0x0                   	// #0
   277b0:	ldp	x19, x20, [sp, #32]
   277b4:	ldp	x21, x22, [sp, #48]
   277b8:	ldp	x27, x28, [sp, #96]
   277bc:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   277c0:	mov	x4, #0x0                   	// #0
   277c4:	ldr	w3, [x5, #16]
   277c8:	ldr	x2, [x5, #8]
   277cc:	mov	x1, x20
   277d0:	mov	x0, x27
   277d4:	ldr	x5, [sp, #120]
   277d8:	blr	x5
   277dc:	ldp	x19, x20, [sp, #32]
   277e0:	ldp	x21, x22, [sp, #48]
   277e4:	ldp	x27, x28, [sp, #96]
   277e8:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   277ec:	mov	x6, x2
   277f0:	cmp	x4, x6
   277f4:	b.cs	278e4 <__sanitizer_set_death_callback@@Base+0x4874>  // b.hs, b.nlast
   277f8:	add	x0, x4, x6
   277fc:	lsr	x2, x0, #1
   27800:	and	x0, x0, #0xfffffffffffffffe
   27804:	add	x0, x0, x2
   27808:	lsl	x1, x0, #3
   2780c:	mov	x7, x1
   27810:	add	x1, x3, x1
   27814:	ldr	x0, [x3, x0, lsl #3]
   27818:	cmp	x0, x20
   2781c:	b.hi	277ec <__sanitizer_set_death_callback@@Base+0x477c>  // b.pmore
   27820:	ldr	x0, [x1, #8]
   27824:	cmp	x0, x20
   27828:	b.hi	27834 <__sanitizer_set_death_callback@@Base+0x47c4>  // b.pmore
   2782c:	add	x4, x2, #0x1
   27830:	b	277f0 <__sanitizer_set_death_callback@@Base+0x4780>
   27834:	asr	x0, x7, #3
   27838:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2783c:	movk	x2, #0xaaab
   27840:	mul	x0, x0, x2
   27844:	add	x0, x0, #0x1
   27848:	cmp	x8, x0
   2784c:	b.ls	27884 <__sanitizer_set_death_callback@@Base+0x4814>  // b.plast
   27850:	ldr	x0, [x1, #24]
   27854:	cmp	x0, x20
   27858:	b.hi	27884 <__sanitizer_set_death_callback@@Base+0x4814>  // b.pmore
   2785c:	ldr	x0, [x1, #32]
   27860:	cmp	x0, x20
   27864:	b.ls	27884 <__sanitizer_set_death_callback@@Base+0x4814>  // b.plast
   27868:	add	x1, x1, #0x18
   2786c:	sub	x0, x1, x3
   27870:	asr	x0, x0, #3
   27874:	mul	x0, x0, x2
   27878:	add	x0, x0, #0x1
   2787c:	cmp	x8, x0
   27880:	b.hi	27850 <__sanitizer_set_death_callback@@Base+0x47e0>  // b.pmore
   27884:	ldr	x19, [x1, #16]
   27888:	ldr	x0, [x5, #8]
   2788c:	str	x0, [sp, #456]
   27890:	ldr	w0, [x5, #16]
   27894:	str	w0, [sp, #452]
   27898:	add	x5, sp, #0x1c4
   2789c:	add	x4, sp, #0x1c8
   278a0:	mov	x3, x27
   278a4:	ldr	x21, [sp, #120]
   278a8:	mov	x2, x21
   278ac:	mov	x1, x19
   278b0:	mov	x0, x20
   278b4:	bl	249ec <__sanitizer_set_death_callback@@Base+0x197c>
   278b8:	cbnz	w0, 27a10 <__sanitizer_set_death_callback@@Base+0x49a0>
   278bc:	ldr	x4, [x19]
   278c0:	ldr	w3, [sp, #452]
   278c4:	ldr	x2, [sp, #456]
   278c8:	mov	x1, x20
   278cc:	mov	x0, x27
   278d0:	blr	x21
   278d4:	ldp	x19, x20, [sp, #32]
   278d8:	ldp	x21, x22, [sp, #48]
   278dc:	ldp	x27, x28, [sp, #96]
   278e0:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   278e4:	mov	x4, #0x0                   	// #0
   278e8:	ldr	w3, [x5, #16]
   278ec:	ldr	x2, [x5, #8]
   278f0:	mov	x1, x20
   278f4:	mov	x0, x27
   278f8:	ldr	x5, [sp, #120]
   278fc:	blr	x5
   27900:	ldp	x19, x20, [sp, #32]
   27904:	ldp	x21, x22, [sp, #48]
   27908:	ldp	x27, x28, [sp, #96]
   2790c:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   27910:	ldr	x8, [x4, #128]
   27914:	cbz	x8, 277c0 <__sanitizer_set_death_callback@@Base+0x4750>
   27918:	ldr	x3, [x4, #120]
   2791c:	mov	x6, x8
   27920:	mov	x4, #0x0                   	// #0
   27924:	b	277f0 <__sanitizer_set_death_callback@@Base+0x4780>
   27928:	ldr	x0, [x4, #80]
   2792c:	cbz	x0, 27714 <__sanitizer_set_death_callback@@Base+0x46a4>
   27930:	ldr	x0, [x19, #16]
   27934:	mov	x4, #0x0                   	// #0
   27938:	mov	w3, #0x0                   	// #0
   2793c:	ldr	x2, [x0, #80]
   27940:	mov	x1, x20
   27944:	mov	x0, x27
   27948:	ldr	x5, [sp, #120]
   2794c:	blr	x5
   27950:	ldp	x19, x20, [sp, #32]
   27954:	ldp	x21, x22, [sp, #48]
   27958:	ldp	x27, x28, [sp, #96]
   2795c:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   27960:	ldr	x28, [x19, #16]
   27964:	add	x25, sp, #0x140
   27968:	mov	x2, #0x20                  	// #32
   2796c:	mov	w1, #0x0                   	// #0
   27970:	mov	x0, x25
   27974:	bl	6530 <__asan_internal_memset@plt>
   27978:	str	x21, [sp, #176]
   2797c:	b	274a8 <__sanitizer_set_death_callback@@Base+0x4438>
   27980:	stp	x21, x22, [sp, #48]
   27984:	mov	x19, x1
   27988:	asr	x0, x5, #3
   2798c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   27990:	movk	x5, #0xaaab
   27994:	mul	x0, x0, x5
   27998:	add	x0, x0, #0x1
   2799c:	mov	x1, x5
   279a0:	cmp	x6, x0
   279a4:	b.ls	279dc <__sanitizer_set_death_callback@@Base+0x496c>  // b.plast
   279a8:	ldr	x0, [x19, #24]
   279ac:	cmp	x0, x20
   279b0:	b.hi	279dc <__sanitizer_set_death_callback@@Base+0x496c>  // b.pmore
   279b4:	ldr	x0, [x19, #32]
   279b8:	cmp	x0, x20
   279bc:	b.ls	279dc <__sanitizer_set_death_callback@@Base+0x496c>  // b.plast
   279c0:	add	x19, x19, #0x18
   279c4:	sub	x0, x19, x2
   279c8:	asr	x0, x0, #3
   279cc:	mul	x0, x0, x1
   279d0:	add	x0, x0, #0x1
   279d4:	cmp	x6, x0
   279d8:	b.hi	279a8 <__sanitizer_set_death_callback@@Base+0x4938>  // b.pmore
   279dc:	ldr	x22, [x19, #16]
   279e0:	ldr	x21, [x22, #104]
   279e4:	cmp	x2, x19
   279e8:	b.cc	269d0 <__sanitizer_set_death_callback@@Base+0x3960>  // b.lo, b.ul, b.last
   279ec:	ldr	w0, [x24, #8]
   279f0:	cbnz	w0, 269f4 <__sanitizer_set_death_callback@@Base+0x3984>
   279f4:	cbz	x21, 26a00 <__sanitizer_set_death_callback@@Base+0x3990>
   279f8:	cmn	x21, #0x1
   279fc:	b.eq	276a0 <__sanitizer_set_death_callback@@Base+0x4630>  // b.none
   27a00:	ldr	x4, [x19, #16]
   27a04:	ldr	x3, [x4, #112]
   27a08:	mov	x2, #0x0                   	// #0
   27a0c:	b	276d8 <__sanitizer_set_death_callback@@Base+0x4668>
   27a10:	ldp	x19, x20, [sp, #32]
   27a14:	ldp	x21, x22, [sp, #48]
   27a18:	ldp	x27, x28, [sp, #96]
   27a1c:	b	26994 <__sanitizer_set_death_callback@@Base+0x3924>
   27a20:	stp	x29, x30, [sp, #-96]!
   27a24:	mov	x29, sp
   27a28:	stp	x19, x20, [sp, #16]
   27a2c:	stp	x21, x22, [sp, #32]
   27a30:	stp	x23, x24, [sp, #48]
   27a34:	mov	x20, x0
   27a38:	mov	x23, x1
   27a3c:	mov	x21, x2
   27a40:	mov	x24, x3
   27a44:	mov	x22, x4
   27a48:	ldr	w0, [x0, #8]
   27a4c:	cbnz	w0, 27a9c <__sanitizer_set_death_callback@@Base+0x4a2c>
   27a50:	ldr	x19, [x20, #32]
   27a54:	cbz	x19, 27ae8 <__sanitizer_set_death_callback@@Base+0x4a78>
   27a58:	str	x25, [sp, #64]
   27a5c:	add	x25, sp, #0x5c
   27a60:	mov	x6, x25
   27a64:	mov	x5, x22
   27a68:	mov	x4, x24
   27a6c:	mov	x3, x21
   27a70:	mov	x2, x23
   27a74:	mov	x1, x19
   27a78:	mov	x0, x20
   27a7c:	bl	268e4 <__sanitizer_set_death_callback@@Base+0x3874>
   27a80:	cbnz	w0, 27b14 <__sanitizer_set_death_callback@@Base+0x4aa4>
   27a84:	ldr	w1, [sp, #92]
   27a88:	cbnz	w1, 27b1c <__sanitizer_set_death_callback@@Base+0x4aac>
   27a8c:	ldr	x19, [x19]
   27a90:	cbnz	x19, 27a60 <__sanitizer_set_death_callback@@Base+0x49f0>
   27a94:	ldr	x25, [sp, #64]
   27a98:	b	27ae8 <__sanitizer_set_death_callback@@Base+0x4a78>
   27a9c:	str	x25, [sp, #64]
   27aa0:	add	x19, x20, #0x20
   27aa4:	add	x25, sp, #0x5c
   27aa8:	ldar	x19, [x19]
   27aac:	cbz	x19, 27ae4 <__sanitizer_set_death_callback@@Base+0x4a74>
   27ab0:	mov	x6, x25
   27ab4:	mov	x5, x22
   27ab8:	mov	x4, x24
   27abc:	mov	x3, x21
   27ac0:	mov	x2, x23
   27ac4:	mov	x1, x19
   27ac8:	mov	x0, x20
   27acc:	bl	268e4 <__sanitizer_set_death_callback@@Base+0x3874>
   27ad0:	cbnz	w0, 27b24 <__sanitizer_set_death_callback@@Base+0x4ab4>
   27ad4:	ldr	w1, [sp, #92]
   27ad8:	cbz	w1, 27aa8 <__sanitizer_set_death_callback@@Base+0x4a38>
   27adc:	ldr	x25, [sp, #64]
   27ae0:	b	27b00 <__sanitizer_set_death_callback@@Base+0x4a90>
   27ae4:	ldr	x25, [sp, #64]
   27ae8:	mov	x4, #0x0                   	// #0
   27aec:	mov	w3, #0x0                   	// #0
   27af0:	mov	x2, #0x0                   	// #0
   27af4:	mov	x1, x23
   27af8:	mov	x0, x22
   27afc:	blr	x21
   27b00:	ldp	x19, x20, [sp, #16]
   27b04:	ldp	x21, x22, [sp, #32]
   27b08:	ldp	x23, x24, [sp, #48]
   27b0c:	ldp	x29, x30, [sp], #96
   27b10:	ret
   27b14:	ldr	x25, [sp, #64]
   27b18:	b	27b00 <__sanitizer_set_death_callback@@Base+0x4a90>
   27b1c:	ldr	x25, [sp, #64]
   27b20:	b	27b00 <__sanitizer_set_death_callback@@Base+0x4a90>
   27b24:	ldr	x25, [sp, #64]
   27b28:	b	27b00 <__sanitizer_set_death_callback@@Base+0x4a90>

0000000000027b2c <__asan_backtrace_dwarf_add@@Base>:
   27b2c:	sub	sp, sp, #0x290
   27b30:	stp	x29, x30, [sp, #48]
   27b34:	add	x29, sp, #0x30
   27b38:	stp	x19, x20, [sp, #64]
   27b3c:	stp	x21, x22, [sp, #80]
   27b40:	stp	x23, x24, [sp, #96]
   27b44:	stp	x25, x26, [sp, #112]
   27b48:	stp	x27, x28, [sp, #128]
   27b4c:	mov	x25, x0
   27b50:	str	x1, [sp, #200]
   27b54:	mov	x19, x2
   27b58:	str	x2, [sp, #256]
   27b5c:	mov	x20, x3
   27b60:	str	x3, [sp, #264]
   27b64:	str	x4, [sp, #272]
   27b68:	str	x5, [sp, #280]
   27b6c:	str	x6, [sp, #208]
   27b70:	str	x7, [sp, #168]
   27b74:	ldr	x24, [sp, #704]
   27b78:	ldr	x28, [sp, #712]
   27b7c:	mov	x2, #0x18                  	// #24
   27b80:	mov	w1, #0x0                   	// #0
   27b84:	add	x0, sp, #0x150
   27b88:	bl	6530 <__asan_internal_memset@plt>
   27b8c:	mov	x2, #0x18                  	// #24
   27b90:	mov	w1, #0x0                   	// #0
   27b94:	add	x0, sp, #0x170
   27b98:	bl	6530 <__asan_internal_memset@plt>
   27b9c:	str	xzr, [sp, #360]
   27ba0:	str	xzr, [sp, #392]
   27ba4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   27ba8:	add	x0, x0, #0x2a8
   27bac:	str	x0, [sp, #400]
   27bb0:	str	x19, [sp, #408]
   27bb4:	str	x19, [sp, #416]
   27bb8:	str	x20, [sp, #424]
   27bbc:	ldr	w0, [sp, #688]
   27bc0:	str	w0, [sp, #432]
   27bc4:	str	x24, [sp, #440]
   27bc8:	str	x28, [sp, #448]
   27bcc:	str	wzr, [sp, #456]
   27bd0:	mov	x2, #0x18                  	// #24
   27bd4:	mov	w1, #0x0                   	// #0
   27bd8:	add	x0, sp, #0x138
   27bdc:	bl	6530 <__asan_internal_memset@plt>
   27be0:	ldr	x0, [sp, #424]
   27be4:	str	x0, [sp, #160]
   27be8:	cbz	x0, 283f0 <__asan_backtrace_dwarf_add@@Base+0x8c4>
   27bec:	str	xzr, [sp, #176]
   27bf0:	str	xzr, [sp, #160]
   27bf4:	add	x27, sp, #0x190
   27bf8:	add	x0, sp, #0x138
   27bfc:	str	x0, [sp, #216]
   27c00:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   27c04:	add	x0, x0, #0x4a0
   27c08:	str	x0, [sp, #224]
   27c0c:	add	x0, sp, #0x150
   27c10:	str	x0, [sp, #232]
   27c14:	mov	x26, x25
   27c18:	mov	x23, x24
   27c1c:	mov	x24, x28
   27c20:	b	27e38 <__asan_backtrace_dwarf_add@@Base+0x30c>
   27c24:	mov	x0, x27
   27c28:	bl	24fe8 <__sanitizer_set_death_callback@@Base+0x1f78>
   27c2c:	str	x0, [sp, #152]
   27c30:	mov	w28, #0x1                   	// #1
   27c34:	b	27e64 <__asan_backtrace_dwarf_add@@Base+0x338>
   27c38:	mov	x25, x26
   27c3c:	mov	x28, x24
   27c40:	mov	x24, x23
   27c44:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   27c48:	add	x1, x1, #0x460
   27c4c:	add	x0, sp, #0x1d0
   27c50:	bl	24ea0 <__sanitizer_set_death_callback@@Base+0x1e30>
   27c54:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   27c58:	mov	x25, x26
   27c5c:	mov	x28, x24
   27c60:	mov	x24, x23
   27c64:	mov	w2, #0x0                   	// #0
   27c68:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   27c6c:	add	x1, x1, #0x480
   27c70:	mov	x0, x28
   27c74:	blr	x23
   27c78:	ldr	x0, [sp, #160]
   27c7c:	cbz	x0, 27cec <__asan_backtrace_dwarf_add@@Base+0x1c0>
   27c80:	ldr	x19, [sp, #312]
   27c84:	add	x21, x19, x0, lsl #3
   27c88:	mov	x20, #0x88                  	// #136
   27c8c:	ldr	x1, [x19]
   27c90:	mov	x3, x28
   27c94:	mov	x2, x24
   27c98:	add	x1, x1, #0x58
   27c9c:	mov	x0, x25
   27ca0:	bl	2684c <__sanitizer_set_death_callback@@Base+0x37dc>
   27ca4:	mov	x4, x28
   27ca8:	mov	x3, x24
   27cac:	mov	x2, x20
   27cb0:	ldr	x1, [x19], #8
   27cb4:	mov	x0, x25
   27cb8:	bl	6890 <__asan_backtrace_free@plt>
   27cbc:	cmp	x19, x21
   27cc0:	b.ne	27c8c <__asan_backtrace_dwarf_add@@Base+0x160>  // b.any
   27cc4:	ldr	x0, [sp, #328]
   27cc8:	ldr	x1, [sp, #320]
   27ccc:	add	x0, x0, x1
   27cd0:	str	x0, [sp, #328]
   27cd4:	str	xzr, [sp, #320]
   27cd8:	mov	x3, x28
   27cdc:	mov	x2, x24
   27ce0:	add	x1, sp, #0x138
   27ce4:	mov	x0, x25
   27ce8:	bl	6600 <__asan_backtrace_vector_release@plt>
   27cec:	ldr	x0, [sp, #360]
   27cf0:	cbnz	x0, 2837c <__asan_backtrace_dwarf_add@@Base+0x850>
   27cf4:	mov	w0, #0x0                   	// #0
   27cf8:	b	282dc <__asan_backtrace_dwarf_add@@Base+0x7b0>
   27cfc:	mov	x0, x20
   27d00:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27d04:	mov	x0, x20
   27d08:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27d0c:	cbz	x0, 27d44 <__asan_backtrace_dwarf_add@@Base+0x218>
   27d10:	ldr	w0, [sp, #648]
   27d14:	cbnz	w0, 2833c <__asan_backtrace_dwarf_add@@Base+0x810>
   27d18:	add	x21, x21, #0x1
   27d1c:	mov	x0, x20
   27d20:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27d24:	mov	x0, x20
   27d28:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   27d2c:	mov	x0, x20
   27d30:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27d34:	cbz	x0, 27cfc <__asan_backtrace_dwarf_add@@Base+0x1d0>
   27d38:	mov	x0, x20
   27d3c:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   27d40:	b	27d2c <__asan_backtrace_dwarf_add@@Base+0x200>
   27d44:	mov	x22, x0
   27d48:	str	x0, [sp, #192]
   27d4c:	ldr	w0, [sp, #648]
   27d50:	cbnz	w0, 2834c <__asan_backtrace_dwarf_add@@Base+0x820>
   27d54:	cbnz	x21, 27fa8 <__asan_backtrace_dwarf_add@@Base+0x47c>
   27d58:	add	x0, sp, #0x1d0
   27d5c:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   27d60:	and	w2, w0, #0xff
   27d64:	ldr	x3, [sp, #176]
   27d68:	str	x3, [x19, #24]
   27d6c:	cmp	w28, #0x0
   27d70:	mov	x0, #0xc                   	// #12
   27d74:	mov	x1, #0x4                   	// #4
   27d78:	csel	x0, x0, x1, ne  // ne = any
   27d7c:	ldr	x1, [sp, #152]
   27d80:	add	x0, x0, x1
   27d84:	add	x0, x3, x0
   27d88:	str	x0, [sp, #176]
   27d8c:	str	x0, [x19, #32]
   27d90:	ldr	x1, [sp, #480]
   27d94:	str	x1, [x19]
   27d98:	ldr	x0, [sp, #488]
   27d9c:	str	x0, [x19, #8]
   27da0:	ldr	x0, [sp, #184]
   27da4:	sub	x1, x1, x0
   27da8:	str	x1, [x19, #16]
   27dac:	ldr	w0, [sp, #288]
   27db0:	str	w0, [x19, #40]
   27db4:	str	w28, [x19, #44]
   27db8:	str	w2, [x19, #48]
   27dbc:	str	xzr, [x19, #64]
   27dc0:	str	xzr, [x19, #72]
   27dc4:	str	xzr, [x19, #80]
   27dc8:	str	xzr, [x19, #56]
   27dcc:	str	xzr, [x19, #104]
   27dd0:	str	xzr, [x19, #112]
   27dd4:	str	xzr, [x19, #120]
   27dd8:	str	xzr, [x19, #128]
   27ddc:	add	x0, sp, #0x250
   27de0:	str	x0, [sp, #40]
   27de4:	ldr	x0, [sp, #232]
   27de8:	str	x0, [sp, #32]
   27dec:	str	x19, [sp, #24]
   27df0:	str	x24, [sp, #16]
   27df4:	str	x23, [sp, #8]
   27df8:	ldr	x0, [sp, #696]
   27dfc:	str	x0, [sp]
   27e00:	ldr	w7, [sp, #688]
   27e04:	ldr	x6, [sp, #664]
   27e08:	ldr	x5, [sp, #656]
   27e0c:	ldr	x4, [sp, #680]
   27e10:	ldr	x3, [sp, #672]
   27e14:	add	x2, sp, #0x1d0
   27e18:	ldr	x1, [sp, #200]
   27e1c:	mov	x0, x26
   27e20:	bl	25bc8 <__sanitizer_set_death_callback@@Base+0x2b58>
   27e24:	cbz	w0, 283e0 <__asan_backtrace_dwarf_add@@Base+0x8b4>
   27e28:	ldr	w0, [sp, #520]
   27e2c:	cbnz	w0, 2836c <__asan_backtrace_dwarf_add@@Base+0x840>
   27e30:	ldr	x0, [sp, #424]
   27e34:	cbz	x0, 28178 <__asan_backtrace_dwarf_add@@Base+0x64c>
   27e38:	ldr	w28, [sp, #456]
   27e3c:	cbnz	w28, 282fc <__asan_backtrace_dwarf_add@@Base+0x7d0>
   27e40:	ldr	x0, [sp, #416]
   27e44:	str	x0, [sp, #184]
   27e48:	mov	x0, x27
   27e4c:	bl	24f68 <__sanitizer_set_death_callback@@Base+0x1ef8>
   27e50:	mov	w1, w0
   27e54:	str	x1, [sp, #152]
   27e58:	mov	x1, #0xffffffff            	// #4294967295
   27e5c:	cmp	x1, w0, uxtw
   27e60:	b.eq	27c24 <__asan_backtrace_dwarf_add@@Base+0xf8>  // b.none
   27e64:	ldp	x0, x1, [x27]
   27e68:	stp	x0, x1, [sp, #464]
   27e6c:	ldp	x0, x1, [x27, #16]
   27e70:	stp	x0, x1, [sp, #480]
   27e74:	ldp	x0, x1, [x27, #32]
   27e78:	stp	x0, x1, [sp, #496]
   27e7c:	ldp	x0, x1, [x27, #48]
   27e80:	add	x2, sp, #0x200
   27e84:	stp	x0, x1, [x2]
   27e88:	ldr	x0, [sp, #152]
   27e8c:	str	x0, [sp, #488]
   27e90:	mov	x1, x0
   27e94:	mov	x0, x27
   27e98:	bl	24efc <__sanitizer_set_death_callback@@Base+0x1e8c>
   27e9c:	cbz	w0, 2830c <__asan_backtrace_dwarf_add@@Base+0x7e0>
   27ea0:	add	x0, sp, #0x1d0
   27ea4:	bl	250dc <__sanitizer_set_death_callback@@Base+0x206c>
   27ea8:	and	w0, w0, #0xffff
   27eac:	str	w0, [sp, #288]
   27eb0:	sub	w0, w0, #0x2
   27eb4:	cmp	w0, #0x2
   27eb8:	b.hi	27c38 <__asan_backtrace_dwarf_add@@Base+0x10c>  // b.pmore
   27ebc:	ldr	x4, [sp, #216]
   27ec0:	mov	x3, x24
   27ec4:	mov	x2, x23
   27ec8:	mov	x1, #0x8                   	// #8
   27ecc:	mov	x0, x26
   27ed0:	bl	6510 <__asan_backtrace_vector_grow@plt>
   27ed4:	mov	x20, x0
   27ed8:	cbz	x0, 2831c <__asan_backtrace_dwarf_add@@Base+0x7f0>
   27edc:	mov	x3, x24
   27ee0:	mov	x2, x23
   27ee4:	mov	x1, #0x88                  	// #136
   27ee8:	mov	x0, x26
   27eec:	bl	65b0 <__asan_backtrace_alloc@plt>
   27ef0:	mov	x19, x0
   27ef4:	cbz	x0, 2832c <__asan_backtrace_dwarf_add@@Base+0x800>
   27ef8:	str	x0, [x20]
   27efc:	ldr	x0, [sp, #160]
   27f00:	add	x0, x0, #0x1
   27f04:	str	x0, [sp, #160]
   27f08:	add	x0, x19, #0x58
   27f0c:	str	x0, [sp, #240]
   27f10:	mov	x2, #0x10                  	// #16
   27f14:	mov	w1, #0x0                   	// #0
   27f18:	bl	6530 <__asan_internal_memset@plt>
   27f1c:	mov	w1, w28
   27f20:	add	x0, sp, #0x1d0
   27f24:	bl	250b8 <__sanitizer_set_death_callback@@Base+0x2048>
   27f28:	str	xzr, [x19, #88]
   27f2c:	str	xzr, [x19, #96]
   27f30:	ldr	x1, [sp, #168]
   27f34:	cmp	x1, x0
   27f38:	b.ls	27c58 <__asan_backtrace_dwarf_add@@Base+0x12c>  // b.plast
   27f3c:	ldr	x1, [sp, #224]
   27f40:	str	x1, [sp, #528]
   27f44:	ldr	x1, [sp, #208]
   27f48:	str	x1, [sp, #536]
   27f4c:	add	x1, x1, x0
   27f50:	str	x1, [sp, #544]
   27f54:	ldr	x1, [sp, #168]
   27f58:	sub	x0, x1, x0
   27f5c:	str	x0, [sp, #552]
   27f60:	ldr	w0, [sp, #688]
   27f64:	str	w0, [sp, #560]
   27f68:	str	x23, [sp, #568]
   27f6c:	str	x24, [sp, #576]
   27f70:	str	wzr, [sp, #584]
   27f74:	add	x0, sp, #0x200
   27f78:	ldp	x0, x1, [x0, #16]
   27f7c:	add	x2, sp, #0x200
   27f80:	stp	x0, x1, [x2, #80]
   27f84:	ldp	x0, x1, [x2, #32]
   27f88:	stp	x0, x1, [x2, #96]
   27f8c:	ldp	x0, x1, [x2, #48]
   27f90:	stp	x0, x1, [x2, #112]
   27f94:	ldp	x0, x1, [x2, #64]
   27f98:	stp	x0, x1, [x2, #128]
   27f9c:	mov	x21, #0x0                   	// #0
   27fa0:	add	x20, sp, #0x250
   27fa4:	b	27d04 <__asan_backtrace_dwarf_add@@Base+0x1d8>
   27fa8:	lsl	x20, x21, #5
   27fac:	mov	x3, x24
   27fb0:	mov	x2, x23
   27fb4:	mov	x1, x20
   27fb8:	mov	x0, x26
   27fbc:	bl	65b0 <__asan_backtrace_alloc@plt>
   27fc0:	str	x0, [x19, #96]
   27fc4:	cbz	x0, 2835c <__asan_backtrace_dwarf_add@@Base+0x830>
   27fc8:	str	x21, [x19, #88]
   27fcc:	mov	x2, x20
   27fd0:	mov	w1, #0x0                   	// #0
   27fd4:	bl	6530 <__asan_internal_memset@plt>
   27fd8:	ldr	w0, [sp, #584]
   27fdc:	cbnz	w0, 28128 <__asan_backtrace_dwarf_add@@Base+0x5fc>
   27fe0:	add	x20, sp, #0x210
   27fe4:	str	w28, [sp, #292]
   27fe8:	str	x26, [sp, #248]
   27fec:	mov	x26, x22
   27ff0:	str	x23, [sp, #704]
   27ff4:	str	x24, [sp, #712]
   27ff8:	str	x27, [sp, #296]
   27ffc:	b	2805c <__asan_backtrace_dwarf_add@@Base+0x530>
   28000:	add	x21, x21, #0x1
   28004:	mov	x0, x22
   28008:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   2800c:	mov	x0, x22
   28010:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   28014:	mov	x24, x0
   28018:	cbnz	x0, 28000 <__asan_backtrace_dwarf_add@@Base+0x4d4>
   2801c:	cbnz	x21, 280b4 <__asan_backtrace_dwarf_add@@Base+0x588>
   28020:	mov	x0, x20
   28024:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   28028:	mov	x0, x20
   2802c:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   28030:	mov	x22, #0x0                   	// #0
   28034:	ldr	x1, [x19, #96]
   28038:	add	x0, x1, x26
   2803c:	str	x23, [x1, x26]
   28040:	str	w28, [x0, #8]
   28044:	str	w27, [x0, #12]
   28048:	str	x21, [x0, #16]
   2804c:	str	x22, [x0, #24]
   28050:	add	x26, x26, #0x20
   28054:	ldr	w0, [sp, #584]
   28058:	cbnz	w0, 28104 <__asan_backtrace_dwarf_add@@Base+0x5d8>
   2805c:	mov	x0, x20
   28060:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   28064:	mov	x23, x0
   28068:	cbz	x0, 28148 <__asan_backtrace_dwarf_add@@Base+0x61c>
   2806c:	mov	x0, x20
   28070:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   28074:	mov	x28, x0
   28078:	mov	x0, x20
   2807c:	bl	25134 <__sanitizer_set_death_callback@@Base+0x20c4>
   28080:	and	w27, w0, #0xff
   28084:	ldp	x0, x1, [x20]
   28088:	add	x2, sp, #0x200
   2808c:	stp	x0, x1, [x2, #80]
   28090:	ldp	x0, x1, [x20, #16]
   28094:	stp	x0, x1, [x2, #96]
   28098:	ldp	x0, x1, [x20, #32]
   2809c:	stp	x0, x1, [x2, #112]
   280a0:	ldp	x0, x1, [x20, #48]
   280a4:	stp	x0, x1, [x2, #128]
   280a8:	ldr	x21, [sp, #192]
   280ac:	add	x22, sp, #0x250
   280b0:	b	2800c <__asan_backtrace_dwarf_add@@Base+0x4e0>
   280b4:	ldr	x3, [sp, #712]
   280b8:	ldr	x2, [sp, #704]
   280bc:	lsl	x1, x21, #3
   280c0:	ldr	x0, [sp, #248]
   280c4:	bl	65b0 <__asan_backtrace_alloc@plt>
   280c8:	mov	x22, x0
   280cc:	cbz	x0, 28138 <__asan_backtrace_dwarf_add@@Base+0x60c>
   280d0:	mov	x25, x0
   280d4:	mov	x21, x24
   280d8:	mov	x0, x20
   280dc:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   280e0:	mov	x24, x0
   280e4:	mov	x0, x20
   280e8:	bl	25168 <__sanitizer_set_death_callback@@Base+0x20f8>
   280ec:	cbz	x24, 28034 <__asan_backtrace_dwarf_add@@Base+0x508>
   280f0:	str	w24, [x25]
   280f4:	str	w0, [x25, #4]
   280f8:	add	x21, x21, #0x1
   280fc:	add	x25, x25, #0x8
   28100:	b	280d8 <__asan_backtrace_dwarf_add@@Base+0x5ac>
   28104:	ldr	x25, [sp, #248]
   28108:	ldr	x24, [sp, #704]
   2810c:	ldr	x28, [sp, #712]
   28110:	mov	x3, x28
   28114:	mov	x2, x24
   28118:	ldr	x1, [sp, #240]
   2811c:	mov	x0, x25
   28120:	bl	2684c <__sanitizer_set_death_callback@@Base+0x37dc>
   28124:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   28128:	mov	x25, x26
   2812c:	mov	x28, x24
   28130:	mov	x24, x23
   28134:	b	28110 <__asan_backtrace_dwarf_add@@Base+0x5e4>
   28138:	ldr	x25, [sp, #248]
   2813c:	ldr	x24, [sp, #704]
   28140:	ldr	x28, [sp, #712]
   28144:	b	28110 <__asan_backtrace_dwarf_add@@Base+0x5e4>
   28148:	ldr	w28, [sp, #292]
   2814c:	ldr	x26, [sp, #248]
   28150:	ldr	x23, [sp, #704]
   28154:	ldr	x24, [sp, #712]
   28158:	ldr	x27, [sp, #296]
   2815c:	adrp	x3, 24000 <__sanitizer_set_death_callback@@Base+0xf90>
   28160:	add	x3, x3, #0x9cc
   28164:	mov	x2, #0x20                  	// #32
   28168:	ldr	x1, [x19, #88]
   2816c:	ldr	x0, [x19, #96]
   28170:	bl	63a0 <__asan_backtrace_qsort@plt>
   28174:	b	27d58 <__asan_backtrace_dwarf_add@@Base+0x22c>
   28178:	mov	x25, x26
   2817c:	mov	x28, x24
   28180:	mov	x24, x23
   28184:	ldr	w0, [sp, #456]
   28188:	cbnz	w0, 27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2818c:	add	x0, sp, #0x200
   28190:	ldp	x0, x1, [x0, #-200]
   28194:	stp	x0, x1, [sp, #368]
   28198:	ldr	x0, [sp, #328]
   2819c:	str	x0, [sp, #384]
   281a0:	ldr	x0, [sp, #160]
   281a4:	str	x0, [sp, #392]
   281a8:	mov	x3, x28
   281ac:	mov	x2, x24
   281b0:	add	x1, sp, #0x150
   281b4:	mov	x0, x25
   281b8:	bl	6600 <__asan_backtrace_vector_release@plt>
   281bc:	cbz	w0, 27cf4 <__asan_backtrace_dwarf_add@@Base+0x1c8>
   281c0:	mov	x3, x28
   281c4:	mov	x2, x24
   281c8:	add	x1, sp, #0x170
   281cc:	mov	x0, x25
   281d0:	bl	6600 <__asan_backtrace_vector_release@plt>
   281d4:	cbz	w0, 27cf4 <__asan_backtrace_dwarf_add@@Base+0x1c8>
   281d8:	ldr	x20, [sp, #336]
   281dc:	ldr	x22, [sp, #368]
   281e0:	ldr	x19, [sp, #360]
   281e4:	ldr	x21, [sp, #392]
   281e8:	adrp	x3, 24000 <__sanitizer_set_death_callback@@Base+0xf90>
   281ec:	add	x3, x3, #0x934
   281f0:	mov	x2, #0x18                  	// #24
   281f4:	mov	x1, x19
   281f8:	mov	x0, x20
   281fc:	bl	63a0 <__asan_backtrace_qsort@plt>
   28200:	mov	x3, x28
   28204:	mov	x2, x24
   28208:	mov	x1, #0xa0                  	// #160
   2820c:	mov	x0, x25
   28210:	bl	65b0 <__asan_backtrace_alloc@plt>
   28214:	mov	x23, x0
   28218:	cbz	x0, 27cf4 <__asan_backtrace_dwarf_add@@Base+0x1c8>
   2821c:	str	xzr, [x0]
   28220:	ldr	x0, [sp, #696]
   28224:	str	x0, [x23, #8]
   28228:	ldr	x0, [sp, #200]
   2822c:	str	x0, [x23, #16]
   28230:	str	x20, [x23, #24]
   28234:	str	x19, [x23, #32]
   28238:	str	x22, [x23, #40]
   2823c:	str	x21, [x23, #48]
   28240:	ldr	x0, [sp, #256]
   28244:	str	x0, [x23, #56]
   28248:	ldr	x0, [sp, #264]
   2824c:	str	x0, [x23, #64]
   28250:	ldr	x0, [sp, #272]
   28254:	str	x0, [x23, #72]
   28258:	ldr	x0, [sp, #280]
   2825c:	str	x0, [x23, #80]
   28260:	ldr	x0, [sp, #656]
   28264:	str	x0, [x23, #88]
   28268:	ldr	x0, [sp, #664]
   2826c:	str	x0, [x23, #96]
   28270:	ldr	x0, [sp, #672]
   28274:	str	x0, [x23, #104]
   28278:	ldr	x0, [sp, #680]
   2827c:	str	x0, [x23, #112]
   28280:	ldr	w0, [sp, #688]
   28284:	str	w0, [x23, #120]
   28288:	mov	x2, #0x20                  	// #32
   2828c:	mov	w1, #0x0                   	// #0
   28290:	add	x0, x23, #0x80
   28294:	bl	6530 <__asan_internal_memset@plt>
   28298:	ldr	x0, [sp, #728]
   2829c:	cbz	x0, 282a4 <__asan_backtrace_dwarf_add@@Base+0x778>
   282a0:	str	x23, [x0]
   282a4:	ldr	w0, [x25, #8]
   282a8:	add	x2, x25, #0x20
   282ac:	cbnz	w0, 283d8 <__asan_backtrace_dwarf_add@@Base+0x8ac>
   282b0:	ldr	x0, [x25, #32]
   282b4:	cbz	x0, 283a8 <__asan_backtrace_dwarf_add@@Base+0x87c>
   282b8:	mov	x1, x0
   282bc:	ldr	x0, [x0]
   282c0:	cbnz	x0, 282b8 <__asan_backtrace_dwarf_add@@Base+0x78c>
   282c4:	str	x23, [x1]
   282c8:	ldr	x1, [sp, #720]
   282cc:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x3f90>
   282d0:	add	x0, x0, #0xa20
   282d4:	str	x0, [x1]
   282d8:	mov	w0, #0x1                   	// #1
   282dc:	ldp	x19, x20, [sp, #64]
   282e0:	ldp	x21, x22, [sp, #80]
   282e4:	ldp	x23, x24, [sp, #96]
   282e8:	ldp	x25, x26, [sp, #112]
   282ec:	ldp	x27, x28, [sp, #128]
   282f0:	ldp	x29, x30, [sp, #48]
   282f4:	add	sp, sp, #0x290
   282f8:	ret
   282fc:	mov	x25, x26
   28300:	mov	x28, x24
   28304:	mov	x24, x23
   28308:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2830c:	mov	x25, x26
   28310:	mov	x28, x24
   28314:	mov	x24, x23
   28318:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2831c:	mov	x25, x26
   28320:	mov	x28, x24
   28324:	mov	x24, x23
   28328:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2832c:	mov	x25, x26
   28330:	mov	x28, x24
   28334:	mov	x24, x23
   28338:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2833c:	mov	x25, x26
   28340:	mov	x28, x24
   28344:	mov	x24, x23
   28348:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2834c:	mov	x25, x26
   28350:	mov	x28, x24
   28354:	mov	x24, x23
   28358:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2835c:	mov	x25, x26
   28360:	mov	x28, x24
   28364:	mov	x24, x23
   28368:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2836c:	mov	x25, x26
   28370:	mov	x28, x24
   28374:	mov	x24, x23
   28378:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2837c:	ldr	x0, [sp, #352]
   28380:	ldr	x1, [sp, #344]
   28384:	add	x0, x0, x1
   28388:	str	x0, [sp, #352]
   2838c:	str	xzr, [sp, #344]
   28390:	mov	x3, x28
   28394:	mov	x2, x24
   28398:	add	x1, sp, #0x150
   2839c:	mov	x0, x25
   283a0:	bl	6600 <__asan_backtrace_vector_release@plt>
   283a4:	b	27cf4 <__asan_backtrace_dwarf_add@@Base+0x1c8>
   283a8:	add	x1, x25, #0x20
   283ac:	b	282c4 <__asan_backtrace_dwarf_add@@Base+0x798>
   283b0:	mov	x1, x0
   283b4:	ldar	x0, [x1]
   283b8:	cbnz	x0, 283b0 <__asan_backtrace_dwarf_add@@Base+0x884>
   283bc:	ldxr	x0, [x1]
   283c0:	cbnz	x0, 283cc <__asan_backtrace_dwarf_add@@Base+0x8a0>
   283c4:	stlxr	w3, x23, [x1]
   283c8:	cbnz	w3, 283bc <__asan_backtrace_dwarf_add@@Base+0x890>
   283cc:	cmp	x0, #0x0
   283d0:	dmb	ish
   283d4:	b.eq	282c8 <__asan_backtrace_dwarf_add@@Base+0x79c>  // b.none
   283d8:	mov	x1, x2
   283dc:	b	283b4 <__asan_backtrace_dwarf_add@@Base+0x888>
   283e0:	mov	x25, x26
   283e4:	mov	x28, x24
   283e8:	mov	x24, x23
   283ec:	b	27c78 <__asan_backtrace_dwarf_add@@Base+0x14c>
   283f0:	ldr	w0, [sp, #456]
   283f4:	cbz	w0, 2818c <__asan_backtrace_dwarf_add@@Base+0x660>
   283f8:	b	27cec <__asan_backtrace_dwarf_add@@Base+0x1c0>
   283fc:	stp	x29, x30, [sp, #-160]!
   28400:	mov	x29, sp
   28404:	stp	x19, x20, [sp, #16]
   28408:	stp	x21, x22, [sp, #32]
   2840c:	stp	x23, x24, [sp, #48]
   28410:	mov	x20, x0
   28414:	mov	x22, x1
   28418:	mov	x23, x2
   2841c:	ldr	w0, [x0, #8]
   28420:	cbnz	w0, 28454 <__asan_backtrace_dwarf_add@@Base+0x928>
   28424:	ldr	w0, [x20, #56]
   28428:	cbnz	w0, 28478 <__asan_backtrace_dwarf_add@@Base+0x94c>
   2842c:	ldr	x0, [x20, #24]
   28430:	str	x0, [sp, #152]
   28434:	ldr	x1, [sp, #152]
   28438:	mov	w0, #0x1                   	// #1
   2843c:	cbz	x1, 28494 <__asan_backtrace_dwarf_add@@Base+0x968>
   28440:	ldp	x19, x20, [sp, #16]
   28444:	ldp	x21, x22, [sp, #32]
   28448:	ldp	x23, x24, [sp, #48]
   2844c:	ldp	x29, x30, [sp], #160
   28450:	ret
   28454:	add	x0, x20, #0x38
   28458:	ldar	w0, [x0]
   2845c:	cbnz	w0, 28478 <__asan_backtrace_dwarf_add@@Base+0x94c>
   28460:	ldr	w0, [x20, #8]
   28464:	cbz	w0, 2842c <__asan_backtrace_dwarf_add@@Base+0x900>
   28468:	add	x0, x20, #0x18
   2846c:	ldar	x0, [x0]
   28470:	str	x0, [sp, #152]
   28474:	b	28434 <__asan_backtrace_dwarf_add@@Base+0x908>
   28478:	mov	w2, #0xffffffff            	// #-1
   2847c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   28480:	add	x1, x1, #0x508
   28484:	mov	x0, x23
   28488:	blr	x22
   2848c:	mov	w0, #0x0                   	// #0
   28490:	b	28440 <__asan_backtrace_dwarf_add@@Base+0x914>
   28494:	stp	x25, x26, [sp, #64]
   28498:	mov	w0, #0xffffffff            	// #-1
   2849c:	mov	w19, #0x0                   	// #0
   284a0:	add	x26, sp, #0x54
   284a4:	adrp	x25, 3c000 <__asan_backtrace_vector_release@@Base+0x5150>
   284a8:	add	x25, x25, #0x4d0
   284ac:	adrp	x24, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   284b0:	add	x24, x24, #0x4f0
   284b4:	b	284d4 <__asan_backtrace_dwarf_add@@Base+0x9a8>
   284b8:	cbz	w19, 28514 <__asan_backtrace_dwarf_add@@Base+0x9e8>
   284bc:	cmp	w19, #0x1
   284c0:	b.ne	28520 <__asan_backtrace_dwarf_add@@Base+0x9f4>  // b.any
   284c4:	mov	x21, #0x0                   	// #0
   284c8:	add	w19, w19, #0x1
   284cc:	cmp	w19, #0x5
   284d0:	b.eq	28580 <__asan_backtrace_dwarf_add@@Base+0xa54>  // b.none
   284d4:	cmp	w19, #0x2
   284d8:	b.eq	28524 <__asan_backtrace_dwarf_add@@Base+0x9f8>  // b.none
   284dc:	b.le	284b8 <__asan_backtrace_dwarf_add@@Base+0x98c>
   284e0:	cmp	w19, #0x3
   284e4:	b.eq	285b0 <__asan_backtrace_dwarf_add@@Base+0xa84>  // b.none
   284e8:	cmp	w19, #0x4
   284ec:	b.ne	28520 <__asan_backtrace_dwarf_add@@Base+0x9f4>  // b.any
   284f0:	bl	6670 <getpid@plt>
   284f4:	add	x21, sp, #0x58
   284f8:	sxtw	x3, w0
   284fc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   28500:	add	x2, x2, #0x530
   28504:	mov	x1, #0x40                  	// #64
   28508:	mov	x0, x21
   2850c:	bl	6700 <snprintf@plt>
   28510:	b	285b4 <__asan_backtrace_dwarf_add@@Base+0xa88>
   28514:	ldr	x21, [x20]
   28518:	cbz	x21, 284c4 <__asan_backtrace_dwarf_add@@Base+0x998>
   2851c:	b	285b4 <__asan_backtrace_dwarf_add@@Base+0xa88>
   28520:	bl	68b0 <abort@plt>
   28524:	mov	x21, x25
   28528:	b	285b4 <__asan_backtrace_dwarf_add@@Base+0xa88>
   2852c:	ldr	w1, [sp, #84]
   28530:	cbnz	w1, 284c8 <__asan_backtrace_dwarf_add@@Base+0x99c>
   28534:	b	28598 <__asan_backtrace_dwarf_add@@Base+0xa6c>
   28538:	mov	w2, #0x0                   	// #0
   2853c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   28540:	add	x1, x1, #0x548
   28544:	mov	x0, x23
   28548:	blr	x22
   2854c:	b	28598 <__asan_backtrace_dwarf_add@@Base+0xa6c>
   28550:	add	x20, x20, #0x38
   28554:	mov	w0, #0x1                   	// #1
   28558:	stlr	w0, [x20]
   2855c:	mov	w0, #0x0                   	// #0
   28560:	ldp	x25, x26, [sp, #64]
   28564:	b	28440 <__asan_backtrace_dwarf_add@@Base+0x914>
   28568:	add	x20, x20, #0x18
   2856c:	ldr	x0, [sp, #152]
   28570:	stlr	x0, [x20]
   28574:	mov	w0, #0x1                   	// #1
   28578:	ldp	x25, x26, [sp, #64]
   2857c:	b	28440 <__asan_backtrace_dwarf_add@@Base+0x914>
   28580:	tbz	w0, #31, 285cc <__asan_backtrace_dwarf_add@@Base+0xaa0>
   28584:	ldr	x1, [x20]
   28588:	cbz	x1, 28538 <__asan_backtrace_dwarf_add@@Base+0xa0c>
   2858c:	mov	w2, #0x2                   	// #2
   28590:	mov	x0, x23
   28594:	blr	x22
   28598:	ldr	w0, [x20, #8]
   2859c:	cbnz	w0, 28550 <__asan_backtrace_dwarf_add@@Base+0xa24>
   285a0:	mov	w1, #0x1                   	// #1
   285a4:	str	w1, [x20, #56]
   285a8:	ldp	x25, x26, [sp, #64]
   285ac:	b	28440 <__asan_backtrace_dwarf_add@@Base+0x914>
   285b0:	mov	x21, x24
   285b4:	mov	x3, x26
   285b8:	mov	x2, x23
   285bc:	mov	x1, x22
   285c0:	mov	x0, x21
   285c4:	bl	6a30 <__asan_backtrace_open@plt>
   285c8:	tbnz	w0, #31, 2852c <__asan_backtrace_dwarf_add@@Base+0xa00>
   285cc:	add	x5, sp, #0x98
   285d0:	mov	x4, x23
   285d4:	mov	x3, x22
   285d8:	mov	w2, w0
   285dc:	mov	x1, x21
   285e0:	mov	x0, x20
   285e4:	bl	68d0 <__asan_backtrace_initialize@plt>
   285e8:	cbz	w0, 28598 <__asan_backtrace_dwarf_add@@Base+0xa6c>
   285ec:	ldr	w0, [x20, #8]
   285f0:	cbnz	w0, 28568 <__asan_backtrace_dwarf_add@@Base+0xa3c>
   285f4:	ldr	x0, [sp, #152]
   285f8:	str	x0, [x20, #24]
   285fc:	mov	w0, #0x1                   	// #1
   28600:	ldp	x25, x26, [sp, #64]
   28604:	b	28440 <__asan_backtrace_dwarf_add@@Base+0x914>

0000000000028608 <__asan_backtrace_pcinfo@@Base>:
   28608:	stp	x29, x30, [sp, #-64]!
   2860c:	mov	x29, sp
   28610:	stp	x19, x20, [sp, #16]
   28614:	stp	x21, x22, [sp, #32]
   28618:	str	x23, [sp, #48]
   2861c:	mov	x19, x0
   28620:	mov	x23, x1
   28624:	mov	x22, x2
   28628:	mov	x20, x3
   2862c:	mov	x21, x4
   28630:	mov	x2, x4
   28634:	mov	x1, x3
   28638:	bl	283fc <__asan_backtrace_dwarf_add@@Base+0x8d0>
   2863c:	cbz	w0, 28668 <__asan_backtrace_pcinfo@@Base+0x60>
   28640:	ldr	w1, [x19, #56]
   28644:	mov	w0, #0x0                   	// #0
   28648:	cbnz	w1, 28668 <__asan_backtrace_pcinfo@@Base+0x60>
   2864c:	ldr	x5, [x19, #24]
   28650:	mov	x4, x21
   28654:	mov	x3, x20
   28658:	mov	x2, x22
   2865c:	mov	x1, x23
   28660:	mov	x0, x19
   28664:	blr	x5
   28668:	ldp	x19, x20, [sp, #16]
   2866c:	ldp	x21, x22, [sp, #32]
   28670:	ldr	x23, [sp, #48]
   28674:	ldp	x29, x30, [sp], #64
   28678:	ret

000000000002867c <__asan_backtrace_syminfo@@Base>:
   2867c:	stp	x29, x30, [sp, #-64]!
   28680:	mov	x29, sp
   28684:	stp	x19, x20, [sp, #16]
   28688:	stp	x21, x22, [sp, #32]
   2868c:	str	x23, [sp, #48]
   28690:	mov	x19, x0
   28694:	mov	x23, x1
   28698:	mov	x22, x2
   2869c:	mov	x20, x3
   286a0:	mov	x21, x4
   286a4:	mov	x2, x4
   286a8:	mov	x1, x3
   286ac:	bl	283fc <__asan_backtrace_dwarf_add@@Base+0x8d0>
   286b0:	cbz	w0, 286e0 <__asan_backtrace_syminfo@@Base+0x64>
   286b4:	ldr	w1, [x19, #56]
   286b8:	mov	w0, #0x0                   	// #0
   286bc:	cbnz	w1, 286e0 <__asan_backtrace_syminfo@@Base+0x64>
   286c0:	ldr	x5, [x19, #40]
   286c4:	mov	x4, x21
   286c8:	mov	x3, x20
   286cc:	mov	x2, x22
   286d0:	mov	x1, x23
   286d4:	mov	x0, x19
   286d8:	blr	x5
   286dc:	mov	w0, #0x1                   	// #1
   286e0:	ldp	x19, x20, [sp, #16]
   286e4:	ldp	x21, x22, [sp, #32]
   286e8:	ldr	x23, [sp, #48]
   286ec:	ldp	x29, x30, [sp], #64
   286f0:	ret

00000000000286f4 <__asan_backtrace_open@@Base>:
   286f4:	stp	x29, x30, [sp, #-64]!
   286f8:	mov	x29, sp
   286fc:	stp	x19, x20, [sp, #16]
   28700:	stp	x21, x22, [sp, #32]
   28704:	str	x23, [sp, #48]
   28708:	mov	x21, x0
   2870c:	mov	x23, x1
   28710:	mov	x22, x2
   28714:	cbz	x3, 28794 <__asan_backtrace_open@@Base+0xa0>
   28718:	mov	x20, x3
   2871c:	str	wzr, [x3]
   28720:	mov	w1, #0x80000               	// #524288
   28724:	bl	64c0 <open@plt>
   28728:	mov	w19, w0
   2872c:	tbnz	w0, #31, 28758 <__asan_backtrace_open@@Base+0x64>
   28730:	mov	w2, #0x1                   	// #1
   28734:	mov	w1, #0x2                   	// #2
   28738:	mov	w0, w19
   2873c:	bl	69b0 <fcntl@plt>
   28740:	mov	w0, w19
   28744:	ldp	x19, x20, [sp, #16]
   28748:	ldp	x21, x22, [sp, #32]
   2874c:	ldr	x23, [sp, #48]
   28750:	ldp	x29, x30, [sp], #64
   28754:	ret
   28758:	bl	6790 <__errno_location@plt>
   2875c:	ldr	w0, [x0]
   28760:	cmp	w0, #0x2
   28764:	b.eq	28784 <__asan_backtrace_open@@Base+0x90>  // b.none
   28768:	bl	6790 <__errno_location@plt>
   2876c:	ldr	w2, [x0]
   28770:	mov	x1, x21
   28774:	mov	x0, x22
   28778:	blr	x23
   2877c:	mov	w19, #0xffffffff            	// #-1
   28780:	b	28740 <__asan_backtrace_open@@Base+0x4c>
   28784:	mov	w0, #0x1                   	// #1
   28788:	str	w0, [x20]
   2878c:	mov	w19, #0xffffffff            	// #-1
   28790:	b	28740 <__asan_backtrace_open@@Base+0x4c>
   28794:	mov	w1, #0x80000               	// #524288
   28798:	bl	64c0 <open@plt>
   2879c:	mov	w19, w0
   287a0:	tbz	w0, #31, 28730 <__asan_backtrace_open@@Base+0x3c>
   287a4:	b	28768 <__asan_backtrace_open@@Base+0x74>

00000000000287a8 <__asan_backtrace_close@@Base>:
   287a8:	stp	x29, x30, [sp, #-32]!
   287ac:	mov	x29, sp
   287b0:	stp	x19, x20, [sp, #16]
   287b4:	mov	x19, x1
   287b8:	mov	x20, x2
   287bc:	bl	6810 <close@plt>
   287c0:	tbnz	w0, #31, 287d4 <__asan_backtrace_close@@Base+0x2c>
   287c4:	mov	w0, #0x1                   	// #1
   287c8:	ldp	x19, x20, [sp, #16]
   287cc:	ldp	x29, x30, [sp], #32
   287d0:	ret
   287d4:	bl	6790 <__errno_location@plt>
   287d8:	ldr	w2, [x0]
   287dc:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   287e0:	add	x1, x1, #0x578
   287e4:	mov	x0, x20
   287e8:	blr	x19
   287ec:	mov	w0, #0x0                   	// #0
   287f0:	b	287c8 <__asan_backtrace_close@@Base+0x20>
   287f4:	cbz	x2, 28818 <__asan_backtrace_close@@Base+0x70>
   287f8:	mov	x3, #0x0                   	// #0
   287fc:	ldrb	w4, [x0, x3]
   28800:	ldrb	w5, [x1, x3]
   28804:	strb	w5, [x0, x3]
   28808:	strb	w4, [x1, x3]
   2880c:	add	x3, x3, #0x1
   28810:	cmp	x2, x3
   28814:	b.ne	287fc <__asan_backtrace_close@@Base+0x54>  // b.any
   28818:	ret

000000000002881c <__asan_backtrace_qsort@@Base>:
   2881c:	stp	x29, x30, [sp, #-80]!
   28820:	mov	x29, sp
   28824:	stp	x21, x22, [sp, #32]
   28828:	stp	x23, x24, [sp, #48]
   2882c:	stp	x25, x26, [sp, #64]
   28830:	mov	x23, x0
   28834:	mov	x24, x1
   28838:	mov	x22, x2
   2883c:	mov	x26, x3
   28840:	cmp	x1, #0x1
   28844:	b.ls	28938 <__asan_backtrace_qsort@@Base+0x11c>  // b.plast
   28848:	stp	x19, x20, [sp, #16]
   2884c:	b	28908 <__asan_backtrace_qsort@@Base+0xec>
   28850:	mov	x2, x22
   28854:	mov	x1, x19
   28858:	madd	x0, x22, x21, x23
   2885c:	bl	287f4 <__asan_backtrace_close@@Base+0x4c>
   28860:	add	x20, x20, #0x1
   28864:	add	x19, x19, x22
   28868:	cmp	x20, x24
   2886c:	b.eq	288d8 <__asan_backtrace_qsort@@Base+0xbc>  // b.none
   28870:	mov	x1, x19
   28874:	mov	x0, x23
   28878:	blr	x26
   2887c:	cmp	w0, #0x0
   28880:	b.le	28860 <__asan_backtrace_qsort@@Base+0x44>
   28884:	add	x21, x21, #0x1
   28888:	cmp	x21, x20
   2888c:	b.eq	28860 <__asan_backtrace_qsort@@Base+0x44>  // b.none
   28890:	b	28850 <__asan_backtrace_qsort@@Base+0x34>
   28894:	mov	x2, x22
   28898:	madd	x1, x21, x22, x23
   2889c:	mov	x0, x23
   288a0:	bl	287f4 <__asan_backtrace_close@@Base+0x4c>
   288a4:	cmp	x24, x21, lsl #1
   288a8:	b.hi	288dc <__asan_backtrace_qsort@@Base+0xc0>  // b.pmore
   288ac:	sub	x1, x24, #0x1
   288b0:	madd	x0, x21, x22, x22
   288b4:	mov	x3, x26
   288b8:	mov	x2, x22
   288bc:	sub	x1, x1, x21
   288c0:	add	x0, x23, x0
   288c4:	bl	2881c <__asan_backtrace_qsort@@Base>
   288c8:	mov	x24, x21
   288cc:	b	28900 <__asan_backtrace_qsort@@Base+0xe4>
   288d0:	mov	x21, #0x0                   	// #0
   288d4:	b	288a4 <__asan_backtrace_qsort@@Base+0x88>
   288d8:	cbnz	x21, 28894 <__asan_backtrace_qsort@@Base+0x78>
   288dc:	mov	x3, x26
   288e0:	mov	x2, x22
   288e4:	mov	x1, x21
   288e8:	mov	x0, x23
   288ec:	bl	2881c <__asan_backtrace_qsort@@Base>
   288f0:	madd	x0, x21, x22, x22
   288f4:	add	x23, x23, x0
   288f8:	sub	x24, x24, #0x1
   288fc:	sub	x24, x24, x21
   28900:	cmp	x24, #0x1
   28904:	b.ls	28934 <__asan_backtrace_qsort@@Base+0x118>  // b.plast
   28908:	lsr	x1, x24, #1
   2890c:	mov	x2, x22
   28910:	madd	x1, x1, x22, x23
   28914:	mov	x0, x23
   28918:	bl	287f4 <__asan_backtrace_close@@Base+0x4c>
   2891c:	cmp	x24, #0x1
   28920:	b.ls	288d0 <__asan_backtrace_qsort@@Base+0xb4>  // b.plast
   28924:	add	x19, x23, x22
   28928:	mov	x21, #0x0                   	// #0
   2892c:	mov	x20, #0x1                   	// #1
   28930:	b	28870 <__asan_backtrace_qsort@@Base+0x54>
   28934:	ldp	x19, x20, [sp, #16]
   28938:	ldp	x21, x22, [sp, #32]
   2893c:	ldp	x23, x24, [sp, #48]
   28940:	ldp	x25, x26, [sp, #64]
   28944:	ldp	x29, x30, [sp], #80
   28948:	ret

000000000002894c <__asan_backtrace_create_state@@Base>:
   2894c:	stp	x29, x30, [sp, #-144]!
   28950:	mov	x29, sp
   28954:	stp	x19, x20, [sp, #16]
   28958:	stp	x21, x22, [sp, #32]
   2895c:	str	x23, [sp, #48]
   28960:	mov	x23, x0
   28964:	mov	w22, w1
   28968:	mov	x20, x2
   2896c:	mov	x21, x3
   28970:	add	x19, sp, #0x48
   28974:	mov	x2, #0x48                  	// #72
   28978:	mov	w1, #0x0                   	// #0
   2897c:	mov	x0, x19
   28980:	bl	6530 <__asan_internal_memset@plt>
   28984:	str	x23, [sp, #72]
   28988:	str	w22, [sp, #80]
   2898c:	mov	x3, x21
   28990:	mov	x2, x20
   28994:	mov	x1, #0x48                  	// #72
   28998:	mov	x0, x19
   2899c:	bl	65b0 <__asan_backtrace_alloc@plt>
   289a0:	cbz	x0, 289cc <__asan_backtrace_create_state@@Base+0x80>
   289a4:	ldp	x2, x3, [sp, #72]
   289a8:	stp	x2, x3, [x0]
   289ac:	ldp	x2, x3, [sp, #88]
   289b0:	stp	x2, x3, [x0, #16]
   289b4:	ldp	x2, x3, [sp, #104]
   289b8:	stp	x2, x3, [x0, #32]
   289bc:	ldp	x2, x3, [sp, #120]
   289c0:	stp	x2, x3, [x0, #48]
   289c4:	ldr	x1, [sp, #136]
   289c8:	str	x1, [x0, #64]
   289cc:	ldp	x19, x20, [sp, #16]
   289d0:	ldp	x21, x22, [sp, #32]
   289d4:	ldr	x23, [sp, #48]
   289d8:	ldp	x29, x30, [sp], #144
   289dc:	ret
   289e0:	sub	w0, w0, #0x1c
   289e4:	cmp	w0, #0x34
   289e8:	b.hi	28a08 <__asan_backtrace_create_state@@Base+0xbc>  // b.pmore
   289ec:	mov	x1, #0x1                   	// #1
   289f0:	lsl	x0, x1, x0
   289f4:	mov	x1, #0x1f                  	// #31
   289f8:	movk	x1, #0x1a, lsl #48
   289fc:	tst	x0, x1
   28a00:	cset	w0, ne  // ne = any
   28a04:	b	28a0c <__asan_backtrace_create_state@@Base+0xc0>
   28a08:	mov	w0, #0x0                   	// #0
   28a0c:	ret
   28a10:	mov	x2, x0
   28a14:	ldr	w1, [x0, #40]
   28a18:	ldr	w0, [x0, #44]
   28a1c:	cmp	w1, w0
   28a20:	b.ge	28a48 <__asan_backtrace_create_state@@Base+0xfc>  // b.tcont
   28a24:	sbfiz	x0, x1, #1, #32
   28a28:	add	x1, x0, w1, sxtw
   28a2c:	ldr	x0, [x2, #32]
   28a30:	add	x0, x0, x1, lsl #3
   28a34:	str	wzr, [x0, #4]
   28a38:	ldr	w1, [x2, #40]
   28a3c:	add	w1, w1, #0x1
   28a40:	str	w1, [x2, #40]
   28a44:	ret
   28a48:	mov	x0, #0x0                   	// #0
   28a4c:	b	28a44 <__asan_backtrace_create_state@@Base+0xf8>
   28a50:	stp	x29, x30, [sp, #-48]!
   28a54:	mov	x29, sp
   28a58:	stp	x19, x20, [sp, #16]
   28a5c:	mov	w19, w1
   28a60:	sub	w1, w1, #0x1
   28a64:	cmp	w1, #0x4f
   28a68:	b.hi	28ae4 <__asan_backtrace_create_state@@Base+0x198>  // b.pmore
   28a6c:	str	x21, [sp, #32]
   28a70:	mov	x21, x2
   28a74:	mov	x20, x3
   28a78:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   28a7c:	add	x2, x2, #0x580
   28a80:	ldrb	w1, [x2, w1, uxtw]
   28a84:	adr	x2, 28a90 <__asan_backtrace_create_state@@Base+0x144>
   28a88:	add	x1, x2, w1, sxtb #2
   28a8c:	br	x1
   28a90:	cmp	x21, #0x0
   28a94:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   28a98:	b.ne	28aac <__asan_backtrace_create_state@@Base+0x160>  // b.any
   28a9c:	mov	x0, #0x0                   	// #0
   28aa0:	ldr	x21, [sp, #32]
   28aa4:	b	28ac4 <__asan_backtrace_create_state@@Base+0x178>
   28aa8:	cbz	x21, 28aec <__asan_backtrace_create_state@@Base+0x1a0>
   28aac:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   28ab0:	cbz	x0, 28af8 <__asan_backtrace_create_state@@Base+0x1ac>
   28ab4:	str	w19, [x0]
   28ab8:	str	x21, [x0, #8]
   28abc:	str	x20, [x0, #16]
   28ac0:	ldr	x21, [sp, #32]
   28ac4:	ldp	x19, x20, [sp, #16]
   28ac8:	ldp	x29, x30, [sp], #48
   28acc:	ret
   28ad0:	cbnz	x3, 28aac <__asan_backtrace_create_state@@Base+0x160>
   28ad4:	mov	x0, x3
   28ad8:	ldr	x21, [sp, #32]
   28adc:	b	28ac4 <__asan_backtrace_create_state@@Base+0x178>
   28ae0:	ldr	x21, [sp, #32]
   28ae4:	mov	x0, #0x0                   	// #0
   28ae8:	b	28ac4 <__asan_backtrace_create_state@@Base+0x178>
   28aec:	mov	x0, x21
   28af0:	ldr	x21, [sp, #32]
   28af4:	b	28ac4 <__asan_backtrace_create_state@@Base+0x178>
   28af8:	ldr	x21, [sp, #32]
   28afc:	b	28ac4 <__asan_backtrace_create_state@@Base+0x178>
   28b00:	stp	x29, x30, [sp, #-32]!
   28b04:	mov	x29, sp
   28b08:	str	x19, [sp, #16]
   28b0c:	mov	x19, x1
   28b10:	cbz	x1, 28b34 <__asan_backtrace_create_state@@Base+0x1e8>
   28b14:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   28b18:	cbz	x0, 28b28 <__asan_backtrace_create_state@@Base+0x1dc>
   28b1c:	mov	w1, #0x27                  	// #39
   28b20:	str	w1, [x0]
   28b24:	str	x19, [x0, #8]
   28b28:	ldr	x19, [sp, #16]
   28b2c:	ldp	x29, x30, [sp], #32
   28b30:	ret
   28b34:	mov	x0, x1
   28b38:	b	28b28 <__asan_backtrace_create_state@@Base+0x1dc>
   28b3c:	cbz	x0, 28b90 <__asan_backtrace_create_state@@Base+0x244>
   28b40:	mov	x2, x0
   28b44:	ldr	w1, [x0]
   28b48:	cmp	w1, #0x8
   28b4c:	b.hi	28b84 <__asan_backtrace_create_state@@Base+0x238>  // b.pmore
   28b50:	cmp	w1, #0x6
   28b54:	b.hi	28b98 <__asan_backtrace_create_state@@Base+0x24c>  // b.pmore
   28b58:	sub	w1, w1, #0x1
   28b5c:	mov	w0, #0x0                   	// #0
   28b60:	cmp	w1, #0x1
   28b64:	b.hi	28b80 <__asan_backtrace_create_state@@Base+0x234>  // b.pmore
   28b68:	stp	x29, x30, [sp, #-16]!
   28b6c:	mov	x29, sp
   28b70:	ldr	x0, [x2, #16]
   28b74:	bl	28b3c <__asan_backtrace_create_state@@Base+0x1f0>
   28b78:	ldp	x29, x30, [sp], #16
   28b7c:	ret
   28b80:	ret
   28b84:	cmp	w1, #0x35
   28b88:	cset	w0, eq  // eq = none
   28b8c:	ret
   28b90:	mov	w0, #0x0                   	// #0
   28b94:	ret
   28b98:	mov	w0, #0x1                   	// #1
   28b9c:	ret
   28ba0:	cbz	x0, 28c30 <__asan_backtrace_create_state@@Base+0x2e4>
   28ba4:	stp	x29, x30, [sp, #-16]!
   28ba8:	mov	x29, sp
   28bac:	ldr	w1, [x0]
   28bb0:	cmp	w1, #0x4
   28bb4:	b.eq	28c10 <__asan_backtrace_create_state@@Base+0x2c4>  // b.none
   28bb8:	b.ls	28be8 <__asan_backtrace_create_state@@Base+0x29c>  // b.plast
   28bbc:	sub	w1, w1, #0x1c
   28bc0:	cmp	w1, #0x34
   28bc4:	b.hi	28c08 <__asan_backtrace_create_state@@Base+0x2bc>  // b.pmore
   28bc8:	mov	x2, #0x1                   	// #1
   28bcc:	lsl	x1, x2, x1
   28bd0:	mov	x2, #0x1f                  	// #31
   28bd4:	movk	x2, #0x1a, lsl #48
   28bd8:	tst	x1, x2
   28bdc:	b.ne	28c24 <__asan_backtrace_create_state@@Base+0x2d8>  // b.any
   28be0:	mov	w0, #0x0                   	// #0
   28be4:	b	28c00 <__asan_backtrace_create_state@@Base+0x2b4>
   28be8:	cmp	w1, #0x2
   28bec:	b.ne	28bfc <__asan_backtrace_create_state@@Base+0x2b0>  // b.any
   28bf0:	ldr	x0, [x0, #16]
   28bf4:	bl	28ba0 <__asan_backtrace_create_state@@Base+0x254>
   28bf8:	b	28c00 <__asan_backtrace_create_state@@Base+0x2b4>
   28bfc:	mov	w0, #0x0                   	// #0
   28c00:	ldp	x29, x30, [sp], #16
   28c04:	ret
   28c08:	mov	w0, #0x0                   	// #0
   28c0c:	b	28c00 <__asan_backtrace_create_state@@Base+0x2b4>
   28c10:	ldr	x0, [x0, #8]
   28c14:	bl	28b3c <__asan_backtrace_create_state@@Base+0x1f0>
   28c18:	cmp	w0, #0x0
   28c1c:	cset	w0, eq  // eq = none
   28c20:	b	28c00 <__asan_backtrace_create_state@@Base+0x2b4>
   28c24:	ldr	x0, [x0, #8]
   28c28:	bl	28ba0 <__asan_backtrace_create_state@@Base+0x254>
   28c2c:	b	28c00 <__asan_backtrace_create_state@@Base+0x2b4>
   28c30:	mov	w0, #0x0                   	// #0
   28c34:	ret
   28c38:	mov	x4, x0
   28c3c:	ldr	x1, [x0, #24]
   28c40:	ldrb	w0, [x1]
   28c44:	cmp	w0, #0x6e
   28c48:	b.eq	28cc8 <__asan_backtrace_create_state@@Base+0x37c>  // b.none
   28c4c:	sub	w1, w0, #0x30
   28c50:	and	w1, w1, #0xff
   28c54:	cmp	w1, #0x9
   28c58:	b.hi	28d00 <__asan_backtrace_create_state@@Base+0x3b4>  // b.pmore
   28c5c:	mov	w7, #0x0                   	// #0
   28c60:	mov	w3, w0
   28c64:	mov	w0, #0x0                   	// #0
   28c68:	mov	w6, #0x7fffffff            	// #2147483647
   28c6c:	mov	w5, #0x6667                	// #26215
   28c70:	movk	w5, #0x6666, lsl #16
   28c74:	add	w0, w0, w0, lsl #2
   28c78:	add	w0, w3, w0, lsl #1
   28c7c:	sub	w0, w0, #0x30
   28c80:	ldr	x1, [x4, #24]
   28c84:	add	x2, x1, #0x1
   28c88:	str	x2, [x4, #24]
   28c8c:	ldrb	w1, [x1, #1]
   28c90:	sub	w2, w1, #0x30
   28c94:	and	w2, w2, #0xff
   28c98:	cmp	w2, #0x9
   28c9c:	b.hi	28cec <__asan_backtrace_create_state@@Base+0x3a0>  // b.pmore
   28ca0:	mov	w3, w1
   28ca4:	sub	w1, w1, #0x30
   28ca8:	sub	w1, w6, w1
   28cac:	smull	x2, w1, w5
   28cb0:	asr	x2, x2, #34
   28cb4:	sub	w1, w2, w1, asr #31
   28cb8:	cmp	w1, w0
   28cbc:	b.ge	28c74 <__asan_backtrace_create_state@@Base+0x328>  // b.tcont
   28cc0:	mov	w0, #0xffffffff            	// #-1
   28cc4:	ret
   28cc8:	add	x0, x1, #0x1
   28ccc:	str	x0, [x4, #24]
   28cd0:	ldrb	w0, [x1, #1]
   28cd4:	sub	w1, w0, #0x30
   28cd8:	and	w1, w1, #0xff
   28cdc:	cmp	w1, #0x9
   28ce0:	b.hi	28cf8 <__asan_backtrace_create_state@@Base+0x3ac>  // b.pmore
   28ce4:	mov	w7, #0x1                   	// #1
   28ce8:	b	28c60 <__asan_backtrace_create_state@@Base+0x314>
   28cec:	cbz	w7, 28cc4 <__asan_backtrace_create_state@@Base+0x378>
   28cf0:	neg	w0, w0
   28cf4:	b	28cc4 <__asan_backtrace_create_state@@Base+0x378>
   28cf8:	mov	w0, #0x0                   	// #0
   28cfc:	b	28cf0 <__asan_backtrace_create_state@@Base+0x3a4>
   28d00:	mov	w0, #0x0                   	// #0
   28d04:	b	28cc4 <__asan_backtrace_create_state@@Base+0x378>
   28d08:	stp	x29, x30, [sp, #-32]!
   28d0c:	mov	x29, sp
   28d10:	stp	x19, x20, [sp, #16]
   28d14:	mov	x20, x0
   28d18:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   28d1c:	mov	x19, x0
   28d20:	cbz	x0, 28d3c <__asan_backtrace_create_state@@Base+0x3f0>
   28d24:	mov	w0, #0x42                  	// #66
   28d28:	str	w0, [x19]
   28d2c:	mov	x0, x20
   28d30:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   28d34:	sxtw	x0, w0
   28d38:	str	x0, [x19, #8]
   28d3c:	mov	x0, x19
   28d40:	ldp	x19, x20, [sp, #16]
   28d44:	ldp	x29, x30, [sp], #32
   28d48:	ret
   28d4c:	stp	x29, x30, [sp, #-32]!
   28d50:	mov	x29, sp
   28d54:	str	x19, [sp, #16]
   28d58:	mov	x19, x0
   28d5c:	cbnz	w1, 28d7c <__asan_backtrace_create_state@@Base+0x430>
   28d60:	ldr	x2, [x0, #24]
   28d64:	ldrb	w3, [x2]
   28d68:	mov	w0, w1
   28d6c:	cbz	w3, 28d90 <__asan_backtrace_create_state@@Base+0x444>
   28d70:	add	x0, x2, #0x1
   28d74:	str	x0, [x19, #24]
   28d78:	ldrb	w1, [x2]
   28d7c:	cmp	w1, #0x68
   28d80:	b.eq	28d9c <__asan_backtrace_create_state@@Base+0x450>  // b.none
   28d84:	mov	w0, #0x0                   	// #0
   28d88:	cmp	w1, #0x76
   28d8c:	b.eq	28dc8 <__asan_backtrace_create_state@@Base+0x47c>  // b.none
   28d90:	ldr	x19, [sp, #16]
   28d94:	ldp	x29, x30, [sp], #32
   28d98:	ret
   28d9c:	mov	x0, x19
   28da0:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   28da4:	ldr	x1, [x19, #24]
   28da8:	ldrb	w2, [x1]
   28dac:	mov	w0, #0x0                   	// #0
   28db0:	cmp	w2, #0x5f
   28db4:	b.ne	28d90 <__asan_backtrace_create_state@@Base+0x444>  // b.any
   28db8:	add	x1, x1, #0x1
   28dbc:	str	x1, [x19, #24]
   28dc0:	mov	w0, #0x1                   	// #1
   28dc4:	b	28d90 <__asan_backtrace_create_state@@Base+0x444>
   28dc8:	mov	x0, x19
   28dcc:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   28dd0:	ldr	x1, [x19, #24]
   28dd4:	ldrb	w2, [x1]
   28dd8:	mov	w0, #0x0                   	// #0
   28ddc:	cmp	w2, #0x5f
   28de0:	b.ne	28d90 <__asan_backtrace_create_state@@Base+0x444>  // b.any
   28de4:	add	x1, x1, #0x1
   28de8:	str	x1, [x19, #24]
   28dec:	mov	x0, x19
   28df0:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   28df4:	b	28da4 <__asan_backtrace_create_state@@Base+0x458>
   28df8:	ldr	x2, [x0, #24]
   28dfc:	ldrb	w1, [x2]
   28e00:	cmp	w1, #0x72
   28e04:	mov	w0, #0x56                  	// #86
   28e08:	ccmp	w1, w0, #0x4, ne  // ne = any
   28e0c:	mov	w0, #0x4b                  	// #75
   28e10:	ccmp	w1, w0, #0x4, ne  // ne = any
   28e14:	mov	w0, #0x1                   	// #1
   28e18:	b.eq	28e28 <__asan_backtrace_create_state@@Base+0x4dc>  // b.none
   28e1c:	mov	w0, #0x0                   	// #0
   28e20:	cmp	w1, #0x44
   28e24:	b.eq	28e2c <__asan_backtrace_create_state@@Base+0x4e0>  // b.none
   28e28:	ret
   28e2c:	ldrb	w0, [x2, #1]
   28e30:	and	w1, w0, #0xffffffdf
   28e34:	and	w1, w1, #0xff
   28e38:	sub	w0, w0, #0x77
   28e3c:	and	w0, w0, #0xff
   28e40:	cmp	w1, #0x4f
   28e44:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   28e48:	cset	w0, ls  // ls = plast
   28e4c:	b	28e28 <__asan_backtrace_create_state@@Base+0x4dc>
   28e50:	mov	x2, x1
   28e54:	ldr	x3, [x0, #24]
   28e58:	ldrb	w1, [x3]
   28e5c:	cmp	w1, #0x52
   28e60:	mov	w4, #0x4f                  	// #79
   28e64:	ccmp	w1, w4, #0x4, ne  // ne = any
   28e68:	b.ne	28eb4 <__asan_backtrace_create_state@@Base+0x568>  // b.any
   28e6c:	stp	x29, x30, [sp, #-16]!
   28e70:	mov	x29, sp
   28e74:	cmp	w1, #0x52
   28e78:	b.eq	28ea4 <__asan_backtrace_create_state@@Base+0x558>  // b.none
   28e7c:	ldr	w4, [x0, #72]
   28e80:	add	w4, w4, #0x3
   28e84:	mov	w1, #0x20                  	// #32
   28e88:	str	w4, [x0, #72]
   28e8c:	add	x3, x3, #0x1
   28e90:	str	x3, [x0, #24]
   28e94:	mov	x3, #0x0                   	// #0
   28e98:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   28e9c:	ldp	x29, x30, [sp], #16
   28ea0:	ret
   28ea4:	ldr	w4, [x0, #72]
   28ea8:	add	w4, w4, #0x2
   28eac:	mov	w1, #0x1f                  	// #31
   28eb0:	b	28e88 <__asan_backtrace_create_state@@Base+0x53c>
   28eb4:	mov	x0, x2
   28eb8:	ret
   28ebc:	stp	x29, x30, [sp, #-32]!
   28ec0:	mov	x29, sp
   28ec4:	str	x19, [sp, #16]
   28ec8:	mov	x19, x0
   28ecc:	ldr	x1, [x0, #24]
   28ed0:	ldrb	w0, [x1]
   28ed4:	cmp	w0, #0x5f
   28ed8:	b.eq	28f18 <__asan_backtrace_create_state@@Base+0x5cc>  // b.none
   28edc:	cmp	w0, #0x6e
   28ee0:	b.eq	28f20 <__asan_backtrace_create_state@@Base+0x5d4>  // b.none
   28ee4:	mov	x0, x19
   28ee8:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   28eec:	adds	w0, w0, #0x1
   28ef0:	b.mi	28f28 <__asan_backtrace_create_state@@Base+0x5dc>  // b.first
   28ef4:	ldr	x1, [x19, #24]
   28ef8:	ldrb	w2, [x1]
   28efc:	cmp	w2, #0x5f
   28f00:	b.ne	28f30 <__asan_backtrace_create_state@@Base+0x5e4>  // b.any
   28f04:	add	x1, x1, #0x1
   28f08:	str	x1, [x19, #24]
   28f0c:	ldr	x19, [sp, #16]
   28f10:	ldp	x29, x30, [sp], #32
   28f14:	ret
   28f18:	mov	w0, #0x0                   	// #0
   28f1c:	b	28f04 <__asan_backtrace_create_state@@Base+0x5b8>
   28f20:	mov	w0, #0xffffffff            	// #-1
   28f24:	b	28f0c <__asan_backtrace_create_state@@Base+0x5c0>
   28f28:	mov	w0, #0xffffffff            	// #-1
   28f2c:	b	28f0c <__asan_backtrace_create_state@@Base+0x5c0>
   28f30:	mov	w0, #0xffffffff            	// #-1
   28f34:	b	28f0c <__asan_backtrace_create_state@@Base+0x5c0>
   28f38:	stp	x29, x30, [sp, #-32]!
   28f3c:	mov	x29, sp
   28f40:	stp	x19, x20, [sp, #16]
   28f44:	mov	x19, x0
   28f48:	ldr	x0, [x0, #24]
   28f4c:	ldrb	w1, [x0]
   28f50:	cmp	w1, #0x54
   28f54:	b.ne	28f94 <__asan_backtrace_create_state@@Base+0x648>  // b.any
   28f58:	add	x0, x0, #0x1
   28f5c:	str	x0, [x19, #24]
   28f60:	mov	x0, x19
   28f64:	bl	28ebc <__asan_backtrace_create_state@@Base+0x570>
   28f68:	mov	w20, w0
   28f6c:	mov	x0, #0x0                   	// #0
   28f70:	tbnz	w20, #31, 28f98 <__asan_backtrace_create_state@@Base+0x64c>
   28f74:	mov	x0, x19
   28f78:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   28f7c:	cbz	x0, 28f98 <__asan_backtrace_create_state@@Base+0x64c>
   28f80:	mov	w1, #0x5                   	// #5
   28f84:	str	w1, [x0]
   28f88:	sxtw	x20, w20
   28f8c:	str	x20, [x0, #8]
   28f90:	b	28f98 <__asan_backtrace_create_state@@Base+0x64c>
   28f94:	mov	x0, #0x0                   	// #0
   28f98:	ldp	x19, x20, [sp, #16]
   28f9c:	ldp	x29, x30, [sp], #32
   28fa0:	ret
   28fa4:	ldr	x0, [x0, #8]
   28fa8:	ldr	x0, [x0]
   28fac:	ldrb	w1, [x0, #1]
   28fb0:	cmp	w1, #0x63
   28fb4:	b.eq	28fc0 <__asan_backtrace_create_state@@Base+0x674>  // b.none
   28fb8:	mov	w0, #0x0                   	// #0
   28fbc:	ret
   28fc0:	ldrb	w0, [x0]
   28fc4:	sub	w1, w0, #0x63
   28fc8:	and	w1, w1, #0xff
   28fcc:	sub	w0, w0, #0x72
   28fd0:	and	w0, w0, #0xff
   28fd4:	cmp	w1, #0x1
   28fd8:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   28fdc:	cset	w0, ls  // ls = plast
   28fe0:	b	28fbc <__asan_backtrace_create_state@@Base+0x670>
   28fe4:	stp	x29, x30, [sp, #-32]!
   28fe8:	mov	x29, sp
   28fec:	stp	x19, x20, [sp, #16]
   28ff0:	mov	x19, x0
   28ff4:	ldr	x0, [x0, #24]
   28ff8:	ldrb	w1, [x0]
   28ffc:	cmp	w1, #0x5f
   29000:	b.ne	29074 <__asan_backtrace_create_state@@Base+0x728>  // b.any
   29004:	add	x1, x0, #0x1
   29008:	str	x1, [x19, #24]
   2900c:	ldrb	w1, [x0, #1]
   29010:	mov	w20, #0x1                   	// #1
   29014:	cmp	w1, #0x5f
   29018:	b.eq	29064 <__asan_backtrace_create_state@@Base+0x718>  // b.none
   2901c:	mov	x0, x19
   29020:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   29024:	mov	w1, w0
   29028:	mov	w0, #0x0                   	// #0
   2902c:	tbnz	w1, #31, 29078 <__asan_backtrace_create_state@@Base+0x72c>
   29030:	cmp	w20, #0x1
   29034:	mov	w0, #0x1                   	// #1
   29038:	ccmp	w1, #0x9, #0x4, gt
   2903c:	b.le	29078 <__asan_backtrace_create_state@@Base+0x72c>
   29040:	ldr	x1, [x19, #24]
   29044:	ldrb	w2, [x1]
   29048:	mov	w0, #0x0                   	// #0
   2904c:	cmp	w2, #0x5f
   29050:	b.ne	29078 <__asan_backtrace_create_state@@Base+0x72c>  // b.any
   29054:	add	x1, x1, #0x1
   29058:	str	x1, [x19, #24]
   2905c:	mov	w0, #0x1                   	// #1
   29060:	b	29078 <__asan_backtrace_create_state@@Base+0x72c>
   29064:	add	x0, x0, #0x2
   29068:	str	x0, [x19, #24]
   2906c:	mov	w20, #0x2                   	// #2
   29070:	b	2901c <__asan_backtrace_create_state@@Base+0x6d0>
   29074:	mov	w0, #0x1                   	// #1
   29078:	ldp	x19, x20, [sp, #16]
   2907c:	ldp	x29, x30, [sp], #32
   29080:	ret
   29084:	mov	x2, x0
   29088:	cbz	x1, 290bc <__asan_backtrace_create_state@@Base+0x770>
   2908c:	ldr	w3, [x0, #56]
   29090:	ldr	w4, [x0, #60]
   29094:	mov	w0, #0x0                   	// #0
   29098:	cmp	w3, w4
   2909c:	b.ge	290b8 <__asan_backtrace_create_state@@Base+0x76c>  // b.tcont
   290a0:	ldr	x0, [x2, #48]
   290a4:	str	x1, [x0, w3, sxtw #3]
   290a8:	ldr	w0, [x2, #56]
   290ac:	add	w0, w0, #0x1
   290b0:	str	w0, [x2, #56]
   290b4:	mov	w0, #0x1                   	// #1
   290b8:	ret
   290bc:	mov	w0, #0x0                   	// #0
   290c0:	b	290b8 <__asan_backtrace_create_state@@Base+0x76c>
   290c4:	cbz	x1, 291d8 <__asan_backtrace_create_state@@Base+0x88c>
   290c8:	stp	x29, x30, [sp, #-32]!
   290cc:	mov	x29, sp
   290d0:	stp	x19, x20, [sp, #16]
   290d4:	mov	x20, x0
   290d8:	mov	x19, x1
   290dc:	ldr	w1, [x1]
   290e0:	sub	w1, w1, #0x1
   290e4:	cmp	w1, #0x4f
   290e8:	b.hi	2911c <__asan_backtrace_create_state@@Base+0x7d0>  // b.pmore
   290ec:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   290f0:	add	x0, x0, #0x5d0
   290f4:	ldrb	w0, [x0, w1, uxtw]
   290f8:	adr	x1, 29104 <__asan_backtrace_create_state@@Base+0x7b8>
   290fc:	add	x0, x1, w0, sxtb #2
   29100:	br	x0
   29104:	ldr	w0, [x20, #364]
   29108:	add	w0, w0, #0x1
   2910c:	str	w0, [x20, #364]
   29110:	ldr	w0, [x20, #308]
   29114:	cmp	w0, #0x800
   29118:	b.le	29148 <__asan_backtrace_create_state@@Base+0x7fc>
   2911c:	ldp	x19, x20, [sp, #16]
   29120:	ldp	x29, x30, [sp], #32
   29124:	ret
   29128:	ldr	x0, [x19, #8]
   2912c:	ldr	w0, [x0]
   29130:	cmp	w0, #0x5
   29134:	b.ne	29110 <__asan_backtrace_create_state@@Base+0x7c4>  // b.any
   29138:	ldr	w0, [x20, #348]
   2913c:	add	w0, w0, #0x1
   29140:	str	w0, [x20, #348]
   29144:	b	29110 <__asan_backtrace_create_state@@Base+0x7c4>
   29148:	add	w0, w0, #0x1
   2914c:	str	w0, [x20, #308]
   29150:	ldr	x1, [x19, #8]
   29154:	mov	x0, x20
   29158:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   2915c:	ldr	x1, [x19, #16]
   29160:	mov	x0, x20
   29164:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   29168:	ldr	w0, [x20, #308]
   2916c:	sub	w0, w0, #0x1
   29170:	str	w0, [x20, #308]
   29174:	b	2911c <__asan_backtrace_create_state@@Base+0x7d0>
   29178:	ldr	x1, [x19, #16]
   2917c:	mov	x0, x20
   29180:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   29184:	b	2911c <__asan_backtrace_create_state@@Base+0x7d0>
   29188:	ldr	x1, [x19, #16]
   2918c:	mov	x0, x20
   29190:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   29194:	b	2911c <__asan_backtrace_create_state@@Base+0x7d0>
   29198:	ldr	x1, [x19, #16]
   2919c:	mov	x0, x20
   291a0:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   291a4:	b	2911c <__asan_backtrace_create_state@@Base+0x7d0>
   291a8:	ldr	x1, [x19, #8]
   291ac:	mov	x0, x20
   291b0:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   291b4:	b	2911c <__asan_backtrace_create_state@@Base+0x7d0>
   291b8:	ldr	x1, [x19, #8]
   291bc:	mov	x0, x20
   291c0:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   291c4:	b	2911c <__asan_backtrace_create_state@@Base+0x7d0>
   291c8:	ldr	x1, [x19, #8]
   291cc:	mov	x0, x20
   291d0:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   291d4:	b	2911c <__asan_backtrace_create_state@@Base+0x7d0>
   291d8:	ret
   291dc:	cbz	x2, 29278 <__asan_backtrace_create_state@@Base+0x92c>
   291e0:	stp	x29, x30, [sp, #-64]!
   291e4:	mov	x29, sp
   291e8:	stp	x19, x20, [sp, #16]
   291ec:	stp	x21, x22, [sp, #32]
   291f0:	str	x23, [sp, #48]
   291f4:	mov	x19, x0
   291f8:	mov	x20, x1
   291fc:	add	x22, x1, x2
   29200:	mov	x23, #0xff                  	// #255
   29204:	b	29228 <__asan_backtrace_create_state@@Base+0x8dc>
   29208:	ldr	x0, [x19, #256]
   2920c:	add	x1, x0, #0x1
   29210:	str	x1, [x19, #256]
   29214:	strb	w21, [x19, x0]
   29218:	strb	w21, [x19, #264]
   2921c:	add	x20, x20, #0x1
   29220:	cmp	x20, x22
   29224:	b.eq	29264 <__asan_backtrace_create_state@@Base+0x918>  // b.none
   29228:	ldrb	w21, [x20]
   2922c:	ldr	x0, [x19, #256]
   29230:	cmp	x0, #0xff
   29234:	b.ne	29208 <__asan_backtrace_create_state@@Base+0x8bc>  // b.any
   29238:	strb	wzr, [x19, #255]
   2923c:	ldr	x3, [x19, #272]
   29240:	ldr	x2, [x19, #280]
   29244:	mov	x1, x23
   29248:	mov	x0, x19
   2924c:	blr	x3
   29250:	str	xzr, [x19, #256]
   29254:	ldr	x0, [x19, #320]
   29258:	add	x0, x0, #0x1
   2925c:	str	x0, [x19, #320]
   29260:	b	29208 <__asan_backtrace_create_state@@Base+0x8bc>
   29264:	ldp	x19, x20, [sp, #16]
   29268:	ldp	x21, x22, [sp, #32]
   2926c:	ldr	x23, [sp, #48]
   29270:	ldp	x29, x30, [sp], #64
   29274:	ret
   29278:	ret
   2927c:	tbnz	w1, #31, 292a8 <__asan_backtrace_create_state@@Base+0x95c>
   29280:	cbz	x0, 292a8 <__asan_backtrace_create_state@@Base+0x95c>
   29284:	ldr	w2, [x0]
   29288:	cmp	w2, #0x2f
   2928c:	b.ne	292ac <__asan_backtrace_create_state@@Base+0x960>  // b.any
   29290:	cbz	w1, 292a4 <__asan_backtrace_create_state@@Base+0x958>
   29294:	sub	w1, w1, #0x1
   29298:	ldr	x0, [x0, #16]
   2929c:	cbnz	x0, 29284 <__asan_backtrace_create_state@@Base+0x938>
   292a0:	b	292a8 <__asan_backtrace_create_state@@Base+0x95c>
   292a4:	ldr	x0, [x0, #8]
   292a8:	ret
   292ac:	mov	x0, #0x0                   	// #0
   292b0:	b	292a8 <__asan_backtrace_create_state@@Base+0x95c>
   292b4:	mov	x2, x0
   292b8:	ldr	x0, [x0, #288]
   292bc:	cbz	x0, 292e0 <__asan_backtrace_create_state@@Base+0x994>
   292c0:	stp	x29, x30, [sp, #-16]!
   292c4:	mov	x29, sp
   292c8:	ldr	x0, [x0, #8]
   292cc:	ldr	w1, [x1, #8]
   292d0:	ldr	x0, [x0, #16]
   292d4:	bl	2927c <__asan_backtrace_create_state@@Base+0x930>
   292d8:	ldp	x29, x30, [sp], #16
   292dc:	ret
   292e0:	mov	w1, #0x1                   	// #1
   292e4:	str	w1, [x2, #304]
   292e8:	ret
   292ec:	stp	x29, x30, [sp, #-32]!
   292f0:	mov	x29, sp
   292f4:	stp	x19, x20, [sp, #16]
   292f8:	mov	x19, x1
   292fc:	cbz	x1, 293c4 <__asan_backtrace_create_state@@Base+0xa78>
   29300:	mov	x20, x0
   29304:	ldr	w2, [x1]
   29308:	cmp	w2, #0x8
   2930c:	b.eq	29398 <__asan_backtrace_create_state@@Base+0xa4c>  // b.none
   29310:	b.hi	29350 <__asan_backtrace_create_state@@Base+0xa04>  // b.pmore
   29314:	cmp	w2, #0x6
   29318:	b.eq	293cc <__asan_backtrace_create_state@@Base+0xa80>  // b.none
   2931c:	b.ls	2932c <__asan_backtrace_create_state@@Base+0x9e0>  // b.plast
   29320:	ldr	x1, [x1, #16]
   29324:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   29328:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   2932c:	cbz	w2, 293d4 <__asan_backtrace_create_state@@Base+0xa88>
   29330:	cmp	w2, #0x5
   29334:	b.ne	293a4 <__asan_backtrace_create_state@@Base+0xa58>  // b.any
   29338:	bl	292b4 <__asan_backtrace_create_state@@Base+0x968>
   2933c:	cbz	x0, 2938c <__asan_backtrace_create_state@@Base+0xa40>
   29340:	ldr	w1, [x0]
   29344:	cmp	w1, #0x2f
   29348:	csel	x0, x0, xzr, eq  // eq = none
   2934c:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   29350:	sub	w2, w2, #0x18
   29354:	cmp	w2, #0x34
   29358:	b.hi	293a4 <__asan_backtrace_create_state@@Base+0xa58>  // b.pmore
   2935c:	mov	x1, #0x1                   	// #1
   29360:	lsl	x2, x1, x2
   29364:	mov	x0, #0x8001                	// #32769
   29368:	movk	x0, #0x410, lsl #16
   2936c:	movk	x0, #0xc600, lsl #32
   29370:	movk	x0, #0x19, lsl #48
   29374:	tst	x2, x0
   29378:	b.ne	293dc <__asan_backtrace_create_state@@Base+0xa90>  // b.any
   2937c:	tbz	w2, #27, 293a4 <__asan_backtrace_create_state@@Base+0xa58>
   29380:	ldr	x1, [x19, #16]
   29384:	mov	x0, x20
   29388:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   2938c:	ldp	x19, x20, [sp, #16]
   29390:	ldp	x29, x30, [sp], #32
   29394:	ret
   29398:	ldr	x1, [x1, #16]
   2939c:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   293a0:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   293a4:	ldr	x1, [x19, #8]
   293a8:	mov	x0, x20
   293ac:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   293b0:	cbnz	x0, 2938c <__asan_backtrace_create_state@@Base+0xa40>
   293b4:	ldr	x1, [x19, #16]
   293b8:	mov	x0, x20
   293bc:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   293c0:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   293c4:	mov	x0, x1
   293c8:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   293cc:	mov	x0, #0x0                   	// #0
   293d0:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   293d4:	mov	x0, #0x0                   	// #0
   293d8:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   293dc:	mov	x0, #0x0                   	// #0
   293e0:	b	2938c <__asan_backtrace_create_state@@Base+0xa40>
   293e4:	mov	x1, x0
   293e8:	mov	w0, #0x0                   	// #0
   293ec:	cbz	x1, 29410 <__asan_backtrace_create_state@@Base+0xac4>
   293f0:	ldr	w2, [x1]
   293f4:	cmp	w2, #0x2f
   293f8:	b.ne	29410 <__asan_backtrace_create_state@@Base+0xac4>  // b.any
   293fc:	ldr	x2, [x1, #8]
   29400:	cbz	x2, 29410 <__asan_backtrace_create_state@@Base+0xac4>
   29404:	add	w0, w0, #0x1
   29408:	ldr	x1, [x1, #16]
   2940c:	cbnz	x1, 293f0 <__asan_backtrace_create_state@@Base+0xaa4>
   29410:	ret
   29414:	stp	x29, x30, [sp, #-48]!
   29418:	mov	x29, sp
   2941c:	stp	x19, x20, [sp, #16]
   29420:	stp	x21, x22, [sp, #32]
   29424:	mov	x22, x0
   29428:	mov	x21, x1
   2942c:	mov	x19, x2
   29430:	add	x2, x1, #0x1
   29434:	ldr	x3, [x19, #8]
   29438:	add	x2, x2, x3
   2943c:	ldr	x20, [x19, #16]
   29440:	cmp	x2, x20
   29444:	b.hi	29494 <__asan_backtrace_create_state@@Base+0xb48>  // b.pmore
   29448:	ldr	w0, [x19, #24]
   2944c:	cbnz	w0, 29484 <__asan_backtrace_create_state@@Base+0xb38>
   29450:	ldr	x3, [x19]
   29454:	ldr	x0, [x19, #8]
   29458:	mov	x2, x21
   2945c:	mov	x1, x22
   29460:	add	x0, x3, x0
   29464:	bl	64a0 <__asan_internal_memcpy@plt>
   29468:	ldr	x0, [x19]
   2946c:	ldr	x1, [x19, #8]
   29470:	add	x0, x0, x21
   29474:	strb	wzr, [x0, x1]
   29478:	ldr	x1, [x19, #8]
   2947c:	add	x21, x1, x21
   29480:	str	x21, [x19, #8]
   29484:	ldp	x19, x20, [sp, #16]
   29488:	ldp	x21, x22, [sp, #32]
   2948c:	ldp	x29, x30, [sp], #48
   29490:	ret
   29494:	ldr	w0, [x19, #24]
   29498:	cbnz	w0, 29484 <__asan_backtrace_create_state@@Base+0xb38>
   2949c:	cbnz	x20, 294ac <__asan_backtrace_create_state@@Base+0xb60>
   294a0:	mov	x20, #0x2                   	// #2
   294a4:	cmp	x2, x20
   294a8:	b.ls	294b8 <__asan_backtrace_create_state@@Base+0xb6c>  // b.plast
   294ac:	lsl	x20, x20, #1
   294b0:	cmp	x2, x20
   294b4:	b.hi	294ac <__asan_backtrace_create_state@@Base+0xb60>  // b.pmore
   294b8:	mov	x1, x20
   294bc:	ldr	x0, [x19]
   294c0:	bl	6590 <realloc@plt>
   294c4:	cbz	x0, 294d4 <__asan_backtrace_create_state@@Base+0xb88>
   294c8:	str	x0, [x19]
   294cc:	str	x20, [x19, #16]
   294d0:	b	29448 <__asan_backtrace_create_state@@Base+0xafc>
   294d4:	ldr	x0, [x19]
   294d8:	bl	6540 <free@plt>
   294dc:	str	xzr, [x19]
   294e0:	str	xzr, [x19, #8]
   294e4:	str	xzr, [x19, #16]
   294e8:	mov	w0, #0x1                   	// #1
   294ec:	str	w0, [x19, #24]
   294f0:	b	29484 <__asan_backtrace_create_state@@Base+0xb38>
   294f4:	stp	x29, x30, [sp, #-96]!
   294f8:	mov	x29, sp
   294fc:	stp	x19, x20, [sp, #16]
   29500:	mov	x19, x0
   29504:	add	x20, sp, #0x40
   29508:	mov	w2, w1
   2950c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   29510:	add	x1, x1, #0xca8
   29514:	mov	x0, x20
   29518:	bl	65f0 <sprintf@plt>
   2951c:	mov	x0, x20
   29520:	bl	64b0 <__asan_internal_strlen@plt>
   29524:	cbz	x0, 295a4 <__asan_backtrace_create_state@@Base+0xc58>
   29528:	stp	x21, x22, [sp, #32]
   2952c:	str	x23, [sp, #48]
   29530:	add	x21, sp, #0x40
   29534:	add	x20, x0, x21
   29538:	mov	x23, #0xff                  	// #255
   2953c:	b	29560 <__asan_backtrace_create_state@@Base+0xc14>
   29540:	ldr	x0, [x19, #256]
   29544:	add	x1, x0, #0x1
   29548:	str	x1, [x19, #256]
   2954c:	strb	w22, [x19, x0]
   29550:	strb	w22, [x19, #264]
   29554:	add	x21, x21, #0x1
   29558:	cmp	x21, x20
   2955c:	b.eq	2959c <__asan_backtrace_create_state@@Base+0xc50>  // b.none
   29560:	ldrb	w22, [x21]
   29564:	ldr	x0, [x19, #256]
   29568:	cmp	x0, #0xff
   2956c:	b.ne	29540 <__asan_backtrace_create_state@@Base+0xbf4>  // b.any
   29570:	strb	wzr, [x19, #255]
   29574:	ldr	x3, [x19, #272]
   29578:	ldr	x2, [x19, #280]
   2957c:	mov	x1, x23
   29580:	mov	x0, x19
   29584:	blr	x3
   29588:	str	xzr, [x19, #256]
   2958c:	ldr	x0, [x19, #320]
   29590:	add	x0, x0, #0x1
   29594:	str	x0, [x19, #320]
   29598:	b	29540 <__asan_backtrace_create_state@@Base+0xbf4>
   2959c:	ldp	x21, x22, [sp, #32]
   295a0:	ldr	x23, [sp, #48]
   295a4:	ldp	x19, x20, [sp, #16]
   295a8:	ldp	x29, x30, [sp], #96
   295ac:	ret
   295b0:	stp	x29, x30, [sp, #-256]!
   295b4:	mov	x29, sp
   295b8:	stp	x19, x20, [sp, #16]
   295bc:	mov	x19, x0
   295c0:	cbz	x2, 29600 <__asan_backtrace_create_state@@Base+0xcb4>
   295c4:	stp	x21, x22, [sp, #32]
   295c8:	mov	w20, w1
   295cc:	mov	x22, x2
   295d0:	ldr	w21, [x0, #304]
   295d4:	cbnz	w21, 2d934 <__asan_backtrace_create_state@@Base+0x4fe8>
   295d8:	ldr	w0, [x2]
   295dc:	cmp	w0, #0x50
   295e0:	b.hi	2d84c <__asan_backtrace_create_state@@Base+0x4f00>  // b.pmore
   295e4:	stp	x23, x24, [sp, #48]
   295e8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   295ec:	add	x1, x1, #0x620
   295f0:	ldrh	w1, [x1, w0, uxtw #1]
   295f4:	adr	x2, 29600 <__asan_backtrace_create_state@@Base+0xcb4>
   295f8:	add	x1, x2, w1, sxth #2
   295fc:	br	x1
   29600:	mov	w0, #0x1                   	// #1
   29604:	str	w0, [x19, #304]
   29608:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2960c:	tbnz	w20, #2, 29694 <__asan_backtrace_create_state@@Base+0xd48>
   29610:	ldr	x1, [x22, #8]
   29614:	ldrsw	x0, [x22, #16]
   29618:	cbz	x0, 2d944 <__asan_backtrace_create_state@@Base+0x4ff8>
   2961c:	mov	x20, x1
   29620:	add	x22, x1, x0
   29624:	mov	x23, #0xff                  	// #255
   29628:	b	2964c <__asan_backtrace_create_state@@Base+0xd00>
   2962c:	ldr	x0, [x19, #256]
   29630:	add	x1, x0, #0x1
   29634:	str	x1, [x19, #256]
   29638:	strb	w21, [x19, x0]
   2963c:	strb	w21, [x19, #264]
   29640:	add	x20, x20, #0x1
   29644:	cmp	x22, x20
   29648:	b.eq	29688 <__asan_backtrace_create_state@@Base+0xd3c>  // b.none
   2964c:	ldrb	w21, [x20]
   29650:	ldr	x0, [x19, #256]
   29654:	cmp	x0, #0xff
   29658:	b.ne	2962c <__asan_backtrace_create_state@@Base+0xce0>  // b.any
   2965c:	strb	wzr, [x19, #255]
   29660:	ldr	x3, [x19, #272]
   29664:	ldr	x2, [x19, #280]
   29668:	mov	x1, x23
   2966c:	mov	x0, x19
   29670:	blr	x3
   29674:	str	xzr, [x19, #256]
   29678:	ldr	x0, [x19, #320]
   2967c:	add	x0, x0, #0x1
   29680:	str	x0, [x19, #320]
   29684:	b	2962c <__asan_backtrace_create_state@@Base+0xce0>
   29688:	ldp	x21, x22, [sp, #32]
   2968c:	ldp	x23, x24, [sp, #48]
   29690:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29694:	ldr	x20, [x22, #8]
   29698:	ldrsw	x22, [x22, #16]
   2969c:	add	x22, x20, x22
   296a0:	cmp	x20, x22
   296a4:	b.cs	2d950 <__asan_backtrace_create_state@@Base+0x5004>  // b.hs, b.nlast
   296a8:	mov	x23, #0xff                  	// #255
   296ac:	mov	x24, #0x0                   	// #0
   296b0:	b	29758 <__asan_backtrace_create_state@@Base+0xe0c>
   296b4:	sub	w1, w0, #0x41
   296b8:	and	w1, w1, #0xff
   296bc:	cmp	w1, #0x5
   296c0:	b.hi	296f8 <__asan_backtrace_create_state@@Base+0xdac>  // b.pmore
   296c4:	sub	w0, w0, #0x37
   296c8:	sxtw	x0, w0
   296cc:	add	x2, x0, x2, lsl #4
   296d0:	add	x21, x21, #0x1
   296d4:	cmp	x22, x21
   296d8:	b.eq	29728 <__asan_backtrace_create_state@@Base+0xddc>  // b.none
   296dc:	ldrb	w0, [x21]
   296e0:	sub	w1, w0, #0x30
   296e4:	and	w1, w1, #0xff
   296e8:	cmp	w1, #0x9
   296ec:	b.hi	296b4 <__asan_backtrace_create_state@@Base+0xd68>  // b.pmore
   296f0:	sub	w0, w0, #0x30
   296f4:	b	296c8 <__asan_backtrace_create_state@@Base+0xd7c>
   296f8:	sub	w1, w0, #0x61
   296fc:	and	w1, w1, #0xff
   29700:	cmp	w1, #0x5
   29704:	b.hi	29710 <__asan_backtrace_create_state@@Base+0xdc4>  // b.pmore
   29708:	sub	w0, w0, #0x57
   2970c:	b	296c8 <__asan_backtrace_create_state@@Base+0xd7c>
   29710:	cmp	x22, x21
   29714:	b.ls	29728 <__asan_backtrace_create_state@@Base+0xddc>  // b.plast
   29718:	ldrb	w0, [x21]
   2971c:	cmp	w0, #0x5f
   29720:	ccmp	x2, x23, #0x2, eq  // eq = none
   29724:	b.ls	2979c <__asan_backtrace_create_state@@Base+0xe50>  // b.plast
   29728:	ldrb	w21, [x20]
   2972c:	ldr	x0, [x19, #256]
   29730:	cmp	x0, #0xff
   29734:	b.eq	297f4 <__asan_backtrace_create_state@@Base+0xea8>  // b.none
   29738:	ldr	x0, [x19, #256]
   2973c:	add	x1, x0, #0x1
   29740:	str	x1, [x19, #256]
   29744:	strb	w21, [x19, x0]
   29748:	strb	w21, [x19, #264]
   2974c:	add	x20, x20, #0x1
   29750:	cmp	x22, x20
   29754:	b.ls	29820 <__asan_backtrace_create_state@@Base+0xed4>  // b.plast
   29758:	sub	x0, x22, x20
   2975c:	cmp	x0, #0x3
   29760:	b.le	29728 <__asan_backtrace_create_state@@Base+0xddc>
   29764:	ldrb	w0, [x20]
   29768:	cmp	w0, #0x5f
   2976c:	b.ne	29728 <__asan_backtrace_create_state@@Base+0xddc>  // b.any
   29770:	ldrb	w0, [x20, #1]
   29774:	cmp	w0, #0x5f
   29778:	b.ne	29728 <__asan_backtrace_create_state@@Base+0xddc>  // b.any
   2977c:	ldrb	w0, [x20, #2]
   29780:	cmp	w0, #0x55
   29784:	b.ne	29728 <__asan_backtrace_create_state@@Base+0xddc>  // b.any
   29788:	add	x21, x20, #0x3
   2978c:	cmp	x22, x21
   29790:	b.ls	29728 <__asan_backtrace_create_state@@Base+0xddc>  // b.plast
   29794:	mov	x2, x24
   29798:	b	296dc <__asan_backtrace_create_state@@Base+0xd90>
   2979c:	and	w20, w2, #0xff
   297a0:	ldr	x0, [x19, #256]
   297a4:	cmp	x0, #0xff
   297a8:	b.eq	297c8 <__asan_backtrace_create_state@@Base+0xe7c>  // b.none
   297ac:	ldr	x0, [x19, #256]
   297b0:	add	x1, x0, #0x1
   297b4:	str	x1, [x19, #256]
   297b8:	strb	w20, [x19, x0]
   297bc:	strb	w20, [x19, #264]
   297c0:	mov	x20, x21
   297c4:	b	2974c <__asan_backtrace_create_state@@Base+0xe00>
   297c8:	strb	wzr, [x19, #255]
   297cc:	ldr	x3, [x19, #272]
   297d0:	ldr	x2, [x19, #280]
   297d4:	mov	x1, x23
   297d8:	mov	x0, x19
   297dc:	blr	x3
   297e0:	str	xzr, [x19, #256]
   297e4:	ldr	x0, [x19, #320]
   297e8:	add	x0, x0, #0x1
   297ec:	str	x0, [x19, #320]
   297f0:	b	297ac <__asan_backtrace_create_state@@Base+0xe60>
   297f4:	strb	wzr, [x19, #255]
   297f8:	ldr	x3, [x19, #272]
   297fc:	ldr	x2, [x19, #280]
   29800:	mov	x1, x23
   29804:	mov	x0, x19
   29808:	blr	x3
   2980c:	str	xzr, [x19, #256]
   29810:	ldr	x0, [x19, #320]
   29814:	add	x0, x0, #0x1
   29818:	str	x0, [x19, #320]
   2981c:	b	29738 <__asan_backtrace_create_state@@Base+0xdec>
   29820:	ldp	x21, x22, [sp, #32]
   29824:	ldp	x23, x24, [sp, #48]
   29828:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2982c:	ldr	x2, [x22, #8]
   29830:	mov	w1, w20
   29834:	mov	x0, x19
   29838:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2983c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29840:	add	x0, x0, #0x7f8
   29844:	bl	64b0 <__asan_internal_strlen@plt>
   29848:	cbz	x0, 298c4 <__asan_backtrace_create_state@@Base+0xf78>
   2984c:	stp	x25, x26, [sp, #64]
   29850:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29854:	add	x21, x21, #0x7f8
   29858:	add	x24, x0, x21
   2985c:	mov	x25, #0xff                  	// #255
   29860:	b	29884 <__asan_backtrace_create_state@@Base+0xf38>
   29864:	ldr	x0, [x19, #256]
   29868:	add	x1, x0, #0x1
   2986c:	str	x1, [x19, #256]
   29870:	strb	w23, [x19, x0]
   29874:	strb	w23, [x19, #264]
   29878:	add	x21, x21, #0x1
   2987c:	cmp	x21, x24
   29880:	b.eq	298c0 <__asan_backtrace_create_state@@Base+0xf74>  // b.none
   29884:	ldrb	w23, [x21]
   29888:	ldr	x0, [x19, #256]
   2988c:	cmp	x0, #0xff
   29890:	b.ne	29864 <__asan_backtrace_create_state@@Base+0xf18>  // b.any
   29894:	strb	wzr, [x19, #255]
   29898:	ldr	x3, [x19, #272]
   2989c:	ldr	x2, [x19, #280]
   298a0:	mov	x1, x25
   298a4:	mov	x0, x19
   298a8:	blr	x3
   298ac:	str	xzr, [x19, #256]
   298b0:	ldr	x0, [x19, #320]
   298b4:	add	x0, x0, #0x1
   298b8:	str	x0, [x19, #320]
   298bc:	b	29864 <__asan_backtrace_create_state@@Base+0xf18>
   298c0:	ldp	x25, x26, [sp, #64]
   298c4:	ldr	x2, [x22, #16]
   298c8:	mov	w1, w20
   298cc:	mov	x0, x19
   298d0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   298d4:	ldr	x0, [x19, #256]
   298d8:	cmp	x0, #0xff
   298dc:	b.eq	29904 <__asan_backtrace_create_state@@Base+0xfb8>  // b.none
   298e0:	ldr	x1, [x19, #256]
   298e4:	add	x0, x1, #0x1
   298e8:	str	x0, [x19, #256]
   298ec:	mov	w0, #0x5d                  	// #93
   298f0:	strb	w0, [x19, x1]
   298f4:	strb	w0, [x19, #264]
   298f8:	ldp	x21, x22, [sp, #32]
   298fc:	ldp	x23, x24, [sp, #48]
   29900:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29904:	strb	wzr, [x19, #255]
   29908:	ldr	x3, [x19, #272]
   2990c:	ldr	x2, [x19, #280]
   29910:	mov	x1, #0xff                  	// #255
   29914:	mov	x0, x19
   29918:	blr	x3
   2991c:	str	xzr, [x19, #256]
   29920:	ldr	x0, [x19, #320]
   29924:	add	x0, x0, #0x1
   29928:	str	x0, [x19, #320]
   2992c:	b	298e0 <__asan_backtrace_create_state@@Base+0xf94>
   29930:	ldr	x2, [x22, #8]
   29934:	mov	w1, w20
   29938:	mov	x0, x19
   2993c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   29940:	tbz	w20, #2, 29994 <__asan_backtrace_create_state@@Base+0x1048>
   29944:	ldr	x0, [x19, #256]
   29948:	cmp	x0, #0xff
   2994c:	b.eq	29a20 <__asan_backtrace_create_state@@Base+0x10d4>  // b.none
   29950:	ldr	x1, [x19, #256]
   29954:	add	x0, x1, #0x1
   29958:	str	x0, [x19, #256]
   2995c:	mov	w0, #0x2e                  	// #46
   29960:	strb	w0, [x19, x1]
   29964:	strb	w0, [x19, #264]
   29968:	ldr	x23, [x22, #16]
   2996c:	ldr	w0, [x23]
   29970:	cmp	w0, #0x47
   29974:	b.eq	29a4c <__asan_backtrace_create_state@@Base+0x1100>  // b.none
   29978:	mov	x2, x23
   2997c:	mov	w1, w20
   29980:	mov	x0, x19
   29984:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   29988:	ldp	x21, x22, [sp, #32]
   2998c:	ldp	x23, x24, [sp, #48]
   29990:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29994:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29998:	add	x0, x0, #0x800
   2999c:	bl	64b0 <__asan_internal_strlen@plt>
   299a0:	cbz	x0, 29968 <__asan_backtrace_create_state@@Base+0x101c>
   299a4:	stp	x25, x26, [sp, #64]
   299a8:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   299ac:	add	x21, x21, #0x800
   299b0:	add	x24, x0, x21
   299b4:	mov	x25, #0xff                  	// #255
   299b8:	b	299dc <__asan_backtrace_create_state@@Base+0x1090>
   299bc:	ldr	x0, [x19, #256]
   299c0:	add	x1, x0, #0x1
   299c4:	str	x1, [x19, #256]
   299c8:	strb	w23, [x19, x0]
   299cc:	strb	w23, [x19, #264]
   299d0:	add	x21, x21, #0x1
   299d4:	cmp	x21, x24
   299d8:	b.eq	29a18 <__asan_backtrace_create_state@@Base+0x10cc>  // b.none
   299dc:	ldrb	w23, [x21]
   299e0:	ldr	x0, [x19, #256]
   299e4:	cmp	x0, #0xff
   299e8:	b.ne	299bc <__asan_backtrace_create_state@@Base+0x1070>  // b.any
   299ec:	strb	wzr, [x19, #255]
   299f0:	ldr	x3, [x19, #272]
   299f4:	ldr	x2, [x19, #280]
   299f8:	mov	x1, x25
   299fc:	mov	x0, x19
   29a00:	blr	x3
   29a04:	str	xzr, [x19, #256]
   29a08:	ldr	x0, [x19, #320]
   29a0c:	add	x0, x0, #0x1
   29a10:	str	x0, [x19, #320]
   29a14:	b	299bc <__asan_backtrace_create_state@@Base+0x1070>
   29a18:	ldp	x25, x26, [sp, #64]
   29a1c:	b	29968 <__asan_backtrace_create_state@@Base+0x101c>
   29a20:	strb	wzr, [x19, #255]
   29a24:	ldr	x3, [x19, #272]
   29a28:	ldr	x2, [x19, #280]
   29a2c:	mov	x1, #0xff                  	// #255
   29a30:	mov	x0, x19
   29a34:	blr	x3
   29a38:	str	xzr, [x19, #256]
   29a3c:	ldr	x0, [x19, #320]
   29a40:	add	x0, x0, #0x1
   29a44:	str	x0, [x19, #320]
   29a48:	b	29950 <__asan_backtrace_create_state@@Base+0x1004>
   29a4c:	stp	x25, x26, [sp, #64]
   29a50:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29a54:	add	x0, x0, #0x808
   29a58:	bl	64b0 <__asan_internal_strlen@plt>
   29a5c:	cbz	x0, 29ad0 <__asan_backtrace_create_state@@Base+0x1184>
   29a60:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29a64:	add	x21, x21, #0x808
   29a68:	add	x24, x0, x21
   29a6c:	mov	x25, #0xff                  	// #255
   29a70:	b	29a94 <__asan_backtrace_create_state@@Base+0x1148>
   29a74:	ldr	x0, [x19, #256]
   29a78:	add	x1, x0, #0x1
   29a7c:	str	x1, [x19, #256]
   29a80:	strb	w22, [x19, x0]
   29a84:	strb	w22, [x19, #264]
   29a88:	add	x21, x21, #0x1
   29a8c:	cmp	x24, x21
   29a90:	b.eq	29ad0 <__asan_backtrace_create_state@@Base+0x1184>  // b.none
   29a94:	ldrb	w22, [x21]
   29a98:	ldr	x0, [x19, #256]
   29a9c:	cmp	x0, #0xff
   29aa0:	b.ne	29a74 <__asan_backtrace_create_state@@Base+0x1128>  // b.any
   29aa4:	strb	wzr, [x19, #255]
   29aa8:	ldr	x3, [x19, #272]
   29aac:	ldr	x2, [x19, #280]
   29ab0:	mov	x1, x25
   29ab4:	mov	x0, x19
   29ab8:	blr	x3
   29abc:	str	xzr, [x19, #256]
   29ac0:	ldr	x0, [x19, #320]
   29ac4:	add	x0, x0, #0x1
   29ac8:	str	x0, [x19, #320]
   29acc:	b	29a74 <__asan_backtrace_create_state@@Base+0x1128>
   29ad0:	ldr	w2, [x23, #16]
   29ad4:	add	x21, sp, #0x80
   29ad8:	add	w2, w2, #0x1
   29adc:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   29ae0:	add	x1, x1, #0xca8
   29ae4:	mov	x0, x21
   29ae8:	bl	65f0 <sprintf@plt>
   29aec:	mov	x0, x21
   29af0:	bl	64b0 <__asan_internal_strlen@plt>
   29af4:	cbz	x0, 29b64 <__asan_backtrace_create_state@@Base+0x1218>
   29af8:	add	x21, sp, #0x80
   29afc:	add	x24, x0, x21
   29b00:	mov	x25, #0xff                  	// #255
   29b04:	b	29b28 <__asan_backtrace_create_state@@Base+0x11dc>
   29b08:	ldr	x0, [x19, #256]
   29b0c:	add	x1, x0, #0x1
   29b10:	str	x1, [x19, #256]
   29b14:	strb	w22, [x19, x0]
   29b18:	strb	w22, [x19, #264]
   29b1c:	add	x21, x21, #0x1
   29b20:	cmp	x21, x24
   29b24:	b.eq	29b64 <__asan_backtrace_create_state@@Base+0x1218>  // b.none
   29b28:	ldrb	w22, [x21]
   29b2c:	ldr	x0, [x19, #256]
   29b30:	cmp	x0, #0xff
   29b34:	b.ne	29b08 <__asan_backtrace_create_state@@Base+0x11bc>  // b.any
   29b38:	strb	wzr, [x19, #255]
   29b3c:	ldr	x3, [x19, #272]
   29b40:	ldr	x2, [x19, #280]
   29b44:	mov	x1, x25
   29b48:	mov	x0, x19
   29b4c:	blr	x3
   29b50:	str	xzr, [x19, #256]
   29b54:	ldr	x0, [x19, #320]
   29b58:	add	x0, x0, #0x1
   29b5c:	str	x0, [x19, #320]
   29b60:	b	29b08 <__asan_backtrace_create_state@@Base+0x11bc>
   29b64:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29b68:	add	x0, x0, #0x818
   29b6c:	bl	64b0 <__asan_internal_strlen@plt>
   29b70:	cbz	x0, 29be4 <__asan_backtrace_create_state@@Base+0x1298>
   29b74:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29b78:	add	x21, x21, #0x818
   29b7c:	add	x24, x21, x0
   29b80:	mov	x25, #0xff                  	// #255
   29b84:	b	29ba8 <__asan_backtrace_create_state@@Base+0x125c>
   29b88:	ldr	x0, [x19, #256]
   29b8c:	add	x1, x0, #0x1
   29b90:	str	x1, [x19, #256]
   29b94:	strb	w22, [x19, x0]
   29b98:	strb	w22, [x19, #264]
   29b9c:	add	x21, x21, #0x1
   29ba0:	cmp	x21, x24
   29ba4:	b.eq	29be4 <__asan_backtrace_create_state@@Base+0x1298>  // b.none
   29ba8:	ldrb	w22, [x21]
   29bac:	ldr	x0, [x19, #256]
   29bb0:	cmp	x0, #0xff
   29bb4:	b.ne	29b88 <__asan_backtrace_create_state@@Base+0x123c>  // b.any
   29bb8:	strb	wzr, [x19, #255]
   29bbc:	ldr	x3, [x19, #272]
   29bc0:	ldr	x2, [x19, #280]
   29bc4:	mov	x1, x25
   29bc8:	mov	x0, x19
   29bcc:	blr	x3
   29bd0:	str	xzr, [x19, #256]
   29bd4:	ldr	x0, [x19, #320]
   29bd8:	add	x0, x0, #0x1
   29bdc:	str	x0, [x19, #320]
   29be0:	b	29b88 <__asan_backtrace_create_state@@Base+0x123c>
   29be4:	ldr	x23, [x23, #8]
   29be8:	ldp	x25, x26, [sp, #64]
   29bec:	b	29978 <__asan_backtrace_create_state@@Base+0x102c>
   29bf0:	stp	x25, x26, [sp, #64]
   29bf4:	ldr	x26, [x19, #296]
   29bf8:	str	xzr, [x19, #296]
   29bfc:	ldr	x21, [x22, #8]
   29c00:	cbz	x21, 29c74 <__asan_backtrace_create_state@@Base+0x1328>
   29c04:	stp	x27, x28, [sp, #80]
   29c08:	ldr	x24, [x19, #288]
   29c0c:	add	x25, sp, #0x80
   29c10:	mov	w23, #0x0                   	// #0
   29c14:	ldr	x0, [x19, #296]
   29c18:	str	x0, [x25]
   29c1c:	str	x25, [x19, #296]
   29c20:	str	x21, [x25, #8]
   29c24:	str	wzr, [x25, #16]
   29c28:	str	x24, [x25, #24]
   29c2c:	add	w23, w23, #0x1
   29c30:	ldr	w27, [x21]
   29c34:	mov	w0, w27
   29c38:	bl	289e0 <__asan_backtrace_create_state@@Base+0x94>
   29c3c:	cbz	w0, 2d85c <__asan_backtrace_create_state@@Base+0x4f10>
   29c40:	ldr	x21, [x21, #8]
   29c44:	cbz	x21, 29c70 <__asan_backtrace_create_state@@Base+0x1324>
   29c48:	add	x25, x25, #0x20
   29c4c:	cmp	w23, #0x4
   29c50:	b.ne	29c14 <__asan_backtrace_create_state@@Base+0x12c8>  // b.any
   29c54:	mov	w0, #0x1                   	// #1
   29c58:	str	w0, [x19, #304]
   29c5c:	ldp	x21, x22, [sp, #32]
   29c60:	ldp	x23, x24, [sp, #48]
   29c64:	ldp	x25, x26, [sp, #64]
   29c68:	ldp	x27, x28, [sp, #80]
   29c6c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29c70:	ldp	x27, x28, [sp, #80]
   29c74:	mov	w0, #0x1                   	// #1
   29c78:	str	w0, [x19, #304]
   29c7c:	ldp	x21, x22, [sp, #32]
   29c80:	ldp	x23, x24, [sp, #48]
   29c84:	ldp	x25, x26, [sp, #64]
   29c88:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29c8c:	ldr	x21, [x21, #16]
   29c90:	ldr	w0, [x21]
   29c94:	cmp	w0, #0x47
   29c98:	b.eq	29d1c <__asan_backtrace_create_state@@Base+0x13d0>  // b.none
   29c9c:	ubfiz	x0, x23, #5, #32
   29ca0:	add	x25, sp, #0x80
   29ca4:	add	x25, x25, x0
   29ca8:	add	x28, sp, #0x80
   29cac:	add	x27, sp, #0x88
   29cb0:	add	x0, sp, #0x90
   29cb4:	str	x0, [sp, #96]
   29cb8:	add	x0, sp, #0x98
   29cbc:	str	x0, [sp, #104]
   29cc0:	ldr	w0, [x21]
   29cc4:	bl	289e0 <__asan_backtrace_create_state@@Base+0x94>
   29cc8:	cbz	w0, 2d864 <__asan_backtrace_create_state@@Base+0x4f18>
   29ccc:	cmp	w23, #0x3
   29cd0:	b.hi	29d40 <__asan_backtrace_create_state@@Base+0x13f4>  // b.pmore
   29cd4:	sub	w0, w23, #0x1
   29cd8:	lsl	x0, x0, #5
   29cdc:	add	x1, x28, x0
   29ce0:	ldp	x2, x3, [x1]
   29ce4:	stp	x2, x3, [x25]
   29ce8:	ldp	x2, x3, [x1, #16]
   29cec:	stp	x2, x3, [x25, #16]
   29cf0:	str	x1, [x25]
   29cf4:	str	x25, [x19, #296]
   29cf8:	str	x21, [x27, x0]
   29cfc:	ldr	x1, [sp, #96]
   29d00:	str	wzr, [x1, x0]
   29d04:	ldr	x1, [sp, #104]
   29d08:	str	x24, [x1, x0]
   29d0c:	add	w23, w23, #0x1
   29d10:	ldr	x21, [x21, #8]
   29d14:	add	x25, x25, #0x20
   29d18:	b	29cc0 <__asan_backtrace_create_state@@Base+0x1374>
   29d1c:	ldr	x21, [x21, #8]
   29d20:	cbnz	x21, 29c9c <__asan_backtrace_create_state@@Base+0x1350>
   29d24:	mov	w0, #0x1                   	// #1
   29d28:	str	w0, [x19, #304]
   29d2c:	ldp	x21, x22, [sp, #32]
   29d30:	ldp	x23, x24, [sp, #48]
   29d34:	ldp	x25, x26, [sp, #64]
   29d38:	ldp	x27, x28, [sp, #80]
   29d3c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29d40:	mov	w0, #0x1                   	// #1
   29d44:	str	w0, [x19, #304]
   29d48:	ldp	x21, x22, [sp, #32]
   29d4c:	ldp	x23, x24, [sp, #48]
   29d50:	ldp	x25, x26, [sp, #64]
   29d54:	ldp	x27, x28, [sp, #80]
   29d58:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29d5c:	str	x24, [sp, #112]
   29d60:	add	x0, sp, #0x70
   29d64:	str	x0, [x19, #288]
   29d68:	str	x21, [sp, #120]
   29d6c:	b	2d870 <__asan_backtrace_create_state@@Base+0x4f24>
   29d70:	ldr	x0, [sp, #112]
   29d74:	str	x0, [x19, #288]
   29d78:	b	2d88c <__asan_backtrace_create_state@@Base+0x4f40>
   29d7c:	ldr	x0, [x19, #256]
   29d80:	add	x1, x0, #0x1
   29d84:	str	x1, [x19, #256]
   29d88:	strb	w22, [x19, x0]
   29d8c:	strb	w22, [x19, #264]
   29d90:	ldr	x2, [x24, #8]
   29d94:	mov	w1, w20
   29d98:	mov	x0, x19
   29d9c:	bl	2dacc <__asan_backtrace_create_state@@Base+0x5180>
   29da0:	sub	x21, x21, #0x20
   29da4:	cbz	w23, 29df0 <__asan_backtrace_create_state@@Base+0x14a4>
   29da8:	sub	w23, w23, #0x1
   29dac:	mov	x24, x21
   29db0:	ldr	w0, [x21, #16]
   29db4:	cbnz	w0, 29da0 <__asan_backtrace_create_state@@Base+0x1454>
   29db8:	ldr	x0, [x19, #256]
   29dbc:	cmp	x0, #0xff
   29dc0:	b.ne	29d7c <__asan_backtrace_create_state@@Base+0x1430>  // b.any
   29dc4:	strb	wzr, [x19, #255]
   29dc8:	ldr	x3, [x19, #272]
   29dcc:	ldr	x2, [x19, #280]
   29dd0:	mov	x1, x25
   29dd4:	mov	x0, x19
   29dd8:	blr	x3
   29ddc:	str	xzr, [x19, #256]
   29de0:	ldr	x0, [x19, #320]
   29de4:	add	x0, x0, #0x1
   29de8:	str	x0, [x19, #320]
   29dec:	b	29d7c <__asan_backtrace_create_state@@Base+0x1430>
   29df0:	str	x26, [x19, #296]
   29df4:	ldp	x21, x22, [sp, #32]
   29df8:	ldp	x23, x24, [sp, #48]
   29dfc:	ldp	x25, x26, [sp, #64]
   29e00:	ldp	x27, x28, [sp, #80]
   29e04:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29e08:	ldr	x23, [x19, #368]
   29e0c:	str	x22, [x19, #368]
   29e10:	ldr	x24, [x19, #296]
   29e14:	str	xzr, [x19, #296]
   29e18:	ldr	x21, [x22, #8]
   29e1c:	tbz	w20, #2, 29e34 <__asan_backtrace_create_state@@Base+0x14e8>
   29e20:	ldr	w0, [x21]
   29e24:	cbnz	w0, 29e34 <__asan_backtrace_create_state@@Base+0x14e8>
   29e28:	ldr	w0, [x21, #16]
   29e2c:	cmp	w0, #0x6
   29e30:	b.eq	29ec8 <__asan_backtrace_create_state@@Base+0x157c>  // b.none
   29e34:	mov	x2, x21
   29e38:	mov	w1, w20
   29e3c:	mov	x0, x19
   29e40:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   29e44:	ldrb	w0, [x19, #264]
   29e48:	cmp	w0, #0x3c
   29e4c:	b.eq	29f14 <__asan_backtrace_create_state@@Base+0x15c8>  // b.none
   29e50:	ldr	x0, [x19, #256]
   29e54:	cmp	x0, #0xff
   29e58:	b.eq	29f68 <__asan_backtrace_create_state@@Base+0x161c>  // b.none
   29e5c:	ldr	x1, [x19, #256]
   29e60:	add	x0, x1, #0x1
   29e64:	str	x0, [x19, #256]
   29e68:	mov	w0, #0x3c                  	// #60
   29e6c:	strb	w0, [x19, x1]
   29e70:	strb	w0, [x19, #264]
   29e74:	ldr	x2, [x22, #16]
   29e78:	mov	w1, w20
   29e7c:	mov	x0, x19
   29e80:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   29e84:	ldrb	w0, [x19, #264]
   29e88:	cmp	w0, #0x3e
   29e8c:	b.eq	29f94 <__asan_backtrace_create_state@@Base+0x1648>  // b.none
   29e90:	ldr	x0, [x19, #256]
   29e94:	cmp	x0, #0xff
   29e98:	b.eq	29fe8 <__asan_backtrace_create_state@@Base+0x169c>  // b.none
   29e9c:	ldr	x1, [x19, #256]
   29ea0:	add	x0, x1, #0x1
   29ea4:	str	x0, [x19, #256]
   29ea8:	mov	w0, #0x3e                  	// #62
   29eac:	strb	w0, [x19, x1]
   29eb0:	strb	w0, [x19, #264]
   29eb4:	str	x24, [x19, #296]
   29eb8:	str	x23, [x19, #368]
   29ebc:	ldp	x21, x22, [sp, #32]
   29ec0:	ldp	x23, x24, [sp, #48]
   29ec4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   29ec8:	mov	x2, #0x6                   	// #6
   29ecc:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29ed0:	add	x1, x1, #0x820
   29ed4:	ldr	x0, [x21, #8]
   29ed8:	bl	6830 <__asan_internal_strncmp@plt>
   29edc:	cbnz	w0, 29e34 <__asan_backtrace_create_state@@Base+0x14e8>
   29ee0:	ldr	x2, [x22, #16]
   29ee4:	mov	w1, w20
   29ee8:	mov	x0, x19
   29eec:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   29ef0:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   29ef4:	add	x20, x20, #0x828
   29ef8:	mov	x0, x20
   29efc:	bl	64b0 <__asan_internal_strlen@plt>
   29f00:	mov	x2, x0
   29f04:	mov	x1, x20
   29f08:	mov	x0, x19
   29f0c:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   29f10:	b	29eb4 <__asan_backtrace_create_state@@Base+0x1568>
   29f14:	ldr	x0, [x19, #256]
   29f18:	cmp	x0, #0xff
   29f1c:	b.eq	29f3c <__asan_backtrace_create_state@@Base+0x15f0>  // b.none
   29f20:	ldr	x1, [x19, #256]
   29f24:	add	x0, x1, #0x1
   29f28:	str	x0, [x19, #256]
   29f2c:	mov	w0, #0x20                  	// #32
   29f30:	strb	w0, [x19, x1]
   29f34:	strb	w0, [x19, #264]
   29f38:	b	29e50 <__asan_backtrace_create_state@@Base+0x1504>
   29f3c:	strb	wzr, [x19, #255]
   29f40:	ldr	x3, [x19, #272]
   29f44:	ldr	x2, [x19, #280]
   29f48:	mov	x1, #0xff                  	// #255
   29f4c:	mov	x0, x19
   29f50:	blr	x3
   29f54:	str	xzr, [x19, #256]
   29f58:	ldr	x0, [x19, #320]
   29f5c:	add	x0, x0, #0x1
   29f60:	str	x0, [x19, #320]
   29f64:	b	29f20 <__asan_backtrace_create_state@@Base+0x15d4>
   29f68:	strb	wzr, [x19, #255]
   29f6c:	ldr	x3, [x19, #272]
   29f70:	ldr	x2, [x19, #280]
   29f74:	mov	x1, #0xff                  	// #255
   29f78:	mov	x0, x19
   29f7c:	blr	x3
   29f80:	str	xzr, [x19, #256]
   29f84:	ldr	x0, [x19, #320]
   29f88:	add	x0, x0, #0x1
   29f8c:	str	x0, [x19, #320]
   29f90:	b	29e5c <__asan_backtrace_create_state@@Base+0x1510>
   29f94:	ldr	x0, [x19, #256]
   29f98:	cmp	x0, #0xff
   29f9c:	b.eq	29fbc <__asan_backtrace_create_state@@Base+0x1670>  // b.none
   29fa0:	ldr	x1, [x19, #256]
   29fa4:	add	x0, x1, #0x1
   29fa8:	str	x0, [x19, #256]
   29fac:	mov	w0, #0x20                  	// #32
   29fb0:	strb	w0, [x19, x1]
   29fb4:	strb	w0, [x19, #264]
   29fb8:	b	29e90 <__asan_backtrace_create_state@@Base+0x1544>
   29fbc:	strb	wzr, [x19, #255]
   29fc0:	ldr	x3, [x19, #272]
   29fc4:	ldr	x2, [x19, #280]
   29fc8:	mov	x1, #0xff                  	// #255
   29fcc:	mov	x0, x19
   29fd0:	blr	x3
   29fd4:	str	xzr, [x19, #256]
   29fd8:	ldr	x0, [x19, #320]
   29fdc:	add	x0, x0, #0x1
   29fe0:	str	x0, [x19, #320]
   29fe4:	b	29fa0 <__asan_backtrace_create_state@@Base+0x1654>
   29fe8:	strb	wzr, [x19, #255]
   29fec:	ldr	x3, [x19, #272]
   29ff0:	ldr	x2, [x19, #280]
   29ff4:	mov	x1, #0xff                  	// #255
   29ff8:	mov	x0, x19
   29ffc:	blr	x3
   2a000:	str	xzr, [x19, #256]
   2a004:	ldr	x0, [x19, #320]
   2a008:	add	x0, x0, #0x1
   2a00c:	str	x0, [x19, #320]
   2a010:	b	29e9c <__asan_backtrace_create_state@@Base+0x1550>
   2a014:	ldr	w0, [x19, #312]
   2a018:	cbz	w0, 2a12c <__asan_backtrace_create_state@@Base+0x17e0>
   2a01c:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a020:	add	x20, x20, #0x830
   2a024:	add	x23, x20, #0x5
   2a028:	mov	x24, #0xff                  	// #255
   2a02c:	b	2a050 <__asan_backtrace_create_state@@Base+0x1704>
   2a030:	ldr	x0, [x19, #256]
   2a034:	add	x1, x0, #0x1
   2a038:	str	x1, [x19, #256]
   2a03c:	strb	w21, [x19, x0]
   2a040:	strb	w21, [x19, #264]
   2a044:	add	x20, x20, #0x1
   2a048:	cmp	x23, x20
   2a04c:	b.eq	2a08c <__asan_backtrace_create_state@@Base+0x1740>  // b.none
   2a050:	ldrb	w21, [x20]
   2a054:	ldr	x0, [x19, #256]
   2a058:	cmp	x0, #0xff
   2a05c:	b.ne	2a030 <__asan_backtrace_create_state@@Base+0x16e4>  // b.any
   2a060:	strb	wzr, [x19, #255]
   2a064:	ldr	x3, [x19, #272]
   2a068:	ldr	x2, [x19, #280]
   2a06c:	mov	x1, x24
   2a070:	mov	x0, x19
   2a074:	blr	x3
   2a078:	str	xzr, [x19, #256]
   2a07c:	ldr	x0, [x19, #320]
   2a080:	add	x0, x0, #0x1
   2a084:	str	x0, [x19, #320]
   2a088:	b	2a030 <__asan_backtrace_create_state@@Base+0x16e4>
   2a08c:	ldr	x2, [x22, #8]
   2a090:	add	x20, sp, #0x80
   2a094:	add	w2, w2, #0x1
   2a098:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   2a09c:	add	x1, x1, #0xca8
   2a0a0:	mov	x0, x20
   2a0a4:	bl	65f0 <sprintf@plt>
   2a0a8:	mov	x0, x20
   2a0ac:	bl	64b0 <__asan_internal_strlen@plt>
   2a0b0:	cbz	x0, 2d95c <__asan_backtrace_create_state@@Base+0x5010>
   2a0b4:	add	x20, sp, #0x80
   2a0b8:	add	x22, x0, x20
   2a0bc:	mov	x23, #0xff                  	// #255
   2a0c0:	b	2a0e4 <__asan_backtrace_create_state@@Base+0x1798>
   2a0c4:	ldr	x0, [x19, #256]
   2a0c8:	add	x1, x0, #0x1
   2a0cc:	str	x1, [x19, #256]
   2a0d0:	strb	w21, [x19, x0]
   2a0d4:	strb	w21, [x19, #264]
   2a0d8:	add	x20, x20, #0x1
   2a0dc:	cmp	x22, x20
   2a0e0:	b.eq	2a120 <__asan_backtrace_create_state@@Base+0x17d4>  // b.none
   2a0e4:	ldrb	w21, [x20]
   2a0e8:	ldr	x0, [x19, #256]
   2a0ec:	cmp	x0, #0xff
   2a0f0:	b.ne	2a0c4 <__asan_backtrace_create_state@@Base+0x1778>  // b.any
   2a0f4:	strb	wzr, [x19, #255]
   2a0f8:	ldr	x3, [x19, #272]
   2a0fc:	ldr	x2, [x19, #280]
   2a100:	mov	x1, x23
   2a104:	mov	x0, x19
   2a108:	blr	x3
   2a10c:	str	xzr, [x19, #256]
   2a110:	ldr	x0, [x19, #320]
   2a114:	add	x0, x0, #0x1
   2a118:	str	x0, [x19, #320]
   2a11c:	b	2a0c4 <__asan_backtrace_create_state@@Base+0x1778>
   2a120:	ldp	x21, x22, [sp, #32]
   2a124:	ldp	x23, x24, [sp, #48]
   2a128:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a12c:	mov	x1, x22
   2a130:	mov	x0, x19
   2a134:	bl	292b4 <__asan_backtrace_create_state@@Base+0x968>
   2a138:	cbz	x0, 2a180 <__asan_backtrace_create_state@@Base+0x1834>
   2a13c:	ldr	w1, [x0]
   2a140:	cmp	w1, #0x2f
   2a144:	b.eq	2a174 <__asan_backtrace_create_state@@Base+0x1828>  // b.none
   2a148:	ldr	x21, [x19, #288]
   2a14c:	ldr	x1, [x21]
   2a150:	str	x1, [x19, #288]
   2a154:	mov	x2, x0
   2a158:	mov	w1, w20
   2a15c:	mov	x0, x19
   2a160:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a164:	str	x21, [x19, #288]
   2a168:	ldp	x21, x22, [sp, #32]
   2a16c:	ldp	x23, x24, [sp, #48]
   2a170:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a174:	ldr	w1, [x19, #316]
   2a178:	bl	2927c <__asan_backtrace_create_state@@Base+0x930>
   2a17c:	cbnz	x0, 2a148 <__asan_backtrace_create_state@@Base+0x17fc>
   2a180:	mov	w0, #0x1                   	// #1
   2a184:	str	w0, [x19, #304]
   2a188:	ldp	x21, x22, [sp, #32]
   2a18c:	ldp	x23, x24, [sp, #48]
   2a190:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a194:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a198:	add	x0, x0, #0x838
   2a19c:	bl	64b0 <__asan_internal_strlen@plt>
   2a1a0:	cbz	x0, 2a21c <__asan_backtrace_create_state@@Base+0x18d0>
   2a1a4:	stp	x25, x26, [sp, #64]
   2a1a8:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a1ac:	add	x21, x21, #0x838
   2a1b0:	add	x24, x0, x21
   2a1b4:	mov	x25, #0xff                  	// #255
   2a1b8:	b	2a1dc <__asan_backtrace_create_state@@Base+0x1890>
   2a1bc:	ldr	x0, [x19, #256]
   2a1c0:	add	x1, x0, #0x1
   2a1c4:	str	x1, [x19, #256]
   2a1c8:	strb	w23, [x19, x0]
   2a1cc:	strb	w23, [x19, #264]
   2a1d0:	add	x21, x21, #0x1
   2a1d4:	cmp	x21, x24
   2a1d8:	b.eq	2a218 <__asan_backtrace_create_state@@Base+0x18cc>  // b.none
   2a1dc:	ldrb	w23, [x21]
   2a1e0:	ldr	x0, [x19, #256]
   2a1e4:	cmp	x0, #0xff
   2a1e8:	b.ne	2a1bc <__asan_backtrace_create_state@@Base+0x1870>  // b.any
   2a1ec:	strb	wzr, [x19, #255]
   2a1f0:	ldr	x3, [x19, #272]
   2a1f4:	ldr	x2, [x19, #280]
   2a1f8:	mov	x1, x25
   2a1fc:	mov	x0, x19
   2a200:	blr	x3
   2a204:	str	xzr, [x19, #256]
   2a208:	ldr	x0, [x19, #320]
   2a20c:	add	x0, x0, #0x1
   2a210:	str	x0, [x19, #320]
   2a214:	b	2a1bc <__asan_backtrace_create_state@@Base+0x1870>
   2a218:	ldp	x25, x26, [sp, #64]
   2a21c:	ldr	x2, [x22, #8]
   2a220:	mov	w1, w20
   2a224:	mov	x0, x19
   2a228:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a22c:	ldp	x21, x22, [sp, #32]
   2a230:	ldp	x23, x24, [sp, #48]
   2a234:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a238:	ldr	x2, [x22, #16]
   2a23c:	mov	w1, w20
   2a240:	mov	x0, x19
   2a244:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a248:	ldp	x21, x22, [sp, #32]
   2a24c:	ldp	x23, x24, [sp, #48]
   2a250:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a254:	ldr	x0, [x19, #256]
   2a258:	cmp	x0, #0xff
   2a25c:	b.eq	2a294 <__asan_backtrace_create_state@@Base+0x1948>  // b.none
   2a260:	ldr	x1, [x19, #256]
   2a264:	add	x0, x1, #0x1
   2a268:	str	x0, [x19, #256]
   2a26c:	mov	w0, #0x7e                  	// #126
   2a270:	strb	w0, [x19, x1]
   2a274:	strb	w0, [x19, #264]
   2a278:	ldr	x2, [x22, #16]
   2a27c:	mov	w1, w20
   2a280:	mov	x0, x19
   2a284:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a288:	ldp	x21, x22, [sp, #32]
   2a28c:	ldp	x23, x24, [sp, #48]
   2a290:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a294:	strb	wzr, [x19, #255]
   2a298:	ldr	x3, [x19, #272]
   2a29c:	ldr	x2, [x19, #280]
   2a2a0:	mov	x1, #0xff                  	// #255
   2a2a4:	mov	x0, x19
   2a2a8:	blr	x3
   2a2ac:	str	xzr, [x19, #256]
   2a2b0:	ldr	x0, [x19, #320]
   2a2b4:	add	x0, x0, #0x1
   2a2b8:	str	x0, [x19, #320]
   2a2bc:	b	2a260 <__asan_backtrace_create_state@@Base+0x1914>
   2a2c0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a2c4:	add	x0, x0, #0x858
   2a2c8:	bl	64b0 <__asan_internal_strlen@plt>
   2a2cc:	cbz	x0, 2a348 <__asan_backtrace_create_state@@Base+0x19fc>
   2a2d0:	stp	x25, x26, [sp, #64]
   2a2d4:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a2d8:	add	x21, x21, #0x858
   2a2dc:	add	x24, x0, x21
   2a2e0:	mov	x25, #0xff                  	// #255
   2a2e4:	b	2a308 <__asan_backtrace_create_state@@Base+0x19bc>
   2a2e8:	ldr	x0, [x19, #256]
   2a2ec:	add	x1, x0, #0x1
   2a2f0:	str	x1, [x19, #256]
   2a2f4:	strb	w23, [x19, x0]
   2a2f8:	strb	w23, [x19, #264]
   2a2fc:	add	x21, x21, #0x1
   2a300:	cmp	x24, x21
   2a304:	b.eq	2a344 <__asan_backtrace_create_state@@Base+0x19f8>  // b.none
   2a308:	ldrb	w23, [x21]
   2a30c:	ldr	x0, [x19, #256]
   2a310:	cmp	x0, #0xff
   2a314:	b.ne	2a2e8 <__asan_backtrace_create_state@@Base+0x199c>  // b.any
   2a318:	strb	wzr, [x19, #255]
   2a31c:	ldr	x3, [x19, #272]
   2a320:	ldr	x2, [x19, #280]
   2a324:	mov	x1, x25
   2a328:	mov	x0, x19
   2a32c:	blr	x3
   2a330:	str	xzr, [x19, #256]
   2a334:	ldr	x0, [x19, #320]
   2a338:	add	x0, x0, #0x1
   2a33c:	str	x0, [x19, #320]
   2a340:	b	2a2e8 <__asan_backtrace_create_state@@Base+0x199c>
   2a344:	ldp	x25, x26, [sp, #64]
   2a348:	ldr	x2, [x22, #8]
   2a34c:	mov	w1, w20
   2a350:	mov	x0, x19
   2a354:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a358:	ldp	x21, x22, [sp, #32]
   2a35c:	ldp	x23, x24, [sp, #48]
   2a360:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a364:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a368:	add	x0, x0, #0x868
   2a36c:	bl	64b0 <__asan_internal_strlen@plt>
   2a370:	cbz	x0, 2a3ec <__asan_backtrace_create_state@@Base+0x1aa0>
   2a374:	stp	x25, x26, [sp, #64]
   2a378:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a37c:	add	x21, x21, #0x868
   2a380:	add	x24, x0, x21
   2a384:	mov	x25, #0xff                  	// #255
   2a388:	b	2a3ac <__asan_backtrace_create_state@@Base+0x1a60>
   2a38c:	ldr	x0, [x19, #256]
   2a390:	add	x1, x0, #0x1
   2a394:	str	x1, [x19, #256]
   2a398:	strb	w23, [x19, x0]
   2a39c:	strb	w23, [x19, #264]
   2a3a0:	add	x21, x21, #0x1
   2a3a4:	cmp	x21, x24
   2a3a8:	b.eq	2a3e8 <__asan_backtrace_create_state@@Base+0x1a9c>  // b.none
   2a3ac:	ldrb	w23, [x21]
   2a3b0:	ldr	x0, [x19, #256]
   2a3b4:	cmp	x0, #0xff
   2a3b8:	b.ne	2a38c <__asan_backtrace_create_state@@Base+0x1a40>  // b.any
   2a3bc:	strb	wzr, [x19, #255]
   2a3c0:	ldr	x3, [x19, #272]
   2a3c4:	ldr	x2, [x19, #280]
   2a3c8:	mov	x1, x25
   2a3cc:	mov	x0, x19
   2a3d0:	blr	x3
   2a3d4:	str	xzr, [x19, #256]
   2a3d8:	ldr	x0, [x19, #320]
   2a3dc:	add	x0, x0, #0x1
   2a3e0:	str	x0, [x19, #320]
   2a3e4:	b	2a38c <__asan_backtrace_create_state@@Base+0x1a40>
   2a3e8:	ldp	x25, x26, [sp, #64]
   2a3ec:	ldr	x2, [x22, #8]
   2a3f0:	mov	w1, w20
   2a3f4:	mov	x0, x19
   2a3f8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a3fc:	ldp	x21, x22, [sp, #32]
   2a400:	ldp	x23, x24, [sp, #48]
   2a404:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a408:	stp	x25, x26, [sp, #64]
   2a40c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a410:	add	x0, x0, #0x878
   2a414:	bl	64b0 <__asan_internal_strlen@plt>
   2a418:	cbz	x0, 2a48c <__asan_backtrace_create_state@@Base+0x1b40>
   2a41c:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a420:	add	x21, x21, #0x878
   2a424:	add	x24, x0, x21
   2a428:	mov	x25, #0xff                  	// #255
   2a42c:	b	2a450 <__asan_backtrace_create_state@@Base+0x1b04>
   2a430:	ldr	x0, [x19, #256]
   2a434:	add	x1, x0, #0x1
   2a438:	str	x1, [x19, #256]
   2a43c:	strb	w23, [x19, x0]
   2a440:	strb	w23, [x19, #264]
   2a444:	add	x21, x21, #0x1
   2a448:	cmp	x21, x24
   2a44c:	b.eq	2a48c <__asan_backtrace_create_state@@Base+0x1b40>  // b.none
   2a450:	ldrb	w23, [x21]
   2a454:	ldr	x0, [x19, #256]
   2a458:	cmp	x0, #0xff
   2a45c:	b.ne	2a430 <__asan_backtrace_create_state@@Base+0x1ae4>  // b.any
   2a460:	strb	wzr, [x19, #255]
   2a464:	ldr	x3, [x19, #272]
   2a468:	ldr	x2, [x19, #280]
   2a46c:	mov	x1, x25
   2a470:	mov	x0, x19
   2a474:	blr	x3
   2a478:	str	xzr, [x19, #256]
   2a47c:	ldr	x0, [x19, #320]
   2a480:	add	x0, x0, #0x1
   2a484:	str	x0, [x19, #320]
   2a488:	b	2a430 <__asan_backtrace_create_state@@Base+0x1ae4>
   2a48c:	ldr	x2, [x22, #8]
   2a490:	mov	w1, w20
   2a494:	mov	x0, x19
   2a498:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a49c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a4a0:	add	x0, x0, #0x898
   2a4a4:	bl	64b0 <__asan_internal_strlen@plt>
   2a4a8:	cbz	x0, 2a51c <__asan_backtrace_create_state@@Base+0x1bd0>
   2a4ac:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a4b0:	add	x21, x21, #0x898
   2a4b4:	add	x24, x0, x21
   2a4b8:	mov	x25, #0xff                  	// #255
   2a4bc:	b	2a4e0 <__asan_backtrace_create_state@@Base+0x1b94>
   2a4c0:	ldr	x0, [x19, #256]
   2a4c4:	add	x1, x0, #0x1
   2a4c8:	str	x1, [x19, #256]
   2a4cc:	strb	w23, [x19, x0]
   2a4d0:	strb	w23, [x19, #264]
   2a4d4:	add	x21, x21, #0x1
   2a4d8:	cmp	x21, x24
   2a4dc:	b.eq	2a51c <__asan_backtrace_create_state@@Base+0x1bd0>  // b.none
   2a4e0:	ldrb	w23, [x21]
   2a4e4:	ldr	x0, [x19, #256]
   2a4e8:	cmp	x0, #0xff
   2a4ec:	b.ne	2a4c0 <__asan_backtrace_create_state@@Base+0x1b74>  // b.any
   2a4f0:	strb	wzr, [x19, #255]
   2a4f4:	ldr	x3, [x19, #272]
   2a4f8:	ldr	x2, [x19, #280]
   2a4fc:	mov	x1, x25
   2a500:	mov	x0, x19
   2a504:	blr	x3
   2a508:	str	xzr, [x19, #256]
   2a50c:	ldr	x0, [x19, #320]
   2a510:	add	x0, x0, #0x1
   2a514:	str	x0, [x19, #320]
   2a518:	b	2a4c0 <__asan_backtrace_create_state@@Base+0x1b74>
   2a51c:	ldr	x2, [x22, #16]
   2a520:	mov	w1, w20
   2a524:	mov	x0, x19
   2a528:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a52c:	ldp	x21, x22, [sp, #32]
   2a530:	ldp	x23, x24, [sp, #48]
   2a534:	ldp	x25, x26, [sp, #64]
   2a538:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a53c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a540:	add	x0, x0, #0x8a0
   2a544:	bl	64b0 <__asan_internal_strlen@plt>
   2a548:	cbz	x0, 2a5c4 <__asan_backtrace_create_state@@Base+0x1c78>
   2a54c:	stp	x25, x26, [sp, #64]
   2a550:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a554:	add	x21, x21, #0x8a0
   2a558:	add	x24, x0, x21
   2a55c:	mov	x25, #0xff                  	// #255
   2a560:	b	2a584 <__asan_backtrace_create_state@@Base+0x1c38>
   2a564:	ldr	x0, [x19, #256]
   2a568:	add	x1, x0, #0x1
   2a56c:	str	x1, [x19, #256]
   2a570:	strb	w23, [x19, x0]
   2a574:	strb	w23, [x19, #264]
   2a578:	add	x21, x21, #0x1
   2a57c:	cmp	x21, x24
   2a580:	b.eq	2a5c0 <__asan_backtrace_create_state@@Base+0x1c74>  // b.none
   2a584:	ldrb	w23, [x21]
   2a588:	ldr	x0, [x19, #256]
   2a58c:	cmp	x0, #0xff
   2a590:	b.ne	2a564 <__asan_backtrace_create_state@@Base+0x1c18>  // b.any
   2a594:	strb	wzr, [x19, #255]
   2a598:	ldr	x3, [x19, #272]
   2a59c:	ldr	x2, [x19, #280]
   2a5a0:	mov	x1, x25
   2a5a4:	mov	x0, x19
   2a5a8:	blr	x3
   2a5ac:	str	xzr, [x19, #256]
   2a5b0:	ldr	x0, [x19, #320]
   2a5b4:	add	x0, x0, #0x1
   2a5b8:	str	x0, [x19, #320]
   2a5bc:	b	2a564 <__asan_backtrace_create_state@@Base+0x1c18>
   2a5c0:	ldp	x25, x26, [sp, #64]
   2a5c4:	ldr	x2, [x22, #8]
   2a5c8:	mov	w1, w20
   2a5cc:	mov	x0, x19
   2a5d0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a5d4:	ldp	x21, x22, [sp, #32]
   2a5d8:	ldp	x23, x24, [sp, #48]
   2a5dc:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a5e0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a5e4:	add	x0, x0, #0x8b0
   2a5e8:	bl	64b0 <__asan_internal_strlen@plt>
   2a5ec:	cbz	x0, 2a668 <__asan_backtrace_create_state@@Base+0x1d1c>
   2a5f0:	stp	x25, x26, [sp, #64]
   2a5f4:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a5f8:	add	x21, x21, #0x8b0
   2a5fc:	add	x24, x0, x21
   2a600:	mov	x25, #0xff                  	// #255
   2a604:	b	2a628 <__asan_backtrace_create_state@@Base+0x1cdc>
   2a608:	ldr	x0, [x19, #256]
   2a60c:	add	x1, x0, #0x1
   2a610:	str	x1, [x19, #256]
   2a614:	strb	w23, [x19, x0]
   2a618:	strb	w23, [x19, #264]
   2a61c:	add	x21, x21, #0x1
   2a620:	cmp	x21, x24
   2a624:	b.eq	2a664 <__asan_backtrace_create_state@@Base+0x1d18>  // b.none
   2a628:	ldrb	w23, [x21]
   2a62c:	ldr	x0, [x19, #256]
   2a630:	cmp	x0, #0xff
   2a634:	b.ne	2a608 <__asan_backtrace_create_state@@Base+0x1cbc>  // b.any
   2a638:	strb	wzr, [x19, #255]
   2a63c:	ldr	x3, [x19, #272]
   2a640:	ldr	x2, [x19, #280]
   2a644:	mov	x1, x25
   2a648:	mov	x0, x19
   2a64c:	blr	x3
   2a650:	str	xzr, [x19, #256]
   2a654:	ldr	x0, [x19, #320]
   2a658:	add	x0, x0, #0x1
   2a65c:	str	x0, [x19, #320]
   2a660:	b	2a608 <__asan_backtrace_create_state@@Base+0x1cbc>
   2a664:	ldp	x25, x26, [sp, #64]
   2a668:	ldr	x2, [x22, #8]
   2a66c:	mov	w1, w20
   2a670:	mov	x0, x19
   2a674:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a678:	ldp	x21, x22, [sp, #32]
   2a67c:	ldp	x23, x24, [sp, #48]
   2a680:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a684:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a688:	add	x0, x0, #0x8c8
   2a68c:	bl	64b0 <__asan_internal_strlen@plt>
   2a690:	cbz	x0, 2a70c <__asan_backtrace_create_state@@Base+0x1dc0>
   2a694:	stp	x25, x26, [sp, #64]
   2a698:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a69c:	add	x21, x21, #0x8c8
   2a6a0:	add	x24, x0, x21
   2a6a4:	mov	x25, #0xff                  	// #255
   2a6a8:	b	2a6cc <__asan_backtrace_create_state@@Base+0x1d80>
   2a6ac:	ldr	x0, [x19, #256]
   2a6b0:	add	x1, x0, #0x1
   2a6b4:	str	x1, [x19, #256]
   2a6b8:	strb	w23, [x19, x0]
   2a6bc:	strb	w23, [x19, #264]
   2a6c0:	add	x21, x21, #0x1
   2a6c4:	cmp	x21, x24
   2a6c8:	b.eq	2a708 <__asan_backtrace_create_state@@Base+0x1dbc>  // b.none
   2a6cc:	ldrb	w23, [x21]
   2a6d0:	ldr	x0, [x19, #256]
   2a6d4:	cmp	x0, #0xff
   2a6d8:	b.ne	2a6ac <__asan_backtrace_create_state@@Base+0x1d60>  // b.any
   2a6dc:	strb	wzr, [x19, #255]
   2a6e0:	ldr	x3, [x19, #272]
   2a6e4:	ldr	x2, [x19, #280]
   2a6e8:	mov	x1, x25
   2a6ec:	mov	x0, x19
   2a6f0:	blr	x3
   2a6f4:	str	xzr, [x19, #256]
   2a6f8:	ldr	x0, [x19, #320]
   2a6fc:	add	x0, x0, #0x1
   2a700:	str	x0, [x19, #320]
   2a704:	b	2a6ac <__asan_backtrace_create_state@@Base+0x1d60>
   2a708:	ldp	x25, x26, [sp, #64]
   2a70c:	ldr	x2, [x22, #8]
   2a710:	mov	w1, w20
   2a714:	mov	x0, x19
   2a718:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a71c:	ldp	x21, x22, [sp, #32]
   2a720:	ldp	x23, x24, [sp, #48]
   2a724:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a728:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a72c:	add	x0, x0, #0x8e0
   2a730:	bl	64b0 <__asan_internal_strlen@plt>
   2a734:	cbz	x0, 2a7b0 <__asan_backtrace_create_state@@Base+0x1e64>
   2a738:	stp	x25, x26, [sp, #64]
   2a73c:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a740:	add	x21, x21, #0x8e0
   2a744:	add	x24, x0, x21
   2a748:	mov	x25, #0xff                  	// #255
   2a74c:	b	2a770 <__asan_backtrace_create_state@@Base+0x1e24>
   2a750:	ldr	x0, [x19, #256]
   2a754:	add	x1, x0, #0x1
   2a758:	str	x1, [x19, #256]
   2a75c:	strb	w23, [x19, x0]
   2a760:	strb	w23, [x19, #264]
   2a764:	add	x21, x21, #0x1
   2a768:	cmp	x24, x21
   2a76c:	b.eq	2a7ac <__asan_backtrace_create_state@@Base+0x1e60>  // b.none
   2a770:	ldrb	w23, [x21]
   2a774:	ldr	x0, [x19, #256]
   2a778:	cmp	x0, #0xff
   2a77c:	b.ne	2a750 <__asan_backtrace_create_state@@Base+0x1e04>  // b.any
   2a780:	strb	wzr, [x19, #255]
   2a784:	ldr	x3, [x19, #272]
   2a788:	ldr	x2, [x19, #280]
   2a78c:	mov	x1, x25
   2a790:	mov	x0, x19
   2a794:	blr	x3
   2a798:	str	xzr, [x19, #256]
   2a79c:	ldr	x0, [x19, #320]
   2a7a0:	add	x0, x0, #0x1
   2a7a4:	str	x0, [x19, #320]
   2a7a8:	b	2a750 <__asan_backtrace_create_state@@Base+0x1e04>
   2a7ac:	ldp	x25, x26, [sp, #64]
   2a7b0:	ldr	x2, [x22, #8]
   2a7b4:	mov	w1, w20
   2a7b8:	mov	x0, x19
   2a7bc:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a7c0:	ldp	x21, x22, [sp, #32]
   2a7c4:	ldp	x23, x24, [sp, #48]
   2a7c8:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a7cc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a7d0:	add	x0, x0, #0x8f8
   2a7d4:	bl	64b0 <__asan_internal_strlen@plt>
   2a7d8:	cbz	x0, 2a854 <__asan_backtrace_create_state@@Base+0x1f08>
   2a7dc:	stp	x25, x26, [sp, #64]
   2a7e0:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a7e4:	add	x21, x21, #0x8f8
   2a7e8:	add	x24, x21, x0
   2a7ec:	mov	x25, #0xff                  	// #255
   2a7f0:	b	2a814 <__asan_backtrace_create_state@@Base+0x1ec8>
   2a7f4:	ldr	x0, [x19, #256]
   2a7f8:	add	x1, x0, #0x1
   2a7fc:	str	x1, [x19, #256]
   2a800:	strb	w23, [x19, x0]
   2a804:	strb	w23, [x19, #264]
   2a808:	add	x21, x21, #0x1
   2a80c:	cmp	x24, x21
   2a810:	b.eq	2a850 <__asan_backtrace_create_state@@Base+0x1f04>  // b.none
   2a814:	ldrb	w23, [x21]
   2a818:	ldr	x0, [x19, #256]
   2a81c:	cmp	x0, #0xff
   2a820:	b.ne	2a7f4 <__asan_backtrace_create_state@@Base+0x1ea8>  // b.any
   2a824:	strb	wzr, [x19, #255]
   2a828:	ldr	x3, [x19, #272]
   2a82c:	ldr	x2, [x19, #280]
   2a830:	mov	x1, x25
   2a834:	mov	x0, x19
   2a838:	blr	x3
   2a83c:	str	xzr, [x19, #256]
   2a840:	ldr	x0, [x19, #320]
   2a844:	add	x0, x0, #0x1
   2a848:	str	x0, [x19, #320]
   2a84c:	b	2a7f4 <__asan_backtrace_create_state@@Base+0x1ea8>
   2a850:	ldp	x25, x26, [sp, #64]
   2a854:	ldr	x2, [x22, #8]
   2a858:	mov	w1, w20
   2a85c:	mov	x0, x19
   2a860:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a864:	ldp	x21, x22, [sp, #32]
   2a868:	ldp	x23, x24, [sp, #48]
   2a86c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a870:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a874:	add	x0, x0, #0x910
   2a878:	bl	64b0 <__asan_internal_strlen@plt>
   2a87c:	cbz	x0, 2a8f8 <__asan_backtrace_create_state@@Base+0x1fac>
   2a880:	stp	x25, x26, [sp, #64]
   2a884:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a888:	add	x21, x21, #0x910
   2a88c:	add	x24, x0, x21
   2a890:	mov	x25, #0xff                  	// #255
   2a894:	b	2a8b8 <__asan_backtrace_create_state@@Base+0x1f6c>
   2a898:	ldr	x0, [x19, #256]
   2a89c:	add	x1, x0, #0x1
   2a8a0:	str	x1, [x19, #256]
   2a8a4:	strb	w23, [x19, x0]
   2a8a8:	strb	w23, [x19, #264]
   2a8ac:	add	x21, x21, #0x1
   2a8b0:	cmp	x21, x24
   2a8b4:	b.eq	2a8f4 <__asan_backtrace_create_state@@Base+0x1fa8>  // b.none
   2a8b8:	ldrb	w23, [x21]
   2a8bc:	ldr	x0, [x19, #256]
   2a8c0:	cmp	x0, #0xff
   2a8c4:	b.ne	2a898 <__asan_backtrace_create_state@@Base+0x1f4c>  // b.any
   2a8c8:	strb	wzr, [x19, #255]
   2a8cc:	ldr	x3, [x19, #272]
   2a8d0:	ldr	x2, [x19, #280]
   2a8d4:	mov	x1, x25
   2a8d8:	mov	x0, x19
   2a8dc:	blr	x3
   2a8e0:	str	xzr, [x19, #256]
   2a8e4:	ldr	x0, [x19, #320]
   2a8e8:	add	x0, x0, #0x1
   2a8ec:	str	x0, [x19, #320]
   2a8f0:	b	2a898 <__asan_backtrace_create_state@@Base+0x1f4c>
   2a8f4:	ldp	x25, x26, [sp, #64]
   2a8f8:	ldr	x2, [x22, #8]
   2a8fc:	mov	w1, w20
   2a900:	mov	x0, x19
   2a904:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a908:	ldp	x21, x22, [sp, #32]
   2a90c:	ldp	x23, x24, [sp, #48]
   2a910:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a914:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a918:	add	x0, x0, #0x930
   2a91c:	bl	64b0 <__asan_internal_strlen@plt>
   2a920:	cbz	x0, 2a99c <__asan_backtrace_create_state@@Base+0x2050>
   2a924:	stp	x25, x26, [sp, #64]
   2a928:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a92c:	add	x21, x21, #0x930
   2a930:	add	x24, x0, x21
   2a934:	mov	x25, #0xff                  	// #255
   2a938:	b	2a95c <__asan_backtrace_create_state@@Base+0x2010>
   2a93c:	ldr	x0, [x19, #256]
   2a940:	add	x1, x0, #0x1
   2a944:	str	x1, [x19, #256]
   2a948:	strb	w23, [x19, x0]
   2a94c:	strb	w23, [x19, #264]
   2a950:	add	x21, x21, #0x1
   2a954:	cmp	x21, x24
   2a958:	b.eq	2a998 <__asan_backtrace_create_state@@Base+0x204c>  // b.none
   2a95c:	ldrb	w23, [x21]
   2a960:	ldr	x0, [x19, #256]
   2a964:	cmp	x0, #0xff
   2a968:	b.ne	2a93c <__asan_backtrace_create_state@@Base+0x1ff0>  // b.any
   2a96c:	strb	wzr, [x19, #255]
   2a970:	ldr	x3, [x19, #272]
   2a974:	ldr	x2, [x19, #280]
   2a978:	mov	x1, x25
   2a97c:	mov	x0, x19
   2a980:	blr	x3
   2a984:	str	xzr, [x19, #256]
   2a988:	ldr	x0, [x19, #320]
   2a98c:	add	x0, x0, #0x1
   2a990:	str	x0, [x19, #320]
   2a994:	b	2a93c <__asan_backtrace_create_state@@Base+0x1ff0>
   2a998:	ldp	x25, x26, [sp, #64]
   2a99c:	ldr	x2, [x22, #8]
   2a9a0:	mov	w1, w20
   2a9a4:	mov	x0, x19
   2a9a8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2a9ac:	ldp	x21, x22, [sp, #32]
   2a9b0:	ldp	x23, x24, [sp, #48]
   2a9b4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2a9b8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a9bc:	add	x0, x0, #0x940
   2a9c0:	bl	64b0 <__asan_internal_strlen@plt>
   2a9c4:	cbz	x0, 2aa40 <__asan_backtrace_create_state@@Base+0x20f4>
   2a9c8:	stp	x25, x26, [sp, #64]
   2a9cc:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2a9d0:	add	x21, x21, #0x940
   2a9d4:	add	x24, x0, x21
   2a9d8:	mov	x25, #0xff                  	// #255
   2a9dc:	b	2aa00 <__asan_backtrace_create_state@@Base+0x20b4>
   2a9e0:	ldr	x0, [x19, #256]
   2a9e4:	add	x1, x0, #0x1
   2a9e8:	str	x1, [x19, #256]
   2a9ec:	strb	w23, [x19, x0]
   2a9f0:	strb	w23, [x19, #264]
   2a9f4:	add	x21, x21, #0x1
   2a9f8:	cmp	x21, x24
   2a9fc:	b.eq	2aa3c <__asan_backtrace_create_state@@Base+0x20f0>  // b.none
   2aa00:	ldrb	w23, [x21]
   2aa04:	ldr	x0, [x19, #256]
   2aa08:	cmp	x0, #0xff
   2aa0c:	b.ne	2a9e0 <__asan_backtrace_create_state@@Base+0x2094>  // b.any
   2aa10:	strb	wzr, [x19, #255]
   2aa14:	ldr	x3, [x19, #272]
   2aa18:	ldr	x2, [x19, #280]
   2aa1c:	mov	x1, x25
   2aa20:	mov	x0, x19
   2aa24:	blr	x3
   2aa28:	str	xzr, [x19, #256]
   2aa2c:	ldr	x0, [x19, #320]
   2aa30:	add	x0, x0, #0x1
   2aa34:	str	x0, [x19, #320]
   2aa38:	b	2a9e0 <__asan_backtrace_create_state@@Base+0x2094>
   2aa3c:	ldp	x25, x26, [sp, #64]
   2aa40:	ldr	x2, [x22, #8]
   2aa44:	mov	w1, w20
   2aa48:	mov	x0, x19
   2aa4c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2aa50:	ldp	x21, x22, [sp, #32]
   2aa54:	ldp	x23, x24, [sp, #48]
   2aa58:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2aa5c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2aa60:	add	x0, x0, #0x958
   2aa64:	bl	64b0 <__asan_internal_strlen@plt>
   2aa68:	cbz	x0, 2aae4 <__asan_backtrace_create_state@@Base+0x2198>
   2aa6c:	stp	x25, x26, [sp, #64]
   2aa70:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2aa74:	add	x21, x21, #0x958
   2aa78:	add	x24, x0, x21
   2aa7c:	mov	x25, #0xff                  	// #255
   2aa80:	b	2aaa4 <__asan_backtrace_create_state@@Base+0x2158>
   2aa84:	ldr	x0, [x19, #256]
   2aa88:	add	x1, x0, #0x1
   2aa8c:	str	x1, [x19, #256]
   2aa90:	strb	w23, [x19, x0]
   2aa94:	strb	w23, [x19, #264]
   2aa98:	add	x21, x21, #0x1
   2aa9c:	cmp	x24, x21
   2aaa0:	b.eq	2aae0 <__asan_backtrace_create_state@@Base+0x2194>  // b.none
   2aaa4:	ldrb	w23, [x21]
   2aaa8:	ldr	x0, [x19, #256]
   2aaac:	cmp	x0, #0xff
   2aab0:	b.ne	2aa84 <__asan_backtrace_create_state@@Base+0x2138>  // b.any
   2aab4:	strb	wzr, [x19, #255]
   2aab8:	ldr	x3, [x19, #272]
   2aabc:	ldr	x2, [x19, #280]
   2aac0:	mov	x1, x25
   2aac4:	mov	x0, x19
   2aac8:	blr	x3
   2aacc:	str	xzr, [x19, #256]
   2aad0:	ldr	x0, [x19, #320]
   2aad4:	add	x0, x0, #0x1
   2aad8:	str	x0, [x19, #320]
   2aadc:	b	2aa84 <__asan_backtrace_create_state@@Base+0x2138>
   2aae0:	ldp	x25, x26, [sp, #64]
   2aae4:	ldr	x2, [x22, #8]
   2aae8:	mov	w1, w20
   2aaec:	mov	x0, x19
   2aaf0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2aaf4:	ldp	x21, x22, [sp, #32]
   2aaf8:	ldp	x23, x24, [sp, #48]
   2aafc:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2ab00:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ab04:	add	x0, x0, #0x970
   2ab08:	bl	64b0 <__asan_internal_strlen@plt>
   2ab0c:	cbz	x0, 2ab88 <__asan_backtrace_create_state@@Base+0x223c>
   2ab10:	stp	x25, x26, [sp, #64]
   2ab14:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ab18:	add	x21, x21, #0x970
   2ab1c:	add	x24, x0, x21
   2ab20:	mov	x25, #0xff                  	// #255
   2ab24:	b	2ab48 <__asan_backtrace_create_state@@Base+0x21fc>
   2ab28:	ldr	x0, [x19, #256]
   2ab2c:	add	x1, x0, #0x1
   2ab30:	str	x1, [x19, #256]
   2ab34:	strb	w23, [x19, x0]
   2ab38:	strb	w23, [x19, #264]
   2ab3c:	add	x21, x21, #0x1
   2ab40:	cmp	x21, x24
   2ab44:	b.eq	2ab84 <__asan_backtrace_create_state@@Base+0x2238>  // b.none
   2ab48:	ldrb	w23, [x21]
   2ab4c:	ldr	x0, [x19, #256]
   2ab50:	cmp	x0, #0xff
   2ab54:	b.ne	2ab28 <__asan_backtrace_create_state@@Base+0x21dc>  // b.any
   2ab58:	strb	wzr, [x19, #255]
   2ab5c:	ldr	x3, [x19, #272]
   2ab60:	ldr	x2, [x19, #280]
   2ab64:	mov	x1, x25
   2ab68:	mov	x0, x19
   2ab6c:	blr	x3
   2ab70:	str	xzr, [x19, #256]
   2ab74:	ldr	x0, [x19, #320]
   2ab78:	add	x0, x0, #0x1
   2ab7c:	str	x0, [x19, #320]
   2ab80:	b	2ab28 <__asan_backtrace_create_state@@Base+0x21dc>
   2ab84:	ldp	x25, x26, [sp, #64]
   2ab88:	ldr	x2, [x22, #8]
   2ab8c:	mov	w1, w20
   2ab90:	mov	x0, x19
   2ab94:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2ab98:	ldp	x21, x22, [sp, #32]
   2ab9c:	ldp	x23, x24, [sp, #48]
   2aba0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2aba4:	stp	x25, x26, [sp, #64]
   2aba8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2abac:	add	x0, x0, #0x990
   2abb0:	bl	64b0 <__asan_internal_strlen@plt>
   2abb4:	cbz	x0, 2ac28 <__asan_backtrace_create_state@@Base+0x22dc>
   2abb8:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2abbc:	add	x21, x21, #0x990
   2abc0:	add	x24, x0, x21
   2abc4:	mov	x25, #0xff                  	// #255
   2abc8:	b	2abec <__asan_backtrace_create_state@@Base+0x22a0>
   2abcc:	ldr	x0, [x19, #256]
   2abd0:	add	x1, x0, #0x1
   2abd4:	str	x1, [x19, #256]
   2abd8:	strb	w23, [x19, x0]
   2abdc:	strb	w23, [x19, #264]
   2abe0:	add	x21, x21, #0x1
   2abe4:	cmp	x24, x21
   2abe8:	b.eq	2ac28 <__asan_backtrace_create_state@@Base+0x22dc>  // b.none
   2abec:	ldrb	w23, [x21]
   2abf0:	ldr	x0, [x19, #256]
   2abf4:	cmp	x0, #0xff
   2abf8:	b.ne	2abcc <__asan_backtrace_create_state@@Base+0x2280>  // b.any
   2abfc:	strb	wzr, [x19, #255]
   2ac00:	ldr	x3, [x19, #272]
   2ac04:	ldr	x2, [x19, #280]
   2ac08:	mov	x1, x25
   2ac0c:	mov	x0, x19
   2ac10:	blr	x3
   2ac14:	str	xzr, [x19, #256]
   2ac18:	ldr	x0, [x19, #320]
   2ac1c:	add	x0, x0, #0x1
   2ac20:	str	x0, [x19, #320]
   2ac24:	b	2abcc <__asan_backtrace_create_state@@Base+0x2280>
   2ac28:	ldr	x2, [x22, #16]
   2ac2c:	mov	w1, w20
   2ac30:	mov	x0, x19
   2ac34:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2ac38:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ac3c:	add	x0, x0, #0x8a8
   2ac40:	bl	64b0 <__asan_internal_strlen@plt>
   2ac44:	cbz	x0, 2acb8 <__asan_backtrace_create_state@@Base+0x236c>
   2ac48:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ac4c:	add	x21, x21, #0x8a8
   2ac50:	add	x24, x0, x21
   2ac54:	mov	x25, #0xff                  	// #255
   2ac58:	b	2ac7c <__asan_backtrace_create_state@@Base+0x2330>
   2ac5c:	ldr	x0, [x19, #256]
   2ac60:	add	x1, x0, #0x1
   2ac64:	str	x1, [x19, #256]
   2ac68:	strb	w23, [x19, x0]
   2ac6c:	strb	w23, [x19, #264]
   2ac70:	add	x21, x21, #0x1
   2ac74:	cmp	x24, x21
   2ac78:	b.eq	2acb8 <__asan_backtrace_create_state@@Base+0x236c>  // b.none
   2ac7c:	ldrb	w23, [x21]
   2ac80:	ldr	x0, [x19, #256]
   2ac84:	cmp	x0, #0xff
   2ac88:	b.ne	2ac5c <__asan_backtrace_create_state@@Base+0x2310>  // b.any
   2ac8c:	strb	wzr, [x19, #255]
   2ac90:	ldr	x3, [x19, #272]
   2ac94:	ldr	x2, [x19, #280]
   2ac98:	mov	x1, x25
   2ac9c:	mov	x0, x19
   2aca0:	blr	x3
   2aca4:	str	xzr, [x19, #256]
   2aca8:	ldr	x0, [x19, #320]
   2acac:	add	x0, x0, #0x1
   2acb0:	str	x0, [x19, #320]
   2acb4:	b	2ac5c <__asan_backtrace_create_state@@Base+0x2310>
   2acb8:	ldr	x2, [x22, #8]
   2acbc:	mov	w1, w20
   2acc0:	mov	x0, x19
   2acc4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2acc8:	ldp	x21, x22, [sp, #32]
   2accc:	ldp	x23, x24, [sp, #48]
   2acd0:	ldp	x25, x26, [sp, #64]
   2acd4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2acd8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2acdc:	add	x0, x0, #0x9a8
   2ace0:	bl	64b0 <__asan_internal_strlen@plt>
   2ace4:	cbz	x0, 2ad60 <__asan_backtrace_create_state@@Base+0x2414>
   2ace8:	stp	x25, x26, [sp, #64]
   2acec:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2acf0:	add	x21, x21, #0x9a8
   2acf4:	add	x24, x0, x21
   2acf8:	mov	x25, #0xff                  	// #255
   2acfc:	b	2ad20 <__asan_backtrace_create_state@@Base+0x23d4>
   2ad00:	ldr	x0, [x19, #256]
   2ad04:	add	x1, x0, #0x1
   2ad08:	str	x1, [x19, #256]
   2ad0c:	strb	w23, [x19, x0]
   2ad10:	strb	w23, [x19, #264]
   2ad14:	add	x21, x21, #0x1
   2ad18:	cmp	x24, x21
   2ad1c:	b.eq	2ad5c <__asan_backtrace_create_state@@Base+0x2410>  // b.none
   2ad20:	ldrb	w23, [x21]
   2ad24:	ldr	x0, [x19, #256]
   2ad28:	cmp	x0, #0xff
   2ad2c:	b.ne	2ad00 <__asan_backtrace_create_state@@Base+0x23b4>  // b.any
   2ad30:	strb	wzr, [x19, #255]
   2ad34:	ldr	x3, [x19, #272]
   2ad38:	ldr	x2, [x19, #280]
   2ad3c:	mov	x1, x25
   2ad40:	mov	x0, x19
   2ad44:	blr	x3
   2ad48:	str	xzr, [x19, #256]
   2ad4c:	ldr	x0, [x19, #320]
   2ad50:	add	x0, x0, #0x1
   2ad54:	str	x0, [x19, #320]
   2ad58:	b	2ad00 <__asan_backtrace_create_state@@Base+0x23b4>
   2ad5c:	ldp	x25, x26, [sp, #64]
   2ad60:	ldr	x2, [x22, #8]
   2ad64:	mov	w1, w20
   2ad68:	mov	x0, x19
   2ad6c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2ad70:	ldp	x21, x22, [sp, #32]
   2ad74:	ldp	x23, x24, [sp, #48]
   2ad78:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2ad7c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ad80:	add	x0, x0, #0x9c0
   2ad84:	bl	64b0 <__asan_internal_strlen@plt>
   2ad88:	cbz	x0, 2ae04 <__asan_backtrace_create_state@@Base+0x24b8>
   2ad8c:	stp	x25, x26, [sp, #64]
   2ad90:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ad94:	add	x21, x21, #0x9c0
   2ad98:	add	x24, x0, x21
   2ad9c:	mov	x25, #0xff                  	// #255
   2ada0:	b	2adc4 <__asan_backtrace_create_state@@Base+0x2478>
   2ada4:	ldr	x0, [x19, #256]
   2ada8:	add	x1, x0, #0x1
   2adac:	str	x1, [x19, #256]
   2adb0:	strb	w23, [x19, x0]
   2adb4:	strb	w23, [x19, #264]
   2adb8:	add	x21, x21, #0x1
   2adbc:	cmp	x21, x24
   2adc0:	b.eq	2ae00 <__asan_backtrace_create_state@@Base+0x24b4>  // b.none
   2adc4:	ldrb	w23, [x21]
   2adc8:	ldr	x0, [x19, #256]
   2adcc:	cmp	x0, #0xff
   2add0:	b.ne	2ada4 <__asan_backtrace_create_state@@Base+0x2458>  // b.any
   2add4:	strb	wzr, [x19, #255]
   2add8:	ldr	x3, [x19, #272]
   2addc:	ldr	x2, [x19, #280]
   2ade0:	mov	x1, x25
   2ade4:	mov	x0, x19
   2ade8:	blr	x3
   2adec:	str	xzr, [x19, #256]
   2adf0:	ldr	x0, [x19, #320]
   2adf4:	add	x0, x0, #0x1
   2adf8:	str	x0, [x19, #320]
   2adfc:	b	2ada4 <__asan_backtrace_create_state@@Base+0x2458>
   2ae00:	ldp	x25, x26, [sp, #64]
   2ae04:	ldr	x2, [x22, #8]
   2ae08:	mov	w1, w20
   2ae0c:	mov	x0, x19
   2ae10:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2ae14:	ldp	x21, x22, [sp, #32]
   2ae18:	ldp	x23, x24, [sp, #48]
   2ae1c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2ae20:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ae24:	add	x0, x0, #0x9d8
   2ae28:	bl	64b0 <__asan_internal_strlen@plt>
   2ae2c:	cbz	x0, 2aea8 <__asan_backtrace_create_state@@Base+0x255c>
   2ae30:	stp	x25, x26, [sp, #64]
   2ae34:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ae38:	add	x21, x21, #0x9d8
   2ae3c:	add	x24, x0, x21
   2ae40:	mov	x25, #0xff                  	// #255
   2ae44:	b	2ae68 <__asan_backtrace_create_state@@Base+0x251c>
   2ae48:	ldr	x0, [x19, #256]
   2ae4c:	add	x1, x0, #0x1
   2ae50:	str	x1, [x19, #256]
   2ae54:	strb	w23, [x19, x0]
   2ae58:	strb	w23, [x19, #264]
   2ae5c:	add	x21, x21, #0x1
   2ae60:	cmp	x21, x24
   2ae64:	b.eq	2aea4 <__asan_backtrace_create_state@@Base+0x2558>  // b.none
   2ae68:	ldrb	w23, [x21]
   2ae6c:	ldr	x0, [x19, #256]
   2ae70:	cmp	x0, #0xff
   2ae74:	b.ne	2ae48 <__asan_backtrace_create_state@@Base+0x24fc>  // b.any
   2ae78:	strb	wzr, [x19, #255]
   2ae7c:	ldr	x3, [x19, #272]
   2ae80:	ldr	x2, [x19, #280]
   2ae84:	mov	x1, x25
   2ae88:	mov	x0, x19
   2ae8c:	blr	x3
   2ae90:	str	xzr, [x19, #256]
   2ae94:	ldr	x0, [x19, #320]
   2ae98:	add	x0, x0, #0x1
   2ae9c:	str	x0, [x19, #320]
   2aea0:	b	2ae48 <__asan_backtrace_create_state@@Base+0x24fc>
   2aea4:	ldp	x25, x26, [sp, #64]
   2aea8:	ldr	x2, [x22, #8]
   2aeac:	mov	w1, w20
   2aeb0:	mov	x0, x19
   2aeb4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2aeb8:	ldp	x21, x22, [sp, #32]
   2aebc:	ldp	x23, x24, [sp, #48]
   2aec0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2aec4:	ldr	x1, [x22, #8]
   2aec8:	ldrsw	x0, [x22, #16]
   2aecc:	cbz	x0, 2d968 <__asan_backtrace_create_state@@Base+0x501c>
   2aed0:	mov	x20, x1
   2aed4:	add	x22, x1, x0
   2aed8:	mov	x23, #0xff                  	// #255
   2aedc:	b	2af00 <__asan_backtrace_create_state@@Base+0x25b4>
   2aee0:	ldr	x0, [x19, #256]
   2aee4:	add	x1, x0, #0x1
   2aee8:	str	x1, [x19, #256]
   2aeec:	strb	w21, [x19, x0]
   2aef0:	strb	w21, [x19, #264]
   2aef4:	add	x20, x20, #0x1
   2aef8:	cmp	x22, x20
   2aefc:	b.eq	2af3c <__asan_backtrace_create_state@@Base+0x25f0>  // b.none
   2af00:	ldrb	w21, [x20]
   2af04:	ldr	x0, [x19, #256]
   2af08:	cmp	x0, #0xff
   2af0c:	b.ne	2aee0 <__asan_backtrace_create_state@@Base+0x2594>  // b.any
   2af10:	strb	wzr, [x19, #255]
   2af14:	ldr	x3, [x19, #272]
   2af18:	ldr	x2, [x19, #280]
   2af1c:	mov	x1, x23
   2af20:	mov	x0, x19
   2af24:	blr	x3
   2af28:	str	xzr, [x19, #256]
   2af2c:	ldr	x0, [x19, #320]
   2af30:	add	x0, x0, #0x1
   2af34:	str	x0, [x19, #320]
   2af38:	b	2aee0 <__asan_backtrace_create_state@@Base+0x2594>
   2af3c:	ldp	x21, x22, [sp, #32]
   2af40:	ldp	x23, x24, [sp, #48]
   2af44:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2af48:	ldr	x1, [x19, #296]
   2af4c:	cbnz	x1, 2af5c <__asan_backtrace_create_state@@Base+0x2610>
   2af50:	b	2d8b4 <__asan_backtrace_create_state@@Base+0x4f68>
   2af54:	ldr	x1, [x1]
   2af58:	cbz	x1, 2d8b4 <__asan_backtrace_create_state@@Base+0x4f68>
   2af5c:	ldr	w2, [x1, #16]
   2af60:	cbnz	w2, 2af54 <__asan_backtrace_create_state@@Base+0x2608>
   2af64:	ldr	x3, [x1, #8]
   2af68:	ldr	w3, [x3]
   2af6c:	sub	w4, w3, #0x19
   2af70:	cmp	w4, #0x2
   2af74:	b.hi	2d8a8 <__asan_backtrace_create_state@@Base+0x4f5c>  // b.pmore
   2af78:	cmp	w0, w3
   2af7c:	b.ne	2af54 <__asan_backtrace_create_state@@Base+0x2608>  // b.any
   2af80:	ldr	x2, [x22, #8]
   2af84:	mov	w1, w20
   2af88:	mov	x0, x19
   2af8c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2af90:	ldp	x21, x22, [sp, #32]
   2af94:	ldp	x23, x24, [sp, #48]
   2af98:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2af9c:	ldr	x0, [x22, #8]
   2afa0:	ldr	w24, [x19, #312]
   2afa4:	cbnz	w24, 2afb8 <__asan_backtrace_create_state@@Base+0x266c>
   2afa8:	ldr	w1, [x0]
   2afac:	mov	w21, w24
   2afb0:	cmp	w1, #0x5
   2afb4:	b.eq	2afe0 <__asan_backtrace_create_state@@Base+0x2694>  // b.none
   2afb8:	ldr	w1, [x0]
   2afbc:	cmp	w1, #0x23
   2afc0:	b.eq	2d8b0 <__asan_backtrace_create_state@@Base+0x4f64>  // b.none
   2afc4:	ldr	w2, [x22]
   2afc8:	cmp	w1, w2
   2afcc:	b.eq	2d8dc <__asan_backtrace_create_state@@Base+0x4f90>  // b.none
   2afd0:	cmp	w1, #0x24
   2afd4:	b.ne	2d8b4 <__asan_backtrace_create_state@@Base+0x4f68>  // b.any
   2afd8:	ldr	x2, [x0, #8]
   2afdc:	b	2b10c <__asan_backtrace_create_state@@Base+0x27c0>
   2afe0:	ldr	w5, [x19, #344]
   2afe4:	cmp	w5, #0x0
   2afe8:	b.le	2b018 <__asan_backtrace_create_state@@Base+0x26cc>
   2afec:	ldr	x1, [x19, #336]
   2aff0:	sub	w3, w5, #0x1
   2aff4:	add	x2, x1, #0x10
   2aff8:	add	x3, x2, x3, lsl #4
   2affc:	mov	x4, x1
   2b000:	ldr	x2, [x1]
   2b004:	cmp	x0, x2
   2b008:	b.eq	2d8e4 <__asan_backtrace_create_state@@Base+0x4f98>  // b.none
   2b00c:	add	x1, x1, #0x10
   2b010:	cmp	x3, x1
   2b014:	b.ne	2affc <__asan_backtrace_create_state@@Base+0x26b0>  // b.any
   2b018:	ldr	w1, [x19, #348]
   2b01c:	cmp	w1, w5
   2b020:	b.le	2b0d4 <__asan_backtrace_create_state@@Base+0x2788>
   2b024:	sbfiz	x3, x5, #4, #32
   2b028:	ldr	x2, [x19, #336]
   2b02c:	add	x1, x2, w5, sxtw #4
   2b030:	add	w5, w5, #0x1
   2b034:	str	w5, [x19, #344]
   2b038:	str	x0, [x2, x3]
   2b03c:	add	x1, x1, #0x8
   2b040:	ldr	x2, [x19, #288]
   2b044:	cbz	x2, 2b080 <__asan_backtrace_create_state@@Base+0x2734>
   2b048:	ldr	w4, [x19, #360]
   2b04c:	ldr	w3, [x19, #364]
   2b050:	cmp	w4, w3
   2b054:	b.ge	2b0e8 <__asan_backtrace_create_state@@Base+0x279c>  // b.tcont
   2b058:	ldr	x3, [x19, #352]
   2b05c:	add	x3, x3, w4, sxtw #4
   2b060:	add	w4, w4, #0x1
   2b064:	str	w4, [x19, #360]
   2b068:	ldr	x4, [x2, #8]
   2b06c:	str	x4, [x3, #8]
   2b070:	str	x3, [x1]
   2b074:	mov	x1, x3
   2b078:	ldr	x2, [x2]
   2b07c:	cbnz	x2, 2b048 <__asan_backtrace_create_state@@Base+0x26fc>
   2b080:	str	xzr, [x1]
   2b084:	ldr	w1, [x19, #304]
   2b088:	cbnz	w1, 2b0fc <__asan_backtrace_create_state@@Base+0x27b0>
   2b08c:	mov	x1, x0
   2b090:	mov	x0, x19
   2b094:	bl	292b4 <__asan_backtrace_create_state@@Base+0x968>
   2b098:	cbz	x0, 2b0c0 <__asan_backtrace_create_state@@Base+0x2774>
   2b09c:	mov	w21, w24
   2b0a0:	ldr	w1, [x0]
   2b0a4:	cmp	w1, #0x2f
   2b0a8:	b.ne	2afb8 <__asan_backtrace_create_state@@Base+0x266c>  // b.any
   2b0ac:	ldr	w1, [x19, #316]
   2b0b0:	bl	2927c <__asan_backtrace_create_state@@Base+0x930>
   2b0b4:	cbnz	x0, 2afb8 <__asan_backtrace_create_state@@Base+0x266c>
   2b0b8:	cbz	w21, 2b0c0 <__asan_backtrace_create_state@@Base+0x2774>
   2b0bc:	str	x23, [x19, #288]
   2b0c0:	mov	w0, #0x1                   	// #1
   2b0c4:	str	w0, [x19, #304]
   2b0c8:	ldp	x21, x22, [sp, #32]
   2b0cc:	ldp	x23, x24, [sp, #48]
   2b0d0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b0d4:	mov	w0, #0x1                   	// #1
   2b0d8:	str	w0, [x19, #304]
   2b0dc:	ldp	x21, x22, [sp, #32]
   2b0e0:	ldp	x23, x24, [sp, #48]
   2b0e4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b0e8:	mov	w0, #0x1                   	// #1
   2b0ec:	str	w0, [x19, #304]
   2b0f0:	ldp	x21, x22, [sp, #32]
   2b0f4:	ldp	x23, x24, [sp, #48]
   2b0f8:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b0fc:	ldp	x21, x22, [sp, #32]
   2b100:	ldp	x23, x24, [sp, #48]
   2b104:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b108:	mov	x2, #0x0                   	// #0
   2b10c:	ldr	x0, [x19, #296]
   2b110:	str	x0, [sp, #128]
   2b114:	add	x0, sp, #0x80
   2b118:	str	x0, [x19, #296]
   2b11c:	str	x22, [sp, #136]
   2b120:	str	wzr, [sp, #144]
   2b124:	ldr	x0, [x19, #288]
   2b128:	str	x0, [sp, #152]
   2b12c:	cbz	x2, 2d8d4 <__asan_backtrace_create_state@@Base+0x4f88>
   2b130:	mov	w1, w20
   2b134:	mov	x0, x19
   2b138:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b13c:	ldr	w0, [sp, #144]
   2b140:	cbz	w0, 2b160 <__asan_backtrace_create_state@@Base+0x2814>
   2b144:	ldr	x0, [sp, #128]
   2b148:	str	x0, [x19, #296]
   2b14c:	cbz	w21, 2d974 <__asan_backtrace_create_state@@Base+0x5028>
   2b150:	str	x23, [x19, #288]
   2b154:	ldp	x21, x22, [sp, #32]
   2b158:	ldp	x23, x24, [sp, #48]
   2b15c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b160:	mov	x2, x22
   2b164:	mov	w1, w20
   2b168:	mov	x0, x19
   2b16c:	bl	2dacc <__asan_backtrace_create_state@@Base+0x5180>
   2b170:	b	2b144 <__asan_backtrace_create_state@@Base+0x27f8>
   2b174:	tbnz	w20, #2, 2b200 <__asan_backtrace_create_state@@Base+0x28b4>
   2b178:	ldr	x0, [x22, #8]
   2b17c:	ldr	x22, [x0]
   2b180:	ldrsw	x0, [x0, #8]
   2b184:	cbz	x0, 2d980 <__asan_backtrace_create_state@@Base+0x5034>
   2b188:	mov	x20, x22
   2b18c:	add	x22, x22, x0
   2b190:	mov	x23, #0xff                  	// #255
   2b194:	b	2b1b8 <__asan_backtrace_create_state@@Base+0x286c>
   2b198:	ldr	x0, [x19, #256]
   2b19c:	add	x1, x0, #0x1
   2b1a0:	str	x1, [x19, #256]
   2b1a4:	strb	w21, [x19, x0]
   2b1a8:	strb	w21, [x19, #264]
   2b1ac:	add	x20, x20, #0x1
   2b1b0:	cmp	x20, x22
   2b1b4:	b.eq	2b1f4 <__asan_backtrace_create_state@@Base+0x28a8>  // b.none
   2b1b8:	ldrb	w21, [x20]
   2b1bc:	ldr	x0, [x19, #256]
   2b1c0:	cmp	x0, #0xff
   2b1c4:	b.ne	2b198 <__asan_backtrace_create_state@@Base+0x284c>  // b.any
   2b1c8:	strb	wzr, [x19, #255]
   2b1cc:	ldr	x3, [x19, #272]
   2b1d0:	ldr	x2, [x19, #280]
   2b1d4:	mov	x1, x23
   2b1d8:	mov	x0, x19
   2b1dc:	blr	x3
   2b1e0:	str	xzr, [x19, #256]
   2b1e4:	ldr	x0, [x19, #320]
   2b1e8:	add	x0, x0, #0x1
   2b1ec:	str	x0, [x19, #320]
   2b1f0:	b	2b198 <__asan_backtrace_create_state@@Base+0x284c>
   2b1f4:	ldp	x21, x22, [sp, #32]
   2b1f8:	ldp	x23, x24, [sp, #48]
   2b1fc:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b200:	ldr	x0, [x22, #8]
   2b204:	ldr	x22, [x0, #16]
   2b208:	ldrsw	x0, [x0, #24]
   2b20c:	cbz	x0, 2d98c <__asan_backtrace_create_state@@Base+0x5040>
   2b210:	mov	x20, x22
   2b214:	add	x22, x22, x0
   2b218:	mov	x23, #0xff                  	// #255
   2b21c:	b	2b240 <__asan_backtrace_create_state@@Base+0x28f4>
   2b220:	ldr	x0, [x19, #256]
   2b224:	add	x1, x0, #0x1
   2b228:	str	x1, [x19, #256]
   2b22c:	strb	w21, [x19, x0]
   2b230:	strb	w21, [x19, #264]
   2b234:	add	x20, x20, #0x1
   2b238:	cmp	x22, x20
   2b23c:	b.eq	2b27c <__asan_backtrace_create_state@@Base+0x2930>  // b.none
   2b240:	ldrb	w21, [x20]
   2b244:	ldr	x0, [x19, #256]
   2b248:	cmp	x0, #0xff
   2b24c:	b.ne	2b220 <__asan_backtrace_create_state@@Base+0x28d4>  // b.any
   2b250:	strb	wzr, [x19, #255]
   2b254:	ldr	x3, [x19, #272]
   2b258:	ldr	x2, [x19, #280]
   2b25c:	mov	x1, x23
   2b260:	mov	x0, x19
   2b264:	blr	x3
   2b268:	str	xzr, [x19, #256]
   2b26c:	ldr	x0, [x19, #320]
   2b270:	add	x0, x0, #0x1
   2b274:	str	x0, [x19, #320]
   2b278:	b	2b220 <__asan_backtrace_create_state@@Base+0x28d4>
   2b27c:	ldp	x21, x22, [sp, #32]
   2b280:	ldp	x23, x24, [sp, #48]
   2b284:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b288:	ldr	x2, [x22, #8]
   2b28c:	mov	w1, w20
   2b290:	mov	x0, x19
   2b294:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b298:	ldp	x21, x22, [sp, #32]
   2b29c:	ldp	x23, x24, [sp, #48]
   2b2a0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b2a4:	and	w21, w20, #0x20
   2b2a8:	tbnz	w20, #5, 2b2c8 <__asan_backtrace_create_state@@Base+0x297c>
   2b2ac:	ldr	x0, [x22, #8]
   2b2b0:	cbz	x0, 2b398 <__asan_backtrace_create_state@@Base+0x2a4c>
   2b2b4:	tbz	w20, #6, 2b300 <__asan_backtrace_create_state@@Base+0x29b4>
   2b2b8:	cbz	w21, 2b398 <__asan_backtrace_create_state@@Base+0x2a4c>
   2b2bc:	ldp	x21, x22, [sp, #32]
   2b2c0:	ldp	x23, x24, [sp, #48]
   2b2c4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b2c8:	and	w23, w20, #0xffffff9f
   2b2cc:	ldr	x3, [x19, #296]
   2b2d0:	mov	x2, x22
   2b2d4:	mov	w1, w23
   2b2d8:	mov	x0, x19
   2b2dc:	bl	2e590 <__asan_backtrace_create_state@@Base+0x5c44>
   2b2e0:	ldr	x2, [x22, #8]
   2b2e4:	cbz	x2, 2b2b8 <__asan_backtrace_create_state@@Base+0x296c>
   2b2e8:	mov	w1, w23
   2b2ec:	mov	x0, x19
   2b2f0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b2f4:	ldp	x21, x22, [sp, #32]
   2b2f8:	ldp	x23, x24, [sp, #48]
   2b2fc:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b300:	ldr	x0, [x19, #296]
   2b304:	str	x0, [sp, #128]
   2b308:	add	x0, sp, #0x80
   2b30c:	str	x0, [x19, #296]
   2b310:	str	x22, [sp, #136]
   2b314:	str	wzr, [sp, #144]
   2b318:	ldr	x0, [x19, #288]
   2b31c:	str	x0, [sp, #152]
   2b320:	ldr	x2, [x22, #8]
   2b324:	and	w1, w20, #0xffffff9f
   2b328:	mov	x0, x19
   2b32c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b330:	ldr	x0, [sp, #128]
   2b334:	str	x0, [x19, #296]
   2b338:	ldr	w0, [sp, #144]
   2b33c:	cbnz	w0, 2d998 <__asan_backtrace_create_state@@Base+0x504c>
   2b340:	cbnz	w21, 2b2b8 <__asan_backtrace_create_state@@Base+0x296c>
   2b344:	ldr	x0, [x19, #256]
   2b348:	cmp	x0, #0xff
   2b34c:	b.eq	2b36c <__asan_backtrace_create_state@@Base+0x2a20>  // b.none
   2b350:	ldr	x1, [x19, #256]
   2b354:	add	x0, x1, #0x1
   2b358:	str	x0, [x19, #256]
   2b35c:	mov	w0, #0x20                  	// #32
   2b360:	strb	w0, [x19, x1]
   2b364:	strb	w0, [x19, #264]
   2b368:	b	2b2b8 <__asan_backtrace_create_state@@Base+0x296c>
   2b36c:	strb	wzr, [x19, #255]
   2b370:	ldr	x3, [x19, #272]
   2b374:	ldr	x2, [x19, #280]
   2b378:	mov	x1, #0xff                  	// #255
   2b37c:	mov	x0, x19
   2b380:	blr	x3
   2b384:	str	xzr, [x19, #256]
   2b388:	ldr	x0, [x19, #320]
   2b38c:	add	x0, x0, #0x1
   2b390:	str	x0, [x19, #320]
   2b394:	b	2b350 <__asan_backtrace_create_state@@Base+0x2a04>
   2b398:	ldr	x3, [x19, #296]
   2b39c:	mov	x2, x22
   2b3a0:	and	w1, w20, #0xffffff9f
   2b3a4:	mov	x0, x19
   2b3a8:	bl	2e590 <__asan_backtrace_create_state@@Base+0x5c44>
   2b3ac:	ldp	x21, x22, [sp, #32]
   2b3b0:	ldp	x23, x24, [sp, #48]
   2b3b4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b3b8:	ldr	x23, [x19, #296]
   2b3bc:	str	x23, [sp, #128]
   2b3c0:	add	x0, sp, #0x80
   2b3c4:	str	x0, [x19, #296]
   2b3c8:	str	x22, [sp, #136]
   2b3cc:	str	wzr, [sp, #144]
   2b3d0:	ldr	x0, [x19, #288]
   2b3d4:	str	x0, [sp, #152]
   2b3d8:	mov	x0, x23
   2b3dc:	mov	w21, #0x1                   	// #1
   2b3e0:	add	x3, sp, #0x80
   2b3e4:	mov	w6, w21
   2b3e8:	cbnz	x23, 2b430 <__asan_backtrace_create_state@@Base+0x2ae4>
   2b3ec:	ldr	x2, [x22, #16]
   2b3f0:	mov	w1, w20
   2b3f4:	mov	x0, x19
   2b3f8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b3fc:	str	xzr, [x19, #296]
   2b400:	ldr	w0, [sp, #144]
   2b404:	cbz	w0, 2b4d4 <__asan_backtrace_create_state@@Base+0x2b88>
   2b408:	ldp	x21, x22, [sp, #32]
   2b40c:	ldp	x23, x24, [sp, #48]
   2b410:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b414:	mov	w0, #0x1                   	// #1
   2b418:	str	w0, [x19, #304]
   2b41c:	ldp	x21, x22, [sp, #32]
   2b420:	ldp	x23, x24, [sp, #48]
   2b424:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b428:	ldr	x0, [x0]
   2b42c:	cbz	x0, 2b484 <__asan_backtrace_create_state@@Base+0x2b38>
   2b430:	ldr	x1, [x0, #8]
   2b434:	ldr	w1, [x1]
   2b438:	sub	w1, w1, #0x19
   2b43c:	cmp	w1, #0x2
   2b440:	b.hi	2b484 <__asan_backtrace_create_state@@Base+0x2b38>  // b.pmore
   2b444:	ldr	w1, [x0, #16]
   2b448:	cbnz	w1, 2b428 <__asan_backtrace_create_state@@Base+0x2adc>
   2b44c:	cmp	w21, #0x3
   2b450:	b.hi	2b414 <__asan_backtrace_create_state@@Base+0x2ac8>  // b.pmore
   2b454:	ubfiz	x2, x21, #5, #32
   2b458:	add	x1, x3, x2
   2b45c:	ldp	x4, x5, [x0]
   2b460:	stp	x4, x5, [x1]
   2b464:	ldp	x4, x5, [x0, #16]
   2b468:	stp	x4, x5, [x1, #16]
   2b46c:	ldr	x4, [x19, #296]
   2b470:	str	x4, [x3, x2]
   2b474:	str	x1, [x19, #296]
   2b478:	str	w6, [x0, #16]
   2b47c:	add	w21, w21, #0x1
   2b480:	b	2b428 <__asan_backtrace_create_state@@Base+0x2adc>
   2b484:	ldr	x2, [x22, #16]
   2b488:	mov	w1, w20
   2b48c:	mov	x0, x19
   2b490:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b494:	str	x23, [x19, #296]
   2b498:	ldr	w0, [sp, #144]
   2b49c:	cbnz	w0, 2d9a4 <__asan_backtrace_create_state@@Base+0x5058>
   2b4a0:	cmp	w21, #0x1
   2b4a4:	b.ls	2b4d4 <__asan_backtrace_create_state@@Base+0x2b88>  // b.plast
   2b4a8:	sub	w23, w21, #0x1
   2b4ac:	add	x0, sp, #0x80
   2b4b0:	add	x23, x0, x23, lsl #5
   2b4b4:	sub	w21, w21, #0x1
   2b4b8:	ldr	x2, [x23, #8]
   2b4bc:	mov	w1, w20
   2b4c0:	mov	x0, x19
   2b4c4:	bl	2dacc <__asan_backtrace_create_state@@Base+0x5180>
   2b4c8:	sub	x23, x23, #0x20
   2b4cc:	cmp	w21, #0x1
   2b4d0:	b.ne	2b4b4 <__asan_backtrace_create_state@@Base+0x2b68>  // b.any
   2b4d4:	ldr	x3, [x19, #296]
   2b4d8:	mov	x2, x22
   2b4dc:	mov	w1, w20
   2b4e0:	mov	x0, x19
   2b4e4:	bl	2ec1c <__asan_backtrace_create_state@@Base+0x62d0>
   2b4e8:	ldp	x21, x22, [sp, #32]
   2b4ec:	ldp	x23, x24, [sp, #48]
   2b4f0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b4f4:	ldr	x0, [x19, #296]
   2b4f8:	str	x0, [sp, #128]
   2b4fc:	add	x0, sp, #0x80
   2b500:	str	x0, [x19, #296]
   2b504:	str	x22, [sp, #136]
   2b508:	str	wzr, [sp, #144]
   2b50c:	ldr	x0, [x19, #288]
   2b510:	str	x0, [sp, #152]
   2b514:	ldr	x2, [x22, #16]
   2b518:	mov	w1, w20
   2b51c:	mov	x0, x19
   2b520:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b524:	ldr	w0, [sp, #144]
   2b528:	cbz	w0, 2b540 <__asan_backtrace_create_state@@Base+0x2bf4>
   2b52c:	ldr	x0, [sp, #128]
   2b530:	str	x0, [x19, #296]
   2b534:	ldp	x21, x22, [sp, #32]
   2b538:	ldp	x23, x24, [sp, #48]
   2b53c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b540:	mov	x2, x22
   2b544:	mov	w1, w20
   2b548:	mov	x0, x19
   2b54c:	bl	2dacc <__asan_backtrace_create_state@@Base+0x5180>
   2b550:	b	2b52c <__asan_backtrace_create_state@@Base+0x2be0>
   2b554:	ldrsh	w0, [x22, #18]
   2b558:	cbnz	w0, 2b5d4 <__asan_backtrace_create_state@@Base+0x2c88>
   2b55c:	ldr	x2, [x22, #8]
   2b560:	ldr	x1, [x2, #8]
   2b564:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2b568:	ldr	x0, [x0, #3912]
   2b56c:	add	x0, x0, #0x100
   2b570:	cmp	x1, x0
   2b574:	b.eq	2b5a8 <__asan_backtrace_create_state@@Base+0x2c5c>  // b.none
   2b578:	mov	w1, w20
   2b57c:	mov	x0, x19
   2b580:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b584:	ldr	x0, [x19, #256]
   2b588:	cmp	x0, #0xff
   2b58c:	b.eq	2b660 <__asan_backtrace_create_state@@Base+0x2d14>  // b.none
   2b590:	ldr	x1, [x19, #256]
   2b594:	add	x0, x1, #0x1
   2b598:	str	x0, [x19, #256]
   2b59c:	mov	w0, #0x20                  	// #32
   2b5a0:	strb	w0, [x19, x1]
   2b5a4:	strb	w0, [x19, #264]
   2b5a8:	ldrsh	w0, [x22, #16]
   2b5ac:	cbz	w0, 2b6f4 <__asan_backtrace_create_state@@Base+0x2da8>
   2b5b0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b5b4:	add	x0, x0, #0xa00
   2b5b8:	bl	64b0 <__asan_internal_strlen@plt>
   2b5bc:	cbz	x0, 2d9b0 <__asan_backtrace_create_state@@Base+0x5064>
   2b5c0:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b5c4:	add	x20, x20, #0xa00
   2b5c8:	add	x22, x0, x20
   2b5cc:	mov	x23, #0xff                  	// #255
   2b5d0:	b	2b6ac <__asan_backtrace_create_state@@Base+0x2d60>
   2b5d4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b5d8:	add	x0, x0, #0x9f8
   2b5dc:	bl	64b0 <__asan_internal_strlen@plt>
   2b5e0:	cbz	x0, 2b55c <__asan_backtrace_create_state@@Base+0x2c10>
   2b5e4:	stp	x25, x26, [sp, #64]
   2b5e8:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b5ec:	add	x21, x21, #0x9f8
   2b5f0:	add	x24, x0, x21
   2b5f4:	mov	x25, #0xff                  	// #255
   2b5f8:	b	2b61c <__asan_backtrace_create_state@@Base+0x2cd0>
   2b5fc:	ldr	x0, [x19, #256]
   2b600:	add	x1, x0, #0x1
   2b604:	str	x1, [x19, #256]
   2b608:	strb	w23, [x19, x0]
   2b60c:	strb	w23, [x19, #264]
   2b610:	add	x21, x21, #0x1
   2b614:	cmp	x21, x24
   2b618:	b.eq	2b658 <__asan_backtrace_create_state@@Base+0x2d0c>  // b.none
   2b61c:	ldrb	w23, [x21]
   2b620:	ldr	x0, [x19, #256]
   2b624:	cmp	x0, #0xff
   2b628:	b.ne	2b5fc <__asan_backtrace_create_state@@Base+0x2cb0>  // b.any
   2b62c:	strb	wzr, [x19, #255]
   2b630:	ldr	x3, [x19, #272]
   2b634:	ldr	x2, [x19, #280]
   2b638:	mov	x1, x25
   2b63c:	mov	x0, x19
   2b640:	blr	x3
   2b644:	str	xzr, [x19, #256]
   2b648:	ldr	x0, [x19, #320]
   2b64c:	add	x0, x0, #0x1
   2b650:	str	x0, [x19, #320]
   2b654:	b	2b5fc <__asan_backtrace_create_state@@Base+0x2cb0>
   2b658:	ldp	x25, x26, [sp, #64]
   2b65c:	b	2b55c <__asan_backtrace_create_state@@Base+0x2c10>
   2b660:	strb	wzr, [x19, #255]
   2b664:	ldr	x3, [x19, #272]
   2b668:	ldr	x2, [x19, #280]
   2b66c:	mov	x1, #0xff                  	// #255
   2b670:	mov	x0, x19
   2b674:	blr	x3
   2b678:	str	xzr, [x19, #256]
   2b67c:	ldr	x0, [x19, #320]
   2b680:	add	x0, x0, #0x1
   2b684:	str	x0, [x19, #320]
   2b688:	b	2b590 <__asan_backtrace_create_state@@Base+0x2c44>
   2b68c:	ldr	x0, [x19, #256]
   2b690:	add	x1, x0, #0x1
   2b694:	str	x1, [x19, #256]
   2b698:	strb	w21, [x19, x0]
   2b69c:	strb	w21, [x19, #264]
   2b6a0:	add	x20, x20, #0x1
   2b6a4:	cmp	x20, x22
   2b6a8:	b.eq	2b6e8 <__asan_backtrace_create_state@@Base+0x2d9c>  // b.none
   2b6ac:	ldrb	w21, [x20]
   2b6b0:	ldr	x0, [x19, #256]
   2b6b4:	cmp	x0, #0xff
   2b6b8:	b.ne	2b68c <__asan_backtrace_create_state@@Base+0x2d40>  // b.any
   2b6bc:	strb	wzr, [x19, #255]
   2b6c0:	ldr	x3, [x19, #272]
   2b6c4:	ldr	x2, [x19, #280]
   2b6c8:	mov	x1, x23
   2b6cc:	mov	x0, x19
   2b6d0:	blr	x3
   2b6d4:	str	xzr, [x19, #256]
   2b6d8:	ldr	x0, [x19, #320]
   2b6dc:	add	x0, x0, #0x1
   2b6e0:	str	x0, [x19, #320]
   2b6e4:	b	2b68c <__asan_backtrace_create_state@@Base+0x2d40>
   2b6e8:	ldp	x21, x22, [sp, #32]
   2b6ec:	ldp	x23, x24, [sp, #48]
   2b6f0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b6f4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b6f8:	add	x0, x0, #0xa08
   2b6fc:	bl	64b0 <__asan_internal_strlen@plt>
   2b700:	cbz	x0, 2d9bc <__asan_backtrace_create_state@@Base+0x5070>
   2b704:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b708:	add	x20, x20, #0xa08
   2b70c:	add	x22, x0, x20
   2b710:	mov	x23, #0xff                  	// #255
   2b714:	b	2b738 <__asan_backtrace_create_state@@Base+0x2dec>
   2b718:	ldr	x0, [x19, #256]
   2b71c:	add	x1, x0, #0x1
   2b720:	str	x1, [x19, #256]
   2b724:	strb	w21, [x19, x0]
   2b728:	strb	w21, [x19, #264]
   2b72c:	add	x20, x20, #0x1
   2b730:	cmp	x20, x22
   2b734:	b.eq	2b774 <__asan_backtrace_create_state@@Base+0x2e28>  // b.none
   2b738:	ldrb	w21, [x20]
   2b73c:	ldr	x0, [x19, #256]
   2b740:	cmp	x0, #0xff
   2b744:	b.ne	2b718 <__asan_backtrace_create_state@@Base+0x2dcc>  // b.any
   2b748:	strb	wzr, [x19, #255]
   2b74c:	ldr	x3, [x19, #272]
   2b750:	ldr	x2, [x19, #280]
   2b754:	mov	x1, x23
   2b758:	mov	x0, x19
   2b75c:	blr	x3
   2b760:	str	xzr, [x19, #256]
   2b764:	ldr	x0, [x19, #320]
   2b768:	add	x0, x0, #0x1
   2b76c:	str	x0, [x19, #320]
   2b770:	b	2b718 <__asan_backtrace_create_state@@Base+0x2dcc>
   2b774:	ldp	x21, x22, [sp, #32]
   2b778:	ldp	x23, x24, [sp, #48]
   2b77c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b780:	ldr	x2, [x22, #8]
   2b784:	cbz	x2, 2b794 <__asan_backtrace_create_state@@Base+0x2e48>
   2b788:	mov	w1, w20
   2b78c:	mov	x0, x19
   2b790:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b794:	ldr	x0, [x22, #16]
   2b798:	cbz	x0, 2d9c8 <__asan_backtrace_create_state@@Base+0x507c>
   2b79c:	ldr	x1, [x19, #256]
   2b7a0:	cmp	x1, #0xfd
   2b7a4:	b.ls	2b7cc <__asan_backtrace_create_state@@Base+0x2e80>  // b.plast
   2b7a8:	strb	wzr, [x19, x1]
   2b7ac:	ldr	x3, [x19, #272]
   2b7b0:	ldr	x2, [x19, #280]
   2b7b4:	mov	x0, x19
   2b7b8:	blr	x3
   2b7bc:	str	xzr, [x19, #256]
   2b7c0:	ldr	x0, [x19, #320]
   2b7c4:	add	x0, x0, #0x1
   2b7c8:	str	x0, [x19, #320]
   2b7cc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b7d0:	add	x0, x0, #0xa10
   2b7d4:	bl	64b0 <__asan_internal_strlen@plt>
   2b7d8:	cbz	x0, 2b854 <__asan_backtrace_create_state@@Base+0x2f08>
   2b7dc:	stp	x25, x26, [sp, #64]
   2b7e0:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b7e4:	add	x21, x21, #0xa10
   2b7e8:	add	x24, x0, x21
   2b7ec:	mov	x25, #0xff                  	// #255
   2b7f0:	b	2b814 <__asan_backtrace_create_state@@Base+0x2ec8>
   2b7f4:	ldr	x0, [x19, #256]
   2b7f8:	add	x1, x0, #0x1
   2b7fc:	str	x1, [x19, #256]
   2b800:	strb	w23, [x19, x0]
   2b804:	strb	w23, [x19, #264]
   2b808:	add	x21, x21, #0x1
   2b80c:	cmp	x21, x24
   2b810:	b.eq	2b850 <__asan_backtrace_create_state@@Base+0x2f04>  // b.none
   2b814:	ldrb	w23, [x21]
   2b818:	ldr	x0, [x19, #256]
   2b81c:	cmp	x0, #0xff
   2b820:	b.ne	2b7f4 <__asan_backtrace_create_state@@Base+0x2ea8>  // b.any
   2b824:	strb	wzr, [x19, #255]
   2b828:	ldr	x3, [x19, #272]
   2b82c:	ldr	x2, [x19, #280]
   2b830:	mov	x1, x25
   2b834:	mov	x0, x19
   2b838:	blr	x3
   2b83c:	str	xzr, [x19, #256]
   2b840:	ldr	x0, [x19, #320]
   2b844:	add	x0, x0, #0x1
   2b848:	str	x0, [x19, #320]
   2b84c:	b	2b7f4 <__asan_backtrace_create_state@@Base+0x2ea8>
   2b850:	ldp	x25, x26, [sp, #64]
   2b854:	ldr	x23, [x19, #256]
   2b858:	ldr	x21, [x19, #320]
   2b85c:	ldr	x2, [x22, #16]
   2b860:	mov	w1, w20
   2b864:	mov	x0, x19
   2b868:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b86c:	ldr	x0, [x19, #320]
   2b870:	cmp	x0, x21
   2b874:	b.eq	2b884 <__asan_backtrace_create_state@@Base+0x2f38>  // b.none
   2b878:	ldp	x21, x22, [sp, #32]
   2b87c:	ldp	x23, x24, [sp, #48]
   2b880:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b884:	ldr	x0, [x19, #256]
   2b888:	cmp	x0, x23
   2b88c:	b.eq	2b89c <__asan_backtrace_create_state@@Base+0x2f50>  // b.none
   2b890:	ldp	x21, x22, [sp, #32]
   2b894:	ldp	x23, x24, [sp, #48]
   2b898:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b89c:	sub	x0, x0, #0x2
   2b8a0:	str	x0, [x19, #256]
   2b8a4:	ldp	x21, x22, [sp, #32]
   2b8a8:	ldp	x23, x24, [sp, #48]
   2b8ac:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b8b0:	ldr	x2, [x22, #8]
   2b8b4:	ldr	x21, [x22, #16]
   2b8b8:	cbz	x2, 2b8c8 <__asan_backtrace_create_state@@Base+0x2f7c>
   2b8bc:	mov	w1, w20
   2b8c0:	mov	x0, x19
   2b8c4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b8c8:	ldr	x0, [x19, #256]
   2b8cc:	cmp	x0, #0xff
   2b8d0:	b.eq	2b92c <__asan_backtrace_create_state@@Base+0x2fe0>  // b.none
   2b8d4:	ldr	x1, [x19, #256]
   2b8d8:	add	x0, x1, #0x1
   2b8dc:	str	x0, [x19, #256]
   2b8e0:	mov	w0, #0x7b                  	// #123
   2b8e4:	strb	w0, [x19, x1]
   2b8e8:	strb	w0, [x19, #264]
   2b8ec:	mov	x2, x21
   2b8f0:	mov	w1, w20
   2b8f4:	mov	x0, x19
   2b8f8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2b8fc:	ldr	x0, [x19, #256]
   2b900:	cmp	x0, #0xff
   2b904:	b.eq	2b958 <__asan_backtrace_create_state@@Base+0x300c>  // b.none
   2b908:	ldr	x1, [x19, #256]
   2b90c:	add	x0, x1, #0x1
   2b910:	str	x0, [x19, #256]
   2b914:	mov	w0, #0x7d                  	// #125
   2b918:	strb	w0, [x19, x1]
   2b91c:	strb	w0, [x19, #264]
   2b920:	ldp	x21, x22, [sp, #32]
   2b924:	ldp	x23, x24, [sp, #48]
   2b928:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2b92c:	strb	wzr, [x19, #255]
   2b930:	ldr	x3, [x19, #272]
   2b934:	ldr	x2, [x19, #280]
   2b938:	mov	x1, #0xff                  	// #255
   2b93c:	mov	x0, x19
   2b940:	blr	x3
   2b944:	str	xzr, [x19, #256]
   2b948:	ldr	x0, [x19, #320]
   2b94c:	add	x0, x0, #0x1
   2b950:	str	x0, [x19, #320]
   2b954:	b	2b8d4 <__asan_backtrace_create_state@@Base+0x2f88>
   2b958:	strb	wzr, [x19, #255]
   2b95c:	ldr	x3, [x19, #272]
   2b960:	ldr	x2, [x19, #280]
   2b964:	mov	x1, #0xff                  	// #255
   2b968:	mov	x0, x19
   2b96c:	blr	x3
   2b970:	str	xzr, [x19, #256]
   2b974:	ldr	x0, [x19, #320]
   2b978:	add	x0, x0, #0x1
   2b97c:	str	x0, [x19, #320]
   2b980:	b	2b908 <__asan_backtrace_create_state@@Base+0x2fbc>
   2b984:	ldr	x24, [x22, #8]
   2b988:	ldr	w23, [x24, #16]
   2b98c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b990:	add	x0, x0, #0xa18
   2b994:	bl	64b0 <__asan_internal_strlen@plt>
   2b998:	cbz	x0, 2ba14 <__asan_backtrace_create_state@@Base+0x30c8>
   2b99c:	stp	x25, x26, [sp, #64]
   2b9a0:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2b9a4:	add	x20, x20, #0xa18
   2b9a8:	add	x22, x0, x20
   2b9ac:	mov	x25, #0xff                  	// #255
   2b9b0:	b	2b9d4 <__asan_backtrace_create_state@@Base+0x3088>
   2b9b4:	ldr	x0, [x19, #256]
   2b9b8:	add	x1, x0, #0x1
   2b9bc:	str	x1, [x19, #256]
   2b9c0:	strb	w21, [x19, x0]
   2b9c4:	strb	w21, [x19, #264]
   2b9c8:	add	x20, x20, #0x1
   2b9cc:	cmp	x20, x22
   2b9d0:	b.eq	2ba10 <__asan_backtrace_create_state@@Base+0x30c4>  // b.none
   2b9d4:	ldrb	w21, [x20]
   2b9d8:	ldr	x0, [x19, #256]
   2b9dc:	cmp	x0, #0xff
   2b9e0:	b.ne	2b9b4 <__asan_backtrace_create_state@@Base+0x3068>  // b.any
   2b9e4:	strb	wzr, [x19, #255]
   2b9e8:	ldr	x3, [x19, #272]
   2b9ec:	ldr	x2, [x19, #280]
   2b9f0:	mov	x1, x25
   2b9f4:	mov	x0, x19
   2b9f8:	blr	x3
   2b9fc:	str	xzr, [x19, #256]
   2ba00:	ldr	x0, [x19, #320]
   2ba04:	add	x0, x0, #0x1
   2ba08:	str	x0, [x19, #320]
   2ba0c:	b	2b9b4 <__asan_backtrace_create_state@@Base+0x3068>
   2ba10:	ldp	x25, x26, [sp, #64]
   2ba14:	ldr	x0, [x24, #8]
   2ba18:	ldrb	w0, [x0]
   2ba1c:	sub	w0, w0, #0x61
   2ba20:	and	w0, w0, #0xff
   2ba24:	cmp	w0, #0x19
   2ba28:	b.hi	2ba50 <__asan_backtrace_create_state@@Base+0x3104>  // b.pmore
   2ba2c:	ldr	x0, [x19, #256]
   2ba30:	cmp	x0, #0xff
   2ba34:	b.eq	2ba80 <__asan_backtrace_create_state@@Base+0x3134>  // b.none
   2ba38:	ldr	x1, [x19, #256]
   2ba3c:	add	x0, x1, #0x1
   2ba40:	str	x0, [x19, #256]
   2ba44:	mov	w0, #0x20                  	// #32
   2ba48:	strb	w0, [x19, x1]
   2ba4c:	strb	w0, [x19, #264]
   2ba50:	ldr	x22, [x24, #8]
   2ba54:	add	x0, x22, w23, sxtw
   2ba58:	ldurb	w0, [x0, #-1]
   2ba5c:	cmp	w0, #0x20
   2ba60:	cset	w0, eq  // eq = none
   2ba64:	sub	w23, w23, w0
   2ba68:	sxtw	x0, w23
   2ba6c:	cbz	w23, 2d9d4 <__asan_backtrace_create_state@@Base+0x5088>
   2ba70:	mov	x20, x22
   2ba74:	add	x22, x22, x0
   2ba78:	mov	x23, #0xff                  	// #255
   2ba7c:	b	2bacc <__asan_backtrace_create_state@@Base+0x3180>
   2ba80:	strb	wzr, [x19, #255]
   2ba84:	ldr	x3, [x19, #272]
   2ba88:	ldr	x2, [x19, #280]
   2ba8c:	mov	x1, #0xff                  	// #255
   2ba90:	mov	x0, x19
   2ba94:	blr	x3
   2ba98:	str	xzr, [x19, #256]
   2ba9c:	ldr	x0, [x19, #320]
   2baa0:	add	x0, x0, #0x1
   2baa4:	str	x0, [x19, #320]
   2baa8:	b	2ba38 <__asan_backtrace_create_state@@Base+0x30ec>
   2baac:	ldr	x0, [x19, #256]
   2bab0:	add	x1, x0, #0x1
   2bab4:	str	x1, [x19, #256]
   2bab8:	strb	w21, [x19, x0]
   2babc:	strb	w21, [x19, #264]
   2bac0:	add	x20, x20, #0x1
   2bac4:	cmp	x20, x22
   2bac8:	b.eq	2bb08 <__asan_backtrace_create_state@@Base+0x31bc>  // b.none
   2bacc:	ldrb	w21, [x20]
   2bad0:	ldr	x0, [x19, #256]
   2bad4:	cmp	x0, #0xff
   2bad8:	b.ne	2baac <__asan_backtrace_create_state@@Base+0x3160>  // b.any
   2badc:	strb	wzr, [x19, #255]
   2bae0:	ldr	x3, [x19, #272]
   2bae4:	ldr	x2, [x19, #280]
   2bae8:	mov	x1, x23
   2baec:	mov	x0, x19
   2baf0:	blr	x3
   2baf4:	str	xzr, [x19, #256]
   2baf8:	ldr	x0, [x19, #320]
   2bafc:	add	x0, x0, #0x1
   2bb00:	str	x0, [x19, #320]
   2bb04:	b	2baac <__asan_backtrace_create_state@@Base+0x3160>
   2bb08:	ldp	x21, x22, [sp, #32]
   2bb0c:	ldp	x23, x24, [sp, #48]
   2bb10:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2bb14:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bb18:	add	x0, x0, #0xa28
   2bb1c:	bl	64b0 <__asan_internal_strlen@plt>
   2bb20:	cbz	x0, 2bb9c <__asan_backtrace_create_state@@Base+0x3250>
   2bb24:	stp	x25, x26, [sp, #64]
   2bb28:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bb2c:	add	x21, x21, #0xa28
   2bb30:	add	x24, x0, x21
   2bb34:	mov	x25, #0xff                  	// #255
   2bb38:	b	2bb5c <__asan_backtrace_create_state@@Base+0x3210>
   2bb3c:	ldr	x0, [x19, #256]
   2bb40:	add	x1, x0, #0x1
   2bb44:	str	x1, [x19, #256]
   2bb48:	strb	w23, [x19, x0]
   2bb4c:	strb	w23, [x19, #264]
   2bb50:	add	x21, x21, #0x1
   2bb54:	cmp	x21, x24
   2bb58:	b.eq	2bb98 <__asan_backtrace_create_state@@Base+0x324c>  // b.none
   2bb5c:	ldrb	w23, [x21]
   2bb60:	ldr	x0, [x19, #256]
   2bb64:	cmp	x0, #0xff
   2bb68:	b.ne	2bb3c <__asan_backtrace_create_state@@Base+0x31f0>  // b.any
   2bb6c:	strb	wzr, [x19, #255]
   2bb70:	ldr	x3, [x19, #272]
   2bb74:	ldr	x2, [x19, #280]
   2bb78:	mov	x1, x25
   2bb7c:	mov	x0, x19
   2bb80:	blr	x3
   2bb84:	str	xzr, [x19, #256]
   2bb88:	ldr	x0, [x19, #320]
   2bb8c:	add	x0, x0, #0x1
   2bb90:	str	x0, [x19, #320]
   2bb94:	b	2bb3c <__asan_backtrace_create_state@@Base+0x31f0>
   2bb98:	ldp	x25, x26, [sp, #64]
   2bb9c:	ldr	x2, [x22, #16]
   2bba0:	mov	w1, w20
   2bba4:	mov	x0, x19
   2bba8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2bbac:	ldp	x21, x22, [sp, #32]
   2bbb0:	ldp	x23, x24, [sp, #48]
   2bbb4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2bbb8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bbbc:	add	x0, x0, #0xa28
   2bbc0:	bl	64b0 <__asan_internal_strlen@plt>
   2bbc4:	cbz	x0, 2bc40 <__asan_backtrace_create_state@@Base+0x32f4>
   2bbc8:	stp	x25, x26, [sp, #64]
   2bbcc:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bbd0:	add	x21, x21, #0xa28
   2bbd4:	add	x24, x0, x21
   2bbd8:	mov	x25, #0xff                  	// #255
   2bbdc:	b	2bc00 <__asan_backtrace_create_state@@Base+0x32b4>
   2bbe0:	ldr	x0, [x19, #256]
   2bbe4:	add	x1, x0, #0x1
   2bbe8:	str	x1, [x19, #256]
   2bbec:	strb	w23, [x19, x0]
   2bbf0:	strb	w23, [x19, #264]
   2bbf4:	add	x21, x21, #0x1
   2bbf8:	cmp	x21, x24
   2bbfc:	b.eq	2bc3c <__asan_backtrace_create_state@@Base+0x32f0>  // b.none
   2bc00:	ldrb	w23, [x21]
   2bc04:	ldr	x0, [x19, #256]
   2bc08:	cmp	x0, #0xff
   2bc0c:	b.ne	2bbe0 <__asan_backtrace_create_state@@Base+0x3294>  // b.any
   2bc10:	strb	wzr, [x19, #255]
   2bc14:	ldr	x3, [x19, #272]
   2bc18:	ldr	x2, [x19, #280]
   2bc1c:	mov	x1, x25
   2bc20:	mov	x0, x19
   2bc24:	blr	x3
   2bc28:	str	xzr, [x19, #256]
   2bc2c:	ldr	x0, [x19, #320]
   2bc30:	add	x0, x0, #0x1
   2bc34:	str	x0, [x19, #320]
   2bc38:	b	2bbe0 <__asan_backtrace_create_state@@Base+0x3294>
   2bc3c:	ldp	x25, x26, [sp, #64]
   2bc40:	ldr	x0, [x19, #368]
   2bc44:	cbz	x0, 2bc5c <__asan_backtrace_create_state@@Base+0x3310>
   2bc48:	ldr	x1, [x19, #288]
   2bc4c:	str	x1, [sp, #128]
   2bc50:	add	x1, sp, #0x80
   2bc54:	str	x1, [x19, #288]
   2bc58:	str	x0, [sp, #136]
   2bc5c:	ldr	x2, [x22, #8]
   2bc60:	ldr	w0, [x2]
   2bc64:	cmp	w0, #0x4
   2bc68:	b.eq	2bc94 <__asan_backtrace_create_state@@Base+0x3348>  // b.none
   2bc6c:	mov	w1, w20
   2bc70:	mov	x0, x19
   2bc74:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2bc78:	ldr	x0, [x19, #368]
   2bc7c:	cbz	x0, 2d9e0 <__asan_backtrace_create_state@@Base+0x5094>
   2bc80:	ldr	x0, [sp, #128]
   2bc84:	str	x0, [x19, #288]
   2bc88:	ldp	x21, x22, [sp, #32]
   2bc8c:	ldp	x23, x24, [sp, #48]
   2bc90:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2bc94:	ldr	x2, [x2, #8]
   2bc98:	mov	w1, w20
   2bc9c:	mov	x0, x19
   2bca0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2bca4:	ldr	x0, [x19, #368]
   2bca8:	cbz	x0, 2bcb4 <__asan_backtrace_create_state@@Base+0x3368>
   2bcac:	ldr	x0, [sp, #128]
   2bcb0:	str	x0, [x19, #288]
   2bcb4:	ldrb	w0, [x19, #264]
   2bcb8:	cmp	w0, #0x3c
   2bcbc:	b.eq	2bd34 <__asan_backtrace_create_state@@Base+0x33e8>  // b.none
   2bcc0:	ldr	x0, [x19, #256]
   2bcc4:	cmp	x0, #0xff
   2bcc8:	b.eq	2bd88 <__asan_backtrace_create_state@@Base+0x343c>  // b.none
   2bccc:	ldr	x1, [x19, #256]
   2bcd0:	add	x0, x1, #0x1
   2bcd4:	str	x0, [x19, #256]
   2bcd8:	mov	w0, #0x3c                  	// #60
   2bcdc:	strb	w0, [x19, x1]
   2bce0:	strb	w0, [x19, #264]
   2bce4:	ldr	x0, [x22, #8]
   2bce8:	ldr	x2, [x0, #16]
   2bcec:	mov	w1, w20
   2bcf0:	mov	x0, x19
   2bcf4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2bcf8:	ldrb	w0, [x19, #264]
   2bcfc:	cmp	w0, #0x3e
   2bd00:	b.eq	2bdb4 <__asan_backtrace_create_state@@Base+0x3468>  // b.none
   2bd04:	ldr	x0, [x19, #256]
   2bd08:	cmp	x0, #0xff
   2bd0c:	b.eq	2be08 <__asan_backtrace_create_state@@Base+0x34bc>  // b.none
   2bd10:	ldr	x1, [x19, #256]
   2bd14:	add	x0, x1, #0x1
   2bd18:	str	x0, [x19, #256]
   2bd1c:	mov	w0, #0x3e                  	// #62
   2bd20:	strb	w0, [x19, x1]
   2bd24:	strb	w0, [x19, #264]
   2bd28:	ldp	x21, x22, [sp, #32]
   2bd2c:	ldp	x23, x24, [sp, #48]
   2bd30:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2bd34:	ldr	x0, [x19, #256]
   2bd38:	cmp	x0, #0xff
   2bd3c:	b.eq	2bd5c <__asan_backtrace_create_state@@Base+0x3410>  // b.none
   2bd40:	ldr	x1, [x19, #256]
   2bd44:	add	x0, x1, #0x1
   2bd48:	str	x0, [x19, #256]
   2bd4c:	mov	w0, #0x20                  	// #32
   2bd50:	strb	w0, [x19, x1]
   2bd54:	strb	w0, [x19, #264]
   2bd58:	b	2bcc0 <__asan_backtrace_create_state@@Base+0x3374>
   2bd5c:	strb	wzr, [x19, #255]
   2bd60:	ldr	x3, [x19, #272]
   2bd64:	ldr	x2, [x19, #280]
   2bd68:	mov	x1, #0xff                  	// #255
   2bd6c:	mov	x0, x19
   2bd70:	blr	x3
   2bd74:	str	xzr, [x19, #256]
   2bd78:	ldr	x0, [x19, #320]
   2bd7c:	add	x0, x0, #0x1
   2bd80:	str	x0, [x19, #320]
   2bd84:	b	2bd40 <__asan_backtrace_create_state@@Base+0x33f4>
   2bd88:	strb	wzr, [x19, #255]
   2bd8c:	ldr	x3, [x19, #272]
   2bd90:	ldr	x2, [x19, #280]
   2bd94:	mov	x1, #0xff                  	// #255
   2bd98:	mov	x0, x19
   2bd9c:	blr	x3
   2bda0:	str	xzr, [x19, #256]
   2bda4:	ldr	x0, [x19, #320]
   2bda8:	add	x0, x0, #0x1
   2bdac:	str	x0, [x19, #320]
   2bdb0:	b	2bccc <__asan_backtrace_create_state@@Base+0x3380>
   2bdb4:	ldr	x0, [x19, #256]
   2bdb8:	cmp	x0, #0xff
   2bdbc:	b.eq	2bddc <__asan_backtrace_create_state@@Base+0x3490>  // b.none
   2bdc0:	ldr	x1, [x19, #256]
   2bdc4:	add	x0, x1, #0x1
   2bdc8:	str	x0, [x19, #256]
   2bdcc:	mov	w0, #0x20                  	// #32
   2bdd0:	strb	w0, [x19, x1]
   2bdd4:	strb	w0, [x19, #264]
   2bdd8:	b	2bd04 <__asan_backtrace_create_state@@Base+0x33b8>
   2bddc:	strb	wzr, [x19, #255]
   2bde0:	ldr	x3, [x19, #272]
   2bde4:	ldr	x2, [x19, #280]
   2bde8:	mov	x1, #0xff                  	// #255
   2bdec:	mov	x0, x19
   2bdf0:	blr	x3
   2bdf4:	str	xzr, [x19, #256]
   2bdf8:	ldr	x0, [x19, #320]
   2bdfc:	add	x0, x0, #0x1
   2be00:	str	x0, [x19, #320]
   2be04:	b	2bdc0 <__asan_backtrace_create_state@@Base+0x3474>
   2be08:	strb	wzr, [x19, #255]
   2be0c:	ldr	x3, [x19, #272]
   2be10:	ldr	x2, [x19, #280]
   2be14:	mov	x1, #0xff                  	// #255
   2be18:	mov	x0, x19
   2be1c:	blr	x3
   2be20:	str	xzr, [x19, #256]
   2be24:	ldr	x0, [x19, #320]
   2be28:	add	x0, x0, #0x1
   2be2c:	str	x0, [x19, #320]
   2be30:	b	2bd10 <__asan_backtrace_create_state@@Base+0x33c4>
   2be34:	ldr	x2, [x22, #8]
   2be38:	mov	w1, w20
   2be3c:	mov	x0, x19
   2be40:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2be44:	ldp	x21, x22, [sp, #32]
   2be48:	ldp	x23, x24, [sp, #48]
   2be4c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2be50:	ldr	x23, [x22, #8]
   2be54:	ldr	x21, [x22, #16]
   2be58:	ldr	w0, [x23]
   2be5c:	cmp	w0, #0x32
   2be60:	b.eq	2bf14 <__asan_backtrace_create_state@@Base+0x35c8>  // b.none
   2be64:	mov	x24, #0x0                   	// #0
   2be68:	ldr	w0, [x23]
   2be6c:	cmp	w0, #0x34
   2be70:	b.ne	2c050 <__asan_backtrace_create_state@@Base+0x3704>  // b.any
   2be74:	ldr	x0, [x19, #256]
   2be78:	cmp	x0, #0xff
   2be7c:	b.eq	2c064 <__asan_backtrace_create_state@@Base+0x3718>  // b.none
   2be80:	ldr	x1, [x19, #256]
   2be84:	add	x0, x1, #0x1
   2be88:	str	x0, [x19, #256]
   2be8c:	mov	w0, #0x28                  	// #40
   2be90:	strb	w0, [x19, x1]
   2be94:	strb	w0, [x19, #264]
   2be98:	ldr	x2, [x23, #8]
   2be9c:	mov	w1, w20
   2bea0:	mov	x0, x19
   2bea4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2bea8:	ldr	x0, [x19, #256]
   2beac:	cmp	x0, #0xff
   2beb0:	b.eq	2c090 <__asan_backtrace_create_state@@Base+0x3744>  // b.none
   2beb4:	ldr	x1, [x19, #256]
   2beb8:	add	x0, x1, #0x1
   2bebc:	str	x0, [x19, #256]
   2bec0:	mov	w0, #0x29                  	// #41
   2bec4:	strb	w0, [x19, x1]
   2bec8:	strb	w0, [x19, #264]
   2becc:	cbz	x24, 2bef8 <__asan_backtrace_create_state@@Base+0x35ac>
   2bed0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bed4:	add	x1, x1, #0xa48
   2bed8:	mov	x0, x24
   2bedc:	bl	67f0 <__asan_internal_strcmp@plt>
   2bee0:	cbz	w0, 2c0bc <__asan_backtrace_create_state@@Base+0x3770>
   2bee4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bee8:	add	x1, x1, #0xfe0
   2beec:	mov	x0, x24
   2bef0:	bl	67f0 <__asan_internal_strcmp@plt>
   2bef4:	cbz	w0, 2c0d8 <__asan_backtrace_create_state@@Base+0x378c>
   2bef8:	mov	x2, x21
   2befc:	mov	w1, w20
   2bf00:	mov	x0, x19
   2bf04:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2bf08:	ldp	x21, x22, [sp, #32]
   2bf0c:	ldp	x23, x24, [sp, #48]
   2bf10:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2bf14:	ldr	x0, [x23, #8]
   2bf18:	ldr	x24, [x0]
   2bf1c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bf20:	add	x1, x1, #0xa38
   2bf24:	mov	x0, x24
   2bf28:	bl	67f0 <__asan_internal_strcmp@plt>
   2bf2c:	cbnz	w0, 2bf3c <__asan_backtrace_create_state@@Base+0x35f0>
   2bf30:	ldr	w0, [x21]
   2bf34:	cmp	w0, #0x3
   2bf38:	b.eq	2bf94 <__asan_backtrace_create_state@@Base+0x3648>  // b.none
   2bf3c:	ldr	w0, [x21]
   2bf40:	cmp	w0, #0x39
   2bf44:	b.eq	2bfb8 <__asan_backtrace_create_state@@Base+0x366c>  // b.none
   2bf48:	cbz	x24, 2be64 <__asan_backtrace_create_state@@Base+0x3518>
   2bf4c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bf50:	add	x1, x1, #0xa40
   2bf54:	mov	x0, x24
   2bf58:	bl	67f0 <__asan_internal_strcmp@plt>
   2bf5c:	cbz	w0, 2bfe4 <__asan_backtrace_create_state@@Base+0x3698>
   2bf60:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2bf64:	add	x1, x1, #0xb40
   2bf68:	mov	x0, x24
   2bf6c:	bl	67f0 <__asan_internal_strcmp@plt>
   2bf70:	mov	w22, w0
   2bf74:	cbnz	w0, 2be68 <__asan_backtrace_create_state@@Base+0x351c>
   2bf78:	cbnz	x21, 2c028 <__asan_backtrace_create_state@@Base+0x36dc>
   2bf7c:	mov	w1, w22
   2bf80:	mov	x0, x19
   2bf84:	bl	294f4 <__asan_backtrace_create_state@@Base+0xba8>
   2bf88:	ldp	x21, x22, [sp, #32]
   2bf8c:	ldp	x23, x24, [sp, #48]
   2bf90:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2bf94:	ldr	x0, [x21, #8]
   2bf98:	ldr	w1, [x0]
   2bf9c:	cmp	w1, #0x1
   2bfa0:	b.ne	2bf48 <__asan_backtrace_create_state@@Base+0x35fc>  // b.any
   2bfa4:	ldr	x1, [x21, #16]
   2bfa8:	ldr	w1, [x1]
   2bfac:	cmp	w1, #0x29
   2bfb0:	csel	x21, x21, x0, ne  // ne = any
   2bfb4:	b	2bf48 <__asan_backtrace_create_state@@Base+0x35fc>
   2bfb8:	ldr	x2, [x21, #8]
   2bfbc:	mov	w1, w20
   2bfc0:	mov	x0, x19
   2bfc4:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2bfc8:	mov	x2, x23
   2bfcc:	mov	w1, w20
   2bfd0:	mov	x0, x19
   2bfd4:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2bfd8:	ldp	x21, x22, [sp, #32]
   2bfdc:	ldp	x23, x24, [sp, #48]
   2bfe0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2bfe4:	mov	x1, x21
   2bfe8:	mov	x0, x19
   2bfec:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   2bff0:	bl	293e4 <__asan_backtrace_create_state@@Base+0xa98>
   2bff4:	mov	w1, w0
   2bff8:	mov	x0, x19
   2bffc:	bl	294f4 <__asan_backtrace_create_state@@Base+0xba8>
   2c000:	ldp	x21, x22, [sp, #32]
   2c004:	ldp	x23, x24, [sp, #48]
   2c008:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c00c:	ldr	x1, [x0, #8]
   2c010:	mov	x0, x19
   2c014:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   2c018:	bl	293e4 <__asan_backtrace_create_state@@Base+0xa98>
   2c01c:	add	w22, w22, w0
   2c020:	ldr	x21, [x21, #16]
   2c024:	cbz	x21, 2bf7c <__asan_backtrace_create_state@@Base+0x3630>
   2c028:	ldr	w0, [x21]
   2c02c:	cmp	w0, #0x2f
   2c030:	b.ne	2bf7c <__asan_backtrace_create_state@@Base+0x3630>  // b.any
   2c034:	ldr	x0, [x21, #8]
   2c038:	cbz	x0, 2bf7c <__asan_backtrace_create_state@@Base+0x3630>
   2c03c:	ldr	w1, [x0]
   2c040:	cmp	w1, #0x4b
   2c044:	b.eq	2c00c <__asan_backtrace_create_state@@Base+0x36c0>  // b.none
   2c048:	add	w22, w22, #0x1
   2c04c:	b	2c020 <__asan_backtrace_create_state@@Base+0x36d4>
   2c050:	mov	x2, x23
   2c054:	mov	w1, w20
   2c058:	mov	x0, x19
   2c05c:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2c060:	b	2becc <__asan_backtrace_create_state@@Base+0x3580>
   2c064:	strb	wzr, [x19, #255]
   2c068:	ldr	x3, [x19, #272]
   2c06c:	ldr	x2, [x19, #280]
   2c070:	mov	x1, #0xff                  	// #255
   2c074:	mov	x0, x19
   2c078:	blr	x3
   2c07c:	str	xzr, [x19, #256]
   2c080:	ldr	x0, [x19, #320]
   2c084:	add	x0, x0, #0x1
   2c088:	str	x0, [x19, #320]
   2c08c:	b	2be80 <__asan_backtrace_create_state@@Base+0x3534>
   2c090:	strb	wzr, [x19, #255]
   2c094:	ldr	x3, [x19, #272]
   2c098:	ldr	x2, [x19, #280]
   2c09c:	mov	x1, #0xff                  	// #255
   2c0a0:	mov	x0, x19
   2c0a4:	blr	x3
   2c0a8:	str	xzr, [x19, #256]
   2c0ac:	ldr	x0, [x19, #320]
   2c0b0:	add	x0, x0, #0x1
   2c0b4:	str	x0, [x19, #320]
   2c0b8:	b	2beb4 <__asan_backtrace_create_state@@Base+0x3568>
   2c0bc:	mov	x2, x21
   2c0c0:	mov	w1, w20
   2c0c4:	mov	x0, x19
   2c0c8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c0cc:	ldp	x21, x22, [sp, #32]
   2c0d0:	ldp	x23, x24, [sp, #48]
   2c0d4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c0d8:	ldr	x0, [x19, #256]
   2c0dc:	cmp	x0, #0xff
   2c0e0:	b.eq	2c13c <__asan_backtrace_create_state@@Base+0x37f0>  // b.none
   2c0e4:	ldr	x1, [x19, #256]
   2c0e8:	add	x0, x1, #0x1
   2c0ec:	str	x0, [x19, #256]
   2c0f0:	mov	w0, #0x28                  	// #40
   2c0f4:	strb	w0, [x19, x1]
   2c0f8:	strb	w0, [x19, #264]
   2c0fc:	mov	x2, x21
   2c100:	mov	w1, w20
   2c104:	mov	x0, x19
   2c108:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c10c:	ldr	x0, [x19, #256]
   2c110:	cmp	x0, #0xff
   2c114:	b.eq	2c168 <__asan_backtrace_create_state@@Base+0x381c>  // b.none
   2c118:	ldr	x1, [x19, #256]
   2c11c:	add	x0, x1, #0x1
   2c120:	str	x0, [x19, #256]
   2c124:	mov	w0, #0x29                  	// #41
   2c128:	strb	w0, [x19, x1]
   2c12c:	strb	w0, [x19, #264]
   2c130:	ldp	x21, x22, [sp, #32]
   2c134:	ldp	x23, x24, [sp, #48]
   2c138:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c13c:	strb	wzr, [x19, #255]
   2c140:	ldr	x3, [x19, #272]
   2c144:	ldr	x2, [x19, #280]
   2c148:	mov	x1, #0xff                  	// #255
   2c14c:	mov	x0, x19
   2c150:	blr	x3
   2c154:	str	xzr, [x19, #256]
   2c158:	ldr	x0, [x19, #320]
   2c15c:	add	x0, x0, #0x1
   2c160:	str	x0, [x19, #320]
   2c164:	b	2c0e4 <__asan_backtrace_create_state@@Base+0x3798>
   2c168:	strb	wzr, [x19, #255]
   2c16c:	ldr	x3, [x19, #272]
   2c170:	ldr	x2, [x19, #280]
   2c174:	mov	x1, #0xff                  	// #255
   2c178:	mov	x0, x19
   2c17c:	blr	x3
   2c180:	str	xzr, [x19, #256]
   2c184:	ldr	x0, [x19, #320]
   2c188:	add	x0, x0, #0x1
   2c18c:	str	x0, [x19, #320]
   2c190:	b	2c118 <__asan_backtrace_create_state@@Base+0x37cc>
   2c194:	ldr	x0, [x22, #16]
   2c198:	ldr	w0, [x0]
   2c19c:	cmp	w0, #0x39
   2c1a0:	b.eq	2c1b8 <__asan_backtrace_create_state@@Base+0x386c>  // b.none
   2c1a4:	mov	w0, #0x1                   	// #1
   2c1a8:	str	w0, [x19, #304]
   2c1ac:	ldp	x21, x22, [sp, #32]
   2c1b0:	ldp	x23, x24, [sp, #48]
   2c1b4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c1b8:	ldr	x21, [x22, #8]
   2c1bc:	mov	x0, x21
   2c1c0:	bl	28fa4 <__asan_backtrace_create_state@@Base+0x658>
   2c1c4:	cbnz	w0, 2c2c4 <__asan_backtrace_create_state@@Base+0x3978>
   2c1c8:	mov	x2, x22
   2c1cc:	mov	w1, w20
   2c1d0:	mov	x0, x19
   2c1d4:	bl	2f050 <__asan_backtrace_create_state@@Base+0x6704>
   2c1d8:	cbnz	w0, 2d9ec <__asan_backtrace_create_state@@Base+0x50a0>
   2c1dc:	ldr	x0, [x22, #8]
   2c1e0:	ldr	w1, [x0]
   2c1e4:	cmp	w1, #0x32
   2c1e8:	b.eq	2c430 <__asan_backtrace_create_state@@Base+0x3ae4>  // b.none
   2c1ec:	ldr	x0, [x22, #8]
   2c1f0:	ldr	x0, [x0, #8]
   2c1f4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c1f8:	add	x1, x1, #0xa58
   2c1fc:	ldr	x0, [x0]
   2c200:	bl	67f0 <__asan_internal_strcmp@plt>
   2c204:	cbnz	w0, 2c21c <__asan_backtrace_create_state@@Base+0x38d0>
   2c208:	ldr	x0, [x22, #16]
   2c20c:	ldr	x0, [x0, #8]
   2c210:	ldr	w1, [x0]
   2c214:	cmp	w1, #0x3
   2c218:	b.eq	2c4a4 <__asan_backtrace_create_state@@Base+0x3b58>  // b.none
   2c21c:	ldr	x0, [x22, #16]
   2c220:	ldr	x2, [x0, #8]
   2c224:	mov	w1, w20
   2c228:	mov	x0, x19
   2c22c:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c230:	ldr	x0, [x22, #8]
   2c234:	ldr	x0, [x0, #8]
   2c238:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c23c:	add	x1, x1, #0xa60
   2c240:	ldr	x0, [x0]
   2c244:	bl	67f0 <__asan_internal_strcmp@plt>
   2c248:	cbnz	w0, 2c528 <__asan_backtrace_create_state@@Base+0x3bdc>
   2c24c:	ldr	x0, [x19, #256]
   2c250:	cmp	x0, #0xff
   2c254:	b.eq	2c4d0 <__asan_backtrace_create_state@@Base+0x3b84>  // b.none
   2c258:	ldr	x1, [x19, #256]
   2c25c:	add	x0, x1, #0x1
   2c260:	str	x0, [x19, #256]
   2c264:	mov	w0, #0x5b                  	// #91
   2c268:	strb	w0, [x19, x1]
   2c26c:	strb	w0, [x19, #264]
   2c270:	ldr	x0, [x22, #16]
   2c274:	ldr	x2, [x0, #16]
   2c278:	mov	w1, w20
   2c27c:	mov	x0, x19
   2c280:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c284:	ldr	x0, [x19, #256]
   2c288:	cmp	x0, #0xff
   2c28c:	b.eq	2c4fc <__asan_backtrace_create_state@@Base+0x3bb0>  // b.none
   2c290:	ldr	x1, [x19, #256]
   2c294:	add	x0, x1, #0x1
   2c298:	str	x0, [x19, #256]
   2c29c:	mov	w0, #0x5d                  	// #93
   2c2a0:	strb	w0, [x19, x1]
   2c2a4:	strb	w0, [x19, #264]
   2c2a8:	ldr	x0, [x22, #8]
   2c2ac:	ldr	w1, [x0]
   2c2b0:	cmp	w1, #0x32
   2c2b4:	b.eq	2c570 <__asan_backtrace_create_state@@Base+0x3c24>  // b.none
   2c2b8:	ldp	x21, x22, [sp, #32]
   2c2bc:	ldp	x23, x24, [sp, #48]
   2c2c0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c2c4:	mov	x2, x21
   2c2c8:	mov	w1, w20
   2c2cc:	mov	x0, x19
   2c2d0:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2c2d4:	ldr	x0, [x19, #256]
   2c2d8:	cmp	x0, #0xff
   2c2dc:	b.eq	2c334 <__asan_backtrace_create_state@@Base+0x39e8>  // b.none
   2c2e0:	ldr	x1, [x19, #256]
   2c2e4:	add	x0, x1, #0x1
   2c2e8:	str	x0, [x19, #256]
   2c2ec:	mov	w0, #0x3c                  	// #60
   2c2f0:	strb	w0, [x19, x1]
   2c2f4:	strb	w0, [x19, #264]
   2c2f8:	ldr	x0, [x22, #16]
   2c2fc:	ldr	x2, [x0, #8]
   2c300:	mov	w1, w20
   2c304:	mov	x0, x19
   2c308:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c30c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c310:	add	x0, x0, #0xa50
   2c314:	bl	64b0 <__asan_internal_strlen@plt>
   2c318:	cbz	x0, 2c3c0 <__asan_backtrace_create_state@@Base+0x3a74>
   2c31c:	stp	x25, x26, [sp, #64]
   2c320:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c324:	add	x21, x21, #0xa50
   2c328:	add	x24, x0, x21
   2c32c:	mov	x25, #0xff                  	// #255
   2c330:	b	2c380 <__asan_backtrace_create_state@@Base+0x3a34>
   2c334:	strb	wzr, [x19, #255]
   2c338:	ldr	x3, [x19, #272]
   2c33c:	ldr	x2, [x19, #280]
   2c340:	mov	x1, #0xff                  	// #255
   2c344:	mov	x0, x19
   2c348:	blr	x3
   2c34c:	str	xzr, [x19, #256]
   2c350:	ldr	x0, [x19, #320]
   2c354:	add	x0, x0, #0x1
   2c358:	str	x0, [x19, #320]
   2c35c:	b	2c2e0 <__asan_backtrace_create_state@@Base+0x3994>
   2c360:	ldr	x0, [x19, #256]
   2c364:	add	x1, x0, #0x1
   2c368:	str	x1, [x19, #256]
   2c36c:	strb	w23, [x19, x0]
   2c370:	strb	w23, [x19, #264]
   2c374:	add	x21, x21, #0x1
   2c378:	cmp	x21, x24
   2c37c:	b.eq	2c3bc <__asan_backtrace_create_state@@Base+0x3a70>  // b.none
   2c380:	ldrb	w23, [x21]
   2c384:	ldr	x0, [x19, #256]
   2c388:	cmp	x0, #0xff
   2c38c:	b.ne	2c360 <__asan_backtrace_create_state@@Base+0x3a14>  // b.any
   2c390:	strb	wzr, [x19, #255]
   2c394:	ldr	x3, [x19, #272]
   2c398:	ldr	x2, [x19, #280]
   2c39c:	mov	x1, x25
   2c3a0:	mov	x0, x19
   2c3a4:	blr	x3
   2c3a8:	str	xzr, [x19, #256]
   2c3ac:	ldr	x0, [x19, #320]
   2c3b0:	add	x0, x0, #0x1
   2c3b4:	str	x0, [x19, #320]
   2c3b8:	b	2c360 <__asan_backtrace_create_state@@Base+0x3a14>
   2c3bc:	ldp	x25, x26, [sp, #64]
   2c3c0:	ldr	x0, [x22, #16]
   2c3c4:	ldr	x2, [x0, #16]
   2c3c8:	mov	w1, w20
   2c3cc:	mov	x0, x19
   2c3d0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c3d4:	ldr	x0, [x19, #256]
   2c3d8:	cmp	x0, #0xff
   2c3dc:	b.eq	2c404 <__asan_backtrace_create_state@@Base+0x3ab8>  // b.none
   2c3e0:	ldr	x1, [x19, #256]
   2c3e4:	add	x0, x1, #0x1
   2c3e8:	str	x0, [x19, #256]
   2c3ec:	mov	w0, #0x29                  	// #41
   2c3f0:	strb	w0, [x19, x1]
   2c3f4:	strb	w0, [x19, #264]
   2c3f8:	ldp	x21, x22, [sp, #32]
   2c3fc:	ldp	x23, x24, [sp, #48]
   2c400:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c404:	strb	wzr, [x19, #255]
   2c408:	ldr	x3, [x19, #272]
   2c40c:	ldr	x2, [x19, #280]
   2c410:	mov	x1, #0xff                  	// #255
   2c414:	mov	x0, x19
   2c418:	blr	x3
   2c41c:	str	xzr, [x19, #256]
   2c420:	ldr	x0, [x19, #320]
   2c424:	add	x0, x0, #0x1
   2c428:	str	x0, [x19, #320]
   2c42c:	b	2c3e0 <__asan_backtrace_create_state@@Base+0x3a94>
   2c430:	ldr	x0, [x0, #8]
   2c434:	ldr	w1, [x0, #16]
   2c438:	cmp	w1, #0x1
   2c43c:	b.ne	2c1ec <__asan_backtrace_create_state@@Base+0x38a0>  // b.any
   2c440:	ldr	x0, [x0, #8]
   2c444:	ldrb	w0, [x0]
   2c448:	cmp	w0, #0x3e
   2c44c:	b.ne	2c1ec <__asan_backtrace_create_state@@Base+0x38a0>  // b.any
   2c450:	ldr	x0, [x19, #256]
   2c454:	cmp	x0, #0xff
   2c458:	b.eq	2c478 <__asan_backtrace_create_state@@Base+0x3b2c>  // b.none
   2c45c:	ldr	x1, [x19, #256]
   2c460:	add	x0, x1, #0x1
   2c464:	str	x0, [x19, #256]
   2c468:	mov	w0, #0x28                  	// #40
   2c46c:	strb	w0, [x19, x1]
   2c470:	strb	w0, [x19, #264]
   2c474:	b	2c1ec <__asan_backtrace_create_state@@Base+0x38a0>
   2c478:	strb	wzr, [x19, #255]
   2c47c:	ldr	x3, [x19, #272]
   2c480:	ldr	x2, [x19, #280]
   2c484:	mov	x1, #0xff                  	// #255
   2c488:	mov	x0, x19
   2c48c:	blr	x3
   2c490:	str	xzr, [x19, #256]
   2c494:	ldr	x0, [x19, #320]
   2c498:	add	x0, x0, #0x1
   2c49c:	str	x0, [x19, #320]
   2c4a0:	b	2c45c <__asan_backtrace_create_state@@Base+0x3b10>
   2c4a4:	ldr	x1, [x0, #16]
   2c4a8:	ldr	w1, [x1]
   2c4ac:	cmp	w1, #0x29
   2c4b0:	b.eq	2c4bc <__asan_backtrace_create_state@@Base+0x3b70>  // b.none
   2c4b4:	mov	w1, #0x1                   	// #1
   2c4b8:	str	w1, [x19, #304]
   2c4bc:	ldr	x2, [x0, #8]
   2c4c0:	mov	w1, w20
   2c4c4:	mov	x0, x19
   2c4c8:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c4cc:	b	2c230 <__asan_backtrace_create_state@@Base+0x38e4>
   2c4d0:	strb	wzr, [x19, #255]
   2c4d4:	ldr	x3, [x19, #272]
   2c4d8:	ldr	x2, [x19, #280]
   2c4dc:	mov	x1, #0xff                  	// #255
   2c4e0:	mov	x0, x19
   2c4e4:	blr	x3
   2c4e8:	str	xzr, [x19, #256]
   2c4ec:	ldr	x0, [x19, #320]
   2c4f0:	add	x0, x0, #0x1
   2c4f4:	str	x0, [x19, #320]
   2c4f8:	b	2c258 <__asan_backtrace_create_state@@Base+0x390c>
   2c4fc:	strb	wzr, [x19, #255]
   2c500:	ldr	x3, [x19, #272]
   2c504:	ldr	x2, [x19, #280]
   2c508:	mov	x1, #0xff                  	// #255
   2c50c:	mov	x0, x19
   2c510:	blr	x3
   2c514:	str	xzr, [x19, #256]
   2c518:	ldr	x0, [x19, #320]
   2c51c:	add	x0, x0, #0x1
   2c520:	str	x0, [x19, #320]
   2c524:	b	2c290 <__asan_backtrace_create_state@@Base+0x3944>
   2c528:	ldr	x0, [x22, #8]
   2c52c:	ldr	x0, [x0, #8]
   2c530:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c534:	add	x1, x1, #0xa58
   2c538:	ldr	x0, [x0]
   2c53c:	bl	67f0 <__asan_internal_strcmp@plt>
   2c540:	cbnz	w0, 2c55c <__asan_backtrace_create_state@@Base+0x3c10>
   2c544:	ldr	x0, [x22, #16]
   2c548:	ldr	x2, [x0, #16]
   2c54c:	mov	w1, w20
   2c550:	mov	x0, x19
   2c554:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c558:	b	2c2a8 <__asan_backtrace_create_state@@Base+0x395c>
   2c55c:	ldr	x2, [x22, #8]
   2c560:	mov	w1, w20
   2c564:	mov	x0, x19
   2c568:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2c56c:	b	2c544 <__asan_backtrace_create_state@@Base+0x3bf8>
   2c570:	ldr	x0, [x0, #8]
   2c574:	ldr	w1, [x0, #16]
   2c578:	cmp	w1, #0x1
   2c57c:	b.eq	2c58c <__asan_backtrace_create_state@@Base+0x3c40>  // b.none
   2c580:	ldp	x21, x22, [sp, #32]
   2c584:	ldp	x23, x24, [sp, #48]
   2c588:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c58c:	ldr	x0, [x0, #8]
   2c590:	ldrb	w0, [x0]
   2c594:	cmp	w0, #0x3e
   2c598:	b.eq	2c5a8 <__asan_backtrace_create_state@@Base+0x3c5c>  // b.none
   2c59c:	ldp	x21, x22, [sp, #32]
   2c5a0:	ldp	x23, x24, [sp, #48]
   2c5a4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c5a8:	ldr	x0, [x19, #256]
   2c5ac:	cmp	x0, #0xff
   2c5b0:	b.eq	2c5d8 <__asan_backtrace_create_state@@Base+0x3c8c>  // b.none
   2c5b4:	ldr	x1, [x19, #256]
   2c5b8:	add	x0, x1, #0x1
   2c5bc:	str	x0, [x19, #256]
   2c5c0:	mov	w0, #0x29                  	// #41
   2c5c4:	strb	w0, [x19, x1]
   2c5c8:	strb	w0, [x19, #264]
   2c5cc:	ldp	x21, x22, [sp, #32]
   2c5d0:	ldp	x23, x24, [sp, #48]
   2c5d4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c5d8:	strb	wzr, [x19, #255]
   2c5dc:	ldr	x3, [x19, #272]
   2c5e0:	ldr	x2, [x19, #280]
   2c5e4:	mov	x1, #0xff                  	// #255
   2c5e8:	mov	x0, x19
   2c5ec:	blr	x3
   2c5f0:	str	xzr, [x19, #256]
   2c5f4:	ldr	x0, [x19, #320]
   2c5f8:	add	x0, x0, #0x1
   2c5fc:	str	x0, [x19, #320]
   2c600:	b	2c5b4 <__asan_backtrace_create_state@@Base+0x3c68>
   2c604:	mov	w0, #0x1                   	// #1
   2c608:	str	w0, [x19, #304]
   2c60c:	ldp	x21, x22, [sp, #32]
   2c610:	ldp	x23, x24, [sp, #48]
   2c614:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c618:	ldr	x0, [x22, #16]
   2c61c:	ldr	w1, [x0]
   2c620:	cmp	w1, #0x3b
   2c624:	b.ne	2c638 <__asan_backtrace_create_state@@Base+0x3cec>  // b.any
   2c628:	ldr	x0, [x0, #16]
   2c62c:	ldr	w0, [x0]
   2c630:	cmp	w0, #0x3c
   2c634:	b.eq	2c64c <__asan_backtrace_create_state@@Base+0x3d00>  // b.none
   2c638:	mov	w0, #0x1                   	// #1
   2c63c:	str	w0, [x19, #304]
   2c640:	ldp	x21, x22, [sp, #32]
   2c644:	ldp	x23, x24, [sp, #48]
   2c648:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c64c:	mov	x2, x22
   2c650:	mov	w1, w20
   2c654:	mov	x0, x19
   2c658:	bl	2f050 <__asan_backtrace_create_state@@Base+0x6704>
   2c65c:	cbz	w0, 2c66c <__asan_backtrace_create_state@@Base+0x3d20>
   2c660:	ldp	x21, x22, [sp, #32]
   2c664:	ldp	x23, x24, [sp, #48]
   2c668:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c66c:	ldr	x21, [x22, #8]
   2c670:	ldr	x0, [x22, #16]
   2c674:	ldr	x23, [x0, #8]
   2c678:	ldr	x0, [x0, #16]
   2c67c:	ldr	x24, [x0, #8]
   2c680:	ldr	x22, [x0, #16]
   2c684:	ldr	x0, [x21, #8]
   2c688:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c68c:	add	x1, x1, #0xa68
   2c690:	ldr	x0, [x0]
   2c694:	bl	67f0 <__asan_internal_strcmp@plt>
   2c698:	cbnz	w0, 2c708 <__asan_backtrace_create_state@@Base+0x3dbc>
   2c69c:	mov	x2, x23
   2c6a0:	mov	w1, w20
   2c6a4:	mov	x0, x19
   2c6a8:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c6ac:	mov	x2, x21
   2c6b0:	mov	w1, w20
   2c6b4:	mov	x0, x19
   2c6b8:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2c6bc:	mov	x2, x24
   2c6c0:	mov	w1, w20
   2c6c4:	mov	x0, x19
   2c6c8:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c6cc:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c6d0:	add	x21, x21, #0xa70
   2c6d4:	mov	x0, x21
   2c6d8:	bl	64b0 <__asan_internal_strlen@plt>
   2c6dc:	mov	x2, x0
   2c6e0:	mov	x1, x21
   2c6e4:	mov	x0, x19
   2c6e8:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2c6ec:	mov	x2, x22
   2c6f0:	mov	w1, w20
   2c6f4:	mov	x0, x19
   2c6f8:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c6fc:	ldp	x21, x22, [sp, #32]
   2c700:	ldp	x23, x24, [sp, #48]
   2c704:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c708:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c70c:	add	x21, x21, #0xa78
   2c710:	mov	x0, x21
   2c714:	bl	64b0 <__asan_internal_strlen@plt>
   2c718:	mov	x2, x0
   2c71c:	mov	x1, x21
   2c720:	mov	x0, x19
   2c724:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2c728:	ldr	x0, [x23, #8]
   2c72c:	cbz	x0, 2c764 <__asan_backtrace_create_state@@Base+0x3e18>
   2c730:	mov	x2, x23
   2c734:	mov	w1, w20
   2c738:	mov	x0, x19
   2c73c:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c740:	ldr	x0, [x19, #256]
   2c744:	cmp	x0, #0xff
   2c748:	b.eq	2c794 <__asan_backtrace_create_state@@Base+0x3e48>  // b.none
   2c74c:	ldr	x1, [x19, #256]
   2c750:	add	x0, x1, #0x1
   2c754:	str	x0, [x19, #256]
   2c758:	mov	w0, #0x20                  	// #32
   2c75c:	strb	w0, [x19, x1]
   2c760:	strb	w0, [x19, #264]
   2c764:	mov	x2, x24
   2c768:	mov	w1, w20
   2c76c:	mov	x0, x19
   2c770:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c774:	cbz	x22, 2d9f8 <__asan_backtrace_create_state@@Base+0x50ac>
   2c778:	mov	x2, x22
   2c77c:	mov	w1, w20
   2c780:	mov	x0, x19
   2c784:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2c788:	ldp	x21, x22, [sp, #32]
   2c78c:	ldp	x23, x24, [sp, #48]
   2c790:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c794:	strb	wzr, [x19, #255]
   2c798:	ldr	x3, [x19, #272]
   2c79c:	ldr	x2, [x19, #280]
   2c7a0:	mov	x1, #0xff                  	// #255
   2c7a4:	mov	x0, x19
   2c7a8:	blr	x3
   2c7ac:	str	xzr, [x19, #256]
   2c7b0:	ldr	x0, [x19, #320]
   2c7b4:	add	x0, x0, #0x1
   2c7b8:	str	x0, [x19, #320]
   2c7bc:	b	2c74c <__asan_backtrace_create_state@@Base+0x3e00>
   2c7c0:	mov	w0, #0x1                   	// #1
   2c7c4:	str	w0, [x19, #304]
   2c7c8:	ldp	x21, x22, [sp, #32]
   2c7cc:	ldp	x23, x24, [sp, #48]
   2c7d0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c7d4:	ldr	x1, [x22, #8]
   2c7d8:	ldr	w2, [x1]
   2c7dc:	mov	w21, #0x0                   	// #0
   2c7e0:	cmp	w2, #0x27
   2c7e4:	b.eq	2c86c <__asan_backtrace_create_state@@Base+0x3f20>  // b.none
   2c7e8:	ldr	x0, [x19, #256]
   2c7ec:	cmp	x0, #0xff
   2c7f0:	b.eq	2caf8 <__asan_backtrace_create_state@@Base+0x41ac>  // b.none
   2c7f4:	ldr	x1, [x19, #256]
   2c7f8:	add	x0, x1, #0x1
   2c7fc:	str	x0, [x19, #256]
   2c800:	mov	w0, #0x28                  	// #40
   2c804:	strb	w0, [x19, x1]
   2c808:	strb	w0, [x19, #264]
   2c80c:	ldr	x2, [x22, #8]
   2c810:	mov	w1, w20
   2c814:	mov	x0, x19
   2c818:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c81c:	ldr	x0, [x19, #256]
   2c820:	cmp	x0, #0xff
   2c824:	b.eq	2cb24 <__asan_backtrace_create_state@@Base+0x41d8>  // b.none
   2c828:	add	x2, x0, #0x1
   2c82c:	str	x2, [x19, #256]
   2c830:	mov	w1, #0x29                  	// #41
   2c834:	strb	w1, [x19, x0]
   2c838:	strb	w1, [x19, #264]
   2c83c:	ldr	w0, [x22]
   2c840:	cmp	w0, #0x3e
   2c844:	b.eq	2cb74 <__asan_backtrace_create_state@@Base+0x4228>  // b.none
   2c848:	cmp	w21, #0x8
   2c84c:	b.eq	2cbc0 <__asan_backtrace_create_state@@Base+0x4274>  // b.none
   2c850:	ldr	x2, [x22, #16]
   2c854:	mov	w1, w20
   2c858:	mov	x0, x19
   2c85c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c860:	ldp	x21, x22, [sp, #32]
   2c864:	ldp	x23, x24, [sp, #48]
   2c868:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c86c:	ldr	x1, [x1, #8]
   2c870:	ldr	w21, [x1, #28]
   2c874:	cmp	w21, #0x6
   2c878:	b.ls	2c8e4 <__asan_backtrace_create_state@@Base+0x3f98>  // b.plast
   2c87c:	cmp	w21, #0x7
   2c880:	b.ne	2c7e8 <__asan_backtrace_create_state@@Base+0x3e9c>  // b.any
   2c884:	ldr	x1, [x22, #16]
   2c888:	ldr	w2, [x1]
   2c88c:	cbnz	w2, 2c7e8 <__asan_backtrace_create_state@@Base+0x3e9c>
   2c890:	ldr	w2, [x1, #16]
   2c894:	cmp	w0, #0x3d
   2c898:	ccmp	w2, #0x1, #0x0, eq  // eq = none
   2c89c:	b.ne	2c7e8 <__asan_backtrace_create_state@@Base+0x3e9c>  // b.any
   2c8a0:	ldr	x0, [x1, #8]
   2c8a4:	ldrb	w0, [x0]
   2c8a8:	cmp	w0, #0x30
   2c8ac:	b.eq	2cacc <__asan_backtrace_create_state@@Base+0x4180>  // b.none
   2c8b0:	cmp	w0, #0x31
   2c8b4:	b.ne	2c7e8 <__asan_backtrace_create_state@@Base+0x3e9c>  // b.any
   2c8b8:	adrp	x20, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2c8bc:	add	x20, x20, #0x588
   2c8c0:	mov	x0, x20
   2c8c4:	bl	64b0 <__asan_internal_strlen@plt>
   2c8c8:	mov	x2, x0
   2c8cc:	mov	x1, x20
   2c8d0:	mov	x0, x19
   2c8d4:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2c8d8:	ldp	x21, x22, [sp, #32]
   2c8dc:	ldp	x23, x24, [sp, #48]
   2c8e0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c8e4:	cbz	w21, 2c7e8 <__asan_backtrace_create_state@@Base+0x3e9c>
   2c8e8:	ldr	x1, [x22, #16]
   2c8ec:	ldr	w1, [x1]
   2c8f0:	cbnz	w1, 2c7e8 <__asan_backtrace_create_state@@Base+0x3e9c>
   2c8f4:	cmp	w0, #0x3e
   2c8f8:	b.eq	2c94c <__asan_backtrace_create_state@@Base+0x4000>  // b.none
   2c8fc:	ldr	x2, [x22, #16]
   2c900:	mov	w1, w20
   2c904:	mov	x0, x19
   2c908:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2c90c:	cmp	w21, #0x4
   2c910:	b.eq	2ca74 <__asan_backtrace_create_state@@Base+0x4128>  // b.none
   2c914:	b.ls	2c9a0 <__asan_backtrace_create_state@@Base+0x4054>  // b.plast
   2c918:	cmp	w21, #0x5
   2c91c:	b.eq	2caa0 <__asan_backtrace_create_state@@Base+0x4154>  // b.none
   2c920:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2c924:	add	x20, x20, #0xa90
   2c928:	mov	x0, x20
   2c92c:	bl	64b0 <__asan_internal_strlen@plt>
   2c930:	mov	x2, x0
   2c934:	mov	x1, x20
   2c938:	mov	x0, x19
   2c93c:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2c940:	ldp	x21, x22, [sp, #32]
   2c944:	ldp	x23, x24, [sp, #48]
   2c948:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c94c:	ldr	x0, [x19, #256]
   2c950:	cmp	x0, #0xff
   2c954:	b.eq	2c974 <__asan_backtrace_create_state@@Base+0x4028>  // b.none
   2c958:	ldr	x1, [x19, #256]
   2c95c:	add	x0, x1, #0x1
   2c960:	str	x0, [x19, #256]
   2c964:	mov	w0, #0x2d                  	// #45
   2c968:	strb	w0, [x19, x1]
   2c96c:	strb	w0, [x19, #264]
   2c970:	b	2c8fc <__asan_backtrace_create_state@@Base+0x3fb0>
   2c974:	strb	wzr, [x19, #255]
   2c978:	ldr	x3, [x19, #272]
   2c97c:	ldr	x2, [x19, #280]
   2c980:	mov	x1, #0xff                  	// #255
   2c984:	mov	x0, x19
   2c988:	blr	x3
   2c98c:	str	xzr, [x19, #256]
   2c990:	ldr	x0, [x19, #320]
   2c994:	add	x0, x0, #0x1
   2c998:	str	x0, [x19, #320]
   2c99c:	b	2c958 <__asan_backtrace_create_state@@Base+0x400c>
   2c9a0:	cmp	w21, #0x2
   2c9a4:	b.eq	2c9ec <__asan_backtrace_create_state@@Base+0x40a0>  // b.none
   2c9a8:	cmp	w21, #0x3
   2c9ac:	b.ne	2c9e0 <__asan_backtrace_create_state@@Base+0x4094>  // b.any
   2c9b0:	ldr	x0, [x19, #256]
   2c9b4:	cmp	x0, #0xff
   2c9b8:	b.eq	2ca48 <__asan_backtrace_create_state@@Base+0x40fc>  // b.none
   2c9bc:	ldr	x1, [x19, #256]
   2c9c0:	add	x0, x1, #0x1
   2c9c4:	str	x0, [x19, #256]
   2c9c8:	mov	w0, #0x6c                  	// #108
   2c9cc:	strb	w0, [x19, x1]
   2c9d0:	strb	w0, [x19, #264]
   2c9d4:	ldp	x21, x22, [sp, #32]
   2c9d8:	ldp	x23, x24, [sp, #48]
   2c9dc:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c9e0:	ldp	x21, x22, [sp, #32]
   2c9e4:	ldp	x23, x24, [sp, #48]
   2c9e8:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2c9ec:	ldr	x0, [x19, #256]
   2c9f0:	cmp	x0, #0xff
   2c9f4:	b.eq	2ca1c <__asan_backtrace_create_state@@Base+0x40d0>  // b.none
   2c9f8:	ldr	x1, [x19, #256]
   2c9fc:	add	x0, x1, #0x1
   2ca00:	str	x0, [x19, #256]
   2ca04:	mov	w0, #0x75                  	// #117
   2ca08:	strb	w0, [x19, x1]
   2ca0c:	strb	w0, [x19, #264]
   2ca10:	ldp	x21, x22, [sp, #32]
   2ca14:	ldp	x23, x24, [sp, #48]
   2ca18:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2ca1c:	strb	wzr, [x19, #255]
   2ca20:	ldr	x3, [x19, #272]
   2ca24:	ldr	x2, [x19, #280]
   2ca28:	mov	x1, #0xff                  	// #255
   2ca2c:	mov	x0, x19
   2ca30:	blr	x3
   2ca34:	str	xzr, [x19, #256]
   2ca38:	ldr	x0, [x19, #320]
   2ca3c:	add	x0, x0, #0x1
   2ca40:	str	x0, [x19, #320]
   2ca44:	b	2c9f8 <__asan_backtrace_create_state@@Base+0x40ac>
   2ca48:	strb	wzr, [x19, #255]
   2ca4c:	ldr	x3, [x19, #272]
   2ca50:	ldr	x2, [x19, #280]
   2ca54:	mov	x1, #0xff                  	// #255
   2ca58:	mov	x0, x19
   2ca5c:	blr	x3
   2ca60:	str	xzr, [x19, #256]
   2ca64:	ldr	x0, [x19, #320]
   2ca68:	add	x0, x0, #0x1
   2ca6c:	str	x0, [x19, #320]
   2ca70:	b	2c9bc <__asan_backtrace_create_state@@Base+0x4070>
   2ca74:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ca78:	add	x20, x20, #0xa80
   2ca7c:	mov	x0, x20
   2ca80:	bl	64b0 <__asan_internal_strlen@plt>
   2ca84:	mov	x2, x0
   2ca88:	mov	x1, x20
   2ca8c:	mov	x0, x19
   2ca90:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2ca94:	ldp	x21, x22, [sp, #32]
   2ca98:	ldp	x23, x24, [sp, #48]
   2ca9c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2caa0:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2caa4:	add	x20, x20, #0xa88
   2caa8:	mov	x0, x20
   2caac:	bl	64b0 <__asan_internal_strlen@plt>
   2cab0:	mov	x2, x0
   2cab4:	mov	x1, x20
   2cab8:	mov	x0, x19
   2cabc:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2cac0:	ldp	x21, x22, [sp, #32]
   2cac4:	ldp	x23, x24, [sp, #48]
   2cac8:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2cacc:	adrp	x20, 37000 <__asan_backtrace_vector_release@@Base+0x150>
   2cad0:	add	x20, x20, #0x578
   2cad4:	mov	x0, x20
   2cad8:	bl	64b0 <__asan_internal_strlen@plt>
   2cadc:	mov	x2, x0
   2cae0:	mov	x1, x20
   2cae4:	mov	x0, x19
   2cae8:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2caec:	ldp	x21, x22, [sp, #32]
   2caf0:	ldp	x23, x24, [sp, #48]
   2caf4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2caf8:	strb	wzr, [x19, #255]
   2cafc:	ldr	x3, [x19, #272]
   2cb00:	ldr	x2, [x19, #280]
   2cb04:	mov	x1, #0xff                  	// #255
   2cb08:	mov	x0, x19
   2cb0c:	blr	x3
   2cb10:	str	xzr, [x19, #256]
   2cb14:	ldr	x0, [x19, #320]
   2cb18:	add	x0, x0, #0x1
   2cb1c:	str	x0, [x19, #320]
   2cb20:	b	2c7f4 <__asan_backtrace_create_state@@Base+0x3ea8>
   2cb24:	strb	wzr, [x19, #255]
   2cb28:	ldr	x3, [x19, #272]
   2cb2c:	ldr	x2, [x19, #280]
   2cb30:	mov	x1, #0xff                  	// #255
   2cb34:	mov	x0, x19
   2cb38:	blr	x3
   2cb3c:	ldr	x0, [x19, #320]
   2cb40:	add	x0, x0, #0x1
   2cb44:	str	x0, [x19, #320]
   2cb48:	mov	x0, #0x1                   	// #1
   2cb4c:	str	x0, [x19, #256]
   2cb50:	mov	w0, #0x29                  	// #41
   2cb54:	strb	w0, [x19]
   2cb58:	strb	w0, [x19, #264]
   2cb5c:	ldr	w0, [x22]
   2cb60:	cmp	w0, #0x3e
   2cb64:	b.eq	2cba4 <__asan_backtrace_create_state@@Base+0x4258>  // b.none
   2cb68:	cmp	w21, #0x8
   2cb6c:	b.ne	2c850 <__asan_backtrace_create_state@@Base+0x3f04>  // b.any
   2cb70:	b	2cbcc <__asan_backtrace_create_state@@Base+0x4280>
   2cb74:	cmp	x2, #0xff
   2cb78:	b.ne	2cba4 <__asan_backtrace_create_state@@Base+0x4258>  // b.any
   2cb7c:	strb	wzr, [x19, #255]
   2cb80:	ldr	x3, [x19, #272]
   2cb84:	ldr	x2, [x19, #280]
   2cb88:	mov	x1, #0xff                  	// #255
   2cb8c:	mov	x0, x19
   2cb90:	blr	x3
   2cb94:	str	xzr, [x19, #256]
   2cb98:	ldr	x0, [x19, #320]
   2cb9c:	add	x0, x0, #0x1
   2cba0:	str	x0, [x19, #320]
   2cba4:	ldr	x1, [x19, #256]
   2cba8:	add	x0, x1, #0x1
   2cbac:	str	x0, [x19, #256]
   2cbb0:	mov	w0, #0x2d                  	// #45
   2cbb4:	strb	w0, [x19, x1]
   2cbb8:	strb	w0, [x19, #264]
   2cbbc:	b	2c848 <__asan_backtrace_create_state@@Base+0x3efc>
   2cbc0:	ldr	x0, [x19, #256]
   2cbc4:	cmp	x0, #0xff
   2cbc8:	b.eq	2cc24 <__asan_backtrace_create_state@@Base+0x42d8>  // b.none
   2cbcc:	ldr	x1, [x19, #256]
   2cbd0:	add	x0, x1, #0x1
   2cbd4:	str	x0, [x19, #256]
   2cbd8:	mov	w0, #0x5b                  	// #91
   2cbdc:	strb	w0, [x19, x1]
   2cbe0:	strb	w0, [x19, #264]
   2cbe4:	ldr	x2, [x22, #16]
   2cbe8:	mov	w1, w20
   2cbec:	mov	x0, x19
   2cbf0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2cbf4:	ldr	x0, [x19, #256]
   2cbf8:	cmp	x0, #0xff
   2cbfc:	b.eq	2cc50 <__asan_backtrace_create_state@@Base+0x4304>  // b.none
   2cc00:	ldr	x1, [x19, #256]
   2cc04:	add	x0, x1, #0x1
   2cc08:	str	x0, [x19, #256]
   2cc0c:	mov	w0, #0x5d                  	// #93
   2cc10:	strb	w0, [x19, x1]
   2cc14:	strb	w0, [x19, #264]
   2cc18:	ldp	x21, x22, [sp, #32]
   2cc1c:	ldp	x23, x24, [sp, #48]
   2cc20:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2cc24:	strb	wzr, [x19, #255]
   2cc28:	ldr	x3, [x19, #272]
   2cc2c:	ldr	x2, [x19, #280]
   2cc30:	mov	x1, #0xff                  	// #255
   2cc34:	mov	x0, x19
   2cc38:	blr	x3
   2cc3c:	str	xzr, [x19, #256]
   2cc40:	ldr	x0, [x19, #320]
   2cc44:	add	x0, x0, #0x1
   2cc48:	str	x0, [x19, #320]
   2cc4c:	b	2cbcc <__asan_backtrace_create_state@@Base+0x4280>
   2cc50:	strb	wzr, [x19, #255]
   2cc54:	ldr	x3, [x19, #272]
   2cc58:	ldr	x2, [x19, #280]
   2cc5c:	mov	x1, #0xff                  	// #255
   2cc60:	mov	x0, x19
   2cc64:	blr	x3
   2cc68:	str	xzr, [x19, #256]
   2cc6c:	ldr	x0, [x19, #320]
   2cc70:	add	x0, x0, #0x1
   2cc74:	str	x0, [x19, #320]
   2cc78:	b	2cc00 <__asan_backtrace_create_state@@Base+0x42b4>
   2cc7c:	add	x20, sp, #0x80
   2cc80:	ldr	w2, [x22, #8]
   2cc84:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   2cc88:	add	x1, x1, #0xca8
   2cc8c:	mov	x0, x20
   2cc90:	bl	65f0 <sprintf@plt>
   2cc94:	mov	x0, x20
   2cc98:	bl	64b0 <__asan_internal_strlen@plt>
   2cc9c:	cbz	x0, 2da04 <__asan_backtrace_create_state@@Base+0x50b8>
   2cca0:	add	x20, sp, #0x80
   2cca4:	add	x22, x0, x20
   2cca8:	mov	x23, #0xff                  	// #255
   2ccac:	b	2ccd0 <__asan_backtrace_create_state@@Base+0x4384>
   2ccb0:	ldr	x0, [x19, #256]
   2ccb4:	add	x1, x0, #0x1
   2ccb8:	str	x1, [x19, #256]
   2ccbc:	strb	w21, [x19, x0]
   2ccc0:	strb	w21, [x19, #264]
   2ccc4:	add	x20, x20, #0x1
   2ccc8:	cmp	x20, x22
   2cccc:	b.eq	2cd0c <__asan_backtrace_create_state@@Base+0x43c0>  // b.none
   2ccd0:	ldrb	w21, [x20]
   2ccd4:	ldr	x0, [x19, #256]
   2ccd8:	cmp	x0, #0xff
   2ccdc:	b.ne	2ccb0 <__asan_backtrace_create_state@@Base+0x4364>  // b.any
   2cce0:	strb	wzr, [x19, #255]
   2cce4:	ldr	x3, [x19, #272]
   2cce8:	ldr	x2, [x19, #280]
   2ccec:	mov	x1, x23
   2ccf0:	mov	x0, x19
   2ccf4:	blr	x3
   2ccf8:	str	xzr, [x19, #256]
   2ccfc:	ldr	x0, [x19, #320]
   2cd00:	add	x0, x0, #0x1
   2cd04:	str	x0, [x19, #320]
   2cd08:	b	2ccb0 <__asan_backtrace_create_state@@Base+0x4364>
   2cd0c:	ldp	x21, x22, [sp, #32]
   2cd10:	ldp	x23, x24, [sp, #48]
   2cd14:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2cd18:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2cd1c:	add	x0, x0, #0xa98
   2cd20:	bl	64b0 <__asan_internal_strlen@plt>
   2cd24:	cbz	x0, 2cda0 <__asan_backtrace_create_state@@Base+0x4454>
   2cd28:	stp	x25, x26, [sp, #64]
   2cd2c:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2cd30:	add	x21, x21, #0xa98
   2cd34:	add	x24, x0, x21
   2cd38:	mov	x25, #0xff                  	// #255
   2cd3c:	b	2cd60 <__asan_backtrace_create_state@@Base+0x4414>
   2cd40:	ldr	x0, [x19, #256]
   2cd44:	add	x1, x0, #0x1
   2cd48:	str	x1, [x19, #256]
   2cd4c:	strb	w23, [x19, x0]
   2cd50:	strb	w23, [x19, #264]
   2cd54:	add	x21, x21, #0x1
   2cd58:	cmp	x21, x24
   2cd5c:	b.eq	2cd9c <__asan_backtrace_create_state@@Base+0x4450>  // b.none
   2cd60:	ldrb	w23, [x21]
   2cd64:	ldr	x0, [x19, #256]
   2cd68:	cmp	x0, #0xff
   2cd6c:	b.ne	2cd40 <__asan_backtrace_create_state@@Base+0x43f4>  // b.any
   2cd70:	strb	wzr, [x19, #255]
   2cd74:	ldr	x3, [x19, #272]
   2cd78:	ldr	x2, [x19, #280]
   2cd7c:	mov	x1, x25
   2cd80:	mov	x0, x19
   2cd84:	blr	x3
   2cd88:	str	xzr, [x19, #256]
   2cd8c:	ldr	x0, [x19, #320]
   2cd90:	add	x0, x0, #0x1
   2cd94:	str	x0, [x19, #320]
   2cd98:	b	2cd40 <__asan_backtrace_create_state@@Base+0x43f4>
   2cd9c:	ldp	x25, x26, [sp, #64]
   2cda0:	ldr	x2, [x22, #8]
   2cda4:	mov	w1, w20
   2cda8:	mov	x0, x19
   2cdac:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2cdb0:	ldp	x21, x22, [sp, #32]
   2cdb4:	ldp	x23, x24, [sp, #48]
   2cdb8:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2cdbc:	ldr	x2, [x22, #8]
   2cdc0:	mov	w1, w20
   2cdc4:	mov	x0, x19
   2cdc8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2cdcc:	ldr	x2, [x22, #16]
   2cdd0:	mov	w1, w20
   2cdd4:	mov	x0, x19
   2cdd8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2cddc:	ldp	x21, x22, [sp, #32]
   2cde0:	ldp	x23, x24, [sp, #48]
   2cde4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2cde8:	ldrb	w20, [x22, #8]
   2cdec:	ldr	x0, [x19, #256]
   2cdf0:	cmp	x0, #0xff
   2cdf4:	b.eq	2ce18 <__asan_backtrace_create_state@@Base+0x44cc>  // b.none
   2cdf8:	ldr	x0, [x19, #256]
   2cdfc:	add	x1, x0, #0x1
   2ce00:	str	x1, [x19, #256]
   2ce04:	strb	w20, [x19, x0]
   2ce08:	strb	w20, [x19, #264]
   2ce0c:	ldp	x21, x22, [sp, #32]
   2ce10:	ldp	x23, x24, [sp, #48]
   2ce14:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2ce18:	strb	wzr, [x19, #255]
   2ce1c:	ldr	x3, [x19, #272]
   2ce20:	ldr	x2, [x19, #280]
   2ce24:	mov	x1, #0xff                  	// #255
   2ce28:	mov	x0, x19
   2ce2c:	blr	x3
   2ce30:	str	xzr, [x19, #256]
   2ce34:	ldr	x0, [x19, #320]
   2ce38:	add	x0, x0, #0x1
   2ce3c:	str	x0, [x19, #320]
   2ce40:	b	2cdf8 <__asan_backtrace_create_state@@Base+0x44ac>
   2ce44:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ce48:	add	x0, x0, #0xaa8
   2ce4c:	bl	64b0 <__asan_internal_strlen@plt>
   2ce50:	cbz	x0, 2cecc <__asan_backtrace_create_state@@Base+0x4580>
   2ce54:	stp	x25, x26, [sp, #64]
   2ce58:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ce5c:	add	x21, x21, #0xaa8
   2ce60:	add	x24, x0, x21
   2ce64:	mov	x25, #0xff                  	// #255
   2ce68:	b	2ce8c <__asan_backtrace_create_state@@Base+0x4540>
   2ce6c:	ldr	x0, [x19, #256]
   2ce70:	add	x1, x0, #0x1
   2ce74:	str	x1, [x19, #256]
   2ce78:	strb	w23, [x19, x0]
   2ce7c:	strb	w23, [x19, #264]
   2ce80:	add	x21, x21, #0x1
   2ce84:	cmp	x21, x24
   2ce88:	b.eq	2cec8 <__asan_backtrace_create_state@@Base+0x457c>  // b.none
   2ce8c:	ldrb	w23, [x21]
   2ce90:	ldr	x0, [x19, #256]
   2ce94:	cmp	x0, #0xff
   2ce98:	b.ne	2ce6c <__asan_backtrace_create_state@@Base+0x4520>  // b.any
   2ce9c:	strb	wzr, [x19, #255]
   2cea0:	ldr	x3, [x19, #272]
   2cea4:	ldr	x2, [x19, #280]
   2cea8:	mov	x1, x25
   2ceac:	mov	x0, x19
   2ceb0:	blr	x3
   2ceb4:	str	xzr, [x19, #256]
   2ceb8:	ldr	x0, [x19, #320]
   2cebc:	add	x0, x0, #0x1
   2cec0:	str	x0, [x19, #320]
   2cec4:	b	2ce6c <__asan_backtrace_create_state@@Base+0x4520>
   2cec8:	ldp	x25, x26, [sp, #64]
   2cecc:	ldr	x2, [x22, #8]
   2ced0:	mov	w1, w20
   2ced4:	mov	x0, x19
   2ced8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2cedc:	ldr	x0, [x19, #256]
   2cee0:	cmp	x0, #0xff
   2cee4:	b.eq	2cf0c <__asan_backtrace_create_state@@Base+0x45c0>  // b.none
   2cee8:	ldr	x1, [x19, #256]
   2ceec:	add	x0, x1, #0x1
   2cef0:	str	x0, [x19, #256]
   2cef4:	mov	w0, #0x29                  	// #41
   2cef8:	strb	w0, [x19, x1]
   2cefc:	strb	w0, [x19, #264]
   2cf00:	ldp	x21, x22, [sp, #32]
   2cf04:	ldp	x23, x24, [sp, #48]
   2cf08:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2cf0c:	strb	wzr, [x19, #255]
   2cf10:	ldr	x3, [x19, #272]
   2cf14:	ldr	x2, [x19, #280]
   2cf18:	mov	x1, #0xff                  	// #255
   2cf1c:	mov	x0, x19
   2cf20:	blr	x3
   2cf24:	str	xzr, [x19, #256]
   2cf28:	ldr	x0, [x19, #320]
   2cf2c:	add	x0, x0, #0x1
   2cf30:	str	x0, [x19, #320]
   2cf34:	b	2cee8 <__asan_backtrace_create_state@@Base+0x459c>
   2cf38:	ldr	x1, [x22, #8]
   2cf3c:	mov	x0, x19
   2cf40:	bl	292ec <__asan_backtrace_create_state@@Base+0x9a0>
   2cf44:	cbz	x0, 2cf7c <__asan_backtrace_create_state@@Base+0x4630>
   2cf48:	stp	x25, x26, [sp, #64]
   2cf4c:	stp	x27, x28, [sp, #80]
   2cf50:	bl	293e4 <__asan_backtrace_create_state@@Base+0xa98>
   2cf54:	mov	w25, w0
   2cf58:	ldr	x27, [x22, #8]
   2cf5c:	cmp	w0, #0x0
   2cf60:	b.le	2da10 <__asan_backtrace_create_state@@Base+0x50c4>
   2cf64:	sub	w28, w0, #0x1
   2cf68:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2cf6c:	add	x0, x0, #0xa10
   2cf70:	str	x0, [sp, #96]
   2cf74:	mov	x26, #0xff                  	// #255
   2cf78:	b	2d020 <__asan_backtrace_create_state@@Base+0x46d4>
   2cf7c:	ldr	x2, [x22, #8]
   2cf80:	mov	w1, w20
   2cf84:	mov	x0, x19
   2cf88:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2cf8c:	adrp	x20, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   2cf90:	add	x20, x20, #0x4c0
   2cf94:	mov	x0, x20
   2cf98:	bl	64b0 <__asan_internal_strlen@plt>
   2cf9c:	mov	x2, x0
   2cfa0:	mov	x1, x20
   2cfa4:	mov	x0, x19
   2cfa8:	bl	291dc <__asan_backtrace_create_state@@Base+0x890>
   2cfac:	ldp	x21, x22, [sp, #32]
   2cfb0:	ldp	x23, x24, [sp, #48]
   2cfb4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2cfb8:	ldr	x0, [x19, #256]
   2cfbc:	add	x1, x0, #0x1
   2cfc0:	str	x1, [x19, #256]
   2cfc4:	strb	w23, [x19, x0]
   2cfc8:	strb	w23, [x19, #264]
   2cfcc:	add	x22, x22, #0x1
   2cfd0:	cmp	x22, x24
   2cfd4:	b.eq	2d014 <__asan_backtrace_create_state@@Base+0x46c8>  // b.none
   2cfd8:	ldrb	w23, [x22]
   2cfdc:	ldr	x0, [x19, #256]
   2cfe0:	cmp	x0, #0xff
   2cfe4:	b.ne	2cfb8 <__asan_backtrace_create_state@@Base+0x466c>  // b.any
   2cfe8:	strb	wzr, [x19, #255]
   2cfec:	ldr	x3, [x19, #272]
   2cff0:	ldr	x2, [x19, #280]
   2cff4:	mov	x1, x26
   2cff8:	mov	x0, x19
   2cffc:	blr	x3
   2d000:	str	xzr, [x19, #256]
   2d004:	ldr	x0, [x19, #320]
   2d008:	add	x0, x0, #0x1
   2d00c:	str	x0, [x19, #320]
   2d010:	b	2cfb8 <__asan_backtrace_create_state@@Base+0x466c>
   2d014:	add	w21, w21, #0x1
   2d018:	cmp	w25, w21
   2d01c:	b.eq	2d058 <__asan_backtrace_create_state@@Base+0x470c>  // b.none
   2d020:	str	w21, [x19, #316]
   2d024:	mov	x2, x27
   2d028:	mov	w1, w20
   2d02c:	mov	x0, x19
   2d030:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2d034:	cmp	w28, w21
   2d038:	b.le	2d014 <__asan_backtrace_create_state@@Base+0x46c8>
   2d03c:	ldr	x0, [sp, #96]
   2d040:	bl	64b0 <__asan_internal_strlen@plt>
   2d044:	cbz	x0, 2d014 <__asan_backtrace_create_state@@Base+0x46c8>
   2d048:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d04c:	add	x22, x1, #0xa10
   2d050:	add	x24, x0, x22
   2d054:	b	2cfd8 <__asan_backtrace_create_state@@Base+0x468c>
   2d058:	ldp	x21, x22, [sp, #32]
   2d05c:	ldp	x23, x24, [sp, #48]
   2d060:	ldp	x25, x26, [sp, #64]
   2d064:	ldp	x27, x28, [sp, #80]
   2d068:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d06c:	ldr	x23, [x22, #8]
   2d070:	cbnz	x23, 2d100 <__asan_backtrace_create_state@@Base+0x47b4>
   2d074:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d078:	add	x0, x0, #0xab8
   2d07c:	bl	64b0 <__asan_internal_strlen@plt>
   2d080:	cbz	x0, 2da24 <__asan_backtrace_create_state@@Base+0x50d8>
   2d084:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d088:	add	x20, x20, #0xab8
   2d08c:	add	x22, x0, x20
   2d090:	mov	x23, #0xff                  	// #255
   2d094:	b	2d0b8 <__asan_backtrace_create_state@@Base+0x476c>
   2d098:	ldr	x0, [x19, #256]
   2d09c:	add	x1, x0, #0x1
   2d0a0:	str	x1, [x19, #256]
   2d0a4:	strb	w21, [x19, x0]
   2d0a8:	strb	w21, [x19, #264]
   2d0ac:	add	x20, x20, #0x1
   2d0b0:	cmp	x22, x20
   2d0b4:	b.eq	2d0f4 <__asan_backtrace_create_state@@Base+0x47a8>  // b.none
   2d0b8:	ldrb	w21, [x20]
   2d0bc:	ldr	x0, [x19, #256]
   2d0c0:	cmp	x0, #0xff
   2d0c4:	b.ne	2d098 <__asan_backtrace_create_state@@Base+0x474c>  // b.any
   2d0c8:	strb	wzr, [x19, #255]
   2d0cc:	ldr	x3, [x19, #272]
   2d0d0:	ldr	x2, [x19, #280]
   2d0d4:	mov	x1, x23
   2d0d8:	mov	x0, x19
   2d0dc:	blr	x3
   2d0e0:	str	xzr, [x19, #256]
   2d0e4:	ldr	x0, [x19, #320]
   2d0e8:	add	x0, x0, #0x1
   2d0ec:	str	x0, [x19, #320]
   2d0f0:	b	2d098 <__asan_backtrace_create_state@@Base+0x474c>
   2d0f4:	ldp	x21, x22, [sp, #32]
   2d0f8:	ldp	x23, x24, [sp, #48]
   2d0fc:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d100:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d104:	add	x0, x0, #0xac0
   2d108:	bl	64b0 <__asan_internal_strlen@plt>
   2d10c:	cbz	x0, 2d180 <__asan_backtrace_create_state@@Base+0x4834>
   2d110:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d114:	add	x20, x20, #0xac0
   2d118:	add	x22, x0, x20
   2d11c:	mov	x24, #0xff                  	// #255
   2d120:	b	2d144 <__asan_backtrace_create_state@@Base+0x47f8>
   2d124:	ldr	x0, [x19, #256]
   2d128:	add	x1, x0, #0x1
   2d12c:	str	x1, [x19, #256]
   2d130:	strb	w21, [x19, x0]
   2d134:	strb	w21, [x19, #264]
   2d138:	add	x20, x20, #0x1
   2d13c:	cmp	x22, x20
   2d140:	b.eq	2d180 <__asan_backtrace_create_state@@Base+0x4834>  // b.none
   2d144:	ldrb	w21, [x20]
   2d148:	ldr	x0, [x19, #256]
   2d14c:	cmp	x0, #0xff
   2d150:	b.ne	2d124 <__asan_backtrace_create_state@@Base+0x47d8>  // b.any
   2d154:	strb	wzr, [x19, #255]
   2d158:	ldr	x3, [x19, #272]
   2d15c:	ldr	x2, [x19, #280]
   2d160:	mov	x1, x24
   2d164:	mov	x0, x19
   2d168:	blr	x3
   2d16c:	str	xzr, [x19, #256]
   2d170:	ldr	x0, [x19, #320]
   2d174:	add	x0, x0, #0x1
   2d178:	str	x0, [x19, #320]
   2d17c:	b	2d124 <__asan_backtrace_create_state@@Base+0x47d8>
   2d180:	add	x20, sp, #0x80
   2d184:	mov	w2, w23
   2d188:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   2d18c:	add	x1, x1, #0xca8
   2d190:	mov	x0, x20
   2d194:	bl	65f0 <sprintf@plt>
   2d198:	mov	x0, x20
   2d19c:	bl	64b0 <__asan_internal_strlen@plt>
   2d1a0:	cbz	x0, 2d210 <__asan_backtrace_create_state@@Base+0x48c4>
   2d1a4:	add	x20, sp, #0x80
   2d1a8:	add	x22, x0, x20
   2d1ac:	mov	x23, #0xff                  	// #255
   2d1b0:	b	2d1d4 <__asan_backtrace_create_state@@Base+0x4888>
   2d1b4:	ldr	x0, [x19, #256]
   2d1b8:	add	x1, x0, #0x1
   2d1bc:	str	x1, [x19, #256]
   2d1c0:	strb	w21, [x19, x0]
   2d1c4:	strb	w21, [x19, #264]
   2d1c8:	add	x20, x20, #0x1
   2d1cc:	cmp	x22, x20
   2d1d0:	b.eq	2d210 <__asan_backtrace_create_state@@Base+0x48c4>  // b.none
   2d1d4:	ldrb	w21, [x20]
   2d1d8:	ldr	x0, [x19, #256]
   2d1dc:	cmp	x0, #0xff
   2d1e0:	b.ne	2d1b4 <__asan_backtrace_create_state@@Base+0x4868>  // b.any
   2d1e4:	strb	wzr, [x19, #255]
   2d1e8:	ldr	x3, [x19, #272]
   2d1ec:	ldr	x2, [x19, #280]
   2d1f0:	mov	x1, x23
   2d1f4:	mov	x0, x19
   2d1f8:	blr	x3
   2d1fc:	str	xzr, [x19, #256]
   2d200:	ldr	x0, [x19, #320]
   2d204:	add	x0, x0, #0x1
   2d208:	str	x0, [x19, #320]
   2d20c:	b	2d1b4 <__asan_backtrace_create_state@@Base+0x4868>
   2d210:	ldr	x0, [x19, #256]
   2d214:	cmp	x0, #0xff
   2d218:	b.eq	2d240 <__asan_backtrace_create_state@@Base+0x48f4>  // b.none
   2d21c:	ldr	x1, [x19, #256]
   2d220:	add	x0, x1, #0x1
   2d224:	str	x0, [x19, #256]
   2d228:	mov	w0, #0x7d                  	// #125
   2d22c:	strb	w0, [x19, x1]
   2d230:	strb	w0, [x19, #264]
   2d234:	ldp	x21, x22, [sp, #32]
   2d238:	ldp	x23, x24, [sp, #48]
   2d23c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d240:	strb	wzr, [x19, #255]
   2d244:	ldr	x3, [x19, #272]
   2d248:	ldr	x2, [x19, #280]
   2d24c:	mov	x1, #0xff                  	// #255
   2d250:	mov	x0, x19
   2d254:	blr	x3
   2d258:	str	xzr, [x19, #256]
   2d25c:	ldr	x0, [x19, #320]
   2d260:	add	x0, x0, #0x1
   2d264:	str	x0, [x19, #320]
   2d268:	b	2d21c <__asan_backtrace_create_state@@Base+0x48d0>
   2d26c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d270:	add	x0, x0, #0xac8
   2d274:	bl	64b0 <__asan_internal_strlen@plt>
   2d278:	cbz	x0, 2d2f4 <__asan_backtrace_create_state@@Base+0x49a8>
   2d27c:	stp	x25, x26, [sp, #64]
   2d280:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d284:	add	x21, x21, #0xac8
   2d288:	add	x24, x0, x21
   2d28c:	mov	x25, #0xff                  	// #255
   2d290:	b	2d2b4 <__asan_backtrace_create_state@@Base+0x4968>
   2d294:	ldr	x0, [x19, #256]
   2d298:	add	x1, x0, #0x1
   2d29c:	str	x1, [x19, #256]
   2d2a0:	strb	w23, [x19, x0]
   2d2a4:	strb	w23, [x19, #264]
   2d2a8:	add	x21, x21, #0x1
   2d2ac:	cmp	x21, x24
   2d2b0:	b.eq	2d2f0 <__asan_backtrace_create_state@@Base+0x49a4>  // b.none
   2d2b4:	ldrb	w23, [x21]
   2d2b8:	ldr	x0, [x19, #256]
   2d2bc:	cmp	x0, #0xff
   2d2c0:	b.ne	2d294 <__asan_backtrace_create_state@@Base+0x4948>  // b.any
   2d2c4:	strb	wzr, [x19, #255]
   2d2c8:	ldr	x3, [x19, #272]
   2d2cc:	ldr	x2, [x19, #280]
   2d2d0:	mov	x1, x25
   2d2d4:	mov	x0, x19
   2d2d8:	blr	x3
   2d2dc:	str	xzr, [x19, #256]
   2d2e0:	ldr	x0, [x19, #320]
   2d2e4:	add	x0, x0, #0x1
   2d2e8:	str	x0, [x19, #320]
   2d2ec:	b	2d294 <__asan_backtrace_create_state@@Base+0x4948>
   2d2f0:	ldp	x25, x26, [sp, #64]
   2d2f4:	ldr	x2, [x22, #8]
   2d2f8:	mov	w1, w20
   2d2fc:	mov	x0, x19
   2d300:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2d304:	ldp	x21, x22, [sp, #32]
   2d308:	ldp	x23, x24, [sp, #48]
   2d30c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d310:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d314:	add	x0, x0, #0xae8
   2d318:	bl	64b0 <__asan_internal_strlen@plt>
   2d31c:	cbz	x0, 2d398 <__asan_backtrace_create_state@@Base+0x4a4c>
   2d320:	stp	x25, x26, [sp, #64]
   2d324:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d328:	add	x21, x21, #0xae8
   2d32c:	add	x24, x0, x21
   2d330:	mov	x25, #0xff                  	// #255
   2d334:	b	2d358 <__asan_backtrace_create_state@@Base+0x4a0c>
   2d338:	ldr	x0, [x19, #256]
   2d33c:	add	x1, x0, #0x1
   2d340:	str	x1, [x19, #256]
   2d344:	strb	w23, [x19, x0]
   2d348:	strb	w23, [x19, #264]
   2d34c:	add	x21, x21, #0x1
   2d350:	cmp	x21, x24
   2d354:	b.eq	2d394 <__asan_backtrace_create_state@@Base+0x4a48>  // b.none
   2d358:	ldrb	w23, [x21]
   2d35c:	ldr	x0, [x19, #256]
   2d360:	cmp	x0, #0xff
   2d364:	b.ne	2d338 <__asan_backtrace_create_state@@Base+0x49ec>  // b.any
   2d368:	strb	wzr, [x19, #255]
   2d36c:	ldr	x3, [x19, #272]
   2d370:	ldr	x2, [x19, #280]
   2d374:	mov	x1, x25
   2d378:	mov	x0, x19
   2d37c:	blr	x3
   2d380:	str	xzr, [x19, #256]
   2d384:	ldr	x0, [x19, #320]
   2d388:	add	x0, x0, #0x1
   2d38c:	str	x0, [x19, #320]
   2d390:	b	2d338 <__asan_backtrace_create_state@@Base+0x49ec>
   2d394:	ldp	x25, x26, [sp, #64]
   2d398:	ldr	x2, [x22, #8]
   2d39c:	mov	w1, w20
   2d3a0:	mov	x0, x19
   2d3a4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2d3a8:	ldp	x21, x22, [sp, #32]
   2d3ac:	ldp	x23, x24, [sp, #48]
   2d3b0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d3b4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d3b8:	add	x0, x0, #0xb08
   2d3bc:	bl	64b0 <__asan_internal_strlen@plt>
   2d3c0:	cbz	x0, 2d43c <__asan_backtrace_create_state@@Base+0x4af0>
   2d3c4:	stp	x25, x26, [sp, #64]
   2d3c8:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d3cc:	add	x21, x21, #0xb08
   2d3d0:	add	x24, x0, x21
   2d3d4:	mov	x25, #0xff                  	// #255
   2d3d8:	b	2d3fc <__asan_backtrace_create_state@@Base+0x4ab0>
   2d3dc:	ldr	x0, [x19, #256]
   2d3e0:	add	x1, x0, #0x1
   2d3e4:	str	x1, [x19, #256]
   2d3e8:	strb	w23, [x19, x0]
   2d3ec:	strb	w23, [x19, #264]
   2d3f0:	add	x21, x21, #0x1
   2d3f4:	cmp	x21, x24
   2d3f8:	b.eq	2d438 <__asan_backtrace_create_state@@Base+0x4aec>  // b.none
   2d3fc:	ldrb	w23, [x21]
   2d400:	ldr	x0, [x19, #256]
   2d404:	cmp	x0, #0xff
   2d408:	b.ne	2d3dc <__asan_backtrace_create_state@@Base+0x4a90>  // b.any
   2d40c:	strb	wzr, [x19, #255]
   2d410:	ldr	x3, [x19, #272]
   2d414:	ldr	x2, [x19, #280]
   2d418:	mov	x1, x25
   2d41c:	mov	x0, x19
   2d420:	blr	x3
   2d424:	str	xzr, [x19, #256]
   2d428:	ldr	x0, [x19, #320]
   2d42c:	add	x0, x0, #0x1
   2d430:	str	x0, [x19, #320]
   2d434:	b	2d3dc <__asan_backtrace_create_state@@Base+0x4a90>
   2d438:	ldp	x25, x26, [sp, #64]
   2d43c:	ldr	w0, [x19, #312]
   2d440:	add	w0, w0, #0x1
   2d444:	str	w0, [x19, #312]
   2d448:	ldr	x2, [x22, #8]
   2d44c:	mov	w1, w20
   2d450:	mov	x0, x19
   2d454:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2d458:	ldr	w0, [x19, #312]
   2d45c:	sub	w0, w0, #0x1
   2d460:	str	w0, [x19, #312]
   2d464:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d468:	add	x0, x0, #0xb18
   2d46c:	bl	64b0 <__asan_internal_strlen@plt>
   2d470:	cbz	x0, 2d4e4 <__asan_backtrace_create_state@@Base+0x4b98>
   2d474:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d478:	add	x20, x20, #0xb18
   2d47c:	add	x23, x0, x20
   2d480:	mov	x24, #0xff                  	// #255
   2d484:	b	2d4a8 <__asan_backtrace_create_state@@Base+0x4b5c>
   2d488:	ldr	x0, [x19, #256]
   2d48c:	add	x1, x0, #0x1
   2d490:	str	x1, [x19, #256]
   2d494:	strb	w21, [x19, x0]
   2d498:	strb	w21, [x19, #264]
   2d49c:	add	x20, x20, #0x1
   2d4a0:	cmp	x20, x23
   2d4a4:	b.eq	2d4e4 <__asan_backtrace_create_state@@Base+0x4b98>  // b.none
   2d4a8:	ldrb	w21, [x20]
   2d4ac:	ldr	x0, [x19, #256]
   2d4b0:	cmp	x0, #0xff
   2d4b4:	b.ne	2d488 <__asan_backtrace_create_state@@Base+0x4b3c>  // b.any
   2d4b8:	strb	wzr, [x19, #255]
   2d4bc:	ldr	x3, [x19, #272]
   2d4c0:	ldr	x2, [x19, #280]
   2d4c4:	mov	x1, x24
   2d4c8:	mov	x0, x19
   2d4cc:	blr	x3
   2d4d0:	str	xzr, [x19, #256]
   2d4d4:	ldr	x0, [x19, #320]
   2d4d8:	add	x0, x0, #0x1
   2d4dc:	str	x0, [x19, #320]
   2d4e0:	b	2d488 <__asan_backtrace_create_state@@Base+0x4b3c>
   2d4e4:	ldr	w2, [x22, #16]
   2d4e8:	add	x20, sp, #0x80
   2d4ec:	add	w2, w2, #0x1
   2d4f0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   2d4f4:	add	x1, x1, #0xca8
   2d4f8:	mov	x0, x20
   2d4fc:	bl	65f0 <sprintf@plt>
   2d500:	mov	x0, x20
   2d504:	bl	64b0 <__asan_internal_strlen@plt>
   2d508:	cbz	x0, 2d578 <__asan_backtrace_create_state@@Base+0x4c2c>
   2d50c:	add	x20, sp, #0x80
   2d510:	add	x22, x0, x20
   2d514:	mov	x23, #0xff                  	// #255
   2d518:	b	2d53c <__asan_backtrace_create_state@@Base+0x4bf0>
   2d51c:	ldr	x0, [x19, #256]
   2d520:	add	x1, x0, #0x1
   2d524:	str	x1, [x19, #256]
   2d528:	strb	w21, [x19, x0]
   2d52c:	strb	w21, [x19, #264]
   2d530:	add	x20, x20, #0x1
   2d534:	cmp	x20, x22
   2d538:	b.eq	2d578 <__asan_backtrace_create_state@@Base+0x4c2c>  // b.none
   2d53c:	ldrb	w21, [x20]
   2d540:	ldr	x0, [x19, #256]
   2d544:	cmp	x0, #0xff
   2d548:	b.ne	2d51c <__asan_backtrace_create_state@@Base+0x4bd0>  // b.any
   2d54c:	strb	wzr, [x19, #255]
   2d550:	ldr	x3, [x19, #272]
   2d554:	ldr	x2, [x19, #280]
   2d558:	mov	x1, x23
   2d55c:	mov	x0, x19
   2d560:	blr	x3
   2d564:	str	xzr, [x19, #256]
   2d568:	ldr	x0, [x19, #320]
   2d56c:	add	x0, x0, #0x1
   2d570:	str	x0, [x19, #320]
   2d574:	b	2d51c <__asan_backtrace_create_state@@Base+0x4bd0>
   2d578:	ldr	x0, [x19, #256]
   2d57c:	cmp	x0, #0xff
   2d580:	b.eq	2d5a8 <__asan_backtrace_create_state@@Base+0x4c5c>  // b.none
   2d584:	ldr	x1, [x19, #256]
   2d588:	add	x0, x1, #0x1
   2d58c:	str	x0, [x19, #256]
   2d590:	mov	w0, #0x7d                  	// #125
   2d594:	strb	w0, [x19, x1]
   2d598:	strb	w0, [x19, #264]
   2d59c:	ldp	x21, x22, [sp, #32]
   2d5a0:	ldp	x23, x24, [sp, #48]
   2d5a4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d5a8:	strb	wzr, [x19, #255]
   2d5ac:	ldr	x3, [x19, #272]
   2d5b0:	ldr	x2, [x19, #280]
   2d5b4:	mov	x1, #0xff                  	// #255
   2d5b8:	mov	x0, x19
   2d5bc:	blr	x3
   2d5c0:	str	xzr, [x19, #256]
   2d5c4:	ldr	x0, [x19, #320]
   2d5c8:	add	x0, x0, #0x1
   2d5cc:	str	x0, [x19, #320]
   2d5d0:	b	2d584 <__asan_backtrace_create_state@@Base+0x4c38>
   2d5d4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d5d8:	add	x0, x0, #0xb20
   2d5dc:	bl	64b0 <__asan_internal_strlen@plt>
   2d5e0:	cbz	x0, 2d654 <__asan_backtrace_create_state@@Base+0x4d08>
   2d5e4:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d5e8:	add	x20, x20, #0xb20
   2d5ec:	add	x23, x0, x20
   2d5f0:	mov	x24, #0xff                  	// #255
   2d5f4:	b	2d618 <__asan_backtrace_create_state@@Base+0x4ccc>
   2d5f8:	ldr	x0, [x19, #256]
   2d5fc:	add	x1, x0, #0x1
   2d600:	str	x1, [x19, #256]
   2d604:	strb	w21, [x19, x0]
   2d608:	strb	w21, [x19, #264]
   2d60c:	add	x20, x20, #0x1
   2d610:	cmp	x20, x23
   2d614:	b.eq	2d654 <__asan_backtrace_create_state@@Base+0x4d08>  // b.none
   2d618:	ldrb	w21, [x20]
   2d61c:	ldr	x0, [x19, #256]
   2d620:	cmp	x0, #0xff
   2d624:	b.ne	2d5f8 <__asan_backtrace_create_state@@Base+0x4cac>  // b.any
   2d628:	strb	wzr, [x19, #255]
   2d62c:	ldr	x3, [x19, #272]
   2d630:	ldr	x2, [x19, #280]
   2d634:	mov	x1, x24
   2d638:	mov	x0, x19
   2d63c:	blr	x3
   2d640:	str	xzr, [x19, #256]
   2d644:	ldr	x0, [x19, #320]
   2d648:	add	x0, x0, #0x1
   2d64c:	str	x0, [x19, #320]
   2d650:	b	2d5f8 <__asan_backtrace_create_state@@Base+0x4cac>
   2d654:	ldr	x2, [x22, #8]
   2d658:	add	x20, sp, #0x80
   2d65c:	add	w2, w2, #0x1
   2d660:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   2d664:	add	x1, x1, #0xca8
   2d668:	mov	x0, x20
   2d66c:	bl	65f0 <sprintf@plt>
   2d670:	mov	x0, x20
   2d674:	bl	64b0 <__asan_internal_strlen@plt>
   2d678:	cbz	x0, 2d6e8 <__asan_backtrace_create_state@@Base+0x4d9c>
   2d67c:	add	x20, sp, #0x80
   2d680:	add	x22, x0, x20
   2d684:	mov	x23, #0xff                  	// #255
   2d688:	b	2d6ac <__asan_backtrace_create_state@@Base+0x4d60>
   2d68c:	ldr	x0, [x19, #256]
   2d690:	add	x1, x0, #0x1
   2d694:	str	x1, [x19, #256]
   2d698:	strb	w21, [x19, x0]
   2d69c:	strb	w21, [x19, #264]
   2d6a0:	add	x20, x20, #0x1
   2d6a4:	cmp	x20, x22
   2d6a8:	b.eq	2d6e8 <__asan_backtrace_create_state@@Base+0x4d9c>  // b.none
   2d6ac:	ldrb	w21, [x20]
   2d6b0:	ldr	x0, [x19, #256]
   2d6b4:	cmp	x0, #0xff
   2d6b8:	b.ne	2d68c <__asan_backtrace_create_state@@Base+0x4d40>  // b.any
   2d6bc:	strb	wzr, [x19, #255]
   2d6c0:	ldr	x3, [x19, #272]
   2d6c4:	ldr	x2, [x19, #280]
   2d6c8:	mov	x1, x23
   2d6cc:	mov	x0, x19
   2d6d0:	blr	x3
   2d6d4:	str	xzr, [x19, #256]
   2d6d8:	ldr	x0, [x19, #320]
   2d6dc:	add	x0, x0, #0x1
   2d6e0:	str	x0, [x19, #320]
   2d6e4:	b	2d68c <__asan_backtrace_create_state@@Base+0x4d40>
   2d6e8:	ldr	x0, [x19, #256]
   2d6ec:	cmp	x0, #0xff
   2d6f0:	b.eq	2d718 <__asan_backtrace_create_state@@Base+0x4dcc>  // b.none
   2d6f4:	ldr	x1, [x19, #256]
   2d6f8:	add	x0, x1, #0x1
   2d6fc:	str	x0, [x19, #256]
   2d700:	mov	w0, #0x7d                  	// #125
   2d704:	strb	w0, [x19, x1]
   2d708:	strb	w0, [x19, #264]
   2d70c:	ldp	x21, x22, [sp, #32]
   2d710:	ldp	x23, x24, [sp, #48]
   2d714:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d718:	strb	wzr, [x19, #255]
   2d71c:	ldr	x3, [x19, #272]
   2d720:	ldr	x2, [x19, #280]
   2d724:	mov	x1, #0xff                  	// #255
   2d728:	mov	x0, x19
   2d72c:	blr	x3
   2d730:	str	xzr, [x19, #256]
   2d734:	ldr	x0, [x19, #320]
   2d738:	add	x0, x0, #0x1
   2d73c:	str	x0, [x19, #320]
   2d740:	b	2d6f4 <__asan_backtrace_create_state@@Base+0x4da8>
   2d744:	ldr	x2, [x22, #8]
   2d748:	mov	w1, w20
   2d74c:	mov	x0, x19
   2d750:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2d754:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d758:	add	x0, x0, #0xb30
   2d75c:	bl	64b0 <__asan_internal_strlen@plt>
   2d760:	cbz	x0, 2d7dc <__asan_backtrace_create_state@@Base+0x4e90>
   2d764:	stp	x25, x26, [sp, #64]
   2d768:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2d76c:	add	x21, x21, #0xb30
   2d770:	add	x24, x0, x21
   2d774:	mov	x25, #0xff                  	// #255
   2d778:	b	2d79c <__asan_backtrace_create_state@@Base+0x4e50>
   2d77c:	ldr	x0, [x19, #256]
   2d780:	add	x1, x0, #0x1
   2d784:	str	x1, [x19, #256]
   2d788:	strb	w23, [x19, x0]
   2d78c:	strb	w23, [x19, #264]
   2d790:	add	x21, x21, #0x1
   2d794:	cmp	x21, x24
   2d798:	b.eq	2d7d8 <__asan_backtrace_create_state@@Base+0x4e8c>  // b.none
   2d79c:	ldrb	w23, [x21]
   2d7a0:	ldr	x0, [x19, #256]
   2d7a4:	cmp	x0, #0xff
   2d7a8:	b.ne	2d77c <__asan_backtrace_create_state@@Base+0x4e30>  // b.any
   2d7ac:	strb	wzr, [x19, #255]
   2d7b0:	ldr	x3, [x19, #272]
   2d7b4:	ldr	x2, [x19, #280]
   2d7b8:	mov	x1, x25
   2d7bc:	mov	x0, x19
   2d7c0:	blr	x3
   2d7c4:	str	xzr, [x19, #256]
   2d7c8:	ldr	x0, [x19, #320]
   2d7cc:	add	x0, x0, #0x1
   2d7d0:	str	x0, [x19, #320]
   2d7d4:	b	2d77c <__asan_backtrace_create_state@@Base+0x4e30>
   2d7d8:	ldp	x25, x26, [sp, #64]
   2d7dc:	ldr	x2, [x22, #16]
   2d7e0:	mov	w1, w20
   2d7e4:	mov	x0, x19
   2d7e8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2d7ec:	ldr	x0, [x19, #256]
   2d7f0:	cmp	x0, #0xff
   2d7f4:	b.eq	2d81c <__asan_backtrace_create_state@@Base+0x4ed0>  // b.none
   2d7f8:	ldr	x1, [x19, #256]
   2d7fc:	add	x0, x1, #0x1
   2d800:	str	x0, [x19, #256]
   2d804:	mov	w0, #0x5d                  	// #93
   2d808:	strb	w0, [x19, x1]
   2d80c:	strb	w0, [x19, #264]
   2d810:	ldp	x21, x22, [sp, #32]
   2d814:	ldp	x23, x24, [sp, #48]
   2d818:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d81c:	strb	wzr, [x19, #255]
   2d820:	ldr	x3, [x19, #272]
   2d824:	ldr	x2, [x19, #280]
   2d828:	mov	x1, #0xff                  	// #255
   2d82c:	mov	x0, x19
   2d830:	blr	x3
   2d834:	str	xzr, [x19, #256]
   2d838:	ldr	x0, [x19, #320]
   2d83c:	add	x0, x0, #0x1
   2d840:	str	x0, [x19, #320]
   2d844:	b	2d7f8 <__asan_backtrace_create_state@@Base+0x4eac>
   2d848:	ldp	x23, x24, [sp, #48]
   2d84c:	mov	w0, #0x1                   	// #1
   2d850:	str	w0, [x19, #304]
   2d854:	ldp	x21, x22, [sp, #32]
   2d858:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d85c:	cmp	w27, #0x2
   2d860:	b.eq	29c8c <__asan_backtrace_create_state@@Base+0x1340>  // b.none
   2d864:	ldr	w0, [x21]
   2d868:	cmp	w0, #0x4
   2d86c:	b.eq	29d5c <__asan_backtrace_create_state@@Base+0x1410>  // b.none
   2d870:	ldr	x2, [x22, #16]
   2d874:	mov	w1, w20
   2d878:	mov	x0, x19
   2d87c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2d880:	ldr	w0, [x21]
   2d884:	cmp	w0, #0x4
   2d888:	b.eq	29d70 <__asan_backtrace_create_state@@Base+0x1424>  // b.none
   2d88c:	cbz	w23, 29df0 <__asan_backtrace_create_state@@Base+0x14a4>
   2d890:	sub	w21, w23, #0x1
   2d894:	add	x0, sp, #0x80
   2d898:	add	x21, x0, x21, lsl #5
   2d89c:	mov	w22, #0x20                  	// #32
   2d8a0:	mov	x25, #0xff                  	// #255
   2d8a4:	b	29da8 <__asan_backtrace_create_state@@Base+0x145c>
   2d8a8:	mov	w21, w2
   2d8ac:	b	2d8b4 <__asan_backtrace_create_state@@Base+0x4f68>
   2d8b0:	mov	x22, x0
   2d8b4:	ldr	x0, [x19, #296]
   2d8b8:	str	x0, [sp, #128]
   2d8bc:	add	x0, sp, #0x80
   2d8c0:	str	x0, [x19, #296]
   2d8c4:	str	x22, [sp, #136]
   2d8c8:	str	wzr, [sp, #144]
   2d8cc:	ldr	x0, [x19, #288]
   2d8d0:	str	x0, [sp, #152]
   2d8d4:	ldr	x2, [x22, #8]
   2d8d8:	b	2b130 <__asan_backtrace_create_state@@Base+0x27e4>
   2d8dc:	mov	x22, x0
   2d8e0:	b	2d8b4 <__asan_backtrace_create_state@@Base+0x4f68>
   2d8e4:	ldr	x3, [x19, #328]
   2d8e8:	mov	x1, x3
   2d8ec:	cbz	x3, 2d910 <__asan_backtrace_create_state@@Base+0x4fc4>
   2d8f0:	ldr	x2, [x1]
   2d8f4:	cmp	x2, x0
   2d8f8:	b.eq	2b08c <__asan_backtrace_create_state@@Base+0x2740>  // b.none
   2d8fc:	cmp	x3, x1
   2d900:	ccmp	x2, x22, #0x0, ne  // ne = any
   2d904:	b.eq	2b08c <__asan_backtrace_create_state@@Base+0x2740>  // b.none
   2d908:	ldr	x1, [x1, #8]
   2d90c:	cbnz	x1, 2d8f0 <__asan_backtrace_create_state@@Base+0x4fa4>
   2d910:	ldr	x23, [x19, #288]
   2d914:	ldr	x1, [x4, #8]
   2d918:	str	x1, [x19, #288]
   2d91c:	mov	x1, x0
   2d920:	mov	x0, x19
   2d924:	bl	292b4 <__asan_backtrace_create_state@@Base+0x968>
   2d928:	cbz	x0, 2b0bc <__asan_backtrace_create_state@@Base+0x2770>
   2d92c:	mov	w21, #0x1                   	// #1
   2d930:	b	2b0a0 <__asan_backtrace_create_state@@Base+0x2754>
   2d934:	ldp	x21, x22, [sp, #32]
   2d938:	ldp	x19, x20, [sp, #16]
   2d93c:	ldp	x29, x30, [sp], #256
   2d940:	ret
   2d944:	ldp	x21, x22, [sp, #32]
   2d948:	ldp	x23, x24, [sp, #48]
   2d94c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d950:	ldp	x21, x22, [sp, #32]
   2d954:	ldp	x23, x24, [sp, #48]
   2d958:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d95c:	ldp	x21, x22, [sp, #32]
   2d960:	ldp	x23, x24, [sp, #48]
   2d964:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d968:	ldp	x21, x22, [sp, #32]
   2d96c:	ldp	x23, x24, [sp, #48]
   2d970:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d974:	ldp	x21, x22, [sp, #32]
   2d978:	ldp	x23, x24, [sp, #48]
   2d97c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d980:	ldp	x21, x22, [sp, #32]
   2d984:	ldp	x23, x24, [sp, #48]
   2d988:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d98c:	ldp	x21, x22, [sp, #32]
   2d990:	ldp	x23, x24, [sp, #48]
   2d994:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d998:	ldp	x21, x22, [sp, #32]
   2d99c:	ldp	x23, x24, [sp, #48]
   2d9a0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9a4:	ldp	x21, x22, [sp, #32]
   2d9a8:	ldp	x23, x24, [sp, #48]
   2d9ac:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9b0:	ldp	x21, x22, [sp, #32]
   2d9b4:	ldp	x23, x24, [sp, #48]
   2d9b8:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9bc:	ldp	x21, x22, [sp, #32]
   2d9c0:	ldp	x23, x24, [sp, #48]
   2d9c4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9c8:	ldp	x21, x22, [sp, #32]
   2d9cc:	ldp	x23, x24, [sp, #48]
   2d9d0:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9d4:	ldp	x21, x22, [sp, #32]
   2d9d8:	ldp	x23, x24, [sp, #48]
   2d9dc:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9e0:	ldp	x21, x22, [sp, #32]
   2d9e4:	ldp	x23, x24, [sp, #48]
   2d9e8:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9ec:	ldp	x21, x22, [sp, #32]
   2d9f0:	ldp	x23, x24, [sp, #48]
   2d9f4:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2d9f8:	ldp	x21, x22, [sp, #32]
   2d9fc:	ldp	x23, x24, [sp, #48]
   2da00:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2da04:	ldp	x21, x22, [sp, #32]
   2da08:	ldp	x23, x24, [sp, #48]
   2da0c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2da10:	ldp	x21, x22, [sp, #32]
   2da14:	ldp	x23, x24, [sp, #48]
   2da18:	ldp	x25, x26, [sp, #64]
   2da1c:	ldp	x27, x28, [sp, #80]
   2da20:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2da24:	ldp	x21, x22, [sp, #32]
   2da28:	ldp	x23, x24, [sp, #48]
   2da2c:	b	2d938 <__asan_backtrace_create_state@@Base+0x4fec>
   2da30:	stp	x29, x30, [sp, #-48]!
   2da34:	mov	x29, sp
   2da38:	stp	x19, x20, [sp, #16]
   2da3c:	mov	x19, x0
   2da40:	cbz	x2, 2da60 <__asan_backtrace_create_state@@Base+0x5114>
   2da44:	mov	x20, x2
   2da48:	ldr	w0, [x2, #4]
   2da4c:	cmp	w0, #0x1
   2da50:	b.gt	2da60 <__asan_backtrace_create_state@@Base+0x5114>
   2da54:	ldr	w2, [x19, #308]
   2da58:	cmp	w2, #0x400
   2da5c:	b.le	2da74 <__asan_backtrace_create_state@@Base+0x5128>
   2da60:	mov	w0, #0x1                   	// #1
   2da64:	str	w0, [x19, #304]
   2da68:	ldp	x19, x20, [sp, #16]
   2da6c:	ldp	x29, x30, [sp], #48
   2da70:	ret
   2da74:	add	w0, w0, #0x1
   2da78:	str	w0, [x20, #4]
   2da7c:	ldr	w0, [x19, #308]
   2da80:	add	w0, w0, #0x1
   2da84:	str	w0, [x19, #308]
   2da88:	str	x20, [sp, #32]
   2da8c:	ldr	x0, [x19, #328]
   2da90:	str	x0, [sp, #40]
   2da94:	add	x0, sp, #0x20
   2da98:	str	x0, [x19, #328]
   2da9c:	mov	x2, x20
   2daa0:	mov	x0, x19
   2daa4:	bl	295b0 <__asan_backtrace_create_state@@Base+0xc64>
   2daa8:	ldr	x0, [sp, #40]
   2daac:	str	x0, [x19, #328]
   2dab0:	ldr	w0, [x20, #4]
   2dab4:	sub	w0, w0, #0x1
   2dab8:	str	w0, [x20, #4]
   2dabc:	ldr	w0, [x19, #308]
   2dac0:	sub	w0, w0, #0x1
   2dac4:	str	w0, [x19, #308]
   2dac8:	b	2da68 <__asan_backtrace_create_state@@Base+0x511c>
   2dacc:	stp	x29, x30, [sp, #-80]!
   2dad0:	mov	x29, sp
   2dad4:	stp	x19, x20, [sp, #16]
   2dad8:	stp	x21, x22, [sp, #32]
   2dadc:	mov	x19, x0
   2dae0:	mov	w21, w1
   2dae4:	mov	x20, x2
   2dae8:	ldr	w0, [x2]
   2daec:	sub	w0, w0, #0x3
   2daf0:	cmp	w0, #0x4d
   2daf4:	b.hi	2e524 <__asan_backtrace_create_state@@Base+0x5bd8>  // b.pmore
   2daf8:	stp	x23, x24, [sp, #48]
   2dafc:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2db00:	add	x1, x1, #0x6c4
   2db04:	ldrh	w0, [x1, w0, uxtw #1]
   2db08:	adr	x1, 2db14 <__asan_backtrace_create_state@@Base+0x51c8>
   2db0c:	add	x0, x1, w0, sxth #2
   2db10:	br	x0
   2db14:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2db18:	add	x0, x0, #0xb48
   2db1c:	bl	64b0 <__asan_internal_strlen@plt>
   2db20:	cbz	x0, 2e538 <__asan_backtrace_create_state@@Base+0x5bec>
   2db24:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2db28:	add	x20, x20, #0xb48
   2db2c:	add	x22, x0, x20
   2db30:	mov	x23, #0xff                  	// #255
   2db34:	b	2db58 <__asan_backtrace_create_state@@Base+0x520c>
   2db38:	ldr	x0, [x19, #256]
   2db3c:	add	x1, x0, #0x1
   2db40:	str	x1, [x19, #256]
   2db44:	strb	w21, [x19, x0]
   2db48:	strb	w21, [x19, #264]
   2db4c:	add	x20, x20, #0x1
   2db50:	cmp	x20, x22
   2db54:	b.eq	2db94 <__asan_backtrace_create_state@@Base+0x5248>  // b.none
   2db58:	ldrb	w21, [x20]
   2db5c:	ldr	x0, [x19, #256]
   2db60:	cmp	x0, #0xff
   2db64:	b.ne	2db38 <__asan_backtrace_create_state@@Base+0x51ec>  // b.any
   2db68:	strb	wzr, [x19, #255]
   2db6c:	ldr	x3, [x19, #272]
   2db70:	ldr	x2, [x19, #280]
   2db74:	mov	x1, x23
   2db78:	mov	x0, x19
   2db7c:	blr	x3
   2db80:	str	xzr, [x19, #256]
   2db84:	ldr	x0, [x19, #320]
   2db88:	add	x0, x0, #0x1
   2db8c:	str	x0, [x19, #320]
   2db90:	b	2db38 <__asan_backtrace_create_state@@Base+0x51ec>
   2db94:	ldp	x23, x24, [sp, #48]
   2db98:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2db9c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dba0:	add	x0, x0, #0xb58
   2dba4:	bl	64b0 <__asan_internal_strlen@plt>
   2dba8:	cbz	x0, 2e540 <__asan_backtrace_create_state@@Base+0x5bf4>
   2dbac:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dbb0:	add	x20, x20, #0xb58
   2dbb4:	add	x22, x0, x20
   2dbb8:	mov	x23, #0xff                  	// #255
   2dbbc:	b	2dbe0 <__asan_backtrace_create_state@@Base+0x5294>
   2dbc0:	ldr	x0, [x19, #256]
   2dbc4:	add	x1, x0, #0x1
   2dbc8:	str	x1, [x19, #256]
   2dbcc:	strb	w21, [x19, x0]
   2dbd0:	strb	w21, [x19, #264]
   2dbd4:	add	x20, x20, #0x1
   2dbd8:	cmp	x22, x20
   2dbdc:	b.eq	2dc1c <__asan_backtrace_create_state@@Base+0x52d0>  // b.none
   2dbe0:	ldrb	w21, [x20]
   2dbe4:	ldr	x0, [x19, #256]
   2dbe8:	cmp	x0, #0xff
   2dbec:	b.ne	2dbc0 <__asan_backtrace_create_state@@Base+0x5274>  // b.any
   2dbf0:	strb	wzr, [x19, #255]
   2dbf4:	ldr	x3, [x19, #272]
   2dbf8:	ldr	x2, [x19, #280]
   2dbfc:	mov	x1, x23
   2dc00:	mov	x0, x19
   2dc04:	blr	x3
   2dc08:	str	xzr, [x19, #256]
   2dc0c:	ldr	x0, [x19, #320]
   2dc10:	add	x0, x0, #0x1
   2dc14:	str	x0, [x19, #320]
   2dc18:	b	2dbc0 <__asan_backtrace_create_state@@Base+0x5274>
   2dc1c:	ldp	x23, x24, [sp, #48]
   2dc20:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2dc24:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dc28:	add	x0, x0, #0xb68
   2dc2c:	bl	64b0 <__asan_internal_strlen@plt>
   2dc30:	cbz	x0, 2e548 <__asan_backtrace_create_state@@Base+0x5bfc>
   2dc34:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dc38:	add	x20, x20, #0xb68
   2dc3c:	add	x22, x0, x20
   2dc40:	mov	x23, #0xff                  	// #255
   2dc44:	b	2dc68 <__asan_backtrace_create_state@@Base+0x531c>
   2dc48:	ldr	x0, [x19, #256]
   2dc4c:	add	x1, x0, #0x1
   2dc50:	str	x1, [x19, #256]
   2dc54:	strb	w21, [x19, x0]
   2dc58:	strb	w21, [x19, #264]
   2dc5c:	add	x20, x20, #0x1
   2dc60:	cmp	x20, x22
   2dc64:	b.eq	2dca4 <__asan_backtrace_create_state@@Base+0x5358>  // b.none
   2dc68:	ldrb	w21, [x20]
   2dc6c:	ldr	x0, [x19, #256]
   2dc70:	cmp	x0, #0xff
   2dc74:	b.ne	2dc48 <__asan_backtrace_create_state@@Base+0x52fc>  // b.any
   2dc78:	strb	wzr, [x19, #255]
   2dc7c:	ldr	x3, [x19, #272]
   2dc80:	ldr	x2, [x19, #280]
   2dc84:	mov	x1, x23
   2dc88:	mov	x0, x19
   2dc8c:	blr	x3
   2dc90:	str	xzr, [x19, #256]
   2dc94:	ldr	x0, [x19, #320]
   2dc98:	add	x0, x0, #0x1
   2dc9c:	str	x0, [x19, #320]
   2dca0:	b	2dc48 <__asan_backtrace_create_state@@Base+0x52fc>
   2dca4:	ldp	x23, x24, [sp, #48]
   2dca8:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2dcac:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dcb0:	add	x0, x0, #0xb70
   2dcb4:	bl	64b0 <__asan_internal_strlen@plt>
   2dcb8:	cbz	x0, 2e550 <__asan_backtrace_create_state@@Base+0x5c04>
   2dcbc:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dcc0:	add	x20, x20, #0xb70
   2dcc4:	add	x22, x0, x20
   2dcc8:	mov	x23, #0xff                  	// #255
   2dccc:	b	2dcf0 <__asan_backtrace_create_state@@Base+0x53a4>
   2dcd0:	ldr	x0, [x19, #256]
   2dcd4:	add	x1, x0, #0x1
   2dcd8:	str	x1, [x19, #256]
   2dcdc:	strb	w21, [x19, x0]
   2dce0:	strb	w21, [x19, #264]
   2dce4:	add	x20, x20, #0x1
   2dce8:	cmp	x20, x22
   2dcec:	b.eq	2dd2c <__asan_backtrace_create_state@@Base+0x53e0>  // b.none
   2dcf0:	ldrb	w21, [x20]
   2dcf4:	ldr	x0, [x19, #256]
   2dcf8:	cmp	x0, #0xff
   2dcfc:	b.ne	2dcd0 <__asan_backtrace_create_state@@Base+0x5384>  // b.any
   2dd00:	strb	wzr, [x19, #255]
   2dd04:	ldr	x3, [x19, #272]
   2dd08:	ldr	x2, [x19, #280]
   2dd0c:	mov	x1, x23
   2dd10:	mov	x0, x19
   2dd14:	blr	x3
   2dd18:	str	xzr, [x19, #256]
   2dd1c:	ldr	x0, [x19, #320]
   2dd20:	add	x0, x0, #0x1
   2dd24:	str	x0, [x19, #320]
   2dd28:	b	2dcd0 <__asan_backtrace_create_state@@Base+0x5384>
   2dd2c:	ldp	x23, x24, [sp, #48]
   2dd30:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2dd34:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dd38:	add	x0, x0, #0xb88
   2dd3c:	bl	64b0 <__asan_internal_strlen@plt>
   2dd40:	cbz	x0, 2ddbc <__asan_backtrace_create_state@@Base+0x5470>
   2dd44:	str	x25, [sp, #64]
   2dd48:	adrp	x22, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2dd4c:	add	x22, x22, #0xb88
   2dd50:	add	x24, x0, x22
   2dd54:	mov	x25, #0xff                  	// #255
   2dd58:	b	2dd7c <__asan_backtrace_create_state@@Base+0x5430>
   2dd5c:	ldr	x0, [x19, #256]
   2dd60:	add	x1, x0, #0x1
   2dd64:	str	x1, [x19, #256]
   2dd68:	strb	w23, [x19, x0]
   2dd6c:	strb	w23, [x19, #264]
   2dd70:	add	x22, x22, #0x1
   2dd74:	cmp	x22, x24
   2dd78:	b.eq	2ddb8 <__asan_backtrace_create_state@@Base+0x546c>  // b.none
   2dd7c:	ldrb	w23, [x22]
   2dd80:	ldr	x0, [x19, #256]
   2dd84:	cmp	x0, #0xff
   2dd88:	b.ne	2dd5c <__asan_backtrace_create_state@@Base+0x5410>  // b.any
   2dd8c:	strb	wzr, [x19, #255]
   2dd90:	ldr	x3, [x19, #272]
   2dd94:	ldr	x2, [x19, #280]
   2dd98:	mov	x1, x25
   2dd9c:	mov	x0, x19
   2dda0:	blr	x3
   2dda4:	str	xzr, [x19, #256]
   2dda8:	ldr	x0, [x19, #320]
   2ddac:	add	x0, x0, #0x1
   2ddb0:	str	x0, [x19, #320]
   2ddb4:	b	2dd5c <__asan_backtrace_create_state@@Base+0x5410>
   2ddb8:	ldr	x25, [sp, #64]
   2ddbc:	ldr	x0, [x20, #16]
   2ddc0:	cbz	x0, 2e558 <__asan_backtrace_create_state@@Base+0x5c0c>
   2ddc4:	ldr	x0, [x19, #256]
   2ddc8:	cmp	x0, #0xff
   2ddcc:	b.eq	2de24 <__asan_backtrace_create_state@@Base+0x54d8>  // b.none
   2ddd0:	ldr	x1, [x19, #256]
   2ddd4:	add	x0, x1, #0x1
   2ddd8:	str	x0, [x19, #256]
   2dddc:	mov	w0, #0x28                  	// #40
   2dde0:	strb	w0, [x19, x1]
   2dde4:	strb	w0, [x19, #264]
   2dde8:	ldr	x2, [x20, #16]
   2ddec:	mov	w1, w21
   2ddf0:	mov	x0, x19
   2ddf4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2ddf8:	ldr	x0, [x19, #256]
   2ddfc:	cmp	x0, #0xff
   2de00:	b.eq	2de50 <__asan_backtrace_create_state@@Base+0x5504>  // b.none
   2de04:	ldr	x1, [x19, #256]
   2de08:	add	x0, x1, #0x1
   2de0c:	str	x0, [x19, #256]
   2de10:	mov	w0, #0x29                  	// #41
   2de14:	strb	w0, [x19, x1]
   2de18:	strb	w0, [x19, #264]
   2de1c:	ldp	x23, x24, [sp, #48]
   2de20:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2de24:	strb	wzr, [x19, #255]
   2de28:	ldr	x3, [x19, #272]
   2de2c:	ldr	x2, [x19, #280]
   2de30:	mov	x1, #0xff                  	// #255
   2de34:	mov	x0, x19
   2de38:	blr	x3
   2de3c:	str	xzr, [x19, #256]
   2de40:	ldr	x0, [x19, #320]
   2de44:	add	x0, x0, #0x1
   2de48:	str	x0, [x19, #320]
   2de4c:	b	2ddd0 <__asan_backtrace_create_state@@Base+0x5484>
   2de50:	strb	wzr, [x19, #255]
   2de54:	ldr	x3, [x19, #272]
   2de58:	ldr	x2, [x19, #280]
   2de5c:	mov	x1, #0xff                  	// #255
   2de60:	mov	x0, x19
   2de64:	blr	x3
   2de68:	str	xzr, [x19, #256]
   2de6c:	ldr	x0, [x19, #320]
   2de70:	add	x0, x0, #0x1
   2de74:	str	x0, [x19, #320]
   2de78:	b	2de04 <__asan_backtrace_create_state@@Base+0x54b8>
   2de7c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2de80:	add	x0, x0, #0xb98
   2de84:	bl	64b0 <__asan_internal_strlen@plt>
   2de88:	cbz	x0, 2df04 <__asan_backtrace_create_state@@Base+0x55b8>
   2de8c:	str	x25, [sp, #64]
   2de90:	adrp	x22, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2de94:	add	x22, x22, #0xb98
   2de98:	add	x24, x0, x22
   2de9c:	mov	x25, #0xff                  	// #255
   2dea0:	b	2dec4 <__asan_backtrace_create_state@@Base+0x5578>
   2dea4:	ldr	x0, [x19, #256]
   2dea8:	add	x1, x0, #0x1
   2deac:	str	x1, [x19, #256]
   2deb0:	strb	w23, [x19, x0]
   2deb4:	strb	w23, [x19, #264]
   2deb8:	add	x22, x22, #0x1
   2debc:	cmp	x22, x24
   2dec0:	b.eq	2df00 <__asan_backtrace_create_state@@Base+0x55b4>  // b.none
   2dec4:	ldrb	w23, [x22]
   2dec8:	ldr	x0, [x19, #256]
   2decc:	cmp	x0, #0xff
   2ded0:	b.ne	2dea4 <__asan_backtrace_create_state@@Base+0x5558>  // b.any
   2ded4:	strb	wzr, [x19, #255]
   2ded8:	ldr	x3, [x19, #272]
   2dedc:	ldr	x2, [x19, #280]
   2dee0:	mov	x1, x25
   2dee4:	mov	x0, x19
   2dee8:	blr	x3
   2deec:	str	xzr, [x19, #256]
   2def0:	ldr	x0, [x19, #320]
   2def4:	add	x0, x0, #0x1
   2def8:	str	x0, [x19, #320]
   2defc:	b	2dea4 <__asan_backtrace_create_state@@Base+0x5558>
   2df00:	ldr	x25, [sp, #64]
   2df04:	ldr	x0, [x20, #16]
   2df08:	cbz	x0, 2e560 <__asan_backtrace_create_state@@Base+0x5c14>
   2df0c:	ldr	x0, [x19, #256]
   2df10:	cmp	x0, #0xff
   2df14:	b.eq	2df6c <__asan_backtrace_create_state@@Base+0x5620>  // b.none
   2df18:	ldr	x1, [x19, #256]
   2df1c:	add	x0, x1, #0x1
   2df20:	str	x0, [x19, #256]
   2df24:	mov	w0, #0x28                  	// #40
   2df28:	strb	w0, [x19, x1]
   2df2c:	strb	w0, [x19, #264]
   2df30:	ldr	x2, [x20, #16]
   2df34:	mov	w1, w21
   2df38:	mov	x0, x19
   2df3c:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2df40:	ldr	x0, [x19, #256]
   2df44:	cmp	x0, #0xff
   2df48:	b.eq	2df98 <__asan_backtrace_create_state@@Base+0x564c>  // b.none
   2df4c:	ldr	x1, [x19, #256]
   2df50:	add	x0, x1, #0x1
   2df54:	str	x0, [x19, #256]
   2df58:	mov	w0, #0x29                  	// #41
   2df5c:	strb	w0, [x19, x1]
   2df60:	strb	w0, [x19, #264]
   2df64:	ldp	x23, x24, [sp, #48]
   2df68:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2df6c:	strb	wzr, [x19, #255]
   2df70:	ldr	x3, [x19, #272]
   2df74:	ldr	x2, [x19, #280]
   2df78:	mov	x1, #0xff                  	// #255
   2df7c:	mov	x0, x19
   2df80:	blr	x3
   2df84:	str	xzr, [x19, #256]
   2df88:	ldr	x0, [x19, #320]
   2df8c:	add	x0, x0, #0x1
   2df90:	str	x0, [x19, #320]
   2df94:	b	2df18 <__asan_backtrace_create_state@@Base+0x55cc>
   2df98:	strb	wzr, [x19, #255]
   2df9c:	ldr	x3, [x19, #272]
   2dfa0:	ldr	x2, [x19, #280]
   2dfa4:	mov	x1, #0xff                  	// #255
   2dfa8:	mov	x0, x19
   2dfac:	blr	x3
   2dfb0:	str	xzr, [x19, #256]
   2dfb4:	ldr	x0, [x19, #320]
   2dfb8:	add	x0, x0, #0x1
   2dfbc:	str	x0, [x19, #320]
   2dfc0:	b	2df4c <__asan_backtrace_create_state@@Base+0x5600>
   2dfc4:	ldr	x0, [x19, #256]
   2dfc8:	cmp	x0, #0xff
   2dfcc:	b.eq	2e000 <__asan_backtrace_create_state@@Base+0x56b4>  // b.none
   2dfd0:	ldr	x1, [x19, #256]
   2dfd4:	add	x0, x1, #0x1
   2dfd8:	str	x0, [x19, #256]
   2dfdc:	mov	w0, #0x20                  	// #32
   2dfe0:	strb	w0, [x19, x1]
   2dfe4:	strb	w0, [x19, #264]
   2dfe8:	ldr	x2, [x20, #16]
   2dfec:	mov	w1, w21
   2dff0:	mov	x0, x19
   2dff4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2dff8:	ldp	x23, x24, [sp, #48]
   2dffc:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e000:	strb	wzr, [x19, #255]
   2e004:	ldr	x3, [x19, #272]
   2e008:	ldr	x2, [x19, #280]
   2e00c:	mov	x1, #0xff                  	// #255
   2e010:	mov	x0, x19
   2e014:	blr	x3
   2e018:	str	xzr, [x19, #256]
   2e01c:	ldr	x0, [x19, #320]
   2e020:	add	x0, x0, #0x1
   2e024:	str	x0, [x19, #320]
   2e028:	b	2dfd0 <__asan_backtrace_create_state@@Base+0x5684>
   2e02c:	tbnz	w21, #2, 2e568 <__asan_backtrace_create_state@@Base+0x5c1c>
   2e030:	ldr	x0, [x19, #256]
   2e034:	cmp	x0, #0xff
   2e038:	b.eq	2e05c <__asan_backtrace_create_state@@Base+0x5710>  // b.none
   2e03c:	ldr	x1, [x19, #256]
   2e040:	add	x0, x1, #0x1
   2e044:	str	x0, [x19, #256]
   2e048:	mov	w0, #0x2a                  	// #42
   2e04c:	strb	w0, [x19, x1]
   2e050:	strb	w0, [x19, #264]
   2e054:	ldp	x23, x24, [sp, #48]
   2e058:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e05c:	strb	wzr, [x19, #255]
   2e060:	ldr	x3, [x19, #272]
   2e064:	ldr	x2, [x19, #280]
   2e068:	mov	x1, #0xff                  	// #255
   2e06c:	mov	x0, x19
   2e070:	blr	x3
   2e074:	str	xzr, [x19, #256]
   2e078:	ldr	x0, [x19, #320]
   2e07c:	add	x0, x0, #0x1
   2e080:	str	x0, [x19, #320]
   2e084:	b	2e03c <__asan_backtrace_create_state@@Base+0x56f0>
   2e088:	ldr	x0, [x19, #256]
   2e08c:	cmp	x0, #0xff
   2e090:	b.eq	2e0e4 <__asan_backtrace_create_state@@Base+0x5798>  // b.none
   2e094:	ldr	x1, [x19, #256]
   2e098:	add	x0, x1, #0x1
   2e09c:	str	x0, [x19, #256]
   2e0a0:	mov	w0, #0x20                  	// #32
   2e0a4:	strb	w0, [x19, x1]
   2e0a8:	strb	w0, [x19, #264]
   2e0ac:	ldr	x0, [x19, #256]
   2e0b0:	cmp	x0, #0xff
   2e0b4:	b.eq	2e110 <__asan_backtrace_create_state@@Base+0x57c4>  // b.none
   2e0b8:	ldr	x1, [x19, #256]
   2e0bc:	add	x0, x1, #0x1
   2e0c0:	str	x0, [x19, #256]
   2e0c4:	mov	w0, #0x26                  	// #38
   2e0c8:	strb	w0, [x19, x1]
   2e0cc:	strb	w0, [x19, #264]
   2e0d0:	ldp	x23, x24, [sp, #48]
   2e0d4:	ldp	x19, x20, [sp, #16]
   2e0d8:	ldp	x21, x22, [sp, #32]
   2e0dc:	ldp	x29, x30, [sp], #80
   2e0e0:	ret
   2e0e4:	strb	wzr, [x19, #255]
   2e0e8:	ldr	x3, [x19, #272]
   2e0ec:	ldr	x2, [x19, #280]
   2e0f0:	mov	x1, #0xff                  	// #255
   2e0f4:	mov	x0, x19
   2e0f8:	blr	x3
   2e0fc:	str	xzr, [x19, #256]
   2e100:	ldr	x0, [x19, #320]
   2e104:	add	x0, x0, #0x1
   2e108:	str	x0, [x19, #320]
   2e10c:	b	2e094 <__asan_backtrace_create_state@@Base+0x5748>
   2e110:	strb	wzr, [x19, #255]
   2e114:	ldr	x3, [x19, #272]
   2e118:	ldr	x2, [x19, #280]
   2e11c:	mov	x1, #0xff                  	// #255
   2e120:	mov	x0, x19
   2e124:	blr	x3
   2e128:	str	xzr, [x19, #256]
   2e12c:	ldr	x0, [x19, #320]
   2e130:	add	x0, x0, #0x1
   2e134:	str	x0, [x19, #320]
   2e138:	b	2e0b8 <__asan_backtrace_create_state@@Base+0x576c>
   2e13c:	ldr	x0, [x19, #256]
   2e140:	cmp	x0, #0xff
   2e144:	b.eq	2e184 <__asan_backtrace_create_state@@Base+0x5838>  // b.none
   2e148:	ldr	x1, [x19, #256]
   2e14c:	add	x0, x1, #0x1
   2e150:	str	x0, [x19, #256]
   2e154:	mov	w0, #0x20                  	// #32
   2e158:	strb	w0, [x19, x1]
   2e15c:	strb	w0, [x19, #264]
   2e160:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e164:	add	x0, x0, #0xba0
   2e168:	bl	64b0 <__asan_internal_strlen@plt>
   2e16c:	cbz	x0, 2e570 <__asan_backtrace_create_state@@Base+0x5c24>
   2e170:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e174:	add	x20, x20, #0xba0
   2e178:	add	x22, x0, x20
   2e17c:	mov	x23, #0xff                  	// #255
   2e180:	b	2e1d0 <__asan_backtrace_create_state@@Base+0x5884>
   2e184:	strb	wzr, [x19, #255]
   2e188:	ldr	x3, [x19, #272]
   2e18c:	ldr	x2, [x19, #280]
   2e190:	mov	x1, #0xff                  	// #255
   2e194:	mov	x0, x19
   2e198:	blr	x3
   2e19c:	str	xzr, [x19, #256]
   2e1a0:	ldr	x0, [x19, #320]
   2e1a4:	add	x0, x0, #0x1
   2e1a8:	str	x0, [x19, #320]
   2e1ac:	b	2e148 <__asan_backtrace_create_state@@Base+0x57fc>
   2e1b0:	ldr	x0, [x19, #256]
   2e1b4:	add	x1, x0, #0x1
   2e1b8:	str	x1, [x19, #256]
   2e1bc:	strb	w21, [x19, x0]
   2e1c0:	strb	w21, [x19, #264]
   2e1c4:	add	x20, x20, #0x1
   2e1c8:	cmp	x20, x22
   2e1cc:	b.eq	2e20c <__asan_backtrace_create_state@@Base+0x58c0>  // b.none
   2e1d0:	ldrb	w21, [x20]
   2e1d4:	ldr	x0, [x19, #256]
   2e1d8:	cmp	x0, #0xff
   2e1dc:	b.ne	2e1b0 <__asan_backtrace_create_state@@Base+0x5864>  // b.any
   2e1e0:	strb	wzr, [x19, #255]
   2e1e4:	ldr	x3, [x19, #272]
   2e1e8:	ldr	x2, [x19, #280]
   2e1ec:	mov	x1, x23
   2e1f0:	mov	x0, x19
   2e1f4:	blr	x3
   2e1f8:	str	xzr, [x19, #256]
   2e1fc:	ldr	x0, [x19, #320]
   2e200:	add	x0, x0, #0x1
   2e204:	str	x0, [x19, #320]
   2e208:	b	2e1b0 <__asan_backtrace_create_state@@Base+0x5864>
   2e20c:	ldp	x23, x24, [sp, #48]
   2e210:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e214:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e218:	add	x0, x0, #0xba8
   2e21c:	bl	64b0 <__asan_internal_strlen@plt>
   2e220:	cbz	x0, 2e578 <__asan_backtrace_create_state@@Base+0x5c2c>
   2e224:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e228:	add	x20, x20, #0xba8
   2e22c:	add	x22, x0, x20
   2e230:	mov	x23, #0xff                  	// #255
   2e234:	b	2e258 <__asan_backtrace_create_state@@Base+0x590c>
   2e238:	ldr	x0, [x19, #256]
   2e23c:	add	x1, x0, #0x1
   2e240:	str	x1, [x19, #256]
   2e244:	strb	w21, [x19, x0]
   2e248:	strb	w21, [x19, #264]
   2e24c:	add	x20, x20, #0x1
   2e250:	cmp	x22, x20
   2e254:	b.eq	2e294 <__asan_backtrace_create_state@@Base+0x5948>  // b.none
   2e258:	ldrb	w21, [x20]
   2e25c:	ldr	x0, [x19, #256]
   2e260:	cmp	x0, #0xff
   2e264:	b.ne	2e238 <__asan_backtrace_create_state@@Base+0x58ec>  // b.any
   2e268:	strb	wzr, [x19, #255]
   2e26c:	ldr	x3, [x19, #272]
   2e270:	ldr	x2, [x19, #280]
   2e274:	mov	x1, x23
   2e278:	mov	x0, x19
   2e27c:	blr	x3
   2e280:	str	xzr, [x19, #256]
   2e284:	ldr	x0, [x19, #320]
   2e288:	add	x0, x0, #0x1
   2e28c:	str	x0, [x19, #320]
   2e290:	b	2e238 <__asan_backtrace_create_state@@Base+0x58ec>
   2e294:	ldp	x23, x24, [sp, #48]
   2e298:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e29c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e2a0:	add	x0, x0, #0xbb8
   2e2a4:	bl	64b0 <__asan_internal_strlen@plt>
   2e2a8:	cbz	x0, 2e580 <__asan_backtrace_create_state@@Base+0x5c34>
   2e2ac:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e2b0:	add	x20, x20, #0xbb8
   2e2b4:	add	x22, x0, x20
   2e2b8:	mov	x23, #0xff                  	// #255
   2e2bc:	b	2e2e0 <__asan_backtrace_create_state@@Base+0x5994>
   2e2c0:	ldr	x0, [x19, #256]
   2e2c4:	add	x1, x0, #0x1
   2e2c8:	str	x1, [x19, #256]
   2e2cc:	strb	w21, [x19, x0]
   2e2d0:	strb	w21, [x19, #264]
   2e2d4:	add	x20, x20, #0x1
   2e2d8:	cmp	x20, x22
   2e2dc:	b.eq	2e31c <__asan_backtrace_create_state@@Base+0x59d0>  // b.none
   2e2e0:	ldrb	w21, [x20]
   2e2e4:	ldr	x0, [x19, #256]
   2e2e8:	cmp	x0, #0xff
   2e2ec:	b.ne	2e2c0 <__asan_backtrace_create_state@@Base+0x5974>  // b.any
   2e2f0:	strb	wzr, [x19, #255]
   2e2f4:	ldr	x3, [x19, #272]
   2e2f8:	ldr	x2, [x19, #280]
   2e2fc:	mov	x1, x23
   2e300:	mov	x0, x19
   2e304:	blr	x3
   2e308:	str	xzr, [x19, #256]
   2e30c:	ldr	x0, [x19, #320]
   2e310:	add	x0, x0, #0x1
   2e314:	str	x0, [x19, #320]
   2e318:	b	2e2c0 <__asan_backtrace_create_state@@Base+0x5974>
   2e31c:	ldp	x23, x24, [sp, #48]
   2e320:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e324:	ldrb	w0, [x19, #264]
   2e328:	cmp	w0, #0x28
   2e32c:	b.eq	2e354 <__asan_backtrace_create_state@@Base+0x5a08>  // b.none
   2e330:	ldr	x0, [x19, #256]
   2e334:	cmp	x0, #0xff
   2e338:	b.eq	2e388 <__asan_backtrace_create_state@@Base+0x5a3c>  // b.none
   2e33c:	ldr	x1, [x19, #256]
   2e340:	add	x0, x1, #0x1
   2e344:	str	x0, [x19, #256]
   2e348:	mov	w0, #0x20                  	// #32
   2e34c:	strb	w0, [x19, x1]
   2e350:	strb	w0, [x19, #264]
   2e354:	ldr	x2, [x20, #8]
   2e358:	mov	w1, w21
   2e35c:	mov	x0, x19
   2e360:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2e364:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e368:	add	x0, x0, #0xbc8
   2e36c:	bl	64b0 <__asan_internal_strlen@plt>
   2e370:	cbz	x0, 2e588 <__asan_backtrace_create_state@@Base+0x5c3c>
   2e374:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e378:	add	x20, x20, #0xbc8
   2e37c:	add	x22, x0, x20
   2e380:	mov	x23, #0xff                  	// #255
   2e384:	b	2e3d4 <__asan_backtrace_create_state@@Base+0x5a88>
   2e388:	strb	wzr, [x19, #255]
   2e38c:	ldr	x3, [x19, #272]
   2e390:	ldr	x2, [x19, #280]
   2e394:	mov	x1, #0xff                  	// #255
   2e398:	mov	x0, x19
   2e39c:	blr	x3
   2e3a0:	str	xzr, [x19, #256]
   2e3a4:	ldr	x0, [x19, #320]
   2e3a8:	add	x0, x0, #0x1
   2e3ac:	str	x0, [x19, #320]
   2e3b0:	b	2e33c <__asan_backtrace_create_state@@Base+0x59f0>
   2e3b4:	ldr	x0, [x19, #256]
   2e3b8:	add	x1, x0, #0x1
   2e3bc:	str	x1, [x19, #256]
   2e3c0:	strb	w21, [x19, x0]
   2e3c4:	strb	w21, [x19, #264]
   2e3c8:	add	x20, x20, #0x1
   2e3cc:	cmp	x22, x20
   2e3d0:	b.eq	2e410 <__asan_backtrace_create_state@@Base+0x5ac4>  // b.none
   2e3d4:	ldrb	w21, [x20]
   2e3d8:	ldr	x0, [x19, #256]
   2e3dc:	cmp	x0, #0xff
   2e3e0:	b.ne	2e3b4 <__asan_backtrace_create_state@@Base+0x5a68>  // b.any
   2e3e4:	strb	wzr, [x19, #255]
   2e3e8:	ldr	x3, [x19, #272]
   2e3ec:	ldr	x2, [x19, #280]
   2e3f0:	mov	x1, x23
   2e3f4:	mov	x0, x19
   2e3f8:	blr	x3
   2e3fc:	str	xzr, [x19, #256]
   2e400:	ldr	x0, [x19, #320]
   2e404:	add	x0, x0, #0x1
   2e408:	str	x0, [x19, #320]
   2e40c:	b	2e3b4 <__asan_backtrace_create_state@@Base+0x5a68>
   2e410:	ldp	x23, x24, [sp, #48]
   2e414:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e418:	ldr	x2, [x2, #8]
   2e41c:	mov	w1, w21
   2e420:	mov	x0, x19
   2e424:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2e428:	ldp	x23, x24, [sp, #48]
   2e42c:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e430:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e434:	add	x0, x0, #0xbd0
   2e438:	bl	64b0 <__asan_internal_strlen@plt>
   2e43c:	cbz	x0, 2e4b8 <__asan_backtrace_create_state@@Base+0x5b6c>
   2e440:	str	x25, [sp, #64]
   2e444:	adrp	x22, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e448:	add	x22, x22, #0xbd0
   2e44c:	add	x24, x0, x22
   2e450:	mov	x25, #0xff                  	// #255
   2e454:	b	2e478 <__asan_backtrace_create_state@@Base+0x5b2c>
   2e458:	ldr	x0, [x19, #256]
   2e45c:	add	x1, x0, #0x1
   2e460:	str	x1, [x19, #256]
   2e464:	strb	w23, [x19, x0]
   2e468:	strb	w23, [x19, #264]
   2e46c:	add	x22, x22, #0x1
   2e470:	cmp	x22, x24
   2e474:	b.eq	2e4b4 <__asan_backtrace_create_state@@Base+0x5b68>  // b.none
   2e478:	ldrb	w23, [x22]
   2e47c:	ldr	x0, [x19, #256]
   2e480:	cmp	x0, #0xff
   2e484:	b.ne	2e458 <__asan_backtrace_create_state@@Base+0x5b0c>  // b.any
   2e488:	strb	wzr, [x19, #255]
   2e48c:	ldr	x3, [x19, #272]
   2e490:	ldr	x2, [x19, #280]
   2e494:	mov	x1, x25
   2e498:	mov	x0, x19
   2e49c:	blr	x3
   2e4a0:	str	xzr, [x19, #256]
   2e4a4:	ldr	x0, [x19, #320]
   2e4a8:	add	x0, x0, #0x1
   2e4ac:	str	x0, [x19, #320]
   2e4b0:	b	2e458 <__asan_backtrace_create_state@@Base+0x5b0c>
   2e4b4:	ldr	x25, [sp, #64]
   2e4b8:	ldr	x2, [x20, #8]
   2e4bc:	mov	w1, w21
   2e4c0:	mov	x0, x19
   2e4c4:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2e4c8:	ldr	x0, [x19, #256]
   2e4cc:	cmp	x0, #0xff
   2e4d0:	b.eq	2e4f4 <__asan_backtrace_create_state@@Base+0x5ba8>  // b.none
   2e4d4:	ldr	x1, [x19, #256]
   2e4d8:	add	x0, x1, #0x1
   2e4dc:	str	x0, [x19, #256]
   2e4e0:	mov	w0, #0x29                  	// #41
   2e4e4:	strb	w0, [x19, x1]
   2e4e8:	strb	w0, [x19, #264]
   2e4ec:	ldp	x23, x24, [sp, #48]
   2e4f0:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e4f4:	strb	wzr, [x19, #255]
   2e4f8:	ldr	x3, [x19, #272]
   2e4fc:	ldr	x2, [x19, #280]
   2e500:	mov	x1, #0xff                  	// #255
   2e504:	mov	x0, x19
   2e508:	blr	x3
   2e50c:	str	xzr, [x19, #256]
   2e510:	ldr	x0, [x19, #320]
   2e514:	add	x0, x0, #0x1
   2e518:	str	x0, [x19, #320]
   2e51c:	b	2e4d4 <__asan_backtrace_create_state@@Base+0x5b88>
   2e520:	ldp	x23, x24, [sp, #48]
   2e524:	mov	x2, x20
   2e528:	mov	w1, w21
   2e52c:	mov	x0, x19
   2e530:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2e534:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e538:	ldp	x23, x24, [sp, #48]
   2e53c:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e540:	ldp	x23, x24, [sp, #48]
   2e544:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e548:	ldp	x23, x24, [sp, #48]
   2e54c:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e550:	ldp	x23, x24, [sp, #48]
   2e554:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e558:	ldp	x23, x24, [sp, #48]
   2e55c:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e560:	ldp	x23, x24, [sp, #48]
   2e564:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e568:	ldp	x23, x24, [sp, #48]
   2e56c:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e570:	ldp	x23, x24, [sp, #48]
   2e574:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e578:	ldp	x23, x24, [sp, #48]
   2e57c:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e580:	ldp	x23, x24, [sp, #48]
   2e584:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e588:	ldp	x23, x24, [sp, #48]
   2e58c:	b	2e0d4 <__asan_backtrace_create_state@@Base+0x5788>
   2e590:	stp	x29, x30, [sp, #-64]!
   2e594:	mov	x29, sp
   2e598:	stp	x19, x20, [sp, #16]
   2e59c:	stp	x21, x22, [sp, #32]
   2e5a0:	str	x23, [sp, #48]
   2e5a4:	mov	x19, x0
   2e5a8:	mov	w21, w1
   2e5ac:	mov	x22, x2
   2e5b0:	mov	x20, x3
   2e5b4:	cbz	x3, 2e5fc <__asan_backtrace_create_state@@Base+0x5cb0>
   2e5b8:	mov	x1, x3
   2e5bc:	mov	x3, #0x1                   	// #1
   2e5c0:	mov	x2, #0xe000000             	// #234881024
   2e5c4:	movk	x2, #0x862, lsl #32
   2e5c8:	ldr	w0, [x1, #16]
   2e5cc:	cbnz	w0, 2e5fc <__asan_backtrace_create_state@@Base+0x5cb0>
   2e5d0:	ldr	x0, [x1, #8]
   2e5d4:	ldr	w0, [x0]
   2e5d8:	cmp	w0, #0x2b
   2e5dc:	b.hi	2e5f4 <__asan_backtrace_create_state@@Base+0x5ca8>  // b.pmore
   2e5e0:	lsl	x0, x3, x0
   2e5e4:	tst	x0, x2
   2e5e8:	b.ne	2e630 <__asan_backtrace_create_state@@Base+0x5ce4>  // b.any
   2e5ec:	tst	x0, #0x1c00000000
   2e5f0:	b.ne	2e61c <__asan_backtrace_create_state@@Base+0x5cd0>  // b.any
   2e5f4:	ldr	x1, [x1]
   2e5f8:	cbnz	x1, 2e5c8 <__asan_backtrace_create_state@@Base+0x5c7c>
   2e5fc:	ldr	x23, [x19, #296]
   2e600:	str	xzr, [x19, #296]
   2e604:	mov	w3, #0x0                   	// #0
   2e608:	mov	x2, x20
   2e60c:	mov	w1, w21
   2e610:	mov	x0, x19
   2e614:	bl	2e828 <__asan_backtrace_create_state@@Base+0x5edc>
   2e618:	b	2e6c4 <__asan_backtrace_create_state@@Base+0x5d78>
   2e61c:	ldrb	w0, [x19, #264]
   2e620:	and	w0, w0, #0xfffffffd
   2e624:	and	w0, w0, #0xff
   2e628:	cmp	w0, #0x28
   2e62c:	b.eq	2e660 <__asan_backtrace_create_state@@Base+0x5d14>  // b.none
   2e630:	ldrb	w0, [x19, #264]
   2e634:	cmp	w0, #0x20
   2e638:	b.eq	2e660 <__asan_backtrace_create_state@@Base+0x5d14>  // b.none
   2e63c:	ldr	x0, [x19, #256]
   2e640:	cmp	x0, #0xff
   2e644:	b.eq	2e74c <__asan_backtrace_create_state@@Base+0x5e00>  // b.none
   2e648:	ldr	x1, [x19, #256]
   2e64c:	add	x0, x1, #0x1
   2e650:	str	x0, [x19, #256]
   2e654:	mov	w0, #0x20                  	// #32
   2e658:	strb	w0, [x19, x1]
   2e65c:	strb	w0, [x19, #264]
   2e660:	ldr	x0, [x19, #256]
   2e664:	cmp	x0, #0xff
   2e668:	b.eq	2e778 <__asan_backtrace_create_state@@Base+0x5e2c>  // b.none
   2e66c:	ldr	x1, [x19, #256]
   2e670:	add	x0, x1, #0x1
   2e674:	str	x0, [x19, #256]
   2e678:	mov	w0, #0x28                  	// #40
   2e67c:	strb	w0, [x19, x1]
   2e680:	strb	w0, [x19, #264]
   2e684:	ldr	x23, [x19, #296]
   2e688:	str	xzr, [x19, #296]
   2e68c:	mov	w3, #0x0                   	// #0
   2e690:	mov	x2, x20
   2e694:	mov	w1, w21
   2e698:	mov	x0, x19
   2e69c:	bl	2e828 <__asan_backtrace_create_state@@Base+0x5edc>
   2e6a0:	ldr	x0, [x19, #256]
   2e6a4:	cmp	x0, #0xff
   2e6a8:	b.eq	2e7a4 <__asan_backtrace_create_state@@Base+0x5e58>  // b.none
   2e6ac:	ldr	x1, [x19, #256]
   2e6b0:	add	x0, x1, #0x1
   2e6b4:	str	x0, [x19, #256]
   2e6b8:	mov	w0, #0x29                  	// #41
   2e6bc:	strb	w0, [x19, x1]
   2e6c0:	strb	w0, [x19, #264]
   2e6c4:	ldr	x0, [x19, #256]
   2e6c8:	cmp	x0, #0xff
   2e6cc:	b.eq	2e7d0 <__asan_backtrace_create_state@@Base+0x5e84>  // b.none
   2e6d0:	ldr	x1, [x19, #256]
   2e6d4:	add	x0, x1, #0x1
   2e6d8:	str	x0, [x19, #256]
   2e6dc:	mov	w0, #0x28                  	// #40
   2e6e0:	strb	w0, [x19, x1]
   2e6e4:	strb	w0, [x19, #264]
   2e6e8:	ldr	x2, [x22, #16]
   2e6ec:	cbz	x2, 2e6fc <__asan_backtrace_create_state@@Base+0x5db0>
   2e6f0:	mov	w1, w21
   2e6f4:	mov	x0, x19
   2e6f8:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2e6fc:	ldr	x0, [x19, #256]
   2e700:	cmp	x0, #0xff
   2e704:	b.eq	2e7fc <__asan_backtrace_create_state@@Base+0x5eb0>  // b.none
   2e708:	ldr	x1, [x19, #256]
   2e70c:	add	x0, x1, #0x1
   2e710:	str	x0, [x19, #256]
   2e714:	mov	w0, #0x29                  	// #41
   2e718:	strb	w0, [x19, x1]
   2e71c:	strb	w0, [x19, #264]
   2e720:	mov	w3, #0x1                   	// #1
   2e724:	mov	x2, x20
   2e728:	mov	w1, w21
   2e72c:	mov	x0, x19
   2e730:	bl	2e828 <__asan_backtrace_create_state@@Base+0x5edc>
   2e734:	str	x23, [x19, #296]
   2e738:	ldp	x19, x20, [sp, #16]
   2e73c:	ldp	x21, x22, [sp, #32]
   2e740:	ldr	x23, [sp, #48]
   2e744:	ldp	x29, x30, [sp], #64
   2e748:	ret
   2e74c:	strb	wzr, [x19, #255]
   2e750:	ldr	x3, [x19, #272]
   2e754:	ldr	x2, [x19, #280]
   2e758:	mov	x1, #0xff                  	// #255
   2e75c:	mov	x0, x19
   2e760:	blr	x3
   2e764:	str	xzr, [x19, #256]
   2e768:	ldr	x0, [x19, #320]
   2e76c:	add	x0, x0, #0x1
   2e770:	str	x0, [x19, #320]
   2e774:	b	2e648 <__asan_backtrace_create_state@@Base+0x5cfc>
   2e778:	strb	wzr, [x19, #255]
   2e77c:	ldr	x3, [x19, #272]
   2e780:	ldr	x2, [x19, #280]
   2e784:	mov	x1, #0xff                  	// #255
   2e788:	mov	x0, x19
   2e78c:	blr	x3
   2e790:	str	xzr, [x19, #256]
   2e794:	ldr	x0, [x19, #320]
   2e798:	add	x0, x0, #0x1
   2e79c:	str	x0, [x19, #320]
   2e7a0:	b	2e66c <__asan_backtrace_create_state@@Base+0x5d20>
   2e7a4:	strb	wzr, [x19, #255]
   2e7a8:	ldr	x3, [x19, #272]
   2e7ac:	ldr	x2, [x19, #280]
   2e7b0:	mov	x1, #0xff                  	// #255
   2e7b4:	mov	x0, x19
   2e7b8:	blr	x3
   2e7bc:	str	xzr, [x19, #256]
   2e7c0:	ldr	x0, [x19, #320]
   2e7c4:	add	x0, x0, #0x1
   2e7c8:	str	x0, [x19, #320]
   2e7cc:	b	2e6ac <__asan_backtrace_create_state@@Base+0x5d60>
   2e7d0:	strb	wzr, [x19, #255]
   2e7d4:	ldr	x3, [x19, #272]
   2e7d8:	ldr	x2, [x19, #280]
   2e7dc:	mov	x1, #0xff                  	// #255
   2e7e0:	mov	x0, x19
   2e7e4:	blr	x3
   2e7e8:	str	xzr, [x19, #256]
   2e7ec:	ldr	x0, [x19, #320]
   2e7f0:	add	x0, x0, #0x1
   2e7f4:	str	x0, [x19, #320]
   2e7f8:	b	2e6d0 <__asan_backtrace_create_state@@Base+0x5d84>
   2e7fc:	strb	wzr, [x19, #255]
   2e800:	ldr	x3, [x19, #272]
   2e804:	ldr	x2, [x19, #280]
   2e808:	mov	x1, #0xff                  	// #255
   2e80c:	mov	x0, x19
   2e810:	blr	x3
   2e814:	str	xzr, [x19, #256]
   2e818:	ldr	x0, [x19, #320]
   2e81c:	add	x0, x0, #0x1
   2e820:	str	x0, [x19, #320]
   2e824:	b	2e708 <__asan_backtrace_create_state@@Base+0x5dbc>
   2e828:	cbz	x2, 2ec18 <__asan_backtrace_create_state@@Base+0x62cc>
   2e82c:	stp	x29, x30, [sp, #-112]!
   2e830:	mov	x29, sp
   2e834:	stp	x19, x20, [sp, #16]
   2e838:	stp	x21, x22, [sp, #32]
   2e83c:	mov	x19, x0
   2e840:	mov	w22, w1
   2e844:	mov	x20, x2
   2e848:	mov	w21, w3
   2e84c:	ldr	w0, [x0, #304]
   2e850:	cbnz	w0, 2e8d0 <__asan_backtrace_create_state@@Base+0x5f84>
   2e854:	ldr	w0, [x2, #16]
   2e858:	cbnz	w0, 2e8e0 <__asan_backtrace_create_state@@Base+0x5f94>
   2e85c:	cbnz	w3, 2e870 <__asan_backtrace_create_state@@Base+0x5f24>
   2e860:	ldr	x0, [x2, #8]
   2e864:	ldr	w0, [x0]
   2e868:	bl	289e0 <__asan_backtrace_create_state@@Base+0x94>
   2e86c:	cbnz	w0, 2e8e0 <__asan_backtrace_create_state@@Base+0x5f94>
   2e870:	stp	x23, x24, [sp, #48]
   2e874:	mov	w0, #0x1                   	// #1
   2e878:	str	w0, [x20, #16]
   2e87c:	ldr	x23, [x19, #288]
   2e880:	ldr	x0, [x20, #24]
   2e884:	str	x0, [x19, #288]
   2e888:	ldr	x2, [x20, #8]
   2e88c:	ldr	w0, [x2]
   2e890:	cmp	w0, #0x29
   2e894:	b.eq	2e8f8 <__asan_backtrace_create_state@@Base+0x5fac>  // b.none
   2e898:	cmp	w0, #0x2a
   2e89c:	b.eq	2e914 <__asan_backtrace_create_state@@Base+0x5fc8>  // b.none
   2e8a0:	cmp	w0, #0x2
   2e8a4:	b.eq	2e930 <__asan_backtrace_create_state@@Base+0x5fe4>  // b.none
   2e8a8:	mov	w1, w22
   2e8ac:	mov	x0, x19
   2e8b0:	bl	2dacc <__asan_backtrace_create_state@@Base+0x5180>
   2e8b4:	str	x23, [x19, #288]
   2e8b8:	mov	w3, w21
   2e8bc:	ldr	x2, [x20]
   2e8c0:	mov	w1, w22
   2e8c4:	mov	x0, x19
   2e8c8:	bl	2e828 <__asan_backtrace_create_state@@Base+0x5edc>
   2e8cc:	ldp	x23, x24, [sp, #48]
   2e8d0:	ldp	x19, x20, [sp, #16]
   2e8d4:	ldp	x21, x22, [sp, #32]
   2e8d8:	ldp	x29, x30, [sp], #112
   2e8dc:	ret
   2e8e0:	mov	w3, w21
   2e8e4:	ldr	x2, [x20]
   2e8e8:	mov	w1, w22
   2e8ec:	mov	x0, x19
   2e8f0:	bl	2e828 <__asan_backtrace_create_state@@Base+0x5edc>
   2e8f4:	b	2e8d0 <__asan_backtrace_create_state@@Base+0x5f84>
   2e8f8:	ldr	x3, [x20]
   2e8fc:	mov	w1, w22
   2e900:	mov	x0, x19
   2e904:	bl	2e590 <__asan_backtrace_create_state@@Base+0x5c44>
   2e908:	str	x23, [x19, #288]
   2e90c:	ldp	x23, x24, [sp, #48]
   2e910:	b	2e8d0 <__asan_backtrace_create_state@@Base+0x5f84>
   2e914:	ldr	x3, [x20]
   2e918:	mov	w1, w22
   2e91c:	mov	x0, x19
   2e920:	bl	2ec1c <__asan_backtrace_create_state@@Base+0x62d0>
   2e924:	str	x23, [x19, #288]
   2e928:	ldp	x23, x24, [sp, #48]
   2e92c:	b	2e8d0 <__asan_backtrace_create_state@@Base+0x5f84>
   2e930:	ldr	x21, [x19, #296]
   2e934:	str	xzr, [x19, #296]
   2e938:	ldr	x0, [x20, #8]
   2e93c:	ldr	x2, [x0, #8]
   2e940:	mov	w1, w22
   2e944:	mov	x0, x19
   2e948:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2e94c:	str	x21, [x19, #296]
   2e950:	tbz	w22, #2, 2e9a0 <__asan_backtrace_create_state@@Base+0x6054>
   2e954:	ldr	x0, [x19, #256]
   2e958:	cmp	x0, #0xff
   2e95c:	b.eq	2ea2c <__asan_backtrace_create_state@@Base+0x60e0>  // b.none
   2e960:	ldr	x1, [x19, #256]
   2e964:	add	x0, x1, #0x1
   2e968:	str	x0, [x19, #256]
   2e96c:	mov	w0, #0x2e                  	// #46
   2e970:	strb	w0, [x19, x1]
   2e974:	strb	w0, [x19, #264]
   2e978:	ldr	x0, [x20, #8]
   2e97c:	ldr	x20, [x0, #16]
   2e980:	ldr	w0, [x20]
   2e984:	cmp	w0, #0x47
   2e988:	b.eq	2ea58 <__asan_backtrace_create_state@@Base+0x610c>  // b.none
   2e98c:	ldr	w0, [x20]
   2e990:	bl	289e0 <__asan_backtrace_create_state@@Base+0x94>
   2e994:	cbz	w0, 2ebfc <__asan_backtrace_create_state@@Base+0x62b0>
   2e998:	ldr	x20, [x20, #8]
   2e99c:	b	2e98c <__asan_backtrace_create_state@@Base+0x6040>
   2e9a0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e9a4:	add	x0, x0, #0x800
   2e9a8:	bl	64b0 <__asan_internal_strlen@plt>
   2e9ac:	cbz	x0, 2e978 <__asan_backtrace_create_state@@Base+0x602c>
   2e9b0:	stp	x25, x26, [sp, #64]
   2e9b4:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2e9b8:	add	x21, x21, #0x800
   2e9bc:	add	x25, x0, x21
   2e9c0:	mov	x26, #0xff                  	// #255
   2e9c4:	b	2e9e8 <__asan_backtrace_create_state@@Base+0x609c>
   2e9c8:	ldr	x0, [x19, #256]
   2e9cc:	add	x1, x0, #0x1
   2e9d0:	str	x1, [x19, #256]
   2e9d4:	strb	w24, [x19, x0]
   2e9d8:	strb	w24, [x19, #264]
   2e9dc:	add	x21, x21, #0x1
   2e9e0:	cmp	x21, x25
   2e9e4:	b.eq	2ea24 <__asan_backtrace_create_state@@Base+0x60d8>  // b.none
   2e9e8:	ldrb	w24, [x21]
   2e9ec:	ldr	x0, [x19, #256]
   2e9f0:	cmp	x0, #0xff
   2e9f4:	b.ne	2e9c8 <__asan_backtrace_create_state@@Base+0x607c>  // b.any
   2e9f8:	strb	wzr, [x19, #255]
   2e9fc:	ldr	x3, [x19, #272]
   2ea00:	ldr	x2, [x19, #280]
   2ea04:	mov	x1, x26
   2ea08:	mov	x0, x19
   2ea0c:	blr	x3
   2ea10:	str	xzr, [x19, #256]
   2ea14:	ldr	x0, [x19, #320]
   2ea18:	add	x0, x0, #0x1
   2ea1c:	str	x0, [x19, #320]
   2ea20:	b	2e9c8 <__asan_backtrace_create_state@@Base+0x607c>
   2ea24:	ldp	x25, x26, [sp, #64]
   2ea28:	b	2e978 <__asan_backtrace_create_state@@Base+0x602c>
   2ea2c:	strb	wzr, [x19, #255]
   2ea30:	ldr	x3, [x19, #272]
   2ea34:	ldr	x2, [x19, #280]
   2ea38:	mov	x1, #0xff                  	// #255
   2ea3c:	mov	x0, x19
   2ea40:	blr	x3
   2ea44:	str	xzr, [x19, #256]
   2ea48:	ldr	x0, [x19, #320]
   2ea4c:	add	x0, x0, #0x1
   2ea50:	str	x0, [x19, #320]
   2ea54:	b	2e960 <__asan_backtrace_create_state@@Base+0x6014>
   2ea58:	stp	x25, x26, [sp, #64]
   2ea5c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ea60:	add	x0, x0, #0x808
   2ea64:	bl	64b0 <__asan_internal_strlen@plt>
   2ea68:	cbz	x0, 2eadc <__asan_backtrace_create_state@@Base+0x6190>
   2ea6c:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ea70:	add	x21, x21, #0x808
   2ea74:	add	x25, x0, x21
   2ea78:	mov	x26, #0xff                  	// #255
   2ea7c:	b	2eaa0 <__asan_backtrace_create_state@@Base+0x6154>
   2ea80:	ldr	x0, [x19, #256]
   2ea84:	add	x1, x0, #0x1
   2ea88:	str	x1, [x19, #256]
   2ea8c:	strb	w24, [x19, x0]
   2ea90:	strb	w24, [x19, #264]
   2ea94:	add	x21, x21, #0x1
   2ea98:	cmp	x21, x25
   2ea9c:	b.eq	2eadc <__asan_backtrace_create_state@@Base+0x6190>  // b.none
   2eaa0:	ldrb	w24, [x21]
   2eaa4:	ldr	x0, [x19, #256]
   2eaa8:	cmp	x0, #0xff
   2eaac:	b.ne	2ea80 <__asan_backtrace_create_state@@Base+0x6134>  // b.any
   2eab0:	strb	wzr, [x19, #255]
   2eab4:	ldr	x3, [x19, #272]
   2eab8:	ldr	x2, [x19, #280]
   2eabc:	mov	x1, x26
   2eac0:	mov	x0, x19
   2eac4:	blr	x3
   2eac8:	str	xzr, [x19, #256]
   2eacc:	ldr	x0, [x19, #320]
   2ead0:	add	x0, x0, #0x1
   2ead4:	str	x0, [x19, #320]
   2ead8:	b	2ea80 <__asan_backtrace_create_state@@Base+0x6134>
   2eadc:	ldr	w2, [x20, #16]
   2eae0:	add	x21, sp, #0x50
   2eae4:	add	w2, w2, #0x1
   2eae8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x6150>
   2eaec:	add	x1, x1, #0xca8
   2eaf0:	mov	x0, x21
   2eaf4:	bl	65f0 <sprintf@plt>
   2eaf8:	mov	x0, x21
   2eafc:	bl	64b0 <__asan_internal_strlen@plt>
   2eb00:	cbz	x0, 2eb70 <__asan_backtrace_create_state@@Base+0x6224>
   2eb04:	add	x21, sp, #0x50
   2eb08:	add	x25, x0, x21
   2eb0c:	mov	x26, #0xff                  	// #255
   2eb10:	b	2eb34 <__asan_backtrace_create_state@@Base+0x61e8>
   2eb14:	ldr	x0, [x19, #256]
   2eb18:	add	x1, x0, #0x1
   2eb1c:	str	x1, [x19, #256]
   2eb20:	strb	w24, [x19, x0]
   2eb24:	strb	w24, [x19, #264]
   2eb28:	add	x21, x21, #0x1
   2eb2c:	cmp	x21, x25
   2eb30:	b.eq	2eb70 <__asan_backtrace_create_state@@Base+0x6224>  // b.none
   2eb34:	ldrb	w24, [x21]
   2eb38:	ldr	x0, [x19, #256]
   2eb3c:	cmp	x0, #0xff
   2eb40:	b.ne	2eb14 <__asan_backtrace_create_state@@Base+0x61c8>  // b.any
   2eb44:	strb	wzr, [x19, #255]
   2eb48:	ldr	x3, [x19, #272]
   2eb4c:	ldr	x2, [x19, #280]
   2eb50:	mov	x1, x26
   2eb54:	mov	x0, x19
   2eb58:	blr	x3
   2eb5c:	str	xzr, [x19, #256]
   2eb60:	ldr	x0, [x19, #320]
   2eb64:	add	x0, x0, #0x1
   2eb68:	str	x0, [x19, #320]
   2eb6c:	b	2eb14 <__asan_backtrace_create_state@@Base+0x61c8>
   2eb70:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2eb74:	add	x0, x0, #0x818
   2eb78:	bl	64b0 <__asan_internal_strlen@plt>
   2eb7c:	cbz	x0, 2ebf0 <__asan_backtrace_create_state@@Base+0x62a4>
   2eb80:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2eb84:	add	x21, x21, #0x818
   2eb88:	add	x25, x21, x0
   2eb8c:	mov	x26, #0xff                  	// #255
   2eb90:	b	2ebb4 <__asan_backtrace_create_state@@Base+0x6268>
   2eb94:	ldr	x0, [x19, #256]
   2eb98:	add	x1, x0, #0x1
   2eb9c:	str	x1, [x19, #256]
   2eba0:	strb	w24, [x19, x0]
   2eba4:	strb	w24, [x19, #264]
   2eba8:	add	x21, x21, #0x1
   2ebac:	cmp	x25, x21
   2ebb0:	b.eq	2ebf0 <__asan_backtrace_create_state@@Base+0x62a4>  // b.none
   2ebb4:	ldrb	w24, [x21]
   2ebb8:	ldr	x0, [x19, #256]
   2ebbc:	cmp	x0, #0xff
   2ebc0:	b.ne	2eb94 <__asan_backtrace_create_state@@Base+0x6248>  // b.any
   2ebc4:	strb	wzr, [x19, #255]
   2ebc8:	ldr	x3, [x19, #272]
   2ebcc:	ldr	x2, [x19, #280]
   2ebd0:	mov	x1, x26
   2ebd4:	mov	x0, x19
   2ebd8:	blr	x3
   2ebdc:	str	xzr, [x19, #256]
   2ebe0:	ldr	x0, [x19, #320]
   2ebe4:	add	x0, x0, #0x1
   2ebe8:	str	x0, [x19, #320]
   2ebec:	b	2eb94 <__asan_backtrace_create_state@@Base+0x6248>
   2ebf0:	ldr	x20, [x20, #8]
   2ebf4:	ldp	x25, x26, [sp, #64]
   2ebf8:	b	2e98c <__asan_backtrace_create_state@@Base+0x6040>
   2ebfc:	mov	x2, x20
   2ec00:	mov	w1, w22
   2ec04:	mov	x0, x19
   2ec08:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2ec0c:	str	x23, [x19, #288]
   2ec10:	ldp	x23, x24, [sp, #48]
   2ec14:	b	2e8d0 <__asan_backtrace_create_state@@Base+0x5f84>
   2ec18:	ret
   2ec1c:	stp	x29, x30, [sp, #-80]!
   2ec20:	mov	x29, sp
   2ec24:	stp	x19, x20, [sp, #16]
   2ec28:	stp	x21, x22, [sp, #32]
   2ec2c:	stp	x23, x24, [sp, #48]
   2ec30:	mov	x19, x0
   2ec34:	mov	w22, w1
   2ec38:	mov	x24, x2
   2ec3c:	cbz	x3, 2ed48 <__asan_backtrace_create_state@@Base+0x63fc>
   2ec40:	mov	x21, x3
   2ec44:	mov	x0, x3
   2ec48:	ldr	w20, [x0, #16]
   2ec4c:	cbz	w20, 2ec78 <__asan_backtrace_create_state@@Base+0x632c>
   2ec50:	ldr	x0, [x0]
   2ec54:	cbnz	x0, 2ec48 <__asan_backtrace_create_state@@Base+0x62fc>
   2ec58:	mov	w20, #0x1                   	// #1
   2ec5c:	mov	w3, #0x0                   	// #0
   2ec60:	mov	x2, x21
   2ec64:	mov	w1, w22
   2ec68:	mov	x0, x19
   2ec6c:	bl	2e828 <__asan_backtrace_create_state@@Base+0x5edc>
   2ec70:	cbz	w20, 2ed6c <__asan_backtrace_create_state@@Base+0x6420>
   2ec74:	b	2ed48 <__asan_backtrace_create_state@@Base+0x63fc>
   2ec78:	ldr	x0, [x0, #8]
   2ec7c:	ldr	w0, [x0]
   2ec80:	cmp	w0, #0x2a
   2ec84:	b.eq	2ec5c <__asan_backtrace_create_state@@Base+0x6310>  // b.none
   2ec88:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2ec8c:	add	x0, x0, #0xab0
   2ec90:	bl	64b0 <__asan_internal_strlen@plt>
   2ec94:	cbz	x0, 2ed10 <__asan_backtrace_create_state@@Base+0x63c4>
   2ec98:	stp	x25, x26, [sp, #64]
   2ec9c:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2eca0:	add	x20, x20, #0xab0
   2eca4:	add	x25, x0, x20
   2eca8:	mov	x26, #0xff                  	// #255
   2ecac:	b	2ecd0 <__asan_backtrace_create_state@@Base+0x6384>
   2ecb0:	ldr	x0, [x19, #256]
   2ecb4:	add	x1, x0, #0x1
   2ecb8:	str	x1, [x19, #256]
   2ecbc:	strb	w23, [x19, x0]
   2ecc0:	strb	w23, [x19, #264]
   2ecc4:	add	x20, x20, #0x1
   2ecc8:	cmp	x25, x20
   2eccc:	b.eq	2ed0c <__asan_backtrace_create_state@@Base+0x63c0>  // b.none
   2ecd0:	ldrb	w23, [x20]
   2ecd4:	ldr	x0, [x19, #256]
   2ecd8:	cmp	x0, #0xff
   2ecdc:	b.ne	2ecb0 <__asan_backtrace_create_state@@Base+0x6364>  // b.any
   2ece0:	strb	wzr, [x19, #255]
   2ece4:	ldr	x3, [x19, #272]
   2ece8:	ldr	x2, [x19, #280]
   2ecec:	mov	x1, x26
   2ecf0:	mov	x0, x19
   2ecf4:	blr	x3
   2ecf8:	str	xzr, [x19, #256]
   2ecfc:	ldr	x0, [x19, #320]
   2ed00:	add	x0, x0, #0x1
   2ed04:	str	x0, [x19, #320]
   2ed08:	b	2ecb0 <__asan_backtrace_create_state@@Base+0x6364>
   2ed0c:	ldp	x25, x26, [sp, #64]
   2ed10:	mov	w3, #0x0                   	// #0
   2ed14:	mov	x2, x21
   2ed18:	mov	w1, w22
   2ed1c:	mov	x0, x19
   2ed20:	bl	2e828 <__asan_backtrace_create_state@@Base+0x5edc>
   2ed24:	ldr	x0, [x19, #256]
   2ed28:	cmp	x0, #0xff
   2ed2c:	b.eq	2eddc <__asan_backtrace_create_state@@Base+0x6490>  // b.none
   2ed30:	ldr	x1, [x19, #256]
   2ed34:	add	x0, x1, #0x1
   2ed38:	str	x0, [x19, #256]
   2ed3c:	mov	w0, #0x29                  	// #41
   2ed40:	strb	w0, [x19, x1]
   2ed44:	strb	w0, [x19, #264]
   2ed48:	ldr	x0, [x19, #256]
   2ed4c:	cmp	x0, #0xff
   2ed50:	b.eq	2ee08 <__asan_backtrace_create_state@@Base+0x64bc>  // b.none
   2ed54:	ldr	x1, [x19, #256]
   2ed58:	add	x0, x1, #0x1
   2ed5c:	str	x0, [x19, #256]
   2ed60:	mov	w0, #0x20                  	// #32
   2ed64:	strb	w0, [x19, x1]
   2ed68:	strb	w0, [x19, #264]
   2ed6c:	ldr	x0, [x19, #256]
   2ed70:	cmp	x0, #0xff
   2ed74:	b.eq	2ee34 <__asan_backtrace_create_state@@Base+0x64e8>  // b.none
   2ed78:	ldr	x1, [x19, #256]
   2ed7c:	add	x0, x1, #0x1
   2ed80:	str	x0, [x19, #256]
   2ed84:	mov	w0, #0x5b                  	// #91
   2ed88:	strb	w0, [x19, x1]
   2ed8c:	strb	w0, [x19, #264]
   2ed90:	ldr	x2, [x24, #8]
   2ed94:	cbz	x2, 2eda4 <__asan_backtrace_create_state@@Base+0x6458>
   2ed98:	mov	w1, w22
   2ed9c:	mov	x0, x19
   2eda0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2eda4:	ldr	x0, [x19, #256]
   2eda8:	cmp	x0, #0xff
   2edac:	b.eq	2ee60 <__asan_backtrace_create_state@@Base+0x6514>  // b.none
   2edb0:	ldr	x1, [x19, #256]
   2edb4:	add	x0, x1, #0x1
   2edb8:	str	x0, [x19, #256]
   2edbc:	mov	w0, #0x5d                  	// #93
   2edc0:	strb	w0, [x19, x1]
   2edc4:	strb	w0, [x19, #264]
   2edc8:	ldp	x19, x20, [sp, #16]
   2edcc:	ldp	x21, x22, [sp, #32]
   2edd0:	ldp	x23, x24, [sp, #48]
   2edd4:	ldp	x29, x30, [sp], #80
   2edd8:	ret
   2eddc:	strb	wzr, [x19, #255]
   2ede0:	ldr	x3, [x19, #272]
   2ede4:	ldr	x2, [x19, #280]
   2ede8:	mov	x1, #0xff                  	// #255
   2edec:	mov	x0, x19
   2edf0:	blr	x3
   2edf4:	str	xzr, [x19, #256]
   2edf8:	ldr	x0, [x19, #320]
   2edfc:	add	x0, x0, #0x1
   2ee00:	str	x0, [x19, #320]
   2ee04:	b	2ed30 <__asan_backtrace_create_state@@Base+0x63e4>
   2ee08:	strb	wzr, [x19, #255]
   2ee0c:	ldr	x3, [x19, #272]
   2ee10:	ldr	x2, [x19, #280]
   2ee14:	mov	x1, #0xff                  	// #255
   2ee18:	mov	x0, x19
   2ee1c:	blr	x3
   2ee20:	str	xzr, [x19, #256]
   2ee24:	ldr	x0, [x19, #320]
   2ee28:	add	x0, x0, #0x1
   2ee2c:	str	x0, [x19, #320]
   2ee30:	b	2ed54 <__asan_backtrace_create_state@@Base+0x6408>
   2ee34:	strb	wzr, [x19, #255]
   2ee38:	ldr	x3, [x19, #272]
   2ee3c:	ldr	x2, [x19, #280]
   2ee40:	mov	x1, #0xff                  	// #255
   2ee44:	mov	x0, x19
   2ee48:	blr	x3
   2ee4c:	str	xzr, [x19, #256]
   2ee50:	ldr	x0, [x19, #320]
   2ee54:	add	x0, x0, #0x1
   2ee58:	str	x0, [x19, #320]
   2ee5c:	b	2ed78 <__asan_backtrace_create_state@@Base+0x642c>
   2ee60:	strb	wzr, [x19, #255]
   2ee64:	ldr	x3, [x19, #272]
   2ee68:	ldr	x2, [x19, #280]
   2ee6c:	mov	x1, #0xff                  	// #255
   2ee70:	mov	x0, x19
   2ee74:	blr	x3
   2ee78:	str	xzr, [x19, #256]
   2ee7c:	ldr	x0, [x19, #320]
   2ee80:	add	x0, x0, #0x1
   2ee84:	str	x0, [x19, #320]
   2ee88:	b	2edb0 <__asan_backtrace_create_state@@Base+0x6464>
   2ee8c:	stp	x29, x30, [sp, #-64]!
   2ee90:	mov	x29, sp
   2ee94:	stp	x19, x20, [sp, #16]
   2ee98:	mov	x19, x0
   2ee9c:	ldr	w0, [x2]
   2eea0:	cmp	w0, #0x32
   2eea4:	b.eq	2eebc <__asan_backtrace_create_state@@Base+0x6570>  // b.none
   2eea8:	mov	x0, x19
   2eeac:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2eeb0:	ldp	x19, x20, [sp, #16]
   2eeb4:	ldp	x29, x30, [sp], #64
   2eeb8:	ret
   2eebc:	stp	x21, x22, [sp, #32]
   2eec0:	ldr	x0, [x2, #8]
   2eec4:	ldr	x22, [x0, #8]
   2eec8:	ldrsw	x0, [x0, #16]
   2eecc:	cbz	x0, 2ef4c <__asan_backtrace_create_state@@Base+0x6600>
   2eed0:	str	x23, [sp, #48]
   2eed4:	mov	x20, x22
   2eed8:	add	x22, x22, x0
   2eedc:	mov	x23, #0xff                  	// #255
   2eee0:	b	2ef04 <__asan_backtrace_create_state@@Base+0x65b8>
   2eee4:	ldr	x0, [x19, #256]
   2eee8:	add	x1, x0, #0x1
   2eeec:	str	x1, [x19, #256]
   2eef0:	strb	w21, [x19, x0]
   2eef4:	strb	w21, [x19, #264]
   2eef8:	add	x20, x20, #0x1
   2eefc:	cmp	x20, x22
   2ef00:	b.eq	2ef40 <__asan_backtrace_create_state@@Base+0x65f4>  // b.none
   2ef04:	ldrb	w21, [x20]
   2ef08:	ldr	x0, [x19, #256]
   2ef0c:	cmp	x0, #0xff
   2ef10:	b.ne	2eee4 <__asan_backtrace_create_state@@Base+0x6598>  // b.any
   2ef14:	strb	wzr, [x19, #255]
   2ef18:	ldr	x3, [x19, #272]
   2ef1c:	ldr	x2, [x19, #280]
   2ef20:	mov	x1, x23
   2ef24:	mov	x0, x19
   2ef28:	blr	x3
   2ef2c:	str	xzr, [x19, #256]
   2ef30:	ldr	x0, [x19, #320]
   2ef34:	add	x0, x0, #0x1
   2ef38:	str	x0, [x19, #320]
   2ef3c:	b	2eee4 <__asan_backtrace_create_state@@Base+0x6598>
   2ef40:	ldp	x21, x22, [sp, #32]
   2ef44:	ldr	x23, [sp, #48]
   2ef48:	b	2eeb0 <__asan_backtrace_create_state@@Base+0x6564>
   2ef4c:	ldp	x21, x22, [sp, #32]
   2ef50:	b	2eeb0 <__asan_backtrace_create_state@@Base+0x6564>
   2ef54:	stp	x29, x30, [sp, #-48]!
   2ef58:	mov	x29, sp
   2ef5c:	stp	x19, x20, [sp, #16]
   2ef60:	str	x21, [sp, #32]
   2ef64:	mov	x19, x0
   2ef68:	mov	w21, w1
   2ef6c:	mov	x20, x2
   2ef70:	ldr	w0, [x2]
   2ef74:	cmp	w0, #0x31
   2ef78:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   2ef7c:	ccmp	w0, #0x6, #0x4, hi  // hi = pmore
   2ef80:	b.ne	2ef90 <__asan_backtrace_create_state@@Base+0x6644>  // b.any
   2ef84:	mov	x0, x19
   2ef88:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2ef8c:	b	2efe8 <__asan_backtrace_create_state@@Base+0x669c>
   2ef90:	ldr	x0, [x19, #256]
   2ef94:	cmp	x0, #0xff
   2ef98:	b.eq	2eff8 <__asan_backtrace_create_state@@Base+0x66ac>  // b.none
   2ef9c:	ldr	x1, [x19, #256]
   2efa0:	add	x0, x1, #0x1
   2efa4:	str	x0, [x19, #256]
   2efa8:	mov	w0, #0x28                  	// #40
   2efac:	strb	w0, [x19, x1]
   2efb0:	strb	w0, [x19, #264]
   2efb4:	mov	x2, x20
   2efb8:	mov	w1, w21
   2efbc:	mov	x0, x19
   2efc0:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   2efc4:	ldr	x0, [x19, #256]
   2efc8:	cmp	x0, #0xff
   2efcc:	b.eq	2f024 <__asan_backtrace_create_state@@Base+0x66d8>  // b.none
   2efd0:	ldr	x1, [x19, #256]
   2efd4:	add	x0, x1, #0x1
   2efd8:	str	x0, [x19, #256]
   2efdc:	mov	w0, #0x29                  	// #41
   2efe0:	strb	w0, [x19, x1]
   2efe4:	strb	w0, [x19, #264]
   2efe8:	ldp	x19, x20, [sp, #16]
   2efec:	ldr	x21, [sp, #32]
   2eff0:	ldp	x29, x30, [sp], #48
   2eff4:	ret
   2eff8:	strb	wzr, [x19, #255]
   2effc:	ldr	x3, [x19, #272]
   2f000:	ldr	x2, [x19, #280]
   2f004:	mov	x1, #0xff                  	// #255
   2f008:	mov	x0, x19
   2f00c:	blr	x3
   2f010:	str	xzr, [x19, #256]
   2f014:	ldr	x0, [x19, #320]
   2f018:	add	x0, x0, #0x1
   2f01c:	str	x0, [x19, #320]
   2f020:	b	2ef9c <__asan_backtrace_create_state@@Base+0x6650>
   2f024:	strb	wzr, [x19, #255]
   2f028:	ldr	x3, [x19, #272]
   2f02c:	ldr	x2, [x19, #280]
   2f030:	mov	x1, #0xff                  	// #255
   2f034:	mov	x0, x19
   2f038:	blr	x3
   2f03c:	str	xzr, [x19, #256]
   2f040:	ldr	x0, [x19, #320]
   2f044:	add	x0, x0, #0x1
   2f048:	str	x0, [x19, #320]
   2f04c:	b	2efd0 <__asan_backtrace_create_state@@Base+0x6684>
   2f050:	stp	x29, x30, [sp, #-96]!
   2f054:	mov	x29, sp
   2f058:	stp	x19, x20, [sp, #16]
   2f05c:	stp	x21, x22, [sp, #32]
   2f060:	mov	x19, x0
   2f064:	mov	w21, w1
   2f068:	ldr	x0, [x2, #8]
   2f06c:	ldr	x0, [x0, #8]
   2f070:	ldr	x0, [x0]
   2f074:	ldrb	w1, [x0]
   2f078:	cmp	w1, #0x66
   2f07c:	b.ne	2f458 <__asan_backtrace_create_state@@Base+0x6b0c>  // b.any
   2f080:	stp	x23, x24, [sp, #48]
   2f084:	stp	x25, x26, [sp, #64]
   2f088:	ldr	x1, [x2, #16]
   2f08c:	ldr	x24, [x1, #8]
   2f090:	ldr	x25, [x1, #16]
   2f094:	ldr	w1, [x25]
   2f098:	mov	x26, #0x0                   	// #0
   2f09c:	cmp	w1, #0x3c
   2f0a0:	b.eq	2f13c <__asan_backtrace_create_state@@Base+0x67f0>  // b.none
   2f0a4:	ldr	w23, [x19, #316]
   2f0a8:	mov	w1, #0xffffffff            	// #-1
   2f0ac:	str	w1, [x19, #316]
   2f0b0:	ldrb	w0, [x0, #1]
   2f0b4:	cmp	w0, #0x6c
   2f0b8:	b.eq	2f1b8 <__asan_backtrace_create_state@@Base+0x686c>  // b.none
   2f0bc:	b.hi	2f148 <__asan_backtrace_create_state@@Base+0x67fc>  // b.pmore
   2f0c0:	cmp	w0, #0x4c
   2f0c4:	b.eq	2f0d0 <__asan_backtrace_create_state@@Base+0x6784>  // b.none
   2f0c8:	cmp	w0, #0x52
   2f0cc:	b.ne	2f284 <__asan_backtrace_create_state@@Base+0x6938>  // b.any
   2f0d0:	ldr	x0, [x19, #256]
   2f0d4:	cmp	x0, #0xff
   2f0d8:	b.eq	2f358 <__asan_backtrace_create_state@@Base+0x6a0c>  // b.none
   2f0dc:	ldr	x1, [x19, #256]
   2f0e0:	add	x0, x1, #0x1
   2f0e4:	str	x0, [x19, #256]
   2f0e8:	mov	w0, #0x28                  	// #40
   2f0ec:	strb	w0, [x19, x1]
   2f0f0:	strb	w0, [x19, #264]
   2f0f4:	mov	x2, x25
   2f0f8:	mov	w1, w21
   2f0fc:	mov	x0, x19
   2f100:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2f104:	mov	x2, x24
   2f108:	mov	w1, w21
   2f10c:	mov	x0, x19
   2f110:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2f114:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   2f118:	add	x0, x0, #0x4c0
   2f11c:	bl	64b0 <__asan_internal_strlen@plt>
   2f120:	cbz	x0, 2f3e4 <__asan_backtrace_create_state@@Base+0x6a98>
   2f124:	str	x27, [sp, #80]
   2f128:	adrp	x20, 3b000 <__asan_backtrace_vector_release@@Base+0x4150>
   2f12c:	add	x20, x20, #0x4c0
   2f130:	add	x25, x0, x20
   2f134:	mov	x27, #0xff                  	// #255
   2f138:	b	2f3a4 <__asan_backtrace_create_state@@Base+0x6a58>
   2f13c:	ldr	x26, [x25, #16]
   2f140:	ldr	x25, [x25, #8]
   2f144:	b	2f0a4 <__asan_backtrace_create_state@@Base+0x6758>
   2f148:	cmp	w0, #0x72
   2f14c:	b.ne	2f284 <__asan_backtrace_create_state@@Base+0x6938>  // b.any
   2f150:	ldr	x0, [x19, #256]
   2f154:	cmp	x0, #0xff
   2f158:	b.eq	2f2d0 <__asan_backtrace_create_state@@Base+0x6984>  // b.none
   2f15c:	ldr	x1, [x19, #256]
   2f160:	add	x0, x1, #0x1
   2f164:	str	x0, [x19, #256]
   2f168:	mov	w0, #0x28                  	// #40
   2f16c:	strb	w0, [x19, x1]
   2f170:	strb	w0, [x19, #264]
   2f174:	mov	x2, x25
   2f178:	mov	w1, w21
   2f17c:	mov	x0, x19
   2f180:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2f184:	mov	x2, x24
   2f188:	mov	w1, w21
   2f18c:	mov	x0, x19
   2f190:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2f194:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2f198:	add	x0, x0, #0xbe8
   2f19c:	bl	64b0 <__asan_internal_strlen@plt>
   2f1a0:	cbz	x0, 2f284 <__asan_backtrace_create_state@@Base+0x6938>
   2f1a4:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2f1a8:	add	x20, x20, #0xbe8
   2f1ac:	add	x22, x0, x20
   2f1b0:	mov	x24, #0xff                  	// #255
   2f1b4:	b	2f31c <__asan_backtrace_create_state@@Base+0x69d0>
   2f1b8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2f1bc:	add	x0, x0, #0xbe0
   2f1c0:	bl	64b0 <__asan_internal_strlen@plt>
   2f1c4:	cbz	x0, 2f240 <__asan_backtrace_create_state@@Base+0x68f4>
   2f1c8:	str	x27, [sp, #80]
   2f1cc:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2f1d0:	add	x20, x20, #0xbe0
   2f1d4:	add	x26, x0, x20
   2f1d8:	mov	x27, #0xff                  	// #255
   2f1dc:	b	2f200 <__asan_backtrace_create_state@@Base+0x68b4>
   2f1e0:	ldr	x0, [x19, #256]
   2f1e4:	add	x1, x0, #0x1
   2f1e8:	str	x1, [x19, #256]
   2f1ec:	strb	w22, [x19, x0]
   2f1f0:	strb	w22, [x19, #264]
   2f1f4:	add	x20, x20, #0x1
   2f1f8:	cmp	x26, x20
   2f1fc:	b.eq	2f23c <__asan_backtrace_create_state@@Base+0x68f0>  // b.none
   2f200:	ldrb	w22, [x20]
   2f204:	ldr	x0, [x19, #256]
   2f208:	cmp	x0, #0xff
   2f20c:	b.ne	2f1e0 <__asan_backtrace_create_state@@Base+0x6894>  // b.any
   2f210:	strb	wzr, [x19, #255]
   2f214:	ldr	x3, [x19, #272]
   2f218:	ldr	x2, [x19, #280]
   2f21c:	mov	x1, x27
   2f220:	mov	x0, x19
   2f224:	blr	x3
   2f228:	str	xzr, [x19, #256]
   2f22c:	ldr	x0, [x19, #320]
   2f230:	add	x0, x0, #0x1
   2f234:	str	x0, [x19, #320]
   2f238:	b	2f1e0 <__asan_backtrace_create_state@@Base+0x6894>
   2f23c:	ldr	x27, [sp, #80]
   2f240:	mov	x2, x24
   2f244:	mov	w1, w21
   2f248:	mov	x0, x19
   2f24c:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2f250:	mov	x2, x25
   2f254:	mov	w1, w21
   2f258:	mov	x0, x19
   2f25c:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2f260:	ldr	x0, [x19, #256]
   2f264:	cmp	x0, #0xff
   2f268:	b.eq	2f2a4 <__asan_backtrace_create_state@@Base+0x6958>  // b.none
   2f26c:	ldr	x1, [x19, #256]
   2f270:	add	x0, x1, #0x1
   2f274:	str	x0, [x19, #256]
   2f278:	mov	w0, #0x29                  	// #41
   2f27c:	strb	w0, [x19, x1]
   2f280:	strb	w0, [x19, #264]
   2f284:	str	w23, [x19, #316]
   2f288:	mov	w0, #0x1                   	// #1
   2f28c:	ldp	x23, x24, [sp, #48]
   2f290:	ldp	x25, x26, [sp, #64]
   2f294:	ldp	x19, x20, [sp, #16]
   2f298:	ldp	x21, x22, [sp, #32]
   2f29c:	ldp	x29, x30, [sp], #96
   2f2a0:	ret
   2f2a4:	strb	wzr, [x19, #255]
   2f2a8:	ldr	x3, [x19, #272]
   2f2ac:	ldr	x2, [x19, #280]
   2f2b0:	mov	x1, #0xff                  	// #255
   2f2b4:	mov	x0, x19
   2f2b8:	blr	x3
   2f2bc:	str	xzr, [x19, #256]
   2f2c0:	ldr	x0, [x19, #320]
   2f2c4:	add	x0, x0, #0x1
   2f2c8:	str	x0, [x19, #320]
   2f2cc:	b	2f26c <__asan_backtrace_create_state@@Base+0x6920>
   2f2d0:	strb	wzr, [x19, #255]
   2f2d4:	ldr	x3, [x19, #272]
   2f2d8:	ldr	x2, [x19, #280]
   2f2dc:	mov	x1, #0xff                  	// #255
   2f2e0:	mov	x0, x19
   2f2e4:	blr	x3
   2f2e8:	str	xzr, [x19, #256]
   2f2ec:	ldr	x0, [x19, #320]
   2f2f0:	add	x0, x0, #0x1
   2f2f4:	str	x0, [x19, #320]
   2f2f8:	b	2f15c <__asan_backtrace_create_state@@Base+0x6810>
   2f2fc:	ldr	x0, [x19, #256]
   2f300:	add	x1, x0, #0x1
   2f304:	str	x1, [x19, #256]
   2f308:	strb	w21, [x19, x0]
   2f30c:	strb	w21, [x19, #264]
   2f310:	add	x20, x20, #0x1
   2f314:	cmp	x20, x22
   2f318:	b.eq	2f284 <__asan_backtrace_create_state@@Base+0x6938>  // b.none
   2f31c:	ldrb	w21, [x20]
   2f320:	ldr	x0, [x19, #256]
   2f324:	cmp	x0, #0xff
   2f328:	b.ne	2f2fc <__asan_backtrace_create_state@@Base+0x69b0>  // b.any
   2f32c:	strb	wzr, [x19, #255]
   2f330:	ldr	x3, [x19, #272]
   2f334:	ldr	x2, [x19, #280]
   2f338:	mov	x1, x24
   2f33c:	mov	x0, x19
   2f340:	blr	x3
   2f344:	str	xzr, [x19, #256]
   2f348:	ldr	x0, [x19, #320]
   2f34c:	add	x0, x0, #0x1
   2f350:	str	x0, [x19, #320]
   2f354:	b	2f2fc <__asan_backtrace_create_state@@Base+0x69b0>
   2f358:	strb	wzr, [x19, #255]
   2f35c:	ldr	x3, [x19, #272]
   2f360:	ldr	x2, [x19, #280]
   2f364:	mov	x1, #0xff                  	// #255
   2f368:	mov	x0, x19
   2f36c:	blr	x3
   2f370:	str	xzr, [x19, #256]
   2f374:	ldr	x0, [x19, #320]
   2f378:	add	x0, x0, #0x1
   2f37c:	str	x0, [x19, #320]
   2f380:	b	2f0dc <__asan_backtrace_create_state@@Base+0x6790>
   2f384:	ldr	x0, [x19, #256]
   2f388:	add	x1, x0, #0x1
   2f38c:	str	x1, [x19, #256]
   2f390:	strb	w22, [x19, x0]
   2f394:	strb	w22, [x19, #264]
   2f398:	add	x20, x20, #0x1
   2f39c:	cmp	x20, x25
   2f3a0:	b.eq	2f3e0 <__asan_backtrace_create_state@@Base+0x6a94>  // b.none
   2f3a4:	ldrb	w22, [x20]
   2f3a8:	ldr	x0, [x19, #256]
   2f3ac:	cmp	x0, #0xff
   2f3b0:	b.ne	2f384 <__asan_backtrace_create_state@@Base+0x6a38>  // b.any
   2f3b4:	strb	wzr, [x19, #255]
   2f3b8:	ldr	x3, [x19, #272]
   2f3bc:	ldr	x2, [x19, #280]
   2f3c0:	mov	x1, x27
   2f3c4:	mov	x0, x19
   2f3c8:	blr	x3
   2f3cc:	str	xzr, [x19, #256]
   2f3d0:	ldr	x0, [x19, #320]
   2f3d4:	add	x0, x0, #0x1
   2f3d8:	str	x0, [x19, #320]
   2f3dc:	b	2f384 <__asan_backtrace_create_state@@Base+0x6a38>
   2f3e0:	ldr	x27, [sp, #80]
   2f3e4:	mov	x2, x24
   2f3e8:	mov	w1, w21
   2f3ec:	mov	x0, x19
   2f3f0:	bl	2ee8c <__asan_backtrace_create_state@@Base+0x6540>
   2f3f4:	mov	x2, x26
   2f3f8:	mov	w1, w21
   2f3fc:	mov	x0, x19
   2f400:	bl	2ef54 <__asan_backtrace_create_state@@Base+0x6608>
   2f404:	ldr	x0, [x19, #256]
   2f408:	cmp	x0, #0xff
   2f40c:	b.eq	2f42c <__asan_backtrace_create_state@@Base+0x6ae0>  // b.none
   2f410:	ldr	x1, [x19, #256]
   2f414:	add	x0, x1, #0x1
   2f418:	str	x0, [x19, #256]
   2f41c:	mov	w0, #0x29                  	// #41
   2f420:	strb	w0, [x19, x1]
   2f424:	strb	w0, [x19, #264]
   2f428:	b	2f284 <__asan_backtrace_create_state@@Base+0x6938>
   2f42c:	strb	wzr, [x19, #255]
   2f430:	ldr	x3, [x19, #272]
   2f434:	ldr	x2, [x19, #280]
   2f438:	mov	x1, #0xff                  	// #255
   2f43c:	mov	x0, x19
   2f440:	blr	x3
   2f444:	str	xzr, [x19, #256]
   2f448:	ldr	x0, [x19, #320]
   2f44c:	add	x0, x0, #0x1
   2f450:	str	x0, [x19, #320]
   2f454:	b	2f410 <__asan_backtrace_create_state@@Base+0x6ac4>
   2f458:	mov	w0, #0x0                   	// #0
   2f45c:	b	2f294 <__asan_backtrace_create_state@@Base+0x6948>

000000000002f460 <__asan_cplus_demangle_fill_name@@Base>:
   2f460:	cmp	x1, #0x0
   2f464:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   2f468:	ccmp	x0, #0x0, #0x4, gt
   2f46c:	b.ne	2f478 <__asan_cplus_demangle_fill_name@@Base+0x18>  // b.any
   2f470:	mov	w0, #0x0                   	// #0
   2f474:	ret
   2f478:	str	wzr, [x0, #4]
   2f47c:	str	wzr, [x0]
   2f480:	str	x1, [x0, #8]
   2f484:	str	w2, [x0, #16]
   2f488:	mov	w0, #0x1                   	// #1
   2f48c:	b	2f474 <__asan_cplus_demangle_fill_name@@Base+0x14>
   2f490:	stp	x29, x30, [sp, #-48]!
   2f494:	mov	x29, sp
   2f498:	stp	x19, x20, [sp, #16]
   2f49c:	str	x21, [sp, #32]
   2f4a0:	mov	x20, x1
   2f4a4:	mov	w21, w2
   2f4a8:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   2f4ac:	mov	x19, x0
   2f4b0:	mov	w2, w21
   2f4b4:	mov	x1, x20
   2f4b8:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   2f4bc:	cmp	w0, #0x0
   2f4c0:	csel	x0, x19, xzr, ne  // ne = any
   2f4c4:	ldp	x19, x20, [sp, #16]
   2f4c8:	ldr	x21, [sp, #32]
   2f4cc:	ldp	x29, x30, [sp], #48
   2f4d0:	ret
   2f4d4:	stp	x29, x30, [sp, #-48]!
   2f4d8:	mov	x29, sp
   2f4dc:	stp	x19, x20, [sp, #16]
   2f4e0:	mov	x19, x0
   2f4e4:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   2f4e8:	cmp	w0, #0x0
   2f4ec:	b.le	2f5d0 <__asan_cplus_demangle_fill_name@@Base+0x170>
   2f4f0:	str	x21, [sp, #32]
   2f4f4:	mov	w20, w0
   2f4f8:	ldr	x21, [x19, #24]
   2f4fc:	ldr	x0, [x19, #8]
   2f500:	sub	x0, x0, x21
   2f504:	cmp	x0, w20, sxtw
   2f508:	b.lt	2f5c8 <__asan_cplus_demangle_fill_name@@Base+0x168>  // b.tstop
   2f50c:	add	x0, x21, w20, sxtw
   2f510:	str	x0, [x19, #24]
   2f514:	ldr	w1, [x19, #16]
   2f518:	tbz	w1, #2, 2f528 <__asan_cplus_demangle_fill_name@@Base+0xc8>
   2f51c:	ldrb	w1, [x21, w20, sxtw]
   2f520:	cmp	w1, #0x24
   2f524:	b.eq	2f594 <__asan_cplus_demangle_fill_name@@Base+0x134>  // b.none
   2f528:	cmp	w20, #0x9
   2f52c:	b.le	2f570 <__asan_cplus_demangle_fill_name@@Base+0x110>
   2f530:	mov	x2, #0x8                   	// #8
   2f534:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2f538:	add	x1, x1, #0xbf0
   2f53c:	mov	x0, x21
   2f540:	bl	68f0 <__asan_internal_memcmp@plt>
   2f544:	cbnz	w0, 2f570 <__asan_cplus_demangle_fill_name@@Base+0x110>
   2f548:	ldrb	w0, [x21, #8]
   2f54c:	cmp	w0, #0x2e
   2f550:	mov	w1, #0x5f                  	// #95
   2f554:	ccmp	w0, w1, #0x4, ne  // ne = any
   2f558:	mov	w1, #0x24                  	// #36
   2f55c:	ccmp	w0, w1, #0x4, ne  // ne = any
   2f560:	b.ne	2f570 <__asan_cplus_demangle_fill_name@@Base+0x110>  // b.any
   2f564:	ldrb	w0, [x21, #9]
   2f568:	cmp	w0, #0x4e
   2f56c:	b.eq	2f5a0 <__asan_cplus_demangle_fill_name@@Base+0x140>  // b.none
   2f570:	mov	w2, w20
   2f574:	mov	x1, x21
   2f578:	mov	x0, x19
   2f57c:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2f580:	str	x0, [x19, #64]
   2f584:	ldr	x21, [sp, #32]
   2f588:	ldp	x19, x20, [sp, #16]
   2f58c:	ldp	x29, x30, [sp], #48
   2f590:	ret
   2f594:	add	x0, x0, #0x1
   2f598:	str	x0, [x19, #24]
   2f59c:	b	2f528 <__asan_cplus_demangle_fill_name@@Base+0xc8>
   2f5a0:	ldr	w0, [x19, #72]
   2f5a4:	add	w0, w0, #0x16
   2f5a8:	sub	w20, w0, w20
   2f5ac:	str	w20, [x19, #72]
   2f5b0:	mov	w2, #0x15                  	// #21
   2f5b4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2f5b8:	add	x1, x1, #0xc00
   2f5bc:	mov	x0, x19
   2f5c0:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2f5c4:	b	2f580 <__asan_cplus_demangle_fill_name@@Base+0x120>
   2f5c8:	mov	x0, #0x0                   	// #0
   2f5cc:	b	2f580 <__asan_cplus_demangle_fill_name@@Base+0x120>
   2f5d0:	mov	x0, #0x0                   	// #0
   2f5d4:	b	2f588 <__asan_cplus_demangle_fill_name@@Base+0x128>
   2f5d8:	stp	x29, x30, [sp, #-48]!
   2f5dc:	mov	x29, sp
   2f5e0:	stp	x19, x20, [sp, #16]
   2f5e4:	stp	x21, x22, [sp, #32]
   2f5e8:	mov	x19, x0
   2f5ec:	mov	x20, x1
   2f5f0:	ldr	x22, [x0, #64]
   2f5f4:	ldr	x2, [x0, #24]
   2f5f8:	ldrb	w0, [x2]
   2f5fc:	cmp	w0, #0x42
   2f600:	b.ne	2f640 <__asan_cplus_demangle_fill_name@@Base+0x1e0>  // b.any
   2f604:	mov	w21, #0x4c                  	// #76
   2f608:	add	x2, x2, #0x1
   2f60c:	str	x2, [x19, #24]
   2f610:	mov	x0, x19
   2f614:	bl	2f4d4 <__asan_cplus_demangle_fill_name@@Base+0x74>
   2f618:	mov	x3, x0
   2f61c:	mov	x2, x20
   2f620:	mov	w1, w21
   2f624:	mov	x0, x19
   2f628:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2f62c:	mov	x20, x0
   2f630:	ldr	x2, [x19, #24]
   2f634:	ldrb	w0, [x2]
   2f638:	cmp	w0, #0x42
   2f63c:	b.eq	2f608 <__asan_cplus_demangle_fill_name@@Base+0x1a8>  // b.none
   2f640:	str	x22, [x19, #64]
   2f644:	mov	x0, x20
   2f648:	ldp	x19, x20, [sp, #16]
   2f64c:	ldp	x21, x22, [sp, #32]
   2f650:	ldp	x29, x30, [sp], #48
   2f654:	ret
   2f658:	stp	x29, x30, [sp, #-64]!
   2f65c:	mov	x29, sp
   2f660:	stp	x19, x20, [sp, #16]
   2f664:	mov	x19, x0
   2f668:	ldr	x0, [x0, #24]
   2f66c:	ldrb	w2, [x0]
   2f670:	mov	x20, #0x0                   	// #0
   2f674:	cmp	w2, #0x53
   2f678:	b.ne	2f6d0 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.any
   2f67c:	add	x2, x0, #0x1
   2f680:	str	x2, [x19, #24]
   2f684:	ldrb	w2, [x0, #1]
   2f688:	cbz	w2, 2f774 <__asan_cplus_demangle_fill_name@@Base+0x314>
   2f68c:	add	x2, x0, #0x2
   2f690:	str	x2, [x19, #24]
   2f694:	ldrb	w2, [x0, #1]
   2f698:	sub	w0, w2, #0x30
   2f69c:	and	w0, w0, #0xff
   2f6a0:	cmp	w2, #0x5f
   2f6a4:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   2f6a8:	b.hi	2f6e0 <__asan_cplus_demangle_fill_name@@Base+0x280>  // b.pmore
   2f6ac:	mov	w1, #0x0                   	// #0
   2f6b0:	cmp	w2, #0x5f
   2f6b4:	b.ne	2f74c <__asan_cplus_demangle_fill_name@@Base+0x2ec>  // b.any
   2f6b8:	ldr	w0, [x19, #56]
   2f6bc:	mov	x20, #0x0                   	// #0
   2f6c0:	cmp	w0, w1
   2f6c4:	b.ls	2f6d0 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.plast
   2f6c8:	ldr	x0, [x19, #48]
   2f6cc:	ldr	x20, [x0, w1, uxtw #3]
   2f6d0:	mov	x0, x20
   2f6d4:	ldp	x19, x20, [sp, #16]
   2f6d8:	ldp	x29, x30, [sp], #64
   2f6dc:	ret
   2f6e0:	sub	w3, w2, #0x41
   2f6e4:	and	w3, w3, #0xff
   2f6e8:	mov	w0, #0x0                   	// #0
   2f6ec:	cmp	w3, #0x19
   2f6f0:	b.ls	2f700 <__asan_cplus_demangle_fill_name@@Base+0x2a0>  // b.plast
   2f6f4:	stp	x21, x22, [sp, #32]
   2f6f8:	b	2f778 <__asan_cplus_demangle_fill_name@@Base+0x318>
   2f6fc:	mov	w0, w1
   2f700:	sub	w1, w2, #0x30
   2f704:	and	w1, w1, #0xff
   2f708:	cmp	w1, #0x9
   2f70c:	b.hi	2f754 <__asan_cplus_demangle_fill_name@@Base+0x2f4>  // b.pmore
   2f710:	add	w1, w0, w0, lsl #3
   2f714:	add	w1, w2, w1, lsl #2
   2f718:	sub	w1, w1, #0x30
   2f71c:	cmp	w0, w1
   2f720:	b.hi	2f898 <__asan_cplus_demangle_fill_name@@Base+0x438>  // b.pmore
   2f724:	ldr	x0, [x19, #24]
   2f728:	ldrb	w2, [x0]
   2f72c:	cbz	w2, 2f6fc <__asan_cplus_demangle_fill_name@@Base+0x29c>
   2f730:	add	x2, x0, #0x1
   2f734:	str	x2, [x19, #24]
   2f738:	ldrb	w2, [x0]
   2f73c:	cmp	w2, #0x5f
   2f740:	b.ne	2f6fc <__asan_cplus_demangle_fill_name@@Base+0x29c>  // b.any
   2f744:	add	w1, w1, #0x1
   2f748:	b	2f6b8 <__asan_cplus_demangle_fill_name@@Base+0x258>
   2f74c:	mov	w0, #0x0                   	// #0
   2f750:	b	2f700 <__asan_cplus_demangle_fill_name@@Base+0x2a0>
   2f754:	sub	w1, w2, #0x41
   2f758:	and	w1, w1, #0xff
   2f75c:	cmp	w1, #0x19
   2f760:	b.hi	2f890 <__asan_cplus_demangle_fill_name@@Base+0x430>  // b.pmore
   2f764:	add	w1, w0, w0, lsl #3
   2f768:	add	w1, w2, w1, lsl #2
   2f76c:	sub	w1, w1, #0x37
   2f770:	b	2f71c <__asan_cplus_demangle_fill_name@@Base+0x2bc>
   2f774:	stp	x21, x22, [sp, #32]
   2f778:	ldr	w21, [x19, #16]
   2f77c:	ands	w0, w21, #0x8
   2f780:	ubfx	x21, x21, #3, #1
   2f784:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   2f788:	b.eq	2f7a4 <__asan_cplus_demangle_fill_name@@Base+0x344>  // b.none
   2f78c:	ldr	x0, [x19, #24]
   2f790:	ldrb	w0, [x0]
   2f794:	sub	w0, w0, #0x43
   2f798:	and	w0, w0, #0xff
   2f79c:	cmp	w0, #0x1
   2f7a0:	csinc	w21, w21, wzr, hi  // hi = pmore
   2f7a4:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x23150>
   2f7a8:	add	x20, x20, #0xfd8
   2f7ac:	add	x1, x20, #0x188
   2f7b0:	ldrb	w0, [x20]
   2f7b4:	cmp	w0, w2
   2f7b8:	b.eq	2f7d4 <__asan_cplus_demangle_fill_name@@Base+0x374>  // b.none
   2f7bc:	add	x20, x20, #0x38
   2f7c0:	cmp	x20, x1
   2f7c4:	b.ne	2f7b0 <__asan_cplus_demangle_fill_name@@Base+0x350>  // b.any
   2f7c8:	mov	x20, #0x0                   	// #0
   2f7cc:	ldp	x21, x22, [sp, #32]
   2f7d0:	b	2f6d0 <__asan_cplus_demangle_fill_name@@Base+0x270>
   2f7d4:	ldr	x22, [x20, #40]
   2f7d8:	cbz	x22, 2f808 <__asan_cplus_demangle_fill_name@@Base+0x3a8>
   2f7dc:	str	x23, [sp, #48]
   2f7e0:	ldr	w23, [x20, #48]
   2f7e4:	mov	x0, x19
   2f7e8:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   2f7ec:	cbz	x0, 2f800 <__asan_cplus_demangle_fill_name@@Base+0x3a0>
   2f7f0:	mov	w1, #0x18                  	// #24
   2f7f4:	str	w1, [x0]
   2f7f8:	str	x22, [x0, #8]
   2f7fc:	str	w23, [x0, #16]
   2f800:	str	x0, [x19, #64]
   2f804:	ldr	x23, [sp, #48]
   2f808:	cbz	w21, 2f858 <__asan_cplus_demangle_fill_name@@Base+0x3f8>
   2f80c:	ldr	x22, [x20, #24]
   2f810:	ldr	w21, [x20, #32]
   2f814:	ldr	w0, [x19, #72]
   2f818:	add	w0, w0, w21
   2f81c:	str	w0, [x19, #72]
   2f820:	mov	x0, x19
   2f824:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   2f828:	mov	x20, x0
   2f82c:	cbz	x0, 2f840 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   2f830:	mov	w0, #0x18                  	// #24
   2f834:	str	w0, [x20]
   2f838:	str	x22, [x20, #8]
   2f83c:	str	w21, [x20, #16]
   2f840:	ldr	x0, [x19, #24]
   2f844:	ldrb	w0, [x0]
   2f848:	cmp	w0, #0x42
   2f84c:	b.eq	2f864 <__asan_cplus_demangle_fill_name@@Base+0x404>  // b.none
   2f850:	ldp	x21, x22, [sp, #32]
   2f854:	b	2f6d0 <__asan_cplus_demangle_fill_name@@Base+0x270>
   2f858:	ldr	x22, [x20, #8]
   2f85c:	ldr	w21, [x20, #16]
   2f860:	b	2f814 <__asan_cplus_demangle_fill_name@@Base+0x3b4>
   2f864:	mov	x1, x20
   2f868:	mov	x0, x19
   2f86c:	bl	2f5d8 <__asan_cplus_demangle_fill_name@@Base+0x178>
   2f870:	mov	x20, x0
   2f874:	mov	x1, x0
   2f878:	mov	x0, x19
   2f87c:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   2f880:	cmp	w0, #0x0
   2f884:	csel	x20, x20, xzr, ne  // ne = any
   2f888:	ldp	x21, x22, [sp, #32]
   2f88c:	b	2f6d0 <__asan_cplus_demangle_fill_name@@Base+0x270>
   2f890:	mov	x20, #0x0                   	// #0
   2f894:	b	2f6d0 <__asan_cplus_demangle_fill_name@@Base+0x270>
   2f898:	mov	x20, #0x0                   	// #0
   2f89c:	b	2f6d0 <__asan_cplus_demangle_fill_name@@Base+0x270>

000000000002f8a0 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   2f8a0:	cmp	w1, #0x0
   2f8a4:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
   2f8a8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2f8ac:	b.eq	2f8cc <__asan_cplus_demangle_fill_extended_operator@@Base+0x2c>  // b.none
   2f8b0:	str	wzr, [x0, #4]
   2f8b4:	mov	w3, #0x33                  	// #51
   2f8b8:	str	w3, [x0]
   2f8bc:	str	w1, [x0, #8]
   2f8c0:	str	x2, [x0, #16]
   2f8c4:	mov	w0, #0x1                   	// #1
   2f8c8:	ret
   2f8cc:	mov	w0, #0x0                   	// #0
   2f8d0:	b	2f8c8 <__asan_cplus_demangle_fill_extended_operator@@Base+0x28>

000000000002f8d4 <__asan_cplus_demangle_fill_ctor@@Base>:
   2f8d4:	mov	x3, x0
   2f8d8:	cmp	x0, #0x0
   2f8dc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   2f8e0:	mov	w0, #0x0                   	// #0
   2f8e4:	b.eq	2f910 <__asan_cplus_demangle_fill_ctor@@Base+0x3c>  // b.none
   2f8e8:	sub	w4, w1, #0x1
   2f8ec:	mov	w0, #0x0                   	// #0
   2f8f0:	cmp	w4, #0x4
   2f8f4:	b.hi	2f910 <__asan_cplus_demangle_fill_ctor@@Base+0x3c>  // b.pmore
   2f8f8:	str	wzr, [x3, #4]
   2f8fc:	mov	w0, #0x7                   	// #7
   2f900:	str	w0, [x3]
   2f904:	str	w1, [x3, #8]
   2f908:	str	x2, [x3, #16]
   2f90c:	mov	w0, #0x1                   	// #1
   2f910:	ret

000000000002f914 <__asan_cplus_demangle_fill_dtor@@Base>:
   2f914:	mov	x3, x0
   2f918:	cmp	x0, #0x0
   2f91c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   2f920:	mov	w0, #0x0                   	// #0
   2f924:	b.eq	2f950 <__asan_cplus_demangle_fill_dtor@@Base+0x3c>  // b.none
   2f928:	sub	w4, w1, #0x1
   2f92c:	mov	w0, #0x0                   	// #0
   2f930:	cmp	w4, #0x4
   2f934:	b.hi	2f950 <__asan_cplus_demangle_fill_dtor@@Base+0x3c>  // b.pmore
   2f938:	str	wzr, [x3, #4]
   2f93c:	mov	w0, #0x8                   	// #8
   2f940:	str	w0, [x3]
   2f944:	str	w1, [x3, #8]
   2f948:	str	x2, [x3, #16]
   2f94c:	mov	w0, #0x1                   	// #1
   2f950:	ret

000000000002f954 <__asan_cplus_demangle_type@@Base>:
   2f954:	stp	x29, x30, [sp, #-80]!
   2f958:	mov	x29, sp
   2f95c:	stp	x19, x20, [sp, #16]
   2f960:	mov	x19, x0
   2f964:	bl	28df8 <__asan_backtrace_create_state@@Base+0x4ac>
   2f968:	cbnz	w0, 2f998 <__asan_cplus_demangle_type@@Base+0x44>
   2f96c:	ldr	x0, [x19, #24]
   2f970:	ldrb	w2, [x0]
   2f974:	sub	w1, w2, #0x30
   2f978:	cmp	w1, #0x4a
   2f97c:	b.hi	3029c <__asan_cplus_demangle_type@@Base+0x948>  // b.pmore
   2f980:	adrp	x3, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   2f984:	add	x3, x3, #0x760
   2f988:	ldrh	w1, [x3, w1, uxtw #1]
   2f98c:	adr	x3, 2f998 <__asan_cplus_demangle_type@@Base+0x44>
   2f990:	add	x1, x3, w1, sxth #2
   2f994:	br	x1
   2f998:	mov	w2, #0x0                   	// #0
   2f99c:	add	x1, sp, #0x48
   2f9a0:	mov	x0, x19
   2f9a4:	bl	31408 <__asan_cplus_demangle_type@@Base+0x1ab4>
   2f9a8:	mov	x20, x0
   2f9ac:	cbz	x0, 2faac <__asan_cplus_demangle_type@@Base+0x158>
   2f9b0:	ldr	x0, [x19, #24]
   2f9b4:	ldrb	w0, [x0]
   2f9b8:	cmp	w0, #0x46
   2f9bc:	b.eq	2fa00 <__asan_cplus_demangle_type@@Base+0xac>  // b.none
   2f9c0:	mov	x0, x19
   2f9c4:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2f9c8:	str	x0, [x20]
   2f9cc:	ldr	x0, [x20]
   2f9d0:	cbz	x0, 30294 <__asan_cplus_demangle_type@@Base+0x940>
   2f9d4:	ldr	w1, [x0]
   2f9d8:	sub	w1, w1, #0x1f
   2f9dc:	cmp	w1, #0x1
   2f9e0:	b.ls	2fa10 <__asan_cplus_demangle_type@@Base+0xbc>  // b.plast
   2f9e4:	ldr	x1, [sp, #72]
   2f9e8:	mov	x0, x19
   2f9ec:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   2f9f0:	cmp	w0, #0x0
   2f9f4:	ldr	x20, [sp, #72]
   2f9f8:	csel	x20, x20, xzr, ne  // ne = any
   2f9fc:	b	2faac <__asan_cplus_demangle_type@@Base+0x158>
   2fa00:	mov	x0, x19
   2fa04:	bl	30af8 <__asan_cplus_demangle_type@@Base+0x11a4>
   2fa08:	str	x0, [x20]
   2fa0c:	b	2f9cc <__asan_cplus_demangle_type@@Base+0x78>
   2fa10:	ldr	x1, [x0, #8]
   2fa14:	ldr	x2, [sp, #72]
   2fa18:	str	x2, [x0, #8]
   2fa1c:	ldr	x0, [x20]
   2fa20:	str	x0, [sp, #72]
   2fa24:	str	x1, [x20]
   2fa28:	b	2f9e4 <__asan_cplus_demangle_type@@Base+0x90>
   2fa2c:	sub	w2, w2, #0x61
   2fa30:	sbfiz	x2, x2, #5, #32
   2fa34:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2fa38:	ldr	x1, [x1, #3912]
   2fa3c:	add	x1, x1, x2
   2fa40:	mov	x0, x19
   2fa44:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   2fa48:	str	x0, [sp, #72]
   2fa4c:	ldr	x1, [x0, #8]
   2fa50:	ldr	w0, [x19, #72]
   2fa54:	ldr	w1, [x1, #8]
   2fa58:	add	w0, w0, w1
   2fa5c:	str	w0, [x19, #72]
   2fa60:	ldr	x0, [x19, #24]
   2fa64:	add	x0, x0, #0x1
   2fa68:	str	x0, [x19, #24]
   2fa6c:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   2fa70:	add	x0, x0, #0x1
   2fa74:	str	x0, [x19, #24]
   2fa78:	mov	x0, x19
   2fa7c:	bl	2f4d4 <__asan_cplus_demangle_fill_name@@Base+0x74>
   2fa80:	mov	x3, #0x0                   	// #0
   2fa84:	mov	x2, x0
   2fa88:	mov	w1, #0x28                  	// #40
   2fa8c:	mov	x0, x19
   2fa90:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fa94:	str	x0, [sp, #72]
   2fa98:	ldr	x1, [sp, #72]
   2fa9c:	mov	x0, x19
   2faa0:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   2faa4:	cbz	w0, 302ac <__asan_cplus_demangle_type@@Base+0x958>
   2faa8:	ldr	x20, [sp, #72]
   2faac:	mov	x0, x20
   2fab0:	ldp	x19, x20, [sp, #16]
   2fab4:	ldp	x29, x30, [sp], #80
   2fab8:	ret
   2fabc:	mov	x0, x19
   2fac0:	bl	30af8 <__asan_cplus_demangle_type@@Base+0x11a4>
   2fac4:	str	x0, [sp, #72]
   2fac8:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2facc:	mov	x0, x19
   2fad0:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   2fad4:	str	x0, [sp, #72]
   2fad8:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fadc:	add	x1, x0, #0x1
   2fae0:	str	x1, [x19, #24]
   2fae4:	ldrb	w0, [x0, #1]
   2fae8:	cmp	w0, #0x5f
   2faec:	b.eq	2fb88 <__asan_cplus_demangle_type@@Base+0x234>  // b.none
   2faf0:	sub	w0, w0, #0x30
   2faf4:	and	w0, w0, #0xff
   2faf8:	cmp	w0, #0x9
   2fafc:	b.hi	2fb74 <__asan_cplus_demangle_type@@Base+0x220>  // b.pmore
   2fb00:	ldr	x0, [x19, #24]
   2fb04:	add	x2, x0, #0x1
   2fb08:	str	x2, [x19, #24]
   2fb0c:	ldrb	w0, [x0, #1]
   2fb10:	sub	w0, w0, #0x30
   2fb14:	and	w0, w0, #0xff
   2fb18:	cmp	w0, #0x9
   2fb1c:	b.ls	2fb00 <__asan_cplus_demangle_type@@Base+0x1ac>  // b.plast
   2fb20:	sub	w2, w2, w1
   2fb24:	mov	x0, x19
   2fb28:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2fb2c:	mov	x20, x0
   2fb30:	cbz	x0, 2fb6c <__asan_cplus_demangle_type@@Base+0x218>
   2fb34:	ldr	x0, [x19, #24]
   2fb38:	ldrb	w1, [x0]
   2fb3c:	cmp	w1, #0x5f
   2fb40:	b.ne	2fb90 <__asan_cplus_demangle_type@@Base+0x23c>  // b.any
   2fb44:	add	x0, x0, #0x1
   2fb48:	str	x0, [x19, #24]
   2fb4c:	mov	x0, x19
   2fb50:	bl	6420 <__asan_cplus_demangle_type@plt>
   2fb54:	mov	x3, x0
   2fb58:	mov	x2, x20
   2fb5c:	mov	w1, #0x2a                  	// #42
   2fb60:	mov	x0, x19
   2fb64:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fb68:	mov	x20, x0
   2fb6c:	str	x20, [sp, #72]
   2fb70:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fb74:	mov	x0, x19
   2fb78:	bl	30bd0 <__asan_cplus_demangle_type@@Base+0x127c>
   2fb7c:	mov	x20, x0
   2fb80:	cbnz	x0, 2fb34 <__asan_cplus_demangle_type@@Base+0x1e0>
   2fb84:	b	2fb6c <__asan_cplus_demangle_type@@Base+0x218>
   2fb88:	mov	x20, #0x0                   	// #0
   2fb8c:	b	2fb34 <__asan_cplus_demangle_type@@Base+0x1e0>
   2fb90:	mov	x20, #0x0                   	// #0
   2fb94:	b	2fb6c <__asan_cplus_demangle_type@@Base+0x218>
   2fb98:	add	x0, x0, #0x1
   2fb9c:	str	x0, [x19, #24]
   2fba0:	mov	x0, x19
   2fba4:	bl	6420 <__asan_cplus_demangle_type@plt>
   2fba8:	mov	x20, x0
   2fbac:	cbz	x0, 2fbd4 <__asan_cplus_demangle_type@@Base+0x280>
   2fbb0:	mov	x0, x19
   2fbb4:	bl	6420 <__asan_cplus_demangle_type@plt>
   2fbb8:	mov	x3, x0
   2fbbc:	cbz	x0, 2fbdc <__asan_cplus_demangle_type@@Base+0x288>
   2fbc0:	mov	x2, x20
   2fbc4:	mov	w1, #0x2b                  	// #43
   2fbc8:	mov	x0, x19
   2fbcc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fbd0:	mov	x20, x0
   2fbd4:	str	x20, [sp, #72]
   2fbd8:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fbdc:	mov	x20, x0
   2fbe0:	b	2fbd4 <__asan_cplus_demangle_type@@Base+0x280>
   2fbe4:	mov	x0, x19
   2fbe8:	bl	28f38 <__asan_backtrace_create_state@@Base+0x5ec>
   2fbec:	str	x0, [sp, #72]
   2fbf0:	ldr	x20, [x19, #24]
   2fbf4:	ldrb	w1, [x20]
   2fbf8:	cmp	w1, #0x49
   2fbfc:	b.ne	2fa98 <__asan_cplus_demangle_type@@Base+0x144>  // b.any
   2fc00:	ldr	w1, [x19, #80]
   2fc04:	cbnz	w1, 2fc44 <__asan_cplus_demangle_type@@Base+0x2f0>
   2fc08:	mov	x1, x0
   2fc0c:	mov	x0, x19
   2fc10:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   2fc14:	mov	x20, #0x0                   	// #0
   2fc18:	cbz	w0, 2faac <__asan_cplus_demangle_type@@Base+0x158>
   2fc1c:	ldr	x20, [sp, #72]
   2fc20:	mov	x0, x19
   2fc24:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   2fc28:	mov	x3, x0
   2fc2c:	mov	x2, x20
   2fc30:	mov	w1, #0x4                   	// #4
   2fc34:	mov	x0, x19
   2fc38:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fc3c:	str	x0, [sp, #72]
   2fc40:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fc44:	stp	x21, x22, [sp, #32]
   2fc48:	stp	x23, x24, [sp, #48]
   2fc4c:	ldr	w24, [x19, #40]
   2fc50:	ldr	w23, [x19, #56]
   2fc54:	ldr	w22, [x19, #72]
   2fc58:	mov	x0, x19
   2fc5c:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   2fc60:	mov	x21, x0
   2fc64:	ldr	x0, [x19, #24]
   2fc68:	ldrb	w0, [x0]
   2fc6c:	cmp	w0, #0x49
   2fc70:	b.eq	2fc90 <__asan_cplus_demangle_type@@Base+0x33c>  // b.none
   2fc74:	str	x20, [x19, #24]
   2fc78:	str	w24, [x19, #40]
   2fc7c:	str	w23, [x19, #56]
   2fc80:	str	w22, [x19, #72]
   2fc84:	ldp	x21, x22, [sp, #32]
   2fc88:	ldp	x23, x24, [sp, #48]
   2fc8c:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fc90:	ldr	x1, [sp, #72]
   2fc94:	mov	x0, x19
   2fc98:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   2fc9c:	cbz	w0, 2fcc4 <__asan_cplus_demangle_type@@Base+0x370>
   2fca0:	mov	x3, x21
   2fca4:	ldr	x2, [sp, #72]
   2fca8:	mov	w1, #0x4                   	// #4
   2fcac:	mov	x0, x19
   2fcb0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fcb4:	str	x0, [sp, #72]
   2fcb8:	ldp	x21, x22, [sp, #32]
   2fcbc:	ldp	x23, x24, [sp, #48]
   2fcc0:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fcc4:	mov	x20, #0x0                   	// #0
   2fcc8:	ldp	x21, x22, [sp, #32]
   2fccc:	ldp	x23, x24, [sp, #48]
   2fcd0:	b	2faac <__asan_cplus_demangle_type@@Base+0x158>
   2fcd4:	ldrb	w0, [x0, #1]
   2fcd8:	sub	w1, w0, #0x30
   2fcdc:	and	w1, w1, #0xff
   2fce0:	cmp	w0, #0x5f
   2fce4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   2fce8:	b.ls	2fcfc <__asan_cplus_demangle_type@@Base+0x3a8>  // b.plast
   2fcec:	sub	w0, w0, #0x41
   2fcf0:	and	w0, w0, #0xff
   2fcf4:	cmp	w0, #0x19
   2fcf8:	b.hi	2fd44 <__asan_cplus_demangle_type@@Base+0x3f0>  // b.pmore
   2fcfc:	mov	w1, #0x0                   	// #0
   2fd00:	mov	x0, x19
   2fd04:	bl	2f658 <__asan_cplus_demangle_fill_name@@Base+0x1f8>
   2fd08:	mov	x20, x0
   2fd0c:	str	x0, [sp, #72]
   2fd10:	ldr	x0, [x19, #24]
   2fd14:	ldrb	w0, [x0]
   2fd18:	cmp	w0, #0x49
   2fd1c:	b.ne	2faa8 <__asan_cplus_demangle_type@@Base+0x154>  // b.any
   2fd20:	mov	x0, x19
   2fd24:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   2fd28:	mov	x3, x0
   2fd2c:	mov	x2, x20
   2fd30:	mov	w1, #0x4                   	// #4
   2fd34:	mov	x0, x19
   2fd38:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fd3c:	str	x0, [sp, #72]
   2fd40:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fd44:	mov	x0, x19
   2fd48:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   2fd4c:	str	x0, [sp, #72]
   2fd50:	cbz	x0, 2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fd54:	ldr	w0, [x0]
   2fd58:	cmp	w0, #0x18
   2fd5c:	b.ne	2fa98 <__asan_cplus_demangle_type@@Base+0x144>  // b.any
   2fd60:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   2fd64:	add	x0, x0, #0x1
   2fd68:	str	x0, [x19, #24]
   2fd6c:	mov	x0, x19
   2fd70:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2fd74:	mov	x3, #0x0                   	// #0
   2fd78:	mov	x2, x0
   2fd7c:	mov	w1, #0x24                  	// #36
   2fd80:	mov	x0, x19
   2fd84:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fd88:	str	x0, [sp, #72]
   2fd8c:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fd90:	add	x0, x0, #0x1
   2fd94:	str	x0, [x19, #24]
   2fd98:	mov	x0, x19
   2fd9c:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2fda0:	mov	x3, #0x0                   	// #0
   2fda4:	mov	x2, x0
   2fda8:	mov	w1, #0x22                  	// #34
   2fdac:	mov	x0, x19
   2fdb0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fdb4:	str	x0, [sp, #72]
   2fdb8:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fdbc:	add	x0, x0, #0x1
   2fdc0:	str	x0, [x19, #24]
   2fdc4:	mov	x0, x19
   2fdc8:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2fdcc:	mov	x3, #0x0                   	// #0
   2fdd0:	mov	x2, x0
   2fdd4:	mov	w1, #0x23                  	// #35
   2fdd8:	mov	x0, x19
   2fddc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fde0:	str	x0, [sp, #72]
   2fde4:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fde8:	add	x0, x0, #0x1
   2fdec:	str	x0, [x19, #24]
   2fdf0:	mov	x0, x19
   2fdf4:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2fdf8:	mov	x3, #0x0                   	// #0
   2fdfc:	mov	x2, x0
   2fe00:	mov	w1, #0x25                  	// #37
   2fe04:	mov	x0, x19
   2fe08:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fe0c:	str	x0, [sp, #72]
   2fe10:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fe14:	add	x0, x0, #0x1
   2fe18:	str	x0, [x19, #24]
   2fe1c:	mov	x0, x19
   2fe20:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2fe24:	mov	x3, #0x0                   	// #0
   2fe28:	mov	x2, x0
   2fe2c:	mov	w1, #0x26                  	// #38
   2fe30:	mov	x0, x19
   2fe34:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fe38:	str	x0, [sp, #72]
   2fe3c:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fe40:	add	x0, x0, #0x1
   2fe44:	str	x0, [x19, #24]
   2fe48:	mov	x0, x19
   2fe4c:	bl	2f4d4 <__asan_cplus_demangle_fill_name@@Base+0x74>
   2fe50:	mov	x20, x0
   2fe54:	str	x0, [sp, #72]
   2fe58:	ldr	x0, [x19, #24]
   2fe5c:	ldrb	w0, [x0]
   2fe60:	cmp	w0, #0x49
   2fe64:	b.eq	2fe8c <__asan_cplus_demangle_type@@Base+0x538>  // b.none
   2fe68:	mov	x0, x19
   2fe6c:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2fe70:	ldr	x3, [sp, #72]
   2fe74:	mov	x2, x0
   2fe78:	mov	w1, #0x21                  	// #33
   2fe7c:	mov	x0, x19
   2fe80:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fe84:	str	x0, [sp, #72]
   2fe88:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   2fe8c:	mov	x0, x19
   2fe90:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   2fe94:	mov	x3, x0
   2fe98:	mov	x2, x20
   2fe9c:	mov	w1, #0x4                   	// #4
   2fea0:	mov	x0, x19
   2fea4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   2fea8:	str	x0, [sp, #72]
   2feac:	b	2fe68 <__asan_cplus_demangle_type@@Base+0x514>
   2feb0:	add	x1, x0, #0x1
   2feb4:	str	x1, [x19, #24]
   2feb8:	ldrb	w1, [x0, #1]
   2febc:	mov	x20, #0x0                   	// #0
   2fec0:	cbz	w1, 2faac <__asan_cplus_demangle_type@@Base+0x158>
   2fec4:	add	x1, x0, #0x2
   2fec8:	str	x1, [x19, #24]
   2fecc:	ldrb	w1, [x0, #1]
   2fed0:	cmp	w1, #0x68
   2fed4:	b.eq	301a8 <__asan_cplus_demangle_type@@Base+0x854>  // b.none
   2fed8:	b.hi	30020 <__asan_cplus_demangle_type@@Base+0x6cc>  // b.pmore
   2fedc:	cmp	w1, #0x63
   2fee0:	b.eq	3015c <__asan_cplus_demangle_type@@Base+0x808>  // b.none
   2fee4:	b.ls	2ff28 <__asan_cplus_demangle_type@@Base+0x5d4>  // b.plast
   2fee8:	cmp	w1, #0x65
   2feec:	b.eq	30178 <__asan_cplus_demangle_type@@Base+0x824>  // b.none
   2fef0:	cmp	w1, #0x66
   2fef4:	b.ne	2ffe4 <__asan_cplus_demangle_type@@Base+0x690>  // b.any
   2fef8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2fefc:	ldr	x1, [x1, #3912]
   2ff00:	add	x1, x1, #0x340
   2ff04:	mov	x0, x19
   2ff08:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   2ff0c:	str	x0, [sp, #72]
   2ff10:	ldr	x1, [x0, #8]
   2ff14:	ldr	w0, [x19, #72]
   2ff18:	ldr	w1, [x1, #8]
   2ff1c:	add	w0, w0, w1
   2ff20:	str	w0, [x19, #72]
   2ff24:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   2ff28:	cmp	w1, #0x54
   2ff2c:	b.eq	30110 <__asan_cplus_demangle_type@@Base+0x7bc>  // b.none
   2ff30:	cmp	w1, #0x61
   2ff34:	b.ne	2ff54 <__asan_cplus_demangle_type@@Base+0x600>  // b.any
   2ff38:	mov	w2, #0x4                   	// #4
   2ff3c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x2150>
   2ff40:	add	x1, x1, #0xc18
   2ff44:	mov	x0, x19
   2ff48:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2ff4c:	str	x0, [sp, #72]
   2ff50:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   2ff54:	cmp	w1, #0x46
   2ff58:	b.ne	2faac <__asan_cplus_demangle_type@@Base+0x158>  // b.any
   2ff5c:	mov	x0, x19
   2ff60:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   2ff64:	str	x0, [sp, #72]
   2ff68:	mov	w1, #0x2c                  	// #44
   2ff6c:	str	w1, [x0]
   2ff70:	ldr	x0, [x19, #24]
   2ff74:	ldrb	w0, [x0]
   2ff78:	sub	w0, w0, #0x30
   2ff7c:	and	w0, w0, #0xff
   2ff80:	cmp	w0, #0x9
   2ff84:	cset	w2, ls  // ls = plast
   2ff88:	ldr	x1, [sp, #72]
   2ff8c:	strh	w2, [x1, #16]
   2ff90:	b.ls	30238 <__asan_cplus_demangle_type@@Base+0x8e4>  // b.plast
   2ff94:	ldr	x20, [sp, #72]
   2ff98:	mov	x0, x19
   2ff9c:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   2ffa0:	str	x0, [x20, #8]
   2ffa4:	ldr	x0, [sp, #72]
   2ffa8:	ldr	x20, [x0, #8]
   2ffac:	cbz	x20, 2faac <__asan_cplus_demangle_type@@Base+0x158>
   2ffb0:	mov	x0, x19
   2ffb4:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   2ffb8:	ldr	x1, [x19, #24]
   2ffbc:	ldrb	w0, [x1]
   2ffc0:	cbz	w0, 2ffd0 <__asan_cplus_demangle_type@@Base+0x67c>
   2ffc4:	add	x0, x1, #0x1
   2ffc8:	str	x0, [x19, #24]
   2ffcc:	ldrb	w0, [x1]
   2ffd0:	cmp	w0, #0x73
   2ffd4:	cset	w1, eq  // eq = none
   2ffd8:	ldr	x0, [sp, #72]
   2ffdc:	strh	w1, [x0, #18]
   2ffe0:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   2ffe4:	mov	x20, #0x0                   	// #0
   2ffe8:	cmp	w1, #0x64
   2ffec:	b.ne	2faac <__asan_cplus_demangle_type@@Base+0x158>  // b.any
   2fff0:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   2fff4:	ldr	x1, [x1, #3912]
   2fff8:	add	x1, x1, #0x360
   2fffc:	mov	x0, x19
   30000:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   30004:	str	x0, [sp, #72]
   30008:	ldr	x1, [x0, #8]
   3000c:	ldr	w0, [x19, #72]
   30010:	ldr	w1, [x1, #8]
   30014:	add	w0, w0, w1
   30018:	str	w0, [x19, #72]
   3001c:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   30020:	cmp	w1, #0x73
   30024:	b.eq	30208 <__asan_cplus_demangle_type@@Base+0x8b4>  // b.none
   30028:	b.ls	30098 <__asan_cplus_demangle_type@@Base+0x744>  // b.plast
   3002c:	cmp	w1, #0x75
   30030:	b.eq	301d8 <__asan_cplus_demangle_type@@Base+0x884>  // b.none
   30034:	cmp	w1, #0x76
   30038:	b.ne	30108 <__asan_cplus_demangle_type@@Base+0x7b4>  // b.any
   3003c:	ldrb	w1, [x0, #2]
   30040:	cmp	w1, #0x5f
   30044:	b.eq	30244 <__asan_cplus_demangle_type@@Base+0x8f0>  // b.none
   30048:	mov	x0, x19
   3004c:	bl	28d08 <__asan_backtrace_create_state@@Base+0x3bc>
   30050:	mov	x20, x0
   30054:	cbz	x20, 30090 <__asan_cplus_demangle_type@@Base+0x73c>
   30058:	ldr	x0, [x19, #24]
   3005c:	ldrb	w1, [x0]
   30060:	cmp	w1, #0x5f
   30064:	b.ne	3025c <__asan_cplus_demangle_type@@Base+0x908>  // b.any
   30068:	add	x0, x0, #0x1
   3006c:	str	x0, [x19, #24]
   30070:	mov	x0, x19
   30074:	bl	6420 <__asan_cplus_demangle_type@plt>
   30078:	mov	x3, x0
   3007c:	mov	x2, x20
   30080:	mov	w1, #0x2d                  	// #45
   30084:	mov	x0, x19
   30088:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   3008c:	mov	x20, x0
   30090:	str	x20, [sp, #72]
   30094:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   30098:	cmp	w1, #0x6e
   3009c:	b.eq	30264 <__asan_cplus_demangle_type@@Base+0x910>  // b.none
   300a0:	cmp	w1, #0x70
   300a4:	b.ne	300cc <__asan_cplus_demangle_type@@Base+0x778>  // b.any
   300a8:	mov	x0, x19
   300ac:	bl	2f954 <__asan_cplus_demangle_type@@Base>
   300b0:	mov	x3, #0x0                   	// #0
   300b4:	mov	x2, x0
   300b8:	mov	w1, #0x4b                  	// #75
   300bc:	mov	x0, x19
   300c0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   300c4:	str	x0, [sp, #72]
   300c8:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   300cc:	mov	x20, #0x0                   	// #0
   300d0:	cmp	w1, #0x69
   300d4:	b.ne	2faac <__asan_cplus_demangle_type@@Base+0x158>  // b.any
   300d8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   300dc:	ldr	x1, [x1, #3912]
   300e0:	add	x1, x1, #0x400
   300e4:	mov	x0, x19
   300e8:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   300ec:	str	x0, [sp, #72]
   300f0:	ldr	x1, [x0, #8]
   300f4:	ldr	w0, [x19, #72]
   300f8:	ldr	w1, [x1, #8]
   300fc:	add	w0, w0, w1
   30100:	str	w0, [x19, #72]
   30104:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   30108:	cmp	w1, #0x74
   3010c:	b.ne	302a4 <__asan_cplus_demangle_type@@Base+0x950>  // b.any
   30110:	mov	x0, x19
   30114:	bl	30bd0 <__asan_cplus_demangle_type@@Base+0x127c>
   30118:	mov	x3, #0x0                   	// #0
   3011c:	mov	x2, x0
   30120:	mov	w1, #0x43                  	// #67
   30124:	mov	x0, x19
   30128:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   3012c:	str	x0, [sp, #72]
   30130:	cbz	x0, 2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   30134:	ldr	x0, [x19, #24]
   30138:	ldrb	w1, [x0]
   3013c:	cbz	w1, 30154 <__asan_cplus_demangle_type@@Base+0x800>
   30140:	add	x1, x0, #0x1
   30144:	str	x1, [x19, #24]
   30148:	ldrb	w0, [x0]
   3014c:	cmp	w0, #0x45
   30150:	b.eq	2fa98 <__asan_cplus_demangle_type@@Base+0x144>  // b.none
   30154:	str	xzr, [sp, #72]
   30158:	b	2fa98 <__asan_cplus_demangle_type@@Base+0x144>
   3015c:	mov	w2, #0xe                   	// #14
   30160:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   30164:	add	x1, x1, #0xc18
   30168:	mov	x0, x19
   3016c:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   30170:	str	x0, [sp, #72]
   30174:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   30178:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   3017c:	ldr	x1, [x1, #3912]
   30180:	add	x1, x1, #0x380
   30184:	mov	x0, x19
   30188:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   3018c:	str	x0, [sp, #72]
   30190:	ldr	x1, [x0, #8]
   30194:	ldr	w0, [x19, #72]
   30198:	ldr	w1, [x1, #8]
   3019c:	add	w0, w0, w1
   301a0:	str	w0, [x19, #72]
   301a4:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   301a8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   301ac:	ldr	x1, [x1, #3912]
   301b0:	add	x1, x1, #0x3a0
   301b4:	mov	x0, x19
   301b8:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   301bc:	str	x0, [sp, #72]
   301c0:	ldr	x1, [x0, #8]
   301c4:	ldr	w0, [x19, #72]
   301c8:	ldr	w1, [x1, #8]
   301cc:	add	w0, w0, w1
   301d0:	str	w0, [x19, #72]
   301d4:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   301d8:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   301dc:	ldr	x1, [x1, #3912]
   301e0:	add	x1, x1, #0x3c0
   301e4:	mov	x0, x19
   301e8:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   301ec:	str	x0, [sp, #72]
   301f0:	ldr	x1, [x0, #8]
   301f4:	ldr	w0, [x19, #72]
   301f8:	ldr	w1, [x1, #8]
   301fc:	add	w0, w0, w1
   30200:	str	w0, [x19, #72]
   30204:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   30208:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   3020c:	ldr	x1, [x1, #3912]
   30210:	add	x1, x1, #0x3e0
   30214:	mov	x0, x19
   30218:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   3021c:	str	x0, [sp, #72]
   30220:	ldr	x1, [x0, #8]
   30224:	ldr	w0, [x19, #72]
   30228:	ldr	w1, [x1, #8]
   3022c:	add	w0, w0, w1
   30230:	str	w0, [x19, #72]
   30234:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   30238:	mov	x0, x19
   3023c:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   30240:	b	2ff94 <__asan_cplus_demangle_type@@Base+0x640>
   30244:	add	x0, x0, #0x3
   30248:	str	x0, [x19, #24]
   3024c:	mov	x0, x19
   30250:	bl	30bd0 <__asan_cplus_demangle_type@@Base+0x127c>
   30254:	mov	x20, x0
   30258:	b	30054 <__asan_cplus_demangle_type@@Base+0x700>
   3025c:	mov	x20, #0x0                   	// #0
   30260:	b	30090 <__asan_cplus_demangle_type@@Base+0x73c>
   30264:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   30268:	ldr	x1, [x1, #3912]
   3026c:	add	x1, x1, #0x420
   30270:	mov	x0, x19
   30274:	bl	28b00 <__asan_backtrace_create_state@@Base+0x1b4>
   30278:	str	x0, [sp, #72]
   3027c:	ldr	x1, [x0, #8]
   30280:	ldr	w0, [x19, #72]
   30284:	ldr	w1, [x1, #8]
   30288:	add	w0, w0, w1
   3028c:	str	w0, [x19, #72]
   30290:	b	2faa8 <__asan_cplus_demangle_type@@Base+0x154>
   30294:	mov	x20, x0
   30298:	b	2faac <__asan_cplus_demangle_type@@Base+0x158>
   3029c:	mov	x20, #0x0                   	// #0
   302a0:	b	2faac <__asan_cplus_demangle_type@@Base+0x158>
   302a4:	mov	x20, #0x0                   	// #0
   302a8:	b	2faac <__asan_cplus_demangle_type@@Base+0x158>
   302ac:	mov	x20, #0x0                   	// #0
   302b0:	b	2faac <__asan_cplus_demangle_type@@Base+0x158>
   302b4:	stp	x29, x30, [sp, #-64]!
   302b8:	mov	x29, sp
   302bc:	stp	x19, x20, [sp, #16]
   302c0:	mov	x19, x0
   302c4:	str	xzr, [sp, #56]
   302c8:	ldr	x0, [x0, #24]
   302cc:	ldrb	w1, [x0]
   302d0:	cmp	w1, #0x45
   302d4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   302d8:	mov	w2, #0x2e                  	// #46
   302dc:	ccmp	w1, w2, #0x4, ne  // ne = any
   302e0:	b.eq	303c8 <__asan_cplus_demangle_type@@Base+0xa74>  // b.none
   302e4:	stp	x21, x22, [sp, #32]
   302e8:	add	x21, sp, #0x38
   302ec:	mov	w22, #0x4f                  	// #79
   302f0:	mov	w20, w2
   302f4:	b	30340 <__asan_cplus_demangle_type@@Base+0x9ec>
   302f8:	mov	x0, x19
   302fc:	bl	6420 <__asan_cplus_demangle_type@plt>
   30300:	mov	x2, x0
   30304:	cbz	x0, 303d0 <__asan_cplus_demangle_type@@Base+0xa7c>
   30308:	mov	x3, #0x0                   	// #0
   3030c:	mov	w1, w20
   30310:	mov	x0, x19
   30314:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30318:	mov	x2, x0
   3031c:	str	x0, [x21]
   30320:	cbz	x0, 303d8 <__asan_cplus_demangle_type@@Base+0xa84>
   30324:	add	x21, x0, #0x10
   30328:	ldr	x0, [x19, #24]
   3032c:	ldrb	w1, [x0]
   30330:	cmp	w1, #0x45
   30334:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   30338:	ccmp	w1, w20, #0x4, ne  // ne = any
   3033c:	b.eq	30358 <__asan_cplus_demangle_type@@Base+0xa04>  // b.none
   30340:	cmp	w1, #0x52
   30344:	ccmp	w1, w22, #0x4, ne  // ne = any
   30348:	b.ne	302f8 <__asan_cplus_demangle_type@@Base+0x9a4>  // b.any
   3034c:	ldrb	w0, [x0, #1]
   30350:	cmp	w0, #0x45
   30354:	b.ne	302f8 <__asan_cplus_demangle_type@@Base+0x9a4>  // b.any
   30358:	ldr	x2, [sp, #56]
   3035c:	cbz	x2, 303e0 <__asan_cplus_demangle_type@@Base+0xa8c>
   30360:	ldr	x0, [x2, #16]
   30364:	cbz	x0, 3037c <__asan_cplus_demangle_type@@Base+0xa28>
   30368:	ldp	x21, x22, [sp, #32]
   3036c:	mov	x0, x2
   30370:	ldp	x19, x20, [sp, #16]
   30374:	ldp	x29, x30, [sp], #64
   30378:	ret
   3037c:	ldr	x0, [x2, #8]
   30380:	ldr	w1, [x0]
   30384:	cmp	w1, #0x27
   30388:	b.eq	30394 <__asan_cplus_demangle_type@@Base+0xa40>  // b.none
   3038c:	ldp	x21, x22, [sp, #32]
   30390:	b	3036c <__asan_cplus_demangle_type@@Base+0xa18>
   30394:	ldr	x0, [x0, #8]
   30398:	ldr	w1, [x0, #28]
   3039c:	cmp	w1, #0x9
   303a0:	b.eq	303ac <__asan_cplus_demangle_type@@Base+0xa58>  // b.none
   303a4:	ldp	x21, x22, [sp, #32]
   303a8:	b	3036c <__asan_cplus_demangle_type@@Base+0xa18>
   303ac:	ldr	w1, [x19, #72]
   303b0:	ldr	w0, [x0, #8]
   303b4:	sub	w0, w1, w0
   303b8:	str	w0, [x19, #72]
   303bc:	str	xzr, [x2, #8]
   303c0:	ldp	x21, x22, [sp, #32]
   303c4:	b	3036c <__asan_cplus_demangle_type@@Base+0xa18>
   303c8:	mov	x2, #0x0                   	// #0
   303cc:	b	3036c <__asan_cplus_demangle_type@@Base+0xa18>
   303d0:	ldp	x21, x22, [sp, #32]
   303d4:	b	3036c <__asan_cplus_demangle_type@@Base+0xa18>
   303d8:	ldp	x21, x22, [sp, #32]
   303dc:	b	3036c <__asan_cplus_demangle_type@@Base+0xa18>
   303e0:	ldp	x21, x22, [sp, #32]
   303e4:	b	3036c <__asan_cplus_demangle_type@@Base+0xa18>
   303e8:	stp	x29, x30, [sp, #-48]!
   303ec:	mov	x29, sp
   303f0:	stp	x19, x20, [sp, #16]
   303f4:	stp	x21, x22, [sp, #32]
   303f8:	mov	x20, x0
   303fc:	ldr	x0, [x0, #24]
   30400:	ldrb	w19, [x0]
   30404:	cbz	w19, 30470 <__asan_cplus_demangle_type@@Base+0xb1c>
   30408:	add	x1, x0, #0x1
   3040c:	str	x1, [x20, #24]
   30410:	ldrb	w6, [x0]
   30414:	ldrb	w19, [x0, #1]
   30418:	cbz	w19, 30584 <__asan_cplus_demangle_type@@Base+0xc30>
   3041c:	add	x1, x0, #0x2
   30420:	str	x1, [x20, #24]
   30424:	ldrb	w19, [x0, #1]
   30428:	cmp	w6, #0x76
   3042c:	b.ne	30474 <__asan_cplus_demangle_type@@Base+0xb20>  // b.any
   30430:	sub	w0, w19, #0x30
   30434:	and	w0, w0, #0xff
   30438:	cmp	w0, #0x9
   3043c:	b.hi	30484 <__asan_cplus_demangle_type@@Base+0xb30>  // b.pmore
   30440:	mov	x0, x20
   30444:	bl	2f4d4 <__asan_cplus_demangle_fill_name@@Base+0x74>
   30448:	mov	x21, x0
   3044c:	mov	x0, x20
   30450:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   30454:	mov	x22, x0
   30458:	mov	x2, x21
   3045c:	sub	w1, w19, #0x30
   30460:	bl	67e0 <__asan_cplus_demangle_fill_extended_operator@plt>
   30464:	cmp	w0, #0x0
   30468:	csel	x22, x22, xzr, ne  // ne = any
   3046c:	b	30570 <__asan_cplus_demangle_type@@Base+0xc1c>
   30470:	mov	w6, w19
   30474:	cmp	w6, #0x63
   30478:	mov	w0, #0x76                  	// #118
   3047c:	ccmp	w19, w0, #0x0, eq  // eq = none
   30480:	b.eq	30498 <__asan_cplus_demangle_type@@Base+0xb44>  // b.none
   30484:	mov	w4, #0x43                  	// #67
   30488:	mov	w3, #0x0                   	// #0
   3048c:	adrp	x5, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   30490:	ldr	x5, [x5, #3944]
   30494:	b	30510 <__asan_cplus_demangle_type@@Base+0xbbc>
   30498:	ldr	w19, [x20, #80]
   3049c:	ldr	w0, [x20, #76]
   304a0:	cmp	w0, #0x0
   304a4:	cset	w0, eq  // eq = none
   304a8:	str	w0, [x20, #80]
   304ac:	mov	x0, x20
   304b0:	bl	6420 <__asan_cplus_demangle_type@plt>
   304b4:	mov	x2, x0
   304b8:	ldr	w0, [x20, #80]
   304bc:	cbz	w0, 304dc <__asan_cplus_demangle_type@@Base+0xb88>
   304c0:	mov	x3, #0x0                   	// #0
   304c4:	mov	w1, #0x35                  	// #53
   304c8:	mov	x0, x20
   304cc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   304d0:	mov	x22, x0
   304d4:	str	w19, [x20, #80]
   304d8:	b	30570 <__asan_cplus_demangle_type@@Base+0xc1c>
   304dc:	mov	x3, #0x0                   	// #0
   304e0:	mov	w1, #0x34                  	// #52
   304e4:	mov	x0, x20
   304e8:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   304ec:	mov	x22, x0
   304f0:	b	304d4 <__asan_cplus_demangle_type@@Base+0xb80>
   304f4:	ldrb	w0, [x0, #1]
   304f8:	cmp	w0, w19
   304fc:	b.eq	30544 <__asan_cplus_demangle_type@@Base+0xbf0>  // b.none
   30500:	b.hi	30564 <__asan_cplus_demangle_type@@Base+0xc10>  // b.pmore
   30504:	add	w3, w1, #0x1
   30508:	cmp	w3, w4
   3050c:	b.eq	3056c <__asan_cplus_demangle_type@@Base+0xc18>  // b.none
   30510:	sub	w1, w4, w3
   30514:	add	w1, w1, w1, lsr #31
   30518:	add	w1, w3, w1, asr #1
   3051c:	sbfiz	x2, x1, #1, #32
   30520:	add	x2, x2, w1, sxtw
   30524:	add	x21, x5, x2, lsl #3
   30528:	ldr	x0, [x5, x2, lsl #3]
   3052c:	ldrb	w2, [x0]
   30530:	cmp	w2, w6
   30534:	b.eq	304f4 <__asan_cplus_demangle_type@@Base+0xba0>  // b.none
   30538:	b.ls	30504 <__asan_cplus_demangle_type@@Base+0xbb0>  // b.plast
   3053c:	mov	w4, w1
   30540:	b	30508 <__asan_cplus_demangle_type@@Base+0xbb4>
   30544:	mov	x0, x20
   30548:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   3054c:	mov	x22, x0
   30550:	cbz	x0, 30570 <__asan_cplus_demangle_type@@Base+0xc1c>
   30554:	mov	w0, #0x32                  	// #50
   30558:	str	w0, [x22]
   3055c:	str	x21, [x22, #8]
   30560:	b	30570 <__asan_cplus_demangle_type@@Base+0xc1c>
   30564:	mov	w4, w1
   30568:	b	30508 <__asan_cplus_demangle_type@@Base+0xbb4>
   3056c:	mov	x22, #0x0                   	// #0
   30570:	mov	x0, x22
   30574:	ldp	x19, x20, [sp, #16]
   30578:	ldp	x21, x22, [sp, #32]
   3057c:	ldp	x29, x30, [sp], #48
   30580:	ret
   30584:	cmp	w6, #0x76
   30588:	b.eq	30484 <__asan_cplus_demangle_type@@Base+0xb30>  // b.none
   3058c:	b	30474 <__asan_cplus_demangle_type@@Base+0xb20>
   30590:	stp	x29, x30, [sp, #-48]!
   30594:	mov	x29, sp
   30598:	stp	x19, x20, [sp, #16]
   3059c:	mov	x19, x0
   305a0:	ldr	x2, [x0, #24]
   305a4:	ldrb	w1, [x2]
   305a8:	sub	w0, w1, #0x30
   305ac:	and	w0, w0, #0xff
   305b0:	cmp	w0, #0x9
   305b4:	b.ls	30640 <__asan_cplus_demangle_type@@Base+0xcec>  // b.plast
   305b8:	sub	w0, w1, #0x61
   305bc:	and	w0, w0, #0xff
   305c0:	cmp	w0, #0x19
   305c4:	b.hi	30684 <__asan_cplus_demangle_type@@Base+0xd30>  // b.pmore
   305c8:	cmp	w1, #0x6f
   305cc:	b.eq	3066c <__asan_cplus_demangle_type@@Base+0xd18>  // b.none
   305d0:	mov	x0, x19
   305d4:	bl	303e8 <__asan_cplus_demangle_type@@Base+0xa94>
   305d8:	mov	x20, x0
   305dc:	cbz	x0, 3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   305e0:	ldr	w0, [x0]
   305e4:	cmp	w0, #0x32
   305e8:	b.ne	3064c <__asan_cplus_demangle_type@@Base+0xcf8>  // b.any
   305ec:	ldr	x2, [x20, #8]
   305f0:	ldr	w0, [x19, #72]
   305f4:	add	w1, w0, #0x7
   305f8:	ldr	w0, [x2, #16]
   305fc:	add	w0, w0, w1
   30600:	str	w0, [x19, #72]
   30604:	ldr	x0, [x20, #8]
   30608:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   3060c:	add	x1, x1, #0xc28
   30610:	ldr	x0, [x0]
   30614:	bl	67f0 <__asan_internal_strcmp@plt>
   30618:	cbnz	w0, 3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   3061c:	mov	x0, x19
   30620:	bl	2f4d4 <__asan_cplus_demangle_fill_name@@Base+0x74>
   30624:	mov	x3, x0
   30628:	mov	x2, x20
   3062c:	mov	w1, #0x37                  	// #55
   30630:	mov	x0, x19
   30634:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30638:	mov	x20, x0
   3063c:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   30640:	mov	x0, x19
   30644:	bl	2f4d4 <__asan_cplus_demangle_fill_name@@Base+0x74>
   30648:	mov	x20, x0
   3064c:	ldr	x0, [x19, #24]
   30650:	ldrb	w0, [x0]
   30654:	cmp	w0, #0x42
   30658:	b.eq	309e4 <__asan_cplus_demangle_type@@Base+0x1090>  // b.none
   3065c:	mov	x0, x20
   30660:	ldp	x19, x20, [sp, #16]
   30664:	ldp	x29, x30, [sp], #48
   30668:	ret
   3066c:	ldrb	w0, [x2, #1]
   30670:	cmp	w0, #0x6e
   30674:	b.ne	305d0 <__asan_cplus_demangle_type@@Base+0xc7c>  // b.any
   30678:	add	x2, x2, #0x2
   3067c:	str	x2, [x19, #24]
   30680:	b	305d0 <__asan_cplus_demangle_type@@Base+0xc7c>
   30684:	sub	w0, w1, #0x43
   30688:	and	w0, w0, #0xff
   3068c:	cmp	w0, #0x1
   30690:	b.ls	3072c <__asan_cplus_demangle_type@@Base+0xdd8>  // b.plast
   30694:	cmp	w1, #0x4c
   30698:	b.eq	308f0 <__asan_cplus_demangle_type@@Base+0xf9c>  // b.none
   3069c:	mov	x20, #0x0                   	// #0
   306a0:	cmp	w1, #0x55
   306a4:	b.ne	3065c <__asan_cplus_demangle_type@@Base+0xd08>  // b.any
   306a8:	ldrb	w0, [x2, #1]
   306ac:	cmp	w0, #0x6c
   306b0:	b.eq	3091c <__asan_cplus_demangle_type@@Base+0xfc8>  // b.none
   306b4:	cmp	w0, #0x74
   306b8:	b.ne	3065c <__asan_cplus_demangle_type@@Base+0xd08>  // b.any
   306bc:	add	x0, x2, #0x1
   306c0:	str	x0, [x19, #24]
   306c4:	ldrb	w0, [x2, #1]
   306c8:	mov	x20, #0x0                   	// #0
   306cc:	cmp	w0, #0x74
   306d0:	b.ne	3064c <__asan_cplus_demangle_type@@Base+0xcf8>  // b.any
   306d4:	stp	x21, x22, [sp, #32]
   306d8:	add	x2, x2, #0x2
   306dc:	str	x2, [x19, #24]
   306e0:	mov	x0, x19
   306e4:	bl	28ebc <__asan_backtrace_create_state@@Base+0x570>
   306e8:	mov	w21, w0
   306ec:	tbnz	w0, #31, 309dc <__asan_cplus_demangle_type@@Base+0x1088>
   306f0:	mov	x0, x19
   306f4:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   306f8:	mov	x20, x0
   306fc:	cbz	x0, 30710 <__asan_cplus_demangle_type@@Base+0xdbc>
   30700:	mov	w0, #0x48                  	// #72
   30704:	str	w0, [x20]
   30708:	sxtw	x21, w21
   3070c:	str	x21, [x20, #8]
   30710:	mov	x1, x20
   30714:	mov	x0, x19
   30718:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   3071c:	cmp	w0, #0x0
   30720:	csel	x20, x20, xzr, ne  // ne = any
   30724:	ldp	x21, x22, [sp, #32]
   30728:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   3072c:	stp	x21, x22, [sp, #32]
   30730:	ldr	x21, [x19, #64]
   30734:	cbz	x21, 30778 <__asan_cplus_demangle_type@@Base+0xe24>
   30738:	ldr	w0, [x21]
   3073c:	cbnz	w0, 30770 <__asan_cplus_demangle_type@@Base+0xe1c>
   30740:	ldr	w0, [x19, #72]
   30744:	ldr	w1, [x21, #16]
   30748:	add	w0, w0, w1
   3074c:	str	w0, [x19, #72]
   30750:	ldrb	w0, [x2]
   30754:	cmp	w0, #0x43
   30758:	b.eq	307bc <__asan_cplus_demangle_type@@Base+0xe68>  // b.none
   3075c:	cmp	w0, #0x44
   30760:	b.eq	30780 <__asan_cplus_demangle_type@@Base+0xe2c>  // b.none
   30764:	mov	x20, #0x0                   	// #0
   30768:	ldp	x21, x22, [sp, #32]
   3076c:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   30770:	cmp	w0, #0x18
   30774:	b.eq	307a8 <__asan_cplus_demangle_type@@Base+0xe54>  // b.none
   30778:	cmp	w1, #0x43
   3077c:	b.eq	307bc <__asan_cplus_demangle_type@@Base+0xe68>  // b.none
   30780:	ldrb	w0, [x2, #1]
   30784:	cmp	w0, #0x32
   30788:	b.eq	308d8 <__asan_cplus_demangle_type@@Base+0xf84>  // b.none
   3078c:	b.ls	30888 <__asan_cplus_demangle_type@@Base+0xf34>  // b.plast
   30790:	cmp	w0, #0x34
   30794:	b.eq	308e8 <__asan_cplus_demangle_type@@Base+0xf94>  // b.none
   30798:	cmp	w0, #0x35
   3079c:	b.ne	309b4 <__asan_cplus_demangle_type@@Base+0x1060>  // b.any
   307a0:	mov	w22, #0x5                   	// #5
   307a4:	b	3089c <__asan_cplus_demangle_type@@Base+0xf48>
   307a8:	ldr	w0, [x19, #72]
   307ac:	ldr	w1, [x21, #16]
   307b0:	add	w0, w0, w1
   307b4:	str	w0, [x19, #72]
   307b8:	b	30750 <__asan_cplus_demangle_type@@Base+0xdfc>
   307bc:	ldrb	w0, [x2, #1]
   307c0:	cmp	w0, #0x49
   307c4:	b.eq	307f0 <__asan_cplus_demangle_type@@Base+0xe9c>  // b.none
   307c8:	cmp	w0, #0x33
   307cc:	b.eq	30864 <__asan_cplus_demangle_type@@Base+0xf10>  // b.none
   307d0:	b.ls	309f8 <__asan_cplus_demangle_type@@Base+0x10a4>  // b.plast
   307d4:	cmp	w0, #0x34
   307d8:	b.eq	3087c <__asan_cplus_demangle_type@@Base+0xf28>  // b.none
   307dc:	mov	w1, #0x0                   	// #0
   307e0:	cmp	w0, #0x35
   307e4:	b.ne	30a54 <__asan_cplus_demangle_type@@Base+0x1100>  // b.any
   307e8:	mov	w21, #0x5                   	// #5
   307ec:	b	30a10 <__asan_cplus_demangle_type@@Base+0x10bc>
   307f0:	add	x1, x2, #0x1
   307f4:	str	x1, [x19, #24]
   307f8:	ldrb	w0, [x2, #2]
   307fc:	cmp	w0, #0x33
   30800:	b.eq	30858 <__asan_cplus_demangle_type@@Base+0xf04>  // b.none
   30804:	b.hi	30830 <__asan_cplus_demangle_type@@Base+0xedc>  // b.pmore
   30808:	cmp	w0, #0x31
   3080c:	b.eq	30a60 <__asan_cplus_demangle_type@@Base+0x110c>  // b.none
   30810:	cmp	w0, #0x32
   30814:	b.ne	30824 <__asan_cplus_demangle_type@@Base+0xed0>  // b.any
   30818:	mov	x2, x1
   3081c:	mov	w1, #0x1                   	// #1
   30820:	b	30a0c <__asan_cplus_demangle_type@@Base+0x10b8>
   30824:	mov	x20, #0x0                   	// #0
   30828:	ldp	x21, x22, [sp, #32]
   3082c:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   30830:	cmp	w0, #0x34
   30834:	b.eq	30870 <__asan_cplus_demangle_type@@Base+0xf1c>  // b.none
   30838:	cmp	w0, #0x35
   3083c:	b.ne	3084c <__asan_cplus_demangle_type@@Base+0xef8>  // b.any
   30840:	mov	x2, x1
   30844:	mov	w1, #0x1                   	// #1
   30848:	b	307e8 <__asan_cplus_demangle_type@@Base+0xe94>
   3084c:	mov	x20, #0x0                   	// #0
   30850:	ldp	x21, x22, [sp, #32]
   30854:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   30858:	mov	x2, x1
   3085c:	mov	w1, #0x1                   	// #1
   30860:	b	30868 <__asan_cplus_demangle_type@@Base+0xf14>
   30864:	mov	w1, #0x0                   	// #0
   30868:	mov	w21, #0x3                   	// #3
   3086c:	b	30a10 <__asan_cplus_demangle_type@@Base+0x10bc>
   30870:	mov	x2, x1
   30874:	mov	w1, #0x1                   	// #1
   30878:	b	30880 <__asan_cplus_demangle_type@@Base+0xf2c>
   3087c:	mov	w1, #0x0                   	// #0
   30880:	mov	w21, #0x4                   	// #4
   30884:	b	30a10 <__asan_cplus_demangle_type@@Base+0x10bc>
   30888:	cmp	w0, #0x30
   3088c:	b.eq	308e0 <__asan_cplus_demangle_type@@Base+0xf8c>  // b.none
   30890:	mov	w22, #0x2                   	// #2
   30894:	cmp	w0, #0x31
   30898:	b.ne	308cc <__asan_cplus_demangle_type@@Base+0xf78>  // b.any
   3089c:	add	x2, x2, #0x2
   308a0:	str	x2, [x19, #24]
   308a4:	mov	x0, x19
   308a8:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   308ac:	mov	x20, x0
   308b0:	mov	x2, x21
   308b4:	mov	w1, w22
   308b8:	bl	6a10 <__asan_cplus_demangle_fill_dtor@plt>
   308bc:	cmp	w0, #0x0
   308c0:	csel	x20, x20, xzr, ne  // ne = any
   308c4:	ldp	x21, x22, [sp, #32]
   308c8:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   308cc:	mov	x20, #0x0                   	// #0
   308d0:	ldp	x21, x22, [sp, #32]
   308d4:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   308d8:	mov	w22, #0x3                   	// #3
   308dc:	b	3089c <__asan_cplus_demangle_type@@Base+0xf48>
   308e0:	mov	w22, #0x1                   	// #1
   308e4:	b	3089c <__asan_cplus_demangle_type@@Base+0xf48>
   308e8:	mov	w22, #0x4                   	// #4
   308ec:	b	3089c <__asan_cplus_demangle_type@@Base+0xf48>
   308f0:	add	x2, x2, #0x1
   308f4:	str	x2, [x19, #24]
   308f8:	mov	x0, x19
   308fc:	bl	2f4d4 <__asan_cplus_demangle_fill_name@@Base+0x74>
   30900:	mov	x20, x0
   30904:	cbz	x0, 3065c <__asan_cplus_demangle_type@@Base+0xd08>
   30908:	mov	x0, x19
   3090c:	bl	28fe4 <__asan_backtrace_create_state@@Base+0x698>
   30910:	cbnz	w0, 3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   30914:	mov	x20, #0x0                   	// #0
   30918:	b	3065c <__asan_cplus_demangle_type@@Base+0xd08>
   3091c:	add	x0, x2, #0x1
   30920:	str	x0, [x19, #24]
   30924:	ldrb	w0, [x2, #1]
   30928:	mov	x20, #0x0                   	// #0
   3092c:	cmp	w0, #0x6c
   30930:	b.ne	3064c <__asan_cplus_demangle_type@@Base+0xcf8>  // b.any
   30934:	stp	x21, x22, [sp, #32]
   30938:	add	x2, x2, #0x2
   3093c:	str	x2, [x19, #24]
   30940:	mov	x0, x19
   30944:	bl	302b4 <__asan_cplus_demangle_type@@Base+0x960>
   30948:	mov	x21, x0
   3094c:	cbz	x0, 309c0 <__asan_cplus_demangle_type@@Base+0x106c>
   30950:	ldr	x0, [x19, #24]
   30954:	ldrb	w1, [x0]
   30958:	cmp	w1, #0x45
   3095c:	b.ne	309cc <__asan_cplus_demangle_type@@Base+0x1078>  // b.any
   30960:	add	x0, x0, #0x1
   30964:	str	x0, [x19, #24]
   30968:	mov	x0, x19
   3096c:	bl	28ebc <__asan_backtrace_create_state@@Base+0x570>
   30970:	mov	w22, w0
   30974:	tbnz	w0, #31, 309d4 <__asan_cplus_demangle_type@@Base+0x1080>
   30978:	mov	x0, x19
   3097c:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   30980:	mov	x20, x0
   30984:	cbz	x0, 30998 <__asan_cplus_demangle_type@@Base+0x1044>
   30988:	mov	w0, #0x46                  	// #70
   3098c:	str	w0, [x20]
   30990:	str	x21, [x20, #8]
   30994:	str	w22, [x20, #16]
   30998:	mov	x1, x20
   3099c:	mov	x0, x19
   309a0:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   309a4:	cmp	w0, #0x0
   309a8:	csel	x20, x20, xzr, ne  // ne = any
   309ac:	ldp	x21, x22, [sp, #32]
   309b0:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   309b4:	mov	x20, #0x0                   	// #0
   309b8:	ldp	x21, x22, [sp, #32]
   309bc:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   309c0:	mov	x20, x0
   309c4:	ldp	x21, x22, [sp, #32]
   309c8:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   309cc:	ldp	x21, x22, [sp, #32]
   309d0:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   309d4:	ldp	x21, x22, [sp, #32]
   309d8:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   309dc:	ldp	x21, x22, [sp, #32]
   309e0:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   309e4:	mov	x1, x20
   309e8:	mov	x0, x19
   309ec:	bl	2f5d8 <__asan_cplus_demangle_fill_name@@Base+0x178>
   309f0:	mov	x20, x0
   309f4:	b	3065c <__asan_cplus_demangle_type@@Base+0xd08>
   309f8:	cmp	w0, #0x31
   309fc:	b.eq	30a78 <__asan_cplus_demangle_type@@Base+0x1124>  // b.none
   30a00:	mov	w1, #0x0                   	// #0
   30a04:	cmp	w0, #0x32
   30a08:	b.ne	30a48 <__asan_cplus_demangle_type@@Base+0x10f4>  // b.any
   30a0c:	mov	w21, #0x2                   	// #2
   30a10:	add	x2, x2, #0x2
   30a14:	str	x2, [x19, #24]
   30a18:	cbnz	w1, 30a6c <__asan_cplus_demangle_type@@Base+0x1118>
   30a1c:	ldr	x22, [x19, #64]
   30a20:	mov	x0, x19
   30a24:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   30a28:	mov	x20, x0
   30a2c:	mov	x2, x22
   30a30:	mov	w1, w21
   30a34:	bl	6850 <__asan_cplus_demangle_fill_ctor@plt>
   30a38:	cmp	w0, #0x0
   30a3c:	csel	x20, x20, xzr, ne  // ne = any
   30a40:	ldp	x21, x22, [sp, #32]
   30a44:	b	3064c <__asan_cplus_demangle_type@@Base+0xcf8>
   30a48:	mov	x20, #0x0                   	// #0
   30a4c:	ldp	x21, x22, [sp, #32]
   30a50:	b	3065c <__asan_cplus_demangle_type@@Base+0xd08>
   30a54:	mov	x20, #0x0                   	// #0
   30a58:	ldp	x21, x22, [sp, #32]
   30a5c:	b	3065c <__asan_cplus_demangle_type@@Base+0xd08>
   30a60:	add	x2, x2, #0x3
   30a64:	str	x2, [x19, #24]
   30a68:	mov	w21, #0x1                   	// #1
   30a6c:	mov	x0, x19
   30a70:	bl	6420 <__asan_cplus_demangle_type@plt>
   30a74:	b	30a1c <__asan_cplus_demangle_type@@Base+0x10c8>
   30a78:	add	x2, x2, #0x2
   30a7c:	str	x2, [x19, #24]
   30a80:	mov	w21, #0x1                   	// #1
   30a84:	b	30a1c <__asan_cplus_demangle_type@@Base+0x10c8>
   30a88:	stp	x29, x30, [sp, #-32]!
   30a8c:	mov	x29, sp
   30a90:	stp	x19, x20, [sp, #16]
   30a94:	mov	x19, x0
   30a98:	ldr	x0, [x0, #24]
   30a9c:	ldrb	w2, [x0]
   30aa0:	cmp	w2, #0x4a
   30aa4:	b.eq	30ab4 <__asan_cplus_demangle_type@@Base+0x1160>  // b.none
   30aa8:	cbnz	w1, 30abc <__asan_cplus_demangle_type@@Base+0x1168>
   30aac:	mov	x20, #0x0                   	// #0
   30ab0:	b	30acc <__asan_cplus_demangle_type@@Base+0x1178>
   30ab4:	add	x0, x0, #0x1
   30ab8:	str	x0, [x19, #24]
   30abc:	mov	x0, x19
   30ac0:	bl	6420 <__asan_cplus_demangle_type@plt>
   30ac4:	mov	x20, x0
   30ac8:	cbz	x0, 30aec <__asan_cplus_demangle_type@@Base+0x1198>
   30acc:	mov	x0, x19
   30ad0:	bl	302b4 <__asan_cplus_demangle_type@@Base+0x960>
   30ad4:	cbz	x0, 30aec <__asan_cplus_demangle_type@@Base+0x1198>
   30ad8:	mov	x3, x0
   30adc:	mov	x2, x20
   30ae0:	mov	w1, #0x29                  	// #41
   30ae4:	mov	x0, x19
   30ae8:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30aec:	ldp	x19, x20, [sp, #16]
   30af0:	ldp	x29, x30, [sp], #32
   30af4:	ret
   30af8:	stp	x29, x30, [sp, #-32]!
   30afc:	mov	x29, sp
   30b00:	str	x19, [sp, #16]
   30b04:	mov	x19, x0
   30b08:	ldr	w0, [x0, #16]
   30b0c:	tbnz	w0, #18, 30bb8 <__asan_cplus_demangle_type@@Base+0x1264>
   30b10:	ldr	w0, [x19, #84]
   30b14:	cmp	w0, #0x800
   30b18:	b.hi	30bb0 <__asan_cplus_demangle_type@@Base+0x125c>  // b.pmore
   30b1c:	add	w0, w0, #0x1
   30b20:	str	w0, [x19, #84]
   30b24:	ldr	x1, [x19, #24]
   30b28:	ldrb	w2, [x1]
   30b2c:	mov	x0, #0x0                   	// #0
   30b30:	cmp	w2, #0x46
   30b34:	b.eq	30b50 <__asan_cplus_demangle_type@@Base+0x11fc>  // b.none
   30b38:	ldr	w1, [x19, #84]
   30b3c:	sub	w1, w1, #0x1
   30b40:	str	w1, [x19, #84]
   30b44:	ldr	x19, [sp, #16]
   30b48:	ldp	x29, x30, [sp], #32
   30b4c:	ret
   30b50:	add	x0, x1, #0x1
   30b54:	str	x0, [x19, #24]
   30b58:	ldrb	w2, [x1, #1]
   30b5c:	add	x1, x1, #0x2
   30b60:	cmp	w2, #0x59
   30b64:	csel	x1, x1, x0, eq  // eq = none
   30b68:	str	x1, [x19, #24]
   30b6c:	mov	w1, #0x1                   	// #1
   30b70:	mov	x0, x19
   30b74:	bl	30a88 <__asan_cplus_demangle_type@@Base+0x1134>
   30b78:	mov	x1, x0
   30b7c:	mov	x0, x19
   30b80:	bl	28e50 <__asan_backtrace_create_state@@Base+0x504>
   30b84:	ldr	x1, [x19, #24]
   30b88:	ldrb	w2, [x1]
   30b8c:	cmp	w2, #0x45
   30b90:	b.eq	30ba4 <__asan_cplus_demangle_type@@Base+0x1250>  // b.none
   30b94:	mov	x0, #0x0                   	// #0
   30b98:	ldr	w1, [x19, #16]
   30b9c:	tbz	w1, #18, 30b38 <__asan_cplus_demangle_type@@Base+0x11e4>
   30ba0:	b	30b44 <__asan_cplus_demangle_type@@Base+0x11f0>
   30ba4:	add	x1, x1, #0x1
   30ba8:	str	x1, [x19, #24]
   30bac:	b	30b98 <__asan_cplus_demangle_type@@Base+0x1244>
   30bb0:	mov	x0, #0x0                   	// #0
   30bb4:	b	30b44 <__asan_cplus_demangle_type@@Base+0x11f0>
   30bb8:	ldr	x1, [x19, #24]
   30bbc:	ldrb	w0, [x1]
   30bc0:	cmp	w0, #0x46
   30bc4:	b.eq	30b50 <__asan_cplus_demangle_type@@Base+0x11fc>  // b.none
   30bc8:	mov	x0, #0x0                   	// #0
   30bcc:	b	30b44 <__asan_cplus_demangle_type@@Base+0x11f0>
   30bd0:	stp	x29, x30, [sp, #-64]!
   30bd4:	mov	x29, sp
   30bd8:	stp	x19, x20, [sp, #16]
   30bdc:	stp	x21, x22, [sp, #32]
   30be0:	mov	x19, x0
   30be4:	ldr	w21, [x0, #76]
   30be8:	mov	w0, #0x1                   	// #1
   30bec:	str	w0, [x19, #76]
   30bf0:	ldr	x0, [x19, #24]
   30bf4:	ldrb	w1, [x0]
   30bf8:	cmp	w1, #0x4c
   30bfc:	b.eq	30c60 <__asan_cplus_demangle_type@@Base+0x130c>  // b.none
   30c00:	cmp	w1, #0x54
   30c04:	b.eq	30c70 <__asan_cplus_demangle_type@@Base+0x131c>  // b.none
   30c08:	cmp	w1, #0x73
   30c0c:	b.eq	30c80 <__asan_cplus_demangle_type@@Base+0x132c>  // b.none
   30c10:	cmp	w1, #0x66
   30c14:	b.eq	30dac <__asan_cplus_demangle_type@@Base+0x1458>  // b.none
   30c18:	sub	w2, w1, #0x30
   30c1c:	and	w2, w2, #0xff
   30c20:	cmp	w2, #0x9
   30c24:	b.hi	30e60 <__asan_cplus_demangle_type@@Base+0x150c>  // b.pmore
   30c28:	mov	x0, x19
   30c2c:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   30c30:	mov	x20, x0
   30c34:	cbz	x0, 30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30c38:	ldr	x0, [x19, #24]
   30c3c:	ldrb	w0, [x0]
   30c40:	cmp	w0, #0x49
   30c44:	b.eq	30e80 <__asan_cplus_demangle_type@@Base+0x152c>  // b.none
   30c48:	str	w21, [x19, #76]
   30c4c:	mov	x0, x20
   30c50:	ldp	x19, x20, [sp, #16]
   30c54:	ldp	x21, x22, [sp, #32]
   30c58:	ldp	x29, x30, [sp], #64
   30c5c:	ret
   30c60:	mov	x0, x19
   30c64:	bl	3256c <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   30c68:	mov	x20, x0
   30c6c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30c70:	mov	x0, x19
   30c74:	bl	28f38 <__asan_backtrace_create_state@@Base+0x5ec>
   30c78:	mov	x20, x0
   30c7c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30c80:	ldrb	w2, [x0, #1]
   30c84:	cmp	w2, #0x72
   30c88:	b.eq	30cfc <__asan_cplus_demangle_type@@Base+0x13a8>  // b.none
   30c8c:	cmp	w2, #0x70
   30c90:	b.eq	30d80 <__asan_cplus_demangle_type@@Base+0x142c>  // b.none
   30c94:	cmp	w1, #0x69
   30c98:	mov	w2, #0x74                  	// #116
   30c9c:	ccmp	w1, w2, #0x4, ne  // ne = any
   30ca0:	b.ne	30db8 <__asan_cplus_demangle_type@@Base+0x1464>  // b.any
   30ca4:	ldrb	w2, [x0, #1]
   30ca8:	cmp	w2, #0x6c
   30cac:	b.ne	30db8 <__asan_cplus_demangle_type@@Base+0x1464>  // b.any
   30cb0:	add	x0, x0, #0x2
   30cb4:	str	x0, [x19, #24]
   30cb8:	mov	x22, #0x0                   	// #0
   30cbc:	cmp	w1, #0x74
   30cc0:	b.eq	30ea4 <__asan_cplus_demangle_type@@Base+0x1550>  // b.none
   30cc4:	ldr	x0, [x19, #24]
   30cc8:	ldrb	w0, [x0, #1]
   30ccc:	mov	x20, #0x0                   	// #0
   30cd0:	cbz	w0, 30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30cd4:	mov	w1, #0x45                  	// #69
   30cd8:	mov	x0, x19
   30cdc:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   30ce0:	mov	x3, x0
   30ce4:	mov	x2, x22
   30ce8:	mov	w1, #0x31                  	// #49
   30cec:	mov	x0, x19
   30cf0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30cf4:	mov	x20, x0
   30cf8:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30cfc:	add	x0, x0, #0x2
   30d00:	str	x0, [x19, #24]
   30d04:	mov	x0, x19
   30d08:	bl	6420 <__asan_cplus_demangle_type@plt>
   30d0c:	mov	x20, x0
   30d10:	mov	x0, x19
   30d14:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   30d18:	mov	x22, x0
   30d1c:	ldr	x0, [x19, #24]
   30d20:	ldrb	w0, [x0]
   30d24:	cmp	w0, #0x49
   30d28:	b.eq	30d48 <__asan_cplus_demangle_type@@Base+0x13f4>  // b.none
   30d2c:	mov	x3, x22
   30d30:	mov	x2, x20
   30d34:	mov	w1, #0x1                   	// #1
   30d38:	mov	x0, x19
   30d3c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30d40:	mov	x20, x0
   30d44:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30d48:	mov	x0, x19
   30d4c:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   30d50:	mov	x3, x0
   30d54:	mov	x2, x22
   30d58:	mov	w1, #0x4                   	// #4
   30d5c:	mov	x0, x19
   30d60:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30d64:	mov	x3, x0
   30d68:	mov	x2, x20
   30d6c:	mov	w1, #0x1                   	// #1
   30d70:	mov	x0, x19
   30d74:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30d78:	mov	x20, x0
   30d7c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30d80:	add	x0, x0, #0x2
   30d84:	str	x0, [x19, #24]
   30d88:	mov	x0, x19
   30d8c:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   30d90:	mov	x3, #0x0                   	// #0
   30d94:	mov	x2, x0
   30d98:	mov	w1, #0x4b                  	// #75
   30d9c:	mov	x0, x19
   30da0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30da4:	mov	x20, x0
   30da8:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30dac:	ldrb	w1, [x0, #1]
   30db0:	cmp	w1, #0x70
   30db4:	b.eq	30dfc <__asan_cplus_demangle_type@@Base+0x14a8>  // b.none
   30db8:	mov	x0, x19
   30dbc:	bl	303e8 <__asan_cplus_demangle_type@@Base+0xa94>
   30dc0:	mov	x20, x0
   30dc4:	cbz	x0, 30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30dc8:	ldr	w0, [x0]
   30dcc:	mov	x22, #0x0                   	// #0
   30dd0:	cmp	w0, #0x32
   30dd4:	b.eq	30eb4 <__asan_cplus_demangle_type@@Base+0x1560>  // b.none
   30dd8:	ldr	w0, [x20]
   30ddc:	cmp	w0, #0x33
   30de0:	b.eq	30fa0 <__asan_cplus_demangle_type@@Base+0x164c>  // b.none
   30de4:	cmp	w0, #0x34
   30de8:	b.eq	30f28 <__asan_cplus_demangle_type@@Base+0x15d4>  // b.none
   30dec:	cmp	w0, #0x32
   30df0:	b.eq	30f08 <__asan_cplus_demangle_type@@Base+0x15b4>  // b.none
   30df4:	mov	x20, #0x0                   	// #0
   30df8:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30dfc:	add	x1, x0, #0x2
   30e00:	str	x1, [x19, #24]
   30e04:	ldrb	w1, [x0, #2]
   30e08:	cmp	w1, #0x54
   30e0c:	b.eq	30e50 <__asan_cplus_demangle_type@@Base+0x14fc>  // b.none
   30e10:	mov	x0, x19
   30e14:	bl	28ebc <__asan_backtrace_create_state@@Base+0x570>
   30e18:	mvn	x1, x0
   30e1c:	mov	x20, #0x0                   	// #0
   30e20:	tst	x1, #0x7fffffff
   30e24:	b.eq	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>  // b.none
   30e28:	add	w22, w0, #0x1
   30e2c:	mov	x0, x19
   30e30:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   30e34:	mov	x20, x0
   30e38:	cbz	x0, 30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30e3c:	mov	w0, #0x6                   	// #6
   30e40:	str	w0, [x20]
   30e44:	sxtw	x0, w22
   30e48:	str	x0, [x20, #8]
   30e4c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30e50:	add	x0, x0, #0x3
   30e54:	str	x0, [x19, #24]
   30e58:	mov	w22, #0x0                   	// #0
   30e5c:	b	30e2c <__asan_cplus_demangle_type@@Base+0x14d8>
   30e60:	cmp	w1, #0x6f
   30e64:	b.ne	30c94 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   30e68:	ldrb	w1, [x0, #1]
   30e6c:	cmp	w1, #0x6e
   30e70:	b.ne	30db8 <__asan_cplus_demangle_type@@Base+0x1464>  // b.any
   30e74:	add	x0, x0, #0x2
   30e78:	str	x0, [x19, #24]
   30e7c:	b	30c28 <__asan_cplus_demangle_type@@Base+0x12d4>
   30e80:	mov	x0, x19
   30e84:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   30e88:	mov	x3, x0
   30e8c:	mov	x2, x20
   30e90:	mov	w1, #0x4                   	// #4
   30e94:	mov	x0, x19
   30e98:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30e9c:	mov	x20, x0
   30ea0:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30ea4:	mov	x0, x19
   30ea8:	bl	6420 <__asan_cplus_demangle_type@plt>
   30eac:	mov	x22, x0
   30eb0:	b	30cc4 <__asan_cplus_demangle_type@@Base+0x1370>
   30eb4:	ldr	x0, [x20, #8]
   30eb8:	ldr	x22, [x0]
   30ebc:	ldr	w0, [x0, #16]
   30ec0:	sub	w1, w0, #0x2
   30ec4:	ldr	w0, [x19, #72]
   30ec8:	add	w0, w0, w1
   30ecc:	str	w0, [x19, #72]
   30ed0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   30ed4:	add	x1, x1, #0xfe0
   30ed8:	mov	x0, x22
   30edc:	bl	67f0 <__asan_internal_strcmp@plt>
   30ee0:	cbnz	w0, 30dd8 <__asan_cplus_demangle_type@@Base+0x1484>
   30ee4:	mov	x0, x19
   30ee8:	bl	6420 <__asan_cplus_demangle_type@plt>
   30eec:	mov	x3, x0
   30ef0:	mov	x2, x20
   30ef4:	mov	w1, #0x37                  	// #55
   30ef8:	mov	x0, x19
   30efc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30f00:	mov	x20, x0
   30f04:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30f08:	ldr	x1, [x20, #8]
   30f0c:	ldr	w1, [x1, #20]
   30f10:	cmp	w1, #0x2
   30f14:	b.eq	310bc <__asan_cplus_demangle_type@@Base+0x1768>  // b.none
   30f18:	b.gt	30fb0 <__asan_cplus_demangle_type@@Base+0x165c>
   30f1c:	cbz	w1, 31058 <__asan_cplus_demangle_type@@Base+0x1704>
   30f20:	cmp	w1, #0x1
   30f24:	b.ne	30fa8 <__asan_cplus_demangle_type@@Base+0x1654>  // b.any
   30f28:	str	x23, [sp, #48]
   30f2c:	cbz	x22, 3130c <__asan_cplus_demangle_type@@Base+0x19b8>
   30f30:	ldrb	w0, [x22]
   30f34:	cmp	w0, #0x70
   30f38:	mov	w1, #0x6d                  	// #109
   30f3c:	ccmp	w0, w1, #0x4, ne  // ne = any
   30f40:	b.ne	30f50 <__asan_cplus_demangle_type@@Base+0x15fc>  // b.any
   30f44:	ldrb	w1, [x22, #1]
   30f48:	cmp	w1, w0
   30f4c:	b.eq	31074 <__asan_cplus_demangle_type@@Base+0x1720>  // b.none
   30f50:	ldr	w0, [x20]
   30f54:	mov	w23, #0x0                   	// #0
   30f58:	cmp	w0, #0x34
   30f5c:	b.eq	31330 <__asan_cplus_demangle_type@@Base+0x19dc>  // b.none
   30f60:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   30f64:	add	x1, x1, #0xb40
   30f68:	mov	x0, x22
   30f6c:	bl	67f0 <__asan_internal_strcmp@plt>
   30f70:	cbz	w0, 31094 <__asan_cplus_demangle_type@@Base+0x1740>
   30f74:	mov	x0, x19
   30f78:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   30f7c:	mov	x3, x0
   30f80:	cbnz	w23, 310a4 <__asan_cplus_demangle_type@@Base+0x1750>
   30f84:	mov	x2, x20
   30f88:	mov	w1, #0x37                  	// #55
   30f8c:	mov	x0, x19
   30f90:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   30f94:	mov	x20, x0
   30f98:	ldr	x23, [sp, #48]
   30f9c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30fa0:	ldr	w1, [x20, #8]
   30fa4:	b	30f10 <__asan_cplus_demangle_type@@Base+0x15bc>
   30fa8:	mov	x20, #0x0                   	// #0
   30fac:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   30fb0:	cmp	w1, #0x3
   30fb4:	b.ne	31050 <__asan_cplus_demangle_type@@Base+0x16fc>  // b.any
   30fb8:	cbz	x22, 312d4 <__asan_cplus_demangle_type@@Base+0x1980>
   30fbc:	str	x23, [sp, #48]
   30fc0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   30fc4:	add	x1, x1, #0xa68
   30fc8:	mov	x0, x22
   30fcc:	bl	67f0 <__asan_internal_strcmp@plt>
   30fd0:	cbz	w0, 311d8 <__asan_cplus_demangle_type@@Base+0x1884>
   30fd4:	ldrb	w0, [x22]
   30fd8:	cmp	w0, #0x66
   30fdc:	b.eq	31244 <__asan_cplus_demangle_type@@Base+0x18f0>  // b.none
   30fe0:	cmp	w0, #0x6e
   30fe4:	b.ne	312e8 <__asan_cplus_demangle_type@@Base+0x1994>  // b.any
   30fe8:	ldrb	w0, [x22, #1]
   30fec:	cmp	w0, #0x77
   30ff0:	mov	w1, #0x61                  	// #97
   30ff4:	ccmp	w0, w1, #0x4, ne  // ne = any
   30ff8:	b.ne	312f4 <__asan_cplus_demangle_type@@Base+0x19a0>  // b.any
   30ffc:	mov	w1, #0x5f                  	// #95
   31000:	mov	x0, x19
   31004:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   31008:	mov	x22, x0
   3100c:	mov	x0, x19
   31010:	bl	6420 <__asan_cplus_demangle_type@plt>
   31014:	mov	x23, x0
   31018:	ldr	x0, [x19, #24]
   3101c:	ldrb	w1, [x0]
   31020:	cmp	w1, #0x45
   31024:	b.eq	31278 <__asan_cplus_demangle_type@@Base+0x1924>  // b.none
   31028:	cmp	w1, #0x70
   3102c:	b.eq	31288 <__asan_cplus_demangle_type@@Base+0x1934>  // b.none
   31030:	cmp	w1, #0x69
   31034:	b.ne	31300 <__asan_cplus_demangle_type@@Base+0x19ac>  // b.any
   31038:	ldrb	w0, [x0, #1]
   3103c:	cmp	w0, #0x6c
   31040:	b.eq	312bc <__asan_cplus_demangle_type@@Base+0x1968>  // b.none
   31044:	mov	x20, #0x0                   	// #0
   31048:	ldr	x23, [sp, #48]
   3104c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   31050:	mov	x20, #0x0                   	// #0
   31054:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   31058:	mov	x3, #0x0                   	// #0
   3105c:	mov	x2, x20
   31060:	mov	w1, #0x36                  	// #54
   31064:	mov	x0, x19
   31068:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   3106c:	mov	x20, x0
   31070:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   31074:	ldr	x0, [x19, #24]
   31078:	ldrb	w1, [x0]
   3107c:	mov	w23, #0x1                   	// #1
   31080:	cmp	w1, #0x5f
   31084:	b.ne	30f60 <__asan_cplus_demangle_type@@Base+0x160c>  // b.any
   31088:	add	x0, x0, #0x1
   3108c:	str	x0, [x19, #24]
   31090:	b	30f50 <__asan_cplus_demangle_type@@Base+0x15fc>
   31094:	mov	x0, x19
   31098:	bl	32758 <__asan_cplus_demangle_mangled_name@@Base+0x394>
   3109c:	mov	x3, x0
   310a0:	b	30f80 <__asan_cplus_demangle_type@@Base+0x162c>
   310a4:	mov	x2, x3
   310a8:	mov	w1, #0x39                  	// #57
   310ac:	mov	x0, x19
   310b0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   310b4:	mov	x3, x0
   310b8:	b	30f84 <__asan_cplus_demangle_type@@Base+0x1630>
   310bc:	cbz	x22, 312cc <__asan_cplus_demangle_type@@Base+0x1978>
   310c0:	str	x23, [sp, #48]
   310c4:	mov	x0, x20
   310c8:	bl	28fa4 <__asan_backtrace_create_state@@Base+0x658>
   310cc:	cbnz	w0, 31140 <__asan_cplus_demangle_type@@Base+0x17ec>
   310d0:	ldrb	w0, [x22]
   310d4:	cmp	w0, #0x66
   310d8:	b.eq	31150 <__asan_cplus_demangle_type@@Base+0x17fc>  // b.none
   310dc:	mov	x0, x19
   310e0:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   310e4:	mov	x23, x0
   310e8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   310ec:	add	x1, x1, #0xa58
   310f0:	mov	x0, x22
   310f4:	bl	67f0 <__asan_internal_strcmp@plt>
   310f8:	cbnz	w0, 31160 <__asan_cplus_demangle_type@@Base+0x180c>
   310fc:	mov	w1, #0x45                  	// #69
   31100:	mov	x0, x19
   31104:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   31108:	mov	x22, x0
   3110c:	mov	x3, x22
   31110:	mov	x2, x23
   31114:	mov	w1, #0x39                  	// #57
   31118:	mov	x0, x19
   3111c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31120:	mov	x3, x0
   31124:	mov	x2, x20
   31128:	mov	w1, #0x38                  	// #56
   3112c:	mov	x0, x19
   31130:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31134:	mov	x20, x0
   31138:	ldr	x23, [sp, #48]
   3113c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   31140:	mov	x0, x19
   31144:	bl	6420 <__asan_cplus_demangle_type@plt>
   31148:	mov	x23, x0
   3114c:	b	310e8 <__asan_cplus_demangle_type@@Base+0x1794>
   31150:	mov	x0, x19
   31154:	bl	303e8 <__asan_cplus_demangle_type@@Base+0xa94>
   31158:	mov	x23, x0
   3115c:	b	310e8 <__asan_cplus_demangle_type@@Base+0x1794>
   31160:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   31164:	add	x1, x1, #0xc30
   31168:	mov	x0, x22
   3116c:	bl	67f0 <__asan_internal_strcmp@plt>
   31170:	cbz	w0, 31188 <__asan_cplus_demangle_type@@Base+0x1834>
   31174:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   31178:	add	x1, x1, #0xc38
   3117c:	mov	x0, x22
   31180:	bl	67f0 <__asan_internal_strcmp@plt>
   31184:	cbnz	w0, 311c8 <__asan_cplus_demangle_type@@Base+0x1874>
   31188:	mov	x0, x19
   3118c:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   31190:	mov	x22, x0
   31194:	ldr	x0, [x19, #24]
   31198:	ldrb	w0, [x0]
   3119c:	cmp	w0, #0x49
   311a0:	b.ne	3110c <__asan_cplus_demangle_type@@Base+0x17b8>  // b.any
   311a4:	mov	x0, x19
   311a8:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   311ac:	mov	x3, x0
   311b0:	mov	x2, x22
   311b4:	mov	w1, #0x4                   	// #4
   311b8:	mov	x0, x19
   311bc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   311c0:	mov	x22, x0
   311c4:	b	3110c <__asan_cplus_demangle_type@@Base+0x17b8>
   311c8:	mov	x0, x19
   311cc:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   311d0:	mov	x22, x0
   311d4:	b	3110c <__asan_cplus_demangle_type@@Base+0x17b8>
   311d8:	mov	x0, x19
   311dc:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   311e0:	mov	x22, x0
   311e4:	mov	x0, x19
   311e8:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   311ec:	mov	x23, x0
   311f0:	mov	x0, x19
   311f4:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   311f8:	mov	x3, x0
   311fc:	cbz	x0, 312dc <__asan_cplus_demangle_type@@Base+0x1988>
   31200:	mov	x2, x23
   31204:	mov	w1, #0x3c                  	// #60
   31208:	mov	x0, x19
   3120c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31210:	mov	x3, x0
   31214:	mov	x2, x22
   31218:	mov	w1, #0x3b                  	// #59
   3121c:	mov	x0, x19
   31220:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31224:	mov	x3, x0
   31228:	mov	x2, x20
   3122c:	mov	w1, #0x3a                  	// #58
   31230:	mov	x0, x19
   31234:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31238:	mov	x20, x0
   3123c:	ldr	x23, [sp, #48]
   31240:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   31244:	mov	x0, x19
   31248:	bl	303e8 <__asan_cplus_demangle_type@@Base+0xa94>
   3124c:	mov	x22, x0
   31250:	mov	x0, x19
   31254:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   31258:	mov	x23, x0
   3125c:	mov	x0, x19
   31260:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   31264:	mov	x3, x0
   31268:	cbnz	x0, 31200 <__asan_cplus_demangle_type@@Base+0x18ac>
   3126c:	mov	x20, x0
   31270:	ldr	x23, [sp, #48]
   31274:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   31278:	add	x0, x0, #0x1
   3127c:	str	x0, [x19, #24]
   31280:	mov	x3, #0x0                   	// #0
   31284:	b	31200 <__asan_cplus_demangle_type@@Base+0x18ac>
   31288:	ldrb	w1, [x0, #1]
   3128c:	cmp	w1, #0x69
   31290:	b.eq	312a0 <__asan_cplus_demangle_type@@Base+0x194c>  // b.none
   31294:	mov	x20, #0x0                   	// #0
   31298:	ldr	x23, [sp, #48]
   3129c:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   312a0:	add	x0, x0, #0x2
   312a4:	str	x0, [x19, #24]
   312a8:	mov	w1, #0x45                  	// #69
   312ac:	mov	x0, x19
   312b0:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   312b4:	mov	x3, x0
   312b8:	b	31200 <__asan_cplus_demangle_type@@Base+0x18ac>
   312bc:	mov	x0, x19
   312c0:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   312c4:	mov	x3, x0
   312c8:	b	31200 <__asan_cplus_demangle_type@@Base+0x18ac>
   312cc:	mov	x20, x22
   312d0:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   312d4:	mov	x20, x22
   312d8:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   312dc:	mov	x20, x0
   312e0:	ldr	x23, [sp, #48]
   312e4:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   312e8:	mov	x20, #0x0                   	// #0
   312ec:	ldr	x23, [sp, #48]
   312f0:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   312f4:	mov	x20, #0x0                   	// #0
   312f8:	ldr	x23, [sp, #48]
   312fc:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   31300:	mov	x20, #0x0                   	// #0
   31304:	ldr	x23, [sp, #48]
   31308:	b	30c48 <__asan_cplus_demangle_type@@Base+0x12f4>
   3130c:	mov	w23, #0x0                   	// #0
   31310:	cmp	w0, #0x34
   31314:	b.ne	30f74 <__asan_cplus_demangle_type@@Base+0x1620>  // b.any
   31318:	ldr	x0, [x19, #24]
   3131c:	ldrb	w1, [x0]
   31320:	cmp	w1, #0x5f
   31324:	b.eq	31340 <__asan_cplus_demangle_type@@Base+0x19ec>  // b.none
   31328:	mov	w23, #0x0                   	// #0
   3132c:	b	30f74 <__asan_cplus_demangle_type@@Base+0x1620>
   31330:	ldr	x0, [x19, #24]
   31334:	ldrb	w1, [x0]
   31338:	cmp	w1, #0x5f
   3133c:	b.ne	30f60 <__asan_cplus_demangle_type@@Base+0x160c>  // b.any
   31340:	add	x0, x0, #0x1
   31344:	str	x0, [x19, #24]
   31348:	mov	w1, #0x45                  	// #69
   3134c:	mov	x0, x19
   31350:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   31354:	mov	x3, x0
   31358:	b	30f84 <__asan_cplus_demangle_type@@Base+0x1630>
   3135c:	stp	x29, x30, [sp, #-64]!
   31360:	mov	x29, sp
   31364:	stp	x19, x20, [sp, #16]
   31368:	stp	x21, x22, [sp, #32]
   3136c:	mov	x19, x0
   31370:	and	w22, w1, #0xff
   31374:	str	xzr, [sp, #56]
   31378:	ldr	x0, [x0, #24]
   3137c:	ldrb	w2, [x0]
   31380:	add	x20, sp, #0x38
   31384:	mov	w21, #0x2e                  	// #46
   31388:	cmp	w2, w1, uxtb
   3138c:	b.eq	313e8 <__asan_cplus_demangle_type@@Base+0x1a94>  // b.none
   31390:	mov	x0, x19
   31394:	bl	30bd0 <__asan_cplus_demangle_type@@Base+0x127c>
   31398:	cbz	x0, 313d8 <__asan_cplus_demangle_type@@Base+0x1a84>
   3139c:	mov	x3, #0x0                   	// #0
   313a0:	mov	x2, x0
   313a4:	mov	w1, w21
   313a8:	mov	x0, x19
   313ac:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   313b0:	str	x0, [x20]
   313b4:	cbz	x0, 313d8 <__asan_cplus_demangle_type@@Base+0x1a84>
   313b8:	add	x20, x0, #0x10
   313bc:	ldr	x0, [x19, #24]
   313c0:	ldrb	w1, [x0]
   313c4:	cmp	w1, w22
   313c8:	b.ne	31390 <__asan_cplus_demangle_type@@Base+0x1a3c>  // b.any
   313cc:	add	x0, x0, #0x1
   313d0:	str	x0, [x19, #24]
   313d4:	ldr	x0, [sp, #56]
   313d8:	ldp	x19, x20, [sp, #16]
   313dc:	ldp	x21, x22, [sp, #32]
   313e0:	ldp	x29, x30, [sp], #64
   313e4:	ret
   313e8:	add	x0, x0, #0x1
   313ec:	str	x0, [x19, #24]
   313f0:	mov	x3, #0x0                   	// #0
   313f4:	mov	x2, #0x0                   	// #0
   313f8:	mov	w1, w21
   313fc:	mov	x0, x19
   31400:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31404:	b	313d8 <__asan_cplus_demangle_type@@Base+0x1a84>
   31408:	stp	x29, x30, [sp, #-112]!
   3140c:	mov	x29, sp
   31410:	stp	x19, x20, [sp, #16]
   31414:	stp	x21, x22, [sp, #32]
   31418:	stp	x23, x24, [sp, #48]
   3141c:	stp	x25, x26, [sp, #64]
   31420:	stp	x27, x28, [sp, #80]
   31424:	mov	x19, x0
   31428:	mov	x23, x1
   3142c:	mov	w26, w2
   31430:	ldr	x0, [x0, #24]
   31434:	ldrb	w20, [x0]
   31438:	cmp	w2, #0x0
   3143c:	mov	w0, #0x1e                  	// #30
   31440:	mov	w1, #0x1b                  	// #27
   31444:	csel	w0, w0, w1, ne  // ne = any
   31448:	mov	w25, #0x1d                  	// #29
   3144c:	mov	w1, #0x1a                  	// #26
   31450:	csel	w25, w25, w1, ne  // ne = any
   31454:	mov	w24, #0x1c                  	// #28
   31458:	mov	w1, #0x19                  	// #25
   3145c:	csel	w24, w24, w1, ne  // ne = any
   31460:	mov	x21, x23
   31464:	mov	w28, #0x50                  	// #80
   31468:	mov	x22, #0x0                   	// #0
   3146c:	mov	w27, #0x4f                  	// #79
   31470:	str	w0, [sp, #108]
   31474:	b	314b0 <__asan_cplus_demangle_type@@Base+0x1b5c>
   31478:	ldr	w0, [x19, #72]
   3147c:	add	w0, w0, #0x9
   31480:	str	w0, [x19, #72]
   31484:	mov	w1, w24
   31488:	mov	x3, x22
   3148c:	mov	x2, x22
   31490:	mov	x0, x19
   31494:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31498:	mov	x3, x0
   3149c:	str	x0, [x21]
   314a0:	cbz	x0, 3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   314a4:	add	x21, x0, #0x8
   314a8:	ldr	x0, [x19, #24]
   314ac:	ldrb	w20, [x0]
   314b0:	mov	x0, x19
   314b4:	bl	28df8 <__asan_backtrace_create_state@@Base+0x4ac>
   314b8:	cbz	w0, 315e4 <__asan_cplus_demangle_type@@Base+0x1c90>
   314bc:	ldr	x0, [x19, #24]
   314c0:	add	x1, x0, #0x1
   314c4:	str	x1, [x19, #24]
   314c8:	cmp	w20, #0x72
   314cc:	b.eq	31478 <__asan_cplus_demangle_type@@Base+0x1b24>  // b.none
   314d0:	cmp	w20, #0x56
   314d4:	b.eq	31558 <__asan_cplus_demangle_type@@Base+0x1c04>  // b.none
   314d8:	cmp	w20, #0x4b
   314dc:	b.eq	31570 <__asan_cplus_demangle_type@@Base+0x1c1c>  // b.none
   314e0:	ldrb	w1, [x0, #1]
   314e4:	cbz	w1, 31658 <__asan_cplus_demangle_type@@Base+0x1d04>
   314e8:	add	x1, x0, #0x2
   314ec:	str	x1, [x19, #24]
   314f0:	ldrb	w2, [x0, #1]
   314f4:	cmp	w2, #0x78
   314f8:	b.eq	31588 <__asan_cplus_demangle_type@@Base+0x1c34>  // b.none
   314fc:	and	w0, w2, #0xffffffdf
   31500:	and	w0, w0, #0xff
   31504:	cmp	w0, #0x4f
   31508:	b.ne	315a0 <__asan_cplus_demangle_type@@Base+0x1c4c>  // b.any
   3150c:	ldr	w0, [x19, #72]
   31510:	add	w0, w0, #0x9
   31514:	str	w0, [x19, #72]
   31518:	mov	x3, x22
   3151c:	mov	w1, w27
   31520:	cmp	w2, #0x4f
   31524:	b.ne	3148c <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   31528:	mov	x0, x19
   3152c:	bl	30bd0 <__asan_cplus_demangle_type@@Base+0x127c>
   31530:	mov	x3, x0
   31534:	cbz	x0, 3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   31538:	ldr	x0, [x19, #24]
   3153c:	ldrb	w1, [x0]
   31540:	cmp	w1, #0x45
   31544:	b.ne	3167c <__asan_cplus_demangle_type@@Base+0x1d28>  // b.any
   31548:	add	x0, x0, #0x1
   3154c:	str	x0, [x19, #24]
   31550:	mov	w1, w27
   31554:	b	3148c <__asan_cplus_demangle_type@@Base+0x1b38>
   31558:	ldr	w0, [x19, #72]
   3155c:	add	w0, w0, #0x9
   31560:	str	w0, [x19, #72]
   31564:	mov	w1, w25
   31568:	mov	x3, x22
   3156c:	b	3148c <__asan_cplus_demangle_type@@Base+0x1b38>
   31570:	ldr	w0, [x19, #72]
   31574:	add	w0, w0, #0x6
   31578:	str	w0, [x19, #72]
   3157c:	ldr	w1, [sp, #108]
   31580:	mov	x3, x22
   31584:	b	3148c <__asan_cplus_demangle_type@@Base+0x1b38>
   31588:	ldr	w0, [x19, #72]
   3158c:	add	w0, w0, #0x11
   31590:	str	w0, [x19, #72]
   31594:	mov	x3, x22
   31598:	mov	w1, #0x4d                  	// #77
   3159c:	b	3148c <__asan_cplus_demangle_type@@Base+0x1b38>
   315a0:	cmp	w2, #0x77
   315a4:	b.ne	31684 <__asan_cplus_demangle_type@@Base+0x1d30>  // b.any
   315a8:	ldr	w0, [x19, #72]
   315ac:	add	w0, w0, #0x6
   315b0:	str	w0, [x19, #72]
   315b4:	mov	x0, x19
   315b8:	bl	302b4 <__asan_cplus_demangle_type@@Base+0x960>
   315bc:	mov	x3, x0
   315c0:	cbz	x0, 3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   315c4:	ldr	x0, [x19, #24]
   315c8:	ldrb	w1, [x0]
   315cc:	cmp	w1, #0x45
   315d0:	b.ne	3168c <__asan_cplus_demangle_type@@Base+0x1d38>  // b.any
   315d4:	add	x0, x0, #0x1
   315d8:	str	x0, [x19, #24]
   315dc:	mov	w1, w28
   315e0:	b	3148c <__asan_cplus_demangle_type@@Base+0x1b38>
   315e4:	cmp	w20, #0x46
   315e8:	mov	x3, x21
   315ec:	ccmp	w26, #0x0, #0x0, eq  // eq = none
   315f0:	b.ne	3165c <__asan_cplus_demangle_type@@Base+0x1d08>  // b.any
   315f4:	cmp	x21, x23
   315f8:	b.eq	31694 <__asan_cplus_demangle_type@@Base+0x1d40>  // b.none
   315fc:	mov	w4, #0x1d                  	// #29
   31600:	mov	w3, #0x1e                  	// #30
   31604:	mov	w2, #0x1c                  	// #28
   31608:	b	31620 <__asan_cplus_demangle_type@@Base+0x1ccc>
   3160c:	str	w4, [x1]
   31610:	ldr	x23, [x23]
   31614:	add	x23, x23, #0x8
   31618:	cmp	x21, x23
   3161c:	b.eq	31650 <__asan_cplus_demangle_type@@Base+0x1cfc>  // b.none
   31620:	ldr	x1, [x23]
   31624:	ldr	w0, [x1]
   31628:	cmp	w0, #0x1a
   3162c:	b.eq	3160c <__asan_cplus_demangle_type@@Base+0x1cb8>  // b.none
   31630:	cmp	w0, #0x1b
   31634:	b.eq	31648 <__asan_cplus_demangle_type@@Base+0x1cf4>  // b.none
   31638:	cmp	w0, #0x19
   3163c:	b.ne	31610 <__asan_cplus_demangle_type@@Base+0x1cbc>  // b.any
   31640:	str	w2, [x1]
   31644:	b	31610 <__asan_cplus_demangle_type@@Base+0x1cbc>
   31648:	str	w3, [x1]
   3164c:	b	31610 <__asan_cplus_demangle_type@@Base+0x1cbc>
   31650:	mov	x3, x23
   31654:	b	3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   31658:	mov	x3, #0x0                   	// #0
   3165c:	mov	x0, x3
   31660:	ldp	x19, x20, [sp, #16]
   31664:	ldp	x21, x22, [sp, #32]
   31668:	ldp	x23, x24, [sp, #48]
   3166c:	ldp	x25, x26, [sp, #64]
   31670:	ldp	x27, x28, [sp, #80]
   31674:	ldp	x29, x30, [sp], #112
   31678:	ret
   3167c:	mov	x3, #0x0                   	// #0
   31680:	b	3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   31684:	mov	x3, #0x0                   	// #0
   31688:	b	3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   3168c:	mov	x3, #0x0                   	// #0
   31690:	b	3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   31694:	mov	x3, x23
   31698:	b	3165c <__asan_cplus_demangle_type@@Base+0x1d08>
   3169c:	stp	x29, x30, [sp, #-112]!
   316a0:	mov	x29, sp
   316a4:	stp	x19, x20, [sp, #16]
   316a8:	stp	x21, x22, [sp, #32]
   316ac:	mov	x19, x0
   316b0:	ldr	x1, [x0, #24]
   316b4:	ldrb	w0, [x1]
   316b8:	cmp	w0, #0x55
   316bc:	b.eq	31a98 <__asan_cplus_demangle_type@@Base+0x2144>  // b.none
   316c0:	b.hi	31724 <__asan_cplus_demangle_type@@Base+0x1dd0>  // b.pmore
   316c4:	cmp	w0, #0x4e
   316c8:	b.eq	317b8 <__asan_cplus_demangle_type@@Base+0x1e64>  // b.none
   316cc:	cmp	w0, #0x53
   316d0:	b.ne	31b2c <__asan_cplus_demangle_type@@Base+0x21d8>  // b.any
   316d4:	ldrb	w0, [x1, #1]
   316d8:	cmp	w0, #0x74
   316dc:	b.eq	31ab8 <__asan_cplus_demangle_type@@Base+0x2164>  // b.none
   316e0:	mov	w1, #0x0                   	// #0
   316e4:	mov	x0, x19
   316e8:	bl	2f658 <__asan_cplus_demangle_fill_name@@Base+0x1f8>
   316ec:	mov	x22, x0
   316f0:	ldr	x0, [x19, #24]
   316f4:	ldrb	w0, [x0]
   316f8:	cmp	w0, #0x49
   316fc:	b.ne	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>  // b.any
   31700:	mov	x0, x19
   31704:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   31708:	mov	x3, x0
   3170c:	mov	x2, x22
   31710:	mov	w1, #0x4                   	// #4
   31714:	mov	x0, x19
   31718:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   3171c:	mov	x22, x0
   31720:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31724:	cmp	w0, #0x5a
   31728:	b.ne	31b2c <__asan_cplus_demangle_type@@Base+0x21d8>  // b.any
   3172c:	add	x1, x1, #0x1
   31730:	str	x1, [x19, #24]
   31734:	mov	w1, #0x0                   	// #0
   31738:	mov	x0, x19
   3173c:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   31740:	mov	x22, x0
   31744:	cbz	x0, 31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31748:	ldr	x0, [x19, #24]
   3174c:	ldrb	w1, [x0]
   31750:	cmp	w1, #0x45
   31754:	b.ne	31b7c <__asan_cplus_demangle_type@@Base+0x2228>  // b.any
   31758:	add	x1, x0, #0x1
   3175c:	str	x1, [x19, #24]
   31760:	ldrb	w1, [x0, #1]
   31764:	cmp	w1, #0x73
   31768:	b.eq	319d0 <__asan_cplus_demangle_type@@Base+0x207c>  // b.none
   3176c:	cmp	w1, #0x64
   31770:	b.eq	31a00 <__asan_cplus_demangle_type@@Base+0x20ac>  // b.none
   31774:	mov	x0, x19
   31778:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   3177c:	mov	x3, x0
   31780:	cbz	x0, 31794 <__asan_cplus_demangle_type@@Base+0x1e40>
   31784:	ldr	w0, [x0]
   31788:	sub	w0, w0, #0x46
   3178c:	tst	w0, #0xfffffffd
   31790:	b.ne	31a3c <__asan_cplus_demangle_type@@Base+0x20e8>  // b.any
   31794:	ldr	w0, [x22]
   31798:	cmp	w0, #0x3
   3179c:	b.eq	31a80 <__asan_cplus_demangle_type@@Base+0x212c>  // b.none
   317a0:	mov	x2, x22
   317a4:	mov	w1, #0x2                   	// #2
   317a8:	mov	x0, x19
   317ac:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   317b0:	mov	x22, x0
   317b4:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   317b8:	add	x1, x1, #0x1
   317bc:	str	x1, [x19, #24]
   317c0:	mov	w2, #0x1                   	// #1
   317c4:	add	x1, sp, #0x68
   317c8:	mov	x0, x19
   317cc:	bl	31408 <__asan_cplus_demangle_type@@Base+0x1ab4>
   317d0:	mov	x22, x0
   317d4:	cbz	x0, 31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   317d8:	stp	x27, x28, [sp, #80]
   317dc:	mov	x1, #0x0                   	// #0
   317e0:	mov	x0, x19
   317e4:	bl	28e50 <__asan_backtrace_create_state@@Base+0x504>
   317e8:	mov	x27, x0
   317ec:	ldr	x0, [x19, #24]
   317f0:	ldrb	w20, [x0]
   317f4:	cbz	w20, 31bac <__asan_cplus_demangle_type@@Base+0x2258>
   317f8:	stp	x23, x24, [sp, #48]
   317fc:	stp	x25, x26, [sp, #64]
   31800:	mov	x23, #0x0                   	// #0
   31804:	mov	w24, #0x1                   	// #1
   31808:	mov	w26, #0x55                  	// #85
   3180c:	mov	w25, #0x4c                  	// #76
   31810:	mov	w28, #0x4                   	// #4
   31814:	b	3188c <__asan_cplus_demangle_type@@Base+0x1f38>
   31818:	ldrb	w0, [x0, #1]
   3181c:	and	w0, w0, #0xffffffdf
   31820:	and	w0, w0, #0xff
   31824:	cmp	w0, #0x54
   31828:	b.ne	318d8 <__asan_cplus_demangle_type@@Base+0x1f84>  // b.any
   3182c:	mov	x0, x19
   31830:	bl	6420 <__asan_cplus_demangle_type@plt>
   31834:	mov	x21, x0
   31838:	mov	w1, w24
   3183c:	cbz	x23, 3185c <__asan_cplus_demangle_type@@Base+0x1f08>
   31840:	mov	x3, x21
   31844:	mov	x2, x23
   31848:	mov	x0, x19
   3184c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31850:	mov	x21, x0
   31854:	cmp	w20, #0x53
   31858:	b.eq	3187c <__asan_cplus_demangle_type@@Base+0x1f28>  // b.none
   3185c:	ldr	x0, [x19, #24]
   31860:	ldrb	w20, [x0]
   31864:	cmp	w20, #0x45
   31868:	b.eq	31888 <__asan_cplus_demangle_type@@Base+0x1f34>  // b.none
   3186c:	mov	x1, x21
   31870:	mov	x0, x19
   31874:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   31878:	cbz	w0, 31968 <__asan_cplus_demangle_type@@Base+0x2014>
   3187c:	ldr	x0, [x19, #24]
   31880:	ldrb	w20, [x0]
   31884:	cbz	w20, 31ba4 <__asan_cplus_demangle_type@@Base+0x2250>
   31888:	mov	x23, x21
   3188c:	cmp	w20, #0x44
   31890:	b.eq	31818 <__asan_cplus_demangle_type@@Base+0x1ec4>  // b.none
   31894:	sub	w2, w20, #0x30
   31898:	and	w2, w2, #0xff
   3189c:	sub	w1, w20, #0x61
   318a0:	and	w1, w1, #0xff
   318a4:	cmp	w2, #0x9
   318a8:	ccmp	w1, #0x19, #0x0, hi  // hi = pmore
   318ac:	b.ls	318c0 <__asan_cplus_demangle_type@@Base+0x1f6c>  // b.plast
   318b0:	cmp	w20, #0x43
   318b4:	ccmp	w20, w26, #0x4, ne  // ne = any
   318b8:	ccmp	w20, w25, #0x4, ne  // ne = any
   318bc:	b.ne	318e8 <__asan_cplus_demangle_type@@Base+0x1f94>  // b.any
   318c0:	mov	x0, x19
   318c4:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   318c8:	mov	x21, x0
   318cc:	mov	w1, w24
   318d0:	cbnz	x23, 31840 <__asan_cplus_demangle_type@@Base+0x1eec>
   318d4:	b	31854 <__asan_cplus_demangle_type@@Base+0x1f00>
   318d8:	mov	x0, x19
   318dc:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   318e0:	mov	x21, x0
   318e4:	b	31838 <__asan_cplus_demangle_type@@Base+0x1ee4>
   318e8:	cmp	w20, #0x53
   318ec:	b.eq	31924 <__asan_cplus_demangle_type@@Base+0x1fd0>  // b.none
   318f0:	cmp	w20, #0x49
   318f4:	b.eq	31940 <__asan_cplus_demangle_type@@Base+0x1fec>  // b.none
   318f8:	cmp	w20, #0x54
   318fc:	b.eq	31958 <__asan_cplus_demangle_type@@Base+0x2004>  // b.none
   31900:	cmp	w20, #0x45
   31904:	b.eq	31974 <__asan_cplus_demangle_type@@Base+0x2020>  // b.none
   31908:	cmp	w20, #0x4d
   3190c:	ccmp	x23, #0x0, #0x4, eq  // eq = none
   31910:	b.eq	31bc8 <__asan_cplus_demangle_type@@Base+0x2274>  // b.none
   31914:	add	x0, x0, #0x1
   31918:	str	x0, [x19, #24]
   3191c:	mov	x21, x23
   31920:	b	3187c <__asan_cplus_demangle_type@@Base+0x1f28>
   31924:	mov	w1, w24
   31928:	mov	x0, x19
   3192c:	bl	2f658 <__asan_cplus_demangle_fill_name@@Base+0x1f8>
   31930:	mov	x21, x0
   31934:	mov	w1, w24
   31938:	cbnz	x23, 31840 <__asan_cplus_demangle_type@@Base+0x1eec>
   3193c:	b	3187c <__asan_cplus_demangle_type@@Base+0x1f28>
   31940:	cbz	x23, 31bbc <__asan_cplus_demangle_type@@Base+0x2268>
   31944:	mov	x0, x19
   31948:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3194c:	mov	x21, x0
   31950:	mov	w1, w28
   31954:	b	31840 <__asan_cplus_demangle_type@@Base+0x1eec>
   31958:	mov	x0, x19
   3195c:	bl	28f38 <__asan_backtrace_create_state@@Base+0x5ec>
   31960:	mov	x21, x0
   31964:	b	31838 <__asan_cplus_demangle_type@@Base+0x1ee4>
   31968:	ldp	x23, x24, [sp, #48]
   3196c:	ldp	x25, x26, [sp, #64]
   31970:	b	31bac <__asan_cplus_demangle_type@@Base+0x2258>
   31974:	str	x23, [x22]
   31978:	cbz	x23, 319bc <__asan_cplus_demangle_type@@Base+0x2068>
   3197c:	cbz	x27, 3198c <__asan_cplus_demangle_type@@Base+0x2038>
   31980:	ldr	x0, [sp, #104]
   31984:	str	x0, [x27, #8]
   31988:	str	x27, [sp, #104]
   3198c:	ldr	x0, [x19, #24]
   31990:	ldrb	w1, [x0]
   31994:	mov	x22, #0x0                   	// #0
   31998:	cmp	w1, #0x45
   3199c:	b.ne	31bd4 <__asan_cplus_demangle_type@@Base+0x2280>  // b.any
   319a0:	add	x0, x0, #0x1
   319a4:	str	x0, [x19, #24]
   319a8:	ldr	x22, [sp, #104]
   319ac:	ldp	x23, x24, [sp, #48]
   319b0:	ldp	x25, x26, [sp, #64]
   319b4:	ldp	x27, x28, [sp, #80]
   319b8:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   319bc:	mov	x22, x23
   319c0:	ldp	x23, x24, [sp, #48]
   319c4:	ldp	x25, x26, [sp, #64]
   319c8:	ldp	x27, x28, [sp, #80]
   319cc:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   319d0:	add	x0, x0, #0x2
   319d4:	str	x0, [x19, #24]
   319d8:	mov	x0, x19
   319dc:	bl	28fe4 <__asan_backtrace_create_state@@Base+0x698>
   319e0:	cbz	w0, 31b84 <__asan_cplus_demangle_type@@Base+0x2230>
   319e4:	mov	w2, #0xe                   	// #14
   319e8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   319ec:	add	x1, x1, #0xc40
   319f0:	mov	x0, x19
   319f4:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   319f8:	mov	x3, x0
   319fc:	b	31794 <__asan_cplus_demangle_type@@Base+0x1e40>
   31a00:	add	x0, x0, #0x2
   31a04:	str	x0, [x19, #24]
   31a08:	mov	x0, x19
   31a0c:	bl	28ebc <__asan_backtrace_create_state@@Base+0x570>
   31a10:	mov	w20, w0
   31a14:	tbnz	w0, #31, 31b8c <__asan_cplus_demangle_type@@Base+0x2238>
   31a18:	mov	x0, x19
   31a1c:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   31a20:	mov	x21, x0
   31a24:	cbz	x0, 31a54 <__asan_cplus_demangle_type@@Base+0x2100>
   31a28:	ldr	w0, [x0]
   31a2c:	sub	w0, w0, #0x46
   31a30:	tst	w0, #0xfffffffd
   31a34:	b.eq	31a54 <__asan_cplus_demangle_type@@Base+0x2100>  // b.none
   31a38:	b	31a44 <__asan_cplus_demangle_type@@Base+0x20f0>
   31a3c:	mov	x21, x3
   31a40:	mov	w20, #0xffffffff            	// #-1
   31a44:	mov	x0, x19
   31a48:	bl	28fe4 <__asan_backtrace_create_state@@Base+0x698>
   31a4c:	cbz	w0, 31b94 <__asan_cplus_demangle_type@@Base+0x2240>
   31a50:	tbnz	w20, #31, 31a78 <__asan_cplus_demangle_type@@Base+0x2124>
   31a54:	mov	x0, x19
   31a58:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   31a5c:	mov	x3, x0
   31a60:	cbz	x0, 31794 <__asan_cplus_demangle_type@@Base+0x1e40>
   31a64:	mov	w0, #0x47                  	// #71
   31a68:	str	w0, [x3]
   31a6c:	str	w20, [x3, #16]
   31a70:	str	x21, [x3, #8]
   31a74:	b	31794 <__asan_cplus_demangle_type@@Base+0x1e40>
   31a78:	mov	x3, x21
   31a7c:	b	31794 <__asan_cplus_demangle_type@@Base+0x1e40>
   31a80:	ldr	x0, [x22, #16]
   31a84:	ldr	w1, [x0]
   31a88:	cmp	w1, #0x29
   31a8c:	b.ne	317a0 <__asan_cplus_demangle_type@@Base+0x1e4c>  // b.any
   31a90:	str	xzr, [x0, #8]
   31a94:	b	317a0 <__asan_cplus_demangle_type@@Base+0x1e4c>
   31a98:	mov	x0, x19
   31a9c:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   31aa0:	mov	x22, x0
   31aa4:	mov	x0, x22
   31aa8:	ldp	x19, x20, [sp, #16]
   31aac:	ldp	x21, x22, [sp, #32]
   31ab0:	ldp	x29, x30, [sp], #112
   31ab4:	ret
   31ab8:	add	x1, x1, #0x2
   31abc:	str	x1, [x19, #24]
   31ac0:	mov	w2, #0x3                   	// #3
   31ac4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   31ac8:	add	x1, x1, #0xc50
   31acc:	mov	x0, x19
   31ad0:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   31ad4:	mov	x20, x0
   31ad8:	mov	x0, x19
   31adc:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   31ae0:	mov	x3, x0
   31ae4:	mov	x2, x20
   31ae8:	mov	w1, #0x1                   	// #1
   31aec:	mov	x0, x19
   31af0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31af4:	mov	x22, x0
   31af8:	ldr	w0, [x19, #72]
   31afc:	add	w0, w0, #0x3
   31b00:	str	w0, [x19, #72]
   31b04:	ldr	x0, [x19, #24]
   31b08:	ldrb	w0, [x0]
   31b0c:	cmp	w0, #0x49
   31b10:	b.ne	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>  // b.any
   31b14:	mov	x1, x22
   31b18:	mov	x0, x19
   31b1c:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   31b20:	cbnz	w0, 31700 <__asan_cplus_demangle_type@@Base+0x1dac>
   31b24:	mov	x22, #0x0                   	// #0
   31b28:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31b2c:	mov	x0, x19
   31b30:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   31b34:	mov	x22, x0
   31b38:	ldr	x0, [x19, #24]
   31b3c:	ldrb	w0, [x0]
   31b40:	cmp	w0, #0x49
   31b44:	b.ne	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>  // b.any
   31b48:	mov	x1, x22
   31b4c:	mov	x0, x19
   31b50:	bl	29084 <__asan_backtrace_create_state@@Base+0x738>
   31b54:	cbz	w0, 31b9c <__asan_cplus_demangle_type@@Base+0x2248>
   31b58:	mov	x0, x19
   31b5c:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   31b60:	mov	x3, x0
   31b64:	mov	x2, x22
   31b68:	mov	w1, #0x4                   	// #4
   31b6c:	mov	x0, x19
   31b70:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31b74:	mov	x22, x0
   31b78:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31b7c:	mov	x22, #0x0                   	// #0
   31b80:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31b84:	mov	x22, #0x0                   	// #0
   31b88:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31b8c:	mov	x22, #0x0                   	// #0
   31b90:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31b94:	mov	x22, #0x0                   	// #0
   31b98:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31b9c:	mov	x22, #0x0                   	// #0
   31ba0:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31ba4:	ldp	x23, x24, [sp, #48]
   31ba8:	ldp	x25, x26, [sp, #64]
   31bac:	str	xzr, [x22]
   31bb0:	mov	x22, #0x0                   	// #0
   31bb4:	ldp	x27, x28, [sp, #80]
   31bb8:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31bbc:	ldp	x23, x24, [sp, #48]
   31bc0:	ldp	x25, x26, [sp, #64]
   31bc4:	b	31bac <__asan_cplus_demangle_type@@Base+0x2258>
   31bc8:	ldp	x23, x24, [sp, #48]
   31bcc:	ldp	x25, x26, [sp, #64]
   31bd0:	b	31bac <__asan_cplus_demangle_type@@Base+0x2258>
   31bd4:	ldp	x23, x24, [sp, #48]
   31bd8:	ldp	x25, x26, [sp, #64]
   31bdc:	ldp	x27, x28, [sp, #80]
   31be0:	b	31aa4 <__asan_cplus_demangle_type@@Base+0x2150>
   31be4:	stp	x29, x30, [sp, #-96]!
   31be8:	mov	x29, sp
   31bec:	stp	x19, x20, [sp, #16]
   31bf0:	mov	x19, x0
   31bf4:	ldr	x0, [x0, #24]
   31bf8:	ldrb	w2, [x0]
   31bfc:	cmp	w2, #0x47
   31c00:	mov	w3, #0x54                  	// #84
   31c04:	ccmp	w2, w3, #0x4, ne  // ne = any
   31c08:	b.ne	3222c <__asan_cplus_demangle_type@@Base+0x28d8>  // b.any
   31c0c:	ldr	w2, [x19, #72]
   31c10:	add	w1, w2, #0x14
   31c14:	str	w1, [x19, #72]
   31c18:	ldrb	w1, [x0]
   31c1c:	cmp	w1, w3
   31c20:	b.eq	31cd0 <__asan_cplus_demangle_type@@Base+0x237c>  // b.none
   31c24:	mov	x20, #0x0                   	// #0
   31c28:	cmp	w1, #0x47
   31c2c:	b.ne	32268 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   31c30:	add	x1, x0, #0x1
   31c34:	str	x1, [x19, #24]
   31c38:	ldrb	w1, [x0, #1]
   31c3c:	cbz	w1, 3232c <__asan_cplus_demangle_type@@Base+0x29d8>
   31c40:	add	x1, x0, #0x2
   31c44:	str	x1, [x19, #24]
   31c48:	ldrb	w1, [x0, #1]
   31c4c:	cmp	w1, #0x54
   31c50:	b.eq	32090 <__asan_cplus_demangle_type@@Base+0x273c>  // b.none
   31c54:	cmp	w1, #0x54
   31c58:	b.ls	32000 <__asan_cplus_demangle_type@@Base+0x26ac>  // b.plast
   31c5c:	cmp	w1, #0x56
   31c60:	b.eq	32044 <__asan_cplus_demangle_type@@Base+0x26f0>  // b.none
   31c64:	mov	x20, #0x0                   	// #0
   31c68:	cmp	w1, #0x72
   31c6c:	b.ne	32268 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   31c70:	mov	x0, x19
   31c74:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   31c78:	cmp	w0, #0x1
   31c7c:	b.le	32334 <__asan_cplus_demangle_type@@Base+0x29e0>
   31c80:	ldr	x1, [x19, #24]
   31c84:	ldrb	w2, [x1]
   31c88:	cbz	w2, 3233c <__asan_cplus_demangle_type@@Base+0x29e8>
   31c8c:	stp	x21, x22, [sp, #32]
   31c90:	add	x21, x1, #0x1
   31c94:	str	x21, [x19, #24]
   31c98:	ldrb	w1, [x1]
   31c9c:	mov	x20, #0x0                   	// #0
   31ca0:	cmp	w1, #0x5f
   31ca4:	b.ne	323a0 <__asan_cplus_demangle_type@@Base+0x2a4c>  // b.any
   31ca8:	stp	x23, x24, [sp, #48]
   31cac:	stp	x25, x26, [sp, #64]
   31cb0:	stp	x27, x28, [sp, #80]
   31cb4:	sub	w22, w0, #0x1
   31cb8:	mov	x24, #0x0                   	// #0
   31cbc:	mov	w26, #0x41                  	// #65
   31cc0:	mov	w28, #0x2f                  	// #47
   31cc4:	mov	w27, #0x2e                  	// #46
   31cc8:	mov	w25, #0x40                  	// #64
   31ccc:	b	3217c <__asan_cplus_demangle_type@@Base+0x2828>
   31cd0:	add	x1, x0, #0x1
   31cd4:	str	x1, [x19, #24]
   31cd8:	ldrb	w1, [x0, #1]
   31cdc:	mov	x20, #0x0                   	// #0
   31ce0:	cbz	w1, 32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31ce4:	add	x1, x0, #0x2
   31ce8:	str	x1, [x19, #24]
   31cec:	ldrb	w0, [x0, #1]
   31cf0:	cmp	w0, #0x53
   31cf4:	b.eq	31ebc <__asan_cplus_demangle_type@@Base+0x2568>  // b.none
   31cf8:	b.ls	31d58 <__asan_cplus_demangle_type@@Base+0x2404>  // b.plast
   31cfc:	cmp	w0, #0x63
   31d00:	b.eq	31f1c <__asan_cplus_demangle_type@@Base+0x25c8>  // b.none
   31d04:	b.ls	31e00 <__asan_cplus_demangle_type@@Base+0x24ac>  // b.plast
   31d08:	cmp	w0, #0x68
   31d0c:	b.eq	31ee0 <__asan_cplus_demangle_type@@Base+0x258c>  // b.none
   31d10:	mov	x20, #0x0                   	// #0
   31d14:	cmp	w0, #0x76
   31d18:	b.ne	32268 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   31d1c:	mov	w1, #0x76                  	// #118
   31d20:	mov	x0, x19
   31d24:	bl	28d4c <__asan_backtrace_create_state@@Base+0x400>
   31d28:	mov	x20, #0x0                   	// #0
   31d2c:	cbz	w0, 32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31d30:	mov	w1, #0x0                   	// #0
   31d34:	mov	x0, x19
   31d38:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   31d3c:	mov	x3, #0x0                   	// #0
   31d40:	mov	x2, x0
   31d44:	mov	w1, #0x10                  	// #16
   31d48:	mov	x0, x19
   31d4c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31d50:	mov	x20, x0
   31d54:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31d58:	cmp	w0, #0x48
   31d5c:	b.eq	31fdc <__asan_cplus_demangle_type@@Base+0x2688>  // b.none
   31d60:	b.ls	31d9c <__asan_cplus_demangle_type@@Base+0x2448>  // b.plast
   31d64:	cmp	w0, #0x49
   31d68:	b.eq	31e98 <__asan_cplus_demangle_type@@Base+0x2544>  // b.none
   31d6c:	mov	x20, #0x0                   	// #0
   31d70:	cmp	w0, #0x4a
   31d74:	b.ne	32268 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   31d78:	mov	x0, x19
   31d7c:	bl	6420 <__asan_cplus_demangle_type@plt>
   31d80:	mov	x3, #0x0                   	// #0
   31d84:	mov	x2, x0
   31d88:	mov	w1, #0x12                  	// #18
   31d8c:	mov	x0, x19
   31d90:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31d94:	mov	x20, x0
   31d98:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31d9c:	cmp	w0, #0x43
   31da0:	b.eq	31f68 <__asan_cplus_demangle_type@@Base+0x2614>  // b.none
   31da4:	cmp	w0, #0x46
   31da8:	b.ne	31dd0 <__asan_cplus_demangle_type@@Base+0x247c>  // b.any
   31dac:	mov	x0, x19
   31db0:	bl	6420 <__asan_cplus_demangle_type@plt>
   31db4:	mov	x3, #0x0                   	// #0
   31db8:	mov	x2, x0
   31dbc:	mov	w1, #0xe                   	// #14
   31dc0:	mov	x0, x19
   31dc4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31dc8:	mov	x20, x0
   31dcc:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31dd0:	mov	x20, #0x0                   	// #0
   31dd4:	cmp	w0, #0x41
   31dd8:	b.ne	32268 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   31ddc:	mov	x0, x19
   31de0:	bl	326bc <__asan_cplus_demangle_mangled_name@@Base+0x2f8>
   31de4:	mov	x3, #0x0                   	// #0
   31de8:	mov	x2, x0
   31dec:	mov	w1, #0x30                  	// #48
   31df0:	mov	x0, x19
   31df4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31df8:	mov	x20, x0
   31dfc:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31e00:	cmp	w0, #0x56
   31e04:	b.eq	31e6c <__asan_cplus_demangle_type@@Base+0x2518>  // b.none
   31e08:	cmp	w0, #0x57
   31e0c:	b.ne	31e34 <__asan_cplus_demangle_type@@Base+0x24e0>  // b.any
   31e10:	mov	x0, x19
   31e14:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   31e18:	mov	x3, #0x0                   	// #0
   31e1c:	mov	x2, x0
   31e20:	mov	w1, #0x15                  	// #21
   31e24:	mov	x0, x19
   31e28:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31e2c:	mov	x20, x0
   31e30:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31e34:	mov	x20, #0x0                   	// #0
   31e38:	cmp	w0, #0x54
   31e3c:	b.ne	32268 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   31e40:	add	w2, w2, #0xa
   31e44:	str	w2, [x19, #72]
   31e48:	mov	x0, x19
   31e4c:	bl	6420 <__asan_cplus_demangle_type@plt>
   31e50:	mov	x3, #0x0                   	// #0
   31e54:	mov	x2, x0
   31e58:	mov	w1, #0xa                   	// #10
   31e5c:	mov	x0, x19
   31e60:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31e64:	mov	x20, x0
   31e68:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31e6c:	add	w2, w2, #0xf
   31e70:	str	w2, [x19, #72]
   31e74:	mov	x0, x19
   31e78:	bl	6420 <__asan_cplus_demangle_type@plt>
   31e7c:	mov	x3, #0x0                   	// #0
   31e80:	mov	x2, x0
   31e84:	mov	w1, #0x9                   	// #9
   31e88:	mov	x0, x19
   31e8c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31e90:	mov	x20, x0
   31e94:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31e98:	mov	x0, x19
   31e9c:	bl	6420 <__asan_cplus_demangle_type@plt>
   31ea0:	mov	x3, #0x0                   	// #0
   31ea4:	mov	x2, x0
   31ea8:	mov	w1, #0xc                   	// #12
   31eac:	mov	x0, x19
   31eb0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31eb4:	mov	x20, x0
   31eb8:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31ebc:	mov	x0, x19
   31ec0:	bl	6420 <__asan_cplus_demangle_type@plt>
   31ec4:	mov	x3, #0x0                   	// #0
   31ec8:	mov	x2, x0
   31ecc:	mov	w1, #0xd                   	// #13
   31ed0:	mov	x0, x19
   31ed4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31ed8:	mov	x20, x0
   31edc:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31ee0:	mov	w1, #0x68                  	// #104
   31ee4:	mov	x0, x19
   31ee8:	bl	28d4c <__asan_backtrace_create_state@@Base+0x400>
   31eec:	mov	x20, #0x0                   	// #0
   31ef0:	cbz	w0, 32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31ef4:	mov	w1, #0x0                   	// #0
   31ef8:	mov	x0, x19
   31efc:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   31f00:	mov	x3, #0x0                   	// #0
   31f04:	mov	x2, x0
   31f08:	mov	w1, #0xf                   	// #15
   31f0c:	mov	x0, x19
   31f10:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31f14:	mov	x20, x0
   31f18:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31f1c:	mov	w1, #0x0                   	// #0
   31f20:	mov	x0, x19
   31f24:	bl	28d4c <__asan_backtrace_create_state@@Base+0x400>
   31f28:	mov	x20, #0x0                   	// #0
   31f2c:	cbz	w0, 32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31f30:	mov	w1, #0x0                   	// #0
   31f34:	mov	x0, x19
   31f38:	bl	28d4c <__asan_backtrace_create_state@@Base+0x400>
   31f3c:	cbz	w0, 32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31f40:	mov	w1, #0x0                   	// #0
   31f44:	mov	x0, x19
   31f48:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   31f4c:	mov	x3, #0x0                   	// #0
   31f50:	mov	x2, x0
   31f54:	mov	w1, #0x11                  	// #17
   31f58:	mov	x0, x19
   31f5c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31f60:	mov	x20, x0
   31f64:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31f68:	stp	x21, x22, [sp, #32]
   31f6c:	mov	x0, x19
   31f70:	bl	6420 <__asan_cplus_demangle_type@plt>
   31f74:	mov	x21, x0
   31f78:	mov	x0, x19
   31f7c:	bl	28c38 <__asan_backtrace_create_state@@Base+0x2ec>
   31f80:	tbnz	w0, #31, 32320 <__asan_cplus_demangle_type@@Base+0x29cc>
   31f84:	ldr	x0, [x19, #24]
   31f88:	ldrb	w1, [x0]
   31f8c:	mov	x20, #0x0                   	// #0
   31f90:	cmp	w1, #0x5f
   31f94:	b.eq	31fa0 <__asan_cplus_demangle_type@@Base+0x264c>  // b.none
   31f98:	ldp	x21, x22, [sp, #32]
   31f9c:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31fa0:	add	x0, x0, #0x1
   31fa4:	str	x0, [x19, #24]
   31fa8:	mov	x0, x19
   31fac:	bl	6420 <__asan_cplus_demangle_type@plt>
   31fb0:	ldr	w1, [x19, #72]
   31fb4:	add	w1, w1, #0x5
   31fb8:	str	w1, [x19, #72]
   31fbc:	mov	x3, x21
   31fc0:	mov	x2, x0
   31fc4:	mov	w1, #0xb                   	// #11
   31fc8:	mov	x0, x19
   31fcc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31fd0:	mov	x20, x0
   31fd4:	ldp	x21, x22, [sp, #32]
   31fd8:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   31fdc:	mov	x0, x19
   31fe0:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   31fe4:	mov	x3, #0x0                   	// #0
   31fe8:	mov	x2, x0
   31fec:	mov	w1, #0x14                  	// #20
   31ff0:	mov	x0, x19
   31ff4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   31ff8:	mov	x20, x0
   31ffc:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32000:	cmp	w1, #0x41
   32004:	b.eq	32068 <__asan_cplus_demangle_type@@Base+0x2714>  // b.none
   32008:	mov	x20, #0x0                   	// #0
   3200c:	cmp	w1, #0x52
   32010:	b.ne	32268 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   32014:	mov	x0, x19
   32018:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   3201c:	mov	x20, x0
   32020:	mov	x0, x19
   32024:	bl	28d08 <__asan_backtrace_create_state@@Base+0x3bc>
   32028:	mov	x3, x0
   3202c:	mov	x2, x20
   32030:	mov	w1, #0x16                  	// #22
   32034:	mov	x0, x19
   32038:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   3203c:	mov	x20, x0
   32040:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32044:	mov	x0, x19
   32048:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   3204c:	mov	x3, #0x0                   	// #0
   32050:	mov	x2, x0
   32054:	mov	w1, #0x13                  	// #19
   32058:	mov	x0, x19
   3205c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32060:	mov	x20, x0
   32064:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32068:	mov	w1, #0x0                   	// #0
   3206c:	mov	x0, x19
   32070:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   32074:	mov	x3, #0x0                   	// #0
   32078:	mov	x2, x0
   3207c:	mov	w1, #0x17                  	// #23
   32080:	mov	x0, x19
   32084:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32088:	mov	x20, x0
   3208c:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32090:	ldrb	w1, [x0, #2]
   32094:	cbz	w1, 320ac <__asan_cplus_demangle_type@@Base+0x2758>
   32098:	add	x1, x0, #0x3
   3209c:	str	x1, [x19, #24]
   320a0:	ldrb	w0, [x0, #2]
   320a4:	cmp	w0, #0x6e
   320a8:	b.eq	320d4 <__asan_cplus_demangle_type@@Base+0x2780>  // b.none
   320ac:	mov	w1, #0x0                   	// #0
   320b0:	mov	x0, x19
   320b4:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   320b8:	mov	x3, #0x0                   	// #0
   320bc:	mov	x2, x0
   320c0:	mov	w1, #0x49                  	// #73
   320c4:	mov	x0, x19
   320c8:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   320cc:	mov	x20, x0
   320d0:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   320d4:	mov	w1, #0x0                   	// #0
   320d8:	mov	x0, x19
   320dc:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   320e0:	mov	x3, #0x0                   	// #0
   320e4:	mov	x2, x0
   320e8:	mov	w1, #0x4a                  	// #74
   320ec:	mov	x0, x19
   320f0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   320f4:	mov	x20, x0
   320f8:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   320fc:	mov	x0, #0x1                   	// #1
   32100:	mov	w23, #0x0                   	// #0
   32104:	cmp	w22, #0x0
   32108:	b.le	3212c <__asan_cplus_demangle_type@@Base+0x27d8>
   3210c:	mov	w23, w0
   32110:	cmp	w22, w0
   32114:	b.le	3212c <__asan_cplus_demangle_type@@Base+0x27d8>
   32118:	ldrb	w1, [x21, x0]
   3211c:	add	x0, x0, #0x1
   32120:	cmp	w1, #0x24
   32124:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   32128:	b.ne	3210c <__asan_cplus_demangle_type@@Base+0x27b8>  // b.any
   3212c:	mov	w2, w23
   32130:	mov	x1, x21
   32134:	mov	x0, x19
   32138:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3213c:	mov	x20, x0
   32140:	ldr	x21, [x19, #24]
   32144:	add	x21, x21, w23, sxtw
   32148:	str	x21, [x19, #24]
   3214c:	sub	w22, w22, w23
   32150:	cbz	x0, 323a8 <__asan_cplus_demangle_type@@Base+0x2a54>
   32154:	cbz	x24, 321f8 <__asan_cplus_demangle_type@@Base+0x28a4>
   32158:	mov	x3, x20
   3215c:	mov	x2, x24
   32160:	mov	w1, w25
   32164:	mov	x0, x19
   32168:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   3216c:	mov	x24, x0
   32170:	cbz	x0, 3235c <__asan_cplus_demangle_type@@Base+0x2a08>
   32174:	cmp	w22, #0x0
   32178:	b.le	32200 <__asan_cplus_demangle_type@@Base+0x28ac>
   3217c:	ldrb	w0, [x21]
   32180:	cbz	w0, 32344 <__asan_cplus_demangle_type@@Base+0x29f0>
   32184:	cmp	w0, #0x24
   32188:	b.ne	320fc <__asan_cplus_demangle_type@@Base+0x27a8>  // b.any
   3218c:	ldrb	w21, [x21, #1]
   32190:	cmp	w21, #0x53
   32194:	b.eq	321c0 <__asan_cplus_demangle_type@@Base+0x286c>  // b.none
   32198:	cmp	w21, #0x5f
   3219c:	b.eq	321c8 <__asan_cplus_demangle_type@@Base+0x2874>  // b.none
   321a0:	cmp	w21, #0x24
   321a4:	b.eq	321cc <__asan_cplus_demangle_type@@Base+0x2878>  // b.none
   321a8:	mov	x20, #0x0                   	// #0
   321ac:	ldp	x21, x22, [sp, #32]
   321b0:	ldp	x23, x24, [sp, #48]
   321b4:	ldp	x25, x26, [sp, #64]
   321b8:	ldp	x27, x28, [sp, #80]
   321bc:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   321c0:	mov	w21, w28
   321c4:	b	321cc <__asan_cplus_demangle_type@@Base+0x2878>
   321c8:	mov	w21, w27
   321cc:	mov	x0, x19
   321d0:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   321d4:	mov	x20, x0
   321d8:	cbz	x0, 32380 <__asan_cplus_demangle_type@@Base+0x2a2c>
   321dc:	str	w26, [x0]
   321e0:	str	w21, [x0, #8]
   321e4:	ldr	x21, [x19, #24]
   321e8:	add	x21, x21, #0x2
   321ec:	str	x21, [x19, #24]
   321f0:	sub	w22, w22, #0x2
   321f4:	b	32154 <__asan_cplus_demangle_type@@Base+0x2800>
   321f8:	mov	x24, x20
   321fc:	b	32174 <__asan_cplus_demangle_type@@Base+0x2820>
   32200:	mov	x3, #0x0                   	// #0
   32204:	mov	x2, x24
   32208:	mov	w1, #0x3f                  	// #63
   3220c:	mov	x0, x19
   32210:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32214:	mov	x20, x0
   32218:	ldp	x21, x22, [sp, #32]
   3221c:	ldp	x23, x24, [sp, #48]
   32220:	ldp	x25, x26, [sp, #64]
   32224:	ldp	x27, x28, [sp, #80]
   32228:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   3222c:	stp	x21, x22, [sp, #32]
   32230:	mov	w21, w1
   32234:	mov	x0, x19
   32238:	bl	3169c <__asan_cplus_demangle_type@@Base+0x1d48>
   3223c:	mov	x20, x0
   32240:	cbz	x0, 323bc <__asan_cplus_demangle_type@@Base+0x2a68>
   32244:	cbz	w21, 32250 <__asan_cplus_demangle_type@@Base+0x28fc>
   32248:	ldr	w0, [x19, #16]
   3224c:	tbz	w0, #0, 32278 <__asan_cplus_demangle_type@@Base+0x2924>
   32250:	ldr	x0, [x19, #24]
   32254:	ldrb	w0, [x0]
   32258:	cmp	w0, #0x45
   3225c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   32260:	b.ne	322c4 <__asan_cplus_demangle_type@@Base+0x2970>  // b.any
   32264:	ldp	x21, x22, [sp, #32]
   32268:	mov	x0, x20
   3226c:	ldp	x19, x20, [sp, #16]
   32270:	ldp	x29, x30, [sp], #96
   32274:	ret
   32278:	ldr	w19, [x20]
   3227c:	mov	w0, w19
   32280:	bl	289e0 <__asan_backtrace_create_state@@Base+0x94>
   32284:	cbz	w0, 32290 <__asan_cplus_demangle_type@@Base+0x293c>
   32288:	ldr	x20, [x20, #8]
   3228c:	b	32278 <__asan_cplus_demangle_type@@Base+0x2924>
   32290:	cmp	w19, #0x2
   32294:	b.eq	322a0 <__asan_cplus_demangle_type@@Base+0x294c>  // b.none
   32298:	ldp	x21, x22, [sp, #32]
   3229c:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   322a0:	ldr	x19, [x20, #16]
   322a4:	ldr	w0, [x19]
   322a8:	bl	289e0 <__asan_backtrace_create_state@@Base+0x94>
   322ac:	cbz	w0, 322bc <__asan_cplus_demangle_type@@Base+0x2968>
   322b0:	ldr	x0, [x19, #8]
   322b4:	str	x0, [x20, #16]
   322b8:	b	322a0 <__asan_cplus_demangle_type@@Base+0x294c>
   322bc:	ldp	x21, x22, [sp, #32]
   322c0:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   322c4:	mov	x0, x20
   322c8:	bl	28ba0 <__asan_backtrace_create_state@@Base+0x254>
   322cc:	mov	w1, w0
   322d0:	mov	x0, x19
   322d4:	bl	30a88 <__asan_cplus_demangle_type@@Base+0x1134>
   322d8:	mov	x3, x0
   322dc:	cbz	x0, 32374 <__asan_cplus_demangle_type@@Base+0x2a20>
   322e0:	cbnz	w21, 322f0 <__asan_cplus_demangle_type@@Base+0x299c>
   322e4:	ldr	w0, [x20]
   322e8:	cmp	w0, #0x2
   322ec:	b.eq	3230c <__asan_cplus_demangle_type@@Base+0x29b8>  // b.none
   322f0:	mov	x2, x20
   322f4:	mov	w1, #0x3                   	// #3
   322f8:	mov	x0, x19
   322fc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32300:	mov	x20, x0
   32304:	ldp	x21, x22, [sp, #32]
   32308:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   3230c:	ldr	w0, [x3]
   32310:	cmp	w0, #0x29
   32314:	b.ne	322f0 <__asan_cplus_demangle_type@@Base+0x299c>  // b.any
   32318:	str	xzr, [x3, #8]
   3231c:	b	322f0 <__asan_cplus_demangle_type@@Base+0x299c>
   32320:	mov	x20, #0x0                   	// #0
   32324:	ldp	x21, x22, [sp, #32]
   32328:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   3232c:	mov	x20, #0x0                   	// #0
   32330:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32334:	mov	x20, #0x0                   	// #0
   32338:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   3233c:	mov	x20, #0x0                   	// #0
   32340:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32344:	mov	x20, #0x0                   	// #0
   32348:	ldp	x21, x22, [sp, #32]
   3234c:	ldp	x23, x24, [sp, #48]
   32350:	ldp	x25, x26, [sp, #64]
   32354:	ldp	x27, x28, [sp, #80]
   32358:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   3235c:	mov	x20, x0
   32360:	ldp	x21, x22, [sp, #32]
   32364:	ldp	x23, x24, [sp, #48]
   32368:	ldp	x25, x26, [sp, #64]
   3236c:	ldp	x27, x28, [sp, #80]
   32370:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32374:	mov	x20, x0
   32378:	ldp	x21, x22, [sp, #32]
   3237c:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   32380:	ldr	x0, [x19, #24]
   32384:	add	x0, x0, #0x2
   32388:	str	x0, [x19, #24]
   3238c:	ldp	x21, x22, [sp, #32]
   32390:	ldp	x23, x24, [sp, #48]
   32394:	ldp	x25, x26, [sp, #64]
   32398:	ldp	x27, x28, [sp, #80]
   3239c:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   323a0:	ldp	x21, x22, [sp, #32]
   323a4:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   323a8:	ldp	x21, x22, [sp, #32]
   323ac:	ldp	x23, x24, [sp, #48]
   323b0:	ldp	x25, x26, [sp, #64]
   323b4:	ldp	x27, x28, [sp, #80]
   323b8:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>
   323bc:	ldp	x21, x22, [sp, #32]
   323c0:	b	32268 <__asan_cplus_demangle_type@@Base+0x2914>

00000000000323c4 <__asan_cplus_demangle_mangled_name@@Base>:
   323c4:	stp	x29, x30, [sp, #-48]!
   323c8:	mov	x29, sp
   323cc:	stp	x19, x20, [sp, #16]
   323d0:	str	x21, [sp, #32]
   323d4:	mov	x19, x0
   323d8:	mov	w21, w1
   323dc:	ldr	x0, [x0, #24]
   323e0:	ldrb	w1, [x0]
   323e4:	cmp	w1, #0x5f
   323e8:	b.eq	32440 <__asan_cplus_demangle_mangled_name@@Base+0x7c>  // b.none
   323ec:	cbnz	w21, 32554 <__asan_cplus_demangle_mangled_name@@Base+0x190>
   323f0:	ldr	x0, [x19, #24]
   323f4:	ldrb	w1, [x0]
   323f8:	mov	x20, #0x0                   	// #0
   323fc:	cmp	w1, #0x5a
   32400:	b.ne	32558 <__asan_cplus_demangle_mangled_name@@Base+0x194>  // b.any
   32404:	add	x0, x0, #0x1
   32408:	str	x0, [x19, #24]
   3240c:	mov	w1, w21
   32410:	mov	x0, x19
   32414:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   32418:	mov	x20, x0
   3241c:	cbz	w21, 32558 <__asan_cplus_demangle_mangled_name@@Base+0x194>
   32420:	ldr	w0, [x19, #16]
   32424:	tbz	w0, #0, 32558 <__asan_cplus_demangle_mangled_name@@Base+0x194>
   32428:	ldr	x1, [x19, #24]
   3242c:	ldrb	w0, [x1]
   32430:	mov	w21, #0x4e                  	// #78
   32434:	cmp	w0, #0x2e
   32438:	b.eq	32514 <__asan_cplus_demangle_mangled_name@@Base+0x150>  // b.none
   3243c:	b	32558 <__asan_cplus_demangle_mangled_name@@Base+0x194>
   32440:	add	x0, x0, #0x1
   32444:	str	x0, [x19, #24]
   32448:	b	323f0 <__asan_cplus_demangle_mangled_name@@Base+0x2c>
   3244c:	add	x3, x1, #0x2
   32450:	ldrb	w2, [x1, #2]
   32454:	sub	w0, w2, #0x61
   32458:	and	w0, w0, #0xff
   3245c:	cmp	w2, #0x5f
   32460:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   32464:	b.hi	32540 <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.pmore
   32468:	ldrb	w2, [x3, #1]!
   3246c:	sub	w0, w2, #0x61
   32470:	and	w0, w0, #0xff
   32474:	cmp	w2, #0x5f
   32478:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   3247c:	b.ls	32468 <__asan_cplus_demangle_mangled_name@@Base+0xa4>  // b.plast
   32480:	b	32540 <__asan_cplus_demangle_mangled_name@@Base+0x17c>
   32484:	ldrb	w0, [x2, #1]!
   32488:	sub	w0, w0, #0x30
   3248c:	and	w0, w0, #0xff
   32490:	cmp	w0, #0x9
   32494:	b.ls	32484 <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.plast
   32498:	ldrb	w0, [x2]
   3249c:	cmp	w0, #0x2e
   324a0:	b.ne	324dc <__asan_cplus_demangle_mangled_name@@Base+0x118>  // b.any
   324a4:	mov	x3, x2
   324a8:	ldrb	w0, [x3, #1]
   324ac:	sub	w0, w0, #0x30
   324b0:	and	w0, w0, #0xff
   324b4:	cmp	w0, #0x9
   324b8:	b.hi	324d8 <__asan_cplus_demangle_mangled_name@@Base+0x114>  // b.pmore
   324bc:	add	x2, x3, #0x2
   324c0:	ldrb	w0, [x3, #2]
   324c4:	sub	w0, w0, #0x30
   324c8:	and	w0, w0, #0xff
   324cc:	cmp	w0, #0x9
   324d0:	b.ls	32484 <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.plast
   324d4:	b	32498 <__asan_cplus_demangle_mangled_name@@Base+0xd4>
   324d8:	mov	x2, x3
   324dc:	str	x2, [x19, #24]
   324e0:	sub	w2, w2, w1
   324e4:	mov	x0, x19
   324e8:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   324ec:	mov	x3, x0
   324f0:	mov	x2, x20
   324f4:	mov	w1, w21
   324f8:	mov	x0, x19
   324fc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32500:	mov	x20, x0
   32504:	ldr	x1, [x19, #24]
   32508:	ldrb	w0, [x1]
   3250c:	cmp	w0, #0x2e
   32510:	b.ne	32558 <__asan_cplus_demangle_mangled_name@@Base+0x194>  // b.any
   32514:	ldrb	w0, [x1, #1]
   32518:	sub	w2, w0, #0x61
   3251c:	and	w2, w2, #0xff
   32520:	cmp	w0, #0x5f
   32524:	ccmp	w2, #0x19, #0x0, ne  // ne = any
   32528:	b.ls	3244c <__asan_cplus_demangle_mangled_name@@Base+0x88>  // b.plast
   3252c:	sub	w0, w0, #0x30
   32530:	and	w0, w0, #0xff
   32534:	cmp	w0, #0x9
   32538:	b.hi	32558 <__asan_cplus_demangle_mangled_name@@Base+0x194>  // b.pmore
   3253c:	mov	x3, x1
   32540:	ldrb	w0, [x3]
   32544:	mov	x2, x3
   32548:	cmp	w0, #0x2e
   3254c:	b.eq	324a8 <__asan_cplus_demangle_mangled_name@@Base+0xe4>  // b.none
   32550:	b	324dc <__asan_cplus_demangle_mangled_name@@Base+0x118>
   32554:	mov	x20, #0x0                   	// #0
   32558:	mov	x0, x20
   3255c:	ldp	x19, x20, [sp, #16]
   32560:	ldr	x21, [sp, #32]
   32564:	ldp	x29, x30, [sp], #48
   32568:	ret
   3256c:	stp	x29, x30, [sp, #-48]!
   32570:	mov	x29, sp
   32574:	stp	x19, x20, [sp, #16]
   32578:	mov	x19, x0
   3257c:	ldr	x0, [x0, #24]
   32580:	ldrb	w1, [x0]
   32584:	mov	x20, #0x0                   	// #0
   32588:	cmp	w1, #0x4c
   3258c:	b.ne	325d4 <__asan_cplus_demangle_mangled_name@@Base+0x210>  // b.any
   32590:	add	x1, x0, #0x1
   32594:	str	x1, [x19, #24]
   32598:	ldrb	w0, [x0, #1]
   3259c:	cmp	w0, #0x5f
   325a0:	mov	w1, #0x5a                  	// #90
   325a4:	ccmp	w0, w1, #0x4, ne  // ne = any
   325a8:	b.ne	325e4 <__asan_cplus_demangle_mangled_name@@Base+0x220>  // b.any
   325ac:	mov	w1, #0x0                   	// #0
   325b0:	mov	x0, x19
   325b4:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   325b8:	mov	x20, x0
   325bc:	ldr	x0, [x19, #24]
   325c0:	ldrb	w1, [x0]
   325c4:	cmp	w1, #0x45
   325c8:	b.ne	326b4 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>  // b.any
   325cc:	add	x0, x0, #0x1
   325d0:	str	x0, [x19, #24]
   325d4:	mov	x0, x20
   325d8:	ldp	x19, x20, [sp, #16]
   325dc:	ldp	x29, x30, [sp], #48
   325e0:	ret
   325e4:	mov	x0, x19
   325e8:	bl	6420 <__asan_cplus_demangle_type@plt>
   325ec:	mov	x20, x0
   325f0:	cbz	x0, 325d4 <__asan_cplus_demangle_mangled_name@@Base+0x210>
   325f4:	str	x21, [sp, #32]
   325f8:	ldr	w0, [x0]
   325fc:	cmp	w0, #0x27
   32600:	b.eq	32670 <__asan_cplus_demangle_mangled_name@@Base+0x2ac>  // b.none
   32604:	ldr	x0, [x19, #24]
   32608:	ldrb	w1, [x0]
   3260c:	mov	w21, #0x3d                  	// #61
   32610:	cmp	w1, #0x6e
   32614:	b.eq	32690 <__asan_cplus_demangle_mangled_name@@Base+0x2cc>  // b.none
   32618:	ldr	x1, [x19, #24]
   3261c:	ldrb	w4, [x1]
   32620:	cmp	w4, #0x45
   32624:	b.eq	326a0 <__asan_cplus_demangle_mangled_name@@Base+0x2dc>  // b.none
   32628:	add	x3, x1, #0x1
   3262c:	cbz	w4, 326a8 <__asan_cplus_demangle_mangled_name@@Base+0x2e4>
   32630:	mov	x2, x3
   32634:	str	x3, [x19, #24]
   32638:	ldrb	w4, [x3], #1
   3263c:	cmp	w4, #0x45
   32640:	b.ne	3262c <__asan_cplus_demangle_mangled_name@@Base+0x268>  // b.any
   32644:	sub	w2, w2, w1
   32648:	mov	x0, x19
   3264c:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   32650:	mov	x3, x0
   32654:	mov	x2, x20
   32658:	mov	w1, w21
   3265c:	mov	x0, x19
   32660:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32664:	mov	x20, x0
   32668:	ldr	x21, [sp, #32]
   3266c:	b	325bc <__asan_cplus_demangle_mangled_name@@Base+0x1f8>
   32670:	ldr	x0, [x20, #8]
   32674:	ldr	w1, [x0, #28]
   32678:	cbz	w1, 32604 <__asan_cplus_demangle_mangled_name@@Base+0x240>
   3267c:	ldr	w1, [x19, #72]
   32680:	ldr	w0, [x0, #8]
   32684:	sub	w0, w1, w0
   32688:	str	w0, [x19, #72]
   3268c:	b	32604 <__asan_cplus_demangle_mangled_name@@Base+0x240>
   32690:	add	x0, x0, #0x1
   32694:	str	x0, [x19, #24]
   32698:	mov	w21, #0x3e                  	// #62
   3269c:	b	32618 <__asan_cplus_demangle_mangled_name@@Base+0x254>
   326a0:	mov	x2, x1
   326a4:	b	32644 <__asan_cplus_demangle_mangled_name@@Base+0x280>
   326a8:	mov	x20, #0x0                   	// #0
   326ac:	ldr	x21, [sp, #32]
   326b0:	b	325d4 <__asan_cplus_demangle_mangled_name@@Base+0x210>
   326b4:	mov	x20, #0x0                   	// #0
   326b8:	b	325d4 <__asan_cplus_demangle_mangled_name@@Base+0x210>
   326bc:	stp	x29, x30, [sp, #-32]!
   326c0:	mov	x29, sp
   326c4:	str	x19, [sp, #16]
   326c8:	mov	x19, x0
   326cc:	ldr	x0, [x0, #24]
   326d0:	ldrb	w1, [x0]
   326d4:	cmp	w1, #0x4c
   326d8:	b.eq	32730 <__asan_cplus_demangle_mangled_name@@Base+0x36c>  // b.none
   326dc:	b.hi	326fc <__asan_cplus_demangle_mangled_name@@Base+0x338>  // b.pmore
   326e0:	sub	w1, w1, #0x49
   326e4:	and	w1, w1, #0xff
   326e8:	cmp	w1, #0x1
   326ec:	b.hi	32744 <__asan_cplus_demangle_mangled_name@@Base+0x380>  // b.pmore
   326f0:	mov	x0, x19
   326f4:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   326f8:	b	32738 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   326fc:	cmp	w1, #0x58
   32700:	b.ne	32744 <__asan_cplus_demangle_mangled_name@@Base+0x380>  // b.any
   32704:	add	x0, x0, #0x1
   32708:	str	x0, [x19, #24]
   3270c:	mov	x0, x19
   32710:	bl	30bd0 <__asan_cplus_demangle_type@@Base+0x127c>
   32714:	ldr	x1, [x19, #24]
   32718:	ldrb	w2, [x1]
   3271c:	cmp	w2, #0x45
   32720:	b.ne	32750 <__asan_cplus_demangle_mangled_name@@Base+0x38c>  // b.any
   32724:	add	x1, x1, #0x1
   32728:	str	x1, [x19, #24]
   3272c:	b	32738 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   32730:	mov	x0, x19
   32734:	bl	3256c <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   32738:	ldr	x19, [sp, #16]
   3273c:	ldp	x29, x30, [sp], #32
   32740:	ret
   32744:	mov	x0, x19
   32748:	bl	6420 <__asan_cplus_demangle_type@plt>
   3274c:	b	32738 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   32750:	mov	x0, #0x0                   	// #0
   32754:	b	32738 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   32758:	stp	x29, x30, [sp, #-64]!
   3275c:	mov	x29, sp
   32760:	stp	x19, x20, [sp, #16]
   32764:	stp	x21, x22, [sp, #32]
   32768:	mov	x19, x0
   3276c:	ldr	x22, [x0, #64]
   32770:	ldr	x0, [x0, #24]
   32774:	ldrb	w1, [x0]
   32778:	cmp	w1, #0x45
   3277c:	b.eq	327e8 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.none
   32780:	str	xzr, [sp, #56]
   32784:	add	x20, sp, #0x38
   32788:	mov	w21, #0x2f                  	// #47
   3278c:	mov	x0, x19
   32790:	bl	326bc <__asan_cplus_demangle_mangled_name@@Base+0x2f8>
   32794:	cbz	x0, 327d8 <__asan_cplus_demangle_mangled_name@@Base+0x414>
   32798:	mov	x3, #0x0                   	// #0
   3279c:	mov	x2, x0
   327a0:	mov	w1, w21
   327a4:	mov	x0, x19
   327a8:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   327ac:	str	x0, [x20]
   327b0:	cbz	x0, 327d8 <__asan_cplus_demangle_mangled_name@@Base+0x414>
   327b4:	add	x20, x0, #0x10
   327b8:	ldr	x0, [x19, #24]
   327bc:	ldrb	w1, [x0]
   327c0:	cmp	w1, #0x45
   327c4:	b.ne	3278c <__asan_cplus_demangle_mangled_name@@Base+0x3c8>  // b.any
   327c8:	add	x0, x0, #0x1
   327cc:	str	x0, [x19, #24]
   327d0:	str	x22, [x19, #64]
   327d4:	ldr	x0, [sp, #56]
   327d8:	ldp	x19, x20, [sp, #16]
   327dc:	ldp	x21, x22, [sp, #32]
   327e0:	ldp	x29, x30, [sp], #64
   327e4:	ret
   327e8:	add	x0, x0, #0x1
   327ec:	str	x0, [x19, #24]
   327f0:	mov	x3, #0x0                   	// #0
   327f4:	mov	x2, #0x0                   	// #0
   327f8:	mov	w1, #0x2f                  	// #47
   327fc:	mov	x0, x19
   32800:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32804:	b	327d8 <__asan_cplus_demangle_mangled_name@@Base+0x414>
   32808:	ldr	x2, [x0, #24]
   3280c:	ldrb	w1, [x2]
   32810:	sub	w1, w1, #0x49
   32814:	and	w1, w1, #0xff
   32818:	cmp	w1, #0x1
   3281c:	b.hi	3283c <__asan_cplus_demangle_mangled_name@@Base+0x478>  // b.pmore
   32820:	stp	x29, x30, [sp, #-16]!
   32824:	mov	x29, sp
   32828:	add	x2, x2, #0x1
   3282c:	str	x2, [x0, #24]
   32830:	bl	32758 <__asan_cplus_demangle_mangled_name@@Base+0x394>
   32834:	ldp	x29, x30, [sp], #16
   32838:	ret
   3283c:	mov	x0, #0x0                   	// #0
   32840:	ret
   32844:	stp	x29, x30, [sp, #-48]!
   32848:	mov	x29, sp
   3284c:	stp	x19, x20, [sp, #16]
   32850:	mov	x19, x0
   32854:	ldr	x0, [x0, #24]
   32858:	ldrb	w1, [x0]
   3285c:	cmp	w1, #0x4c
   32860:	b.eq	328bc <__asan_cplus_demangle_mangled_name@@Base+0x4f8>  // b.none
   32864:	cmp	w1, #0x54
   32868:	b.eq	328cc <__asan_cplus_demangle_mangled_name@@Base+0x508>  // b.none
   3286c:	cmp	w1, #0x73
   32870:	b.eq	328dc <__asan_cplus_demangle_mangled_name@@Base+0x518>  // b.none
   32874:	cmp	w1, #0x66
   32878:	b.eq	32a1c <__asan_cplus_demangle_mangled_name@@Base+0x658>  // b.none
   3287c:	sub	w2, w1, #0x30
   32880:	and	w2, w2, #0xff
   32884:	cmp	w2, #0x9
   32888:	b.hi	32ae0 <__asan_cplus_demangle_mangled_name@@Base+0x71c>  // b.pmore
   3288c:	mov	x0, x19
   32890:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   32894:	mov	x20, x0
   32898:	cbz	x0, 328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   3289c:	ldr	x0, [x19, #24]
   328a0:	ldrb	w0, [x0]
   328a4:	cmp	w0, #0x49
   328a8:	b.eq	32b00 <__asan_cplus_demangle_mangled_name@@Base+0x73c>  // b.none
   328ac:	mov	x0, x20
   328b0:	ldp	x19, x20, [sp, #16]
   328b4:	ldp	x29, x30, [sp], #48
   328b8:	ret
   328bc:	mov	x0, x19
   328c0:	bl	3256c <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   328c4:	mov	x20, x0
   328c8:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   328cc:	mov	x0, x19
   328d0:	bl	28f38 <__asan_backtrace_create_state@@Base+0x5ec>
   328d4:	mov	x20, x0
   328d8:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   328dc:	ldrb	w2, [x0, #1]
   328e0:	cmp	w2, #0x72
   328e4:	b.eq	32960 <__asan_cplus_demangle_mangled_name@@Base+0x59c>  // b.none
   328e8:	cmp	w2, #0x70
   328ec:	b.eq	329f0 <__asan_cplus_demangle_mangled_name@@Base+0x62c>  // b.none
   328f0:	cmp	w1, #0x69
   328f4:	mov	w2, #0x74                  	// #116
   328f8:	ccmp	w1, w2, #0x4, ne  // ne = any
   328fc:	b.ne	32a28 <__asan_cplus_demangle_mangled_name@@Base+0x664>  // b.any
   32900:	ldrb	w2, [x0, #1]
   32904:	cmp	w2, #0x6c
   32908:	b.ne	32a28 <__asan_cplus_demangle_mangled_name@@Base+0x664>  // b.any
   3290c:	stp	x21, x22, [sp, #32]
   32910:	add	x0, x0, #0x2
   32914:	str	x0, [x19, #24]
   32918:	mov	x21, #0x0                   	// #0
   3291c:	cmp	w1, #0x74
   32920:	b.eq	32b24 <__asan_cplus_demangle_mangled_name@@Base+0x760>  // b.none
   32924:	ldr	x0, [x19, #24]
   32928:	ldrb	w0, [x0, #1]
   3292c:	mov	x20, #0x0                   	// #0
   32930:	cbz	w0, 32ff8 <__asan_cplus_demangle_mangled_name@@Base+0xc34>
   32934:	mov	w1, #0x45                  	// #69
   32938:	mov	x0, x19
   3293c:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   32940:	mov	x3, x0
   32944:	mov	x2, x21
   32948:	mov	w1, #0x31                  	// #49
   3294c:	mov	x0, x19
   32950:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32954:	mov	x20, x0
   32958:	ldp	x21, x22, [sp, #32]
   3295c:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32960:	stp	x21, x22, [sp, #32]
   32964:	add	x0, x0, #0x2
   32968:	str	x0, [x19, #24]
   3296c:	mov	x0, x19
   32970:	bl	6420 <__asan_cplus_demangle_type@plt>
   32974:	mov	x20, x0
   32978:	mov	x0, x19
   3297c:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   32980:	mov	x21, x0
   32984:	ldr	x0, [x19, #24]
   32988:	ldrb	w0, [x0]
   3298c:	cmp	w0, #0x49
   32990:	b.eq	329b4 <__asan_cplus_demangle_mangled_name@@Base+0x5f0>  // b.none
   32994:	mov	x3, x21
   32998:	mov	x2, x20
   3299c:	mov	w1, #0x1                   	// #1
   329a0:	mov	x0, x19
   329a4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   329a8:	mov	x20, x0
   329ac:	ldp	x21, x22, [sp, #32]
   329b0:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   329b4:	mov	x0, x19
   329b8:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   329bc:	mov	x3, x0
   329c0:	mov	x2, x21
   329c4:	mov	w1, #0x4                   	// #4
   329c8:	mov	x0, x19
   329cc:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   329d0:	mov	x3, x0
   329d4:	mov	x2, x20
   329d8:	mov	w1, #0x1                   	// #1
   329dc:	mov	x0, x19
   329e0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   329e4:	mov	x20, x0
   329e8:	ldp	x21, x22, [sp, #32]
   329ec:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   329f0:	add	x0, x0, #0x2
   329f4:	str	x0, [x19, #24]
   329f8:	mov	x0, x19
   329fc:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32a00:	mov	x3, #0x0                   	// #0
   32a04:	mov	x2, x0
   32a08:	mov	w1, #0x4b                  	// #75
   32a0c:	mov	x0, x19
   32a10:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32a14:	mov	x20, x0
   32a18:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32a1c:	ldrb	w1, [x0, #1]
   32a20:	cmp	w1, #0x70
   32a24:	b.eq	32a74 <__asan_cplus_demangle_mangled_name@@Base+0x6b0>  // b.none
   32a28:	mov	x0, x19
   32a2c:	bl	303e8 <__asan_cplus_demangle_type@@Base+0xa94>
   32a30:	mov	x20, x0
   32a34:	cbz	x0, 328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32a38:	stp	x21, x22, [sp, #32]
   32a3c:	ldr	w0, [x0]
   32a40:	mov	x21, #0x0                   	// #0
   32a44:	cmp	w0, #0x32
   32a48:	b.eq	32b34 <__asan_cplus_demangle_mangled_name@@Base+0x770>  // b.none
   32a4c:	ldr	w0, [x20]
   32a50:	cmp	w0, #0x33
   32a54:	b.eq	32c20 <__asan_cplus_demangle_mangled_name@@Base+0x85c>  // b.none
   32a58:	cmp	w0, #0x34
   32a5c:	b.eq	32bac <__asan_cplus_demangle_mangled_name@@Base+0x7e8>  // b.none
   32a60:	cmp	w0, #0x32
   32a64:	b.eq	32b8c <__asan_cplus_demangle_mangled_name@@Base+0x7c8>  // b.none
   32a68:	mov	x20, #0x0                   	// #0
   32a6c:	ldp	x21, x22, [sp, #32]
   32a70:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32a74:	stp	x21, x22, [sp, #32]
   32a78:	add	x1, x0, #0x2
   32a7c:	str	x1, [x19, #24]
   32a80:	ldrb	w1, [x0, #2]
   32a84:	cmp	w1, #0x54
   32a88:	b.eq	32ad0 <__asan_cplus_demangle_mangled_name@@Base+0x70c>  // b.none
   32a8c:	mov	x0, x19
   32a90:	bl	28ebc <__asan_backtrace_create_state@@Base+0x570>
   32a94:	mvn	x1, x0
   32a98:	mov	x20, #0x0                   	// #0
   32a9c:	tst	x1, #0x7fffffff
   32aa0:	b.eq	32fe8 <__asan_cplus_demangle_mangled_name@@Base+0xc24>  // b.none
   32aa4:	add	w21, w0, #0x1
   32aa8:	mov	x0, x19
   32aac:	bl	28a10 <__asan_backtrace_create_state@@Base+0xc4>
   32ab0:	mov	x20, x0
   32ab4:	cbz	x0, 32ff0 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>
   32ab8:	mov	w0, #0x6                   	// #6
   32abc:	str	w0, [x20]
   32ac0:	sxtw	x0, w21
   32ac4:	str	x0, [x20, #8]
   32ac8:	ldp	x21, x22, [sp, #32]
   32acc:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32ad0:	add	x0, x0, #0x3
   32ad4:	str	x0, [x19, #24]
   32ad8:	mov	w21, #0x0                   	// #0
   32adc:	b	32aa8 <__asan_cplus_demangle_mangled_name@@Base+0x6e4>
   32ae0:	cmp	w1, #0x6f
   32ae4:	b.ne	328f0 <__asan_cplus_demangle_mangled_name@@Base+0x52c>  // b.any
   32ae8:	ldrb	w1, [x0, #1]
   32aec:	cmp	w1, #0x6e
   32af0:	b.ne	32a28 <__asan_cplus_demangle_mangled_name@@Base+0x664>  // b.any
   32af4:	add	x0, x0, #0x2
   32af8:	str	x0, [x19, #24]
   32afc:	b	3288c <__asan_cplus_demangle_mangled_name@@Base+0x4c8>
   32b00:	mov	x0, x19
   32b04:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   32b08:	mov	x3, x0
   32b0c:	mov	x2, x20
   32b10:	mov	w1, #0x4                   	// #4
   32b14:	mov	x0, x19
   32b18:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32b1c:	mov	x20, x0
   32b20:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32b24:	mov	x0, x19
   32b28:	bl	6420 <__asan_cplus_demangle_type@plt>
   32b2c:	mov	x21, x0
   32b30:	b	32924 <__asan_cplus_demangle_mangled_name@@Base+0x560>
   32b34:	ldr	x0, [x20, #8]
   32b38:	ldr	x21, [x0]
   32b3c:	ldr	w0, [x0, #16]
   32b40:	sub	w1, w0, #0x2
   32b44:	ldr	w0, [x19, #72]
   32b48:	add	w0, w0, w1
   32b4c:	str	w0, [x19, #72]
   32b50:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   32b54:	add	x1, x1, #0xfe0
   32b58:	mov	x0, x21
   32b5c:	bl	67f0 <__asan_internal_strcmp@plt>
   32b60:	cbnz	w0, 32a4c <__asan_cplus_demangle_mangled_name@@Base+0x688>
   32b64:	mov	x0, x19
   32b68:	bl	6420 <__asan_cplus_demangle_type@plt>
   32b6c:	mov	x3, x0
   32b70:	mov	x2, x20
   32b74:	mov	w1, #0x37                  	// #55
   32b78:	mov	x0, x19
   32b7c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32b80:	mov	x20, x0
   32b84:	ldp	x21, x22, [sp, #32]
   32b88:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32b8c:	ldr	x1, [x20, #8]
   32b90:	ldr	w1, [x1, #20]
   32b94:	cmp	w1, #0x2
   32b98:	b.eq	32d44 <__asan_cplus_demangle_mangled_name@@Base+0x980>  // b.none
   32b9c:	b.gt	32c34 <__asan_cplus_demangle_mangled_name@@Base+0x870>
   32ba0:	cbz	w1, 32cdc <__asan_cplus_demangle_mangled_name@@Base+0x918>
   32ba4:	cmp	w1, #0x1
   32ba8:	b.ne	32c28 <__asan_cplus_demangle_mangled_name@@Base+0x864>  // b.any
   32bac:	cbz	x21, 32f98 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   32bb0:	ldrb	w0, [x21]
   32bb4:	cmp	w0, #0x70
   32bb8:	mov	w1, #0x6d                  	// #109
   32bbc:	ccmp	w0, w1, #0x4, ne  // ne = any
   32bc0:	b.ne	32bd0 <__asan_cplus_demangle_mangled_name@@Base+0x80c>  // b.any
   32bc4:	ldrb	w1, [x21, #1]
   32bc8:	cmp	w1, w0
   32bcc:	b.eq	32cfc <__asan_cplus_demangle_mangled_name@@Base+0x938>  // b.none
   32bd0:	ldr	w0, [x20]
   32bd4:	mov	w22, #0x0                   	// #0
   32bd8:	cmp	w0, #0x34
   32bdc:	b.eq	32fbc <__asan_cplus_demangle_mangled_name@@Base+0xbf8>  // b.none
   32be0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   32be4:	add	x1, x1, #0xb40
   32be8:	mov	x0, x21
   32bec:	bl	67f0 <__asan_internal_strcmp@plt>
   32bf0:	cbz	w0, 32d1c <__asan_cplus_demangle_mangled_name@@Base+0x958>
   32bf4:	mov	x0, x19
   32bf8:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32bfc:	mov	x3, x0
   32c00:	cbnz	w22, 32d2c <__asan_cplus_demangle_mangled_name@@Base+0x968>
   32c04:	mov	x2, x20
   32c08:	mov	w1, #0x37                  	// #55
   32c0c:	mov	x0, x19
   32c10:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32c14:	mov	x20, x0
   32c18:	ldp	x21, x22, [sp, #32]
   32c1c:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32c20:	ldr	w1, [x20, #8]
   32c24:	b	32b94 <__asan_cplus_demangle_mangled_name@@Base+0x7d0>
   32c28:	mov	x20, #0x0                   	// #0
   32c2c:	ldp	x21, x22, [sp, #32]
   32c30:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32c34:	cmp	w1, #0x3
   32c38:	b.ne	32cd0 <__asan_cplus_demangle_mangled_name@@Base+0x90c>  // b.any
   32c3c:	cbz	x21, 32f5c <__asan_cplus_demangle_mangled_name@@Base+0xb98>
   32c40:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   32c44:	add	x1, x1, #0xa68
   32c48:	mov	x0, x21
   32c4c:	bl	67f0 <__asan_internal_strcmp@plt>
   32c50:	cbz	w0, 32e5c <__asan_cplus_demangle_mangled_name@@Base+0xa98>
   32c54:	ldrb	w0, [x21]
   32c58:	cmp	w0, #0x66
   32c5c:	b.eq	32ec8 <__asan_cplus_demangle_mangled_name@@Base+0xb04>  // b.none
   32c60:	cmp	w0, #0x6e
   32c64:	b.ne	32f74 <__asan_cplus_demangle_mangled_name@@Base+0xbb0>  // b.any
   32c68:	ldrb	w0, [x21, #1]
   32c6c:	cmp	w0, #0x77
   32c70:	mov	w1, #0x61                  	// #97
   32c74:	ccmp	w0, w1, #0x4, ne  // ne = any
   32c78:	b.ne	32f80 <__asan_cplus_demangle_mangled_name@@Base+0xbbc>  // b.any
   32c7c:	mov	w1, #0x5f                  	// #95
   32c80:	mov	x0, x19
   32c84:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   32c88:	mov	x21, x0
   32c8c:	mov	x0, x19
   32c90:	bl	6420 <__asan_cplus_demangle_type@plt>
   32c94:	mov	x22, x0
   32c98:	ldr	x0, [x19, #24]
   32c9c:	ldrb	w1, [x0]
   32ca0:	cmp	w1, #0x45
   32ca4:	b.eq	32efc <__asan_cplus_demangle_mangled_name@@Base+0xb38>  // b.none
   32ca8:	cmp	w1, #0x70
   32cac:	b.eq	32f0c <__asan_cplus_demangle_mangled_name@@Base+0xb48>  // b.none
   32cb0:	cmp	w1, #0x69
   32cb4:	b.ne	32f8c <__asan_cplus_demangle_mangled_name@@Base+0xbc8>  // b.any
   32cb8:	ldrb	w0, [x0, #1]
   32cbc:	cmp	w0, #0x6c
   32cc0:	b.eq	32f40 <__asan_cplus_demangle_mangled_name@@Base+0xb7c>  // b.none
   32cc4:	mov	x20, #0x0                   	// #0
   32cc8:	ldp	x21, x22, [sp, #32]
   32ccc:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32cd0:	mov	x20, #0x0                   	// #0
   32cd4:	ldp	x21, x22, [sp, #32]
   32cd8:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32cdc:	mov	x3, #0x0                   	// #0
   32ce0:	mov	x2, x20
   32ce4:	mov	w1, #0x36                  	// #54
   32ce8:	mov	x0, x19
   32cec:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32cf0:	mov	x20, x0
   32cf4:	ldp	x21, x22, [sp, #32]
   32cf8:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32cfc:	ldr	x0, [x19, #24]
   32d00:	ldrb	w1, [x0]
   32d04:	mov	w22, #0x1                   	// #1
   32d08:	cmp	w1, #0x5f
   32d0c:	b.ne	32be0 <__asan_cplus_demangle_mangled_name@@Base+0x81c>  // b.any
   32d10:	add	x0, x0, #0x1
   32d14:	str	x0, [x19, #24]
   32d18:	b	32bd0 <__asan_cplus_demangle_mangled_name@@Base+0x80c>
   32d1c:	mov	x0, x19
   32d20:	bl	32758 <__asan_cplus_demangle_mangled_name@@Base+0x394>
   32d24:	mov	x3, x0
   32d28:	b	32c00 <__asan_cplus_demangle_mangled_name@@Base+0x83c>
   32d2c:	mov	x2, x3
   32d30:	mov	w1, #0x39                  	// #57
   32d34:	mov	x0, x19
   32d38:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32d3c:	mov	x3, x0
   32d40:	b	32c04 <__asan_cplus_demangle_mangled_name@@Base+0x840>
   32d44:	cbz	x21, 32f50 <__asan_cplus_demangle_mangled_name@@Base+0xb8c>
   32d48:	mov	x0, x20
   32d4c:	bl	28fa4 <__asan_backtrace_create_state@@Base+0x658>
   32d50:	cbnz	w0, 32dc4 <__asan_cplus_demangle_mangled_name@@Base+0xa00>
   32d54:	ldrb	w0, [x21]
   32d58:	cmp	w0, #0x66
   32d5c:	b.eq	32dd4 <__asan_cplus_demangle_mangled_name@@Base+0xa10>  // b.none
   32d60:	mov	x0, x19
   32d64:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32d68:	mov	x22, x0
   32d6c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   32d70:	add	x1, x1, #0xa58
   32d74:	mov	x0, x21
   32d78:	bl	67f0 <__asan_internal_strcmp@plt>
   32d7c:	cbnz	w0, 32de4 <__asan_cplus_demangle_mangled_name@@Base+0xa20>
   32d80:	mov	w1, #0x45                  	// #69
   32d84:	mov	x0, x19
   32d88:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   32d8c:	mov	x21, x0
   32d90:	mov	x3, x21
   32d94:	mov	x2, x22
   32d98:	mov	w1, #0x39                  	// #57
   32d9c:	mov	x0, x19
   32da0:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32da4:	mov	x3, x0
   32da8:	mov	x2, x20
   32dac:	mov	w1, #0x38                  	// #56
   32db0:	mov	x0, x19
   32db4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32db8:	mov	x20, x0
   32dbc:	ldp	x21, x22, [sp, #32]
   32dc0:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32dc4:	mov	x0, x19
   32dc8:	bl	6420 <__asan_cplus_demangle_type@plt>
   32dcc:	mov	x22, x0
   32dd0:	b	32d6c <__asan_cplus_demangle_mangled_name@@Base+0x9a8>
   32dd4:	mov	x0, x19
   32dd8:	bl	303e8 <__asan_cplus_demangle_type@@Base+0xa94>
   32ddc:	mov	x22, x0
   32de0:	b	32d6c <__asan_cplus_demangle_mangled_name@@Base+0x9a8>
   32de4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   32de8:	add	x1, x1, #0xc30
   32dec:	mov	x0, x21
   32df0:	bl	67f0 <__asan_internal_strcmp@plt>
   32df4:	cbz	w0, 32e0c <__asan_cplus_demangle_mangled_name@@Base+0xa48>
   32df8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   32dfc:	add	x1, x1, #0xc38
   32e00:	mov	x0, x21
   32e04:	bl	67f0 <__asan_internal_strcmp@plt>
   32e08:	cbnz	w0, 32e4c <__asan_cplus_demangle_mangled_name@@Base+0xa88>
   32e0c:	mov	x0, x19
   32e10:	bl	30590 <__asan_cplus_demangle_type@@Base+0xc3c>
   32e14:	mov	x21, x0
   32e18:	ldr	x0, [x19, #24]
   32e1c:	ldrb	w0, [x0]
   32e20:	cmp	w0, #0x49
   32e24:	b.ne	32d90 <__asan_cplus_demangle_mangled_name@@Base+0x9cc>  // b.any
   32e28:	mov	x0, x19
   32e2c:	bl	32808 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   32e30:	mov	x3, x0
   32e34:	mov	x2, x21
   32e38:	mov	w1, #0x4                   	// #4
   32e3c:	mov	x0, x19
   32e40:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32e44:	mov	x21, x0
   32e48:	b	32d90 <__asan_cplus_demangle_mangled_name@@Base+0x9cc>
   32e4c:	mov	x0, x19
   32e50:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32e54:	mov	x21, x0
   32e58:	b	32d90 <__asan_cplus_demangle_mangled_name@@Base+0x9cc>
   32e5c:	mov	x0, x19
   32e60:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32e64:	mov	x21, x0
   32e68:	mov	x0, x19
   32e6c:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32e70:	mov	x22, x0
   32e74:	mov	x0, x19
   32e78:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32e7c:	mov	x3, x0
   32e80:	cbz	x0, 32f68 <__asan_cplus_demangle_mangled_name@@Base+0xba4>
   32e84:	mov	x2, x22
   32e88:	mov	w1, #0x3c                  	// #60
   32e8c:	mov	x0, x19
   32e90:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32e94:	mov	x3, x0
   32e98:	mov	x2, x21
   32e9c:	mov	w1, #0x3b                  	// #59
   32ea0:	mov	x0, x19
   32ea4:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32ea8:	mov	x3, x0
   32eac:	mov	x2, x20
   32eb0:	mov	w1, #0x3a                  	// #58
   32eb4:	mov	x0, x19
   32eb8:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   32ebc:	mov	x20, x0
   32ec0:	ldp	x21, x22, [sp, #32]
   32ec4:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32ec8:	mov	x0, x19
   32ecc:	bl	303e8 <__asan_cplus_demangle_type@@Base+0xa94>
   32ed0:	mov	x21, x0
   32ed4:	mov	x0, x19
   32ed8:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32edc:	mov	x22, x0
   32ee0:	mov	x0, x19
   32ee4:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32ee8:	mov	x3, x0
   32eec:	cbnz	x0, 32e84 <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   32ef0:	mov	x20, x0
   32ef4:	ldp	x21, x22, [sp, #32]
   32ef8:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32efc:	add	x0, x0, #0x1
   32f00:	str	x0, [x19, #24]
   32f04:	mov	x3, #0x0                   	// #0
   32f08:	b	32e84 <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   32f0c:	ldrb	w1, [x0, #1]
   32f10:	cmp	w1, #0x69
   32f14:	b.eq	32f24 <__asan_cplus_demangle_mangled_name@@Base+0xb60>  // b.none
   32f18:	mov	x20, #0x0                   	// #0
   32f1c:	ldp	x21, x22, [sp, #32]
   32f20:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32f24:	add	x0, x0, #0x2
   32f28:	str	x0, [x19, #24]
   32f2c:	mov	w1, #0x45                  	// #69
   32f30:	mov	x0, x19
   32f34:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   32f38:	mov	x3, x0
   32f3c:	b	32e84 <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   32f40:	mov	x0, x19
   32f44:	bl	32844 <__asan_cplus_demangle_mangled_name@@Base+0x480>
   32f48:	mov	x3, x0
   32f4c:	b	32e84 <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   32f50:	mov	x20, x21
   32f54:	ldp	x21, x22, [sp, #32]
   32f58:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32f5c:	mov	x20, x21
   32f60:	ldp	x21, x22, [sp, #32]
   32f64:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32f68:	mov	x20, x0
   32f6c:	ldp	x21, x22, [sp, #32]
   32f70:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32f74:	mov	x20, #0x0                   	// #0
   32f78:	ldp	x21, x22, [sp, #32]
   32f7c:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32f80:	mov	x20, #0x0                   	// #0
   32f84:	ldp	x21, x22, [sp, #32]
   32f88:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32f8c:	mov	x20, #0x0                   	// #0
   32f90:	ldp	x21, x22, [sp, #32]
   32f94:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32f98:	mov	w22, #0x0                   	// #0
   32f9c:	cmp	w0, #0x34
   32fa0:	b.ne	32bf4 <__asan_cplus_demangle_mangled_name@@Base+0x830>  // b.any
   32fa4:	ldr	x0, [x19, #24]
   32fa8:	ldrb	w1, [x0]
   32fac:	cmp	w1, #0x5f
   32fb0:	b.eq	32fcc <__asan_cplus_demangle_mangled_name@@Base+0xc08>  // b.none
   32fb4:	mov	w22, #0x0                   	// #0
   32fb8:	b	32bf4 <__asan_cplus_demangle_mangled_name@@Base+0x830>
   32fbc:	ldr	x0, [x19, #24]
   32fc0:	ldrb	w1, [x0]
   32fc4:	cmp	w1, #0x5f
   32fc8:	b.ne	32be0 <__asan_cplus_demangle_mangled_name@@Base+0x81c>  // b.any
   32fcc:	add	x0, x0, #0x1
   32fd0:	str	x0, [x19, #24]
   32fd4:	mov	w1, #0x45                  	// #69
   32fd8:	mov	x0, x19
   32fdc:	bl	3135c <__asan_cplus_demangle_type@@Base+0x1a08>
   32fe0:	mov	x3, x0
   32fe4:	b	32c04 <__asan_cplus_demangle_mangled_name@@Base+0x840>
   32fe8:	ldp	x21, x22, [sp, #32]
   32fec:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32ff0:	ldp	x21, x22, [sp, #32]
   32ff4:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   32ff8:	ldp	x21, x22, [sp, #32]
   32ffc:	b	328ac <__asan_cplus_demangle_mangled_name@@Base+0x4e8>

0000000000033000 <__asan_cplus_demangle_print_callback@@Base>:
   33000:	stp	x29, x30, [sp, #-432]!
   33004:	mov	x29, sp
   33008:	stp	x19, x20, [sp, #16]
   3300c:	stp	x21, x22, [sp, #32]
   33010:	mov	w20, w0
   33014:	mov	x21, x1
   33018:	str	xzr, [x29, #312]
   3301c:	strb	wzr, [x29, #320]
   33020:	str	xzr, [x29, #344]
   33024:	str	xzr, [x29, #352]
   33028:	str	wzr, [x29, #372]
   3302c:	str	xzr, [x29, #376]
   33030:	str	x2, [x29, #328]
   33034:	str	x3, [x29, #336]
   33038:	str	wzr, [x29, #360]
   3303c:	str	wzr, [x29, #364]
   33040:	str	wzr, [x29, #368]
   33044:	str	xzr, [x29, #384]
   33048:	str	xzr, [x29, #392]
   3304c:	str	wzr, [x29, #400]
   33050:	str	wzr, [x29, #404]
   33054:	str	xzr, [x29, #408]
   33058:	str	wzr, [x29, #416]
   3305c:	str	wzr, [x29, #420]
   33060:	add	x0, x29, #0x38
   33064:	bl	290c4 <__asan_backtrace_create_state@@Base+0x778>
   33068:	ldr	w0, [x29, #364]
   3306c:	cmp	w0, #0x7ff
   33070:	b.gt	33078 <__asan_cplus_demangle_print_callback@@Base+0x78>
   33074:	str	wzr, [x29, #364]
   33078:	ldr	w3, [x29, #404]
   3307c:	ldr	w2, [x29, #420]
   33080:	mul	w2, w3, w2
   33084:	str	w2, [x29, #420]
   33088:	str	xzr, [x29, #424]
   3308c:	mov	x22, sp
   33090:	mov	w0, #0x1                   	// #1
   33094:	cmp	w3, #0x0
   33098:	csel	w3, w3, w0, gt
   3309c:	sub	sp, sp, w3, sxtw #4
   330a0:	mov	x1, sp
   330a4:	cmp	w2, #0x0
   330a8:	csel	w2, w2, w0, gt
   330ac:	sub	sp, sp, w2, sxtw #4
   330b0:	str	x1, [x29, #392]
   330b4:	mov	x0, sp
   330b8:	str	x0, [x29, #408]
   330bc:	add	x19, x29, #0x38
   330c0:	mov	x2, x21
   330c4:	mov	w1, w20
   330c8:	mov	x0, x19
   330cc:	bl	2da30 <__asan_backtrace_create_state@@Base+0x50e4>
   330d0:	mov	sp, x22
   330d4:	ldr	x1, [x29, #312]
   330d8:	strb	wzr, [x19, x1]
   330dc:	ldr	x2, [x29, #336]
   330e0:	mov	x0, x19
   330e4:	ldr	x3, [x29, #328]
   330e8:	blr	x3
   330ec:	ldr	w0, [x29, #360]
   330f0:	cmp	w0, #0x0
   330f4:	cset	w0, eq  // eq = none
   330f8:	mov	sp, x29
   330fc:	ldp	x19, x20, [sp, #16]
   33100:	ldp	x21, x22, [sp, #32]
   33104:	ldp	x29, x30, [sp], #432
   33108:	ret

000000000003310c <__asan_cplus_demangle_print@@Base>:
   3310c:	stp	x29, x30, [sp, #-80]!
   33110:	mov	x29, sp
   33114:	stp	x19, x20, [sp, #16]
   33118:	stp	x21, x22, [sp, #32]
   3311c:	mov	w19, w0
   33120:	mov	x20, x1
   33124:	mov	x22, x3
   33128:	str	xzr, [sp, #48]
   3312c:	str	xzr, [sp, #56]
   33130:	str	xzr, [sp, #64]
   33134:	str	wzr, [sp, #72]
   33138:	cbnz	w2, 33180 <__asan_cplus_demangle_print@@Base+0x74>
   3313c:	add	x3, sp, #0x30
   33140:	adrp	x2, 29000 <__asan_backtrace_create_state@@Base+0x6b4>
   33144:	add	x2, x2, #0x414
   33148:	mov	x1, x20
   3314c:	mov	w0, w19
   33150:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   33154:	cbz	w0, 331c8 <__asan_cplus_demangle_print@@Base+0xbc>
   33158:	ldr	w0, [sp, #72]
   3315c:	cmp	w0, #0x0
   33160:	ldr	x0, [sp, #64]
   33164:	csinc	x0, x0, xzr, eq  // eq = none
   33168:	str	x0, [x22]
   3316c:	ldr	x0, [sp, #48]
   33170:	ldp	x19, x20, [sp, #16]
   33174:	ldp	x21, x22, [sp, #32]
   33178:	ldp	x29, x30, [sp], #80
   3317c:	ret
   33180:	sxtw	x0, w2
   33184:	cmp	x0, #0x2
   33188:	b.ls	331b4 <__asan_cplus_demangle_print@@Base+0xa8>  // b.plast
   3318c:	mov	x21, #0x2                   	// #2
   33190:	lsl	x21, x21, #1
   33194:	cmp	x0, x21
   33198:	b.hi	33190 <__asan_cplus_demangle_print@@Base+0x84>  // b.pmore
   3319c:	mov	x0, x21
   331a0:	bl	6880 <malloc@plt>
   331a4:	cbz	x0, 331bc <__asan_cplus_demangle_print@@Base+0xb0>
   331a8:	str	x0, [sp, #48]
   331ac:	str	x21, [sp, #64]
   331b0:	b	3313c <__asan_cplus_demangle_print@@Base+0x30>
   331b4:	mov	x21, #0x2                   	// #2
   331b8:	b	3319c <__asan_cplus_demangle_print@@Base+0x90>
   331bc:	mov	w0, #0x1                   	// #1
   331c0:	str	w0, [sp, #72]
   331c4:	b	3313c <__asan_cplus_demangle_print@@Base+0x30>
   331c8:	ldr	x0, [sp, #48]
   331cc:	bl	6540 <free@plt>
   331d0:	str	xzr, [x22]
   331d4:	mov	x0, #0x0                   	// #0
   331d8:	b	33170 <__asan_cplus_demangle_print@@Base+0x64>

00000000000331dc <__asan_cplus_demangle_init_info@@Base>:
   331dc:	str	x0, [x3]
   331e0:	add	x4, x0, x2
   331e4:	str	x4, [x3, #8]
   331e8:	str	w1, [x3, #16]
   331ec:	str	x0, [x3, #24]
   331f0:	lsl	w0, w2, #1
   331f4:	str	w0, [x3, #44]
   331f8:	str	wzr, [x3, #40]
   331fc:	str	w2, [x3, #60]
   33200:	str	wzr, [x3, #56]
   33204:	str	xzr, [x3, #64]
   33208:	str	wzr, [x3, #72]
   3320c:	str	wzr, [x3, #76]
   33210:	str	wzr, [x3, #80]
   33214:	str	wzr, [x3, #84]
   33218:	ret
   3321c:	stp	x29, x30, [sp, #-160]!
   33220:	mov	x29, sp
   33224:	stp	x19, x20, [sp, #16]
   33228:	stp	x21, x22, [sp, #32]
   3322c:	stp	x23, x24, [sp, #48]
   33230:	mov	x19, x0
   33234:	mov	w20, w1
   33238:	mov	x22, x2
   3323c:	mov	x23, x3
   33240:	ldrb	w0, [x0]
   33244:	cmp	w0, #0x5f
   33248:	b.ne	33258 <__asan_cplus_demangle_init_info@@Base+0x7c>  // b.any
   3324c:	ldrb	w0, [x19, #1]
   33250:	cmp	w0, #0x5a
   33254:	b.eq	333bc <__asan_cplus_demangle_init_info@@Base+0x1e0>  // b.none
   33258:	mov	x2, #0x8                   	// #8
   3325c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x8150>
   33260:	add	x1, x1, #0xbf0
   33264:	mov	x0, x19
   33268:	bl	6830 <__asan_internal_strncmp@plt>
   3326c:	cbnz	w0, 332ac <__asan_cplus_demangle_init_info@@Base+0xd0>
   33270:	ldrb	w0, [x19, #8]
   33274:	cmp	w0, #0x2e
   33278:	mov	w1, #0x5f                  	// #95
   3327c:	ccmp	w0, w1, #0x4, ne  // ne = any
   33280:	mov	w1, #0x24                  	// #36
   33284:	ccmp	w0, w1, #0x4, ne  // ne = any
   33288:	b.ne	332ac <__asan_cplus_demangle_init_info@@Base+0xd0>  // b.any
   3328c:	ldrb	w0, [x19, #9]
   33290:	cmp	w0, #0x44
   33294:	mov	w1, #0x49                  	// #73
   33298:	ccmp	w0, w1, #0x4, ne  // ne = any
   3329c:	b.ne	332ac <__asan_cplus_demangle_init_info@@Base+0xd0>  // b.any
   332a0:	ldrb	w1, [x19, #10]
   332a4:	cmp	w1, #0x5f
   332a8:	b.eq	333ac <__asan_cplus_demangle_init_info@@Base+0x1d0>  // b.none
   332ac:	and	w0, w20, #0x10
   332b0:	mov	w21, #0x0                   	// #0
   332b4:	tbz	w20, #4, 33408 <__asan_cplus_demangle_init_info@@Base+0x22c>
   332b8:	mov	x0, x19
   332bc:	bl	64b0 <__asan_internal_strlen@plt>
   332c0:	add	x3, x29, #0x48
   332c4:	mov	x2, x0
   332c8:	mov	w1, w20
   332cc:	mov	x0, x19
   332d0:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   332d4:	and	w0, w20, #0x40000
   332d8:	tbnz	w20, #18, 332e8 <__asan_cplus_demangle_init_info@@Base+0x10c>
   332dc:	ldr	w1, [x29, #116]
   332e0:	cmp	w1, #0x800
   332e4:	b.hi	33408 <__asan_cplus_demangle_init_info@@Base+0x22c>  // b.pmore
   332e8:	mov	x19, sp
   332ec:	ldrsw	x0, [x29, #116]
   332f0:	add	x0, x0, x0, lsl #1
   332f4:	lsl	x0, x0, #3
   332f8:	add	x0, x0, #0xf
   332fc:	and	x0, x0, #0xfffffffffffffff0
   33300:	sub	sp, sp, x0
   33304:	mov	x1, sp
   33308:	ldrsw	x0, [x29, #132]
   3330c:	lsl	x0, x0, #3
   33310:	add	x0, x0, #0xf
   33314:	and	x0, x0, #0xfffffffffffffff0
   33318:	sub	sp, sp, x0
   3331c:	str	x1, [x29, #104]
   33320:	mov	x0, sp
   33324:	str	x0, [x29, #120]
   33328:	cmp	w21, #0x1
   3332c:	b.eq	33420 <__asan_cplus_demangle_init_info@@Base+0x244>  // b.none
   33330:	b.ls	333c4 <__asan_cplus_demangle_init_info@@Base+0x1e8>  // b.plast
   33334:	ldr	x0, [x29, #96]
   33338:	add	x24, x0, #0xb
   3333c:	str	x24, [x29, #96]
   33340:	cmp	w21, #0x2
   33344:	cset	w1, ne  // ne = any
   33348:	add	w21, w1, #0x44
   3334c:	ldrb	w1, [x0, #11]
   33350:	cmp	w1, #0x5f
   33354:	b.ne	33364 <__asan_cplus_demangle_init_info@@Base+0x188>  // b.any
   33358:	ldrb	w1, [x0, #12]
   3335c:	cmp	w1, #0x5a
   33360:	b.eq	33434 <__asan_cplus_demangle_init_info@@Base+0x258>  // b.none
   33364:	mov	x0, x24
   33368:	bl	64b0 <__asan_internal_strlen@plt>
   3336c:	mov	w2, w0
   33370:	mov	x1, x24
   33374:	add	x0, x29, #0x48
   33378:	bl	2f490 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3337c:	mov	x2, x0
   33380:	mov	x3, #0x0                   	// #0
   33384:	mov	w1, w21
   33388:	add	x0, x29, #0x48
   3338c:	bl	28a50 <__asan_backtrace_create_state@@Base+0x104>
   33390:	mov	x21, x0
   33394:	ldr	x0, [x29, #96]
   33398:	bl	64b0 <__asan_internal_strlen@plt>
   3339c:	ldr	x1, [x29, #96]
   333a0:	add	x1, x1, x0
   333a4:	str	x1, [x29, #96]
   333a8:	b	333d4 <__asan_cplus_demangle_init_info@@Base+0x1f8>
   333ac:	cmp	w0, #0x49
   333b0:	cset	w21, ne  // ne = any
   333b4:	add	w21, w21, #0x2
   333b8:	b	332b8 <__asan_cplus_demangle_init_info@@Base+0xdc>
   333bc:	mov	w21, #0x1                   	// #1
   333c0:	b	332b8 <__asan_cplus_demangle_init_info@@Base+0xdc>
   333c4:	cbnz	w21, 33450 <__asan_cplus_demangle_init_info@@Base+0x274>
   333c8:	add	x0, x29, #0x48
   333cc:	bl	6420 <__asan_cplus_demangle_type@plt>
   333d0:	mov	x21, x0
   333d4:	tbz	w20, #0, 333e8 <__asan_cplus_demangle_init_info@@Base+0x20c>
   333d8:	ldr	x0, [x29, #96]
   333dc:	ldrb	w1, [x0]
   333e0:	mov	w0, #0x0                   	// #0
   333e4:	cbnz	w1, 33404 <__asan_cplus_demangle_init_info@@Base+0x228>
   333e8:	mov	w0, #0x0                   	// #0
   333ec:	cbz	x21, 33404 <__asan_cplus_demangle_init_info@@Base+0x228>
   333f0:	mov	x3, x23
   333f4:	mov	x2, x22
   333f8:	mov	x1, x21
   333fc:	mov	w0, w20
   33400:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   33404:	mov	sp, x19
   33408:	mov	sp, x29
   3340c:	ldp	x19, x20, [sp, #16]
   33410:	ldp	x21, x22, [sp, #32]
   33414:	ldp	x23, x24, [sp, #48]
   33418:	ldp	x29, x30, [sp], #160
   3341c:	ret
   33420:	mov	w1, #0x1                   	// #1
   33424:	add	x0, x29, #0x48
   33428:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3342c:	mov	x21, x0
   33430:	b	333d4 <__asan_cplus_demangle_init_info@@Base+0x1f8>
   33434:	add	x0, x0, #0xd
   33438:	str	x0, [x29, #96]
   3343c:	mov	w1, #0x0                   	// #0
   33440:	add	x0, x29, #0x48
   33444:	bl	31be4 <__asan_cplus_demangle_type@@Base+0x2290>
   33448:	mov	x2, x0
   3344c:	b	33380 <__asan_cplus_demangle_init_info@@Base+0x1a4>
   33450:	bl	68b0 <abort@plt>
   33454:	stp	x29, x30, [sp, #-64]!
   33458:	mov	x29, sp
   3345c:	str	x19, [sp, #16]
   33460:	mov	x19, x2
   33464:	str	xzr, [sp, #32]
   33468:	str	xzr, [sp, #40]
   3346c:	str	xzr, [sp, #48]
   33470:	str	wzr, [sp, #56]
   33474:	add	x3, sp, #0x20
   33478:	adrp	x2, 29000 <__asan_backtrace_create_state@@Base+0x6b4>
   3347c:	add	x2, x2, #0x414
   33480:	bl	3321c <__asan_cplus_demangle_init_info@@Base+0x40>
   33484:	cbz	w0, 334ac <__asan_cplus_demangle_init_info@@Base+0x2d0>
   33488:	ldr	w0, [sp, #56]
   3348c:	cmp	w0, #0x0
   33490:	ldr	x0, [sp, #48]
   33494:	csinc	x0, x0, xzr, eq  // eq = none
   33498:	str	x0, [x19]
   3349c:	ldr	x0, [sp, #32]
   334a0:	ldr	x19, [sp, #16]
   334a4:	ldp	x29, x30, [sp], #64
   334a8:	ret
   334ac:	ldr	x0, [sp, #32]
   334b0:	bl	6540 <free@plt>
   334b4:	str	xzr, [x19]
   334b8:	mov	x0, #0x0                   	// #0
   334bc:	b	334a0 <__asan_cplus_demangle_init_info@@Base+0x2c4>
   334c0:	stp	x29, x30, [sp, #-144]!
   334c4:	mov	x29, sp
   334c8:	stp	x19, x20, [sp, #16]
   334cc:	stp	x21, x22, [sp, #32]
   334d0:	mov	x22, x0
   334d4:	mov	x20, x1
   334d8:	mov	x19, x2
   334dc:	str	wzr, [x1]
   334e0:	str	wzr, [x2]
   334e4:	bl	64b0 <__asan_internal_strlen@plt>
   334e8:	add	x21, x29, #0x38
   334ec:	mov	x3, x21
   334f0:	mov	x2, x0
   334f4:	mov	w1, #0x4000                	// #16384
   334f8:	mov	x0, x22
   334fc:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   33500:	ldrsw	x0, [x29, #100]
   33504:	add	x0, x0, x0, lsl #1
   33508:	lsl	x0, x0, #3
   3350c:	add	x0, x0, #0xf
   33510:	and	x0, x0, #0xfffffffffffffff0
   33514:	sub	sp, sp, x0
   33518:	mov	x1, sp
   3351c:	ldrsw	x0, [x29, #116]
   33520:	lsl	x0, x0, #3
   33524:	add	x0, x0, #0xf
   33528:	and	x0, x0, #0xfffffffffffffff0
   3352c:	sub	sp, sp, x0
   33530:	str	x1, [x29, #88]
   33534:	mov	x0, sp
   33538:	str	x0, [x29, #104]
   3353c:	mov	w1, #0x1                   	// #1
   33540:	mov	x0, x21
   33544:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   33548:	cbz	x0, 335d0 <__asan_cplus_demangle_init_info@@Base+0x3f4>
   3354c:	ldr	w3, [x0]
   33550:	cmp	w3, #0x7
   33554:	b.eq	335c0 <__asan_cplus_demangle_init_info@@Base+0x3e4>  // b.none
   33558:	b.hi	33598 <__asan_cplus_demangle_init_info@@Base+0x3bc>  // b.pmore
   3355c:	cmp	w3, #0x2
   33560:	b.ls	3357c <__asan_cplus_demangle_init_info@@Base+0x3a0>  // b.plast
   33564:	sub	w3, w3, #0x3
   33568:	cmp	w3, #0x1
   3356c:	b.hi	335d8 <__asan_cplus_demangle_init_info@@Base+0x3fc>  // b.pmore
   33570:	ldr	x0, [x0, #8]
   33574:	cbnz	x0, 3354c <__asan_cplus_demangle_init_info@@Base+0x370>
   33578:	b	33584 <__asan_cplus_demangle_init_info@@Base+0x3a8>
   3357c:	cbnz	w3, 335b8 <__asan_cplus_demangle_init_info@@Base+0x3dc>
   33580:	mov	w0, #0x0                   	// #0
   33584:	mov	sp, x29
   33588:	ldp	x19, x20, [sp, #16]
   3358c:	ldp	x21, x22, [sp, #32]
   33590:	ldp	x29, x30, [sp], #144
   33594:	ret
   33598:	cmp	w3, #0x8
   3359c:	b.ne	335b0 <__asan_cplus_demangle_init_info@@Base+0x3d4>  // b.any
   335a0:	ldr	w0, [x0, #8]
   335a4:	str	w0, [x19]
   335a8:	mov	w0, #0x1                   	// #1
   335ac:	b	33584 <__asan_cplus_demangle_init_info@@Base+0x3a8>
   335b0:	mov	w0, #0x0                   	// #0
   335b4:	b	33584 <__asan_cplus_demangle_init_info@@Base+0x3a8>
   335b8:	ldr	x0, [x0, #16]
   335bc:	b	33574 <__asan_cplus_demangle_init_info@@Base+0x398>
   335c0:	ldr	w0, [x0, #8]
   335c4:	str	w0, [x20]
   335c8:	mov	w0, #0x1                   	// #1
   335cc:	b	33584 <__asan_cplus_demangle_init_info@@Base+0x3a8>
   335d0:	mov	w0, #0x0                   	// #0
   335d4:	b	33584 <__asan_cplus_demangle_init_info@@Base+0x3a8>
   335d8:	mov	w0, #0x0                   	// #0
   335dc:	b	33584 <__asan_cplus_demangle_init_info@@Base+0x3a8>

00000000000335e0 <__asan_cplus_demangle_v3@@Base>:
   335e0:	stp	x29, x30, [sp, #-32]!
   335e4:	mov	x29, sp
   335e8:	add	x2, sp, #0x18
   335ec:	bl	33454 <__asan_cplus_demangle_init_info@@Base+0x278>
   335f0:	ldp	x29, x30, [sp], #32
   335f4:	ret

00000000000335f8 <__asan_cplus_demangle_v3_callback@@Base>:
   335f8:	stp	x29, x30, [sp, #-16]!
   335fc:	mov	x29, sp
   33600:	bl	3321c <__asan_cplus_demangle_init_info@@Base+0x40>
   33604:	ldp	x29, x30, [sp], #16
   33608:	ret

000000000003360c <__asan_java_demangle_v3@@Base>:
   3360c:	stp	x29, x30, [sp, #-32]!
   33610:	mov	x29, sp
   33614:	add	x2, sp, #0x18
   33618:	mov	w1, #0x25                  	// #37
   3361c:	bl	33454 <__asan_cplus_demangle_init_info@@Base+0x278>
   33620:	ldp	x29, x30, [sp], #32
   33624:	ret

0000000000033628 <__asan_java_demangle_v3_callback@@Base>:
   33628:	stp	x29, x30, [sp, #-16]!
   3362c:	mov	x29, sp
   33630:	mov	x3, x2
   33634:	mov	x2, x1
   33638:	mov	w1, #0x25                  	// #37
   3363c:	bl	3321c <__asan_cplus_demangle_init_info@@Base+0x40>
   33640:	ldp	x29, x30, [sp], #16
   33644:	ret

0000000000033648 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   33648:	stp	x29, x30, [sp, #-32]!
   3364c:	mov	x29, sp
   33650:	add	x2, sp, #0x18
   33654:	add	x1, sp, #0x1c
   33658:	bl	334c0 <__asan_cplus_demangle_init_info@@Base+0x2e4>
   3365c:	cmp	w0, #0x0
   33660:	ldr	w0, [sp, #28]
   33664:	csel	w0, w0, wzr, ne  // ne = any
   33668:	ldp	x29, x30, [sp], #32
   3366c:	ret

0000000000033670 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   33670:	stp	x29, x30, [sp, #-32]!
   33674:	mov	x29, sp
   33678:	add	x2, sp, #0x18
   3367c:	add	x1, sp, #0x1c
   33680:	bl	334c0 <__asan_cplus_demangle_init_info@@Base+0x2e4>
   33684:	cmp	w0, #0x0
   33688:	ldr	w0, [sp, #24]
   3368c:	csel	w0, w0, wzr, ne  // ne = any
   33690:	ldp	x29, x30, [sp], #32
   33694:	ret

0000000000033698 <__asan_internal_memcpy@@Base>:
   33698:	stp	x29, x30, [sp, #-16]!
   3369c:	mov	x29, sp
   336a0:	bl	145e0 <__sanitizer_set_report_fd@@Base+0x179c>
   336a4:	ldp	x29, x30, [sp], #16
   336a8:	ret

00000000000336ac <__asan_internal_memset@@Base>:
   336ac:	stp	x29, x30, [sp, #-16]!
   336b0:	mov	x29, sp
   336b4:	bl	14650 <__sanitizer_set_report_fd@@Base+0x180c>
   336b8:	ldp	x29, x30, [sp], #16
   336bc:	ret

00000000000336c0 <__asan_internal_memcmp@@Base>:
   336c0:	stp	x29, x30, [sp, #-16]!
   336c4:	mov	x29, sp
   336c8:	bl	145a0 <__sanitizer_set_report_fd@@Base+0x175c>
   336cc:	ldp	x29, x30, [sp], #16
   336d0:	ret

00000000000336d4 <__asan_internal_strcmp@@Base>:
   336d4:	stp	x29, x30, [sp, #-16]!
   336d8:	mov	x29, sp
   336dc:	bl	146b8 <__sanitizer_set_report_fd@@Base+0x1874>
   336e0:	ldp	x29, x30, [sp], #16
   336e4:	ret

00000000000336e8 <__asan_internal_strncmp@@Base>:
   336e8:	stp	x29, x30, [sp, #-16]!
   336ec:	mov	x29, sp
   336f0:	bl	146fc <__sanitizer_set_report_fd@@Base+0x18b8>
   336f4:	ldp	x29, x30, [sp], #16
   336f8:	ret

00000000000336fc <__asan_internal_strlen@@Base>:
   336fc:	stp	x29, x30, [sp, #-16]!
   33700:	mov	x29, sp
   33704:	bl	147ec <__sanitizer_set_report_fd@@Base+0x19a8>
   33708:	ldp	x29, x30, [sp], #16
   3370c:	ret

0000000000033710 <__asan_internal_strnlen@@Base>:
   33710:	stp	x29, x30, [sp, #-16]!
   33714:	mov	x29, sp
   33718:	bl	149a0 <__sanitizer_set_report_fd@@Base+0x1b5c>
   3371c:	ldp	x29, x30, [sp], #16
   33720:	ret
   33724:	stp	x29, x30, [sp, #-16]!
   33728:	mov	x29, sp
   3372c:	mov	x0, x4
   33730:	mov	w2, #0xffffffff            	// #-1
   33734:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   33738:	add	x1, x1, #0x2b0
   3373c:	blr	x3
   33740:	mov	w0, #0x0                   	// #0
   33744:	ldp	x29, x30, [sp], #16
   33748:	ret
   3374c:	stp	x29, x30, [sp, #-16]!
   33750:	mov	x29, sp
   33754:	mov	x0, x4
   33758:	mov	w2, #0xffffffff            	// #-1
   3375c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   33760:	add	x1, x1, #0x2d0
   33764:	blr	x3
   33768:	ldp	x29, x30, [sp], #16
   3376c:	ret
   33770:	ldr	x2, [x0, #8]
   33774:	ldr	x0, [x1, #8]
   33778:	cmp	x2, x0
   3377c:	b.cc	33788 <__asan_internal_strnlen@@Base+0x78>  // b.lo, b.ul, b.last
   33780:	cset	w0, hi  // hi = pmore
   33784:	ret
   33788:	mov	w0, #0xffffffff            	// #-1
   3378c:	b	33784 <__asan_internal_strnlen@@Base+0x74>
   33790:	stp	x29, x30, [sp, #-192]!
   33794:	mov	x29, sp
   33798:	stp	x19, x20, [sp, #16]
   3379c:	stp	x21, x22, [sp, #32]
   337a0:	mov	x19, x0
   337a4:	mov	x20, x1
   337a8:	mov	x21, x3
   337ac:	add	x22, x2, #0x1, lsl #12
   337b0:	mov	x2, #0x20                  	// #32
   337b4:	mov	w1, #0x0                   	// #0
   337b8:	add	x0, sp, #0xa0
   337bc:	bl	6530 <__asan_internal_memset@plt>
   337c0:	cbz	x20, 33834 <__asan_internal_strnlen@@Base+0x124>
   337c4:	mov	x4, #0x0                   	// #0
   337c8:	add	x0, sp, #0xa0
   337cc:	add	x2, sp, #0x60
   337d0:	add	x7, sp, #0x80
   337d4:	b	3380c <__asan_internal_strnlen@@Base+0xfc>
   337d8:	and	w1, w4, #0xffff
   337dc:	ldrh	w3, [x2, w5, sxtw #1]
   337e0:	strh	w1, [x22, x3, lsl #1]
   337e4:	ldrb	w3, [x19, x4]
   337e8:	strh	w1, [x2, x3, lsl #1]
   337ec:	ldrb	w5, [x19, x4]
   337f0:	lsl	x5, x5, #1
   337f4:	ldrh	w6, [x0, x5]
   337f8:	add	w6, w6, #0x1
   337fc:	strh	w6, [x0, x5]
   33800:	add	x4, x4, #0x1
   33804:	cmp	x20, x4
   33808:	b.eq	33834 <__asan_internal_strnlen@@Base+0x124>  // b.none
   3380c:	ldrb	w5, [x19, x4]
   33810:	cmp	w5, #0xf
   33814:	b.hi	33b40 <__asan_internal_strnlen@@Base+0x430>  // b.pmore
   33818:	ldrh	w1, [x0, w5, sxtw #1]
   3381c:	cbnz	w1, 337d8 <__asan_internal_strnlen@@Base+0xc8>
   33820:	and	w1, w4, #0xffff
   33824:	sbfiz	x5, x5, #1, #32
   33828:	strh	w1, [x7, x5]
   3382c:	strh	w1, [x2, x5]
   33830:	b	337ec <__asan_internal_strnlen@@Base+0xdc>
   33834:	mov	x2, #0x800                 	// #2048
   33838:	mov	w1, #0x0                   	// #0
   3383c:	mov	x0, x21
   33840:	bl	6530 <__asan_internal_memset@plt>
   33844:	mov	x4, #0x0                   	// #0
   33848:	mov	w1, #0x0                   	// #0
   3384c:	add	x9, sp, #0xa0
   33850:	mov	w8, #0x1                   	// #1
   33854:	add	x12, sp, #0x80
   33858:	add	x0, x9, x4, lsl #1
   3385c:	ldrh	w0, [x0, #2]
   33860:	cbnz	w0, 3388c <__asan_internal_strnlen@@Base+0x17c>
   33864:	add	x4, x4, #0x1
   33868:	cmp	x4, #0x8
   3386c:	b.ne	33858 <__asan_internal_strnlen@@Base+0x148>  // b.any
   33870:	stp	x23, x24, [sp, #48]
   33874:	stp	x25, x26, [sp, #64]
   33878:	add	x7, sp, #0xa0
   3387c:	mov	x6, #0x9                   	// #9
   33880:	add	x9, sp, #0x50
   33884:	mov	w8, #0x1                   	// #1
   33888:	b	339b8 <__asan_internal_strnlen@@Base+0x2a8>
   3388c:	add	w3, w4, #0x1
   33890:	lsl	w5, w8, w3
   33894:	cmp	w5, w0
   33898:	b.cc	33b54 <__asan_internal_strnlen@@Base+0x444>  // b.lo, b.ul, b.last
   3389c:	add	x5, x12, x4, lsl #1
   338a0:	ldrh	w7, [x5, #2]
   338a4:	and	x5, x0, #0xffff
   338a8:	tst	w7, #0xfffffe00
   338ac:	b.ne	33b5c <__asan_internal_strnlen@@Base+0x44c>  // b.any
   338b0:	ubfiz	w13, w4, #9, #7
   338b4:	lsl	w3, w8, w3
   338b8:	sxtw	x3, w3
   338bc:	lsl	w10, w8, w4
   338c0:	mov	x11, #0x0                   	// #0
   338c4:	orr	w6, w13, w7
   338c8:	mov	w0, w1
   338cc:	cmp	w1, #0xff
   338d0:	b.hi	338ec <__asan_internal_strnlen@@Base+0x1dc>  // b.pmore
   338d4:	ldrh	w2, [x21, x0, lsl #1]
   338d8:	cbnz	w2, 33b64 <__asan_internal_strnlen@@Base+0x454>
   338dc:	strh	w6, [x21, x0, lsl #1]
   338e0:	add	x0, x0, x3
   338e4:	cmp	x0, #0xff
   338e8:	b.ls	338d4 <__asan_internal_strnlen@@Base+0x1c4>  // b.plast
   338ec:	add	x11, x11, #0x1
   338f0:	cmp	x11, x5
   338f4:	b.cs	33900 <__asan_internal_strnlen@@Base+0x1f0>  // b.hs, b.nlast
   338f8:	mov	w7, w7
   338fc:	ldrh	w7, [x22, x7, lsl #1]
   33900:	tst	w10, w1
   33904:	b.eq	33944 <__asan_internal_strnlen@@Base+0x234>  // b.none
   33908:	mov	w0, w10
   3390c:	lsr	w0, w0, #1
   33910:	tst	w0, w1
   33914:	b.ne	3390c <__asan_internal_strnlen@@Base+0x1fc>  // b.any
   33918:	sub	w2, w0, #0x1
   3391c:	and	w1, w2, w1
   33920:	add	w1, w1, w0
   33924:	cmp	w0, #0x0
   33928:	csel	w1, w1, w0, ne  // ne = any
   3392c:	cmp	x11, x5
   33930:	b.eq	33864 <__asan_internal_strnlen@@Base+0x154>  // b.none
   33934:	tst	w7, #0xfffffe00
   33938:	b.eq	338c4 <__asan_internal_strnlen@@Base+0x1b4>  // b.none
   3393c:	mov	w0, #0x0                   	// #0
   33940:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33944:	mov	w0, w10
   33948:	b	33918 <__asan_internal_strnlen@@Base+0x208>
   3394c:	add	w1, w1, w0
   33950:	lsl	w4, w8, w4
   33954:	bic	w5, w5, w4
   33958:	subs	x3, x3, #0x1
   3395c:	b.eq	339a4 <__asan_internal_strnlen@@Base+0x294>  // b.none
   33960:	sub	w4, w6, w3
   33964:	lsr	w0, w5, w4
   33968:	tbz	w0, #0, 33958 <__asan_internal_strnlen@@Base+0x248>
   3396c:	sub	w0, w3, #0x1
   33970:	lsl	w0, w8, w0
   33974:	cbz	x3, 33950 <__asan_internal_strnlen@@Base+0x240>
   33978:	tst	w0, w1
   3397c:	b.eq	3394c <__asan_internal_strnlen@@Base+0x23c>  // b.none
   33980:	mov	w2, #0x0                   	// #0
   33984:	bic	w1, w1, w0
   33988:	add	w2, w2, #0x1
   3398c:	lsr	w0, w0, #1
   33990:	cmp	x3, w2, uxtw
   33994:	b.ls	33950 <__asan_internal_strnlen@@Base+0x240>  // b.plast
   33998:	tst	w1, w0
   3399c:	b.ne	33984 <__asan_internal_strnlen@@Base+0x274>  // b.any
   339a0:	b	3394c <__asan_internal_strnlen@@Base+0x23c>
   339a4:	cbnz	w5, 33b7c <__asan_internal_strnlen@@Base+0x46c>
   339a8:	add	x6, x6, #0x1
   339ac:	add	x7, x7, #0x2
   339b0:	cmp	x6, #0x10
   339b4:	b.eq	339d4 <__asan_internal_strnlen@@Base+0x2c4>  // b.none
   339b8:	ldrh	w5, [x7, #18]
   339bc:	cbz	w5, 339a8 <__asan_internal_strnlen@@Base+0x298>
   339c0:	add	x0, x9, x6, lsl #1
   339c4:	sturh	w1, [x0, #-18]
   339c8:	cbz	x6, 33b6c <__asan_internal_strnlen@@Base+0x45c>
   339cc:	mov	x3, x6
   339d0:	b	33960 <__asan_internal_strnlen@@Base+0x250>
   339d4:	mov	x3, #0x7                   	// #7
   339d8:	mov	x16, #0x0                   	// #0
   339dc:	add	x12, sp, #0xa0
   339e0:	add	x30, sp, #0x80
   339e4:	add	x20, sp, #0x50
   339e8:	mov	w10, #0x1                   	// #1
   339ec:	mov	x17, #0x0                   	// #0
   339f0:	mov	x19, #0x100                 	// #256
   339f4:	add	x0, x12, x3, lsl #1
   339f8:	ldrh	w0, [x0, #16]
   339fc:	cbnz	w0, 33a18 <__asan_internal_strnlen@@Base+0x308>
   33a00:	subs	x3, x3, #0x1
   33a04:	b.ne	339f4 <__asan_internal_strnlen@@Base+0x2e4>  // b.any
   33a08:	mov	w0, #0x1                   	// #1
   33a0c:	ldp	x23, x24, [sp, #48]
   33a10:	ldp	x25, x26, [sp, #64]
   33a14:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33a18:	lsl	x1, x3, #1
   33a1c:	add	x2, x1, x30
   33a20:	ldrh	w23, [x2, #16]
   33a24:	add	x1, x1, x20
   33a28:	ldurh	w5, [x1, #-2]
   33a2c:	and	x9, x0, #0xffff
   33a30:	lsl	w4, w10, w3
   33a34:	sxtw	x26, w4
   33a38:	ubfiz	w15, w3, #9, #7
   33a3c:	add	w14, w15, #0x1, lsl #12
   33a40:	and	w14, w14, #0xffff
   33a44:	mov	w4, w4
   33a48:	add	w11, w3, #0x7
   33a4c:	lsl	w11, w10, w11
   33a50:	mov	x8, x17
   33a54:	mov	x18, x17
   33a58:	mov	x13, x19
   33a5c:	mov	x24, #0x0                   	// #0
   33a60:	mov	x25, x3
   33a64:	and	x0, x5, #0xff
   33a68:	cmp	x13, w5, uxtb
   33a6c:	b.eq	33a9c <__asan_internal_strnlen@@Base+0x38c>  // b.none
   33a70:	lsl	x1, x0, #1
   33a74:	ldrh	w8, [x21, x1]
   33a78:	cbnz	w8, 33b1c <__asan_internal_strnlen@@Base+0x40c>
   33a7c:	tst	x16, #0xfffffffffffffe00
   33a80:	b.ne	33b8c <__asan_internal_strnlen@@Base+0x47c>  // b.any
   33a84:	add	w2, w14, w16
   33a88:	strh	w2, [x21, x1]
   33a8c:	mov	x8, x25
   33a90:	mov	x18, x16
   33a94:	mov	x13, x0
   33a98:	add	x16, x26, x16
   33a9c:	orr	w7, w15, w23
   33aa0:	lsr	w0, w5, #8
   33aa4:	lsl	w6, w10, w8
   33aa8:	cmp	x6, x0
   33aac:	b.ls	33ad0 <__asan_internal_strnlen@@Base+0x3c0>  // b.plast
   33ab0:	add	x1, x21, x18, lsl #1
   33ab4:	add	x1, x1, #0x200
   33ab8:	ldrh	w2, [x1, x0, lsl #1]
   33abc:	cbnz	w2, 33bbc <__asan_internal_strnlen@@Base+0x4ac>
   33ac0:	strh	w7, [x1, x0, lsl #1]
   33ac4:	add	x0, x0, x4
   33ac8:	cmp	x6, x0
   33acc:	b.hi	33ab8 <__asan_internal_strnlen@@Base+0x3a8>  // b.pmore
   33ad0:	add	x24, x24, #0x1
   33ad4:	cmp	x9, x24
   33ad8:	b.ls	33ae4 <__asan_internal_strnlen@@Base+0x3d4>  // b.plast
   33adc:	mov	w23, w23
   33ae0:	ldrh	w23, [x22, x23, lsl #1]
   33ae4:	tst	w11, w5
   33ae8:	b.eq	33b38 <__asan_internal_strnlen@@Base+0x428>  // b.none
   33aec:	mov	w0, w11
   33af0:	lsr	w0, w0, #1
   33af4:	tst	w0, w5
   33af8:	b.ne	33af0 <__asan_internal_strnlen@@Base+0x3e0>  // b.any
   33afc:	sub	w1, w0, #0x1
   33b00:	and	w5, w1, w5
   33b04:	add	w5, w5, w0
   33b08:	cmp	w0, #0x0
   33b0c:	csel	w5, w5, w0, ne  // ne = any
   33b10:	cmp	x9, x24
   33b14:	b.ne	33a64 <__asan_internal_strnlen@@Base+0x354>  // b.any
   33b18:	b	33a00 <__asan_internal_strnlen@@Base+0x2f0>
   33b1c:	tbz	w8, #12, 33b9c <__asan_internal_strnlen@@Base+0x48c>
   33b20:	and	x18, x8, #0x1ff
   33b24:	ubfx	x8, x8, #9, #3
   33b28:	cmp	x8, x3
   33b2c:	b.cc	33bac <__asan_internal_strnlen@@Base+0x49c>  // b.lo, b.ul, b.last
   33b30:	mov	x13, x0
   33b34:	b	33a9c <__asan_internal_strnlen@@Base+0x38c>
   33b38:	mov	w0, w11
   33b3c:	b	33afc <__asan_internal_strnlen@@Base+0x3ec>
   33b40:	mov	w0, #0x0                   	// #0
   33b44:	ldp	x19, x20, [sp, #16]
   33b48:	ldp	x21, x22, [sp, #32]
   33b4c:	ldp	x29, x30, [sp], #192
   33b50:	ret
   33b54:	mov	w0, #0x0                   	// #0
   33b58:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33b5c:	mov	w0, #0x0                   	// #0
   33b60:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33b64:	mov	w0, #0x0                   	// #0
   33b68:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33b6c:	mov	w0, #0x0                   	// #0
   33b70:	ldp	x23, x24, [sp, #48]
   33b74:	ldp	x25, x26, [sp, #64]
   33b78:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33b7c:	mov	w0, #0x0                   	// #0
   33b80:	ldp	x23, x24, [sp, #48]
   33b84:	ldp	x25, x26, [sp, #64]
   33b88:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33b8c:	mov	w0, #0x0                   	// #0
   33b90:	ldp	x23, x24, [sp, #48]
   33b94:	ldp	x25, x26, [sp, #64]
   33b98:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33b9c:	mov	w0, #0x0                   	// #0
   33ba0:	ldp	x23, x24, [sp, #48]
   33ba4:	ldp	x25, x26, [sp, #64]
   33ba8:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33bac:	mov	w0, #0x0                   	// #0
   33bb0:	ldp	x23, x24, [sp, #48]
   33bb4:	ldp	x25, x26, [sp, #64]
   33bb8:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33bbc:	mov	w0, #0x0                   	// #0
   33bc0:	ldp	x23, x24, [sp, #48]
   33bc4:	ldp	x25, x26, [sp, #64]
   33bc8:	b	33b44 <__asan_internal_strnlen@@Base+0x434>
   33bcc:	ldr	w5, [x3]
   33bd0:	cmp	w5, #0xe
   33bd4:	b.hi	33c18 <__asan_internal_strnlen@@Base+0x508>  // b.pmore
   33bd8:	ldr	x4, [x0]
   33bdc:	ldr	x6, [x2]
   33be0:	sub	x1, x1, x4
   33be4:	cmp	x1, #0x3
   33be8:	b.le	33c20 <__asan_internal_strnlen@@Base+0x510>
   33bec:	mov	x1, x4
   33bf0:	ldr	w4, [x1], #4
   33bf4:	lsl	x4, x4, x5
   33bf8:	orr	x4, x4, x6
   33bfc:	prfm	pldl1strm, [x1]
   33c00:	str	x1, [x0]
   33c04:	str	x4, [x2]
   33c08:	add	w5, w5, #0x20
   33c0c:	str	w5, [x3]
   33c10:	mov	w0, #0x1                   	// #1
   33c14:	ret
   33c18:	mov	w0, #0x1                   	// #1
   33c1c:	b	33c14 <__asan_internal_strnlen@@Base+0x504>
   33c20:	mov	w0, #0x0                   	// #0
   33c24:	b	33c14 <__asan_internal_strnlen@@Base+0x504>
   33c28:	stp	x29, x30, [sp, #-240]!
   33c2c:	mov	x29, sp
   33c30:	stp	x19, x20, [sp, #16]
   33c34:	stp	x21, x22, [sp, #32]
   33c38:	stp	x23, x24, [sp, #48]
   33c3c:	stp	x25, x26, [sp, #64]
   33c40:	mov	x21, x0
   33c44:	str	x1, [sp, #120]
   33c48:	str	x2, [sp, #112]
   33c4c:	mov	x19, x3
   33c50:	mov	x20, x4
   33c54:	str	x0, [sp, #200]
   33c58:	add	x23, x0, x1
   33c5c:	add	x0, x3, x4
   33c60:	str	x0, [sp, #104]
   33c64:	cmp	x1, #0x4
   33c68:	b.le	34824 <__asan_internal_strnlen@@Base+0x1114>
   33c6c:	mov	x22, x3
   33c70:	mov	x0, x21
   33c74:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   33c78:	add	x1, x1, #0x510
   33c7c:	str	x1, [sp, #144]
   33c80:	add	x1, x1, #0x200
   33c84:	str	x1, [sp, #152]
   33c88:	ldrb	w1, [x0]
   33c8c:	and	w2, w1, #0xf
   33c90:	cmp	w2, #0x8
   33c94:	b.ne	34778 <__asan_internal_strnlen@@Base+0x1068>  // b.any
   33c98:	cmp	w1, #0x7f
   33c9c:	b.hi	34778 <__asan_internal_strnlen@@Base+0x1068>  // b.pmore
   33ca0:	ldrb	w2, [x0, #1]
   33ca4:	tbnz	w2, #5, 34778 <__asan_internal_strnlen@@Base+0x1068>
   33ca8:	orr	w1, w2, w1, lsl #8
   33cac:	sxtw	x1, w1
   33cb0:	mov	x2, #0x4211                	// #16913
   33cb4:	movk	x2, #0x2108, lsl #16
   33cb8:	movk	x2, #0x1084, lsl #32
   33cbc:	movk	x2, #0x842, lsl #48
   33cc0:	umulh	x3, x1, x2
   33cc4:	sub	x2, x1, x3
   33cc8:	add	x2, x3, x2, lsr #1
   33ccc:	lsr	x2, x2, #4
   33cd0:	lsl	x3, x2, #5
   33cd4:	sub	x2, x3, x2
   33cd8:	cmp	x1, x2
   33cdc:	b.ne	34778 <__asan_internal_strnlen@@Base+0x1068>  // b.any
   33ce0:	add	x0, x0, #0x2
   33ce4:	str	x0, [sp, #200]
   33ce8:	str	xzr, [sp, #208]
   33cec:	str	wzr, [sp, #196]
   33cf0:	tst	x0, #0x3
   33cf4:	b.eq	33d24 <__asan_internal_strnlen@@Base+0x614>  // b.none
   33cf8:	ldr	w1, [sp, #196]
   33cfc:	ldrb	w2, [x0], #1
   33d00:	lsl	x3, x2, x1
   33d04:	ldr	x2, [sp, #208]
   33d08:	orr	x2, x2, x3
   33d0c:	str	x2, [sp, #208]
   33d10:	add	w1, w1, #0x8
   33d14:	str	w1, [sp, #196]
   33d18:	str	x0, [sp, #200]
   33d1c:	tst	x0, #0x3
   33d20:	b.ne	33cf8 <__asan_internal_strnlen@@Base+0x5e8>  // b.any
   33d24:	add	x25, sp, #0xc4
   33d28:	add	x24, sp, #0xd0
   33d2c:	mov	x3, x25
   33d30:	mov	x2, x24
   33d34:	mov	x1, x23
   33d38:	add	x0, sp, #0xc8
   33d3c:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   33d40:	cbz	w0, 34778 <__asan_internal_strnlen@@Base+0x1068>
   33d44:	ldr	x0, [sp, #208]
   33d48:	str	x0, [sp, #160]
   33d4c:	ubfx	w1, w0, #1, #2
   33d50:	lsr	x0, x0, #3
   33d54:	str	x0, [sp, #208]
   33d58:	ldr	w2, [sp, #196]
   33d5c:	sub	w0, w2, #0x3
   33d60:	str	w0, [sp, #196]
   33d64:	cmp	w1, #0x3
   33d68:	b.eq	34778 <__asan_internal_strnlen@@Base+0x1068>  // b.none
   33d6c:	cbz	w1, 340c8 <__asan_internal_strnlen@@Base+0x9b8>
   33d70:	stp	x27, x28, [sp, #80]
   33d74:	cmp	w1, #0x1
   33d78:	b.eq	343f0 <__asan_internal_strnlen@@Base+0xce0>  // b.none
   33d7c:	mov	x3, x25
   33d80:	mov	x2, x24
   33d84:	mov	x1, x23
   33d88:	add	x0, sp, #0xc8
   33d8c:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   33d90:	cbz	w0, 34734 <__asan_internal_strnlen@@Base+0x1024>
   33d94:	ldr	x0, [sp, #208]
   33d98:	and	w27, w0, #0x1f
   33d9c:	add	w27, w27, #0x101
   33da0:	ubfx	w28, w0, #5, #5
   33da4:	add	w28, w28, #0x1
   33da8:	ubfx	w26, w0, #10, #4
   33dac:	add	w26, w26, #0x4
   33db0:	lsr	x0, x0, #14
   33db4:	str	x0, [sp, #208]
   33db8:	ldr	w0, [sp, #196]
   33dbc:	sub	w0, w0, #0xe
   33dc0:	str	w0, [sp, #196]
   33dc4:	cmp	w27, #0x11e
   33dc8:	ccmp	w28, #0x1e, #0x2, ls  // ls = plast
   33dcc:	b.hi	3473c <__asan_internal_strnlen@@Base+0x102c>  // b.pmore
   33dd0:	mov	x2, #0x13                  	// #19
   33dd4:	mov	w1, #0x0                   	// #0
   33dd8:	add	x0, sp, #0xd8
   33ddc:	bl	6530 <__asan_internal_memset@plt>
   33de0:	mov	x3, x25
   33de4:	mov	x2, x24
   33de8:	mov	x1, x23
   33dec:	add	x0, sp, #0xc8
   33df0:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   33df4:	cbz	w0, 34744 <__asan_internal_strnlen@@Base+0x1034>
   33df8:	ldr	x0, [sp, #208]
   33dfc:	and	w1, w0, #0x7
   33e00:	strb	w1, [sp, #232]
   33e04:	ubfx	w1, w0, #3, #3
   33e08:	strb	w1, [sp, #233]
   33e0c:	ubfx	w1, w0, #6, #3
   33e10:	strb	w1, [sp, #234]
   33e14:	ubfx	w1, w0, #9, #3
   33e18:	strb	w1, [sp, #216]
   33e1c:	lsr	x2, x0, #12
   33e20:	str	x2, [sp, #208]
   33e24:	ldr	w1, [sp, #196]
   33e28:	sub	w3, w1, #0xc
   33e2c:	str	w3, [sp, #196]
   33e30:	cmp	w26, #0x4
   33e34:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33e38:	and	w2, w2, #0x7
   33e3c:	strb	w2, [sp, #224]
   33e40:	lsr	x0, x0, #15
   33e44:	str	x0, [sp, #208]
   33e48:	sub	w1, w1, #0xf
   33e4c:	str	w1, [sp, #196]
   33e50:	cmp	w26, #0x5
   33e54:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33e58:	mov	x3, x25
   33e5c:	mov	x2, x24
   33e60:	mov	x1, x23
   33e64:	add	x0, sp, #0xc8
   33e68:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   33e6c:	cbz	w0, 3474c <__asan_internal_strnlen@@Base+0x103c>
   33e70:	ldr	x0, [sp, #208]
   33e74:	and	w1, w0, #0x7
   33e78:	strb	w1, [sp, #223]
   33e7c:	lsr	x2, x0, #3
   33e80:	str	x2, [sp, #208]
   33e84:	ldr	w1, [sp, #196]
   33e88:	sub	w3, w1, #0x3
   33e8c:	str	w3, [sp, #196]
   33e90:	cmp	w26, #0x6
   33e94:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33e98:	and	w2, w2, #0x7
   33e9c:	strb	w2, [sp, #225]
   33ea0:	lsr	x2, x0, #6
   33ea4:	str	x2, [sp, #208]
   33ea8:	sub	w3, w1, #0x6
   33eac:	str	w3, [sp, #196]
   33eb0:	cmp	w26, #0x7
   33eb4:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33eb8:	and	w2, w2, #0x7
   33ebc:	strb	w2, [sp, #222]
   33ec0:	lsr	x2, x0, #9
   33ec4:	str	x2, [sp, #208]
   33ec8:	sub	w3, w1, #0x9
   33ecc:	str	w3, [sp, #196]
   33ed0:	cmp	w26, #0x8
   33ed4:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33ed8:	and	w2, w2, #0x7
   33edc:	strb	w2, [sp, #226]
   33ee0:	lsr	x2, x0, #12
   33ee4:	str	x2, [sp, #208]
   33ee8:	sub	w3, w1, #0xc
   33eec:	str	w3, [sp, #196]
   33ef0:	cmp	w26, #0x9
   33ef4:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33ef8:	and	w2, w2, #0x7
   33efc:	strb	w2, [sp, #221]
   33f00:	lsr	x0, x0, #15
   33f04:	str	x0, [sp, #208]
   33f08:	sub	w1, w1, #0xf
   33f0c:	str	w1, [sp, #196]
   33f10:	cmp	w26, #0xa
   33f14:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33f18:	mov	x3, x25
   33f1c:	mov	x2, x24
   33f20:	mov	x1, x23
   33f24:	add	x0, sp, #0xc8
   33f28:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   33f2c:	cbz	w0, 34754 <__asan_internal_strnlen@@Base+0x1044>
   33f30:	ldr	x0, [sp, #208]
   33f34:	and	w1, w0, #0x7
   33f38:	strb	w1, [sp, #227]
   33f3c:	lsr	x2, x0, #3
   33f40:	str	x2, [sp, #208]
   33f44:	ldr	w1, [sp, #196]
   33f48:	sub	w3, w1, #0x3
   33f4c:	str	w3, [sp, #196]
   33f50:	cmp	w26, #0xb
   33f54:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33f58:	and	w2, w2, #0x7
   33f5c:	strb	w2, [sp, #220]
   33f60:	lsr	x2, x0, #6
   33f64:	str	x2, [sp, #208]
   33f68:	sub	w3, w1, #0x6
   33f6c:	str	w3, [sp, #196]
   33f70:	cmp	w26, #0xc
   33f74:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33f78:	and	w2, w2, #0x7
   33f7c:	strb	w2, [sp, #228]
   33f80:	lsr	x2, x0, #9
   33f84:	str	x2, [sp, #208]
   33f88:	sub	w3, w1, #0x9
   33f8c:	str	w3, [sp, #196]
   33f90:	cmp	w26, #0xd
   33f94:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33f98:	and	w2, w2, #0x7
   33f9c:	strb	w2, [sp, #219]
   33fa0:	lsr	x2, x0, #12
   33fa4:	str	x2, [sp, #208]
   33fa8:	sub	w3, w1, #0xc
   33fac:	str	w3, [sp, #196]
   33fb0:	cmp	w26, #0xe
   33fb4:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33fb8:	and	w2, w2, #0x7
   33fbc:	strb	w2, [sp, #229]
   33fc0:	lsr	x0, x0, #15
   33fc4:	str	x0, [sp, #208]
   33fc8:	sub	w1, w1, #0xf
   33fcc:	str	w1, [sp, #196]
   33fd0:	cmp	w26, #0xf
   33fd4:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   33fd8:	mov	x3, x25
   33fdc:	mov	x2, x24
   33fe0:	mov	x1, x23
   33fe4:	add	x0, sp, #0xc8
   33fe8:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   33fec:	cbz	w0, 3475c <__asan_internal_strnlen@@Base+0x104c>
   33ff0:	ldr	x0, [sp, #208]
   33ff4:	and	w1, w0, #0x7
   33ff8:	strb	w1, [sp, #218]
   33ffc:	lsr	x2, x0, #3
   34000:	str	x2, [sp, #208]
   34004:	ldr	w1, [sp, #196]
   34008:	sub	w3, w1, #0x3
   3400c:	str	w3, [sp, #196]
   34010:	cmp	w26, #0x10
   34014:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   34018:	and	w2, w2, #0x7
   3401c:	strb	w2, [sp, #230]
   34020:	lsr	x2, x0, #6
   34024:	str	x2, [sp, #208]
   34028:	sub	w3, w1, #0x6
   3402c:	str	w3, [sp, #196]
   34030:	cmp	w26, #0x11
   34034:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   34038:	and	w2, w2, #0x7
   3403c:	strb	w2, [sp, #217]
   34040:	lsr	x2, x0, #9
   34044:	str	x2, [sp, #208]
   34048:	sub	w3, w1, #0x9
   3404c:	str	w3, [sp, #196]
   34050:	cmp	w26, #0x12
   34054:	b.eq	34070 <__asan_internal_strnlen@@Base+0x960>  // b.none
   34058:	and	w2, w2, #0x7
   3405c:	strb	w2, [sp, #231]
   34060:	lsr	x0, x0, #12
   34064:	str	x0, [sp, #208]
   34068:	sub	w1, w1, #0xc
   3406c:	str	w1, [sp, #196]
   34070:	ldr	x26, [sp, #112]
   34074:	mov	x3, x26
   34078:	mov	x2, x26
   3407c:	mov	x1, #0x13                  	// #19
   34080:	add	x0, sp, #0xd8
   34084:	bl	33790 <__asan_internal_strnlen@@Base+0x80>
   34088:	cbz	w0, 34764 <__asan_internal_strnlen@@Base+0x1054>
   3408c:	add	x0, x26, #0x1, lsl #12
   34090:	add	x0, x0, #0x278
   34094:	str	x0, [sp, #136]
   34098:	mov	w1, w27
   3409c:	str	x1, [sp, #168]
   340a0:	mov	w2, w28
   340a4:	str	x2, [sp, #184]
   340a8:	add	x28, x1, x2
   340ac:	add	x28, x0, x28
   340b0:	cmp	x0, x28
   340b4:	b.cs	34398 <__asan_internal_strnlen@@Base+0xc88>  // b.hs, b.nlast
   340b8:	mov	x26, x0
   340bc:	add	x0, sp, #0xc8
   340c0:	str	x0, [sp, #128]
   340c4:	b	34220 <__asan_internal_strnlen@@Base+0xb10>
   340c8:	cmp	w0, #0x8
   340cc:	b.ls	340f4 <__asan_internal_strnlen@@Base+0x9e4>  // b.plast
   340d0:	ldr	x1, [sp, #200]
   340d4:	sub	w0, w0, #0x8
   340d8:	cmp	w0, #0x8
   340dc:	b.hi	340d4 <__asan_internal_strnlen@@Base+0x9c4>  // b.pmore
   340e0:	sub	w2, w2, #0xc
   340e4:	lsr	w2, w2, #3
   340e8:	mvn	x2, x2
   340ec:	add	x2, x1, x2
   340f0:	str	x2, [sp, #200]
   340f4:	str	xzr, [sp, #208]
   340f8:	str	wzr, [sp, #196]
   340fc:	ldr	x1, [sp, #200]
   34100:	sub	x0, x23, x1
   34104:	cmp	x0, #0x3
   34108:	b.le	34778 <__asan_internal_strnlen@@Base+0x1068>
   3410c:	ldrb	w0, [x1, #1]
   34110:	ldrb	w26, [x1]
   34114:	bfi	w26, w0, #8, #24
   34118:	ldrb	w2, [x1, #3]
   3411c:	ldrb	w0, [x1, #2]
   34120:	bfi	w0, w2, #8, #24
   34124:	add	x1, x1, #0x4
   34128:	str	x1, [sp, #200]
   3412c:	mvn	w0, w0
   34130:	cmp	w26, w0, uxth
   34134:	b.ne	34778 <__asan_internal_strnlen@@Base+0x1068>  // b.any
   34138:	sub	x0, x23, x1
   3413c:	cmp	w26, w0
   34140:	b.hi	34778 <__asan_internal_strnlen@@Base+0x1068>  // b.pmore
   34144:	ldr	x0, [sp, #104]
   34148:	sub	x0, x0, x22
   3414c:	cmp	w26, w0
   34150:	b.hi	34778 <__asan_internal_strnlen@@Base+0x1068>  // b.pmore
   34154:	and	x26, x26, #0xffff
   34158:	mov	x2, x26
   3415c:	mov	x0, x22
   34160:	bl	64a0 <__asan_internal_memcpy@plt>
   34164:	add	x22, x22, x26
   34168:	ldr	x0, [sp, #200]
   3416c:	add	x26, x0, x26
   34170:	str	x26, [sp, #200]
   34174:	tst	x26, #0x3
   34178:	b.eq	341a8 <__asan_internal_strnlen@@Base+0xa98>  // b.none
   3417c:	ldr	w0, [sp, #196]
   34180:	ldrb	w1, [x26], #1
   34184:	lsl	x2, x1, x0
   34188:	ldr	x1, [sp, #208]
   3418c:	orr	x1, x1, x2
   34190:	str	x1, [sp, #208]
   34194:	add	w0, w0, #0x8
   34198:	str	w0, [sp, #196]
   3419c:	str	x26, [sp, #200]
   341a0:	tst	x26, #0x3
   341a4:	b.ne	3417c <__asan_internal_strnlen@@Base+0xa6c>  // b.any
   341a8:	ldr	x0, [sp, #160]
   341ac:	tbz	w0, #0, 33d2c <__asan_internal_strnlen@@Base+0x61c>
   341b0:	ldr	x0, [sp, #200]
   341b4:	sub	x1, x23, x0
   341b8:	cmp	x1, #0x4
   341bc:	b.gt	33c88 <__asan_internal_strnlen@@Base+0x578>
   341c0:	b	34828 <__asan_internal_strnlen@@Base+0x1118>
   341c4:	cmp	w3, #0x10
   341c8:	b.eq	34280 <__asan_internal_strnlen@@Base+0xb70>  // b.none
   341cc:	cmp	w3, #0x11
   341d0:	b.eq	342f0 <__asan_internal_strnlen@@Base+0xbe0>  // b.none
   341d4:	cmp	w3, #0x12
   341d8:	b.ne	347ac <__asan_internal_strnlen@@Base+0x109c>  // b.any
   341dc:	and	w27, w0, #0x7f
   341e0:	add	w27, w27, #0xb
   341e4:	lsr	x0, x0, #7
   341e8:	str	x0, [sp, #208]
   341ec:	sub	w1, w1, #0x8
   341f0:	str	w1, [sp, #196]
   341f4:	sub	x0, x28, x26
   341f8:	cmp	w27, w0
   341fc:	b.hi	347b4 <__asan_internal_strnlen@@Base+0x10a4>  // b.pmore
   34200:	mov	w27, w27
   34204:	mov	x2, x27
   34208:	mov	w1, #0x0                   	// #0
   3420c:	mov	x0, x26
   34210:	bl	6530 <__asan_internal_memset@plt>
   34214:	add	x26, x26, x27
   34218:	cmp	x26, x28
   3421c:	b.cs	34398 <__asan_internal_strnlen@@Base+0xc88>  // b.hs, b.nlast
   34220:	mov	x3, x25
   34224:	mov	x2, x24
   34228:	mov	x1, x23
   3422c:	ldr	x0, [sp, #128]
   34230:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   34234:	cbz	w0, 3476c <__asan_internal_strnlen@@Base+0x105c>
   34238:	ldr	x0, [sp, #208]
   3423c:	and	x1, x0, #0xff
   34240:	ldr	x2, [sp, #112]
   34244:	ldrh	w2, [x2, x1, lsl #1]
   34248:	tbnz	w2, #12, 34774 <__asan_internal_strnlen@@Base+0x1064>
   3424c:	ubfx	x3, x2, #9, #3
   34250:	add	w1, w3, #0x1
   34254:	lsr	x0, x0, x1
   34258:	str	x0, [sp, #208]
   3425c:	ldr	w1, [sp, #196]
   34260:	sub	w1, w1, w3
   34264:	sub	w3, w1, #0x1
   34268:	str	w3, [sp, #196]
   3426c:	and	w3, w2, #0x1ff
   34270:	tst	w2, #0x1f0
   34274:	b.ne	341c4 <__asan_internal_strnlen@@Base+0xab4>  // b.any
   34278:	strb	w3, [x26], #1
   3427c:	b	34218 <__asan_internal_strnlen@@Base+0xb08>
   34280:	ldr	x2, [sp, #136]
   34284:	cmp	x26, x2
   34288:	b.eq	34794 <__asan_internal_strnlen@@Base+0x1084>  // b.none
   3428c:	and	w2, w0, #0x3
   34290:	add	w2, w2, #0x3
   34294:	lsr	x0, x0, #2
   34298:	str	x0, [sp, #208]
   3429c:	sub	w1, w1, #0x3
   342a0:	str	w1, [sp, #196]
   342a4:	sub	x0, x28, x26
   342a8:	cmp	w2, w0
   342ac:	b.hi	3479c <__asan_internal_strnlen@@Base+0x108c>  // b.pmore
   342b0:	ldurb	w0, [x26, #-1]
   342b4:	cmp	w2, #0x5
   342b8:	b.eq	342d4 <__asan_internal_strnlen@@Base+0xbc4>  // b.none
   342bc:	cmp	w2, #0x6
   342c0:	b.eq	342d0 <__asan_internal_strnlen@@Base+0xbc0>  // b.none
   342c4:	cmp	w2, #0x4
   342c8:	b.ne	342dc <__asan_internal_strnlen@@Base+0xbcc>  // b.any
   342cc:	b	342d8 <__asan_internal_strnlen@@Base+0xbc8>
   342d0:	strb	w0, [x26], #1
   342d4:	strb	w0, [x26], #1
   342d8:	strb	w0, [x26], #1
   342dc:	strb	w0, [x26]
   342e0:	strb	w0, [x26, #1]
   342e4:	strb	w0, [x26, #2]
   342e8:	add	x26, x26, #0x3
   342ec:	b	34218 <__asan_internal_strnlen@@Base+0xb08>
   342f0:	and	w2, w0, #0x7
   342f4:	add	w2, w2, #0x3
   342f8:	lsr	x0, x0, #3
   342fc:	str	x0, [sp, #208]
   34300:	sub	w1, w1, #0x4
   34304:	str	w1, [sp, #196]
   34308:	sub	x0, x28, x26
   3430c:	cmp	w2, w0
   34310:	b.hi	347a4 <__asan_internal_strnlen@@Base+0x1094>  // b.pmore
   34314:	cmp	w2, #0x7
   34318:	b.eq	34390 <__asan_internal_strnlen@@Base+0xc80>  // b.none
   3431c:	b.hi	34364 <__asan_internal_strnlen@@Base+0xc54>  // b.pmore
   34320:	cmp	w2, #0x5
   34324:	b.eq	34334 <__asan_internal_strnlen@@Base+0xc24>  // b.none
   34328:	cmp	w2, #0x6
   3432c:	b.ne	3433c <__asan_internal_strnlen@@Base+0xc2c>  // b.any
   34330:	strb	wzr, [x26], #1
   34334:	strb	wzr, [x26], #1
   34338:	b	34348 <__asan_internal_strnlen@@Base+0xc38>
   3433c:	mov	x0, x26
   34340:	cmp	w2, #0x4
   34344:	b.ne	34350 <__asan_internal_strnlen@@Base+0xc40>  // b.any
   34348:	mov	x0, x26
   3434c:	strb	wzr, [x0], #1
   34350:	strb	wzr, [x0]
   34354:	strb	wzr, [x0, #1]
   34358:	add	x26, x0, #0x3
   3435c:	strb	wzr, [x0, #2]
   34360:	b	34218 <__asan_internal_strnlen@@Base+0xb08>
   34364:	cmp	w2, #0x9
   34368:	b.eq	34378 <__asan_internal_strnlen@@Base+0xc68>  // b.none
   3436c:	cmp	w2, #0xa
   34370:	b.ne	34380 <__asan_internal_strnlen@@Base+0xc70>  // b.any
   34374:	strb	wzr, [x26], #1
   34378:	strb	wzr, [x26], #1
   3437c:	b	3438c <__asan_internal_strnlen@@Base+0xc7c>
   34380:	mov	x0, x26
   34384:	cmp	w2, #0x8
   34388:	b.ne	34350 <__asan_internal_strnlen@@Base+0xc40>  // b.any
   3438c:	strb	wzr, [x26], #1
   34390:	strb	wzr, [x26], #1
   34394:	b	34330 <__asan_internal_strnlen@@Base+0xc20>
   34398:	ldr	x26, [sp, #112]
   3439c:	add	x0, x26, #0x1, lsl #12
   343a0:	ldrb	w0, [x0, #888]
   343a4:	cbz	w0, 347bc <__asan_internal_strnlen@@Base+0x10ac>
   343a8:	mov	x3, x26
   343ac:	mov	x2, x26
   343b0:	ldr	x28, [sp, #168]
   343b4:	mov	x1, x28
   343b8:	ldr	x27, [sp, #136]
   343bc:	mov	x0, x27
   343c0:	bl	33790 <__asan_internal_strnlen@@Base+0x80>
   343c4:	cbz	w0, 347c4 <__asan_internal_strnlen@@Base+0x10b4>
   343c8:	add	x2, x26, #0x800
   343cc:	str	x2, [sp, #176]
   343d0:	mov	x3, x2
   343d4:	mov	x2, x26
   343d8:	ldr	x1, [sp, #184]
   343dc:	add	x0, x27, x28
   343e0:	bl	33790 <__asan_internal_strnlen@@Base+0x80>
   343e4:	cbz	w0, 347cc <__asan_internal_strnlen@@Base+0x10bc>
   343e8:	str	x26, [sp, #136]
   343ec:	b	34400 <__asan_internal_strnlen@@Base+0xcf0>
   343f0:	ldr	x0, [sp, #144]
   343f4:	str	x0, [sp, #176]
   343f8:	ldr	x0, [sp, #152]
   343fc:	str	x0, [sp, #136]
   34400:	add	x0, sp, #0xc8
   34404:	str	x0, [sp, #128]
   34408:	b	3445c <__asan_internal_strnlen@@Base+0xd4c>
   3440c:	mov	w2, #0x1                   	// #1
   34410:	lsl	w1, w2, w1
   34414:	sub	w1, w1, #0x1
   34418:	and	x1, x1, x0, lsr #8
   3441c:	add	w26, w26, #0x100
   34420:	add	x1, x1, w26, sxtw
   34424:	ldr	x2, [sp, #136]
   34428:	ldrh	w26, [x2, x1, lsl #1]
   3442c:	ubfx	x1, x26, #9, #3
   34430:	and	w26, w26, #0x1ff
   34434:	add	w2, w1, #0x8
   34438:	lsr	x0, x0, x2
   3443c:	str	x0, [sp, #208]
   34440:	ldr	w0, [sp, #196]
   34444:	sub	w0, w0, #0x8
   34448:	sub	w0, w0, w1
   3444c:	str	w0, [sp, #196]
   34450:	b	344ac <__asan_internal_strnlen@@Base+0xd9c>
   34454:	strb	w26, [x22], #1
   34458:	prfm	pstl1keep, [x22]
   3445c:	mov	x3, x25
   34460:	mov	x2, x24
   34464:	mov	x1, x23
   34468:	ldr	x0, [sp, #128]
   3446c:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   34470:	cbz	w0, 347d4 <__asan_internal_strnlen@@Base+0x10c4>
   34474:	ldr	x0, [sp, #208]
   34478:	and	x1, x0, #0xff
   3447c:	ldr	x2, [sp, #136]
   34480:	ldrh	w2, [x2, x1, lsl #1]
   34484:	ubfx	x1, x2, #9, #3
   34488:	and	w26, w2, #0x1ff
   3448c:	tbnz	w2, #12, 3440c <__asan_internal_strnlen@@Base+0xcfc>
   34490:	add	w2, w1, #0x1
   34494:	lsr	x0, x0, x2
   34498:	str	x0, [sp, #208]
   3449c:	ldr	w0, [sp, #196]
   344a0:	sub	w0, w0, #0x1
   344a4:	sub	w1, w0, w1
   344a8:	str	w1, [sp, #196]
   344ac:	cmp	w26, #0xff
   344b0:	b.hi	344c8 <__asan_internal_strnlen@@Base+0xdb8>  // b.pmore
   344b4:	ldr	x0, [sp, #104]
   344b8:	cmp	x0, x22
   344bc:	b.ne	34454 <__asan_internal_strnlen@@Base+0xd44>  // b.any
   344c0:	ldp	x27, x28, [sp, #80]
   344c4:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   344c8:	cmp	w26, #0x100
   344cc:	b.eq	3472c <__asan_internal_strnlen@@Base+0x101c>  // b.none
   344d0:	cmp	w26, #0x108
   344d4:	b.hi	34564 <__asan_internal_strnlen@@Base+0xe54>  // b.pmore
   344d8:	sub	w28, w26, #0xfe
   344dc:	mov	x3, x25
   344e0:	mov	x2, x24
   344e4:	mov	x1, x23
   344e8:	ldr	x0, [sp, #128]
   344ec:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   344f0:	cbz	w0, 347ec <__asan_internal_strnlen@@Base+0x10dc>
   344f4:	ldr	x0, [sp, #208]
   344f8:	and	x1, x0, #0xff
   344fc:	ldr	x2, [sp, #176]
   34500:	ldrh	w2, [x2, x1, lsl #1]
   34504:	ubfx	x1, x2, #9, #3
   34508:	and	w26, w2, #0x1ff
   3450c:	tbnz	w2, #12, 345e4 <__asan_internal_strnlen@@Base+0xed4>
   34510:	add	w2, w1, #0x1
   34514:	lsr	x0, x0, x2
   34518:	str	x0, [sp, #208]
   3451c:	ldr	w0, [sp, #196]
   34520:	sub	w0, w0, #0x1
   34524:	sub	w1, w0, w1
   34528:	str	w1, [sp, #196]
   3452c:	cbnz	w26, 3462c <__asan_internal_strnlen@@Base+0xf1c>
   34530:	cmp	x19, x22
   34534:	b.eq	347f4 <__asan_internal_strnlen@@Base+0x10e4>  // b.none
   34538:	ldr	x0, [sp, #104]
   3453c:	sub	x0, x0, x22
   34540:	cmp	w28, w0
   34544:	b.hi	347fc <__asan_internal_strnlen@@Base+0x10ec>  // b.pmore
   34548:	mov	w28, w28
   3454c:	mov	x2, x28
   34550:	ldurb	w1, [x22, #-1]
   34554:	mov	x0, x22
   34558:	bl	6530 <__asan_internal_memset@plt>
   3455c:	add	x22, x22, x28
   34560:	b	3445c <__asan_internal_strnlen@@Base+0xd4c>
   34564:	cmp	w26, #0x11d
   34568:	b.eq	345dc <__asan_internal_strnlen@@Base+0xecc>  // b.none
   3456c:	b.hi	347dc <__asan_internal_strnlen@@Base+0x10cc>  // b.pmore
   34570:	mov	x3, x25
   34574:	mov	x2, x24
   34578:	mov	x1, x23
   3457c:	ldr	x0, [sp, #128]
   34580:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   34584:	cbz	w0, 347e4 <__asan_internal_strnlen@@Base+0x10d4>
   34588:	sub	w26, w26, #0x109
   3458c:	lsr	w1, w26, #2
   34590:	add	w2, w1, #0x1
   34594:	and	w26, w26, #0x3
   34598:	lsl	w0, w26, w2
   3459c:	add	w0, w0, #0xb
   345a0:	ldr	x3, [sp, #208]
   345a4:	mov	w4, #0x1                   	// #1
   345a8:	lsl	w1, w4, w1
   345ac:	sub	w1, w1, #0x1
   345b0:	mov	w4, #0xffffffff            	// #-1
   345b4:	lsl	w4, w4, w2
   345b8:	bic	w4, w3, w4
   345bc:	add	w1, w4, w1, lsl #3
   345c0:	add	w28, w1, w0
   345c4:	lsr	x3, x3, x2
   345c8:	str	x3, [sp, #208]
   345cc:	ldr	w0, [sp, #196]
   345d0:	sub	w2, w0, w2
   345d4:	str	w2, [sp, #196]
   345d8:	b	344dc <__asan_internal_strnlen@@Base+0xdcc>
   345dc:	mov	w28, #0x102                 	// #258
   345e0:	b	344dc <__asan_internal_strnlen@@Base+0xdcc>
   345e4:	mov	w2, #0x1                   	// #1
   345e8:	lsl	w1, w2, w1
   345ec:	sub	w1, w1, #0x1
   345f0:	and	x1, x1, x0, lsr #8
   345f4:	add	w26, w26, #0x100
   345f8:	add	x1, x1, w26, sxtw
   345fc:	ldr	x2, [sp, #176]
   34600:	ldrh	w26, [x2, x1, lsl #1]
   34604:	ubfx	x1, x26, #9, #3
   34608:	and	w26, w26, #0x1ff
   3460c:	add	w2, w1, #0x8
   34610:	lsr	x0, x0, x2
   34614:	str	x0, [sp, #208]
   34618:	ldr	w0, [sp, #196]
   3461c:	sub	w0, w0, #0x8
   34620:	sub	w0, w0, w1
   34624:	str	w0, [sp, #196]
   34628:	b	3452c <__asan_internal_strnlen@@Base+0xe1c>
   3462c:	cmp	w26, #0x1d
   34630:	b.hi	34804 <__asan_internal_strnlen@@Base+0x10f4>  // b.pmore
   34634:	cmp	w26, #0x3
   34638:	b.hi	34680 <__asan_internal_strnlen@@Base+0xf70>  // b.pmore
   3463c:	add	w26, w26, #0x1
   34640:	sub	x0, x22, x19
   34644:	cmp	w26, w0
   34648:	b.hi	34814 <__asan_internal_strnlen@@Base+0x1104>  // b.pmore
   3464c:	ldr	x0, [sp, #104]
   34650:	sub	x0, x0, x22
   34654:	cmp	w28, w0
   34658:	b.hi	3481c <__asan_internal_strnlen@@Base+0x110c>  // b.pmore
   3465c:	cmp	w28, w26
   34660:	b.hi	346ec <__asan_internal_strnlen@@Base+0xfdc>  // b.pmore
   34664:	mov	w27, w28
   34668:	mov	x2, x27
   3466c:	sub	x1, x22, w26, uxtw
   34670:	mov	x0, x22
   34674:	bl	64a0 <__asan_internal_memcpy@plt>
   34678:	add	x22, x22, x27
   3467c:	b	3445c <__asan_internal_strnlen@@Base+0xd4c>
   34680:	mov	x3, x25
   34684:	mov	x2, x24
   34688:	mov	x1, x23
   3468c:	ldr	x0, [sp, #128]
   34690:	bl	33bcc <__asan_internal_strnlen@@Base+0x4bc>
   34694:	cbz	w0, 3480c <__asan_internal_strnlen@@Base+0x10fc>
   34698:	sub	w26, w26, #0x4
   3469c:	lsr	w1, w26, #1
   346a0:	add	w2, w1, #0x1
   346a4:	and	w26, w26, #0x1
   346a8:	lsl	w0, w26, w2
   346ac:	add	w0, w0, #0x5
   346b0:	ldr	x3, [sp, #208]
   346b4:	mov	w4, #0x1                   	// #1
   346b8:	lsl	w1, w4, w1
   346bc:	sub	w1, w1, #0x1
   346c0:	mov	w4, #0xffffffff            	// #-1
   346c4:	lsl	w4, w4, w2
   346c8:	bic	w4, w3, w4
   346cc:	add	w1, w4, w1, lsl #2
   346d0:	add	w26, w1, w0
   346d4:	lsr	x3, x3, x2
   346d8:	str	x3, [sp, #208]
   346dc:	ldr	w0, [sp, #196]
   346e0:	sub	w2, w0, w2
   346e4:	str	w2, [sp, #196]
   346e8:	b	34640 <__asan_internal_strnlen@@Base+0xf30>
   346ec:	mov	w0, w26
   346f0:	str	x0, [sp, #184]
   346f4:	cmp	w28, w26
   346f8:	csel	w0, w28, w26, ls  // ls = plast
   346fc:	str	w0, [sp, #168]
   34700:	csel	w27, w28, w26, ls  // ls = plast
   34704:	mov	x2, x27
   34708:	ldr	x1, [sp, #184]
   3470c:	sub	x1, x22, x1
   34710:	mov	x0, x22
   34714:	bl	64a0 <__asan_internal_memcpy@plt>
   34718:	add	x22, x22, x27
   3471c:	ldr	w0, [sp, #168]
   34720:	subs	w28, w28, w0
   34724:	b.ne	346f4 <__asan_internal_strnlen@@Base+0xfe4>  // b.any
   34728:	b	3445c <__asan_internal_strnlen@@Base+0xd4c>
   3472c:	ldp	x27, x28, [sp, #80]
   34730:	b	341a8 <__asan_internal_strnlen@@Base+0xa98>
   34734:	ldp	x27, x28, [sp, #80]
   34738:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   3473c:	ldp	x27, x28, [sp, #80]
   34740:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   34744:	ldp	x27, x28, [sp, #80]
   34748:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   3474c:	ldp	x27, x28, [sp, #80]
   34750:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   34754:	ldp	x27, x28, [sp, #80]
   34758:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   3475c:	ldp	x27, x28, [sp, #80]
   34760:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   34764:	ldp	x27, x28, [sp, #80]
   34768:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   3476c:	ldp	x27, x28, [sp, #80]
   34770:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   34774:	ldp	x27, x28, [sp, #80]
   34778:	mov	w0, #0x0                   	// #0
   3477c:	ldp	x19, x20, [sp, #16]
   34780:	ldp	x21, x22, [sp, #32]
   34784:	ldp	x23, x24, [sp, #48]
   34788:	ldp	x25, x26, [sp, #64]
   3478c:	ldp	x29, x30, [sp], #240
   34790:	ret
   34794:	ldp	x27, x28, [sp, #80]
   34798:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   3479c:	ldp	x27, x28, [sp, #80]
   347a0:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347a4:	ldp	x27, x28, [sp, #80]
   347a8:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347ac:	ldp	x27, x28, [sp, #80]
   347b0:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347b4:	ldp	x27, x28, [sp, #80]
   347b8:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347bc:	ldp	x27, x28, [sp, #80]
   347c0:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347c4:	ldp	x27, x28, [sp, #80]
   347c8:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347cc:	ldp	x27, x28, [sp, #80]
   347d0:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347d4:	ldp	x27, x28, [sp, #80]
   347d8:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347dc:	ldp	x27, x28, [sp, #80]
   347e0:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347e4:	ldp	x27, x28, [sp, #80]
   347e8:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347ec:	ldp	x27, x28, [sp, #80]
   347f0:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347f4:	ldp	x27, x28, [sp, #80]
   347f8:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   347fc:	ldp	x27, x28, [sp, #80]
   34800:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   34804:	ldp	x27, x28, [sp, #80]
   34808:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   3480c:	ldp	x27, x28, [sp, #80]
   34810:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   34814:	ldp	x27, x28, [sp, #80]
   34818:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   3481c:	ldp	x27, x28, [sp, #80]
   34820:	b	34778 <__asan_internal_strnlen@@Base+0x1068>
   34824:	mov	x22, x3
   34828:	ldr	x0, [sp, #104]
   3482c:	cmp	x0, x22
   34830:	b.ne	34ac0 <__asan_internal_strnlen@@Base+0x13b0>  // b.any
   34834:	ldr	x1, [sp, #120]
   34838:	sub	x0, x1, #0x4
   3483c:	add	x0, x21, x0
   34840:	add	x21, x21, x1
   34844:	mov	w9, #0x0                   	// #0
   34848:	ldrb	w1, [x0], #1
   3484c:	orr	w9, w1, w9, lsl #8
   34850:	cmp	x21, x0
   34854:	b.ne	34848 <__asan_internal_strnlen@@Base+0x1138>  // b.any
   34858:	mov	w5, #0x0                   	// #0
   3485c:	mov	w3, #0x1                   	// #1
   34860:	mov	x0, #0x15af                	// #5551
   34864:	cmp	x20, x0
   34868:	b.ls	34ab4 <__asan_internal_strnlen@@Base+0x13a4>  // b.plast
   3486c:	mov	x13, #0x15b0                	// #5552
   34870:	mov	w15, #0x8071                	// #32881
   34874:	movk	w15, #0x8007, lsl #16
   34878:	mov	w14, #0xfff1                	// #65521
   3487c:	mov	x17, x0
   34880:	mov	x2, x19
   34884:	add	x16, x19, x13
   34888:	ldrb	w0, [x2]
   3488c:	add	w0, w0, w3
   34890:	ldrb	w1, [x2, #1]
   34894:	add	w1, w1, w0
   34898:	ldrb	w6, [x2, #2]
   3489c:	add	w6, w6, w1
   348a0:	ldrb	w25, [x2, #3]
   348a4:	add	w25, w25, w6
   348a8:	ldrb	w4, [x2, #4]
   348ac:	add	w4, w4, w25
   348b0:	ldrb	w24, [x2, #5]
   348b4:	add	w24, w24, w4
   348b8:	ldrb	w12, [x2, #6]
   348bc:	add	w12, w12, w24
   348c0:	ldrb	w23, [x2, #7]
   348c4:	add	w23, w23, w12
   348c8:	ldrb	w11, [x2, #8]
   348cc:	add	w11, w11, w23
   348d0:	ldrb	w22, [x2, #9]
   348d4:	add	w22, w22, w11
   348d8:	ldrb	w10, [x2, #10]
   348dc:	add	w10, w10, w22
   348e0:	ldrb	w21, [x2, #11]
   348e4:	add	w21, w21, w10
   348e8:	ldrb	w8, [x2, #12]
   348ec:	add	w8, w8, w21
   348f0:	ldrb	w18, [x2, #13]
   348f4:	add	w18, w18, w8
   348f8:	ldrb	w7, [x2, #14]
   348fc:	add	w7, w7, w18
   34900:	add	x2, x2, #0x10
   34904:	ldurb	w3, [x2, #-1]
   34908:	add	w3, w3, w7
   3490c:	add	w1, w0, w1
   34910:	add	w6, w6, w25
   34914:	add	w1, w1, w6
   34918:	add	w4, w4, w24
   3491c:	add	w1, w1, w4
   34920:	add	w12, w12, w23
   34924:	add	w1, w1, w12
   34928:	add	w0, w11, w22
   3492c:	add	w0, w1, w0
   34930:	add	w10, w10, w21
   34934:	add	w0, w0, w10
   34938:	add	w8, w8, w18
   3493c:	add	w0, w0, w8
   34940:	add	w7, w7, w3
   34944:	add	w0, w0, w7
   34948:	add	w5, w5, w0
   3494c:	cmp	x2, x16
   34950:	b.ne	34888 <__asan_internal_strnlen@@Base+0x1178>  // b.any
   34954:	add	x19, x19, x13
   34958:	sub	x20, x20, x13
   3495c:	umull	x0, w3, w15
   34960:	lsr	x0, x0, #47
   34964:	msub	w3, w0, w14, w3
   34968:	umull	x0, w5, w15
   3496c:	lsr	x0, x0, #47
   34970:	msub	w5, w0, w14, w5
   34974:	cmp	x20, x17
   34978:	b.hi	34880 <__asan_internal_strnlen@@Base+0x1170>  // b.pmore
   3497c:	cmp	x20, #0xf
   34980:	b.ls	34a64 <__asan_internal_strnlen@@Base+0x1354>  // b.plast
   34984:	sub	x12, x20, #0x10
   34988:	and	x12, x12, #0xfffffffffffffff0
   3498c:	add	x12, x12, #0x10
   34990:	add	x12, x19, x12
   34994:	ldrb	w0, [x19]
   34998:	add	w0, w0, w3
   3499c:	ldrb	w1, [x19, #1]
   349a0:	add	w1, w1, w0
   349a4:	ldrb	w11, [x19, #2]
   349a8:	add	w11, w11, w1
   349ac:	ldrb	w18, [x19, #3]
   349b0:	add	w18, w18, w11
   349b4:	ldrb	w10, [x19, #4]
   349b8:	add	w10, w10, w18
   349bc:	ldrb	w17, [x19, #5]
   349c0:	add	w17, w17, w10
   349c4:	ldrb	w8, [x19, #6]
   349c8:	add	w8, w8, w17
   349cc:	ldrb	w16, [x19, #7]
   349d0:	add	w16, w16, w8
   349d4:	ldrb	w7, [x19, #8]
   349d8:	add	w7, w7, w16
   349dc:	ldrb	w15, [x19, #9]
   349e0:	add	w15, w15, w7
   349e4:	ldrb	w6, [x19, #10]
   349e8:	add	w6, w6, w15
   349ec:	ldrb	w14, [x19, #11]
   349f0:	add	w14, w14, w6
   349f4:	ldrb	w4, [x19, #12]
   349f8:	add	w4, w4, w14
   349fc:	ldrb	w13, [x19, #13]
   34a00:	add	w13, w13, w4
   34a04:	ldrb	w2, [x19, #14]
   34a08:	add	w2, w2, w13
   34a0c:	add	x19, x19, #0x10
   34a10:	ldurb	w3, [x19, #-1]
   34a14:	add	w3, w3, w2
   34a18:	add	w1, w0, w1
   34a1c:	add	w11, w11, w18
   34a20:	add	w1, w1, w11
   34a24:	add	w10, w10, w17
   34a28:	add	w1, w1, w10
   34a2c:	add	w8, w8, w16
   34a30:	add	w1, w1, w8
   34a34:	add	w0, w7, w15
   34a38:	add	w0, w1, w0
   34a3c:	add	w6, w6, w14
   34a40:	add	w0, w0, w6
   34a44:	add	w4, w4, w13
   34a48:	add	w0, w0, w4
   34a4c:	add	w2, w2, w3
   34a50:	add	w0, w0, w2
   34a54:	add	w5, w5, w0
   34a58:	cmp	x12, x19
   34a5c:	b.ne	34994 <__asan_internal_strnlen@@Base+0x1284>  // b.any
   34a60:	and	x20, x20, #0xf
   34a64:	cbz	x20, 34a80 <__asan_internal_strnlen@@Base+0x1370>
   34a68:	add	x20, x19, x20
   34a6c:	ldrb	w0, [x19], #1
   34a70:	add	w3, w3, w0
   34a74:	add	w5, w5, w3
   34a78:	cmp	x19, x20
   34a7c:	b.ne	34a6c <__asan_internal_strnlen@@Base+0x135c>  // b.any
   34a80:	mov	w0, #0x8071                	// #32881
   34a84:	movk	w0, #0x8007, lsl #16
   34a88:	umull	x1, w5, w0
   34a8c:	lsr	x1, x1, #47
   34a90:	mov	w2, #0xfff1                	// #65521
   34a94:	msub	w5, w1, w2, w5
   34a98:	umull	x0, w3, w0
   34a9c:	lsr	x0, x0, #47
   34aa0:	msub	w3, w0, w2, w3
   34aa4:	add	w3, w3, w5, lsl #16
   34aa8:	cmp	w3, w9
   34aac:	cset	w0, eq  // eq = none
   34ab0:	b	3477c <__asan_internal_strnlen@@Base+0x106c>
   34ab4:	mov	w5, #0x0                   	// #0
   34ab8:	mov	w3, #0x1                   	// #1
   34abc:	b	3497c <__asan_internal_strnlen@@Base+0x126c>
   34ac0:	mov	w0, #0x0                   	// #0
   34ac4:	b	3477c <__asan_internal_strnlen@@Base+0x106c>
   34ac8:	stp	x29, x30, [sp, #-112]!
   34acc:	mov	x29, sp
   34ad0:	stp	x23, x24, [sp, #48]
   34ad4:	str	x5, [sp, #104]
   34ad8:	str	xzr, [x6]
   34adc:	str	xzr, [x7]
   34ae0:	mov	w24, #0x1                   	// #1
   34ae4:	cmp	x2, #0xb
   34ae8:	b.hi	34afc <__asan_internal_strnlen@@Base+0x13ec>  // b.pmore
   34aec:	mov	w0, w24
   34af0:	ldp	x23, x24, [sp, #48]
   34af4:	ldp	x29, x30, [sp], #112
   34af8:	ret
   34afc:	stp	x19, x20, [sp, #16]
   34b00:	stp	x21, x22, [sp, #32]
   34b04:	stp	x25, x26, [sp, #64]
   34b08:	stp	x27, x28, [sp, #80]
   34b0c:	mov	x26, x0
   34b10:	mov	x22, x1
   34b14:	mov	x23, x2
   34b18:	mov	x25, x3
   34b1c:	mov	x27, x4
   34b20:	mov	x20, x6
   34b24:	mov	x21, x7
   34b28:	mov	x2, #0x4                   	// #4
   34b2c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   34b30:	add	x1, x1, #0x2f8
   34b34:	mov	x0, x22
   34b38:	bl	68f0 <__asan_internal_memcmp@plt>
   34b3c:	mov	w24, w0
   34b40:	cbnz	w0, 34bcc <__asan_internal_strnlen@@Base+0x14bc>
   34b44:	add	x0, x22, #0x4
   34b48:	add	x2, x22, #0xc
   34b4c:	mov	x19, #0x0                   	// #0
   34b50:	ldrb	w1, [x0], #1
   34b54:	orr	x19, x1, x19, lsl #8
   34b58:	cmp	x0, x2
   34b5c:	b.ne	34b50 <__asan_internal_strnlen@@Base+0x1440>  // b.any
   34b60:	ldr	x28, [x20]
   34b64:	cbz	x28, 34b74 <__asan_internal_strnlen@@Base+0x1464>
   34b68:	ldr	x0, [x21]
   34b6c:	cmp	x0, x19
   34b70:	b.cs	34b90 <__asan_internal_strnlen@@Base+0x1480>  // b.hs, b.nlast
   34b74:	ldr	x3, [sp, #104]
   34b78:	mov	x2, x27
   34b7c:	mov	x1, x19
   34b80:	mov	x0, x26
   34b84:	bl	65b0 <__asan_backtrace_alloc@plt>
   34b88:	mov	x28, x0
   34b8c:	cbz	x0, 34be4 <__asan_internal_strnlen@@Base+0x14d4>
   34b90:	mov	x4, x19
   34b94:	mov	x3, x28
   34b98:	mov	x2, x25
   34b9c:	sub	x1, x23, #0xc
   34ba0:	add	x0, x22, #0xc
   34ba4:	bl	33c28 <__asan_internal_strnlen@@Base+0x518>
   34ba8:	mov	w24, #0x1                   	// #1
   34bac:	cbz	w0, 34bf8 <__asan_internal_strnlen@@Base+0x14e8>
   34bb0:	str	x28, [x20]
   34bb4:	str	x19, [x21]
   34bb8:	ldp	x19, x20, [sp, #16]
   34bbc:	ldp	x21, x22, [sp, #32]
   34bc0:	ldp	x25, x26, [sp, #64]
   34bc4:	ldp	x27, x28, [sp, #80]
   34bc8:	b	34aec <__asan_internal_strnlen@@Base+0x13dc>
   34bcc:	mov	w24, #0x1                   	// #1
   34bd0:	ldp	x19, x20, [sp, #16]
   34bd4:	ldp	x21, x22, [sp, #32]
   34bd8:	ldp	x25, x26, [sp, #64]
   34bdc:	ldp	x27, x28, [sp, #80]
   34be0:	b	34aec <__asan_internal_strnlen@@Base+0x13dc>
   34be4:	ldp	x19, x20, [sp, #16]
   34be8:	ldp	x21, x22, [sp, #32]
   34bec:	ldp	x25, x26, [sp, #64]
   34bf0:	ldp	x27, x28, [sp, #80]
   34bf4:	b	34aec <__asan_internal_strnlen@@Base+0x13dc>
   34bf8:	ldp	x19, x20, [sp, #16]
   34bfc:	ldp	x21, x22, [sp, #32]
   34c00:	ldp	x25, x26, [sp, #64]
   34c04:	ldp	x27, x28, [sp, #80]
   34c08:	b	34aec <__asan_internal_strnlen@@Base+0x13dc>
   34c0c:	stp	x29, x30, [sp, #-144]!
   34c10:	mov	x29, sp
   34c14:	stp	x19, x20, [sp, #16]
   34c18:	stp	x21, x22, [sp, #32]
   34c1c:	stp	x23, x24, [sp, #48]
   34c20:	stp	x25, x26, [sp, #64]
   34c24:	stp	x27, x28, [sp, #80]
   34c28:	mov	x23, x0
   34c2c:	str	x1, [sp, #104]
   34c30:	mov	x22, x2
   34c34:	str	x3, [sp, #112]
   34c38:	mov	x25, x4
   34c3c:	mov	x20, x6
   34c40:	mov	x21, x7
   34c44:	str	x5, [sp, #120]
   34c48:	mov	x0, x5
   34c4c:	bl	64b0 <__asan_internal_strlen@plt>
   34c50:	mov	x24, x0
   34c54:	add	x28, x22, x25
   34c58:	add	x27, x28, x0
   34c5c:	add	x26, x27, #0x1
   34c60:	mov	x3, x21
   34c64:	mov	x2, x20
   34c68:	mov	x1, x26
   34c6c:	mov	x0, x23
   34c70:	bl	65b0 <__asan_backtrace_alloc@plt>
   34c74:	cbz	x0, 34cfc <__asan_internal_strnlen@@Base+0x15ec>
   34c78:	mov	x19, x0
   34c7c:	mov	x2, x22
   34c80:	ldr	x1, [sp, #104]
   34c84:	bl	64a0 <__asan_internal_memcpy@plt>
   34c88:	mov	x2, x25
   34c8c:	ldr	x1, [sp, #112]
   34c90:	add	x0, x19, x22
   34c94:	bl	64a0 <__asan_internal_memcpy@plt>
   34c98:	mov	x2, x24
   34c9c:	ldr	x1, [sp, #120]
   34ca0:	add	x0, x19, x28
   34ca4:	bl	64a0 <__asan_internal_memcpy@plt>
   34ca8:	strb	wzr, [x19, x27]
   34cac:	add	x3, sp, #0x8c
   34cb0:	mov	x2, x21
   34cb4:	mov	x1, x20
   34cb8:	mov	x0, x19
   34cbc:	bl	6a30 <__asan_backtrace_open@plt>
   34cc0:	mov	w22, w0
   34cc4:	mov	x4, x21
   34cc8:	mov	x3, x20
   34ccc:	mov	x2, x26
   34cd0:	mov	x1, x19
   34cd4:	mov	x0, x23
   34cd8:	bl	6890 <__asan_backtrace_free@plt>
   34cdc:	mov	w0, w22
   34ce0:	ldp	x19, x20, [sp, #16]
   34ce4:	ldp	x21, x22, [sp, #32]
   34ce8:	ldp	x23, x24, [sp, #48]
   34cec:	ldp	x25, x26, [sp, #64]
   34cf0:	ldp	x27, x28, [sp, #80]
   34cf4:	ldp	x29, x30, [sp], #144
   34cf8:	ret
   34cfc:	mov	w22, #0xffffffff            	// #-1
   34d00:	b	34cdc <__asan_internal_strnlen@@Base+0x15cc>
   34d04:	stp	x29, x30, [sp, #-288]!
   34d08:	mov	x29, sp
   34d0c:	stp	x19, x20, [sp, #16]
   34d10:	stp	x21, x22, [sp, #32]
   34d14:	stp	x23, x24, [sp, #48]
   34d18:	stp	x25, x26, [sp, #64]
   34d1c:	stp	x27, x28, [sp, #80]
   34d20:	mov	x24, x0
   34d24:	mov	x21, x1
   34d28:	str	x2, [sp, #96]
   34d2c:	str	w3, [sp, #108]
   34d30:	mov	x22, x4
   34d34:	mov	x23, x5
   34d38:	mov	x28, #0x0                   	// #0
   34d3c:	mov	x27, #0x0                   	// #0
   34d40:	add	x0, sp, #0xa0
   34d44:	str	x0, [sp, #120]
   34d48:	b	34f0c <__asan_internal_strnlen@@Base+0x17fc>
   34d4c:	mov	x4, x23
   34d50:	mov	x3, x22
   34d54:	mov	x2, x25
   34d58:	mov	x1, x19
   34d5c:	mov	x0, x24
   34d60:	bl	6890 <__asan_backtrace_free@plt>
   34d64:	mov	w1, #0x2f                  	// #47
   34d68:	mov	x0, x21
   34d6c:	bl	6780 <strrchr@plt>
   34d70:	cbz	x0, 34f38 <__asan_internal_strnlen@@Base+0x1828>
   34d74:	add	x0, x0, #0x1
   34d78:	sub	x19, x0, x21
   34d7c:	mov	x7, x23
   34d80:	mov	x6, x22
   34d84:	ldr	x5, [sp, #96]
   34d88:	mov	x4, #0x0                   	// #0
   34d8c:	adrp	x3, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   34d90:	add	x3, x3, #0x640
   34d94:	mov	x2, x19
   34d98:	mov	x1, x21
   34d9c:	mov	x0, x24
   34da0:	bl	34c0c <__asan_internal_strnlen@@Base+0x14fc>
   34da4:	mov	w20, w0
   34da8:	tbnz	w0, #31, 34f48 <__asan_internal_strnlen@@Base+0x1838>
   34dac:	cmp	x28, #0x0
   34db0:	ccmp	x27, #0x0, #0x4, ne  // ne = any
   34db4:	b.ne	34fcc <__asan_internal_strnlen@@Base+0x18bc>  // b.any
   34db8:	ldr	w0, [sp, #108]
   34dbc:	cbnz	w0, 34ff0 <__asan_internal_strnlen@@Base+0x18e0>
   34dc0:	mov	w0, w20
   34dc4:	ldp	x19, x20, [sp, #16]
   34dc8:	ldp	x21, x22, [sp, #32]
   34dcc:	ldp	x23, x24, [sp, #48]
   34dd0:	ldp	x25, x26, [sp, #64]
   34dd4:	ldp	x27, x28, [sp, #80]
   34dd8:	ldp	x29, x30, [sp], #288
   34ddc:	ret
   34de0:	mov	x4, x23
   34de4:	mov	x3, x22
   34de8:	mov	x2, x25
   34dec:	mov	x1, x19
   34df0:	mov	x0, x24
   34df4:	bl	6890 <__asan_backtrace_free@plt>
   34df8:	lsl	x25, x25, #1
   34dfc:	mov	x3, x23
   34e00:	mov	x2, x22
   34e04:	mov	x1, x25
   34e08:	mov	x0, x24
   34e0c:	bl	65b0 <__asan_backtrace_alloc@plt>
   34e10:	mov	x19, x0
   34e14:	cbz	x0, 34d64 <__asan_internal_strnlen@@Base+0x1654>
   34e18:	mov	x2, x25
   34e1c:	mov	x1, x0
   34e20:	mov	x0, x21
   34e24:	bl	63b0 <readlink@plt>
   34e28:	tbnz	x0, #63, 34d4c <__asan_internal_strnlen@@Base+0x163c>
   34e2c:	sub	x2, x25, #0x1
   34e30:	cmp	x2, x0
   34e34:	b.ls	34de0 <__asan_internal_strnlen@@Base+0x16d0>  // b.plast
   34e38:	strb	wzr, [x19, x0]
   34e3c:	ldrb	w0, [x19]
   34e40:	cmp	w0, #0x2f
   34e44:	b.eq	34ee4 <__asan_internal_strnlen@@Base+0x17d4>  // b.none
   34e48:	mov	w1, #0x2f                  	// #47
   34e4c:	mov	x0, x21
   34e50:	bl	6780 <strrchr@plt>
   34e54:	cbz	x0, 34ee4 <__asan_internal_strnlen@@Base+0x17d4>
   34e58:	add	x0, x0, #0x1
   34e5c:	sub	x20, x0, x21
   34e60:	mov	x0, x19
   34e64:	bl	64b0 <__asan_internal_strlen@plt>
   34e68:	add	x1, x20, #0x1
   34e6c:	add	x0, x1, x0
   34e70:	mov	x3, x23
   34e74:	mov	x2, x22
   34e78:	str	x0, [sp, #112]
   34e7c:	mov	x1, x0
   34e80:	mov	x0, x24
   34e84:	bl	65b0 <__asan_backtrace_alloc@plt>
   34e88:	mov	x26, x0
   34e8c:	cbz	x0, 350c0 <__asan_internal_strnlen@@Base+0x19b0>
   34e90:	mov	x2, x20
   34e94:	mov	x1, x21
   34e98:	bl	64a0 <__asan_internal_memcpy@plt>
   34e9c:	add	x20, x26, x20
   34ea0:	mov	x0, x19
   34ea4:	bl	64b0 <__asan_internal_strlen@plt>
   34ea8:	mov	x2, x0
   34eac:	mov	x1, x19
   34eb0:	mov	x0, x20
   34eb4:	bl	64a0 <__asan_internal_memcpy@plt>
   34eb8:	mov	x0, x19
   34ebc:	bl	64b0 <__asan_internal_strlen@plt>
   34ec0:	strb	wzr, [x20, x0]
   34ec4:	mov	x4, x23
   34ec8:	mov	x3, x22
   34ecc:	mov	x2, x25
   34ed0:	mov	x1, x19
   34ed4:	mov	x0, x24
   34ed8:	bl	6890 <__asan_backtrace_free@plt>
   34edc:	ldr	x25, [sp, #112]
   34ee0:	mov	x19, x26
   34ee4:	cbz	x27, 34f00 <__asan_internal_strnlen@@Base+0x17f0>
   34ee8:	mov	x4, x23
   34eec:	mov	x3, x22
   34ef0:	mov	x2, x28
   34ef4:	mov	x1, x27
   34ef8:	mov	x0, x24
   34efc:	bl	6890 <__asan_backtrace_free@plt>
   34f00:	mov	x28, x25
   34f04:	mov	x27, x19
   34f08:	mov	x21, x19
   34f0c:	ldr	x2, [sp, #120]
   34f10:	mov	x1, x21
   34f14:	mov	w0, #0x0                   	// #0
   34f18:	bl	68a0 <__lxstat@plt>
   34f1c:	tbnz	w0, #31, 34d64 <__asan_internal_strnlen@@Base+0x1654>
   34f20:	ldr	w0, [sp, #176]
   34f24:	and	w0, w0, #0xf000
   34f28:	cmp	w0, #0xa, lsl #12
   34f2c:	b.ne	34d64 <__asan_internal_strnlen@@Base+0x1654>  // b.any
   34f30:	mov	x25, #0x80                  	// #128
   34f34:	b	34dfc <__asan_internal_strnlen@@Base+0x16ec>
   34f38:	mov	x19, #0x0                   	// #0
   34f3c:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   34f40:	add	x21, x21, #0x640
   34f44:	b	34d7c <__asan_internal_strnlen@@Base+0x166c>
   34f48:	adrp	x20, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   34f4c:	add	x20, x20, #0x300
   34f50:	mov	x0, x20
   34f54:	bl	64b0 <__asan_internal_strlen@plt>
   34f58:	mov	x7, x23
   34f5c:	mov	x6, x22
   34f60:	ldr	x5, [sp, #96]
   34f64:	mov	x4, x0
   34f68:	mov	x3, x20
   34f6c:	mov	x2, x19
   34f70:	mov	x1, x21
   34f74:	mov	x0, x24
   34f78:	bl	34c0c <__asan_internal_strnlen@@Base+0x14fc>
   34f7c:	mov	w20, w0
   34f80:	tbz	w0, #31, 34dac <__asan_internal_strnlen@@Base+0x169c>
   34f84:	adrp	x20, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   34f88:	add	x20, x20, #0x308
   34f8c:	mov	x0, x20
   34f90:	bl	64b0 <__asan_internal_strlen@plt>
   34f94:	mov	x7, x23
   34f98:	mov	x6, x22
   34f9c:	ldr	x5, [sp, #96]
   34fa0:	mov	x4, x19
   34fa4:	mov	x3, x21
   34fa8:	mov	x2, x0
   34fac:	mov	x1, x20
   34fb0:	mov	x0, x24
   34fb4:	bl	34c0c <__asan_internal_strnlen@@Base+0x14fc>
   34fb8:	cmp	w0, #0x0
   34fbc:	csinv	w20, w0, wzr, ge  // ge = tcont
   34fc0:	cmp	x27, #0x0
   34fc4:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   34fc8:	b.eq	34fe4 <__asan_internal_strnlen@@Base+0x18d4>  // b.none
   34fcc:	mov	x4, x23
   34fd0:	mov	x3, x22
   34fd4:	mov	x2, x28
   34fd8:	mov	x1, x27
   34fdc:	mov	x0, x24
   34fe0:	bl	6890 <__asan_backtrace_free@plt>
   34fe4:	tbz	w20, #31, 34db8 <__asan_internal_strnlen@@Base+0x16a8>
   34fe8:	mov	w20, #0xffffffff            	// #-1
   34fec:	b	34dc0 <__asan_internal_strnlen@@Base+0x16b0>
   34ff0:	add	x2, sp, #0xa0
   34ff4:	mov	w1, w20
   34ff8:	mov	w0, #0x0                   	// #0
   34ffc:	bl	6360 <__fxstat@plt>
   35000:	tbnz	w0, #31, 35090 <__asan_internal_strnlen@@Base+0x1980>
   35004:	add	x6, sp, #0x88
   35008:	mov	x5, x23
   3500c:	mov	x4, x22
   35010:	ldr	x3, [sp, #208]
   35014:	mov	x2, #0x0                   	// #0
   35018:	mov	w1, w20
   3501c:	mov	x0, x24
   35020:	bl	67b0 <__asan_backtrace_get_view@plt>
   35024:	cbz	w0, 350a8 <__asan_internal_strnlen@@Base+0x1998>
   35028:	ldr	x1, [sp, #136]
   3502c:	ldr	x3, [sp, #208]
   35030:	add	x3, x1, x3
   35034:	cmp	x1, x3
   35038:	b.cs	350d8 <__asan_internal_strnlen@@Base+0x19c8>  // b.hs, b.nlast
   3503c:	mov	w19, #0xffffffff            	// #-1
   35040:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35044:	add	x2, x2, #0x510
   35048:	add	x2, x2, #0x4e0
   3504c:	ldrb	w0, [x1], #1
   35050:	eor	w0, w0, w19
   35054:	and	x0, x0, #0xff
   35058:	ldr	w0, [x2, x0, lsl #2]
   3505c:	eor	w19, w0, w19, lsr #8
   35060:	cmp	x3, x1
   35064:	b.ne	3504c <__asan_internal_strnlen@@Base+0x193c>  // b.any
   35068:	mov	x3, x23
   3506c:	mov	x2, x22
   35070:	add	x1, sp, #0x88
   35074:	mov	x0, x24
   35078:	bl	6430 <__asan_backtrace_release_view@plt>
   3507c:	mvn	w19, w19
   35080:	ldr	w0, [sp, #108]
   35084:	cmp	w0, w19
   35088:	b.eq	34dc0 <__asan_internal_strnlen@@Base+0x16b0>  // b.none
   3508c:	b	350a8 <__asan_internal_strnlen@@Base+0x1998>
   35090:	bl	6790 <__errno_location@plt>
   35094:	ldr	w2, [x0]
   35098:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   3509c:	add	x1, x1, #0x318
   350a0:	mov	x0, x23
   350a4:	blr	x22
   350a8:	mov	x2, x23
   350ac:	mov	x1, x22
   350b0:	mov	w0, w20
   350b4:	bl	6960 <__asan_backtrace_close@plt>
   350b8:	mov	w20, #0xffffffff            	// #-1
   350bc:	b	34dc0 <__asan_internal_strnlen@@Base+0x16b0>
   350c0:	cmp	x28, #0x0
   350c4:	ccmp	x27, #0x0, #0x4, ne  // ne = any
   350c8:	mov	w20, #0xffffffff            	// #-1
   350cc:	b.eq	34dc0 <__asan_internal_strnlen@@Base+0x16b0>  // b.none
   350d0:	mov	w20, #0xffffffff            	// #-1
   350d4:	b	34fcc <__asan_internal_strnlen@@Base+0x18bc>
   350d8:	mov	x3, x23
   350dc:	mov	x2, x22
   350e0:	add	x1, sp, #0x88
   350e4:	mov	x0, x24
   350e8:	bl	6430 <__asan_backtrace_release_view@plt>
   350ec:	b	350a8 <__asan_internal_strnlen@@Base+0x1998>
   350f0:	sub	sp, sp, #0x420
   350f4:	stp	x29, x30, [sp, #80]
   350f8:	add	x29, sp, #0x50
   350fc:	stp	x19, x20, [sp, #96]
   35100:	stp	x21, x22, [sp, #112]
   35104:	stp	x23, x24, [sp, #128]
   35108:	stp	x25, x26, [sp, #144]
   3510c:	stp	x27, x28, [sp, #160]
   35110:	mov	x21, x0
   35114:	str	x1, [sp, #208]
   35118:	mov	w23, w2
   3511c:	str	x3, [sp, #184]
   35120:	mov	x19, x4
   35124:	mov	x20, x5
   35128:	str	x6, [sp, #192]
   3512c:	str	x7, [sp, #200]
   35130:	ldr	w0, [sp, #1080]
   35134:	cbnz	w0, 35144 <__asan_internal_strnlen@@Base+0x1a34>
   35138:	str	wzr, [x7]
   3513c:	ldr	x0, [sp, #1056]
   35140:	str	wzr, [x0]
   35144:	add	x6, sp, #0x408
   35148:	mov	x5, x20
   3514c:	mov	x4, x19
   35150:	mov	x3, #0x40                  	// #64
   35154:	mov	x2, #0x0                   	// #0
   35158:	mov	w1, w23
   3515c:	mov	x0, x21
   35160:	bl	67b0 <__asan_backtrace_get_view@plt>
   35164:	mov	w22, w0
   35168:	mov	w26, w0
   3516c:	cbnz	w0, 351e8 <__asan_internal_strnlen@@Base+0x1ad8>
   35170:	mov	x24, #0x0                   	// #0
   35174:	mov	w27, #0x0                   	// #0
   35178:	mov	w25, #0x0                   	// #0
   3517c:	str	wzr, [sp, #176]
   35180:	mov	w28, #0x0                   	// #0
   35184:	cbnz	w28, 36254 <__asan_internal_strnlen@@Base+0x2b44>
   35188:	cbnz	w22, 3626c <__asan_internal_strnlen@@Base+0x2b5c>
   3518c:	cbnz	w25, 36284 <__asan_internal_strnlen@@Base+0x2b74>
   35190:	cbnz	w27, 3629c <__asan_internal_strnlen@@Base+0x2b8c>
   35194:	ldr	w0, [sp, #176]
   35198:	cbnz	w0, 362b4 <__asan_internal_strnlen@@Base+0x2ba4>
   3519c:	cbnz	w26, 362cc <__asan_internal_strnlen@@Base+0x2bbc>
   351a0:	cbz	x24, 351b8 <__asan_internal_strnlen@@Base+0x1aa8>
   351a4:	mov	x3, x20
   351a8:	mov	x2, x19
   351ac:	add	x1, x24, #0x18
   351b0:	mov	x0, x21
   351b4:	bl	6430 <__asan_backtrace_release_view@plt>
   351b8:	mov	w25, #0x0                   	// #0
   351bc:	cmn	w23, #0x1
   351c0:	b.ne	362e4 <__asan_internal_strnlen@@Base+0x2bd4>  // b.any
   351c4:	mov	w0, w25
   351c8:	ldp	x19, x20, [sp, #96]
   351cc:	ldp	x21, x22, [sp, #112]
   351d0:	ldp	x23, x24, [sp, #128]
   351d4:	ldp	x25, x26, [sp, #144]
   351d8:	ldp	x27, x28, [sp, #160]
   351dc:	ldp	x29, x30, [sp, #80]
   351e0:	add	sp, sp, #0x420
   351e4:	ret
   351e8:	mov	x2, #0x40                  	// #64
   351ec:	ldr	x1, [sp, #1032]
   351f0:	add	x0, sp, #0x3c8
   351f4:	bl	64a0 <__asan_internal_memcpy@plt>
   351f8:	mov	x3, x20
   351fc:	mov	x2, x19
   35200:	add	x1, sp, #0x408
   35204:	mov	x0, x21
   35208:	bl	6430 <__asan_backtrace_release_view@plt>
   3520c:	mov	w0, #0x457f                	// #17791
   35210:	movk	w0, #0x464c, lsl #16
   35214:	ldr	w1, [sp, #968]
   35218:	cmp	w1, w0
   3521c:	b.eq	35240 <__asan_internal_strnlen@@Base+0x1b30>  // b.none
   35220:	mov	w2, #0x0                   	// #0
   35224:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35228:	add	x1, x1, #0x320
   3522c:	mov	x0, x20
   35230:	blr	x19
   35234:	mov	w26, #0x0                   	// #0
   35238:	mov	w22, #0x0                   	// #0
   3523c:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   35240:	ldrb	w0, [sp, #974]
   35244:	cmp	w0, #0x1
   35248:	b.eq	3526c <__asan_internal_strnlen@@Base+0x1b5c>  // b.none
   3524c:	mov	w2, #0x0                   	// #0
   35250:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35254:	add	x1, x1, #0x340
   35258:	mov	x0, x20
   3525c:	blr	x19
   35260:	mov	w26, #0x0                   	// #0
   35264:	mov	w22, #0x0                   	// #0
   35268:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   3526c:	ldrb	w0, [sp, #972]
   35270:	cmp	w0, #0x2
   35274:	b.eq	35298 <__asan_internal_strnlen@@Base+0x1b88>  // b.none
   35278:	mov	w2, #0x0                   	// #0
   3527c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35280:	add	x1, x1, #0x370
   35284:	mov	x0, x20
   35288:	blr	x19
   3528c:	mov	w26, #0x0                   	// #0
   35290:	mov	w22, #0x0                   	// #0
   35294:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   35298:	ldrb	w0, [sp, #973]
   3529c:	sub	w0, w0, #0x1
   352a0:	and	w0, w0, #0xff
   352a4:	cmp	w0, #0x1
   352a8:	b.hi	353a4 <__asan_internal_strnlen@@Base+0x1c94>  // b.pmore
   352ac:	ldr	w0, [sp, #1072]
   352b0:	cbz	w0, 352c0 <__asan_internal_strnlen@@Base+0x1bb0>
   352b4:	ldrh	w0, [sp, #984]
   352b8:	cmp	w0, #0x3
   352bc:	b.eq	362f8 <__asan_internal_strnlen@@Base+0x2be8>  // b.none
   352c0:	ldr	x25, [sp, #1008]
   352c4:	ldrh	w0, [sp, #1028]
   352c8:	str	w0, [sp, #216]
   352cc:	ldrh	w24, [sp, #1030]
   352d0:	cmp	w0, #0x0
   352d4:	mov	w0, #0xffff                	// #65535
   352d8:	ccmp	w24, w0, #0x4, ne  // ne = any
   352dc:	ccmp	x25, #0x0, #0x4, eq  // eq = none
   352e0:	b.ne	353c4 <__asan_internal_strnlen@@Base+0x1cb4>  // b.any
   352e4:	ldr	w27, [sp, #216]
   352e8:	sub	w3, w27, #0x1
   352ec:	add	x6, sp, #0x3b0
   352f0:	mov	x5, x20
   352f4:	mov	x4, x19
   352f8:	lsl	x3, x3, #6
   352fc:	add	x2, x25, #0x40
   35300:	mov	w1, w23
   35304:	mov	x0, x21
   35308:	bl	67b0 <__asan_backtrace_get_view@plt>
   3530c:	mov	w22, w0
   35310:	mov	w26, w0
   35314:	cbz	w0, 35170 <__asan_internal_strnlen@@Base+0x1a60>
   35318:	ldr	x22, [sp, #944]
   3531c:	str	x22, [sp, #304]
   35320:	sub	w0, w24, #0x1
   35324:	add	x0, x22, x0, lsl #6
   35328:	ldr	x1, [x0, #32]
   3532c:	str	x1, [sp, #232]
   35330:	add	x6, sp, #0x398
   35334:	mov	x5, x20
   35338:	mov	x4, x19
   3533c:	mov	x3, x1
   35340:	ldr	x2, [x0, #24]
   35344:	mov	w1, w23
   35348:	mov	x0, x21
   3534c:	bl	67b0 <__asan_backtrace_get_view@plt>
   35350:	mov	w26, w0
   35354:	cbnz	w0, 35448 <__asan_internal_strnlen@@Base+0x1d38>
   35358:	mov	w27, w0
   3535c:	mov	w25, w0
   35360:	str	w0, [sp, #176]
   35364:	mov	w22, w0
   35368:	mov	w28, w0
   3536c:	mov	x24, #0x0                   	// #0
   35370:	mov	x3, x20
   35374:	mov	x2, x19
   35378:	add	x1, sp, #0x3b0
   3537c:	mov	x0, x21
   35380:	bl	6430 <__asan_backtrace_release_view@plt>
   35384:	cbz	w26, 35184 <__asan_internal_strnlen@@Base+0x1a74>
   35388:	mov	x3, x20
   3538c:	mov	x2, x19
   35390:	add	x1, sp, #0x398
   35394:	mov	x0, x21
   35398:	bl	6430 <__asan_backtrace_release_view@plt>
   3539c:	mov	w26, #0x0                   	// #0
   353a0:	b	35184 <__asan_internal_strnlen@@Base+0x1a74>
   353a4:	mov	w2, #0x0                   	// #0
   353a8:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   353ac:	add	x1, x1, #0x398
   353b0:	mov	x0, x20
   353b4:	blr	x19
   353b8:	mov	w26, #0x0                   	// #0
   353bc:	mov	w22, #0x0                   	// #0
   353c0:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   353c4:	add	x6, sp, #0x178
   353c8:	mov	x5, x20
   353cc:	mov	x4, x19
   353d0:	mov	x3, #0x8                   	// #8
   353d4:	mov	x2, x25
   353d8:	mov	w1, w23
   353dc:	mov	x0, x21
   353e0:	bl	67b0 <__asan_backtrace_get_view@plt>
   353e4:	mov	w22, w0
   353e8:	mov	w26, w0
   353ec:	cbz	w0, 35170 <__asan_internal_strnlen@@Base+0x1a60>
   353f0:	ldr	x0, [sp, #376]
   353f4:	ldr	w1, [sp, #216]
   353f8:	cbnz	w1, 35428 <__asan_internal_strnlen@@Base+0x1d18>
   353fc:	ldr	w1, [x0, #32]
   35400:	str	w1, [sp, #216]
   35404:	mov	w1, #0xffff                	// #65535
   35408:	cmp	w24, w1
   3540c:	b.eq	35428 <__asan_internal_strnlen@@Base+0x1d18>  // b.none
   35410:	mov	x3, x20
   35414:	mov	x2, x19
   35418:	add	x1, sp, #0x178
   3541c:	mov	x0, x21
   35420:	bl	6430 <__asan_backtrace_release_view@plt>
   35424:	b	352e4 <__asan_internal_strnlen@@Base+0x1bd4>
   35428:	ldr	w24, [x0, #40]
   3542c:	ldr	w0, [sp, #216]
   35430:	cmp	w24, w0
   35434:	sub	w0, w24, #0x100
   35438:	mov	w1, #0xffff                	// #65535
   3543c:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
   35440:	csel	w24, w0, w24, hi  // hi = pmore
   35444:	b	35410 <__asan_internal_strnlen@@Base+0x1d00>
   35448:	ldr	x0, [sp, #920]
   3544c:	str	x0, [sp, #240]
   35450:	mov	x2, #0x140                 	// #320
   35454:	mov	w1, #0x0                   	// #0
   35458:	add	x0, sp, #0x258
   3545c:	bl	6530 <__asan_internal_memset@plt>
   35460:	cmp	w27, #0x1
   35464:	b.ls	35b44 <__asan_internal_strnlen@@Base+0x2434>  // b.plast
   35468:	mov	x26, x22
   3546c:	mov	x24, #0x0                   	// #0
   35470:	str	wzr, [sp, #344]
   35474:	str	xzr, [sp, #328]
   35478:	str	xzr, [sp, #288]
   3547c:	mov	w27, #0x0                   	// #0
   35480:	str	wzr, [sp, #324]
   35484:	str	xzr, [sp, #312]
   35488:	mov	w25, #0x0                   	// #0
   3548c:	str	wzr, [sp, #348]
   35490:	str	xzr, [sp, #336]
   35494:	str	wzr, [sp, #176]
   35498:	mov	w22, #0x1                   	// #1
   3549c:	str	wzr, [sp, #248]
   354a0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0x24150>
   354a4:	add	x1, x0, #0xc00
   354a8:	add	x0, sp, #0x258
   354ac:	str	x0, [sp, #256]
   354b0:	add	x0, sp, #0x198
   354b4:	str	x0, [sp, #352]
   354b8:	add	x0, sp, #0x1b0
   354bc:	str	x0, [sp, #360]
   354c0:	str	w27, [sp, #224]
   354c4:	str	x24, [sp, #296]
   354c8:	str	x21, [sp, #264]
   354cc:	str	w23, [sp, #320]
   354d0:	str	x19, [sp, #272]
   354d4:	str	x20, [sp, #280]
   354d8:	ldr	w28, [sp, #1080]
   354dc:	mov	x23, x1
   354e0:	b	3559c <__asan_internal_strnlen@@Base+0x1e8c>
   354e4:	str	w22, [sp, #248]
   354e8:	b	355b4 <__asan_internal_strnlen@@Base+0x1ea4>
   354ec:	ldr	w27, [sp, #224]
   354f0:	ldr	x24, [sp, #296]
   354f4:	ldr	x21, [sp, #264]
   354f8:	ldr	w23, [sp, #320]
   354fc:	ldr	x19, [sp, #272]
   35500:	ldr	x20, [sp, #280]
   35504:	mov	w2, #0x0                   	// #0
   35508:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   3550c:	add	x1, x1, #0x3c0
   35510:	mov	x0, x20
   35514:	blr	x19
   35518:	mov	w22, #0x0                   	// #0
   3551c:	mov	w28, #0x0                   	// #0
   35520:	mov	w26, #0x1                   	// #1
   35524:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   35528:	sbfiz	x21, x19, #5, #32
   3552c:	ldr	x0, [x24, #24]
   35530:	ldr	x1, [sp, #256]
   35534:	str	x0, [x1, x21]
   35538:	ldr	x1, [x24, #32]
   3553c:	add	x0, sp, #0x260
   35540:	str	x1, [x0, x21]
   35544:	ldr	x0, [x24, #8]
   35548:	ubfx	w0, w0, #11, #1
   3554c:	add	x1, sp, #0x270
   35550:	str	w0, [x1, x21]
   35554:	cmp	w28, #0x0
   35558:	ldr	x0, [sp, #1088]
   3555c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   35560:	ldr	w0, [sp, #176]
   35564:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   35568:	b.eq	355f0 <__asan_internal_strnlen@@Base+0x1ee0>  // b.none
   3556c:	orr	w19, w28, w25
   35570:	cbz	w19, 356e4 <__asan_internal_strnlen@@Base+0x1fd4>
   35574:	ldr	w0, [sp, #224]
   35578:	cbz	w0, 3575c <__asan_internal_strnlen@@Base+0x204c>
   3557c:	ldrh	w0, [sp, #986]
   35580:	cmp	w0, #0x15
   35584:	b.eq	357d4 <__asan_internal_strnlen@@Base+0x20c4>  // b.none
   35588:	add	w22, w22, #0x1
   3558c:	add	x26, x26, #0x40
   35590:	ldr	w0, [sp, #216]
   35594:	cmp	w0, w22
   35598:	b.eq	35844 <__asan_internal_strnlen@@Base+0x2134>  // b.none
   3559c:	mov	x24, x26
   355a0:	ldr	w0, [x26, #4]
   355a4:	cmp	w0, #0x2
   355a8:	b.eq	354e4 <__asan_internal_strnlen@@Base+0x1dd4>  // b.none
   355ac:	cmp	w0, #0xb
   355b0:	csel	w27, w27, w22, ne  // ne = any
   355b4:	ldr	w20, [x24]
   355b8:	ldr	x0, [sp, #232]
   355bc:	cmp	x20, x0
   355c0:	b.cs	354ec <__asan_internal_strnlen@@Base+0x1ddc>  // b.hs, b.nlast
   355c4:	ldr	x0, [sp, #240]
   355c8:	add	x20, x0, x20
   355cc:	mov	x19, #0x0                   	// #0
   355d0:	ldr	x1, [x23, x19, lsl #3]
   355d4:	mov	x0, x20
   355d8:	bl	67f0 <__asan_internal_strcmp@plt>
   355dc:	cbz	w0, 35528 <__asan_internal_strnlen@@Base+0x1e18>
   355e0:	add	x19, x19, #0x1
   355e4:	cmp	x19, #0xa
   355e8:	b.ne	355d0 <__asan_internal_strnlen@@Base+0x1ec0>  // b.any
   355ec:	b	35554 <__asan_internal_strnlen@@Base+0x1e44>
   355f0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   355f4:	add	x1, x1, #0x3e0
   355f8:	mov	x0, x20
   355fc:	bl	67f0 <__asan_internal_strcmp@plt>
   35600:	mov	w19, w0
   35604:	str	wzr, [sp, #176]
   35608:	cbnz	w0, 3556c <__asan_internal_strnlen@@Base+0x1e5c>
   3560c:	add	x6, sp, #0x210
   35610:	ldr	x5, [sp, #280]
   35614:	ldr	x4, [sp, #272]
   35618:	ldr	x3, [x24, #32]
   3561c:	ldr	x2, [x24, #24]
   35620:	ldr	w1, [sp, #320]
   35624:	ldr	x0, [sp, #264]
   35628:	bl	67b0 <__asan_backtrace_get_view@plt>
   3562c:	cbz	w0, 36300 <__asan_internal_strnlen@@Base+0x2bf0>
   35630:	ldr	x21, [sp, #528]
   35634:	ldr	w0, [x21, #8]
   35638:	cmp	w0, #0x3
   3563c:	b.eq	35678 <__asan_internal_strnlen@@Base+0x1f68>  // b.none
   35640:	ldr	w0, [sp, #1096]
   35644:	cbz	w0, 356d8 <__asan_internal_strnlen@@Base+0x1fc8>
   35648:	ldr	w0, [sp, #348]
   3564c:	ldr	w1, [sp, #1096]
   35650:	cmp	w0, w1
   35654:	b.ne	3632c <__asan_internal_strnlen@@Base+0x2c1c>  // b.any
   35658:	mov	w2, w0
   3565c:	ldr	x1, [sp, #1088]
   35660:	ldr	x0, [sp, #336]
   35664:	bl	68f0 <__asan_internal_memcmp@plt>
   35668:	cbnz	w0, 3635c <__asan_internal_strnlen@@Base+0x2c4c>
   3566c:	mov	w0, #0x1                   	// #1
   35670:	str	w0, [sp, #176]
   35674:	b	3556c <__asan_internal_strnlen@@Base+0x1e5c>
   35678:	ldr	w0, [x21]
   3567c:	cmp	w0, #0x4
   35680:	b.ne	35640 <__asan_internal_strnlen@@Base+0x1f30>  // b.any
   35684:	add	x0, x21, #0xc
   35688:	mov	x2, #0x4                   	// #4
   3568c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35690:	add	x1, x1, #0x3f8
   35694:	str	x0, [sp, #176]
   35698:	bl	6830 <__asan_internal_strncmp@plt>
   3569c:	cbnz	w0, 35640 <__asan_internal_strnlen@@Base+0x1f30>
   356a0:	ldr	w0, [x21]
   356a4:	add	w0, w0, #0x3
   356a8:	and	w0, w0, #0xfffffffc
   356ac:	ldr	w2, [x21, #4]
   356b0:	add	w1, w2, #0xc
   356b4:	add	w1, w1, w0
   356b8:	ldr	x3, [x24, #32]
   356bc:	cmp	x3, x1
   356c0:	b.hi	35640 <__asan_internal_strnlen@@Base+0x1f30>  // b.pmore
   356c4:	ldr	x1, [sp, #176]
   356c8:	add	x0, x1, w0, uxtw
   356cc:	str	x0, [sp, #336]
   356d0:	str	w2, [sp, #348]
   356d4:	b	35640 <__asan_internal_strnlen@@Base+0x1f30>
   356d8:	mov	w0, #0x1                   	// #1
   356dc:	str	w0, [sp, #176]
   356e0:	b	3556c <__asan_internal_strnlen@@Base+0x1e5c>
   356e4:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   356e8:	add	x1, x1, #0x400
   356ec:	mov	x0, x20
   356f0:	bl	67f0 <__asan_internal_strcmp@plt>
   356f4:	mov	w25, w19
   356f8:	cbnz	w0, 35574 <__asan_internal_strnlen@@Base+0x1e64>
   356fc:	add	x6, sp, #0x1f8
   35700:	ldr	x5, [sp, #280]
   35704:	ldr	x4, [sp, #272]
   35708:	ldr	x3, [x24, #32]
   3570c:	ldr	x2, [x24, #24]
   35710:	ldr	w1, [sp, #320]
   35714:	ldr	x0, [sp, #264]
   35718:	bl	67b0 <__asan_backtrace_get_view@plt>
   3571c:	cbz	w0, 3638c <__asan_internal_strnlen@@Base+0x2c7c>
   35720:	ldr	x19, [sp, #504]
   35724:	ldr	x1, [x24, #32]
   35728:	mov	x0, x19
   3572c:	bl	6800 <__asan_internal_strnlen@plt>
   35730:	add	x0, x0, #0x3
   35734:	and	x0, x0, #0xfffffffffffffffc
   35738:	add	x2, x0, #0x4
   3573c:	ldr	x1, [x24, #32]
   35740:	mov	w25, #0x1                   	// #1
   35744:	cmp	x2, x1
   35748:	b.hi	35574 <__asan_internal_strnlen@@Base+0x1e64>  // b.pmore
   3574c:	ldr	w0, [x19, x0]
   35750:	str	w0, [sp, #324]
   35754:	str	x19, [sp, #312]
   35758:	b	35574 <__asan_internal_strnlen@@Base+0x1e64>
   3575c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35760:	add	x1, x1, #0x410
   35764:	mov	x0, x20
   35768:	bl	67f0 <__asan_internal_strcmp@plt>
   3576c:	cbnz	w0, 3557c <__asan_internal_strnlen@@Base+0x1e6c>
   35770:	add	x6, sp, #0x1e0
   35774:	ldr	x5, [sp, #280]
   35778:	ldr	x4, [sp, #272]
   3577c:	ldr	x3, [x24, #32]
   35780:	ldr	x2, [x24, #24]
   35784:	ldr	w1, [sp, #320]
   35788:	ldr	x0, [sp, #264]
   3578c:	bl	67b0 <__asan_backtrace_get_view@plt>
   35790:	cbz	w0, 363b8 <__asan_internal_strnlen@@Base+0x2ca8>
   35794:	ldr	x19, [sp, #480]
   35798:	str	x19, [sp, #288]
   3579c:	ldr	x1, [x24, #32]
   357a0:	mov	x0, x19
   357a4:	bl	6800 <__asan_internal_strnlen@plt>
   357a8:	ldr	x1, [x24, #32]
   357ac:	mov	w2, #0x1                   	// #1
   357b0:	str	w2, [sp, #224]
   357b4:	cmp	x1, x0
   357b8:	b.ls	3557c <__asan_internal_strnlen@@Base+0x1e6c>  // b.plast
   357bc:	add	x0, x0, #0x1
   357c0:	add	x2, x19, x0
   357c4:	str	x2, [sp, #328]
   357c8:	sub	w0, w1, w0
   357cc:	str	w0, [sp, #344]
   357d0:	b	3557c <__asan_internal_strnlen@@Base+0x1e6c>
   357d4:	ldr	w0, [sp, #1016]
   357d8:	tbnz	w0, #1, 35588 <__asan_internal_strnlen@@Base+0x1e78>
   357dc:	ldr	w0, [x24, #4]
   357e0:	cmp	w0, #0x1
   357e4:	b.ne	35588 <__asan_internal_strnlen@@Base+0x1e78>  // b.any
   357e8:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   357ec:	add	x1, x1, #0x428
   357f0:	mov	x0, x20
   357f4:	bl	67f0 <__asan_internal_strcmp@plt>
   357f8:	cbnz	w0, 35588 <__asan_internal_strnlen@@Base+0x1e78>
   357fc:	ldr	x6, [sp, #360]
   35800:	ldr	x5, [sp, #280]
   35804:	ldr	x4, [sp, #272]
   35808:	ldr	x3, [x24, #32]
   3580c:	ldr	x2, [x24, #24]
   35810:	ldr	w1, [sp, #320]
   35814:	ldr	x0, [sp, #264]
   35818:	bl	67b0 <__asan_backtrace_get_view@plt>
   3581c:	cbz	w0, 363e0 <__asan_internal_strnlen@@Base+0x2cd0>
   35820:	ldr	x0, [x24, #16]
   35824:	str	x0, [sp, #408]
   35828:	ldr	x0, [sp, #432]
   3582c:	str	x0, [sp, #416]
   35830:	ldr	x0, [x24, #32]
   35834:	str	x0, [sp, #424]
   35838:	ldr	x0, [sp, #352]
   3583c:	str	x0, [sp, #296]
   35840:	b	35588 <__asan_internal_strnlen@@Base+0x1e78>
   35844:	mov	w1, w27
   35848:	ldr	w27, [sp, #224]
   3584c:	ldr	x24, [sp, #296]
   35850:	ldr	x21, [sp, #264]
   35854:	ldr	w23, [sp, #320]
   35858:	ldr	x19, [sp, #272]
   3585c:	ldr	x20, [sp, #280]
   35860:	ldr	w0, [sp, #248]
   35864:	cmp	w0, #0x0
   35868:	csel	w0, w0, w1, ne  // ne = any
   3586c:	cmp	w0, #0x0
   35870:	ldr	w1, [sp, #1080]
   35874:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   35878:	b.ne	35b78 <__asan_internal_strnlen@@Base+0x2468>  // b.any
   3587c:	sub	w26, w0, #0x1
   35880:	ldr	x0, [sp, #304]
   35884:	add	x26, x0, x26, lsl #6
   35888:	ldr	w22, [x26, #40]
   3588c:	ldr	w0, [sp, #216]
   35890:	cmp	w0, w22
   35894:	b.hi	358bc <__asan_internal_strnlen@@Base+0x21ac>  // b.pmore
   35898:	mov	w2, #0x0                   	// #0
   3589c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   358a0:	add	x1, x1, #0x430
   358a4:	mov	x0, x20
   358a8:	blr	x19
   358ac:	mov	w22, #0x0                   	// #0
   358b0:	mov	w28, #0x0                   	// #0
   358b4:	mov	w26, #0x1                   	// #1
   358b8:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   358bc:	add	x6, sp, #0x240
   358c0:	mov	x5, x20
   358c4:	mov	x4, x19
   358c8:	ldr	x3, [x26, #32]
   358cc:	ldr	x2, [x26, #24]
   358d0:	mov	w1, w23
   358d4:	mov	x0, x21
   358d8:	bl	67b0 <__asan_backtrace_get_view@plt>
   358dc:	mov	w28, w0
   358e0:	cbnz	w0, 358f0 <__asan_internal_strnlen@@Base+0x21e0>
   358e4:	mov	w22, w0
   358e8:	mov	w26, #0x1                   	// #1
   358ec:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   358f0:	sub	w22, w22, #0x1
   358f4:	ldr	x0, [sp, #304]
   358f8:	add	x0, x0, x22, lsl #6
   358fc:	add	x6, sp, #0x228
   35900:	mov	x5, x20
   35904:	mov	x4, x19
   35908:	ldr	x3, [x0, #32]
   3590c:	str	x0, [sp, #216]
   35910:	ldr	x2, [x0, #24]
   35914:	mov	w1, w23
   35918:	mov	x0, x21
   3591c:	bl	67b0 <__asan_backtrace_get_view@plt>
   35920:	mov	w22, w0
   35924:	cbnz	w0, 35934 <__asan_internal_strnlen@@Base+0x2224>
   35928:	mov	w28, #0x1                   	// #1
   3592c:	mov	w26, w28
   35930:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   35934:	mov	x3, x20
   35938:	mov	x2, x19
   3593c:	mov	x1, #0x18                  	// #24
   35940:	mov	x0, x21
   35944:	bl	65b0 <__asan_backtrace_alloc@plt>
   35948:	mov	x28, x0
   3594c:	cbz	x0, 36408 <__asan_internal_strnlen@@Base+0x2cf8>
   35950:	ldr	x22, [sp, #576]
   35954:	ldr	x0, [x26, #32]
   35958:	ldr	x2, [sp, #552]
   3595c:	str	x2, [sp, #232]
   35960:	ldr	x1, [sp, #216]
   35964:	ldr	x1, [x1, #32]
   35968:	str	x1, [sp, #240]
   3596c:	mov	x1, #0x18                  	// #24
   35970:	udiv	x1, x0, x1
   35974:	str	x1, [sp, #216]
   35978:	cmp	x0, #0x17
   3597c:	b.ls	364f0 <__asan_internal_strnlen@@Base+0x2de0>  // b.plast
   35980:	mov	x1, x22
   35984:	mov	x2, #0x0                   	// #0
   35988:	mov	x3, #0x0                   	// #0
   3598c:	b	359a4 <__asan_internal_strnlen@@Base+0x2294>
   35990:	add	x2, x2, #0x1
   35994:	add	x1, x1, #0x18
   35998:	ldr	x0, [sp, #216]
   3599c:	cmp	x0, x2
   359a0:	b.ls	359c8 <__asan_internal_strnlen@@Base+0x22b8>  // b.plast
   359a4:	ldrb	w0, [x1, #4]
   359a8:	and	w0, w0, #0xf
   359ac:	sub	w0, w0, #0x1
   359b0:	cmp	w0, #0x1
   359b4:	b.hi	35990 <__asan_internal_strnlen@@Base+0x2280>  // b.pmore
   359b8:	ldrh	w0, [x1, #6]
   359bc:	cbz	w0, 35990 <__asan_internal_strnlen@@Base+0x2280>
   359c0:	add	x3, x3, #0x1
   359c4:	b	35990 <__asan_internal_strnlen@@Base+0x2280>
   359c8:	str	x3, [sp, #224]
   359cc:	mov	x0, #0x18                  	// #24
   359d0:	mul	x0, x3, x0
   359d4:	str	x0, [sp, #248]
   359d8:	mov	x3, x20
   359dc:	mov	x2, x19
   359e0:	mov	x1, x0
   359e4:	mov	x0, x21
   359e8:	bl	65b0 <__asan_backtrace_alloc@plt>
   359ec:	mov	x26, x0
   359f0:	cbz	x0, 35a30 <__asan_internal_strnlen@@Base+0x2320>
   359f4:	mov	x1, #0x0                   	// #0
   359f8:	mov	w2, #0x0                   	// #0
   359fc:	ldr	x6, [sp, #216]
   35a00:	b	35a84 <__asan_internal_strnlen@@Base+0x2374>
   35a04:	mov	w2, #0x0                   	// #0
   35a08:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35a0c:	add	x1, x1, #0x460
   35a10:	mov	x0, x20
   35a14:	blr	x19
   35a18:	mov	x4, x20
   35a1c:	mov	x3, x19
   35a20:	ldr	x2, [sp, #248]
   35a24:	mov	x1, x26
   35a28:	mov	x0, x21
   35a2c:	bl	6890 <__asan_backtrace_free@plt>
   35a30:	mov	x4, x20
   35a34:	mov	x3, x19
   35a38:	mov	x2, #0x18                  	// #24
   35a3c:	mov	x1, x28
   35a40:	mov	x0, x21
   35a44:	bl	6890 <__asan_backtrace_free@plt>
   35a48:	mov	w22, #0x1                   	// #1
   35a4c:	mov	w28, w22
   35a50:	mov	w26, w22
   35a54:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   35a58:	ldr	x0, [x22, #8]
   35a5c:	ldr	x3, [sp, #184]
   35a60:	add	x0, x3, x0
   35a64:	str	x0, [x5, #8]
   35a68:	ldr	x0, [x22, #16]
   35a6c:	str	x0, [x5, #16]
   35a70:	add	w2, w2, #0x1
   35a74:	add	x1, x1, #0x1
   35a78:	add	x22, x22, #0x18
   35a7c:	cmp	x6, x1
   35a80:	b.ls	36510 <__asan_internal_strnlen@@Base+0x2e00>  // b.plast
   35a84:	ldrb	w0, [x22, #4]
   35a88:	and	w0, w0, #0xf
   35a8c:	sub	w0, w0, #0x1
   35a90:	cmp	w0, #0x1
   35a94:	b.hi	35a74 <__asan_internal_strnlen@@Base+0x2364>  // b.pmore
   35a98:	ldrh	w0, [x22, #6]
   35a9c:	cbz	w0, 35a74 <__asan_internal_strnlen@@Base+0x2364>
   35aa0:	ldr	w3, [x22]
   35aa4:	ldr	x0, [sp, #240]
   35aa8:	cmp	x0, x3
   35aac:	b.ls	35a04 <__asan_internal_strnlen@@Base+0x22f4>  // b.plast
   35ab0:	ubfiz	x0, x2, #1, #32
   35ab4:	add	x0, x0, w2, uxtw
   35ab8:	add	x5, x26, x0, lsl #3
   35abc:	ldr	x4, [sp, #232]
   35ac0:	add	x3, x4, x3
   35ac4:	str	x3, [x26, x0, lsl #3]
   35ac8:	cbz	x24, 35a58 <__asan_internal_strnlen@@Base+0x2348>
   35acc:	ldr	x0, [x22, #8]
   35ad0:	ldr	x3, [x24]
   35ad4:	cmp	x0, x3
   35ad8:	b.cc	35a58 <__asan_internal_strnlen@@Base+0x2348>  // b.lo, b.ul, b.last
   35adc:	ldr	x4, [x24, #16]
   35ae0:	add	x4, x3, x4
   35ae4:	cmp	x0, x4
   35ae8:	b.cs	35a58 <__asan_internal_strnlen@@Base+0x2348>  // b.hs, b.nlast
   35aec:	sub	x0, x0, x3
   35af0:	ldr	x3, [x24, #8]
   35af4:	ldr	x0, [x3, x0]
   35af8:	b	35a5c <__asan_internal_strnlen@@Base+0x234c>
   35afc:	add	x1, x21, #0x30
   35b00:	ldr	x0, [x21, #48]
   35b04:	b	35b10 <__asan_internal_strnlen@@Base+0x2400>
   35b08:	mov	x1, x0
   35b0c:	ldr	x0, [x0]
   35b10:	cbnz	x0, 35b08 <__asan_internal_strnlen@@Base+0x23f8>
   35b14:	str	x28, [x1]
   35b18:	mov	w22, #0x1                   	// #1
   35b1c:	b	35b7c <__asan_internal_strnlen@@Base+0x246c>
   35b20:	ldxr	x1, [x0]
   35b24:	cbnz	x1, 35b30 <__asan_internal_strnlen@@Base+0x2420>
   35b28:	stlxr	w3, x28, [x0]
   35b2c:	cbnz	w3, 35b20 <__asan_internal_strnlen@@Base+0x2410>
   35b30:	cmp	x1, #0x0
   35b34:	dmb	ish
   35b38:	b.ne	36564 <__asan_internal_strnlen@@Base+0x2e54>  // b.any
   35b3c:	mov	w22, #0x1                   	// #1
   35b40:	b	35b7c <__asan_internal_strnlen@@Base+0x246c>
   35b44:	mov	x24, #0x0                   	// #0
   35b48:	str	wzr, [sp, #344]
   35b4c:	str	xzr, [sp, #328]
   35b50:	str	xzr, [sp, #288]
   35b54:	mov	w27, #0x0                   	// #0
   35b58:	str	wzr, [sp, #324]
   35b5c:	str	xzr, [sp, #312]
   35b60:	mov	w25, #0x0                   	// #0
   35b64:	str	wzr, [sp, #348]
   35b68:	str	xzr, [sp, #336]
   35b6c:	str	wzr, [sp, #176]
   35b70:	mov	w22, #0x0                   	// #0
   35b74:	b	35b7c <__asan_internal_strnlen@@Base+0x246c>
   35b78:	mov	w22, #0x0                   	// #0
   35b7c:	mov	x3, x20
   35b80:	mov	x2, x19
   35b84:	add	x1, sp, #0x3b0
   35b88:	mov	x0, x21
   35b8c:	bl	6430 <__asan_backtrace_release_view@plt>
   35b90:	mov	x3, x20
   35b94:	mov	x2, x19
   35b98:	add	x1, sp, #0x398
   35b9c:	mov	x0, x21
   35ba0:	bl	6430 <__asan_backtrace_release_view@plt>
   35ba4:	ldr	x0, [sp, #336]
   35ba8:	cbz	x0, 35ccc <__asan_internal_strnlen@@Base+0x25bc>
   35bac:	ldr	w28, [sp, #348]
   35bb0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35bb4:	add	x0, x0, #0x488
   35bb8:	bl	64b0 <__asan_internal_strlen@plt>
   35bbc:	mov	x26, x0
   35bc0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35bc4:	add	x0, x0, #0x4a8
   35bc8:	bl	64b0 <__asan_internal_strlen@plt>
   35bcc:	str	x0, [sp, #224]
   35bd0:	add	x1, x28, #0x1
   35bd4:	add	x0, x26, x0
   35bd8:	add	x1, x0, x1, lsl #1
   35bdc:	str	x1, [sp, #232]
   35be0:	mov	x3, x20
   35be4:	mov	x2, x19
   35be8:	mov	x0, x21
   35bec:	bl	65b0 <__asan_backtrace_alloc@plt>
   35bf0:	str	x0, [sp, #216]
   35bf4:	cbz	x0, 35ccc <__asan_internal_strnlen@@Base+0x25bc>
   35bf8:	mov	x2, x26
   35bfc:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35c00:	add	x1, x1, #0x488
   35c04:	bl	64a0 <__asan_internal_memcpy@plt>
   35c08:	ldr	x0, [sp, #216]
   35c0c:	add	x26, x0, x26
   35c10:	cbz	x28, 35c78 <__asan_internal_strnlen@@Base+0x2568>
   35c14:	mov	x1, #0x0                   	// #0
   35c18:	mov	w5, #0x2f                  	// #47
   35c1c:	ldr	x6, [sp, #336]
   35c20:	b	35c38 <__asan_internal_strnlen@@Base+0x2528>
   35c24:	strb	w5, [x26, #2]
   35c28:	add	x26, x26, #0x3
   35c2c:	add	x1, x1, #0x1
   35c30:	cmp	x28, x1
   35c34:	b.eq	35c78 <__asan_internal_strnlen@@Base+0x2568>  // b.none
   35c38:	ldrb	w0, [x6, x1]
   35c3c:	lsr	w3, w0, #4
   35c40:	add	w4, w3, #0x30
   35c44:	add	w2, w3, #0x57
   35c48:	cmp	w3, #0x9
   35c4c:	csel	w2, w2, w4, hi  // hi = pmore
   35c50:	strb	w2, [x26]
   35c54:	and	w0, w0, #0xf
   35c58:	add	w3, w0, #0x30
   35c5c:	add	w2, w0, #0x57
   35c60:	cmp	w0, #0x9
   35c64:	csel	w0, w2, w3, hi  // hi = pmore
   35c68:	strb	w0, [x26, #1]
   35c6c:	cbz	x1, 35c24 <__asan_internal_strnlen@@Base+0x2514>
   35c70:	add	x26, x26, #0x2
   35c74:	b	35c2c <__asan_internal_strnlen@@Base+0x251c>
   35c78:	ldr	x28, [sp, #224]
   35c7c:	mov	x2, x28
   35c80:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   35c84:	add	x1, x1, #0x4a8
   35c88:	mov	x0, x26
   35c8c:	bl	64a0 <__asan_internal_memcpy@plt>
   35c90:	strb	wzr, [x26, x28]
   35c94:	add	x3, sp, #0x178
   35c98:	mov	x2, x20
   35c9c:	mov	x1, x19
   35ca0:	ldr	x28, [sp, #216]
   35ca4:	mov	x0, x28
   35ca8:	bl	6a30 <__asan_backtrace_open@plt>
   35cac:	mov	w26, w0
   35cb0:	mov	x4, x20
   35cb4:	mov	x3, x19
   35cb8:	ldr	x2, [sp, #232]
   35cbc:	mov	x1, x28
   35cc0:	mov	x0, x21
   35cc4:	bl	6890 <__asan_backtrace_free@plt>
   35cc8:	tbz	w26, #31, 35d6c <__asan_internal_strnlen@@Base+0x265c>
   35ccc:	ldr	w0, [sp, #176]
   35cd0:	cbnz	w0, 35e30 <__asan_internal_strnlen@@Base+0x2720>
   35cd4:	cbz	x24, 35cec <__asan_internal_strnlen@@Base+0x25dc>
   35cd8:	mov	x3, x20
   35cdc:	mov	x2, x19
   35ce0:	add	x1, x24, #0x18
   35ce4:	mov	x0, x21
   35ce8:	bl	6430 <__asan_backtrace_release_view@plt>
   35cec:	ldr	x0, [sp, #312]
   35cf0:	cbz	x0, 35d18 <__asan_internal_strnlen@@Base+0x2608>
   35cf4:	mov	x5, x20
   35cf8:	mov	x4, x19
   35cfc:	ldr	w3, [sp, #324]
   35d00:	mov	x2, x0
   35d04:	ldr	x1, [sp, #208]
   35d08:	mov	x0, x21
   35d0c:	bl	34d04 <__asan_internal_strnlen@@Base+0x15f4>
   35d10:	mov	w24, w0
   35d14:	tbz	w0, #31, 35e48 <__asan_internal_strnlen@@Base+0x2738>
   35d18:	cbnz	w25, 35ef0 <__asan_internal_strnlen@@Base+0x27e0>
   35d1c:	str	xzr, [sp, #400]
   35d20:	ldr	x0, [sp, #288]
   35d24:	cbz	x0, 35d50 <__asan_internal_strnlen@@Base+0x2640>
   35d28:	mov	x5, x20
   35d2c:	mov	x4, x19
   35d30:	mov	w3, #0x0                   	// #0
   35d34:	mov	x2, x0
   35d38:	ldr	x25, [sp, #208]
   35d3c:	mov	x1, x25
   35d40:	mov	x0, x21
   35d44:	bl	34d04 <__asan_internal_strnlen@@Base+0x15f4>
   35d48:	mov	w24, w0
   35d4c:	tbz	w0, #31, 35f08 <__asan_internal_strnlen@@Base+0x27f8>
   35d50:	cbnz	w27, 35f88 <__asan_internal_strnlen@@Base+0x2878>
   35d54:	add	x24, sp, #0x258
   35d58:	add	x4, x24, #0x140
   35d5c:	mov	x0, x24
   35d60:	mov	x3, #0x0                   	// #0
   35d64:	mov	x25, #0x0                   	// #0
   35d68:	b	35fc0 <__asan_internal_strnlen@@Base+0x28b0>
   35d6c:	mov	x3, x20
   35d70:	mov	x2, x19
   35d74:	add	x1, sp, #0x210
   35d78:	mov	x0, x21
   35d7c:	bl	6430 <__asan_backtrace_release_view@plt>
   35d80:	cbnz	w25, 35dec <__asan_internal_strnlen@@Base+0x26dc>
   35d84:	cbnz	w27, 35e04 <__asan_internal_strnlen@@Base+0x26f4>
   35d88:	str	wzr, [sp, #40]
   35d8c:	str	xzr, [sp, #32]
   35d90:	mov	w0, #0x1                   	// #1
   35d94:	str	w0, [sp, #24]
   35d98:	str	wzr, [sp, #16]
   35d9c:	str	xzr, [sp, #8]
   35da0:	ldr	x0, [sp, #1056]
   35da4:	str	x0, [sp]
   35da8:	ldr	x7, [sp, #200]
   35dac:	ldr	x6, [sp, #192]
   35db0:	mov	x5, x20
   35db4:	mov	x4, x19
   35db8:	ldr	x3, [sp, #184]
   35dbc:	mov	w2, w26
   35dc0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   35dc4:	add	x1, x1, #0x640
   35dc8:	mov	x0, x21
   35dcc:	bl	350f0 <__asan_internal_strnlen@@Base+0x19e0>
   35dd0:	mov	w25, w0
   35dd4:	tbnz	w0, #31, 35e1c <__asan_internal_strnlen@@Base+0x270c>
   35dd8:	mov	x2, x20
   35ddc:	mov	x1, x19
   35de0:	mov	w0, w23
   35de4:	bl	6960 <__asan_backtrace_close@plt>
   35de8:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   35dec:	mov	x3, x20
   35df0:	mov	x2, x19
   35df4:	add	x1, sp, #0x1f8
   35df8:	mov	x0, x21
   35dfc:	bl	6430 <__asan_backtrace_release_view@plt>
   35e00:	b	35d84 <__asan_internal_strnlen@@Base+0x2674>
   35e04:	mov	x3, x20
   35e08:	mov	x2, x19
   35e0c:	add	x1, sp, #0x1e0
   35e10:	mov	x0, x21
   35e14:	bl	6430 <__asan_backtrace_release_view@plt>
   35e18:	b	35d88 <__asan_internal_strnlen@@Base+0x2678>
   35e1c:	mov	x2, x20
   35e20:	mov	x1, x19
   35e24:	mov	w0, w26
   35e28:	bl	6960 <__asan_backtrace_close@plt>
   35e2c:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   35e30:	mov	x3, x20
   35e34:	mov	x2, x19
   35e38:	add	x1, sp, #0x210
   35e3c:	mov	x0, x21
   35e40:	bl	6430 <__asan_backtrace_release_view@plt>
   35e44:	b	35cd4 <__asan_internal_strnlen@@Base+0x25c4>
   35e48:	mov	x3, x20
   35e4c:	mov	x2, x19
   35e50:	add	x1, sp, #0x1f8
   35e54:	mov	x0, x21
   35e58:	bl	6430 <__asan_backtrace_release_view@plt>
   35e5c:	cbnz	w27, 35ec4 <__asan_internal_strnlen@@Base+0x27b4>
   35e60:	str	wzr, [sp, #40]
   35e64:	str	xzr, [sp, #32]
   35e68:	mov	w0, #0x1                   	// #1
   35e6c:	str	w0, [sp, #24]
   35e70:	str	wzr, [sp, #16]
   35e74:	str	xzr, [sp, #8]
   35e78:	ldr	x0, [sp, #1056]
   35e7c:	str	x0, [sp]
   35e80:	ldr	x7, [sp, #200]
   35e84:	ldr	x6, [sp, #192]
   35e88:	mov	x5, x20
   35e8c:	mov	x4, x19
   35e90:	ldr	x3, [sp, #184]
   35e94:	mov	w2, w24
   35e98:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x7150>
   35e9c:	add	x1, x1, #0x640
   35ea0:	mov	x0, x21
   35ea4:	bl	350f0 <__asan_internal_strnlen@@Base+0x19e0>
   35ea8:	mov	w25, w0
   35eac:	tbnz	w0, #31, 35edc <__asan_internal_strnlen@@Base+0x27cc>
   35eb0:	mov	x2, x20
   35eb4:	mov	x1, x19
   35eb8:	mov	w0, w23
   35ebc:	bl	6960 <__asan_backtrace_close@plt>
   35ec0:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   35ec4:	mov	x3, x20
   35ec8:	mov	x2, x19
   35ecc:	add	x1, sp, #0x1e0
   35ed0:	mov	x0, x21
   35ed4:	bl	6430 <__asan_backtrace_release_view@plt>
   35ed8:	b	35e60 <__asan_internal_strnlen@@Base+0x2750>
   35edc:	mov	x2, x20
   35ee0:	mov	x1, x19
   35ee4:	mov	w0, w24
   35ee8:	bl	6960 <__asan_backtrace_close@plt>
   35eec:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   35ef0:	mov	x3, x20
   35ef4:	mov	x2, x19
   35ef8:	add	x1, sp, #0x1f8
   35efc:	mov	x0, x21
   35f00:	bl	6430 <__asan_backtrace_release_view@plt>
   35f04:	b	35d1c <__asan_internal_strnlen@@Base+0x260c>
   35f08:	ldr	w0, [sp, #344]
   35f0c:	str	w0, [sp, #40]
   35f10:	ldr	x0, [sp, #328]
   35f14:	str	x0, [sp, #32]
   35f18:	mov	w0, #0x1                   	// #1
   35f1c:	str	w0, [sp, #24]
   35f20:	str	wzr, [sp, #16]
   35f24:	add	x0, sp, #0x190
   35f28:	str	x0, [sp, #8]
   35f2c:	ldr	x0, [sp, #1056]
   35f30:	str	x0, [sp]
   35f34:	ldr	x7, [sp, #200]
   35f38:	ldr	x6, [sp, #192]
   35f3c:	mov	x5, x20
   35f40:	mov	x4, x19
   35f44:	ldr	x3, [sp, #184]
   35f48:	mov	w2, w24
   35f4c:	mov	x1, x25
   35f50:	mov	x0, x21
   35f54:	bl	350f0 <__asan_internal_strnlen@@Base+0x19e0>
   35f58:	mov	w25, w0
   35f5c:	mov	x3, x20
   35f60:	mov	x2, x19
   35f64:	add	x1, sp, #0x1e0
   35f68:	mov	x0, x21
   35f6c:	bl	6430 <__asan_backtrace_release_view@plt>
   35f70:	tbz	w25, #31, 35d54 <__asan_internal_strnlen@@Base+0x2644>
   35f74:	mov	x2, x20
   35f78:	mov	x1, x19
   35f7c:	mov	w0, w24
   35f80:	bl	6960 <__asan_backtrace_close@plt>
   35f84:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   35f88:	mov	x3, x20
   35f8c:	mov	x2, x19
   35f90:	add	x1, sp, #0x1e0
   35f94:	mov	x0, x21
   35f98:	bl	6430 <__asan_backtrace_release_view@plt>
   35f9c:	b	35d54 <__asan_internal_strnlen@@Base+0x2644>
   35fa0:	ldr	x25, [x2]
   35fa4:	ldr	x2, [x2]
   35fa8:	add	x1, x1, x2
   35fac:	cmp	x3, x1
   35fb0:	csel	x3, x3, x1, ge  // ge = tcont
   35fb4:	add	x0, x0, #0x20
   35fb8:	cmp	x4, x0
   35fbc:	b.eq	35fe0 <__asan_internal_strnlen@@Base+0x28d0>  // b.none
   35fc0:	mov	x2, x0
   35fc4:	ldr	x1, [x0, #8]
   35fc8:	cbz	x1, 35fb4 <__asan_internal_strnlen@@Base+0x28a4>
   35fcc:	cbz	x25, 35fa0 <__asan_internal_strnlen@@Base+0x2890>
   35fd0:	ldr	x5, [x0]
   35fd4:	cmp	x5, x25
   35fd8:	b.ge	35fa4 <__asan_internal_strnlen@@Base+0x2894>  // b.tcont
   35fdc:	b	35fa0 <__asan_internal_strnlen@@Base+0x2890>
   35fe0:	cmp	x25, #0x0
   35fe4:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   35fe8:	b.ne	3600c <__asan_internal_strnlen@@Base+0x28fc>  // b.any
   35fec:	mov	x2, x20
   35ff0:	mov	x1, x19
   35ff4:	mov	w0, w23
   35ff8:	bl	6960 <__asan_backtrace_close@plt>
   35ffc:	mov	w26, w0
   36000:	cbz	w0, 35170 <__asan_internal_strnlen@@Base+0x1a60>
   36004:	mov	w25, #0x1                   	// #1
   36008:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   3600c:	add	x6, sp, #0x1c8
   36010:	mov	x5, x20
   36014:	mov	x4, x19
   36018:	sub	x3, x3, x25
   3601c:	mov	x2, x25
   36020:	mov	w1, w23
   36024:	mov	x0, x21
   36028:	bl	67b0 <__asan_backtrace_get_view@plt>
   3602c:	mov	w26, w0
   36030:	cbz	w0, 35170 <__asan_internal_strnlen@@Base+0x1a60>
   36034:	mov	x2, x20
   36038:	mov	x1, x19
   3603c:	mov	w0, w23
   36040:	bl	6960 <__asan_backtrace_close@plt>
   36044:	cbz	w0, 36418 <__asan_internal_strnlen@@Base+0x2d08>
   36048:	ldr	x3, [sp, #456]
   3604c:	mov	x0, x24
   36050:	mov	w2, #0x1                   	// #1
   36054:	mov	w26, #0x0                   	// #0
   36058:	b	36090 <__asan_internal_strnlen@@Base+0x2980>
   3605c:	ldr	x1, [x0]
   36060:	sub	x1, x1, x25
   36064:	add	x1, x3, x1
   36068:	str	x1, [x0, #16]
   3606c:	sub	w1, w2, #0x1
   36070:	cmp	w1, #0x4
   36074:	b.hi	36080 <__asan_internal_strnlen@@Base+0x2970>  // b.pmore
   36078:	add	w26, w26, #0x1
   3607c:	b	36088 <__asan_internal_strnlen@@Base+0x2978>
   36080:	cmp	w2, #0x9
   36084:	b.hi	360a0 <__asan_internal_strnlen@@Base+0x2990>  // b.pmore
   36088:	add	x0, x0, #0x20
   3608c:	add	w2, w2, #0x1
   36090:	ldr	x1, [x0, #8]
   36094:	cbnz	x1, 3605c <__asan_internal_strnlen@@Base+0x294c>
   36098:	str	xzr, [x0, #16]
   3609c:	b	36080 <__asan_internal_strnlen@@Base+0x2970>
   360a0:	mov	x25, x24
   360a4:	mov	w28, #0x5                   	// #5
   360a8:	mov	x23, #0x0                   	// #0
   360ac:	add	x0, sp, #0x178
   360b0:	str	x0, [sp, #176]
   360b4:	add	x0, sp, #0x170
   360b8:	str	x0, [sp, #200]
   360bc:	b	36110 <__asan_internal_strnlen@@Base+0x2a00>
   360c0:	str	xzr, [sp, #368]
   360c4:	str	xzr, [sp, #376]
   360c8:	ldr	x7, [sp, #176]
   360cc:	ldr	x6, [sp, #200]
   360d0:	mov	x5, x20
   360d4:	mov	x4, x19
   360d8:	mov	x3, x23
   360dc:	ldr	x2, [x27, #168]
   360e0:	ldr	x1, [x27, #176]
   360e4:	mov	x0, x21
   360e8:	bl	34ac8 <__asan_internal_strnlen@@Base+0x13b8>
   360ec:	cbz	w0, 36144 <__asan_internal_strnlen@@Base+0x2a34>
   360f0:	ldr	x0, [sp, #368]
   360f4:	str	x0, [x27, #16]
   360f8:	ldr	x0, [sp, #376]
   360fc:	str	x0, [x27, #8]
   36100:	str	wzr, [x27, #24]
   36104:	add	x25, x25, #0x20
   36108:	subs	w28, w28, #0x1
   3610c:	b.eq	36150 <__asan_internal_strnlen@@Base+0x2a40>  // b.none
   36110:	mov	x27, x25
   36114:	ldr	x0, [x25, #8]
   36118:	cbnz	x0, 36104 <__asan_internal_strnlen@@Base+0x29f4>
   3611c:	ldr	x0, [x25, #168]
   36120:	cbz	x0, 36104 <__asan_internal_strnlen@@Base+0x29f4>
   36124:	cbnz	x23, 360c0 <__asan_internal_strnlen@@Base+0x29b0>
   36128:	mov	x3, x20
   3612c:	mov	x2, x19
   36130:	mov	x1, #0x13b4                	// #5044
   36134:	mov	x0, x21
   36138:	bl	65b0 <__asan_backtrace_alloc@plt>
   3613c:	mov	x23, x0
   36140:	cbnz	x0, 360c0 <__asan_internal_strnlen@@Base+0x29b0>
   36144:	mov	w26, #0x1                   	// #1
   36148:	mov	w23, #0xffffffff            	// #-1
   3614c:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   36150:	mov	w0, #0x5                   	// #5
   36154:	str	w0, [sp, #200]
   36158:	str	w22, [sp, #176]
   3615c:	b	36464 <__asan_internal_strnlen@@Base+0x2d54>
   36160:	mov	x3, x20
   36164:	mov	x2, x19
   36168:	mov	x1, #0x13b4                	// #5044
   3616c:	mov	x0, x21
   36170:	bl	65b0 <__asan_backtrace_alloc@plt>
   36174:	mov	x23, x0
   36178:	cbnz	x0, 3647c <__asan_internal_strnlen@@Base+0x2d6c>
   3617c:	ldr	w22, [sp, #176]
   36180:	mov	w26, #0x1                   	// #1
   36184:	mov	w23, #0xffffffff            	// #-1
   36188:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   3618c:	ldr	w22, [sp, #176]
   36190:	cbz	x23, 361ac <__asan_internal_strnlen@@Base+0x2a9c>
   36194:	mov	x4, x20
   36198:	mov	x3, x19
   3619c:	mov	x2, #0x13b4                	// #5044
   361a0:	mov	x1, x23
   361a4:	mov	x0, x21
   361a8:	bl	6890 <__asan_backtrace_free@plt>
   361ac:	cbz	w26, 3623c <__asan_internal_strnlen@@Base+0x2b2c>
   361b0:	mov	w26, #0x1                   	// #1
   361b4:	ldr	x0, [sp, #1064]
   361b8:	str	x0, [sp, #72]
   361bc:	ldr	x0, [sp, #192]
   361c0:	str	x0, [sp, #64]
   361c4:	str	x20, [sp, #56]
   361c8:	str	x19, [sp, #48]
   361cc:	ldr	x0, [sp, #400]
   361d0:	str	x0, [sp, #40]
   361d4:	ldrb	w0, [sp, #973]
   361d8:	cmp	w0, #0x2
   361dc:	cset	w0, eq  // eq = none
   361e0:	str	w0, [sp, #32]
   361e4:	ldr	x0, [sp, #736]
   361e8:	str	x0, [sp, #24]
   361ec:	ldr	x0, [sp, #744]
   361f0:	str	x0, [sp, #16]
   361f4:	ldr	x0, [sp, #704]
   361f8:	str	x0, [sp, #8]
   361fc:	ldr	x0, [sp, #712]
   36200:	str	x0, [sp]
   36204:	ldr	x7, [sp, #672]
   36208:	ldr	x6, [sp, #680]
   3620c:	ldr	x5, [sp, #640]
   36210:	ldr	x4, [sp, #648]
   36214:	ldr	x3, [sp, #608]
   36218:	ldr	x2, [sp, #616]
   3621c:	ldr	x1, [sp, #184]
   36220:	mov	x0, x21
   36224:	bl	6440 <__asan_backtrace_dwarf_add@plt>
   36228:	cbz	w0, 36430 <__asan_internal_strnlen@@Base+0x2d20>
   3622c:	mov	w25, #0x1                   	// #1
   36230:	ldr	x0, [sp, #1056]
   36234:	str	w25, [x0]
   36238:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   3623c:	mov	x3, x20
   36240:	mov	x2, x19
   36244:	add	x1, sp, #0x1c8
   36248:	mov	x0, x21
   3624c:	bl	6430 <__asan_backtrace_release_view@plt>
   36250:	b	361b4 <__asan_internal_strnlen@@Base+0x2aa4>
   36254:	mov	x3, x20
   36258:	mov	x2, x19
   3625c:	add	x1, sp, #0x240
   36260:	mov	x0, x21
   36264:	bl	6430 <__asan_backtrace_release_view@plt>
   36268:	b	35188 <__asan_internal_strnlen@@Base+0x1a78>
   3626c:	mov	x3, x20
   36270:	mov	x2, x19
   36274:	add	x1, sp, #0x228
   36278:	mov	x0, x21
   3627c:	bl	6430 <__asan_backtrace_release_view@plt>
   36280:	b	3518c <__asan_internal_strnlen@@Base+0x1a7c>
   36284:	mov	x3, x20
   36288:	mov	x2, x19
   3628c:	add	x1, sp, #0x1f8
   36290:	mov	x0, x21
   36294:	bl	6430 <__asan_backtrace_release_view@plt>
   36298:	b	35190 <__asan_internal_strnlen@@Base+0x1a80>
   3629c:	mov	x3, x20
   362a0:	mov	x2, x19
   362a4:	add	x1, sp, #0x1e0
   362a8:	mov	x0, x21
   362ac:	bl	6430 <__asan_backtrace_release_view@plt>
   362b0:	b	35194 <__asan_internal_strnlen@@Base+0x1a84>
   362b4:	mov	x3, x20
   362b8:	mov	x2, x19
   362bc:	add	x1, sp, #0x210
   362c0:	mov	x0, x21
   362c4:	bl	6430 <__asan_backtrace_release_view@plt>
   362c8:	b	3519c <__asan_internal_strnlen@@Base+0x1a8c>
   362cc:	mov	x3, x20
   362d0:	mov	x2, x19
   362d4:	add	x1, sp, #0x1c8
   362d8:	mov	x0, x21
   362dc:	bl	6430 <__asan_backtrace_release_view@plt>
   362e0:	b	351a0 <__asan_internal_strnlen@@Base+0x1a90>
   362e4:	mov	x2, x20
   362e8:	mov	x1, x19
   362ec:	mov	w0, w23
   362f0:	bl	6960 <__asan_backtrace_close@plt>
   362f4:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   362f8:	mov	w25, #0xffffffff            	// #-1
   362fc:	b	351c4 <__asan_internal_strnlen@@Base+0x1ab4>
   36300:	mov	w22, w0
   36304:	ldr	w27, [sp, #224]
   36308:	ldr	x24, [sp, #296]
   3630c:	ldr	x21, [sp, #264]
   36310:	ldr	w23, [sp, #320]
   36314:	ldr	x19, [sp, #272]
   36318:	ldr	x20, [sp, #280]
   3631c:	str	w0, [sp, #176]
   36320:	mov	w28, w0
   36324:	mov	w26, #0x1                   	// #1
   36328:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   3632c:	mov	w28, w19
   36330:	ldr	w27, [sp, #224]
   36334:	ldr	x24, [sp, #296]
   36338:	ldr	x21, [sp, #264]
   3633c:	ldr	w23, [sp, #320]
   36340:	ldr	x19, [sp, #272]
   36344:	ldr	x20, [sp, #280]
   36348:	mov	w22, w28
   3634c:	mov	w0, #0x1                   	// #1
   36350:	str	w0, [sp, #176]
   36354:	mov	w26, w0
   36358:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   3635c:	mov	w28, w19
   36360:	ldr	w27, [sp, #224]
   36364:	ldr	x24, [sp, #296]
   36368:	ldr	x21, [sp, #264]
   3636c:	ldr	w23, [sp, #320]
   36370:	ldr	x19, [sp, #272]
   36374:	ldr	x20, [sp, #280]
   36378:	mov	w22, w28
   3637c:	mov	w0, #0x1                   	// #1
   36380:	str	w0, [sp, #176]
   36384:	mov	w26, w0
   36388:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   3638c:	mov	w28, w0
   36390:	ldr	w27, [sp, #224]
   36394:	ldr	x24, [sp, #296]
   36398:	ldr	x21, [sp, #264]
   3639c:	ldr	w23, [sp, #320]
   363a0:	ldr	x19, [sp, #272]
   363a4:	ldr	x20, [sp, #280]
   363a8:	mov	w25, w0
   363ac:	mov	w22, w0
   363b0:	mov	w26, #0x1                   	// #1
   363b4:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   363b8:	mov	w28, w0
   363bc:	ldr	x24, [sp, #296]
   363c0:	ldr	x21, [sp, #264]
   363c4:	ldr	w23, [sp, #320]
   363c8:	ldr	x19, [sp, #272]
   363cc:	ldr	x20, [sp, #280]
   363d0:	mov	w27, w0
   363d4:	mov	w22, w0
   363d8:	mov	w26, #0x1                   	// #1
   363dc:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   363e0:	mov	w28, w0
   363e4:	ldr	w27, [sp, #224]
   363e8:	ldr	x24, [sp, #296]
   363ec:	ldr	x21, [sp, #264]
   363f0:	ldr	w23, [sp, #320]
   363f4:	ldr	x19, [sp, #272]
   363f8:	ldr	x20, [sp, #280]
   363fc:	mov	w22, w0
   36400:	mov	w26, #0x1                   	// #1
   36404:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   36408:	mov	w22, #0x1                   	// #1
   3640c:	mov	w28, w22
   36410:	mov	w26, w22
   36414:	b	35370 <__asan_internal_strnlen@@Base+0x1c60>
   36418:	mov	w26, #0x1                   	// #1
   3641c:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   36420:	ldr	w22, [sp, #176]
   36424:	mov	w26, #0x1                   	// #1
   36428:	mov	w23, #0xffffffff            	// #-1
   3642c:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   36430:	mov	w23, #0xffffffff            	// #-1
   36434:	b	35170 <__asan_internal_strnlen@@Base+0x1a60>
   36438:	mov	x0, #0x0                   	// #0
   3643c:	mov	x25, #0x0                   	// #0
   36440:	str	x25, [x27, #16]
   36444:	str	x0, [x27, #8]
   36448:	str	wzr, [x27, #24]
   3644c:	sub	w26, w26, #0x1
   36450:	add	x24, x24, #0x20
   36454:	ldr	w0, [sp, #200]
   36458:	subs	w0, w0, #0x1
   3645c:	str	w0, [sp, #200]
   36460:	b.eq	3618c <__asan_internal_strnlen@@Base+0x2a7c>  // b.none
   36464:	mov	x27, x24
   36468:	ldr	x0, [x24, #8]
   3646c:	cbz	x0, 36450 <__asan_internal_strnlen@@Base+0x2d40>
   36470:	ldr	w0, [x24, #24]
   36474:	cbz	w0, 36450 <__asan_internal_strnlen@@Base+0x2d40>
   36478:	cbz	x23, 36160 <__asan_internal_strnlen@@Base+0x2a50>
   3647c:	ldr	x22, [x27, #8]
   36480:	cmp	x22, #0x17
   36484:	b.ls	36438 <__asan_internal_strnlen@@Base+0x2d28>  // b.plast
   36488:	ldr	x28, [x27, #16]
   3648c:	ldr	w0, [x28]
   36490:	cmp	w0, #0x1
   36494:	b.ne	364d8 <__asan_internal_strnlen@@Base+0x2dc8>  // b.any
   36498:	mov	x3, x20
   3649c:	mov	x2, x19
   364a0:	ldr	x1, [x28, #8]
   364a4:	mov	x0, x21
   364a8:	bl	65b0 <__asan_backtrace_alloc@plt>
   364ac:	mov	x25, x0
   364b0:	cbz	x0, 36420 <__asan_internal_strnlen@@Base+0x2d10>
   364b4:	ldr	x4, [x28, #8]
   364b8:	mov	x3, x0
   364bc:	mov	x2, x23
   364c0:	sub	x1, x22, #0x18
   364c4:	add	x0, x28, #0x18
   364c8:	bl	33c28 <__asan_internal_strnlen@@Base+0x518>
   364cc:	cbz	w0, 364e4 <__asan_internal_strnlen@@Base+0x2dd4>
   364d0:	ldr	x0, [x28, #8]
   364d4:	b	36440 <__asan_internal_strnlen@@Base+0x2d30>
   364d8:	mov	x0, #0x0                   	// #0
   364dc:	mov	x25, #0x0                   	// #0
   364e0:	b	36440 <__asan_internal_strnlen@@Base+0x2d30>
   364e4:	mov	x0, #0x0                   	// #0
   364e8:	mov	x25, #0x0                   	// #0
   364ec:	b	36440 <__asan_internal_strnlen@@Base+0x2d30>
   364f0:	mov	x3, x20
   364f4:	mov	x2, x19
   364f8:	mov	x1, #0x0                   	// #0
   364fc:	mov	x0, x21
   36500:	bl	65b0 <__asan_backtrace_alloc@plt>
   36504:	mov	x26, x0
   36508:	cbz	x0, 35a30 <__asan_internal_strnlen@@Base+0x2320>
   3650c:	str	xzr, [sp, #224]
   36510:	adrp	x3, 33000 <__asan_cplus_demangle_print_callback@@Base>
   36514:	add	x3, x3, #0x770
   36518:	mov	x2, #0x18                  	// #24
   3651c:	ldr	x22, [sp, #224]
   36520:	mov	x1, x22
   36524:	mov	x0, x26
   36528:	bl	63a0 <__asan_backtrace_qsort@plt>
   3652c:	str	xzr, [x28]
   36530:	str	x26, [x28, #8]
   36534:	str	x22, [x28, #16]
   36538:	mov	x3, x20
   3653c:	mov	x2, x19
   36540:	add	x1, sp, #0x240
   36544:	mov	x0, x21
   36548:	bl	6430 <__asan_backtrace_release_view@plt>
   3654c:	mov	w0, #0x1                   	// #1
   36550:	ldr	x1, [sp, #200]
   36554:	str	w0, [x1]
   36558:	ldr	w0, [x21, #8]
   3655c:	cbz	w0, 35afc <__asan_internal_strnlen@@Base+0x23ec>
   36560:	add	x2, x21, #0x30
   36564:	mov	x0, x2
   36568:	ldar	x1, [x0]
   3656c:	cbz	x1, 35b20 <__asan_internal_strnlen@@Base+0x2410>
   36570:	mov	x0, x1
   36574:	b	36568 <__asan_internal_strnlen@@Base+0x2e58>
   36578:	sub	sp, sp, #0x80
   3657c:	stp	x29, x30, [sp, #48]
   36580:	add	x29, sp, #0x30
   36584:	stp	x19, x20, [sp, #64]
   36588:	str	x21, [sp, #80]
   3658c:	mov	x20, x0
   36590:	mov	x19, x2
   36594:	ldr	x1, [x0, #8]
   36598:	cbz	x1, 365a4 <__asan_internal_strnlen@@Base+0x2e94>
   3659c:	ldrb	w0, [x1]
   365a0:	cbnz	w0, 36634 <__asan_internal_strnlen@@Base+0x2f24>
   365a4:	ldr	w2, [x19, #56]
   365a8:	cmn	w2, #0x1
   365ac:	b.eq	3661c <__asan_internal_strnlen@@Base+0x2f0c>  // b.none
   365b0:	ldr	x21, [x19, #48]
   365b4:	mov	w0, #0xffffffff            	// #-1
   365b8:	str	w0, [x19, #56]
   365bc:	str	wzr, [sp, #40]
   365c0:	str	xzr, [sp, #32]
   365c4:	str	wzr, [sp, #24]
   365c8:	str	wzr, [sp, #16]
   365cc:	str	xzr, [sp, #8]
   365d0:	add	x0, sp, #0x6c
   365d4:	str	x0, [sp]
   365d8:	ldr	x7, [x19, #32]
   365dc:	add	x6, sp, #0x70
   365e0:	ldr	x5, [x19, #16]
   365e4:	ldr	x4, [x19, #8]
   365e8:	ldr	x3, [x20]
   365ec:	mov	x1, x21
   365f0:	ldr	x0, [x19]
   365f4:	bl	350f0 <__asan_internal_strnlen@@Base+0x19e0>
   365f8:	cbz	w0, 3661c <__asan_internal_strnlen@@Base+0x2f0c>
   365fc:	ldr	w0, [sp, #108]
   36600:	cbz	w0, 3661c <__asan_internal_strnlen@@Base+0x2f0c>
   36604:	ldr	x0, [x19, #40]
   36608:	mov	w1, #0x1                   	// #1
   3660c:	str	w1, [x0]
   36610:	ldr	x0, [x19, #24]
   36614:	ldr	x1, [sp, #112]
   36618:	str	x1, [x0]
   3661c:	mov	w0, #0x0                   	// #0
   36620:	ldp	x19, x20, [sp, #64]
   36624:	ldr	x21, [sp, #80]
   36628:	ldp	x29, x30, [sp, #48]
   3662c:	add	sp, sp, #0x80
   36630:	ret
   36634:	ldr	w0, [x2, #56]
   36638:	cmn	w0, #0x1
   3663c:	b.ne	36664 <__asan_internal_strnlen@@Base+0x2f54>  // b.any
   36640:	ldr	x21, [x20, #8]
   36644:	add	x3, sp, #0x7c
   36648:	ldr	x2, [x19, #16]
   3664c:	ldr	x1, [x19, #8]
   36650:	mov	x0, x21
   36654:	bl	6a30 <__asan_backtrace_open@plt>
   36658:	mov	w2, w0
   3665c:	tbz	w0, #31, 365bc <__asan_internal_strnlen@@Base+0x2eac>
   36660:	b	3661c <__asan_internal_strnlen@@Base+0x2f0c>
   36664:	ldr	x2, [x2, #16]
   36668:	ldr	x1, [x19, #8]
   3666c:	bl	6960 <__asan_backtrace_close@plt>
   36670:	mov	w0, #0xffffffff            	// #-1
   36674:	str	w0, [x19, #56]
   36678:	b	36640 <__asan_internal_strnlen@@Base+0x2f30>
   3667c:	stp	x29, x30, [sp, #-16]!
   36680:	mov	x29, sp
   36684:	mov	x3, x0
   36688:	mov	x10, x2
   3668c:	mov	x0, x4
   36690:	ldr	w2, [x3, #8]
   36694:	cbnz	w2, 366ec <__asan_internal_strnlen@@Base+0x2fdc>
   36698:	ldr	x4, [x3, #48]
   3669c:	cbz	x4, 36750 <__asan_internal_strnlen@@Base+0x3040>
   366a0:	mov	x9, #0x0                   	// #0
   366a4:	b	36784 <__asan_internal_strnlen@@Base+0x3074>
   366a8:	mov	x8, x6
   366ac:	cmp	x8, x7
   366b0:	b.ls	3677c <__asan_internal_strnlen@@Base+0x306c>  // b.plast
   366b4:	add	x5, x8, x7
   366b8:	lsr	x6, x5, #1
   366bc:	and	x5, x5, #0xfffffffffffffffe
   366c0:	add	x5, x5, x6
   366c4:	add	x5, x2, x5, lsl #3
   366c8:	ldr	x3, [x5, #8]
   366cc:	cmp	x3, x1
   366d0:	b.hi	366a8 <__asan_internal_strnlen@@Base+0x2f98>  // b.pmore
   366d4:	ldr	x7, [x5, #16]
   366d8:	add	x3, x3, x7
   366dc:	cmp	x3, x1
   366e0:	b.hi	36764 <__asan_internal_strnlen@@Base+0x3054>  // b.pmore
   366e4:	add	x7, x6, #0x1
   366e8:	b	366ac <__asan_internal_strnlen@@Base+0x2f9c>
   366ec:	add	x2, x3, #0x30
   366f0:	mov	x4, #0x0                   	// #0
   366f4:	ldar	x2, [x2]
   366f8:	cbz	x2, 36750 <__asan_internal_strnlen@@Base+0x3040>
   366fc:	ldr	x9, [x2, #8]
   36700:	ldr	x8, [x2, #16]
   36704:	mov	x7, x4
   36708:	b	36710 <__asan_internal_strnlen@@Base+0x3000>
   3670c:	mov	x8, x6
   36710:	cmp	x8, x7
   36714:	b.ls	366f4 <__asan_internal_strnlen@@Base+0x2fe4>  // b.plast
   36718:	add	x5, x8, x7
   3671c:	lsr	x6, x5, #1
   36720:	and	x5, x5, #0xfffffffffffffffe
   36724:	add	x5, x5, x6
   36728:	add	x5, x9, x5, lsl #3
   3672c:	ldr	x3, [x5, #8]
   36730:	cmp	x3, x1
   36734:	b.hi	3670c <__asan_internal_strnlen@@Base+0x2ffc>  // b.pmore
   36738:	ldr	x7, [x5, #16]
   3673c:	add	x3, x3, x7
   36740:	cmp	x3, x1
   36744:	b.hi	36764 <__asan_internal_strnlen@@Base+0x3054>  // b.pmore
   36748:	add	x7, x6, #0x1
   3674c:	b	36710 <__asan_internal_strnlen@@Base+0x3000>
   36750:	mov	x4, #0x0                   	// #0
   36754:	mov	x3, #0x0                   	// #0
   36758:	mov	x2, #0x0                   	// #0
   3675c:	blr	x10
   36760:	b	36774 <__asan_internal_strnlen@@Base+0x3064>
   36764:	ldr	x4, [x5, #16]
   36768:	ldr	x3, [x5, #8]
   3676c:	ldr	x2, [x5]
   36770:	blr	x10
   36774:	ldp	x29, x30, [sp], #16
   36778:	ret
   3677c:	ldr	x4, [x4]
   36780:	cbz	x4, 36750 <__asan_internal_strnlen@@Base+0x3040>
   36784:	ldr	x2, [x4, #8]
   36788:	ldr	x8, [x4, #16]
   3678c:	mov	x7, x9
   36790:	b	366ac <__asan_internal_strnlen@@Base+0x2f9c>

0000000000036794 <__asan_backtrace_uncompress_zdebug@@Base>:
   36794:	stp	x29, x30, [sp, #-80]!
   36798:	mov	x29, sp
   3679c:	stp	x19, x20, [sp, #16]
   367a0:	stp	x21, x22, [sp, #32]
   367a4:	stp	x23, x24, [sp, #48]
   367a8:	stp	x25, x26, [sp, #64]
   367ac:	mov	x22, x0
   367b0:	mov	x23, x1
   367b4:	mov	x24, x2
   367b8:	mov	x20, x3
   367bc:	mov	x21, x4
   367c0:	mov	x25, x5
   367c4:	mov	x26, x6
   367c8:	mov	x3, x4
   367cc:	mov	x2, x20
   367d0:	mov	x1, #0x13b4                	// #5044
   367d4:	bl	65b0 <__asan_backtrace_alloc@plt>
   367d8:	cbz	x0, 3683c <__asan_backtrace_uncompress_zdebug@@Base+0xa8>
   367dc:	mov	x19, x0
   367e0:	mov	x7, x26
   367e4:	mov	x6, x25
   367e8:	mov	x5, x21
   367ec:	mov	x4, x20
   367f0:	mov	x3, x0
   367f4:	mov	x2, x24
   367f8:	mov	x1, x23
   367fc:	mov	x0, x22
   36800:	bl	34ac8 <__asan_internal_strnlen@@Base+0x13b8>
   36804:	mov	w23, w0
   36808:	mov	x4, x21
   3680c:	mov	x3, x20
   36810:	mov	x2, #0x13b4                	// #5044
   36814:	mov	x1, x19
   36818:	mov	x0, x22
   3681c:	bl	6890 <__asan_backtrace_free@plt>
   36820:	mov	w0, w23
   36824:	ldp	x19, x20, [sp, #16]
   36828:	ldp	x21, x22, [sp, #32]
   3682c:	ldp	x23, x24, [sp, #48]
   36830:	ldp	x25, x26, [sp, #64]
   36834:	ldp	x29, x30, [sp], #80
   36838:	ret
   3683c:	mov	w23, #0x0                   	// #0
   36840:	b	36820 <__asan_backtrace_uncompress_zdebug@@Base+0x8c>

0000000000036844 <__asan_backtrace_initialize@@Base>:
   36844:	sub	sp, sp, #0xc0
   36848:	stp	x29, x30, [sp, #48]
   3684c:	add	x29, sp, #0x30
   36850:	stp	x19, x20, [sp, #64]
   36854:	stp	x21, x22, [sp, #80]
   36858:	stp	x23, x24, [sp, #96]
   3685c:	mov	x19, x0
   36860:	mov	x24, x1
   36864:	mov	w20, w2
   36868:	mov	x22, x3
   3686c:	mov	x21, x4
   36870:	mov	x23, x5
   36874:	adrp	x3, 33000 <__asan_cplus_demangle_print_callback@@Base>
   36878:	add	x3, x3, #0x724
   3687c:	str	x3, [sp, #176]
   36880:	str	wzr, [sp, #40]
   36884:	str	xzr, [sp, #32]
   36888:	str	wzr, [sp, #24]
   3688c:	mov	w3, #0x1                   	// #1
   36890:	str	w3, [sp, #16]
   36894:	str	xzr, [sp, #8]
   36898:	add	x3, sp, #0xb8
   3689c:	str	x3, [sp]
   368a0:	add	x7, sp, #0xbc
   368a4:	add	x6, sp, #0xb0
   368a8:	mov	x5, x4
   368ac:	mov	x4, x22
   368b0:	mov	x3, #0x0                   	// #0
   368b4:	bl	350f0 <__asan_internal_strnlen@@Base+0x19e0>
   368b8:	cbz	w0, 3694c <__asan_backtrace_initialize@@Base+0x108>
   368bc:	str	x19, [sp, #112]
   368c0:	str	x22, [sp, #120]
   368c4:	str	x21, [sp, #128]
   368c8:	add	x1, sp, #0xb0
   368cc:	str	x1, [sp, #136]
   368d0:	add	x1, sp, #0xbc
   368d4:	str	x1, [sp, #144]
   368d8:	add	x1, sp, #0xb8
   368dc:	str	x1, [sp, #152]
   368e0:	str	x24, [sp, #160]
   368e4:	cmp	w0, #0x0
   368e8:	csinv	w20, w20, wzr, lt  // lt = tstop
   368ec:	str	w20, [sp, #168]
   368f0:	add	x1, sp, #0x70
   368f4:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
   368f8:	add	x0, x0, #0x578
   368fc:	bl	6640 <dl_iterate_phdr@plt>
   36900:	ldr	w0, [x19, #8]
   36904:	cbnz	w0, 3697c <__asan_backtrace_initialize@@Base+0x138>
   36908:	ldr	w0, [sp, #188]
   3690c:	cbz	w0, 36964 <__asan_backtrace_initialize@@Base+0x120>
   36910:	adrp	x0, 36000 <__asan_internal_strnlen@@Base+0x28f0>
   36914:	add	x0, x0, #0x67c
   36918:	str	x0, [x19, #40]
   3691c:	ldr	x0, [x19, #24]
   36920:	str	x0, [x23]
   36924:	ldr	x2, [x23]
   36928:	cmp	x2, #0x0
   3692c:	mov	w0, #0x1                   	// #1
   36930:	adrp	x1, 33000 <__asan_cplus_demangle_print_callback@@Base>
   36934:	add	x1, x1, #0x724
   36938:	ccmp	x2, x1, #0x4, ne  // ne = any
   3693c:	b.ne	3694c <__asan_backtrace_initialize@@Base+0x108>  // b.any
   36940:	ldr	x0, [sp, #176]
   36944:	str	x0, [x23]
   36948:	mov	w0, #0x1                   	// #1
   3694c:	ldp	x19, x20, [sp, #64]
   36950:	ldp	x21, x22, [sp, #80]
   36954:	ldp	x23, x24, [sp, #96]
   36958:	ldp	x29, x30, [sp, #48]
   3695c:	add	sp, sp, #0xc0
   36960:	ret
   36964:	ldr	x0, [x19, #40]
   36968:	cbnz	x0, 3691c <__asan_backtrace_initialize@@Base+0xd8>
   3696c:	adrp	x0, 33000 <__asan_cplus_demangle_print_callback@@Base>
   36970:	add	x0, x0, #0x74c
   36974:	str	x0, [x19, #40]
   36978:	b	3691c <__asan_backtrace_initialize@@Base+0xd8>
   3697c:	ldr	w0, [sp, #188]
   36980:	cbz	w0, 369ac <__asan_backtrace_initialize@@Base+0x168>
   36984:	add	x0, x19, #0x28
   36988:	adrp	x1, 36000 <__asan_internal_strnlen@@Base+0x28f0>
   3698c:	add	x1, x1, #0x67c
   36990:	stlr	x1, [x0]
   36994:	ldr	w0, [x19, #8]
   36998:	cbz	w0, 3691c <__asan_backtrace_initialize@@Base+0xd8>
   3699c:	add	x19, x19, #0x18
   369a0:	ldar	x0, [x19]
   369a4:	str	x0, [x23]
   369a8:	b	36924 <__asan_backtrace_initialize@@Base+0xe0>
   369ac:	add	x0, x19, #0x28
   369b0:	adrp	x1, 33000 <__asan_cplus_demangle_print_callback@@Base>
   369b4:	add	x1, x1, #0x74c
   369b8:	ldxr	x2, [x0]
   369bc:	cbnz	x2, 369c8 <__asan_backtrace_initialize@@Base+0x184>
   369c0:	stlxr	w3, x1, [x0]
   369c4:	cbnz	w3, 369b8 <__asan_backtrace_initialize@@Base+0x174>
   369c8:	dmb	ish
   369cc:	b	36994 <__asan_backtrace_initialize@@Base+0x150>

00000000000369d0 <__asan_backtrace_get_view@@Base>:
   369d0:	stp	x29, x30, [sp, #-80]!
   369d4:	mov	x29, sp
   369d8:	stp	x19, x20, [sp, #16]
   369dc:	stp	x21, x22, [sp, #32]
   369e0:	stp	x23, x24, [sp, #48]
   369e4:	str	x25, [sp, #64]
   369e8:	mov	w22, w1
   369ec:	mov	x20, x2
   369f0:	mov	x19, x3
   369f4:	mov	x23, x4
   369f8:	mov	x24, x5
   369fc:	mov	x21, x6
   36a00:	bl	6940 <getpagesize@plt>
   36a04:	sxtw	x0, w0
   36a08:	udiv	x25, x20, x0
   36a0c:	msub	w25, w25, w0, w20
   36a10:	sub	x19, x19, #0x1
   36a14:	add	x3, x0, x25
   36a18:	add	x19, x19, x3
   36a1c:	neg	x0, x0
   36a20:	and	x19, x0, x19
   36a24:	sub	x5, x20, x25
   36a28:	mov	w4, w22
   36a2c:	mov	w3, #0x2                   	// #2
   36a30:	mov	w2, #0x1                   	// #1
   36a34:	mov	x1, x19
   36a38:	mov	x0, #0x0                   	// #0
   36a3c:	bl	66a0 <mmap@plt>
   36a40:	cmn	x0, #0x1
   36a44:	b.eq	36a74 <__asan_backtrace_get_view@@Base+0xa4>  // b.none
   36a48:	add	x25, x0, x25
   36a4c:	str	x25, [x21]
   36a50:	str	x0, [x21, #8]
   36a54:	str	x19, [x21, #16]
   36a58:	mov	w0, #0x1                   	// #1
   36a5c:	ldp	x19, x20, [sp, #16]
   36a60:	ldp	x21, x22, [sp, #32]
   36a64:	ldp	x23, x24, [sp, #48]
   36a68:	ldr	x25, [sp, #64]
   36a6c:	ldp	x29, x30, [sp], #80
   36a70:	ret
   36a74:	bl	6790 <__errno_location@plt>
   36a78:	ldr	w2, [x0]
   36a7c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   36a80:	add	x1, x1, #0xdf0
   36a84:	mov	x0, x24
   36a88:	blr	x23
   36a8c:	mov	w0, #0x0                   	// #0
   36a90:	b	36a5c <__asan_backtrace_get_view@@Base+0x8c>

0000000000036a94 <__asan_backtrace_release_view@@Base>:
   36a94:	stp	x29, x30, [sp, #-32]!
   36a98:	mov	x29, sp
   36a9c:	stp	x19, x20, [sp, #16]
   36aa0:	mov	x4, x1
   36aa4:	mov	x19, x2
   36aa8:	mov	x20, x3
   36aac:	ldr	x1, [x1, #16]
   36ab0:	ldr	x0, [x4, #8]
   36ab4:	bl	66b0 <munmap@plt>
   36ab8:	tbnz	w0, #31, 36ac8 <__asan_backtrace_release_view@@Base+0x34>
   36abc:	ldp	x19, x20, [sp, #16]
   36ac0:	ldp	x29, x30, [sp], #32
   36ac4:	ret
   36ac8:	bl	6790 <__errno_location@plt>
   36acc:	ldr	w2, [x0]
   36ad0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   36ad4:	add	x1, x1, #0xdf8
   36ad8:	mov	x0, x20
   36adc:	blr	x19
   36ae0:	b	36abc <__asan_backtrace_release_view@@Base+0x28>
   36ae4:	cmp	x2, #0xf
   36ae8:	b.ls	36b60 <__asan_backtrace_release_view@@Base+0xcc>  // b.plast
   36aec:	add	x4, x0, #0x40
   36af0:	ldr	x3, [x0, #64]
   36af4:	mov	x5, #0x0                   	// #0
   36af8:	cbnz	x3, 36b04 <__asan_backtrace_release_view@@Base+0x70>
   36afc:	b	36b50 <__asan_backtrace_release_view@@Base+0xbc>
   36b00:	mov	x4, x6
   36b04:	add	x5, x5, #0x1
   36b08:	mov	x6, x3
   36b0c:	ldr	x3, [x3]
   36b10:	cbz	x3, 36b30 <__asan_backtrace_release_view@@Base+0x9c>
   36b14:	cbz	x4, 36b00 <__asan_backtrace_release_view@@Base+0x6c>
   36b18:	ldr	x7, [x4]
   36b1c:	ldr	x8, [x3, #8]
   36b20:	ldr	x7, [x7, #8]
   36b24:	cmp	x8, x7
   36b28:	csel	x4, x4, x6, cs  // cs = hs, nlast
   36b2c:	b	36b04 <__asan_backtrace_release_view@@Base+0x70>
   36b30:	cmp	x5, #0xf
   36b34:	b.ls	36b50 <__asan_backtrace_release_view@@Base+0xbc>  // b.plast
   36b38:	ldr	x3, [x4]
   36b3c:	ldr	x5, [x3, #8]
   36b40:	cmp	x5, x2
   36b44:	b.cs	36b60 <__asan_backtrace_release_view@@Base+0xcc>  // b.hs, b.nlast
   36b48:	ldr	x3, [x3]
   36b4c:	str	x3, [x4]
   36b50:	ldr	x3, [x0, #64]
   36b54:	str	x3, [x1]
   36b58:	str	x2, [x1, #8]
   36b5c:	str	x1, [x0, #64]
   36b60:	ret

0000000000036b64 <__asan_backtrace_free@@Base>:
   36b64:	stp	x29, x30, [sp, #-48]!
   36b68:	mov	x29, sp
   36b6c:	stp	x19, x20, [sp, #16]
   36b70:	str	x21, [sp, #32]
   36b74:	mov	x19, x0
   36b78:	mov	x21, x1
   36b7c:	mov	x20, x2
   36b80:	mov	x0, #0xffff                	// #65535
   36b84:	cmp	x2, x0
   36b88:	b.ls	36ba4 <__asan_backtrace_free@@Base+0x40>  // b.plast
   36b8c:	bl	6940 <getpagesize@plt>
   36b90:	sxtw	x0, w0
   36b94:	sub	x0, x0, #0x1
   36b98:	orr	x1, x21, x20
   36b9c:	tst	x0, x1
   36ba0:	b.eq	36bf0 <__asan_backtrace_free@@Base+0x8c>  // b.none
   36ba4:	ldr	w0, [x19, #8]
   36ba8:	cbz	w0, 36bc8 <__asan_backtrace_free@@Base+0x64>
   36bac:	add	x0, x19, #0x3c
   36bb0:	mov	w2, #0x1                   	// #1
   36bb4:	ldxr	w1, [x0]
   36bb8:	stxr	w3, w2, [x0]
   36bbc:	cbnz	w3, 36bb4 <__asan_backtrace_free@@Base+0x50>
   36bc0:	dmb	ish
   36bc4:	cbnz	w1, 36be0 <__asan_backtrace_free@@Base+0x7c>
   36bc8:	mov	x2, x20
   36bcc:	mov	x1, x21
   36bd0:	mov	x0, x19
   36bd4:	bl	36ae4 <__asan_backtrace_release_view@@Base+0x50>
   36bd8:	ldr	w0, [x19, #8]
   36bdc:	cbnz	w0, 36c04 <__asan_backtrace_free@@Base+0xa0>
   36be0:	ldp	x19, x20, [sp, #16]
   36be4:	ldr	x21, [sp, #32]
   36be8:	ldp	x29, x30, [sp], #48
   36bec:	ret
   36bf0:	mov	x1, x20
   36bf4:	mov	x0, x21
   36bf8:	bl	66b0 <munmap@plt>
   36bfc:	cbnz	w0, 36ba4 <__asan_backtrace_free@@Base+0x40>
   36c00:	b	36be0 <__asan_backtrace_free@@Base+0x7c>
   36c04:	add	x19, x19, #0x3c
   36c08:	stlr	wzr, [x19]
   36c0c:	b	36be0 <__asan_backtrace_free@@Base+0x7c>

0000000000036c10 <__asan_backtrace_alloc@@Base>:
   36c10:	stp	x29, x30, [sp, #-64]!
   36c14:	mov	x29, sp
   36c18:	stp	x19, x20, [sp, #16]
   36c1c:	stp	x21, x22, [sp, #32]
   36c20:	stp	x23, x24, [sp, #48]
   36c24:	mov	x21, x0
   36c28:	mov	x20, x1
   36c2c:	mov	x22, x2
   36c30:	mov	x23, x3
   36c34:	ldr	w0, [x0, #8]
   36c38:	cbnz	w0, 36c74 <__asan_backtrace_alloc@@Base+0x64>
   36c3c:	add	x1, x21, #0x40
   36c40:	ldr	x19, [x21, #64]
   36c44:	cbz	x19, 36c60 <__asan_backtrace_alloc@@Base+0x50>
   36c48:	ldr	x4, [x19, #8]
   36c4c:	cmp	x4, x20
   36c50:	b.cs	36cfc <__asan_backtrace_alloc@@Base+0xec>  // b.hs, b.nlast
   36c54:	mov	x1, x19
   36c58:	ldr	x19, [x19]
   36c5c:	cbnz	x19, 36c48 <__asan_backtrace_alloc@@Base+0x38>
   36c60:	ldr	w0, [x21, #8]
   36c64:	cbz	w0, 36c90 <__asan_backtrace_alloc@@Base+0x80>
   36c68:	add	x0, x21, #0x3c
   36c6c:	stlr	wzr, [x0]
   36c70:	b	36c90 <__asan_backtrace_alloc@@Base+0x80>
   36c74:	add	x0, x21, #0x3c
   36c78:	mov	w2, #0x1                   	// #1
   36c7c:	ldxr	w1, [x0]
   36c80:	stxr	w3, w2, [x0]
   36c84:	cbnz	w3, 36c7c <__asan_backtrace_alloc@@Base+0x6c>
   36c88:	dmb	ish
   36c8c:	cbz	w1, 36c3c <__asan_backtrace_alloc@@Base+0x2c>
   36c90:	bl	6940 <getpagesize@plt>
   36c94:	sxtw	x0, w0
   36c98:	sub	x24, x20, #0x1
   36c9c:	add	x24, x24, x0
   36ca0:	neg	x0, x0
   36ca4:	and	x24, x24, x0
   36ca8:	mov	x5, #0x0                   	// #0
   36cac:	mov	w4, #0xffffffff            	// #-1
   36cb0:	mov	w3, #0x22                  	// #34
   36cb4:	mov	w2, #0x3                   	// #3
   36cb8:	mov	x1, x24
   36cbc:	mov	x0, #0x0                   	// #0
   36cc0:	bl	66a0 <mmap@plt>
   36cc4:	mov	x19, x0
   36cc8:	cmn	x0, #0x1
   36ccc:	b.eq	36d4c <__asan_backtrace_alloc@@Base+0x13c>  // b.none
   36cd0:	add	x1, x20, #0x7
   36cd4:	and	x1, x1, #0xfffffffffffffff8
   36cd8:	cmp	x24, x1
   36cdc:	b.ls	36d20 <__asan_backtrace_alloc@@Base+0x110>  // b.plast
   36ce0:	mov	x4, x23
   36ce4:	mov	x3, x22
   36ce8:	sub	x2, x24, x1
   36cec:	add	x1, x0, x1
   36cf0:	mov	x0, x21
   36cf4:	bl	6890 <__asan_backtrace_free@plt>
   36cf8:	b	36d20 <__asan_backtrace_alloc@@Base+0x110>
   36cfc:	ldr	x0, [x19]
   36d00:	str	x0, [x1]
   36d04:	add	x1, x20, #0x7
   36d08:	and	x1, x1, #0xfffffffffffffff8
   36d0c:	ldr	x2, [x19, #8]
   36d10:	cmp	x2, x1
   36d14:	b.hi	36d38 <__asan_backtrace_alloc@@Base+0x128>  // b.pmore
   36d18:	ldr	w0, [x21, #8]
   36d1c:	cbnz	w0, 36d70 <__asan_backtrace_alloc@@Base+0x160>
   36d20:	mov	x0, x19
   36d24:	ldp	x19, x20, [sp, #16]
   36d28:	ldp	x21, x22, [sp, #32]
   36d2c:	ldp	x23, x24, [sp, #48]
   36d30:	ldp	x29, x30, [sp], #64
   36d34:	ret
   36d38:	sub	x2, x2, x1
   36d3c:	add	x1, x19, x1
   36d40:	mov	x0, x21
   36d44:	bl	36ae4 <__asan_backtrace_release_view@@Base+0x50>
   36d48:	b	36d18 <__asan_backtrace_alloc@@Base+0x108>
   36d4c:	mov	x19, #0x0                   	// #0
   36d50:	cbz	x22, 36d20 <__asan_backtrace_alloc@@Base+0x110>
   36d54:	bl	6790 <__errno_location@plt>
   36d58:	ldr	w2, [x0]
   36d5c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x9150>
   36d60:	add	x1, x1, #0xdf0
   36d64:	mov	x0, x23
   36d68:	blr	x22
   36d6c:	b	36d20 <__asan_backtrace_alloc@@Base+0x110>
   36d70:	add	x21, x21, #0x3c
   36d74:	stlr	wzr, [x21]
   36d78:	b	36d20 <__asan_backtrace_alloc@@Base+0x110>

0000000000036d7c <__asan_backtrace_vector_grow@@Base>:
   36d7c:	stp	x29, x30, [sp, #-80]!
   36d80:	mov	x29, sp
   36d84:	stp	x19, x20, [sp, #16]
   36d88:	stp	x21, x22, [sp, #32]
   36d8c:	stp	x23, x24, [sp, #48]
   36d90:	mov	x23, x0
   36d94:	mov	x21, x1
   36d98:	mov	x19, x4
   36d9c:	ldr	x0, [x4, #16]
   36da0:	cmp	x0, x1
   36da4:	b.cs	36e24 <__asan_backtrace_vector_grow@@Base+0xa8>  // b.hs, b.nlast
   36da8:	str	x25, [sp, #64]
   36dac:	mov	x24, x2
   36db0:	mov	x25, x3
   36db4:	ldr	x0, [x4, #8]
   36db8:	add	x22, x0, x1
   36dbc:	cbnz	x0, 36e5c <__asan_backtrace_vector_grow@@Base+0xe0>
   36dc0:	lsl	x22, x22, #4
   36dc4:	mov	x3, x25
   36dc8:	mov	x2, x24
   36dcc:	mov	x1, x22
   36dd0:	mov	x0, x23
   36dd4:	bl	65b0 <__asan_backtrace_alloc@plt>
   36dd8:	mov	x20, x0
   36ddc:	cbz	x0, 36e90 <__asan_backtrace_vector_grow@@Base+0x114>
   36de0:	ldr	x1, [x19]
   36de4:	cbz	x1, 36e10 <__asan_backtrace_vector_grow@@Base+0x94>
   36de8:	ldr	x2, [x19, #8]
   36dec:	bl	64a0 <__asan_internal_memcpy@plt>
   36df0:	ldr	x2, [x19, #8]
   36df4:	ldr	x0, [x19, #16]
   36df8:	mov	x4, x25
   36dfc:	mov	x3, x24
   36e00:	add	x2, x2, x0
   36e04:	ldr	x1, [x19]
   36e08:	mov	x0, x23
   36e0c:	bl	6890 <__asan_backtrace_free@plt>
   36e10:	str	x20, [x19]
   36e14:	ldr	x0, [x19, #8]
   36e18:	sub	x22, x22, x0
   36e1c:	str	x22, [x19, #16]
   36e20:	ldr	x25, [sp, #64]
   36e24:	ldr	x1, [x19, #8]
   36e28:	ldr	x20, [x19]
   36e2c:	add	x20, x20, x1
   36e30:	add	x1, x1, x21
   36e34:	str	x1, [x19, #8]
   36e38:	ldr	x1, [x19, #16]
   36e3c:	sub	x21, x1, x21
   36e40:	str	x21, [x19, #16]
   36e44:	mov	x0, x20
   36e48:	ldp	x19, x20, [sp, #16]
   36e4c:	ldp	x21, x22, [sp, #32]
   36e50:	ldp	x23, x24, [sp, #48]
   36e54:	ldp	x29, x30, [sp], #80
   36e58:	ret
   36e5c:	bl	6940 <getpagesize@plt>
   36e60:	sxtw	x1, w0
   36e64:	cmp	x22, w0, sxtw
   36e68:	b.cs	36e7c <__asan_backtrace_vector_grow@@Base+0x100>  // b.hs, b.nlast
   36e6c:	lsl	x22, x22, #1
   36e70:	cmp	x22, x1
   36e74:	csel	x22, x22, x1, ls  // ls = plast
   36e78:	b	36dc4 <__asan_backtrace_vector_grow@@Base+0x48>
   36e7c:	add	x22, x1, x22, lsl #1
   36e80:	sub	x22, x22, #0x1
   36e84:	neg	x1, x1
   36e88:	and	x22, x1, x22
   36e8c:	b	36dc4 <__asan_backtrace_vector_grow@@Base+0x48>
   36e90:	ldr	x25, [sp, #64]
   36e94:	b	36e44 <__asan_backtrace_vector_grow@@Base+0xc8>

0000000000036e98 <__asan_backtrace_vector_finish@@Base>:
   36e98:	ldr	x0, [x1]
   36e9c:	ldr	x2, [x1, #8]
   36ea0:	add	x2, x0, x2
   36ea4:	str	x2, [x1]
   36ea8:	str	xzr, [x1, #8]
   36eac:	ret

0000000000036eb0 <__asan_backtrace_vector_release@@Base>:
   36eb0:	stp	x29, x30, [sp, #-32]!
   36eb4:	mov	x29, sp
   36eb8:	str	x19, [sp, #16]
   36ebc:	mov	x19, x1
   36ec0:	ldr	x5, [x1, #8]
   36ec4:	add	x1, x5, #0x7
   36ec8:	and	x1, x1, #0xfffffffffffffff8
   36ecc:	ldr	x4, [x19, #16]
   36ed0:	add	x5, x5, x4
   36ed4:	ldr	x6, [x19]
   36ed8:	mov	x4, x3
   36edc:	mov	x3, x2
   36ee0:	sub	x2, x5, x1
   36ee4:	add	x1, x6, x1
   36ee8:	bl	6890 <__asan_backtrace_free@plt>
   36eec:	str	xzr, [x19, #16]
   36ef0:	ldr	x0, [x19, #8]
   36ef4:	cbnz	x0, 36efc <__asan_backtrace_vector_release@@Base+0x4c>
   36ef8:	str	xzr, [x19]
   36efc:	mov	w0, #0x1                   	// #1
   36f00:	ldr	x19, [sp, #16]
   36f04:	ldp	x29, x30, [sp], #32
   36f08:	ret
   36f0c:	nop
   36f10:	adrp	x2, 5c000 <_Unwind_Backtrace@GCC_3.3>
   36f14:	mov	x1, #0x0                   	// #0
   36f18:	ldr	x2, [x2, #888]
   36f1c:	b	66f0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000036f20 <.fini>:
   36f20:	stp	x29, x30, [sp, #-16]!
   36f24:	mov	x29, sp
   36f28:	ldp	x29, x30, [sp], #16
   36f2c:	ret
