
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b68 <_init>:
 b68:	stp	x29, x30, [sp, #-16]!
 b6c:	mov	x29, sp
 b70:	bl	ca0 <call_weak_fn>
 b74:	ldp	x29, x30, [sp], #16
 b78:	ret

Disassembly of section .plt:

0000000000000b80 <.plt>:
 b80:	stp	x16, x30, [sp, #-16]!
 b84:	adrp	x16, 11000 <__FRAME_END__+0xf85c>
 b88:	ldr	x17, [x16, #4088]
 b8c:	add	x16, x16, #0xff8
 b90:	br	x17
 b94:	nop
 b98:	nop
 b9c:	nop

0000000000000ba0 <strtok@plt>:
 ba0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ba4:	ldr	x17, [x16]
 ba8:	add	x16, x16, #0x0
 bac:	br	x17

0000000000000bb0 <builtin_error@plt>:
 bb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bb4:	ldr	x17, [x16, #8]
 bb8:	add	x16, x16, #0x8
 bbc:	br	x17

0000000000000bc0 <__cxa_finalize@plt>:
 bc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #16]
 bc8:	add	x16, x16, #0x10
 bcc:	br	x17

0000000000000bd0 <builtin_help@plt>:
 bd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #24]
 bd8:	add	x16, x16, #0x18
 bdc:	br	x17

0000000000000be0 <builtin_usage@plt>:
 be0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 be4:	ldr	x17, [x16, #32]
 be8:	add	x16, x16, #0x20
 bec:	br	x17

0000000000000bf0 <strerror@plt>:
 bf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #40]
 bf8:	add	x16, x16, #0x28
 bfc:	br	x17

0000000000000c00 <__gmon_start__@plt>:
 c00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c04:	ldr	x17, [x16, #48]
 c08:	add	x16, x16, #0x30
 c0c:	br	x17

0000000000000c10 <strcmp@plt>:
 c10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c14:	ldr	x17, [x16, #56]
 c18:	add	x16, x16, #0x38
 c1c:	br	x17

0000000000000c20 <internal_getopt@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16, #64]
 c28:	add	x16, x16, #0x40
 c2c:	br	x17

0000000000000c30 <reset_internal_getopt@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #72]
 c38:	add	x16, x16, #0x48
 c3c:	br	x17

0000000000000c40 <fcntl@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #80]
 c48:	add	x16, x16, #0x50
 c4c:	br	x17

0000000000000c50 <legal_number@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #88]
 c58:	add	x16, x16, #0x58
 c5c:	br	x17

0000000000000c60 <printf@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #96]
 c68:	add	x16, x16, #0x60
 c6c:	br	x17

0000000000000c70 <__errno_location@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #104]
 c78:	add	x16, x16, #0x68
 c7c:	br	x17

0000000000000c80 <putchar@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #112]
 c88:	add	x16, x16, #0x70
 c8c:	br	x17

0000000000000c90 <getdtablesize@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #120]
 c98:	add	x16, x16, #0x78
 c9c:	br	x17

Disassembly of section .text:

0000000000000ca0 <call_weak_fn>:
     ca0:	adrp	x0, 11000 <__FRAME_END__+0xf85c>
     ca4:	ldr	x0, [x0, #4040]
     ca8:	cbz	x0, cb0 <call_weak_fn+0x10>
     cac:	b	c00 <__gmon_start__@plt>
     cb0:	ret

0000000000000cb4 <deregister_tm_clones>:
     cb4:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cb8:	add	x0, x0, #0x128
     cbc:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cc0:	add	x1, x1, #0x128
     cc4:	cmp	x1, x0
     cc8:	b.eq	ce0 <deregister_tm_clones+0x2c>  // b.none
     ccc:	adrp	x1, 11000 <__FRAME_END__+0xf85c>
     cd0:	ldr	x1, [x1, #4024]
     cd4:	cbz	x1, ce0 <deregister_tm_clones+0x2c>
     cd8:	mov	x16, x1
     cdc:	br	x16
     ce0:	ret

0000000000000ce4 <register_tm_clones>:
     ce4:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     ce8:	add	x0, x0, #0x128
     cec:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cf0:	add	x1, x1, #0x128
     cf4:	sub	x1, x1, x0
     cf8:	mov	x2, #0x2                   	// #2
     cfc:	asr	x1, x1, #3
     d00:	sdiv	x1, x1, x2
     d04:	cbz	x1, d1c <register_tm_clones+0x38>
     d08:	adrp	x2, 11000 <__FRAME_END__+0xf85c>
     d0c:	ldr	x2, [x2, #4064]
     d10:	cbz	x2, d1c <register_tm_clones+0x38>
     d14:	mov	x16, x2
     d18:	br	x16
     d1c:	ret

0000000000000d20 <__do_global_dtors_aux>:
     d20:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d24:	ldrb	w1, [x0, #296]
     d28:	cbnz	w1, d6c <__do_global_dtors_aux+0x4c>
     d2c:	stp	x29, x30, [sp, #-32]!
     d30:	mov	x29, sp
     d34:	str	x19, [sp, #16]
     d38:	mov	x19, x0
     d3c:	adrp	x0, 11000 <__FRAME_END__+0xf85c>
     d40:	ldr	x0, [x0, #4032]
     d44:	cbz	x0, d54 <__do_global_dtors_aux+0x34>
     d48:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d4c:	ldr	x0, [x0, #128]
     d50:	bl	bc0 <__cxa_finalize@plt>
     d54:	bl	cb4 <deregister_tm_clones>
     d58:	mov	w0, #0x1                   	// #1
     d5c:	strb	w0, [x19, #296]
     d60:	ldr	x19, [sp, #16]
     d64:	ldp	x29, x30, [sp], #32
     d68:	ret
     d6c:	ret

0000000000000d70 <frame_dummy>:
     d70:	b	ce4 <register_tm_clones>

0000000000000d74 <getflags>:
     d74:	stp	x29, x30, [sp, #-48]!
     d78:	mov	x29, sp
     d7c:	stp	x19, x20, [sp, #16]
     d80:	stp	x21, x22, [sp, #32]
     d84:	mov	w21, w0
     d88:	mov	w22, w1
     d8c:	mov	w1, #0x1                   	// #1
     d90:	bl	c40 <fcntl@plt>
     d94:	mov	w19, w0
     d98:	cmn	w0, #0x1
     d9c:	b.ne	de0 <getflags+0x6c>  // b.any
     da0:	cbnz	w22, dbc <getflags+0x48>
     da4:	mov	w19, #0xffffffff            	// #-1
     da8:	mov	w0, w19
     dac:	ldp	x19, x20, [sp, #16]
     db0:	ldp	x21, x22, [sp, #32]
     db4:	ldp	x29, x30, [sp], #48
     db8:	ret
     dbc:	bl	c70 <__errno_location@plt>
     dc0:	ldr	w0, [x0]
     dc4:	bl	bf0 <strerror@plt>
     dc8:	mov	x2, x0
     dcc:	mov	w1, w21
     dd0:	adrp	x0, 1000 <fdflags_builtin+0xc4>
     dd4:	add	x0, x0, #0x294
     dd8:	bl	bb0 <builtin_error@plt>
     ddc:	b	da8 <getflags+0x34>
     de0:	mov	w0, w21
     de4:	mov	w1, #0x3                   	// #3
     de8:	bl	c40 <fcntl@plt>
     dec:	mov	w20, w0
     df0:	cmn	w0, #0x1
     df4:	b.ne	e20 <getflags+0xac>  // b.any
     df8:	cbz	w22, da4 <getflags+0x30>
     dfc:	bl	c70 <__errno_location@plt>
     e00:	ldr	w0, [x0]
     e04:	bl	bf0 <strerror@plt>
     e08:	mov	x2, x0
     e0c:	mov	w1, w21
     e10:	adrp	x0, 1000 <fdflags_builtin+0xc4>
     e14:	add	x0, x0, #0x2b3
     e18:	bl	bb0 <builtin_error@plt>
     e1c:	b	da4 <getflags+0x30>
     e20:	cbz	w19, e28 <getflags+0xb4>
     e24:	orr	w20, w0, #0x80000
     e28:	mov	w19, #0x3c00                	// #15360
     e2c:	movk	w19, #0x1d, lsl #16
     e30:	and	w19, w20, w19
     e34:	b	da8 <getflags+0x34>

0000000000000e38 <printone>:
     e38:	stp	x29, x30, [sp, #-80]!
     e3c:	mov	x29, sp
     e40:	stp	x19, x20, [sp, #16]
     e44:	mov	w19, w0
     e48:	stp	x21, x22, [sp, #32]
     e4c:	stp	x23, x24, [sp, #48]
     e50:	mov	w23, w2
     e54:	stp	x25, x26, [sp, #64]
     e58:	bl	d74 <getflags>
     e5c:	cmn	w0, #0x1
     e60:	b.eq	f24 <printone+0xec>  // b.none
     e64:	mov	w1, w19
     e68:	mov	w20, w0
     e6c:	adrp	x0, 1000 <fdflags_builtin+0xc4>
     e70:	add	x0, x0, #0x2d1
     e74:	bl	c60 <printf@plt>
     e78:	adrp	x22, 1000 <fdflags_builtin+0xc4>
     e7c:	cmp	w23, #0x0
     e80:	add	x22, x22, #0x2d5
     e84:	adrp	x0, 1000 <fdflags_builtin+0xc4>
     e88:	add	x0, x0, #0x34e
     e8c:	adrp	x19, 11000 <__FRAME_END__+0xf85c>
     e90:	adrp	x24, 1000 <fdflags_builtin+0xc4>
     e94:	adrp	x25, 1000 <fdflags_builtin+0xc4>
     e98:	csel	x22, x22, x0, ne  // ne = any
     e9c:	add	x19, x19, #0xd30
     ea0:	add	x24, x24, #0x2dc
     ea4:	add	x25, x25, #0x2d7
     ea8:	mov	x21, #0x0                   	// #0
     eac:	ldr	w26, [x19, #8]
     eb0:	tst	w26, w20
     eb4:	b.eq	f10 <printone+0xd8>  // b.none
     eb8:	ldr	x2, [x19]
     ebc:	mov	x1, x22
     ec0:	mov	x0, x25
     ec4:	bic	w20, w20, w26
     ec8:	bl	c60 <printf@plt>
     ecc:	cbnz	w20, edc <printone+0xa4>
     ed0:	cmp	w23, #0x0
     ed4:	ccmp	x21, #0x9, #0x4, ne  // ne = any
     ed8:	b.eq	ee4 <printone+0xac>  // b.none
     edc:	mov	w0, #0x2c                  	// #44
     ee0:	bl	c80 <putchar@plt>
     ee4:	add	x21, x21, #0x1
     ee8:	add	x19, x19, #0x10
     eec:	cmp	x21, #0xa
     ef0:	b.ne	eac <printone+0x74>  // b.any
     ef4:	mov	w0, w21
     ef8:	ldp	x19, x20, [sp, #16]
     efc:	ldp	x21, x22, [sp, #32]
     f00:	ldp	x23, x24, [sp, #48]
     f04:	ldp	x25, x26, [sp, #64]
     f08:	ldp	x29, x30, [sp], #80
     f0c:	b	c80 <putchar@plt>
     f10:	cbz	w23, ee4 <printone+0xac>
     f14:	ldr	x1, [x19]
     f18:	mov	x0, x24
     f1c:	bl	c60 <printf@plt>
     f20:	b	ecc <printone+0x94>
     f24:	ldp	x19, x20, [sp, #16]
     f28:	ldp	x21, x22, [sp, #32]
     f2c:	ldp	x23, x24, [sp, #48]
     f30:	ldp	x25, x26, [sp, #64]
     f34:	ldp	x29, x30, [sp], #80
     f38:	ret

0000000000000f3c <fdflags_builtin>:
     f3c:	stp	x29, x30, [sp, #-176]!
     f40:	mov	x29, sp
     f44:	stp	x21, x22, [sp, #32]
     f48:	adrp	x21, 11000 <__FRAME_END__+0xf85c>
     f4c:	stp	x19, x20, [sp, #16]
     f50:	mov	x19, x0
     f54:	adrp	x20, 1000 <fdflags_builtin+0xc4>
     f58:	stp	x23, x24, [sp, #48]
     f5c:	add	x20, x20, #0x2e0
     f60:	mov	w23, #0x0                   	// #0
     f64:	stp	x25, x26, [sp, #64]
     f68:	mov	w25, #0x0                   	// #0
     f6c:	stp	x27, x28, [sp, #80]
     f70:	bl	c30 <reset_internal_getopt@plt>
     f74:	ldr	x21, [x21, #4048]
     f78:	mov	x1, x20
     f7c:	mov	x0, x19
     f80:	bl	c20 <internal_getopt@plt>
     f84:	cmn	w0, #0x1
     f88:	b.ne	fcc <fdflags_builtin+0x90>  // b.any
     f8c:	adrp	x0, 11000 <__FRAME_END__+0xf85c>
     f90:	ldr	x0, [x0, #4056]
     f94:	ldr	x21, [x0]
     f98:	cmp	x21, #0x0
     f9c:	csel	w0, w23, wzr, eq  // eq = none
     fa0:	cbnz	w0, 1064 <fdflags_builtin+0x128>
     fa4:	cbnz	x21, 106c <fdflags_builtin+0x130>
     fa8:	bl	c90 <getdtablesize@plt>
     fac:	cmp	w0, #0x0
     fb0:	mov	w1, #0x100                 	// #256
     fb4:	csel	w0, w0, w1, gt
     fb8:	sub	w19, w0, #0x1
     fbc:	add	x20, sp, #0xa8
     fc0:	cbnz	w19, 1028 <fdflags_builtin+0xec>
     fc4:	mov	w20, #0x0                   	// #0
     fc8:	b	105c <fdflags_builtin+0x120>
     fcc:	cmp	w0, #0x73
     fd0:	b.eq	100c <fdflags_builtin+0xd0>  // b.none
     fd4:	cmp	w0, #0x76
     fd8:	b.eq	1020 <fdflags_builtin+0xe4>  // b.none
     fdc:	cmn	w0, #0x63
     fe0:	b.ne	1018 <fdflags_builtin+0xdc>  // b.any
     fe4:	bl	bd0 <builtin_help@plt>
     fe8:	mov	w22, #0x102                 	// #258
     fec:	mov	w0, w22
     ff0:	ldp	x19, x20, [sp, #16]
     ff4:	ldp	x21, x22, [sp, #32]
     ff8:	ldp	x23, x24, [sp, #48]
     ffc:	ldp	x25, x26, [sp, #64]
    1000:	ldp	x27, x28, [sp, #80]
    1004:	ldp	x29, x30, [sp], #176
    1008:	ret
    100c:	mov	w23, #0x1                   	// #1
    1010:	ldr	x26, [x21]
    1014:	b	f78 <fdflags_builtin+0x3c>
    1018:	bl	be0 <builtin_usage@plt>
    101c:	b	fe8 <fdflags_builtin+0xac>
    1020:	mov	w25, #0x1                   	// #1
    1024:	b	f78 <fdflags_builtin+0x3c>
    1028:	mov	x2, x20
    102c:	mov	w0, w19
    1030:	mov	w1, #0x1                   	// #1
    1034:	bl	c40 <fcntl@plt>
    1038:	cmn	w0, #0x1
    103c:	b.ne	fc4 <fdflags_builtin+0x88>  // b.any
    1040:	sub	w19, w19, #0x1
    1044:	b	fc0 <fdflags_builtin+0x84>
    1048:	mov	w0, w20
    104c:	add	w20, w20, #0x1
    1050:	mov	w2, w25
    1054:	mov	w1, #0x0                   	// #0
    1058:	bl	e38 <printone>
    105c:	cmp	w20, w19
    1060:	b.ne	1048 <fdflags_builtin+0x10c>  // b.any
    1064:	mov	w22, #0x0                   	// #0
    1068:	b	fec <fdflags_builtin+0xb0>
    106c:	adrp	x24, 11000 <__FRAME_END__+0xf85c>
    1070:	add	x24, x24, #0xd30
    1074:	add	x0, sp, #0x9c
    1078:	mov	w22, #0x0                   	// #0
    107c:	str	x0, [sp, #112]
    1080:	ldr	x0, [x21, #8]
    1084:	add	x1, sp, #0xa8
    1088:	ldr	x0, [x0]
    108c:	bl	c50 <legal_number@plt>
    1090:	cbz	w0, 109c <fdflags_builtin+0x160>
    1094:	ldr	x20, [sp, #168]
    1098:	tbz	x20, #63, 10c0 <fdflags_builtin+0x184>
    109c:	ldr	x0, [x21, #8]
    10a0:	mov	w22, #0x1                   	// #1
    10a4:	ldr	x1, [x0]
    10a8:	adrp	x0, 1000 <fdflags_builtin+0xc4>
    10ac:	add	x0, x0, #0x2e4
    10b0:	bl	bb0 <builtin_error@plt>
    10b4:	ldr	x21, [x21]
    10b8:	cbnz	x21, 1080 <fdflags_builtin+0x144>
    10bc:	b	fec <fdflags_builtin+0xb0>
    10c0:	cbz	w23, 1270 <fdflags_builtin+0x334>
    10c4:	mov	w0, w20
    10c8:	mov	w1, #0x1                   	// #1
    10cc:	bl	d74 <getflags>
    10d0:	mov	w19, w0
    10d4:	cmn	w0, #0x1
    10d8:	b.eq	10b4 <fdflags_builtin+0x178>  // b.none
    10dc:	mov	x0, x26
    10e0:	adrp	x27, 1000 <fdflags_builtin+0xc4>
    10e4:	add	x1, x27, #0x42c
    10e8:	stp	wzr, wzr, [sp, #156]
    10ec:	str	wzr, [sp, #164]
    10f0:	bl	ba0 <strtok@plt>
    10f4:	mov	x2, x0
    10f8:	add	x0, sp, #0xa0
    10fc:	str	x0, [sp, #96]
    1100:	add	x0, sp, #0xa4
    1104:	str	x0, [sp, #104]
    1108:	cbnz	x2, 118c <fdflags_builtin+0x250>
    110c:	ldr	w28, [sp, #156]
    1110:	tbz	w28, #19, 122c <fdflags_builtin+0x2f0>
    1114:	tst	x19, #0x80000
    1118:	csinv	w2, w23, wzr, eq  // eq = none
    111c:	ldr	w27, [sp, #160]
    1120:	tbz	w27, #19, 1128 <fdflags_builtin+0x1ec>
    1124:	tbnz	w19, #19, 1234 <fdflags_builtin+0x2f8>
    1128:	cmn	w2, #0x1
    112c:	b.ne	1238 <fdflags_builtin+0x2fc>  // b.any
    1130:	orr	w2, w19, w28
    1134:	and	w27, w27, #0xfff7ffff
    1138:	and	w0, w28, #0xfff7ffff
    113c:	stp	w0, w27, [sp, #156]
    1140:	bic	w27, w2, w27
    1144:	and	w19, w19, #0xfff7ffff
    1148:	and	w2, w27, #0xfff7ffff
    114c:	cmp	w19, w2
    1150:	b.eq	10b4 <fdflags_builtin+0x178>  // b.none
    1154:	mov	w0, w20
    1158:	mov	w1, #0x4                   	// #4
    115c:	bl	c40 <fcntl@plt>
    1160:	cmn	w0, #0x1
    1164:	b.ne	10b4 <fdflags_builtin+0x178>  // b.any
    1168:	bl	c70 <__errno_location@plt>
    116c:	ldr	w0, [x0]
    1170:	bl	bf0 <strerror@plt>
    1174:	mov	x2, x0
    1178:	mov	w1, w20
    117c:	adrp	x0, 1000 <fdflags_builtin+0xc4>
    1180:	add	x0, x0, #0x31f
    1184:	bl	bb0 <builtin_error@plt>
    1188:	b	10b4 <fdflags_builtin+0x178>
    118c:	ldrb	w0, [x2]
    1190:	cmp	w0, #0x2b
    1194:	b.eq	11f4 <fdflags_builtin+0x2b8>  // b.none
    1198:	cmp	w0, #0x2d
    119c:	b.eq	1200 <fdflags_builtin+0x2c4>  // b.none
    11a0:	ldr	x4, [sp, #104]
    11a4:	mov	x28, #0x0                   	// #0
    11a8:	lsl	x5, x28, #4
    11ac:	mov	x0, x2
    11b0:	stp	x2, x5, [sp, #120]
    11b4:	ldr	x1, [x5, x24]
    11b8:	str	x4, [sp, #136]
    11bc:	bl	c10 <strcmp@plt>
    11c0:	ldp	x2, x5, [sp, #120]
    11c4:	ldr	x4, [sp, #136]
    11c8:	cbnz	w0, 120c <fdflags_builtin+0x2d0>
    11cc:	add	x5, x24, x5
    11d0:	ldr	w0, [x4]
    11d4:	ldr	w1, [x5, #8]
    11d8:	orr	w0, w0, w1
    11dc:	str	w0, [x4]
    11e0:	add	x1, x27, #0x42c
    11e4:	mov	x0, #0x0                   	// #0
    11e8:	bl	ba0 <strtok@plt>
    11ec:	mov	x2, x0
    11f0:	b	1108 <fdflags_builtin+0x1cc>
    11f4:	add	x2, x2, #0x1
    11f8:	ldr	x4, [sp, #112]
    11fc:	b	11a4 <fdflags_builtin+0x268>
    1200:	add	x2, x2, #0x1
    1204:	ldr	x4, [sp, #96]
    1208:	b	11a4 <fdflags_builtin+0x268>
    120c:	add	x28, x28, #0x1
    1210:	cmp	x28, #0xa
    1214:	b.ne	11a8 <fdflags_builtin+0x26c>  // b.any
    1218:	mov	x1, x2
    121c:	adrp	x0, 1000 <fdflags_builtin+0xc4>
    1220:	add	x0, x0, #0x33d
    1224:	bl	bb0 <builtin_error@plt>
    1228:	b	11e0 <fdflags_builtin+0x2a4>
    122c:	mov	w2, #0xffffffff            	// #-1
    1230:	b	111c <fdflags_builtin+0x1e0>
    1234:	mov	w2, #0x0                   	// #0
    1238:	mov	w0, w20
    123c:	mov	w1, #0x2                   	// #2
    1240:	bl	c40 <fcntl@plt>
    1244:	cmn	w0, #0x1
    1248:	b.ne	1130 <fdflags_builtin+0x1f4>  // b.any
    124c:	bl	c70 <__errno_location@plt>
    1250:	ldr	w0, [x0]
    1254:	bl	bf0 <strerror@plt>
    1258:	mov	x2, x0
    125c:	mov	w1, w20
    1260:	adrp	x0, 1000 <fdflags_builtin+0xc4>
    1264:	add	x0, x0, #0x300
    1268:	bl	bb0 <builtin_error@plt>
    126c:	b	1130 <fdflags_builtin+0x1f4>
    1270:	mov	w2, w25
    1274:	mov	w0, w20
    1278:	mov	w1, #0x1                   	// #1
    127c:	bl	e38 <printone>
    1280:	b	10b4 <fdflags_builtin+0x178>

Disassembly of section .fini:

0000000000001284 <_fini>:
    1284:	stp	x29, x30, [sp, #-16]!
    1288:	mov	x29, sp
    128c:	ldp	x29, x30, [sp], #16
    1290:	ret
