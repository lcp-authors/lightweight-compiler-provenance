
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fnmatch.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000720 <.init>:
 720:	stp	x29, x30, [sp, #-16]!
 724:	mov	x29, sp
 728:	bl	7f0 <fprintf@plt+0x10>
 72c:	ldp	x29, x30, [sp], #16
 730:	ret

Disassembly of section .plt:

0000000000000740 <memcpy@plt-0x20>:
 740:	stp	x16, x30, [sp, #-16]!
 744:	adrp	x16, 11000 <dl_load@@Base+0x102f8>
 748:	ldr	x17, [x16, #4088]
 74c:	add	x16, x16, #0xff8
 750:	br	x17
 754:	nop
 758:	nop
 75c:	nop

0000000000000760 <memcpy@plt>:
 760:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 764:	ldr	x17, [x16]
 768:	add	x16, x16, #0x0
 76c:	br	x17

0000000000000770 <strlen@plt>:
 770:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 774:	ldr	x17, [x16, #8]
 778:	add	x16, x16, #0x8
 77c:	br	x17

0000000000000780 <exit@plt>:
 780:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 784:	ldr	x17, [x16, #16]
 788:	add	x16, x16, #0x10
 78c:	br	x17

0000000000000790 <__cxa_finalize@plt>:
 790:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 794:	ldr	x17, [x16, #24]
 798:	add	x16, x16, #0x18
 79c:	br	x17

00000000000007a0 <__gmon_start__@plt>:
 7a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #32]
 7a8:	add	x16, x16, #0x20
 7ac:	br	x17

00000000000007b0 <fwrite@plt>:
 7b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #40]
 7b8:	add	x16, x16, #0x28
 7bc:	br	x17

00000000000007c0 <fnmatch@plt>:
 7c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #48]
 7c8:	add	x16, x16, #0x30
 7cc:	br	x17

00000000000007d0 <dcgettext@plt>:
 7d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #56]
 7d8:	add	x16, x16, #0x38
 7dc:	br	x17

00000000000007e0 <fprintf@plt>:
 7e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #64]
 7e8:	add	x16, x16, #0x40
 7ec:	br	x17

Disassembly of section .text:

00000000000007f0 <dl_load@@Base-0x518>:
 7f0:	adrp	x0, 11000 <dl_load@@Base+0x102f8>
 7f4:	ldr	x0, [x0, #4056]
 7f8:	cbz	x0, 800 <fprintf@plt+0x20>
 7fc:	b	7a0 <__gmon_start__@plt>
 800:	ret
 804:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 808:	add	x0, x0, #0x80
 80c:	adrp	x1, 12000 <dl_load@@Base+0x112f8>
 810:	add	x1, x1, #0x80
 814:	cmp	x0, x1
 818:	b.eq	844 <fprintf@plt+0x64>  // b.none
 81c:	adrp	x1, 11000 <dl_load@@Base+0x102f8>
 820:	ldr	x1, [x1, #4032]
 824:	cbz	x1, 844 <fprintf@plt+0x64>
 828:	stp	x29, x30, [sp, #-16]!
 82c:	mov	x29, sp
 830:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 834:	add	x0, x0, #0x80
 838:	blr	x1
 83c:	ldp	x29, x30, [sp], #16
 840:	ret
 844:	ret
 848:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 84c:	add	x0, x0, #0x80
 850:	adrp	x1, 12000 <dl_load@@Base+0x112f8>
 854:	add	x1, x1, #0x80
 858:	sub	x0, x0, x1
 85c:	lsr	x1, x0, #63
 860:	add	x0, x1, x0, asr #3
 864:	cmp	xzr, x0, asr #1
 868:	b.eq	898 <fprintf@plt+0xb8>  // b.none
 86c:	asr	x1, x0, #1
 870:	adrp	x2, 11000 <dl_load@@Base+0x102f8>
 874:	ldr	x2, [x2, #4064]
 878:	cbz	x2, 898 <fprintf@plt+0xb8>
 87c:	stp	x29, x30, [sp, #-16]!
 880:	mov	x29, sp
 884:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 888:	add	x0, x0, #0x80
 88c:	blr	x2
 890:	ldp	x29, x30, [sp], #16
 894:	ret
 898:	ret
 89c:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 8a0:	ldrb	w0, [x0, #128]
 8a4:	cbnz	w0, 8e0 <fprintf@plt+0x100>
 8a8:	stp	x29, x30, [sp, #-16]!
 8ac:	mov	x29, sp
 8b0:	adrp	x0, 11000 <dl_load@@Base+0x102f8>
 8b4:	ldr	x0, [x0, #4040]
 8b8:	cbz	x0, 8c8 <fprintf@plt+0xe8>
 8bc:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 8c0:	ldr	x0, [x0, #72]
 8c4:	bl	790 <__cxa_finalize@plt>
 8c8:	bl	804 <fprintf@plt+0x24>
 8cc:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 8d0:	mov	w1, #0x1                   	// #1
 8d4:	strb	w1, [x0, #128]
 8d8:	ldp	x29, x30, [sp], #16
 8dc:	ret
 8e0:	ret
 8e4:	stp	x29, x30, [sp, #-16]!
 8e8:	mov	x29, sp
 8ec:	bl	848 <fprintf@plt+0x68>
 8f0:	ldp	x29, x30, [sp], #16
 8f4:	ret
 8f8:	stp	x29, x30, [sp, #-208]!
 8fc:	mov	x29, sp
 900:	stp	x19, x20, [sp, #16]
 904:	stp	x21, x22, [sp, #32]
 908:	stp	x23, x24, [sp, #48]
 90c:	stp	x25, x26, [sp, #64]
 910:	stp	x27, x28, [sp, #80]
 914:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 918:	add	x5, x0, #0x88
 91c:	ldr	x0, [x0, #136]
 920:	ldr	x4, [x0, #176]
 924:	mov	w0, #0x1                   	// #1
 928:	str	w0, [sp, #144]
 92c:	fmov	d0, #1.000000000000000000e+00
 930:	str	d0, [sp, #152]
 934:	str	wzr, [sp, #160]
 938:	add	x3, sp, #0x90
 93c:	adrp	x2, 0 <memcpy@plt-0x760>
 940:	add	x2, x2, #0xe70
 944:	adrp	x1, 0 <memcpy@plt-0x760>
 948:	add	x1, x1, #0xe68
 94c:	ldr	x0, [x5, #8]
 950:	blr	x4
 954:	mov	w28, #0x0                   	// #0
 958:	cbz	w0, 9ac <fprintf@plt+0x1cc>
 95c:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 960:	add	x2, x0, #0x88
 964:	ldr	x0, [x0, #136]
 968:	ldr	x1, [x0, #248]
 96c:	ldr	x0, [x2, #8]
 970:	blr	x1
 974:	mov	x26, x0
 978:	adrp	x23, 11000 <dl_load@@Base+0x102f8>
 97c:	add	x23, x23, #0xd58
 980:	adrp	x22, 0 <memcpy@plt-0x760>
 984:	add	x22, x22, #0xe60
 988:	adrp	x21, 12000 <dl_load@@Base+0x112f8>
 98c:	add	x21, x21, #0x88
 990:	adrp	x0, 0 <memcpy@plt-0x760>
 994:	add	x0, x0, #0xeb8
 998:	str	x0, [sp, #96]
 99c:	adrp	x0, 0 <memcpy@plt-0x760>
 9a0:	add	x0, x0, #0xec8
 9a4:	str	x0, [sp, #104]
 9a8:	b	a40 <fprintf@plt+0x260>
 9ac:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 9b0:	add	x1, x0, #0x88
 9b4:	ldr	x0, [x0, #136]
 9b8:	ldr	x19, [x0, #104]
 9bc:	ldr	x20, [x1, #8]
 9c0:	mov	w2, #0x5                   	// #5
 9c4:	adrp	x1, 0 <memcpy@plt-0x760>
 9c8:	add	x1, x1, #0xe80
 9cc:	mov	x0, #0x0                   	// #0
 9d0:	bl	7d0 <dcgettext@plt>
 9d4:	mov	x1, x0
 9d8:	mov	x0, x20
 9dc:	blr	x19
 9e0:	mov	w28, #0x1                   	// #1
 9e4:	b	95c <fprintf@plt+0x17c>
 9e8:	ldr	x4, [x25, #96]
 9ec:	mov	x3, x24
 9f0:	ldr	x2, [sp, #96]
 9f4:	ldr	x1, [sp, #104]
 9f8:	mov	x0, x27
 9fc:	blr	x4
 a00:	b	a80 <fprintf@plt+0x2a0>
 a04:	ldr	x0, [x21]
 a08:	ldr	x19, [x0, #104]
 a0c:	ldr	x20, [x21, #8]
 a10:	mov	w2, #0x5                   	// #5
 a14:	adrp	x1, 0 <memcpy@plt-0x760>
 a18:	add	x1, x1, #0xee8
 a1c:	mov	x0, #0x0                   	// #0
 a20:	bl	7d0 <dcgettext@plt>
 a24:	mov	x2, x22
 a28:	mov	x1, x0
 a2c:	mov	x0, x20
 a30:	blr	x19
 a34:	add	w28, w28, #0x1
 a38:	ldr	x22, [x23, #16]!
 a3c:	cbz	x22, ad4 <fprintf@plt+0x2f4>
 a40:	ldr	x25, [x21]
 a44:	ldr	x27, [x21, #8]
 a48:	mov	x0, x22
 a4c:	bl	770 <strlen@plt>
 a50:	mov	x20, x0
 a54:	stp	xzr, xzr, [sp, #176]
 a58:	stp	xzr, xzr, [sp, #192]
 a5c:	mov	w0, #0x2                   	// #2
 a60:	str	w0, [sp, #176]
 a64:	str	x20, [sp, #192]
 a68:	add	x24, x20, #0x1
 a6c:	ldr	x1, [x25, #280]
 a70:	mov	x0, x24
 a74:	blr	x1
 a78:	mov	x19, x0
 a7c:	cbz	x0, 9e8 <fprintf@plt+0x208>
 a80:	mov	x2, x20
 a84:	mov	x1, x22
 a88:	mov	x0, x19
 a8c:	bl	760 <memcpy@plt>
 a90:	strb	wzr, [x19, x20]
 a94:	str	x19, [sp, #184]
 a98:	ldr	w0, [x23, #8]
 a9c:	scvtf	d0, w0
 aa0:	mov	w0, #0x1                   	// #1
 aa4:	str	w0, [sp, #144]
 aa8:	str	d0, [sp, #152]
 aac:	str	wzr, [sp, #160]
 ab0:	ldr	x0, [x21]
 ab4:	ldr	x4, [x0, #232]
 ab8:	add	x3, sp, #0x90
 abc:	add	x2, sp, #0xb0
 ac0:	mov	x1, x26
 ac4:	ldr	x0, [x21, #8]
 ac8:	blr	x4
 acc:	cbnz	w0, a38 <fprintf@plt+0x258>
 ad0:	b	a04 <fprintf@plt+0x224>
 ad4:	mov	w0, #0x5                   	// #5
 ad8:	str	w0, [sp, #112]
 adc:	str	x26, [sp, #120]
 ae0:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 ae4:	add	x5, x0, #0x88
 ae8:	ldr	x0, [x0, #136]
 aec:	ldr	x4, [x0, #176]
 af0:	add	x3, sp, #0x70
 af4:	adrp	x2, 0 <memcpy@plt-0x760>
 af8:	add	x2, x2, #0xf18
 afc:	adrp	x1, 0 <memcpy@plt-0x760>
 b00:	add	x1, x1, #0xe68
 b04:	ldr	x0, [x5, #8]
 b08:	blr	x4
 b0c:	cbz	w0, b34 <fprintf@plt+0x354>
 b10:	cmp	w28, #0x0
 b14:	cset	w0, eq  // eq = none
 b18:	ldp	x19, x20, [sp, #16]
 b1c:	ldp	x21, x22, [sp, #32]
 b20:	ldp	x23, x24, [sp, #48]
 b24:	ldp	x25, x26, [sp, #64]
 b28:	ldp	x27, x28, [sp, #80]
 b2c:	ldp	x29, x30, [sp], #208
 b30:	ret
 b34:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 b38:	add	x1, x0, #0x88
 b3c:	ldr	x0, [x0, #136]
 b40:	ldr	x19, [x0, #104]
 b44:	ldr	x20, [x1, #8]
 b48:	mov	w2, #0x5                   	// #5
 b4c:	adrp	x1, 0 <memcpy@plt-0x760>
 b50:	add	x1, x1, #0xf20
 b54:	mov	x0, #0x0                   	// #0
 b58:	bl	7d0 <dcgettext@plt>
 b5c:	mov	x1, x0
 b60:	mov	x0, x20
 b64:	blr	x19
 b68:	add	w28, w28, #0x1
 b6c:	b	b10 <fprintf@plt+0x330>
 b70:	stp	x29, x30, [sp, #-144]!
 b74:	mov	x29, sp
 b78:	stp	x19, x20, [sp, #16]
 b7c:	mov	x19, x1
 b80:	mov	w0, #0x1                   	// #1
 b84:	str	w0, [x1]
 b88:	fmov	d0, #-1.000000000000000000e+00
 b8c:	str	d0, [x1, #8]
 b90:	str	wzr, [x1, #16]
 b94:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 b98:	add	x5, x0, #0x88
 b9c:	ldr	x0, [x0, #136]
 ba0:	ldr	x4, [x0, #152]
 ba4:	add	x3, sp, #0x70
 ba8:	mov	w2, #0x2                   	// #2
 bac:	mov	x1, #0x0                   	// #0
 bb0:	ldr	x0, [x5, #8]
 bb4:	blr	x4
 bb8:	cbz	w0, c48 <fprintf@plt+0x468>
 bbc:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 bc0:	add	x5, x0, #0x88
 bc4:	ldr	x0, [x0, #136]
 bc8:	ldr	x4, [x0, #152]
 bcc:	add	x3, sp, #0x50
 bd0:	mov	w2, #0x2                   	// #2
 bd4:	mov	x1, #0x1                   	// #1
 bd8:	ldr	x0, [x5, #8]
 bdc:	blr	x4
 be0:	cbz	w0, c88 <fprintf@plt+0x4a8>
 be4:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 be8:	add	x5, x0, #0x88
 bec:	ldr	x0, [x0, #136]
 bf0:	ldr	x4, [x0, #152]
 bf4:	add	x3, sp, #0x30
 bf8:	mov	w2, #0x1                   	// #1
 bfc:	mov	x1, #0x2                   	// #2
 c00:	ldr	x0, [x5, #8]
 c04:	blr	x4
 c08:	cbz	w0, cc8 <fprintf@plt+0x4e8>
 c0c:	ldr	d0, [sp, #56]
 c10:	fcvtzs	w2, d0
 c14:	and	w2, w2, #0x1f
 c18:	ldr	x1, [sp, #88]
 c1c:	ldr	x0, [sp, #120]
 c20:	bl	7c0 <fnmatch@plt>
 c24:	mov	w1, #0x1                   	// #1
 c28:	str	w1, [x19]
 c2c:	scvtf	d0, w0
 c30:	str	d0, [x19, #8]
 c34:	str	wzr, [x19, #16]
 c38:	mov	x0, x19
 c3c:	ldp	x19, x20, [sp, #16]
 c40:	ldp	x29, x30, [sp], #144
 c44:	ret
 c48:	str	x21, [sp, #32]
 c4c:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 c50:	add	x1, x0, #0x88
 c54:	ldr	x0, [x0, #136]
 c58:	ldr	x20, [x0, #104]
 c5c:	ldr	x21, [x1, #8]
 c60:	mov	w2, #0x5                   	// #5
 c64:	adrp	x1, 0 <memcpy@plt-0x760>
 c68:	add	x1, x1, #0xf50
 c6c:	mov	x0, #0x0                   	// #0
 c70:	bl	7d0 <dcgettext@plt>
 c74:	mov	x1, x0
 c78:	mov	x0, x21
 c7c:	blr	x20
 c80:	ldr	x21, [sp, #32]
 c84:	b	c38 <fprintf@plt+0x458>
 c88:	str	x21, [sp, #32]
 c8c:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 c90:	add	x1, x0, #0x88
 c94:	ldr	x0, [x0, #136]
 c98:	ldr	x20, [x0, #104]
 c9c:	ldr	x21, [x1, #8]
 ca0:	mov	w2, #0x5                   	// #5
 ca4:	adrp	x1, 0 <memcpy@plt-0x760>
 ca8:	add	x1, x1, #0xf78
 cac:	mov	x0, #0x0                   	// #0
 cb0:	bl	7d0 <dcgettext@plt>
 cb4:	mov	x1, x0
 cb8:	mov	x0, x21
 cbc:	blr	x20
 cc0:	ldr	x21, [sp, #32]
 cc4:	b	c38 <fprintf@plt+0x458>
 cc8:	str	x21, [sp, #32]
 ccc:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 cd0:	add	x1, x0, #0x88
 cd4:	ldr	x0, [x0, #136]
 cd8:	ldr	x20, [x0, #104]
 cdc:	ldr	x21, [x1, #8]
 ce0:	mov	w2, #0x5                   	// #5
 ce4:	adrp	x1, 0 <memcpy@plt-0x760>
 ce8:	add	x1, x1, #0xfa0
 cec:	mov	x0, #0x0                   	// #0
 cf0:	bl	7d0 <dcgettext@plt>
 cf4:	mov	x1, x0
 cf8:	mov	x0, x21
 cfc:	blr	x20
 d00:	ldr	x21, [sp, #32]
 d04:	b	c38 <fprintf@plt+0x458>

0000000000000d08 <dl_load@@Base>:
 d08:	stp	x29, x30, [sp, #-32]!
 d0c:	mov	x29, sp
 d10:	str	x19, [sp, #16]
 d14:	mov	x2, x0
 d18:	mov	x0, x1
 d1c:	adrp	x1, 12000 <dl_load@@Base+0x112f8>
 d20:	add	x3, x1, #0x88
 d24:	str	x2, [x1, #136]
 d28:	str	x0, [x3, #8]
 d2c:	ldr	w1, [x2]
 d30:	cmp	w1, #0x2
 d34:	b.ne	df8 <dl_load@@Base+0xf0>  // b.any
 d38:	ldr	w1, [x2, #4]
 d3c:	tbnz	w1, #31, df8 <dl_load@@Base+0xf0>
 d40:	adrp	x1, 12000 <dl_load@@Base+0x112f8>
 d44:	ldr	x1, [x1, #80]
 d48:	cbz	x1, e48 <dl_load@@Base+0x140>
 d4c:	ldr	x3, [x2, #48]
 d50:	adrp	x2, 12000 <dl_load@@Base+0x112f8>
 d54:	add	x2, x2, #0x50
 d58:	adrp	x1, 0 <memcpy@plt-0x760>
 d5c:	add	x1, x1, #0xe68
 d60:	blr	x3
 d64:	mov	w19, #0x0                   	// #0
 d68:	cbnz	w0, d98 <dl_load@@Base+0x90>
 d6c:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 d70:	add	x4, x0, #0x88
 d74:	ldr	x0, [x0, #136]
 d78:	ldr	x3, [x0, #104]
 d7c:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 d80:	ldr	x2, [x0, #80]
 d84:	adrp	x1, 1000 <dl_load@@Base+0x2f8>
 d88:	add	x1, x1, #0x28
 d8c:	ldr	x0, [x4, #8]
 d90:	blr	x3
 d94:	mov	w19, #0x1                   	// #1
 d98:	bl	8f8 <fprintf@plt+0x118>
 d9c:	cbnz	w0, dc4 <dl_load@@Base+0xbc>
 da0:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 da4:	add	x3, x0, #0x88
 da8:	ldr	x0, [x0, #136]
 dac:	ldr	x2, [x0, #104]
 db0:	adrp	x1, 1000 <dl_load@@Base+0x2f8>
 db4:	add	x1, x1, #0x48
 db8:	ldr	x0, [x3, #8]
 dbc:	blr	x2
 dc0:	add	w19, w19, #0x1
 dc4:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 dc8:	add	x3, x0, #0x88
 dcc:	ldr	x0, [x0, #136]
 dd0:	ldr	x2, [x0, #88]
 dd4:	adrp	x1, 1000 <dl_load@@Base+0x2f8>
 dd8:	add	x1, x1, #0x70
 ddc:	ldr	x0, [x3, #8]
 de0:	blr	x2
 de4:	cmp	w19, #0x0
 de8:	cset	w0, eq  // eq = none
 dec:	ldr	x19, [sp, #16]
 df0:	ldp	x29, x30, [sp], #32
 df4:	ret
 df8:	adrp	x19, 11000 <dl_load@@Base+0x102f8>
 dfc:	ldr	x19, [x19, #4048]
 e00:	ldr	x3, [x19]
 e04:	mov	x2, #0x25                  	// #37
 e08:	mov	x1, #0x1                   	// #1
 e0c:	adrp	x0, 0 <memcpy@plt-0x760>
 e10:	add	x0, x0, #0xfc8
 e14:	bl	7b0 <fwrite@plt>
 e18:	adrp	x0, 12000 <dl_load@@Base+0x112f8>
 e1c:	ldr	x0, [x0, #136]
 e20:	ldr	w5, [x0, #4]
 e24:	ldr	w4, [x0]
 e28:	mov	w3, #0x0                   	// #0
 e2c:	mov	w2, #0x2                   	// #2
 e30:	adrp	x1, 0 <memcpy@plt-0x760>
 e34:	add	x1, x1, #0xff0
 e38:	ldr	x0, [x19]
 e3c:	bl	7e0 <fprintf@plt>
 e40:	mov	w0, #0x1                   	// #1
 e44:	bl	780 <exit@plt>
 e48:	mov	w19, #0x0                   	// #0
 e4c:	b	d98 <dl_load@@Base+0x90>

Disassembly of section .fini:

0000000000000e50 <.fini>:
 e50:	stp	x29, x30, [sp, #-16]!
 e54:	mov	x29, sp
 e58:	ldp	x29, x30, [sp], #16
 e5c:	ret
