
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha512.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e10 <.init>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	bl	f80 <_Py_strhex@plt+0x10>
 e1c:	ldp	x29, x30, [sp], #16
 e20:	ret

Disassembly of section .plt:

0000000000000e30 <memcpy@plt-0x20>:
 e30:	stp	x16, x30, [sp, #-16]!
 e34:	adrp	x16, 14000 <PyInit__sha512@@Base+0x10034>
 e38:	ldr	x17, [x16, #4088]
 e3c:	add	x16, x16, #0xff8
 e40:	br	x17
 e44:	nop
 e48:	nop
 e4c:	nop

0000000000000e50 <memcpy@plt>:
 e50:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16]
 e58:	add	x16, x16, #0x0
 e5c:	br	x17

0000000000000e60 <PyBuffer_Release@plt>:
 e60:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #8]
 e68:	add	x16, x16, #0x8
 e6c:	br	x17

0000000000000e70 <__cxa_finalize@plt>:
 e70:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #16]
 e78:	add	x16, x16, #0x10
 e7c:	br	x17

0000000000000e80 <PyBytes_FromStringAndSize@plt>:
 e80:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #24]
 e88:	add	x16, x16, #0x18
 e8c:	br	x17

0000000000000e90 <_Py_Dealloc@plt>:
 e90:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #32]
 e98:	add	x16, x16, #0x20
 e9c:	br	x17

0000000000000ea0 <_PyArg_UnpackKeywords@plt>:
 ea0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #40]
 ea8:	add	x16, x16, #0x28
 eac:	br	x17

0000000000000eb0 <PyErr_SetString@plt>:
 eb0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #48]
 eb8:	add	x16, x16, #0x30
 ebc:	br	x17

0000000000000ec0 <memset@plt>:
 ec0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #56]
 ec8:	add	x16, x16, #0x38
 ecc:	br	x17

0000000000000ed0 <PyObject_Free@plt>:
 ed0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #64]
 ed8:	add	x16, x16, #0x40
 edc:	br	x17

0000000000000ee0 <PyType_Ready@plt>:
 ee0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #72]
 ee8:	add	x16, x16, #0x48
 eec:	br	x17

0000000000000ef0 <PyLong_FromLong@plt>:
 ef0:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #80]
 ef8:	add	x16, x16, #0x50
 efc:	br	x17

0000000000000f00 <__gmon_start__@plt>:
 f00:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #88]
 f08:	add	x16, x16, #0x58
 f0c:	br	x17

0000000000000f10 <PyErr_Occurred@plt>:
 f10:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f14:	ldr	x17, [x16, #96]
 f18:	add	x16, x16, #0x60
 f1c:	br	x17

0000000000000f20 <PyModule_Create2@plt>:
 f20:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f24:	ldr	x17, [x16, #104]
 f28:	add	x16, x16, #0x68
 f2c:	br	x17

0000000000000f30 <PyObject_GetBuffer@plt>:
 f30:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f34:	ldr	x17, [x16, #112]
 f38:	add	x16, x16, #0x70
 f3c:	br	x17

0000000000000f40 <_PyObject_New@plt>:
 f40:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f44:	ldr	x17, [x16, #120]
 f48:	add	x16, x16, #0x78
 f4c:	br	x17

0000000000000f50 <PyModule_AddObject@plt>:
 f50:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f54:	ldr	x17, [x16, #128]
 f58:	add	x16, x16, #0x80
 f5c:	br	x17

0000000000000f60 <PyUnicode_FromStringAndSize@plt>:
 f60:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f64:	ldr	x17, [x16, #136]
 f68:	add	x16, x16, #0x88
 f6c:	br	x17

0000000000000f70 <_Py_strhex@plt>:
 f70:	adrp	x16, 15000 <memcpy@GLIBC_2.17>
 f74:	ldr	x17, [x16, #144]
 f78:	add	x16, x16, #0x90
 f7c:	br	x17

Disassembly of section .text:

0000000000000f80 <PyInit__sha512@@Base-0x304c>:
     f80:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
     f84:	ldr	x0, [x0, #4040]
     f88:	cbz	x0, f90 <_Py_strhex@plt+0x20>
     f8c:	b	f00 <__gmon_start__@plt>
     f90:	ret
     f94:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
     f98:	add	x0, x0, #0x690
     f9c:	adrp	x1, 15000 <PyInit__sha512@@Base+0x11034>
     fa0:	add	x1, x1, #0x690
     fa4:	cmp	x0, x1
     fa8:	b.eq	fd4 <_Py_strhex@plt+0x64>  // b.none
     fac:	adrp	x1, 14000 <PyInit__sha512@@Base+0x10034>
     fb0:	ldr	x1, [x1, #4008]
     fb4:	cbz	x1, fd4 <_Py_strhex@plt+0x64>
     fb8:	stp	x29, x30, [sp, #-16]!
     fbc:	mov	x29, sp
     fc0:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
     fc4:	add	x0, x0, #0x690
     fc8:	blr	x1
     fcc:	ldp	x29, x30, [sp], #16
     fd0:	ret
     fd4:	ret
     fd8:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
     fdc:	add	x0, x0, #0x690
     fe0:	adrp	x1, 15000 <PyInit__sha512@@Base+0x11034>
     fe4:	add	x1, x1, #0x690
     fe8:	sub	x0, x0, x1
     fec:	lsr	x1, x0, #63
     ff0:	add	x0, x1, x0, asr #3
     ff4:	cmp	xzr, x0, asr #1
     ff8:	b.eq	1028 <_Py_strhex@plt+0xb8>  // b.none
     ffc:	asr	x1, x0, #1
    1000:	adrp	x2, 14000 <PyInit__sha512@@Base+0x10034>
    1004:	ldr	x2, [x2, #4064]
    1008:	cbz	x2, 1028 <_Py_strhex@plt+0xb8>
    100c:	stp	x29, x30, [sp, #-16]!
    1010:	mov	x29, sp
    1014:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    1018:	add	x0, x0, #0x690
    101c:	blr	x2
    1020:	ldp	x29, x30, [sp], #16
    1024:	ret
    1028:	ret
    102c:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    1030:	ldrb	w0, [x0, #1680]
    1034:	cbnz	w0, 1070 <_Py_strhex@plt+0x100>
    1038:	stp	x29, x30, [sp, #-16]!
    103c:	mov	x29, sp
    1040:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    1044:	ldr	x0, [x0, #4016]
    1048:	cbz	x0, 1058 <_Py_strhex@plt+0xe8>
    104c:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    1050:	ldr	x0, [x0, #152]
    1054:	bl	e70 <__cxa_finalize@plt>
    1058:	bl	f94 <_Py_strhex@plt+0x24>
    105c:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    1060:	mov	w1, #0x1                   	// #1
    1064:	strb	w1, [x0, #1680]
    1068:	ldp	x29, x30, [sp], #16
    106c:	ret
    1070:	ret
    1074:	stp	x29, x30, [sp, #-16]!
    1078:	mov	x29, sp
    107c:	bl	fd8 <_Py_strhex@plt+0x68>
    1080:	ldp	x29, x30, [sp], #16
    1084:	ret
    1088:	sub	sp, sp, #0x2c0
    108c:	ldp	x2, x3, [x0, #88]
    1090:	stp	x2, x3, [sp]
    1094:	ldp	x2, x3, [x0, #104]
    1098:	stp	x2, x3, [sp, #16]
    109c:	ldp	x2, x3, [x0, #120]
    10a0:	stp	x2, x3, [sp, #32]
    10a4:	ldp	x2, x3, [x0, #136]
    10a8:	stp	x2, x3, [sp, #48]
    10ac:	ldp	x2, x3, [x0, #152]
    10b0:	stp	x2, x3, [sp, #64]
    10b4:	ldp	x2, x3, [x0, #168]
    10b8:	stp	x2, x3, [sp, #80]
    10bc:	ldp	x2, x3, [x0, #184]
    10c0:	stp	x2, x3, [sp, #96]
    10c4:	ldp	x2, x3, [x0, #200]
    10c8:	stp	x2, x3, [sp, #112]
    10cc:	mov	x1, sp
    10d0:	add	x4, sp, #0x80
    10d4:	ldr	x2, [x1]
    10d8:	lsr	x3, x2, #56
    10dc:	strb	w3, [x1]
    10e0:	lsr	x3, x2, #48
    10e4:	strb	w3, [x1, #1]
    10e8:	lsr	x3, x2, #40
    10ec:	strb	w3, [x1, #2]
    10f0:	lsr	x3, x2, #32
    10f4:	strb	w3, [x1, #3]
    10f8:	lsr	x3, x2, #24
    10fc:	strb	w3, [x1, #4]
    1100:	lsr	x3, x2, #16
    1104:	strb	w3, [x1, #5]
    1108:	lsr	x3, x2, #8
    110c:	strb	w3, [x1, #6]
    1110:	strb	w2, [x1, #7]
    1114:	add	x1, x1, #0x8
    1118:	cmp	x1, x4
    111c:	b.ne	10d4 <_Py_strhex@plt+0x164>  // b.any
    1120:	mov	x2, sp
    1124:	add	x5, x2, #0x200
    1128:	ldr	x1, [x2, #112]
    112c:	ldr	x3, [x2, #8]
    1130:	ror	x4, x1, #61
    1134:	eor	x4, x4, x1, ror #19
    1138:	eor	x1, x4, x1, lsr #6
    113c:	ror	x4, x3, #8
    1140:	eor	x4, x4, x3, ror #1
    1144:	eor	x3, x4, x3, lsr #7
    1148:	add	x1, x1, x3
    114c:	ldr	x3, [x2, #72]
    1150:	ldr	x4, [x2]
    1154:	add	x3, x3, x4
    1158:	add	x1, x1, x3
    115c:	str	x1, [x2, #128]
    1160:	add	x2, x2, #0x8
    1164:	cmp	x2, x5
    1168:	b.ne	1128 <_Py_strhex@plt+0x1b8>  // b.any
    116c:	mov	x1, #0x1                   	// #1
    1170:	add	x2, x0, #0x8
    1174:	add	x4, sp, #0x280
    1178:	add	x0, x4, x1, lsl #3
    117c:	ldr	x3, [x2, x1, lsl #3]
    1180:	stur	x3, [x0, #-8]
    1184:	add	x1, x1, #0x1
    1188:	cmp	x1, #0x9
    118c:	b.ne	1178 <_Py_strhex@plt+0x208>  // b.any
    1190:	ldr	x8, [sp, #672]
    1194:	ldr	x3, [sp, #688]
    1198:	ldr	x10, [sp, #680]
    119c:	ror	x0, x8, #18
    11a0:	eor	x0, x0, x8, ror #14
    11a4:	eor	x0, x0, x8, ror #41
    11a8:	eor	x1, x10, x3
    11ac:	and	x1, x1, x8
    11b0:	eor	x1, x1, x3
    11b4:	add	x0, x0, x1
    11b8:	ldr	x1, [sp, #696]
    11bc:	ldr	x4, [sp]
    11c0:	add	x1, x1, x4
    11c4:	add	x0, x0, x1
    11c8:	mov	x1, #0xae22                	// #44578
    11cc:	movk	x1, #0xd728, lsl #16
    11d0:	movk	x1, #0x2f98, lsl #32
    11d4:	movk	x1, #0x428a, lsl #48
    11d8:	add	x0, x0, x1
    11dc:	ldr	x9, [sp, #640]
    11e0:	ldr	x5, [sp, #648]
    11e4:	ldr	x6, [sp, #656]
    11e8:	ldr	x7, [sp, #664]
    11ec:	add	x7, x0, x7
    11f0:	ror	x4, x9, #34
    11f4:	eor	x4, x4, x9, ror #28
    11f8:	eor	x4, x4, x9, ror #39
    11fc:	orr	x1, x9, x5
    1200:	and	x1, x1, x6
    1204:	and	x11, x9, x5
    1208:	orr	x1, x1, x11
    120c:	add	x4, x4, x1
    1210:	add	x4, x4, x0
    1214:	eor	x1, x10, x8
    1218:	and	x1, x1, x7
    121c:	eor	x1, x1, x10
    1220:	mov	x0, #0x65cd                	// #26061
    1224:	movk	x0, #0x23ef, lsl #16
    1228:	movk	x0, #0x4491, lsl #32
    122c:	movk	x0, #0x7137, lsl #48
    1230:	add	x1, x1, x0
    1234:	ldr	x0, [sp, #8]
    1238:	add	x3, x3, x0
    123c:	add	x1, x1, x3
    1240:	ror	x3, x7, #18
    1244:	eor	x3, x3, x7, ror #14
    1248:	eor	x3, x3, x7, ror #41
    124c:	add	x1, x1, x3
    1250:	add	x6, x6, x1
    1254:	ror	x3, x4, #34
    1258:	eor	x3, x3, x4, ror #28
    125c:	eor	x3, x3, x4, ror #39
    1260:	orr	x0, x9, x4
    1264:	and	x0, x0, x5
    1268:	and	x11, x9, x4
    126c:	orr	x0, x0, x11
    1270:	add	x3, x3, x0
    1274:	add	x3, x3, x1
    1278:	eor	x1, x7, x8
    127c:	and	x1, x1, x6
    1280:	eor	x1, x1, x8
    1284:	mov	x0, #0x3b2f                	// #15151
    1288:	movk	x0, #0xec4d, lsl #16
    128c:	movk	x0, #0xfbcf, lsl #32
    1290:	movk	x0, #0xb5c0, lsl #48
    1294:	add	x1, x1, x0
    1298:	ldr	x0, [sp, #16]
    129c:	add	x10, x10, x0
    12a0:	add	x1, x1, x10
    12a4:	ror	x10, x6, #18
    12a8:	eor	x10, x10, x6, ror #14
    12ac:	eor	x10, x10, x6, ror #41
    12b0:	add	x1, x1, x10
    12b4:	add	x5, x5, x1
    12b8:	ror	x10, x3, #34
    12bc:	eor	x10, x10, x3, ror #28
    12c0:	eor	x10, x10, x3, ror #39
    12c4:	orr	x0, x4, x3
    12c8:	and	x0, x0, x9
    12cc:	and	x11, x4, x3
    12d0:	orr	x0, x0, x11
    12d4:	add	x10, x10, x0
    12d8:	add	x10, x10, x1
    12dc:	eor	x1, x6, x7
    12e0:	and	x1, x1, x5
    12e4:	eor	x1, x1, x7
    12e8:	mov	x0, #0xdbbc                	// #56252
    12ec:	movk	x0, #0x8189, lsl #16
    12f0:	movk	x0, #0xdba5, lsl #32
    12f4:	movk	x0, #0xe9b5, lsl #48
    12f8:	add	x1, x1, x0
    12fc:	ldr	x0, [sp, #24]
    1300:	add	x0, x8, x0
    1304:	add	x0, x1, x0
    1308:	ror	x1, x5, #18
    130c:	eor	x1, x1, x5, ror #14
    1310:	eor	x1, x1, x5, ror #41
    1314:	add	x0, x0, x1
    1318:	add	x9, x9, x0
    131c:	ror	x11, x10, #34
    1320:	eor	x11, x11, x10, ror #28
    1324:	eor	x11, x11, x10, ror #39
    1328:	orr	x1, x3, x10
    132c:	and	x1, x1, x4
    1330:	and	x8, x3, x10
    1334:	orr	x1, x1, x8
    1338:	add	x11, x11, x1
    133c:	add	x11, x11, x0
    1340:	eor	x0, x5, x6
    1344:	and	x0, x0, x9
    1348:	eor	x0, x0, x6
    134c:	add	x0, x0, x7
    1350:	ldr	x1, [sp, #32]
    1354:	mov	x7, #0xb538                	// #46392
    1358:	movk	x7, #0xf348, lsl #16
    135c:	movk	x7, #0xc25b, lsl #32
    1360:	movk	x7, #0x3956, lsl #48
    1364:	add	x1, x1, x7
    1368:	add	x0, x0, x1
    136c:	ror	x1, x9, #18
    1370:	eor	x1, x1, x9, ror #14
    1374:	eor	x1, x1, x9, ror #41
    1378:	add	x0, x0, x1
    137c:	add	x4, x4, x0
    1380:	ror	x8, x11, #34
    1384:	eor	x8, x8, x11, ror #28
    1388:	eor	x8, x8, x11, ror #39
    138c:	orr	x1, x10, x11
    1390:	and	x1, x1, x3
    1394:	and	x7, x10, x11
    1398:	orr	x1, x1, x7
    139c:	add	x8, x8, x1
    13a0:	add	x8, x8, x0
    13a4:	eor	x0, x9, x5
    13a8:	and	x0, x0, x4
    13ac:	eor	x0, x0, x5
    13b0:	add	x0, x0, x6
    13b4:	ldr	x1, [sp, #40]
    13b8:	mov	x6, #0xd019                	// #53273
    13bc:	movk	x6, #0xb605, lsl #16
    13c0:	movk	x6, #0x11f1, lsl #32
    13c4:	movk	x6, #0x59f1, lsl #48
    13c8:	add	x1, x1, x6
    13cc:	add	x0, x0, x1
    13d0:	ror	x1, x4, #18
    13d4:	eor	x1, x1, x4, ror #14
    13d8:	eor	x1, x1, x4, ror #41
    13dc:	add	x0, x0, x1
    13e0:	add	x1, x3, x0
    13e4:	ror	x7, x8, #34
    13e8:	eor	x7, x7, x8, ror #28
    13ec:	eor	x7, x7, x8, ror #39
    13f0:	orr	x3, x11, x8
    13f4:	and	x3, x3, x10
    13f8:	and	x6, x11, x8
    13fc:	orr	x3, x3, x6
    1400:	add	x7, x7, x3
    1404:	add	x7, x7, x0
    1408:	eor	x0, x4, x9
    140c:	and	x0, x0, x1
    1410:	eor	x0, x0, x9
    1414:	add	x0, x0, x5
    1418:	ldr	x3, [sp, #48]
    141c:	mov	x5, #0x4f9b                	// #20379
    1420:	movk	x5, #0xaf19, lsl #16
    1424:	movk	x5, #0x82a4, lsl #32
    1428:	movk	x5, #0x923f, lsl #48
    142c:	add	x3, x3, x5
    1430:	add	x0, x0, x3
    1434:	ror	x3, x1, #18
    1438:	eor	x3, x3, x1, ror #14
    143c:	eor	x3, x3, x1, ror #41
    1440:	add	x0, x0, x3
    1444:	add	x10, x10, x0
    1448:	ror	x6, x7, #34
    144c:	eor	x6, x6, x7, ror #28
    1450:	eor	x6, x6, x7, ror #39
    1454:	orr	x3, x8, x7
    1458:	and	x3, x3, x11
    145c:	and	x5, x8, x7
    1460:	orr	x3, x3, x5
    1464:	add	x6, x6, x3
    1468:	add	x6, x6, x0
    146c:	eor	x0, x1, x4
    1470:	and	x0, x0, x10
    1474:	eor	x0, x0, x4
    1478:	add	x0, x0, x9
    147c:	ldr	x3, [sp, #56]
    1480:	mov	x5, #0x8118                	// #33048
    1484:	movk	x5, #0xda6d, lsl #16
    1488:	movk	x5, #0x5ed5, lsl #32
    148c:	movk	x5, #0xab1c, lsl #48
    1490:	add	x3, x3, x5
    1494:	add	x0, x0, x3
    1498:	ror	x3, x10, #18
    149c:	eor	x3, x3, x10, ror #14
    14a0:	eor	x3, x3, x10, ror #41
    14a4:	add	x0, x0, x3
    14a8:	add	x12, x11, x0
    14ac:	ror	x3, x6, #34
    14b0:	eor	x3, x3, x6, ror #28
    14b4:	eor	x3, x3, x6, ror #39
    14b8:	orr	x5, x7, x6
    14bc:	and	x5, x5, x8
    14c0:	and	x9, x7, x6
    14c4:	orr	x5, x5, x9
    14c8:	add	x3, x3, x5
    14cc:	add	x3, x3, x0
    14d0:	eor	x0, x10, x1
    14d4:	and	x0, x0, x12
    14d8:	eor	x0, x0, x1
    14dc:	add	x0, x0, x4
    14e0:	ldr	x4, [sp, #64]
    14e4:	mov	x5, #0x242                 	// #578
    14e8:	movk	x5, #0xa303, lsl #16
    14ec:	movk	x5, #0xaa98, lsl #32
    14f0:	movk	x5, #0xd807, lsl #48
    14f4:	add	x4, x4, x5
    14f8:	add	x0, x0, x4
    14fc:	ror	x4, x12, #18
    1500:	eor	x4, x4, x12, ror #14
    1504:	eor	x4, x4, x12, ror #41
    1508:	add	x0, x0, x4
    150c:	add	x11, x8, x0
    1510:	ror	x5, x3, #34
    1514:	eor	x5, x5, x3, ror #28
    1518:	eor	x5, x5, x3, ror #39
    151c:	orr	x4, x6, x3
    1520:	and	x4, x4, x7
    1524:	and	x8, x6, x3
    1528:	orr	x4, x4, x8
    152c:	add	x5, x5, x4
    1530:	add	x5, x5, x0
    1534:	eor	x0, x12, x10
    1538:	and	x0, x0, x11
    153c:	eor	x0, x0, x10
    1540:	add	x0, x0, x1
    1544:	ldr	x1, [sp, #72]
    1548:	mov	x4, #0x6fbe                	// #28606
    154c:	movk	x4, #0x4570, lsl #16
    1550:	movk	x4, #0x5b01, lsl #32
    1554:	movk	x4, #0x1283, lsl #48
    1558:	add	x1, x1, x4
    155c:	add	x0, x0, x1
    1560:	ror	x1, x11, #18
    1564:	eor	x1, x1, x11, ror #14
    1568:	eor	x1, x1, x11, ror #41
    156c:	add	x0, x0, x1
    1570:	add	x9, x7, x0
    1574:	ror	x1, x5, #34
    1578:	eor	x1, x1, x5, ror #28
    157c:	eor	x1, x1, x5, ror #39
    1580:	orr	x4, x3, x5
    1584:	and	x4, x4, x6
    1588:	and	x7, x3, x5
    158c:	orr	x4, x4, x7
    1590:	add	x1, x1, x4
    1594:	add	x0, x1, x0
    1598:	eor	x1, x11, x12
    159c:	and	x1, x1, x9
    15a0:	eor	x1, x1, x12
    15a4:	add	x1, x1, x10
    15a8:	ldr	x4, [sp, #80]
    15ac:	mov	x7, #0xb28c                	// #45708
    15b0:	movk	x7, #0x4ee4, lsl #16
    15b4:	movk	x7, #0x85be, lsl #32
    15b8:	movk	x7, #0x2431, lsl #48
    15bc:	add	x4, x4, x7
    15c0:	add	x1, x1, x4
    15c4:	ror	x4, x9, #18
    15c8:	eor	x4, x4, x9, ror #14
    15cc:	eor	x4, x4, x9, ror #41
    15d0:	add	x1, x1, x4
    15d4:	add	x7, x6, x1
    15d8:	ror	x4, x0, #34
    15dc:	eor	x4, x4, x0, ror #28
    15e0:	eor	x4, x4, x0, ror #39
    15e4:	orr	x6, x5, x0
    15e8:	and	x6, x6, x3
    15ec:	and	x8, x5, x0
    15f0:	orr	x6, x6, x8
    15f4:	add	x4, x4, x6
    15f8:	add	x4, x4, x1
    15fc:	eor	x1, x9, x11
    1600:	and	x1, x1, x7
    1604:	eor	x1, x1, x11
    1608:	add	x1, x1, x12
    160c:	ldr	x6, [sp, #88]
    1610:	mov	x8, #0xb4e2                	// #46306
    1614:	movk	x8, #0xd5ff, lsl #16
    1618:	movk	x8, #0x7dc3, lsl #32
    161c:	movk	x8, #0x550c, lsl #48
    1620:	add	x6, x6, x8
    1624:	add	x1, x1, x6
    1628:	ror	x6, x7, #18
    162c:	eor	x6, x6, x7, ror #14
    1630:	eor	x6, x6, x7, ror #41
    1634:	add	x1, x1, x6
    1638:	add	x8, x3, x1
    163c:	ror	x3, x4, #34
    1640:	eor	x3, x3, x4, ror #28
    1644:	eor	x3, x3, x4, ror #39
    1648:	orr	x6, x0, x4
    164c:	and	x6, x6, x5
    1650:	and	x10, x0, x4
    1654:	orr	x6, x6, x10
    1658:	add	x3, x3, x6
    165c:	add	x3, x3, x1
    1660:	eor	x1, x7, x9
    1664:	and	x1, x1, x8
    1668:	eor	x1, x1, x9
    166c:	add	x1, x1, x11
    1670:	ldr	x6, [sp, #96]
    1674:	mov	x10, #0x896f                	// #35183
    1678:	movk	x10, #0xf27b, lsl #16
    167c:	movk	x10, #0x5d74, lsl #32
    1680:	movk	x10, #0x72be, lsl #48
    1684:	add	x6, x6, x10
    1688:	add	x1, x1, x6
    168c:	ror	x6, x8, #18
    1690:	eor	x6, x6, x8, ror #14
    1694:	eor	x6, x6, x8, ror #41
    1698:	add	x1, x1, x6
    169c:	add	x6, x5, x1
    16a0:	ror	x5, x3, #34
    16a4:	eor	x5, x5, x3, ror #28
    16a8:	eor	x5, x5, x3, ror #39
    16ac:	orr	x10, x4, x3
    16b0:	and	x10, x10, x0
    16b4:	and	x11, x4, x3
    16b8:	orr	x10, x10, x11
    16bc:	add	x5, x5, x10
    16c0:	add	x1, x5, x1
    16c4:	eor	x5, x8, x7
    16c8:	and	x5, x5, x6
    16cc:	eor	x5, x5, x7
    16d0:	add	x5, x5, x9
    16d4:	ldr	x9, [sp, #104]
    16d8:	mov	x10, #0x96b1                	// #38577
    16dc:	movk	x10, #0x3b16, lsl #16
    16e0:	movk	x10, #0xb1fe, lsl #32
    16e4:	movk	x10, #0x80de, lsl #48
    16e8:	add	x9, x9, x10
    16ec:	add	x5, x5, x9
    16f0:	ror	x9, x6, #18
    16f4:	eor	x9, x9, x6, ror #14
    16f8:	eor	x9, x9, x6, ror #41
    16fc:	add	x5, x5, x9
    1700:	add	x9, x0, x5
    1704:	ror	x0, x1, #34
    1708:	eor	x0, x0, x1, ror #28
    170c:	eor	x0, x0, x1, ror #39
    1710:	orr	x10, x3, x1
    1714:	and	x10, x10, x4
    1718:	and	x11, x3, x1
    171c:	orr	x10, x10, x11
    1720:	add	x0, x0, x10
    1724:	add	x0, x0, x5
    1728:	eor	x5, x6, x8
    172c:	and	x5, x5, x9
    1730:	eor	x5, x5, x8
    1734:	add	x5, x5, x7
    1738:	ldr	x7, [sp, #112]
    173c:	mov	x10, #0x1235                	// #4661
    1740:	movk	x10, #0x25c7, lsl #16
    1744:	movk	x10, #0x6a7, lsl #32
    1748:	movk	x10, #0x9bdc, lsl #48
    174c:	add	x7, x7, x10
    1750:	add	x5, x5, x7
    1754:	ror	x7, x9, #18
    1758:	eor	x7, x7, x9, ror #14
    175c:	eor	x7, x7, x9, ror #41
    1760:	add	x5, x5, x7
    1764:	add	x7, x4, x5
    1768:	ror	x4, x0, #34
    176c:	eor	x4, x4, x0, ror #28
    1770:	eor	x4, x4, x0, ror #39
    1774:	orr	x10, x1, x0
    1778:	and	x10, x10, x3
    177c:	and	x11, x1, x0
    1780:	orr	x10, x10, x11
    1784:	add	x4, x4, x10
    1788:	add	x4, x4, x5
    178c:	eor	x5, x9, x6
    1790:	and	x5, x5, x7
    1794:	eor	x5, x5, x6
    1798:	add	x5, x5, x8
    179c:	ldr	x8, [sp, #120]
    17a0:	mov	x10, #0x2694                	// #9876
    17a4:	movk	x10, #0xcf69, lsl #16
    17a8:	movk	x10, #0xf174, lsl #32
    17ac:	movk	x10, #0xc19b, lsl #48
    17b0:	add	x8, x8, x10
    17b4:	add	x5, x5, x8
    17b8:	ror	x8, x7, #18
    17bc:	eor	x8, x8, x7, ror #14
    17c0:	eor	x8, x8, x7, ror #41
    17c4:	add	x5, x5, x8
    17c8:	add	x8, x3, x5
    17cc:	ror	x3, x4, #34
    17d0:	eor	x3, x3, x4, ror #28
    17d4:	eor	x3, x3, x4, ror #39
    17d8:	orr	x10, x0, x4
    17dc:	and	x10, x10, x1
    17e0:	and	x11, x0, x4
    17e4:	orr	x10, x10, x11
    17e8:	add	x3, x3, x10
    17ec:	add	x3, x3, x5
    17f0:	eor	x5, x7, x9
    17f4:	and	x5, x5, x8
    17f8:	eor	x5, x5, x9
    17fc:	add	x5, x5, x6
    1800:	ldr	x6, [sp, #128]
    1804:	mov	x10, #0x4ad2                	// #19154
    1808:	movk	x10, #0x9ef1, lsl #16
    180c:	movk	x10, #0x69c1, lsl #32
    1810:	movk	x10, #0xe49b, lsl #48
    1814:	add	x6, x6, x10
    1818:	add	x5, x5, x6
    181c:	ror	x6, x8, #18
    1820:	eor	x6, x6, x8, ror #14
    1824:	eor	x6, x6, x8, ror #41
    1828:	add	x5, x5, x6
    182c:	add	x6, x1, x5
    1830:	ror	x1, x3, #34
    1834:	eor	x1, x1, x3, ror #28
    1838:	eor	x1, x1, x3, ror #39
    183c:	orr	x10, x4, x3
    1840:	and	x10, x10, x0
    1844:	and	x11, x4, x3
    1848:	orr	x10, x10, x11
    184c:	add	x1, x1, x10
    1850:	add	x1, x1, x5
    1854:	eor	x5, x8, x7
    1858:	and	x5, x5, x6
    185c:	eor	x5, x5, x7
    1860:	add	x5, x5, x9
    1864:	ldr	x9, [sp, #136]
    1868:	mov	x10, #0x25e3                	// #9699
    186c:	movk	x10, #0x384f, lsl #16
    1870:	movk	x10, #0x4786, lsl #32
    1874:	movk	x10, #0xefbe, lsl #48
    1878:	add	x9, x9, x10
    187c:	add	x5, x5, x9
    1880:	ror	x9, x6, #18
    1884:	eor	x9, x9, x6, ror #14
    1888:	eor	x9, x9, x6, ror #41
    188c:	add	x5, x5, x9
    1890:	add	x9, x0, x5
    1894:	ror	x0, x1, #34
    1898:	eor	x0, x0, x1, ror #28
    189c:	eor	x0, x0, x1, ror #39
    18a0:	orr	x10, x3, x1
    18a4:	and	x10, x10, x4
    18a8:	and	x11, x3, x1
    18ac:	orr	x10, x10, x11
    18b0:	add	x0, x0, x10
    18b4:	add	x0, x0, x5
    18b8:	eor	x5, x6, x8
    18bc:	and	x5, x5, x9
    18c0:	eor	x5, x5, x8
    18c4:	add	x5, x5, x7
    18c8:	ldr	x7, [sp, #144]
    18cc:	mov	x10, #0xd5b5                	// #54709
    18d0:	movk	x10, #0x8b8c, lsl #16
    18d4:	movk	x10, #0x9dc6, lsl #32
    18d8:	movk	x10, #0xfc1, lsl #48
    18dc:	add	x7, x7, x10
    18e0:	add	x5, x5, x7
    18e4:	ror	x7, x9, #18
    18e8:	eor	x7, x7, x9, ror #14
    18ec:	eor	x7, x7, x9, ror #41
    18f0:	add	x5, x5, x7
    18f4:	add	x7, x4, x5
    18f8:	ror	x4, x0, #34
    18fc:	eor	x4, x4, x0, ror #28
    1900:	eor	x4, x4, x0, ror #39
    1904:	orr	x10, x1, x0
    1908:	and	x10, x10, x3
    190c:	and	x11, x1, x0
    1910:	orr	x10, x10, x11
    1914:	add	x4, x4, x10
    1918:	add	x4, x4, x5
    191c:	eor	x5, x9, x6
    1920:	and	x5, x5, x7
    1924:	eor	x5, x5, x6
    1928:	add	x5, x5, x8
    192c:	ldr	x8, [sp, #152]
    1930:	mov	x10, #0x9c65                	// #40037
    1934:	movk	x10, #0x77ac, lsl #16
    1938:	movk	x10, #0xa1cc, lsl #32
    193c:	movk	x10, #0x240c, lsl #48
    1940:	add	x8, x8, x10
    1944:	add	x5, x5, x8
    1948:	ror	x8, x7, #18
    194c:	eor	x8, x8, x7, ror #14
    1950:	eor	x8, x8, x7, ror #41
    1954:	add	x5, x5, x8
    1958:	add	x8, x3, x5
    195c:	ror	x3, x4, #34
    1960:	eor	x3, x3, x4, ror #28
    1964:	eor	x3, x3, x4, ror #39
    1968:	orr	x10, x0, x4
    196c:	and	x10, x10, x1
    1970:	and	x11, x0, x4
    1974:	orr	x10, x10, x11
    1978:	add	x3, x3, x10
    197c:	add	x3, x3, x5
    1980:	eor	x5, x7, x9
    1984:	and	x5, x5, x8
    1988:	eor	x5, x5, x9
    198c:	add	x5, x5, x6
    1990:	ldr	x6, [sp, #160]
    1994:	mov	x10, #0x275                 	// #629
    1998:	movk	x10, #0x592b, lsl #16
    199c:	movk	x10, #0x2c6f, lsl #32
    19a0:	movk	x10, #0x2de9, lsl #48
    19a4:	add	x6, x6, x10
    19a8:	add	x5, x5, x6
    19ac:	ror	x6, x8, #18
    19b0:	eor	x6, x6, x8, ror #14
    19b4:	eor	x6, x6, x8, ror #41
    19b8:	add	x5, x5, x6
    19bc:	add	x6, x1, x5
    19c0:	ror	x1, x3, #34
    19c4:	eor	x1, x1, x3, ror #28
    19c8:	eor	x1, x1, x3, ror #39
    19cc:	orr	x10, x4, x3
    19d0:	and	x10, x10, x0
    19d4:	and	x11, x4, x3
    19d8:	orr	x10, x10, x11
    19dc:	add	x1, x1, x10
    19e0:	add	x1, x1, x5
    19e4:	eor	x5, x8, x7
    19e8:	and	x5, x5, x6
    19ec:	eor	x5, x5, x7
    19f0:	add	x5, x5, x9
    19f4:	ldr	x9, [sp, #168]
    19f8:	mov	x10, #0xe483                	// #58499
    19fc:	movk	x10, #0x6ea6, lsl #16
    1a00:	movk	x10, #0x84aa, lsl #32
    1a04:	movk	x10, #0x4a74, lsl #48
    1a08:	add	x9, x9, x10
    1a0c:	add	x5, x5, x9
    1a10:	ror	x9, x6, #18
    1a14:	eor	x9, x9, x6, ror #14
    1a18:	eor	x9, x9, x6, ror #41
    1a1c:	add	x5, x5, x9
    1a20:	add	x9, x0, x5
    1a24:	ror	x0, x1, #34
    1a28:	eor	x0, x0, x1, ror #28
    1a2c:	eor	x0, x0, x1, ror #39
    1a30:	orr	x10, x3, x1
    1a34:	and	x10, x10, x4
    1a38:	and	x11, x3, x1
    1a3c:	orr	x10, x10, x11
    1a40:	add	x0, x0, x10
    1a44:	add	x0, x0, x5
    1a48:	eor	x5, x6, x8
    1a4c:	and	x5, x5, x9
    1a50:	eor	x5, x5, x8
    1a54:	add	x5, x5, x7
    1a58:	ldr	x7, [sp, #176]
    1a5c:	mov	x10, #0xfbd4                	// #64468
    1a60:	movk	x10, #0xbd41, lsl #16
    1a64:	movk	x10, #0xa9dc, lsl #32
    1a68:	movk	x10, #0x5cb0, lsl #48
    1a6c:	add	x7, x7, x10
    1a70:	add	x5, x5, x7
    1a74:	ror	x7, x9, #18
    1a78:	eor	x7, x7, x9, ror #14
    1a7c:	eor	x7, x7, x9, ror #41
    1a80:	add	x5, x5, x7
    1a84:	add	x7, x4, x5
    1a88:	ror	x4, x0, #34
    1a8c:	eor	x4, x4, x0, ror #28
    1a90:	eor	x4, x4, x0, ror #39
    1a94:	orr	x10, x1, x0
    1a98:	and	x10, x10, x3
    1a9c:	and	x11, x1, x0
    1aa0:	orr	x10, x10, x11
    1aa4:	add	x4, x4, x10
    1aa8:	add	x4, x4, x5
    1aac:	eor	x5, x9, x6
    1ab0:	and	x5, x5, x7
    1ab4:	eor	x5, x5, x6
    1ab8:	add	x5, x5, x8
    1abc:	ldr	x8, [sp, #184]
    1ac0:	mov	x10, #0x53b5                	// #21429
    1ac4:	movk	x10, #0x8311, lsl #16
    1ac8:	movk	x10, #0x88da, lsl #32
    1acc:	movk	x10, #0x76f9, lsl #48
    1ad0:	add	x8, x8, x10
    1ad4:	add	x5, x5, x8
    1ad8:	ror	x8, x7, #18
    1adc:	eor	x8, x8, x7, ror #14
    1ae0:	eor	x8, x8, x7, ror #41
    1ae4:	add	x5, x5, x8
    1ae8:	add	x8, x3, x5
    1aec:	ror	x3, x4, #34
    1af0:	eor	x3, x3, x4, ror #28
    1af4:	eor	x3, x3, x4, ror #39
    1af8:	orr	x10, x0, x4
    1afc:	and	x10, x10, x1
    1b00:	and	x11, x0, x4
    1b04:	orr	x10, x10, x11
    1b08:	add	x3, x3, x10
    1b0c:	add	x3, x3, x5
    1b10:	eor	x5, x7, x9
    1b14:	and	x5, x5, x8
    1b18:	eor	x5, x5, x9
    1b1c:	add	x5, x5, x6
    1b20:	ldr	x6, [sp, #192]
    1b24:	mov	x10, #0xdfab                	// #57259
    1b28:	movk	x10, #0xee66, lsl #16
    1b2c:	movk	x10, #0x5152, lsl #32
    1b30:	movk	x10, #0x983e, lsl #48
    1b34:	add	x6, x6, x10
    1b38:	add	x5, x5, x6
    1b3c:	ror	x6, x8, #18
    1b40:	eor	x6, x6, x8, ror #14
    1b44:	eor	x6, x6, x8, ror #41
    1b48:	add	x5, x5, x6
    1b4c:	add	x6, x1, x5
    1b50:	ror	x1, x3, #34
    1b54:	eor	x1, x1, x3, ror #28
    1b58:	eor	x1, x1, x3, ror #39
    1b5c:	orr	x10, x4, x3
    1b60:	and	x10, x10, x0
    1b64:	and	x11, x4, x3
    1b68:	orr	x10, x10, x11
    1b6c:	add	x1, x1, x10
    1b70:	add	x1, x1, x5
    1b74:	eor	x5, x8, x7
    1b78:	and	x5, x5, x6
    1b7c:	eor	x5, x5, x7
    1b80:	add	x5, x5, x9
    1b84:	ldr	x9, [sp, #200]
    1b88:	mov	x10, #0x3210                	// #12816
    1b8c:	movk	x10, #0x2db4, lsl #16
    1b90:	movk	x10, #0xc66d, lsl #32
    1b94:	movk	x10, #0xa831, lsl #48
    1b98:	add	x9, x9, x10
    1b9c:	add	x5, x5, x9
    1ba0:	ror	x9, x6, #18
    1ba4:	eor	x9, x9, x6, ror #14
    1ba8:	eor	x9, x9, x6, ror #41
    1bac:	add	x5, x5, x9
    1bb0:	add	x9, x0, x5
    1bb4:	ror	x0, x1, #34
    1bb8:	eor	x0, x0, x1, ror #28
    1bbc:	eor	x0, x0, x1, ror #39
    1bc0:	orr	x10, x3, x1
    1bc4:	and	x10, x10, x4
    1bc8:	and	x11, x3, x1
    1bcc:	orr	x10, x10, x11
    1bd0:	add	x0, x0, x10
    1bd4:	add	x0, x0, x5
    1bd8:	eor	x5, x6, x8
    1bdc:	and	x5, x5, x9
    1be0:	eor	x5, x5, x8
    1be4:	add	x5, x5, x7
    1be8:	ldr	x7, [sp, #208]
    1bec:	mov	x10, #0x213f                	// #8511
    1bf0:	movk	x10, #0x98fb, lsl #16
    1bf4:	movk	x10, #0x27c8, lsl #32
    1bf8:	movk	x10, #0xb003, lsl #48
    1bfc:	add	x7, x7, x10
    1c00:	add	x5, x5, x7
    1c04:	ror	x7, x9, #18
    1c08:	eor	x7, x7, x9, ror #14
    1c0c:	eor	x7, x7, x9, ror #41
    1c10:	add	x5, x5, x7
    1c14:	add	x7, x4, x5
    1c18:	ror	x4, x0, #34
    1c1c:	eor	x4, x4, x0, ror #28
    1c20:	eor	x4, x4, x0, ror #39
    1c24:	orr	x10, x1, x0
    1c28:	and	x10, x10, x3
    1c2c:	and	x11, x1, x0
    1c30:	orr	x10, x10, x11
    1c34:	add	x4, x4, x10
    1c38:	add	x4, x4, x5
    1c3c:	eor	x5, x9, x6
    1c40:	and	x5, x5, x7
    1c44:	eor	x5, x5, x6
    1c48:	add	x5, x5, x8
    1c4c:	ldr	x8, [sp, #216]
    1c50:	mov	x10, #0xee4                 	// #3812
    1c54:	movk	x10, #0xbeef, lsl #16
    1c58:	movk	x10, #0x7fc7, lsl #32
    1c5c:	movk	x10, #0xbf59, lsl #48
    1c60:	add	x8, x8, x10
    1c64:	add	x5, x5, x8
    1c68:	ror	x8, x7, #18
    1c6c:	eor	x8, x8, x7, ror #14
    1c70:	eor	x8, x8, x7, ror #41
    1c74:	add	x5, x5, x8
    1c78:	add	x8, x3, x5
    1c7c:	ror	x3, x4, #34
    1c80:	eor	x3, x3, x4, ror #28
    1c84:	eor	x3, x3, x4, ror #39
    1c88:	orr	x10, x0, x4
    1c8c:	and	x10, x10, x1
    1c90:	and	x11, x0, x4
    1c94:	orr	x10, x10, x11
    1c98:	add	x3, x3, x10
    1c9c:	add	x3, x3, x5
    1ca0:	eor	x5, x7, x9
    1ca4:	and	x5, x5, x8
    1ca8:	eor	x5, x5, x9
    1cac:	add	x5, x5, x6
    1cb0:	ldr	x6, [sp, #224]
    1cb4:	mov	x10, #0x8fc2                	// #36802
    1cb8:	movk	x10, #0x3da8, lsl #16
    1cbc:	movk	x10, #0xbf3, lsl #32
    1cc0:	movk	x10, #0xc6e0, lsl #48
    1cc4:	add	x6, x6, x10
    1cc8:	add	x5, x5, x6
    1ccc:	ror	x6, x8, #18
    1cd0:	eor	x6, x6, x8, ror #14
    1cd4:	eor	x6, x6, x8, ror #41
    1cd8:	add	x5, x5, x6
    1cdc:	add	x6, x1, x5
    1ce0:	ror	x1, x3, #34
    1ce4:	eor	x1, x1, x3, ror #28
    1ce8:	eor	x1, x1, x3, ror #39
    1cec:	orr	x10, x4, x3
    1cf0:	and	x10, x10, x0
    1cf4:	and	x11, x4, x3
    1cf8:	orr	x10, x10, x11
    1cfc:	add	x1, x1, x10
    1d00:	add	x1, x1, x5
    1d04:	eor	x5, x8, x7
    1d08:	and	x5, x5, x6
    1d0c:	eor	x5, x5, x7
    1d10:	add	x5, x5, x9
    1d14:	ldr	x9, [sp, #232]
    1d18:	mov	x10, #0xa725                	// #42789
    1d1c:	movk	x10, #0x930a, lsl #16
    1d20:	movk	x10, #0x9147, lsl #32
    1d24:	movk	x10, #0xd5a7, lsl #48
    1d28:	add	x9, x9, x10
    1d2c:	add	x5, x5, x9
    1d30:	ror	x9, x6, #18
    1d34:	eor	x9, x9, x6, ror #14
    1d38:	eor	x9, x9, x6, ror #41
    1d3c:	add	x5, x5, x9
    1d40:	add	x9, x0, x5
    1d44:	ror	x0, x1, #34
    1d48:	eor	x0, x0, x1, ror #28
    1d4c:	eor	x0, x0, x1, ror #39
    1d50:	orr	x10, x3, x1
    1d54:	and	x10, x10, x4
    1d58:	and	x11, x3, x1
    1d5c:	orr	x10, x10, x11
    1d60:	add	x0, x0, x10
    1d64:	add	x0, x0, x5
    1d68:	eor	x5, x6, x8
    1d6c:	and	x5, x5, x9
    1d70:	eor	x5, x5, x8
    1d74:	add	x5, x5, x7
    1d78:	ldr	x7, [sp, #240]
    1d7c:	mov	x10, #0x826f                	// #33391
    1d80:	movk	x10, #0xe003, lsl #16
    1d84:	movk	x10, #0x6351, lsl #32
    1d88:	movk	x10, #0x6ca, lsl #48
    1d8c:	add	x7, x7, x10
    1d90:	add	x5, x5, x7
    1d94:	ror	x7, x9, #18
    1d98:	eor	x7, x7, x9, ror #14
    1d9c:	eor	x7, x7, x9, ror #41
    1da0:	add	x5, x5, x7
    1da4:	add	x7, x4, x5
    1da8:	ror	x4, x0, #34
    1dac:	eor	x4, x4, x0, ror #28
    1db0:	eor	x4, x4, x0, ror #39
    1db4:	orr	x10, x1, x0
    1db8:	and	x10, x10, x3
    1dbc:	and	x11, x1, x0
    1dc0:	orr	x10, x10, x11
    1dc4:	add	x4, x4, x10
    1dc8:	add	x4, x4, x5
    1dcc:	eor	x5, x9, x6
    1dd0:	and	x5, x5, x7
    1dd4:	eor	x5, x5, x6
    1dd8:	add	x5, x5, x8
    1ddc:	ldr	x8, [sp, #248]
    1de0:	mov	x10, #0x6e70                	// #28272
    1de4:	movk	x10, #0xa0e, lsl #16
    1de8:	movk	x10, #0x2967, lsl #32
    1dec:	movk	x10, #0x1429, lsl #48
    1df0:	add	x8, x8, x10
    1df4:	add	x5, x5, x8
    1df8:	ror	x8, x7, #18
    1dfc:	eor	x8, x8, x7, ror #14
    1e00:	eor	x8, x8, x7, ror #41
    1e04:	add	x5, x5, x8
    1e08:	add	x8, x3, x5
    1e0c:	ror	x3, x4, #34
    1e10:	eor	x3, x3, x4, ror #28
    1e14:	eor	x3, x3, x4, ror #39
    1e18:	orr	x10, x0, x4
    1e1c:	and	x10, x10, x1
    1e20:	and	x11, x0, x4
    1e24:	orr	x10, x10, x11
    1e28:	add	x3, x3, x10
    1e2c:	add	x3, x3, x5
    1e30:	eor	x5, x7, x9
    1e34:	and	x5, x5, x8
    1e38:	eor	x5, x5, x9
    1e3c:	add	x5, x5, x6
    1e40:	ldr	x6, [sp, #256]
    1e44:	mov	x10, #0x2ffc                	// #12284
    1e48:	movk	x10, #0x46d2, lsl #16
    1e4c:	movk	x10, #0xa85, lsl #32
    1e50:	movk	x10, #0x27b7, lsl #48
    1e54:	add	x6, x6, x10
    1e58:	add	x5, x5, x6
    1e5c:	ror	x6, x8, #18
    1e60:	eor	x6, x6, x8, ror #14
    1e64:	eor	x6, x6, x8, ror #41
    1e68:	add	x5, x5, x6
    1e6c:	add	x6, x1, x5
    1e70:	ror	x1, x3, #34
    1e74:	eor	x1, x1, x3, ror #28
    1e78:	eor	x1, x1, x3, ror #39
    1e7c:	orr	x10, x4, x3
    1e80:	and	x10, x10, x0
    1e84:	and	x11, x4, x3
    1e88:	orr	x10, x10, x11
    1e8c:	add	x1, x1, x10
    1e90:	add	x1, x1, x5
    1e94:	eor	x5, x8, x7
    1e98:	and	x5, x5, x6
    1e9c:	eor	x5, x5, x7
    1ea0:	add	x5, x5, x9
    1ea4:	ldr	x9, [sp, #264]
    1ea8:	mov	x10, #0xc926                	// #51494
    1eac:	movk	x10, #0x5c26, lsl #16
    1eb0:	movk	x10, #0x2138, lsl #32
    1eb4:	movk	x10, #0x2e1b, lsl #48
    1eb8:	add	x9, x9, x10
    1ebc:	add	x5, x5, x9
    1ec0:	ror	x9, x6, #18
    1ec4:	eor	x9, x9, x6, ror #14
    1ec8:	eor	x9, x9, x6, ror #41
    1ecc:	add	x5, x5, x9
    1ed0:	add	x9, x0, x5
    1ed4:	ror	x0, x1, #34
    1ed8:	eor	x0, x0, x1, ror #28
    1edc:	eor	x0, x0, x1, ror #39
    1ee0:	orr	x10, x3, x1
    1ee4:	and	x10, x10, x4
    1ee8:	and	x11, x3, x1
    1eec:	orr	x10, x10, x11
    1ef0:	add	x0, x0, x10
    1ef4:	add	x0, x0, x5
    1ef8:	eor	x5, x6, x8
    1efc:	and	x5, x5, x9
    1f00:	eor	x5, x5, x8
    1f04:	add	x5, x5, x7
    1f08:	ldr	x7, [sp, #272]
    1f0c:	mov	x10, #0x2aed                	// #10989
    1f10:	movk	x10, #0x5ac4, lsl #16
    1f14:	movk	x10, #0x6dfc, lsl #32
    1f18:	movk	x10, #0x4d2c, lsl #48
    1f1c:	add	x7, x7, x10
    1f20:	add	x5, x5, x7
    1f24:	ror	x7, x9, #18
    1f28:	eor	x7, x7, x9, ror #14
    1f2c:	eor	x7, x7, x9, ror #41
    1f30:	add	x5, x5, x7
    1f34:	add	x7, x4, x5
    1f38:	ror	x4, x0, #34
    1f3c:	eor	x4, x4, x0, ror #28
    1f40:	eor	x4, x4, x0, ror #39
    1f44:	orr	x10, x1, x0
    1f48:	and	x10, x10, x3
    1f4c:	and	x11, x1, x0
    1f50:	orr	x10, x10, x11
    1f54:	add	x4, x4, x10
    1f58:	add	x4, x4, x5
    1f5c:	eor	x5, x9, x6
    1f60:	and	x5, x5, x7
    1f64:	eor	x5, x5, x6
    1f68:	add	x5, x5, x8
    1f6c:	ldr	x8, [sp, #280]
    1f70:	mov	x10, #0xb3df                	// #46047
    1f74:	movk	x10, #0x9d95, lsl #16
    1f78:	movk	x10, #0xd13, lsl #32
    1f7c:	movk	x10, #0x5338, lsl #48
    1f80:	add	x8, x8, x10
    1f84:	add	x5, x5, x8
    1f88:	ror	x8, x7, #18
    1f8c:	eor	x8, x8, x7, ror #14
    1f90:	eor	x8, x8, x7, ror #41
    1f94:	add	x5, x5, x8
    1f98:	add	x8, x3, x5
    1f9c:	ror	x3, x4, #34
    1fa0:	eor	x3, x3, x4, ror #28
    1fa4:	eor	x3, x3, x4, ror #39
    1fa8:	orr	x10, x0, x4
    1fac:	and	x10, x10, x1
    1fb0:	and	x11, x0, x4
    1fb4:	orr	x10, x10, x11
    1fb8:	add	x3, x3, x10
    1fbc:	add	x3, x3, x5
    1fc0:	eor	x5, x7, x9
    1fc4:	and	x5, x5, x8
    1fc8:	eor	x5, x5, x9
    1fcc:	add	x5, x5, x6
    1fd0:	ldr	x6, [sp, #288]
    1fd4:	mov	x10, #0x63de                	// #25566
    1fd8:	movk	x10, #0x8baf, lsl #16
    1fdc:	movk	x10, #0x7354, lsl #32
    1fe0:	movk	x10, #0x650a, lsl #48
    1fe4:	add	x6, x6, x10
    1fe8:	add	x5, x5, x6
    1fec:	ror	x6, x8, #18
    1ff0:	eor	x6, x6, x8, ror #14
    1ff4:	eor	x6, x6, x8, ror #41
    1ff8:	add	x5, x5, x6
    1ffc:	add	x6, x1, x5
    2000:	ror	x1, x3, #34
    2004:	eor	x1, x1, x3, ror #28
    2008:	eor	x1, x1, x3, ror #39
    200c:	orr	x10, x4, x3
    2010:	and	x10, x10, x0
    2014:	and	x11, x4, x3
    2018:	orr	x10, x10, x11
    201c:	add	x1, x1, x10
    2020:	add	x1, x1, x5
    2024:	eor	x5, x8, x7
    2028:	and	x5, x5, x6
    202c:	eor	x5, x5, x7
    2030:	add	x5, x5, x9
    2034:	ldr	x9, [sp, #296]
    2038:	mov	x10, #0xb2a8                	// #45736
    203c:	movk	x10, #0x3c77, lsl #16
    2040:	movk	x10, #0xabb, lsl #32
    2044:	movk	x10, #0x766a, lsl #48
    2048:	add	x9, x9, x10
    204c:	add	x5, x5, x9
    2050:	ror	x9, x6, #18
    2054:	eor	x9, x9, x6, ror #14
    2058:	eor	x9, x9, x6, ror #41
    205c:	add	x5, x5, x9
    2060:	add	x9, x0, x5
    2064:	ror	x0, x1, #34
    2068:	eor	x0, x0, x1, ror #28
    206c:	eor	x0, x0, x1, ror #39
    2070:	orr	x10, x3, x1
    2074:	and	x10, x10, x4
    2078:	and	x11, x3, x1
    207c:	orr	x10, x10, x11
    2080:	add	x0, x0, x10
    2084:	add	x0, x0, x5
    2088:	eor	x5, x6, x8
    208c:	and	x5, x5, x9
    2090:	eor	x5, x5, x8
    2094:	add	x5, x5, x7
    2098:	ldr	x7, [sp, #304]
    209c:	mov	x10, #0xaee6                	// #44774
    20a0:	movk	x10, #0x47ed, lsl #16
    20a4:	movk	x10, #0xc92e, lsl #32
    20a8:	movk	x10, #0x81c2, lsl #48
    20ac:	add	x7, x7, x10
    20b0:	add	x5, x5, x7
    20b4:	ror	x7, x9, #18
    20b8:	eor	x7, x7, x9, ror #14
    20bc:	eor	x7, x7, x9, ror #41
    20c0:	add	x5, x5, x7
    20c4:	add	x7, x4, x5
    20c8:	ror	x4, x0, #34
    20cc:	eor	x4, x4, x0, ror #28
    20d0:	eor	x4, x4, x0, ror #39
    20d4:	orr	x10, x1, x0
    20d8:	and	x10, x10, x3
    20dc:	and	x11, x1, x0
    20e0:	orr	x10, x10, x11
    20e4:	add	x4, x4, x10
    20e8:	add	x4, x4, x5
    20ec:	eor	x5, x9, x6
    20f0:	and	x5, x5, x7
    20f4:	eor	x5, x5, x6
    20f8:	add	x5, x5, x8
    20fc:	ldr	x8, [sp, #312]
    2100:	mov	x10, #0x353b                	// #13627
    2104:	movk	x10, #0x1482, lsl #16
    2108:	movk	x10, #0x2c85, lsl #32
    210c:	movk	x10, #0x9272, lsl #48
    2110:	add	x8, x8, x10
    2114:	add	x5, x5, x8
    2118:	ror	x8, x7, #18
    211c:	eor	x8, x8, x7, ror #14
    2120:	eor	x8, x8, x7, ror #41
    2124:	add	x5, x5, x8
    2128:	add	x8, x3, x5
    212c:	ror	x3, x4, #34
    2130:	eor	x3, x3, x4, ror #28
    2134:	eor	x3, x3, x4, ror #39
    2138:	orr	x10, x0, x4
    213c:	and	x10, x10, x1
    2140:	and	x11, x0, x4
    2144:	orr	x10, x10, x11
    2148:	add	x3, x3, x10
    214c:	add	x3, x3, x5
    2150:	eor	x5, x7, x9
    2154:	and	x5, x5, x8
    2158:	eor	x5, x5, x9
    215c:	add	x5, x5, x6
    2160:	ldr	x6, [sp, #320]
    2164:	mov	x10, #0x364                 	// #868
    2168:	movk	x10, #0x4cf1, lsl #16
    216c:	movk	x10, #0xe8a1, lsl #32
    2170:	movk	x10, #0xa2bf, lsl #48
    2174:	add	x6, x6, x10
    2178:	add	x5, x5, x6
    217c:	ror	x6, x8, #18
    2180:	eor	x6, x6, x8, ror #14
    2184:	eor	x6, x6, x8, ror #41
    2188:	add	x5, x5, x6
    218c:	add	x6, x1, x5
    2190:	ror	x1, x3, #34
    2194:	eor	x1, x1, x3, ror #28
    2198:	eor	x1, x1, x3, ror #39
    219c:	orr	x10, x4, x3
    21a0:	and	x10, x10, x0
    21a4:	and	x11, x4, x3
    21a8:	orr	x10, x10, x11
    21ac:	add	x1, x1, x10
    21b0:	add	x1, x1, x5
    21b4:	eor	x5, x8, x7
    21b8:	and	x5, x5, x6
    21bc:	eor	x5, x5, x7
    21c0:	add	x5, x5, x9
    21c4:	ldr	x9, [sp, #328]
    21c8:	mov	x10, #0x3001                	// #12289
    21cc:	movk	x10, #0xbc42, lsl #16
    21d0:	movk	x10, #0x664b, lsl #32
    21d4:	movk	x10, #0xa81a, lsl #48
    21d8:	add	x9, x9, x10
    21dc:	add	x5, x5, x9
    21e0:	ror	x9, x6, #18
    21e4:	eor	x9, x9, x6, ror #14
    21e8:	eor	x9, x9, x6, ror #41
    21ec:	add	x5, x5, x9
    21f0:	add	x9, x0, x5
    21f4:	ror	x0, x1, #34
    21f8:	eor	x0, x0, x1, ror #28
    21fc:	eor	x0, x0, x1, ror #39
    2200:	orr	x10, x3, x1
    2204:	and	x10, x10, x4
    2208:	and	x11, x3, x1
    220c:	orr	x10, x10, x11
    2210:	add	x0, x0, x10
    2214:	add	x0, x0, x5
    2218:	eor	x5, x6, x8
    221c:	and	x5, x5, x9
    2220:	eor	x5, x5, x8
    2224:	add	x5, x5, x7
    2228:	ldr	x7, [sp, #336]
    222c:	mov	x10, #0x9791                	// #38801
    2230:	movk	x10, #0xd0f8, lsl #16
    2234:	movk	x10, #0x8b70, lsl #32
    2238:	movk	x10, #0xc24b, lsl #48
    223c:	add	x7, x7, x10
    2240:	add	x5, x5, x7
    2244:	ror	x7, x9, #18
    2248:	eor	x7, x7, x9, ror #14
    224c:	eor	x7, x7, x9, ror #41
    2250:	add	x5, x5, x7
    2254:	add	x7, x4, x5
    2258:	ror	x4, x0, #34
    225c:	eor	x4, x4, x0, ror #28
    2260:	eor	x4, x4, x0, ror #39
    2264:	orr	x10, x1, x0
    2268:	and	x10, x10, x3
    226c:	and	x11, x1, x0
    2270:	orr	x10, x10, x11
    2274:	add	x4, x4, x10
    2278:	add	x4, x4, x5
    227c:	eor	x5, x9, x6
    2280:	and	x5, x5, x7
    2284:	eor	x5, x5, x6
    2288:	add	x5, x5, x8
    228c:	ldr	x8, [sp, #344]
    2290:	mov	x10, #0xbe30                	// #48688
    2294:	movk	x10, #0x654, lsl #16
    2298:	movk	x10, #0x51a3, lsl #32
    229c:	movk	x10, #0xc76c, lsl #48
    22a0:	add	x8, x8, x10
    22a4:	add	x5, x5, x8
    22a8:	ror	x8, x7, #18
    22ac:	eor	x8, x8, x7, ror #14
    22b0:	eor	x8, x8, x7, ror #41
    22b4:	add	x5, x5, x8
    22b8:	add	x8, x3, x5
    22bc:	ror	x3, x4, #34
    22c0:	eor	x3, x3, x4, ror #28
    22c4:	eor	x3, x3, x4, ror #39
    22c8:	orr	x10, x0, x4
    22cc:	and	x10, x10, x1
    22d0:	and	x11, x0, x4
    22d4:	orr	x10, x10, x11
    22d8:	add	x3, x3, x10
    22dc:	add	x3, x3, x5
    22e0:	eor	x5, x7, x9
    22e4:	and	x5, x5, x8
    22e8:	eor	x5, x5, x9
    22ec:	add	x5, x5, x6
    22f0:	ldr	x6, [sp, #352]
    22f4:	mov	x10, #0x5218                	// #21016
    22f8:	movk	x10, #0xd6ef, lsl #16
    22fc:	movk	x10, #0xe819, lsl #32
    2300:	movk	x10, #0xd192, lsl #48
    2304:	add	x6, x6, x10
    2308:	add	x5, x5, x6
    230c:	ror	x6, x8, #18
    2310:	eor	x6, x6, x8, ror #14
    2314:	eor	x6, x6, x8, ror #41
    2318:	add	x5, x5, x6
    231c:	add	x6, x1, x5
    2320:	ror	x1, x3, #34
    2324:	eor	x1, x1, x3, ror #28
    2328:	eor	x1, x1, x3, ror #39
    232c:	orr	x10, x4, x3
    2330:	and	x10, x10, x0
    2334:	and	x11, x4, x3
    2338:	orr	x10, x10, x11
    233c:	add	x1, x1, x10
    2340:	add	x1, x1, x5
    2344:	eor	x5, x8, x7
    2348:	and	x5, x5, x6
    234c:	eor	x5, x5, x7
    2350:	add	x5, x5, x9
    2354:	ldr	x9, [sp, #360]
    2358:	mov	x10, #0xa910                	// #43280
    235c:	movk	x10, #0x5565, lsl #16
    2360:	movk	x10, #0x624, lsl #32
    2364:	movk	x10, #0xd699, lsl #48
    2368:	add	x9, x9, x10
    236c:	add	x5, x5, x9
    2370:	ror	x9, x6, #18
    2374:	eor	x9, x9, x6, ror #14
    2378:	eor	x9, x9, x6, ror #41
    237c:	add	x5, x5, x9
    2380:	add	x9, x0, x5
    2384:	ror	x0, x1, #34
    2388:	eor	x0, x0, x1, ror #28
    238c:	eor	x0, x0, x1, ror #39
    2390:	orr	x10, x3, x1
    2394:	and	x10, x10, x4
    2398:	and	x11, x3, x1
    239c:	orr	x10, x10, x11
    23a0:	add	x0, x0, x10
    23a4:	add	x0, x0, x5
    23a8:	eor	x5, x6, x8
    23ac:	and	x5, x5, x9
    23b0:	eor	x5, x5, x8
    23b4:	add	x5, x5, x7
    23b8:	ldr	x7, [sp, #368]
    23bc:	mov	x10, #0x202a                	// #8234
    23c0:	movk	x10, #0x5771, lsl #16
    23c4:	movk	x10, #0x3585, lsl #32
    23c8:	movk	x10, #0xf40e, lsl #48
    23cc:	add	x7, x7, x10
    23d0:	add	x5, x5, x7
    23d4:	ror	x7, x9, #18
    23d8:	eor	x7, x7, x9, ror #14
    23dc:	eor	x7, x7, x9, ror #41
    23e0:	add	x5, x5, x7
    23e4:	add	x7, x4, x5
    23e8:	ror	x4, x0, #34
    23ec:	eor	x4, x4, x0, ror #28
    23f0:	eor	x4, x4, x0, ror #39
    23f4:	orr	x10, x1, x0
    23f8:	and	x10, x10, x3
    23fc:	and	x11, x1, x0
    2400:	orr	x10, x10, x11
    2404:	add	x4, x4, x10
    2408:	add	x4, x4, x5
    240c:	eor	x5, x9, x6
    2410:	and	x5, x5, x7
    2414:	eor	x5, x5, x6
    2418:	add	x5, x5, x8
    241c:	ldr	x8, [sp, #376]
    2420:	mov	x10, #0xd1b8                	// #53688
    2424:	movk	x10, #0x32bb, lsl #16
    2428:	movk	x10, #0xa070, lsl #32
    242c:	movk	x10, #0x106a, lsl #48
    2430:	add	x8, x8, x10
    2434:	add	x5, x5, x8
    2438:	ror	x8, x7, #18
    243c:	eor	x8, x8, x7, ror #14
    2440:	eor	x8, x8, x7, ror #41
    2444:	add	x5, x5, x8
    2448:	add	x8, x3, x5
    244c:	ror	x3, x4, #34
    2450:	eor	x3, x3, x4, ror #28
    2454:	eor	x3, x3, x4, ror #39
    2458:	orr	x10, x0, x4
    245c:	and	x10, x10, x1
    2460:	and	x11, x0, x4
    2464:	orr	x10, x10, x11
    2468:	add	x3, x3, x10
    246c:	add	x3, x3, x5
    2470:	eor	x5, x7, x9
    2474:	and	x5, x5, x8
    2478:	eor	x5, x5, x9
    247c:	add	x5, x5, x6
    2480:	ldr	x6, [sp, #384]
    2484:	mov	x10, #0xd0c8                	// #53448
    2488:	movk	x10, #0xb8d2, lsl #16
    248c:	movk	x10, #0xc116, lsl #32
    2490:	movk	x10, #0x19a4, lsl #48
    2494:	add	x6, x6, x10
    2498:	add	x5, x5, x6
    249c:	ror	x6, x8, #18
    24a0:	eor	x6, x6, x8, ror #14
    24a4:	eor	x6, x6, x8, ror #41
    24a8:	add	x5, x5, x6
    24ac:	add	x6, x1, x5
    24b0:	ror	x1, x3, #34
    24b4:	eor	x1, x1, x3, ror #28
    24b8:	eor	x1, x1, x3, ror #39
    24bc:	orr	x10, x4, x3
    24c0:	and	x10, x10, x0
    24c4:	and	x11, x4, x3
    24c8:	orr	x10, x10, x11
    24cc:	add	x1, x1, x10
    24d0:	add	x1, x1, x5
    24d4:	eor	x5, x8, x7
    24d8:	and	x5, x5, x6
    24dc:	eor	x5, x5, x7
    24e0:	add	x5, x5, x9
    24e4:	ldr	x9, [sp, #392]
    24e8:	mov	x10, #0xab53                	// #43859
    24ec:	movk	x10, #0x5141, lsl #16
    24f0:	movk	x10, #0x6c08, lsl #32
    24f4:	movk	x10, #0x1e37, lsl #48
    24f8:	add	x9, x9, x10
    24fc:	add	x5, x5, x9
    2500:	ror	x9, x6, #18
    2504:	eor	x9, x9, x6, ror #14
    2508:	eor	x9, x9, x6, ror #41
    250c:	add	x5, x5, x9
    2510:	add	x9, x0, x5
    2514:	ror	x0, x1, #34
    2518:	eor	x0, x0, x1, ror #28
    251c:	eor	x0, x0, x1, ror #39
    2520:	orr	x10, x3, x1
    2524:	and	x10, x10, x4
    2528:	and	x11, x3, x1
    252c:	orr	x10, x10, x11
    2530:	add	x0, x0, x10
    2534:	add	x0, x0, x5
    2538:	eor	x5, x6, x8
    253c:	and	x5, x5, x9
    2540:	eor	x5, x5, x8
    2544:	add	x5, x5, x7
    2548:	ldr	x7, [sp, #400]
    254c:	mov	x10, #0xeb99                	// #60313
    2550:	movk	x10, #0xdf8e, lsl #16
    2554:	movk	x10, #0x774c, lsl #32
    2558:	movk	x10, #0x2748, lsl #48
    255c:	add	x7, x7, x10
    2560:	add	x5, x5, x7
    2564:	ror	x7, x9, #18
    2568:	eor	x7, x7, x9, ror #14
    256c:	eor	x7, x7, x9, ror #41
    2570:	add	x5, x5, x7
    2574:	add	x7, x4, x5
    2578:	ror	x4, x0, #34
    257c:	eor	x4, x4, x0, ror #28
    2580:	eor	x4, x4, x0, ror #39
    2584:	orr	x10, x1, x0
    2588:	and	x10, x10, x3
    258c:	and	x11, x1, x0
    2590:	orr	x10, x10, x11
    2594:	add	x4, x4, x10
    2598:	add	x4, x4, x5
    259c:	eor	x5, x9, x6
    25a0:	and	x5, x5, x7
    25a4:	eor	x5, x5, x6
    25a8:	add	x5, x5, x8
    25ac:	ldr	x8, [sp, #408]
    25b0:	mov	x10, #0x48a8                	// #18600
    25b4:	movk	x10, #0xe19b, lsl #16
    25b8:	movk	x10, #0xbcb5, lsl #32
    25bc:	movk	x10, #0x34b0, lsl #48
    25c0:	add	x8, x8, x10
    25c4:	add	x5, x5, x8
    25c8:	ror	x8, x7, #18
    25cc:	eor	x8, x8, x7, ror #14
    25d0:	eor	x8, x8, x7, ror #41
    25d4:	add	x5, x5, x8
    25d8:	add	x8, x3, x5
    25dc:	ror	x3, x4, #34
    25e0:	eor	x3, x3, x4, ror #28
    25e4:	eor	x3, x3, x4, ror #39
    25e8:	orr	x10, x0, x4
    25ec:	and	x10, x10, x1
    25f0:	and	x11, x0, x4
    25f4:	orr	x10, x10, x11
    25f8:	add	x3, x3, x10
    25fc:	add	x3, x3, x5
    2600:	eor	x5, x7, x9
    2604:	and	x5, x5, x8
    2608:	eor	x5, x5, x9
    260c:	add	x5, x5, x6
    2610:	ldr	x6, [sp, #416]
    2614:	mov	x10, #0x5a63                	// #23139
    2618:	movk	x10, #0xc5c9, lsl #16
    261c:	movk	x10, #0xcb3, lsl #32
    2620:	movk	x10, #0x391c, lsl #48
    2624:	add	x6, x6, x10
    2628:	add	x5, x5, x6
    262c:	ror	x6, x8, #18
    2630:	eor	x6, x6, x8, ror #14
    2634:	eor	x6, x6, x8, ror #41
    2638:	add	x5, x5, x6
    263c:	add	x6, x1, x5
    2640:	ror	x1, x3, #34
    2644:	eor	x1, x1, x3, ror #28
    2648:	eor	x1, x1, x3, ror #39
    264c:	orr	x10, x4, x3
    2650:	and	x10, x10, x0
    2654:	and	x11, x4, x3
    2658:	orr	x10, x10, x11
    265c:	add	x1, x1, x10
    2660:	add	x1, x1, x5
    2664:	eor	x5, x8, x7
    2668:	and	x5, x5, x6
    266c:	eor	x5, x5, x7
    2670:	add	x5, x5, x9
    2674:	ldr	x9, [sp, #424]
    2678:	mov	x10, #0x8acb                	// #35531
    267c:	movk	x10, #0xe341, lsl #16
    2680:	movk	x10, #0xaa4a, lsl #32
    2684:	movk	x10, #0x4ed8, lsl #48
    2688:	add	x9, x9, x10
    268c:	add	x5, x5, x9
    2690:	ror	x9, x6, #18
    2694:	eor	x9, x9, x6, ror #14
    2698:	eor	x9, x9, x6, ror #41
    269c:	add	x5, x5, x9
    26a0:	add	x9, x0, x5
    26a4:	ror	x0, x1, #34
    26a8:	eor	x0, x0, x1, ror #28
    26ac:	eor	x0, x0, x1, ror #39
    26b0:	orr	x10, x3, x1
    26b4:	and	x10, x10, x4
    26b8:	and	x11, x3, x1
    26bc:	orr	x10, x10, x11
    26c0:	add	x0, x0, x10
    26c4:	add	x0, x0, x5
    26c8:	eor	x5, x6, x8
    26cc:	and	x5, x5, x9
    26d0:	eor	x5, x5, x8
    26d4:	add	x5, x5, x7
    26d8:	ldr	x7, [sp, #432]
    26dc:	mov	x10, #0xe373                	// #58227
    26e0:	movk	x10, #0x7763, lsl #16
    26e4:	movk	x10, #0xca4f, lsl #32
    26e8:	movk	x10, #0x5b9c, lsl #48
    26ec:	add	x7, x7, x10
    26f0:	add	x5, x5, x7
    26f4:	ror	x7, x9, #18
    26f8:	eor	x7, x7, x9, ror #14
    26fc:	eor	x7, x7, x9, ror #41
    2700:	add	x5, x5, x7
    2704:	add	x7, x4, x5
    2708:	ror	x4, x0, #34
    270c:	eor	x4, x4, x0, ror #28
    2710:	eor	x4, x4, x0, ror #39
    2714:	orr	x10, x1, x0
    2718:	and	x10, x10, x3
    271c:	and	x11, x1, x0
    2720:	orr	x10, x10, x11
    2724:	add	x4, x4, x10
    2728:	add	x4, x4, x5
    272c:	eor	x5, x9, x6
    2730:	and	x5, x5, x7
    2734:	eor	x5, x5, x6
    2738:	add	x5, x5, x8
    273c:	ldr	x8, [sp, #440]
    2740:	mov	x10, #0xb8a3                	// #47267
    2744:	movk	x10, #0xd6b2, lsl #16
    2748:	movk	x10, #0x6ff3, lsl #32
    274c:	movk	x10, #0x682e, lsl #48
    2750:	add	x8, x8, x10
    2754:	add	x5, x5, x8
    2758:	ror	x8, x7, #18
    275c:	eor	x8, x8, x7, ror #14
    2760:	eor	x8, x8, x7, ror #41
    2764:	add	x5, x5, x8
    2768:	add	x8, x3, x5
    276c:	ror	x3, x4, #34
    2770:	eor	x3, x3, x4, ror #28
    2774:	eor	x3, x3, x4, ror #39
    2778:	orr	x10, x0, x4
    277c:	and	x10, x10, x1
    2780:	and	x11, x0, x4
    2784:	orr	x10, x10, x11
    2788:	add	x3, x3, x10
    278c:	add	x3, x3, x5
    2790:	eor	x5, x7, x9
    2794:	and	x5, x5, x8
    2798:	eor	x5, x5, x9
    279c:	add	x5, x5, x6
    27a0:	ldr	x6, [sp, #448]
    27a4:	mov	x10, #0xb2fc                	// #45820
    27a8:	movk	x10, #0x5def, lsl #16
    27ac:	movk	x10, #0x82ee, lsl #32
    27b0:	movk	x10, #0x748f, lsl #48
    27b4:	add	x6, x6, x10
    27b8:	add	x5, x5, x6
    27bc:	ror	x6, x8, #18
    27c0:	eor	x6, x6, x8, ror #14
    27c4:	eor	x6, x6, x8, ror #41
    27c8:	add	x5, x5, x6
    27cc:	add	x6, x1, x5
    27d0:	ror	x1, x3, #34
    27d4:	eor	x1, x1, x3, ror #28
    27d8:	eor	x1, x1, x3, ror #39
    27dc:	orr	x10, x4, x3
    27e0:	and	x10, x10, x0
    27e4:	and	x11, x4, x3
    27e8:	orr	x10, x10, x11
    27ec:	add	x1, x1, x10
    27f0:	add	x1, x1, x5
    27f4:	eor	x5, x8, x7
    27f8:	and	x5, x5, x6
    27fc:	eor	x5, x5, x7
    2800:	add	x5, x5, x9
    2804:	ldr	x9, [sp, #456]
    2808:	mov	x10, #0x2f60                	// #12128
    280c:	movk	x10, #0x4317, lsl #16
    2810:	movk	x10, #0x636f, lsl #32
    2814:	movk	x10, #0x78a5, lsl #48
    2818:	add	x9, x9, x10
    281c:	add	x5, x5, x9
    2820:	ror	x9, x6, #18
    2824:	eor	x9, x9, x6, ror #14
    2828:	eor	x9, x9, x6, ror #41
    282c:	add	x5, x5, x9
    2830:	add	x9, x0, x5
    2834:	ror	x0, x1, #34
    2838:	eor	x0, x0, x1, ror #28
    283c:	eor	x0, x0, x1, ror #39
    2840:	orr	x10, x3, x1
    2844:	and	x10, x10, x4
    2848:	and	x11, x3, x1
    284c:	orr	x10, x10, x11
    2850:	add	x0, x0, x10
    2854:	add	x0, x0, x5
    2858:	eor	x5, x6, x8
    285c:	and	x5, x5, x9
    2860:	eor	x5, x5, x8
    2864:	add	x5, x5, x7
    2868:	ldr	x7, [sp, #464]
    286c:	mov	x10, #0xab72                	// #43890
    2870:	movk	x10, #0xa1f0, lsl #16
    2874:	movk	x10, #0x7814, lsl #32
    2878:	movk	x10, #0x84c8, lsl #48
    287c:	add	x7, x7, x10
    2880:	add	x5, x5, x7
    2884:	ror	x7, x9, #18
    2888:	eor	x7, x7, x9, ror #14
    288c:	eor	x7, x7, x9, ror #41
    2890:	add	x5, x5, x7
    2894:	add	x7, x4, x5
    2898:	ror	x4, x0, #34
    289c:	eor	x4, x4, x0, ror #28
    28a0:	eor	x4, x4, x0, ror #39
    28a4:	orr	x10, x1, x0
    28a8:	and	x10, x10, x3
    28ac:	and	x11, x1, x0
    28b0:	orr	x10, x10, x11
    28b4:	add	x4, x4, x10
    28b8:	add	x4, x4, x5
    28bc:	eor	x5, x9, x6
    28c0:	and	x5, x5, x7
    28c4:	eor	x5, x5, x6
    28c8:	add	x5, x5, x8
    28cc:	ldr	x8, [sp, #472]
    28d0:	mov	x10, #0x39ec                	// #14828
    28d4:	movk	x10, #0x1a64, lsl #16
    28d8:	movk	x10, #0x208, lsl #32
    28dc:	movk	x10, #0x8cc7, lsl #48
    28e0:	add	x8, x8, x10
    28e4:	add	x5, x5, x8
    28e8:	ror	x8, x7, #18
    28ec:	eor	x8, x8, x7, ror #14
    28f0:	eor	x8, x8, x7, ror #41
    28f4:	add	x5, x5, x8
    28f8:	add	x8, x3, x5
    28fc:	ror	x3, x4, #34
    2900:	eor	x3, x3, x4, ror #28
    2904:	eor	x3, x3, x4, ror #39
    2908:	orr	x10, x0, x4
    290c:	and	x10, x10, x1
    2910:	and	x11, x0, x4
    2914:	orr	x10, x10, x11
    2918:	add	x3, x3, x10
    291c:	add	x3, x3, x5
    2920:	eor	x5, x7, x9
    2924:	and	x5, x5, x8
    2928:	eor	x5, x5, x9
    292c:	add	x5, x5, x6
    2930:	ldr	x6, [sp, #480]
    2934:	mov	x10, #0x1e28                	// #7720
    2938:	movk	x10, #0x2363, lsl #16
    293c:	movk	x10, #0xfffa, lsl #32
    2940:	movk	x10, #0x90be, lsl #48
    2944:	add	x6, x6, x10
    2948:	add	x5, x5, x6
    294c:	ror	x6, x8, #18
    2950:	eor	x6, x6, x8, ror #14
    2954:	eor	x6, x6, x8, ror #41
    2958:	add	x5, x5, x6
    295c:	add	x6, x1, x5
    2960:	ror	x1, x3, #34
    2964:	eor	x1, x1, x3, ror #28
    2968:	eor	x1, x1, x3, ror #39
    296c:	orr	x10, x4, x3
    2970:	and	x10, x10, x0
    2974:	and	x11, x4, x3
    2978:	orr	x10, x10, x11
    297c:	add	x1, x1, x10
    2980:	add	x1, x1, x5
    2984:	eor	x5, x8, x7
    2988:	and	x5, x5, x6
    298c:	eor	x5, x5, x7
    2990:	add	x5, x5, x9
    2994:	ldr	x9, [sp, #488]
    2998:	mov	x10, #0xbde9                	// #48617
    299c:	movk	x10, #0xde82, lsl #16
    29a0:	movk	x10, #0x6ceb, lsl #32
    29a4:	movk	x10, #0xa450, lsl #48
    29a8:	add	x9, x9, x10
    29ac:	add	x5, x5, x9
    29b0:	ror	x9, x6, #18
    29b4:	eor	x9, x9, x6, ror #14
    29b8:	eor	x9, x9, x6, ror #41
    29bc:	add	x5, x5, x9
    29c0:	add	x9, x0, x5
    29c4:	ror	x0, x1, #34
    29c8:	eor	x0, x0, x1, ror #28
    29cc:	eor	x0, x0, x1, ror #39
    29d0:	orr	x10, x3, x1
    29d4:	and	x10, x10, x4
    29d8:	and	x11, x3, x1
    29dc:	orr	x10, x10, x11
    29e0:	add	x0, x0, x10
    29e4:	add	x0, x0, x5
    29e8:	eor	x5, x6, x8
    29ec:	and	x5, x5, x9
    29f0:	eor	x5, x5, x8
    29f4:	add	x5, x5, x7
    29f8:	ldr	x7, [sp, #496]
    29fc:	mov	x10, #0x7915                	// #30997
    2a00:	movk	x10, #0xb2c6, lsl #16
    2a04:	movk	x10, #0xa3f7, lsl #32
    2a08:	movk	x10, #0xbef9, lsl #48
    2a0c:	add	x7, x7, x10
    2a10:	add	x5, x5, x7
    2a14:	ror	x7, x9, #18
    2a18:	eor	x7, x7, x9, ror #14
    2a1c:	eor	x7, x7, x9, ror #41
    2a20:	add	x5, x5, x7
    2a24:	add	x7, x4, x5
    2a28:	ror	x4, x0, #34
    2a2c:	eor	x4, x4, x0, ror #28
    2a30:	eor	x4, x4, x0, ror #39
    2a34:	orr	x10, x1, x0
    2a38:	and	x10, x10, x3
    2a3c:	and	x11, x1, x0
    2a40:	orr	x10, x10, x11
    2a44:	add	x4, x4, x10
    2a48:	add	x4, x4, x5
    2a4c:	eor	x5, x9, x6
    2a50:	and	x5, x5, x7
    2a54:	eor	x5, x5, x6
    2a58:	add	x5, x5, x8
    2a5c:	ldr	x8, [sp, #504]
    2a60:	mov	x10, #0x532b                	// #21291
    2a64:	movk	x10, #0xe372, lsl #16
    2a68:	movk	x10, #0x78f2, lsl #32
    2a6c:	movk	x10, #0xc671, lsl #48
    2a70:	add	x8, x8, x10
    2a74:	add	x5, x5, x8
    2a78:	ror	x8, x7, #18
    2a7c:	eor	x8, x8, x7, ror #14
    2a80:	eor	x8, x8, x7, ror #41
    2a84:	add	x5, x5, x8
    2a88:	add	x8, x3, x5
    2a8c:	ror	x3, x4, #34
    2a90:	eor	x3, x3, x4, ror #28
    2a94:	eor	x3, x3, x4, ror #39
    2a98:	orr	x10, x0, x4
    2a9c:	and	x10, x10, x1
    2aa0:	and	x11, x0, x4
    2aa4:	orr	x10, x10, x11
    2aa8:	add	x3, x3, x10
    2aac:	add	x3, x3, x5
    2ab0:	eor	x5, x7, x9
    2ab4:	and	x5, x5, x8
    2ab8:	eor	x5, x5, x9
    2abc:	add	x5, x5, x6
    2ac0:	ldr	x6, [sp, #512]
    2ac4:	mov	x10, #0x619c                	// #24988
    2ac8:	movk	x10, #0xea26, lsl #16
    2acc:	movk	x10, #0x3ece, lsl #32
    2ad0:	movk	x10, #0xca27, lsl #48
    2ad4:	add	x6, x6, x10
    2ad8:	add	x5, x5, x6
    2adc:	ror	x6, x8, #18
    2ae0:	eor	x6, x6, x8, ror #14
    2ae4:	eor	x6, x6, x8, ror #41
    2ae8:	add	x5, x5, x6
    2aec:	add	x6, x1, x5
    2af0:	ror	x1, x3, #34
    2af4:	eor	x1, x1, x3, ror #28
    2af8:	eor	x1, x1, x3, ror #39
    2afc:	orr	x10, x4, x3
    2b00:	and	x10, x10, x0
    2b04:	and	x11, x4, x3
    2b08:	orr	x10, x10, x11
    2b0c:	add	x1, x1, x10
    2b10:	add	x1, x1, x5
    2b14:	eor	x5, x8, x7
    2b18:	and	x5, x5, x6
    2b1c:	eor	x5, x5, x7
    2b20:	add	x5, x5, x9
    2b24:	ldr	x9, [sp, #520]
    2b28:	mov	x10, #0xc207                	// #49671
    2b2c:	movk	x10, #0x21c0, lsl #16
    2b30:	movk	x10, #0xb8c7, lsl #32
    2b34:	movk	x10, #0xd186, lsl #48
    2b38:	add	x9, x9, x10
    2b3c:	add	x5, x5, x9
    2b40:	ror	x9, x6, #18
    2b44:	eor	x9, x9, x6, ror #14
    2b48:	eor	x9, x9, x6, ror #41
    2b4c:	add	x5, x5, x9
    2b50:	add	x9, x0, x5
    2b54:	ror	x0, x1, #34
    2b58:	eor	x0, x0, x1, ror #28
    2b5c:	eor	x0, x0, x1, ror #39
    2b60:	orr	x10, x3, x1
    2b64:	and	x10, x10, x4
    2b68:	and	x11, x3, x1
    2b6c:	orr	x10, x10, x11
    2b70:	add	x0, x0, x10
    2b74:	add	x0, x0, x5
    2b78:	eor	x5, x6, x8
    2b7c:	and	x5, x5, x9
    2b80:	eor	x5, x5, x8
    2b84:	add	x5, x5, x7
    2b88:	ldr	x7, [sp, #528]
    2b8c:	mov	x10, #0xeb1e                	// #60190
    2b90:	movk	x10, #0xcde0, lsl #16
    2b94:	movk	x10, #0x7dd6, lsl #32
    2b98:	movk	x10, #0xeada, lsl #48
    2b9c:	add	x7, x7, x10
    2ba0:	add	x5, x5, x7
    2ba4:	ror	x7, x9, #18
    2ba8:	eor	x7, x7, x9, ror #14
    2bac:	eor	x7, x7, x9, ror #41
    2bb0:	add	x5, x5, x7
    2bb4:	add	x7, x4, x5
    2bb8:	ror	x4, x0, #34
    2bbc:	eor	x4, x4, x0, ror #28
    2bc0:	eor	x4, x4, x0, ror #39
    2bc4:	orr	x10, x1, x0
    2bc8:	and	x10, x10, x3
    2bcc:	and	x11, x1, x0
    2bd0:	orr	x10, x10, x11
    2bd4:	add	x4, x4, x10
    2bd8:	add	x4, x4, x5
    2bdc:	eor	x5, x9, x6
    2be0:	and	x5, x5, x7
    2be4:	eor	x5, x5, x6
    2be8:	add	x5, x5, x8
    2bec:	ldr	x8, [sp, #536]
    2bf0:	mov	x10, #0xd178                	// #53624
    2bf4:	movk	x10, #0xee6e, lsl #16
    2bf8:	movk	x10, #0x4f7f, lsl #32
    2bfc:	movk	x10, #0xf57d, lsl #48
    2c00:	add	x8, x8, x10
    2c04:	add	x5, x5, x8
    2c08:	ror	x8, x7, #18
    2c0c:	eor	x8, x8, x7, ror #14
    2c10:	eor	x8, x8, x7, ror #41
    2c14:	add	x5, x5, x8
    2c18:	add	x8, x3, x5
    2c1c:	ror	x3, x4, #34
    2c20:	eor	x3, x3, x4, ror #28
    2c24:	eor	x3, x3, x4, ror #39
    2c28:	orr	x10, x0, x4
    2c2c:	and	x10, x10, x1
    2c30:	and	x11, x0, x4
    2c34:	orr	x10, x10, x11
    2c38:	add	x3, x3, x10
    2c3c:	add	x3, x3, x5
    2c40:	eor	x5, x7, x9
    2c44:	and	x5, x5, x8
    2c48:	eor	x5, x5, x9
    2c4c:	add	x5, x5, x6
    2c50:	ldr	x6, [sp, #544]
    2c54:	mov	x10, #0x6fba                	// #28602
    2c58:	movk	x10, #0x7217, lsl #16
    2c5c:	movk	x10, #0x67aa, lsl #32
    2c60:	movk	x10, #0x6f0, lsl #48
    2c64:	add	x6, x6, x10
    2c68:	add	x5, x5, x6
    2c6c:	ror	x6, x8, #18
    2c70:	eor	x6, x6, x8, ror #14
    2c74:	eor	x6, x6, x8, ror #41
    2c78:	add	x5, x5, x6
    2c7c:	add	x6, x1, x5
    2c80:	ror	x1, x3, #34
    2c84:	eor	x1, x1, x3, ror #28
    2c88:	eor	x1, x1, x3, ror #39
    2c8c:	orr	x10, x4, x3
    2c90:	and	x10, x10, x0
    2c94:	and	x11, x4, x3
    2c98:	orr	x10, x10, x11
    2c9c:	add	x1, x1, x10
    2ca0:	add	x1, x1, x5
    2ca4:	eor	x5, x8, x7
    2ca8:	and	x5, x5, x6
    2cac:	eor	x5, x5, x7
    2cb0:	add	x5, x5, x9
    2cb4:	ldr	x9, [sp, #552]
    2cb8:	mov	x10, #0x98a6                	// #39078
    2cbc:	movk	x10, #0xa2c8, lsl #16
    2cc0:	movk	x10, #0x7dc5, lsl #32
    2cc4:	movk	x10, #0xa63, lsl #48
    2cc8:	add	x9, x9, x10
    2ccc:	add	x5, x5, x9
    2cd0:	ror	x9, x6, #18
    2cd4:	eor	x9, x9, x6, ror #14
    2cd8:	eor	x9, x9, x6, ror #41
    2cdc:	add	x5, x5, x9
    2ce0:	add	x10, x0, x5
    2ce4:	ror	x0, x1, #34
    2ce8:	eor	x0, x0, x1, ror #28
    2cec:	eor	x0, x0, x1, ror #39
    2cf0:	orr	x9, x3, x1
    2cf4:	and	x9, x9, x4
    2cf8:	and	x11, x3, x1
    2cfc:	orr	x9, x9, x11
    2d00:	add	x0, x0, x9
    2d04:	add	x0, x0, x5
    2d08:	eor	x5, x6, x8
    2d0c:	and	x5, x5, x10
    2d10:	eor	x5, x5, x8
    2d14:	add	x5, x5, x7
    2d18:	ldr	x7, [sp, #560]
    2d1c:	mov	x9, #0xdae                 	// #3502
    2d20:	movk	x9, #0xbef9, lsl #16
    2d24:	movk	x9, #0x9804, lsl #32
    2d28:	movk	x9, #0x113f, lsl #48
    2d2c:	add	x7, x7, x9
    2d30:	add	x5, x5, x7
    2d34:	ror	x7, x10, #18
    2d38:	eor	x7, x7, x10, ror #14
    2d3c:	eor	x7, x7, x10, ror #41
    2d40:	add	x5, x5, x7
    2d44:	add	x4, x4, x5
    2d48:	ror	x7, x0, #34
    2d4c:	eor	x7, x7, x0, ror #28
    2d50:	eor	x7, x7, x0, ror #39
    2d54:	orr	x9, x1, x0
    2d58:	and	x9, x9, x3
    2d5c:	and	x11, x1, x0
    2d60:	orr	x9, x9, x11
    2d64:	add	x7, x7, x9
    2d68:	add	x7, x7, x5
    2d6c:	eor	x5, x10, x6
    2d70:	and	x5, x5, x4
    2d74:	eor	x5, x5, x6
    2d78:	add	x5, x5, x8
    2d7c:	ldr	x8, [sp, #568]
    2d80:	mov	x9, #0x471b                	// #18203
    2d84:	movk	x9, #0x131c, lsl #16
    2d88:	movk	x9, #0xb35, lsl #32
    2d8c:	movk	x9, #0x1b71, lsl #48
    2d90:	add	x8, x8, x9
    2d94:	add	x5, x5, x8
    2d98:	ror	x8, x4, #18
    2d9c:	eor	x8, x8, x4, ror #14
    2da0:	eor	x8, x8, x4, ror #41
    2da4:	add	x5, x5, x8
    2da8:	add	x11, x3, x5
    2dac:	ror	x12, x7, #34
    2db0:	eor	x12, x12, x7, ror #28
    2db4:	eor	x12, x12, x7, ror #39
    2db8:	orr	x3, x0, x7
    2dbc:	and	x3, x3, x1
    2dc0:	and	x8, x0, x7
    2dc4:	orr	x3, x3, x8
    2dc8:	add	x12, x12, x3
    2dcc:	add	x12, x12, x5
    2dd0:	eor	x5, x4, x10
    2dd4:	and	x5, x5, x11
    2dd8:	eor	x5, x5, x10
    2ddc:	add	x5, x5, x6
    2de0:	ldr	x3, [sp, #576]
    2de4:	mov	x6, #0x7d84                	// #32132
    2de8:	movk	x6, #0x2304, lsl #16
    2dec:	movk	x6, #0x77f5, lsl #32
    2df0:	movk	x6, #0x28db, lsl #48
    2df4:	add	x3, x3, x6
    2df8:	add	x5, x5, x3
    2dfc:	ror	x3, x11, #18
    2e00:	eor	x3, x3, x11, ror #14
    2e04:	eor	x3, x3, x11, ror #41
    2e08:	add	x5, x5, x3
    2e0c:	add	x8, x1, x5
    2e10:	ror	x1, x12, #34
    2e14:	eor	x1, x1, x12, ror #28
    2e18:	eor	x1, x1, x12, ror #39
    2e1c:	orr	x3, x7, x12
    2e20:	and	x3, x3, x0
    2e24:	and	x6, x7, x12
    2e28:	orr	x3, x3, x6
    2e2c:	add	x1, x1, x3
    2e30:	add	x5, x1, x5
    2e34:	eor	x6, x11, x4
    2e38:	and	x6, x6, x8
    2e3c:	eor	x6, x6, x4
    2e40:	add	x6, x6, x10
    2e44:	ldr	x1, [sp, #584]
    2e48:	mov	x3, #0x2493                	// #9363
    2e4c:	movk	x3, #0x40c7, lsl #16
    2e50:	movk	x3, #0xab7b, lsl #32
    2e54:	movk	x3, #0x32ca, lsl #48
    2e58:	add	x1, x1, x3
    2e5c:	add	x6, x6, x1
    2e60:	ror	x1, x8, #18
    2e64:	eor	x1, x1, x8, ror #14
    2e68:	eor	x1, x1, x8, ror #41
    2e6c:	add	x6, x6, x1
    2e70:	add	x10, x0, x6
    2e74:	ror	x0, x5, #34
    2e78:	eor	x0, x0, x5, ror #28
    2e7c:	eor	x0, x0, x5, ror #39
    2e80:	orr	x1, x12, x5
    2e84:	and	x1, x1, x7
    2e88:	and	x3, x12, x5
    2e8c:	orr	x1, x1, x3
    2e90:	add	x0, x0, x1
    2e94:	add	x0, x0, x6
    2e98:	eor	x6, x8, x11
    2e9c:	and	x6, x6, x10
    2ea0:	eor	x6, x6, x11
    2ea4:	add	x6, x6, x4
    2ea8:	ldr	x1, [sp, #592]
    2eac:	mov	x3, #0xbebc                	// #48828
    2eb0:	movk	x3, #0x15c9, lsl #16
    2eb4:	movk	x3, #0xbe0a, lsl #32
    2eb8:	movk	x3, #0x3c9e, lsl #48
    2ebc:	add	x1, x1, x3
    2ec0:	add	x6, x6, x1
    2ec4:	ror	x1, x10, #18
    2ec8:	eor	x1, x1, x10, ror #14
    2ecc:	eor	x1, x1, x10, ror #41
    2ed0:	add	x6, x6, x1
    2ed4:	add	x9, x7, x6
    2ed8:	ror	x3, x0, #34
    2edc:	eor	x3, x3, x0, ror #28
    2ee0:	eor	x3, x3, x0, ror #39
    2ee4:	orr	x1, x5, x0
    2ee8:	and	x1, x1, x12
    2eec:	and	x4, x5, x0
    2ef0:	orr	x1, x1, x4
    2ef4:	add	x3, x3, x1
    2ef8:	add	x3, x3, x6
    2efc:	eor	x6, x10, x8
    2f00:	and	x6, x6, x9
    2f04:	eor	x6, x6, x8
    2f08:	add	x6, x6, x11
    2f0c:	ldr	x1, [sp, #600]
    2f10:	mov	x4, #0xd4c                 	// #3404
    2f14:	movk	x4, #0x9c10, lsl #16
    2f18:	movk	x4, #0x67c4, lsl #32
    2f1c:	movk	x4, #0x431d, lsl #48
    2f20:	add	x1, x1, x4
    2f24:	add	x6, x6, x1
    2f28:	ror	x1, x9, #18
    2f2c:	eor	x1, x1, x9, ror #14
    2f30:	eor	x1, x1, x9, ror #41
    2f34:	add	x6, x6, x1
    2f38:	add	x4, x12, x6
    2f3c:	ror	x1, x3, #34
    2f40:	eor	x1, x1, x3, ror #28
    2f44:	eor	x1, x1, x3, ror #39
    2f48:	orr	x7, x0, x3
    2f4c:	and	x7, x7, x5
    2f50:	and	x11, x0, x3
    2f54:	orr	x7, x7, x11
    2f58:	add	x1, x1, x7
    2f5c:	add	x6, x1, x6
    2f60:	eor	x1, x9, x10
    2f64:	and	x1, x1, x4
    2f68:	eor	x1, x1, x10
    2f6c:	add	x1, x1, x8
    2f70:	ldr	x7, [sp, #608]
    2f74:	mov	x8, #0x42b6                	// #17078
    2f78:	movk	x8, #0xcb3e, lsl #16
    2f7c:	movk	x8, #0xd4be, lsl #32
    2f80:	movk	x8, #0x4cc5, lsl #48
    2f84:	add	x7, x7, x8
    2f88:	add	x1, x1, x7
    2f8c:	ror	x8, x4, #18
    2f90:	eor	x8, x8, x4, ror #14
    2f94:	eor	x8, x8, x4, ror #41
    2f98:	add	x1, x1, x8
    2f9c:	add	x5, x5, x1
    2fa0:	str	x5, [sp, #696]
    2fa4:	ror	x8, x6, #34
    2fa8:	eor	x8, x8, x6, ror #28
    2fac:	eor	x8, x8, x6, ror #39
    2fb0:	orr	x7, x3, x6
    2fb4:	and	x7, x7, x0
    2fb8:	and	x11, x3, x6
    2fbc:	orr	x7, x7, x11
    2fc0:	add	x8, x8, x7
    2fc4:	add	x8, x8, x1
    2fc8:	str	x8, [sp, #664]
    2fcc:	eor	x1, x4, x9
    2fd0:	and	x1, x1, x5
    2fd4:	eor	x1, x1, x9
    2fd8:	add	x1, x1, x10
    2fdc:	ldr	x7, [sp, #616]
    2fe0:	mov	x10, #0x7e2a                	// #32298
    2fe4:	movk	x10, #0xfc65, lsl #16
    2fe8:	movk	x10, #0x299c, lsl #32
    2fec:	movk	x10, #0x597f, lsl #48
    2ff0:	add	x7, x7, x10
    2ff4:	add	x1, x1, x7
    2ff8:	ror	x7, x5, #18
    2ffc:	eor	x7, x7, x5, ror #14
    3000:	eor	x7, x7, x5, ror #41
    3004:	add	x1, x1, x7
    3008:	add	x0, x0, x1
    300c:	str	x0, [sp, #688]
    3010:	ror	x7, x8, #34
    3014:	eor	x7, x7, x8, ror #28
    3018:	eor	x7, x7, x8, ror #39
    301c:	orr	x10, x6, x8
    3020:	and	x10, x10, x3
    3024:	and	x11, x6, x8
    3028:	orr	x10, x10, x11
    302c:	add	x7, x7, x10
    3030:	add	x1, x7, x1
    3034:	str	x1, [sp, #656]
    3038:	eor	x7, x5, x4
    303c:	and	x7, x7, x0
    3040:	eor	x7, x7, x4
    3044:	add	x7, x7, x9
    3048:	ldr	x9, [sp, #624]
    304c:	mov	x10, #0xfaec                	// #64236
    3050:	movk	x10, #0x3ad6, lsl #16
    3054:	movk	x10, #0x6fab, lsl #32
    3058:	movk	x10, #0x5fcb, lsl #48
    305c:	add	x9, x9, x10
    3060:	add	x7, x7, x9
    3064:	ror	x9, x0, #18
    3068:	eor	x9, x9, x0, ror #14
    306c:	eor	x9, x9, x0, ror #41
    3070:	add	x9, x7, x9
    3074:	add	x3, x3, x9
    3078:	str	x3, [sp, #680]
    307c:	ror	x7, x1, #34
    3080:	eor	x7, x7, x1, ror #28
    3084:	eor	x7, x7, x1, ror #39
    3088:	orr	x10, x8, x1
    308c:	and	x10, x10, x6
    3090:	and	x11, x8, x1
    3094:	orr	x10, x10, x11
    3098:	add	x7, x7, x10
    309c:	add	x7, x7, x9
    30a0:	str	x7, [sp, #648]
    30a4:	eor	x0, x0, x5
    30a8:	and	x0, x0, x3
    30ac:	eor	x0, x0, x5
    30b0:	add	x0, x0, x4
    30b4:	ldr	x4, [sp, #632]
    30b8:	mov	x5, #0x5817                	// #22551
    30bc:	movk	x5, #0x4a47, lsl #16
    30c0:	movk	x5, #0x198c, lsl #32
    30c4:	movk	x5, #0x6c44, lsl #48
    30c8:	add	x4, x4, x5
    30cc:	add	x0, x0, x4
    30d0:	ror	x4, x3, #18
    30d4:	eor	x4, x4, x3, ror #14
    30d8:	eor	x3, x4, x3, ror #41
    30dc:	add	x3, x0, x3
    30e0:	add	x6, x6, x3
    30e4:	str	x6, [sp, #672]
    30e8:	ror	x0, x7, #34
    30ec:	eor	x0, x0, x7, ror #28
    30f0:	eor	x0, x0, x7, ror #39
    30f4:	orr	x4, x1, x7
    30f8:	and	x8, x4, x8
    30fc:	and	x1, x1, x7
    3100:	orr	x1, x8, x1
    3104:	add	x0, x0, x1
    3108:	add	x3, x0, x3
    310c:	str	x3, [sp, #640]
    3110:	mov	x0, #0x1                   	// #1
    3114:	add	x4, sp, #0x280
    3118:	add	x3, x4, x0, lsl #3
    311c:	ldr	x1, [x2, x0, lsl #3]
    3120:	ldur	x3, [x3, #-8]
    3124:	add	x1, x1, x3
    3128:	str	x1, [x2, x0, lsl #3]
    312c:	add	x0, x0, #0x1
    3130:	cmp	x0, #0x9
    3134:	b.ne	3118 <_Py_strhex@plt+0x21a8>  // b.any
    3138:	add	sp, sp, #0x2c0
    313c:	ret
    3140:	stp	x29, x30, [sp, #-64]!
    3144:	mov	x29, sp
    3148:	stp	x19, x20, [sp, #16]
    314c:	stp	x21, x22, [sp, #32]
    3150:	mov	x20, x0
    3154:	mov	x19, x1
    3158:	mov	x21, x2
    315c:	ldr	w2, [x0, #80]
    3160:	mov	w0, w21
    3164:	add	w1, w2, w21, lsl #3
    3168:	cmp	w2, w1
    316c:	b.ls	317c <_Py_strhex@plt+0x220c>  // b.plast
    3170:	ldr	w2, [x20, #84]
    3174:	add	w2, w2, #0x1
    3178:	str	w2, [x20, #84]
    317c:	str	w1, [x20, #80]
    3180:	ldr	w1, [x20, #84]
    3184:	add	w0, w1, w0, lsr #29
    3188:	str	w0, [x20, #84]
    318c:	ldr	w3, [x20, #216]
    3190:	cbnz	w3, 3234 <_Py_strhex@plt+0x22c4>
    3194:	cmp	x21, #0x7f
    3198:	b.le	3284 <_Py_strhex@plt+0x2314>
    319c:	str	x23, [sp, #48]
    31a0:	sub	x23, x21, #0x80
    31a4:	lsr	x23, x23, #7
    31a8:	add	x22, x23, #0x1
    31ac:	add	x22, x19, x22, lsl #7
    31b0:	ldp	x2, x3, [x19]
    31b4:	stp	x2, x3, [x20, #88]
    31b8:	ldp	x2, x3, [x19, #16]
    31bc:	stp	x2, x3, [x20, #104]
    31c0:	ldp	x2, x3, [x19, #32]
    31c4:	stp	x2, x3, [x20, #120]
    31c8:	ldp	x2, x3, [x19, #48]
    31cc:	stp	x2, x3, [x20, #136]
    31d0:	ldp	x2, x3, [x19, #64]
    31d4:	stp	x2, x3, [x20, #152]
    31d8:	ldp	x2, x3, [x19, #80]
    31dc:	stp	x2, x3, [x20, #168]
    31e0:	ldp	x2, x3, [x19, #96]
    31e4:	stp	x2, x3, [x20, #184]
    31e8:	ldp	x4, x5, [x19, #112]
    31ec:	stp	x4, x5, [x20, #200]
    31f0:	add	x19, x19, #0x80
    31f4:	mov	x0, x20
    31f8:	bl	1088 <_Py_strhex@plt+0x118>
    31fc:	cmp	x19, x22
    3200:	b.ne	31b0 <_Py_strhex@plt+0x2240>  // b.any
    3204:	sub	x21, x21, #0x80
    3208:	sub	x21, x21, x23, lsl #7
    320c:	ldr	x23, [sp, #48]
    3210:	mov	x2, x21
    3214:	mov	x1, x22
    3218:	add	x0, x20, #0x58
    321c:	bl	e50 <memcpy@plt>
    3220:	str	w21, [x20, #216]
    3224:	ldp	x19, x20, [sp, #16]
    3228:	ldp	x21, x22, [sp, #32]
    322c:	ldp	x29, x30, [sp], #64
    3230:	ret
    3234:	mov	w22, #0x80                  	// #128
    3238:	sub	w22, w22, w3
    323c:	sxtw	x22, w22
    3240:	cmp	x21, x22
    3244:	csel	x22, x21, x22, le
    3248:	add	x0, x20, #0x58
    324c:	mov	x2, x22
    3250:	mov	x1, x19
    3254:	add	x0, x0, w3, sxtw
    3258:	bl	e50 <memcpy@plt>
    325c:	ldr	w0, [x20, #216]
    3260:	add	w0, w0, w22
    3264:	str	w0, [x20, #216]
    3268:	cmp	w0, #0x80
    326c:	b.ne	3224 <_Py_strhex@plt+0x22b4>  // b.any
    3270:	sub	x21, x21, x22
    3274:	add	x19, x19, x22
    3278:	mov	x0, x20
    327c:	bl	1088 <_Py_strhex@plt+0x118>
    3280:	b	3194 <_Py_strhex@plt+0x2224>
    3284:	mov	x22, x19
    3288:	b	3210 <_Py_strhex@plt+0x22a0>
    328c:	sub	sp, sp, #0x90
    3290:	stp	x29, x30, [sp, #16]
    3294:	add	x29, sp, #0x10
    3298:	stp	x19, x20, [sp, #32]
    329c:	mov	x0, x1
    32a0:	mov	x1, x2
    32a4:	cbz	x3, 3420 <_Py_strhex@plt+0x24b0>
    32a8:	ldr	x19, [x3, #16]
    32ac:	add	x19, x2, x19
    32b0:	add	x2, sp, #0x88
    32b4:	str	x2, [sp]
    32b8:	mov	w7, #0x0                   	// #0
    32bc:	mov	w6, #0x1                   	// #1
    32c0:	mov	w5, #0x0                   	// #0
    32c4:	adrp	x4, 15000 <PyInit__sha512@@Base+0x11034>
    32c8:	add	x4, x4, #0xa0
    32cc:	mov	x2, #0x0                   	// #0
    32d0:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    32d4:	cbz	x0, 34f0 <_Py_strhex@plt+0x2580>
    32d8:	cbz	x19, 34f8 <_Py_strhex@plt+0x2588>
    32dc:	ldr	x20, [x0]
    32e0:	cbz	x20, 34f8 <_Py_strhex@plt+0x2588>
    32e4:	ldr	x0, [x20, #8]
    32e8:	ldr	x1, [x0, #168]
    32ec:	tbnz	w1, #28, 343c <_Py_strhex@plt+0x24cc>
    32f0:	ldr	x0, [x0, #160]
    32f4:	cbz	x0, 345c <_Py_strhex@plt+0x24ec>
    32f8:	ldr	x0, [x0]
    32fc:	cbz	x0, 345c <_Py_strhex@plt+0x24ec>
    3300:	mov	w2, #0x0                   	// #0
    3304:	add	x1, sp, #0x38
    3308:	mov	x0, x20
    330c:	bl	f30 <PyObject_GetBuffer@plt>
    3310:	cmn	w0, #0x1
    3314:	b.eq	34e8 <_Py_strhex@plt+0x2578>  // b.none
    3318:	ldr	w0, [sp, #92]
    331c:	cmp	w0, #0x1
    3320:	b.gt	347c <_Py_strhex@plt+0x250c>
    3324:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    3328:	add	x0, x0, #0xa0
    332c:	add	x0, x0, #0x40
    3330:	bl	f40 <_PyObject_New@plt>
    3334:	mov	x19, x0
    3338:	cbz	x0, 34a4 <_Py_strhex@plt+0x2534>
    333c:	mov	x0, #0x9ed8                	// #40664
    3340:	movk	x0, #0xc105, lsl #16
    3344:	movk	x0, #0x9d5d, lsl #32
    3348:	movk	x0, #0xcbbb, lsl #48
    334c:	str	x0, [x19, #16]
    3350:	mov	x0, #0xd507                	// #54535
    3354:	movk	x0, #0x367c, lsl #16
    3358:	movk	x0, #0x292a, lsl #32
    335c:	movk	x0, #0x629a, lsl #48
    3360:	str	x0, [x19, #24]
    3364:	mov	x0, #0xdd17                	// #56599
    3368:	movk	x0, #0x3070, lsl #16
    336c:	movk	x0, #0x15a, lsl #32
    3370:	movk	x0, #0x9159, lsl #48
    3374:	str	x0, [x19, #32]
    3378:	mov	x0, #0x5939                	// #22841
    337c:	movk	x0, #0xf70e, lsl #16
    3380:	movk	x0, #0xecd8, lsl #32
    3384:	movk	x0, #0x152f, lsl #48
    3388:	str	x0, [x19, #40]
    338c:	mov	x0, #0xb31                 	// #2865
    3390:	movk	x0, #0xffc0, lsl #16
    3394:	movk	x0, #0x2667, lsl #32
    3398:	movk	x0, #0x6733, lsl #48
    339c:	str	x0, [x19, #48]
    33a0:	mov	x0, #0x1511                	// #5393
    33a4:	movk	x0, #0x6858, lsl #16
    33a8:	movk	x0, #0x4a87, lsl #32
    33ac:	movk	x0, #0x8eb4, lsl #48
    33b0:	str	x0, [x19, #56]
    33b4:	mov	x0, #0x8fa7                	// #36775
    33b8:	movk	x0, #0x64f9, lsl #16
    33bc:	movk	x0, #0x2e0d, lsl #32
    33c0:	movk	x0, #0xdb0c, lsl #48
    33c4:	str	x0, [x19, #64]
    33c8:	mov	x0, #0x4fa4                	// #20388
    33cc:	movk	x0, #0xbefa, lsl #16
    33d0:	movk	x0, #0x481d, lsl #32
    33d4:	movk	x0, #0x47b5, lsl #48
    33d8:	str	x0, [x19, #72]
    33dc:	str	wzr, [x19, #80]
    33e0:	str	wzr, [x19, #84]
    33e4:	str	wzr, [x19, #216]
    33e8:	mov	w0, #0x30                  	// #48
    33ec:	str	w0, [x19, #220]
    33f0:	bl	f10 <PyErr_Occurred@plt>
    33f4:	cbz	x0, 34bc <_Py_strhex@plt+0x254c>
    33f8:	ldr	x0, [x19]
    33fc:	sub	x0, x0, #0x1
    3400:	str	x0, [x19]
    3404:	cbz	x0, 34b0 <_Py_strhex@plt+0x2540>
    3408:	mov	x19, x20
    340c:	cbz	x20, 34d4 <_Py_strhex@plt+0x2564>
    3410:	add	x0, sp, #0x38
    3414:	bl	e60 <PyBuffer_Release@plt>
    3418:	mov	x19, #0x0                   	// #0
    341c:	b	34d4 <_Py_strhex@plt+0x2564>
    3420:	cmp	x0, #0x0
    3424:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    3428:	b.ls	3434 <_Py_strhex@plt+0x24c4>  // b.plast
    342c:	mov	x19, x2
    3430:	b	32b0 <_Py_strhex@plt+0x2340>
    3434:	mov	x19, x2
    3438:	b	32d8 <_Py_strhex@plt+0x2368>
    343c:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    3440:	add	x1, x1, #0xa0
    3444:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    3448:	ldr	x0, [x0, #4032]
    344c:	ldr	x0, [x0]
    3450:	bl	eb0 <PyErr_SetString@plt>
    3454:	mov	x19, #0x0                   	// #0
    3458:	b	34d4 <_Py_strhex@plt+0x2564>
    345c:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    3460:	add	x1, x1, #0xd0
    3464:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    3468:	ldr	x0, [x0, #4032]
    346c:	ldr	x0, [x0]
    3470:	bl	eb0 <PyErr_SetString@plt>
    3474:	mov	x19, #0x0                   	// #0
    3478:	b	34d4 <_Py_strhex@plt+0x2564>
    347c:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    3480:	add	x1, x1, #0x100
    3484:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    3488:	ldr	x0, [x0, #4024]
    348c:	ldr	x0, [x0]
    3490:	bl	eb0 <PyErr_SetString@plt>
    3494:	add	x0, sp, #0x38
    3498:	bl	e60 <PyBuffer_Release@plt>
    349c:	mov	x19, #0x0                   	// #0
    34a0:	b	34d4 <_Py_strhex@plt+0x2564>
    34a4:	add	x0, sp, #0x38
    34a8:	bl	e60 <PyBuffer_Release@plt>
    34ac:	b	34d4 <_Py_strhex@plt+0x2564>
    34b0:	mov	x0, x19
    34b4:	bl	e90 <_Py_Dealloc@plt>
    34b8:	b	3408 <_Py_strhex@plt+0x2498>
    34bc:	ldr	x2, [sp, #72]
    34c0:	ldr	x1, [sp, #56]
    34c4:	mov	x0, x19
    34c8:	bl	3140 <_Py_strhex@plt+0x21d0>
    34cc:	add	x0, sp, #0x38
    34d0:	bl	e60 <PyBuffer_Release@plt>
    34d4:	mov	x0, x19
    34d8:	ldp	x19, x20, [sp, #32]
    34dc:	ldp	x29, x30, [sp, #16]
    34e0:	add	sp, sp, #0x90
    34e4:	ret
    34e8:	mov	x19, #0x0                   	// #0
    34ec:	b	34d4 <_Py_strhex@plt+0x2564>
    34f0:	mov	x19, x0
    34f4:	b	34d4 <_Py_strhex@plt+0x2564>
    34f8:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    34fc:	add	x0, x0, #0xa0
    3500:	add	x0, x0, #0x40
    3504:	bl	f40 <_PyObject_New@plt>
    3508:	mov	x19, x0
    350c:	cbz	x0, 34d4 <_Py_strhex@plt+0x2564>
    3510:	mov	x0, #0x9ed8                	// #40664
    3514:	movk	x0, #0xc105, lsl #16
    3518:	movk	x0, #0x9d5d, lsl #32
    351c:	movk	x0, #0xcbbb, lsl #48
    3520:	str	x0, [x19, #16]
    3524:	mov	x0, #0xd507                	// #54535
    3528:	movk	x0, #0x367c, lsl #16
    352c:	movk	x0, #0x292a, lsl #32
    3530:	movk	x0, #0x629a, lsl #48
    3534:	str	x0, [x19, #24]
    3538:	mov	x0, #0xdd17                	// #56599
    353c:	movk	x0, #0x3070, lsl #16
    3540:	movk	x0, #0x15a, lsl #32
    3544:	movk	x0, #0x9159, lsl #48
    3548:	str	x0, [x19, #32]
    354c:	mov	x0, #0x5939                	// #22841
    3550:	movk	x0, #0xf70e, lsl #16
    3554:	movk	x0, #0xecd8, lsl #32
    3558:	movk	x0, #0x152f, lsl #48
    355c:	str	x0, [x19, #40]
    3560:	mov	x0, #0xb31                 	// #2865
    3564:	movk	x0, #0xffc0, lsl #16
    3568:	movk	x0, #0x2667, lsl #32
    356c:	movk	x0, #0x6733, lsl #48
    3570:	str	x0, [x19, #48]
    3574:	mov	x0, #0x1511                	// #5393
    3578:	movk	x0, #0x6858, lsl #16
    357c:	movk	x0, #0x4a87, lsl #32
    3580:	movk	x0, #0x8eb4, lsl #48
    3584:	str	x0, [x19, #56]
    3588:	mov	x0, #0x8fa7                	// #36775
    358c:	movk	x0, #0x64f9, lsl #16
    3590:	movk	x0, #0x2e0d, lsl #32
    3594:	movk	x0, #0xdb0c, lsl #48
    3598:	str	x0, [x19, #64]
    359c:	mov	x0, #0x4fa4                	// #20388
    35a0:	movk	x0, #0xbefa, lsl #16
    35a4:	movk	x0, #0x481d, lsl #32
    35a8:	movk	x0, #0x47b5, lsl #48
    35ac:	str	x0, [x19, #72]
    35b0:	str	wzr, [x19, #80]
    35b4:	str	wzr, [x19, #84]
    35b8:	str	wzr, [x19, #216]
    35bc:	mov	w0, #0x30                  	// #48
    35c0:	str	w0, [x19, #220]
    35c4:	bl	f10 <PyErr_Occurred@plt>
    35c8:	cbz	x0, 34d4 <_Py_strhex@plt+0x2564>
    35cc:	mov	x20, #0x0                   	// #0
    35d0:	b	33f8 <_Py_strhex@plt+0x2488>
    35d4:	sub	sp, sp, #0x90
    35d8:	stp	x29, x30, [sp, #16]
    35dc:	add	x29, sp, #0x10
    35e0:	stp	x19, x20, [sp, #32]
    35e4:	mov	x0, x1
    35e8:	mov	x1, x2
    35ec:	cbz	x3, 376c <_Py_strhex@plt+0x27fc>
    35f0:	ldr	x19, [x3, #16]
    35f4:	add	x19, x2, x19
    35f8:	add	x2, sp, #0x88
    35fc:	str	x2, [sp]
    3600:	mov	w7, #0x0                   	// #0
    3604:	mov	w6, #0x1                   	// #1
    3608:	mov	w5, #0x0                   	// #0
    360c:	adrp	x4, 15000 <PyInit__sha512@@Base+0x11034>
    3610:	add	x4, x4, #0xa0
    3614:	add	x4, x4, #0x1e0
    3618:	mov	x2, #0x0                   	// #0
    361c:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    3620:	cbz	x0, 383c <_Py_strhex@plt+0x28cc>
    3624:	cbz	x19, 3844 <_Py_strhex@plt+0x28d4>
    3628:	ldr	x20, [x0]
    362c:	cbz	x20, 3844 <_Py_strhex@plt+0x28d4>
    3630:	ldr	x0, [x20, #8]
    3634:	ldr	x1, [x0, #168]
    3638:	tbnz	w1, #28, 3788 <_Py_strhex@plt+0x2818>
    363c:	ldr	x0, [x0, #160]
    3640:	cbz	x0, 37a8 <_Py_strhex@plt+0x2838>
    3644:	ldr	x0, [x0]
    3648:	cbz	x0, 37a8 <_Py_strhex@plt+0x2838>
    364c:	mov	w2, #0x0                   	// #0
    3650:	add	x1, sp, #0x38
    3654:	mov	x0, x20
    3658:	bl	f30 <PyObject_GetBuffer@plt>
    365c:	cmn	w0, #0x1
    3660:	b.eq	3834 <_Py_strhex@plt+0x28c4>  // b.none
    3664:	ldr	w0, [sp, #92]
    3668:	cmp	w0, #0x1
    366c:	b.gt	37c8 <_Py_strhex@plt+0x2858>
    3670:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    3674:	add	x0, x0, #0xa0
    3678:	add	x0, x0, #0x220
    367c:	bl	f40 <_PyObject_New@plt>
    3680:	mov	x19, x0
    3684:	cbz	x0, 37f0 <_Py_strhex@plt+0x2880>
    3688:	mov	x0, #0xc908                	// #51464
    368c:	movk	x0, #0xf3bc, lsl #16
    3690:	movk	x0, #0xe667, lsl #32
    3694:	movk	x0, #0x6a09, lsl #48
    3698:	str	x0, [x19, #16]
    369c:	mov	x0, #0xa73b                	// #42811
    36a0:	movk	x0, #0x84ca, lsl #16
    36a4:	movk	x0, #0xae85, lsl #32
    36a8:	movk	x0, #0xbb67, lsl #48
    36ac:	str	x0, [x19, #24]
    36b0:	mov	x0, #0xf82b                	// #63531
    36b4:	movk	x0, #0xfe94, lsl #16
    36b8:	movk	x0, #0xf372, lsl #32
    36bc:	movk	x0, #0x3c6e, lsl #48
    36c0:	str	x0, [x19, #32]
    36c4:	mov	x0, #0x36f1                	// #14065
    36c8:	movk	x0, #0x5f1d, lsl #16
    36cc:	movk	x0, #0xf53a, lsl #32
    36d0:	movk	x0, #0xa54f, lsl #48
    36d4:	str	x0, [x19, #40]
    36d8:	mov	x0, #0x82d1                	// #33489
    36dc:	movk	x0, #0xade6, lsl #16
    36e0:	movk	x0, #0x527f, lsl #32
    36e4:	movk	x0, #0x510e, lsl #48
    36e8:	str	x0, [x19, #48]
    36ec:	mov	x0, #0x6c1f                	// #27679
    36f0:	movk	x0, #0x2b3e, lsl #16
    36f4:	movk	x0, #0x688c, lsl #32
    36f8:	movk	x0, #0x9b05, lsl #48
    36fc:	str	x0, [x19, #56]
    3700:	mov	x0, #0xbd6b                	// #48491
    3704:	movk	x0, #0xfb41, lsl #16
    3708:	movk	x0, #0xd9ab, lsl #32
    370c:	movk	x0, #0x1f83, lsl #48
    3710:	str	x0, [x19, #64]
    3714:	mov	x0, #0x2179                	// #8569
    3718:	movk	x0, #0x137e, lsl #16
    371c:	movk	x0, #0xcd19, lsl #32
    3720:	movk	x0, #0x5be0, lsl #48
    3724:	str	x0, [x19, #72]
    3728:	str	wzr, [x19, #80]
    372c:	str	wzr, [x19, #84]
    3730:	str	wzr, [x19, #216]
    3734:	mov	w0, #0x40                  	// #64
    3738:	str	w0, [x19, #220]
    373c:	bl	f10 <PyErr_Occurred@plt>
    3740:	cbz	x0, 3808 <_Py_strhex@plt+0x2898>
    3744:	ldr	x0, [x19]
    3748:	sub	x0, x0, #0x1
    374c:	str	x0, [x19]
    3750:	cbz	x0, 37fc <_Py_strhex@plt+0x288c>
    3754:	mov	x19, x20
    3758:	cbz	x20, 3820 <_Py_strhex@plt+0x28b0>
    375c:	add	x0, sp, #0x38
    3760:	bl	e60 <PyBuffer_Release@plt>
    3764:	mov	x19, #0x0                   	// #0
    3768:	b	3820 <_Py_strhex@plt+0x28b0>
    376c:	cmp	x0, #0x0
    3770:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    3774:	b.ls	3780 <_Py_strhex@plt+0x2810>  // b.plast
    3778:	mov	x19, x2
    377c:	b	35f8 <_Py_strhex@plt+0x2688>
    3780:	mov	x19, x2
    3784:	b	3624 <_Py_strhex@plt+0x26b4>
    3788:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    378c:	add	x1, x1, #0xa0
    3790:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    3794:	ldr	x0, [x0, #4032]
    3798:	ldr	x0, [x0]
    379c:	bl	eb0 <PyErr_SetString@plt>
    37a0:	mov	x19, #0x0                   	// #0
    37a4:	b	3820 <_Py_strhex@plt+0x28b0>
    37a8:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    37ac:	add	x1, x1, #0xd0
    37b0:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    37b4:	ldr	x0, [x0, #4032]
    37b8:	ldr	x0, [x0]
    37bc:	bl	eb0 <PyErr_SetString@plt>
    37c0:	mov	x19, #0x0                   	// #0
    37c4:	b	3820 <_Py_strhex@plt+0x28b0>
    37c8:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    37cc:	add	x1, x1, #0x100
    37d0:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    37d4:	ldr	x0, [x0, #4024]
    37d8:	ldr	x0, [x0]
    37dc:	bl	eb0 <PyErr_SetString@plt>
    37e0:	add	x0, sp, #0x38
    37e4:	bl	e60 <PyBuffer_Release@plt>
    37e8:	mov	x19, #0x0                   	// #0
    37ec:	b	3820 <_Py_strhex@plt+0x28b0>
    37f0:	add	x0, sp, #0x38
    37f4:	bl	e60 <PyBuffer_Release@plt>
    37f8:	b	3820 <_Py_strhex@plt+0x28b0>
    37fc:	mov	x0, x19
    3800:	bl	e90 <_Py_Dealloc@plt>
    3804:	b	3754 <_Py_strhex@plt+0x27e4>
    3808:	ldr	x2, [sp, #72]
    380c:	ldr	x1, [sp, #56]
    3810:	mov	x0, x19
    3814:	bl	3140 <_Py_strhex@plt+0x21d0>
    3818:	add	x0, sp, #0x38
    381c:	bl	e60 <PyBuffer_Release@plt>
    3820:	mov	x0, x19
    3824:	ldp	x19, x20, [sp, #32]
    3828:	ldp	x29, x30, [sp, #16]
    382c:	add	sp, sp, #0x90
    3830:	ret
    3834:	mov	x19, #0x0                   	// #0
    3838:	b	3820 <_Py_strhex@plt+0x28b0>
    383c:	mov	x19, x0
    3840:	b	3820 <_Py_strhex@plt+0x28b0>
    3844:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    3848:	add	x0, x0, #0xa0
    384c:	add	x0, x0, #0x220
    3850:	bl	f40 <_PyObject_New@plt>
    3854:	mov	x19, x0
    3858:	cbz	x0, 3820 <_Py_strhex@plt+0x28b0>
    385c:	mov	x0, #0xc908                	// #51464
    3860:	movk	x0, #0xf3bc, lsl #16
    3864:	movk	x0, #0xe667, lsl #32
    3868:	movk	x0, #0x6a09, lsl #48
    386c:	str	x0, [x19, #16]
    3870:	mov	x0, #0xa73b                	// #42811
    3874:	movk	x0, #0x84ca, lsl #16
    3878:	movk	x0, #0xae85, lsl #32
    387c:	movk	x0, #0xbb67, lsl #48
    3880:	str	x0, [x19, #24]
    3884:	mov	x0, #0xf82b                	// #63531
    3888:	movk	x0, #0xfe94, lsl #16
    388c:	movk	x0, #0xf372, lsl #32
    3890:	movk	x0, #0x3c6e, lsl #48
    3894:	str	x0, [x19, #32]
    3898:	mov	x0, #0x36f1                	// #14065
    389c:	movk	x0, #0x5f1d, lsl #16
    38a0:	movk	x0, #0xf53a, lsl #32
    38a4:	movk	x0, #0xa54f, lsl #48
    38a8:	str	x0, [x19, #40]
    38ac:	mov	x0, #0x82d1                	// #33489
    38b0:	movk	x0, #0xade6, lsl #16
    38b4:	movk	x0, #0x527f, lsl #32
    38b8:	movk	x0, #0x510e, lsl #48
    38bc:	str	x0, [x19, #48]
    38c0:	mov	x0, #0x6c1f                	// #27679
    38c4:	movk	x0, #0x2b3e, lsl #16
    38c8:	movk	x0, #0x688c, lsl #32
    38cc:	movk	x0, #0x9b05, lsl #48
    38d0:	str	x0, [x19, #56]
    38d4:	mov	x0, #0xbd6b                	// #48491
    38d8:	movk	x0, #0xfb41, lsl #16
    38dc:	movk	x0, #0xd9ab, lsl #32
    38e0:	movk	x0, #0x1f83, lsl #48
    38e4:	str	x0, [x19, #64]
    38e8:	mov	x0, #0x2179                	// #8569
    38ec:	movk	x0, #0x137e, lsl #16
    38f0:	movk	x0, #0xcd19, lsl #32
    38f4:	movk	x0, #0x5be0, lsl #48
    38f8:	str	x0, [x19, #72]
    38fc:	str	wzr, [x19, #80]
    3900:	str	wzr, [x19, #84]
    3904:	str	wzr, [x19, #216]
    3908:	mov	w0, #0x40                  	// #64
    390c:	str	w0, [x19, #220]
    3910:	bl	f10 <PyErr_Occurred@plt>
    3914:	cbz	x0, 3820 <_Py_strhex@plt+0x28b0>
    3918:	mov	x20, #0x0                   	// #0
    391c:	b	3744 <_Py_strhex@plt+0x27d4>
    3920:	stp	x29, x30, [sp, #-112]!
    3924:	mov	x29, sp
    3928:	str	x19, [sp, #16]
    392c:	mov	x19, x0
    3930:	mov	x0, x1
    3934:	ldr	x1, [x1, #8]
    3938:	ldr	x2, [x1, #168]
    393c:	tbnz	w2, #28, 39a8 <_Py_strhex@plt+0x2a38>
    3940:	ldr	x1, [x1, #160]
    3944:	cbz	x1, 39c8 <_Py_strhex@plt+0x2a58>
    3948:	ldr	x1, [x1]
    394c:	cbz	x1, 39c8 <_Py_strhex@plt+0x2a58>
    3950:	mov	w2, #0x0                   	// #0
    3954:	add	x1, sp, #0x20
    3958:	bl	f30 <PyObject_GetBuffer@plt>
    395c:	cmn	w0, #0x1
    3960:	b.eq	3a10 <_Py_strhex@plt+0x2aa0>  // b.none
    3964:	ldr	w0, [sp, #68]
    3968:	cmp	w0, #0x1
    396c:	b.gt	39e8 <_Py_strhex@plt+0x2a78>
    3970:	ldr	x2, [sp, #48]
    3974:	ldr	x1, [sp, #32]
    3978:	mov	x0, x19
    397c:	bl	3140 <_Py_strhex@plt+0x21d0>
    3980:	add	x0, sp, #0x20
    3984:	bl	e60 <PyBuffer_Release@plt>
    3988:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    398c:	ldr	x0, [x0, #4056]
    3990:	ldr	x1, [x0]
    3994:	add	x1, x1, #0x1
    3998:	str	x1, [x0]
    399c:	ldr	x19, [sp, #16]
    39a0:	ldp	x29, x30, [sp], #112
    39a4:	ret
    39a8:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    39ac:	add	x1, x1, #0xa0
    39b0:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    39b4:	ldr	x0, [x0, #4032]
    39b8:	ldr	x0, [x0]
    39bc:	bl	eb0 <PyErr_SetString@plt>
    39c0:	mov	x0, #0x0                   	// #0
    39c4:	b	399c <_Py_strhex@plt+0x2a2c>
    39c8:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    39cc:	add	x1, x1, #0xd0
    39d0:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    39d4:	ldr	x0, [x0, #4032]
    39d8:	ldr	x0, [x0]
    39dc:	bl	eb0 <PyErr_SetString@plt>
    39e0:	mov	x0, #0x0                   	// #0
    39e4:	b	399c <_Py_strhex@plt+0x2a2c>
    39e8:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    39ec:	add	x1, x1, #0x100
    39f0:	adrp	x0, 14000 <PyInit__sha512@@Base+0x10034>
    39f4:	ldr	x0, [x0, #4024]
    39f8:	ldr	x0, [x0]
    39fc:	bl	eb0 <PyErr_SetString@plt>
    3a00:	add	x0, sp, #0x20
    3a04:	bl	e60 <PyBuffer_Release@plt>
    3a08:	mov	x0, #0x0                   	// #0
    3a0c:	b	399c <_Py_strhex@plt+0x2a2c>
    3a10:	mov	x0, #0x0                   	// #0
    3a14:	b	399c <_Py_strhex@plt+0x2a2c>
    3a18:	ldr	w2, [x0, #216]
    3a1c:	str	w2, [x1, #216]
    3a20:	ldr	w2, [x0, #220]
    3a24:	str	w2, [x1, #220]
    3a28:	ldr	w2, [x0, #80]
    3a2c:	str	w2, [x1, #80]
    3a30:	ldr	w2, [x0, #84]
    3a34:	str	w2, [x1, #84]
    3a38:	ldp	x4, x5, [x0, #16]
    3a3c:	stp	x4, x5, [x1, #16]
    3a40:	ldp	x4, x5, [x0, #32]
    3a44:	stp	x4, x5, [x1, #32]
    3a48:	ldp	x4, x5, [x0, #48]
    3a4c:	stp	x4, x5, [x1, #48]
    3a50:	ldp	x4, x5, [x0, #64]
    3a54:	stp	x4, x5, [x1, #64]
    3a58:	add	x2, x1, #0x58
    3a5c:	add	x3, x0, #0x58
    3a60:	ldp	x4, x5, [x0, #88]
    3a64:	stp	x4, x5, [x1, #88]
    3a68:	ldp	x0, x1, [x0, #104]
    3a6c:	stp	x0, x1, [x2, #16]
    3a70:	ldp	x0, x1, [x3, #32]
    3a74:	stp	x0, x1, [x2, #32]
    3a78:	ldp	x0, x1, [x3, #48]
    3a7c:	stp	x0, x1, [x2, #48]
    3a80:	ldp	x0, x1, [x3, #64]
    3a84:	stp	x0, x1, [x2, #64]
    3a88:	ldp	x0, x1, [x3, #80]
    3a8c:	stp	x0, x1, [x2, #80]
    3a90:	ldp	x0, x1, [x3, #96]
    3a94:	stp	x0, x1, [x2, #96]
    3a98:	ldp	x0, x1, [x3, #112]
    3a9c:	stp	x0, x1, [x2, #112]
    3aa0:	ret
    3aa4:	stp	x29, x30, [sp, #-16]!
    3aa8:	mov	x29, sp
    3aac:	ldr	w0, [x0, #220]
    3ab0:	cmp	w0, #0x40
    3ab4:	b.eq	3ad0 <_Py_strhex@plt+0x2b60>  // b.none
    3ab8:	mov	x1, #0x6                   	// #6
    3abc:	adrp	x0, 4000 <PyInit__sha512@@Base+0x34>
    3ac0:	add	x0, x0, #0x1b8
    3ac4:	bl	f60 <PyUnicode_FromStringAndSize@plt>
    3ac8:	ldp	x29, x30, [sp], #16
    3acc:	ret
    3ad0:	mov	x1, #0x6                   	// #6
    3ad4:	adrp	x0, 4000 <PyInit__sha512@@Base+0x34>
    3ad8:	add	x0, x0, #0x1a8
    3adc:	bl	f60 <PyUnicode_FromStringAndSize@plt>
    3ae0:	b	3ac8 <_Py_strhex@plt+0x2b58>
    3ae4:	stp	x29, x30, [sp, #-16]!
    3ae8:	mov	x29, sp
    3aec:	mov	x0, #0x80                  	// #128
    3af0:	bl	ef0 <PyLong_FromLong@plt>
    3af4:	ldp	x29, x30, [sp], #16
    3af8:	ret
    3afc:	stp	x29, x30, [sp, #-64]!
    3b00:	mov	x29, sp
    3b04:	stp	x19, x20, [sp, #16]
    3b08:	stp	x21, x22, [sp, #32]
    3b0c:	str	x23, [sp, #48]
    3b10:	mov	x20, x0
    3b14:	mov	x19, x1
    3b18:	ldr	w21, [x1, #80]
    3b1c:	ldr	w23, [x1, #84]
    3b20:	ubfx	x1, x21, #3, #7
    3b24:	add	x22, x19, #0x58
    3b28:	add	w0, w1, #0x1
    3b2c:	mov	w2, #0xffffff80            	// #-128
    3b30:	strb	w2, [x22, w1, sxtw]
    3b34:	cmp	w0, #0x70
    3b38:	b.le	3e6c <_Py_strhex@plt+0x2efc>
    3b3c:	mov	w2, #0x80                  	// #128
    3b40:	sub	w2, w2, w0
    3b44:	sxtw	x2, w2
    3b48:	mov	w1, #0x0                   	// #0
    3b4c:	add	x0, x22, w0, sxtw
    3b50:	bl	ec0 <memset@plt>
    3b54:	mov	x0, x19
    3b58:	bl	1088 <_Py_strhex@plt+0x118>
    3b5c:	stp	xzr, xzr, [x19, #88]
    3b60:	stp	xzr, xzr, [x22, #16]
    3b64:	stp	xzr, xzr, [x22, #32]
    3b68:	stp	xzr, xzr, [x22, #48]
    3b6c:	stp	xzr, xzr, [x22, #64]
    3b70:	stp	xzr, xzr, [x22, #80]
    3b74:	stp	xzr, xzr, [x22, #96]
    3b78:	strb	wzr, [x19, #200]
    3b7c:	strb	wzr, [x19, #201]
    3b80:	strb	wzr, [x19, #202]
    3b84:	strb	wzr, [x19, #203]
    3b88:	strb	wzr, [x19, #204]
    3b8c:	strb	wzr, [x19, #205]
    3b90:	strb	wzr, [x19, #206]
    3b94:	strb	wzr, [x19, #207]
    3b98:	lsr	w0, w23, #24
    3b9c:	strb	w0, [x19, #208]
    3ba0:	lsr	w0, w23, #16
    3ba4:	strb	w0, [x19, #209]
    3ba8:	lsr	w0, w23, #8
    3bac:	strb	w0, [x19, #210]
    3bb0:	strb	w23, [x19, #211]
    3bb4:	lsr	w0, w21, #24
    3bb8:	strb	w0, [x19, #212]
    3bbc:	lsr	w0, w21, #16
    3bc0:	strb	w0, [x19, #213]
    3bc4:	lsr	w0, w21, #8
    3bc8:	strb	w0, [x19, #214]
    3bcc:	strb	w21, [x19, #215]
    3bd0:	mov	x0, x19
    3bd4:	bl	1088 <_Py_strhex@plt+0x118>
    3bd8:	ldrb	w0, [x19, #23]
    3bdc:	strb	w0, [x20]
    3be0:	ldrh	w0, [x19, #22]
    3be4:	strb	w0, [x20, #1]
    3be8:	ldr	x0, [x19, #16]
    3bec:	lsr	x0, x0, #40
    3bf0:	strb	w0, [x20, #2]
    3bf4:	ldr	w0, [x19, #20]
    3bf8:	strb	w0, [x20, #3]
    3bfc:	ldr	x0, [x19, #16]
    3c00:	lsr	x0, x0, #24
    3c04:	strb	w0, [x20, #4]
    3c08:	ldr	x0, [x19, #16]
    3c0c:	lsr	x0, x0, #16
    3c10:	strb	w0, [x20, #5]
    3c14:	ldr	x0, [x19, #16]
    3c18:	lsr	x0, x0, #8
    3c1c:	strb	w0, [x20, #6]
    3c20:	ldr	x0, [x19, #16]
    3c24:	strb	w0, [x20, #7]
    3c28:	ldrb	w0, [x19, #31]
    3c2c:	strb	w0, [x20, #8]
    3c30:	ldrh	w0, [x19, #30]
    3c34:	strb	w0, [x20, #9]
    3c38:	ldr	x0, [x19, #24]
    3c3c:	lsr	x0, x0, #40
    3c40:	strb	w0, [x20, #10]
    3c44:	ldr	w0, [x19, #28]
    3c48:	strb	w0, [x20, #11]
    3c4c:	ldr	x0, [x19, #24]
    3c50:	lsr	x0, x0, #24
    3c54:	strb	w0, [x20, #12]
    3c58:	ldr	x0, [x19, #24]
    3c5c:	lsr	x0, x0, #16
    3c60:	strb	w0, [x20, #13]
    3c64:	ldr	x0, [x19, #24]
    3c68:	lsr	x0, x0, #8
    3c6c:	strb	w0, [x20, #14]
    3c70:	ldr	x0, [x19, #24]
    3c74:	strb	w0, [x20, #15]
    3c78:	ldrb	w0, [x19, #39]
    3c7c:	strb	w0, [x20, #16]
    3c80:	ldrh	w0, [x19, #38]
    3c84:	strb	w0, [x20, #17]
    3c88:	ldr	x0, [x19, #32]
    3c8c:	lsr	x0, x0, #40
    3c90:	strb	w0, [x20, #18]
    3c94:	ldr	w0, [x19, #36]
    3c98:	strb	w0, [x20, #19]
    3c9c:	ldr	x0, [x19, #32]
    3ca0:	lsr	x0, x0, #24
    3ca4:	strb	w0, [x20, #20]
    3ca8:	ldr	x0, [x19, #32]
    3cac:	lsr	x0, x0, #16
    3cb0:	strb	w0, [x20, #21]
    3cb4:	ldr	x0, [x19, #32]
    3cb8:	lsr	x0, x0, #8
    3cbc:	strb	w0, [x20, #22]
    3cc0:	ldr	x0, [x19, #32]
    3cc4:	strb	w0, [x20, #23]
    3cc8:	ldrb	w0, [x19, #47]
    3ccc:	strb	w0, [x20, #24]
    3cd0:	ldrh	w0, [x19, #46]
    3cd4:	strb	w0, [x20, #25]
    3cd8:	ldr	x0, [x19, #40]
    3cdc:	lsr	x0, x0, #40
    3ce0:	strb	w0, [x20, #26]
    3ce4:	ldr	w0, [x19, #44]
    3ce8:	strb	w0, [x20, #27]
    3cec:	ldr	x0, [x19, #40]
    3cf0:	lsr	x0, x0, #24
    3cf4:	strb	w0, [x20, #28]
    3cf8:	ldr	x0, [x19, #40]
    3cfc:	lsr	x0, x0, #16
    3d00:	strb	w0, [x20, #29]
    3d04:	ldr	x0, [x19, #40]
    3d08:	lsr	x0, x0, #8
    3d0c:	strb	w0, [x20, #30]
    3d10:	ldr	x0, [x19, #40]
    3d14:	strb	w0, [x20, #31]
    3d18:	ldrb	w0, [x19, #55]
    3d1c:	strb	w0, [x20, #32]
    3d20:	ldrh	w0, [x19, #54]
    3d24:	strb	w0, [x20, #33]
    3d28:	ldr	x0, [x19, #48]
    3d2c:	lsr	x0, x0, #40
    3d30:	strb	w0, [x20, #34]
    3d34:	ldr	w0, [x19, #52]
    3d38:	strb	w0, [x20, #35]
    3d3c:	ldr	x0, [x19, #48]
    3d40:	lsr	x0, x0, #24
    3d44:	strb	w0, [x20, #36]
    3d48:	ldr	x0, [x19, #48]
    3d4c:	lsr	x0, x0, #16
    3d50:	strb	w0, [x20, #37]
    3d54:	ldr	x0, [x19, #48]
    3d58:	lsr	x0, x0, #8
    3d5c:	strb	w0, [x20, #38]
    3d60:	ldr	x0, [x19, #48]
    3d64:	strb	w0, [x20, #39]
    3d68:	ldrb	w0, [x19, #63]
    3d6c:	strb	w0, [x20, #40]
    3d70:	ldrh	w0, [x19, #62]
    3d74:	strb	w0, [x20, #41]
    3d78:	ldr	x0, [x19, #56]
    3d7c:	lsr	x0, x0, #40
    3d80:	strb	w0, [x20, #42]
    3d84:	ldr	w0, [x19, #60]
    3d88:	strb	w0, [x20, #43]
    3d8c:	ldr	x0, [x19, #56]
    3d90:	lsr	x0, x0, #24
    3d94:	strb	w0, [x20, #44]
    3d98:	ldr	x0, [x19, #56]
    3d9c:	lsr	x0, x0, #16
    3da0:	strb	w0, [x20, #45]
    3da4:	ldr	x0, [x19, #56]
    3da8:	lsr	x0, x0, #8
    3dac:	strb	w0, [x20, #46]
    3db0:	ldr	x0, [x19, #56]
    3db4:	strb	w0, [x20, #47]
    3db8:	ldrb	w0, [x19, #71]
    3dbc:	strb	w0, [x20, #48]
    3dc0:	ldrh	w0, [x19, #70]
    3dc4:	strb	w0, [x20, #49]
    3dc8:	ldr	x0, [x19, #64]
    3dcc:	lsr	x0, x0, #40
    3dd0:	strb	w0, [x20, #50]
    3dd4:	ldr	w0, [x19, #68]
    3dd8:	strb	w0, [x20, #51]
    3ddc:	ldr	x0, [x19, #64]
    3de0:	lsr	x0, x0, #24
    3de4:	strb	w0, [x20, #52]
    3de8:	ldr	x0, [x19, #64]
    3dec:	lsr	x0, x0, #16
    3df0:	strb	w0, [x20, #53]
    3df4:	ldr	x0, [x19, #64]
    3df8:	lsr	x0, x0, #8
    3dfc:	strb	w0, [x20, #54]
    3e00:	ldr	x0, [x19, #64]
    3e04:	strb	w0, [x20, #55]
    3e08:	ldrb	w0, [x19, #79]
    3e0c:	strb	w0, [x20, #56]
    3e10:	ldrh	w0, [x19, #78]
    3e14:	strb	w0, [x20, #57]
    3e18:	ldr	x0, [x19, #72]
    3e1c:	lsr	x0, x0, #40
    3e20:	strb	w0, [x20, #58]
    3e24:	ldr	w0, [x19, #76]
    3e28:	strb	w0, [x20, #59]
    3e2c:	ldr	x0, [x19, #72]
    3e30:	lsr	x0, x0, #24
    3e34:	strb	w0, [x20, #60]
    3e38:	ldr	x0, [x19, #72]
    3e3c:	lsr	x0, x0, #16
    3e40:	strb	w0, [x20, #61]
    3e44:	ldr	x0, [x19, #72]
    3e48:	lsr	x0, x0, #8
    3e4c:	strb	w0, [x20, #62]
    3e50:	ldr	x0, [x19, #72]
    3e54:	strb	w0, [x20, #63]
    3e58:	ldp	x19, x20, [sp, #16]
    3e5c:	ldp	x21, x22, [sp, #32]
    3e60:	ldr	x23, [sp, #48]
    3e64:	ldp	x29, x30, [sp], #64
    3e68:	ret
    3e6c:	mov	w2, #0x70                  	// #112
    3e70:	sub	w2, w2, w0
    3e74:	sxtw	x2, w2
    3e78:	mov	w1, #0x0                   	// #0
    3e7c:	add	x0, x22, w0, sxtw
    3e80:	bl	ec0 <memset@plt>
    3e84:	b	3b78 <_Py_strhex@plt+0x2c08>
    3e88:	stp	x29, x30, [sp, #-336]!
    3e8c:	mov	x29, sp
    3e90:	stp	x19, x20, [sp, #16]
    3e94:	str	x21, [sp, #32]
    3e98:	mov	x20, x0
    3e9c:	add	x21, sp, #0x30
    3ea0:	mov	x1, x21
    3ea4:	bl	3a18 <_Py_strhex@plt+0x2aa8>
    3ea8:	add	x19, sp, #0x110
    3eac:	mov	x1, x21
    3eb0:	mov	x0, x19
    3eb4:	bl	3afc <_Py_strhex@plt+0x2b8c>
    3eb8:	ldrsw	x1, [x20, #220]
    3ebc:	mov	x0, x19
    3ec0:	bl	f70 <_Py_strhex@plt>
    3ec4:	ldp	x19, x20, [sp, #16]
    3ec8:	ldr	x21, [sp, #32]
    3ecc:	ldp	x29, x30, [sp], #336
    3ed0:	ret
    3ed4:	stp	x29, x30, [sp, #-16]!
    3ed8:	mov	x29, sp
    3edc:	bl	3e88 <_Py_strhex@plt+0x2f18>
    3ee0:	ldp	x29, x30, [sp], #16
    3ee4:	ret
    3ee8:	stp	x29, x30, [sp, #-336]!
    3eec:	mov	x29, sp
    3ef0:	stp	x19, x20, [sp, #16]
    3ef4:	str	x21, [sp, #32]
    3ef8:	mov	x20, x0
    3efc:	add	x21, sp, #0x30
    3f00:	mov	x1, x21
    3f04:	bl	3a18 <_Py_strhex@plt+0x2aa8>
    3f08:	add	x19, sp, #0x110
    3f0c:	mov	x1, x21
    3f10:	mov	x0, x19
    3f14:	bl	3afc <_Py_strhex@plt+0x2b8c>
    3f18:	ldrsw	x1, [x20, #220]
    3f1c:	mov	x0, x19
    3f20:	bl	e80 <PyBytes_FromStringAndSize@plt>
    3f24:	ldp	x19, x20, [sp, #16]
    3f28:	ldr	x21, [sp, #32]
    3f2c:	ldp	x29, x30, [sp], #336
    3f30:	ret
    3f34:	stp	x29, x30, [sp, #-16]!
    3f38:	mov	x29, sp
    3f3c:	bl	3ee8 <_Py_strhex@plt+0x2f78>
    3f40:	ldp	x29, x30, [sp], #16
    3f44:	ret
    3f48:	stp	x29, x30, [sp, #-16]!
    3f4c:	mov	x29, sp
    3f50:	bl	ed0 <PyObject_Free@plt>
    3f54:	ldp	x29, x30, [sp], #16
    3f58:	ret
    3f5c:	stp	x29, x30, [sp, #-32]!
    3f60:	mov	x29, sp
    3f64:	stp	x19, x20, [sp, #16]
    3f68:	mov	x20, x0
    3f6c:	adrp	x1, 15000 <PyInit__sha512@@Base+0x11034>
    3f70:	add	x1, x1, #0xa0
    3f74:	add	x1, x1, #0x220
    3f78:	ldr	x0, [x0, #8]
    3f7c:	cmp	x0, x1
    3f80:	b.eq	3fb8 <_Py_strhex@plt+0x3048>  // b.none
    3f84:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    3f88:	add	x0, x0, #0xa0
    3f8c:	add	x0, x0, #0x40
    3f90:	bl	f40 <_PyObject_New@plt>
    3f94:	mov	x19, x0
    3f98:	cbz	x0, 3fa8 <_Py_strhex@plt+0x3038>
    3f9c:	mov	x1, x19
    3fa0:	mov	x0, x20
    3fa4:	bl	3a18 <_Py_strhex@plt+0x2aa8>
    3fa8:	mov	x0, x19
    3fac:	ldp	x19, x20, [sp, #16]
    3fb0:	ldp	x29, x30, [sp], #32
    3fb4:	ret
    3fb8:	mov	x0, x1
    3fbc:	bl	f40 <_PyObject_New@plt>
    3fc0:	mov	x19, x0
    3fc4:	cbnz	x0, 3f9c <_Py_strhex@plt+0x302c>
    3fc8:	b	3fa8 <_Py_strhex@plt+0x3038>

0000000000003fcc <PyInit__sha512@@Base>:
    3fcc:	stp	x29, x30, [sp, #-32]!
    3fd0:	mov	x29, sp
    3fd4:	stp	x19, x20, [sp, #16]
    3fd8:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    3fdc:	add	x0, x0, #0xa0
    3fe0:	add	x0, x0, #0x40
    3fe4:	adrp	x1, 14000 <PyInit__sha512@@Base+0x10034>
    3fe8:	ldr	x1, [x1, #4048]
    3fec:	str	x1, [x0, #8]
    3ff0:	bl	ee0 <PyType_Ready@plt>
    3ff4:	mov	x19, #0x0                   	// #0
    3ff8:	tbnz	w0, #31, 4080 <PyInit__sha512@@Base+0xb4>
    3ffc:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    4000:	add	x0, x0, #0xa0
    4004:	add	x0, x0, #0x220
    4008:	adrp	x1, 14000 <PyInit__sha512@@Base+0x10034>
    400c:	ldr	x1, [x1, #4048]
    4010:	str	x1, [x0, #8]
    4014:	bl	ee0 <PyType_Ready@plt>
    4018:	tbnz	w0, #31, 4080 <PyInit__sha512@@Base+0xb4>
    401c:	mov	w1, #0x3f5                 	// #1013
    4020:	adrp	x0, 15000 <PyInit__sha512@@Base+0x11034>
    4024:	add	x0, x0, #0xa0
    4028:	add	x0, x0, #0x3c0
    402c:	bl	f20 <PyModule_Create2@plt>
    4030:	mov	x19, x0
    4034:	cbz	x0, 4080 <PyInit__sha512@@Base+0xb4>
    4038:	adrp	x20, 15000 <PyInit__sha512@@Base+0x11034>
    403c:	add	x20, x20, #0xa0
    4040:	ldr	x0, [x20, #64]
    4044:	add	x0, x0, #0x1
    4048:	str	x0, [x20, #64]
    404c:	add	x2, x20, #0x40
    4050:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    4054:	add	x1, x1, #0x120
    4058:	mov	x0, x19
    405c:	bl	f50 <PyModule_AddObject@plt>
    4060:	ldr	x0, [x20, #544]
    4064:	add	x0, x0, #0x1
    4068:	str	x0, [x20, #544]
    406c:	add	x2, x20, #0x220
    4070:	adrp	x1, 4000 <PyInit__sha512@@Base+0x34>
    4074:	add	x1, x1, #0x130
    4078:	mov	x0, x19
    407c:	bl	f50 <PyModule_AddObject@plt>
    4080:	mov	x0, x19
    4084:	ldp	x19, x20, [sp, #16]
    4088:	ldp	x29, x30, [sp], #32
    408c:	ret

Disassembly of section .fini:

0000000000004090 <.fini>:
    4090:	stp	x29, x30, [sp, #-16]!
    4094:	mov	x29, sp
    4098:	ldp	x29, x30, [sp], #16
    409c:	ret
