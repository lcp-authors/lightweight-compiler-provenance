
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-system-update-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400b10 <_init>:
  400b10:	stp	x29, x30, [sp, #-16]!
  400b14:	mov	x29, sp
  400b18:	bl	400ce0 <call_weak_fn>
  400b1c:	ldp	x29, x30, [sp], #16
  400b20:	ret

Disassembly of section .plt:

0000000000400b30 <.plt>:
  400b30:	stp	x16, x30, [sp, #-16]!
  400b34:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400b38:	ldr	x17, [x16, #3912]
  400b3c:	add	x16, x16, #0xf48
  400b40:	br	x17
  400b44:	nop
  400b48:	nop
  400b4c:	nop

0000000000400b50 <stpcpy@plt>:
  400b50:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400b54:	ldr	x17, [x16, #3920]
  400b58:	add	x16, x16, #0xf50
  400b5c:	br	x17

0000000000400b60 <__libc_start_main@plt>:
  400b60:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400b64:	ldr	x17, [x16, #3928]
  400b68:	add	x16, x16, #0xf58
  400b6c:	br	x17

0000000000400b70 <__gmon_start__@plt>:
  400b70:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400b74:	ldr	x17, [x16, #3936]
  400b78:	add	x16, x16, #0xf60
  400b7c:	br	x17

0000000000400b80 <polkit_agent_close@plt>:
  400b80:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400b84:	ldr	x17, [x16, #3944]
  400b88:	add	x16, x16, #0xf68
  400b8c:	br	x17

0000000000400b90 <symlink@plt>:
  400b90:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400b94:	ldr	x17, [x16, #3952]
  400b98:	add	x16, x16, #0xf70
  400b9c:	br	x17

0000000000400ba0 <log_assert_failed_realm@plt>:
  400ba0:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400ba4:	ldr	x17, [x16, #3960]
  400ba8:	add	x16, x16, #0xf78
  400bac:	br	x17

0000000000400bb0 <runlevel_to_target@plt>:
  400bb0:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400bb4:	ldr	x17, [x16, #3968]
  400bb8:	add	x16, x16, #0xf80
  400bbc:	br	x17

0000000000400bc0 <faccessat@plt>:
  400bc0:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400bc4:	ldr	x17, [x16, #3976]
  400bc8:	add	x16, x16, #0xf88
  400bcc:	br	x17

0000000000400bd0 <abort@plt>:
  400bd0:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400bd4:	ldr	x17, [x16, #3984]
  400bd8:	add	x16, x16, #0xf90
  400bdc:	br	x17

0000000000400be0 <log_setup_generator@plt>:
  400be0:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400be4:	ldr	x17, [x16, #3992]
  400be8:	add	x16, x16, #0xf98
  400bec:	br	x17

0000000000400bf0 <__errno_location@plt>:
  400bf0:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400bf4:	ldr	x17, [x16, #4000]
  400bf8:	add	x16, x16, #0xfa0
  400bfc:	br	x17

0000000000400c00 <__stack_chk_fail@plt>:
  400c00:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c04:	ldr	x17, [x16, #4008]
  400c08:	add	x16, x16, #0xfa8
  400c0c:	br	x17

0000000000400c10 <ask_password_agent_close@plt>:
  400c10:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c14:	ldr	x17, [x16, #4016]
  400c18:	add	x16, x16, #0xfb0
  400c1c:	br	x17

0000000000400c20 <pager_close@plt>:
  400c20:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c24:	ldr	x17, [x16, #4024]
  400c28:	add	x16, x16, #0xfb8
  400c2c:	br	x17

0000000000400c30 <log_internal_realm@plt>:
  400c30:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c34:	ldr	x17, [x16, #4032]
  400c38:	add	x16, x16, #0xfc0
  400c3c:	br	x17

0000000000400c40 <strcmp@plt>:
  400c40:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c44:	ldr	x17, [x16, #4040]
  400c48:	add	x16, x16, #0xfc8
  400c4c:	br	x17

0000000000400c50 <proc_cmdline_parse@plt>:
  400c50:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c54:	ldr	x17, [x16, #4048]
  400c58:	add	x16, x16, #0xfd0
  400c5c:	br	x17

0000000000400c60 <mac_selinux_finish@plt>:
  400c60:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c64:	ldr	x17, [x16, #4056]
  400c68:	add	x16, x16, #0xfd8
  400c6c:	br	x17

0000000000400c70 <strlen@plt>:
  400c70:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c74:	ldr	x17, [x16, #4064]
  400c78:	add	x16, x16, #0xfe0
  400c7c:	br	x17

0000000000400c80 <log_get_max_level_realm@plt>:
  400c80:	adrp	x16, 412000 <__FRAME_END__+0x10170>
  400c84:	ldr	x17, [x16, #4072]
  400c88:	add	x16, x16, #0xfe8
  400c8c:	br	x17

Disassembly of section .text:

0000000000400c90 <_start>:
  400c90:	mov	x29, #0x0                   	// #0
  400c94:	mov	x30, #0x0                   	// #0
  400c98:	mov	x5, x0
  400c9c:	ldr	x1, [sp]
  400ca0:	add	x2, sp, #0x8
  400ca4:	mov	x6, sp
  400ca8:	movz	x0, #0x0, lsl #48
  400cac:	movk	x0, #0x0, lsl #32
  400cb0:	movk	x0, #0x40, lsl #16
  400cb4:	movk	x0, #0x16ac
  400cb8:	movz	x3, #0x0, lsl #48
  400cbc:	movk	x3, #0x0, lsl #32
  400cc0:	movk	x3, #0x40, lsl #16
  400cc4:	movk	x3, #0x1800
  400cc8:	movz	x4, #0x0, lsl #48
  400ccc:	movk	x4, #0x0, lsl #32
  400cd0:	movk	x4, #0x40, lsl #16
  400cd4:	movk	x4, #0x1880
  400cd8:	bl	400b60 <__libc_start_main@plt>
  400cdc:	bl	400bd0 <abort@plt>

0000000000400ce0 <call_weak_fn>:
  400ce0:	adrp	x0, 412000 <__FRAME_END__+0x10170>
  400ce4:	ldr	x0, [x0, #4088]
  400ce8:	cbz	x0, 400cf0 <call_weak_fn+0x10>
  400cec:	b	400b70 <__gmon_start__@plt>
  400cf0:	ret

0000000000400cf4 <deregister_tm_clones>:
  400cf4:	stp	x29, x30, [sp, #-32]!
  400cf8:	mov	x29, sp
  400cfc:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d00:	add	x0, x0, #0x0
  400d04:	str	x0, [sp, #24]
  400d08:	ldr	x0, [sp, #24]
  400d0c:	str	x0, [sp, #24]
  400d10:	ldr	x1, [sp, #24]
  400d14:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d18:	add	x0, x0, #0x0
  400d1c:	cmp	x1, x0
  400d20:	b.eq	400d5c <deregister_tm_clones+0x68>  // b.none
  400d24:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  400d28:	add	x0, x0, #0x898
  400d2c:	ldr	x0, [x0]
  400d30:	str	x0, [sp, #16]
  400d34:	ldr	x0, [sp, #16]
  400d38:	str	x0, [sp, #16]
  400d3c:	ldr	x0, [sp, #16]
  400d40:	cmp	x0, #0x0
  400d44:	b.eq	400d60 <deregister_tm_clones+0x6c>  // b.none
  400d48:	ldr	x1, [sp, #16]
  400d4c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d50:	add	x0, x0, #0x0
  400d54:	blr	x1
  400d58:	b	400d60 <deregister_tm_clones+0x6c>
  400d5c:	nop
  400d60:	ldp	x29, x30, [sp], #32
  400d64:	ret

0000000000400d68 <register_tm_clones>:
  400d68:	stp	x29, x30, [sp, #-48]!
  400d6c:	mov	x29, sp
  400d70:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d74:	add	x0, x0, #0x0
  400d78:	str	x0, [sp, #40]
  400d7c:	ldr	x0, [sp, #40]
  400d80:	str	x0, [sp, #40]
  400d84:	ldr	x1, [sp, #40]
  400d88:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d8c:	add	x0, x0, #0x0
  400d90:	sub	x0, x1, x0
  400d94:	asr	x0, x0, #3
  400d98:	lsr	x1, x0, #63
  400d9c:	add	x0, x1, x0
  400da0:	asr	x0, x0, #1
  400da4:	str	x0, [sp, #32]
  400da8:	ldr	x0, [sp, #32]
  400dac:	cmp	x0, #0x0
  400db0:	b.eq	400df0 <register_tm_clones+0x88>  // b.none
  400db4:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  400db8:	add	x0, x0, #0x8a0
  400dbc:	ldr	x0, [x0]
  400dc0:	str	x0, [sp, #24]
  400dc4:	ldr	x0, [sp, #24]
  400dc8:	str	x0, [sp, #24]
  400dcc:	ldr	x0, [sp, #24]
  400dd0:	cmp	x0, #0x0
  400dd4:	b.eq	400df4 <register_tm_clones+0x8c>  // b.none
  400dd8:	ldr	x2, [sp, #24]
  400ddc:	ldr	x1, [sp, #32]
  400de0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400de4:	add	x0, x0, #0x0
  400de8:	blr	x2
  400dec:	b	400df4 <register_tm_clones+0x8c>
  400df0:	nop
  400df4:	ldp	x29, x30, [sp], #48
  400df8:	ret

0000000000400dfc <__do_global_dtors_aux>:
  400dfc:	stp	x29, x30, [sp, #-16]!
  400e00:	mov	x29, sp
  400e04:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400e08:	add	x0, x0, #0xc
  400e0c:	ldrb	w0, [x0]
  400e10:	and	x0, x0, #0xff
  400e14:	cmp	x0, #0x0
  400e18:	b.ne	400e34 <__do_global_dtors_aux+0x38>  // b.any
  400e1c:	bl	400cf4 <deregister_tm_clones>
  400e20:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400e24:	add	x0, x0, #0xc
  400e28:	mov	w1, #0x1                   	// #1
  400e2c:	strb	w1, [x0]
  400e30:	b	400e38 <__do_global_dtors_aux+0x3c>
  400e34:	nop
  400e38:	ldp	x29, x30, [sp], #16
  400e3c:	ret

0000000000400e40 <frame_dummy>:
  400e40:	stp	x29, x30, [sp, #-16]!
  400e44:	mov	x29, sp
  400e48:	bl	400d68 <register_tm_clones>
  400e4c:	nop
  400e50:	ldp	x29, x30, [sp], #16
  400e54:	ret

0000000000400e58 <ALIGN_TO>:
  400e58:	sub	sp, sp, #0x10
  400e5c:	str	x0, [sp, #8]
  400e60:	str	x1, [sp]
  400e64:	ldr	x1, [sp, #8]
  400e68:	ldr	x0, [sp]
  400e6c:	add	x0, x1, x0
  400e70:	sub	x1, x0, #0x1
  400e74:	ldr	x0, [sp]
  400e78:	neg	x0, x0
  400e7c:	and	x0, x1, x0
  400e80:	add	sp, sp, #0x10
  400e84:	ret

0000000000400e88 <size_multiply_overflow>:
  400e88:	sub	sp, sp, #0x10
  400e8c:	str	x0, [sp, #8]
  400e90:	str	x1, [sp]
  400e94:	ldr	x0, [sp]
  400e98:	cmp	x0, #0x0
  400e9c:	cset	w0, ne  // ne = any
  400ea0:	and	w0, w0, #0xff
  400ea4:	and	x0, x0, #0xff
  400ea8:	cmp	x0, #0x0
  400eac:	b.eq	400ef0 <size_multiply_overflow+0x68>  // b.none
  400eb0:	mov	x2, #0x0                   	// #0
  400eb4:	ldr	x1, [sp, #8]
  400eb8:	ldr	x0, [sp]
  400ebc:	umulh	x0, x1, x0
  400ec0:	cmp	x0, #0x0
  400ec4:	b.eq	400ecc <size_multiply_overflow+0x44>  // b.none
  400ec8:	mov	x2, #0x1                   	// #1
  400ecc:	mov	x0, x2
  400ed0:	cmp	x0, #0x0
  400ed4:	cset	w0, ne  // ne = any
  400ed8:	and	w0, w0, #0xff
  400edc:	and	x0, x0, #0xff
  400ee0:	cmp	x0, #0x0
  400ee4:	b.eq	400ef0 <size_multiply_overflow+0x68>  // b.none
  400ee8:	mov	w0, #0x1                   	// #1
  400eec:	b	400ef4 <size_multiply_overflow+0x6c>
  400ef0:	mov	w0, #0x0                   	// #0
  400ef4:	and	w0, w0, #0x1
  400ef8:	and	w0, w0, #0xff
  400efc:	add	sp, sp, #0x10
  400f00:	ret

0000000000400f04 <save_argc_argv>:
  400f04:	sub	sp, sp, #0x10
  400f08:	str	w0, [sp, #12]
  400f0c:	str	x1, [sp]
  400f10:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400f14:	add	x0, x0, #0x8
  400f18:	ldr	w1, [sp, #12]
  400f1c:	str	w1, [x0]
  400f20:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400f24:	add	x0, x0, #0x0
  400f28:	ldr	x1, [sp]
  400f2c:	str	x1, [x0]
  400f30:	nop
  400f34:	add	sp, sp, #0x10
  400f38:	ret

0000000000400f3c <static_destruct>:
  400f3c:	stp	x29, x30, [sp, #-32]!
  400f40:	mov	x29, sp
  400f44:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  400f48:	add	x0, x0, #0xb70
  400f4c:	ldr	x0, [x0]
  400f50:	cmp	x0, #0x0
  400f54:	b.eq	400fb8 <static_destruct+0x7c>  // b.none
  400f58:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  400f5c:	add	x0, x0, #0xb70
  400f60:	ldr	x0, [x0]
  400f64:	mov	x1, #0x8                   	// #8
  400f68:	bl	400e58 <ALIGN_TO>
  400f6c:	str	x0, [sp, #24]
  400f70:	b	400f9c <static_destruct+0x60>
  400f74:	ldr	x0, [sp, #24]
  400f78:	ldr	x1, [x0, #8]
  400f7c:	ldr	x0, [sp, #24]
  400f80:	ldr	x0, [x0]
  400f84:	blr	x1
  400f88:	ldr	x0, [sp, #24]
  400f8c:	add	x0, x0, #0x10
  400f90:	mov	x1, #0x8                   	// #8
  400f94:	bl	400e58 <ALIGN_TO>
  400f98:	str	x0, [sp, #24]
  400f9c:	ldr	x1, [sp, #24]
  400fa0:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  400fa4:	add	x0, x0, #0xb78
  400fa8:	ldr	x0, [x0]
  400fac:	cmp	x1, x0
  400fb0:	b.cc	400f74 <static_destruct+0x38>  // b.lo, b.ul, b.last
  400fb4:	b	400fbc <static_destruct+0x80>
  400fb8:	nop
  400fbc:	ldp	x29, x30, [sp], #32
  400fc0:	ret

0000000000400fc4 <proc_cmdline_value_missing>:
  400fc4:	stp	x29, x30, [sp, #-48]!
  400fc8:	mov	x29, sp
  400fcc:	str	x0, [sp, #24]
  400fd0:	str	x1, [sp, #16]
  400fd4:	ldr	x0, [sp, #16]
  400fd8:	cmp	x0, #0x0
  400fdc:	b.ne	401060 <proc_cmdline_value_missing+0x9c>  // b.any
  400fe0:	mov	w0, #0x4                   	// #4
  400fe4:	str	w0, [sp, #36]
  400fe8:	str	wzr, [sp, #40]
  400fec:	str	wzr, [sp, #44]
  400ff0:	ldr	w0, [sp, #44]
  400ff4:	bl	400c80 <log_get_max_level_realm@plt>
  400ff8:	mov	w1, w0
  400ffc:	ldr	w0, [sp, #36]
  401000:	and	w0, w0, #0x7
  401004:	cmp	w1, w0
  401008:	b.lt	401050 <proc_cmdline_value_missing+0x8c>  // b.tstop
  40100c:	ldr	w0, [sp, #44]
  401010:	lsl	w1, w0, #10
  401014:	ldr	w0, [sp, #36]
  401018:	orr	w7, w1, w0
  40101c:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401020:	add	x1, x0, #0x8ab
  401024:	ldr	x6, [sp, #24]
  401028:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40102c:	add	x5, x0, #0x8c8
  401030:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401034:	add	x4, x0, #0xbe0
  401038:	mov	w3, #0x21                  	// #33
  40103c:	mov	x2, x1
  401040:	ldr	w1, [sp, #40]
  401044:	mov	w0, w7
  401048:	bl	400c30 <log_internal_realm@plt>
  40104c:	b	401058 <proc_cmdline_value_missing+0x94>
  401050:	ldr	w0, [sp, #40]
  401054:	cmp	w0, #0x0
  401058:	mov	w0, #0x1                   	// #1
  40105c:	b	401064 <proc_cmdline_value_missing+0xa0>
  401060:	mov	w0, #0x0                   	// #0
  401064:	ldp	x29, x30, [sp], #48
  401068:	ret

000000000040106c <generate_symlink>:
  40106c:	stp	x29, x30, [sp, #-112]!
  401070:	mov	x29, sp
  401074:	adrp	x0, 412000 <__FRAME_END__+0x10170>
  401078:	add	x0, x0, #0xd00
  40107c:	ldr	x1, [x0]
  401080:	str	x1, [x29, #104]
  401084:	mov	x1, #0x0                   	// #0
  401088:	str	xzr, [x29, #64]
  40108c:	mov	w3, #0x100                 	// #256
  401090:	mov	w2, #0x0                   	// #0
  401094:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401098:	add	x1, x0, #0x908
  40109c:	mov	w0, #0xffffff9c            	// #-100
  4010a0:	bl	400bc0 <faccessat@plt>
  4010a4:	cmp	w0, #0x0
  4010a8:	b.ge	401148 <generate_symlink+0xdc>  // b.tcont
  4010ac:	bl	400bf0 <__errno_location@plt>
  4010b0:	ldr	w0, [x0]
  4010b4:	cmp	w0, #0x2
  4010b8:	b.ne	4010c4 <generate_symlink+0x58>  // b.any
  4010bc:	mov	w0, #0x0                   	// #0
  4010c0:	b	40139c <generate_symlink+0x330>
  4010c4:	mov	w0, #0x3                   	// #3
  4010c8:	str	w0, [x29, #28]
  4010cc:	bl	400bf0 <__errno_location@plt>
  4010d0:	ldr	w0, [x0]
  4010d4:	str	w0, [x29, #32]
  4010d8:	str	wzr, [x29, #36]
  4010dc:	ldr	w0, [x29, #36]
  4010e0:	bl	400c80 <log_get_max_level_realm@plt>
  4010e4:	mov	w1, w0
  4010e8:	ldr	w0, [x29, #28]
  4010ec:	and	w0, w0, #0x7
  4010f0:	cmp	w1, w0
  4010f4:	b.lt	401138 <generate_symlink+0xcc>  // b.tstop
  4010f8:	ldr	w0, [x29, #36]
  4010fc:	lsl	w1, w0, #10
  401100:	ldr	w0, [x29, #28]
  401104:	orr	w6, w1, w0
  401108:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40110c:	add	x1, x0, #0x91b
  401110:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401114:	add	x5, x0, #0x958
  401118:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40111c:	add	x4, x0, #0xb80
  401120:	mov	w3, #0x1c                  	// #28
  401124:	mov	x2, x1
  401128:	ldr	w1, [x29, #32]
  40112c:	mov	w0, w6
  401130:	bl	400c30 <log_internal_realm@plt>
  401134:	b	401140 <generate_symlink+0xd4>
  401138:	ldr	w0, [x29, #32]
  40113c:	cmp	w0, #0x0
  401140:	mov	w0, #0xffffffea            	// #-22
  401144:	b	40139c <generate_symlink+0x330>
  401148:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40114c:	add	x0, x0, #0x10
  401150:	ldr	x0, [x0]
  401154:	str	x0, [x29, #88]
  401158:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40115c:	add	x0, x0, #0x980
  401160:	str	x0, [x29, #96]
  401164:	str	xzr, [x29, #48]
  401168:	str	xzr, [x29, #56]
  40116c:	b	4011a0 <generate_symlink+0x134>
  401170:	ldr	x0, [x29, #56]
  401174:	lsl	x0, x0, #3
  401178:	add	x1, x29, #0x58
  40117c:	ldr	x0, [x1, x0]
  401180:	bl	400c70 <strlen@plt>
  401184:	mov	x1, x0
  401188:	ldr	x0, [x29, #48]
  40118c:	add	x0, x0, x1
  401190:	str	x0, [x29, #48]
  401194:	ldr	x0, [x29, #56]
  401198:	add	x0, x0, #0x1
  40119c:	str	x0, [x29, #56]
  4011a0:	ldr	x0, [x29, #56]
  4011a4:	cmp	x0, #0x1
  4011a8:	b.hi	4011c4 <generate_symlink+0x158>  // b.pmore
  4011ac:	ldr	x0, [x29, #56]
  4011b0:	lsl	x0, x0, #3
  4011b4:	add	x1, x29, #0x58
  4011b8:	ldr	x0, [x1, x0]
  4011bc:	cmp	x0, #0x0
  4011c0:	b.ne	401170 <generate_symlink+0x104>  // b.any
  4011c4:	ldr	x0, [x29, #48]
  4011c8:	add	x0, x0, #0x1
  4011cc:	str	x0, [x29, #72]
  4011d0:	ldr	x1, [x29, #72]
  4011d4:	mov	x0, #0x1                   	// #1
  4011d8:	bl	400e88 <size_multiply_overflow>
  4011dc:	and	w0, w0, #0xff
  4011e0:	and	x0, x0, #0xff
  4011e4:	cmp	x0, #0x0
  4011e8:	b.eq	401214 <generate_symlink+0x1a8>  // b.none
  4011ec:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4011f0:	add	x1, x0, #0x91b
  4011f4:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4011f8:	add	x4, x0, #0xb98
  4011fc:	mov	w3, #0x20                  	// #32
  401200:	mov	x2, x1
  401204:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401208:	add	x1, x0, #0x990
  40120c:	mov	w0, #0x0                   	// #0
  401210:	bl	400ba0 <log_assert_failed_realm@plt>
  401214:	ldr	x0, [x29, #72]
  401218:	cmp	x0, #0x400, lsl #12
  40121c:	cset	w0, hi  // hi = pmore
  401220:	and	w0, w0, #0xff
  401224:	and	x0, x0, #0xff
  401228:	cmp	x0, #0x0
  40122c:	b.eq	401258 <generate_symlink+0x1ec>  // b.none
  401230:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401234:	add	x1, x0, #0x91b
  401238:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40123c:	add	x4, x0, #0xb98
  401240:	mov	w3, #0x20                  	// #32
  401244:	mov	x2, x1
  401248:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40124c:	add	x1, x0, #0x9c0
  401250:	mov	w0, #0x0                   	// #0
  401254:	bl	400ba0 <log_assert_failed_realm@plt>
  401258:	ldr	x0, [x29, #72]
  40125c:	add	x0, x0, #0xf
  401260:	lsr	x0, x0, #4
  401264:	lsl	x0, x0, #4
  401268:	sub	sp, sp, x0
  40126c:	mov	x0, sp
  401270:	add	x0, x0, #0xf
  401274:	lsr	x0, x0, #4
  401278:	lsl	x0, x0, #4
  40127c:	str	x0, [x29, #80]
  401280:	ldr	x0, [x29, #80]
  401284:	str	x0, [x29, #40]
  401288:	str	xzr, [x29, #56]
  40128c:	b	4012bc <generate_symlink+0x250>
  401290:	ldr	x0, [x29, #56]
  401294:	lsl	x0, x0, #3
  401298:	add	x1, x29, #0x58
  40129c:	ldr	x0, [x1, x0]
  4012a0:	mov	x1, x0
  4012a4:	ldr	x0, [x29, #40]
  4012a8:	bl	400b50 <stpcpy@plt>
  4012ac:	str	x0, [x29, #40]
  4012b0:	ldr	x0, [x29, #56]
  4012b4:	add	x0, x0, #0x1
  4012b8:	str	x0, [x29, #56]
  4012bc:	ldr	x0, [x29, #56]
  4012c0:	cmp	x0, #0x1
  4012c4:	b.hi	4012e0 <generate_symlink+0x274>  // b.pmore
  4012c8:	ldr	x0, [x29, #56]
  4012cc:	lsl	x0, x0, #3
  4012d0:	add	x1, x29, #0x58
  4012d4:	ldr	x0, [x1, x0]
  4012d8:	cmp	x0, #0x0
  4012dc:	b.ne	401290 <generate_symlink+0x224>  // b.any
  4012e0:	ldr	x0, [x29, #40]
  4012e4:	strb	wzr, [x0]
  4012e8:	ldr	x0, [x29, #80]
  4012ec:	str	x0, [x29, #64]
  4012f0:	ldr	x1, [x29, #64]
  4012f4:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4012f8:	add	x0, x0, #0x9e0
  4012fc:	bl	400b90 <symlink@plt>
  401300:	cmp	w0, #0x0
  401304:	b.ge	401398 <generate_symlink+0x32c>  // b.tcont
  401308:	mov	w0, #0x3                   	// #3
  40130c:	str	w0, [x29, #16]
  401310:	bl	400bf0 <__errno_location@plt>
  401314:	ldr	w0, [x0]
  401318:	str	w0, [x29, #20]
  40131c:	str	wzr, [x29, #24]
  401320:	ldr	w0, [x29, #24]
  401324:	bl	400c80 <log_get_max_level_realm@plt>
  401328:	mov	w1, w0
  40132c:	ldr	w0, [x29, #16]
  401330:	and	w0, w0, #0x7
  401334:	cmp	w1, w0
  401338:	b.lt	401380 <generate_symlink+0x314>  // b.tstop
  40133c:	ldr	w0, [x29, #24]
  401340:	lsl	w1, w0, #10
  401344:	ldr	w0, [x29, #16]
  401348:	orr	w7, w1, w0
  40134c:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401350:	add	x1, x0, #0x91b
  401354:	ldr	x6, [x29, #64]
  401358:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40135c:	add	x5, x0, #0xa10
  401360:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401364:	add	x4, x0, #0xb80
  401368:	mov	w3, #0x22                  	// #34
  40136c:	mov	x2, x1
  401370:	ldr	w1, [x29, #20]
  401374:	mov	w0, w7
  401378:	bl	400c30 <log_internal_realm@plt>
  40137c:	b	40139c <generate_symlink+0x330>
  401380:	ldr	w0, [x29, #20]
  401384:	cmp	w0, #0x0
  401388:	cneg	w0, w0, lt  // lt = tstop
  40138c:	and	w0, w0, #0xff
  401390:	neg	w0, w0
  401394:	b	40139c <generate_symlink+0x330>
  401398:	mov	w0, #0x1                   	// #1
  40139c:	mov	w1, w0
  4013a0:	adrp	x0, 412000 <__FRAME_END__+0x10170>
  4013a4:	add	x0, x0, #0xd00
  4013a8:	ldr	x2, [x29, #104]
  4013ac:	ldr	x0, [x0]
  4013b0:	eor	x0, x2, x0
  4013b4:	cmp	x0, #0x0
  4013b8:	b.eq	4013c0 <generate_symlink+0x354>  // b.none
  4013bc:	bl	400c00 <__stack_chk_fail@plt>
  4013c0:	mov	w0, w1
  4013c4:	mov	sp, x29
  4013c8:	ldp	x29, x30, [sp], #112
  4013cc:	ret

00000000004013d0 <parse_proc_cmdline_item>:
  4013d0:	stp	x29, x30, [sp, #-80]!
  4013d4:	mov	x29, sp
  4013d8:	str	x0, [sp, #40]
  4013dc:	str	x1, [sp, #32]
  4013e0:	str	x2, [sp, #24]
  4013e4:	ldr	x0, [sp, #40]
  4013e8:	cmp	x0, #0x0
  4013ec:	cset	w0, eq  // eq = none
  4013f0:	and	w0, w0, #0xff
  4013f4:	and	x0, x0, #0xff
  4013f8:	cmp	x0, #0x0
  4013fc:	b.eq	401428 <parse_proc_cmdline_item+0x58>  // b.none
  401400:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401404:	add	x1, x0, #0x91b
  401408:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40140c:	add	x4, x0, #0xbb0
  401410:	mov	w3, #0x28                  	// #40
  401414:	mov	x2, x1
  401418:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40141c:	add	x1, x0, #0xa30
  401420:	mov	w0, #0x0                   	// #0
  401424:	bl	400ba0 <log_assert_failed_realm@plt>
  401428:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40142c:	add	x1, x0, #0xa38
  401430:	ldr	x0, [sp, #40]
  401434:	bl	400c40 <strcmp@plt>
  401438:	cmp	w0, #0x0
  40143c:	b.ne	4014d8 <parse_proc_cmdline_item+0x108>  // b.any
  401440:	ldr	x1, [sp, #32]
  401444:	ldr	x0, [sp, #40]
  401448:	bl	400fc4 <proc_cmdline_value_missing>
  40144c:	and	w0, w0, #0xff
  401450:	eor	w0, w0, #0x1
  401454:	and	w0, w0, #0xff
  401458:	cmp	w0, #0x0
  40145c:	b.eq	4014d8 <parse_proc_cmdline_item+0x108>  // b.none
  401460:	mov	w0, #0x4                   	// #4
  401464:	str	w0, [sp, #56]
  401468:	str	wzr, [sp, #60]
  40146c:	str	wzr, [sp, #64]
  401470:	ldr	w0, [sp, #64]
  401474:	bl	400c80 <log_get_max_level_realm@plt>
  401478:	mov	w1, w0
  40147c:	ldr	w0, [sp, #56]
  401480:	and	w0, w0, #0x7
  401484:	cmp	w1, w0
  401488:	b.lt	4014cc <parse_proc_cmdline_item+0xfc>  // b.tstop
  40148c:	ldr	w0, [sp, #64]
  401490:	lsl	w1, w0, #10
  401494:	ldr	w0, [sp, #56]
  401498:	orr	w6, w1, w0
  40149c:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4014a0:	add	x1, x0, #0x91b
  4014a4:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4014a8:	add	x5, x0, #0xa48
  4014ac:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4014b0:	add	x4, x0, #0xbc8
  4014b4:	mov	w3, #0x30                  	// #48
  4014b8:	mov	x2, x1
  4014bc:	ldr	w1, [sp, #60]
  4014c0:	mov	w0, w6
  4014c4:	bl	400c30 <log_internal_realm@plt>
  4014c8:	b	40156c <parse_proc_cmdline_item+0x19c>
  4014cc:	ldr	w0, [sp, #60]
  4014d0:	cmp	w0, #0x0
  4014d4:	b	40156c <parse_proc_cmdline_item+0x19c>
  4014d8:	ldr	x0, [sp, #32]
  4014dc:	cmp	x0, #0x0
  4014e0:	b.ne	40156c <parse_proc_cmdline_item+0x19c>  // b.any
  4014e4:	ldr	x0, [sp, #40]
  4014e8:	bl	400bb0 <runlevel_to_target@plt>
  4014ec:	cmp	x0, #0x0
  4014f0:	b.eq	40156c <parse_proc_cmdline_item+0x19c>  // b.none
  4014f4:	mov	w0, #0x4                   	// #4
  4014f8:	str	w0, [sp, #68]
  4014fc:	str	wzr, [sp, #72]
  401500:	str	wzr, [sp, #76]
  401504:	ldr	w0, [sp, #76]
  401508:	bl	400c80 <log_get_max_level_realm@plt>
  40150c:	mov	w1, w0
  401510:	ldr	w0, [sp, #68]
  401514:	and	w0, w0, #0x7
  401518:	cmp	w1, w0
  40151c:	b.lt	401564 <parse_proc_cmdline_item+0x194>  // b.tstop
  401520:	ldr	w0, [sp, #76]
  401524:	lsl	w1, w0, #10
  401528:	ldr	w0, [sp, #68]
  40152c:	orr	w7, w1, w0
  401530:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401534:	add	x1, x0, #0x91b
  401538:	ldr	x6, [sp, #40]
  40153c:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401540:	add	x5, x0, #0xa98
  401544:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401548:	add	x4, x0, #0xbc8
  40154c:	mov	w3, #0x32                  	// #50
  401550:	mov	x2, x1
  401554:	ldr	w1, [sp, #72]
  401558:	mov	w0, w7
  40155c:	bl	400c30 <log_internal_realm@plt>
  401560:	b	40156c <parse_proc_cmdline_item+0x19c>
  401564:	ldr	w0, [sp, #72]
  401568:	cmp	w0, #0x0
  40156c:	mov	w0, #0x0                   	// #0
  401570:	ldp	x29, x30, [sp], #80
  401574:	ret

0000000000401578 <run>:
  401578:	stp	x29, x30, [sp, #-64]!
  40157c:	mov	x29, sp
  401580:	str	x0, [sp, #40]
  401584:	str	x1, [sp, #32]
  401588:	str	x2, [sp, #24]
  40158c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401590:	add	x0, x0, #0x10
  401594:	ldr	x1, [sp, #32]
  401598:	str	x1, [x0]
  40159c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4015a0:	add	x0, x0, #0x10
  4015a4:	ldr	x0, [x0]
  4015a8:	cmp	x0, #0x0
  4015ac:	cset	w0, eq  // eq = none
  4015b0:	and	w0, w0, #0xff
  4015b4:	and	x0, x0, #0xff
  4015b8:	cmp	x0, #0x0
  4015bc:	b.eq	4015e8 <run+0x70>  // b.none
  4015c0:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4015c4:	add	x1, x0, #0x91b
  4015c8:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4015cc:	add	x4, x0, #0xc00
  4015d0:	mov	w3, #0x3a                  	// #58
  4015d4:	mov	x2, x1
  4015d8:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  4015dc:	add	x1, x0, #0xae8
  4015e0:	mov	w0, #0x0                   	// #0
  4015e4:	bl	400ba0 <log_assert_failed_realm@plt>
  4015e8:	bl	40106c <generate_symlink>
  4015ec:	str	w0, [sp, #48]
  4015f0:	ldr	w0, [sp, #48]
  4015f4:	cmp	w0, #0x0
  4015f8:	b.gt	401604 <run+0x8c>
  4015fc:	ldr	w0, [sp, #48]
  401600:	b	4016a4 <run+0x12c>
  401604:	mov	w2, #0x0                   	// #0
  401608:	mov	x1, #0x0                   	// #0
  40160c:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401610:	add	x0, x0, #0x3d0
  401614:	bl	400c50 <proc_cmdline_parse@plt>
  401618:	str	w0, [sp, #48]
  40161c:	ldr	w0, [sp, #48]
  401620:	cmp	w0, #0x0
  401624:	b.ge	4016a0 <run+0x128>  // b.tcont
  401628:	mov	w0, #0x4                   	// #4
  40162c:	str	w0, [sp, #52]
  401630:	ldr	w0, [sp, #48]
  401634:	str	w0, [sp, #56]
  401638:	str	wzr, [sp, #60]
  40163c:	ldr	w0, [sp, #60]
  401640:	bl	400c80 <log_get_max_level_realm@plt>
  401644:	mov	w1, w0
  401648:	ldr	w0, [sp, #52]
  40164c:	and	w0, w0, #0x7
  401650:	cmp	w1, w0
  401654:	b.lt	401698 <run+0x120>  // b.tstop
  401658:	ldr	w0, [sp, #60]
  40165c:	lsl	w1, w0, #10
  401660:	ldr	w0, [sp, #52]
  401664:	orr	w6, w1, w0
  401668:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40166c:	add	x1, x0, #0x91b
  401670:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401674:	add	x5, x0, #0xb00
  401678:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40167c:	add	x4, x0, #0xc08
  401680:	mov	w3, #0x43                  	// #67
  401684:	mov	x2, x1
  401688:	ldr	w1, [sp, #56]
  40168c:	mov	w0, w6
  401690:	bl	400c30 <log_internal_realm@plt>
  401694:	b	4016a0 <run+0x128>
  401698:	ldr	w0, [sp, #56]
  40169c:	cmp	w0, #0x0
  4016a0:	mov	w0, #0x0                   	// #0
  4016a4:	ldp	x29, x30, [sp], #64
  4016a8:	ret

00000000004016ac <main>:
  4016ac:	stp	x29, x30, [sp, #-48]!
  4016b0:	mov	x29, sp
  4016b4:	str	w0, [sp, #28]
  4016b8:	str	x1, [sp, #16]
  4016bc:	ldr	x1, [sp, #16]
  4016c0:	ldr	w0, [sp, #28]
  4016c4:	bl	400f04 <save_argc_argv>
  4016c8:	bl	400be0 <log_setup_generator@plt>
  4016cc:	ldr	w0, [sp, #28]
  4016d0:	cmp	w0, #0x1
  4016d4:	b.le	401770 <main+0xc4>
  4016d8:	ldr	w0, [sp, #28]
  4016dc:	cmp	w0, #0x4
  4016e0:	b.eq	401770 <main+0xc4>  // b.none
  4016e4:	mov	w0, #0x3                   	// #3
  4016e8:	str	w0, [sp, #32]
  4016ec:	mov	w0, #0x16                  	// #22
  4016f0:	movk	w0, #0x4000, lsl #16
  4016f4:	str	w0, [sp, #36]
  4016f8:	str	wzr, [sp, #40]
  4016fc:	ldr	w0, [sp, #40]
  401700:	bl	400c80 <log_get_max_level_realm@plt>
  401704:	mov	w1, w0
  401708:	ldr	w0, [sp, #32]
  40170c:	and	w0, w0, #0x7
  401710:	cmp	w1, w0
  401714:	b.lt	401758 <main+0xac>  // b.tstop
  401718:	ldr	w0, [sp, #40]
  40171c:	lsl	w1, w0, #10
  401720:	ldr	w0, [sp, #32]
  401724:	orr	w6, w1, w0
  401728:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40172c:	add	x1, x0, #0x91b
  401730:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  401734:	add	x5, x0, #0xb38
  401738:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40173c:	add	x4, x0, #0xc10
  401740:	mov	w3, #0x48                  	// #72
  401744:	mov	x2, x1
  401748:	ldr	w1, [sp, #36]
  40174c:	mov	w0, w6
  401750:	bl	400c30 <log_internal_realm@plt>
  401754:	b	4017f4 <main+0x148>
  401758:	ldr	w0, [sp, #36]
  40175c:	cmp	w0, #0x0
  401760:	cneg	w0, w0, lt  // lt = tstop
  401764:	and	w0, w0, #0xff
  401768:	neg	w0, w0
  40176c:	b	4017f4 <main+0x148>
  401770:	ldr	w0, [sp, #28]
  401774:	cmp	w0, #0x1
  401778:	b.le	401788 <main+0xdc>
  40177c:	ldr	x0, [sp, #16]
  401780:	ldr	x0, [x0, #8]
  401784:	b	401790 <main+0xe4>
  401788:	adrp	x0, 401000 <proc_cmdline_value_missing+0x3c>
  40178c:	add	x0, x0, #0xb68
  401790:	ldr	w1, [sp, #28]
  401794:	cmp	w1, #0x1
  401798:	b.le	4017a8 <main+0xfc>
  40179c:	ldr	x1, [sp, #16]
  4017a0:	ldr	x1, [x1, #16]
  4017a4:	b	4017b0 <main+0x104>
  4017a8:	adrp	x1, 401000 <proc_cmdline_value_missing+0x3c>
  4017ac:	add	x1, x1, #0xb68
  4017b0:	ldr	w2, [sp, #28]
  4017b4:	cmp	w2, #0x1
  4017b8:	b.le	4017c8 <main+0x11c>
  4017bc:	ldr	x2, [sp, #16]
  4017c0:	ldr	x2, [x2, #24]
  4017c4:	b	4017d0 <main+0x124>
  4017c8:	adrp	x2, 401000 <proc_cmdline_value_missing+0x3c>
  4017cc:	add	x2, x2, #0xb68
  4017d0:	bl	401578 <run>
  4017d4:	str	w0, [sp, #44]
  4017d8:	bl	400c10 <ask_password_agent_close@plt>
  4017dc:	bl	400b80 <polkit_agent_close@plt>
  4017e0:	bl	400c20 <pager_close@plt>
  4017e4:	bl	400c60 <mac_selinux_finish@plt>
  4017e8:	bl	400f3c <static_destruct>
  4017ec:	ldr	w0, [sp, #44]
  4017f0:	lsr	w0, w0, #31
  4017f4:	ldp	x29, x30, [sp], #48
  4017f8:	ret
  4017fc:	nop

0000000000401800 <__libc_csu_init>:
  401800:	stp	x29, x30, [sp, #-64]!
  401804:	mov	x29, sp
  401808:	stp	x19, x20, [sp, #16]
  40180c:	adrp	x20, 412000 <__FRAME_END__+0x10170>
  401810:	add	x20, x20, #0xcf8
  401814:	stp	x21, x22, [sp, #32]
  401818:	adrp	x21, 412000 <__FRAME_END__+0x10170>
  40181c:	add	x21, x21, #0xcf0
  401820:	sub	x20, x20, x21
  401824:	mov	w22, w0
  401828:	stp	x23, x24, [sp, #48]
  40182c:	mov	x23, x1
  401830:	mov	x24, x2
  401834:	bl	400b10 <_init>
  401838:	cmp	xzr, x20, asr #3
  40183c:	b.eq	401868 <__libc_csu_init+0x68>  // b.none
  401840:	asr	x20, x20, #3
  401844:	mov	x19, #0x0                   	// #0
  401848:	ldr	x3, [x21, x19, lsl #3]
  40184c:	mov	x2, x24
  401850:	add	x19, x19, #0x1
  401854:	mov	x1, x23
  401858:	mov	w0, w22
  40185c:	blr	x3
  401860:	cmp	x20, x19
  401864:	b.ne	401848 <__libc_csu_init+0x48>  // b.any
  401868:	ldp	x19, x20, [sp, #16]
  40186c:	ldp	x21, x22, [sp, #32]
  401870:	ldp	x23, x24, [sp, #48]
  401874:	ldp	x29, x30, [sp], #64
  401878:	ret
  40187c:	nop

0000000000401880 <__libc_csu_fini>:
  401880:	ret

Disassembly of section .fini:

0000000000401884 <_fini>:
  401884:	stp	x29, x30, [sp, #-16]!
  401888:	mov	x29, sp
  40188c:	ldp	x29, x30, [sp], #16
  401890:	ret
