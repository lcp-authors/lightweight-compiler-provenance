
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//pathchk_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000980 <_init>:
 980:	stp	x29, x30, [sp, #-16]!
 984:	mov	x29, sp
 988:	bl	ac0 <call_weak_fn>
 98c:	ldp	x29, x30, [sp], #16
 990:	ret

Disassembly of section .plt:

00000000000009a0 <.plt>:
 9a0:	stp	x16, x30, [sp, #-16]!
 9a4:	adrp	x16, 11000 <__FRAME_END__+0xfc74>
 9a8:	ldr	x17, [x16, #4088]
 9ac:	add	x16, x16, #0xff8
 9b0:	br	x17
 9b4:	nop
 9b8:	nop
 9bc:	nop

00000000000009c0 <strlen@plt>:
 9c0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9c4:	ldr	x17, [x16]
 9c8:	add	x16, x16, #0x0
 9cc:	br	x17

00000000000009d0 <builtin_error@plt>:
 9d0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9d4:	ldr	x17, [x16, #8]
 9d8:	add	x16, x16, #0x8
 9dc:	br	x17

00000000000009e0 <__cxa_finalize@plt>:
 9e0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9e4:	ldr	x17, [x16, #16]
 9e8:	add	x16, x16, #0x10
 9ec:	br	x17

00000000000009f0 <builtin_help@plt>:
 9f0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9f4:	ldr	x17, [x16, #24]
 9f8:	add	x16, x16, #0x18
 9fc:	br	x17

0000000000000a00 <xmalloc@plt>:
 a00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a04:	ldr	x17, [x16, #32]
 a08:	add	x16, x16, #0x20
 a0c:	br	x17

0000000000000a10 <builtin_usage@plt>:
 a10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a14:	ldr	x17, [x16, #40]
 a18:	add	x16, x16, #0x28
 a1c:	br	x17

0000000000000a20 <strerror@plt>:
 a20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a24:	ldr	x17, [x16, #48]
 a28:	add	x16, x16, #0x30
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a34:	ldr	x17, [x16, #56]
 a38:	add	x16, x16, #0x38
 a3c:	br	x17

0000000000000a40 <access@plt>:
 a40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a44:	ldr	x17, [x16, #64]
 a48:	add	x16, x16, #0x40
 a4c:	br	x17

0000000000000a50 <free@plt>:
 a50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a54:	ldr	x17, [x16, #72]
 a58:	add	x16, x16, #0x48
 a5c:	br	x17

0000000000000a60 <internal_getopt@plt>:
 a60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a64:	ldr	x17, [x16, #80]
 a68:	add	x16, x16, #0x50
 a6c:	br	x17

0000000000000a70 <reset_internal_getopt@plt>:
 a70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a74:	ldr	x17, [x16, #88]
 a78:	add	x16, x16, #0x58
 a7c:	br	x17

0000000000000a80 <strchr@plt>:
 a80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a84:	ldr	x17, [x16, #96]
 a88:	add	x16, x16, #0x60
 a8c:	br	x17

0000000000000a90 <strcpy@plt>:
 a90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a94:	ldr	x17, [x16, #104]
 a98:	add	x16, x16, #0x68
 a9c:	br	x17

0000000000000aa0 <__errno_location@plt>:
 aa0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 aa4:	ldr	x17, [x16, #112]
 aa8:	add	x16, x16, #0x70
 aac:	br	x17

0000000000000ab0 <__xstat@plt>:
 ab0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ab4:	ldr	x17, [x16, #120]
 ab8:	add	x16, x16, #0x78
 abc:	br	x17

Disassembly of section .text:

0000000000000ac0 <call_weak_fn>:
 ac0:	adrp	x0, 11000 <__FRAME_END__+0xfc74>
 ac4:	ldr	x0, [x0, #4048]
 ac8:	cbz	x0, ad0 <call_weak_fn+0x10>
 acc:	b	a30 <__gmon_start__@plt>
 ad0:	ret

0000000000000ad4 <deregister_tm_clones>:
 ad4:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 ad8:	add	x0, x0, #0xf0
 adc:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 ae0:	add	x1, x1, #0xf0
 ae4:	cmp	x0, x1
 ae8:	b.eq	b14 <deregister_tm_clones+0x40>  // b.none
 aec:	adrp	x1, 11000 <__FRAME_END__+0xfc74>
 af0:	ldr	x1, [x1, #4032]
 af4:	cbz	x1, b14 <deregister_tm_clones+0x40>
 af8:	stp	x29, x30, [sp, #-16]!
 afc:	mov	x29, sp
 b00:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b04:	add	x0, x0, #0xf0
 b08:	blr	x1
 b0c:	ldp	x29, x30, [sp], #16
 b10:	ret
 b14:	ret

0000000000000b18 <register_tm_clones>:
 b18:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b1c:	add	x0, x0, #0xf0
 b20:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 b24:	add	x1, x1, #0xf0
 b28:	sub	x0, x0, x1
 b2c:	lsr	x1, x0, #63
 b30:	add	x0, x1, x0, asr #3
 b34:	cmp	xzr, x0, asr #1
 b38:	b.eq	b68 <register_tm_clones+0x50>  // b.none
 b3c:	asr	x1, x0, #1
 b40:	adrp	x2, 11000 <__FRAME_END__+0xfc74>
 b44:	ldr	x2, [x2, #4064]
 b48:	cbz	x2, b68 <register_tm_clones+0x50>
 b4c:	stp	x29, x30, [sp, #-16]!
 b50:	mov	x29, sp
 b54:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b58:	add	x0, x0, #0xf0
 b5c:	blr	x2
 b60:	ldp	x29, x30, [sp], #16
 b64:	ret
 b68:	ret

0000000000000b6c <__do_global_dtors_aux>:
 b6c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b70:	ldrb	w0, [x0, #240]
 b74:	cbnz	w0, bb0 <__do_global_dtors_aux+0x44>
 b78:	stp	x29, x30, [sp, #-16]!
 b7c:	mov	x29, sp
 b80:	adrp	x0, 11000 <__FRAME_END__+0xfc74>
 b84:	ldr	x0, [x0, #4040]
 b88:	cbz	x0, b98 <__do_global_dtors_aux+0x2c>
 b8c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b90:	ldr	x0, [x0, #128]
 b94:	bl	9e0 <__cxa_finalize@plt>
 b98:	bl	ad4 <deregister_tm_clones>
 b9c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 ba0:	mov	w1, #0x1                   	// #1
 ba4:	strb	w1, [x0, #240]
 ba8:	ldp	x29, x30, [sp], #16
 bac:	ret
 bb0:	ret

0000000000000bb4 <frame_dummy>:
 bb4:	stp	x29, x30, [sp, #-16]!
 bb8:	mov	x29, sp
 bbc:	bl	b18 <register_tm_clones>
 bc0:	ldp	x29, x30, [sp], #16
 bc4:	ret

0000000000000bc8 <xstrdup>:
 bc8:	stp	x29, x30, [sp, #-32]!
 bcc:	mov	x29, sp
 bd0:	str	x19, [sp, #16]
 bd4:	mov	x19, x0
 bd8:	bl	9c0 <strlen@plt>
 bdc:	add	x0, x0, #0x1
 be0:	bl	a00 <xmalloc@plt>
 be4:	mov	x1, x19
 be8:	bl	a90 <strcpy@plt>
 bec:	ldr	x19, [sp, #16]
 bf0:	ldp	x29, x30, [sp], #32
 bf4:	ret

0000000000000bf8 <pathchk_builtin>:
 bf8:	stp	x29, x30, [sp, #-240]!
 bfc:	mov	x29, sp
 c00:	stp	x19, x20, [sp, #16]
 c04:	mov	x20, x0
 c08:	bl	a70 <reset_internal_getopt@plt>
 c0c:	adrp	x19, 0 <_init-0x980>
 c10:	add	x19, x19, #0xee8
 c14:	mov	x1, x19
 c18:	mov	x0, x20
 c1c:	bl	a60 <internal_getopt@plt>
 c20:	cmn	w0, #0x1
 c24:	b.eq	c58 <pathchk_builtin+0x60>  // b.none
 c28:	cmn	w0, #0x63
 c2c:	b.eq	c44 <pathchk_builtin+0x4c>  // b.none
 c30:	cmp	w0, #0x70
 c34:	b.eq	c14 <pathchk_builtin+0x1c>  // b.none
 c38:	bl	a10 <builtin_usage@plt>
 c3c:	mov	w0, #0x102                 	// #258
 c40:	b	c4c <pathchk_builtin+0x54>
 c44:	bl	9f0 <builtin_help@plt>
 c48:	mov	w0, #0x102                 	// #258
 c4c:	ldp	x19, x20, [sp, #16]
 c50:	ldp	x29, x30, [sp], #240
 c54:	ret
 c58:	stp	x21, x22, [sp, #32]
 c5c:	stp	x23, x24, [sp, #48]
 c60:	adrp	x0, 11000 <__FRAME_END__+0xfc74>
 c64:	ldr	x0, [x0, #4056]
 c68:	ldr	x23, [x0]
 c6c:	mov	w22, #0x0                   	// #0
 c70:	cbz	x23, c90 <pathchk_builtin+0x98>
 c74:	stp	x25, x26, [sp, #64]
 c78:	stp	x27, x28, [sp, #80]
 c7c:	mov	w27, #0x0                   	// #0
 c80:	adrp	x26, 1000 <_fini+0x134>
 c84:	add	x26, x26, #0x128
 c88:	add	x28, sp, #0x70
 c8c:	b	cc4 <pathchk_builtin+0xcc>
 c90:	bl	a10 <builtin_usage@plt>
 c94:	mov	w0, #0x102                 	// #258
 c98:	ldp	x21, x22, [sp, #32]
 c9c:	ldp	x23, x24, [sp, #48]
 ca0:	b	c4c <pathchk_builtin+0x54>
 ca4:	mov	x1, x21
 ca8:	adrp	x0, 0 <_init-0x980>
 cac:	add	x0, x0, #0xef0
 cb0:	bl	9d0 <builtin_error@plt>
 cb4:	mov	w1, #0x1                   	// #1
 cb8:	orr	w22, w22, w1
 cbc:	ldr	x23, [x23]
 cc0:	cbz	x23, eb0 <pathchk_builtin+0x2b8>
 cc4:	ldr	x0, [x23, #8]
 cc8:	ldr	x21, [x0]
 ccc:	ldrb	w3, [x21]
 cd0:	cbz	w3, ea8 <pathchk_builtin+0x2b0>
 cd4:	mov	x1, x21
 cd8:	mov	w0, w3
 cdc:	mov	w2, w0
 ce0:	ldrb	w0, [x26, w0, sxtw]
 ce4:	cbz	w0, ca4 <pathchk_builtin+0xac>
 ce8:	ldrb	w0, [x1, #1]!
 cec:	cbnz	w0, cdc <pathchk_builtin+0xe4>
 cf0:	adrp	x0, 0 <_init-0x980>
 cf4:	add	x0, x0, #0xfe8
 cf8:	adrp	x1, 0 <_init-0x980>
 cfc:	add	x1, x1, #0xee0
 d00:	cmp	w3, #0x2f
 d04:	csel	x0, x1, x0, eq  // eq = none
 d08:	bl	bc8 <xstrdup>
 d0c:	str	x0, [sp, #104]
 d10:	mov	x19, x21
 d14:	mov	w25, #0x2f                  	// #47
 d18:	mov	w24, #0x2f                  	// #47
 d1c:	b	dd0 <pathchk_builtin+0x1d8>
 d20:	add	x19, x19, #0x1
 d24:	b	dd0 <pathchk_builtin+0x1d8>
 d28:	mov	x0, x19
 d2c:	bl	9c0 <strlen@plt>
 d30:	mov	w2, w0
 d34:	cmp	w0, #0xe
 d38:	b.le	e6c <pathchk_builtin+0x274>
 d3c:	mov	w3, #0xe                   	// #14
 d40:	mov	x1, x19
 d44:	adrp	x0, 0 <_init-0x980>
 d48:	add	x0, x0, #0xf68
 d4c:	bl	9d0 <builtin_error@plt>
 d50:	ldr	x0, [sp, #104]
 d54:	bl	a50 <free@plt>
 d58:	mov	w1, #0x1                   	// #1
 d5c:	b	cb8 <pathchk_builtin+0xc0>
 d60:	cbnz	w0, e18 <pathchk_builtin+0x220>
 d64:	ldr	w0, [sp, #128]
 d68:	and	w0, w0, #0xf000
 d6c:	cmp	w0, #0x4, lsl #12
 d70:	b.eq	d94 <pathchk_builtin+0x19c>  // b.none
 d74:	mov	x1, x21
 d78:	adrp	x0, 0 <_init-0x980>
 d7c:	add	x0, x0, #0xf20
 d80:	bl	9d0 <builtin_error@plt>
 d84:	ldr	x0, [sp, #104]
 d88:	bl	a50 <free@plt>
 d8c:	mov	w1, #0x1                   	// #1
 d90:	b	cb8 <pathchk_builtin+0xc0>
 d94:	mov	w1, #0x1                   	// #1
 d98:	mov	x0, x21
 d9c:	bl	a40 <access@plt>
 da0:	cbnz	w0, e2c <pathchk_builtin+0x234>
 da4:	sub	x0, x20, x19
 da8:	mov	w2, w0
 dac:	cmp	w0, #0xe
 db0:	b.gt	d3c <pathchk_builtin+0x144>
 db4:	ldr	x0, [sp, #104]
 db8:	bl	a50 <free@plt>
 dbc:	mov	x0, x21
 dc0:	bl	bc8 <xstrdup>
 dc4:	str	x0, [sp, #104]
 dc8:	mov	x19, x20
 dcc:	strb	w24, [x19], #1
 dd0:	ldrb	w0, [x19]
 dd4:	cmp	w0, #0x2f
 dd8:	b.eq	d20 <pathchk_builtin+0x128>  // b.none
 ddc:	mov	w1, w25
 de0:	mov	x0, x19
 de4:	bl	a80 <strchr@plt>
 de8:	mov	x20, x0
 dec:	cbz	x0, d28 <pathchk_builtin+0x130>
 df0:	strb	wzr, [x0]
 df4:	mov	x2, x28
 df8:	mov	x1, x21
 dfc:	mov	w0, w27
 e00:	bl	ab0 <__xstat@plt>
 e04:	tbz	w0, #31, d60 <pathchk_builtin+0x168>
 e08:	bl	aa0 <__errno_location@plt>
 e0c:	ldr	w0, [x0]
 e10:	cmp	w0, #0x4
 e14:	b.eq	df4 <pathchk_builtin+0x1fc>  // b.none
 e18:	sub	x0, x20, x19
 e1c:	mov	w2, w0
 e20:	cmp	w0, #0xe
 e24:	b.le	dc8 <pathchk_builtin+0x1d0>
 e28:	b	d3c <pathchk_builtin+0x144>
 e2c:	bl	aa0 <__errno_location@plt>
 e30:	ldr	w0, [x0]
 e34:	cmp	w0, #0xd
 e38:	b.eq	e58 <pathchk_builtin+0x260>  // b.none
 e3c:	bl	a20 <strerror@plt>
 e40:	mov	x2, x0
 e44:	mov	x1, x21
 e48:	adrp	x0, 0 <_init-0x980>
 e4c:	add	x0, x0, #0xf60
 e50:	bl	9d0 <builtin_error@plt>
 e54:	b	d84 <pathchk_builtin+0x18c>
 e58:	mov	x1, x21
 e5c:	adrp	x0, 0 <_init-0x980>
 e60:	add	x0, x0, #0xf38
 e64:	bl	9d0 <builtin_error@plt>
 e68:	b	d84 <pathchk_builtin+0x18c>
 e6c:	ldr	x0, [sp, #104]
 e70:	bl	a50 <free@plt>
 e74:	mov	x0, x21
 e78:	bl	9c0 <strlen@plt>
 e7c:	mov	w1, w27
 e80:	cmp	x0, #0x100
 e84:	b.ls	cb8 <pathchk_builtin+0xc0>  // b.plast
 e88:	mov	w3, #0x100                 	// #256
 e8c:	mov	x2, x0
 e90:	mov	x1, x21
 e94:	adrp	x0, 0 <_init-0x980>
 e98:	add	x0, x0, #0xf98
 e9c:	bl	9d0 <builtin_error@plt>
 ea0:	mov	w1, #0x1                   	// #1
 ea4:	b	cb8 <pathchk_builtin+0xc0>
 ea8:	mov	w1, w27
 eac:	b	cb8 <pathchk_builtin+0xc0>
 eb0:	cmp	w22, #0x0
 eb4:	cset	w0, ne  // ne = any
 eb8:	ldp	x21, x22, [sp, #32]
 ebc:	ldp	x23, x24, [sp, #48]
 ec0:	ldp	x25, x26, [sp, #64]
 ec4:	ldp	x27, x28, [sp, #80]
 ec8:	b	c4c <pathchk_builtin+0x54>

Disassembly of section .fini:

0000000000000ecc <_fini>:
 ecc:	stp	x29, x30, [sp, #-16]!
 ed0:	mov	x29, sp
 ed4:	ldp	x29, x30, [sp], #16
 ed8:	ret
