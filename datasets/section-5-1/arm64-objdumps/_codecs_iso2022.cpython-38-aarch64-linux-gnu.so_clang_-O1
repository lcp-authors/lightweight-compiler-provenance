
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_iso2022.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001808 <.init>:
    1808:	stp	x29, x30, [sp, #-16]!
    180c:	mov	x29, sp
    1810:	bl	1940 <PyCapsule_GetPointer@plt+0x10>
    1814:	ldp	x29, x30, [sp], #16
    1818:	ret

Disassembly of section .plt:

0000000000001820 <PyObject_GetAttrString@plt-0x20>:
    1820:	stp	x16, x30, [sp, #-16]!
    1824:	adrp	x16, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1828:	ldr	x17, [x16, #4088]
    182c:	add	x16, x16, #0xff8
    1830:	br	x17
    1834:	nop
    1838:	nop
    183c:	nop

0000000000001840 <PyObject_GetAttrString@plt>:
    1840:	adrp	x16, 15000 <PyObject_GetAttrString>
    1844:	ldr	x17, [x16]
    1848:	add	x16, x16, #0x0
    184c:	br	x17

0000000000001850 <__cxa_finalize@plt>:
    1850:	adrp	x16, 15000 <PyObject_GetAttrString>
    1854:	ldr	x17, [x16, #8]
    1858:	add	x16, x16, #0x8
    185c:	br	x17

0000000000001860 <_Py_Dealloc@plt>:
    1860:	adrp	x16, 15000 <PyObject_GetAttrString>
    1864:	ldr	x17, [x16, #16]
    1868:	add	x16, x16, #0x10
    186c:	br	x17

0000000000001870 <PyErr_SetString@plt>:
    1870:	adrp	x16, 15000 <PyObject_GetAttrString>
    1874:	ldr	x17, [x16, #24]
    1878:	add	x16, x16, #0x18
    187c:	br	x17

0000000000001880 <PyCapsule_IsValid@plt>:
    1880:	adrp	x16, 15000 <PyObject_GetAttrString>
    1884:	ldr	x17, [x16, #32]
    1888:	add	x16, x16, #0x20
    188c:	br	x17

0000000000001890 <__gmon_start__@plt>:
    1890:	adrp	x16, 15000 <PyObject_GetAttrString>
    1894:	ldr	x17, [x16, #40]
    1898:	add	x16, x16, #0x28
    189c:	br	x17

00000000000018a0 <PyModule_Create2@plt>:
    18a0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18a4:	ldr	x17, [x16, #48]
    18a8:	add	x16, x16, #0x30
    18ac:	br	x17

00000000000018b0 <PyImport_ImportModule@plt>:
    18b0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18b4:	ldr	x17, [x16, #56]
    18b8:	add	x16, x16, #0x38
    18bc:	br	x17

00000000000018c0 <PyImport_ImportModuleNoBlock@plt>:
    18c0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18c4:	ldr	x17, [x16, #64]
    18c8:	add	x16, x16, #0x40
    18cc:	br	x17

00000000000018d0 <PyObject_CallFunctionObjArgs@plt>:
    18d0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18d4:	ldr	x17, [x16, #72]
    18d8:	add	x16, x16, #0x48
    18dc:	br	x17

00000000000018e0 <strcmp@plt>:
    18e0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18e4:	ldr	x17, [x16, #80]
    18e8:	add	x16, x16, #0x50
    18ec:	br	x17

00000000000018f0 <_PyUnicodeWriter_PrepareInternal@plt>:
    18f0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18f4:	ldr	x17, [x16, #88]
    18f8:	add	x16, x16, #0x58
    18fc:	br	x17

0000000000001900 <_PyUnicodeWriter_WriteChar@plt>:
    1900:	adrp	x16, 15000 <PyObject_GetAttrString>
    1904:	ldr	x17, [x16, #96]
    1908:	add	x16, x16, #0x60
    190c:	br	x17

0000000000001910 <PyUnicode_AsUTF8@plt>:
    1910:	adrp	x16, 15000 <PyObject_GetAttrString>
    1914:	ldr	x17, [x16, #104]
    1918:	add	x16, x16, #0x68
    191c:	br	x17

0000000000001920 <PyCapsule_New@plt>:
    1920:	adrp	x16, 15000 <PyObject_GetAttrString>
    1924:	ldr	x17, [x16, #112]
    1928:	add	x16, x16, #0x70
    192c:	br	x17

0000000000001930 <PyCapsule_GetPointer@plt>:
    1930:	adrp	x16, 15000 <PyObject_GetAttrString>
    1934:	ldr	x17, [x16, #120]
    1938:	add	x16, x16, #0x78
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__codecs_iso2022@@Base-0xd4>:
    1940:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1944:	ldr	x0, [x0, #4048]
    1948:	cbz	x0, 1950 <PyCapsule_GetPointer@plt+0x20>
    194c:	b	1890 <__gmon_start__@plt>
    1950:	ret
    1954:	nop
    1958:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    195c:	add	x0, x0, #0x130
    1960:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1964:	add	x1, x1, #0x130
    1968:	cmp	x1, x0
    196c:	b.eq	1984 <PyCapsule_GetPointer@plt+0x54>  // b.none
    1970:	adrp	x1, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1974:	ldr	x1, [x1, #4016]
    1978:	cbz	x1, 1984 <PyCapsule_GetPointer@plt+0x54>
    197c:	mov	x16, x1
    1980:	br	x16
    1984:	ret
    1988:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    198c:	add	x0, x0, #0x130
    1990:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1994:	add	x1, x1, #0x130
    1998:	sub	x1, x1, x0
    199c:	lsr	x2, x1, #63
    19a0:	add	x1, x2, x1, asr #3
    19a4:	cmp	xzr, x1, asr #1
    19a8:	asr	x1, x1, #1
    19ac:	b.eq	19c4 <PyCapsule_GetPointer@plt+0x94>  // b.none
    19b0:	adrp	x2, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19b4:	ldr	x2, [x2, #4056]
    19b8:	cbz	x2, 19c4 <PyCapsule_GetPointer@plt+0x94>
    19bc:	mov	x16, x2
    19c0:	br	x16
    19c4:	ret
    19c8:	stp	x29, x30, [sp, #-32]!
    19cc:	mov	x29, sp
    19d0:	str	x19, [sp, #16]
    19d4:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19d8:	ldrb	w0, [x19, #304]
    19dc:	cbnz	w0, 1a04 <PyCapsule_GetPointer@plt+0xd4>
    19e0:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19e4:	ldr	x0, [x0, #4024]
    19e8:	cbz	x0, 19f8 <PyCapsule_GetPointer@plt+0xc8>
    19ec:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19f0:	ldr	x0, [x0, #128]
    19f4:	bl	1850 <__cxa_finalize@plt>
    19f8:	bl	1958 <PyCapsule_GetPointer@plt+0x28>
    19fc:	mov	w0, #0x1                   	// #1
    1a00:	strb	w0, [x19, #304]
    1a04:	ldr	x19, [sp, #16]
    1a08:	ldp	x29, x30, [sp], #32
    1a0c:	ret
    1a10:	b	1988 <PyCapsule_GetPointer@plt+0x58>

0000000000001a14 <PyInit__codecs_iso2022@@Base>:
    1a14:	stp	x29, x30, [sp, #-16]!
    1a18:	mov	x29, sp
    1a1c:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1a20:	add	x0, x0, #0x88
    1a24:	mov	w1, #0x3f5                 	// #1013
    1a28:	bl	18a0 <PyModule_Create2@plt>
    1a2c:	ldp	x29, x30, [sp], #16
    1a30:	ret
    1a34:	stp	x29, x30, [sp, #-48]!
    1a38:	stp	x22, x21, [sp, #16]
    1a3c:	stp	x20, x19, [sp, #32]
    1a40:	mov	x29, sp
    1a44:	ldr	x8, [x1, #8]
    1a48:	ldrb	w8, [x8, #171]
    1a4c:	tbnz	w8, #4, 1a64 <PyInit__codecs_iso2022@@Base+0x50>
    1a50:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1a54:	ldr	x8, [x8, #4040]
    1a58:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a5c:	add	x1, x1, #0xa1a
    1a60:	b	1ad0 <PyInit__codecs_iso2022@@Base+0xbc>
    1a64:	mov	x0, x1
    1a68:	bl	1910 <PyUnicode_AsUTF8@plt>
    1a6c:	cbz	x0, 1ad8 <PyInit__codecs_iso2022@@Base+0xc4>
    1a70:	mov	x21, x0
    1a74:	bl	1b3c <PyInit__codecs_iso2022@@Base+0x128>
    1a78:	mov	x19, x0
    1a7c:	cbz	x0, 1adc <PyInit__codecs_iso2022@@Base+0xc8>
    1a80:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a84:	add	x0, x0, #0xa8c
    1a88:	mov	x1, x21
    1a8c:	bl	18e0 <strcmp@plt>
    1a90:	cbz	w0, 1af0 <PyInit__codecs_iso2022@@Base+0xdc>
    1a94:	adrp	x20, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1a98:	add	x20, x20, #0x698
    1a9c:	ldr	x0, [x20, #72]!
    1aa0:	ldrb	w8, [x0]
    1aa4:	cmp	w8, #0x0
    1aa8:	cset	w22, eq  // eq = none
    1aac:	cbz	w8, 1ac0 <PyInit__codecs_iso2022@@Base+0xac>
    1ab0:	mov	x1, x21
    1ab4:	bl	18e0 <strcmp@plt>
    1ab8:	cbnz	w0, 1a9c <PyInit__codecs_iso2022@@Base+0x88>
    1abc:	cbz	w22, 1b00 <PyInit__codecs_iso2022@@Base+0xec>
    1ac0:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1ac4:	ldr	x8, [x8, #4064]
    1ac8:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1acc:	add	x1, x1, #0xa3a
    1ad0:	ldr	x0, [x8]
    1ad4:	bl	1870 <PyErr_SetString@plt>
    1ad8:	mov	x19, xzr
    1adc:	mov	x0, x19
    1ae0:	ldp	x20, x19, [sp, #32]
    1ae4:	ldp	x22, x21, [sp, #16]
    1ae8:	ldp	x29, x30, [sp], #48
    1aec:	ret
    1af0:	adrp	x20, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1af4:	mov	w22, wzr
    1af8:	add	x20, x20, #0x698
    1afc:	cbnz	w22, 1ac0 <PyInit__codecs_iso2022@@Base+0xac>
    1b00:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b04:	add	x1, x1, #0xa56
    1b08:	mov	x0, x20
    1b0c:	mov	x2, xzr
    1b10:	bl	1920 <PyCapsule_New@plt>
    1b14:	cbz	x0, 1ad8 <PyInit__codecs_iso2022@@Base+0xc4>
    1b18:	mov	x20, x0
    1b1c:	mov	x0, x19
    1b20:	mov	x1, x20
    1b24:	mov	x2, xzr
    1b28:	bl	18d0 <PyObject_CallFunctionObjArgs@plt>
    1b2c:	mov	x19, x0
    1b30:	mov	x0, x20
    1b34:	bl	1b90 <PyInit__codecs_iso2022@@Base+0x17c>
    1b38:	b	1adc <PyInit__codecs_iso2022@@Base+0xc8>
    1b3c:	stp	x29, x30, [sp, #-32]!
    1b40:	stp	x20, x19, [sp, #16]
    1b44:	mov	x29, sp
    1b48:	adrp	x20, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1b4c:	ldr	x8, [x20, #312]
    1b50:	cbnz	x8, 1b80 <PyInit__codecs_iso2022@@Base+0x16c>
    1b54:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b58:	add	x0, x0, #0xa6d
    1b5c:	bl	18c0 <PyImport_ImportModuleNoBlock@plt>
    1b60:	cbz	x0, 1b84 <PyInit__codecs_iso2022@@Base+0x170>
    1b64:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b68:	add	x1, x1, #0xa7d
    1b6c:	mov	x19, x0
    1b70:	bl	1840 <PyObject_GetAttrString@plt>
    1b74:	str	x0, [x20, #312]
    1b78:	mov	x0, x19
    1b7c:	bl	1b90 <PyInit__codecs_iso2022@@Base+0x17c>
    1b80:	ldr	x0, [x20, #312]
    1b84:	ldp	x20, x19, [sp, #16]
    1b88:	ldp	x29, x30, [sp], #32
    1b8c:	ret
    1b90:	stp	x29, x30, [sp, #-16]!
    1b94:	mov	x29, sp
    1b98:	ldr	x8, [x0]
    1b9c:	subs	x8, x8, #0x1
    1ba0:	str	x8, [x0]
    1ba4:	b.eq	1bb0 <PyInit__codecs_iso2022@@Base+0x19c>  // b.none
    1ba8:	ldp	x29, x30, [sp], #16
    1bac:	ret
    1bb0:	bl	1860 <_Py_Dealloc@plt>
    1bb4:	ldp	x29, x30, [sp], #16
    1bb8:	ret
    1bbc:	stp	x29, x30, [sp, #-32]!
    1bc0:	str	x19, [sp, #16]
    1bc4:	mov	x29, sp
    1bc8:	ldr	x8, [x0, #8]
    1bcc:	ldrb	w9, [x8]
    1bd0:	cbz	w9, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1bd4:	add	x19, x8, #0x20
    1bd8:	b	1be4 <PyInit__codecs_iso2022@@Base+0x1d0>
    1bdc:	ldrb	w8, [x19], #32
    1be0:	cbz	w8, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1be4:	ldur	x8, [x19, #-24]
    1be8:	cbz	x8, 1bdc <PyInit__codecs_iso2022@@Base+0x1c8>
    1bec:	blr	x8
    1bf0:	cbz	w0, 1bdc <PyInit__codecs_iso2022@@Base+0x1c8>
    1bf4:	mov	w0, #0xffffffff            	// #-1
    1bf8:	b	1c00 <PyInit__codecs_iso2022@@Base+0x1ec>
    1bfc:	mov	w0, wzr
    1c00:	ldr	x19, [sp, #16]
    1c04:	ldp	x29, x30, [sp], #32
    1c08:	ret
    1c0c:	sub	sp, sp, #0x90
    1c10:	stp	x29, x30, [sp, #48]
    1c14:	stp	x28, x27, [sp, #64]
    1c18:	stp	x26, x25, [sp, #80]
    1c1c:	stp	x24, x23, [sp, #96]
    1c20:	stp	x22, x21, [sp, #112]
    1c24:	stp	x20, x19, [sp, #128]
    1c28:	add	x29, sp, #0x30
    1c2c:	ldr	w8, [x29, #96]
    1c30:	mov	x27, x7
    1c34:	mov	x19, x6
    1c38:	mov	x20, x5
    1c3c:	mov	x21, x4
    1c40:	mov	x28, x0
    1c44:	mov	w24, #0x1                   	// #1
    1c48:	mov	w22, #0xfffe                	// #65534
    1c4c:	and	w8, w8, #0x1
    1c50:	str	x1, [sp, #16]
    1c54:	stur	w8, [x29, #-20]
    1c58:	str	x3, [sp, #8]
    1c5c:	str	w2, [sp, #4]
    1c60:	b	1c74 <PyInit__codecs_iso2022@@Base+0x260>
    1c64:	mov	w9, #0x1                   	// #1
    1c68:	mov	x26, #0xffffffffffffffff    	// #-1
    1c6c:	cmp	w9, #0x1
    1c70:	b.eq	20ec <PyInit__codecs_iso2022@@Base+0x6d8>  // b.none
    1c74:	ldr	x8, [x21]
    1c78:	cmp	x8, x20
    1c7c:	b.ge	20e8 <PyInit__codecs_iso2022@@Base+0x6d4>  // b.tcont
    1c80:	cmp	w2, #0x2
    1c84:	b.eq	1c98 <PyInit__codecs_iso2022@@Base+0x284>  // b.none
    1c88:	cmp	w2, #0x1
    1c8c:	b.ne	1ca0 <PyInit__codecs_iso2022@@Base+0x28c>  // b.any
    1c90:	ldrb	w8, [x3, x8]
    1c94:	b	1ca4 <PyInit__codecs_iso2022@@Base+0x290>
    1c98:	ldrh	w8, [x3, x8, lsl #1]
    1c9c:	b	1ca4 <PyInit__codecs_iso2022@@Base+0x290>
    1ca0:	ldr	w8, [x3, x8, lsl #2]
    1ca4:	cmp	w8, #0x7f
    1ca8:	stur	w8, [x29, #-4]
    1cac:	b.hi	1d6c <PyInit__codecs_iso2022@@Base+0x358>  // b.pmore
    1cb0:	ldrb	w8, [x28]
    1cb4:	cmp	w8, #0x42
    1cb8:	b.eq	1cfc <PyInit__codecs_iso2022@@Base+0x2e8>  // b.none
    1cbc:	subs	x8, x27, #0x3
    1cc0:	b.lt	1c64 <PyInit__codecs_iso2022@@Base+0x250>  // b.tstop
    1cc4:	ldr	x9, [x19]
    1cc8:	mov	w10, #0x1b                  	// #27
    1ccc:	mov	x27, x8
    1cd0:	strb	w10, [x9]
    1cd4:	ldr	x9, [x19]
    1cd8:	mov	w10, #0x28                  	// #40
    1cdc:	strb	w10, [x9, #1]
    1ce0:	ldr	x9, [x19]
    1ce4:	mov	w10, #0x42                  	// #66
    1ce8:	strb	w10, [x9, #2]
    1cec:	strb	w10, [x28]
    1cf0:	ldr	x9, [x19]
    1cf4:	add	x9, x9, #0x3
    1cf8:	str	x9, [x19]
    1cfc:	ldrb	w8, [x28, #4]
    1d00:	tbz	w8, #0, 1d34 <PyInit__codecs_iso2022@@Base+0x320>
    1d04:	subs	x8, x27, #0x1
    1d08:	b.lt	1c64 <PyInit__codecs_iso2022@@Base+0x250>  // b.tstop
    1d0c:	ldr	x9, [x19]
    1d10:	mov	w10, #0xf                   	// #15
    1d14:	mov	x27, x8
    1d18:	strb	w10, [x9]
    1d1c:	ldrb	w9, [x28, #4]
    1d20:	and	w9, w9, #0xfe
    1d24:	strb	w9, [x28, #4]
    1d28:	ldr	x9, [x19]
    1d2c:	add	x9, x9, #0x1
    1d30:	str	x9, [x19]
    1d34:	subs	x8, x27, #0x1
    1d38:	b.lt	1c64 <PyInit__codecs_iso2022@@Base+0x250>  // b.tstop
    1d3c:	ldur	w9, [x29, #-4]
    1d40:	ldr	x10, [x19]
    1d44:	mov	x27, x8
    1d48:	strb	w9, [x10]
    1d4c:	ldr	x9, [x21]
    1d50:	add	x9, x9, #0x1
    1d54:	str	x9, [x21]
    1d58:	ldr	x9, [x19]
    1d5c:	add	x9, x9, #0x1
    1d60:	str	x9, [x19]
    1d64:	mov	w9, #0x2                   	// #2
    1d68:	b	1c6c <PyInit__codecs_iso2022@@Base+0x258>
    1d6c:	ldr	x8, [sp, #16]
    1d70:	ldr	x23, [x8, #8]
    1d74:	ldrb	w8, [x23]
    1d78:	cbz	w8, 1e2c <PyInit__codecs_iso2022@@Base+0x418>
    1d7c:	mov	w25, #0x1                   	// #1
    1d80:	stur	x24, [x29, #-16]
    1d84:	ldr	x8, [x23, #24]
    1d88:	sub	x0, x29, #0x4
    1d8c:	sub	x1, x29, #0x10
    1d90:	blr	x8
    1d94:	cmp	w22, w0, uxth
    1d98:	b.ne	1dc8 <PyInit__codecs_iso2022@@Base+0x3b4>  // b.any
    1d9c:	ldr	x8, [x21]
    1da0:	sub	x8, x20, x8
    1da4:	cmp	x8, #0x1
    1da8:	b.gt	1ddc <PyInit__codecs_iso2022@@Base+0x3c8>
    1dac:	ldur	w9, [x29, #-20]
    1db0:	cbnz	w9, 1ddc <PyInit__codecs_iso2022@@Base+0x3c8>
    1db4:	ubfx	w8, w0, #8, #8
    1db8:	mov	w9, #0x1                   	// #1
    1dbc:	mov	x26, #0xfffffffffffffffe    	// #-2
    1dc0:	cbz	w9, 1e20 <PyInit__codecs_iso2022@@Base+0x40c>
    1dc4:	b	1e3c <PyInit__codecs_iso2022@@Base+0x428>
    1dc8:	and	w9, w0, #0xffff
    1dcc:	mov	w10, #0xffff                	// #65535
    1dd0:	ubfx	w8, w0, #8, #8
    1dd4:	cmp	w9, w10
    1dd8:	b	1e14 <PyInit__codecs_iso2022@@Base+0x400>
    1ddc:	cmp	x8, #0x1
    1de0:	mov	w8, #0x2                   	// #2
    1de4:	csinv	x8, x8, xzr, gt
    1de8:	stur	x8, [x29, #-16]
    1dec:	ldr	x8, [x23, #24]
    1df0:	sub	x0, x29, #0x4
    1df4:	sub	x1, x29, #0x10
    1df8:	blr	x8
    1dfc:	ldur	x9, [x29, #-16]
    1e00:	and	w10, w0, #0xffff
    1e04:	mov	w11, #0xffff                	// #65535
    1e08:	cmp	w10, w11
    1e0c:	ubfx	w8, w0, #8, #8
    1e10:	csel	x25, x25, x9, eq  // eq = none
    1e14:	mov	w9, #0x28                  	// #40
    1e18:	csel	w9, wzr, w9, eq  // eq = none
    1e1c:	cbnz	w9, 1e3c <PyInit__codecs_iso2022@@Base+0x428>
    1e20:	ldrb	w9, [x23, #32]!
    1e24:	cbnz	w9, 1d80 <PyInit__codecs_iso2022@@Base+0x36c>
    1e28:	b	1e44 <PyInit__codecs_iso2022@@Base+0x430>
    1e2c:	mov	w0, #0xff                  	// #255
    1e30:	mov	w8, #0xff                  	// #255
    1e34:	mov	w25, #0x1                   	// #1
    1e38:	b	1e44 <PyInit__codecs_iso2022@@Base+0x430>
    1e3c:	cmp	w9, #0x28
    1e40:	b.ne	2094 <PyInit__codecs_iso2022@@Base+0x680>  // b.any
    1e44:	ldrb	w9, [x23]
    1e48:	cbz	w9, 1ed0 <PyInit__codecs_iso2022@@Base+0x4bc>
    1e4c:	ldrb	w10, [x23, #1]
    1e50:	cmp	w10, #0x1
    1e54:	b.eq	1edc <PyInit__codecs_iso2022@@Base+0x4c8>  // b.none
    1e58:	cbnz	w10, 1f1c <PyInit__codecs_iso2022@@Base+0x508>
    1e5c:	ldrb	w9, [x28, #4]
    1e60:	tbz	w9, #0, 1e94 <PyInit__codecs_iso2022@@Base+0x480>
    1e64:	subs	x9, x27, #0x1
    1e68:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    1e6c:	ldr	x10, [x19]
    1e70:	mov	w11, #0xf                   	// #15
    1e74:	mov	x27, x9
    1e78:	strb	w11, [x10]
    1e7c:	ldrb	w10, [x28, #4]
    1e80:	and	w10, w10, #0xfe
    1e84:	strb	w10, [x28, #4]
    1e88:	ldr	x10, [x19]
    1e8c:	add	x10, x10, #0x1
    1e90:	str	x10, [x19]
    1e94:	ldrb	w10, [x28]
    1e98:	ldrb	w9, [x23]
    1e9c:	cmp	w10, w9
    1ea0:	b.eq	2060 <PyInit__codecs_iso2022@@Base+0x64c>  // b.none
    1ea4:	ldrb	w10, [x23, #2]
    1ea8:	cmp	w10, #0x1
    1eac:	b.ne	1fc0 <PyInit__codecs_iso2022@@Base+0x5ac>  // b.any
    1eb0:	subs	x9, x27, #0x3
    1eb4:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    1eb8:	ldr	x10, [x19]
    1ebc:	mov	w11, #0x1b                  	// #27
    1ec0:	strb	w11, [x10]
    1ec4:	ldr	x10, [x19]
    1ec8:	mov	w11, #0x28                  	// #40
    1ecc:	b	1fe4 <PyInit__codecs_iso2022@@Base+0x5d0>
    1ed0:	mov	w26, #0x1                   	// #1
    1ed4:	mov	w9, #0x1                   	// #1
    1ed8:	b	2094 <PyInit__codecs_iso2022@@Base+0x680>
    1edc:	ldrb	w10, [x28, #1]
    1ee0:	cmp	w10, w9
    1ee4:	b.eq	1f8c <PyInit__codecs_iso2022@@Base+0x578>  // b.none
    1ee8:	ldrb	w9, [x23, #2]
    1eec:	cmp	w9, #0x1
    1ef0:	b.ne	1f28 <PyInit__codecs_iso2022@@Base+0x514>  // b.any
    1ef4:	cmp	x27, #0x3
    1ef8:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    1efc:	ldr	x10, [x19]
    1f00:	mov	w13, #0x1b                  	// #27
    1f04:	mov	x9, #0xfffffffffffffffd    	// #-3
    1f08:	mov	w12, #0x1                   	// #1
    1f0c:	mov	w11, #0x2                   	// #2
    1f10:	strb	w13, [x10]
    1f14:	mov	w10, #0x3                   	// #3
    1f18:	b	1f58 <PyInit__codecs_iso2022@@Base+0x544>
    1f1c:	mov	w9, #0x1                   	// #1
    1f20:	mov	x26, #0xfffffffffffffffd    	// #-3
    1f24:	b	2094 <PyInit__codecs_iso2022@@Base+0x680>
    1f28:	cmp	x27, #0x4
    1f2c:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    1f30:	ldr	x9, [x19]
    1f34:	mov	w10, #0x1b                  	// #27
    1f38:	mov	w13, #0x24                  	// #36
    1f3c:	mov	w12, #0x2                   	// #2
    1f40:	strb	w10, [x9]
    1f44:	ldr	x10, [x19]
    1f48:	mov	x9, #0xfffffffffffffffc    	// #-4
    1f4c:	mov	w11, #0x3                   	// #3
    1f50:	strb	w13, [x10, #1]
    1f54:	mov	w10, #0x4                   	// #4
    1f58:	ldr	x13, [x19]
    1f5c:	mov	w15, #0x29                  	// #41
    1f60:	add	x27, x27, x9
    1f64:	strb	w15, [x13, x12]
    1f68:	ldrb	w12, [x23]
    1f6c:	ldr	x13, [x19]
    1f70:	and	w12, w12, #0x7f
    1f74:	strb	w12, [x13, x11]
    1f78:	ldrb	w11, [x23]
    1f7c:	strb	w11, [x28, #1]
    1f80:	ldr	x11, [x19]
    1f84:	add	x10, x11, x10
    1f88:	str	x10, [x19]
    1f8c:	ldrb	w9, [x28, #4]
    1f90:	tbnz	w9, #0, 2060 <PyInit__codecs_iso2022@@Base+0x64c>
    1f94:	subs	x9, x27, #0x1
    1f98:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    1f9c:	ldr	x10, [x19]
    1fa0:	mov	w11, #0xe                   	// #14
    1fa4:	strb	w11, [x10]
    1fa8:	ldrb	w10, [x28, #4]
    1fac:	orr	w10, w10, #0x1
    1fb0:	strb	w10, [x28, #4]
    1fb4:	ldr	x10, [x19]
    1fb8:	add	x10, x10, #0x1
    1fbc:	b	2058 <PyInit__codecs_iso2022@@Base+0x644>
    1fc0:	cmp	w9, #0xc2
    1fc4:	b.ne	200c <PyInit__codecs_iso2022@@Base+0x5f8>  // b.any
    1fc8:	subs	x9, x27, #0x3
    1fcc:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    1fd0:	ldr	x10, [x19]
    1fd4:	mov	w11, #0x1b                  	// #27
    1fd8:	strb	w11, [x10]
    1fdc:	ldr	x10, [x19]
    1fe0:	mov	w11, #0x24                  	// #36
    1fe4:	strb	w11, [x10, #1]
    1fe8:	ldrb	w10, [x23]
    1fec:	ldr	x11, [x19]
    1ff0:	and	w10, w10, #0x7f
    1ff4:	strb	w10, [x11, #2]
    1ff8:	ldrb	w10, [x23]
    1ffc:	strb	w10, [x28]
    2000:	ldr	x10, [x19]
    2004:	add	x10, x10, #0x3
    2008:	b	2058 <PyInit__codecs_iso2022@@Base+0x644>
    200c:	subs	x9, x27, #0x4
    2010:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    2014:	ldr	x10, [x19]
    2018:	mov	w11, #0x1b                  	// #27
    201c:	strb	w11, [x10]
    2020:	ldr	x10, [x19]
    2024:	mov	w11, #0x24                  	// #36
    2028:	strb	w11, [x10, #1]
    202c:	ldr	x10, [x19]
    2030:	mov	w11, #0x28                  	// #40
    2034:	strb	w11, [x10, #2]
    2038:	ldrb	w10, [x23]
    203c:	ldr	x11, [x19]
    2040:	and	w10, w10, #0x7f
    2044:	strb	w10, [x11, #3]
    2048:	ldrb	w10, [x23]
    204c:	strb	w10, [x28]
    2050:	ldr	x10, [x19]
    2054:	add	x10, x10, #0x4
    2058:	mov	x27, x9
    205c:	str	x10, [x19]
    2060:	ldrb	w9, [x23, #2]
    2064:	cmp	w9, #0x1
    2068:	b.ne	2084 <PyInit__codecs_iso2022@@Base+0x670>  // b.any
    206c:	cmp	x27, #0x1
    2070:	b.lt	208c <PyInit__codecs_iso2022@@Base+0x678>  // b.tstop
    2074:	ldr	x10, [x19]
    2078:	mov	x8, #0xffffffffffffffff    	// #-1
    207c:	mov	w11, #0x1                   	// #1
    2080:	b	20b8 <PyInit__codecs_iso2022@@Base+0x6a4>
    2084:	cmp	x27, #0x2
    2088:	b.ge	20a0 <PyInit__codecs_iso2022@@Base+0x68c>  // b.tcont
    208c:	mov	w9, #0x1                   	// #1
    2090:	mov	x26, #0xffffffffffffffff    	// #-1
    2094:	ldr	x3, [sp, #8]
    2098:	ldr	w2, [sp, #4]
    209c:	b	1c6c <PyInit__codecs_iso2022@@Base+0x258>
    20a0:	ldr	x9, [x19]
    20a4:	mov	w11, #0x2                   	// #2
    20a8:	strb	w8, [x9]
    20ac:	ldr	x9, [x19]
    20b0:	mov	x8, #0xfffffffffffffffe    	// #-2
    20b4:	add	x10, x9, #0x1
    20b8:	strb	w0, [x10]
    20bc:	ldr	x10, [x19]
    20c0:	ldr	x3, [sp, #8]
    20c4:	ldr	w2, [sp, #4]
    20c8:	mov	w9, wzr
    20cc:	add	x10, x10, x11
    20d0:	str	x10, [x19]
    20d4:	ldr	x10, [x21]
    20d8:	add	x27, x27, x8
    20dc:	add	x8, x10, x25
    20e0:	str	x8, [x21]
    20e4:	b	1c6c <PyInit__codecs_iso2022@@Base+0x258>
    20e8:	mov	x26, xzr
    20ec:	mov	x0, x26
    20f0:	ldp	x20, x19, [sp, #128]
    20f4:	ldp	x22, x21, [sp, #112]
    20f8:	ldp	x24, x23, [sp, #96]
    20fc:	ldp	x26, x25, [sp, #80]
    2100:	ldp	x28, x27, [sp, #64]
    2104:	ldp	x29, x30, [sp, #48]
    2108:	add	sp, sp, #0x90
    210c:	ret
    2110:	mov	w8, #0x4242                	// #16962
    2114:	strb	wzr, [x0, #4]
    2118:	strh	w8, [x0]
    211c:	mov	w0, wzr
    2120:	ret
    2124:	ldrb	w8, [x0, #4]
    2128:	tbz	w8, #0, 2158 <PyInit__codecs_iso2022@@Base+0x744>
    212c:	subs	x3, x3, #0x1
    2130:	b.lt	216c <PyInit__codecs_iso2022@@Base+0x758>  // b.tstop
    2134:	ldr	x8, [x2]
    2138:	mov	w9, #0xf                   	// #15
    213c:	strb	w9, [x8]
    2140:	ldr	x8, [x2]
    2144:	add	x8, x8, #0x1
    2148:	str	x8, [x2]
    214c:	ldrb	w8, [x0, #4]
    2150:	and	w8, w8, #0xfe
    2154:	strb	w8, [x0, #4]
    2158:	ldrb	w8, [x0]
    215c:	cmp	w8, #0x42
    2160:	b.eq	21a8 <PyInit__codecs_iso2022@@Base+0x794>  // b.none
    2164:	cmp	x3, #0x3
    2168:	b.ge	2174 <PyInit__codecs_iso2022@@Base+0x760>  // b.tcont
    216c:	mov	x0, #0xffffffffffffffff    	// #-1
    2170:	ret
    2174:	ldr	x9, [x2]
    2178:	mov	w10, #0x1b                  	// #27
    217c:	strb	w10, [x9]
    2180:	ldr	x9, [x2]
    2184:	mov	w10, #0x28                  	// #40
    2188:	strb	w10, [x9, #1]
    218c:	ldr	x9, [x2]
    2190:	mov	w10, #0x42                  	// #66
    2194:	strb	w10, [x9, #2]
    2198:	ldr	x9, [x2]
    219c:	add	x9, x9, #0x3
    21a0:	str	x9, [x2]
    21a4:	strb	w10, [x0]
    21a8:	mov	x0, xzr
    21ac:	ret
    21b0:	sub	sp, sp, #0x70
    21b4:	stp	x29, x30, [sp, #16]
    21b8:	stp	x28, x27, [sp, #32]
    21bc:	stp	x26, x25, [sp, #48]
    21c0:	stp	x24, x23, [sp, #64]
    21c4:	stp	x22, x21, [sp, #80]
    21c8:	stp	x20, x19, [sp, #96]
    21cc:	add	x29, sp, #0x10
    21d0:	cmp	x3, #0x1
    21d4:	str	x3, [sp, #8]
    21d8:	b.lt	2574 <PyInit__codecs_iso2022@@Base+0xb60>  // b.tstop
    21dc:	adrp	x28, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    21e0:	mov	x19, x4
    21e4:	mov	x24, x3
    21e8:	mov	x20, x2
    21ec:	mov	x21, x1
    21f0:	mov	x22, x0
    21f4:	mov	x27, xzr
    21f8:	add	x26, x0, #0x1
    21fc:	add	x28, x28, #0x9e8
    2200:	ldr	x0, [x20]
    2204:	ldrb	w8, [x22, #4]
    2208:	ldrb	w25, [x0]
    220c:	tbnz	w8, #1, 2248 <PyInit__codecs_iso2022@@Base+0x834>
    2210:	sub	w9, w25, #0xa
    2214:	cmp	w9, #0x11
    2218:	b.hi	22a0 <PyInit__codecs_iso2022@@Base+0x88c>  // b.pmore
    221c:	adr	x10, 222c <PyInit__codecs_iso2022@@Base+0x818>
    2220:	ldrb	w11, [x28, x9]
    2224:	add	x10, x10, x11, lsl #2
    2228:	br	x10
    222c:	and	w8, w8, #0xfe
    2230:	strb	w8, [x22, #4]
    2234:	mov	w1, #0xa                   	// #10
    2238:	mov	x0, x19
    223c:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2240:	tbz	w0, #31, 2344 <PyInit__codecs_iso2022@@Base+0x930>
    2244:	b	2450 <PyInit__codecs_iso2022@@Base+0xa3c>
    2248:	mov	x0, x19
    224c:	mov	w1, w25
    2250:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2254:	tbnz	w0, #31, 2450 <PyInit__codecs_iso2022@@Base+0xa3c>
    2258:	ldr	x8, [x20]
    225c:	sub	x9, x24, #0x1
    2260:	cmp	w25, #0x40
    2264:	add	x8, x8, #0x1
    2268:	str	x8, [x20]
    226c:	str	x9, [sp, #8]
    2270:	b.eq	228c <PyInit__codecs_iso2022@@Base+0x878>  // b.none
    2274:	sub	w8, w25, #0x41
    2278:	and	w8, w8, #0xff
    227c:	cmp	w8, #0x19
    2280:	b.ls	228c <PyInit__codecs_iso2022@@Base+0x878>  // b.plast
    2284:	mov	w8, #0x2                   	// #2
    2288:	b	2458 <PyInit__codecs_iso2022@@Base+0xa44>
    228c:	ldrb	w8, [x22, #4]
    2290:	and	w8, w8, #0xfffffffd
    2294:	strb	w8, [x22, #4]
    2298:	mov	w8, #0x2                   	// #2
    229c:	b	2458 <PyInit__codecs_iso2022@@Base+0xa44>
    22a0:	cmp	w25, #0x20
    22a4:	b.cc	2334 <PyInit__codecs_iso2022@@Base+0x920>  // b.lo, b.ul, b.last
    22a8:	sxtb	w9, w25
    22ac:	tbnz	w9, #31, 23b4 <PyInit__codecs_iso2022@@Base+0x9a0>
    22b0:	tst	w8, #0x1
    22b4:	csel	x8, x22, x26, eq  // eq = none
    22b8:	ldrb	w8, [x8]
    22bc:	cmp	w8, #0x42
    22c0:	b.eq	2334 <PyInit__codecs_iso2022@@Base+0x920>  // b.none
    22c4:	cbz	x27, 22d4 <PyInit__codecs_iso2022@@Base+0x8c0>
    22c8:	ldrb	w9, [x27]
    22cc:	cmp	w9, w8
    22d0:	b.eq	22e8 <PyInit__codecs_iso2022@@Base+0x8d4>  // b.none
    22d4:	ldr	x9, [x21, #8]
    22d8:	sub	x27, x9, #0x20
    22dc:	ldrb	w9, [x27, #32]!
    22e0:	cmp	w9, w8
    22e4:	b.ne	22dc <PyInit__codecs_iso2022@@Base+0x8c8>  // b.any
    22e8:	ldrb	w8, [x27, #2]
    22ec:	cmp	x24, x8
    22f0:	b.lt	2368 <PyInit__codecs_iso2022@@Base+0x954>  // b.tstop
    22f4:	ldr	x8, [x27, #16]
    22f8:	blr	x8
    22fc:	mov	w8, #0xffff                	// #65535
    2300:	cmp	w0, w8
    2304:	b.ne	2410 <PyInit__codecs_iso2022@@Base+0x9fc>  // b.any
    2308:	ldrb	w23, [x27, #2]
    230c:	b	2454 <PyInit__codecs_iso2022@@Base+0xa40>
    2310:	ldrb	w9, [x21]
    2314:	tbnz	w9, #0, 2334 <PyInit__codecs_iso2022@@Base+0x920>
    2318:	orr	w8, w8, #0x1
    231c:	b	232c <PyInit__codecs_iso2022@@Base+0x918>
    2320:	ldrb	w9, [x21]
    2324:	tbnz	w9, #0, 2334 <PyInit__codecs_iso2022@@Base+0x920>
    2328:	and	w8, w8, #0xfe
    232c:	strb	w8, [x22, #4]
    2330:	b	2344 <PyInit__codecs_iso2022@@Base+0x930>
    2334:	mov	x0, x19
    2338:	mov	w1, w25
    233c:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2340:	tbnz	w0, #31, 2450 <PyInit__codecs_iso2022@@Base+0xa3c>
    2344:	ldr	x8, [x20]
    2348:	sub	x9, x24, #0x1
    234c:	add	x8, x8, #0x1
    2350:	str	x8, [x20]
    2354:	str	x9, [sp, #8]
    2358:	mov	w8, wzr
    235c:	b	2458 <PyInit__codecs_iso2022@@Base+0xa44>
    2360:	cmp	x24, #0x2
    2364:	b.ge	2370 <PyInit__codecs_iso2022@@Base+0x95c>  // b.tcont
    2368:	mov	x23, #0xfffffffffffffffe    	// #-2
    236c:	b	2454 <PyInit__codecs_iso2022@@Base+0xa40>
    2370:	ldrb	w8, [x0, #1]
    2374:	cmp	w8, #0x2e
    2378:	b.hi	23c0 <PyInit__codecs_iso2022@@Base+0x9ac>  // b.pmore
    237c:	mov	w9, #0x1                   	// #1
    2380:	lsl	x9, x9, x8
    2384:	mov	x10, #0x435000000000        	// #74010876444672
    2388:	tst	x9, x10
    238c:	b.eq	23c0 <PyInit__codecs_iso2022@@Base+0x9ac>  // b.none
    2390:	add	x3, sp, #0x8
    2394:	mov	x0, x21
    2398:	mov	x1, x22
    239c:	mov	x2, x20
    23a0:	bl	27c4 <PyInit__codecs_iso2022@@Base+0xdb0>
    23a4:	cbz	x0, 2358 <PyInit__codecs_iso2022@@Base+0x944>
    23a8:	mov	w8, #0x1                   	// #1
    23ac:	mov	x23, x0
    23b0:	b	2458 <PyInit__codecs_iso2022@@Base+0xa44>
    23b4:	mov	w8, #0x1                   	// #1
    23b8:	mov	w23, #0x1                   	// #1
    23bc:	b	2458 <PyInit__codecs_iso2022@@Base+0xa44>
    23c0:	cmp	w8, #0x4e
    23c4:	b.ne	23f4 <PyInit__codecs_iso2022@@Base+0x9e0>  // b.any
    23c8:	ldr	w8, [x21]
    23cc:	tbz	w8, #1, 23f4 <PyInit__codecs_iso2022@@Base+0x9e0>
    23d0:	cmp	x24, #0x3
    23d4:	b.lt	2368 <PyInit__codecs_iso2022@@Base+0x954>  // b.tstop
    23d8:	add	x2, sp, #0x8
    23dc:	mov	x0, x22
    23e0:	mov	x1, x20
    23e4:	mov	x3, x19
    23e8:	bl	29a0 <PyInit__codecs_iso2022@@Base+0xf8c>
    23ec:	cbnz	x0, 23a8 <PyInit__codecs_iso2022@@Base+0x994>
    23f0:	b	2358 <PyInit__codecs_iso2022@@Base+0x944>
    23f4:	mov	w1, #0x1b                  	// #27
    23f8:	mov	x0, x19
    23fc:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2400:	tbnz	w0, #31, 2450 <PyInit__codecs_iso2022@@Base+0xa3c>
    2404:	ldrb	w8, [x22, #4]
    2408:	orr	w8, w8, #0x2
    240c:	b	232c <PyInit__codecs_iso2022@@Base+0x918>
    2410:	mov	w25, w0
    2414:	lsr	w10, w0, #16
    2418:	cbz	w10, 2424 <PyInit__codecs_iso2022@@Base+0xa10>
    241c:	cmp	w10, #0x2
    2420:	b.hi	2474 <PyInit__codecs_iso2022@@Base+0xa60>  // b.pmore
    2424:	mov	x0, x19
    2428:	mov	w1, w25
    242c:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2430:	tbnz	w0, #31, 2450 <PyInit__codecs_iso2022@@Base+0xa3c>
    2434:	ldrb	w8, [x27, #2]
    2438:	ldr	x9, [x20]
    243c:	add	x9, x9, x8
    2440:	sub	x8, x24, x8
    2444:	str	x9, [x20]
    2448:	str	x8, [sp, #8]
    244c:	b	2358 <PyInit__codecs_iso2022@@Base+0x944>
    2450:	mov	x23, #0xfffffffffffffffc    	// #-4
    2454:	mov	w8, #0x1                   	// #1
    2458:	orr	w8, w8, #0x2
    245c:	cmp	w8, #0x2
    2460:	b.ne	2578 <PyInit__codecs_iso2022@@Base+0xb64>  // b.any
    2464:	ldr	x24, [sp, #8]
    2468:	cmp	x24, #0x0
    246c:	b.gt	2200 <PyInit__codecs_iso2022@@Base+0x7ec>
    2470:	b	2574 <PyInit__codecs_iso2022@@Base+0xb60>
    2474:	ldr	w8, [x19, #20]
    2478:	and	w9, w25, #0xffff
    247c:	cmp	w10, w9
    2480:	csel	w2, w10, w9, hi  // hi = pmore
    2484:	cmp	w2, w8
    2488:	stp	w9, w10, [sp]
    248c:	b.hi	24a8 <PyInit__codecs_iso2022@@Base+0xa94>  // b.pmore
    2490:	ldp	x8, x9, [x19, #24]
    2494:	sub	x8, x8, x9
    2498:	cmp	x8, #0x1
    249c:	b.le	24a8 <PyInit__codecs_iso2022@@Base+0xa94>
    24a0:	mov	w0, wzr
    24a4:	b	24b4 <PyInit__codecs_iso2022@@Base+0xaa0>
    24a8:	mov	w1, #0x2                   	// #2
    24ac:	mov	x0, x19
    24b0:	bl	18f0 <_PyUnicodeWriter_PrepareInternal@plt>
    24b4:	tbnz	w0, #31, 24e0 <PyInit__codecs_iso2022@@Base+0xacc>
    24b8:	ldr	w8, [x19, #16]
    24bc:	cmp	w8, #0x2
    24c0:	b.eq	24ec <PyInit__codecs_iso2022@@Base+0xad8>  // b.none
    24c4:	ldr	w10, [sp, #4]
    24c8:	cmp	w8, #0x1
    24cc:	b.ne	2500 <PyInit__codecs_iso2022@@Base+0xaec>  // b.any
    24d0:	ldr	x8, [x19, #8]
    24d4:	ldr	x9, [x19, #32]
    24d8:	strb	w10, [x8, x9]
    24dc:	b	250c <PyInit__codecs_iso2022@@Base+0xaf8>
    24e0:	mov	x23, #0xfffffffffffffffc    	// #-4
    24e4:	mov	w8, #0x1                   	// #1
    24e8:	b	256c <PyInit__codecs_iso2022@@Base+0xb58>
    24ec:	ldr	x8, [x19, #8]
    24f0:	ldr	x9, [x19, #32]
    24f4:	ldr	w10, [sp, #4]
    24f8:	strh	w10, [x8, x9, lsl #1]
    24fc:	b	250c <PyInit__codecs_iso2022@@Base+0xaf8>
    2500:	ldr	x8, [x19, #8]
    2504:	ldr	x9, [x19, #32]
    2508:	str	w10, [x8, x9, lsl #2]
    250c:	ldr	w8, [x19, #16]
    2510:	cmp	w8, #0x2
    2514:	b.eq	2534 <PyInit__codecs_iso2022@@Base+0xb20>  // b.none
    2518:	cmp	w8, #0x1
    251c:	b.ne	2548 <PyInit__codecs_iso2022@@Base+0xb34>  // b.any
    2520:	ldr	x8, [x19, #8]
    2524:	ldr	x9, [x19, #32]
    2528:	add	x8, x9, x8
    252c:	strb	w25, [x8, #1]
    2530:	b	255c <PyInit__codecs_iso2022@@Base+0xb48>
    2534:	ldr	x8, [x19, #8]
    2538:	ldr	x9, [x19, #32]
    253c:	add	x8, x8, x9, lsl #1
    2540:	strh	w25, [x8, #2]
    2544:	b	255c <PyInit__codecs_iso2022@@Base+0xb48>
    2548:	ldr	x8, [x19, #8]
    254c:	ldr	x9, [x19, #32]
    2550:	add	x8, x8, x9, lsl #2
    2554:	ldr	w9, [sp]
    2558:	str	w9, [x8, #4]
    255c:	ldr	x9, [x19, #32]
    2560:	mov	w8, wzr
    2564:	add	x9, x9, #0x2
    2568:	str	x9, [x19, #32]
    256c:	cbnz	w8, 2458 <PyInit__codecs_iso2022@@Base+0xa44>
    2570:	b	2434 <PyInit__codecs_iso2022@@Base+0xa20>
    2574:	mov	x23, xzr
    2578:	mov	x0, x23
    257c:	ldp	x20, x19, [sp, #96]
    2580:	ldp	x22, x21, [sp, #80]
    2584:	ldp	x24, x23, [sp, #64]
    2588:	ldp	x26, x25, [sp, #48]
    258c:	ldp	x28, x27, [sp, #32]
    2590:	ldp	x29, x30, [sp, #16]
    2594:	add	sp, sp, #0x70
    2598:	ret
    259c:	mov	w8, #0x4242                	// #16962
    25a0:	mov	w9, #0x42                  	// #66
    25a4:	strb	wzr, [x0, #4]
    25a8:	strh	w8, [x0]
    25ac:	strb	w9, [x0, #2]
    25b0:	mov	w0, wzr
    25b4:	ret
    25b8:	ldrb	w8, [x0, #4]
    25bc:	mov	w9, #0x42                  	// #66
    25c0:	strb	w9, [x0]
    25c4:	and	w8, w8, #0xfe
    25c8:	strb	w8, [x0, #4]
    25cc:	mov	x0, xzr
    25d0:	ret
    25d4:	stp	x29, x30, [sp, #-32]!
    25d8:	str	x19, [sp, #16]
    25dc:	mov	x29, sp
    25e0:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    25e4:	ldrb	w8, [x19, #320]
    25e8:	tbz	w8, #0, 25fc <PyInit__codecs_iso2022@@Base+0xbe8>
    25ec:	mov	w0, wzr
    25f0:	mov	w8, #0x1                   	// #1
    25f4:	strb	w8, [x19, #320]
    25f8:	b	2648 <PyInit__codecs_iso2022@@Base+0xc34>
    25fc:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2600:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2604:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2608:	add	x0, x0, #0xae8
    260c:	add	x1, x1, #0xaf3
    2610:	add	x2, x2, #0x148
    2614:	mov	x3, xzr
    2618:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    261c:	cbnz	w0, 2644 <PyInit__codecs_iso2022@@Base+0xc30>
    2620:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2624:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2628:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    262c:	add	x0, x0, #0xae8
    2630:	add	x1, x1, #0xaff
    2634:	add	x3, x3, #0x150
    2638:	mov	x2, xzr
    263c:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2640:	cbz	w0, 25ec <PyInit__codecs_iso2022@@Base+0xbd8>
    2644:	mov	w0, #0xffffffff            	// #-1
    2648:	ldr	x19, [sp, #16]
    264c:	ldp	x29, x30, [sp], #32
    2650:	ret
    2654:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2658:	ldrb	w10, [x0]
    265c:	ldr	x11, [x8, #336]
    2660:	lsl	x8, x10, #4
    2664:	ldr	x8, [x11, x8]
    2668:	cbz	x8, 268c <PyInit__codecs_iso2022@@Base+0xc78>
    266c:	add	x11, x11, x10, lsl #4
    2670:	ldrb	w9, [x0, #1]
    2674:	ldrb	w10, [x11, #8]
    2678:	cmp	w9, w10
    267c:	b.cc	268c <PyInit__codecs_iso2022@@Base+0xc78>  // b.lo, b.ul, b.last
    2680:	ldrb	w11, [x11, #9]
    2684:	cmp	w9, w11
    2688:	b.ls	2694 <PyInit__codecs_iso2022@@Base+0xc80>  // b.plast
    268c:	mov	w0, #0xffff                	// #65535
    2690:	ret
    2694:	sub	x9, x9, x10
    2698:	ldrh	w8, [x8, x9, lsl #1]
    269c:	mov	w9, #0xfffe                	// #65534
    26a0:	cmp	w8, w9
    26a4:	csinv	w8, w8, wzr, ne  // ne = any
    26a8:	and	w0, w8, #0xffff
    26ac:	ret
    26b0:	ldr	w8, [x0]
    26b4:	ubfx	x9, x8, #16, #16
    26b8:	cbnz	w9, 26fc <PyInit__codecs_iso2022@@Base+0xce8>
    26bc:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    26c0:	ldr	x10, [x9, #328]
    26c4:	lsr	x11, x8, #8
    26c8:	lsl	x9, x11, #4
    26cc:	ldr	x9, [x10, x9]
    26d0:	cbz	x9, 26fc <PyInit__codecs_iso2022@@Base+0xce8>
    26d4:	add	x10, x10, x11, lsl #4
    26d8:	ldrb	w12, [x10, #8]
    26dc:	and	w11, w8, #0xff
    26e0:	subs	w8, w11, w12
    26e4:	b.cc	26fc <PyInit__codecs_iso2022@@Base+0xce8>  // b.lo, b.ul, b.last
    26e8:	ldrb	w10, [x10, #9]
    26ec:	cmp	w11, w10
    26f0:	b.hi	26fc <PyInit__codecs_iso2022@@Base+0xce8>  // b.pmore
    26f4:	ldrsh	w0, [x9, w8, uxtw #1]
    26f8:	tbz	w0, #31, 2700 <PyInit__codecs_iso2022@@Base+0xcec>
    26fc:	mov	w0, #0xffff                	// #65535
    2700:	ret
    2704:	stp	x29, x30, [sp, #-48]!
    2708:	stp	x22, x21, [sp, #16]
    270c:	stp	x20, x19, [sp, #32]
    2710:	mov	x29, sp
    2714:	mov	x20, x3
    2718:	mov	x21, x2
    271c:	mov	x22, x1
    2720:	bl	18b0 <PyImport_ImportModule@plt>
    2724:	cbz	x0, 2784 <PyInit__codecs_iso2022@@Base+0xd70>
    2728:	mov	x1, x22
    272c:	mov	x19, x0
    2730:	bl	1840 <PyObject_GetAttrString@plt>
    2734:	cbz	x0, 27a4 <PyInit__codecs_iso2022@@Base+0xd90>
    2738:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    273c:	add	x1, x1, #0xa56
    2740:	mov	x22, x0
    2744:	bl	1880 <PyCapsule_IsValid@plt>
    2748:	cbz	w0, 278c <PyInit__codecs_iso2022@@Base+0xd78>
    274c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2750:	add	x1, x1, #0xa56
    2754:	mov	x0, x22
    2758:	bl	1930 <PyCapsule_GetPointer@plt>
    275c:	cbz	x21, 2768 <PyInit__codecs_iso2022@@Base+0xd54>
    2760:	ldr	x8, [x0, #8]
    2764:	str	x8, [x21]
    2768:	cbz	x20, 2774 <PyInit__codecs_iso2022@@Base+0xd60>
    276c:	ldr	x8, [x0, #16]
    2770:	str	x8, [x20]
    2774:	mov	x0, x22
    2778:	bl	1b90 <PyInit__codecs_iso2022@@Base+0x17c>
    277c:	mov	w20, wzr
    2780:	b	27a8 <PyInit__codecs_iso2022@@Base+0xd94>
    2784:	mov	w20, #0xffffffff            	// #-1
    2788:	b	27b0 <PyInit__codecs_iso2022@@Base+0xd9c>
    278c:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    2790:	ldr	x8, [x8, #4032]
    2794:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2798:	add	x1, x1, #0xb0d
    279c:	ldr	x0, [x8]
    27a0:	bl	1870 <PyErr_SetString@plt>
    27a4:	mov	w20, #0xffffffff            	// #-1
    27a8:	mov	x0, x19
    27ac:	bl	1b90 <PyInit__codecs_iso2022@@Base+0x17c>
    27b0:	mov	w0, w20
    27b4:	ldp	x20, x19, [sp, #32]
    27b8:	ldp	x22, x21, [sp, #16]
    27bc:	ldp	x29, x30, [sp], #48
    27c0:	ret
    27c4:	ldr	x9, [x3]
    27c8:	mov	w8, #0x1                   	// #1
    27cc:	b	27dc <PyInit__codecs_iso2022@@Base+0xdc8>
    27d0:	add	x8, x8, #0x1
    27d4:	cmp	x8, #0x10
    27d8:	b.ge	284c <PyInit__codecs_iso2022@@Base+0xe38>  // b.tcont
    27dc:	cmp	x8, x9
    27e0:	b.ge	2834 <PyInit__codecs_iso2022@@Base+0xe20>  // b.tcont
    27e4:	ldr	x10, [x2]
    27e8:	ldrb	w11, [x10, x8]
    27ec:	cmp	w11, #0x40
    27f0:	b.eq	283c <PyInit__codecs_iso2022@@Base+0xe28>  // b.none
    27f4:	sub	w12, w11, #0x41
    27f8:	and	w12, w12, #0xff
    27fc:	cmp	w12, #0x19
    2800:	b.ls	283c <PyInit__codecs_iso2022@@Base+0xe28>  // b.plast
    2804:	ldrb	w12, [x0]
    2808:	tbz	w12, #2, 27d0 <PyInit__codecs_iso2022@@Base+0xdbc>
    280c:	add	x12, x8, #0x1
    2810:	cmp	x12, x9
    2814:	b.ge	27d0 <PyInit__codecs_iso2022@@Base+0xdbc>  // b.tcont
    2818:	cmp	w11, #0x26
    281c:	b.ne	27d0 <PyInit__codecs_iso2022@@Base+0xdbc>  // b.any
    2820:	ldrb	w10, [x10, x12]
    2824:	add	x11, x8, #0x2
    2828:	cmp	w10, #0x40
    282c:	csel	x8, x11, x8, eq  // eq = none
    2830:	b	27d0 <PyInit__codecs_iso2022@@Base+0xdbc>
    2834:	mov	x0, #0xfffffffffffffffe    	// #-2
    2838:	ret
    283c:	add	x9, x8, #0x1
    2840:	cmp	x9, #0x6
    2844:	b.ls	2858 <PyInit__codecs_iso2022@@Base+0xe44>  // b.plast
    2848:	b	2998 <PyInit__codecs_iso2022@@Base+0xf84>
    284c:	mov	x9, xzr
    2850:	cmp	x9, #0x6
    2854:	b.hi	2998 <PyInit__codecs_iso2022@@Base+0xf84>  // b.pmore
    2858:	adrp	x8, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    285c:	add	x8, x8, #0x9fa
    2860:	adr	x10, 2874 <PyInit__codecs_iso2022@@Base+0xe60>
    2864:	ldrb	w11, [x8, x9]
    2868:	add	x10, x10, x11, lsl #2
    286c:	mov	w8, #0x1                   	// #1
    2870:	br	x10
    2874:	ldr	x10, [x2]
    2878:	ldrb	w8, [x10, #1]
    287c:	ldrb	w10, [x10, #2]
    2880:	cmp	w8, #0x29
    2884:	b.eq	28d0 <PyInit__codecs_iso2022@@Base+0xebc>  // b.none
    2888:	cmp	w8, #0x28
    288c:	b.eq	292c <PyInit__codecs_iso2022@@Base+0xf18>  // b.none
    2890:	cmp	w8, #0x24
    2894:	b.ne	2934 <PyInit__codecs_iso2022@@Base+0xf20>  // b.any
    2898:	mov	x11, xzr
    289c:	orr	w10, w10, #0xffffff80
    28a0:	b	294c <PyInit__codecs_iso2022@@Base+0xf38>
    28a4:	ldr	x8, [x2]
    28a8:	ldrb	w10, [x8, #1]
    28ac:	cmp	w10, #0x24
    28b0:	b.ne	2920 <PyInit__codecs_iso2022@@Base+0xf0c>  // b.any
    28b4:	ldrb	w11, [x8, #2]
    28b8:	ldrb	w8, [x8, #3]
    28bc:	cmp	w11, #0x28
    28c0:	orr	w10, w8, #0xffffff80
    28c4:	b.eq	292c <PyInit__codecs_iso2022@@Base+0xf18>  // b.none
    28c8:	cmp	w11, #0x29
    28cc:	b.ne	2920 <PyInit__codecs_iso2022@@Base+0xf0c>  // b.any
    28d0:	mov	w11, #0x1                   	// #1
    28d4:	b	294c <PyInit__codecs_iso2022@@Base+0xf38>
    28d8:	ldrb	w8, [x0]
    28dc:	tbz	w8, #2, 2914 <PyInit__codecs_iso2022@@Base+0xf00>
    28e0:	ldr	x8, [x2]
    28e4:	ldrb	w10, [x8, #3]
    28e8:	cmp	w10, #0x1b
    28ec:	b.ne	2914 <PyInit__codecs_iso2022@@Base+0xf00>  // b.any
    28f0:	ldrb	w10, [x8, #4]
    28f4:	cmp	w10, #0x24
    28f8:	b.ne	2914 <PyInit__codecs_iso2022@@Base+0xf00>  // b.any
    28fc:	ldrb	w8, [x8, #5]
    2900:	cmp	w8, #0x42
    2904:	b.ne	2914 <PyInit__codecs_iso2022@@Base+0xf00>  // b.any
    2908:	mov	x11, xzr
    290c:	mov	w10, #0xc2                  	// #194
    2910:	b	294c <PyInit__codecs_iso2022@@Base+0xf38>
    2914:	mov	w8, #0x6                   	// #6
    2918:	mov	x0, x8
    291c:	ret
    2920:	mov	w8, #0x4                   	// #4
    2924:	mov	x0, x8
    2928:	ret
    292c:	mov	x11, xzr
    2930:	b	294c <PyInit__codecs_iso2022@@Base+0xf38>
    2934:	cmp	w8, #0x2e
    2938:	mov	w8, #0x3                   	// #3
    293c:	b.ne	2990 <PyInit__codecs_iso2022@@Base+0xf7c>  // b.any
    2940:	ldr	w11, [x0]
    2944:	tbz	w11, #1, 2990 <PyInit__codecs_iso2022@@Base+0xf7c>
    2948:	mov	w11, #0x2                   	// #2
    294c:	and	w8, w10, #0xff
    2950:	cmp	w8, #0x42
    2954:	b.eq	2970 <PyInit__codecs_iso2022@@Base+0xf5c>  // b.none
    2958:	ldr	x8, [x0, #8]
    295c:	ldrb	w12, [x8], #32
    2960:	cbz	w12, 296c <PyInit__codecs_iso2022@@Base+0xf58>
    2964:	cmp	w12, w10, uxtb
    2968:	b.ne	295c <PyInit__codecs_iso2022@@Base+0xf48>  // b.any
    296c:	cbz	w12, 2998 <PyInit__codecs_iso2022@@Base+0xf84>
    2970:	strb	w10, [x1, x11]
    2974:	ldr	x10, [x3]
    2978:	mov	x8, xzr
    297c:	sub	x10, x10, x9
    2980:	str	x10, [x3]
    2984:	ldr	x10, [x2]
    2988:	add	x9, x10, x9
    298c:	str	x9, [x2]
    2990:	mov	x0, x8
    2994:	ret
    2998:	mov	x0, x9
    299c:	ret
    29a0:	stp	x29, x30, [sp, #-32]!
    29a4:	stp	x20, x19, [sp, #16]
    29a8:	mov	x29, sp
    29ac:	ldrb	w8, [x0, #2]
    29b0:	mov	x19, x2
    29b4:	mov	x20, x1
    29b8:	cmp	w8, #0x46
    29bc:	b.eq	29e8 <PyInit__codecs_iso2022@@Base+0xfd4>  // b.none
    29c0:	cmp	w8, #0x42
    29c4:	b.eq	2a34 <PyInit__codecs_iso2022@@Base+0x1020>  // b.none
    29c8:	cmp	w8, #0x41
    29cc:	b.ne	2a48 <PyInit__codecs_iso2022@@Base+0x1034>  // b.any
    29d0:	ldr	x8, [x20]
    29d4:	ldrsb	w8, [x8, #2]
    29d8:	tbnz	w8, #31, 2a40 <PyInit__codecs_iso2022@@Base+0x102c>
    29dc:	and	w8, w8, #0xff
    29e0:	add	w1, w8, #0x80
    29e4:	b	2ab4 <PyInit__codecs_iso2022@@Base+0x10a0>
    29e8:	ldr	x8, [x20]
    29ec:	ldrb	w8, [x8, #2]
    29f0:	eor	x1, x8, #0x80
    29f4:	cmp	w1, #0x9f
    29f8:	b.ls	2a20 <PyInit__codecs_iso2022@@Base+0x100c>  // b.plast
    29fc:	cmp	w1, #0xbf
    2a00:	b.hi	2a50 <PyInit__codecs_iso2022@@Base+0x103c>  // b.pmore
    2a04:	sub	w9, w1, #0xa0
    2a08:	mov	w10, #0x1                   	// #1
    2a0c:	lsl	x9, x10, x9
    2a10:	mov	w10, #0x3bc9                	// #15305
    2a14:	movk	w10, #0x288f, lsl #16
    2a18:	tst	x9, x10
    2a1c:	b.eq	2a50 <PyInit__codecs_iso2022@@Base+0x103c>  // b.none
    2a20:	mov	x0, x3
    2a24:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2a28:	tbz	w0, #31, 2ac0 <PyInit__codecs_iso2022@@Base+0x10ac>
    2a2c:	mov	x0, #0xfffffffffffffffc    	// #-4
    2a30:	b	2adc <PyInit__codecs_iso2022@@Base+0x10c8>
    2a34:	ldr	x8, [x20]
    2a38:	ldrb	w1, [x8, #2]
    2a3c:	tbz	w1, #7, 2ab4 <PyInit__codecs_iso2022@@Base+0x10a0>
    2a40:	mov	w0, #0x3                   	// #3
    2a44:	b	2adc <PyInit__codecs_iso2022@@Base+0x10c8>
    2a48:	mov	x0, #0xfffffffffffffffd    	// #-3
    2a4c:	b	2adc <PyInit__codecs_iso2022@@Base+0x10c8>
    2a50:	sub	w8, w8, #0x34
    2a54:	cmp	w8, #0x4a
    2a58:	b.ls	2a7c <PyInit__codecs_iso2022@@Base+0x1068>  // b.plast
    2a5c:	cmp	w1, #0xaf
    2a60:	b.eq	2aa8 <PyInit__codecs_iso2022@@Base+0x1094>  // b.none
    2a64:	cmp	w1, #0xa2
    2a68:	b.eq	2ab0 <PyInit__codecs_iso2022@@Base+0x109c>  // b.none
    2a6c:	cmp	w1, #0xa1
    2a70:	b.ne	2a40 <PyInit__codecs_iso2022@@Base+0x102c>  // b.any
    2a74:	mov	w1, #0x2018                	// #8216
    2a78:	b	2ab4 <PyInit__codecs_iso2022@@Base+0x10a0>
    2a7c:	cmp	w1, #0xd3
    2a80:	b.hi	2aa0 <PyInit__codecs_iso2022@@Base+0x108c>  // b.pmore
    2a84:	sub	w8, w1, #0xb4
    2a88:	mov	w9, #0x1                   	// #1
    2a8c:	lsl	x8, x9, x8
    2a90:	mov	w9, #0xfd77                	// #64887
    2a94:	movk	w9, #0xbfff, lsl #16
    2a98:	tst	x8, x9
    2a9c:	b.eq	2a5c <PyInit__codecs_iso2022@@Base+0x1048>  // b.none
    2aa0:	add	w1, w1, #0x2d0
    2aa4:	b	2ab4 <PyInit__codecs_iso2022@@Base+0x10a0>
    2aa8:	mov	w1, #0x2015                	// #8213
    2aac:	b	2ab4 <PyInit__codecs_iso2022@@Base+0x10a0>
    2ab0:	mov	w1, #0x2019                	// #8217
    2ab4:	mov	x0, x3
    2ab8:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2abc:	tbnz	w0, #31, 2a2c <PyInit__codecs_iso2022@@Base+0x1018>
    2ac0:	ldr	x8, [x20]
    2ac4:	mov	x0, xzr
    2ac8:	add	x8, x8, #0x3
    2acc:	str	x8, [x20]
    2ad0:	ldr	x8, [x19]
    2ad4:	sub	x8, x8, #0x3
    2ad8:	str	x8, [x19]
    2adc:	ldp	x20, x19, [sp, #16]
    2ae0:	ldp	x29, x30, [sp], #32
    2ae4:	ret
    2ae8:	stp	x29, x30, [sp, #-32]!
    2aec:	str	x19, [sp, #16]
    2af0:	mov	x29, sp
    2af4:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2af8:	ldrb	w8, [x19, #344]
    2afc:	tbz	w8, #0, 2b10 <PyInit__codecs_iso2022@@Base+0x10fc>
    2b00:	mov	w0, wzr
    2b04:	mov	w8, #0x1                   	// #1
    2b08:	strb	w8, [x19, #344]
    2b0c:	b	2b5c <PyInit__codecs_iso2022@@Base+0x1148>
    2b10:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b14:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b18:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b1c:	add	x0, x0, #0xb29
    2b20:	add	x1, x1, #0xb34
    2b24:	add	x2, x2, #0x160
    2b28:	mov	x3, xzr
    2b2c:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2b30:	cbnz	w0, 2b58 <PyInit__codecs_iso2022@@Base+0x1144>
    2b34:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b38:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b3c:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b40:	add	x0, x0, #0xb29
    2b44:	add	x1, x1, #0xb45
    2b48:	add	x3, x3, #0x168
    2b4c:	mov	x2, xzr
    2b50:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2b54:	cbz	w0, 2b00 <PyInit__codecs_iso2022@@Base+0x10ec>
    2b58:	mov	w0, #0xffffffff            	// #-1
    2b5c:	ldr	x19, [sp, #16]
    2b60:	ldp	x29, x30, [sp], #32
    2b64:	ret
    2b68:	ldrb	w9, [x0]
    2b6c:	cmp	x9, #0x21
    2b70:	b.ne	2b88 <PyInit__codecs_iso2022@@Base+0x1174>  // b.any
    2b74:	ldrb	w8, [x0, #1]
    2b78:	cmp	w8, #0x40
    2b7c:	b.ne	2b88 <PyInit__codecs_iso2022@@Base+0x1174>  // b.any
    2b80:	mov	w0, #0xff3c                	// #65340
    2b84:	ret
    2b88:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b8c:	ldr	x11, [x8, #360]
    2b90:	lsl	x8, x9, #4
    2b94:	ldr	x8, [x11, x8]
    2b98:	cbz	x8, 2bbc <PyInit__codecs_iso2022@@Base+0x11a8>
    2b9c:	add	x11, x11, x9, lsl #4
    2ba0:	ldrb	w10, [x0, #1]
    2ba4:	ldrb	w9, [x11, #8]
    2ba8:	cmp	w10, w9
    2bac:	b.cc	2bbc <PyInit__codecs_iso2022@@Base+0x11a8>  // b.lo, b.ul, b.last
    2bb0:	ldrb	w11, [x11, #9]
    2bb4:	cmp	w10, w11
    2bb8:	b.ls	2bc4 <PyInit__codecs_iso2022@@Base+0x11b0>  // b.plast
    2bbc:	mov	w0, #0xffff                	// #65535
    2bc0:	ret
    2bc4:	sub	x9, x10, x9
    2bc8:	ldrh	w8, [x8, x9, lsl #1]
    2bcc:	mov	w9, #0xfffe                	// #65534
    2bd0:	cmp	w8, w9
    2bd4:	csinv	w8, w8, wzr, ne  // ne = any
    2bd8:	and	w0, w8, #0xffff
    2bdc:	ret
    2be0:	ldr	w8, [x0]
    2be4:	ubfx	x9, x8, #16, #16
    2be8:	cbnz	w9, 2c40 <PyInit__codecs_iso2022@@Base+0x122c>
    2bec:	mov	w9, #0xff3c                	// #65340
    2bf0:	cmp	w8, w9
    2bf4:	b.ne	2c00 <PyInit__codecs_iso2022@@Base+0x11ec>  // b.any
    2bf8:	mov	w0, #0x2140                	// #8512
    2bfc:	ret
    2c00:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c04:	ldr	x10, [x9, #352]
    2c08:	lsr	x11, x8, #8
    2c0c:	lsl	x9, x11, #4
    2c10:	ldr	x9, [x10, x9]
    2c14:	cbz	x9, 2c40 <PyInit__codecs_iso2022@@Base+0x122c>
    2c18:	add	x10, x10, x11, lsl #4
    2c1c:	ldrb	w12, [x10, #8]
    2c20:	and	w11, w8, #0xff
    2c24:	subs	w8, w11, w12
    2c28:	b.cc	2c40 <PyInit__codecs_iso2022@@Base+0x122c>  // b.lo, b.ul, b.last
    2c2c:	ldrb	w10, [x10, #9]
    2c30:	cmp	w11, w10
    2c34:	b.hi	2c40 <PyInit__codecs_iso2022@@Base+0x122c>  // b.pmore
    2c38:	ldrsh	w0, [x9, w8, uxtw #1]
    2c3c:	tbz	w0, #31, 2c44 <PyInit__codecs_iso2022@@Base+0x1230>
    2c40:	mov	w0, #0xffff                	// #65535
    2c44:	ret
    2c48:	ldrb	w0, [x0]
    2c4c:	cmp	w0, #0x5c
    2c50:	b.cc	2c7c <PyInit__codecs_iso2022@@Base+0x1268>  // b.lo, b.ul, b.last
    2c54:	b.ne	2c60 <PyInit__codecs_iso2022@@Base+0x124c>  // b.any
    2c58:	mov	w0, #0xa5                  	// #165
    2c5c:	ret
    2c60:	cmp	w0, #0x7e
    2c64:	b.cc	2c7c <PyInit__codecs_iso2022@@Base+0x1268>  // b.lo, b.ul, b.last
    2c68:	cmp	w0, #0x7e
    2c6c:	b.eq	2c80 <PyInit__codecs_iso2022@@Base+0x126c>  // b.none
    2c70:	cmp	w0, #0x7f
    2c74:	b.eq	2c7c <PyInit__codecs_iso2022@@Base+0x1268>  // b.none
    2c78:	mov	w0, #0xffff                	// #65535
    2c7c:	ret
    2c80:	mov	w0, #0x203e                	// #8254
    2c84:	ret
    2c88:	ldr	w8, [x0]
    2c8c:	cmp	w8, #0x7f
    2c90:	b.ls	2cb0 <PyInit__codecs_iso2022@@Base+0x129c>  // b.plast
    2c94:	cmp	w8, #0xa5
    2c98:	b.eq	2cc8 <PyInit__codecs_iso2022@@Base+0x12b4>  // b.none
    2c9c:	mov	w9, #0x203e                	// #8254
    2ca0:	cmp	w8, w9
    2ca4:	b.ne	2cd0 <PyInit__codecs_iso2022@@Base+0x12bc>  // b.any
    2ca8:	mov	w0, #0x7e                  	// #126
    2cac:	b	2cc4 <PyInit__codecs_iso2022@@Base+0x12b0>
    2cb0:	cmp	w8, #0x5c
    2cb4:	mov	w0, #0xffff                	// #65535
    2cb8:	b.eq	2cc4 <PyInit__codecs_iso2022@@Base+0x12b0>  // b.none
    2cbc:	cmp	w8, #0x7e
    2cc0:	b.ne	2cd8 <PyInit__codecs_iso2022@@Base+0x12c4>  // b.any
    2cc4:	ret
    2cc8:	mov	w0, #0x5c                  	// #92
    2ccc:	ret
    2cd0:	mov	w0, #0xffff                	// #65535
    2cd4:	ret
    2cd8:	mov	w0, w8
    2cdc:	ret
    2ce0:	stp	x29, x30, [sp, #-32]!
    2ce4:	str	x19, [sp, #16]
    2ce8:	mov	x29, sp
    2cec:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2cf0:	ldrb	w8, [x19, #368]
    2cf4:	tbz	w8, #0, 2d08 <PyInit__codecs_iso2022@@Base+0x12f4>
    2cf8:	mov	w0, wzr
    2cfc:	mov	w8, #0x1                   	// #1
    2d00:	strb	w8, [x19, #368]
    2d04:	b	2d54 <PyInit__codecs_iso2022@@Base+0x1340>
    2d08:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d0c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d10:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d14:	add	x0, x0, #0xb29
    2d18:	add	x1, x1, #0xb34
    2d1c:	add	x2, x2, #0x160
    2d20:	mov	x3, xzr
    2d24:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2d28:	cbnz	w0, 2d50 <PyInit__codecs_iso2022@@Base+0x133c>
    2d2c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d30:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d34:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d38:	add	x0, x0, #0xb29
    2d3c:	add	x1, x1, #0xb54
    2d40:	add	x3, x3, #0x178
    2d44:	mov	x2, xzr
    2d48:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2d4c:	cbz	w0, 2cf8 <PyInit__codecs_iso2022@@Base+0x12e4>
    2d50:	mov	w0, #0xffffffff            	// #-1
    2d54:	ldr	x19, [sp, #16]
    2d58:	ldp	x29, x30, [sp], #32
    2d5c:	ret
    2d60:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d64:	ldrb	w10, [x0]
    2d68:	ldr	x11, [x8, #376]
    2d6c:	lsl	x8, x10, #4
    2d70:	ldr	x8, [x11, x8]
    2d74:	cbz	x8, 2d98 <PyInit__codecs_iso2022@@Base+0x1384>
    2d78:	add	x11, x11, x10, lsl #4
    2d7c:	ldrb	w9, [x0, #1]
    2d80:	ldrb	w10, [x11, #8]
    2d84:	cmp	w9, w10
    2d88:	b.cc	2d98 <PyInit__codecs_iso2022@@Base+0x1384>  // b.lo, b.ul, b.last
    2d8c:	ldrb	w11, [x11, #9]
    2d90:	cmp	w9, w11
    2d94:	b.ls	2da0 <PyInit__codecs_iso2022@@Base+0x138c>  // b.plast
    2d98:	mov	w0, #0xffff                	// #65535
    2d9c:	ret
    2da0:	sub	x9, x9, x10
    2da4:	ldrh	w8, [x8, x9, lsl #1]
    2da8:	mov	w9, #0xfffe                	// #65534
    2dac:	cmp	w8, w9
    2db0:	csinv	w8, w8, wzr, ne  // ne = any
    2db4:	and	w0, w8, #0xffff
    2db8:	ret
    2dbc:	ldr	w8, [x0]
    2dc0:	ubfx	x9, x8, #16, #16
    2dc4:	cbnz	w9, 2e00 <PyInit__codecs_iso2022@@Base+0x13ec>
    2dc8:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2dcc:	ldr	x10, [x9, #352]
    2dd0:	lsr	x11, x8, #8
    2dd4:	lsl	x9, x11, #4
    2dd8:	ldr	x9, [x10, x9]
    2ddc:	cbz	x9, 2e00 <PyInit__codecs_iso2022@@Base+0x13ec>
    2de0:	add	x10, x10, x11, lsl #4
    2de4:	ldrb	w12, [x10, #8]
    2de8:	and	w11, w8, #0xff
    2dec:	subs	w8, w11, w12
    2df0:	b.cc	2e00 <PyInit__codecs_iso2022@@Base+0x13ec>  // b.lo, b.ul, b.last
    2df4:	ldrb	w10, [x10, #9]
    2df8:	cmp	w11, w10
    2dfc:	b.ls	2e08 <PyInit__codecs_iso2022@@Base+0x13f4>  // b.plast
    2e00:	mov	w0, #0xffff                	// #65535
    2e04:	ret
    2e08:	ldrsh	w8, [x9, w8, uxtw #1]
    2e0c:	and	w9, w8, #0x7fff
    2e10:	cmn	w8, #0x1
    2e14:	csinv	w0, w9, wzr, lt  // lt = tstop
    2e18:	ret
    2e1c:	stp	x29, x30, [sp, #-32]!
    2e20:	str	x19, [sp, #16]
    2e24:	mov	x29, sp
    2e28:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e2c:	ldrb	w8, [x19, #384]
    2e30:	tbz	w8, #0, 2e44 <PyInit__codecs_iso2022@@Base+0x1430>
    2e34:	mov	w0, wzr
    2e38:	mov	w8, #0x1                   	// #1
    2e3c:	strb	w8, [x19, #384]
    2e40:	b	2e90 <PyInit__codecs_iso2022@@Base+0x147c>
    2e44:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e48:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e4c:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e50:	add	x0, x0, #0xb63
    2e54:	add	x1, x1, #0xb6e
    2e58:	add	x2, x2, #0x188
    2e5c:	mov	x3, xzr
    2e60:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2e64:	cbnz	w0, 2e8c <PyInit__codecs_iso2022@@Base+0x1478>
    2e68:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e6c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e70:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e74:	add	x0, x0, #0xb63
    2e78:	add	x1, x1, #0xb7d
    2e7c:	add	x3, x3, #0x190
    2e80:	mov	x2, xzr
    2e84:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2e88:	cbz	w0, 2e34 <PyInit__codecs_iso2022@@Base+0x1420>
    2e8c:	mov	w0, #0xffffffff            	// #-1
    2e90:	ldr	x19, [sp, #16]
    2e94:	ldp	x29, x30, [sp], #32
    2e98:	ret
    2e9c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ea0:	ldrb	w10, [x0]
    2ea4:	ldr	x11, [x8, #400]
    2ea8:	lsl	x8, x10, #4
    2eac:	ldr	x8, [x11, x8]
    2eb0:	cbz	x8, 2ed4 <PyInit__codecs_iso2022@@Base+0x14c0>
    2eb4:	add	x11, x11, x10, lsl #4
    2eb8:	ldrb	w9, [x0, #1]
    2ebc:	ldrb	w10, [x11, #8]
    2ec0:	cmp	w9, w10
    2ec4:	b.cc	2ed4 <PyInit__codecs_iso2022@@Base+0x14c0>  // b.lo, b.ul, b.last
    2ec8:	ldrb	w11, [x11, #9]
    2ecc:	cmp	w9, w11
    2ed0:	b.ls	2edc <PyInit__codecs_iso2022@@Base+0x14c8>  // b.plast
    2ed4:	mov	w0, #0xffff                	// #65535
    2ed8:	ret
    2edc:	sub	x9, x9, x10
    2ee0:	ldrh	w8, [x8, x9, lsl #1]
    2ee4:	mov	w9, #0xfffe                	// #65534
    2ee8:	cmp	w8, w9
    2eec:	csinv	w8, w8, wzr, ne  // ne = any
    2ef0:	and	w0, w8, #0xffff
    2ef4:	ret
    2ef8:	ldr	w8, [x0]
    2efc:	ubfx	x9, x8, #16, #16
    2f00:	cbnz	w9, 2f44 <PyInit__codecs_iso2022@@Base+0x1530>
    2f04:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f08:	ldr	x10, [x9, #392]
    2f0c:	lsr	x11, x8, #8
    2f10:	lsl	x9, x11, #4
    2f14:	ldr	x9, [x10, x9]
    2f18:	cbz	x9, 2f44 <PyInit__codecs_iso2022@@Base+0x1530>
    2f1c:	add	x10, x10, x11, lsl #4
    2f20:	ldrb	w12, [x10, #8]
    2f24:	and	w11, w8, #0xff
    2f28:	subs	w8, w11, w12
    2f2c:	b.cc	2f44 <PyInit__codecs_iso2022@@Base+0x1530>  // b.lo, b.ul, b.last
    2f30:	ldrb	w10, [x10, #9]
    2f34:	cmp	w11, w10
    2f38:	b.hi	2f44 <PyInit__codecs_iso2022@@Base+0x1530>  // b.pmore
    2f3c:	ldrsh	w0, [x9, w8, uxtw #1]
    2f40:	tbz	w0, #31, 2f48 <PyInit__codecs_iso2022@@Base+0x1534>
    2f44:	mov	w0, #0xffff                	// #65535
    2f48:	ret
    2f4c:	mov	w0, #0xffff                	// #65535
    2f50:	ret
    2f54:	mov	w0, #0xffff                	// #65535
    2f58:	ret
    2f5c:	stp	x29, x30, [sp, #-32]!
    2f60:	str	x19, [sp, #16]
    2f64:	mov	x29, sp
    2f68:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f6c:	ldrb	w8, [x19, #408]
    2f70:	tbz	w8, #0, 2f84 <PyInit__codecs_iso2022@@Base+0x1570>
    2f74:	mov	w0, wzr
    2f78:	mov	w8, #0x1                   	// #1
    2f7c:	strb	w8, [x19, #408]
    2f80:	b	3090 <PyInit__codecs_iso2022@@Base+0x167c>
    2f84:	bl	2ae8 <PyInit__codecs_iso2022@@Base+0x10d4>
    2f88:	cbnz	w0, 308c <PyInit__codecs_iso2022@@Base+0x1678>
    2f8c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f90:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f94:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f98:	add	x0, x0, #0xb29
    2f9c:	add	x1, x1, #0xb8a
    2fa0:	add	x2, x2, #0x1a0
    2fa4:	mov	x3, xzr
    2fa8:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2fac:	cbnz	w0, 308c <PyInit__codecs_iso2022@@Base+0x1678>
    2fb0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fb4:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fb8:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fbc:	add	x0, x0, #0xb29
    2fc0:	add	x1, x1, #0xb9d
    2fc4:	add	x3, x3, #0x1a8
    2fc8:	mov	x2, xzr
    2fcc:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2fd0:	cbnz	w0, 308c <PyInit__codecs_iso2022@@Base+0x1678>
    2fd4:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fd8:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fdc:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fe0:	add	x0, x0, #0xb29
    2fe4:	add	x1, x1, #0xbb2
    2fe8:	add	x3, x3, #0x1b0
    2fec:	mov	x2, xzr
    2ff0:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    2ff4:	cbnz	w0, 308c <PyInit__codecs_iso2022@@Base+0x1678>
    2ff8:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2ffc:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3000:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3004:	add	x0, x0, #0xb29
    3008:	add	x1, x1, #0xbc7
    300c:	add	x2, x2, #0x1b8
    3010:	mov	x3, xzr
    3014:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    3018:	cbnz	w0, 308c <PyInit__codecs_iso2022@@Base+0x1678>
    301c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3020:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3024:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3028:	add	x0, x0, #0xb29
    302c:	add	x1, x1, #0xbda
    3030:	add	x3, x3, #0x1c0
    3034:	mov	x2, xzr
    3038:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    303c:	cbnz	w0, 308c <PyInit__codecs_iso2022@@Base+0x1678>
    3040:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3044:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3048:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    304c:	add	x0, x0, #0xb29
    3050:	add	x1, x1, #0xbef
    3054:	add	x3, x3, #0x1c8
    3058:	mov	x2, xzr
    305c:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    3060:	cbnz	w0, 308c <PyInit__codecs_iso2022@@Base+0x1678>
    3064:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3068:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    306c:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3070:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3074:	add	x0, x0, #0xb29
    3078:	add	x1, x1, #0xc04
    307c:	add	x2, x2, #0x1d0
    3080:	add	x3, x3, #0x1d8
    3084:	bl	2704 <PyInit__codecs_iso2022@@Base+0xcf0>
    3088:	cbz	w0, 2f74 <PyInit__codecs_iso2022@@Base+0x1560>
    308c:	mov	w0, #0xffffffff            	// #-1
    3090:	ldr	x19, [sp, #16]
    3094:	ldp	x29, x30, [sp], #32
    3098:	ret
    309c:	ldrb	w9, [x0]
    30a0:	cmp	x9, #0x21
    30a4:	b.ne	30bc <PyInit__codecs_iso2022@@Base+0x16a8>  // b.any
    30a8:	ldrb	w8, [x0, #1]
    30ac:	cmp	w8, #0x40
    30b0:	b.ne	30bc <PyInit__codecs_iso2022@@Base+0x16a8>  // b.any
    30b4:	mov	w0, #0xff3c                	// #65340
    30b8:	ret
    30bc:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    30c0:	ldr	x12, [x8, #360]
    30c4:	lsl	x10, x9, #4
    30c8:	ldr	x8, [x12, x10]
    30cc:	cbz	x8, 3104 <PyInit__codecs_iso2022@@Base+0x16f0>
    30d0:	add	x13, x12, x9, lsl #4
    30d4:	ldrb	w11, [x0, #1]
    30d8:	ldrb	w12, [x13, #8]
    30dc:	cmp	w11, w12
    30e0:	b.cc	3104 <PyInit__codecs_iso2022@@Base+0x16f0>  // b.lo, b.ul, b.last
    30e4:	ldrb	w13, [x13, #9]
    30e8:	cmp	w11, w13
    30ec:	b.hi	3104 <PyInit__codecs_iso2022@@Base+0x16f0>  // b.pmore
    30f0:	sub	x11, x11, x12
    30f4:	ldrh	w8, [x8, x11, lsl #1]
    30f8:	mov	w11, #0xfffe                	// #65534
    30fc:	cmp	w8, w11
    3100:	b.ne	31d4 <PyInit__codecs_iso2022@@Base+0x17c0>  // b.any
    3104:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3108:	ldr	x12, [x8, #424]
    310c:	ldr	x8, [x12, x10]
    3110:	cbz	x8, 3148 <PyInit__codecs_iso2022@@Base+0x1734>
    3114:	add	x13, x12, x9, lsl #4
    3118:	ldrb	w11, [x0, #1]
    311c:	ldrb	w12, [x13, #8]
    3120:	cmp	w11, w12
    3124:	b.cc	3148 <PyInit__codecs_iso2022@@Base+0x1734>  // b.lo, b.ul, b.last
    3128:	ldrb	w13, [x13, #9]
    312c:	cmp	w11, w13
    3130:	b.hi	3148 <PyInit__codecs_iso2022@@Base+0x1734>  // b.pmore
    3134:	sub	x11, x11, x12
    3138:	ldrh	w8, [x8, x11, lsl #1]
    313c:	mov	w11, #0xfffe                	// #65534
    3140:	cmp	w8, w11
    3144:	b.ne	31d4 <PyInit__codecs_iso2022@@Base+0x17c0>  // b.any
    3148:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    314c:	ldr	x12, [x8, #448]
    3150:	ldr	x8, [x12, x10]
    3154:	cbz	x8, 318c <PyInit__codecs_iso2022@@Base+0x1778>
    3158:	add	x13, x12, x9, lsl #4
    315c:	ldrb	w11, [x0, #1]
    3160:	ldrb	w12, [x13, #8]
    3164:	cmp	w11, w12
    3168:	b.cc	318c <PyInit__codecs_iso2022@@Base+0x1778>  // b.lo, b.ul, b.last
    316c:	ldrb	w13, [x13, #9]
    3170:	cmp	w11, w13
    3174:	b.hi	318c <PyInit__codecs_iso2022@@Base+0x1778>  // b.pmore
    3178:	sub	x11, x11, x12
    317c:	ldrh	w8, [x8, x11, lsl #1]
    3180:	mov	w11, #0xfffe                	// #65534
    3184:	cmp	w8, w11
    3188:	b.ne	31dc <PyInit__codecs_iso2022@@Base+0x17c8>  // b.any
    318c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3190:	ldr	x11, [x8, #472]
    3194:	ldr	x8, [x11, x10]
    3198:	cbz	x8, 31d0 <PyInit__codecs_iso2022@@Base+0x17bc>
    319c:	add	x11, x11, x9, lsl #4
    31a0:	ldrb	w10, [x0, #1]
    31a4:	ldrb	w9, [x11, #8]
    31a8:	cmp	w10, w9
    31ac:	b.cc	31d0 <PyInit__codecs_iso2022@@Base+0x17bc>  // b.lo, b.ul, b.last
    31b0:	ldrb	w11, [x11, #9]
    31b4:	cmp	w10, w11
    31b8:	b.hi	31d0 <PyInit__codecs_iso2022@@Base+0x17bc>  // b.pmore
    31bc:	sub	x9, x10, x9
    31c0:	ldr	w8, [x8, x9, lsl #2]
    31c4:	mov	w9, #0xfffe                	// #65534
    31c8:	cmp	w8, w9
    31cc:	b.ne	31d4 <PyInit__codecs_iso2022@@Base+0x17c0>  // b.any
    31d0:	mov	w8, #0xffff                	// #65535
    31d4:	mov	w0, w8
    31d8:	ret
    31dc:	orr	w8, w8, #0x20000
    31e0:	mov	w0, w8
    31e4:	ret
    31e8:	stp	x29, x30, [sp, #-32]!
    31ec:	stp	x20, x19, [sp, #16]
    31f0:	mov	x29, sp
    31f4:	ldr	x20, [x1]
    31f8:	mov	x2, xzr
    31fc:	mov	x19, x1
    3200:	bl	3350 <PyInit__codecs_iso2022@@Base+0x193c>
    3204:	cmp	x20, #0x2
    3208:	b.eq	3228 <PyInit__codecs_iso2022@@Base+0x1814>  // b.none
    320c:	cmp	x20, #0x1
    3210:	b.ne	3238 <PyInit__codecs_iso2022@@Base+0x1824>  // b.any
    3214:	mov	w8, #0xfffe                	// #65534
    3218:	cmp	w8, w0, uxth
    321c:	mov	w8, #0xfffffffe            	// #-2
    3220:	cinc	w0, w8, ne  // ne = any
    3224:	b	323c <PyInit__codecs_iso2022@@Base+0x1828>
    3228:	ldr	x8, [x19]
    322c:	cmp	x8, #0x2
    3230:	csinv	w0, w0, wzr, eq  // eq = none
    3234:	b	323c <PyInit__codecs_iso2022@@Base+0x1828>
    3238:	mov	w0, #0xffff                	// #65535
    323c:	ldp	x20, x19, [sp, #16]
    3240:	ldp	x29, x30, [sp], #32
    3244:	ret
    3248:	stp	x29, x30, [sp, #-16]!
    324c:	mov	x29, sp
    3250:	mov	x2, xzr
    3254:	bl	3350 <PyInit__codecs_iso2022@@Base+0x193c>
    3258:	sxth	w9, w0
    325c:	and	w8, w0, #0xffff
    3260:	cmn	w9, #0x1
    3264:	mov	w9, #0xfffd                	// #65533
    3268:	ccmp	w8, w9, #0x2, le
    326c:	csinv	w0, w0, wzr, hi  // hi = pmore
    3270:	ldp	x29, x30, [sp], #16
    3274:	ret
    3278:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    327c:	ldrb	w9, [x0]
    3280:	ldr	x12, [x8, #432]
    3284:	lsl	x10, x9, #4
    3288:	ldr	x8, [x12, x10]
    328c:	cbz	x8, 32c4 <PyInit__codecs_iso2022@@Base+0x18b0>
    3290:	add	x13, x12, x9, lsl #4
    3294:	ldrb	w11, [x0, #1]
    3298:	ldrb	w12, [x13, #8]
    329c:	cmp	w11, w12
    32a0:	b.cc	32c4 <PyInit__codecs_iso2022@@Base+0x18b0>  // b.lo, b.ul, b.last
    32a4:	ldrb	w13, [x13, #9]
    32a8:	cmp	w11, w13
    32ac:	b.hi	32c4 <PyInit__codecs_iso2022@@Base+0x18b0>  // b.pmore
    32b0:	sub	x11, x11, x12
    32b4:	ldrh	w8, [x8, x11, lsl #1]
    32b8:	mov	w11, #0xfffe                	// #65534
    32bc:	cmp	w8, w11
    32c0:	b.ne	3314 <PyInit__codecs_iso2022@@Base+0x1900>  // b.any
    32c4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    32c8:	ldr	x11, [x8, #456]
    32cc:	ldr	x8, [x11, x10]
    32d0:	cbz	x8, 3308 <PyInit__codecs_iso2022@@Base+0x18f4>
    32d4:	add	x11, x11, x9, lsl #4
    32d8:	ldrb	w10, [x0, #1]
    32dc:	ldrb	w9, [x11, #8]
    32e0:	cmp	w10, w9
    32e4:	b.cc	3308 <PyInit__codecs_iso2022@@Base+0x18f4>  // b.lo, b.ul, b.last
    32e8:	ldrb	w11, [x11, #9]
    32ec:	cmp	w10, w11
    32f0:	b.hi	3308 <PyInit__codecs_iso2022@@Base+0x18f4>  // b.pmore
    32f4:	sub	x9, x10, x9
    32f8:	ldrh	w8, [x8, x9, lsl #1]
    32fc:	mov	w9, #0xfffe                	// #65534
    3300:	cmp	w8, w9
    3304:	b.ne	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.any
    3308:	mov	w0, #0xffff                	// #65535
    330c:	ret
    3310:	orr	w8, w8, #0x20000
    3314:	mov	w0, w8
    3318:	ret
    331c:	stp	x29, x30, [sp, #-16]!
    3320:	mov	x29, sp
    3324:	mov	x2, xzr
    3328:	bl	3350 <PyInit__codecs_iso2022@@Base+0x193c>
    332c:	mov	w8, #0xfffd                	// #65533
    3330:	cmp	w8, w0, uxth
    3334:	b.cc	3348 <PyInit__codecs_iso2022@@Base+0x1934>  // b.lo, b.ul, b.last
    3338:	sxth	w8, w0
    333c:	and	w9, w0, #0x7fff
    3340:	cmp	w8, #0x0
    3344:	csinv	w0, w9, wzr, lt  // lt = tstop
    3348:	ldp	x29, x30, [sp], #16
    334c:	ret
    3350:	stp	x29, x30, [sp, #-32]!
    3354:	stp	x20, x19, [sp, #16]
    3358:	mov	x29, sp
    335c:	ldr	x8, [x1]
    3360:	mov	x20, x1
    3364:	mov	x19, x0
    3368:	cmn	x8, #0x1
    336c:	b.eq	3418 <PyInit__codecs_iso2022@@Base+0x1a04>  // b.none
    3370:	cmp	x8, #0x2
    3374:	b.eq	33fc <PyInit__codecs_iso2022@@Base+0x19e8>  // b.none
    3378:	cmp	x8, #0x1
    337c:	b.ne	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.any
    3380:	ldr	w8, [x19]
    3384:	cmp	w8, #0x10, lsl #12
    3388:	b.cc	3444 <PyInit__codecs_iso2022@@Base+0x1a30>  // b.lo, b.ul, b.last
    338c:	and	w9, w8, #0xffff0000
    3390:	cmp	w9, #0x20, lsl #12
    3394:	b.ne	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.any
    3398:	cmp	x2, #0x7d0
    339c:	b.ne	33b0 <PyInit__codecs_iso2022@@Base+0x199c>  // b.any
    33a0:	mov	w9, #0xb9f                 	// #2975
    33a4:	movk	w9, #0x2, lsl #16
    33a8:	cmp	w8, w9
    33ac:	b.eq	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.none
    33b0:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    33b4:	ldr	x10, [x9, #440]
    33b8:	ubfx	x11, x8, #8, #8
    33bc:	lsl	x9, x11, #4
    33c0:	ldr	x9, [x10, x9]
    33c4:	cbz	x9, 34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>
    33c8:	add	x10, x10, x11, lsl #4
    33cc:	ldrb	w12, [x10, #8]
    33d0:	and	w11, w8, #0xff
    33d4:	subs	w8, w11, w12
    33d8:	b.cc	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.lo, b.ul, b.last
    33dc:	ldrb	w10, [x10, #9]
    33e0:	cmp	w11, w10
    33e4:	b.hi	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.pmore
    33e8:	ldrh	w0, [x9, w8, uxtw #1]
    33ec:	mov	w8, #0xffff                	// #65535
    33f0:	cmp	w0, w8
    33f4:	b.ne	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.any
    33f8:	b	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>
    33fc:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3400:	ldp	w0, w1, [x19]
    3404:	ldr	x2, [x8, #464]
    3408:	bl	3598 <PyInit__codecs_iso2022@@Base+0x1b84>
    340c:	mov	w8, #0xfffd                	// #65533
    3410:	cmp	w8, w0, uxth
    3414:	b.ne	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.any
    3418:	mov	w8, #0x1                   	// #1
    341c:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3420:	str	x8, [x20]
    3424:	ldr	w0, [x19]
    3428:	ldr	x2, [x9, #464]
    342c:	mov	w1, wzr
    3430:	bl	3598 <PyInit__codecs_iso2022@@Base+0x1b84>
    3434:	mov	w8, #0xfffd                	// #65533
    3438:	cmp	w8, w0, uxth
    343c:	csinv	w0, w0, wzr, ne  // ne = any
    3440:	b	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>
    3444:	cmp	x2, #0x7d0
    3448:	b.eq	34e8 <PyInit__codecs_iso2022@@Base+0x1ad4>  // b.none
    344c:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3450:	ldr	x12, [x9, #416]
    3454:	lsr	x9, x8, #8
    3458:	lsl	x10, x9, #4
    345c:	ldr	x11, [x12, x10]
    3460:	cbz	x11, 34a0 <PyInit__codecs_iso2022@@Base+0x1a8c>
    3464:	add	x13, x12, x9, lsl #4
    3468:	ldrb	w12, [x13, #8]
    346c:	and	w14, w8, #0xff
    3470:	subs	w12, w14, w12
    3474:	b.cc	34a0 <PyInit__codecs_iso2022@@Base+0x1a8c>  // b.lo, b.ul, b.last
    3478:	ldrb	w13, [x13, #9]
    347c:	cmp	w14, w13
    3480:	b.hi	34a0 <PyInit__codecs_iso2022@@Base+0x1a8c>  // b.pmore
    3484:	ldrh	w0, [x11, w12, uxtw #1]
    3488:	mov	w11, #0xfffe                	// #65534
    348c:	cmp	w0, w11
    3490:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    3494:	mov	w11, #0xffff                	// #65535
    3498:	cmp	w0, w11
    349c:	b.ne	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.any
    34a0:	adrp	x11, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    34a4:	ldr	x11, [x11, #352]
    34a8:	ldr	x10, [x11, x10]
    34ac:	cbz	x10, 34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>
    34b0:	add	x9, x11, x9, lsl #4
    34b4:	ldrb	w12, [x9, #8]
    34b8:	and	w11, w8, #0xff
    34bc:	subs	w8, w11, w12
    34c0:	b.cc	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.lo, b.ul, b.last
    34c4:	ldrb	w9, [x9, #9]
    34c8:	cmp	w11, w9
    34cc:	b.hi	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.pmore
    34d0:	ldrsh	w0, [x10, w8, uxtw #1]
    34d4:	tbz	w0, #31, 34dc <PyInit__codecs_iso2022@@Base+0x1ac8>
    34d8:	mov	w0, #0xffff                	// #65535
    34dc:	ldp	x20, x19, [sp, #16]
    34e0:	ldp	x29, x30, [sp], #32
    34e4:	ret
    34e8:	mov	w9, #0x5c5a                	// #23642
    34ec:	cmp	w8, w9
    34f0:	mov	w0, #0xffff                	// #65535
    34f4:	b.le	3524 <PyInit__codecs_iso2022@@Base+0x1b10>
    34f8:	mov	w9, #0x7e6a                	// #32362
    34fc:	cmp	w8, w9
    3500:	b.gt	3550 <PyInit__codecs_iso2022@@Base+0x1b3c>
    3504:	mov	w9, #0x5c5b                	// #23643
    3508:	cmp	w8, w9
    350c:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    3510:	mov	w9, #0x5e77                	// #24183
    3514:	cmp	w8, w9
    3518:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    351c:	mov	w9, #0x7626                	// #30246
    3520:	b	358c <PyInit__codecs_iso2022@@Base+0x1b78>
    3524:	mov	w9, #0x541d                	// #21533
    3528:	cmp	w8, w9
    352c:	b.le	357c <PyInit__codecs_iso2022@@Base+0x1b68>
    3530:	mov	w9, #0x541e                	// #21534
    3534:	cmp	w8, w9
    3538:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    353c:	mov	w9, #0x5653                	// #22099
    3540:	cmp	w8, w9
    3544:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    3548:	mov	w9, #0x59f8                	// #23032
    354c:	b	358c <PyInit__codecs_iso2022@@Base+0x1b78>
    3550:	mov	w9, #0x7e6b                	// #32363
    3554:	cmp	w8, w9
    3558:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    355c:	mov	w9, #0x9b1c                	// #39708
    3560:	cmp	w8, w9
    3564:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    3568:	mov	w9, #0x9b1d                	// #39709
    356c:	cmp	w8, w9
    3570:	b.ne	344c <PyInit__codecs_iso2022@@Base+0x1a38>  // b.any
    3574:	mov	w0, #0xfd3b                	// #64827
    3578:	b	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>
    357c:	mov	w9, #0x4ff1                	// #20465
    3580:	cmp	w8, w9
    3584:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    3588:	mov	w9, #0x525d                	// #21085
    358c:	cmp	w8, w9
    3590:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    3594:	b	344c <PyInit__codecs_iso2022@@Base+0x1a38>
    3598:	mov	w9, wzr
    359c:	mov	w8, #0x17                  	// #23
    35a0:	bfi	w1, w0, #16, #16
    35a4:	mov	w10, #0x2e                  	// #46
    35a8:	b	35c8 <PyInit__codecs_iso2022@@Base+0x1bb4>
    35ac:	cmp	w10, w8
    35b0:	mov	w10, w8
    35b4:	b.eq	35ec <PyInit__codecs_iso2022@@Base+0x1bd8>  // b.none
    35b8:	add	w8, w10, w9
    35bc:	cmp	w9, w10
    35c0:	asr	w8, w8, #1
    35c4:	b.eq	35ec <PyInit__codecs_iso2022@@Base+0x1bd8>  // b.none
    35c8:	sbfiz	x11, x8, #3, #32
    35cc:	ldr	w11, [x2, x11]
    35d0:	cmp	w1, w11
    35d4:	b.cc	35ac <PyInit__codecs_iso2022@@Base+0x1b98>  // b.lo, b.ul, b.last
    35d8:	cmp	w9, w8
    35dc:	b.eq	35ec <PyInit__codecs_iso2022@@Base+0x1bd8>  // b.none
    35e0:	cmp	w1, w11
    35e4:	mov	w9, w8
    35e8:	b.hi	35b8 <PyInit__codecs_iso2022@@Base+0x1ba4>  // b.pmore
    35ec:	sbfiz	x9, x8, #3, #32
    35f0:	ldr	w9, [x2, x9]
    35f4:	cmp	w1, w9
    35f8:	b.ne	360c <PyInit__codecs_iso2022@@Base+0x1bf8>  // b.any
    35fc:	sxtw	x8, w8
    3600:	add	x8, x2, x8, lsl #3
    3604:	ldrh	w0, [x8, #4]
    3608:	ret
    360c:	mov	w0, #0xfffd                	// #65533
    3610:	ret
    3614:	ldrb	w9, [x0]
    3618:	cmp	w9, #0x2f
    361c:	b.eq	363c <PyInit__codecs_iso2022@@Base+0x1c28>  // b.none
    3620:	cmp	w9, #0x2e
    3624:	b.ne	3648 <PyInit__codecs_iso2022@@Base+0x1c34>  // b.any
    3628:	ldrb	w8, [x0, #1]
    362c:	cmp	w8, #0x21
    3630:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    3634:	cmp	w9, #0x2f
    3638:	b.ne	3648 <PyInit__codecs_iso2022@@Base+0x1c34>  // b.any
    363c:	ldrb	w8, [x0, #1]
    3640:	cmp	w8, #0x7e
    3644:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    3648:	cmp	w9, #0x4f
    364c:	b.ne	3670 <PyInit__codecs_iso2022@@Base+0x1c5c>  // b.any
    3650:	ldrb	w8, [x0, #1]
    3654:	cmp	w8, #0x54
    3658:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    365c:	cmp	w9, #0x4f
    3660:	b.ne	3670 <PyInit__codecs_iso2022@@Base+0x1c5c>  // b.any
    3664:	ldrb	w8, [x0, #1]
    3668:	cmp	w8, #0x7e
    366c:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    3670:	cmp	w9, #0x74
    3674:	b.ne	3684 <PyInit__codecs_iso2022@@Base+0x1c70>  // b.any
    3678:	ldrb	w8, [x0, #1]
    367c:	cmp	w8, #0x27
    3680:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    3684:	cmp	w9, #0x7e
    3688:	b.ne	36e8 <PyInit__codecs_iso2022@@Base+0x1cd4>  // b.any
    368c:	ldrb	w8, [x0, #1]
    3690:	cmp	w8, #0x7a
    3694:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    3698:	cmp	w9, #0x7e
    369c:	b.ne	36e8 <PyInit__codecs_iso2022@@Base+0x1cd4>  // b.any
    36a0:	ldrb	w8, [x0, #1]
    36a4:	cmp	w8, #0x7b
    36a8:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    36ac:	cmp	w9, #0x7e
    36b0:	b.ne	36e8 <PyInit__codecs_iso2022@@Base+0x1cd4>  // b.any
    36b4:	ldrb	w8, [x0, #1]
    36b8:	cmp	w8, #0x7c
    36bc:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    36c0:	cmp	w9, #0x7e
    36c4:	b.ne	36e8 <PyInit__codecs_iso2022@@Base+0x1cd4>  // b.any
    36c8:	ldrb	w8, [x0, #1]
    36cc:	cmp	w8, #0x7d
    36d0:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    36d4:	cmp	w9, #0x7e
    36d8:	b.ne	36e8 <PyInit__codecs_iso2022@@Base+0x1cd4>  // b.any
    36dc:	ldrb	w8, [x0, #1]
    36e0:	cmp	w8, #0x7e
    36e4:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    36e8:	cmp	w9, #0x21
    36ec:	b.ne	3704 <PyInit__codecs_iso2022@@Base+0x1cf0>  // b.any
    36f0:	ldrb	w8, [x0, #1]
    36f4:	cmp	w8, #0x40
    36f8:	b.ne	3704 <PyInit__codecs_iso2022@@Base+0x1cf0>  // b.any
    36fc:	mov	w0, #0xff3c                	// #65340
    3700:	ret
    3704:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3708:	ldr	x12, [x8, #360]
    370c:	lsl	x10, x9, #4
    3710:	ldr	x8, [x12, x10]
    3714:	cbz	x8, 374c <PyInit__codecs_iso2022@@Base+0x1d38>
    3718:	add	x13, x12, x9, lsl #4
    371c:	ldrb	w11, [x0, #1]
    3720:	ldrb	w12, [x13, #8]
    3724:	cmp	w11, w12
    3728:	b.cc	374c <PyInit__codecs_iso2022@@Base+0x1d38>  // b.lo, b.ul, b.last
    372c:	ldrb	w13, [x13, #9]
    3730:	cmp	w11, w13
    3734:	b.hi	374c <PyInit__codecs_iso2022@@Base+0x1d38>  // b.pmore
    3738:	sub	x11, x11, x12
    373c:	ldrh	w8, [x8, x11, lsl #1]
    3740:	mov	w11, #0xfffe                	// #65534
    3744:	cmp	w8, w11
    3748:	b.ne	381c <PyInit__codecs_iso2022@@Base+0x1e08>  // b.any
    374c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3750:	ldr	x12, [x8, #424]
    3754:	ldr	x8, [x12, x10]
    3758:	cbz	x8, 3790 <PyInit__codecs_iso2022@@Base+0x1d7c>
    375c:	add	x13, x12, x9, lsl #4
    3760:	ldrb	w11, [x0, #1]
    3764:	ldrb	w12, [x13, #8]
    3768:	cmp	w11, w12
    376c:	b.cc	3790 <PyInit__codecs_iso2022@@Base+0x1d7c>  // b.lo, b.ul, b.last
    3770:	ldrb	w13, [x13, #9]
    3774:	cmp	w11, w13
    3778:	b.hi	3790 <PyInit__codecs_iso2022@@Base+0x1d7c>  // b.pmore
    377c:	sub	x11, x11, x12
    3780:	ldrh	w8, [x8, x11, lsl #1]
    3784:	mov	w11, #0xfffe                	// #65534
    3788:	cmp	w8, w11
    378c:	b.ne	381c <PyInit__codecs_iso2022@@Base+0x1e08>  // b.any
    3790:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3794:	ldr	x12, [x8, #448]
    3798:	ldr	x8, [x12, x10]
    379c:	cbz	x8, 37d4 <PyInit__codecs_iso2022@@Base+0x1dc0>
    37a0:	add	x13, x12, x9, lsl #4
    37a4:	ldrb	w11, [x0, #1]
    37a8:	ldrb	w12, [x13, #8]
    37ac:	cmp	w11, w12
    37b0:	b.cc	37d4 <PyInit__codecs_iso2022@@Base+0x1dc0>  // b.lo, b.ul, b.last
    37b4:	ldrb	w13, [x13, #9]
    37b8:	cmp	w11, w13
    37bc:	b.hi	37d4 <PyInit__codecs_iso2022@@Base+0x1dc0>  // b.pmore
    37c0:	sub	x11, x11, x12
    37c4:	ldrh	w8, [x8, x11, lsl #1]
    37c8:	mov	w11, #0xfffe                	// #65534
    37cc:	cmp	w8, w11
    37d0:	b.ne	3824 <PyInit__codecs_iso2022@@Base+0x1e10>  // b.any
    37d4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    37d8:	ldr	x11, [x8, #472]
    37dc:	ldr	x8, [x11, x10]
    37e0:	cbz	x8, 3818 <PyInit__codecs_iso2022@@Base+0x1e04>
    37e4:	add	x11, x11, x9, lsl #4
    37e8:	ldrb	w10, [x0, #1]
    37ec:	ldrb	w9, [x11, #8]
    37f0:	cmp	w10, w9
    37f4:	b.cc	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.lo, b.ul, b.last
    37f8:	ldrb	w11, [x11, #9]
    37fc:	cmp	w10, w11
    3800:	b.hi	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.pmore
    3804:	sub	x9, x10, x9
    3808:	ldr	w8, [x8, x9, lsl #2]
    380c:	mov	w9, #0xfffe                	// #65534
    3810:	cmp	w8, w9
    3814:	b.ne	381c <PyInit__codecs_iso2022@@Base+0x1e08>  // b.any
    3818:	mov	w8, #0xffff                	// #65535
    381c:	mov	w0, w8
    3820:	ret
    3824:	orr	w8, w8, #0x20000
    3828:	mov	w0, w8
    382c:	ret
    3830:	stp	x29, x30, [sp, #-32]!
    3834:	stp	x20, x19, [sp, #16]
    3838:	mov	x29, sp
    383c:	ldr	x20, [x1]
    3840:	mov	w2, #0x7d0                 	// #2000
    3844:	mov	x19, x1
    3848:	bl	3350 <PyInit__codecs_iso2022@@Base+0x193c>
    384c:	cmp	x20, #0x2
    3850:	b.eq	3870 <PyInit__codecs_iso2022@@Base+0x1e5c>  // b.none
    3854:	cmp	x20, #0x1
    3858:	b.ne	3880 <PyInit__codecs_iso2022@@Base+0x1e6c>  // b.any
    385c:	mov	w8, #0xfffe                	// #65534
    3860:	cmp	w8, w0, uxth
    3864:	mov	w8, #0xfffffffe            	// #-2
    3868:	cinc	w0, w8, ne  // ne = any
    386c:	b	3884 <PyInit__codecs_iso2022@@Base+0x1e70>
    3870:	ldr	x8, [x19]
    3874:	cmp	x8, #0x2
    3878:	csinv	w0, w0, wzr, eq  // eq = none
    387c:	b	3884 <PyInit__codecs_iso2022@@Base+0x1e70>
    3880:	mov	w0, #0xffff                	// #65535
    3884:	ldp	x20, x19, [sp, #16]
    3888:	ldp	x29, x30, [sp], #32
    388c:	ret
    3890:	stp	x29, x30, [sp, #-16]!
    3894:	mov	x29, sp
    3898:	mov	w2, #0x7d0                 	// #2000
    389c:	bl	3350 <PyInit__codecs_iso2022@@Base+0x193c>
    38a0:	sxth	w9, w0
    38a4:	and	w8, w0, #0xffff
    38a8:	cmn	w9, #0x1
    38ac:	mov	w9, #0xfffd                	// #65533
    38b0:	ccmp	w8, w9, #0x2, le
    38b4:	csinv	w0, w0, wzr, hi  // hi = pmore
    38b8:	ldp	x29, x30, [sp], #16
    38bc:	ret
    38c0:	ldrb	w9, [x0]
    38c4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    38c8:	ldr	x12, [x8, #432]
    38cc:	lsl	x10, x9, #4
    38d0:	ldr	x8, [x12, x10]
    38d4:	cbz	x8, 390c <PyInit__codecs_iso2022@@Base+0x1ef8>
    38d8:	add	x13, x12, x9, lsl #4
    38dc:	ldrb	w11, [x0, #1]
    38e0:	ldrb	w12, [x13, #8]
    38e4:	cmp	w11, w12
    38e8:	b.cc	390c <PyInit__codecs_iso2022@@Base+0x1ef8>  // b.lo, b.ul, b.last
    38ec:	ldrb	w13, [x13, #9]
    38f0:	cmp	w11, w13
    38f4:	b.hi	390c <PyInit__codecs_iso2022@@Base+0x1ef8>  // b.pmore
    38f8:	sub	x11, x11, x12
    38fc:	ldrh	w8, [x8, x11, lsl #1]
    3900:	mov	w11, #0xfffe                	// #65534
    3904:	cmp	w8, w11
    3908:	b.ne	395c <PyInit__codecs_iso2022@@Base+0x1f48>  // b.any
    390c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3910:	ldr	x11, [x8, #456]
    3914:	ldr	x8, [x11, x10]
    3918:	cbz	x8, 3950 <PyInit__codecs_iso2022@@Base+0x1f3c>
    391c:	add	x11, x11, x9, lsl #4
    3920:	ldrb	w10, [x0, #1]
    3924:	ldrb	w9, [x11, #8]
    3928:	cmp	w10, w9
    392c:	b.cc	3950 <PyInit__codecs_iso2022@@Base+0x1f3c>  // b.lo, b.ul, b.last
    3930:	ldrb	w11, [x11, #9]
    3934:	cmp	w10, w11
    3938:	b.hi	3950 <PyInit__codecs_iso2022@@Base+0x1f3c>  // b.pmore
    393c:	sub	x9, x10, x9
    3940:	ldrh	w8, [x8, x9, lsl #1]
    3944:	mov	w9, #0xfffe                	// #65534
    3948:	cmp	w8, w9
    394c:	b.ne	3958 <PyInit__codecs_iso2022@@Base+0x1f44>  // b.any
    3950:	mov	w0, #0xffff                	// #65535
    3954:	ret
    3958:	orr	w8, w8, #0x20000
    395c:	mov	w0, w8
    3960:	ret
    3964:	stp	x29, x30, [sp, #-16]!
    3968:	mov	x29, sp
    396c:	mov	w2, #0x7d0                 	// #2000
    3970:	bl	3350 <PyInit__codecs_iso2022@@Base+0x193c>
    3974:	mov	w8, #0xfffd                	// #65533
    3978:	cmp	w8, w0, uxth
    397c:	b.cc	3990 <PyInit__codecs_iso2022@@Base+0x1f7c>  // b.lo, b.ul, b.last
    3980:	sxth	w8, w0
    3984:	and	w9, w0, #0x7fff
    3988:	cmp	w8, #0x0
    398c:	csinv	w0, w9, wzr, lt  // lt = tstop
    3990:	ldp	x29, x30, [sp], #16
    3994:	ret
    3998:	ldrb	w8, [x0]
    399c:	mov	w9, #0xfec0                	// #65216
    39a0:	eor	w10, w8, #0x80
    39a4:	sub	w8, w8, #0x21
    39a8:	add	w9, w10, w9
    39ac:	cmp	w8, #0x3f
    39b0:	mov	w8, #0xffff                	// #65535
    39b4:	csel	w0, w9, w8, cc  // cc = lo, ul, last
    39b8:	ret
    39bc:	ldr	w8, [x0]
    39c0:	mov	w9, #0xffff009f            	// #-65377
    39c4:	add	w9, w8, w9
    39c8:	add	w8, w8, #0xc0
    39cc:	cmp	w9, #0x3f
    39d0:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
    39d4:	ret

Disassembly of section .fini:

00000000000039d8 <.fini>:
    39d8:	stp	x29, x30, [sp, #-16]!
    39dc:	mov	x29, sp
    39e0:	ldp	x29, x30, [sp], #16
    39e4:	ret
