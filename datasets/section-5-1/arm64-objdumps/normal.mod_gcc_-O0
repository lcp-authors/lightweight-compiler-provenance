
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//normal.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_normal_free_menu-0x168>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x0, [sp, #24]
      10:	ldr	x1, [x0, #56]
      14:	ldr	x0, [sp, #24]
      18:	blr	x1
      1c:	and	w0, w0, #0xffff
      20:	cmp	w0, #0x0
      24:	b.eq	2c <grub_normal_free_menu-0x13c>  // b.none
      28:	b	30 <grub_normal_free_menu-0x138>
      2c:	mov	w0, #0x50                  	// #80
      30:	ldp	x29, x30, [sp], #32
      34:	ret
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	ldr	x0, [x0, #104]
      4c:	cmp	x0, #0x0
      50:	b.eq	64 <grub_normal_free_menu-0x104>  // b.none
      54:	ldr	x0, [sp, #24]
      58:	ldr	x1, [x0, #104]
      5c:	ldr	x0, [sp, #24]
      60:	blr	x1
      64:	nop
      68:	ldp	x29, x30, [sp], #32
      6c:	ret
      70:	stp	x29, x30, [sp, #-32]!
      74:	mov	x29, sp
      78:	str	x0, [sp, #24]
      7c:	str	w1, [sp, #16]
      80:	ldr	x0, [sp, #24]
      84:	ldr	x2, [x0, #72]
      88:	ldr	w1, [sp, #16]
      8c:	ldr	x0, [sp, #24]
      90:	blr	x2
      94:	nop
      98:	ldp	x29, x30, [sp], #32
      9c:	ret
      a0:	stp	x29, x30, [sp, #-32]!
      a4:	mov	x29, sp
      a8:	str	x0, [sp, #24]
      ac:	str	w1, [sp, #20]
      b0:	ldr	x0, [sp, #24]
      b4:	ldr	x0, [x0, #96]
      b8:	cmp	x0, #0x0
      bc:	b.eq	d4 <grub_normal_free_menu-0x94>  // b.none
      c0:	ldr	x0, [sp, #24]
      c4:	ldr	x2, [x0, #96]
      c8:	ldr	w1, [sp, #20]
      cc:	ldr	x0, [sp, #24]
      d0:	blr	x2
      d4:	nop
      d8:	ldp	x29, x30, [sp], #32
      dc:	ret
      e0:	stp	x29, x30, [sp, #-32]!
      e4:	mov	x29, sp
      e8:	str	x0, [sp, #24]
      ec:	ldr	x0, [sp, #24]
      f0:	ldr	x0, [x0, #80]
      f4:	cmp	x0, #0x0
      f8:	b.eq	110 <grub_normal_free_menu-0x58>  // b.none
      fc:	ldr	x0, [sp, #24]
     100:	ldr	x1, [x0, #80]
     104:	ldr	x0, [sp, #24]
     108:	blr	x1
     10c:	b	124 <grub_normal_free_menu-0x44>
     110:	ldr	x1, [sp, #24]
     114:	mov	w0, #0xa                   	// #10
     118:	bl	1077c <grub_putcode>
     11c:	ldr	x0, [sp, #24]
     120:	bl	38 <grub_normal_free_menu-0x130>
     124:	nop
     128:	ldp	x29, x30, [sp], #32
     12c:	ret
     130:	stp	x29, x30, [sp, #-48]!
     134:	mov	x29, sp
     138:	str	x0, [sp, #40]
     13c:	str	x1, [sp, #32]
     140:	str	x2, [sp, #24]
     144:	str	x3, [sp, #16]
     148:	mov	w4, #0x0                   	// #0
     14c:	ldr	x3, [sp, #16]
     150:	ldr	x2, [sp, #24]
     154:	ldr	x1, [sp, #32]
     158:	ldr	x0, [sp, #40]
     15c:	bl	0 <grub_register_command_prio>
     160:	ldp	x29, x30, [sp], #48
     164:	ret

0000000000000168 <grub_normal_free_menu>:
     168:	stp	x29, x30, [sp, #-64]!
     16c:	mov	x29, sp
     170:	str	x0, [sp, #24]
     174:	ldr	x0, [sp, #24]
     178:	ldr	x0, [x0, #8]
     17c:	str	x0, [sp, #56]
     180:	b	28c <grub_normal_free_menu+0x124>
     184:	ldr	x0, [sp, #56]
     188:	ldr	x0, [x0, #72]
     18c:	str	x0, [sp, #32]
     190:	ldr	x0, [sp, #56]
     194:	ldr	x0, [x0, #32]
     198:	cmp	x0, #0x0
     19c:	b.eq	1e0 <grub_normal_free_menu+0x78>  // b.none
     1a0:	ldr	x0, [sp, #56]
     1a4:	ldr	x0, [x0, #32]
     1a8:	str	x0, [sp, #40]
     1ac:	b	1c8 <grub_normal_free_menu+0x60>
     1b0:	ldr	x0, [sp, #40]
     1b4:	ldr	x0, [x0]
     1b8:	bl	0 <grub_free>
     1bc:	ldr	x0, [sp, #40]
     1c0:	ldr	x0, [x0, #8]
     1c4:	str	x0, [sp, #40]
     1c8:	ldr	x0, [sp, #40]
     1cc:	cmp	x0, #0x0
     1d0:	b.ne	1b0 <grub_normal_free_menu+0x48>  // b.any
     1d4:	ldr	x0, [sp, #56]
     1d8:	ldr	x0, [x0, #32]
     1dc:	bl	0 <grub_free>
     1e0:	ldr	x0, [sp, #56]
     1e4:	ldr	x0, [x0, #56]
     1e8:	cmp	x0, #0x0
     1ec:	b.eq	24c <grub_normal_free_menu+0xe4>  // b.none
     1f0:	str	xzr, [sp, #48]
     1f4:	b	220 <grub_normal_free_menu+0xb8>
     1f8:	ldr	x0, [sp, #56]
     1fc:	ldr	x1, [x0, #56]
     200:	ldr	x0, [sp, #48]
     204:	lsl	x0, x0, #3
     208:	add	x0, x1, x0
     20c:	ldr	x0, [x0]
     210:	bl	0 <grub_free>
     214:	ldr	x0, [sp, #48]
     218:	add	x0, x0, #0x1
     21c:	str	x0, [sp, #48]
     220:	ldr	x0, [sp, #56]
     224:	ldr	x1, [x0, #56]
     228:	ldr	x0, [sp, #48]
     22c:	lsl	x0, x0, #3
     230:	add	x0, x1, x0
     234:	ldr	x0, [x0]
     238:	cmp	x0, #0x0
     23c:	b.ne	1f8 <grub_normal_free_menu+0x90>  // b.any
     240:	ldr	x0, [sp, #56]
     244:	ldr	x0, [x0, #56]
     248:	bl	0 <grub_free>
     24c:	ldr	x0, [sp, #56]
     250:	ldr	x0, [x0, #8]
     254:	bl	0 <grub_free>
     258:	ldr	x0, [sp, #56]
     25c:	ldr	x0, [x0, #24]
     260:	bl	0 <grub_free>
     264:	ldr	x0, [sp, #56]
     268:	ldr	x0, [x0]
     26c:	bl	0 <grub_free>
     270:	ldr	x0, [sp, #56]
     274:	ldr	x0, [x0, #40]
     278:	bl	0 <grub_free>
     27c:	ldr	x0, [sp, #56]
     280:	bl	0 <grub_free>
     284:	ldr	x0, [sp, #32]
     288:	str	x0, [sp, #56]
     28c:	ldr	x0, [sp, #56]
     290:	cmp	x0, #0x0
     294:	b.ne	184 <grub_normal_free_menu+0x1c>  // b.any
     298:	ldr	x0, [sp, #24]
     29c:	bl	0 <grub_free>
     2a0:	bl	11fe0 <grub_env_unset_menu>
     2a4:	nop
     2a8:	ldp	x29, x30, [sp], #64
     2ac:	ret
     2b0:	stp	x29, x30, [sp, #-64]!
     2b4:	mov	x29, sp
     2b8:	str	x0, [sp, #40]
     2bc:	str	w1, [sp, #36]
     2c0:	str	x2, [sp, #24]
     2c4:	ldr	x0, [sp, #24]
     2c8:	str	x0, [sp, #56]
     2cc:	ldr	x0, [sp, #56]
     2d0:	bl	16988 <grub_file_getline>
     2d4:	str	x0, [sp, #48]
     2d8:	ldr	x0, [sp, #40]
     2dc:	ldr	x1, [sp, #48]
     2e0:	str	x1, [x0]
     2e4:	ldr	x0, [sp, #48]
     2e8:	cmp	x0, #0x0
     2ec:	b.ne	304 <grub_normal_free_menu+0x19c>  // b.any
     2f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     2f4:	add	x0, x0, #0x0
     2f8:	ldr	x0, [x0]
     2fc:	ldr	w0, [x0]
     300:	b	32c <grub_normal_free_menu+0x1c4>
     304:	ldr	x0, [sp, #48]
     308:	ldrb	w0, [x0]
     30c:	cmp	w0, #0x23
     310:	b.ne	324 <grub_normal_free_menu+0x1bc>  // b.any
     314:	ldr	x0, [sp, #40]
     318:	ldr	x0, [x0]
     31c:	bl	0 <grub_free>
     320:	b	2cc <grub_normal_free_menu+0x164>
     324:	nop
     328:	mov	w0, #0x0                   	// #0
     32c:	ldp	x29, x30, [sp], #64
     330:	ret
     334:	nop
	...
     340:	stp	x29, x30, [sp, #-112]!
     344:	mov	x29, sp
     348:	str	x0, [sp, #24]
     34c:	str	xzr, [sp, #104]
     350:	str	xzr, [sp, #96]
     354:	str	xzr, [sp, #72]
     358:	bl	12008 <grub_env_get_menu>
     35c:	str	x0, [sp, #80]
     360:	ldr	x0, [sp, #80]
     364:	cmp	x0, #0x0
     368:	b.ne	394 <grub_normal_free_menu+0x22c>  // b.any
     36c:	mov	x0, #0x10                  	// #16
     370:	bl	0 <grub_zalloc>
     374:	str	x0, [sp, #80]
     378:	ldr	x0, [sp, #80]
     37c:	cmp	x0, #0x0
     380:	b.ne	38c <grub_normal_free_menu+0x224>  // b.any
     384:	mov	x0, #0x0                   	// #0
     388:	b	60c <grub_normal_free_menu+0x4a4>
     38c:	ldr	x0, [sp, #80]
     390:	bl	12028 <grub_env_set_menu>
     394:	mov	w1, #0x33                  	// #51
     398:	ldr	x0, [sp, #24]
     39c:	bl	0 <grub_file_open>
     3a0:	str	x0, [sp, #64]
     3a4:	ldr	x0, [sp, #64]
     3a8:	cmp	x0, #0x0
     3ac:	b.ne	3b8 <grub_normal_free_menu+0x250>  // b.any
     3b0:	mov	x0, #0x0                   	// #0
     3b4:	b	60c <grub_normal_free_menu+0x4a4>
     3b8:	mov	x1, #0x0                   	// #0
     3bc:	ldr	x0, [sp, #64]
     3c0:	bl	0 <grub_bufio_open>
     3c4:	str	x0, [sp, #56]
     3c8:	ldr	x0, [sp, #56]
     3cc:	cmp	x0, #0x0
     3d0:	b.ne	3e4 <grub_normal_free_menu+0x27c>  // b.any
     3d4:	ldr	x0, [sp, #64]
     3d8:	bl	0 <grub_file_close>
     3dc:	mov	x0, #0x0                   	// #0
     3e0:	b	60c <grub_normal_free_menu+0x4a4>
     3e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     3e8:	add	x0, x0, #0x0
     3ec:	ldr	x0, [x0]
     3f0:	bl	0 <grub_env_get>
     3f4:	str	x0, [sp, #48]
     3f8:	ldr	x0, [sp, #48]
     3fc:	cmp	x0, #0x0
     400:	b.eq	410 <grub_normal_free_menu+0x2a8>  // b.none
     404:	ldr	x0, [sp, #48]
     408:	bl	0 <grub_strdup>
     40c:	str	x0, [sp, #104]
     410:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     414:	add	x0, x0, #0x0
     418:	ldr	x0, [x0]
     41c:	bl	0 <grub_env_get>
     420:	str	x0, [sp, #48]
     424:	ldr	x0, [sp, #48]
     428:	cmp	x0, #0x0
     42c:	b.eq	43c <grub_normal_free_menu+0x2d4>  // b.none
     430:	ldr	x0, [sp, #48]
     434:	bl	0 <grub_strdup>
     438:	str	x0, [sp, #96]
     43c:	ldr	x0, [sp, #24]
     440:	ldrb	w0, [x0]
     444:	cmp	w0, #0x28
     448:	b.ne	470 <grub_normal_free_menu+0x308>  // b.any
     44c:	ldr	x1, [sp, #24]
     450:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     454:	add	x0, x0, #0x0
     458:	ldr	x0, [x0]
     45c:	bl	0 <grub_env_set>
     460:	ldr	x0, [sp, #24]
     464:	bl	0 <grub_strdup>
     468:	str	x0, [sp, #88]
     46c:	b	4bc <grub_normal_free_menu+0x354>
     470:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     474:	add	x0, x0, #0x0
     478:	ldr	x0, [x0]
     47c:	bl	0 <grub_env_get>
     480:	ldr	x2, [sp, #24]
     484:	mov	x1, x0
     488:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     48c:	add	x0, x0, #0x0
     490:	ldr	x0, [x0]
     494:	bl	0 <grub_xasprintf>
     498:	str	x0, [sp, #88]
     49c:	ldr	x0, [sp, #88]
     4a0:	cmp	x0, #0x0
     4a4:	b.eq	4bc <grub_normal_free_menu+0x354>  // b.none
     4a8:	ldr	x1, [sp, #88]
     4ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     4b0:	add	x0, x0, #0x0
     4b4:	ldr	x0, [x0]
     4b8:	bl	0 <grub_env_set>
     4bc:	ldr	x0, [sp, #88]
     4c0:	cmp	x0, #0x0
     4c4:	b.eq	508 <grub_normal_free_menu+0x3a0>  // b.none
     4c8:	mov	w1, #0x2f                  	// #47
     4cc:	ldr	x0, [sp, #88]
     4d0:	bl	0 <grub_strrchr>
     4d4:	str	x0, [sp, #72]
     4d8:	ldr	x0, [sp, #72]
     4dc:	cmp	x0, #0x0
     4e0:	b.eq	4ec <grub_normal_free_menu+0x384>  // b.none
     4e4:	ldr	x0, [sp, #72]
     4e8:	strb	wzr, [x0]
     4ec:	ldr	x1, [sp, #88]
     4f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     4f4:	add	x0, x0, #0x0
     4f8:	ldr	x0, [x0]
     4fc:	bl	0 <grub_env_set>
     500:	ldr	x0, [sp, #88]
     504:	bl	0 <grub_free>
     508:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     50c:	add	x0, x0, #0x0
     510:	ldr	x0, [x0]
     514:	bl	0 <grub_env_export>
     518:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     51c:	add	x0, x0, #0x0
     520:	ldr	x0, [x0]
     524:	bl	0 <grub_env_export>
     528:	bl	0 <grub_print_error>
     52c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     530:	add	x0, x0, #0x0
     534:	ldr	x0, [x0]
     538:	str	wzr, [x0]
     53c:	add	x0, sp, #0x28
     540:	ldr	x2, [sp, #56]
     544:	mov	w1, #0x0                   	// #0
     548:	bl	2b0 <grub_normal_free_menu+0x148>
     54c:	cmp	w0, #0x0
     550:	b.ne	588 <grub_normal_free_menu+0x420>  // b.any
     554:	ldr	x0, [sp, #40]
     558:	cmp	x0, #0x0
     55c:	b.eq	588 <grub_normal_free_menu+0x420>  // b.none
     560:	ldr	x3, [sp, #40]
     564:	ldr	x2, [sp, #56]
     568:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     56c:	add	x0, x0, #0x0
     570:	ldr	x1, [x0]
     574:	mov	x0, x3
     578:	bl	16b58 <grub_normal_parse_line>
     57c:	ldr	x0, [sp, #40]
     580:	bl	0 <grub_free>
     584:	b	528 <grub_normal_free_menu+0x3c0>
     588:	ldr	x0, [sp, #104]
     58c:	cmp	x0, #0x0
     590:	b.eq	5ac <grub_normal_free_menu+0x444>  // b.none
     594:	ldr	x1, [sp, #104]
     598:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     59c:	add	x0, x0, #0x0
     5a0:	ldr	x0, [x0]
     5a4:	bl	0 <grub_env_set>
     5a8:	b	5bc <grub_normal_free_menu+0x454>
     5ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     5b0:	add	x0, x0, #0x0
     5b4:	ldr	x0, [x0]
     5b8:	bl	0 <grub_env_unset>
     5bc:	ldr	x0, [sp, #96]
     5c0:	cmp	x0, #0x0
     5c4:	b.eq	5e0 <grub_normal_free_menu+0x478>  // b.none
     5c8:	ldr	x1, [sp, #96]
     5cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     5d0:	add	x0, x0, #0x0
     5d4:	ldr	x0, [x0]
     5d8:	bl	0 <grub_env_set>
     5dc:	b	5f0 <grub_normal_free_menu+0x488>
     5e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     5e4:	add	x0, x0, #0x0
     5e8:	ldr	x0, [x0]
     5ec:	bl	0 <grub_env_unset>
     5f0:	ldr	x0, [sp, #104]
     5f4:	bl	0 <grub_free>
     5f8:	ldr	x0, [sp, #96]
     5fc:	bl	0 <grub_free>
     600:	ldr	x0, [sp, #56]
     604:	bl	0 <grub_file_close>
     608:	ldr	x0, [sp, #80]
     60c:	ldp	x29, x30, [sp], #112
     610:	ret
     614:	nop
	...

0000000000000648 <grub_normal_init_page>:
     648:	stp	x29, x30, [sp, #-96]!
     64c:	mov	x29, sp
     650:	str	x19, [sp, #16]
     654:	str	x0, [sp, #40]
     658:	str	w1, [sp, #36]
     65c:	ldr	x0, [sp, #40]
     660:	bl	e0 <grub_normal_free_menu-0x88>
     664:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     668:	add	x0, x0, #0x0
     66c:	ldr	x0, [x0]
     670:	str	x0, [sp, #64]
     674:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     678:	add	x0, x0, #0x0
     67c:	ldr	x0, [x0]
     680:	ldr	x1, [x0]
     684:	ldr	x0, [sp, #64]
     688:	blr	x1
     68c:	mov	x2, x0
     690:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     694:	add	x0, x0, #0x0
     698:	ldr	x1, [x0]
     69c:	mov	x0, x2
     6a0:	bl	0 <grub_xasprintf>
     6a4:	str	x0, [sp, #80]
     6a8:	ldr	x0, [sp, #80]
     6ac:	cmp	x0, #0x0
     6b0:	b.eq	78c <grub_normal_init_page+0x144>  // b.none
     6b4:	add	x1, sp, #0x30
     6b8:	add	x0, sp, #0x38
     6bc:	mov	x2, x1
     6c0:	mov	x1, x0
     6c4:	ldr	x0, [sp, #80]
     6c8:	bl	12e28 <grub_utf8_to_ucs4_alloc>
     6cc:	str	x0, [sp, #72]
     6d0:	ldr	x0, [sp, #80]
     6d4:	bl	0 <grub_free>
     6d8:	ldr	x0, [sp, #72]
     6dc:	cmp	x0, #0x0
     6e0:	b.lt	794 <grub_normal_init_page+0x14c>  // b.tstop
     6e4:	ldr	x0, [sp, #56]
     6e8:	ldr	x1, [sp, #48]
     6ec:	ldr	x2, [sp, #40]
     6f0:	bl	cc5c <grub_getstringwidth>
     6f4:	str	w0, [sp, #92]
     6f8:	ldr	x0, [sp, #40]
     6fc:	bl	0 <grub_normal_free_menu-0x168>
     700:	mov	w1, w0
     704:	ldr	w0, [sp, #92]
     708:	sub	w0, w1, w0
     70c:	lsr	w1, w0, #31
     710:	add	w0, w1, w0
     714:	asr	w0, w0, #1
     718:	str	w0, [sp, #92]
     71c:	ldr	w0, [sp, #92]
     720:	cmp	w0, #0x0
     724:	b.ge	72c <grub_normal_init_page+0xe4>  // b.tcont
     728:	str	wzr, [sp, #92]
     72c:	ldr	w0, [sp, #92]
     730:	and	w0, w0, #0xffff
     734:	bfxil	w19, w0, #0, #16
     738:	ldr	w0, [sp, #36]
     73c:	and	w0, w0, #0xffff
     740:	bfi	w19, w0, #16, #16
     744:	mov	w1, w19
     748:	ldr	x0, [sp, #40]
     74c:	bl	70 <grub_normal_free_menu-0xf8>
     750:	ldr	x0, [sp, #56]
     754:	ldr	x1, [sp, #48]
     758:	ldr	x4, [sp, #40]
     75c:	mov	w3, #0x0                   	// #0
     760:	mov	w2, #0x0                   	// #0
     764:	bl	11b50 <grub_print_ucs4>
     768:	ldr	x1, [sp, #40]
     76c:	mov	w0, #0xa                   	// #10
     770:	bl	1077c <grub_putcode>
     774:	ldr	x1, [sp, #40]
     778:	mov	w0, #0xa                   	// #10
     77c:	bl	1077c <grub_putcode>
     780:	ldr	x0, [sp, #56]
     784:	bl	0 <grub_free>
     788:	b	798 <grub_normal_init_page+0x150>
     78c:	nop
     790:	b	798 <grub_normal_init_page+0x150>
     794:	nop
     798:	ldr	x19, [sp, #16]
     79c:	ldp	x29, x30, [sp], #96
     7a0:	ret
     7a4:	nop
	...
     7c0:	stp	x29, x30, [sp, #-32]!
     7c4:	mov	x29, sp
     7c8:	str	x0, [sp, #24]
     7cc:	ldr	x0, [sp, #24]
     7d0:	bl	37f8 <read_command_list>
     7d4:	ldr	x0, [sp, #24]
     7d8:	bl	45c0 <read_fs_list>
     7dc:	ldr	x0, [sp, #24]
     7e0:	bl	f140 <read_crypto_list>
     7e4:	ldr	x0, [sp, #24]
     7e8:	bl	10130 <read_terminal_list>
     7ec:	ldr	x0, [sp, #24]
     7f0:	bl	0 <grub_gettext_reread_prefix>
     7f4:	nop
     7f8:	ldp	x29, x30, [sp], #32
     7fc:	ret
     800:	stp	x29, x30, [sp, #-32]!
     804:	mov	x29, sp
     808:	str	x0, [sp, #24]
     80c:	str	x1, [sp, #16]
     810:	ldr	x0, [sp, #16]
     814:	bl	7c0 <grub_normal_init_page+0x178>
     818:	ldr	x0, [sp, #16]
     81c:	cmp	x0, #0x0
     820:	b.eq	830 <grub_normal_init_page+0x1e8>  // b.none
     824:	ldr	x0, [sp, #16]
     828:	bl	0 <grub_strdup>
     82c:	b	834 <grub_normal_init_page+0x1ec>
     830:	mov	x0, #0x0                   	// #0
     834:	ldp	x29, x30, [sp], #32
     838:	ret

000000000000083c <grub_normal_execute>:
     83c:	stp	x29, x30, [sp, #-48]!
     840:	mov	x29, sp
     844:	str	x0, [sp, #24]
     848:	str	w1, [sp, #20]
     84c:	str	w2, [sp, #16]
     850:	str	xzr, [sp, #40]
     854:	ldr	w0, [sp, #20]
     858:	cmp	w0, #0x0
     85c:	b.ne	89c <grub_normal_execute+0x60>  // b.any
     860:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     864:	add	x0, x0, #0x0
     868:	ldr	x0, [x0]
     86c:	bl	0 <grub_env_get>
     870:	str	x0, [sp, #32]
     874:	ldr	x0, [sp, #32]
     878:	bl	7c0 <grub_normal_init_page+0x178>
     87c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     880:	add	x0, x0, #0x0
     884:	ldr	x2, [x0]
     888:	mov	x1, #0x0                   	// #0
     88c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     890:	add	x0, x0, #0x0
     894:	ldr	x0, [x0]
     898:	bl	0 <grub_register_variable_hook>
     89c:	ldr	x0, [sp, #24]
     8a0:	cmp	x0, #0x0
     8a4:	b.eq	8c4 <grub_normal_execute+0x88>  // b.none
     8a8:	ldr	x0, [sp, #24]
     8ac:	bl	340 <grub_normal_free_menu+0x1d8>
     8b0:	str	x0, [sp, #40]
     8b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     8b8:	add	x0, x0, #0x0
     8bc:	ldr	x0, [x0]
     8c0:	str	wzr, [x0]
     8c4:	ldr	w0, [sp, #16]
     8c8:	cmp	w0, #0x0
     8cc:	b.ne	910 <grub_normal_execute+0xd4>  // b.any
     8d0:	ldr	x0, [sp, #40]
     8d4:	cmp	x0, #0x0
     8d8:	b.eq	910 <grub_normal_execute+0xd4>  // b.none
     8dc:	ldr	x0, [sp, #40]
     8e0:	ldr	w0, [x0]
     8e4:	cmp	w0, #0x0
     8e8:	b.eq	910 <grub_normal_execute+0xd4>  // b.none
     8ec:	mov	w2, #0x0                   	// #0
     8f0:	ldr	w1, [sp, #20]
     8f4:	ldr	x0, [sp, #40]
     8f8:	bl	8170 <grub_show_menu>
     8fc:	ldr	w0, [sp, #20]
     900:	cmp	w0, #0x0
     904:	b.eq	910 <grub_normal_execute+0xd4>  // b.none
     908:	ldr	x0, [sp, #40]
     90c:	bl	168 <grub_normal_free_menu>
     910:	nop
     914:	ldp	x29, x30, [sp], #48
     918:	ret
     91c:	nop
	...

0000000000000938 <grub_enter_normal_mode>:
     938:	stp	x29, x30, [sp, #-32]!
     93c:	mov	x29, sp
     940:	str	x0, [sp, #24]
     944:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     948:	add	x0, x0, #0x0
     94c:	ldr	x0, [x0]
     950:	ldr	w0, [x0]
     954:	add	w1, w0, #0x1
     958:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     95c:	add	x0, x0, #0x0
     960:	ldr	x0, [x0]
     964:	str	w1, [x0]
     968:	mov	w2, #0x0                   	// #0
     96c:	mov	w1, #0x0                   	// #0
     970:	ldr	x0, [sp, #24]
     974:	bl	83c <grub_normal_execute>
     978:	mov	w1, #0x1                   	// #1
     97c:	mov	w0, #0x0                   	// #0
     980:	bl	e54 <grub_cmdline_run>
     984:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     988:	add	x0, x0, #0x0
     98c:	ldr	x0, [x0]
     990:	ldr	w0, [x0]
     994:	sub	w1, w0, #0x1
     998:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     99c:	add	x0, x0, #0x0
     9a0:	ldr	x0, [x0]
     9a4:	str	w1, [x0]
     9a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     9ac:	add	x0, x0, #0x0
     9b0:	ldr	x0, [x0]
     9b4:	ldr	w0, [x0]
     9b8:	cmp	w0, #0x0
     9bc:	b.eq	9e4 <grub_enter_normal_mode+0xac>  // b.none
     9c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     9c4:	add	x0, x0, #0x0
     9c8:	ldr	x0, [x0]
     9cc:	ldr	w0, [x0]
     9d0:	sub	w1, w0, #0x1
     9d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     9d8:	add	x0, x0, #0x0
     9dc:	ldr	x0, [x0]
     9e0:	str	w1, [x0]
     9e4:	nop
     9e8:	ldp	x29, x30, [sp], #32
     9ec:	ret
	...
     a00:	stp	x29, x30, [sp, #-64]!
     a04:	mov	x29, sp
     a08:	str	x0, [sp, #40]
     a0c:	str	w1, [sp, #36]
     a10:	str	x2, [sp, #24]
     a14:	ldr	w0, [sp, #36]
     a18:	cmp	w0, #0x0
     a1c:	b.ne	a84 <grub_enter_normal_mode+0x14c>  // b.any
     a20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     a24:	add	x0, x0, #0x0
     a28:	ldr	x0, [x0]
     a2c:	bl	0 <grub_env_get>
     a30:	str	x0, [sp, #56]
     a34:	ldr	x0, [sp, #56]
     a38:	cmp	x0, #0x0
     a3c:	b.eq	a78 <grub_enter_normal_mode+0x140>  // b.none
     a40:	ldr	x1, [sp, #56]
     a44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     a48:	add	x0, x0, #0x0
     a4c:	ldr	x0, [x0]
     a50:	bl	0 <grub_xasprintf>
     a54:	str	x0, [sp, #48]
     a58:	ldr	x0, [sp, #48]
     a5c:	cmp	x0, #0x0
     a60:	b.eq	a94 <grub_enter_normal_mode+0x15c>  // b.none
     a64:	ldr	x0, [sp, #48]
     a68:	bl	938 <grub_enter_normal_mode>
     a6c:	ldr	x0, [sp, #48]
     a70:	bl	0 <grub_free>
     a74:	b	a98 <grub_enter_normal_mode+0x160>
     a78:	mov	x0, #0x0                   	// #0
     a7c:	bl	938 <grub_enter_normal_mode>
     a80:	b	a98 <grub_enter_normal_mode+0x160>
     a84:	ldr	x0, [sp, #24]
     a88:	ldr	x0, [x0]
     a8c:	bl	938 <grub_enter_normal_mode>
     a90:	b	a98 <grub_enter_normal_mode+0x160>
     a94:	nop
     a98:	mov	w0, #0x0                   	// #0
     a9c:	ldp	x29, x30, [sp], #64
     aa0:	ret
     aa4:	nop
	...
     ab8:	stp	x29, x30, [sp, #-48]!
     abc:	mov	x29, sp
     ac0:	str	x0, [sp, #40]
     ac4:	str	w1, [sp, #36]
     ac8:	str	x2, [sp, #24]
     acc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     ad0:	add	x0, x0, #0x0
     ad4:	ldr	x0, [x0]
     ad8:	ldr	w1, [x0]
     adc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     ae0:	add	x0, x0, #0x0
     ae4:	ldr	x0, [x0]
     ae8:	ldr	w0, [x0]
     aec:	cmp	w1, w0
     af0:	b.gt	b0c <grub_enter_normal_mode+0x1d4>
     af4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     af8:	add	x0, x0, #0x0
     afc:	ldr	x1, [x0]
     b00:	mov	w0, #0x12                  	// #18
     b04:	bl	0 <grub_error>
     b08:	b	b34 <grub_enter_normal_mode+0x1fc>
     b0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     b10:	add	x0, x0, #0x0
     b14:	ldr	x0, [x0]
     b18:	ldr	w0, [x0]
     b1c:	add	w1, w0, #0x1
     b20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     b24:	add	x0, x0, #0x0
     b28:	ldr	x0, [x0]
     b2c:	str	w1, [x0]
     b30:	mov	w0, #0x0                   	// #0
     b34:	ldp	x29, x30, [sp], #48
     b38:	ret
     b3c:	nop
	...
     b58:	stp	x29, x30, [sp, #-80]!
     b5c:	mov	x29, sp
     b60:	str	w0, [sp, #28]
     b64:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     b68:	add	x0, x0, #0x0
     b6c:	ldr	x0, [x0]
     b70:	str	x0, [sp, #40]
     b74:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     b78:	add	x0, x0, #0x0
     b7c:	ldr	x0, [x0]
     b80:	ldr	x1, [x0]
     b84:	ldr	x0, [sp, #40]
     b88:	blr	x1
     b8c:	str	x0, [sp, #64]
     b90:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     b94:	add	x0, x0, #0x0
     b98:	ldr	x0, [x0]
     b9c:	str	x0, [sp, #48]
     ba0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     ba4:	add	x0, x0, #0x0
     ba8:	ldr	x0, [x0]
     bac:	ldr	x1, [x0]
     bb0:	ldr	x0, [sp, #48]
     bb4:	blr	x1
     bb8:	mov	x2, x0
     bbc:	ldr	w0, [sp, #28]
     bc0:	cmp	w0, #0x0
     bc4:	b.eq	bd0 <grub_enter_normal_mode+0x298>  // b.none
     bc8:	ldr	x0, [sp, #64]
     bcc:	b	bdc <grub_enter_normal_mode+0x2a4>
     bd0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     bd4:	add	x0, x0, #0x0
     bd8:	ldr	x0, [x0]
     bdc:	mov	x1, x0
     be0:	mov	x0, x2
     be4:	bl	0 <grub_xasprintf>
     be8:	str	x0, [sp, #56]
     bec:	ldr	x0, [sp, #56]
     bf0:	cmp	x0, #0x0
     bf4:	b.ne	c0c <grub_enter_normal_mode+0x2d4>  // b.any
     bf8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     bfc:	add	x0, x0, #0x0
     c00:	ldr	x0, [x0]
     c04:	ldr	w0, [x0]
     c08:	b	cc0 <grub_enter_normal_mode+0x388>
     c0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     c10:	add	x0, x0, #0x0
     c14:	ldr	x0, [x0]
     c18:	ldr	x0, [x0]
     c1c:	str	x0, [sp, #72]
     c20:	b	ca8 <grub_enter_normal_mode+0x370>
     c24:	mov	w1, #0x1                   	// #1
     c28:	ldr	x0, [sp, #72]
     c2c:	bl	648 <grub_normal_init_page>
     c30:	mov	w1, #0x1                   	// #1
     c34:	ldr	x0, [sp, #72]
     c38:	bl	a0 <grub_normal_free_menu-0xc8>
     c3c:	ldr	x0, [sp, #72]
     c40:	bl	0 <grub_normal_free_menu-0x168>
     c44:	cmp	w0, #0x1d
     c48:	b.ls	c64 <grub_enter_normal_mode+0x32c>  // b.plast
     c4c:	ldr	x3, [sp, #72]
     c50:	mov	w2, #0x6                   	// #6
     c54:	mov	w1, #0x3                   	// #3
     c58:	ldr	x0, [sp, #56]
     c5c:	bl	cdf8 <grub_print_message_indented>
     c60:	b	c78 <grub_enter_normal_mode+0x340>
     c64:	ldr	x3, [sp, #72]
     c68:	mov	w2, #0x0                   	// #0
     c6c:	mov	w1, #0x0                   	// #0
     c70:	ldr	x0, [sp, #56]
     c74:	bl	cdf8 <grub_print_message_indented>
     c78:	ldr	x1, [sp, #72]
     c7c:	mov	w0, #0xa                   	// #10
     c80:	bl	1077c <grub_putcode>
     c84:	ldr	x1, [sp, #72]
     c88:	mov	w0, #0xa                   	// #10
     c8c:	bl	1077c <grub_putcode>
     c90:	ldr	x1, [sp, #72]
     c94:	mov	w0, #0xa                   	// #10
     c98:	bl	1077c <grub_putcode>
     c9c:	ldr	x0, [sp, #72]
     ca0:	ldr	x0, [x0]
     ca4:	str	x0, [sp, #72]
     ca8:	ldr	x0, [sp, #72]
     cac:	cmp	x0, #0x0
     cb0:	b.ne	c24 <grub_enter_normal_mode+0x2ec>  // b.any
     cb4:	ldr	x0, [sp, #56]
     cb8:	bl	0 <grub_free>
     cbc:	mov	w0, #0x0                   	// #0
     cc0:	ldp	x29, x30, [sp], #80
     cc4:	ret
	...
     cf8:	stp	x29, x30, [sp, #-64]!
     cfc:	mov	x29, sp
     d00:	str	x0, [sp, #24]
     d04:	str	w1, [sp, #20]
     d08:	str	w2, [sp, #16]
     d0c:	ldr	w0, [sp, #20]
     d10:	cmp	w0, #0x0
     d14:	b.eq	d48 <grub_enter_normal_mode+0x410>  // b.none
     d18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     d1c:	add	x0, x0, #0x0
     d20:	ldr	x0, [x0]
     d24:	str	x0, [sp, #48]
     d28:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     d2c:	add	x0, x0, #0x0
     d30:	ldr	x0, [x0]
     d34:	ldr	x1, [x0]
     d38:	ldr	x0, [sp, #48]
     d3c:	blr	x1
     d40:	str	x0, [sp, #56]
     d44:	b	d74 <grub_enter_normal_mode+0x43c>
     d48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     d4c:	add	x0, x0, #0x0
     d50:	ldr	x0, [x0]
     d54:	str	x0, [sp, #40]
     d58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     d5c:	add	x0, x0, #0x0
     d60:	ldr	x0, [x0]
     d64:	ldr	x1, [x0]
     d68:	ldr	x0, [sp, #40]
     d6c:	blr	x1
     d70:	str	x0, [sp, #56]
     d74:	ldr	x0, [sp, #56]
     d78:	cmp	x0, #0x0
     d7c:	b.ne	d94 <grub_enter_normal_mode+0x45c>  // b.any
     d80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     d84:	add	x0, x0, #0x0
     d88:	ldr	x0, [x0]
     d8c:	ldr	w0, [x0]
     d90:	b	dfc <grub_enter_normal_mode+0x4c4>
     d94:	ldr	x0, [sp, #56]
     d98:	bl	2638 <grub_cmdline_get>
     d9c:	mov	x1, x0
     da0:	ldr	x0, [sp, #24]
     da4:	str	x1, [x0]
     da8:	ldr	x0, [sp, #24]
     dac:	ldr	x0, [x0]
     db0:	cmp	x0, #0x0
     db4:	b.eq	dc0 <grub_enter_normal_mode+0x488>  // b.none
     db8:	mov	w0, #0x0                   	// #0
     dbc:	b	dfc <grub_enter_normal_mode+0x4c4>
     dc0:	ldr	w0, [sp, #20]
     dc4:	cmp	w0, #0x0
     dc8:	b.ne	dd8 <grub_enter_normal_mode+0x4a0>  // b.any
     dcc:	ldr	w0, [sp, #16]
     dd0:	cmp	w0, #0x0
     dd4:	b.eq	d94 <grub_enter_normal_mode+0x45c>  // b.none
     dd8:	ldr	x0, [sp, #24]
     ddc:	ldr	x0, [x0]
     de0:	bl	0 <grub_free>
     de4:	ldr	x0, [sp, #24]
     de8:	str	xzr, [x0]
     dec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     df0:	add	x0, x0, #0x0
     df4:	ldr	x0, [x0]
     df8:	ldr	w0, [x0]
     dfc:	ldp	x29, x30, [sp], #64
     e00:	ret
     e04:	nop
	...
     e28:	stp	x29, x30, [sp, #-48]!
     e2c:	mov	x29, sp
     e30:	str	x0, [sp, #40]
     e34:	str	w1, [sp, #36]
     e38:	str	x2, [sp, #24]
     e3c:	mov	w2, #0x0                   	// #0
     e40:	ldr	w1, [sp, #36]
     e44:	ldr	x0, [sp, #40]
     e48:	bl	cf8 <grub_enter_normal_mode+0x3c0>
     e4c:	ldp	x29, x30, [sp], #48
     e50:	ret

0000000000000e54 <grub_cmdline_run>:
     e54:	stp	x29, x30, [sp, #-48]!
     e58:	mov	x29, sp
     e5c:	str	w0, [sp, #28]
     e60:	str	w1, [sp, #24]
     e64:	str	wzr, [sp, #44]
     e68:	mov	x0, #0x0                   	// #0
     e6c:	bl	4170 <grub_auth_check_authentication>
     e70:	str	w0, [sp, #44]
     e74:	ldr	w0, [sp, #44]
     e78:	cmp	w0, #0x0
     e7c:	b.eq	e8c <grub_cmdline_run+0x38>  // b.none
     e80:	ldr	w0, [sp, #24]
     e84:	cmp	w0, #0x0
     e88:	b.ne	e68 <grub_cmdline_run+0x14>  // b.any
     e8c:	ldr	w0, [sp, #44]
     e90:	cmp	w0, #0x0
     e94:	b.eq	eb0 <grub_cmdline_run+0x5c>  // b.none
     e98:	bl	0 <grub_print_error>
     e9c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     ea0:	add	x0, x0, #0x0
     ea4:	ldr	x0, [x0]
     ea8:	str	wzr, [x0]
     eac:	b	f38 <grub_cmdline_run+0xe4>
     eb0:	ldr	w0, [sp, #28]
     eb4:	bl	b58 <grub_enter_normal_mode+0x220>
     eb8:	str	xzr, [sp, #32]
     ebc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     ec0:	add	x0, x0, #0x0
     ec4:	ldr	x0, [x0]
     ec8:	ldr	w0, [x0]
     ecc:	cmp	w0, #0x0
     ed0:	b.ne	f2c <grub_cmdline_run+0xd8>  // b.any
     ed4:	bl	0 <grub_print_error>
     ed8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     edc:	add	x0, x0, #0x0
     ee0:	ldr	x0, [x0]
     ee4:	str	wzr, [x0]
     ee8:	add	x0, sp, #0x20
     eec:	ldr	w2, [sp, #28]
     ef0:	mov	w1, #0x0                   	// #0
     ef4:	bl	cf8 <grub_enter_normal_mode+0x3c0>
     ef8:	ldr	x0, [sp, #32]
     efc:	cmp	x0, #0x0
     f00:	b.eq	f34 <grub_cmdline_run+0xe0>  // b.none
     f04:	ldr	x3, [sp, #32]
     f08:	mov	x2, #0x0                   	// #0
     f0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     f10:	add	x0, x0, #0x0
     f14:	ldr	x1, [x0]
     f18:	mov	x0, x3
     f1c:	bl	16b58 <grub_normal_parse_line>
     f20:	ldr	x0, [sp, #32]
     f24:	bl	0 <grub_free>
     f28:	b	eb8 <grub_cmdline_run+0x64>
     f2c:	nop
     f30:	b	f38 <grub_cmdline_run+0xe4>
     f34:	nop
     f38:	ldp	x29, x30, [sp], #48
     f3c:	ret
	...
     f58:	stp	x29, x30, [sp, #-32]!
     f5c:	mov	x29, sp
     f60:	str	x0, [sp, #24]
     f64:	str	x1, [sp, #16]
     f68:	ldr	x0, [sp, #16]
     f6c:	ldrb	w0, [x0]
     f70:	cmp	w0, #0x31
     f74:	cset	w0, eq  // eq = none
     f78:	and	w0, w0, #0xff
     f7c:	bl	f9f0 <grub_set_more>
     f80:	ldr	x0, [sp, #16]
     f84:	bl	0 <grub_strdup>
     f88:	ldp	x29, x30, [sp], #32
     f8c:	ret
     f90:	stp	x29, x30, [sp, #-48]!
     f94:	mov	x29, sp
     f98:	str	x0, [sp, #40]
     f9c:	str	w1, [sp, #36]
     fa0:	str	x2, [sp, #24]
     fa4:	bl	11efc <grub_cls>
     fa8:	mov	w0, #0x0                   	// #0
     fac:	ldp	x29, x30, [sp], #48
     fb0:	ret

0000000000000fb4 <grub_mod_init>:
     fb4:	stp	x29, x30, [sp, #-48]!
     fb8:	mov	x29, sp
     fbc:	str	x0, [sp, #24]
     fc0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     fc4:	add	x0, x0, #0x0
     fc8:	ldr	x0, [x0]
     fcc:	bl	0 <grub_dl_load>
     fd0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     fd4:	add	x0, x0, #0x0
     fd8:	ldr	x0, [x0]
     fdc:	str	wzr, [x0]
     fe0:	bl	43c8 <grub_normal_auth_init>
     fe4:	bl	12588 <grub_context_init>
     fe8:	bl	16bc0 <grub_script_init>
     fec:	bl	1ca40 <grub_menu_init>
     ff0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
     ff4:	add	x0, x0, #0x0
     ff8:	ldr	x0, [x0]
     ffc:	ldr	x1, [x0]
    1000:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1004:	add	x0, x0, #0x0
    1008:	ldr	x0, [x0]
    100c:	str	x1, [x0]
    1010:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1014:	add	x0, x0, #0x0
    1018:	ldr	x0, [x0]
    101c:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    1020:	add	x1, x1, #0x0
    1024:	ldr	x1, [x1]
    1028:	str	x1, [x0]
    102c:	ldr	x0, [sp, #24]
    1030:	cmp	x0, #0x0
    1034:	b.eq	1040 <grub_mod_init+0x8c>  // b.none
    1038:	ldr	x0, [sp, #24]
    103c:	bl	0 <grub_dl_ref>
    1040:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1044:	add	x0, x0, #0x0
    1048:	ldr	x3, [x0]
    104c:	mov	x2, #0x0                   	// #0
    1050:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1054:	add	x0, x0, #0x0
    1058:	ldr	x1, [x0]
    105c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1060:	add	x0, x0, #0x0
    1064:	ldr	x0, [x0]
    1068:	bl	130 <grub_normal_free_menu-0x38>
    106c:	mov	x1, x0
    1070:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1074:	add	x0, x0, #0x0
    1078:	ldr	x0, [x0]
    107c:	str	x1, [x0]
    1080:	mov	w0, #0x32                  	// #50
    1084:	bl	1588 <grub_set_history>
    1088:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    108c:	add	x0, x0, #0x0
    1090:	ldr	x2, [x0]
    1094:	mov	x1, #0x0                   	// #0
    1098:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    109c:	add	x0, x0, #0x0
    10a0:	ldr	x0, [x0]
    10a4:	bl	0 <grub_register_variable_hook>
    10a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    10ac:	add	x0, x0, #0x0
    10b0:	ldr	x0, [x0]
    10b4:	bl	0 <grub_env_export>
    10b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    10bc:	add	x0, x0, #0x0
    10c0:	ldr	x3, [x0]
    10c4:	mov	x2, #0x0                   	// #0
    10c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    10cc:	add	x0, x0, #0x0
    10d0:	ldr	x1, [x0]
    10d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    10d8:	add	x0, x0, #0x0
    10dc:	ldr	x0, [x0]
    10e0:	bl	130 <grub_normal_free_menu-0x38>
    10e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    10e8:	add	x0, x0, #0x0
    10ec:	ldr	x3, [x0]
    10f0:	mov	x2, #0x0                   	// #0
    10f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    10f8:	add	x0, x0, #0x0
    10fc:	ldr	x1, [x0]
    1100:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1104:	add	x0, x0, #0x0
    1108:	ldr	x0, [x0]
    110c:	bl	130 <grub_normal_free_menu-0x38>
    1110:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1114:	add	x0, x0, #0x0
    1118:	ldr	x2, [x0]
    111c:	mov	x1, #0x0                   	// #0
    1120:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1124:	add	x0, x0, #0x0
    1128:	ldr	x0, [x0]
    112c:	bl	0 <grub_register_variable_hook>
    1130:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1134:	add	x0, x0, #0x0
    1138:	ldr	x2, [x0]
    113c:	mov	x1, #0x0                   	// #0
    1140:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1144:	add	x0, x0, #0x0
    1148:	ldr	x0, [x0]
    114c:	bl	0 <grub_register_variable_hook>
    1150:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1154:	add	x0, x0, #0x0
    1158:	ldr	x0, [x0]
    115c:	bl	0 <grub_env_export>
    1160:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1164:	add	x0, x0, #0x0
    1168:	ldr	x0, [x0]
    116c:	bl	0 <grub_env_export>
    1170:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1174:	add	x0, x0, #0x0
    1178:	ldr	x1, [x0]
    117c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1180:	add	x0, x0, #0x0
    1184:	ldr	x0, [x0]
    1188:	bl	0 <grub_env_set>
    118c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1190:	add	x0, x0, #0x0
    1194:	ldr	x1, [x0]
    1198:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    119c:	add	x0, x0, #0x0
    11a0:	ldr	x0, [x0]
    11a4:	bl	0 <grub_env_set>
    11a8:	str	wzr, [sp, #44]
    11ac:	b	11fc <grub_mod_init+0x248>
    11b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    11b4:	add	x0, x0, #0x0
    11b8:	ldr	x0, [x0]
    11bc:	ldr	w1, [sp, #44]
    11c0:	ldr	x2, [x0, x1, lsl #3]
    11c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    11c8:	add	x0, x0, #0x0
    11cc:	ldr	x1, [x0]
    11d0:	mov	x0, x2
    11d4:	bl	0 <grub_env_set>
    11d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    11dc:	add	x0, x0, #0x0
    11e0:	ldr	x0, [x0]
    11e4:	ldr	w1, [sp, #44]
    11e8:	ldr	x0, [x0, x1, lsl #3]
    11ec:	bl	0 <grub_env_export>
    11f0:	ldr	w0, [sp, #44]
    11f4:	add	w0, w0, #0x1
    11f8:	str	w0, [sp, #44]
    11fc:	ldr	w0, [sp, #44]
    1200:	cmp	w0, #0x9
    1204:	b.ls	11b0 <grub_mod_init+0x1fc>  // b.plast
    1208:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    120c:	add	x0, x0, #0x0
    1210:	ldr	x1, [x0]
    1214:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1218:	add	x0, x0, #0x0
    121c:	ldr	x0, [x0]
    1220:	bl	0 <grub_env_set>
    1224:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1228:	add	x0, x0, #0x0
    122c:	ldr	x0, [x0]
    1230:	bl	0 <grub_env_export>
    1234:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1238:	add	x0, x0, #0x0
    123c:	ldr	x1, [x0]
    1240:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1244:	add	x0, x0, #0x0
    1248:	ldr	x0, [x0]
    124c:	bl	0 <grub_env_set>
    1250:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1254:	add	x0, x0, #0x0
    1258:	ldr	x0, [x0]
    125c:	bl	0 <grub_env_export>
    1260:	nop
    1264:	ldp	x29, x30, [sp], #48
    1268:	ret
    126c:	nop
	...

0000000000001358 <grub_mod_fini>:
    1358:	stp	x29, x30, [sp, #-16]!
    135c:	mov	x29, sp
    1360:	bl	12610 <grub_context_fini>
    1364:	bl	16de8 <grub_script_fini>
    1368:	bl	1cb50 <grub_menu_fini>
    136c:	bl	4450 <grub_normal_auth_fini>
    1370:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1374:	add	x0, x0, #0x0
    1378:	ldr	x0, [x0]
    137c:	ldr	x1, [x0]
    1380:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1384:	add	x0, x0, #0x0
    1388:	ldr	x0, [x0]
    138c:	str	x1, [x0]
    1390:	mov	w0, #0x0                   	// #0
    1394:	bl	1588 <grub_set_history>
    1398:	mov	x2, #0x0                   	// #0
    139c:	mov	x1, #0x0                   	// #0
    13a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    13a4:	add	x0, x0, #0x0
    13a8:	ldr	x0, [x0]
    13ac:	bl	0 <grub_register_variable_hook>
    13b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    13b4:	add	x0, x0, #0x0
    13b8:	ldr	x0, [x0]
    13bc:	str	xzr, [x0]
    13c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    13c4:	add	x0, x0, #0x0
    13c8:	ldr	x0, [x0]
    13cc:	ldr	x0, [x0]
    13d0:	bl	0 <grub_unregister_command>
    13d4:	nop
    13d8:	ldp	x29, x30, [sp], #16
    13dc:	ret
	...
    1408:	stp	x29, x30, [sp, #-48]!
    140c:	mov	x29, sp
    1410:	str	x0, [sp, #40]
    1414:	str	x1, [sp, #32]
    1418:	str	x2, [sp, #24]
    141c:	ldr	x2, [sp, #24]
    1420:	ldr	x1, [sp, #32]
    1424:	ldr	x0, [sp, #40]
    1428:	bl	0 <grub_memmove>
    142c:	ldp	x29, x30, [sp], #48
    1430:	ret
    1434:	sub	sp, sp, #0x10
    1438:	str	w0, [sp, #12]
    143c:	ldr	w0, [sp, #12]
    1440:	cmp	w0, #0x1f
    1444:	b.le	145c <grub_mod_fini+0x104>
    1448:	ldr	w0, [sp, #12]
    144c:	cmp	w0, #0x7e
    1450:	b.gt	145c <grub_mod_fini+0x104>
    1454:	mov	w0, #0x1                   	// #1
    1458:	b	1460 <grub_mod_fini+0x108>
    145c:	mov	w0, #0x0                   	// #0
    1460:	add	sp, sp, #0x10
    1464:	ret
    1468:	stp	x29, x30, [sp, #-48]!
    146c:	mov	x29, sp
    1470:	str	x0, [sp, #24]
    1474:	mov	w0, #0xa                   	// #10
    1478:	strh	w0, [sp, #40]
    147c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1480:	add	x0, x0, #0x0
    1484:	ldr	x0, [x0]
    1488:	ldr	x1, [x0]
    148c:	ldr	x0, [sp, #24]
    1490:	blr	x1
    1494:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1498:	add	x0, x0, #0x0
    149c:	ldr	x0, [x0]
    14a0:	ldr	x1, [x0]
    14a4:	add	x0, sp, #0x28
    14a8:	blr	x1
    14ac:	mov	w0, #0x1                   	// #1
    14b0:	ldp	x29, x30, [sp], #48
    14b4:	ret
	...
    14c0:	stp	x29, x30, [sp, #-32]!
    14c4:	mov	x29, sp
    14c8:	str	x0, [sp, #24]
    14cc:	ldr	x0, [sp, #24]
    14d0:	ldr	x1, [x0, #56]
    14d4:	ldr	x0, [sp, #24]
    14d8:	blr	x1
    14dc:	and	w0, w0, #0xffff
    14e0:	cmp	w0, #0x0
    14e4:	b.eq	14ec <grub_mod_fini+0x194>  // b.none
    14e8:	b	14f0 <grub_mod_fini+0x198>
    14ec:	mov	w0, #0x50                  	// #80
    14f0:	ldp	x29, x30, [sp], #32
    14f4:	ret
    14f8:	stp	x29, x30, [sp, #-32]!
    14fc:	mov	x29, sp
    1500:	str	x0, [sp, #24]
    1504:	ldr	x0, [sp, #24]
    1508:	ldr	x1, [x0, #56]
    150c:	ldr	x0, [sp, #24]
    1510:	blr	x1
    1514:	lsr	w0, w0, #16
    1518:	and	w0, w0, #0xffff
    151c:	cmp	w0, #0x0
    1520:	b.eq	1528 <grub_mod_fini+0x1d0>  // b.none
    1524:	b	152c <grub_mod_fini+0x1d4>
    1528:	mov	w0, #0x18                  	// #24
    152c:	ldp	x29, x30, [sp], #32
    1530:	ret
    1534:	stp	x29, x30, [sp, #-32]!
    1538:	mov	x29, sp
    153c:	str	x0, [sp, #24]
    1540:	ldr	x0, [sp, #24]
    1544:	ldr	x1, [x0, #64]
    1548:	ldr	x0, [sp, #24]
    154c:	blr	x1
    1550:	ldp	x29, x30, [sp], #32
    1554:	ret
    1558:	stp	x29, x30, [sp, #-32]!
    155c:	mov	x29, sp
    1560:	str	x0, [sp, #24]
    1564:	str	w1, [sp, #16]
    1568:	ldr	x0, [sp, #24]
    156c:	ldr	x2, [x0, #72]
    1570:	ldr	w1, [sp, #16]
    1574:	ldr	x0, [sp, #24]
    1578:	blr	x2
    157c:	nop
    1580:	ldp	x29, x30, [sp], #32
    1584:	ret

0000000000001588 <grub_set_history>:
    1588:	stp	x29, x30, [sp, #-64]!
    158c:	mov	x29, sp
    1590:	str	w0, [sp, #28]
    1594:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1598:	add	x0, x0, #0x0
    159c:	ldr	x0, [x0]
    15a0:	ldr	x0, [x0]
    15a4:	str	x0, [sp, #40]
    15a8:	ldrsw	x0, [sp, #28]
    15ac:	lsl	x0, x0, #3
    15b0:	bl	0 <grub_malloc>
    15b4:	mov	x1, x0
    15b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    15bc:	add	x0, x0, #0x0
    15c0:	ldr	x0, [x0]
    15c4:	str	x1, [x0]
    15c8:	ldr	x0, [sp, #40]
    15cc:	cmp	x0, #0x0
    15d0:	b.eq	18b8 <grub_set_history+0x330>  // b.none
    15d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    15d8:	add	x0, x0, #0x0
    15dc:	ldr	x0, [x0]
    15e0:	ldr	w0, [x0]
    15e4:	ldr	w1, [sp, #28]
    15e8:	cmp	w1, w0
    15ec:	b.ge	1730 <grub_set_history+0x1a8>  // b.tcont
    15f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    15f4:	add	x0, x0, #0x0
    15f8:	ldr	x0, [x0]
    15fc:	ldr	w1, [x0]
    1600:	ldr	w0, [sp, #28]
    1604:	sub	w0, w1, w0
    1608:	sxtw	x0, w0
    160c:	str	x0, [sp, #32]
    1610:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1614:	add	x0, x0, #0x0
    1618:	ldr	x0, [x0]
    161c:	ldr	w1, [sp, #28]
    1620:	str	w1, [x0]
    1624:	mov	x0, #0x1                   	// #1
    1628:	str	x0, [sp, #56]
    162c:	b	16a0 <grub_set_history+0x118>
    1630:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1634:	add	x0, x0, #0x0
    1638:	ldr	x0, [x0]
    163c:	ldr	w0, [x0]
    1640:	sxtw	x1, w0
    1644:	ldr	x0, [sp, #56]
    1648:	sub	x0, x1, x0
    164c:	str	x0, [sp, #48]
    1650:	ldr	x0, [sp, #48]
    1654:	cmp	x0, #0x0
    1658:	b.ge	167c <grub_set_history+0xf4>  // b.tcont
    165c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1660:	add	x0, x0, #0x0
    1664:	ldr	x0, [x0]
    1668:	ldr	w0, [x0]
    166c:	sxtw	x0, w0
    1670:	ldr	x1, [sp, #48]
    1674:	add	x0, x1, x0
    1678:	str	x0, [sp, #48]
    167c:	ldr	x0, [sp, #48]
    1680:	lsl	x0, x0, #3
    1684:	ldr	x1, [sp, #40]
    1688:	add	x0, x1, x0
    168c:	ldr	x0, [x0]
    1690:	bl	0 <grub_free>
    1694:	ldr	x0, [sp, #56]
    1698:	add	x0, x0, #0x1
    169c:	str	x0, [sp, #56]
    16a0:	ldr	x0, [sp, #32]
    16a4:	add	x0, x0, #0x1
    16a8:	ldr	x1, [sp, #56]
    16ac:	cmp	x1, x0
    16b0:	b.cc	1630 <grub_set_history+0xa8>  // b.lo, b.ul, b.last
    16b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    16b8:	add	x0, x0, #0x0
    16bc:	ldr	x0, [x0]
    16c0:	ldr	w0, [x0]
    16c4:	mov	w1, w0
    16c8:	ldr	x0, [sp, #32]
    16cc:	sub	w0, w1, w0
    16d0:	mov	w1, w0
    16d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    16d8:	add	x0, x0, #0x0
    16dc:	ldr	x0, [x0]
    16e0:	str	w1, [x0]
    16e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    16e8:	add	x0, x0, #0x0
    16ec:	ldr	x0, [x0]
    16f0:	ldr	w0, [x0]
    16f4:	cmp	w0, #0x0
    16f8:	b.ge	1730 <grub_set_history+0x1a8>  // b.tcont
    16fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1700:	add	x0, x0, #0x0
    1704:	ldr	x0, [x0]
    1708:	ldr	w1, [x0]
    170c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1710:	add	x0, x0, #0x0
    1714:	ldr	x0, [x0]
    1718:	ldr	w0, [x0]
    171c:	add	w1, w1, w0
    1720:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1724:	add	x0, x0, #0x0
    1728:	ldr	x0, [x0]
    172c:	str	w1, [x0]
    1730:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1734:	add	x0, x0, #0x0
    1738:	ldr	x0, [x0]
    173c:	ldr	w1, [x0]
    1740:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1744:	add	x0, x0, #0x0
    1748:	ldr	x0, [x0]
    174c:	ldr	w0, [x0]
    1750:	cmp	w1, w0
    1754:	b.ge	17c8 <grub_set_history+0x240>  // b.tcont
    1758:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    175c:	add	x0, x0, #0x0
    1760:	ldr	x0, [x0]
    1764:	ldr	x3, [x0]
    1768:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    176c:	add	x0, x0, #0x0
    1770:	ldr	x0, [x0]
    1774:	ldr	w0, [x0]
    1778:	sxtw	x0, w0
    177c:	lsl	x0, x0, #3
    1780:	ldr	x1, [sp, #40]
    1784:	add	x4, x1, x0
    1788:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    178c:	add	x0, x0, #0x0
    1790:	ldr	x0, [x0]
    1794:	ldr	w1, [x0]
    1798:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    179c:	add	x0, x0, #0x0
    17a0:	ldr	x0, [x0]
    17a4:	ldr	w0, [x0]
    17a8:	sub	w0, w1, w0
    17ac:	sxtw	x0, w0
    17b0:	lsl	x0, x0, #3
    17b4:	mov	x2, x0
    17b8:	mov	x1, x4
    17bc:	mov	x0, x3
    17c0:	bl	0 <grub_memmove>
    17c4:	b	18b8 <grub_set_history+0x330>
    17c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    17cc:	add	x0, x0, #0x0
    17d0:	ldr	x0, [x0]
    17d4:	ldr	w0, [x0]
    17d8:	cmp	w0, #0x0
    17dc:	b.eq	18b8 <grub_set_history+0x330>  // b.none
    17e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    17e4:	add	x0, x0, #0x0
    17e8:	ldr	x0, [x0]
    17ec:	ldr	x3, [x0]
    17f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    17f4:	add	x0, x0, #0x0
    17f8:	ldr	x0, [x0]
    17fc:	ldr	w0, [x0]
    1800:	sxtw	x0, w0
    1804:	lsl	x0, x0, #3
    1808:	ldr	x1, [sp, #40]
    180c:	add	x4, x1, x0
    1810:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1814:	add	x0, x0, #0x0
    1818:	ldr	x0, [x0]
    181c:	ldr	w1, [x0]
    1820:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1824:	add	x0, x0, #0x0
    1828:	ldr	x0, [x0]
    182c:	ldr	w0, [x0]
    1830:	sub	w0, w1, w0
    1834:	sxtw	x0, w0
    1838:	lsl	x0, x0, #3
    183c:	mov	x2, x0
    1840:	mov	x1, x4
    1844:	mov	x0, x3
    1848:	bl	0 <grub_memmove>
    184c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1850:	add	x0, x0, #0x0
    1854:	ldr	x0, [x0]
    1858:	ldr	x1, [x0]
    185c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1860:	add	x0, x0, #0x0
    1864:	ldr	x0, [x0]
    1868:	ldr	w0, [x0]
    186c:	sxtw	x2, w0
    1870:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1874:	add	x0, x0, #0x0
    1878:	ldr	x0, [x0]
    187c:	ldr	w0, [x0]
    1880:	sxtw	x0, w0
    1884:	sub	x0, x2, x0
    1888:	lsl	x0, x0, #3
    188c:	add	x3, x1, x0
    1890:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1894:	add	x0, x0, #0x0
    1898:	ldr	x0, [x0]
    189c:	ldr	w0, [x0]
    18a0:	sxtw	x0, w0
    18a4:	lsl	x0, x0, #3
    18a8:	mov	x2, x0
    18ac:	ldr	x1, [sp, #40]
    18b0:	mov	x0, x3
    18b4:	bl	0 <grub_memmove>
    18b8:	ldr	x0, [sp, #40]
    18bc:	bl	0 <grub_free>
    18c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    18c4:	add	x0, x0, #0x0
    18c8:	ldr	x0, [x0]
    18cc:	ldr	w1, [sp, #28]
    18d0:	str	w1, [x0]
    18d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    18d8:	add	x0, x0, #0x0
    18dc:	ldr	x0, [x0]
    18e0:	str	wzr, [x0]
    18e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    18e8:	add	x0, x0, #0x0
    18ec:	ldr	x0, [x0]
    18f0:	ldr	w1, [x0]
    18f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    18f8:	add	x0, x0, #0x0
    18fc:	ldr	x0, [x0]
    1900:	str	w1, [x0]
    1904:	mov	w0, #0x0                   	// #0
    1908:	ldp	x29, x30, [sp], #64
    190c:	ret
	...
    1938:	sub	sp, sp, #0x10
    193c:	str	w0, [sp, #12]
    1940:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1944:	add	x0, x0, #0x0
    1948:	ldr	x0, [x0]
    194c:	ldr	w0, [x0]
    1950:	mov	w1, w0
    1954:	ldr	w0, [sp, #12]
    1958:	add	w0, w1, w0
    195c:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    1960:	add	x1, x1, #0x0
    1964:	ldr	x1, [x1]
    1968:	ldr	w1, [x1]
    196c:	udiv	w2, w0, w1
    1970:	mul	w1, w2, w1
    1974:	sub	w0, w0, w1
    1978:	str	w0, [sp, #12]
    197c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1980:	add	x0, x0, #0x0
    1984:	ldr	x0, [x0]
    1988:	ldr	x1, [x0]
    198c:	ldr	w0, [sp, #12]
    1990:	lsl	x0, x0, #3
    1994:	add	x0, x1, x0
    1998:	ldr	x0, [x0]
    199c:	add	sp, sp, #0x10
    19a0:	ret
    19a4:	nop
	...
    19c0:	sub	sp, sp, #0x20
    19c4:	str	x0, [sp, #8]
    19c8:	ldr	x0, [sp, #8]
    19cc:	str	x0, [sp, #24]
    19d0:	b	19e0 <grub_set_history+0x458>
    19d4:	ldr	x0, [sp, #24]
    19d8:	add	x0, x0, #0x4
    19dc:	str	x0, [sp, #24]
    19e0:	ldr	x0, [sp, #24]
    19e4:	ldr	w0, [x0]
    19e8:	cmp	w0, #0x0
    19ec:	b.ne	19d4 <grub_set_history+0x44c>  // b.any
    19f0:	ldr	x1, [sp, #24]
    19f4:	ldr	x0, [sp, #8]
    19f8:	sub	x0, x1, x0
    19fc:	asr	x0, x0, #2
    1a00:	add	sp, sp, #0x20
    1a04:	ret
    1a08:	stp	x29, x30, [sp, #-64]!
    1a0c:	mov	x29, sp
    1a10:	str	x19, [sp, #16]
    1a14:	str	w0, [sp, #60]
    1a18:	str	x1, [sp, #48]
    1a1c:	str	x2, [sp, #40]
    1a20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1a24:	add	x0, x0, #0x0
    1a28:	ldr	x0, [x0]
    1a2c:	ldr	x1, [x0]
    1a30:	ldrsw	x0, [sp, #60]
    1a34:	lsl	x0, x0, #3
    1a38:	add	x0, x1, x0
    1a3c:	ldr	x0, [x0]
    1a40:	bl	0 <grub_free>
    1a44:	ldr	x0, [sp, #40]
    1a48:	add	x0, x0, #0x1
    1a4c:	lsl	x2, x0, #2
    1a50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1a54:	add	x0, x0, #0x0
    1a58:	ldr	x0, [x0]
    1a5c:	ldr	x1, [x0]
    1a60:	ldrsw	x0, [sp, #60]
    1a64:	lsl	x0, x0, #3
    1a68:	add	x19, x1, x0
    1a6c:	mov	x0, x2
    1a70:	bl	0 <grub_malloc>
    1a74:	str	x0, [x19]
    1a78:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1a7c:	add	x0, x0, #0x0
    1a80:	ldr	x0, [x0]
    1a84:	ldr	x1, [x0]
    1a88:	ldrsw	x0, [sp, #60]
    1a8c:	lsl	x0, x0, #3
    1a90:	add	x0, x1, x0
    1a94:	ldr	x0, [x0]
    1a98:	cmp	x0, #0x0
    1a9c:	b.ne	1ab8 <grub_set_history+0x530>  // b.any
    1aa0:	bl	0 <grub_print_error>
    1aa4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1aa8:	add	x0, x0, #0x0
    1aac:	ldr	x0, [x0]
    1ab0:	str	wzr, [x0]
    1ab4:	b	1b20 <grub_set_history+0x598>
    1ab8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1abc:	add	x0, x0, #0x0
    1ac0:	ldr	x0, [x0]
    1ac4:	ldr	x1, [x0]
    1ac8:	ldrsw	x0, [sp, #60]
    1acc:	lsl	x0, x0, #3
    1ad0:	add	x0, x1, x0
    1ad4:	ldr	x3, [x0]
    1ad8:	ldr	x0, [sp, #40]
    1adc:	lsl	x0, x0, #2
    1ae0:	mov	x2, x0
    1ae4:	ldr	x1, [sp, #48]
    1ae8:	mov	x0, x3
    1aec:	bl	1408 <grub_mod_fini+0xb0>
    1af0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1af4:	add	x0, x0, #0x0
    1af8:	ldr	x0, [x0]
    1afc:	ldr	x1, [x0]
    1b00:	ldrsw	x0, [sp, #60]
    1b04:	lsl	x0, x0, #3
    1b08:	add	x0, x1, x0
    1b0c:	ldr	x1, [x0]
    1b10:	ldr	x0, [sp, #40]
    1b14:	lsl	x0, x0, #2
    1b18:	add	x0, x1, x0
    1b1c:	str	wzr, [x0]
    1b20:	ldr	x19, [sp, #16]
    1b24:	ldp	x29, x30, [sp], #64
    1b28:	ret
    1b2c:	nop
	...
    1b40:	stp	x29, x30, [sp, #-32]!
    1b44:	mov	x29, sp
    1b48:	str	x0, [sp, #24]
    1b4c:	str	x1, [sp, #16]
    1b50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1b54:	add	x0, x0, #0x0
    1b58:	ldr	x0, [x0]
    1b5c:	ldr	w1, [x0]
    1b60:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1b64:	add	x0, x0, #0x0
    1b68:	ldr	x0, [x0]
    1b6c:	ldr	w0, [x0]
    1b70:	cmp	w1, w0
    1b74:	b.lt	1c20 <grub_set_history+0x698>  // b.tstop
    1b78:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1b7c:	add	x0, x0, #0x0
    1b80:	ldr	x0, [x0]
    1b84:	ldr	w0, [x0]
    1b88:	sub	w1, w0, #0x1
    1b8c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1b90:	add	x0, x0, #0x0
    1b94:	ldr	x0, [x0]
    1b98:	str	w1, [x0]
    1b9c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1ba0:	add	x0, x0, #0x0
    1ba4:	ldr	x0, [x0]
    1ba8:	ldr	w0, [x0]
    1bac:	cmp	w0, #0x0
    1bb0:	b.ge	1be8 <grub_set_history+0x660>  // b.tcont
    1bb4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1bb8:	add	x0, x0, #0x0
    1bbc:	ldr	x0, [x0]
    1bc0:	ldr	w1, [x0]
    1bc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1bc8:	add	x0, x0, #0x0
    1bcc:	ldr	x0, [x0]
    1bd0:	ldr	w0, [x0]
    1bd4:	add	w1, w1, w0
    1bd8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1bdc:	add	x0, x0, #0x0
    1be0:	ldr	x0, [x0]
    1be4:	str	w1, [x0]
    1be8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1bec:	add	x0, x0, #0x0
    1bf0:	ldr	x0, [x0]
    1bf4:	ldr	x1, [x0]
    1bf8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1bfc:	add	x0, x0, #0x0
    1c00:	ldr	x0, [x0]
    1c04:	ldr	w0, [x0]
    1c08:	sxtw	x0, w0
    1c0c:	lsl	x0, x0, #3
    1c10:	add	x0, x1, x0
    1c14:	ldr	x0, [x0]
    1c18:	bl	0 <grub_free>
    1c1c:	b	1c44 <grub_set_history+0x6bc>
    1c20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1c24:	add	x0, x0, #0x0
    1c28:	ldr	x0, [x0]
    1c2c:	ldr	w0, [x0]
    1c30:	add	w1, w0, #0x1
    1c34:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1c38:	add	x0, x0, #0x0
    1c3c:	ldr	x0, [x0]
    1c40:	str	w1, [x0]
    1c44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1c48:	add	x0, x0, #0x0
    1c4c:	ldr	x0, [x0]
    1c50:	ldr	w0, [x0]
    1c54:	sub	w1, w0, #0x1
    1c58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1c5c:	add	x0, x0, #0x0
    1c60:	ldr	x0, [x0]
    1c64:	str	w1, [x0]
    1c68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1c6c:	add	x0, x0, #0x0
    1c70:	ldr	x0, [x0]
    1c74:	ldr	w0, [x0]
    1c78:	cmp	w0, #0x0
    1c7c:	b.ge	1cb4 <grub_set_history+0x72c>  // b.tcont
    1c80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1c84:	add	x0, x0, #0x0
    1c88:	ldr	x0, [x0]
    1c8c:	ldr	w1, [x0]
    1c90:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1c94:	add	x0, x0, #0x0
    1c98:	ldr	x0, [x0]
    1c9c:	ldr	w0, [x0]
    1ca0:	add	w1, w1, w0
    1ca4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1ca8:	add	x0, x0, #0x0
    1cac:	ldr	x0, [x0]
    1cb0:	str	w1, [x0]
    1cb4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1cb8:	add	x0, x0, #0x0
    1cbc:	ldr	x0, [x0]
    1cc0:	ldr	x1, [x0]
    1cc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1cc8:	add	x0, x0, #0x0
    1ccc:	ldr	x0, [x0]
    1cd0:	ldr	w0, [x0]
    1cd4:	sxtw	x0, w0
    1cd8:	lsl	x0, x0, #3
    1cdc:	add	x0, x1, x0
    1ce0:	str	xzr, [x0]
    1ce4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1ce8:	add	x0, x0, #0x0
    1cec:	ldr	x0, [x0]
    1cf0:	ldr	w0, [x0]
    1cf4:	ldr	x2, [sp, #16]
    1cf8:	ldr	x1, [sp, #24]
    1cfc:	bl	1a08 <grub_set_history+0x480>
    1d00:	nop
    1d04:	ldp	x29, x30, [sp], #32
    1d08:	ret
    1d0c:	nop
	...
    1d38:	stp	x29, x30, [sp, #-48]!
    1d3c:	mov	x29, sp
    1d40:	str	w0, [sp, #44]
    1d44:	str	x1, [sp, #32]
    1d48:	str	x2, [sp, #24]
    1d4c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1d50:	add	x0, x0, #0x0
    1d54:	ldr	x0, [x0]
    1d58:	ldr	w0, [x0]
    1d5c:	mov	w1, w0
    1d60:	ldr	w0, [sp, #44]
    1d64:	add	w0, w1, w0
    1d68:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    1d6c:	add	x1, x1, #0x0
    1d70:	ldr	x1, [x1]
    1d74:	ldr	w1, [x1]
    1d78:	udiv	w2, w0, w1
    1d7c:	mul	w1, w2, w1
    1d80:	sub	w0, w0, w1
    1d84:	ldr	x2, [sp, #24]
    1d88:	ldr	x1, [sp, #32]
    1d8c:	bl	1a08 <grub_set_history+0x480>
    1d90:	nop
    1d94:	ldp	x29, x30, [sp], #48
    1d98:	ret
    1d9c:	nop
	...
    1db0:	stp	x29, x30, [sp, #-32]!
    1db4:	mov	x29, sp
    1db8:	str	x0, [sp, #24]
    1dbc:	str	w1, [sp, #20]
    1dc0:	str	w2, [sp, #16]
    1dc4:	ldr	w0, [sp, #16]
    1dc8:	cmp	w0, #0x0
    1dcc:	b.ne	1ecc <grub_set_history+0x944>  // b.any
    1dd0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1dd4:	add	x0, x0, #0x0
    1dd8:	ldr	x0, [x0]
    1ddc:	bl	1468 <grub_mod_fini+0x110>
    1de0:	ldr	w0, [sp, #20]
    1de4:	cmp	w0, #0x4
    1de8:	b.eq	1e94 <grub_set_history+0x90c>  // b.none
    1dec:	ldr	w0, [sp, #20]
    1df0:	cmp	w0, #0x4
    1df4:	b.hi	1ea8 <grub_set_history+0x920>  // b.pmore
    1df8:	ldr	w0, [sp, #20]
    1dfc:	cmp	w0, #0x3
    1e00:	b.eq	1e6c <grub_set_history+0x8e4>  // b.none
    1e04:	ldr	w0, [sp, #20]
    1e08:	cmp	w0, #0x3
    1e0c:	b.hi	1ea8 <grub_set_history+0x920>  // b.pmore
    1e10:	ldr	w0, [sp, #20]
    1e14:	cmp	w0, #0x2
    1e18:	b.eq	1e80 <grub_set_history+0x8f8>  // b.none
    1e1c:	ldr	w0, [sp, #20]
    1e20:	cmp	w0, #0x2
    1e24:	b.hi	1ea8 <grub_set_history+0x920>  // b.pmore
    1e28:	ldr	w0, [sp, #20]
    1e2c:	cmp	w0, #0x0
    1e30:	b.eq	1e44 <grub_set_history+0x8bc>  // b.none
    1e34:	ldr	w0, [sp, #20]
    1e38:	cmp	w0, #0x1
    1e3c:	b.eq	1e58 <grub_set_history+0x8d0>  // b.none
    1e40:	b	1ea8 <grub_set_history+0x920>
    1e44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1e48:	add	x0, x0, #0x0
    1e4c:	ldr	x0, [x0]
    1e50:	bl	0 <grub_puts_>
    1e54:	b	1ebc <grub_set_history+0x934>
    1e58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1e5c:	add	x0, x0, #0x0
    1e60:	ldr	x0, [x0]
    1e64:	bl	0 <grub_puts_>
    1e68:	b	1ebc <grub_set_history+0x934>
    1e6c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1e70:	add	x0, x0, #0x0
    1e74:	ldr	x0, [x0]
    1e78:	bl	0 <grub_puts_>
    1e7c:	b	1ebc <grub_set_history+0x934>
    1e80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1e84:	add	x0, x0, #0x0
    1e88:	ldr	x0, [x0]
    1e8c:	bl	0 <grub_puts_>
    1e90:	b	1ebc <grub_set_history+0x934>
    1e94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1e98:	add	x0, x0, #0x0
    1e9c:	ldr	x0, [x0]
    1ea0:	bl	0 <grub_puts_>
    1ea4:	b	1ebc <grub_set_history+0x934>
    1ea8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1eac:	add	x0, x0, #0x0
    1eb0:	ldr	x0, [x0]
    1eb4:	bl	0 <grub_puts_>
    1eb8:	nop
    1ebc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1ec0:	add	x0, x0, #0x0
    1ec4:	ldr	x0, [x0]
    1ec8:	bl	1468 <grub_mod_fini+0x110>
    1ecc:	ldr	w0, [sp, #20]
    1ed0:	cmp	w0, #0x2
    1ed4:	b.ne	1ef4 <grub_set_history+0x96c>  // b.any
    1ed8:	ldr	x0, [sp, #24]
    1edc:	bl	e830 <grub_normal_print_device_info>
    1ee0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1ee4:	add	x0, x0, #0x0
    1ee8:	ldr	x0, [x0]
    1eec:	str	wzr, [x0]
    1ef0:	b	1f08 <grub_set_history+0x980>
    1ef4:	ldr	x1, [sp, #24]
    1ef8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    1efc:	add	x0, x0, #0x0
    1f00:	ldr	x0, [x0]
    1f04:	bl	0 <grub_printf>
    1f08:	nop
    1f0c:	ldp	x29, x30, [sp], #32
    1f10:	ret
    1f14:	nop
	...
    1f60:	stp	x29, x30, [sp, #-32]!
    1f64:	mov	x29, sp
    1f68:	str	x0, [sp, #24]
    1f6c:	str	x1, [sp, #16]
    1f70:	ldr	x0, [sp, #24]
    1f74:	ldr	w0, [x0, #16]
    1f78:	mov	w1, w0
    1f7c:	ldr	x0, [sp, #16]
    1f80:	add	x0, x1, x0
    1f84:	ldr	x1, [sp, #24]
    1f88:	ldr	w1, [x1, #8]
    1f8c:	mov	w1, w1
    1f90:	udiv	x2, x0, x1
    1f94:	mul	x1, x2, x1
    1f98:	sub	x0, x0, x1
    1f9c:	and	w1, w0, #0xffff
    1fa0:	ldr	x0, [sp, #24]
    1fa4:	strh	w1, [x0]
    1fa8:	ldr	x0, [sp, #24]
    1fac:	ldr	w0, [x0, #4]
    1fb0:	and	w1, w0, #0xffff
    1fb4:	ldr	x0, [sp, #24]
    1fb8:	ldr	w0, [x0, #16]
    1fbc:	mov	w2, w0
    1fc0:	ldr	x0, [sp, #16]
    1fc4:	add	x2, x2, x0
    1fc8:	ldr	x0, [sp, #24]
    1fcc:	ldr	w0, [x0, #8]
    1fd0:	mov	w0, w0
    1fd4:	udiv	x0, x2, x0
    1fd8:	and	w0, w0, #0xffff
    1fdc:	add	w0, w1, w0
    1fe0:	and	w1, w0, #0xffff
    1fe4:	ldr	x0, [sp, #24]
    1fe8:	strh	w1, [x0, #2]
    1fec:	ldr	x0, [sp, #24]
    1ff0:	ldr	x2, [x0, #24]
    1ff4:	ldr	x0, [sp, #24]
    1ff8:	ldr	w1, [x0]
    1ffc:	mov	x0, x2
    2000:	bl	1558 <grub_mod_fini+0x200>
    2004:	nop
    2008:	ldp	x29, x30, [sp], #32
    200c:	ret
    2010:	stp	x29, x30, [sp, #-64]!
    2014:	mov	x29, sp
    2018:	str	x0, [sp, #40]
    201c:	str	w1, [sp, #36]
    2020:	str	x2, [sp, #24]
    2024:	str	wzr, [sp, #60]
    2028:	b	2050 <grub_set_history+0xac8>
    202c:	ldr	w0, [sp, #60]
    2030:	lsl	x0, x0, #5
    2034:	ldr	x1, [sp, #40]
    2038:	add	x0, x1, x0
    203c:	ldr	x1, [sp, #24]
    2040:	bl	1f60 <grub_set_history+0x9d8>
    2044:	ldr	w0, [sp, #60]
    2048:	add	w0, w0, #0x1
    204c:	str	w0, [sp, #60]
    2050:	ldr	w1, [sp, #60]
    2054:	ldr	w0, [sp, #36]
    2058:	cmp	w1, w0
    205c:	b.cc	202c <grub_set_history+0xaa4>  // b.lo, b.ul, b.last
    2060:	nop
    2064:	nop
    2068:	ldp	x29, x30, [sp], #64
    206c:	ret
    2070:	stp	x29, x30, [sp, #-96]!
    2074:	mov	x29, sp
    2078:	str	x0, [sp, #40]
    207c:	str	w1, [sp, #36]
    2080:	str	w2, [sp, #32]
    2084:	str	x3, [sp, #24]
    2088:	str	x4, [sp, #16]
    208c:	str	wzr, [sp, #92]
    2090:	b	21dc <grub_set_history+0xc54>
    2094:	ldr	w0, [sp, #92]
    2098:	lsl	x0, x0, #5
    209c:	ldr	x1, [sp, #40]
    20a0:	add	x0, x1, x0
    20a4:	str	x0, [sp, #80]
    20a8:	ldr	w0, [sp, #32]
    20ac:	str	w0, [sp, #76]
    20b0:	ldr	x0, [sp, #24]
    20b4:	str	x0, [sp, #64]
    20b8:	ldr	x0, [sp, #16]
    20bc:	str	x0, [sp, #56]
    20c0:	ldr	x0, [sp, #64]
    20c4:	str	x0, [sp, #48]
    20c8:	b	21bc <grub_set_history+0xc34>
    20cc:	ldr	w0, [sp, #76]
    20d0:	cmp	w0, #0x0
    20d4:	b.eq	20f0 <grub_set_history+0xb68>  // b.none
    20d8:	ldr	x0, [sp, #80]
    20dc:	ldr	x0, [x0, #24]
    20e0:	mov	x1, x0
    20e4:	ldr	w0, [sp, #76]
    20e8:	bl	1077c <grub_putcode>
    20ec:	b	210c <grub_set_history+0xb84>
    20f0:	ldr	x0, [sp, #48]
    20f4:	ldr	w2, [x0]
    20f8:	ldr	x0, [sp, #80]
    20fc:	ldr	x0, [x0, #24]
    2100:	mov	x1, x0
    2104:	mov	w0, w2
    2108:	bl	1077c <grub_putcode>
    210c:	ldr	x0, [sp, #80]
    2110:	ldrh	w0, [x0]
    2114:	add	w0, w0, #0x1
    2118:	and	w1, w0, #0xffff
    211c:	ldr	x0, [sp, #80]
    2120:	strh	w1, [x0]
    2124:	ldr	x0, [sp, #80]
    2128:	ldrh	w0, [x0]
    212c:	mov	w1, w0
    2130:	ldr	x0, [sp, #80]
    2134:	ldr	w0, [x0, #8]
    2138:	sub	w0, w0, #0x1
    213c:	cmp	w1, w0
    2140:	b.cc	21b0 <grub_set_history+0xc28>  // b.lo, b.ul, b.last
    2144:	ldr	x0, [sp, #80]
    2148:	strh	wzr, [x0]
    214c:	ldr	x0, [sp, #80]
    2150:	ldrh	w0, [x0, #2]
    2154:	mov	w1, w0
    2158:	ldr	x0, [sp, #80]
    215c:	ldr	w0, [x0, #12]
    2160:	sub	w0, w0, #0x1
    2164:	cmp	w1, w0
    2168:	b.cc	2184 <grub_set_history+0xbfc>  // b.lo, b.ul, b.last
    216c:	ldr	x0, [sp, #80]
    2170:	ldr	w0, [x0, #4]
    2174:	sub	w1, w0, #0x1
    2178:	ldr	x0, [sp, #80]
    217c:	str	w1, [x0, #4]
    2180:	b	219c <grub_set_history+0xc14>
    2184:	ldr	x0, [sp, #80]
    2188:	ldrh	w0, [x0, #2]
    218c:	add	w0, w0, #0x1
    2190:	and	w1, w0, #0xffff
    2194:	ldr	x0, [sp, #80]
    2198:	strh	w1, [x0, #2]
    219c:	ldr	x0, [sp, #80]
    21a0:	ldr	x0, [x0, #24]
    21a4:	mov	x1, x0
    21a8:	mov	w0, #0xa                   	// #10
    21ac:	bl	1077c <grub_putcode>
    21b0:	ldr	x0, [sp, #48]
    21b4:	add	x0, x0, #0x4
    21b8:	str	x0, [sp, #48]
    21bc:	ldr	x1, [sp, #56]
    21c0:	ldr	x0, [sp, #48]
    21c4:	cmp	x1, x0
    21c8:	b.hi	20cc <grub_set_history+0xb44>  // b.pmore
    21cc:	nop
    21d0:	ldr	w0, [sp, #92]
    21d4:	add	w0, w0, #0x1
    21d8:	str	w0, [sp, #92]
    21dc:	ldr	w1, [sp, #92]
    21e0:	ldr	w0, [sp, #36]
    21e4:	cmp	w1, w0
    21e8:	b.cc	2094 <grub_set_history+0xb0c>  // b.lo, b.ul, b.last
    21ec:	nop
    21f0:	nop
    21f4:	ldp	x29, x30, [sp], #96
    21f8:	ret
    21fc:	stp	x29, x30, [sp, #-32]!
    2200:	mov	x29, sp
    2204:	str	x0, [sp, #24]
    2208:	ldr	x0, [sp, #24]
    220c:	ldr	w0, [x0, #16]
    2210:	and	w1, w0, #0xffff
    2214:	ldr	x0, [sp, #24]
    2218:	strh	w1, [x0]
    221c:	ldr	x0, [sp, #24]
    2220:	ldr	x0, [x0, #24]
    2224:	bl	1534 <grub_mod_fini+0x1dc>
    2228:	lsr	w0, w0, #16
    222c:	and	w1, w0, #0xffff
    2230:	ldr	x0, [sp, #24]
    2234:	strh	w1, [x0, #2]
    2238:	ldr	x0, [sp, #24]
    223c:	ldrh	w0, [x0, #2]
    2240:	mov	w1, w0
    2244:	ldr	x0, [sp, #24]
    2248:	str	w1, [x0, #4]
    224c:	ldr	x0, [sp, #24]
    2250:	ldr	x0, [x0, #24]
    2254:	bl	14c0 <grub_mod_fini+0x168>
    2258:	mov	w1, w0
    225c:	ldr	x0, [sp, #24]
    2260:	str	w1, [x0, #8]
    2264:	ldr	x0, [sp, #24]
    2268:	ldr	x0, [x0, #24]
    226c:	bl	14f8 <grub_mod_fini+0x1a0>
    2270:	mov	w1, w0
    2274:	ldr	x0, [sp, #24]
    2278:	str	w1, [x0, #12]
    227c:	nop
    2280:	ldp	x29, x30, [sp], #32
    2284:	ret
    2288:	stp	x29, x30, [sp, #-64]!
    228c:	mov	x29, sp
    2290:	str	x0, [sp, #56]
    2294:	str	w1, [sp, #52]
    2298:	str	x2, [sp, #40]
    229c:	str	x3, [sp, #32]
    22a0:	str	x4, [sp, #24]
    22a4:	str	w5, [sp, #48]
    22a8:	ldr	w1, [sp, #48]
    22ac:	ldr	x0, [sp, #32]
    22b0:	add	x1, x1, x0
    22b4:	ldr	x0, [sp, #24]
    22b8:	ldr	x0, [x0]
    22bc:	cmp	x1, x0
    22c0:	b.hi	23f0 <grub_set_history+0xe68>  // b.pmore
    22c4:	ldr	x0, [sp, #24]
    22c8:	ldr	x1, [x0]
    22cc:	ldr	w0, [sp, #48]
    22d0:	sub	x0, x1, x0
    22d4:	mov	x2, x0
    22d8:	ldr	w1, [sp, #52]
    22dc:	ldr	x0, [sp, #56]
    22e0:	bl	2010 <grub_set_history+0xa88>
    22e4:	ldr	x0, [sp, #24]
    22e8:	ldr	x1, [x0]
    22ec:	ldr	w0, [sp, #48]
    22f0:	sub	x0, x1, x0
    22f4:	lsl	x0, x0, #2
    22f8:	ldr	x1, [sp, #40]
    22fc:	add	x2, x1, x0
    2300:	ldr	x0, [sp, #24]
    2304:	ldr	x0, [x0]
    2308:	lsl	x0, x0, #2
    230c:	ldr	x1, [sp, #40]
    2310:	add	x0, x1, x0
    2314:	mov	x4, x0
    2318:	mov	x3, x2
    231c:	mov	w2, #0x20                  	// #32
    2320:	ldr	w1, [sp, #52]
    2324:	ldr	x0, [sp, #56]
    2328:	bl	2070 <grub_set_history+0xae8>
    232c:	ldr	x2, [sp, #32]
    2330:	ldr	w1, [sp, #52]
    2334:	ldr	x0, [sp, #56]
    2338:	bl	2010 <grub_set_history+0xa88>
    233c:	ldr	x0, [sp, #32]
    2340:	lsl	x0, x0, #2
    2344:	ldr	x1, [sp, #40]
    2348:	add	x3, x1, x0
    234c:	ldr	w1, [sp, #48]
    2350:	ldr	x0, [sp, #32]
    2354:	add	x0, x1, x0
    2358:	lsl	x0, x0, #2
    235c:	ldr	x1, [sp, #40]
    2360:	add	x4, x1, x0
    2364:	ldr	x0, [sp, #24]
    2368:	ldr	x1, [x0]
    236c:	ldr	x0, [sp, #32]
    2370:	sub	x0, x1, x0
    2374:	add	x0, x0, #0x1
    2378:	lsl	x0, x0, #2
    237c:	mov	x2, x0
    2380:	mov	x1, x4
    2384:	mov	x0, x3
    2388:	bl	0 <grub_memmove>
    238c:	ldr	x0, [sp, #24]
    2390:	ldr	x1, [x0]
    2394:	ldr	w0, [sp, #48]
    2398:	sub	x1, x1, x0
    239c:	ldr	x0, [sp, #24]
    23a0:	str	x1, [x0]
    23a4:	ldr	x0, [sp, #32]
    23a8:	lsl	x0, x0, #2
    23ac:	ldr	x1, [sp, #40]
    23b0:	add	x2, x1, x0
    23b4:	ldr	x0, [sp, #24]
    23b8:	ldr	x0, [x0]
    23bc:	lsl	x0, x0, #2
    23c0:	ldr	x1, [sp, #40]
    23c4:	add	x0, x1, x0
    23c8:	mov	x4, x0
    23cc:	mov	x3, x2
    23d0:	mov	w2, #0x0                   	// #0
    23d4:	ldr	w1, [sp, #52]
    23d8:	ldr	x0, [sp, #56]
    23dc:	bl	2070 <grub_set_history+0xae8>
    23e0:	ldr	x2, [sp, #32]
    23e4:	ldr	w1, [sp, #52]
    23e8:	ldr	x0, [sp, #56]
    23ec:	bl	2010 <grub_set_history+0xa88>
    23f0:	nop
    23f4:	ldp	x29, x30, [sp], #64
    23f8:	ret
    23fc:	stp	x29, x30, [sp, #-96]!
    2400:	mov	x29, sp
    2404:	str	x0, [sp, #72]
    2408:	str	w1, [sp, #68]
    240c:	str	x2, [sp, #56]
    2410:	str	x3, [sp, #48]
    2414:	str	x4, [sp, #40]
    2418:	str	x5, [sp, #32]
    241c:	str	x6, [sp, #24]
    2420:	ldr	x0, [sp, #24]
    2424:	bl	19c0 <grub_set_history+0x438>
    2428:	str	x0, [sp, #88]
    242c:	ldr	x0, [sp, #48]
    2430:	ldr	x1, [x0]
    2434:	ldr	x0, [sp, #88]
    2438:	add	x1, x1, x0
    243c:	ldr	x0, [sp, #40]
    2440:	ldr	x0, [x0]
    2444:	cmp	x1, x0
    2448:	b.cc	24c8 <grub_set_history+0xf40>  // b.lo, b.ul, b.last
    244c:	ldr	x0, [sp, #40]
    2450:	ldr	x0, [x0]
    2454:	lsl	x1, x0, #1
    2458:	ldr	x0, [sp, #40]
    245c:	str	x1, [x0]
    2460:	ldr	x0, [sp, #32]
    2464:	ldr	x2, [x0]
    2468:	ldr	x0, [sp, #40]
    246c:	ldr	x0, [x0]
    2470:	lsl	x0, x0, #2
    2474:	mov	x1, x0
    2478:	mov	x0, x2
    247c:	bl	0 <grub_realloc>
    2480:	str	x0, [sp, #80]
    2484:	ldr	x0, [sp, #80]
    2488:	cmp	x0, #0x0
    248c:	b.eq	24a0 <grub_set_history+0xf18>  // b.none
    2490:	ldr	x0, [sp, #32]
    2494:	ldr	x1, [sp, #80]
    2498:	str	x1, [x0]
    249c:	b	24c8 <grub_set_history+0xf40>
    24a0:	bl	0 <grub_print_error>
    24a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    24a8:	add	x0, x0, #0x0
    24ac:	ldr	x0, [x0]
    24b0:	str	wzr, [x0]
    24b4:	ldr	x0, [sp, #40]
    24b8:	ldr	x0, [x0]
    24bc:	lsr	x1, x0, #1
    24c0:	ldr	x0, [sp, #40]
    24c4:	str	x1, [x0]
    24c8:	ldr	x0, [sp, #48]
    24cc:	ldr	x1, [x0]
    24d0:	ldr	x0, [sp, #88]
    24d4:	add	x1, x1, x0
    24d8:	ldr	x0, [sp, #40]
    24dc:	ldr	x0, [x0]
    24e0:	cmp	x1, x0
    24e4:	b.cs	2624 <grub_set_history+0x109c>  // b.hs, b.nlast
    24e8:	ldr	x0, [sp, #32]
    24ec:	ldr	x1, [x0]
    24f0:	ldr	x0, [sp, #56]
    24f4:	ldr	x2, [x0]
    24f8:	ldr	x0, [sp, #88]
    24fc:	add	x0, x2, x0
    2500:	lsl	x0, x0, #2
    2504:	add	x3, x1, x0
    2508:	ldr	x0, [sp, #32]
    250c:	ldr	x1, [x0]
    2510:	ldr	x0, [sp, #56]
    2514:	ldr	x0, [x0]
    2518:	lsl	x0, x0, #2
    251c:	add	x4, x1, x0
    2520:	ldr	x0, [sp, #48]
    2524:	ldr	x1, [x0]
    2528:	ldr	x0, [sp, #56]
    252c:	ldr	x0, [x0]
    2530:	sub	x0, x1, x0
    2534:	add	x0, x0, #0x1
    2538:	lsl	x0, x0, #2
    253c:	mov	x2, x0
    2540:	mov	x1, x4
    2544:	mov	x0, x3
    2548:	bl	0 <grub_memmove>
    254c:	ldr	x0, [sp, #32]
    2550:	ldr	x1, [x0]
    2554:	ldr	x0, [sp, #56]
    2558:	ldr	x0, [x0]
    255c:	lsl	x0, x0, #2
    2560:	add	x3, x1, x0
    2564:	ldr	x0, [sp, #88]
    2568:	lsl	x0, x0, #2
    256c:	mov	x2, x0
    2570:	ldr	x1, [sp, #24]
    2574:	mov	x0, x3
    2578:	bl	0 <grub_memmove>
    257c:	ldr	x0, [sp, #48]
    2580:	ldr	x1, [x0]
    2584:	ldr	x0, [sp, #88]
    2588:	add	x1, x1, x0
    258c:	ldr	x0, [sp, #48]
    2590:	str	x1, [x0]
    2594:	ldr	x0, [sp, #56]
    2598:	ldr	x0, [x0]
    259c:	mov	x2, x0
    25a0:	ldr	w1, [sp, #68]
    25a4:	ldr	x0, [sp, #72]
    25a8:	bl	2010 <grub_set_history+0xa88>
    25ac:	ldr	x0, [sp, #32]
    25b0:	ldr	x1, [x0]
    25b4:	ldr	x0, [sp, #56]
    25b8:	ldr	x0, [x0]
    25bc:	lsl	x0, x0, #2
    25c0:	add	x2, x1, x0
    25c4:	ldr	x0, [sp, #32]
    25c8:	ldr	x1, [x0]
    25cc:	ldr	x0, [sp, #48]
    25d0:	ldr	x0, [x0]
    25d4:	lsl	x0, x0, #2
    25d8:	add	x0, x1, x0
    25dc:	mov	x4, x0
    25e0:	mov	x3, x2
    25e4:	mov	w2, #0x0                   	// #0
    25e8:	ldr	w1, [sp, #68]
    25ec:	ldr	x0, [sp, #72]
    25f0:	bl	2070 <grub_set_history+0xae8>
    25f4:	ldr	x0, [sp, #56]
    25f8:	ldr	x1, [x0]
    25fc:	ldr	x0, [sp, #88]
    2600:	add	x1, x1, x0
    2604:	ldr	x0, [sp, #56]
    2608:	str	x1, [x0]
    260c:	ldr	x0, [sp, #56]
    2610:	ldr	x0, [x0]
    2614:	mov	x2, x0
    2618:	ldr	w1, [sp, #68]
    261c:	ldr	x0, [sp, #72]
    2620:	bl	2010 <grub_set_history+0xa88>
    2624:	nop
    2628:	ldp	x29, x30, [sp], #96
    262c:	ret
	...

0000000000002638 <grub_cmdline_get>:
    2638:	stp	x29, x30, [sp, #-240]!
    263c:	mov	x29, sp
    2640:	str	x0, [sp, #24]
    2644:	mov	x0, #0x100                 	// #256
    2648:	str	x0, [sp, #56]
    264c:	str	wzr, [sp, #236]
    2650:	ldr	x0, [sp, #56]
    2654:	lsl	x0, x0, #2
    2658:	bl	0 <grub_malloc>
    265c:	str	x0, [sp, #64]
    2660:	ldr	x0, [sp, #64]
    2664:	cmp	x0, #0x0
    2668:	b.ne	2674 <grub_cmdline_get+0x3c>  // b.any
    266c:	mov	x0, #0x0                   	// #0
    2670:	b	3508 <grub_cmdline_get+0xed0>
    2674:	str	xzr, [sp, #72]
    2678:	ldr	x0, [sp, #72]
    267c:	str	x0, [sp, #80]
    2680:	ldr	x0, [sp, #64]
    2684:	str	wzr, [x0]
    2688:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    268c:	add	x0, x0, #0x0
    2690:	ldr	x0, [x0]
    2694:	ldr	x0, [x0]
    2698:	str	x0, [sp, #224]
    269c:	b	26cc <grub_cmdline_get+0x94>
    26a0:	ldr	x0, [sp, #224]
    26a4:	bl	1534 <grub_mod_fini+0x1dc>
    26a8:	and	w0, w0, #0xffff
    26ac:	cmp	w0, #0x0
    26b0:	b.eq	26c0 <grub_cmdline_get+0x88>  // b.none
    26b4:	ldr	x1, [sp, #224]
    26b8:	mov	w0, #0xa                   	// #10
    26bc:	bl	1077c <grub_putcode>
    26c0:	ldr	x0, [sp, #224]
    26c4:	ldr	x0, [x0]
    26c8:	str	x0, [sp, #224]
    26cc:	ldr	x0, [sp, #224]
    26d0:	cmp	x0, #0x0
    26d4:	b.ne	26a0 <grub_cmdline_get+0x68>  // b.any
    26d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    26dc:	add	x0, x0, #0x0
    26e0:	ldr	x0, [x0]
    26e4:	ldr	x1, [x0]
    26e8:	ldr	x0, [sp, #24]
    26ec:	blr	x1
    26f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    26f4:	add	x0, x0, #0x0
    26f8:	ldr	x0, [x0]
    26fc:	ldr	x1, [x0]
    2700:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2704:	add	x0, x0, #0x0
    2708:	ldr	x0, [x0]
    270c:	blr	x1
    2710:	bl	f758 <grub_normal_reset_more>
    2714:	ldr	x0, [sp, #24]
    2718:	bl	0 <grub_strlen>
    271c:	add	x0, x0, #0x3
    2720:	str	x0, [sp, #192]
    2724:	str	wzr, [sp, #232]
    2728:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    272c:	add	x0, x0, #0x0
    2730:	ldr	x0, [x0]
    2734:	ldr	x0, [x0]
    2738:	str	x0, [sp, #208]
    273c:	b	2758 <grub_cmdline_get+0x120>
    2740:	ldr	w0, [sp, #232]
    2744:	add	w0, w0, #0x1
    2748:	str	w0, [sp, #232]
    274c:	ldr	x0, [sp, #208]
    2750:	ldr	x0, [x0]
    2754:	str	x0, [sp, #208]
    2758:	ldr	x0, [sp, #208]
    275c:	cmp	x0, #0x0
    2760:	b.ne	2740 <grub_cmdline_get+0x108>  // b.any
    2764:	ldr	w0, [sp, #232]
    2768:	lsl	x0, x0, #5
    276c:	bl	0 <grub_malloc>
    2770:	str	x0, [sp, #184]
    2774:	ldr	x0, [sp, #184]
    2778:	cmp	x0, #0x0
    277c:	b.ne	2790 <grub_cmdline_get+0x158>  // b.any
    2780:	ldr	x0, [sp, #64]
    2784:	bl	0 <grub_free>
    2788:	mov	x0, #0x0                   	// #0
    278c:	b	3508 <grub_cmdline_get+0xed0>
    2790:	ldr	x0, [sp, #184]
    2794:	str	x0, [sp, #216]
    2798:	ldr	x0, [sp, #192]
    279c:	lsl	x0, x0, #2
    27a0:	bl	0 <grub_malloc>
    27a4:	str	x0, [sp, #176]
    27a8:	ldr	x0, [sp, #176]
    27ac:	cmp	x0, #0x0
    27b0:	b.ne	27cc <grub_cmdline_get+0x194>  // b.any
    27b4:	ldr	x0, [sp, #64]
    27b8:	bl	0 <grub_free>
    27bc:	ldr	x0, [sp, #184]
    27c0:	bl	0 <grub_free>
    27c4:	mov	x0, #0x0                   	// #0
    27c8:	b	3508 <grub_cmdline_get+0xed0>
    27cc:	ldr	x0, [sp, #192]
    27d0:	sub	x0, x0, #0x1
    27d4:	mov	x4, #0x0                   	// #0
    27d8:	mov	x3, #0xffffffffffffffff    	// #-1
    27dc:	ldr	x2, [sp, #24]
    27e0:	mov	x1, x0
    27e4:	ldr	x0, [sp, #176]
    27e8:	bl	12ecc <grub_utf8_to_ucs4>
    27ec:	str	x0, [sp, #192]
    27f0:	ldr	x0, [sp, #192]
    27f4:	add	x1, x0, #0x1
    27f8:	str	x1, [sp, #192]
    27fc:	lsl	x0, x0, #2
    2800:	ldr	x1, [sp, #176]
    2804:	add	x0, x1, x0
    2808:	mov	w1, #0x20                  	// #32
    280c:	str	w1, [x0]
    2810:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2814:	add	x0, x0, #0x0
    2818:	ldr	x0, [x0]
    281c:	ldr	x0, [x0]
    2820:	str	x0, [sp, #208]
    2824:	b	2880 <grub_cmdline_get+0x248>
    2828:	ldr	x0, [sp, #216]
    282c:	ldr	x1, [sp, #208]
    2830:	str	x1, [x0, #24]
    2834:	ldr	x0, [sp, #192]
    2838:	lsl	x0, x0, #2
    283c:	ldr	x1, [sp, #176]
    2840:	add	x0, x1, x0
    2844:	ldr	x2, [sp, #208]
    2848:	mov	x1, x0
    284c:	ldr	x0, [sp, #176]
    2850:	bl	cc5c <grub_getstringwidth>
    2854:	mov	w1, w0
    2858:	ldr	x0, [sp, #216]
    285c:	str	w1, [x0, #16]
    2860:	ldr	x0, [sp, #216]
    2864:	bl	21fc <grub_set_history+0xc74>
    2868:	ldr	x0, [sp, #216]
    286c:	add	x0, x0, #0x20
    2870:	str	x0, [sp, #216]
    2874:	ldr	x0, [sp, #208]
    2878:	ldr	x0, [x0]
    287c:	str	x0, [sp, #208]
    2880:	ldr	x0, [sp, #208]
    2884:	cmp	x0, #0x0
    2888:	b.ne	2828 <grub_cmdline_get+0x1f0>  // b.any
    288c:	ldr	x0, [sp, #176]
    2890:	bl	0 <grub_free>
    2894:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2898:	add	x0, x0, #0x0
    289c:	ldr	x0, [x0]
    28a0:	ldr	w0, [x0]
    28a4:	cmp	w0, #0x0
    28a8:	b.ne	28b8 <grub_cmdline_get+0x280>  // b.any
    28ac:	ldr	x0, [sp, #64]
    28b0:	ldr	x1, [sp, #72]
    28b4:	bl	1b40 <grub_set_history+0x5b8>
    28b8:	bl	0 <grub_refresh>
    28bc:	b	3460 <grub_cmdline_get+0xe28>
    28c0:	ldr	w1, [sp, #172]
    28c4:	mov	w0, #0x79                  	// #121
    28c8:	movk	w0, #0x200, lsl #16
    28cc:	cmp	w1, w0
    28d0:	b.eq	32f0 <grub_cmdline_get+0xcb8>  // b.none
    28d4:	ldr	w1, [sp, #172]
    28d8:	mov	w0, #0x79                  	// #121
    28dc:	movk	w0, #0x200, lsl #16
    28e0:	cmp	w1, w0
    28e4:	b.gt	33cc <grub_cmdline_get+0xd94>
    28e8:	ldr	w1, [sp, #172]
    28ec:	mov	w0, #0x75                  	// #117
    28f0:	movk	w0, #0x200, lsl #16
    28f4:	cmp	w1, w0
    28f8:	b.eq	31cc <grub_cmdline_get+0xb94>  // b.none
    28fc:	ldr	w1, [sp, #172]
    2900:	mov	w0, #0x75                  	// #117
    2904:	movk	w0, #0x200, lsl #16
    2908:	cmp	w1, w0
    290c:	b.gt	33cc <grub_cmdline_get+0xd94>
    2910:	ldr	w1, [sp, #172]
    2914:	mov	w0, #0x70                  	// #112
    2918:	movk	w0, #0x200, lsl #16
    291c:	cmp	w1, w0
    2920:	b.eq	311c <grub_cmdline_get+0xae4>  // b.none
    2924:	ldr	w1, [sp, #172]
    2928:	mov	w0, #0x70                  	// #112
    292c:	movk	w0, #0x200, lsl #16
    2930:	cmp	w1, w0
    2934:	b.gt	33cc <grub_cmdline_get+0xd94>
    2938:	ldr	w1, [sp, #172]
    293c:	mov	w0, #0x6e                  	// #110
    2940:	movk	w0, #0x200, lsl #16
    2944:	cmp	w1, w0
    2948:	b.eq	3080 <grub_cmdline_get+0xa48>  // b.none
    294c:	ldr	w1, [sp, #172]
    2950:	mov	w0, #0x6e                  	// #110
    2954:	movk	w0, #0x200, lsl #16
    2958:	cmp	w1, w0
    295c:	b.gt	33cc <grub_cmdline_get+0xd94>
    2960:	ldr	w1, [sp, #172]
    2964:	mov	w0, #0x6b                  	// #107
    2968:	movk	w0, #0x200, lsl #16
    296c:	cmp	w1, w0
    2970:	b.eq	2f58 <grub_cmdline_get+0x920>  // b.none
    2974:	ldr	w1, [sp, #172]
    2978:	mov	w0, #0x6b                  	// #107
    297c:	movk	w0, #0x200, lsl #16
    2980:	cmp	w1, w0
    2984:	b.gt	33cc <grub_cmdline_get+0xd94>
    2988:	ldr	w1, [sp, #172]
    298c:	mov	w0, #0x69                  	// #105
    2990:	movk	w0, #0x200, lsl #16
    2994:	cmp	w1, w0
    2998:	b.eq	2c64 <grub_cmdline_get+0x62c>  // b.none
    299c:	ldr	w1, [sp, #172]
    29a0:	mov	w0, #0x69                  	// #105
    29a4:	movk	w0, #0x200, lsl #16
    29a8:	cmp	w1, w0
    29ac:	b.gt	33cc <grub_cmdline_get+0xd94>
    29b0:	ldr	w1, [sp, #172]
    29b4:	mov	w0, #0x66                  	// #102
    29b8:	movk	w0, #0x200, lsl #16
    29bc:	cmp	w1, w0
    29c0:	b.eq	2c30 <grub_cmdline_get+0x5f8>  // b.none
    29c4:	ldr	w1, [sp, #172]
    29c8:	mov	w0, #0x66                  	// #102
    29cc:	movk	w0, #0x200, lsl #16
    29d0:	cmp	w1, w0
    29d4:	b.gt	33cc <grub_cmdline_get+0xd94>
    29d8:	ldr	w1, [sp, #172]
    29dc:	mov	w0, #0x65                  	// #101
    29e0:	movk	w0, #0x200, lsl #16
    29e4:	cmp	w1, w0
    29e8:	b.eq	2c10 <grub_cmdline_get+0x5d8>  // b.none
    29ec:	ldr	w1, [sp, #172]
    29f0:	mov	w0, #0x65                  	// #101
    29f4:	movk	w0, #0x200, lsl #16
    29f8:	cmp	w1, w0
    29fc:	b.gt	33cc <grub_cmdline_get+0xd94>
    2a00:	ldr	w1, [sp, #172]
    2a04:	mov	w0, #0x64                  	// #100
    2a08:	movk	w0, #0x200, lsl #16
    2a0c:	cmp	w1, w0
    2a10:	b.eq	3390 <grub_cmdline_get+0xd58>  // b.none
    2a14:	ldr	w1, [sp, #172]
    2a18:	mov	w0, #0x64                  	// #100
    2a1c:	movk	w0, #0x200, lsl #16
    2a20:	cmp	w1, w0
    2a24:	b.gt	33cc <grub_cmdline_get+0xd94>
    2a28:	ldr	w1, [sp, #172]
    2a2c:	mov	w0, #0x62                  	// #98
    2a30:	movk	w0, #0x200, lsl #16
    2a34:	cmp	w1, w0
    2a38:	b.eq	2be0 <grub_cmdline_get+0x5a8>  // b.none
    2a3c:	ldr	w1, [sp, #172]
    2a40:	mov	w0, #0x62                  	// #98
    2a44:	movk	w0, #0x200, lsl #16
    2a48:	cmp	w1, w0
    2a4c:	b.gt	33cc <grub_cmdline_get+0xd94>
    2a50:	ldr	w1, [sp, #172]
    2a54:	mov	w0, #0x61                  	// #97
    2a58:	movk	w0, #0x200, lsl #16
    2a5c:	cmp	w1, w0
    2a60:	b.eq	2bc4 <grub_cmdline_get+0x58c>  // b.none
    2a64:	ldr	w1, [sp, #172]
    2a68:	mov	w0, #0x61                  	// #97
    2a6c:	movk	w0, #0x200, lsl #16
    2a70:	cmp	w1, w0
    2a74:	b.gt	33cc <grub_cmdline_get+0xd94>
    2a78:	ldr	w1, [sp, #172]
    2a7c:	mov	w0, #0x53                  	// #83
    2a80:	movk	w0, #0x80, lsl #16
    2a84:	cmp	w1, w0
    2a88:	b.eq	3390 <grub_cmdline_get+0xd58>  // b.none
    2a8c:	ldr	w1, [sp, #172]
    2a90:	mov	w0, #0x53                  	// #83
    2a94:	movk	w0, #0x80, lsl #16
    2a98:	cmp	w1, w0
    2a9c:	b.gt	33cc <grub_cmdline_get+0xd94>
    2aa0:	ldr	w1, [sp, #172]
    2aa4:	mov	w0, #0x50                  	// #80
    2aa8:	movk	w0, #0x80, lsl #16
    2aac:	cmp	w1, w0
    2ab0:	b.eq	3080 <grub_cmdline_get+0xa48>  // b.none
    2ab4:	ldr	w1, [sp, #172]
    2ab8:	mov	w0, #0x50                  	// #80
    2abc:	movk	w0, #0x80, lsl #16
    2ac0:	cmp	w1, w0
    2ac4:	b.gt	33cc <grub_cmdline_get+0xd94>
    2ac8:	ldr	w1, [sp, #172]
    2acc:	mov	w0, #0x4f                  	// #79
    2ad0:	movk	w0, #0x80, lsl #16
    2ad4:	cmp	w1, w0
    2ad8:	b.eq	2c10 <grub_cmdline_get+0x5d8>  // b.none
    2adc:	ldr	w1, [sp, #172]
    2ae0:	mov	w0, #0x4f                  	// #79
    2ae4:	movk	w0, #0x80, lsl #16
    2ae8:	cmp	w1, w0
    2aec:	b.gt	33cc <grub_cmdline_get+0xd94>
    2af0:	ldr	w1, [sp, #172]
    2af4:	mov	w0, #0x4d                  	// #77
    2af8:	movk	w0, #0x80, lsl #16
    2afc:	cmp	w1, w0
    2b00:	b.eq	2c30 <grub_cmdline_get+0x5f8>  // b.none
    2b04:	ldr	w1, [sp, #172]
    2b08:	mov	w0, #0x4d                  	// #77
    2b0c:	movk	w0, #0x80, lsl #16
    2b10:	cmp	w1, w0
    2b14:	b.gt	33cc <grub_cmdline_get+0xd94>
    2b18:	ldr	w1, [sp, #172]
    2b1c:	mov	w0, #0x4b                  	// #75
    2b20:	movk	w0, #0x80, lsl #16
    2b24:	cmp	w1, w0
    2b28:	b.eq	2be0 <grub_cmdline_get+0x5a8>  // b.none
    2b2c:	ldr	w1, [sp, #172]
    2b30:	mov	w0, #0x4b                  	// #75
    2b34:	movk	w0, #0x80, lsl #16
    2b38:	cmp	w1, w0
    2b3c:	b.gt	33cc <grub_cmdline_get+0xd94>
    2b40:	ldr	w1, [sp, #172]
    2b44:	mov	w0, #0x48                  	// #72
    2b48:	movk	w0, #0x80, lsl #16
    2b4c:	cmp	w1, w0
    2b50:	b.eq	311c <grub_cmdline_get+0xae4>  // b.none
    2b54:	ldr	w1, [sp, #172]
    2b58:	mov	w0, #0x48                  	// #72
    2b5c:	movk	w0, #0x80, lsl #16
    2b60:	cmp	w1, w0
    2b64:	b.gt	33cc <grub_cmdline_get+0xd94>
    2b68:	ldr	w1, [sp, #172]
    2b6c:	mov	w0, #0x47                  	// #71
    2b70:	movk	w0, #0x80, lsl #16
    2b74:	cmp	w1, w0
    2b78:	b.eq	2bc4 <grub_cmdline_get+0x58c>  // b.none
    2b7c:	ldr	w1, [sp, #172]
    2b80:	mov	w0, #0x47                  	// #71
    2b84:	movk	w0, #0x80, lsl #16
    2b88:	cmp	w1, w0
    2b8c:	b.gt	33cc <grub_cmdline_get+0xd94>
    2b90:	ldr	w0, [sp, #172]
    2b94:	cmp	w0, #0x1b
    2b98:	b.eq	334c <grub_cmdline_get+0xd14>  // b.none
    2b9c:	ldr	w0, [sp, #172]
    2ba0:	cmp	w0, #0x1b
    2ba4:	b.gt	33cc <grub_cmdline_get+0xd94>
    2ba8:	ldr	w0, [sp, #172]
    2bac:	cmp	w0, #0x8
    2bb0:	b.eq	3364 <grub_cmdline_get+0xd2c>  // b.none
    2bb4:	ldr	w0, [sp, #172]
    2bb8:	cmp	w0, #0x9
    2bbc:	b.eq	2c64 <grub_cmdline_get+0x62c>  // b.none
    2bc0:	b	33cc <grub_cmdline_get+0xd94>
    2bc4:	str	xzr, [sp, #80]
    2bc8:	ldr	x0, [sp, #80]
    2bcc:	mov	x2, x0
    2bd0:	ldr	w1, [sp, #232]
    2bd4:	ldr	x0, [sp, #184]
    2bd8:	bl	2010 <grub_set_history+0xa88>
    2bdc:	b	345c <grub_cmdline_get+0xe24>
    2be0:	ldr	x0, [sp, #80]
    2be4:	cmp	x0, #0x0
    2be8:	b.eq	3420 <grub_cmdline_get+0xde8>  // b.none
    2bec:	ldr	x0, [sp, #80]
    2bf0:	sub	x0, x0, #0x1
    2bf4:	str	x0, [sp, #80]
    2bf8:	ldr	x0, [sp, #80]
    2bfc:	mov	x2, x0
    2c00:	ldr	w1, [sp, #232]
    2c04:	ldr	x0, [sp, #184]
    2c08:	bl	2010 <grub_set_history+0xa88>
    2c0c:	b	3420 <grub_cmdline_get+0xde8>
    2c10:	ldr	x0, [sp, #72]
    2c14:	str	x0, [sp, #80]
    2c18:	ldr	x0, [sp, #80]
    2c1c:	mov	x2, x0
    2c20:	ldr	w1, [sp, #232]
    2c24:	ldr	x0, [sp, #184]
    2c28:	bl	2010 <grub_set_history+0xa88>
    2c2c:	b	345c <grub_cmdline_get+0xe24>
    2c30:	ldr	x1, [sp, #80]
    2c34:	ldr	x0, [sp, #72]
    2c38:	cmp	x1, x0
    2c3c:	b.cs	3428 <grub_cmdline_get+0xdf0>  // b.hs, b.nlast
    2c40:	ldr	x0, [sp, #80]
    2c44:	add	x0, x0, #0x1
    2c48:	str	x0, [sp, #80]
    2c4c:	ldr	x0, [sp, #80]
    2c50:	mov	x2, x0
    2c54:	ldr	w1, [sp, #232]
    2c58:	ldr	x0, [sp, #184]
    2c5c:	bl	2010 <grub_set_history+0xa88>
    2c60:	b	3428 <grub_cmdline_get+0xdf0>
    2c64:	ldr	x1, [sp, #64]
    2c68:	ldr	x0, [sp, #80]
    2c6c:	lsl	x0, x0, #2
    2c70:	add	x0, x1, x0
    2c74:	ldr	w0, [x0]
    2c78:	str	w0, [sp, #140]
    2c7c:	ldr	x1, [sp, #64]
    2c80:	ldr	x0, [sp, #80]
    2c84:	lsl	x0, x0, #2
    2c88:	add	x0, x1, x0
    2c8c:	str	wzr, [x0]
    2c90:	ldr	x0, [sp, #64]
    2c94:	ldr	x1, [sp, #80]
    2c98:	bl	12d04 <grub_ucs4_to_utf8_alloc>
    2c9c:	str	x0, [sp, #128]
    2ca0:	ldr	x1, [sp, #64]
    2ca4:	ldr	x0, [sp, #80]
    2ca8:	lsl	x0, x0, #2
    2cac:	add	x0, x1, x0
    2cb0:	ldr	w1, [sp, #140]
    2cb4:	str	w1, [x0]
    2cb8:	ldr	x0, [sp, #128]
    2cbc:	cmp	x0, #0x0
    2cc0:	b.ne	2cdc <grub_cmdline_get+0x6a4>  // b.any
    2cc4:	bl	0 <grub_print_error>
    2cc8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2ccc:	add	x0, x0, #0x0
    2cd0:	ldr	x0, [x0]
    2cd4:	str	wzr, [x0]
    2cd8:	b	345c <grub_cmdline_get+0xe24>
    2cdc:	add	x1, sp, #0x34
    2ce0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2ce4:	add	x0, x0, #0x0
    2ce8:	ldr	x2, [x0]
    2cec:	ldr	x0, [sp, #128]
    2cf0:	bl	5aa0 <grub_normal_do_completion>
    2cf4:	str	x0, [sp, #120]
    2cf8:	ldr	x0, [sp, #128]
    2cfc:	bl	0 <grub_free>
    2d00:	bl	f758 <grub_normal_reset_more>
    2d04:	ldr	w0, [sp, #52]
    2d08:	cmp	w0, #0x0
    2d0c:	b.eq	2dcc <grub_cmdline_get+0x794>  // b.none
    2d10:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2d14:	add	x0, x0, #0x0
    2d18:	ldr	x0, [x0]
    2d1c:	ldr	x1, [x0]
    2d20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2d24:	add	x0, x0, #0x0
    2d28:	ldr	x0, [x0]
    2d2c:	blr	x1
    2d30:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2d34:	add	x0, x0, #0x0
    2d38:	ldr	x0, [x0]
    2d3c:	ldr	x1, [x0]
    2d40:	ldr	x0, [sp, #24]
    2d44:	blr	x1
    2d48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2d4c:	add	x0, x0, #0x0
    2d50:	ldr	x0, [x0]
    2d54:	ldr	x1, [x0]
    2d58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2d5c:	add	x0, x0, #0x0
    2d60:	ldr	x0, [x0]
    2d64:	blr	x1
    2d68:	str	wzr, [sp, #204]
    2d6c:	b	2d90 <grub_cmdline_get+0x758>
    2d70:	ldr	w0, [sp, #204]
    2d74:	lsl	x0, x0, #5
    2d78:	ldr	x1, [sp, #184]
    2d7c:	add	x0, x1, x0
    2d80:	bl	21fc <grub_set_history+0xc74>
    2d84:	ldr	w0, [sp, #204]
    2d88:	add	w0, w0, #0x1
    2d8c:	str	w0, [sp, #204]
    2d90:	ldr	w1, [sp, #204]
    2d94:	ldr	w0, [sp, #232]
    2d98:	cmp	w1, w0
    2d9c:	b.cc	2d70 <grub_cmdline_get+0x738>  // b.lo, b.ul, b.last
    2da0:	ldr	x2, [sp, #64]
    2da4:	ldr	x1, [sp, #64]
    2da8:	ldr	x0, [sp, #72]
    2dac:	lsl	x0, x0, #2
    2db0:	add	x0, x1, x0
    2db4:	mov	x4, x0
    2db8:	mov	x3, x2
    2dbc:	mov	w2, #0x0                   	// #0
    2dc0:	ldr	w1, [sp, #232]
    2dc4:	ldr	x0, [sp, #184]
    2dc8:	bl	2070 <grub_set_history+0xae8>
    2dcc:	ldr	x0, [sp, #120]
    2dd0:	cmp	x0, #0x0
    2dd4:	b.eq	2f40 <grub_cmdline_get+0x908>  // b.none
    2dd8:	ldr	x0, [sp, #120]
    2ddc:	bl	0 <grub_strlen>
    2de0:	str	x0, [sp, #112]
    2de4:	ldr	x0, [sp, #112]
    2de8:	add	x0, x0, #0x1
    2dec:	lsl	x0, x0, #2
    2df0:	bl	0 <grub_malloc>
    2df4:	str	x0, [sp, #104]
    2df8:	ldr	x0, [sp, #104]
    2dfc:	cmp	x0, #0x0
    2e00:	b.ne	2e24 <grub_cmdline_get+0x7ec>  // b.any
    2e04:	ldr	x0, [sp, #120]
    2e08:	bl	0 <grub_free>
    2e0c:	bl	0 <grub_print_error>
    2e10:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2e14:	add	x0, x0, #0x0
    2e18:	ldr	x0, [x0]
    2e1c:	str	wzr, [x0]
    2e20:	b	345c <grub_cmdline_get+0xe24>
    2e24:	mov	x4, #0x0                   	// #0
    2e28:	ldr	x3, [sp, #112]
    2e2c:	ldr	x2, [sp, #120]
    2e30:	ldr	x1, [sp, #112]
    2e34:	ldr	x0, [sp, #104]
    2e38:	bl	12ecc <grub_utf8_to_ucs4>
    2e3c:	str	x0, [sp, #96]
    2e40:	ldr	x0, [sp, #96]
    2e44:	cmp	x0, #0x0
    2e48:	b.le	2f30 <grub_cmdline_get+0x8f8>
    2e4c:	ldr	x0, [sp, #96]
    2e50:	lsl	x0, x0, #2
    2e54:	sub	x0, x0, #0x4
    2e58:	ldr	x1, [sp, #104]
    2e5c:	add	x0, x1, x0
    2e60:	ldr	w0, [x0]
    2e64:	cmp	w0, #0x20
    2e68:	b.ne	2eec <grub_cmdline_get+0x8b4>  // b.any
    2e6c:	ldr	x1, [sp, #64]
    2e70:	ldr	x0, [sp, #80]
    2e74:	lsl	x0, x0, #2
    2e78:	add	x0, x1, x0
    2e7c:	ldr	w0, [x0]
    2e80:	cmp	w0, #0x20
    2e84:	b.ne	2eec <grub_cmdline_get+0x8b4>  // b.any
    2e88:	ldr	x0, [sp, #96]
    2e8c:	lsl	x0, x0, #2
    2e90:	sub	x0, x0, #0x4
    2e94:	ldr	x1, [sp, #104]
    2e98:	add	x0, x1, x0
    2e9c:	str	wzr, [x0]
    2ea0:	ldr	x0, [sp, #96]
    2ea4:	cmp	x0, #0x1
    2ea8:	b.eq	2edc <grub_cmdline_get+0x8a4>  // b.none
    2eac:	add	x3, sp, #0x40
    2eb0:	add	x2, sp, #0x38
    2eb4:	add	x1, sp, #0x48
    2eb8:	add	x0, sp, #0x50
    2ebc:	ldr	x6, [sp, #104]
    2ec0:	mov	x5, x3
    2ec4:	mov	x4, x2
    2ec8:	mov	x3, x1
    2ecc:	mov	x2, x0
    2ed0:	ldr	w1, [sp, #232]
    2ed4:	ldr	x0, [sp, #184]
    2ed8:	bl	23fc <grub_set_history+0xe74>
    2edc:	ldr	x0, [sp, #80]
    2ee0:	add	x0, x0, #0x1
    2ee4:	str	x0, [sp, #80]
    2ee8:	b	2f30 <grub_cmdline_get+0x8f8>
    2eec:	ldr	x0, [sp, #96]
    2ef0:	lsl	x0, x0, #2
    2ef4:	ldr	x1, [sp, #104]
    2ef8:	add	x0, x1, x0
    2efc:	str	wzr, [x0]
    2f00:	add	x3, sp, #0x40
    2f04:	add	x2, sp, #0x38
    2f08:	add	x1, sp, #0x48
    2f0c:	add	x0, sp, #0x50
    2f10:	ldr	x6, [sp, #104]
    2f14:	mov	x5, x3
    2f18:	mov	x4, x2
    2f1c:	mov	x3, x1
    2f20:	mov	x2, x0
    2f24:	ldr	w1, [sp, #232]
    2f28:	ldr	x0, [sp, #184]
    2f2c:	bl	23fc <grub_set_history+0xe74>
    2f30:	ldr	x0, [sp, #120]
    2f34:	bl	0 <grub_free>
    2f38:	ldr	x0, [sp, #104]
    2f3c:	bl	0 <grub_free>
    2f40:	ldr	x0, [sp, #80]
    2f44:	mov	x2, x0
    2f48:	ldr	w1, [sp, #232]
    2f4c:	ldr	x0, [sp, #184]
    2f50:	bl	2010 <grub_set_history+0xa88>
    2f54:	b	345c <grub_cmdline_get+0xe24>
    2f58:	ldr	x1, [sp, #80]
    2f5c:	ldr	x0, [sp, #72]
    2f60:	cmp	x1, x0
    2f64:	b.cs	3430 <grub_cmdline_get+0xdf8>  // b.hs, b.nlast
    2f68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2f6c:	add	x0, x0, #0x0
    2f70:	ldr	x0, [x0]
    2f74:	ldr	x0, [x0]
    2f78:	bl	0 <grub_free>
    2f7c:	ldr	x1, [sp, #72]
    2f80:	ldr	x0, [sp, #80]
    2f84:	sub	x0, x1, x0
    2f88:	add	x0, x0, #0x1
    2f8c:	lsl	x0, x0, #2
    2f90:	bl	0 <grub_malloc>
    2f94:	mov	x1, x0
    2f98:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2f9c:	add	x0, x0, #0x0
    2fa0:	ldr	x0, [x0]
    2fa4:	str	x1, [x0]
    2fa8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2fac:	add	x0, x0, #0x0
    2fb0:	ldr	x0, [x0]
    2fb4:	ldr	w0, [x0]
    2fb8:	cmp	w0, #0x0
    2fbc:	b.eq	2fd8 <grub_cmdline_get+0x9a0>  // b.none
    2fc0:	bl	0 <grub_print_error>
    2fc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2fc8:	add	x0, x0, #0x0
    2fcc:	ldr	x0, [x0]
    2fd0:	str	wzr, [x0]
    2fd4:	b	3044 <grub_cmdline_get+0xa0c>
    2fd8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    2fdc:	add	x0, x0, #0x0
    2fe0:	ldr	x0, [x0]
    2fe4:	ldr	x3, [x0]
    2fe8:	ldr	x1, [sp, #64]
    2fec:	ldr	x0, [sp, #80]
    2ff0:	lsl	x0, x0, #2
    2ff4:	add	x4, x1, x0
    2ff8:	ldr	x1, [sp, #72]
    2ffc:	ldr	x0, [sp, #80]
    3000:	sub	x0, x1, x0
    3004:	add	x0, x0, #0x1
    3008:	lsl	x0, x0, #2
    300c:	mov	x2, x0
    3010:	mov	x1, x4
    3014:	mov	x0, x3
    3018:	bl	1408 <grub_mod_fini+0xb0>
    301c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3020:	add	x0, x0, #0x0
    3024:	ldr	x0, [x0]
    3028:	ldr	x1, [x0]
    302c:	ldr	x2, [sp, #72]
    3030:	ldr	x0, [sp, #80]
    3034:	sub	x0, x2, x0
    3038:	lsl	x0, x0, #2
    303c:	add	x0, x1, x0
    3040:	str	wzr, [x0]
    3044:	ldr	x0, [sp, #64]
    3048:	ldr	x1, [sp, #80]
    304c:	ldr	x2, [sp, #72]
    3050:	mov	w3, w2
    3054:	ldr	x2, [sp, #80]
    3058:	sub	w3, w3, w2
    305c:	add	x2, sp, #0x48
    3060:	mov	w5, w3
    3064:	mov	x4, x2
    3068:	mov	x3, x1
    306c:	mov	x2, x0
    3070:	ldr	w1, [sp, #232]
    3074:	ldr	x0, [sp, #184]
    3078:	bl	2288 <grub_set_history+0xd00>
    307c:	b	3430 <grub_cmdline_get+0xdf8>
    3080:	str	xzr, [sp, #80]
    3084:	ldr	w0, [sp, #236]
    3088:	cmp	w0, #0x0
    308c:	b.le	30ac <grub_cmdline_get+0xa74>
    3090:	ldr	w0, [sp, #236]
    3094:	ldr	x1, [sp, #64]
    3098:	ldr	x2, [sp, #72]
    309c:	bl	1d38 <grub_set_history+0x7b0>
    30a0:	ldr	w0, [sp, #236]
    30a4:	sub	w0, w0, #0x1
    30a8:	str	w0, [sp, #236]
    30ac:	ldr	x0, [sp, #64]
    30b0:	ldr	x1, [sp, #80]
    30b4:	ldr	x2, [sp, #72]
    30b8:	mov	w3, w2
    30bc:	add	x2, sp, #0x48
    30c0:	mov	w5, w3
    30c4:	mov	x4, x2
    30c8:	mov	x3, x1
    30cc:	mov	x2, x0
    30d0:	ldr	w1, [sp, #232]
    30d4:	ldr	x0, [sp, #184]
    30d8:	bl	2288 <grub_set_history+0xd00>
    30dc:	ldr	w0, [sp, #236]
    30e0:	bl	1938 <grub_set_history+0x3b0>
    30e4:	str	x0, [sp, #152]
    30e8:	add	x3, sp, #0x40
    30ec:	add	x2, sp, #0x38
    30f0:	add	x1, sp, #0x48
    30f4:	add	x0, sp, #0x50
    30f8:	ldr	x6, [sp, #152]
    30fc:	mov	x5, x3
    3100:	mov	x4, x2
    3104:	mov	x3, x1
    3108:	mov	x2, x0
    310c:	ldr	w1, [sp, #232]
    3110:	ldr	x0, [sp, #184]
    3114:	bl	23fc <grub_set_history+0xe74>
    3118:	b	345c <grub_cmdline_get+0xe24>
    311c:	str	xzr, [sp, #80]
    3120:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3124:	add	x0, x0, #0x0
    3128:	ldr	x0, [x0]
    312c:	ldr	w0, [x0]
    3130:	sub	w0, w0, #0x1
    3134:	ldr	w1, [sp, #236]
    3138:	cmp	w1, w0
    313c:	b.ge	315c <grub_cmdline_get+0xb24>  // b.tcont
    3140:	ldr	w0, [sp, #236]
    3144:	ldr	x1, [sp, #64]
    3148:	ldr	x2, [sp, #72]
    314c:	bl	1d38 <grub_set_history+0x7b0>
    3150:	ldr	w0, [sp, #236]
    3154:	add	w0, w0, #0x1
    3158:	str	w0, [sp, #236]
    315c:	ldr	x0, [sp, #64]
    3160:	ldr	x1, [sp, #80]
    3164:	ldr	x2, [sp, #72]
    3168:	mov	w3, w2
    316c:	add	x2, sp, #0x48
    3170:	mov	w5, w3
    3174:	mov	x4, x2
    3178:	mov	x3, x1
    317c:	mov	x2, x0
    3180:	ldr	w1, [sp, #232]
    3184:	ldr	x0, [sp, #184]
    3188:	bl	2288 <grub_set_history+0xd00>
    318c:	ldr	w0, [sp, #236]
    3190:	bl	1938 <grub_set_history+0x3b0>
    3194:	str	x0, [sp, #144]
    3198:	add	x3, sp, #0x40
    319c:	add	x2, sp, #0x38
    31a0:	add	x1, sp, #0x48
    31a4:	add	x0, sp, #0x50
    31a8:	ldr	x6, [sp, #144]
    31ac:	mov	x5, x3
    31b0:	mov	x4, x2
    31b4:	mov	x3, x1
    31b8:	mov	x2, x0
    31bc:	ldr	w1, [sp, #232]
    31c0:	ldr	x0, [sp, #184]
    31c4:	bl	23fc <grub_set_history+0xe74>
    31c8:	b	345c <grub_cmdline_get+0xe24>
    31cc:	ldr	x0, [sp, #80]
    31d0:	cmp	x0, #0x0
    31d4:	b.eq	3438 <grub_cmdline_get+0xe00>  // b.none
    31d8:	ldr	x0, [sp, #80]
    31dc:	str	x0, [sp, #160]
    31e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    31e4:	add	x0, x0, #0x0
    31e8:	ldr	x0, [x0]
    31ec:	ldr	x0, [x0]
    31f0:	bl	0 <grub_free>
    31f4:	ldr	x0, [sp, #160]
    31f8:	add	x0, x0, #0x1
    31fc:	lsl	x0, x0, #2
    3200:	bl	0 <grub_malloc>
    3204:	mov	x1, x0
    3208:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    320c:	add	x0, x0, #0x0
    3210:	ldr	x0, [x0]
    3214:	str	x1, [x0]
    3218:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    321c:	add	x0, x0, #0x0
    3220:	ldr	x0, [x0]
    3224:	ldr	w0, [x0]
    3228:	cmp	w0, #0x0
    322c:	b.eq	3244 <grub_cmdline_get+0xc0c>  // b.none
    3230:	bl	0 <grub_print_error>
    3234:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3238:	add	x0, x0, #0x0
    323c:	ldr	x0, [x0]
    3240:	str	wzr, [x0]
    3244:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3248:	add	x0, x0, #0x0
    324c:	ldr	x0, [x0]
    3250:	ldr	x0, [x0]
    3254:	cmp	x0, #0x0
    3258:	b.eq	32a4 <grub_cmdline_get+0xc6c>  // b.none
    325c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3260:	add	x0, x0, #0x0
    3264:	ldr	x0, [x0]
    3268:	ldr	x3, [x0]
    326c:	ldr	x1, [sp, #64]
    3270:	ldr	x0, [sp, #160]
    3274:	lsl	x0, x0, #2
    3278:	mov	x2, x0
    327c:	mov	x0, x3
    3280:	bl	1408 <grub_mod_fini+0xb0>
    3284:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3288:	add	x0, x0, #0x0
    328c:	ldr	x0, [x0]
    3290:	ldr	x1, [x0]
    3294:	ldr	x0, [sp, #160]
    3298:	lsl	x0, x0, #2
    329c:	add	x0, x1, x0
    32a0:	str	wzr, [x0]
    32a4:	str	xzr, [sp, #80]
    32a8:	ldr	x0, [sp, #80]
    32ac:	mov	x2, x0
    32b0:	ldr	w1, [sp, #232]
    32b4:	ldr	x0, [sp, #184]
    32b8:	bl	2010 <grub_set_history+0xa88>
    32bc:	ldr	x0, [sp, #64]
    32c0:	ldr	x1, [sp, #80]
    32c4:	ldr	x2, [sp, #160]
    32c8:	mov	w3, w2
    32cc:	add	x2, sp, #0x48
    32d0:	mov	w5, w3
    32d4:	mov	x4, x2
    32d8:	mov	x3, x1
    32dc:	mov	x2, x0
    32e0:	ldr	w1, [sp, #232]
    32e4:	ldr	x0, [sp, #184]
    32e8:	bl	2288 <grub_set_history+0xd00>
    32ec:	b	3438 <grub_cmdline_get+0xe00>
    32f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    32f4:	add	x0, x0, #0x0
    32f8:	ldr	x0, [x0]
    32fc:	ldr	x0, [x0]
    3300:	cmp	x0, #0x0
    3304:	b.eq	3440 <grub_cmdline_get+0xe08>  // b.none
    3308:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    330c:	add	x0, x0, #0x0
    3310:	ldr	x0, [x0]
    3314:	ldr	x4, [x0]
    3318:	add	x3, sp, #0x40
    331c:	add	x2, sp, #0x38
    3320:	add	x1, sp, #0x48
    3324:	add	x0, sp, #0x50
    3328:	mov	x6, x4
    332c:	mov	x5, x3
    3330:	mov	x4, x2
    3334:	mov	x3, x1
    3338:	mov	x2, x0
    333c:	ldr	w1, [sp, #232]
    3340:	ldr	x0, [sp, #184]
    3344:	bl	23fc <grub_set_history+0xe74>
    3348:	b	3440 <grub_cmdline_get+0xe08>
    334c:	ldr	x0, [sp, #184]
    3350:	bl	0 <grub_free>
    3354:	ldr	x0, [sp, #64]
    3358:	bl	0 <grub_free>
    335c:	mov	x0, #0x0                   	// #0
    3360:	b	3508 <grub_cmdline_get+0xed0>
    3364:	ldr	x0, [sp, #80]
    3368:	cmp	x0, #0x0
    336c:	b.eq	3448 <grub_cmdline_get+0xe10>  // b.none
    3370:	ldr	x0, [sp, #80]
    3374:	sub	x0, x0, #0x1
    3378:	str	x0, [sp, #80]
    337c:	ldr	x0, [sp, #80]
    3380:	mov	x2, x0
    3384:	ldr	w1, [sp, #232]
    3388:	ldr	x0, [sp, #184]
    338c:	bl	2010 <grub_set_history+0xa88>
    3390:	ldr	x1, [sp, #80]
    3394:	ldr	x0, [sp, #72]
    3398:	cmp	x1, x0
    339c:	b.cs	3450 <grub_cmdline_get+0xe18>  // b.hs, b.nlast
    33a0:	ldr	x0, [sp, #64]
    33a4:	ldr	x1, [sp, #80]
    33a8:	add	x2, sp, #0x48
    33ac:	mov	w5, #0x1                   	// #1
    33b0:	mov	x4, x2
    33b4:	mov	x3, x1
    33b8:	mov	x2, x0
    33bc:	ldr	w1, [sp, #232]
    33c0:	ldr	x0, [sp, #184]
    33c4:	bl	2288 <grub_set_history+0xd00>
    33c8:	b	3450 <grub_cmdline_get+0xe18>
    33cc:	ldr	w0, [sp, #172]
    33d0:	bl	1434 <grub_mod_fini+0xdc>
    33d4:	cmp	w0, #0x0
    33d8:	b.eq	3458 <grub_cmdline_get+0xe20>  // b.none
    33dc:	ldr	w0, [sp, #172]
    33e0:	str	w0, [sp, #40]
    33e4:	str	wzr, [sp, #44]
    33e8:	add	x4, sp, #0x28
    33ec:	add	x3, sp, #0x40
    33f0:	add	x2, sp, #0x38
    33f4:	add	x1, sp, #0x48
    33f8:	add	x0, sp, #0x50
    33fc:	mov	x6, x4
    3400:	mov	x5, x3
    3404:	mov	x4, x2
    3408:	mov	x3, x1
    340c:	mov	x2, x0
    3410:	ldr	w1, [sp, #232]
    3414:	ldr	x0, [sp, #184]
    3418:	bl	23fc <grub_set_history+0xe74>
    341c:	b	3458 <grub_cmdline_get+0xe20>
    3420:	nop
    3424:	b	345c <grub_cmdline_get+0xe24>
    3428:	nop
    342c:	b	345c <grub_cmdline_get+0xe24>
    3430:	nop
    3434:	b	345c <grub_cmdline_get+0xe24>
    3438:	nop
    343c:	b	345c <grub_cmdline_get+0xe24>
    3440:	nop
    3444:	b	345c <grub_cmdline_get+0xe24>
    3448:	nop
    344c:	b	345c <grub_cmdline_get+0xe24>
    3450:	nop
    3454:	b	345c <grub_cmdline_get+0xe24>
    3458:	nop
    345c:	bl	0 <grub_refresh>
    3460:	bl	0 <grub_getkey>
    3464:	str	w0, [sp, #172]
    3468:	ldr	w0, [sp, #172]
    346c:	cmp	w0, #0xa
    3470:	b.eq	3480 <grub_cmdline_get+0xe48>  // b.none
    3474:	ldr	w0, [sp, #172]
    3478:	cmp	w0, #0xd
    347c:	b.ne	28c0 <grub_cmdline_get+0x288>  // b.any
    3480:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3484:	add	x0, x0, #0x0
    3488:	ldr	x0, [x0]
    348c:	ldr	x1, [x0]
    3490:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3494:	add	x0, x0, #0x0
    3498:	ldr	x0, [x0]
    349c:	blr	x1
    34a0:	bl	0 <grub_refresh>
    34a4:	str	wzr, [sp, #236]
    34a8:	ldr	x0, [sp, #64]
    34ac:	bl	19c0 <grub_set_history+0x438>
    34b0:	cmp	x0, #0x0
    34b4:	b.eq	34d8 <grub_cmdline_get+0xea0>  // b.none
    34b8:	str	wzr, [sp, #32]
    34bc:	ldr	w0, [sp, #236]
    34c0:	ldr	x1, [sp, #64]
    34c4:	ldr	x2, [sp, #72]
    34c8:	bl	1d38 <grub_set_history+0x7b0>
    34cc:	add	x0, sp, #0x20
    34d0:	mov	x1, #0x0                   	// #0
    34d4:	bl	1b40 <grub_set_history+0x5b8>
    34d8:	ldr	x2, [sp, #64]
    34dc:	ldr	x0, [sp, #72]
    34e0:	add	x0, x0, #0x1
    34e4:	mov	x1, x0
    34e8:	mov	x0, x2
    34ec:	bl	12d04 <grub_ucs4_to_utf8_alloc>
    34f0:	str	x0, [sp, #88]
    34f4:	ldr	x0, [sp, #64]
    34f8:	bl	0 <grub_free>
    34fc:	ldr	x0, [sp, #184]
    3500:	bl	0 <grub_free>
    3504:	ldr	x0, [sp, #88]
    3508:	ldp	x29, x30, [sp], #240
    350c:	ret
	...
    3550:	sub	sp, sp, #0x10
    3554:	str	w0, [sp, #12]
    3558:	ldr	w0, [sp, #12]
    355c:	cmp	w0, #0x20
    3560:	b.le	3578 <grub_cmdline_get+0xf40>
    3564:	ldr	w0, [sp, #12]
    3568:	cmp	w0, #0x7e
    356c:	b.gt	3578 <grub_cmdline_get+0xf40>
    3570:	mov	w0, #0x1                   	// #1
    3574:	b	357c <grub_cmdline_get+0xf44>
    3578:	mov	w0, #0x0                   	// #0
    357c:	add	sp, sp, #0x10
    3580:	ret
    3584:	stp	x29, x30, [sp, #-48]!
    3588:	mov	x29, sp
    358c:	str	x0, [sp, #24]
    3590:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3594:	add	x0, x0, #0x0
    3598:	ldr	x0, [x0]
    359c:	ldr	x0, [x0]
    35a0:	str	x0, [sp, #40]
    35a4:	b	35d8 <grub_cmdline_get+0xfa0>
    35a8:	ldr	x0, [sp, #40]
    35ac:	ldr	x0, [x0]
    35b0:	mov	x1, x0
    35b4:	ldr	x0, [sp, #24]
    35b8:	bl	0 <grub_strcmp>
    35bc:	cmp	w0, #0x0
    35c0:	b.ne	35cc <grub_cmdline_get+0xf94>  // b.any
    35c4:	ldr	x0, [sp, #40]
    35c8:	b	35e8 <grub_cmdline_get+0xfb0>
    35cc:	ldr	x0, [sp, #40]
    35d0:	ldr	x0, [x0, #112]
    35d4:	str	x0, [sp, #40]
    35d8:	ldr	x0, [sp, #40]
    35dc:	cmp	x0, #0x0
    35e0:	b.ne	35a8 <grub_cmdline_get+0xf70>  // b.any
    35e4:	mov	x0, #0x0                   	// #0
    35e8:	ldp	x29, x30, [sp], #48
    35ec:	ret
	...
    35f8:	stp	x29, x30, [sp, #-32]!
    35fc:	mov	x29, sp
    3600:	str	x0, [sp, #24]
    3604:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3608:	add	x0, x0, #0x0
    360c:	ldr	x0, [x0]
    3610:	ldr	x0, [x0]
    3614:	ldr	x1, [sp, #24]
    3618:	bl	0 <grub_named_list_find>
    361c:	ldp	x29, x30, [sp], #32
    3620:	ret
    3624:	nop
	...

0000000000003630 <grub_dyncmd_get_cmd>:
    3630:	stp	x29, x30, [sp, #-64]!
    3634:	mov	x29, sp
    3638:	str	x0, [sp, #24]
    363c:	ldr	x0, [sp, #24]
    3640:	ldr	x0, [x0, #64]
    3644:	str	x0, [sp, #56]
    3648:	ldr	x0, [sp, #56]
    364c:	ldr	x0, [x0, #24]
    3650:	str	x0, [sp, #48]
    3654:	ldr	x0, [sp, #48]
    3658:	bl	0 <grub_dl_load>
    365c:	str	x0, [sp, #40]
    3660:	ldr	x0, [sp, #40]
    3664:	cmp	x0, #0x0
    3668:	b.ne	3674 <grub_dyncmd_get_cmd+0x44>  // b.any
    366c:	mov	x0, #0x0                   	// #0
    3670:	b	36b0 <grub_dyncmd_get_cmd+0x80>
    3674:	ldr	x0, [sp, #48]
    3678:	bl	0 <grub_free>
    367c:	ldr	x0, [sp, #40]
    3680:	bl	0 <grub_dl_ref>
    3684:	ldr	x0, [sp, #24]
    3688:	ldr	x0, [x0, #16]
    368c:	str	x0, [sp, #32]
    3690:	ldr	x0, [sp, #56]
    3694:	bl	0 <grub_unregister_extcmd>
    3698:	ldr	x0, [sp, #32]
    369c:	bl	35f8 <grub_cmdline_get+0xfc0>
    36a0:	str	x0, [sp, #24]
    36a4:	ldr	x0, [sp, #32]
    36a8:	bl	0 <grub_free>
    36ac:	ldr	x0, [sp, #24]
    36b0:	ldp	x29, x30, [sp], #64
    36b4:	ret
    36b8:	stp	x29, x30, [sp, #-96]!
    36bc:	mov	x29, sp
    36c0:	str	x0, [sp, #40]
    36c4:	str	w1, [sp, #36]
    36c8:	str	x2, [sp, #24]
    36cc:	ldr	x0, [sp, #40]
    36d0:	ldr	x0, [x0]
    36d4:	str	x0, [sp, #80]
    36d8:	ldr	x0, [sp, #80]
    36dc:	ldr	x0, [x0]
    36e0:	str	x0, [sp, #72]
    36e4:	ldr	x0, [sp, #80]
    36e8:	ldr	x0, [x0, #24]
    36ec:	str	x0, [sp, #64]
    36f0:	ldr	x0, [sp, #64]
    36f4:	bl	0 <grub_dl_load>
    36f8:	str	x0, [sp, #56]
    36fc:	ldr	x0, [sp, #56]
    3700:	cmp	x0, #0x0
    3704:	b.ne	371c <grub_dyncmd_get_cmd+0xec>  // b.any
    3708:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    370c:	add	x0, x0, #0x0
    3710:	ldr	x0, [x0]
    3714:	ldr	w0, [x0]
    3718:	b	37e4 <grub_dyncmd_get_cmd+0x1b4>
    371c:	ldr	x0, [sp, #64]
    3720:	bl	0 <grub_free>
    3724:	ldr	x0, [sp, #56]
    3728:	bl	0 <grub_dl_ref>
    372c:	ldr	x0, [sp, #72]
    3730:	ldr	x0, [x0, #16]
    3734:	str	x0, [sp, #48]
    3738:	ldr	x0, [sp, #80]
    373c:	bl	0 <grub_unregister_extcmd>
    3740:	ldr	x0, [sp, #48]
    3744:	bl	35f8 <grub_cmdline_get+0xfc0>
    3748:	str	x0, [sp, #72]
    374c:	ldr	x0, [sp, #72]
    3750:	cmp	x0, #0x0
    3754:	b.eq	37c4 <grub_dyncmd_get_cmd+0x194>  // b.none
    3758:	ldr	x0, [sp, #72]
    375c:	ldr	w0, [x0, #40]
    3760:	and	w0, w0, #0x40
    3764:	cmp	w0, #0x0
    3768:	b.eq	37a4 <grub_dyncmd_get_cmd+0x174>  // b.none
    376c:	ldr	x0, [sp, #72]
    3770:	ldr	w0, [x0, #40]
    3774:	and	w0, w0, #0x10
    3778:	cmp	w0, #0x0
    377c:	b.eq	37a4 <grub_dyncmd_get_cmd+0x174>  // b.none
    3780:	ldr	x0, [sp, #40]
    3784:	ldr	x0, [x0, #16]
    3788:	mov	x3, x0
    378c:	ldr	x2, [sp, #24]
    3790:	ldr	w1, [sp, #36]
    3794:	ldr	x0, [sp, #72]
    3798:	bl	0 <grub_extcmd_dispatcher>
    379c:	str	w0, [sp, #92]
    37a0:	b	37d8 <grub_dyncmd_get_cmd+0x1a8>
    37a4:	ldr	x0, [sp, #72]
    37a8:	ldr	x3, [x0, #32]
    37ac:	ldr	x2, [sp, #24]
    37b0:	ldr	w1, [sp, #36]
    37b4:	ldr	x0, [sp, #72]
    37b8:	blr	x3
    37bc:	str	w0, [sp, #92]
    37c0:	b	37d8 <grub_dyncmd_get_cmd+0x1a8>
    37c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    37c8:	add	x0, x0, #0x0
    37cc:	ldr	x0, [x0]
    37d0:	ldr	w0, [x0]
    37d4:	str	w0, [sp, #92]
    37d8:	ldr	x0, [sp, #48]
    37dc:	bl	0 <grub_free>
    37e0:	ldr	w0, [sp, #92]
    37e4:	ldp	x29, x30, [sp], #96
    37e8:	ret
    37ec:	nop
	...

00000000000037f8 <read_command_list>:
    37f8:	stp	x29, x30, [sp, #-128]!
    37fc:	mov	x29, sp
    3800:	str	x0, [sp, #24]
    3804:	ldr	x0, [sp, #24]
    3808:	cmp	x0, #0x0
    380c:	b.eq	3af0 <read_command_list+0x2f8>  // b.none
    3810:	ldr	x1, [sp, #24]
    3814:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3818:	add	x0, x0, #0x0
    381c:	ldr	x0, [x0]
    3820:	bl	0 <grub_xasprintf>
    3824:	str	x0, [sp, #80]
    3828:	ldr	x0, [sp, #80]
    382c:	cmp	x0, #0x0
    3830:	b.eq	3af0 <read_command_list+0x2f8>  // b.none
    3834:	mov	w1, #0x32                  	// #50
    3838:	ldr	x0, [sp, #80]
    383c:	bl	0 <grub_file_open>
    3840:	str	x0, [sp, #72]
    3844:	ldr	x0, [sp, #72]
    3848:	cmp	x0, #0x0
    384c:	b.eq	3ae8 <read_command_list+0x2f0>  // b.none
    3850:	str	xzr, [sp, #64]
    3854:	str	xzr, [sp, #112]
    3858:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    385c:	add	x0, x0, #0x0
    3860:	ldr	x0, [x0]
    3864:	ldr	x0, [x0]
    3868:	str	x0, [sp, #120]
    386c:	b	38f0 <read_command_list+0xf8>
    3870:	ldr	x0, [sp, #120]
    3874:	ldr	x0, [x0]
    3878:	str	x0, [sp, #40]
    387c:	ldr	x0, [sp, #120]
    3880:	ldr	w0, [x0, #40]
    3884:	and	w0, w0, #0x20
    3888:	cmp	w0, #0x0
    388c:	b.eq	38e0 <read_command_list+0xe8>  // b.none
    3890:	ldr	x0, [sp, #112]
    3894:	cmp	x0, #0x0
    3898:	b.eq	38b0 <read_command_list+0xb8>  // b.none
    389c:	ldr	x0, [sp, #120]
    38a0:	ldr	x1, [x0]
    38a4:	ldr	x0, [sp, #112]
    38a8:	str	x1, [x0]
    38ac:	b	38c8 <read_command_list+0xd0>
    38b0:	ldr	x0, [sp, #120]
    38b4:	ldr	x1, [x0]
    38b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    38bc:	add	x0, x0, #0x0
    38c0:	ldr	x0, [x0]
    38c4:	str	x1, [x0]
    38c8:	ldr	x0, [sp, #120]
    38cc:	ldr	x0, [x0, #64]
    38d0:	bl	0 <grub_free>
    38d4:	ldr	x0, [sp, #120]
    38d8:	bl	0 <grub_free>
    38dc:	b	38e8 <read_command_list+0xf0>
    38e0:	ldr	x0, [sp, #120]
    38e4:	str	x0, [sp, #112]
    38e8:	ldr	x0, [sp, #40]
    38ec:	str	x0, [sp, #120]
    38f0:	ldr	x0, [sp, #120]
    38f4:	cmp	x0, #0x0
    38f8:	b.ne	3870 <read_command_list+0x78>  // b.any
    38fc:	str	wzr, [sp, #92]
    3900:	ldr	x0, [sp, #72]
    3904:	bl	16988 <grub_file_getline>
    3908:	str	x0, [sp, #64]
    390c:	ldr	x0, [sp, #64]
    3910:	cmp	x0, #0x0
    3914:	b.eq	3adc <read_command_list+0x2e4>  // b.none
    3918:	ldr	x0, [sp, #64]
    391c:	str	x0, [sp, #96]
    3920:	b	3930 <read_command_list+0x138>
    3924:	ldr	x0, [sp, #96]
    3928:	add	x0, x0, #0x1
    392c:	str	x0, [sp, #96]
    3930:	ldr	x0, [sp, #96]
    3934:	ldrb	w0, [x0]
    3938:	bl	0 <grub_isspace>
    393c:	cmp	w0, #0x0
    3940:	b.ne	3924 <read_command_list+0x12c>  // b.any
    3944:	ldr	x0, [sp, #96]
    3948:	ldrb	w0, [x0]
    394c:	cmp	w0, #0x2a
    3950:	b.ne	396c <read_command_list+0x174>  // b.any
    3954:	ldr	x0, [sp, #96]
    3958:	add	x0, x0, #0x1
    395c:	str	x0, [sp, #96]
    3960:	ldr	w0, [sp, #92]
    3964:	add	w0, w0, #0x1
    3968:	str	w0, [sp, #92]
    396c:	ldr	x0, [sp, #96]
    3970:	ldrb	w0, [x0]
    3974:	bl	3550 <grub_cmdline_get+0xf18>
    3978:	cmp	w0, #0x0
    397c:	b.eq	3aac <read_command_list+0x2b4>  // b.none
    3980:	mov	w1, #0x3a                  	// #58
    3984:	ldr	x0, [sp, #96]
    3988:	bl	0 <grub_strchr>
    398c:	str	x0, [sp, #104]
    3990:	ldr	x0, [sp, #104]
    3994:	cmp	x0, #0x0
    3998:	b.eq	3ab4 <read_command_list+0x2bc>  // b.none
    399c:	ldr	x0, [sp, #104]
    39a0:	strb	wzr, [x0]
    39a4:	ldr	x0, [sp, #104]
    39a8:	add	x0, x0, #0x1
    39ac:	str	x0, [sp, #104]
    39b0:	b	39c0 <read_command_list+0x1c8>
    39b4:	ldr	x0, [sp, #104]
    39b8:	add	x0, x0, #0x1
    39bc:	str	x0, [sp, #104]
    39c0:	ldr	x0, [sp, #104]
    39c4:	ldrb	w0, [x0]
    39c8:	cmp	w0, #0x20
    39cc:	b.eq	39b4 <read_command_list+0x1bc>  // b.none
    39d0:	ldr	x0, [sp, #104]
    39d4:	ldrb	w0, [x0]
    39d8:	cmp	w0, #0x9
    39dc:	b.eq	39b4 <read_command_list+0x1bc>  // b.none
    39e0:	ldr	x0, [sp, #104]
    39e4:	ldrb	w0, [x0]
    39e8:	bl	3550 <grub_cmdline_get+0xf18>
    39ec:	cmp	w0, #0x0
    39f0:	b.eq	3abc <read_command_list+0x2c4>  // b.none
    39f4:	ldr	x0, [sp, #104]
    39f8:	bl	3584 <grub_cmdline_get+0xf4c>
    39fc:	cmp	x0, #0x0
    3a00:	b.ne	3ac4 <read_command_list+0x2cc>  // b.any
    3a04:	ldr	x0, [sp, #96]
    3a08:	bl	0 <grub_strdup>
    3a0c:	str	x0, [sp, #96]
    3a10:	ldr	x0, [sp, #96]
    3a14:	cmp	x0, #0x0
    3a18:	b.eq	3acc <read_command_list+0x2d4>  // b.none
    3a1c:	ldr	x0, [sp, #104]
    3a20:	bl	0 <grub_strdup>
    3a24:	str	x0, [sp, #56]
    3a28:	ldr	x0, [sp, #56]
    3a2c:	cmp	x0, #0x0
    3a30:	b.ne	3a40 <read_command_list+0x248>  // b.any
    3a34:	ldr	x0, [sp, #96]
    3a38:	bl	0 <grub_free>
    3a3c:	b	3ad0 <read_command_list+0x2d8>
    3a40:	ldr	w6, [sp, #92]
    3a44:	mov	x5, #0x0                   	// #0
    3a48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3a4c:	add	x0, x0, #0x0
    3a50:	ldr	x4, [x0]
    3a54:	mov	x3, #0x0                   	// #0
    3a58:	mov	w2, #0x70                  	// #112
    3a5c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3a60:	add	x0, x0, #0x0
    3a64:	ldr	x1, [x0]
    3a68:	ldr	x0, [sp, #96]
    3a6c:	bl	0 <grub_register_extcmd_prio>
    3a70:	str	x0, [sp, #48]
    3a74:	ldr	x0, [sp, #48]
    3a78:	cmp	x0, #0x0
    3a7c:	b.ne	3a94 <read_command_list+0x29c>  // b.any
    3a80:	ldr	x0, [sp, #96]
    3a84:	bl	0 <grub_free>
    3a88:	ldr	x0, [sp, #56]
    3a8c:	bl	0 <grub_free>
    3a90:	b	3ad0 <read_command_list+0x2d8>
    3a94:	ldr	x0, [sp, #48]
    3a98:	ldr	x1, [sp, #56]
    3a9c:	str	x1, [x0, #24]
    3aa0:	ldr	x0, [sp, #96]
    3aa4:	bl	35f8 <grub_cmdline_get+0xfc0>
    3aa8:	b	3ad0 <read_command_list+0x2d8>
    3aac:	nop
    3ab0:	b	3ad0 <read_command_list+0x2d8>
    3ab4:	nop
    3ab8:	b	3ad0 <read_command_list+0x2d8>
    3abc:	nop
    3ac0:	b	3ad0 <read_command_list+0x2d8>
    3ac4:	nop
    3ac8:	b	3ad0 <read_command_list+0x2d8>
    3acc:	nop
    3ad0:	ldr	x0, [sp, #64]
    3ad4:	bl	0 <grub_free>
    3ad8:	b	38fc <read_command_list+0x104>
    3adc:	nop
    3ae0:	ldr	x0, [sp, #72]
    3ae4:	bl	0 <grub_file_close>
    3ae8:	ldr	x0, [sp, #80]
    3aec:	bl	0 <grub_free>
    3af0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3af4:	add	x0, x0, #0x0
    3af8:	ldr	x0, [x0]
    3afc:	str	wzr, [x0]
    3b00:	nop
    3b04:	ldp	x29, x30, [sp], #128
    3b08:	ret
    3b0c:	nop
	...
    3b38:	sub	sp, sp, #0x10
    3b3c:	str	w0, [sp, #12]
    3b40:	ldr	w0, [sp, #12]
    3b44:	cmp	w0, #0x1f
    3b48:	b.le	3b60 <read_command_list+0x368>
    3b4c:	ldr	w0, [sp, #12]
    3b50:	cmp	w0, #0x7e
    3b54:	b.gt	3b60 <read_command_list+0x368>
    3b58:	mov	w0, #0x1                   	// #1
    3b5c:	b	3b64 <read_command_list+0x36c>
    3b60:	mov	w0, #0x0                   	// #0
    3b64:	add	sp, sp, #0x10
    3b68:	ret
    3b6c:	stp	x29, x30, [sp, #-48]!
    3b70:	mov	x29, sp
    3b74:	str	x0, [sp, #40]
    3b78:	str	x1, [sp, #32]
    3b7c:	str	x2, [sp, #24]
    3b80:	str	x3, [sp, #16]
    3b84:	mov	w4, #0x0                   	// #0
    3b88:	ldr	x3, [sp, #16]
    3b8c:	ldr	x2, [sp, #24]
    3b90:	ldr	x1, [sp, #32]
    3b94:	ldr	x0, [sp, #40]
    3b98:	bl	0 <grub_register_command_prio>
    3b9c:	ldp	x29, x30, [sp], #48
    3ba0:	ret
    3ba4:	stp	x29, x30, [sp, #-32]!
    3ba8:	mov	x29, sp
    3bac:	str	w0, [sp, #28]
    3bb0:	ldr	w1, [sp, #28]
    3bb4:	mov	w0, #0x3e8                 	// #1000
    3bb8:	mul	w0, w1, w0
    3bbc:	bl	0 <grub_millisleep>
    3bc0:	nop
    3bc4:	ldp	x29, x30, [sp], #32
    3bc8:	ret

0000000000003bcc <grub_auth_register_authentication>:
    3bcc:	stp	x29, x30, [sp, #-64]!
    3bd0:	mov	x29, sp
    3bd4:	str	x0, [sp, #40]
    3bd8:	str	x1, [sp, #32]
    3bdc:	str	x2, [sp, #24]
    3be0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3be4:	add	x0, x0, #0x0
    3be8:	ldr	x0, [x0]
    3bec:	ldr	x0, [x0]
    3bf0:	ldr	x1, [sp, #40]
    3bf4:	bl	0 <grub_named_list_find>
    3bf8:	str	x0, [sp, #56]
    3bfc:	ldr	x0, [sp, #56]
    3c00:	cmp	x0, #0x0
    3c04:	b.ne	3c14 <grub_auth_register_authentication+0x48>  // b.any
    3c08:	mov	x0, #0x30                  	// #48
    3c0c:	bl	0 <grub_zalloc>
    3c10:	str	x0, [sp, #56]
    3c14:	ldr	x0, [sp, #56]
    3c18:	cmp	x0, #0x0
    3c1c:	b.ne	3c34 <grub_auth_register_authentication+0x68>  // b.any
    3c20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3c24:	add	x0, x0, #0x0
    3c28:	ldr	x0, [x0]
    3c2c:	ldr	w0, [x0]
    3c30:	b	3cb4 <grub_auth_register_authentication+0xe8>
    3c34:	ldr	x0, [sp, #56]
    3c38:	ldr	x1, [sp, #32]
    3c3c:	str	x1, [x0, #24]
    3c40:	ldr	x0, [sp, #56]
    3c44:	ldr	x1, [sp, #24]
    3c48:	str	x1, [x0, #32]
    3c4c:	ldr	x0, [sp, #56]
    3c50:	ldr	x0, [x0, #16]
    3c54:	cmp	x0, #0x0
    3c58:	b.ne	3cb0 <grub_auth_register_authentication+0xe4>  // b.any
    3c5c:	ldr	x0, [sp, #40]
    3c60:	bl	0 <grub_strdup>
    3c64:	mov	x1, x0
    3c68:	ldr	x0, [sp, #56]
    3c6c:	str	x1, [x0, #16]
    3c70:	ldr	x0, [sp, #56]
    3c74:	ldr	x0, [x0, #16]
    3c78:	cmp	x0, #0x0
    3c7c:	b.ne	3c9c <grub_auth_register_authentication+0xd0>  // b.any
    3c80:	ldr	x0, [sp, #56]
    3c84:	bl	0 <grub_free>
    3c88:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3c8c:	add	x0, x0, #0x0
    3c90:	ldr	x0, [x0]
    3c94:	ldr	w0, [x0]
    3c98:	b	3cb4 <grub_auth_register_authentication+0xe8>
    3c9c:	ldr	x1, [sp, #56]
    3ca0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3ca4:	add	x0, x0, #0x0
    3ca8:	ldr	x0, [x0]
    3cac:	bl	0 <grub_list_push>
    3cb0:	mov	w0, #0x0                   	// #0
    3cb4:	ldp	x29, x30, [sp], #64
    3cb8:	ret
    3cbc:	nop
	...

0000000000003cd0 <grub_auth_unregister_authentication>:
    3cd0:	stp	x29, x30, [sp, #-48]!
    3cd4:	mov	x29, sp
    3cd8:	str	x0, [sp, #24]
    3cdc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3ce0:	add	x0, x0, #0x0
    3ce4:	ldr	x0, [x0]
    3ce8:	ldr	x0, [x0]
    3cec:	ldr	x1, [sp, #24]
    3cf0:	bl	0 <grub_named_list_find>
    3cf4:	str	x0, [sp, #40]
    3cf8:	ldr	x0, [sp, #40]
    3cfc:	cmp	x0, #0x0
    3d00:	b.ne	3d20 <grub_auth_unregister_authentication+0x50>  // b.any
    3d04:	ldr	x2, [sp, #24]
    3d08:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3d0c:	add	x0, x0, #0x0
    3d10:	ldr	x1, [x0]
    3d14:	mov	w0, #0x12                  	// #18
    3d18:	bl	0 <grub_error>
    3d1c:	b	3d64 <grub_auth_unregister_authentication+0x94>
    3d20:	ldr	x0, [sp, #40]
    3d24:	ldr	w0, [x0, #40]
    3d28:	cmp	w0, #0x0
    3d2c:	b.ne	3d50 <grub_auth_unregister_authentication+0x80>  // b.any
    3d30:	ldr	x0, [sp, #40]
    3d34:	ldr	x0, [x0, #16]
    3d38:	bl	0 <grub_free>
    3d3c:	ldr	x0, [sp, #40]
    3d40:	bl	0 <grub_list_remove>
    3d44:	ldr	x0, [sp, #40]
    3d48:	bl	0 <grub_free>
    3d4c:	b	3d60 <grub_auth_unregister_authentication+0x90>
    3d50:	ldr	x0, [sp, #40]
    3d54:	str	xzr, [x0, #24]
    3d58:	ldr	x0, [sp, #40]
    3d5c:	str	xzr, [x0, #32]
    3d60:	mov	w0, #0x0                   	// #0
    3d64:	ldp	x29, x30, [sp], #48
    3d68:	ret
    3d6c:	nop
	...

0000000000003d80 <grub_auth_authenticate>:
    3d80:	stp	x29, x30, [sp, #-48]!
    3d84:	mov	x29, sp
    3d88:	str	x0, [sp, #24]
    3d8c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3d90:	add	x0, x0, #0x0
    3d94:	ldr	x0, [x0]
    3d98:	ldr	x0, [x0]
    3d9c:	ldr	x1, [sp, #24]
    3da0:	bl	0 <grub_named_list_find>
    3da4:	str	x0, [sp, #40]
    3da8:	ldr	x0, [sp, #40]
    3dac:	cmp	x0, #0x0
    3db0:	b.ne	3dc0 <grub_auth_authenticate+0x40>  // b.any
    3db4:	mov	x0, #0x30                  	// #48
    3db8:	bl	0 <grub_zalloc>
    3dbc:	str	x0, [sp, #40]
    3dc0:	ldr	x0, [sp, #40]
    3dc4:	cmp	x0, #0x0
    3dc8:	b.ne	3de0 <grub_auth_authenticate+0x60>  // b.any
    3dcc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3dd0:	add	x0, x0, #0x0
    3dd4:	ldr	x0, [x0]
    3dd8:	ldr	w0, [x0]
    3ddc:	b	3e54 <grub_auth_authenticate+0xd4>
    3de0:	ldr	x0, [sp, #40]
    3de4:	mov	w1, #0x1                   	// #1
    3de8:	str	w1, [x0, #40]
    3dec:	ldr	x0, [sp, #40]
    3df0:	ldr	x0, [x0, #16]
    3df4:	cmp	x0, #0x0
    3df8:	b.ne	3e50 <grub_auth_authenticate+0xd0>  // b.any
    3dfc:	ldr	x0, [sp, #24]
    3e00:	bl	0 <grub_strdup>
    3e04:	mov	x1, x0
    3e08:	ldr	x0, [sp, #40]
    3e0c:	str	x1, [x0, #16]
    3e10:	ldr	x0, [sp, #40]
    3e14:	ldr	x0, [x0, #16]
    3e18:	cmp	x0, #0x0
    3e1c:	b.ne	3e3c <grub_auth_authenticate+0xbc>  // b.any
    3e20:	ldr	x0, [sp, #40]
    3e24:	bl	0 <grub_free>
    3e28:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3e2c:	add	x0, x0, #0x0
    3e30:	ldr	x0, [x0]
    3e34:	ldr	w0, [x0]
    3e38:	b	3e54 <grub_auth_authenticate+0xd4>
    3e3c:	ldr	x1, [sp, #40]
    3e40:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3e44:	add	x0, x0, #0x0
    3e48:	ldr	x0, [x0]
    3e4c:	bl	0 <grub_list_push>
    3e50:	mov	w0, #0x0                   	// #0
    3e54:	ldp	x29, x30, [sp], #48
    3e58:	ret
    3e5c:	nop
	...

0000000000003e70 <grub_auth_deauthenticate>:
    3e70:	stp	x29, x30, [sp, #-48]!
    3e74:	mov	x29, sp
    3e78:	str	x0, [sp, #24]
    3e7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3e80:	add	x0, x0, #0x0
    3e84:	ldr	x0, [x0]
    3e88:	ldr	x0, [x0]
    3e8c:	ldr	x1, [sp, #24]
    3e90:	bl	0 <grub_named_list_find>
    3e94:	str	x0, [sp, #40]
    3e98:	ldr	x0, [sp, #40]
    3e9c:	cmp	x0, #0x0
    3ea0:	b.ne	3ec0 <grub_auth_deauthenticate+0x50>  // b.any
    3ea4:	ldr	x2, [sp, #24]
    3ea8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3eac:	add	x0, x0, #0x0
    3eb0:	ldr	x1, [x0]
    3eb4:	mov	w0, #0x12                  	// #18
    3eb8:	bl	0 <grub_error>
    3ebc:	b	3efc <grub_auth_deauthenticate+0x8c>
    3ec0:	ldr	x0, [sp, #40]
    3ec4:	ldr	x0, [x0, #24]
    3ec8:	cmp	x0, #0x0
    3ecc:	b.ne	3ef0 <grub_auth_deauthenticate+0x80>  // b.any
    3ed0:	ldr	x0, [sp, #40]
    3ed4:	ldr	x0, [x0, #16]
    3ed8:	bl	0 <grub_free>
    3edc:	ldr	x0, [sp, #40]
    3ee0:	bl	0 <grub_list_remove>
    3ee4:	ldr	x0, [sp, #40]
    3ee8:	bl	0 <grub_free>
    3eec:	b	3ef8 <grub_auth_deauthenticate+0x88>
    3ef0:	ldr	x0, [sp, #40]
    3ef4:	str	wzr, [x0, #40]
    3ef8:	mov	w0, #0x0                   	// #0
    3efc:	ldp	x29, x30, [sp], #48
    3f00:	ret
    3f04:	nop
	...
    3f18:	stp	x29, x30, [sp, #-48]!
    3f1c:	mov	x29, sp
    3f20:	str	x0, [sp, #24]
    3f24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3f28:	add	x0, x0, #0x0
    3f2c:	ldr	x0, [x0]
    3f30:	bl	0 <grub_env_get>
    3f34:	str	x0, [sp, #32]
    3f38:	ldr	x0, [sp, #32]
    3f3c:	cmp	x0, #0x0
    3f40:	b.ne	3f4c <grub_auth_deauthenticate+0xdc>  // b.any
    3f44:	mov	w0, #0x1                   	// #1
    3f48:	b	3fe0 <grub_auth_deauthenticate+0x170>
    3f4c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    3f50:	add	x0, x0, #0x0
    3f54:	ldr	x0, [x0]
    3f58:	ldr	x0, [x0]
    3f5c:	str	x0, [sp, #40]
    3f60:	b	3fd0 <grub_auth_deauthenticate+0x160>
    3f64:	ldr	x0, [sp, #40]
    3f68:	ldr	w0, [x0, #40]
    3f6c:	cmp	w0, #0x0
    3f70:	b.eq	3fc0 <grub_auth_deauthenticate+0x150>  // b.none
    3f74:	ldr	x0, [sp, #24]
    3f78:	cmp	x0, #0x0
    3f7c:	b.eq	3f9c <grub_auth_deauthenticate+0x12c>  // b.none
    3f80:	ldr	x0, [sp, #40]
    3f84:	ldr	x0, [x0, #16]
    3f88:	mov	x1, x0
    3f8c:	ldr	x0, [sp, #24]
    3f90:	bl	0 <grub_strword>
    3f94:	cmp	w0, #0x0
    3f98:	b.ne	3fb8 <grub_auth_deauthenticate+0x148>  // b.any
    3f9c:	ldr	x0, [sp, #40]
    3fa0:	ldr	x0, [x0, #16]
    3fa4:	mov	x1, x0
    3fa8:	ldr	x0, [sp, #32]
    3fac:	bl	0 <grub_strword>
    3fb0:	cmp	w0, #0x0
    3fb4:	b.eq	3fc4 <grub_auth_deauthenticate+0x154>  // b.none
    3fb8:	mov	w0, #0x1                   	// #1
    3fbc:	b	3fe0 <grub_auth_deauthenticate+0x170>
    3fc0:	nop
    3fc4:	ldr	x0, [sp, #40]
    3fc8:	ldr	x0, [x0]
    3fcc:	str	x0, [sp, #40]
    3fd0:	ldr	x0, [sp, #40]
    3fd4:	cmp	x0, #0x0
    3fd8:	b.ne	3f64 <grub_auth_deauthenticate+0xf4>  // b.any
    3fdc:	mov	w0, #0x0                   	// #0
    3fe0:	ldp	x29, x30, [sp], #48
    3fe4:	ret
	...
    3ff8:	stp	x29, x30, [sp, #-48]!
    3ffc:	mov	x29, sp
    4000:	str	x0, [sp, #24]
    4004:	str	w1, [sp, #20]
    4008:	str	wzr, [sp, #44]
    400c:	bl	0 <grub_getkey>
    4010:	str	w0, [sp, #40]
    4014:	ldr	w0, [sp, #40]
    4018:	cmp	w0, #0xa
    401c:	b.eq	40e8 <grub_auth_deauthenticate+0x278>  // b.none
    4020:	ldr	w0, [sp, #40]
    4024:	cmp	w0, #0xd
    4028:	b.eq	40e8 <grub_auth_deauthenticate+0x278>  // b.none
    402c:	ldr	w0, [sp, #40]
    4030:	cmp	w0, #0x1b
    4034:	b.ne	4040 <grub_auth_deauthenticate+0x1d0>  // b.any
    4038:	str	wzr, [sp, #44]
    403c:	b	40e8 <grub_auth_deauthenticate+0x278>
    4040:	ldr	w0, [sp, #40]
    4044:	cmp	w0, #0x8
    4048:	b.ne	4078 <grub_auth_deauthenticate+0x208>  // b.any
    404c:	ldr	w0, [sp, #44]
    4050:	cmp	w0, #0x0
    4054:	b.eq	40d8 <grub_auth_deauthenticate+0x268>  // b.none
    4058:	ldr	w0, [sp, #44]
    405c:	sub	w0, w0, #0x1
    4060:	str	w0, [sp, #44]
    4064:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4068:	add	x0, x0, #0x0
    406c:	ldr	x0, [x0]
    4070:	bl	0 <grub_printf>
    4074:	b	40d8 <grub_auth_deauthenticate+0x268>
    4078:	ldr	w0, [sp, #40]
    407c:	bl	3b38 <read_command_list+0x340>
    4080:	cmp	w0, #0x0
    4084:	b.eq	40e0 <grub_auth_deauthenticate+0x270>  // b.none
    4088:	ldr	w0, [sp, #44]
    408c:	add	w0, w0, #0x2
    4090:	ldr	w1, [sp, #20]
    4094:	cmp	w1, w0
    4098:	b.ls	400c <grub_auth_deauthenticate+0x19c>  // b.plast
    409c:	ldr	w0, [sp, #44]
    40a0:	add	w1, w0, #0x1
    40a4:	str	w1, [sp, #44]
    40a8:	mov	w0, w0
    40ac:	ldr	x1, [sp, #24]
    40b0:	add	x0, x1, x0
    40b4:	ldr	w1, [sp, #40]
    40b8:	and	w1, w1, #0xff
    40bc:	strb	w1, [x0]
    40c0:	ldr	w1, [sp, #40]
    40c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    40c8:	add	x0, x0, #0x0
    40cc:	ldr	x0, [x0]
    40d0:	bl	0 <grub_printf>
    40d4:	b	400c <grub_auth_deauthenticate+0x19c>
    40d8:	nop
    40dc:	b	400c <grub_auth_deauthenticate+0x19c>
    40e0:	nop
    40e4:	b	400c <grub_auth_deauthenticate+0x19c>
    40e8:	ldr	w0, [sp, #44]
    40ec:	ldr	x1, [sp, #24]
    40f0:	add	x3, x1, x0
    40f4:	ldr	w1, [sp, #20]
    40f8:	ldr	w0, [sp, #44]
    40fc:	sub	w0, w1, w0
    4100:	mov	w0, w0
    4104:	mov	x2, x0
    4108:	mov	w1, #0x0                   	// #0
    410c:	mov	x0, x3
    4110:	bl	0 <grub_memset>
    4114:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4118:	add	x0, x0, #0x0
    411c:	ldr	x0, [x0]
    4120:	ldr	x1, [x0]
    4124:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4128:	add	x0, x0, #0x0
    412c:	ldr	x0, [x0]
    4130:	blr	x1
    4134:	bl	0 <grub_refresh>
    4138:	ldr	w0, [sp, #40]
    413c:	cmp	w0, #0x1b
    4140:	cset	w0, ne  // ne = any
    4144:	and	w0, w0, #0xff
    4148:	ldp	x29, x30, [sp], #48
    414c:	ret
	...

0000000000004170 <grub_auth_check_authentication>:
    4170:	sub	sp, sp, #0x830
    4174:	stp	x29, x30, [sp]
    4178:	mov	x29, sp
    417c:	str	x0, [sp, #24]
    4180:	str	xzr, [sp, #2088]
    4184:	add	x0, sp, #0x420
    4188:	mov	x2, #0x400                 	// #1024
    418c:	mov	w1, #0x0                   	// #0
    4190:	bl	0 <grub_memset>
    4194:	ldr	x0, [sp, #24]
    4198:	bl	3f18 <grub_auth_deauthenticate+0xa8>
    419c:	cmp	w0, #0x0
    41a0:	b.eq	41c0 <grub_auth_check_authentication+0x50>  // b.none
    41a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    41a8:	add	x0, x0, #0x0
    41ac:	ldr	x0, [x0]
    41b0:	mov	x1, #0x1                   	// #1
    41b4:	str	x1, [x0]
    41b8:	mov	w0, #0x0                   	// #0
    41bc:	b	4340 <grub_auth_check_authentication+0x1d0>
    41c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    41c4:	add	x0, x0, #0x0
    41c8:	ldr	x0, [x0]
    41cc:	bl	0 <grub_puts_>
    41d0:	add	x0, sp, #0x420
    41d4:	mov	w1, #0x3ff                 	// #1023
    41d8:	bl	3ff8 <grub_auth_deauthenticate+0x188>
    41dc:	cmp	w0, #0x0
    41e0:	b.eq	42bc <grub_auth_check_authentication+0x14c>  // b.none
    41e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    41e8:	add	x0, x0, #0x0
    41ec:	ldr	x0, [x0]
    41f0:	bl	0 <grub_puts_>
    41f4:	add	x0, sp, #0x20
    41f8:	mov	w1, #0x400                 	// #1024
    41fc:	bl	0 <grub_password_get>
    4200:	cmp	w0, #0x0
    4204:	b.eq	42c4 <grub_auth_check_authentication+0x154>  // b.none
    4208:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    420c:	add	x0, x0, #0x0
    4210:	ldr	x0, [x0]
    4214:	ldr	x0, [x0]
    4218:	str	x0, [sp, #2080]
    421c:	b	424c <grub_auth_check_authentication+0xdc>
    4220:	ldr	x0, [sp, #2080]
    4224:	ldr	x1, [x0, #16]
    4228:	add	x0, sp, #0x420
    422c:	bl	0 <grub_strcmp>
    4230:	cmp	w0, #0x0
    4234:	b.ne	4240 <grub_auth_check_authentication+0xd0>  // b.any
    4238:	ldr	x0, [sp, #2080]
    423c:	str	x0, [sp, #2088]
    4240:	ldr	x0, [sp, #2080]
    4244:	ldr	x0, [x0]
    4248:	str	x0, [sp, #2080]
    424c:	ldr	x0, [sp, #2080]
    4250:	cmp	x0, #0x0
    4254:	b.ne	4220 <grub_auth_check_authentication+0xb0>  // b.any
    4258:	ldr	x0, [sp, #2088]
    425c:	cmp	x0, #0x0
    4260:	b.eq	42cc <grub_auth_check_authentication+0x15c>  // b.none
    4264:	ldr	x0, [sp, #2088]
    4268:	ldr	x0, [x0, #24]
    426c:	cmp	x0, #0x0
    4270:	b.eq	42cc <grub_auth_check_authentication+0x15c>  // b.none
    4274:	ldr	x0, [sp, #2088]
    4278:	ldr	x3, [x0, #24]
    427c:	ldr	x0, [sp, #2088]
    4280:	ldr	x2, [x0, #32]
    4284:	add	x1, sp, #0x20
    4288:	add	x0, sp, #0x420
    428c:	blr	x3
    4290:	ldr	x0, [sp, #24]
    4294:	bl	3f18 <grub_auth_deauthenticate+0xa8>
    4298:	cmp	w0, #0x0
    429c:	b.eq	42d4 <grub_auth_check_authentication+0x164>  // b.none
    42a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    42a4:	add	x0, x0, #0x0
    42a8:	ldr	x0, [x0]
    42ac:	mov	x1, #0x1                   	// #1
    42b0:	str	x1, [x0]
    42b4:	mov	w0, #0x0                   	// #0
    42b8:	b	4340 <grub_auth_check_authentication+0x1d0>
    42bc:	nop
    42c0:	b	42d8 <grub_auth_check_authentication+0x168>
    42c4:	nop
    42c8:	b	42d8 <grub_auth_check_authentication+0x168>
    42cc:	nop
    42d0:	b	42d8 <grub_auth_check_authentication+0x168>
    42d4:	nop
    42d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    42dc:	add	x0, x0, #0x0
    42e0:	ldr	x0, [x0]
    42e4:	ldr	x0, [x0]
    42e8:	bl	3ba4 <read_command_list+0x3ac>
    42ec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    42f0:	add	x0, x0, #0x0
    42f4:	ldr	x0, [x0]
    42f8:	ldr	x1, [x0]
    42fc:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
    4300:	cmp	x1, x0
    4304:	b.hi	432c <grub_auth_check_authentication+0x1bc>  // b.pmore
    4308:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    430c:	add	x0, x0, #0x0
    4310:	ldr	x0, [x0]
    4314:	ldr	x0, [x0]
    4318:	lsl	x1, x0, #1
    431c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4320:	add	x0, x0, #0x0
    4324:	ldr	x0, [x0]
    4328:	str	x1, [x0]
    432c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4330:	add	x0, x0, #0x0
    4334:	ldr	x1, [x0]
    4338:	mov	w0, #0x1e                  	// #30
    433c:	bl	0 <grub_error>
    4340:	ldp	x29, x30, [sp]
    4344:	add	sp, sp, #0x830
    4348:	ret
    434c:	nop
	...
    4378:	stp	x29, x30, [sp, #-48]!
    437c:	mov	x29, sp
    4380:	str	x0, [sp, #40]
    4384:	str	w1, [sp, #36]
    4388:	str	x2, [sp, #24]
    438c:	ldr	w0, [sp, #36]
    4390:	cmp	w0, #0x0
    4394:	b.le	43a4 <grub_auth_check_authentication+0x234>
    4398:	ldr	x0, [sp, #24]
    439c:	ldr	x0, [x0]
    43a0:	b	43b0 <grub_auth_check_authentication+0x240>
    43a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    43a8:	add	x0, x0, #0x0
    43ac:	ldr	x0, [x0]
    43b0:	bl	4170 <grub_auth_check_authentication>
    43b4:	ldp	x29, x30, [sp], #48
    43b8:	ret
    43bc:	nop
	...

00000000000043c8 <grub_normal_auth_init>:
    43c8:	stp	x29, x30, [sp, #-16]!
    43cc:	mov	x29, sp
    43d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    43d4:	add	x0, x0, #0x0
    43d8:	ldr	x3, [x0]
    43dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    43e0:	add	x0, x0, #0x0
    43e4:	ldr	x2, [x0]
    43e8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    43ec:	add	x0, x0, #0x0
    43f0:	ldr	x1, [x0]
    43f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    43f8:	add	x0, x0, #0x0
    43fc:	ldr	x0, [x0]
    4400:	bl	3b6c <read_command_list+0x374>
    4404:	mov	x1, x0
    4408:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    440c:	add	x0, x0, #0x0
    4410:	ldr	x0, [x0]
    4414:	str	x1, [x0]
    4418:	nop
    441c:	ldp	x29, x30, [sp], #16
    4420:	ret
    4424:	nop
	...

0000000000004450 <grub_normal_auth_fini>:
    4450:	stp	x29, x30, [sp, #-16]!
    4454:	mov	x29, sp
    4458:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    445c:	add	x0, x0, #0x0
    4460:	ldr	x0, [x0]
    4464:	ldr	x0, [x0]
    4468:	bl	0 <grub_unregister_command>
    446c:	nop
    4470:	ldp	x29, x30, [sp], #16
    4474:	ret
	...
    4480:	stp	x29, x30, [sp, #-48]!
    4484:	mov	x29, sp
    4488:	str	x0, [sp, #24]
    448c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4490:	add	x0, x0, #0x0
    4494:	ldr	x0, [x0]
    4498:	ldr	x0, [x0]
    449c:	str	x0, [sp, #40]
    44a0:	b	44d4 <grub_normal_auth_fini+0x84>
    44a4:	ldr	x0, [sp, #40]
    44a8:	ldr	x0, [x0]
    44ac:	mov	x1, x0
    44b0:	ldr	x0, [sp, #24]
    44b4:	bl	0 <grub_strcmp>
    44b8:	cmp	w0, #0x0
    44bc:	b.ne	44c8 <grub_normal_auth_fini+0x78>  // b.any
    44c0:	ldr	x0, [sp, #40]
    44c4:	b	44e4 <grub_normal_auth_fini+0x94>
    44c8:	ldr	x0, [sp, #40]
    44cc:	ldr	x0, [x0, #112]
    44d0:	str	x0, [sp, #40]
    44d4:	ldr	x0, [sp, #40]
    44d8:	cmp	x0, #0x0
    44dc:	b.ne	44a4 <grub_normal_auth_fini+0x54>  // b.any
    44e0:	mov	x0, #0x0                   	// #0
    44e4:	ldp	x29, x30, [sp], #48
    44e8:	ret
    44ec:	nop
	...
    44f8:	stp	x29, x30, [sp, #-32]!
    44fc:	mov	x29, sp
    4500:	str	wzr, [sp, #28]
    4504:	b	4584 <grub_normal_auth_fini+0x134>
    4508:	ldr	x0, [sp, #16]
    450c:	ldr	x0, [x0, #16]
    4510:	bl	4480 <grub_normal_auth_fini+0x30>
    4514:	cmp	x0, #0x0
    4518:	b.ne	453c <grub_normal_auth_fini+0xec>  // b.any
    451c:	ldr	x0, [sp, #16]
    4520:	ldr	x0, [x0, #16]
    4524:	bl	0 <grub_dl_load>
    4528:	cmp	x0, #0x0
    452c:	b.eq	453c <grub_normal_auth_fini+0xec>  // b.none
    4530:	mov	w0, #0x1                   	// #1
    4534:	str	w0, [sp, #28]
    4538:	b	45a4 <grub_normal_auth_fini+0x154>
    453c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4540:	add	x0, x0, #0x0
    4544:	ldr	x0, [x0]
    4548:	ldr	w0, [x0]
    454c:	cmp	w0, #0x0
    4550:	b.eq	4558 <grub_normal_auth_fini+0x108>  // b.none
    4554:	bl	0 <grub_print_error>
    4558:	ldr	x0, [sp, #16]
    455c:	ldr	x1, [x0]
    4560:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4564:	add	x0, x0, #0x0
    4568:	ldr	x0, [x0]
    456c:	str	x1, [x0]
    4570:	ldr	x0, [sp, #16]
    4574:	ldr	x0, [x0, #16]
    4578:	bl	0 <grub_free>
    457c:	ldr	x0, [sp, #16]
    4580:	bl	0 <grub_free>
    4584:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4588:	add	x0, x0, #0x0
    458c:	ldr	x0, [x0]
    4590:	ldr	x0, [x0]
    4594:	str	x0, [sp, #16]
    4598:	ldr	x0, [sp, #16]
    459c:	cmp	x0, #0x0
    45a0:	b.ne	4508 <grub_normal_auth_fini+0xb8>  // b.any
    45a4:	ldr	w0, [sp, #28]
    45a8:	ldp	x29, x30, [sp], #32
    45ac:	ret
	...

00000000000045c0 <read_fs_list>:
    45c0:	stp	x29, x30, [sp, #-96]!
    45c4:	mov	x29, sp
    45c8:	str	x0, [sp, #24]
    45cc:	ldr	x0, [sp, #24]
    45d0:	cmp	x0, #0x0
    45d4:	b.eq	47fc <read_fs_list+0x23c>  // b.none
    45d8:	ldr	x1, [sp, #24]
    45dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    45e0:	add	x0, x0, #0x0
    45e4:	ldr	x0, [x0]
    45e8:	bl	0 <grub_xasprintf>
    45ec:	str	x0, [sp, #72]
    45f0:	ldr	x0, [sp, #72]
    45f4:	cmp	x0, #0x0
    45f8:	b.eq	47fc <read_fs_list+0x23c>  // b.none
    45fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4600:	add	x0, x0, #0x0
    4604:	ldr	x0, [x0]
    4608:	ldr	x0, [x0]
    460c:	str	x0, [sp, #64]
    4610:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4614:	add	x0, x0, #0x0
    4618:	ldr	x0, [x0]
    461c:	str	xzr, [x0]
    4620:	mov	w1, #0x32                  	// #50
    4624:	ldr	x0, [sp, #72]
    4628:	bl	0 <grub_file_open>
    462c:	str	x0, [sp, #56]
    4630:	ldr	x0, [sp, #56]
    4634:	cmp	x0, #0x0
    4638:	b.eq	47f4 <read_fs_list+0x234>  // b.none
    463c:	b	4680 <read_fs_list+0xc0>
    4640:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4644:	add	x0, x0, #0x0
    4648:	ldr	x0, [x0]
    464c:	ldr	x0, [x0]
    4650:	ldr	x0, [x0]
    4654:	str	x0, [sp, #32]
    4658:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    465c:	add	x0, x0, #0x0
    4660:	ldr	x0, [x0]
    4664:	ldr	x0, [x0]
    4668:	bl	0 <grub_free>
    466c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4670:	add	x0, x0, #0x0
    4674:	ldr	x0, [x0]
    4678:	ldr	x1, [sp, #32]
    467c:	str	x1, [x0]
    4680:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4684:	add	x0, x0, #0x0
    4688:	ldr	x0, [x0]
    468c:	ldr	x0, [x0]
    4690:	cmp	x0, #0x0
    4694:	b.ne	4640 <read_fs_list+0x80>  // b.any
    4698:	ldr	x0, [sp, #56]
    469c:	bl	16988 <grub_file_getline>
    46a0:	str	x0, [sp, #48]
    46a4:	ldr	x0, [sp, #48]
    46a8:	cmp	x0, #0x0
    46ac:	b.eq	47d4 <read_fs_list+0x214>  // b.none
    46b0:	ldr	x0, [sp, #48]
    46b4:	str	x0, [sp, #88]
    46b8:	ldr	x0, [sp, #48]
    46bc:	bl	0 <grub_strlen>
    46c0:	sub	x0, x0, #0x1
    46c4:	ldr	x1, [sp, #48]
    46c8:	add	x0, x1, x0
    46cc:	str	x0, [sp, #80]
    46d0:	b	46e0 <read_fs_list+0x120>
    46d4:	ldr	x0, [sp, #88]
    46d8:	add	x0, x0, #0x1
    46dc:	str	x0, [sp, #88]
    46e0:	ldr	x0, [sp, #88]
    46e4:	ldrb	w0, [x0]
    46e8:	bl	0 <grub_isspace>
    46ec:	cmp	w0, #0x0
    46f0:	b.ne	46d4 <read_fs_list+0x114>  // b.any
    46f4:	b	4708 <read_fs_list+0x148>
    46f8:	ldr	x0, [sp, #80]
    46fc:	sub	x1, x0, #0x1
    4700:	str	x1, [sp, #80]
    4704:	strb	wzr, [x0]
    4708:	ldr	x1, [sp, #88]
    470c:	ldr	x0, [sp, #80]
    4710:	cmp	x1, x0
    4714:	b.cs	472c <read_fs_list+0x16c>  // b.hs, b.nlast
    4718:	ldr	x0, [sp, #80]
    471c:	ldrb	w0, [x0]
    4720:	bl	0 <grub_isspace>
    4724:	cmp	w0, #0x0
    4728:	b.ne	46f8 <read_fs_list+0x138>  // b.any
    472c:	ldr	x1, [sp, #88]
    4730:	ldr	x0, [sp, #80]
    4734:	cmp	x1, x0
    4738:	b.cc	4748 <read_fs_list+0x188>  // b.lo, b.ul, b.last
    473c:	ldr	x0, [sp, #48]
    4740:	bl	0 <grub_free>
    4744:	b	47d0 <read_fs_list+0x210>
    4748:	mov	x0, #0x18                  	// #24
    474c:	bl	0 <grub_malloc>
    4750:	str	x0, [sp, #40]
    4754:	ldr	x0, [sp, #40]
    4758:	cmp	x0, #0x0
    475c:	b.ne	476c <read_fs_list+0x1ac>  // b.any
    4760:	ldr	x0, [sp, #48]
    4764:	bl	0 <grub_free>
    4768:	b	47d0 <read_fs_list+0x210>
    476c:	ldr	x0, [sp, #88]
    4770:	bl	0 <grub_strdup>
    4774:	mov	x1, x0
    4778:	ldr	x0, [sp, #40]
    477c:	str	x1, [x0, #16]
    4780:	ldr	x0, [sp, #48]
    4784:	bl	0 <grub_free>
    4788:	ldr	x0, [sp, #40]
    478c:	ldr	x0, [x0, #16]
    4790:	cmp	x0, #0x0
    4794:	b.ne	47a4 <read_fs_list+0x1e4>  // b.any
    4798:	ldr	x0, [sp, #40]
    479c:	bl	0 <grub_free>
    47a0:	b	47d0 <read_fs_list+0x210>
    47a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    47a8:	add	x0, x0, #0x0
    47ac:	ldr	x0, [x0]
    47b0:	ldr	x1, [x0]
    47b4:	ldr	x0, [sp, #40]
    47b8:	str	x1, [x0]
    47bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    47c0:	add	x0, x0, #0x0
    47c4:	ldr	x0, [x0]
    47c8:	ldr	x1, [sp, #40]
    47cc:	str	x1, [x0]
    47d0:	b	4698 <read_fs_list+0xd8>
    47d4:	nop
    47d8:	ldr	x0, [sp, #56]
    47dc:	bl	0 <grub_file_close>
    47e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    47e4:	add	x0, x0, #0x0
    47e8:	ldr	x0, [x0]
    47ec:	ldr	x1, [sp, #64]
    47f0:	str	x1, [x0]
    47f4:	ldr	x0, [sp, #72]
    47f8:	bl	0 <grub_free>
    47fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4800:	add	x0, x0, #0x0
    4804:	ldr	x0, [x0]
    4808:	str	wzr, [x0]
    480c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4810:	add	x0, x0, #0x0
    4814:	ldr	x0, [x0]
    4818:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    481c:	add	x1, x1, #0x0
    4820:	ldr	x1, [x1]
    4824:	str	x1, [x0]
    4828:	nop
    482c:	ldp	x29, x30, [sp], #96
    4830:	ret
    4834:	nop
	...
    4860:	stp	x29, x30, [sp, #-32]!
    4864:	mov	x29, sp
    4868:	str	x0, [sp, #24]
    486c:	str	w1, [sp, #20]
    4870:	ldr	x0, [sp, #24]
    4874:	ldr	x0, [x0, #88]
    4878:	cmp	x0, #0x0
    487c:	b.eq	4894 <read_fs_list+0x2d4>  // b.none
    4880:	ldr	x0, [sp, #24]
    4884:	ldr	x2, [x0, #88]
    4888:	ldr	w1, [sp, #20]
    488c:	ldr	x0, [sp, #24]
    4890:	blr	x2
    4894:	nop
    4898:	ldp	x29, x30, [sp], #32
    489c:	ret
    48a0:	stp	x29, x30, [sp, #-48]!
    48a4:	mov	x29, sp
    48a8:	str	x0, [sp, #24]
    48ac:	str	x1, [sp, #16]
    48b0:	strb	wzr, [sp, #47]
    48b4:	b	4904 <read_fs_list+0x344>
    48b8:	ldrb	w1, [sp, #47]
    48bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    48c0:	add	x0, x0, #0x0
    48c4:	ldr	x0, [x0]
    48c8:	sxtw	x1, w1
    48cc:	ldr	x0, [x0, x1, lsl #3]
    48d0:	mov	x1, x0
    48d4:	ldr	x0, [sp, #16]
    48d8:	bl	0 <grub_strcmp>
    48dc:	cmp	w0, #0x0
    48e0:	b.ne	48f8 <read_fs_list+0x338>  // b.any
    48e4:	ldr	x0, [sp, #24]
    48e8:	ldrb	w1, [sp, #47]
    48ec:	strb	w1, [x0]
    48f0:	mov	w0, #0x0                   	// #0
    48f4:	b	4914 <read_fs_list+0x354>
    48f8:	ldrb	w0, [sp, #47]
    48fc:	add	w0, w0, #0x1
    4900:	strb	w0, [sp, #47]
    4904:	ldrb	w0, [sp, #47]
    4908:	cmp	w0, #0xf
    490c:	b.ls	48b8 <read_fs_list+0x2f8>  // b.plast
    4910:	mov	w0, #0xffffffff            	// #-1
    4914:	ldp	x29, x30, [sp], #48
    4918:	ret
    491c:	nop
	...

0000000000004928 <grub_parse_color_name_pair>:
    4928:	stp	x29, x30, [sp, #-64]!
    492c:	mov	x29, sp
    4930:	str	x0, [sp, #24]
    4934:	str	x1, [sp, #16]
    4938:	mov	w0, #0x1                   	// #1
    493c:	str	w0, [sp, #60]
    4940:	ldr	x0, [sp, #16]
    4944:	cmp	x0, #0x0
    4948:	b.ne	4954 <grub_parse_color_name_pair+0x2c>  // b.any
    494c:	ldr	w0, [sp, #60]
    4950:	b	4a58 <grub_parse_color_name_pair+0x130>
    4954:	ldr	x0, [sp, #16]
    4958:	bl	0 <grub_strdup>
    495c:	str	x0, [sp, #48]
    4960:	ldr	x0, [sp, #48]
    4964:	cmp	x0, #0x0
    4968:	b.ne	4978 <grub_parse_color_name_pair+0x50>  // b.any
    496c:	bl	6604 <grub_wait_after_message>
    4970:	ldr	w0, [sp, #60]
    4974:	b	4a58 <grub_parse_color_name_pair+0x130>
    4978:	mov	w1, #0x2f                  	// #47
    497c:	ldr	x0, [sp, #48]
    4980:	bl	0 <grub_strchr>
    4984:	str	x0, [sp, #40]
    4988:	ldr	x0, [sp, #40]
    498c:	cmp	x0, #0x0
    4990:	b.ne	49b0 <grub_parse_color_name_pair+0x88>  // b.any
    4994:	ldr	x1, [sp, #48]
    4998:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    499c:	add	x0, x0, #0x0
    49a0:	ldr	x0, [x0]
    49a4:	bl	0 <grub_printf_>
    49a8:	bl	6604 <grub_wait_after_message>
    49ac:	b	4a4c <grub_parse_color_name_pair+0x124>
    49b0:	ldr	x0, [sp, #40]
    49b4:	add	x1, x0, #0x1
    49b8:	str	x1, [sp, #40]
    49bc:	strb	wzr, [x0]
    49c0:	add	x0, sp, #0x27
    49c4:	ldr	x1, [sp, #48]
    49c8:	bl	48a0 <read_fs_list+0x2e0>
    49cc:	cmn	w0, #0x1
    49d0:	b.ne	49f0 <grub_parse_color_name_pair+0xc8>  // b.any
    49d4:	ldr	x1, [sp, #48]
    49d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    49dc:	add	x0, x0, #0x0
    49e0:	ldr	x0, [x0]
    49e4:	bl	0 <grub_printf_>
    49e8:	bl	6604 <grub_wait_after_message>
    49ec:	b	4a4c <grub_parse_color_name_pair+0x124>
    49f0:	add	x0, sp, #0x26
    49f4:	ldr	x1, [sp, #40]
    49f8:	bl	48a0 <read_fs_list+0x2e0>
    49fc:	cmn	w0, #0x1
    4a00:	b.ne	4a20 <grub_parse_color_name_pair+0xf8>  // b.any
    4a04:	ldr	x1, [sp, #40]
    4a08:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4a0c:	add	x0, x0, #0x0
    4a10:	ldr	x0, [x0]
    4a14:	bl	0 <grub_printf_>
    4a18:	bl	6604 <grub_wait_after_message>
    4a1c:	b	4a4c <grub_parse_color_name_pair+0x124>
    4a20:	ldrb	w0, [sp, #38]
    4a24:	lsl	w0, w0, #4
    4a28:	sxtb	w1, w0
    4a2c:	ldrb	w0, [sp, #39]
    4a30:	sxtb	w0, w0
    4a34:	orr	w0, w1, w0
    4a38:	sxtb	w0, w0
    4a3c:	and	w1, w0, #0xff
    4a40:	ldr	x0, [sp, #24]
    4a44:	strb	w1, [x0]
    4a48:	str	wzr, [sp, #60]
    4a4c:	ldr	x0, [sp, #48]
    4a50:	bl	0 <grub_free>
    4a54:	ldr	w0, [sp, #60]
    4a58:	ldp	x29, x30, [sp], #64
    4a5c:	ret
	...
    4a78:	stp	x29, x30, [sp, #-32]!
    4a7c:	mov	x29, sp
    4a80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4a84:	add	x0, x0, #0x0
    4a88:	ldr	x0, [x0]
    4a8c:	ldr	x0, [x0]
    4a90:	str	x0, [sp, #24]
    4a94:	b	4ab0 <grub_parse_color_name_pair+0x188>
    4a98:	mov	w1, #0x1                   	// #1
    4a9c:	ldr	x0, [sp, #24]
    4aa0:	bl	4860 <read_fs_list+0x2a0>
    4aa4:	ldr	x0, [sp, #24]
    4aa8:	ldr	x0, [x0]
    4aac:	str	x0, [sp, #24]
    4ab0:	ldr	x0, [sp, #24]
    4ab4:	cmp	x0, #0x0
    4ab8:	b.ne	4a98 <grub_parse_color_name_pair+0x170>  // b.any
    4abc:	nop
    4ac0:	nop
    4ac4:	ldp	x29, x30, [sp], #32
    4ac8:	ret
    4acc:	nop
	...

0000000000004ad8 <grub_env_write_color_normal>:
    4ad8:	stp	x29, x30, [sp, #-32]!
    4adc:	mov	x29, sp
    4ae0:	str	x0, [sp, #24]
    4ae4:	str	x1, [sp, #16]
    4ae8:	ldr	x1, [sp, #16]
    4aec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4af0:	add	x0, x0, #0x0
    4af4:	ldr	x0, [x0]
    4af8:	bl	4928 <grub_parse_color_name_pair>
    4afc:	cmp	w0, #0x0
    4b00:	b.eq	4b0c <grub_env_write_color_normal+0x34>  // b.none
    4b04:	mov	x0, #0x0                   	// #0
    4b08:	b	4b18 <grub_env_write_color_normal+0x40>
    4b0c:	bl	4a78 <grub_parse_color_name_pair+0x150>
    4b10:	ldr	x0, [sp, #16]
    4b14:	bl	0 <grub_strdup>
    4b18:	ldp	x29, x30, [sp], #32
    4b1c:	ret
	...

0000000000004b28 <grub_env_write_color_highlight>:
    4b28:	stp	x29, x30, [sp, #-32]!
    4b2c:	mov	x29, sp
    4b30:	str	x0, [sp, #24]
    4b34:	str	x1, [sp, #16]
    4b38:	ldr	x1, [sp, #16]
    4b3c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4b40:	add	x0, x0, #0x0
    4b44:	ldr	x0, [x0]
    4b48:	bl	4928 <grub_parse_color_name_pair>
    4b4c:	cmp	w0, #0x0
    4b50:	b.eq	4b5c <grub_env_write_color_highlight+0x34>  // b.none
    4b54:	mov	x0, #0x0                   	// #0
    4b58:	b	4b68 <grub_env_write_color_highlight+0x40>
    4b5c:	bl	4a78 <grub_parse_color_name_pair+0x150>
    4b60:	ldr	x0, [sp, #16]
    4b64:	bl	0 <grub_strdup>
    4b68:	ldp	x29, x30, [sp], #32
    4b6c:	ret
	...
    4b78:	stp	x29, x30, [sp, #-32]!
    4b7c:	mov	x29, sp
    4b80:	str	x0, [sp, #24]
    4b84:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4b88:	add	x0, x0, #0x0
    4b8c:	ldr	x0, [x0]
    4b90:	ldr	x0, [x0]
    4b94:	ldr	x1, [sp, #24]
    4b98:	bl	0 <grub_named_list_find>
    4b9c:	ldp	x29, x30, [sp], #32
    4ba0:	ret
    4ba4:	nop
	...
    4bb0:	stp	x29, x30, [sp, #-48]!
    4bb4:	mov	x29, sp
    4bb8:	str	x0, [sp, #24]
    4bbc:	str	x1, [sp, #16]
    4bc0:	str	wzr, [sp, #36]
    4bc4:	b	4c3c <grub_env_write_color_highlight+0x114>
    4bc8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4bcc:	add	x0, x0, #0x0
    4bd0:	ldr	x0, [x0]
    4bd4:	ldr	x0, [x0]
    4bd8:	str	x0, [sp, #40]
    4bdc:	b	4c24 <grub_env_write_color_highlight+0xfc>
    4be0:	ldr	x0, [sp, #40]
    4be4:	ldr	x0, [x0, #16]
    4be8:	cmp	x0, #0x0
    4bec:	b.eq	4c18 <grub_env_write_color_highlight+0xf0>  // b.none
    4bf0:	ldr	x0, [sp, #40]
    4bf4:	ldr	x3, [x0, #16]
    4bf8:	ldr	w2, [sp, #36]
    4bfc:	ldr	x1, [sp, #16]
    4c00:	ldr	x0, [sp, #24]
    4c04:	blr	x3
    4c08:	cmp	w0, #0x0
    4c0c:	b.eq	4c18 <grub_env_write_color_highlight+0xf0>  // b.none
    4c10:	mov	w0, #0x1                   	// #1
    4c14:	b	4c4c <grub_env_write_color_highlight+0x124>
    4c18:	ldr	x0, [sp, #40]
    4c1c:	ldr	x0, [x0, #56]
    4c20:	str	x0, [sp, #40]
    4c24:	ldr	x0, [sp, #40]
    4c28:	cmp	x0, #0x0
    4c2c:	b.ne	4be0 <grub_env_write_color_highlight+0xb8>  // b.any
    4c30:	ldr	w0, [sp, #36]
    4c34:	add	w0, w0, #0x1
    4c38:	str	w0, [sp, #36]
    4c3c:	ldr	w0, [sp, #36]
    4c40:	cmp	w0, #0x2
    4c44:	b.ls	4bc8 <grub_env_write_color_highlight+0xa0>  // b.plast
    4c48:	mov	w0, #0x0                   	// #0
    4c4c:	ldp	x29, x30, [sp], #48
    4c50:	ret
    4c54:	nop
	...
    4c60:	sub	sp, sp, #0x20
    4c64:	str	x0, [sp, #8]
    4c68:	str	x1, [sp]
    4c6c:	ldr	x0, [sp]
    4c70:	sub	x0, x0, #0x1
    4c74:	str	x0, [sp, #24]
    4c78:	b	4c9c <grub_env_write_color_highlight+0x174>
    4c7c:	ldr	x0, [sp, #24]
    4c80:	ldrb	w0, [x0]
    4c84:	and	w0, w0, #0xc0
    4c88:	cmp	w0, #0x80
    4c8c:	b.ne	4cb0 <grub_env_write_color_highlight+0x188>  // b.any
    4c90:	ldr	x0, [sp, #24]
    4c94:	sub	x0, x0, #0x1
    4c98:	str	x0, [sp, #24]
    4c9c:	ldr	x1, [sp, #24]
    4ca0:	ldr	x0, [sp, #8]
    4ca4:	cmp	x1, x0
    4ca8:	b.cs	4c7c <grub_env_write_color_highlight+0x154>  // b.hs, b.nlast
    4cac:	b	4cb4 <grub_env_write_color_highlight+0x18c>
    4cb0:	nop
    4cb4:	ldr	x1, [sp, #24]
    4cb8:	ldr	x0, [sp, #8]
    4cbc:	cmp	x1, x0
    4cc0:	b.cs	4ccc <grub_env_write_color_highlight+0x1a4>  // b.hs, b.nlast
    4cc4:	mov	x0, #0x0                   	// #0
    4cc8:	b	4db4 <grub_env_write_color_highlight+0x28c>
    4ccc:	ldr	x0, [sp, #24]
    4cd0:	ldrb	w0, [x0]
    4cd4:	sxtb	w0, w0
    4cd8:	cmp	w0, #0x0
    4cdc:	b.lt	4cf4 <grub_env_write_color_highlight+0x1cc>  // b.tstop
    4ce0:	ldr	x0, [sp, #24]
    4ce4:	add	x1, x0, #0x1
    4ce8:	ldr	x0, [sp, #8]
    4cec:	sub	x0, x1, x0
    4cf0:	b	4db4 <grub_env_write_color_highlight+0x28c>
    4cf4:	ldr	x0, [sp, #24]
    4cf8:	ldrb	w0, [x0]
    4cfc:	and	w0, w0, #0xe0
    4d00:	cmp	w0, #0xc0
    4d04:	b.ne	4d30 <grub_env_write_color_highlight+0x208>  // b.any
    4d08:	ldr	x0, [sp, #24]
    4d0c:	add	x0, x0, #0x2
    4d10:	ldr	x1, [sp]
    4d14:	cmp	x1, x0
    4d18:	b.cc	4d30 <grub_env_write_color_highlight+0x208>  // b.lo, b.ul, b.last
    4d1c:	ldr	x0, [sp, #24]
    4d20:	add	x1, x0, #0x2
    4d24:	ldr	x0, [sp, #8]
    4d28:	sub	x0, x1, x0
    4d2c:	b	4db4 <grub_env_write_color_highlight+0x28c>
    4d30:	ldr	x0, [sp, #24]
    4d34:	ldrb	w0, [x0]
    4d38:	and	w0, w0, #0xf0
    4d3c:	cmp	w0, #0xe0
    4d40:	b.ne	4d6c <grub_env_write_color_highlight+0x244>  // b.any
    4d44:	ldr	x0, [sp, #24]
    4d48:	add	x0, x0, #0x3
    4d4c:	ldr	x1, [sp]
    4d50:	cmp	x1, x0
    4d54:	b.cc	4d6c <grub_env_write_color_highlight+0x244>  // b.lo, b.ul, b.last
    4d58:	ldr	x0, [sp, #24]
    4d5c:	add	x1, x0, #0x3
    4d60:	ldr	x0, [sp, #8]
    4d64:	sub	x0, x1, x0
    4d68:	b	4db4 <grub_env_write_color_highlight+0x28c>
    4d6c:	ldr	x0, [sp, #24]
    4d70:	ldrb	w0, [x0]
    4d74:	and	w0, w0, #0xf8
    4d78:	cmp	w0, #0xf0
    4d7c:	b.ne	4da8 <grub_env_write_color_highlight+0x280>  // b.any
    4d80:	ldr	x0, [sp, #24]
    4d84:	add	x0, x0, #0x4
    4d88:	ldr	x1, [sp]
    4d8c:	cmp	x1, x0
    4d90:	b.cc	4da8 <grub_env_write_color_highlight+0x280>  // b.lo, b.ul, b.last
    4d94:	ldr	x0, [sp, #24]
    4d98:	add	x1, x0, #0x4
    4d9c:	ldr	x0, [sp, #8]
    4da0:	sub	x0, x1, x0
    4da4:	b	4db4 <grub_env_write_color_highlight+0x28c>
    4da8:	ldr	x1, [sp, #24]
    4dac:	ldr	x0, [sp, #8]
    4db0:	sub	x0, x1, x0
    4db4:	add	sp, sp, #0x20
    4db8:	ret
    4dbc:	stp	x29, x30, [sp, #-80]!
    4dc0:	mov	x29, sp
    4dc4:	str	x19, [sp, #16]
    4dc8:	str	x0, [sp, #56]
    4dcc:	str	x1, [sp, #48]
    4dd0:	str	w2, [sp, #44]
    4dd4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4dd8:	add	x0, x0, #0x0
    4ddc:	ldr	x0, [x0]
    4de0:	ldr	x19, [x0]
    4de4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4de8:	add	x0, x0, #0x0
    4dec:	ldr	x0, [x0]
    4df0:	ldr	x0, [x0]
    4df4:	bl	0 <grub_strlen>
    4df8:	mov	x2, x0
    4dfc:	ldr	x1, [sp, #56]
    4e00:	mov	x0, x19
    4e04:	bl	0 <grub_strncmp>
    4e08:	cmp	w0, #0x0
    4e0c:	b.ne	4fe8 <grub_env_write_color_highlight+0x4c0>  // b.any
    4e10:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4e14:	add	x0, x0, #0x0
    4e18:	ldr	x0, [x0]
    4e1c:	ldr	w0, [x0]
    4e20:	add	w1, w0, #0x1
    4e24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4e28:	add	x0, x0, #0x0
    4e2c:	ldr	x0, [x0]
    4e30:	str	w1, [x0]
    4e34:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4e38:	add	x0, x0, #0x0
    4e3c:	ldr	x0, [x0]
    4e40:	ldr	w0, [x0]
    4e44:	cmp	w0, #0x1
    4e48:	b.eq	4e58 <grub_env_write_color_highlight+0x330>  // b.none
    4e4c:	cmp	w0, #0x2
    4e50:	b.eq	4eac <grub_env_write_color_highlight+0x384>  // b.none
    4e54:	b	4ef0 <grub_env_write_color_highlight+0x3c8>
    4e58:	ldr	x0, [sp, #56]
    4e5c:	bl	0 <grub_strdup>
    4e60:	mov	x1, x0
    4e64:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4e68:	add	x0, x0, #0x0
    4e6c:	ldr	x0, [x0]
    4e70:	str	x1, [x0]
    4e74:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4e78:	add	x0, x0, #0x0
    4e7c:	ldr	x0, [x0]
    4e80:	ldr	x0, [x0]
    4e84:	cmp	x0, #0x0
    4e88:	b.ne	4e94 <grub_env_write_color_highlight+0x36c>  // b.any
    4e8c:	mov	w0, #0x1                   	// #1
    4e90:	b	4ff0 <grub_env_write_color_highlight+0x4c8>
    4e94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4e98:	add	x0, x0, #0x0
    4e9c:	ldr	x0, [x0]
    4ea0:	ldr	x1, [sp, #48]
    4ea4:	str	x1, [x0]
    4ea8:	b	4fec <grub_env_write_color_highlight+0x4c4>
    4eac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4eb0:	add	x0, x0, #0x0
    4eb4:	ldr	x0, [x0]
    4eb8:	ldr	x0, [x0]
    4ebc:	cmp	x0, #0x0
    4ec0:	b.eq	4ef0 <grub_env_write_color_highlight+0x3c8>  // b.none
    4ec4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4ec8:	add	x0, x0, #0x0
    4ecc:	ldr	x0, [x0]
    4ed0:	ldr	x3, [x0]
    4ed4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4ed8:	add	x0, x0, #0x0
    4edc:	ldr	x0, [x0]
    4ee0:	ldr	x0, [x0]
    4ee4:	mov	w2, #0x0                   	// #0
    4ee8:	ldr	w1, [sp, #44]
    4eec:	blr	x3
    4ef0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4ef4:	add	x0, x0, #0x0
    4ef8:	ldr	x0, [x0]
    4efc:	ldr	x0, [x0]
    4f00:	str	x0, [sp, #72]
    4f04:	ldr	x0, [sp, #56]
    4f08:	str	x0, [sp, #64]
    4f0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4f10:	add	x0, x0, #0x0
    4f14:	ldr	x0, [x0]
    4f18:	ldr	x0, [x0]
    4f1c:	cmp	x0, #0x0
    4f20:	b.eq	4f74 <grub_env_write_color_highlight+0x44c>  // b.none
    4f24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4f28:	add	x0, x0, #0x0
    4f2c:	ldr	x0, [x0]
    4f30:	ldr	x3, [x0]
    4f34:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4f38:	add	x0, x0, #0x0
    4f3c:	ldr	x0, [x0]
    4f40:	ldr	w0, [x0]
    4f44:	sub	w0, w0, #0x1
    4f48:	mov	w2, w0
    4f4c:	ldr	w1, [sp, #44]
    4f50:	ldr	x0, [sp, #56]
    4f54:	blr	x3
    4f58:	b	4f74 <grub_env_write_color_highlight+0x44c>
    4f5c:	ldr	x0, [sp, #72]
    4f60:	add	x0, x0, #0x1
    4f64:	str	x0, [sp, #72]
    4f68:	ldr	x0, [sp, #64]
    4f6c:	add	x0, x0, #0x1
    4f70:	str	x0, [sp, #64]
    4f74:	ldr	x0, [sp, #72]
    4f78:	ldrb	w0, [x0]
    4f7c:	cmp	w0, #0x0
    4f80:	b.eq	4fac <grub_env_write_color_highlight+0x484>  // b.none
    4f84:	ldr	x0, [sp, #64]
    4f88:	ldrb	w0, [x0]
    4f8c:	cmp	w0, #0x0
    4f90:	b.eq	4fac <grub_env_write_color_highlight+0x484>  // b.none
    4f94:	ldr	x0, [sp, #72]
    4f98:	ldrb	w1, [x0]
    4f9c:	ldr	x0, [sp, #64]
    4fa0:	ldrb	w0, [x0]
    4fa4:	cmp	w1, w0
    4fa8:	b.eq	4f5c <grub_env_write_color_highlight+0x434>  // b.none
    4fac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4fb0:	add	x0, x0, #0x0
    4fb4:	ldr	x0, [x0]
    4fb8:	ldr	x19, [x0]
    4fbc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    4fc0:	add	x0, x0, #0x0
    4fc4:	ldr	x0, [x0]
    4fc8:	ldr	x0, [x0]
    4fcc:	ldr	x1, [sp, #72]
    4fd0:	bl	4c60 <grub_env_write_color_highlight+0x138>
    4fd4:	add	x0, x19, x0
    4fd8:	str	x0, [sp, #72]
    4fdc:	ldr	x0, [sp, #72]
    4fe0:	strb	wzr, [x0]
    4fe4:	b	4fec <grub_env_write_color_highlight+0x4c4>
    4fe8:	nop
    4fec:	mov	w0, #0x0                   	// #0
    4ff0:	ldr	x19, [sp, #16]
    4ff4:	ldp	x29, x30, [sp], #80
    4ff8:	ret
    4ffc:	nop
	...
    5028:	stp	x29, x30, [sp, #-80]!
    502c:	mov	x29, sp
    5030:	str	x0, [sp, #40]
    5034:	str	x1, [sp, #32]
    5038:	str	x2, [sp, #24]
    503c:	ldr	x0, [sp, #40]
    5040:	ldr	x0, [x0]
    5044:	str	x0, [sp, #72]
    5048:	ldr	x0, [sp, #32]
    504c:	bl	0 <grub_partition_get_name>
    5050:	str	x0, [sp, #64]
    5054:	ldr	x0, [sp, #64]
    5058:	cmp	x0, #0x0
    505c:	b.ne	5068 <grub_env_write_color_highlight+0x540>  // b.any
    5060:	mov	w0, #0x1                   	// #1
    5064:	b	50c8 <grub_env_write_color_highlight+0x5a0>
    5068:	ldr	x2, [sp, #64]
    506c:	ldr	x1, [sp, #72]
    5070:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5074:	add	x0, x0, #0x0
    5078:	ldr	x0, [x0]
    507c:	bl	0 <grub_xasprintf>
    5080:	str	x0, [sp, #56]
    5084:	ldr	x0, [sp, #64]
    5088:	bl	0 <grub_free>
    508c:	ldr	x0, [sp, #56]
    5090:	cmp	x0, #0x0
    5094:	b.ne	50a0 <grub_env_write_color_highlight+0x578>  // b.any
    5098:	mov	w0, #0x1                   	// #1
    509c:	b	50c8 <grub_env_write_color_highlight+0x5a0>
    50a0:	mov	w2, #0x2                   	// #2
    50a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    50a8:	add	x0, x0, #0x0
    50ac:	ldr	x1, [x0]
    50b0:	ldr	x0, [sp, #56]
    50b4:	bl	4dbc <grub_env_write_color_highlight+0x294>
    50b8:	str	w0, [sp, #52]
    50bc:	ldr	x0, [sp, #56]
    50c0:	bl	0 <grub_free>
    50c4:	ldr	w0, [sp, #52]
    50c8:	ldp	x29, x30, [sp], #80
    50cc:	ret
	...
    50e0:	stp	x29, x30, [sp, #-64]!
    50e4:	mov	x29, sp
    50e8:	str	x0, [sp, #40]
    50ec:	str	x1, [sp, #32]
    50f0:	str	x2, [sp, #24]
    50f4:	ldr	x0, [sp, #32]
    50f8:	ldrb	w0, [x0]
    50fc:	and	w0, w0, #0x1
    5100:	and	w0, w0, #0xff
    5104:	cmp	w0, #0x0
    5108:	b.ne	5194 <grub_env_write_color_highlight+0x66c>  // b.any
    510c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5110:	add	x0, x0, #0x0
    5114:	ldr	x0, [x0]
    5118:	ldr	w0, [x0]
    511c:	cmp	w0, #0x4
    5120:	b.ne	5138 <grub_env_write_color_highlight+0x610>  // b.any
    5124:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5128:	add	x0, x0, #0x0
    512c:	ldr	x0, [x0]
    5130:	str	x0, [sp, #56]
    5134:	b	5174 <grub_env_write_color_highlight+0x64c>
    5138:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    513c:	add	x0, x0, #0x0
    5140:	ldr	x0, [x0]
    5144:	ldr	w0, [x0]
    5148:	cmp	w0, #0x3
    514c:	b.ne	5164 <grub_env_write_color_highlight+0x63c>  // b.any
    5150:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5154:	add	x0, x0, #0x0
    5158:	ldr	x0, [x0]
    515c:	str	x0, [sp, #56]
    5160:	b	5174 <grub_env_write_color_highlight+0x64c>
    5164:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5168:	add	x0, x0, #0x0
    516c:	ldr	x0, [x0]
    5170:	str	x0, [sp, #56]
    5174:	mov	w2, #0x3                   	// #3
    5178:	ldr	x1, [sp, #56]
    517c:	ldr	x0, [sp, #40]
    5180:	bl	4dbc <grub_env_write_color_highlight+0x294>
    5184:	cmp	w0, #0x0
    5188:	b.eq	521c <grub_env_write_color_highlight+0x6f4>  // b.none
    518c:	mov	w0, #0x1                   	// #1
    5190:	b	5220 <grub_env_write_color_highlight+0x6f8>
    5194:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5198:	add	x0, x0, #0x0
    519c:	ldr	x1, [x0]
    51a0:	ldr	x0, [sp, #40]
    51a4:	bl	0 <grub_strcmp>
    51a8:	cmp	w0, #0x0
    51ac:	b.eq	521c <grub_env_write_color_highlight+0x6f4>  // b.none
    51b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    51b4:	add	x0, x0, #0x0
    51b8:	ldr	x1, [x0]
    51bc:	ldr	x0, [sp, #40]
    51c0:	bl	0 <grub_strcmp>
    51c4:	cmp	w0, #0x0
    51c8:	b.eq	521c <grub_env_write_color_highlight+0x6f4>  // b.none
    51cc:	ldr	x1, [sp, #40]
    51d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    51d4:	add	x0, x0, #0x0
    51d8:	ldr	x0, [x0]
    51dc:	bl	0 <grub_xasprintf>
    51e0:	str	x0, [sp, #48]
    51e4:	mov	w2, #0x3                   	// #3
    51e8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    51ec:	add	x0, x0, #0x0
    51f0:	ldr	x1, [x0]
    51f4:	ldr	x0, [sp, #48]
    51f8:	bl	4dbc <grub_env_write_color_highlight+0x294>
    51fc:	cmp	w0, #0x0
    5200:	b.eq	5214 <grub_env_write_color_highlight+0x6ec>  // b.none
    5204:	ldr	x0, [sp, #48]
    5208:	bl	0 <grub_free>
    520c:	mov	w0, #0x1                   	// #1
    5210:	b	5220 <grub_env_write_color_highlight+0x6f8>
    5214:	ldr	x0, [sp, #48]
    5218:	bl	0 <grub_free>
    521c:	mov	w0, #0x0                   	// #0
    5220:	ldp	x29, x30, [sp], #64
    5224:	ret
	...
    5268:	stp	x29, x30, [sp, #-48]!
    526c:	mov	x29, sp
    5270:	str	x0, [sp, #24]
    5274:	str	x1, [sp, #16]
    5278:	ldr	x0, [sp, #24]
    527c:	bl	0 <grub_device_open>
    5280:	str	x0, [sp, #40]
    5284:	ldr	x0, [sp, #40]
    5288:	cmp	x0, #0x0
    528c:	b.ne	52a8 <grub_env_write_color_highlight+0x780>  // b.any
    5290:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5294:	add	x0, x0, #0x0
    5298:	ldr	x0, [x0]
    529c:	str	wzr, [x0]
    52a0:	mov	w0, #0x0                   	// #0
    52a4:	b	5390 <grub_env_write_color_highlight+0x868>
    52a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    52ac:	add	x0, x0, #0x0
    52b0:	ldr	x0, [x0]
    52b4:	ldr	x0, [x0]
    52b8:	mov	x1, x0
    52bc:	ldr	x0, [sp, #24]
    52c0:	bl	0 <grub_strcmp>
    52c4:	cmp	w0, #0x0
    52c8:	b.ne	5344 <grub_env_write_color_highlight+0x81c>  // b.any
    52cc:	mov	w2, #0x2                   	// #2
    52d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    52d4:	add	x0, x0, #0x0
    52d8:	ldr	x1, [x0]
    52dc:	ldr	x0, [sp, #24]
    52e0:	bl	4dbc <grub_env_write_color_highlight+0x294>
    52e4:	cmp	w0, #0x0
    52e8:	b.eq	52fc <grub_env_write_color_highlight+0x7d4>  // b.none
    52ec:	ldr	x0, [sp, #40]
    52f0:	bl	0 <grub_device_close>
    52f4:	mov	w0, #0x1                   	// #1
    52f8:	b	5390 <grub_env_write_color_highlight+0x868>
    52fc:	ldr	x0, [sp, #40]
    5300:	ldr	x0, [x0]
    5304:	cmp	x0, #0x0
    5308:	b.eq	5374 <grub_env_write_color_highlight+0x84c>  // b.none
    530c:	ldr	x0, [sp, #40]
    5310:	ldr	x3, [x0]
    5314:	mov	x2, #0x0                   	// #0
    5318:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    531c:	add	x0, x0, #0x0
    5320:	ldr	x1, [x0]
    5324:	mov	x0, x3
    5328:	bl	0 <grub_partition_iterate>
    532c:	cmp	w0, #0x0
    5330:	b.eq	5374 <grub_env_write_color_highlight+0x84c>  // b.none
    5334:	ldr	x0, [sp, #40]
    5338:	bl	0 <grub_device_close>
    533c:	mov	w0, #0x1                   	// #1
    5340:	b	5390 <grub_env_write_color_highlight+0x868>
    5344:	mov	w2, #0x1                   	// #1
    5348:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    534c:	add	x0, x0, #0x0
    5350:	ldr	x1, [x0]
    5354:	ldr	x0, [sp, #24]
    5358:	bl	4dbc <grub_env_write_color_highlight+0x294>
    535c:	cmp	w0, #0x0
    5360:	b.eq	5374 <grub_env_write_color_highlight+0x84c>  // b.none
    5364:	ldr	x0, [sp, #40]
    5368:	bl	0 <grub_device_close>
    536c:	mov	w0, #0x1                   	// #1
    5370:	b	5390 <grub_env_write_color_highlight+0x868>
    5374:	ldr	x0, [sp, #40]
    5378:	bl	0 <grub_device_close>
    537c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5380:	add	x0, x0, #0x0
    5384:	ldr	x0, [x0]
    5388:	str	wzr, [x0]
    538c:	mov	w0, #0x0                   	// #0
    5390:	ldp	x29, x30, [sp], #48
    5394:	ret
	...
    53c0:	stp	x29, x30, [sp, #-32]!
    53c4:	mov	x29, sp
    53c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    53cc:	add	x0, x0, #0x0
    53d0:	ldr	x0, [x0]
    53d4:	ldr	x0, [x0]
    53d8:	add	x1, x0, #0x1
    53dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    53e0:	add	x0, x0, #0x0
    53e4:	ldr	x0, [x0]
    53e8:	str	x1, [x0]
    53ec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    53f0:	add	x0, x0, #0x0
    53f4:	ldr	x0, [x0]
    53f8:	ldr	x0, [x0]
    53fc:	mov	w1, #0x2c                  	// #44
    5400:	bl	0 <grub_strchr>
    5404:	str	x0, [sp, #24]
    5408:	ldr	x0, [sp, #24]
    540c:	cmp	x0, #0x0
    5410:	b.ne	5438 <grub_env_write_color_highlight+0x910>  // b.any
    5414:	mov	x1, #0x0                   	// #0
    5418:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    541c:	add	x0, x0, #0x0
    5420:	ldr	x0, [x0]
    5424:	bl	4bb0 <grub_env_write_color_highlight+0x88>
    5428:	cmp	w0, #0x0
    542c:	b.eq	54dc <grub_env_write_color_highlight+0x9b4>  // b.none
    5430:	mov	w0, #0x1                   	// #1
    5434:	b	54e0 <grub_env_write_color_highlight+0x9b8>
    5438:	ldr	x0, [sp, #24]
    543c:	strb	wzr, [x0]
    5440:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5444:	add	x0, x0, #0x0
    5448:	ldr	x0, [x0]
    544c:	ldr	x0, [x0]
    5450:	bl	0 <grub_device_open>
    5454:	str	x0, [sp, #16]
    5458:	ldr	x0, [sp, #24]
    545c:	mov	w1, #0x2c                  	// #44
    5460:	strb	w1, [x0]
    5464:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5468:	add	x0, x0, #0x0
    546c:	ldr	x0, [x0]
    5470:	str	wzr, [x0]
    5474:	ldr	x0, [sp, #16]
    5478:	cmp	x0, #0x0
    547c:	b.eq	54d4 <grub_env_write_color_highlight+0x9ac>  // b.none
    5480:	ldr	x0, [sp, #16]
    5484:	ldr	x0, [x0]
    5488:	cmp	x0, #0x0
    548c:	b.eq	54c8 <grub_env_write_color_highlight+0x9a0>  // b.none
    5490:	ldr	x0, [sp, #16]
    5494:	ldr	x3, [x0]
    5498:	mov	x2, #0x0                   	// #0
    549c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    54a0:	add	x0, x0, #0x0
    54a4:	ldr	x1, [x0]
    54a8:	mov	x0, x3
    54ac:	bl	0 <grub_partition_iterate>
    54b0:	cmp	w0, #0x0
    54b4:	b.eq	54c8 <grub_env_write_color_highlight+0x9a0>  // b.none
    54b8:	ldr	x0, [sp, #16]
    54bc:	bl	0 <grub_device_close>
    54c0:	mov	w0, #0x1                   	// #1
    54c4:	b	54e0 <grub_env_write_color_highlight+0x9b8>
    54c8:	ldr	x0, [sp, #16]
    54cc:	bl	0 <grub_device_close>
    54d0:	b	54dc <grub_env_write_color_highlight+0x9b4>
    54d4:	mov	w0, #0x1                   	// #1
    54d8:	b	54e0 <grub_env_write_color_highlight+0x9b8>
    54dc:	mov	w0, #0x0                   	// #0
    54e0:	ldp	x29, x30, [sp], #32
    54e4:	ret
	...
    5508:	stp	x29, x30, [sp, #-96]!
    550c:	mov	x29, sp
    5510:	str	x19, [sp, #16]
    5514:	str	wzr, [sp, #92]
    5518:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    551c:	add	x0, x0, #0x0
    5520:	ldr	x0, [x0]
    5524:	ldr	x0, [x0]
    5528:	bl	0 <grub_file_get_device_name>
    552c:	str	x0, [sp, #80]
    5530:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5534:	add	x0, x0, #0x0
    5538:	ldr	x0, [x0]
    553c:	ldr	w0, [x0]
    5540:	cmp	w0, #0x0
    5544:	b.eq	5550 <grub_env_write_color_highlight+0xa28>  // b.none
    5548:	mov	w0, #0x1                   	// #1
    554c:	b	577c <grub_env_write_color_highlight+0xc54>
    5550:	ldr	x0, [sp, #80]
    5554:	bl	0 <grub_device_open>
    5558:	str	x0, [sp, #72]
    555c:	ldr	x0, [sp, #72]
    5560:	cmp	x0, #0x0
    5564:	b.ne	5574 <grub_env_write_color_highlight+0xa4c>  // b.any
    5568:	mov	w0, #0x1                   	// #1
    556c:	str	w0, [sp, #92]
    5570:	b	575c <grub_env_write_color_highlight+0xc34>
    5574:	ldr	x0, [sp, #72]
    5578:	bl	0 <grub_fs_probe>
    557c:	str	x0, [sp, #64]
    5580:	ldr	x0, [sp, #64]
    5584:	cmp	x0, #0x0
    5588:	b.ne	5598 <grub_env_write_color_highlight+0xa70>  // b.any
    558c:	mov	w0, #0x1                   	// #1
    5590:	str	w0, [sp, #92]
    5594:	b	575c <grub_env_write_color_highlight+0xc34>
    5598:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    559c:	add	x0, x0, #0x0
    55a0:	ldr	x0, [x0]
    55a4:	ldr	x19, [x0]
    55a8:	ldr	x0, [sp, #80]
    55ac:	cmp	x0, #0x0
    55b0:	b.eq	55c4 <grub_env_write_color_highlight+0xa9c>  // b.none
    55b4:	ldr	x0, [sp, #80]
    55b8:	bl	0 <grub_strlen>
    55bc:	add	x0, x0, #0x2
    55c0:	b	55c8 <grub_env_write_color_highlight+0xaa0>
    55c4:	mov	x0, #0x0                   	// #0
    55c8:	add	x0, x19, x0
    55cc:	mov	w1, #0x2f                  	// #47
    55d0:	bl	0 <grub_strchr>
    55d4:	str	x0, [sp, #56]
    55d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    55dc:	add	x0, x0, #0x0
    55e0:	ldr	x0, [x0]
    55e4:	ldr	x0, [x0]
    55e8:	mov	w1, #0x2f                  	// #47
    55ec:	bl	0 <grub_strrchr>
    55f0:	str	x0, [sp, #48]
    55f4:	ldr	x0, [sp, #56]
    55f8:	cmp	x0, #0x0
    55fc:	b.eq	56a8 <grub_env_write_color_highlight+0xb80>  // b.none
    5600:	ldr	x0, [sp, #48]
    5604:	add	x1, x0, #0x1
    5608:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    560c:	add	x0, x0, #0x0
    5610:	ldr	x0, [x0]
    5614:	str	x1, [x0]
    5618:	ldr	x0, [sp, #56]
    561c:	bl	0 <grub_strdup>
    5620:	str	x0, [sp, #56]
    5624:	ldr	x0, [sp, #56]
    5628:	cmp	x0, #0x0
    562c:	b.ne	563c <grub_env_write_color_highlight+0xb14>  // b.any
    5630:	mov	w0, #0x1                   	// #1
    5634:	str	w0, [sp, #92]
    5638:	b	575c <grub_env_write_color_highlight+0xc34>
    563c:	mov	w1, #0x2f                  	// #47
    5640:	ldr	x0, [sp, #56]
    5644:	bl	0 <grub_strrchr>
    5648:	str	x0, [sp, #40]
    564c:	ldr	x0, [sp, #40]
    5650:	add	x0, x0, #0x1
    5654:	strb	wzr, [x0]
    5658:	ldr	x0, [sp, #64]
    565c:	ldr	x4, [x0, #24]
    5660:	mov	x3, #0x0                   	// #0
    5664:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5668:	add	x0, x0, #0x0
    566c:	ldr	x2, [x0]
    5670:	ldr	x1, [sp, #56]
    5674:	ldr	x0, [sp, #72]
    5678:	blr	x4
    567c:	ldr	x0, [sp, #56]
    5680:	bl	0 <grub_free>
    5684:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5688:	add	x0, x0, #0x0
    568c:	ldr	x0, [x0]
    5690:	ldr	w0, [x0]
    5694:	cmp	w0, #0x0
    5698:	b.eq	575c <grub_env_write_color_highlight+0xc34>  // b.none
    569c:	mov	w0, #0x1                   	// #1
    56a0:	str	w0, [sp, #92]
    56a4:	b	575c <grub_env_write_color_highlight+0xc34>
    56a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    56ac:	add	x0, x0, #0x0
    56b0:	ldr	x0, [x0]
    56b4:	ldr	x0, [x0]
    56b8:	bl	0 <grub_strlen>
    56bc:	mov	x1, x0
    56c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    56c4:	add	x0, x0, #0x0
    56c8:	ldr	x0, [x0]
    56cc:	ldr	x0, [x0]
    56d0:	add	x1, x0, x1
    56d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    56d8:	add	x0, x0, #0x0
    56dc:	ldr	x0, [x0]
    56e0:	str	x1, [x0]
    56e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    56e8:	add	x0, x0, #0x0
    56ec:	ldr	x0, [x0]
    56f0:	bl	0 <grub_strdup>
    56f4:	mov	x1, x0
    56f8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    56fc:	add	x0, x0, #0x0
    5700:	ldr	x0, [x0]
    5704:	str	x1, [x0]
    5708:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    570c:	add	x0, x0, #0x0
    5710:	ldr	x0, [x0]
    5714:	ldr	x0, [x0]
    5718:	cmp	x0, #0x0
    571c:	b.ne	572c <grub_env_write_color_highlight+0xc04>  // b.any
    5720:	mov	w0, #0x1                   	// #1
    5724:	str	w0, [sp, #92]
    5728:	b	575c <grub_env_write_color_highlight+0xc34>
    572c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5730:	add	x0, x0, #0x0
    5734:	ldr	x0, [x0]
    5738:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    573c:	add	x1, x1, #0x0
    5740:	ldr	x1, [x1]
    5744:	str	x1, [x0]
    5748:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    574c:	add	x0, x0, #0x0
    5750:	ldr	x0, [x0]
    5754:	mov	w1, #0x1                   	// #1
    5758:	str	w1, [x0]
    575c:	ldr	x0, [sp, #72]
    5760:	cmp	x0, #0x0
    5764:	b.eq	5770 <grub_env_write_color_highlight+0xc48>  // b.none
    5768:	ldr	x0, [sp, #72]
    576c:	bl	0 <grub_device_close>
    5770:	ldr	x0, [sp, #80]
    5774:	bl	0 <grub_free>
    5778:	ldr	w0, [sp, #92]
    577c:	ldr	x19, [sp, #16]
    5780:	ldp	x29, x30, [sp], #96
    5784:	ret
	...
    57c8:	stp	x29, x30, [sp, #-80]!
    57cc:	mov	x29, sp
    57d0:	str	x0, [sp, #24]
    57d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    57d8:	add	x0, x0, #0x0
    57dc:	ldr	x1, [x0]
    57e0:	add	x0, sp, #0x28
    57e4:	ldrh	w2, [x1]
    57e8:	strh	w2, [x0]
    57ec:	ldrb	w1, [x1, #2]
    57f0:	strb	w1, [x0, #2]
    57f4:	ldr	x0, [sp, #24]
    57f8:	bl	4b78 <grub_env_write_color_highlight+0x50>
    57fc:	str	x0, [sp, #64]
    5800:	ldr	x0, [sp, #64]
    5804:	cmp	x0, #0x0
    5808:	b.eq	5820 <grub_env_write_color_highlight+0xcf8>  // b.none
    580c:	ldr	x0, [sp, #64]
    5810:	ldr	w0, [x0, #40]
    5814:	and	w0, w0, #0x10
    5818:	cmp	w0, #0x0
    581c:	b.ne	5828 <grub_env_write_color_highlight+0xd00>  // b.any
    5820:	mov	w0, #0x0                   	// #0
    5824:	b	5a0c <grub_env_write_color_highlight+0xee4>
    5828:	ldr	x0, [sp, #64]
    582c:	ldr	x0, [x0, #64]
    5830:	str	x0, [sp, #56]
    5834:	ldr	x0, [sp, #56]
    5838:	ldr	x0, [x0, #16]
    583c:	cmp	x0, #0x0
    5840:	b.ne	584c <grub_env_write_color_highlight+0xd24>  // b.any
    5844:	mov	w0, #0x0                   	// #0
    5848:	b	5a0c <grub_env_write_color_highlight+0xee4>
    584c:	mov	w2, #0x4                   	// #4
    5850:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5854:	add	x0, x0, #0x0
    5858:	ldr	x1, [x0]
    585c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5860:	add	x0, x0, #0x0
    5864:	ldr	x0, [x0]
    5868:	bl	4dbc <grub_env_write_color_highlight+0x294>
    586c:	cmp	w0, #0x0
    5870:	b.eq	587c <grub_env_write_color_highlight+0xd54>  // b.none
    5874:	mov	w0, #0x1                   	// #1
    5878:	b	5a0c <grub_env_write_color_highlight+0xee4>
    587c:	ldr	x0, [sp, #56]
    5880:	ldr	x0, [x0, #16]
    5884:	str	x0, [sp, #72]
    5888:	b	58e8 <grub_env_write_color_highlight+0xdc0>
    588c:	ldr	x0, [sp, #72]
    5890:	ldr	w0, [x0, #8]
    5894:	cmp	w0, #0x0
    5898:	b.eq	58d8 <grub_env_write_color_highlight+0xdb0>  // b.none
    589c:	ldr	x0, [sp, #72]
    58a0:	ldr	w0, [x0, #8]
    58a4:	and	w0, w0, #0xff
    58a8:	strb	w0, [sp, #41]
    58ac:	add	x3, sp, #0x28
    58b0:	mov	w2, #0x4                   	// #4
    58b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    58b8:	add	x0, x0, #0x0
    58bc:	ldr	x1, [x0]
    58c0:	mov	x0, x3
    58c4:	bl	4dbc <grub_env_write_color_highlight+0x294>
    58c8:	cmp	w0, #0x0
    58cc:	b.eq	58dc <grub_env_write_color_highlight+0xdb4>  // b.none
    58d0:	mov	w0, #0x1                   	// #1
    58d4:	b	5a0c <grub_env_write_color_highlight+0xee4>
    58d8:	nop
    58dc:	ldr	x0, [sp, #72]
    58e0:	add	x0, x0, #0x28
    58e4:	str	x0, [sp, #72]
    58e8:	ldr	x0, [sp, #72]
    58ec:	ldr	x0, [x0, #16]
    58f0:	cmp	x0, #0x0
    58f4:	b.ne	588c <grub_env_write_color_highlight+0xd64>  // b.any
    58f8:	mov	w2, #0x4                   	// #4
    58fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5900:	add	x0, x0, #0x0
    5904:	ldr	x1, [x0]
    5908:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    590c:	add	x0, x0, #0x0
    5910:	ldr	x0, [x0]
    5914:	bl	4dbc <grub_env_write_color_highlight+0x294>
    5918:	cmp	w0, #0x0
    591c:	b.eq	5928 <grub_env_write_color_highlight+0xe00>  // b.none
    5920:	mov	w0, #0x1                   	// #1
    5924:	b	5a0c <grub_env_write_color_highlight+0xee4>
    5928:	mov	w2, #0x4                   	// #4
    592c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5930:	add	x0, x0, #0x0
    5934:	ldr	x1, [x0]
    5938:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    593c:	add	x0, x0, #0x0
    5940:	ldr	x0, [x0]
    5944:	bl	4dbc <grub_env_write_color_highlight+0x294>
    5948:	cmp	w0, #0x0
    594c:	b.eq	5958 <grub_env_write_color_highlight+0xe30>  // b.none
    5950:	mov	w0, #0x1                   	// #1
    5954:	b	5a0c <grub_env_write_color_highlight+0xee4>
    5958:	ldr	x0, [sp, #56]
    595c:	ldr	x0, [x0, #16]
    5960:	str	x0, [sp, #72]
    5964:	b	59f8 <grub_env_write_color_highlight+0xed0>
    5968:	ldr	x0, [sp, #72]
    596c:	ldr	x0, [x0]
    5970:	cmp	x0, #0x0
    5974:	b.eq	59e8 <grub_env_write_color_highlight+0xec0>  // b.none
    5978:	ldr	x0, [sp, #72]
    597c:	ldr	x0, [x0]
    5980:	mov	x1, x0
    5984:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5988:	add	x0, x0, #0x0
    598c:	ldr	x0, [x0]
    5990:	bl	0 <grub_xasprintf>
    5994:	str	x0, [sp, #48]
    5998:	ldr	x0, [sp, #48]
    599c:	cmp	x0, #0x0
    59a0:	b.ne	59ac <grub_env_write_color_highlight+0xe84>  // b.any
    59a4:	mov	w0, #0x1                   	// #1
    59a8:	b	5a0c <grub_env_write_color_highlight+0xee4>
    59ac:	mov	w2, #0x4                   	// #4
    59b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    59b4:	add	x0, x0, #0x0
    59b8:	ldr	x1, [x0]
    59bc:	ldr	x0, [sp, #48]
    59c0:	bl	4dbc <grub_env_write_color_highlight+0x294>
    59c4:	cmp	w0, #0x0
    59c8:	b.eq	59dc <grub_env_write_color_highlight+0xeb4>  // b.none
    59cc:	ldr	x0, [sp, #48]
    59d0:	bl	0 <grub_free>
    59d4:	mov	w0, #0x1                   	// #1
    59d8:	b	5a0c <grub_env_write_color_highlight+0xee4>
    59dc:	ldr	x0, [sp, #48]
    59e0:	bl	0 <grub_free>
    59e4:	b	59ec <grub_env_write_color_highlight+0xec4>
    59e8:	nop
    59ec:	ldr	x0, [sp, #72]
    59f0:	add	x0, x0, #0x28
    59f4:	str	x0, [sp, #72]
    59f8:	ldr	x0, [sp, #72]
    59fc:	ldr	x0, [x0, #16]
    5a00:	cmp	x0, #0x0
    5a04:	b.ne	5968 <grub_env_write_color_highlight+0xe40>  // b.any
    5a08:	mov	w0, #0x0                   	// #0
    5a0c:	ldp	x29, x30, [sp], #80
    5a10:	ret
    5a14:	nop
	...
    5a48:	stp	x29, x30, [sp, #-48]!
    5a4c:	mov	x29, sp
    5a50:	str	x0, [sp, #24]
    5a54:	mov	w0, #0x1                   	// #1
    5a58:	str	w0, [sp, #44]
    5a5c:	b	5a84 <grub_env_write_color_highlight+0xf5c>
    5a60:	ldr	x0, [sp, #24]
    5a64:	add	x1, x0, #0x1
    5a68:	str	x1, [sp, #24]
    5a6c:	ldrb	w1, [x0]
    5a70:	add	x0, sp, #0x2b
    5a74:	mov	x2, x0
    5a78:	ldr	w0, [sp, #44]
    5a7c:	bl	0 <grub_parser_cmdline_state>
    5a80:	str	w0, [sp, #44]
    5a84:	ldr	x0, [sp, #24]
    5a88:	ldrb	w0, [x0]
    5a8c:	cmp	w0, #0x0
    5a90:	b.ne	5a60 <grub_env_write_color_highlight+0xf38>  // b.any
    5a94:	ldr	w0, [sp, #44]
    5a98:	ldp	x29, x30, [sp], #48
    5a9c:	ret

0000000000005aa0 <grub_normal_do_completion>:
    5aa0:	stp	x29, x30, [sp, #-144]!
    5aa4:	mov	x29, sp
    5aa8:	str	x19, [sp, #16]
    5aac:	str	x0, [sp, #56]
    5ab0:	str	x1, [sp, #48]
    5ab4:	str	x2, [sp, #40]
    5ab8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5abc:	add	x0, x0, #0x0
    5ac0:	ldr	x0, [x0]
    5ac4:	str	xzr, [x0]
    5ac8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5acc:	add	x0, x0, #0x0
    5ad0:	ldr	x0, [x0]
    5ad4:	str	wzr, [x0]
    5ad8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5adc:	add	x0, x0, #0x0
    5ae0:	ldr	x0, [x0]
    5ae4:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    5ae8:	add	x1, x1, #0x0
    5aec:	ldr	x1, [x1]
    5af0:	str	x1, [x0]
    5af4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5af8:	add	x0, x0, #0x0
    5afc:	ldr	x0, [x0]
    5b00:	ldr	x1, [sp, #40]
    5b04:	str	x1, [x0]
    5b08:	ldr	x0, [sp, #48]
    5b0c:	mov	w1, #0x1                   	// #1
    5b10:	str	w1, [x0]
    5b14:	add	x1, sp, #0x48
    5b18:	add	x0, sp, #0x54
    5b1c:	mov	x4, x1
    5b20:	mov	x3, x0
    5b24:	mov	x2, #0x0                   	// #0
    5b28:	mov	x1, #0x0                   	// #0
    5b2c:	ldr	x0, [sp, #56]
    5b30:	bl	0 <grub_parser_split_cmdline>
    5b34:	cmp	w0, #0x0
    5b38:	b.eq	5b44 <grub_normal_do_completion+0xa4>  // b.none
    5b3c:	mov	x0, #0x0                   	// #0
    5b40:	b	5fe0 <grub_normal_do_completion+0x540>
    5b44:	ldr	w0, [sp, #84]
    5b48:	cmp	w0, #0x0
    5b4c:	b.ne	5b70 <grub_normal_do_completion+0xd0>  // b.any
    5b50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5b54:	add	x0, x0, #0x0
    5b58:	ldr	x0, [x0]
    5b5c:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    5b60:	add	x1, x1, #0x0
    5b64:	ldr	x1, [x1]
    5b68:	str	x1, [x0]
    5b6c:	b	5b9c <grub_normal_do_completion+0xfc>
    5b70:	ldr	x1, [sp, #72]
    5b74:	ldr	w0, [sp, #84]
    5b78:	sxtw	x0, w0
    5b7c:	lsl	x0, x0, #3
    5b80:	sub	x0, x0, #0x8
    5b84:	add	x0, x1, x0
    5b88:	ldr	x1, [x0]
    5b8c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5b90:	add	x0, x0, #0x0
    5b94:	ldr	x0, [x0]
    5b98:	str	x1, [x0]
    5b9c:	ldr	w0, [sp, #84]
    5ba0:	cmp	w0, #0x1
    5ba4:	b.le	5c0c <grub_normal_do_completion+0x16c>
    5ba8:	ldr	x0, [sp, #72]
    5bac:	ldr	x2, [x0]
    5bb0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5bb4:	add	x0, x0, #0x0
    5bb8:	ldr	x1, [x0]
    5bbc:	mov	x0, x2
    5bc0:	bl	0 <grub_strcmp>
    5bc4:	cmp	w0, #0x0
    5bc8:	b.ne	5c0c <grub_normal_do_completion+0x16c>  // b.any
    5bcc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5bd0:	add	x0, x0, #0x0
    5bd4:	ldr	x0, [x0]
    5bd8:	ldr	x0, [x0]
    5bdc:	mov	w1, #0x3d                  	// #61
    5be0:	bl	0 <grub_strchr>
    5be4:	str	x0, [sp, #104]
    5be8:	ldr	x0, [sp, #104]
    5bec:	cmp	x0, #0x0
    5bf0:	b.eq	5c0c <grub_normal_do_completion+0x16c>  // b.none
    5bf4:	ldr	x0, [sp, #104]
    5bf8:	add	x1, x0, #0x1
    5bfc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5c00:	add	x0, x0, #0x0
    5c04:	ldr	x0, [x0]
    5c08:	str	x1, [x0]
    5c0c:	ldr	x0, [sp, #56]
    5c10:	bl	5a48 <grub_env_write_color_highlight+0xf20>
    5c14:	mov	w1, w0
    5c18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5c1c:	add	x0, x0, #0x0
    5c20:	ldr	x0, [x0]
    5c24:	str	w1, [x0]
    5c28:	ldr	w0, [sp, #84]
    5c2c:	cmp	w0, #0x1
    5c30:	b.eq	5c40 <grub_normal_do_completion+0x1a0>  // b.none
    5c34:	ldr	w0, [sp, #84]
    5c38:	cmp	w0, #0x0
    5c3c:	b.ne	5cb0 <grub_normal_do_completion+0x210>  // b.any
    5c40:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5c44:	add	x0, x0, #0x0
    5c48:	ldr	x0, [x0]
    5c4c:	ldr	x0, [x0]
    5c50:	str	x0, [sp, #136]
    5c54:	b	5ca0 <grub_normal_do_completion+0x200>
    5c58:	ldr	x0, [sp, #136]
    5c5c:	ldr	w0, [x0, #24]
    5c60:	and	w0, w0, #0x100
    5c64:	cmp	w0, #0x0
    5c68:	b.eq	5c94 <grub_normal_do_completion+0x1f4>  // b.none
    5c6c:	ldr	x0, [sp, #136]
    5c70:	ldr	x3, [x0, #16]
    5c74:	mov	w2, #0x0                   	// #0
    5c78:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5c7c:	add	x0, x0, #0x0
    5c80:	ldr	x1, [x0]
    5c84:	mov	x0, x3
    5c88:	bl	4dbc <grub_env_write_color_highlight+0x294>
    5c8c:	cmp	w0, #0x0
    5c90:	b.ne	5f84 <grub_normal_do_completion+0x4e4>  // b.any
    5c94:	ldr	x0, [sp, #136]
    5c98:	ldr	x0, [x0]
    5c9c:	str	x0, [sp, #136]
    5ca0:	ldr	x0, [sp, #136]
    5ca4:	cmp	x0, #0x0
    5ca8:	b.ne	5c58 <grub_normal_do_completion+0x1b8>  // b.any
    5cac:	b	5d38 <grub_normal_do_completion+0x298>
    5cb0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5cb4:	add	x0, x0, #0x0
    5cb8:	ldr	x0, [x0]
    5cbc:	ldr	x0, [x0]
    5cc0:	ldrb	w0, [x0]
    5cc4:	cmp	w0, #0x2d
    5cc8:	b.ne	5ce0 <grub_normal_do_completion+0x240>  // b.any
    5ccc:	ldr	x0, [sp, #56]
    5cd0:	bl	57c8 <grub_env_write_color_highlight+0xca0>
    5cd4:	cmp	w0, #0x0
    5cd8:	b.eq	5d38 <grub_normal_do_completion+0x298>  // b.none
    5cdc:	b	5f98 <grub_normal_do_completion+0x4f8>
    5ce0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5ce4:	add	x0, x0, #0x0
    5ce8:	ldr	x0, [x0]
    5cec:	ldr	x0, [x0]
    5cf0:	ldrb	w0, [x0]
    5cf4:	cmp	w0, #0x28
    5cf8:	b.ne	5d2c <grub_normal_do_completion+0x28c>  // b.any
    5cfc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5d00:	add	x0, x0, #0x0
    5d04:	ldr	x0, [x0]
    5d08:	ldr	x0, [x0]
    5d0c:	mov	w1, #0x29                  	// #41
    5d10:	bl	0 <grub_strchr>
    5d14:	cmp	x0, #0x0
    5d18:	b.ne	5d2c <grub_normal_do_completion+0x28c>  // b.any
    5d1c:	bl	53c0 <grub_env_write_color_highlight+0x898>
    5d20:	cmp	w0, #0x0
    5d24:	b.eq	5d38 <grub_normal_do_completion+0x298>  // b.none
    5d28:	b	5f98 <grub_normal_do_completion+0x4f8>
    5d2c:	bl	5508 <grub_env_write_color_highlight+0x9e0>
    5d30:	cmp	w0, #0x0
    5d34:	b.ne	5f8c <grub_normal_do_completion+0x4ec>  // b.any
    5d38:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5d3c:	add	x0, x0, #0x0
    5d40:	ldr	x0, [x0]
    5d44:	ldr	w0, [x0]
    5d48:	cmp	w0, #0x1
    5d4c:	b.le	5d60 <grub_normal_do_completion+0x2c0>
    5d50:	ldr	x0, [sp, #48]
    5d54:	mov	w1, #0x1                   	// #1
    5d58:	str	w1, [x0]
    5d5c:	b	5d68 <grub_normal_do_completion+0x2c8>
    5d60:	ldr	x0, [sp, #48]
    5d64:	str	wzr, [x0]
    5d68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5d6c:	add	x0, x0, #0x0
    5d70:	ldr	x0, [x0]
    5d74:	ldr	x0, [x0]
    5d78:	cmp	x0, #0x0
    5d7c:	b.eq	5f94 <grub_normal_do_completion+0x4f4>  // b.none
    5d80:	str	wzr, [sp, #116]
    5d84:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5d88:	add	x0, x0, #0x0
    5d8c:	ldr	x0, [x0]
    5d90:	ldr	x0, [x0]
    5d94:	bl	0 <grub_strlen>
    5d98:	str	w0, [sp, #100]
    5d9c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5da0:	add	x0, x0, #0x0
    5da4:	ldr	x0, [x0]
    5da8:	ldr	x0, [x0]
    5dac:	bl	0 <grub_strlen>
    5db0:	str	w0, [sp, #96]
    5db4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5db8:	add	x0, x0, #0x0
    5dbc:	ldr	x0, [x0]
    5dc0:	ldr	x1, [x0]
    5dc4:	ldrsw	x0, [sp, #100]
    5dc8:	add	x0, x1, x0
    5dcc:	str	x0, [sp, #128]
    5dd0:	b	5dfc <grub_normal_do_completion+0x35c>
    5dd4:	ldr	x0, [sp, #128]
    5dd8:	ldrb	w0, [x0]
    5ddc:	cmp	w0, #0x20
    5de0:	b.ne	5df0 <grub_normal_do_completion+0x350>  // b.any
    5de4:	ldr	w0, [sp, #116]
    5de8:	add	w0, w0, #0x1
    5dec:	str	w0, [sp, #116]
    5df0:	ldr	x0, [sp, #128]
    5df4:	add	x0, x0, #0x1
    5df8:	str	x0, [sp, #128]
    5dfc:	ldr	x0, [sp, #128]
    5e00:	ldrb	w0, [x0]
    5e04:	cmp	w0, #0x0
    5e08:	b.ne	5dd4 <grub_normal_do_completion+0x334>  // b.any
    5e0c:	ldr	w1, [sp, #96]
    5e10:	ldr	w0, [sp, #100]
    5e14:	sub	w0, w1, w0
    5e18:	sxtw	x19, w0
    5e1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5e20:	add	x0, x0, #0x0
    5e24:	ldr	x0, [x0]
    5e28:	ldr	x0, [x0]
    5e2c:	bl	0 <grub_strlen>
    5e30:	add	x1, x19, x0
    5e34:	ldrsw	x0, [sp, #116]
    5e38:	add	x0, x1, x0
    5e3c:	add	x0, x0, #0x1
    5e40:	bl	0 <grub_malloc>
    5e44:	str	x0, [sp, #88]
    5e48:	ldr	x0, [sp, #88]
    5e4c:	str	x0, [sp, #120]
    5e50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5e54:	add	x0, x0, #0x0
    5e58:	ldr	x0, [x0]
    5e5c:	ldr	x1, [x0]
    5e60:	ldrsw	x0, [sp, #100]
    5e64:	add	x0, x1, x0
    5e68:	str	x0, [sp, #128]
    5e6c:	b	5ee8 <grub_normal_do_completion+0x448>
    5e70:	ldr	x0, [sp, #128]
    5e74:	ldrb	w0, [x0]
    5e78:	cmp	w0, #0x20
    5e7c:	b.ne	5ec4 <grub_normal_do_completion+0x424>  // b.any
    5e80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5e84:	add	x0, x0, #0x0
    5e88:	ldr	x0, [x0]
    5e8c:	ldr	w0, [x0]
    5e90:	cmp	w0, #0x3
    5e94:	b.eq	5ec4 <grub_normal_do_completion+0x424>  // b.none
    5e98:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5e9c:	add	x0, x0, #0x0
    5ea0:	ldr	x0, [x0]
    5ea4:	ldr	w0, [x0]
    5ea8:	cmp	w0, #0x3
    5eac:	b.eq	5ec4 <grub_normal_do_completion+0x424>  // b.none
    5eb0:	ldr	x0, [sp, #120]
    5eb4:	add	x1, x0, #0x1
    5eb8:	str	x1, [sp, #120]
    5ebc:	mov	w1, #0x5c                  	// #92
    5ec0:	strb	w1, [x0]
    5ec4:	ldr	x0, [sp, #120]
    5ec8:	add	x1, x0, #0x1
    5ecc:	str	x1, [sp, #120]
    5ed0:	ldr	x1, [sp, #128]
    5ed4:	ldrb	w1, [x1]
    5ed8:	strb	w1, [x0]
    5edc:	ldr	x0, [sp, #128]
    5ee0:	add	x0, x0, #0x1
    5ee4:	str	x0, [sp, #128]
    5ee8:	ldr	x0, [sp, #128]
    5eec:	ldrb	w0, [x0]
    5ef0:	cmp	w0, #0x0
    5ef4:	b.ne	5e70 <grub_normal_do_completion+0x3d0>  // b.any
    5ef8:	ldr	x0, [sp, #120]
    5efc:	strb	wzr, [x0]
    5f00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5f04:	add	x0, x0, #0x0
    5f08:	ldr	x0, [x0]
    5f0c:	ldr	w0, [x0]
    5f10:	cmp	w0, #0x1
    5f14:	b.ne	5f34 <grub_normal_do_completion+0x494>  // b.any
    5f18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5f1c:	add	x0, x0, #0x0
    5f20:	ldr	x0, [x0]
    5f24:	ldr	x0, [x0]
    5f28:	mov	x1, x0
    5f2c:	ldr	x0, [sp, #120]
    5f30:	bl	0 <grub_strcpy>
    5f34:	ldr	x0, [sp, #88]
    5f38:	ldrb	w0, [x0]
    5f3c:	cmp	w0, #0x0
    5f40:	b.ne	5f50 <grub_normal_do_completion+0x4b0>  // b.any
    5f44:	ldr	x0, [sp, #88]
    5f48:	bl	0 <grub_free>
    5f4c:	b	5f98 <grub_normal_do_completion+0x4f8>
    5f50:	ldr	w0, [sp, #84]
    5f54:	cmp	w0, #0x0
    5f58:	b.eq	5f68 <grub_normal_do_completion+0x4c8>  // b.none
    5f5c:	ldr	x0, [sp, #72]
    5f60:	ldr	x0, [x0]
    5f64:	bl	0 <grub_free>
    5f68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5f6c:	add	x0, x0, #0x0
    5f70:	ldr	x0, [x0]
    5f74:	ldr	x0, [x0]
    5f78:	bl	0 <grub_free>
    5f7c:	ldr	x0, [sp, #88]
    5f80:	b	5fe0 <grub_normal_do_completion+0x540>
    5f84:	nop
    5f88:	b	5f98 <grub_normal_do_completion+0x4f8>
    5f8c:	nop
    5f90:	b	5f98 <grub_normal_do_completion+0x4f8>
    5f94:	nop
    5f98:	ldr	w0, [sp, #84]
    5f9c:	cmp	w0, #0x0
    5fa0:	b.eq	5fb8 <grub_normal_do_completion+0x518>  // b.none
    5fa4:	ldr	x0, [sp, #72]
    5fa8:	ldr	x0, [x0]
    5fac:	bl	0 <grub_free>
    5fb0:	ldr	x0, [sp, #72]
    5fb4:	bl	0 <grub_free>
    5fb8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5fbc:	add	x0, x0, #0x0
    5fc0:	ldr	x0, [x0]
    5fc4:	ldr	x0, [x0]
    5fc8:	bl	0 <grub_free>
    5fcc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    5fd0:	add	x0, x0, #0x0
    5fd4:	ldr	x0, [x0]
    5fd8:	str	wzr, [x0]
    5fdc:	mov	x0, #0x0                   	// #0
    5fe0:	ldr	x19, [sp, #16]
    5fe4:	ldp	x29, x30, [sp], #144
    5fe8:	ret
    5fec:	nop
	...

0000000000006048 <grub_get_weekday>:
    6048:	sub	sp, sp, #0x20
    604c:	str	x0, [sp, #8]
    6050:	ldr	x0, [sp, #8]
    6054:	ldrb	w0, [x0, #2]
    6058:	cmp	w0, #0x2
    605c:	b.hi	606c <grub_get_weekday+0x24>  // b.pmore
    6060:	mov	w0, #0x1                   	// #1
    6064:	str	w0, [sp, #28]
    6068:	b	6070 <grub_get_weekday+0x28>
    606c:	str	wzr, [sp, #28]
    6070:	ldr	x0, [sp, #8]
    6074:	ldrh	w0, [x0]
    6078:	mov	w1, w0
    607c:	ldr	w0, [sp, #28]
    6080:	sub	w0, w1, w0
    6084:	str	w0, [sp, #24]
    6088:	ldr	x0, [sp, #8]
    608c:	ldrb	w0, [x0, #2]
    6090:	mov	w2, w0
    6094:	ldr	w1, [sp, #28]
    6098:	mov	w0, w1
    609c:	lsl	w0, w0, #1
    60a0:	add	w0, w0, w1
    60a4:	lsl	w0, w0, #2
    60a8:	add	w0, w2, w0
    60ac:	sub	w0, w0, #0x2
    60b0:	str	w0, [sp, #20]
    60b4:	ldr	x0, [sp, #8]
    60b8:	ldrb	w0, [x0, #3]
    60bc:	mov	w1, w0
    60c0:	ldr	w0, [sp, #24]
    60c4:	add	w1, w1, w0
    60c8:	ldr	w0, [sp, #24]
    60cc:	lsr	w0, w0, #2
    60d0:	add	w1, w1, w0
    60d4:	ldr	w2, [sp, #24]
    60d8:	mov	w0, #0x851f                	// #34079
    60dc:	movk	w0, #0x51eb, lsl #16
    60e0:	umull	x0, w2, w0
    60e4:	lsr	x0, x0, #32
    60e8:	lsr	w0, w0, #5
    60ec:	sub	w1, w1, w0
    60f0:	ldr	w2, [sp, #24]
    60f4:	mov	w0, #0x851f                	// #34079
    60f8:	movk	w0, #0x51eb, lsl #16
    60fc:	umull	x0, w2, w0
    6100:	lsr	x0, x0, #32
    6104:	lsr	w0, w0, #7
    6108:	add	w2, w1, w0
    610c:	ldr	w1, [sp, #20]
    6110:	mov	w0, w1
    6114:	lsl	w0, w0, #5
    6118:	sub	w1, w0, w1
    611c:	mov	w0, #0xaaab                	// #43691
    6120:	movk	w0, #0xaaaa, lsl #16
    6124:	umull	x0, w1, w0
    6128:	lsr	x0, x0, #32
    612c:	lsr	w0, w0, #3
    6130:	add	w1, w2, w0
    6134:	mov	w0, #0x4925                	// #18725
    6138:	movk	w0, #0x2492, lsl #16
    613c:	umull	x0, w1, w0
    6140:	lsr	x0, x0, #32
    6144:	sub	w2, w1, w0
    6148:	lsr	w2, w2, #1
    614c:	add	w0, w2, w0
    6150:	lsr	w2, w0, #2
    6154:	mov	w0, w2
    6158:	lsl	w0, w0, #3
    615c:	sub	w0, w0, w2
    6160:	sub	w2, w1, w0
    6164:	mov	w0, w2
    6168:	add	sp, sp, #0x20
    616c:	ret

0000000000006170 <grub_get_weekday_name>:
    6170:	stp	x29, x30, [sp, #-48]!
    6174:	mov	x29, sp
    6178:	str	x0, [sp, #24]
    617c:	ldr	x0, [sp, #24]
    6180:	bl	6048 <grub_get_weekday>
    6184:	mov	w1, w0
    6188:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    618c:	add	x0, x0, #0x0
    6190:	ldr	x0, [x0]
    6194:	sxtw	x1, w1
    6198:	ldr	x0, [x0, x1, lsl #3]
    619c:	str	x0, [sp, #40]
    61a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    61a4:	add	x0, x0, #0x0
    61a8:	ldr	x0, [x0]
    61ac:	ldr	x1, [x0]
    61b0:	ldr	x0, [sp, #40]
    61b4:	blr	x1
    61b8:	ldp	x29, x30, [sp], #48
    61bc:	ret
	...

00000000000061d0 <grub_unixtime2datetime>:
    61d0:	sub	sp, sp, #0x30
    61d4:	str	w0, [sp, #12]
    61d8:	str	x1, [sp]
    61dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    61e0:	add	x0, x0, #0x0
    61e4:	ldr	x1, [x0]
    61e8:	add	x0, sp, #0x10
    61ec:	ldr	x2, [x1]
    61f0:	str	x2, [x0]
    61f4:	ldr	w1, [x1, #8]
    61f8:	str	w1, [x0, #8]
    61fc:	ldr	w0, [sp, #12]
    6200:	cmp	w0, #0x0
    6204:	b.ge	623c <grub_unixtime2datetime+0x6c>  // b.tcont
    6208:	mov	w1, #0x517f                	// #20863
    620c:	movk	w1, #0x1, lsl #16
    6210:	ldr	w0, [sp, #12]
    6214:	sub	w0, w1, w0
    6218:	mov	w1, w0
    621c:	mov	w0, #0x4507                	// #17671
    6220:	movk	w0, #0xc22e, lsl #16
    6224:	umull	x0, w1, w0
    6228:	lsr	x0, x0, #32
    622c:	lsr	w0, w0, #16
    6230:	neg	w0, w0
    6234:	str	w0, [sp, #40]
    6238:	b	6258 <grub_unixtime2datetime+0x88>
    623c:	ldr	w1, [sp, #12]
    6240:	mov	w0, #0x4507                	// #17671
    6244:	movk	w0, #0xc22e, lsl #16
    6248:	umull	x0, w1, w0
    624c:	lsr	x0, x0, #32
    6250:	lsr	w0, w0, #16
    6254:	str	w0, [sp, #40]
    6258:	ldr	w1, [sp, #40]
    625c:	mov	w0, #0xae80                	// #44672
    6260:	movk	w0, #0xfffe, lsl #16
    6264:	mul	w1, w1, w0
    6268:	ldr	w0, [sp, #12]
    626c:	add	w0, w1, w0
    6270:	str	w0, [sp, #32]
    6274:	ldr	w1, [sp, #40]
    6278:	mov	w0, #0x6272                	// #25202
    627c:	add	w0, w1, w0
    6280:	str	w0, [sp, #36]
    6284:	ldr	w1, [sp, #36]
    6288:	mov	w0, #0xb073                	// #45171
    628c:	movk	w0, #0x166d, lsl #16
    6290:	umull	x0, w1, w0
    6294:	lsr	x0, x0, #32
    6298:	lsr	w0, w0, #7
    629c:	and	w0, w0, #0xffff
    62a0:	ubfiz	w0, w0, #2, #14
    62a4:	and	w0, w0, #0xffff
    62a8:	add	w0, w0, #0x76d
    62ac:	and	w1, w0, #0xffff
    62b0:	ldr	x0, [sp]
    62b4:	strh	w1, [x0]
    62b8:	ldr	w0, [sp, #36]
    62bc:	mov	w1, #0xb073                	// #45171
    62c0:	movk	w1, #0x166d, lsl #16
    62c4:	umull	x1, w0, w1
    62c8:	lsr	x1, x1, #32
    62cc:	lsr	w2, w1, #7
    62d0:	mov	w1, #0x5b5                 	// #1461
    62d4:	mul	w1, w2, w1
    62d8:	sub	w0, w0, w1
    62dc:	str	w0, [sp, #36]
    62e0:	ldr	w0, [sp, #36]
    62e4:	sub	w0, w0, #0x5b4
    62e8:	cmp	w0, #0x16c
    62ec:	b.hi	6318 <grub_unixtime2datetime+0x148>  // b.pmore
    62f0:	ldr	x0, [sp]
    62f4:	ldrh	w0, [x0]
    62f8:	add	w0, w0, #0x3
    62fc:	and	w1, w0, #0xffff
    6300:	ldr	x0, [sp]
    6304:	strh	w1, [x0]
    6308:	ldr	w0, [sp, #36]
    630c:	sub	w0, w0, #0x447
    6310:	str	w0, [sp, #36]
    6314:	b	638c <grub_unixtime2datetime+0x1bc>
    6318:	ldr	x0, [sp]
    631c:	ldrh	w2, [x0]
    6320:	ldr	w0, [sp, #36]
    6324:	mov	w1, #0xf361                	// #62305
    6328:	movk	w1, #0x6719, lsl #16
    632c:	umull	x1, w0, w1
    6330:	lsr	x1, x1, #32
    6334:	sub	w0, w0, w1
    6338:	lsr	w0, w0, #1
    633c:	add	w0, w0, w1
    6340:	lsr	w0, w0, #8
    6344:	and	w0, w0, #0xffff
    6348:	add	w0, w2, w0
    634c:	and	w1, w0, #0xffff
    6350:	ldr	x0, [sp]
    6354:	strh	w1, [x0]
    6358:	ldr	w0, [sp, #36]
    635c:	mov	w1, #0xf361                	// #62305
    6360:	movk	w1, #0x6719, lsl #16
    6364:	umull	x1, w0, w1
    6368:	lsr	x1, x1, #32
    636c:	sub	w2, w0, w1
    6370:	lsr	w2, w2, #1
    6374:	add	w1, w2, w1
    6378:	lsr	w2, w1, #8
    637c:	mov	w1, #0x16d                 	// #365
    6380:	mul	w1, w2, w1
    6384:	sub	w0, w0, w1
    6388:	str	w0, [sp, #36]
    638c:	str	wzr, [sp, #44]
    6390:	b	63e4 <grub_unixtime2datetime+0x214>
    6394:	ldr	w0, [sp, #44]
    6398:	cmp	w0, #0x1
    639c:	b.ne	63b8 <grub_unixtime2datetime+0x1e8>  // b.any
    63a0:	ldr	x0, [sp]
    63a4:	ldrh	w0, [x0]
    63a8:	and	w0, w0, #0x3
    63ac:	and	w0, w0, #0xffff
    63b0:	cmp	w0, #0x0
    63b4:	b.eq	63c8 <grub_unixtime2datetime+0x1f8>  // b.none
    63b8:	ldrsw	x0, [sp, #44]
    63bc:	add	x1, sp, #0x10
    63c0:	ldrb	w0, [x1, x0]
    63c4:	b	63cc <grub_unixtime2datetime+0x1fc>
    63c8:	mov	w0, #0x1d                  	// #29
    63cc:	ldr	w1, [sp, #36]
    63d0:	sub	w0, w1, w0
    63d4:	str	w0, [sp, #36]
    63d8:	ldr	w0, [sp, #44]
    63dc:	add	w0, w0, #0x1
    63e0:	str	w0, [sp, #44]
    63e4:	ldr	w0, [sp, #44]
    63e8:	cmp	w0, #0xb
    63ec:	b.gt	6434 <grub_unixtime2datetime+0x264>
    63f0:	ldr	w0, [sp, #44]
    63f4:	cmp	w0, #0x1
    63f8:	b.ne	6414 <grub_unixtime2datetime+0x244>  // b.any
    63fc:	ldr	x0, [sp]
    6400:	ldrh	w0, [x0]
    6404:	and	w0, w0, #0x3
    6408:	and	w0, w0, #0xffff
    640c:	cmp	w0, #0x0
    6410:	b.eq	6424 <grub_unixtime2datetime+0x254>  // b.none
    6414:	ldrsw	x0, [sp, #44]
    6418:	add	x1, sp, #0x10
    641c:	ldrb	w0, [x1, x0]
    6420:	b	6428 <grub_unixtime2datetime+0x258>
    6424:	mov	w0, #0x1d                  	// #29
    6428:	ldr	w1, [sp, #36]
    642c:	cmp	w0, w1
    6430:	b.ls	6394 <grub_unixtime2datetime+0x1c4>  // b.plast
    6434:	ldr	w0, [sp, #44]
    6438:	and	w0, w0, #0xff
    643c:	add	w0, w0, #0x1
    6440:	and	w1, w0, #0xff
    6444:	ldr	x0, [sp]
    6448:	strb	w1, [x0, #2]
    644c:	ldr	w0, [sp, #36]
    6450:	and	w0, w0, #0xff
    6454:	add	w0, w0, #0x1
    6458:	and	w1, w0, #0xff
    645c:	ldr	x0, [sp]
    6460:	strb	w1, [x0, #3]
    6464:	ldr	w1, [sp, #32]
    6468:	mov	w0, #0xb3c5                	// #46021
    646c:	movk	w0, #0x91a2, lsl #16
    6470:	umull	x0, w1, w0
    6474:	lsr	x0, x0, #32
    6478:	lsr	w0, w0, #11
    647c:	and	w1, w0, #0xff
    6480:	ldr	x0, [sp]
    6484:	strb	w1, [x0, #4]
    6488:	ldr	w0, [sp, #32]
    648c:	mov	w1, #0xb3c5                	// #46021
    6490:	movk	w1, #0x91a2, lsl #16
    6494:	umull	x1, w0, w1
    6498:	lsr	x1, x1, #32
    649c:	lsr	w2, w1, #11
    64a0:	mov	w1, #0xe10                 	// #3600
    64a4:	mul	w1, w2, w1
    64a8:	sub	w0, w0, w1
    64ac:	str	w0, [sp, #32]
    64b0:	ldr	w1, [sp, #32]
    64b4:	mov	w0, #0x8889                	// #34953
    64b8:	movk	w0, #0x8888, lsl #16
    64bc:	umull	x0, w1, w0
    64c0:	lsr	x0, x0, #32
    64c4:	lsr	w0, w0, #5
    64c8:	and	w1, w0, #0xff
    64cc:	ldr	x0, [sp]
    64d0:	strb	w1, [x0, #5]
    64d4:	ldr	w2, [sp, #32]
    64d8:	mov	w0, #0x8889                	// #34953
    64dc:	movk	w0, #0x8888, lsl #16
    64e0:	umull	x0, w2, w0
    64e4:	lsr	x0, x0, #32
    64e8:	lsr	w1, w0, #5
    64ec:	mov	w0, w1
    64f0:	lsl	w0, w0, #4
    64f4:	sub	w0, w0, w1
    64f8:	lsl	w0, w0, #2
    64fc:	sub	w1, w2, w0
    6500:	and	w1, w1, #0xff
    6504:	ldr	x0, [sp]
    6508:	strb	w1, [x0, #6]
    650c:	nop
    6510:	add	sp, sp, #0x30
    6514:	ret
	...
    6520:	sub	sp, sp, #0x20
    6524:	str	x0, [sp, #8]
    6528:	str	x1, [sp]
    652c:	ldr	x0, [sp, #8]
    6530:	str	x0, [sp, #24]
    6534:	ldr	x0, [sp]
    6538:	str	x0, [sp, #16]
    653c:	ldr	x0, [sp, #24]
    6540:	add	x1, x0, #0x1
    6544:	str	x1, [sp, #24]
    6548:	ldr	x1, [sp, #16]
    654c:	ldrb	w1, [x1]
    6550:	strb	w1, [x0]
    6554:	ldr	x0, [sp, #16]
    6558:	add	x1, x0, #0x1
    655c:	str	x1, [sp, #16]
    6560:	ldrb	w0, [x0]
    6564:	cmp	w0, #0x0
    6568:	b.ne	653c <grub_unixtime2datetime+0x36c>  // b.any
    656c:	ldr	x0, [sp, #24]
    6570:	sub	x0, x0, #0x1
    6574:	add	sp, sp, #0x20
    6578:	ret
    657c:	stp	x29, x30, [sp, #-32]!
    6580:	mov	x29, sp
    6584:	str	x0, [sp, #24]
    6588:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    658c:	add	x0, x0, #0x0
    6590:	ldr	x0, [x0]
    6594:	ldr	x0, [x0]
    6598:	ldr	x1, [sp, #24]
    659c:	bl	0 <grub_named_list_find>
    65a0:	ldp	x29, x30, [sp], #32
    65a4:	ret
	...
    65b0:	stp	x29, x30, [sp, #-64]!
    65b4:	mov	x29, sp
    65b8:	str	x0, [sp, #40]
    65bc:	str	w1, [sp, #36]
    65c0:	str	x2, [sp, #24]
    65c4:	ldr	x0, [sp, #40]
    65c8:	bl	657c <grub_unixtime2datetime+0x3ac>
    65cc:	str	x0, [sp, #56]
    65d0:	ldr	x0, [sp, #56]
    65d4:	cmp	x0, #0x0
    65d8:	b.eq	65f8 <grub_unixtime2datetime+0x428>  // b.none
    65dc:	ldr	x0, [sp, #56]
    65e0:	ldr	x3, [x0, #32]
    65e4:	ldr	x2, [sp, #24]
    65e8:	ldr	w1, [sp, #36]
    65ec:	ldr	x0, [sp, #56]
    65f0:	blr	x3
    65f4:	b	65fc <grub_unixtime2datetime+0x42c>
    65f8:	mov	w0, #0x5                   	// #5
    65fc:	ldp	x29, x30, [sp], #64
    6600:	ret

0000000000006604 <grub_wait_after_message>:
    6604:	stp	x29, x30, [sp, #-32]!
    6608:	mov	x29, sp
    660c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6610:	add	x0, x0, #0x0
    6614:	ldr	x0, [x0]
    6618:	ldr	x1, [x0]
    661c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6620:	add	x0, x0, #0x0
    6624:	ldr	x0, [x0]
    6628:	blr	x1
    662c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6630:	add	x0, x0, #0x0
    6634:	ldr	x0, [x0]
    6638:	bl	0 <grub_printf_>
    663c:	bl	0 <grub_refresh>
    6640:	bl	0 <grub_get_time_ms>
    6644:	mov	x1, x0
    6648:	mov	x0, #0x2710                	// #10000
    664c:	add	x0, x1, x0
    6650:	str	x0, [sp, #24]
    6654:	nop
    6658:	bl	0 <grub_get_time_ms>
    665c:	mov	x1, x0
    6660:	ldr	x0, [sp, #24]
    6664:	cmp	x0, x1
    6668:	b.ls	6678 <grub_wait_after_message+0x74>  // b.plast
    666c:	bl	0 <grub_getkey_noblock>
    6670:	cmp	w0, #0x0
    6674:	b.eq	6658 <grub_wait_after_message+0x54>  // b.none
    6678:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    667c:	add	x0, x0, #0x0
    6680:	ldr	x0, [x0]
    6684:	ldr	x1, [x0]
    6688:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    668c:	add	x0, x0, #0x0
    6690:	ldr	x0, [x0]
    6694:	blr	x1
    6698:	nop
    669c:	ldp	x29, x30, [sp], #32
    66a0:	ret
    66a4:	nop
	...

00000000000066c0 <grub_menu_get_entry>:
    66c0:	sub	sp, sp, #0x20
    66c4:	str	x0, [sp, #8]
    66c8:	str	w1, [sp, #4]
    66cc:	ldr	x0, [sp, #8]
    66d0:	ldr	x0, [x0, #8]
    66d4:	str	x0, [sp, #24]
    66d8:	b	66f4 <grub_menu_get_entry+0x34>
    66dc:	ldr	x0, [sp, #24]
    66e0:	ldr	x0, [x0, #72]
    66e4:	str	x0, [sp, #24]
    66e8:	ldr	w0, [sp, #4]
    66ec:	sub	w0, w0, #0x1
    66f0:	str	w0, [sp, #4]
    66f4:	ldr	x0, [sp, #24]
    66f8:	cmp	x0, #0x0
    66fc:	b.eq	670c <grub_menu_get_entry+0x4c>  // b.none
    6700:	ldr	w0, [sp, #4]
    6704:	cmp	w0, #0x0
    6708:	b.gt	66dc <grub_menu_get_entry+0x1c>
    670c:	ldr	x0, [sp, #24]
    6710:	add	sp, sp, #0x20
    6714:	ret
    6718:	sub	sp, sp, #0x20
    671c:	str	x0, [sp, #8]
    6720:	str	w1, [sp, #4]
    6724:	str	wzr, [sp, #20]
    6728:	ldr	x0, [sp, #8]
    672c:	ldr	x0, [x0, #8]
    6730:	str	x0, [sp, #24]
    6734:	b	676c <grub_menu_get_entry+0xac>
    6738:	ldr	x0, [sp, #24]
    673c:	ldr	w0, [x0, #64]
    6740:	ldr	w1, [sp, #4]
    6744:	cmp	w1, w0
    6748:	b.ne	6754 <grub_menu_get_entry+0x94>  // b.any
    674c:	ldr	w0, [sp, #20]
    6750:	b	6784 <grub_menu_get_entry+0xc4>
    6754:	ldr	w0, [sp, #20]
    6758:	add	w0, w0, #0x1
    675c:	str	w0, [sp, #20]
    6760:	ldr	x0, [sp, #24]
    6764:	ldr	x0, [x0, #72]
    6768:	str	x0, [sp, #24]
    676c:	ldr	x0, [sp, #8]
    6770:	ldr	w0, [x0]
    6774:	ldr	w1, [sp, #20]
    6778:	cmp	w1, w0
    677c:	b.lt	6738 <grub_menu_get_entry+0x78>  // b.tstop
    6780:	mov	w0, #0xffffffff            	// #-1
    6784:	add	sp, sp, #0x20
    6788:	ret
    678c:	stp	x29, x30, [sp, #-32]!
    6790:	mov	x29, sp
    6794:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6798:	add	x0, x0, #0x0
    679c:	ldr	x0, [x0]
    67a0:	bl	0 <grub_env_get>
    67a4:	str	x0, [sp, #16]
    67a8:	ldr	x0, [sp, #16]
    67ac:	cmp	x0, #0x0
    67b0:	b.ne	67bc <grub_menu_get_entry+0xfc>  // b.any
    67b4:	mov	w0, #0x0                   	// #0
    67b8:	b	6814 <grub_menu_get_entry+0x154>
    67bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    67c0:	add	x0, x0, #0x0
    67c4:	ldr	x0, [x0]
    67c8:	str	x0, [sp, #24]
    67cc:	b	6800 <grub_menu_get_entry+0x140>
    67d0:	ldr	x0, [sp, #24]
    67d4:	ldr	x0, [x0]
    67d8:	ldr	x1, [sp, #16]
    67dc:	bl	0 <grub_strcmp>
    67e0:	cmp	w0, #0x0
    67e4:	b.ne	67f4 <grub_menu_get_entry+0x134>  // b.any
    67e8:	ldr	x0, [sp, #24]
    67ec:	ldr	w0, [x0, #8]
    67f0:	b	6814 <grub_menu_get_entry+0x154>
    67f4:	ldr	x0, [sp, #24]
    67f8:	add	x0, x0, #0x10
    67fc:	str	x0, [sp, #24]
    6800:	ldr	x0, [sp, #24]
    6804:	ldr	x0, [x0]
    6808:	cmp	x0, #0x0
    680c:	b.ne	67d0 <grub_menu_get_entry+0x110>  // b.any
    6810:	mov	w0, #0x0                   	// #0
    6814:	ldp	x29, x30, [sp], #32
    6818:	ret
    681c:	nop
	...

0000000000006830 <grub_menu_get_timeout>:
    6830:	stp	x29, x30, [sp, #-32]!
    6834:	mov	x29, sp
    6838:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    683c:	add	x0, x0, #0x0
    6840:	ldr	x0, [x0]
    6844:	bl	0 <grub_env_get>
    6848:	str	x0, [sp, #16]
    684c:	ldr	x0, [sp, #16]
    6850:	cmp	x0, #0x0
    6854:	b.ne	6860 <grub_menu_get_timeout+0x30>  // b.any
    6858:	mov	w0, #0xffffffff            	// #-1
    685c:	b	68c0 <grub_menu_get_timeout+0x90>
    6860:	bl	0 <grub_error_push>
    6864:	mov	w2, #0x0                   	// #0
    6868:	mov	x1, #0x0                   	// #0
    686c:	ldr	x0, [sp, #16]
    6870:	bl	0 <grub_strtoul>
    6874:	str	w0, [sp, #28]
    6878:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    687c:	add	x0, x0, #0x0
    6880:	ldr	x0, [x0]
    6884:	ldr	w0, [x0]
    6888:	cmp	w0, #0x0
    688c:	b.eq	68b8 <grub_menu_get_timeout+0x88>  // b.none
    6890:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6894:	add	x0, x0, #0x0
    6898:	ldr	x0, [x0]
    689c:	bl	0 <grub_env_unset>
    68a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    68a4:	add	x0, x0, #0x0
    68a8:	ldr	x0, [x0]
    68ac:	str	wzr, [x0]
    68b0:	mov	w0, #0xffffffff            	// #-1
    68b4:	str	w0, [sp, #28]
    68b8:	bl	0 <grub_error_pop>
    68bc:	ldr	w0, [sp, #28]
    68c0:	ldp	x29, x30, [sp], #32
    68c4:	ret
	...

00000000000068d8 <grub_menu_set_timeout>:
    68d8:	stp	x29, x30, [sp, #-48]!
    68dc:	mov	x29, sp
    68e0:	str	w0, [sp, #28]
    68e4:	ldr	w0, [sp, #28]
    68e8:	cmp	w0, #0x0
    68ec:	b.le	6928 <grub_menu_set_timeout+0x50>
    68f0:	add	x4, sp, #0x20
    68f4:	ldr	w3, [sp, #28]
    68f8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    68fc:	add	x0, x0, #0x0
    6900:	ldr	x2, [x0]
    6904:	mov	x1, #0x10                  	// #16
    6908:	mov	x0, x4
    690c:	bl	0 <grub_snprintf>
    6910:	add	x0, sp, #0x20
    6914:	mov	x1, x0
    6918:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    691c:	add	x0, x0, #0x0
    6920:	ldr	x0, [x0]
    6924:	bl	0 <grub_env_set>
    6928:	nop
    692c:	ldp	x29, x30, [sp], #48
    6930:	ret
    6934:	nop
	...
    6948:	stp	x29, x30, [sp, #-64]!
    694c:	mov	x29, sp
    6950:	str	x0, [sp, #24]
    6954:	ldr	x0, [sp, #24]
    6958:	bl	0 <grub_env_get>
    695c:	str	x0, [sp, #48]
    6960:	ldr	x0, [sp, #48]
    6964:	cmp	x0, #0x0
    6968:	b.ne	6974 <grub_menu_set_timeout+0x9c>  // b.any
    696c:	mov	w0, #0xffffffff            	// #-1
    6970:	b	6a18 <grub_menu_set_timeout+0x140>
    6974:	bl	0 <grub_error_push>
    6978:	add	x0, sp, #0x28
    697c:	mov	w2, #0x0                   	// #0
    6980:	mov	x1, x0
    6984:	ldr	x0, [sp, #48]
    6988:	bl	0 <grub_strtoul>
    698c:	str	w0, [sp, #60]
    6990:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6994:	add	x0, x0, #0x0
    6998:	ldr	x0, [x0]
    699c:	ldr	w0, [x0]
    69a0:	cmp	w0, #0x0
    69a4:	b.ne	69f0 <grub_menu_set_timeout+0x118>  // b.any
    69a8:	b	69b8 <grub_menu_set_timeout+0xe0>
    69ac:	ldr	x0, [sp, #40]
    69b0:	add	x0, x0, #0x1
    69b4:	str	x0, [sp, #40]
    69b8:	ldr	x0, [sp, #40]
    69bc:	ldrb	w0, [x0]
    69c0:	cmp	w0, #0x0
    69c4:	b.eq	69dc <grub_menu_set_timeout+0x104>  // b.none
    69c8:	ldr	x0, [sp, #40]
    69cc:	ldrb	w0, [x0]
    69d0:	bl	0 <grub_isspace>
    69d4:	cmp	w0, #0x0
    69d8:	b.ne	69ac <grub_menu_set_timeout+0xd4>  // b.any
    69dc:	ldr	x0, [sp, #40]
    69e0:	mov	x1, x0
    69e4:	ldr	x0, [sp, #24]
    69e8:	bl	0 <grub_env_set>
    69ec:	b	6a10 <grub_menu_set_timeout+0x138>
    69f0:	ldr	x0, [sp, #24]
    69f4:	bl	0 <grub_env_unset>
    69f8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    69fc:	add	x0, x0, #0x0
    6a00:	ldr	x0, [x0]
    6a04:	str	wzr, [x0]
    6a08:	mov	w0, #0xffffffff            	// #-1
    6a0c:	str	w0, [sp, #60]
    6a10:	bl	0 <grub_error_pop>
    6a14:	ldr	w0, [sp, #60]
    6a18:	ldp	x29, x30, [sp], #64
    6a1c:	ret
	...
    6a28:	stp	x29, x30, [sp, #-128]!
    6a2c:	mov	x29, sp
    6a30:	str	x0, [sp, #24]
    6a34:	str	w1, [sp, #20]
    6a38:	str	wzr, [sp, #124]
    6a3c:	str	xzr, [sp, #112]
    6a40:	str	xzr, [sp, #96]
    6a44:	str	xzr, [sp, #88]
    6a48:	str	xzr, [sp, #72]
    6a4c:	ldr	x0, [sp, #24]
    6a50:	ldr	w0, [x0, #16]
    6a54:	cmp	w0, #0x0
    6a58:	b.eq	6a6c <grub_menu_set_timeout+0x194>  // b.none
    6a5c:	ldr	x0, [sp, #24]
    6a60:	ldr	x0, [x0, #24]
    6a64:	bl	4170 <grub_auth_check_authentication>
    6a68:	str	w0, [sp, #124]
    6a6c:	ldr	w0, [sp, #124]
    6a70:	cmp	w0, #0x0
    6a74:	b.eq	6a90 <grub_menu_set_timeout+0x1b8>  // b.none
    6a78:	bl	0 <grub_print_error>
    6a7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6a80:	add	x0, x0, #0x0
    6a84:	ldr	x0, [x0]
    6a88:	str	wzr, [x0]
    6a8c:	b	6f58 <grub_menu_set_timeout+0x680>
    6a90:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6a94:	add	x0, x0, #0x0
    6a98:	ldr	x0, [x0]
    6a9c:	ldr	w0, [x0]
    6aa0:	str	w0, [sp, #68]
    6aa4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6aa8:	add	x0, x0, #0x0
    6aac:	ldr	x0, [x0]
    6ab0:	bl	0 <grub_env_get>
    6ab4:	str	x0, [sp, #56]
    6ab8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6abc:	add	x0, x0, #0x0
    6ac0:	ldr	x0, [x0]
    6ac4:	bl	0 <grub_env_get>
    6ac8:	str	x0, [sp, #48]
    6acc:	ldr	x0, [sp, #24]
    6ad0:	ldr	w0, [x0, #68]
    6ad4:	cmp	w0, #0x0
    6ad8:	b.eq	6b28 <grub_menu_set_timeout+0x250>  // b.none
    6adc:	bl	12220 <grub_env_context_open>
    6ae0:	mov	x0, #0x10                  	// #16
    6ae4:	bl	0 <grub_zalloc>
    6ae8:	str	x0, [sp, #112]
    6aec:	ldr	x0, [sp, #112]
    6af0:	cmp	x0, #0x0
    6af4:	b.eq	6f54 <grub_menu_set_timeout+0x67c>  // b.none
    6af8:	ldr	x0, [sp, #112]
    6afc:	bl	12028 <grub_env_set_menu>
    6b00:	ldr	w0, [sp, #20]
    6b04:	cmp	w0, #0x0
    6b08:	b.eq	6b28 <grub_menu_set_timeout+0x250>  // b.none
    6b0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6b10:	add	x0, x0, #0x0
    6b14:	ldr	x1, [x0]
    6b18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6b1c:	add	x0, x0, #0x0
    6b20:	ldr	x0, [x0]
    6b24:	bl	0 <grub_env_set>
    6b28:	ldr	x0, [sp, #24]
    6b2c:	ldr	x0, [x0, #8]
    6b30:	str	x0, [sp, #80]
    6b34:	b	6b6c <grub_menu_set_timeout+0x294>
    6b38:	ldr	x0, [sp, #80]
    6b3c:	ldrb	w0, [x0]
    6b40:	cmp	w0, #0x3e
    6b44:	b.ne	6b50 <grub_menu_set_timeout+0x278>  // b.any
    6b48:	mov	x0, #0x2                   	// #2
    6b4c:	b	6b54 <grub_menu_set_timeout+0x27c>
    6b50:	mov	x0, #0x1                   	// #1
    6b54:	ldr	x1, [sp, #72]
    6b58:	add	x0, x1, x0
    6b5c:	str	x0, [sp, #72]
    6b60:	ldr	x0, [sp, #80]
    6b64:	add	x0, x0, #0x1
    6b68:	str	x0, [sp, #80]
    6b6c:	ldr	x0, [sp, #80]
    6b70:	ldrb	w0, [x0]
    6b74:	cmp	w0, #0x0
    6b78:	b.ne	6b38 <grub_menu_set_timeout+0x260>  // b.any
    6b7c:	ldr	x0, [sp, #56]
    6b80:	cmp	x0, #0x0
    6b84:	b.eq	6ba4 <grub_menu_set_timeout+0x2cc>  // b.none
    6b88:	ldr	x0, [sp, #56]
    6b8c:	bl	0 <grub_strdup>
    6b90:	str	x0, [sp, #96]
    6b94:	ldr	x0, [sp, #96]
    6b98:	cmp	x0, #0x0
    6b9c:	b.ne	6ba4 <grub_menu_set_timeout+0x2cc>  // b.any
    6ba0:	bl	0 <grub_print_error>
    6ba4:	ldr	x0, [sp, #48]
    6ba8:	cmp	x0, #0x0
    6bac:	b.eq	6bcc <grub_menu_set_timeout+0x2f4>  // b.none
    6bb0:	ldr	x0, [sp, #48]
    6bb4:	bl	0 <grub_strdup>
    6bb8:	str	x0, [sp, #88]
    6bbc:	ldr	x0, [sp, #88]
    6bc0:	cmp	x0, #0x0
    6bc4:	b.ne	6bcc <grub_menu_set_timeout+0x2f4>  // b.any
    6bc8:	bl	0 <grub_print_error>
    6bcc:	ldr	x0, [sp, #72]
    6bd0:	add	x0, x0, #0x1
    6bd4:	str	x0, [sp, #72]
    6bd8:	ldr	x0, [sp, #56]
    6bdc:	cmp	x0, #0x0
    6be0:	b.eq	6bfc <grub_menu_set_timeout+0x324>  // b.none
    6be4:	ldr	x0, [sp, #56]
    6be8:	bl	0 <grub_strlen>
    6bec:	mov	x1, x0
    6bf0:	ldr	x0, [sp, #72]
    6bf4:	add	x0, x0, x1
    6bf8:	str	x0, [sp, #72]
    6bfc:	ldr	x0, [sp, #72]
    6c00:	add	x0, x0, #0x1
    6c04:	str	x0, [sp, #72]
    6c08:	ldr	x0, [sp, #72]
    6c0c:	bl	0 <grub_malloc>
    6c10:	str	x0, [sp, #40]
    6c14:	ldr	x0, [sp, #40]
    6c18:	cmp	x0, #0x0
    6c1c:	b.ne	6c28 <grub_menu_set_timeout+0x350>  // b.any
    6c20:	bl	0 <grub_print_error>
    6c24:	b	6cfc <grub_menu_set_timeout+0x424>
    6c28:	ldr	x0, [sp, #40]
    6c2c:	str	x0, [sp, #104]
    6c30:	ldr	x0, [sp, #56]
    6c34:	cmp	x0, #0x0
    6c38:	b.eq	6c60 <grub_menu_set_timeout+0x388>  // b.none
    6c3c:	ldr	x1, [sp, #56]
    6c40:	ldr	x0, [sp, #104]
    6c44:	bl	6520 <grub_unixtime2datetime+0x350>
    6c48:	str	x0, [sp, #104]
    6c4c:	ldr	x0, [sp, #104]
    6c50:	add	x1, x0, #0x1
    6c54:	str	x1, [sp, #104]
    6c58:	mov	w1, #0x3e                  	// #62
    6c5c:	strb	w1, [x0]
    6c60:	ldr	x0, [sp, #24]
    6c64:	ldr	x0, [x0, #8]
    6c68:	str	x0, [sp, #80]
    6c6c:	b	6cb8 <grub_menu_set_timeout+0x3e0>
    6c70:	ldr	x0, [sp, #80]
    6c74:	ldrb	w0, [x0]
    6c78:	cmp	w0, #0x3e
    6c7c:	b.ne	6c94 <grub_menu_set_timeout+0x3bc>  // b.any
    6c80:	ldr	x0, [sp, #104]
    6c84:	add	x1, x0, #0x1
    6c88:	str	x1, [sp, #104]
    6c8c:	mov	w1, #0x3e                  	// #62
    6c90:	strb	w1, [x0]
    6c94:	ldr	x0, [sp, #104]
    6c98:	add	x1, x0, #0x1
    6c9c:	str	x1, [sp, #104]
    6ca0:	ldr	x1, [sp, #80]
    6ca4:	ldrb	w1, [x1]
    6ca8:	strb	w1, [x0]
    6cac:	ldr	x0, [sp, #80]
    6cb0:	add	x0, x0, #0x1
    6cb4:	str	x0, [sp, #80]
    6cb8:	ldr	x0, [sp, #80]
    6cbc:	ldrb	w0, [x0]
    6cc0:	cmp	w0, #0x0
    6cc4:	b.ne	6c70 <grub_menu_set_timeout+0x398>  // b.any
    6cc8:	ldr	x0, [sp, #104]
    6ccc:	strb	wzr, [x0]
    6cd0:	ldr	x1, [sp, #40]
    6cd4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6cd8:	add	x0, x0, #0x0
    6cdc:	ldr	x0, [x0]
    6ce0:	bl	0 <grub_env_set>
    6ce4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6ce8:	add	x0, x0, #0x0
    6cec:	ldr	x0, [x0]
    6cf0:	bl	0 <grub_env_export>
    6cf4:	ldr	x0, [sp, #40]
    6cf8:	bl	0 <grub_free>
    6cfc:	ldr	x0, [sp, #48]
    6d00:	str	x0, [sp, #80]
    6d04:	b	6d58 <grub_menu_set_timeout+0x480>
    6d08:	ldr	x0, [sp, #80]
    6d0c:	ldrb	w0, [x0]
    6d10:	cmp	w0, #0x3e
    6d14:	b.ne	6d3c <grub_menu_set_timeout+0x464>  // b.any
    6d18:	ldr	x0, [sp, #80]
    6d1c:	add	x0, x0, #0x1
    6d20:	ldrb	w0, [x0]
    6d24:	cmp	w0, #0x3e
    6d28:	b.ne	6d3c <grub_menu_set_timeout+0x464>  // b.any
    6d2c:	ldr	x0, [sp, #80]
    6d30:	add	x0, x0, #0x1
    6d34:	str	x0, [sp, #80]
    6d38:	b	6d4c <grub_menu_set_timeout+0x474>
    6d3c:	ldr	x0, [sp, #80]
    6d40:	ldrb	w0, [x0]
    6d44:	cmp	w0, #0x3e
    6d48:	b.eq	6d78 <grub_menu_set_timeout+0x4a0>  // b.none
    6d4c:	ldr	x0, [sp, #80]
    6d50:	add	x0, x0, #0x1
    6d54:	str	x0, [sp, #80]
    6d58:	ldr	x0, [sp, #80]
    6d5c:	cmp	x0, #0x0
    6d60:	b.eq	6d7c <grub_menu_set_timeout+0x4a4>  // b.none
    6d64:	ldr	x0, [sp, #80]
    6d68:	ldrb	w0, [x0]
    6d6c:	cmp	w0, #0x0
    6d70:	b.ne	6d08 <grub_menu_set_timeout+0x430>  // b.any
    6d74:	b	6d7c <grub_menu_set_timeout+0x4a4>
    6d78:	nop
    6d7c:	ldr	x0, [sp, #80]
    6d80:	cmp	x0, #0x0
    6d84:	b.eq	6dcc <grub_menu_set_timeout+0x4f4>  // b.none
    6d88:	ldr	x0, [sp, #80]
    6d8c:	ldrb	w0, [x0]
    6d90:	cmp	w0, #0x0
    6d94:	b.eq	6dcc <grub_menu_set_timeout+0x4f4>  // b.none
    6d98:	ldr	x0, [sp, #80]
    6d9c:	add	x0, x0, #0x1
    6da0:	ldrb	w0, [x0]
    6da4:	cmp	w0, #0x0
    6da8:	b.eq	6dcc <grub_menu_set_timeout+0x4f4>  // b.none
    6dac:	ldr	x0, [sp, #80]
    6db0:	add	x0, x0, #0x1
    6db4:	mov	x1, x0
    6db8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6dbc:	add	x0, x0, #0x0
    6dc0:	ldr	x0, [x0]
    6dc4:	bl	0 <grub_env_set>
    6dc8:	b	6ddc <grub_menu_set_timeout+0x504>
    6dcc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6dd0:	add	x0, x0, #0x0
    6dd4:	ldr	x0, [x0]
    6dd8:	bl	0 <grub_env_unset>
    6ddc:	ldr	x0, [sp, #24]
    6de0:	ldr	x3, [x0, #40]
    6de4:	ldr	x0, [sp, #24]
    6de8:	ldr	w1, [x0, #48]
    6dec:	ldr	x0, [sp, #24]
    6df0:	ldr	x0, [x0, #56]
    6df4:	mov	x2, x0
    6df8:	mov	x0, x3
    6dfc:	bl	19df8 <grub_script_execute_new_scope>
    6e00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6e04:	add	x0, x0, #0x0
    6e08:	ldr	x0, [x0]
    6e0c:	ldr	w0, [x0]
    6e10:	ldr	w1, [sp, #68]
    6e14:	cmp	w1, w0
    6e18:	b.eq	6e20 <grub_menu_set_timeout+0x548>  // b.none
    6e1c:	bl	6604 <grub_wait_after_message>
    6e20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6e24:	add	x0, x0, #0x0
    6e28:	ldr	x0, [x0]
    6e2c:	ldr	w0, [x0]
    6e30:	str	w0, [sp, #68]
    6e34:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6e38:	add	x0, x0, #0x0
    6e3c:	ldr	x0, [x0]
    6e40:	ldr	w0, [x0]
    6e44:	cmp	w0, #0x0
    6e48:	b.ne	6e70 <grub_menu_set_timeout+0x598>  // b.any
    6e4c:	bl	0 <grub_loader_is_loaded>
    6e50:	cmp	w0, #0x0
    6e54:	b.eq	6e70 <grub_menu_set_timeout+0x598>  // b.none
    6e58:	mov	x2, #0x0                   	// #0
    6e5c:	mov	w1, #0x0                   	// #0
    6e60:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6e64:	add	x0, x0, #0x0
    6e68:	ldr	x0, [x0]
    6e6c:	bl	65b0 <grub_unixtime2datetime+0x3e0>
    6e70:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6e74:	add	x0, x0, #0x0
    6e78:	ldr	x0, [x0]
    6e7c:	ldr	w0, [x0]
    6e80:	ldr	w1, [sp, #68]
    6e84:	cmp	w1, w0
    6e88:	b.eq	6e90 <grub_menu_set_timeout+0x5b8>  // b.none
    6e8c:	bl	6604 <grub_wait_after_message>
    6e90:	ldr	x0, [sp, #24]
    6e94:	ldr	w0, [x0, #68]
    6e98:	cmp	w0, #0x0
    6e9c:	b.eq	6ed8 <grub_menu_set_timeout+0x600>  // b.none
    6ea0:	ldr	x0, [sp, #112]
    6ea4:	cmp	x0, #0x0
    6ea8:	b.eq	6ed4 <grub_menu_set_timeout+0x5fc>  // b.none
    6eac:	ldr	x0, [sp, #112]
    6eb0:	ldr	w0, [x0]
    6eb4:	cmp	w0, #0x0
    6eb8:	b.eq	6ed4 <grub_menu_set_timeout+0x5fc>  // b.none
    6ebc:	ldr	w2, [sp, #20]
    6ec0:	mov	w1, #0x1                   	// #1
    6ec4:	ldr	x0, [sp, #112]
    6ec8:	bl	8170 <grub_show_menu>
    6ecc:	ldr	x0, [sp, #112]
    6ed0:	bl	168 <grub_normal_free_menu>
    6ed4:	bl	12280 <grub_env_context_close>
    6ed8:	ldr	x0, [sp, #96]
    6edc:	cmp	x0, #0x0
    6ee0:	b.eq	6efc <grub_menu_set_timeout+0x624>  // b.none
    6ee4:	ldr	x1, [sp, #96]
    6ee8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6eec:	add	x0, x0, #0x0
    6ef0:	ldr	x0, [x0]
    6ef4:	bl	0 <grub_env_set>
    6ef8:	b	6f0c <grub_menu_set_timeout+0x634>
    6efc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6f00:	add	x0, x0, #0x0
    6f04:	ldr	x0, [x0]
    6f08:	bl	0 <grub_env_unset>
    6f0c:	ldr	x0, [sp, #88]
    6f10:	cmp	x0, #0x0
    6f14:	b.eq	6f30 <grub_menu_set_timeout+0x658>  // b.none
    6f18:	ldr	x1, [sp, #88]
    6f1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6f20:	add	x0, x0, #0x0
    6f24:	ldr	x0, [x0]
    6f28:	bl	0 <grub_env_set>
    6f2c:	b	6f40 <grub_menu_set_timeout+0x668>
    6f30:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6f34:	add	x0, x0, #0x0
    6f38:	ldr	x0, [x0]
    6f3c:	bl	0 <grub_env_unset>
    6f40:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6f44:	add	x0, x0, #0x0
    6f48:	ldr	x0, [x0]
    6f4c:	bl	0 <grub_env_unset>
    6f50:	b	6f58 <grub_menu_set_timeout+0x680>
    6f54:	nop
    6f58:	ldp	x29, x30, [sp], #128
    6f5c:	ret
	...
    6f98:	stp	x29, x30, [sp, #-80]!
    6f9c:	mov	x29, sp
    6fa0:	str	x0, [sp, #56]
    6fa4:	str	x1, [sp, #48]
    6fa8:	str	w2, [sp, #44]
    6fac:	str	x3, [sp, #32]
    6fb0:	str	x4, [sp, #24]
    6fb4:	ldr	x0, [sp, #32]
    6fb8:	ldr	x2, [x0]
    6fbc:	ldr	x1, [sp, #24]
    6fc0:	ldr	x0, [sp, #48]
    6fc4:	blr	x2
    6fc8:	mov	w1, #0x1                   	// #1
    6fcc:	ldr	x0, [sp, #48]
    6fd0:	bl	6a28 <grub_menu_set_timeout+0x150>
    6fd4:	b	701c <grub_menu_set_timeout+0x744>
    6fd8:	bl	0 <grub_print_error>
    6fdc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    6fe0:	add	x0, x0, #0x0
    6fe4:	ldr	x0, [x0]
    6fe8:	str	wzr, [x0]
    6fec:	ldr	w1, [sp, #76]
    6ff0:	ldr	x0, [sp, #56]
    6ff4:	bl	66c0 <grub_menu_get_entry>
    6ff8:	str	x0, [sp, #48]
    6ffc:	ldr	x0, [sp, #32]
    7000:	ldr	x2, [x0, #8]
    7004:	ldr	x1, [sp, #24]
    7008:	ldr	x0, [sp, #48]
    700c:	blr	x2
    7010:	mov	w1, #0x1                   	// #1
    7014:	ldr	x0, [sp, #48]
    7018:	bl	6a28 <grub_menu_set_timeout+0x150>
    701c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7020:	add	x0, x0, #0x0
    7024:	ldr	x0, [x0]
    7028:	bl	6948 <grub_menu_set_timeout+0x70>
    702c:	str	w0, [sp, #76]
    7030:	ldr	w0, [sp, #76]
    7034:	cmp	w0, #0x0
    7038:	b.ge	6fd8 <grub_menu_set_timeout+0x700>  // b.tcont
    703c:	ldr	w0, [sp, #44]
    7040:	cmp	w0, #0x0
    7044:	b.ne	7058 <grub_menu_set_timeout+0x780>  // b.any
    7048:	ldr	x0, [sp, #32]
    704c:	ldr	x1, [x0, #16]
    7050:	ldr	x0, [sp, #24]
    7054:	blr	x1
    7058:	nop
    705c:	ldp	x29, x30, [sp], #80
    7060:	ret
    7064:	nop
	...
    7078:	stp	x29, x30, [sp, #-48]!
    707c:	mov	x29, sp
    7080:	str	w0, [sp, #28]
    7084:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7088:	add	x0, x0, #0x0
    708c:	ldr	x0, [x0]
    7090:	ldr	x0, [x0]
    7094:	str	x0, [sp, #40]
    7098:	b	70c4 <grub_menu_set_timeout+0x7ec>
    709c:	ldr	x0, [sp, #40]
    70a0:	ldr	x2, [x0, #16]
    70a4:	ldr	x0, [sp, #40]
    70a8:	ldr	x0, [x0, #8]
    70ac:	mov	x1, x0
    70b0:	ldr	w0, [sp, #28]
    70b4:	blr	x2
    70b8:	ldr	x0, [sp, #40]
    70bc:	ldr	x0, [x0]
    70c0:	str	x0, [sp, #40]
    70c4:	ldr	x0, [sp, #40]
    70c8:	cmp	x0, #0x0
    70cc:	b.ne	709c <grub_menu_set_timeout+0x7c4>  // b.any
    70d0:	nop
    70d4:	nop
    70d8:	ldp	x29, x30, [sp], #48
    70dc:	ret
	...
    70e8:	stp	x29, x30, [sp, #-48]!
    70ec:	mov	x29, sp
    70f0:	str	w0, [sp, #28]
    70f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    70f8:	add	x0, x0, #0x0
    70fc:	ldr	x0, [x0]
    7100:	ldr	x0, [x0]
    7104:	str	x0, [sp, #40]
    7108:	b	7134 <grub_menu_set_timeout+0x85c>
    710c:	ldr	x0, [sp, #40]
    7110:	ldr	x2, [x0, #24]
    7114:	ldr	x0, [sp, #40]
    7118:	ldr	x0, [x0, #8]
    711c:	mov	x1, x0
    7120:	ldr	w0, [sp, #28]
    7124:	blr	x2
    7128:	ldr	x0, [sp, #40]
    712c:	ldr	x0, [x0]
    7130:	str	x0, [sp, #40]
    7134:	ldr	x0, [sp, #40]
    7138:	cmp	x0, #0x0
    713c:	b.ne	710c <grub_menu_set_timeout+0x834>  // b.any
    7140:	nop
    7144:	nop
    7148:	ldp	x29, x30, [sp], #48
    714c:	ret
	...
    7158:	stp	x29, x30, [sp, #-32]!
    715c:	mov	x29, sp
    7160:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7164:	add	x0, x0, #0x0
    7168:	ldr	x0, [x0]
    716c:	ldr	x0, [x0]
    7170:	str	x0, [sp, #24]
    7174:	b	71a8 <grub_menu_set_timeout+0x8d0>
    7178:	ldr	x0, [sp, #24]
    717c:	ldr	x0, [x0]
    7180:	str	x0, [sp, #16]
    7184:	ldr	x0, [sp, #24]
    7188:	ldr	x1, [x0, #40]
    718c:	ldr	x0, [sp, #24]
    7190:	ldr	x0, [x0, #8]
    7194:	blr	x1
    7198:	ldr	x0, [sp, #24]
    719c:	bl	0 <grub_free>
    71a0:	ldr	x0, [sp, #16]
    71a4:	str	x0, [sp, #24]
    71a8:	ldr	x0, [sp, #24]
    71ac:	cmp	x0, #0x0
    71b0:	b.ne	7178 <grub_menu_set_timeout+0x8a0>  // b.any
    71b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    71b8:	add	x0, x0, #0x0
    71bc:	ldr	x0, [x0]
    71c0:	str	xzr, [x0]
    71c4:	nop
    71c8:	ldp	x29, x30, [sp], #32
    71cc:	ret
	...
    71d8:	stp	x29, x30, [sp, #-64]!
    71dc:	mov	x29, sp
    71e0:	str	w0, [sp, #28]
    71e4:	str	x1, [sp, #16]
    71e8:	str	w2, [sp, #24]
    71ec:	str	wzr, [sp, #52]
    71f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    71f4:	add	x0, x0, #0x0
    71f8:	ldr	x0, [x0]
    71fc:	ldr	x0, [x0]
    7200:	str	x0, [sp, #56]
    7204:	b	7304 <grub_menu_set_timeout+0xa2c>
    7208:	ldr	x0, [sp, #56]
    720c:	ldr	x0, [x0, #112]
    7210:	cmp	x0, #0x0
    7214:	b.eq	72f8 <grub_menu_set_timeout+0xa20>  // b.none
    7218:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    721c:	add	x0, x0, #0x0
    7220:	ldr	x0, [x0]
    7224:	bl	0 <grub_env_get>
    7228:	cmp	x0, #0x0
    722c:	b.eq	72d8 <grub_menu_set_timeout+0xa00>  // b.none
    7230:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7234:	add	x0, x0, #0x0
    7238:	ldr	x0, [x0]
    723c:	ldr	x0, [x0]
    7240:	cmp	x0, #0x0
    7244:	b.ne	725c <grub_menu_set_timeout+0x984>  // b.any
    7248:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    724c:	add	x0, x0, #0x0
    7250:	ldr	x0, [x0]
    7254:	bl	0 <grub_dl_load>
    7258:	bl	0 <grub_print_error>
    725c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7260:	add	x0, x0, #0x0
    7264:	ldr	x0, [x0]
    7268:	ldr	x0, [x0]
    726c:	cmp	x0, #0x0
    7270:	b.eq	72b0 <grub_menu_set_timeout+0x9d8>  // b.none
    7274:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7278:	add	x0, x0, #0x0
    727c:	ldr	x0, [x0]
    7280:	ldr	x3, [x0]
    7284:	ldr	w2, [sp, #24]
    7288:	ldr	x1, [sp, #16]
    728c:	ldr	w0, [sp, #28]
    7290:	blr	x3
    7294:	str	w0, [sp, #48]
    7298:	ldr	w0, [sp, #48]
    729c:	cmp	w0, #0x0
    72a0:	b.ne	72d0 <grub_menu_set_timeout+0x9f8>  // b.any
    72a4:	mov	w0, #0x1                   	// #1
    72a8:	str	w0, [sp, #52]
    72ac:	b	7310 <grub_menu_set_timeout+0xa38>
    72b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    72b4:	add	x0, x0, #0x0
    72b8:	ldr	x2, [x0]
    72bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    72c0:	add	x0, x0, #0x0
    72c4:	ldr	x1, [x0]
    72c8:	mov	w0, #0x2                   	// #2
    72cc:	bl	0 <grub_error>
    72d0:	bl	0 <grub_print_error>
    72d4:	bl	6604 <grub_wait_after_message>
    72d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    72dc:	add	x0, x0, #0x0
    72e0:	ldr	x0, [x0]
    72e4:	str	wzr, [x0]
    72e8:	ldr	x0, [sp, #56]
    72ec:	ldr	x0, [x0, #112]
    72f0:	blr	x0
    72f4:	b	7310 <grub_menu_set_timeout+0xa38>
    72f8:	ldr	x0, [sp, #56]
    72fc:	ldr	x0, [x0]
    7300:	str	x0, [sp, #56]
    7304:	ldr	x0, [sp, #56]
    7308:	cmp	x0, #0x0
    730c:	b.ne	7208 <grub_menu_set_timeout+0x930>  // b.any
    7310:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7314:	add	x0, x0, #0x0
    7318:	ldr	x0, [x0]
    731c:	ldr	x0, [x0]
    7320:	str	x0, [sp, #56]
    7324:	b	73ac <grub_menu_set_timeout+0xad4>
    7328:	ldr	x0, [sp, #56]
    732c:	ldr	x2, [x0, #16]
    7330:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7334:	add	x0, x0, #0x0
    7338:	ldr	x1, [x0]
    733c:	mov	x0, x2
    7340:	bl	0 <grub_strcmp>
    7344:	cmp	w0, #0x0
    7348:	b.ne	7358 <grub_menu_set_timeout+0xa80>  // b.any
    734c:	ldr	w0, [sp, #52]
    7350:	cmp	w0, #0x0
    7354:	b.ne	7394 <grub_menu_set_timeout+0xabc>  // b.any
    7358:	ldr	w3, [sp, #24]
    735c:	ldr	x2, [sp, #16]
    7360:	ldr	w1, [sp, #28]
    7364:	ldr	x0, [sp, #56]
    7368:	bl	e470 <grub_menu_try_text>
    736c:	str	w0, [sp, #44]
    7370:	ldr	w0, [sp, #44]
    7374:	cmp	w0, #0x0
    7378:	b.eq	739c <grub_menu_set_timeout+0xac4>  // b.none
    737c:	bl	0 <grub_print_error>
    7380:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7384:	add	x0, x0, #0x0
    7388:	ldr	x0, [x0]
    738c:	str	wzr, [x0]
    7390:	b	73a0 <grub_menu_set_timeout+0xac8>
    7394:	nop
    7398:	b	73a0 <grub_menu_set_timeout+0xac8>
    739c:	nop
    73a0:	ldr	x0, [sp, #56]
    73a4:	ldr	x0, [x0]
    73a8:	str	x0, [sp, #56]
    73ac:	ldr	x0, [sp, #56]
    73b0:	cmp	x0, #0x0
    73b4:	b.ne	7328 <grub_menu_set_timeout+0xa50>  // b.any
    73b8:	nop
    73bc:	nop
    73c0:	ldp	x29, x30, [sp], #64
    73c4:	ret
	...
    7400:	stp	x29, x30, [sp, #-32]!
    7404:	mov	x29, sp
    7408:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    740c:	add	x0, x0, #0x0
    7410:	ldr	x0, [x0]
    7414:	ldr	x0, [x0]
    7418:	str	x0, [sp, #24]
    741c:	b	7440 <grub_menu_set_timeout+0xb68>
    7420:	ldr	x0, [sp, #24]
    7424:	ldr	x1, [x0, #32]
    7428:	ldr	x0, [sp, #24]
    742c:	ldr	x0, [x0, #8]
    7430:	blr	x1
    7434:	ldr	x0, [sp, #24]
    7438:	ldr	x0, [x0]
    743c:	str	x0, [sp, #24]
    7440:	ldr	x0, [sp, #24]
    7444:	cmp	x0, #0x0
    7448:	b.ne	7420 <grub_menu_set_timeout+0xb48>  // b.any
    744c:	nop
    7450:	nop
    7454:	ldp	x29, x30, [sp], #32
    7458:	ret
    745c:	nop
	...

0000000000007468 <grub_menu_register_viewer>:
    7468:	sub	sp, sp, #0x10
    746c:	str	x0, [sp, #8]
    7470:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7474:	add	x0, x0, #0x0
    7478:	ldr	x0, [x0]
    747c:	ldr	x1, [x0]
    7480:	ldr	x0, [sp, #8]
    7484:	str	x1, [x0]
    7488:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    748c:	add	x0, x0, #0x0
    7490:	ldr	x0, [x0]
    7494:	ldr	x1, [sp, #8]
    7498:	str	x1, [x0]
    749c:	nop
    74a0:	add	sp, sp, #0x10
    74a4:	ret
	...
    74b0:	sub	sp, sp, #0x20
    74b4:	str	x0, [sp, #8]
    74b8:	str	x1, [sp]
    74bc:	ldr	x0, [sp, #8]
    74c0:	str	x0, [sp, #24]
    74c4:	ldr	x0, [sp]
    74c8:	str	x0, [sp, #16]
    74cc:	ldr	x0, [sp, #16]
    74d0:	ldrb	w0, [x0]
    74d4:	cmp	w0, #0x3e
    74d8:	b.ne	7508 <grub_menu_register_viewer+0xa0>  // b.any
    74dc:	ldr	x0, [sp, #16]
    74e0:	add	x0, x0, #0x1
    74e4:	ldrb	w0, [x0]
    74e8:	cmp	w0, #0x3e
    74ec:	b.eq	7508 <grub_menu_register_viewer+0xa0>  // b.none
    74f0:	ldr	x0, [sp, #24]
    74f4:	ldrb	w0, [x0]
    74f8:	cmp	w0, #0x0
    74fc:	b.ne	7508 <grub_menu_register_viewer+0xa0>  // b.any
    7500:	mov	w0, #0x1                   	// #1
    7504:	b	75a4 <grub_menu_register_viewer+0x13c>
    7508:	ldr	x0, [sp, #16]
    750c:	ldrb	w0, [x0]
    7510:	cmp	w0, #0x3e
    7514:	b.ne	7534 <grub_menu_register_viewer+0xcc>  // b.any
    7518:	ldr	x0, [sp, #16]
    751c:	add	x0, x0, #0x1
    7520:	ldrb	w0, [x0]
    7524:	cmp	w0, #0x3e
    7528:	b.eq	7534 <grub_menu_register_viewer+0xcc>  // b.none
    752c:	mov	w0, #0x0                   	// #0
    7530:	b	75a4 <grub_menu_register_viewer+0x13c>
    7534:	ldr	x0, [sp, #16]
    7538:	ldrb	w0, [x0]
    753c:	cmp	w0, #0x3e
    7540:	b.ne	7550 <grub_menu_register_viewer+0xe8>  // b.any
    7544:	ldr	x0, [sp, #16]
    7548:	add	x0, x0, #0x1
    754c:	str	x0, [sp, #16]
    7550:	ldr	x0, [sp, #24]
    7554:	ldrb	w1, [x0]
    7558:	ldr	x0, [sp, #16]
    755c:	ldrb	w0, [x0]
    7560:	cmp	w1, w0
    7564:	b.eq	7570 <grub_menu_register_viewer+0x108>  // b.none
    7568:	mov	w0, #0x0                   	// #0
    756c:	b	75a4 <grub_menu_register_viewer+0x13c>
    7570:	ldr	x0, [sp, #24]
    7574:	ldrb	w0, [x0]
    7578:	cmp	w0, #0x0
    757c:	b.ne	7588 <grub_menu_register_viewer+0x120>  // b.any
    7580:	mov	w0, #0x1                   	// #1
    7584:	b	75a4 <grub_menu_register_viewer+0x13c>
    7588:	ldr	x0, [sp, #24]
    758c:	add	x0, x0, #0x1
    7590:	str	x0, [sp, #24]
    7594:	ldr	x0, [sp, #16]
    7598:	add	x0, x0, #0x1
    759c:	str	x0, [sp, #16]
    75a0:	b	74cc <grub_menu_register_viewer+0x64>
    75a4:	add	sp, sp, #0x20
    75a8:	ret
    75ac:	stp	x29, x30, [sp, #-64]!
    75b0:	mov	x29, sp
    75b4:	str	x0, [sp, #24]
    75b8:	str	x1, [sp, #16]
    75bc:	ldr	x0, [sp, #16]
    75c0:	bl	0 <grub_env_get>
    75c4:	str	x0, [sp, #32]
    75c8:	ldr	x0, [sp, #32]
    75cc:	cmp	x0, #0x0
    75d0:	b.ne	75dc <grub_menu_register_viewer+0x174>  // b.any
    75d4:	mov	w0, #0xffffffff            	// #-1
    75d8:	b	76dc <grub_menu_register_viewer+0x274>
    75dc:	bl	0 <grub_error_push>
    75e0:	mov	w2, #0x0                   	// #0
    75e4:	mov	x1, #0x0                   	// #0
    75e8:	ldr	x0, [sp, #32]
    75ec:	bl	0 <grub_strtoul>
    75f0:	str	w0, [sp, #60]
    75f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    75f8:	add	x0, x0, #0x0
    75fc:	ldr	x0, [x0]
    7600:	ldr	w0, [x0]
    7604:	cmp	w0, #0xa
    7608:	b.ne	76a4 <grub_menu_register_viewer+0x23c>  // b.any
    760c:	ldr	x0, [sp, #24]
    7610:	ldr	x0, [x0, #8]
    7614:	str	x0, [sp, #48]
    7618:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    761c:	add	x0, x0, #0x0
    7620:	ldr	x0, [x0]
    7624:	str	wzr, [x0]
    7628:	str	wzr, [sp, #44]
    762c:	b	7684 <grub_menu_register_viewer+0x21c>
    7630:	ldr	x0, [sp, #48]
    7634:	ldr	x0, [x0]
    7638:	ldr	x1, [sp, #32]
    763c:	bl	74b0 <grub_menu_register_viewer+0x48>
    7640:	cmp	w0, #0x0
    7644:	b.ne	7660 <grub_menu_register_viewer+0x1f8>  // b.any
    7648:	ldr	x0, [sp, #48]
    764c:	ldr	x0, [x0, #8]
    7650:	ldr	x1, [sp, #32]
    7654:	bl	74b0 <grub_menu_register_viewer+0x48>
    7658:	cmp	w0, #0x0
    765c:	b.eq	766c <grub_menu_register_viewer+0x204>  // b.none
    7660:	ldr	w0, [sp, #44]
    7664:	str	w0, [sp, #60]
    7668:	b	7690 <grub_menu_register_viewer+0x228>
    766c:	ldr	x0, [sp, #48]
    7670:	ldr	x0, [x0, #72]
    7674:	str	x0, [sp, #48]
    7678:	ldr	w0, [sp, #44]
    767c:	add	w0, w0, #0x1
    7680:	str	w0, [sp, #44]
    7684:	ldr	x0, [sp, #48]
    7688:	cmp	x0, #0x0
    768c:	b.ne	7630 <grub_menu_register_viewer+0x1c8>  // b.any
    7690:	ldr	x0, [sp, #48]
    7694:	cmp	x0, #0x0
    7698:	b.ne	76a4 <grub_menu_register_viewer+0x23c>  // b.any
    769c:	mov	w0, #0xffffffff            	// #-1
    76a0:	str	w0, [sp, #60]
    76a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    76a8:	add	x0, x0, #0x0
    76ac:	ldr	x0, [x0]
    76b0:	ldr	w0, [x0]
    76b4:	cmp	w0, #0x0
    76b8:	b.eq	76d4 <grub_menu_register_viewer+0x26c>  // b.none
    76bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    76c0:	add	x0, x0, #0x0
    76c4:	ldr	x0, [x0]
    76c8:	str	wzr, [x0]
    76cc:	mov	w0, #0xffffffff            	// #-1
    76d0:	str	w0, [sp, #60]
    76d4:	bl	0 <grub_error_pop>
    76d8:	ldr	w0, [sp, #60]
    76dc:	ldp	x29, x30, [sp], #64
    76e0:	ret
    76e4:	nop
	...
    76f0:	stp	x29, x30, [sp, #-48]!
    76f4:	mov	x29, sp
    76f8:	str	x0, [sp, #24]
    76fc:	bl	0 <grub_get_time_ms>
    7700:	str	x0, [sp, #40]
    7704:	ldr	x0, [sp, #24]
    7708:	ldr	x0, [x0]
    770c:	ldr	x1, [sp, #40]
    7710:	sub	x0, x1, x0
    7714:	cmp	x0, #0x3e7
    7718:	b.ls	7730 <grub_menu_register_viewer+0x2c8>  // b.plast
    771c:	ldr	x0, [sp, #24]
    7720:	ldr	x1, [sp, #40]
    7724:	str	x1, [x0]
    7728:	mov	w0, #0x1                   	// #1
    772c:	b	7734 <grub_menu_register_viewer+0x2cc>
    7730:	mov	w0, #0x0                   	// #0
    7734:	ldp	x29, x30, [sp], #48
    7738:	ret
    773c:	stp	x29, x30, [sp, #-32]!
    7740:	mov	x29, sp
    7744:	str	x0, [sp, #24]
    7748:	str	w1, [sp, #20]
    774c:	ldr	x0, [sp, #24]
    7750:	bl	ffc8 <grub_term_restore_pos>
    7754:	ldr	w1, [sp, #20]
    7758:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    775c:	add	x0, x0, #0x0
    7760:	ldr	x0, [x0]
    7764:	bl	0 <grub_printf>
    7768:	bl	0 <grub_refresh>
    776c:	nop
    7770:	ldp	x29, x30, [sp], #32
    7774:	ret
	...
    7780:	stp	x29, x30, [sp, #-112]!
    7784:	mov	x29, sp
    7788:	str	x0, [sp, #40]
    778c:	str	w1, [sp, #36]
    7790:	str	x2, [sp, #24]
    7794:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7798:	add	x0, x0, #0x0
    779c:	ldr	x1, [x0]
    77a0:	ldr	x0, [sp, #40]
    77a4:	bl	75ac <grub_menu_register_viewer+0x144>
    77a8:	str	w0, [sp, #108]
    77ac:	ldr	w0, [sp, #108]
    77b0:	cmp	w0, #0x0
    77b4:	b.lt	77cc <grub_menu_register_viewer+0x364>  // b.tstop
    77b8:	ldr	x0, [sp, #40]
    77bc:	ldr	w0, [x0]
    77c0:	ldr	w1, [sp, #108]
    77c4:	cmp	w1, w0
    77c8:	b.lt	77d0 <grub_menu_register_viewer+0x368>  // b.tstop
    77cc:	str	wzr, [sp, #108]
    77d0:	bl	6830 <grub_menu_get_timeout>
    77d4:	str	w0, [sp, #100]
    77d8:	ldr	w0, [sp, #100]
    77dc:	cmp	w0, #0x0
    77e0:	b.ge	77f4 <grub_menu_register_viewer+0x38c>  // b.tcont
    77e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    77e8:	add	x0, x0, #0x0
    77ec:	ldr	x0, [x0]
    77f0:	bl	0 <grub_env_unset>
    77f4:	bl	678c <grub_menu_get_entry+0xcc>
    77f8:	str	w0, [sp, #92]
    77fc:	ldr	w0, [sp, #92]
    7800:	cmp	w0, #0x1
    7804:	b.eq	7814 <grub_menu_register_viewer+0x3ac>  // b.none
    7808:	ldr	w0, [sp, #92]
    780c:	cmp	w0, #0x2
    7810:	b.ne	7958 <grub_menu_register_viewer+0x4f0>  // b.any
    7814:	mov	w0, #0xffffffff            	// #-1
    7818:	str	w0, [sp, #96]
    781c:	ldr	w0, [sp, #92]
    7820:	cmp	w0, #0x1
    7824:	b.ne	7864 <grub_menu_register_viewer+0x3fc>  // b.any
    7828:	ldr	w0, [sp, #100]
    782c:	cmp	w0, #0x0
    7830:	b.eq	7864 <grub_menu_register_viewer+0x3fc>  // b.none
    7834:	bl	fef0 <grub_term_save_pos>
    7838:	mov	x1, x0
    783c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7840:	add	x0, x0, #0x0
    7844:	ldr	x0, [x0]
    7848:	str	x1, [x0]
    784c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7850:	add	x0, x0, #0x0
    7854:	ldr	x0, [x0]
    7858:	ldr	x0, [x0]
    785c:	ldr	w1, [sp, #100]
    7860:	bl	773c <grub_menu_register_viewer+0x2d4>
    7864:	bl	0 <grub_get_time_ms>
    7868:	str	x0, [sp, #56]
    786c:	bl	0 <grub_getkey_noblock>
    7870:	str	w0, [sp, #88]
    7874:	ldr	w0, [sp, #88]
    7878:	cmp	w0, #0x0
    787c:	b.eq	789c <grub_menu_register_viewer+0x434>  // b.none
    7880:	ldr	w1, [sp, #88]
    7884:	ldr	x0, [sp, #40]
    7888:	bl	6718 <grub_menu_get_entry+0x58>
    788c:	str	w0, [sp, #96]
    7890:	ldr	w0, [sp, #96]
    7894:	cmp	w0, #0x0
    7898:	b.ge	7910 <grub_menu_register_viewer+0x4a8>  // b.tcont
    789c:	ldr	w0, [sp, #88]
    78a0:	cmp	w0, #0x1b
    78a4:	b.ne	78b4 <grub_menu_register_viewer+0x44c>  // b.any
    78a8:	mov	w0, #0xffffffff            	// #-1
    78ac:	str	w0, [sp, #100]
    78b0:	b	791c <grub_menu_register_viewer+0x4b4>
    78b4:	ldr	w0, [sp, #100]
    78b8:	cmp	w0, #0x0
    78bc:	b.le	7900 <grub_menu_register_viewer+0x498>
    78c0:	add	x0, sp, #0x38
    78c4:	bl	76f0 <grub_menu_register_viewer+0x288>
    78c8:	cmp	w0, #0x0
    78cc:	b.eq	7900 <grub_menu_register_viewer+0x498>  // b.none
    78d0:	ldr	w0, [sp, #100]
    78d4:	sub	w0, w0, #0x1
    78d8:	str	w0, [sp, #100]
    78dc:	ldr	w0, [sp, #92]
    78e0:	cmp	w0, #0x1
    78e4:	b.ne	7900 <grub_menu_register_viewer+0x498>  // b.any
    78e8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    78ec:	add	x0, x0, #0x0
    78f0:	ldr	x0, [x0]
    78f4:	ldr	x0, [x0]
    78f8:	ldr	w1, [sp, #100]
    78fc:	bl	773c <grub_menu_register_viewer+0x2d4>
    7900:	ldr	w0, [sp, #100]
    7904:	cmp	w0, #0x0
    7908:	b.eq	7918 <grub_menu_register_viewer+0x4b0>  // b.none
    790c:	b	786c <grub_menu_register_viewer+0x404>
    7910:	nop
    7914:	b	791c <grub_menu_register_viewer+0x4b4>
    7918:	nop
    791c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7920:	add	x0, x0, #0x0
    7924:	ldr	x0, [x0]
    7928:	bl	0 <grub_env_unset>
    792c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7930:	add	x0, x0, #0x0
    7934:	ldr	x0, [x0]
    7938:	bl	0 <grub_env_unset>
    793c:	ldr	w0, [sp, #96]
    7940:	cmp	w0, #0x0
    7944:	b.lt	7958 <grub_menu_register_viewer+0x4f0>  // b.tstop
    7948:	ldr	x0, [sp, #24]
    794c:	str	wzr, [x0]
    7950:	ldr	w0, [sp, #96]
    7954:	b	7f08 <grub_menu_register_viewer+0xaa0>
    7958:	ldr	w0, [sp, #100]
    795c:	cmp	w0, #0x0
    7960:	b.ne	7978 <grub_menu_register_viewer+0x510>  // b.any
    7964:	ldr	x0, [sp, #24]
    7968:	mov	w1, #0x1                   	// #1
    796c:	str	w1, [x0]
    7970:	ldr	w0, [sp, #108]
    7974:	b	7f08 <grub_menu_register_viewer+0xaa0>
    7978:	ldr	w0, [sp, #108]
    797c:	str	w0, [sp, #104]
    7980:	ldr	w2, [sp, #36]
    7984:	ldr	x1, [sp, #40]
    7988:	ldr	w0, [sp, #104]
    798c:	bl	71d8 <grub_menu_set_timeout+0x900>
    7990:	bl	0 <grub_get_time_ms>
    7994:	str	x0, [sp, #56]
    7998:	bl	6830 <grub_menu_get_timeout>
    799c:	str	w0, [sp, #100]
    79a0:	ldr	w0, [sp, #100]
    79a4:	cmp	w0, #0x0
    79a8:	b.le	79b8 <grub_menu_register_viewer+0x550>
    79ac:	ldr	w0, [sp, #100]
    79b0:	bl	70e8 <grub_menu_set_timeout+0x810>
    79b4:	b	79bc <grub_menu_register_viewer+0x554>
    79b8:	bl	7400 <grub_menu_set_timeout+0xb28>
    79bc:	bl	6830 <grub_menu_get_timeout>
    79c0:	str	w0, [sp, #100]
    79c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    79c8:	add	x0, x0, #0x0
    79cc:	ldr	x0, [x0]
    79d0:	ldr	w0, [x0]
    79d4:	cmp	w0, #0x0
    79d8:	b.eq	79e4 <grub_menu_register_viewer+0x57c>  // b.none
    79dc:	mov	w0, #0xffffffff            	// #-1
    79e0:	b	7f08 <grub_menu_register_viewer+0xaa0>
    79e4:	ldr	w0, [sp, #100]
    79e8:	cmp	w0, #0x0
    79ec:	b.le	7a1c <grub_menu_register_viewer+0x5b4>
    79f0:	add	x0, sp, #0x38
    79f4:	bl	76f0 <grub_menu_register_viewer+0x288>
    79f8:	cmp	w0, #0x0
    79fc:	b.eq	7a1c <grub_menu_register_viewer+0x5b4>  // b.none
    7a00:	ldr	w0, [sp, #100]
    7a04:	sub	w0, w0, #0x1
    7a08:	str	w0, [sp, #100]
    7a0c:	ldr	w0, [sp, #100]
    7a10:	bl	68d8 <grub_menu_set_timeout>
    7a14:	ldr	w0, [sp, #100]
    7a18:	bl	70e8 <grub_menu_set_timeout+0x810>
    7a1c:	ldr	w0, [sp, #100]
    7a20:	cmp	w0, #0x0
    7a24:	b.ne	7a50 <grub_menu_register_viewer+0x5e8>  // b.any
    7a28:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7a2c:	add	x0, x0, #0x0
    7a30:	ldr	x0, [x0]
    7a34:	bl	0 <grub_env_unset>
    7a38:	ldr	x0, [sp, #24]
    7a3c:	mov	w1, #0x1                   	// #1
    7a40:	str	w1, [x0]
    7a44:	bl	7158 <grub_menu_set_timeout+0x880>
    7a48:	ldr	w0, [sp, #108]
    7a4c:	b	7f08 <grub_menu_register_viewer+0xaa0>
    7a50:	bl	0 <grub_getkey_noblock>
    7a54:	str	w0, [sp, #84]
    7a58:	ldr	w0, [sp, #84]
    7a5c:	cmp	w0, #0x0
    7a60:	b.eq	7ef0 <grub_menu_register_viewer+0xa88>  // b.none
    7a64:	ldr	w0, [sp, #84]
    7a68:	cmp	w0, #0x0
    7a6c:	b.le	7ef0 <grub_menu_register_viewer+0xa88>
    7a70:	ldr	w0, [sp, #100]
    7a74:	cmp	w0, #0x0
    7a78:	b.lt	7aa0 <grub_menu_register_viewer+0x638>  // b.tstop
    7a7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7a80:	add	x0, x0, #0x0
    7a84:	ldr	x0, [x0]
    7a88:	bl	0 <grub_env_unset>
    7a8c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7a90:	add	x0, x0, #0x0
    7a94:	ldr	x0, [x0]
    7a98:	bl	0 <grub_env_unset>
    7a9c:	bl	7400 <grub_menu_set_timeout+0xb28>
    7aa0:	ldr	w1, [sp, #84]
    7aa4:	mov	w0, #0x70                  	// #112
    7aa8:	movk	w0, #0x200, lsl #16
    7aac:	cmp	w1, w0
    7ab0:	b.eq	7d90 <grub_menu_register_viewer+0x928>  // b.none
    7ab4:	ldr	w1, [sp, #84]
    7ab8:	mov	w0, #0x70                  	// #112
    7abc:	movk	w0, #0x200, lsl #16
    7ac0:	cmp	w1, w0
    7ac4:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7ac8:	ldr	w1, [sp, #84]
    7acc:	mov	w0, #0x6e                  	// #110
    7ad0:	movk	w0, #0x200, lsl #16
    7ad4:	cmp	w1, w0
    7ad8:	b.eq	7db4 <grub_menu_register_viewer+0x94c>  // b.none
    7adc:	ldr	w1, [sp, #84]
    7ae0:	mov	w0, #0x6e                  	// #110
    7ae4:	movk	w0, #0x200, lsl #16
    7ae8:	cmp	w1, w0
    7aec:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7af0:	ldr	w1, [sp, #84]
    7af4:	mov	w0, #0x67                  	// #103
    7af8:	movk	w0, #0x200, lsl #16
    7afc:	cmp	w1, w0
    7b00:	b.eq	7de4 <grub_menu_register_viewer+0x97c>  // b.none
    7b04:	ldr	w1, [sp, #84]
    7b08:	mov	w0, #0x67                  	// #103
    7b0c:	movk	w0, #0x200, lsl #16
    7b10:	cmp	w1, w0
    7b14:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7b18:	ldr	w1, [sp, #84]
    7b1c:	mov	w0, #0x66                  	// #102
    7b20:	movk	w0, #0x200, lsl #16
    7b24:	cmp	w1, w0
    7b28:	b.eq	7e54 <grub_menu_register_viewer+0x9ec>  // b.none
    7b2c:	ldr	w1, [sp, #84]
    7b30:	mov	w0, #0x66                  	// #102
    7b34:	movk	w0, #0x200, lsl #16
    7b38:	cmp	w1, w0
    7b3c:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7b40:	ldr	w1, [sp, #84]
    7b44:	mov	w0, #0x65                  	// #101
    7b48:	movk	w0, #0x200, lsl #16
    7b4c:	cmp	w1, w0
    7b50:	b.eq	7d74 <grub_menu_register_viewer+0x90c>  // b.none
    7b54:	ldr	w1, [sp, #84]
    7b58:	mov	w0, #0x65                  	// #101
    7b5c:	movk	w0, #0x200, lsl #16
    7b60:	cmp	w1, w0
    7b64:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7b68:	ldr	w1, [sp, #84]
    7b6c:	mov	w0, #0x63                  	// #99
    7b70:	movk	w0, #0x200, lsl #16
    7b74:	cmp	w1, w0
    7b78:	b.eq	7e10 <grub_menu_register_viewer+0x9a8>  // b.none
    7b7c:	ldr	w1, [sp, #84]
    7b80:	mov	w0, #0x63                  	// #99
    7b84:	movk	w0, #0x200, lsl #16
    7b88:	cmp	w1, w0
    7b8c:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7b90:	ldr	w1, [sp, #84]
    7b94:	mov	w0, #0x61                  	// #97
    7b98:	movk	w0, #0x200, lsl #16
    7b9c:	cmp	w1, w0
    7ba0:	b.eq	7d64 <grub_menu_register_viewer+0x8fc>  // b.none
    7ba4:	ldr	w1, [sp, #84]
    7ba8:	mov	w0, #0x61                  	// #97
    7bac:	movk	w0, #0x200, lsl #16
    7bb0:	cmp	w1, w0
    7bb4:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7bb8:	ldr	w1, [sp, #84]
    7bbc:	mov	w0, #0x51                  	// #81
    7bc0:	movk	w0, #0x80, lsl #16
    7bc4:	cmp	w1, w0
    7bc8:	b.eq	7e10 <grub_menu_register_viewer+0x9a8>  // b.none
    7bcc:	ldr	w1, [sp, #84]
    7bd0:	mov	w0, #0x51                  	// #81
    7bd4:	movk	w0, #0x80, lsl #16
    7bd8:	cmp	w1, w0
    7bdc:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7be0:	ldr	w1, [sp, #84]
    7be4:	mov	w0, #0x50                  	// #80
    7be8:	movk	w0, #0x80, lsl #16
    7bec:	cmp	w1, w0
    7bf0:	b.eq	7db4 <grub_menu_register_viewer+0x94c>  // b.none
    7bf4:	ldr	w1, [sp, #84]
    7bf8:	mov	w0, #0x50                  	// #80
    7bfc:	movk	w0, #0x80, lsl #16
    7c00:	cmp	w1, w0
    7c04:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7c08:	ldr	w1, [sp, #84]
    7c0c:	mov	w0, #0x4f                  	// #79
    7c10:	movk	w0, #0x80, lsl #16
    7c14:	cmp	w1, w0
    7c18:	b.eq	7d74 <grub_menu_register_viewer+0x90c>  // b.none
    7c1c:	ldr	w1, [sp, #84]
    7c20:	mov	w0, #0x4f                  	// #79
    7c24:	movk	w0, #0x80, lsl #16
    7c28:	cmp	w1, w0
    7c2c:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7c30:	ldr	w1, [sp, #84]
    7c34:	mov	w0, #0x4d                  	// #77
    7c38:	movk	w0, #0x80, lsl #16
    7c3c:	cmp	w1, w0
    7c40:	b.eq	7e54 <grub_menu_register_viewer+0x9ec>  // b.none
    7c44:	ldr	w1, [sp, #84]
    7c48:	mov	w0, #0x4d                  	// #77
    7c4c:	movk	w0, #0x80, lsl #16
    7c50:	cmp	w1, w0
    7c54:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7c58:	ldr	w1, [sp, #84]
    7c5c:	mov	w0, #0x49                  	// #73
    7c60:	movk	w0, #0x80, lsl #16
    7c64:	cmp	w1, w0
    7c68:	b.eq	7de4 <grub_menu_register_viewer+0x97c>  // b.none
    7c6c:	ldr	w1, [sp, #84]
    7c70:	mov	w0, #0x49                  	// #73
    7c74:	movk	w0, #0x80, lsl #16
    7c78:	cmp	w1, w0
    7c7c:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7c80:	ldr	w1, [sp, #84]
    7c84:	mov	w0, #0x48                  	// #72
    7c88:	movk	w0, #0x80, lsl #16
    7c8c:	cmp	w1, w0
    7c90:	b.eq	7d90 <grub_menu_register_viewer+0x928>  // b.none
    7c94:	ldr	w1, [sp, #84]
    7c98:	mov	w0, #0x48                  	// #72
    7c9c:	movk	w0, #0x80, lsl #16
    7ca0:	cmp	w1, w0
    7ca4:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7ca8:	ldr	w1, [sp, #84]
    7cac:	mov	w0, #0x47                  	// #71
    7cb0:	movk	w0, #0x80, lsl #16
    7cb4:	cmp	w1, w0
    7cb8:	b.eq	7d64 <grub_menu_register_viewer+0x8fc>  // b.none
    7cbc:	ldr	w1, [sp, #84]
    7cc0:	mov	w0, #0x47                  	// #71
    7cc4:	movk	w0, #0x80, lsl #16
    7cc8:	cmp	w1, w0
    7ccc:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7cd0:	ldr	w0, [sp, #84]
    7cd4:	cmp	w0, #0x76
    7cd8:	b.eq	7db4 <grub_menu_register_viewer+0x94c>  // b.none
    7cdc:	ldr	w0, [sp, #84]
    7ce0:	cmp	w0, #0x76
    7ce4:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7ce8:	ldr	w0, [sp, #84]
    7cec:	cmp	w0, #0x65
    7cf0:	b.eq	7e94 <grub_menu_register_viewer+0xa2c>  // b.none
    7cf4:	ldr	w0, [sp, #84]
    7cf8:	cmp	w0, #0x65
    7cfc:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7d00:	ldr	w0, [sp, #84]
    7d04:	cmp	w0, #0x63
    7d08:	b.eq	7e80 <grub_menu_register_viewer+0xa18>  // b.none
    7d0c:	ldr	w0, [sp, #84]
    7d10:	cmp	w0, #0x63
    7d14:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7d18:	ldr	w0, [sp, #84]
    7d1c:	cmp	w0, #0x5e
    7d20:	b.eq	7d90 <grub_menu_register_viewer+0x928>  // b.none
    7d24:	ldr	w0, [sp, #84]
    7d28:	cmp	w0, #0x5e
    7d2c:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7d30:	ldr	w0, [sp, #84]
    7d34:	cmp	w0, #0x1b
    7d38:	b.eq	7e68 <grub_menu_register_viewer+0xa00>  // b.none
    7d3c:	ldr	w0, [sp, #84]
    7d40:	cmp	w0, #0x1b
    7d44:	b.gt	7ec0 <grub_menu_register_viewer+0xa58>
    7d48:	ldr	w0, [sp, #84]
    7d4c:	cmp	w0, #0xa
    7d50:	b.eq	7e54 <grub_menu_register_viewer+0x9ec>  // b.none
    7d54:	ldr	w0, [sp, #84]
    7d58:	cmp	w0, #0xd
    7d5c:	b.eq	7e54 <grub_menu_register_viewer+0x9ec>  // b.none
    7d60:	b	7ec0 <grub_menu_register_viewer+0xa58>
    7d64:	str	wzr, [sp, #104]
    7d68:	ldr	w0, [sp, #104]
    7d6c:	bl	7078 <grub_menu_set_timeout+0x7a0>
    7d70:	b	7f04 <grub_menu_register_viewer+0xa9c>
    7d74:	ldr	x0, [sp, #40]
    7d78:	ldr	w0, [x0]
    7d7c:	sub	w0, w0, #0x1
    7d80:	str	w0, [sp, #104]
    7d84:	ldr	w0, [sp, #104]
    7d88:	bl	7078 <grub_menu_set_timeout+0x7a0>
    7d8c:	b	7f04 <grub_menu_register_viewer+0xa9c>
    7d90:	ldr	w0, [sp, #104]
    7d94:	cmp	w0, #0x0
    7d98:	b.le	7da8 <grub_menu_register_viewer+0x940>
    7d9c:	ldr	w0, [sp, #104]
    7da0:	sub	w0, w0, #0x1
    7da4:	str	w0, [sp, #104]
    7da8:	ldr	w0, [sp, #104]
    7dac:	bl	7078 <grub_menu_set_timeout+0x7a0>
    7db0:	b	7f04 <grub_menu_register_viewer+0xa9c>
    7db4:	ldr	x0, [sp, #40]
    7db8:	ldr	w0, [x0]
    7dbc:	sub	w0, w0, #0x1
    7dc0:	ldr	w1, [sp, #104]
    7dc4:	cmp	w1, w0
    7dc8:	b.ge	7dd8 <grub_menu_register_viewer+0x970>  // b.tcont
    7dcc:	ldr	w0, [sp, #104]
    7dd0:	add	w0, w0, #0x1
    7dd4:	str	w0, [sp, #104]
    7dd8:	ldr	w0, [sp, #104]
    7ddc:	bl	7078 <grub_menu_set_timeout+0x7a0>
    7de0:	b	7f04 <grub_menu_register_viewer+0xa9c>
    7de4:	ldr	w0, [sp, #104]
    7de8:	cmp	w0, #0x9
    7dec:	b.gt	7df8 <grub_menu_register_viewer+0x990>
    7df0:	str	wzr, [sp, #104]
    7df4:	b	7e04 <grub_menu_register_viewer+0x99c>
    7df8:	ldr	w0, [sp, #104]
    7dfc:	sub	w0, w0, #0xa
    7e00:	str	w0, [sp, #104]
    7e04:	ldr	w0, [sp, #104]
    7e08:	bl	7078 <grub_menu_set_timeout+0x7a0>
    7e0c:	b	7f04 <grub_menu_register_viewer+0xa9c>
    7e10:	ldr	w0, [sp, #104]
    7e14:	add	w1, w0, #0xa
    7e18:	ldr	x0, [sp, #40]
    7e1c:	ldr	w0, [x0]
    7e20:	cmp	w1, w0
    7e24:	b.ge	7e38 <grub_menu_register_viewer+0x9d0>  // b.tcont
    7e28:	ldr	w0, [sp, #104]
    7e2c:	add	w0, w0, #0xa
    7e30:	str	w0, [sp, #104]
    7e34:	b	7e48 <grub_menu_register_viewer+0x9e0>
    7e38:	ldr	x0, [sp, #40]
    7e3c:	ldr	w0, [x0]
    7e40:	sub	w0, w0, #0x1
    7e44:	str	w0, [sp, #104]
    7e48:	ldr	w0, [sp, #104]
    7e4c:	bl	7078 <grub_menu_set_timeout+0x7a0>
    7e50:	b	7f04 <grub_menu_register_viewer+0xa9c>
    7e54:	bl	7158 <grub_menu_set_timeout+0x880>
    7e58:	ldr	x0, [sp, #24]
    7e5c:	str	wzr, [x0]
    7e60:	ldr	w0, [sp, #104]
    7e64:	b	7f08 <grub_menu_register_viewer+0xaa0>
    7e68:	ldr	w0, [sp, #36]
    7e6c:	cmp	w0, #0x0
    7e70:	b.eq	7ef8 <grub_menu_register_viewer+0xa90>  // b.none
    7e74:	bl	7158 <grub_menu_set_timeout+0x880>
    7e78:	mov	w0, #0xffffffff            	// #-1
    7e7c:	b	7f08 <grub_menu_register_viewer+0xaa0>
    7e80:	bl	7158 <grub_menu_set_timeout+0x880>
    7e84:	mov	w1, #0x0                   	// #0
    7e88:	mov	w0, #0x1                   	// #1
    7e8c:	bl	e54 <grub_cmdline_run>
    7e90:	b	7980 <grub_menu_register_viewer+0x518>
    7e94:	bl	7158 <grub_menu_set_timeout+0x880>
    7e98:	ldr	w1, [sp, #104]
    7e9c:	ldr	x0, [sp, #40]
    7ea0:	bl	66c0 <grub_menu_get_entry>
    7ea4:	str	x0, [sp, #72]
    7ea8:	ldr	x0, [sp, #72]
    7eac:	cmp	x0, #0x0
    7eb0:	b.eq	7980 <grub_menu_register_viewer+0x518>  // b.none
    7eb4:	ldr	x0, [sp, #72]
    7eb8:	bl	c028 <grub_menu_entry_run>
    7ebc:	b	7980 <grub_menu_register_viewer+0x518>
    7ec0:	ldr	w1, [sp, #84]
    7ec4:	ldr	x0, [sp, #40]
    7ec8:	bl	6718 <grub_menu_get_entry+0x58>
    7ecc:	str	w0, [sp, #68]
    7ed0:	ldr	w0, [sp, #68]
    7ed4:	cmp	w0, #0x0
    7ed8:	b.lt	7f00 <grub_menu_register_viewer+0xa98>  // b.tstop
    7edc:	bl	7158 <grub_menu_set_timeout+0x880>
    7ee0:	ldr	x0, [sp, #24]
    7ee4:	str	wzr, [x0]
    7ee8:	ldr	w0, [sp, #68]
    7eec:	b	7f08 <grub_menu_register_viewer+0xaa0>
    7ef0:	nop
    7ef4:	b	79bc <grub_menu_register_viewer+0x554>
    7ef8:	nop
    7efc:	b	79bc <grub_menu_register_viewer+0x554>
    7f00:	nop
    7f04:	b	79bc <grub_menu_register_viewer+0x554>
    7f08:	ldp	x29, x30, [sp], #112
    7f0c:	ret
	...
    7f40:	stp	x29, x30, [sp, #-32]!
    7f44:	mov	x29, sp
    7f48:	str	x0, [sp, #24]
    7f4c:	str	x1, [sp, #16]
    7f50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7f54:	add	x0, x0, #0x0
    7f58:	ldr	x0, [x0]
    7f5c:	bl	0 <grub_printf>
    7f60:	ldr	x0, [sp, #24]
    7f64:	ldr	x0, [x0]
    7f68:	mov	x1, x0
    7f6c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7f70:	add	x0, x0, #0x0
    7f74:	ldr	x0, [x0]
    7f78:	bl	0 <grub_printf_>
    7f7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7f80:	add	x0, x0, #0x0
    7f84:	ldr	x0, [x0]
    7f88:	bl	0 <grub_printf>
    7f8c:	nop
    7f90:	ldp	x29, x30, [sp], #32
    7f94:	ret
	...
    7fb0:	stp	x29, x30, [sp, #-32]!
    7fb4:	mov	x29, sp
    7fb8:	str	x0, [sp, #24]
    7fbc:	str	x1, [sp, #16]
    7fc0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7fc4:	add	x0, x0, #0x0
    7fc8:	ldr	x0, [x0]
    7fcc:	bl	0 <grub_printf>
    7fd0:	ldr	x0, [sp, #24]
    7fd4:	ldr	x0, [x0]
    7fd8:	mov	x1, x0
    7fdc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7fe0:	add	x0, x0, #0x0
    7fe4:	ldr	x0, [x0]
    7fe8:	bl	0 <grub_printf_>
    7fec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    7ff0:	add	x0, x0, #0x0
    7ff4:	ldr	x0, [x0]
    7ff8:	bl	0 <grub_printf>
    7ffc:	mov	w0, #0x9c4                 	// #2500
    8000:	bl	0 <grub_millisleep>
    8004:	nop
    8008:	ldp	x29, x30, [sp], #32
    800c:	ret
	...
    8028:	stp	x29, x30, [sp, #-32]!
    802c:	mov	x29, sp
    8030:	str	x0, [sp, #24]
    8034:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    8038:	add	x0, x0, #0x0
    803c:	ldr	x0, [x0]
    8040:	ldr	w0, [x0]
    8044:	cmp	w0, #0x0
    8048:	b.eq	8060 <grub_menu_register_viewer+0xbf8>  // b.none
    804c:	bl	0 <grub_print_error>
    8050:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    8054:	add	x0, x0, #0x0
    8058:	ldr	x0, [x0]
    805c:	str	wzr, [x0]
    8060:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    8064:	add	x0, x0, #0x0
    8068:	ldr	x0, [x0]
    806c:	bl	0 <grub_printf>
    8070:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    8074:	add	x0, x0, #0x0
    8078:	ldr	x0, [x0]
    807c:	bl	0 <grub_printf_>
    8080:	bl	6604 <grub_wait_after_message>
    8084:	nop
    8088:	ldp	x29, x30, [sp], #32
    808c:	ret
	...
    80a8:	stp	x29, x30, [sp, #-64]!
    80ac:	mov	x29, sp
    80b0:	str	x0, [sp, #24]
    80b4:	str	w1, [sp, #20]
    80b8:	str	w2, [sp, #16]
    80bc:	add	x0, sp, #0x2c
    80c0:	mov	x2, x0
    80c4:	ldr	w1, [sp, #20]
    80c8:	ldr	x0, [sp, #24]
    80cc:	bl	7780 <grub_menu_register_viewer+0x318>
    80d0:	str	w0, [sp, #60]
    80d4:	ldr	w0, [sp, #60]
    80d8:	cmp	w0, #0x0
    80dc:	b.lt	814c <grub_menu_register_viewer+0xce4>  // b.tstop
    80e0:	ldr	w1, [sp, #60]
    80e4:	ldr	x0, [sp, #24]
    80e8:	bl	66c0 <grub_menu_get_entry>
    80ec:	str	x0, [sp, #48]
    80f0:	ldr	x0, [sp, #48]
    80f4:	cmp	x0, #0x0
    80f8:	b.eq	8158 <grub_menu_register_viewer+0xcf0>  // b.none
    80fc:	bl	11efc <grub_cls>
    8100:	ldr	w0, [sp, #44]
    8104:	cmp	w0, #0x0
    8108:	b.eq	8130 <grub_menu_register_viewer+0xcc8>  // b.none
    810c:	mov	x4, #0x0                   	// #0
    8110:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    8114:	add	x0, x0, #0x0
    8118:	ldr	x3, [x0]
    811c:	ldr	w2, [sp, #16]
    8120:	ldr	x1, [sp, #48]
    8124:	ldr	x0, [sp, #24]
    8128:	bl	6f98 <grub_menu_set_timeout+0x6c0>
    812c:	b	813c <grub_menu_register_viewer+0xcd4>
    8130:	mov	w1, #0x0                   	// #0
    8134:	ldr	x0, [sp, #48]
    8138:	bl	6a28 <grub_menu_set_timeout+0x150>
    813c:	ldr	w0, [sp, #16]
    8140:	cmp	w0, #0x0
    8144:	b.eq	80bc <grub_menu_register_viewer+0xc54>  // b.none
    8148:	b	8150 <grub_menu_register_viewer+0xce8>
    814c:	nop
    8150:	mov	w0, #0x0                   	// #0
    8154:	b	8160 <grub_menu_register_viewer+0xcf8>
    8158:	nop
    815c:	b	80bc <grub_menu_register_viewer+0xc54>
    8160:	ldp	x29, x30, [sp], #64
    8164:	ret
	...

0000000000008170 <grub_show_menu>:
    8170:	stp	x29, x30, [sp, #-48]!
    8174:	mov	x29, sp
    8178:	str	x0, [sp, #24]
    817c:	str	w1, [sp, #20]
    8180:	str	w2, [sp, #16]
    8184:	ldr	w2, [sp, #16]
    8188:	ldr	w1, [sp, #20]
    818c:	ldr	x0, [sp, #24]
    8190:	bl	80a8 <grub_menu_register_viewer+0xc40>
    8194:	str	w0, [sp, #44]
    8198:	str	wzr, [sp, #16]
    819c:	bl	0 <grub_print_error>
    81a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    81a4:	add	x0, x0, #0x0
    81a8:	ldr	x0, [x0]
    81ac:	ldr	w0, [x0]
    81b0:	cmp	w0, #0x0
    81b4:	b.ne	81e8 <grub_show_menu+0x78>  // b.any
    81b8:	mov	x0, #0x0                   	// #0
    81bc:	bl	4170 <grub_auth_check_authentication>
    81c0:	str	w0, [sp, #40]
    81c4:	ldr	w0, [sp, #40]
    81c8:	cmp	w0, #0x0
    81cc:	b.eq	81f0 <grub_show_menu+0x80>  // b.none
    81d0:	bl	0 <grub_print_error>
    81d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    81d8:	add	x0, x0, #0x0
    81dc:	ldr	x0, [x0]
    81e0:	str	wzr, [x0]
    81e4:	b	8184 <grub_show_menu+0x14>
    81e8:	nop
    81ec:	b	81f4 <grub_show_menu+0x84>
    81f0:	nop
    81f4:	ldr	w0, [sp, #44]
    81f8:	ldp	x29, x30, [sp], #48
    81fc:	ret
	...
    8210:	sub	sp, sp, #0x10
    8214:	str	w0, [sp, #12]
    8218:	ldr	w0, [sp, #12]
    821c:	cmp	w0, #0x1f
    8220:	b.le	8238 <grub_show_menu+0xc8>
    8224:	ldr	w0, [sp, #12]
    8228:	cmp	w0, #0x7e
    822c:	b.gt	8238 <grub_show_menu+0xc8>
    8230:	mov	w0, #0x1                   	// #1
    8234:	b	823c <grub_show_menu+0xcc>
    8238:	mov	w0, #0x0                   	// #0
    823c:	add	sp, sp, #0x10
    8240:	ret
    8244:	stp	x29, x30, [sp, #-32]!
    8248:	mov	x29, sp
    824c:	str	x0, [sp, #24]
    8250:	ldr	x0, [sp, #24]
    8254:	ldrh	w0, [x0, #6]
    8258:	ubfx	x0, x0, #3, #8
    825c:	and	w0, w0, #0xff
    8260:	cmp	w0, #0x2
    8264:	b.ls	8274 <grub_show_menu+0x104>  // b.plast
    8268:	ldr	x0, [sp, #24]
    826c:	ldr	x0, [x0, #24]
    8270:	bl	0 <grub_free>
    8274:	ldr	x0, [sp, #24]
    8278:	ldrh	w1, [x0, #6]
    827c:	and	w1, w1, #0xfffff807
    8280:	strh	w1, [x0, #6]
    8284:	nop
    8288:	ldp	x29, x30, [sp], #32
    828c:	ret
    8290:	stp	x29, x30, [sp, #-32]!
    8294:	mov	x29, sp
    8298:	str	x0, [sp, #24]
    829c:	ldr	x0, [sp, #24]
    82a0:	ldr	x1, [x0, #56]
    82a4:	ldr	x0, [sp, #24]
    82a8:	blr	x1
    82ac:	and	w0, w0, #0xffff
    82b0:	cmp	w0, #0x0
    82b4:	b.eq	82bc <grub_show_menu+0x14c>  // b.none
    82b8:	b	82c0 <grub_show_menu+0x150>
    82bc:	mov	w0, #0x50                  	// #80
    82c0:	ldp	x29, x30, [sp], #32
    82c4:	ret
    82c8:	stp	x29, x30, [sp, #-32]!
    82cc:	mov	x29, sp
    82d0:	str	x0, [sp, #24]
    82d4:	ldr	x0, [sp, #24]
    82d8:	ldr	x1, [x0, #64]
    82dc:	ldr	x0, [sp, #24]
    82e0:	blr	x1
    82e4:	ldp	x29, x30, [sp], #32
    82e8:	ret
    82ec:	stp	x29, x30, [sp, #-32]!
    82f0:	mov	x29, sp
    82f4:	str	x0, [sp, #24]
    82f8:	ldr	x0, [sp, #24]
    82fc:	ldr	x0, [x0, #104]
    8300:	cmp	x0, #0x0
    8304:	b.eq	8318 <grub_show_menu+0x1a8>  // b.none
    8308:	ldr	x0, [sp, #24]
    830c:	ldr	x1, [x0, #104]
    8310:	ldr	x0, [sp, #24]
    8314:	blr	x1
    8318:	nop
    831c:	ldp	x29, x30, [sp], #32
    8320:	ret
    8324:	stp	x29, x30, [sp, #-32]!
    8328:	mov	x29, sp
    832c:	str	x0, [sp, #24]
    8330:	str	w1, [sp, #16]
    8334:	ldr	x0, [sp, #24]
    8338:	ldr	x2, [x0, #72]
    833c:	ldr	w1, [sp, #16]
    8340:	ldr	x0, [sp, #24]
    8344:	blr	x2
    8348:	nop
    834c:	ldp	x29, x30, [sp], #32
    8350:	ret
    8354:	stp	x29, x30, [sp, #-32]!
    8358:	mov	x29, sp
    835c:	str	x0, [sp, #24]
    8360:	str	w1, [sp, #20]
    8364:	ldr	x0, [sp, #24]
    8368:	ldr	x0, [x0, #96]
    836c:	cmp	x0, #0x0
    8370:	b.eq	8388 <grub_show_menu+0x218>  // b.none
    8374:	ldr	x0, [sp, #24]
    8378:	ldr	x2, [x0, #96]
    837c:	ldr	w1, [sp, #20]
    8380:	ldr	x0, [sp, #24]
    8384:	blr	x2
    8388:	nop
    838c:	ldp	x29, x30, [sp], #32
    8390:	ret
    8394:	stp	x29, x30, [sp, #-32]!
    8398:	mov	x29, sp
    839c:	str	x0, [sp, #24]
    83a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    83a4:	add	x0, x0, #0x0
    83a8:	ldr	x0, [x0]
    83ac:	ldr	x0, [x0]
    83b0:	ldr	x1, [sp, #24]
    83b4:	bl	0 <grub_named_list_find>
    83b8:	ldp	x29, x30, [sp], #32
    83bc:	ret
	...
    83c8:	stp	x29, x30, [sp, #-64]!
    83cc:	mov	x29, sp
    83d0:	str	x0, [sp, #40]
    83d4:	str	w1, [sp, #36]
    83d8:	str	x2, [sp, #24]
    83dc:	ldr	x0, [sp, #40]
    83e0:	bl	8394 <grub_show_menu+0x224>
    83e4:	str	x0, [sp, #56]
    83e8:	ldr	x0, [sp, #56]
    83ec:	cmp	x0, #0x0
    83f0:	b.eq	8410 <grub_show_menu+0x2a0>  // b.none
    83f4:	ldr	x0, [sp, #56]
    83f8:	ldr	x3, [x0, #32]
    83fc:	ldr	x2, [sp, #24]
    8400:	ldr	w1, [sp, #36]
    8404:	ldr	x0, [sp, #56]
    8408:	blr	x3
    840c:	b	8414 <grub_show_menu+0x2a4>
    8410:	mov	w0, #0x5                   	// #5
    8414:	ldp	x29, x30, [sp], #64
    8418:	ret
    841c:	stp	x29, x30, [sp, #-32]!
    8420:	mov	x29, sp
    8424:	str	x0, [sp, #24]
    8428:	str	x1, [sp, #16]
    842c:	ldr	x0, [sp, #16]
    8430:	str	wzr, [x0, #8]
    8434:	ldr	x0, [sp, #16]
    8438:	mov	w1, #0x50                  	// #80
    843c:	str	w1, [x0, #12]
    8440:	ldr	x0, [sp, #16]
    8444:	ldr	w0, [x0, #12]
    8448:	add	w0, w0, #0x1
    844c:	sxtw	x0, w0
    8450:	lsl	x0, x0, #2
    8454:	bl	0 <grub_malloc>
    8458:	mov	x1, x0
    845c:	ldr	x0, [sp, #16]
    8460:	str	x1, [x0]
    8464:	ldr	x0, [sp, #24]
    8468:	ldr	w0, [x0, #48]
    846c:	mov	w0, w0
    8470:	lsl	x0, x0, #3
    8474:	bl	0 <grub_zalloc>
    8478:	mov	x1, x0
    847c:	ldr	x0, [sp, #16]
    8480:	str	x1, [x0, #16]
    8484:	ldr	x0, [sp, #16]
    8488:	ldr	x0, [x0]
    848c:	cmp	x0, #0x0
    8490:	b.eq	84a4 <grub_show_menu+0x334>  // b.none
    8494:	ldr	x0, [sp, #16]
    8498:	ldr	x0, [x0, #16]
    849c:	cmp	x0, #0x0
    84a0:	b.ne	84c4 <grub_show_menu+0x354>  // b.any
    84a4:	ldr	x0, [sp, #16]
    84a8:	ldr	x0, [x0]
    84ac:	bl	0 <grub_free>
    84b0:	ldr	x0, [sp, #16]
    84b4:	ldr	x0, [x0, #16]
    84b8:	bl	0 <grub_free>
    84bc:	mov	w0, #0x0                   	// #0
    84c0:	b	84c8 <grub_show_menu+0x358>
    84c4:	mov	w0, #0x1                   	// #1
    84c8:	ldp	x29, x30, [sp], #32
    84cc:	ret
    84d0:	stp	x29, x30, [sp, #-32]!
    84d4:	mov	x29, sp
    84d8:	str	x0, [sp, #24]
    84dc:	str	w1, [sp, #20]
    84e0:	ldr	x0, [sp, #24]
    84e4:	ldr	w1, [x0, #12]
    84e8:	ldr	x0, [sp, #24]
    84ec:	ldr	w2, [x0, #8]
    84f0:	ldr	w0, [sp, #20]
    84f4:	add	w0, w2, w0
    84f8:	cmp	w1, w0
    84fc:	b.ge	8568 <grub_show_menu+0x3f8>  // b.tcont
    8500:	ldr	x0, [sp, #24]
    8504:	ldr	w1, [x0, #8]
    8508:	ldr	w0, [sp, #20]
    850c:	add	w0, w1, w0
    8510:	lsl	w1, w0, #1
    8514:	ldr	x0, [sp, #24]
    8518:	str	w1, [x0, #12]
    851c:	ldr	x0, [sp, #24]
    8520:	ldr	x2, [x0]
    8524:	ldr	x0, [sp, #24]
    8528:	ldr	w0, [x0, #12]
    852c:	add	w0, w0, #0x1
    8530:	sxtw	x0, w0
    8534:	lsl	x0, x0, #2
    8538:	mov	x1, x0
    853c:	mov	x0, x2
    8540:	bl	0 <grub_realloc>
    8544:	mov	x1, x0
    8548:	ldr	x0, [sp, #24]
    854c:	str	x1, [x0]
    8550:	ldr	x0, [sp, #24]
    8554:	ldr	x0, [x0]
    8558:	cmp	x0, #0x0
    855c:	b.ne	8568 <grub_show_menu+0x3f8>  // b.any
    8560:	mov	w0, #0x0                   	// #0
    8564:	b	856c <grub_show_menu+0x3fc>
    8568:	mov	w0, #0x1                   	// #1
    856c:	ldp	x29, x30, [sp], #32
    8570:	ret
    8574:	stp	x29, x30, [sp, #-48]!
    8578:	mov	x29, sp
    857c:	str	x0, [sp, #24]
    8580:	str	x1, [sp, #16]
    8584:	ldr	x0, [sp, #24]
    8588:	ldr	x3, [x0]
    858c:	ldr	x0, [sp, #24]
    8590:	ldr	x1, [x0]
    8594:	ldr	x0, [sp, #24]
    8598:	ldr	w0, [x0, #8]
    859c:	sxtw	x0, w0
    85a0:	lsl	x0, x0, #2
    85a4:	add	x1, x1, x0
    85a8:	ldr	x0, [sp, #16]
    85ac:	ldr	x0, [x0]
    85b0:	mov	x2, x0
    85b4:	mov	x0, x3
    85b8:	bl	cc5c <grub_getstringwidth>
    85bc:	str	x0, [sp, #40]
    85c0:	ldr	x0, [sp, #40]
    85c4:	cmp	x0, #0x0
    85c8:	b.eq	85f8 <grub_show_menu+0x488>  // b.none
    85cc:	ldr	x0, [sp, #16]
    85d0:	ldr	w0, [x0, #24]
    85d4:	mov	w1, w0
    85d8:	ldr	x0, [sp, #40]
    85dc:	add	x0, x1, x0
    85e0:	sub	x1, x0, #0x1
    85e4:	ldr	x0, [sp, #16]
    85e8:	ldr	w0, [x0, #24]
    85ec:	mov	w0, w0
    85f0:	udiv	x0, x1, x0
    85f4:	b	85fc <grub_show_menu+0x48c>
    85f8:	mov	w0, #0x1                   	// #1
    85fc:	ldp	x29, x30, [sp], #48
    8600:	ret
    8604:	stp	x29, x30, [sp, #-32]!
    8608:	mov	x29, sp
    860c:	str	x0, [sp, #24]
    8610:	str	w1, [sp, #20]
    8614:	ldr	x0, [sp, #24]
    8618:	ldr	x2, [x0]
    861c:	ldr	x0, [sp, #24]
    8620:	ldr	w0, [x0, #20]
    8624:	sxtw	x1, w0
    8628:	mov	x0, x1
    862c:	lsl	x0, x0, #1
    8630:	add	x0, x0, x1
    8634:	lsl	x0, x0, #3
    8638:	add	x0, x2, x0
    863c:	ldr	w0, [x0, #8]
    8640:	ldr	w1, [sp, #20]
    8644:	cmp	w1, w0
    8648:	b.le	867c <grub_show_menu+0x50c>
    864c:	ldr	x0, [sp, #24]
    8650:	ldr	x2, [x0]
    8654:	ldr	x0, [sp, #24]
    8658:	ldr	w0, [x0, #20]
    865c:	sxtw	x1, w0
    8660:	mov	x0, x1
    8664:	lsl	x0, x0, #1
    8668:	add	x0, x0, x1
    866c:	lsl	x0, x0, #3
    8670:	add	x0, x2, x0
    8674:	ldr	w0, [x0, #8]
    8678:	str	w0, [sp, #20]
    867c:	ldr	x0, [sp, #24]
    8680:	ldr	x2, [x0]
    8684:	ldr	x0, [sp, #24]
    8688:	ldr	w0, [x0, #20]
    868c:	sxtw	x1, w0
    8690:	mov	x0, x1
    8694:	lsl	x0, x0, #1
    8698:	add	x0, x0, x1
    869c:	lsl	x0, x0, #3
    86a0:	add	x0, x2, x0
    86a4:	ldr	x2, [x0]
    86a8:	ldr	x0, [sp, #24]
    86ac:	ldr	x3, [x0]
    86b0:	ldr	x0, [sp, #24]
    86b4:	ldr	w0, [x0, #20]
    86b8:	sxtw	x1, w0
    86bc:	mov	x0, x1
    86c0:	lsl	x0, x0, #1
    86c4:	add	x0, x0, x1
    86c8:	lsl	x0, x0, #3
    86cc:	add	x0, x3, x0
    86d0:	ldr	w0, [x0, #8]
    86d4:	sxtw	x0, w0
    86d8:	lsl	x0, x0, #2
    86dc:	add	x3, x2, x0
    86e0:	ldr	x0, [sp, #24]
    86e4:	ldr	x2, [x0]
    86e8:	ldr	x0, [sp, #24]
    86ec:	ldr	w0, [x0, #20]
    86f0:	sxtw	x1, w0
    86f4:	mov	x0, x1
    86f8:	lsl	x0, x0, #1
    86fc:	add	x0, x0, x1
    8700:	lsl	x0, x0, #3
    8704:	add	x0, x2, x0
    8708:	ldr	x1, [x0]
    870c:	ldrsw	x0, [sp, #20]
    8710:	lsl	x0, x0, #2
    8714:	add	x0, x1, x0
    8718:	mov	x1, x0
    871c:	mov	x0, x3
    8720:	bl	168b4 <grub_unicode_get_comb_end>
    8724:	mov	x3, x0
    8728:	ldr	x0, [sp, #24]
    872c:	ldr	x2, [x0]
    8730:	ldr	x0, [sp, #24]
    8734:	ldr	w0, [x0, #20]
    8738:	sxtw	x1, w0
    873c:	mov	x0, x1
    8740:	lsl	x0, x0, #1
    8744:	add	x0, x0, x1
    8748:	lsl	x0, x0, #3
    874c:	add	x0, x2, x0
    8750:	ldr	x0, [x0]
    8754:	sub	x0, x3, x0
    8758:	asr	x0, x0, #2
    875c:	mov	w1, w0
    8760:	ldr	x0, [sp, #24]
    8764:	str	w1, [x0, #12]
    8768:	nop
    876c:	ldp	x29, x30, [sp], #32
    8770:	ret
    8774:	stp	x29, x30, [sp, #-48]!
    8778:	mov	x29, sp
    877c:	str	w0, [sp, #28]
    8780:	str	x1, [sp, #16]
    8784:	ldr	x0, [sp, #16]
    8788:	ldr	x3, [x0]
    878c:	ldr	x0, [sp, #16]
    8790:	ldr	w0, [x0, #20]
    8794:	and	w0, w0, #0xffff
    8798:	bfxil	w2, w0, #0, #16
    879c:	ldr	x0, [sp, #16]
    87a0:	ldr	w0, [x0, #16]
    87a4:	and	w1, w0, #0xffff
    87a8:	ldr	w0, [sp, #28]
    87ac:	and	w0, w0, #0xffff
    87b0:	add	w0, w1, w0
    87b4:	and	w0, w0, #0xffff
    87b8:	bfi	w2, w0, #16, #16
    87bc:	mov	w1, w2
    87c0:	mov	x0, x3
    87c4:	bl	8324 <grub_show_menu+0x1b4>
    87c8:	str	wzr, [sp, #44]
    87cc:	b	87f0 <grub_show_menu+0x680>
    87d0:	ldr	x0, [sp, #16]
    87d4:	ldr	x0, [x0]
    87d8:	mov	x1, x0
    87dc:	mov	w0, #0x20                  	// #32
    87e0:	bl	1077c <grub_putcode>
    87e4:	ldr	w0, [sp, #44]
    87e8:	add	w0, w0, #0x1
    87ec:	str	w0, [sp, #44]
    87f0:	ldr	x0, [sp, #16]
    87f4:	ldr	w0, [x0, #24]
    87f8:	ldr	w1, [sp, #44]
    87fc:	cmp	w1, w0
    8800:	b.le	87d0 <grub_show_menu+0x660>
    8804:	nop
    8808:	nop
    880c:	ldp	x29, x30, [sp], #48
    8810:	ret
    8814:	stp	x29, x30, [sp, #-32]!
    8818:	mov	x29, sp
    881c:	str	w0, [sp, #28]
    8820:	str	w1, [sp, #24]
    8824:	str	x2, [sp, #16]
    8828:	ldr	x0, [sp, #16]
    882c:	ldr	x2, [x0]
    8830:	ldr	x0, [sp, #16]
    8834:	ldr	w0, [x0, #20]
    8838:	and	w1, w0, #0xffff
    883c:	ldr	x0, [sp, #16]
    8840:	ldr	w0, [x0, #24]
    8844:	and	w0, w0, #0xffff
    8848:	add	w0, w1, w0
    884c:	and	w1, w0, #0xffff
    8850:	ldr	x0, [sp, #16]
    8854:	ldr	w0, [x0, #36]
    8858:	and	w0, w0, #0xffff
    885c:	add	w0, w1, w0
    8860:	and	w0, w0, #0xffff
    8864:	add	w0, w0, #0x1
    8868:	and	w0, w0, #0xffff
    886c:	bfxil	w3, w0, #0, #16
    8870:	ldr	x0, [sp, #16]
    8874:	ldr	w0, [x0, #16]
    8878:	and	w0, w0, #0xffff
    887c:	bfi	w3, w0, #16, #16
    8880:	mov	w1, w3
    8884:	mov	x0, x2
    8888:	bl	8324 <grub_show_menu+0x1b4>
    888c:	ldr	w0, [sp, #28]
    8890:	cmp	w0, #0x0
    8894:	b.eq	88bc <grub_show_menu+0x74c>  // b.none
    8898:	ldr	w0, [sp, #24]
    889c:	cmp	w0, #0x0
    88a0:	b.eq	88bc <grub_show_menu+0x74c>  // b.none
    88a4:	ldr	x0, [sp, #16]
    88a8:	ldr	x0, [x0]
    88ac:	mov	x1, x0
    88b0:	mov	w0, #0x2195                	// #8597
    88b4:	bl	1077c <grub_putcode>
    88b8:	b	8918 <grub_show_menu+0x7a8>
    88bc:	ldr	w0, [sp, #28]
    88c0:	cmp	w0, #0x0
    88c4:	b.eq	88e0 <grub_show_menu+0x770>  // b.none
    88c8:	ldr	x0, [sp, #16]
    88cc:	ldr	x0, [x0]
    88d0:	mov	x1, x0
    88d4:	mov	w0, #0x2191                	// #8593
    88d8:	bl	1077c <grub_putcode>
    88dc:	b	8918 <grub_show_menu+0x7a8>
    88e0:	ldr	w0, [sp, #24]
    88e4:	cmp	w0, #0x0
    88e8:	b.eq	8904 <grub_show_menu+0x794>  // b.none
    88ec:	ldr	x0, [sp, #16]
    88f0:	ldr	x0, [x0]
    88f4:	mov	x1, x0
    88f8:	mov	w0, #0x2193                	// #8595
    88fc:	bl	1077c <grub_putcode>
    8900:	b	8918 <grub_show_menu+0x7a8>
    8904:	ldr	x0, [sp, #16]
    8908:	ldr	x0, [x0]
    890c:	mov	x1, x0
    8910:	mov	w0, #0x20                  	// #32
    8914:	bl	1077c <grub_putcode>
    8918:	nop
    891c:	ldp	x29, x30, [sp], #32
    8920:	ret
    8924:	stp	x29, x30, [sp, #-32]!
    8928:	mov	x29, sp
    892c:	str	w0, [sp, #28]
    8930:	str	x1, [sp, #16]
    8934:	ldr	x0, [sp, #16]
    8938:	ldr	x3, [x0]
    893c:	ldr	x0, [sp, #16]
    8940:	ldr	w0, [x0, #20]
    8944:	and	w1, w0, #0xffff
    8948:	ldr	x0, [sp, #16]
    894c:	ldr	w0, [x0, #24]
    8950:	and	w0, w0, #0xffff
    8954:	add	w0, w1, w0
    8958:	and	w1, w0, #0xffff
    895c:	ldr	x0, [sp, #16]
    8960:	ldr	w0, [x0, #36]
    8964:	and	w0, w0, #0xffff
    8968:	add	w0, w1, w0
    896c:	and	w0, w0, #0xffff
    8970:	add	w0, w0, #0x1
    8974:	and	w0, w0, #0xffff
    8978:	bfxil	w2, w0, #0, #16
    897c:	ldr	x0, [sp, #16]
    8980:	ldr	w0, [x0, #16]
    8984:	and	w0, w0, #0xffff
    8988:	bfi	w2, w0, #16, #16
    898c:	mov	w1, w2
    8990:	mov	x0, x3
    8994:	bl	8324 <grub_show_menu+0x1b4>
    8998:	ldr	w0, [sp, #28]
    899c:	cmp	w0, #0x0
    89a0:	b.eq	89bc <grub_show_menu+0x84c>  // b.none
    89a4:	ldr	x0, [sp, #16]
    89a8:	ldr	x0, [x0]
    89ac:	mov	x1, x0
    89b0:	mov	w0, #0x2191                	// #8593
    89b4:	bl	1077c <grub_putcode>
    89b8:	b	89d0 <grub_show_menu+0x860>
    89bc:	ldr	x0, [sp, #16]
    89c0:	ldr	x0, [x0]
    89c4:	mov	x1, x0
    89c8:	mov	w0, #0x20                  	// #32
    89cc:	bl	1077c <grub_putcode>
    89d0:	nop
    89d4:	ldp	x29, x30, [sp], #32
    89d8:	ret
    89dc:	stp	x29, x30, [sp, #-32]!
    89e0:	mov	x29, sp
    89e4:	str	w0, [sp, #28]
    89e8:	str	x1, [sp, #16]
    89ec:	ldr	x0, [sp, #16]
    89f0:	ldr	x3, [x0]
    89f4:	ldr	x0, [sp, #16]
    89f8:	ldr	w0, [x0, #20]
    89fc:	and	w1, w0, #0xffff
    8a00:	ldr	x0, [sp, #16]
    8a04:	ldr	w0, [x0, #24]
    8a08:	and	w0, w0, #0xffff
    8a0c:	add	w0, w1, w0
    8a10:	and	w1, w0, #0xffff
    8a14:	ldr	x0, [sp, #16]
    8a18:	ldr	w0, [x0, #36]
    8a1c:	and	w0, w0, #0xffff
    8a20:	add	w0, w1, w0
    8a24:	and	w0, w0, #0xffff
    8a28:	add	w0, w0, #0x1
    8a2c:	and	w0, w0, #0xffff
    8a30:	bfxil	w2, w0, #0, #16
    8a34:	ldr	x0, [sp, #16]
    8a38:	ldr	w0, [x0, #16]
    8a3c:	and	w1, w0, #0xffff
    8a40:	ldr	x0, [sp, #16]
    8a44:	ldr	w0, [x0, #12]
    8a48:	and	w0, w0, #0xffff
    8a4c:	add	w0, w1, w0
    8a50:	and	w0, w0, #0xffff
    8a54:	sub	w0, w0, #0x1
    8a58:	and	w0, w0, #0xffff
    8a5c:	bfi	w2, w0, #16, #16
    8a60:	mov	w1, w2
    8a64:	mov	x0, x3
    8a68:	bl	8324 <grub_show_menu+0x1b4>
    8a6c:	ldr	w0, [sp, #28]
    8a70:	cmp	w0, #0x0
    8a74:	b.eq	8a90 <grub_show_menu+0x920>  // b.none
    8a78:	ldr	x0, [sp, #16]
    8a7c:	ldr	x0, [x0]
    8a80:	mov	x1, x0
    8a84:	mov	w0, #0x2193                	// #8595
    8a88:	bl	1077c <grub_putcode>
    8a8c:	b	8aa4 <grub_show_menu+0x934>
    8a90:	ldr	x0, [sp, #16]
    8a94:	ldr	x0, [x0]
    8a98:	mov	x1, x0
    8a9c:	mov	w0, #0x20                  	// #32
    8aa0:	bl	1077c <grub_putcode>
    8aa4:	nop
    8aa8:	ldp	x29, x30, [sp], #32
    8aac:	ret
    8ab0:	sub	sp, sp, #0xb0
    8ab4:	stp	x29, x30, [sp, #16]
    8ab8:	add	x29, sp, #0x10
    8abc:	stp	x19, x20, [sp, #32]
    8ac0:	str	x21, [sp, #48]
    8ac4:	str	x0, [sp, #104]
    8ac8:	str	x1, [sp, #96]
    8acc:	str	w2, [sp, #92]
    8ad0:	str	w3, [sp, #88]
    8ad4:	str	w4, [sp, #84]
    8ad8:	str	w5, [sp, #80]
    8adc:	str	w6, [sp, #76]
    8ae0:	str	wzr, [sp, #172]
    8ae4:	str	wzr, [sp, #168]
    8ae8:	ldr	x0, [sp, #96]
    8aec:	ldr	w0, [x0, #8]
    8af0:	str	w0, [sp, #164]
    8af4:	ldr	x0, [sp, #104]
    8af8:	ldr	x0, [x0]
    8afc:	str	x0, [sp, #152]
    8b00:	str	wzr, [sp, #160]
    8b04:	b	8b3c <grub_show_menu+0x9cc>
    8b08:	ldr	x1, [sp, #96]
    8b0c:	ldr	x0, [sp, #152]
    8b10:	bl	8574 <grub_show_menu+0x404>
    8b14:	mov	w1, w0
    8b18:	ldr	w0, [sp, #164]
    8b1c:	add	w0, w0, w1
    8b20:	str	w0, [sp, #164]
    8b24:	ldr	w0, [sp, #160]
    8b28:	add	w0, w0, #0x1
    8b2c:	str	w0, [sp, #160]
    8b30:	ldr	x0, [sp, #152]
    8b34:	add	x0, x0, #0x18
    8b38:	str	x0, [sp, #152]
    8b3c:	ldr	x0, [sp, #104]
    8b40:	ldr	w0, [x0, #20]
    8b44:	ldr	w1, [sp, #160]
    8b48:	cmp	w1, w0
    8b4c:	b.lt	8b08 <grub_show_menu+0x998>  // b.tstop
    8b50:	ldr	x0, [sp, #104]
    8b54:	ldr	x2, [x0]
    8b58:	ldr	x0, [sp, #104]
    8b5c:	ldr	w0, [x0, #20]
    8b60:	sxtw	x1, w0
    8b64:	mov	x0, x1
    8b68:	lsl	x0, x0, #1
    8b6c:	add	x0, x0, x1
    8b70:	lsl	x0, x0, #3
    8b74:	add	x0, x2, x0
    8b78:	str	x0, [sp, #152]
    8b7c:	ldr	x0, [sp, #152]
    8b80:	ldr	x3, [x0]
    8b84:	ldr	x0, [sp, #152]
    8b88:	ldr	x1, [x0]
    8b8c:	ldr	x0, [sp, #104]
    8b90:	ldr	w0, [x0, #12]
    8b94:	sxtw	x0, w0
    8b98:	lsl	x0, x0, #2
    8b9c:	add	x1, x1, x0
    8ba0:	ldr	x0, [sp, #96]
    8ba4:	ldr	x0, [x0]
    8ba8:	mov	x2, x0
    8bac:	mov	x0, x3
    8bb0:	bl	cc5c <grub_getstringwidth>
    8bb4:	str	x0, [sp, #128]
    8bb8:	ldr	x0, [sp, #96]
    8bbc:	ldr	w0, [x0, #24]
    8bc0:	mov	w0, w0
    8bc4:	ldr	x1, [sp, #128]
    8bc8:	udiv	x0, x1, x0
    8bcc:	mov	w1, w0
    8bd0:	ldr	w0, [sp, #164]
    8bd4:	add	w0, w1, w0
    8bd8:	str	w0, [sp, #164]
    8bdc:	ldr	x0, [sp, #96]
    8be0:	ldr	w0, [x0, #24]
    8be4:	mov	w1, w0
    8be8:	ldr	x0, [sp, #128]
    8bec:	udiv	x2, x0, x1
    8bf0:	mul	x1, x2, x1
    8bf4:	sub	x0, x0, x1
    8bf8:	cmp	x0, #0x0
    8bfc:	b.ne	8c30 <grub_show_menu+0xac0>  // b.any
    8c00:	ldr	x0, [sp, #128]
    8c04:	cmp	x0, #0x0
    8c08:	b.eq	8c30 <grub_show_menu+0xac0>  // b.none
    8c0c:	ldr	x0, [sp, #104]
    8c10:	ldr	w1, [x0, #12]
    8c14:	ldr	x0, [sp, #152]
    8c18:	ldr	w0, [x0, #8]
    8c1c:	cmp	w1, w0
    8c20:	b.ne	8c30 <grub_show_menu+0xac0>  // b.any
    8c24:	ldr	w0, [sp, #164]
    8c28:	sub	w0, w0, #0x1
    8c2c:	str	w0, [sp, #164]
    8c30:	ldr	w0, [sp, #164]
    8c34:	cmp	w0, #0x0
    8c38:	b.lt	8c50 <grub_show_menu+0xae0>  // b.tstop
    8c3c:	ldr	x0, [sp, #96]
    8c40:	ldr	w0, [x0, #12]
    8c44:	ldr	w1, [sp, #164]
    8c48:	cmp	w1, w0
    8c4c:	b.lt	8cb8 <grub_show_menu+0xb48>  // b.tstop
    8c50:	ldr	w0, [sp, #164]
    8c54:	cmp	w0, #0x0
    8c58:	b.ge	8c6c <grub_show_menu+0xafc>  // b.tcont
    8c5c:	ldr	w0, [sp, #164]
    8c60:	neg	w0, w0
    8c64:	str	w0, [sp, #148]
    8c68:	b	8c84 <grub_show_menu+0xb14>
    8c6c:	ldr	x0, [sp, #96]
    8c70:	ldr	w0, [x0, #12]
    8c74:	sub	w1, w0, #0x1
    8c78:	ldr	w0, [sp, #164]
    8c7c:	sub	w0, w1, w0
    8c80:	str	w0, [sp, #148]
    8c84:	ldr	x0, [sp, #96]
    8c88:	ldr	w1, [x0, #8]
    8c8c:	ldr	w0, [sp, #148]
    8c90:	add	w1, w1, w0
    8c94:	ldr	x0, [sp, #96]
    8c98:	str	w1, [x0, #8]
    8c9c:	str	wzr, [sp, #92]
    8ca0:	mov	w0, #0x1                   	// #1
    8ca4:	str	w0, [sp, #84]
    8ca8:	mov	w0, #0x1                   	// #1
    8cac:	str	w0, [sp, #80]
    8cb0:	mov	w0, #0x2                   	// #2
    8cb4:	str	w0, [sp, #76]
    8cb8:	ldr	x0, [sp, #96]
    8cbc:	ldr	x0, [x0]
    8cc0:	mov	w1, #0x0                   	// #0
    8cc4:	bl	8354 <grub_show_menu+0x1e4>
    8cc8:	ldr	w0, [sp, #76]
    8ccc:	cmp	w0, #0x0
    8cd0:	b.eq	90a0 <grub_show_menu+0xf30>  // b.none
    8cd4:	ldr	x0, [sp, #96]
    8cd8:	ldr	w0, [x0, #8]
    8cdc:	str	w0, [sp, #164]
    8ce0:	str	wzr, [sp, #160]
    8ce4:	ldr	x0, [sp, #104]
    8ce8:	ldr	x0, [x0]
    8cec:	str	x0, [sp, #152]
    8cf0:	ldr	x1, [sp, #96]
    8cf4:	ldr	x0, [sp, #152]
    8cf8:	bl	8574 <grub_show_menu+0x404>
    8cfc:	str	w0, [sp, #124]
    8d00:	ldr	w1, [sp, #164]
    8d04:	ldr	w0, [sp, #124]
    8d08:	add	w0, w1, w0
    8d0c:	cmp	w0, #0x0
    8d10:	b.gt	8d40 <grub_show_menu+0xbd0>
    8d14:	ldr	w0, [sp, #160]
    8d18:	add	w0, w0, #0x1
    8d1c:	str	w0, [sp, #160]
    8d20:	ldr	x0, [sp, #152]
    8d24:	add	x0, x0, #0x18
    8d28:	str	x0, [sp, #152]
    8d2c:	ldr	w1, [sp, #164]
    8d30:	ldr	w0, [sp, #124]
    8d34:	add	w0, w1, w0
    8d38:	str	w0, [sp, #164]
    8d3c:	b	8cf0 <grub_show_menu+0xb80>
    8d40:	nop
    8d44:	ldr	w0, [sp, #164]
    8d48:	cmp	w0, #0x0
    8d4c:	b.lt	8d5c <grub_show_menu+0xbec>  // b.tstop
    8d50:	ldr	w0, [sp, #160]
    8d54:	cmp	w0, #0x0
    8d58:	b.le	8d64 <grub_show_menu+0xbf4>
    8d5c:	mov	w0, #0x1                   	// #1
    8d60:	str	w0, [sp, #172]
    8d64:	ldr	x0, [sp, #104]
    8d68:	ldr	x2, [x0]
    8d6c:	ldr	x0, [sp, #104]
    8d70:	ldr	w0, [x0, #8]
    8d74:	sxtw	x1, w0
    8d78:	mov	x0, x1
    8d7c:	lsl	x0, x0, #1
    8d80:	add	x0, x0, x1
    8d84:	lsl	x0, x0, #3
    8d88:	add	x0, x2, x0
    8d8c:	ldr	x1, [sp, #152]
    8d90:	cmp	x1, x0
    8d94:	b.cs	9030 <grub_show_menu+0xec0>  // b.hs, b.nlast
    8d98:	ldr	x0, [sp, #152]
    8d9c:	ldr	x1, [x0, #16]
    8da0:	ldr	x0, [sp, #104]
    8da4:	ldr	x0, [x0, #40]
    8da8:	ldr	x2, [sp, #96]
    8dac:	sub	x0, x2, x0
    8db0:	asr	x2, x0, #3
    8db4:	mov	x0, #0x6db7                	// #28087
    8db8:	movk	x0, #0xb6db, lsl #16
    8dbc:	movk	x0, #0xdb6d, lsl #32
    8dc0:	movk	x0, #0x6db6, lsl #48
    8dc4:	mul	x0, x2, x0
    8dc8:	lsl	x0, x0, #3
    8dcc:	add	x0, x1, x0
    8dd0:	str	x0, [sp, #112]
    8dd4:	ldr	x0, [sp, #112]
    8dd8:	ldr	x0, [x0]
    8ddc:	cmp	x0, #0x0
    8de0:	b.ne	8e08 <grub_show_menu+0xc98>  // b.any
    8de4:	ldr	x0, [sp, #152]
    8de8:	ldr	w0, [x0, #8]
    8dec:	add	w0, w0, #0x1
    8df0:	sxtw	x0, w0
    8df4:	lsl	x0, x0, #2
    8df8:	bl	0 <grub_zalloc>
    8dfc:	mov	x1, x0
    8e00:	ldr	x0, [sp, #112]
    8e04:	str	x1, [x0]
    8e08:	ldr	w1, [sp, #160]
    8e0c:	ldr	w0, [sp, #92]
    8e10:	cmp	w1, w0
    8e14:	b.eq	8e68 <grub_show_menu+0xcf8>  // b.none
    8e18:	ldr	x0, [sp, #104]
    8e1c:	ldr	x2, [x0]
    8e20:	ldr	x0, [sp, #104]
    8e24:	ldr	w0, [x0, #20]
    8e28:	sxtw	x1, w0
    8e2c:	mov	x0, x1
    8e30:	lsl	x0, x0, #1
    8e34:	add	x0, x0, x1
    8e38:	lsl	x0, x0, #3
    8e3c:	add	x0, x2, x0
    8e40:	ldr	x1, [sp, #152]
    8e44:	cmp	x1, x0
    8e48:	b.eq	8e68 <grub_show_menu+0xcf8>  // b.none
    8e4c:	ldr	w1, [sp, #160]
    8e50:	ldr	w0, [sp, #92]
    8e54:	cmp	w1, w0
    8e58:	b.le	8f60 <grub_show_menu+0xdf0>
    8e5c:	ldr	w0, [sp, #76]
    8e60:	cmp	w0, #0x2
    8e64:	b.ne	8f60 <grub_show_menu+0xdf0>  // b.any
    8e68:	ldr	x0, [sp, #96]
    8e6c:	ldr	x2, [x0]
    8e70:	ldr	x0, [sp, #96]
    8e74:	ldr	w0, [x0, #20]
    8e78:	and	w0, w0, #0xffff
    8e7c:	bfxil	w21, w0, #0, #16
    8e80:	ldr	w1, [sp, #164]
    8e84:	ldr	w0, [sp, #164]
    8e88:	mov	w3, #0x0                   	// #0
    8e8c:	cmp	w1, #0x0
    8e90:	csel	w0, w0, w3, ge  // ge = tcont
    8e94:	and	w1, w0, #0xffff
    8e98:	ldr	x0, [sp, #96]
    8e9c:	ldr	w0, [x0, #16]
    8ea0:	and	w0, w0, #0xffff
    8ea4:	add	w0, w1, w0
    8ea8:	and	w0, w0, #0xffff
    8eac:	bfi	w21, w0, #16, #16
    8eb0:	mov	w1, w21
    8eb4:	mov	x0, x2
    8eb8:	bl	8324 <grub_show_menu+0x1b4>
    8ebc:	ldr	x0, [sp, #152]
    8ec0:	ldr	x8, [x0]
    8ec4:	ldr	x0, [sp, #152]
    8ec8:	ldr	x1, [x0]
    8ecc:	ldr	x0, [sp, #152]
    8ed0:	ldr	w0, [x0, #8]
    8ed4:	sxtw	x0, w0
    8ed8:	lsl	x0, x0, #2
    8edc:	add	x9, x1, x0
    8ee0:	ldr	x0, [sp, #96]
    8ee4:	ldr	w10, [x0, #20]
    8ee8:	ldr	x0, [sp, #96]
    8eec:	ldr	w11, [x0, #40]
    8ef0:	ldr	x0, [sp, #96]
    8ef4:	ldr	x4, [x0]
    8ef8:	ldr	w0, [sp, #164]
    8efc:	cmp	w0, #0x0
    8f00:	b.ge	8f10 <grub_show_menu+0xda0>  // b.tcont
    8f04:	ldr	w0, [sp, #164]
    8f08:	neg	w0, w0
    8f0c:	b	8f14 <grub_show_menu+0xda4>
    8f10:	mov	w0, #0x0                   	// #0
    8f14:	ldr	x1, [sp, #96]
    8f18:	ldr	w2, [x1, #12]
    8f1c:	ldr	w3, [sp, #164]
    8f20:	ldr	w1, [sp, #164]
    8f24:	mov	w5, #0x0                   	// #0
    8f28:	cmp	w3, #0x0
    8f2c:	csel	w1, w1, w5, ge  // ge = tcont
    8f30:	sub	w2, w2, w1
    8f34:	ldr	x1, [sp, #112]
    8f38:	ldr	x1, [x1]
    8f3c:	str	x1, [sp]
    8f40:	mov	w7, #0x5c                  	// #92
    8f44:	mov	w6, w2
    8f48:	mov	w5, w0
    8f4c:	mov	w3, w11
    8f50:	mov	w2, w10
    8f54:	mov	x1, x9
    8f58:	mov	x0, x8
    8f5c:	bl	11ac8 <grub_print_ucs4_menu>
    8f60:	ldr	x1, [sp, #96]
    8f64:	ldr	x0, [sp, #152]
    8f68:	bl	8574 <grub_show_menu+0x404>
    8f6c:	mov	w1, w0
    8f70:	ldr	w0, [sp, #164]
    8f74:	add	w0, w0, w1
    8f78:	str	w0, [sp, #164]
    8f7c:	ldr	x0, [sp, #96]
    8f80:	ldr	w0, [x0, #12]
    8f84:	ldr	w1, [sp, #164]
    8f88:	cmp	w1, w0
    8f8c:	b.lt	8fb0 <grub_show_menu+0xe40>  // b.tstop
    8f90:	ldr	w0, [sp, #160]
    8f94:	add	w1, w0, #0x1
    8f98:	ldr	x0, [sp, #104]
    8f9c:	ldr	w0, [x0, #8]
    8fa0:	cmp	w1, w0
    8fa4:	b.ge	8fb0 <grub_show_menu+0xe40>  // b.tcont
    8fa8:	mov	w0, #0x1                   	// #1
    8fac:	str	w0, [sp, #168]
    8fb0:	ldr	x0, [sp, #152]
    8fb4:	add	x0, x0, #0x18
    8fb8:	str	x0, [sp, #152]
    8fbc:	ldr	w0, [sp, #160]
    8fc0:	add	w0, w0, #0x1
    8fc4:	str	w0, [sp, #160]
    8fc8:	ldr	w0, [sp, #76]
    8fcc:	cmp	w0, #0x2
    8fd0:	b.ne	9018 <grub_show_menu+0xea8>  // b.any
    8fd4:	ldr	x0, [sp, #104]
    8fd8:	ldr	w0, [x0, #8]
    8fdc:	ldr	w1, [sp, #160]
    8fe0:	cmp	w1, w0
    8fe4:	b.ne	9018 <grub_show_menu+0xea8>  // b.any
    8fe8:	b	9004 <grub_show_menu+0xe94>
    8fec:	ldr	x1, [sp, #96]
    8ff0:	ldr	w0, [sp, #164]
    8ff4:	bl	8774 <grub_show_menu+0x604>
    8ff8:	ldr	w0, [sp, #164]
    8ffc:	add	w0, w0, #0x1
    9000:	str	w0, [sp, #164]
    9004:	ldr	x0, [sp, #96]
    9008:	ldr	w0, [x0, #12]
    900c:	ldr	w1, [sp, #164]
    9010:	cmp	w1, w0
    9014:	b.lt	8fec <grub_show_menu+0xe7c>  // b.tstop
    9018:	ldr	x0, [sp, #96]
    901c:	ldr	w0, [x0, #12]
    9020:	ldr	w1, [sp, #164]
    9024:	cmp	w1, w0
    9028:	b.lt	8d64 <grub_show_menu+0xbf4>  // b.tstop
    902c:	b	9034 <grub_show_menu+0xec4>
    9030:	nop
    9034:	ldr	x0, [sp, #96]
    9038:	ldr	w0, [x0, #12]
    903c:	cmp	w0, #0x1
    9040:	b.ne	9070 <grub_show_menu+0xf00>  // b.any
    9044:	ldr	w0, [sp, #84]
    9048:	cmp	w0, #0x0
    904c:	b.ne	905c <grub_show_menu+0xeec>  // b.any
    9050:	ldr	w0, [sp, #80]
    9054:	cmp	w0, #0x0
    9058:	b.eq	90a0 <grub_show_menu+0xf30>  // b.none
    905c:	ldr	x2, [sp, #96]
    9060:	ldr	w1, [sp, #168]
    9064:	ldr	w0, [sp, #172]
    9068:	bl	8814 <grub_show_menu+0x6a4>
    906c:	b	90a0 <grub_show_menu+0xf30>
    9070:	ldr	w0, [sp, #84]
    9074:	cmp	w0, #0x0
    9078:	b.eq	9088 <grub_show_menu+0xf18>  // b.none
    907c:	ldr	x1, [sp, #96]
    9080:	ldr	w0, [sp, #172]
    9084:	bl	8924 <grub_show_menu+0x7b4>
    9088:	ldr	w0, [sp, #80]
    908c:	cmp	w0, #0x0
    9090:	b.eq	90a0 <grub_show_menu+0xf30>  // b.none
    9094:	ldr	x1, [sp, #96]
    9098:	ldr	w0, [sp, #168]
    909c:	bl	89dc <grub_show_menu+0x86c>
    90a0:	ldr	x0, [sp, #104]
    90a4:	ldr	x2, [x0]
    90a8:	ldr	x0, [sp, #104]
    90ac:	ldr	w0, [x0, #20]
    90b0:	sxtw	x1, w0
    90b4:	mov	x0, x1
    90b8:	lsl	x0, x0, #1
    90bc:	add	x0, x0, x1
    90c0:	lsl	x0, x0, #3
    90c4:	add	x0, x2, x0
    90c8:	ldr	x1, [x0, #16]
    90cc:	ldr	x0, [sp, #104]
    90d0:	ldr	x0, [x0, #40]
    90d4:	ldr	x2, [sp, #96]
    90d8:	sub	x0, x2, x0
    90dc:	asr	x2, x0, #3
    90e0:	mov	x0, #0x6db7                	// #28087
    90e4:	movk	x0, #0xb6db, lsl #16
    90e8:	movk	x0, #0xdb6d, lsl #32
    90ec:	movk	x0, #0x6db6, lsl #48
    90f0:	mul	x0, x2, x0
    90f4:	lsl	x0, x0, #3
    90f8:	add	x0, x1, x0
    90fc:	ldr	x0, [x0]
    9100:	cmp	x0, #0x0
    9104:	b.eq	93ac <grub_show_menu+0x123c>  // b.none
    9108:	ldr	x0, [sp, #104]
    910c:	ldr	x2, [x0]
    9110:	ldr	x0, [sp, #104]
    9114:	ldr	w0, [x0, #20]
    9118:	sxtw	x1, w0
    911c:	mov	x0, x1
    9120:	lsl	x0, x0, #1
    9124:	add	x0, x0, x1
    9128:	lsl	x0, x0, #3
    912c:	add	x0, x2, x0
    9130:	ldr	x1, [x0, #16]
    9134:	ldr	x0, [sp, #104]
    9138:	ldr	x0, [x0, #40]
    913c:	ldr	x2, [sp, #96]
    9140:	sub	x0, x2, x0
    9144:	asr	x2, x0, #3
    9148:	mov	x0, #0x6db7                	// #28087
    914c:	movk	x0, #0xb6db, lsl #16
    9150:	movk	x0, #0xdb6d, lsl #32
    9154:	movk	x0, #0x6db6, lsl #48
    9158:	mul	x0, x2, x0
    915c:	lsl	x0, x0, #3
    9160:	add	x0, x1, x0
    9164:	ldr	x1, [x0]
    9168:	ldr	x0, [sp, #104]
    916c:	ldr	w0, [x0, #12]
    9170:	sxtw	x0, w0
    9174:	lsl	x0, x0, #2
    9178:	add	x0, x1, x0
    917c:	str	x0, [sp, #136]
    9180:	b	91a8 <grub_show_menu+0x1038>
    9184:	ldr	x0, [sp, #136]
    9188:	ldrb	w0, [x0]
    918c:	and	w0, w0, #0x1
    9190:	and	w0, w0, #0xff
    9194:	cmp	w0, #0x0
    9198:	b.ne	9218 <grub_show_menu+0x10a8>  // b.any
    919c:	ldr	x0, [sp, #136]
    91a0:	sub	x0, x0, #0x4
    91a4:	str	x0, [sp, #136]
    91a8:	ldr	x0, [sp, #104]
    91ac:	ldr	x2, [x0]
    91b0:	ldr	x0, [sp, #104]
    91b4:	ldr	w0, [x0, #20]
    91b8:	sxtw	x1, w0
    91bc:	mov	x0, x1
    91c0:	lsl	x0, x0, #1
    91c4:	add	x0, x0, x1
    91c8:	lsl	x0, x0, #3
    91cc:	add	x0, x2, x0
    91d0:	ldr	x1, [x0, #16]
    91d4:	ldr	x0, [sp, #104]
    91d8:	ldr	x0, [x0, #40]
    91dc:	ldr	x2, [sp, #96]
    91e0:	sub	x0, x2, x0
    91e4:	asr	x2, x0, #3
    91e8:	mov	x0, #0x6db7                	// #28087
    91ec:	movk	x0, #0xb6db, lsl #16
    91f0:	movk	x0, #0xdb6d, lsl #32
    91f4:	movk	x0, #0x6db6, lsl #48
    91f8:	mul	x0, x2, x0
    91fc:	lsl	x0, x0, #3
    9200:	add	x0, x1, x0
    9204:	ldr	x0, [x0]
    9208:	ldr	x1, [sp, #136]
    920c:	cmp	x1, x0
    9210:	b.cs	9184 <grub_show_menu+0x1014>  // b.hs, b.nlast
    9214:	b	921c <grub_show_menu+0x10ac>
    9218:	nop
    921c:	ldr	x0, [sp, #96]
    9220:	ldr	w0, [x0, #8]
    9224:	str	w0, [sp, #164]
    9228:	str	wzr, [sp, #160]
    922c:	b	9274 <grub_show_menu+0x1104>
    9230:	ldr	x0, [sp, #104]
    9234:	ldr	x2, [x0]
    9238:	ldrsw	x1, [sp, #160]
    923c:	mov	x0, x1
    9240:	lsl	x0, x0, #1
    9244:	add	x0, x0, x1
    9248:	lsl	x0, x0, #3
    924c:	add	x0, x2, x0
    9250:	ldr	x1, [sp, #96]
    9254:	bl	8574 <grub_show_menu+0x404>
    9258:	mov	w1, w0
    925c:	ldr	w0, [sp, #164]
    9260:	add	w0, w0, w1
    9264:	str	w0, [sp, #164]
    9268:	ldr	w0, [sp, #160]
    926c:	add	w0, w0, #0x1
    9270:	str	w0, [sp, #160]
    9274:	ldr	x0, [sp, #104]
    9278:	ldr	w0, [x0, #20]
    927c:	ldr	w1, [sp, #160]
    9280:	cmp	w1, w0
    9284:	b.lt	9230 <grub_show_menu+0x10c0>  // b.tstop
    9288:	ldr	x0, [sp, #104]
    928c:	ldr	x2, [x0]
    9290:	ldr	x0, [sp, #104]
    9294:	ldr	w0, [x0, #20]
    9298:	sxtw	x1, w0
    929c:	mov	x0, x1
    92a0:	lsl	x0, x0, #1
    92a4:	add	x0, x0, x1
    92a8:	lsl	x0, x0, #3
    92ac:	add	x0, x2, x0
    92b0:	ldr	x1, [x0, #16]
    92b4:	ldr	x0, [sp, #104]
    92b8:	ldr	x0, [x0, #40]
    92bc:	ldr	x2, [sp, #96]
    92c0:	sub	x0, x2, x0
    92c4:	asr	x2, x0, #3
    92c8:	mov	x0, #0x6db7                	// #28087
    92cc:	movk	x0, #0xb6db, lsl #16
    92d0:	movk	x0, #0xdb6d, lsl #32
    92d4:	movk	x0, #0x6db6, lsl #48
    92d8:	mul	x0, x2, x0
    92dc:	lsl	x0, x0, #3
    92e0:	add	x0, x1, x0
    92e4:	ldr	x0, [x0]
    92e8:	ldr	x1, [sp, #136]
    92ec:	cmp	x1, x0
    92f0:	b.cc	9368 <grub_show_menu+0x11f8>  // b.lo, b.ul, b.last
    92f4:	ldr	x0, [sp, #96]
    92f8:	ldr	x2, [x0]
    92fc:	ldr	x0, [sp, #136]
    9300:	ldrh	w0, [x0]
    9304:	ubfx	x0, x0, #1, #15
    9308:	and	w0, w0, #0xffff
    930c:	mov	w1, w0
    9310:	ldr	x0, [sp, #96]
    9314:	ldr	w0, [x0, #20]
    9318:	and	w0, w0, #0xffff
    931c:	add	w0, w1, w0
    9320:	and	w0, w0, #0xffff
    9324:	bfxil	w20, w0, #0, #16
    9328:	ldr	x0, [sp, #136]
    932c:	ldrh	w1, [x0, #2]
    9330:	ldr	w0, [sp, #164]
    9334:	and	w0, w0, #0xffff
    9338:	add	w0, w1, w0
    933c:	and	w1, w0, #0xffff
    9340:	ldr	x0, [sp, #96]
    9344:	ldr	w0, [x0, #16]
    9348:	and	w0, w0, #0xffff
    934c:	add	w0, w1, w0
    9350:	and	w0, w0, #0xffff
    9354:	bfi	w20, w0, #16, #16
    9358:	mov	w1, w20
    935c:	mov	x0, x2
    9360:	bl	8324 <grub_show_menu+0x1b4>
    9364:	b	93ac <grub_show_menu+0x123c>
    9368:	ldr	x0, [sp, #96]
    936c:	ldr	x2, [x0]
    9370:	ldr	x0, [sp, #96]
    9374:	ldr	w0, [x0, #20]
    9378:	and	w0, w0, #0xffff
    937c:	bfxil	w19, w0, #0, #16
    9380:	ldr	x0, [sp, #96]
    9384:	ldr	w0, [x0, #16]
    9388:	and	w1, w0, #0xffff
    938c:	ldr	w0, [sp, #164]
    9390:	and	w0, w0, #0xffff
    9394:	add	w0, w1, w0
    9398:	and	w0, w0, #0xffff
    939c:	bfi	w19, w0, #16, #16
    93a0:	mov	w1, w19
    93a4:	mov	x0, x2
    93a8:	bl	8324 <grub_show_menu+0x1b4>
    93ac:	ldr	x0, [sp, #96]
    93b0:	ldr	x0, [x0]
    93b4:	mov	w1, #0x1                   	// #1
    93b8:	bl	8354 <grub_show_menu+0x1e4>
    93bc:	ldr	x0, [sp, #96]
    93c0:	ldr	x0, [x0]
    93c4:	bl	82ec <grub_show_menu+0x17c>
    93c8:	nop
    93cc:	ldp	x19, x20, [sp, #32]
    93d0:	ldr	x21, [sp, #48]
    93d4:	ldp	x29, x30, [sp, #16]
    93d8:	add	sp, sp, #0xb0
    93dc:	ret
    93e0:	stp	x29, x30, [sp, #-64]!
    93e4:	mov	x29, sp
    93e8:	str	x0, [sp, #40]
    93ec:	str	w1, [sp, #36]
    93f0:	str	w2, [sp, #32]
    93f4:	str	w3, [sp, #28]
    93f8:	str	w4, [sp, #24]
    93fc:	str	w5, [sp, #20]
    9400:	str	wzr, [sp, #60]
    9404:	b	9454 <grub_show_menu+0x12e4>
    9408:	ldr	x0, [sp, #40]
    940c:	ldr	x2, [x0, #40]
    9410:	ldr	w1, [sp, #60]
    9414:	mov	x0, x1
    9418:	lsl	x0, x0, #3
    941c:	sub	x0, x0, x1
    9420:	lsl	x0, x0, #3
    9424:	add	x0, x2, x0
    9428:	ldr	w6, [sp, #20]
    942c:	ldr	w5, [sp, #24]
    9430:	ldr	w4, [sp, #28]
    9434:	ldr	w3, [sp, #32]
    9438:	ldr	w2, [sp, #36]
    943c:	mov	x1, x0
    9440:	ldr	x0, [sp, #40]
    9444:	bl	8ab0 <grub_show_menu+0x940>
    9448:	ldr	w0, [sp, #60]
    944c:	add	w0, w0, #0x1
    9450:	str	w0, [sp, #60]
    9454:	ldr	x0, [sp, #40]
    9458:	ldr	w0, [x0, #48]
    945c:	ldr	w1, [sp, #60]
    9460:	cmp	w1, w0
    9464:	b.cc	9408 <grub_show_menu+0x1298>  // b.lo, b.ul, b.last
    9468:	nop
    946c:	nop
    9470:	ldp	x29, x30, [sp], #64
    9474:	ret
    9478:	stp	x29, x30, [sp, #-144]!
    947c:	mov	x29, sp
    9480:	str	x19, [sp, #16]
    9484:	str	x0, [sp, #56]
    9488:	str	x1, [sp, #48]
    948c:	str	w2, [sp, #44]
    9490:	ldr	x0, [sp, #56]
    9494:	ldr	w0, [x0, #8]
    9498:	str	w0, [sp, #140]
    949c:	str	wzr, [sp, #136]
    94a0:	str	wzr, [sp, #132]
    94a4:	b	94fc <grub_show_menu+0x138c>
    94a8:	ldr	x0, [sp, #56]
    94ac:	ldr	x2, [x0, #40]
    94b0:	ldr	w1, [sp, #132]
    94b4:	mov	x0, x1
    94b8:	lsl	x0, x0, #3
    94bc:	sub	x0, x0, x1
    94c0:	lsl	x0, x0, #3
    94c4:	add	x0, x2, x0
    94c8:	str	wzr, [x0, #48]
    94cc:	ldr	x0, [sp, #56]
    94d0:	ldr	x2, [x0, #40]
    94d4:	ldr	w1, [sp, #132]
    94d8:	mov	x0, x1
    94dc:	lsl	x0, x0, #3
    94e0:	sub	x0, x0, x1
    94e4:	lsl	x0, x0, #3
    94e8:	add	x0, x2, x0
    94ec:	str	wzr, [x0, #52]
    94f0:	ldr	w0, [sp, #132]
    94f4:	add	w0, w0, #0x1
    94f8:	str	w0, [sp, #132]
    94fc:	ldr	x0, [sp, #56]
    9500:	ldr	w0, [x0, #48]
    9504:	ldr	w1, [sp, #132]
    9508:	cmp	w1, w0
    950c:	b.cc	94a8 <grub_show_menu+0x1338>  // b.lo, b.ul, b.last
    9510:	b	9c8c <grub_show_menu+0x1b1c>
    9514:	ldr	x0, [sp, #48]
    9518:	ldrb	w0, [x0]
    951c:	cmp	w0, #0xa
    9520:	b.ne	9880 <grub_show_menu+0x1710>  // b.any
    9524:	ldr	x0, [sp, #56]
    9528:	ldr	w0, [x0, #8]
    952c:	add	w1, w0, #0x1
    9530:	ldr	x0, [sp, #56]
    9534:	str	w1, [x0, #8]
    9538:	ldr	x0, [sp, #56]
    953c:	ldr	x2, [x0]
    9540:	ldr	x0, [sp, #56]
    9544:	ldr	w0, [x0, #8]
    9548:	sxtw	x1, w0
    954c:	mov	x0, x1
    9550:	lsl	x0, x0, #1
    9554:	add	x0, x0, x1
    9558:	lsl	x0, x0, #3
    955c:	mov	x1, x0
    9560:	mov	x0, x2
    9564:	bl	0 <grub_realloc>
    9568:	mov	x1, x0
    956c:	ldr	x0, [sp, #56]
    9570:	str	x1, [x0]
    9574:	ldr	x0, [sp, #56]
    9578:	ldr	x0, [x0]
    957c:	cmp	x0, #0x0
    9580:	b.ne	958c <grub_show_menu+0x141c>  // b.any
    9584:	mov	w0, #0x0                   	// #0
    9588:	b	9d5c <grub_show_menu+0x1bec>
    958c:	ldr	x0, [sp, #56]
    9590:	ldr	w1, [x0, #20]
    9594:	ldr	x0, [sp, #56]
    9598:	ldr	w0, [x0, #8]
    959c:	sub	w0, w0, #0x2
    95a0:	cmp	w1, w0
    95a4:	b.ge	963c <grub_show_menu+0x14cc>  // b.tcont
    95a8:	ldr	x0, [sp, #56]
    95ac:	ldr	x2, [x0]
    95b0:	ldr	x0, [sp, #56]
    95b4:	ldr	w0, [x0, #20]
    95b8:	sxtw	x1, w0
    95bc:	mov	x0, x1
    95c0:	lsl	x0, x0, #1
    95c4:	add	x0, x0, x1
    95c8:	lsl	x0, x0, #3
    95cc:	add	x0, x0, #0x30
    95d0:	add	x3, x2, x0
    95d4:	ldr	x0, [sp, #56]
    95d8:	ldr	x2, [x0]
    95dc:	ldr	x0, [sp, #56]
    95e0:	ldr	w0, [x0, #20]
    95e4:	sxtw	x0, w0
    95e8:	add	x1, x0, #0x1
    95ec:	mov	x0, x1
    95f0:	lsl	x0, x0, #1
    95f4:	add	x0, x0, x1
    95f8:	lsl	x0, x0, #3
    95fc:	add	x4, x2, x0
    9600:	ldr	x0, [sp, #56]
    9604:	ldr	w1, [x0, #8]
    9608:	ldr	x0, [sp, #56]
    960c:	ldr	w0, [x0, #20]
    9610:	sub	w0, w1, w0
    9614:	sub	w0, w0, #0x2
    9618:	sxtw	x1, w0
    961c:	mov	x0, x1
    9620:	lsl	x0, x0, #1
    9624:	add	x0, x0, x1
    9628:	lsl	x0, x0, #3
    962c:	mov	x2, x0
    9630:	mov	x1, x4
    9634:	mov	x0, x3
    9638:	bl	0 <grub_memmove>
    963c:	ldr	x0, [sp, #56]
    9640:	ldr	x2, [x0]
    9644:	ldr	x0, [sp, #56]
    9648:	ldr	w0, [x0, #20]
    964c:	sxtw	x0, w0
    9650:	add	x1, x0, #0x1
    9654:	mov	x0, x1
    9658:	lsl	x0, x0, #1
    965c:	add	x0, x0, x1
    9660:	lsl	x0, x0, #3
    9664:	add	x0, x2, x0
    9668:	mov	x1, x0
    966c:	ldr	x0, [sp, #56]
    9670:	bl	841c <grub_show_menu+0x2ac>
    9674:	cmp	w0, #0x0
    9678:	b.ne	9684 <grub_show_menu+0x1514>  // b.any
    967c:	mov	w0, #0x0                   	// #0
    9680:	b	9d5c <grub_show_menu+0x1bec>
    9684:	ldr	x0, [sp, #56]
    9688:	ldr	x2, [x0]
    968c:	ldr	x0, [sp, #56]
    9690:	ldr	w0, [x0, #20]
    9694:	sxtw	x1, w0
    9698:	mov	x0, x1
    969c:	lsl	x0, x0, #1
    96a0:	add	x0, x0, x1
    96a4:	lsl	x0, x0, #3
    96a8:	add	x0, x2, x0
    96ac:	str	x0, [sp, #88]
    96b0:	ldr	x0, [sp, #88]
    96b4:	add	x0, x0, #0x18
    96b8:	str	x0, [sp, #80]
    96bc:	ldr	x0, [sp, #88]
    96c0:	ldr	w1, [x0, #8]
    96c4:	ldr	x0, [sp, #56]
    96c8:	ldr	w0, [x0, #12]
    96cc:	sub	w0, w1, w0
    96d0:	str	w0, [sp, #76]
    96d4:	ldr	w1, [sp, #76]
    96d8:	ldr	x0, [sp, #80]
    96dc:	bl	84d0 <grub_show_menu+0x360>
    96e0:	cmp	w0, #0x0
    96e4:	b.ne	96f0 <grub_show_menu+0x1580>  // b.any
    96e8:	mov	w0, #0x0                   	// #0
    96ec:	b	9d5c <grub_show_menu+0x1bec>
    96f0:	ldr	x0, [sp, #80]
    96f4:	ldr	x3, [x0]
    96f8:	ldr	x0, [sp, #88]
    96fc:	ldr	x1, [x0]
    9700:	ldr	x0, [sp, #56]
    9704:	ldr	w0, [x0, #12]
    9708:	sxtw	x0, w0
    970c:	lsl	x0, x0, #2
    9710:	add	x1, x1, x0
    9714:	ldrsw	x0, [sp, #76]
    9718:	lsl	x0, x0, #2
    971c:	mov	x2, x0
    9720:	mov	x0, x3
    9724:	bl	0 <grub_memmove>
    9728:	ldr	x0, [sp, #56]
    972c:	ldr	w1, [x0, #12]
    9730:	ldr	x0, [sp, #88]
    9734:	str	w1, [x0, #8]
    9738:	str	wzr, [sp, #132]
    973c:	b	9780 <grub_show_menu+0x1610>
    9740:	ldr	x0, [sp, #88]
    9744:	ldr	x1, [x0, #16]
    9748:	ldr	w0, [sp, #132]
    974c:	lsl	x0, x0, #3
    9750:	add	x0, x1, x0
    9754:	ldr	x0, [x0]
    9758:	bl	0 <grub_free>
    975c:	ldr	x0, [sp, #88]
    9760:	ldr	x1, [x0, #16]
    9764:	ldr	w0, [sp, #132]
    9768:	lsl	x0, x0, #3
    976c:	add	x0, x1, x0
    9770:	str	xzr, [x0]
    9774:	ldr	w0, [sp, #132]
    9778:	add	w0, w0, #0x1
    977c:	str	w0, [sp, #132]
    9780:	ldr	x0, [sp, #56]
    9784:	ldr	w0, [x0, #48]
    9788:	ldr	w1, [sp, #132]
    978c:	cmp	w1, w0
    9790:	b.cc	9740 <grub_show_menu+0x15d0>  // b.lo, b.ul, b.last
    9794:	ldr	x0, [sp, #80]
    9798:	ldr	w1, [sp, #76]
    979c:	str	w1, [x0, #8]
    97a0:	ldr	x0, [sp, #56]
    97a4:	ldr	w0, [x0, #20]
    97a8:	ldr	w1, [sp, #140]
    97ac:	cmp	w1, w0
    97b0:	b.le	97cc <grub_show_menu+0x165c>
    97b4:	ldr	x0, [sp, #56]
    97b8:	ldr	w0, [x0, #20]
    97bc:	str	w0, [sp, #140]
    97c0:	ldr	x0, [sp, #56]
    97c4:	ldr	w0, [x0, #12]
    97c8:	str	w0, [sp, #136]
    97cc:	str	wzr, [sp, #132]
    97d0:	b	9830 <grub_show_menu+0x16c0>
    97d4:	ldr	x0, [sp, #56]
    97d8:	ldr	x2, [x0, #40]
    97dc:	ldr	w1, [sp, #132]
    97e0:	mov	x0, x1
    97e4:	lsl	x0, x0, #3
    97e8:	sub	x0, x0, x1
    97ec:	lsl	x0, x0, #3
    97f0:	add	x0, x2, x0
    97f4:	mov	w1, #0x2                   	// #2
    97f8:	str	w1, [x0, #52]
    97fc:	ldr	x0, [sp, #56]
    9800:	ldr	x2, [x0, #40]
    9804:	ldr	w1, [sp, #132]
    9808:	mov	x0, x1
    980c:	lsl	x0, x0, #3
    9810:	sub	x0, x0, x1
    9814:	lsl	x0, x0, #3
    9818:	add	x0, x2, x0
    981c:	mov	w1, #0x1                   	// #1
    9820:	str	w1, [x0, #48]
    9824:	ldr	w0, [sp, #132]
    9828:	add	w0, w0, #0x1
    982c:	str	w0, [sp, #132]
    9830:	ldr	x0, [sp, #56]
    9834:	ldr	w0, [x0, #48]
    9838:	ldr	w1, [sp, #132]
    983c:	cmp	w1, w0
    9840:	b.cc	97d4 <grub_show_menu+0x1664>  // b.lo, b.ul, b.last
    9844:	ldr	x0, [sp, #56]
    9848:	str	wzr, [x0, #16]
    984c:	ldr	x0, [sp, #56]
    9850:	ldr	w1, [x0, #16]
    9854:	ldr	x0, [sp, #56]
    9858:	str	w1, [x0, #12]
    985c:	ldr	x0, [sp, #56]
    9860:	ldr	w0, [x0, #20]
    9864:	add	w1, w0, #0x1
    9868:	ldr	x0, [sp, #56]
    986c:	str	w1, [x0, #20]
    9870:	ldr	x0, [sp, #48]
    9874:	add	x0, x0, #0x1
    9878:	str	x0, [sp, #48]
    987c:	b	9c8c <grub_show_menu+0x1b1c>
    9880:	mov	w1, #0xa                   	// #10
    9884:	ldr	x0, [sp, #48]
    9888:	bl	0 <grub_strchr>
    988c:	str	x0, [sp, #120]
    9890:	ldr	x0, [sp, #120]
    9894:	cmp	x0, #0x0
    9898:	b.ne	98b4 <grub_show_menu+0x1744>  // b.any
    989c:	ldr	x0, [sp, #48]
    98a0:	bl	0 <grub_strlen>
    98a4:	mov	x1, x0
    98a8:	ldr	x0, [sp, #48]
    98ac:	add	x0, x0, x1
    98b0:	str	x0, [sp, #120]
    98b4:	ldr	x0, [sp, #56]
    98b8:	ldr	x2, [x0]
    98bc:	ldr	x0, [sp, #56]
    98c0:	ldr	w0, [x0, #20]
    98c4:	sxtw	x1, w0
    98c8:	mov	x0, x1
    98cc:	lsl	x0, x0, #1
    98d0:	add	x0, x0, x1
    98d4:	lsl	x0, x0, #3
    98d8:	add	x0, x2, x0
    98dc:	str	x0, [sp, #112]
    98e0:	ldr	x1, [sp, #120]
    98e4:	ldr	x0, [sp, #48]
    98e8:	sub	x0, x1, x0
    98ec:	lsl	x0, x0, #2
    98f0:	bl	0 <grub_malloc>
    98f4:	str	x0, [sp, #104]
    98f8:	ldr	x0, [sp, #104]
    98fc:	cmp	x0, #0x0
    9900:	b.ne	990c <grub_show_menu+0x179c>  // b.any
    9904:	mov	w0, #0x0                   	// #0
    9908:	b	9d5c <grub_show_menu+0x1bec>
    990c:	ldr	x1, [sp, #120]
    9910:	ldr	x0, [sp, #48]
    9914:	sub	x0, x1, x0
    9918:	mov	x5, x0
    991c:	ldr	x1, [sp, #120]
    9920:	ldr	x0, [sp, #48]
    9924:	sub	x0, x1, x0
    9928:	mov	x4, #0x0                   	// #0
    992c:	mov	x3, x0
    9930:	ldr	x2, [sp, #48]
    9934:	mov	x1, x5
    9938:	ldr	x0, [sp, #104]
    993c:	bl	12ecc <grub_utf8_to_ucs4>
    9940:	str	w0, [sp, #100]
    9944:	ldr	w1, [sp, #100]
    9948:	ldr	x0, [sp, #112]
    994c:	bl	84d0 <grub_show_menu+0x360>
    9950:	cmp	w0, #0x0
    9954:	b.ne	9968 <grub_show_menu+0x17f8>  // b.any
    9958:	ldr	x0, [sp, #104]
    995c:	bl	0 <grub_free>
    9960:	mov	w0, #0x0                   	// #0
    9964:	b	9d5c <grub_show_menu+0x1bec>
    9968:	ldr	x0, [sp, #112]
    996c:	ldr	x1, [x0]
    9970:	ldr	x0, [sp, #56]
    9974:	ldr	w0, [x0, #12]
    9978:	sxtw	x2, w0
    997c:	ldrsw	x0, [sp, #100]
    9980:	add	x0, x2, x0
    9984:	lsl	x0, x0, #2
    9988:	add	x3, x1, x0
    998c:	ldr	x0, [sp, #112]
    9990:	ldr	x1, [x0]
    9994:	ldr	x0, [sp, #56]
    9998:	ldr	w0, [x0, #12]
    999c:	sxtw	x0, w0
    99a0:	lsl	x0, x0, #2
    99a4:	add	x4, x1, x0
    99a8:	ldr	x0, [sp, #112]
    99ac:	ldr	w1, [x0, #8]
    99b0:	ldr	x0, [sp, #56]
    99b4:	ldr	w0, [x0, #12]
    99b8:	sub	w0, w1, w0
    99bc:	sxtw	x0, w0
    99c0:	lsl	x0, x0, #2
    99c4:	mov	x2, x0
    99c8:	mov	x1, x4
    99cc:	mov	x0, x3
    99d0:	bl	0 <grub_memmove>
    99d4:	ldr	x0, [sp, #112]
    99d8:	ldr	x1, [x0]
    99dc:	ldr	x0, [sp, #56]
    99e0:	ldr	w0, [x0, #12]
    99e4:	sxtw	x0, w0
    99e8:	lsl	x0, x0, #2
    99ec:	add	x3, x1, x0
    99f0:	ldrsw	x0, [sp, #100]
    99f4:	lsl	x0, x0, #2
    99f8:	mov	x2, x0
    99fc:	ldr	x1, [sp, #104]
    9a00:	mov	x0, x3
    9a04:	bl	0 <grub_memmove>
    9a08:	ldr	x0, [sp, #104]
    9a0c:	bl	0 <grub_free>
    9a10:	str	wzr, [sp, #132]
    9a14:	b	9a58 <grub_show_menu+0x18e8>
    9a18:	ldr	x0, [sp, #112]
    9a1c:	ldr	x1, [x0, #16]
    9a20:	ldr	w0, [sp, #132]
    9a24:	lsl	x0, x0, #3
    9a28:	add	x0, x1, x0
    9a2c:	ldr	x0, [x0]
    9a30:	bl	0 <grub_free>
    9a34:	ldr	x0, [sp, #112]
    9a38:	ldr	x1, [x0, #16]
    9a3c:	ldr	w0, [sp, #132]
    9a40:	lsl	x0, x0, #3
    9a44:	add	x0, x1, x0
    9a48:	str	xzr, [x0]
    9a4c:	ldr	w0, [sp, #132]
    9a50:	add	w0, w0, #0x1
    9a54:	str	w0, [sp, #132]
    9a58:	ldr	x0, [sp, #56]
    9a5c:	ldr	w0, [x0, #48]
    9a60:	ldr	w1, [sp, #132]
    9a64:	cmp	w1, w0
    9a68:	b.cc	9a18 <grub_show_menu+0x18a8>  // b.lo, b.ul, b.last
    9a6c:	str	wzr, [sp, #132]
    9a70:	b	9ad0 <grub_show_menu+0x1960>
    9a74:	ldr	x0, [sp, #56]
    9a78:	ldr	x2, [x0, #40]
    9a7c:	ldr	w1, [sp, #132]
    9a80:	mov	x0, x1
    9a84:	lsl	x0, x0, #3
    9a88:	sub	x0, x0, x1
    9a8c:	lsl	x0, x0, #3
    9a90:	add	x3, x2, x0
    9a94:	ldr	x0, [sp, #56]
    9a98:	ldr	x2, [x0, #40]
    9a9c:	ldr	w1, [sp, #132]
    9aa0:	mov	x0, x1
    9aa4:	lsl	x0, x0, #3
    9aa8:	sub	x0, x0, x1
    9aac:	lsl	x0, x0, #3
    9ab0:	add	x19, x2, x0
    9ab4:	mov	x1, x3
    9ab8:	ldr	x0, [sp, #112]
    9abc:	bl	8574 <grub_show_menu+0x404>
    9ac0:	str	w0, [x19, #44]
    9ac4:	ldr	w0, [sp, #132]
    9ac8:	add	w0, w0, #0x1
    9acc:	str	w0, [sp, #132]
    9ad0:	ldr	x0, [sp, #56]
    9ad4:	ldr	w0, [x0, #48]
    9ad8:	ldr	w1, [sp, #132]
    9adc:	cmp	w1, w0
    9ae0:	b.cc	9a74 <grub_show_menu+0x1904>  // b.lo, b.ul, b.last
    9ae4:	ldr	x0, [sp, #112]
    9ae8:	ldr	w1, [x0, #8]
    9aec:	ldr	w0, [sp, #100]
    9af0:	add	w1, w1, w0
    9af4:	ldr	x0, [sp, #112]
    9af8:	str	w1, [x0, #8]
    9afc:	ldr	x0, [sp, #56]
    9b00:	ldr	w0, [x0, #20]
    9b04:	ldr	w1, [sp, #140]
    9b08:	cmp	w1, w0
    9b0c:	b.le	9b28 <grub_show_menu+0x19b8>
    9b10:	ldr	x0, [sp, #56]
    9b14:	ldr	w0, [x0, #20]
    9b18:	str	w0, [sp, #140]
    9b1c:	ldr	x0, [sp, #56]
    9b20:	ldr	w0, [x0, #12]
    9b24:	str	w0, [sp, #136]
    9b28:	str	wzr, [sp, #132]
    9b2c:	b	9c44 <grub_show_menu+0x1ad4>
    9b30:	ldr	x0, [sp, #56]
    9b34:	ldr	x2, [x0, #40]
    9b38:	ldr	w1, [sp, #132]
    9b3c:	mov	x0, x1
    9b40:	lsl	x0, x0, #3
    9b44:	sub	x0, x0, x1
    9b48:	lsl	x0, x0, #3
    9b4c:	add	x0, x2, x0
    9b50:	mov	x1, x0
    9b54:	ldr	x0, [sp, #112]
    9b58:	bl	8574 <grub_show_menu+0x404>
    9b5c:	str	w0, [sp, #96]
    9b60:	ldr	x0, [sp, #56]
    9b64:	ldr	x2, [x0, #40]
    9b68:	ldr	w1, [sp, #132]
    9b6c:	mov	x0, x1
    9b70:	lsl	x0, x0, #3
    9b74:	sub	x0, x0, x1
    9b78:	lsl	x0, x0, #3
    9b7c:	add	x0, x2, x0
    9b80:	ldr	w0, [x0, #44]
    9b84:	ldr	w1, [sp, #96]
    9b88:	cmp	w1, w0
    9b8c:	b.eq	9be4 <grub_show_menu+0x1a74>  // b.none
    9b90:	ldr	x0, [sp, #56]
    9b94:	ldr	x2, [x0, #40]
    9b98:	ldr	w1, [sp, #132]
    9b9c:	mov	x0, x1
    9ba0:	lsl	x0, x0, #3
    9ba4:	sub	x0, x0, x1
    9ba8:	lsl	x0, x0, #3
    9bac:	add	x0, x2, x0
    9bb0:	mov	w1, #0x2                   	// #2
    9bb4:	str	w1, [x0, #52]
    9bb8:	ldr	x0, [sp, #56]
    9bbc:	ldr	x2, [x0, #40]
    9bc0:	ldr	w1, [sp, #132]
    9bc4:	mov	x0, x1
    9bc8:	lsl	x0, x0, #3
    9bcc:	sub	x0, x0, x1
    9bd0:	lsl	x0, x0, #3
    9bd4:	add	x0, x2, x0
    9bd8:	mov	w1, #0x1                   	// #1
    9bdc:	str	w1, [x0, #48]
    9be0:	b	9c38 <grub_show_menu+0x1ac8>
    9be4:	ldr	x0, [sp, #56]
    9be8:	ldr	x2, [x0, #40]
    9bec:	ldr	w1, [sp, #132]
    9bf0:	mov	x0, x1
    9bf4:	lsl	x0, x0, #3
    9bf8:	sub	x0, x0, x1
    9bfc:	lsl	x0, x0, #3
    9c00:	add	x0, x2, x0
    9c04:	ldr	w0, [x0, #52]
    9c08:	cmp	w0, #0x2
    9c0c:	b.eq	9c38 <grub_show_menu+0x1ac8>  // b.none
    9c10:	ldr	x0, [sp, #56]
    9c14:	ldr	x2, [x0, #40]
    9c18:	ldr	w1, [sp, #132]
    9c1c:	mov	x0, x1
    9c20:	lsl	x0, x0, #3
    9c24:	sub	x0, x0, x1
    9c28:	lsl	x0, x0, #3
    9c2c:	add	x0, x2, x0
    9c30:	mov	w1, #0x1                   	// #1
    9c34:	str	w1, [x0, #52]
    9c38:	ldr	w0, [sp, #132]
    9c3c:	add	w0, w0, #0x1
    9c40:	str	w0, [sp, #132]
    9c44:	ldr	x0, [sp, #56]
    9c48:	ldr	w0, [x0, #48]
    9c4c:	ldr	w1, [sp, #132]
    9c50:	cmp	w1, w0
    9c54:	b.cc	9b30 <grub_show_menu+0x19c0>  // b.lo, b.ul, b.last
    9c58:	ldr	x0, [sp, #56]
    9c5c:	ldr	w1, [x0, #12]
    9c60:	ldr	w0, [sp, #100]
    9c64:	add	w0, w1, w0
    9c68:	mov	w1, w0
    9c6c:	ldr	x0, [sp, #56]
    9c70:	bl	8604 <grub_show_menu+0x494>
    9c74:	ldr	x0, [sp, #56]
    9c78:	ldr	w1, [x0, #12]
    9c7c:	ldr	x0, [sp, #56]
    9c80:	str	w1, [x0, #16]
    9c84:	ldr	x0, [sp, #120]
    9c88:	str	x0, [sp, #48]
    9c8c:	ldr	x0, [sp, #48]
    9c90:	ldrb	w0, [x0]
    9c94:	cmp	w0, #0x0
    9c98:	b.ne	9514 <grub_show_menu+0x13a4>  // b.any
    9c9c:	ldr	w0, [sp, #44]
    9ca0:	cmp	w0, #0x0
    9ca4:	b.eq	9d58 <grub_show_menu+0x1be8>  // b.none
    9ca8:	str	wzr, [sp, #132]
    9cac:	b	9d44 <grub_show_menu+0x1bd4>
    9cb0:	ldr	x0, [sp, #56]
    9cb4:	ldr	x2, [x0, #40]
    9cb8:	ldr	w1, [sp, #132]
    9cbc:	mov	x0, x1
    9cc0:	lsl	x0, x0, #3
    9cc4:	sub	x0, x0, x1
    9cc8:	lsl	x0, x0, #3
    9ccc:	add	x7, x2, x0
    9cd0:	ldr	x0, [sp, #56]
    9cd4:	ldr	x2, [x0, #40]
    9cd8:	ldr	w1, [sp, #132]
    9cdc:	mov	x0, x1
    9ce0:	lsl	x0, x0, #3
    9ce4:	sub	x0, x0, x1
    9ce8:	lsl	x0, x0, #3
    9cec:	add	x0, x2, x0
    9cf0:	ldr	w3, [x0, #48]
    9cf4:	ldr	x0, [sp, #56]
    9cf8:	ldr	x2, [x0, #40]
    9cfc:	ldr	w1, [sp, #132]
    9d00:	mov	x0, x1
    9d04:	lsl	x0, x0, #3
    9d08:	sub	x0, x0, x1
    9d0c:	lsl	x0, x0, #3
    9d10:	add	x0, x2, x0
    9d14:	ldr	w0, [x0, #52]
    9d18:	mov	w6, w0
    9d1c:	mov	w5, w3
    9d20:	mov	w4, #0x0                   	// #0
    9d24:	ldr	w3, [sp, #136]
    9d28:	ldr	w2, [sp, #140]
    9d2c:	mov	x1, x7
    9d30:	ldr	x0, [sp, #56]
    9d34:	bl	8ab0 <grub_show_menu+0x940>
    9d38:	ldr	w0, [sp, #132]
    9d3c:	add	w0, w0, #0x1
    9d40:	str	w0, [sp, #132]
    9d44:	ldr	x0, [sp, #56]
    9d48:	ldr	w0, [x0, #48]
    9d4c:	ldr	w1, [sp, #132]
    9d50:	cmp	w1, w0
    9d54:	b.cc	9cb0 <grub_show_menu+0x1b40>  // b.lo, b.ul, b.last
    9d58:	mov	w0, #0x1                   	// #1
    9d5c:	ldr	x19, [sp, #16]
    9d60:	ldp	x29, x30, [sp], #144
    9d64:	ret
    9d68:	stp	x29, x30, [sp, #-48]!
    9d6c:	mov	x29, sp
    9d70:	str	x0, [sp, #24]
    9d74:	ldr	x0, [sp, #24]
    9d78:	ldr	x0, [x0]
    9d7c:	cmp	x0, #0x0
    9d80:	b.eq	9e48 <grub_show_menu+0x1cd8>  // b.none
    9d84:	str	wzr, [sp, #44]
    9d88:	b	9e34 <grub_show_menu+0x1cc4>
    9d8c:	ldr	x0, [sp, #24]
    9d90:	ldr	x2, [x0]
    9d94:	ldrsw	x1, [sp, #44]
    9d98:	mov	x0, x1
    9d9c:	lsl	x0, x0, #1
    9da0:	add	x0, x0, x1
    9da4:	lsl	x0, x0, #3
    9da8:	add	x0, x2, x0
    9dac:	str	x0, [sp, #32]
    9db0:	ldr	x0, [sp, #32]
    9db4:	cmp	x0, #0x0
    9db8:	b.eq	9e28 <grub_show_menu+0x1cb8>  // b.none
    9dbc:	ldr	x0, [sp, #32]
    9dc0:	ldr	x0, [x0, #16]
    9dc4:	cmp	x0, #0x0
    9dc8:	b.eq	9e10 <grub_show_menu+0x1ca0>  // b.none
    9dcc:	str	wzr, [sp, #40]
    9dd0:	b	9dfc <grub_show_menu+0x1c8c>
    9dd4:	ldr	x0, [sp, #32]
    9dd8:	ldr	x1, [x0, #16]
    9ddc:	ldr	w0, [sp, #40]
    9de0:	lsl	x0, x0, #3
    9de4:	add	x0, x1, x0
    9de8:	ldr	x0, [x0]
    9dec:	bl	0 <grub_free>
    9df0:	ldr	w0, [sp, #40]
    9df4:	add	w0, w0, #0x1
    9df8:	str	w0, [sp, #40]
    9dfc:	ldr	x0, [sp, #24]
    9e00:	ldr	w0, [x0, #48]
    9e04:	ldr	w1, [sp, #40]
    9e08:	cmp	w1, w0
    9e0c:	b.cc	9dd4 <grub_show_menu+0x1c64>  // b.lo, b.ul, b.last
    9e10:	ldr	x0, [sp, #32]
    9e14:	ldr	x0, [x0]
    9e18:	bl	0 <grub_free>
    9e1c:	ldr	x0, [sp, #32]
    9e20:	ldr	x0, [x0, #16]
    9e24:	bl	0 <grub_free>
    9e28:	ldr	w0, [sp, #44]
    9e2c:	add	w0, w0, #0x1
    9e30:	str	w0, [sp, #44]
    9e34:	ldr	x0, [sp, #24]
    9e38:	ldr	w0, [x0, #8]
    9e3c:	ldr	w1, [sp, #44]
    9e40:	cmp	w1, w0
    9e44:	b.lt	9d8c <grub_show_menu+0x1c1c>  // b.tstop
    9e48:	ldr	x0, [sp, #24]
    9e4c:	ldr	x0, [x0, #24]
    9e50:	bl	0 <grub_free>
    9e54:	ldr	x0, [sp, #24]
    9e58:	ldr	x0, [x0]
    9e5c:	bl	0 <grub_free>
    9e60:	ldr	x0, [sp, #24]
    9e64:	ldr	x0, [x0, #40]
    9e68:	bl	0 <grub_free>
    9e6c:	ldr	x0, [sp, #24]
    9e70:	bl	0 <grub_free>
    9e74:	nop
    9e78:	ldp	x29, x30, [sp], #48
    9e7c:	ret
    9e80:	stp	x29, x30, [sp, #-48]!
    9e84:	mov	x29, sp
    9e88:	str	x0, [sp, #24]
    9e8c:	mov	x0, #0x38                  	// #56
    9e90:	bl	0 <grub_zalloc>
    9e94:	str	x0, [sp, #32]
    9e98:	ldr	x0, [sp, #32]
    9e9c:	cmp	x0, #0x0
    9ea0:	b.ne	9eac <grub_show_menu+0x1d3c>  // b.any
    9ea4:	mov	x0, #0x0                   	// #0
    9ea8:	b	9fa4 <grub_show_menu+0x1e34>
    9eac:	ldr	x0, [sp, #24]
    9eb0:	ldr	w1, [x0, #68]
    9eb4:	ldr	x0, [sp, #32]
    9eb8:	str	w1, [x0, #36]
    9ebc:	ldr	x0, [sp, #32]
    9ec0:	mov	w1, #0x1                   	// #1
    9ec4:	str	w1, [x0, #8]
    9ec8:	mov	x0, #0x18                  	// #24
    9ecc:	bl	0 <grub_malloc>
    9ed0:	mov	x1, x0
    9ed4:	ldr	x0, [sp, #32]
    9ed8:	str	x1, [x0]
    9edc:	ldr	x0, [sp, #32]
    9ee0:	ldr	x0, [x0]
    9ee4:	cmp	x0, #0x0
    9ee8:	b.eq	9f8c <grub_show_menu+0x1e1c>  // b.none
    9eec:	ldr	x0, [sp, #32]
    9ef0:	ldr	x0, [x0]
    9ef4:	mov	x1, x0
    9ef8:	ldr	x0, [sp, #32]
    9efc:	bl	841c <grub_show_menu+0x2ac>
    9f00:	cmp	w0, #0x0
    9f04:	b.eq	9f94 <grub_show_menu+0x1e24>  // b.none
    9f08:	ldr	x0, [sp, #24]
    9f0c:	ldr	x0, [x0, #40]
    9f10:	mov	w2, #0x0                   	// #0
    9f14:	mov	x1, x0
    9f18:	ldr	x0, [sp, #32]
    9f1c:	bl	9478 <grub_show_menu+0x1308>
    9f20:	ldr	x0, [sp, #32]
    9f24:	str	wzr, [x0, #12]
    9f28:	ldr	x0, [sp, #32]
    9f2c:	str	wzr, [x0, #16]
    9f30:	ldr	x0, [sp, #32]
    9f34:	str	wzr, [x0, #20]
    9f38:	str	wzr, [sp, #44]
    9f3c:	b	9f70 <grub_show_menu+0x1e00>
    9f40:	ldr	x0, [sp, #32]
    9f44:	ldr	x2, [x0, #40]
    9f48:	ldr	w1, [sp, #44]
    9f4c:	mov	x0, x1
    9f50:	lsl	x0, x0, #3
    9f54:	sub	x0, x0, x1
    9f58:	lsl	x0, x0, #3
    9f5c:	add	x0, x2, x0
    9f60:	str	wzr, [x0, #8]
    9f64:	ldr	w0, [sp, #44]
    9f68:	add	w0, w0, #0x1
    9f6c:	str	w0, [sp, #44]
    9f70:	ldr	x0, [sp, #32]
    9f74:	ldr	w0, [x0, #48]
    9f78:	ldr	w1, [sp, #44]
    9f7c:	cmp	w1, w0
    9f80:	b.cc	9f40 <grub_show_menu+0x1dd0>  // b.lo, b.ul, b.last
    9f84:	ldr	x0, [sp, #32]
    9f88:	b	9fa4 <grub_show_menu+0x1e34>
    9f8c:	nop
    9f90:	b	9f98 <grub_show_menu+0x1e28>
    9f94:	nop
    9f98:	ldr	x0, [sp, #32]
    9f9c:	bl	9d68 <grub_show_menu+0x1bf8>
    9fa0:	mov	x0, #0x0                   	// #0
    9fa4:	ldp	x29, x30, [sp], #48
    9fa8:	ret
    9fac:	stp	x29, x30, [sp, #-48]!
    9fb0:	mov	x29, sp
    9fb4:	str	x0, [sp, #24]
    9fb8:	str	w1, [sp, #20]
    9fbc:	ldr	x0, [sp, #24]
    9fc0:	ldr	x2, [x0]
    9fc4:	ldr	x0, [sp, #24]
    9fc8:	ldr	w0, [x0, #20]
    9fcc:	sxtw	x1, w0
    9fd0:	mov	x0, x1
    9fd4:	lsl	x0, x0, #1
    9fd8:	add	x0, x0, x1
    9fdc:	lsl	x0, x0, #3
    9fe0:	add	x0, x2, x0
    9fe4:	str	x0, [sp, #40]
    9fe8:	ldr	x0, [sp, #24]
    9fec:	ldr	w1, [x0, #12]
    9ff0:	ldr	x0, [sp, #40]
    9ff4:	ldr	w0, [x0, #8]
    9ff8:	cmp	w1, w0
    9ffc:	b.ge	a0fc <grub_show_menu+0x1f8c>  // b.tcont
    a000:	ldr	x0, [sp, #24]
    a004:	ldr	x2, [x0]
    a008:	ldr	x0, [sp, #24]
    a00c:	ldr	w0, [x0, #20]
    a010:	sxtw	x1, w0
    a014:	mov	x0, x1
    a018:	lsl	x0, x0, #1
    a01c:	add	x0, x0, x1
    a020:	lsl	x0, x0, #3
    a024:	add	x0, x2, x0
    a028:	ldr	x2, [x0]
    a02c:	ldr	x0, [sp, #24]
    a030:	ldr	x3, [x0]
    a034:	ldr	x0, [sp, #24]
    a038:	ldr	w0, [x0, #20]
    a03c:	sxtw	x1, w0
    a040:	mov	x0, x1
    a044:	lsl	x0, x0, #1
    a048:	add	x0, x0, x1
    a04c:	lsl	x0, x0, #3
    a050:	add	x0, x3, x0
    a054:	ldr	w0, [x0, #8]
    a058:	sxtw	x0, w0
    a05c:	lsl	x0, x0, #2
    a060:	add	x3, x2, x0
    a064:	ldr	x0, [sp, #24]
    a068:	ldr	x2, [x0]
    a06c:	ldr	x0, [sp, #24]
    a070:	ldr	w0, [x0, #20]
    a074:	sxtw	x1, w0
    a078:	mov	x0, x1
    a07c:	lsl	x0, x0, #1
    a080:	add	x0, x0, x1
    a084:	lsl	x0, x0, #3
    a088:	add	x0, x2, x0
    a08c:	ldr	x1, [x0]
    a090:	ldr	x0, [sp, #24]
    a094:	ldr	w0, [x0, #12]
    a098:	sxtw	x0, w0
    a09c:	add	x0, x0, #0x1
    a0a0:	lsl	x0, x0, #2
    a0a4:	add	x0, x1, x0
    a0a8:	mov	x1, x0
    a0ac:	mov	x0, x3
    a0b0:	bl	168b4 <grub_unicode_get_comb_end>
    a0b4:	mov	x3, x0
    a0b8:	ldr	x0, [sp, #24]
    a0bc:	ldr	x2, [x0]
    a0c0:	ldr	x0, [sp, #24]
    a0c4:	ldr	w0, [x0, #20]
    a0c8:	sxtw	x1, w0
    a0cc:	mov	x0, x1
    a0d0:	lsl	x0, x0, #1
    a0d4:	add	x0, x0, x1
    a0d8:	lsl	x0, x0, #3
    a0dc:	add	x0, x2, x0
    a0e0:	ldr	x0, [x0]
    a0e4:	sub	x0, x3, x0
    a0e8:	asr	x0, x0, #2
    a0ec:	mov	w1, w0
    a0f0:	ldr	x0, [sp, #24]
    a0f4:	str	w1, [x0, #12]
    a0f8:	b	a134 <grub_show_menu+0x1fc4>
    a0fc:	ldr	x0, [sp, #24]
    a100:	ldr	w1, [x0, #8]
    a104:	ldr	x0, [sp, #24]
    a108:	ldr	w0, [x0, #20]
    a10c:	add	w0, w0, #0x1
    a110:	cmp	w1, w0
    a114:	b.le	a134 <grub_show_menu+0x1fc4>
    a118:	ldr	x0, [sp, #24]
    a11c:	str	wzr, [x0, #12]
    a120:	ldr	x0, [sp, #24]
    a124:	ldr	w0, [x0, #20]
    a128:	add	w1, w0, #0x1
    a12c:	ldr	x0, [sp, #24]
    a130:	str	w1, [x0, #20]
    a134:	ldr	x0, [sp, #24]
    a138:	ldr	w1, [x0, #12]
    a13c:	ldr	x0, [sp, #24]
    a140:	str	w1, [x0, #16]
    a144:	ldr	w0, [sp, #20]
    a148:	cmp	w0, #0x0
    a14c:	b.eq	a174 <grub_show_menu+0x2004>  // b.none
    a150:	ldr	x0, [sp, #24]
    a154:	ldr	w0, [x0, #8]
    a158:	mov	w5, #0x0                   	// #0
    a15c:	mov	w4, #0x0                   	// #0
    a160:	mov	w3, #0x0                   	// #0
    a164:	mov	w2, #0x0                   	// #0
    a168:	mov	w1, w0
    a16c:	ldr	x0, [sp, #24]
    a170:	bl	93e0 <grub_show_menu+0x1270>
    a174:	mov	w0, #0x1                   	// #1
    a178:	ldp	x29, x30, [sp], #48
    a17c:	ret
    a180:	stp	x29, x30, [sp, #-80]!
    a184:	mov	x29, sp
    a188:	str	x0, [sp, #24]
    a18c:	str	w1, [sp, #20]
    a190:	ldr	x0, [sp, #24]
    a194:	ldr	w0, [x0, #12]
    a198:	cmp	w0, #0x0
    a19c:	b.le	a31c <grub_show_menu+0x21ac>
    a1a0:	ldr	x0, [sp, #24]
    a1a4:	ldr	x2, [x0]
    a1a8:	ldr	x0, [sp, #24]
    a1ac:	ldr	w0, [x0, #20]
    a1b0:	sxtw	x1, w0
    a1b4:	mov	x0, x1
    a1b8:	lsl	x0, x0, #1
    a1bc:	add	x0, x0, x1
    a1c0:	lsl	x0, x0, #3
    a1c4:	add	x0, x2, x0
    a1c8:	str	x0, [sp, #72]
    a1cc:	ldr	x0, [sp, #24]
    a1d0:	ldr	w0, [x0, #12]
    a1d4:	sub	w1, w0, #0x1
    a1d8:	ldr	x0, [sp, #24]
    a1dc:	str	w1, [x0, #12]
    a1e0:	ldr	x0, [sp, #72]
    a1e4:	ldr	x2, [x0]
    a1e8:	ldr	x0, [sp, #72]
    a1ec:	ldr	x1, [x0]
    a1f0:	ldr	x0, [sp, #24]
    a1f4:	ldr	w0, [x0, #12]
    a1f8:	sxtw	x0, w0
    a1fc:	lsl	x0, x0, #2
    a200:	add	x0, x1, x0
    a204:	mov	x1, x0
    a208:	mov	x0, x2
    a20c:	bl	167e0 <grub_unicode_get_comb_start>
    a210:	mov	x1, x0
    a214:	ldr	x0, [sp, #72]
    a218:	ldr	x0, [x0]
    a21c:	sub	x0, x1, x0
    a220:	asr	x0, x0, #2
    a224:	mov	w1, w0
    a228:	ldr	x0, [sp, #24]
    a22c:	str	w1, [x0, #12]
    a230:	ldr	x0, [sp, #24]
    a234:	ldr	x2, [x0]
    a238:	ldr	x0, [sp, #24]
    a23c:	ldr	w0, [x0, #20]
    a240:	sxtw	x1, w0
    a244:	mov	x0, x1
    a248:	lsl	x0, x0, #1
    a24c:	add	x0, x0, x1
    a250:	lsl	x0, x0, #3
    a254:	add	x0, x2, x0
    a258:	ldr	x1, [x0]
    a25c:	ldr	x0, [sp, #24]
    a260:	ldr	w0, [x0, #12]
    a264:	sxtw	x0, w0
    a268:	lsl	x0, x0, #2
    a26c:	add	x3, x1, x0
    a270:	ldr	x0, [sp, #24]
    a274:	ldr	x2, [x0]
    a278:	ldr	x0, [sp, #24]
    a27c:	ldr	w0, [x0, #20]
    a280:	sxtw	x1, w0
    a284:	mov	x0, x1
    a288:	lsl	x0, x0, #1
    a28c:	add	x0, x0, x1
    a290:	lsl	x0, x0, #3
    a294:	add	x0, x2, x0
    a298:	ldr	w1, [x0, #8]
    a29c:	ldr	x0, [sp, #24]
    a2a0:	ldr	w0, [x0, #12]
    a2a4:	sub	w0, w1, w0
    a2a8:	sxtw	x0, w0
    a2ac:	add	x1, sp, #0x28
    a2b0:	mov	x2, x1
    a2b4:	mov	x1, x0
    a2b8:	mov	x0, x3
    a2bc:	bl	13ab0 <grub_unicode_aglomerate_comb>
    a2c0:	ldr	x0, [sp, #72]
    a2c4:	ldr	x2, [x0]
    a2c8:	ldr	x0, [sp, #72]
    a2cc:	ldr	x1, [x0]
    a2d0:	ldr	x0, [sp, #24]
    a2d4:	ldr	w0, [x0, #12]
    a2d8:	sxtw	x0, w0
    a2dc:	lsl	x0, x0, #2
    a2e0:	add	x0, x1, x0
    a2e4:	mov	x1, x0
    a2e8:	mov	x0, x2
    a2ec:	bl	167e0 <grub_unicode_get_comb_start>
    a2f0:	mov	x1, x0
    a2f4:	ldr	x0, [sp, #72]
    a2f8:	ldr	x0, [x0]
    a2fc:	sub	x0, x1, x0
    a300:	asr	x0, x0, #2
    a304:	mov	w1, w0
    a308:	ldr	x0, [sp, #24]
    a30c:	str	w1, [x0, #12]
    a310:	add	x0, sp, #0x28
    a314:	bl	8244 <grub_show_menu+0xd4>
    a318:	b	a374 <grub_show_menu+0x2204>
    a31c:	ldr	x0, [sp, #24]
    a320:	ldr	w0, [x0, #20]
    a324:	cmp	w0, #0x0
    a328:	b.le	a374 <grub_show_menu+0x2204>
    a32c:	ldr	x0, [sp, #24]
    a330:	ldr	w0, [x0, #20]
    a334:	sub	w1, w0, #0x1
    a338:	ldr	x0, [sp, #24]
    a33c:	str	w1, [x0, #20]
    a340:	ldr	x0, [sp, #24]
    a344:	ldr	x2, [x0]
    a348:	ldr	x0, [sp, #24]
    a34c:	ldr	w0, [x0, #20]
    a350:	sxtw	x1, w0
    a354:	mov	x0, x1
    a358:	lsl	x0, x0, #1
    a35c:	add	x0, x0, x1
    a360:	lsl	x0, x0, #3
    a364:	add	x0, x2, x0
    a368:	ldr	w1, [x0, #8]
    a36c:	ldr	x0, [sp, #24]
    a370:	str	w1, [x0, #12]
    a374:	ldr	x0, [sp, #24]
    a378:	ldr	w1, [x0, #12]
    a37c:	ldr	x0, [sp, #24]
    a380:	str	w1, [x0, #16]
    a384:	ldr	w0, [sp, #20]
    a388:	cmp	w0, #0x0
    a38c:	b.eq	a3b4 <grub_show_menu+0x2244>  // b.none
    a390:	ldr	x0, [sp, #24]
    a394:	ldr	w0, [x0, #8]
    a398:	mov	w5, #0x0                   	// #0
    a39c:	mov	w4, #0x0                   	// #0
    a3a0:	mov	w3, #0x0                   	// #0
    a3a4:	mov	w2, #0x0                   	// #0
    a3a8:	mov	w1, w0
    a3ac:	ldr	x0, [sp, #24]
    a3b0:	bl	93e0 <grub_show_menu+0x1270>
    a3b4:	mov	w0, #0x1                   	// #1
    a3b8:	ldp	x29, x30, [sp], #80
    a3bc:	ret
    a3c0:	stp	x29, x30, [sp, #-48]!
    a3c4:	mov	x29, sp
    a3c8:	str	x0, [sp, #24]
    a3cc:	str	w1, [sp, #20]
    a3d0:	ldr	x0, [sp, #24]
    a3d4:	ldr	w0, [x0, #20]
    a3d8:	cmp	w0, #0x0
    a3dc:	b.le	a46c <grub_show_menu+0x22fc>
    a3e0:	ldr	x0, [sp, #24]
    a3e4:	ldr	w0, [x0, #20]
    a3e8:	sub	w1, w0, #0x1
    a3ec:	ldr	x0, [sp, #24]
    a3f0:	str	w1, [x0, #20]
    a3f4:	ldr	x0, [sp, #24]
    a3f8:	ldr	x2, [x0]
    a3fc:	ldr	x0, [sp, #24]
    a400:	ldr	w0, [x0, #20]
    a404:	sxtw	x1, w0
    a408:	mov	x0, x1
    a40c:	lsl	x0, x0, #1
    a410:	add	x0, x0, x1
    a414:	lsl	x0, x0, #3
    a418:	add	x0, x2, x0
    a41c:	str	x0, [sp, #32]
    a420:	ldr	x0, [sp, #32]
    a424:	ldr	w1, [x0, #8]
    a428:	ldr	x0, [sp, #24]
    a42c:	ldr	w0, [x0, #16]
    a430:	cmp	w1, w0
    a434:	b.ge	a448 <grub_show_menu+0x22d8>  // b.tcont
    a438:	ldr	x0, [sp, #32]
    a43c:	ldr	w0, [x0, #8]
    a440:	str	w0, [sp, #44]
    a444:	b	a454 <grub_show_menu+0x22e4>
    a448:	ldr	x0, [sp, #24]
    a44c:	ldr	w0, [x0, #16]
    a450:	str	w0, [sp, #44]
    a454:	ldr	x0, [sp, #24]
    a458:	str	wzr, [x0, #12]
    a45c:	ldr	w1, [sp, #44]
    a460:	ldr	x0, [sp, #24]
    a464:	bl	8604 <grub_show_menu+0x494>
    a468:	b	a474 <grub_show_menu+0x2304>
    a46c:	ldr	x0, [sp, #24]
    a470:	str	wzr, [x0, #12]
    a474:	ldr	w0, [sp, #20]
    a478:	cmp	w0, #0x0
    a47c:	b.eq	a4a4 <grub_show_menu+0x2334>  // b.none
    a480:	ldr	x0, [sp, #24]
    a484:	ldr	w0, [x0, #8]
    a488:	mov	w5, #0x0                   	// #0
    a48c:	mov	w4, #0x0                   	// #0
    a490:	mov	w3, #0x0                   	// #0
    a494:	mov	w2, #0x0                   	// #0
    a498:	mov	w1, w0
    a49c:	ldr	x0, [sp, #24]
    a4a0:	bl	93e0 <grub_show_menu+0x1270>
    a4a4:	mov	w0, #0x1                   	// #1
    a4a8:	ldp	x29, x30, [sp], #48
    a4ac:	ret
    a4b0:	stp	x29, x30, [sp, #-48]!
    a4b4:	mov	x29, sp
    a4b8:	str	x0, [sp, #24]
    a4bc:	str	w1, [sp, #20]
    a4c0:	ldr	x0, [sp, #24]
    a4c4:	ldr	w1, [x0, #20]
    a4c8:	ldr	x0, [sp, #24]
    a4cc:	ldr	w0, [x0, #8]
    a4d0:	sub	w0, w0, #0x1
    a4d4:	cmp	w1, w0
    a4d8:	b.ge	a570 <grub_show_menu+0x2400>  // b.tcont
    a4dc:	ldr	x0, [sp, #24]
    a4e0:	ldr	x2, [x0]
    a4e4:	ldr	x0, [sp, #24]
    a4e8:	ldr	w0, [x0, #20]
    a4ec:	sxtw	x1, w0
    a4f0:	mov	x0, x1
    a4f4:	lsl	x0, x0, #1
    a4f8:	add	x0, x0, x1
    a4fc:	lsl	x0, x0, #3
    a500:	add	x0, x2, x0
    a504:	str	x0, [sp, #32]
    a508:	ldr	x0, [sp, #24]
    a50c:	ldr	w0, [x0, #20]
    a510:	add	w1, w0, #0x1
    a514:	ldr	x0, [sp, #24]
    a518:	str	w1, [x0, #20]
    a51c:	ldr	x0, [sp, #32]
    a520:	add	x0, x0, #0x18
    a524:	ldr	w1, [x0, #8]
    a528:	ldr	x0, [sp, #24]
    a52c:	ldr	w0, [x0, #16]
    a530:	cmp	w1, w0
    a534:	b.ge	a54c <grub_show_menu+0x23dc>  // b.tcont
    a538:	ldr	x0, [sp, #32]
    a53c:	add	x0, x0, #0x18
    a540:	ldr	w0, [x0, #8]
    a544:	str	w0, [sp, #44]
    a548:	b	a558 <grub_show_menu+0x23e8>
    a54c:	ldr	x0, [sp, #24]
    a550:	ldr	w0, [x0, #16]
    a554:	str	w0, [sp, #44]
    a558:	ldr	x0, [sp, #24]
    a55c:	str	wzr, [x0, #12]
    a560:	ldr	w1, [sp, #44]
    a564:	ldr	x0, [sp, #24]
    a568:	bl	8604 <grub_show_menu+0x494>
    a56c:	b	a5a8 <grub_show_menu+0x2438>
    a570:	ldr	x0, [sp, #24]
    a574:	ldr	x2, [x0]
    a578:	ldr	x0, [sp, #24]
    a57c:	ldr	w0, [x0, #20]
    a580:	sxtw	x1, w0
    a584:	mov	x0, x1
    a588:	lsl	x0, x0, #1
    a58c:	add	x0, x0, x1
    a590:	lsl	x0, x0, #3
    a594:	add	x0, x2, x0
    a598:	ldr	w0, [x0, #8]
    a59c:	mov	w1, w0
    a5a0:	ldr	x0, [sp, #24]
    a5a4:	bl	8604 <grub_show_menu+0x494>
    a5a8:	ldr	w0, [sp, #20]
    a5ac:	cmp	w0, #0x0
    a5b0:	b.eq	a5d8 <grub_show_menu+0x2468>  // b.none
    a5b4:	ldr	x0, [sp, #24]
    a5b8:	ldr	w0, [x0, #8]
    a5bc:	mov	w5, #0x0                   	// #0
    a5c0:	mov	w4, #0x0                   	// #0
    a5c4:	mov	w3, #0x0                   	// #0
    a5c8:	mov	w2, #0x0                   	// #0
    a5cc:	mov	w1, w0
    a5d0:	ldr	x0, [sp, #24]
    a5d4:	bl	93e0 <grub_show_menu+0x1270>
    a5d8:	mov	w0, #0x1                   	// #1
    a5dc:	ldp	x29, x30, [sp], #48
    a5e0:	ret
    a5e4:	stp	x29, x30, [sp, #-32]!
    a5e8:	mov	x29, sp
    a5ec:	str	x0, [sp, #24]
    a5f0:	str	w1, [sp, #20]
    a5f4:	ldr	x0, [sp, #24]
    a5f8:	str	wzr, [x0, #16]
    a5fc:	ldr	x0, [sp, #24]
    a600:	ldr	w1, [x0, #16]
    a604:	ldr	x0, [sp, #24]
    a608:	str	w1, [x0, #12]
    a60c:	ldr	w0, [sp, #20]
    a610:	cmp	w0, #0x0
    a614:	b.eq	a63c <grub_show_menu+0x24cc>  // b.none
    a618:	ldr	x0, [sp, #24]
    a61c:	ldr	w0, [x0, #8]
    a620:	mov	w5, #0x0                   	// #0
    a624:	mov	w4, #0x0                   	// #0
    a628:	mov	w3, #0x0                   	// #0
    a62c:	mov	w2, #0x0                   	// #0
    a630:	mov	w1, w0
    a634:	ldr	x0, [sp, #24]
    a638:	bl	93e0 <grub_show_menu+0x1270>
    a63c:	mov	w0, #0x1                   	// #1
    a640:	ldp	x29, x30, [sp], #32
    a644:	ret
    a648:	stp	x29, x30, [sp, #-32]!
    a64c:	mov	x29, sp
    a650:	str	x0, [sp, #24]
    a654:	str	w1, [sp, #20]
    a658:	ldr	x0, [sp, #24]
    a65c:	ldr	x2, [x0]
    a660:	ldr	x0, [sp, #24]
    a664:	ldr	w0, [x0, #20]
    a668:	sxtw	x1, w0
    a66c:	mov	x0, x1
    a670:	lsl	x0, x0, #1
    a674:	add	x0, x0, x1
    a678:	lsl	x0, x0, #3
    a67c:	add	x0, x2, x0
    a680:	ldr	w0, [x0, #8]
    a684:	mov	w1, w0
    a688:	ldr	x0, [sp, #24]
    a68c:	bl	8604 <grub_show_menu+0x494>
    a690:	ldr	w0, [sp, #20]
    a694:	cmp	w0, #0x0
    a698:	b.eq	a6c0 <grub_show_menu+0x2550>  // b.none
    a69c:	ldr	x0, [sp, #24]
    a6a0:	ldr	w0, [x0, #8]
    a6a4:	mov	w5, #0x0                   	// #0
    a6a8:	mov	w4, #0x0                   	// #0
    a6ac:	mov	w3, #0x0                   	// #0
    a6b0:	mov	w2, #0x0                   	// #0
    a6b4:	mov	w1, w0
    a6b8:	ldr	x0, [sp, #24]
    a6bc:	bl	93e0 <grub_show_menu+0x1270>
    a6c0:	mov	w0, #0x1                   	// #1
    a6c4:	ldp	x29, x30, [sp], #32
    a6c8:	ret
    a6cc:	stp	x29, x30, [sp, #-96]!
    a6d0:	mov	x29, sp
    a6d4:	str	x19, [sp, #16]
    a6d8:	str	x0, [sp, #40]
    a6dc:	str	w1, [sp, #36]
    a6e0:	ldr	x0, [sp, #40]
    a6e4:	ldr	w0, [x0, #8]
    a6e8:	str	w0, [sp, #84]
    a6ec:	str	wzr, [sp, #80]
    a6f0:	ldr	x0, [sp, #40]
    a6f4:	ldr	x2, [x0]
    a6f8:	ldr	x0, [sp, #40]
    a6fc:	ldr	w0, [x0, #20]
    a700:	sxtw	x1, w0
    a704:	mov	x0, x1
    a708:	lsl	x0, x0, #1
    a70c:	add	x0, x0, x1
    a710:	lsl	x0, x0, #3
    a714:	add	x0, x2, x0
    a718:	str	x0, [sp, #72]
    a71c:	ldr	x0, [sp, #72]
    a720:	ldr	w1, [x0, #8]
    a724:	ldr	x0, [sp, #40]
    a728:	ldr	w0, [x0, #12]
    a72c:	cmp	w1, w0
    a730:	b.le	a9cc <grub_show_menu+0x285c>
    a734:	str	wzr, [sp, #92]
    a738:	b	a798 <grub_show_menu+0x2628>
    a73c:	ldr	x0, [sp, #40]
    a740:	ldr	x2, [x0, #40]
    a744:	ldr	w1, [sp, #92]
    a748:	mov	x0, x1
    a74c:	lsl	x0, x0, #3
    a750:	sub	x0, x0, x1
    a754:	lsl	x0, x0, #3
    a758:	add	x3, x2, x0
    a75c:	ldr	x0, [sp, #40]
    a760:	ldr	x2, [x0, #40]
    a764:	ldr	w1, [sp, #92]
    a768:	mov	x0, x1
    a76c:	lsl	x0, x0, #3
    a770:	sub	x0, x0, x1
    a774:	lsl	x0, x0, #3
    a778:	add	x19, x2, x0
    a77c:	mov	x1, x3
    a780:	ldr	x0, [sp, #72]
    a784:	bl	8574 <grub_show_menu+0x404>
    a788:	str	w0, [x19, #44]
    a78c:	ldr	w0, [sp, #92]
    a790:	add	w0, w0, #0x1
    a794:	str	w0, [sp, #92]
    a798:	ldr	x0, [sp, #40]
    a79c:	ldr	w0, [x0, #48]
    a7a0:	ldr	w1, [sp, #92]
    a7a4:	cmp	w1, w0
    a7a8:	b.cc	a73c <grub_show_menu+0x25cc>  // b.lo, b.ul, b.last
    a7ac:	ldr	x0, [sp, #72]
    a7b0:	ldr	x1, [x0]
    a7b4:	ldr	x0, [sp, #40]
    a7b8:	ldr	w0, [x0, #12]
    a7bc:	sxtw	x0, w0
    a7c0:	lsl	x0, x0, #2
    a7c4:	add	x3, x1, x0
    a7c8:	ldr	x0, [sp, #72]
    a7cc:	ldr	x1, [x0]
    a7d0:	ldr	x0, [sp, #40]
    a7d4:	ldr	w0, [x0, #12]
    a7d8:	sxtw	x0, w0
    a7dc:	add	x0, x0, #0x1
    a7e0:	lsl	x0, x0, #2
    a7e4:	add	x4, x1, x0
    a7e8:	ldr	x0, [sp, #72]
    a7ec:	ldr	w1, [x0, #8]
    a7f0:	ldr	x0, [sp, #40]
    a7f4:	ldr	w0, [x0, #12]
    a7f8:	sub	w0, w1, w0
    a7fc:	sub	w0, w0, #0x1
    a800:	sxtw	x0, w0
    a804:	lsl	x0, x0, #2
    a808:	mov	x2, x0
    a80c:	mov	x1, x4
    a810:	mov	x0, x3
    a814:	bl	0 <grub_memmove>
    a818:	ldr	x0, [sp, #72]
    a81c:	ldr	w0, [x0, #8]
    a820:	sub	w1, w0, #0x1
    a824:	ldr	x0, [sp, #72]
    a828:	str	w1, [x0, #8]
    a82c:	str	wzr, [sp, #92]
    a830:	b	a874 <grub_show_menu+0x2704>
    a834:	ldr	x0, [sp, #72]
    a838:	ldr	x1, [x0, #16]
    a83c:	ldr	w0, [sp, #92]
    a840:	lsl	x0, x0, #3
    a844:	add	x0, x1, x0
    a848:	ldr	x0, [x0]
    a84c:	bl	0 <grub_free>
    a850:	ldr	x0, [sp, #72]
    a854:	ldr	x1, [x0, #16]
    a858:	ldr	w0, [sp, #92]
    a85c:	lsl	x0, x0, #3
    a860:	add	x0, x1, x0
    a864:	str	xzr, [x0]
    a868:	ldr	w0, [sp, #92]
    a86c:	add	w0, w0, #0x1
    a870:	str	w0, [sp, #92]
    a874:	ldr	x0, [sp, #40]
    a878:	ldr	w0, [x0, #48]
    a87c:	ldr	w1, [sp, #92]
    a880:	cmp	w1, w0
    a884:	b.cc	a834 <grub_show_menu+0x26c4>  // b.lo, b.ul, b.last
    a888:	ldr	x0, [sp, #40]
    a88c:	ldr	w0, [x0, #20]
    a890:	str	w0, [sp, #84]
    a894:	ldr	x0, [sp, #40]
    a898:	ldr	w0, [x0, #12]
    a89c:	str	w0, [sp, #80]
    a8a0:	ldr	x0, [sp, #40]
    a8a4:	ldr	w1, [x0, #12]
    a8a8:	ldr	x0, [sp, #40]
    a8ac:	str	w1, [x0, #16]
    a8b0:	ldr	w0, [sp, #36]
    a8b4:	cmp	w0, #0x0
    a8b8:	b.eq	ab84 <grub_show_menu+0x2a14>  // b.none
    a8bc:	str	wzr, [sp, #92]
    a8c0:	b	a9b4 <grub_show_menu+0x2844>
    a8c4:	ldr	x0, [sp, #40]
    a8c8:	ldr	x2, [x0, #40]
    a8cc:	ldr	w1, [sp, #92]
    a8d0:	mov	x0, x1
    a8d4:	lsl	x0, x0, #3
    a8d8:	sub	x0, x0, x1
    a8dc:	lsl	x0, x0, #3
    a8e0:	add	x0, x2, x0
    a8e4:	mov	x1, x0
    a8e8:	ldr	x0, [sp, #72]
    a8ec:	bl	8574 <grub_show_menu+0x404>
    a8f0:	str	w0, [sp, #60]
    a8f4:	ldr	x0, [sp, #40]
    a8f8:	ldr	x2, [x0, #40]
    a8fc:	ldr	w1, [sp, #92]
    a900:	mov	x0, x1
    a904:	lsl	x0, x0, #3
    a908:	sub	x0, x0, x1
    a90c:	lsl	x0, x0, #3
    a910:	add	x0, x2, x0
    a914:	ldr	w0, [x0, #44]
    a918:	ldr	w1, [sp, #60]
    a91c:	cmp	w1, w0
    a920:	b.eq	a968 <grub_show_menu+0x27f8>  // b.none
    a924:	ldr	x0, [sp, #40]
    a928:	ldr	x2, [x0, #40]
    a92c:	ldr	w1, [sp, #92]
    a930:	mov	x0, x1
    a934:	lsl	x0, x0, #3
    a938:	sub	x0, x0, x1
    a93c:	lsl	x0, x0, #3
    a940:	add	x0, x2, x0
    a944:	mov	w6, #0x2                   	// #2
    a948:	mov	w5, #0x0                   	// #0
    a94c:	mov	w4, #0x0                   	// #0
    a950:	ldr	w3, [sp, #80]
    a954:	ldr	w2, [sp, #84]
    a958:	mov	x1, x0
    a95c:	ldr	x0, [sp, #40]
    a960:	bl	8ab0 <grub_show_menu+0x940>
    a964:	b	a9a8 <grub_show_menu+0x2838>
    a968:	ldr	x0, [sp, #40]
    a96c:	ldr	x2, [x0, #40]
    a970:	ldr	w1, [sp, #92]
    a974:	mov	x0, x1
    a978:	lsl	x0, x0, #3
    a97c:	sub	x0, x0, x1
    a980:	lsl	x0, x0, #3
    a984:	add	x0, x2, x0
    a988:	mov	w6, #0x1                   	// #1
    a98c:	mov	w5, #0x0                   	// #0
    a990:	mov	w4, #0x0                   	// #0
    a994:	ldr	w3, [sp, #80]
    a998:	ldr	w2, [sp, #84]
    a99c:	mov	x1, x0
    a9a0:	ldr	x0, [sp, #40]
    a9a4:	bl	8ab0 <grub_show_menu+0x940>
    a9a8:	ldr	w0, [sp, #92]
    a9ac:	add	w0, w0, #0x1
    a9b0:	str	w0, [sp, #92]
    a9b4:	ldr	x0, [sp, #40]
    a9b8:	ldr	w0, [x0, #48]
    a9bc:	ldr	w1, [sp, #92]
    a9c0:	cmp	w1, w0
    a9c4:	b.cc	a8c4 <grub_show_menu+0x2754>  // b.lo, b.ul, b.last
    a9c8:	b	ab84 <grub_show_menu+0x2a14>
    a9cc:	ldr	x0, [sp, #40]
    a9d0:	ldr	w1, [x0, #8]
    a9d4:	ldr	x0, [sp, #40]
    a9d8:	ldr	w0, [x0, #20]
    a9dc:	add	w0, w0, #0x1
    a9e0:	cmp	w1, w0
    a9e4:	b.le	ab84 <grub_show_menu+0x2a14>
    a9e8:	ldr	x0, [sp, #72]
    a9ec:	add	x0, x0, #0x18
    a9f0:	str	x0, [sp, #64]
    a9f4:	ldr	x0, [sp, #64]
    a9f8:	ldr	w0, [x0, #8]
    a9fc:	mov	w1, w0
    aa00:	ldr	x0, [sp, #72]
    aa04:	bl	84d0 <grub_show_menu+0x360>
    aa08:	cmp	w0, #0x0
    aa0c:	b.ne	aa18 <grub_show_menu+0x28a8>  // b.any
    aa10:	mov	w0, #0x0                   	// #0
    aa14:	b	ab88 <grub_show_menu+0x2a18>
    aa18:	ldr	x0, [sp, #72]
    aa1c:	ldr	x1, [x0]
    aa20:	ldr	x0, [sp, #72]
    aa24:	ldr	w0, [x0, #8]
    aa28:	sxtw	x0, w0
    aa2c:	lsl	x0, x0, #2
    aa30:	add	x3, x1, x0
    aa34:	ldr	x0, [sp, #64]
    aa38:	ldr	x1, [x0]
    aa3c:	ldr	x0, [sp, #64]
    aa40:	ldr	w0, [x0, #8]
    aa44:	sxtw	x0, w0
    aa48:	lsl	x0, x0, #2
    aa4c:	mov	x2, x0
    aa50:	mov	x0, x3
    aa54:	bl	0 <grub_memmove>
    aa58:	ldr	x0, [sp, #72]
    aa5c:	ldr	w1, [x0, #8]
    aa60:	ldr	x0, [sp, #64]
    aa64:	ldr	w0, [x0, #8]
    aa68:	add	w1, w1, w0
    aa6c:	ldr	x0, [sp, #72]
    aa70:	str	w1, [x0, #8]
    aa74:	str	wzr, [sp, #88]
    aa78:	b	aabc <grub_show_menu+0x294c>
    aa7c:	ldr	x0, [sp, #72]
    aa80:	ldr	x1, [x0, #16]
    aa84:	ldr	w0, [sp, #88]
    aa88:	lsl	x0, x0, #3
    aa8c:	add	x0, x1, x0
    aa90:	ldr	x0, [x0]
    aa94:	bl	0 <grub_free>
    aa98:	ldr	x0, [sp, #72]
    aa9c:	ldr	x1, [x0, #16]
    aaa0:	ldr	w0, [sp, #88]
    aaa4:	lsl	x0, x0, #3
    aaa8:	add	x0, x1, x0
    aaac:	str	xzr, [x0]
    aab0:	ldr	w0, [sp, #88]
    aab4:	add	w0, w0, #0x1
    aab8:	str	w0, [sp, #88]
    aabc:	ldr	x0, [sp, #40]
    aac0:	ldr	w0, [x0, #48]
    aac4:	ldr	w1, [sp, #88]
    aac8:	cmp	w1, w0
    aacc:	b.cc	aa7c <grub_show_menu+0x290c>  // b.lo, b.ul, b.last
    aad0:	ldr	x0, [sp, #64]
    aad4:	ldr	x0, [x0]
    aad8:	bl	0 <grub_free>
    aadc:	ldr	x0, [sp, #64]
    aae0:	add	x3, x0, #0x18
    aae4:	ldr	x0, [sp, #40]
    aae8:	ldr	w1, [x0, #8]
    aaec:	ldr	x0, [sp, #40]
    aaf0:	ldr	w0, [x0, #20]
    aaf4:	sub	w0, w1, w0
    aaf8:	sub	w0, w0, #0x2
    aafc:	sxtw	x1, w0
    ab00:	mov	x0, x1
    ab04:	lsl	x0, x0, #1
    ab08:	add	x0, x0, x1
    ab0c:	lsl	x0, x0, #3
    ab10:	mov	x2, x0
    ab14:	mov	x1, x3
    ab18:	ldr	x0, [sp, #64]
    ab1c:	bl	0 <grub_memmove>
    ab20:	ldr	x0, [sp, #40]
    ab24:	ldr	w0, [x0, #8]
    ab28:	sub	w1, w0, #0x1
    ab2c:	ldr	x0, [sp, #40]
    ab30:	str	w1, [x0, #8]
    ab34:	ldr	x0, [sp, #40]
    ab38:	ldr	w0, [x0, #20]
    ab3c:	str	w0, [sp, #84]
    ab40:	ldr	x0, [sp, #40]
    ab44:	ldr	w0, [x0, #12]
    ab48:	str	w0, [sp, #80]
    ab4c:	ldr	x0, [sp, #40]
    ab50:	ldr	w1, [x0, #12]
    ab54:	ldr	x0, [sp, #40]
    ab58:	str	w1, [x0, #16]
    ab5c:	ldr	w0, [sp, #36]
    ab60:	cmp	w0, #0x0
    ab64:	b.eq	ab84 <grub_show_menu+0x2a14>  // b.none
    ab68:	mov	w5, #0x2                   	// #2
    ab6c:	mov	w4, #0x1                   	// #1
    ab70:	mov	w3, #0x0                   	// #0
    ab74:	ldr	w2, [sp, #80]
    ab78:	ldr	w1, [sp, #84]
    ab7c:	ldr	x0, [sp, #40]
    ab80:	bl	93e0 <grub_show_menu+0x1270>
    ab84:	mov	w0, #0x1                   	// #1
    ab88:	ldr	x19, [sp, #16]
    ab8c:	ldp	x29, x30, [sp], #96
    ab90:	ret
    ab94:	stp	x29, x30, [sp, #-48]!
    ab98:	mov	x29, sp
    ab9c:	str	x0, [sp, #24]
    aba0:	str	w1, [sp, #20]
    aba4:	ldr	x0, [sp, #24]
    aba8:	ldr	w0, [x0, #12]
    abac:	str	w0, [sp, #44]
    abb0:	ldr	x0, [sp, #24]
    abb4:	ldr	w0, [x0, #20]
    abb8:	str	w0, [sp, #40]
    abbc:	mov	w1, #0x0                   	// #0
    abc0:	ldr	x0, [sp, #24]
    abc4:	bl	a180 <grub_show_menu+0x2010>
    abc8:	cmp	w0, #0x0
    abcc:	b.ne	abd8 <grub_show_menu+0x2a68>  // b.any
    abd0:	mov	w0, #0x0                   	// #0
    abd4:	b	ac20 <grub_show_menu+0x2ab0>
    abd8:	ldr	x0, [sp, #24]
    abdc:	ldr	w0, [x0, #12]
    abe0:	ldr	w1, [sp, #44]
    abe4:	cmp	w1, w0
    abe8:	b.ne	ac00 <grub_show_menu+0x2a90>  // b.any
    abec:	ldr	x0, [sp, #24]
    abf0:	ldr	w0, [x0, #20]
    abf4:	ldr	w1, [sp, #40]
    abf8:	cmp	w1, w0
    abfc:	b.eq	ac1c <grub_show_menu+0x2aac>  // b.none
    ac00:	ldr	w1, [sp, #20]
    ac04:	ldr	x0, [sp, #24]
    ac08:	bl	a6cc <grub_show_menu+0x255c>
    ac0c:	cmp	w0, #0x0
    ac10:	b.ne	ac1c <grub_show_menu+0x2aac>  // b.any
    ac14:	mov	w0, #0x0                   	// #0
    ac18:	b	ac20 <grub_show_menu+0x2ab0>
    ac1c:	mov	w0, #0x1                   	// #1
    ac20:	ldp	x29, x30, [sp], #48
    ac24:	ret
    ac28:	stp	x29, x30, [sp, #-80]!
    ac2c:	mov	x29, sp
    ac30:	str	x19, [sp, #16]
    ac34:	str	x0, [sp, #40]
    ac38:	str	w1, [sp, #36]
    ac3c:	str	w2, [sp, #32]
    ac40:	ldr	x0, [sp, #40]
    ac44:	ldr	x0, [x0, #24]
    ac48:	str	x0, [sp, #64]
    ac4c:	ldr	w0, [sp, #36]
    ac50:	cmp	w0, #0x0
    ac54:	b.ne	ac6c <grub_show_menu+0x2afc>  // b.any
    ac58:	ldr	x0, [sp, #64]
    ac5c:	cmp	x0, #0x0
    ac60:	b.eq	ac6c <grub_show_menu+0x2afc>  // b.none
    ac64:	ldr	x0, [sp, #64]
    ac68:	strb	wzr, [x0]
    ac6c:	ldr	x0, [sp, #40]
    ac70:	ldr	x2, [x0]
    ac74:	ldr	x0, [sp, #40]
    ac78:	ldr	w0, [x0, #20]
    ac7c:	sxtw	x1, w0
    ac80:	mov	x0, x1
    ac84:	lsl	x0, x0, #1
    ac88:	add	x0, x0, x1
    ac8c:	lsl	x0, x0, #3
    ac90:	add	x0, x2, x0
    ac94:	str	x0, [sp, #56]
    ac98:	ldr	x0, [sp, #56]
    ac9c:	ldr	w1, [x0, #8]
    aca0:	ldr	x0, [sp, #40]
    aca4:	ldr	w0, [x0, #12]
    aca8:	sub	w0, w1, w0
    acac:	str	w0, [sp, #52]
    acb0:	ldr	x0, [sp, #64]
    acb4:	cmp	x0, #0x0
    acb8:	b.eq	accc <grub_show_menu+0x2b5c>  // b.none
    acbc:	ldr	x0, [sp, #64]
    acc0:	bl	0 <grub_strlen>
    acc4:	str	w0, [sp, #76]
    acc8:	b	acd0 <grub_show_menu+0x2b60>
    accc:	str	wzr, [sp, #76]
    acd0:	ldr	w0, [sp, #52]
    acd4:	cmp	w0, #0x0
    acd8:	b.le	af2c <grub_show_menu+0x2dbc>
    acdc:	ldr	w1, [sp, #76]
    ace0:	ldr	w0, [sp, #52]
    ace4:	add	w0, w1, w0
    ace8:	add	w0, w0, #0x1
    acec:	sxtw	x0, w0
    acf0:	mov	x1, x0
    acf4:	ldr	x0, [sp, #64]
    acf8:	bl	0 <grub_realloc>
    acfc:	str	x0, [sp, #64]
    ad00:	ldr	x0, [sp, #64]
    ad04:	cmp	x0, #0x0
    ad08:	b.ne	ad14 <grub_show_menu+0x2ba4>  // b.any
    ad0c:	mov	w0, #0x0                   	// #0
    ad10:	b	afc0 <grub_show_menu+0x2e50>
    ad14:	ldrsw	x0, [sp, #76]
    ad18:	ldr	x1, [sp, #64]
    ad1c:	add	x3, x1, x0
    ad20:	ldr	x0, [sp, #56]
    ad24:	ldr	x1, [x0]
    ad28:	ldr	x0, [sp, #40]
    ad2c:	ldr	w0, [x0, #12]
    ad30:	sxtw	x0, w0
    ad34:	lsl	x0, x0, #2
    ad38:	add	x0, x1, x0
    ad3c:	ldrsw	x1, [sp, #52]
    ad40:	mov	x2, x1
    ad44:	mov	x1, x0
    ad48:	mov	x0, x3
    ad4c:	bl	0 <grub_memmove>
    ad50:	ldr	w1, [sp, #76]
    ad54:	ldr	w0, [sp, #52]
    ad58:	add	w0, w1, w0
    ad5c:	sxtw	x0, w0
    ad60:	ldr	x1, [sp, #64]
    ad64:	add	x0, x1, x0
    ad68:	strb	wzr, [x0]
    ad6c:	ldr	x0, [sp, #40]
    ad70:	ldr	x1, [sp, #64]
    ad74:	str	x1, [x0, #24]
    ad78:	str	wzr, [sp, #72]
    ad7c:	b	addc <grub_show_menu+0x2c6c>
    ad80:	ldr	x0, [sp, #40]
    ad84:	ldr	x2, [x0, #40]
    ad88:	ldr	w1, [sp, #72]
    ad8c:	mov	x0, x1
    ad90:	lsl	x0, x0, #3
    ad94:	sub	x0, x0, x1
    ad98:	lsl	x0, x0, #3
    ad9c:	add	x3, x2, x0
    ada0:	ldr	x0, [sp, #40]
    ada4:	ldr	x2, [x0, #40]
    ada8:	ldr	w1, [sp, #72]
    adac:	mov	x0, x1
    adb0:	lsl	x0, x0, #3
    adb4:	sub	x0, x0, x1
    adb8:	lsl	x0, x0, #3
    adbc:	add	x19, x2, x0
    adc0:	mov	x1, x3
    adc4:	ldr	x0, [sp, #56]
    adc8:	bl	8574 <grub_show_menu+0x404>
    adcc:	str	w0, [x19, #44]
    add0:	ldr	w0, [sp, #72]
    add4:	add	w0, w0, #0x1
    add8:	str	w0, [sp, #72]
    addc:	ldr	x0, [sp, #40]
    ade0:	ldr	w0, [x0, #48]
    ade4:	ldr	w1, [sp, #72]
    ade8:	cmp	w1, w0
    adec:	b.cc	ad80 <grub_show_menu+0x2c10>  // b.lo, b.ul, b.last
    adf0:	ldr	x0, [sp, #40]
    adf4:	ldr	w1, [x0, #12]
    adf8:	ldr	x0, [sp, #56]
    adfc:	str	w1, [x0, #8]
    ae00:	ldr	w0, [sp, #32]
    ae04:	cmp	w0, #0x0
    ae08:	b.eq	afbc <grub_show_menu+0x2e4c>  // b.none
    ae0c:	str	wzr, [sp, #72]
    ae10:	b	af14 <grub_show_menu+0x2da4>
    ae14:	ldr	x0, [sp, #40]
    ae18:	ldr	x2, [x0, #40]
    ae1c:	ldr	w1, [sp, #72]
    ae20:	mov	x0, x1
    ae24:	lsl	x0, x0, #3
    ae28:	sub	x0, x0, x1
    ae2c:	lsl	x0, x0, #3
    ae30:	add	x0, x2, x0
    ae34:	mov	x1, x0
    ae38:	ldr	x0, [sp, #56]
    ae3c:	bl	8574 <grub_show_menu+0x404>
    ae40:	str	w0, [sp, #48]
    ae44:	ldr	x0, [sp, #40]
    ae48:	ldr	x2, [x0, #40]
    ae4c:	ldr	w1, [sp, #72]
    ae50:	mov	x0, x1
    ae54:	lsl	x0, x0, #3
    ae58:	sub	x0, x0, x1
    ae5c:	lsl	x0, x0, #3
    ae60:	add	x0, x2, x0
    ae64:	ldr	w0, [x0, #44]
    ae68:	ldr	w1, [sp, #48]
    ae6c:	cmp	w1, w0
    ae70:	b.eq	aec0 <grub_show_menu+0x2d50>  // b.none
    ae74:	ldr	x0, [sp, #40]
    ae78:	ldr	x2, [x0, #40]
    ae7c:	ldr	w1, [sp, #72]
    ae80:	mov	x0, x1
    ae84:	lsl	x0, x0, #3
    ae88:	sub	x0, x0, x1
    ae8c:	lsl	x0, x0, #3
    ae90:	add	x1, x2, x0
    ae94:	ldr	x0, [sp, #40]
    ae98:	ldr	w2, [x0, #20]
    ae9c:	ldr	x0, [sp, #40]
    aea0:	ldr	w0, [x0, #12]
    aea4:	mov	w6, #0x2                   	// #2
    aea8:	mov	w5, #0x1                   	// #1
    aeac:	mov	w4, #0x0                   	// #0
    aeb0:	mov	w3, w0
    aeb4:	ldr	x0, [sp, #40]
    aeb8:	bl	8ab0 <grub_show_menu+0x940>
    aebc:	b	af08 <grub_show_menu+0x2d98>
    aec0:	ldr	x0, [sp, #40]
    aec4:	ldr	x2, [x0, #40]
    aec8:	ldr	w1, [sp, #72]
    aecc:	mov	x0, x1
    aed0:	lsl	x0, x0, #3
    aed4:	sub	x0, x0, x1
    aed8:	lsl	x0, x0, #3
    aedc:	add	x1, x2, x0
    aee0:	ldr	x0, [sp, #40]
    aee4:	ldr	w2, [x0, #20]
    aee8:	ldr	x0, [sp, #40]
    aeec:	ldr	w0, [x0, #12]
    aef0:	mov	w6, #0x1                   	// #1
    aef4:	mov	w5, #0x0                   	// #0
    aef8:	mov	w4, #0x0                   	// #0
    aefc:	mov	w3, w0
    af00:	ldr	x0, [sp, #40]
    af04:	bl	8ab0 <grub_show_menu+0x940>
    af08:	ldr	w0, [sp, #72]
    af0c:	add	w0, w0, #0x1
    af10:	str	w0, [sp, #72]
    af14:	ldr	x0, [sp, #40]
    af18:	ldr	w0, [x0, #48]
    af1c:	ldr	w1, [sp, #72]
    af20:	cmp	w1, w0
    af24:	b.cc	ae14 <grub_show_menu+0x2ca4>  // b.lo, b.ul, b.last
    af28:	b	afbc <grub_show_menu+0x2e4c>
    af2c:	ldr	x0, [sp, #40]
    af30:	ldr	w0, [x0, #20]
    af34:	add	w1, w0, #0x1
    af38:	ldr	x0, [sp, #40]
    af3c:	ldr	w0, [x0, #8]
    af40:	cmp	w1, w0
    af44:	b.ge	afbc <grub_show_menu+0x2e4c>  // b.tcont
    af48:	ldr	w0, [sp, #76]
    af4c:	add	w0, w0, #0x2
    af50:	sxtw	x0, w0
    af54:	mov	x1, x0
    af58:	ldr	x0, [sp, #64]
    af5c:	bl	0 <grub_realloc>
    af60:	str	x0, [sp, #64]
    af64:	ldr	x0, [sp, #64]
    af68:	cmp	x0, #0x0
    af6c:	b.ne	af78 <grub_show_menu+0x2e08>  // b.any
    af70:	mov	w0, #0x0                   	// #0
    af74:	b	afc0 <grub_show_menu+0x2e50>
    af78:	ldrsw	x0, [sp, #76]
    af7c:	ldr	x1, [sp, #64]
    af80:	add	x0, x1, x0
    af84:	mov	w1, #0xa                   	// #10
    af88:	strb	w1, [x0]
    af8c:	ldrsw	x0, [sp, #76]
    af90:	add	x0, x0, #0x1
    af94:	ldr	x1, [sp, #64]
    af98:	add	x0, x1, x0
    af9c:	strb	wzr, [x0]
    afa0:	ldr	x0, [sp, #40]
    afa4:	ldr	x1, [sp, #64]
    afa8:	str	x1, [x0, #24]
    afac:	ldr	w1, [sp, #32]
    afb0:	ldr	x0, [sp, #40]
    afb4:	bl	a6cc <grub_show_menu+0x255c>
    afb8:	b	afc0 <grub_show_menu+0x2e50>
    afbc:	mov	w0, #0x1                   	// #1
    afc0:	ldr	x19, [sp, #16]
    afc4:	ldp	x29, x30, [sp], #80
    afc8:	ret
    afcc:	stp	x29, x30, [sp, #-32]!
    afd0:	mov	x29, sp
    afd4:	str	x0, [sp, #24]
    afd8:	str	w1, [sp, #20]
    afdc:	ldr	x0, [sp, #24]
    afe0:	ldr	x0, [x0, #24]
    afe4:	cmp	x0, #0x0
    afe8:	b.eq	b008 <grub_show_menu+0x2e98>  // b.none
    afec:	ldr	x0, [sp, #24]
    aff0:	ldr	x0, [x0, #24]
    aff4:	ldr	w2, [sp, #20]
    aff8:	mov	x1, x0
    affc:	ldr	x0, [sp, #24]
    b000:	bl	9478 <grub_show_menu+0x1308>
    b004:	b	b00c <grub_show_menu+0x2e9c>
    b008:	mov	w0, #0x1                   	// #1
    b00c:	ldp	x29, x30, [sp], #32
    b010:	ret
    b014:	stp	x29, x30, [sp, #-32]!
    b018:	mov	x29, sp
    b01c:	str	x0, [sp, #24]
    b020:	str	w1, [sp, #20]
    b024:	mov	w2, #0x0                   	// #0
    b028:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b02c:	add	x0, x0, #0x0
    b030:	ldr	x1, [x0]
    b034:	ldr	x0, [sp, #24]
    b038:	bl	9478 <grub_show_menu+0x1308>
    b03c:	cmp	w0, #0x0
    b040:	b.ne	b04c <grub_show_menu+0x2edc>  // b.any
    b044:	mov	w0, #0x0                   	// #0
    b048:	b	b0a0 <grub_show_menu+0x2f30>
    b04c:	mov	w1, #0x0                   	// #0
    b050:	ldr	x0, [sp, #24]
    b054:	bl	a180 <grub_show_menu+0x2010>
    b058:	cmp	w0, #0x0
    b05c:	b.ne	b068 <grub_show_menu+0x2ef8>  // b.any
    b060:	mov	w0, #0x0                   	// #0
    b064:	b	b0a0 <grub_show_menu+0x2f30>
    b068:	ldr	w0, [sp, #20]
    b06c:	cmp	w0, #0x0
    b070:	b.eq	b09c <grub_show_menu+0x2f2c>  // b.none
    b074:	ldr	x0, [sp, #24]
    b078:	ldr	w1, [x0, #20]
    b07c:	ldr	x0, [sp, #24]
    b080:	ldr	w0, [x0, #12]
    b084:	mov	w5, #0x2                   	// #2
    b088:	mov	w4, #0x1                   	// #1
    b08c:	mov	w3, #0x0                   	// #0
    b090:	mov	w2, w0
    b094:	ldr	x0, [sp, #24]
    b098:	bl	93e0 <grub_show_menu+0x1270>
    b09c:	mov	w0, #0x1                   	// #1
    b0a0:	ldp	x29, x30, [sp], #32
    b0a4:	ret
	...
    b0b0:	stp	x29, x30, [sp, #-64]!
    b0b4:	mov	x29, sp
    b0b8:	stp	x19, x20, [sp, #16]
    b0bc:	str	x0, [sp, #40]
    b0c0:	str	w1, [sp, #36]
    b0c4:	str	w2, [sp, #32]
    b0c8:	ldr	w1, [sp, #36]
    b0cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b0d0:	add	x0, x0, #0x0
    b0d4:	ldr	x0, [x0]
    b0d8:	str	w1, [x0]
    b0dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b0e0:	add	x0, x0, #0x0
    b0e4:	ldr	x0, [x0]
    b0e8:	ldr	x19, [x0, #16]
    b0ec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b0f0:	add	x0, x0, #0x0
    b0f4:	ldr	x0, [x0]
    b0f8:	ldr	x20, [x0, #8]
    b0fc:	ldr	x0, [sp, #40]
    b100:	bl	0 <grub_strlen>
    b104:	sxtw	x0, w0
    b108:	add	x0, x20, x0
    b10c:	add	x0, x0, #0x2
    b110:	cmp	x19, x0
    b114:	b.cs	b1bc <grub_show_menu+0x304c>  // b.hs, b.nlast
    b118:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b11c:	add	x0, x0, #0x0
    b120:	ldr	x0, [x0]
    b124:	ldr	x19, [x0, #8]
    b128:	ldr	x0, [sp, #40]
    b12c:	bl	0 <grub_strlen>
    b130:	add	x0, x19, x0
    b134:	add	x0, x0, #0x50
    b138:	str	x0, [sp, #48]
    b13c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b140:	add	x0, x0, #0x0
    b144:	ldr	x0, [x0]
    b148:	ldr	x0, [x0]
    b14c:	ldr	x1, [sp, #48]
    b150:	bl	0 <grub_realloc>
    b154:	str	x0, [sp, #56]
    b158:	ldr	x0, [sp, #56]
    b15c:	cmp	x0, #0x0
    b160:	b.ne	b178 <grub_show_menu+0x3008>  // b.any
    b164:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b168:	add	x0, x0, #0x0
    b16c:	ldr	x0, [x0]
    b170:	str	wzr, [x0]
    b174:	b	b270 <grub_show_menu+0x3100>
    b178:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b17c:	add	x0, x0, #0x0
    b180:	ldr	x0, [x0]
    b184:	ldr	x0, [x0, #8]
    b188:	ldr	x1, [sp, #56]
    b18c:	add	x0, x1, x0
    b190:	strb	wzr, [x0]
    b194:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b198:	add	x0, x0, #0x0
    b19c:	ldr	x0, [x0]
    b1a0:	ldr	x1, [sp, #56]
    b1a4:	str	x1, [x0]
    b1a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b1ac:	add	x0, x0, #0x0
    b1b0:	ldr	x0, [x0]
    b1b4:	ldr	x1, [sp, #48]
    b1b8:	str	x1, [x0, #16]
    b1bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b1c0:	add	x0, x0, #0x0
    b1c4:	ldr	x0, [x0]
    b1c8:	ldr	x1, [x0]
    b1cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b1d0:	add	x0, x0, #0x0
    b1d4:	ldr	x0, [x0]
    b1d8:	ldr	x0, [x0, #8]
    b1dc:	add	x0, x1, x0
    b1e0:	str	x0, [sp, #56]
    b1e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b1e8:	add	x0, x0, #0x0
    b1ec:	ldr	x0, [x0]
    b1f0:	ldr	x0, [x0, #8]
    b1f4:	cmp	x0, #0x0
    b1f8:	b.eq	b234 <grub_show_menu+0x30c4>  // b.none
    b1fc:	ldr	x0, [sp, #56]
    b200:	add	x1, x0, #0x1
    b204:	str	x1, [sp, #56]
    b208:	mov	w1, #0x20                  	// #32
    b20c:	strb	w1, [x0]
    b210:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b214:	add	x0, x0, #0x0
    b218:	ldr	x0, [x0]
    b21c:	ldr	x0, [x0, #8]
    b220:	add	x1, x0, #0x1
    b224:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b228:	add	x0, x0, #0x0
    b22c:	ldr	x0, [x0]
    b230:	str	x1, [x0, #8]
    b234:	ldr	x1, [sp, #40]
    b238:	ldr	x0, [sp, #56]
    b23c:	bl	0 <grub_strcpy>
    b240:	ldr	x0, [sp, #40]
    b244:	bl	0 <grub_strlen>
    b248:	mov	x1, x0
    b24c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b250:	add	x0, x0, #0x0
    b254:	ldr	x0, [x0]
    b258:	ldr	x0, [x0, #8]
    b25c:	add	x1, x1, x0
    b260:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b264:	add	x0, x0, #0x0
    b268:	ldr	x0, [x0]
    b26c:	str	x1, [x0, #8]
    b270:	ldp	x19, x20, [sp, #16]
    b274:	ldp	x29, x30, [sp], #64
    b278:	ret
    b27c:	nop
	...
    b298:	stp	x29, x30, [sp, #-192]!
    b29c:	mov	x29, sp
    b2a0:	str	x19, [sp, #16]
    b2a4:	str	x0, [sp, #40]
    b2a8:	str	w1, [sp, #36]
    b2ac:	str	w2, [sp, #32]
    b2b0:	ldr	w0, [sp, #36]
    b2b4:	cmp	w0, #0x0
    b2b8:	b.eq	b2e4 <grub_show_menu+0x3174>  // b.none
    b2bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b2c0:	add	x0, x0, #0x0
    b2c4:	ldr	x0, [x0]
    b2c8:	ldr	w0, [x0]
    b2cc:	add	w1, w0, #0x1
    b2d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b2d4:	add	x0, x0, #0x0
    b2d8:	ldr	x0, [x0]
    b2dc:	str	w1, [x0]
    b2e0:	b	b2f4 <grub_show_menu+0x3184>
    b2e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b2e8:	add	x0, x0, #0x0
    b2ec:	ldr	x0, [x0]
    b2f0:	str	wzr, [x0]
    b2f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b2f8:	add	x0, x0, #0x0
    b2fc:	ldr	x0, [x0]
    b300:	str	xzr, [x0]
    b304:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b308:	add	x0, x0, #0x0
    b30c:	ldr	x0, [x0]
    b310:	str	xzr, [x0, #8]
    b314:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b318:	add	x0, x0, #0x0
    b31c:	ldr	x0, [x0]
    b320:	str	xzr, [x0, #16]
    b324:	ldr	x0, [sp, #40]
    b328:	ldr	x2, [x0]
    b32c:	ldr	x0, [sp, #40]
    b330:	ldr	w0, [x0, #20]
    b334:	sxtw	x1, w0
    b338:	mov	x0, x1
    b33c:	lsl	x0, x0, #1
    b340:	add	x0, x0, x1
    b344:	lsl	x0, x0, #3
    b348:	add	x0, x2, x0
    b34c:	str	x0, [sp, #176]
    b350:	ldr	x0, [sp, #176]
    b354:	ldr	x2, [x0]
    b358:	ldr	x0, [sp, #40]
    b35c:	ldr	w0, [x0, #12]
    b360:	sxtw	x0, w0
    b364:	mov	x1, x0
    b368:	mov	x0, x2
    b36c:	bl	12d04 <grub_ucs4_to_utf8_alloc>
    b370:	str	x0, [sp, #168]
    b374:	ldr	x0, [sp, #168]
    b378:	cmp	x0, #0x0
    b37c:	b.ne	b388 <grub_show_menu+0x3218>  // b.any
    b380:	mov	w0, #0x1                   	// #1
    b384:	b	badc <grub_show_menu+0x396c>
    b388:	add	x1, sp, #0x3c
    b38c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b390:	add	x0, x0, #0x0
    b394:	ldr	x2, [x0]
    b398:	ldr	x0, [sp, #168]
    b39c:	bl	5aa0 <grub_normal_do_completion>
    b3a0:	str	x0, [sp, #160]
    b3a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b3a8:	add	x0, x0, #0x0
    b3ac:	ldr	x0, [x0]
    b3b0:	ldr	x0, [x0]
    b3b4:	cmp	x0, #0x0
    b3b8:	b.eq	ba78 <grub_show_menu+0x3908>  // b.none
    b3bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b3c0:	add	x0, x0, #0x0
    b3c4:	ldr	x0, [x0]
    b3c8:	ldr	x0, [x0]
    b3cc:	bl	0 <grub_strlen>
    b3d0:	str	x0, [sp, #152]
    b3d4:	ldr	x0, [sp, #152]
    b3d8:	add	x0, x0, #0x1
    b3dc:	lsl	x0, x0, #2
    b3e0:	bl	0 <grub_malloc>
    b3e4:	str	x0, [sp, #144]
    b3e8:	ldr	x0, [sp, #144]
    b3ec:	cmp	x0, #0x0
    b3f0:	b.ne	b410 <grub_show_menu+0x32a0>  // b.any
    b3f4:	bl	0 <grub_print_error>
    b3f8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b3fc:	add	x0, x0, #0x0
    b400:	ldr	x0, [x0]
    b404:	str	wzr, [x0]
    b408:	mov	w0, #0x1                   	// #1
    b40c:	b	badc <grub_show_menu+0x396c>
    b410:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b414:	add	x0, x0, #0x0
    b418:	ldr	x0, [x0]
    b41c:	ldr	x0, [x0]
    b420:	mov	x4, #0x0                   	// #0
    b424:	ldr	x3, [sp, #152]
    b428:	mov	x2, x0
    b42c:	ldr	x1, [sp, #152]
    b430:	ldr	x0, [sp, #144]
    b434:	bl	12ecc <grub_utf8_to_ucs4>
    b438:	str	x0, [sp, #136]
    b43c:	ldr	x0, [sp, #136]
    b440:	lsl	x0, x0, #2
    b444:	ldr	x1, [sp, #144]
    b448:	add	x0, x1, x0
    b44c:	str	wzr, [x0]
    b450:	ldr	w0, [sp, #60]
    b454:	cmp	w0, #0x0
    b458:	b.eq	ba78 <grub_show_menu+0x3908>  // b.none
    b45c:	str	wzr, [sp, #188]
    b460:	b	ba64 <grub_show_menu+0x38f4>
    b464:	ldr	x0, [sp, #40]
    b468:	ldr	x2, [x0, #40]
    b46c:	ldr	w1, [sp, #188]
    b470:	mov	x0, x1
    b474:	lsl	x0, x0, #3
    b478:	sub	x0, x0, x1
    b47c:	lsl	x0, x0, #3
    b480:	add	x0, x2, x0
    b484:	ldr	x0, [x0]
    b488:	bl	8290 <grub_show_menu+0x120>
    b48c:	str	w0, [sp, #184]
    b490:	ldr	w0, [sp, #184]
    b494:	cmp	w0, #0x2
    b498:	b.ls	b4a8 <grub_show_menu+0x3338>  // b.plast
    b49c:	ldr	w0, [sp, #184]
    b4a0:	sub	w0, w0, #0x2
    b4a4:	str	w0, [sp, #184]
    b4a8:	ldr	w0, [sp, #184]
    b4ac:	cmp	w0, #0xf
    b4b0:	b.ls	b4c0 <grub_show_menu+0x3350>  // b.plast
    b4b4:	ldr	w0, [sp, #184]
    b4b8:	sub	w0, w0, #0x6
    b4bc:	str	w0, [sp, #184]
    b4c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b4c4:	add	x0, x0, #0x0
    b4c8:	ldr	x0, [x0]
    b4cc:	ldr	x1, [x0, #8]
    b4d0:	ldr	w0, [sp, #184]
    b4d4:	add	x0, x1, x0
    b4d8:	sub	x1, x0, #0x1
    b4dc:	ldr	w0, [sp, #184]
    b4e0:	udiv	x0, x1, x0
    b4e4:	str	w0, [sp, #132]
    b4e8:	ldr	x0, [sp, #144]
    b4ec:	str	x0, [sp, #120]
    b4f0:	ldr	x0, [sp, #40]
    b4f4:	ldr	x2, [x0, #40]
    b4f8:	ldr	w1, [sp, #188]
    b4fc:	mov	x0, x1
    b500:	lsl	x0, x0, #3
    b504:	sub	x0, x0, x1
    b508:	lsl	x0, x0, #3
    b50c:	add	x0, x2, x0
    b510:	ldr	x0, [x0]
    b514:	bl	82c8 <grub_show_menu+0x158>
    b518:	str	w0, [sp, #56]
    b51c:	ldr	x0, [sp, #40]
    b520:	mov	w1, #0x1                   	// #1
    b524:	str	w1, [x0, #32]
    b528:	ldr	x0, [sp, #40]
    b52c:	ldr	x2, [x0, #40]
    b530:	ldr	w1, [sp, #188]
    b534:	mov	x0, x1
    b538:	lsl	x0, x0, #3
    b53c:	sub	x0, x0, x1
    b540:	lsl	x0, x0, #3
    b544:	add	x0, x2, x0
    b548:	ldr	x3, [x0]
    b54c:	and	w0, w19, #0xffff0000
    b550:	mov	w19, w0
    b554:	ldr	x0, [sp, #40]
    b558:	ldr	x2, [x0, #40]
    b55c:	ldr	w1, [sp, #188]
    b560:	mov	x0, x1
    b564:	lsl	x0, x0, #3
    b568:	sub	x0, x0, x1
    b56c:	lsl	x0, x0, #3
    b570:	add	x0, x2, x0
    b574:	ldr	w0, [x0, #28]
    b578:	and	w0, w0, #0xffff
    b57c:	bfi	w19, w0, #16, #16
    b580:	mov	w1, w19
    b584:	mov	x0, x3
    b588:	bl	8324 <grub_show_menu+0x1b4>
    b58c:	ldr	x0, [sp, #40]
    b590:	ldr	x2, [x0, #40]
    b594:	ldr	w1, [sp, #188]
    b598:	mov	x0, x1
    b59c:	lsl	x0, x0, #3
    b5a0:	sub	x0, x0, x1
    b5a4:	lsl	x0, x0, #3
    b5a8:	add	x0, x2, x0
    b5ac:	ldr	w0, [x0, #32]
    b5b0:	cmp	w0, #0x1
    b5b4:	b.le	b8bc <grub_show_menu+0x374c>
    b5b8:	ldr	x0, [sp, #40]
    b5bc:	ldr	x2, [x0, #40]
    b5c0:	ldr	w1, [sp, #188]
    b5c4:	mov	x0, x1
    b5c8:	lsl	x0, x0, #3
    b5cc:	sub	x0, x0, x1
    b5d0:	lsl	x0, x0, #3
    b5d4:	add	x0, x2, x0
    b5d8:	ldr	x0, [x0]
    b5dc:	mov	x1, x0
    b5e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b5e4:	add	x0, x0, #0x0
    b5e8:	ldr	x0, [x0]
    b5ec:	bl	fd50 <grub_puts_terminal>
    b5f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b5f4:	add	x0, x0, #0x0
    b5f8:	ldr	x0, [x0]
    b5fc:	ldr	w0, [x0]
    b600:	cmp	w0, #0x4
    b604:	b.eq	b7c4 <grub_show_menu+0x3654>  // b.none
    b608:	cmp	w0, #0x4
    b60c:	b.gt	b824 <grub_show_menu+0x36b4>
    b610:	cmp	w0, #0x3
    b614:	b.eq	b704 <grub_show_menu+0x3594>  // b.none
    b618:	cmp	w0, #0x3
    b61c:	b.gt	b824 <grub_show_menu+0x36b4>
    b620:	cmp	w0, #0x2
    b624:	b.eq	b764 <grub_show_menu+0x35f4>  // b.none
    b628:	cmp	w0, #0x2
    b62c:	b.gt	b824 <grub_show_menu+0x36b4>
    b630:	cmp	w0, #0x0
    b634:	b.eq	b644 <grub_show_menu+0x34d4>  // b.none
    b638:	cmp	w0, #0x1
    b63c:	b.eq	b6a4 <grub_show_menu+0x3534>  // b.none
    b640:	b	b824 <grub_show_menu+0x36b4>
    b644:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b648:	add	x0, x0, #0x0
    b64c:	ldr	x0, [x0]
    b650:	str	x0, [sp, #104]
    b654:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b658:	add	x0, x0, #0x0
    b65c:	ldr	x0, [x0]
    b660:	ldr	x1, [x0]
    b664:	ldr	x0, [sp, #104]
    b668:	blr	x1
    b66c:	mov	x3, x0
    b670:	ldr	x0, [sp, #40]
    b674:	ldr	x2, [x0, #40]
    b678:	ldr	w1, [sp, #188]
    b67c:	mov	x0, x1
    b680:	lsl	x0, x0, #3
    b684:	sub	x0, x0, x1
    b688:	lsl	x0, x0, #3
    b68c:	add	x0, x2, x0
    b690:	ldr	x0, [x0]
    b694:	mov	x1, x0
    b698:	mov	x0, x3
    b69c:	bl	fd50 <grub_puts_terminal>
    b6a0:	b	b884 <grub_show_menu+0x3714>
    b6a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b6a8:	add	x0, x0, #0x0
    b6ac:	ldr	x0, [x0]
    b6b0:	str	x0, [sp, #96]
    b6b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b6b8:	add	x0, x0, #0x0
    b6bc:	ldr	x0, [x0]
    b6c0:	ldr	x1, [x0]
    b6c4:	ldr	x0, [sp, #96]
    b6c8:	blr	x1
    b6cc:	mov	x3, x0
    b6d0:	ldr	x0, [sp, #40]
    b6d4:	ldr	x2, [x0, #40]
    b6d8:	ldr	w1, [sp, #188]
    b6dc:	mov	x0, x1
    b6e0:	lsl	x0, x0, #3
    b6e4:	sub	x0, x0, x1
    b6e8:	lsl	x0, x0, #3
    b6ec:	add	x0, x2, x0
    b6f0:	ldr	x0, [x0]
    b6f4:	mov	x1, x0
    b6f8:	mov	x0, x3
    b6fc:	bl	fd50 <grub_puts_terminal>
    b700:	b	b884 <grub_show_menu+0x3714>
    b704:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b708:	add	x0, x0, #0x0
    b70c:	ldr	x0, [x0]
    b710:	str	x0, [sp, #88]
    b714:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b718:	add	x0, x0, #0x0
    b71c:	ldr	x0, [x0]
    b720:	ldr	x1, [x0]
    b724:	ldr	x0, [sp, #88]
    b728:	blr	x1
    b72c:	mov	x3, x0
    b730:	ldr	x0, [sp, #40]
    b734:	ldr	x2, [x0, #40]
    b738:	ldr	w1, [sp, #188]
    b73c:	mov	x0, x1
    b740:	lsl	x0, x0, #3
    b744:	sub	x0, x0, x1
    b748:	lsl	x0, x0, #3
    b74c:	add	x0, x2, x0
    b750:	ldr	x0, [x0]
    b754:	mov	x1, x0
    b758:	mov	x0, x3
    b75c:	bl	fd50 <grub_puts_terminal>
    b760:	b	b884 <grub_show_menu+0x3714>
    b764:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b768:	add	x0, x0, #0x0
    b76c:	ldr	x0, [x0]
    b770:	str	x0, [sp, #80]
    b774:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b778:	add	x0, x0, #0x0
    b77c:	ldr	x0, [x0]
    b780:	ldr	x1, [x0]
    b784:	ldr	x0, [sp, #80]
    b788:	blr	x1
    b78c:	mov	x3, x0
    b790:	ldr	x0, [sp, #40]
    b794:	ldr	x2, [x0, #40]
    b798:	ldr	w1, [sp, #188]
    b79c:	mov	x0, x1
    b7a0:	lsl	x0, x0, #3
    b7a4:	sub	x0, x0, x1
    b7a8:	lsl	x0, x0, #3
    b7ac:	add	x0, x2, x0
    b7b0:	ldr	x0, [x0]
    b7b4:	mov	x1, x0
    b7b8:	mov	x0, x3
    b7bc:	bl	fd50 <grub_puts_terminal>
    b7c0:	b	b884 <grub_show_menu+0x3714>
    b7c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b7c8:	add	x0, x0, #0x0
    b7cc:	ldr	x0, [x0]
    b7d0:	str	x0, [sp, #72]
    b7d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b7d8:	add	x0, x0, #0x0
    b7dc:	ldr	x0, [x0]
    b7e0:	ldr	x1, [x0]
    b7e4:	ldr	x0, [sp, #72]
    b7e8:	blr	x1
    b7ec:	mov	x3, x0
    b7f0:	ldr	x0, [sp, #40]
    b7f4:	ldr	x2, [x0, #40]
    b7f8:	ldr	w1, [sp, #188]
    b7fc:	mov	x0, x1
    b800:	lsl	x0, x0, #3
    b804:	sub	x0, x0, x1
    b808:	lsl	x0, x0, #3
    b80c:	add	x0, x2, x0
    b810:	ldr	x0, [x0]
    b814:	mov	x1, x0
    b818:	mov	x0, x3
    b81c:	bl	fd50 <grub_puts_terminal>
    b820:	b	b884 <grub_show_menu+0x3714>
    b824:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b828:	add	x0, x0, #0x0
    b82c:	ldr	x0, [x0]
    b830:	str	x0, [sp, #64]
    b834:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b838:	add	x0, x0, #0x0
    b83c:	ldr	x0, [x0]
    b840:	ldr	x1, [x0]
    b844:	ldr	x0, [sp, #64]
    b848:	blr	x1
    b84c:	mov	x3, x0
    b850:	ldr	x0, [sp, #40]
    b854:	ldr	x2, [x0, #40]
    b858:	ldr	w1, [sp, #188]
    b85c:	mov	x0, x1
    b860:	lsl	x0, x0, #3
    b864:	sub	x0, x0, x1
    b868:	lsl	x0, x0, #3
    b86c:	add	x0, x2, x0
    b870:	ldr	x0, [x0]
    b874:	mov	x1, x0
    b878:	mov	x0, x3
    b87c:	bl	fd50 <grub_puts_terminal>
    b880:	nop
    b884:	ldr	x0, [sp, #40]
    b888:	ldr	x2, [x0, #40]
    b88c:	ldr	w1, [sp, #188]
    b890:	mov	x0, x1
    b894:	lsl	x0, x0, #3
    b898:	sub	x0, x0, x1
    b89c:	lsl	x0, x0, #3
    b8a0:	add	x0, x2, x0
    b8a4:	ldr	x0, [x0]
    b8a8:	mov	x1, x0
    b8ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b8b0:	add	x0, x0, #0x0
    b8b4:	ldr	x0, [x0]
    b8b8:	bl	fd50 <grub_puts_terminal>
    b8bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    b8c0:	add	x0, x0, #0x0
    b8c4:	ldr	x0, [x0]
    b8c8:	ldr	w0, [x0]
    b8cc:	ldr	w1, [sp, #132]
    b8d0:	udiv	w2, w0, w1
    b8d4:	ldr	w1, [sp, #132]
    b8d8:	mul	w1, w2, w1
    b8dc:	sub	w1, w0, w1
    b8e0:	ldr	w0, [sp, #184]
    b8e4:	mul	w0, w1, w0
    b8e8:	mov	w0, w0
    b8ec:	lsl	x0, x0, #2
    b8f0:	ldr	x1, [sp, #120]
    b8f4:	add	x0, x1, x0
    b8f8:	str	x0, [sp, #120]
    b8fc:	ldr	w0, [sp, #184]
    b900:	lsl	x0, x0, #2
    b904:	ldr	x1, [sp, #120]
    b908:	add	x0, x1, x0
    b90c:	str	x0, [sp, #112]
    b910:	ldr	x1, [sp, #120]
    b914:	ldr	x0, [sp, #144]
    b918:	cmp	x1, x0
    b91c:	b.eq	b954 <grub_show_menu+0x37e4>  // b.none
    b920:	ldr	x0, [sp, #40]
    b924:	ldr	x2, [x0, #40]
    b928:	ldr	w1, [sp, #188]
    b92c:	mov	x0, x1
    b930:	lsl	x0, x0, #3
    b934:	sub	x0, x0, x1
    b938:	lsl	x0, x0, #3
    b93c:	add	x0, x2, x0
    b940:	ldr	x0, [x0]
    b944:	mov	x1, x0
    b948:	mov	w0, #0x2190                	// #8592
    b94c:	bl	1077c <grub_putcode>
    b950:	b	b984 <grub_show_menu+0x3814>
    b954:	ldr	x0, [sp, #40]
    b958:	ldr	x2, [x0, #40]
    b95c:	ldr	w1, [sp, #188]
    b960:	mov	x0, x1
    b964:	lsl	x0, x0, #3
    b968:	sub	x0, x0, x1
    b96c:	lsl	x0, x0, #3
    b970:	add	x0, x2, x0
    b974:	ldr	x0, [x0]
    b978:	mov	x1, x0
    b97c:	mov	w0, #0x20                  	// #32
    b980:	bl	1077c <grub_putcode>
    b984:	ldr	x0, [sp, #136]
    b988:	lsl	x0, x0, #2
    b98c:	ldr	x1, [sp, #144]
    b990:	add	x0, x1, x0
    b994:	ldr	x2, [sp, #112]
    b998:	ldr	x1, [sp, #112]
    b99c:	cmp	x2, x0
    b9a0:	csel	x5, x1, x0, ls  // ls = plast
    b9a4:	ldr	x0, [sp, #40]
    b9a8:	ldr	x2, [x0, #40]
    b9ac:	ldr	w1, [sp, #188]
    b9b0:	mov	x0, x1
    b9b4:	lsl	x0, x0, #3
    b9b8:	sub	x0, x0, x1
    b9bc:	lsl	x0, x0, #3
    b9c0:	add	x0, x2, x0
    b9c4:	ldr	x0, [x0]
    b9c8:	mov	x4, x0
    b9cc:	mov	w3, #0x0                   	// #0
    b9d0:	mov	w2, #0x0                   	// #0
    b9d4:	mov	x1, x5
    b9d8:	ldr	x0, [sp, #120]
    b9dc:	bl	11b50 <grub_print_ucs4>
    b9e0:	ldr	x0, [sp, #136]
    b9e4:	lsl	x0, x0, #2
    b9e8:	ldr	x1, [sp, #144]
    b9ec:	add	x0, x1, x0
    b9f0:	ldr	x1, [sp, #112]
    b9f4:	cmp	x1, x0
    b9f8:	b.cs	ba2c <grub_show_menu+0x38bc>  // b.hs, b.nlast
    b9fc:	ldr	x0, [sp, #40]
    ba00:	ldr	x2, [x0, #40]
    ba04:	ldr	w1, [sp, #188]
    ba08:	mov	x0, x1
    ba0c:	lsl	x0, x0, #3
    ba10:	sub	x0, x0, x1
    ba14:	lsl	x0, x0, #3
    ba18:	add	x0, x2, x0
    ba1c:	ldr	x0, [x0]
    ba20:	mov	x1, x0
    ba24:	mov	w0, #0x2192                	// #8594
    ba28:	bl	1077c <grub_putcode>
    ba2c:	ldr	x0, [sp, #40]
    ba30:	ldr	x2, [x0, #40]
    ba34:	ldr	w1, [sp, #188]
    ba38:	mov	x0, x1
    ba3c:	lsl	x0, x0, #3
    ba40:	sub	x0, x0, x1
    ba44:	lsl	x0, x0, #3
    ba48:	add	x0, x2, x0
    ba4c:	ldr	x0, [x0]
    ba50:	ldr	w1, [sp, #56]
    ba54:	bl	8324 <grub_show_menu+0x1b4>
    ba58:	ldr	w0, [sp, #188]
    ba5c:	add	w0, w0, #0x1
    ba60:	str	w0, [sp, #188]
    ba64:	ldr	x0, [sp, #40]
    ba68:	ldr	w0, [x0, #48]
    ba6c:	ldr	w1, [sp, #188]
    ba70:	cmp	w1, w0
    ba74:	b.cc	b464 <grub_show_menu+0x32f4>  // b.lo, b.ul, b.last
    ba78:	ldr	x0, [sp, #160]
    ba7c:	cmp	x0, #0x0
    ba80:	b.eq	bab4 <grub_show_menu+0x3944>  // b.none
    ba84:	ldr	w2, [sp, #32]
    ba88:	ldr	x1, [sp, #160]
    ba8c:	ldr	x0, [sp, #40]
    ba90:	bl	9478 <grub_show_menu+0x1308>
    ba94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ba98:	add	x0, x0, #0x0
    ba9c:	ldr	x0, [x0]
    baa0:	mov	w1, #0xffffffff            	// #-1
    baa4:	str	w1, [x0]
    baa8:	ldr	x0, [sp, #160]
    baac:	bl	0 <grub_free>
    bab0:	b	bac4 <grub_show_menu+0x3954>
    bab4:	ldr	w0, [sp, #32]
    bab8:	cmp	w0, #0x0
    babc:	b.eq	bac4 <grub_show_menu+0x3954>  // b.none
    bac0:	bl	0 <grub_refresh>
    bac4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bac8:	add	x0, x0, #0x0
    bacc:	ldr	x0, [x0]
    bad0:	ldr	x0, [x0]
    bad4:	bl	0 <grub_free>
    bad8:	mov	w0, #0x1                   	// #1
    badc:	ldr	x19, [sp, #16]
    bae0:	ldp	x29, x30, [sp], #192
    bae4:	ret
	...
    bb58:	stp	x29, x30, [sp, #-64]!
    bb5c:	mov	x29, sp
    bb60:	str	x19, [sp, #16]
    bb64:	str	x0, [sp, #40]
    bb68:	ldr	x0, [sp, #40]
    bb6c:	ldr	x0, [x0]
    bb70:	bl	82c8 <grub_show_menu+0x158>
    bb74:	str	w0, [sp, #48]
    bb78:	ldr	x0, [sp, #40]
    bb7c:	ldr	x2, [x0]
    bb80:	and	w0, w19, #0xffff0000
    bb84:	mov	w19, w0
    bb88:	ldr	x0, [sp, #40]
    bb8c:	ldr	w0, [x0, #28]
    bb90:	and	w0, w0, #0xffff
    bb94:	bfi	w19, w0, #16, #16
    bb98:	mov	w1, w19
    bb9c:	mov	x0, x2
    bba0:	bl	8324 <grub_show_menu+0x1b4>
    bba4:	str	wzr, [sp, #56]
    bba8:	b	bc28 <grub_show_menu+0x3ab8>
    bbac:	str	wzr, [sp, #60]
    bbb0:	b	bbd4 <grub_show_menu+0x3a64>
    bbb4:	ldr	x0, [sp, #40]
    bbb8:	ldr	x0, [x0]
    bbbc:	mov	x1, x0
    bbc0:	mov	w0, #0x20                  	// #32
    bbc4:	bl	1077c <grub_putcode>
    bbc8:	ldr	w0, [sp, #60]
    bbcc:	add	w0, w0, #0x1
    bbd0:	str	w0, [sp, #60]
    bbd4:	ldr	x0, [sp, #40]
    bbd8:	ldr	x0, [x0]
    bbdc:	bl	8290 <grub_show_menu+0x120>
    bbe0:	sub	w0, w0, #0x1
    bbe4:	ldr	w1, [sp, #60]
    bbe8:	cmp	w1, w0
    bbec:	b.cc	bbb4 <grub_show_menu+0x3a44>  // b.lo, b.ul, b.last
    bbf0:	ldr	w0, [sp, #56]
    bbf4:	add	w1, w0, #0x1
    bbf8:	ldr	x0, [sp, #40]
    bbfc:	ldr	w0, [x0, #32]
    bc00:	cmp	w1, w0
    bc04:	b.ge	bc1c <grub_show_menu+0x3aac>  // b.tcont
    bc08:	ldr	x0, [sp, #40]
    bc0c:	ldr	x0, [x0]
    bc10:	mov	x1, x0
    bc14:	mov	w0, #0xa                   	// #10
    bc18:	bl	1077c <grub_putcode>
    bc1c:	ldr	w0, [sp, #56]
    bc20:	add	w0, w0, #0x1
    bc24:	str	w0, [sp, #56]
    bc28:	ldr	x0, [sp, #40]
    bc2c:	ldr	w0, [x0, #32]
    bc30:	ldr	w1, [sp, #56]
    bc34:	cmp	w1, w0
    bc38:	b.lt	bbac <grub_show_menu+0x3a3c>  // b.tstop
    bc3c:	ldr	x0, [sp, #40]
    bc40:	ldr	x0, [x0]
    bc44:	ldr	w1, [sp, #48]
    bc48:	bl	8324 <grub_show_menu+0x1b4>
    bc4c:	ldr	x0, [sp, #40]
    bc50:	ldr	x0, [x0]
    bc54:	bl	82ec <grub_show_menu+0x17c>
    bc58:	nop
    bc5c:	ldr	x19, [sp, #16]
    bc60:	ldp	x29, x30, [sp], #64
    bc64:	ret
    bc68:	stp	x29, x30, [sp, #-48]!
    bc6c:	mov	x29, sp
    bc70:	str	x0, [sp, #24]
    bc74:	str	wzr, [sp, #44]
    bc78:	b	bcac <grub_show_menu+0x3b3c>
    bc7c:	ldr	x0, [sp, #24]
    bc80:	ldr	x2, [x0, #40]
    bc84:	ldr	w1, [sp, #44]
    bc88:	mov	x0, x1
    bc8c:	lsl	x0, x0, #3
    bc90:	sub	x0, x0, x1
    bc94:	lsl	x0, x0, #3
    bc98:	add	x0, x2, x0
    bc9c:	bl	bb58 <grub_show_menu+0x39e8>
    bca0:	ldr	w0, [sp, #44]
    bca4:	add	w0, w0, #0x1
    bca8:	str	w0, [sp, #44]
    bcac:	ldr	x0, [sp, #24]
    bcb0:	ldr	w0, [x0, #48]
    bcb4:	ldr	w1, [sp, #44]
    bcb8:	cmp	w1, w0
    bcbc:	b.cc	bc7c <grub_show_menu+0x3b0c>  // b.lo, b.ul, b.last
    bcc0:	nop
    bcc4:	nop
    bcc8:	ldp	x29, x30, [sp], #48
    bccc:	ret
    bcd0:	stp	x29, x30, [sp, #-96]!
    bcd4:	mov	x29, sp
    bcd8:	str	x0, [sp, #24]
    bcdc:	str	xzr, [sp, #88]
    bce0:	str	xzr, [sp, #40]
    bce4:	bl	11efc <grub_cls>
    bce8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bcec:	add	x0, x0, #0x0
    bcf0:	ldr	x0, [x0]
    bcf4:	bl	0 <grub_printf>
    bcf8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bcfc:	add	x0, x0, #0x0
    bd00:	ldr	x0, [x0]
    bd04:	bl	0 <grub_printf_>
    bd08:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bd0c:	add	x0, x0, #0x0
    bd10:	ldr	x0, [x0]
    bd14:	bl	0 <grub_printf>
    bd18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bd1c:	add	x0, x0, #0x0
    bd20:	ldr	x0, [x0]
    bd24:	ldr	w0, [x0]
    bd28:	str	w0, [sp, #60]
    bd2c:	ldr	x0, [sp, #24]
    bd30:	ldr	w0, [x0, #36]
    bd34:	cmp	w0, #0x0
    bd38:	b.eq	bd68 <grub_show_menu+0x3bf8>  // b.none
    bd3c:	bl	12220 <grub_env_context_open>
    bd40:	mov	x0, #0x10                  	// #16
    bd44:	bl	0 <grub_zalloc>
    bd48:	str	x0, [sp, #88]
    bd4c:	ldr	x0, [sp, #88]
    bd50:	cmp	x0, #0x0
    bd54:	b.ne	bd60 <grub_show_menu+0x3bf0>  // b.any
    bd58:	mov	w0, #0x0                   	// #0
    bd5c:	b	bff0 <grub_show_menu+0x3e80>
    bd60:	ldr	x0, [sp, #88]
    bd64:	bl	12028 <grub_env_set_menu>
    bd68:	str	xzr, [sp, #72]
    bd6c:	str	xzr, [sp, #64]
    bd70:	str	wzr, [sp, #84]
    bd74:	b	bdec <grub_show_menu+0x3c7c>
    bd78:	ldr	x0, [sp, #24]
    bd7c:	ldr	x2, [x0]
    bd80:	ldrsw	x1, [sp, #84]
    bd84:	mov	x0, x1
    bd88:	lsl	x0, x0, #1
    bd8c:	add	x0, x0, x1
    bd90:	lsl	x0, x0, #3
    bd94:	add	x0, x2, x0
    bd98:	ldr	x3, [x0]
    bd9c:	ldr	x0, [sp, #24]
    bda0:	ldr	x2, [x0]
    bda4:	ldrsw	x1, [sp, #84]
    bda8:	mov	x0, x1
    bdac:	lsl	x0, x0, #1
    bdb0:	add	x0, x0, x1
    bdb4:	lsl	x0, x0, #3
    bdb8:	add	x0, x2, x0
    bdbc:	ldr	w0, [x0, #8]
    bdc0:	sxtw	x0, w0
    bdc4:	mov	x1, x0
    bdc8:	mov	x0, x3
    bdcc:	bl	12bf8 <grub_get_num_of_utf8_bytes>
    bdd0:	add	x0, x0, #0x1
    bdd4:	ldr	x1, [sp, #64]
    bdd8:	add	x0, x1, x0
    bddc:	str	x0, [sp, #64]
    bde0:	ldr	w0, [sp, #84]
    bde4:	add	w0, w0, #0x1
    bde8:	str	w0, [sp, #84]
    bdec:	ldr	x0, [sp, #24]
    bdf0:	ldr	w0, [x0, #8]
    bdf4:	ldr	w1, [sp, #84]
    bdf8:	cmp	w1, w0
    bdfc:	b.lt	bd78 <grub_show_menu+0x3c08>  // b.tstop
    be00:	ldr	x0, [sp, #64]
    be04:	add	x0, x0, #0x1
    be08:	bl	0 <grub_malloc>
    be0c:	str	x0, [sp, #48]
    be10:	ldr	x0, [sp, #48]
    be14:	cmp	x0, #0x0
    be18:	b.ne	be24 <grub_show_menu+0x3cb4>  // b.any
    be1c:	mov	w0, #0x0                   	// #0
    be20:	b	bff0 <grub_show_menu+0x3e80>
    be24:	str	wzr, [sp, #84]
    be28:	b	bed8 <grub_show_menu+0x3d68>
    be2c:	ldr	x0, [sp, #24]
    be30:	ldr	x2, [x0]
    be34:	ldrsw	x1, [sp, #84]
    be38:	mov	x0, x1
    be3c:	lsl	x0, x0, #1
    be40:	add	x0, x0, x1
    be44:	lsl	x0, x0, #3
    be48:	add	x0, x2, x0
    be4c:	ldr	x4, [x0]
    be50:	ldr	x0, [sp, #24]
    be54:	ldr	x2, [x0]
    be58:	ldrsw	x1, [sp, #84]
    be5c:	mov	x0, x1
    be60:	lsl	x0, x0, #1
    be64:	add	x0, x0, x1
    be68:	lsl	x0, x0, #3
    be6c:	add	x0, x2, x0
    be70:	ldr	w0, [x0, #8]
    be74:	sxtw	x5, w0
    be78:	ldr	x1, [sp, #48]
    be7c:	ldr	x0, [sp, #72]
    be80:	add	x2, x1, x0
    be84:	ldr	x1, [sp, #64]
    be88:	ldr	x0, [sp, #72]
    be8c:	sub	x0, x1, x0
    be90:	mov	x3, x0
    be94:	mov	x1, x5
    be98:	mov	x0, x4
    be9c:	bl	12b10 <grub_ucs4_to_utf8>
    bea0:	mov	x1, x0
    bea4:	ldr	x0, [sp, #72]
    bea8:	add	x0, x0, x1
    beac:	str	x0, [sp, #72]
    beb0:	ldr	x0, [sp, #72]
    beb4:	add	x1, x0, #0x1
    beb8:	str	x1, [sp, #72]
    bebc:	ldr	x1, [sp, #48]
    bec0:	add	x0, x1, x0
    bec4:	mov	w1, #0xa                   	// #10
    bec8:	strb	w1, [x0]
    becc:	ldr	w0, [sp, #84]
    bed0:	add	w0, w0, #0x1
    bed4:	str	w0, [sp, #84]
    bed8:	ldr	x0, [sp, #24]
    bedc:	ldr	w0, [x0, #8]
    bee0:	ldr	w1, [sp, #84]
    bee4:	cmp	w1, w0
    bee8:	b.lt	be2c <grub_show_menu+0x3cbc>  // b.tstop
    beec:	ldr	x1, [sp, #48]
    bef0:	ldr	x0, [sp, #72]
    bef4:	add	x0, x1, x0
    bef8:	strb	wzr, [x0]
    befc:	add	x0, sp, #0x28
    bf00:	mov	x2, x0
    bf04:	mov	w1, #0x0                   	// #0
    bf08:	ldr	x0, [sp, #48]
    bf0c:	bl	19df8 <grub_script_execute_new_scope>
    bf10:	ldr	x0, [sp, #48]
    bf14:	bl	0 <grub_free>
    bf18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bf1c:	add	x0, x0, #0x0
    bf20:	ldr	x0, [x0]
    bf24:	ldr	w0, [x0]
    bf28:	ldr	w1, [sp, #60]
    bf2c:	cmp	w1, w0
    bf30:	b.eq	bf38 <grub_show_menu+0x3dc8>  // b.none
    bf34:	bl	6604 <grub_wait_after_message>
    bf38:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bf3c:	add	x0, x0, #0x0
    bf40:	ldr	x0, [x0]
    bf44:	ldr	w0, [x0]
    bf48:	cmp	w0, #0x0
    bf4c:	b.ne	bf74 <grub_show_menu+0x3e04>  // b.any
    bf50:	bl	0 <grub_loader_is_loaded>
    bf54:	cmp	w0, #0x0
    bf58:	b.eq	bf74 <grub_show_menu+0x3e04>  // b.none
    bf5c:	mov	x2, #0x0                   	// #0
    bf60:	mov	w1, #0x0                   	// #0
    bf64:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bf68:	add	x0, x0, #0x0
    bf6c:	ldr	x0, [x0]
    bf70:	bl	83c8 <grub_show_menu+0x258>
    bf74:	ldr	x0, [sp, #24]
    bf78:	ldr	w0, [x0, #36]
    bf7c:	cmp	w0, #0x0
    bf80:	b.eq	bfbc <grub_show_menu+0x3e4c>  // b.none
    bf84:	ldr	x0, [sp, #88]
    bf88:	cmp	x0, #0x0
    bf8c:	b.eq	bfb8 <grub_show_menu+0x3e48>  // b.none
    bf90:	ldr	x0, [sp, #88]
    bf94:	ldr	w0, [x0]
    bf98:	cmp	w0, #0x0
    bf9c:	b.eq	bfb8 <grub_show_menu+0x3e48>  // b.none
    bfa0:	mov	w2, #0x0                   	// #0
    bfa4:	mov	w1, #0x1                   	// #1
    bfa8:	ldr	x0, [sp, #88]
    bfac:	bl	8170 <grub_show_menu>
    bfb0:	ldr	x0, [sp, #88]
    bfb4:	bl	168 <grub_normal_free_menu>
    bfb8:	bl	12280 <grub_env_context_close>
    bfbc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bfc0:	add	x0, x0, #0x0
    bfc4:	ldr	x0, [x0]
    bfc8:	ldr	w0, [x0]
    bfcc:	cmp	w0, #0x0
    bfd0:	b.eq	bfec <grub_show_menu+0x3e7c>  // b.none
    bfd4:	bl	0 <grub_print_error>
    bfd8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    bfdc:	add	x0, x0, #0x0
    bfe0:	ldr	x0, [x0]
    bfe4:	str	wzr, [x0]
    bfe8:	bl	6604 <grub_wait_after_message>
    bfec:	mov	w0, #0x1                   	// #1
    bff0:	ldp	x29, x30, [sp], #96
    bff4:	ret
	...

000000000000c028 <grub_menu_entry_run>:
    c028:	stp	x29, x30, [sp, #-96]!
    c02c:	mov	x29, sp
    c030:	str	x19, [sp, #16]
    c034:	str	x0, [sp, #40]
    c038:	str	wzr, [sp, #76]
    c03c:	mov	x0, #0x0                   	// #0
    c040:	bl	4170 <grub_auth_check_authentication>
    c044:	str	w0, [sp, #76]
    c048:	ldr	w0, [sp, #76]
    c04c:	cmp	w0, #0x0
    c050:	b.eq	c06c <grub_menu_entry_run+0x44>  // b.none
    c054:	bl	0 <grub_print_error>
    c058:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c05c:	add	x0, x0, #0x0
    c060:	ldr	x0, [x0]
    c064:	str	wzr, [x0]
    c068:	b	c8d0 <grub_menu_entry_run+0x8a8>
    c06c:	ldr	x0, [sp, #40]
    c070:	bl	9e80 <grub_show_menu+0x1d10>
    c074:	str	x0, [sp, #64]
    c078:	ldr	x0, [sp, #64]
    c07c:	cmp	x0, #0x0
    c080:	b.eq	c8cc <grub_menu_entry_run+0x8a4>  // b.none
    c084:	ldr	x0, [sp, #64]
    c088:	str	xzr, [x0, #40]
    c08c:	ldr	x0, [sp, #64]
    c090:	ldr	x0, [x0, #40]
    c094:	bl	0 <grub_free>
    c098:	ldr	x0, [sp, #64]
    c09c:	str	wzr, [x0, #48]
    c0a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c0a4:	add	x0, x0, #0x0
    c0a8:	ldr	x0, [x0]
    c0ac:	ldr	x0, [x0]
    c0b0:	str	x0, [sp, #80]
    c0b4:	b	c0d8 <grub_menu_entry_run+0xb0>
    c0b8:	ldr	x0, [sp, #64]
    c0bc:	ldr	w0, [x0, #48]
    c0c0:	add	w1, w0, #0x1
    c0c4:	ldr	x0, [sp, #64]
    c0c8:	str	w1, [x0, #48]
    c0cc:	ldr	x0, [sp, #80]
    c0d0:	ldr	x0, [x0]
    c0d4:	str	x0, [sp, #80]
    c0d8:	ldr	x0, [sp, #80]
    c0dc:	cmp	x0, #0x0
    c0e0:	b.ne	c0b8 <grub_menu_entry_run+0x90>  // b.any
    c0e4:	str	wzr, [sp, #88]
    c0e8:	b	c1a8 <grub_menu_entry_run+0x180>
    c0ec:	ldr	x0, [sp, #64]
    c0f0:	ldr	x2, [x0]
    c0f4:	ldr	w1, [sp, #88]
    c0f8:	mov	x0, x1
    c0fc:	lsl	x0, x0, #1
    c100:	add	x0, x0, x1
    c104:	lsl	x0, x0, #3
    c108:	add	x0, x2, x0
    c10c:	ldr	x0, [x0, #16]
    c110:	bl	0 <grub_free>
    c114:	ldr	x0, [sp, #64]
    c118:	ldr	w0, [x0, #48]
    c11c:	mov	w0, w0
    c120:	lsl	x3, x0, #3
    c124:	ldr	x0, [sp, #64]
    c128:	ldr	x2, [x0]
    c12c:	ldr	w1, [sp, #88]
    c130:	mov	x0, x1
    c134:	lsl	x0, x0, #1
    c138:	add	x0, x0, x1
    c13c:	lsl	x0, x0, #3
    c140:	add	x19, x2, x0
    c144:	mov	x0, x3
    c148:	bl	0 <grub_zalloc>
    c14c:	str	x0, [x19, #16]
    c150:	ldr	x0, [sp, #64]
    c154:	ldr	x2, [x0]
    c158:	ldr	w1, [sp, #88]
    c15c:	mov	x0, x1
    c160:	lsl	x0, x0, #1
    c164:	add	x0, x0, x1
    c168:	lsl	x0, x0, #3
    c16c:	add	x0, x2, x0
    c170:	ldr	x0, [x0, #16]
    c174:	cmp	x0, #0x0
    c178:	b.ne	c19c <grub_menu_entry_run+0x174>  // b.any
    c17c:	bl	0 <grub_print_error>
    c180:	ldr	x0, [sp, #64]
    c184:	bl	9d68 <grub_show_menu+0x1bf8>
    c188:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c18c:	add	x0, x0, #0x0
    c190:	ldr	x0, [x0]
    c194:	str	wzr, [x0]
    c198:	b	c8d0 <grub_menu_entry_run+0x8a8>
    c19c:	ldr	w0, [sp, #88]
    c1a0:	add	w0, w0, #0x1
    c1a4:	str	w0, [sp, #88]
    c1a8:	ldr	x0, [sp, #64]
    c1ac:	ldr	w0, [x0, #8]
    c1b0:	mov	w1, w0
    c1b4:	ldr	w0, [sp, #88]
    c1b8:	cmp	w0, w1
    c1bc:	b.cc	c0ec <grub_menu_entry_run+0xc4>  // b.lo, b.ul, b.last
    c1c0:	ldr	x0, [sp, #64]
    c1c4:	ldr	w0, [x0, #48]
    c1c8:	mov	w1, w0
    c1cc:	mov	x0, x1
    c1d0:	lsl	x0, x0, #3
    c1d4:	sub	x0, x0, x1
    c1d8:	lsl	x0, x0, #3
    c1dc:	bl	0 <grub_zalloc>
    c1e0:	mov	x1, x0
    c1e4:	ldr	x0, [sp, #64]
    c1e8:	str	x1, [x0, #40]
    c1ec:	ldr	x0, [sp, #64]
    c1f0:	ldr	x0, [x0, #40]
    c1f4:	cmp	x0, #0x0
    c1f8:	b.ne	c21c <grub_menu_entry_run+0x1f4>  // b.any
    c1fc:	bl	0 <grub_print_error>
    c200:	ldr	x0, [sp, #64]
    c204:	bl	9d68 <grub_show_menu+0x1bf8>
    c208:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c20c:	add	x0, x0, #0x0
    c210:	ldr	x0, [x0]
    c214:	str	wzr, [x0]
    c218:	b	c8d0 <grub_menu_entry_run+0x8a8>
    c21c:	str	wzr, [sp, #88]
    c220:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c224:	add	x0, x0, #0x0
    c228:	ldr	x0, [x0]
    c22c:	ldr	x0, [x0]
    c230:	str	x0, [sp, #80]
    c234:	b	c29c <grub_menu_entry_run+0x274>
    c238:	ldr	x0, [sp, #64]
    c23c:	ldr	x2, [x0, #40]
    c240:	ldr	w1, [sp, #88]
    c244:	mov	x0, x1
    c248:	lsl	x0, x0, #3
    c24c:	sub	x0, x0, x1
    c250:	lsl	x0, x0, #3
    c254:	add	x0, x2, x0
    c258:	ldr	x1, [sp, #80]
    c25c:	str	x1, [x0]
    c260:	ldr	x0, [sp, #64]
    c264:	ldr	x2, [x0, #40]
    c268:	ldr	w1, [sp, #88]
    c26c:	mov	x0, x1
    c270:	lsl	x0, x0, #3
    c274:	sub	x0, x0, x1
    c278:	lsl	x0, x0, #3
    c27c:	add	x0, x2, x0
    c280:	str	wzr, [x0, #8]
    c284:	ldr	w0, [sp, #88]
    c288:	add	w0, w0, #0x1
    c28c:	str	w0, [sp, #88]
    c290:	ldr	x0, [sp, #80]
    c294:	ldr	x0, [x0]
    c298:	str	x0, [sp, #80]
    c29c:	ldr	x0, [sp, #80]
    c2a0:	cmp	x0, #0x0
    c2a4:	b.ne	c238 <grub_menu_entry_run+0x210>  // b.any
    c2a8:	str	wzr, [sp, #88]
    c2ac:	b	c318 <grub_menu_entry_run+0x2f0>
    c2b0:	ldr	x0, [sp, #64]
    c2b4:	ldr	x2, [x0, #40]
    c2b8:	ldr	w1, [sp, #88]
    c2bc:	mov	x0, x1
    c2c0:	lsl	x0, x0, #3
    c2c4:	sub	x0, x0, x1
    c2c8:	lsl	x0, x0, #3
    c2cc:	add	x0, x2, x0
    c2d0:	add	x4, x0, #0xc
    c2d4:	ldr	x0, [sp, #64]
    c2d8:	ldr	x2, [x0, #40]
    c2dc:	ldr	w1, [sp, #88]
    c2e0:	mov	x0, x1
    c2e4:	lsl	x0, x0, #3
    c2e8:	sub	x0, x0, x1
    c2ec:	lsl	x0, x0, #3
    c2f0:	add	x0, x2, x0
    c2f4:	ldr	x0, [x0]
    c2f8:	mov	x3, x0
    c2fc:	mov	x2, x4
    c300:	mov	w1, #0x1                   	// #1
    c304:	mov	w0, #0x0                   	// #0
    c308:	bl	d90c <grub_menu_init_page>
    c30c:	ldr	w0, [sp, #88]
    c310:	add	w0, w0, #0x1
    c314:	str	w0, [sp, #88]
    c318:	ldr	x0, [sp, #64]
    c31c:	ldr	w0, [x0, #48]
    c320:	ldr	w1, [sp, #88]
    c324:	cmp	w1, w0
    c328:	b.cc	c2b0 <grub_menu_entry_run+0x288>  // b.lo, b.ul, b.last
    c32c:	mov	w5, #0x2                   	// #2
    c330:	mov	w4, #0x1                   	// #1
    c334:	mov	w3, #0x1                   	// #1
    c338:	mov	w2, #0x0                   	// #0
    c33c:	mov	w1, #0x0                   	// #0
    c340:	ldr	x0, [sp, #64]
    c344:	bl	93e0 <grub_show_menu+0x1270>
    c348:	str	wzr, [sp, #88]
    c34c:	b	c388 <grub_menu_entry_run+0x360>
    c350:	ldr	x0, [sp, #64]
    c354:	ldr	x2, [x0, #40]
    c358:	ldr	w1, [sp, #88]
    c35c:	mov	x0, x1
    c360:	lsl	x0, x0, #3
    c364:	sub	x0, x0, x1
    c368:	lsl	x0, x0, #3
    c36c:	add	x0, x2, x0
    c370:	ldr	x0, [x0]
    c374:	mov	w1, #0x1                   	// #1
    c378:	bl	8354 <grub_show_menu+0x1e4>
    c37c:	ldr	w0, [sp, #88]
    c380:	add	w0, w0, #0x1
    c384:	str	w0, [sp, #88]
    c388:	ldr	x0, [sp, #64]
    c38c:	ldr	w0, [x0, #48]
    c390:	ldr	w1, [sp, #88]
    c394:	cmp	w1, w0
    c398:	b.cc	c350 <grub_menu_entry_run+0x328>  // b.lo, b.ul, b.last
    c39c:	str	wzr, [sp, #92]
    c3a0:	bl	0 <grub_getkey>
    c3a4:	str	w0, [sp, #60]
    c3a8:	ldr	x0, [sp, #64]
    c3ac:	ldr	w0, [x0, #32]
    c3b0:	cmp	w0, #0x0
    c3b4:	b.eq	c3c8 <grub_menu_entry_run+0x3a0>  // b.none
    c3b8:	ldr	x0, [sp, #64]
    c3bc:	bl	bc68 <grub_show_menu+0x3af8>
    c3c0:	ldr	x0, [sp, #64]
    c3c4:	str	wzr, [x0, #32]
    c3c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c3cc:	add	x0, x0, #0x0
    c3d0:	ldr	x0, [x0]
    c3d4:	ldr	w0, [x0]
    c3d8:	cmp	w0, #0x0
    c3dc:	b.eq	c3ec <grub_menu_entry_run+0x3c4>  // b.none
    c3e0:	ldr	x0, [sp, #64]
    c3e4:	bl	9d68 <grub_show_menu+0x1bf8>
    c3e8:	b	c8d0 <grub_menu_entry_run+0x8a8>
    c3ec:	ldr	w1, [sp, #60]
    c3f0:	mov	w0, #0x79                  	// #121
    c3f4:	movk	w0, #0x200, lsl #16
    c3f8:	cmp	w1, w0
    c3fc:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c400:	ldr	w1, [sp, #60]
    c404:	mov	w0, #0x61                  	// #97
    c408:	movk	w0, #0x200, lsl #16
    c40c:	cmp	w1, w0
    c410:	b.ge	c5e0 <grub_menu_entry_run+0x5b8>  // b.tcont
    c414:	ldr	w1, [sp, #60]
    c418:	mov	w0, #0x53                  	// #83
    c41c:	movk	w0, #0x80, lsl #16
    c420:	cmp	w1, w0
    c424:	b.eq	c6d4 <grub_menu_entry_run+0x6ac>  // b.none
    c428:	ldr	w1, [sp, #60]
    c42c:	mov	w0, #0x53                  	// #83
    c430:	movk	w0, #0x80, lsl #16
    c434:	cmp	w1, w0
    c438:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c43c:	ldr	w1, [sp, #60]
    c440:	mov	w0, #0x50                  	// #80
    c444:	movk	w0, #0x80, lsl #16
    c448:	cmp	w1, w0
    c44c:	b.eq	c62c <grub_menu_entry_run+0x604>  // b.none
    c450:	ldr	w1, [sp, #60]
    c454:	mov	w0, #0x50                  	// #80
    c458:	movk	w0, #0x80, lsl #16
    c45c:	cmp	w1, w0
    c460:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c464:	ldr	w1, [sp, #60]
    c468:	mov	w0, #0x4f                  	// #79
    c46c:	movk	w0, #0x80, lsl #16
    c470:	cmp	w1, w0
    c474:	b.eq	c68c <grub_menu_entry_run+0x664>  // b.none
    c478:	ldr	w1, [sp, #60]
    c47c:	mov	w0, #0x4f                  	// #79
    c480:	movk	w0, #0x80, lsl #16
    c484:	cmp	w1, w0
    c488:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c48c:	ldr	w1, [sp, #60]
    c490:	mov	w0, #0x4d                  	// #77
    c494:	movk	w0, #0x80, lsl #16
    c498:	cmp	w1, w0
    c49c:	b.eq	c644 <grub_menu_entry_run+0x61c>  // b.none
    c4a0:	ldr	w1, [sp, #60]
    c4a4:	mov	w0, #0x4d                  	// #77
    c4a8:	movk	w0, #0x80, lsl #16
    c4ac:	cmp	w1, w0
    c4b0:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c4b4:	ldr	w1, [sp, #60]
    c4b8:	mov	w0, #0x4b                  	// #75
    c4bc:	movk	w0, #0x80, lsl #16
    c4c0:	cmp	w1, w0
    c4c4:	b.eq	c65c <grub_menu_entry_run+0x634>  // b.none
    c4c8:	ldr	w1, [sp, #60]
    c4cc:	mov	w0, #0x4b                  	// #75
    c4d0:	movk	w0, #0x80, lsl #16
    c4d4:	cmp	w1, w0
    c4d8:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c4dc:	ldr	w1, [sp, #60]
    c4e0:	mov	w0, #0x48                  	// #72
    c4e4:	movk	w0, #0x80, lsl #16
    c4e8:	cmp	w1, w0
    c4ec:	b.eq	c614 <grub_menu_entry_run+0x5ec>  // b.none
    c4f0:	ldr	w1, [sp, #60]
    c4f4:	mov	w0, #0x48                  	// #72
    c4f8:	movk	w0, #0x80, lsl #16
    c4fc:	cmp	w1, w0
    c500:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c504:	ldr	w1, [sp, #60]
    c508:	mov	w0, #0x47                  	// #71
    c50c:	movk	w0, #0x80, lsl #16
    c510:	cmp	w1, w0
    c514:	b.eq	c674 <grub_menu_entry_run+0x64c>  // b.none
    c518:	ldr	w1, [sp, #60]
    c51c:	mov	w0, #0x47                  	// #71
    c520:	movk	w0, #0x80, lsl #16
    c524:	cmp	w1, w0
    c528:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c52c:	ldr	w1, [sp, #60]
    c530:	mov	w0, #0x44                  	// #68
    c534:	movk	w0, #0x80, lsl #16
    c538:	cmp	w1, w0
    c53c:	b.eq	c7a4 <grub_menu_entry_run+0x77c>  // b.none
    c540:	ldr	w1, [sp, #60]
    c544:	mov	w0, #0x44                  	// #68
    c548:	movk	w0, #0x80, lsl #16
    c54c:	cmp	w1, w0
    c550:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c554:	ldr	w1, [sp, #60]
    c558:	mov	w0, #0x3c                  	// #60
    c55c:	movk	w0, #0x80, lsl #16
    c560:	cmp	w1, w0
    c564:	b.eq	c794 <grub_menu_entry_run+0x76c>  // b.none
    c568:	ldr	w1, [sp, #60]
    c56c:	mov	w0, #0x3c                  	// #60
    c570:	movk	w0, #0x80, lsl #16
    c574:	cmp	w1, w0
    c578:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c57c:	ldr	w0, [sp, #60]
    c580:	cmp	w0, #0x1b
    c584:	b.eq	c788 <grub_menu_entry_run+0x760>  // b.none
    c588:	ldr	w0, [sp, #60]
    c58c:	cmp	w0, #0x1b
    c590:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c594:	ldr	w0, [sp, #60]
    c598:	cmp	w0, #0xd
    c59c:	b.eq	c764 <grub_menu_entry_run+0x73c>  // b.none
    c5a0:	ldr	w0, [sp, #60]
    c5a4:	cmp	w0, #0xd
    c5a8:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c5ac:	ldr	w0, [sp, #60]
    c5b0:	cmp	w0, #0xa
    c5b4:	b.eq	c764 <grub_menu_entry_run+0x73c>  // b.none
    c5b8:	ldr	w0, [sp, #60]
    c5bc:	cmp	w0, #0xa
    c5c0:	b.gt	c7b0 <grub_menu_entry_run+0x788>
    c5c4:	ldr	w0, [sp, #60]
    c5c8:	cmp	w0, #0x8
    c5cc:	b.eq	c6ec <grub_menu_entry_run+0x6c4>  // b.none
    c5d0:	ldr	w0, [sp, #60]
    c5d4:	cmp	w0, #0x9
    c5d8:	b.eq	c6a4 <grub_menu_entry_run+0x67c>  // b.none
    c5dc:	b	c7b0 <grub_menu_entry_run+0x788>
    c5e0:	ldr	w1, [sp, #60]
    c5e4:	mov	w0, #0xff9f                	// #65439
    c5e8:	movk	w0, #0xfdff, lsl #16
    c5ec:	add	w0, w1, w0
    c5f0:	cmp	w0, #0x18
    c5f4:	b.hi	c7b0 <grub_menu_entry_run+0x788>  // b.pmore
    c5f8:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    c5fc:	add	x1, x1, #0x0
    c600:	ldr	x1, [x1]
    c604:	ldr	w0, [x1, w0, uxtw #2]
    c608:	adr	x1, c614 <grub_menu_entry_run+0x5ec>
    c60c:	add	x0, x1, w0, sxtw #2
    c610:	br	x0
    c614:	mov	w1, #0x1                   	// #1
    c618:	ldr	x0, [sp, #64]
    c61c:	bl	a3c0 <grub_show_menu+0x2250>
    c620:	cmp	w0, #0x0
    c624:	b.ne	c7f8 <grub_menu_entry_run+0x7d0>  // b.any
    c628:	b	c874 <grub_menu_entry_run+0x84c>
    c62c:	mov	w1, #0x1                   	// #1
    c630:	ldr	x0, [sp, #64]
    c634:	bl	a4b0 <grub_show_menu+0x2340>
    c638:	cmp	w0, #0x0
    c63c:	b.ne	c800 <grub_menu_entry_run+0x7d8>  // b.any
    c640:	b	c874 <grub_menu_entry_run+0x84c>
    c644:	mov	w1, #0x1                   	// #1
    c648:	ldr	x0, [sp, #64]
    c64c:	bl	9fac <grub_show_menu+0x1e3c>
    c650:	cmp	w0, #0x0
    c654:	b.ne	c808 <grub_menu_entry_run+0x7e0>  // b.any
    c658:	b	c874 <grub_menu_entry_run+0x84c>
    c65c:	mov	w1, #0x1                   	// #1
    c660:	ldr	x0, [sp, #64]
    c664:	bl	a180 <grub_show_menu+0x2010>
    c668:	cmp	w0, #0x0
    c66c:	b.ne	c810 <grub_menu_entry_run+0x7e8>  // b.any
    c670:	b	c874 <grub_menu_entry_run+0x84c>
    c674:	mov	w1, #0x1                   	// #1
    c678:	ldr	x0, [sp, #64]
    c67c:	bl	a5e4 <grub_show_menu+0x2474>
    c680:	cmp	w0, #0x0
    c684:	b.ne	c818 <grub_menu_entry_run+0x7f0>  // b.any
    c688:	b	c874 <grub_menu_entry_run+0x84c>
    c68c:	mov	w1, #0x1                   	// #1
    c690:	ldr	x0, [sp, #64]
    c694:	bl	a648 <grub_show_menu+0x24d8>
    c698:	cmp	w0, #0x0
    c69c:	b.ne	c820 <grub_menu_entry_run+0x7f8>  // b.any
    c6a0:	b	c874 <grub_menu_entry_run+0x84c>
    c6a4:	ldr	w1, [sp, #92]
    c6a8:	ldr	w0, [sp, #60]
    c6ac:	cmp	w1, w0
    c6b0:	cset	w0, eq  // eq = none
    c6b4:	and	w0, w0, #0xff
    c6b8:	mov	w2, #0x1                   	// #1
    c6bc:	mov	w1, w0
    c6c0:	ldr	x0, [sp, #64]
    c6c4:	bl	b298 <grub_show_menu+0x3128>
    c6c8:	cmp	w0, #0x0
    c6cc:	b.ne	c828 <grub_menu_entry_run+0x800>  // b.any
    c6d0:	b	c874 <grub_menu_entry_run+0x84c>
    c6d4:	mov	w1, #0x1                   	// #1
    c6d8:	ldr	x0, [sp, #64]
    c6dc:	bl	a6cc <grub_show_menu+0x255c>
    c6e0:	cmp	w0, #0x0
    c6e4:	b.ne	c830 <grub_menu_entry_run+0x808>  // b.any
    c6e8:	b	c874 <grub_menu_entry_run+0x84c>
    c6ec:	mov	w1, #0x1                   	// #1
    c6f0:	ldr	x0, [sp, #64]
    c6f4:	bl	ab94 <grub_show_menu+0x2a24>
    c6f8:	cmp	w0, #0x0
    c6fc:	b.ne	c838 <grub_menu_entry_run+0x810>  // b.any
    c700:	b	c874 <grub_menu_entry_run+0x84c>
    c704:	ldr	w1, [sp, #92]
    c708:	ldr	w0, [sp, #60]
    c70c:	cmp	w1, w0
    c710:	cset	w0, eq  // eq = none
    c714:	and	w0, w0, #0xff
    c718:	mov	w2, #0x1                   	// #1
    c71c:	mov	w1, w0
    c720:	ldr	x0, [sp, #64]
    c724:	bl	ac28 <grub_show_menu+0x2ab8>
    c728:	cmp	w0, #0x0
    c72c:	b.ne	c840 <grub_menu_entry_run+0x818>  // b.any
    c730:	b	c874 <grub_menu_entry_run+0x84c>
    c734:	mov	w1, #0x1                   	// #1
    c738:	ldr	x0, [sp, #64]
    c73c:	bl	afcc <grub_show_menu+0x2e5c>
    c740:	cmp	w0, #0x0
    c744:	b.ne	c848 <grub_menu_entry_run+0x820>  // b.any
    c748:	b	c874 <grub_menu_entry_run+0x84c>
    c74c:	mov	w1, #0x1                   	// #1
    c750:	ldr	x0, [sp, #64]
    c754:	bl	b014 <grub_show_menu+0x2ea4>
    c758:	cmp	w0, #0x0
    c75c:	b.ne	c850 <grub_menu_entry_run+0x828>  // b.any
    c760:	b	c874 <grub_menu_entry_run+0x84c>
    c764:	mov	w2, #0x1                   	// #1
    c768:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c76c:	add	x0, x0, #0x0
    c770:	ldr	x1, [x0]
    c774:	ldr	x0, [sp, #64]
    c778:	bl	9478 <grub_show_menu+0x1308>
    c77c:	cmp	w0, #0x0
    c780:	b.ne	c858 <grub_menu_entry_run+0x830>  // b.any
    c784:	b	c874 <grub_menu_entry_run+0x84c>
    c788:	ldr	x0, [sp, #64]
    c78c:	bl	9d68 <grub_show_menu+0x1bf8>
    c790:	b	c8d0 <grub_menu_entry_run+0x8a8>
    c794:	mov	w1, #0x0                   	// #0
    c798:	mov	w0, #0x1                   	// #1
    c79c:	bl	e54 <grub_cmdline_run>
    c7a0:	b	c08c <grub_menu_entry_run+0x64>
    c7a4:	ldr	x0, [sp, #64]
    c7a8:	bl	bcd0 <grub_show_menu+0x3b60>
    c7ac:	b	c08c <grub_menu_entry_run+0x64>
    c7b0:	ldr	w0, [sp, #60]
    c7b4:	bl	8210 <grub_show_menu+0xa0>
    c7b8:	cmp	w0, #0x0
    c7bc:	b.eq	c860 <grub_menu_entry_run+0x838>  // b.none
    c7c0:	ldr	w0, [sp, #60]
    c7c4:	and	w0, w0, #0xff
    c7c8:	strb	w0, [sp, #56]
    c7cc:	strb	wzr, [sp, #57]
    c7d0:	add	x0, sp, #0x38
    c7d4:	mov	w2, #0x1                   	// #1
    c7d8:	mov	x1, x0
    c7dc:	ldr	x0, [sp, #64]
    c7e0:	bl	9478 <grub_show_menu+0x1308>
    c7e4:	cmp	w0, #0x0
    c7e8:	b.eq	c870 <grub_menu_entry_run+0x848>  // b.none
    c7ec:	b	c860 <grub_menu_entry_run+0x838>
    c7f0:	nop
    c7f4:	b	c864 <grub_menu_entry_run+0x83c>
    c7f8:	nop
    c7fc:	b	c864 <grub_menu_entry_run+0x83c>
    c800:	nop
    c804:	b	c864 <grub_menu_entry_run+0x83c>
    c808:	nop
    c80c:	b	c864 <grub_menu_entry_run+0x83c>
    c810:	nop
    c814:	b	c864 <grub_menu_entry_run+0x83c>
    c818:	nop
    c81c:	b	c864 <grub_menu_entry_run+0x83c>
    c820:	nop
    c824:	b	c864 <grub_menu_entry_run+0x83c>
    c828:	nop
    c82c:	b	c864 <grub_menu_entry_run+0x83c>
    c830:	nop
    c834:	b	c864 <grub_menu_entry_run+0x83c>
    c838:	nop
    c83c:	b	c864 <grub_menu_entry_run+0x83c>
    c840:	nop
    c844:	b	c864 <grub_menu_entry_run+0x83c>
    c848:	nop
    c84c:	b	c864 <grub_menu_entry_run+0x83c>
    c850:	nop
    c854:	b	c864 <grub_menu_entry_run+0x83c>
    c858:	nop
    c85c:	b	c864 <grub_menu_entry_run+0x83c>
    c860:	nop
    c864:	ldr	w0, [sp, #60]
    c868:	str	w0, [sp, #92]
    c86c:	b	c3a0 <grub_menu_entry_run+0x378>
    c870:	nop
    c874:	ldr	x0, [sp, #64]
    c878:	bl	9d68 <grub_show_menu+0x1bf8>
    c87c:	bl	11efc <grub_cls>
    c880:	bl	0 <grub_print_error>
    c884:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c888:	add	x0, x0, #0x0
    c88c:	ldr	x0, [x0]
    c890:	str	wzr, [x0]
    c894:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c898:	add	x0, x0, #0x0
    c89c:	ldr	x0, [x0]
    c8a0:	ldr	x1, [x0]
    c8a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c8a8:	add	x0, x0, #0x0
    c8ac:	ldr	x0, [x0]
    c8b0:	blr	x1
    c8b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    c8b8:	add	x0, x0, #0x0
    c8bc:	ldr	x0, [x0]
    c8c0:	bl	0 <grub_printf_>
    c8c4:	bl	0 <grub_getkey>
    c8c8:	b	c8d0 <grub_menu_entry_run+0x8a8>
    c8cc:	nop
    c8d0:	ldr	x19, [sp, #16]
    c8d4:	ldp	x29, x30, [sp], #96
    c8d8:	ret
    c8dc:	nop
	...
    c918:	stp	x29, x30, [sp, #-32]!
    c91c:	mov	x29, sp
    c920:	str	x0, [sp, #24]
    c924:	ldr	x0, [sp, #24]
    c928:	ldrh	w0, [x0, #6]
    c92c:	ubfx	x0, x0, #3, #8
    c930:	and	w0, w0, #0xff
    c934:	cmp	w0, #0x2
    c938:	b.ls	c948 <grub_menu_entry_run+0x920>  // b.plast
    c93c:	ldr	x0, [sp, #24]
    c940:	ldr	x0, [x0, #24]
    c944:	bl	0 <grub_free>
    c948:	ldr	x0, [sp, #24]
    c94c:	ldrh	w1, [x0, #6]
    c950:	and	w1, w1, #0xfffff807
    c954:	strh	w1, [x0, #6]
    c958:	nop
    c95c:	ldp	x29, x30, [sp], #32
    c960:	ret
    c964:	stp	x29, x30, [sp, #-32]!
    c968:	mov	x29, sp
    c96c:	str	x0, [sp, #24]
    c970:	ldr	x0, [sp, #24]
    c974:	ldr	x1, [x0, #56]
    c978:	ldr	x0, [sp, #24]
    c97c:	blr	x1
    c980:	and	w0, w0, #0xffff
    c984:	cmp	w0, #0x0
    c988:	b.eq	c990 <grub_menu_entry_run+0x968>  // b.none
    c98c:	b	c994 <grub_menu_entry_run+0x96c>
    c990:	mov	w0, #0x50                  	// #80
    c994:	ldp	x29, x30, [sp], #32
    c998:	ret
    c99c:	stp	x29, x30, [sp, #-32]!
    c9a0:	mov	x29, sp
    c9a4:	str	x0, [sp, #24]
    c9a8:	ldr	x0, [sp, #24]
    c9ac:	ldr	x1, [x0, #56]
    c9b0:	ldr	x0, [sp, #24]
    c9b4:	blr	x1
    c9b8:	lsr	w0, w0, #16
    c9bc:	and	w0, w0, #0xffff
    c9c0:	cmp	w0, #0x0
    c9c4:	b.eq	c9cc <grub_menu_entry_run+0x9a4>  // b.none
    c9c8:	b	c9d0 <grub_menu_entry_run+0x9a8>
    c9cc:	mov	w0, #0x18                  	// #24
    c9d0:	ldp	x29, x30, [sp], #32
    c9d4:	ret
    c9d8:	stp	x29, x30, [sp, #-32]!
    c9dc:	mov	x29, sp
    c9e0:	str	x0, [sp, #24]
    c9e4:	ldr	x0, [sp, #24]
    c9e8:	ldr	x0, [x0, #104]
    c9ec:	cmp	x0, #0x0
    c9f0:	b.eq	ca04 <grub_menu_entry_run+0x9dc>  // b.none
    c9f4:	ldr	x0, [sp, #24]
    c9f8:	ldr	x1, [x0, #104]
    c9fc:	ldr	x0, [sp, #24]
    ca00:	blr	x1
    ca04:	nop
    ca08:	ldp	x29, x30, [sp], #32
    ca0c:	ret
    ca10:	stp	x29, x30, [sp, #-32]!
    ca14:	mov	x29, sp
    ca18:	str	x0, [sp, #24]
    ca1c:	str	w1, [sp, #16]
    ca20:	ldr	x0, [sp, #24]
    ca24:	ldr	x2, [x0, #72]
    ca28:	ldr	w1, [sp, #16]
    ca2c:	ldr	x0, [sp, #24]
    ca30:	blr	x2
    ca34:	nop
    ca38:	ldp	x29, x30, [sp], #32
    ca3c:	ret
    ca40:	stp	x29, x30, [sp, #-32]!
    ca44:	mov	x29, sp
    ca48:	str	x0, [sp, #24]
    ca4c:	str	w1, [sp, #20]
    ca50:	ldr	x0, [sp, #24]
    ca54:	ldr	x0, [x0, #88]
    ca58:	cmp	x0, #0x0
    ca5c:	b.eq	ca74 <grub_menu_entry_run+0xa4c>  // b.none
    ca60:	ldr	x0, [sp, #24]
    ca64:	ldr	x2, [x0, #88]
    ca68:	ldr	w1, [sp, #20]
    ca6c:	ldr	x0, [sp, #24]
    ca70:	blr	x2
    ca74:	nop
    ca78:	ldp	x29, x30, [sp], #32
    ca7c:	ret
    ca80:	stp	x29, x30, [sp, #-32]!
    ca84:	mov	x29, sp
    ca88:	str	x0, [sp, #24]
    ca8c:	str	w1, [sp, #20]
    ca90:	ldr	x0, [sp, #24]
    ca94:	ldr	x0, [x0, #96]
    ca98:	cmp	x0, #0x0
    ca9c:	b.eq	cab4 <grub_menu_entry_run+0xa8c>  // b.none
    caa0:	ldr	x0, [sp, #24]
    caa4:	ldr	x2, [x0, #96]
    caa8:	ldr	w1, [sp, #20]
    caac:	ldr	x0, [sp, #24]
    cab0:	blr	x2
    cab4:	nop
    cab8:	ldp	x29, x30, [sp], #32
    cabc:	ret
    cac0:	stp	x29, x30, [sp, #-32]!
    cac4:	mov	x29, sp
    cac8:	str	x0, [sp, #24]
    cacc:	ldr	x0, [sp, #24]
    cad0:	ldr	x0, [x0, #80]
    cad4:	cmp	x0, #0x0
    cad8:	b.eq	caf0 <grub_menu_entry_run+0xac8>  // b.none
    cadc:	ldr	x0, [sp, #24]
    cae0:	ldr	x1, [x0, #80]
    cae4:	ldr	x0, [sp, #24]
    cae8:	blr	x1
    caec:	b	cb04 <grub_menu_entry_run+0xadc>
    caf0:	ldr	x1, [sp, #24]
    caf4:	mov	w0, #0xa                   	// #10
    caf8:	bl	1077c <grub_putcode>
    cafc:	ldr	x0, [sp, #24]
    cb00:	bl	c9d8 <grub_menu_entry_run+0x9b0>
    cb04:	nop
    cb08:	ldp	x29, x30, [sp], #32
    cb0c:	ret
    cb10:	stp	x29, x30, [sp, #-32]!
    cb14:	mov	x29, sp
    cb18:	str	x0, [sp, #24]
    cb1c:	ldr	x0, [sp, #24]
    cb20:	ldr	w0, [x0]
    cb24:	ubfx	x0, x0, #0, #23
    cb28:	bl	13798 <grub_unicode_get_comb_type>
    cb2c:	cmp	w0, #0x0
    cb30:	b.eq	cb3c <grub_menu_entry_run+0xb14>  // b.none
    cb34:	mov	x0, #0x0                   	// #0
    cb38:	b	cb40 <grub_menu_entry_run+0xb18>
    cb3c:	mov	x0, #0x1                   	// #1
    cb40:	ldp	x29, x30, [sp], #32
    cb44:	ret
    cb48:	stp	x29, x30, [sp, #-32]!
    cb4c:	mov	x29, sp
    cb50:	str	x0, [sp, #24]
    cb54:	str	x1, [sp, #16]
    cb58:	ldr	x0, [sp, #16]
    cb5c:	ldr	w0, [x0]
    cb60:	and	w0, w0, #0x7fffff
    cb64:	cmp	w0, #0x9
    cb68:	b.ne	cb74 <grub_menu_entry_run+0xb4c>  // b.any
    cb6c:	mov	x0, #0x8                   	// #8
    cb70:	b	cbe8 <grub_menu_entry_run+0xbc0>
    cb74:	ldr	x0, [sp, #24]
    cb78:	ldr	x0, [x0, #48]
    cb7c:	cmp	x0, #0x0
    cb80:	b.eq	cb9c <grub_menu_entry_run+0xb74>  // b.none
    cb84:	ldr	x0, [sp, #24]
    cb88:	ldr	x2, [x0, #48]
    cb8c:	ldr	x1, [sp, #16]
    cb90:	ldr	x0, [sp, #24]
    cb94:	blr	x2
    cb98:	b	cbe8 <grub_menu_entry_run+0xbc0>
    cb9c:	ldr	x0, [sp, #24]
    cba0:	ldr	w0, [x0, #120]
    cba4:	and	w0, w0, #0x38
    cba8:	cmp	w0, #0x10
    cbac:	b.eq	cbd8 <grub_menu_entry_run+0xbb0>  // b.none
    cbb0:	ldr	x0, [sp, #24]
    cbb4:	ldr	w0, [x0, #120]
    cbb8:	and	w0, w0, #0x38
    cbbc:	cmp	w0, #0x18
    cbc0:	b.eq	cbd8 <grub_menu_entry_run+0xbb0>  // b.none
    cbc4:	ldr	x0, [sp, #24]
    cbc8:	ldr	w0, [x0, #120]
    cbcc:	and	w0, w0, #0x38
    cbd0:	cmp	w0, #0x20
    cbd4:	b.ne	cbe4 <grub_menu_entry_run+0xbbc>  // b.any
    cbd8:	ldr	x0, [sp, #16]
    cbdc:	bl	cb10 <grub_menu_entry_run+0xae8>
    cbe0:	b	cbe8 <grub_menu_entry_run+0xbc0>
    cbe4:	mov	x0, #0x1                   	// #1
    cbe8:	ldp	x29, x30, [sp], #32
    cbec:	ret
    cbf0:	stp	x29, x30, [sp, #-32]!
    cbf4:	mov	x29, sp
    cbf8:	str	x0, [sp, #24]
    cbfc:	str	w1, [sp, #20]
    cc00:	b	cc10 <grub_menu_entry_run+0xbe8>
    cc04:	ldr	x1, [sp, #24]
    cc08:	mov	w0, #0x20                  	// #32
    cc0c:	bl	1077c <grub_putcode>
    cc10:	ldr	w0, [sp, #20]
    cc14:	sub	w0, w0, #0x1
    cc18:	str	w0, [sp, #20]
    cc1c:	ldr	w0, [sp, #20]
    cc20:	cmp	w0, #0x0
    cc24:	b.ge	cc04 <grub_menu_entry_run+0xbdc>  // b.tcont
    cc28:	nop
    cc2c:	nop
    cc30:	ldp	x29, x30, [sp], #32
    cc34:	ret
    cc38:	sub	sp, sp, #0x10
    cc3c:	str	x0, [sp, #8]
    cc40:	ldr	x0, [sp, #8]
    cc44:	ldr	w1, [x0, #8]
    cc48:	ldr	x0, [sp, #8]
    cc4c:	ldr	w0, [x0, #12]
    cc50:	add	w0, w1, w0
    cc54:	add	sp, sp, #0x10
    cc58:	ret

000000000000cc5c <grub_getstringwidth>:
    cc5c:	stp	x29, x30, [sp, #-96]!
    cc60:	mov	x29, sp
    cc64:	str	x0, [sp, #40]
    cc68:	str	x1, [sp, #32]
    cc6c:	str	x2, [sp, #24]
    cc70:	str	xzr, [sp, #88]
    cc74:	b	cce0 <grub_getstringwidth+0x84>
    cc78:	ldrh	w0, [sp, #62]
    cc7c:	and	w0, w0, #0xfffff807
    cc80:	strh	w0, [sp, #62]
    cc84:	ldr	x1, [sp, #32]
    cc88:	ldr	x0, [sp, #40]
    cc8c:	sub	x0, x1, x0
    cc90:	asr	x0, x0, #2
    cc94:	mov	x1, x0
    cc98:	add	x0, sp, #0x38
    cc9c:	mov	x2, x0
    cca0:	ldr	x0, [sp, #40]
    cca4:	bl	13ab0 <grub_unicode_aglomerate_comb>
    cca8:	lsl	x0, x0, #2
    ccac:	ldr	x1, [sp, #40]
    ccb0:	add	x0, x1, x0
    ccb4:	str	x0, [sp, #40]
    ccb8:	add	x0, sp, #0x38
    ccbc:	mov	x1, x0
    ccc0:	ldr	x0, [sp, #24]
    ccc4:	bl	cb48 <grub_menu_entry_run+0xb20>
    ccc8:	mov	x1, x0
    cccc:	ldr	x0, [sp, #88]
    ccd0:	add	x0, x1, x0
    ccd4:	str	x0, [sp, #88]
    ccd8:	add	x0, sp, #0x38
    ccdc:	bl	c918 <grub_menu_entry_run+0x8f0>
    cce0:	ldr	x1, [sp, #40]
    cce4:	ldr	x0, [sp, #32]
    cce8:	cmp	x1, x0
    ccec:	b.cc	cc78 <grub_getstringwidth+0x1c>  // b.lo, b.ul, b.last
    ccf0:	ldr	x0, [sp, #88]
    ccf4:	ldp	x29, x30, [sp], #96
    ccf8:	ret
    ccfc:	sub	sp, sp, #0x60
    cd00:	stp	x29, x30, [sp, #16]
    cd04:	add	x29, sp, #0x10
    cd08:	str	x0, [sp, #56]
    cd0c:	str	w1, [sp, #52]
    cd10:	str	w2, [sp, #48]
    cd14:	str	x3, [sp, #40]
    cd18:	str	w4, [sp, #36]
    cd1c:	ldr	x0, [sp, #56]
    cd20:	bl	0 <grub_strlen>
    cd24:	add	x0, x0, #0x2
    cd28:	str	x0, [sp, #80]
    cd2c:	str	wzr, [sp, #92]
    cd30:	ldr	x0, [sp, #80]
    cd34:	lsl	x0, x0, #2
    cd38:	bl	0 <grub_malloc>
    cd3c:	str	x0, [sp, #72]
    cd40:	ldr	x0, [sp, #72]
    cd44:	cmp	x0, #0x0
    cd48:	b.ne	cd54 <grub_getstringwidth+0xf8>  // b.any
    cd4c:	mov	w0, #0x0                   	// #0
    cd50:	b	cdec <grub_getstringwidth+0x190>
    cd54:	mov	x4, #0x0                   	// #0
    cd58:	mov	x3, #0xffffffffffffffff    	// #-1
    cd5c:	ldr	x2, [sp, #56]
    cd60:	ldr	x1, [sp, #80]
    cd64:	ldr	x0, [sp, #72]
    cd68:	bl	12ecc <grub_utf8_to_ucs4>
    cd6c:	str	x0, [sp, #80]
    cd70:	ldr	x0, [sp, #80]
    cd74:	lsl	x0, x0, #2
    cd78:	ldr	x1, [sp, #72]
    cd7c:	add	x0, x1, x0
    cd80:	str	x0, [sp, #64]
    cd84:	ldr	x0, [sp, #64]
    cd88:	str	wzr, [x0]
    cd8c:	ldr	w0, [sp, #36]
    cd90:	cmp	w0, #0x0
    cd94:	b.eq	cdb8 <grub_getstringwidth+0x15c>  // b.none
    cd98:	ldr	x4, [sp, #40]
    cd9c:	ldr	w3, [sp, #48]
    cda0:	ldr	w2, [sp, #52]
    cda4:	ldr	x1, [sp, #64]
    cda8:	ldr	x0, [sp, #72]
    cdac:	bl	11bbc <grub_ucs4_count_lines>
    cdb0:	str	w0, [sp, #92]
    cdb4:	b	cde0 <grub_getstringwidth+0x184>
    cdb8:	str	xzr, [sp]
    cdbc:	mov	w7, #0x0                   	// #0
    cdc0:	mov	w6, #0xffffffff            	// #-1
    cdc4:	mov	w5, #0x0                   	// #0
    cdc8:	ldr	x4, [sp, #40]
    cdcc:	ldr	w3, [sp, #48]
    cdd0:	ldr	w2, [sp, #52]
    cdd4:	ldr	x1, [sp, #64]
    cdd8:	ldr	x0, [sp, #72]
    cddc:	bl	11ac8 <grub_print_ucs4_menu>
    cde0:	ldr	x0, [sp, #72]
    cde4:	bl	0 <grub_free>
    cde8:	ldr	w0, [sp, #92]
    cdec:	ldp	x29, x30, [sp, #16]
    cdf0:	add	sp, sp, #0x60
    cdf4:	ret

000000000000cdf8 <grub_print_message_indented>:
    cdf8:	stp	x29, x30, [sp, #-48]!
    cdfc:	mov	x29, sp
    ce00:	str	x0, [sp, #40]
    ce04:	str	w1, [sp, #36]
    ce08:	str	w2, [sp, #32]
    ce0c:	str	x3, [sp, #24]
    ce10:	mov	w4, #0x0                   	// #0
    ce14:	ldr	x3, [sp, #24]
    ce18:	ldr	w2, [sp, #32]
    ce1c:	ldr	w1, [sp, #36]
    ce20:	ldr	x0, [sp, #40]
    ce24:	bl	ccfc <grub_getstringwidth+0xa0>
    ce28:	nop
    ce2c:	ldp	x29, x30, [sp], #48
    ce30:	ret
    ce34:	stp	x29, x30, [sp, #-96]!
    ce38:	mov	x29, sp
    ce3c:	stp	x19, x20, [sp, #16]
    ce40:	stp	x21, x22, [sp, #32]
    ce44:	str	x23, [sp, #48]
    ce48:	str	x0, [sp, #72]
    ce4c:	str	x1, [sp, #64]
    ce50:	mov	w1, #0x1                   	// #1
    ce54:	ldr	x0, [sp, #72]
    ce58:	bl	ca40 <grub_menu_entry_run+0xa18>
    ce5c:	ldr	x0, [sp, #64]
    ce60:	ldr	w0, [x0, #8]
    ce64:	and	w0, w0, #0xffff
    ce68:	sub	w0, w0, #0x1
    ce6c:	and	w0, w0, #0xffff
    ce70:	bfxil	w23, w0, #0, #16
    ce74:	ldr	x0, [sp, #64]
    ce78:	ldr	w0, [x0, #4]
    ce7c:	and	w0, w0, #0xffff
    ce80:	sub	w0, w0, #0x1
    ce84:	and	w0, w0, #0xffff
    ce88:	bfi	w23, w0, #16, #16
    ce8c:	mov	w1, w23
    ce90:	ldr	x0, [sp, #72]
    ce94:	bl	ca10 <grub_menu_entry_run+0x9e8>
    ce98:	ldr	x1, [sp, #72]
    ce9c:	mov	w0, #0x250f                	// #9487
    cea0:	bl	1077c <grub_putcode>
    cea4:	str	wzr, [sp, #92]
    cea8:	b	cec4 <grub_print_message_indented+0xcc>
    ceac:	ldr	x1, [sp, #72]
    ceb0:	mov	w0, #0x2501                	// #9473
    ceb4:	bl	1077c <grub_putcode>
    ceb8:	ldr	w0, [sp, #92]
    cebc:	add	w0, w0, #0x1
    cec0:	str	w0, [sp, #92]
    cec4:	ldr	x0, [sp, #64]
    cec8:	ldr	w0, [x0, #12]
    cecc:	ldr	w1, [sp, #92]
    ced0:	cmp	w1, w0
    ced4:	b.le	ceac <grub_print_message_indented+0xb4>
    ced8:	ldr	x1, [sp, #72]
    cedc:	mov	w0, #0x2513                	// #9491
    cee0:	bl	1077c <grub_putcode>
    cee4:	str	wzr, [sp, #92]
    cee8:	b	cfac <grub_print_message_indented+0x1b4>
    ceec:	ldr	x0, [sp, #64]
    cef0:	ldr	w0, [x0, #8]
    cef4:	and	w0, w0, #0xffff
    cef8:	sub	w0, w0, #0x1
    cefc:	and	w0, w0, #0xffff
    cf00:	bfxil	w21, w0, #0, #16
    cf04:	ldr	x0, [sp, #64]
    cf08:	ldr	w0, [x0, #4]
    cf0c:	and	w1, w0, #0xffff
    cf10:	ldr	w0, [sp, #92]
    cf14:	and	w0, w0, #0xffff
    cf18:	add	w0, w1, w0
    cf1c:	and	w0, w0, #0xffff
    cf20:	bfi	w21, w0, #16, #16
    cf24:	mov	w1, w21
    cf28:	ldr	x0, [sp, #72]
    cf2c:	bl	ca10 <grub_menu_entry_run+0x9e8>
    cf30:	ldr	x1, [sp, #72]
    cf34:	mov	w0, #0x2503                	// #9475
    cf38:	bl	1077c <grub_putcode>
    cf3c:	ldr	x0, [sp, #64]
    cf40:	ldr	w0, [x0, #8]
    cf44:	and	w1, w0, #0xffff
    cf48:	ldr	x0, [sp, #64]
    cf4c:	ldr	w0, [x0, #12]
    cf50:	and	w0, w0, #0xffff
    cf54:	add	w0, w1, w0
    cf58:	and	w0, w0, #0xffff
    cf5c:	add	w0, w0, #0x1
    cf60:	and	w0, w0, #0xffff
    cf64:	bfxil	w22, w0, #0, #16
    cf68:	ldr	x0, [sp, #64]
    cf6c:	ldr	w0, [x0, #4]
    cf70:	and	w1, w0, #0xffff
    cf74:	ldr	w0, [sp, #92]
    cf78:	and	w0, w0, #0xffff
    cf7c:	add	w0, w1, w0
    cf80:	and	w0, w0, #0xffff
    cf84:	bfi	w22, w0, #16, #16
    cf88:	mov	w1, w22
    cf8c:	ldr	x0, [sp, #72]
    cf90:	bl	ca10 <grub_menu_entry_run+0x9e8>
    cf94:	ldr	x1, [sp, #72]
    cf98:	mov	w0, #0x2503                	// #9475
    cf9c:	bl	1077c <grub_putcode>
    cfa0:	ldr	w0, [sp, #92]
    cfa4:	add	w0, w0, #0x1
    cfa8:	str	w0, [sp, #92]
    cfac:	ldr	x0, [sp, #64]
    cfb0:	ldr	w0, [x0]
    cfb4:	ldr	w1, [sp, #92]
    cfb8:	cmp	w1, w0
    cfbc:	b.lt	ceec <grub_print_message_indented+0xf4>  // b.tstop
    cfc0:	ldr	x0, [sp, #64]
    cfc4:	ldr	w0, [x0, #8]
    cfc8:	and	w0, w0, #0xffff
    cfcc:	sub	w0, w0, #0x1
    cfd0:	and	w0, w0, #0xffff
    cfd4:	bfxil	w20, w0, #0, #16
    cfd8:	ldr	x0, [sp, #64]
    cfdc:	ldr	w0, [x0, #4]
    cfe0:	and	w1, w0, #0xffff
    cfe4:	ldr	x0, [sp, #64]
    cfe8:	ldr	w0, [x0]
    cfec:	and	w0, w0, #0xffff
    cff0:	add	w0, w1, w0
    cff4:	and	w0, w0, #0xffff
    cff8:	bfi	w20, w0, #16, #16
    cffc:	mov	w1, w20
    d000:	ldr	x0, [sp, #72]
    d004:	bl	ca10 <grub_menu_entry_run+0x9e8>
    d008:	ldr	x1, [sp, #72]
    d00c:	mov	w0, #0x2517                	// #9495
    d010:	bl	1077c <grub_putcode>
    d014:	str	wzr, [sp, #92]
    d018:	b	d034 <grub_print_message_indented+0x23c>
    d01c:	ldr	x1, [sp, #72]
    d020:	mov	w0, #0x2501                	// #9473
    d024:	bl	1077c <grub_putcode>
    d028:	ldr	w0, [sp, #92]
    d02c:	add	w0, w0, #0x1
    d030:	str	w0, [sp, #92]
    d034:	ldr	x0, [sp, #64]
    d038:	ldr	w0, [x0, #12]
    d03c:	ldr	w1, [sp, #92]
    d040:	cmp	w1, w0
    d044:	b.le	d01c <grub_print_message_indented+0x224>
    d048:	ldr	x1, [sp, #72]
    d04c:	mov	w0, #0x251b                	// #9499
    d050:	bl	1077c <grub_putcode>
    d054:	mov	w1, #0x1                   	// #1
    d058:	ldr	x0, [sp, #72]
    d05c:	bl	ca40 <grub_menu_entry_run+0xa18>
    d060:	ldr	x0, [sp, #64]
    d064:	ldr	w0, [x0, #8]
    d068:	and	w0, w0, #0xffff
    d06c:	sub	w0, w0, #0x1
    d070:	and	w0, w0, #0xffff
    d074:	bfxil	w19, w0, #0, #16
    d078:	ldr	x0, [sp, #64]
    d07c:	ldr	w0, [x0, #4]
    d080:	and	w1, w0, #0xffff
    d084:	ldr	x0, [sp, #64]
    d088:	ldr	w0, [x0]
    d08c:	and	w0, w0, #0xffff
    d090:	add	w0, w1, w0
    d094:	and	w0, w0, #0xffff
    d098:	add	w0, w0, #0x1
    d09c:	and	w0, w0, #0xffff
    d0a0:	bfi	w19, w0, #16, #16
    d0a4:	mov	w1, w19
    d0a8:	ldr	x0, [sp, #72]
    d0ac:	bl	ca10 <grub_menu_entry_run+0x9e8>
    d0b0:	nop
    d0b4:	ldp	x19, x20, [sp, #16]
    d0b8:	ldp	x21, x22, [sp, #32]
    d0bc:	ldr	x23, [sp, #48]
    d0c0:	ldp	x29, x30, [sp], #96
    d0c4:	ret
    d0c8:	stp	x29, x30, [sp, #-96]!
    d0cc:	mov	x29, sp
    d0d0:	str	w0, [sp, #44]
    d0d4:	str	w1, [sp, #40]
    d0d8:	str	x2, [sp, #32]
    d0dc:	str	w3, [sp, #28]
    d0e0:	str	wzr, [sp, #92]
    d0e4:	mov	w1, #0x1                   	// #1
    d0e8:	ldr	x0, [sp, #32]
    d0ec:	bl	ca40 <grub_menu_entry_run+0xa18>
    d0f0:	ldr	w0, [sp, #40]
    d0f4:	cmp	w0, #0x0
    d0f8:	b.eq	d14c <grub_print_message_indented+0x354>  // b.none
    d0fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d100:	add	x0, x0, #0x0
    d104:	ldr	x0, [x0]
    d108:	str	x0, [sp, #72]
    d10c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d110:	add	x0, x0, #0x0
    d114:	ldr	x0, [x0]
    d118:	ldr	x1, [x0]
    d11c:	ldr	x0, [sp, #72]
    d120:	blr	x1
    d124:	ldr	w4, [sp, #28]
    d128:	ldr	x3, [sp, #32]
    d12c:	mov	w2, #0x6                   	// #6
    d130:	mov	w1, #0x6                   	// #6
    d134:	bl	ccfc <grub_getstringwidth+0xa0>
    d138:	mov	w1, w0
    d13c:	ldr	w0, [sp, #92]
    d140:	add	w0, w0, w1
    d144:	str	w0, [sp, #92]
    d148:	b	d270 <grub_print_message_indented+0x478>
    d14c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d150:	add	x0, x0, #0x0
    d154:	ldr	x0, [x0]
    d158:	str	x0, [sp, #64]
    d15c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d160:	add	x0, x0, #0x0
    d164:	ldr	x0, [x0]
    d168:	ldr	x1, [x0]
    d16c:	ldr	x0, [sp, #64]
    d170:	blr	x1
    d174:	mov	w2, #0x2193                	// #8595
    d178:	mov	w1, #0x2191                	// #8593
    d17c:	bl	0 <grub_xasprintf>
    d180:	str	x0, [sp, #80]
    d184:	ldr	x0, [sp, #80]
    d188:	cmp	x0, #0x0
    d18c:	b.ne	d198 <grub_print_message_indented+0x3a0>  // b.any
    d190:	mov	w0, #0x0                   	// #0
    d194:	b	d274 <grub_print_message_indented+0x47c>
    d198:	ldr	w4, [sp, #28]
    d19c:	ldr	x3, [sp, #32]
    d1a0:	mov	w2, #0x6                   	// #6
    d1a4:	mov	w1, #0x6                   	// #6
    d1a8:	ldr	x0, [sp, #80]
    d1ac:	bl	ccfc <grub_getstringwidth+0xa0>
    d1b0:	mov	w1, w0
    d1b4:	ldr	w0, [sp, #92]
    d1b8:	add	w0, w0, w1
    d1bc:	str	w0, [sp, #92]
    d1c0:	ldr	x0, [sp, #80]
    d1c4:	bl	0 <grub_free>
    d1c8:	ldr	w0, [sp, #44]
    d1cc:	cmp	w0, #0x0
    d1d0:	b.eq	d224 <grub_print_message_indented+0x42c>  // b.none
    d1d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d1d8:	add	x0, x0, #0x0
    d1dc:	ldr	x0, [x0]
    d1e0:	str	x0, [sp, #56]
    d1e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d1e8:	add	x0, x0, #0x0
    d1ec:	ldr	x0, [x0]
    d1f0:	ldr	x1, [x0]
    d1f4:	ldr	x0, [sp, #56]
    d1f8:	blr	x1
    d1fc:	ldr	w4, [sp, #28]
    d200:	ldr	x3, [sp, #32]
    d204:	mov	w2, #0x6                   	// #6
    d208:	mov	w1, #0x6                   	// #6
    d20c:	bl	ccfc <grub_getstringwidth+0xa0>
    d210:	mov	w1, w0
    d214:	ldr	w0, [sp, #92]
    d218:	add	w0, w0, w1
    d21c:	str	w0, [sp, #92]
    d220:	b	d270 <grub_print_message_indented+0x478>
    d224:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d228:	add	x0, x0, #0x0
    d22c:	ldr	x0, [x0]
    d230:	str	x0, [sp, #48]
    d234:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d238:	add	x0, x0, #0x0
    d23c:	ldr	x0, [x0]
    d240:	ldr	x1, [x0]
    d244:	ldr	x0, [sp, #48]
    d248:	blr	x1
    d24c:	ldr	w4, [sp, #28]
    d250:	ldr	x3, [sp, #32]
    d254:	mov	w2, #0x6                   	// #6
    d258:	mov	w1, #0x6                   	// #6
    d25c:	bl	ccfc <grub_getstringwidth+0xa0>
    d260:	mov	w1, w0
    d264:	ldr	w0, [sp, #92]
    d268:	add	w0, w0, w1
    d26c:	str	w0, [sp, #92]
    d270:	ldr	w0, [sp, #92]
    d274:	ldp	x29, x30, [sp], #96
    d278:	ret
    d27c:	nop
	...
    d2a8:	sub	sp, sp, #0x80
    d2ac:	stp	x29, x30, [sp, #16]
    d2b0:	add	x29, sp, #0x10
    d2b4:	stp	x19, x20, [sp, #32]
    d2b8:	str	w0, [sp, #76]
    d2bc:	str	w1, [sp, #72]
    d2c0:	str	x2, [sp, #64]
    d2c4:	str	x3, [sp, #56]
    d2c8:	ldr	x0, [sp, #64]
    d2cc:	cmp	x0, #0x0
    d2d0:	b.eq	d2e0 <grub_print_message_indented+0x4e8>  // b.none
    d2d4:	ldr	x0, [sp, #64]
    d2d8:	ldr	x0, [x0]
    d2dc:	b	d2ec <grub_print_message_indented+0x4f4>
    d2e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d2e4:	add	x0, x0, #0x0
    d2e8:	ldr	x0, [x0]
    d2ec:	str	x0, [sp, #112]
    d2f0:	ldr	x0, [sp, #112]
    d2f4:	bl	0 <grub_strlen>
    d2f8:	str	x0, [sp, #104]
    d2fc:	ldr	x0, [sp, #104]
    d300:	lsl	x0, x0, #2
    d304:	bl	0 <grub_malloc>
    d308:	str	x0, [sp, #96]
    d30c:	ldr	x0, [sp, #96]
    d310:	cmp	x0, #0x0
    d314:	b.eq	d5bc <grub_print_message_indented+0x7c4>  // b.none
    d318:	mov	x4, #0x0                   	// #0
    d31c:	mov	x3, #0xffffffffffffffff    	// #-1
    d320:	ldr	x2, [sp, #112]
    d324:	ldr	x1, [sp, #104]
    d328:	ldr	x0, [sp, #96]
    d32c:	bl	12ecc <grub_utf8_to_ucs4>
    d330:	str	x0, [sp, #88]
    d334:	ldr	x0, [sp, #88]
    d338:	cmp	x0, #0x0
    d33c:	b.ge	d34c <grub_print_message_indented+0x554>  // b.tcont
    d340:	ldr	x0, [sp, #96]
    d344:	bl	0 <grub_free>
    d348:	b	d5c0 <grub_print_message_indented+0x7c8>
    d34c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d350:	add	x0, x0, #0x0
    d354:	ldr	x0, [x0]
    d358:	ldrb	w0, [x0]
    d35c:	strb	w0, [sp, #87]
    d360:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d364:	add	x0, x0, #0x0
    d368:	ldr	x0, [x0]
    d36c:	ldrb	w0, [x0]
    d370:	strb	w0, [sp, #86]
    d374:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d378:	add	x0, x0, #0x0
    d37c:	ldr	x0, [x0]
    d380:	ldrb	w1, [x0]
    d384:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d388:	add	x0, x0, #0x0
    d38c:	ldr	x0, [x0]
    d390:	strb	w1, [x0]
    d394:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d398:	add	x0, x0, #0x0
    d39c:	ldr	x0, [x0]
    d3a0:	ldrb	w1, [x0]
    d3a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d3a8:	add	x0, x0, #0x0
    d3ac:	ldr	x0, [x0]
    d3b0:	strb	w1, [x0]
    d3b4:	ldr	x0, [sp, #56]
    d3b8:	ldr	x2, [x0, #56]
    d3bc:	ldr	w0, [sp, #72]
    d3c0:	cmp	w0, #0x0
    d3c4:	b.eq	d3d0 <grub_print_message_indented+0x5d8>  // b.none
    d3c8:	mov	w0, #0x2                   	// #2
    d3cc:	b	d3d4 <grub_print_message_indented+0x5dc>
    d3d0:	mov	w0, #0x1                   	// #1
    d3d4:	mov	w1, w0
    d3d8:	mov	x0, x2
    d3dc:	bl	ca40 <grub_menu_entry_run+0xa18>
    d3e0:	ldr	x0, [sp, #56]
    d3e4:	ldr	x2, [x0, #56]
    d3e8:	ldr	x0, [sp, #56]
    d3ec:	ldr	w0, [x0, #16]
    d3f0:	and	w0, w0, #0xffff
    d3f4:	bfxil	w20, w0, #0, #16
    d3f8:	ldr	w0, [sp, #76]
    d3fc:	and	w0, w0, #0xffff
    d400:	bfi	w20, w0, #16, #16
    d404:	mov	w1, w20
    d408:	mov	x0, x2
    d40c:	bl	ca10 <grub_menu_entry_run+0x9e8>
    d410:	str	xzr, [sp, #120]
    d414:	b	d4ac <grub_print_message_indented+0x6b4>
    d418:	ldr	x0, [sp, #120]
    d41c:	lsl	x0, x0, #2
    d420:	ldr	x1, [sp, #96]
    d424:	add	x0, x1, x0
    d428:	ldr	w0, [x0]
    d42c:	cmp	w0, #0xa
    d430:	b.eq	d488 <grub_print_message_indented+0x690>  // b.none
    d434:	ldr	x0, [sp, #120]
    d438:	lsl	x0, x0, #2
    d43c:	ldr	x1, [sp, #96]
    d440:	add	x0, x1, x0
    d444:	ldr	w0, [x0]
    d448:	cmp	w0, #0x8
    d44c:	b.eq	d488 <grub_print_message_indented+0x690>  // b.none
    d450:	ldr	x0, [sp, #120]
    d454:	lsl	x0, x0, #2
    d458:	ldr	x1, [sp, #96]
    d45c:	add	x0, x1, x0
    d460:	ldr	w0, [x0]
    d464:	cmp	w0, #0xd
    d468:	b.eq	d488 <grub_print_message_indented+0x690>  // b.none
    d46c:	ldr	x0, [sp, #120]
    d470:	lsl	x0, x0, #2
    d474:	ldr	x1, [sp, #96]
    d478:	add	x0, x1, x0
    d47c:	ldr	w0, [x0]
    d480:	cmp	w0, #0x1b
    d484:	b.ne	d4a0 <grub_print_message_indented+0x6a8>  // b.any
    d488:	ldr	x0, [sp, #120]
    d48c:	lsl	x0, x0, #2
    d490:	ldr	x1, [sp, #96]
    d494:	add	x0, x1, x0
    d498:	mov	w1, #0x20                  	// #32
    d49c:	str	w1, [x0]
    d4a0:	ldr	x0, [sp, #120]
    d4a4:	add	x0, x0, #0x1
    d4a8:	str	x0, [sp, #120]
    d4ac:	ldr	x1, [sp, #120]
    d4b0:	ldr	x0, [sp, #88]
    d4b4:	cmp	x1, x0
    d4b8:	b.lt	d418 <grub_print_message_indented+0x620>  // b.tstop
    d4bc:	ldr	x0, [sp, #56]
    d4c0:	ldr	w0, [x0, #8]
    d4c4:	cmp	w0, #0x1
    d4c8:	b.le	d4f0 <grub_print_message_indented+0x6f8>
    d4cc:	ldr	w0, [sp, #72]
    d4d0:	cmp	w0, #0x0
    d4d4:	b.eq	d4e0 <grub_print_message_indented+0x6e8>  // b.none
    d4d8:	mov	w0, #0x2a                  	// #42
    d4dc:	b	d4e4 <grub_print_message_indented+0x6ec>
    d4e0:	mov	w0, #0x20                  	// #32
    d4e4:	ldr	x1, [sp, #56]
    d4e8:	ldr	x1, [x1, #56]
    d4ec:	bl	1077c <grub_putcode>
    d4f0:	ldr	x0, [sp, #88]
    d4f4:	lsl	x0, x0, #2
    d4f8:	ldr	x1, [sp, #96]
    d4fc:	add	x1, x1, x0
    d500:	ldr	x0, [sp, #56]
    d504:	ldr	w2, [x0, #36]
    d508:	ldr	x0, [sp, #56]
    d50c:	ldr	x0, [x0, #56]
    d510:	str	xzr, [sp]
    d514:	mov	w7, #0x2192                	// #8594
    d518:	mov	w6, #0x1                   	// #1
    d51c:	mov	w5, #0x0                   	// #0
    d520:	mov	x4, x0
    d524:	mov	w3, w2
    d528:	mov	w2, #0x0                   	// #0
    d52c:	ldr	x0, [sp, #96]
    d530:	bl	11ac8 <grub_print_ucs4_menu>
    d534:	ldr	x0, [sp, #56]
    d538:	ldr	x0, [x0, #56]
    d53c:	mov	w1, #0x1                   	// #1
    d540:	bl	ca40 <grub_menu_entry_run+0xa18>
    d544:	ldr	x0, [sp, #56]
    d548:	ldr	x20, [x0, #56]
    d54c:	ldr	x0, [sp, #56]
    d550:	add	x0, x0, #0x8
    d554:	bl	cc38 <grub_menu_entry_run+0xc10>
    d558:	and	w0, w0, #0xffff
    d55c:	bfxil	w19, w0, #0, #16
    d560:	ldr	w0, [sp, #76]
    d564:	and	w0, w0, #0xffff
    d568:	bfi	w19, w0, #16, #16
    d56c:	mov	w1, w19
    d570:	mov	x0, x20
    d574:	bl	ca10 <grub_menu_entry_run+0x9e8>
    d578:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d57c:	add	x0, x0, #0x0
    d580:	ldr	x0, [x0]
    d584:	ldrb	w1, [sp, #87]
    d588:	strb	w1, [x0]
    d58c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    d590:	add	x0, x0, #0x0
    d594:	ldr	x0, [x0]
    d598:	ldrb	w1, [sp, #86]
    d59c:	strb	w1, [x0]
    d5a0:	ldr	x0, [sp, #56]
    d5a4:	ldr	x0, [x0, #56]
    d5a8:	mov	w1, #0x1                   	// #1
    d5ac:	bl	ca40 <grub_menu_entry_run+0xa18>
    d5b0:	ldr	x0, [sp, #96]
    d5b4:	bl	0 <grub_free>
    d5b8:	b	d5c0 <grub_print_message_indented+0x7c8>
    d5bc:	nop
    d5c0:	ldp	x19, x20, [sp, #32]
    d5c4:	ldp	x29, x30, [sp, #16]
    d5c8:	add	sp, sp, #0x80
    d5cc:	ret
	...
    d5f8:	stp	x29, x30, [sp, #-64]!
    d5fc:	mov	x29, sp
    d600:	stp	x19, x20, [sp, #16]
    d604:	str	x0, [sp, #40]
    d608:	str	x1, [sp, #32]
    d60c:	ldr	x0, [sp, #32]
    d610:	ldr	x3, [x0, #56]
    d614:	ldr	x0, [sp, #32]
    d618:	ldr	w0, [x0, #16]
    d61c:	and	w1, w0, #0xffff
    d620:	ldr	x0, [sp, #32]
    d624:	ldr	w0, [x0, #20]
    d628:	and	w0, w0, #0xffff
    d62c:	add	w0, w1, w0
    d630:	and	w1, w0, #0xffff
    d634:	ldr	x0, [sp, #32]
    d638:	ldr	w0, [x0, #32]
    d63c:	and	w0, w0, #0xffff
    d640:	add	w0, w1, w0
    d644:	and	w0, w0, #0xffff
    d648:	add	w0, w0, #0x1
    d64c:	and	w0, w0, #0xffff
    d650:	bfxil	w2, w0, #0, #16
    d654:	ldr	x0, [sp, #32]
    d658:	ldr	w0, [x0, #12]
    d65c:	and	w0, w0, #0xffff
    d660:	bfi	w2, w0, #16, #16
    d664:	mov	w1, w2
    d668:	mov	x0, x3
    d66c:	bl	ca10 <grub_menu_entry_run+0x9e8>
    d670:	ldr	x0, [sp, #32]
    d674:	ldr	w0, [x0, #8]
    d678:	cmp	w0, #0x1
    d67c:	b.eq	d6bc <grub_print_message_indented+0x8c4>  // b.none
    d680:	ldr	x0, [sp, #32]
    d684:	ldr	w0, [x0]
    d688:	cmp	w0, #0x0
    d68c:	b.eq	d6a8 <grub_print_message_indented+0x8b0>  // b.none
    d690:	ldr	x0, [sp, #32]
    d694:	ldr	x0, [x0, #56]
    d698:	mov	x1, x0
    d69c:	mov	w0, #0x2191                	// #8593
    d6a0:	bl	1077c <grub_putcode>
    d6a4:	b	d6bc <grub_print_message_indented+0x8c4>
    d6a8:	ldr	x0, [sp, #32]
    d6ac:	ldr	x0, [x0, #56]
    d6b0:	mov	x1, x0
    d6b4:	mov	w0, #0x20                  	// #32
    d6b8:	bl	1077c <grub_putcode>
    d6bc:	ldr	x0, [sp, #32]
    d6c0:	ldr	w0, [x0]
    d6c4:	mov	w1, w0
    d6c8:	ldr	x0, [sp, #40]
    d6cc:	bl	66c0 <grub_menu_get_entry>
    d6d0:	str	x0, [sp, #56]
    d6d4:	str	wzr, [sp, #52]
    d6d8:	b	d73c <grub_print_message_indented+0x944>
    d6dc:	ldr	x0, [sp, #32]
    d6e0:	ldr	w1, [x0, #12]
    d6e4:	ldr	w0, [sp, #52]
    d6e8:	add	w4, w1, w0
    d6ec:	ldr	x0, [sp, #32]
    d6f0:	ldr	w0, [x0, #4]
    d6f4:	ldr	w1, [sp, #52]
    d6f8:	cmp	w1, w0
    d6fc:	cset	w0, eq  // eq = none
    d700:	and	w0, w0, #0xff
    d704:	ldr	x3, [sp, #32]
    d708:	ldr	x2, [sp, #56]
    d70c:	mov	w1, w0
    d710:	mov	w0, w4
    d714:	bl	d2a8 <grub_print_message_indented+0x4b0>
    d718:	ldr	x0, [sp, #56]
    d71c:	cmp	x0, #0x0
    d720:	b.eq	d730 <grub_print_message_indented+0x938>  // b.none
    d724:	ldr	x0, [sp, #56]
    d728:	ldr	x0, [x0, #72]
    d72c:	str	x0, [sp, #56]
    d730:	ldr	w0, [sp, #52]
    d734:	add	w0, w0, #0x1
    d738:	str	w0, [sp, #52]
    d73c:	ldr	x0, [sp, #32]
    d740:	ldr	w0, [x0, #8]
    d744:	ldr	w1, [sp, #52]
    d748:	cmp	w1, w0
    d74c:	b.lt	d6dc <grub_print_message_indented+0x8e4>  // b.tstop
    d750:	ldr	x0, [sp, #32]
    d754:	ldr	x2, [x0, #56]
    d758:	ldr	x0, [sp, #32]
    d75c:	ldr	w0, [x0, #16]
    d760:	and	w1, w0, #0xffff
    d764:	ldr	x0, [sp, #32]
    d768:	ldr	w0, [x0, #20]
    d76c:	and	w0, w0, #0xffff
    d770:	add	w0, w1, w0
    d774:	and	w1, w0, #0xffff
    d778:	ldr	x0, [sp, #32]
    d77c:	ldr	w0, [x0, #32]
    d780:	and	w0, w0, #0xffff
    d784:	add	w0, w1, w0
    d788:	and	w0, w0, #0xffff
    d78c:	add	w0, w0, #0x1
    d790:	and	w0, w0, #0xffff
    d794:	bfxil	w20, w0, #0, #16
    d798:	ldr	x0, [sp, #32]
    d79c:	ldr	w0, [x0, #12]
    d7a0:	and	w1, w0, #0xffff
    d7a4:	ldr	x0, [sp, #32]
    d7a8:	ldr	w0, [x0, #8]
    d7ac:	and	w0, w0, #0xffff
    d7b0:	add	w0, w1, w0
    d7b4:	and	w0, w0, #0xffff
    d7b8:	sub	w0, w0, #0x1
    d7bc:	and	w0, w0, #0xffff
    d7c0:	bfi	w20, w0, #16, #16
    d7c4:	mov	w1, w20
    d7c8:	mov	x0, x2
    d7cc:	bl	ca10 <grub_menu_entry_run+0x9e8>
    d7d0:	ldr	x0, [sp, #32]
    d7d4:	ldr	w0, [x0, #8]
    d7d8:	cmp	w0, #0x1
    d7dc:	b.ne	d878 <grub_print_message_indented+0xa80>  // b.any
    d7e0:	ldr	x0, [sp, #32]
    d7e4:	ldr	w0, [x0]
    d7e8:	cmp	w0, #0x0
    d7ec:	b.eq	d814 <grub_print_message_indented+0xa1c>  // b.none
    d7f0:	ldr	x0, [sp, #56]
    d7f4:	cmp	x0, #0x0
    d7f8:	b.eq	d814 <grub_print_message_indented+0xa1c>  // b.none
    d7fc:	ldr	x0, [sp, #32]
    d800:	ldr	x0, [x0, #56]
    d804:	mov	x1, x0
    d808:	mov	w0, #0x2195                	// #8597
    d80c:	bl	1077c <grub_putcode>
    d810:	b	d8b0 <grub_print_message_indented+0xab8>
    d814:	ldr	x0, [sp, #32]
    d818:	ldr	w0, [x0]
    d81c:	cmp	w0, #0x0
    d820:	b.eq	d83c <grub_print_message_indented+0xa44>  // b.none
    d824:	ldr	x0, [sp, #32]
    d828:	ldr	x0, [x0, #56]
    d82c:	mov	x1, x0
    d830:	mov	w0, #0x2191                	// #8593
    d834:	bl	1077c <grub_putcode>
    d838:	b	d8b0 <grub_print_message_indented+0xab8>
    d83c:	ldr	x0, [sp, #56]
    d840:	cmp	x0, #0x0
    d844:	b.eq	d860 <grub_print_message_indented+0xa68>  // b.none
    d848:	ldr	x0, [sp, #32]
    d84c:	ldr	x0, [x0, #56]
    d850:	mov	x1, x0
    d854:	mov	w0, #0x2193                	// #8595
    d858:	bl	1077c <grub_putcode>
    d85c:	b	d8b0 <grub_print_message_indented+0xab8>
    d860:	ldr	x0, [sp, #32]
    d864:	ldr	x0, [x0, #56]
    d868:	mov	x1, x0
    d86c:	mov	w0, #0x20                  	// #32
    d870:	bl	1077c <grub_putcode>
    d874:	b	d8b0 <grub_print_message_indented+0xab8>
    d878:	ldr	x0, [sp, #56]
    d87c:	cmp	x0, #0x0
    d880:	b.eq	d89c <grub_print_message_indented+0xaa4>  // b.none
    d884:	ldr	x0, [sp, #32]
    d888:	ldr	x0, [x0, #56]
    d88c:	mov	x1, x0
    d890:	mov	w0, #0x2193                	// #8595
    d894:	bl	1077c <grub_putcode>
    d898:	b	d8b0 <grub_print_message_indented+0xab8>
    d89c:	ldr	x0, [sp, #32]
    d8a0:	ldr	x0, [x0, #56]
    d8a4:	mov	x1, x0
    d8a8:	mov	w0, #0x20                  	// #32
    d8ac:	bl	1077c <grub_putcode>
    d8b0:	ldr	x0, [sp, #32]
    d8b4:	ldr	x20, [x0, #56]
    d8b8:	ldr	x0, [sp, #32]
    d8bc:	add	x0, x0, #0x8
    d8c0:	bl	cc38 <grub_menu_entry_run+0xc10>
    d8c4:	and	w0, w0, #0xffff
    d8c8:	bfxil	w19, w0, #0, #16
    d8cc:	ldr	x0, [sp, #32]
    d8d0:	ldr	w0, [x0, #12]
    d8d4:	and	w1, w0, #0xffff
    d8d8:	ldr	x0, [sp, #32]
    d8dc:	ldr	w0, [x0, #4]
    d8e0:	and	w0, w0, #0xffff
    d8e4:	add	w0, w1, w0
    d8e8:	and	w0, w0, #0xffff
    d8ec:	bfi	w19, w0, #16, #16
    d8f0:	mov	w1, w19
    d8f4:	mov	x0, x20
    d8f8:	bl	ca10 <grub_menu_entry_run+0x9e8>
    d8fc:	nop
    d900:	ldp	x19, x20, [sp, #16]
    d904:	ldp	x29, x30, [sp], #64
    d908:	ret

000000000000d90c <grub_menu_init_page>:
    d90c:	stp	x29, x30, [sp, #-96]!
    d910:	mov	x29, sp
    d914:	str	x19, [sp, #16]
    d918:	str	w0, [sp, #60]
    d91c:	str	w1, [sp, #56]
    d920:	str	x2, [sp, #48]
    d924:	str	x3, [sp, #40]
    d928:	mov	w0, #0x1                   	// #1
    d92c:	str	w0, [sp, #92]
    d930:	mov	w0, #0x1                   	// #1
    d934:	str	w0, [sp, #88]
    d938:	mov	w0, #0x1                   	// #1
    d93c:	str	w0, [sp, #84]
    d940:	ldr	x0, [sp, #48]
    d944:	mov	w1, #0x1                   	// #1
    d948:	str	w1, [x0, #24]
    d94c:	ldr	x0, [sp, #48]
    d950:	mov	w1, #0x2                   	// #2
    d954:	str	w1, [x0, #8]
    d958:	ldr	x0, [sp, #40]
    d95c:	bl	c964 <grub_menu_entry_run+0x93c>
    d960:	sub	w0, w0, #0x5
    d964:	mov	w1, w0
    d968:	ldr	x0, [sp, #48]
    d96c:	str	w1, [x0, #12]
    d970:	ldr	x0, [sp, #48]
    d974:	mov	w1, #0x4                   	// #4
    d978:	str	w1, [x0, #4]
    d97c:	ldr	x0, [sp, #48]
    d980:	mov	w1, #0x2                   	// #2
    d984:	str	w1, [x0, #20]
    d988:	ldr	x0, [sp, #40]
    d98c:	bl	c99c <grub_menu_entry_run+0x974>
    d990:	mov	w1, w0
    d994:	ldr	x0, [sp, #48]
    d998:	ldr	w0, [x0, #4]
    d99c:	sub	w0, w1, w0
    d9a0:	ldr	x1, [sp, #48]
    d9a4:	ldr	w1, [x1, #20]
    d9a8:	sub	w0, w0, w1
    d9ac:	sub	w0, w0, #0x3
    d9b0:	mov	w1, w0
    d9b4:	ldr	x0, [sp, #48]
    d9b8:	str	w1, [x0]
    d9bc:	mov	w3, #0x1                   	// #1
    d9c0:	ldr	x2, [sp, #40]
    d9c4:	ldr	w1, [sp, #56]
    d9c8:	ldr	w0, [sp, #60]
    d9cc:	bl	d0c8 <grub_print_message_indented+0x2d0>
    d9d0:	str	w0, [sp, #80]
    d9d4:	ldr	x0, [sp, #48]
    d9d8:	ldr	w1, [x0]
    d9dc:	ldr	w0, [sp, #80]
    d9e0:	sub	w0, w1, w0
    d9e4:	cmp	w0, #0x2
    d9e8:	b.le	d9fc <grub_menu_init_page+0xf0>
    d9ec:	ldr	x0, [sp, #48]
    d9f0:	ldr	w0, [x0, #12]
    d9f4:	cmp	w0, #0x9
    d9f8:	b.gt	da50 <grub_menu_init_page+0x144>
    d9fc:	ldr	x0, [sp, #48]
    da00:	ldr	w0, [x0]
    da04:	add	w1, w0, #0x4
    da08:	ldr	x0, [sp, #48]
    da0c:	str	w1, [x0]
    da10:	ldr	x0, [sp, #48]
    da14:	ldr	w0, [x0, #4]
    da18:	sub	w1, w0, #0x2
    da1c:	ldr	x0, [sp, #48]
    da20:	str	w1, [x0, #4]
    da24:	str	wzr, [sp, #88]
    da28:	ldr	x0, [sp, #48]
    da2c:	ldr	w0, [x0, #8]
    da30:	sub	w1, w0, #0x1
    da34:	ldr	x0, [sp, #48]
    da38:	str	w1, [x0, #8]
    da3c:	ldr	x0, [sp, #48]
    da40:	ldr	w0, [x0, #12]
    da44:	add	w1, w0, #0x1
    da48:	ldr	x0, [sp, #48]
    da4c:	str	w1, [x0, #12]
    da50:	ldr	x0, [sp, #48]
    da54:	ldr	w1, [x0]
    da58:	ldr	w0, [sp, #80]
    da5c:	sub	w0, w1, w0
    da60:	cmp	w0, #0x2
    da64:	b.le	da78 <grub_menu_init_page+0x16c>
    da68:	ldr	x0, [sp, #48]
    da6c:	ldr	w0, [x0, #12]
    da70:	cmp	w0, #0x9
    da74:	b.gt	dad0 <grub_menu_init_page+0x1c4>
    da78:	ldr	x0, [sp, #48]
    da7c:	ldr	w0, [x0]
    da80:	add	w1, w0, #0x2
    da84:	ldr	x0, [sp, #48]
    da88:	str	w1, [x0]
    da8c:	ldr	x0, [sp, #48]
    da90:	ldr	w0, [x0, #4]
    da94:	sub	w1, w0, #0x1
    da98:	ldr	x0, [sp, #48]
    da9c:	str	w1, [x0, #4]
    daa0:	ldr	x0, [sp, #48]
    daa4:	ldr	w0, [x0, #8]
    daa8:	sub	w1, w0, #0x1
    daac:	ldr	x0, [sp, #48]
    dab0:	str	w1, [x0, #8]
    dab4:	ldr	x0, [sp, #48]
    dab8:	ldr	w0, [x0, #12]
    dabc:	add	w1, w0, #0x2
    dac0:	ldr	x0, [sp, #48]
    dac4:	str	w1, [x0, #12]
    dac8:	ldr	x0, [sp, #48]
    dacc:	str	wzr, [x0, #24]
    dad0:	ldr	x0, [sp, #48]
    dad4:	ldr	w0, [x0, #12]
    dad8:	cmp	w0, #0x0
    dadc:	b.gt	daec <grub_menu_init_page+0x1e0>
    dae0:	ldr	x0, [sp, #48]
    dae4:	mov	w1, #0x1                   	// #1
    dae8:	str	w1, [x0, #12]
    daec:	ldr	x0, [sp, #48]
    daf0:	ldr	w1, [x0]
    daf4:	ldr	w0, [sp, #80]
    daf8:	sub	w0, w1, w0
    dafc:	cmp	w0, #0x2
    db00:	b.gt	db34 <grub_menu_init_page+0x228>
    db04:	ldr	x0, [sp, #48]
    db08:	ldr	w0, [x0, #20]
    db0c:	cmp	w0, #0x2
    db10:	b.ne	db34 <grub_menu_init_page+0x228>  // b.any
    db14:	ldr	x0, [sp, #48]
    db18:	mov	w1, #0x1                   	// #1
    db1c:	str	w1, [x0, #20]
    db20:	ldr	x0, [sp, #48]
    db24:	ldr	w0, [x0]
    db28:	add	w1, w0, #0x1
    db2c:	ldr	x0, [sp, #48]
    db30:	str	w1, [x0]
    db34:	ldr	x0, [sp, #48]
    db38:	ldr	w1, [x0]
    db3c:	ldr	w0, [sp, #80]
    db40:	sub	w0, w1, w0
    db44:	cmp	w0, #0x2
    db48:	b.gt	db78 <grub_menu_init_page+0x26c>
    db4c:	ldr	x0, [sp, #48]
    db50:	ldr	w0, [x0]
    db54:	add	w1, w0, #0x1
    db58:	ldr	x0, [sp, #48]
    db5c:	str	w1, [x0]
    db60:	ldr	x0, [sp, #48]
    db64:	ldr	w0, [x0, #4]
    db68:	sub	w1, w0, #0x1
    db6c:	ldr	x0, [sp, #48]
    db70:	str	w1, [x0, #4]
    db74:	str	wzr, [sp, #84]
    db78:	ldr	x0, [sp, #48]
    db7c:	ldr	w1, [x0]
    db80:	ldr	w0, [sp, #80]
    db84:	sub	w0, w1, w0
    db88:	cmp	w0, #0x1
    db8c:	b.le	dbac <grub_menu_init_page+0x2a0>
    db90:	ldr	x0, [sp, #48]
    db94:	ldr	w1, [x0]
    db98:	ldr	w0, [sp, #80]
    db9c:	sub	w1, w1, w0
    dba0:	ldr	x0, [sp, #48]
    dba4:	str	w1, [x0]
    dba8:	b	dbb0 <grub_menu_init_page+0x2a4>
    dbac:	str	wzr, [sp, #92]
    dbb0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dbb4:	add	x0, x0, #0x0
    dbb8:	ldr	x0, [x0]
    dbbc:	ldrb	w0, [x0]
    dbc0:	strb	w0, [sp, #79]
    dbc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dbc8:	add	x0, x0, #0x0
    dbcc:	ldr	x0, [x0]
    dbd0:	ldrb	w0, [x0]
    dbd4:	strb	w0, [sp, #78]
    dbd8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dbdc:	add	x0, x0, #0x0
    dbe0:	ldr	x0, [x0]
    dbe4:	ldrb	w1, [x0]
    dbe8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dbec:	add	x0, x0, #0x0
    dbf0:	ldr	x0, [x0]
    dbf4:	strb	w1, [x0]
    dbf8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dbfc:	add	x0, x0, #0x0
    dc00:	ldr	x0, [x0]
    dc04:	ldrb	w1, [x0]
    dc08:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dc0c:	add	x0, x0, #0x0
    dc10:	ldr	x0, [x0]
    dc14:	strb	w1, [x0]
    dc18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dc1c:	add	x0, x0, #0x0
    dc20:	ldr	x0, [x0]
    dc24:	bl	0 <grub_env_get>
    dc28:	mov	x1, x0
    dc2c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dc30:	add	x0, x0, #0x0
    dc34:	ldr	x0, [x0]
    dc38:	bl	4928 <grub_parse_color_name_pair>
    dc3c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dc40:	add	x0, x0, #0x0
    dc44:	ldr	x0, [x0]
    dc48:	bl	0 <grub_env_get>
    dc4c:	mov	x1, x0
    dc50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dc54:	add	x0, x0, #0x0
    dc58:	ldr	x0, [x0]
    dc5c:	bl	4928 <grub_parse_color_name_pair>
    dc60:	ldr	w0, [sp, #84]
    dc64:	cmp	w0, #0x0
    dc68:	b.eq	dc7c <grub_menu_init_page+0x370>  // b.none
    dc6c:	ldr	w1, [sp, #88]
    dc70:	ldr	x0, [sp, #40]
    dc74:	bl	648 <grub_normal_init_page>
    dc78:	b	dc84 <grub_menu_init_page+0x378>
    dc7c:	ldr	x0, [sp, #40]
    dc80:	bl	cac0 <grub_menu_entry_run+0xa98>
    dc84:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dc88:	add	x0, x0, #0x0
    dc8c:	ldr	x0, [x0]
    dc90:	ldrb	w1, [x0]
    dc94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dc98:	add	x0, x0, #0x0
    dc9c:	ldr	x0, [x0]
    dca0:	strb	w1, [x0]
    dca4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dca8:	add	x0, x0, #0x0
    dcac:	ldr	x0, [x0]
    dcb0:	ldrb	w1, [x0]
    dcb4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dcb8:	add	x0, x0, #0x0
    dcbc:	ldr	x0, [x0]
    dcc0:	strb	w1, [x0]
    dcc4:	ldr	x0, [sp, #48]
    dcc8:	ldr	w0, [x0, #24]
    dccc:	cmp	w0, #0x0
    dcd0:	b.eq	dce0 <grub_menu_init_page+0x3d4>  // b.none
    dcd4:	ldr	x1, [sp, #48]
    dcd8:	ldr	x0, [sp, #40]
    dcdc:	bl	ce34 <grub_print_message_indented+0x3c>
    dce0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dce4:	add	x0, x0, #0x0
    dce8:	ldr	x0, [x0]
    dcec:	ldrb	w1, [sp, #79]
    dcf0:	strb	w1, [x0]
    dcf4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dcf8:	add	x0, x0, #0x0
    dcfc:	ldr	x0, [x0]
    dd00:	ldrb	w1, [sp, #78]
    dd04:	strb	w1, [x0]
    dd08:	ldr	x0, [sp, #48]
    dd0c:	ldr	w1, [x0, #4]
    dd10:	ldr	x0, [sp, #48]
    dd14:	ldr	w0, [x0]
    dd18:	add	w1, w1, w0
    dd1c:	ldr	x0, [sp, #48]
    dd20:	ldr	w0, [x0, #24]
    dd24:	add	w1, w1, w0
    dd28:	ldr	w0, [sp, #88]
    dd2c:	add	w1, w1, w0
    dd30:	ldr	x0, [sp, #48]
    dd34:	str	w1, [x0, #16]
    dd38:	ldr	w0, [sp, #92]
    dd3c:	cmp	w0, #0x0
    dd40:	b.eq	dd98 <grub_menu_init_page+0x48c>  // b.none
    dd44:	and	w0, w19, #0xffff0000
    dd48:	orr	w0, w0, #0x1
    dd4c:	mov	w19, w0
    dd50:	ldr	x0, [sp, #48]
    dd54:	ldr	w0, [x0, #16]
    dd58:	and	w0, w0, #0xffff
    dd5c:	bfi	w19, w0, #16, #16
    dd60:	mov	w1, w19
    dd64:	ldr	x0, [sp, #40]
    dd68:	bl	ca10 <grub_menu_entry_run+0x9e8>
    dd6c:	mov	w3, #0x0                   	// #0
    dd70:	ldr	x2, [sp, #40]
    dd74:	ldr	w1, [sp, #56]
    dd78:	ldr	w0, [sp, #60]
    dd7c:	bl	d0c8 <grub_print_message_indented+0x2d0>
    dd80:	ldr	x0, [sp, #48]
    dd84:	ldr	w1, [x0, #16]
    dd88:	ldr	w0, [sp, #80]
    dd8c:	add	w1, w1, w0
    dd90:	ldr	x0, [sp, #48]
    dd94:	str	w1, [x0, #16]
    dd98:	ldr	x0, [sp, #40]
    dd9c:	bl	c964 <grub_menu_entry_run+0x93c>
    dda0:	mov	w1, w0
    dda4:	ldr	x0, [sp, #48]
    dda8:	ldr	w0, [x0, #8]
    ddac:	sub	w0, w1, w0
    ddb0:	ldr	x1, [sp, #48]
    ddb4:	ldr	w1, [x1, #12]
    ddb8:	sub	w0, w0, w1
    ddbc:	sub	w0, w0, #0x1
    ddc0:	mov	w1, w0
    ddc4:	ldr	x0, [sp, #48]
    ddc8:	str	w1, [x0, #28]
    ddcc:	nop
    ddd0:	ldr	x19, [sp, #16]
    ddd4:	ldp	x29, x30, [sp], #96
    ddd8:	ret
    dddc:	nop
	...
    de10:	stp	x29, x30, [sp, #-96]!
    de14:	mov	x29, sp
    de18:	stp	x19, x20, [sp, #16]
    de1c:	str	w0, [sp, #44]
    de20:	str	x1, [sp, #32]
    de24:	ldr	x0, [sp, #32]
    de28:	str	x0, [sp, #80]
    de2c:	str	xzr, [sp, #88]
    de30:	ldr	x0, [sp, #80]
    de34:	ldr	x3, [x0, #56]
    de38:	and	w0, w2, #0xffff0000
    de3c:	mov	w2, w0
    de40:	ldr	x0, [sp, #80]
    de44:	ldr	w0, [x0, #24]
    de48:	and	w0, w0, #0xffff
    de4c:	bfi	w2, w0, #16, #16
    de50:	mov	w1, w2
    de54:	mov	x0, x3
    de58:	bl	ca10 <grub_menu_entry_run+0x9e8>
    de5c:	ldr	x0, [sp, #80]
    de60:	ldr	w0, [x0, #40]
    de64:	cmp	w0, #0x2
    de68:	b.eq	de7c <grub_menu_init_page+0x570>  // b.none
    de6c:	ldr	x0, [sp, #80]
    de70:	ldr	w0, [x0, #40]
    de74:	cmp	w0, #0x3
    de78:	b.ne	deb4 <grub_menu_init_page+0x5a8>  // b.any
    de7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    de80:	add	x0, x0, #0x0
    de84:	ldr	x0, [x0]
    de88:	str	x0, [sp, #72]
    de8c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    de90:	add	x0, x0, #0x0
    de94:	ldr	x0, [x0]
    de98:	ldr	x1, [x0]
    de9c:	ldr	x0, [sp, #72]
    dea0:	blr	x1
    dea4:	ldr	w1, [sp, #44]
    dea8:	bl	0 <grub_xasprintf>
    deac:	str	x0, [sp, #88]
    deb0:	b	dee8 <grub_menu_init_page+0x5dc>
    deb4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    deb8:	add	x0, x0, #0x0
    debc:	ldr	x0, [x0]
    dec0:	str	x0, [sp, #64]
    dec4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    dec8:	add	x0, x0, #0x0
    decc:	ldr	x0, [x0]
    ded0:	ldr	x1, [x0]
    ded4:	ldr	x0, [sp, #64]
    ded8:	blr	x1
    dedc:	ldr	w1, [sp, #44]
    dee0:	bl	0 <grub_xasprintf>
    dee4:	str	x0, [sp, #88]
    dee8:	ldr	x0, [sp, #88]
    deec:	cmp	x0, #0x0
    def0:	b.ne	df0c <grub_menu_init_page+0x600>  // b.any
    def4:	bl	0 <grub_print_error>
    def8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    defc:	add	x0, x0, #0x0
    df00:	ldr	x0, [x0]
    df04:	str	wzr, [x0]
    df08:	b	e07c <grub_menu_init_page+0x770>
    df0c:	ldr	x0, [sp, #80]
    df10:	ldr	w0, [x0, #40]
    df14:	cmp	w0, #0x0
    df18:	b.ne	dfd0 <grub_menu_init_page+0x6c4>  // b.any
    df1c:	ldr	x0, [sp, #80]
    df20:	ldr	x0, [x0, #56]
    df24:	mov	w4, #0x1                   	// #1
    df28:	mov	x3, x0
    df2c:	mov	w2, #0x1                   	// #1
    df30:	mov	w1, #0x3                   	// #3
    df34:	ldr	x0, [sp, #88]
    df38:	bl	ccfc <grub_getstringwidth+0xa0>
    df3c:	mov	w1, w0
    df40:	ldr	x0, [sp, #80]
    df44:	ldr	w0, [x0, #28]
    df48:	cmp	w1, w0
    df4c:	b.gt	df58 <grub_menu_init_page+0x64c>
    df50:	mov	w0, #0x1                   	// #1
    df54:	b	df5c <grub_menu_init_page+0x650>
    df58:	mov	w0, #0x2                   	// #2
    df5c:	ldr	x1, [sp, #80]
    df60:	str	w0, [x1, #40]
    df64:	ldr	x0, [sp, #80]
    df68:	ldr	w0, [x0, #40]
    df6c:	cmp	w0, #0x2
    df70:	b.ne	dfd0 <grub_menu_init_page+0x6c4>  // b.any
    df74:	ldr	x0, [sp, #88]
    df78:	bl	0 <grub_free>
    df7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    df80:	add	x0, x0, #0x0
    df84:	ldr	x0, [x0]
    df88:	str	x0, [sp, #56]
    df8c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    df90:	add	x0, x0, #0x0
    df94:	ldr	x0, [x0]
    df98:	ldr	x1, [x0]
    df9c:	ldr	x0, [sp, #56]
    dfa0:	blr	x1
    dfa4:	ldr	w1, [sp, #44]
    dfa8:	bl	0 <grub_xasprintf>
    dfac:	str	x0, [sp, #88]
    dfb0:	ldr	x0, [sp, #80]
    dfb4:	ldr	x0, [x0, #56]
    dfb8:	bl	c964 <grub_menu_entry_run+0x93c>
    dfbc:	cmp	w0, #0x9
    dfc0:	b.hi	dfd0 <grub_menu_init_page+0x6c4>  // b.pmore
    dfc4:	ldr	x0, [sp, #80]
    dfc8:	mov	w1, #0x3                   	// #3
    dfcc:	str	w1, [x0, #40]
    dfd0:	ldr	x0, [sp, #80]
    dfd4:	ldr	w0, [x0, #40]
    dfd8:	cmp	w0, #0x3
    dfdc:	b.ne	dfe8 <grub_menu_init_page+0x6dc>  // b.any
    dfe0:	mov	w0, #0x0                   	// #0
    dfe4:	b	dfec <grub_menu_init_page+0x6e0>
    dfe8:	mov	w0, #0x3                   	// #3
    dfec:	ldr	x1, [sp, #80]
    dff0:	ldr	w1, [x1, #40]
    dff4:	cmp	w1, #0x3
    dff8:	cset	w1, ne  // ne = any
    dffc:	and	w1, w1, #0xff
    e000:	mov	w2, w1
    e004:	ldr	x1, [sp, #80]
    e008:	ldr	x1, [x1, #56]
    e00c:	mov	x3, x1
    e010:	mov	w1, w0
    e014:	ldr	x0, [sp, #88]
    e018:	bl	cdf8 <grub_print_message_indented>
    e01c:	ldr	x0, [sp, #88]
    e020:	bl	0 <grub_free>
    e024:	ldr	x0, [sp, #80]
    e028:	ldr	x20, [x0, #56]
    e02c:	ldr	x0, [sp, #80]
    e030:	add	x0, x0, #0x8
    e034:	bl	cc38 <grub_menu_entry_run+0xc10>
    e038:	and	w0, w0, #0xffff
    e03c:	bfxil	w19, w0, #0, #16
    e040:	ldr	x0, [sp, #80]
    e044:	ldr	w0, [x0, #12]
    e048:	and	w1, w0, #0xffff
    e04c:	ldr	x0, [sp, #80]
    e050:	ldr	w0, [x0, #4]
    e054:	and	w0, w0, #0xffff
    e058:	add	w0, w1, w0
    e05c:	and	w0, w0, #0xffff
    e060:	bfi	w19, w0, #16, #16
    e064:	mov	w1, w19
    e068:	mov	x0, x20
    e06c:	bl	ca10 <grub_menu_entry_run+0x9e8>
    e070:	ldr	x0, [sp, #80]
    e074:	ldr	x0, [x0, #56]
    e078:	bl	c9d8 <grub_menu_entry_run+0x9b0>
    e07c:	ldp	x19, x20, [sp, #16]
    e080:	ldp	x29, x30, [sp], #96
    e084:	ret
	...
    e0a8:	stp	x29, x30, [sp, #-80]!
    e0ac:	mov	x29, sp
    e0b0:	str	x19, [sp, #16]
    e0b4:	str	w0, [sp, #44]
    e0b8:	str	x1, [sp, #32]
    e0bc:	ldr	x0, [sp, #32]
    e0c0:	str	x0, [sp, #64]
    e0c4:	ldr	x0, [sp, #64]
    e0c8:	ldr	w0, [x0, #4]
    e0cc:	str	w0, [sp, #60]
    e0d0:	str	wzr, [sp, #76]
    e0d4:	ldr	x0, [sp, #64]
    e0d8:	ldr	w0, [x0]
    e0dc:	ldr	w1, [sp, #44]
    e0e0:	sub	w1, w1, w0
    e0e4:	ldr	x0, [sp, #64]
    e0e8:	str	w1, [x0, #4]
    e0ec:	ldr	x0, [sp, #64]
    e0f0:	ldr	w1, [x0, #8]
    e0f4:	ldr	x0, [sp, #64]
    e0f8:	ldr	w0, [x0, #4]
    e0fc:	cmp	w1, w0
    e100:	b.gt	e13c <grub_menu_init_page+0x830>
    e104:	ldr	x0, [sp, #64]
    e108:	ldr	w0, [x0, #8]
    e10c:	sub	w0, w0, #0x1
    e110:	ldr	w1, [sp, #44]
    e114:	sub	w1, w1, w0
    e118:	ldr	x0, [sp, #64]
    e11c:	str	w1, [x0]
    e120:	ldr	x0, [sp, #64]
    e124:	ldr	w0, [x0, #8]
    e128:	sub	w1, w0, #0x1
    e12c:	ldr	x0, [sp, #64]
    e130:	str	w1, [x0, #4]
    e134:	mov	w0, #0x1                   	// #1
    e138:	str	w0, [sp, #76]
    e13c:	ldr	x0, [sp, #64]
    e140:	ldr	w0, [x0, #4]
    e144:	cmp	w0, #0x0
    e148:	b.ge	e168 <grub_menu_init_page+0x85c>  // b.tcont
    e14c:	ldr	x0, [sp, #64]
    e150:	str	wzr, [x0, #4]
    e154:	ldr	x0, [sp, #64]
    e158:	ldr	w1, [sp, #44]
    e15c:	str	w1, [x0]
    e160:	mov	w0, #0x1                   	// #1
    e164:	str	w0, [sp, #76]
    e168:	ldr	w0, [sp, #76]
    e16c:	cmp	w0, #0x0
    e170:	b.eq	e188 <grub_menu_init_page+0x87c>  // b.none
    e174:	ldr	x0, [sp, #64]
    e178:	ldr	x0, [x0, #48]
    e17c:	ldr	x1, [sp, #64]
    e180:	bl	d5f8 <grub_print_message_indented+0x800>
    e184:	b	e220 <grub_menu_init_page+0x914>
    e188:	ldr	x0, [sp, #64]
    e18c:	ldr	w1, [x0, #12]
    e190:	ldr	w0, [sp, #60]
    e194:	add	w19, w1, w0
    e198:	ldr	x0, [sp, #64]
    e19c:	ldr	x2, [x0, #48]
    e1a0:	ldr	x0, [sp, #64]
    e1a4:	ldr	w1, [x0]
    e1a8:	ldr	w0, [sp, #60]
    e1ac:	add	w0, w1, w0
    e1b0:	mov	w1, w0
    e1b4:	mov	x0, x2
    e1b8:	bl	66c0 <grub_menu_get_entry>
    e1bc:	ldr	x3, [sp, #64]
    e1c0:	mov	x2, x0
    e1c4:	mov	w1, #0x0                   	// #0
    e1c8:	mov	w0, w19
    e1cc:	bl	d2a8 <grub_print_message_indented+0x4b0>
    e1d0:	ldr	x0, [sp, #64]
    e1d4:	ldr	w1, [x0, #12]
    e1d8:	ldr	x0, [sp, #64]
    e1dc:	ldr	w0, [x0, #4]
    e1e0:	add	w19, w1, w0
    e1e4:	ldr	x0, [sp, #64]
    e1e8:	ldr	x2, [x0, #48]
    e1ec:	ldr	x0, [sp, #64]
    e1f0:	ldr	w1, [x0]
    e1f4:	ldr	x0, [sp, #64]
    e1f8:	ldr	w0, [x0, #4]
    e1fc:	add	w0, w1, w0
    e200:	mov	w1, w0
    e204:	mov	x0, x2
    e208:	bl	66c0 <grub_menu_get_entry>
    e20c:	ldr	x3, [sp, #64]
    e210:	mov	x2, x0
    e214:	mov	w1, #0x1                   	// #1
    e218:	mov	w0, w19
    e21c:	bl	d2a8 <grub_print_message_indented+0x4b0>
    e220:	ldr	x0, [sp, #64]
    e224:	ldr	x0, [x0, #56]
    e228:	bl	c9d8 <grub_menu_entry_run+0x9b0>
    e22c:	nop
    e230:	ldr	x19, [sp, #16]
    e234:	ldp	x29, x30, [sp], #80
    e238:	ret
    e23c:	stp	x29, x30, [sp, #-48]!
    e240:	mov	x29, sp
    e244:	str	x0, [sp, #24]
    e248:	ldr	x0, [sp, #24]
    e24c:	str	x0, [sp, #40]
    e250:	ldr	x0, [sp, #40]
    e254:	ldr	x0, [x0, #56]
    e258:	mov	w1, #0x1                   	// #1
    e25c:	bl	ca80 <grub_menu_entry_run+0xa58>
    e260:	ldr	x0, [sp, #40]
    e264:	ldr	x0, [x0, #56]
    e268:	bl	cac0 <grub_menu_entry_run+0xa98>
    e26c:	ldr	x0, [sp, #40]
    e270:	bl	0 <grub_free>
    e274:	nop
    e278:	ldp	x29, x30, [sp], #48
    e27c:	ret
    e280:	stp	x29, x30, [sp, #-80]!
    e284:	mov	x29, sp
    e288:	stp	x19, x20, [sp, #16]
    e28c:	stp	x21, x22, [sp, #32]
    e290:	str	x0, [sp, #56]
    e294:	ldr	x0, [sp, #56]
    e298:	str	x0, [sp, #64]
    e29c:	str	wzr, [sp, #76]
    e2a0:	b	e310 <grub_menu_init_page+0xa04>
    e2a4:	ldr	x0, [sp, #64]
    e2a8:	ldr	x2, [x0, #56]
    e2ac:	and	w0, w19, #0xffff0000
    e2b0:	mov	w19, w0
    e2b4:	ldr	x0, [sp, #64]
    e2b8:	ldr	w0, [x0, #24]
    e2bc:	and	w1, w0, #0xffff
    e2c0:	ldr	w0, [sp, #76]
    e2c4:	and	w0, w0, #0xffff
    e2c8:	add	w0, w1, w0
    e2cc:	and	w0, w0, #0xffff
    e2d0:	bfi	w19, w0, #16, #16
    e2d4:	mov	w1, w19
    e2d8:	mov	x0, x2
    e2dc:	bl	ca10 <grub_menu_entry_run+0x9e8>
    e2e0:	ldr	x0, [sp, #64]
    e2e4:	ldr	x22, [x0, #56]
    e2e8:	ldr	x0, [sp, #64]
    e2ec:	ldr	x0, [x0, #56]
    e2f0:	bl	c964 <grub_menu_entry_run+0x93c>
    e2f4:	sub	w0, w0, #0x1
    e2f8:	mov	w1, w0
    e2fc:	mov	x0, x22
    e300:	bl	cbf0 <grub_menu_entry_run+0xbc8>
    e304:	ldr	w0, [sp, #76]
    e308:	add	w0, w0, #0x1
    e30c:	str	w0, [sp, #76]
    e310:	ldr	x0, [sp, #64]
    e314:	ldr	w0, [x0, #28]
    e318:	ldr	w1, [sp, #76]
    e31c:	cmp	w1, w0
    e320:	b.lt	e2a4 <grub_menu_init_page+0x998>  // b.tstop
    e324:	ldr	x0, [sp, #64]
    e328:	ldr	w0, [x0, #8]
    e32c:	cmp	w0, #0x5
    e330:	b.gt	e404 <grub_menu_init_page+0xaf8>
    e334:	ldr	x0, [sp, #64]
    e338:	ldr	w0, [x0, #32]
    e33c:	cmp	w0, #0x0
    e340:	b.ne	e404 <grub_menu_init_page+0xaf8>  // b.any
    e344:	ldr	x0, [sp, #64]
    e348:	ldr	x2, [x0, #56]
    e34c:	ldr	x0, [sp, #64]
    e350:	ldr	w0, [x0, #16]
    e354:	and	w1, w0, #0xffff
    e358:	ldr	x0, [sp, #64]
    e35c:	ldr	w0, [x0, #20]
    e360:	and	w0, w0, #0xffff
    e364:	add	w0, w1, w0
    e368:	and	w1, w0, #0xffff
    e36c:	ldr	x0, [sp, #64]
    e370:	ldr	w0, [x0, #32]
    e374:	and	w0, w0, #0xffff
    e378:	add	w0, w1, w0
    e37c:	and	w0, w0, #0xffff
    e380:	add	w0, w0, #0x1
    e384:	and	w0, w0, #0xffff
    e388:	bfxil	w21, w0, #0, #16
    e38c:	ldr	x0, [sp, #64]
    e390:	ldr	w0, [x0, #12]
    e394:	and	w1, w0, #0xffff
    e398:	ldr	x0, [sp, #64]
    e39c:	ldr	w0, [x0, #8]
    e3a0:	and	w0, w0, #0xffff
    e3a4:	add	w0, w1, w0
    e3a8:	and	w0, w0, #0xffff
    e3ac:	sub	w0, w0, #0x1
    e3b0:	and	w0, w0, #0xffff
    e3b4:	bfi	w21, w0, #16, #16
    e3b8:	mov	w1, w21
    e3bc:	mov	x0, x2
    e3c0:	bl	ca10 <grub_menu_entry_run+0x9e8>
    e3c4:	ldr	x0, [sp, #64]
    e3c8:	ldr	x0, [x0, #56]
    e3cc:	mov	x1, x0
    e3d0:	mov	w0, #0x20                  	// #32
    e3d4:	bl	1077c <grub_putcode>
    e3d8:	ldr	x0, [sp, #64]
    e3dc:	str	wzr, [x0, #28]
    e3e0:	ldr	x0, [sp, #64]
    e3e4:	ldr	w0, [x0, #8]
    e3e8:	add	w1, w0, #0x1
    e3ec:	ldr	x0, [sp, #64]
    e3f0:	str	w1, [x0, #8]
    e3f4:	ldr	x0, [sp, #64]
    e3f8:	ldr	x0, [x0, #48]
    e3fc:	ldr	x1, [sp, #64]
    e400:	bl	d5f8 <grub_print_message_indented+0x800>
    e404:	ldr	x0, [sp, #64]
    e408:	ldr	x19, [x0, #56]
    e40c:	ldr	x0, [sp, #64]
    e410:	add	x0, x0, #0x8
    e414:	bl	cc38 <grub_menu_entry_run+0xc10>
    e418:	and	w0, w0, #0xffff
    e41c:	bfxil	w20, w0, #0, #16
    e420:	ldr	x0, [sp, #64]
    e424:	ldr	w0, [x0, #12]
    e428:	and	w1, w0, #0xffff
    e42c:	ldr	x0, [sp, #64]
    e430:	ldr	w0, [x0, #4]
    e434:	and	w0, w0, #0xffff
    e438:	add	w0, w1, w0
    e43c:	and	w0, w0, #0xffff
    e440:	bfi	w20, w0, #16, #16
    e444:	mov	w1, w20
    e448:	mov	x0, x19
    e44c:	bl	ca10 <grub_menu_entry_run+0x9e8>
    e450:	ldr	x0, [sp, #64]
    e454:	ldr	x0, [x0, #56]
    e458:	bl	c9d8 <grub_menu_entry_run+0x9b0>
    e45c:	nop
    e460:	ldp	x19, x20, [sp, #16]
    e464:	ldp	x21, x22, [sp, #32]
    e468:	ldp	x29, x30, [sp], #80
    e46c:	ret

000000000000e470 <grub_menu_try_text>:
    e470:	stp	x29, x30, [sp, #-64]!
    e474:	mov	x29, sp
    e478:	str	x0, [sp, #40]
    e47c:	str	w1, [sp, #36]
    e480:	str	x2, [sp, #24]
    e484:	str	w3, [sp, #32]
    e488:	mov	x0, #0x30                  	// #48
    e48c:	bl	0 <grub_zalloc>
    e490:	str	x0, [sp, #56]
    e494:	ldr	x0, [sp, #56]
    e498:	cmp	x0, #0x0
    e49c:	b.ne	e4b4 <grub_menu_try_text+0x44>  // b.any
    e4a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e4a4:	add	x0, x0, #0x0
    e4a8:	ldr	x0, [x0]
    e4ac:	ldr	w0, [x0]
    e4b0:	b	e614 <grub_menu_try_text+0x1a4>
    e4b4:	mov	x0, #0x40                  	// #64
    e4b8:	bl	0 <grub_zalloc>
    e4bc:	str	x0, [sp, #48]
    e4c0:	ldr	x0, [sp, #48]
    e4c4:	cmp	x0, #0x0
    e4c8:	b.ne	e4e8 <grub_menu_try_text+0x78>  // b.any
    e4cc:	ldr	x0, [sp, #56]
    e4d0:	bl	0 <grub_free>
    e4d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e4d8:	add	x0, x0, #0x0
    e4dc:	ldr	x0, [x0]
    e4e0:	ldr	w0, [x0]
    e4e4:	b	e614 <grub_menu_try_text+0x1a4>
    e4e8:	ldr	x0, [sp, #48]
    e4ec:	ldr	x1, [sp, #40]
    e4f0:	str	x1, [x0, #56]
    e4f4:	ldr	x0, [sp, #56]
    e4f8:	ldr	x1, [sp, #48]
    e4fc:	str	x1, [x0, #8]
    e500:	ldr	x0, [sp, #56]
    e504:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    e508:	add	x1, x1, #0x0
    e50c:	ldr	x1, [x1]
    e510:	str	x1, [x0, #16]
    e514:	ldr	x0, [sp, #56]
    e518:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    e51c:	add	x1, x1, #0x0
    e520:	ldr	x1, [x1]
    e524:	str	x1, [x0, #24]
    e528:	ldr	x0, [sp, #56]
    e52c:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    e530:	add	x1, x1, #0x0
    e534:	ldr	x1, [x1]
    e538:	str	x1, [x0, #32]
    e53c:	ldr	x0, [sp, #56]
    e540:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    e544:	add	x1, x1, #0x0
    e548:	ldr	x1, [x1]
    e54c:	str	x1, [x0, #40]
    e550:	ldr	x0, [sp, #48]
    e554:	ldr	x1, [sp, #24]
    e558:	str	x1, [x0, #48]
    e55c:	ldr	x0, [sp, #48]
    e560:	ldr	w1, [sp, #36]
    e564:	str	w1, [x0, #4]
    e568:	ldr	x0, [sp, #48]
    e56c:	str	wzr, [x0]
    e570:	ldr	x0, [sp, #48]
    e574:	ldr	x0, [x0, #56]
    e578:	mov	w1, #0x0                   	// #0
    e57c:	bl	ca80 <grub_menu_entry_run+0xa58>
    e580:	ldr	x0, [sp, #48]
    e584:	add	x1, x0, #0x8
    e588:	ldr	x0, [sp, #48]
    e58c:	ldr	x0, [x0, #56]
    e590:	mov	x3, x0
    e594:	mov	x2, x1
    e598:	mov	w1, #0x0                   	// #0
    e59c:	ldr	w0, [sp, #32]
    e5a0:	bl	d90c <grub_menu_init_page>
    e5a4:	ldr	x0, [sp, #48]
    e5a8:	ldr	w1, [x0, #8]
    e5ac:	ldr	x0, [sp, #48]
    e5b0:	ldr	w0, [x0, #4]
    e5b4:	cmp	w1, w0
    e5b8:	b.gt	e5f0 <grub_menu_try_text+0x180>
    e5bc:	ldr	x0, [sp, #48]
    e5c0:	ldr	w1, [x0, #4]
    e5c4:	ldr	x0, [sp, #48]
    e5c8:	ldr	w0, [x0, #8]
    e5cc:	sub	w0, w0, #0x1
    e5d0:	sub	w1, w1, w0
    e5d4:	ldr	x0, [sp, #48]
    e5d8:	str	w1, [x0]
    e5dc:	ldr	x0, [sp, #48]
    e5e0:	ldr	w0, [x0, #8]
    e5e4:	sub	w1, w0, #0x1
    e5e8:	ldr	x0, [sp, #48]
    e5ec:	str	w1, [x0, #4]
    e5f0:	ldr	x1, [sp, #48]
    e5f4:	ldr	x0, [sp, #24]
    e5f8:	bl	d5f8 <grub_print_message_indented+0x800>
    e5fc:	ldr	x0, [sp, #48]
    e600:	ldr	x0, [x0, #56]
    e604:	bl	c9d8 <grub_menu_entry_run+0x9b0>
    e608:	ldr	x0, [sp, #56]
    e60c:	bl	7468 <grub_menu_register_viewer>
    e610:	mov	w0, #0x0                   	// #0
    e614:	ldp	x29, x30, [sp], #64
    e618:	ret
    e61c:	nop
	...
    e648:	sub	sp, sp, #0x20
    e64c:	str	x0, [sp, #8]
    e650:	str	xzr, [sp, #16]
    e654:	ldr	x0, [sp, #8]
    e658:	str	x0, [sp, #24]
    e65c:	b	e680 <grub_menu_try_text+0x210>
    e660:	ldr	x0, [sp, #24]
    e664:	ldr	x0, [x0, #8]
    e668:	ldr	x1, [sp, #16]
    e66c:	add	x0, x1, x0
    e670:	str	x0, [sp, #16]
    e674:	ldr	x0, [sp, #24]
    e678:	ldr	x0, [x0, #40]
    e67c:	str	x0, [sp, #24]
    e680:	ldr	x0, [sp, #24]
    e684:	cmp	x0, #0x0
    e688:	b.ne	e660 <grub_menu_try_text+0x1f0>  // b.any
    e68c:	ldr	x0, [sp, #16]
    e690:	add	sp, sp, #0x20
    e694:	ret

000000000000e698 <grub_get_human_size>:
    e698:	stp	x29, x30, [sp, #-80]!
    e69c:	mov	x29, sp
    e6a0:	str	x0, [sp, #24]
    e6a4:	str	w1, [sp, #20]
    e6a8:	str	wzr, [sp, #68]
    e6ac:	ldr	w0, [sp, #20]
    e6b0:	cmp	w0, #0x2
    e6b4:	b.eq	e6dc <grub_get_human_size+0x44>  // b.none
    e6b8:	ldr	x1, [sp, #24]
    e6bc:	mov	x0, x1
    e6c0:	lsl	x0, x0, #1
    e6c4:	add	x0, x0, x1
    e6c8:	lsl	x0, x0, #3
    e6cc:	add	x0, x0, x1
    e6d0:	lsl	x0, x0, #2
    e6d4:	str	x0, [sp, #72]
    e6d8:	b	e704 <grub_get_human_size+0x6c>
    e6dc:	ldr	x0, [sp, #24]
    e6e0:	str	x0, [sp, #72]
    e6e4:	b	e704 <grub_get_human_size+0x6c>
    e6e8:	ldr	x0, [sp, #72]
    e6ec:	add	x0, x0, #0x200
    e6f0:	lsr	x0, x0, #10
    e6f4:	str	x0, [sp, #72]
    e6f8:	ldr	w0, [sp, #68]
    e6fc:	add	w0, w0, #0x1
    e700:	str	w0, [sp, #68]
    e704:	ldr	x1, [sp, #72]
    e708:	mov	x0, #0x8fff                	// #36863
    e70c:	movk	x0, #0x1, lsl #16
    e710:	cmp	x1, x0
    e714:	b.hi	e6e8 <grub_get_human_size+0x50>  // b.pmore
    e718:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e71c:	add	x0, x0, #0x0
    e720:	ldr	x2, [x0]
    e724:	ldr	w3, [sp, #68]
    e728:	ldr	w1, [sp, #20]
    e72c:	mov	x0, x1
    e730:	lsl	x0, x0, #1
    e734:	add	x0, x0, x1
    e738:	lsl	x0, x0, #1
    e73c:	add	x0, x0, x3
    e740:	ldr	x0, [x2, x0, lsl #3]
    e744:	str	x0, [sp, #40]
    e748:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e74c:	add	x0, x0, #0x0
    e750:	ldr	x0, [x0]
    e754:	ldr	x1, [x0]
    e758:	ldr	x0, [sp, #40]
    e75c:	blr	x1
    e760:	str	x0, [sp, #56]
    e764:	ldr	w0, [sp, #68]
    e768:	cmp	w0, #0x0
    e76c:	b.ne	e77c <grub_get_human_size+0xe4>  // b.any
    e770:	ldr	w0, [sp, #20]
    e774:	cmp	w0, #0x2
    e778:	b.ne	e7c8 <grub_get_human_size+0x130>  // b.any
    e77c:	add	x0, sp, #0x20
    e780:	mov	x2, x0
    e784:	mov	x1, #0x64                  	// #100
    e788:	ldr	x0, [sp, #72]
    e78c:	bl	0 <grub_divmod64>
    e790:	str	x0, [sp, #48]
    e794:	ldr	x0, [sp, #32]
    e798:	ldr	x5, [sp, #56]
    e79c:	mov	x4, x0
    e7a0:	ldr	x3, [sp, #48]
    e7a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e7a8:	add	x0, x0, #0x0
    e7ac:	ldr	x2, [x0]
    e7b0:	mov	x1, #0x1e                  	// #30
    e7b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e7b8:	add	x0, x0, #0x0
    e7bc:	ldr	x0, [x0]
    e7c0:	bl	0 <grub_snprintf>
    e7c4:	b	e7f0 <grub_get_human_size+0x158>
    e7c8:	ldr	x4, [sp, #56]
    e7cc:	ldr	x3, [sp, #24]
    e7d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e7d4:	add	x0, x0, #0x0
    e7d8:	ldr	x2, [x0]
    e7dc:	mov	x1, #0x1e                  	// #30
    e7e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e7e4:	add	x0, x0, #0x0
    e7e8:	ldr	x0, [x0]
    e7ec:	bl	0 <grub_snprintf>
    e7f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e7f4:	add	x0, x0, #0x0
    e7f8:	ldr	x0, [x0]
    e7fc:	ldp	x29, x30, [sp], #80
    e800:	ret
    e804:	nop
	...

000000000000e830 <grub_normal_print_device_info>:
    e830:	stp	x29, x30, [sp, #-192]!
    e834:	mov	x29, sp
    e838:	stp	x19, x20, [sp, #16]
    e83c:	stp	x21, x22, [sp, #32]
    e840:	stp	x23, x24, [sp, #48]
    e844:	str	x0, [sp, #72]
    e848:	mov	w1, #0x2c                  	// #44
    e84c:	ldr	x0, [sp, #72]
    e850:	bl	0 <grub_strchr>
    e854:	str	x0, [sp, #176]
    e858:	ldr	x0, [sp, #176]
    e85c:	cmp	x0, #0x0
    e860:	b.eq	e8bc <grub_normal_print_device_info+0x8c>  // b.none
    e864:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e868:	add	x0, x0, #0x0
    e86c:	ldr	x0, [x0]
    e870:	ldr	x1, [x0]
    e874:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e878:	add	x0, x0, #0x0
    e87c:	ldr	x0, [x0]
    e880:	blr	x1
    e884:	ldr	x1, [sp, #72]
    e888:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e88c:	add	x0, x0, #0x0
    e890:	ldr	x0, [x0]
    e894:	bl	0 <grub_printf_>
    e898:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e89c:	add	x0, x0, #0x0
    e8a0:	ldr	x0, [x0]
    e8a4:	ldr	x1, [x0]
    e8a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e8ac:	add	x0, x0, #0x0
    e8b0:	ldr	x0, [x0]
    e8b4:	blr	x1
    e8b8:	b	e8f0 <grub_normal_print_device_info+0xc0>
    e8bc:	ldr	x1, [sp, #72]
    e8c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e8c4:	add	x0, x0, #0x0
    e8c8:	ldr	x0, [x0]
    e8cc:	bl	0 <grub_printf_>
    e8d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e8d4:	add	x0, x0, #0x0
    e8d8:	ldr	x0, [x0]
    e8dc:	ldr	x1, [x0]
    e8e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e8e4:	add	x0, x0, #0x0
    e8e8:	ldr	x0, [x0]
    e8ec:	blr	x1
    e8f0:	ldr	x0, [sp, #72]
    e8f4:	bl	0 <grub_device_open>
    e8f8:	str	x0, [sp, #168]
    e8fc:	ldr	x0, [sp, #168]
    e900:	cmp	x0, #0x0
    e904:	b.ne	e948 <grub_normal_print_device_info+0x118>  // b.any
    e908:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e90c:	add	x0, x0, #0x0
    e910:	ldr	x0, [x0]
    e914:	str	x0, [sp, #152]
    e918:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e91c:	add	x0, x0, #0x0
    e920:	ldr	x0, [x0]
    e924:	ldr	x1, [x0]
    e928:	ldr	x0, [sp, #152]
    e92c:	blr	x1
    e930:	mov	x1, x0
    e934:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e938:	add	x0, x0, #0x0
    e93c:	ldr	x0, [x0]
    e940:	bl	0 <grub_printf>
    e944:	b	edb0 <grub_normal_print_device_info+0x580>
    e948:	ldr	x0, [sp, #168]
    e94c:	ldr	x0, [x0]
    e950:	cmp	x0, #0x0
    e954:	b.eq	edb0 <grub_normal_print_device_info+0x580>  // b.none
    e958:	ldr	x0, [sp, #168]
    e95c:	bl	0 <grub_fs_probe>
    e960:	str	x0, [sp, #160]
    e964:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e968:	add	x0, x0, #0x0
    e96c:	ldr	x0, [x0]
    e970:	str	wzr, [x0]
    e974:	ldr	x0, [sp, #160]
    e978:	cmp	x0, #0x0
    e97c:	b.eq	ebe8 <grub_normal_print_device_info+0x3b8>  // b.none
    e980:	ldr	x0, [sp, #160]
    e984:	ldr	x0, [x0, #16]
    e988:	str	x0, [sp, #184]
    e98c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e990:	add	x0, x0, #0x0
    e994:	ldr	x1, [x0]
    e998:	ldr	x0, [sp, #184]
    e99c:	bl	0 <grub_strcmp>
    e9a0:	cmp	w0, #0x0
    e9a4:	b.ne	e9b8 <grub_normal_print_device_info+0x188>  // b.any
    e9a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e9ac:	add	x0, x0, #0x0
    e9b0:	ldr	x0, [x0]
    e9b4:	str	x0, [sp, #184]
    e9b8:	ldr	x1, [sp, #184]
    e9bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e9c0:	add	x0, x0, #0x0
    e9c4:	ldr	x0, [x0]
    e9c8:	bl	0 <grub_printf_>
    e9cc:	ldr	x0, [sp, #160]
    e9d0:	ldr	x0, [x0, #56]
    e9d4:	cmp	x0, #0x0
    e9d8:	b.eq	ea78 <grub_normal_print_device_info+0x248>  // b.none
    e9dc:	ldr	x0, [sp, #160]
    e9e0:	ldr	x2, [x0, #56]
    e9e4:	add	x0, sp, #0x70
    e9e8:	mov	x1, x0
    e9ec:	ldr	x0, [sp, #168]
    e9f0:	blr	x2
    e9f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    e9f8:	add	x0, x0, #0x0
    e9fc:	ldr	x0, [x0]
    ea00:	ldr	w0, [x0]
    ea04:	cmp	w0, #0x0
    ea08:	b.ne	ea68 <grub_normal_print_device_info+0x238>  // b.any
    ea0c:	ldr	x0, [sp, #112]
    ea10:	cmp	x0, #0x0
    ea14:	b.eq	ea60 <grub_normal_print_device_info+0x230>  // b.none
    ea18:	ldr	x0, [sp, #112]
    ea1c:	bl	0 <grub_strlen>
    ea20:	cmp	x0, #0x0
    ea24:	b.eq	ea60 <grub_normal_print_device_info+0x230>  // b.none
    ea28:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ea2c:	add	x0, x0, #0x0
    ea30:	ldr	x0, [x0]
    ea34:	ldr	x1, [x0]
    ea38:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ea3c:	add	x0, x0, #0x0
    ea40:	ldr	x0, [x0]
    ea44:	blr	x1
    ea48:	ldr	x0, [sp, #112]
    ea4c:	mov	x1, x0
    ea50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ea54:	add	x0, x0, #0x0
    ea58:	ldr	x0, [x0]
    ea5c:	bl	0 <grub_printf_>
    ea60:	ldr	x0, [sp, #112]
    ea64:	bl	0 <grub_free>
    ea68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ea6c:	add	x0, x0, #0x0
    ea70:	ldr	x0, [x0]
    ea74:	str	wzr, [x0]
    ea78:	ldr	x0, [sp, #160]
    ea7c:	ldr	x0, [x0, #72]
    ea80:	cmp	x0, #0x0
    ea84:	b.eq	eb58 <grub_normal_print_device_info+0x328>  // b.none
    ea88:	ldr	x0, [sp, #160]
    ea8c:	ldr	x2, [x0, #72]
    ea90:	add	x0, sp, #0x6c
    ea94:	mov	x1, x0
    ea98:	ldr	x0, [sp, #168]
    ea9c:	blr	x2
    eaa0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    eaa4:	add	x0, x0, #0x0
    eaa8:	ldr	x0, [x0]
    eaac:	ldr	w0, [x0]
    eab0:	cmp	w0, #0x0
    eab4:	b.ne	eb48 <grub_normal_print_device_info+0x318>  // b.any
    eab8:	ldr	w0, [sp, #108]
    eabc:	add	x1, sp, #0x60
    eac0:	bl	61d0 <grub_unixtime2datetime>
    eac4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    eac8:	add	x0, x0, #0x0
    eacc:	ldr	x0, [x0]
    ead0:	ldr	x1, [x0]
    ead4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ead8:	add	x0, x0, #0x0
    eadc:	ldr	x0, [x0]
    eae0:	blr	x1
    eae4:	ldrh	w0, [sp, #96]
    eae8:	mov	w19, w0
    eaec:	ldrb	w0, [sp, #98]
    eaf0:	mov	w20, w0
    eaf4:	ldrb	w0, [sp, #99]
    eaf8:	mov	w21, w0
    eafc:	ldrb	w0, [sp, #100]
    eb00:	mov	w22, w0
    eb04:	ldrb	w0, [sp, #101]
    eb08:	mov	w23, w0
    eb0c:	ldrb	w0, [sp, #102]
    eb10:	mov	w24, w0
    eb14:	add	x0, sp, #0x60
    eb18:	bl	6170 <grub_get_weekday_name>
    eb1c:	mov	x7, x0
    eb20:	mov	w6, w24
    eb24:	mov	w5, w23
    eb28:	mov	w4, w22
    eb2c:	mov	w3, w21
    eb30:	mov	w2, w20
    eb34:	mov	w1, w19
    eb38:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    eb3c:	add	x0, x0, #0x0
    eb40:	ldr	x0, [x0]
    eb44:	bl	0 <grub_printf_>
    eb48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    eb4c:	add	x0, x0, #0x0
    eb50:	ldr	x0, [x0]
    eb54:	str	wzr, [x0]
    eb58:	ldr	x0, [sp, #160]
    eb5c:	ldr	x0, [x0, #64]
    eb60:	cmp	x0, #0x0
    eb64:	b.eq	ec24 <grub_normal_print_device_info+0x3f4>  // b.none
    eb68:	ldr	x0, [sp, #160]
    eb6c:	ldr	x2, [x0, #64]
    eb70:	add	x0, sp, #0x58
    eb74:	mov	x1, x0
    eb78:	ldr	x0, [sp, #168]
    eb7c:	blr	x2
    eb80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    eb84:	add	x0, x0, #0x0
    eb88:	ldr	x0, [x0]
    eb8c:	ldr	w0, [x0]
    eb90:	cmp	w0, #0x0
    eb94:	b.ne	ebd4 <grub_normal_print_device_info+0x3a4>  // b.any
    eb98:	ldr	x0, [sp, #88]
    eb9c:	cmp	x0, #0x0
    eba0:	b.eq	ebcc <grub_normal_print_device_info+0x39c>  // b.none
    eba4:	ldr	x0, [sp, #88]
    eba8:	bl	0 <grub_strlen>
    ebac:	cmp	x0, #0x0
    ebb0:	b.eq	ebcc <grub_normal_print_device_info+0x39c>  // b.none
    ebb4:	ldr	x0, [sp, #88]
    ebb8:	mov	x1, x0
    ebbc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ebc0:	add	x0, x0, #0x0
    ebc4:	ldr	x0, [x0]
    ebc8:	bl	0 <grub_printf>
    ebcc:	ldr	x0, [sp, #88]
    ebd0:	bl	0 <grub_free>
    ebd4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ebd8:	add	x0, x0, #0x0
    ebdc:	ldr	x0, [x0]
    ebe0:	str	wzr, [x0]
    ebe4:	b	ec24 <grub_normal_print_device_info+0x3f4>
    ebe8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ebec:	add	x0, x0, #0x0
    ebf0:	ldr	x0, [x0]
    ebf4:	str	x0, [sp, #144]
    ebf8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ebfc:	add	x0, x0, #0x0
    ec00:	ldr	x0, [x0]
    ec04:	ldr	x1, [x0]
    ec08:	ldr	x0, [sp, #144]
    ec0c:	blr	x1
    ec10:	mov	x1, x0
    ec14:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ec18:	add	x0, x0, #0x0
    ec1c:	ldr	x0, [x0]
    ec20:	bl	0 <grub_printf>
    ec24:	ldr	x0, [sp, #168]
    ec28:	ldr	x0, [x0]
    ec2c:	ldr	x0, [x0, #40]
    ec30:	cmp	x0, #0x0
    ec34:	b.eq	ecc4 <grub_normal_print_device_info+0x494>  // b.none
    ec38:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ec3c:	add	x0, x0, #0x0
    ec40:	ldr	x0, [x0]
    ec44:	str	x0, [sp, #136]
    ec48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ec4c:	add	x0, x0, #0x0
    ec50:	ldr	x0, [x0]
    ec54:	ldr	x1, [x0]
    ec58:	ldr	x0, [sp, #136]
    ec5c:	blr	x1
    ec60:	mov	x20, x0
    ec64:	ldr	x0, [sp, #168]
    ec68:	ldr	x0, [x0]
    ec6c:	ldr	x0, [x0, #40]
    ec70:	bl	e648 <grub_menu_try_text+0x1d8>
    ec74:	lsr	x19, x0, #1
    ec78:	ldr	x0, [sp, #168]
    ec7c:	ldr	x0, [x0]
    ec80:	ldr	x0, [x0, #40]
    ec84:	bl	e648 <grub_menu_try_text+0x1d8>
    ec88:	and	x0, x0, #0x1
    ec8c:	cmp	x0, #0x0
    ec90:	b.eq	eca4 <grub_normal_print_device_info+0x474>  // b.none
    ec94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ec98:	add	x0, x0, #0x0
    ec9c:	ldr	x0, [x0]
    eca0:	b	ecb0 <grub_normal_print_device_info+0x480>
    eca4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    eca8:	add	x0, x0, #0x0
    ecac:	ldr	x0, [x0]
    ecb0:	mov	x2, x0
    ecb4:	mov	x1, x19
    ecb8:	mov	x0, x20
    ecbc:	bl	0 <grub_printf>
    ecc0:	b	ecec <grub_normal_print_device_info+0x4bc>
    ecc4:	ldr	x0, [sp, #168]
    ecc8:	ldr	x0, [x0]
    eccc:	ldr	w0, [x0, #24]
    ecd0:	mov	w1, #0x1                   	// #1
    ecd4:	lsl	w0, w1, w0
    ecd8:	mov	w1, w0
    ecdc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ece0:	add	x0, x0, #0x0
    ece4:	ldr	x0, [x0]
    ece8:	bl	0 <grub_printf_>
    ecec:	ldr	x0, [sp, #168]
    ecf0:	ldr	x0, [x0]
    ecf4:	bl	0 <grub_disk_get_size>
    ecf8:	cmn	x0, #0x1
    ecfc:	b.ne	ed14 <grub_normal_print_device_info+0x4e4>  // b.any
    ed00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ed04:	add	x0, x0, #0x0
    ed08:	ldr	x0, [x0]
    ed0c:	bl	0 <grub_puts_>
    ed10:	b	edb0 <grub_normal_print_device_info+0x580>
    ed14:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ed18:	add	x0, x0, #0x0
    ed1c:	ldr	x0, [x0]
    ed20:	str	x0, [sp, #128]
    ed24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ed28:	add	x0, x0, #0x0
    ed2c:	ldr	x0, [x0]
    ed30:	ldr	x1, [x0]
    ed34:	ldr	x0, [sp, #128]
    ed38:	blr	x1
    ed3c:	mov	x20, x0
    ed40:	ldr	x0, [sp, #168]
    ed44:	ldr	x0, [x0]
    ed48:	bl	0 <grub_disk_get_size>
    ed4c:	lsr	x19, x0, #1
    ed50:	ldr	x0, [sp, #168]
    ed54:	ldr	x0, [x0]
    ed58:	bl	0 <grub_disk_get_size>
    ed5c:	and	x0, x0, #0x1
    ed60:	cmp	x0, #0x0
    ed64:	b.eq	ed94 <grub_normal_print_device_info+0x564>  // b.none
    ed68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ed6c:	add	x0, x0, #0x0
    ed70:	ldr	x0, [x0]
    ed74:	str	x0, [sp, #120]
    ed78:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ed7c:	add	x0, x0, #0x0
    ed80:	ldr	x0, [x0]
    ed84:	ldr	x1, [x0]
    ed88:	ldr	x0, [sp, #120]
    ed8c:	blr	x1
    ed90:	b	eda0 <grub_normal_print_device_info+0x570>
    ed94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ed98:	add	x0, x0, #0x0
    ed9c:	ldr	x0, [x0]
    eda0:	mov	x2, x0
    eda4:	mov	x1, x19
    eda8:	mov	x0, x20
    edac:	bl	0 <grub_printf>
    edb0:	ldr	x0, [sp, #168]
    edb4:	cmp	x0, #0x0
    edb8:	b.eq	edc4 <grub_normal_print_device_info+0x594>  // b.none
    edbc:	ldr	x0, [sp, #168]
    edc0:	bl	0 <grub_device_close>
    edc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    edc8:	add	x0, x0, #0x0
    edcc:	ldr	x0, [x0]
    edd0:	ldr	x1, [x0]
    edd4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    edd8:	add	x0, x0, #0x0
    eddc:	ldr	x0, [x0]
    ede0:	blr	x1
    ede4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ede8:	add	x0, x0, #0x0
    edec:	ldr	x0, [x0]
    edf0:	ldr	w0, [x0]
    edf4:	ldp	x19, x20, [sp, #16]
    edf8:	ldp	x21, x22, [sp, #32]
    edfc:	ldp	x23, x24, [sp, #48]
    ee00:	ldp	x29, x30, [sp], #192
    ee04:	ret
	...
    eec0:	sub	sp, sp, #0x10
    eec4:	str	w0, [sp, #12]
    eec8:	ldr	w0, [sp, #12]
    eecc:	cmp	w0, #0x40
    eed0:	b.le	eeec <grub_normal_print_device_info+0x6bc>
    eed4:	ldr	w0, [sp, #12]
    eed8:	cmp	w0, #0x5a
    eedc:	b.gt	eeec <grub_normal_print_device_info+0x6bc>
    eee0:	ldr	w0, [sp, #12]
    eee4:	add	w0, w0, #0x20
    eee8:	b	eef0 <grub_normal_print_device_info+0x6c0>
    eeec:	ldr	w0, [sp, #12]
    eef0:	add	sp, sp, #0x10
    eef4:	ret
    eef8:	stp	x29, x30, [sp, #-48]!
    eefc:	mov	x29, sp
    ef00:	str	x19, [sp, #16]
    ef04:	str	x0, [sp, #40]
    ef08:	str	x1, [sp, #32]
    ef0c:	b	ef4c <grub_normal_print_device_info+0x71c>
    ef10:	ldr	x0, [sp, #40]
    ef14:	ldrb	w0, [x0]
    ef18:	bl	eec0 <grub_normal_print_device_info+0x690>
    ef1c:	mov	w19, w0
    ef20:	ldr	x0, [sp, #32]
    ef24:	ldrb	w0, [x0]
    ef28:	bl	eec0 <grub_normal_print_device_info+0x690>
    ef2c:	cmp	w19, w0
    ef30:	b.ne	ef70 <grub_normal_print_device_info+0x740>  // b.any
    ef34:	ldr	x0, [sp, #40]
    ef38:	add	x0, x0, #0x1
    ef3c:	str	x0, [sp, #40]
    ef40:	ldr	x0, [sp, #32]
    ef44:	add	x0, x0, #0x1
    ef48:	str	x0, [sp, #32]
    ef4c:	ldr	x0, [sp, #40]
    ef50:	ldrb	w0, [x0]
    ef54:	cmp	w0, #0x0
    ef58:	b.eq	ef74 <grub_normal_print_device_info+0x744>  // b.none
    ef5c:	ldr	x0, [sp, #32]
    ef60:	ldrb	w0, [x0]
    ef64:	cmp	w0, #0x0
    ef68:	b.ne	ef10 <grub_normal_print_device_info+0x6e0>  // b.any
    ef6c:	b	ef74 <grub_normal_print_device_info+0x744>
    ef70:	nop
    ef74:	ldr	x0, [sp, #40]
    ef78:	ldrb	w0, [x0]
    ef7c:	bl	eec0 <grub_normal_print_device_info+0x690>
    ef80:	mov	w19, w0
    ef84:	ldr	x0, [sp, #32]
    ef88:	ldrb	w0, [x0]
    ef8c:	bl	eec0 <grub_normal_print_device_info+0x690>
    ef90:	sub	w0, w19, w0
    ef94:	ldr	x19, [sp, #16]
    ef98:	ldp	x29, x30, [sp], #48
    ef9c:	ret
    efa0:	stp	x29, x30, [sp, #-48]!
    efa4:	mov	x29, sp
    efa8:	str	x0, [sp, #24]
    efac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    efb0:	add	x0, x0, #0x0
    efb4:	ldr	x0, [x0]
    efb8:	ldr	w0, [x0]
    efbc:	cmp	w0, #0x0
    efc0:	b.ne	f090 <grub_normal_print_device_info+0x860>  // b.any
    efc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    efc8:	add	x0, x0, #0x0
    efcc:	ldr	x0, [x0]
    efd0:	ldr	w0, [x0]
    efd4:	add	w1, w0, #0x1
    efd8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    efdc:	add	x0, x0, #0x0
    efe0:	ldr	x0, [x0]
    efe4:	str	w1, [x0]
    efe8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    efec:	add	x0, x0, #0x0
    eff0:	ldr	x0, [x0]
    eff4:	ldr	x0, [x0]
    eff8:	str	x0, [sp, #40]
    effc:	b	f05c <grub_normal_print_device_info+0x82c>
    f000:	ldr	x0, [sp, #40]
    f004:	ldr	x0, [x0, #8]
    f008:	mov	x1, x0
    f00c:	ldr	x0, [sp, #24]
    f010:	bl	eef8 <grub_normal_print_device_info+0x6c8>
    f014:	cmp	w0, #0x0
    f018:	b.ne	f050 <grub_normal_print_device_info+0x820>  // b.any
    f01c:	ldr	x0, [sp, #40]
    f020:	ldr	x0, [x0, #16]
    f024:	bl	0 <grub_dl_load>
    f028:	str	x0, [sp, #32]
    f02c:	ldr	x0, [sp, #32]
    f030:	cmp	x0, #0x0
    f034:	b.eq	f040 <grub_normal_print_device_info+0x810>  // b.none
    f038:	ldr	x0, [sp, #32]
    f03c:	bl	0 <grub_dl_ref>
    f040:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f044:	add	x0, x0, #0x0
    f048:	ldr	x0, [x0]
    f04c:	str	wzr, [x0]
    f050:	ldr	x0, [sp, #40]
    f054:	ldr	x0, [x0]
    f058:	str	x0, [sp, #40]
    f05c:	ldr	x0, [sp, #40]
    f060:	cmp	x0, #0x0
    f064:	b.ne	f000 <grub_normal_print_device_info+0x7d0>  // b.any
    f068:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f06c:	add	x0, x0, #0x0
    f070:	ldr	x0, [x0]
    f074:	ldr	w0, [x0]
    f078:	sub	w1, w0, #0x1
    f07c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f080:	add	x0, x0, #0x0
    f084:	ldr	x0, [x0]
    f088:	str	w1, [x0]
    f08c:	b	f094 <grub_normal_print_device_info+0x864>
    f090:	nop
    f094:	ldp	x29, x30, [sp], #48
    f098:	ret
    f09c:	nop
	...
    f0b8:	stp	x29, x30, [sp, #-32]!
    f0bc:	mov	x29, sp
    f0c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f0c4:	add	x0, x0, #0x0
    f0c8:	ldr	x0, [x0]
    f0cc:	ldr	x0, [x0]
    f0d0:	str	x0, [sp, #24]
    f0d4:	b	f10c <grub_normal_print_device_info+0x8dc>
    f0d8:	ldr	x0, [sp, #24]
    f0dc:	ldr	x0, [x0]
    f0e0:	str	x0, [sp, #16]
    f0e4:	ldr	x0, [sp, #24]
    f0e8:	ldr	x0, [x0, #8]
    f0ec:	bl	0 <grub_free>
    f0f0:	ldr	x0, [sp, #24]
    f0f4:	ldr	x0, [x0, #16]
    f0f8:	bl	0 <grub_free>
    f0fc:	ldr	x0, [sp, #24]
    f100:	bl	0 <grub_free>
    f104:	ldr	x0, [sp, #16]
    f108:	str	x0, [sp, #24]
    f10c:	ldr	x0, [sp, #24]
    f110:	cmp	x0, #0x0
    f114:	b.ne	f0d8 <grub_normal_print_device_info+0x8a8>  // b.any
    f118:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f11c:	add	x0, x0, #0x0
    f120:	ldr	x0, [x0]
    f124:	str	xzr, [x0]
    f128:	nop
    f12c:	ldp	x29, x30, [sp], #32
    f130:	ret
    f134:	nop
	...

000000000000f140 <read_crypto_list>:
    f140:	stp	x29, x30, [sp, #-80]!
    f144:	mov	x29, sp
    f148:	str	x0, [sp, #24]
    f14c:	str	xzr, [sp, #56]
    f150:	ldr	x0, [sp, #24]
    f154:	cmp	x0, #0x0
    f158:	b.ne	f170 <read_crypto_list+0x30>  // b.any
    f15c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f160:	add	x0, x0, #0x0
    f164:	ldr	x0, [x0]
    f168:	str	wzr, [x0]
    f16c:	b	f3b8 <read_crypto_list+0x278>
    f170:	ldr	x1, [sp, #24]
    f174:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f178:	add	x0, x0, #0x0
    f17c:	ldr	x0, [x0]
    f180:	bl	0 <grub_xasprintf>
    f184:	str	x0, [sp, #48]
    f188:	ldr	x0, [sp, #48]
    f18c:	cmp	x0, #0x0
    f190:	b.ne	f1a8 <read_crypto_list+0x68>  // b.any
    f194:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f198:	add	x0, x0, #0x0
    f19c:	ldr	x0, [x0]
    f1a0:	str	wzr, [x0]
    f1a4:	b	f3b8 <read_crypto_list+0x278>
    f1a8:	mov	w1, #0x32                  	// #50
    f1ac:	ldr	x0, [sp, #48]
    f1b0:	bl	0 <grub_file_open>
    f1b4:	str	x0, [sp, #40]
    f1b8:	ldr	x0, [sp, #48]
    f1bc:	bl	0 <grub_free>
    f1c0:	ldr	x0, [sp, #40]
    f1c4:	cmp	x0, #0x0
    f1c8:	b.ne	f1e0 <read_crypto_list+0xa0>  // b.any
    f1cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f1d0:	add	x0, x0, #0x0
    f1d4:	ldr	x0, [x0]
    f1d8:	str	wzr, [x0]
    f1dc:	b	f3b8 <read_crypto_list+0x278>
    f1e0:	bl	f0b8 <grub_normal_print_device_info+0x888>
    f1e4:	ldr	x0, [sp, #40]
    f1e8:	bl	16988 <grub_file_getline>
    f1ec:	str	x0, [sp, #56]
    f1f0:	ldr	x0, [sp, #56]
    f1f4:	cmp	x0, #0x0
    f1f8:	b.eq	f380 <read_crypto_list+0x240>  // b.none
    f1fc:	ldr	x0, [sp, #56]
    f200:	str	x0, [sp, #64]
    f204:	b	f214 <read_crypto_list+0xd4>
    f208:	ldr	x0, [sp, #64]
    f20c:	add	x0, x0, #0x1
    f210:	str	x0, [sp, #64]
    f214:	ldr	x0, [sp, #64]
    f218:	ldrb	w0, [x0]
    f21c:	bl	0 <grub_isspace>
    f220:	cmp	w0, #0x0
    f224:	b.ne	f208 <read_crypto_list+0xc8>  // b.any
    f228:	mov	w1, #0x3a                  	// #58
    f22c:	ldr	x0, [sp, #64]
    f230:	bl	0 <grub_strchr>
    f234:	str	x0, [sp, #72]
    f238:	ldr	x0, [sp, #72]
    f23c:	cmp	x0, #0x0
    f240:	b.eq	f370 <read_crypto_list+0x230>  // b.none
    f244:	ldr	x0, [sp, #72]
    f248:	strb	wzr, [x0]
    f24c:	ldr	x0, [sp, #72]
    f250:	add	x0, x0, #0x1
    f254:	str	x0, [sp, #72]
    f258:	b	f268 <read_crypto_list+0x128>
    f25c:	ldr	x0, [sp, #72]
    f260:	add	x0, x0, #0x1
    f264:	str	x0, [sp, #72]
    f268:	ldr	x0, [sp, #72]
    f26c:	ldrb	w0, [x0]
    f270:	cmp	w0, #0x20
    f274:	b.eq	f25c <read_crypto_list+0x11c>  // b.none
    f278:	ldr	x0, [sp, #72]
    f27c:	ldrb	w0, [x0]
    f280:	cmp	w0, #0x9
    f284:	b.eq	f25c <read_crypto_list+0x11c>  // b.none
    f288:	mov	x0, #0x18                  	// #24
    f28c:	bl	0 <grub_malloc>
    f290:	str	x0, [sp, #32]
    f294:	ldr	x0, [sp, #32]
    f298:	cmp	x0, #0x0
    f29c:	b.ne	f2b4 <read_crypto_list+0x174>  // b.any
    f2a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f2a4:	add	x0, x0, #0x0
    f2a8:	ldr	x0, [x0]
    f2ac:	str	wzr, [x0]
    f2b0:	b	f374 <read_crypto_list+0x234>
    f2b4:	ldr	x0, [sp, #64]
    f2b8:	bl	0 <grub_strdup>
    f2bc:	mov	x1, x0
    f2c0:	ldr	x0, [sp, #32]
    f2c4:	str	x1, [x0, #8]
    f2c8:	ldr	x0, [sp, #32]
    f2cc:	ldr	x0, [x0, #8]
    f2d0:	cmp	x0, #0x0
    f2d4:	b.ne	f2f4 <read_crypto_list+0x1b4>  // b.any
    f2d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f2dc:	add	x0, x0, #0x0
    f2e0:	ldr	x0, [x0]
    f2e4:	str	wzr, [x0]
    f2e8:	ldr	x0, [sp, #32]
    f2ec:	bl	0 <grub_free>
    f2f0:	b	f374 <read_crypto_list+0x234>
    f2f4:	ldr	x0, [sp, #72]
    f2f8:	bl	0 <grub_strdup>
    f2fc:	mov	x1, x0
    f300:	ldr	x0, [sp, #32]
    f304:	str	x1, [x0, #16]
    f308:	ldr	x0, [sp, #32]
    f30c:	ldr	x0, [x0, #16]
    f310:	cmp	x0, #0x0
    f314:	b.ne	f340 <read_crypto_list+0x200>  // b.any
    f318:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f31c:	add	x0, x0, #0x0
    f320:	ldr	x0, [x0]
    f324:	str	wzr, [x0]
    f328:	ldr	x0, [sp, #32]
    f32c:	ldr	x0, [x0, #8]
    f330:	bl	0 <grub_free>
    f334:	ldr	x0, [sp, #32]
    f338:	bl	0 <grub_free>
    f33c:	b	f374 <read_crypto_list+0x234>
    f340:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f344:	add	x0, x0, #0x0
    f348:	ldr	x0, [x0]
    f34c:	ldr	x1, [x0]
    f350:	ldr	x0, [sp, #32]
    f354:	str	x1, [x0]
    f358:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f35c:	add	x0, x0, #0x0
    f360:	ldr	x0, [x0]
    f364:	ldr	x1, [sp, #32]
    f368:	str	x1, [x0]
    f36c:	b	f374 <read_crypto_list+0x234>
    f370:	nop
    f374:	ldr	x0, [sp, #56]
    f378:	bl	0 <grub_free>
    f37c:	b	f1e4 <read_crypto_list+0xa4>
    f380:	nop
    f384:	ldr	x0, [sp, #40]
    f388:	bl	0 <grub_file_close>
    f38c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f390:	add	x0, x0, #0x0
    f394:	ldr	x0, [x0]
    f398:	str	wzr, [x0]
    f39c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f3a0:	add	x0, x0, #0x0
    f3a4:	ldr	x0, [x0]
    f3a8:	adrp	x1, 0 <grub_normal_free_menu-0x168>
    f3ac:	add	x1, x1, #0x0
    f3b0:	ldr	x1, [x1]
    f3b4:	str	x1, [x0]
    f3b8:	ldp	x29, x30, [sp], #80
    f3bc:	ret
	...
    f3e8:	sub	sp, sp, #0x10
    f3ec:	str	x0, [sp, #8]
    f3f0:	ldr	x0, [sp, #8]
    f3f4:	ldrh	w0, [x0, #6]
    f3f8:	and	w0, w0, #0x7f8
    f3fc:	and	w0, w0, #0xffff
    f400:	cmp	w0, #0x0
    f404:	b.ne	f410 <read_crypto_list+0x2d0>  // b.any
    f408:	mov	x0, #0x0                   	// #0
    f40c:	b	f43c <read_crypto_list+0x2fc>
    f410:	ldr	x0, [sp, #8]
    f414:	ldrh	w0, [x0, #6]
    f418:	ubfx	x0, x0, #3, #8
    f41c:	and	w0, w0, #0xff
    f420:	cmp	w0, #0x2
    f424:	b.ls	f434 <read_crypto_list+0x2f4>  // b.plast
    f428:	ldr	x0, [sp, #8]
    f42c:	ldr	x0, [x0, #24]
    f430:	b	f43c <read_crypto_list+0x2fc>
    f434:	ldr	x0, [sp, #8]
    f438:	add	x0, x0, #0x18
    f43c:	add	sp, sp, #0x10
    f440:	ret
    f444:	stp	x29, x30, [sp, #-32]!
    f448:	mov	x29, sp
    f44c:	str	x0, [sp, #24]
    f450:	ldr	x0, [sp, #24]
    f454:	ldrh	w0, [x0, #6]
    f458:	ubfx	x0, x0, #3, #8
    f45c:	and	w0, w0, #0xff
    f460:	cmp	w0, #0x2
    f464:	b.ls	f474 <read_crypto_list+0x334>  // b.plast
    f468:	ldr	x0, [sp, #24]
    f46c:	ldr	x0, [x0, #24]
    f470:	bl	0 <grub_free>
    f474:	ldr	x0, [sp, #24]
    f478:	ldrh	w1, [x0, #6]
    f47c:	and	w1, w1, #0xfffff807
    f480:	strh	w1, [x0, #6]
    f484:	nop
    f488:	ldp	x29, x30, [sp], #32
    f48c:	ret
    f490:	stp	x29, x30, [sp, #-32]!
    f494:	mov	x29, sp
    f498:	str	x0, [sp, #24]
    f49c:	ldr	x0, [sp, #24]
    f4a0:	ldr	x1, [x0, #56]
    f4a4:	ldr	x0, [sp, #24]
    f4a8:	blr	x1
    f4ac:	and	w0, w0, #0xffff
    f4b0:	cmp	w0, #0x0
    f4b4:	b.eq	f4bc <read_crypto_list+0x37c>  // b.none
    f4b8:	b	f4c0 <read_crypto_list+0x380>
    f4bc:	mov	w0, #0x50                  	// #80
    f4c0:	ldp	x29, x30, [sp], #32
    f4c4:	ret
    f4c8:	stp	x29, x30, [sp, #-32]!
    f4cc:	mov	x29, sp
    f4d0:	str	x0, [sp, #24]
    f4d4:	ldr	x0, [sp, #24]
    f4d8:	ldr	x1, [x0, #56]
    f4dc:	ldr	x0, [sp, #24]
    f4e0:	blr	x1
    f4e4:	lsr	w0, w0, #16
    f4e8:	and	w0, w0, #0xffff
    f4ec:	cmp	w0, #0x0
    f4f0:	b.eq	f4f8 <read_crypto_list+0x3b8>  // b.none
    f4f4:	b	f4fc <read_crypto_list+0x3bc>
    f4f8:	mov	w0, #0x18                  	// #24
    f4fc:	ldp	x29, x30, [sp], #32
    f500:	ret
    f504:	stp	x29, x30, [sp, #-32]!
    f508:	mov	x29, sp
    f50c:	str	x0, [sp, #24]
    f510:	ldr	x0, [sp, #24]
    f514:	ldr	x1, [x0, #64]
    f518:	ldr	x0, [sp, #24]
    f51c:	blr	x1
    f520:	ldp	x29, x30, [sp], #32
    f524:	ret
    f528:	stp	x29, x30, [sp, #-32]!
    f52c:	mov	x29, sp
    f530:	str	x0, [sp, #24]
    f534:	ldr	x0, [sp, #24]
    f538:	ldr	x0, [x0, #104]
    f53c:	cmp	x0, #0x0
    f540:	b.eq	f554 <read_crypto_list+0x414>  // b.none
    f544:	ldr	x0, [sp, #24]
    f548:	ldr	x1, [x0, #104]
    f54c:	ldr	x0, [sp, #24]
    f550:	blr	x1
    f554:	nop
    f558:	ldp	x29, x30, [sp], #32
    f55c:	ret
    f560:	stp	x29, x30, [sp, #-32]!
    f564:	mov	x29, sp
    f568:	str	x0, [sp, #24]
    f56c:	str	w1, [sp, #16]
    f570:	ldr	x0, [sp, #24]
    f574:	ldr	x2, [x0, #72]
    f578:	ldr	w1, [sp, #16]
    f57c:	ldr	x0, [sp, #24]
    f580:	blr	x2
    f584:	nop
    f588:	ldp	x29, x30, [sp], #32
    f58c:	ret
    f590:	stp	x29, x30, [sp, #-32]!
    f594:	mov	x29, sp
    f598:	str	x0, [sp, #24]
    f59c:	str	w1, [sp, #20]
    f5a0:	ldr	x0, [sp, #24]
    f5a4:	ldr	x0, [x0, #88]
    f5a8:	cmp	x0, #0x0
    f5ac:	b.eq	f5c4 <read_crypto_list+0x484>  // b.none
    f5b0:	ldr	x0, [sp, #24]
    f5b4:	ldr	x2, [x0, #88]
    f5b8:	ldr	w1, [sp, #20]
    f5bc:	ldr	x0, [sp, #24]
    f5c0:	blr	x2
    f5c4:	nop
    f5c8:	ldp	x29, x30, [sp], #32
    f5cc:	ret
    f5d0:	stp	x29, x30, [sp, #-48]!
    f5d4:	mov	x29, sp
    f5d8:	str	w0, [sp, #28]
    f5dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f5e0:	add	x0, x0, #0x0
    f5e4:	ldr	x0, [x0]
    f5e8:	ldr	x0, [x0]
    f5ec:	str	x0, [sp, #40]
    f5f0:	b	f60c <read_crypto_list+0x4cc>
    f5f4:	ldr	w1, [sp, #28]
    f5f8:	ldr	x0, [sp, #40]
    f5fc:	bl	f590 <read_crypto_list+0x450>
    f600:	ldr	x0, [sp, #40]
    f604:	ldr	x0, [x0]
    f608:	str	x0, [sp, #40]
    f60c:	ldr	x0, [sp, #40]
    f610:	cmp	x0, #0x0
    f614:	b.ne	f5f4 <read_crypto_list+0x4b4>  // b.any
    f618:	nop
    f61c:	nop
    f620:	ldp	x29, x30, [sp], #48
    f624:	ret
	...
    f630:	stp	x29, x30, [sp, #-32]!
    f634:	mov	x29, sp
    f638:	str	x0, [sp, #24]
    f63c:	ldr	x0, [sp, #24]
    f640:	ldr	w0, [x0]
    f644:	ubfx	x0, x0, #0, #23
    f648:	bl	13798 <grub_unicode_get_comb_type>
    f64c:	cmp	w0, #0x0
    f650:	b.eq	f65c <read_crypto_list+0x51c>  // b.none
    f654:	mov	x0, #0x0                   	// #0
    f658:	b	f660 <read_crypto_list+0x520>
    f65c:	mov	x0, #0x1                   	// #1
    f660:	ldp	x29, x30, [sp], #32
    f664:	ret
    f668:	stp	x29, x30, [sp, #-32]!
    f66c:	mov	x29, sp
    f670:	str	x0, [sp, #24]
    f674:	str	x1, [sp, #16]
    f678:	ldr	x0, [sp, #16]
    f67c:	ldr	w0, [x0]
    f680:	and	w0, w0, #0x7fffff
    f684:	cmp	w0, #0x9
    f688:	b.ne	f694 <read_crypto_list+0x554>  // b.any
    f68c:	mov	x0, #0x8                   	// #8
    f690:	b	f708 <read_crypto_list+0x5c8>
    f694:	ldr	x0, [sp, #24]
    f698:	ldr	x0, [x0, #48]
    f69c:	cmp	x0, #0x0
    f6a0:	b.eq	f6bc <read_crypto_list+0x57c>  // b.none
    f6a4:	ldr	x0, [sp, #24]
    f6a8:	ldr	x2, [x0, #48]
    f6ac:	ldr	x1, [sp, #16]
    f6b0:	ldr	x0, [sp, #24]
    f6b4:	blr	x2
    f6b8:	b	f708 <read_crypto_list+0x5c8>
    f6bc:	ldr	x0, [sp, #24]
    f6c0:	ldr	w0, [x0, #120]
    f6c4:	and	w0, w0, #0x38
    f6c8:	cmp	w0, #0x10
    f6cc:	b.eq	f6f8 <read_crypto_list+0x5b8>  // b.none
    f6d0:	ldr	x0, [sp, #24]
    f6d4:	ldr	w0, [x0, #120]
    f6d8:	and	w0, w0, #0x38
    f6dc:	cmp	w0, #0x18
    f6e0:	b.eq	f6f8 <read_crypto_list+0x5b8>  // b.none
    f6e4:	ldr	x0, [sp, #24]
    f6e8:	ldr	w0, [x0, #120]
    f6ec:	and	w0, w0, #0x38
    f6f0:	cmp	w0, #0x20
    f6f4:	b.ne	f704 <read_crypto_list+0x5c4>  // b.any
    f6f8:	ldr	x0, [sp, #16]
    f6fc:	bl	f630 <read_crypto_list+0x4f0>
    f700:	b	f708 <read_crypto_list+0x5c8>
    f704:	mov	x0, #0x1                   	// #1
    f708:	ldp	x29, x30, [sp], #32
    f70c:	ret
    f710:	stp	x29, x30, [sp, #-32]!
    f714:	mov	x29, sp
    f718:	str	x0, [sp, #24]
    f71c:	str	w1, [sp, #20]
    f720:	b	f730 <read_crypto_list+0x5f0>
    f724:	ldr	x1, [sp, #24]
    f728:	mov	w0, #0x20                  	// #32
    f72c:	bl	1077c <grub_putcode>
    f730:	ldr	w0, [sp, #20]
    f734:	sub	w0, w0, #0x1
    f738:	str	w0, [sp, #20]
    f73c:	ldr	w0, [sp, #20]
    f740:	cmp	w0, #0x0
    f744:	b.ge	f724 <read_crypto_list+0x5e4>  // b.tcont
    f748:	nop
    f74c:	nop
    f750:	ldp	x29, x30, [sp], #32
    f754:	ret

000000000000f758 <grub_normal_reset_more>:
    f758:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f75c:	add	x0, x0, #0x0
    f760:	ldr	x0, [x0]
    f764:	ldr	x1, [x0]
    f768:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f76c:	add	x0, x0, #0x0
    f770:	ldr	x0, [x0]
    f774:	str	x1, [x0]
    f778:	b	f7b4 <grub_normal_reset_more+0x5c>
    f77c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f780:	add	x0, x0, #0x0
    f784:	ldr	x0, [x0]
    f788:	ldr	x0, [x0]
    f78c:	str	wzr, [x0, #120]
    f790:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f794:	add	x0, x0, #0x0
    f798:	ldr	x0, [x0]
    f79c:	ldr	x0, [x0]
    f7a0:	ldr	x1, [x0]
    f7a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f7a8:	add	x0, x0, #0x0
    f7ac:	ldr	x0, [x0]
    f7b0:	str	x1, [x0]
    f7b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f7b8:	add	x0, x0, #0x0
    f7bc:	ldr	x0, [x0]
    f7c0:	ldr	x0, [x0]
    f7c4:	cmp	x0, #0x0
    f7c8:	b.ne	f77c <grub_normal_reset_more+0x24>  // b.any
    f7cc:	nop
    f7d0:	nop
    f7d4:	ret
	...
    f7e8:	stp	x29, x30, [sp, #-64]!
    f7ec:	mov	x29, sp
    f7f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f7f4:	add	x0, x0, #0x0
    f7f8:	ldr	x0, [x0]
    f7fc:	str	x0, [sp, #32]
    f800:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f804:	add	x0, x0, #0x0
    f808:	ldr	x0, [x0]
    f80c:	ldr	x1, [x0]
    f810:	ldr	x0, [sp, #32]
    f814:	blr	x1
    f818:	mov	x3, x0
    f81c:	add	x1, sp, #0x10
    f820:	add	x0, sp, #0x18
    f824:	mov	x2, x1
    f828:	mov	x1, x0
    f82c:	mov	x0, x3
    f830:	bl	12e28 <grub_utf8_to_ucs4_alloc>
    f834:	ldr	x0, [sp, #24]
    f838:	cmp	x0, #0x0
    f83c:	b.ne	f854 <grub_normal_reset_more+0xfc>  // b.any
    f840:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f844:	add	x0, x0, #0x0
    f848:	ldr	x0, [x0]
    f84c:	str	wzr, [x0]
    f850:	b	f9b4 <grub_normal_reset_more+0x25c>
    f854:	bl	fef0 <grub_term_save_pos>
    f858:	str	x0, [sp, #48]
    f85c:	mov	w0, #0x2                   	// #2
    f860:	bl	f5d0 <read_crypto_list+0x490>
    f864:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f868:	add	x0, x0, #0x0
    f86c:	ldr	x0, [x0]
    f870:	ldr	x0, [x0]
    f874:	str	x0, [sp, #56]
    f878:	b	f8a0 <grub_normal_reset_more+0x148>
    f87c:	ldr	x0, [sp, #24]
    f880:	ldr	x1, [sp, #16]
    f884:	ldr	x4, [sp, #56]
    f888:	mov	w3, #0x0                   	// #0
    f88c:	mov	w2, #0x0                   	// #0
    f890:	bl	11b50 <grub_print_ucs4>
    f894:	ldr	x0, [sp, #56]
    f898:	ldr	x0, [x0]
    f89c:	str	x0, [sp, #56]
    f8a0:	ldr	x0, [sp, #56]
    f8a4:	cmp	x0, #0x0
    f8a8:	b.ne	f87c <grub_normal_reset_more+0x124>  // b.any
    f8ac:	mov	w0, #0x1                   	// #1
    f8b0:	bl	f5d0 <read_crypto_list+0x490>
    f8b4:	ldr	x0, [sp, #24]
    f8b8:	bl	0 <grub_free>
    f8bc:	bl	0 <grub_getkey>
    f8c0:	strb	w0, [sp, #47]
    f8c4:	ldr	x0, [sp, #48]
    f8c8:	bl	ffc8 <grub_term_restore_pos>
    f8cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f8d0:	add	x0, x0, #0x0
    f8d4:	ldr	x0, [x0]
    f8d8:	ldr	x0, [x0]
    f8dc:	str	x0, [sp, #56]
    f8e0:	b	f8fc <grub_normal_reset_more+0x1a4>
    f8e4:	mov	w1, #0x8                   	// #8
    f8e8:	ldr	x0, [sp, #56]
    f8ec:	bl	f710 <read_crypto_list+0x5d0>
    f8f0:	ldr	x0, [sp, #56]
    f8f4:	ldr	x0, [x0]
    f8f8:	str	x0, [sp, #56]
    f8fc:	ldr	x0, [sp, #56]
    f900:	cmp	x0, #0x0
    f904:	b.ne	f8e4 <grub_normal_reset_more+0x18c>  // b.any
    f908:	ldr	x0, [sp, #48]
    f90c:	bl	ffc8 <grub_term_restore_pos>
    f910:	ldr	x0, [sp, #48]
    f914:	bl	0 <grub_free>
    f918:	ldrb	w0, [sp, #47]
    f91c:	cmp	w0, #0xd
    f920:	b.eq	f930 <grub_normal_reset_more+0x1d8>  // b.none
    f924:	ldrb	w0, [sp, #47]
    f928:	cmp	w0, #0xa
    f92c:	b.ne	f9b0 <grub_normal_reset_more+0x258>  // b.any
    f930:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f934:	add	x0, x0, #0x0
    f938:	ldr	x0, [x0]
    f93c:	ldr	x1, [x0]
    f940:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f944:	add	x0, x0, #0x0
    f948:	ldr	x0, [x0]
    f94c:	str	x1, [x0]
    f950:	b	f994 <grub_normal_reset_more+0x23c>
    f954:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f958:	add	x0, x0, #0x0
    f95c:	ldr	x0, [x0]
    f960:	ldr	x0, [x0]
    f964:	ldr	w1, [x0, #120]
    f968:	sub	w1, w1, #0x1
    f96c:	str	w1, [x0, #120]
    f970:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f974:	add	x0, x0, #0x0
    f978:	ldr	x0, [x0]
    f97c:	ldr	x0, [x0]
    f980:	ldr	x1, [x0]
    f984:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f988:	add	x0, x0, #0x0
    f98c:	ldr	x0, [x0]
    f990:	str	x1, [x0]
    f994:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    f998:	add	x0, x0, #0x0
    f99c:	ldr	x0, [x0]
    f9a0:	ldr	x0, [x0]
    f9a4:	cmp	x0, #0x0
    f9a8:	b.ne	f954 <grub_normal_reset_more+0x1fc>  // b.any
    f9ac:	b	f9b4 <grub_normal_reset_more+0x25c>
    f9b0:	bl	f758 <grub_normal_reset_more>
    f9b4:	ldp	x29, x30, [sp], #64
    f9b8:	ret
    f9bc:	nop
	...

000000000000f9f0 <grub_set_more>:
    f9f0:	stp	x29, x30, [sp, #-32]!
    f9f4:	mov	x29, sp
    f9f8:	str	w0, [sp, #28]
    f9fc:	ldr	w0, [sp, #28]
    fa00:	cmp	w0, #0x0
    fa04:	cset	w0, ne  // ne = any
    fa08:	and	w0, w0, #0xff
    fa0c:	mov	w1, w0
    fa10:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    fa14:	add	x0, x0, #0x0
    fa18:	ldr	x0, [x0]
    fa1c:	str	w1, [x0]
    fa20:	bl	f758 <grub_normal_reset_more>
    fa24:	nop
    fa28:	ldp	x29, x30, [sp], #32
    fa2c:	ret
	...
    fa38:	sub	sp, sp, #0x10
    fa3c:	str	w0, [sp, #12]
    fa40:	str	x1, [sp]
    fa44:	ldr	w0, [sp, #12]
    fa48:	cmp	w0, #0x7f
    fa4c:	b.hi	fa58 <grub_set_more+0x68>  // b.pmore
    fa50:	ldr	w0, [sp, #12]
    fa54:	b	fd48 <grub_set_more+0x358>
    fa58:	ldr	x0, [sp]
    fa5c:	ldr	w0, [x0, #120]
    fa60:	and	w0, w0, #0x38
    fa64:	cmp	w0, #0x0
    fa68:	b.eq	fc18 <grub_set_more+0x228>  // b.none
    fa6c:	cmp	w0, #0x8
    fa70:	b.ne	fd44 <grub_set_more+0x354>  // b.any
    fa74:	ldr	w1, [sp, #12]
    fa78:	mov	w0, #0x251b                	// #9499
    fa7c:	cmp	w1, w0
    fa80:	b.eq	fc08 <grub_set_more+0x218>  // b.none
    fa84:	ldr	w1, [sp, #12]
    fa88:	mov	w0, #0x251b                	// #9499
    fa8c:	cmp	w1, w0
    fa90:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fa94:	ldr	w1, [sp, #12]
    fa98:	mov	w0, #0x2517                	// #9495
    fa9c:	cmp	w1, w0
    faa0:	b.eq	fc00 <grub_set_more+0x210>  // b.none
    faa4:	ldr	w1, [sp, #12]
    faa8:	mov	w0, #0x2517                	// #9495
    faac:	cmp	w1, w0
    fab0:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fab4:	ldr	w1, [sp, #12]
    fab8:	mov	w0, #0x2513                	// #9491
    fabc:	cmp	w1, w0
    fac0:	b.eq	fbf8 <grub_set_more+0x208>  // b.none
    fac4:	ldr	w1, [sp, #12]
    fac8:	mov	w0, #0x2513                	// #9491
    facc:	cmp	w1, w0
    fad0:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fad4:	ldr	w1, [sp, #12]
    fad8:	mov	w0, #0x250f                	// #9487
    fadc:	cmp	w1, w0
    fae0:	b.eq	fbf0 <grub_set_more+0x200>  // b.none
    fae4:	ldr	w1, [sp, #12]
    fae8:	mov	w0, #0x250f                	// #9487
    faec:	cmp	w1, w0
    faf0:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    faf4:	ldr	w1, [sp, #12]
    faf8:	mov	w0, #0x2503                	// #9475
    fafc:	cmp	w1, w0
    fb00:	b.eq	fbe8 <grub_set_more+0x1f8>  // b.none
    fb04:	ldr	w1, [sp, #12]
    fb08:	mov	w0, #0x2503                	// #9475
    fb0c:	cmp	w1, w0
    fb10:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fb14:	ldr	w1, [sp, #12]
    fb18:	mov	w0, #0x2501                	// #9473
    fb1c:	cmp	w1, w0
    fb20:	b.eq	fbe0 <grub_set_more+0x1f0>  // b.none
    fb24:	ldr	w1, [sp, #12]
    fb28:	mov	w0, #0x2501                	// #9473
    fb2c:	cmp	w1, w0
    fb30:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fb34:	ldr	w1, [sp, #12]
    fb38:	mov	w0, #0x2195                	// #8597
    fb3c:	cmp	w1, w0
    fb40:	b.eq	fbc8 <grub_set_more+0x1d8>  // b.none
    fb44:	ldr	w1, [sp, #12]
    fb48:	mov	w0, #0x2195                	// #8597
    fb4c:	cmp	w1, w0
    fb50:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fb54:	ldr	w1, [sp, #12]
    fb58:	mov	w0, #0x2193                	// #8595
    fb5c:	cmp	w1, w0
    fb60:	b.eq	fbd8 <grub_set_more+0x1e8>  // b.none
    fb64:	ldr	w1, [sp, #12]
    fb68:	mov	w0, #0x2193                	// #8595
    fb6c:	cmp	w1, w0
    fb70:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fb74:	ldr	w1, [sp, #12]
    fb78:	mov	w0, #0x2192                	// #8594
    fb7c:	cmp	w1, w0
    fb80:	b.eq	fbd0 <grub_set_more+0x1e0>  // b.none
    fb84:	ldr	w1, [sp, #12]
    fb88:	mov	w0, #0x2192                	// #8594
    fb8c:	cmp	w1, w0
    fb90:	b.hi	fc10 <grub_set_more+0x220>  // b.pmore
    fb94:	ldr	w1, [sp, #12]
    fb98:	mov	w0, #0x2190                	// #8592
    fb9c:	cmp	w1, w0
    fba0:	b.eq	fbb8 <grub_set_more+0x1c8>  // b.none
    fba4:	ldr	w1, [sp, #12]
    fba8:	mov	w0, #0x2191                	// #8593
    fbac:	cmp	w1, w0
    fbb0:	b.eq	fbc0 <grub_set_more+0x1d0>  // b.none
    fbb4:	b	fc10 <grub_set_more+0x220>
    fbb8:	mov	w0, #0x1b                  	// #27
    fbbc:	b	fd48 <grub_set_more+0x358>
    fbc0:	mov	w0, #0x18                  	// #24
    fbc4:	b	fd48 <grub_set_more+0x358>
    fbc8:	mov	w0, #0x12                  	// #18
    fbcc:	b	fd48 <grub_set_more+0x358>
    fbd0:	mov	w0, #0x1a                  	// #26
    fbd4:	b	fd48 <grub_set_more+0x358>
    fbd8:	mov	w0, #0x19                  	// #25
    fbdc:	b	fd48 <grub_set_more+0x358>
    fbe0:	mov	w0, #0xc4                  	// #196
    fbe4:	b	fd48 <grub_set_more+0x358>
    fbe8:	mov	w0, #0xb3                  	// #179
    fbec:	b	fd48 <grub_set_more+0x358>
    fbf0:	mov	w0, #0xda                  	// #218
    fbf4:	b	fd48 <grub_set_more+0x358>
    fbf8:	mov	w0, #0xbf                  	// #191
    fbfc:	b	fd48 <grub_set_more+0x358>
    fc00:	mov	w0, #0xc0                  	// #192
    fc04:	b	fd48 <grub_set_more+0x358>
    fc08:	mov	w0, #0xd9                  	// #217
    fc0c:	b	fd48 <grub_set_more+0x358>
    fc10:	mov	w0, #0x3f                  	// #63
    fc14:	b	fd48 <grub_set_more+0x358>
    fc18:	ldr	w1, [sp, #12]
    fc1c:	mov	w0, #0x251b                	// #9499
    fc20:	cmp	w1, w0
    fc24:	b.hi	fd3c <grub_set_more+0x34c>  // b.pmore
    fc28:	ldr	w1, [sp, #12]
    fc2c:	mov	w0, #0x2501                	// #9473
    fc30:	cmp	w1, w0
    fc34:	b.cs	fc9c <grub_set_more+0x2ac>  // b.hs, b.nlast
    fc38:	ldr	w1, [sp, #12]
    fc3c:	mov	w0, #0x2193                	// #8595
    fc40:	cmp	w1, w0
    fc44:	b.eq	fd1c <grub_set_more+0x32c>  // b.none
    fc48:	ldr	w1, [sp, #12]
    fc4c:	mov	w0, #0x2193                	// #8595
    fc50:	cmp	w1, w0
    fc54:	b.hi	fd3c <grub_set_more+0x34c>  // b.pmore
    fc58:	ldr	w1, [sp, #12]
    fc5c:	mov	w0, #0x2192                	// #8594
    fc60:	cmp	w1, w0
    fc64:	b.eq	fd14 <grub_set_more+0x324>  // b.none
    fc68:	ldr	w1, [sp, #12]
    fc6c:	mov	w0, #0x2192                	// #8594
    fc70:	cmp	w1, w0
    fc74:	b.hi	fd3c <grub_set_more+0x34c>  // b.pmore
    fc78:	ldr	w1, [sp, #12]
    fc7c:	mov	w0, #0x2190                	// #8592
    fc80:	cmp	w1, w0
    fc84:	b.eq	fd04 <grub_set_more+0x314>  // b.none
    fc88:	ldr	w1, [sp, #12]
    fc8c:	mov	w0, #0x2191                	// #8593
    fc90:	cmp	w1, w0
    fc94:	b.eq	fd0c <grub_set_more+0x31c>  // b.none
    fc98:	b	fd3c <grub_set_more+0x34c>
    fc9c:	ldr	w1, [sp, #12]
    fca0:	mov	w0, #0xffffdaff            	// #-9473
    fca4:	add	w0, w1, w0
    fca8:	mov	x1, #0x1                   	// #1
    fcac:	lsl	x0, x1, x0
    fcb0:	mov	x1, #0x4000                	// #16384
    fcb4:	movk	x1, #0x444, lsl #16
    fcb8:	and	x1, x0, x1
    fcbc:	cmp	x1, #0x0
    fcc0:	cset	w1, ne  // ne = any
    fcc4:	and	w1, w1, #0xff
    fcc8:	cmp	w1, #0x0
    fccc:	b.ne	fd34 <grub_set_more+0x344>  // b.any
    fcd0:	and	x1, x0, #0x4
    fcd4:	cmp	x1, #0x0
    fcd8:	cset	w1, ne  // ne = any
    fcdc:	and	w1, w1, #0xff
    fce0:	cmp	w1, #0x0
    fce4:	b.ne	fd2c <grub_set_more+0x33c>  // b.any
    fce8:	and	x0, x0, #0x1
    fcec:	cmp	x0, #0x0
    fcf0:	cset	w0, ne  // ne = any
    fcf4:	and	w0, w0, #0xff
    fcf8:	cmp	w0, #0x0
    fcfc:	b.ne	fd24 <grub_set_more+0x334>  // b.any
    fd00:	b	fd3c <grub_set_more+0x34c>
    fd04:	mov	w0, #0x3c                  	// #60
    fd08:	b	fd48 <grub_set_more+0x358>
    fd0c:	mov	w0, #0x5e                  	// #94
    fd10:	b	fd48 <grub_set_more+0x358>
    fd14:	mov	w0, #0x3e                  	// #62
    fd18:	b	fd48 <grub_set_more+0x358>
    fd1c:	mov	w0, #0x76                  	// #118
    fd20:	b	fd48 <grub_set_more+0x358>
    fd24:	mov	w0, #0x2d                  	// #45
    fd28:	b	fd48 <grub_set_more+0x358>
    fd2c:	mov	w0, #0x7c                  	// #124
    fd30:	b	fd48 <grub_set_more+0x358>
    fd34:	mov	w0, #0x2b                  	// #43
    fd38:	b	fd48 <grub_set_more+0x358>
    fd3c:	mov	w0, #0x3f                  	// #63
    fd40:	b	fd48 <grub_set_more+0x358>
    fd44:	ldr	w0, [sp, #12]
    fd48:	add	sp, sp, #0x10
    fd4c:	ret

000000000000fd50 <grub_puts_terminal>:
    fd50:	sub	sp, sp, #0x80
    fd54:	stp	x29, x30, [sp, #48]
    fd58:	add	x29, sp, #0x30
    fd5c:	str	x0, [sp, #72]
    fd60:	str	x1, [sp, #64]
    fd64:	bl	0 <grub_error_push>
    fd68:	add	x1, sp, #0x70
    fd6c:	add	x0, sp, #0x78
    fd70:	mov	x2, x1
    fd74:	mov	x1, x0
    fd78:	ldr	x0, [sp, #72]
    fd7c:	bl	12e28 <grub_utf8_to_ucs4_alloc>
    fd80:	bl	0 <grub_error_pop>
    fd84:	ldr	x0, [sp, #120]
    fd88:	cmp	x0, #0x0
    fd8c:	b.ne	fe90 <grub_puts_terminal+0x140>  // b.any
    fd90:	b	fe7c <grub_puts_terminal+0x12c>
    fd94:	stp	xzr, xzr, [sp, #80]
    fd98:	stp	xzr, xzr, [sp, #96]
    fd9c:	ldr	x0, [sp, #72]
    fda0:	ldrb	w0, [x0]
    fda4:	mov	w1, w0
    fda8:	and	w1, w1, #0x7fffff
    fdac:	ldr	w0, [sp, #80]
    fdb0:	bfxil	w0, w1, #0, #23
    fdb4:	str	w0, [sp, #80]
    fdb8:	mov	w0, #0x1                   	// #1
    fdbc:	strb	w0, [sp, #88]
    fdc0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    fdc4:	add	x0, x0, #0x0
    fdc8:	ldr	x0, [x0]
    fdcc:	ldr	x0, [x0]
    fdd0:	str	x0, [sp, #64]
    fdd4:	b	fdfc <grub_puts_terminal+0xac>
    fdd8:	ldr	x0, [sp, #64]
    fddc:	ldr	x2, [x0, #40]
    fde0:	add	x0, sp, #0x50
    fde4:	mov	x1, x0
    fde8:	ldr	x0, [sp, #64]
    fdec:	blr	x2
    fdf0:	ldr	x0, [sp, #64]
    fdf4:	ldr	x0, [x0]
    fdf8:	str	x0, [sp, #64]
    fdfc:	ldr	x0, [sp, #64]
    fe00:	cmp	x0, #0x0
    fe04:	b.ne	fdd8 <grub_puts_terminal+0x88>  // b.any
    fe08:	ldr	x0, [sp, #72]
    fe0c:	ldrb	w0, [x0]
    fe10:	cmp	w0, #0xa
    fe14:	b.ne	fe70 <grub_puts_terminal+0x120>  // b.any
    fe18:	ldr	w0, [sp, #80]
    fe1c:	mov	w1, #0xd                   	// #13
    fe20:	bfxil	w0, w1, #0, #23
    fe24:	str	w0, [sp, #80]
    fe28:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    fe2c:	add	x0, x0, #0x0
    fe30:	ldr	x0, [x0]
    fe34:	ldr	x0, [x0]
    fe38:	str	x0, [sp, #64]
    fe3c:	b	fe64 <grub_puts_terminal+0x114>
    fe40:	ldr	x0, [sp, #64]
    fe44:	ldr	x2, [x0, #40]
    fe48:	add	x0, sp, #0x50
    fe4c:	mov	x1, x0
    fe50:	ldr	x0, [sp, #64]
    fe54:	blr	x2
    fe58:	ldr	x0, [sp, #64]
    fe5c:	ldr	x0, [x0]
    fe60:	str	x0, [sp, #64]
    fe64:	ldr	x0, [sp, #64]
    fe68:	cmp	x0, #0x0
    fe6c:	b.ne	fe40 <grub_puts_terminal+0xf0>  // b.any
    fe70:	ldr	x0, [sp, #72]
    fe74:	add	x0, x0, #0x1
    fe78:	str	x0, [sp, #72]
    fe7c:	ldr	x0, [sp, #72]
    fe80:	ldrb	w0, [x0]
    fe84:	cmp	w0, #0x0
    fe88:	b.ne	fd94 <grub_puts_terminal+0x44>  // b.any
    fe8c:	b	fed8 <grub_puts_terminal+0x188>
    fe90:	ldr	x8, [sp, #120]
    fe94:	ldr	x1, [sp, #112]
    fe98:	str	xzr, [sp, #32]
    fe9c:	str	wzr, [sp, #24]
    fea0:	str	wzr, [sp, #16]
    fea4:	mov	w0, #0xffffffff            	// #-1
    fea8:	str	w0, [sp, #8]
    feac:	str	wzr, [sp]
    feb0:	mov	w7, #0x0                   	// #0
    feb4:	mov	w6, #0x0                   	// #0
    feb8:	mov	w5, #0x0                   	// #0
    febc:	ldr	x4, [sp, #64]
    fec0:	mov	w3, #0x0                   	// #0
    fec4:	mov	w2, #0x0                   	// #0
    fec8:	mov	x0, x8
    fecc:	bl	1165c <grub_putcode+0xee0>
    fed0:	ldr	x0, [sp, #120]
    fed4:	bl	0 <grub_free>
    fed8:	ldp	x29, x30, [sp, #48]
    fedc:	add	sp, sp, #0x80
    fee0:	ret
    fee4:	nop
	...

000000000000fef0 <grub_term_save_pos>:
    fef0:	stp	x29, x30, [sp, #-64]!
    fef4:	mov	x29, sp
    fef8:	str	x19, [sp, #16]
    fefc:	str	wzr, [sp, #52]
    ff00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ff04:	add	x0, x0, #0x0
    ff08:	ldr	x0, [x0]
    ff0c:	ldr	x0, [x0]
    ff10:	str	x0, [sp, #56]
    ff14:	b	ff30 <grub_term_save_pos+0x40>
    ff18:	ldr	w0, [sp, #52]
    ff1c:	add	w0, w0, #0x1
    ff20:	str	w0, [sp, #52]
    ff24:	ldr	x0, [sp, #56]
    ff28:	ldr	x0, [x0]
    ff2c:	str	x0, [sp, #56]
    ff30:	ldr	x0, [sp, #56]
    ff34:	cmp	x0, #0x0
    ff38:	b.ne	ff18 <grub_term_save_pos+0x28>  // b.any
    ff3c:	ldr	w0, [sp, #52]
    ff40:	lsl	x0, x0, #2
    ff44:	bl	0 <grub_malloc>
    ff48:	str	x0, [sp, #32]
    ff4c:	ldr	x0, [sp, #32]
    ff50:	cmp	x0, #0x0
    ff54:	b.ne	ff60 <grub_term_save_pos+0x70>  // b.any
    ff58:	mov	x0, #0x0                   	// #0
    ff5c:	b	ffb4 <grub_term_save_pos+0xc4>
    ff60:	ldr	x0, [sp, #32]
    ff64:	str	x0, [sp, #40]
    ff68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ff6c:	add	x0, x0, #0x0
    ff70:	ldr	x0, [x0]
    ff74:	ldr	x0, [x0]
    ff78:	str	x0, [sp, #56]
    ff7c:	b	ffa4 <grub_term_save_pos+0xb4>
    ff80:	ldr	x19, [sp, #40]
    ff84:	add	x0, x19, #0x4
    ff88:	str	x0, [sp, #40]
    ff8c:	ldr	x0, [sp, #56]
    ff90:	bl	f504 <read_crypto_list+0x3c4>
    ff94:	str	w0, [x19]
    ff98:	ldr	x0, [sp, #56]
    ff9c:	ldr	x0, [x0]
    ffa0:	str	x0, [sp, #56]
    ffa4:	ldr	x0, [sp, #56]
    ffa8:	cmp	x0, #0x0
    ffac:	b.ne	ff80 <grub_term_save_pos+0x90>  // b.any
    ffb0:	ldr	x0, [sp, #32]
    ffb4:	ldr	x19, [sp, #16]
    ffb8:	ldp	x29, x30, [sp], #64
    ffbc:	ret
	...

000000000000ffc8 <grub_term_restore_pos>:
    ffc8:	stp	x29, x30, [sp, #-48]!
    ffcc:	mov	x29, sp
    ffd0:	str	x0, [sp, #24]
    ffd4:	ldr	x0, [sp, #24]
    ffd8:	str	x0, [sp, #32]
    ffdc:	ldr	x0, [sp, #24]
    ffe0:	cmp	x0, #0x0
    ffe4:	b.eq	10038 <grub_term_restore_pos+0x70>  // b.none
    ffe8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
    ffec:	add	x0, x0, #0x0
    fff0:	ldr	x0, [x0]
    fff4:	ldr	x0, [x0]
    fff8:	str	x0, [sp, #40]
    fffc:	b	10028 <grub_term_restore_pos+0x60>
   10000:	ldr	x0, [sp, #32]
   10004:	ldr	w1, [x0]
   10008:	ldr	x0, [sp, #40]
   1000c:	bl	f560 <read_crypto_list+0x420>
   10010:	ldr	x0, [sp, #32]
   10014:	add	x0, x0, #0x4
   10018:	str	x0, [sp, #32]
   1001c:	ldr	x0, [sp, #40]
   10020:	ldr	x0, [x0]
   10024:	str	x0, [sp, #40]
   10028:	ldr	x0, [sp, #40]
   1002c:	cmp	x0, #0x0
   10030:	b.ne	10000 <grub_term_restore_pos+0x38>  // b.any
   10034:	b	1003c <grub_term_restore_pos+0x74>
   10038:	nop
   1003c:	ldp	x29, x30, [sp], #48
   10040:	ret
   10044:	nop
	...
   10050:	stp	x29, x30, [sp, #-48]!
   10054:	mov	x29, sp
   10058:	str	wzr, [sp, #36]
   1005c:	b	100e4 <grub_term_restore_pos+0x11c>
   10060:	ldr	w0, [sp, #36]
   10064:	cmp	w0, #0x0
   10068:	b.eq	10080 <grub_term_restore_pos+0xb8>  // b.none
   1006c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   10070:	add	x0, x0, #0x0
   10074:	ldr	x0, [x0]
   10078:	ldr	x0, [x0]
   1007c:	b	10090 <grub_term_restore_pos+0xc8>
   10080:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   10084:	add	x0, x0, #0x0
   10088:	ldr	x0, [x0]
   1008c:	ldr	x0, [x0]
   10090:	str	x0, [sp, #40]
   10094:	b	100cc <grub_term_restore_pos+0x104>
   10098:	ldr	x0, [sp, #40]
   1009c:	ldr	x0, [x0]
   100a0:	str	x0, [sp, #24]
   100a4:	ldr	x0, [sp, #40]
   100a8:	ldr	x0, [x0, #8]
   100ac:	bl	0 <grub_free>
   100b0:	ldr	x0, [sp, #40]
   100b4:	ldr	x0, [x0, #16]
   100b8:	bl	0 <grub_free>
   100bc:	ldr	x0, [sp, #40]
   100c0:	bl	0 <grub_free>
   100c4:	ldr	x0, [sp, #24]
   100c8:	str	x0, [sp, #40]
   100cc:	ldr	x0, [sp, #40]
   100d0:	cmp	x0, #0x0
   100d4:	b.ne	10098 <grub_term_restore_pos+0xd0>  // b.any
   100d8:	ldr	w0, [sp, #36]
   100dc:	add	w0, w0, #0x1
   100e0:	str	w0, [sp, #36]
   100e4:	ldr	w0, [sp, #36]
   100e8:	cmp	w0, #0x1
   100ec:	b.ls	10060 <grub_term_restore_pos+0x98>  // b.plast
   100f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   100f4:	add	x0, x0, #0x0
   100f8:	ldr	x0, [x0]
   100fc:	str	xzr, [x0]
   10100:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   10104:	add	x0, x0, #0x0
   10108:	ldr	x0, [x0]
   1010c:	str	xzr, [x0]
   10110:	nop
   10114:	ldp	x29, x30, [sp], #48
   10118:	ret
   1011c:	nop
	...

0000000000010130 <read_terminal_list>:
   10130:	stp	x29, x30, [sp, #-96]!
   10134:	mov	x29, sp
   10138:	str	x0, [sp, #24]
   1013c:	str	xzr, [sp, #72]
   10140:	ldr	x0, [sp, #24]
   10144:	cmp	x0, #0x0
   10148:	b.ne	10160 <read_terminal_list+0x30>  // b.any
   1014c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   10150:	add	x0, x0, #0x0
   10154:	ldr	x0, [x0]
   10158:	str	wzr, [x0]
   1015c:	b	103e4 <read_terminal_list+0x2b4>
   10160:	ldr	x1, [sp, #24]
   10164:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   10168:	add	x0, x0, #0x0
   1016c:	ldr	x0, [x0]
   10170:	bl	0 <grub_xasprintf>
   10174:	str	x0, [sp, #64]
   10178:	ldr	x0, [sp, #64]
   1017c:	cmp	x0, #0x0
   10180:	b.ne	10198 <read_terminal_list+0x68>  // b.any
   10184:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   10188:	add	x0, x0, #0x0
   1018c:	ldr	x0, [x0]
   10190:	str	wzr, [x0]
   10194:	b	103e4 <read_terminal_list+0x2b4>
   10198:	mov	w1, #0x32                  	// #50
   1019c:	ldr	x0, [sp, #64]
   101a0:	bl	0 <grub_file_open>
   101a4:	str	x0, [sp, #56]
   101a8:	ldr	x0, [sp, #64]
   101ac:	bl	0 <grub_free>
   101b0:	ldr	x0, [sp, #56]
   101b4:	cmp	x0, #0x0
   101b8:	b.ne	101d0 <read_terminal_list+0xa0>  // b.any
   101bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   101c0:	add	x0, x0, #0x0
   101c4:	ldr	x0, [x0]
   101c8:	str	wzr, [x0]
   101cc:	b	103e4 <read_terminal_list+0x2b4>
   101d0:	bl	10050 <grub_term_restore_pos+0x88>
   101d4:	str	xzr, [sp, #80]
   101d8:	ldr	x0, [sp, #56]
   101dc:	bl	16988 <grub_file_getline>
   101e0:	str	x0, [sp, #72]
   101e4:	ldr	x0, [sp, #72]
   101e8:	cmp	x0, #0x0
   101ec:	b.eq	103c8 <read_terminal_list+0x298>  // b.none
   101f0:	ldr	x0, [sp, #72]
   101f4:	str	x0, [sp, #88]
   101f8:	b	10208 <read_terminal_list+0xd8>
   101fc:	ldr	x0, [sp, #88]
   10200:	add	x0, x0, #0x1
   10204:	str	x0, [sp, #88]
   10208:	ldr	x0, [sp, #88]
   1020c:	ldrb	w0, [x0]
   10210:	bl	0 <grub_isspace>
   10214:	cmp	w0, #0x0
   10218:	b.ne	101fc <read_terminal_list+0xcc>  // b.any
   1021c:	ldr	x0, [sp, #88]
   10220:	ldrb	w0, [x0]
   10224:	cmp	w0, #0x69
   10228:	b.eq	10238 <read_terminal_list+0x108>  // b.none
   1022c:	cmp	w0, #0x6f
   10230:	b.eq	1024c <read_terminal_list+0x11c>  // b.none
   10234:	b	10260 <read_terminal_list+0x130>
   10238:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1023c:	add	x0, x0, #0x0
   10240:	ldr	x0, [x0]
   10244:	str	x0, [sp, #80]
   10248:	b	10260 <read_terminal_list+0x130>
   1024c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   10250:	add	x0, x0, #0x0
   10254:	ldr	x0, [x0]
   10258:	str	x0, [sp, #80]
   1025c:	nop
   10260:	ldr	x0, [sp, #80]
   10264:	cmp	x0, #0x0
   10268:	b.eq	103b0 <read_terminal_list+0x280>  // b.none
   1026c:	ldr	x0, [sp, #88]
   10270:	add	x0, x0, #0x1
   10274:	str	x0, [sp, #48]
   10278:	mov	w1, #0x3a                  	// #58
   1027c:	ldr	x0, [sp, #48]
   10280:	bl	0 <grub_strchr>
   10284:	str	x0, [sp, #88]
   10288:	ldr	x0, [sp, #88]
   1028c:	cmp	x0, #0x0
   10290:	b.eq	103b8 <read_terminal_list+0x288>  // b.none
   10294:	ldr	x0, [sp, #88]
   10298:	strb	wzr, [x0]
   1029c:	ldr	x0, [sp, #88]
   102a0:	add	x0, x0, #0x1
   102a4:	str	x0, [sp, #88]
   102a8:	b	102b8 <read_terminal_list+0x188>
   102ac:	ldr	x0, [sp, #88]
   102b0:	add	x0, x0, #0x1
   102b4:	str	x0, [sp, #88]
   102b8:	ldr	x0, [sp, #88]
   102bc:	ldrb	w0, [x0]
   102c0:	cmp	w0, #0x20
   102c4:	b.eq	102ac <read_terminal_list+0x17c>  // b.none
   102c8:	ldr	x0, [sp, #88]
   102cc:	ldrb	w0, [x0]
   102d0:	cmp	w0, #0x9
   102d4:	b.eq	102ac <read_terminal_list+0x17c>  // b.none
   102d8:	mov	x0, #0x18                  	// #24
   102dc:	bl	0 <grub_malloc>
   102e0:	str	x0, [sp, #40]
   102e4:	ldr	x0, [sp, #40]
   102e8:	cmp	x0, #0x0
   102ec:	b.ne	10304 <read_terminal_list+0x1d4>  // b.any
   102f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   102f4:	add	x0, x0, #0x0
   102f8:	ldr	x0, [x0]
   102fc:	str	wzr, [x0]
   10300:	b	103bc <read_terminal_list+0x28c>
   10304:	ldr	x0, [sp, #48]
   10308:	bl	0 <grub_strdup>
   1030c:	mov	x1, x0
   10310:	ldr	x0, [sp, #40]
   10314:	str	x1, [x0, #8]
   10318:	ldr	x0, [sp, #40]
   1031c:	ldr	x0, [x0, #8]
   10320:	cmp	x0, #0x0
   10324:	b.ne	10344 <read_terminal_list+0x214>  // b.any
   10328:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1032c:	add	x0, x0, #0x0
   10330:	ldr	x0, [x0]
   10334:	str	wzr, [x0]
   10338:	ldr	x0, [sp, #40]
   1033c:	bl	0 <grub_free>
   10340:	b	103bc <read_terminal_list+0x28c>
   10344:	ldr	x0, [sp, #88]
   10348:	bl	0 <grub_strdup>
   1034c:	mov	x1, x0
   10350:	ldr	x0, [sp, #40]
   10354:	str	x1, [x0, #16]
   10358:	ldr	x0, [sp, #40]
   1035c:	ldr	x0, [x0, #16]
   10360:	cmp	x0, #0x0
   10364:	b.ne	10390 <read_terminal_list+0x260>  // b.any
   10368:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1036c:	add	x0, x0, #0x0
   10370:	ldr	x0, [x0]
   10374:	str	wzr, [x0]
   10378:	ldr	x0, [sp, #40]
   1037c:	ldr	x0, [x0, #8]
   10380:	bl	0 <grub_free>
   10384:	ldr	x0, [sp, #40]
   10388:	bl	0 <grub_free>
   1038c:	b	103bc <read_terminal_list+0x28c>
   10390:	ldr	x0, [sp, #80]
   10394:	ldr	x1, [x0]
   10398:	ldr	x0, [sp, #40]
   1039c:	str	x1, [x0]
   103a0:	ldr	x0, [sp, #80]
   103a4:	ldr	x1, [sp, #40]
   103a8:	str	x1, [x0]
   103ac:	b	103bc <read_terminal_list+0x28c>
   103b0:	nop
   103b4:	b	103bc <read_terminal_list+0x28c>
   103b8:	nop
   103bc:	ldr	x0, [sp, #72]
   103c0:	bl	0 <grub_free>
   103c4:	b	101d4 <read_terminal_list+0xa4>
   103c8:	nop
   103cc:	ldr	x0, [sp, #56]
   103d0:	bl	0 <grub_file_close>
   103d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   103d8:	add	x0, x0, #0x0
   103dc:	ldr	x0, [x0]
   103e0:	str	wzr, [x0]
   103e4:	ldp	x29, x30, [sp], #96
   103e8:	ret
   103ec:	nop
	...
   10410:	stp	x29, x30, [sp, #-144]!
   10414:	mov	x29, sp
   10418:	str	x0, [sp, #40]
   1041c:	str	x1, [sp, #32]
   10420:	str	w2, [sp, #28]
   10424:	stp	xzr, xzr, [sp, #88]
   10428:	stp	xzr, xzr, [sp, #104]
   1042c:	mov	w0, #0x1                   	// #1
   10430:	strb	w0, [sp, #96]
   10434:	ldr	x0, [sp, #40]
   10438:	ldr	w0, [x0]
   1043c:	and	w0, w0, #0x7fffff
   10440:	cmp	w0, #0x9
   10444:	b.ne	104a0 <read_terminal_list+0x370>  // b.any
   10448:	ldr	w0, [sp, #28]
   1044c:	cmp	w0, #0x0
   10450:	b.eq	104a0 <read_terminal_list+0x370>  // b.none
   10454:	mov	w0, #0x8                   	// #8
   10458:	str	w0, [sp, #140]
   1045c:	ldr	w0, [sp, #88]
   10460:	mov	w1, #0x20                  	// #32
   10464:	bfxil	w0, w1, #0, #23
   10468:	str	w0, [sp, #88]
   1046c:	b	10488 <read_terminal_list+0x358>
   10470:	ldr	x0, [sp, #32]
   10474:	ldr	x2, [x0, #40]
   10478:	add	x0, sp, #0x58
   1047c:	mov	x1, x0
   10480:	ldr	x0, [sp, #32]
   10484:	blr	x2
   10488:	ldr	w0, [sp, #140]
   1048c:	sub	w1, w0, #0x1
   10490:	str	w1, [sp, #140]
   10494:	cmp	w0, #0x0
   10498:	b.ne	10470 <read_terminal_list+0x340>  // b.any
   1049c:	b	10718 <read_terminal_list+0x5e8>
   104a0:	ldr	x0, [sp, #40]
   104a4:	ldr	w0, [x0]
   104a8:	and	w0, w0, #0x7fffff
   104ac:	cmp	w0, #0x9
   104b0:	b.ne	1052c <read_terminal_list+0x3fc>  // b.any
   104b4:	ldr	x0, [sp, #32]
   104b8:	ldr	x0, [x0, #64]
   104bc:	cmp	x0, #0x0
   104c0:	b.eq	1052c <read_terminal_list+0x3fc>  // b.none
   104c4:	ldr	x0, [sp, #32]
   104c8:	ldr	x1, [x0, #64]
   104cc:	ldr	x0, [sp, #32]
   104d0:	blr	x1
   104d4:	and	w0, w0, #0xffff
   104d8:	and	w0, w0, #0x7
   104dc:	mov	w1, #0x8                   	// #8
   104e0:	sub	w0, w1, w0
   104e4:	str	w0, [sp, #136]
   104e8:	ldr	w0, [sp, #88]
   104ec:	mov	w1, #0x20                  	// #32
   104f0:	bfxil	w0, w1, #0, #23
   104f4:	str	w0, [sp, #88]
   104f8:	b	10514 <read_terminal_list+0x3e4>
   104fc:	ldr	x0, [sp, #32]
   10500:	ldr	x2, [x0, #40]
   10504:	add	x0, sp, #0x58
   10508:	mov	x1, x0
   1050c:	ldr	x0, [sp, #32]
   10510:	blr	x2
   10514:	ldr	w0, [sp, #136]
   10518:	sub	w1, w0, #0x1
   1051c:	str	w1, [sp, #136]
   10520:	cmp	w0, #0x0
   10524:	b.ne	104fc <read_terminal_list+0x3cc>  // b.any
   10528:	b	10718 <read_terminal_list+0x5e8>
   1052c:	ldr	x0, [sp, #32]
   10530:	ldr	w0, [x0, #120]
   10534:	and	w0, w0, #0x38
   10538:	cmp	w0, #0x10
   1053c:	b.eq	10554 <read_terminal_list+0x424>  // b.none
   10540:	ldr	x0, [sp, #32]
   10544:	ldr	w0, [x0, #120]
   10548:	and	w0, w0, #0x38
   1054c:	cmp	w0, #0x18
   10550:	b.ne	106c8 <read_terminal_list+0x598>  // b.any
   10554:	ldr	x1, [sp, #40]
   10558:	ldr	x0, [sp, #32]
   1055c:	bl	f668 <read_crypto_list+0x528>
   10560:	sxtb	w0, w0
   10564:	strb	w0, [sp, #96]
   10568:	mov	w0, #0xffffffff            	// #-1
   1056c:	str	w0, [sp, #132]
   10570:	b	1069c <read_terminal_list+0x56c>
   10574:	ldr	w0, [sp, #132]
   10578:	cmn	w0, #0x1
   1057c:	b.ne	105f4 <read_terminal_list+0x4c4>  // b.any
   10580:	ldr	x0, [sp, #40]
   10584:	ldr	w0, [x0]
   10588:	ubfx	x0, x0, #0, #23
   1058c:	str	w0, [sp, #60]
   10590:	ldr	x0, [sp, #32]
   10594:	ldr	w0, [x0, #120]
   10598:	and	w0, w0, #0x38
   1059c:	cmp	w0, #0x18
   105a0:	b.ne	10618 <read_terminal_list+0x4e8>  // b.any
   105a4:	ldr	x0, [sp, #40]
   105a8:	ldrb	w0, [x0, #4]
   105ac:	ubfx	x0, x0, #0, #5
   105b0:	and	w0, w0, #0xff
   105b4:	and	w0, w0, #0x1
   105b8:	cmp	w0, #0x0
   105bc:	b.eq	105cc <read_terminal_list+0x49c>  // b.none
   105c0:	ldr	w0, [sp, #60]
   105c4:	bl	16574 <grub_unicode_mirror_code>
   105c8:	str	w0, [sp, #60]
   105cc:	ldr	w2, [sp, #60]
   105d0:	ldr	x0, [sp, #40]
   105d4:	ldrb	w0, [x0, #4]
   105d8:	ubfx	x0, x0, #0, #5
   105dc:	and	w0, w0, #0xff
   105e0:	mov	w1, w0
   105e4:	mov	w0, w2
   105e8:	bl	16610 <grub_unicode_shape_code>
   105ec:	str	w0, [sp, #60]
   105f0:	b	10618 <read_terminal_list+0x4e8>
   105f4:	ldr	x0, [sp, #40]
   105f8:	bl	f3e8 <read_crypto_list+0x2a8>
   105fc:	mov	x1, x0
   10600:	ldrsw	x0, [sp, #132]
   10604:	lsl	x0, x0, #2
   10608:	add	x0, x1, x0
   1060c:	ldr	w0, [x0]
   10610:	ubfx	x0, x0, #0, #21
   10614:	str	w0, [sp, #60]
   10618:	add	x1, sp, #0x40
   1061c:	add	x0, sp, #0x3c
   10620:	mov	x3, #0x14                  	// #20
   10624:	mov	x2, x1
   10628:	mov	x1, #0x1                   	// #1
   1062c:	bl	12b10 <grub_ucs4_to_utf8>
   10630:	add	x0, sp, #0x40
   10634:	str	x0, [sp, #120]
   10638:	b	10680 <read_terminal_list+0x550>
   1063c:	ldr	x0, [sp, #120]
   10640:	ldrb	w0, [x0]
   10644:	mov	w1, w0
   10648:	and	w1, w1, #0x7fffff
   1064c:	ldr	w0, [sp, #88]
   10650:	bfxil	w0, w1, #0, #23
   10654:	str	w0, [sp, #88]
   10658:	ldr	x0, [sp, #32]
   1065c:	ldr	x2, [x0, #40]
   10660:	add	x0, sp, #0x58
   10664:	mov	x1, x0
   10668:	ldr	x0, [sp, #32]
   1066c:	blr	x2
   10670:	strb	wzr, [sp, #96]
   10674:	ldr	x0, [sp, #120]
   10678:	add	x0, x0, #0x1
   1067c:	str	x0, [sp, #120]
   10680:	ldr	x0, [sp, #120]
   10684:	ldrb	w0, [x0]
   10688:	cmp	w0, #0x0
   1068c:	b.ne	1063c <read_terminal_list+0x50c>  // b.any
   10690:	ldr	w0, [sp, #132]
   10694:	add	w0, w0, #0x1
   10698:	str	w0, [sp, #132]
   1069c:	ldr	x0, [sp, #40]
   106a0:	ldrh	w0, [x0, #6]
   106a4:	ubfx	x0, x0, #3, #8
   106a8:	and	w0, w0, #0xff
   106ac:	mov	w1, w0
   106b0:	ldr	w0, [sp, #132]
   106b4:	cmp	w0, w1
   106b8:	b.lt	10574 <read_terminal_list+0x444>  // b.tstop
   106bc:	mov	w0, #0x1                   	// #1
   106c0:	strb	w0, [sp, #96]
   106c4:	b	106dc <read_terminal_list+0x5ac>
   106c8:	ldr	x0, [sp, #32]
   106cc:	ldr	x2, [x0, #40]
   106d0:	ldr	x1, [sp, #40]
   106d4:	ldr	x0, [sp, #32]
   106d8:	blr	x2
   106dc:	ldr	x0, [sp, #40]
   106e0:	ldr	w0, [x0]
   106e4:	and	w0, w0, #0x7fffff
   106e8:	cmp	w0, #0xa
   106ec:	b.ne	10718 <read_terminal_list+0x5e8>  // b.any
   106f0:	ldr	w0, [sp, #88]
   106f4:	mov	w1, #0xd                   	// #13
   106f8:	bfxil	w0, w1, #0, #23
   106fc:	str	w0, [sp, #88]
   10700:	ldr	x0, [sp, #32]
   10704:	ldr	x2, [x0, #40]
   10708:	add	x0, sp, #0x58
   1070c:	mov	x1, x0
   10710:	ldr	x0, [sp, #32]
   10714:	blr	x2
   10718:	ldp	x29, x30, [sp], #144
   1071c:	ret
   10720:	stp	x29, x30, [sp, #-64]!
   10724:	mov	x29, sp
   10728:	str	w0, [sp, #28]
   1072c:	str	x1, [sp, #16]
   10730:	str	w2, [sp, #24]
   10734:	stp	xzr, xzr, [sp, #32]
   10738:	stp	xzr, xzr, [sp, #48]
   1073c:	mov	w0, #0x1                   	// #1
   10740:	strb	w0, [sp, #40]
   10744:	ldr	x1, [sp, #16]
   10748:	ldr	w0, [sp, #28]
   1074c:	bl	fa38 <grub_set_more+0x48>
   10750:	and	w1, w0, #0x7fffff
   10754:	ldr	w0, [sp, #32]
   10758:	bfxil	w0, w1, #0, #23
   1075c:	str	w0, [sp, #32]
   10760:	add	x0, sp, #0x20
   10764:	ldr	w2, [sp, #24]
   10768:	ldr	x1, [sp, #16]
   1076c:	bl	10410 <read_terminal_list+0x2e0>
   10770:	nop
   10774:	ldp	x29, x30, [sp], #64
   10778:	ret

000000000001077c <grub_putcode>:
   1077c:	stp	x29, x30, [sp, #-32]!
   10780:	mov	x29, sp
   10784:	str	w0, [sp, #28]
   10788:	str	x1, [sp, #16]
   1078c:	ldr	w0, [sp, #28]
   10790:	bl	13798 <grub_unicode_get_comb_type>
   10794:	cmp	w0, #0x0
   10798:	b.ne	107b0 <grub_putcode+0x34>  // b.any
   1079c:	mov	w2, #0x0                   	// #0
   107a0:	ldr	x1, [sp, #16]
   107a4:	ldr	w0, [sp, #28]
   107a8:	bl	10720 <read_terminal_list+0x5f0>
   107ac:	b	107b4 <grub_putcode+0x38>
   107b0:	nop
   107b4:	ldp	x29, x30, [sp], #32
   107b8:	ret
   107bc:	stp	x29, x30, [sp, #-80]!
   107c0:	mov	x29, sp
   107c4:	str	x19, [sp, #16]
   107c8:	str	x0, [sp, #40]
   107cc:	str	w1, [sp, #36]
   107d0:	str	w2, [sp, #32]
   107d4:	stp	xzr, xzr, [sp, #48]
   107d8:	stp	xzr, xzr, [sp, #64]
   107dc:	ldr	w0, [sp, #48]
   107e0:	mov	w1, #0x20                  	// #32
   107e4:	bfxil	w0, w1, #0, #23
   107e8:	str	w0, [sp, #48]
   107ec:	ldr	x0, [sp, #40]
   107f0:	bl	f490 <read_crypto_list+0x350>
   107f4:	mov	w19, w0
   107f8:	add	x0, sp, #0x30
   107fc:	mov	x1, x0
   10800:	ldr	x0, [sp, #40]
   10804:	bl	f668 <read_crypto_list+0x528>
   10808:	mov	x2, x0
   1080c:	ldr	w1, [sp, #36]
   10810:	ldr	w0, [sp, #32]
   10814:	add	w0, w1, w0
   10818:	sxtw	x0, w0
   1081c:	mul	x0, x2, x0
   10820:	sub	x0, x19, x0
   10824:	sub	x0, x0, #0x1
   10828:	ldr	x19, [sp, #16]
   1082c:	ldp	x29, x30, [sp], #80
   10830:	ret
   10834:	stp	x29, x30, [sp, #-32]!
   10838:	mov	x29, sp
   1083c:	str	x0, [sp, #24]
   10840:	str	w1, [sp, #20]
   10844:	ldr	x0, [sp, #24]
   10848:	ldr	x1, [x0, #64]
   1084c:	ldr	x0, [sp, #24]
   10850:	blr	x1
   10854:	and	w0, w0, #0xffff
   10858:	mov	w1, w0
   1085c:	ldr	w0, [sp, #20]
   10860:	sub	w0, w1, w0
   10864:	sxtw	x0, w0
   10868:	ldp	x29, x30, [sp], #32
   1086c:	ret
   10870:	stp	x29, x30, [sp, #-64]!
   10874:	mov	x29, sp
   10878:	str	x19, [sp, #16]
   1087c:	str	x0, [sp, #40]
   10880:	str	w1, [sp, #36]
   10884:	ldr	x0, [sp, #40]
   10888:	ldr	x1, [x0, #56]
   1088c:	ldr	x0, [sp, #40]
   10890:	blr	x1
   10894:	and	w0, w0, #0xffff
   10898:	mov	w19, w0
   1089c:	ldr	x0, [sp, #40]
   108a0:	ldr	x1, [x0, #64]
   108a4:	ldr	x0, [sp, #40]
   108a8:	blr	x1
   108ac:	and	w0, w0, #0xffff
   108b0:	sub	w1, w19, w0
   108b4:	ldr	w0, [sp, #36]
   108b8:	sub	w0, w1, w0
   108bc:	str	w0, [sp, #60]
   108c0:	ldr	w0, [sp, #60]
   108c4:	cmp	w0, #0x0
   108c8:	b.le	108d8 <grub_putcode+0x15c>
   108cc:	ldr	w1, [sp, #60]
   108d0:	ldr	x0, [sp, #40]
   108d4:	bl	f710 <read_crypto_list+0x5d0>
   108d8:	nop
   108dc:	ldr	x19, [sp, #16]
   108e0:	ldp	x29, x30, [sp], #64
   108e4:	ret
   108e8:	stp	x29, x30, [sp, #-352]!
   108ec:	mov	x29, sp
   108f0:	stp	x19, x20, [sp, #16]
   108f4:	str	x0, [sp, #72]
   108f8:	str	x1, [sp, #64]
   108fc:	str	w2, [sp, #60]
   10900:	str	w3, [sp, #56]
   10904:	str	x4, [sp, #48]
   10908:	str	x5, [sp, #40]
   1090c:	str	w6, [sp, #36]
   10910:	str	w7, [sp, #32]
   10914:	ldr	w0, [sp, #36]
   10918:	cmp	w0, #0x0
   1091c:	b.ne	10930 <grub_putcode+0x1b4>  // b.any
   10920:	ldr	w1, [sp, #60]
   10924:	ldr	x0, [sp, #48]
   10928:	bl	10834 <grub_putcode+0xb8>
   1092c:	b	10934 <grub_putcode+0x1b8>
   10930:	mov	x0, #0x0                   	// #0
   10934:	str	x0, [sp, #272]
   10938:	ldr	x0, [sp, #272]
   1093c:	str	x0, [sp, #336]
   10940:	str	xzr, [sp, #328]
   10944:	ldr	w2, [sp, #56]
   10948:	ldr	w1, [sp, #60]
   1094c:	ldr	x0, [sp, #48]
   10950:	bl	107bc <grub_putcode+0x40>
   10954:	str	x0, [sp, #264]
   10958:	ldr	x0, [sp, #72]
   1095c:	str	x0, [sp, #320]
   10960:	ldr	x0, [sp, #72]
   10964:	sub	x0, x0, #0x4
   10968:	str	x0, [sp, #312]
   1096c:	str	wzr, [sp, #308]
   10970:	ldr	x0, [sp, #40]
   10974:	cmp	x0, #0x0
   10978:	b.ne	10994 <grub_putcode+0x218>  // b.any
   1097c:	add	x0, sp, #0x78
   10980:	mov	x2, #0x88                  	// #136
   10984:	mov	w1, #0x0                   	// #0
   10988:	bl	0 <grub_memset>
   1098c:	add	x0, sp, #0x78
   10990:	str	x0, [sp, #40]
   10994:	str	wzr, [sp, #304]
   10998:	b	109c8 <grub_putcode+0x24c>
   1099c:	ldr	x1, [sp, #40]
   109a0:	ldrsw	x0, [sp, #304]
   109a4:	add	x0, x1, x0
   109a8:	ldrb	w0, [x0, #44]
   109ac:	orr	w0, w0, #0x2000
   109b0:	ldr	w2, [sp, #32]
   109b4:	ldr	x1, [sp, #48]
   109b8:	bl	10720 <read_terminal_list+0x5f0>
   109bc:	ldr	w0, [sp, #304]
   109c0:	add	w0, w0, #0x1
   109c4:	str	w0, [sp, #304]
   109c8:	ldr	x0, [sp, #40]
   109cc:	ldr	w0, [x0, #40]
   109d0:	ldr	w1, [sp, #304]
   109d4:	cmp	w1, w0
   109d8:	b.lt	1099c <grub_putcode+0x220>  // b.tstop
   109dc:	ldr	x0, [sp, #72]
   109e0:	str	x0, [sp, #344]
   109e4:	b	11050 <grub_putcode+0x8d4>
   109e8:	str	xzr, [sp, #296]
   109ec:	ldr	x0, [sp, #344]
   109f0:	ldr	w0, [x0]
   109f4:	mov	w1, #0x202e                	// #8238
   109f8:	cmp	w0, w1
   109fc:	b.hi	10ae8 <grub_putcode+0x36c>  // b.pmore
   10a00:	mov	w1, #0x202d                	// #8237
   10a04:	cmp	w0, w1
   10a08:	b.cs	10a38 <grub_putcode+0x2bc>  // b.hs, b.nlast
   10a0c:	mov	w1, #0x202b                	// #8235
   10a10:	cmp	w0, w1
   10a14:	b.hi	10a28 <grub_putcode+0x2ac>  // b.pmore
   10a18:	mov	w1, #0x202a                	// #8234
   10a1c:	cmp	w0, w1
   10a20:	b.cs	10a38 <grub_putcode+0x2bc>  // b.hs, b.nlast
   10a24:	b	10ae8 <grub_putcode+0x36c>
   10a28:	mov	w1, #0x202c                	// #8236
   10a2c:	cmp	w0, w1
   10a30:	b.eq	10a98 <grub_putcode+0x31c>  // b.none
   10a34:	b	10ae8 <grub_putcode+0x36c>
   10a38:	ldr	x0, [sp, #40]
   10a3c:	ldr	w0, [x0, #40]
   10a40:	cmp	w0, #0x3c
   10a44:	b.le	10a60 <grub_putcode+0x2e4>
   10a48:	ldr	x0, [sp, #40]
   10a4c:	ldr	w0, [x0, #108]
   10a50:	add	w1, w0, #0x1
   10a54:	ldr	x0, [sp, #40]
   10a58:	str	w1, [x0, #108]
   10a5c:	b	10ae8 <grub_putcode+0x36c>
   10a60:	ldr	x0, [sp, #344]
   10a64:	ldr	w3, [x0]
   10a68:	ldr	x0, [sp, #40]
   10a6c:	ldr	w0, [x0, #40]
   10a70:	add	w2, w0, #0x1
   10a74:	ldr	x1, [sp, #40]
   10a78:	str	w2, [x1, #40]
   10a7c:	and	w2, w3, #0xff
   10a80:	ldr	x1, [sp, #40]
   10a84:	sxtw	x0, w0
   10a88:	add	x0, x1, x0
   10a8c:	mov	w1, w2
   10a90:	strb	w1, [x0, #44]
   10a94:	b	10ae8 <grub_putcode+0x36c>
   10a98:	ldr	x0, [sp, #40]
   10a9c:	ldr	w0, [x0, #108]
   10aa0:	cmp	w0, #0x0
   10aa4:	b.eq	10ac0 <grub_putcode+0x344>  // b.none
   10aa8:	ldr	x0, [sp, #40]
   10aac:	ldr	w0, [x0, #108]
   10ab0:	sub	w1, w0, #0x1
   10ab4:	ldr	x0, [sp, #40]
   10ab8:	str	w1, [x0, #108]
   10abc:	b	10ae4 <grub_putcode+0x368>
   10ac0:	ldr	x0, [sp, #40]
   10ac4:	ldr	w0, [x0, #40]
   10ac8:	cmp	w0, #0x0
   10acc:	b.eq	10ae4 <grub_putcode+0x368>  // b.none
   10ad0:	ldr	x0, [sp, #40]
   10ad4:	ldr	w0, [x0, #40]
   10ad8:	sub	w1, w0, #0x1
   10adc:	ldr	x0, [sp, #40]
   10ae0:	str	w1, [x0, #40]
   10ae4:	nop
   10ae8:	ldr	x0, [sp, #344]
   10aec:	ldr	w0, [x0]
   10af0:	bl	13798 <grub_unicode_get_comb_type>
   10af4:	cmp	w0, #0x0
   10af8:	b.ne	10bc4 <grub_putcode+0x448>  // b.any
   10afc:	stp	xzr, xzr, [sp, #88]
   10b00:	stp	xzr, xzr, [sp, #104]
   10b04:	ldr	x0, [sp, #344]
   10b08:	ldr	w0, [x0]
   10b0c:	and	w1, w0, #0x7fffff
   10b10:	ldr	w0, [sp, #88]
   10b14:	bfxil	w0, w1, #0, #23
   10b18:	str	w0, [sp, #88]
   10b1c:	ldr	x0, [sp, #392]
   10b20:	cmp	x0, #0x0
   10b24:	b.eq	10ba0 <grub_putcode+0x424>  // b.none
   10b28:	ldr	x1, [sp, #344]
   10b2c:	ldr	x0, [sp, #72]
   10b30:	sub	x0, x1, x0
   10b34:	mov	x1, x0
   10b38:	ldr	x0, [sp, #392]
   10b3c:	add	x1, x0, x1
   10b40:	ldr	x0, [sp, #336]
   10b44:	and	w0, w0, #0x7fff
   10b48:	and	w2, w0, #0xffff
   10b4c:	ldrh	w0, [x1]
   10b50:	bfi	w0, w2, #1, #15
   10b54:	strh	w0, [x1]
   10b58:	ldr	x1, [sp, #344]
   10b5c:	ldr	x0, [sp, #72]
   10b60:	sub	x0, x1, x0
   10b64:	mov	x1, x0
   10b68:	ldr	x0, [sp, #392]
   10b6c:	add	x0, x0, x1
   10b70:	ldr	w1, [sp, #308]
   10b74:	and	w1, w1, #0xffff
   10b78:	strh	w1, [x0, #2]
   10b7c:	ldr	x1, [sp, #344]
   10b80:	ldr	x0, [sp, #72]
   10b84:	sub	x0, x1, x0
   10b88:	mov	x1, x0
   10b8c:	ldr	x0, [sp, #392]
   10b90:	add	x0, x0, x1
   10b94:	ldrb	w1, [x0]
   10b98:	orr	w1, w1, #0x1
   10b9c:	strb	w1, [x0]
   10ba0:	add	x0, sp, #0x58
   10ba4:	mov	x1, x0
   10ba8:	ldr	x0, [sp, #48]
   10bac:	bl	f668 <read_crypto_list+0x528>
   10bb0:	str	x0, [sp, #296]
   10bb4:	ldr	x0, [sp, #296]
   10bb8:	ldr	x1, [sp, #336]
   10bbc:	add	x0, x1, x0
   10bc0:	str	x0, [sp, #336]
   10bc4:	ldr	x0, [sp, #344]
   10bc8:	ldr	w0, [x0]
   10bcc:	cmp	w0, #0x20
   10bd0:	b.ne	10bf0 <grub_putcode+0x474>  // b.any
   10bd4:	ldr	w0, [sp, #376]
   10bd8:	cmp	w0, #0x0
   10bdc:	b.ne	10bf0 <grub_putcode+0x474>  // b.any
   10be0:	ldr	x0, [sp, #336]
   10be4:	str	x0, [sp, #328]
   10be8:	ldr	x0, [sp, #344]
   10bec:	str	x0, [sp, #312]
   10bf0:	ldr	x1, [sp, #336]
   10bf4:	ldr	x0, [sp, #264]
   10bf8:	cmp	x1, x0
   10bfc:	b.gt	10c10 <grub_putcode+0x494>
   10c00:	ldr	x0, [sp, #344]
   10c04:	ldr	w0, [x0]
   10c08:	cmp	w0, #0xa
   10c0c:	b.ne	11044 <grub_putcode+0x8c8>  // b.any
   10c10:	ldr	x0, [sp, #344]
   10c14:	ldr	w0, [x0]
   10c18:	cmp	w0, #0xa
   10c1c:	cset	w0, eq  // eq = none
   10c20:	and	w0, w0, #0xff
   10c24:	str	w0, [sp, #260]
   10c28:	ldr	w0, [sp, #260]
   10c2c:	cmp	w0, #0x0
   10c30:	b.eq	10c44 <grub_putcode+0x4c8>  // b.none
   10c34:	ldr	x0, [sp, #40]
   10c38:	str	wzr, [x0, #40]
   10c3c:	ldr	x0, [sp, #40]
   10c40:	str	wzr, [x0, #108]
   10c44:	ldr	x1, [sp, #336]
   10c48:	ldr	x0, [sp, #264]
   10c4c:	cmp	x1, x0
   10c50:	b.le	10c70 <grub_putcode+0x4f4>
   10c54:	ldr	x1, [sp, #312]
   10c58:	ldr	x0, [sp, #320]
   10c5c:	cmp	x1, x0
   10c60:	b.ls	10c70 <grub_putcode+0x4f4>  // b.plast
   10c64:	ldr	x0, [sp, #312]
   10c68:	str	x0, [sp, #344]
   10c6c:	b	10cd0 <grub_putcode+0x554>
   10c70:	ldr	x1, [sp, #336]
   10c74:	ldr	x0, [sp, #264]
   10c78:	cmp	x1, x0
   10c7c:	b.le	10cc0 <grub_putcode+0x544>
   10c80:	ldr	x1, [sp, #320]
   10c84:	ldr	x0, [sp, #72]
   10c88:	cmp	x1, x0
   10c8c:	b.ne	10cc0 <grub_putcode+0x544>  // b.any
   10c90:	ldr	x1, [sp, #336]
   10c94:	ldr	x0, [sp, #328]
   10c98:	sub	x1, x1, x0
   10c9c:	ldr	x0, [sp, #264]
   10ca0:	sub	x0, x0, #0x5
   10ca4:	cmp	x1, x0
   10ca8:	b.ge	10cc0 <grub_putcode+0x544>  // b.tcont
   10cac:	ldr	x0, [sp, #72]
   10cb0:	str	x0, [sp, #344]
   10cb4:	ldr	x0, [sp, #272]
   10cb8:	str	x0, [sp, #328]
   10cbc:	b	10cd0 <grub_putcode+0x554>
   10cc0:	ldr	x1, [sp, #336]
   10cc4:	ldr	x0, [sp, #296]
   10cc8:	sub	x0, x1, x0
   10ccc:	str	x0, [sp, #328]
   10cd0:	ldr	w0, [sp, #308]
   10cd4:	add	w0, w0, #0x1
   10cd8:	str	w0, [sp, #308]
   10cdc:	ldr	w0, [sp, #352]
   10ce0:	cmp	w0, #0x0
   10ce4:	b.ne	10e78 <grub_putcode+0x6fc>  // b.any
   10ce8:	ldr	w0, [sp, #36]
   10cec:	cmp	w0, #0x0
   10cf0:	b.ne	10e78 <grub_putcode+0x6fc>  // b.any
   10cf4:	ldr	x0, [sp, #320]
   10cf8:	str	x0, [sp, #288]
   10cfc:	b	10d50 <grub_putcode+0x5d4>
   10d00:	ldr	x0, [sp, #48]
   10d04:	ldr	w0, [x0, #120]
   10d08:	and	w0, w0, #0x38
   10d0c:	cmp	w0, #0x10
   10d10:	b.eq	10d28 <grub_putcode+0x5ac>  // b.none
   10d14:	ldr	x0, [sp, #288]
   10d18:	ldr	w0, [x0]
   10d1c:	bl	13798 <grub_unicode_get_comb_type>
   10d20:	cmp	w0, #0x0
   10d24:	b.ne	10d40 <grub_putcode+0x5c4>  // b.any
   10d28:	ldr	x0, [sp, #288]
   10d2c:	ldr	w0, [x0]
   10d30:	ldr	w2, [sp, #32]
   10d34:	ldr	x1, [sp, #48]
   10d38:	bl	10720 <read_terminal_list+0x5f0>
   10d3c:	b	10d44 <grub_putcode+0x5c8>
   10d40:	nop
   10d44:	ldr	x0, [sp, #288]
   10d48:	add	x0, x0, #0x4
   10d4c:	str	x0, [sp, #288]
   10d50:	ldr	x1, [sp, #288]
   10d54:	ldr	x0, [sp, #344]
   10d58:	cmp	x1, x0
   10d5c:	b.cc	10d00 <grub_putcode+0x584>  // b.lo, b.ul, b.last
   10d60:	ldr	w0, [sp, #260]
   10d64:	cmp	w0, #0x0
   10d68:	b.ne	10d88 <grub_putcode+0x60c>  // b.any
   10d6c:	ldr	w0, [sp, #368]
   10d70:	cmp	w0, #0x0
   10d74:	b.eq	10d88 <grub_putcode+0x60c>  // b.none
   10d78:	ldr	w2, [sp, #32]
   10d7c:	ldr	x1, [sp, #48]
   10d80:	ldr	w0, [sp, #368]
   10d84:	bl	10720 <read_terminal_list+0x5f0>
   10d88:	ldr	w0, [sp, #384]
   10d8c:	cmp	w0, #0x0
   10d90:	b.eq	10da0 <grub_putcode+0x624>  // b.none
   10d94:	ldr	w1, [sp, #56]
   10d98:	ldr	x0, [sp, #48]
   10d9c:	bl	10870 <grub_putcode+0xf4>
   10da0:	ldr	w0, [sp, #368]
   10da4:	cmp	w0, #0x0
   10da8:	b.eq	10db8 <grub_putcode+0x63c>  // b.none
   10dac:	ldr	w0, [sp, #360]
   10db0:	cmp	w0, #0x1
   10db4:	b.eq	10dc4 <grub_putcode+0x648>  // b.none
   10db8:	ldr	x1, [sp, #48]
   10dbc:	mov	w0, #0xa                   	// #10
   10dc0:	bl	1077c <grub_putcode>
   10dc4:	add	x0, sp, #0x78
   10dc8:	ldr	x1, [sp, #40]
   10dcc:	cmp	x1, x0
   10dd0:	b.eq	10e78 <grub_putcode+0x6fc>  // b.none
   10dd4:	ldr	x0, [sp, #40]
   10dd8:	ldr	w0, [x0, #120]
   10ddc:	add	w1, w0, #0x1
   10de0:	ldr	x0, [sp, #40]
   10de4:	str	w1, [x0, #120]
   10de8:	ldr	x0, [sp, #40]
   10dec:	ldr	w0, [x0, #120]
   10df0:	sxtw	x20, w0
   10df4:	ldr	x0, [sp, #48]
   10df8:	bl	f4c8 <read_crypto_list+0x388>
   10dfc:	mov	w0, w0
   10e00:	sub	x0, x0, #0x2
   10e04:	cmp	x20, x0
   10e08:	b.lt	10e78 <grub_putcode+0x6fc>  // b.tstop
   10e0c:	ldr	x1, [sp, #344]
   10e10:	ldr	x0, [sp, #312]
   10e14:	cmp	x1, x0
   10e18:	b.eq	10e2c <grub_putcode+0x6b0>  // b.none
   10e1c:	ldr	x0, [sp, #344]
   10e20:	ldr	w0, [x0]
   10e24:	cmp	w0, #0xa
   10e28:	b.ne	10e38 <grub_putcode+0x6bc>  // b.any
   10e2c:	ldr	x0, [sp, #344]
   10e30:	add	x0, x0, #0x4
   10e34:	b	10e3c <grub_putcode+0x6c0>
   10e38:	ldr	x0, [sp, #344]
   10e3c:	ldr	x1, [sp, #40]
   10e40:	str	x0, [x1, #16]
   10e44:	ldr	x0, [sp, #40]
   10e48:	ldr	x0, [x0, #16]
   10e4c:	ldr	x1, [sp, #64]
   10e50:	sub	x0, x1, x0
   10e54:	asr	x0, x0, #2
   10e58:	mov	x1, x0
   10e5c:	ldr	x0, [sp, #40]
   10e60:	str	x1, [x0, #32]
   10e64:	ldr	x0, [sp, #40]
   10e68:	ldr	w1, [sp, #32]
   10e6c:	str	w1, [x0, #24]
   10e70:	mov	w0, #0x1                   	// #1
   10e74:	b	111c8 <grub_putcode+0xa4c>
   10e78:	ldr	x1, [sp, #336]
   10e7c:	ldr	x0, [sp, #328]
   10e80:	sub	x0, x1, x0
   10e84:	str	x0, [sp, #336]
   10e88:	ldr	x1, [sp, #344]
   10e8c:	ldr	x0, [sp, #312]
   10e90:	cmp	x1, x0
   10e94:	b.eq	10ea8 <grub_putcode+0x72c>  // b.none
   10e98:	ldr	x0, [sp, #344]
   10e9c:	ldr	w0, [x0]
   10ea0:	cmp	w0, #0xa
   10ea4:	b.ne	10eb8 <grub_putcode+0x73c>  // b.any
   10ea8:	ldr	x0, [sp, #344]
   10eac:	add	x0, x0, #0x4
   10eb0:	str	x0, [sp, #344]
   10eb4:	b	10f54 <grub_putcode+0x7d8>
   10eb8:	ldr	x0, [sp, #392]
   10ebc:	cmp	x0, #0x0
   10ec0:	b.eq	10f54 <grub_putcode+0x7d8>  // b.none
   10ec4:	ldr	x0, [sp, #336]
   10ec8:	and	w1, w0, #0xffff
   10ecc:	ldr	x0, [sp, #296]
   10ed0:	and	w0, w0, #0xffff
   10ed4:	sub	w0, w1, w0
   10ed8:	and	w2, w0, #0xffff
   10edc:	ldr	x1, [sp, #344]
   10ee0:	ldr	x0, [sp, #72]
   10ee4:	sub	x0, x1, x0
   10ee8:	mov	x1, x0
   10eec:	ldr	x0, [sp, #392]
   10ef0:	add	x1, x0, x1
   10ef4:	mov	w0, w2
   10ef8:	and	w0, w0, #0x7fff
   10efc:	and	w2, w0, #0xffff
   10f00:	ldrh	w0, [x1]
   10f04:	bfi	w0, w2, #1, #15
   10f08:	strh	w0, [x1]
   10f0c:	ldr	x1, [sp, #344]
   10f10:	ldr	x0, [sp, #72]
   10f14:	sub	x0, x1, x0
   10f18:	mov	x1, x0
   10f1c:	ldr	x0, [sp, #392]
   10f20:	add	x0, x0, x1
   10f24:	ldr	w1, [sp, #308]
   10f28:	and	w1, w1, #0xffff
   10f2c:	strh	w1, [x0, #2]
   10f30:	ldr	x1, [sp, #344]
   10f34:	ldr	x0, [sp, #72]
   10f38:	sub	x0, x1, x0
   10f3c:	mov	x1, x0
   10f40:	ldr	x0, [sp, #392]
   10f44:	add	x0, x0, x1
   10f48:	ldrb	w1, [x0]
   10f4c:	orr	w1, w1, #0x1
   10f50:	strb	w1, [x0]
   10f54:	ldr	x0, [sp, #344]
   10f58:	str	x0, [sp, #320]
   10f5c:	ldr	w0, [sp, #352]
   10f60:	cmp	w0, #0x0
   10f64:	b.eq	10f78 <grub_putcode+0x7fc>  // b.none
   10f68:	ldr	w0, [sp, #352]
   10f6c:	sub	w0, w0, #0x1
   10f70:	str	w0, [sp, #352]
   10f74:	b	10f9c <grub_putcode+0x820>
   10f78:	ldr	w0, [sp, #360]
   10f7c:	cmn	w0, #0x1
   10f80:	b.eq	10f9c <grub_putcode+0x820>  // b.none
   10f84:	ldr	w0, [sp, #360]
   10f88:	sub	w0, w0, #0x1
   10f8c:	str	w0, [sp, #360]
   10f90:	ldr	w0, [sp, #360]
   10f94:	cmp	w0, #0x0
   10f98:	b.eq	11064 <grub_putcode+0x8e8>  // b.none
   10f9c:	ldr	w0, [sp, #352]
   10fa0:	cmp	w0, #0x0
   10fa4:	b.ne	11044 <grub_putcode+0x8c8>  // b.any
   10fa8:	ldr	w0, [sp, #36]
   10fac:	cmp	w0, #0x0
   10fb0:	b.ne	11044 <grub_putcode+0x8c8>  // b.any
   10fb4:	ldr	w0, [sp, #368]
   10fb8:	cmp	w0, #0x0
   10fbc:	b.ne	10fd0 <grub_putcode+0x854>  // b.any
   10fc0:	ldr	w1, [sp, #60]
   10fc4:	ldr	x0, [sp, #48]
   10fc8:	bl	f710 <read_crypto_list+0x5d0>
   10fcc:	b	10ffc <grub_putcode+0x880>
   10fd0:	ldr	w0, [sp, #60]
   10fd4:	and	w0, w0, #0xffff
   10fd8:	bfxil	w19, w0, #0, #16
   10fdc:	ldr	x0, [sp, #48]
   10fe0:	bl	f504 <read_crypto_list+0x3c4>
   10fe4:	lsr	w0, w0, #16
   10fe8:	and	w0, w0, #0xffff
   10fec:	bfi	w19, w0, #16, #16
   10ff0:	mov	w1, w19
   10ff4:	ldr	x0, [sp, #48]
   10ff8:	bl	f560 <read_crypto_list+0x420>
   10ffc:	str	wzr, [sp, #304]
   11000:	b	11030 <grub_putcode+0x8b4>
   11004:	ldr	x1, [sp, #40]
   11008:	ldrsw	x0, [sp, #304]
   1100c:	add	x0, x1, x0
   11010:	ldrb	w0, [x0, #44]
   11014:	orr	w0, w0, #0x2000
   11018:	ldr	w2, [sp, #32]
   1101c:	ldr	x1, [sp, #48]
   11020:	bl	10720 <read_terminal_list+0x5f0>
   11024:	ldr	w0, [sp, #304]
   11028:	add	w0, w0, #0x1
   1102c:	str	w0, [sp, #304]
   11030:	ldr	x0, [sp, #40]
   11034:	ldr	w0, [x0, #40]
   11038:	ldr	w1, [sp, #304]
   1103c:	cmp	w1, w0
   11040:	b.lt	11004 <grub_putcode+0x888>  // b.tstop
   11044:	ldr	x0, [sp, #344]
   11048:	add	x0, x0, #0x4
   1104c:	str	x0, [sp, #344]
   11050:	ldr	x1, [sp, #344]
   11054:	ldr	x0, [sp, #64]
   11058:	cmp	x1, x0
   1105c:	b.cc	109e8 <grub_putcode+0x26c>  // b.lo, b.ul, b.last
   11060:	b	11068 <grub_putcode+0x8ec>
   11064:	nop
   11068:	ldr	x0, [sp, #392]
   1106c:	cmp	x0, #0x0
   11070:	b.eq	110ec <grub_putcode+0x970>  // b.none
   11074:	ldr	x1, [sp, #344]
   11078:	ldr	x0, [sp, #72]
   1107c:	sub	x0, x1, x0
   11080:	mov	x1, x0
   11084:	ldr	x0, [sp, #392]
   11088:	add	x1, x0, x1
   1108c:	ldr	x0, [sp, #336]
   11090:	and	w0, w0, #0x7fff
   11094:	and	w2, w0, #0xffff
   11098:	ldrh	w0, [x1]
   1109c:	bfi	w0, w2, #1, #15
   110a0:	strh	w0, [x1]
   110a4:	ldr	x1, [sp, #344]
   110a8:	ldr	x0, [sp, #72]
   110ac:	sub	x0, x1, x0
   110b0:	mov	x1, x0
   110b4:	ldr	x0, [sp, #392]
   110b8:	add	x0, x0, x1
   110bc:	ldr	w1, [sp, #308]
   110c0:	and	w1, w1, #0xffff
   110c4:	strh	w1, [x0, #2]
   110c8:	ldr	x1, [sp, #344]
   110cc:	ldr	x0, [sp, #72]
   110d0:	sub	x0, x1, x0
   110d4:	mov	x1, x0
   110d8:	ldr	x0, [sp, #392]
   110dc:	add	x0, x0, x1
   110e0:	ldrb	w1, [x0]
   110e4:	orr	w1, w1, #0x1
   110e8:	strb	w1, [x0]
   110ec:	ldr	x1, [sp, #320]
   110f0:	ldr	x0, [sp, #64]
   110f4:	cmp	x1, x0
   110f8:	b.cs	11108 <grub_putcode+0x98c>  // b.hs, b.nlast
   110fc:	ldr	w0, [sp, #308]
   11100:	add	w0, w0, #0x1
   11104:	str	w0, [sp, #308]
   11108:	ldr	w0, [sp, #36]
   1110c:	cmp	w0, #0x0
   11110:	b.ne	111b0 <grub_putcode+0xa34>  // b.any
   11114:	ldr	w0, [sp, #352]
   11118:	cmp	w0, #0x0
   1111c:	b.ne	111b0 <grub_putcode+0xa34>  // b.any
   11120:	ldr	w0, [sp, #360]
   11124:	cmp	w0, #0x0
   11128:	b.eq	111b0 <grub_putcode+0xa34>  // b.none
   1112c:	ldr	x0, [sp, #320]
   11130:	str	x0, [sp, #280]
   11134:	b	11188 <grub_putcode+0xa0c>
   11138:	ldr	x0, [sp, #48]
   1113c:	ldr	w0, [x0, #120]
   11140:	and	w0, w0, #0x38
   11144:	cmp	w0, #0x10
   11148:	b.eq	11160 <grub_putcode+0x9e4>  // b.none
   1114c:	ldr	x0, [sp, #280]
   11150:	ldr	w0, [x0]
   11154:	bl	13798 <grub_unicode_get_comb_type>
   11158:	cmp	w0, #0x0
   1115c:	b.ne	11178 <grub_putcode+0x9fc>  // b.any
   11160:	ldr	x0, [sp, #280]
   11164:	ldr	w0, [x0]
   11168:	ldr	w2, [sp, #32]
   1116c:	ldr	x1, [sp, #48]
   11170:	bl	10720 <read_terminal_list+0x5f0>
   11174:	b	1117c <grub_putcode+0xa00>
   11178:	nop
   1117c:	ldr	x0, [sp, #280]
   11180:	add	x0, x0, #0x4
   11184:	str	x0, [sp, #280]
   11188:	ldr	x1, [sp, #280]
   1118c:	ldr	x0, [sp, #64]
   11190:	cmp	x1, x0
   11194:	b.cc	11138 <grub_putcode+0x9bc>  // b.lo, b.ul, b.last
   11198:	ldr	w0, [sp, #384]
   1119c:	cmp	w0, #0x0
   111a0:	b.eq	111b0 <grub_putcode+0xa34>  // b.none
   111a4:	ldr	w1, [sp, #56]
   111a8:	ldr	x0, [sp, #48]
   111ac:	bl	10870 <grub_putcode+0xf4>
   111b0:	ldr	w0, [sp, #36]
   111b4:	cmp	w0, #0x0
   111b8:	b.eq	111c4 <grub_putcode+0xa48>  // b.none
   111bc:	ldr	w0, [sp, #308]
   111c0:	b	111c8 <grub_putcode+0xa4c>
   111c4:	mov	w0, #0x0                   	// #0
   111c8:	ldp	x19, x20, [sp, #16]
   111cc:	ldp	x29, x30, [sp], #352
   111d0:	ret
   111d4:	stp	x29, x30, [sp, #-48]!
   111d8:	mov	x29, sp
   111dc:	str	x0, [sp, #24]
   111e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   111e4:	add	x0, x0, #0x0
   111e8:	ldr	x0, [x0]
   111ec:	ldr	x0, [x0]
   111f0:	str	x0, [sp, #40]
   111f4:	b	11230 <grub_putcode+0xab4>
   111f8:	ldr	x0, [sp, #40]
   111fc:	ldr	x2, [x0, #128]
   11200:	ldr	x0, [sp, #24]
   11204:	ldr	x0, [x0, #16]
   11208:	mov	x1, x0
   1120c:	mov	x0, x2
   11210:	bl	0 <grub_strcmp>
   11214:	cmp	w0, #0x0
   11218:	b.ne	11224 <grub_putcode+0xaa8>  // b.any
   1121c:	ldr	x0, [sp, #40]
   11220:	b	112b4 <grub_putcode+0xb38>
   11224:	ldr	x0, [sp, #40]
   11228:	ldr	x0, [x0]
   1122c:	str	x0, [sp, #40]
   11230:	ldr	x0, [sp, #40]
   11234:	cmp	x0, #0x0
   11238:	b.ne	111f8 <grub_putcode+0xa7c>  // b.any
   1123c:	mov	x0, #0x88                  	// #136
   11240:	bl	0 <grub_zalloc>
   11244:	str	x0, [sp, #40]
   11248:	ldr	x0, [sp, #40]
   1124c:	cmp	x0, #0x0
   11250:	b.ne	1126c <grub_putcode+0xaf0>  // b.any
   11254:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11258:	add	x0, x0, #0x0
   1125c:	ldr	x0, [x0]
   11260:	str	wzr, [x0]
   11264:	mov	x0, #0x0                   	// #0
   11268:	b	112b4 <grub_putcode+0xb38>
   1126c:	ldr	x0, [sp, #24]
   11270:	ldr	x0, [x0, #16]
   11274:	bl	0 <grub_strdup>
   11278:	mov	x1, x0
   1127c:	ldr	x0, [sp, #40]
   11280:	str	x1, [x0, #128]
   11284:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11288:	add	x0, x0, #0x0
   1128c:	ldr	x0, [x0]
   11290:	ldr	x1, [x0]
   11294:	ldr	x0, [sp, #40]
   11298:	str	x1, [x0]
   1129c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   112a0:	add	x0, x0, #0x0
   112a4:	ldr	x0, [x0]
   112a8:	ldr	x1, [sp, #40]
   112ac:	str	x1, [x0]
   112b0:	ldr	x0, [sp, #40]
   112b4:	ldp	x29, x30, [sp], #48
   112b8:	ret
   112bc:	nop
	...
   112d0:	stp	x29, x30, [sp, #-96]!
   112d4:	mov	x29, sp
   112d8:	stp	x19, x20, [sp, #16]
   112dc:	str	x0, [sp, #72]
   112e0:	str	x1, [sp, #64]
   112e4:	str	w2, [sp, #60]
   112e8:	str	w3, [sp, #56]
   112ec:	str	x4, [sp, #48]
   112f0:	str	x5, [sp, #40]
   112f4:	str	w6, [sp, #36]
   112f8:	str	w7, [sp, #32]
   112fc:	mov	w0, #0x1                   	// #1
   11300:	str	w0, [sp, #84]
   11304:	ldr	x0, [sp, #72]
   11308:	str	x0, [sp, #88]
   1130c:	b	11464 <grub_putcode+0xce8>
   11310:	ldr	x0, [sp, #88]
   11314:	ldr	w0, [x0]
   11318:	and	w0, w0, #0x7fffff
   1131c:	cmp	w0, #0xa
   11320:	b.ne	1133c <grub_putcode+0xbc0>  // b.any
   11324:	ldr	w0, [sp, #96]
   11328:	cmp	w0, #0x0
   1132c:	b.eq	1133c <grub_putcode+0xbc0>  // b.none
   11330:	ldr	w1, [sp, #56]
   11334:	ldr	x0, [sp, #48]
   11338:	bl	10870 <grub_putcode+0xf4>
   1133c:	ldr	w2, [sp, #36]
   11340:	ldr	x1, [sp, #48]
   11344:	ldr	x0, [sp, #88]
   11348:	bl	10410 <read_terminal_list+0x2e0>
   1134c:	ldr	w0, [sp, #84]
   11350:	add	w0, w0, #0x1
   11354:	str	w0, [sp, #84]
   11358:	ldr	x0, [sp, #88]
   1135c:	ldr	w0, [x0]
   11360:	and	w0, w0, #0x7fffff
   11364:	cmp	w0, #0xa
   11368:	b.ne	11450 <grub_putcode+0xcd4>  // b.any
   1136c:	str	wzr, [sp, #84]
   11370:	ldr	x0, [sp, #40]
   11374:	cmp	x0, #0x0
   11378:	b.eq	11408 <grub_putcode+0xc8c>  // b.none
   1137c:	ldr	x0, [sp, #40]
   11380:	ldr	w0, [x0, #120]
   11384:	add	w1, w0, #0x1
   11388:	ldr	x0, [sp, #40]
   1138c:	str	w1, [x0, #120]
   11390:	ldr	x0, [sp, #40]
   11394:	ldr	w0, [x0, #120]
   11398:	sxtw	x20, w0
   1139c:	ldr	x0, [sp, #48]
   113a0:	bl	f4c8 <read_crypto_list+0x388>
   113a4:	mov	w0, w0
   113a8:	sub	x0, x0, #0x2
   113ac:	cmp	x20, x0
   113b0:	b.lt	11408 <grub_putcode+0xc8c>  // b.tstop
   113b4:	ldr	x0, [sp, #88]
   113b8:	add	x1, x0, #0x20
   113bc:	ldr	x0, [sp, #40]
   113c0:	str	x1, [x0, #8]
   113c4:	ldr	x1, [sp, #88]
   113c8:	ldr	x0, [sp, #72]
   113cc:	sub	x0, x1, x0
   113d0:	asr	x0, x0, #5
   113d4:	neg	x0, x0
   113d8:	mov	x1, x0
   113dc:	ldr	x0, [sp, #64]
   113e0:	add	x0, x1, x0
   113e4:	sub	x0, x0, #0x1
   113e8:	mov	x1, x0
   113ec:	ldr	x0, [sp, #40]
   113f0:	str	x1, [x0, #32]
   113f4:	ldr	x0, [sp, #40]
   113f8:	ldr	w1, [sp, #36]
   113fc:	str	w1, [x0, #24]
   11400:	mov	w0, #0x1                   	// #1
   11404:	b	114a8 <grub_putcode+0xd2c>
   11408:	ldr	w0, [sp, #32]
   1140c:	cmp	w0, #0x0
   11410:	b.ne	11424 <grub_putcode+0xca8>  // b.any
   11414:	ldr	w1, [sp, #60]
   11418:	ldr	x0, [sp, #48]
   1141c:	bl	f710 <read_crypto_list+0x5d0>
   11420:	b	11450 <grub_putcode+0xcd4>
   11424:	ldr	w0, [sp, #60]
   11428:	and	w0, w0, #0xffff
   1142c:	bfxil	w19, w0, #0, #16
   11430:	ldr	x0, [sp, #48]
   11434:	bl	f504 <read_crypto_list+0x3c4>
   11438:	lsr	w0, w0, #16
   1143c:	and	w0, w0, #0xffff
   11440:	bfi	w19, w0, #16, #16
   11444:	mov	w1, w19
   11448:	ldr	x0, [sp, #48]
   1144c:	bl	f560 <read_crypto_list+0x420>
   11450:	ldr	x0, [sp, #88]
   11454:	bl	f444 <read_crypto_list+0x304>
   11458:	ldr	x0, [sp, #88]
   1145c:	add	x0, x0, #0x20
   11460:	str	x0, [sp, #88]
   11464:	ldr	x0, [sp, #64]
   11468:	lsl	x0, x0, #5
   1146c:	ldr	x1, [sp, #72]
   11470:	add	x0, x1, x0
   11474:	ldr	x1, [sp, #88]
   11478:	cmp	x1, x0
   1147c:	b.cc	11310 <grub_putcode+0xb94>  // b.lo, b.ul, b.last
   11480:	ldr	w0, [sp, #96]
   11484:	cmp	w0, #0x0
   11488:	b.eq	114a4 <grub_putcode+0xd28>  // b.none
   1148c:	ldr	w0, [sp, #84]
   11490:	cmp	w0, #0x0
   11494:	b.eq	114a4 <grub_putcode+0xd28>  // b.none
   11498:	ldr	w1, [sp, #56]
   1149c:	ldr	x0, [sp, #48]
   114a0:	bl	10870 <grub_putcode+0xf4>
   114a4:	mov	w0, #0x0                   	// #0
   114a8:	ldp	x19, x20, [sp, #16]
   114ac:	ldp	x29, x30, [sp], #96
   114b0:	ret
   114b4:	sub	sp, sp, #0x60
   114b8:	stp	x29, x30, [sp, #48]
   114bc:	add	x29, sp, #0x30
   114c0:	str	x0, [sp, #72]
   114c4:	str	w1, [sp, #68]
   114c8:	str	w2, [sp, #64]
   114cc:	ldr	x0, [sp, #72]
   114d0:	bl	111d4 <grub_putcode+0xa58>
   114d4:	str	x0, [sp, #88]
   114d8:	ldr	x0, [sp, #88]
   114dc:	cmp	x0, #0x0
   114e0:	b.ne	114ec <grub_putcode+0xd70>  // b.any
   114e4:	mov	w0, #0x0                   	// #0
   114e8:	b	1162c <grub_putcode+0xeb0>
   114ec:	ldr	x0, [sp, #88]
   114f0:	ldr	x0, [x0, #16]
   114f4:	cmp	x0, #0x0
   114f8:	b.eq	1159c <grub_putcode+0xe20>  // b.none
   114fc:	ldr	x0, [sp, #88]
   11500:	ldr	x8, [x0, #16]
   11504:	ldr	x0, [sp, #88]
   11508:	ldr	x1, [x0, #16]
   1150c:	ldr	x0, [sp, #88]
   11510:	ldr	x0, [x0, #32]
   11514:	lsl	x0, x0, #2
   11518:	add	x1, x1, x0
   1151c:	ldr	x0, [sp, #88]
   11520:	ldr	w2, [x0, #24]
   11524:	str	xzr, [sp, #40]
   11528:	str	wzr, [sp, #32]
   1152c:	str	wzr, [sp, #24]
   11530:	str	wzr, [sp, #16]
   11534:	mov	w0, #0xffffffff            	// #-1
   11538:	str	w0, [sp, #8]
   1153c:	str	wzr, [sp]
   11540:	mov	w7, w2
   11544:	mov	w6, #0x0                   	// #0
   11548:	ldr	x5, [sp, #88]
   1154c:	ldr	x4, [sp, #72]
   11550:	ldr	w3, [sp, #64]
   11554:	ldr	w2, [sp, #68]
   11558:	mov	x0, x8
   1155c:	bl	108e8 <grub_putcode+0x16c>
   11560:	str	w0, [sp, #80]
   11564:	ldr	w0, [sp, #80]
   11568:	cmp	w0, #0x0
   1156c:	b.ne	11594 <grub_putcode+0xe18>  // b.any
   11570:	ldr	x0, [sp, #88]
   11574:	ldr	x0, [x0, #112]
   11578:	bl	0 <grub_free>
   1157c:	ldr	x0, [sp, #88]
   11580:	str	xzr, [x0, #112]
   11584:	ldr	x0, [sp, #88]
   11588:	str	xzr, [x0, #32]
   1158c:	ldr	x0, [sp, #88]
   11590:	str	xzr, [x0, #16]
   11594:	ldr	w0, [sp, #80]
   11598:	b	1162c <grub_putcode+0xeb0>
   1159c:	ldr	x0, [sp, #88]
   115a0:	ldr	x0, [x0, #8]
   115a4:	cmp	x0, #0x0
   115a8:	b.eq	11628 <grub_putcode+0xeac>  // b.none
   115ac:	ldr	x0, [sp, #88]
   115b0:	ldr	x8, [x0, #8]
   115b4:	ldr	x0, [sp, #88]
   115b8:	ldr	x0, [x0, #32]
   115bc:	mov	x1, x0
   115c0:	ldr	x0, [sp, #88]
   115c4:	ldr	w0, [x0, #24]
   115c8:	str	wzr, [sp]
   115cc:	mov	w7, #0x0                   	// #0
   115d0:	mov	w6, w0
   115d4:	ldr	x5, [sp, #88]
   115d8:	ldr	x4, [sp, #72]
   115dc:	ldr	w3, [sp, #64]
   115e0:	ldr	w2, [sp, #68]
   115e4:	mov	x0, x8
   115e8:	bl	112d0 <grub_putcode+0xb54>
   115ec:	str	w0, [sp, #84]
   115f0:	ldr	w0, [sp, #84]
   115f4:	cmp	w0, #0x0
   115f8:	b.ne	11620 <grub_putcode+0xea4>  // b.any
   115fc:	ldr	x0, [sp, #88]
   11600:	ldr	x0, [x0, #112]
   11604:	bl	0 <grub_free>
   11608:	ldr	x0, [sp, #88]
   1160c:	str	xzr, [x0, #112]
   11610:	ldr	x0, [sp, #88]
   11614:	str	xzr, [x0, #32]
   11618:	ldr	x0, [sp, #88]
   1161c:	str	xzr, [x0, #8]
   11620:	ldr	w0, [sp, #84]
   11624:	b	1162c <grub_putcode+0xeb0>
   11628:	mov	w0, #0x0                   	// #0
   1162c:	ldp	x29, x30, [sp, #48]
   11630:	add	sp, sp, #0x60
   11634:	ret
   11638:	stp	x29, x30, [sp, #-32]!
   1163c:	mov	x29, sp
   11640:	str	x0, [sp, #24]
   11644:	str	x1, [sp, #16]
   11648:	ldr	x1, [sp, #24]
   1164c:	ldr	x0, [sp, #16]
   11650:	bl	f668 <read_crypto_list+0x528>
   11654:	ldp	x29, x30, [sp], #32
   11658:	ret
   1165c:	sub	sp, sp, #0xc0
   11660:	stp	x29, x30, [sp, #48]
   11664:	add	x29, sp, #0x30
   11668:	stp	x19, x20, [sp, #64]
   1166c:	str	x0, [sp, #120]
   11670:	str	x1, [sp, #112]
   11674:	str	w2, [sp, #108]
   11678:	str	w3, [sp, #104]
   1167c:	str	x4, [sp, #96]
   11680:	str	w5, [sp, #92]
   11684:	str	w6, [sp, #88]
   11688:	str	w7, [sp, #84]
   1168c:	str	xzr, [sp, #184]
   11690:	ldr	w0, [sp, #88]
   11694:	cmp	w0, #0x0
   11698:	b.ne	11728 <grub_putcode+0xfac>  // b.any
   1169c:	ldr	w0, [sp, #92]
   116a0:	cmp	w0, #0x0
   116a4:	b.eq	116b4 <grub_putcode+0xf38>  // b.none
   116a8:	ldr	x0, [sp, #96]
   116ac:	bl	111d4 <grub_putcode+0xa58>
   116b0:	str	x0, [sp, #184]
   116b4:	ldr	x0, [sp, #96]
   116b8:	ldr	x1, [x0, #64]
   116bc:	ldr	x0, [sp, #96]
   116c0:	blr	x1
   116c4:	str	w0, [sp, #136]
   116c8:	ldrh	w0, [sp, #136]
   116cc:	mov	w1, w0
   116d0:	ldr	w0, [sp, #108]
   116d4:	cmp	w0, w1
   116d8:	b.le	11728 <grub_putcode+0xfac>
   116dc:	ldr	w0, [sp, #208]
   116e0:	cmp	w0, #0x0
   116e4:	b.ne	11708 <grub_putcode+0xf8c>  // b.any
   116e8:	ldrh	w0, [sp, #136]
   116ec:	mov	w1, w0
   116f0:	ldr	w0, [sp, #108]
   116f4:	sub	w0, w0, w1
   116f8:	mov	w1, w0
   116fc:	ldr	x0, [sp, #96]
   11700:	bl	f710 <read_crypto_list+0x5d0>
   11704:	b	11728 <grub_putcode+0xfac>
   11708:	ldr	w0, [sp, #108]
   1170c:	and	w0, w0, #0xffff
   11710:	bfxil	w19, w0, #0, #16
   11714:	ldrh	w0, [sp, #138]
   11718:	bfi	w19, w0, #16, #16
   1171c:	mov	w1, w19
   11720:	ldr	x0, [sp, #96]
   11724:	bl	f560 <read_crypto_list+0x420>
   11728:	ldr	x0, [sp, #96]
   1172c:	ldr	w0, [x0, #120]
   11730:	and	w0, w0, #0x38
   11734:	cmp	w0, #0x20
   11738:	b.eq	11750 <grub_putcode+0xfd4>  // b.none
   1173c:	ldr	x0, [sp, #96]
   11740:	ldr	w0, [x0, #120]
   11744:	and	w0, w0, #0x38
   11748:	cmp	w0, #0x18
   1174c:	b.ne	11a4c <grub_putcode+0x12d0>  // b.any
   11750:	ldr	x1, [sp, #112]
   11754:	ldr	x0, [sp, #120]
   11758:	sub	x0, x1, x0
   1175c:	asr	x0, x0, #2
   11760:	mov	x19, x0
   11764:	ldr	w2, [sp, #104]
   11768:	ldr	w1, [sp, #108]
   1176c:	ldr	x0, [sp, #96]
   11770:	bl	107bc <grub_putcode+0x40>
   11774:	mov	x20, x0
   11778:	ldr	w0, [sp, #88]
   1177c:	cmp	w0, #0x0
   11780:	b.ne	11798 <grub_putcode+0x101c>  // b.any
   11784:	ldr	w1, [sp, #108]
   11788:	ldr	x0, [sp, #96]
   1178c:	bl	10834 <grub_putcode+0xb8>
   11790:	mov	x2, x0
   11794:	b	1179c <grub_putcode+0x1020>
   11798:	mov	x2, #0x0                   	// #0
   1179c:	ldr	w0, [sp, #208]
   117a0:	cmp	w0, #0x0
   117a4:	cset	w0, ne  // ne = any
   117a8:	and	w0, w0, #0xff
   117ac:	add	x1, sp, #0x80
   117b0:	str	w0, [sp, #8]
   117b4:	ldr	x0, [sp, #224]
   117b8:	str	x0, [sp]
   117bc:	ldr	w7, [sp, #208]
   117c0:	mov	x6, x2
   117c4:	mov	x5, x20
   117c8:	ldr	x4, [sp, #96]
   117cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   117d0:	add	x0, x0, #0x0
   117d4:	ldr	x3, [x0]
   117d8:	mov	x2, x1
   117dc:	mov	x1, x19
   117e0:	ldr	x0, [sp, #120]
   117e4:	bl	16318 <grub_bidi_logical_to_visual>
   117e8:	str	x0, [sp, #144]
   117ec:	ldr	x0, [sp, #144]
   117f0:	cmp	x0, #0x0
   117f4:	b.ge	11804 <grub_putcode+0x1088>  // b.tcont
   117f8:	bl	0 <grub_print_error>
   117fc:	mov	w0, #0x0                   	// #0
   11800:	b	11ab0 <grub_putcode+0x1334>
   11804:	ldr	x0, [sp, #128]
   11808:	str	x0, [sp, #168]
   1180c:	b	1183c <grub_putcode+0x10c0>
   11810:	ldr	x0, [sp, #168]
   11814:	ldr	w0, [x0]
   11818:	and	w0, w0, #0x7fffff
   1181c:	cmp	w0, #0xa
   11820:	b.ne	11830 <grub_putcode+0x10b4>  // b.any
   11824:	ldr	w0, [sp, #192]
   11828:	sub	w0, w0, #0x1
   1182c:	str	w0, [sp, #192]
   11830:	ldr	x0, [sp, #168]
   11834:	add	x0, x0, #0x20
   11838:	str	x0, [sp, #168]
   1183c:	ldr	w0, [sp, #192]
   11840:	cmp	w0, #0x0
   11844:	b.eq	11864 <grub_putcode+0x10e8>  // b.none
   11848:	ldr	x1, [sp, #128]
   1184c:	ldr	x0, [sp, #144]
   11850:	lsl	x0, x0, #5
   11854:	add	x0, x1, x0
   11858:	ldr	x1, [sp, #168]
   1185c:	cmp	x1, x0
   11860:	b.cc	11810 <grub_putcode+0x1094>  // b.lo, b.ul, b.last
   11864:	ldr	w0, [sp, #200]
   11868:	cmn	w0, #0x1
   1186c:	b.eq	118e8 <grub_putcode+0x116c>  // b.none
   11870:	ldr	x0, [sp, #168]
   11874:	str	x0, [sp, #152]
   11878:	b	118a8 <grub_putcode+0x112c>
   1187c:	ldr	x0, [sp, #152]
   11880:	ldr	w0, [x0]
   11884:	and	w0, w0, #0x7fffff
   11888:	cmp	w0, #0xa
   1188c:	b.ne	1189c <grub_putcode+0x1120>  // b.any
   11890:	ldr	w0, [sp, #200]
   11894:	sub	w0, w0, #0x1
   11898:	str	w0, [sp, #200]
   1189c:	ldr	x0, [sp, #152]
   118a0:	add	x0, x0, #0x20
   118a4:	str	x0, [sp, #152]
   118a8:	ldr	w0, [sp, #200]
   118ac:	cmp	w0, #0x0
   118b0:	b.eq	118d0 <grub_putcode+0x1154>  // b.none
   118b4:	ldr	x1, [sp, #128]
   118b8:	ldr	x0, [sp, #144]
   118bc:	lsl	x0, x0, #5
   118c0:	add	x0, x1, x0
   118c4:	ldr	x1, [sp, #152]
   118c8:	cmp	x1, x0
   118cc:	b.cc	1187c <grub_putcode+0x1100>  // b.lo, b.ul, b.last
   118d0:	ldr	x1, [sp, #152]
   118d4:	ldr	x0, [sp, #168]
   118d8:	sub	x0, x1, x0
   118dc:	asr	x0, x0, #5
   118e0:	str	x0, [sp, #176]
   118e4:	b	11908 <grub_putcode+0x118c>
   118e8:	ldr	x1, [sp, #128]
   118ec:	ldr	x0, [sp, #144]
   118f0:	lsl	x0, x0, #5
   118f4:	add	x1, x1, x0
   118f8:	ldr	x0, [sp, #168]
   118fc:	sub	x0, x1, x0
   11900:	asr	x0, x0, #5
   11904:	str	x0, [sp, #176]
   11908:	ldr	w0, [sp, #88]
   1190c:	cmp	w0, #0x0
   11910:	b.eq	119f0 <grub_putcode+0x1274>  // b.none
   11914:	str	wzr, [sp, #164]
   11918:	ldr	x0, [sp, #168]
   1191c:	str	x0, [sp, #152]
   11920:	b	11950 <grub_putcode+0x11d4>
   11924:	ldr	x0, [sp, #152]
   11928:	ldr	w0, [x0]
   1192c:	and	w0, w0, #0x7fffff
   11930:	cmp	w0, #0xa
   11934:	b.ne	11944 <grub_putcode+0x11c8>  // b.any
   11938:	ldr	w0, [sp, #164]
   1193c:	add	w0, w0, #0x1
   11940:	str	w0, [sp, #164]
   11944:	ldr	x0, [sp, #152]
   11948:	add	x0, x0, #0x20
   1194c:	str	x0, [sp, #152]
   11950:	ldr	x0, [sp, #176]
   11954:	lsl	x0, x0, #5
   11958:	ldr	x1, [sp, #168]
   1195c:	add	x0, x1, x0
   11960:	ldr	x1, [sp, #152]
   11964:	cmp	x1, x0
   11968:	b.cc	11924 <grub_putcode+0x11a8>  // b.lo, b.ul, b.last
   1196c:	ldr	x0, [sp, #176]
   11970:	cmp	x0, #0x0
   11974:	b.eq	119a8 <grub_putcode+0x122c>  // b.none
   11978:	ldr	x1, [sp, #128]
   1197c:	ldr	x0, [sp, #176]
   11980:	lsl	x0, x0, #5
   11984:	sub	x0, x0, #0x20
   11988:	add	x0, x1, x0
   1198c:	ldr	w0, [x0]
   11990:	and	w0, w0, #0x7fffff
   11994:	cmp	w0, #0xa
   11998:	b.eq	119a8 <grub_putcode+0x122c>  // b.none
   1199c:	ldr	w0, [sp, #164]
   119a0:	add	w0, w0, #0x1
   119a4:	str	w0, [sp, #164]
   119a8:	ldr	x0, [sp, #128]
   119ac:	str	x0, [sp, #152]
   119b0:	b	119c8 <grub_putcode+0x124c>
   119b4:	ldr	x0, [sp, #152]
   119b8:	bl	f444 <read_crypto_list+0x304>
   119bc:	ldr	x0, [sp, #152]
   119c0:	add	x0, x0, #0x20
   119c4:	str	x0, [sp, #152]
   119c8:	ldr	x1, [sp, #128]
   119cc:	ldr	x0, [sp, #144]
   119d0:	lsl	x0, x0, #5
   119d4:	add	x0, x1, x0
   119d8:	ldr	x1, [sp, #152]
   119dc:	cmp	x1, x0
   119e0:	b.cc	119b4 <grub_putcode+0x1238>  // b.lo, b.ul, b.last
   119e4:	ldr	x0, [sp, #128]
   119e8:	bl	0 <grub_free>
   119ec:	b	11a44 <grub_putcode+0x12c8>
   119f0:	ldr	w0, [sp, #216]
   119f4:	str	w0, [sp]
   119f8:	ldr	w7, [sp, #208]
   119fc:	ldr	w6, [sp, #84]
   11a00:	ldr	x5, [sp, #184]
   11a04:	ldr	x4, [sp, #96]
   11a08:	ldr	w3, [sp, #104]
   11a0c:	ldr	w2, [sp, #108]
   11a10:	ldr	x1, [sp, #176]
   11a14:	ldr	x0, [sp, #168]
   11a18:	bl	112d0 <grub_putcode+0xb54>
   11a1c:	str	w0, [sp, #164]
   11a20:	ldr	w0, [sp, #164]
   11a24:	cmp	w0, #0x0
   11a28:	b.ne	11a38 <grub_putcode+0x12bc>  // b.any
   11a2c:	ldr	x0, [sp, #128]
   11a30:	bl	0 <grub_free>
   11a34:	b	11a44 <grub_putcode+0x12c8>
   11a38:	ldr	x1, [sp, #128]
   11a3c:	ldr	x0, [sp, #184]
   11a40:	str	x1, [x0, #112]
   11a44:	ldr	w0, [sp, #164]
   11a48:	b	11ab0 <grub_putcode+0x1334>
   11a4c:	ldr	w0, [sp, #208]
   11a50:	cmp	w0, #0x0
   11a54:	cset	w0, ne  // ne = any
   11a58:	and	w0, w0, #0xff
   11a5c:	mov	w1, w0
   11a60:	ldr	x0, [sp, #224]
   11a64:	str	x0, [sp, #40]
   11a68:	ldr	w0, [sp, #216]
   11a6c:	str	w0, [sp, #32]
   11a70:	str	w1, [sp, #24]
   11a74:	ldr	w0, [sp, #208]
   11a78:	str	w0, [sp, #16]
   11a7c:	ldr	w0, [sp, #200]
   11a80:	str	w0, [sp, #8]
   11a84:	ldr	w0, [sp, #192]
   11a88:	str	w0, [sp]
   11a8c:	ldr	w7, [sp, #84]
   11a90:	ldr	w6, [sp, #88]
   11a94:	ldr	x5, [sp, #184]
   11a98:	ldr	x4, [sp, #96]
   11a9c:	ldr	w3, [sp, #104]
   11aa0:	ldr	w2, [sp, #108]
   11aa4:	ldr	x1, [sp, #112]
   11aa8:	ldr	x0, [sp, #120]
   11aac:	bl	108e8 <grub_putcode+0x16c>
   11ab0:	ldp	x19, x20, [sp, #64]
   11ab4:	ldp	x29, x30, [sp, #48]
   11ab8:	add	sp, sp, #0xc0
   11abc:	ret
	...

0000000000011ac8 <grub_print_ucs4_menu>:
   11ac8:	sub	sp, sp, #0x70
   11acc:	stp	x29, x30, [sp, #48]
   11ad0:	add	x29, sp, #0x30
   11ad4:	str	x0, [sp, #104]
   11ad8:	str	x1, [sp, #96]
   11adc:	str	w2, [sp, #92]
   11ae0:	str	w3, [sp, #88]
   11ae4:	str	x4, [sp, #80]
   11ae8:	str	w5, [sp, #76]
   11aec:	str	w6, [sp, #72]
   11af0:	str	w7, [sp, #68]
   11af4:	ldr	w0, [sp, #76]
   11af8:	ldr	w1, [sp, #72]
   11afc:	ldr	x2, [sp, #112]
   11b00:	str	x2, [sp, #32]
   11b04:	mov	w2, #0x1                   	// #1
   11b08:	str	w2, [sp, #24]
   11b0c:	ldr	w2, [sp, #68]
   11b10:	str	w2, [sp, #16]
   11b14:	str	w1, [sp, #8]
   11b18:	str	w0, [sp]
   11b1c:	mov	w7, #0x1                   	// #1
   11b20:	mov	w6, #0x0                   	// #0
   11b24:	mov	w5, #0x0                   	// #0
   11b28:	ldr	x4, [sp, #80]
   11b2c:	ldr	w3, [sp, #88]
   11b30:	ldr	w2, [sp, #92]
   11b34:	ldr	x1, [sp, #96]
   11b38:	ldr	x0, [sp, #104]
   11b3c:	bl	1165c <grub_putcode+0xee0>
   11b40:	nop
   11b44:	ldp	x29, x30, [sp, #48]
   11b48:	add	sp, sp, #0x70
   11b4c:	ret

0000000000011b50 <grub_print_ucs4>:
   11b50:	sub	sp, sp, #0x60
   11b54:	stp	x29, x30, [sp, #48]
   11b58:	add	x29, sp, #0x30
   11b5c:	str	x0, [sp, #88]
   11b60:	str	x1, [sp, #80]
   11b64:	str	w2, [sp, #76]
   11b68:	str	w3, [sp, #72]
   11b6c:	str	x4, [sp, #64]
   11b70:	str	xzr, [sp, #32]
   11b74:	str	wzr, [sp, #24]
   11b78:	str	wzr, [sp, #16]
   11b7c:	mov	w0, #0xffffffff            	// #-1
   11b80:	str	w0, [sp, #8]
   11b84:	str	wzr, [sp]
   11b88:	mov	w7, #0x1                   	// #1
   11b8c:	mov	w6, #0x0                   	// #0
   11b90:	mov	w5, #0x0                   	// #0
   11b94:	ldr	x4, [sp, #64]
   11b98:	ldr	w3, [sp, #72]
   11b9c:	ldr	w2, [sp, #76]
   11ba0:	ldr	x1, [sp, #80]
   11ba4:	ldr	x0, [sp, #88]
   11ba8:	bl	1165c <grub_putcode+0xee0>
   11bac:	nop
   11bb0:	ldp	x29, x30, [sp, #48]
   11bb4:	add	sp, sp, #0x60
   11bb8:	ret

0000000000011bbc <grub_ucs4_count_lines>:
   11bbc:	sub	sp, sp, #0x60
   11bc0:	stp	x29, x30, [sp, #48]
   11bc4:	add	x29, sp, #0x30
   11bc8:	str	x0, [sp, #88]
   11bcc:	str	x1, [sp, #80]
   11bd0:	str	w2, [sp, #76]
   11bd4:	str	w3, [sp, #72]
   11bd8:	str	x4, [sp, #64]
   11bdc:	str	xzr, [sp, #32]
   11be0:	str	wzr, [sp, #24]
   11be4:	str	wzr, [sp, #16]
   11be8:	mov	w0, #0xffffffff            	// #-1
   11bec:	str	w0, [sp, #8]
   11bf0:	str	wzr, [sp]
   11bf4:	mov	w7, #0x1                   	// #1
   11bf8:	mov	w6, #0x1                   	// #1
   11bfc:	mov	w5, #0x0                   	// #0
   11c00:	ldr	x4, [sp, #64]
   11c04:	ldr	w3, [sp, #72]
   11c08:	ldr	w2, [sp, #76]
   11c0c:	ldr	x1, [sp, #80]
   11c10:	ldr	x0, [sp, #88]
   11c14:	bl	1165c <grub_putcode+0xee0>
   11c18:	ldp	x29, x30, [sp, #48]
   11c1c:	add	sp, sp, #0x60
   11c20:	ret

0000000000011c24 <grub_xnputs>:
   11c24:	sub	sp, sp, #0xa0
   11c28:	stp	x29, x30, [sp, #48]
   11c2c:	add	x29, sp, #0x30
   11c30:	str	x0, [sp, #72]
   11c34:	str	x1, [sp, #64]
   11c38:	str	xzr, [sp, #136]
   11c3c:	str	wzr, [sp, #156]
   11c40:	bl	0 <grub_error_push>
   11c44:	ldr	x0, [sp, #64]
   11c48:	lsl	x0, x0, #2
   11c4c:	bl	0 <grub_malloc>
   11c50:	str	x0, [sp, #136]
   11c54:	bl	0 <grub_error_pop>
   11c58:	ldr	x0, [sp, #136]
   11c5c:	cmp	x0, #0x0
   11c60:	b.ne	11d74 <grub_xnputs+0x150>  // b.any
   11c64:	b	11d5c <grub_xnputs+0x138>
   11c68:	stp	xzr, xzr, [sp, #88]
   11c6c:	stp	xzr, xzr, [sp, #104]
   11c70:	ldr	x0, [sp, #72]
   11c74:	ldrb	w0, [x0]
   11c78:	mov	w1, w0
   11c7c:	and	w1, w1, #0x7fffff
   11c80:	ldr	w0, [sp, #88]
   11c84:	bfxil	w0, w1, #0, #23
   11c88:	str	w0, [sp, #88]
   11c8c:	mov	w0, #0x1                   	// #1
   11c90:	strb	w0, [sp, #96]
   11c94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11c98:	add	x0, x0, #0x0
   11c9c:	ldr	x0, [x0]
   11ca0:	ldr	x0, [x0]
   11ca4:	str	x0, [sp, #144]
   11ca8:	b	11cd0 <grub_xnputs+0xac>
   11cac:	ldr	x0, [sp, #144]
   11cb0:	ldr	x2, [x0, #40]
   11cb4:	add	x0, sp, #0x58
   11cb8:	mov	x1, x0
   11cbc:	ldr	x0, [sp, #144]
   11cc0:	blr	x2
   11cc4:	ldr	x0, [sp, #144]
   11cc8:	ldr	x0, [x0]
   11ccc:	str	x0, [sp, #144]
   11cd0:	ldr	x0, [sp, #144]
   11cd4:	cmp	x0, #0x0
   11cd8:	b.ne	11cac <grub_xnputs+0x88>  // b.any
   11cdc:	ldr	x0, [sp, #72]
   11ce0:	ldrb	w0, [x0]
   11ce4:	cmp	w0, #0xa
   11ce8:	b.ne	11d44 <grub_xnputs+0x120>  // b.any
   11cec:	ldr	w0, [sp, #88]
   11cf0:	mov	w1, #0xd                   	// #13
   11cf4:	bfxil	w0, w1, #0, #23
   11cf8:	str	w0, [sp, #88]
   11cfc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11d00:	add	x0, x0, #0x0
   11d04:	ldr	x0, [x0]
   11d08:	ldr	x0, [x0]
   11d0c:	str	x0, [sp, #144]
   11d10:	b	11d38 <grub_xnputs+0x114>
   11d14:	ldr	x0, [sp, #144]
   11d18:	ldr	x2, [x0, #40]
   11d1c:	add	x0, sp, #0x58
   11d20:	mov	x1, x0
   11d24:	ldr	x0, [sp, #144]
   11d28:	blr	x2
   11d2c:	ldr	x0, [sp, #144]
   11d30:	ldr	x0, [x0]
   11d34:	str	x0, [sp, #144]
   11d38:	ldr	x0, [sp, #144]
   11d3c:	cmp	x0, #0x0
   11d40:	b.ne	11d14 <grub_xnputs+0xf0>  // b.any
   11d44:	ldr	x0, [sp, #72]
   11d48:	add	x0, x0, #0x1
   11d4c:	str	x0, [sp, #72]
   11d50:	ldr	x0, [sp, #64]
   11d54:	add	x0, x0, #0x1
   11d58:	str	x0, [sp, #64]
   11d5c:	ldr	x0, [sp, #64]
   11d60:	sub	x1, x0, #0x1
   11d64:	str	x1, [sp, #64]
   11d68:	cmp	x0, #0x0
   11d6c:	b.ne	11c68 <grub_xnputs+0x44>  // b.any
   11d70:	b	11eb0 <grub_xnputs+0x28c>
   11d74:	mov	x4, #0x0                   	// #0
   11d78:	mov	x3, #0xffffffffffffffff    	// #-1
   11d7c:	ldr	x2, [sp, #72]
   11d80:	ldr	x1, [sp, #64]
   11d84:	ldr	x0, [sp, #136]
   11d88:	bl	12ecc <grub_utf8_to_ucs4>
   11d8c:	str	x0, [sp, #64]
   11d90:	ldr	x0, [sp, #64]
   11d94:	lsl	x0, x0, #2
   11d98:	ldr	x1, [sp, #136]
   11d9c:	add	x0, x1, x0
   11da0:	str	x0, [sp, #128]
   11da4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11da8:	add	x0, x0, #0x0
   11dac:	ldr	x0, [x0]
   11db0:	ldr	x0, [x0]
   11db4:	str	x0, [sp, #144]
   11db8:	b	11e2c <grub_xnputs+0x208>
   11dbc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11dc0:	add	x0, x0, #0x0
   11dc4:	ldr	x0, [x0]
   11dc8:	ldr	w1, [x0]
   11dcc:	str	xzr, [sp, #32]
   11dd0:	str	wzr, [sp, #24]
   11dd4:	str	wzr, [sp, #16]
   11dd8:	mov	w0, #0xffffffff            	// #-1
   11ddc:	str	w0, [sp, #8]
   11de0:	str	wzr, [sp]
   11de4:	mov	w7, #0x0                   	// #0
   11de8:	mov	w6, #0x0                   	// #0
   11dec:	mov	w5, w1
   11df0:	ldr	x4, [sp, #144]
   11df4:	mov	w3, #0x0                   	// #0
   11df8:	mov	w2, #0x0                   	// #0
   11dfc:	ldr	x1, [sp, #128]
   11e00:	ldr	x0, [sp, #136]
   11e04:	bl	1165c <grub_putcode+0xee0>
   11e08:	str	w0, [sp, #120]
   11e0c:	ldr	w0, [sp, #120]
   11e10:	cmp	w0, #0x0
   11e14:	b.eq	11e20 <grub_xnputs+0x1fc>  // b.none
   11e18:	mov	w0, #0x1                   	// #1
   11e1c:	str	w0, [sp, #156]
   11e20:	ldr	x0, [sp, #144]
   11e24:	ldr	x0, [x0]
   11e28:	str	x0, [sp, #144]
   11e2c:	ldr	x0, [sp, #144]
   11e30:	cmp	x0, #0x0
   11e34:	b.ne	11dbc <grub_xnputs+0x198>  // b.any
   11e38:	b	11e9c <grub_xnputs+0x278>
   11e3c:	bl	f7e8 <grub_normal_reset_more+0x90>
   11e40:	str	wzr, [sp, #156]
   11e44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11e48:	add	x0, x0, #0x0
   11e4c:	ldr	x0, [x0]
   11e50:	ldr	x0, [x0]
   11e54:	str	x0, [sp, #144]
   11e58:	b	11e90 <grub_xnputs+0x26c>
   11e5c:	mov	w2, #0x0                   	// #0
   11e60:	mov	w1, #0x0                   	// #0
   11e64:	ldr	x0, [sp, #144]
   11e68:	bl	114b4 <grub_putcode+0xd38>
   11e6c:	str	w0, [sp, #124]
   11e70:	ldr	w0, [sp, #124]
   11e74:	cmp	w0, #0x0
   11e78:	b.eq	11e84 <grub_xnputs+0x260>  // b.none
   11e7c:	mov	w0, #0x1                   	// #1
   11e80:	str	w0, [sp, #156]
   11e84:	ldr	x0, [sp, #144]
   11e88:	ldr	x0, [x0]
   11e8c:	str	x0, [sp, #144]
   11e90:	ldr	x0, [sp, #144]
   11e94:	cmp	x0, #0x0
   11e98:	b.ne	11e5c <grub_xnputs+0x238>  // b.any
   11e9c:	ldr	w0, [sp, #156]
   11ea0:	cmp	w0, #0x0
   11ea4:	b.ne	11e3c <grub_xnputs+0x218>  // b.any
   11ea8:	ldr	x0, [sp, #136]
   11eac:	bl	0 <grub_free>
   11eb0:	ldp	x29, x30, [sp, #48]
   11eb4:	add	sp, sp, #0xa0
   11eb8:	ret
   11ebc:	nop
	...

0000000000011ed0 <grub_xputs_normal>:
   11ed0:	stp	x29, x30, [sp, #-32]!
   11ed4:	mov	x29, sp
   11ed8:	str	x0, [sp, #24]
   11edc:	ldr	x0, [sp, #24]
   11ee0:	bl	0 <grub_strlen>
   11ee4:	mov	x1, x0
   11ee8:	ldr	x0, [sp, #24]
   11eec:	bl	11c24 <grub_xnputs>
   11ef0:	nop
   11ef4:	ldp	x29, x30, [sp], #32
   11ef8:	ret

0000000000011efc <grub_cls>:
   11efc:	stp	x29, x30, [sp, #-32]!
   11f00:	mov	x29, sp
   11f04:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11f08:	add	x0, x0, #0x0
   11f0c:	ldr	x0, [x0]
   11f10:	ldr	x0, [x0]
   11f14:	str	x0, [sp, #24]
   11f18:	b	11f7c <grub_cls+0x80>
   11f1c:	ldr	x0, [sp, #24]
   11f20:	ldr	w0, [x0, #120]
   11f24:	and	w0, w0, #0x4
   11f28:	cmp	w0, #0x0
   11f2c:	b.ne	11f48 <grub_cls+0x4c>  // b.any
   11f30:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11f34:	add	x0, x0, #0x0
   11f38:	ldr	x0, [x0]
   11f3c:	bl	0 <grub_env_get>
   11f40:	cmp	x0, #0x0
   11f44:	b.eq	11f60 <grub_cls+0x64>  // b.none
   11f48:	ldr	x1, [sp, #24]
   11f4c:	mov	w0, #0xa                   	// #10
   11f50:	bl	1077c <grub_putcode>
   11f54:	ldr	x0, [sp, #24]
   11f58:	bl	f528 <read_crypto_list+0x3e8>
   11f5c:	b	11f70 <grub_cls+0x74>
   11f60:	ldr	x0, [sp, #24]
   11f64:	ldr	x1, [x0, #80]
   11f68:	ldr	x0, [sp, #24]
   11f6c:	blr	x1
   11f70:	ldr	x0, [sp, #24]
   11f74:	ldr	x0, [x0]
   11f78:	str	x0, [sp, #24]
   11f7c:	ldr	x0, [sp, #24]
   11f80:	cmp	x0, #0x0
   11f84:	b.ne	11f1c <grub_cls+0x20>  // b.any
   11f88:	nop
   11f8c:	nop
   11f90:	ldp	x29, x30, [sp], #32
   11f94:	ret
	...
   11fa8:	stp	x29, x30, [sp, #-48]!
   11fac:	mov	x29, sp
   11fb0:	str	x0, [sp, #40]
   11fb4:	str	x1, [sp, #32]
   11fb8:	str	x2, [sp, #24]
   11fbc:	str	x3, [sp, #16]
   11fc0:	mov	w4, #0x0                   	// #0
   11fc4:	ldr	x3, [sp, #16]
   11fc8:	ldr	x2, [sp, #24]
   11fcc:	ldr	x1, [sp, #32]
   11fd0:	ldr	x0, [sp, #40]
   11fd4:	bl	0 <grub_register_command_prio>
   11fd8:	ldp	x29, x30, [sp], #48
   11fdc:	ret

0000000000011fe0 <grub_env_unset_menu>:
   11fe0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   11fe4:	add	x0, x0, #0x0
   11fe8:	ldr	x0, [x0]
   11fec:	ldr	x0, [x0]
   11ff0:	str	xzr, [x0]
   11ff4:	nop
   11ff8:	ret
   11ffc:	nop
	...

0000000000012008 <grub_env_get_menu>:
   12008:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1200c:	add	x0, x0, #0x0
   12010:	ldr	x0, [x0]
   12014:	ldr	x0, [x0]
   12018:	ldr	x0, [x0]
   1201c:	ret
	...

0000000000012028 <grub_env_set_menu>:
   12028:	sub	sp, sp, #0x10
   1202c:	str	x0, [sp, #8]
   12030:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12034:	add	x0, x0, #0x0
   12038:	ldr	x0, [x0]
   1203c:	ldr	x0, [x0]
   12040:	ldr	x1, [sp, #8]
   12044:	str	x1, [x0]
   12048:	nop
   1204c:	add	sp, sp, #0x10
   12050:	ret
   12054:	nop
	...
   12060:	stp	x29, x30, [sp, #-64]!
   12064:	mov	x29, sp
   12068:	str	w0, [sp, #28]
   1206c:	mov	x0, #0x70                  	// #112
   12070:	bl	0 <grub_zalloc>
   12074:	str	x0, [sp, #40]
   12078:	ldr	x0, [sp, #40]
   1207c:	cmp	x0, #0x0
   12080:	b.ne	12098 <grub_env_set_menu+0x70>  // b.any
   12084:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12088:	add	x0, x0, #0x0
   1208c:	ldr	x0, [x0]
   12090:	ldr	w0, [x0]
   12094:	b	12200 <grub_env_set_menu+0x1d8>
   12098:	mov	x0, #0x10                  	// #16
   1209c:	bl	0 <grub_zalloc>
   120a0:	str	x0, [sp, #32]
   120a4:	ldr	x0, [sp, #32]
   120a8:	cmp	x0, #0x0
   120ac:	b.ne	120cc <grub_env_set_menu+0xa4>  // b.any
   120b0:	ldr	x0, [sp, #40]
   120b4:	bl	0 <grub_free>
   120b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   120bc:	add	x0, x0, #0x0
   120c0:	ldr	x0, [x0]
   120c4:	ldr	w0, [x0]
   120c8:	b	12200 <grub_env_set_menu+0x1d8>
   120cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   120d0:	add	x0, x0, #0x0
   120d4:	ldr	x0, [x0]
   120d8:	ldr	x1, [x0]
   120dc:	ldr	x0, [sp, #40]
   120e0:	str	x1, [x0, #104]
   120e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   120e8:	add	x0, x0, #0x0
   120ec:	ldr	x0, [x0]
   120f0:	ldr	x1, [sp, #40]
   120f4:	str	x1, [x0]
   120f8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   120fc:	add	x0, x0, #0x0
   12100:	ldr	x0, [x0]
   12104:	ldr	x1, [x0]
   12108:	ldr	x0, [sp, #32]
   1210c:	str	x1, [x0, #8]
   12110:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12114:	add	x0, x0, #0x0
   12118:	ldr	x0, [x0]
   1211c:	ldr	x1, [sp, #32]
   12120:	str	x1, [x0]
   12124:	str	wzr, [sp, #60]
   12128:	b	121f0 <grub_env_set_menu+0x1c8>
   1212c:	ldr	x0, [sp, #40]
   12130:	ldr	x0, [x0, #104]
   12134:	ldrsw	x1, [sp, #60]
   12138:	ldr	x0, [x0, x1, lsl #3]
   1213c:	str	x0, [sp, #48]
   12140:	b	121d8 <grub_env_set_menu+0x1b0>
   12144:	ldr	x0, [sp, #48]
   12148:	ldr	w0, [x0, #56]
   1214c:	cmp	w0, #0x0
   12150:	b.ne	12160 <grub_env_set_menu+0x138>  // b.any
   12154:	ldr	w0, [sp, #28]
   12158:	cmp	w0, #0x0
   1215c:	b.eq	121cc <grub_env_set_menu+0x1a4>  // b.none
   12160:	ldr	x0, [sp, #48]
   12164:	ldr	x2, [x0]
   12168:	ldr	x0, [sp, #48]
   1216c:	ldr	x0, [x0, #8]
   12170:	mov	x1, x0
   12174:	mov	x0, x2
   12178:	bl	0 <grub_env_set>
   1217c:	cmp	w0, #0x0
   12180:	b.eq	1219c <grub_env_set_menu+0x174>  // b.none
   12184:	bl	12280 <grub_env_context_close>
   12188:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1218c:	add	x0, x0, #0x0
   12190:	ldr	x0, [x0]
   12194:	ldr	w0, [x0]
   12198:	b	12200 <grub_env_set_menu+0x1d8>
   1219c:	ldr	x0, [sp, #48]
   121a0:	ldr	x0, [x0]
   121a4:	bl	0 <grub_env_export>
   121a8:	ldr	x0, [sp, #48]
   121ac:	ldr	x3, [x0]
   121b0:	ldr	x0, [sp, #48]
   121b4:	ldr	x1, [x0, #16]
   121b8:	ldr	x0, [sp, #48]
   121bc:	ldr	x0, [x0, #24]
   121c0:	mov	x2, x0
   121c4:	mov	x0, x3
   121c8:	bl	0 <grub_register_variable_hook>
   121cc:	ldr	x0, [sp, #48]
   121d0:	ldr	x0, [x0, #32]
   121d4:	str	x0, [sp, #48]
   121d8:	ldr	x0, [sp, #48]
   121dc:	cmp	x0, #0x0
   121e0:	b.ne	12144 <grub_env_set_menu+0x11c>  // b.any
   121e4:	ldr	w0, [sp, #60]
   121e8:	add	w0, w0, #0x1
   121ec:	str	w0, [sp, #60]
   121f0:	ldr	w0, [sp, #60]
   121f4:	cmp	w0, #0xc
   121f8:	b.le	1212c <grub_env_set_menu+0x104>
   121fc:	mov	w0, #0x0                   	// #0
   12200:	ldp	x29, x30, [sp], #64
   12204:	ret
	...

0000000000012220 <grub_env_context_open>:
   12220:	stp	x29, x30, [sp, #-16]!
   12224:	mov	x29, sp
   12228:	mov	w0, #0x0                   	// #0
   1222c:	bl	12060 <grub_env_set_menu+0x38>
   12230:	ldp	x29, x30, [sp], #16
   12234:	ret

0000000000012238 <grub_env_extractor_open>:
   12238:	stp	x29, x30, [sp, #-32]!
   1223c:	mov	x29, sp
   12240:	str	w0, [sp, #28]
   12244:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12248:	add	x0, x0, #0x0
   1224c:	ldr	x0, [x0]
   12250:	ldr	w0, [x0]
   12254:	add	w1, w0, #0x1
   12258:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1225c:	add	x0, x0, #0x0
   12260:	ldr	x0, [x0]
   12264:	str	w1, [x0]
   12268:	ldr	w0, [sp, #28]
   1226c:	bl	12060 <grub_env_set_menu+0x38>
   12270:	ldp	x29, x30, [sp], #32
   12274:	ret
	...

0000000000012280 <grub_env_context_close>:
   12280:	stp	x29, x30, [sp, #-64]!
   12284:	mov	x29, sp
   12288:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1228c:	add	x0, x0, #0x0
   12290:	ldr	x0, [x0]
   12294:	ldr	x0, [x0]
   12298:	ldr	x0, [x0, #104]
   1229c:	cmp	x0, #0x0
   122a0:	b.ne	122bc <grub_env_context_close+0x3c>  // b.any
   122a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   122a8:	add	x0, x0, #0x0
   122ac:	ldr	x1, [x0]
   122b0:	mov	w0, #0x12                  	// #18
   122b4:	bl	0 <grub_error>
   122b8:	b	123f4 <grub_env_context_close+0x174>
   122bc:	str	wzr, [sp, #60]
   122c0:	b	12330 <grub_env_context_close+0xb0>
   122c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   122c8:	add	x0, x0, #0x0
   122cc:	ldr	x0, [x0]
   122d0:	ldr	x0, [x0]
   122d4:	ldrsw	x1, [sp, #60]
   122d8:	ldr	x0, [x0, x1, lsl #3]
   122dc:	str	x0, [sp, #48]
   122e0:	b	12318 <grub_env_context_close+0x98>
   122e4:	ldr	x0, [sp, #48]
   122e8:	ldr	x0, [x0, #32]
   122ec:	str	x0, [sp, #24]
   122f0:	ldr	x0, [sp, #48]
   122f4:	ldr	x0, [x0]
   122f8:	bl	0 <grub_free>
   122fc:	ldr	x0, [sp, #48]
   12300:	ldr	x0, [x0, #8]
   12304:	bl	0 <grub_free>
   12308:	ldr	x0, [sp, #48]
   1230c:	bl	0 <grub_free>
   12310:	ldr	x0, [sp, #24]
   12314:	str	x0, [sp, #48]
   12318:	ldr	x0, [sp, #48]
   1231c:	cmp	x0, #0x0
   12320:	b.ne	122e4 <grub_env_context_close+0x64>  // b.any
   12324:	ldr	w0, [sp, #60]
   12328:	add	w0, w0, #0x1
   1232c:	str	w0, [sp, #60]
   12330:	ldr	w0, [sp, #60]
   12334:	cmp	w0, #0xc
   12338:	b.le	122c4 <grub_env_context_close+0x44>
   1233c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12340:	add	x0, x0, #0x0
   12344:	ldr	x0, [x0]
   12348:	ldr	x0, [x0]
   1234c:	ldr	x0, [x0, #104]
   12350:	str	x0, [sp, #40]
   12354:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12358:	add	x0, x0, #0x0
   1235c:	ldr	x0, [x0]
   12360:	ldr	x0, [x0]
   12364:	bl	0 <grub_free>
   12368:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1236c:	add	x0, x0, #0x0
   12370:	ldr	x0, [x0]
   12374:	ldr	x1, [sp, #40]
   12378:	str	x1, [x0]
   1237c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12380:	add	x0, x0, #0x0
   12384:	ldr	x0, [x0]
   12388:	ldr	x0, [x0]
   1238c:	ldr	x0, [x0, #8]
   12390:	str	x0, [sp, #32]
   12394:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12398:	add	x0, x0, #0x0
   1239c:	ldr	x0, [x0]
   123a0:	ldr	x0, [x0]
   123a4:	ldr	x0, [x0]
   123a8:	cmp	x0, #0x0
   123ac:	b.eq	123c8 <grub_env_context_close+0x148>  // b.none
   123b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   123b4:	add	x0, x0, #0x0
   123b8:	ldr	x0, [x0]
   123bc:	ldr	x0, [x0]
   123c0:	ldr	x0, [x0]
   123c4:	bl	168 <grub_normal_free_menu>
   123c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   123cc:	add	x0, x0, #0x0
   123d0:	ldr	x0, [x0]
   123d4:	ldr	x0, [x0]
   123d8:	bl	0 <grub_free>
   123dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   123e0:	add	x0, x0, #0x0
   123e4:	ldr	x0, [x0]
   123e8:	ldr	x1, [sp, #32]
   123ec:	str	x1, [x0]
   123f0:	mov	w0, #0x0                   	// #0
   123f4:	ldp	x29, x30, [sp], #64
   123f8:	ret
   123fc:	nop
	...

0000000000012418 <grub_env_extractor_close>:
   12418:	stp	x29, x30, [sp, #-64]!
   1241c:	mov	x29, sp
   12420:	str	w0, [sp, #28]
   12424:	str	xzr, [sp, #56]
   12428:	ldr	w0, [sp, #28]
   1242c:	cmp	w0, #0x0
   12430:	b.eq	12440 <grub_env_extractor_close+0x28>  // b.none
   12434:	bl	12008 <grub_env_get_menu>
   12438:	str	x0, [sp, #56]
   1243c:	bl	11fe0 <grub_env_unset_menu>
   12440:	bl	12280 <grub_env_context_close>
   12444:	str	w0, [sp, #44]
   12448:	ldr	w0, [sp, #28]
   1244c:	cmp	w0, #0x0
   12450:	b.eq	124c4 <grub_env_extractor_close+0xac>  // b.none
   12454:	ldr	x0, [sp, #56]
   12458:	cmp	x0, #0x0
   1245c:	b.eq	124c4 <grub_env_extractor_close+0xac>  // b.none
   12460:	bl	12008 <grub_env_get_menu>
   12464:	str	x0, [sp, #32]
   12468:	ldr	x0, [sp, #32]
   1246c:	add	x0, x0, #0x8
   12470:	str	x0, [sp, #48]
   12474:	b	12488 <grub_env_extractor_close+0x70>
   12478:	ldr	x0, [sp, #48]
   1247c:	ldr	x0, [x0]
   12480:	add	x0, x0, #0x48
   12484:	str	x0, [sp, #48]
   12488:	ldr	x0, [sp, #48]
   1248c:	ldr	x0, [x0]
   12490:	cmp	x0, #0x0
   12494:	b.ne	12478 <grub_env_extractor_close+0x60>  // b.any
   12498:	ldr	x0, [sp, #56]
   1249c:	ldr	x1, [x0, #8]
   124a0:	ldr	x0, [sp, #48]
   124a4:	str	x1, [x0]
   124a8:	ldr	x0, [sp, #32]
   124ac:	ldr	w1, [x0]
   124b0:	ldr	x0, [sp, #56]
   124b4:	ldr	w0, [x0]
   124b8:	add	w1, w1, w0
   124bc:	ldr	x0, [sp, #32]
   124c0:	str	w1, [x0]
   124c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   124c8:	add	x0, x0, #0x0
   124cc:	ldr	x0, [x0]
   124d0:	ldr	w0, [x0]
   124d4:	sub	w1, w0, #0x1
   124d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   124dc:	add	x0, x0, #0x0
   124e0:	ldr	x0, [x0]
   124e4:	str	w1, [x0]
   124e8:	ldr	w0, [sp, #44]
   124ec:	ldp	x29, x30, [sp], #64
   124f0:	ret
   124f4:	nop
	...
   12500:	stp	x29, x30, [sp, #-64]!
   12504:	mov	x29, sp
   12508:	str	x0, [sp, #40]
   1250c:	str	w1, [sp, #36]
   12510:	str	x2, [sp, #24]
   12514:	ldr	w0, [sp, #36]
   12518:	cmp	w0, #0x0
   1251c:	b.gt	12538 <grub_env_extractor_close+0x120>
   12520:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12524:	add	x0, x0, #0x0
   12528:	ldr	x1, [x0]
   1252c:	mov	w0, #0x12                  	// #18
   12530:	bl	0 <grub_error>
   12534:	b	12578 <grub_env_extractor_close+0x160>
   12538:	str	wzr, [sp, #60]
   1253c:	b	12564 <grub_env_extractor_close+0x14c>
   12540:	ldrsw	x0, [sp, #60]
   12544:	lsl	x0, x0, #3
   12548:	ldr	x1, [sp, #24]
   1254c:	add	x0, x1, x0
   12550:	ldr	x0, [x0]
   12554:	bl	0 <grub_env_export>
   12558:	ldr	w0, [sp, #60]
   1255c:	add	w0, w0, #0x1
   12560:	str	w0, [sp, #60]
   12564:	ldr	w1, [sp, #60]
   12568:	ldr	w0, [sp, #36]
   1256c:	cmp	w1, w0
   12570:	b.lt	12540 <grub_env_extractor_close+0x128>  // b.tstop
   12574:	mov	w0, #0x0                   	// #0
   12578:	ldp	x29, x30, [sp], #64
   1257c:	ret
	...

0000000000012588 <grub_context_init>:
   12588:	stp	x29, x30, [sp, #-16]!
   1258c:	mov	x29, sp
   12590:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   12594:	add	x0, x0, #0x0
   12598:	ldr	x3, [x0]
   1259c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   125a0:	add	x0, x0, #0x0
   125a4:	ldr	x2, [x0]
   125a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   125ac:	add	x0, x0, #0x0
   125b0:	ldr	x1, [x0]
   125b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   125b8:	add	x0, x0, #0x0
   125bc:	ldr	x0, [x0]
   125c0:	bl	11fa8 <grub_cls+0xac>
   125c4:	mov	x1, x0
   125c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   125cc:	add	x0, x0, #0x0
   125d0:	ldr	x0, [x0]
   125d4:	str	x1, [x0]
   125d8:	nop
   125dc:	ldp	x29, x30, [sp], #16
   125e0:	ret
   125e4:	nop
	...

0000000000012610 <grub_context_fini>:
   12610:	stp	x29, x30, [sp, #-16]!
   12614:	mov	x29, sp
   12618:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1261c:	add	x0, x0, #0x0
   12620:	ldr	x0, [x0]
   12624:	ldr	x0, [x0]
   12628:	bl	0 <grub_unregister_command>
   1262c:	nop
   12630:	ldp	x29, x30, [sp], #16
   12634:	ret
	...
   12640:	sub	sp, sp, #0x20
   12644:	strb	w0, [sp, #31]
   12648:	str	x1, [sp, #16]
   1264c:	str	x2, [sp, #8]
   12650:	ldr	x0, [sp, #8]
   12654:	ldr	w0, [x0]
   12658:	cmp	w0, #0x0
   1265c:	b.eq	12724 <grub_context_fini+0x114>  // b.none
   12660:	ldrb	w0, [sp, #31]
   12664:	and	w0, w0, #0xc0
   12668:	cmp	w0, #0x80
   1266c:	b.eq	12680 <grub_context_fini+0x70>  // b.none
   12670:	ldr	x0, [sp, #8]
   12674:	str	wzr, [x0]
   12678:	mov	w0, #0x0                   	// #0
   1267c:	b	1280c <grub_context_fini+0x1fc>
   12680:	ldr	x0, [sp, #16]
   12684:	ldr	w0, [x0]
   12688:	lsl	w1, w0, #6
   1268c:	ldr	x0, [sp, #16]
   12690:	str	w1, [x0]
   12694:	ldr	x0, [sp, #16]
   12698:	ldr	w1, [x0]
   1269c:	ldrb	w0, [sp, #31]
   126a0:	and	w0, w0, #0x3f
   126a4:	orr	w1, w1, w0
   126a8:	ldr	x0, [sp, #16]
   126ac:	str	w1, [x0]
   126b0:	ldr	x0, [sp, #8]
   126b4:	ldr	w0, [x0]
   126b8:	sub	w1, w0, #0x1
   126bc:	ldr	x0, [sp, #8]
   126c0:	str	w1, [x0]
   126c4:	ldr	x0, [sp, #8]
   126c8:	ldr	w0, [x0]
   126cc:	cmp	w0, #0x1
   126d0:	b.ne	126e4 <grub_context_fini+0xd4>  // b.any
   126d4:	ldr	x0, [sp, #16]
   126d8:	ldr	w0, [x0]
   126dc:	cmp	w0, #0x1f
   126e0:	b.ls	12704 <grub_context_fini+0xf4>  // b.plast
   126e4:	ldr	x0, [sp, #8]
   126e8:	ldr	w0, [x0]
   126ec:	cmp	w0, #0x2
   126f0:	b.ne	1271c <grub_context_fini+0x10c>  // b.any
   126f4:	ldr	x0, [sp, #16]
   126f8:	ldr	w0, [x0]
   126fc:	cmp	w0, #0xf
   12700:	b.hi	1271c <grub_context_fini+0x10c>  // b.pmore
   12704:	ldr	x0, [sp, #16]
   12708:	str	wzr, [x0]
   1270c:	ldr	x0, [sp, #8]
   12710:	str	wzr, [x0]
   12714:	mov	w0, #0x0                   	// #0
   12718:	b	1280c <grub_context_fini+0x1fc>
   1271c:	mov	w0, #0x1                   	// #1
   12720:	b	1280c <grub_context_fini+0x1fc>
   12724:	ldrsb	w0, [sp, #31]
   12728:	cmp	w0, #0x0
   1272c:	b.lt	12744 <grub_context_fini+0x134>  // b.tstop
   12730:	ldrb	w1, [sp, #31]
   12734:	ldr	x0, [sp, #16]
   12738:	str	w1, [x0]
   1273c:	mov	w0, #0x1                   	// #1
   12740:	b	1280c <grub_context_fini+0x1fc>
   12744:	ldrb	w0, [sp, #31]
   12748:	and	w0, w0, #0xe0
   1274c:	cmp	w0, #0xc0
   12750:	b.ne	127a0 <grub_context_fini+0x190>  // b.any
   12754:	ldr	x0, [sp, #8]
   12758:	mov	w1, #0x1                   	// #1
   1275c:	str	w1, [x0]
   12760:	ldrb	w0, [sp, #31]
   12764:	and	w1, w0, #0x1f
   12768:	ldr	x0, [sp, #16]
   1276c:	str	w1, [x0]
   12770:	ldr	x0, [sp, #16]
   12774:	ldr	w0, [x0]
   12778:	cmp	w0, #0x1
   1277c:	b.hi	12798 <grub_context_fini+0x188>  // b.pmore
   12780:	ldr	x0, [sp, #8]
   12784:	str	wzr, [x0]
   12788:	ldr	x0, [sp, #16]
   1278c:	str	wzr, [x0]
   12790:	mov	w0, #0x0                   	// #0
   12794:	b	1280c <grub_context_fini+0x1fc>
   12798:	mov	w0, #0x1                   	// #1
   1279c:	b	1280c <grub_context_fini+0x1fc>
   127a0:	ldrb	w0, [sp, #31]
   127a4:	and	w0, w0, #0xf0
   127a8:	cmp	w0, #0xe0
   127ac:	b.ne	127d4 <grub_context_fini+0x1c4>  // b.any
   127b0:	ldr	x0, [sp, #8]
   127b4:	mov	w1, #0x2                   	// #2
   127b8:	str	w1, [x0]
   127bc:	ldrb	w0, [sp, #31]
   127c0:	and	w1, w0, #0xf
   127c4:	ldr	x0, [sp, #16]
   127c8:	str	w1, [x0]
   127cc:	mov	w0, #0x1                   	// #1
   127d0:	b	1280c <grub_context_fini+0x1fc>
   127d4:	ldrb	w0, [sp, #31]
   127d8:	and	w0, w0, #0xf8
   127dc:	cmp	w0, #0xf0
   127e0:	b.ne	12808 <grub_context_fini+0x1f8>  // b.any
   127e4:	ldr	x0, [sp, #8]
   127e8:	mov	w1, #0x3                   	// #3
   127ec:	str	w1, [x0]
   127f0:	ldrb	w0, [sp, #31]
   127f4:	and	w1, w0, #0x7
   127f8:	ldr	x0, [sp, #16]
   127fc:	str	w1, [x0]
   12800:	mov	w0, #0x1                   	// #1
   12804:	b	1280c <grub_context_fini+0x1fc>
   12808:	mov	w0, #0x0                   	// #0
   1280c:	add	sp, sp, #0x20
   12810:	ret
   12814:	stp	x29, x30, [sp, #-48]!
   12818:	mov	x29, sp
   1281c:	str	x0, [sp, #40]
   12820:	str	x1, [sp, #32]
   12824:	str	x2, [sp, #24]
   12828:	ldr	x2, [sp, #24]
   1282c:	ldr	x1, [sp, #32]
   12830:	ldr	x0, [sp, #40]
   12834:	bl	0 <grub_memmove>
   12838:	ldp	x29, x30, [sp], #48
   1283c:	ret
   12840:	sub	sp, sp, #0x10
   12844:	str	w0, [sp, #12]
   12848:	ldr	w0, [sp, #12]
   1284c:	cmp	w0, #0x0
   12850:	b.lt	12860 <grub_context_fini+0x250>  // b.tstop
   12854:	ldr	w0, [sp, #12]
   12858:	cmp	w0, #0x1f
   1285c:	b.le	1286c <grub_context_fini+0x25c>
   12860:	ldr	w0, [sp, #12]
   12864:	cmp	w0, #0x7f
   12868:	b.ne	12874 <grub_context_fini+0x264>  // b.any
   1286c:	mov	w0, #0x1                   	// #1
   12870:	b	12878 <grub_context_fini+0x268>
   12874:	mov	w0, #0x0                   	// #0
   12878:	add	sp, sp, #0x10
   1287c:	ret

0000000000012880 <grub_encode_utf8_character>:
   12880:	sub	sp, sp, #0x20
   12884:	str	x0, [sp, #24]
   12888:	str	x1, [sp, #16]
   1288c:	str	w2, [sp, #12]
   12890:	ldr	x1, [sp, #24]
   12894:	ldr	x0, [sp, #16]
   12898:	cmp	x1, x0
   1289c:	b.cc	128a8 <grub_encode_utf8_character+0x28>  // b.lo, b.ul, b.last
   128a0:	mov	x0, #0xfffffffffffffffe    	// #-2
   128a4:	b	12b08 <grub_encode_utf8_character+0x288>
   128a8:	ldr	w0, [sp, #12]
   128ac:	cmp	w0, #0x7f
   128b0:	b.hi	128d4 <grub_encode_utf8_character+0x54>  // b.pmore
   128b4:	ldr	x0, [sp, #24]
   128b8:	add	x1, x0, #0x1
   128bc:	str	x1, [sp, #24]
   128c0:	ldr	w1, [sp, #12]
   128c4:	and	w1, w1, #0xff
   128c8:	strb	w1, [x0]
   128cc:	mov	x0, #0x1                   	// #1
   128d0:	b	12b08 <grub_encode_utf8_character+0x288>
   128d4:	ldr	w0, [sp, #12]
   128d8:	cmp	w0, #0x7ff
   128dc:	b.hi	12950 <grub_encode_utf8_character+0xd0>  // b.pmore
   128e0:	ldr	x0, [sp, #24]
   128e4:	add	x0, x0, #0x1
   128e8:	ldr	x1, [sp, #16]
   128ec:	cmp	x1, x0
   128f0:	b.hi	128fc <grub_encode_utf8_character+0x7c>  // b.pmore
   128f4:	mov	x0, #0xfffffffffffffffe    	// #-2
   128f8:	b	12b08 <grub_encode_utf8_character+0x288>
   128fc:	ldr	w0, [sp, #12]
   12900:	lsr	w0, w0, #6
   12904:	and	w1, w0, #0xff
   12908:	ldr	x0, [sp, #24]
   1290c:	add	x2, x0, #0x1
   12910:	str	x2, [sp, #24]
   12914:	orr	w1, w1, #0xffffffc0
   12918:	and	w1, w1, #0xff
   1291c:	strb	w1, [x0]
   12920:	ldr	w0, [sp, #12]
   12924:	and	w0, w0, #0xff
   12928:	and	w0, w0, #0x3f
   1292c:	and	w1, w0, #0xff
   12930:	ldr	x0, [sp, #24]
   12934:	add	x2, x0, #0x1
   12938:	str	x2, [sp, #24]
   1293c:	orr	w1, w1, #0xffffff80
   12940:	and	w1, w1, #0xff
   12944:	strb	w1, [x0]
   12948:	mov	x0, #0x2                   	// #2
   1294c:	b	12b08 <grub_encode_utf8_character+0x288>
   12950:	ldr	w1, [sp, #12]
   12954:	mov	w0, #0xdbff                	// #56319
   12958:	cmp	w1, w0
   1295c:	b.ls	12970 <grub_encode_utf8_character+0xf0>  // b.plast
   12960:	ldr	w1, [sp, #12]
   12964:	mov	w0, #0xdfff                	// #57343
   12968:	cmp	w1, w0
   1296c:	b.ls	12990 <grub_encode_utf8_character+0x110>  // b.plast
   12970:	ldr	w1, [sp, #12]
   12974:	mov	w0, #0xd7ff                	// #55295
   12978:	cmp	w1, w0
   1297c:	b.ls	12998 <grub_encode_utf8_character+0x118>  // b.plast
   12980:	ldr	w1, [sp, #12]
   12984:	mov	w0, #0xdbff                	// #56319
   12988:	cmp	w1, w0
   1298c:	b.hi	12998 <grub_encode_utf8_character+0x118>  // b.pmore
   12990:	mov	x0, #0xffffffffffffffff    	// #-1
   12994:	b	12b08 <grub_encode_utf8_character+0x288>
   12998:	ldr	w1, [sp, #12]
   1299c:	mov	w0, #0xffff                	// #65535
   129a0:	cmp	w1, w0
   129a4:	b.hi	12a44 <grub_encode_utf8_character+0x1c4>  // b.pmore
   129a8:	ldr	x0, [sp, #24]
   129ac:	add	x0, x0, #0x2
   129b0:	ldr	x1, [sp, #16]
   129b4:	cmp	x1, x0
   129b8:	b.hi	129c4 <grub_encode_utf8_character+0x144>  // b.pmore
   129bc:	mov	x0, #0xfffffffffffffffe    	// #-2
   129c0:	b	12b08 <grub_encode_utf8_character+0x288>
   129c4:	ldr	w0, [sp, #12]
   129c8:	lsr	w0, w0, #12
   129cc:	and	w1, w0, #0xff
   129d0:	ldr	x0, [sp, #24]
   129d4:	add	x2, x0, #0x1
   129d8:	str	x2, [sp, #24]
   129dc:	orr	w1, w1, #0xffffffe0
   129e0:	and	w1, w1, #0xff
   129e4:	strb	w1, [x0]
   129e8:	ldr	w0, [sp, #12]
   129ec:	lsr	w0, w0, #6
   129f0:	and	w0, w0, #0xff
   129f4:	and	w0, w0, #0x3f
   129f8:	and	w1, w0, #0xff
   129fc:	ldr	x0, [sp, #24]
   12a00:	add	x2, x0, #0x1
   12a04:	str	x2, [sp, #24]
   12a08:	orr	w1, w1, #0xffffff80
   12a0c:	and	w1, w1, #0xff
   12a10:	strb	w1, [x0]
   12a14:	ldr	w0, [sp, #12]
   12a18:	and	w0, w0, #0xff
   12a1c:	and	w0, w0, #0x3f
   12a20:	and	w1, w0, #0xff
   12a24:	ldr	x0, [sp, #24]
   12a28:	add	x2, x0, #0x1
   12a2c:	str	x2, [sp, #24]
   12a30:	orr	w1, w1, #0xffffff80
   12a34:	and	w1, w1, #0xff
   12a38:	strb	w1, [x0]
   12a3c:	mov	x0, #0x3                   	// #3
   12a40:	b	12b08 <grub_encode_utf8_character+0x288>
   12a44:	ldr	x0, [sp, #24]
   12a48:	add	x0, x0, #0x3
   12a4c:	ldr	x1, [sp, #16]
   12a50:	cmp	x1, x0
   12a54:	b.hi	12a60 <grub_encode_utf8_character+0x1e0>  // b.pmore
   12a58:	mov	x0, #0xfffffffffffffffe    	// #-2
   12a5c:	b	12b08 <grub_encode_utf8_character+0x288>
   12a60:	ldr	w0, [sp, #12]
   12a64:	lsr	w0, w0, #18
   12a68:	and	w1, w0, #0xff
   12a6c:	ldr	x0, [sp, #24]
   12a70:	add	x2, x0, #0x1
   12a74:	str	x2, [sp, #24]
   12a78:	orr	w1, w1, #0xfffffff0
   12a7c:	and	w1, w1, #0xff
   12a80:	strb	w1, [x0]
   12a84:	ldr	w0, [sp, #12]
   12a88:	lsr	w0, w0, #12
   12a8c:	and	w0, w0, #0xff
   12a90:	and	w0, w0, #0x3f
   12a94:	and	w1, w0, #0xff
   12a98:	ldr	x0, [sp, #24]
   12a9c:	add	x2, x0, #0x1
   12aa0:	str	x2, [sp, #24]
   12aa4:	orr	w1, w1, #0xffffff80
   12aa8:	and	w1, w1, #0xff
   12aac:	strb	w1, [x0]
   12ab0:	ldr	w0, [sp, #12]
   12ab4:	lsr	w0, w0, #6
   12ab8:	and	w0, w0, #0xff
   12abc:	and	w0, w0, #0x3f
   12ac0:	and	w1, w0, #0xff
   12ac4:	ldr	x0, [sp, #24]
   12ac8:	add	x2, x0, #0x1
   12acc:	str	x2, [sp, #24]
   12ad0:	orr	w1, w1, #0xffffff80
   12ad4:	and	w1, w1, #0xff
   12ad8:	strb	w1, [x0]
   12adc:	ldr	w0, [sp, #12]
   12ae0:	and	w0, w0, #0xff
   12ae4:	and	w0, w0, #0x3f
   12ae8:	and	w1, w0, #0xff
   12aec:	ldr	x0, [sp, #24]
   12af0:	add	x2, x0, #0x1
   12af4:	str	x2, [sp, #24]
   12af8:	orr	w1, w1, #0xffffff80
   12afc:	and	w1, w1, #0xff
   12b00:	strb	w1, [x0]
   12b04:	mov	x0, #0x4                   	// #4
   12b08:	add	sp, sp, #0x20
   12b0c:	ret

0000000000012b10 <grub_ucs4_to_utf8>:
   12b10:	stp	x29, x30, [sp, #-80]!
   12b14:	mov	x29, sp
   12b18:	str	x0, [sp, #40]
   12b1c:	str	x1, [sp, #32]
   12b20:	str	x2, [sp, #24]
   12b24:	str	x3, [sp, #16]
   12b28:	ldr	x0, [sp, #16]
   12b2c:	sub	x0, x0, #0x1
   12b30:	ldr	x1, [sp, #24]
   12b34:	add	x0, x1, x0
   12b38:	str	x0, [sp, #72]
   12b3c:	ldr	x0, [sp, #24]
   12b40:	str	x0, [sp, #64]
   12b44:	b	12bb0 <grub_ucs4_to_utf8+0xa0>
   12b48:	ldr	x0, [sp, #40]
   12b4c:	add	x1, x0, #0x4
   12b50:	str	x1, [sp, #40]
   12b54:	ldr	w0, [x0]
   12b58:	str	w0, [sp, #60]
   12b5c:	ldr	w2, [sp, #60]
   12b60:	ldr	x1, [sp, #72]
   12b64:	ldr	x0, [sp, #24]
   12b68:	bl	12880 <grub_encode_utf8_character>
   12b6c:	str	x0, [sp, #48]
   12b70:	ldr	x0, [sp, #48]
   12b74:	cmn	x0, #0x2
   12b78:	b.eq	12bd8 <grub_ucs4_to_utf8+0xc8>  // b.none
   12b7c:	ldr	x0, [sp, #48]
   12b80:	cmn	x0, #0x1
   12b84:	b.ne	12ba0 <grub_ucs4_to_utf8+0x90>  // b.any
   12b88:	ldr	x0, [sp, #24]
   12b8c:	add	x1, x0, #0x1
   12b90:	str	x1, [sp, #24]
   12b94:	mov	w1, #0x3f                  	// #63
   12b98:	strb	w1, [x0]
   12b9c:	b	12bb0 <grub_ucs4_to_utf8+0xa0>
   12ba0:	ldr	x0, [sp, #48]
   12ba4:	ldr	x1, [sp, #24]
   12ba8:	add	x0, x1, x0
   12bac:	str	x0, [sp, #24]
   12bb0:	ldr	x0, [sp, #32]
   12bb4:	sub	x1, x0, #0x1
   12bb8:	str	x1, [sp, #32]
   12bbc:	cmp	x0, #0x0
   12bc0:	b.eq	12bdc <grub_ucs4_to_utf8+0xcc>  // b.none
   12bc4:	ldr	x1, [sp, #24]
   12bc8:	ldr	x0, [sp, #72]
   12bcc:	cmp	x1, x0
   12bd0:	b.cc	12b48 <grub_ucs4_to_utf8+0x38>  // b.lo, b.ul, b.last
   12bd4:	b	12bdc <grub_ucs4_to_utf8+0xcc>
   12bd8:	nop
   12bdc:	ldr	x0, [sp, #24]
   12be0:	strb	wzr, [x0]
   12be4:	ldr	x1, [sp, #24]
   12be8:	ldr	x0, [sp, #64]
   12bec:	sub	x0, x1, x0
   12bf0:	ldp	x29, x30, [sp], #80
   12bf4:	ret

0000000000012bf8 <grub_get_num_of_utf8_bytes>:
   12bf8:	sub	sp, sp, #0x30
   12bfc:	str	x0, [sp, #8]
   12c00:	str	x1, [sp]
   12c04:	str	xzr, [sp, #24]
   12c08:	ldr	x0, [sp]
   12c0c:	str	x0, [sp, #40]
   12c10:	ldr	x0, [sp, #8]
   12c14:	str	x0, [sp, #32]
   12c18:	b	12ce4 <grub_get_num_of_utf8_bytes+0xec>
   12c1c:	ldr	x0, [sp, #32]
   12c20:	add	x1, x0, #0x4
   12c24:	str	x1, [sp, #32]
   12c28:	ldr	w0, [x0]
   12c2c:	str	w0, [sp, #20]
   12c30:	ldr	w0, [sp, #20]
   12c34:	cmp	w0, #0x7f
   12c38:	b.hi	12c4c <grub_get_num_of_utf8_bytes+0x54>  // b.pmore
   12c3c:	ldr	x0, [sp, #24]
   12c40:	add	x0, x0, #0x1
   12c44:	str	x0, [sp, #24]
   12c48:	b	12ce4 <grub_get_num_of_utf8_bytes+0xec>
   12c4c:	ldr	w0, [sp, #20]
   12c50:	cmp	w0, #0x7ff
   12c54:	b.hi	12c68 <grub_get_num_of_utf8_bytes+0x70>  // b.pmore
   12c58:	ldr	x0, [sp, #24]
   12c5c:	add	x0, x0, #0x2
   12c60:	str	x0, [sp, #24]
   12c64:	b	12ce4 <grub_get_num_of_utf8_bytes+0xec>
   12c68:	ldr	w1, [sp, #20]
   12c6c:	mov	w0, #0xdbff                	// #56319
   12c70:	cmp	w1, w0
   12c74:	b.ls	12c88 <grub_get_num_of_utf8_bytes+0x90>  // b.plast
   12c78:	ldr	w1, [sp, #20]
   12c7c:	mov	w0, #0xdfff                	// #57343
   12c80:	cmp	w1, w0
   12c84:	b.ls	12ca8 <grub_get_num_of_utf8_bytes+0xb0>  // b.plast
   12c88:	ldr	w1, [sp, #20]
   12c8c:	mov	w0, #0xd7ff                	// #55295
   12c90:	cmp	w1, w0
   12c94:	b.ls	12cb8 <grub_get_num_of_utf8_bytes+0xc0>  // b.plast
   12c98:	ldr	w1, [sp, #20]
   12c9c:	mov	w0, #0xdbff                	// #56319
   12ca0:	cmp	w1, w0
   12ca4:	b.hi	12cb8 <grub_get_num_of_utf8_bytes+0xc0>  // b.pmore
   12ca8:	ldr	x0, [sp, #24]
   12cac:	add	x0, x0, #0x1
   12cb0:	str	x0, [sp, #24]
   12cb4:	b	12ce4 <grub_get_num_of_utf8_bytes+0xec>
   12cb8:	ldr	w1, [sp, #20]
   12cbc:	mov	w0, #0xffff                	// #65535
   12cc0:	cmp	w1, w0
   12cc4:	b.hi	12cd8 <grub_get_num_of_utf8_bytes+0xe0>  // b.pmore
   12cc8:	ldr	x0, [sp, #24]
   12ccc:	add	x0, x0, #0x3
   12cd0:	str	x0, [sp, #24]
   12cd4:	b	12ce4 <grub_get_num_of_utf8_bytes+0xec>
   12cd8:	ldr	x0, [sp, #24]
   12cdc:	add	x0, x0, #0x4
   12ce0:	str	x0, [sp, #24]
   12ce4:	ldr	x0, [sp, #40]
   12ce8:	sub	x1, x0, #0x1
   12cec:	str	x1, [sp, #40]
   12cf0:	cmp	x0, #0x0
   12cf4:	b.ne	12c1c <grub_get_num_of_utf8_bytes+0x24>  // b.any
   12cf8:	ldr	x0, [sp, #24]
   12cfc:	add	sp, sp, #0x30
   12d00:	ret

0000000000012d04 <grub_ucs4_to_utf8_alloc>:
   12d04:	stp	x29, x30, [sp, #-48]!
   12d08:	mov	x29, sp
   12d0c:	str	x0, [sp, #24]
   12d10:	str	x1, [sp, #16]
   12d14:	ldr	x1, [sp, #16]
   12d18:	ldr	x0, [sp, #24]
   12d1c:	bl	12bf8 <grub_get_num_of_utf8_bytes>
   12d20:	add	x0, x0, #0x1
   12d24:	str	x0, [sp, #40]
   12d28:	ldr	x0, [sp, #40]
   12d2c:	bl	0 <grub_malloc>
   12d30:	str	x0, [sp, #32]
   12d34:	ldr	x0, [sp, #32]
   12d38:	cmp	x0, #0x0
   12d3c:	b.ne	12d48 <grub_ucs4_to_utf8_alloc+0x44>  // b.any
   12d40:	mov	x0, #0x0                   	// #0
   12d44:	b	12d60 <grub_ucs4_to_utf8_alloc+0x5c>
   12d48:	ldr	x3, [sp, #40]
   12d4c:	ldr	x2, [sp, #32]
   12d50:	ldr	x1, [sp, #16]
   12d54:	ldr	x0, [sp, #24]
   12d58:	bl	12b10 <grub_ucs4_to_utf8>
   12d5c:	ldr	x0, [sp, #32]
   12d60:	ldp	x29, x30, [sp], #48
   12d64:	ret

0000000000012d68 <grub_is_valid_utf8>:
   12d68:	stp	x29, x30, [sp, #-48]!
   12d6c:	mov	x29, sp
   12d70:	str	x0, [sp, #24]
   12d74:	str	x1, [sp, #16]
   12d78:	str	wzr, [sp, #44]
   12d7c:	str	wzr, [sp, #40]
   12d80:	b	12e10 <grub_is_valid_utf8+0xa8>
   12d84:	ldr	x0, [sp, #16]
   12d88:	cmn	x0, #0x1
   12d8c:	b.eq	12d9c <grub_is_valid_utf8+0x34>  // b.none
   12d90:	ldr	x0, [sp, #16]
   12d94:	sub	x0, x0, #0x1
   12d98:	str	x0, [sp, #16]
   12d9c:	ldr	x0, [sp, #24]
   12da0:	add	x1, x0, #0x1
   12da4:	str	x1, [sp, #24]
   12da8:	ldrb	w3, [x0]
   12dac:	add	x1, sp, #0x2c
   12db0:	add	x0, sp, #0x28
   12db4:	mov	x2, x1
   12db8:	mov	x1, x0
   12dbc:	mov	w0, w3
   12dc0:	bl	12640 <grub_context_fini+0x30>
   12dc4:	cmp	w0, #0x0
   12dc8:	b.ne	12dd4 <grub_is_valid_utf8+0x6c>  // b.any
   12dcc:	mov	w0, #0x0                   	// #0
   12dd0:	b	12e20 <grub_is_valid_utf8+0xb8>
   12dd4:	ldr	w0, [sp, #44]
   12dd8:	cmp	w0, #0x0
   12ddc:	b.eq	12de4 <grub_is_valid_utf8+0x7c>  // b.none
   12de0:	b	12e10 <grub_is_valid_utf8+0xa8>
   12de4:	ldr	w0, [sp, #40]
   12de8:	cmp	w0, #0x0
   12dec:	b.ne	12df8 <grub_is_valid_utf8+0x90>  // b.any
   12df0:	mov	w0, #0x1                   	// #1
   12df4:	b	12e20 <grub_is_valid_utf8+0xb8>
   12df8:	ldr	w1, [sp, #40]
   12dfc:	mov	w0, #0x10ffff              	// #1114111
   12e00:	cmp	w1, w0
   12e04:	b.ls	12e10 <grub_is_valid_utf8+0xa8>  // b.plast
   12e08:	mov	w0, #0x0                   	// #0
   12e0c:	b	12e20 <grub_is_valid_utf8+0xb8>
   12e10:	ldr	x0, [sp, #16]
   12e14:	cmp	x0, #0x0
   12e18:	b.ne	12d84 <grub_is_valid_utf8+0x1c>  // b.any
   12e1c:	mov	w0, #0x1                   	// #1
   12e20:	ldp	x29, x30, [sp], #48
   12e24:	ret

0000000000012e28 <grub_utf8_to_ucs4_alloc>:
   12e28:	stp	x29, x30, [sp, #-64]!
   12e2c:	mov	x29, sp
   12e30:	str	x0, [sp, #40]
   12e34:	str	x1, [sp, #32]
   12e38:	str	x2, [sp, #24]
   12e3c:	ldr	x0, [sp, #40]
   12e40:	bl	0 <grub_strlen>
   12e44:	str	x0, [sp, #56]
   12e48:	ldr	x0, [sp, #56]
   12e4c:	lsl	x0, x0, #2
   12e50:	bl	0 <grub_malloc>
   12e54:	mov	x1, x0
   12e58:	ldr	x0, [sp, #32]
   12e5c:	str	x1, [x0]
   12e60:	ldr	x0, [sp, #32]
   12e64:	ldr	x0, [x0]
   12e68:	cmp	x0, #0x0
   12e6c:	b.ne	12e78 <grub_utf8_to_ucs4_alloc+0x50>  // b.any
   12e70:	mov	x0, #0xffffffffffffffff    	// #-1
   12e74:	b	12ec4 <grub_utf8_to_ucs4_alloc+0x9c>
   12e78:	ldr	x0, [sp, #32]
   12e7c:	ldr	x0, [x0]
   12e80:	mov	x4, #0x0                   	// #0
   12e84:	mov	x3, #0xffffffffffffffff    	// #-1
   12e88:	ldr	x2, [sp, #40]
   12e8c:	ldr	x1, [sp, #56]
   12e90:	bl	12ecc <grub_utf8_to_ucs4>
   12e94:	str	x0, [sp, #56]
   12e98:	ldr	x0, [sp, #24]
   12e9c:	cmp	x0, #0x0
   12ea0:	b.eq	12ec0 <grub_utf8_to_ucs4_alloc+0x98>  // b.none
   12ea4:	ldr	x0, [sp, #32]
   12ea8:	ldr	x1, [x0]
   12eac:	ldr	x0, [sp, #56]
   12eb0:	lsl	x0, x0, #2
   12eb4:	add	x1, x1, x0
   12eb8:	ldr	x0, [sp, #24]
   12ebc:	str	x1, [x0]
   12ec0:	ldr	x0, [sp, #56]
   12ec4:	ldp	x29, x30, [sp], #64
   12ec8:	ret

0000000000012ecc <grub_utf8_to_ucs4>:
   12ecc:	stp	x29, x30, [sp, #-96]!
   12ed0:	mov	x29, sp
   12ed4:	str	x0, [sp, #56]
   12ed8:	str	x1, [sp, #48]
   12edc:	str	x2, [sp, #40]
   12ee0:	str	x3, [sp, #32]
   12ee4:	str	x4, [sp, #24]
   12ee8:	ldr	x0, [sp, #56]
   12eec:	str	x0, [sp, #88]
   12ef0:	str	wzr, [sp, #80]
   12ef4:	str	wzr, [sp, #76]
   12ef8:	ldr	x0, [sp, #24]
   12efc:	cmp	x0, #0x0
   12f00:	b.eq	12fc4 <grub_utf8_to_ucs4+0xf8>  // b.none
   12f04:	ldr	x0, [sp, #24]
   12f08:	ldr	x1, [sp, #40]
   12f0c:	str	x1, [x0]
   12f10:	b	12fc4 <grub_utf8_to_ucs4+0xf8>
   12f14:	ldr	w0, [sp, #80]
   12f18:	str	w0, [sp, #84]
   12f1c:	ldr	x0, [sp, #32]
   12f20:	cmn	x0, #0x1
   12f24:	b.eq	12f34 <grub_utf8_to_ucs4+0x68>  // b.none
   12f28:	ldr	x0, [sp, #32]
   12f2c:	sub	x0, x0, #0x1
   12f30:	str	x0, [sp, #32]
   12f34:	ldr	x0, [sp, #40]
   12f38:	add	x1, x0, #0x1
   12f3c:	str	x1, [sp, #40]
   12f40:	ldrb	w3, [x0]
   12f44:	add	x1, sp, #0x50
   12f48:	add	x0, sp, #0x4c
   12f4c:	mov	x2, x1
   12f50:	mov	x1, x0
   12f54:	mov	w0, w3
   12f58:	bl	12640 <grub_context_fini+0x30>
   12f5c:	cmp	w0, #0x0
   12f60:	b.ne	12f88 <grub_utf8_to_ucs4+0xbc>  // b.any
   12f64:	mov	w0, #0x3f                  	// #63
   12f68:	str	w0, [sp, #76]
   12f6c:	str	wzr, [sp, #80]
   12f70:	ldr	w0, [sp, #84]
   12f74:	cmp	w0, #0x0
   12f78:	b.eq	12f88 <grub_utf8_to_ucs4+0xbc>  // b.none
   12f7c:	ldr	x0, [sp, #40]
   12f80:	sub	x0, x0, #0x1
   12f84:	str	x0, [sp, #40]
   12f88:	ldr	w0, [sp, #80]
   12f8c:	cmp	w0, #0x0
   12f90:	b.eq	12f98 <grub_utf8_to_ucs4+0xcc>  // b.none
   12f94:	b	12fc4 <grub_utf8_to_ucs4+0xf8>
   12f98:	ldr	w0, [sp, #76]
   12f9c:	cmp	w0, #0x0
   12fa0:	b.eq	12fe0 <grub_utf8_to_ucs4+0x114>  // b.none
   12fa4:	ldr	x0, [sp, #88]
   12fa8:	add	x1, x0, #0x4
   12fac:	str	x1, [sp, #88]
   12fb0:	ldr	w1, [sp, #76]
   12fb4:	str	w1, [x0]
   12fb8:	ldr	x0, [sp, #48]
   12fbc:	sub	x0, x0, #0x1
   12fc0:	str	x0, [sp, #48]
   12fc4:	ldr	x0, [sp, #32]
   12fc8:	cmp	x0, #0x0
   12fcc:	b.eq	12fe4 <grub_utf8_to_ucs4+0x118>  // b.none
   12fd0:	ldr	x0, [sp, #48]
   12fd4:	cmp	x0, #0x0
   12fd8:	b.ne	12f14 <grub_utf8_to_ucs4+0x48>  // b.any
   12fdc:	b	12fe4 <grub_utf8_to_ucs4+0x118>
   12fe0:	nop
   12fe4:	ldr	x0, [sp, #24]
   12fe8:	cmp	x0, #0x0
   12fec:	b.eq	12ffc <grub_utf8_to_ucs4+0x130>  // b.none
   12ff0:	ldr	x0, [sp, #24]
   12ff4:	ldr	x1, [sp, #40]
   12ff8:	str	x1, [x0]
   12ffc:	ldr	x1, [sp, #88]
   13000:	ldr	x0, [sp, #56]
   13004:	sub	x0, x1, x0
   13008:	asr	x0, x0, #2
   1300c:	ldp	x29, x30, [sp], #96
   13010:	ret
   13014:	stp	x29, x30, [sp, #-32]!
   13018:	mov	x29, sp
   1301c:	mov	x0, #0x20000               	// #131072
   13020:	bl	0 <grub_zalloc>
   13024:	mov	x1, x0
   13028:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1302c:	add	x0, x0, #0x0
   13030:	ldr	x0, [x0]
   13034:	str	x1, [x0]
   13038:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1303c:	add	x0, x0, #0x0
   13040:	ldr	x0, [x0]
   13044:	ldr	x0, [x0]
   13048:	cmp	x0, #0x0
   1304c:	b.ne	13064 <grub_utf8_to_ucs4+0x198>  // b.any
   13050:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13054:	add	x0, x0, #0x0
   13058:	ldr	x0, [x0]
   1305c:	str	wzr, [x0]
   13060:	b	1315c <grub_utf8_to_ucs4+0x290>
   13064:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13068:	add	x0, x0, #0x0
   1306c:	ldr	x0, [x0]
   13070:	str	x0, [sp, #16]
   13074:	b	13144 <grub_utf8_to_ucs4+0x278>
   13078:	ldr	x0, [sp, #16]
   1307c:	ldrb	w1, [x0]
   13080:	ldrb	w2, [x0, #1]
   13084:	lsl	x2, x2, #8
   13088:	orr	x1, x2, x1
   1308c:	ldrb	w0, [x0, #2]
   13090:	and	x0, x0, #0x1f
   13094:	lsl	x0, x0, #16
   13098:	orr	x0, x0, x1
   1309c:	str	w0, [sp, #28]
   130a0:	b	130e0 <grub_utf8_to_ucs4+0x214>
   130a4:	ldr	x0, [sp, #16]
   130a8:	ldrb	w0, [x0, #5]
   130ac:	ubfx	x0, x0, #4, #3
   130b0:	and	w2, w0, #0xff
   130b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   130b8:	add	x0, x0, #0x0
   130bc:	ldr	x0, [x0]
   130c0:	ldr	x1, [x0]
   130c4:	ldr	w0, [sp, #28]
   130c8:	add	x0, x1, x0
   130cc:	mov	w1, w2
   130d0:	strb	w1, [x0]
   130d4:	ldr	w0, [sp, #28]
   130d8:	add	w0, w0, #0x1
   130dc:	str	w0, [sp, #28]
   130e0:	ldr	x0, [sp, #16]
   130e4:	ldrb	w1, [x0]
   130e8:	ldrb	w2, [x0, #1]
   130ec:	lsl	x2, x2, #8
   130f0:	orr	x1, x2, x1
   130f4:	ldrb	w0, [x0, #2]
   130f8:	and	x0, x0, #0x1f
   130fc:	lsl	x0, x0, #16
   13100:	orr	x0, x0, x1
   13104:	mov	w1, w0
   13108:	ldr	x0, [sp, #16]
   1310c:	ldrh	w0, [x0, #2]
   13110:	ubfx	x0, x0, #5, #9
   13114:	and	w0, w0, #0xffff
   13118:	add	w0, w1, w0
   1311c:	ldr	w1, [sp, #28]
   13120:	cmp	w1, w0
   13124:	b.cs	13138 <grub_utf8_to_ucs4+0x26c>  // b.hs, b.nlast
   13128:	ldr	w1, [sp, #28]
   1312c:	mov	w0, #0x1ffff               	// #131071
   13130:	cmp	w1, w0
   13134:	b.ls	130a4 <grub_utf8_to_ucs4+0x1d8>  // b.plast
   13138:	ldr	x0, [sp, #16]
   1313c:	add	x0, x0, #0x6
   13140:	str	x0, [sp, #16]
   13144:	ldr	x0, [sp, #16]
   13148:	ldrh	w0, [x0, #2]
   1314c:	ubfx	x0, x0, #5, #9
   13150:	and	w0, w0, #0xffff
   13154:	cmp	w0, #0x0
   13158:	b.ne	13078 <grub_utf8_to_ucs4+0x1ac>  // b.any
   1315c:	ldp	x29, x30, [sp], #32
   13160:	ret
   13164:	nop
	...
   13180:	stp	x29, x30, [sp, #-32]!
   13184:	mov	x29, sp
   13188:	mov	x0, #0x20000               	// #131072
   1318c:	bl	0 <grub_zalloc>
   13190:	mov	x1, x0
   13194:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13198:	add	x0, x0, #0x0
   1319c:	ldr	x0, [x0]
   131a0:	str	x1, [x0]
   131a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   131a8:	add	x0, x0, #0x0
   131ac:	ldr	x0, [x0]
   131b0:	ldr	x0, [x0]
   131b4:	cmp	x0, #0x0
   131b8:	b.ne	131d0 <grub_utf8_to_ucs4+0x304>  // b.any
   131bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   131c0:	add	x0, x0, #0x0
   131c4:	ldr	x0, [x0]
   131c8:	str	wzr, [x0]
   131cc:	b	13348 <grub_utf8_to_ucs4+0x47c>
   131d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   131d4:	add	x0, x0, #0x0
   131d8:	ldr	x0, [x0]
   131dc:	str	x0, [sp, #16]
   131e0:	b	13330 <grub_utf8_to_ucs4+0x464>
   131e4:	ldr	x0, [sp, #16]
   131e8:	ldrb	w1, [x0]
   131ec:	ldrb	w2, [x0, #1]
   131f0:	lsl	x2, x2, #8
   131f4:	orr	x1, x2, x1
   131f8:	ldrb	w0, [x0, #2]
   131fc:	and	x0, x0, #0x1f
   13200:	lsl	x0, x0, #16
   13204:	orr	x0, x0, x1
   13208:	str	w0, [sp, #28]
   1320c:	b	132cc <grub_utf8_to_ucs4+0x400>
   13210:	ldr	x0, [sp, #16]
   13214:	ldrb	w0, [x0, #5]
   13218:	and	w0, w0, #0x8
   1321c:	and	w0, w0, #0xff
   13220:	cmp	w0, #0x0
   13224:	b.eq	1327c <grub_utf8_to_ucs4+0x3b0>  // b.none
   13228:	ldr	x0, [sp, #16]
   1322c:	ldrb	w1, [x0, #3]
   13230:	lsr	w1, w1, #6
   13234:	and	x1, x1, #0xff
   13238:	ldrb	w0, [x0, #4]
   1323c:	and	x0, x0, #0x7
   13240:	lsl	x0, x0, #2
   13244:	orr	x0, x0, x1
   13248:	and	w0, w0, #0xff
   1324c:	sxtb	w0, w0
   13250:	orr	w0, w0, #0xffffff80
   13254:	sxtb	w2, w0
   13258:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1325c:	add	x0, x0, #0x0
   13260:	ldr	x0, [x0]
   13264:	ldr	x1, [x0]
   13268:	ldr	w0, [sp, #28]
   1326c:	add	x0, x1, x0
   13270:	and	w1, w2, #0xff
   13274:	strb	w1, [x0]
   13278:	b	132c0 <grub_utf8_to_ucs4+0x3f4>
   1327c:	ldr	x0, [sp, #16]
   13280:	ldrb	w1, [x0, #3]
   13284:	lsr	w1, w1, #6
   13288:	and	x1, x1, #0xff
   1328c:	ldrb	w0, [x0, #4]
   13290:	and	x0, x0, #0x7
   13294:	lsl	x0, x0, #2
   13298:	orr	x0, x0, x1
   1329c:	and	w2, w0, #0xff
   132a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   132a4:	add	x0, x0, #0x0
   132a8:	ldr	x0, [x0]
   132ac:	ldr	x1, [x0]
   132b0:	ldr	w0, [sp, #28]
   132b4:	add	x0, x1, x0
   132b8:	mov	w1, w2
   132bc:	strb	w1, [x0]
   132c0:	ldr	w0, [sp, #28]
   132c4:	add	w0, w0, #0x1
   132c8:	str	w0, [sp, #28]
   132cc:	ldr	x0, [sp, #16]
   132d0:	ldrb	w1, [x0]
   132d4:	ldrb	w2, [x0, #1]
   132d8:	lsl	x2, x2, #8
   132dc:	orr	x1, x2, x1
   132e0:	ldrb	w0, [x0, #2]
   132e4:	and	x0, x0, #0x1f
   132e8:	lsl	x0, x0, #16
   132ec:	orr	x0, x0, x1
   132f0:	mov	w1, w0
   132f4:	ldr	x0, [sp, #16]
   132f8:	ldrh	w0, [x0, #2]
   132fc:	ubfx	x0, x0, #5, #9
   13300:	and	w0, w0, #0xffff
   13304:	add	w0, w1, w0
   13308:	ldr	w1, [sp, #28]
   1330c:	cmp	w1, w0
   13310:	b.cs	13324 <grub_utf8_to_ucs4+0x458>  // b.hs, b.nlast
   13314:	ldr	w1, [sp, #28]
   13318:	mov	w0, #0x1ffff               	// #131071
   1331c:	cmp	w1, w0
   13320:	b.ls	13210 <grub_utf8_to_ucs4+0x344>  // b.plast
   13324:	ldr	x0, [sp, #16]
   13328:	add	x0, x0, #0x6
   1332c:	str	x0, [sp, #16]
   13330:	ldr	x0, [sp, #16]
   13334:	ldrh	w0, [x0, #2]
   13338:	ubfx	x0, x0, #5, #9
   1333c:	and	w0, w0, #0xffff
   13340:	cmp	w0, #0x0
   13344:	b.ne	131e4 <grub_utf8_to_ucs4+0x318>  // b.any
   13348:	ldp	x29, x30, [sp], #32
   1334c:	ret
	...
   13368:	stp	x29, x30, [sp, #-48]!
   1336c:	mov	x29, sp
   13370:	str	w0, [sp, #28]
   13374:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13378:	add	x0, x0, #0x0
   1337c:	ldr	x0, [x0]
   13380:	ldr	x0, [x0]
   13384:	cmp	x0, #0x0
   13388:	b.ne	13390 <grub_utf8_to_ucs4+0x4c4>  // b.any
   1338c:	bl	13180 <grub_utf8_to_ucs4+0x2b4>
   13390:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13394:	add	x0, x0, #0x0
   13398:	ldr	x0, [x0]
   1339c:	ldr	x0, [x0]
   133a0:	cmp	x0, #0x0
   133a4:	b.eq	133dc <grub_utf8_to_ucs4+0x510>  // b.none
   133a8:	ldr	w1, [sp, #28]
   133ac:	mov	w0, #0x1ffff               	// #131071
   133b0:	cmp	w1, w0
   133b4:	b.hi	133dc <grub_utf8_to_ucs4+0x510>  // b.pmore
   133b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   133bc:	add	x0, x0, #0x0
   133c0:	ldr	x0, [x0]
   133c4:	ldr	x1, [x0]
   133c8:	ldr	w0, [sp, #28]
   133cc:	add	x0, x1, x0
   133d0:	ldrb	w0, [x0]
   133d4:	and	w0, w0, #0x7f
   133d8:	b	134bc <grub_utf8_to_ucs4+0x5f0>
   133dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   133e0:	add	x0, x0, #0x0
   133e4:	ldr	x0, [x0]
   133e8:	str	x0, [sp, #40]
   133ec:	b	134a0 <grub_utf8_to_ucs4+0x5d4>
   133f0:	ldr	x0, [sp, #40]
   133f4:	ldrb	w1, [x0]
   133f8:	ldrb	w2, [x0, #1]
   133fc:	lsl	x2, x2, #8
   13400:	orr	x1, x2, x1
   13404:	ldrb	w0, [x0, #2]
   13408:	and	x0, x0, #0x1f
   1340c:	lsl	x0, x0, #16
   13410:	orr	x0, x0, x1
   13414:	mov	w1, w0
   13418:	ldr	w0, [sp, #28]
   1341c:	cmp	w0, w1
   13420:	b.cc	13494 <grub_utf8_to_ucs4+0x5c8>  // b.lo, b.ul, b.last
   13424:	ldr	x0, [sp, #40]
   13428:	ldrb	w1, [x0]
   1342c:	ldrb	w2, [x0, #1]
   13430:	lsl	x2, x2, #8
   13434:	orr	x1, x2, x1
   13438:	ldrb	w0, [x0, #2]
   1343c:	and	x0, x0, #0x1f
   13440:	lsl	x0, x0, #16
   13444:	orr	x0, x0, x1
   13448:	mov	w1, w0
   1344c:	ldr	x0, [sp, #40]
   13450:	ldrh	w0, [x0, #2]
   13454:	ubfx	x0, x0, #5, #9
   13458:	and	w0, w0, #0xffff
   1345c:	add	w0, w1, w0
   13460:	ldr	w1, [sp, #28]
   13464:	cmp	w1, w0
   13468:	b.cs	13494 <grub_utf8_to_ucs4+0x5c8>  // b.hs, b.nlast
   1346c:	ldr	x0, [sp, #40]
   13470:	ldrb	w1, [x0, #3]
   13474:	lsr	w1, w1, #6
   13478:	and	x1, x1, #0xff
   1347c:	ldrb	w0, [x0, #4]
   13480:	and	x0, x0, #0x7
   13484:	lsl	x0, x0, #2
   13488:	orr	x0, x0, x1
   1348c:	and	w0, w0, #0xff
   13490:	b	134bc <grub_utf8_to_ucs4+0x5f0>
   13494:	ldr	x0, [sp, #40]
   13498:	add	x0, x0, #0x6
   1349c:	str	x0, [sp, #40]
   134a0:	ldr	x0, [sp, #40]
   134a4:	ldrh	w0, [x0, #2]
   134a8:	ubfx	x0, x0, #5, #9
   134ac:	and	w0, w0, #0xffff
   134b0:	cmp	w0, #0x0
   134b4:	b.ne	133f0 <grub_utf8_to_ucs4+0x524>  // b.any
   134b8:	mov	w0, #0x0                   	// #0
   134bc:	ldp	x29, x30, [sp], #48
   134c0:	ret
   134c4:	nop
	...
   134d8:	stp	x29, x30, [sp, #-48]!
   134dc:	mov	x29, sp
   134e0:	str	w0, [sp, #28]
   134e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   134e8:	add	x0, x0, #0x0
   134ec:	ldr	x0, [x0]
   134f0:	ldr	x0, [x0]
   134f4:	cmp	x0, #0x0
   134f8:	b.ne	13500 <grub_utf8_to_ucs4+0x634>  // b.any
   134fc:	bl	13014 <grub_utf8_to_ucs4+0x148>
   13500:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13504:	add	x0, x0, #0x0
   13508:	ldr	x0, [x0]
   1350c:	ldr	x0, [x0]
   13510:	cmp	x0, #0x0
   13514:	b.eq	13548 <grub_utf8_to_ucs4+0x67c>  // b.none
   13518:	ldr	w1, [sp, #28]
   1351c:	mov	w0, #0x1ffff               	// #131071
   13520:	cmp	w1, w0
   13524:	b.hi	13548 <grub_utf8_to_ucs4+0x67c>  // b.pmore
   13528:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1352c:	add	x0, x0, #0x0
   13530:	ldr	x0, [x0]
   13534:	ldr	x1, [x0]
   13538:	ldr	w0, [sp, #28]
   1353c:	add	x0, x1, x0
   13540:	ldrb	w0, [x0]
   13544:	b	13614 <grub_utf8_to_ucs4+0x748>
   13548:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1354c:	add	x0, x0, #0x0
   13550:	ldr	x0, [x0]
   13554:	str	x0, [sp, #40]
   13558:	b	135f8 <grub_utf8_to_ucs4+0x72c>
   1355c:	ldr	x0, [sp, #40]
   13560:	ldrb	w1, [x0]
   13564:	ldrb	w2, [x0, #1]
   13568:	lsl	x2, x2, #8
   1356c:	orr	x1, x2, x1
   13570:	ldrb	w0, [x0, #2]
   13574:	and	x0, x0, #0x1f
   13578:	lsl	x0, x0, #16
   1357c:	orr	x0, x0, x1
   13580:	mov	w1, w0
   13584:	ldr	w0, [sp, #28]
   13588:	cmp	w0, w1
   1358c:	b.cc	135ec <grub_utf8_to_ucs4+0x720>  // b.lo, b.ul, b.last
   13590:	ldr	x0, [sp, #40]
   13594:	ldrb	w1, [x0]
   13598:	ldrb	w2, [x0, #1]
   1359c:	lsl	x2, x2, #8
   135a0:	orr	x1, x2, x1
   135a4:	ldrb	w0, [x0, #2]
   135a8:	and	x0, x0, #0x1f
   135ac:	lsl	x0, x0, #16
   135b0:	orr	x0, x0, x1
   135b4:	mov	w1, w0
   135b8:	ldr	x0, [sp, #40]
   135bc:	ldrh	w0, [x0, #2]
   135c0:	ubfx	x0, x0, #5, #9
   135c4:	and	w0, w0, #0xffff
   135c8:	add	w0, w1, w0
   135cc:	ldr	w1, [sp, #28]
   135d0:	cmp	w1, w0
   135d4:	b.cs	135ec <grub_utf8_to_ucs4+0x720>  // b.hs, b.nlast
   135d8:	ldr	x0, [sp, #40]
   135dc:	ldrb	w0, [x0, #5]
   135e0:	ubfx	x0, x0, #4, #3
   135e4:	and	w0, w0, #0xff
   135e8:	b	13614 <grub_utf8_to_ucs4+0x748>
   135ec:	ldr	x0, [sp, #40]
   135f0:	add	x0, x0, #0x6
   135f4:	str	x0, [sp, #40]
   135f8:	ldr	x0, [sp, #40]
   135fc:	ldrh	w0, [x0, #2]
   13600:	ubfx	x0, x0, #5, #9
   13604:	and	w0, w0, #0xffff
   13608:	cmp	w0, #0x0
   1360c:	b.ne	1355c <grub_utf8_to_ucs4+0x690>  // b.any
   13610:	mov	w0, #0x0                   	// #0
   13614:	ldp	x29, x30, [sp], #48
   13618:	ret
   1361c:	nop
	...
   13630:	stp	x29, x30, [sp, #-48]!
   13634:	mov	x29, sp
   13638:	str	w0, [sp, #28]
   1363c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13640:	add	x0, x0, #0x0
   13644:	ldr	x0, [x0]
   13648:	ldr	x0, [x0]
   1364c:	cmp	x0, #0x0
   13650:	b.ne	13658 <grub_utf8_to_ucs4+0x78c>  // b.any
   13654:	bl	13180 <grub_utf8_to_ucs4+0x2b4>
   13658:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1365c:	add	x0, x0, #0x0
   13660:	ldr	x0, [x0]
   13664:	ldr	x0, [x0]
   13668:	cmp	x0, #0x0
   1366c:	b.eq	136b0 <grub_utf8_to_ucs4+0x7e4>  // b.none
   13670:	ldr	w1, [sp, #28]
   13674:	mov	w0, #0x1ffff               	// #131071
   13678:	cmp	w1, w0
   1367c:	b.hi	136b0 <grub_utf8_to_ucs4+0x7e4>  // b.pmore
   13680:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13684:	add	x0, x0, #0x0
   13688:	ldr	x0, [x0]
   1368c:	ldr	x1, [x0]
   13690:	ldr	w0, [sp, #28]
   13694:	add	x0, x1, x0
   13698:	ldrb	w0, [x0]
   1369c:	sxtb	w0, w0
   136a0:	and	w0, w0, #0xff
   136a4:	lsr	w0, w0, #7
   136a8:	and	w0, w0, #0xff
   136ac:	b	1377c <grub_utf8_to_ucs4+0x8b0>
   136b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   136b4:	add	x0, x0, #0x0
   136b8:	ldr	x0, [x0]
   136bc:	str	x0, [sp, #40]
   136c0:	b	13760 <grub_utf8_to_ucs4+0x894>
   136c4:	ldr	x0, [sp, #40]
   136c8:	ldrb	w1, [x0]
   136cc:	ldrb	w2, [x0, #1]
   136d0:	lsl	x2, x2, #8
   136d4:	orr	x1, x2, x1
   136d8:	ldrb	w0, [x0, #2]
   136dc:	and	x0, x0, #0x1f
   136e0:	lsl	x0, x0, #16
   136e4:	orr	x0, x0, x1
   136e8:	mov	w1, w0
   136ec:	ldr	w0, [sp, #28]
   136f0:	cmp	w0, w1
   136f4:	b.cc	13754 <grub_utf8_to_ucs4+0x888>  // b.lo, b.ul, b.last
   136f8:	ldr	x0, [sp, #40]
   136fc:	ldrb	w1, [x0]
   13700:	ldrb	w2, [x0, #1]
   13704:	lsl	x2, x2, #8
   13708:	orr	x1, x2, x1
   1370c:	ldrb	w0, [x0, #2]
   13710:	and	x0, x0, #0x1f
   13714:	lsl	x0, x0, #16
   13718:	orr	x0, x0, x1
   1371c:	mov	w1, w0
   13720:	ldr	x0, [sp, #40]
   13724:	ldrh	w0, [x0, #2]
   13728:	ubfx	x0, x0, #5, #9
   1372c:	and	w0, w0, #0xffff
   13730:	add	w0, w1, w0
   13734:	ldr	w1, [sp, #28]
   13738:	cmp	w1, w0
   1373c:	b.cs	13754 <grub_utf8_to_ucs4+0x888>  // b.hs, b.nlast
   13740:	ldr	x0, [sp, #40]
   13744:	ldrb	w0, [x0, #5]
   13748:	ubfx	x0, x0, #3, #1
   1374c:	and	w0, w0, #0xff
   13750:	b	1377c <grub_utf8_to_ucs4+0x8b0>
   13754:	ldr	x0, [sp, #40]
   13758:	add	x0, x0, #0x6
   1375c:	str	x0, [sp, #40]
   13760:	ldr	x0, [sp, #40]
   13764:	ldrh	w0, [x0, #2]
   13768:	ubfx	x0, x0, #5, #9
   1376c:	and	w0, w0, #0xffff
   13770:	cmp	w0, #0x0
   13774:	b.ne	136c4 <grub_utf8_to_ucs4+0x7f8>  // b.any
   13778:	mov	w0, #0x0                   	// #0
   1377c:	ldp	x29, x30, [sp], #48
   13780:	ret
   13784:	nop
	...

0000000000013798 <grub_unicode_get_comb_type>:
   13798:	stp	x29, x30, [sp, #-48]!
   1379c:	mov	x29, sp
   137a0:	str	w0, [sp, #28]
   137a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   137a8:	add	x0, x0, #0x0
   137ac:	ldr	x0, [x0]
   137b0:	ldr	x0, [x0]
   137b4:	cmp	x0, #0x0
   137b8:	b.ne	138f8 <grub_unicode_get_comb_type+0x160>  // b.any
   137bc:	mov	x0, #0x20000               	// #131072
   137c0:	bl	0 <grub_zalloc>
   137c4:	mov	x1, x0
   137c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   137cc:	add	x0, x0, #0x0
   137d0:	ldr	x0, [x0]
   137d4:	str	x1, [x0]
   137d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   137dc:	add	x0, x0, #0x0
   137e0:	ldr	x0, [x0]
   137e4:	ldr	x0, [x0]
   137e8:	cmp	x0, #0x0
   137ec:	b.eq	138e8 <grub_unicode_get_comb_type+0x150>  // b.none
   137f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   137f4:	add	x0, x0, #0x0
   137f8:	ldr	x0, [x0]
   137fc:	str	x0, [sp, #40]
   13800:	b	138cc <grub_unicode_get_comb_type+0x134>
   13804:	ldr	x0, [sp, #40]
   13808:	ldrb	w1, [x0]
   1380c:	ldrb	w2, [x0, #1]
   13810:	lsl	x2, x2, #8
   13814:	orr	x1, x2, x1
   13818:	ldrb	w0, [x0, #2]
   1381c:	and	x0, x0, #0x1f
   13820:	lsl	x0, x0, #16
   13824:	orr	x0, x0, x1
   13828:	str	w0, [sp, #36]
   1382c:	b	13868 <grub_unicode_get_comb_type+0xd0>
   13830:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13834:	add	x0, x0, #0x0
   13838:	ldr	x0, [x0]
   1383c:	ldr	x1, [x0]
   13840:	ldr	w0, [sp, #36]
   13844:	add	x0, x1, x0
   13848:	ldr	x1, [sp, #40]
   1384c:	ldrh	w1, [x1, #4]
   13850:	ubfx	x1, x1, #3, #8
   13854:	and	w1, w1, #0xff
   13858:	strb	w1, [x0]
   1385c:	ldr	w0, [sp, #36]
   13860:	add	w0, w0, #0x1
   13864:	str	w0, [sp, #36]
   13868:	ldr	x0, [sp, #40]
   1386c:	ldrb	w1, [x0]
   13870:	ldrb	w2, [x0, #1]
   13874:	lsl	x2, x2, #8
   13878:	orr	x1, x2, x1
   1387c:	ldrb	w0, [x0, #2]
   13880:	and	x0, x0, #0x1f
   13884:	lsl	x0, x0, #16
   13888:	orr	x0, x0, x1
   1388c:	mov	w1, w0
   13890:	ldr	x0, [sp, #40]
   13894:	ldrh	w0, [x0, #2]
   13898:	ubfx	x0, x0, #5, #9
   1389c:	and	w0, w0, #0xffff
   138a0:	add	w0, w1, w0
   138a4:	ldr	w1, [sp, #36]
   138a8:	cmp	w1, w0
   138ac:	b.cs	138c0 <grub_unicode_get_comb_type+0x128>  // b.hs, b.nlast
   138b0:	ldr	w1, [sp, #36]
   138b4:	mov	w0, #0x1ffff               	// #131071
   138b8:	cmp	w1, w0
   138bc:	b.ls	13830 <grub_unicode_get_comb_type+0x98>  // b.plast
   138c0:	ldr	x0, [sp, #40]
   138c4:	add	x0, x0, #0x6
   138c8:	str	x0, [sp, #40]
   138cc:	ldr	x0, [sp, #40]
   138d0:	ldrh	w0, [x0, #2]
   138d4:	ubfx	x0, x0, #5, #9
   138d8:	and	w0, w0, #0xffff
   138dc:	cmp	w0, #0x0
   138e0:	b.ne	13804 <grub_unicode_get_comb_type+0x6c>  // b.any
   138e4:	b	138f8 <grub_unicode_get_comb_type+0x160>
   138e8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   138ec:	add	x0, x0, #0x0
   138f0:	ldr	x0, [x0]
   138f4:	str	wzr, [x0]
   138f8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   138fc:	add	x0, x0, #0x0
   13900:	ldr	x0, [x0]
   13904:	ldr	x0, [x0]
   13908:	cmp	x0, #0x0
   1390c:	b.eq	13940 <grub_unicode_get_comb_type+0x1a8>  // b.none
   13910:	ldr	w1, [sp, #28]
   13914:	mov	w0, #0x1ffff               	// #131071
   13918:	cmp	w1, w0
   1391c:	b.hi	13940 <grub_unicode_get_comb_type+0x1a8>  // b.pmore
   13920:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13924:	add	x0, x0, #0x0
   13928:	ldr	x0, [x0]
   1392c:	ldr	x1, [x0]
   13930:	ldr	w0, [sp, #28]
   13934:	add	x0, x1, x0
   13938:	ldrb	w0, [x0]
   1393c:	b	13a0c <grub_unicode_get_comb_type+0x274>
   13940:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13944:	add	x0, x0, #0x0
   13948:	ldr	x0, [x0]
   1394c:	str	x0, [sp, #40]
   13950:	b	139f0 <grub_unicode_get_comb_type+0x258>
   13954:	ldr	x0, [sp, #40]
   13958:	ldrb	w1, [x0]
   1395c:	ldrb	w2, [x0, #1]
   13960:	lsl	x2, x2, #8
   13964:	orr	x1, x2, x1
   13968:	ldrb	w0, [x0, #2]
   1396c:	and	x0, x0, #0x1f
   13970:	lsl	x0, x0, #16
   13974:	orr	x0, x0, x1
   13978:	mov	w1, w0
   1397c:	ldr	w0, [sp, #28]
   13980:	cmp	w0, w1
   13984:	b.cc	139e4 <grub_unicode_get_comb_type+0x24c>  // b.lo, b.ul, b.last
   13988:	ldr	x0, [sp, #40]
   1398c:	ldrb	w1, [x0]
   13990:	ldrb	w2, [x0, #1]
   13994:	lsl	x2, x2, #8
   13998:	orr	x1, x2, x1
   1399c:	ldrb	w0, [x0, #2]
   139a0:	and	x0, x0, #0x1f
   139a4:	lsl	x0, x0, #16
   139a8:	orr	x0, x0, x1
   139ac:	mov	w1, w0
   139b0:	ldr	x0, [sp, #40]
   139b4:	ldrh	w0, [x0, #2]
   139b8:	ubfx	x0, x0, #5, #9
   139bc:	and	w0, w0, #0xffff
   139c0:	add	w0, w1, w0
   139c4:	ldr	w1, [sp, #28]
   139c8:	cmp	w1, w0
   139cc:	b.cs	139e4 <grub_unicode_get_comb_type+0x24c>  // b.hs, b.nlast
   139d0:	ldr	x0, [sp, #40]
   139d4:	ldrh	w0, [x0, #4]
   139d8:	ubfx	x0, x0, #3, #8
   139dc:	and	w0, w0, #0xff
   139e0:	b	13a0c <grub_unicode_get_comb_type+0x274>
   139e4:	ldr	x0, [sp, #40]
   139e8:	add	x0, x0, #0x6
   139ec:	str	x0, [sp, #40]
   139f0:	ldr	x0, [sp, #40]
   139f4:	ldrh	w0, [x0, #2]
   139f8:	ubfx	x0, x0, #5, #9
   139fc:	and	w0, w0, #0xffff
   13a00:	cmp	w0, #0x0
   13a04:	b.ne	13954 <grub_unicode_get_comb_type+0x1bc>  // b.any
   13a08:	mov	w0, #0x0                   	// #0
   13a0c:	ldp	x29, x30, [sp], #48
   13a10:	ret
   13a14:	nop
	...
   13a30:	sub	sp, sp, #0x10
   13a34:	str	w0, [sp, #12]
   13a38:	str	w1, [sp, #8]
   13a3c:	ldr	w0, [sp, #12]
   13a40:	cmp	w0, #0x21
   13a44:	b.ne	13a68 <grub_unicode_get_comb_type+0x2d0>  // b.any
   13a48:	ldr	w0, [sp, #8]
   13a4c:	cmp	w0, #0x20
   13a50:	b.hi	13a68 <grub_unicode_get_comb_type+0x2d0>  // b.pmore
   13a54:	ldr	w0, [sp, #8]
   13a58:	cmp	w0, #0x1a
   13a5c:	b.ls	13a68 <grub_unicode_get_comb_type+0x2d0>  // b.plast
   13a60:	mov	w0, #0x0                   	// #0
   13a64:	b	13aa8 <grub_unicode_get_comb_type+0x310>
   13a68:	ldr	w0, [sp, #8]
   13a6c:	cmp	w0, #0x21
   13a70:	b.ne	13a94 <grub_unicode_get_comb_type+0x2fc>  // b.any
   13a74:	ldr	w0, [sp, #12]
   13a78:	cmp	w0, #0x20
   13a7c:	b.hi	13a94 <grub_unicode_get_comb_type+0x2fc>  // b.pmore
   13a80:	ldr	w0, [sp, #12]
   13a84:	cmp	w0, #0x1a
   13a88:	b.ls	13a94 <grub_unicode_get_comb_type+0x2fc>  // b.plast
   13a8c:	mov	w0, #0x1                   	// #1
   13a90:	b	13aa8 <grub_unicode_get_comb_type+0x310>
   13a94:	ldr	w1, [sp, #12]
   13a98:	ldr	w0, [sp, #8]
   13a9c:	cmp	w1, w0
   13aa0:	cset	w0, hi  // hi = pmore
   13aa4:	and	w0, w0, #0xff
   13aa8:	add	sp, sp, #0x10
   13aac:	ret

0000000000013ab0 <grub_unicode_aglomerate_comb>:
   13ab0:	stp	x29, x30, [sp, #-96]!
   13ab4:	mov	x29, sp
   13ab8:	str	x0, [sp, #40]
   13abc:	str	x1, [sp, #32]
   13ac0:	str	x2, [sp, #24]
   13ac4:	str	wzr, [sp, #92]
   13ac8:	str	wzr, [sp, #76]
   13acc:	mov	x2, #0x20                  	// #32
   13ad0:	mov	w1, #0x0                   	// #0
   13ad4:	ldr	x0, [sp, #24]
   13ad8:	bl	0 <grub_memset>
   13adc:	ldr	x0, [sp, #32]
   13ae0:	cmp	x0, #0x0
   13ae4:	b.eq	13b5c <grub_unicode_aglomerate_comb+0xac>  // b.none
   13ae8:	ldr	x0, [sp, #40]
   13aec:	ldr	w0, [x0]
   13af0:	bl	12840 <grub_context_fini+0x230>
   13af4:	cmp	w0, #0x0
   13af8:	b.eq	13b5c <grub_unicode_aglomerate_comb+0xac>  // b.none
   13afc:	ldr	x0, [sp, #40]
   13b00:	ldr	w0, [x0]
   13b04:	and	w2, w0, #0x7fffff
   13b08:	ldr	x1, [sp, #24]
   13b0c:	ldr	w0, [x1]
   13b10:	bfxil	w0, w2, #0, #23
   13b14:	str	w0, [x1]
   13b18:	ldr	x0, [sp, #24]
   13b1c:	ldrh	w1, [x0, #2]
   13b20:	and	w1, w1, #0x7f
   13b24:	strh	w1, [x0, #2]
   13b28:	ldr	x0, [sp, #24]
   13b2c:	ldrb	w1, [x0, #4]
   13b30:	and	w1, w1, #0xffffffe0
   13b34:	strb	w1, [x0, #4]
   13b38:	ldr	x0, [sp, #24]
   13b3c:	ldrh	w1, [x0, #6]
   13b40:	and	w1, w1, #0xfffff807
   13b44:	strh	w1, [x0, #6]
   13b48:	ldr	x0, [sp, #24]
   13b4c:	mov	w1, #0x1                   	// #1
   13b50:	strb	w1, [x0, #8]
   13b54:	mov	x0, #0x1                   	// #1
   13b58:	b	13fac <grub_unicode_aglomerate_comb+0x4fc>
   13b5c:	ldr	x0, [sp, #40]
   13b60:	str	x0, [sp, #80]
   13b64:	b	13f80 <grub_unicode_aglomerate_comb+0x4d0>
   13b68:	ldr	x0, [sp, #80]
   13b6c:	ldr	w1, [x0]
   13b70:	mov	w0, #0xfdff                	// #65023
   13b74:	cmp	w1, w0
   13b78:	b.ls	13bcc <grub_unicode_aglomerate_comb+0x11c>  // b.plast
   13b7c:	ldr	x0, [sp, #80]
   13b80:	ldr	w1, [x0]
   13b84:	mov	w0, #0xfe0f                	// #65039
   13b88:	cmp	w1, w0
   13b8c:	b.hi	13bcc <grub_unicode_aglomerate_comb+0x11c>  // b.pmore
   13b90:	ldr	w0, [sp, #92]
   13b94:	cmp	w0, #0x0
   13b98:	b.eq	13f60 <grub_unicode_aglomerate_comb+0x4b0>  // b.none
   13b9c:	ldr	x0, [sp, #80]
   13ba0:	ldr	w0, [x0]
   13ba4:	and	w0, w0, #0xffff
   13ba8:	add	w0, w0, #0x201
   13bac:	and	w0, w0, #0xffff
   13bb0:	and	w0, w0, #0x1ff
   13bb4:	and	w2, w0, #0xffff
   13bb8:	ldr	x1, [sp, #24]
   13bbc:	ldrh	w0, [x1, #2]
   13bc0:	bfi	w0, w2, #7, #9
   13bc4:	strh	w0, [x1, #2]
   13bc8:	b	13f60 <grub_unicode_aglomerate_comb+0x4b0>
   13bcc:	ldr	x0, [sp, #80]
   13bd0:	ldr	w1, [x0]
   13bd4:	mov	w0, #0xff                  	// #255
   13bd8:	movk	w0, #0xe, lsl #16
   13bdc:	cmp	w1, w0
   13be0:	b.ls	13c38 <grub_unicode_aglomerate_comb+0x188>  // b.plast
   13be4:	ldr	x0, [sp, #80]
   13be8:	ldr	w1, [x0]
   13bec:	mov	w0, #0x1ef                 	// #495
   13bf0:	movk	w0, #0xe, lsl #16
   13bf4:	cmp	w1, w0
   13bf8:	b.hi	13c38 <grub_unicode_aglomerate_comb+0x188>  // b.pmore
   13bfc:	ldr	w0, [sp, #92]
   13c00:	cmp	w0, #0x0
   13c04:	b.eq	13f68 <grub_unicode_aglomerate_comb+0x4b8>  // b.none
   13c08:	ldr	x0, [sp, #80]
   13c0c:	ldr	w0, [x0]
   13c10:	and	w0, w0, #0xffff
   13c14:	sub	w0, w0, #0xef
   13c18:	and	w0, w0, #0xffff
   13c1c:	and	w0, w0, #0x1ff
   13c20:	and	w2, w0, #0xffff
   13c24:	ldr	x1, [sp, #24]
   13c28:	ldrh	w0, [x1, #2]
   13c2c:	bfi	w0, w2, #7, #9
   13c30:	strh	w0, [x1, #2]
   13c34:	b	13f68 <grub_unicode_aglomerate_comb+0x4b8>
   13c38:	ldr	x0, [sp, #80]
   13c3c:	ldr	w0, [x0]
   13c40:	bl	13798 <grub_unicode_get_comb_type>
   13c44:	str	w0, [sp, #56]
   13c48:	ldr	w0, [sp, #56]
   13c4c:	cmp	w0, #0x0
   13c50:	b.eq	13edc <grub_unicode_aglomerate_comb+0x42c>  // b.none
   13c54:	ldr	w0, [sp, #92]
   13c58:	cmp	w0, #0x0
   13c5c:	b.eq	13f70 <grub_unicode_aglomerate_comb+0x4c0>  // b.none
   13c60:	ldr	w0, [sp, #56]
   13c64:	cmp	w0, #0xfe
   13c68:	b.eq	13c84 <grub_unicode_aglomerate_comb+0x1d4>  // b.none
   13c6c:	ldr	w0, [sp, #56]
   13c70:	cmp	w0, #0xfd
   13c74:	b.eq	13c84 <grub_unicode_aglomerate_comb+0x1d4>  // b.none
   13c78:	ldr	w0, [sp, #56]
   13c7c:	cmp	w0, #0xff
   13c80:	b.ne	13c98 <grub_unicode_aglomerate_comb+0x1e8>  // b.any
   13c84:	ldr	x0, [sp, #24]
   13c88:	ldrh	w0, [x0, #6]
   13c8c:	ubfx	x0, x0, #3, #8
   13c90:	and	w0, w0, #0xff
   13c94:	str	w0, [sp, #76]
   13c98:	ldr	x0, [sp, #24]
   13c9c:	ldrh	w0, [x0, #6]
   13ca0:	ubfx	x0, x0, #3, #8
   13ca4:	and	w0, w0, #0xff
   13ca8:	cmp	w0, #0x1
   13cac:	b.hi	13cc0 <grub_unicode_aglomerate_comb+0x210>  // b.pmore
   13cb0:	ldr	x0, [sp, #24]
   13cb4:	add	x0, x0, #0x18
   13cb8:	str	x0, [sp, #64]
   13cbc:	b	13da4 <grub_unicode_aglomerate_comb+0x2f4>
   13cc0:	ldr	x0, [sp, #24]
   13cc4:	ldrh	w0, [x0, #6]
   13cc8:	ubfx	x0, x0, #3, #8
   13ccc:	and	w0, w0, #0xff
   13cd0:	cmp	w0, #0x2
   13cd4:	b.ls	13d3c <grub_unicode_aglomerate_comb+0x28c>  // b.plast
   13cd8:	ldr	x0, [sp, #24]
   13cdc:	ldr	x2, [x0, #24]
   13ce0:	ldr	x0, [sp, #24]
   13ce4:	ldrh	w0, [x0, #6]
   13ce8:	ubfx	x0, x0, #3, #8
   13cec:	and	w0, w0, #0xff
   13cf0:	add	w0, w0, #0x1
   13cf4:	sxtw	x0, w0
   13cf8:	lsl	x0, x0, #2
   13cfc:	mov	x1, x0
   13d00:	mov	x0, x2
   13d04:	bl	0 <grub_realloc>
   13d08:	str	x0, [sp, #64]
   13d0c:	ldr	x0, [sp, #64]
   13d10:	cmp	x0, #0x0
   13d14:	b.ne	13d2c <grub_unicode_aglomerate_comb+0x27c>  // b.any
   13d18:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13d1c:	add	x0, x0, #0x0
   13d20:	ldr	x0, [x0]
   13d24:	str	wzr, [x0]
   13d28:	b	13f74 <grub_unicode_aglomerate_comb+0x4c4>
   13d2c:	ldr	x0, [sp, #24]
   13d30:	ldr	x1, [sp, #64]
   13d34:	str	x1, [x0, #24]
   13d38:	b	13da4 <grub_unicode_aglomerate_comb+0x2f4>
   13d3c:	ldr	x0, [sp, #24]
   13d40:	ldrh	w0, [x0, #6]
   13d44:	ubfx	x0, x0, #3, #8
   13d48:	and	w0, w0, #0xff
   13d4c:	add	w0, w0, #0x1
   13d50:	sxtw	x0, w0
   13d54:	lsl	x0, x0, #2
   13d58:	bl	0 <grub_malloc>
   13d5c:	str	x0, [sp, #64]
   13d60:	ldr	x0, [sp, #64]
   13d64:	cmp	x0, #0x0
   13d68:	b.ne	13d80 <grub_unicode_aglomerate_comb+0x2d0>  // b.any
   13d6c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   13d70:	add	x0, x0, #0x0
   13d74:	ldr	x0, [x0]
   13d78:	str	wzr, [x0]
   13d7c:	b	13f74 <grub_unicode_aglomerate_comb+0x4c4>
   13d80:	ldr	x0, [sp, #24]
   13d84:	add	x0, x0, #0x18
   13d88:	mov	x2, #0x8                   	// #8
   13d8c:	mov	x1, x0
   13d90:	ldr	x0, [sp, #64]
   13d94:	bl	12814 <grub_context_fini+0x204>
   13d98:	ldr	x0, [sp, #24]
   13d9c:	ldr	x1, [sp, #64]
   13da0:	str	x1, [x0, #24]
   13da4:	ldr	w0, [sp, #76]
   13da8:	str	w0, [sp, #60]
   13dac:	b	13de8 <grub_unicode_aglomerate_comb+0x338>
   13db0:	ldr	w0, [sp, #60]
   13db4:	lsl	x0, x0, #2
   13db8:	ldr	x1, [sp, #64]
   13dbc:	add	x0, x1, x0
   13dc0:	ldrh	w0, [x0, #2]
   13dc4:	ubfx	x0, x0, #5, #8
   13dc8:	and	w0, w0, #0xff
   13dcc:	ldr	w1, [sp, #56]
   13dd0:	bl	13a30 <grub_unicode_get_comb_type+0x298>
   13dd4:	cmp	w0, #0x0
   13dd8:	b.ne	13e0c <grub_unicode_aglomerate_comb+0x35c>  // b.any
   13ddc:	ldr	w0, [sp, #60]
   13de0:	add	w0, w0, #0x1
   13de4:	str	w0, [sp, #60]
   13de8:	ldr	x0, [sp, #24]
   13dec:	ldrh	w0, [x0, #6]
   13df0:	ubfx	x0, x0, #3, #8
   13df4:	and	w0, w0, #0xff
   13df8:	mov	w1, w0
   13dfc:	ldr	w0, [sp, #60]
   13e00:	cmp	w0, w1
   13e04:	b.cc	13db0 <grub_unicode_aglomerate_comb+0x300>  // b.lo, b.ul, b.last
   13e08:	b	13e10 <grub_unicode_aglomerate_comb+0x360>
   13e0c:	nop
   13e10:	ldr	w0, [sp, #60]
   13e14:	add	x0, x0, #0x1
   13e18:	lsl	x0, x0, #2
   13e1c:	ldr	x1, [sp, #64]
   13e20:	add	x3, x1, x0
   13e24:	ldr	w0, [sp, #60]
   13e28:	lsl	x0, x0, #2
   13e2c:	ldr	x1, [sp, #64]
   13e30:	add	x1, x1, x0
   13e34:	ldr	x0, [sp, #24]
   13e38:	ldrh	w0, [x0, #6]
   13e3c:	ubfx	x0, x0, #3, #8
   13e40:	and	w0, w0, #0xff
   13e44:	mov	w2, w0
   13e48:	ldr	w0, [sp, #60]
   13e4c:	sub	w0, w2, w0
   13e50:	mov	w0, w0
   13e54:	lsl	x0, x0, #2
   13e58:	mov	x2, x0
   13e5c:	mov	x0, x3
   13e60:	bl	0 <grub_memmove>
   13e64:	ldr	x0, [sp, #80]
   13e68:	ldr	w0, [x0]
   13e6c:	ldr	w1, [sp, #60]
   13e70:	lsl	x1, x1, #2
   13e74:	ldr	x2, [sp, #64]
   13e78:	add	x1, x2, x1
   13e7c:	and	w2, w0, #0x1fffff
   13e80:	ldr	w0, [x1]
   13e84:	bfxil	w0, w2, #0, #21
   13e88:	str	w0, [x1]
   13e8c:	ldr	w0, [sp, #60]
   13e90:	lsl	x0, x0, #2
   13e94:	ldr	x1, [sp, #64]
   13e98:	add	x1, x1, x0
   13e9c:	ldr	w0, [sp, #56]
   13ea0:	and	w2, w0, #0xff
   13ea4:	ldrh	w0, [x1, #2]
   13ea8:	bfi	w0, w2, #5, #8
   13eac:	strh	w0, [x1, #2]
   13eb0:	ldr	x0, [sp, #24]
   13eb4:	ldrh	w0, [x0, #6]
   13eb8:	ubfx	x0, x0, #3, #8
   13ebc:	and	w0, w0, #0xff
   13ec0:	add	w0, w0, #0x1
   13ec4:	and	w2, w0, #0xff
   13ec8:	ldr	x1, [sp, #24]
   13ecc:	ldrh	w0, [x1, #6]
   13ed0:	bfi	w0, w2, #3, #8
   13ed4:	strh	w0, [x1, #6]
   13ed8:	b	13f74 <grub_unicode_aglomerate_comb+0x4c4>
   13edc:	ldr	w0, [sp, #92]
   13ee0:	cmp	w0, #0x0
   13ee4:	b.eq	13efc <grub_unicode_aglomerate_comb+0x44c>  // b.none
   13ee8:	ldr	x1, [sp, #80]
   13eec:	ldr	x0, [sp, #40]
   13ef0:	sub	x0, x1, x0
   13ef4:	asr	x0, x0, #2
   13ef8:	b	13fac <grub_unicode_aglomerate_comb+0x4fc>
   13efc:	mov	w0, #0x1                   	// #1
   13f00:	str	w0, [sp, #92]
   13f04:	ldr	x0, [sp, #80]
   13f08:	ldr	w0, [x0]
   13f0c:	and	w2, w0, #0x7fffff
   13f10:	ldr	x1, [sp, #24]
   13f14:	ldr	w0, [x1]
   13f18:	bfxil	w0, w2, #0, #23
   13f1c:	str	w0, [x1]
   13f20:	ldr	x0, [sp, #24]
   13f24:	ldrh	w1, [x0, #2]
   13f28:	and	w1, w1, #0x7f
   13f2c:	strh	w1, [x0, #2]
   13f30:	ldr	x0, [sp, #24]
   13f34:	ldrb	w1, [x0, #4]
   13f38:	and	w1, w1, #0xffffffe0
   13f3c:	strb	w1, [x0, #4]
   13f40:	ldr	x0, [sp, #24]
   13f44:	ldrh	w1, [x0, #6]
   13f48:	and	w1, w1, #0xfffff807
   13f4c:	strh	w1, [x0, #6]
   13f50:	ldr	x0, [sp, #24]
   13f54:	mov	w1, #0x1                   	// #1
   13f58:	strb	w1, [x0, #8]
   13f5c:	b	13f74 <grub_unicode_aglomerate_comb+0x4c4>
   13f60:	nop
   13f64:	b	13f74 <grub_unicode_aglomerate_comb+0x4c4>
   13f68:	nop
   13f6c:	b	13f74 <grub_unicode_aglomerate_comb+0x4c4>
   13f70:	nop
   13f74:	ldr	x0, [sp, #80]
   13f78:	add	x0, x0, #0x4
   13f7c:	str	x0, [sp, #80]
   13f80:	ldr	x0, [sp, #32]
   13f84:	lsl	x0, x0, #2
   13f88:	ldr	x1, [sp, #40]
   13f8c:	add	x0, x1, x0
   13f90:	ldr	x1, [sp, #80]
   13f94:	cmp	x1, x0
   13f98:	b.cc	13b68 <grub_unicode_aglomerate_comb+0xb8>  // b.lo, b.ul, b.last
   13f9c:	ldr	x1, [sp, #80]
   13fa0:	ldr	x0, [sp, #40]
   13fa4:	sub	x0, x1, x0
   13fa8:	asr	x0, x0, #2
   13fac:	ldp	x29, x30, [sp], #96
   13fb0:	ret
   13fb4:	nop
	...
   13fc0:	sub	sp, sp, #0x50
   13fc4:	str	x0, [sp, #24]
   13fc8:	str	x1, [sp, #16]
   13fcc:	str	w2, [sp, #12]
   13fd0:	str	w3, [sp, #8]
   13fd4:	str	wzr, [sp, #72]
   13fd8:	str	wzr, [sp, #68]
   13fdc:	ldr	x0, [sp, #16]
   13fe0:	cmp	x0, #0x0
   13fe4:	b.eq	14048 <grub_unicode_aglomerate_comb+0x598>  // b.none
   13fe8:	ldr	w0, [sp, #12]
   13fec:	lsl	x0, x0, #5
   13ff0:	ldr	x1, [sp, #24]
   13ff4:	add	x0, x1, x0
   13ff8:	ldr	x0, [x0, #16]
   13ffc:	lsl	x0, x0, #2
   14000:	ldr	x1, [sp, #16]
   14004:	add	x0, x1, x0
   14008:	ldrh	w0, [x0]
   1400c:	ubfx	x0, x0, #1, #15
   14010:	and	w0, w0, #0xffff
   14014:	str	w0, [sp, #72]
   14018:	ldr	w0, [sp, #8]
   1401c:	lsl	x0, x0, #5
   14020:	ldr	x1, [sp, #24]
   14024:	add	x0, x1, x0
   14028:	ldr	x0, [x0, #16]
   1402c:	lsl	x0, x0, #2
   14030:	ldr	x1, [sp, #16]
   14034:	add	x0, x1, x0
   14038:	ldrh	w0, [x0]
   1403c:	ubfx	x0, x0, #1, #15
   14040:	and	w0, w0, #0xffff
   14044:	str	w0, [sp, #68]
   14048:	str	wzr, [sp, #76]
   1404c:	b	14254 <grub_unicode_aglomerate_comb+0x7a4>
   14050:	ldr	w1, [sp, #12]
   14054:	ldr	w0, [sp, #76]
   14058:	add	w0, w1, w0
   1405c:	mov	w0, w0
   14060:	lsl	x0, x0, #5
   14064:	ldr	x1, [sp, #24]
   14068:	add	x0, x1, x0
   1406c:	add	x2, sp, #0x20
   14070:	mov	x3, x0
   14074:	ldp	x0, x1, [x3]
   14078:	stp	x0, x1, [x2]
   1407c:	ldp	x0, x1, [x3, #16]
   14080:	stp	x0, x1, [x2, #16]
   14084:	ldr	w1, [sp, #8]
   14088:	ldr	w0, [sp, #76]
   1408c:	sub	w0, w1, w0
   14090:	mov	w0, w0
   14094:	lsl	x0, x0, #5
   14098:	ldr	x1, [sp, #24]
   1409c:	add	x3, x1, x0
   140a0:	ldr	w1, [sp, #12]
   140a4:	ldr	w0, [sp, #76]
   140a8:	add	w0, w1, w0
   140ac:	mov	w0, w0
   140b0:	lsl	x0, x0, #5
   140b4:	ldr	x1, [sp, #24]
   140b8:	add	x0, x1, x0
   140bc:	mov	x2, x0
   140c0:	ldp	x0, x1, [x3]
   140c4:	stp	x0, x1, [x2]
   140c8:	ldp	x0, x1, [x3, #16]
   140cc:	stp	x0, x1, [x2, #16]
   140d0:	ldr	w1, [sp, #8]
   140d4:	ldr	w0, [sp, #76]
   140d8:	sub	w0, w1, w0
   140dc:	mov	w0, w0
   140e0:	lsl	x0, x0, #5
   140e4:	ldr	x1, [sp, #24]
   140e8:	add	x0, x1, x0
   140ec:	mov	x3, x0
   140f0:	add	x2, sp, #0x20
   140f4:	ldp	x0, x1, [x2]
   140f8:	stp	x0, x1, [x3]
   140fc:	ldp	x0, x1, [x2, #16]
   14100:	stp	x0, x1, [x3, #16]
   14104:	ldr	x0, [sp, #16]
   14108:	cmp	x0, #0x0
   1410c:	b.eq	14248 <grub_unicode_aglomerate_comb+0x798>  // b.none
   14110:	ldr	w0, [sp, #72]
   14114:	and	w1, w0, #0xffff
   14118:	ldr	w0, [sp, #68]
   1411c:	and	w0, w0, #0xffff
   14120:	add	w0, w1, w0
   14124:	and	w0, w0, #0xffff
   14128:	ldr	w2, [sp, #12]
   1412c:	ldr	w1, [sp, #76]
   14130:	add	w1, w2, w1
   14134:	mov	w1, w1
   14138:	lsl	x1, x1, #5
   1413c:	ldr	x2, [sp, #24]
   14140:	add	x1, x2, x1
   14144:	ldr	x1, [x1, #16]
   14148:	lsl	x1, x1, #2
   1414c:	ldr	x2, [sp, #16]
   14150:	add	x1, x2, x1
   14154:	ldrh	w1, [x1]
   14158:	ubfx	x1, x1, #1, #15
   1415c:	and	w1, w1, #0xffff
   14160:	sub	w0, w0, w1
   14164:	and	w2, w0, #0xffff
   14168:	ldr	w1, [sp, #12]
   1416c:	ldr	w0, [sp, #76]
   14170:	add	w0, w1, w0
   14174:	mov	w0, w0
   14178:	lsl	x0, x0, #5
   1417c:	ldr	x1, [sp, #24]
   14180:	add	x0, x1, x0
   14184:	ldr	x0, [x0, #16]
   14188:	lsl	x0, x0, #2
   1418c:	ldr	x1, [sp, #16]
   14190:	add	x1, x1, x0
   14194:	mov	w0, w2
   14198:	and	w0, w0, #0x7fff
   1419c:	and	w2, w0, #0xffff
   141a0:	ldrh	w0, [x1]
   141a4:	bfi	w0, w2, #1, #15
   141a8:	strh	w0, [x1]
   141ac:	ldr	w0, [sp, #72]
   141b0:	and	w1, w0, #0xffff
   141b4:	ldr	w0, [sp, #68]
   141b8:	and	w0, w0, #0xffff
   141bc:	add	w0, w1, w0
   141c0:	and	w0, w0, #0xffff
   141c4:	ldr	w2, [sp, #8]
   141c8:	ldr	w1, [sp, #76]
   141cc:	sub	w1, w2, w1
   141d0:	mov	w1, w1
   141d4:	lsl	x1, x1, #5
   141d8:	ldr	x2, [sp, #24]
   141dc:	add	x1, x2, x1
   141e0:	ldr	x1, [x1, #16]
   141e4:	lsl	x1, x1, #2
   141e8:	ldr	x2, [sp, #16]
   141ec:	add	x1, x2, x1
   141f0:	ldrh	w1, [x1]
   141f4:	ubfx	x1, x1, #1, #15
   141f8:	and	w1, w1, #0xffff
   141fc:	sub	w0, w0, w1
   14200:	and	w2, w0, #0xffff
   14204:	ldr	w1, [sp, #8]
   14208:	ldr	w0, [sp, #76]
   1420c:	sub	w0, w1, w0
   14210:	mov	w0, w0
   14214:	lsl	x0, x0, #5
   14218:	ldr	x1, [sp, #24]
   1421c:	add	x0, x1, x0
   14220:	ldr	x0, [x0, #16]
   14224:	lsl	x0, x0, #2
   14228:	ldr	x1, [sp, #16]
   1422c:	add	x1, x1, x0
   14230:	mov	w0, w2
   14234:	and	w0, w0, #0x7fff
   14238:	and	w2, w0, #0xffff
   1423c:	ldrh	w0, [x1]
   14240:	bfi	w0, w2, #1, #15
   14244:	strh	w0, [x1]
   14248:	ldr	w0, [sp, #76]
   1424c:	add	w0, w0, #0x1
   14250:	str	w0, [sp, #76]
   14254:	ldr	w1, [sp, #8]
   14258:	ldr	w0, [sp, #12]
   1425c:	sub	w0, w1, w0
   14260:	lsr	w0, w0, #1
   14264:	add	w0, w0, #0x1
   14268:	ldr	w1, [sp, #76]
   1426c:	cmp	w1, w0
   14270:	b.cc	14050 <grub_unicode_aglomerate_comb+0x5a0>  // b.lo, b.ul, b.last
   14274:	nop
   14278:	nop
   1427c:	add	sp, sp, #0x50
   14280:	ret
   14284:	stp	x29, x30, [sp, #-208]!
   14288:	mov	x29, sp
   1428c:	str	x0, [sp, #72]
   14290:	str	x1, [sp, #64]
   14294:	str	x2, [sp, #56]
   14298:	str	x3, [sp, #48]
   1429c:	str	x4, [sp, #40]
   142a0:	str	x5, [sp, #32]
   142a4:	str	x6, [sp, #24]
   142a8:	str	w7, [sp, #20]
   142ac:	ldr	x0, [sp, #72]
   142b0:	str	x0, [sp, #200]
   142b4:	str	wzr, [sp, #196]
   142b8:	mov	x0, #0xffffffffffffffff    	// #-1
   142bc:	str	x0, [sp, #168]
   142c0:	str	xzr, [sp, #160]
   142c4:	str	wzr, [sp, #156]
   142c8:	ldr	x0, [sp, #56]
   142cc:	cmp	x0, #0x0
   142d0:	b.ne	142dc <grub_unicode_aglomerate_comb+0x82c>  // b.any
   142d4:	mov	x0, #0x0                   	// #0
   142d8:	b	14f3c <grub_unicode_aglomerate_comb+0x148c>
   142dc:	ldr	x1, [sp, #24]
   142e0:	ldr	x0, [sp, #32]
   142e4:	cmp	x1, x0
   142e8:	b.cc	1436c <grub_unicode_aglomerate_comb+0x8bc>  // b.lo, b.ul, b.last
   142ec:	ldr	x0, [sp, #32]
   142f0:	cmp	x0, #0x0
   142f4:	b.le	1436c <grub_unicode_aglomerate_comb+0x8bc>
   142f8:	ldr	w0, [sp, #20]
   142fc:	cmp	w0, #0x0
   14300:	b.eq	14338 <grub_unicode_aglomerate_comb+0x888>  // b.none
   14304:	mov	x2, #0x20                  	// #32
   14308:	mov	w1, #0x0                   	// #0
   1430c:	ldr	x0, [sp, #200]
   14310:	bl	0 <grub_memset>
   14314:	ldr	w0, [sp, #20]
   14318:	and	w2, w0, #0x7fffff
   1431c:	ldr	x1, [sp, #200]
   14320:	ldr	w0, [x1]
   14324:	bfxil	w0, w2, #0, #23
   14328:	str	w0, [x1]
   1432c:	ldr	x0, [sp, #200]
   14330:	add	x0, x0, #0x20
   14334:	str	x0, [sp, #200]
   14338:	mov	x2, #0x20                  	// #32
   1433c:	mov	w1, #0x0                   	// #0
   14340:	ldr	x0, [sp, #200]
   14344:	bl	0 <grub_memset>
   14348:	ldr	x1, [sp, #200]
   1434c:	ldr	w0, [x1]
   14350:	mov	w2, #0xa                   	// #10
   14354:	bfxil	w0, w2, #0, #23
   14358:	str	w0, [x1]
   1435c:	ldr	x0, [sp, #200]
   14360:	add	x0, x0, #0x20
   14364:	str	x0, [sp, #200]
   14368:	str	xzr, [sp, #24]
   1436c:	ldr	x0, [sp, #24]
   14370:	str	x0, [sp, #184]
   14374:	str	wzr, [sp, #180]
   14378:	b	14f1c <grub_unicode_aglomerate_comb+0x146c>
   1437c:	str	xzr, [sp, #144]
   14380:	ldr	x0, [sp, #208]
   14384:	cmp	x0, #0x0
   14388:	b.eq	1442c <grub_unicode_aglomerate_comb+0x97c>  // b.none
   1438c:	ldr	w0, [sp, #180]
   14390:	ldr	x1, [sp, #56]
   14394:	cmp	x1, x0
   14398:	b.eq	1442c <grub_unicode_aglomerate_comb+0x97c>  // b.none
   1439c:	ldr	w0, [sp, #180]
   143a0:	lsl	x0, x0, #5
   143a4:	ldr	x1, [sp, #64]
   143a8:	add	x0, x1, x0
   143ac:	ldr	x0, [x0, #16]
   143b0:	lsl	x0, x0, #2
   143b4:	ldr	x1, [sp, #208]
   143b8:	add	x1, x1, x0
   143bc:	ldr	x0, [sp, #184]
   143c0:	and	w0, w0, #0x7fff
   143c4:	and	w2, w0, #0xffff
   143c8:	ldrh	w0, [x1]
   143cc:	bfi	w0, w2, #1, #15
   143d0:	strh	w0, [x1]
   143d4:	ldr	w0, [sp, #180]
   143d8:	lsl	x0, x0, #5
   143dc:	ldr	x1, [sp, #64]
   143e0:	add	x0, x1, x0
   143e4:	ldr	x0, [x0, #16]
   143e8:	lsl	x0, x0, #2
   143ec:	ldr	x1, [sp, #208]
   143f0:	add	x0, x1, x0
   143f4:	ldr	w1, [sp, #156]
   143f8:	and	w1, w1, #0xffff
   143fc:	strh	w1, [x0, #2]
   14400:	ldr	w0, [sp, #180]
   14404:	lsl	x0, x0, #5
   14408:	ldr	x1, [sp, #64]
   1440c:	add	x0, x1, x0
   14410:	ldr	x0, [x0, #16]
   14414:	lsl	x0, x0, #2
   14418:	ldr	x1, [sp, #208]
   1441c:	add	x0, x1, x0
   14420:	ldrb	w1, [x0]
   14424:	orr	w1, w1, #0x1
   14428:	strb	w1, [x0]
   1442c:	ldr	w0, [sp, #180]
   14430:	ldr	x1, [sp, #56]
   14434:	cmp	x1, x0
   14438:	b.ne	144a8 <grub_unicode_aglomerate_comb+0x9f8>  // b.any
   1443c:	ldr	x0, [sp, #208]
   14440:	cmp	x0, #0x0
   14444:	b.eq	144a8 <grub_unicode_aglomerate_comb+0x9f8>  // b.none
   14448:	ldr	x0, [sp, #224]
   1444c:	lsl	x0, x0, #2
   14450:	ldr	x1, [sp, #208]
   14454:	add	x1, x1, x0
   14458:	ldr	x0, [sp, #184]
   1445c:	and	w0, w0, #0x7fff
   14460:	and	w2, w0, #0xffff
   14464:	ldrh	w0, [x1]
   14468:	bfi	w0, w2, #1, #15
   1446c:	strh	w0, [x1]
   14470:	ldr	x0, [sp, #224]
   14474:	lsl	x0, x0, #2
   14478:	ldr	x1, [sp, #208]
   1447c:	add	x0, x1, x0
   14480:	ldr	w1, [sp, #156]
   14484:	and	w1, w1, #0xffff
   14488:	strh	w1, [x0, #2]
   1448c:	ldr	x0, [sp, #224]
   14490:	lsl	x0, x0, #2
   14494:	ldr	x1, [sp, #208]
   14498:	add	x0, x1, x0
   1449c:	ldrb	w1, [x0]
   144a0:	orr	w1, w1, #0x1
   144a4:	strb	w1, [x0]
   144a8:	ldr	x0, [sp, #48]
   144ac:	cmp	x0, #0x0
   144b0:	b.eq	144f4 <grub_unicode_aglomerate_comb+0xa44>  // b.none
   144b4:	ldr	w0, [sp, #180]
   144b8:	ldr	x1, [sp, #56]
   144bc:	cmp	x1, x0
   144c0:	b.eq	144f4 <grub_unicode_aglomerate_comb+0xa44>  // b.none
   144c4:	ldr	w0, [sp, #180]
   144c8:	lsl	x0, x0, #5
   144cc:	ldr	x1, [sp, #64]
   144d0:	add	x0, x1, x0
   144d4:	ldr	x2, [sp, #48]
   144d8:	ldr	x1, [sp, #40]
   144dc:	blr	x2
   144e0:	str	x0, [sp, #144]
   144e4:	ldr	x0, [sp, #144]
   144e8:	ldr	x1, [sp, #184]
   144ec:	add	x0, x1, x0
   144f0:	str	x0, [sp, #184]
   144f4:	ldr	w0, [sp, #180]
   144f8:	ldr	x1, [sp, #56]
   144fc:	cmp	x1, x0
   14500:	b.eq	14560 <grub_unicode_aglomerate_comb+0xab0>  // b.none
   14504:	ldr	w0, [sp, #180]
   14508:	lsl	x0, x0, #5
   1450c:	ldr	x1, [sp, #64]
   14510:	add	x0, x1, x0
   14514:	ldr	w0, [x0]
   14518:	and	w0, w0, #0x7fffff
   1451c:	cmp	w0, #0x20
   14520:	b.eq	14544 <grub_unicode_aglomerate_comb+0xa94>  // b.none
   14524:	ldr	w0, [sp, #180]
   14528:	lsl	x0, x0, #5
   1452c:	ldr	x1, [sp, #64]
   14530:	add	x0, x1, x0
   14534:	ldr	w0, [x0]
   14538:	and	w0, w0, #0x7fffff
   1453c:	cmp	w0, #0x9
   14540:	b.ne	14560 <grub_unicode_aglomerate_comb+0xab0>  // b.any
   14544:	ldr	w0, [sp, #216]
   14548:	cmp	w0, #0x0
   1454c:	b.ne	14560 <grub_unicode_aglomerate_comb+0xab0>  // b.any
   14550:	ldr	w0, [sp, #180]
   14554:	str	x0, [sp, #168]
   14558:	ldr	x0, [sp, #184]
   1455c:	str	x0, [sp, #160]
   14560:	ldr	x0, [sp, #32]
   14564:	cmp	x0, #0x0
   14568:	b.le	1457c <grub_unicode_aglomerate_comb+0xacc>
   1456c:	ldr	x0, [sp, #32]
   14570:	ldr	x1, [sp, #184]
   14574:	cmp	x1, x0
   14578:	b.gt	1458c <grub_unicode_aglomerate_comb+0xadc>
   1457c:	ldr	w0, [sp, #180]
   14580:	ldr	x1, [sp, #56]
   14584:	cmp	x1, x0
   14588:	b.ne	14f10 <grub_unicode_aglomerate_comb+0x1460>  // b.any
   1458c:	mov	w0, #0xffffffff            	// #-1
   14590:	str	w0, [sp, #140]
   14594:	str	wzr, [sp, #136]
   14598:	ldr	w0, [sp, #180]
   1459c:	str	w0, [sp, #132]
   145a0:	ldr	w0, [sp, #156]
   145a4:	add	w0, w0, #0x1
   145a8:	str	w0, [sp, #156]
   145ac:	ldr	w0, [sp, #180]
   145b0:	ldr	x1, [sp, #56]
   145b4:	cmp	x1, x0
   145b8:	b.eq	145ec <grub_unicode_aglomerate_comb+0xb3c>  // b.none
   145bc:	ldr	w0, [sp, #196]
   145c0:	sxtw	x0, w0
   145c4:	ldr	x1, [sp, #168]
   145c8:	cmp	x1, x0
   145cc:	b.le	145ec <grub_unicode_aglomerate_comb+0xb3c>
   145d0:	ldr	x0, [sp, #168]
   145d4:	str	w0, [sp, #132]
   145d8:	ldr	x1, [sp, #184]
   145dc:	ldr	x0, [sp, #160]
   145e0:	sub	x0, x1, x0
   145e4:	str	x0, [sp, #184]
   145e8:	b	14664 <grub_unicode_aglomerate_comb+0xbb4>
   145ec:	ldr	w0, [sp, #180]
   145f0:	ldr	x1, [sp, #56]
   145f4:	cmp	x1, x0
   145f8:	b.eq	1465c <grub_unicode_aglomerate_comb+0xbac>  // b.none
   145fc:	ldr	w0, [sp, #196]
   14600:	cmp	w0, #0x0
   14604:	b.ne	1465c <grub_unicode_aglomerate_comb+0xbac>  // b.any
   14608:	ldr	x0, [sp, #24]
   1460c:	cmp	x0, #0x0
   14610:	b.eq	1465c <grub_unicode_aglomerate_comb+0xbac>  // b.none
   14614:	ldr	w0, [sp, #216]
   14618:	cmp	w0, #0x0
   1461c:	b.ne	1465c <grub_unicode_aglomerate_comb+0xbac>  // b.any
   14620:	ldr	w0, [sp, #156]
   14624:	cmp	w0, #0x1
   14628:	b.ne	1465c <grub_unicode_aglomerate_comb+0xbac>  // b.any
   1462c:	ldr	x1, [sp, #184]
   14630:	ldr	x0, [sp, #24]
   14634:	sub	x0, x1, x0
   14638:	ldr	x1, [sp, #32]
   1463c:	cmp	x1, x0
   14640:	b.ls	1465c <grub_unicode_aglomerate_comb+0xbac>  // b.plast
   14644:	str	wzr, [sp, #132]
   14648:	ldr	x1, [sp, #184]
   1464c:	ldr	x0, [sp, #24]
   14650:	sub	x0, x1, x0
   14654:	str	x0, [sp, #184]
   14658:	b	14664 <grub_unicode_aglomerate_comb+0xbb4>
   1465c:	ldr	x0, [sp, #144]
   14660:	str	x0, [sp, #184]
   14664:	ldr	w0, [sp, #196]
   14668:	str	w0, [sp, #128]
   1466c:	b	1473c <grub_unicode_aglomerate_comb+0xc8c>
   14670:	ldr	w0, [sp, #128]
   14674:	lsl	x0, x0, #5
   14678:	ldr	x1, [sp, #64]
   1467c:	add	x0, x1, x0
   14680:	ldrb	w0, [x0, #5]
   14684:	ubfx	x0, x0, #0, #6
   14688:	and	w0, w0, #0xff
   1468c:	mov	w1, w0
   14690:	ldr	w0, [sp, #136]
   14694:	cmp	w0, w1
   14698:	b.cs	146bc <grub_unicode_aglomerate_comb+0xc0c>  // b.hs, b.nlast
   1469c:	ldr	w0, [sp, #128]
   146a0:	lsl	x0, x0, #5
   146a4:	ldr	x1, [sp, #64]
   146a8:	add	x0, x1, x0
   146ac:	ldrb	w0, [x0, #5]
   146b0:	ubfx	x0, x0, #0, #6
   146b4:	and	w0, w0, #0xff
   146b8:	str	w0, [sp, #136]
   146bc:	ldr	w0, [sp, #128]
   146c0:	lsl	x0, x0, #5
   146c4:	ldr	x1, [sp, #64]
   146c8:	add	x0, x1, x0
   146cc:	ldrb	w0, [x0, #5]
   146d0:	ubfx	x0, x0, #0, #6
   146d4:	and	w0, w0, #0xff
   146d8:	mov	w1, w0
   146dc:	ldr	w0, [sp, #140]
   146e0:	cmp	w0, w1
   146e4:	b.ls	14730 <grub_unicode_aglomerate_comb+0xc80>  // b.plast
   146e8:	ldr	w0, [sp, #128]
   146ec:	lsl	x0, x0, #5
   146f0:	ldr	x1, [sp, #64]
   146f4:	add	x0, x1, x0
   146f8:	ldrb	w0, [x0, #5]
   146fc:	ubfx	x0, x0, #0, #6
   14700:	and	w0, w0, #0xff
   14704:	and	w0, w0, #0x1
   14708:	cmp	w0, #0x0
   1470c:	b.eq	14730 <grub_unicode_aglomerate_comb+0xc80>  // b.none
   14710:	ldr	w0, [sp, #128]
   14714:	lsl	x0, x0, #5
   14718:	ldr	x1, [sp, #64]
   1471c:	add	x0, x1, x0
   14720:	ldrb	w0, [x0, #5]
   14724:	ubfx	x0, x0, #0, #6
   14728:	and	w0, w0, #0xff
   1472c:	str	w0, [sp, #140]
   14730:	ldr	w0, [sp, #128]
   14734:	add	w0, w0, #0x1
   14738:	str	w0, [sp, #128]
   1473c:	ldr	w1, [sp, #128]
   14740:	ldr	w0, [sp, #132]
   14744:	cmp	w1, w0
   14748:	b.cc	14670 <grub_unicode_aglomerate_comb+0xbc0>  // b.lo, b.ul, b.last
   1474c:	ldr	w0, [sp, #136]
   14750:	str	w0, [sp, #124]
   14754:	b	14894 <grub_unicode_aglomerate_comb+0xde4>
   14758:	ldr	w0, [sp, #196]
   1475c:	str	w0, [sp, #120]
   14760:	ldr	w0, [sp, #196]
   14764:	str	w0, [sp, #116]
   14768:	b	14878 <grub_unicode_aglomerate_comb+0xdc8>
   1476c:	ldr	w1, [sp, #116]
   14770:	ldr	w0, [sp, #196]
   14774:	cmp	w1, w0
   14778:	b.eq	147e4 <grub_unicode_aglomerate_comb+0xd34>  // b.none
   1477c:	ldr	w0, [sp, #116]
   14780:	lsl	x0, x0, #5
   14784:	ldr	x1, [sp, #64]
   14788:	add	x0, x1, x0
   1478c:	ldrb	w0, [x0, #5]
   14790:	ubfx	x0, x0, #0, #6
   14794:	and	w0, w0, #0xff
   14798:	mov	w1, w0
   1479c:	ldr	w0, [sp, #124]
   147a0:	cmp	w0, w1
   147a4:	b.hi	147e4 <grub_unicode_aglomerate_comb+0xd34>  // b.pmore
   147a8:	ldr	w0, [sp, #116]
   147ac:	sub	w0, w0, #0x1
   147b0:	mov	w0, w0
   147b4:	lsl	x0, x0, #5
   147b8:	ldr	x1, [sp, #64]
   147bc:	add	x0, x1, x0
   147c0:	ldrb	w0, [x0, #5]
   147c4:	ubfx	x0, x0, #0, #6
   147c8:	and	w0, w0, #0xff
   147cc:	mov	w1, w0
   147d0:	ldr	w0, [sp, #124]
   147d4:	cmp	w0, w1
   147d8:	b.ls	147e4 <grub_unicode_aglomerate_comb+0xd34>  // b.plast
   147dc:	ldr	w0, [sp, #116]
   147e0:	str	w0, [sp, #120]
   147e4:	ldr	w0, [sp, #116]
   147e8:	lsl	x0, x0, #5
   147ec:	ldr	x1, [sp, #64]
   147f0:	add	x0, x1, x0
   147f4:	ldrb	w0, [x0, #5]
   147f8:	ubfx	x0, x0, #0, #6
   147fc:	and	w0, w0, #0xff
   14800:	mov	w1, w0
   14804:	ldr	w0, [sp, #124]
   14808:	cmp	w0, w1
   1480c:	b.hi	1486c <grub_unicode_aglomerate_comb+0xdbc>  // b.pmore
   14810:	ldr	w0, [sp, #116]
   14814:	add	w0, w0, #0x1
   14818:	ldr	w1, [sp, #132]
   1481c:	cmp	w1, w0
   14820:	b.eq	14858 <grub_unicode_aglomerate_comb+0xda8>  // b.none
   14824:	ldr	w0, [sp, #116]
   14828:	add	w0, w0, #0x1
   1482c:	mov	w0, w0
   14830:	lsl	x0, x0, #5
   14834:	ldr	x1, [sp, #64]
   14838:	add	x0, x1, x0
   1483c:	ldrb	w0, [x0, #5]
   14840:	ubfx	x0, x0, #0, #6
   14844:	and	w0, w0, #0xff
   14848:	mov	w1, w0
   1484c:	ldr	w0, [sp, #124]
   14850:	cmp	w0, w1
   14854:	b.ls	1486c <grub_unicode_aglomerate_comb+0xdbc>  // b.plast
   14858:	ldr	w3, [sp, #116]
   1485c:	ldr	w2, [sp, #120]
   14860:	ldr	x1, [sp, #208]
   14864:	ldr	x0, [sp, #64]
   14868:	bl	13fc0 <grub_unicode_aglomerate_comb+0x510>
   1486c:	ldr	w0, [sp, #116]
   14870:	add	w0, w0, #0x1
   14874:	str	w0, [sp, #116]
   14878:	ldr	w1, [sp, #116]
   1487c:	ldr	w0, [sp, #132]
   14880:	cmp	w1, w0
   14884:	b.cc	1476c <grub_unicode_aglomerate_comb+0xcbc>  // b.lo, b.ul, b.last
   14888:	ldr	w0, [sp, #124]
   1488c:	sub	w0, w0, #0x1
   14890:	str	w0, [sp, #124]
   14894:	ldr	w0, [sp, #140]
   14898:	sub	w0, w0, #0x1
   1489c:	ldr	w1, [sp, #124]
   148a0:	cmp	w1, w0
   148a4:	b.hi	14758 <grub_unicode_aglomerate_comb+0xca8>  // b.pmore
   148a8:	ldr	w0, [sp, #196]
   148ac:	str	w0, [sp, #112]
   148b0:	b	14aac <grub_unicode_aglomerate_comb+0xffc>
   148b4:	ldr	w0, [sp, #112]
   148b8:	lsl	x0, x0, #5
   148bc:	ldr	x1, [sp, #64]
   148c0:	add	x0, x1, x0
   148c4:	ldr	w0, [x0]
   148c8:	ubfx	x0, x0, #0, #23
   148cc:	bl	13630 <grub_utf8_to_ucs4+0x764>
   148d0:	cmp	w0, #0x0
   148d4:	b.eq	1493c <grub_unicode_aglomerate_comb+0xe8c>  // b.none
   148d8:	ldr	w0, [sp, #112]
   148dc:	lsl	x0, x0, #5
   148e0:	ldr	x1, [sp, #64]
   148e4:	add	x0, x1, x0
   148e8:	ldrb	w0, [x0, #5]
   148ec:	and	w0, w0, #0x3f
   148f0:	and	w0, w0, #0xff
   148f4:	cmp	w0, #0x0
   148f8:	b.eq	1493c <grub_unicode_aglomerate_comb+0xe8c>  // b.none
   148fc:	ldr	w0, [sp, #112]
   14900:	lsl	x0, x0, #5
   14904:	ldr	x1, [sp, #64]
   14908:	add	x0, x1, x0
   1490c:	ldrb	w0, [x0, #4]
   14910:	ubfx	x0, x0, #0, #5
   14914:	and	w0, w0, #0xff
   14918:	ldr	w1, [sp, #112]
   1491c:	lsl	x1, x1, #5
   14920:	ldr	x2, [sp, #64]
   14924:	add	x1, x2, x1
   14928:	orr	w0, w0, #0x1
   1492c:	and	w2, w0, #0xff
   14930:	ldrb	w0, [x1, #4]
   14934:	bfxil	w0, w2, #0, #5
   14938:	strb	w0, [x1, #4]
   1493c:	ldr	w0, [sp, #112]
   14940:	lsl	x0, x0, #5
   14944:	ldr	x1, [sp, #64]
   14948:	add	x0, x1, x0
   1494c:	ldrb	w0, [x0, #4]
   14950:	ubfx	x0, x0, #0, #5
   14954:	and	w0, w0, #0xff
   14958:	and	w0, w0, #0x1e
   1495c:	cmp	w0, #0x0
   14960:	b.eq	14aa0 <grub_unicode_aglomerate_comb+0xff0>  // b.none
   14964:	ldr	w0, [sp, #112]
   14968:	lsl	x0, x0, #5
   1496c:	ldr	x1, [sp, #64]
   14970:	add	x0, x1, x0
   14974:	ldrb	w0, [x0, #5]
   14978:	and	w0, w0, #0x3f
   1497c:	and	w0, w0, #0xff
   14980:	cmp	w0, #0x0
   14984:	b.eq	14aa0 <grub_unicode_aglomerate_comb+0xff0>  // b.none
   14988:	ldr	w0, [sp, #112]
   1498c:	lsl	x0, x0, #5
   14990:	ldr	x1, [sp, #64]
   14994:	add	x0, x1, x0
   14998:	ldrb	w0, [x0, #4]
   1499c:	ubfx	x0, x0, #0, #5
   149a0:	and	w0, w0, #0xff
   149a4:	mov	w1, w0
   149a8:	mov	w0, #0xa                   	// #10
   149ac:	and	w0, w1, w0
   149b0:	str	w0, [sp, #84]
   149b4:	ldr	w0, [sp, #112]
   149b8:	lsl	x0, x0, #5
   149bc:	ldr	x1, [sp, #64]
   149c0:	add	x0, x1, x0
   149c4:	ldrb	w0, [x0, #4]
   149c8:	ubfx	x0, x0, #0, #5
   149cc:	and	w0, w0, #0xff
   149d0:	mov	w1, w0
   149d4:	mov	w0, #0x14                  	// #20
   149d8:	and	w0, w1, w0
   149dc:	str	w0, [sp, #80]
   149e0:	ldr	w0, [sp, #112]
   149e4:	lsl	x0, x0, #5
   149e8:	ldr	x1, [sp, #64]
   149ec:	add	x0, x1, x0
   149f0:	ldrb	w0, [x0, #4]
   149f4:	ubfx	x0, x0, #0, #5
   149f8:	and	w0, w0, #0xff
   149fc:	ldr	w1, [sp, #112]
   14a00:	lsl	x1, x1, #5
   14a04:	ldr	x2, [sp, #64]
   14a08:	add	x1, x2, x1
   14a0c:	and	w0, w0, #0x1
   14a10:	and	w2, w0, #0xff
   14a14:	ldrb	w0, [x1, #4]
   14a18:	bfxil	w0, w2, #0, #5
   14a1c:	strb	w0, [x1, #4]
   14a20:	ldr	w0, [sp, #84]
   14a24:	lsl	w0, w0, #1
   14a28:	str	w0, [sp, #84]
   14a2c:	ldr	w0, [sp, #80]
   14a30:	asr	w0, w0, #1
   14a34:	str	w0, [sp, #80]
   14a38:	ldr	w0, [sp, #112]
   14a3c:	lsl	x0, x0, #5
   14a40:	ldr	x1, [sp, #64]
   14a44:	add	x0, x1, x0
   14a48:	ldrb	w0, [x0, #4]
   14a4c:	ubfx	x0, x0, #0, #5
   14a50:	and	w0, w0, #0xff
   14a54:	sxtb	w1, w0
   14a58:	ldr	w0, [sp, #84]
   14a5c:	sxtb	w2, w0
   14a60:	ldr	w0, [sp, #80]
   14a64:	sxtb	w0, w0
   14a68:	orr	w0, w2, w0
   14a6c:	sxtb	w0, w0
   14a70:	orr	w0, w1, w0
   14a74:	sxtb	w2, w0
   14a78:	ldr	w0, [sp, #112]
   14a7c:	lsl	x0, x0, #5
   14a80:	ldr	x1, [sp, #64]
   14a84:	add	x1, x1, x0
   14a88:	mov	w0, w2
   14a8c:	and	w0, w0, #0x1f
   14a90:	and	w2, w0, #0xff
   14a94:	ldrb	w0, [x1, #4]
   14a98:	bfxil	w0, w2, #0, #5
   14a9c:	strb	w0, [x1, #4]
   14aa0:	ldr	w0, [sp, #112]
   14aa4:	add	w0, w0, #0x1
   14aa8:	str	w0, [sp, #112]
   14aac:	ldr	w1, [sp, #112]
   14ab0:	ldr	w0, [sp, #132]
   14ab4:	cmp	w1, w0
   14ab8:	b.cc	148b4 <grub_unicode_aglomerate_comb+0xe04>  // b.lo, b.ul, b.last
   14abc:	str	wzr, [sp, #108]
   14ac0:	ldr	w0, [sp, #196]
   14ac4:	str	w0, [sp, #104]
   14ac8:	b	14c14 <grub_unicode_aglomerate_comb+0x1164>
   14acc:	ldr	w0, [sp, #104]
   14ad0:	lsl	x0, x0, #5
   14ad4:	ldr	x1, [sp, #64]
   14ad8:	add	x0, x1, x0
   14adc:	ldr	w0, [x0]
   14ae0:	ubfx	x0, x0, #0, #23
   14ae4:	bl	134d8 <grub_utf8_to_ucs4+0x60c>
   14ae8:	str	w0, [sp, #88]
   14aec:	ldr	w0, [sp, #104]
   14af0:	lsl	x0, x0, #5
   14af4:	ldr	x1, [sp, #64]
   14af8:	add	x0, x1, x0
   14afc:	ldrb	w0, [x0, #4]
   14b00:	ubfx	x0, x0, #0, #5
   14b04:	and	w0, w0, #0xff
   14b08:	and	w0, w0, #0x8
   14b0c:	cmp	w0, #0x0
   14b10:	b.ne	14bc0 <grub_unicode_aglomerate_comb+0x1110>  // b.any
   14b14:	ldr	w0, [sp, #88]
   14b18:	cmp	w0, #0x1
   14b1c:	b.eq	14b2c <grub_unicode_aglomerate_comb+0x107c>  // b.none
   14b20:	ldr	w0, [sp, #88]
   14b24:	cmp	w0, #0x3
   14b28:	b.ne	14bc0 <grub_unicode_aglomerate_comb+0x1110>  // b.any
   14b2c:	ldr	w0, [sp, #108]
   14b30:	cmp	w0, #0x0
   14b34:	b.eq	14b7c <grub_unicode_aglomerate_comb+0x10cc>  // b.none
   14b38:	ldr	w0, [sp, #104]
   14b3c:	lsl	x0, x0, #5
   14b40:	ldr	x1, [sp, #64]
   14b44:	add	x0, x1, x0
   14b48:	ldrb	w0, [x0, #4]
   14b4c:	ubfx	x0, x0, #0, #5
   14b50:	and	w0, w0, #0xff
   14b54:	ldr	w1, [sp, #104]
   14b58:	lsl	x1, x1, #5
   14b5c:	ldr	x2, [sp, #64]
   14b60:	add	x1, x2, x1
   14b64:	orr	w0, w0, #0x2
   14b68:	and	w2, w0, #0xff
   14b6c:	ldrb	w0, [x1, #4]
   14b70:	bfxil	w0, w2, #0, #5
   14b74:	strb	w0, [x1, #4]
   14b78:	b	14bc0 <grub_unicode_aglomerate_comb+0x1110>
   14b7c:	ldr	w0, [sp, #104]
   14b80:	lsl	x0, x0, #5
   14b84:	ldr	x1, [sp, #64]
   14b88:	add	x0, x1, x0
   14b8c:	ldrb	w0, [x0, #4]
   14b90:	ubfx	x0, x0, #0, #5
   14b94:	and	w2, w0, #0xff
   14b98:	ldr	w0, [sp, #104]
   14b9c:	lsl	x0, x0, #5
   14ba0:	ldr	x1, [sp, #64]
   14ba4:	add	x1, x1, x0
   14ba8:	mov	w0, #0x1d                  	// #29
   14bac:	and	w0, w2, w0
   14bb0:	and	w2, w0, #0xff
   14bb4:	ldrb	w0, [x1, #4]
   14bb8:	bfxil	w0, w2, #0, #5
   14bbc:	strb	w0, [x1, #4]
   14bc0:	ldr	w0, [sp, #88]
   14bc4:	cmp	w0, #0x0
   14bc8:	b.eq	14bd8 <grub_unicode_aglomerate_comb+0x1128>  // b.none
   14bcc:	ldr	w0, [sp, #88]
   14bd0:	cmp	w0, #0x1
   14bd4:	b.ne	14bdc <grub_unicode_aglomerate_comb+0x112c>  // b.any
   14bd8:	str	wzr, [sp, #108]
   14bdc:	ldr	w0, [sp, #88]
   14be0:	cmp	w0, #0x2
   14be4:	b.eq	14c00 <grub_unicode_aglomerate_comb+0x1150>  // b.none
   14be8:	ldr	w0, [sp, #88]
   14bec:	cmp	w0, #0x3
   14bf0:	b.eq	14c00 <grub_unicode_aglomerate_comb+0x1150>  // b.none
   14bf4:	ldr	w0, [sp, #88]
   14bf8:	cmp	w0, #0x4
   14bfc:	b.ne	14c08 <grub_unicode_aglomerate_comb+0x1158>  // b.any
   14c00:	mov	w0, #0x1                   	// #1
   14c04:	str	w0, [sp, #108]
   14c08:	ldr	w0, [sp, #104]
   14c0c:	add	w0, w0, #0x1
   14c10:	str	w0, [sp, #104]
   14c14:	ldr	w1, [sp, #104]
   14c18:	ldr	w0, [sp, #132]
   14c1c:	cmp	w1, w0
   14c20:	b.cc	14acc <grub_unicode_aglomerate_comb+0x101c>  // b.lo, b.ul, b.last
   14c24:	str	wzr, [sp, #100]
   14c28:	ldr	w0, [sp, #132]
   14c2c:	sub	w0, w0, #0x1
   14c30:	str	w0, [sp, #96]
   14c34:	b	14d80 <grub_unicode_aglomerate_comb+0x12d0>
   14c38:	ldrsw	x0, [sp, #96]
   14c3c:	lsl	x0, x0, #5
   14c40:	ldr	x1, [sp, #64]
   14c44:	add	x0, x1, x0
   14c48:	ldr	w0, [x0]
   14c4c:	ubfx	x0, x0, #0, #23
   14c50:	bl	134d8 <grub_utf8_to_ucs4+0x60c>
   14c54:	str	w0, [sp, #92]
   14c58:	ldrsw	x0, [sp, #96]
   14c5c:	lsl	x0, x0, #5
   14c60:	ldr	x1, [sp, #64]
   14c64:	add	x0, x1, x0
   14c68:	ldrb	w0, [x0, #4]
   14c6c:	ubfx	x0, x0, #0, #5
   14c70:	and	w0, w0, #0xff
   14c74:	and	w0, w0, #0x10
   14c78:	cmp	w0, #0x0
   14c7c:	b.ne	14d2c <grub_unicode_aglomerate_comb+0x127c>  // b.any
   14c80:	ldr	w0, [sp, #92]
   14c84:	cmp	w0, #0x2
   14c88:	b.eq	14c98 <grub_unicode_aglomerate_comb+0x11e8>  // b.none
   14c8c:	ldr	w0, [sp, #92]
   14c90:	cmp	w0, #0x3
   14c94:	b.ne	14d2c <grub_unicode_aglomerate_comb+0x127c>  // b.any
   14c98:	ldr	w0, [sp, #100]
   14c9c:	cmp	w0, #0x0
   14ca0:	b.eq	14ce8 <grub_unicode_aglomerate_comb+0x1238>  // b.none
   14ca4:	ldrsw	x0, [sp, #96]
   14ca8:	lsl	x0, x0, #5
   14cac:	ldr	x1, [sp, #64]
   14cb0:	add	x0, x1, x0
   14cb4:	ldrb	w0, [x0, #4]
   14cb8:	ubfx	x0, x0, #0, #5
   14cbc:	and	w0, w0, #0xff
   14cc0:	ldrsw	x1, [sp, #96]
   14cc4:	lsl	x1, x1, #5
   14cc8:	ldr	x2, [sp, #64]
   14ccc:	add	x1, x2, x1
   14cd0:	orr	w0, w0, #0x4
   14cd4:	and	w2, w0, #0xff
   14cd8:	ldrb	w0, [x1, #4]
   14cdc:	bfxil	w0, w2, #0, #5
   14ce0:	strb	w0, [x1, #4]
   14ce4:	b	14d2c <grub_unicode_aglomerate_comb+0x127c>
   14ce8:	ldrsw	x0, [sp, #96]
   14cec:	lsl	x0, x0, #5
   14cf0:	ldr	x1, [sp, #64]
   14cf4:	add	x0, x1, x0
   14cf8:	ldrb	w0, [x0, #4]
   14cfc:	ubfx	x0, x0, #0, #5
   14d00:	and	w2, w0, #0xff
   14d04:	ldrsw	x0, [sp, #96]
   14d08:	lsl	x0, x0, #5
   14d0c:	ldr	x1, [sp, #64]
   14d10:	add	x1, x1, x0
   14d14:	mov	w0, #0x1b                  	// #27
   14d18:	and	w0, w2, w0
   14d1c:	and	w2, w0, #0xff
   14d20:	ldrb	w0, [x1, #4]
   14d24:	bfxil	w0, w2, #0, #5
   14d28:	strb	w0, [x1, #4]
   14d2c:	ldr	w0, [sp, #92]
   14d30:	cmp	w0, #0x0
   14d34:	b.eq	14d44 <grub_unicode_aglomerate_comb+0x1294>  // b.none
   14d38:	ldr	w0, [sp, #92]
   14d3c:	cmp	w0, #0x2
   14d40:	b.ne	14d48 <grub_unicode_aglomerate_comb+0x1298>  // b.any
   14d44:	str	wzr, [sp, #100]
   14d48:	ldr	w0, [sp, #92]
   14d4c:	cmp	w0, #0x1
   14d50:	b.eq	14d6c <grub_unicode_aglomerate_comb+0x12bc>  // b.none
   14d54:	ldr	w0, [sp, #92]
   14d58:	cmp	w0, #0x3
   14d5c:	b.eq	14d6c <grub_unicode_aglomerate_comb+0x12bc>  // b.none
   14d60:	ldr	w0, [sp, #92]
   14d64:	cmp	w0, #0x4
   14d68:	b.ne	14d74 <grub_unicode_aglomerate_comb+0x12c4>  // b.any
   14d6c:	mov	w0, #0x1                   	// #1
   14d70:	str	w0, [sp, #100]
   14d74:	ldr	w0, [sp, #96]
   14d78:	sub	w0, w0, #0x1
   14d7c:	str	w0, [sp, #96]
   14d80:	ldr	w0, [sp, #96]
   14d84:	cmp	w0, #0x0
   14d88:	b.lt	14da0 <grub_unicode_aglomerate_comb+0x12f0>  // b.tstop
   14d8c:	ldr	w0, [sp, #96]
   14d90:	add	w0, w0, #0x1
   14d94:	ldr	w1, [sp, #196]
   14d98:	cmp	w1, w0
   14d9c:	b.cc	14c38 <grub_unicode_aglomerate_comb+0x1188>  // b.lo, b.ul, b.last
   14da0:	ldr	w0, [sp, #196]
   14da4:	lsl	x0, x0, #5
   14da8:	ldr	x1, [sp, #64]
   14dac:	add	x3, x1, x0
   14db0:	ldr	w1, [sp, #132]
   14db4:	ldr	w0, [sp, #196]
   14db8:	sub	w0, w1, w0
   14dbc:	mov	w0, w0
   14dc0:	lsl	x0, x0, #5
   14dc4:	mov	x2, x0
   14dc8:	mov	x1, x3
   14dcc:	ldr	x0, [sp, #200]
   14dd0:	bl	12814 <grub_context_fini+0x204>
   14dd4:	ldr	w1, [sp, #132]
   14dd8:	ldr	w0, [sp, #196]
   14ddc:	sub	w0, w1, w0
   14de0:	mov	w0, w0
   14de4:	lsl	x0, x0, #5
   14de8:	ldr	x1, [sp, #200]
   14dec:	add	x0, x1, x0
   14df0:	str	x0, [sp, #200]
   14df4:	ldr	w0, [sp, #132]
   14df8:	ldr	x1, [sp, #56]
   14dfc:	cmp	x1, x0
   14e00:	b.eq	14e74 <grub_unicode_aglomerate_comb+0x13c4>  // b.none
   14e04:	ldr	w0, [sp, #20]
   14e08:	cmp	w0, #0x0
   14e0c:	b.eq	14e44 <grub_unicode_aglomerate_comb+0x1394>  // b.none
   14e10:	mov	x2, #0x20                  	// #32
   14e14:	mov	w1, #0x0                   	// #0
   14e18:	ldr	x0, [sp, #200]
   14e1c:	bl	0 <grub_memset>
   14e20:	ldr	w0, [sp, #20]
   14e24:	and	w2, w0, #0x7fffff
   14e28:	ldr	x1, [sp, #200]
   14e2c:	ldr	w0, [x1]
   14e30:	bfxil	w0, w2, #0, #23
   14e34:	str	w0, [x1]
   14e38:	ldr	x0, [sp, #200]
   14e3c:	add	x0, x0, #0x20
   14e40:	str	x0, [sp, #200]
   14e44:	mov	x2, #0x20                  	// #32
   14e48:	mov	w1, #0x0                   	// #0
   14e4c:	ldr	x0, [sp, #200]
   14e50:	bl	0 <grub_memset>
   14e54:	ldr	x1, [sp, #200]
   14e58:	ldr	w0, [x1]
   14e5c:	mov	w2, #0xa                   	// #10
   14e60:	bfxil	w0, w2, #0, #23
   14e64:	str	w0, [x1]
   14e68:	ldr	x0, [sp, #200]
   14e6c:	add	x0, x0, #0x20
   14e70:	str	x0, [sp, #200]
   14e74:	ldr	w0, [sp, #132]
   14e78:	sxtw	x0, w0
   14e7c:	ldr	x1, [sp, #168]
   14e80:	cmp	x1, x0
   14e84:	b.ne	14e94 <grub_unicode_aglomerate_comb+0x13e4>  // b.any
   14e88:	ldr	w0, [sp, #132]
   14e8c:	add	w0, w0, #0x1
   14e90:	str	w0, [sp, #132]
   14e94:	ldr	w0, [sp, #132]
   14e98:	str	w0, [sp, #196]
   14e9c:	ldr	x0, [sp, #208]
   14ea0:	cmp	x0, #0x0
   14ea4:	b.eq	14f10 <grub_unicode_aglomerate_comb+0x1460>  // b.none
   14ea8:	ldr	w0, [sp, #132]
   14eac:	ldr	x1, [sp, #56]
   14eb0:	cmp	x1, x0
   14eb4:	b.eq	14f10 <grub_unicode_aglomerate_comb+0x1460>  // b.none
   14eb8:	ldr	w0, [sp, #132]
   14ebc:	lsl	x0, x0, #5
   14ec0:	ldr	x1, [sp, #64]
   14ec4:	add	x0, x1, x0
   14ec8:	ldr	x0, [x0, #16]
   14ecc:	lsl	x0, x0, #2
   14ed0:	ldr	x1, [sp, #208]
   14ed4:	add	x0, x1, x0
   14ed8:	ldrh	w1, [x0]
   14edc:	and	w1, w1, #0x1
   14ee0:	strh	w1, [x0]
   14ee4:	ldr	w0, [sp, #132]
   14ee8:	lsl	x0, x0, #5
   14eec:	ldr	x1, [sp, #64]
   14ef0:	add	x0, x1, x0
   14ef4:	ldr	x0, [x0, #16]
   14ef8:	lsl	x0, x0, #2
   14efc:	ldr	x1, [sp, #208]
   14f00:	add	x0, x1, x0
   14f04:	ldr	w1, [sp, #156]
   14f08:	and	w1, w1, #0xffff
   14f0c:	strh	w1, [x0, #2]
   14f10:	ldr	w0, [sp, #180]
   14f14:	add	w0, w0, #0x1
   14f18:	str	w0, [sp, #180]
   14f1c:	ldr	w0, [sp, #180]
   14f20:	ldr	x1, [sp, #56]
   14f24:	cmp	x1, x0
   14f28:	b.cs	1437c <grub_unicode_aglomerate_comb+0x8cc>  // b.hs, b.nlast
   14f2c:	ldr	x1, [sp, #200]
   14f30:	ldr	x0, [sp, #72]
   14f34:	sub	x0, x1, x0
   14f38:	asr	x0, x0, #5
   14f3c:	ldp	x29, x30, [sp], #208
   14f40:	ret
   14f44:	sub	sp, sp, #0x2f0
   14f48:	stp	x29, x30, [sp, #32]
   14f4c:	add	x29, sp, #0x20
   14f50:	str	x0, [sp, #104]
   14f54:	str	x1, [sp, #96]
   14f58:	str	x2, [sp, #88]
   14f5c:	str	x3, [sp, #80]
   14f60:	str	x4, [sp, #72]
   14f64:	str	x5, [sp, #64]
   14f68:	str	x6, [sp, #56]
   14f6c:	str	w7, [sp, #52]
   14f70:	str	wzr, [sp, #748]
   14f74:	str	wzr, [sp, #732]
   14f78:	str	wzr, [sp, #728]
   14f7c:	str	wzr, [sp, #724]
   14f80:	str	wzr, [sp, #708]
   14f84:	ldr	x0, [sp, #96]
   14f88:	lsl	x0, x0, #5
   14f8c:	bl	0 <grub_malloc>
   14f90:	str	x0, [sp, #648]
   14f94:	ldr	x0, [sp, #648]
   14f98:	cmp	x0, #0x0
   14f9c:	b.ne	14fa8 <grub_unicode_aglomerate_comb+0x14f8>  // b.any
   14fa0:	mov	x0, #0xffffffffffffffff    	// #-1
   14fa4:	b	162a0 <grub_unicode_aglomerate_comb+0x27f0>
   14fa8:	str	wzr, [sp, #736]
   14fac:	b	14ffc <grub_unicode_aglomerate_comb+0x154c>
   14fb0:	ldr	w0, [sp, #736]
   14fb4:	lsl	x0, x0, #2
   14fb8:	ldr	x1, [sp, #104]
   14fbc:	add	x0, x1, x0
   14fc0:	ldr	w0, [x0]
   14fc4:	bl	13368 <grub_utf8_to_ucs4+0x49c>
   14fc8:	str	w0, [sp, #748]
   14fcc:	ldr	w0, [sp, #748]
   14fd0:	cmp	w0, #0x0
   14fd4:	b.eq	1500c <grub_unicode_aglomerate_comb+0x155c>  // b.none
   14fd8:	ldr	w0, [sp, #748]
   14fdc:	cmp	w0, #0x4
   14fe0:	b.eq	1500c <grub_unicode_aglomerate_comb+0x155c>  // b.none
   14fe4:	ldr	w0, [sp, #748]
   14fe8:	cmp	w0, #0x3
   14fec:	b.eq	1500c <grub_unicode_aglomerate_comb+0x155c>  // b.none
   14ff0:	ldr	w0, [sp, #736]
   14ff4:	add	w0, w0, #0x1
   14ff8:	str	w0, [sp, #736]
   14ffc:	ldr	w0, [sp, #736]
   15000:	ldr	x1, [sp, #96]
   15004:	cmp	x1, x0
   15008:	b.hi	14fb0 <grub_unicode_aglomerate_comb+0x1500>  // b.pmore
   1500c:	ldr	w0, [sp, #748]
   15010:	cmp	w0, #0x3
   15014:	b.eq	15024 <grub_unicode_aglomerate_comb+0x1574>  // b.none
   15018:	ldr	w0, [sp, #748]
   1501c:	cmp	w0, #0x4
   15020:	b.ne	15030 <grub_unicode_aglomerate_comb+0x1580>  // b.any
   15024:	mov	w0, #0x1                   	// #1
   15028:	str	w0, [sp, #744]
   1502c:	b	15034 <grub_unicode_aglomerate_comb+0x1584>
   15030:	str	wzr, [sp, #744]
   15034:	ldr	w0, [sp, #744]
   15038:	str	w0, [sp, #712]
   1503c:	str	wzr, [sp, #740]
   15040:	str	wzr, [sp, #692]
   15044:	str	wzr, [sp, #688]
   15048:	ldr	x0, [sp, #104]
   1504c:	str	x0, [sp, #696]
   15050:	b	15700 <grub_unicode_aglomerate_comb+0x1c50>
   15054:	ldr	x0, [sp, #696]
   15058:	ldr	w1, [x0]
   1505c:	mov	w0, #0x200d                	// #8205
   15060:	cmp	w1, w0
   15064:	b.ne	150e4 <grub_unicode_aglomerate_comb+0x1634>  // b.any
   15068:	ldr	w0, [sp, #688]
   1506c:	cmp	w0, #0x0
   15070:	b.eq	150c8 <grub_unicode_aglomerate_comb+0x1618>  // b.none
   15074:	ldr	w0, [sp, #724]
   15078:	sub	w0, w0, #0x1
   1507c:	mov	w0, w0
   15080:	lsl	x0, x0, #5
   15084:	ldr	x1, [sp, #648]
   15088:	add	x0, x1, x0
   1508c:	ldrb	w0, [x0, #4]
   15090:	ubfx	x0, x0, #0, #5
   15094:	and	w2, w0, #0xff
   15098:	ldr	w0, [sp, #724]
   1509c:	sub	w0, w0, #0x1
   150a0:	mov	w0, w0
   150a4:	lsl	x0, x0, #5
   150a8:	ldr	x1, [sp, #648]
   150ac:	add	x1, x1, x0
   150b0:	mov	w0, #0x14                  	// #20
   150b4:	orr	w0, w2, w0
   150b8:	and	w2, w0, #0xff
   150bc:	ldrb	w0, [x1, #4]
   150c0:	bfxil	w0, w2, #0, #5
   150c4:	strb	w0, [x1, #4]
   150c8:	str	wzr, [sp, #688]
   150cc:	mov	w0, #0x2                   	// #2
   150d0:	str	w0, [sp, #692]
   150d4:	ldr	x0, [sp, #696]
   150d8:	add	x0, x0, #0x4
   150dc:	str	x0, [sp, #696]
   150e0:	b	15700 <grub_unicode_aglomerate_comb+0x1c50>
   150e4:	ldr	x0, [sp, #696]
   150e8:	ldr	w1, [x0]
   150ec:	mov	w0, #0x200c                	// #8204
   150f0:	cmp	w1, w0
   150f4:	b.ne	151c4 <grub_unicode_aglomerate_comb+0x1714>  // b.any
   150f8:	ldr	w0, [sp, #688]
   150fc:	cmp	w0, #0x0
   15100:	b.eq	151a8 <grub_unicode_aglomerate_comb+0x16f8>  // b.none
   15104:	ldr	w0, [sp, #724]
   15108:	sub	w0, w0, #0x1
   1510c:	mov	w0, w0
   15110:	lsl	x0, x0, #5
   15114:	ldr	x1, [sp, #648]
   15118:	add	x0, x1, x0
   1511c:	ldrb	w0, [x0, #4]
   15120:	ubfx	x0, x0, #0, #5
   15124:	and	w0, w0, #0xff
   15128:	ldr	w1, [sp, #724]
   1512c:	sub	w1, w1, #0x1
   15130:	mov	w1, w1
   15134:	lsl	x1, x1, #5
   15138:	ldr	x2, [sp, #648]
   1513c:	add	x1, x2, x1
   15140:	orr	w0, w0, #0x10
   15144:	and	w2, w0, #0xff
   15148:	ldrb	w0, [x1, #4]
   1514c:	bfxil	w0, w2, #0, #5
   15150:	strb	w0, [x1, #4]
   15154:	ldr	w0, [sp, #724]
   15158:	sub	w0, w0, #0x1
   1515c:	mov	w0, w0
   15160:	lsl	x0, x0, #5
   15164:	ldr	x1, [sp, #648]
   15168:	add	x0, x1, x0
   1516c:	ldrb	w0, [x0, #4]
   15170:	ubfx	x0, x0, #0, #5
   15174:	and	w2, w0, #0xff
   15178:	ldr	w0, [sp, #724]
   1517c:	sub	w0, w0, #0x1
   15180:	mov	w0, w0
   15184:	lsl	x0, x0, #5
   15188:	ldr	x1, [sp, #648]
   1518c:	add	x1, x1, x0
   15190:	mov	w0, #0x1b                  	// #27
   15194:	and	w0, w2, w0
   15198:	and	w2, w0, #0xff
   1519c:	ldrb	w0, [x1, #4]
   151a0:	bfxil	w0, w2, #0, #5
   151a4:	strb	w0, [x1, #4]
   151a8:	str	wzr, [sp, #688]
   151ac:	mov	w0, #0x1                   	// #1
   151b0:	str	w0, [sp, #692]
   151b4:	ldr	x0, [sp, #696]
   151b8:	add	x0, x0, #0x4
   151bc:	str	x0, [sp, #696]
   151c0:	b	15700 <grub_unicode_aglomerate_comb+0x1c50>
   151c4:	ldr	x0, [sp, #696]
   151c8:	ldr	w1, [x0]
   151cc:	mov	w0, #0xdffff               	// #917503
   151d0:	cmp	w1, w0
   151d4:	b.ls	151f4 <grub_unicode_aglomerate_comb+0x1744>  // b.plast
   151d8:	ldr	x0, [sp, #696]
   151dc:	ldr	w1, [x0]
   151e0:	mov	w0, #0x7f                  	// #127
   151e4:	movk	w0, #0xe, lsl #16
   151e8:	cmp	w1, w0
   151ec:	b.hi	151f4 <grub_unicode_aglomerate_comb+0x1744>  // b.pmore
   151f0:	b	15700 <grub_unicode_aglomerate_comb+0x1c50>
   151f4:	ldr	x0, [sp, #96]
   151f8:	lsl	x0, x0, #2
   151fc:	ldr	x1, [sp, #104]
   15200:	add	x1, x1, x0
   15204:	ldr	x0, [sp, #696]
   15208:	sub	x0, x1, x0
   1520c:	asr	x0, x0, #2
   15210:	mov	x3, x0
   15214:	ldr	w0, [sp, #724]
   15218:	lsl	x0, x0, #5
   1521c:	ldr	x1, [sp, #648]
   15220:	add	x0, x1, x0
   15224:	mov	x2, x0
   15228:	mov	x1, x3
   1522c:	ldr	x0, [sp, #696]
   15230:	bl	13ab0 <grub_unicode_aglomerate_comb>
   15234:	str	x0, [sp, #624]
   15238:	ldr	x1, [sp, #696]
   1523c:	ldr	x0, [sp, #104]
   15240:	sub	x0, x1, x0
   15244:	asr	x0, x0, #2
   15248:	mov	x2, x0
   1524c:	ldr	w0, [sp, #724]
   15250:	lsl	x0, x0, #5
   15254:	ldr	x1, [sp, #648]
   15258:	add	x0, x1, x0
   1525c:	mov	x1, x2
   15260:	str	x1, [x0, #16]
   15264:	ldr	w0, [sp, #724]
   15268:	lsl	x0, x0, #5
   1526c:	ldr	x1, [sp, #648]
   15270:	add	x0, x1, x0
   15274:	ldr	w0, [x0]
   15278:	ubfx	x0, x0, #0, #23
   1527c:	bl	13368 <grub_utf8_to_ucs4+0x49c>
   15280:	str	w0, [sp, #748]
   15284:	ldr	w0, [sp, #748]
   15288:	cmp	w0, #0xe
   1528c:	b.eq	156e0 <grub_unicode_aglomerate_comb+0x1c30>  // b.none
   15290:	ldr	w0, [sp, #748]
   15294:	cmp	w0, #0xe
   15298:	b.hi	15550 <grub_unicode_aglomerate_comb+0x1aa0>  // b.pmore
   1529c:	ldr	w0, [sp, #748]
   152a0:	cmp	w0, #0x7
   152a4:	b.eq	154e8 <grub_unicode_aglomerate_comb+0x1a38>  // b.none
   152a8:	ldr	w0, [sp, #748]
   152ac:	cmp	w0, #0x7
   152b0:	b.hi	15550 <grub_unicode_aglomerate_comb+0x1aa0>  // b.pmore
   152b4:	ldr	w0, [sp, #748]
   152b8:	cmp	w0, #0x6
   152bc:	b.eq	1538c <grub_unicode_aglomerate_comb+0x18dc>  // b.none
   152c0:	ldr	w0, [sp, #748]
   152c4:	cmp	w0, #0x6
   152c8:	b.hi	15550 <grub_unicode_aglomerate_comb+0x1aa0>  // b.pmore
   152cc:	ldr	w0, [sp, #748]
   152d0:	cmp	w0, #0x5
   152d4:	b.eq	15318 <grub_unicode_aglomerate_comb+0x1868>  // b.none
   152d8:	ldr	w0, [sp, #748]
   152dc:	cmp	w0, #0x5
   152e0:	b.hi	15550 <grub_unicode_aglomerate_comb+0x1aa0>  // b.pmore
   152e4:	ldr	w0, [sp, #748]
   152e8:	cmp	w0, #0x4
   152ec:	b.hi	15550 <grub_unicode_aglomerate_comb+0x1aa0>  // b.pmore
   152f0:	ldr	w0, [sp, #748]
   152f4:	cmp	w0, #0x3
   152f8:	b.cs	15548 <grub_unicode_aglomerate_comb+0x1a98>  // b.hs, b.nlast
   152fc:	ldr	w0, [sp, #748]
   15300:	cmp	w0, #0x1
   15304:	b.eq	15408 <grub_unicode_aglomerate_comb+0x1958>  // b.none
   15308:	ldr	w0, [sp, #748]
   1530c:	cmp	w0, #0x2
   15310:	b.eq	15474 <grub_unicode_aglomerate_comb+0x19c4>  // b.none
   15314:	b	15550 <grub_unicode_aglomerate_comb+0x1aa0>
   15318:	mov	w0, #0x1                   	// #1
   1531c:	str	w0, [sp, #708]
   15320:	ldr	w0, [sp, #712]
   15324:	orr	w0, w0, #0x1
   15328:	add	w0, w0, #0x1
   1532c:	cmp	w0, #0x3d
   15330:	b.ls	15344 <grub_unicode_aglomerate_comb+0x1894>  // b.plast
   15334:	ldr	w0, [sp, #728]
   15338:	add	w0, w0, #0x1
   1533c:	str	w0, [sp, #728]
   15340:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   15344:	ldr	w0, [sp, #732]
   15348:	lsl	x0, x0, #2
   1534c:	add	x1, sp, #0x170
   15350:	ldr	w2, [sp, #712]
   15354:	str	w2, [x1, x0]
   15358:	ldr	w0, [sp, #732]
   1535c:	lsl	x0, x0, #2
   15360:	add	x1, sp, #0x70
   15364:	ldr	w2, [sp, #740]
   15368:	str	w2, [x1, x0]
   1536c:	ldr	w0, [sp, #732]
   15370:	add	w0, w0, #0x1
   15374:	str	w0, [sp, #732]
   15378:	ldr	w0, [sp, #712]
   1537c:	orr	w0, w0, #0x1
   15380:	add	w0, w0, #0x1
   15384:	str	w0, [sp, #712]
   15388:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   1538c:	mov	w0, #0x1                   	// #1
   15390:	str	w0, [sp, #708]
   15394:	ldr	w0, [sp, #712]
   15398:	orr	w0, w0, #0x1
   1539c:	add	w0, w0, #0x1
   153a0:	cmp	w0, #0x3d
   153a4:	b.ls	153b8 <grub_unicode_aglomerate_comb+0x1908>  // b.plast
   153a8:	ldr	w0, [sp, #728]
   153ac:	add	w0, w0, #0x1
   153b0:	str	w0, [sp, #728]
   153b4:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   153b8:	ldr	w0, [sp, #732]
   153bc:	lsl	x0, x0, #2
   153c0:	add	x1, sp, #0x170
   153c4:	ldr	w2, [sp, #712]
   153c8:	str	w2, [x1, x0]
   153cc:	ldr	w0, [sp, #732]
   153d0:	lsl	x0, x0, #2
   153d4:	add	x1, sp, #0x70
   153d8:	ldr	w2, [sp, #740]
   153dc:	str	w2, [x1, x0]
   153e0:	ldr	w0, [sp, #732]
   153e4:	add	w0, w0, #0x1
   153e8:	str	w0, [sp, #732]
   153ec:	ldr	w0, [sp, #712]
   153f0:	orr	w0, w0, #0x1
   153f4:	add	w0, w0, #0x1
   153f8:	str	w0, [sp, #712]
   153fc:	mov	w0, #0x1                   	// #1
   15400:	str	w0, [sp, #740]
   15404:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   15408:	ldr	w0, [sp, #712]
   1540c:	and	w0, w0, #0xfffffffe
   15410:	add	w0, w0, #0x2
   15414:	cmp	w0, #0x3d
   15418:	b.ls	1542c <grub_unicode_aglomerate_comb+0x197c>  // b.plast
   1541c:	ldr	w0, [sp, #728]
   15420:	add	w0, w0, #0x1
   15424:	str	w0, [sp, #728]
   15428:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   1542c:	ldr	w0, [sp, #732]
   15430:	lsl	x0, x0, #2
   15434:	add	x1, sp, #0x170
   15438:	ldr	w2, [sp, #712]
   1543c:	str	w2, [x1, x0]
   15440:	ldr	w0, [sp, #732]
   15444:	lsl	x0, x0, #2
   15448:	add	x1, sp, #0x70
   1544c:	ldr	w2, [sp, #740]
   15450:	str	w2, [x1, x0]
   15454:	ldr	w0, [sp, #732]
   15458:	add	w0, w0, #0x1
   1545c:	str	w0, [sp, #732]
   15460:	ldr	w0, [sp, #712]
   15464:	and	w0, w0, #0xfffffffe
   15468:	add	w0, w0, #0x2
   1546c:	str	w0, [sp, #712]
   15470:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   15474:	ldr	w0, [sp, #712]
   15478:	and	w0, w0, #0xfffffffe
   1547c:	add	w0, w0, #0x2
   15480:	cmp	w0, #0x3d
   15484:	b.ls	15498 <grub_unicode_aglomerate_comb+0x19e8>  // b.plast
   15488:	ldr	w0, [sp, #728]
   1548c:	add	w0, w0, #0x1
   15490:	str	w0, [sp, #728]
   15494:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   15498:	ldr	w0, [sp, #732]
   1549c:	lsl	x0, x0, #2
   154a0:	add	x1, sp, #0x170
   154a4:	ldr	w2, [sp, #712]
   154a8:	str	w2, [x1, x0]
   154ac:	ldr	w0, [sp, #732]
   154b0:	lsl	x0, x0, #2
   154b4:	add	x1, sp, #0x70
   154b8:	ldr	w2, [sp, #740]
   154bc:	str	w2, [x1, x0]
   154c0:	ldr	w0, [sp, #732]
   154c4:	add	w0, w0, #0x1
   154c8:	str	w0, [sp, #732]
   154cc:	ldr	w0, [sp, #712]
   154d0:	and	w0, w0, #0xfffffffe
   154d4:	add	w0, w0, #0x2
   154d8:	str	w0, [sp, #712]
   154dc:	mov	w0, #0x2                   	// #2
   154e0:	str	w0, [sp, #740]
   154e4:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   154e8:	ldr	w0, [sp, #728]
   154ec:	cmp	w0, #0x0
   154f0:	b.eq	15504 <grub_unicode_aglomerate_comb+0x1a54>  // b.none
   154f4:	ldr	w0, [sp, #728]
   154f8:	sub	w0, w0, #0x1
   154fc:	str	w0, [sp, #728]
   15500:	b	156e8 <grub_unicode_aglomerate_comb+0x1c38>
   15504:	ldr	w0, [sp, #732]
   15508:	cmp	w0, #0x0
   1550c:	b.eq	156e8 <grub_unicode_aglomerate_comb+0x1c38>  // b.none
   15510:	ldr	w0, [sp, #732]
   15514:	sub	w0, w0, #0x1
   15518:	str	w0, [sp, #732]
   1551c:	ldr	w0, [sp, #732]
   15520:	lsl	x0, x0, #2
   15524:	add	x1, sp, #0x170
   15528:	ldr	w0, [x1, x0]
   1552c:	str	w0, [sp, #712]
   15530:	ldr	w0, [sp, #732]
   15534:	lsl	x0, x0, #2
   15538:	add	x1, sp, #0x70
   1553c:	ldr	w0, [x1, x0]
   15540:	str	w0, [sp, #740]
   15544:	b	156e8 <grub_unicode_aglomerate_comb+0x1c38>
   15548:	mov	w0, #0x1                   	// #1
   1554c:	str	w0, [sp, #708]
   15550:	ldr	w0, [sp, #692]
   15554:	cmp	w0, #0x2
   15558:	b.ne	155a0 <grub_unicode_aglomerate_comb+0x1af0>  // b.any
   1555c:	ldr	w0, [sp, #724]
   15560:	lsl	x0, x0, #5
   15564:	ldr	x1, [sp, #648]
   15568:	add	x0, x1, x0
   1556c:	ldrb	w0, [x0, #4]
   15570:	ubfx	x0, x0, #0, #5
   15574:	and	w2, w0, #0xff
   15578:	ldr	w0, [sp, #724]
   1557c:	lsl	x0, x0, #5
   15580:	ldr	x1, [sp, #648]
   15584:	add	x1, x1, x0
   15588:	mov	w0, #0xa                   	// #10
   1558c:	orr	w0, w2, w0
   15590:	and	w2, w0, #0xff
   15594:	ldrb	w0, [x1, #4]
   15598:	bfxil	w0, w2, #0, #5
   1559c:	strb	w0, [x1, #4]
   155a0:	ldr	w0, [sp, #692]
   155a4:	cmp	w0, #0x1
   155a8:	b.ne	15630 <grub_unicode_aglomerate_comb+0x1b80>  // b.any
   155ac:	ldr	w0, [sp, #724]
   155b0:	lsl	x0, x0, #5
   155b4:	ldr	x1, [sp, #648]
   155b8:	add	x0, x1, x0
   155bc:	ldrb	w0, [x0, #4]
   155c0:	ubfx	x0, x0, #0, #5
   155c4:	and	w0, w0, #0xff
   155c8:	ldr	w1, [sp, #724]
   155cc:	lsl	x1, x1, #5
   155d0:	ldr	x2, [sp, #648]
   155d4:	add	x1, x2, x1
   155d8:	orr	w0, w0, #0x8
   155dc:	and	w2, w0, #0xff
   155e0:	ldrb	w0, [x1, #4]
   155e4:	bfxil	w0, w2, #0, #5
   155e8:	strb	w0, [x1, #4]
   155ec:	ldr	w0, [sp, #724]
   155f0:	lsl	x0, x0, #5
   155f4:	ldr	x1, [sp, #648]
   155f8:	add	x0, x1, x0
   155fc:	ldrb	w0, [x0, #4]
   15600:	ubfx	x0, x0, #0, #5
   15604:	and	w2, w0, #0xff
   15608:	ldr	w0, [sp, #724]
   1560c:	lsl	x0, x0, #5
   15610:	ldr	x1, [sp, #648]
   15614:	add	x1, x1, x0
   15618:	mov	w0, #0x1d                  	// #29
   1561c:	and	w0, w2, w0
   15620:	and	w2, w0, #0xff
   15624:	ldrb	w0, [x1, #4]
   15628:	bfxil	w0, w2, #0, #5
   1562c:	strb	w0, [x1, #4]
   15630:	str	wzr, [sp, #692]
   15634:	mov	w0, #0x1                   	// #1
   15638:	str	w0, [sp, #688]
   1563c:	ldr	w0, [sp, #724]
   15640:	lsl	x0, x0, #5
   15644:	ldr	x1, [sp, #648]
   15648:	add	x1, x1, x0
   1564c:	ldr	w0, [sp, #712]
   15650:	and	w0, w0, #0x3f
   15654:	and	w2, w0, #0xff
   15658:	ldrb	w0, [x1, #5]
   1565c:	bfxil	w0, w2, #0, #6
   15660:	strb	w0, [x1, #5]
   15664:	ldr	w0, [sp, #740]
   15668:	cmp	w0, #0x0
   1566c:	b.eq	156a8 <grub_unicode_aglomerate_comb+0x1bf8>  // b.none
   15670:	ldr	w0, [sp, #740]
   15674:	cmp	w0, #0x2
   15678:	b.ne	15684 <grub_unicode_aglomerate_comb+0x1bd4>  // b.any
   1567c:	mov	w2, #0x0                   	// #0
   15680:	b	15688 <grub_unicode_aglomerate_comb+0x1bd8>
   15684:	mov	w2, #0x3                   	// #3
   15688:	ldr	w0, [sp, #724]
   1568c:	lsl	x0, x0, #5
   15690:	ldr	x1, [sp, #648]
   15694:	add	x1, x1, x0
   15698:	ldr	w0, [x1, #4]
   1569c:	bfi	w0, w2, #14, #5
   156a0:	str	w0, [x1, #4]
   156a4:	b	156d0 <grub_unicode_aglomerate_comb+0x1c20>
   156a8:	ldr	w0, [sp, #724]
   156ac:	lsl	x0, x0, #5
   156b0:	ldr	x1, [sp, #648]
   156b4:	add	x1, x1, x0
   156b8:	ldr	w0, [sp, #748]
   156bc:	and	w0, w0, #0x1f
   156c0:	and	w2, w0, #0xff
   156c4:	ldr	w0, [x1, #4]
   156c8:	bfi	w0, w2, #14, #5
   156cc:	str	w0, [x1, #4]
   156d0:	ldr	w0, [sp, #724]
   156d4:	add	w0, w0, #0x1
   156d8:	str	w0, [sp, #724]
   156dc:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   156e0:	nop
   156e4:	b	156ec <grub_unicode_aglomerate_comb+0x1c3c>
   156e8:	nop
   156ec:	ldr	x0, [sp, #624]
   156f0:	lsl	x0, x0, #2
   156f4:	ldr	x1, [sp, #696]
   156f8:	add	x0, x1, x0
   156fc:	str	x0, [sp, #696]
   15700:	ldr	x0, [sp, #96]
   15704:	lsl	x0, x0, #2
   15708:	ldr	x1, [sp, #104]
   1570c:	add	x0, x1, x0
   15710:	ldr	x1, [sp, #696]
   15714:	cmp	x1, x0
   15718:	b.cc	15054 <grub_unicode_aglomerate_comb+0x15a4>  // b.lo, b.ul, b.last
   1571c:	ldr	w0, [sp, #708]
   15720:	cmp	w0, #0x0
   15724:	b.eq	16210 <grub_unicode_aglomerate_comb+0x2760>  // b.none
   15728:	str	wzr, [sp, #720]
   1572c:	b	15fe0 <grub_unicode_aglomerate_comb+0x2530>
   15730:	ldr	w0, [sp, #720]
   15734:	str	w0, [sp, #716]
   15738:	b	15748 <grub_unicode_aglomerate_comb+0x1c98>
   1573c:	ldr	w0, [sp, #716]
   15740:	add	w0, w0, #0x1
   15744:	str	w0, [sp, #716]
   15748:	ldr	w1, [sp, #716]
   1574c:	ldr	w0, [sp, #724]
   15750:	cmp	w1, w0
   15754:	b.cs	15798 <grub_unicode_aglomerate_comb+0x1ce8>  // b.hs, b.nlast
   15758:	ldr	w0, [sp, #716]
   1575c:	lsl	x0, x0, #5
   15760:	ldr	x1, [sp, #648]
   15764:	add	x0, x1, x0
   15768:	ldrb	w0, [x0, #5]
   1576c:	ubfx	x0, x0, #0, #6
   15770:	and	w1, w0, #0xff
   15774:	ldr	w0, [sp, #720]
   15778:	lsl	x0, x0, #5
   1577c:	ldr	x2, [sp, #648]
   15780:	add	x0, x2, x0
   15784:	ldrb	w0, [x0, #5]
   15788:	ubfx	x0, x0, #0, #6
   1578c:	and	w0, w0, #0xff
   15790:	cmp	w1, w0
   15794:	b.eq	1573c <grub_unicode_aglomerate_comb+0x1c8c>  // b.none
   15798:	ldr	w0, [sp, #720]
   1579c:	cmp	w0, #0x0
   157a0:	b.ne	157b0 <grub_unicode_aglomerate_comb+0x1d00>  // b.any
   157a4:	ldr	w0, [sp, #744]
   157a8:	str	w0, [sp, #684]
   157ac:	b	157d8 <grub_unicode_aglomerate_comb+0x1d28>
   157b0:	ldr	w0, [sp, #720]
   157b4:	sub	w0, w0, #0x1
   157b8:	mov	w0, w0
   157bc:	lsl	x0, x0, #5
   157c0:	ldr	x1, [sp, #648]
   157c4:	add	x0, x1, x0
   157c8:	ldrb	w0, [x0, #5]
   157cc:	ubfx	x0, x0, #0, #6
   157d0:	and	w0, w0, #0xff
   157d4:	str	w0, [sp, #684]
   157d8:	ldr	w1, [sp, #716]
   157dc:	ldr	w0, [sp, #724]
   157e0:	cmp	w1, w0
   157e4:	b.ne	157f4 <grub_unicode_aglomerate_comb+0x1d44>  // b.any
   157e8:	ldr	w0, [sp, #744]
   157ec:	str	w0, [sp, #680]
   157f0:	b	15814 <grub_unicode_aglomerate_comb+0x1d64>
   157f4:	ldr	w0, [sp, #716]
   157f8:	lsl	x0, x0, #5
   157fc:	ldr	x1, [sp, #648]
   15800:	add	x0, x1, x0
   15804:	ldrb	w0, [x0, #5]
   15808:	ubfx	x0, x0, #0, #6
   1580c:	and	w0, w0, #0xff
   15810:	str	w0, [sp, #680]
   15814:	ldr	w0, [sp, #720]
   15818:	lsl	x0, x0, #5
   1581c:	ldr	x1, [sp, #648]
   15820:	add	x0, x1, x0
   15824:	ldrb	w0, [x0, #5]
   15828:	ubfx	x0, x0, #0, #6
   1582c:	and	w0, w0, #0xff
   15830:	str	w0, [sp, #644]
   15834:	ldr	w0, [sp, #684]
   15838:	and	w0, w0, #0x1
   1583c:	cmp	w0, #0x0
   15840:	b.eq	15850 <grub_unicode_aglomerate_comb+0x1da0>  // b.none
   15844:	mov	w0, #0x3                   	// #3
   15848:	str	w0, [sp, #676]
   1584c:	b	15854 <grub_unicode_aglomerate_comb+0x1da4>
   15850:	str	wzr, [sp, #676]
   15854:	ldr	w0, [sp, #676]
   15858:	str	w0, [sp, #672]
   1585c:	ldr	w0, [sp, #720]
   15860:	str	w0, [sp, #736]
   15864:	b	15d80 <grub_unicode_aglomerate_comb+0x22d0>
   15868:	ldr	w0, [sp, #736]
   1586c:	lsl	x0, x0, #5
   15870:	ldr	x1, [sp, #648]
   15874:	add	x0, x1, x0
   15878:	ldr	w0, [x0, #4]
   1587c:	ubfx	x0, x0, #14, #5
   15880:	and	w0, w0, #0xff
   15884:	cmp	w0, #0xd
   15888:	b.eq	158f8 <grub_unicode_aglomerate_comb+0x1e48>  // b.none
   1588c:	cmp	w0, #0xd
   15890:	b.gt	15d00 <grub_unicode_aglomerate_comb+0x2250>
   15894:	cmp	w0, #0xc
   15898:	b.eq	15b8c <grub_unicode_aglomerate_comb+0x20dc>  // b.none
   1589c:	cmp	w0, #0xc
   158a0:	b.gt	15d00 <grub_unicode_aglomerate_comb+0x2250>
   158a4:	cmp	w0, #0xa
   158a8:	b.eq	15a08 <grub_unicode_aglomerate_comb+0x1f58>  // b.none
   158ac:	cmp	w0, #0xa
   158b0:	b.gt	15d00 <grub_unicode_aglomerate_comb+0x2250>
   158b4:	cmp	w0, #0x9
   158b8:	b.eq	15978 <grub_unicode_aglomerate_comb+0x1ec8>  // b.none
   158bc:	cmp	w0, #0x9
   158c0:	b.gt	15d00 <grub_unicode_aglomerate_comb+0x2250>
   158c4:	cmp	w0, #0x8
   158c8:	b.eq	15924 <grub_unicode_aglomerate_comb+0x1e74>  // b.none
   158cc:	cmp	w0, #0x8
   158d0:	b.gt	15d00 <grub_unicode_aglomerate_comb+0x2250>
   158d4:	cmp	w0, #0x4
   158d8:	b.eq	15cbc <grub_unicode_aglomerate_comb+0x220c>  // b.none
   158dc:	cmp	w0, #0x4
   158e0:	b.gt	15d00 <grub_unicode_aglomerate_comb+0x2250>
   158e4:	cmp	w0, #0x0
   158e8:	b.eq	15954 <grub_unicode_aglomerate_comb+0x1ea4>  // b.none
   158ec:	cmp	w0, #0x3
   158f0:	b.eq	15954 <grub_unicode_aglomerate_comb+0x1ea4>  // b.none
   158f4:	b	15d00 <grub_unicode_aglomerate_comb+0x2250>
   158f8:	ldr	w0, [sp, #736]
   158fc:	lsl	x0, x0, #5
   15900:	ldr	x1, [sp, #648]
   15904:	add	x1, x1, x0
   15908:	ldr	w0, [sp, #676]
   1590c:	and	w0, w0, #0x1f
   15910:	and	w2, w0, #0xff
   15914:	ldr	w0, [x1, #4]
   15918:	bfi	w0, w2, #14, #5
   1591c:	str	w0, [x1, #4]
   15920:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15924:	ldr	w0, [sp, #672]
   15928:	cmp	w0, #0x4
   1592c:	b.ne	15d08 <grub_unicode_aglomerate_comb+0x2258>  // b.any
   15930:	ldr	w0, [sp, #736]
   15934:	lsl	x0, x0, #5
   15938:	ldr	x1, [sp, #648]
   1593c:	add	x1, x1, x0
   15940:	ldr	w0, [x1, #4]
   15944:	mov	w2, #0xb                   	// #11
   15948:	bfi	w0, w2, #14, #5
   1594c:	str	w0, [x1, #4]
   15950:	b	15d08 <grub_unicode_aglomerate_comb+0x2258>
   15954:	ldr	w0, [sp, #736]
   15958:	lsl	x0, x0, #5
   1595c:	ldr	x1, [sp, #648]
   15960:	add	x0, x1, x0
   15964:	ldr	w0, [x0, #4]
   15968:	ubfx	x0, x0, #14, #5
   1596c:	and	w0, w0, #0xff
   15970:	str	w0, [sp, #672]
   15974:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15978:	ldr	w0, [sp, #676]
   1597c:	cmp	w0, #0x8
   15980:	b.ne	159e4 <grub_unicode_aglomerate_comb+0x1f34>  // b.any
   15984:	ldr	w0, [sp, #736]
   15988:	add	w0, w0, #0x1
   1598c:	ldr	w1, [sp, #716]
   15990:	cmp	w1, w0
   15994:	b.ls	159e4 <grub_unicode_aglomerate_comb+0x1f34>  // b.plast
   15998:	ldr	w0, [sp, #736]
   1599c:	add	w0, w0, #0x1
   159a0:	mov	w0, w0
   159a4:	lsl	x0, x0, #5
   159a8:	ldr	x1, [sp, #648]
   159ac:	add	x0, x1, x0
   159b0:	ldr	w0, [x0, #4]
   159b4:	and	w0, w0, #0x7c000
   159b8:	cmp	w0, #0x20, lsl #12
   159bc:	b.ne	159e4 <grub_unicode_aglomerate_comb+0x1f34>  // b.any
   159c0:	ldr	w0, [sp, #736]
   159c4:	lsl	x0, x0, #5
   159c8:	ldr	x1, [sp, #648]
   159cc:	add	x1, x1, x0
   159d0:	ldr	w0, [x1, #4]
   159d4:	mov	w2, #0x8                   	// #8
   159d8:	bfi	w0, w2, #14, #5
   159dc:	str	w0, [x1, #4]
   159e0:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   159e4:	ldr	w0, [sp, #736]
   159e8:	lsl	x0, x0, #5
   159ec:	ldr	x1, [sp, #648]
   159f0:	add	x1, x1, x0
   159f4:	ldr	w0, [x1, #4]
   159f8:	mov	w2, #0x12                  	// #18
   159fc:	bfi	w0, w2, #14, #5
   15a00:	str	w0, [x1, #4]
   15a04:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15a08:	ldr	w0, [sp, #676]
   15a0c:	cmp	w0, #0x8
   15a10:	b.ne	15a38 <grub_unicode_aglomerate_comb+0x1f88>  // b.any
   15a14:	ldr	w0, [sp, #736]
   15a18:	lsl	x0, x0, #5
   15a1c:	ldr	x1, [sp, #648]
   15a20:	add	x1, x1, x0
   15a24:	ldr	w0, [x1, #4]
   15a28:	mov	w2, #0x8                   	// #8
   15a2c:	bfi	w0, w2, #14, #5
   15a30:	str	w0, [x1, #4]
   15a34:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15a38:	ldr	w0, [sp, #736]
   15a3c:	str	w0, [sp, #668]
   15a40:	b	15a50 <grub_unicode_aglomerate_comb+0x1fa0>
   15a44:	ldr	w0, [sp, #668]
   15a48:	add	w0, w0, #0x1
   15a4c:	str	w0, [sp, #668]
   15a50:	ldr	w1, [sp, #668]
   15a54:	ldr	w0, [sp, #716]
   15a58:	cmp	w1, w0
   15a5c:	b.cs	15a80 <grub_unicode_aglomerate_comb+0x1fd0>  // b.hs, b.nlast
   15a60:	ldr	w0, [sp, #668]
   15a64:	lsl	x0, x0, #5
   15a68:	ldr	x1, [sp, #648]
   15a6c:	add	x0, x1, x0
   15a70:	ldr	w0, [x0, #4]
   15a74:	and	w0, w0, #0x7c000
   15a78:	cmp	w0, #0x28, lsl #12
   15a7c:	b.eq	15a44 <grub_unicode_aglomerate_comb+0x1f94>  // b.none
   15a80:	ldr	w1, [sp, #668]
   15a84:	ldr	w0, [sp, #716]
   15a88:	cmp	w1, w0
   15a8c:	b.eq	15b4c <grub_unicode_aglomerate_comb+0x209c>  // b.none
   15a90:	ldr	w0, [sp, #668]
   15a94:	lsl	x0, x0, #5
   15a98:	ldr	x1, [sp, #648]
   15a9c:	add	x0, x1, x0
   15aa0:	ldr	w0, [x0, #4]
   15aa4:	and	w0, w0, #0x7c000
   15aa8:	cmp	w0, #0x20, lsl #12
   15aac:	b.ne	15b4c <grub_unicode_aglomerate_comb+0x209c>  // b.any
   15ab0:	b	15ae0 <grub_unicode_aglomerate_comb+0x2030>
   15ab4:	ldr	w0, [sp, #736]
   15ab8:	lsl	x0, x0, #5
   15abc:	ldr	x1, [sp, #648]
   15ac0:	add	x1, x1, x0
   15ac4:	ldr	w0, [x1, #4]
   15ac8:	mov	w2, #0x8                   	// #8
   15acc:	bfi	w0, w2, #14, #5
   15ad0:	str	w0, [x1, #4]
   15ad4:	ldr	w0, [sp, #736]
   15ad8:	add	w0, w0, #0x1
   15adc:	str	w0, [sp, #736]
   15ae0:	ldr	w1, [sp, #736]
   15ae4:	ldr	w0, [sp, #716]
   15ae8:	cmp	w1, w0
   15aec:	b.cs	15b10 <grub_unicode_aglomerate_comb+0x2060>  // b.hs, b.nlast
   15af0:	ldr	w0, [sp, #736]
   15af4:	lsl	x0, x0, #5
   15af8:	ldr	x1, [sp, #648]
   15afc:	add	x0, x1, x0
   15b00:	ldr	w0, [x0, #4]
   15b04:	and	w0, w0, #0x7c000
   15b08:	cmp	w0, #0x28, lsl #12
   15b0c:	b.eq	15ab4 <grub_unicode_aglomerate_comb+0x2004>  // b.none
   15b10:	ldr	w0, [sp, #736]
   15b14:	sub	w0, w0, #0x1
   15b18:	str	w0, [sp, #736]
   15b1c:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15b20:	ldr	w0, [sp, #736]
   15b24:	lsl	x0, x0, #5
   15b28:	ldr	x1, [sp, #648]
   15b2c:	add	x1, x1, x0
   15b30:	ldr	w0, [x1, #4]
   15b34:	mov	w2, #0x12                  	// #18
   15b38:	bfi	w0, w2, #14, #5
   15b3c:	str	w0, [x1, #4]
   15b40:	ldr	w0, [sp, #736]
   15b44:	add	w0, w0, #0x1
   15b48:	str	w0, [sp, #736]
   15b4c:	ldr	w1, [sp, #736]
   15b50:	ldr	w0, [sp, #716]
   15b54:	cmp	w1, w0
   15b58:	b.cs	15b7c <grub_unicode_aglomerate_comb+0x20cc>  // b.hs, b.nlast
   15b5c:	ldr	w0, [sp, #736]
   15b60:	lsl	x0, x0, #5
   15b64:	ldr	x1, [sp, #648]
   15b68:	add	x0, x1, x0
   15b6c:	ldr	w0, [x0, #4]
   15b70:	and	w0, w0, #0x7c000
   15b74:	cmp	w0, #0x28, lsl #12
   15b78:	b.eq	15b20 <grub_unicode_aglomerate_comb+0x2070>  // b.none
   15b7c:	ldr	w0, [sp, #736]
   15b80:	sub	w0, w0, #0x1
   15b84:	str	w0, [sp, #736]
   15b88:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15b8c:	ldr	w0, [sp, #676]
   15b90:	cmp	w0, #0x8
   15b94:	b.ne	15bf8 <grub_unicode_aglomerate_comb+0x2148>  // b.any
   15b98:	ldr	w0, [sp, #736]
   15b9c:	add	w0, w0, #0x1
   15ba0:	ldr	w1, [sp, #716]
   15ba4:	cmp	w1, w0
   15ba8:	b.ls	15bf8 <grub_unicode_aglomerate_comb+0x2148>  // b.plast
   15bac:	ldr	w0, [sp, #736]
   15bb0:	add	w0, w0, #0x1
   15bb4:	mov	w0, w0
   15bb8:	lsl	x0, x0, #5
   15bbc:	ldr	x1, [sp, #648]
   15bc0:	add	x0, x1, x0
   15bc4:	ldr	w0, [x0, #4]
   15bc8:	and	w0, w0, #0x7c000
   15bcc:	cmp	w0, #0x20, lsl #12
   15bd0:	b.ne	15bf8 <grub_unicode_aglomerate_comb+0x2148>  // b.any
   15bd4:	ldr	w0, [sp, #736]
   15bd8:	lsl	x0, x0, #5
   15bdc:	ldr	x1, [sp, #648]
   15be0:	add	x1, x1, x0
   15be4:	ldr	w0, [x1, #4]
   15be8:	mov	w2, #0x8                   	// #8
   15bec:	bfi	w0, w2, #14, #5
   15bf0:	str	w0, [x1, #4]
   15bf4:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15bf8:	ldr	w0, [sp, #676]
   15bfc:	cmp	w0, #0xb
   15c00:	b.ne	15c98 <grub_unicode_aglomerate_comb+0x21e8>  // b.any
   15c04:	ldr	w0, [sp, #736]
   15c08:	add	w0, w0, #0x1
   15c0c:	ldr	w1, [sp, #716]
   15c10:	cmp	w1, w0
   15c14:	b.ls	15c98 <grub_unicode_aglomerate_comb+0x21e8>  // b.plast
   15c18:	ldr	w0, [sp, #736]
   15c1c:	add	w0, w0, #0x1
   15c20:	mov	w0, w0
   15c24:	lsl	x0, x0, #5
   15c28:	ldr	x1, [sp, #648]
   15c2c:	add	x0, x1, x0
   15c30:	ldr	w0, [x0, #4]
   15c34:	and	w0, w0, #0x7c000
   15c38:	cmp	w0, #0x2c, lsl #12
   15c3c:	b.eq	15c74 <grub_unicode_aglomerate_comb+0x21c4>  // b.none
   15c40:	ldr	w0, [sp, #736]
   15c44:	add	w0, w0, #0x1
   15c48:	mov	w0, w0
   15c4c:	lsl	x0, x0, #5
   15c50:	ldr	x1, [sp, #648]
   15c54:	add	x0, x1, x0
   15c58:	ldr	w0, [x0, #4]
   15c5c:	and	w0, w0, #0x7c000
   15c60:	cmp	w0, #0x20, lsl #12
   15c64:	b.ne	15c98 <grub_unicode_aglomerate_comb+0x21e8>  // b.any
   15c68:	ldr	w0, [sp, #672]
   15c6c:	cmp	w0, #0x4
   15c70:	b.ne	15c98 <grub_unicode_aglomerate_comb+0x21e8>  // b.any
   15c74:	ldr	w0, [sp, #736]
   15c78:	lsl	x0, x0, #5
   15c7c:	ldr	x1, [sp, #648]
   15c80:	add	x1, x1, x0
   15c84:	ldr	w0, [x1, #4]
   15c88:	mov	w2, #0x8                   	// #8
   15c8c:	bfi	w0, w2, #14, #5
   15c90:	str	w0, [x1, #4]
   15c94:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15c98:	ldr	w0, [sp, #736]
   15c9c:	lsl	x0, x0, #5
   15ca0:	ldr	x1, [sp, #648]
   15ca4:	add	x1, x1, x0
   15ca8:	ldr	w0, [x1, #4]
   15cac:	mov	w2, #0x12                  	// #18
   15cb0:	bfi	w0, w2, #14, #5
   15cb4:	str	w0, [x1, #4]
   15cb8:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15cbc:	ldr	w0, [sp, #736]
   15cc0:	lsl	x0, x0, #5
   15cc4:	ldr	x1, [sp, #648]
   15cc8:	add	x0, x1, x0
   15ccc:	ldr	w0, [x0, #4]
   15cd0:	ubfx	x0, x0, #14, #5
   15cd4:	and	w0, w0, #0xff
   15cd8:	str	w0, [sp, #672]
   15cdc:	ldr	w0, [sp, #736]
   15ce0:	lsl	x0, x0, #5
   15ce4:	ldr	x1, [sp, #648]
   15ce8:	add	x1, x1, x0
   15cec:	ldr	w0, [x1, #4]
   15cf0:	mov	w2, #0x3                   	// #3
   15cf4:	bfi	w0, w2, #14, #5
   15cf8:	str	w0, [x1, #4]
   15cfc:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15d00:	nop
   15d04:	b	15d0c <grub_unicode_aglomerate_comb+0x225c>
   15d08:	nop
   15d0c:	ldr	w0, [sp, #736]
   15d10:	lsl	x0, x0, #5
   15d14:	ldr	x1, [sp, #648]
   15d18:	add	x0, x1, x0
   15d1c:	ldr	w0, [x0, #4]
   15d20:	ubfx	x0, x0, #14, #5
   15d24:	and	w0, w0, #0xff
   15d28:	str	w0, [sp, #676]
   15d2c:	ldr	w0, [sp, #736]
   15d30:	lsl	x0, x0, #5
   15d34:	ldr	x1, [sp, #648]
   15d38:	add	x0, x1, x0
   15d3c:	ldr	w0, [x0, #4]
   15d40:	and	w0, w0, #0x7c000
   15d44:	cmp	w0, #0x20, lsl #12
   15d48:	b.ne	15d74 <grub_unicode_aglomerate_comb+0x22c4>  // b.any
   15d4c:	ldr	w0, [sp, #672]
   15d50:	cmp	w0, #0x0
   15d54:	b.ne	15d74 <grub_unicode_aglomerate_comb+0x22c4>  // b.any
   15d58:	ldr	w0, [sp, #736]
   15d5c:	lsl	x0, x0, #5
   15d60:	ldr	x1, [sp, #648]
   15d64:	add	x0, x1, x0
   15d68:	ldr	w1, [x0, #4]
   15d6c:	and	w1, w1, #0xfff83fff
   15d70:	str	w1, [x0, #4]
   15d74:	ldr	w0, [sp, #736]
   15d78:	add	w0, w0, #0x1
   15d7c:	str	w0, [sp, #736]
   15d80:	ldr	w1, [sp, #736]
   15d84:	ldr	w0, [sp, #716]
   15d88:	cmp	w1, w0
   15d8c:	b.cc	15868 <grub_unicode_aglomerate_comb+0x1db8>  // b.lo, b.ul, b.last
   15d90:	ldr	w0, [sp, #684]
   15d94:	and	w0, w0, #0x1
   15d98:	cmp	w0, #0x0
   15d9c:	b.eq	15dac <grub_unicode_aglomerate_comb+0x22fc>  // b.none
   15da0:	mov	w0, #0x3                   	// #3
   15da4:	str	w0, [sp, #676]
   15da8:	b	15db0 <grub_unicode_aglomerate_comb+0x2300>
   15dac:	str	wzr, [sp, #676]
   15db0:	ldr	w0, [sp, #720]
   15db4:	str	w0, [sp, #736]
   15db8:	b	15fc8 <grub_unicode_aglomerate_comb+0x2518>
   15dbc:	ldr	w0, [sp, #736]
   15dc0:	str	w0, [sp, #664]
   15dc4:	b	15dd4 <grub_unicode_aglomerate_comb+0x2324>
   15dc8:	ldr	w0, [sp, #664]
   15dcc:	add	w0, w0, #0x1
   15dd0:	str	w0, [sp, #664]
   15dd4:	ldr	w1, [sp, #664]
   15dd8:	ldr	w0, [sp, #716]
   15ddc:	cmp	w1, w0
   15de0:	b.cs	15e64 <grub_unicode_aglomerate_comb+0x23b4>  // b.hs, b.nlast
   15de4:	ldr	w0, [sp, #664]
   15de8:	lsl	x0, x0, #5
   15dec:	ldr	x1, [sp, #648]
   15df0:	add	x0, x1, x0
   15df4:	ldr	w0, [x0, #4]
   15df8:	and	w0, w0, #0x7c000
   15dfc:	cmp	w0, #0x3c, lsl #12
   15e00:	b.eq	15dc8 <grub_unicode_aglomerate_comb+0x2318>  // b.none
   15e04:	ldr	w0, [sp, #664]
   15e08:	lsl	x0, x0, #5
   15e0c:	ldr	x1, [sp, #648]
   15e10:	add	x0, x1, x0
   15e14:	ldr	w0, [x0, #4]
   15e18:	and	w0, w0, #0x7c000
   15e1c:	cmp	w0, #0x40, lsl #12
   15e20:	b.eq	15dc8 <grub_unicode_aglomerate_comb+0x2318>  // b.none
   15e24:	ldr	w0, [sp, #664]
   15e28:	lsl	x0, x0, #5
   15e2c:	ldr	x1, [sp, #648]
   15e30:	add	x0, x1, x0
   15e34:	ldr	w0, [x0, #4]
   15e38:	and	w0, w0, #0x7c000
   15e3c:	cmp	w0, #0x44, lsl #12
   15e40:	b.eq	15dc8 <grub_unicode_aglomerate_comb+0x2318>  // b.none
   15e44:	ldr	w0, [sp, #664]
   15e48:	lsl	x0, x0, #5
   15e4c:	ldr	x1, [sp, #648]
   15e50:	add	x0, x1, x0
   15e54:	ldr	w0, [x0, #4]
   15e58:	and	w0, w0, #0x7c000
   15e5c:	cmp	w0, #0x48, lsl #12
   15e60:	b.eq	15dc8 <grub_unicode_aglomerate_comb+0x2318>  // b.none
   15e64:	ldr	w1, [sp, #664]
   15e68:	ldr	w0, [sp, #736]
   15e6c:	cmp	w1, w0
   15e70:	b.ne	15eb4 <grub_unicode_aglomerate_comb+0x2404>  // b.any
   15e74:	ldr	w0, [sp, #736]
   15e78:	lsl	x0, x0, #5
   15e7c:	ldr	x1, [sp, #648]
   15e80:	add	x0, x1, x0
   15e84:	ldr	w0, [x0, #4]
   15e88:	and	w0, w0, #0x7c000
   15e8c:	cmp	w0, #0x0
   15e90:	b.ne	15e9c <grub_unicode_aglomerate_comb+0x23ec>  // b.any
   15e94:	str	wzr, [sp, #676]
   15e98:	b	15ea4 <grub_unicode_aglomerate_comb+0x23f4>
   15e9c:	mov	w0, #0x3                   	// #3
   15ea0:	str	w0, [sp, #676]
   15ea4:	ldr	w0, [sp, #736]
   15ea8:	add	w0, w0, #0x1
   15eac:	str	w0, [sp, #736]
   15eb0:	b	15fc8 <grub_unicode_aglomerate_comb+0x2518>
   15eb4:	ldr	w1, [sp, #664]
   15eb8:	ldr	w0, [sp, #716]
   15ebc:	cmp	w1, w0
   15ec0:	b.ne	15ee8 <grub_unicode_aglomerate_comb+0x2438>  // b.any
   15ec4:	ldr	w0, [sp, #680]
   15ec8:	and	w0, w0, #0x1
   15ecc:	cmp	w0, #0x0
   15ed0:	b.eq	15edc <grub_unicode_aglomerate_comb+0x242c>  // b.none
   15ed4:	mov	w0, #0x3                   	// #3
   15ed8:	b	15ee0 <grub_unicode_aglomerate_comb+0x2430>
   15edc:	mov	w0, #0x0                   	// #0
   15ee0:	str	w0, [sp, #660]
   15ee4:	b	15f18 <grub_unicode_aglomerate_comb+0x2468>
   15ee8:	ldr	w0, [sp, #664]
   15eec:	lsl	x0, x0, #5
   15ef0:	ldr	x1, [sp, #648]
   15ef4:	add	x0, x1, x0
   15ef8:	ldr	w0, [x0, #4]
   15efc:	and	w0, w0, #0x7c000
   15f00:	cmp	w0, #0x0
   15f04:	b.ne	15f10 <grub_unicode_aglomerate_comb+0x2460>  // b.any
   15f08:	str	wzr, [sp, #660]
   15f0c:	b	15f18 <grub_unicode_aglomerate_comb+0x2468>
   15f10:	mov	w0, #0x3                   	// #3
   15f14:	str	w0, [sp, #660]
   15f18:	ldr	w1, [sp, #660]
   15f1c:	ldr	w0, [sp, #676]
   15f20:	cmp	w1, w0
   15f24:	b.ne	15fb8 <grub_unicode_aglomerate_comb+0x2508>  // b.any
   15f28:	b	15f60 <grub_unicode_aglomerate_comb+0x24b0>
   15f2c:	ldr	w0, [sp, #736]
   15f30:	lsl	x0, x0, #5
   15f34:	ldr	x1, [sp, #648]
   15f38:	add	x1, x1, x0
   15f3c:	ldr	w0, [sp, #676]
   15f40:	and	w0, w0, #0x1f
   15f44:	and	w2, w0, #0xff
   15f48:	ldr	w0, [x1, #4]
   15f4c:	bfi	w0, w2, #14, #5
   15f50:	str	w0, [x1, #4]
   15f54:	ldr	w0, [sp, #736]
   15f58:	add	w0, w0, #0x1
   15f5c:	str	w0, [sp, #736]
   15f60:	ldr	w1, [sp, #736]
   15f64:	ldr	w0, [sp, #664]
   15f68:	cmp	w1, w0
   15f6c:	b.cc	15f2c <grub_unicode_aglomerate_comb+0x247c>  // b.lo, b.ul, b.last
   15f70:	b	15fc8 <grub_unicode_aglomerate_comb+0x2518>
   15f74:	ldr	w0, [sp, #644]
   15f78:	and	w0, w0, #0x1
   15f7c:	cmp	w0, #0x0
   15f80:	b.eq	15f8c <grub_unicode_aglomerate_comb+0x24dc>  // b.none
   15f84:	mov	w2, #0x3                   	// #3
   15f88:	b	15f90 <grub_unicode_aglomerate_comb+0x24e0>
   15f8c:	mov	w2, #0x0                   	// #0
   15f90:	ldr	w0, [sp, #736]
   15f94:	lsl	x0, x0, #5
   15f98:	ldr	x1, [sp, #648]
   15f9c:	add	x1, x1, x0
   15fa0:	ldr	w0, [x1, #4]
   15fa4:	bfi	w0, w2, #14, #5
   15fa8:	str	w0, [x1, #4]
   15fac:	ldr	w0, [sp, #736]
   15fb0:	add	w0, w0, #0x1
   15fb4:	str	w0, [sp, #736]
   15fb8:	ldr	w1, [sp, #736]
   15fbc:	ldr	w0, [sp, #664]
   15fc0:	cmp	w1, w0
   15fc4:	b.cc	15f74 <grub_unicode_aglomerate_comb+0x24c4>  // b.lo, b.ul, b.last
   15fc8:	ldr	w1, [sp, #736]
   15fcc:	ldr	w0, [sp, #716]
   15fd0:	cmp	w1, w0
   15fd4:	b.cc	15dbc <grub_unicode_aglomerate_comb+0x230c>  // b.lo, b.ul, b.last
   15fd8:	ldr	w0, [sp, #716]
   15fdc:	str	w0, [sp, #720]
   15fe0:	ldr	w1, [sp, #720]
   15fe4:	ldr	w0, [sp, #724]
   15fe8:	cmp	w1, w0
   15fec:	b.cc	15730 <grub_unicode_aglomerate_comb+0x1c80>  // b.lo, b.ul, b.last
   15ff0:	str	wzr, [sp, #736]
   15ff4:	b	161fc <grub_unicode_aglomerate_comb+0x274c>
   15ff8:	ldr	w0, [sp, #736]
   15ffc:	lsl	x0, x0, #5
   16000:	ldr	x1, [sp, #648]
   16004:	add	x0, x1, x0
   16008:	ldrb	w0, [x0, #5]
   1600c:	ubfx	x0, x0, #0, #6
   16010:	and	w0, w0, #0xff
   16014:	and	w0, w0, #0x1
   16018:	cmp	w0, #0x0
   1601c:	b.ne	16078 <grub_unicode_aglomerate_comb+0x25c8>  // b.any
   16020:	ldr	w0, [sp, #736]
   16024:	lsl	x0, x0, #5
   16028:	ldr	x1, [sp, #648]
   1602c:	add	x0, x1, x0
   16030:	ldr	w0, [x0, #4]
   16034:	and	w0, w0, #0x7c000
   16038:	cmp	w0, #0xc, lsl #12
   1603c:	b.ne	16078 <grub_unicode_aglomerate_comb+0x25c8>  // b.any
   16040:	ldr	w0, [sp, #736]
   16044:	lsl	x0, x0, #5
   16048:	ldr	x1, [sp, #648]
   1604c:	add	x0, x1, x0
   16050:	ldrb	w1, [x0, #5]
   16054:	ubfx	x1, x1, #0, #6
   16058:	and	w1, w1, #0xff
   1605c:	add	w1, w1, #0x1
   16060:	and	w1, w1, #0x3f
   16064:	and	w2, w1, #0xff
   16068:	ldrb	w1, [x0, #5]
   1606c:	bfxil	w1, w2, #0, #6
   16070:	strb	w1, [x0, #5]
   16074:	b	161f0 <grub_unicode_aglomerate_comb+0x2740>
   16078:	ldr	w0, [sp, #736]
   1607c:	lsl	x0, x0, #5
   16080:	ldr	x1, [sp, #648]
   16084:	add	x0, x1, x0
   16088:	ldrb	w0, [x0, #5]
   1608c:	ubfx	x0, x0, #0, #6
   16090:	and	w0, w0, #0xff
   16094:	and	w0, w0, #0x1
   16098:	cmp	w0, #0x0
   1609c:	b.ne	16130 <grub_unicode_aglomerate_comb+0x2680>  // b.any
   160a0:	ldr	w0, [sp, #736]
   160a4:	lsl	x0, x0, #5
   160a8:	ldr	x1, [sp, #648]
   160ac:	add	x0, x1, x0
   160b0:	ldr	w0, [x0, #4]
   160b4:	and	w0, w0, #0x7c000
   160b8:	cmp	w0, #0x2c, lsl #12
   160bc:	b.eq	160e0 <grub_unicode_aglomerate_comb+0x2630>  // b.none
   160c0:	ldr	w0, [sp, #736]
   160c4:	lsl	x0, x0, #5
   160c8:	ldr	x1, [sp, #648]
   160cc:	add	x0, x1, x0
   160d0:	ldr	w0, [x0, #4]
   160d4:	and	w0, w0, #0x7c000
   160d8:	cmp	w0, #0x20, lsl #12
   160dc:	b.ne	16130 <grub_unicode_aglomerate_comb+0x2680>  // b.any
   160e0:	ldr	w0, [sp, #736]
   160e4:	lsl	x0, x0, #5
   160e8:	ldr	x1, [sp, #648]
   160ec:	add	x0, x1, x0
   160f0:	ldrb	w0, [x0, #5]
   160f4:	ubfx	x0, x0, #0, #6
   160f8:	and	w0, w0, #0xff
   160fc:	add	w0, w0, #0x2
   16100:	and	w2, w0, #0xff
   16104:	ldr	w0, [sp, #736]
   16108:	lsl	x0, x0, #5
   1610c:	ldr	x1, [sp, #648]
   16110:	add	x1, x1, x0
   16114:	mov	w0, w2
   16118:	and	w0, w0, #0x3f
   1611c:	and	w2, w0, #0xff
   16120:	ldrb	w0, [x1, #5]
   16124:	bfxil	w0, w2, #0, #6
   16128:	strb	w0, [x1, #5]
   1612c:	b	161f0 <grub_unicode_aglomerate_comb+0x2740>
   16130:	ldr	w0, [sp, #736]
   16134:	lsl	x0, x0, #5
   16138:	ldr	x1, [sp, #648]
   1613c:	add	x0, x1, x0
   16140:	ldrb	w0, [x0, #5]
   16144:	ubfx	x0, x0, #0, #6
   16148:	and	w0, w0, #0xff
   1614c:	and	w0, w0, #0x1
   16150:	cmp	w0, #0x0
   16154:	b.eq	161f0 <grub_unicode_aglomerate_comb+0x2740>  // b.none
   16158:	ldr	w0, [sp, #736]
   1615c:	lsl	x0, x0, #5
   16160:	ldr	x1, [sp, #648]
   16164:	add	x0, x1, x0
   16168:	ldr	w0, [x0, #4]
   1616c:	and	w0, w0, #0x7c000
   16170:	cmp	w0, #0x0
   16174:	b.eq	161b8 <grub_unicode_aglomerate_comb+0x2708>  // b.none
   16178:	ldr	w0, [sp, #736]
   1617c:	lsl	x0, x0, #5
   16180:	ldr	x1, [sp, #648]
   16184:	add	x0, x1, x0
   16188:	ldr	w0, [x0, #4]
   1618c:	and	w0, w0, #0x7c000
   16190:	cmp	w0, #0x2c, lsl #12
   16194:	b.eq	161b8 <grub_unicode_aglomerate_comb+0x2708>  // b.none
   16198:	ldr	w0, [sp, #736]
   1619c:	lsl	x0, x0, #5
   161a0:	ldr	x1, [sp, #648]
   161a4:	add	x0, x1, x0
   161a8:	ldr	w0, [x0, #4]
   161ac:	and	w0, w0, #0x7c000
   161b0:	cmp	w0, #0x20, lsl #12
   161b4:	b.ne	161f0 <grub_unicode_aglomerate_comb+0x2740>  // b.any
   161b8:	ldr	w0, [sp, #736]
   161bc:	lsl	x0, x0, #5
   161c0:	ldr	x1, [sp, #648]
   161c4:	add	x0, x1, x0
   161c8:	ldrb	w1, [x0, #5]
   161cc:	ubfx	x1, x1, #0, #6
   161d0:	and	w1, w1, #0xff
   161d4:	add	w1, w1, #0x1
   161d8:	and	w1, w1, #0x3f
   161dc:	and	w2, w1, #0xff
   161e0:	ldrb	w1, [x0, #5]
   161e4:	bfxil	w1, w2, #0, #6
   161e8:	strb	w1, [x0, #5]
   161ec:	nop
   161f0:	ldr	w0, [sp, #736]
   161f4:	add	w0, w0, #0x1
   161f8:	str	w0, [sp, #736]
   161fc:	ldr	w1, [sp, #736]
   16200:	ldr	w0, [sp, #724]
   16204:	cmp	w1, w0
   16208:	b.cc	15ff8 <grub_unicode_aglomerate_comb+0x2548>  // b.lo, b.ul, b.last
   1620c:	b	16250 <grub_unicode_aglomerate_comb+0x27a0>
   16210:	str	wzr, [sp, #736]
   16214:	b	16240 <grub_unicode_aglomerate_comb+0x2790>
   16218:	ldr	w0, [sp, #736]
   1621c:	lsl	x0, x0, #5
   16220:	ldr	x1, [sp, #648]
   16224:	add	x0, x1, x0
   16228:	ldrb	w1, [x0, #5]
   1622c:	and	w1, w1, #0xffffffc0
   16230:	strb	w1, [x0, #5]
   16234:	ldr	w0, [sp, #736]
   16238:	add	w0, w0, #0x1
   1623c:	str	w0, [sp, #736]
   16240:	ldr	w1, [sp, #736]
   16244:	ldr	w0, [sp, #724]
   16248:	cmp	w1, w0
   1624c:	b.cc	16218 <grub_unicode_aglomerate_comb+0x2768>  // b.lo, b.ul, b.last
   16250:	ldr	w1, [sp, #724]
   16254:	ldr	x0, [sp, #768]
   16258:	str	x0, [sp, #16]
   1625c:	ldr	w0, [sp, #760]
   16260:	str	w0, [sp, #8]
   16264:	ldr	x0, [sp, #752]
   16268:	str	x0, [sp]
   1626c:	ldr	w7, [sp, #52]
   16270:	ldr	x6, [sp, #56]
   16274:	ldr	x5, [sp, #64]
   16278:	ldr	x4, [sp, #72]
   1627c:	ldr	x3, [sp, #80]
   16280:	mov	x2, x1
   16284:	ldr	x1, [sp, #648]
   16288:	ldr	x0, [sp, #88]
   1628c:	bl	14284 <grub_unicode_aglomerate_comb+0x7d4>
   16290:	str	x0, [sp, #632]
   16294:	ldr	x0, [sp, #648]
   16298:	bl	0 <grub_free>
   1629c:	ldr	x0, [sp, #632]
   162a0:	ldp	x29, x30, [sp, #32]
   162a4:	add	sp, sp, #0x2f0
   162a8:	ret
   162ac:	sub	sp, sp, #0x10
   162b0:	str	x0, [sp, #8]
   162b4:	ldr	x0, [sp, #8]
   162b8:	ldrh	w0, [x0, #6]
   162bc:	and	w0, w0, #0x7f8
   162c0:	and	w0, w0, #0xffff
   162c4:	cmp	w0, #0x0
   162c8:	b.eq	162d4 <grub_unicode_aglomerate_comb+0x2824>  // b.none
   162cc:	mov	w0, #0x1                   	// #1
   162d0:	b	16310 <grub_unicode_aglomerate_comb+0x2860>
   162d4:	ldr	x0, [sp, #8]
   162d8:	ldr	w0, [x0]
   162dc:	and	w1, w0, #0x7fffff
   162e0:	mov	w0, #0x200e                	// #8206
   162e4:	cmp	w1, w0
   162e8:	b.eq	16304 <grub_unicode_aglomerate_comb+0x2854>  // b.none
   162ec:	ldr	x0, [sp, #8]
   162f0:	ldr	w0, [x0]
   162f4:	and	w1, w0, #0x7fffff
   162f8:	mov	w0, #0x200f                	// #8207
   162fc:	cmp	w1, w0
   16300:	b.ne	1630c <grub_unicode_aglomerate_comb+0x285c>  // b.any
   16304:	mov	w0, #0x0                   	// #0
   16308:	b	16310 <grub_unicode_aglomerate_comb+0x2860>
   1630c:	mov	w0, #0x1                   	// #1
   16310:	add	sp, sp, #0x10
   16314:	ret

0000000000016318 <grub_bidi_logical_to_visual>:
   16318:	sub	sp, sp, #0xa0
   1631c:	stp	x29, x30, [sp, #32]
   16320:	add	x29, sp, #0x20
   16324:	str	x0, [sp, #104]
   16328:	str	x1, [sp, #96]
   1632c:	str	x2, [sp, #88]
   16330:	str	x3, [sp, #80]
   16334:	str	x4, [sp, #72]
   16338:	str	x5, [sp, #64]
   1633c:	str	x6, [sp, #56]
   16340:	str	w7, [sp, #52]
   16344:	ldr	x0, [sp, #104]
   16348:	str	x0, [sp, #152]
   1634c:	ldr	x1, [sp, #96]
   16350:	mov	x0, x1
   16354:	lsl	x0, x0, #1
   16358:	add	x0, x0, x1
   1635c:	lsl	x0, x0, #5
   16360:	add	x0, x0, #0xc0
   16364:	bl	0 <grub_malloc>
   16368:	str	x0, [sp, #136]
   1636c:	ldr	x0, [sp, #88]
   16370:	ldr	x1, [sp, #136]
   16374:	str	x1, [x0]
   16378:	ldr	x0, [sp, #136]
   1637c:	cmp	x0, #0x0
   16380:	b.ne	1638c <grub_bidi_logical_to_visual+0x74>  // b.any
   16384:	mov	x0, #0xffffffffffffffff    	// #-1
   16388:	b	16568 <grub_bidi_logical_to_visual+0x250>
   1638c:	ldr	x0, [sp, #104]
   16390:	str	x0, [sp, #144]
   16394:	b	16538 <grub_bidi_logical_to_visual+0x220>
   16398:	ldr	x0, [sp, #96]
   1639c:	lsl	x0, x0, #2
   163a0:	ldr	x1, [sp, #104]
   163a4:	add	x0, x1, x0
   163a8:	ldr	x1, [sp, #144]
   163ac:	cmp	x1, x0
   163b0:	b.eq	163c4 <grub_bidi_logical_to_visual+0xac>  // b.none
   163b4:	ldr	x0, [sp, #144]
   163b8:	ldr	w0, [x0]
   163bc:	cmp	w0, #0xa
   163c0:	b.ne	1652c <grub_bidi_logical_to_visual+0x214>  // b.any
   163c4:	ldr	x1, [sp, #144]
   163c8:	ldr	x0, [sp, #152]
   163cc:	sub	x0, x1, x0
   163d0:	asr	x0, x0, #2
   163d4:	mov	x1, x0
   163d8:	ldr	x0, [sp, #96]
   163dc:	str	x0, [sp, #16]
   163e0:	ldr	w0, [sp, #168]
   163e4:	str	w0, [sp, #8]
   163e8:	ldr	x0, [sp, #160]
   163ec:	str	x0, [sp]
   163f0:	ldr	w7, [sp, #52]
   163f4:	ldr	x6, [sp, #56]
   163f8:	ldr	x5, [sp, #64]
   163fc:	ldr	x4, [sp, #72]
   16400:	ldr	x3, [sp, #80]
   16404:	ldr	x2, [sp, #136]
   16408:	ldr	x0, [sp, #152]
   1640c:	bl	14f44 <grub_unicode_aglomerate_comb+0x1494>
   16410:	str	x0, [sp, #112]
   16414:	str	xzr, [sp, #56]
   16418:	ldr	x0, [sp, #112]
   1641c:	cmp	x0, #0x0
   16420:	b.ge	16438 <grub_bidi_logical_to_visual+0x120>  // b.tcont
   16424:	ldr	x0, [sp, #88]
   16428:	ldr	x0, [x0]
   1642c:	bl	0 <grub_free>
   16430:	ldr	x0, [sp, #112]
   16434:	b	16568 <grub_bidi_logical_to_visual+0x250>
   16438:	str	xzr, [sp, #128]
   1643c:	str	xzr, [sp, #120]
   16440:	b	164a8 <grub_bidi_logical_to_visual+0x190>
   16444:	ldr	x0, [sp, #128]
   16448:	lsl	x0, x0, #5
   1644c:	ldr	x1, [sp, #136]
   16450:	add	x0, x1, x0
   16454:	bl	162ac <grub_unicode_aglomerate_comb+0x27fc>
   16458:	cmp	w0, #0x0
   1645c:	b.eq	1649c <grub_bidi_logical_to_visual+0x184>  // b.none
   16460:	ldr	x0, [sp, #128]
   16464:	lsl	x0, x0, #5
   16468:	ldr	x1, [sp, #136]
   1646c:	add	x3, x1, x0
   16470:	ldr	x0, [sp, #120]
   16474:	add	x1, x0, #0x1
   16478:	str	x1, [sp, #120]
   1647c:	lsl	x0, x0, #5
   16480:	ldr	x1, [sp, #136]
   16484:	add	x0, x1, x0
   16488:	mov	x2, x0
   1648c:	ldp	x0, x1, [x3]
   16490:	stp	x0, x1, [x2]
   16494:	ldp	x0, x1, [x3, #16]
   16498:	stp	x0, x1, [x2, #16]
   1649c:	ldr	x0, [sp, #128]
   164a0:	add	x0, x0, #0x1
   164a4:	str	x0, [sp, #128]
   164a8:	ldr	x1, [sp, #128]
   164ac:	ldr	x0, [sp, #112]
   164b0:	cmp	x1, x0
   164b4:	b.lt	16444 <grub_bidi_logical_to_visual+0x12c>  // b.tstop
   164b8:	ldr	x0, [sp, #120]
   164bc:	lsl	x0, x0, #5
   164c0:	ldr	x1, [sp, #136]
   164c4:	add	x0, x1, x0
   164c8:	str	x0, [sp, #136]
   164cc:	ldr	x0, [sp, #144]
   164d0:	str	x0, [sp, #152]
   164d4:	ldr	x0, [sp, #96]
   164d8:	lsl	x0, x0, #2
   164dc:	ldr	x1, [sp, #104]
   164e0:	add	x0, x1, x0
   164e4:	ldr	x1, [sp, #144]
   164e8:	cmp	x1, x0
   164ec:	b.eq	1652c <grub_bidi_logical_to_visual+0x214>  // b.none
   164f0:	mov	x2, #0x20                  	// #32
   164f4:	mov	w1, #0x0                   	// #0
   164f8:	ldr	x0, [sp, #136]
   164fc:	bl	0 <grub_memset>
   16500:	ldr	x1, [sp, #136]
   16504:	ldr	w0, [x1]
   16508:	mov	w2, #0xa                   	// #10
   1650c:	bfxil	w0, w2, #0, #23
   16510:	str	w0, [x1]
   16514:	ldr	x0, [sp, #136]
   16518:	add	x0, x0, #0x20
   1651c:	str	x0, [sp, #136]
   16520:	ldr	x0, [sp, #152]
   16524:	add	x0, x0, #0x4
   16528:	str	x0, [sp, #152]
   1652c:	ldr	x0, [sp, #144]
   16530:	add	x0, x0, #0x4
   16534:	str	x0, [sp, #144]
   16538:	ldr	x0, [sp, #96]
   1653c:	lsl	x0, x0, #2
   16540:	ldr	x1, [sp, #104]
   16544:	add	x0, x1, x0
   16548:	ldr	x1, [sp, #144]
   1654c:	cmp	x1, x0
   16550:	b.ls	16398 <grub_bidi_logical_to_visual+0x80>  // b.plast
   16554:	ldr	x0, [sp, #88]
   16558:	ldr	x0, [x0]
   1655c:	ldr	x1, [sp, #136]
   16560:	sub	x0, x1, x0
   16564:	asr	x0, x0, #5
   16568:	ldp	x29, x30, [sp, #32]
   1656c:	add	sp, sp, #0xa0
   16570:	ret

0000000000016574 <grub_unicode_mirror_code>:
   16574:	sub	sp, sp, #0x20
   16578:	str	w0, [sp, #12]
   1657c:	str	wzr, [sp, #28]
   16580:	b	165d8 <grub_unicode_mirror_code+0x64>
   16584:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16588:	add	x0, x0, #0x0
   1658c:	ldr	x1, [x0]
   16590:	ldrsw	x0, [sp, #28]
   16594:	lsl	x0, x0, #3
   16598:	add	x0, x1, x0
   1659c:	ldr	w0, [x0]
   165a0:	ldr	w1, [sp, #12]
   165a4:	cmp	w1, w0
   165a8:	b.ne	165cc <grub_unicode_mirror_code+0x58>  // b.any
   165ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   165b0:	add	x0, x0, #0x0
   165b4:	ldr	x1, [x0]
   165b8:	ldrsw	x0, [sp, #28]
   165bc:	lsl	x0, x0, #3
   165c0:	add	x0, x1, x0
   165c4:	ldr	w0, [x0, #4]
   165c8:	b	16600 <grub_unicode_mirror_code+0x8c>
   165cc:	ldr	w0, [sp, #28]
   165d0:	add	w0, w0, #0x1
   165d4:	str	w0, [sp, #28]
   165d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   165dc:	add	x0, x0, #0x0
   165e0:	ldr	x1, [x0]
   165e4:	ldrsw	x0, [sp, #28]
   165e8:	lsl	x0, x0, #3
   165ec:	add	x0, x1, x0
   165f0:	ldr	w0, [x0]
   165f4:	cmp	w0, #0x0
   165f8:	b.ne	16584 <grub_unicode_mirror_code+0x10>  // b.any
   165fc:	ldr	w0, [sp, #12]
   16600:	add	sp, sp, #0x20
   16604:	ret
	...

0000000000016610 <grub_unicode_shape_code>:
   16610:	sub	sp, sp, #0x20
   16614:	str	w0, [sp, #12]
   16618:	strb	w1, [sp, #11]
   1661c:	ldr	w0, [sp, #12]
   16620:	cmp	w0, #0x5ff
   16624:	b.ls	16634 <grub_unicode_shape_code+0x24>  // b.plast
   16628:	ldr	w0, [sp, #12]
   1662c:	cmp	w0, #0x6ff
   16630:	b.ls	1663c <grub_unicode_shape_code+0x2c>  // b.plast
   16634:	ldr	w0, [sp, #12]
   16638:	b	167cc <grub_unicode_shape_code+0x1bc>
   1663c:	str	wzr, [sp, #28]
   16640:	b	16798 <grub_unicode_shape_code+0x188>
   16644:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16648:	add	x0, x0, #0x0
   1664c:	ldr	x2, [x0]
   16650:	ldrsw	x1, [sp, #28]
   16654:	mov	x0, x1
   16658:	lsl	x0, x0, #2
   1665c:	add	x0, x0, x1
   16660:	lsl	x0, x0, #2
   16664:	add	x0, x2, x0
   16668:	ldr	w0, [x0]
   1666c:	ldr	w1, [sp, #12]
   16670:	cmp	w1, w0
   16674:	b.ne	1678c <grub_unicode_shape_code+0x17c>  // b.any
   16678:	str	wzr, [sp, #24]
   1667c:	ldrb	w0, [sp, #11]
   16680:	and	w0, w0, #0x6
   16684:	cmp	w0, #0x6
   16688:	b.eq	16748 <grub_unicode_shape_code+0x138>  // b.none
   1668c:	cmp	w0, #0x6
   16690:	b.gt	16778 <grub_unicode_shape_code+0x168>
   16694:	cmp	w0, #0x4
   16698:	b.eq	166e8 <grub_unicode_shape_code+0xd8>  // b.none
   1669c:	cmp	w0, #0x4
   166a0:	b.gt	16778 <grub_unicode_shape_code+0x168>
   166a4:	cmp	w0, #0x0
   166a8:	b.eq	166b8 <grub_unicode_shape_code+0xa8>  // b.none
   166ac:	cmp	w0, #0x2
   166b0:	b.eq	16718 <grub_unicode_shape_code+0x108>  // b.none
   166b4:	b	16778 <grub_unicode_shape_code+0x168>
   166b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   166bc:	add	x0, x0, #0x0
   166c0:	ldr	x2, [x0]
   166c4:	ldrsw	x1, [sp, #28]
   166c8:	mov	x0, x1
   166cc:	lsl	x0, x0, #2
   166d0:	add	x0, x0, x1
   166d4:	lsl	x0, x0, #2
   166d8:	add	x0, x2, x0
   166dc:	ldr	w0, [x0, #4]
   166e0:	str	w0, [sp, #24]
   166e4:	b	16778 <grub_unicode_shape_code+0x168>
   166e8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   166ec:	add	x0, x0, #0x0
   166f0:	ldr	x2, [x0]
   166f4:	ldrsw	x1, [sp, #28]
   166f8:	mov	x0, x1
   166fc:	lsl	x0, x0, #2
   16700:	add	x0, x0, x1
   16704:	lsl	x0, x0, #2
   16708:	add	x0, x2, x0
   1670c:	ldr	w0, [x0, #8]
   16710:	str	w0, [sp, #24]
   16714:	b	16778 <grub_unicode_shape_code+0x168>
   16718:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1671c:	add	x0, x0, #0x0
   16720:	ldr	x2, [x0]
   16724:	ldrsw	x1, [sp, #28]
   16728:	mov	x0, x1
   1672c:	lsl	x0, x0, #2
   16730:	add	x0, x0, x1
   16734:	lsl	x0, x0, #2
   16738:	add	x0, x2, x0
   1673c:	ldr	w0, [x0, #16]
   16740:	str	w0, [sp, #24]
   16744:	b	16778 <grub_unicode_shape_code+0x168>
   16748:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1674c:	add	x0, x0, #0x0
   16750:	ldr	x2, [x0]
   16754:	ldrsw	x1, [sp, #28]
   16758:	mov	x0, x1
   1675c:	lsl	x0, x0, #2
   16760:	add	x0, x0, x1
   16764:	lsl	x0, x0, #2
   16768:	add	x0, x2, x0
   1676c:	ldr	w0, [x0, #12]
   16770:	str	w0, [sp, #24]
   16774:	nop
   16778:	ldr	w0, [sp, #24]
   1677c:	cmp	w0, #0x0
   16780:	b.eq	1678c <grub_unicode_shape_code+0x17c>  // b.none
   16784:	ldr	w0, [sp, #24]
   16788:	b	167cc <grub_unicode_shape_code+0x1bc>
   1678c:	ldr	w0, [sp, #28]
   16790:	add	w0, w0, #0x1
   16794:	str	w0, [sp, #28]
   16798:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1679c:	add	x0, x0, #0x0
   167a0:	ldr	x2, [x0]
   167a4:	ldrsw	x1, [sp, #28]
   167a8:	mov	x0, x1
   167ac:	lsl	x0, x0, #2
   167b0:	add	x0, x0, x1
   167b4:	lsl	x0, x0, #2
   167b8:	add	x0, x2, x0
   167bc:	ldr	w0, [x0]
   167c0:	cmp	w0, #0x0
   167c4:	b.ne	16644 <grub_unicode_shape_code+0x34>  // b.any
   167c8:	ldr	w0, [sp, #12]
   167cc:	add	sp, sp, #0x20
   167d0:	ret
   167d4:	nop
	...

00000000000167e0 <grub_unicode_get_comb_start>:
   167e0:	stp	x29, x30, [sp, #-48]!
   167e4:	mov	x29, sp
   167e8:	str	x0, [sp, #24]
   167ec:	str	x1, [sp, #16]
   167f0:	ldr	x0, [sp, #16]
   167f4:	str	x0, [sp, #40]
   167f8:	b	16898 <grub_unicode_get_comb_start+0xb8>
   167fc:	ldr	x0, [sp, #40]
   16800:	ldr	w1, [x0]
   16804:	mov	w0, #0xfdff                	// #65023
   16808:	cmp	w1, w0
   1680c:	b.ls	16824 <grub_unicode_get_comb_start+0x44>  // b.plast
   16810:	ldr	x0, [sp, #40]
   16814:	ldr	w1, [x0]
   16818:	mov	w0, #0xfe0f                	// #65039
   1681c:	cmp	w1, w0
   16820:	b.ls	16878 <grub_unicode_get_comb_start+0x98>  // b.plast
   16824:	ldr	x0, [sp, #40]
   16828:	ldr	w1, [x0]
   1682c:	mov	w0, #0xff                  	// #255
   16830:	movk	w0, #0xe, lsl #16
   16834:	cmp	w1, w0
   16838:	b.ls	16854 <grub_unicode_get_comb_start+0x74>  // b.plast
   1683c:	ldr	x0, [sp, #40]
   16840:	ldr	w1, [x0]
   16844:	mov	w0, #0x1ef                 	// #495
   16848:	movk	w0, #0xe, lsl #16
   1684c:	cmp	w1, w0
   16850:	b.ls	16880 <grub_unicode_get_comb_start+0xa0>  // b.plast
   16854:	ldr	x0, [sp, #40]
   16858:	ldr	w0, [x0]
   1685c:	bl	13798 <grub_unicode_get_comb_type>
   16860:	str	w0, [sp, #36]
   16864:	ldr	w0, [sp, #36]
   16868:	cmp	w0, #0x0
   1686c:	b.ne	16888 <grub_unicode_get_comb_start+0xa8>  // b.any
   16870:	ldr	x0, [sp, #40]
   16874:	b	168ac <grub_unicode_get_comb_start+0xcc>
   16878:	nop
   1687c:	b	1688c <grub_unicode_get_comb_start+0xac>
   16880:	nop
   16884:	b	1688c <grub_unicode_get_comb_start+0xac>
   16888:	nop
   1688c:	ldr	x0, [sp, #40]
   16890:	sub	x0, x0, #0x4
   16894:	str	x0, [sp, #40]
   16898:	ldr	x1, [sp, #40]
   1689c:	ldr	x0, [sp, #24]
   168a0:	cmp	x1, x0
   168a4:	b.cs	167fc <grub_unicode_get_comb_start+0x1c>  // b.hs, b.nlast
   168a8:	ldr	x0, [sp, #24]
   168ac:	ldp	x29, x30, [sp], #48
   168b0:	ret

00000000000168b4 <grub_unicode_get_comb_end>:
   168b4:	stp	x29, x30, [sp, #-48]!
   168b8:	mov	x29, sp
   168bc:	str	x0, [sp, #24]
   168c0:	str	x1, [sp, #16]
   168c4:	ldr	x0, [sp, #16]
   168c8:	str	x0, [sp, #40]
   168cc:	b	1696c <grub_unicode_get_comb_end+0xb8>
   168d0:	ldr	x0, [sp, #40]
   168d4:	ldr	w1, [x0]
   168d8:	mov	w0, #0xfdff                	// #65023
   168dc:	cmp	w1, w0
   168e0:	b.ls	168f8 <grub_unicode_get_comb_end+0x44>  // b.plast
   168e4:	ldr	x0, [sp, #40]
   168e8:	ldr	w1, [x0]
   168ec:	mov	w0, #0xfe0f                	// #65039
   168f0:	cmp	w1, w0
   168f4:	b.ls	1694c <grub_unicode_get_comb_end+0x98>  // b.plast
   168f8:	ldr	x0, [sp, #40]
   168fc:	ldr	w1, [x0]
   16900:	mov	w0, #0xff                  	// #255
   16904:	movk	w0, #0xe, lsl #16
   16908:	cmp	w1, w0
   1690c:	b.ls	16928 <grub_unicode_get_comb_end+0x74>  // b.plast
   16910:	ldr	x0, [sp, #40]
   16914:	ldr	w1, [x0]
   16918:	mov	w0, #0x1ef                 	// #495
   1691c:	movk	w0, #0xe, lsl #16
   16920:	cmp	w1, w0
   16924:	b.ls	16954 <grub_unicode_get_comb_end+0xa0>  // b.plast
   16928:	ldr	x0, [sp, #40]
   1692c:	ldr	w0, [x0]
   16930:	bl	13798 <grub_unicode_get_comb_type>
   16934:	str	w0, [sp, #36]
   16938:	ldr	w0, [sp, #36]
   1693c:	cmp	w0, #0x0
   16940:	b.ne	1695c <grub_unicode_get_comb_end+0xa8>  // b.any
   16944:	ldr	x0, [sp, #40]
   16948:	b	16980 <grub_unicode_get_comb_end+0xcc>
   1694c:	nop
   16950:	b	16960 <grub_unicode_get_comb_end+0xac>
   16954:	nop
   16958:	b	16960 <grub_unicode_get_comb_end+0xac>
   1695c:	nop
   16960:	ldr	x0, [sp, #40]
   16964:	add	x0, x0, #0x4
   16968:	str	x0, [sp, #40]
   1696c:	ldr	x1, [sp, #40]
   16970:	ldr	x0, [sp, #24]
   16974:	cmp	x1, x0
   16978:	b.cc	168d0 <grub_unicode_get_comb_end+0x1c>  // b.lo, b.ul, b.last
   1697c:	ldr	x0, [sp, #24]
   16980:	ldp	x29, x30, [sp], #48
   16984:	ret

0000000000016988 <grub_file_getline>:
   16988:	stp	x29, x30, [sp, #-80]!
   1698c:	mov	x29, sp
   16990:	str	x0, [sp, #24]
   16994:	str	xzr, [sp, #72]
   16998:	str	wzr, [sp, #60]
   1699c:	mov	x0, #0x40                  	// #64
   169a0:	str	x0, [sp, #48]
   169a4:	ldr	x0, [sp, #48]
   169a8:	bl	0 <grub_malloc>
   169ac:	str	x0, [sp, #64]
   169b0:	ldr	x0, [sp, #64]
   169b4:	cmp	x0, #0x0
   169b8:	b.ne	169c4 <grub_file_getline+0x3c>  // b.any
   169bc:	mov	x0, #0x0                   	// #0
   169c0:	b	16abc <grub_file_getline+0x134>
   169c4:	add	x0, sp, #0x27
   169c8:	mov	x2, #0x1                   	// #1
   169cc:	mov	x1, x0
   169d0:	ldr	x0, [sp, #24]
   169d4:	bl	0 <grub_file_read>
   169d8:	cmp	x0, #0x1
   169dc:	b.ne	16a80 <grub_file_getline+0xf8>  // b.any
   169e0:	ldrb	w0, [sp, #39]
   169e4:	cmp	w0, #0xd
   169e8:	b.eq	16a78 <grub_file_getline+0xf0>  // b.none
   169ec:	ldr	x0, [sp, #72]
   169f0:	add	x0, x0, #0x1
   169f4:	ldr	x1, [sp, #48]
   169f8:	cmp	x1, x0
   169fc:	b.hi	16a40 <grub_file_getline+0xb8>  // b.pmore
   16a00:	ldr	x0, [sp, #64]
   16a04:	str	x0, [sp, #40]
   16a08:	ldr	x0, [sp, #48]
   16a0c:	lsl	x0, x0, #1
   16a10:	str	x0, [sp, #48]
   16a14:	ldr	x1, [sp, #48]
   16a18:	ldr	x0, [sp, #64]
   16a1c:	bl	0 <grub_realloc>
   16a20:	str	x0, [sp, #64]
   16a24:	ldr	x0, [sp, #64]
   16a28:	cmp	x0, #0x0
   16a2c:	b.ne	16a40 <grub_file_getline+0xb8>  // b.any
   16a30:	ldr	x0, [sp, #40]
   16a34:	bl	0 <grub_free>
   16a38:	mov	x0, #0x0                   	// #0
   16a3c:	b	16abc <grub_file_getline+0x134>
   16a40:	ldrb	w0, [sp, #39]
   16a44:	cmp	w0, #0xa
   16a48:	b.ne	16a58 <grub_file_getline+0xd0>  // b.any
   16a4c:	mov	w0, #0x1                   	// #1
   16a50:	str	w0, [sp, #60]
   16a54:	b	16a84 <grub_file_getline+0xfc>
   16a58:	ldr	x0, [sp, #72]
   16a5c:	add	x1, x0, #0x1
   16a60:	str	x1, [sp, #72]
   16a64:	ldr	x1, [sp, #64]
   16a68:	add	x0, x1, x0
   16a6c:	ldrb	w1, [sp, #39]
   16a70:	strb	w1, [x0]
   16a74:	b	169c4 <grub_file_getline+0x3c>
   16a78:	nop
   16a7c:	b	169c4 <grub_file_getline+0x3c>
   16a80:	nop
   16a84:	ldr	x1, [sp, #64]
   16a88:	ldr	x0, [sp, #72]
   16a8c:	add	x0, x1, x0
   16a90:	strb	wzr, [x0]
   16a94:	ldr	x0, [sp, #72]
   16a98:	cmp	x0, #0x0
   16a9c:	b.ne	16ab8 <grub_file_getline+0x130>  // b.any
   16aa0:	ldr	w0, [sp, #60]
   16aa4:	cmp	w0, #0x0
   16aa8:	b.ne	16ab8 <grub_file_getline+0x130>  // b.any
   16aac:	ldr	x0, [sp, #64]
   16ab0:	bl	0 <grub_free>
   16ab4:	str	xzr, [sp, #64]
   16ab8:	ldr	x0, [sp, #64]
   16abc:	ldp	x29, x30, [sp], #80
   16ac0:	ret
   16ac4:	nop
   16ac8:	stp	x29, x30, [sp, #-48]!
   16acc:	mov	x29, sp
   16ad0:	str	x0, [sp, #40]
   16ad4:	str	x1, [sp, #32]
   16ad8:	str	x2, [sp, #24]
   16adc:	str	x3, [sp, #16]
   16ae0:	mov	w4, #0x0                   	// #0
   16ae4:	ldr	x3, [sp, #16]
   16ae8:	ldr	x2, [sp, #24]
   16aec:	ldr	x1, [sp, #32]
   16af0:	ldr	x0, [sp, #40]
   16af4:	bl	0 <grub_register_command_prio>
   16af8:	ldp	x29, x30, [sp], #48
   16afc:	ret
   16b00:	stp	x29, x30, [sp, #-32]!
   16b04:	mov	x29, sp
   16b08:	str	x0, [sp, #24]
   16b0c:	ldr	x0, [sp, #24]
   16b10:	cmp	x0, #0x0
   16b14:	b.eq	16b4c <grub_file_getline+0x1c4>  // b.none
   16b18:	ldr	x0, [sp, #24]
   16b1c:	ldr	w0, [x0]
   16b20:	cmp	w0, #0x0
   16b24:	b.ne	16b34 <grub_file_getline+0x1ac>  // b.any
   16b28:	ldr	x0, [sp, #24]
   16b2c:	bl	17168 <grub_script_free>
   16b30:	b	16b50 <grub_file_getline+0x1c8>
   16b34:	ldr	x0, [sp, #24]
   16b38:	ldr	w0, [x0]
   16b3c:	sub	w1, w0, #0x1
   16b40:	ldr	x0, [sp, #24]
   16b44:	str	w1, [x0]
   16b48:	b	16b50 <grub_file_getline+0x1c8>
   16b4c:	nop
   16b50:	ldp	x29, x30, [sp], #32
   16b54:	ret

0000000000016b58 <grub_normal_parse_line>:
   16b58:	stp	x29, x30, [sp, #-64]!
   16b5c:	mov	x29, sp
   16b60:	str	x0, [sp, #40]
   16b64:	str	x1, [sp, #32]
   16b68:	str	x2, [sp, #24]
   16b6c:	ldr	x2, [sp, #24]
   16b70:	ldr	x1, [sp, #32]
   16b74:	ldr	x0, [sp, #40]
   16b78:	bl	17874 <grub_script_parse>
   16b7c:	str	x0, [sp, #56]
   16b80:	ldr	x0, [sp, #56]
   16b84:	cmp	x0, #0x0
   16b88:	b.eq	16b9c <grub_normal_parse_line+0x44>  // b.none
   16b8c:	ldr	x0, [sp, #56]
   16b90:	bl	1a8e8 <grub_script_execute>
   16b94:	ldr	x0, [sp, #56]
   16b98:	bl	16b00 <grub_file_getline+0x178>
   16b9c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16ba0:	add	x0, x0, #0x0
   16ba4:	ldr	x0, [x0]
   16ba8:	ldr	w0, [x0]
   16bac:	ldp	x29, x30, [sp], #64
   16bb0:	ret
   16bb4:	nop
	...

0000000000016bc0 <grub_script_init>:
   16bc0:	stp	x29, x30, [sp, #-16]!
   16bc4:	mov	x29, sp
   16bc8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16bcc:	add	x0, x0, #0x0
   16bd0:	ldr	x3, [x0]
   16bd4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16bd8:	add	x0, x0, #0x0
   16bdc:	ldr	x2, [x0]
   16be0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16be4:	add	x0, x0, #0x0
   16be8:	ldr	x1, [x0]
   16bec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16bf0:	add	x0, x0, #0x0
   16bf4:	ldr	x0, [x0]
   16bf8:	bl	16ac8 <grub_file_getline+0x140>
   16bfc:	mov	x1, x0
   16c00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c04:	add	x0, x0, #0x0
   16c08:	ldr	x0, [x0]
   16c0c:	str	x1, [x0]
   16c10:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c14:	add	x0, x0, #0x0
   16c18:	ldr	x3, [x0]
   16c1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c20:	add	x0, x0, #0x0
   16c24:	ldr	x2, [x0]
   16c28:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c2c:	add	x0, x0, #0x0
   16c30:	ldr	x1, [x0]
   16c34:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c38:	add	x0, x0, #0x0
   16c3c:	ldr	x0, [x0]
   16c40:	bl	16ac8 <grub_file_getline+0x140>
   16c44:	mov	x1, x0
   16c48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c4c:	add	x0, x0, #0x0
   16c50:	ldr	x0, [x0]
   16c54:	str	x1, [x0]
   16c58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c5c:	add	x0, x0, #0x0
   16c60:	ldr	x3, [x0]
   16c64:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c68:	add	x0, x0, #0x0
   16c6c:	ldr	x2, [x0]
   16c70:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c74:	add	x0, x0, #0x0
   16c78:	ldr	x1, [x0]
   16c7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c80:	add	x0, x0, #0x0
   16c84:	ldr	x0, [x0]
   16c88:	bl	16ac8 <grub_file_getline+0x140>
   16c8c:	mov	x1, x0
   16c90:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16c94:	add	x0, x0, #0x0
   16c98:	ldr	x0, [x0]
   16c9c:	str	x1, [x0]
   16ca0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16ca4:	add	x0, x0, #0x0
   16ca8:	ldr	x3, [x0]
   16cac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16cb0:	add	x0, x0, #0x0
   16cb4:	ldr	x2, [x0]
   16cb8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16cbc:	add	x0, x0, #0x0
   16cc0:	ldr	x1, [x0]
   16cc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16cc8:	add	x0, x0, #0x0
   16ccc:	ldr	x0, [x0]
   16cd0:	bl	16ac8 <grub_file_getline+0x140>
   16cd4:	mov	x1, x0
   16cd8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16cdc:	add	x0, x0, #0x0
   16ce0:	ldr	x0, [x0]
   16ce4:	str	x1, [x0]
   16ce8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16cec:	add	x0, x0, #0x0
   16cf0:	ldr	x3, [x0]
   16cf4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16cf8:	add	x0, x0, #0x0
   16cfc:	ldr	x2, [x0]
   16d00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16d04:	add	x0, x0, #0x0
   16d08:	ldr	x1, [x0]
   16d0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16d10:	add	x0, x0, #0x0
   16d14:	ldr	x0, [x0]
   16d18:	bl	16ac8 <grub_file_getline+0x140>
   16d1c:	mov	x1, x0
   16d20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16d24:	add	x0, x0, #0x0
   16d28:	ldr	x0, [x0]
   16d2c:	str	x1, [x0]
   16d30:	nop
   16d34:	ldp	x29, x30, [sp], #16
   16d38:	ret
   16d3c:	nop
	...

0000000000016de8 <grub_script_fini>:
   16de8:	stp	x29, x30, [sp, #-16]!
   16dec:	mov	x29, sp
   16df0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16df4:	add	x0, x0, #0x0
   16df8:	ldr	x0, [x0]
   16dfc:	ldr	x0, [x0]
   16e00:	cmp	x0, #0x0
   16e04:	b.eq	16e1c <grub_script_fini+0x34>  // b.none
   16e08:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e0c:	add	x0, x0, #0x0
   16e10:	ldr	x0, [x0]
   16e14:	ldr	x0, [x0]
   16e18:	bl	0 <grub_unregister_command>
   16e1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e20:	add	x0, x0, #0x0
   16e24:	ldr	x0, [x0]
   16e28:	str	xzr, [x0]
   16e2c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e30:	add	x0, x0, #0x0
   16e34:	ldr	x0, [x0]
   16e38:	ldr	x0, [x0]
   16e3c:	cmp	x0, #0x0
   16e40:	b.eq	16e58 <grub_script_fini+0x70>  // b.none
   16e44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e48:	add	x0, x0, #0x0
   16e4c:	ldr	x0, [x0]
   16e50:	ldr	x0, [x0]
   16e54:	bl	0 <grub_unregister_command>
   16e58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e5c:	add	x0, x0, #0x0
   16e60:	ldr	x0, [x0]
   16e64:	str	xzr, [x0]
   16e68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e6c:	add	x0, x0, #0x0
   16e70:	ldr	x0, [x0]
   16e74:	ldr	x0, [x0]
   16e78:	cmp	x0, #0x0
   16e7c:	b.eq	16e94 <grub_script_fini+0xac>  // b.none
   16e80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e84:	add	x0, x0, #0x0
   16e88:	ldr	x0, [x0]
   16e8c:	ldr	x0, [x0]
   16e90:	bl	0 <grub_unregister_command>
   16e94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16e98:	add	x0, x0, #0x0
   16e9c:	ldr	x0, [x0]
   16ea0:	str	xzr, [x0]
   16ea4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16ea8:	add	x0, x0, #0x0
   16eac:	ldr	x0, [x0]
   16eb0:	ldr	x0, [x0]
   16eb4:	cmp	x0, #0x0
   16eb8:	b.eq	16ed0 <grub_script_fini+0xe8>  // b.none
   16ebc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16ec0:	add	x0, x0, #0x0
   16ec4:	ldr	x0, [x0]
   16ec8:	ldr	x0, [x0]
   16ecc:	bl	0 <grub_unregister_command>
   16ed0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16ed4:	add	x0, x0, #0x0
   16ed8:	ldr	x0, [x0]
   16edc:	str	xzr, [x0]
   16ee0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16ee4:	add	x0, x0, #0x0
   16ee8:	ldr	x0, [x0]
   16eec:	ldr	x0, [x0]
   16ef0:	cmp	x0, #0x0
   16ef4:	b.eq	16f0c <grub_script_fini+0x124>  // b.none
   16ef8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16efc:	add	x0, x0, #0x0
   16f00:	ldr	x0, [x0]
   16f04:	ldr	x0, [x0]
   16f08:	bl	0 <grub_unregister_command>
   16f0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   16f10:	add	x0, x0, #0x0
   16f14:	ldr	x0, [x0]
   16f18:	str	xzr, [x0]
   16f1c:	nop
   16f20:	ldp	x29, x30, [sp], #16
   16f24:	ret
	...
   16f50:	stp	x29, x30, [sp, #-48]!
   16f54:	mov	x29, sp
   16f58:	str	x0, [sp, #40]
   16f5c:	str	x1, [sp, #32]
   16f60:	str	x2, [sp, #24]
   16f64:	ldr	x2, [sp, #24]
   16f68:	ldr	x1, [sp, #32]
   16f6c:	ldr	x0, [sp, #40]
   16f70:	bl	0 <grub_memmove>
   16f74:	ldp	x29, x30, [sp], #48
   16f78:	ret
   16f7c:	stp	x29, x30, [sp, #-32]!
   16f80:	mov	x29, sp
   16f84:	str	x0, [sp, #24]
   16f88:	ldr	x0, [sp, #24]
   16f8c:	cmp	x0, #0x0
   16f90:	b.eq	16fc8 <grub_script_fini+0x1e0>  // b.none
   16f94:	ldr	x0, [sp, #24]
   16f98:	ldr	w0, [x0]
   16f9c:	cmp	w0, #0x0
   16fa0:	b.ne	16fb0 <grub_script_fini+0x1c8>  // b.any
   16fa4:	ldr	x0, [sp, #24]
   16fa8:	bl	17168 <grub_script_free>
   16fac:	b	16fcc <grub_script_fini+0x1e4>
   16fb0:	ldr	x0, [sp, #24]
   16fb4:	ldr	w0, [x0]
   16fb8:	sub	w1, w0, #0x1
   16fbc:	ldr	x0, [sp, #24]
   16fc0:	str	w1, [x0]
   16fc4:	b	16fcc <grub_script_fini+0x1e4>
   16fc8:	nop
   16fcc:	ldp	x29, x30, [sp], #32
   16fd0:	ret

0000000000016fd4 <grub_script_malloc>:
   16fd4:	stp	x29, x30, [sp, #-48]!
   16fd8:	mov	x29, sp
   16fdc:	str	x0, [sp, #24]
   16fe0:	str	x1, [sp, #16]
   16fe4:	ldr	x0, [sp, #16]
   16fe8:	add	x0, x0, #0xf
   16fec:	bl	0 <grub_malloc>
   16ff0:	str	x0, [sp, #40]
   16ff4:	ldr	x0, [sp, #40]
   16ff8:	cmp	x0, #0x0
   16ffc:	b.ne	17008 <grub_script_malloc+0x34>  // b.any
   17000:	mov	x0, #0x0                   	// #0
   17004:	b	1705c <grub_script_malloc+0x88>
   17008:	ldr	x4, [sp, #40]
   1700c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17010:	add	x0, x0, #0x0
   17014:	ldr	x3, [x0]
   17018:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1701c:	add	x0, x0, #0x0
   17020:	ldr	x2, [x0]
   17024:	mov	w1, #0x32                  	// #50
   17028:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1702c:	add	x0, x0, #0x0
   17030:	ldr	x0, [x0]
   17034:	bl	0 <grub_real_dprintf>
   17038:	ldr	x0, [sp, #24]
   1703c:	ldr	x1, [x0, #16]
   17040:	ldr	x0, [sp, #40]
   17044:	str	x1, [x0]
   17048:	ldr	x0, [sp, #24]
   1704c:	ldr	x1, [sp, #40]
   17050:	str	x1, [x0, #16]
   17054:	ldr	x0, [sp, #40]
   17058:	add	x0, x0, #0x8
   1705c:	ldp	x29, x30, [sp], #48
   17060:	ret
   17064:	nop
	...

0000000000017080 <grub_script_mem_free>:
   17080:	stp	x29, x30, [sp, #-48]!
   17084:	mov	x29, sp
   17088:	str	x0, [sp, #24]
   1708c:	b	170dc <grub_script_mem_free+0x5c>
   17090:	ldr	x0, [sp, #24]
   17094:	ldr	x0, [x0]
   17098:	str	x0, [sp, #40]
   1709c:	ldr	x4, [sp, #24]
   170a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   170a4:	add	x0, x0, #0x0
   170a8:	ldr	x3, [x0]
   170ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   170b0:	add	x0, x0, #0x0
   170b4:	ldr	x2, [x0]
   170b8:	mov	w1, #0x41                  	// #65
   170bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   170c0:	add	x0, x0, #0x0
   170c4:	ldr	x0, [x0]
   170c8:	bl	0 <grub_real_dprintf>
   170cc:	ldr	x0, [sp, #24]
   170d0:	bl	0 <grub_free>
   170d4:	ldr	x0, [sp, #40]
   170d8:	str	x0, [sp, #24]
   170dc:	ldr	x0, [sp, #24]
   170e0:	cmp	x0, #0x0
   170e4:	b.ne	17090 <grub_script_mem_free+0x10>  // b.any
   170e8:	nop
   170ec:	nop
   170f0:	ldp	x29, x30, [sp], #48
   170f4:	ret
	...

0000000000017110 <grub_script_mem_record>:
   17110:	sub	sp, sp, #0x20
   17114:	str	x0, [sp, #8]
   17118:	ldr	x0, [sp, #8]
   1711c:	ldr	x0, [x0, #16]
   17120:	str	x0, [sp, #24]
   17124:	ldr	x0, [sp, #8]
   17128:	str	xzr, [x0, #16]
   1712c:	ldr	x0, [sp, #24]
   17130:	add	sp, sp, #0x20
   17134:	ret

0000000000017138 <grub_script_mem_record_stop>:
   17138:	sub	sp, sp, #0x20
   1713c:	str	x0, [sp, #8]
   17140:	str	x1, [sp]
   17144:	ldr	x0, [sp, #8]
   17148:	ldr	x0, [x0, #16]
   1714c:	str	x0, [sp, #24]
   17150:	ldr	x0, [sp, #8]
   17154:	ldr	x1, [sp]
   17158:	str	x1, [x0, #16]
   1715c:	ldr	x0, [sp, #24]
   17160:	add	sp, sp, #0x20
   17164:	ret

0000000000017168 <grub_script_free>:
   17168:	stp	x29, x30, [sp, #-48]!
   1716c:	mov	x29, sp
   17170:	str	x0, [sp, #24]
   17174:	ldr	x0, [sp, #24]
   17178:	cmp	x0, #0x0
   1717c:	b.eq	171e0 <grub_script_free+0x78>  // b.none
   17180:	ldr	x0, [sp, #24]
   17184:	ldr	x0, [x0, #8]
   17188:	cmp	x0, #0x0
   1718c:	b.eq	1719c <grub_script_free+0x34>  // b.none
   17190:	ldr	x0, [sp, #24]
   17194:	ldr	x0, [x0, #8]
   17198:	bl	17080 <grub_script_mem_free>
   1719c:	ldr	x0, [sp, #24]
   171a0:	ldr	x0, [x0, #32]
   171a4:	str	x0, [sp, #40]
   171a8:	b	171c8 <grub_script_free+0x60>
   171ac:	ldr	x0, [sp, #40]
   171b0:	ldr	x0, [x0, #24]
   171b4:	str	x0, [sp, #32]
   171b8:	ldr	x0, [sp, #40]
   171bc:	bl	16f7c <grub_script_fini+0x194>
   171c0:	ldr	x0, [sp, #32]
   171c4:	str	x0, [sp, #40]
   171c8:	ldr	x0, [sp, #40]
   171cc:	cmp	x0, #0x0
   171d0:	b.ne	171ac <grub_script_free+0x44>  // b.any
   171d4:	ldr	x0, [sp, #24]
   171d8:	bl	0 <grub_free>
   171dc:	b	171e4 <grub_script_free+0x7c>
   171e0:	nop
   171e4:	ldp	x29, x30, [sp], #48
   171e8:	ret

00000000000171ec <grub_script_arg_add>:
   171ec:	stp	x29, x30, [sp, #-80]!
   171f0:	mov	x29, sp
   171f4:	str	x0, [sp, #40]
   171f8:	str	x1, [sp, #32]
   171fc:	str	w2, [sp, #28]
   17200:	str	x3, [sp, #16]
   17204:	mov	x1, #0x20                  	// #32
   17208:	ldr	x0, [sp, #40]
   1720c:	bl	16fd4 <grub_script_malloc>
   17210:	str	x0, [sp, #64]
   17214:	ldr	x0, [sp, #64]
   17218:	cmp	x0, #0x0
   1721c:	b.ne	17228 <grub_script_arg_add+0x3c>  // b.any
   17220:	ldr	x0, [sp, #32]
   17224:	b	172ec <grub_script_arg_add+0x100>
   17228:	ldr	x0, [sp, #64]
   1722c:	ldr	w1, [sp, #28]
   17230:	str	w1, [x0]
   17234:	ldr	x0, [sp, #64]
   17238:	str	xzr, [x0, #16]
   1723c:	ldr	x0, [sp, #16]
   17240:	bl	0 <grub_strlen>
   17244:	add	w0, w0, #0x1
   17248:	str	w0, [sp, #60]
   1724c:	ldrsw	x0, [sp, #60]
   17250:	mov	x1, x0
   17254:	ldr	x0, [sp, #40]
   17258:	bl	16fd4 <grub_script_malloc>
   1725c:	mov	x1, x0
   17260:	ldr	x0, [sp, #64]
   17264:	str	x1, [x0, #8]
   17268:	ldr	x0, [sp, #64]
   1726c:	ldr	x0, [x0, #8]
   17270:	cmp	x0, #0x0
   17274:	b.ne	17280 <grub_script_arg_add+0x94>  // b.any
   17278:	ldr	x0, [sp, #32]
   1727c:	b	172ec <grub_script_arg_add+0x100>
   17280:	ldr	x0, [sp, #64]
   17284:	ldr	x0, [x0, #8]
   17288:	ldrsw	x1, [sp, #60]
   1728c:	mov	x2, x1
   17290:	ldr	x1, [sp, #16]
   17294:	bl	16f50 <grub_script_fini+0x168>
   17298:	ldr	x0, [sp, #64]
   1729c:	str	xzr, [x0, #24]
   172a0:	ldr	x0, [sp, #32]
   172a4:	cmp	x0, #0x0
   172a8:	b.ne	172b4 <grub_script_arg_add+0xc8>  // b.any
   172ac:	ldr	x0, [sp, #64]
   172b0:	b	172ec <grub_script_arg_add+0x100>
   172b4:	ldr	x0, [sp, #32]
   172b8:	str	x0, [sp, #72]
   172bc:	b	172cc <grub_script_arg_add+0xe0>
   172c0:	ldr	x0, [sp, #72]
   172c4:	ldr	x0, [x0, #24]
   172c8:	str	x0, [sp, #72]
   172cc:	ldr	x0, [sp, #72]
   172d0:	ldr	x0, [x0, #24]
   172d4:	cmp	x0, #0x0
   172d8:	b.ne	172c0 <grub_script_arg_add+0xd4>  // b.any
   172dc:	ldr	x0, [sp, #72]
   172e0:	ldr	x1, [sp, #64]
   172e4:	str	x1, [x0, #24]
   172e8:	ldr	x0, [sp, #32]
   172ec:	ldp	x29, x30, [sp], #80
   172f0:	ret

00000000000172f4 <grub_script_add_arglist>:
   172f4:	stp	x29, x30, [sp, #-64]!
   172f8:	mov	x29, sp
   172fc:	str	x0, [sp, #40]
   17300:	str	x1, [sp, #32]
   17304:	str	x2, [sp, #24]
   17308:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1730c:	add	x0, x0, #0x0
   17310:	ldr	x3, [x0]
   17314:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17318:	add	x0, x0, #0x0
   1731c:	ldr	x2, [x0]
   17320:	mov	w1, #0xa3                  	// #163
   17324:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17328:	add	x0, x0, #0x0
   1732c:	ldr	x0, [x0]
   17330:	bl	0 <grub_real_dprintf>
   17334:	mov	x1, #0x18                  	// #24
   17338:	ldr	x0, [sp, #40]
   1733c:	bl	16fd4 <grub_script_malloc>
   17340:	str	x0, [sp, #48]
   17344:	ldr	x0, [sp, #48]
   17348:	cmp	x0, #0x0
   1734c:	b.ne	17358 <grub_script_add_arglist+0x64>  // b.any
   17350:	ldr	x0, [sp, #32]
   17354:	b	173e8 <grub_script_add_arglist+0xf4>
   17358:	ldr	x0, [sp, #48]
   1735c:	str	xzr, [x0]
   17360:	ldr	x0, [sp, #48]
   17364:	ldr	x1, [sp, #24]
   17368:	str	x1, [x0, #8]
   1736c:	ldr	x0, [sp, #48]
   17370:	str	wzr, [x0, #16]
   17374:	ldr	x0, [sp, #32]
   17378:	cmp	x0, #0x0
   1737c:	b.ne	1739c <grub_script_add_arglist+0xa8>  // b.any
   17380:	ldr	x0, [sp, #48]
   17384:	ldr	w0, [x0, #16]
   17388:	add	w1, w0, #0x1
   1738c:	ldr	x0, [sp, #48]
   17390:	str	w1, [x0, #16]
   17394:	ldr	x0, [sp, #48]
   17398:	b	173e8 <grub_script_add_arglist+0xf4>
   1739c:	ldr	x0, [sp, #32]
   173a0:	ldr	w0, [x0, #16]
   173a4:	add	w1, w0, #0x1
   173a8:	ldr	x0, [sp, #32]
   173ac:	str	w1, [x0, #16]
   173b0:	ldr	x0, [sp, #32]
   173b4:	str	x0, [sp, #56]
   173b8:	b	173c8 <grub_script_add_arglist+0xd4>
   173bc:	ldr	x0, [sp, #56]
   173c0:	ldr	x0, [x0]
   173c4:	str	x0, [sp, #56]
   173c8:	ldr	x0, [sp, #56]
   173cc:	ldr	x0, [x0]
   173d0:	cmp	x0, #0x0
   173d4:	b.ne	173bc <grub_script_add_arglist+0xc8>  // b.any
   173d8:	ldr	x0, [sp, #56]
   173dc:	ldr	x1, [sp, #48]
   173e0:	str	x1, [x0]
   173e4:	ldr	x0, [sp, #32]
   173e8:	ldp	x29, x30, [sp], #64
   173ec:	ret
	...

0000000000017408 <grub_script_create_cmdline>:
   17408:	stp	x29, x30, [sp, #-48]!
   1740c:	mov	x29, sp
   17410:	str	x0, [sp, #24]
   17414:	str	x1, [sp, #16]
   17418:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1741c:	add	x0, x0, #0x0
   17420:	ldr	x3, [x0]
   17424:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17428:	add	x0, x0, #0x0
   1742c:	ldr	x2, [x0]
   17430:	mov	w1, #0xc6                  	// #198
   17434:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17438:	add	x0, x0, #0x0
   1743c:	ldr	x0, [x0]
   17440:	bl	0 <grub_real_dprintf>
   17444:	mov	x1, #0x18                  	// #24
   17448:	ldr	x0, [sp, #24]
   1744c:	bl	16fd4 <grub_script_malloc>
   17450:	str	x0, [sp, #40]
   17454:	ldr	x0, [sp, #40]
   17458:	cmp	x0, #0x0
   1745c:	b.ne	17468 <grub_script_create_cmdline+0x60>  // b.any
   17460:	mov	x0, #0x0                   	// #0
   17464:	b	17494 <grub_script_create_cmdline+0x8c>
   17468:	ldr	x0, [sp, #40]
   1746c:	adrp	x1, 0 <grub_normal_free_menu-0x168>
   17470:	add	x1, x1, #0x0
   17474:	ldr	x1, [x1]
   17478:	str	x1, [x0]
   1747c:	ldr	x0, [sp, #40]
   17480:	str	xzr, [x0, #8]
   17484:	ldr	x0, [sp, #40]
   17488:	ldr	x1, [sp, #16]
   1748c:	str	x1, [x0, #16]
   17490:	ldr	x0, [sp, #40]
   17494:	ldp	x29, x30, [sp], #48
   17498:	ret
   1749c:	nop
	...

00000000000174c0 <grub_script_create_cmdif>:
   174c0:	stp	x29, x30, [sp, #-64]!
   174c4:	mov	x29, sp
   174c8:	str	x0, [sp, #40]
   174cc:	str	x1, [sp, #32]
   174d0:	str	x2, [sp, #24]
   174d4:	str	x3, [sp, #16]
   174d8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   174dc:	add	x0, x0, #0x0
   174e0:	ldr	x3, [x0]
   174e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   174e8:	add	x0, x0, #0x0
   174ec:	ldr	x2, [x0]
   174f0:	mov	w1, #0xdf                  	// #223
   174f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   174f8:	add	x0, x0, #0x0
   174fc:	ldr	x0, [x0]
   17500:	bl	0 <grub_real_dprintf>
   17504:	mov	x1, #0x28                  	// #40
   17508:	ldr	x0, [sp, #40]
   1750c:	bl	16fd4 <grub_script_malloc>
   17510:	str	x0, [sp, #56]
   17514:	ldr	x0, [sp, #56]
   17518:	cmp	x0, #0x0
   1751c:	b.ne	17528 <grub_script_create_cmdif+0x68>  // b.any
   17520:	mov	x0, #0x0                   	// #0
   17524:	b	1756c <grub_script_create_cmdif+0xac>
   17528:	ldr	x0, [sp, #56]
   1752c:	adrp	x1, 0 <grub_normal_free_menu-0x168>
   17530:	add	x1, x1, #0x0
   17534:	ldr	x1, [x1]
   17538:	str	x1, [x0]
   1753c:	ldr	x0, [sp, #56]
   17540:	str	xzr, [x0, #8]
   17544:	ldr	x0, [sp, #56]
   17548:	ldr	x1, [sp, #32]
   1754c:	str	x1, [x0, #16]
   17550:	ldr	x0, [sp, #56]
   17554:	ldr	x1, [sp, #24]
   17558:	str	x1, [x0, #24]
   1755c:	ldr	x0, [sp, #56]
   17560:	ldr	x1, [sp, #16]
   17564:	str	x1, [x0, #32]
   17568:	ldr	x0, [sp, #56]
   1756c:	ldp	x29, x30, [sp], #64
   17570:	ret
   17574:	nop
	...

0000000000017598 <grub_script_create_cmdfor>:
   17598:	stp	x29, x30, [sp, #-64]!
   1759c:	mov	x29, sp
   175a0:	str	x0, [sp, #40]
   175a4:	str	x1, [sp, #32]
   175a8:	str	x2, [sp, #24]
   175ac:	str	x3, [sp, #16]
   175b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   175b4:	add	x0, x0, #0x0
   175b8:	ldr	x3, [x0]
   175bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   175c0:	add	x0, x0, #0x0
   175c4:	ldr	x2, [x0]
   175c8:	mov	w1, #0xf7                  	// #247
   175cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   175d0:	add	x0, x0, #0x0
   175d4:	ldr	x0, [x0]
   175d8:	bl	0 <grub_real_dprintf>
   175dc:	mov	x1, #0x28                  	// #40
   175e0:	ldr	x0, [sp, #40]
   175e4:	bl	16fd4 <grub_script_malloc>
   175e8:	str	x0, [sp, #56]
   175ec:	ldr	x0, [sp, #56]
   175f0:	cmp	x0, #0x0
   175f4:	b.ne	17600 <grub_script_create_cmdfor+0x68>  // b.any
   175f8:	mov	x0, #0x0                   	// #0
   175fc:	b	17644 <grub_script_create_cmdfor+0xac>
   17600:	ldr	x0, [sp, #56]
   17604:	adrp	x1, 0 <grub_normal_free_menu-0x168>
   17608:	add	x1, x1, #0x0
   1760c:	ldr	x1, [x1]
   17610:	str	x1, [x0]
   17614:	ldr	x0, [sp, #56]
   17618:	str	xzr, [x0, #8]
   1761c:	ldr	x0, [sp, #56]
   17620:	ldr	x1, [sp, #32]
   17624:	str	x1, [x0, #16]
   17628:	ldr	x0, [sp, #56]
   1762c:	ldr	x1, [sp, #24]
   17630:	str	x1, [x0, #24]
   17634:	ldr	x0, [sp, #56]
   17638:	ldr	x1, [sp, #16]
   1763c:	str	x1, [x0, #32]
   17640:	ldr	x0, [sp, #56]
   17644:	ldp	x29, x30, [sp], #64
   17648:	ret
   1764c:	nop
	...

0000000000017670 <grub_script_create_cmdwhile>:
   17670:	stp	x29, x30, [sp, #-64]!
   17674:	mov	x29, sp
   17678:	str	x0, [sp, #40]
   1767c:	str	x1, [sp, #32]
   17680:	str	x2, [sp, #24]
   17684:	str	w3, [sp, #20]
   17688:	mov	x1, #0x28                  	// #40
   1768c:	ldr	x0, [sp, #40]
   17690:	bl	16fd4 <grub_script_malloc>
   17694:	str	x0, [sp, #56]
   17698:	ldr	x0, [sp, #56]
   1769c:	cmp	x0, #0x0
   176a0:	b.ne	176ac <grub_script_create_cmdwhile+0x3c>  // b.any
   176a4:	mov	x0, #0x0                   	// #0
   176a8:	b	176f0 <grub_script_create_cmdwhile+0x80>
   176ac:	ldr	x0, [sp, #56]
   176b0:	adrp	x1, 0 <grub_normal_free_menu-0x168>
   176b4:	add	x1, x1, #0x0
   176b8:	ldr	x1, [x1]
   176bc:	str	x1, [x0]
   176c0:	ldr	x0, [sp, #56]
   176c4:	str	xzr, [x0, #8]
   176c8:	ldr	x0, [sp, #56]
   176cc:	ldr	x1, [sp, #32]
   176d0:	str	x1, [x0, #16]
   176d4:	ldr	x0, [sp, #56]
   176d8:	ldr	x1, [sp, #24]
   176dc:	str	x1, [x0, #24]
   176e0:	ldr	x0, [sp, #56]
   176e4:	ldr	w1, [sp, #20]
   176e8:	str	w1, [x0, #32]
   176ec:	ldr	x0, [sp, #56]
   176f0:	ldp	x29, x30, [sp], #64
   176f4:	ret
	...

0000000000017700 <grub_script_append_cmd>:
   17700:	stp	x29, x30, [sp, #-64]!
   17704:	mov	x29, sp
   17708:	str	x0, [sp, #40]
   1770c:	str	x1, [sp, #32]
   17710:	str	x2, [sp, #24]
   17714:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17718:	add	x0, x0, #0x0
   1771c:	ldr	x3, [x0]
   17720:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17724:	add	x0, x0, #0x0
   17728:	ldr	x2, [x0]
   1772c:	mov	w1, #0x126                 	// #294
   17730:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17734:	add	x0, x0, #0x0
   17738:	ldr	x0, [x0]
   1773c:	bl	0 <grub_real_dprintf>
   17740:	ldr	x0, [sp, #24]
   17744:	cmp	x0, #0x0
   17748:	b.ne	17754 <grub_script_append_cmd+0x54>  // b.any
   1774c:	ldr	x0, [sp, #32]
   17750:	b	177e0 <grub_script_append_cmd+0xe0>
   17754:	ldr	x0, [sp, #32]
   17758:	cmp	x0, #0x0
   1775c:	b.ne	177a8 <grub_script_append_cmd+0xa8>  // b.any
   17760:	mov	x1, #0x10                  	// #16
   17764:	ldr	x0, [sp, #40]
   17768:	bl	16fd4 <grub_script_malloc>
   1776c:	str	x0, [sp, #32]
   17770:	ldr	x0, [sp, #32]
   17774:	cmp	x0, #0x0
   17778:	b.ne	17784 <grub_script_append_cmd+0x84>  // b.any
   1777c:	mov	x0, #0x0                   	// #0
   17780:	b	177e0 <grub_script_append_cmd+0xe0>
   17784:	ldr	x0, [sp, #32]
   17788:	adrp	x1, 0 <grub_normal_free_menu-0x168>
   1778c:	add	x1, x1, #0x0
   17790:	ldr	x1, [x1]
   17794:	str	x1, [x0]
   17798:	ldr	x0, [sp, #32]
   1779c:	ldr	x1, [sp, #24]
   177a0:	str	x1, [x0, #8]
   177a4:	b	177dc <grub_script_append_cmd+0xdc>
   177a8:	ldr	x0, [sp, #32]
   177ac:	str	x0, [sp, #56]
   177b0:	b	177c0 <grub_script_append_cmd+0xc0>
   177b4:	ldr	x0, [sp, #56]
   177b8:	ldr	x0, [x0, #8]
   177bc:	str	x0, [sp, #56]
   177c0:	ldr	x0, [sp, #56]
   177c4:	ldr	x0, [x0, #8]
   177c8:	cmp	x0, #0x0
   177cc:	b.ne	177b4 <grub_script_append_cmd+0xb4>  // b.any
   177d0:	ldr	x0, [sp, #56]
   177d4:	ldr	x1, [sp, #24]
   177d8:	str	x1, [x0, #8]
   177dc:	ldr	x0, [sp, #32]
   177e0:	ldp	x29, x30, [sp], #64
   177e4:	ret
	...

0000000000017808 <grub_script_create>:
   17808:	stp	x29, x30, [sp, #-48]!
   1780c:	mov	x29, sp
   17810:	str	x0, [sp, #24]
   17814:	str	x1, [sp, #16]
   17818:	mov	x0, #0x28                  	// #40
   1781c:	bl	0 <grub_malloc>
   17820:	str	x0, [sp, #40]
   17824:	ldr	x0, [sp, #40]
   17828:	cmp	x0, #0x0
   1782c:	b.ne	17838 <grub_script_create+0x30>  // b.any
   17830:	mov	x0, #0x0                   	// #0
   17834:	b	1786c <grub_script_create+0x64>
   17838:	ldr	x0, [sp, #40]
   1783c:	ldr	x1, [sp, #16]
   17840:	str	x1, [x0, #8]
   17844:	ldr	x0, [sp, #40]
   17848:	ldr	x1, [sp, #24]
   1784c:	str	x1, [x0, #16]
   17850:	ldr	x0, [sp, #40]
   17854:	str	wzr, [x0]
   17858:	ldr	x0, [sp, #40]
   1785c:	str	xzr, [x0, #32]
   17860:	ldr	x0, [sp, #40]
   17864:	str	xzr, [x0, #24]
   17868:	ldr	x0, [sp, #40]
   1786c:	ldp	x29, x30, [sp], #48
   17870:	ret

0000000000017874 <grub_script_parse>:
   17874:	stp	x29, x30, [sp, #-96]!
   17878:	mov	x29, sp
   1787c:	str	x0, [sp, #40]
   17880:	str	x1, [sp, #32]
   17884:	str	x2, [sp, #24]
   17888:	mov	x1, #0x0                   	// #0
   1788c:	mov	x0, #0x0                   	// #0
   17890:	bl	17808 <grub_script_create>
   17894:	str	x0, [sp, #88]
   17898:	ldr	x0, [sp, #88]
   1789c:	cmp	x0, #0x0
   178a0:	b.ne	178ac <grub_script_parse+0x38>  // b.any
   178a4:	mov	x0, #0x0                   	// #0
   178a8:	b	179cc <grub_script_parse+0x158>
   178ac:	mov	x0, #0x30                  	// #48
   178b0:	bl	0 <grub_zalloc>
   178b4:	str	x0, [sp, #80]
   178b8:	ldr	x0, [sp, #80]
   178bc:	cmp	x0, #0x0
   178c0:	b.ne	178d4 <grub_script_parse+0x60>  // b.any
   178c4:	ldr	x0, [sp, #88]
   178c8:	bl	0 <grub_free>
   178cc:	mov	x0, #0x0                   	// #0
   178d0:	b	179cc <grub_script_parse+0x158>
   178d4:	ldr	x3, [sp, #24]
   178d8:	ldr	x2, [sp, #32]
   178dc:	ldr	x1, [sp, #40]
   178e0:	ldr	x0, [sp, #80]
   178e4:	bl	1b4c0 <grub_script_lexer_init>
   178e8:	str	x0, [sp, #72]
   178ec:	ldr	x0, [sp, #72]
   178f0:	cmp	x0, #0x0
   178f4:	b.ne	17910 <grub_script_parse+0x9c>  // b.any
   178f8:	ldr	x0, [sp, #88]
   178fc:	bl	0 <grub_free>
   17900:	ldr	x0, [sp, #80]
   17904:	bl	0 <grub_free>
   17908:	mov	x0, #0x0                   	// #0
   1790c:	b	179cc <grub_script_parse+0x158>
   17910:	ldr	x0, [sp, #80]
   17914:	ldr	x1, [sp, #72]
   17918:	str	x1, [x0, #40]
   1791c:	ldr	x0, [sp, #80]
   17920:	bl	17110 <grub_script_mem_record>
   17924:	str	x0, [sp, #64]
   17928:	ldr	x0, [sp, #80]
   1792c:	bl	1cbe8 <grub_script_yyparse>
   17930:	cmp	w0, #0x0
   17934:	b.ne	17948 <grub_script_parse+0xd4>  // b.any
   17938:	ldr	x0, [sp, #80]
   1793c:	ldr	w0, [x0, #8]
   17940:	cmp	w0, #0x0
   17944:	b.eq	17980 <grub_script_parse+0x10c>  // b.none
   17948:	ldr	x1, [sp, #64]
   1794c:	ldr	x0, [sp, #80]
   17950:	bl	17138 <grub_script_mem_record_stop>
   17954:	str	x0, [sp, #56]
   17958:	ldr	x0, [sp, #56]
   1795c:	bl	17080 <grub_script_mem_free>
   17960:	ldr	x0, [sp, #72]
   17964:	bl	1b618 <grub_script_lexer_fini>
   17968:	ldr	x0, [sp, #80]
   1796c:	bl	0 <grub_free>
   17970:	ldr	x0, [sp, #88]
   17974:	bl	0 <grub_free>
   17978:	mov	x0, #0x0                   	// #0
   1797c:	b	179cc <grub_script_parse+0x158>
   17980:	ldr	x1, [sp, #64]
   17984:	ldr	x0, [sp, #80]
   17988:	bl	17138 <grub_script_mem_record_stop>
   1798c:	mov	x1, x0
   17990:	ldr	x0, [sp, #88]
   17994:	str	x1, [x0, #8]
   17998:	ldr	x0, [sp, #80]
   1799c:	ldr	x1, [x0, #32]
   179a0:	ldr	x0, [sp, #88]
   179a4:	str	x1, [x0, #16]
   179a8:	ldr	x0, [sp, #80]
   179ac:	ldr	x1, [x0, #24]
   179b0:	ldr	x0, [sp, #88]
   179b4:	str	x1, [x0, #32]
   179b8:	ldr	x0, [sp, #72]
   179bc:	bl	1b618 <grub_script_lexer_fini>
   179c0:	ldr	x0, [sp, #80]
   179c4:	bl	0 <grub_free>
   179c8:	ldr	x0, [sp, #88]
   179cc:	ldp	x29, x30, [sp], #96
   179d0:	ret
   179d4:	nop
   179d8:	sub	sp, sp, #0x20
   179dc:	str	x0, [sp, #8]
   179e0:	str	x1, [sp]
   179e4:	ldr	x0, [sp, #8]
   179e8:	str	x0, [sp, #24]
   179ec:	ldr	x0, [sp]
   179f0:	str	x0, [sp, #16]
   179f4:	ldr	x0, [sp, #24]
   179f8:	add	x1, x0, #0x1
   179fc:	str	x1, [sp, #24]
   17a00:	ldr	x1, [sp, #16]
   17a04:	ldrb	w1, [x1]
   17a08:	strb	w1, [x0]
   17a0c:	ldr	x0, [sp, #16]
   17a10:	add	x1, x0, #0x1
   17a14:	str	x1, [sp, #16]
   17a18:	ldrb	w0, [x0]
   17a1c:	cmp	w0, #0x0
   17a20:	b.ne	179f4 <grub_script_parse+0x180>  // b.any
   17a24:	ldr	x0, [sp, #24]
   17a28:	sub	x0, x0, #0x1
   17a2c:	add	sp, sp, #0x20
   17a30:	ret
   17a34:	sub	sp, sp, #0x10
   17a38:	str	w0, [sp, #12]
   17a3c:	ldr	w0, [sp, #12]
   17a40:	cmp	w0, #0x2f
   17a44:	b.le	17a5c <grub_script_parse+0x1e8>
   17a48:	ldr	w0, [sp, #12]
   17a4c:	cmp	w0, #0x39
   17a50:	b.gt	17a5c <grub_script_parse+0x1e8>
   17a54:	mov	w0, #0x1                   	// #1
   17a58:	b	17a60 <grub_script_parse+0x1ec>
   17a5c:	mov	w0, #0x0                   	// #0
   17a60:	add	sp, sp, #0x10
   17a64:	ret
   17a68:	stp	x29, x30, [sp, #-32]!
   17a6c:	mov	x29, sp
   17a70:	str	x0, [sp, #24]
   17a74:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17a78:	add	x0, x0, #0x0
   17a7c:	ldr	x0, [x0]
   17a80:	ldr	x0, [x0]
   17a84:	ldr	x1, [sp, #24]
   17a88:	bl	0 <grub_named_list_find>
   17a8c:	ldp	x29, x30, [sp], #32
   17a90:	ret
   17a94:	nop
	...
   17aa0:	stp	x29, x30, [sp, #-64]!
   17aa4:	mov	x29, sp
   17aa8:	str	x0, [sp, #24]
   17aac:	ldr	x0, [sp, #24]
   17ab0:	bl	0 <grub_strlen>
   17ab4:	str	w0, [sp, #56]
   17ab8:	ldr	w0, [sp, #56]
   17abc:	lsl	w0, w0, #1
   17ac0:	add	w0, w0, #0x1
   17ac4:	sxtw	x0, w0
   17ac8:	bl	0 <grub_malloc>
   17acc:	str	x0, [sp, #48]
   17ad0:	ldr	x0, [sp, #48]
   17ad4:	cmp	x0, #0x0
   17ad8:	b.ne	17ae4 <grub_script_parse+0x270>  // b.any
   17adc:	mov	x0, #0x0                   	// #0
   17ae0:	b	17b84 <grub_script_parse+0x310>
   17ae4:	str	wzr, [sp, #60]
   17ae8:	b	17b50 <grub_script_parse+0x2dc>
   17aec:	ldrb	w0, [sp, #47]
   17af0:	cmp	w0, #0x2a
   17af4:	b.eq	17b10 <grub_script_parse+0x29c>  // b.none
   17af8:	ldrb	w0, [sp, #47]
   17afc:	cmp	w0, #0x5c
   17b00:	b.eq	17b10 <grub_script_parse+0x29c>  // b.none
   17b04:	ldrb	w0, [sp, #47]
   17b08:	cmp	w0, #0x3f
   17b0c:	b.ne	17b30 <grub_script_parse+0x2bc>  // b.any
   17b10:	ldr	w0, [sp, #60]
   17b14:	add	w1, w0, #0x1
   17b18:	str	w1, [sp, #60]
   17b1c:	sxtw	x0, w0
   17b20:	ldr	x1, [sp, #48]
   17b24:	add	x0, x1, x0
   17b28:	mov	w1, #0x5c                  	// #92
   17b2c:	strb	w1, [x0]
   17b30:	ldr	w0, [sp, #60]
   17b34:	add	w1, w0, #0x1
   17b38:	str	w1, [sp, #60]
   17b3c:	sxtw	x0, w0
   17b40:	ldr	x1, [sp, #48]
   17b44:	add	x0, x1, x0
   17b48:	ldrb	w1, [sp, #47]
   17b4c:	strb	w1, [x0]
   17b50:	ldr	x0, [sp, #24]
   17b54:	add	x1, x0, #0x1
   17b58:	str	x1, [sp, #24]
   17b5c:	ldrb	w0, [x0]
   17b60:	strb	w0, [sp, #47]
   17b64:	ldrb	w0, [sp, #47]
   17b68:	cmp	w0, #0x0
   17b6c:	b.ne	17aec <grub_script_parse+0x278>  // b.any
   17b70:	ldrsw	x0, [sp, #60]
   17b74:	ldr	x1, [sp, #48]
   17b78:	add	x0, x1, x0
   17b7c:	strb	wzr, [x0]
   17b80:	ldr	x0, [sp, #48]
   17b84:	ldp	x29, x30, [sp], #64
   17b88:	ret
   17b8c:	stp	x29, x30, [sp, #-64]!
   17b90:	mov	x29, sp
   17b94:	str	x0, [sp, #24]
   17b98:	ldr	x0, [sp, #24]
   17b9c:	bl	0 <grub_strlen>
   17ba0:	str	w0, [sp, #56]
   17ba4:	ldr	w0, [sp, #56]
   17ba8:	add	w0, w0, #0x1
   17bac:	sxtw	x0, w0
   17bb0:	bl	0 <grub_malloc>
   17bb4:	str	x0, [sp, #48]
   17bb8:	ldr	x0, [sp, #48]
   17bbc:	cmp	x0, #0x0
   17bc0:	b.ne	17bcc <grub_script_parse+0x358>  // b.any
   17bc4:	mov	x0, #0x0                   	// #0
   17bc8:	b	17c64 <grub_script_parse+0x3f0>
   17bcc:	str	wzr, [sp, #60]
   17bd0:	b	17c30 <grub_script_parse+0x3bc>
   17bd4:	ldrb	w0, [sp, #47]
   17bd8:	cmp	w0, #0x5c
   17bdc:	b.ne	17c10 <grub_script_parse+0x39c>  // b.any
   17be0:	ldr	x0, [sp, #24]
   17be4:	add	x1, x0, #0x1
   17be8:	str	x1, [sp, #24]
   17bec:	ldr	w1, [sp, #60]
   17bf0:	add	w2, w1, #0x1
   17bf4:	str	w2, [sp, #60]
   17bf8:	sxtw	x1, w1
   17bfc:	ldr	x2, [sp, #48]
   17c00:	add	x1, x2, x1
   17c04:	ldrb	w0, [x0]
   17c08:	strb	w0, [x1]
   17c0c:	b	17c30 <grub_script_parse+0x3bc>
   17c10:	ldr	w0, [sp, #60]
   17c14:	add	w1, w0, #0x1
   17c18:	str	w1, [sp, #60]
   17c1c:	sxtw	x0, w0
   17c20:	ldr	x1, [sp, #48]
   17c24:	add	x0, x1, x0
   17c28:	ldrb	w1, [sp, #47]
   17c2c:	strb	w1, [x0]
   17c30:	ldr	x0, [sp, #24]
   17c34:	add	x1, x0, #0x1
   17c38:	str	x1, [sp, #24]
   17c3c:	ldrb	w0, [x0]
   17c40:	strb	w0, [sp, #47]
   17c44:	ldrb	w0, [sp, #47]
   17c48:	cmp	w0, #0x0
   17c4c:	b.ne	17bd4 <grub_script_parse+0x360>  // b.any
   17c50:	ldrsw	x0, [sp, #60]
   17c54:	ldr	x1, [sp, #48]
   17c58:	add	x0, x1, x0
   17c5c:	strb	wzr, [x0]
   17c60:	ldr	x0, [sp, #48]
   17c64:	ldp	x29, x30, [sp], #64
   17c68:	ret
   17c6c:	stp	x29, x30, [sp, #-32]!
   17c70:	mov	x29, sp
   17c74:	str	x0, [sp, #24]
   17c78:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17c7c:	add	x0, x0, #0x0
   17c80:	ldr	x0, [x0]
   17c84:	ldr	x0, [x0]
   17c88:	cmp	x0, #0x0
   17c8c:	b.eq	17d88 <grub_script_parse+0x514>  // b.none
   17c90:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17c94:	add	x0, x0, #0x0
   17c98:	ldr	x0, [x0]
   17c9c:	ldr	x0, [x0]
   17ca0:	ldr	w2, [x0, #8]
   17ca4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17ca8:	add	x0, x0, #0x0
   17cac:	ldr	x0, [x0]
   17cb0:	ldr	x0, [x0]
   17cb4:	ldr	w1, [x0, #4]
   17cb8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17cbc:	add	x0, x0, #0x0
   17cc0:	ldr	x0, [x0]
   17cc4:	ldr	x0, [x0]
   17cc8:	add	w1, w2, w1
   17ccc:	str	w1, [x0, #8]
   17cd0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17cd4:	add	x0, x0, #0x0
   17cd8:	ldr	x0, [x0]
   17cdc:	ldr	x0, [x0]
   17ce0:	ldr	x2, [x0, #16]
   17ce4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17ce8:	add	x0, x0, #0x0
   17cec:	ldr	x0, [x0]
   17cf0:	ldr	x0, [x0]
   17cf4:	ldr	w0, [x0, #4]
   17cf8:	mov	w0, w0
   17cfc:	lsl	x0, x0, #3
   17d00:	neg	x1, x0
   17d04:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17d08:	add	x0, x0, #0x0
   17d0c:	ldr	x0, [x0]
   17d10:	ldr	x0, [x0]
   17d14:	add	x1, x2, x1
   17d18:	str	x1, [x0, #16]
   17d1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17d20:	add	x0, x0, #0x0
   17d24:	ldr	x0, [x0]
   17d28:	ldr	x0, [x0]
   17d2c:	ldr	w0, [x0]
   17d30:	and	w0, w0, #0x2
   17d34:	cmp	w0, #0x0
   17d38:	b.eq	17d54 <grub_script_parse+0x4e0>  // b.none
   17d3c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17d40:	add	x0, x0, #0x0
   17d44:	ldr	x0, [x0]
   17d48:	ldr	x0, [x0]
   17d4c:	add	x0, x0, #0x8
   17d50:	bl	1b948 <grub_script_argv_free>
   17d54:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17d58:	add	x0, x0, #0x0
   17d5c:	ldr	x0, [x0]
   17d60:	ldr	x0, [x0]
   17d64:	ldr	w0, [x0]
   17d68:	and	w0, w0, #0x1
   17d6c:	cmp	w0, #0x0
   17d70:	b.eq	17d88 <grub_script_parse+0x514>  // b.none
   17d74:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17d78:	add	x0, x0, #0x0
   17d7c:	ldr	x0, [x0]
   17d80:	ldr	x0, [x0]
   17d84:	bl	0 <grub_free>
   17d88:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17d8c:	add	x0, x0, #0x0
   17d90:	ldr	x0, [x0]
   17d94:	ldr	x1, [sp, #24]
   17d98:	str	x1, [x0]
   17d9c:	nop
   17da0:	ldp	x29, x30, [sp], #32
   17da4:	ret
	...

0000000000017db0 <grub_script_break>:
   17db0:	stp	x29, x30, [sp, #-64]!
   17db4:	mov	x29, sp
   17db8:	str	x0, [sp, #40]
   17dbc:	str	w1, [sp, #36]
   17dc0:	str	x2, [sp, #24]
   17dc4:	str	xzr, [sp, #48]
   17dc8:	ldr	w0, [sp, #36]
   17dcc:	cmp	w0, #0x0
   17dd0:	b.ne	17de0 <grub_script_break+0x30>  // b.any
   17dd4:	mov	x0, #0x1                   	// #1
   17dd8:	str	x0, [sp, #56]
   17ddc:	b	17e94 <grub_script_break+0xe4>
   17de0:	ldr	w0, [sp, #36]
   17de4:	cmp	w0, #0x1
   17de8:	b.le	17e04 <grub_script_break+0x54>
   17dec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17df0:	add	x0, x0, #0x0
   17df4:	ldr	x1, [x0]
   17df8:	mov	w0, #0x12                  	// #18
   17dfc:	bl	0 <grub_error>
   17e00:	b	17f30 <grub_script_break+0x180>
   17e04:	ldr	x0, [sp, #24]
   17e08:	ldr	x0, [x0]
   17e0c:	add	x1, sp, #0x30
   17e10:	mov	w2, #0xa                   	// #10
   17e14:	bl	0 <grub_strtoul>
   17e18:	str	x0, [sp, #56]
   17e1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17e20:	add	x0, x0, #0x0
   17e24:	ldr	x0, [x0]
   17e28:	ldr	w0, [x0]
   17e2c:	cmp	w0, #0x0
   17e30:	b.eq	17e48 <grub_script_break+0x98>  // b.none
   17e34:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17e38:	add	x0, x0, #0x0
   17e3c:	ldr	x0, [x0]
   17e40:	ldr	w0, [x0]
   17e44:	b	17f30 <grub_script_break+0x180>
   17e48:	ldr	x0, [sp, #48]
   17e4c:	ldrb	w0, [x0]
   17e50:	cmp	w0, #0x0
   17e54:	b.eq	17e70 <grub_script_break+0xc0>  // b.none
   17e58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17e5c:	add	x0, x0, #0x0
   17e60:	ldr	x1, [x0]
   17e64:	mov	w0, #0x12                  	// #18
   17e68:	bl	0 <grub_error>
   17e6c:	b	17f30 <grub_script_break+0x180>
   17e70:	ldr	x0, [sp, #56]
   17e74:	cmp	x0, #0x0
   17e78:	b.ne	17e94 <grub_script_break+0xe4>  // b.any
   17e7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17e80:	add	x0, x0, #0x0
   17e84:	ldr	x1, [x0]
   17e88:	mov	w0, #0x12                  	// #18
   17e8c:	bl	0 <grub_error>
   17e90:	b	17f30 <grub_script_break+0x180>
   17e94:	ldr	x0, [sp, #40]
   17e98:	ldr	x2, [x0, #16]
   17e9c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17ea0:	add	x0, x0, #0x0
   17ea4:	ldr	x1, [x0]
   17ea8:	mov	x0, x2
   17eac:	bl	0 <grub_strcmp>
   17eb0:	cmp	w0, #0x0
   17eb4:	cset	w0, ne  // ne = any
   17eb8:	and	w0, w0, #0xff
   17ebc:	and	x1, x0, #0xff
   17ec0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17ec4:	add	x0, x0, #0x0
   17ec8:	ldr	x0, [x0]
   17ecc:	str	x1, [x0]
   17ed0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17ed4:	add	x0, x0, #0x0
   17ed8:	ldr	x0, [x0]
   17edc:	ldr	x1, [sp, #56]
   17ee0:	str	x1, [x0]
   17ee4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17ee8:	add	x0, x0, #0x0
   17eec:	ldr	x0, [x0]
   17ef0:	ldr	x1, [x0]
   17ef4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17ef8:	add	x0, x0, #0x0
   17efc:	ldr	x0, [x0]
   17f00:	ldr	x0, [x0]
   17f04:	cmp	x1, x0
   17f08:	b.ls	17f2c <grub_script_break+0x17c>  // b.plast
   17f0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17f10:	add	x0, x0, #0x0
   17f14:	ldr	x0, [x0]
   17f18:	ldr	x1, [x0]
   17f1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17f20:	add	x0, x0, #0x0
   17f24:	ldr	x0, [x0]
   17f28:	str	x1, [x0]
   17f2c:	mov	w0, #0x0                   	// #0
   17f30:	ldp	x29, x30, [sp], #64
   17f34:	ret
	...

0000000000017f78 <grub_script_shift>:
   17f78:	stp	x29, x30, [sp, #-64]!
   17f7c:	mov	x29, sp
   17f80:	str	x0, [sp, #40]
   17f84:	str	w1, [sp, #36]
   17f88:	str	x2, [sp, #24]
   17f8c:	str	xzr, [sp, #48]
   17f90:	str	xzr, [sp, #56]
   17f94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   17f98:	add	x0, x0, #0x0
   17f9c:	ldr	x0, [x0]
   17fa0:	ldr	x0, [x0]
   17fa4:	cmp	x0, #0x0
   17fa8:	b.ne	17fb4 <grub_script_shift+0x3c>  // b.any
   17fac:	mov	w0, #0x0                   	// #0
   17fb0:	b	180dc <grub_script_shift+0x164>
   17fb4:	ldr	w0, [sp, #36]
   17fb8:	cmp	w0, #0x0
   17fbc:	b.ne	17fcc <grub_script_shift+0x54>  // b.any
   17fc0:	mov	x0, #0x1                   	// #1
   17fc4:	str	x0, [sp, #56]
   17fc8:	b	18010 <grub_script_shift+0x98>
   17fcc:	ldr	w0, [sp, #36]
   17fd0:	cmp	w0, #0x1
   17fd4:	b.le	17fe0 <grub_script_shift+0x68>
   17fd8:	mov	w0, #0x12                  	// #18
   17fdc:	b	180dc <grub_script_shift+0x164>
   17fe0:	ldr	x0, [sp, #24]
   17fe4:	ldr	x0, [x0]
   17fe8:	add	x1, sp, #0x30
   17fec:	mov	w2, #0xa                   	// #10
   17ff0:	bl	0 <grub_strtoul>
   17ff4:	str	x0, [sp, #56]
   17ff8:	ldr	x0, [sp, #48]
   17ffc:	ldrb	w0, [x0]
   18000:	cmp	w0, #0x0
   18004:	b.eq	18010 <grub_script_shift+0x98>  // b.none
   18008:	mov	w0, #0x12                  	// #18
   1800c:	b	180dc <grub_script_shift+0x164>
   18010:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18014:	add	x0, x0, #0x0
   18018:	ldr	x0, [x0]
   1801c:	ldr	x0, [x0]
   18020:	ldr	w0, [x0, #8]
   18024:	mov	w0, w0
   18028:	ldr	x1, [sp, #56]
   1802c:	cmp	x1, x0
   18030:	b.ls	1803c <grub_script_shift+0xc4>  // b.plast
   18034:	mov	w0, #0x12                  	// #18
   18038:	b	180dc <grub_script_shift+0x164>
   1803c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18040:	add	x0, x0, #0x0
   18044:	ldr	x0, [x0]
   18048:	ldr	x0, [x0]
   1804c:	ldr	w1, [x0, #4]
   18050:	ldr	x0, [sp, #56]
   18054:	mov	w2, w0
   18058:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1805c:	add	x0, x0, #0x0
   18060:	ldr	x0, [x0]
   18064:	ldr	x0, [x0]
   18068:	add	w1, w1, w2
   1806c:	str	w1, [x0, #4]
   18070:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18074:	add	x0, x0, #0x0
   18078:	ldr	x0, [x0]
   1807c:	ldr	x0, [x0]
   18080:	ldr	w1, [x0, #8]
   18084:	ldr	x0, [sp, #56]
   18088:	mov	w2, w0
   1808c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18090:	add	x0, x0, #0x0
   18094:	ldr	x0, [x0]
   18098:	ldr	x0, [x0]
   1809c:	sub	w1, w1, w2
   180a0:	str	w1, [x0, #8]
   180a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   180a8:	add	x0, x0, #0x0
   180ac:	ldr	x0, [x0]
   180b0:	ldr	x0, [x0]
   180b4:	ldr	x2, [x0, #16]
   180b8:	ldr	x0, [sp, #56]
   180bc:	lsl	x1, x0, #3
   180c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   180c4:	add	x0, x0, #0x0
   180c8:	ldr	x0, [x0]
   180cc:	ldr	x0, [x0]
   180d0:	add	x1, x2, x1
   180d4:	str	x1, [x0, #16]
   180d8:	mov	w0, #0x0                   	// #0
   180dc:	ldp	x29, x30, [sp], #64
   180e0:	ret
   180e4:	nop
	...

00000000000180f0 <grub_script_setparams>:
   180f0:	stp	x29, x30, [sp, #-80]!
   180f4:	mov	x29, sp
   180f8:	str	x0, [sp, #40]
   180fc:	str	w1, [sp, #36]
   18100:	str	x2, [sp, #24]
   18104:	str	wzr, [sp, #48]
   18108:	str	xzr, [sp, #56]
   1810c:	str	xzr, [sp, #64]
   18110:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18114:	add	x0, x0, #0x0
   18118:	ldr	x0, [x0]
   1811c:	ldr	x0, [x0]
   18120:	cmp	x0, #0x0
   18124:	b.ne	18130 <grub_script_setparams+0x40>  // b.any
   18128:	mov	w0, #0x11                  	// #17
   1812c:	b	181d0 <grub_script_setparams+0xe0>
   18130:	mov	x0, #0x20                  	// #32
   18134:	bl	0 <grub_malloc>
   18138:	str	x0, [sp, #72]
   1813c:	ldr	x0, [sp, #72]
   18140:	cmp	x0, #0x0
   18144:	b.ne	1815c <grub_script_setparams+0x6c>  // b.any
   18148:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1814c:	add	x0, x0, #0x0
   18150:	ldr	x0, [x0]
   18154:	ldr	w0, [x0]
   18158:	b	181d0 <grub_script_setparams+0xe0>
   1815c:	add	x0, sp, #0x30
   18160:	ldr	x2, [sp, #24]
   18164:	ldr	w1, [sp, #36]
   18168:	bl	1b9d8 <grub_script_argv_make>
   1816c:	cmp	w0, #0x0
   18170:	b.eq	18190 <grub_script_setparams+0xa0>  // b.none
   18174:	ldr	x0, [sp, #72]
   18178:	bl	0 <grub_free>
   1817c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18180:	add	x0, x0, #0x0
   18184:	ldr	x0, [x0]
   18188:	ldr	w0, [x0]
   1818c:	b	181d0 <grub_script_setparams+0xe0>
   18190:	ldr	x0, [sp, #72]
   18194:	str	wzr, [x0, #4]
   18198:	ldr	x0, [sp, #72]
   1819c:	add	x0, x0, #0x8
   181a0:	mov	x3, x0
   181a4:	add	x2, sp, #0x30
   181a8:	ldp	x0, x1, [x2]
   181ac:	stp	x0, x1, [x3]
   181b0:	ldr	x0, [x2, #16]
   181b4:	str	x0, [x3, #16]
   181b8:	ldr	x0, [sp, #72]
   181bc:	mov	w1, #0x3                   	// #3
   181c0:	str	w1, [x0]
   181c4:	ldr	x0, [sp, #72]
   181c8:	bl	17c6c <grub_script_parse+0x3f8>
   181cc:	mov	w0, #0x0                   	// #0
   181d0:	ldp	x29, x30, [sp], #80
   181d4:	ret
	...

00000000000181e8 <grub_script_return>:
   181e8:	stp	x29, x30, [sp, #-80]!
   181ec:	mov	x29, sp
   181f0:	str	x0, [sp, #40]
   181f4:	str	w1, [sp, #36]
   181f8:	str	x2, [sp, #24]
   181fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18200:	add	x0, x0, #0x0
   18204:	ldr	x0, [x0]
   18208:	ldr	x0, [x0]
   1820c:	cmp	x0, #0x0
   18210:	b.eq	18220 <grub_script_return+0x38>  // b.none
   18214:	ldr	w0, [sp, #36]
   18218:	cmp	w0, #0x1
   1821c:	b.le	18238 <grub_script_return+0x50>
   18220:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18224:	add	x0, x0, #0x0
   18228:	ldr	x1, [x0]
   1822c:	mov	w0, #0x12                  	// #18
   18230:	bl	0 <grub_error>
   18234:	b	18344 <grub_script_return+0x15c>
   18238:	ldr	w0, [sp, #36]
   1823c:	cmp	w0, #0x0
   18240:	b.ne	18294 <grub_script_return+0xac>  // b.any
   18244:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18248:	add	x0, x0, #0x0
   1824c:	ldr	x0, [x0]
   18250:	mov	x1, #0x1                   	// #1
   18254:	str	x1, [x0]
   18258:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1825c:	add	x0, x0, #0x0
   18260:	ldr	x0, [x0]
   18264:	bl	0 <grub_env_get>
   18268:	str	x0, [sp, #64]
   1826c:	ldr	x0, [sp, #64]
   18270:	cmp	x0, #0x0
   18274:	b.ne	18280 <grub_script_return+0x98>  // b.any
   18278:	mov	w0, #0x0                   	// #0
   1827c:	b	18344 <grub_script_return+0x15c>
   18280:	mov	w2, #0xa                   	// #10
   18284:	mov	x1, #0x0                   	// #0
   18288:	ldr	x0, [sp, #64]
   1828c:	bl	0 <grub_strtoul>
   18290:	b	18344 <grub_script_return+0x15c>
   18294:	ldr	x0, [sp, #24]
   18298:	ldr	x0, [x0]
   1829c:	add	x1, sp, #0x38
   182a0:	mov	w2, #0xa                   	// #10
   182a4:	bl	0 <grub_strtoul>
   182a8:	str	x0, [sp, #72]
   182ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   182b0:	add	x0, x0, #0x0
   182b4:	ldr	x0, [x0]
   182b8:	ldr	w0, [x0]
   182bc:	cmp	w0, #0x0
   182c0:	b.eq	182d8 <grub_script_return+0xf0>  // b.none
   182c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   182c8:	add	x0, x0, #0x0
   182cc:	ldr	x0, [x0]
   182d0:	ldr	w0, [x0]
   182d4:	b	18344 <grub_script_return+0x15c>
   182d8:	ldr	x0, [sp, #56]
   182dc:	ldrb	w0, [x0]
   182e0:	cmp	w0, #0x0
   182e4:	b.eq	18300 <grub_script_return+0x118>  // b.none
   182e8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   182ec:	add	x0, x0, #0x0
   182f0:	ldr	x1, [x0]
   182f4:	mov	w0, #0x12                  	// #18
   182f8:	bl	0 <grub_error>
   182fc:	b	18344 <grub_script_return+0x15c>
   18300:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18304:	add	x0, x0, #0x0
   18308:	ldr	x0, [x0]
   1830c:	mov	x1, #0x1                   	// #1
   18310:	str	x1, [x0]
   18314:	ldr	x0, [sp, #72]
   18318:	cmp	x0, #0x0
   1831c:	b.eq	18340 <grub_script_return+0x158>  // b.none
   18320:	ldr	x0, [sp, #72]
   18324:	mov	w2, w0
   18328:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1832c:	add	x0, x0, #0x0
   18330:	ldr	x1, [x0]
   18334:	mov	w0, w2
   18338:	bl	0 <grub_error>
   1833c:	b	18344 <grub_script_return+0x15c>
   18340:	mov	w0, #0x0                   	// #0
   18344:	ldp	x29, x30, [sp], #80
   18348:	ret
   1834c:	nop
	...
   18388:	stp	x29, x30, [sp, #-32]!
   1838c:	mov	x29, sp
   18390:	str	x0, [sp, #24]
   18394:	ldr	x0, [sp, #24]
   18398:	ldrb	w0, [x0]
   1839c:	bl	17a34 <grub_script_parse+0x1c0>
   183a0:	cmp	w0, #0x0
   183a4:	b.ne	183fc <grub_script_return+0x214>  // b.any
   183a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   183ac:	add	x0, x0, #0x0
   183b0:	ldr	x1, [x0]
   183b4:	ldr	x0, [sp, #24]
   183b8:	bl	0 <grub_strcmp>
   183bc:	cmp	w0, #0x0
   183c0:	b.eq	183fc <grub_script_return+0x214>  // b.none
   183c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   183c8:	add	x0, x0, #0x0
   183cc:	ldr	x1, [x0]
   183d0:	ldr	x0, [sp, #24]
   183d4:	bl	0 <grub_strcmp>
   183d8:	cmp	w0, #0x0
   183dc:	b.eq	183fc <grub_script_return+0x214>  // b.none
   183e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   183e4:	add	x0, x0, #0x0
   183e8:	ldr	x1, [x0]
   183ec:	ldr	x0, [sp, #24]
   183f0:	bl	0 <grub_strcmp>
   183f4:	cmp	w0, #0x0
   183f8:	b.ne	18404 <grub_script_return+0x21c>  // b.any
   183fc:	mov	w0, #0x1                   	// #1
   18400:	b	18408 <grub_script_return+0x220>
   18404:	mov	w0, #0x0                   	// #0
   18408:	ldp	x29, x30, [sp], #32
   1840c:	ret
	...
   18428:	stp	x29, x30, [sp, #-112]!
   1842c:	mov	x29, sp
   18430:	str	x19, [sp, #16]
   18434:	str	x0, [sp, #40]
   18438:	str	w1, [sp, #36]
   1843c:	str	wzr, [sp, #64]
   18440:	str	xzr, [sp, #72]
   18444:	str	xzr, [sp, #80]
   18448:	add	x0, sp, #0x40
   1844c:	bl	1bab4 <grub_script_argv_next>
   18450:	cmp	w0, #0x0
   18454:	b.ne	188f0 <grub_script_return+0x708>  // b.any
   18458:	ldr	x0, [sp, #40]
   1845c:	bl	18388 <grub_script_return+0x1a0>
   18460:	cmp	w0, #0x0
   18464:	b.ne	184dc <grub_script_return+0x2f4>  // b.any
   18468:	ldr	x0, [sp, #40]
   1846c:	bl	0 <grub_env_get>
   18470:	str	x0, [sp, #88]
   18474:	ldr	x0, [sp, #88]
   18478:	cmp	x0, #0x0
   1847c:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   18480:	ldr	x0, [sp, #88]
   18484:	ldrb	w0, [x0]
   18488:	cmp	w0, #0x0
   1848c:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   18490:	ldr	w0, [sp, #36]
   18494:	cmp	w0, #0x0
   18498:	b.ne	184b4 <grub_script_return+0x2cc>  // b.any
   1849c:	add	x0, sp, #0x40
   184a0:	ldr	x1, [sp, #88]
   184a4:	bl	1bcd8 <grub_script_argv_split_append>
   184a8:	cmp	w0, #0x0
   184ac:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   184b0:	b	18924 <grub_script_return+0x73c>
   184b4:	ldr	x0, [sp, #88]
   184b8:	bl	0 <grub_strlen>
   184bc:	mov	x1, x0
   184c0:	add	x0, sp, #0x40
   184c4:	mov	x2, x1
   184c8:	ldr	x1, [sp, #88]
   184cc:	bl	1bbc4 <grub_script_argv_append>
   184d0:	cmp	w0, #0x0
   184d4:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   184d8:	b	18924 <grub_script_return+0x73c>
   184dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   184e0:	add	x0, x0, #0x0
   184e4:	ldr	x0, [x0]
   184e8:	ldr	x0, [x0]
   184ec:	cmp	x0, #0x0
   184f0:	b.ne	18510 <grub_script_return+0x328>  // b.any
   184f4:	add	x0, sp, #0x40
   184f8:	mov	x2, #0x0                   	// #0
   184fc:	mov	x1, #0x0                   	// #0
   18500:	bl	1bbc4 <grub_script_argv_append>
   18504:	cmp	w0, #0x0
   18508:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   1850c:	b	18924 <grub_script_return+0x73c>
   18510:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18514:	add	x0, x0, #0x0
   18518:	ldr	x1, [x0]
   1851c:	ldr	x0, [sp, #40]
   18520:	bl	0 <grub_strcmp>
   18524:	cmp	w0, #0x0
   18528:	b.ne	18584 <grub_script_return+0x39c>  // b.any
   1852c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18530:	add	x0, x0, #0x0
   18534:	ldr	x0, [x0]
   18538:	ldr	x0, [x0]
   1853c:	ldr	w0, [x0, #8]
   18540:	add	x4, sp, #0x30
   18544:	mov	w3, w0
   18548:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1854c:	add	x0, x0, #0x0
   18550:	ldr	x2, [x0]
   18554:	mov	x1, #0xe                   	// #14
   18558:	mov	x0, x4
   1855c:	bl	0 <grub_snprintf>
   18560:	add	x0, sp, #0x30
   18564:	bl	0 <grub_strlen>
   18568:	mov	x2, x0
   1856c:	add	x1, sp, #0x30
   18570:	add	x0, sp, #0x40
   18574:	bl	1bbc4 <grub_script_argv_append>
   18578:	cmp	w0, #0x0
   1857c:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   18580:	b	18924 <grub_script_return+0x73c>
   18584:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18588:	add	x0, x0, #0x0
   1858c:	ldr	x1, [x0]
   18590:	ldr	x0, [sp, #40]
   18594:	bl	0 <grub_strcmp>
   18598:	cmp	w0, #0x0
   1859c:	b.ne	186d0 <grub_script_return+0x4e8>  // b.any
   185a0:	str	wzr, [sp, #108]
   185a4:	b	186ac <grub_script_return+0x4c4>
   185a8:	ldr	w0, [sp, #36]
   185ac:	cmp	w0, #0x0
   185b0:	b.ne	18608 <grub_script_return+0x420>  // b.any
   185b4:	ldr	w0, [sp, #108]
   185b8:	cmp	w0, #0x0
   185bc:	b.eq	185d0 <grub_script_return+0x3e8>  // b.none
   185c0:	add	x0, sp, #0x40
   185c4:	bl	1bab4 <grub_script_argv_next>
   185c8:	cmp	w0, #0x0
   185cc:	b.ne	188f8 <grub_script_return+0x710>  // b.any
   185d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   185d4:	add	x0, x0, #0x0
   185d8:	ldr	x0, [x0]
   185dc:	ldr	x0, [x0]
   185e0:	ldr	x1, [x0, #16]
   185e4:	ldr	w0, [sp, #108]
   185e8:	lsl	x0, x0, #3
   185ec:	add	x0, x1, x0
   185f0:	ldr	x1, [x0]
   185f4:	add	x0, sp, #0x40
   185f8:	bl	1bcd8 <grub_script_argv_split_append>
   185fc:	cmp	w0, #0x0
   18600:	b.eq	186a0 <grub_script_return+0x4b8>  // b.none
   18604:	b	18924 <grub_script_return+0x73c>
   18608:	ldr	w0, [sp, #108]
   1860c:	cmp	w0, #0x0
   18610:	b.eq	18638 <grub_script_return+0x450>  // b.none
   18614:	add	x3, sp, #0x40
   18618:	mov	x2, #0x1                   	// #1
   1861c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18620:	add	x0, x0, #0x0
   18624:	ldr	x1, [x0]
   18628:	mov	x0, x3
   1862c:	bl	1bbc4 <grub_script_argv_append>
   18630:	cmp	w0, #0x0
   18634:	b.ne	18900 <grub_script_return+0x718>  // b.any
   18638:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1863c:	add	x0, x0, #0x0
   18640:	ldr	x0, [x0]
   18644:	ldr	x0, [x0]
   18648:	ldr	x1, [x0, #16]
   1864c:	ldr	w0, [sp, #108]
   18650:	lsl	x0, x0, #3
   18654:	add	x0, x1, x0
   18658:	ldr	x19, [x0]
   1865c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18660:	add	x0, x0, #0x0
   18664:	ldr	x0, [x0]
   18668:	ldr	x0, [x0]
   1866c:	ldr	x1, [x0, #16]
   18670:	ldr	w0, [sp, #108]
   18674:	lsl	x0, x0, #3
   18678:	add	x0, x1, x0
   1867c:	ldr	x0, [x0]
   18680:	bl	0 <grub_strlen>
   18684:	mov	x1, x0
   18688:	add	x0, sp, #0x40
   1868c:	mov	x2, x1
   18690:	mov	x1, x19
   18694:	bl	1bbc4 <grub_script_argv_append>
   18698:	cmp	w0, #0x0
   1869c:	b.ne	18908 <grub_script_return+0x720>  // b.any
   186a0:	ldr	w0, [sp, #108]
   186a4:	add	w0, w0, #0x1
   186a8:	str	w0, [sp, #108]
   186ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   186b0:	add	x0, x0, #0x0
   186b4:	ldr	x0, [x0]
   186b8:	ldr	x0, [x0]
   186bc:	ldr	w0, [x0, #8]
   186c0:	ldr	w1, [sp, #108]
   186c4:	cmp	w1, w0
   186c8:	b.cc	185a8 <grub_script_return+0x3c0>  // b.lo, b.ul, b.last
   186cc:	b	188e8 <grub_script_return+0x700>
   186d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   186d4:	add	x0, x0, #0x0
   186d8:	ldr	x1, [x0]
   186dc:	ldr	x0, [sp, #40]
   186e0:	bl	0 <grub_strcmp>
   186e4:	cmp	w0, #0x0
   186e8:	b.ne	187ec <grub_script_return+0x604>  // b.any
   186ec:	str	wzr, [sp, #108]
   186f0:	b	187c8 <grub_script_return+0x5e0>
   186f4:	ldr	w0, [sp, #108]
   186f8:	cmp	w0, #0x0
   186fc:	b.eq	18710 <grub_script_return+0x528>  // b.none
   18700:	add	x0, sp, #0x40
   18704:	bl	1bab4 <grub_script_argv_next>
   18708:	cmp	w0, #0x0
   1870c:	b.ne	18910 <grub_script_return+0x728>  // b.any
   18710:	ldr	w0, [sp, #36]
   18714:	cmp	w0, #0x0
   18718:	b.ne	18754 <grub_script_return+0x56c>  // b.any
   1871c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18720:	add	x0, x0, #0x0
   18724:	ldr	x0, [x0]
   18728:	ldr	x0, [x0]
   1872c:	ldr	x1, [x0, #16]
   18730:	ldr	w0, [sp, #108]
   18734:	lsl	x0, x0, #3
   18738:	add	x0, x1, x0
   1873c:	ldr	x1, [x0]
   18740:	add	x0, sp, #0x40
   18744:	bl	1bcd8 <grub_script_argv_split_append>
   18748:	cmp	w0, #0x0
   1874c:	b.eq	187bc <grub_script_return+0x5d4>  // b.none
   18750:	b	18924 <grub_script_return+0x73c>
   18754:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18758:	add	x0, x0, #0x0
   1875c:	ldr	x0, [x0]
   18760:	ldr	x0, [x0]
   18764:	ldr	x1, [x0, #16]
   18768:	ldr	w0, [sp, #108]
   1876c:	lsl	x0, x0, #3
   18770:	add	x0, x1, x0
   18774:	ldr	x19, [x0]
   18778:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1877c:	add	x0, x0, #0x0
   18780:	ldr	x0, [x0]
   18784:	ldr	x0, [x0]
   18788:	ldr	x1, [x0, #16]
   1878c:	ldr	w0, [sp, #108]
   18790:	lsl	x0, x0, #3
   18794:	add	x0, x1, x0
   18798:	ldr	x0, [x0]
   1879c:	bl	0 <grub_strlen>
   187a0:	mov	x1, x0
   187a4:	add	x0, sp, #0x40
   187a8:	mov	x2, x1
   187ac:	mov	x1, x19
   187b0:	bl	1bbc4 <grub_script_argv_append>
   187b4:	cmp	w0, #0x0
   187b8:	b.ne	18918 <grub_script_return+0x730>  // b.any
   187bc:	ldr	w0, [sp, #108]
   187c0:	add	w0, w0, #0x1
   187c4:	str	w0, [sp, #108]
   187c8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   187cc:	add	x0, x0, #0x0
   187d0:	ldr	x0, [x0]
   187d4:	ldr	x0, [x0]
   187d8:	ldr	w0, [x0, #8]
   187dc:	ldr	w1, [sp, #108]
   187e0:	cmp	w1, w0
   187e4:	b.cc	186f4 <grub_script_return+0x50c>  // b.lo, b.ul, b.last
   187e8:	b	188e8 <grub_script_return+0x700>
   187ec:	mov	w2, #0xa                   	// #10
   187f0:	mov	x1, #0x0                   	// #0
   187f4:	ldr	x0, [sp, #40]
   187f8:	bl	0 <grub_strtoul>
   187fc:	str	x0, [sp, #96]
   18800:	ldr	x0, [sp, #96]
   18804:	cmp	x0, #0x0
   18808:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   1880c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18810:	add	x0, x0, #0x0
   18814:	ldr	x0, [x0]
   18818:	ldr	x0, [x0]
   1881c:	ldr	w0, [x0, #8]
   18820:	mov	w0, w0
   18824:	ldr	x1, [sp, #96]
   18828:	cmp	x1, x0
   1882c:	b.hi	188e8 <grub_script_return+0x700>  // b.pmore
   18830:	ldr	w0, [sp, #36]
   18834:	cmp	w0, #0x0
   18838:	b.ne	18878 <grub_script_return+0x690>  // b.any
   1883c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18840:	add	x0, x0, #0x0
   18844:	ldr	x0, [x0]
   18848:	ldr	x0, [x0]
   1884c:	ldr	x1, [x0, #16]
   18850:	ldr	x0, [sp, #96]
   18854:	lsl	x0, x0, #3
   18858:	sub	x0, x0, #0x8
   1885c:	add	x0, x1, x0
   18860:	ldr	x1, [x0]
   18864:	add	x0, sp, #0x40
   18868:	bl	1bcd8 <grub_script_argv_split_append>
   1886c:	cmp	w0, #0x0
   18870:	b.eq	188e8 <grub_script_return+0x700>  // b.none
   18874:	b	18924 <grub_script_return+0x73c>
   18878:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1887c:	add	x0, x0, #0x0
   18880:	ldr	x0, [x0]
   18884:	ldr	x0, [x0]
   18888:	ldr	x1, [x0, #16]
   1888c:	ldr	x0, [sp, #96]
   18890:	lsl	x0, x0, #3
   18894:	sub	x0, x0, #0x8
   18898:	add	x0, x1, x0
   1889c:	ldr	x19, [x0]
   188a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   188a4:	add	x0, x0, #0x0
   188a8:	ldr	x0, [x0]
   188ac:	ldr	x0, [x0]
   188b0:	ldr	x1, [x0, #16]
   188b4:	ldr	x0, [sp, #96]
   188b8:	lsl	x0, x0, #3
   188bc:	sub	x0, x0, #0x8
   188c0:	add	x0, x1, x0
   188c4:	ldr	x0, [x0]
   188c8:	bl	0 <grub_strlen>
   188cc:	mov	x1, x0
   188d0:	add	x0, sp, #0x40
   188d4:	mov	x2, x1
   188d8:	mov	x1, x19
   188dc:	bl	1bbc4 <grub_script_argv_append>
   188e0:	cmp	w0, #0x0
   188e4:	b.ne	18920 <grub_script_return+0x738>  // b.any
   188e8:	ldr	x0, [sp, #72]
   188ec:	b	18930 <grub_script_return+0x748>
   188f0:	nop
   188f4:	b	18924 <grub_script_return+0x73c>
   188f8:	nop
   188fc:	b	18924 <grub_script_return+0x73c>
   18900:	nop
   18904:	b	18924 <grub_script_return+0x73c>
   18908:	nop
   1890c:	b	18924 <grub_script_return+0x73c>
   18910:	nop
   18914:	b	18924 <grub_script_return+0x73c>
   18918:	nop
   1891c:	b	18924 <grub_script_return+0x73c>
   18920:	nop
   18924:	add	x0, sp, #0x40
   18928:	bl	1b948 <grub_script_argv_free>
   1892c:	mov	x0, #0x0                   	// #0
   18930:	ldr	x19, [sp, #16]
   18934:	ldp	x29, x30, [sp], #112
   18938:	ret
   1893c:	nop
	...
   18970:	stp	x29, x30, [sp, #-32]!
   18974:	mov	x29, sp
   18978:	str	x0, [sp, #24]
   1897c:	str	x1, [sp, #16]
   18980:	ldr	x0, [sp, #24]
   18984:	bl	18388 <grub_script_return+0x1a0>
   18988:	cmp	w0, #0x0
   1898c:	b.eq	189ac <grub_script_return+0x7c4>  // b.none
   18990:	ldr	x2, [sp, #24]
   18994:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18998:	add	x0, x0, #0x0
   1899c:	ldr	x1, [x0]
   189a0:	mov	w0, #0x12                  	// #18
   189a4:	bl	0 <grub_error>
   189a8:	b	189b8 <grub_script_return+0x7d0>
   189ac:	ldr	x1, [sp, #16]
   189b0:	ldr	x0, [sp, #24]
   189b4:	bl	0 <grub_env_set>
   189b8:	ldp	x29, x30, [sp], #32
   189bc:	ret
	...
   189c8:	stp	x29, x30, [sp, #-80]!
   189cc:	mov	x29, sp
   189d0:	str	x0, [sp, #40]
   189d4:	str	x1, [sp, #32]
   189d8:	str	x2, [sp, #24]
   189dc:	str	x3, [sp, #16]
   189e0:	str	wzr, [sp, #68]
   189e4:	ldr	x0, [sp, #40]
   189e8:	str	x0, [sp, #72]
   189ec:	b	18d9c <grub_script_return+0xbb4>
   189f0:	ldr	x0, [sp, #72]
   189f4:	ldrb	w0, [x0]
   189f8:	cmp	w0, #0x24
   189fc:	b.eq	18a58 <grub_script_return+0x870>  // b.none
   18a00:	cmp	w0, #0x5c
   18a04:	b.ne	18d38 <grub_script_return+0xb50>  // b.any
   18a08:	ldr	w0, [sp, #68]
   18a0c:	cmp	w0, #0x0
   18a10:	cset	w0, eq  // eq = none
   18a14:	and	w0, w0, #0xff
   18a18:	str	w0, [sp, #68]
   18a1c:	ldr	w0, [sp, #68]
   18a20:	cmp	w0, #0x0
   18a24:	b.ne	18a48 <grub_script_return+0x860>  // b.any
   18a28:	ldr	x0, [sp, #16]
   18a2c:	cmp	x0, #0x0
   18a30:	b.eq	18a48 <grub_script_return+0x860>  // b.none
   18a34:	ldr	x0, [sp, #16]
   18a38:	add	x1, x0, #0x1
   18a3c:	str	x1, [sp, #16]
   18a40:	mov	w1, #0x5c                  	// #92
   18a44:	strb	w1, [x0]
   18a48:	ldr	x0, [sp, #72]
   18a4c:	add	x0, x0, #0x1
   18a50:	str	x0, [sp, #72]
   18a54:	b	18d9c <grub_script_return+0xbb4>
   18a58:	ldr	w0, [sp, #68]
   18a5c:	cmp	w0, #0x0
   18a60:	b.eq	18a9c <grub_script_return+0x8b4>  // b.none
   18a64:	str	wzr, [sp, #68]
   18a68:	ldr	x0, [sp, #16]
   18a6c:	cmp	x0, #0x0
   18a70:	b.eq	18a8c <grub_script_return+0x8a4>  // b.none
   18a74:	ldr	x0, [sp, #16]
   18a78:	add	x1, x0, #0x1
   18a7c:	str	x1, [sp, #16]
   18a80:	ldr	x1, [sp, #72]
   18a84:	ldrb	w1, [x1]
   18a88:	strb	w1, [x0]
   18a8c:	ldr	x0, [sp, #72]
   18a90:	add	x0, x0, #0x1
   18a94:	str	x0, [sp, #72]
   18a98:	b	18d9c <grub_script_return+0xbb4>
   18a9c:	ldr	x0, [sp, #72]
   18aa0:	add	x0, x0, #0x1
   18aa4:	str	x0, [sp, #72]
   18aa8:	ldr	x0, [sp, #72]
   18aac:	ldrb	w0, [x0]
   18ab0:	cmp	w0, #0x7b
   18ab4:	b.eq	18b20 <grub_script_return+0x938>  // b.none
   18ab8:	cmp	w0, #0x7b
   18abc:	b.gt	18cfc <grub_script_return+0xb14>
   18ac0:	cmp	w0, #0x7a
   18ac4:	b.gt	18cfc <grub_script_return+0xb14>
   18ac8:	cmp	w0, #0x61
   18acc:	b.ge	18c00 <grub_script_return+0xa18>  // b.tcont
   18ad0:	cmp	w0, #0x5f
   18ad4:	b.eq	18c00 <grub_script_return+0xa18>  // b.none
   18ad8:	cmp	w0, #0x5f
   18adc:	b.gt	18cfc <grub_script_return+0xb14>
   18ae0:	cmp	w0, #0x5a
   18ae4:	b.gt	18cfc <grub_script_return+0xb14>
   18ae8:	cmp	w0, #0x41
   18aec:	b.ge	18c00 <grub_script_return+0xa18>  // b.tcont
   18af0:	cmp	w0, #0x3f
   18af4:	b.eq	18cc0 <grub_script_return+0xad8>  // b.none
   18af8:	cmp	w0, #0x3f
   18afc:	b.gt	18cfc <grub_script_return+0xb14>
   18b00:	cmp	w0, #0x23
   18b04:	b.eq	18cc0 <grub_script_return+0xad8>  // b.none
   18b08:	cmp	w0, #0x23
   18b0c:	b.lt	18cfc <grub_script_return+0xb14>  // b.tstop
   18b10:	sub	w0, w0, #0x30
   18b14:	cmp	w0, #0x9
   18b18:	b.hi	18cfc <grub_script_return+0xb14>  // b.pmore
   18b1c:	b	18b90 <grub_script_return+0x9a8>
   18b20:	ldr	x0, [sp, #72]
   18b24:	add	x0, x0, #0x1
   18b28:	str	x0, [sp, #56]
   18b2c:	mov	w1, #0x7d                  	// #125
   18b30:	ldr	x0, [sp, #56]
   18b34:	bl	0 <grub_strchr>
   18b38:	str	x0, [sp, #72]
   18b3c:	ldr	x0, [sp, #72]
   18b40:	cmp	x0, #0x0
   18b44:	b.eq	18d20 <grub_script_return+0xb38>  // b.none
   18b48:	ldr	x1, [sp, #72]
   18b4c:	ldr	x0, [sp, #56]
   18b50:	sub	x0, x1, x0
   18b54:	mov	x1, x0
   18b58:	add	x0, sp, #0x10
   18b5c:	ldr	x4, [sp, #32]
   18b60:	ldr	x3, [sp, #24]
   18b64:	mov	x2, x0
   18b68:	ldr	x0, [sp, #56]
   18b6c:	blr	x4
   18b70:	cmp	w0, #0x0
   18b74:	b.eq	18b80 <grub_script_return+0x998>  // b.none
   18b78:	mov	w0, #0x1                   	// #1
   18b7c:	b	18dd8 <grub_script_return+0xbf0>
   18b80:	ldr	x0, [sp, #72]
   18b84:	add	x0, x0, #0x1
   18b88:	str	x0, [sp, #72]
   18b8c:	b	18d34 <grub_script_return+0xb4c>
   18b90:	ldr	x0, [sp, #72]
   18b94:	str	x0, [sp, #56]
   18b98:	b	18ba8 <grub_script_return+0x9c0>
   18b9c:	ldr	x0, [sp, #72]
   18ba0:	add	x0, x0, #0x1
   18ba4:	str	x0, [sp, #72]
   18ba8:	ldr	x0, [sp, #72]
   18bac:	ldrb	w0, [x0]
   18bb0:	cmp	w0, #0x2f
   18bb4:	b.ls	18bc8 <grub_script_return+0x9e0>  // b.plast
   18bb8:	ldr	x0, [sp, #72]
   18bbc:	ldrb	w0, [x0]
   18bc0:	cmp	w0, #0x39
   18bc4:	b.ls	18b9c <grub_script_return+0x9b4>  // b.plast
   18bc8:	ldr	x1, [sp, #72]
   18bcc:	ldr	x0, [sp, #56]
   18bd0:	sub	x0, x1, x0
   18bd4:	mov	x1, x0
   18bd8:	add	x0, sp, #0x10
   18bdc:	ldr	x4, [sp, #32]
   18be0:	ldr	x3, [sp, #24]
   18be4:	mov	x2, x0
   18be8:	ldr	x0, [sp, #56]
   18bec:	blr	x4
   18bf0:	cmp	w0, #0x0
   18bf4:	b.eq	18d28 <grub_script_return+0xb40>  // b.none
   18bf8:	mov	w0, #0x1                   	// #1
   18bfc:	b	18dd8 <grub_script_return+0xbf0>
   18c00:	ldr	x0, [sp, #72]
   18c04:	str	x0, [sp, #56]
   18c08:	b	18c18 <grub_script_return+0xa30>
   18c0c:	ldr	x0, [sp, #72]
   18c10:	add	x0, x0, #0x1
   18c14:	str	x0, [sp, #72]
   18c18:	ldr	x0, [sp, #72]
   18c1c:	ldrb	w0, [x0]
   18c20:	cmp	w0, #0x2f
   18c24:	b.ls	18c38 <grub_script_return+0xa50>  // b.plast
   18c28:	ldr	x0, [sp, #72]
   18c2c:	ldrb	w0, [x0]
   18c30:	cmp	w0, #0x39
   18c34:	b.ls	18c0c <grub_script_return+0xa24>  // b.plast
   18c38:	ldr	x0, [sp, #72]
   18c3c:	ldrb	w0, [x0]
   18c40:	cmp	w0, #0x60
   18c44:	b.ls	18c58 <grub_script_return+0xa70>  // b.plast
   18c48:	ldr	x0, [sp, #72]
   18c4c:	ldrb	w0, [x0]
   18c50:	cmp	w0, #0x7a
   18c54:	b.ls	18c0c <grub_script_return+0xa24>  // b.plast
   18c58:	ldr	x0, [sp, #72]
   18c5c:	ldrb	w0, [x0]
   18c60:	cmp	w0, #0x40
   18c64:	b.ls	18c78 <grub_script_return+0xa90>  // b.plast
   18c68:	ldr	x0, [sp, #72]
   18c6c:	ldrb	w0, [x0]
   18c70:	cmp	w0, #0x5a
   18c74:	b.ls	18c0c <grub_script_return+0xa24>  // b.plast
   18c78:	ldr	x0, [sp, #72]
   18c7c:	ldrb	w0, [x0]
   18c80:	cmp	w0, #0x5f
   18c84:	b.eq	18c0c <grub_script_return+0xa24>  // b.none
   18c88:	ldr	x1, [sp, #72]
   18c8c:	ldr	x0, [sp, #56]
   18c90:	sub	x0, x1, x0
   18c94:	mov	x1, x0
   18c98:	add	x0, sp, #0x10
   18c9c:	ldr	x4, [sp, #32]
   18ca0:	ldr	x3, [sp, #24]
   18ca4:	mov	x2, x0
   18ca8:	ldr	x0, [sp, #56]
   18cac:	blr	x4
   18cb0:	cmp	w0, #0x0
   18cb4:	b.eq	18d30 <grub_script_return+0xb48>  // b.none
   18cb8:	mov	w0, #0x1                   	// #1
   18cbc:	b	18dd8 <grub_script_return+0xbf0>
   18cc0:	add	x0, sp, #0x10
   18cc4:	ldr	x4, [sp, #32]
   18cc8:	ldr	x3, [sp, #24]
   18ccc:	mov	x2, x0
   18cd0:	mov	x1, #0x1                   	// #1
   18cd4:	ldr	x0, [sp, #72]
   18cd8:	blr	x4
   18cdc:	cmp	w0, #0x0
   18ce0:	b.eq	18cec <grub_script_return+0xb04>  // b.none
   18ce4:	mov	w0, #0x1                   	// #1
   18ce8:	b	18dd8 <grub_script_return+0xbf0>
   18cec:	ldr	x0, [sp, #72]
   18cf0:	add	x0, x0, #0x1
   18cf4:	str	x0, [sp, #72]
   18cf8:	b	18d34 <grub_script_return+0xb4c>
   18cfc:	ldr	x0, [sp, #16]
   18d00:	cmp	x0, #0x0
   18d04:	b.eq	18d9c <grub_script_return+0xbb4>  // b.none
   18d08:	ldr	x0, [sp, #16]
   18d0c:	add	x1, x0, #0x1
   18d10:	str	x1, [sp, #16]
   18d14:	mov	w1, #0x24                  	// #36
   18d18:	strb	w1, [x0]
   18d1c:	b	18d9c <grub_script_return+0xbb4>
   18d20:	nop
   18d24:	b	18d9c <grub_script_return+0xbb4>
   18d28:	nop
   18d2c:	b	18d9c <grub_script_return+0xbb4>
   18d30:	nop
   18d34:	b	18d9c <grub_script_return+0xbb4>
   18d38:	ldr	w0, [sp, #68]
   18d3c:	cmp	w0, #0x0
   18d40:	b.eq	18d64 <grub_script_return+0xb7c>  // b.none
   18d44:	ldr	x0, [sp, #16]
   18d48:	cmp	x0, #0x0
   18d4c:	b.eq	18d64 <grub_script_return+0xb7c>  // b.none
   18d50:	ldr	x0, [sp, #16]
   18d54:	add	x1, x0, #0x1
   18d58:	str	x1, [sp, #16]
   18d5c:	mov	w1, #0x5c                  	// #92
   18d60:	strb	w1, [x0]
   18d64:	str	wzr, [sp, #68]
   18d68:	ldr	x0, [sp, #16]
   18d6c:	cmp	x0, #0x0
   18d70:	b.eq	18d8c <grub_script_return+0xba4>  // b.none
   18d74:	ldr	x0, [sp, #16]
   18d78:	add	x1, x0, #0x1
   18d7c:	str	x1, [sp, #16]
   18d80:	ldr	x1, [sp, #72]
   18d84:	ldrb	w1, [x1]
   18d88:	strb	w1, [x0]
   18d8c:	ldr	x0, [sp, #72]
   18d90:	add	x0, x0, #0x1
   18d94:	str	x0, [sp, #72]
   18d98:	nop
   18d9c:	ldr	x0, [sp, #72]
   18da0:	cmp	x0, #0x0
   18da4:	b.eq	18db8 <grub_script_return+0xbd0>  // b.none
   18da8:	ldr	x0, [sp, #72]
   18dac:	ldrb	w0, [x0]
   18db0:	cmp	w0, #0x0
   18db4:	b.ne	189f0 <grub_script_return+0x808>  // b.any
   18db8:	ldr	x0, [sp, #16]
   18dbc:	cmp	x0, #0x0
   18dc0:	b.eq	18dd4 <grub_script_return+0xbec>  // b.none
   18dc4:	ldr	x0, [sp, #16]
   18dc8:	add	x1, x0, #0x1
   18dcc:	str	x1, [sp, #16]
   18dd0:	strb	wzr, [x0]
   18dd4:	mov	w0, #0x0                   	// #0
   18dd8:	ldp	x29, x30, [sp], #80
   18ddc:	ret
   18de0:	stp	x29, x30, [sp, #-64]!
   18de4:	mov	x29, sp
   18de8:	str	x0, [sp, #40]
   18dec:	str	x1, [sp, #32]
   18df0:	str	x2, [sp, #24]
   18df4:	str	x3, [sp, #16]
   18df8:	str	xzr, [sp, #56]
   18dfc:	b	18e64 <grub_script_return+0xc7c>
   18e00:	ldr	x0, [sp, #16]
   18e04:	ldr	x1, [x0]
   18e08:	ldr	x0, [sp, #56]
   18e0c:	lsl	x0, x0, #3
   18e10:	add	x0, x1, x0
   18e14:	ldr	x0, [x0]
   18e18:	ldr	x2, [sp, #32]
   18e1c:	ldr	x1, [sp, #40]
   18e20:	bl	0 <grub_strncmp>
   18e24:	cmp	w0, #0x0
   18e28:	b.ne	18e58 <grub_script_return+0xc70>  // b.any
   18e2c:	ldr	x0, [sp, #16]
   18e30:	ldr	x1, [x0]
   18e34:	ldr	x0, [sp, #56]
   18e38:	lsl	x0, x0, #3
   18e3c:	add	x0, x1, x0
   18e40:	ldr	x1, [x0]
   18e44:	ldr	x0, [sp, #32]
   18e48:	add	x0, x1, x0
   18e4c:	ldrb	w0, [x0]
   18e50:	cmp	w0, #0x0
   18e54:	b.eq	18e7c <grub_script_return+0xc94>  // b.none
   18e58:	ldr	x0, [sp, #56]
   18e5c:	add	x0, x0, #0x1
   18e60:	str	x0, [sp, #56]
   18e64:	ldr	x0, [sp, #16]
   18e68:	ldr	x0, [x0, #8]
   18e6c:	ldr	x1, [sp, #56]
   18e70:	cmp	x1, x0
   18e74:	b.cc	18e00 <grub_script_return+0xc18>  // b.lo, b.ul, b.last
   18e78:	b	18e80 <grub_script_return+0xc98>
   18e7c:	nop
   18e80:	ldr	x0, [sp, #16]
   18e84:	ldr	x0, [x0, #8]
   18e88:	ldr	x1, [sp, #56]
   18e8c:	cmp	x1, x0
   18e90:	b.ne	18e9c <grub_script_return+0xcb4>  // b.any
   18e94:	mov	w0, #0x0                   	// #0
   18e98:	b	18f68 <grub_script_return+0xd80>
   18e9c:	ldr	x0, [sp, #32]
   18ea0:	cmp	x0, #0x1
   18ea4:	b.ne	18f1c <grub_script_return+0xd34>  // b.any
   18ea8:	ldr	x0, [sp, #40]
   18eac:	ldrb	w0, [x0]
   18eb0:	cmp	w0, #0x23
   18eb4:	b.ne	18f1c <grub_script_return+0xd34>  // b.any
   18eb8:	ldr	x0, [sp, #24]
   18ebc:	ldr	x4, [x0]
   18ec0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18ec4:	add	x0, x0, #0x0
   18ec8:	ldr	x0, [x0]
   18ecc:	ldr	x0, [x0]
   18ed0:	ldr	w0, [x0, #8]
   18ed4:	mov	w3, w0
   18ed8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   18edc:	add	x0, x0, #0x0
   18ee0:	ldr	x2, [x0]
   18ee4:	mov	x1, #0x1e                  	// #30
   18ee8:	mov	x0, x4
   18eec:	bl	0 <grub_snprintf>
   18ef0:	ldr	x0, [sp, #24]
   18ef4:	ldr	x0, [x0]
   18ef8:	bl	0 <grub_strlen>
   18efc:	mov	x1, x0
   18f00:	ldr	x0, [sp, #24]
   18f04:	ldr	x0, [x0]
   18f08:	add	x1, x0, x1
   18f0c:	ldr	x0, [sp, #24]
   18f10:	str	x1, [x0]
   18f14:	mov	w0, #0x0                   	// #0
   18f18:	b	18f68 <grub_script_return+0xd80>
   18f1c:	ldr	x0, [sp, #16]
   18f20:	ldr	x1, [x0]
   18f24:	ldr	x0, [sp, #56]
   18f28:	lsl	x0, x0, #3
   18f2c:	add	x0, x1, x0
   18f30:	ldr	x0, [x0]
   18f34:	bl	0 <grub_env_get>
   18f38:	str	x0, [sp, #48]
   18f3c:	ldr	x0, [sp, #48]
   18f40:	cmp	x0, #0x0
   18f44:	b.eq	18f64 <grub_script_return+0xd7c>  // b.none
   18f48:	ldr	x0, [sp, #24]
   18f4c:	ldr	x0, [x0]
   18f50:	ldr	x1, [sp, #48]
   18f54:	bl	179d8 <grub_script_parse+0x164>
   18f58:	mov	x1, x0
   18f5c:	ldr	x0, [sp, #24]
   18f60:	str	x1, [x0]
   18f64:	mov	w0, #0x0                   	// #0
   18f68:	ldp	x29, x30, [sp], #64
   18f6c:	ret
	...
   18f80:	stp	x29, x30, [sp, #-64]!
   18f84:	mov	x29, sp
   18f88:	str	x19, [sp, #16]
   18f8c:	str	x0, [sp, #56]
   18f90:	str	x1, [sp, #48]
   18f94:	str	x2, [sp, #40]
   18f98:	str	x3, [sp, #32]
   18f9c:	ldr	x0, [sp, #32]
   18fa0:	ldr	x1, [x0]
   18fa4:	ldr	x0, [sp, #32]
   18fa8:	ldr	x0, [x0, #8]
   18fac:	add	x3, x0, #0x1
   18fb0:	ldr	x2, [sp, #32]
   18fb4:	str	x3, [x2, #8]
   18fb8:	lsl	x0, x0, #3
   18fbc:	add	x19, x1, x0
   18fc0:	ldr	x1, [sp, #48]
   18fc4:	ldr	x0, [sp, #56]
   18fc8:	bl	0 <grub_strndup>
   18fcc:	str	x0, [x19]
   18fd0:	ldr	x0, [sp, #32]
   18fd4:	ldr	x1, [x0]
   18fd8:	ldr	x0, [sp, #32]
   18fdc:	ldr	x0, [x0, #8]
   18fe0:	lsl	x0, x0, #3
   18fe4:	sub	x0, x0, #0x8
   18fe8:	add	x0, x1, x0
   18fec:	ldr	x0, [x0]
   18ff0:	cmp	x0, #0x0
   18ff4:	b.ne	19000 <grub_script_return+0xe18>  // b.any
   18ff8:	mov	w0, #0x1                   	// #1
   18ffc:	b	19004 <grub_script_return+0xe1c>
   19000:	mov	w0, #0x0                   	// #0
   19004:	ldr	x19, [sp, #16]
   19008:	ldp	x29, x30, [sp], #64
   1900c:	ret
   19010:	stp	x29, x30, [sp, #-64]!
   19014:	mov	x29, sp
   19018:	str	x0, [sp, #40]
   1901c:	str	x1, [sp, #32]
   19020:	str	x2, [sp, #24]
   19024:	str	x3, [sp, #16]
   19028:	str	xzr, [sp, #56]
   1902c:	b	19094 <grub_script_return+0xeac>
   19030:	ldr	x0, [sp, #16]
   19034:	ldr	x1, [x0]
   19038:	ldr	x0, [sp, #56]
   1903c:	lsl	x0, x0, #3
   19040:	add	x0, x1, x0
   19044:	ldr	x0, [x0]
   19048:	ldr	x2, [sp, #32]
   1904c:	ldr	x1, [sp, #40]
   19050:	bl	0 <grub_strncmp>
   19054:	cmp	w0, #0x0
   19058:	b.ne	19088 <grub_script_return+0xea0>  // b.any
   1905c:	ldr	x0, [sp, #16]
   19060:	ldr	x1, [x0]
   19064:	ldr	x0, [sp, #56]
   19068:	lsl	x0, x0, #3
   1906c:	add	x0, x1, x0
   19070:	ldr	x1, [x0]
   19074:	ldr	x0, [sp, #32]
   19078:	add	x0, x1, x0
   1907c:	ldrb	w0, [x0]
   19080:	cmp	w0, #0x0
   19084:	b.eq	190ac <grub_script_return+0xec4>  // b.none
   19088:	ldr	x0, [sp, #56]
   1908c:	add	x0, x0, #0x1
   19090:	str	x0, [sp, #56]
   19094:	ldr	x0, [sp, #16]
   19098:	ldr	x0, [x0, #8]
   1909c:	ldr	x1, [sp, #56]
   190a0:	cmp	x1, x0
   190a4:	b.cc	19030 <grub_script_return+0xe48>  // b.lo, b.ul, b.last
   190a8:	b	190b0 <grub_script_return+0xec8>
   190ac:	nop
   190b0:	ldr	x0, [sp, #16]
   190b4:	ldr	x0, [x0, #8]
   190b8:	ldr	x1, [sp, #56]
   190bc:	cmp	x1, x0
   190c0:	b.ne	190cc <grub_script_return+0xee4>  // b.any
   190c4:	mov	w0, #0x0                   	// #0
   190c8:	b	19154 <grub_script_return+0xf6c>
   190cc:	ldr	x0, [sp, #32]
   190d0:	cmp	x0, #0x1
   190d4:	b.ne	19104 <grub_script_return+0xf1c>  // b.any
   190d8:	ldr	x0, [sp, #40]
   190dc:	ldrb	w0, [x0]
   190e0:	cmp	w0, #0x23
   190e4:	b.ne	19104 <grub_script_return+0xf1c>  // b.any
   190e8:	ldr	x0, [sp, #16]
   190ec:	ldr	x0, [x0, #16]
   190f0:	add	x1, x0, #0x1e
   190f4:	ldr	x0, [sp, #16]
   190f8:	str	x1, [x0, #16]
   190fc:	mov	w0, #0x0                   	// #0
   19100:	b	19154 <grub_script_return+0xf6c>
   19104:	ldr	x0, [sp, #16]
   19108:	ldr	x1, [x0]
   1910c:	ldr	x0, [sp, #56]
   19110:	lsl	x0, x0, #3
   19114:	add	x0, x1, x0
   19118:	ldr	x0, [x0]
   1911c:	bl	0 <grub_env_get>
   19120:	str	x0, [sp, #48]
   19124:	ldr	x0, [sp, #48]
   19128:	cmp	x0, #0x0
   1912c:	b.eq	19150 <grub_script_return+0xf68>  // b.none
   19130:	ldr	x0, [sp, #48]
   19134:	bl	0 <grub_strlen>
   19138:	mov	x1, x0
   1913c:	ldr	x0, [sp, #16]
   19140:	ldr	x0, [x0, #16]
   19144:	add	x1, x1, x0
   19148:	ldr	x0, [sp, #16]
   1914c:	str	x1, [x0, #16]
   19150:	mov	w0, #0x0                   	// #0
   19154:	ldp	x29, x30, [sp], #64
   19158:	ret
   1915c:	stp	x29, x30, [sp, #-128]!
   19160:	mov	x29, sp
   19164:	str	x0, [sp, #24]
   19168:	str	x1, [sp, #16]
   1916c:	str	xzr, [sp, #120]
   19170:	str	xzr, [sp, #40]
   19174:	str	xzr, [sp, #48]
   19178:	mov	x0, #0x1                   	// #1
   1917c:	str	x0, [sp, #56]
   19180:	mov	w0, #0x1                   	// #1
   19184:	str	w0, [sp, #116]
   19188:	str	xzr, [sp, #96]
   1918c:	ldr	x0, [sp, #16]
   19190:	str	x0, [sp, #104]
   19194:	b	191c0 <grub_script_return+0xfd8>
   19198:	ldr	x0, [sp, #104]
   1919c:	ldrb	w0, [x0]
   191a0:	cmp	w0, #0x24
   191a4:	b.ne	191b4 <grub_script_return+0xfcc>  // b.any
   191a8:	ldr	x0, [sp, #96]
   191ac:	add	x0, x0, #0x1
   191b0:	str	x0, [sp, #96]
   191b4:	ldr	x0, [sp, #104]
   191b8:	add	x0, x0, #0x1
   191bc:	str	x0, [sp, #104]
   191c0:	ldr	x0, [sp, #104]
   191c4:	ldrb	w0, [x0]
   191c8:	cmp	w0, #0x0
   191cc:	b.ne	19198 <grub_script_return+0xfb0>  // b.any
   191d0:	ldr	x0, [sp, #96]
   191d4:	lsl	x0, x0, #3
   191d8:	bl	0 <grub_malloc>
   191dc:	str	x0, [sp, #40]
   191e0:	add	x0, sp, #0x28
   191e4:	mov	x3, #0x0                   	// #0
   191e8:	mov	x2, x0
   191ec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   191f0:	add	x0, x0, #0x0
   191f4:	ldr	x1, [x0]
   191f8:	ldr	x0, [sp, #16]
   191fc:	bl	189c8 <grub_script_return+0x7e0>
   19200:	cmp	w0, #0x0
   19204:	b.ne	192f0 <grub_script_return+0x1108>  // b.any
   19208:	ldr	x0, [sp, #16]
   1920c:	str	x0, [sp, #64]
   19210:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19214:	add	x0, x0, #0x0
   19218:	ldr	x0, [x0]
   1921c:	ldr	x1, [x0]
   19220:	ldr	x0, [sp, #64]
   19224:	blr	x1
   19228:	str	x0, [sp, #80]
   1922c:	add	x0, sp, #0x28
   19230:	mov	x3, #0x0                   	// #0
   19234:	mov	x2, x0
   19238:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1923c:	add	x0, x0, #0x0
   19240:	ldr	x1, [x0]
   19244:	ldr	x0, [sp, #80]
   19248:	bl	189c8 <grub_script_return+0x7e0>
   1924c:	cmp	w0, #0x0
   19250:	b.ne	192f8 <grub_script_return+0x1110>  // b.any
   19254:	ldr	x0, [sp, #80]
   19258:	bl	0 <grub_strlen>
   1925c:	mov	x1, x0
   19260:	ldr	x0, [sp, #56]
   19264:	add	x0, x1, x0
   19268:	bl	0 <grub_malloc>
   1926c:	str	x0, [sp, #120]
   19270:	ldr	x0, [sp, #120]
   19274:	cmp	x0, #0x0
   19278:	b.eq	19300 <grub_script_return+0x1118>  // b.none
   1927c:	add	x0, sp, #0x28
   19280:	ldr	x3, [sp, #120]
   19284:	mov	x2, x0
   19288:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1928c:	add	x0, x0, #0x0
   19290:	ldr	x1, [x0]
   19294:	ldr	x0, [sp, #80]
   19298:	bl	189c8 <grub_script_return+0x7e0>
   1929c:	cmp	w0, #0x0
   192a0:	b.ne	19308 <grub_script_return+0x1120>  // b.any
   192a4:	str	xzr, [sp, #72]
   192a8:	ldr	x0, [sp, #120]
   192ac:	bl	17aa0 <grub_script_parse+0x22c>
   192b0:	str	x0, [sp, #72]
   192b4:	ldr	x0, [sp, #72]
   192b8:	bl	0 <grub_strlen>
   192bc:	mov	x2, x0
   192c0:	ldr	x1, [sp, #72]
   192c4:	ldr	x0, [sp, #24]
   192c8:	bl	1bbc4 <grub_script_argv_append>
   192cc:	cmp	w0, #0x0
   192d0:	b.eq	192e0 <grub_script_return+0x10f8>  // b.none
   192d4:	ldr	x0, [sp, #72]
   192d8:	bl	0 <grub_free>
   192dc:	b	1930c <grub_script_return+0x1124>
   192e0:	ldr	x0, [sp, #72]
   192e4:	bl	0 <grub_free>
   192e8:	str	wzr, [sp, #116]
   192ec:	b	1930c <grub_script_return+0x1124>
   192f0:	nop
   192f4:	b	1930c <grub_script_return+0x1124>
   192f8:	nop
   192fc:	b	1930c <grub_script_return+0x1124>
   19300:	nop
   19304:	b	1930c <grub_script_return+0x1124>
   19308:	nop
   1930c:	ldr	x0, [sp, #120]
   19310:	bl	0 <grub_free>
   19314:	str	xzr, [sp, #88]
   19318:	b	19340 <grub_script_return+0x1158>
   1931c:	ldr	x1, [sp, #40]
   19320:	ldr	x0, [sp, #88]
   19324:	lsl	x0, x0, #3
   19328:	add	x0, x1, x0
   1932c:	ldr	x0, [x0]
   19330:	bl	0 <grub_free>
   19334:	ldr	x0, [sp, #88]
   19338:	add	x0, x0, #0x1
   1933c:	str	x0, [sp, #88]
   19340:	ldr	x0, [sp, #48]
   19344:	ldr	x1, [sp, #88]
   19348:	cmp	x1, x0
   1934c:	b.cc	1931c <grub_script_return+0x1134>  // b.lo, b.ul, b.last
   19350:	ldr	x0, [sp, #40]
   19354:	bl	0 <grub_free>
   19358:	ldr	w0, [sp, #116]
   1935c:	ldp	x29, x30, [sp], #128
   19360:	ret
   19364:	nop
	...
   19388:	stp	x29, x30, [sp, #-64]!
   1938c:	mov	x29, sp
   19390:	str	x0, [sp, #40]
   19394:	str	x1, [sp, #32]
   19398:	str	w2, [sp, #28]
   1939c:	str	xzr, [sp, #56]
   193a0:	ldr	w0, [sp, #28]
   193a4:	cmp	w0, #0x0
   193a8:	b.ne	193c8 <grub_script_return+0x11e0>  // b.any
   193ac:	ldr	x0, [sp, #32]
   193b0:	bl	0 <grub_strlen>
   193b4:	mov	x2, x0
   193b8:	ldr	x1, [sp, #32]
   193bc:	ldr	x0, [sp, #40]
   193c0:	bl	1bbc4 <grub_script_argv_append>
   193c4:	b	19438 <grub_script_return+0x1250>
   193c8:	ldr	w0, [sp, #28]
   193cc:	cmp	w0, #0x0
   193d0:	b.le	193e4 <grub_script_return+0x11fc>
   193d4:	ldr	x0, [sp, #32]
   193d8:	bl	17aa0 <grub_script_parse+0x22c>
   193dc:	str	x0, [sp, #56]
   193e0:	b	193fc <grub_script_return+0x1214>
   193e4:	ldr	w0, [sp, #28]
   193e8:	cmp	w0, #0x0
   193ec:	b.ge	193fc <grub_script_return+0x1214>  // b.tcont
   193f0:	ldr	x0, [sp, #32]
   193f4:	bl	17b8c <grub_script_parse+0x318>
   193f8:	str	x0, [sp, #56]
   193fc:	ldr	x0, [sp, #56]
   19400:	cmp	x0, #0x0
   19404:	b.ne	19410 <grub_script_return+0x1228>  // b.any
   19408:	mov	w0, #0x1                   	// #1
   1940c:	b	19438 <grub_script_return+0x1250>
   19410:	ldr	x0, [sp, #56]
   19414:	bl	0 <grub_strlen>
   19418:	mov	x2, x0
   1941c:	ldr	x1, [sp, #56]
   19420:	ldr	x0, [sp, #40]
   19424:	bl	1bbc4 <grub_script_argv_append>
   19428:	str	w0, [sp, #52]
   1942c:	ldr	x0, [sp, #56]
   19430:	bl	0 <grub_free>
   19434:	ldr	w0, [sp, #52]
   19438:	ldp	x29, x30, [sp], #64
   1943c:	ret
   19440:	stp	x29, x30, [sp, #-192]!
   19444:	mov	x29, sp
   19448:	str	x19, [sp, #16]
   1944c:	str	x0, [sp, #40]
   19450:	str	x1, [sp, #32]
   19454:	str	xzr, [sp, #136]
   19458:	str	xzr, [sp, #176]
   1945c:	str	wzr, [sp, #80]
   19460:	str	xzr, [sp, #88]
   19464:	str	xzr, [sp, #96]
   19468:	b	19880 <grub_script_return+0x1698>
   1946c:	add	x0, sp, #0x50
   19470:	bl	1bab4 <grub_script_argv_next>
   19474:	cmp	w0, #0x0
   19478:	b.ne	19aa0 <grub_script_return+0x18b8>  // b.any
   1947c:	ldr	x0, [sp, #40]
   19480:	ldr	x0, [x0, #8]
   19484:	str	x0, [sp, #176]
   19488:	b	19868 <grub_script_return+0x1680>
   1948c:	ldr	x0, [sp, #176]
   19490:	ldr	w0, [x0]
   19494:	cmp	w0, #0x6
   19498:	b.eq	19718 <grub_script_return+0x1530>  // b.none
   1949c:	cmp	w0, #0x6
   194a0:	b.hi	1985c <grub_script_return+0x1674>  // b.pmore
   194a4:	cmp	w0, #0x5
   194a8:	b.hi	1985c <grub_script_return+0x1674>  // b.pmore
   194ac:	cmp	w0, #0x4
   194b0:	b.cs	19828 <grub_script_return+0x1640>  // b.hs, b.nlast
   194b4:	cmp	w0, #0x3
   194b8:	b.eq	194e8 <grub_script_return+0x1300>  // b.none
   194bc:	cmp	w0, #0x3
   194c0:	b.hi	1985c <grub_script_return+0x1674>  // b.pmore
   194c4:	cmp	w0, #0x2
   194c8:	b.eq	1980c <grub_script_return+0x1624>  // b.none
   194cc:	cmp	w0, #0x2
   194d0:	b.hi	1985c <grub_script_return+0x1674>  // b.pmore
   194d4:	cmp	w0, #0x0
   194d8:	b.eq	194e8 <grub_script_return+0x1300>  // b.none
   194dc:	cmp	w0, #0x1
   194e0:	b.eq	197c4 <grub_script_return+0x15dc>  // b.none
   194e4:	b	1985c <grub_script_return+0x1674>
   194e8:	str	wzr, [sp, #172]
   194ec:	ldr	x0, [sp, #176]
   194f0:	ldr	x2, [x0, #8]
   194f4:	ldr	x0, [sp, #176]
   194f8:	ldr	w0, [x0]
   194fc:	mov	w1, w0
   19500:	mov	x0, x2
   19504:	bl	18428 <grub_script_return+0x240>
   19508:	str	x0, [sp, #136]
   1950c:	str	wzr, [sp, #188]
   19510:	b	196d8 <grub_script_return+0x14f0>
   19514:	ldr	w0, [sp, #172]
   19518:	cmp	w0, #0x0
   1951c:	b.ne	196b0 <grub_script_return+0x14c8>  // b.any
   19520:	ldr	w0, [sp, #188]
   19524:	cmp	w0, #0x0
   19528:	b.eq	19548 <grub_script_return+0x1360>  // b.none
   1952c:	add	x0, sp, #0x50
   19530:	bl	1bab4 <grub_script_argv_next>
   19534:	cmp	w0, #0x0
   19538:	b.eq	19548 <grub_script_return+0x1360>  // b.none
   1953c:	mov	w0, #0x1                   	// #1
   19540:	str	w0, [sp, #172]
   19544:	b	196b4 <grub_script_return+0x14cc>
   19548:	ldr	x0, [sp, #176]
   1954c:	ldr	w0, [x0]
   19550:	cmp	w0, #0x0
   19554:	b.ne	19688 <grub_script_return+0x14a0>  // b.any
   19558:	ldrsw	x0, [sp, #188]
   1955c:	lsl	x0, x0, #3
   19560:	ldr	x1, [sp, #136]
   19564:	add	x0, x1, x0
   19568:	ldr	x0, [x0]
   1956c:	str	x0, [sp, #152]
   19570:	ldrsw	x0, [sp, #188]
   19574:	lsl	x0, x0, #3
   19578:	ldr	x1, [sp, #136]
   1957c:	add	x0, x1, x0
   19580:	ldr	x0, [x0]
   19584:	bl	0 <grub_strlen>
   19588:	str	w0, [sp, #124]
   1958c:	ldr	w0, [sp, #124]
   19590:	lsl	w0, w0, #1
   19594:	add	w0, w0, #0x1
   19598:	sxtw	x0, w0
   1959c:	bl	0 <grub_malloc>
   195a0:	str	x0, [sp, #112]
   195a4:	ldr	x0, [sp, #112]
   195a8:	cmp	x0, #0x0
   195ac:	b.ne	195bc <grub_script_return+0x13d4>  // b.any
   195b0:	mov	w0, #0x1                   	// #1
   195b4:	str	w0, [sp, #172]
   195b8:	b	196b4 <grub_script_return+0x14cc>
   195bc:	ldr	x0, [sp, #112]
   195c0:	str	x0, [sp, #160]
   195c4:	b	19630 <grub_script_return+0x1448>
   195c8:	ldrb	w0, [sp, #111]
   195cc:	cmp	w0, #0x5c
   195d0:	b.ne	1961c <grub_script_return+0x1434>  // b.any
   195d4:	ldr	x0, [sp, #160]
   195d8:	add	x1, x0, #0x1
   195dc:	str	x1, [sp, #160]
   195e0:	mov	w1, #0x5c                  	// #92
   195e4:	strb	w1, [x0]
   195e8:	ldr	x0, [sp, #152]
   195ec:	ldrb	w0, [x0]
   195f0:	cmp	w0, #0x3f
   195f4:	b.eq	19608 <grub_script_return+0x1420>  // b.none
   195f8:	ldr	x0, [sp, #152]
   195fc:	ldrb	w0, [x0]
   19600:	cmp	w0, #0x2a
   19604:	b.ne	1961c <grub_script_return+0x1434>  // b.any
   19608:	ldr	x0, [sp, #160]
   1960c:	add	x1, x0, #0x1
   19610:	str	x1, [sp, #160]
   19614:	mov	w1, #0x5c                  	// #92
   19618:	strb	w1, [x0]
   1961c:	ldr	x0, [sp, #160]
   19620:	add	x1, x0, #0x1
   19624:	str	x1, [sp, #160]
   19628:	ldrb	w1, [sp, #111]
   1962c:	strb	w1, [x0]
   19630:	ldr	x0, [sp, #152]
   19634:	add	x1, x0, #0x1
   19638:	str	x1, [sp, #152]
   1963c:	ldrb	w0, [x0]
   19640:	strb	w0, [sp, #111]
   19644:	ldrb	w0, [sp, #111]
   19648:	cmp	w0, #0x0
   1964c:	b.ne	195c8 <grub_script_return+0x13e0>  // b.any
   19650:	ldr	x0, [sp, #160]
   19654:	strb	wzr, [x0]
   19658:	ldr	x1, [sp, #160]
   1965c:	ldr	x0, [sp, #112]
   19660:	sub	x0, x1, x0
   19664:	mov	x1, x0
   19668:	add	x0, sp, #0x50
   1966c:	mov	x2, x1
   19670:	ldr	x1, [sp, #112]
   19674:	bl	1bbc4 <grub_script_argv_append>
   19678:	str	w0, [sp, #172]
   1967c:	ldr	x0, [sp, #112]
   19680:	bl	0 <grub_free>
   19684:	b	196b4 <grub_script_return+0x14cc>
   19688:	ldrsw	x0, [sp, #188]
   1968c:	lsl	x0, x0, #3
   19690:	ldr	x1, [sp, #136]
   19694:	add	x0, x1, x0
   19698:	ldr	x1, [x0]
   1969c:	add	x0, sp, #0x50
   196a0:	mov	w2, #0x1                   	// #1
   196a4:	bl	19388 <grub_script_return+0x11a0>
   196a8:	str	w0, [sp, #172]
   196ac:	b	196b4 <grub_script_return+0x14cc>
   196b0:	nop
   196b4:	ldrsw	x0, [sp, #188]
   196b8:	lsl	x0, x0, #3
   196bc:	ldr	x1, [sp, #136]
   196c0:	add	x0, x1, x0
   196c4:	ldr	x0, [x0]
   196c8:	bl	0 <grub_free>
   196cc:	ldr	w0, [sp, #188]
   196d0:	add	w0, w0, #0x1
   196d4:	str	w0, [sp, #188]
   196d8:	ldr	x0, [sp, #136]
   196dc:	cmp	x0, #0x0
   196e0:	b.eq	19700 <grub_script_return+0x1518>  // b.none
   196e4:	ldrsw	x0, [sp, #188]
   196e8:	lsl	x0, x0, #3
   196ec:	ldr	x1, [sp, #136]
   196f0:	add	x0, x1, x0
   196f4:	ldr	x0, [x0]
   196f8:	cmp	x0, #0x0
   196fc:	b.ne	19514 <grub_script_return+0x132c>  // b.any
   19700:	ldr	x0, [sp, #136]
   19704:	bl	0 <grub_free>
   19708:	ldr	w0, [sp, #172]
   1970c:	cmp	w0, #0x0
   19710:	b.eq	19848 <grub_script_return+0x1660>  // b.none
   19714:	b	19ac4 <grub_script_return+0x18dc>
   19718:	add	x3, sp, #0x50
   1971c:	mov	x2, #0x1                   	// #1
   19720:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19724:	add	x0, x0, #0x0
   19728:	ldr	x1, [x0]
   1972c:	mov	x0, x3
   19730:	bl	1bbc4 <grub_script_argv_append>
   19734:	cmp	w0, #0x0
   19738:	b.ne	19aa8 <grub_script_return+0x18c0>  // b.any
   1973c:	ldr	x0, [sp, #176]
   19740:	ldr	x0, [x0, #8]
   19744:	bl	17aa0 <grub_script_parse+0x22c>
   19748:	str	x0, [sp, #128]
   1974c:	ldr	x0, [sp, #128]
   19750:	cmp	x0, #0x0
   19754:	b.eq	19ab0 <grub_script_return+0x18c8>  // b.none
   19758:	ldr	x0, [sp, #128]
   1975c:	bl	0 <grub_strlen>
   19760:	mov	x1, x0
   19764:	add	x0, sp, #0x50
   19768:	mov	x2, x1
   1976c:	ldr	x1, [sp, #128]
   19770:	bl	1bbc4 <grub_script_argv_append>
   19774:	cmp	w0, #0x0
   19778:	b.eq	19788 <grub_script_return+0x15a0>  // b.none
   1977c:	ldr	x0, [sp, #128]
   19780:	bl	0 <grub_free>
   19784:	b	19ac4 <grub_script_return+0x18dc>
   19788:	ldr	x0, [sp, #128]
   1978c:	bl	0 <grub_free>
   19790:	add	x3, sp, #0x50
   19794:	mov	x2, #0x1                   	// #1
   19798:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1979c:	add	x0, x0, #0x0
   197a0:	ldr	x1, [x0]
   197a4:	mov	x0, x3
   197a8:	bl	1bbc4 <grub_script_argv_append>
   197ac:	cmp	w0, #0x0
   197b0:	b.ne	19ab8 <grub_script_return+0x18d0>  // b.any
   197b4:	ldr	x0, [sp, #176]
   197b8:	ldr	x0, [x0, #16]
   197bc:	str	x0, [sp, #96]
   197c0:	b	1985c <grub_script_return+0x1674>
   197c4:	ldr	x0, [sp, #176]
   197c8:	ldr	x0, [x0, #8]
   197cc:	ldrb	w0, [x0]
   197d0:	cmp	w0, #0x0
   197d4:	b.eq	19850 <grub_script_return+0x1668>  // b.none
   197d8:	ldr	x0, [sp, #176]
   197dc:	ldr	x19, [x0, #8]
   197e0:	ldr	x0, [sp, #176]
   197e4:	ldr	x0, [x0, #8]
   197e8:	bl	0 <grub_strlen>
   197ec:	mov	x1, x0
   197f0:	add	x0, sp, #0x50
   197f4:	mov	x2, x1
   197f8:	mov	x1, x19
   197fc:	bl	1bbc4 <grub_script_argv_append>
   19800:	cmp	w0, #0x0
   19804:	b.eq	19850 <grub_script_return+0x1668>  // b.none
   19808:	b	19ac4 <grub_script_return+0x18dc>
   1980c:	ldr	x0, [sp, #176]
   19810:	ldr	x1, [x0, #8]
   19814:	add	x0, sp, #0x50
   19818:	bl	1915c <grub_script_return+0xf74>
   1981c:	cmp	w0, #0x0
   19820:	b.eq	19858 <grub_script_return+0x1670>  // b.none
   19824:	b	19ac4 <grub_script_return+0x18dc>
   19828:	ldr	x0, [sp, #176]
   1982c:	ldr	x1, [x0, #8]
   19830:	add	x0, sp, #0x50
   19834:	mov	w2, #0x1                   	// #1
   19838:	bl	19388 <grub_script_return+0x11a0>
   1983c:	cmp	w0, #0x0
   19840:	b.ne	19ac0 <grub_script_return+0x18d8>  // b.any
   19844:	b	1985c <grub_script_return+0x1674>
   19848:	nop
   1984c:	b	1985c <grub_script_return+0x1674>
   19850:	nop
   19854:	b	1985c <grub_script_return+0x1674>
   19858:	nop
   1985c:	ldr	x0, [sp, #176]
   19860:	ldr	x0, [x0, #24]
   19864:	str	x0, [sp, #176]
   19868:	ldr	x0, [sp, #176]
   1986c:	cmp	x0, #0x0
   19870:	b.ne	1948c <grub_script_return+0x12a4>  // b.any
   19874:	ldr	x0, [sp, #40]
   19878:	ldr	x0, [x0]
   1987c:	str	x0, [sp, #40]
   19880:	ldr	x0, [sp, #40]
   19884:	cmp	x0, #0x0
   19888:	b.eq	1989c <grub_script_return+0x16b4>  // b.none
   1988c:	ldr	x0, [sp, #40]
   19890:	ldr	x0, [x0, #8]
   19894:	cmp	x0, #0x0
   19898:	b.ne	1946c <grub_script_return+0x1284>  // b.any
   1989c:	ldr	x1, [sp, #88]
   198a0:	ldr	w0, [sp, #80]
   198a4:	sub	w0, w0, #0x1
   198a8:	mov	w0, w0
   198ac:	lsl	x0, x0, #3
   198b0:	add	x0, x1, x0
   198b4:	ldr	x0, [x0]
   198b8:	cmp	x0, #0x0
   198bc:	b.ne	198cc <grub_script_return+0x16e4>  // b.any
   198c0:	ldr	w0, [sp, #80]
   198c4:	sub	w0, w0, #0x1
   198c8:	str	w0, [sp, #80]
   198cc:	str	wzr, [sp, #144]
   198d0:	add	x2, sp, #0x38
   198d4:	add	x3, sp, #0x50
   198d8:	ldp	x0, x1, [x3]
   198dc:	stp	x0, x1, [x2]
   198e0:	ldr	x0, [x3, #16]
   198e4:	str	x0, [x2, #16]
   198e8:	str	wzr, [sp, #80]
   198ec:	str	xzr, [sp, #88]
   198f0:	str	wzr, [sp, #188]
   198f4:	b	19a58 <grub_script_return+0x1870>
   198f8:	str	xzr, [sp, #48]
   198fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19900:	add	x0, x0, #0x0
   19904:	ldr	x0, [x0]
   19908:	ldr	x0, [x0]
   1990c:	cmp	x0, #0x0
   19910:	b.eq	19958 <grub_script_return+0x1770>  // b.none
   19914:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19918:	add	x0, x0, #0x0
   1991c:	ldr	x0, [x0]
   19920:	ldr	x0, [x0]
   19924:	ldr	x2, [x0]
   19928:	ldr	x1, [sp, #64]
   1992c:	ldrsw	x0, [sp, #188]
   19930:	lsl	x0, x0, #3
   19934:	add	x0, x1, x0
   19938:	ldr	x0, [x0]
   1993c:	add	x1, sp, #0x30
   19940:	blr	x2
   19944:	cmp	w0, #0x0
   19948:	b.eq	19958 <grub_script_return+0x1770>  // b.none
   1994c:	add	x0, sp, #0x38
   19950:	bl	1b948 <grub_script_argv_free>
   19954:	b	19ac4 <grub_script_return+0x18dc>
   19958:	ldr	x0, [sp, #48]
   1995c:	cmp	x0, #0x0
   19960:	b.ne	19990 <grub_script_return+0x17a8>  // b.any
   19964:	add	x0, sp, #0x50
   19968:	bl	1bab4 <grub_script_argv_next>
   1996c:	ldr	x1, [sp, #64]
   19970:	ldrsw	x0, [sp, #188]
   19974:	lsl	x0, x0, #3
   19978:	add	x0, x1, x0
   1997c:	ldr	x1, [x0]
   19980:	add	x0, sp, #0x50
   19984:	mov	w2, #0xffffffff            	// #-1
   19988:	bl	19388 <grub_script_return+0x11a0>
   1998c:	b	19a4c <grub_script_return+0x1864>
   19990:	str	wzr, [sp, #148]
   19994:	b	19a10 <grub_script_return+0x1828>
   19998:	ldr	w0, [sp, #144]
   1999c:	cmp	w0, #0x0
   199a0:	b.ne	199dc <grub_script_return+0x17f4>  // b.any
   199a4:	add	x0, sp, #0x50
   199a8:	bl	1bab4 <grub_script_argv_next>
   199ac:	cmp	w0, #0x0
   199b0:	b.ne	199dc <grub_script_return+0x17f4>  // b.any
   199b4:	ldr	x1, [sp, #48]
   199b8:	ldrsw	x0, [sp, #148]
   199bc:	lsl	x0, x0, #3
   199c0:	add	x0, x1, x0
   199c4:	ldr	x1, [x0]
   199c8:	add	x0, sp, #0x50
   199cc:	mov	w2, #0x0                   	// #0
   199d0:	bl	19388 <grub_script_return+0x11a0>
   199d4:	cmp	w0, #0x0
   199d8:	b.eq	199e4 <grub_script_return+0x17fc>  // b.none
   199dc:	mov	w0, #0x1                   	// #1
   199e0:	b	199e8 <grub_script_return+0x1800>
   199e4:	mov	w0, #0x0                   	// #0
   199e8:	str	w0, [sp, #144]
   199ec:	ldr	x1, [sp, #48]
   199f0:	ldrsw	x0, [sp, #148]
   199f4:	lsl	x0, x0, #3
   199f8:	add	x0, x1, x0
   199fc:	ldr	x0, [x0]
   19a00:	bl	0 <grub_free>
   19a04:	ldr	w0, [sp, #148]
   19a08:	add	w0, w0, #0x1
   19a0c:	str	w0, [sp, #148]
   19a10:	ldr	x1, [sp, #48]
   19a14:	ldrsw	x0, [sp, #148]
   19a18:	lsl	x0, x0, #3
   19a1c:	add	x0, x1, x0
   19a20:	ldr	x0, [x0]
   19a24:	cmp	x0, #0x0
   19a28:	b.ne	19998 <grub_script_return+0x17b0>  // b.any
   19a2c:	ldr	x0, [sp, #48]
   19a30:	bl	0 <grub_free>
   19a34:	ldr	w0, [sp, #144]
   19a38:	cmp	w0, #0x0
   19a3c:	b.eq	19a4c <grub_script_return+0x1864>  // b.none
   19a40:	add	x0, sp, #0x38
   19a44:	bl	1b948 <grub_script_argv_free>
   19a48:	b	19ac4 <grub_script_return+0x18dc>
   19a4c:	ldr	w0, [sp, #188]
   19a50:	add	w0, w0, #0x1
   19a54:	str	w0, [sp, #188]
   19a58:	ldr	x1, [sp, #64]
   19a5c:	ldrsw	x0, [sp, #188]
   19a60:	lsl	x0, x0, #3
   19a64:	add	x0, x1, x0
   19a68:	ldr	x0, [x0]
   19a6c:	cmp	x0, #0x0
   19a70:	b.ne	198f8 <grub_script_return+0x1710>  // b.any
   19a74:	add	x0, sp, #0x38
   19a78:	bl	1b948 <grub_script_argv_free>
   19a7c:	ldr	x0, [sp, #32]
   19a80:	mov	x3, x0
   19a84:	add	x2, sp, #0x50
   19a88:	ldp	x0, x1, [x2]
   19a8c:	stp	x0, x1, [x3]
   19a90:	ldr	x0, [x2, #16]
   19a94:	str	x0, [x3, #16]
   19a98:	mov	w0, #0x0                   	// #0
   19a9c:	b	19ad0 <grub_script_return+0x18e8>
   19aa0:	nop
   19aa4:	b	19ac4 <grub_script_return+0x18dc>
   19aa8:	nop
   19aac:	b	19ac4 <grub_script_return+0x18dc>
   19ab0:	nop
   19ab4:	b	19ac4 <grub_script_return+0x18dc>
   19ab8:	nop
   19abc:	b	19ac4 <grub_script_return+0x18dc>
   19ac0:	nop
   19ac4:	add	x0, sp, #0x50
   19ac8:	bl	1b948 <grub_script_argv_free>
   19acc:	mov	w0, #0x1                   	// #1
   19ad0:	ldr	x19, [sp, #16]
   19ad4:	ldp	x29, x30, [sp], #192
   19ad8:	ret
   19adc:	nop
	...
   19af8:	stp	x29, x30, [sp, #-64]!
   19afc:	mov	x29, sp
   19b00:	str	x0, [sp, #24]
   19b04:	ldr	x0, [sp, #24]
   19b08:	cmp	x0, #0x0
   19b0c:	b.ne	19b18 <grub_script_return+0x1930>  // b.any
   19b10:	mov	w0, #0x0                   	// #0
   19b14:	b	19b68 <grub_script_return+0x1980>
   19b18:	ldr	x0, [sp, #24]
   19b1c:	ldr	x1, [x0]
   19b20:	ldr	x0, [sp, #24]
   19b24:	blr	x1
   19b28:	str	w0, [sp, #60]
   19b2c:	add	x4, sp, #0x28
   19b30:	ldr	w3, [sp, #60]
   19b34:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19b38:	add	x0, x0, #0x0
   19b3c:	ldr	x2, [x0]
   19b40:	mov	x1, #0xe                   	// #14
   19b44:	mov	x0, x4
   19b48:	bl	0 <grub_snprintf>
   19b4c:	add	x0, sp, #0x28
   19b50:	mov	x1, x0
   19b54:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19b58:	add	x0, x0, #0x0
   19b5c:	ldr	x0, [x0]
   19b60:	bl	0 <grub_env_set>
   19b64:	ldr	w0, [sp, #60]
   19b68:	ldp	x29, x30, [sp], #64
   19b6c:	ret
	...

0000000000019b80 <grub_script_function_call>:
   19b80:	stp	x29, x30, [sp, #-112]!
   19b84:	mov	x29, sp
   19b88:	str	x0, [sp, #40]
   19b8c:	str	w1, [sp, #36]
   19b90:	str	x2, [sp, #24]
   19b94:	str	wzr, [sp, #108]
   19b98:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19b9c:	add	x0, x0, #0x0
   19ba0:	ldr	x0, [x0]
   19ba4:	ldr	x0, [x0]
   19ba8:	str	x0, [sp, #96]
   19bac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19bb0:	add	x0, x0, #0x0
   19bb4:	ldr	x0, [x0]
   19bb8:	str	xzr, [x0]
   19bbc:	str	wzr, [sp, #56]
   19bc0:	str	wzr, [sp, #60]
   19bc4:	ldr	w0, [sp, #36]
   19bc8:	str	w0, [sp, #64]
   19bcc:	ldr	x0, [sp, #24]
   19bd0:	str	x0, [sp, #72]
   19bd4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19bd8:	add	x0, x0, #0x0
   19bdc:	ldr	x0, [x0]
   19be0:	ldr	x0, [x0]
   19be4:	str	x0, [sp, #88]
   19be8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19bec:	add	x0, x0, #0x0
   19bf0:	ldr	x0, [x0]
   19bf4:	add	x1, sp, #0x38
   19bf8:	str	x1, [x0]
   19bfc:	ldr	x0, [sp, #40]
   19c00:	ldr	x0, [x0, #8]
   19c04:	bl	1a8e8 <grub_script_execute>
   19c08:	str	w0, [sp, #108]
   19c0c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19c10:	add	x0, x0, #0x0
   19c14:	ldr	x0, [x0]
   19c18:	str	xzr, [x0]
   19c1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19c20:	add	x0, x0, #0x0
   19c24:	ldr	x0, [x0]
   19c28:	ldr	x1, [sp, #96]
   19c2c:	str	x1, [x0]
   19c30:	ldr	x0, [sp, #88]
   19c34:	bl	17c6c <grub_script_parse+0x3f8>
   19c38:	ldr	w0, [sp, #108]
   19c3c:	ldp	x29, x30, [sp], #112
   19c40:	ret
   19c44:	nop
	...
   19c60:	stp	x29, x30, [sp, #-64]!
   19c64:	mov	x29, sp
   19c68:	str	x0, [sp, #40]
   19c6c:	str	w1, [sp, #36]
   19c70:	str	x2, [sp, #24]
   19c74:	ldr	x0, [sp, #24]
   19c78:	str	x0, [sp, #56]
   19c7c:	ldr	x0, [sp, #56]
   19c80:	ldr	x0, [x0]
   19c84:	cmp	x0, #0x0
   19c88:	b.ne	19c9c <grub_script_function_call+0x11c>  // b.any
   19c8c:	ldr	x0, [sp, #40]
   19c90:	str	xzr, [x0]
   19c94:	mov	w0, #0x0                   	// #0
   19c98:	b	19d30 <grub_script_function_call+0x1b0>
   19c9c:	ldr	x0, [sp, #56]
   19ca0:	ldr	x0, [x0]
   19ca4:	mov	w1, #0xa                   	// #10
   19ca8:	bl	0 <grub_strchr>
   19cac:	str	x0, [sp, #48]
   19cb0:	ldr	x0, [sp, #48]
   19cb4:	cmp	x0, #0x0
   19cb8:	b.eq	19cf0 <grub_script_function_call+0x170>  // b.none
   19cbc:	ldr	x0, [sp, #56]
   19cc0:	ldr	x2, [x0]
   19cc4:	ldr	x0, [sp, #56]
   19cc8:	ldr	x0, [x0]
   19ccc:	ldr	x1, [sp, #48]
   19cd0:	sub	x0, x1, x0
   19cd4:	mov	x1, x0
   19cd8:	mov	x0, x2
   19cdc:	bl	0 <grub_strndup>
   19ce0:	mov	x1, x0
   19ce4:	ldr	x0, [sp, #40]
   19ce8:	str	x1, [x0]
   19cec:	b	19d08 <grub_script_function_call+0x188>
   19cf0:	ldr	x0, [sp, #56]
   19cf4:	ldr	x0, [x0]
   19cf8:	bl	0 <grub_strdup>
   19cfc:	mov	x1, x0
   19d00:	ldr	x0, [sp, #40]
   19d04:	str	x1, [x0]
   19d08:	ldr	x0, [sp, #48]
   19d0c:	cmp	x0, #0x0
   19d10:	b.eq	19d20 <grub_script_function_call+0x1a0>  // b.none
   19d14:	ldr	x0, [sp, #48]
   19d18:	add	x0, x0, #0x1
   19d1c:	b	19d24 <grub_script_function_call+0x1a4>
   19d20:	mov	x0, #0x0                   	// #0
   19d24:	ldr	x1, [sp, #56]
   19d28:	str	x0, [x1]
   19d2c:	mov	w0, #0x0                   	// #0
   19d30:	ldp	x29, x30, [sp], #64
   19d34:	ret

0000000000019d38 <grub_script_execute_sourcecode>:
   19d38:	stp	x29, x30, [sp, #-64]!
   19d3c:	mov	x29, sp
   19d40:	str	x0, [sp, #24]
   19d44:	str	wzr, [sp, #60]
   19d48:	b	19dcc <grub_script_execute_sourcecode+0x94>
   19d4c:	add	x1, sp, #0x18
   19d50:	add	x0, sp, #0x28
   19d54:	mov	x2, x1
   19d58:	mov	w1, #0x0                   	// #0
   19d5c:	bl	19c60 <grub_script_function_call+0xe0>
   19d60:	ldr	x3, [sp, #40]
   19d64:	add	x0, sp, #0x18
   19d68:	mov	x2, x0
   19d6c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19d70:	add	x0, x0, #0x0
   19d74:	ldr	x1, [x0]
   19d78:	mov	x0, x3
   19d7c:	bl	17874 <grub_script_parse>
   19d80:	str	x0, [sp, #48]
   19d84:	ldr	x0, [sp, #48]
   19d88:	cmp	x0, #0x0
   19d8c:	b.ne	19db0 <grub_script_execute_sourcecode+0x78>  // b.any
   19d90:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19d94:	add	x0, x0, #0x0
   19d98:	ldr	x0, [x0]
   19d9c:	ldr	w0, [x0]
   19da0:	str	w0, [sp, #60]
   19da4:	ldr	x0, [sp, #40]
   19da8:	bl	0 <grub_free>
   19dac:	b	19dd8 <grub_script_execute_sourcecode+0xa0>
   19db0:	ldr	x0, [sp, #48]
   19db4:	bl	1a8e8 <grub_script_execute>
   19db8:	str	w0, [sp, #60]
   19dbc:	ldr	x0, [sp, #48]
   19dc0:	bl	17168 <grub_script_free>
   19dc4:	ldr	x0, [sp, #40]
   19dc8:	bl	0 <grub_free>
   19dcc:	ldr	x0, [sp, #24]
   19dd0:	cmp	x0, #0x0
   19dd4:	b.ne	19d4c <grub_script_execute_sourcecode+0x14>  // b.any
   19dd8:	ldr	w0, [sp, #60]
   19ddc:	ldp	x29, x30, [sp], #64
   19de0:	ret
   19de4:	nop
	...

0000000000019df8 <grub_script_execute_new_scope>:
   19df8:	stp	x29, x30, [sp, #-96]!
   19dfc:	mov	x29, sp
   19e00:	str	x0, [sp, #40]
   19e04:	str	w1, [sp, #36]
   19e08:	str	x2, [sp, #24]
   19e0c:	str	wzr, [sp, #92]
   19e10:	ldr	w0, [sp, #36]
   19e14:	str	w0, [sp, #56]
   19e18:	ldr	x0, [sp, #24]
   19e1c:	str	x0, [sp, #64]
   19e20:	str	wzr, [sp, #48]
   19e24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19e28:	add	x0, x0, #0x0
   19e2c:	ldr	x0, [x0]
   19e30:	ldr	x0, [x0]
   19e34:	str	x0, [sp, #80]
   19e38:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19e3c:	add	x0, x0, #0x0
   19e40:	ldr	x0, [x0]
   19e44:	add	x1, sp, #0x30
   19e48:	str	x1, [x0]
   19e4c:	ldr	x0, [sp, #40]
   19e50:	bl	19d38 <grub_script_execute_sourcecode>
   19e54:	str	w0, [sp, #92]
   19e58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19e5c:	add	x0, x0, #0x0
   19e60:	ldr	x0, [x0]
   19e64:	ldr	x1, [sp, #80]
   19e68:	str	x1, [x0]
   19e6c:	ldr	w0, [sp, #92]
   19e70:	ldp	x29, x30, [sp], #96
   19e74:	ret
	...

0000000000019e80 <grub_script_execute_cmdline>:
   19e80:	stp	x29, x30, [sp, #-176]!
   19e84:	mov	x29, sp
   19e88:	str	x0, [sp, #24]
   19e8c:	ldr	x0, [sp, #24]
   19e90:	str	x0, [sp, #112]
   19e94:	str	wzr, [sp, #172]
   19e98:	str	xzr, [sp, #160]
   19e9c:	str	wzr, [sp, #144]
   19ea0:	str	wzr, [sp, #140]
   19ea4:	str	wzr, [sp, #32]
   19ea8:	str	xzr, [sp, #40]
   19eac:	str	xzr, [sp, #48]
   19eb0:	ldr	x0, [sp, #112]
   19eb4:	ldr	x0, [x0, #16]
   19eb8:	add	x1, sp, #0x20
   19ebc:	bl	19440 <grub_script_return+0x1258>
   19ec0:	cmp	w0, #0x0
   19ec4:	b.ne	19ed8 <grub_script_execute_cmdline+0x58>  // b.any
   19ec8:	ldr	x0, [sp, #40]
   19ecc:	ldr	x0, [x0]
   19ed0:	cmp	x0, #0x0
   19ed4:	b.ne	19eec <grub_script_execute_cmdline+0x6c>  // b.any
   19ed8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19edc:	add	x0, x0, #0x0
   19ee0:	ldr	x0, [x0]
   19ee4:	ldr	w0, [x0]
   19ee8:	b	1a368 <grub_script_execute_cmdline+0x4e8>
   19eec:	str	wzr, [sp, #136]
   19ef0:	b	19f2c <grub_script_execute_cmdline+0xac>
   19ef4:	ldr	x1, [sp, #40]
   19ef8:	ldr	w0, [sp, #136]
   19efc:	lsl	x0, x0, #3
   19f00:	add	x0, x1, x0
   19f04:	ldr	x0, [x0]
   19f08:	bl	0 <grub_strlen>
   19f0c:	add	x0, x0, #0x1
   19f10:	mov	w1, w0
   19f14:	ldr	w0, [sp, #140]
   19f18:	add	w0, w1, w0
   19f1c:	str	w0, [sp, #140]
   19f20:	ldr	w0, [sp, #136]
   19f24:	add	w0, w0, #0x1
   19f28:	str	w0, [sp, #136]
   19f2c:	ldr	w0, [sp, #32]
   19f30:	ldr	w1, [sp, #136]
   19f34:	cmp	w1, w0
   19f38:	b.cc	19ef4 <grub_script_execute_cmdline+0x74>  // b.lo, b.ul, b.last
   19f3c:	ldrsw	x0, [sp, #140]
   19f40:	bl	0 <grub_malloc>
   19f44:	str	x0, [sp, #104]
   19f48:	ldr	x0, [sp, #104]
   19f4c:	cmp	x0, #0x0
   19f50:	b.ne	19f6c <grub_script_execute_cmdline+0xec>  // b.any
   19f54:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19f58:	add	x0, x0, #0x0
   19f5c:	ldr	x1, [x0]
   19f60:	mov	w0, #0x3                   	// #3
   19f64:	bl	0 <grub_error>
   19f68:	b	1a368 <grub_script_execute_cmdline+0x4e8>
   19f6c:	str	wzr, [sp, #136]
   19f70:	b	19fdc <grub_script_execute_cmdline+0x15c>
   19f74:	ldrsw	x0, [sp, #144]
   19f78:	ldr	x1, [sp, #104]
   19f7c:	add	x4, x1, x0
   19f80:	ldr	w1, [sp, #140]
   19f84:	ldr	w0, [sp, #144]
   19f88:	sub	w0, w1, w0
   19f8c:	sxtw	x5, w0
   19f90:	ldr	x1, [sp, #40]
   19f94:	ldr	w0, [sp, #136]
   19f98:	lsl	x0, x0, #3
   19f9c:	add	x0, x1, x0
   19fa0:	ldr	x0, [x0]
   19fa4:	mov	x3, x0
   19fa8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   19fac:	add	x0, x0, #0x0
   19fb0:	ldr	x2, [x0]
   19fb4:	mov	x1, x5
   19fb8:	mov	x0, x4
   19fbc:	bl	0 <grub_snprintf>
   19fc0:	mov	w1, w0
   19fc4:	ldr	w0, [sp, #144]
   19fc8:	add	w0, w0, w1
   19fcc:	str	w0, [sp, #144]
   19fd0:	ldr	w0, [sp, #136]
   19fd4:	add	w0, w0, #0x1
   19fd8:	str	w0, [sp, #136]
   19fdc:	ldr	w0, [sp, #32]
   19fe0:	ldr	w1, [sp, #136]
   19fe4:	cmp	w1, w0
   19fe8:	b.cc	19f74 <grub_script_execute_cmdline+0xf4>  // b.lo, b.ul, b.last
   19fec:	ldrsw	x0, [sp, #140]
   19ff0:	sub	x0, x0, #0x1
   19ff4:	ldr	x1, [sp, #104]
   19ff8:	add	x0, x1, x0
   19ffc:	strb	wzr, [x0]
   1a000:	mov	w1, #0x2                   	// #2
   1a004:	ldr	x0, [sp, #104]
   1a008:	bl	0 <grub_verify_string>
   1a00c:	ldr	x0, [sp, #104]
   1a010:	bl	0 <grub_free>
   1a014:	str	wzr, [sp, #124]
   1a018:	ldr	w0, [sp, #32]
   1a01c:	sub	w0, w0, #0x1
   1a020:	str	w0, [sp, #148]
   1a024:	ldr	x0, [sp, #40]
   1a028:	add	x0, x0, #0x8
   1a02c:	str	x0, [sp, #128]
   1a030:	ldr	x0, [sp, #40]
   1a034:	ldr	x0, [x0]
   1a038:	str	x0, [sp, #152]
   1a03c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a040:	add	x0, x0, #0x0
   1a044:	ldr	x1, [x0]
   1a048:	ldr	x0, [sp, #152]
   1a04c:	bl	0 <grub_strcmp>
   1a050:	cmp	w0, #0x0
   1a054:	b.ne	1a0c4 <grub_script_execute_cmdline+0x244>  // b.any
   1a058:	ldr	w0, [sp, #32]
   1a05c:	cmp	w0, #0x1
   1a060:	b.ls	1a078 <grub_script_execute_cmdline+0x1f8>  // b.plast
   1a064:	ldr	x0, [sp, #40]
   1a068:	add	x0, x0, #0x8
   1a06c:	ldr	x0, [x0]
   1a070:	cmp	x0, #0x0
   1a074:	b.ne	1a098 <grub_script_execute_cmdline+0x218>  // b.any
   1a078:	add	x0, sp, #0x20
   1a07c:	bl	1b948 <grub_script_argv_free>
   1a080:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a084:	add	x0, x0, #0x0
   1a088:	ldr	x1, [x0]
   1a08c:	mov	w0, #0x12                  	// #18
   1a090:	bl	0 <grub_error>
   1a094:	b	1a368 <grub_script_execute_cmdline+0x4e8>
   1a098:	mov	w0, #0x1                   	// #1
   1a09c:	str	w0, [sp, #124]
   1a0a0:	ldr	w0, [sp, #32]
   1a0a4:	sub	w0, w0, #0x2
   1a0a8:	str	w0, [sp, #148]
   1a0ac:	ldr	x0, [sp, #40]
   1a0b0:	add	x0, x0, #0x10
   1a0b4:	str	x0, [sp, #128]
   1a0b8:	ldr	x0, [sp, #40]
   1a0bc:	ldr	x0, [x0, #8]
   1a0c0:	str	x0, [sp, #152]
   1a0c4:	ldr	x0, [sp, #152]
   1a0c8:	bl	17a68 <grub_script_parse+0x1f4>
   1a0cc:	str	x0, [sp, #96]
   1a0d0:	ldr	x0, [sp, #96]
   1a0d4:	cmp	x0, #0x0
   1a0d8:	b.ne	1a1c0 <grub_script_execute_cmdline+0x340>  // b.any
   1a0dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a0e0:	add	x0, x0, #0x0
   1a0e4:	ldr	x0, [x0]
   1a0e8:	str	wzr, [x0]
   1a0ec:	ldr	x0, [sp, #152]
   1a0f0:	bl	1ad18 <grub_script_function_find>
   1a0f4:	str	x0, [sp, #160]
   1a0f8:	ldr	x0, [sp, #160]
   1a0fc:	cmp	x0, #0x0
   1a100:	b.ne	1a1c0 <grub_script_execute_cmdline+0x340>  // b.any
   1a104:	ldr	x0, [sp, #152]
   1a108:	bl	0 <grub_strdup>
   1a10c:	str	x0, [sp, #88]
   1a110:	mov	w1, #0x3d                  	// #61
   1a114:	ldr	x0, [sp, #88]
   1a118:	bl	0 <grub_strchr>
   1a11c:	str	x0, [sp, #80]
   1a120:	ldr	x0, [sp, #80]
   1a124:	cmp	x0, #0x0
   1a128:	b.eq	1a15c <grub_script_execute_cmdline+0x2dc>  // b.none
   1a12c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a130:	add	x0, x0, #0x0
   1a134:	ldr	x0, [x0]
   1a138:	str	wzr, [x0]
   1a13c:	ldr	x0, [sp, #80]
   1a140:	strb	wzr, [x0]
   1a144:	ldr	x0, [sp, #80]
   1a148:	add	x0, x0, #0x1
   1a14c:	str	x0, [sp, #80]
   1a150:	ldr	x1, [sp, #80]
   1a154:	ldr	x0, [sp, #88]
   1a158:	bl	18970 <grub_script_return+0x788>
   1a15c:	ldr	x0, [sp, #88]
   1a160:	bl	0 <grub_free>
   1a164:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a168:	add	x0, x0, #0x0
   1a16c:	ldr	x0, [x0]
   1a170:	ldr	w0, [x0]
   1a174:	add	x4, sp, #0x38
   1a178:	mov	w3, w0
   1a17c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a180:	add	x0, x0, #0x0
   1a184:	ldr	x2, [x0]
   1a188:	mov	x1, #0x12                  	// #18
   1a18c:	mov	x0, x4
   1a190:	bl	0 <grub_snprintf>
   1a194:	add	x0, sp, #0x38
   1a198:	mov	x1, x0
   1a19c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a1a0:	add	x0, x0, #0x0
   1a1a4:	ldr	x0, [x0]
   1a1a8:	bl	18970 <grub_script_return+0x788>
   1a1ac:	add	x0, sp, #0x20
   1a1b0:	bl	1b948 <grub_script_argv_free>
   1a1b4:	bl	0 <grub_print_error>
   1a1b8:	mov	w0, #0x0                   	// #0
   1a1bc:	b	1a368 <grub_script_execute_cmdline+0x4e8>
   1a1c0:	ldr	x0, [sp, #96]
   1a1c4:	cmp	x0, #0x0
   1a1c8:	b.eq	1a280 <grub_script_execute_cmdline+0x400>  // b.none
   1a1cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a1d0:	add	x0, x0, #0x0
   1a1d4:	ldr	x0, [x0]
   1a1d8:	ldr	w0, [x0]
   1a1dc:	cmp	w0, #0x0
   1a1e0:	b.eq	1a218 <grub_script_execute_cmdline+0x398>  // b.none
   1a1e4:	ldr	x0, [sp, #96]
   1a1e8:	ldr	w0, [x0, #40]
   1a1ec:	and	w0, w0, #0x200
   1a1f0:	cmp	w0, #0x0
   1a1f4:	b.ne	1a218 <grub_script_execute_cmdline+0x398>  // b.any
   1a1f8:	ldr	x2, [sp, #152]
   1a1fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a200:	add	x0, x0, #0x0
   1a204:	ldr	x1, [x0]
   1a208:	mov	w0, #0x1f                  	// #31
   1a20c:	bl	0 <grub_error>
   1a210:	str	w0, [sp, #172]
   1a214:	b	1a294 <grub_script_execute_cmdline+0x414>
   1a218:	ldr	x0, [sp, #96]
   1a21c:	ldr	w0, [x0, #40]
   1a220:	and	w0, w0, #0x40
   1a224:	cmp	w0, #0x0
   1a228:	b.eq	1a260 <grub_script_execute_cmdline+0x3e0>  // b.none
   1a22c:	ldr	x0, [sp, #96]
   1a230:	ldr	w0, [x0, #40]
   1a234:	and	w0, w0, #0x10
   1a238:	cmp	w0, #0x0
   1a23c:	b.eq	1a260 <grub_script_execute_cmdline+0x3e0>  // b.none
   1a240:	ldr	x0, [sp, #48]
   1a244:	mov	x3, x0
   1a248:	ldr	x2, [sp, #128]
   1a24c:	ldr	w1, [sp, #148]
   1a250:	ldr	x0, [sp, #96]
   1a254:	bl	0 <grub_extcmd_dispatcher>
   1a258:	str	w0, [sp, #172]
   1a25c:	b	1a294 <grub_script_execute_cmdline+0x414>
   1a260:	ldr	x0, [sp, #96]
   1a264:	ldr	x3, [x0, #32]
   1a268:	ldr	x2, [sp, #128]
   1a26c:	ldr	w1, [sp, #148]
   1a270:	ldr	x0, [sp, #96]
   1a274:	blr	x3
   1a278:	str	w0, [sp, #172]
   1a27c:	b	1a294 <grub_script_execute_cmdline+0x414>
   1a280:	ldr	x2, [sp, #128]
   1a284:	ldr	w1, [sp, #148]
   1a288:	ldr	x0, [sp, #160]
   1a28c:	bl	19b80 <grub_script_function_call>
   1a290:	str	w0, [sp, #172]
   1a294:	ldr	w0, [sp, #124]
   1a298:	cmp	w0, #0x0
   1a29c:	b.eq	1a2f8 <grub_script_execute_cmdline+0x478>  // b.none
   1a2a0:	ldr	w0, [sp, #172]
   1a2a4:	cmp	w0, #0x1
   1a2a8:	b.ne	1a2c8 <grub_script_execute_cmdline+0x448>  // b.any
   1a2ac:	str	wzr, [sp, #172]
   1a2b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a2b4:	add	x0, x0, #0x0
   1a2b8:	ldr	x0, [x0]
   1a2bc:	ldr	w1, [sp, #172]
   1a2c0:	str	w1, [x0]
   1a2c4:	b	1a2f8 <grub_script_execute_cmdline+0x478>
   1a2c8:	ldr	w0, [sp, #172]
   1a2cc:	cmp	w0, #0x0
   1a2d0:	b.ne	1a2f0 <grub_script_execute_cmdline+0x470>  // b.any
   1a2d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a2d8:	add	x0, x0, #0x0
   1a2dc:	ldr	x1, [x0]
   1a2e0:	mov	w0, #0x1                   	// #1
   1a2e4:	bl	0 <grub_error>
   1a2e8:	str	w0, [sp, #172]
   1a2ec:	b	1a2f8 <grub_script_execute_cmdline+0x478>
   1a2f0:	bl	0 <grub_print_error>
   1a2f4:	str	wzr, [sp, #172]
   1a2f8:	add	x0, sp, #0x20
   1a2fc:	bl	1b948 <grub_script_argv_free>
   1a300:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a304:	add	x0, x0, #0x0
   1a308:	ldr	x0, [x0]
   1a30c:	ldr	w0, [x0]
   1a310:	cmp	w0, #0x1
   1a314:	b.ne	1a328 <grub_script_execute_cmdline+0x4a8>  // b.any
   1a318:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a31c:	add	x0, x0, #0x0
   1a320:	ldr	x0, [x0]
   1a324:	str	wzr, [x0]
   1a328:	bl	0 <grub_print_error>
   1a32c:	add	x4, sp, #0x38
   1a330:	ldr	w3, [sp, #172]
   1a334:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a338:	add	x0, x0, #0x0
   1a33c:	ldr	x2, [x0]
   1a340:	mov	x1, #0x12                  	// #18
   1a344:	mov	x0, x4
   1a348:	bl	0 <grub_snprintf>
   1a34c:	add	x0, sp, #0x38
   1a350:	mov	x1, x0
   1a354:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a358:	add	x0, x0, #0x0
   1a35c:	ldr	x0, [x0]
   1a360:	bl	0 <grub_env_set>
   1a364:	ldr	w0, [sp, #172]
   1a368:	ldp	x29, x30, [sp], #176
   1a36c:	ret
	...

000000000001a3c0 <grub_script_execute_cmdlist>:
   1a3c0:	stp	x29, x30, [sp, #-48]!
   1a3c4:	mov	x29, sp
   1a3c8:	str	x0, [sp, #24]
   1a3cc:	str	wzr, [sp, #44]
   1a3d0:	ldr	x0, [sp, #24]
   1a3d4:	ldr	x0, [x0, #8]
   1a3d8:	str	x0, [sp, #32]
   1a3dc:	b	1a428 <grub_script_execute_cmdlist+0x68>
   1a3e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a3e4:	add	x0, x0, #0x0
   1a3e8:	ldr	x0, [x0]
   1a3ec:	ldr	x0, [x0]
   1a3f0:	cmp	x0, #0x0
   1a3f4:	b.ne	1a438 <grub_script_execute_cmdlist+0x78>  // b.any
   1a3f8:	ldr	x0, [sp, #32]
   1a3fc:	bl	19af8 <grub_script_return+0x1910>
   1a400:	str	w0, [sp, #44]
   1a404:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a408:	add	x0, x0, #0x0
   1a40c:	ldr	x0, [x0]
   1a410:	ldr	x0, [x0]
   1a414:	cmp	x0, #0x0
   1a418:	b.ne	1a440 <grub_script_execute_cmdlist+0x80>  // b.any
   1a41c:	ldr	x0, [sp, #32]
   1a420:	ldr	x0, [x0, #8]
   1a424:	str	x0, [sp, #32]
   1a428:	ldr	x0, [sp, #32]
   1a42c:	cmp	x0, #0x0
   1a430:	b.ne	1a3e0 <grub_script_execute_cmdlist+0x20>  // b.any
   1a434:	b	1a444 <grub_script_execute_cmdlist+0x84>
   1a438:	nop
   1a43c:	b	1a444 <grub_script_execute_cmdlist+0x84>
   1a440:	nop
   1a444:	ldr	w0, [sp, #44]
   1a448:	ldp	x29, x30, [sp], #48
   1a44c:	ret
	...

000000000001a460 <grub_script_execute_cmdif>:
   1a460:	stp	x29, x30, [sp, #-64]!
   1a464:	mov	x29, sp
   1a468:	str	x0, [sp, #24]
   1a46c:	ldr	x0, [sp, #24]
   1a470:	str	x0, [sp, #56]
   1a474:	ldr	x0, [sp, #56]
   1a478:	ldr	x0, [x0, #16]
   1a47c:	bl	19af8 <grub_script_return+0x1910>
   1a480:	str	w0, [sp, #52]
   1a484:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a488:	add	x0, x0, #0x0
   1a48c:	ldr	x0, [x0]
   1a490:	ldr	x0, [x0]
   1a494:	cmp	x0, #0x0
   1a498:	b.eq	1a4a4 <grub_script_execute_cmdif+0x44>  // b.none
   1a49c:	ldr	w0, [sp, #52]
   1a4a0:	b	1a50c <grub_script_execute_cmdif+0xac>
   1a4a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a4a8:	add	x0, x0, #0x0
   1a4ac:	ldr	x0, [x0]
   1a4b0:	bl	0 <grub_env_get>
   1a4b4:	str	x0, [sp, #40]
   1a4b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a4bc:	add	x0, x0, #0x0
   1a4c0:	ldr	x0, [x0]
   1a4c4:	str	wzr, [x0]
   1a4c8:	ldr	x0, [sp, #40]
   1a4cc:	cmp	x0, #0x0
   1a4d0:	b.eq	1a500 <grub_script_execute_cmdif+0xa0>  // b.none
   1a4d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a4d8:	add	x0, x0, #0x0
   1a4dc:	ldr	x1, [x0]
   1a4e0:	ldr	x0, [sp, #40]
   1a4e4:	bl	0 <grub_strcmp>
   1a4e8:	cmp	w0, #0x0
   1a4ec:	b.ne	1a500 <grub_script_execute_cmdif+0xa0>  // b.any
   1a4f0:	ldr	x0, [sp, #56]
   1a4f4:	ldr	x0, [x0, #24]
   1a4f8:	bl	19af8 <grub_script_return+0x1910>
   1a4fc:	b	1a50c <grub_script_execute_cmdif+0xac>
   1a500:	ldr	x0, [sp, #56]
   1a504:	ldr	x0, [x0, #32]
   1a508:	bl	19af8 <grub_script_return+0x1910>
   1a50c:	ldp	x29, x30, [sp], #64
   1a510:	ret
   1a514:	nop
	...

000000000001a538 <grub_script_execute_cmdfor>:
   1a538:	stp	x29, x30, [sp, #-80]!
   1a53c:	mov	x29, sp
   1a540:	str	x0, [sp, #24]
   1a544:	str	wzr, [sp, #40]
   1a548:	str	xzr, [sp, #48]
   1a54c:	str	xzr, [sp, #56]
   1a550:	ldr	x0, [sp, #24]
   1a554:	str	x0, [sp, #64]
   1a558:	ldr	x0, [sp, #64]
   1a55c:	ldr	x0, [x0, #24]
   1a560:	add	x1, sp, #0x28
   1a564:	bl	19440 <grub_script_return+0x1258>
   1a568:	cmp	w0, #0x0
   1a56c:	b.eq	1a584 <grub_script_execute_cmdfor+0x4c>  // b.none
   1a570:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a574:	add	x0, x0, #0x0
   1a578:	ldr	x0, [x0]
   1a57c:	ldr	w0, [x0]
   1a580:	b	1a6f0 <grub_script_execute_cmdfor+0x1b8>
   1a584:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a588:	add	x0, x0, #0x0
   1a58c:	ldr	x0, [x0]
   1a590:	ldr	x0, [x0]
   1a594:	add	x1, x0, #0x1
   1a598:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a59c:	add	x0, x0, #0x0
   1a5a0:	ldr	x0, [x0]
   1a5a4:	str	x1, [x0]
   1a5a8:	str	wzr, [sp, #72]
   1a5ac:	str	wzr, [sp, #76]
   1a5b0:	b	1a66c <grub_script_execute_cmdfor+0x134>
   1a5b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a5b8:	add	x0, x0, #0x0
   1a5bc:	ldr	x0, [x0]
   1a5c0:	ldr	x0, [x0]
   1a5c4:	cmp	x0, #0x0
   1a5c8:	b.eq	1a5f4 <grub_script_execute_cmdfor+0xbc>  // b.none
   1a5cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a5d0:	add	x0, x0, #0x0
   1a5d4:	ldr	x0, [x0]
   1a5d8:	ldr	x0, [x0]
   1a5dc:	cmp	x0, #0x1
   1a5e0:	b.ne	1a5f4 <grub_script_execute_cmdfor+0xbc>  // b.any
   1a5e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a5e8:	add	x0, x0, #0x0
   1a5ec:	ldr	x0, [x0]
   1a5f0:	str	xzr, [x0]
   1a5f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a5f8:	add	x0, x0, #0x0
   1a5fc:	ldr	x0, [x0]
   1a600:	ldr	x0, [x0]
   1a604:	cmp	x0, #0x0
   1a608:	b.ne	1a660 <grub_script_execute_cmdfor+0x128>  // b.any
   1a60c:	ldr	x0, [sp, #64]
   1a610:	ldr	x0, [x0, #16]
   1a614:	ldr	x2, [x0, #8]
   1a618:	ldr	x1, [sp, #48]
   1a61c:	ldr	w0, [sp, #76]
   1a620:	lsl	x0, x0, #3
   1a624:	add	x0, x1, x0
   1a628:	ldr	x0, [x0]
   1a62c:	mov	x1, x0
   1a630:	mov	x0, x2
   1a634:	bl	18970 <grub_script_return+0x788>
   1a638:	ldr	x0, [sp, #64]
   1a63c:	ldr	x0, [x0, #32]
   1a640:	bl	19af8 <grub_script_return+0x1910>
   1a644:	str	w0, [sp, #72]
   1a648:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a64c:	add	x0, x0, #0x0
   1a650:	ldr	x0, [x0]
   1a654:	ldr	x0, [x0]
   1a658:	cmp	x0, #0x0
   1a65c:	b.ne	1a680 <grub_script_execute_cmdfor+0x148>  // b.any
   1a660:	ldr	w0, [sp, #76]
   1a664:	add	w0, w0, #0x1
   1a668:	str	w0, [sp, #76]
   1a66c:	ldr	w0, [sp, #40]
   1a670:	ldr	w1, [sp, #76]
   1a674:	cmp	w1, w0
   1a678:	b.cc	1a5b4 <grub_script_execute_cmdfor+0x7c>  // b.lo, b.ul, b.last
   1a67c:	b	1a684 <grub_script_execute_cmdfor+0x14c>
   1a680:	nop
   1a684:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a688:	add	x0, x0, #0x0
   1a68c:	ldr	x0, [x0]
   1a690:	ldr	x0, [x0]
   1a694:	cmp	x0, #0x0
   1a698:	b.eq	1a6c0 <grub_script_execute_cmdfor+0x188>  // b.none
   1a69c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a6a0:	add	x0, x0, #0x0
   1a6a4:	ldr	x0, [x0]
   1a6a8:	ldr	x0, [x0]
   1a6ac:	sub	x1, x0, #0x1
   1a6b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a6b4:	add	x0, x0, #0x0
   1a6b8:	ldr	x0, [x0]
   1a6bc:	str	x1, [x0]
   1a6c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a6c4:	add	x0, x0, #0x0
   1a6c8:	ldr	x0, [x0]
   1a6cc:	ldr	x0, [x0]
   1a6d0:	sub	x1, x0, #0x1
   1a6d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a6d8:	add	x0, x0, #0x0
   1a6dc:	ldr	x0, [x0]
   1a6e0:	str	x1, [x0]
   1a6e4:	add	x0, sp, #0x28
   1a6e8:	bl	1b948 <grub_script_argv_free>
   1a6ec:	ldr	w0, [sp, #72]
   1a6f0:	ldp	x29, x30, [sp], #80
   1a6f4:	ret
	...

000000000001a720 <grub_script_execute_cmdwhile>:
   1a720:	stp	x29, x30, [sp, #-48]!
   1a724:	mov	x29, sp
   1a728:	str	x0, [sp, #24]
   1a72c:	ldr	x0, [sp, #24]
   1a730:	str	x0, [sp, #32]
   1a734:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a738:	add	x0, x0, #0x0
   1a73c:	ldr	x0, [x0]
   1a740:	ldr	x0, [x0]
   1a744:	add	x1, x0, #0x1
   1a748:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a74c:	add	x0, x0, #0x0
   1a750:	ldr	x0, [x0]
   1a754:	str	x1, [x0]
   1a758:	ldr	x0, [sp, #32]
   1a75c:	ldr	x0, [x0, #16]
   1a760:	bl	19af8 <grub_script_return+0x1910>
   1a764:	str	w0, [sp, #44]
   1a768:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a76c:	add	x0, x0, #0x0
   1a770:	ldr	x0, [x0]
   1a774:	ldr	x0, [x0]
   1a778:	cmp	x0, #0x0
   1a77c:	b.ne	1a840 <grub_script_execute_cmdwhile+0x120>  // b.any
   1a780:	ldr	x0, [sp, #32]
   1a784:	ldr	w0, [x0, #32]
   1a788:	cmp	w0, #0x0
   1a78c:	b.eq	1a7a4 <grub_script_execute_cmdwhile+0x84>  // b.none
   1a790:	ldr	w0, [sp, #44]
   1a794:	cmp	w0, #0x0
   1a798:	cset	w0, eq  // eq = none
   1a79c:	and	w0, w0, #0xff
   1a7a0:	b	1a7b4 <grub_script_execute_cmdwhile+0x94>
   1a7a4:	ldr	w0, [sp, #44]
   1a7a8:	cmp	w0, #0x0
   1a7ac:	cset	w0, ne  // ne = any
   1a7b0:	and	w0, w0, #0xff
   1a7b4:	cmp	w0, #0x0
   1a7b8:	b.ne	1a848 <grub_script_execute_cmdwhile+0x128>  // b.any
   1a7bc:	ldr	x0, [sp, #32]
   1a7c0:	ldr	x0, [x0, #24]
   1a7c4:	bl	19af8 <grub_script_return+0x1910>
   1a7c8:	str	w0, [sp, #44]
   1a7cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a7d0:	add	x0, x0, #0x0
   1a7d4:	ldr	x0, [x0]
   1a7d8:	ldr	x0, [x0]
   1a7dc:	cmp	x0, #0x0
   1a7e0:	b.ne	1a850 <grub_script_execute_cmdwhile+0x130>  // b.any
   1a7e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a7e8:	add	x0, x0, #0x0
   1a7ec:	ldr	x0, [x0]
   1a7f0:	ldr	x0, [x0]
   1a7f4:	cmp	x0, #0x1
   1a7f8:	b.ne	1a824 <grub_script_execute_cmdwhile+0x104>  // b.any
   1a7fc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a800:	add	x0, x0, #0x0
   1a804:	ldr	x0, [x0]
   1a808:	ldr	x0, [x0]
   1a80c:	cmp	x0, #0x0
   1a810:	b.eq	1a824 <grub_script_execute_cmdwhile+0x104>  // b.none
   1a814:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a818:	add	x0, x0, #0x0
   1a81c:	ldr	x0, [x0]
   1a820:	str	xzr, [x0]
   1a824:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a828:	add	x0, x0, #0x0
   1a82c:	ldr	x0, [x0]
   1a830:	ldr	x0, [x0]
   1a834:	cmp	x0, #0x0
   1a838:	b.ne	1a858 <grub_script_execute_cmdwhile+0x138>  // b.any
   1a83c:	b	1a758 <grub_script_execute_cmdwhile+0x38>
   1a840:	nop
   1a844:	b	1a85c <grub_script_execute_cmdwhile+0x13c>
   1a848:	nop
   1a84c:	b	1a85c <grub_script_execute_cmdwhile+0x13c>
   1a850:	nop
   1a854:	b	1a85c <grub_script_execute_cmdwhile+0x13c>
   1a858:	nop
   1a85c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a860:	add	x0, x0, #0x0
   1a864:	ldr	x0, [x0]
   1a868:	ldr	x0, [x0]
   1a86c:	cmp	x0, #0x0
   1a870:	b.eq	1a898 <grub_script_execute_cmdwhile+0x178>  // b.none
   1a874:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a878:	add	x0, x0, #0x0
   1a87c:	ldr	x0, [x0]
   1a880:	ldr	x0, [x0]
   1a884:	sub	x1, x0, #0x1
   1a888:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a88c:	add	x0, x0, #0x0
   1a890:	ldr	x0, [x0]
   1a894:	str	x1, [x0]
   1a898:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a89c:	add	x0, x0, #0x0
   1a8a0:	ldr	x0, [x0]
   1a8a4:	ldr	x0, [x0]
   1a8a8:	sub	x1, x0, #0x1
   1a8ac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1a8b0:	add	x0, x0, #0x0
   1a8b4:	ldr	x0, [x0]
   1a8b8:	str	x1, [x0]
   1a8bc:	ldr	w0, [sp, #44]
   1a8c0:	ldp	x29, x30, [sp], #48
   1a8c4:	ret
	...

000000000001a8e8 <grub_script_execute>:
   1a8e8:	stp	x29, x30, [sp, #-32]!
   1a8ec:	mov	x29, sp
   1a8f0:	str	x0, [sp, #24]
   1a8f4:	ldr	x0, [sp, #24]
   1a8f8:	cmp	x0, #0x0
   1a8fc:	b.ne	1a908 <grub_script_execute+0x20>  // b.any
   1a900:	mov	w0, #0x0                   	// #0
   1a904:	b	1a914 <grub_script_execute+0x2c>
   1a908:	ldr	x0, [sp, #24]
   1a90c:	ldr	x0, [x0, #16]
   1a910:	bl	19af8 <grub_script_return+0x1910>
   1a914:	ldp	x29, x30, [sp], #32
   1a918:	ret
   1a91c:	nop
   1a920:	sub	sp, sp, #0x30
   1a924:	str	x0, [sp, #24]
   1a928:	str	x1, [sp, #16]
   1a92c:	str	w2, [sp, #12]
   1a930:	ldr	x0, [sp, #24]
   1a934:	str	x0, [sp, #40]
   1a938:	nop
   1a93c:	ldr	x1, [sp, #16]
   1a940:	add	x0, x1, #0x1
   1a944:	str	x0, [sp, #16]
   1a948:	ldr	x0, [sp, #40]
   1a94c:	add	x2, x0, #0x1
   1a950:	str	x2, [sp, #40]
   1a954:	ldrb	w1, [x1]
   1a958:	strb	w1, [x0]
   1a95c:	ldrb	w0, [x0]
   1a960:	cmp	w0, #0x0
   1a964:	b.eq	1a980 <grub_script_execute+0x98>  // b.none
   1a968:	ldr	w0, [sp, #12]
   1a96c:	sub	w0, w0, #0x1
   1a970:	str	w0, [sp, #12]
   1a974:	ldr	w0, [sp, #12]
   1a978:	cmp	w0, #0x0
   1a97c:	b.ne	1a93c <grub_script_execute+0x54>  // b.any
   1a980:	ldr	x0, [sp, #24]
   1a984:	add	sp, sp, #0x30
   1a988:	ret
   1a98c:	sub	sp, sp, #0x20
   1a990:	str	x0, [sp, #8]
   1a994:	str	x1, [sp]
   1a998:	ldr	x0, [sp]
   1a99c:	sub	x0, x0, #0x1
   1a9a0:	str	x0, [sp, #24]
   1a9a4:	b	1a9c8 <grub_script_execute+0xe0>
   1a9a8:	ldr	x0, [sp, #24]
   1a9ac:	ldrb	w0, [x0]
   1a9b0:	and	w0, w0, #0xc0
   1a9b4:	cmp	w0, #0x80
   1a9b8:	b.ne	1a9dc <grub_script_execute+0xf4>  // b.any
   1a9bc:	ldr	x0, [sp, #24]
   1a9c0:	sub	x0, x0, #0x1
   1a9c4:	str	x0, [sp, #24]
   1a9c8:	ldr	x1, [sp, #24]
   1a9cc:	ldr	x0, [sp, #8]
   1a9d0:	cmp	x1, x0
   1a9d4:	b.cs	1a9a8 <grub_script_execute+0xc0>  // b.hs, b.nlast
   1a9d8:	b	1a9e0 <grub_script_execute+0xf8>
   1a9dc:	nop
   1a9e0:	ldr	x1, [sp, #24]
   1a9e4:	ldr	x0, [sp, #8]
   1a9e8:	cmp	x1, x0
   1a9ec:	b.cs	1a9f8 <grub_script_execute+0x110>  // b.hs, b.nlast
   1a9f0:	mov	x0, #0x0                   	// #0
   1a9f4:	b	1aae0 <grub_script_execute+0x1f8>
   1a9f8:	ldr	x0, [sp, #24]
   1a9fc:	ldrb	w0, [x0]
   1aa00:	sxtb	w0, w0
   1aa04:	cmp	w0, #0x0
   1aa08:	b.lt	1aa20 <grub_script_execute+0x138>  // b.tstop
   1aa0c:	ldr	x0, [sp, #24]
   1aa10:	add	x1, x0, #0x1
   1aa14:	ldr	x0, [sp, #8]
   1aa18:	sub	x0, x1, x0
   1aa1c:	b	1aae0 <grub_script_execute+0x1f8>
   1aa20:	ldr	x0, [sp, #24]
   1aa24:	ldrb	w0, [x0]
   1aa28:	and	w0, w0, #0xe0
   1aa2c:	cmp	w0, #0xc0
   1aa30:	b.ne	1aa5c <grub_script_execute+0x174>  // b.any
   1aa34:	ldr	x0, [sp, #24]
   1aa38:	add	x0, x0, #0x2
   1aa3c:	ldr	x1, [sp]
   1aa40:	cmp	x1, x0
   1aa44:	b.cc	1aa5c <grub_script_execute+0x174>  // b.lo, b.ul, b.last
   1aa48:	ldr	x0, [sp, #24]
   1aa4c:	add	x1, x0, #0x2
   1aa50:	ldr	x0, [sp, #8]
   1aa54:	sub	x0, x1, x0
   1aa58:	b	1aae0 <grub_script_execute+0x1f8>
   1aa5c:	ldr	x0, [sp, #24]
   1aa60:	ldrb	w0, [x0]
   1aa64:	and	w0, w0, #0xf0
   1aa68:	cmp	w0, #0xe0
   1aa6c:	b.ne	1aa98 <grub_script_execute+0x1b0>  // b.any
   1aa70:	ldr	x0, [sp, #24]
   1aa74:	add	x0, x0, #0x3
   1aa78:	ldr	x1, [sp]
   1aa7c:	cmp	x1, x0
   1aa80:	b.cc	1aa98 <grub_script_execute+0x1b0>  // b.lo, b.ul, b.last
   1aa84:	ldr	x0, [sp, #24]
   1aa88:	add	x1, x0, #0x3
   1aa8c:	ldr	x0, [sp, #8]
   1aa90:	sub	x0, x1, x0
   1aa94:	b	1aae0 <grub_script_execute+0x1f8>
   1aa98:	ldr	x0, [sp, #24]
   1aa9c:	ldrb	w0, [x0]
   1aaa0:	and	w0, w0, #0xf8
   1aaa4:	cmp	w0, #0xf0
   1aaa8:	b.ne	1aad4 <grub_script_execute+0x1ec>  // b.any
   1aaac:	ldr	x0, [sp, #24]
   1aab0:	add	x0, x0, #0x4
   1aab4:	ldr	x1, [sp]
   1aab8:	cmp	x1, x0
   1aabc:	b.cc	1aad4 <grub_script_execute+0x1ec>  // b.lo, b.ul, b.last
   1aac0:	ldr	x0, [sp, #24]
   1aac4:	add	x1, x0, #0x4
   1aac8:	ldr	x0, [sp, #8]
   1aacc:	sub	x0, x1, x0
   1aad0:	b	1aae0 <grub_script_execute+0x1f8>
   1aad4:	ldr	x1, [sp, #24]
   1aad8:	ldr	x0, [sp, #8]
   1aadc:	sub	x0, x1, x0
   1aae0:	add	sp, sp, #0x20
   1aae4:	ret

000000000001aae8 <grub_script_function_create>:
   1aae8:	stp	x29, x30, [sp, #-64]!
   1aaec:	mov	x29, sp
   1aaf0:	str	x0, [sp, #24]
   1aaf4:	str	x1, [sp, #16]
   1aaf8:	mov	x0, #0x28                  	// #40
   1aafc:	bl	0 <grub_malloc>
   1ab00:	str	x0, [sp, #56]
   1ab04:	ldr	x0, [sp, #56]
   1ab08:	cmp	x0, #0x0
   1ab0c:	b.ne	1ab18 <grub_script_function_create+0x30>  // b.any
   1ab10:	mov	x0, #0x0                   	// #0
   1ab14:	b	1ac50 <grub_script_function_create+0x168>
   1ab18:	ldr	x0, [sp, #24]
   1ab1c:	ldr	x0, [x0, #8]
   1ab20:	bl	0 <grub_strdup>
   1ab24:	mov	x1, x0
   1ab28:	ldr	x0, [sp, #56]
   1ab2c:	str	x1, [x0]
   1ab30:	ldr	x0, [sp, #56]
   1ab34:	ldr	x0, [x0]
   1ab38:	cmp	x0, #0x0
   1ab3c:	b.ne	1ab50 <grub_script_function_create+0x68>  // b.any
   1ab40:	ldr	x0, [sp, #56]
   1ab44:	bl	0 <grub_free>
   1ab48:	mov	x0, #0x0                   	// #0
   1ab4c:	b	1ac50 <grub_script_function_create+0x168>
   1ab50:	ldr	x0, [sp, #56]
   1ab54:	ldr	x1, [sp, #16]
   1ab58:	str	x1, [x0, #8]
   1ab5c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ab60:	add	x0, x0, #0x0
   1ab64:	ldr	x0, [x0]
   1ab68:	str	x0, [sp, #48]
   1ab6c:	b	1aba8 <grub_script_function_create+0xc0>
   1ab70:	ldr	x0, [sp, #48]
   1ab74:	ldr	x0, [x0]
   1ab78:	ldr	x2, [x0]
   1ab7c:	ldr	x0, [sp, #56]
   1ab80:	ldr	x0, [x0]
   1ab84:	mov	x1, x0
   1ab88:	mov	x0, x2
   1ab8c:	bl	0 <grub_strcmp>
   1ab90:	cmp	w0, #0x0
   1ab94:	b.ge	1abbc <grub_script_function_create+0xd4>  // b.tcont
   1ab98:	ldr	x0, [sp, #48]
   1ab9c:	ldr	x0, [x0]
   1aba0:	add	x0, x0, #0x18
   1aba4:	str	x0, [sp, #48]
   1aba8:	ldr	x0, [sp, #48]
   1abac:	ldr	x0, [x0]
   1abb0:	cmp	x0, #0x0
   1abb4:	b.ne	1ab70 <grub_script_function_create+0x88>  // b.any
   1abb8:	b	1abc0 <grub_script_function_create+0xd8>
   1abbc:	nop
   1abc0:	ldr	x0, [sp, #48]
   1abc4:	ldr	x0, [x0]
   1abc8:	cmp	x0, #0x0
   1abcc:	b.eq	1ac30 <grub_script_function_create+0x148>  // b.none
   1abd0:	ldr	x0, [sp, #48]
   1abd4:	ldr	x0, [x0]
   1abd8:	ldr	x2, [x0]
   1abdc:	ldr	x0, [sp, #56]
   1abe0:	ldr	x0, [x0]
   1abe4:	mov	x1, x0
   1abe8:	mov	x0, x2
   1abec:	bl	0 <grub_strcmp>
   1abf0:	cmp	w0, #0x0
   1abf4:	b.ne	1ac30 <grub_script_function_create+0x148>  // b.any
   1abf8:	ldr	x0, [sp, #48]
   1abfc:	ldr	x0, [x0]
   1ac00:	str	x0, [sp, #40]
   1ac04:	ldr	x0, [sp, #40]
   1ac08:	ldr	x0, [x0, #8]
   1ac0c:	bl	17168 <grub_script_free>
   1ac10:	ldr	x0, [sp, #40]
   1ac14:	ldr	x1, [sp, #16]
   1ac18:	str	x1, [x0, #8]
   1ac1c:	ldr	x0, [sp, #56]
   1ac20:	bl	0 <grub_free>
   1ac24:	ldr	x0, [sp, #40]
   1ac28:	str	x0, [sp, #56]
   1ac2c:	b	1ac4c <grub_script_function_create+0x164>
   1ac30:	ldr	x0, [sp, #48]
   1ac34:	ldr	x1, [x0]
   1ac38:	ldr	x0, [sp, #56]
   1ac3c:	str	x1, [x0, #24]
   1ac40:	ldr	x0, [sp, #48]
   1ac44:	ldr	x1, [sp, #56]
   1ac48:	str	x1, [x0]
   1ac4c:	ldr	x0, [sp, #56]
   1ac50:	ldp	x29, x30, [sp], #64
   1ac54:	ret
	...

000000000001ac60 <grub_script_function_remove>:
   1ac60:	stp	x29, x30, [sp, #-48]!
   1ac64:	mov	x29, sp
   1ac68:	str	x0, [sp, #24]
   1ac6c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ac70:	add	x0, x0, #0x0
   1ac74:	ldr	x0, [x0]
   1ac78:	str	x0, [sp, #40]
   1ac7c:	ldr	x0, [sp, #40]
   1ac80:	ldr	x0, [x0]
   1ac84:	str	x0, [sp, #32]
   1ac88:	b	1acf4 <grub_script_function_remove+0x94>
   1ac8c:	ldr	x0, [sp, #32]
   1ac90:	ldr	x0, [x0]
   1ac94:	mov	x1, x0
   1ac98:	ldr	x0, [sp, #24]
   1ac9c:	bl	0 <grub_strcmp>
   1aca0:	cmp	w0, #0x0
   1aca4:	b.ne	1acdc <grub_script_function_remove+0x7c>  // b.any
   1aca8:	ldr	x0, [sp, #32]
   1acac:	ldr	x1, [x0, #24]
   1acb0:	ldr	x0, [sp, #40]
   1acb4:	str	x1, [x0]
   1acb8:	ldr	x0, [sp, #32]
   1acbc:	ldr	x0, [x0]
   1acc0:	bl	0 <grub_free>
   1acc4:	ldr	x0, [sp, #32]
   1acc8:	ldr	x0, [x0, #8]
   1accc:	bl	17168 <grub_script_free>
   1acd0:	ldr	x0, [sp, #32]
   1acd4:	bl	0 <grub_free>
   1acd8:	b	1ad04 <grub_script_function_remove+0xa4>
   1acdc:	ldr	x0, [sp, #32]
   1ace0:	add	x0, x0, #0x18
   1ace4:	str	x0, [sp, #40]
   1ace8:	ldr	x0, [sp, #32]
   1acec:	ldr	x0, [x0, #24]
   1acf0:	str	x0, [sp, #32]
   1acf4:	ldr	x0, [sp, #32]
   1acf8:	cmp	x0, #0x0
   1acfc:	b.ne	1ac8c <grub_script_function_remove+0x2c>  // b.any
   1ad00:	nop
   1ad04:	nop
   1ad08:	ldp	x29, x30, [sp], #48
   1ad0c:	ret
	...

000000000001ad18 <grub_script_function_find>:
   1ad18:	stp	x29, x30, [sp, #-64]!
   1ad1c:	mov	x29, sp
   1ad20:	str	x0, [sp, #24]
   1ad24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ad28:	add	x0, x0, #0x0
   1ad2c:	ldr	x0, [x0]
   1ad30:	ldr	x0, [x0]
   1ad34:	str	x0, [sp, #56]
   1ad38:	b	1ad64 <grub_script_function_find+0x4c>
   1ad3c:	ldr	x0, [sp, #56]
   1ad40:	ldr	x0, [x0]
   1ad44:	mov	x1, x0
   1ad48:	ldr	x0, [sp, #24]
   1ad4c:	bl	0 <grub_strcmp>
   1ad50:	cmp	w0, #0x0
   1ad54:	b.eq	1ad74 <grub_script_function_find+0x5c>  // b.none
   1ad58:	ldr	x0, [sp, #56]
   1ad5c:	ldr	x0, [x0, #24]
   1ad60:	str	x0, [sp, #56]
   1ad64:	ldr	x0, [sp, #56]
   1ad68:	cmp	x0, #0x0
   1ad6c:	b.ne	1ad3c <grub_script_function_find+0x24>  // b.any
   1ad70:	b	1ad78 <grub_script_function_find+0x60>
   1ad74:	nop
   1ad78:	ldr	x0, [sp, #56]
   1ad7c:	cmp	x0, #0x0
   1ad80:	b.ne	1addc <grub_script_function_find+0xc4>  // b.any
   1ad84:	add	x0, sp, #0x20
   1ad88:	mov	w2, #0x14                  	// #20
   1ad8c:	ldr	x1, [sp, #24]
   1ad90:	bl	1a920 <grub_script_execute+0x38>
   1ad94:	strb	wzr, [sp, #52]
   1ad98:	add	x0, sp, #0x20
   1ad9c:	bl	0 <grub_strlen>
   1ada0:	mov	x1, x0
   1ada4:	add	x0, sp, #0x20
   1ada8:	add	x1, x0, x1
   1adac:	add	x0, sp, #0x20
   1adb0:	bl	1a98c <grub_script_execute+0xa4>
   1adb4:	mov	x1, x0
   1adb8:	add	x0, sp, #0x20
   1adbc:	strb	wzr, [x0, x1]
   1adc0:	add	x0, sp, #0x20
   1adc4:	mov	x2, x0
   1adc8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1adcc:	add	x0, x0, #0x0
   1add0:	ldr	x1, [x0]
   1add4:	mov	w0, #0x10                  	// #16
   1add8:	bl	0 <grub_error>
   1addc:	ldr	x0, [sp, #56]
   1ade0:	ldp	x29, x30, [sp], #64
   1ade4:	ret
	...
   1adf8:	sub	sp, sp, #0x30
   1adfc:	str	x0, [sp, #24]
   1ae00:	str	x1, [sp, #16]
   1ae04:	str	w2, [sp, #12]
   1ae08:	ldr	x0, [sp, #24]
   1ae0c:	str	x0, [sp, #40]
   1ae10:	nop
   1ae14:	ldr	x1, [sp, #16]
   1ae18:	add	x0, x1, #0x1
   1ae1c:	str	x0, [sp, #16]
   1ae20:	ldr	x0, [sp, #40]
   1ae24:	add	x2, x0, #0x1
   1ae28:	str	x2, [sp, #40]
   1ae2c:	ldrb	w1, [x1]
   1ae30:	strb	w1, [x0]
   1ae34:	ldrb	w0, [x0]
   1ae38:	cmp	w0, #0x0
   1ae3c:	b.eq	1ae58 <grub_script_function_find+0x140>  // b.none
   1ae40:	ldr	w0, [sp, #12]
   1ae44:	sub	w0, w0, #0x1
   1ae48:	str	w0, [sp, #12]
   1ae4c:	ldr	w0, [sp, #12]
   1ae50:	cmp	w0, #0x0
   1ae54:	b.ne	1ae14 <grub_script_function_find+0xfc>  // b.any
   1ae58:	ldr	x0, [sp, #24]
   1ae5c:	add	sp, sp, #0x30
   1ae60:	ret

000000000001ae64 <grub_script_lexer_ref>:
   1ae64:	sub	sp, sp, #0x10
   1ae68:	str	x0, [sp, #8]
   1ae6c:	ldr	x0, [sp, #8]
   1ae70:	ldr	w0, [x0, #16]
   1ae74:	add	w1, w0, #0x1
   1ae78:	ldr	x0, [sp, #8]
   1ae7c:	str	w1, [x0, #16]
   1ae80:	nop
   1ae84:	add	sp, sp, #0x10
   1ae88:	ret

000000000001ae8c <grub_script_lexer_deref>:
   1ae8c:	sub	sp, sp, #0x10
   1ae90:	str	x0, [sp, #8]
   1ae94:	ldr	x0, [sp, #8]
   1ae98:	ldr	w0, [x0, #16]
   1ae9c:	sub	w1, w0, #0x1
   1aea0:	ldr	x0, [sp, #8]
   1aea4:	str	w1, [x0, #16]
   1aea8:	nop
   1aeac:	add	sp, sp, #0x10
   1aeb0:	ret

000000000001aeb4 <grub_script_lexer_record_start>:
   1aeb4:	stp	x29, x30, [sp, #-48]!
   1aeb8:	mov	x29, sp
   1aebc:	str	x0, [sp, #24]
   1aec0:	ldr	x0, [sp, #24]
   1aec4:	ldr	x0, [x0, #40]
   1aec8:	str	x0, [sp, #40]
   1aecc:	ldr	x0, [sp, #40]
   1aed0:	ldr	w0, [x0, #20]
   1aed4:	add	w1, w0, #0x1
   1aed8:	ldr	x0, [sp, #40]
   1aedc:	str	w1, [x0, #20]
   1aee0:	ldr	x0, [sp, #40]
   1aee4:	ldr	x0, [x0, #24]
   1aee8:	cmp	x0, #0x0
   1aeec:	b.eq	1aefc <grub_script_lexer_record_start+0x48>  // b.none
   1aef0:	ldr	x0, [sp, #40]
   1aef4:	ldr	w0, [x0, #32]
   1aef8:	b	1af58 <grub_script_lexer_record_start+0xa4>
   1aefc:	ldr	x0, [sp, #40]
   1af00:	str	wzr, [x0, #32]
   1af04:	ldr	x0, [sp, #40]
   1af08:	mov	w1, #0x100                 	// #256
   1af0c:	str	w1, [x0, #36]
   1af10:	ldr	x0, [sp, #40]
   1af14:	ldr	w0, [x0, #36]
   1af18:	sxtw	x0, w0
   1af1c:	bl	0 <grub_malloc>
   1af20:	mov	x1, x0
   1af24:	ldr	x0, [sp, #40]
   1af28:	str	x1, [x0, #24]
   1af2c:	ldr	x0, [sp, #40]
   1af30:	ldr	x0, [x0, #24]
   1af34:	cmp	x0, #0x0
   1af38:	b.ne	1af50 <grub_script_lexer_record_start+0x9c>  // b.any
   1af3c:	mov	x1, #0x0                   	// #0
   1af40:	ldr	x0, [sp, #24]
   1af44:	bl	1b820 <grub_script_yyerror>
   1af48:	ldr	x0, [sp, #40]
   1af4c:	str	wzr, [x0, #36]
   1af50:	ldr	x0, [sp, #40]
   1af54:	ldr	w0, [x0, #32]
   1af58:	ldp	x29, x30, [sp], #48
   1af5c:	ret

000000000001af60 <grub_script_lexer_record_stop>:
   1af60:	stp	x29, x30, [sp, #-64]!
   1af64:	mov	x29, sp
   1af68:	str	x0, [sp, #24]
   1af6c:	str	w1, [sp, #20]
   1af70:	ldr	x0, [sp, #24]
   1af74:	ldr	x0, [x0, #40]
   1af78:	str	x0, [sp, #56]
   1af7c:	ldr	x0, [sp, #56]
   1af80:	ldr	w0, [x0, #20]
   1af84:	cmp	w0, #0x0
   1af88:	b.ne	1af94 <grub_script_lexer_record_stop+0x34>  // b.any
   1af8c:	mov	x0, #0x0                   	// #0
   1af90:	b	1b068 <grub_script_lexer_record_stop+0x108>
   1af94:	ldr	x0, [sp, #56]
   1af98:	ldr	w0, [x0, #20]
   1af9c:	sub	w1, w0, #0x1
   1afa0:	ldr	x0, [sp, #56]
   1afa4:	str	w1, [x0, #20]
   1afa8:	ldr	x0, [sp, #56]
   1afac:	ldr	x0, [x0, #24]
   1afb0:	cmp	x0, #0x0
   1afb4:	b.ne	1afc0 <grub_script_lexer_record_stop+0x60>  // b.any
   1afb8:	mov	x0, #0x0                   	// #0
   1afbc:	b	1b068 <grub_script_lexer_record_stop+0x108>
   1afc0:	ldr	x0, [sp, #56]
   1afc4:	ldr	w0, [x0, #32]
   1afc8:	mov	w1, w0
   1afcc:	ldr	w0, [sp, #20]
   1afd0:	sub	w0, w1, w0
   1afd4:	str	w0, [sp, #52]
   1afd8:	ldr	w0, [sp, #52]
   1afdc:	add	w0, w0, #0x1
   1afe0:	sxtw	x0, w0
   1afe4:	mov	x1, x0
   1afe8:	ldr	x0, [sp, #24]
   1afec:	bl	16fd4 <grub_script_malloc>
   1aff0:	str	x0, [sp, #40]
   1aff4:	ldr	x0, [sp, #40]
   1aff8:	cmp	x0, #0x0
   1affc:	b.eq	1b030 <grub_script_lexer_record_stop+0xd0>  // b.none
   1b000:	ldr	x0, [sp, #56]
   1b004:	ldr	x1, [x0, #24]
   1b008:	ldr	w0, [sp, #20]
   1b00c:	add	x0, x1, x0
   1b010:	ldr	w2, [sp, #52]
   1b014:	mov	x1, x0
   1b018:	ldr	x0, [sp, #40]
   1b01c:	bl	1adf8 <grub_script_function_find+0xe0>
   1b020:	ldrsw	x0, [sp, #52]
   1b024:	ldr	x1, [sp, #40]
   1b028:	add	x0, x1, x0
   1b02c:	strb	wzr, [x0]
   1b030:	ldr	x0, [sp, #56]
   1b034:	ldr	w0, [x0, #20]
   1b038:	cmp	w0, #0x0
   1b03c:	b.ne	1b064 <grub_script_lexer_record_stop+0x104>  // b.any
   1b040:	ldr	x0, [sp, #56]
   1b044:	ldr	x0, [x0, #24]
   1b048:	bl	0 <grub_free>
   1b04c:	ldr	x0, [sp, #56]
   1b050:	str	xzr, [x0, #24]
   1b054:	ldr	x0, [sp, #56]
   1b058:	str	wzr, [x0, #36]
   1b05c:	ldr	x0, [sp, #56]
   1b060:	str	wzr, [x0, #32]
   1b064:	ldr	x0, [sp, #40]
   1b068:	ldp	x29, x30, [sp], #64
   1b06c:	ret

000000000001b070 <grub_script_lexer_record>:
   1b070:	stp	x29, x30, [sp, #-64]!
   1b074:	mov	x29, sp
   1b078:	str	x0, [sp, #24]
   1b07c:	str	x1, [sp, #16]
   1b080:	ldr	x0, [sp, #24]
   1b084:	ldr	x0, [x0, #40]
   1b088:	str	x0, [sp, #56]
   1b08c:	ldr	x0, [sp, #56]
   1b090:	ldr	w0, [x0, #20]
   1b094:	cmp	w0, #0x0
   1b098:	b.eq	1b1b8 <grub_script_lexer_record+0x148>  // b.none
   1b09c:	ldr	x0, [sp, #56]
   1b0a0:	ldr	x0, [x0, #24]
   1b0a4:	cmp	x0, #0x0
   1b0a8:	b.eq	1b1b8 <grub_script_lexer_record+0x148>  // b.none
   1b0ac:	ldr	x0, [sp, #16]
   1b0b0:	bl	0 <grub_strlen>
   1b0b4:	str	w0, [sp, #52]
   1b0b8:	ldr	x0, [sp, #56]
   1b0bc:	ldr	w1, [x0, #32]
   1b0c0:	ldr	w0, [sp, #52]
   1b0c4:	add	w1, w1, w0
   1b0c8:	ldr	x0, [sp, #56]
   1b0cc:	ldr	w0, [x0, #36]
   1b0d0:	cmp	w1, w0
   1b0d4:	b.lt	1b17c <grub_script_lexer_record+0x10c>  // b.tstop
   1b0d8:	ldr	x0, [sp, #56]
   1b0dc:	ldr	x0, [x0, #24]
   1b0e0:	str	x0, [sp, #40]
   1b0e4:	ldr	x0, [sp, #56]
   1b0e8:	ldr	w0, [x0, #36]
   1b0ec:	ldr	w1, [sp, #52]
   1b0f0:	cmp	w1, w0
   1b0f4:	b.le	1b104 <grub_script_lexer_record+0x94>
   1b0f8:	ldr	x0, [sp, #56]
   1b0fc:	ldr	w1, [sp, #52]
   1b100:	str	w1, [x0, #36]
   1b104:	ldr	x0, [sp, #56]
   1b108:	ldr	w0, [x0, #36]
   1b10c:	lsl	w1, w0, #1
   1b110:	ldr	x0, [sp, #56]
   1b114:	str	w1, [x0, #36]
   1b118:	ldr	x0, [sp, #56]
   1b11c:	ldr	x2, [x0, #24]
   1b120:	ldr	x0, [sp, #56]
   1b124:	ldr	w0, [x0, #36]
   1b128:	sxtw	x0, w0
   1b12c:	mov	x1, x0
   1b130:	mov	x0, x2
   1b134:	bl	0 <grub_realloc>
   1b138:	mov	x1, x0
   1b13c:	ldr	x0, [sp, #56]
   1b140:	str	x1, [x0, #24]
   1b144:	ldr	x0, [sp, #56]
   1b148:	ldr	x0, [x0, #24]
   1b14c:	cmp	x0, #0x0
   1b150:	b.ne	1b17c <grub_script_lexer_record+0x10c>  // b.any
   1b154:	ldr	x0, [sp, #40]
   1b158:	bl	0 <grub_free>
   1b15c:	ldr	x0, [sp, #56]
   1b160:	str	wzr, [x0, #32]
   1b164:	ldr	x0, [sp, #56]
   1b168:	str	wzr, [x0, #36]
   1b16c:	mov	x1, #0x0                   	// #0
   1b170:	ldr	x0, [sp, #24]
   1b174:	bl	1b820 <grub_script_yyerror>
   1b178:	b	1b1bc <grub_script_lexer_record+0x14c>
   1b17c:	ldr	x0, [sp, #56]
   1b180:	ldr	x1, [x0, #24]
   1b184:	ldr	x0, [sp, #56]
   1b188:	ldr	w0, [x0, #32]
   1b18c:	sxtw	x0, w0
   1b190:	add	x0, x1, x0
   1b194:	ldr	x1, [sp, #16]
   1b198:	bl	0 <grub_strcpy>
   1b19c:	ldr	x0, [sp, #56]
   1b1a0:	ldr	w1, [x0, #32]
   1b1a4:	ldr	w0, [sp, #52]
   1b1a8:	add	w1, w1, w0
   1b1ac:	ldr	x0, [sp, #56]
   1b1b0:	str	w1, [x0, #32]
   1b1b4:	b	1b1bc <grub_script_lexer_record+0x14c>
   1b1b8:	nop
   1b1bc:	ldp	x29, x30, [sp], #64
   1b1c0:	ret

000000000001b1c4 <grub_script_lexer_yywrap>:
   1b1c4:	stp	x29, x30, [sp, #-80]!
   1b1c8:	mov	x29, sp
   1b1cc:	str	x0, [sp, #24]
   1b1d0:	str	x1, [sp, #16]
   1b1d4:	str	xzr, [sp, #72]
   1b1d8:	str	xzr, [sp, #64]
   1b1dc:	str	xzr, [sp, #32]
   1b1e0:	ldr	x0, [sp, #24]
   1b1e4:	ldr	x0, [x0, #40]
   1b1e8:	str	x0, [sp, #56]
   1b1ec:	ldr	x0, [sp, #56]
   1b1f0:	ldr	w0, [x0, #16]
   1b1f4:	cmp	w0, #0x0
   1b1f8:	b.ne	1b220 <grub_script_lexer_yywrap+0x5c>  // b.any
   1b1fc:	ldr	x0, [sp, #56]
   1b200:	ldr	x0, [x0, #80]
   1b204:	cmp	x0, #0x0
   1b208:	b.ne	1b220 <grub_script_lexer_yywrap+0x5c>  // b.any
   1b20c:	ldr	x0, [sp, #16]
   1b210:	cmp	x0, #0x0
   1b214:	b.ne	1b220 <grub_script_lexer_yywrap+0x5c>  // b.any
   1b218:	mov	w0, #0x1                   	// #1
   1b21c:	b	1b49c <grub_script_lexer_yywrap+0x2d8>
   1b220:	ldr	x0, [sp, #56]
   1b224:	ldr	x0, [x0]
   1b228:	cmp	x0, #0x0
   1b22c:	b.ne	1b258 <grub_script_lexer_yywrap+0x94>  // b.any
   1b230:	ldr	x0, [sp, #16]
   1b234:	cmp	x0, #0x0
   1b238:	b.ne	1b258 <grub_script_lexer_yywrap+0x94>  // b.any
   1b23c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b240:	add	x0, x0, #0x0
   1b244:	ldr	x1, [x0]
   1b248:	ldr	x0, [sp, #24]
   1b24c:	bl	1b820 <grub_script_yyerror>
   1b250:	mov	w0, #0x1                   	// #1
   1b254:	b	1b49c <grub_script_lexer_yywrap+0x2d8>
   1b258:	str	xzr, [sp, #32]
   1b25c:	ldr	x0, [sp, #16]
   1b260:	cmp	x0, #0x0
   1b264:	b.ne	1b28c <grub_script_lexer_yywrap+0xc8>  // b.any
   1b268:	ldr	x0, [sp, #56]
   1b26c:	ldr	x3, [x0]
   1b270:	ldr	x0, [sp, #56]
   1b274:	ldr	x1, [x0, #8]
   1b278:	add	x0, sp, #0x20
   1b27c:	mov	x2, x1
   1b280:	mov	w1, #0x1                   	// #1
   1b284:	blr	x3
   1b288:	b	1b298 <grub_script_lexer_yywrap+0xd4>
   1b28c:	ldr	x0, [sp, #16]
   1b290:	bl	0 <grub_strdup>
   1b294:	str	x0, [sp, #32]
   1b298:	ldr	x0, [sp, #32]
   1b29c:	cmp	x0, #0x0
   1b2a0:	b.ne	1b2c0 <grub_script_lexer_yywrap+0xfc>  // b.any
   1b2a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b2a8:	add	x0, x0, #0x0
   1b2ac:	ldr	x1, [x0]
   1b2b0:	ldr	x0, [sp, #24]
   1b2b4:	bl	1b820 <grub_script_yyerror>
   1b2b8:	mov	w0, #0x1                   	// #1
   1b2bc:	b	1b49c <grub_script_lexer_yywrap+0x2d8>
   1b2c0:	ldr	x0, [sp, #32]
   1b2c4:	bl	0 <grub_strlen>
   1b2c8:	str	x0, [sp, #72]
   1b2cc:	ldr	x0, [sp, #32]
   1b2d0:	ldrb	w0, [x0]
   1b2d4:	cmp	w0, #0x0
   1b2d8:	b.ne	1b304 <grub_script_lexer_yywrap+0x140>  // b.any
   1b2dc:	ldr	x0, [sp, #32]
   1b2e0:	bl	0 <grub_free>
   1b2e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b2e8:	add	x0, x0, #0x0
   1b2ec:	ldr	x0, [x0]
   1b2f0:	bl	0 <grub_strdup>
   1b2f4:	str	x0, [sp, #32]
   1b2f8:	mov	x0, #0x1                   	// #1
   1b2fc:	str	x0, [sp, #72]
   1b300:	b	1b388 <grub_script_lexer_yywrap+0x1c4>
   1b304:	ldr	x0, [sp, #72]
   1b308:	cmp	x0, #0x0
   1b30c:	b.eq	1b388 <grub_script_lexer_yywrap+0x1c4>  // b.none
   1b310:	ldr	x1, [sp, #32]
   1b314:	ldr	x0, [sp, #72]
   1b318:	sub	x0, x0, #0x1
   1b31c:	add	x0, x1, x0
   1b320:	ldrb	w0, [x0]
   1b324:	cmp	w0, #0xa
   1b328:	b.eq	1b388 <grub_script_lexer_yywrap+0x1c4>  // b.none
   1b32c:	ldr	x2, [sp, #32]
   1b330:	ldr	x0, [sp, #72]
   1b334:	add	x0, x0, #0x2
   1b338:	mov	x1, x0
   1b33c:	mov	x0, x2
   1b340:	bl	0 <grub_realloc>
   1b344:	str	x0, [sp, #64]
   1b348:	ldr	x0, [sp, #64]
   1b34c:	cmp	x0, #0x0
   1b350:	b.eq	1b380 <grub_script_lexer_yywrap+0x1bc>  // b.none
   1b354:	ldr	x0, [sp, #72]
   1b358:	add	x1, x0, #0x1
   1b35c:	str	x1, [sp, #72]
   1b360:	ldr	x1, [sp, #64]
   1b364:	add	x0, x1, x0
   1b368:	mov	w1, #0xa                   	// #10
   1b36c:	strb	w1, [x0]
   1b370:	ldr	x1, [sp, #64]
   1b374:	ldr	x0, [sp, #72]
   1b378:	add	x0, x1, x0
   1b37c:	strb	wzr, [x0]
   1b380:	ldr	x0, [sp, #64]
   1b384:	str	x0, [sp, #32]
   1b388:	ldr	x0, [sp, #32]
   1b38c:	cmp	x0, #0x0
   1b390:	b.ne	1b3b0 <grub_script_lexer_yywrap+0x1ec>  // b.any
   1b394:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b398:	add	x0, x0, #0x0
   1b39c:	ldr	x1, [x0]
   1b3a0:	ldr	x0, [sp, #24]
   1b3a4:	bl	1b820 <grub_script_yyerror>
   1b3a8:	mov	w0, #0x1                   	// #1
   1b3ac:	b	1b49c <grub_script_lexer_yywrap+0x2d8>
   1b3b0:	ldr	x0, [sp, #56]
   1b3b4:	ldr	x0, [x0, #80]
   1b3b8:	cmp	x0, #0x0
   1b3bc:	b.eq	1b454 <grub_script_lexer_yywrap+0x290>  // b.none
   1b3c0:	ldr	x0, [sp, #56]
   1b3c4:	ldr	x0, [x0, #80]
   1b3c8:	bl	0 <grub_strlen>
   1b3cc:	str	w0, [sp, #52]
   1b3d0:	ldrsw	x1, [sp, #52]
   1b3d4:	ldr	x0, [sp, #72]
   1b3d8:	add	x0, x1, x0
   1b3dc:	add	x0, x0, #0x1
   1b3e0:	bl	0 <grub_malloc>
   1b3e4:	str	x0, [sp, #64]
   1b3e8:	ldr	x0, [sp, #64]
   1b3ec:	cmp	x0, #0x0
   1b3f0:	b.ne	1b404 <grub_script_lexer_yywrap+0x240>  // b.any
   1b3f4:	ldr	x0, [sp, #32]
   1b3f8:	bl	0 <grub_free>
   1b3fc:	mov	w0, #0x1                   	// #1
   1b400:	b	1b49c <grub_script_lexer_yywrap+0x2d8>
   1b404:	ldr	x0, [sp, #56]
   1b408:	ldr	x0, [x0, #80]
   1b40c:	mov	x1, x0
   1b410:	ldr	x0, [sp, #64]
   1b414:	bl	0 <grub_strcpy>
   1b418:	ldr	x0, [sp, #56]
   1b41c:	str	xzr, [x0, #80]
   1b420:	ldrsw	x0, [sp, #52]
   1b424:	ldr	x1, [sp, #64]
   1b428:	add	x0, x1, x0
   1b42c:	ldr	x1, [sp, #32]
   1b430:	bl	0 <grub_strcpy>
   1b434:	ldr	x0, [sp, #32]
   1b438:	bl	0 <grub_free>
   1b43c:	ldr	x0, [sp, #64]
   1b440:	str	x0, [sp, #32]
   1b444:	ldrsw	x0, [sp, #52]
   1b448:	ldr	x1, [sp, #72]
   1b44c:	add	x0, x1, x0
   1b450:	str	x0, [sp, #72]
   1b454:	ldr	x2, [sp, #32]
   1b458:	ldr	x0, [sp, #56]
   1b45c:	ldr	x0, [x0, #88]
   1b460:	mov	x1, x0
   1b464:	mov	x0, x2
   1b468:	bl	209f0 <yy_scan_string>
   1b46c:	str	x0, [sp, #40]
   1b470:	ldr	x0, [sp, #32]
   1b474:	bl	0 <grub_free>
   1b478:	ldr	x0, [sp, #40]
   1b47c:	cmp	x0, #0x0
   1b480:	b.ne	1b498 <grub_script_lexer_yywrap+0x2d4>  // b.any
   1b484:	mov	x1, #0x0                   	// #0
   1b488:	ldr	x0, [sp, #24]
   1b48c:	bl	1b820 <grub_script_yyerror>
   1b490:	mov	w0, #0x1                   	// #1
   1b494:	b	1b49c <grub_script_lexer_yywrap+0x2d8>
   1b498:	mov	w0, #0x0                   	// #0
   1b49c:	ldp	x29, x30, [sp], #80
   1b4a0:	ret
   1b4a4:	nop
	...

000000000001b4c0 <grub_script_lexer_init>:
   1b4c0:	stp	x29, x30, [sp, #-64]!
   1b4c4:	mov	x29, sp
   1b4c8:	str	x0, [sp, #40]
   1b4cc:	str	x1, [sp, #32]
   1b4d0:	str	x2, [sp, #24]
   1b4d4:	str	x3, [sp, #16]
   1b4d8:	mov	x0, #0x68                  	// #104
   1b4dc:	bl	0 <grub_zalloc>
   1b4e0:	str	x0, [sp, #56]
   1b4e4:	ldr	x0, [sp, #56]
   1b4e8:	cmp	x0, #0x0
   1b4ec:	b.ne	1b4f8 <grub_script_lexer_init+0x38>  // b.any
   1b4f0:	mov	x0, #0x0                   	// #0
   1b4f4:	b	1b608 <grub_script_lexer_init+0x148>
   1b4f8:	ldr	x0, [sp, #56]
   1b4fc:	mov	w1, #0x20                  	// #32
   1b500:	str	w1, [x0, #68]
   1b504:	ldr	x0, [sp, #56]
   1b508:	ldr	w0, [x0, #68]
   1b50c:	mov	w0, w0
   1b510:	bl	0 <grub_malloc>
   1b514:	mov	x1, x0
   1b518:	ldr	x0, [sp, #56]
   1b51c:	str	x1, [x0, #56]
   1b520:	ldr	x0, [sp, #56]
   1b524:	ldr	x0, [x0, #56]
   1b528:	cmp	x0, #0x0
   1b52c:	b.ne	1b540 <grub_script_lexer_init+0x80>  // b.any
   1b530:	ldr	x0, [sp, #56]
   1b534:	bl	0 <grub_free>
   1b538:	mov	x0, #0x0                   	// #0
   1b53c:	b	1b608 <grub_script_lexer_init+0x148>
   1b540:	ldr	x0, [sp, #56]
   1b544:	ldr	x1, [sp, #24]
   1b548:	str	x1, [x0]
   1b54c:	ldr	x0, [sp, #56]
   1b550:	ldr	x1, [sp, #16]
   1b554:	str	x1, [x0, #8]
   1b558:	ldr	x0, [sp, #56]
   1b55c:	add	x0, x0, #0x58
   1b560:	bl	210ec <yylex_init>
   1b564:	cmp	w0, #0x0
   1b568:	b.eq	1b588 <grub_script_lexer_init+0xc8>  // b.none
   1b56c:	ldr	x0, [sp, #56]
   1b570:	ldr	x0, [x0, #56]
   1b574:	bl	0 <grub_free>
   1b578:	ldr	x0, [sp, #56]
   1b57c:	bl	0 <grub_free>
   1b580:	mov	x0, #0x0                   	// #0
   1b584:	b	1b608 <grub_script_lexer_init+0x148>
   1b588:	ldr	x0, [sp, #56]
   1b58c:	ldr	x0, [x0, #88]
   1b590:	mov	x1, x0
   1b594:	ldr	x0, [sp, #40]
   1b598:	bl	20f74 <yyset_extra>
   1b59c:	ldr	x0, [sp, #40]
   1b5a0:	ldr	x1, [sp, #56]
   1b5a4:	str	x1, [x0, #40]
   1b5a8:	ldr	x0, [sp, #32]
   1b5ac:	cmp	x0, #0x0
   1b5b0:	b.ne	1b5c0 <grub_script_lexer_init+0x100>  // b.any
   1b5b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b5b8:	add	x0, x0, #0x0
   1b5bc:	ldr	x0, [x0]
   1b5c0:	mov	x1, x0
   1b5c4:	ldr	x0, [sp, #40]
   1b5c8:	bl	1b1c4 <grub_script_lexer_yywrap>
   1b5cc:	cmp	w0, #0x0
   1b5d0:	b.eq	1b604 <grub_script_lexer_init+0x144>  // b.none
   1b5d4:	ldr	x0, [sp, #40]
   1b5d8:	str	xzr, [x0, #40]
   1b5dc:	ldr	x0, [sp, #56]
   1b5e0:	ldr	x0, [x0, #88]
   1b5e4:	bl	212fc <yylex_destroy>
   1b5e8:	ldr	x0, [sp, #56]
   1b5ec:	ldr	x0, [x0, #56]
   1b5f0:	bl	0 <grub_free>
   1b5f4:	ldr	x0, [sp, #56]
   1b5f8:	bl	0 <grub_free>
   1b5fc:	mov	x0, #0x0                   	// #0
   1b600:	b	1b608 <grub_script_lexer_init+0x148>
   1b604:	ldr	x0, [sp, #56]
   1b608:	ldp	x29, x30, [sp], #64
   1b60c:	ret
	...

000000000001b618 <grub_script_lexer_fini>:
   1b618:	stp	x29, x30, [sp, #-32]!
   1b61c:	mov	x29, sp
   1b620:	str	x0, [sp, #24]
   1b624:	ldr	x0, [sp, #24]
   1b628:	cmp	x0, #0x0
   1b62c:	b.eq	1b660 <grub_script_lexer_fini+0x48>  // b.none
   1b630:	ldr	x0, [sp, #24]
   1b634:	ldr	x0, [x0, #88]
   1b638:	bl	212fc <yylex_destroy>
   1b63c:	ldr	x0, [sp, #24]
   1b640:	ldr	x0, [x0, #24]
   1b644:	bl	0 <grub_free>
   1b648:	ldr	x0, [sp, #24]
   1b64c:	ldr	x0, [x0, #56]
   1b650:	bl	0 <grub_free>
   1b654:	ldr	x0, [sp, #24]
   1b658:	bl	0 <grub_free>
   1b65c:	b	1b664 <grub_script_lexer_fini+0x4c>
   1b660:	nop
   1b664:	ldp	x29, x30, [sp], #32
   1b668:	ret

000000000001b66c <grub_script_yylex>:
   1b66c:	stp	x29, x30, [sp, #-64]!
   1b670:	mov	x29, sp
   1b674:	str	x0, [sp, #24]
   1b678:	str	x1, [sp, #16]
   1b67c:	ldr	x0, [sp, #16]
   1b680:	ldr	x0, [x0, #40]
   1b684:	str	x0, [sp, #40]
   1b688:	ldr	x0, [sp, #24]
   1b68c:	str	xzr, [x0]
   1b690:	ldr	x0, [sp, #16]
   1b694:	ldr	w0, [x0, #8]
   1b698:	cmp	w0, #0x0
   1b69c:	b.eq	1b6a8 <grub_script_yylex+0x3c>  // b.none
   1b6a0:	mov	w0, #0x102                 	// #258
   1b6a4:	b	1b800 <grub_script_yylex+0x194>
   1b6a8:	ldr	x0, [sp, #40]
   1b6ac:	ldr	w0, [x0, #40]
   1b6b0:	cmp	w0, #0x0
   1b6b4:	b.eq	1b6c0 <grub_script_yylex+0x54>  // b.none
   1b6b8:	mov	w0, #0x0                   	// #0
   1b6bc:	b	1b800 <grub_script_yylex+0x194>
   1b6c0:	ldr	x0, [sp, #40]
   1b6c4:	str	wzr, [x0, #44]
   1b6c8:	ldr	x0, [sp, #40]
   1b6cc:	str	wzr, [x0, #48]
   1b6d0:	ldr	x0, [sp, #40]
   1b6d4:	mov	w1, #0x1                   	// #1
   1b6d8:	str	w1, [x0, #64]
   1b6dc:	ldr	x0, [sp, #40]
   1b6e0:	ldr	x0, [x0, #56]
   1b6e4:	strb	wzr, [x0]
   1b6e8:	ldr	x0, [sp, #40]
   1b6ec:	ldr	x0, [x0, #88]
   1b6f0:	mov	x1, x0
   1b6f4:	ldr	x0, [sp, #24]
   1b6f8:	bl	1df1c <yylex>
   1b6fc:	str	w0, [sp, #36]
   1b700:	ldr	w0, [sp, #36]
   1b704:	cmp	w0, #0x102
   1b708:	b.eq	1b7d0 <grub_script_yylex+0x164>  // b.none
   1b70c:	ldr	x0, [sp, #40]
   1b710:	ldr	w0, [x0, #44]
   1b714:	cmp	w0, #0x0
   1b718:	b.eq	1b738 <grub_script_yylex+0xcc>  // b.none
   1b71c:	ldr	x0, [sp, #40]
   1b720:	ldr	x0, [x0, #56]
   1b724:	str	x0, [sp, #56]
   1b728:	ldr	x0, [sp, #40]
   1b72c:	ldr	w0, [x0, #72]
   1b730:	str	w0, [sp, #52]
   1b734:	b	1b750 <grub_script_yylex+0xe4>
   1b738:	ldr	x0, [sp, #40]
   1b73c:	ldr	x0, [x0, #88]
   1b740:	bl	20f54 <yyget_text>
   1b744:	str	x0, [sp, #56]
   1b748:	mov	w0, #0x1                   	// #1
   1b74c:	str	w0, [sp, #52]
   1b750:	ldr	x5, [sp, #56]
   1b754:	ldr	w4, [sp, #36]
   1b758:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b75c:	add	x0, x0, #0x0
   1b760:	ldr	x3, [x0]
   1b764:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b768:	add	x0, x0, #0x0
   1b76c:	ldr	x2, [x0]
   1b770:	mov	w1, #0x141                 	// #321
   1b774:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1b778:	add	x0, x0, #0x0
   1b77c:	ldr	x0, [x0]
   1b780:	bl	0 <grub_real_dprintf>
   1b784:	ldr	x0, [sp, #24]
   1b788:	ldr	x0, [x0]
   1b78c:	ldr	x3, [sp, #56]
   1b790:	ldr	w2, [sp, #52]
   1b794:	mov	x1, x0
   1b798:	ldr	x0, [sp, #16]
   1b79c:	bl	171ec <grub_script_arg_add>
   1b7a0:	mov	x1, x0
   1b7a4:	ldr	x0, [sp, #24]
   1b7a8:	str	x1, [x0]
   1b7ac:	ldr	x0, [sp, #40]
   1b7b0:	ldr	w0, [x0, #44]
   1b7b4:	cmp	w0, #0x0
   1b7b8:	b.eq	1b7d4 <grub_script_yylex+0x168>  // b.none
   1b7bc:	ldr	x0, [sp, #40]
   1b7c0:	ldr	w0, [x0, #48]
   1b7c4:	cmp	w0, #0x0
   1b7c8:	b.eq	1b6d0 <grub_script_yylex+0x64>  // b.none
   1b7cc:	b	1b7d4 <grub_script_yylex+0x168>
   1b7d0:	nop
   1b7d4:	ldr	x0, [sp, #24]
   1b7d8:	ldr	x0, [x0]
   1b7dc:	cmp	x0, #0x0
   1b7e0:	b.eq	1b7f4 <grub_script_yylex+0x188>  // b.none
   1b7e4:	ldr	x0, [sp, #16]
   1b7e8:	ldr	w0, [x0, #8]
   1b7ec:	cmp	w0, #0x0
   1b7f0:	b.eq	1b7fc <grub_script_yylex+0x190>  // b.none
   1b7f4:	mov	w0, #0x102                 	// #258
   1b7f8:	b	1b800 <grub_script_yylex+0x194>
   1b7fc:	ldr	w0, [sp, #36]
   1b800:	ldp	x29, x30, [sp], #64
   1b804:	ret
	...

000000000001b820 <grub_script_yyerror>:
   1b820:	stp	x29, x30, [sp, #-32]!
   1b824:	mov	x29, sp
   1b828:	str	x0, [sp, #24]
   1b82c:	str	x1, [sp, #16]
   1b830:	ldr	x0, [sp, #16]
   1b834:	cmp	x0, #0x0
   1b838:	b.eq	1b848 <grub_script_yyerror+0x28>  // b.none
   1b83c:	ldr	x1, [sp, #16]
   1b840:	mov	w0, #0x11                  	// #17
   1b844:	bl	0 <grub_error>
   1b848:	bl	0 <grub_print_error>
   1b84c:	ldr	x0, [sp, #24]
   1b850:	ldr	w0, [x0, #8]
   1b854:	add	w1, w0, #0x1
   1b858:	ldr	x0, [sp, #24]
   1b85c:	str	w1, [x0, #8]
   1b860:	nop
   1b864:	ldp	x29, x30, [sp], #32
   1b868:	ret
   1b86c:	stp	x29, x30, [sp, #-48]!
   1b870:	mov	x29, sp
   1b874:	str	x0, [sp, #40]
   1b878:	str	x1, [sp, #32]
   1b87c:	str	x2, [sp, #24]
   1b880:	ldr	x2, [sp, #24]
   1b884:	ldr	x1, [sp, #32]
   1b888:	ldr	x0, [sp, #40]
   1b88c:	bl	0 <grub_memmove>
   1b890:	ldp	x29, x30, [sp], #48
   1b894:	ret
   1b898:	sub	sp, sp, #0x10
   1b89c:	str	w0, [sp, #12]
   1b8a0:	ldr	w0, [sp, #12]
   1b8a4:	sub	w0, w0, #0x1
   1b8a8:	str	w0, [sp, #12]
   1b8ac:	ldr	w0, [sp, #12]
   1b8b0:	lsr	w0, w0, #1
   1b8b4:	ldr	w1, [sp, #12]
   1b8b8:	orr	w0, w1, w0
   1b8bc:	str	w0, [sp, #12]
   1b8c0:	ldr	w0, [sp, #12]
   1b8c4:	lsr	w0, w0, #2
   1b8c8:	ldr	w1, [sp, #12]
   1b8cc:	orr	w0, w1, w0
   1b8d0:	str	w0, [sp, #12]
   1b8d4:	ldr	w0, [sp, #12]
   1b8d8:	lsr	w0, w0, #4
   1b8dc:	ldr	w1, [sp, #12]
   1b8e0:	orr	w0, w1, w0
   1b8e4:	str	w0, [sp, #12]
   1b8e8:	ldr	w0, [sp, #12]
   1b8ec:	lsr	w0, w0, #8
   1b8f0:	ldr	w1, [sp, #12]
   1b8f4:	orr	w0, w1, w0
   1b8f8:	str	w0, [sp, #12]
   1b8fc:	ldr	w0, [sp, #12]
   1b900:	lsr	w0, w0, #16
   1b904:	ldr	w1, [sp, #12]
   1b908:	orr	w0, w1, w0
   1b90c:	str	w0, [sp, #12]
   1b910:	ldr	w0, [sp, #12]
   1b914:	add	w0, w0, #0x1
   1b918:	str	w0, [sp, #12]
   1b91c:	ldr	w0, [sp, #12]
   1b920:	cmp	w0, #0x0
   1b924:	cset	w0, eq  // eq = none
   1b928:	and	w0, w0, #0xff
   1b92c:	mov	w1, w0
   1b930:	ldr	w0, [sp, #12]
   1b934:	add	w0, w0, w1
   1b938:	str	w0, [sp, #12]
   1b93c:	ldr	w0, [sp, #12]
   1b940:	add	sp, sp, #0x10
   1b944:	ret

000000000001b948 <grub_script_argv_free>:
   1b948:	stp	x29, x30, [sp, #-48]!
   1b94c:	mov	x29, sp
   1b950:	str	x0, [sp, #24]
   1b954:	ldr	x0, [sp, #24]
   1b958:	ldr	x0, [x0, #8]
   1b95c:	cmp	x0, #0x0
   1b960:	b.eq	1b9b4 <grub_script_argv_free+0x6c>  // b.none
   1b964:	str	wzr, [sp, #44]
   1b968:	b	1b994 <grub_script_argv_free+0x4c>
   1b96c:	ldr	x0, [sp, #24]
   1b970:	ldr	x1, [x0, #8]
   1b974:	ldr	w0, [sp, #44]
   1b978:	lsl	x0, x0, #3
   1b97c:	add	x0, x1, x0
   1b980:	ldr	x0, [x0]
   1b984:	bl	0 <grub_free>
   1b988:	ldr	w0, [sp, #44]
   1b98c:	add	w0, w0, #0x1
   1b990:	str	w0, [sp, #44]
   1b994:	ldr	x0, [sp, #24]
   1b998:	ldr	w0, [x0]
   1b99c:	ldr	w1, [sp, #44]
   1b9a0:	cmp	w1, w0
   1b9a4:	b.cc	1b96c <grub_script_argv_free+0x24>  // b.lo, b.ul, b.last
   1b9a8:	ldr	x0, [sp, #24]
   1b9ac:	ldr	x0, [x0, #8]
   1b9b0:	bl	0 <grub_free>
   1b9b4:	ldr	x0, [sp, #24]
   1b9b8:	str	wzr, [x0]
   1b9bc:	ldr	x0, [sp, #24]
   1b9c0:	str	xzr, [x0, #8]
   1b9c4:	ldr	x0, [sp, #24]
   1b9c8:	str	xzr, [x0, #16]
   1b9cc:	nop
   1b9d0:	ldp	x29, x30, [sp], #48
   1b9d4:	ret

000000000001b9d8 <grub_script_argv_make>:
   1b9d8:	stp	x29, x30, [sp, #-96]!
   1b9dc:	mov	x29, sp
   1b9e0:	str	x19, [sp, #16]
   1b9e4:	str	x0, [sp, #56]
   1b9e8:	str	w1, [sp, #52]
   1b9ec:	str	x2, [sp, #40]
   1b9f0:	str	wzr, [sp, #64]
   1b9f4:	str	xzr, [sp, #72]
   1b9f8:	str	xzr, [sp, #80]
   1b9fc:	str	wzr, [sp, #92]
   1ba00:	b	1ba78 <grub_script_argv_make+0xa0>
   1ba04:	add	x0, sp, #0x40
   1ba08:	bl	1bab4 <grub_script_argv_next>
   1ba0c:	cmp	w0, #0x0
   1ba10:	b.ne	1ba5c <grub_script_argv_make+0x84>  // b.any
   1ba14:	ldrsw	x0, [sp, #92]
   1ba18:	lsl	x0, x0, #3
   1ba1c:	ldr	x1, [sp, #40]
   1ba20:	add	x0, x1, x0
   1ba24:	ldr	x19, [x0]
   1ba28:	ldrsw	x0, [sp, #92]
   1ba2c:	lsl	x0, x0, #3
   1ba30:	ldr	x1, [sp, #40]
   1ba34:	add	x0, x1, x0
   1ba38:	ldr	x0, [x0]
   1ba3c:	bl	0 <grub_strlen>
   1ba40:	mov	x1, x0
   1ba44:	add	x0, sp, #0x40
   1ba48:	mov	x2, x1
   1ba4c:	mov	x1, x19
   1ba50:	bl	1bbc4 <grub_script_argv_append>
   1ba54:	cmp	w0, #0x0
   1ba58:	b.eq	1ba6c <grub_script_argv_make+0x94>  // b.none
   1ba5c:	add	x0, sp, #0x40
   1ba60:	bl	1b948 <grub_script_argv_free>
   1ba64:	mov	w0, #0x1                   	// #1
   1ba68:	b	1baa8 <grub_script_argv_make+0xd0>
   1ba6c:	ldr	w0, [sp, #92]
   1ba70:	add	w0, w0, #0x1
   1ba74:	str	w0, [sp, #92]
   1ba78:	ldr	w1, [sp, #92]
   1ba7c:	ldr	w0, [sp, #52]
   1ba80:	cmp	w1, w0
   1ba84:	b.lt	1ba04 <grub_script_argv_make+0x2c>  // b.tstop
   1ba88:	ldr	x0, [sp, #56]
   1ba8c:	mov	x3, x0
   1ba90:	add	x2, sp, #0x40
   1ba94:	ldp	x0, x1, [x2]
   1ba98:	stp	x0, x1, [x3]
   1ba9c:	ldr	x0, [x2, #16]
   1baa0:	str	x0, [x3, #16]
   1baa4:	mov	w0, #0x0                   	// #0
   1baa8:	ldr	x19, [sp, #16]
   1baac:	ldp	x29, x30, [sp], #96
   1bab0:	ret

000000000001bab4 <grub_script_argv_next>:
   1bab4:	stp	x29, x30, [sp, #-48]!
   1bab8:	mov	x29, sp
   1babc:	str	x0, [sp, #24]
   1bac0:	ldr	x0, [sp, #24]
   1bac4:	ldr	x0, [x0, #8]
   1bac8:	str	x0, [sp, #40]
   1bacc:	ldr	x0, [sp, #24]
   1bad0:	ldr	x0, [x0, #8]
   1bad4:	cmp	x0, #0x0
   1bad8:	b.eq	1bb20 <grub_script_argv_next+0x6c>  // b.none
   1badc:	ldr	x0, [sp, #24]
   1bae0:	ldr	w0, [x0]
   1bae4:	cmp	w0, #0x0
   1bae8:	b.eq	1bb20 <grub_script_argv_next+0x6c>  // b.none
   1baec:	ldr	x0, [sp, #24]
   1baf0:	ldr	x1, [x0, #8]
   1baf4:	ldr	x0, [sp, #24]
   1baf8:	ldr	w0, [x0]
   1bafc:	sub	w0, w0, #0x1
   1bb00:	mov	w0, w0
   1bb04:	lsl	x0, x0, #3
   1bb08:	add	x0, x1, x0
   1bb0c:	ldr	x0, [x0]
   1bb10:	cmp	x0, #0x0
   1bb14:	b.ne	1bb20 <grub_script_argv_next+0x6c>  // b.any
   1bb18:	mov	w0, #0x0                   	// #0
   1bb1c:	b	1bbbc <grub_script_argv_next+0x108>
   1bb20:	ldr	x0, [sp, #24]
   1bb24:	ldr	w0, [x0]
   1bb28:	add	w0, w0, #0x2
   1bb2c:	lsl	w0, w0, #3
   1bb30:	bl	1b898 <grub_script_yyerror+0x78>
   1bb34:	mov	w0, w0
   1bb38:	mov	x1, x0
   1bb3c:	ldr	x0, [sp, #40]
   1bb40:	bl	0 <grub_realloc>
   1bb44:	str	x0, [sp, #40]
   1bb48:	ldr	x0, [sp, #40]
   1bb4c:	cmp	x0, #0x0
   1bb50:	b.ne	1bb5c <grub_script_argv_next+0xa8>  // b.any
   1bb54:	mov	w0, #0x1                   	// #1
   1bb58:	b	1bbbc <grub_script_argv_next+0x108>
   1bb5c:	ldr	x0, [sp, #24]
   1bb60:	ldr	w0, [x0]
   1bb64:	add	w1, w0, #0x1
   1bb68:	ldr	x0, [sp, #24]
   1bb6c:	str	w1, [x0]
   1bb70:	ldr	x0, [sp, #24]
   1bb74:	ldr	x1, [sp, #40]
   1bb78:	str	x1, [x0, #8]
   1bb7c:	ldr	x0, [sp, #24]
   1bb80:	ldr	w0, [x0]
   1bb84:	cmp	w0, #0x1
   1bb88:	b.ne	1bb98 <grub_script_argv_next+0xe4>  // b.any
   1bb8c:	ldr	x0, [sp, #24]
   1bb90:	ldr	x0, [x0, #8]
   1bb94:	str	xzr, [x0]
   1bb98:	ldr	x0, [sp, #24]
   1bb9c:	ldr	x1, [x0, #8]
   1bba0:	ldr	x0, [sp, #24]
   1bba4:	ldr	w0, [x0]
   1bba8:	mov	w0, w0
   1bbac:	lsl	x0, x0, #3
   1bbb0:	add	x0, x1, x0
   1bbb4:	str	xzr, [x0]
   1bbb8:	mov	w0, #0x0                   	// #0
   1bbbc:	ldp	x29, x30, [sp], #48
   1bbc0:	ret

000000000001bbc4 <grub_script_argv_append>:
   1bbc4:	stp	x29, x30, [sp, #-64]!
   1bbc8:	mov	x29, sp
   1bbcc:	str	x0, [sp, #40]
   1bbd0:	str	x1, [sp, #32]
   1bbd4:	str	x2, [sp, #24]
   1bbd8:	ldr	x0, [sp, #40]
   1bbdc:	ldr	x1, [x0, #8]
   1bbe0:	ldr	x0, [sp, #40]
   1bbe4:	ldr	w0, [x0]
   1bbe8:	sub	w0, w0, #0x1
   1bbec:	mov	w0, w0
   1bbf0:	lsl	x0, x0, #3
   1bbf4:	add	x0, x1, x0
   1bbf8:	ldr	x0, [x0]
   1bbfc:	str	x0, [sp, #56]
   1bc00:	ldr	x0, [sp, #32]
   1bc04:	cmp	x0, #0x0
   1bc08:	b.ne	1bc14 <grub_script_argv_append+0x50>  // b.any
   1bc0c:	mov	w0, #0x0                   	// #0
   1bc10:	b	1bcd0 <grub_script_argv_append+0x10c>
   1bc14:	ldr	x0, [sp, #56]
   1bc18:	cmp	x0, #0x0
   1bc1c:	b.eq	1bc2c <grub_script_argv_append+0x68>  // b.none
   1bc20:	ldr	x0, [sp, #56]
   1bc24:	bl	0 <grub_strlen>
   1bc28:	b	1bc30 <grub_script_argv_append+0x6c>
   1bc2c:	mov	x0, #0x0                   	// #0
   1bc30:	str	x0, [sp, #48]
   1bc34:	ldr	x0, [sp, #48]
   1bc38:	mov	w1, w0
   1bc3c:	ldr	x0, [sp, #24]
   1bc40:	add	w0, w1, w0
   1bc44:	add	w0, w0, #0x1
   1bc48:	bl	1b898 <grub_script_yyerror+0x78>
   1bc4c:	mov	w0, w0
   1bc50:	mov	x1, x0
   1bc54:	ldr	x0, [sp, #56]
   1bc58:	bl	0 <grub_realloc>
   1bc5c:	str	x0, [sp, #56]
   1bc60:	ldr	x0, [sp, #56]
   1bc64:	cmp	x0, #0x0
   1bc68:	b.ne	1bc74 <grub_script_argv_append+0xb0>  // b.any
   1bc6c:	mov	w0, #0x1                   	// #1
   1bc70:	b	1bcd0 <grub_script_argv_append+0x10c>
   1bc74:	ldr	x1, [sp, #56]
   1bc78:	ldr	x0, [sp, #48]
   1bc7c:	add	x0, x1, x0
   1bc80:	ldr	x2, [sp, #24]
   1bc84:	ldr	x1, [sp, #32]
   1bc88:	bl	1b86c <grub_script_yyerror+0x4c>
   1bc8c:	ldr	x1, [sp, #48]
   1bc90:	ldr	x0, [sp, #24]
   1bc94:	add	x0, x1, x0
   1bc98:	ldr	x1, [sp, #56]
   1bc9c:	add	x0, x1, x0
   1bca0:	strb	wzr, [x0]
   1bca4:	ldr	x0, [sp, #40]
   1bca8:	ldr	x1, [x0, #8]
   1bcac:	ldr	x0, [sp, #40]
   1bcb0:	ldr	w0, [x0]
   1bcb4:	sub	w0, w0, #0x1
   1bcb8:	mov	w0, w0
   1bcbc:	lsl	x0, x0, #3
   1bcc0:	add	x0, x1, x0
   1bcc4:	ldr	x1, [sp, #56]
   1bcc8:	str	x1, [x0]
   1bccc:	mov	w0, #0x0                   	// #0
   1bcd0:	ldp	x29, x30, [sp], #64
   1bcd4:	ret

000000000001bcd8 <grub_script_argv_split_append>:
   1bcd8:	stp	x29, x30, [sp, #-48]!
   1bcdc:	mov	x29, sp
   1bce0:	str	x0, [sp, #24]
   1bce4:	str	x1, [sp, #16]
   1bce8:	str	wzr, [sp, #44]
   1bcec:	ldr	x0, [sp, #16]
   1bcf0:	cmp	x0, #0x0
   1bcf4:	b.ne	1bd0c <grub_script_argv_split_append+0x34>  // b.any
   1bcf8:	mov	w0, #0x0                   	// #0
   1bcfc:	b	1be18 <grub_script_argv_split_append+0x140>
   1bd00:	ldr	x0, [sp, #16]
   1bd04:	add	x0, x0, #0x1
   1bd08:	str	x0, [sp, #16]
   1bd0c:	ldr	x0, [sp, #16]
   1bd10:	ldrb	w0, [x0]
   1bd14:	cmp	w0, #0x0
   1bd18:	b.eq	1bdf8 <grub_script_argv_split_append+0x120>  // b.none
   1bd1c:	ldr	x0, [sp, #16]
   1bd20:	ldrb	w0, [x0]
   1bd24:	bl	0 <grub_isspace>
   1bd28:	cmp	w0, #0x0
   1bd2c:	b.ne	1bd00 <grub_script_argv_split_append+0x28>  // b.any
   1bd30:	b	1bdf8 <grub_script_argv_split_append+0x120>
   1bd34:	ldr	x0, [sp, #16]
   1bd38:	str	x0, [sp, #32]
   1bd3c:	b	1bd4c <grub_script_argv_split_append+0x74>
   1bd40:	ldr	x0, [sp, #16]
   1bd44:	add	x0, x0, #0x1
   1bd48:	str	x0, [sp, #16]
   1bd4c:	ldr	x0, [sp, #16]
   1bd50:	ldrb	w0, [x0]
   1bd54:	cmp	w0, #0x0
   1bd58:	b.eq	1bd70 <grub_script_argv_split_append+0x98>  // b.none
   1bd5c:	ldr	x0, [sp, #16]
   1bd60:	ldrb	w0, [x0]
   1bd64:	bl	0 <grub_isspace>
   1bd68:	cmp	w0, #0x0
   1bd6c:	b.eq	1bd40 <grub_script_argv_split_append+0x68>  // b.none
   1bd70:	ldr	x1, [sp, #16]
   1bd74:	ldr	x0, [sp, #32]
   1bd78:	sub	x0, x1, x0
   1bd7c:	mov	x2, x0
   1bd80:	ldr	x1, [sp, #32]
   1bd84:	ldr	x0, [sp, #24]
   1bd88:	bl	1bbc4 <grub_script_argv_append>
   1bd8c:	mov	w1, w0
   1bd90:	ldr	w0, [sp, #44]
   1bd94:	add	w0, w0, w1
   1bd98:	str	w0, [sp, #44]
   1bd9c:	b	1bdac <grub_script_argv_split_append+0xd4>
   1bda0:	ldr	x0, [sp, #16]
   1bda4:	add	x0, x0, #0x1
   1bda8:	str	x0, [sp, #16]
   1bdac:	ldr	x0, [sp, #16]
   1bdb0:	ldrb	w0, [x0]
   1bdb4:	cmp	w0, #0x0
   1bdb8:	b.eq	1bdd0 <grub_script_argv_split_append+0xf8>  // b.none
   1bdbc:	ldr	x0, [sp, #16]
   1bdc0:	ldrb	w0, [x0]
   1bdc4:	bl	0 <grub_isspace>
   1bdc8:	cmp	w0, #0x0
   1bdcc:	b.ne	1bda0 <grub_script_argv_split_append+0xc8>  // b.any
   1bdd0:	ldr	x0, [sp, #16]
   1bdd4:	ldrb	w0, [x0]
   1bdd8:	cmp	w0, #0x0
   1bddc:	b.eq	1bdf8 <grub_script_argv_split_append+0x120>  // b.none
   1bde0:	ldr	x0, [sp, #24]
   1bde4:	bl	1bab4 <grub_script_argv_next>
   1bde8:	mov	w1, w0
   1bdec:	ldr	w0, [sp, #44]
   1bdf0:	add	w0, w0, w1
   1bdf4:	str	w0, [sp, #44]
   1bdf8:	ldr	w0, [sp, #44]
   1bdfc:	cmp	w0, #0x0
   1be00:	b.ne	1be14 <grub_script_argv_split_append+0x13c>  // b.any
   1be04:	ldr	x0, [sp, #16]
   1be08:	ldrb	w0, [x0]
   1be0c:	cmp	w0, #0x0
   1be10:	b.ne	1bd34 <grub_script_argv_split_append+0x5c>  // b.any
   1be14:	ldr	w0, [sp, #44]
   1be18:	ldp	x29, x30, [sp], #48
   1be1c:	ret
   1be20:	stp	x29, x30, [sp, #-48]!
   1be24:	mov	x29, sp
   1be28:	str	x0, [sp, #40]
   1be2c:	str	x1, [sp, #32]
   1be30:	strb	w2, [sp, #31]
   1be34:	str	x3, [sp, #16]
   1be38:	b	1bea4 <grub_script_argv_split_append+0x1cc>
   1be3c:	ldr	x0, [sp, #32]
   1be40:	ldrb	w0, [x0]
   1be44:	ldrb	w1, [sp, #31]
   1be48:	cmp	w1, w0
   1be4c:	b.ne	1be84 <grub_script_argv_split_append+0x1ac>  // b.any
   1be50:	ldr	x1, [sp, #16]
   1be54:	ldr	x0, [sp, #40]
   1be58:	bl	0 <grub_strcpy>
   1be5c:	ldr	x0, [sp, #16]
   1be60:	bl	0 <grub_strlen>
   1be64:	mov	x1, x0
   1be68:	ldr	x0, [sp, #40]
   1be6c:	add	x0, x0, x1
   1be70:	str	x0, [sp, #40]
   1be74:	ldr	x0, [sp, #32]
   1be78:	add	x0, x0, #0x1
   1be7c:	str	x0, [sp, #32]
   1be80:	b	1bea4 <grub_script_argv_split_append+0x1cc>
   1be84:	ldr	x1, [sp, #32]
   1be88:	add	x0, x1, #0x1
   1be8c:	str	x0, [sp, #32]
   1be90:	ldr	x0, [sp, #40]
   1be94:	add	x2, x0, #0x1
   1be98:	str	x2, [sp, #40]
   1be9c:	ldrb	w1, [x1]
   1bea0:	strb	w1, [x0]
   1bea4:	ldr	x0, [sp, #32]
   1bea8:	ldrb	w0, [x0]
   1beac:	cmp	w0, #0x0
   1beb0:	b.ne	1be3c <grub_script_argv_split_append+0x164>  // b.any
   1beb4:	ldr	x0, [sp, #40]
   1beb8:	strb	wzr, [x0]
   1bebc:	ldr	x0, [sp, #40]
   1bec0:	ldp	x29, x30, [sp], #48
   1bec4:	ret

000000000001bec8 <grub_normal_add_menu_entry>:
   1bec8:	stp	x29, x30, [sp, #-192]!
   1becc:	mov	x29, sp
   1bed0:	str	x19, [sp, #16]
   1bed4:	str	w0, [sp, #92]
   1bed8:	str	x1, [sp, #80]
   1bedc:	str	x2, [sp, #72]
   1bee0:	str	x3, [sp, #64]
   1bee4:	str	x4, [sp, #56]
   1bee8:	str	x5, [sp, #48]
   1beec:	str	x6, [sp, #40]
   1bef0:	str	x7, [sp, #32]
   1bef4:	str	wzr, [sp, #188]
   1bef8:	str	xzr, [sp, #176]
   1befc:	str	xzr, [sp, #168]
   1bf00:	str	xzr, [sp, #160]
   1bf04:	str	xzr, [sp, #104]
   1bf08:	str	xzr, [sp, #152]
   1bf0c:	str	xzr, [sp, #144]
   1bf10:	bl	12008 <grub_env_get_menu>
   1bf14:	str	x0, [sp, #96]
   1bf18:	ldr	x0, [sp, #96]
   1bf1c:	cmp	x0, #0x0
   1bf20:	b.ne	1bf3c <grub_normal_add_menu_entry+0x74>  // b.any
   1bf24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1bf28:	add	x0, x0, #0x0
   1bf2c:	ldr	x1, [x0]
   1bf30:	mov	w0, #0x1b                  	// #27
   1bf34:	bl	0 <grub_error>
   1bf38:	b	1c4d4 <grub_normal_add_menu_entry+0x60c>
   1bf3c:	ldr	x0, [sp, #96]
   1bf40:	add	x0, x0, #0x8
   1bf44:	str	x0, [sp, #136]
   1bf48:	ldr	x0, [sp, #40]
   1bf4c:	cmp	x0, #0x0
   1bf50:	b.ne	1bf60 <grub_normal_add_menu_entry+0x98>  // b.any
   1bf54:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1bf58:	add	x0, x0, #0x0
   1bf5c:	ldr	x0, [x0]
   1bf60:	ldr	x2, [sp, #32]
   1bf64:	mov	x1, x0
   1bf68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1bf6c:	add	x0, x0, #0x0
   1bf70:	ldr	x0, [x0]
   1bf74:	bl	0 <grub_xasprintf>
   1bf78:	str	x0, [sp, #104]
   1bf7c:	ldr	x0, [sp, #104]
   1bf80:	cmp	x0, #0x0
   1bf84:	b.ne	1bf9c <grub_normal_add_menu_entry+0xd4>  // b.any
   1bf88:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1bf8c:	add	x0, x0, #0x0
   1bf90:	ldr	x0, [x0]
   1bf94:	ldr	w0, [x0]
   1bf98:	b	1c4d4 <grub_normal_add_menu_entry+0x60c>
   1bf9c:	ldr	x0, [sp, #72]
   1bfa0:	cmp	x0, #0x0
   1bfa4:	b.eq	1c0d8 <grub_normal_add_menu_entry+0x210>  // b.none
   1bfa8:	ldr	x0, [sp, #72]
   1bfac:	ldr	x0, [x0]
   1bfb0:	cmp	x0, #0x0
   1bfb4:	b.eq	1c0d8 <grub_normal_add_menu_entry+0x210>  // b.none
   1bfb8:	str	wzr, [sp, #132]
   1bfbc:	b	1bfcc <grub_normal_add_menu_entry+0x104>
   1bfc0:	ldr	w0, [sp, #132]
   1bfc4:	add	w0, w0, #0x1
   1bfc8:	str	w0, [sp, #132]
   1bfcc:	ldrsw	x0, [sp, #132]
   1bfd0:	lsl	x0, x0, #3
   1bfd4:	ldr	x1, [sp, #72]
   1bfd8:	add	x0, x1, x0
   1bfdc:	ldr	x0, [x0]
   1bfe0:	cmp	x0, #0x0
   1bfe4:	b.ne	1bfc0 <grub_normal_add_menu_entry+0xf8>  // b.any
   1bfe8:	ldr	w0, [sp, #132]
   1bfec:	add	w0, w0, #0x1
   1bff0:	sxtw	x0, w0
   1bff4:	lsl	x0, x0, #4
   1bff8:	bl	0 <grub_zalloc>
   1bffc:	str	x0, [sp, #144]
   1c000:	ldr	x0, [sp, #144]
   1c004:	cmp	x0, #0x0
   1c008:	b.eq	1c3b0 <grub_normal_add_menu_entry+0x4e8>  // b.none
   1c00c:	str	wzr, [sp, #132]
   1c010:	b	1c0bc <grub_normal_add_menu_entry+0x1f4>
   1c014:	ldrsw	x0, [sp, #132]
   1c018:	lsl	x0, x0, #3
   1c01c:	ldr	x1, [sp, #72]
   1c020:	add	x0, x1, x0
   1c024:	ldr	x2, [x0]
   1c028:	ldrsw	x0, [sp, #132]
   1c02c:	lsl	x0, x0, #4
   1c030:	ldr	x1, [sp, #144]
   1c034:	add	x19, x1, x0
   1c038:	mov	x0, x2
   1c03c:	bl	0 <grub_strdup>
   1c040:	str	x0, [x19]
   1c044:	ldrsw	x0, [sp, #132]
   1c048:	lsl	x0, x0, #4
   1c04c:	ldr	x1, [sp, #144]
   1c050:	add	x0, x1, x0
   1c054:	ldr	x0, [x0]
   1c058:	cmp	x0, #0x0
   1c05c:	b.eq	1c3b8 <grub_normal_add_menu_entry+0x4f0>  // b.none
   1c060:	ldrsw	x0, [sp, #132]
   1c064:	add	x0, x0, #0x1
   1c068:	lsl	x0, x0, #3
   1c06c:	ldr	x1, [sp, #72]
   1c070:	add	x0, x1, x0
   1c074:	ldr	x0, [x0]
   1c078:	cmp	x0, #0x0
   1c07c:	b.eq	1c098 <grub_normal_add_menu_entry+0x1d0>  // b.none
   1c080:	ldrsw	x0, [sp, #132]
   1c084:	add	x0, x0, #0x1
   1c088:	lsl	x0, x0, #4
   1c08c:	ldr	x1, [sp, #144]
   1c090:	add	x0, x1, x0
   1c094:	b	1c09c <grub_normal_add_menu_entry+0x1d4>
   1c098:	mov	x0, #0x0                   	// #0
   1c09c:	ldrsw	x1, [sp, #132]
   1c0a0:	lsl	x1, x1, #4
   1c0a4:	ldr	x2, [sp, #144]
   1c0a8:	add	x1, x2, x1
   1c0ac:	str	x0, [x1, #8]
   1c0b0:	ldr	w0, [sp, #132]
   1c0b4:	add	w0, w0, #0x1
   1c0b8:	str	w0, [sp, #132]
   1c0bc:	ldrsw	x0, [sp, #132]
   1c0c0:	lsl	x0, x0, #3
   1c0c4:	ldr	x1, [sp, #72]
   1c0c8:	add	x0, x1, x0
   1c0cc:	ldr	x0, [x0]
   1c0d0:	cmp	x0, #0x0
   1c0d4:	b.ne	1c014 <grub_normal_add_menu_entry+0x14c>  // b.any
   1c0d8:	ldr	x0, [sp, #56]
   1c0dc:	cmp	x0, #0x0
   1c0e0:	b.eq	1c0fc <grub_normal_add_menu_entry+0x234>  // b.none
   1c0e4:	ldr	x0, [sp, #56]
   1c0e8:	bl	0 <grub_strdup>
   1c0ec:	str	x0, [sp, #168]
   1c0f0:	ldr	x0, [sp, #168]
   1c0f4:	cmp	x0, #0x0
   1c0f8:	b.eq	1c3c0 <grub_normal_add_menu_entry+0x4f8>  // b.none
   1c0fc:	ldr	x0, [sp, #48]
   1c100:	cmp	x0, #0x0
   1c104:	b.eq	1c194 <grub_normal_add_menu_entry+0x2cc>  // b.none
   1c108:	str	wzr, [sp, #128]
   1c10c:	b	1c170 <grub_normal_add_menu_entry+0x2a8>
   1c110:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c114:	add	x0, x0, #0x0
   1c118:	ldr	x1, [x0]
   1c11c:	ldr	w0, [sp, #128]
   1c120:	lsl	x0, x0, #4
   1c124:	add	x0, x1, x0
   1c128:	ldr	x0, [x0]
   1c12c:	mov	x1, x0
   1c130:	ldr	x0, [sp, #48]
   1c134:	bl	0 <grub_strcmp>
   1c138:	cmp	w0, #0x0
   1c13c:	b.ne	1c164 <grub_normal_add_menu_entry+0x29c>  // b.any
   1c140:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c144:	add	x0, x0, #0x0
   1c148:	ldr	x1, [x0]
   1c14c:	ldr	w0, [sp, #128]
   1c150:	lsl	x0, x0, #4
   1c154:	add	x0, x1, x0
   1c158:	ldr	w0, [x0, #8]
   1c15c:	str	w0, [sp, #188]
   1c160:	b	1c17c <grub_normal_add_menu_entry+0x2b4>
   1c164:	ldr	w0, [sp, #128]
   1c168:	add	w0, w0, #0x1
   1c16c:	str	w0, [sp, #128]
   1c170:	ldr	w0, [sp, #128]
   1c174:	cmp	w0, #0xf
   1c178:	b.ls	1c110 <grub_normal_add_menu_entry+0x248>  // b.plast
   1c17c:	ldr	w0, [sp, #128]
   1c180:	cmp	w0, #0x10
   1c184:	b.ne	1c194 <grub_normal_add_menu_entry+0x2cc>  // b.any
   1c188:	ldr	x0, [sp, #48]
   1c18c:	ldrb	w0, [x0]
   1c190:	str	w0, [sp, #188]
   1c194:	ldr	w0, [sp, #92]
   1c198:	cmp	w0, #0x0
   1c19c:	b.ne	1c1b8 <grub_normal_add_menu_entry+0x2f0>  // b.any
   1c1a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c1a4:	add	x0, x0, #0x0
   1c1a8:	ldr	x1, [x0]
   1c1ac:	mov	w0, #0x1b                  	// #27
   1c1b0:	bl	0 <grub_error>
   1c1b4:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c1b8:	ldr	x0, [sp, #80]
   1c1bc:	ldr	x0, [x0]
   1c1c0:	bl	0 <grub_strdup>
   1c1c4:	str	x0, [sp, #160]
   1c1c8:	ldr	x0, [sp, #160]
   1c1cc:	cmp	x0, #0x0
   1c1d0:	b.eq	1c3c8 <grub_normal_add_menu_entry+0x500>  // b.none
   1c1d4:	ldr	x0, [sp, #64]
   1c1d8:	cmp	x0, #0x0
   1c1dc:	b.ne	1c1e4 <grub_normal_add_menu_entry+0x31c>  // b.any
   1c1e0:	ldr	x0, [sp, #160]
   1c1e4:	bl	0 <grub_strdup>
   1c1e8:	str	x0, [sp, #152]
   1c1ec:	ldr	x0, [sp, #152]
   1c1f0:	cmp	x0, #0x0
   1c1f4:	b.eq	1c3d0 <grub_normal_add_menu_entry+0x508>  // b.none
   1c1f8:	ldr	w0, [sp, #92]
   1c1fc:	add	w0, w0, #0x1
   1c200:	sxtw	x0, w0
   1c204:	lsl	x0, x0, #3
   1c208:	bl	0 <grub_malloc>
   1c20c:	str	x0, [sp, #176]
   1c210:	ldr	x0, [sp, #176]
   1c214:	cmp	x0, #0x0
   1c218:	b.eq	1c3d8 <grub_normal_add_menu_entry+0x510>  // b.none
   1c21c:	str	wzr, [sp, #124]
   1c220:	b	1c27c <grub_normal_add_menu_entry+0x3b4>
   1c224:	ldrsw	x0, [sp, #124]
   1c228:	lsl	x0, x0, #3
   1c22c:	ldr	x1, [sp, #80]
   1c230:	add	x0, x1, x0
   1c234:	ldr	x2, [x0]
   1c238:	ldrsw	x0, [sp, #124]
   1c23c:	lsl	x0, x0, #3
   1c240:	ldr	x1, [sp, #176]
   1c244:	add	x19, x1, x0
   1c248:	mov	x0, x2
   1c24c:	bl	0 <grub_strdup>
   1c250:	str	x0, [x19]
   1c254:	ldrsw	x0, [sp, #124]
   1c258:	lsl	x0, x0, #3
   1c25c:	ldr	x1, [sp, #176]
   1c260:	add	x0, x1, x0
   1c264:	ldr	x0, [x0]
   1c268:	cmp	x0, #0x0
   1c26c:	b.eq	1c3e0 <grub_normal_add_menu_entry+0x518>  // b.none
   1c270:	ldr	w0, [sp, #124]
   1c274:	add	w0, w0, #0x1
   1c278:	str	w0, [sp, #124]
   1c27c:	ldr	w1, [sp, #124]
   1c280:	ldr	w0, [sp, #92]
   1c284:	cmp	w1, w0
   1c288:	b.lt	1c224 <grub_normal_add_menu_entry+0x35c>  // b.tstop
   1c28c:	ldrsw	x0, [sp, #92]
   1c290:	lsl	x0, x0, #3
   1c294:	ldr	x1, [sp, #176]
   1c298:	add	x0, x1, x0
   1c29c:	str	xzr, [x0]
   1c2a0:	b	1c2b4 <grub_normal_add_menu_entry+0x3ec>
   1c2a4:	ldr	x0, [sp, #136]
   1c2a8:	ldr	x0, [x0]
   1c2ac:	add	x0, x0, #0x48
   1c2b0:	str	x0, [sp, #136]
   1c2b4:	ldr	x0, [sp, #136]
   1c2b8:	ldr	x0, [x0]
   1c2bc:	cmp	x0, #0x0
   1c2c0:	b.ne	1c2a4 <grub_normal_add_menu_entry+0x3dc>  // b.any
   1c2c4:	mov	x0, #0x50                  	// #80
   1c2c8:	bl	0 <grub_zalloc>
   1c2cc:	mov	x1, x0
   1c2d0:	ldr	x0, [sp, #136]
   1c2d4:	str	x1, [x0]
   1c2d8:	ldr	x0, [sp, #136]
   1c2dc:	ldr	x0, [x0]
   1c2e0:	cmp	x0, #0x0
   1c2e4:	b.eq	1c3e8 <grub_normal_add_menu_entry+0x520>  // b.none
   1c2e8:	ldr	x0, [sp, #136]
   1c2ec:	ldr	x0, [x0]
   1c2f0:	ldr	x1, [sp, #160]
   1c2f4:	str	x1, [x0]
   1c2f8:	ldr	x0, [sp, #136]
   1c2fc:	ldr	x0, [x0]
   1c300:	ldr	x1, [sp, #152]
   1c304:	str	x1, [x0, #8]
   1c308:	ldr	x0, [sp, #136]
   1c30c:	ldr	x0, [x0]
   1c310:	ldr	w1, [sp, #188]
   1c314:	str	w1, [x0, #64]
   1c318:	ldr	x0, [sp, #136]
   1c31c:	ldr	x0, [x0]
   1c320:	ldr	x1, [sp, #144]
   1c324:	str	x1, [x0, #32]
   1c328:	ldr	x0, [sp, #168]
   1c32c:	cmp	x0, #0x0
   1c330:	b.eq	1c344 <grub_normal_add_menu_entry+0x47c>  // b.none
   1c334:	ldr	x0, [sp, #136]
   1c338:	ldr	x0, [x0]
   1c33c:	mov	w1, #0x1                   	// #1
   1c340:	str	w1, [x0, #16]
   1c344:	ldr	x0, [sp, #136]
   1c348:	ldr	x0, [x0]
   1c34c:	ldr	x1, [sp, #168]
   1c350:	str	x1, [x0, #24]
   1c354:	ldr	x0, [sp, #136]
   1c358:	ldr	x0, [x0]
   1c35c:	ldr	w1, [sp, #92]
   1c360:	str	w1, [x0, #48]
   1c364:	ldr	x0, [sp, #136]
   1c368:	ldr	x0, [x0]
   1c36c:	ldr	x1, [sp, #176]
   1c370:	str	x1, [x0, #56]
   1c374:	ldr	x0, [sp, #136]
   1c378:	ldr	x0, [x0]
   1c37c:	ldr	x1, [sp, #104]
   1c380:	str	x1, [x0, #40]
   1c384:	ldr	x0, [sp, #136]
   1c388:	ldr	x0, [x0]
   1c38c:	ldr	w1, [sp, #192]
   1c390:	str	w1, [x0, #68]
   1c394:	ldr	x0, [sp, #96]
   1c398:	ldr	w0, [x0]
   1c39c:	add	w1, w0, #0x1
   1c3a0:	ldr	x0, [sp, #96]
   1c3a4:	str	w1, [x0]
   1c3a8:	mov	w0, #0x0                   	// #0
   1c3ac:	b	1c4d4 <grub_normal_add_menu_entry+0x60c>
   1c3b0:	nop
   1c3b4:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c3b8:	nop
   1c3bc:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c3c0:	nop
   1c3c4:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c3c8:	nop
   1c3cc:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c3d0:	nop
   1c3d4:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c3d8:	nop
   1c3dc:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c3e0:	nop
   1c3e4:	b	1c3ec <grub_normal_add_menu_entry+0x524>
   1c3e8:	nop
   1c3ec:	ldr	x0, [sp, #104]
   1c3f0:	bl	0 <grub_free>
   1c3f4:	str	wzr, [sp, #120]
   1c3f8:	b	1c420 <grub_normal_add_menu_entry+0x558>
   1c3fc:	ldrsw	x0, [sp, #120]
   1c400:	lsl	x0, x0, #4
   1c404:	ldr	x1, [sp, #144]
   1c408:	add	x0, x1, x0
   1c40c:	ldr	x0, [x0]
   1c410:	bl	0 <grub_free>
   1c414:	ldr	w0, [sp, #120]
   1c418:	add	w0, w0, #0x1
   1c41c:	str	w0, [sp, #120]
   1c420:	ldr	x0, [sp, #144]
   1c424:	cmp	x0, #0x0
   1c428:	b.eq	1c448 <grub_normal_add_menu_entry+0x580>  // b.none
   1c42c:	ldrsw	x0, [sp, #120]
   1c430:	lsl	x0, x0, #4
   1c434:	ldr	x1, [sp, #144]
   1c438:	add	x0, x1, x0
   1c43c:	ldr	x0, [x0]
   1c440:	cmp	x0, #0x0
   1c444:	b.ne	1c3fc <grub_normal_add_menu_entry+0x534>  // b.any
   1c448:	ldr	x0, [sp, #144]
   1c44c:	bl	0 <grub_free>
   1c450:	str	wzr, [sp, #116]
   1c454:	b	1c47c <grub_normal_add_menu_entry+0x5b4>
   1c458:	ldrsw	x0, [sp, #116]
   1c45c:	lsl	x0, x0, #3
   1c460:	ldr	x1, [sp, #176]
   1c464:	add	x0, x1, x0
   1c468:	ldr	x0, [x0]
   1c46c:	bl	0 <grub_free>
   1c470:	ldr	w0, [sp, #116]
   1c474:	add	w0, w0, #0x1
   1c478:	str	w0, [sp, #116]
   1c47c:	ldr	x0, [sp, #176]
   1c480:	cmp	x0, #0x0
   1c484:	b.eq	1c4a4 <grub_normal_add_menu_entry+0x5dc>  // b.none
   1c488:	ldrsw	x0, [sp, #116]
   1c48c:	lsl	x0, x0, #3
   1c490:	ldr	x1, [sp, #176]
   1c494:	add	x0, x1, x0
   1c498:	ldr	x0, [x0]
   1c49c:	cmp	x0, #0x0
   1c4a0:	b.ne	1c458 <grub_normal_add_menu_entry+0x590>  // b.any
   1c4a4:	ldr	x0, [sp, #176]
   1c4a8:	bl	0 <grub_free>
   1c4ac:	ldr	x0, [sp, #168]
   1c4b0:	bl	0 <grub_free>
   1c4b4:	ldr	x0, [sp, #160]
   1c4b8:	bl	0 <grub_free>
   1c4bc:	ldr	x0, [sp, #152]
   1c4c0:	bl	0 <grub_free>
   1c4c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c4c8:	add	x0, x0, #0x0
   1c4cc:	ldr	x0, [x0]
   1c4d0:	ldr	w0, [x0]
   1c4d4:	ldr	x19, [sp, #16]
   1c4d8:	ldp	x29, x30, [sp], #192
   1c4dc:	ret
	...
   1c510:	stp	x29, x30, [sp, #-64]!
   1c514:	mov	x29, sp
   1c518:	str	w0, [sp, #28]
   1c51c:	str	x1, [sp, #16]
   1c520:	mov	x0, #0xa                   	// #10
   1c524:	str	x0, [sp, #40]
   1c528:	str	wzr, [sp, #60]
   1c52c:	b	1c5a8 <grub_normal_add_menu_entry+0x6e0>
   1c530:	ldr	x0, [sp, #40]
   1c534:	add	x0, x0, #0x3
   1c538:	str	x0, [sp, #40]
   1c53c:	ldrsw	x0, [sp, #60]
   1c540:	lsl	x0, x0, #3
   1c544:	ldr	x1, [sp, #16]
   1c548:	add	x0, x1, x0
   1c54c:	ldr	x0, [x0]
   1c550:	str	x0, [sp, #48]
   1c554:	b	1c58c <grub_normal_add_menu_entry+0x6c4>
   1c558:	ldr	x0, [sp, #48]
   1c55c:	add	x1, x0, #0x1
   1c560:	str	x1, [sp, #48]
   1c564:	ldrb	w0, [x0]
   1c568:	cmp	w0, #0x27
   1c56c:	b.ne	1c578 <grub_normal_add_menu_entry+0x6b0>  // b.any
   1c570:	mov	w0, #0x3                   	// #3
   1c574:	b	1c57c <grub_normal_add_menu_entry+0x6b4>
   1c578:	mov	w0, #0x1                   	// #1
   1c57c:	sxtw	x0, w0
   1c580:	ldr	x1, [sp, #40]
   1c584:	add	x0, x1, x0
   1c588:	str	x0, [sp, #40]
   1c58c:	ldr	x0, [sp, #48]
   1c590:	ldrb	w0, [x0]
   1c594:	cmp	w0, #0x0
   1c598:	b.ne	1c558 <grub_normal_add_menu_entry+0x690>  // b.any
   1c59c:	ldr	w0, [sp, #60]
   1c5a0:	add	w0, w0, #0x1
   1c5a4:	str	w0, [sp, #60]
   1c5a8:	ldr	w1, [sp, #60]
   1c5ac:	ldr	w0, [sp, #28]
   1c5b0:	cmp	w1, w0
   1c5b4:	b.lt	1c530 <grub_normal_add_menu_entry+0x668>  // b.tstop
   1c5b8:	ldr	x0, [sp, #40]
   1c5bc:	add	x0, x0, #0x2
   1c5c0:	bl	0 <grub_malloc>
   1c5c4:	str	x0, [sp, #32]
   1c5c8:	ldr	x0, [sp, #32]
   1c5cc:	cmp	x0, #0x0
   1c5d0:	b.ne	1c5dc <grub_normal_add_menu_entry+0x714>  // b.any
   1c5d4:	mov	x0, #0x0                   	// #0
   1c5d8:	b	1c6ac <grub_normal_add_menu_entry+0x7e4>
   1c5dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c5e0:	add	x0, x0, #0x0
   1c5e4:	ldr	x1, [x0]
   1c5e8:	ldr	x0, [sp, #32]
   1c5ec:	bl	0 <grub_strcpy>
   1c5f0:	ldr	x0, [sp, #32]
   1c5f4:	add	x0, x0, #0x9
   1c5f8:	str	x0, [sp, #48]
   1c5fc:	str	wzr, [sp, #56]
   1c600:	b	1c67c <grub_normal_add_menu_entry+0x7b4>
   1c604:	ldr	x0, [sp, #48]
   1c608:	add	x1, x0, #0x1
   1c60c:	str	x1, [sp, #48]
   1c610:	mov	w1, #0x20                  	// #32
   1c614:	strb	w1, [x0]
   1c618:	ldr	x0, [sp, #48]
   1c61c:	add	x1, x0, #0x1
   1c620:	str	x1, [sp, #48]
   1c624:	mov	w1, #0x27                  	// #39
   1c628:	strb	w1, [x0]
   1c62c:	ldrsw	x0, [sp, #56]
   1c630:	lsl	x0, x0, #3
   1c634:	ldr	x1, [sp, #16]
   1c638:	add	x0, x1, x0
   1c63c:	ldr	x1, [x0]
   1c640:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c644:	add	x0, x0, #0x0
   1c648:	ldr	x3, [x0]
   1c64c:	mov	w2, #0x27                  	// #39
   1c650:	ldr	x0, [sp, #48]
   1c654:	bl	1be20 <grub_script_argv_split_append+0x148>
   1c658:	str	x0, [sp, #48]
   1c65c:	ldr	x0, [sp, #48]
   1c660:	add	x1, x0, #0x1
   1c664:	str	x1, [sp, #48]
   1c668:	mov	w1, #0x27                  	// #39
   1c66c:	strb	w1, [x0]
   1c670:	ldr	w0, [sp, #56]
   1c674:	add	w0, w0, #0x1
   1c678:	str	w0, [sp, #56]
   1c67c:	ldr	w1, [sp, #56]
   1c680:	ldr	w0, [sp, #28]
   1c684:	cmp	w1, w0
   1c688:	b.lt	1c604 <grub_normal_add_menu_entry+0x73c>  // b.tstop
   1c68c:	ldr	x0, [sp, #48]
   1c690:	add	x1, x0, #0x1
   1c694:	str	x1, [sp, #48]
   1c698:	mov	w1, #0xa                   	// #10
   1c69c:	strb	w1, [x0]
   1c6a0:	ldr	x0, [sp, #48]
   1c6a4:	strb	wzr, [x0]
   1c6a8:	ldr	x0, [sp, #32]
   1c6ac:	ldp	x29, x30, [sp], #64
   1c6b0:	ret
   1c6b4:	nop
	...
   1c6c8:	sub	sp, sp, #0x70
   1c6cc:	stp	x29, x30, [sp, #16]
   1c6d0:	add	x29, sp, #0x10
   1c6d4:	str	x0, [sp, #56]
   1c6d8:	str	w1, [sp, #52]
   1c6dc:	str	x2, [sp, #40]
   1c6e0:	ldr	w0, [sp, #52]
   1c6e4:	cmp	w0, #0x0
   1c6e8:	b.ne	1c704 <grub_normal_add_menu_entry+0x83c>  // b.any
   1c6ec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c6f0:	add	x0, x0, #0x0
   1c6f4:	ldr	x1, [x0]
   1c6f8:	mov	w0, #0x12                  	// #18
   1c6fc:	bl	0 <grub_error>
   1c700:	b	1ca0c <grub_normal_add_menu_entry+0xb44>
   1c704:	ldr	x0, [sp, #56]
   1c708:	ldr	x0, [x0, #8]
   1c70c:	add	x0, x0, #0x30
   1c710:	ldr	w0, [x0]
   1c714:	cmp	w0, #0x0
   1c718:	b.eq	1c744 <grub_normal_add_menu_entry+0x87c>  // b.none
   1c71c:	ldr	x0, [sp, #56]
   1c720:	ldr	x0, [x0, #16]
   1c724:	cmp	x0, #0x0
   1c728:	b.eq	1c744 <grub_normal_add_menu_entry+0x87c>  // b.none
   1c72c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c730:	add	x0, x0, #0x0
   1c734:	ldr	x1, [x0]
   1c738:	mov	w0, #0x12                  	// #18
   1c73c:	bl	0 <grub_error>
   1c740:	b	1ca0c <grub_normal_add_menu_entry+0xb44>
   1c744:	ldr	x0, [sp, #56]
   1c748:	ldr	x0, [x0, #8]
   1c74c:	add	x0, x0, #0x30
   1c750:	ldr	w0, [x0]
   1c754:	cmp	w0, #0x0
   1c758:	b.ne	1c784 <grub_normal_add_menu_entry+0x8bc>  // b.any
   1c75c:	ldr	x0, [sp, #56]
   1c760:	ldr	x0, [x0, #16]
   1c764:	cmp	x0, #0x0
   1c768:	b.ne	1c784 <grub_normal_add_menu_entry+0x8bc>  // b.any
   1c76c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c770:	add	x0, x0, #0x0
   1c774:	ldr	x1, [x0]
   1c778:	mov	w0, #0x12                  	// #18
   1c77c:	bl	0 <grub_error>
   1c780:	b	1ca0c <grub_normal_add_menu_entry+0xb44>
   1c784:	ldr	x0, [sp, #56]
   1c788:	ldr	x0, [x0, #8]
   1c78c:	add	x0, x0, #0x10
   1c790:	ldr	w0, [x0]
   1c794:	cmp	w0, #0x0
   1c798:	b.eq	1c7b4 <grub_normal_add_menu_entry+0x8ec>  // b.none
   1c79c:	ldr	x0, [sp, #56]
   1c7a0:	ldr	x0, [x0, #8]
   1c7a4:	add	x0, x0, #0x10
   1c7a8:	ldr	x0, [x0, #8]
   1c7ac:	str	x0, [sp, #104]
   1c7b0:	b	1c7e4 <grub_normal_add_menu_entry+0x91c>
   1c7b4:	ldr	x0, [sp, #56]
   1c7b8:	ldr	x0, [x0, #8]
   1c7bc:	add	x0, x0, #0x50
   1c7c0:	ldr	w0, [x0]
   1c7c4:	cmp	w0, #0x0
   1c7c8:	b.eq	1c7d4 <grub_normal_add_menu_entry+0x90c>  // b.none
   1c7cc:	str	xzr, [sp, #104]
   1c7d0:	b	1c7e4 <grub_normal_add_menu_entry+0x91c>
   1c7d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c7d8:	add	x0, x0, #0x0
   1c7dc:	ldr	x0, [x0]
   1c7e0:	str	x0, [sp, #104]
   1c7e4:	ldr	x0, [sp, #56]
   1c7e8:	ldr	x0, [x0, #16]
   1c7ec:	cmp	x0, #0x0
   1c7f0:	b.ne	1c898 <grub_normal_add_menu_entry+0x9d0>  // b.any
   1c7f4:	ldr	x0, [sp, #56]
   1c7f8:	ldr	x0, [x0, #8]
   1c7fc:	ldr	w0, [x0]
   1c800:	cmp	w0, #0x0
   1c804:	b.eq	1c818 <grub_normal_add_menu_entry+0x950>  // b.none
   1c808:	ldr	x0, [sp, #56]
   1c80c:	ldr	x0, [x0, #8]
   1c810:	ldr	x0, [x0, #8]
   1c814:	b	1c81c <grub_normal_add_menu_entry+0x954>
   1c818:	mov	x0, #0x0                   	// #0
   1c81c:	ldr	x1, [sp, #56]
   1c820:	ldr	x1, [x1, #8]
   1c824:	add	x1, x1, #0x40
   1c828:	ldr	x2, [x1, #8]
   1c82c:	ldr	x1, [sp, #56]
   1c830:	ldr	x1, [x1, #8]
   1c834:	add	x1, x1, #0x20
   1c838:	ldr	x3, [x1, #8]
   1c83c:	ldr	x1, [sp, #56]
   1c840:	ldr	x1, [x1, #8]
   1c844:	add	x1, x1, #0x30
   1c848:	ldr	x4, [x1, #8]
   1c84c:	ldr	x1, [sp, #56]
   1c850:	ldr	x1, [x1]
   1c854:	ldr	x1, [x1]
   1c858:	ldr	x1, [x1, #16]
   1c85c:	ldrb	w1, [x1]
   1c860:	cmp	w1, #0x73
   1c864:	cset	w1, eq  // eq = none
   1c868:	and	w1, w1, #0xff
   1c86c:	str	w1, [sp]
   1c870:	mov	x7, x4
   1c874:	mov	x6, #0x0                   	// #0
   1c878:	mov	x5, x3
   1c87c:	ldr	x4, [sp, #104]
   1c880:	mov	x3, x2
   1c884:	mov	x2, x0
   1c888:	ldr	x1, [sp, #40]
   1c88c:	ldr	w0, [sp, #52]
   1c890:	bl	1bec8 <grub_normal_add_menu_entry>
   1c894:	b	1ca0c <grub_normal_add_menu_entry+0xb44>
   1c898:	ldrsw	x0, [sp, #52]
   1c89c:	lsl	x0, x0, #3
   1c8a0:	sub	x0, x0, #0x8
   1c8a4:	ldr	x1, [sp, #40]
   1c8a8:	add	x0, x1, x0
   1c8ac:	ldr	x0, [x0]
   1c8b0:	str	x0, [sp, #96]
   1c8b4:	ldrsw	x0, [sp, #52]
   1c8b8:	lsl	x0, x0, #3
   1c8bc:	sub	x0, x0, #0x8
   1c8c0:	ldr	x1, [sp, #40]
   1c8c4:	add	x0, x1, x0
   1c8c8:	str	xzr, [x0]
   1c8cc:	ldr	x0, [sp, #96]
   1c8d0:	bl	0 <grub_strlen>
   1c8d4:	str	w0, [sp, #92]
   1c8d8:	ldr	w0, [sp, #92]
   1c8dc:	sub	w0, w0, #0x1
   1c8e0:	mov	w0, w0
   1c8e4:	ldr	x1, [sp, #96]
   1c8e8:	add	x0, x1, x0
   1c8ec:	ldrb	w0, [x0]
   1c8f0:	strb	w0, [sp, #91]
   1c8f4:	ldr	w0, [sp, #92]
   1c8f8:	sub	w0, w0, #0x1
   1c8fc:	mov	w0, w0
   1c900:	ldr	x1, [sp, #96]
   1c904:	add	x0, x1, x0
   1c908:	strb	wzr, [x0]
   1c90c:	ldr	w0, [sp, #52]
   1c910:	sub	w0, w0, #0x1
   1c914:	ldr	x1, [sp, #40]
   1c918:	bl	1c510 <grub_normal_add_menu_entry+0x648>
   1c91c:	str	x0, [sp, #80]
   1c920:	ldr	x0, [sp, #80]
   1c924:	cmp	x0, #0x0
   1c928:	b.ne	1c940 <grub_normal_add_menu_entry+0xa78>  // b.any
   1c92c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1c930:	add	x0, x0, #0x0
   1c934:	ldr	x0, [x0]
   1c938:	ldr	w0, [x0]
   1c93c:	b	1ca0c <grub_normal_add_menu_entry+0xb44>
   1c940:	ldr	w0, [sp, #52]
   1c944:	sub	w8, w0, #0x1
   1c948:	ldr	x0, [sp, #56]
   1c94c:	ldr	x0, [x0, #8]
   1c950:	ldr	x1, [x0, #8]
   1c954:	ldr	x0, [sp, #56]
   1c958:	ldr	x0, [x0, #8]
   1c95c:	add	x0, x0, #0x40
   1c960:	ldr	x2, [x0, #8]
   1c964:	ldr	x0, [sp, #56]
   1c968:	ldr	x0, [x0, #8]
   1c96c:	add	x0, x0, #0x20
   1c970:	ldr	x3, [x0, #8]
   1c974:	ldr	x0, [sp, #96]
   1c978:	add	x4, x0, #0x1
   1c97c:	ldr	x0, [sp, #56]
   1c980:	ldr	x0, [x0]
   1c984:	ldr	x0, [x0]
   1c988:	ldr	x0, [x0, #16]
   1c98c:	ldrb	w0, [x0]
   1c990:	cmp	w0, #0x73
   1c994:	cset	w0, eq  // eq = none
   1c998:	and	w0, w0, #0xff
   1c99c:	str	w0, [sp]
   1c9a0:	mov	x7, x4
   1c9a4:	ldr	x6, [sp, #80]
   1c9a8:	mov	x5, x3
   1c9ac:	ldr	x4, [sp, #104]
   1c9b0:	mov	x3, x2
   1c9b4:	mov	x2, x1
   1c9b8:	ldr	x1, [sp, #40]
   1c9bc:	mov	w0, w8
   1c9c0:	bl	1bec8 <grub_normal_add_menu_entry>
   1c9c4:	str	w0, [sp, #76]
   1c9c8:	ldr	w0, [sp, #92]
   1c9cc:	sub	w0, w0, #0x1
   1c9d0:	mov	w0, w0
   1c9d4:	ldr	x1, [sp, #96]
   1c9d8:	add	x0, x1, x0
   1c9dc:	ldrb	w1, [sp, #91]
   1c9e0:	strb	w1, [x0]
   1c9e4:	ldrsw	x0, [sp, #52]
   1c9e8:	lsl	x0, x0, #3
   1c9ec:	sub	x0, x0, #0x8
   1c9f0:	ldr	x1, [sp, #40]
   1c9f4:	add	x0, x1, x0
   1c9f8:	ldr	x1, [sp, #96]
   1c9fc:	str	x1, [x0]
   1ca00:	ldr	x0, [sp, #80]
   1ca04:	bl	0 <grub_free>
   1ca08:	ldr	w0, [sp, #76]
   1ca0c:	ldp	x29, x30, [sp, #16]
   1ca10:	add	sp, sp, #0x70
   1ca14:	ret
	...

000000000001ca40 <grub_menu_init>:
   1ca40:	stp	x29, x30, [sp, #-16]!
   1ca44:	mov	x29, sp
   1ca48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ca4c:	add	x0, x0, #0x0
   1ca50:	ldr	x5, [x0]
   1ca54:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ca58:	add	x0, x0, #0x0
   1ca5c:	ldr	x4, [x0]
   1ca60:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ca64:	add	x0, x0, #0x0
   1ca68:	ldr	x3, [x0]
   1ca6c:	mov	w2, #0x2c0                 	// #704
   1ca70:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ca74:	add	x0, x0, #0x0
   1ca78:	ldr	x1, [x0]
   1ca7c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ca80:	add	x0, x0, #0x0
   1ca84:	ldr	x0, [x0]
   1ca88:	bl	0 <grub_register_extcmd>
   1ca8c:	mov	x1, x0
   1ca90:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ca94:	add	x0, x0, #0x0
   1ca98:	ldr	x0, [x0]
   1ca9c:	str	x1, [x0]
   1caa0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1caa4:	add	x0, x0, #0x0
   1caa8:	ldr	x5, [x0]
   1caac:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cab0:	add	x0, x0, #0x0
   1cab4:	ldr	x4, [x0]
   1cab8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cabc:	add	x0, x0, #0x0
   1cac0:	ldr	x3, [x0]
   1cac4:	mov	w2, #0x2c0                 	// #704
   1cac8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cacc:	add	x0, x0, #0x0
   1cad0:	ldr	x1, [x0]
   1cad4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cad8:	add	x0, x0, #0x0
   1cadc:	ldr	x0, [x0]
   1cae0:	bl	0 <grub_register_extcmd>
   1cae4:	mov	x1, x0
   1cae8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1caec:	add	x0, x0, #0x0
   1caf0:	ldr	x0, [x0]
   1caf4:	str	x1, [x0]
   1caf8:	nop
   1cafc:	ldp	x29, x30, [sp], #16
   1cb00:	ret
   1cb04:	nop
	...

000000000001cb50 <grub_menu_fini>:
   1cb50:	stp	x29, x30, [sp, #-16]!
   1cb54:	mov	x29, sp
   1cb58:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cb5c:	add	x0, x0, #0x0
   1cb60:	ldr	x0, [x0]
   1cb64:	ldr	x0, [x0]
   1cb68:	bl	0 <grub_unregister_extcmd>
   1cb6c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cb70:	add	x0, x0, #0x0
   1cb74:	ldr	x0, [x0]
   1cb78:	ldr	x0, [x0]
   1cb7c:	bl	0 <grub_unregister_extcmd>
   1cb80:	nop
   1cb84:	ldp	x29, x30, [sp], #16
   1cb88:	ret
   1cb8c:	nop
	...
   1cba0:	sub	sp, sp, #0x20
   1cba4:	str	x0, [sp, #24]
   1cba8:	str	w1, [sp, #20]
   1cbac:	str	x2, [sp, #8]
   1cbb0:	str	x3, [sp]
   1cbb4:	ldr	x0, [sp, #24]
   1cbb8:	cmp	x0, #0x0
   1cbbc:	b.ne	1cbd0 <grub_menu_fini+0x80>  // b.any
   1cbc0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cbc4:	add	x0, x0, #0x0
   1cbc8:	ldr	x0, [x0]
   1cbcc:	str	x0, [sp, #24]
   1cbd0:	nop
   1cbd4:	add	sp, sp, #0x20
   1cbd8:	ret
   1cbdc:	nop
	...

000000000001cbe8 <grub_script_yyparse>:
   1cbe8:	mov	x12, #0x1490                	// #5264
   1cbec:	sub	sp, sp, x12
   1cbf0:	stp	x29, x30, [sp]
   1cbf4:	mov	x29, sp
   1cbf8:	str	x19, [sp, #16]
   1cbfc:	str	x0, [sp, #40]
   1cc00:	str	wzr, [sp, #5196]
   1cc04:	str	wzr, [sp, #5192]
   1cc08:	add	x0, sp, #0x1, lsl #12
   1cc0c:	add	x0, x0, #0x310
   1cc10:	str	x0, [sp, #5240]
   1cc14:	ldr	x0, [sp, #5240]
   1cc18:	str	x0, [sp, #5232]
   1cc1c:	add	x0, sp, #0x50
   1cc20:	str	x0, [sp, #5224]
   1cc24:	ldr	x0, [sp, #5224]
   1cc28:	str	x0, [sp, #5216]
   1cc2c:	mov	x0, #0xc8                  	// #200
   1cc30:	str	x0, [sp, #5208]
   1cc34:	str	wzr, [sp, #5252]
   1cc38:	str	wzr, [sp, #5248]
   1cc3c:	str	wzr, [sp, #5256]
   1cc40:	mov	w0, #0xfffffffe            	// #-2
   1cc44:	str	w0, [sp, #5260]
   1cc48:	b	1cc58 <grub_script_yyparse+0x70>
   1cc4c:	ldr	x0, [sp, #5232]
   1cc50:	add	x0, x0, #0x1
   1cc54:	str	x0, [sp, #5232]
   1cc58:	ldr	w0, [sp, #5252]
   1cc5c:	sxtb	w1, w0
   1cc60:	ldr	x0, [sp, #5232]
   1cc64:	strb	w1, [x0]
   1cc68:	ldr	x0, [sp, #5208]
   1cc6c:	sub	x0, x0, #0x1
   1cc70:	ldr	x1, [sp, #5240]
   1cc74:	add	x0, x1, x0
   1cc78:	ldr	x1, [sp, #5232]
   1cc7c:	cmp	x1, x0
   1cc80:	b.cc	1ce8c <grub_script_yyparse+0x2a4>  // b.lo, b.ul, b.last
   1cc84:	ldr	x1, [sp, #5232]
   1cc88:	ldr	x0, [sp, #5240]
   1cc8c:	sub	x0, x1, x0
   1cc90:	add	x0, x0, #0x1
   1cc94:	str	x0, [sp, #5168]
   1cc98:	ldr	x1, [sp, #5208]
   1cc9c:	mov	x0, #0x270f                	// #9999
   1cca0:	cmp	x1, x0
   1cca4:	b.gt	1dd08 <grub_script_yyparse+0x1120>
   1cca8:	ldr	x0, [sp, #5208]
   1ccac:	lsl	x0, x0, #1
   1ccb0:	str	x0, [sp, #5208]
   1ccb4:	ldr	x1, [sp, #5208]
   1ccb8:	mov	x0, #0x2710                	// #10000
   1ccbc:	cmp	x1, x0
   1ccc0:	b.le	1cccc <grub_script_yyparse+0xe4>
   1ccc4:	mov	x0, #0x2710                	// #10000
   1ccc8:	str	x0, [sp, #5208]
   1cccc:	ldr	x0, [sp, #5240]
   1ccd0:	str	x0, [sp, #5160]
   1ccd4:	ldr	x1, [sp, #5208]
   1ccd8:	mov	x0, x1
   1ccdc:	lsl	x0, x0, #1
   1cce0:	add	x0, x0, x1
   1cce4:	lsl	x0, x0, #3
   1cce8:	add	x0, x0, x1
   1ccec:	add	x0, x0, #0x17
   1ccf0:	bl	0 <grub_malloc>
   1ccf4:	str	x0, [sp, #5152]
   1ccf8:	ldr	x0, [sp, #5152]
   1ccfc:	cmp	x0, #0x0
   1cd00:	b.eq	1dd10 <grub_script_yyparse+0x1128>  // b.none
   1cd04:	ldr	x2, [sp, #5152]
   1cd08:	ldr	x0, [sp, #5168]
   1cd0c:	ldr	x1, [sp, #5240]
   1cd10:	mov	x3, x2
   1cd14:	mov	x2, x0
   1cd18:	mov	x0, x3
   1cd1c:	bl	0 <memcpy>
   1cd20:	ldr	x0, [sp, #5152]
   1cd24:	str	x0, [sp, #5240]
   1cd28:	ldr	x0, [sp, #5208]
   1cd2c:	add	x0, x0, #0x17
   1cd30:	str	x0, [sp, #5144]
   1cd34:	ldr	x0, [sp, #5144]
   1cd38:	mov	x1, #0xaaab                	// #43691
   1cd3c:	movk	x1, #0xaaaa, lsl #16
   1cd40:	movk	x1, #0xaaaa, lsl #32
   1cd44:	movk	x1, #0x2aaa, lsl #48
   1cd48:	smulh	x1, x0, x1
   1cd4c:	asr	x1, x1, #2
   1cd50:	asr	x0, x0, #63
   1cd54:	sub	x0, x1, x0
   1cd58:	mov	x1, x0
   1cd5c:	mov	x0, x1
   1cd60:	lsl	x0, x0, #1
   1cd64:	add	x0, x0, x1
   1cd68:	lsl	x0, x0, #3
   1cd6c:	mov	x1, x0
   1cd70:	ldr	x0, [sp, #5152]
   1cd74:	add	x0, x0, x1
   1cd78:	str	x0, [sp, #5152]
   1cd7c:	ldr	x2, [sp, #5152]
   1cd80:	ldr	x1, [sp, #5168]
   1cd84:	mov	x0, x1
   1cd88:	lsl	x0, x0, #1
   1cd8c:	add	x0, x0, x1
   1cd90:	lsl	x0, x0, #3
   1cd94:	mov	x1, x0
   1cd98:	ldr	x0, [sp, #5224]
   1cd9c:	mov	x3, x2
   1cda0:	mov	x2, x1
   1cda4:	mov	x1, x0
   1cda8:	mov	x0, x3
   1cdac:	bl	0 <memcpy>
   1cdb0:	ldr	x0, [sp, #5152]
   1cdb4:	str	x0, [sp, #5224]
   1cdb8:	ldr	x1, [sp, #5208]
   1cdbc:	mov	x0, x1
   1cdc0:	lsl	x0, x0, #1
   1cdc4:	add	x0, x0, x1
   1cdc8:	lsl	x0, x0, #3
   1cdcc:	add	x0, x0, #0x17
   1cdd0:	str	x0, [sp, #5136]
   1cdd4:	ldr	x0, [sp, #5136]
   1cdd8:	mov	x1, #0xaaab                	// #43691
   1cddc:	movk	x1, #0xaaaa, lsl #16
   1cde0:	movk	x1, #0xaaaa, lsl #32
   1cde4:	movk	x1, #0x2aaa, lsl #48
   1cde8:	smulh	x1, x0, x1
   1cdec:	asr	x1, x1, #2
   1cdf0:	asr	x0, x0, #63
   1cdf4:	sub	x0, x1, x0
   1cdf8:	mov	x1, x0
   1cdfc:	mov	x0, x1
   1ce00:	lsl	x0, x0, #1
   1ce04:	add	x0, x0, x1
   1ce08:	lsl	x0, x0, #3
   1ce0c:	mov	x1, x0
   1ce10:	ldr	x0, [sp, #5152]
   1ce14:	add	x0, x0, x1
   1ce18:	str	x0, [sp, #5152]
   1ce1c:	add	x0, sp, #0x1, lsl #12
   1ce20:	add	x0, x0, #0x310
   1ce24:	ldr	x1, [sp, #5160]
   1ce28:	cmp	x1, x0
   1ce2c:	b.eq	1ce38 <grub_script_yyparse+0x250>  // b.none
   1ce30:	ldr	x0, [sp, #5160]
   1ce34:	bl	0 <grub_free>
   1ce38:	ldr	x0, [sp, #5168]
   1ce3c:	sub	x0, x0, #0x1
   1ce40:	ldr	x1, [sp, #5240]
   1ce44:	add	x0, x1, x0
   1ce48:	str	x0, [sp, #5232]
   1ce4c:	ldr	x1, [sp, #5168]
   1ce50:	mov	x0, x1
   1ce54:	lsl	x0, x0, #1
   1ce58:	add	x0, x0, x1
   1ce5c:	lsl	x0, x0, #3
   1ce60:	sub	x0, x0, #0x18
   1ce64:	ldr	x1, [sp, #5224]
   1ce68:	add	x0, x1, x0
   1ce6c:	str	x0, [sp, #5216]
   1ce70:	ldr	x0, [sp, #5208]
   1ce74:	sub	x0, x0, #0x1
   1ce78:	ldr	x1, [sp, #5240]
   1ce7c:	add	x0, x1, x0
   1ce80:	ldr	x1, [sp, #5232]
   1ce84:	cmp	x1, x0
   1ce88:	b.cs	1dcf0 <grub_script_yyparse+0x1108>  // b.hs, b.nlast
   1ce8c:	ldr	w0, [sp, #5252]
   1ce90:	cmp	w0, #0x3
   1ce94:	b.eq	1dce4 <grub_script_yyparse+0x10fc>  // b.none
   1ce98:	nop
   1ce9c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cea0:	add	x0, x0, #0x0
   1cea4:	ldr	x0, [x0]
   1cea8:	ldrsw	x1, [sp, #5252]
   1ceac:	ldrsh	w0, [x0, x1, lsl #1]
   1ceb0:	str	w0, [sp, #5204]
   1ceb4:	ldr	w0, [sp, #5204]
   1ceb8:	cmn	w0, #0x36
   1cebc:	b.eq	1d00c <grub_script_yyparse+0x424>  // b.none
   1cec0:	ldr	w0, [sp, #5260]
   1cec4:	cmn	w0, #0x2
   1cec8:	b.ne	1cee0 <grub_script_yyparse+0x2f8>  // b.any
   1cecc:	add	x0, sp, #0x1, lsl #12
   1ced0:	add	x0, x0, #0x3d8
   1ced4:	ldr	x1, [sp, #40]
   1ced8:	bl	1b66c <grub_script_yylex>
   1cedc:	str	w0, [sp, #5260]
   1cee0:	ldr	w0, [sp, #5260]
   1cee4:	cmp	w0, #0x0
   1cee8:	b.gt	1cefc <grub_script_yyparse+0x314>
   1ceec:	str	wzr, [sp, #5196]
   1cef0:	ldr	w0, [sp, #5196]
   1cef4:	str	w0, [sp, #5260]
   1cef8:	b	1cf34 <grub_script_yyparse+0x34c>
   1cefc:	ldr	w0, [sp, #5260]
   1cf00:	cmp	w0, #0x0
   1cf04:	b.lt	1cf2c <grub_script_yyparse+0x344>  // b.tstop
   1cf08:	ldr	w0, [sp, #5260]
   1cf0c:	cmp	w0, #0x121
   1cf10:	b.gt	1cf2c <grub_script_yyparse+0x344>
   1cf14:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cf18:	add	x0, x0, #0x0
   1cf1c:	ldr	x1, [x0]
   1cf20:	ldrsw	x0, [sp, #5260]
   1cf24:	ldrsb	w0, [x1, x0]
   1cf28:	b	1cf30 <grub_script_yyparse+0x348>
   1cf2c:	mov	w0, #0x2                   	// #2
   1cf30:	str	w0, [sp, #5196]
   1cf34:	ldr	w1, [sp, #5204]
   1cf38:	ldr	w0, [sp, #5196]
   1cf3c:	add	w0, w1, w0
   1cf40:	str	w0, [sp, #5204]
   1cf44:	ldr	w0, [sp, #5204]
   1cf48:	cmp	w0, #0x0
   1cf4c:	b.lt	1d014 <grub_script_yyparse+0x42c>  // b.tstop
   1cf50:	ldr	w0, [sp, #5204]
   1cf54:	cmp	w0, #0xdb
   1cf58:	b.gt	1d014 <grub_script_yyparse+0x42c>
   1cf5c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cf60:	add	x0, x0, #0x0
   1cf64:	ldr	x1, [x0]
   1cf68:	ldrsw	x0, [sp, #5204]
   1cf6c:	ldrsb	w0, [x1, x0]
   1cf70:	mov	w1, w0
   1cf74:	ldr	w0, [sp, #5196]
   1cf78:	cmp	w0, w1
   1cf7c:	b.ne	1d014 <grub_script_yyparse+0x42c>  // b.any
   1cf80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1cf84:	add	x0, x0, #0x0
   1cf88:	ldr	x1, [x0]
   1cf8c:	ldrsw	x0, [sp, #5204]
   1cf90:	ldrsb	w0, [x1, x0]
   1cf94:	str	w0, [sp, #5204]
   1cf98:	ldr	w0, [sp, #5204]
   1cf9c:	cmp	w0, #0x0
   1cfa0:	b.gt	1cfb4 <grub_script_yyparse+0x3cc>
   1cfa4:	ldr	w0, [sp, #5204]
   1cfa8:	neg	w0, w0
   1cfac:	str	w0, [sp, #5204]
   1cfb0:	b	1d040 <grub_script_yyparse+0x458>
   1cfb4:	ldr	w0, [sp, #5248]
   1cfb8:	cmp	w0, #0x0
   1cfbc:	b.eq	1cfcc <grub_script_yyparse+0x3e4>  // b.none
   1cfc0:	ldr	w0, [sp, #5248]
   1cfc4:	sub	w0, w0, #0x1
   1cfc8:	str	w0, [sp, #5248]
   1cfcc:	ldr	w0, [sp, #5204]
   1cfd0:	str	w0, [sp, #5252]
   1cfd4:	ldr	x0, [sp, #5216]
   1cfd8:	add	x0, x0, #0x18
   1cfdc:	str	x0, [sp, #5216]
   1cfe0:	ldr	x0, [sp, #5216]
   1cfe4:	mov	x3, x0
   1cfe8:	add	x2, sp, #0x1, lsl #12
   1cfec:	add	x2, x2, #0x3d8
   1cff0:	ldp	x0, x1, [x2]
   1cff4:	stp	x0, x1, [x3]
   1cff8:	ldr	x0, [x2, #16]
   1cffc:	str	x0, [x3, #16]
   1d000:	mov	w0, #0xfffffffe            	// #-2
   1d004:	str	w0, [sp, #5260]
   1d008:	b	1cc4c <grub_script_yyparse+0x64>
   1d00c:	nop
   1d010:	b	1d018 <grub_script_yyparse+0x430>
   1d014:	nop
   1d018:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1d01c:	add	x0, x0, #0x0
   1d020:	ldr	x1, [x0]
   1d024:	ldrsw	x0, [sp, #5252]
   1d028:	ldrsb	w0, [x1, x0]
   1d02c:	str	w0, [sp, #5204]
   1d030:	ldr	w0, [sp, #5204]
   1d034:	cmp	w0, #0x0
   1d038:	b.eq	1dadc <grub_script_yyparse+0xef4>  // b.none
   1d03c:	nop
   1d040:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1d044:	add	x0, x0, #0x0
   1d048:	ldr	x1, [x0]
   1d04c:	ldrsw	x0, [sp, #5204]
   1d050:	ldrsb	w0, [x1, x0]
   1d054:	str	w0, [sp, #5192]
   1d058:	mov	w1, #0x1                   	// #1
   1d05c:	ldr	w0, [sp, #5192]
   1d060:	sub	w0, w1, w0
   1d064:	sxtw	x1, w0
   1d068:	mov	x0, x1
   1d06c:	lsl	x0, x0, #1
   1d070:	add	x0, x0, x1
   1d074:	lsl	x0, x0, #3
   1d078:	mov	x1, x0
   1d07c:	ldr	x0, [sp, #5216]
   1d080:	add	x0, x0, x1
   1d084:	add	x2, sp, #0x38
   1d088:	mov	x3, x0
   1d08c:	ldp	x0, x1, [x3]
   1d090:	stp	x0, x1, [x2]
   1d094:	ldr	x0, [x3, #16]
   1d098:	str	x0, [x2, #16]
   1d09c:	ldr	w0, [sp, #5204]
   1d0a0:	sub	w0, w0, #0x2
   1d0a4:	cmp	w0, #0x3d
   1d0a8:	b.hi	1d9c0 <grub_script_yyparse+0xdd8>  // b.pmore
   1d0ac:	adrp	x1, 0 <grub_normal_free_menu-0x168>
   1d0b0:	add	x1, x1, #0x0
   1d0b4:	ldr	x1, [x1]
   1d0b8:	ldr	w0, [x1, w0, uxtw #2]
   1d0bc:	adr	x1, 1d0c8 <grub_script_yyparse+0x4e0>
   1d0c0:	add	x0, x1, w0, sxtw #2
   1d0c4:	br	x0
   1d0c8:	ldr	x0, [sp, #40]
   1d0cc:	str	wzr, [x0, #8]
   1d0d0:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d0d4:	ldr	x0, [sp, #5216]
   1d0d8:	ldr	x1, [x0]
   1d0dc:	ldr	x0, [sp, #40]
   1d0e0:	str	x1, [x0, #32]
   1d0e4:	ldr	x0, [sp, #40]
   1d0e8:	str	wzr, [x0, #8]
   1d0ec:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d0f0:	str	xzr, [sp, #56]
   1d0f4:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d0f8:	ldr	x0, [sp, #5216]
   1d0fc:	sub	x0, x0, #0x48
   1d100:	ldr	x1, [x0]
   1d104:	ldr	x0, [sp, #5216]
   1d108:	sub	x0, x0, #0x30
   1d10c:	ldr	x0, [x0]
   1d110:	mov	x2, x0
   1d114:	ldr	x0, [sp, #40]
   1d118:	bl	17700 <grub_script_append_cmd>
   1d11c:	str	x0, [sp, #56]
   1d120:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d124:	str	xzr, [sp, #56]
   1d128:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1d12c:	add	x0, x0, #0x0
   1d130:	ldr	x1, [x0]
   1d134:	ldr	x0, [sp, #40]
   1d138:	bl	1b820 <grub_script_yyerror>
   1d13c:	str	wzr, [sp, #5248]
   1d140:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d144:	ldr	x0, [sp, #5216]
   1d148:	ldr	x0, [x0]
   1d14c:	mov	x2, x0
   1d150:	mov	x1, #0x0                   	// #0
   1d154:	ldr	x0, [sp, #40]
   1d158:	bl	172f4 <grub_script_add_arglist>
   1d15c:	str	x0, [sp, #56]
   1d160:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d164:	ldr	x0, [sp, #5216]
   1d168:	ldr	x0, [x0]
   1d16c:	mov	x2, x0
   1d170:	mov	x1, #0x0                   	// #0
   1d174:	ldr	x0, [sp, #40]
   1d178:	bl	172f4 <grub_script_add_arglist>
   1d17c:	str	x0, [sp, #56]
   1d180:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d184:	ldr	x0, [sp, #5216]
   1d188:	ldr	x0, [x0]
   1d18c:	str	x0, [sp, #56]
   1d190:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d194:	str	xzr, [sp, #56]
   1d198:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d19c:	ldr	x0, [sp, #5216]
   1d1a0:	ldr	x0, [x0]
   1d1a4:	mov	x2, x0
   1d1a8:	mov	x1, #0x0                   	// #0
   1d1ac:	ldr	x0, [sp, #40]
   1d1b0:	bl	172f4 <grub_script_add_arglist>
   1d1b4:	str	x0, [sp, #56]
   1d1b8:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d1bc:	ldr	x0, [sp, #5216]
   1d1c0:	ldr	x0, [x0]
   1d1c4:	mov	x2, x0
   1d1c8:	mov	x1, #0x0                   	// #0
   1d1cc:	ldr	x0, [sp, #40]
   1d1d0:	bl	172f4 <grub_script_add_arglist>
   1d1d4:	str	x0, [sp, #56]
   1d1d8:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d1dc:	ldr	x0, [sp, #5216]
   1d1e0:	ldr	x0, [x0]
   1d1e4:	mov	x2, x0
   1d1e8:	mov	x1, #0x0                   	// #0
   1d1ec:	ldr	x0, [sp, #40]
   1d1f0:	bl	172f4 <grub_script_add_arglist>
   1d1f4:	str	x0, [sp, #56]
   1d1f8:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d1fc:	ldr	x0, [sp, #5216]
   1d200:	ldr	x0, [x0]
   1d204:	mov	x2, x0
   1d208:	mov	x1, #0x0                   	// #0
   1d20c:	ldr	x0, [sp, #40]
   1d210:	bl	172f4 <grub_script_add_arglist>
   1d214:	str	x0, [sp, #56]
   1d218:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d21c:	ldr	x0, [sp, #5216]
   1d220:	ldr	x0, [x0]
   1d224:	mov	x2, x0
   1d228:	mov	x1, #0x0                   	// #0
   1d22c:	ldr	x0, [sp, #40]
   1d230:	bl	172f4 <grub_script_add_arglist>
   1d234:	str	x0, [sp, #56]
   1d238:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d23c:	ldr	x0, [sp, #5216]
   1d240:	ldr	x0, [x0]
   1d244:	mov	x2, x0
   1d248:	mov	x1, #0x0                   	// #0
   1d24c:	ldr	x0, [sp, #40]
   1d250:	bl	172f4 <grub_script_add_arglist>
   1d254:	str	x0, [sp, #56]
   1d258:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d25c:	ldr	x0, [sp, #5216]
   1d260:	ldr	x0, [x0]
   1d264:	mov	x2, x0
   1d268:	mov	x1, #0x0                   	// #0
   1d26c:	ldr	x0, [sp, #40]
   1d270:	bl	172f4 <grub_script_add_arglist>
   1d274:	str	x0, [sp, #56]
   1d278:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d27c:	ldr	x0, [sp, #5216]
   1d280:	ldr	x0, [x0]
   1d284:	mov	x2, x0
   1d288:	mov	x1, #0x0                   	// #0
   1d28c:	ldr	x0, [sp, #40]
   1d290:	bl	172f4 <grub_script_add_arglist>
   1d294:	str	x0, [sp, #56]
   1d298:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d29c:	ldr	x0, [sp, #5216]
   1d2a0:	ldr	x0, [x0]
   1d2a4:	mov	x2, x0
   1d2a8:	mov	x1, #0x0                   	// #0
   1d2ac:	ldr	x0, [sp, #40]
   1d2b0:	bl	172f4 <grub_script_add_arglist>
   1d2b4:	str	x0, [sp, #56]
   1d2b8:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d2bc:	ldr	x0, [sp, #5216]
   1d2c0:	ldr	x0, [x0]
   1d2c4:	mov	x2, x0
   1d2c8:	mov	x1, #0x0                   	// #0
   1d2cc:	ldr	x0, [sp, #40]
   1d2d0:	bl	172f4 <grub_script_add_arglist>
   1d2d4:	str	x0, [sp, #56]
   1d2d8:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d2dc:	ldr	x0, [sp, #5216]
   1d2e0:	ldr	x0, [x0]
   1d2e4:	mov	x2, x0
   1d2e8:	mov	x1, #0x0                   	// #0
   1d2ec:	ldr	x0, [sp, #40]
   1d2f0:	bl	172f4 <grub_script_add_arglist>
   1d2f4:	str	x0, [sp, #56]
   1d2f8:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d2fc:	ldr	x0, [sp, #5216]
   1d300:	ldr	x0, [x0]
   1d304:	mov	x2, x0
   1d308:	mov	x1, #0x0                   	// #0
   1d30c:	ldr	x0, [sp, #40]
   1d310:	bl	172f4 <grub_script_add_arglist>
   1d314:	str	x0, [sp, #56]
   1d318:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d31c:	ldr	x0, [sp, #5216]
   1d320:	ldr	x0, [x0]
   1d324:	mov	x2, x0
   1d328:	mov	x1, #0x0                   	// #0
   1d32c:	ldr	x0, [sp, #40]
   1d330:	bl	172f4 <grub_script_add_arglist>
   1d334:	str	x0, [sp, #56]
   1d338:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d33c:	ldr	x0, [sp, #5216]
   1d340:	ldr	x0, [x0]
   1d344:	mov	x2, x0
   1d348:	mov	x1, #0x0                   	// #0
   1d34c:	ldr	x0, [sp, #40]
   1d350:	bl	172f4 <grub_script_add_arglist>
   1d354:	str	x0, [sp, #56]
   1d358:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d35c:	ldr	x0, [sp, #5216]
   1d360:	ldr	x0, [x0]
   1d364:	mov	x2, x0
   1d368:	mov	x1, #0x0                   	// #0
   1d36c:	ldr	x0, [sp, #40]
   1d370:	bl	172f4 <grub_script_add_arglist>
   1d374:	str	x0, [sp, #56]
   1d378:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d37c:	ldr	x0, [sp, #5216]
   1d380:	ldr	x0, [x0]
   1d384:	str	x0, [sp, #56]
   1d388:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d38c:	ldr	x0, [sp, #40]
   1d390:	ldr	x0, [x0, #40]
   1d394:	bl	1ae64 <grub_script_lexer_ref>
   1d398:	ldr	x0, [sp, #40]
   1d39c:	bl	1aeb4 <grub_script_lexer_record_start>
   1d3a0:	str	w0, [sp, #56]
   1d3a4:	ldr	x0, [sp, #40]
   1d3a8:	bl	17110 <grub_script_mem_record>
   1d3ac:	str	x0, [sp, #64]
   1d3b0:	ldr	x0, [sp, #40]
   1d3b4:	ldr	x0, [x0, #24]
   1d3b8:	str	x0, [sp, #72]
   1d3bc:	ldr	x0, [sp, #40]
   1d3c0:	str	xzr, [x0, #24]
   1d3c4:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d3c8:	ldr	x0, [sp, #5216]
   1d3cc:	sub	x0, x0, #0x48
   1d3d0:	ldr	x0, [x0, #16]
   1d3d4:	str	x0, [sp, #5184]
   1d3d8:	ldr	x0, [sp, #5216]
   1d3dc:	sub	x0, x0, #0x48
   1d3e0:	ldr	x0, [x0, #8]
   1d3e4:	mov	x1, x0
   1d3e8:	ldr	x0, [sp, #40]
   1d3ec:	bl	17138 <grub_script_mem_record_stop>
   1d3f0:	str	x0, [sp, #5120]
   1d3f4:	ldr	x0, [sp, #5216]
   1d3f8:	sub	x0, x0, #0x48
   1d3fc:	ldr	w0, [x0]
   1d400:	mov	w1, w0
   1d404:	ldr	x0, [sp, #40]
   1d408:	bl	1af60 <grub_script_lexer_record_stop>
   1d40c:	str	x0, [sp, #5112]
   1d410:	ldr	x0, [sp, #5112]
   1d414:	cmp	x0, #0x0
   1d418:	b.eq	1d42c <grub_script_yyparse+0x844>  // b.none
   1d41c:	mov	w1, #0x7d                  	// #125
   1d420:	ldr	x0, [sp, #5112]
   1d424:	bl	0 <grub_strrchr>
   1d428:	strb	wzr, [x0]
   1d42c:	ldr	x3, [sp, #5112]
   1d430:	mov	w2, #0x6                   	// #6
   1d434:	mov	x1, #0x0                   	// #0
   1d438:	ldr	x0, [sp, #40]
   1d43c:	bl	171ec <grub_script_arg_add>
   1d440:	str	x0, [sp, #56]
   1d444:	ldr	x0, [sp, #56]
   1d448:	cmp	x0, #0x0
   1d44c:	b.eq	1d478 <grub_script_yyparse+0x890>  // b.none
   1d450:	ldr	x0, [sp, #5216]
   1d454:	sub	x0, x0, #0x30
   1d458:	ldr	x0, [x0]
   1d45c:	ldr	x19, [sp, #56]
   1d460:	ldr	x1, [sp, #5120]
   1d464:	bl	17808 <grub_script_create>
   1d468:	str	x0, [x19, #16]
   1d46c:	ldr	x0, [x19, #16]
   1d470:	cmp	x0, #0x0
   1d474:	b.ne	1d484 <grub_script_yyparse+0x89c>  // b.any
   1d478:	ldr	x0, [sp, #5120]
   1d47c:	bl	17080 <grub_script_mem_free>
   1d480:	b	1d4f8 <grub_script_yyparse+0x910>
   1d484:	ldr	x0, [sp, #56]
   1d488:	ldr	x0, [x0, #16]
   1d48c:	ldr	x1, [sp, #40]
   1d490:	ldr	x1, [x1, #24]
   1d494:	str	x1, [x0, #32]
   1d498:	ldr	x0, [sp, #5216]
   1d49c:	sub	x0, x0, #0x48
   1d4a0:	ldr	x0, [x0, #16]
   1d4a4:	cmp	x0, #0x0
   1d4a8:	b.ne	1d4b4 <grub_script_yyparse+0x8cc>  // b.any
   1d4ac:	ldr	x0, [sp, #56]
   1d4b0:	ldr	x0, [x0, #16]
   1d4b4:	ldr	x1, [sp, #40]
   1d4b8:	str	x0, [x1, #24]
   1d4bc:	ldr	x0, [sp, #5184]
   1d4c0:	cmp	x0, #0x0
   1d4c4:	b.eq	1d4f8 <grub_script_yyparse+0x910>  // b.none
   1d4c8:	b	1d4d8 <grub_script_yyparse+0x8f0>
   1d4cc:	ldr	x0, [sp, #5184]
   1d4d0:	ldr	x0, [x0, #24]
   1d4d4:	str	x0, [sp, #5184]
   1d4d8:	ldr	x0, [sp, #5184]
   1d4dc:	ldr	x0, [x0, #24]
   1d4e0:	cmp	x0, #0x0
   1d4e4:	b.ne	1d4cc <grub_script_yyparse+0x8e4>  // b.any
   1d4e8:	ldr	x0, [sp, #56]
   1d4ec:	ldr	x1, [x0, #16]
   1d4f0:	ldr	x0, [sp, #5184]
   1d4f4:	str	x1, [x0, #24]
   1d4f8:	ldr	x0, [sp, #40]
   1d4fc:	ldr	x0, [x0, #40]
   1d500:	bl	1ae8c <grub_script_lexer_deref>
   1d504:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d508:	str	xzr, [sp, #56]
   1d50c:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d510:	ldr	x0, [sp, #5216]
   1d514:	ldr	x0, [x0]
   1d518:	str	x0, [sp, #56]
   1d51c:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d520:	str	xzr, [sp, #56]
   1d524:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d528:	ldr	x0, [sp, #5216]
   1d52c:	ldr	x0, [x0]
   1d530:	str	x0, [sp, #56]
   1d534:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d538:	ldr	x0, [sp, #5216]
   1d53c:	sub	x0, x0, #0x18
   1d540:	ldr	x0, [x0]
   1d544:	cmp	x0, #0x0
   1d548:	b.eq	1d5b0 <grub_script_yyparse+0x9c8>  // b.none
   1d54c:	ldr	x0, [sp, #5216]
   1d550:	ldr	x0, [x0]
   1d554:	cmp	x0, #0x0
   1d558:	b.eq	1d5b0 <grub_script_yyparse+0x9c8>  // b.none
   1d55c:	ldr	x0, [sp, #5216]
   1d560:	sub	x0, x0, #0x18
   1d564:	ldr	x0, [x0]
   1d568:	ldr	x1, [sp, #5216]
   1d56c:	ldr	x1, [x1]
   1d570:	str	x1, [x0]
   1d574:	ldr	x0, [sp, #5216]
   1d578:	sub	x0, x0, #0x18
   1d57c:	ldr	x0, [x0]
   1d580:	ldr	w2, [x0, #16]
   1d584:	ldr	x0, [sp, #5216]
   1d588:	ldr	x0, [x0]
   1d58c:	ldr	w1, [x0, #16]
   1d590:	ldr	x0, [sp, #5216]
   1d594:	sub	x0, x0, #0x18
   1d598:	ldr	x0, [x0]
   1d59c:	add	w1, w2, w1
   1d5a0:	str	w1, [x0, #16]
   1d5a4:	ldr	x0, [sp, #5216]
   1d5a8:	ldr	x0, [x0]
   1d5ac:	str	wzr, [x0, #16]
   1d5b0:	ldr	x0, [sp, #5216]
   1d5b4:	sub	x0, x0, #0x18
   1d5b8:	ldr	x0, [x0]
   1d5bc:	str	x0, [sp, #56]
   1d5c0:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d5c4:	ldr	x0, [sp, #5216]
   1d5c8:	sub	x0, x0, #0x18
   1d5cc:	ldr	x0, [x0]
   1d5d0:	str	x0, [sp, #5176]
   1d5d4:	ldr	x0, [sp, #5216]
   1d5d8:	ldr	x0, [x0]
   1d5dc:	cmp	x0, #0x0
   1d5e0:	b.eq	1d608 <grub_script_yyparse+0xa20>  // b.none
   1d5e4:	ldr	x0, [sp, #5216]
   1d5e8:	sub	x0, x0, #0x18
   1d5ec:	ldr	x1, [x0]
   1d5f0:	ldr	x0, [sp, #5216]
   1d5f4:	ldr	x0, [x0]
   1d5f8:	mov	x2, x0
   1d5fc:	ldr	x0, [sp, #40]
   1d600:	bl	172f4 <grub_script_add_arglist>
   1d604:	str	x0, [sp, #5176]
   1d608:	ldr	x0, [sp, #5216]
   1d60c:	sub	x0, x0, #0x30
   1d610:	ldr	x0, [x0]
   1d614:	cmp	x0, #0x0
   1d618:	b.eq	1d670 <grub_script_yyparse+0xa88>  // b.none
   1d61c:	ldr	x0, [sp, #5176]
   1d620:	cmp	x0, #0x0
   1d624:	b.eq	1d670 <grub_script_yyparse+0xa88>  // b.none
   1d628:	ldr	x0, [sp, #5216]
   1d62c:	sub	x0, x0, #0x30
   1d630:	ldr	x0, [x0]
   1d634:	ldr	x1, [sp, #5176]
   1d638:	str	x1, [x0]
   1d63c:	ldr	x0, [sp, #5216]
   1d640:	sub	x0, x0, #0x30
   1d644:	ldr	x0, [x0]
   1d648:	ldr	w2, [x0, #16]
   1d64c:	ldr	x0, [sp, #5176]
   1d650:	ldr	w1, [x0, #16]
   1d654:	ldr	x0, [sp, #5216]
   1d658:	sub	x0, x0, #0x30
   1d65c:	ldr	x0, [x0]
   1d660:	add	w1, w2, w1
   1d664:	str	w1, [x0, #16]
   1d668:	ldr	x0, [sp, #5176]
   1d66c:	str	wzr, [x0, #16]
   1d670:	ldr	x0, [sp, #5216]
   1d674:	sub	x0, x0, #0x30
   1d678:	ldr	x0, [x0]
   1d67c:	mov	x1, x0
   1d680:	ldr	x0, [sp, #40]
   1d684:	bl	17408 <grub_script_create_cmdline>
   1d688:	str	x0, [sp, #56]
   1d68c:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d690:	ldr	x0, [sp, #5216]
   1d694:	ldr	x0, [x0]
   1d698:	str	x0, [sp, #56]
   1d69c:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d6a0:	ldr	x0, [sp, #5216]
   1d6a4:	ldr	x0, [x0]
   1d6a8:	str	x0, [sp, #56]
   1d6ac:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d6b0:	ldr	x0, [sp, #5216]
   1d6b4:	ldr	x0, [x0]
   1d6b8:	str	x0, [sp, #56]
   1d6bc:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d6c0:	ldr	x0, [sp, #5216]
   1d6c4:	ldr	x0, [x0]
   1d6c8:	str	x0, [sp, #56]
   1d6cc:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d6d0:	ldr	x0, [sp, #5216]
   1d6d4:	ldr	x0, [x0]
   1d6d8:	str	x0, [sp, #56]
   1d6dc:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d6e0:	ldr	x0, [sp, #5216]
   1d6e4:	ldr	x0, [x0]
   1d6e8:	mov	x2, x0
   1d6ec:	mov	x1, #0x0                   	// #0
   1d6f0:	ldr	x0, [sp, #40]
   1d6f4:	bl	17700 <grub_script_append_cmd>
   1d6f8:	str	x0, [sp, #56]
   1d6fc:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d700:	ldr	x0, [sp, #5216]
   1d704:	sub	x0, x0, #0x30
   1d708:	ldr	x1, [x0]
   1d70c:	ldr	x0, [sp, #5216]
   1d710:	ldr	x0, [x0]
   1d714:	mov	x2, x0
   1d718:	ldr	x0, [sp, #40]
   1d71c:	bl	17700 <grub_script_append_cmd>
   1d720:	str	x0, [sp, #56]
   1d724:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d728:	ldr	x0, [sp, #40]
   1d72c:	ldr	x0, [x0, #40]
   1d730:	bl	1ae64 <grub_script_lexer_ref>
   1d734:	ldr	x0, [sp, #40]
   1d738:	bl	17110 <grub_script_mem_record>
   1d73c:	mov	x1, x0
   1d740:	ldr	x0, [sp, #40]
   1d744:	str	x1, [x0]
   1d748:	ldr	x0, [sp, #40]
   1d74c:	ldr	x0, [x0, #24]
   1d750:	str	x0, [sp, #72]
   1d754:	ldr	x0, [sp, #40]
   1d758:	str	xzr, [x0, #24]
   1d75c:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d760:	ldr	x0, [sp, #40]
   1d764:	ldr	x0, [x0]
   1d768:	mov	x1, x0
   1d76c:	ldr	x0, [sp, #40]
   1d770:	bl	17138 <grub_script_mem_record_stop>
   1d774:	mov	x1, x0
   1d778:	ldr	x0, [sp, #40]
   1d77c:	str	x1, [x0]
   1d780:	ldr	x0, [sp, #5216]
   1d784:	sub	x0, x0, #0x30
   1d788:	ldr	x2, [x0]
   1d78c:	ldr	x0, [sp, #40]
   1d790:	ldr	x0, [x0]
   1d794:	mov	x1, x0
   1d798:	mov	x0, x2
   1d79c:	bl	17808 <grub_script_create>
   1d7a0:	str	x0, [sp, #5128]
   1d7a4:	ldr	x0, [sp, #5128]
   1d7a8:	cmp	x0, #0x0
   1d7ac:	b.ne	1d7c0 <grub_script_yyparse+0xbd8>  // b.any
   1d7b0:	ldr	x0, [sp, #40]
   1d7b4:	ldr	x0, [x0]
   1d7b8:	bl	17080 <grub_script_mem_free>
   1d7bc:	b	1d7e4 <grub_script_yyparse+0xbfc>
   1d7c0:	ldr	x0, [sp, #40]
   1d7c4:	ldr	x1, [x0, #24]
   1d7c8:	ldr	x0, [sp, #5128]
   1d7cc:	str	x1, [x0, #32]
   1d7d0:	ldr	x0, [sp, #5216]
   1d7d4:	sub	x0, x0, #0x90
   1d7d8:	ldr	x0, [x0]
   1d7dc:	ldr	x1, [sp, #5128]
   1d7e0:	bl	1aae8 <grub_script_function_create>
   1d7e4:	ldr	x0, [sp, #5216]
   1d7e8:	sub	x0, x0, #0x78
   1d7ec:	ldr	x1, [x0, #16]
   1d7f0:	ldr	x0, [sp, #40]
   1d7f4:	str	x1, [x0, #24]
   1d7f8:	ldr	x0, [sp, #40]
   1d7fc:	ldr	x0, [x0, #40]
   1d800:	bl	1ae8c <grub_script_lexer_deref>
   1d804:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d808:	ldr	x0, [sp, #40]
   1d80c:	ldr	x0, [x0, #40]
   1d810:	bl	1ae64 <grub_script_lexer_ref>
   1d814:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d818:	ldr	x0, [sp, #5216]
   1d81c:	sub	x0, x0, #0x18
   1d820:	ldr	x0, [x0]
   1d824:	str	x0, [sp, #56]
   1d828:	ldr	x0, [sp, #40]
   1d82c:	ldr	x0, [x0, #40]
   1d830:	bl	1ae8c <grub_script_lexer_deref>
   1d834:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d838:	ldr	x0, [sp, #5216]
   1d83c:	sub	x0, x0, #0x60
   1d840:	ldr	x1, [x0]
   1d844:	ldr	x0, [sp, #5216]
   1d848:	sub	x0, x0, #0x18
   1d84c:	ldr	x0, [x0]
   1d850:	mov	x3, #0x0                   	// #0
   1d854:	mov	x2, x0
   1d858:	ldr	x0, [sp, #40]
   1d85c:	bl	174c0 <grub_script_create_cmdif>
   1d860:	str	x0, [sp, #56]
   1d864:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d868:	ldr	x0, [sp, #5216]
   1d86c:	sub	x0, x0, #0xa8
   1d870:	ldr	x1, [x0]
   1d874:	ldr	x0, [sp, #5216]
   1d878:	sub	x0, x0, #0x60
   1d87c:	ldr	x2, [x0]
   1d880:	ldr	x0, [sp, #5216]
   1d884:	sub	x0, x0, #0x18
   1d888:	ldr	x0, [x0]
   1d88c:	mov	x3, x0
   1d890:	ldr	x0, [sp, #40]
   1d894:	bl	174c0 <grub_script_create_cmdif>
   1d898:	str	x0, [sp, #56]
   1d89c:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d8a0:	ldr	x0, [sp, #5216]
   1d8a4:	sub	x0, x0, #0x90
   1d8a8:	ldr	x1, [x0]
   1d8ac:	ldr	x0, [sp, #5216]
   1d8b0:	sub	x0, x0, #0x48
   1d8b4:	ldr	x2, [x0]
   1d8b8:	ldr	x0, [sp, #5216]
   1d8bc:	ldr	x0, [x0]
   1d8c0:	mov	x3, x0
   1d8c4:	ldr	x0, [sp, #40]
   1d8c8:	bl	174c0 <grub_script_create_cmdif>
   1d8cc:	str	x0, [sp, #56]
   1d8d0:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d8d4:	ldr	x0, [sp, #40]
   1d8d8:	ldr	x0, [x0, #40]
   1d8dc:	bl	1ae64 <grub_script_lexer_ref>
   1d8e0:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d8e4:	ldr	x0, [sp, #5216]
   1d8e8:	sub	x0, x0, #0xc0
   1d8ec:	ldr	x1, [x0]
   1d8f0:	ldr	x0, [sp, #5216]
   1d8f4:	sub	x0, x0, #0x78
   1d8f8:	ldr	x2, [x0]
   1d8fc:	ldr	x0, [sp, #5216]
   1d900:	sub	x0, x0, #0x30
   1d904:	ldr	x0, [x0]
   1d908:	mov	x3, x0
   1d90c:	ldr	x0, [sp, #40]
   1d910:	bl	17598 <grub_script_create_cmdfor>
   1d914:	str	x0, [sp, #56]
   1d918:	ldr	x0, [sp, #40]
   1d91c:	ldr	x0, [x0, #40]
   1d920:	bl	1ae8c <grub_script_lexer_deref>
   1d924:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d928:	ldr	x0, [sp, #40]
   1d92c:	ldr	x0, [x0, #40]
   1d930:	bl	1ae64 <grub_script_lexer_ref>
   1d934:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d938:	ldr	x0, [sp, #5216]
   1d93c:	sub	x0, x0, #0x78
   1d940:	ldr	x1, [x0]
   1d944:	ldr	x0, [sp, #5216]
   1d948:	sub	x0, x0, #0x30
   1d94c:	ldr	x0, [x0]
   1d950:	mov	w3, #0x0                   	// #0
   1d954:	mov	x2, x0
   1d958:	ldr	x0, [sp, #40]
   1d95c:	bl	17670 <grub_script_create_cmdwhile>
   1d960:	str	x0, [sp, #56]
   1d964:	ldr	x0, [sp, #40]
   1d968:	ldr	x0, [x0, #40]
   1d96c:	bl	1ae8c <grub_script_lexer_deref>
   1d970:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d974:	ldr	x0, [sp, #40]
   1d978:	ldr	x0, [x0, #40]
   1d97c:	bl	1ae64 <grub_script_lexer_ref>
   1d980:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d984:	ldr	x0, [sp, #5216]
   1d988:	sub	x0, x0, #0x78
   1d98c:	ldr	x1, [x0]
   1d990:	ldr	x0, [sp, #5216]
   1d994:	sub	x0, x0, #0x30
   1d998:	ldr	x0, [x0]
   1d99c:	mov	w3, #0x1                   	// #1
   1d9a0:	mov	x2, x0
   1d9a4:	ldr	x0, [sp, #40]
   1d9a8:	bl	17670 <grub_script_create_cmdwhile>
   1d9ac:	str	x0, [sp, #56]
   1d9b0:	ldr	x0, [sp, #40]
   1d9b4:	ldr	x0, [x0, #40]
   1d9b8:	bl	1ae8c <grub_script_lexer_deref>
   1d9bc:	b	1d9c4 <grub_script_yyparse+0xddc>
   1d9c0:	nop
   1d9c4:	ldrsw	x1, [sp, #5192]
   1d9c8:	mov	x0, x1
   1d9cc:	lsl	x0, x0, #1
   1d9d0:	add	x0, x0, x1
   1d9d4:	lsl	x0, x0, #3
   1d9d8:	neg	x0, x0
   1d9dc:	ldr	x1, [sp, #5216]
   1d9e0:	add	x0, x1, x0
   1d9e4:	str	x0, [sp, #5216]
   1d9e8:	ldrsw	x0, [sp, #5192]
   1d9ec:	neg	x0, x0
   1d9f0:	ldr	x1, [sp, #5232]
   1d9f4:	add	x0, x1, x0
   1d9f8:	str	x0, [sp, #5232]
   1d9fc:	str	wzr, [sp, #5192]
   1da00:	ldr	x0, [sp, #5216]
   1da04:	add	x0, x0, #0x18
   1da08:	str	x0, [sp, #5216]
   1da0c:	ldr	x0, [sp, #5216]
   1da10:	mov	x3, x0
   1da14:	add	x2, sp, #0x38
   1da18:	ldp	x0, x1, [x2]
   1da1c:	stp	x0, x1, [x3]
   1da20:	ldr	x0, [x2, #16]
   1da24:	str	x0, [x3, #16]
   1da28:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1da2c:	add	x0, x0, #0x0
   1da30:	ldr	x1, [x0]
   1da34:	ldrsw	x0, [sp, #5204]
   1da38:	ldrsb	w0, [x1, x0]
   1da3c:	sub	w0, w0, #0x23
   1da40:	str	w0, [sp, #5108]
   1da44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1da48:	add	x0, x0, #0x0
   1da4c:	ldr	x1, [x0]
   1da50:	ldrsw	x0, [sp, #5108]
   1da54:	ldrsb	w0, [x1, x0]
   1da58:	mov	w1, w0
   1da5c:	ldr	x0, [sp, #5232]
   1da60:	ldrsb	w0, [x0]
   1da64:	add	w0, w1, w0
   1da68:	str	w0, [sp, #5104]
   1da6c:	ldr	w0, [sp, #5104]
   1da70:	cmp	w0, #0x0
   1da74:	b.lt	1dac0 <grub_script_yyparse+0xed8>  // b.tstop
   1da78:	ldr	w0, [sp, #5104]
   1da7c:	cmp	w0, #0xdb
   1da80:	b.gt	1dac0 <grub_script_yyparse+0xed8>
   1da84:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1da88:	add	x0, x0, #0x0
   1da8c:	ldr	x1, [x0]
   1da90:	ldrsw	x0, [sp, #5104]
   1da94:	ldrsb	w1, [x1, x0]
   1da98:	ldr	x0, [sp, #5232]
   1da9c:	ldrsb	w0, [x0]
   1daa0:	cmp	w1, w0
   1daa4:	b.ne	1dac0 <grub_script_yyparse+0xed8>  // b.any
   1daa8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1daac:	add	x0, x0, #0x0
   1dab0:	ldr	x1, [x0]
   1dab4:	ldrsw	x0, [sp, #5104]
   1dab8:	ldrsb	w0, [x1, x0]
   1dabc:	b	1dad4 <grub_script_yyparse+0xeec>
   1dac0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dac4:	add	x0, x0, #0x0
   1dac8:	ldr	x1, [x0]
   1dacc:	ldrsw	x0, [sp, #5108]
   1dad0:	ldrsb	w0, [x1, x0]
   1dad4:	str	w0, [sp, #5252]
   1dad8:	b	1cc4c <grub_script_yyparse+0x64>
   1dadc:	nop
   1dae0:	ldr	w0, [sp, #5260]
   1dae4:	cmn	w0, #0x2
   1dae8:	b.eq	1db24 <grub_script_yyparse+0xf3c>  // b.none
   1daec:	ldr	w0, [sp, #5260]
   1daf0:	cmp	w0, #0x0
   1daf4:	b.lt	1db1c <grub_script_yyparse+0xf34>  // b.tstop
   1daf8:	ldr	w0, [sp, #5260]
   1dafc:	cmp	w0, #0x121
   1db00:	b.gt	1db1c <grub_script_yyparse+0xf34>
   1db04:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1db08:	add	x0, x0, #0x0
   1db0c:	ldr	x1, [x0]
   1db10:	ldrsw	x0, [sp, #5260]
   1db14:	ldrsb	w0, [x1, x0]
   1db18:	b	1db28 <grub_script_yyparse+0xf40>
   1db1c:	mov	w0, #0x2                   	// #2
   1db20:	b	1db28 <grub_script_yyparse+0xf40>
   1db24:	mov	w0, #0xfffffffe            	// #-2
   1db28:	str	w0, [sp, #5196]
   1db2c:	ldr	w0, [sp, #5248]
   1db30:	cmp	w0, #0x0
   1db34:	b.ne	1db58 <grub_script_yyparse+0xf70>  // b.any
   1db38:	ldr	w0, [sp, #5256]
   1db3c:	add	w0, w0, #0x1
   1db40:	str	w0, [sp, #5256]
   1db44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1db48:	add	x0, x0, #0x0
   1db4c:	ldr	x1, [x0]
   1db50:	ldr	x0, [sp, #40]
   1db54:	bl	1b820 <grub_script_yyerror>
   1db58:	ldr	w0, [sp, #5248]
   1db5c:	cmp	w0, #0x3
   1db60:	b.ne	1dbac <grub_script_yyparse+0xfc4>  // b.any
   1db64:	ldr	w0, [sp, #5260]
   1db68:	cmp	w0, #0x0
   1db6c:	b.gt	1db80 <grub_script_yyparse+0xf98>
   1db70:	ldr	w0, [sp, #5260]
   1db74:	cmp	w0, #0x0
   1db78:	b.ne	1dbac <grub_script_yyparse+0xfc4>  // b.any
   1db7c:	b	1dcfc <grub_script_yyparse+0x1114>
   1db80:	add	x0, sp, #0x1, lsl #12
   1db84:	add	x0, x0, #0x3d8
   1db88:	ldr	x3, [sp, #40]
   1db8c:	mov	x2, x0
   1db90:	ldr	w1, [sp, #5196]
   1db94:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1db98:	add	x0, x0, #0x0
   1db9c:	ldr	x0, [x0]
   1dba0:	bl	1cba0 <grub_menu_fini+0x50>
   1dba4:	mov	w0, #0xfffffffe            	// #-2
   1dba8:	str	w0, [sp, #5260]
   1dbac:	nop
   1dbb0:	mov	w0, #0x3                   	// #3
   1dbb4:	str	w0, [sp, #5248]
   1dbb8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dbbc:	add	x0, x0, #0x0
   1dbc0:	ldr	x0, [x0]
   1dbc4:	ldrsw	x1, [sp, #5252]
   1dbc8:	ldrsh	w0, [x0, x1, lsl #1]
   1dbcc:	str	w0, [sp, #5204]
   1dbd0:	ldr	w0, [sp, #5204]
   1dbd4:	cmn	w0, #0x36
   1dbd8:	b.eq	1dc40 <grub_script_yyparse+0x1058>  // b.none
   1dbdc:	ldr	w0, [sp, #5204]
   1dbe0:	add	w0, w0, #0x1
   1dbe4:	str	w0, [sp, #5204]
   1dbe8:	ldr	w0, [sp, #5204]
   1dbec:	cmp	w0, #0x0
   1dbf0:	b.lt	1dc40 <grub_script_yyparse+0x1058>  // b.tstop
   1dbf4:	ldr	w0, [sp, #5204]
   1dbf8:	cmp	w0, #0xdb
   1dbfc:	b.gt	1dc40 <grub_script_yyparse+0x1058>
   1dc00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dc04:	add	x0, x0, #0x0
   1dc08:	ldr	x1, [x0]
   1dc0c:	ldrsw	x0, [sp, #5204]
   1dc10:	ldrsb	w0, [x1, x0]
   1dc14:	cmp	w0, #0x1
   1dc18:	b.ne	1dc40 <grub_script_yyparse+0x1058>  // b.any
   1dc1c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dc20:	add	x0, x0, #0x0
   1dc24:	ldr	x1, [x0]
   1dc28:	ldrsw	x0, [sp, #5204]
   1dc2c:	ldrsb	w0, [x1, x0]
   1dc30:	str	w0, [sp, #5204]
   1dc34:	ldr	w0, [sp, #5204]
   1dc38:	cmp	w0, #0x0
   1dc3c:	b.gt	1dca8 <grub_script_yyparse+0x10c0>
   1dc40:	ldr	x1, [sp, #5232]
   1dc44:	ldr	x0, [sp, #5240]
   1dc48:	cmp	x1, x0
   1dc4c:	b.eq	1dcf8 <grub_script_yyparse+0x1110>  // b.none
   1dc50:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dc54:	add	x0, x0, #0x0
   1dc58:	ldr	x1, [x0]
   1dc5c:	ldrsw	x0, [sp, #5252]
   1dc60:	ldrsb	w0, [x1, x0]
   1dc64:	ldr	x3, [sp, #40]
   1dc68:	ldr	x2, [sp, #5216]
   1dc6c:	mov	w1, w0
   1dc70:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dc74:	add	x0, x0, #0x0
   1dc78:	ldr	x0, [x0]
   1dc7c:	bl	1cba0 <grub_menu_fini+0x50>
   1dc80:	ldr	x0, [sp, #5216]
   1dc84:	sub	x0, x0, #0x18
   1dc88:	str	x0, [sp, #5216]
   1dc8c:	ldr	x0, [sp, #5232]
   1dc90:	sub	x0, x0, #0x1
   1dc94:	str	x0, [sp, #5232]
   1dc98:	ldr	x0, [sp, #5232]
   1dc9c:	ldrsb	w0, [x0]
   1dca0:	str	w0, [sp, #5252]
   1dca4:	b	1dbb8 <grub_script_yyparse+0xfd0>
   1dca8:	nop
   1dcac:	ldr	x0, [sp, #5216]
   1dcb0:	add	x0, x0, #0x18
   1dcb4:	str	x0, [sp, #5216]
   1dcb8:	ldr	x0, [sp, #5216]
   1dcbc:	mov	x3, x0
   1dcc0:	add	x2, sp, #0x1, lsl #12
   1dcc4:	add	x2, x2, #0x3d8
   1dcc8:	ldp	x0, x1, [x2]
   1dccc:	stp	x0, x1, [x3]
   1dcd0:	ldr	x0, [x2, #16]
   1dcd4:	str	x0, [x3, #16]
   1dcd8:	ldr	w0, [sp, #5204]
   1dcdc:	str	w0, [sp, #5252]
   1dce0:	b	1cc4c <grub_script_yyparse+0x64>
   1dce4:	nop
   1dce8:	str	wzr, [sp, #5200]
   1dcec:	b	1dd30 <grub_script_yyparse+0x1148>
   1dcf0:	nop
   1dcf4:	b	1dcfc <grub_script_yyparse+0x1114>
   1dcf8:	nop
   1dcfc:	mov	w0, #0x1                   	// #1
   1dd00:	str	w0, [sp, #5200]
   1dd04:	b	1dd30 <grub_script_yyparse+0x1148>
   1dd08:	nop
   1dd0c:	b	1dd14 <grub_script_yyparse+0x112c>
   1dd10:	nop
   1dd14:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dd18:	add	x0, x0, #0x0
   1dd1c:	ldr	x1, [x0]
   1dd20:	ldr	x0, [sp, #40]
   1dd24:	bl	1b820 <grub_script_yyerror>
   1dd28:	mov	w0, #0x2                   	// #2
   1dd2c:	str	w0, [sp, #5200]
   1dd30:	ldr	w0, [sp, #5260]
   1dd34:	cmn	w0, #0x2
   1dd38:	b.eq	1dd98 <grub_script_yyparse+0x11b0>  // b.none
   1dd3c:	ldr	w0, [sp, #5260]
   1dd40:	cmp	w0, #0x0
   1dd44:	b.lt	1dd6c <grub_script_yyparse+0x1184>  // b.tstop
   1dd48:	ldr	w0, [sp, #5260]
   1dd4c:	cmp	w0, #0x121
   1dd50:	b.gt	1dd6c <grub_script_yyparse+0x1184>
   1dd54:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dd58:	add	x0, x0, #0x0
   1dd5c:	ldr	x1, [x0]
   1dd60:	ldrsw	x0, [sp, #5260]
   1dd64:	ldrsb	w0, [x1, x0]
   1dd68:	b	1dd70 <grub_script_yyparse+0x1188>
   1dd6c:	mov	w0, #0x2                   	// #2
   1dd70:	str	w0, [sp, #5196]
   1dd74:	add	x0, sp, #0x1, lsl #12
   1dd78:	add	x0, x0, #0x3d8
   1dd7c:	ldr	x3, [sp, #40]
   1dd80:	mov	x2, x0
   1dd84:	ldr	w1, [sp, #5196]
   1dd88:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dd8c:	add	x0, x0, #0x0
   1dd90:	ldr	x0, [x0]
   1dd94:	bl	1cba0 <grub_menu_fini+0x50>
   1dd98:	ldrsw	x1, [sp, #5192]
   1dd9c:	mov	x0, x1
   1dda0:	lsl	x0, x0, #1
   1dda4:	add	x0, x0, x1
   1dda8:	lsl	x0, x0, #3
   1ddac:	neg	x0, x0
   1ddb0:	ldr	x1, [sp, #5216]
   1ddb4:	add	x0, x1, x0
   1ddb8:	str	x0, [sp, #5216]
   1ddbc:	ldrsw	x0, [sp, #5192]
   1ddc0:	neg	x0, x0
   1ddc4:	ldr	x1, [sp, #5232]
   1ddc8:	add	x0, x1, x0
   1ddcc:	str	x0, [sp, #5232]
   1ddd0:	b	1de28 <grub_script_yyparse+0x1240>
   1ddd4:	ldr	x0, [sp, #5232]
   1ddd8:	ldrsb	w0, [x0]
   1dddc:	mov	w2, w0
   1dde0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1dde4:	add	x0, x0, #0x0
   1dde8:	ldr	x1, [x0]
   1ddec:	sxtw	x0, w2
   1ddf0:	ldrsb	w0, [x1, x0]
   1ddf4:	ldr	x3, [sp, #40]
   1ddf8:	ldr	x2, [sp, #5216]
   1ddfc:	mov	w1, w0
   1de00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1de04:	add	x0, x0, #0x0
   1de08:	ldr	x0, [x0]
   1de0c:	bl	1cba0 <grub_menu_fini+0x50>
   1de10:	ldr	x0, [sp, #5216]
   1de14:	sub	x0, x0, #0x18
   1de18:	str	x0, [sp, #5216]
   1de1c:	ldr	x0, [sp, #5232]
   1de20:	sub	x0, x0, #0x1
   1de24:	str	x0, [sp, #5232]
   1de28:	ldr	x1, [sp, #5232]
   1de2c:	ldr	x0, [sp, #5240]
   1de30:	cmp	x1, x0
   1de34:	b.ne	1ddd4 <grub_script_yyparse+0x11ec>  // b.any
   1de38:	add	x0, sp, #0x1, lsl #12
   1de3c:	add	x0, x0, #0x310
   1de40:	ldr	x1, [sp, #5240]
   1de44:	cmp	x1, x0
   1de48:	b.eq	1de54 <grub_script_yyparse+0x126c>  // b.none
   1de4c:	ldr	x0, [sp, #5240]
   1de50:	bl	0 <grub_free>
   1de54:	ldr	w0, [sp, #5200]
   1de58:	ldr	x19, [sp, #16]
   1de5c:	ldp	x29, x30, [sp]
   1de60:	mov	x12, #0x1490                	// #5264
   1de64:	add	sp, sp, x12
   1de68:	ret
   1de6c:	nop
	...
   1df00:	stp	x29, x30, [sp, #-32]!
   1df04:	mov	x29, sp
   1df08:	str	x0, [sp, #24]
   1df0c:	ldr	x0, [sp, #24]
   1df10:	bl	0 <grub_strlen>
   1df14:	ldp	x29, x30, [sp], #32
   1df18:	ret

000000000001df1c <yylex>:
   1df1c:	stp	x29, x30, [sp, #-160]!
   1df20:	mov	x29, sp
   1df24:	str	x19, [sp, #16]
   1df28:	str	x0, [sp, #40]
   1df2c:	str	x1, [sp, #32]
   1df30:	ldr	x0, [sp, #32]
   1df34:	str	x0, [sp, #120]
   1df38:	ldr	x0, [sp, #120]
   1df3c:	ldr	x1, [sp, #40]
   1df40:	str	x1, [x0, #8336]
   1df44:	ldr	x0, [sp, #120]
   1df48:	ldr	w0, [x0, #72]
   1df4c:	cmp	w0, #0x0
   1df50:	b.ne	1e024 <yylex+0x108>  // b.any
   1df54:	ldr	x0, [sp, #120]
   1df58:	mov	w1, #0x1                   	// #1
   1df5c:	str	w1, [x0, #72]
   1df60:	ldr	x0, [sp, #120]
   1df64:	ldr	w0, [x0, #76]
   1df68:	cmp	w0, #0x0
   1df6c:	b.ne	1df7c <yylex+0x60>  // b.any
   1df70:	ldr	x0, [sp, #120]
   1df74:	mov	w1, #0x1                   	// #1
   1df78:	str	w1, [x0, #76]
   1df7c:	ldr	x0, [sp, #120]
   1df80:	ldr	x0, [x0, #8]
   1df84:	cmp	x0, #0x0
   1df88:	b.ne	1df94 <yylex+0x78>  // b.any
   1df8c:	ldr	x0, [sp, #120]
   1df90:	str	xzr, [x0, #8]
   1df94:	ldr	x0, [sp, #120]
   1df98:	ldr	x0, [x0, #16]
   1df9c:	cmp	x0, #0x0
   1dfa0:	b.ne	1dfac <yylex+0x90>  // b.any
   1dfa4:	ldr	x0, [sp, #120]
   1dfa8:	str	xzr, [x0, #16]
   1dfac:	ldr	x0, [sp, #120]
   1dfb0:	ldr	x0, [x0, #40]
   1dfb4:	cmp	x0, #0x0
   1dfb8:	b.eq	1dfe0 <yylex+0xc4>  // b.none
   1dfbc:	ldr	x0, [sp, #120]
   1dfc0:	ldr	x1, [x0, #40]
   1dfc4:	ldr	x0, [sp, #120]
   1dfc8:	ldr	x0, [x0, #24]
   1dfcc:	lsl	x0, x0, #3
   1dfd0:	add	x0, x1, x0
   1dfd4:	ldr	x0, [x0]
   1dfd8:	cmp	x0, #0x0
   1dfdc:	b.ne	1e01c <yylex+0x100>  // b.any
   1dfe0:	ldr	x0, [sp, #32]
   1dfe4:	bl	20648 <yypop_buffer_state+0x11c>
   1dfe8:	ldr	x0, [sp, #120]
   1dfec:	ldr	x3, [x0, #8]
   1dff0:	ldr	x0, [sp, #120]
   1dff4:	ldr	x1, [x0, #40]
   1dff8:	ldr	x0, [sp, #120]
   1dffc:	ldr	x0, [x0, #24]
   1e000:	lsl	x0, x0, #3
   1e004:	add	x19, x1, x0
   1e008:	ldr	x2, [sp, #32]
   1e00c:	mov	w1, #0x4000                	// #16384
   1e010:	mov	x0, x3
   1e014:	bl	20018 <yy_create_buffer>
   1e018:	str	x0, [x19]
   1e01c:	ldr	x0, [sp, #32]
   1e020:	bl	1ff60 <yy_switch_to_buffer+0x13c>
   1e024:	ldr	x0, [sp, #120]
   1e028:	ldr	x0, [x0, #64]
   1e02c:	str	x0, [sp, #144]
   1e030:	ldr	x0, [sp, #120]
   1e034:	ldrb	w1, [x0, #48]
   1e038:	ldr	x0, [sp, #144]
   1e03c:	strb	w1, [x0]
   1e040:	ldr	x0, [sp, #144]
   1e044:	str	x0, [sp, #136]
   1e048:	ldr	x0, [sp, #120]
   1e04c:	ldr	w0, [x0, #76]
   1e050:	str	w0, [sp, #156]
   1e054:	b	1e05c <yylex+0x140>
   1e058:	nop
   1e05c:	ldr	x0, [sp, #144]
   1e060:	ldrb	w0, [x0]
   1e064:	mov	w2, w0
   1e068:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e06c:	add	x0, x0, #0x0
   1e070:	ldr	x1, [x0]
   1e074:	sxtw	x0, w2
   1e078:	ldrb	w0, [x1, x0]
   1e07c:	strb	w0, [sp, #131]
   1e080:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e084:	add	x0, x0, #0x0
   1e088:	ldr	x0, [x0]
   1e08c:	ldrsw	x1, [sp, #156]
   1e090:	ldrsh	w0, [x0, x1, lsl #1]
   1e094:	cmp	w0, #0x0
   1e098:	b.eq	1e0f8 <yylex+0x1dc>  // b.none
   1e09c:	ldr	x0, [sp, #120]
   1e0a0:	ldr	w1, [sp, #156]
   1e0a4:	str	w1, [x0, #104]
   1e0a8:	ldr	x0, [sp, #120]
   1e0ac:	ldr	x1, [sp, #144]
   1e0b0:	str	x1, [x0, #112]
   1e0b4:	b	1e0f8 <yylex+0x1dc>
   1e0b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e0bc:	add	x0, x0, #0x0
   1e0c0:	ldr	x0, [x0]
   1e0c4:	ldrsw	x1, [sp, #156]
   1e0c8:	ldrsh	w0, [x0, x1, lsl #1]
   1e0cc:	str	w0, [sp, #156]
   1e0d0:	ldr	w0, [sp, #156]
   1e0d4:	cmp	w0, #0xbb
   1e0d8:	b.le	1e0f8 <yylex+0x1dc>
   1e0dc:	ldrb	w2, [sp, #131]
   1e0e0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e0e4:	add	x0, x0, #0x0
   1e0e8:	ldr	x1, [x0]
   1e0ec:	sxtw	x0, w2
   1e0f0:	ldrb	w0, [x1, x0]
   1e0f4:	strb	w0, [sp, #131]
   1e0f8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e0fc:	add	x0, x0, #0x0
   1e100:	ldr	x0, [x0]
   1e104:	ldrsw	x1, [sp, #156]
   1e108:	ldrsh	w0, [x0, x1, lsl #1]
   1e10c:	mov	w1, w0
   1e110:	ldrb	w0, [sp, #131]
   1e114:	add	w1, w1, w0
   1e118:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e11c:	add	x0, x0, #0x0
   1e120:	ldr	x0, [x0]
   1e124:	sxtw	x1, w1
   1e128:	ldrsh	w0, [x0, x1, lsl #1]
   1e12c:	mov	w1, w0
   1e130:	ldr	w0, [sp, #156]
   1e134:	cmp	w0, w1
   1e138:	b.ne	1e0b8 <yylex+0x19c>  // b.any
   1e13c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e140:	add	x0, x0, #0x0
   1e144:	ldr	x0, [x0]
   1e148:	ldrsw	x1, [sp, #156]
   1e14c:	ldrsh	w0, [x0, x1, lsl #1]
   1e150:	mov	w1, w0
   1e154:	ldrb	w0, [sp, #131]
   1e158:	add	w1, w1, w0
   1e15c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e160:	add	x0, x0, #0x0
   1e164:	ldr	x0, [x0]
   1e168:	sxtw	x1, w1
   1e16c:	ldrsh	w0, [x0, x1, lsl #1]
   1e170:	str	w0, [sp, #156]
   1e174:	ldr	x0, [sp, #144]
   1e178:	add	x0, x0, #0x1
   1e17c:	str	x0, [sp, #144]
   1e180:	ldr	w0, [sp, #156]
   1e184:	cmp	w0, #0xbb
   1e188:	b.ne	1e058 <yylex+0x13c>  // b.any
   1e18c:	ldr	x0, [sp, #120]
   1e190:	ldr	x0, [x0, #112]
   1e194:	str	x0, [sp, #144]
   1e198:	ldr	x0, [sp, #120]
   1e19c:	ldr	w0, [x0, #104]
   1e1a0:	str	w0, [sp, #156]
   1e1a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e1a8:	add	x0, x0, #0x0
   1e1ac:	ldr	x0, [x0]
   1e1b0:	ldrsw	x1, [sp, #156]
   1e1b4:	ldrsh	w0, [x0, x1, lsl #1]
   1e1b8:	str	w0, [sp, #132]
   1e1bc:	ldr	x0, [sp, #120]
   1e1c0:	ldr	x1, [sp, #136]
   1e1c4:	str	x1, [x0, #8320]
   1e1c8:	ldr	x1, [sp, #144]
   1e1cc:	ldr	x0, [sp, #136]
   1e1d0:	sub	x0, x1, x0
   1e1d4:	mov	w1, w0
   1e1d8:	ldr	x0, [sp, #120]
   1e1dc:	str	w1, [x0, #56]
   1e1e0:	ldr	x0, [sp, #144]
   1e1e4:	ldrb	w1, [x0]
   1e1e8:	ldr	x0, [sp, #120]
   1e1ec:	strb	w1, [x0, #48]
   1e1f0:	ldr	x0, [sp, #144]
   1e1f4:	strb	wzr, [x0]
   1e1f8:	ldr	x0, [sp, #120]
   1e1fc:	ldr	w1, [x0, #56]
   1e200:	mov	w0, #0x1fff                	// #8191
   1e204:	cmp	w1, w0
   1e208:	b.le	1e26c <yylex+0x350>
   1e20c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e210:	add	x0, x0, #0x0
   1e214:	ldr	x0, [x0]
   1e218:	str	x0, [sp, #96]
   1e21c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e220:	add	x0, x0, #0x0
   1e224:	ldr	x0, [x0]
   1e228:	ldr	x1, [x0]
   1e22c:	ldr	x0, [sp, #96]
   1e230:	blr	x1
   1e234:	mov	x19, x0
   1e238:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e23c:	add	x0, x0, #0x0
   1e240:	ldr	x0, [x0]
   1e244:	str	x0, [sp, #104]
   1e248:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e24c:	add	x0, x0, #0x0
   1e250:	ldr	x0, [x0]
   1e254:	ldr	x1, [x0]
   1e258:	ldr	x0, [sp, #104]
   1e25c:	blr	x1
   1e260:	mov	x1, x0
   1e264:	mov	x0, x19
   1e268:	bl	0 <grub_printf>
   1e26c:	ldr	x0, [sp, #120]
   1e270:	add	x4, x0, #0x80
   1e274:	ldr	x0, [sp, #120]
   1e278:	ldr	x1, [x0, #8320]
   1e27c:	ldr	x0, [sp, #120]
   1e280:	ldr	w0, [x0, #56]
   1e284:	add	w0, w0, #0x1
   1e288:	ldr	x3, [sp, #32]
   1e28c:	mov	w2, w0
   1e290:	mov	x0, x4
   1e294:	bl	213f0 <yylex_destroy+0xf4>
   1e298:	ldr	x0, [sp, #120]
   1e29c:	ldr	x1, [sp, #144]
   1e2a0:	str	x1, [x0, #64]
   1e2a4:	ldr	w0, [sp, #132]
   1e2a8:	cmp	w0, #0x4b
   1e2ac:	b.hi	1f220 <yylex+0x1304>  // b.pmore
   1e2b0:	adrp	x1, 0 <grub_normal_free_menu-0x168>
   1e2b4:	add	x1, x1, #0x0
   1e2b8:	ldr	x1, [x1]
   1e2bc:	ldr	w0, [x1, w0, uxtw #2]
   1e2c0:	adr	x1, 1e2cc <yylex+0x3b0>
   1e2c4:	add	x0, x1, w0, sxtw #2
   1e2c8:	br	x0
   1e2cc:	ldr	x0, [sp, #120]
   1e2d0:	ldrb	w1, [x0, #48]
   1e2d4:	ldr	x0, [sp, #144]
   1e2d8:	strb	w1, [x0]
   1e2dc:	ldr	x0, [sp, #120]
   1e2e0:	ldr	x0, [x0, #112]
   1e2e4:	str	x0, [sp, #144]
   1e2e8:	ldr	x0, [sp, #120]
   1e2ec:	ldr	w0, [x0, #104]
   1e2f0:	str	w0, [sp, #156]
   1e2f4:	b	1e1a4 <yylex+0x288>
   1e2f8:	ldr	x0, [sp, #120]
   1e2fc:	ldr	x2, [x0]
   1e300:	ldr	x0, [sp, #120]
   1e304:	add	x0, x0, #0x80
   1e308:	mov	x1, x0
   1e30c:	mov	x0, x2
   1e310:	bl	1b070 <grub_script_lexer_record>
   1e314:	b	1f2a0 <yylex+0x1384>
   1e318:	ldr	x0, [sp, #120]
   1e31c:	ldrb	w1, [x0, #48]
   1e320:	ldr	x0, [sp, #144]
   1e324:	strb	w1, [x0]
   1e328:	ldr	x0, [sp, #144]
   1e32c:	sub	x0, x0, #0x1
   1e330:	str	x0, [sp, #144]
   1e334:	ldr	x0, [sp, #120]
   1e338:	ldr	x1, [sp, #144]
   1e33c:	str	x1, [x0, #64]
   1e340:	ldr	x0, [sp, #120]
   1e344:	ldr	x1, [sp, #136]
   1e348:	str	x1, [x0, #8320]
   1e34c:	ldr	x1, [sp, #144]
   1e350:	ldr	x0, [sp, #136]
   1e354:	sub	x0, x1, x0
   1e358:	mov	w1, w0
   1e35c:	ldr	x0, [sp, #120]
   1e360:	str	w1, [x0, #56]
   1e364:	ldr	x0, [sp, #144]
   1e368:	ldrb	w1, [x0]
   1e36c:	ldr	x0, [sp, #120]
   1e370:	strb	w1, [x0, #48]
   1e374:	ldr	x0, [sp, #144]
   1e378:	strb	wzr, [x0]
   1e37c:	ldr	x0, [sp, #120]
   1e380:	ldr	w1, [x0, #56]
   1e384:	mov	w0, #0x1fff                	// #8191
   1e388:	cmp	w1, w0
   1e38c:	b.le	1e3f0 <yylex+0x4d4>
   1e390:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e394:	add	x0, x0, #0x0
   1e398:	ldr	x0, [x0]
   1e39c:	str	x0, [sp, #80]
   1e3a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e3a4:	add	x0, x0, #0x0
   1e3a8:	ldr	x0, [x0]
   1e3ac:	ldr	x1, [x0]
   1e3b0:	ldr	x0, [sp, #80]
   1e3b4:	blr	x1
   1e3b8:	mov	x19, x0
   1e3bc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e3c0:	add	x0, x0, #0x0
   1e3c4:	ldr	x0, [x0]
   1e3c8:	str	x0, [sp, #88]
   1e3cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1e3d0:	add	x0, x0, #0x0
   1e3d4:	ldr	x0, [x0]
   1e3d8:	ldr	x1, [x0]
   1e3dc:	ldr	x0, [sp, #88]
   1e3e0:	blr	x1
   1e3e4:	mov	x1, x0
   1e3e8:	mov	x0, x19
   1e3ec:	bl	0 <grub_printf>
   1e3f0:	ldr	x0, [sp, #120]
   1e3f4:	add	x4, x0, #0x80
   1e3f8:	ldr	x0, [sp, #120]
   1e3fc:	ldr	x1, [x0, #8320]
   1e400:	ldr	x0, [sp, #120]
   1e404:	ldr	w0, [x0, #56]
   1e408:	add	w0, w0, #0x1
   1e40c:	ldr	x3, [sp, #32]
   1e410:	mov	w2, w0
   1e414:	mov	x0, x4
   1e418:	bl	213f0 <yylex_destroy+0xf4>
   1e41c:	ldr	x0, [sp, #120]
   1e420:	ldr	x1, [sp, #144]
   1e424:	str	x1, [x0, #64]
   1e428:	ldr	x0, [sp, #120]
   1e42c:	ldr	x2, [x0]
   1e430:	ldr	x0, [sp, #120]
   1e434:	add	x0, x0, #0x80
   1e438:	mov	x1, x0
   1e43c:	mov	x0, x2
   1e440:	bl	1b070 <grub_script_lexer_record>
   1e444:	b	1f2a0 <yylex+0x1384>
   1e448:	ldr	x0, [sp, #120]
   1e44c:	ldr	x2, [x0]
   1e450:	ldr	x0, [sp, #120]
   1e454:	add	x0, x0, #0x80
   1e458:	mov	x1, x0
   1e45c:	mov	x0, x2
   1e460:	bl	1b070 <grub_script_lexer_record>
   1e464:	mov	w0, #0x103                 	// #259
   1e468:	b	1f2a4 <yylex+0x1388>
   1e46c:	ldr	x0, [sp, #120]
   1e470:	ldr	x2, [x0]
   1e474:	ldr	x0, [sp, #120]
   1e478:	add	x0, x0, #0x80
   1e47c:	mov	x1, x0
   1e480:	mov	x0, x2
   1e484:	bl	1b070 <grub_script_lexer_record>
   1e488:	mov	w0, #0x105                 	// #261
   1e48c:	b	1f2a4 <yylex+0x1388>
   1e490:	ldr	x0, [sp, #120]
   1e494:	ldr	x2, [x0]
   1e498:	ldr	x0, [sp, #120]
   1e49c:	add	x0, x0, #0x80
   1e4a0:	mov	x1, x0
   1e4a4:	mov	x0, x2
   1e4a8:	bl	1b070 <grub_script_lexer_record>
   1e4ac:	mov	w0, #0x104                 	// #260
   1e4b0:	b	1f2a4 <yylex+0x1388>
   1e4b4:	ldr	x0, [sp, #120]
   1e4b8:	ldr	x2, [x0]
   1e4bc:	ldr	x0, [sp, #120]
   1e4c0:	add	x0, x0, #0x80
   1e4c4:	mov	x1, x0
   1e4c8:	mov	x0, x2
   1e4cc:	bl	1b070 <grub_script_lexer_record>
   1e4d0:	mov	w0, #0x106                 	// #262
   1e4d4:	b	1f2a4 <yylex+0x1388>
   1e4d8:	ldr	x0, [sp, #120]
   1e4dc:	ldr	x2, [x0]
   1e4e0:	ldr	x0, [sp, #120]
   1e4e4:	add	x0, x0, #0x80
   1e4e8:	mov	x1, x0
   1e4ec:	mov	x0, x2
   1e4f0:	bl	1b070 <grub_script_lexer_record>
   1e4f4:	mov	w0, #0x107                 	// #263
   1e4f8:	b	1f2a4 <yylex+0x1388>
   1e4fc:	ldr	x0, [sp, #120]
   1e500:	ldr	x2, [x0]
   1e504:	ldr	x0, [sp, #120]
   1e508:	add	x0, x0, #0x80
   1e50c:	mov	x1, x0
   1e510:	mov	x0, x2
   1e514:	bl	1b070 <grub_script_lexer_record>
   1e518:	mov	w0, #0x108                 	// #264
   1e51c:	b	1f2a4 <yylex+0x1388>
   1e520:	ldr	x0, [sp, #120]
   1e524:	ldr	x2, [x0]
   1e528:	ldr	x0, [sp, #120]
   1e52c:	add	x0, x0, #0x80
   1e530:	mov	x1, x0
   1e534:	mov	x0, x2
   1e538:	bl	1b070 <grub_script_lexer_record>
   1e53c:	mov	w0, #0x109                 	// #265
   1e540:	b	1f2a4 <yylex+0x1388>
   1e544:	ldr	x0, [sp, #120]
   1e548:	ldr	x2, [x0]
   1e54c:	ldr	x0, [sp, #120]
   1e550:	add	x0, x0, #0x80
   1e554:	mov	x1, x0
   1e558:	mov	x0, x2
   1e55c:	bl	1b070 <grub_script_lexer_record>
   1e560:	mov	w0, #0x10f                 	// #271
   1e564:	b	1f2a4 <yylex+0x1388>
   1e568:	ldr	x0, [sp, #120]
   1e56c:	ldr	x2, [x0]
   1e570:	ldr	x0, [sp, #120]
   1e574:	add	x0, x0, #0x80
   1e578:	mov	x1, x0
   1e57c:	mov	x0, x2
   1e580:	bl	1b070 <grub_script_lexer_record>
   1e584:	mov	w0, #0x110                 	// #272
   1e588:	b	1f2a4 <yylex+0x1388>
   1e58c:	ldr	x0, [sp, #120]
   1e590:	ldr	x2, [x0]
   1e594:	ldr	x0, [sp, #120]
   1e598:	add	x0, x0, #0x80
   1e59c:	mov	x1, x0
   1e5a0:	mov	x0, x2
   1e5a4:	bl	1b070 <grub_script_lexer_record>
   1e5a8:	mov	w0, #0x10a                 	// #266
   1e5ac:	b	1f2a4 <yylex+0x1388>
   1e5b0:	ldr	x0, [sp, #120]
   1e5b4:	ldr	x2, [x0]
   1e5b8:	ldr	x0, [sp, #120]
   1e5bc:	add	x0, x0, #0x80
   1e5c0:	mov	x1, x0
   1e5c4:	mov	x0, x2
   1e5c8:	bl	1b070 <grub_script_lexer_record>
   1e5cc:	mov	w0, #0x10b                 	// #267
   1e5d0:	b	1f2a4 <yylex+0x1388>
   1e5d4:	ldr	x0, [sp, #120]
   1e5d8:	ldr	x2, [x0]
   1e5dc:	ldr	x0, [sp, #120]
   1e5e0:	add	x0, x0, #0x80
   1e5e4:	mov	x1, x0
   1e5e8:	mov	x0, x2
   1e5ec:	bl	1b070 <grub_script_lexer_record>
   1e5f0:	mov	w0, #0x10d                 	// #269
   1e5f4:	b	1f2a4 <yylex+0x1388>
   1e5f8:	ldr	x0, [sp, #120]
   1e5fc:	ldr	x2, [x0]
   1e600:	ldr	x0, [sp, #120]
   1e604:	add	x0, x0, #0x80
   1e608:	mov	x1, x0
   1e60c:	mov	x0, x2
   1e610:	bl	1b070 <grub_script_lexer_record>
   1e614:	mov	w0, #0x10e                 	// #270
   1e618:	b	1f2a4 <yylex+0x1388>
   1e61c:	ldr	x0, [sp, #120]
   1e620:	ldr	x2, [x0]
   1e624:	ldr	x0, [sp, #120]
   1e628:	add	x0, x0, #0x80
   1e62c:	mov	x1, x0
   1e630:	mov	x0, x2
   1e634:	bl	1b070 <grub_script_lexer_record>
   1e638:	mov	w0, #0x111                 	// #273
   1e63c:	b	1f2a4 <yylex+0x1388>
   1e640:	ldr	x0, [sp, #120]
   1e644:	ldr	x2, [x0]
   1e648:	ldr	x0, [sp, #120]
   1e64c:	add	x0, x0, #0x80
   1e650:	mov	x1, x0
   1e654:	mov	x0, x2
   1e658:	bl	1b070 <grub_script_lexer_record>
   1e65c:	mov	w0, #0x112                 	// #274
   1e660:	b	1f2a4 <yylex+0x1388>
   1e664:	ldr	x0, [sp, #120]
   1e668:	ldr	x2, [x0]
   1e66c:	ldr	x0, [sp, #120]
   1e670:	add	x0, x0, #0x80
   1e674:	mov	x1, x0
   1e678:	mov	x0, x2
   1e67c:	bl	1b070 <grub_script_lexer_record>
   1e680:	mov	w0, #0x113                 	// #275
   1e684:	b	1f2a4 <yylex+0x1388>
   1e688:	ldr	x0, [sp, #120]
   1e68c:	ldr	x2, [x0]
   1e690:	ldr	x0, [sp, #120]
   1e694:	add	x0, x0, #0x80
   1e698:	mov	x1, x0
   1e69c:	mov	x0, x2
   1e6a0:	bl	1b070 <grub_script_lexer_record>
   1e6a4:	mov	w0, #0x114                 	// #276
   1e6a8:	b	1f2a4 <yylex+0x1388>
   1e6ac:	ldr	x0, [sp, #120]
   1e6b0:	ldr	x2, [x0]
   1e6b4:	ldr	x0, [sp, #120]
   1e6b8:	add	x0, x0, #0x80
   1e6bc:	mov	x1, x0
   1e6c0:	mov	x0, x2
   1e6c4:	bl	1b070 <grub_script_lexer_record>
   1e6c8:	mov	w0, #0x115                 	// #277
   1e6cc:	b	1f2a4 <yylex+0x1388>
   1e6d0:	ldr	x0, [sp, #120]
   1e6d4:	ldr	x2, [x0]
   1e6d8:	ldr	x0, [sp, #120]
   1e6dc:	add	x0, x0, #0x80
   1e6e0:	mov	x1, x0
   1e6e4:	mov	x0, x2
   1e6e8:	bl	1b070 <grub_script_lexer_record>
   1e6ec:	mov	w0, #0x116                 	// #278
   1e6f0:	b	1f2a4 <yylex+0x1388>
   1e6f4:	ldr	x0, [sp, #120]
   1e6f8:	ldr	x2, [x0]
   1e6fc:	ldr	x0, [sp, #120]
   1e700:	add	x0, x0, #0x80
   1e704:	mov	x1, x0
   1e708:	mov	x0, x2
   1e70c:	bl	1b070 <grub_script_lexer_record>
   1e710:	mov	w0, #0x117                 	// #279
   1e714:	b	1f2a4 <yylex+0x1388>
   1e718:	ldr	x0, [sp, #120]
   1e71c:	ldr	x2, [x0]
   1e720:	ldr	x0, [sp, #120]
   1e724:	add	x0, x0, #0x80
   1e728:	mov	x1, x0
   1e72c:	mov	x0, x2
   1e730:	bl	1b070 <grub_script_lexer_record>
   1e734:	mov	w0, #0x118                 	// #280
   1e738:	b	1f2a4 <yylex+0x1388>
   1e73c:	ldr	x0, [sp, #120]
   1e740:	ldr	x2, [x0]
   1e744:	ldr	x0, [sp, #120]
   1e748:	add	x0, x0, #0x80
   1e74c:	mov	x1, x0
   1e750:	mov	x0, x2
   1e754:	bl	1b070 <grub_script_lexer_record>
   1e758:	mov	w0, #0x119                 	// #281
   1e75c:	b	1f2a4 <yylex+0x1388>
   1e760:	ldr	x0, [sp, #120]
   1e764:	ldr	x2, [x0]
   1e768:	ldr	x0, [sp, #120]
   1e76c:	add	x0, x0, #0x80
   1e770:	mov	x1, x0
   1e774:	mov	x0, x2
   1e778:	bl	1b070 <grub_script_lexer_record>
   1e77c:	mov	w0, #0x11a                 	// #282
   1e780:	b	1f2a4 <yylex+0x1388>
   1e784:	ldr	x0, [sp, #120]
   1e788:	ldr	x2, [x0]
   1e78c:	ldr	x0, [sp, #120]
   1e790:	add	x0, x0, #0x80
   1e794:	mov	x1, x0
   1e798:	mov	x0, x2
   1e79c:	bl	1b070 <grub_script_lexer_record>
   1e7a0:	mov	w0, #0x11b                 	// #283
   1e7a4:	b	1f2a4 <yylex+0x1388>
   1e7a8:	ldr	x0, [sp, #120]
   1e7ac:	ldr	x2, [x0]
   1e7b0:	ldr	x0, [sp, #120]
   1e7b4:	add	x0, x0, #0x80
   1e7b8:	mov	x1, x0
   1e7bc:	mov	x0, x2
   1e7c0:	bl	1b070 <grub_script_lexer_record>
   1e7c4:	mov	w0, #0x11c                 	// #284
   1e7c8:	b	1f2a4 <yylex+0x1388>
   1e7cc:	ldr	x0, [sp, #120]
   1e7d0:	ldr	x2, [x0]
   1e7d4:	ldr	x0, [sp, #120]
   1e7d8:	add	x0, x0, #0x80
   1e7dc:	mov	x1, x0
   1e7e0:	mov	x0, x2
   1e7e4:	bl	1b070 <grub_script_lexer_record>
   1e7e8:	mov	w0, #0x11d                 	// #285
   1e7ec:	b	1f2a4 <yylex+0x1388>
   1e7f0:	ldr	x0, [sp, #120]
   1e7f4:	ldr	x2, [x0]
   1e7f8:	ldr	x0, [sp, #120]
   1e7fc:	add	x0, x0, #0x80
   1e800:	mov	x1, x0
   1e804:	mov	x0, x2
   1e808:	bl	1b070 <grub_script_lexer_record>
   1e80c:	mov	w0, #0x11e                 	// #286
   1e810:	b	1f2a4 <yylex+0x1388>
   1e814:	ldr	x0, [sp, #120]
   1e818:	ldr	x2, [x0]
   1e81c:	ldr	x0, [sp, #120]
   1e820:	add	x0, x0, #0x80
   1e824:	mov	x1, x0
   1e828:	mov	x0, x2
   1e82c:	bl	1b070 <grub_script_lexer_record>
   1e830:	mov	w0, #0x11f                 	// #287
   1e834:	b	1f2a4 <yylex+0x1388>
   1e838:	ldr	x0, [sp, #120]
   1e83c:	add	x0, x0, #0x80
   1e840:	ldr	x1, [sp, #32]
   1e844:	bl	21658 <yywrap+0x1f8>
   1e848:	cmp	w0, #0x0
   1e84c:	b.eq	1f28c <yylex+0x1370>  // b.none
   1e850:	mov	w0, #0x102                 	// #258
   1e854:	b	1f2a4 <yylex+0x1388>
   1e858:	ldr	x0, [sp, #120]
   1e85c:	ldr	x0, [x0, #64]
   1e860:	add	x1, x0, #0x1
   1e864:	ldr	x0, [sp, #120]
   1e868:	ldr	x2, [x0, #40]
   1e86c:	ldr	x0, [sp, #120]
   1e870:	ldr	x0, [x0, #24]
   1e874:	lsl	x0, x0, #3
   1e878:	add	x0, x2, x0
   1e87c:	ldr	x0, [x0]
   1e880:	ldr	x2, [x0, #8]
   1e884:	ldr	x0, [sp, #120]
   1e888:	ldr	w0, [x0, #52]
   1e88c:	sxtw	x0, w0
   1e890:	add	x0, x0, #0x1
   1e894:	add	x0, x2, x0
   1e898:	cmp	x1, x0
   1e89c:	b.ne	1e8c0 <yylex+0x9a4>  // b.any
   1e8a0:	ldr	x0, [sp, #120]
   1e8a4:	add	x0, x0, #0x80
   1e8a8:	ldr	x1, [sp, #32]
   1e8ac:	bl	21658 <yywrap+0x1f8>
   1e8b0:	cmp	w0, #0x0
   1e8b4:	b.eq	1f294 <yylex+0x1378>  // b.none
   1e8b8:	mov	w0, #0x102                 	// #258
   1e8bc:	b	1f2a4 <yylex+0x1388>
   1e8c0:	ldr	x0, [sp, #120]
   1e8c4:	ldr	x2, [x0]
   1e8c8:	ldr	x0, [sp, #120]
   1e8cc:	add	x0, x0, #0x80
   1e8d0:	mov	x1, x0
   1e8d4:	mov	x0, x2
   1e8d8:	bl	1b070 <grub_script_lexer_record>
   1e8dc:	ldr	x0, [sp, #120]
   1e8e0:	ldr	x0, [x0, #40]
   1e8e4:	cmp	x0, #0x0
   1e8e8:	b.eq	1e90c <yylex+0x9f0>  // b.none
   1e8ec:	ldr	x0, [sp, #120]
   1e8f0:	ldr	x1, [x0, #40]
   1e8f4:	ldr	x0, [sp, #120]
   1e8f8:	ldr	x0, [x0, #24]
   1e8fc:	lsl	x0, x0, #3
   1e900:	add	x0, x1, x0
   1e904:	ldr	x0, [x0]
   1e908:	b	1e910 <yylex+0x9f4>
   1e90c:	mov	x0, #0x0                   	// #0
   1e910:	ldr	x1, [sp, #32]
   1e914:	bl	203dc <yypush_buffer_state>
   1e918:	ldr	x0, [sp, #120]
   1e91c:	add	x0, x0, #0x80
   1e920:	ldr	x1, [sp, #32]
   1e924:	bl	215f0 <yywrap+0x190>
   1e928:	cmp	w0, #0x0
   1e92c:	b.eq	1e940 <yylex+0xa24>  // b.none
   1e930:	ldr	x0, [sp, #32]
   1e934:	bl	2052c <yypop_buffer_state>
   1e938:	mov	w0, #0x121                 	// #289
   1e93c:	b	1f2a4 <yylex+0x1388>
   1e940:	ldr	x0, [sp, #120]
   1e944:	ldr	x0, [x0]
   1e948:	ldr	x0, [x0, #40]
   1e94c:	mov	w1, #0x1                   	// #1
   1e950:	str	w1, [x0, #76]
   1e954:	b	1f294 <yylex+0x1378>
   1e958:	ldr	x0, [sp, #120]
   1e95c:	ldr	x2, [x0]
   1e960:	ldr	x0, [sp, #120]
   1e964:	add	x0, x0, #0x80
   1e968:	mov	x1, x0
   1e96c:	mov	x0, x2
   1e970:	bl	1b070 <grub_script_lexer_record>
   1e974:	mov	w0, #0x120                 	// #288
   1e978:	b	1f2a4 <yylex+0x1388>
   1e97c:	ldr	x0, [sp, #120]
   1e980:	ldr	x2, [x0]
   1e984:	ldr	x0, [sp, #120]
   1e988:	add	x0, x0, #0x80
   1e98c:	mov	x1, x0
   1e990:	mov	x0, x2
   1e994:	bl	1b070 <grub_script_lexer_record>
   1e998:	ldr	x0, [sp, #120]
   1e99c:	ldr	x0, [x0, #40]
   1e9a0:	cmp	x0, #0x0
   1e9a4:	b.eq	1e9c8 <yylex+0xaac>  // b.none
   1e9a8:	ldr	x0, [sp, #120]
   1e9ac:	ldr	x1, [x0, #40]
   1e9b0:	ldr	x0, [sp, #120]
   1e9b4:	ldr	x0, [x0, #24]
   1e9b8:	lsl	x0, x0, #3
   1e9bc:	add	x0, x1, x0
   1e9c0:	ldr	x0, [x0]
   1e9c4:	b	1e9cc <yylex+0xab0>
   1e9c8:	mov	x0, #0x0                   	// #0
   1e9cc:	ldr	x1, [sp, #32]
   1e9d0:	bl	203dc <yypush_buffer_state>
   1e9d4:	ldr	x0, [sp, #120]
   1e9d8:	add	x0, x0, #0x80
   1e9dc:	ldr	x1, [sp, #32]
   1e9e0:	bl	215f0 <yywrap+0x190>
   1e9e4:	cmp	w0, #0x0
   1e9e8:	b.eq	1e9fc <yylex+0xae0>  // b.none
   1e9ec:	ldr	x0, [sp, #32]
   1e9f0:	bl	2052c <yypop_buffer_state>
   1e9f4:	mov	w0, #0x121                 	// #289
   1e9f8:	b	1f2a4 <yylex+0x1388>
   1e9fc:	ldr	x0, [sp, #120]
   1ea00:	ldr	x0, [x0]
   1ea04:	ldr	x0, [x0, #40]
   1ea08:	mov	w1, #0x1                   	// #1
   1ea0c:	str	w1, [x0, #76]
   1ea10:	b	1f2a0 <yylex+0x1384>
   1ea14:	ldr	x0, [sp, #120]
   1ea18:	ldr	x2, [x0]
   1ea1c:	ldr	x0, [sp, #120]
   1ea20:	add	x0, x0, #0x80
   1ea24:	mov	x1, x0
   1ea28:	mov	x0, x2
   1ea2c:	bl	1b820 <grub_script_yyerror>
   1ea30:	mov	w0, #0x102                 	// #258
   1ea34:	b	1f2a4 <yylex+0x1388>
   1ea38:	ldr	x0, [sp, #120]
   1ea3c:	ldr	x3, [x0]
   1ea40:	ldr	x0, [sp, #120]
   1ea44:	add	x1, x0, #0x80
   1ea48:	ldr	x0, [sp, #120]
   1ea4c:	ldr	w0, [x0, #56]
   1ea50:	mov	w2, w0
   1ea54:	mov	x0, x3
   1ea58:	bl	214a4 <yywrap+0x44>
   1ea5c:	b	1f2a0 <yylex+0x1384>
   1ea60:	ldr	x1, [sp, #32]
   1ea64:	mov	w0, #0x2                   	// #2
   1ea68:	bl	20be8 <yy_scan_bytes+0x1c8>
   1ea6c:	ldr	x0, [sp, #120]
   1ea70:	ldr	x0, [x0]
   1ea74:	ldr	x0, [x0, #40]
   1ea78:	mov	w1, #0x1                   	// #1
   1ea7c:	str	w1, [x0, #72]
   1ea80:	mov	w0, #0x121                 	// #289
   1ea84:	b	1f2a4 <yylex+0x1388>
   1ea88:	ldr	x1, [sp, #32]
   1ea8c:	mov	w0, #0x4                   	// #4
   1ea90:	bl	20be8 <yy_scan_bytes+0x1c8>
   1ea94:	ldr	x0, [sp, #120]
   1ea98:	ldr	x0, [x0]
   1ea9c:	ldr	x0, [x0, #40]
   1eaa0:	mov	w1, #0x1                   	// #1
   1eaa4:	str	w1, [x0, #72]
   1eaa8:	mov	w0, #0x121                 	// #289
   1eaac:	b	1f2a4 <yylex+0x1388>
   1eab0:	ldr	x1, [sp, #32]
   1eab4:	mov	w0, #0x3                   	// #3
   1eab8:	bl	20be8 <yy_scan_bytes+0x1c8>
   1eabc:	ldr	x0, [sp, #120]
   1eac0:	ldr	x0, [x0]
   1eac4:	ldr	x0, [x0, #40]
   1eac8:	mov	w1, #0x2                   	// #2
   1eacc:	str	w1, [x0, #72]
   1ead0:	mov	w0, #0x121                 	// #289
   1ead4:	b	1f2a4 <yylex+0x1388>
   1ead8:	ldr	x1, [sp, #32]
   1eadc:	mov	w0, #0x5                   	// #5
   1eae0:	bl	20be8 <yy_scan_bytes+0x1c8>
   1eae4:	ldr	x0, [sp, #120]
   1eae8:	ldr	x0, [x0]
   1eaec:	ldr	x0, [x0, #40]
   1eaf0:	mov	w1, #0x1                   	// #1
   1eaf4:	str	w1, [x0, #72]
   1eaf8:	mov	w0, #0x121                 	// #289
   1eafc:	b	1f2a4 <yylex+0x1388>
   1eb00:	ldr	x0, [sp, #120]
   1eb04:	ldr	x3, [x0]
   1eb08:	ldr	x0, [sp, #120]
   1eb0c:	add	x1, x0, #0x80
   1eb10:	ldr	x0, [sp, #120]
   1eb14:	ldr	w0, [x0, #56]
   1eb18:	mov	w2, w0
   1eb1c:	mov	x0, x3
   1eb20:	bl	214a4 <yywrap+0x44>
   1eb24:	b	1f2a0 <yylex+0x1384>
   1eb28:	ldr	x0, [sp, #32]
   1eb2c:	bl	20d78 <yy_scan_bytes+0x358>
   1eb30:	ldr	x0, [sp, #32]
   1eb34:	bl	2052c <yypop_buffer_state>
   1eb38:	ldr	x0, [sp, #120]
   1eb3c:	ldr	x0, [x0]
   1eb40:	ldr	x0, [x0, #40]
   1eb44:	str	wzr, [x0, #76]
   1eb48:	ldr	x0, [sp, #120]
   1eb4c:	ldr	x0, [x0]
   1eb50:	ldr	x0, [x0, #40]
   1eb54:	mov	w1, #0x1                   	// #1
   1eb58:	str	w1, [x0, #48]
   1eb5c:	ldr	x0, [sp, #120]
   1eb60:	ldr	x0, [x0]
   1eb64:	ldr	x0, [x0, #40]
   1eb68:	mov	w1, #0x1                   	// #1
   1eb6c:	str	w1, [x0, #72]
   1eb70:	mov	w0, #0x121                 	// #289
   1eb74:	b	1f2a4 <yylex+0x1388>
   1eb78:	ldr	x0, [sp, #120]
   1eb7c:	ldr	x3, [x0]
   1eb80:	ldr	x0, [sp, #120]
   1eb84:	add	x1, x0, #0x80
   1eb88:	ldr	x0, [sp, #120]
   1eb8c:	ldr	w0, [x0, #56]
   1eb90:	mov	w2, w0
   1eb94:	mov	x0, x3
   1eb98:	bl	214a4 <yywrap+0x44>
   1eb9c:	ldr	x0, [sp, #32]
   1eba0:	bl	20d78 <yy_scan_bytes+0x358>
   1eba4:	ldr	x0, [sp, #120]
   1eba8:	ldr	w0, [x0, #76]
   1ebac:	sub	w0, w0, #0x3
   1ebb0:	cmp	w0, #0x1
   1ebb4:	b.hi	1ebd0 <yylex+0xcb4>  // b.pmore
   1ebb8:	ldr	x0, [sp, #120]
   1ebbc:	ldr	x0, [x0]
   1ebc0:	ldr	x0, [x0, #40]
   1ebc4:	str	wzr, [x0, #72]
   1ebc8:	mov	w0, #0x121                 	// #289
   1ebcc:	b	1f2a4 <yylex+0x1388>
   1ebd0:	ldr	x0, [sp, #120]
   1ebd4:	ldr	x0, [x0]
   1ebd8:	ldr	x0, [x0, #40]
   1ebdc:	mov	w1, #0x3                   	// #3
   1ebe0:	str	w1, [x0, #72]
   1ebe4:	mov	w0, #0x121                 	// #289
   1ebe8:	b	1f2a4 <yylex+0x1388>
   1ebec:	ldr	x0, [sp, #120]
   1ebf0:	ldr	w0, [x0, #56]
   1ebf4:	sub	w0, w0, #0x1
   1ebf8:	ldr	x1, [sp, #120]
   1ebfc:	sxtw	x0, w0
   1ec00:	add	x0, x1, x0
   1ec04:	strb	wzr, [x0, #128]
   1ec08:	ldr	x0, [sp, #120]
   1ec0c:	ldr	x3, [x0]
   1ec10:	ldr	x0, [sp, #120]
   1ec14:	add	x0, x0, #0x80
   1ec18:	add	x1, x0, #0x1
   1ec1c:	ldr	x0, [sp, #120]
   1ec20:	ldr	w0, [x0, #56]
   1ec24:	sub	w0, w0, #0x2
   1ec28:	mov	w2, w0
   1ec2c:	mov	x0, x3
   1ec30:	bl	214a4 <yywrap+0x44>
   1ec34:	ldr	x0, [sp, #32]
   1ec38:	bl	20d78 <yy_scan_bytes+0x358>
   1ec3c:	ldr	x0, [sp, #120]
   1ec40:	ldr	w0, [x0, #76]
   1ec44:	sub	w0, w0, #0x3
   1ec48:	cmp	w0, #0x1
   1ec4c:	b.hi	1ec68 <yylex+0xd4c>  // b.pmore
   1ec50:	ldr	x0, [sp, #120]
   1ec54:	ldr	x0, [x0]
   1ec58:	ldr	x0, [x0, #40]
   1ec5c:	str	wzr, [x0, #72]
   1ec60:	mov	w0, #0x121                 	// #289
   1ec64:	b	1f2a4 <yylex+0x1388>
   1ec68:	ldr	x0, [sp, #120]
   1ec6c:	ldr	x0, [x0]
   1ec70:	ldr	x0, [x0, #40]
   1ec74:	mov	w1, #0x3                   	// #3
   1ec78:	str	w1, [x0, #72]
   1ec7c:	mov	w0, #0x121                 	// #289
   1ec80:	b	1f2a4 <yylex+0x1388>
   1ec84:	mov	w0, #0x102                 	// #258
   1ec88:	b	1f2a4 <yylex+0x1388>
   1ec8c:	ldr	x0, [sp, #32]
   1ec90:	bl	20d78 <yy_scan_bytes+0x358>
   1ec94:	ldr	x0, [sp, #120]
   1ec98:	ldr	x0, [x0]
   1ec9c:	ldr	x0, [x0, #40]
   1eca0:	mov	w1, #0x5                   	// #5
   1eca4:	str	w1, [x0, #72]
   1eca8:	mov	w0, #0x121                 	// #289
   1ecac:	b	1f2a4 <yylex+0x1388>
   1ecb0:	ldr	x0, [sp, #120]
   1ecb4:	ldr	x3, [x0]
   1ecb8:	ldr	x0, [sp, #120]
   1ecbc:	add	x1, x0, #0x80
   1ecc0:	ldr	x0, [sp, #120]
   1ecc4:	ldr	w0, [x0, #56]
   1ecc8:	mov	w2, w0
   1eccc:	mov	x0, x3
   1ecd0:	bl	214a4 <yywrap+0x44>
   1ecd4:	b	1f2a0 <yylex+0x1384>
   1ecd8:	ldr	x0, [sp, #120]
   1ecdc:	ldr	x3, [x0]
   1ece0:	mov	w2, #0x1                   	// #1
   1ece4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ece8:	add	x0, x0, #0x0
   1ecec:	ldr	x1, [x0]
   1ecf0:	mov	x0, x3
   1ecf4:	bl	214a4 <yywrap+0x44>
   1ecf8:	b	1f2a0 <yylex+0x1384>
   1ecfc:	ldr	x0, [sp, #120]
   1ed00:	ldr	x3, [x0]
   1ed04:	mov	w2, #0x1                   	// #1
   1ed08:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ed0c:	add	x0, x0, #0x0
   1ed10:	ldr	x1, [x0]
   1ed14:	mov	x0, x3
   1ed18:	bl	214a4 <yywrap+0x44>
   1ed1c:	b	1f2a0 <yylex+0x1384>
   1ed20:	ldr	x0, [sp, #120]
   1ed24:	ldr	x3, [x0]
   1ed28:	mov	w2, #0x1                   	// #1
   1ed2c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ed30:	add	x0, x0, #0x0
   1ed34:	ldr	x1, [x0]
   1ed38:	mov	x0, x3
   1ed3c:	bl	214a4 <yywrap+0x44>
   1ed40:	b	1f2a0 <yylex+0x1384>
   1ed44:	ldr	x0, [sp, #120]
   1ed48:	ldr	x3, [x0]
   1ed4c:	ldr	x0, [sp, #120]
   1ed50:	add	x1, x0, #0x80
   1ed54:	ldr	x0, [sp, #120]
   1ed58:	ldr	w0, [x0, #56]
   1ed5c:	mov	w2, w0
   1ed60:	mov	x0, x3
   1ed64:	bl	214a4 <yywrap+0x44>
   1ed68:	b	1f2a0 <yylex+0x1384>
   1ed6c:	ldr	x0, [sp, #32]
   1ed70:	bl	20d78 <yy_scan_bytes+0x358>
   1ed74:	ldr	x0, [sp, #120]
   1ed78:	ldr	x0, [x0]
   1ed7c:	ldr	x0, [x0, #40]
   1ed80:	mov	w1, #0x4                   	// #4
   1ed84:	str	w1, [x0, #72]
   1ed88:	mov	w0, #0x121                 	// #289
   1ed8c:	b	1f2a4 <yylex+0x1388>
   1ed90:	ldr	x1, [sp, #32]
   1ed94:	mov	w0, #0x5                   	// #5
   1ed98:	bl	20be8 <yy_scan_bytes+0x1c8>
   1ed9c:	ldr	x0, [sp, #120]
   1eda0:	ldr	x0, [x0]
   1eda4:	ldr	x0, [x0, #40]
   1eda8:	mov	w1, #0x4                   	// #4
   1edac:	str	w1, [x0, #72]
   1edb0:	mov	w0, #0x121                 	// #289
   1edb4:	b	1f2a4 <yylex+0x1388>
   1edb8:	ldr	x0, [sp, #120]
   1edbc:	ldr	x3, [x0]
   1edc0:	ldr	x0, [sp, #120]
   1edc4:	add	x1, x0, #0x80
   1edc8:	ldr	x0, [sp, #120]
   1edcc:	ldr	w0, [x0, #56]
   1edd0:	mov	w2, w0
   1edd4:	mov	x0, x3
   1edd8:	bl	214a4 <yywrap+0x44>
   1eddc:	b	1f2a0 <yylex+0x1384>
   1ede0:	ldr	x0, [sp, #120]
   1ede4:	ldr	x3, [x0]
   1ede8:	mov	w2, #0x2                   	// #2
   1edec:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1edf0:	add	x0, x0, #0x0
   1edf4:	ldr	x1, [x0]
   1edf8:	mov	x0, x3
   1edfc:	bl	214a4 <yywrap+0x44>
   1ee00:	b	1f2a0 <yylex+0x1384>
   1ee04:	ldr	x0, [sp, #120]
   1ee08:	ldr	x3, [x0]
   1ee0c:	mov	w2, #0x1                   	// #1
   1ee10:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ee14:	add	x0, x0, #0x0
   1ee18:	ldr	x1, [x0]
   1ee1c:	mov	x0, x3
   1ee20:	bl	214a4 <yywrap+0x44>
   1ee24:	b	1f2a0 <yylex+0x1384>
   1ee28:	ldr	x0, [sp, #120]
   1ee2c:	ldr	x3, [x0]
   1ee30:	ldr	x0, [sp, #120]
   1ee34:	add	x1, x0, #0x80
   1ee38:	ldr	x0, [sp, #120]
   1ee3c:	ldr	w0, [x0, #56]
   1ee40:	mov	w2, w0
   1ee44:	mov	x0, x3
   1ee48:	bl	214a4 <yywrap+0x44>
   1ee4c:	b	1f2a0 <yylex+0x1384>
   1ee50:	ldr	x0, [sp, #32]
   1ee54:	bl	20d78 <yy_scan_bytes+0x358>
   1ee58:	ldr	x0, [sp, #120]
   1ee5c:	ldr	x0, [x0]
   1ee60:	ldr	x0, [x0, #40]
   1ee64:	mov	w1, #0x2                   	// #2
   1ee68:	str	w1, [x0, #72]
   1ee6c:	mov	w0, #0x121                 	// #289
   1ee70:	b	1f2a4 <yylex+0x1388>
   1ee74:	ldr	x0, [sp, #120]
   1ee78:	ldr	x3, [x0]
   1ee7c:	mov	w2, #0x1                   	// #1
   1ee80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ee84:	add	x0, x0, #0x0
   1ee88:	ldr	x1, [x0]
   1ee8c:	mov	x0, x3
   1ee90:	bl	214a4 <yywrap+0x44>
   1ee94:	b	1f2a0 <yylex+0x1384>
   1ee98:	ldr	x0, [sp, #120]
   1ee9c:	ldr	x3, [x0]
   1eea0:	ldr	x0, [sp, #120]
   1eea4:	add	x1, x0, #0x80
   1eea8:	ldr	x0, [sp, #120]
   1eeac:	ldr	w0, [x0, #56]
   1eeb0:	mov	w2, w0
   1eeb4:	mov	x0, x3
   1eeb8:	bl	214a4 <yywrap+0x44>
   1eebc:	b	1f2a0 <yylex+0x1384>
   1eec0:	ldr	x0, [sp, #32]
   1eec4:	bl	2052c <yypop_buffer_state>
   1eec8:	ldr	x0, [sp, #120]
   1eecc:	ldr	x0, [x0]
   1eed0:	ldr	x0, [x0, #40]
   1eed4:	mov	w1, #0x1                   	// #1
   1eed8:	str	w1, [x0, #40]
   1eedc:	mov	w0, #0x0                   	// #0
   1eee0:	b	1f2a4 <yylex+0x1388>
   1eee4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1eee8:	add	x0, x0, #0x0
   1eeec:	ldr	x0, [x0]
   1eef0:	str	x0, [sp, #64]
   1eef4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1eef8:	add	x0, x0, #0x0
   1eefc:	ldr	x0, [x0]
   1ef00:	ldr	x1, [x0]
   1ef04:	ldr	x0, [sp, #64]
   1ef08:	blr	x1
   1ef0c:	mov	x19, x0
   1ef10:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ef14:	add	x0, x0, #0x0
   1ef18:	ldr	x0, [x0]
   1ef1c:	str	x0, [sp, #72]
   1ef20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1ef24:	add	x0, x0, #0x0
   1ef28:	ldr	x0, [x0]
   1ef2c:	ldr	x1, [x0]
   1ef30:	ldr	x0, [sp, #72]
   1ef34:	blr	x1
   1ef38:	mov	x1, x0
   1ef3c:	mov	x0, x19
   1ef40:	bl	0 <grub_printf>
   1ef44:	b	1f2a0 <yylex+0x1384>
   1ef48:	ldr	x0, [sp, #120]
   1ef4c:	ldr	x0, [x0, #8320]
   1ef50:	ldr	x1, [sp, #144]
   1ef54:	sub	x0, x1, x0
   1ef58:	sub	w0, w0, #0x1
   1ef5c:	str	w0, [sp, #116]
   1ef60:	ldr	x0, [sp, #120]
   1ef64:	ldrb	w1, [x0, #48]
   1ef68:	ldr	x0, [sp, #144]
   1ef6c:	strb	w1, [x0]
   1ef70:	ldr	x0, [sp, #120]
   1ef74:	ldr	x1, [x0, #40]
   1ef78:	ldr	x0, [sp, #120]
   1ef7c:	ldr	x0, [x0, #24]
   1ef80:	lsl	x0, x0, #3
   1ef84:	add	x0, x1, x0
   1ef88:	ldr	x0, [x0]
   1ef8c:	ldr	w0, [x0, #56]
   1ef90:	cmp	w0, #0x0
   1ef94:	b.ne	1f00c <yylex+0x10f0>  // b.any
   1ef98:	ldr	x0, [sp, #120]
   1ef9c:	ldr	x1, [x0, #40]
   1efa0:	ldr	x0, [sp, #120]
   1efa4:	ldr	x0, [x0, #24]
   1efa8:	lsl	x0, x0, #3
   1efac:	add	x0, x1, x0
   1efb0:	ldr	x0, [x0]
   1efb4:	ldr	w1, [x0, #28]
   1efb8:	ldr	x0, [sp, #120]
   1efbc:	str	w1, [x0, #52]
   1efc0:	ldr	x0, [sp, #120]
   1efc4:	ldr	x1, [x0, #40]
   1efc8:	ldr	x0, [sp, #120]
   1efcc:	ldr	x0, [x0, #24]
   1efd0:	lsl	x0, x0, #3
   1efd4:	add	x0, x1, x0
   1efd8:	ldr	x0, [x0]
   1efdc:	ldr	x1, [sp, #120]
   1efe0:	ldr	x1, [x1, #8]
   1efe4:	str	x1, [x0]
   1efe8:	ldr	x0, [sp, #120]
   1efec:	ldr	x1, [x0, #40]
   1eff0:	ldr	x0, [sp, #120]
   1eff4:	ldr	x0, [x0, #24]
   1eff8:	lsl	x0, x0, #3
   1effc:	add	x0, x1, x0
   1f000:	ldr	x0, [x0]
   1f004:	mov	w1, #0x1                   	// #1
   1f008:	str	w1, [x0, #56]
   1f00c:	ldr	x0, [sp, #120]
   1f010:	ldr	x1, [x0, #64]
   1f014:	ldr	x0, [sp, #120]
   1f018:	ldr	x2, [x0, #40]
   1f01c:	ldr	x0, [sp, #120]
   1f020:	ldr	x0, [x0, #24]
   1f024:	lsl	x0, x0, #3
   1f028:	add	x0, x2, x0
   1f02c:	ldr	x0, [x0]
   1f030:	ldr	x2, [x0, #8]
   1f034:	ldr	x0, [sp, #120]
   1f038:	ldr	w0, [x0, #52]
   1f03c:	sxtw	x0, w0
   1f040:	add	x0, x2, x0
   1f044:	cmp	x1, x0
   1f048:	b.hi	1f0e0 <yylex+0x11c4>  // b.pmore
   1f04c:	ldr	x0, [sp, #120]
   1f050:	ldr	x1, [x0, #8320]
   1f054:	ldrsw	x0, [sp, #116]
   1f058:	add	x1, x1, x0
   1f05c:	ldr	x0, [sp, #120]
   1f060:	str	x1, [x0, #64]
   1f064:	ldr	x0, [sp, #32]
   1f068:	bl	1fa00 <yylex+0x1ae4>
   1f06c:	str	w0, [sp, #156]
   1f070:	ldr	x1, [sp, #32]
   1f074:	ldr	w0, [sp, #156]
   1f078:	bl	1fbc0 <yylex+0x1ca4>
   1f07c:	str	w0, [sp, #112]
   1f080:	ldr	x0, [sp, #120]
   1f084:	ldr	x0, [x0, #8320]
   1f088:	str	x0, [sp, #136]
   1f08c:	ldr	w0, [sp, #112]
   1f090:	cmp	w0, #0x0
   1f094:	b.eq	1f0c4 <yylex+0x11a8>  // b.none
   1f098:	ldr	x0, [sp, #120]
   1f09c:	ldr	x0, [x0, #64]
   1f0a0:	add	x1, x0, #0x1
   1f0a4:	ldr	x0, [sp, #120]
   1f0a8:	str	x1, [x0, #64]
   1f0ac:	ldr	x0, [sp, #120]
   1f0b0:	ldr	x0, [x0, #64]
   1f0b4:	str	x0, [sp, #144]
   1f0b8:	ldr	w0, [sp, #112]
   1f0bc:	str	w0, [sp, #156]
   1f0c0:	b	1e05c <yylex+0x140>
   1f0c4:	ldr	x0, [sp, #120]
   1f0c8:	ldr	x0, [x0, #112]
   1f0cc:	str	x0, [sp, #144]
   1f0d0:	ldr	x0, [sp, #120]
   1f0d4:	ldr	w0, [x0, #104]
   1f0d8:	str	w0, [sp, #156]
   1f0dc:	b	1e1a4 <yylex+0x288>
   1f0e0:	ldr	x0, [sp, #32]
   1f0e4:	bl	1f338 <yylex+0x141c>
   1f0e8:	cmp	w0, #0x2
   1f0ec:	b.eq	1f1b8 <yylex+0x129c>  // b.none
   1f0f0:	cmp	w0, #0x2
   1f0f4:	b.gt	1f29c <yylex+0x1380>
   1f0f8:	cmp	w0, #0x0
   1f0fc:	b.eq	1f178 <yylex+0x125c>  // b.none
   1f100:	cmp	w0, #0x1
   1f104:	b.ne	1f29c <yylex+0x1380>  // b.any
   1f108:	ldr	x0, [sp, #120]
   1f10c:	str	wzr, [x0, #80]
   1f110:	ldr	x0, [sp, #32]
   1f114:	bl	21460 <yywrap>
   1f118:	cmp	w0, #0x0
   1f11c:	b.eq	1f154 <yylex+0x1238>  // b.none
   1f120:	ldr	x0, [sp, #120]
   1f124:	ldr	x1, [x0, #8320]
   1f128:	ldr	x0, [sp, #120]
   1f12c:	str	x1, [x0, #64]
   1f130:	ldr	x0, [sp, #120]
   1f134:	ldr	w0, [x0, #76]
   1f138:	sub	w0, w0, #0x1
   1f13c:	lsr	w1, w0, #31
   1f140:	add	w0, w1, w0
   1f144:	asr	w0, w0, #1
   1f148:	add	w0, w0, #0x46
   1f14c:	str	w0, [sp, #132]
   1f150:	b	1e2a4 <yylex+0x388>
   1f154:	ldr	x0, [sp, #120]
   1f158:	ldr	w0, [x0, #80]
   1f15c:	cmp	w0, #0x0
   1f160:	b.ne	1f218 <yylex+0x12fc>  // b.any
   1f164:	ldr	x0, [sp, #120]
   1f168:	ldr	x0, [x0, #8]
   1f16c:	ldr	x1, [sp, #32]
   1f170:	bl	1fd40 <yyrestart>
   1f174:	b	1f218 <yylex+0x12fc>
   1f178:	ldr	x0, [sp, #120]
   1f17c:	ldr	x1, [x0, #8320]
   1f180:	ldrsw	x0, [sp, #116]
   1f184:	add	x1, x1, x0
   1f188:	ldr	x0, [sp, #120]
   1f18c:	str	x1, [x0, #64]
   1f190:	ldr	x0, [sp, #32]
   1f194:	bl	1fa00 <yylex+0x1ae4>
   1f198:	str	w0, [sp, #156]
   1f19c:	ldr	x0, [sp, #120]
   1f1a0:	ldr	x0, [x0, #64]
   1f1a4:	str	x0, [sp, #144]
   1f1a8:	ldr	x0, [sp, #120]
   1f1ac:	ldr	x0, [x0, #8320]
   1f1b0:	str	x0, [sp, #136]
   1f1b4:	b	1e05c <yylex+0x140>
   1f1b8:	ldr	x0, [sp, #120]
   1f1bc:	ldr	x1, [x0, #40]
   1f1c0:	ldr	x0, [sp, #120]
   1f1c4:	ldr	x0, [x0, #24]
   1f1c8:	lsl	x0, x0, #3
   1f1cc:	add	x0, x1, x0
   1f1d0:	ldr	x0, [x0]
   1f1d4:	ldr	x1, [x0, #8]
   1f1d8:	ldr	x0, [sp, #120]
   1f1dc:	ldr	w0, [x0, #52]
   1f1e0:	sxtw	x0, w0
   1f1e4:	add	x1, x1, x0
   1f1e8:	ldr	x0, [sp, #120]
   1f1ec:	str	x1, [x0, #64]
   1f1f0:	ldr	x0, [sp, #32]
   1f1f4:	bl	1fa00 <yylex+0x1ae4>
   1f1f8:	str	w0, [sp, #156]
   1f1fc:	ldr	x0, [sp, #120]
   1f200:	ldr	x0, [x0, #64]
   1f204:	str	x0, [sp, #144]
   1f208:	ldr	x0, [sp, #120]
   1f20c:	ldr	x0, [x0, #8320]
   1f210:	str	x0, [sp, #136]
   1f214:	b	1e1a4 <yylex+0x288>
   1f218:	nop
   1f21c:	b	1f29c <yylex+0x1380>
   1f220:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f224:	add	x0, x0, #0x0
   1f228:	ldr	x0, [x0]
   1f22c:	str	x0, [sp, #48]
   1f230:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f234:	add	x0, x0, #0x0
   1f238:	ldr	x0, [x0]
   1f23c:	ldr	x1, [x0]
   1f240:	ldr	x0, [sp, #48]
   1f244:	blr	x1
   1f248:	mov	x19, x0
   1f24c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f250:	add	x0, x0, #0x0
   1f254:	ldr	x0, [x0]
   1f258:	str	x0, [sp, #56]
   1f25c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f260:	add	x0, x0, #0x0
   1f264:	ldr	x0, [x0]
   1f268:	ldr	x1, [x0]
   1f26c:	ldr	x0, [sp, #56]
   1f270:	blr	x1
   1f274:	mov	x1, x0
   1f278:	mov	x0, x19
   1f27c:	bl	0 <grub_printf>
   1f280:	b	1e024 <yylex+0x108>
   1f284:	nop
   1f288:	b	1e024 <yylex+0x108>
   1f28c:	nop
   1f290:	b	1e024 <yylex+0x108>
   1f294:	nop
   1f298:	b	1e024 <yylex+0x108>
   1f29c:	nop
   1f2a0:	b	1e024 <yylex+0x108>
   1f2a4:	ldr	x19, [sp, #16]
   1f2a8:	ldp	x29, x30, [sp], #160
   1f2ac:	ret
	...
   1f338:	stp	x29, x30, [sp, #-176]!
   1f33c:	mov	x29, sp
   1f340:	str	x19, [sp, #16]
   1f344:	str	x0, [sp, #40]
   1f348:	ldr	x0, [sp, #40]
   1f34c:	str	x0, [sp, #136]
   1f350:	ldr	x0, [sp, #136]
   1f354:	ldr	x1, [x0, #40]
   1f358:	ldr	x0, [sp, #136]
   1f35c:	ldr	x0, [x0, #24]
   1f360:	lsl	x0, x0, #3
   1f364:	add	x0, x1, x0
   1f368:	ldr	x0, [x0]
   1f36c:	ldr	x0, [x0, #8]
   1f370:	str	x0, [sp, #168]
   1f374:	ldr	x0, [sp, #136]
   1f378:	ldr	x0, [x0, #8320]
   1f37c:	str	x0, [sp, #160]
   1f380:	ldr	x0, [sp, #136]
   1f384:	ldr	x1, [x0, #64]
   1f388:	ldr	x0, [sp, #136]
   1f38c:	ldr	x2, [x0, #40]
   1f390:	ldr	x0, [sp, #136]
   1f394:	ldr	x0, [x0, #24]
   1f398:	lsl	x0, x0, #3
   1f39c:	add	x0, x2, x0
   1f3a0:	ldr	x0, [x0]
   1f3a4:	ldr	x2, [x0, #8]
   1f3a8:	ldr	x0, [sp, #136]
   1f3ac:	ldr	w0, [x0, #52]
   1f3b0:	sxtw	x0, w0
   1f3b4:	add	x0, x0, #0x1
   1f3b8:	add	x0, x2, x0
   1f3bc:	cmp	x1, x0
   1f3c0:	b.ls	1f424 <yylex+0x1508>  // b.plast
   1f3c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f3c8:	add	x0, x0, #0x0
   1f3cc:	ldr	x0, [x0]
   1f3d0:	str	x0, [sp, #88]
   1f3d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f3d8:	add	x0, x0, #0x0
   1f3dc:	ldr	x0, [x0]
   1f3e0:	ldr	x1, [x0]
   1f3e4:	ldr	x0, [sp, #88]
   1f3e8:	blr	x1
   1f3ec:	mov	x19, x0
   1f3f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f3f4:	add	x0, x0, #0x0
   1f3f8:	ldr	x0, [x0]
   1f3fc:	str	x0, [sp, #96]
   1f400:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f404:	add	x0, x0, #0x0
   1f408:	ldr	x0, [x0]
   1f40c:	ldr	x1, [x0]
   1f410:	ldr	x0, [sp, #96]
   1f414:	blr	x1
   1f418:	mov	x1, x0
   1f41c:	mov	x0, x19
   1f420:	bl	0 <grub_printf>
   1f424:	ldr	x0, [sp, #136]
   1f428:	ldr	x1, [x0, #40]
   1f42c:	ldr	x0, [sp, #136]
   1f430:	ldr	x0, [x0, #24]
   1f434:	lsl	x0, x0, #3
   1f438:	add	x0, x1, x0
   1f43c:	ldr	x0, [x0]
   1f440:	ldr	w0, [x0, #52]
   1f444:	cmp	w0, #0x0
   1f448:	b.ne	1f478 <yylex+0x155c>  // b.any
   1f44c:	ldr	x0, [sp, #136]
   1f450:	ldr	x1, [x0, #64]
   1f454:	ldr	x0, [sp, #136]
   1f458:	ldr	x0, [x0, #8320]
   1f45c:	sub	x0, x1, x0
   1f460:	cmp	x0, #0x1
   1f464:	b.ne	1f470 <yylex+0x1554>  // b.any
   1f468:	mov	w0, #0x1                   	// #1
   1f46c:	b	1f9cc <yylex+0x1ab0>
   1f470:	mov	w0, #0x2                   	// #2
   1f474:	b	1f9cc <yylex+0x1ab0>
   1f478:	ldr	x0, [sp, #136]
   1f47c:	ldr	x1, [x0, #64]
   1f480:	ldr	x0, [sp, #136]
   1f484:	ldr	x0, [x0, #8320]
   1f488:	sub	x0, x1, x0
   1f48c:	sub	w0, w0, #0x1
   1f490:	str	w0, [sp, #132]
   1f494:	str	wzr, [sp, #156]
   1f498:	b	1f4c8 <yylex+0x15ac>
   1f49c:	ldr	x1, [sp, #160]
   1f4a0:	add	x0, x1, #0x1
   1f4a4:	str	x0, [sp, #160]
   1f4a8:	ldr	x0, [sp, #168]
   1f4ac:	add	x2, x0, #0x1
   1f4b0:	str	x2, [sp, #168]
   1f4b4:	ldrb	w1, [x1]
   1f4b8:	strb	w1, [x0]
   1f4bc:	ldr	w0, [sp, #156]
   1f4c0:	add	w0, w0, #0x1
   1f4c4:	str	w0, [sp, #156]
   1f4c8:	ldr	w1, [sp, #156]
   1f4cc:	ldr	w0, [sp, #132]
   1f4d0:	cmp	w1, w0
   1f4d4:	b.lt	1f49c <yylex+0x1580>  // b.tstop
   1f4d8:	ldr	x0, [sp, #136]
   1f4dc:	ldr	x1, [x0, #40]
   1f4e0:	ldr	x0, [sp, #136]
   1f4e4:	ldr	x0, [x0, #24]
   1f4e8:	lsl	x0, x0, #3
   1f4ec:	add	x0, x1, x0
   1f4f0:	ldr	x0, [x0]
   1f4f4:	ldr	w0, [x0, #56]
   1f4f8:	cmp	w0, #0x2
   1f4fc:	b.ne	1f534 <yylex+0x1618>  // b.any
   1f500:	ldr	x0, [sp, #136]
   1f504:	str	wzr, [x0, #52]
   1f508:	ldr	x0, [sp, #136]
   1f50c:	ldr	x1, [x0, #40]
   1f510:	ldr	x0, [sp, #136]
   1f514:	ldr	x0, [x0, #24]
   1f518:	lsl	x0, x0, #3
   1f51c:	add	x0, x1, x0
   1f520:	ldr	x0, [x0]
   1f524:	ldr	x1, [sp, #136]
   1f528:	ldr	w1, [x1, #52]
   1f52c:	str	w1, [x0, #28]
   1f530:	b	1f754 <yylex+0x1838>
   1f534:	ldr	x0, [sp, #136]
   1f538:	ldr	x1, [x0, #40]
   1f53c:	ldr	x0, [sp, #136]
   1f540:	ldr	x0, [x0, #24]
   1f544:	lsl	x0, x0, #3
   1f548:	add	x0, x1, x0
   1f54c:	ldr	x0, [x0]
   1f550:	ldr	w1, [x0, #24]
   1f554:	ldr	w0, [sp, #132]
   1f558:	sub	w0, w1, w0
   1f55c:	sub	w0, w0, #0x1
   1f560:	str	w0, [sp, #148]
   1f564:	b	1f704 <yylex+0x17e8>
   1f568:	ldr	x0, [sp, #136]
   1f56c:	ldr	x1, [x0, #40]
   1f570:	ldr	x0, [sp, #136]
   1f574:	ldr	x0, [x0, #24]
   1f578:	lsl	x0, x0, #3
   1f57c:	add	x0, x1, x0
   1f580:	ldr	x0, [x0]
   1f584:	str	x0, [sp, #120]
   1f588:	ldr	x0, [sp, #136]
   1f58c:	ldr	x1, [x0, #64]
   1f590:	ldr	x0, [sp, #120]
   1f594:	ldr	x0, [x0, #8]
   1f598:	sub	x0, x1, x0
   1f59c:	str	w0, [sp, #116]
   1f5a0:	ldr	x0, [sp, #120]
   1f5a4:	ldr	w0, [x0, #32]
   1f5a8:	cmp	w0, #0x0
   1f5ac:	b.eq	1f644 <yylex+0x1728>  // b.none
   1f5b0:	ldr	x0, [sp, #120]
   1f5b4:	ldr	w0, [x0, #24]
   1f5b8:	lsl	w0, w0, #1
   1f5bc:	str	w0, [sp, #112]
   1f5c0:	ldr	w0, [sp, #112]
   1f5c4:	cmp	w0, #0x0
   1f5c8:	b.gt	1f5fc <yylex+0x16e0>
   1f5cc:	ldr	x0, [sp, #120]
   1f5d0:	ldr	w1, [x0, #24]
   1f5d4:	ldr	x0, [sp, #120]
   1f5d8:	ldr	w0, [x0, #24]
   1f5dc:	add	w2, w0, #0x7
   1f5e0:	cmp	w0, #0x0
   1f5e4:	csel	w0, w2, w0, lt  // lt = tstop
   1f5e8:	asr	w0, w0, #3
   1f5ec:	add	w1, w1, w0
   1f5f0:	ldr	x0, [sp, #120]
   1f5f4:	str	w1, [x0, #24]
   1f5f8:	b	1f610 <yylex+0x16f4>
   1f5fc:	ldr	x0, [sp, #120]
   1f600:	ldr	w0, [x0, #24]
   1f604:	lsl	w1, w0, #1
   1f608:	ldr	x0, [sp, #120]
   1f60c:	str	w1, [x0, #24]
   1f610:	ldr	x0, [sp, #120]
   1f614:	ldr	x2, [x0, #8]
   1f618:	ldr	x0, [sp, #120]
   1f61c:	ldr	w0, [x0, #24]
   1f620:	add	w0, w0, #0x2
   1f624:	sxtw	x0, w0
   1f628:	mov	x1, x0
   1f62c:	mov	x0, x2
   1f630:	bl	0 <grub_realloc>
   1f634:	mov	x1, x0
   1f638:	ldr	x0, [sp, #120]
   1f63c:	str	x1, [x0, #8]
   1f640:	b	1f64c <yylex+0x1730>
   1f644:	ldr	x0, [sp, #120]
   1f648:	str	xzr, [x0, #8]
   1f64c:	ldr	x0, [sp, #120]
   1f650:	ldr	x0, [x0, #8]
   1f654:	cmp	x0, #0x0
   1f658:	b.ne	1f6bc <yylex+0x17a0>  // b.any
   1f65c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f660:	add	x0, x0, #0x0
   1f664:	ldr	x0, [x0]
   1f668:	str	x0, [sp, #72]
   1f66c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f670:	add	x0, x0, #0x0
   1f674:	ldr	x0, [x0]
   1f678:	ldr	x1, [x0]
   1f67c:	ldr	x0, [sp, #72]
   1f680:	blr	x1
   1f684:	mov	x19, x0
   1f688:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f68c:	add	x0, x0, #0x0
   1f690:	ldr	x0, [x0]
   1f694:	str	x0, [sp, #80]
   1f698:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f69c:	add	x0, x0, #0x0
   1f6a0:	ldr	x0, [x0]
   1f6a4:	ldr	x1, [x0]
   1f6a8:	ldr	x0, [sp, #80]
   1f6ac:	blr	x1
   1f6b0:	mov	x1, x0
   1f6b4:	mov	x0, x19
   1f6b8:	bl	0 <grub_printf>
   1f6bc:	ldr	x0, [sp, #120]
   1f6c0:	ldr	x1, [x0, #8]
   1f6c4:	ldrsw	x0, [sp, #116]
   1f6c8:	add	x1, x1, x0
   1f6cc:	ldr	x0, [sp, #136]
   1f6d0:	str	x1, [x0, #64]
   1f6d4:	ldr	x0, [sp, #136]
   1f6d8:	ldr	x1, [x0, #40]
   1f6dc:	ldr	x0, [sp, #136]
   1f6e0:	ldr	x0, [x0, #24]
   1f6e4:	lsl	x0, x0, #3
   1f6e8:	add	x0, x1, x0
   1f6ec:	ldr	x0, [x0]
   1f6f0:	ldr	w1, [x0, #24]
   1f6f4:	ldr	w0, [sp, #132]
   1f6f8:	sub	w0, w1, w0
   1f6fc:	sub	w0, w0, #0x1
   1f700:	str	w0, [sp, #148]
   1f704:	ldr	w0, [sp, #148]
   1f708:	cmp	w0, #0x0
   1f70c:	b.le	1f568 <yylex+0x164c>
   1f710:	ldr	w0, [sp, #148]
   1f714:	cmp	w0, #0x2, lsl #12
   1f718:	b.le	1f724 <yylex+0x1808>
   1f71c:	mov	w0, #0x2000                	// #8192
   1f720:	str	w0, [sp, #148]
   1f724:	ldr	x0, [sp, #136]
   1f728:	str	wzr, [x0, #52]
   1f72c:	ldr	x0, [sp, #136]
   1f730:	ldr	x1, [x0, #40]
   1f734:	ldr	x0, [sp, #136]
   1f738:	ldr	x0, [x0, #24]
   1f73c:	lsl	x0, x0, #3
   1f740:	add	x0, x1, x0
   1f744:	ldr	x0, [x0]
   1f748:	ldr	x1, [sp, #136]
   1f74c:	ldr	w1, [x1, #52]
   1f750:	str	w1, [x0, #28]
   1f754:	ldr	x0, [sp, #136]
   1f758:	ldr	w0, [x0, #52]
   1f75c:	cmp	w0, #0x0
   1f760:	b.ne	1f7bc <yylex+0x18a0>  // b.any
   1f764:	ldr	w0, [sp, #132]
   1f768:	cmp	w0, #0x0
   1f76c:	b.ne	1f78c <yylex+0x1870>  // b.any
   1f770:	mov	w0, #0x1                   	// #1
   1f774:	str	w0, [sp, #152]
   1f778:	ldr	x0, [sp, #136]
   1f77c:	ldr	x0, [x0, #8]
   1f780:	ldr	x1, [sp, #40]
   1f784:	bl	1fd40 <yyrestart>
   1f788:	b	1f7c0 <yylex+0x18a4>
   1f78c:	mov	w0, #0x2                   	// #2
   1f790:	str	w0, [sp, #152]
   1f794:	ldr	x0, [sp, #136]
   1f798:	ldr	x1, [x0, #40]
   1f79c:	ldr	x0, [sp, #136]
   1f7a0:	ldr	x0, [x0, #24]
   1f7a4:	lsl	x0, x0, #3
   1f7a8:	add	x0, x1, x0
   1f7ac:	ldr	x0, [x0]
   1f7b0:	mov	w1, #0x2                   	// #2
   1f7b4:	str	w1, [x0, #56]
   1f7b8:	b	1f7c0 <yylex+0x18a4>
   1f7bc:	str	wzr, [sp, #152]
   1f7c0:	ldr	x0, [sp, #136]
   1f7c4:	ldr	w1, [x0, #52]
   1f7c8:	ldr	w0, [sp, #132]
   1f7cc:	add	w1, w1, w0
   1f7d0:	ldr	x0, [sp, #136]
   1f7d4:	ldr	x2, [x0, #40]
   1f7d8:	ldr	x0, [sp, #136]
   1f7dc:	ldr	x0, [x0, #24]
   1f7e0:	lsl	x0, x0, #3
   1f7e4:	add	x0, x2, x0
   1f7e8:	ldr	x0, [x0]
   1f7ec:	ldr	w0, [x0, #24]
   1f7f0:	cmp	w1, w0
   1f7f4:	b.le	1f91c <yylex+0x1a00>
   1f7f8:	ldr	x0, [sp, #136]
   1f7fc:	ldr	w1, [x0, #52]
   1f800:	ldr	w0, [sp, #132]
   1f804:	add	w1, w1, w0
   1f808:	ldr	x0, [sp, #136]
   1f80c:	ldr	w0, [x0, #52]
   1f810:	asr	w0, w0, #1
   1f814:	add	w0, w1, w0
   1f818:	str	w0, [sp, #108]
   1f81c:	ldr	x0, [sp, #136]
   1f820:	ldr	x1, [x0, #40]
   1f824:	ldr	x0, [sp, #136]
   1f828:	ldr	x0, [x0, #24]
   1f82c:	lsl	x0, x0, #3
   1f830:	add	x0, x1, x0
   1f834:	ldr	x0, [x0]
   1f838:	ldr	x2, [x0, #8]
   1f83c:	ldrsw	x3, [sp, #108]
   1f840:	ldr	x0, [sp, #136]
   1f844:	ldr	x1, [x0, #40]
   1f848:	ldr	x0, [sp, #136]
   1f84c:	ldr	x0, [x0, #24]
   1f850:	lsl	x0, x0, #3
   1f854:	add	x0, x1, x0
   1f858:	ldr	x19, [x0]
   1f85c:	mov	x1, x3
   1f860:	mov	x0, x2
   1f864:	bl	0 <grub_realloc>
   1f868:	str	x0, [x19, #8]
   1f86c:	ldr	x0, [sp, #136]
   1f870:	ldr	x1, [x0, #40]
   1f874:	ldr	x0, [sp, #136]
   1f878:	ldr	x0, [x0, #24]
   1f87c:	lsl	x0, x0, #3
   1f880:	add	x0, x1, x0
   1f884:	ldr	x0, [x0]
   1f888:	ldr	x0, [x0, #8]
   1f88c:	cmp	x0, #0x0
   1f890:	b.ne	1f8f4 <yylex+0x19d8>  // b.any
   1f894:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f898:	add	x0, x0, #0x0
   1f89c:	ldr	x0, [x0]
   1f8a0:	str	x0, [sp, #56]
   1f8a4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f8a8:	add	x0, x0, #0x0
   1f8ac:	ldr	x0, [x0]
   1f8b0:	ldr	x1, [x0]
   1f8b4:	ldr	x0, [sp, #56]
   1f8b8:	blr	x1
   1f8bc:	mov	x19, x0
   1f8c0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f8c4:	add	x0, x0, #0x0
   1f8c8:	ldr	x0, [x0]
   1f8cc:	str	x0, [sp, #64]
   1f8d0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1f8d4:	add	x0, x0, #0x0
   1f8d8:	ldr	x0, [x0]
   1f8dc:	ldr	x1, [x0]
   1f8e0:	ldr	x0, [sp, #64]
   1f8e4:	blr	x1
   1f8e8:	mov	x1, x0
   1f8ec:	mov	x0, x19
   1f8f0:	bl	0 <grub_printf>
   1f8f4:	ldr	x0, [sp, #136]
   1f8f8:	ldr	x1, [x0, #40]
   1f8fc:	ldr	x0, [sp, #136]
   1f900:	ldr	x0, [x0, #24]
   1f904:	lsl	x0, x0, #3
   1f908:	add	x0, x1, x0
   1f90c:	ldr	x0, [x0]
   1f910:	ldr	w1, [sp, #108]
   1f914:	sub	w1, w1, #0x2
   1f918:	str	w1, [x0, #24]
   1f91c:	ldr	x0, [sp, #136]
   1f920:	ldr	w1, [x0, #52]
   1f924:	ldr	w0, [sp, #132]
   1f928:	add	w1, w1, w0
   1f92c:	ldr	x0, [sp, #136]
   1f930:	str	w1, [x0, #52]
   1f934:	ldr	x0, [sp, #136]
   1f938:	ldr	x1, [x0, #40]
   1f93c:	ldr	x0, [sp, #136]
   1f940:	ldr	x0, [x0, #24]
   1f944:	lsl	x0, x0, #3
   1f948:	add	x0, x1, x0
   1f94c:	ldr	x0, [x0]
   1f950:	ldr	x1, [x0, #8]
   1f954:	ldr	x0, [sp, #136]
   1f958:	ldr	w0, [x0, #52]
   1f95c:	sxtw	x0, w0
   1f960:	add	x0, x1, x0
   1f964:	strb	wzr, [x0]
   1f968:	ldr	x0, [sp, #136]
   1f96c:	ldr	x1, [x0, #40]
   1f970:	ldr	x0, [sp, #136]
   1f974:	ldr	x0, [x0, #24]
   1f978:	lsl	x0, x0, #3
   1f97c:	add	x0, x1, x0
   1f980:	ldr	x0, [x0]
   1f984:	ldr	x1, [x0, #8]
   1f988:	ldr	x0, [sp, #136]
   1f98c:	ldr	w0, [x0, #52]
   1f990:	sxtw	x0, w0
   1f994:	add	x0, x0, #0x1
   1f998:	add	x0, x1, x0
   1f99c:	strb	wzr, [x0]
   1f9a0:	ldr	x0, [sp, #136]
   1f9a4:	ldr	x1, [x0, #40]
   1f9a8:	ldr	x0, [sp, #136]
   1f9ac:	ldr	x0, [x0, #24]
   1f9b0:	lsl	x0, x0, #3
   1f9b4:	add	x0, x1, x0
   1f9b8:	ldr	x0, [x0]
   1f9bc:	ldr	x1, [x0, #8]
   1f9c0:	ldr	x0, [sp, #136]
   1f9c4:	str	x1, [x0, #8320]
   1f9c8:	ldr	w0, [sp, #152]
   1f9cc:	ldr	x19, [sp, #16]
   1f9d0:	ldp	x29, x30, [sp], #176
   1f9d4:	ret
	...
   1fa00:	sub	sp, sp, #0x30
   1fa04:	str	x0, [sp, #8]
   1fa08:	ldr	x0, [sp, #8]
   1fa0c:	str	x0, [sp, #16]
   1fa10:	ldr	x0, [sp, #16]
   1fa14:	ldr	w0, [x0, #76]
   1fa18:	str	w0, [sp, #44]
   1fa1c:	ldr	x0, [sp, #16]
   1fa20:	ldr	x0, [x0, #8320]
   1fa24:	str	x0, [sp, #32]
   1fa28:	b	1fb68 <yylex+0x1c4c>
   1fa2c:	ldr	x0, [sp, #32]
   1fa30:	ldrb	w0, [x0]
   1fa34:	cmp	w0, #0x0
   1fa38:	b.eq	1fa60 <yylex+0x1b44>  // b.none
   1fa3c:	ldr	x0, [sp, #32]
   1fa40:	ldrb	w0, [x0]
   1fa44:	mov	w2, w0
   1fa48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fa4c:	add	x0, x0, #0x0
   1fa50:	ldr	x1, [x0]
   1fa54:	sxtw	x0, w2
   1fa58:	ldrb	w0, [x1, x0]
   1fa5c:	b	1fa64 <yylex+0x1b48>
   1fa60:	mov	w0, #0x1                   	// #1
   1fa64:	strb	w0, [sp, #31]
   1fa68:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fa6c:	add	x0, x0, #0x0
   1fa70:	ldr	x0, [x0]
   1fa74:	ldrsw	x1, [sp, #44]
   1fa78:	ldrsh	w0, [x0, x1, lsl #1]
   1fa7c:	cmp	w0, #0x0
   1fa80:	b.eq	1fae0 <yylex+0x1bc4>  // b.none
   1fa84:	ldr	x0, [sp, #16]
   1fa88:	ldr	w1, [sp, #44]
   1fa8c:	str	w1, [x0, #104]
   1fa90:	ldr	x0, [sp, #16]
   1fa94:	ldr	x1, [sp, #32]
   1fa98:	str	x1, [x0, #112]
   1fa9c:	b	1fae0 <yylex+0x1bc4>
   1faa0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1faa4:	add	x0, x0, #0x0
   1faa8:	ldr	x0, [x0]
   1faac:	ldrsw	x1, [sp, #44]
   1fab0:	ldrsh	w0, [x0, x1, lsl #1]
   1fab4:	str	w0, [sp, #44]
   1fab8:	ldr	w0, [sp, #44]
   1fabc:	cmp	w0, #0xbb
   1fac0:	b.le	1fae0 <yylex+0x1bc4>
   1fac4:	ldrb	w2, [sp, #31]
   1fac8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1facc:	add	x0, x0, #0x0
   1fad0:	ldr	x1, [x0]
   1fad4:	sxtw	x0, w2
   1fad8:	ldrb	w0, [x1, x0]
   1fadc:	strb	w0, [sp, #31]
   1fae0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fae4:	add	x0, x0, #0x0
   1fae8:	ldr	x0, [x0]
   1faec:	ldrsw	x1, [sp, #44]
   1faf0:	ldrsh	w0, [x0, x1, lsl #1]
   1faf4:	mov	w1, w0
   1faf8:	ldrb	w0, [sp, #31]
   1fafc:	add	w1, w1, w0
   1fb00:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fb04:	add	x0, x0, #0x0
   1fb08:	ldr	x0, [x0]
   1fb0c:	sxtw	x1, w1
   1fb10:	ldrsh	w0, [x0, x1, lsl #1]
   1fb14:	mov	w1, w0
   1fb18:	ldr	w0, [sp, #44]
   1fb1c:	cmp	w0, w1
   1fb20:	b.ne	1faa0 <yylex+0x1b84>  // b.any
   1fb24:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fb28:	add	x0, x0, #0x0
   1fb2c:	ldr	x0, [x0]
   1fb30:	ldrsw	x1, [sp, #44]
   1fb34:	ldrsh	w0, [x0, x1, lsl #1]
   1fb38:	mov	w1, w0
   1fb3c:	ldrb	w0, [sp, #31]
   1fb40:	add	w1, w1, w0
   1fb44:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fb48:	add	x0, x0, #0x0
   1fb4c:	ldr	x0, [x0]
   1fb50:	sxtw	x1, w1
   1fb54:	ldrsh	w0, [x0, x1, lsl #1]
   1fb58:	str	w0, [sp, #44]
   1fb5c:	ldr	x0, [sp, #32]
   1fb60:	add	x0, x0, #0x1
   1fb64:	str	x0, [sp, #32]
   1fb68:	ldr	x0, [sp, #16]
   1fb6c:	ldr	x0, [x0, #64]
   1fb70:	ldr	x1, [sp, #32]
   1fb74:	cmp	x1, x0
   1fb78:	b.cc	1fa2c <yylex+0x1b10>  // b.lo, b.ul, b.last
   1fb7c:	ldr	w0, [sp, #44]
   1fb80:	add	sp, sp, #0x30
   1fb84:	ret
	...
   1fbc0:	sub	sp, sp, #0x30
   1fbc4:	str	w0, [sp, #12]
   1fbc8:	str	x1, [sp]
   1fbcc:	ldr	x0, [sp]
   1fbd0:	str	x0, [sp, #32]
   1fbd4:	ldr	x0, [sp, #32]
   1fbd8:	ldr	x0, [x0, #64]
   1fbdc:	str	x0, [sp, #24]
   1fbe0:	mov	w0, #0x1                   	// #1
   1fbe4:	strb	w0, [sp, #47]
   1fbe8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fbec:	add	x0, x0, #0x0
   1fbf0:	ldr	x0, [x0]
   1fbf4:	ldrsw	x1, [sp, #12]
   1fbf8:	ldrsh	w0, [x0, x1, lsl #1]
   1fbfc:	cmp	w0, #0x0
   1fc00:	b.eq	1fc60 <yylex+0x1d44>  // b.none
   1fc04:	ldr	x0, [sp, #32]
   1fc08:	ldr	w1, [sp, #12]
   1fc0c:	str	w1, [x0, #104]
   1fc10:	ldr	x0, [sp, #32]
   1fc14:	ldr	x1, [sp, #24]
   1fc18:	str	x1, [x0, #112]
   1fc1c:	b	1fc60 <yylex+0x1d44>
   1fc20:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fc24:	add	x0, x0, #0x0
   1fc28:	ldr	x0, [x0]
   1fc2c:	ldrsw	x1, [sp, #12]
   1fc30:	ldrsh	w0, [x0, x1, lsl #1]
   1fc34:	str	w0, [sp, #12]
   1fc38:	ldr	w0, [sp, #12]
   1fc3c:	cmp	w0, #0xbb
   1fc40:	b.le	1fc60 <yylex+0x1d44>
   1fc44:	ldrb	w2, [sp, #47]
   1fc48:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fc4c:	add	x0, x0, #0x0
   1fc50:	ldr	x1, [x0]
   1fc54:	sxtw	x0, w2
   1fc58:	ldrb	w0, [x1, x0]
   1fc5c:	strb	w0, [sp, #47]
   1fc60:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fc64:	add	x0, x0, #0x0
   1fc68:	ldr	x0, [x0]
   1fc6c:	ldrsw	x1, [sp, #12]
   1fc70:	ldrsh	w0, [x0, x1, lsl #1]
   1fc74:	mov	w1, w0
   1fc78:	ldrb	w0, [sp, #47]
   1fc7c:	add	w1, w1, w0
   1fc80:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fc84:	add	x0, x0, #0x0
   1fc88:	ldr	x0, [x0]
   1fc8c:	sxtw	x1, w1
   1fc90:	ldrsh	w0, [x0, x1, lsl #1]
   1fc94:	mov	w1, w0
   1fc98:	ldr	w0, [sp, #12]
   1fc9c:	cmp	w0, w1
   1fca0:	b.ne	1fc20 <yylex+0x1d04>  // b.any
   1fca4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fca8:	add	x0, x0, #0x0
   1fcac:	ldr	x0, [x0]
   1fcb0:	ldrsw	x1, [sp, #12]
   1fcb4:	ldrsh	w0, [x0, x1, lsl #1]
   1fcb8:	mov	w1, w0
   1fcbc:	ldrb	w0, [sp, #47]
   1fcc0:	add	w1, w1, w0
   1fcc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   1fcc8:	add	x0, x0, #0x0
   1fccc:	ldr	x0, [x0]
   1fcd0:	sxtw	x1, w1
   1fcd4:	ldrsh	w0, [x0, x1, lsl #1]
   1fcd8:	str	w0, [sp, #12]
   1fcdc:	ldr	w0, [sp, #12]
   1fce0:	cmp	w0, #0xbb
   1fce4:	cset	w0, eq  // eq = none
   1fce8:	and	w0, w0, #0xff
   1fcec:	str	w0, [sp, #20]
   1fcf0:	ldr	w0, [sp, #20]
   1fcf4:	cmp	w0, #0x0
   1fcf8:	b.ne	1fd04 <yylex+0x1de8>  // b.any
   1fcfc:	ldr	w0, [sp, #12]
   1fd00:	b	1fd08 <yylex+0x1dec>
   1fd04:	mov	w0, #0x0                   	// #0
   1fd08:	add	sp, sp, #0x30
   1fd0c:	ret
	...

000000000001fd40 <yyrestart>:
   1fd40:	stp	x29, x30, [sp, #-64]!
   1fd44:	mov	x29, sp
   1fd48:	str	x19, [sp, #16]
   1fd4c:	str	x0, [sp, #40]
   1fd50:	str	x1, [sp, #32]
   1fd54:	ldr	x0, [sp, #32]
   1fd58:	str	x0, [sp, #56]
   1fd5c:	ldr	x0, [sp, #56]
   1fd60:	ldr	x0, [x0, #40]
   1fd64:	cmp	x0, #0x0
   1fd68:	b.eq	1fd90 <yyrestart+0x50>  // b.none
   1fd6c:	ldr	x0, [sp, #56]
   1fd70:	ldr	x1, [x0, #40]
   1fd74:	ldr	x0, [sp, #56]
   1fd78:	ldr	x0, [x0, #24]
   1fd7c:	lsl	x0, x0, #3
   1fd80:	add	x0, x1, x0
   1fd84:	ldr	x0, [x0]
   1fd88:	cmp	x0, #0x0
   1fd8c:	b.ne	1fdcc <yyrestart+0x8c>  // b.any
   1fd90:	ldr	x0, [sp, #32]
   1fd94:	bl	20648 <yypop_buffer_state+0x11c>
   1fd98:	ldr	x0, [sp, #56]
   1fd9c:	ldr	x3, [x0, #8]
   1fda0:	ldr	x0, [sp, #56]
   1fda4:	ldr	x1, [x0, #40]
   1fda8:	ldr	x0, [sp, #56]
   1fdac:	ldr	x0, [x0, #24]
   1fdb0:	lsl	x0, x0, #3
   1fdb4:	add	x19, x1, x0
   1fdb8:	ldr	x2, [sp, #32]
   1fdbc:	mov	w1, #0x4000                	// #16384
   1fdc0:	mov	x0, x3
   1fdc4:	bl	20018 <yy_create_buffer>
   1fdc8:	str	x0, [x19]
   1fdcc:	ldr	x0, [sp, #56]
   1fdd0:	ldr	x0, [x0, #40]
   1fdd4:	cmp	x0, #0x0
   1fdd8:	b.eq	1fdfc <yyrestart+0xbc>  // b.none
   1fddc:	ldr	x0, [sp, #56]
   1fde0:	ldr	x1, [x0, #40]
   1fde4:	ldr	x0, [sp, #56]
   1fde8:	ldr	x0, [x0, #24]
   1fdec:	lsl	x0, x0, #3
   1fdf0:	add	x0, x1, x0
   1fdf4:	ldr	x0, [x0]
   1fdf8:	b	1fe00 <yyrestart+0xc0>
   1fdfc:	mov	x0, #0x0                   	// #0
   1fe00:	ldr	x2, [sp, #32]
   1fe04:	ldr	x1, [sp, #40]
   1fe08:	bl	2023c <yy_delete_buffer+0xb4>
   1fe0c:	ldr	x0, [sp, #32]
   1fe10:	bl	1ff60 <yy_switch_to_buffer+0x13c>
   1fe14:	nop
   1fe18:	ldr	x19, [sp, #16]
   1fe1c:	ldp	x29, x30, [sp], #64
   1fe20:	ret

000000000001fe24 <yy_switch_to_buffer>:
   1fe24:	stp	x29, x30, [sp, #-48]!
   1fe28:	mov	x29, sp
   1fe2c:	str	x0, [sp, #24]
   1fe30:	str	x1, [sp, #16]
   1fe34:	ldr	x0, [sp, #16]
   1fe38:	str	x0, [sp, #40]
   1fe3c:	ldr	x0, [sp, #16]
   1fe40:	bl	20648 <yypop_buffer_state+0x11c>
   1fe44:	ldr	x0, [sp, #40]
   1fe48:	ldr	x0, [x0, #40]
   1fe4c:	cmp	x0, #0x0
   1fe50:	b.eq	1fe74 <yy_switch_to_buffer+0x50>  // b.none
   1fe54:	ldr	x0, [sp, #40]
   1fe58:	ldr	x1, [x0, #40]
   1fe5c:	ldr	x0, [sp, #40]
   1fe60:	ldr	x0, [x0, #24]
   1fe64:	lsl	x0, x0, #3
   1fe68:	add	x0, x1, x0
   1fe6c:	ldr	x0, [x0]
   1fe70:	b	1fe78 <yy_switch_to_buffer+0x54>
   1fe74:	mov	x0, #0x0                   	// #0
   1fe78:	ldr	x1, [sp, #24]
   1fe7c:	cmp	x0, x1
   1fe80:	b.eq	1ff54 <yy_switch_to_buffer+0x130>  // b.none
   1fe84:	ldr	x0, [sp, #40]
   1fe88:	ldr	x0, [x0, #40]
   1fe8c:	cmp	x0, #0x0
   1fe90:	b.eq	1ff1c <yy_switch_to_buffer+0xf8>  // b.none
   1fe94:	ldr	x0, [sp, #40]
   1fe98:	ldr	x1, [x0, #40]
   1fe9c:	ldr	x0, [sp, #40]
   1fea0:	ldr	x0, [x0, #24]
   1fea4:	lsl	x0, x0, #3
   1fea8:	add	x0, x1, x0
   1feac:	ldr	x0, [x0]
   1feb0:	cmp	x0, #0x0
   1feb4:	b.eq	1ff1c <yy_switch_to_buffer+0xf8>  // b.none
   1feb8:	ldr	x0, [sp, #40]
   1febc:	ldr	x0, [x0, #64]
   1fec0:	ldr	x1, [sp, #40]
   1fec4:	ldrb	w1, [x1, #48]
   1fec8:	strb	w1, [x0]
   1fecc:	ldr	x0, [sp, #40]
   1fed0:	ldr	x1, [x0, #40]
   1fed4:	ldr	x0, [sp, #40]
   1fed8:	ldr	x0, [x0, #24]
   1fedc:	lsl	x0, x0, #3
   1fee0:	add	x0, x1, x0
   1fee4:	ldr	x0, [x0]
   1fee8:	ldr	x1, [sp, #40]
   1feec:	ldr	x1, [x1, #64]
   1fef0:	str	x1, [x0, #16]
   1fef4:	ldr	x0, [sp, #40]
   1fef8:	ldr	x1, [x0, #40]
   1fefc:	ldr	x0, [sp, #40]
   1ff00:	ldr	x0, [x0, #24]
   1ff04:	lsl	x0, x0, #3
   1ff08:	add	x0, x1, x0
   1ff0c:	ldr	x0, [x0]
   1ff10:	ldr	x1, [sp, #40]
   1ff14:	ldr	w1, [x1, #52]
   1ff18:	str	w1, [x0, #28]
   1ff1c:	ldr	x0, [sp, #40]
   1ff20:	ldr	x1, [x0, #40]
   1ff24:	ldr	x0, [sp, #40]
   1ff28:	ldr	x0, [x0, #24]
   1ff2c:	lsl	x0, x0, #3
   1ff30:	add	x0, x1, x0
   1ff34:	ldr	x1, [sp, #24]
   1ff38:	str	x1, [x0]
   1ff3c:	ldr	x0, [sp, #16]
   1ff40:	bl	1ff60 <yy_switch_to_buffer+0x13c>
   1ff44:	ldr	x0, [sp, #40]
   1ff48:	mov	w1, #0x1                   	// #1
   1ff4c:	str	w1, [x0, #80]
   1ff50:	b	1ff58 <yy_switch_to_buffer+0x134>
   1ff54:	nop
   1ff58:	ldp	x29, x30, [sp], #48
   1ff5c:	ret
   1ff60:	sub	sp, sp, #0x20
   1ff64:	str	x0, [sp, #8]
   1ff68:	ldr	x0, [sp, #8]
   1ff6c:	str	x0, [sp, #24]
   1ff70:	ldr	x0, [sp, #24]
   1ff74:	ldr	x1, [x0, #40]
   1ff78:	ldr	x0, [sp, #24]
   1ff7c:	ldr	x0, [x0, #24]
   1ff80:	lsl	x0, x0, #3
   1ff84:	add	x0, x1, x0
   1ff88:	ldr	x0, [x0]
   1ff8c:	ldr	w1, [x0, #28]
   1ff90:	ldr	x0, [sp, #24]
   1ff94:	str	w1, [x0, #52]
   1ff98:	ldr	x0, [sp, #24]
   1ff9c:	ldr	x1, [x0, #40]
   1ffa0:	ldr	x0, [sp, #24]
   1ffa4:	ldr	x0, [x0, #24]
   1ffa8:	lsl	x0, x0, #3
   1ffac:	add	x0, x1, x0
   1ffb0:	ldr	x0, [x0]
   1ffb4:	ldr	x1, [x0, #16]
   1ffb8:	ldr	x0, [sp, #24]
   1ffbc:	str	x1, [x0, #64]
   1ffc0:	ldr	x0, [sp, #24]
   1ffc4:	ldr	x1, [x0, #64]
   1ffc8:	ldr	x0, [sp, #24]
   1ffcc:	str	x1, [x0, #8320]
   1ffd0:	ldr	x0, [sp, #24]
   1ffd4:	ldr	x1, [x0, #40]
   1ffd8:	ldr	x0, [sp, #24]
   1ffdc:	ldr	x0, [x0, #24]
   1ffe0:	lsl	x0, x0, #3
   1ffe4:	add	x0, x1, x0
   1ffe8:	ldr	x0, [x0]
   1ffec:	ldr	x1, [x0]
   1fff0:	ldr	x0, [sp, #24]
   1fff4:	str	x1, [x0, #8]
   1fff8:	ldr	x0, [sp, #24]
   1fffc:	ldr	x0, [x0, #64]
   20000:	ldrb	w1, [x0]
   20004:	ldr	x0, [sp, #24]
   20008:	strb	w1, [x0, #48]
   2000c:	nop
   20010:	add	sp, sp, #0x20
   20014:	ret

0000000000020018 <yy_create_buffer>:
   20018:	stp	x29, x30, [sp, #-112]!
   2001c:	mov	x29, sp
   20020:	str	x19, [sp, #16]
   20024:	str	x0, [sp, #56]
   20028:	str	w1, [sp, #52]
   2002c:	str	x2, [sp, #40]
   20030:	mov	x0, #0x40                  	// #64
   20034:	bl	0 <grub_malloc>
   20038:	str	x0, [sp, #104]
   2003c:	ldr	x0, [sp, #104]
   20040:	cmp	x0, #0x0
   20044:	b.ne	200a8 <yy_create_buffer+0x90>  // b.any
   20048:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   2004c:	add	x0, x0, #0x0
   20050:	ldr	x0, [x0]
   20054:	str	x0, [sp, #88]
   20058:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   2005c:	add	x0, x0, #0x0
   20060:	ldr	x0, [x0]
   20064:	ldr	x1, [x0]
   20068:	ldr	x0, [sp, #88]
   2006c:	blr	x1
   20070:	mov	x19, x0
   20074:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20078:	add	x0, x0, #0x0
   2007c:	ldr	x0, [x0]
   20080:	str	x0, [sp, #96]
   20084:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20088:	add	x0, x0, #0x0
   2008c:	ldr	x0, [x0]
   20090:	ldr	x1, [x0]
   20094:	ldr	x0, [sp, #96]
   20098:	blr	x1
   2009c:	mov	x1, x0
   200a0:	mov	x0, x19
   200a4:	bl	0 <grub_printf>
   200a8:	ldr	x0, [sp, #104]
   200ac:	ldr	w1, [sp, #52]
   200b0:	str	w1, [x0, #24]
   200b4:	ldr	x0, [sp, #104]
   200b8:	ldr	w0, [x0, #24]
   200bc:	add	w0, w0, #0x2
   200c0:	sxtw	x0, w0
   200c4:	bl	0 <grub_malloc>
   200c8:	mov	x1, x0
   200cc:	ldr	x0, [sp, #104]
   200d0:	str	x1, [x0, #8]
   200d4:	ldr	x0, [sp, #104]
   200d8:	ldr	x0, [x0, #8]
   200dc:	cmp	x0, #0x0
   200e0:	b.ne	20144 <yy_create_buffer+0x12c>  // b.any
   200e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   200e8:	add	x0, x0, #0x0
   200ec:	ldr	x0, [x0]
   200f0:	str	x0, [sp, #72]
   200f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   200f8:	add	x0, x0, #0x0
   200fc:	ldr	x0, [x0]
   20100:	ldr	x1, [x0]
   20104:	ldr	x0, [sp, #72]
   20108:	blr	x1
   2010c:	mov	x19, x0
   20110:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20114:	add	x0, x0, #0x0
   20118:	ldr	x0, [x0]
   2011c:	str	x0, [sp, #80]
   20120:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20124:	add	x0, x0, #0x0
   20128:	ldr	x0, [x0]
   2012c:	ldr	x1, [x0]
   20130:	ldr	x0, [sp, #80]
   20134:	blr	x1
   20138:	mov	x1, x0
   2013c:	mov	x0, x19
   20140:	bl	0 <grub_printf>
   20144:	ldr	x0, [sp, #104]
   20148:	mov	w1, #0x1                   	// #1
   2014c:	str	w1, [x0, #32]
   20150:	ldr	x2, [sp, #40]
   20154:	ldr	x1, [sp, #56]
   20158:	ldr	x0, [sp, #104]
   2015c:	bl	2023c <yy_delete_buffer+0xb4>
   20160:	ldr	x0, [sp, #104]
   20164:	ldr	x19, [sp, #16]
   20168:	ldp	x29, x30, [sp], #112
   2016c:	ret
	...

0000000000020188 <yy_delete_buffer>:
   20188:	stp	x29, x30, [sp, #-48]!
   2018c:	mov	x29, sp
   20190:	str	x0, [sp, #24]
   20194:	str	x1, [sp, #16]
   20198:	ldr	x0, [sp, #16]
   2019c:	str	x0, [sp, #40]
   201a0:	ldr	x0, [sp, #24]
   201a4:	cmp	x0, #0x0
   201a8:	b.eq	20230 <yy_delete_buffer+0xa8>  // b.none
   201ac:	ldr	x0, [sp, #40]
   201b0:	ldr	x0, [x0, #40]
   201b4:	cmp	x0, #0x0
   201b8:	b.eq	201dc <yy_delete_buffer+0x54>  // b.none
   201bc:	ldr	x0, [sp, #40]
   201c0:	ldr	x1, [x0, #40]
   201c4:	ldr	x0, [sp, #40]
   201c8:	ldr	x0, [x0, #24]
   201cc:	lsl	x0, x0, #3
   201d0:	add	x0, x1, x0
   201d4:	ldr	x0, [x0]
   201d8:	b	201e0 <yy_delete_buffer+0x58>
   201dc:	mov	x0, #0x0                   	// #0
   201e0:	ldr	x1, [sp, #24]
   201e4:	cmp	x0, x1
   201e8:	b.ne	20208 <yy_delete_buffer+0x80>  // b.any
   201ec:	ldr	x0, [sp, #40]
   201f0:	ldr	x1, [x0, #40]
   201f4:	ldr	x0, [sp, #40]
   201f8:	ldr	x0, [x0, #24]
   201fc:	lsl	x0, x0, #3
   20200:	add	x0, x1, x0
   20204:	str	xzr, [x0]
   20208:	ldr	x0, [sp, #24]
   2020c:	ldr	w0, [x0, #32]
   20210:	cmp	w0, #0x0
   20214:	b.eq	20224 <yy_delete_buffer+0x9c>  // b.none
   20218:	ldr	x0, [sp, #24]
   2021c:	ldr	x0, [x0, #8]
   20220:	bl	0 <grub_free>
   20224:	ldr	x0, [sp, #24]
   20228:	bl	0 <grub_free>
   2022c:	b	20234 <yy_delete_buffer+0xac>
   20230:	nop
   20234:	ldp	x29, x30, [sp], #48
   20238:	ret
   2023c:	stp	x29, x30, [sp, #-64]!
   20240:	mov	x29, sp
   20244:	str	x0, [sp, #40]
   20248:	str	x1, [sp, #32]
   2024c:	str	x2, [sp, #24]
   20250:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20254:	add	x0, x0, #0x0
   20258:	ldr	x0, [x0]
   2025c:	ldr	w0, [x0]
   20260:	str	w0, [sp, #60]
   20264:	ldr	x0, [sp, #24]
   20268:	str	x0, [sp, #48]
   2026c:	ldr	x1, [sp, #24]
   20270:	ldr	x0, [sp, #40]
   20274:	bl	20318 <yy_flush_buffer>
   20278:	ldr	x0, [sp, #40]
   2027c:	ldr	x1, [sp, #32]
   20280:	str	x1, [x0]
   20284:	ldr	x0, [sp, #40]
   20288:	mov	w1, #0x1                   	// #1
   2028c:	str	w1, [x0, #52]
   20290:	ldr	x0, [sp, #48]
   20294:	ldr	x0, [x0, #40]
   20298:	cmp	x0, #0x0
   2029c:	b.eq	202c0 <yy_delete_buffer+0x138>  // b.none
   202a0:	ldr	x0, [sp, #48]
   202a4:	ldr	x1, [x0, #40]
   202a8:	ldr	x0, [sp, #48]
   202ac:	ldr	x0, [x0, #24]
   202b0:	lsl	x0, x0, #3
   202b4:	add	x0, x1, x0
   202b8:	ldr	x0, [x0]
   202bc:	b	202c4 <yy_delete_buffer+0x13c>
   202c0:	mov	x0, #0x0                   	// #0
   202c4:	ldr	x1, [sp, #40]
   202c8:	cmp	x0, x1
   202cc:	b.eq	202e4 <yy_delete_buffer+0x15c>  // b.none
   202d0:	ldr	x0, [sp, #40]
   202d4:	mov	w1, #0x1                   	// #1
   202d8:	str	w1, [x0, #44]
   202dc:	ldr	x0, [sp, #40]
   202e0:	str	wzr, [x0, #48]
   202e4:	ldr	x0, [sp, #40]
   202e8:	str	wzr, [x0, #36]
   202ec:	ldr	w1, [sp, #60]
   202f0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   202f4:	add	x0, x0, #0x0
   202f8:	ldr	x0, [x0]
   202fc:	str	w1, [x0]
   20300:	nop
   20304:	ldp	x29, x30, [sp], #64
   20308:	ret
   2030c:	nop
	...

0000000000020318 <yy_flush_buffer>:
   20318:	stp	x29, x30, [sp, #-48]!
   2031c:	mov	x29, sp
   20320:	str	x0, [sp, #24]
   20324:	str	x1, [sp, #16]
   20328:	ldr	x0, [sp, #16]
   2032c:	str	x0, [sp, #40]
   20330:	ldr	x0, [sp, #24]
   20334:	cmp	x0, #0x0
   20338:	b.eq	203d0 <yy_flush_buffer+0xb8>  // b.none
   2033c:	ldr	x0, [sp, #24]
   20340:	str	wzr, [x0, #28]
   20344:	ldr	x0, [sp, #24]
   20348:	ldr	x0, [x0, #8]
   2034c:	strb	wzr, [x0]
   20350:	ldr	x0, [sp, #24]
   20354:	ldr	x0, [x0, #8]
   20358:	add	x0, x0, #0x1
   2035c:	strb	wzr, [x0]
   20360:	ldr	x0, [sp, #24]
   20364:	ldr	x1, [x0, #8]
   20368:	ldr	x0, [sp, #24]
   2036c:	str	x1, [x0, #16]
   20370:	ldr	x0, [sp, #24]
   20374:	mov	w1, #0x1                   	// #1
   20378:	str	w1, [x0, #40]
   2037c:	ldr	x0, [sp, #24]
   20380:	str	wzr, [x0, #56]
   20384:	ldr	x0, [sp, #40]
   20388:	ldr	x0, [x0, #40]
   2038c:	cmp	x0, #0x0
   20390:	b.eq	203b4 <yy_flush_buffer+0x9c>  // b.none
   20394:	ldr	x0, [sp, #40]
   20398:	ldr	x1, [x0, #40]
   2039c:	ldr	x0, [sp, #40]
   203a0:	ldr	x0, [x0, #24]
   203a4:	lsl	x0, x0, #3
   203a8:	add	x0, x1, x0
   203ac:	ldr	x0, [x0]
   203b0:	b	203b8 <yy_flush_buffer+0xa0>
   203b4:	mov	x0, #0x0                   	// #0
   203b8:	ldr	x1, [sp, #24]
   203bc:	cmp	x0, x1
   203c0:	b.ne	203d4 <yy_flush_buffer+0xbc>  // b.any
   203c4:	ldr	x0, [sp, #16]
   203c8:	bl	1ff60 <yy_switch_to_buffer+0x13c>
   203cc:	b	203d4 <yy_flush_buffer+0xbc>
   203d0:	nop
   203d4:	ldp	x29, x30, [sp], #48
   203d8:	ret

00000000000203dc <yypush_buffer_state>:
   203dc:	stp	x29, x30, [sp, #-48]!
   203e0:	mov	x29, sp
   203e4:	str	x0, [sp, #24]
   203e8:	str	x1, [sp, #16]
   203ec:	ldr	x0, [sp, #16]
   203f0:	str	x0, [sp, #40]
   203f4:	ldr	x0, [sp, #24]
   203f8:	cmp	x0, #0x0
   203fc:	b.eq	20520 <yypush_buffer_state+0x144>  // b.none
   20400:	ldr	x0, [sp, #16]
   20404:	bl	20648 <yypop_buffer_state+0x11c>
   20408:	ldr	x0, [sp, #40]
   2040c:	ldr	x0, [x0, #40]
   20410:	cmp	x0, #0x0
   20414:	b.eq	204a0 <yypush_buffer_state+0xc4>  // b.none
   20418:	ldr	x0, [sp, #40]
   2041c:	ldr	x1, [x0, #40]
   20420:	ldr	x0, [sp, #40]
   20424:	ldr	x0, [x0, #24]
   20428:	lsl	x0, x0, #3
   2042c:	add	x0, x1, x0
   20430:	ldr	x0, [x0]
   20434:	cmp	x0, #0x0
   20438:	b.eq	204a0 <yypush_buffer_state+0xc4>  // b.none
   2043c:	ldr	x0, [sp, #40]
   20440:	ldr	x0, [x0, #64]
   20444:	ldr	x1, [sp, #40]
   20448:	ldrb	w1, [x1, #48]
   2044c:	strb	w1, [x0]
   20450:	ldr	x0, [sp, #40]
   20454:	ldr	x1, [x0, #40]
   20458:	ldr	x0, [sp, #40]
   2045c:	ldr	x0, [x0, #24]
   20460:	lsl	x0, x0, #3
   20464:	add	x0, x1, x0
   20468:	ldr	x0, [x0]
   2046c:	ldr	x1, [sp, #40]
   20470:	ldr	x1, [x1, #64]
   20474:	str	x1, [x0, #16]
   20478:	ldr	x0, [sp, #40]
   2047c:	ldr	x1, [x0, #40]
   20480:	ldr	x0, [sp, #40]
   20484:	ldr	x0, [x0, #24]
   20488:	lsl	x0, x0, #3
   2048c:	add	x0, x1, x0
   20490:	ldr	x0, [x0]
   20494:	ldr	x1, [sp, #40]
   20498:	ldr	w1, [x1, #52]
   2049c:	str	w1, [x0, #28]
   204a0:	ldr	x0, [sp, #40]
   204a4:	ldr	x0, [x0, #40]
   204a8:	cmp	x0, #0x0
   204ac:	b.eq	204e8 <yypush_buffer_state+0x10c>  // b.none
   204b0:	ldr	x0, [sp, #40]
   204b4:	ldr	x1, [x0, #40]
   204b8:	ldr	x0, [sp, #40]
   204bc:	ldr	x0, [x0, #24]
   204c0:	lsl	x0, x0, #3
   204c4:	add	x0, x1, x0
   204c8:	ldr	x0, [x0]
   204cc:	cmp	x0, #0x0
   204d0:	b.eq	204e8 <yypush_buffer_state+0x10c>  // b.none
   204d4:	ldr	x0, [sp, #40]
   204d8:	ldr	x0, [x0, #24]
   204dc:	add	x1, x0, #0x1
   204e0:	ldr	x0, [sp, #40]
   204e4:	str	x1, [x0, #24]
   204e8:	ldr	x0, [sp, #40]
   204ec:	ldr	x1, [x0, #40]
   204f0:	ldr	x0, [sp, #40]
   204f4:	ldr	x0, [x0, #24]
   204f8:	lsl	x0, x0, #3
   204fc:	add	x0, x1, x0
   20500:	ldr	x1, [sp, #24]
   20504:	str	x1, [x0]
   20508:	ldr	x0, [sp, #16]
   2050c:	bl	1ff60 <yy_switch_to_buffer+0x13c>
   20510:	ldr	x0, [sp, #40]
   20514:	mov	w1, #0x1                   	// #1
   20518:	str	w1, [x0, #80]
   2051c:	b	20524 <yypush_buffer_state+0x148>
   20520:	nop
   20524:	ldp	x29, x30, [sp], #48
   20528:	ret

000000000002052c <yypop_buffer_state>:
   2052c:	stp	x29, x30, [sp, #-48]!
   20530:	mov	x29, sp
   20534:	str	x0, [sp, #24]
   20538:	ldr	x0, [sp, #24]
   2053c:	str	x0, [sp, #40]
   20540:	ldr	x0, [sp, #40]
   20544:	ldr	x0, [x0, #40]
   20548:	cmp	x0, #0x0
   2054c:	b.eq	2063c <yypop_buffer_state+0x110>  // b.none
   20550:	ldr	x0, [sp, #40]
   20554:	ldr	x1, [x0, #40]
   20558:	ldr	x0, [sp, #40]
   2055c:	ldr	x0, [x0, #24]
   20560:	lsl	x0, x0, #3
   20564:	add	x0, x1, x0
   20568:	ldr	x0, [x0]
   2056c:	cmp	x0, #0x0
   20570:	b.eq	2063c <yypop_buffer_state+0x110>  // b.none
   20574:	ldr	x0, [sp, #40]
   20578:	ldr	x0, [x0, #40]
   2057c:	cmp	x0, #0x0
   20580:	b.eq	205a4 <yypop_buffer_state+0x78>  // b.none
   20584:	ldr	x0, [sp, #40]
   20588:	ldr	x1, [x0, #40]
   2058c:	ldr	x0, [sp, #40]
   20590:	ldr	x0, [x0, #24]
   20594:	lsl	x0, x0, #3
   20598:	add	x0, x1, x0
   2059c:	ldr	x0, [x0]
   205a0:	b	205a8 <yypop_buffer_state+0x7c>
   205a4:	mov	x0, #0x0                   	// #0
   205a8:	ldr	x1, [sp, #24]
   205ac:	bl	20188 <yy_delete_buffer>
   205b0:	ldr	x0, [sp, #40]
   205b4:	ldr	x1, [x0, #40]
   205b8:	ldr	x0, [sp, #40]
   205bc:	ldr	x0, [x0, #24]
   205c0:	lsl	x0, x0, #3
   205c4:	add	x0, x1, x0
   205c8:	str	xzr, [x0]
   205cc:	ldr	x0, [sp, #40]
   205d0:	ldr	x0, [x0, #24]
   205d4:	cmp	x0, #0x0
   205d8:	b.eq	205f0 <yypop_buffer_state+0xc4>  // b.none
   205dc:	ldr	x0, [sp, #40]
   205e0:	ldr	x0, [x0, #24]
   205e4:	sub	x1, x0, #0x1
   205e8:	ldr	x0, [sp, #40]
   205ec:	str	x1, [x0, #24]
   205f0:	ldr	x0, [sp, #40]
   205f4:	ldr	x0, [x0, #40]
   205f8:	cmp	x0, #0x0
   205fc:	b.eq	20640 <yypop_buffer_state+0x114>  // b.none
   20600:	ldr	x0, [sp, #40]
   20604:	ldr	x1, [x0, #40]
   20608:	ldr	x0, [sp, #40]
   2060c:	ldr	x0, [x0, #24]
   20610:	lsl	x0, x0, #3
   20614:	add	x0, x1, x0
   20618:	ldr	x0, [x0]
   2061c:	cmp	x0, #0x0
   20620:	b.eq	20640 <yypop_buffer_state+0x114>  // b.none
   20624:	ldr	x0, [sp, #24]
   20628:	bl	1ff60 <yy_switch_to_buffer+0x13c>
   2062c:	ldr	x0, [sp, #40]
   20630:	mov	w1, #0x1                   	// #1
   20634:	str	w1, [x0, #80]
   20638:	b	20640 <yypop_buffer_state+0x114>
   2063c:	nop
   20640:	ldp	x29, x30, [sp], #48
   20644:	ret
   20648:	stp	x29, x30, [sp, #-112]!
   2064c:	mov	x29, sp
   20650:	str	x19, [sp, #16]
   20654:	str	x0, [sp, #40]
   20658:	ldr	x0, [sp, #40]
   2065c:	str	x0, [sp, #104]
   20660:	ldr	x0, [sp, #104]
   20664:	ldr	x0, [x0, #40]
   20668:	cmp	x0, #0x0
   2066c:	b.ne	20738 <yypop_buffer_state+0x20c>  // b.any
   20670:	mov	x0, #0x1                   	// #1
   20674:	str	x0, [sp, #88]
   20678:	ldr	x0, [sp, #88]
   2067c:	lsl	x0, x0, #3
   20680:	bl	0 <grub_malloc>
   20684:	mov	x1, x0
   20688:	ldr	x0, [sp, #104]
   2068c:	str	x1, [x0, #40]
   20690:	ldr	x0, [sp, #104]
   20694:	ldr	x0, [x0, #40]
   20698:	cmp	x0, #0x0
   2069c:	b.ne	20700 <yypop_buffer_state+0x1d4>  // b.any
   206a0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   206a4:	add	x0, x0, #0x0
   206a8:	ldr	x0, [x0]
   206ac:	str	x0, [sp, #72]
   206b0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   206b4:	add	x0, x0, #0x0
   206b8:	ldr	x0, [x0]
   206bc:	ldr	x1, [x0]
   206c0:	ldr	x0, [sp, #72]
   206c4:	blr	x1
   206c8:	mov	x19, x0
   206cc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   206d0:	add	x0, x0, #0x0
   206d4:	ldr	x0, [x0]
   206d8:	str	x0, [sp, #80]
   206dc:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   206e0:	add	x0, x0, #0x0
   206e4:	ldr	x0, [x0]
   206e8:	ldr	x1, [x0]
   206ec:	ldr	x0, [sp, #80]
   206f0:	blr	x1
   206f4:	mov	x1, x0
   206f8:	mov	x0, x19
   206fc:	bl	0 <grub_printf>
   20700:	ldr	x0, [sp, #104]
   20704:	ldr	x3, [x0, #40]
   20708:	ldr	x0, [sp, #88]
   2070c:	lsl	x0, x0, #3
   20710:	mov	x2, x0
   20714:	mov	w1, #0x0                   	// #0
   20718:	mov	x0, x3
   2071c:	bl	0 <grub_memset>
   20720:	ldr	x0, [sp, #104]
   20724:	ldr	x1, [sp, #88]
   20728:	str	x1, [x0, #32]
   2072c:	ldr	x0, [sp, #104]
   20730:	str	xzr, [x0, #24]
   20734:	b	20844 <yypop_buffer_state+0x318>
   20738:	ldr	x0, [sp, #104]
   2073c:	ldr	x1, [x0, #24]
   20740:	ldr	x0, [sp, #104]
   20744:	ldr	x0, [x0, #32]
   20748:	sub	x0, x0, #0x1
   2074c:	cmp	x1, x0
   20750:	b.cc	20844 <yypop_buffer_state+0x318>  // b.lo, b.ul, b.last
   20754:	mov	x0, #0x8                   	// #8
   20758:	str	x0, [sp, #96]
   2075c:	ldr	x0, [sp, #104]
   20760:	ldr	x0, [x0, #32]
   20764:	ldr	x1, [sp, #96]
   20768:	add	x0, x1, x0
   2076c:	str	x0, [sp, #88]
   20770:	ldr	x0, [sp, #104]
   20774:	ldr	x2, [x0, #40]
   20778:	ldr	x0, [sp, #88]
   2077c:	lsl	x0, x0, #3
   20780:	mov	x1, x0
   20784:	mov	x0, x2
   20788:	bl	0 <grub_realloc>
   2078c:	mov	x1, x0
   20790:	ldr	x0, [sp, #104]
   20794:	str	x1, [x0, #40]
   20798:	ldr	x0, [sp, #104]
   2079c:	ldr	x0, [x0, #40]
   207a0:	cmp	x0, #0x0
   207a4:	b.ne	20808 <yypop_buffer_state+0x2dc>  // b.any
   207a8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   207ac:	add	x0, x0, #0x0
   207b0:	ldr	x0, [x0]
   207b4:	str	x0, [sp, #56]
   207b8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   207bc:	add	x0, x0, #0x0
   207c0:	ldr	x0, [x0]
   207c4:	ldr	x1, [x0]
   207c8:	ldr	x0, [sp, #56]
   207cc:	blr	x1
   207d0:	mov	x19, x0
   207d4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   207d8:	add	x0, x0, #0x0
   207dc:	ldr	x0, [x0]
   207e0:	str	x0, [sp, #64]
   207e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   207e8:	add	x0, x0, #0x0
   207ec:	ldr	x0, [x0]
   207f0:	ldr	x1, [x0]
   207f4:	ldr	x0, [sp, #64]
   207f8:	blr	x1
   207fc:	mov	x1, x0
   20800:	mov	x0, x19
   20804:	bl	0 <grub_printf>
   20808:	ldr	x0, [sp, #104]
   2080c:	ldr	x1, [x0, #40]
   20810:	ldr	x0, [sp, #104]
   20814:	ldr	x0, [x0, #32]
   20818:	lsl	x0, x0, #3
   2081c:	add	x3, x1, x0
   20820:	ldr	x0, [sp, #96]
   20824:	lsl	x0, x0, #3
   20828:	mov	x2, x0
   2082c:	mov	w1, #0x0                   	// #0
   20830:	mov	x0, x3
   20834:	bl	0 <grub_memset>
   20838:	ldr	x0, [sp, #104]
   2083c:	ldr	x1, [sp, #88]
   20840:	str	x1, [x0, #32]
   20844:	ldr	x19, [sp, #16]
   20848:	ldp	x29, x30, [sp], #112
   2084c:	ret
	...

0000000000020868 <yy_scan_buffer>:
   20868:	stp	x29, x30, [sp, #-96]!
   2086c:	mov	x29, sp
   20870:	str	x19, [sp, #16]
   20874:	str	x0, [sp, #56]
   20878:	str	x1, [sp, #48]
   2087c:	str	x2, [sp, #40]
   20880:	ldr	x0, [sp, #48]
   20884:	cmp	x0, #0x1
   20888:	b.ls	208c4 <yy_scan_buffer+0x5c>  // b.plast
   2088c:	ldr	x0, [sp, #48]
   20890:	sub	x0, x0, #0x2
   20894:	ldr	x1, [sp, #56]
   20898:	add	x0, x1, x0
   2089c:	ldrb	w0, [x0]
   208a0:	cmp	w0, #0x0
   208a4:	b.ne	208c4 <yy_scan_buffer+0x5c>  // b.any
   208a8:	ldr	x0, [sp, #48]
   208ac:	sub	x0, x0, #0x1
   208b0:	ldr	x1, [sp, #56]
   208b4:	add	x0, x1, x0
   208b8:	ldrb	w0, [x0]
   208bc:	cmp	w0, #0x0
   208c0:	b.eq	208cc <yy_scan_buffer+0x64>  // b.none
   208c4:	mov	x0, #0x0                   	// #0
   208c8:	b	209c8 <yy_scan_buffer+0x160>
   208cc:	mov	x0, #0x40                  	// #64
   208d0:	bl	0 <grub_malloc>
   208d4:	str	x0, [sp, #88]
   208d8:	ldr	x0, [sp, #88]
   208dc:	cmp	x0, #0x0
   208e0:	b.ne	20944 <yy_scan_buffer+0xdc>  // b.any
   208e4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   208e8:	add	x0, x0, #0x0
   208ec:	ldr	x0, [x0]
   208f0:	str	x0, [sp, #72]
   208f4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   208f8:	add	x0, x0, #0x0
   208fc:	ldr	x0, [x0]
   20900:	ldr	x1, [x0]
   20904:	ldr	x0, [sp, #72]
   20908:	blr	x1
   2090c:	mov	x19, x0
   20910:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20914:	add	x0, x0, #0x0
   20918:	ldr	x0, [x0]
   2091c:	str	x0, [sp, #80]
   20920:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20924:	add	x0, x0, #0x0
   20928:	ldr	x0, [x0]
   2092c:	ldr	x1, [x0]
   20930:	ldr	x0, [sp, #80]
   20934:	blr	x1
   20938:	mov	x1, x0
   2093c:	mov	x0, x19
   20940:	bl	0 <grub_printf>
   20944:	ldr	x0, [sp, #48]
   20948:	sub	w0, w0, #0x2
   2094c:	mov	w1, w0
   20950:	ldr	x0, [sp, #88]
   20954:	str	w1, [x0, #24]
   20958:	ldr	x0, [sp, #88]
   2095c:	ldr	x1, [sp, #56]
   20960:	str	x1, [x0, #8]
   20964:	ldr	x0, [sp, #88]
   20968:	ldr	x1, [x0, #8]
   2096c:	ldr	x0, [sp, #88]
   20970:	str	x1, [x0, #16]
   20974:	ldr	x0, [sp, #88]
   20978:	str	wzr, [x0, #32]
   2097c:	ldr	x0, [sp, #88]
   20980:	str	xzr, [x0]
   20984:	ldr	x0, [sp, #88]
   20988:	ldr	w1, [x0, #24]
   2098c:	ldr	x0, [sp, #88]
   20990:	str	w1, [x0, #28]
   20994:	ldr	x0, [sp, #88]
   20998:	str	wzr, [x0, #36]
   2099c:	ldr	x0, [sp, #88]
   209a0:	mov	w1, #0x1                   	// #1
   209a4:	str	w1, [x0, #40]
   209a8:	ldr	x0, [sp, #88]
   209ac:	str	wzr, [x0, #52]
   209b0:	ldr	x0, [sp, #88]
   209b4:	str	wzr, [x0, #56]
   209b8:	ldr	x1, [sp, #40]
   209bc:	ldr	x0, [sp, #88]
   209c0:	bl	1fe24 <yy_switch_to_buffer>
   209c4:	ldr	x0, [sp, #88]
   209c8:	ldr	x19, [sp, #16]
   209cc:	ldp	x29, x30, [sp], #96
   209d0:	ret
   209d4:	nop
	...

00000000000209f0 <yy_scan_string>:
   209f0:	stp	x29, x30, [sp, #-32]!
   209f4:	mov	x29, sp
   209f8:	str	x0, [sp, #24]
   209fc:	str	x1, [sp, #16]
   20a00:	ldr	x0, [sp, #24]
   20a04:	bl	1df00 <grub_script_yyparse+0x1318>
   20a08:	ldr	x2, [sp, #16]
   20a0c:	mov	w1, w0
   20a10:	ldr	x0, [sp, #24]
   20a14:	bl	20a20 <yy_scan_bytes>
   20a18:	ldp	x29, x30, [sp], #32
   20a1c:	ret

0000000000020a20 <yy_scan_bytes>:
   20a20:	stp	x29, x30, [sp, #-128]!
   20a24:	mov	x29, sp
   20a28:	str	x19, [sp, #16]
   20a2c:	str	x0, [sp, #56]
   20a30:	str	w1, [sp, #52]
   20a34:	str	x2, [sp, #40]
   20a38:	ldr	w0, [sp, #52]
   20a3c:	add	w0, w0, #0x2
   20a40:	sxtw	x0, w0
   20a44:	str	x0, [sp, #112]
   20a48:	ldr	x0, [sp, #112]
   20a4c:	bl	0 <grub_malloc>
   20a50:	str	x0, [sp, #104]
   20a54:	ldr	x0, [sp, #104]
   20a58:	cmp	x0, #0x0
   20a5c:	b.ne	20ac0 <yy_scan_bytes+0xa0>  // b.any
   20a60:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20a64:	add	x0, x0, #0x0
   20a68:	ldr	x0, [x0]
   20a6c:	str	x0, [sp, #80]
   20a70:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20a74:	add	x0, x0, #0x0
   20a78:	ldr	x0, [x0]
   20a7c:	ldr	x1, [x0]
   20a80:	ldr	x0, [sp, #80]
   20a84:	blr	x1
   20a88:	mov	x19, x0
   20a8c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20a90:	add	x0, x0, #0x0
   20a94:	ldr	x0, [x0]
   20a98:	str	x0, [sp, #88]
   20a9c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20aa0:	add	x0, x0, #0x0
   20aa4:	ldr	x0, [x0]
   20aa8:	ldr	x1, [x0]
   20aac:	ldr	x0, [sp, #88]
   20ab0:	blr	x1
   20ab4:	mov	x1, x0
   20ab8:	mov	x0, x19
   20abc:	bl	0 <grub_printf>
   20ac0:	str	wzr, [sp, #124]
   20ac4:	b	20af4 <yy_scan_bytes+0xd4>
   20ac8:	ldrsw	x0, [sp, #124]
   20acc:	ldr	x1, [sp, #56]
   20ad0:	add	x1, x1, x0
   20ad4:	ldrsw	x0, [sp, #124]
   20ad8:	ldr	x2, [sp, #104]
   20adc:	add	x0, x2, x0
   20ae0:	ldrb	w1, [x1]
   20ae4:	strb	w1, [x0]
   20ae8:	ldr	w0, [sp, #124]
   20aec:	add	w0, w0, #0x1
   20af0:	str	w0, [sp, #124]
   20af4:	ldr	w1, [sp, #124]
   20af8:	ldr	w0, [sp, #52]
   20afc:	cmp	w1, w0
   20b00:	b.lt	20ac8 <yy_scan_bytes+0xa8>  // b.tstop
   20b04:	ldrsw	x0, [sp, #52]
   20b08:	add	x0, x0, #0x1
   20b0c:	ldr	x1, [sp, #104]
   20b10:	add	x0, x1, x0
   20b14:	strb	wzr, [x0]
   20b18:	ldrsw	x1, [sp, #52]
   20b1c:	ldr	x2, [sp, #104]
   20b20:	add	x1, x2, x1
   20b24:	ldrb	w0, [x0]
   20b28:	strb	w0, [x1]
   20b2c:	ldr	x2, [sp, #40]
   20b30:	ldr	x1, [sp, #112]
   20b34:	ldr	x0, [sp, #104]
   20b38:	bl	20868 <yy_scan_buffer>
   20b3c:	str	x0, [sp, #96]
   20b40:	ldr	x0, [sp, #96]
   20b44:	cmp	x0, #0x0
   20b48:	b.ne	20bac <yy_scan_bytes+0x18c>  // b.any
   20b4c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20b50:	add	x0, x0, #0x0
   20b54:	ldr	x0, [x0]
   20b58:	str	x0, [sp, #64]
   20b5c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20b60:	add	x0, x0, #0x0
   20b64:	ldr	x0, [x0]
   20b68:	ldr	x1, [x0]
   20b6c:	ldr	x0, [sp, #64]
   20b70:	blr	x1
   20b74:	mov	x19, x0
   20b78:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20b7c:	add	x0, x0, #0x0
   20b80:	ldr	x0, [x0]
   20b84:	str	x0, [sp, #72]
   20b88:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20b8c:	add	x0, x0, #0x0
   20b90:	ldr	x0, [x0]
   20b94:	ldr	x1, [x0]
   20b98:	ldr	x0, [sp, #72]
   20b9c:	blr	x1
   20ba0:	mov	x1, x0
   20ba4:	mov	x0, x19
   20ba8:	bl	0 <grub_printf>
   20bac:	ldr	x0, [sp, #96]
   20bb0:	mov	w1, #0x1                   	// #1
   20bb4:	str	w1, [x0, #32]
   20bb8:	ldr	x0, [sp, #96]
   20bbc:	ldr	x19, [sp, #16]
   20bc0:	ldp	x29, x30, [sp], #128
   20bc4:	ret
	...
   20be8:	stp	x29, x30, [sp, #-80]!
   20bec:	mov	x29, sp
   20bf0:	str	x19, [sp, #16]
   20bf4:	str	w0, [sp, #44]
   20bf8:	str	x1, [sp, #32]
   20bfc:	ldr	x0, [sp, #32]
   20c00:	str	x0, [sp, #72]
   20c04:	ldr	x0, [sp, #72]
   20c08:	ldr	w1, [x0, #84]
   20c0c:	ldr	x0, [sp, #72]
   20c10:	ldr	w0, [x0, #88]
   20c14:	cmp	w1, w0
   20c18:	b.lt	20cf8 <yy_scan_bytes+0x2d8>  // b.tstop
   20c1c:	ldr	x0, [sp, #72]
   20c20:	ldr	w0, [x0, #88]
   20c24:	add	w1, w0, #0x19
   20c28:	ldr	x0, [sp, #72]
   20c2c:	str	w1, [x0, #88]
   20c30:	ldr	x0, [sp, #72]
   20c34:	ldr	w0, [x0, #88]
   20c38:	sxtw	x0, w0
   20c3c:	lsl	x0, x0, #2
   20c40:	str	x0, [sp, #64]
   20c44:	ldr	x0, [sp, #72]
   20c48:	ldr	x0, [x0, #96]
   20c4c:	cmp	x0, #0x0
   20c50:	b.ne	20c6c <yy_scan_bytes+0x24c>  // b.any
   20c54:	ldr	x0, [sp, #64]
   20c58:	bl	0 <grub_malloc>
   20c5c:	mov	x1, x0
   20c60:	ldr	x0, [sp, #72]
   20c64:	str	x1, [x0, #96]
   20c68:	b	20c88 <yy_scan_bytes+0x268>
   20c6c:	ldr	x0, [sp, #72]
   20c70:	ldr	x0, [x0, #96]
   20c74:	ldr	x1, [sp, #64]
   20c78:	bl	0 <grub_realloc>
   20c7c:	mov	x1, x0
   20c80:	ldr	x0, [sp, #72]
   20c84:	str	x1, [x0, #96]
   20c88:	ldr	x0, [sp, #72]
   20c8c:	ldr	x0, [x0, #96]
   20c90:	cmp	x0, #0x0
   20c94:	b.ne	20cf8 <yy_scan_bytes+0x2d8>  // b.any
   20c98:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20c9c:	add	x0, x0, #0x0
   20ca0:	ldr	x0, [x0]
   20ca4:	str	x0, [sp, #48]
   20ca8:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20cac:	add	x0, x0, #0x0
   20cb0:	ldr	x0, [x0]
   20cb4:	ldr	x1, [x0]
   20cb8:	ldr	x0, [sp, #48]
   20cbc:	blr	x1
   20cc0:	mov	x19, x0
   20cc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20cc8:	add	x0, x0, #0x0
   20ccc:	ldr	x0, [x0]
   20cd0:	str	x0, [sp, #56]
   20cd4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20cd8:	add	x0, x0, #0x0
   20cdc:	ldr	x0, [x0]
   20ce0:	ldr	x1, [x0]
   20ce4:	ldr	x0, [sp, #56]
   20ce8:	blr	x1
   20cec:	mov	x1, x0
   20cf0:	mov	x0, x19
   20cf4:	bl	0 <grub_printf>
   20cf8:	ldr	x0, [sp, #72]
   20cfc:	ldr	w0, [x0, #76]
   20d00:	sub	w0, w0, #0x1
   20d04:	ldr	x1, [sp, #72]
   20d08:	ldr	x2, [x1, #96]
   20d0c:	ldr	x1, [sp, #72]
   20d10:	ldr	w1, [x1, #84]
   20d14:	add	w4, w1, #0x1
   20d18:	ldr	x3, [sp, #72]
   20d1c:	str	w4, [x3, #84]
   20d20:	sxtw	x1, w1
   20d24:	lsl	x1, x1, #2
   20d28:	add	x1, x2, x1
   20d2c:	lsr	w2, w0, #31
   20d30:	add	w0, w2, w0
   20d34:	asr	w0, w0, #1
   20d38:	str	w0, [x1]
   20d3c:	ldr	w0, [sp, #44]
   20d40:	lsl	w0, w0, #1
   20d44:	add	w1, w0, #0x1
   20d48:	ldr	x0, [sp, #72]
   20d4c:	str	w1, [x0, #76]
   20d50:	nop
   20d54:	ldr	x19, [sp, #16]
   20d58:	ldp	x29, x30, [sp], #80
   20d5c:	ret
	...
   20d78:	stp	x29, x30, [sp, #-80]!
   20d7c:	mov	x29, sp
   20d80:	str	x19, [sp, #16]
   20d84:	str	x0, [sp, #40]
   20d88:	ldr	x0, [sp, #40]
   20d8c:	str	x0, [sp, #72]
   20d90:	ldr	x0, [sp, #72]
   20d94:	ldr	w0, [x0, #84]
   20d98:	sub	w1, w0, #0x1
   20d9c:	ldr	x0, [sp, #72]
   20da0:	str	w1, [x0, #84]
   20da4:	ldr	x0, [sp, #72]
   20da8:	ldr	w0, [x0, #84]
   20dac:	cmp	w0, #0x0
   20db0:	b.ge	20e14 <yy_scan_bytes+0x3f4>  // b.tcont
   20db4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20db8:	add	x0, x0, #0x0
   20dbc:	ldr	x0, [x0]
   20dc0:	str	x0, [sp, #56]
   20dc4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20dc8:	add	x0, x0, #0x0
   20dcc:	ldr	x0, [x0]
   20dd0:	ldr	x1, [x0]
   20dd4:	ldr	x0, [sp, #56]
   20dd8:	blr	x1
   20ddc:	mov	x19, x0
   20de0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20de4:	add	x0, x0, #0x0
   20de8:	ldr	x0, [x0]
   20dec:	str	x0, [sp, #64]
   20df0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20df4:	add	x0, x0, #0x0
   20df8:	ldr	x0, [x0]
   20dfc:	ldr	x1, [x0]
   20e00:	ldr	x0, [sp, #64]
   20e04:	blr	x1
   20e08:	mov	x1, x0
   20e0c:	mov	x0, x19
   20e10:	bl	0 <grub_printf>
   20e14:	ldr	x0, [sp, #72]
   20e18:	ldr	x1, [x0, #96]
   20e1c:	ldr	x0, [sp, #72]
   20e20:	ldr	w0, [x0, #84]
   20e24:	sxtw	x0, w0
   20e28:	lsl	x0, x0, #2
   20e2c:	add	x0, x1, x0
   20e30:	ldr	w0, [x0]
   20e34:	lsl	w0, w0, #1
   20e38:	add	w1, w0, #0x1
   20e3c:	ldr	x0, [sp, #72]
   20e40:	str	w1, [x0, #76]
   20e44:	nop
   20e48:	ldr	x19, [sp, #16]
   20e4c:	ldp	x29, x30, [sp], #80
   20e50:	ret
   20e54:	nop
	...
   20e70:	stp	x29, x30, [sp, #-48]!
   20e74:	mov	x29, sp
   20e78:	str	x0, [sp, #24]
   20e7c:	str	x1, [sp, #16]
   20e80:	ldr	x0, [sp, #16]
   20e84:	str	x0, [sp, #40]
   20e88:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20e8c:	add	x0, x0, #0x0
   20e90:	ldr	x0, [x0]
   20e94:	bl	0 <grub_fatal>
	...

0000000000020ea0 <yyget_extra>:
   20ea0:	sub	sp, sp, #0x20
   20ea4:	str	x0, [sp, #8]
   20ea8:	ldr	x0, [sp, #8]
   20eac:	str	x0, [sp, #24]
   20eb0:	ldr	x0, [sp, #24]
   20eb4:	ldr	x0, [x0]
   20eb8:	add	sp, sp, #0x20
   20ebc:	ret

0000000000020ec0 <yyget_column>:
   20ec0:	sub	sp, sp, #0x20
   20ec4:	str	x0, [sp, #8]
   20ec8:	ldr	x0, [sp, #8]
   20ecc:	str	x0, [sp, #24]
   20ed0:	ldr	x0, [sp, #24]
   20ed4:	ldr	x0, [x0, #40]
   20ed8:	cmp	x0, #0x0
   20edc:	b.eq	20f04 <yyget_column+0x44>  // b.none
   20ee0:	ldr	x0, [sp, #24]
   20ee4:	ldr	x1, [x0, #40]
   20ee8:	ldr	x0, [sp, #24]
   20eec:	ldr	x0, [x0, #24]
   20ef0:	lsl	x0, x0, #3
   20ef4:	add	x0, x1, x0
   20ef8:	ldr	x0, [x0]
   20efc:	cmp	x0, #0x0
   20f00:	b.ne	20f0c <yyget_column+0x4c>  // b.any
   20f04:	mov	w0, #0x0                   	// #0
   20f08:	b	20f2c <yyget_column+0x6c>
   20f0c:	ldr	x0, [sp, #24]
   20f10:	ldr	x1, [x0, #40]
   20f14:	ldr	x0, [sp, #24]
   20f18:	ldr	x0, [x0, #24]
   20f1c:	lsl	x0, x0, #3
   20f20:	add	x0, x1, x0
   20f24:	ldr	x0, [x0]
   20f28:	ldr	w0, [x0, #48]
   20f2c:	add	sp, sp, #0x20
   20f30:	ret

0000000000020f34 <yyget_leng>:
   20f34:	sub	sp, sp, #0x20
   20f38:	str	x0, [sp, #8]
   20f3c:	ldr	x0, [sp, #8]
   20f40:	str	x0, [sp, #24]
   20f44:	ldr	x0, [sp, #24]
   20f48:	ldr	w0, [x0, #56]
   20f4c:	add	sp, sp, #0x20
   20f50:	ret

0000000000020f54 <yyget_text>:
   20f54:	sub	sp, sp, #0x20
   20f58:	str	x0, [sp, #8]
   20f5c:	ldr	x0, [sp, #8]
   20f60:	str	x0, [sp, #24]
   20f64:	ldr	x0, [sp, #24]
   20f68:	add	x0, x0, #0x80
   20f6c:	add	sp, sp, #0x20
   20f70:	ret

0000000000020f74 <yyset_extra>:
   20f74:	sub	sp, sp, #0x20
   20f78:	str	x0, [sp, #8]
   20f7c:	str	x1, [sp]
   20f80:	ldr	x0, [sp]
   20f84:	str	x0, [sp, #24]
   20f88:	ldr	x0, [sp, #24]
   20f8c:	ldr	x1, [sp, #8]
   20f90:	str	x1, [x0]
   20f94:	nop
   20f98:	add	sp, sp, #0x20
   20f9c:	ret

0000000000020fa0 <yyset_column>:
   20fa0:	stp	x29, x30, [sp, #-80]!
   20fa4:	mov	x29, sp
   20fa8:	str	x19, [sp, #16]
   20fac:	str	w0, [sp, #44]
   20fb0:	str	x1, [sp, #32]
   20fb4:	ldr	x0, [sp, #32]
   20fb8:	str	x0, [sp, #72]
   20fbc:	ldr	x0, [sp, #72]
   20fc0:	ldr	x0, [x0, #40]
   20fc4:	cmp	x0, #0x0
   20fc8:	b.eq	20ff0 <yyset_column+0x50>  // b.none
   20fcc:	ldr	x0, [sp, #72]
   20fd0:	ldr	x1, [x0, #40]
   20fd4:	ldr	x0, [sp, #72]
   20fd8:	ldr	x0, [x0, #24]
   20fdc:	lsl	x0, x0, #3
   20fe0:	add	x0, x1, x0
   20fe4:	ldr	x0, [x0]
   20fe8:	cmp	x0, #0x0
   20fec:	b.ne	21050 <yyset_column+0xb0>  // b.any
   20ff0:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   20ff4:	add	x0, x0, #0x0
   20ff8:	ldr	x0, [x0]
   20ffc:	str	x0, [sp, #56]
   21000:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   21004:	add	x0, x0, #0x0
   21008:	ldr	x0, [x0]
   2100c:	ldr	x1, [x0]
   21010:	ldr	x0, [sp, #56]
   21014:	blr	x1
   21018:	mov	x19, x0
   2101c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   21020:	add	x0, x0, #0x0
   21024:	ldr	x0, [x0]
   21028:	str	x0, [sp, #64]
   2102c:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   21030:	add	x0, x0, #0x0
   21034:	ldr	x0, [x0]
   21038:	ldr	x1, [x0]
   2103c:	ldr	x0, [sp, #64]
   21040:	blr	x1
   21044:	mov	x1, x0
   21048:	mov	x0, x19
   2104c:	bl	0 <grub_printf>
   21050:	ldr	x0, [sp, #72]
   21054:	ldr	x1, [x0, #40]
   21058:	ldr	x0, [sp, #72]
   2105c:	ldr	x0, [x0, #24]
   21060:	lsl	x0, x0, #3
   21064:	add	x0, x1, x0
   21068:	ldr	x0, [x0]
   2106c:	ldr	w1, [sp, #44]
   21070:	str	w1, [x0, #48]
   21074:	nop
   21078:	ldr	x19, [sp, #16]
   2107c:	ldp	x29, x30, [sp], #80
   21080:	ret
   21084:	nop
	...

00000000000210a0 <yyget_lval>:
   210a0:	sub	sp, sp, #0x20
   210a4:	str	x0, [sp, #8]
   210a8:	ldr	x0, [sp, #8]
   210ac:	str	x0, [sp, #24]
   210b0:	ldr	x0, [sp, #24]
   210b4:	ldr	x0, [x0, #8336]
   210b8:	add	sp, sp, #0x20
   210bc:	ret

00000000000210c0 <yyset_lval>:
   210c0:	sub	sp, sp, #0x20
   210c4:	str	x0, [sp, #8]
   210c8:	str	x1, [sp]
   210cc:	ldr	x0, [sp]
   210d0:	str	x0, [sp, #24]
   210d4:	ldr	x0, [sp, #24]
   210d8:	ldr	x1, [sp, #8]
   210dc:	str	x1, [x0, #8336]
   210e0:	nop
   210e4:	add	sp, sp, #0x20
   210e8:	ret

00000000000210ec <yylex_init>:
   210ec:	stp	x29, x30, [sp, #-32]!
   210f0:	mov	x29, sp
   210f4:	str	x0, [sp, #24]
   210f8:	ldr	x0, [sp, #24]
   210fc:	cmp	x0, #0x0
   21100:	b.ne	21120 <yylex_init+0x34>  // b.any
   21104:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   21108:	add	x0, x0, #0x0
   2110c:	ldr	x0, [x0]
   21110:	mov	w1, #0xa                   	// #10
   21114:	str	w1, [x0]
   21118:	mov	w0, #0x1                   	// #1
   2111c:	b	21180 <yylex_init+0x94>
   21120:	mov	x0, #0x2098                	// #8344
   21124:	bl	0 <grub_malloc>
   21128:	mov	x1, x0
   2112c:	ldr	x0, [sp, #24]
   21130:	str	x1, [x0]
   21134:	ldr	x0, [sp, #24]
   21138:	ldr	x0, [x0]
   2113c:	cmp	x0, #0x0
   21140:	b.ne	21160 <yylex_init+0x74>  // b.any
   21144:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   21148:	add	x0, x0, #0x0
   2114c:	ldr	x0, [x0]
   21150:	mov	w1, #0x3                   	// #3
   21154:	str	w1, [x0]
   21158:	mov	w0, #0x1                   	// #1
   2115c:	b	21180 <yylex_init+0x94>
   21160:	ldr	x0, [sp, #24]
   21164:	ldr	x0, [x0]
   21168:	mov	x2, #0x2098                	// #8344
   2116c:	mov	w1, #0x0                   	// #0
   21170:	bl	0 <grub_memset>
   21174:	ldr	x0, [sp, #24]
   21178:	ldr	x0, [x0]
   2117c:	bl	21270 <yylex_init_extra+0xe0>
   21180:	ldp	x29, x30, [sp], #32
   21184:	ret
	...

0000000000021190 <yylex_init_extra>:
   21190:	mov	x12, #0x20c0                	// #8384
   21194:	sub	sp, sp, x12
   21198:	stp	x29, x30, [sp]
   2119c:	mov	x29, sp
   211a0:	str	x0, [sp, #24]
   211a4:	str	x1, [sp, #16]
   211a8:	add	x0, sp, #0x28
   211ac:	mov	x1, x0
   211b0:	ldr	x0, [sp, #24]
   211b4:	bl	20f74 <yyset_extra>
   211b8:	ldr	x0, [sp, #16]
   211bc:	cmp	x0, #0x0
   211c0:	b.ne	211e0 <yylex_init_extra+0x50>  // b.any
   211c4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   211c8:	add	x0, x0, #0x0
   211cc:	ldr	x0, [x0]
   211d0:	mov	w1, #0xa                   	// #10
   211d4:	str	w1, [x0]
   211d8:	mov	w0, #0x1                   	// #1
   211dc:	b	21254 <yylex_init_extra+0xc4>
   211e0:	mov	x0, #0x2098                	// #8344
   211e4:	bl	0 <grub_malloc>
   211e8:	mov	x1, x0
   211ec:	ldr	x0, [sp, #16]
   211f0:	str	x1, [x0]
   211f4:	ldr	x0, [sp, #16]
   211f8:	ldr	x0, [x0]
   211fc:	cmp	x0, #0x0
   21200:	b.ne	21220 <yylex_init_extra+0x90>  // b.any
   21204:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   21208:	add	x0, x0, #0x0
   2120c:	ldr	x0, [x0]
   21210:	mov	w1, #0x3                   	// #3
   21214:	str	w1, [x0]
   21218:	mov	w0, #0x1                   	// #1
   2121c:	b	21254 <yylex_init_extra+0xc4>
   21220:	ldr	x0, [sp, #16]
   21224:	ldr	x0, [x0]
   21228:	mov	x2, #0x2098                	// #8344
   2122c:	mov	w1, #0x0                   	// #0
   21230:	bl	0 <grub_memset>
   21234:	ldr	x0, [sp, #16]
   21238:	ldr	x0, [x0]
   2123c:	mov	x1, x0
   21240:	ldr	x0, [sp, #24]
   21244:	bl	20f74 <yyset_extra>
   21248:	ldr	x0, [sp, #16]
   2124c:	ldr	x0, [x0]
   21250:	bl	21270 <yylex_init_extra+0xe0>
   21254:	ldp	x29, x30, [sp]
   21258:	mov	x12, #0x20c0                	// #8384
   2125c:	add	sp, sp, x12
   21260:	ret
   21264:	nop
	...
   21270:	sub	sp, sp, #0x20
   21274:	str	x0, [sp, #8]
   21278:	ldr	x0, [sp, #8]
   2127c:	str	x0, [sp, #24]
   21280:	ldr	x0, [sp, #24]
   21284:	str	xzr, [x0, #40]
   21288:	ldr	x0, [sp, #24]
   2128c:	str	xzr, [x0, #24]
   21290:	ldr	x0, [sp, #24]
   21294:	str	xzr, [x0, #32]
   21298:	ldr	x0, [sp, #24]
   2129c:	str	xzr, [x0, #64]
   212a0:	ldr	x0, [sp, #24]
   212a4:	str	wzr, [x0, #72]
   212a8:	ldr	x0, [sp, #24]
   212ac:	str	wzr, [x0, #76]
   212b0:	ldr	x0, [sp, #24]
   212b4:	str	wzr, [x0, #84]
   212b8:	ldr	x0, [sp, #24]
   212bc:	str	wzr, [x0, #88]
   212c0:	ldr	x0, [sp, #24]
   212c4:	str	xzr, [x0, #96]
   212c8:	ldr	x0, [sp, #24]
   212cc:	str	xzr, [x0, #8320]
   212d0:	ldr	x0, [sp, #24]
   212d4:	str	wzr, [x0, #8328]
   212d8:	ldr	x0, [sp, #24]
   212dc:	str	wzr, [x0, #8332]
   212e0:	ldr	x0, [sp, #24]
   212e4:	str	xzr, [x0, #8]
   212e8:	ldr	x0, [sp, #24]
   212ec:	str	xzr, [x0, #16]
   212f0:	mov	w0, #0x0                   	// #0
   212f4:	add	sp, sp, #0x20
   212f8:	ret

00000000000212fc <yylex_destroy>:
   212fc:	stp	x29, x30, [sp, #-48]!
   21300:	mov	x29, sp
   21304:	str	x0, [sp, #24]
   21308:	ldr	x0, [sp, #24]
   2130c:	str	x0, [sp, #40]
   21310:	b	21374 <yylex_destroy+0x78>
   21314:	ldr	x0, [sp, #40]
   21318:	ldr	x0, [x0, #40]
   2131c:	cmp	x0, #0x0
   21320:	b.eq	21344 <yylex_destroy+0x48>  // b.none
   21324:	ldr	x0, [sp, #40]
   21328:	ldr	x1, [x0, #40]
   2132c:	ldr	x0, [sp, #40]
   21330:	ldr	x0, [x0, #24]
   21334:	lsl	x0, x0, #3
   21338:	add	x0, x1, x0
   2133c:	ldr	x0, [x0]
   21340:	b	21348 <yylex_destroy+0x4c>
   21344:	mov	x0, #0x0                   	// #0
   21348:	ldr	x1, [sp, #24]
   2134c:	bl	20188 <yy_delete_buffer>
   21350:	ldr	x0, [sp, #40]
   21354:	ldr	x1, [x0, #40]
   21358:	ldr	x0, [sp, #40]
   2135c:	ldr	x0, [x0, #24]
   21360:	lsl	x0, x0, #3
   21364:	add	x0, x1, x0
   21368:	str	xzr, [x0]
   2136c:	ldr	x0, [sp, #24]
   21370:	bl	2052c <yypop_buffer_state>
   21374:	ldr	x0, [sp, #40]
   21378:	ldr	x0, [x0, #40]
   2137c:	cmp	x0, #0x0
   21380:	b.eq	213a8 <yylex_destroy+0xac>  // b.none
   21384:	ldr	x0, [sp, #40]
   21388:	ldr	x1, [x0, #40]
   2138c:	ldr	x0, [sp, #40]
   21390:	ldr	x0, [x0, #24]
   21394:	lsl	x0, x0, #3
   21398:	add	x0, x1, x0
   2139c:	ldr	x0, [x0]
   213a0:	cmp	x0, #0x0
   213a4:	b.ne	21314 <yylex_destroy+0x18>  // b.any
   213a8:	ldr	x0, [sp, #40]
   213ac:	ldr	x0, [x0, #40]
   213b0:	bl	0 <grub_free>
   213b4:	ldr	x0, [sp, #40]
   213b8:	str	xzr, [x0, #40]
   213bc:	ldr	x0, [sp, #40]
   213c0:	ldr	x0, [x0, #96]
   213c4:	bl	0 <grub_free>
   213c8:	ldr	x0, [sp, #40]
   213cc:	str	xzr, [x0, #96]
   213d0:	ldr	x0, [sp, #24]
   213d4:	bl	21270 <yylex_init_extra+0xe0>
   213d8:	ldr	x0, [sp, #24]
   213dc:	bl	0 <grub_free>
   213e0:	str	xzr, [sp, #24]
   213e4:	mov	w0, #0x0                   	// #0
   213e8:	ldp	x29, x30, [sp], #48
   213ec:	ret
   213f0:	sub	sp, sp, #0x30
   213f4:	str	x0, [sp, #24]
   213f8:	str	x1, [sp, #16]
   213fc:	str	w2, [sp, #12]
   21400:	str	x3, [sp]
   21404:	ldr	x0, [sp]
   21408:	str	x0, [sp, #32]
   2140c:	str	wzr, [sp, #44]
   21410:	b	21440 <yylex_destroy+0x144>
   21414:	ldrsw	x0, [sp, #44]
   21418:	ldr	x1, [sp, #16]
   2141c:	add	x1, x1, x0
   21420:	ldrsw	x0, [sp, #44]
   21424:	ldr	x2, [sp, #24]
   21428:	add	x0, x2, x0
   2142c:	ldrb	w1, [x1]
   21430:	strb	w1, [x0]
   21434:	ldr	w0, [sp, #44]
   21438:	add	w0, w0, #0x1
   2143c:	str	w0, [sp, #44]
   21440:	ldr	w1, [sp, #44]
   21444:	ldr	w0, [sp, #12]
   21448:	cmp	w1, w0
   2144c:	b.lt	21414 <yylex_destroy+0x118>  // b.tstop
   21450:	nop
   21454:	nop
   21458:	add	sp, sp, #0x30
   2145c:	ret

0000000000021460 <yywrap>:
   21460:	stp	x29, x30, [sp, #-32]!
   21464:	mov	x29, sp
   21468:	str	x0, [sp, #24]
   2146c:	ldr	x0, [sp, #24]
   21470:	bl	20ea0 <yyget_extra>
   21474:	ldr	x0, [x0, #40]
   21478:	ldr	w0, [x0, #76]
   2147c:	cmp	w0, #0x0
   21480:	b.eq	2148c <yywrap+0x2c>  // b.none
   21484:	mov	w0, #0x1                   	// #1
   21488:	b	2149c <yywrap+0x3c>
   2148c:	ldr	x0, [sp, #24]
   21490:	bl	20ea0 <yyget_extra>
   21494:	mov	x1, #0x0                   	// #0
   21498:	bl	1b1c4 <grub_script_lexer_yywrap>
   2149c:	ldp	x29, x30, [sp], #32
   214a0:	ret
   214a4:	stp	x29, x30, [sp, #-80]!
   214a8:	mov	x29, sp
   214ac:	str	x0, [sp, #40]
   214b0:	str	x1, [sp, #32]
   214b4:	str	w2, [sp, #28]
   214b8:	ldr	w0, [sp, #28]
   214bc:	cmp	w0, #0x0
   214c0:	b.ne	214d0 <yywrap+0x70>  // b.any
   214c4:	ldr	x0, [sp, #32]
   214c8:	bl	0 <grub_strlen>
   214cc:	b	214d4 <yywrap+0x74>
   214d0:	ldr	w0, [sp, #28]
   214d4:	str	w0, [sp, #68]
   214d8:	ldr	x0, [sp, #40]
   214dc:	ldr	x0, [x0, #40]
   214e0:	ldr	w1, [x0, #64]
   214e4:	ldr	w0, [sp, #68]
   214e8:	add	w1, w1, w0
   214ec:	ldr	x0, [sp, #40]
   214f0:	ldr	x0, [x0, #40]
   214f4:	ldr	w0, [x0, #68]
   214f8:	cmp	w1, w0
   214fc:	b.cc	2159c <yywrap+0x13c>  // b.lo, b.ul, b.last
   21500:	ldr	w0, [sp, #68]
   21504:	lsl	w0, w0, #1
   21508:	mov	w0, w0
   2150c:	str	x0, [sp, #72]
   21510:	ldr	x0, [sp, #40]
   21514:	ldr	x0, [x0, #40]
   21518:	ldr	w0, [x0, #68]
   2151c:	lsl	w0, w0, #1
   21520:	mov	w0, w0
   21524:	ldr	x1, [sp, #72]
   21528:	cmp	x1, x0
   2152c:	b.cs	21548 <yywrap+0xe8>  // b.hs, b.nlast
   21530:	ldr	x0, [sp, #40]
   21534:	ldr	x0, [x0, #40]
   21538:	ldr	w0, [x0, #68]
   2153c:	lsl	w0, w0, #1
   21540:	mov	w0, w0
   21544:	str	x0, [sp, #72]
   21548:	ldr	x0, [sp, #40]
   2154c:	ldr	x0, [x0, #40]
   21550:	ldr	x0, [x0, #56]
   21554:	ldr	x1, [sp, #72]
   21558:	bl	0 <grub_realloc>
   2155c:	str	x0, [sp, #56]
   21560:	ldr	x0, [sp, #56]
   21564:	cmp	x0, #0x0
   21568:	b.ne	2157c <yywrap+0x11c>  // b.any
   2156c:	mov	x1, #0x0                   	// #0
   21570:	ldr	x0, [sp, #40]
   21574:	bl	1b820 <grub_script_yyerror>
   21578:	b	215e8 <yywrap+0x188>
   2157c:	ldr	x0, [sp, #40]
   21580:	ldr	x0, [x0, #40]
   21584:	ldr	x1, [sp, #56]
   21588:	str	x1, [x0, #56]
   2158c:	ldr	x0, [sp, #40]
   21590:	ldr	x0, [x0, #40]
   21594:	ldr	x1, [sp, #72]
   21598:	str	w1, [x0, #68]
   2159c:	ldr	x0, [sp, #40]
   215a0:	ldr	x0, [x0, #40]
   215a4:	ldr	x1, [x0, #56]
   215a8:	ldr	x0, [sp, #40]
   215ac:	ldr	x0, [x0, #40]
   215b0:	ldr	w0, [x0, #64]
   215b4:	mov	w0, w0
   215b8:	sub	x0, x0, #0x1
   215bc:	add	x0, x1, x0
   215c0:	ldr	x1, [sp, #32]
   215c4:	bl	0 <grub_strcpy>
   215c8:	ldr	x0, [sp, #40]
   215cc:	ldr	x0, [x0, #40]
   215d0:	ldr	w2, [x0, #64]
   215d4:	ldr	x0, [sp, #40]
   215d8:	ldr	x0, [x0, #40]
   215dc:	ldr	w1, [sp, #68]
   215e0:	add	w1, w2, w1
   215e4:	str	w1, [x0, #64]
   215e8:	ldp	x29, x30, [sp], #80
   215ec:	ret
   215f0:	stp	x29, x30, [sp, #-32]!
   215f4:	mov	x29, sp
   215f8:	str	x0, [sp, #24]
   215fc:	str	x1, [sp, #16]
   21600:	ldr	x1, [sp, #16]
   21604:	ldr	x0, [sp, #24]
   21608:	bl	209f0 <yy_scan_string>
   2160c:	cmp	x0, #0x0
   21610:	b.eq	2163c <yywrap+0x1dc>  // b.none
   21614:	ldr	x0, [sp, #16]
   21618:	bl	20ea0 <yyget_extra>
   2161c:	ldr	x0, [x0, #40]
   21620:	mov	w1, #0x1                   	// #1
   21624:	str	w1, [x0, #44]
   21628:	ldr	x1, [sp, #16]
   2162c:	mov	w0, #0x1                   	// #1
   21630:	bl	20be8 <yy_scan_bytes+0x1c8>
   21634:	mov	w0, #0x0                   	// #0
   21638:	b	21650 <yywrap+0x1f0>
   2163c:	ldr	x0, [sp, #16]
   21640:	bl	20ea0 <yyget_extra>
   21644:	mov	x1, #0x0                   	// #0
   21648:	bl	1b820 <grub_script_yyerror>
   2164c:	mov	w0, #0x1                   	// #1
   21650:	ldp	x29, x30, [sp], #32
   21654:	ret
   21658:	stp	x29, x30, [sp, #-48]!
   2165c:	mov	x29, sp
   21660:	str	x0, [sp, #24]
   21664:	str	x1, [sp, #16]
   21668:	ldr	x0, [sp, #16]
   2166c:	bl	20ea0 <yyget_extra>
   21670:	ldr	x0, [x0, #40]
   21674:	str	x0, [sp, #40]
   21678:	ldr	x0, [sp, #40]
   2167c:	ldr	x0, [x0, #80]
   21680:	bl	0 <grub_free>
   21684:	ldr	x0, [sp, #24]
   21688:	bl	0 <grub_strdup>
   2168c:	mov	x1, x0
   21690:	ldr	x0, [sp, #40]
   21694:	str	x1, [x0, #80]
   21698:	ldr	x0, [sp, #40]
   2169c:	ldr	x0, [x0, #80]
   216a0:	cmp	x0, #0x0
   216a4:	b.ne	216d0 <yywrap+0x270>  // b.any
   216a8:	ldr	x0, [sp, #16]
   216ac:	bl	20ea0 <yyget_extra>
   216b0:	mov	x2, x0
   216b4:	adrp	x0, 0 <grub_normal_free_menu-0x168>
   216b8:	add	x0, x0, #0x0
   216bc:	ldr	x1, [x0]
   216c0:	mov	x0, x2
   216c4:	bl	1b820 <grub_script_yyerror>
   216c8:	mov	w0, #0x1                   	// #1
   216cc:	b	216d4 <yywrap+0x274>
   216d0:	mov	w0, #0x0                   	// #0
   216d4:	ldp	x29, x30, [sp], #48
   216d8:	ret
   216dc:	nop
	...
