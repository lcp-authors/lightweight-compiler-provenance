
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_md5.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__md5@@Base+0x1110c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__md5@@Base-0xd4>:
     e20:	adrp	x0, 12000 <PyInit__md5@@Base+0x1110c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 13000 <PyInit__md5@@Base+0x1210c>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 12000 <PyInit__md5@@Base+0x1110c>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 13000 <PyInit__md5@@Base+0x1210c>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 12000 <PyInit__md5@@Base+0x1110c>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 13000 <PyInit__md5@@Base+0x1210c>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 12000 <PyInit__md5@@Base+0x1110c>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>

0000000000000ef4 <PyInit__md5@@Base>:
     ef4:	stp	x29, x30, [sp, #-32]!
     ef8:	stp	x20, x19, [sp, #16]
     efc:	mov	x29, sp
     f00:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
     f04:	ldr	x8, [x8, #4048]
     f08:	adrp	x19, 13000 <PyInit__md5@@Base+0x1210c>
     f0c:	add	x19, x19, #0x2c0
     f10:	mov	x0, x19
     f14:	str	x8, [x19, #8]
     f18:	bl	d80 <PyType_Ready@plt>
     f1c:	tbnz	w0, #31, f68 <PyInit__md5@@Base+0x74>
     f20:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     f24:	add	x0, x0, #0x258
     f28:	mov	w1, #0x3f5                 	// #1013
     f2c:	bl	dc0 <PyModule_Create2@plt>
     f30:	mov	x20, x0
     f34:	cbz	x0, f58 <PyInit__md5@@Base+0x64>
     f38:	ldr	x8, [x19]
     f3c:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
     f40:	add	x1, x1, #0x30
     f44:	mov	x0, x20
     f48:	add	x8, x8, #0x1
     f4c:	mov	x2, x19
     f50:	str	x8, [x19]
     f54:	bl	df0 <PyModule_AddObject@plt>
     f58:	mov	x0, x20
     f5c:	ldp	x20, x19, [sp, #16]
     f60:	ldp	x29, x30, [sp], #32
     f64:	ret
     f68:	mov	x20, xzr
     f6c:	mov	x0, x20
     f70:	ldp	x20, x19, [sp, #16]
     f74:	ldp	x29, x30, [sp], #32
     f78:	ret
     f7c:	b	d70 <PyObject_Free@plt>
     f80:	stp	x29, x30, [sp, #-32]!
     f84:	str	x19, [sp, #16]
     f88:	mov	x29, sp
     f8c:	mov	x19, x0
     f90:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     f94:	add	x0, x0, #0x2c0
     f98:	bl	de0 <_PyObject_New@plt>
     f9c:	cbz	x0, fb8 <PyInit__md5@@Base+0xc4>
     fa0:	ldp	q1, q0, [x19, #16]
     fa4:	stp	q1, q0, [x0, #16]
     fa8:	ldp	q1, q0, [x19, #80]
     fac:	ldp	q3, q2, [x19, #48]
     fb0:	stp	q1, q0, [x0, #80]
     fb4:	stp	q3, q2, [x0, #48]
     fb8:	ldr	x19, [sp, #16]
     fbc:	ldp	x29, x30, [sp], #32
     fc0:	ret
     fc4:	sub	sp, sp, #0x80
     fc8:	stp	x29, x30, [sp, #112]
     fcc:	add	x29, sp, #0x70
     fd0:	ldp	q1, q0, [x0, #16]
     fd4:	sub	x1, x29, #0x10
     fd8:	stp	q1, q0, [sp]
     fdc:	ldp	q1, q0, [x0, #80]
     fe0:	ldp	q3, q2, [x0, #48]
     fe4:	mov	x0, sp
     fe8:	stp	q1, q0, [sp, #64]
     fec:	stp	q3, q2, [sp, #32]
     ff0:	bl	11f8 <PyInit__md5@@Base+0x304>
     ff4:	sub	x0, x29, #0x10
     ff8:	mov	w1, #0x10                  	// #16
     ffc:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1000:	ldp	x29, x30, [sp, #112]
    1004:	add	sp, sp, #0x80
    1008:	ret
    100c:	sub	sp, sp, #0x80
    1010:	stp	x29, x30, [sp, #112]
    1014:	add	x29, sp, #0x70
    1018:	ldp	q1, q0, [x0, #16]
    101c:	sub	x1, x29, #0x10
    1020:	stp	q1, q0, [sp]
    1024:	ldp	q1, q0, [x0, #80]
    1028:	ldp	q3, q2, [x0, #48]
    102c:	mov	x0, sp
    1030:	stp	q1, q0, [sp, #64]
    1034:	stp	q3, q2, [sp, #32]
    1038:	bl	11f8 <PyInit__md5@@Base+0x304>
    103c:	sub	x0, x29, #0x10
    1040:	mov	w1, #0x10                  	// #16
    1044:	bl	e10 <_Py_strhex@plt>
    1048:	ldp	x29, x30, [sp, #112]
    104c:	add	sp, sp, #0x80
    1050:	ret
    1054:	sub	sp, sp, #0xa0
    1058:	stp	x29, x30, [sp, #80]
    105c:	stp	x26, x25, [sp, #96]
    1060:	stp	x24, x23, [sp, #112]
    1064:	stp	x22, x21, [sp, #128]
    1068:	stp	x20, x19, [sp, #144]
    106c:	add	x29, sp, #0x50
    1070:	ldr	x9, [x1, #8]
    1074:	ldrb	w10, [x9, #171]
    1078:	tbnz	w10, #4, 10dc <PyInit__md5@@Base+0x1e8>
    107c:	ldr	x9, [x9, #160]
    1080:	cbz	x9, 10f0 <PyInit__md5@@Base+0x1fc>
    1084:	ldr	x9, [x9]
    1088:	cbz	x9, 10f0 <PyInit__md5@@Base+0x1fc>
    108c:	mov	x8, x1
    1090:	mov	x19, x0
    1094:	mov	x1, sp
    1098:	mov	x0, x8
    109c:	mov	w2, wzr
    10a0:	bl	dd0 <PyObject_GetBuffer@plt>
    10a4:	cmn	w0, #0x1
    10a8:	b.eq	1108 <PyInit__md5@@Base+0x214>  // b.none
    10ac:	ldr	w8, [sp, #36]
    10b0:	cmp	w8, #0x2
    10b4:	b.lt	1128 <PyInit__md5@@Base+0x234>  // b.tstop
    10b8:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    10bc:	ldr	x8, [x8, #4024]
    10c0:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    10c4:	add	x1, x1, #0xb0
    10c8:	ldr	x0, [x8]
    10cc:	bl	d60 <PyErr_SetString@plt>
    10d0:	mov	x0, sp
    10d4:	bl	d10 <PyBuffer_Release@plt>
    10d8:	b	1108 <PyInit__md5@@Base+0x214>
    10dc:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    10e0:	ldr	x8, [x8, #4032]
    10e4:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    10e8:	add	x1, x1, #0x57
    10ec:	b	1100 <PyInit__md5@@Base+0x20c>
    10f0:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    10f4:	ldr	x8, [x8, #4032]
    10f8:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    10fc:	add	x1, x1, #0x86
    1100:	ldr	x0, [x8]
    1104:	bl	d60 <PyErr_SetString@plt>
    1108:	mov	x0, xzr
    110c:	ldp	x20, x19, [sp, #144]
    1110:	ldp	x22, x21, [sp, #128]
    1114:	ldp	x24, x23, [sp, #112]
    1118:	ldp	x26, x25, [sp, #96]
    111c:	ldp	x29, x30, [sp, #80]
    1120:	add	sp, sp, #0xa0
    1124:	ret
    1128:	ldr	x25, [sp, #16]
    112c:	cmp	x25, #0x1
    1130:	b.lt	11d8 <PyInit__md5@@Base+0x2e4>  // b.tstop
    1134:	ldr	x20, [sp]
    1138:	add	x21, x19, #0x10
    113c:	add	x22, x19, #0x2c
    1140:	mov	w24, #0x40                  	// #64
    1144:	b	1170 <PyInit__md5@@Base+0x27c>
    1148:	mov	x0, x21
    114c:	mov	x1, x20
    1150:	bl	1360 <PyInit__md5@@Base+0x46c>
    1154:	ldr	x8, [x21]
    1158:	add	x20, x20, #0x40
    115c:	mov	x25, x23
    1160:	add	x8, x8, #0x200
    1164:	str	x8, [x21]
    1168:	cmp	x25, #0x0
    116c:	b.le	11d8 <PyInit__md5@@Base+0x2e4>
    1170:	ldr	w26, [x19, #40]
    1174:	subs	x23, x25, #0x40
    1178:	b.lt	1180 <PyInit__md5@@Base+0x28c>  // b.tstop
    117c:	cbz	w26, 1148 <PyInit__md5@@Base+0x254>
    1180:	sub	w8, w24, w26
    1184:	cmp	x25, x8
    1188:	add	x9, x19, x26
    118c:	csel	x23, x8, x25, gt
    1190:	add	x0, x9, #0x2c
    1194:	mov	x1, x20
    1198:	mov	x2, x23
    119c:	bl	d00 <memcpy@plt>
    11a0:	add	w8, w26, w23
    11a4:	add	x20, x20, x23
    11a8:	cmp	w8, #0x40
    11ac:	sub	x25, x25, x23
    11b0:	str	w8, [x19, #40]
    11b4:	b.ne	1168 <PyInit__md5@@Base+0x274>  // b.any
    11b8:	mov	x0, x21
    11bc:	mov	x1, x22
    11c0:	bl	1360 <PyInit__md5@@Base+0x46c>
    11c4:	ldr	x8, [x19, #16]
    11c8:	str	wzr, [x19, #40]
    11cc:	add	x8, x8, #0x200
    11d0:	str	x8, [x19, #16]
    11d4:	b	1168 <PyInit__md5@@Base+0x274>
    11d8:	mov	x0, sp
    11dc:	bl	d10 <PyBuffer_Release@plt>
    11e0:	adrp	x0, 12000 <PyInit__md5@@Base+0x1110c>
    11e4:	ldr	x0, [x0, #4056]
    11e8:	ldr	x8, [x0]
    11ec:	add	x8, x8, #0x1
    11f0:	str	x8, [x0]
    11f4:	b	110c <PyInit__md5@@Base+0x218>
    11f8:	stp	x29, x30, [sp, #-48]!
    11fc:	str	x21, [sp, #16]
    1200:	stp	x20, x19, [sp, #32]
    1204:	mov	x29, sp
    1208:	ldr	w8, [x0, #24]
    120c:	ldr	x10, [x0]
    1210:	mov	x19, x1
    1214:	mov	x20, x0
    1218:	lsl	w12, w8, #3
    121c:	add	w9, w8, #0x1
    1220:	add	x21, x0, #0x1c
    1224:	mov	w11, #0x80                  	// #128
    1228:	add	x10, x10, x12
    122c:	cmp	w9, #0x39
    1230:	str	w9, [x0, #24]
    1234:	str	x10, [x0]
    1238:	strb	w11, [x21, x8]
    123c:	b.cc	1284 <PyInit__md5@@Base+0x390>  // b.lo, b.ul, b.last
    1240:	cmp	w9, #0x3f
    1244:	b.hi	126c <PyInit__md5@@Base+0x378>  // b.pmore
    1248:	mov	w9, w9
    124c:	add	x10, x20, #0x1c
    1250:	add	w8, w8, #0x2
    1254:	str	w8, [x20, #24]
    1258:	strb	wzr, [x10, x9]
    125c:	cmp	x9, #0x3f
    1260:	add	x9, x9, #0x1
    1264:	add	w8, w8, #0x1
    1268:	b.cc	1254 <PyInit__md5@@Base+0x360>  // b.lo, b.ul, b.last
    126c:	mov	x0, x20
    1270:	mov	x1, x21
    1274:	bl	1360 <PyInit__md5@@Base+0x46c>
    1278:	mov	w9, wzr
    127c:	str	wzr, [x20, #24]
    1280:	b	128c <PyInit__md5@@Base+0x398>
    1284:	cmp	w9, #0x38
    1288:	b.eq	12ac <PyInit__md5@@Base+0x3b8>  // b.none
    128c:	mov	w8, w9
    1290:	add	x9, x20, #0x1c
    1294:	add	x10, x8, #0x1
    1298:	cmp	x8, #0x37
    129c:	str	w10, [x20, #24]
    12a0:	strb	wzr, [x9, x8]
    12a4:	mov	x8, x10
    12a8:	b.cc	1294 <PyInit__md5@@Base+0x3a0>  // b.lo, b.ul, b.last
    12ac:	ldr	x8, [x20]
    12b0:	mov	x0, x20
    12b4:	mov	x1, x21
    12b8:	stur	x8, [x20, #84]
    12bc:	bl	1360 <PyInit__md5@@Base+0x46c>
    12c0:	ldrb	w8, [x20, #11]
    12c4:	ldr	x21, [sp, #16]
    12c8:	strb	w8, [x19, #3]
    12cc:	ldrh	w8, [x20, #10]
    12d0:	strb	w8, [x19, #2]
    12d4:	ldr	w8, [x20, #8]
    12d8:	lsr	w8, w8, #8
    12dc:	strb	w8, [x19, #1]
    12e0:	ldr	w8, [x20, #8]
    12e4:	strb	w8, [x19]
    12e8:	ldrb	w8, [x20, #15]
    12ec:	strb	w8, [x19, #7]
    12f0:	ldrh	w8, [x20, #14]
    12f4:	strb	w8, [x19, #6]
    12f8:	ldr	w8, [x20, #12]
    12fc:	lsr	w8, w8, #8
    1300:	strb	w8, [x19, #5]
    1304:	ldr	w8, [x20, #12]
    1308:	strb	w8, [x19, #4]
    130c:	ldrb	w8, [x20, #19]
    1310:	strb	w8, [x19, #11]
    1314:	ldrh	w8, [x20, #18]
    1318:	strb	w8, [x19, #10]
    131c:	ldr	w8, [x20, #16]
    1320:	lsr	w8, w8, #8
    1324:	strb	w8, [x19, #9]
    1328:	ldr	w8, [x20, #16]
    132c:	strb	w8, [x19, #8]
    1330:	ldrb	w8, [x20, #23]
    1334:	strb	w8, [x19, #15]
    1338:	ldrh	w8, [x20, #22]
    133c:	strb	w8, [x19, #14]
    1340:	ldr	w8, [x20, #20]
    1344:	lsr	w8, w8, #8
    1348:	strb	w8, [x19, #13]
    134c:	ldr	w8, [x20, #20]
    1350:	strb	w8, [x19, #12]
    1354:	ldp	x20, x19, [sp, #32]
    1358:	ldp	x29, x30, [sp], #48
    135c:	ret
    1360:	sub	sp, sp, #0x80
    1364:	stp	x26, x25, [sp, #64]
    1368:	stp	x24, x23, [sp, #80]
    136c:	stp	x22, x21, [sp, #96]
    1370:	stp	x20, x19, [sp, #112]
    1374:	ldr	w8, [x1]
    1378:	mov	w19, #0xa478                	// #42104
    137c:	movk	w19, #0xd76a, lsl #16
    1380:	mov	w21, #0xb756                	// #46934
    1384:	str	w8, [sp]
    1388:	ldr	w8, [x1, #4]
    138c:	movk	w21, #0xe8c7, lsl #16
    1390:	mov	w22, #0x70db                	// #28891
    1394:	movk	w22, #0x2420, lsl #16
    1398:	str	w8, [sp, #4]
    139c:	ldr	w8, [x1, #8]
    13a0:	ldp	w20, w4, [sp]
    13a4:	mov	w23, #0xceee                	// #52974
    13a8:	movk	w23, #0xc1bd, lsl #16
    13ac:	str	w8, [sp, #8]
    13b0:	ldr	w8, [x1, #12]
    13b4:	mov	w24, #0xfaf                 	// #4015
    13b8:	movk	w24, #0xf57c, lsl #16
    13bc:	str	w8, [sp, #12]
    13c0:	ldr	w8, [x1, #16]
    13c4:	ldp	w18, w6, [sp, #8]
    13c8:	str	w8, [sp, #16]
    13cc:	ldp	w8, w10, [x1, #20]
    13d0:	ldr	w2, [sp, #16]
    13d4:	stp	w8, w10, [sp, #20]
    13d8:	ldp	w5, w11, [x1, #28]
    13dc:	stp	w5, w11, [sp, #28]
    13e0:	ldp	w8, w13, [x1, #36]
    13e4:	stp	w8, w13, [sp, #36]
    13e8:	ldp	w9, w3, [x1, #44]
    13ec:	stp	w9, w3, [sp, #44]
    13f0:	ldp	w12, w7, [x1, #52]
    13f4:	stp	w12, w7, [sp, #52]
    13f8:	ldr	w1, [x1, #60]
    13fc:	str	w1, [sp, #60]
    1400:	ldp	w17, w14, [x0, #8]
    1404:	ldp	w15, w16, [x0, #16]
    1408:	bic	w25, w16, w14
    140c:	and	w26, w15, w14
    1410:	orr	w25, w26, w25
    1414:	add	w26, w17, w20
    1418:	add	w25, w26, w25
    141c:	add	w19, w25, w19
    1420:	ror	w19, w19, #25
    1424:	add	w25, w19, w14
    1428:	bic	w19, w15, w25
    142c:	and	w26, w14, w25
    1430:	orr	w19, w26, w19
    1434:	add	w26, w16, w4
    1438:	add	w19, w26, w19
    143c:	add	w19, w19, w21
    1440:	ror	w19, w19, #20
    1444:	add	w21, w19, w25
    1448:	bic	w19, w14, w21
    144c:	and	w26, w25, w21
    1450:	orr	w19, w26, w19
    1454:	add	w26, w15, w18
    1458:	add	w19, w26, w19
    145c:	add	w19, w19, w22
    1460:	ror	w19, w19, #15
    1464:	add	w22, w19, w21
    1468:	bic	w19, w25, w22
    146c:	and	w26, w21, w22
    1470:	orr	w19, w26, w19
    1474:	add	w26, w14, w6
    1478:	add	w19, w26, w19
    147c:	add	w19, w19, w23
    1480:	ror	w19, w19, #10
    1484:	add	w23, w19, w22
    1488:	bic	w19, w21, w23
    148c:	and	w26, w22, w23
    1490:	orr	w26, w26, w19
    1494:	add	w25, w2, w25
    1498:	add	w25, w25, w26
    149c:	ldr	w19, [sp, #20]
    14a0:	add	w24, w25, w24
    14a4:	ror	w24, w24, #25
    14a8:	add	w24, w24, w23
    14ac:	bic	w25, w22, w24
    14b0:	and	w26, w23, w24
    14b4:	orr	w25, w26, w25
    14b8:	mov	w26, #0xc62a                	// #50730
    14bc:	add	w21, w19, w21
    14c0:	movk	w26, #0x4787, lsl #16
    14c4:	add	w21, w21, w25
    14c8:	add	w21, w21, w26
    14cc:	ror	w21, w21, #20
    14d0:	add	w21, w21, w24
    14d4:	bic	w25, w23, w21
    14d8:	and	w26, w24, w21
    14dc:	orr	w25, w26, w25
    14e0:	mov	w26, #0x4613                	// #17939
    14e4:	add	w22, w10, w22
    14e8:	movk	w26, #0xa830, lsl #16
    14ec:	add	w22, w22, w25
    14f0:	add	w22, w22, w26
    14f4:	ror	w22, w22, #15
    14f8:	add	w22, w22, w21
    14fc:	bic	w25, w24, w22
    1500:	and	w26, w21, w22
    1504:	orr	w25, w26, w25
    1508:	mov	w26, #0x9501                	// #38145
    150c:	add	w23, w5, w23
    1510:	movk	w26, #0xfd46, lsl #16
    1514:	add	w23, w23, w25
    1518:	add	w23, w23, w26
    151c:	ror	w23, w23, #10
    1520:	add	w23, w23, w22
    1524:	bic	w25, w21, w23
    1528:	and	w26, w22, w23
    152c:	orr	w25, w26, w25
    1530:	mov	w26, #0x98d8                	// #39128
    1534:	add	w24, w11, w24
    1538:	movk	w26, #0x6980, lsl #16
    153c:	add	w24, w24, w25
    1540:	add	w24, w24, w26
    1544:	ror	w24, w24, #25
    1548:	add	w24, w24, w23
    154c:	bic	w25, w22, w24
    1550:	and	w26, w23, w24
    1554:	orr	w25, w26, w25
    1558:	mov	w26, #0xf7af                	// #63407
    155c:	add	w21, w8, w21
    1560:	movk	w26, #0x8b44, lsl #16
    1564:	add	w21, w21, w25
    1568:	add	w21, w21, w26
    156c:	ror	w21, w21, #20
    1570:	add	w21, w21, w24
    1574:	bic	w25, w23, w21
    1578:	and	w26, w24, w21
    157c:	orr	w25, w26, w25
    1580:	add	w22, w13, w22
    1584:	mov	w26, #0xffff5bb1            	// #-42063
    1588:	add	w22, w22, w25
    158c:	add	w22, w22, w26
    1590:	ror	w22, w22, #15
    1594:	add	w22, w22, w21
    1598:	bic	w25, w24, w22
    159c:	and	w26, w21, w22
    15a0:	orr	w25, w26, w25
    15a4:	mov	w26, #0xd7be                	// #55230
    15a8:	add	w23, w9, w23
    15ac:	movk	w26, #0x895c, lsl #16
    15b0:	add	w23, w23, w25
    15b4:	add	w23, w23, w26
    15b8:	ror	w23, w23, #10
    15bc:	add	w23, w23, w22
    15c0:	bic	w25, w21, w23
    15c4:	and	w26, w22, w23
    15c8:	orr	w25, w26, w25
    15cc:	mov	w26, #0x1122                	// #4386
    15d0:	add	w24, w3, w24
    15d4:	movk	w26, #0x6b90, lsl #16
    15d8:	add	w24, w24, w25
    15dc:	add	w24, w24, w26
    15e0:	ror	w24, w24, #25
    15e4:	add	w24, w24, w23
    15e8:	bic	w25, w22, w24
    15ec:	and	w26, w23, w24
    15f0:	orr	w25, w26, w25
    15f4:	mov	w26, #0x7193                	// #29075
    15f8:	add	w21, w12, w21
    15fc:	movk	w26, #0xfd98, lsl #16
    1600:	add	w21, w21, w25
    1604:	add	w21, w21, w26
    1608:	ror	w21, w21, #20
    160c:	add	w21, w21, w24
    1610:	bic	w25, w23, w21
    1614:	and	w26, w24, w21
    1618:	orr	w25, w26, w25
    161c:	mov	w26, #0x438e                	// #17294
    1620:	add	w22, w7, w22
    1624:	movk	w26, #0xa679, lsl #16
    1628:	add	w22, w22, w25
    162c:	add	w22, w22, w26
    1630:	ror	w22, w22, #15
    1634:	add	w22, w22, w21
    1638:	bic	w25, w24, w22
    163c:	and	w26, w21, w22
    1640:	orr	w25, w26, w25
    1644:	mov	w26, #0x821                 	// #2081
    1648:	add	w23, w1, w23
    164c:	movk	w26, #0x49b4, lsl #16
    1650:	add	w23, w23, w25
    1654:	add	w23, w23, w26
    1658:	ror	w23, w23, #10
    165c:	add	w23, w23, w22
    1660:	bic	w25, w22, w21
    1664:	and	w26, w23, w21
    1668:	orr	w25, w26, w25
    166c:	mov	w26, #0x2562                	// #9570
    1670:	add	w24, w4, w24
    1674:	movk	w26, #0xf61e, lsl #16
    1678:	add	w24, w24, w25
    167c:	add	w24, w24, w26
    1680:	ror	w24, w24, #27
    1684:	add	w24, w24, w23
    1688:	bic	w25, w23, w22
    168c:	and	w26, w24, w22
    1690:	orr	w25, w26, w25
    1694:	mov	w26, #0xb340                	// #45888
    1698:	add	w21, w10, w21
    169c:	movk	w26, #0xc040, lsl #16
    16a0:	add	w21, w21, w25
    16a4:	add	w21, w21, w26
    16a8:	ror	w21, w21, #23
    16ac:	add	w21, w21, w24
    16b0:	bic	w25, w24, w23
    16b4:	and	w26, w21, w23
    16b8:	orr	w25, w26, w25
    16bc:	mov	w26, #0x5a51                	// #23121
    16c0:	add	w22, w9, w22
    16c4:	movk	w26, #0x265e, lsl #16
    16c8:	add	w22, w22, w25
    16cc:	add	w22, w22, w26
    16d0:	ror	w22, w22, #18
    16d4:	add	w22, w22, w21
    16d8:	bic	w25, w21, w24
    16dc:	and	w26, w22, w24
    16e0:	orr	w25, w26, w25
    16e4:	mov	w26, #0xc7aa                	// #51114
    16e8:	add	w23, w20, w23
    16ec:	movk	w26, #0xe9b6, lsl #16
    16f0:	add	w23, w23, w25
    16f4:	add	w23, w23, w26
    16f8:	ror	w23, w23, #12
    16fc:	add	w23, w23, w22
    1700:	bic	w25, w22, w21
    1704:	and	w26, w23, w21
    1708:	orr	w25, w26, w25
    170c:	mov	w26, #0x105d                	// #4189
    1710:	add	w24, w19, w24
    1714:	movk	w26, #0xd62f, lsl #16
    1718:	add	w24, w24, w25
    171c:	add	w24, w24, w26
    1720:	ror	w24, w24, #27
    1724:	add	w24, w24, w23
    1728:	bic	w25, w23, w22
    172c:	and	w26, w24, w22
    1730:	orr	w25, w26, w25
    1734:	mov	w26, #0x1453                	// #5203
    1738:	add	w21, w13, w21
    173c:	movk	w26, #0x244, lsl #16
    1740:	add	w21, w21, w25
    1744:	add	w21, w21, w26
    1748:	ror	w21, w21, #23
    174c:	add	w21, w21, w24
    1750:	bic	w25, w24, w23
    1754:	and	w26, w21, w23
    1758:	orr	w25, w26, w25
    175c:	mov	w26, #0xe681                	// #59009
    1760:	add	w22, w1, w22
    1764:	movk	w26, #0xd8a1, lsl #16
    1768:	add	w22, w22, w25
    176c:	add	w22, w22, w26
    1770:	ror	w22, w22, #18
    1774:	add	w22, w22, w21
    1778:	bic	w25, w21, w24
    177c:	and	w26, w22, w24
    1780:	orr	w25, w26, w25
    1784:	mov	w26, #0xfbc8                	// #64456
    1788:	add	w23, w2, w23
    178c:	movk	w26, #0xe7d3, lsl #16
    1790:	add	w23, w23, w25
    1794:	add	w23, w23, w26
    1798:	ror	w23, w23, #12
    179c:	add	w23, w23, w22
    17a0:	bic	w25, w22, w21
    17a4:	and	w26, w23, w21
    17a8:	orr	w25, w26, w25
    17ac:	mov	w26, #0xcde6                	// #52710
    17b0:	add	w24, w8, w24
    17b4:	movk	w26, #0x21e1, lsl #16
    17b8:	add	w24, w24, w25
    17bc:	add	w24, w24, w26
    17c0:	ror	w24, w24, #27
    17c4:	add	w24, w24, w23
    17c8:	bic	w25, w23, w22
    17cc:	and	w26, w24, w22
    17d0:	orr	w25, w26, w25
    17d4:	mov	w26, #0x7d6                 	// #2006
    17d8:	add	w21, w7, w21
    17dc:	movk	w26, #0xc337, lsl #16
    17e0:	add	w21, w21, w25
    17e4:	add	w21, w21, w26
    17e8:	ror	w21, w21, #23
    17ec:	add	w21, w21, w24
    17f0:	bic	w25, w24, w23
    17f4:	and	w26, w21, w23
    17f8:	orr	w25, w26, w25
    17fc:	mov	w26, #0xd87                 	// #3463
    1800:	add	w22, w6, w22
    1804:	movk	w26, #0xf4d5, lsl #16
    1808:	add	w22, w22, w25
    180c:	add	w22, w22, w26
    1810:	ror	w22, w22, #18
    1814:	add	w22, w22, w21
    1818:	bic	w25, w21, w24
    181c:	and	w26, w22, w24
    1820:	orr	w25, w26, w25
    1824:	mov	w26, #0x14ed                	// #5357
    1828:	add	w23, w11, w23
    182c:	movk	w26, #0x455a, lsl #16
    1830:	add	w23, w23, w25
    1834:	add	w23, w23, w26
    1838:	ror	w23, w23, #12
    183c:	add	w23, w23, w22
    1840:	bic	w25, w22, w21
    1844:	and	w26, w23, w21
    1848:	orr	w25, w26, w25
    184c:	mov	w26, #0xe905                	// #59653
    1850:	add	w24, w12, w24
    1854:	movk	w26, #0xa9e3, lsl #16
    1858:	add	w24, w24, w25
    185c:	add	w24, w24, w26
    1860:	ror	w24, w24, #27
    1864:	add	w24, w24, w23
    1868:	bic	w25, w23, w22
    186c:	and	w26, w24, w22
    1870:	orr	w25, w26, w25
    1874:	mov	w26, #0xa3f8                	// #41976
    1878:	add	w21, w18, w21
    187c:	movk	w26, #0xfcef, lsl #16
    1880:	add	w21, w21, w25
    1884:	add	w21, w21, w26
    1888:	ror	w21, w21, #23
    188c:	add	w21, w21, w24
    1890:	bic	w25, w24, w23
    1894:	and	w26, w21, w23
    1898:	orr	w25, w26, w25
    189c:	mov	w26, #0x2d9                 	// #729
    18a0:	add	w22, w5, w22
    18a4:	movk	w26, #0x676f, lsl #16
    18a8:	add	w22, w22, w25
    18ac:	add	w22, w22, w26
    18b0:	ror	w22, w22, #18
    18b4:	add	w22, w22, w21
    18b8:	eor	w25, w22, w21
    18bc:	and	w26, w25, w24
    18c0:	add	w23, w3, w23
    18c4:	eor	w26, w26, w21
    18c8:	add	w23, w23, w26
    18cc:	mov	w26, #0x4c8a                	// #19594
    18d0:	movk	w26, #0x8d2a, lsl #16
    18d4:	add	w23, w23, w26
    18d8:	ror	w23, w23, #12
    18dc:	add	w23, w23, w22
    18e0:	mov	w26, #0x3942                	// #14658
    18e4:	add	w24, w19, w24
    18e8:	eor	w25, w25, w23
    18ec:	movk	w26, #0xfffa, lsl #16
    18f0:	add	w24, w24, w25
    18f4:	add	w24, w24, w26
    18f8:	ror	w24, w24, #28
    18fc:	eor	w26, w23, w22
    1900:	add	w24, w24, w23
    1904:	mov	w25, #0xf681                	// #63105
    1908:	add	w21, w11, w21
    190c:	eor	w26, w26, w24
    1910:	movk	w25, #0x8771, lsl #16
    1914:	add	w21, w21, w26
    1918:	add	w21, w21, w25
    191c:	ror	w21, w21, #21
    1920:	eor	w25, w24, w23
    1924:	add	w21, w21, w24
    1928:	mov	w26, #0x6122                	// #24866
    192c:	add	w22, w9, w22
    1930:	eor	w25, w25, w21
    1934:	movk	w26, #0x6d9d, lsl #16
    1938:	add	w22, w22, w25
    193c:	add	w22, w22, w26
    1940:	ror	w22, w22, #16
    1944:	eor	w26, w21, w24
    1948:	add	w22, w22, w21
    194c:	mov	w25, #0x380c                	// #14348
    1950:	add	w23, w7, w23
    1954:	eor	w26, w26, w22
    1958:	movk	w25, #0xfde5, lsl #16
    195c:	add	w23, w23, w26
    1960:	add	w23, w23, w25
    1964:	ror	w23, w23, #9
    1968:	eor	w25, w22, w21
    196c:	add	w23, w23, w22
    1970:	mov	w26, #0xea44                	// #59972
    1974:	add	w24, w4, w24
    1978:	eor	w25, w25, w23
    197c:	movk	w26, #0xa4be, lsl #16
    1980:	add	w24, w24, w25
    1984:	add	w24, w24, w26
    1988:	ror	w24, w24, #28
    198c:	eor	w26, w23, w22
    1990:	add	w24, w24, w23
    1994:	mov	w25, #0xcfa9                	// #53161
    1998:	add	w21, w2, w21
    199c:	eor	w26, w26, w24
    19a0:	movk	w25, #0x4bde, lsl #16
    19a4:	add	w21, w21, w26
    19a8:	add	w21, w21, w25
    19ac:	ror	w21, w21, #21
    19b0:	eor	w25, w24, w23
    19b4:	add	w21, w21, w24
    19b8:	mov	w26, #0x4b60                	// #19296
    19bc:	add	w22, w5, w22
    19c0:	eor	w25, w25, w21
    19c4:	movk	w26, #0xf6bb, lsl #16
    19c8:	add	w22, w22, w25
    19cc:	add	w22, w22, w26
    19d0:	ror	w22, w22, #16
    19d4:	eor	w26, w21, w24
    19d8:	add	w22, w22, w21
    19dc:	mov	w25, #0xbc70                	// #48240
    19e0:	add	w23, w13, w23
    19e4:	eor	w26, w26, w22
    19e8:	movk	w25, #0xbebf, lsl #16
    19ec:	add	w23, w23, w26
    19f0:	add	w23, w23, w25
    19f4:	ror	w23, w23, #9
    19f8:	eor	w25, w22, w21
    19fc:	add	w23, w23, w22
    1a00:	mov	w26, #0x7ec6                	// #32454
    1a04:	add	w24, w12, w24
    1a08:	eor	w25, w25, w23
    1a0c:	movk	w26, #0x289b, lsl #16
    1a10:	add	w24, w24, w25
    1a14:	add	w24, w24, w26
    1a18:	ror	w24, w24, #28
    1a1c:	eor	w26, w23, w22
    1a20:	add	w24, w24, w23
    1a24:	mov	w25, #0x27fa                	// #10234
    1a28:	add	w21, w20, w21
    1a2c:	eor	w26, w26, w24
    1a30:	movk	w25, #0xeaa1, lsl #16
    1a34:	add	w21, w21, w26
    1a38:	add	w21, w21, w25
    1a3c:	ror	w21, w21, #21
    1a40:	eor	w25, w24, w23
    1a44:	add	w21, w21, w24
    1a48:	mov	w26, #0x3085                	// #12421
    1a4c:	add	w22, w6, w22
    1a50:	eor	w25, w25, w21
    1a54:	movk	w26, #0xd4ef, lsl #16
    1a58:	add	w22, w22, w25
    1a5c:	add	w22, w22, w26
    1a60:	ror	w22, w22, #16
    1a64:	eor	w26, w21, w24
    1a68:	add	w22, w22, w21
    1a6c:	mov	w25, #0x1d05                	// #7429
    1a70:	add	w23, w10, w23
    1a74:	eor	w26, w26, w22
    1a78:	movk	w25, #0x488, lsl #16
    1a7c:	add	w23, w23, w26
    1a80:	add	w23, w23, w25
    1a84:	ror	w23, w23, #9
    1a88:	eor	w25, w22, w21
    1a8c:	add	w23, w23, w22
    1a90:	mov	w26, #0xd039                	// #53305
    1a94:	add	w24, w8, w24
    1a98:	eor	w25, w25, w23
    1a9c:	movk	w26, #0xd9d4, lsl #16
    1aa0:	add	w24, w24, w25
    1aa4:	add	w24, w24, w26
    1aa8:	ror	w24, w24, #28
    1aac:	eor	w26, w23, w22
    1ab0:	add	w24, w24, w23
    1ab4:	mov	w25, #0x99e5                	// #39397
    1ab8:	add	w21, w3, w21
    1abc:	eor	w26, w26, w24
    1ac0:	movk	w25, #0xe6db, lsl #16
    1ac4:	add	w21, w21, w26
    1ac8:	add	w21, w21, w25
    1acc:	ror	w21, w21, #21
    1ad0:	eor	w25, w24, w23
    1ad4:	add	w21, w21, w24
    1ad8:	mov	w26, #0x7cf8                	// #31992
    1adc:	add	w22, w1, w22
    1ae0:	eor	w25, w25, w21
    1ae4:	movk	w26, #0x1fa2, lsl #16
    1ae8:	add	w22, w22, w25
    1aec:	add	w22, w22, w26
    1af0:	ror	w22, w22, #16
    1af4:	add	w20, w20, w24
    1af8:	eor	w24, w21, w24
    1afc:	add	w22, w22, w21
    1b00:	mov	w25, #0x5665                	// #22117
    1b04:	add	w23, w18, w23
    1b08:	eor	w24, w24, w22
    1b0c:	movk	w25, #0xc4ac, lsl #16
    1b10:	add	w23, w23, w24
    1b14:	add	w23, w23, w25
    1b18:	ror	w23, w23, #9
    1b1c:	add	w23, w23, w22
    1b20:	add	w5, w5, w21
    1b24:	orn	w21, w23, w21
    1b28:	mov	w26, #0x2244                	// #8772
    1b2c:	eor	w21, w21, w22
    1b30:	movk	w26, #0xf429, lsl #16
    1b34:	add	w20, w20, w21
    1b38:	add	w20, w20, w26
    1b3c:	ror	w20, w20, #26
    1b40:	add	w20, w20, w23
    1b44:	add	w7, w7, w22
    1b48:	orn	w22, w20, w22
    1b4c:	mov	w24, #0xff97                	// #65431
    1b50:	eor	w22, w22, w23
    1b54:	movk	w24, #0x432a, lsl #16
    1b58:	add	w5, w5, w22
    1b5c:	add	w24, w5, w24
    1b60:	ror	w24, w24, #22
    1b64:	add	w24, w24, w20
    1b68:	add	w19, w19, w23
    1b6c:	orn	w23, w24, w23
    1b70:	mov	w25, #0x23a7                	// #9127
    1b74:	eor	w23, w23, w20
    1b78:	movk	w25, #0xab94, lsl #16
    1b7c:	add	w23, w7, w23
    1b80:	add	w23, w23, w25
    1b84:	ror	w23, w23, #17
    1b88:	add	w23, w23, w24
    1b8c:	add	w3, w3, w20
    1b90:	orn	w20, w23, w20
    1b94:	mov	w21, #0xa039                	// #41017
    1b98:	eor	w20, w20, w24
    1b9c:	movk	w21, #0xfc93, lsl #16
    1ba0:	add	w19, w19, w20
    1ba4:	add	w19, w19, w21
    1ba8:	ror	w19, w19, #11
    1bac:	add	w19, w19, w23
    1bb0:	add	w6, w6, w24
    1bb4:	orn	w24, w19, w24
    1bb8:	mov	w26, #0x59c3                	// #22979
    1bbc:	eor	w24, w24, w23
    1bc0:	movk	w26, #0x655b, lsl #16
    1bc4:	add	w3, w3, w24
    1bc8:	add	w3, w3, w26
    1bcc:	ror	w3, w3, #26
    1bd0:	add	w3, w3, w19
    1bd4:	add	w13, w13, w23
    1bd8:	orn	w23, w3, w23
    1bdc:	mov	w22, #0xcc92                	// #52370
    1be0:	eor	w23, w23, w19
    1be4:	movk	w22, #0x8f0c, lsl #16
    1be8:	add	w6, w6, w23
    1bec:	add	w6, w6, w22
    1bf0:	ror	w6, w6, #22
    1bf4:	add	w6, w6, w3
    1bf8:	add	w4, w4, w19
    1bfc:	orn	w19, w6, w19
    1c00:	mov	w5, #0xf47d                	// #62589
    1c04:	eor	w19, w19, w3
    1c08:	movk	w5, #0xffef, lsl #16
    1c0c:	add	w13, w13, w19
    1c10:	add	w13, w13, w5
    1c14:	ror	w13, w13, #17
    1c18:	add	w13, w13, w6
    1c1c:	add	w11, w11, w3
    1c20:	orn	w3, w13, w3
    1c24:	mov	w7, #0x5dd1                	// #24017
    1c28:	eor	w3, w3, w6
    1c2c:	movk	w7, #0x8584, lsl #16
    1c30:	add	w3, w4, w3
    1c34:	add	w3, w3, w7
    1c38:	ror	w3, w3, #11
    1c3c:	add	w3, w3, w13
    1c40:	orn	w4, w3, w6
    1c44:	mov	w25, #0x7e4f                	// #32335
    1c48:	eor	w4, w4, w13
    1c4c:	movk	w25, #0x6fa8, lsl #16
    1c50:	add	w11, w11, w4
    1c54:	add	w11, w11, w25
    1c58:	ror	w11, w11, #26
    1c5c:	add	w11, w11, w3
    1c60:	add	w10, w10, w13
    1c64:	orn	w13, w11, w13
    1c68:	mov	w20, #0xe6e0                	// #59104
    1c6c:	add	w1, w1, w6
    1c70:	eor	w13, w13, w3
    1c74:	movk	w20, #0xfe2c, lsl #16
    1c78:	add	w13, w1, w13
    1c7c:	add	w13, w13, w20
    1c80:	ror	w13, w13, #22
    1c84:	add	w13, w13, w11
    1c88:	orn	w1, w13, w3
    1c8c:	mov	w21, #0x4314                	// #17172
    1c90:	eor	w1, w1, w11
    1c94:	movk	w21, #0xa301, lsl #16
    1c98:	add	w10, w10, w1
    1c9c:	add	w10, w10, w21
    1ca0:	ror	w10, w10, #17
    1ca4:	add	w10, w10, w13
    1ca8:	add	w2, w2, w11
    1cac:	orn	w11, w10, w11
    1cb0:	mov	w24, #0x11a1                	// #4513
    1cb4:	add	w12, w12, w3
    1cb8:	eor	w11, w11, w13
    1cbc:	movk	w24, #0x4e08, lsl #16
    1cc0:	add	w11, w12, w11
    1cc4:	add	w11, w11, w24
    1cc8:	ror	w11, w11, #11
    1ccc:	add	w11, w11, w10
    1cd0:	orn	w12, w11, w13
    1cd4:	mov	w26, #0x7e82                	// #32386
    1cd8:	eor	w12, w12, w10
    1cdc:	movk	w26, #0xf753, lsl #16
    1ce0:	add	w12, w2, w12
    1ce4:	add	w12, w12, w26
    1ce8:	ror	w12, w12, #26
    1cec:	add	w12, w12, w11
    1cf0:	add	w18, w18, w10
    1cf4:	orn	w10, w12, w10
    1cf8:	mov	w23, #0xf235                	// #62005
    1cfc:	add	w9, w9, w13
    1d00:	eor	w10, w10, w11
    1d04:	movk	w23, #0xbd3a, lsl #16
    1d08:	add	w9, w9, w10
    1d0c:	add	w9, w9, w23
    1d10:	ror	w9, w9, #22
    1d14:	add	w9, w9, w12
    1d18:	orn	w10, w9, w11
    1d1c:	mov	w22, #0xd2bb                	// #53947
    1d20:	eor	w10, w10, w12
    1d24:	movk	w22, #0x2ad7, lsl #16
    1d28:	add	w10, w18, w10
    1d2c:	add	w10, w10, w22
    1d30:	ror	w10, w10, #17
    1d34:	add	w10, w10, w9
    1d38:	add	w13, w12, w17
    1d3c:	orn	w12, w10, w12
    1d40:	mov	w19, #0xd391                	// #54161
    1d44:	add	w8, w8, w11
    1d48:	add	w11, w9, w16
    1d4c:	eor	w9, w12, w9
    1d50:	movk	w19, #0xeb86, lsl #16
    1d54:	add	w8, w8, w9
    1d58:	add	w8, w8, w19
    1d5c:	add	w14, w10, w14
    1d60:	ror	w8, w8, #11
    1d64:	add	w10, w10, w15
    1d68:	add	w8, w14, w8
    1d6c:	stp	w13, w8, [x0, #8]
    1d70:	stp	w10, w11, [x0, #16]
    1d74:	ldp	x20, x19, [sp, #112]
    1d78:	ldp	x22, x21, [sp, #96]
    1d7c:	ldp	x24, x23, [sp, #80]
    1d80:	ldp	x26, x25, [sp, #64]
    1d84:	add	sp, sp, #0x80
    1d88:	ret
    1d8c:	mov	w0, #0x40                  	// #64
    1d90:	b	d90 <PyLong_FromLong@plt>
    1d94:	adrp	x0, 2000 <PyInit__md5@@Base+0x110c>
    1d98:	add	x0, x0, #0x3d
    1d9c:	mov	w1, #0x3                   	// #3
    1da0:	b	e00 <PyUnicode_FromStringAndSize@plt>
    1da4:	mov	w0, #0x10                  	// #16
    1da8:	b	d90 <PyLong_FromLong@plt>
    1dac:	sub	sp, sp, #0xb0
    1db0:	stp	x29, x30, [sp, #96]
    1db4:	stp	x26, x25, [sp, #112]
    1db8:	stp	x24, x23, [sp, #128]
    1dbc:	stp	x22, x21, [sp, #144]
    1dc0:	stp	x20, x19, [sp, #160]
    1dc4:	add	x29, sp, #0x60
    1dc8:	mov	x19, x2
    1dcc:	mov	x0, x1
    1dd0:	cbz	x3, 1e08 <PyInit__md5@@Base+0xf14>
    1dd4:	ldr	x20, [x3, #16]
    1dd8:	adrp	x4, 13000 <PyInit__md5@@Base+0x1210c>
    1ddc:	add	x8, sp, #0x8
    1de0:	add	x4, x4, #0x218
    1de4:	mov	w6, #0x1                   	// #1
    1de8:	mov	x1, x19
    1dec:	mov	x2, xzr
    1df0:	mov	w5, wzr
    1df4:	mov	w7, wzr
    1df8:	str	x8, [sp]
    1dfc:	bl	d50 <_PyArg_UnpackKeywords@plt>
    1e00:	cbnz	x0, 1e18 <PyInit__md5@@Base+0xf24>
    1e04:	b	1fc4 <PyInit__md5@@Base+0x10d0>
    1e08:	mov	x20, xzr
    1e0c:	cbz	x0, 1dd8 <PyInit__md5@@Base+0xee4>
    1e10:	cmp	x19, #0x2
    1e14:	b.cs	1dd8 <PyInit__md5@@Base+0xee4>  // b.hs, b.nlast
    1e18:	cmn	x20, x19
    1e1c:	b.eq	1e80 <PyInit__md5@@Base+0xf8c>  // b.none
    1e20:	ldr	x0, [x0]
    1e24:	cbz	x0, 1e80 <PyInit__md5@@Base+0xf8c>
    1e28:	ldr	x8, [x0, #8]
    1e2c:	ldrb	w9, [x8, #171]
    1e30:	tbnz	w9, #4, 1f88 <PyInit__md5@@Base+0x1094>
    1e34:	ldr	x8, [x8, #160]
    1e38:	cbz	x8, 1fac <PyInit__md5@@Base+0x10b8>
    1e3c:	ldr	x8, [x8]
    1e40:	cbz	x8, 1fac <PyInit__md5@@Base+0x10b8>
    1e44:	add	x1, sp, #0x10
    1e48:	mov	w2, wzr
    1e4c:	bl	dd0 <PyObject_GetBuffer@plt>
    1e50:	cmn	w0, #0x1
    1e54:	b.eq	1fc4 <PyInit__md5@@Base+0x10d0>  // b.none
    1e58:	ldr	w8, [sp, #52]
    1e5c:	cmp	w8, #0x2
    1e60:	b.lt	1ff4 <PyInit__md5@@Base+0x1100>  // b.tstop
    1e64:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1e68:	ldr	x8, [x8, #4024]
    1e6c:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1e70:	add	x1, x1, #0xb0
    1e74:	ldr	x0, [x8]
    1e78:	bl	d60 <PyErr_SetString@plt>
    1e7c:	b	1ecc <PyInit__md5@@Base+0xfd8>
    1e80:	mov	w21, wzr
    1e84:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
    1e88:	add	x0, x0, #0x2c0
    1e8c:	bl	de0 <_PyObject_New@plt>
    1e90:	cbz	x0, 1ec8 <PyInit__md5@@Base+0xfd4>
    1e94:	adrp	x8, 2000 <PyInit__md5@@Base+0x110c>
    1e98:	ldr	q0, [x8, #32]
    1e9c:	mov	x20, x0
    1ea0:	str	xzr, [x20, #16]!
    1ea4:	mov	x19, x0
    1ea8:	stur	q0, [x20, #8]
    1eac:	str	wzr, [x20, #24]
    1eb0:	bl	db0 <PyErr_Occurred@plt>
    1eb4:	cbz	x0, 1ed8 <PyInit__md5@@Base+0xfe4>
    1eb8:	ldr	x8, [x19]
    1ebc:	subs	x8, x8, #0x1
    1ec0:	str	x8, [x19]
    1ec4:	b.eq	1f9c <PyInit__md5@@Base+0x10a8>  // b.none
    1ec8:	cbz	w21, 1fc4 <PyInit__md5@@Base+0x10d0>
    1ecc:	add	x0, sp, #0x10
    1ed0:	bl	d10 <PyBuffer_Release@plt>
    1ed4:	b	1fc4 <PyInit__md5@@Base+0x10d0>
    1ed8:	cbz	w21, 1fc8 <PyInit__md5@@Base+0x10d4>
    1edc:	ldr	x25, [sp, #32]
    1ee0:	cmp	x25, #0x1
    1ee4:	b.lt	1fe8 <PyInit__md5@@Base+0x10f4>  // b.tstop
    1ee8:	ldr	x21, [sp, #16]
    1eec:	add	x22, x20, #0x1c
    1ef0:	mov	w24, #0x40                  	// #64
    1ef4:	b	1f20 <PyInit__md5@@Base+0x102c>
    1ef8:	mov	x0, x20
    1efc:	mov	x1, x21
    1f00:	bl	1360 <PyInit__md5@@Base+0x46c>
    1f04:	ldr	x8, [x20]
    1f08:	add	x21, x21, #0x40
    1f0c:	mov	x25, x23
    1f10:	add	x8, x8, #0x200
    1f14:	str	x8, [x20]
    1f18:	cmp	x25, #0x0
    1f1c:	b.le	1fe8 <PyInit__md5@@Base+0x10f4>
    1f20:	ldr	w26, [x19, #40]
    1f24:	subs	x23, x25, #0x40
    1f28:	b.lt	1f30 <PyInit__md5@@Base+0x103c>  // b.tstop
    1f2c:	cbz	w26, 1ef8 <PyInit__md5@@Base+0x1004>
    1f30:	sub	w8, w24, w26
    1f34:	cmp	x25, x8
    1f38:	add	x9, x20, x26
    1f3c:	csel	x23, x8, x25, gt
    1f40:	add	x0, x9, #0x1c
    1f44:	mov	x1, x21
    1f48:	mov	x2, x23
    1f4c:	bl	d00 <memcpy@plt>
    1f50:	add	w8, w26, w23
    1f54:	add	x21, x21, x23
    1f58:	cmp	w8, #0x40
    1f5c:	sub	x25, x25, x23
    1f60:	str	w8, [x19, #40]
    1f64:	b.ne	1f18 <PyInit__md5@@Base+0x1024>  // b.any
    1f68:	mov	x0, x20
    1f6c:	mov	x1, x22
    1f70:	bl	1360 <PyInit__md5@@Base+0x46c>
    1f74:	ldr	x8, [x19, #16]
    1f78:	str	wzr, [x19, #40]
    1f7c:	add	x8, x8, #0x200
    1f80:	str	x8, [x19, #16]
    1f84:	b	1f18 <PyInit__md5@@Base+0x1024>
    1f88:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1f8c:	ldr	x8, [x8, #4032]
    1f90:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1f94:	add	x1, x1, #0x57
    1f98:	b	1fbc <PyInit__md5@@Base+0x10c8>
    1f9c:	mov	x0, x19
    1fa0:	bl	d40 <_Py_Dealloc@plt>
    1fa4:	cbnz	w21, 1ecc <PyInit__md5@@Base+0xfd8>
    1fa8:	b	1fc4 <PyInit__md5@@Base+0x10d0>
    1fac:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1fb0:	ldr	x8, [x8, #4032]
    1fb4:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1fb8:	add	x1, x1, #0x86
    1fbc:	ldr	x0, [x8]
    1fc0:	bl	d60 <PyErr_SetString@plt>
    1fc4:	mov	x19, xzr
    1fc8:	mov	x0, x19
    1fcc:	ldp	x20, x19, [sp, #160]
    1fd0:	ldp	x22, x21, [sp, #144]
    1fd4:	ldp	x24, x23, [sp, #128]
    1fd8:	ldp	x26, x25, [sp, #112]
    1fdc:	ldp	x29, x30, [sp, #96]
    1fe0:	add	sp, sp, #0xb0
    1fe4:	ret
    1fe8:	add	x0, sp, #0x10
    1fec:	bl	d10 <PyBuffer_Release@plt>
    1ff0:	b	1fc8 <PyInit__md5@@Base+0x10d4>
    1ff4:	mov	w21, #0x1                   	// #1
    1ff8:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
    1ffc:	add	x0, x0, #0x2c0
    2000:	bl	de0 <_PyObject_New@plt>
    2004:	cbnz	x0, 1e94 <PyInit__md5@@Base+0xfa0>
    2008:	b	1ec8 <PyInit__md5@@Base+0xfd4>

Disassembly of section .fini:

000000000000200c <.fini>:
    200c:	stp	x29, x30, [sp, #-16]!
    2010:	mov	x29, sp
    2014:	ldp	x29, x30, [sp], #16
    2018:	ret
