
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 16000 <PyInit__lzma@@Base+0x11948>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0x2068>:
    2650:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	nop
    2668:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    266c:	add	x0, x0, #0x9b0
    2670:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12948>
    2674:	add	x1, x1, #0x9b0
    2678:	cmp	x1, x0
    267c:	b.eq	2694 <_PyDict_SetItemId@plt+0x54>  // b.none
    2680:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11948>
    2684:	ldr	x1, [x1, #3976]
    2688:	cbz	x1, 2694 <_PyDict_SetItemId@plt+0x54>
    268c:	mov	x16, x1
    2690:	br	x16
    2694:	ret
    2698:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    269c:	add	x0, x0, #0x9b0
    26a0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12948>
    26a4:	add	x1, x1, #0x9b0
    26a8:	sub	x1, x1, x0
    26ac:	lsr	x2, x1, #63
    26b0:	add	x1, x2, x1, asr #3
    26b4:	cmp	xzr, x1, asr #1
    26b8:	asr	x1, x1, #1
    26bc:	b.eq	26d4 <_PyDict_SetItemId@plt+0x94>  // b.none
    26c0:	adrp	x2, 16000 <PyInit__lzma@@Base+0x11948>
    26c4:	ldr	x2, [x2, #4064]
    26c8:	cbz	x2, 26d4 <_PyDict_SetItemId@plt+0x94>
    26cc:	mov	x16, x2
    26d0:	br	x16
    26d4:	ret
    26d8:	stp	x29, x30, [sp, #-32]!
    26dc:	mov	x29, sp
    26e0:	str	x19, [sp, #16]
    26e4:	adrp	x19, 17000 <PyInit__lzma@@Base+0x12948>
    26e8:	ldrb	w0, [x19, #2480]
    26ec:	cbnz	w0, 2714 <_PyDict_SetItemId@plt+0xd4>
    26f0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    26f4:	ldr	x0, [x0, #3992]
    26f8:	cbz	x0, 2708 <_PyDict_SetItemId@plt+0xc8>
    26fc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    2700:	ldr	x0, [x0, #552]
    2704:	bl	22b0 <__cxa_finalize@plt>
    2708:	bl	2668 <_PyDict_SetItemId@plt+0x28>
    270c:	mov	w0, #0x1                   	// #1
    2710:	strb	w0, [x19, #2480]
    2714:	ldr	x19, [sp, #16]
    2718:	ldp	x29, x30, [sp], #32
    271c:	ret
    2720:	b	2698 <_PyDict_SetItemId@plt+0x58>
    2724:	nop
    2728:	mov	x0, x1
    272c:	b	24d0 <PyMem_RawFree@plt>
    2730:	cbz	x2, 2744 <_PyDict_SetItemId@plt+0x104>
    2734:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    2738:	udiv	x0, x0, x2
    273c:	cmp	x0, x1
    2740:	b.cc	274c <_PyDict_SetItemId@plt+0x10c>  // b.lo, b.ul, b.last
    2744:	mul	x0, x2, x1
    2748:	b	22c0 <PyMem_RawMalloc@plt>
    274c:	mov	x0, #0x0                   	// #0
    2750:	ret
    2754:	nop
    2758:	stp	x29, x30, [sp, #-16]!
    275c:	cmp	w0, #0x7
    2760:	mov	x29, sp
    2764:	b.eq	28b8 <_PyDict_SetItemId@plt+0x278>  // b.none
    2768:	mov	w2, w0
    276c:	b.hi	27d8 <_PyDict_SetItemId@plt+0x198>  // b.pmore
    2770:	cmp	w0, #0x4
    2774:	b.eq	283c <_PyDict_SetItemId@plt+0x1fc>  // b.none
    2778:	b.ls	27a4 <_PyDict_SetItemId@plt+0x164>  // b.plast
    277c:	cmp	w0, #0x5
    2780:	b.eq	2848 <_PyDict_SetItemId@plt+0x208>  // b.none
    2784:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    2788:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    278c:	add	x1, x1, #0xb28
    2790:	ldr	x0, [x0, #2488]
    2794:	bl	2350 <PyErr_SetString@plt>
    2798:	mov	w0, #0x1                   	// #1
    279c:	ldp	x29, x30, [sp], #16
    27a0:	ret
    27a4:	cmp	w0, #0x2
    27a8:	mov	w0, #0x0                   	// #0
    27ac:	b.ls	279c <_PyDict_SetItemId@plt+0x15c>  // b.plast
    27b0:	cmp	w2, #0x3
    27b4:	b.ne	2858 <_PyDict_SetItemId@plt+0x218>  // b.any
    27b8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    27bc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27c0:	add	x1, x1, #0xb08
    27c4:	ldr	x0, [x0, #2488]
    27c8:	bl	2350 <PyErr_SetString@plt>
    27cc:	mov	w0, #0x1                   	// #1
    27d0:	ldp	x29, x30, [sp], #16
    27d4:	ret
    27d8:	cmp	w0, #0xa
    27dc:	b.eq	2878 <_PyDict_SetItemId@plt+0x238>  // b.none
    27e0:	b.ls	280c <_PyDict_SetItemId@plt+0x1cc>  // b.plast
    27e4:	cmp	w0, #0xb
    27e8:	b.ne	2858 <_PyDict_SetItemId@plt+0x218>  // b.any
    27ec:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    27f0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27f4:	add	x1, x1, #0xbc8
    27f8:	ldr	x0, [x0, #2488]
    27fc:	bl	2350 <PyErr_SetString@plt>
    2800:	mov	w0, #0x1                   	// #1
    2804:	ldp	x29, x30, [sp], #16
    2808:	ret
    280c:	cmp	w0, #0x8
    2810:	b.eq	2898 <_PyDict_SetItemId@plt+0x258>  // b.none
    2814:	cmp	w0, #0x9
    2818:	b.ne	2858 <_PyDict_SetItemId@plt+0x218>  // b.any
    281c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    2820:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2824:	add	x1, x1, #0xb90
    2828:	ldr	x0, [x0, #2488]
    282c:	bl	2350 <PyErr_SetString@plt>
    2830:	mov	w0, #0x1                   	// #1
    2834:	ldp	x29, x30, [sp], #16
    2838:	ret
    283c:	mov	w0, #0x0                   	// #0
    2840:	ldp	x29, x30, [sp], #16
    2844:	ret
    2848:	bl	2300 <PyErr_NoMemory@plt>
    284c:	mov	w0, #0x1                   	// #1
    2850:	ldp	x29, x30, [sp], #16
    2854:	ret
    2858:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    285c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2860:	add	x1, x1, #0xbd8
    2864:	ldr	x0, [x0, #2488]
    2868:	bl	25b0 <PyErr_Format@plt>
    286c:	mov	w0, #0x1                   	// #1
    2870:	ldp	x29, x30, [sp], #16
    2874:	ret
    2878:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    287c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2880:	add	x1, x1, #0xba8
    2884:	ldr	x0, [x0, #2488]
    2888:	bl	2350 <PyErr_SetString@plt>
    288c:	mov	w0, #0x1                   	// #1
    2890:	ldp	x29, x30, [sp], #16
    2894:	ret
    2898:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    289c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    28a0:	add	x1, x1, #0xb70
    28a4:	ldr	x0, [x0, #2488]
    28a8:	bl	2350 <PyErr_SetString@plt>
    28ac:	mov	w0, #0x1                   	// #1
    28b0:	ldp	x29, x30, [sp], #16
    28b4:	ret
    28b8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    28bc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    28c0:	add	x1, x1, #0xb48
    28c4:	ldr	x0, [x0, #2488]
    28c8:	bl	2350 <PyErr_SetString@plt>
    28cc:	mov	w0, #0x1                   	// #1
    28d0:	ldp	x29, x30, [sp], #16
    28d4:	ret
    28d8:	ldr	x2, [x0]
    28dc:	cmp	x1, #0x0
    28e0:	ldr	x2, [x2, #16]
    28e4:	add	x4, x2, #0x6
    28e8:	add	x2, x4, x2, asr #3
    28ec:	ccmp	x2, x1, #0x4, gt
    28f0:	csel	x1, x1, x2, gt
    28f4:	b	2240 <_PyBytes_Resize@plt>
    28f8:	stp	x29, x30, [sp, #-96]!
    28fc:	mov	x29, sp
    2900:	stp	x19, x20, [sp, #16]
    2904:	mov	x19, x1
    2908:	mov	x20, x2
    290c:	mov	x1, #0x2000                	// #8192
    2910:	stp	x21, x22, [sp, #32]
    2914:	mov	w21, w3
    2918:	stp	x25, x26, [sp, #64]
    291c:	mov	x26, x0
    2920:	mov	x0, #0x0                   	// #0
    2924:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2928:	str	x0, [sp, #88]
    292c:	cbz	x0, 2a44 <_PyDict_SetItemId@plt+0x404>
    2930:	cmp	x20, #0x0
    2934:	stp	x23, x24, [sp, #48]
    2938:	add	x0, x0, #0x20
    293c:	ldur	x1, [x0, #-16]
    2940:	add	x23, x26, #0x28
    2944:	cset	w22, eq  // eq = none
    2948:	add	x25, sp, #0x58
    294c:	mov	w24, #0xa                   	// #10
    2950:	stp	x19, x20, [x26, #40]
    2954:	stp	x0, x1, [x26, #64]
    2958:	b	296c <_PyDict_SetItemId@plt+0x32c>
    295c:	ldr	x0, [x26, #48]
    2960:	cbz	x0, 29d0 <_PyDict_SetItemId@plt+0x390>
    2964:	ldr	x0, [x26, #72]
    2968:	cbz	x0, 2a5c <_PyDict_SetItemId@plt+0x41c>
    296c:	bl	2580 <PyEval_SaveThread@plt>
    2970:	mov	x20, x0
    2974:	mov	w1, w21
    2978:	mov	x0, x23
    297c:	bl	2250 <lzma_code@plt>
    2980:	mov	w19, w0
    2984:	ldr	x1, [sp, #88]
    2988:	cmp	w22, #0x0
    298c:	ldr	x2, [x26, #64]
    2990:	add	x1, x1, #0x20
    2994:	ccmp	w0, #0xa, #0x0, ne  // ne = any
    2998:	mov	x0, x20
    299c:	sub	x20, x2, x1
    29a0:	b.ne	29b0 <_PyDict_SetItemId@plt+0x370>  // b.any
    29a4:	ldr	x1, [x26, #72]
    29a8:	cmp	x1, #0x0
    29ac:	csel	w19, w24, wzr, eq  // eq = none
    29b0:	bl	2260 <PyEval_RestoreThread@plt>
    29b4:	mov	w0, w19
    29b8:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    29bc:	cmp	w21, #0x3
    29c0:	cbnz	w0, 2a28 <_PyDict_SetItemId@plt+0x3e8>
    29c4:	cbz	w21, 295c <_PyDict_SetItemId@plt+0x31c>
    29c8:	ccmp	w19, #0x1, #0x0, eq  // eq = none
    29cc:	b.ne	2964 <_PyDict_SetItemId@plt+0x324>  // b.any
    29d0:	ldr	x0, [sp, #88]
    29d4:	ldr	x1, [x0, #16]
    29d8:	cmp	x1, x20
    29dc:	b.ne	29f8 <_PyDict_SetItemId@plt+0x3b8>  // b.any
    29e0:	ldp	x19, x20, [sp, #16]
    29e4:	ldp	x21, x22, [sp, #32]
    29e8:	ldp	x23, x24, [sp, #48]
    29ec:	ldp	x25, x26, [sp, #64]
    29f0:	ldp	x29, x30, [sp], #96
    29f4:	ret
    29f8:	mov	x1, x20
    29fc:	add	x0, sp, #0x58
    2a00:	bl	2240 <_PyBytes_Resize@plt>
    2a04:	cmn	w0, #0x1
    2a08:	b.eq	2a28 <_PyDict_SetItemId@plt+0x3e8>  // b.none
    2a0c:	ldp	x19, x20, [sp, #16]
    2a10:	ldp	x21, x22, [sp, #32]
    2a14:	ldp	x23, x24, [sp, #48]
    2a18:	ldp	x25, x26, [sp, #64]
    2a1c:	ldr	x0, [sp, #88]
    2a20:	ldp	x29, x30, [sp], #96
    2a24:	ret
    2a28:	ldr	x0, [sp, #88]
    2a2c:	cbz	x0, 2a40 <_PyDict_SetItemId@plt+0x400>
    2a30:	ldr	x1, [x0]
    2a34:	sub	x1, x1, #0x1
    2a38:	str	x1, [x0]
    2a3c:	cbz	x1, 2a8c <_PyDict_SetItemId@plt+0x44c>
    2a40:	ldp	x23, x24, [sp, #48]
    2a44:	mov	x0, #0x0                   	// #0
    2a48:	ldp	x19, x20, [sp, #16]
    2a4c:	ldp	x21, x22, [sp, #32]
    2a50:	ldp	x25, x26, [sp, #64]
    2a54:	ldp	x29, x30, [sp], #96
    2a58:	ret
    2a5c:	mov	x0, x25
    2a60:	mov	x1, #0xffffffffffffffff    	// #-1
    2a64:	bl	28d8 <_PyDict_SetItemId@plt+0x298>
    2a68:	cmn	w0, #0x1
    2a6c:	b.eq	2a28 <_PyDict_SetItemId@plt+0x3e8>  // b.none
    2a70:	ldr	x1, [sp, #88]
    2a74:	add	x0, x1, #0x20
    2a78:	ldr	x1, [x1, #16]
    2a7c:	add	x0, x0, x20
    2a80:	sub	x1, x1, x20
    2a84:	stp	x0, x1, [x26, #64]
    2a88:	b	296c <_PyDict_SetItemId@plt+0x32c>
    2a8c:	bl	22f0 <_Py_Dealloc@plt>
    2a90:	mov	x0, #0x0                   	// #0
    2a94:	ldp	x19, x20, [sp, #16]
    2a98:	ldp	x21, x22, [sp, #32]
    2a9c:	ldp	x23, x24, [sp, #48]
    2aa0:	ldp	x25, x26, [sp, #64]
    2aa4:	ldp	x29, x30, [sp], #96
    2aa8:	ret
    2aac:	nop
    2ab0:	stp	x29, x30, [sp, #-32]!
    2ab4:	mov	w1, #0x0                   	// #0
    2ab8:	mov	x29, sp
    2abc:	stp	x19, x20, [sp, #16]
    2ac0:	mov	x19, x0
    2ac4:	ldr	x0, [x0, #184]
    2ac8:	bl	2320 <PyThread_acquire_lock@plt>
    2acc:	cbz	w0, 2b10 <_PyDict_SetItemId@plt+0x4d0>
    2ad0:	ldr	w0, [x19, #176]
    2ad4:	cbnz	w0, 2b34 <_PyDict_SetItemId@plt+0x4f4>
    2ad8:	mov	w0, #0x1                   	// #1
    2adc:	str	w0, [x19, #176]
    2ae0:	mov	w3, #0x3                   	// #3
    2ae4:	mov	x2, #0x0                   	// #0
    2ae8:	mov	x1, #0x0                   	// #0
    2aec:	mov	x0, x19
    2af0:	bl	28f8 <_PyDict_SetItemId@plt+0x2b8>
    2af4:	mov	x20, x0
    2af8:	ldr	x0, [x19, #184]
    2afc:	bl	2520 <PyThread_release_lock@plt>
    2b00:	mov	x0, x20
    2b04:	ldp	x19, x20, [sp, #16]
    2b08:	ldp	x29, x30, [sp], #32
    2b0c:	ret
    2b10:	bl	2580 <PyEval_SaveThread@plt>
    2b14:	mov	x20, x0
    2b18:	ldr	x0, [x19, #184]
    2b1c:	mov	w1, #0x1                   	// #1
    2b20:	bl	2320 <PyThread_acquire_lock@plt>
    2b24:	mov	x0, x20
    2b28:	bl	2260 <PyEval_RestoreThread@plt>
    2b2c:	ldr	w0, [x19, #176]
    2b30:	cbz	w0, 2ad8 <_PyDict_SetItemId@plt+0x498>
    2b34:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    2b38:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2b3c:	add	x1, x1, #0xc00
    2b40:	mov	x20, #0x0                   	// #0
    2b44:	ldr	x0, [x0, #4008]
    2b48:	ldr	x0, [x0]
    2b4c:	bl	2350 <PyErr_SetString@plt>
    2b50:	ldr	x0, [x19, #184]
    2b54:	bl	2520 <PyThread_release_lock@plt>
    2b58:	mov	x0, x20
    2b5c:	ldp	x19, x20, [sp, #16]
    2b60:	ldp	x29, x30, [sp], #32
    2b64:	ret
    2b68:	stp	x29, x30, [sp, #-32]!
    2b6c:	mov	x29, sp
    2b70:	str	x19, [sp, #16]
    2b74:	mov	x19, x0
    2b78:	ldr	x0, [x0, #200]
    2b7c:	cbz	x0, 2b84 <_PyDict_SetItemId@plt+0x544>
    2b80:	bl	2270 <PyMem_Free@plt>
    2b84:	add	x0, x19, #0x28
    2b88:	bl	24c0 <lzma_end@plt>
    2b8c:	ldr	x0, [x19, #184]
    2b90:	cbz	x0, 2ba8 <_PyDict_SetItemId@plt+0x568>
    2b94:	ldr	x1, [x0]
    2b98:	str	xzr, [x19, #184]
    2b9c:	sub	x1, x1, #0x1
    2ba0:	str	x1, [x0]
    2ba4:	cbz	x1, 2bd0 <_PyDict_SetItemId@plt+0x590>
    2ba8:	ldr	x0, [x19, #216]
    2bac:	cbz	x0, 2bb4 <_PyDict_SetItemId@plt+0x574>
    2bb0:	bl	2630 <PyThread_free_lock@plt>
    2bb4:	ldr	x1, [x19, #8]
    2bb8:	mov	x0, x19
    2bbc:	ldr	x19, [sp, #16]
    2bc0:	ldp	x29, x30, [sp], #32
    2bc4:	ldr	x1, [x1, #320]
    2bc8:	mov	x16, x1
    2bcc:	br	x16
    2bd0:	bl	22f0 <_Py_Dealloc@plt>
    2bd4:	b	2ba8 <_PyDict_SetItemId@plt+0x568>
    2bd8:	stp	x29, x30, [sp, #-32]!
    2bdc:	mov	x29, sp
    2be0:	str	x19, [sp, #16]
    2be4:	mov	x19, x0
    2be8:	add	x0, x0, #0x28
    2bec:	bl	24c0 <lzma_end@plt>
    2bf0:	ldr	x0, [x19, #184]
    2bf4:	cbz	x0, 2bfc <_PyDict_SetItemId@plt+0x5bc>
    2bf8:	bl	2630 <PyThread_free_lock@plt>
    2bfc:	ldr	x1, [x19, #8]
    2c00:	mov	x0, x19
    2c04:	ldr	x19, [sp, #16]
    2c08:	ldp	x29, x30, [sp], #32
    2c0c:	ldr	x1, [x1, #320]
    2c10:	mov	x16, x1
    2c14:	br	x16
    2c18:	stp	x29, x30, [sp, #-48]!
    2c1c:	mov	x29, sp
    2c20:	stp	x19, x20, [sp, #16]
    2c24:	mov	x20, x0
    2c28:	mov	x0, x2
    2c2c:	str	x21, [sp, #32]
    2c30:	mov	x21, x1
    2c34:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2c38:	cbz	x0, 2c94 <_PyDict_SetItemId@plt+0x654>
    2c3c:	mov	x19, x0
    2c40:	mov	x1, x21
    2c44:	mov	x0, x20
    2c48:	mov	x2, x19
    2c4c:	bl	2640 <_PyDict_SetItemId@plt>
    2c50:	mov	w20, w0
    2c54:	ldr	x1, [x19]
    2c58:	sub	x1, x1, #0x1
    2c5c:	str	x1, [x19]
    2c60:	cbz	x1, 2c78 <_PyDict_SetItemId@plt+0x638>
    2c64:	mov	w0, w20
    2c68:	ldp	x19, x20, [sp, #16]
    2c6c:	ldr	x21, [sp, #32]
    2c70:	ldp	x29, x30, [sp], #48
    2c74:	ret
    2c78:	mov	x0, x19
    2c7c:	bl	22f0 <_Py_Dealloc@plt>
    2c80:	mov	w0, w20
    2c84:	ldp	x19, x20, [sp, #16]
    2c88:	ldr	x21, [sp, #32]
    2c8c:	ldp	x29, x30, [sp], #48
    2c90:	ret
    2c94:	mov	w20, #0xffffffff            	// #-1
    2c98:	b	2c64 <_PyDict_SetItemId@plt+0x624>
    2c9c:	nop
    2ca0:	stp	x29, x30, [sp, #-48]!
    2ca4:	mov	x29, sp
    2ca8:	stp	x19, x20, [sp, #16]
    2cac:	mov	x20, x0
    2cb0:	mov	x0, x2
    2cb4:	str	x21, [sp, #32]
    2cb8:	mov	x21, x1
    2cbc:	bl	25e0 <PyLong_FromLongLong@plt>
    2cc0:	cbz	x0, 2cec <_PyDict_SetItemId@plt+0x6ac>
    2cc4:	mov	x19, x0
    2cc8:	mov	x1, x21
    2ccc:	mov	x0, x20
    2cd0:	mov	x2, x19
    2cd4:	bl	2590 <PyModule_AddObject@plt>
    2cd8:	cbz	w0, 2cf0 <_PyDict_SetItemId@plt+0x6b0>
    2cdc:	ldr	x0, [x19]
    2ce0:	sub	x0, x0, #0x1
    2ce4:	str	x0, [x19]
    2ce8:	cbz	x0, 2d00 <_PyDict_SetItemId@plt+0x6c0>
    2cec:	mov	w0, #0xffffffff            	// #-1
    2cf0:	ldp	x19, x20, [sp, #16]
    2cf4:	ldr	x21, [sp, #32]
    2cf8:	ldp	x29, x30, [sp], #48
    2cfc:	ret
    2d00:	mov	x0, x19
    2d04:	bl	22f0 <_Py_Dealloc@plt>
    2d08:	b	2cec <_PyDict_SetItemId@plt+0x6ac>
    2d0c:	nop
    2d10:	stp	x29, x30, [sp, #-32]!
    2d14:	mov	x29, sp
    2d18:	stp	x19, x20, [sp, #16]
    2d1c:	mov	x20, x1
    2d20:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2d24:	mov	x19, x0
    2d28:	bl	2480 <PyErr_Occurred@plt>
    2d2c:	cbz	x0, 2d40 <_PyDict_SetItemId@plt+0x700>
    2d30:	mov	w0, #0x0                   	// #0
    2d34:	ldp	x19, x20, [sp, #16]
    2d38:	ldp	x29, x30, [sp], #32
    2d3c:	ret
    2d40:	tst	x19, #0xffffffff00000000
    2d44:	b.ne	2d5c <_PyDict_SetItemId@plt+0x71c>  // b.any
    2d48:	str	w19, [x20]
    2d4c:	mov	w0, #0x1                   	// #1
    2d50:	ldp	x19, x20, [sp, #16]
    2d54:	ldp	x29, x30, [sp], #32
    2d58:	ret
    2d5c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    2d60:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2d64:	add	x1, x1, #0xc20
    2d68:	ldr	x0, [x0, #4040]
    2d6c:	ldr	x0, [x0]
    2d70:	bl	2350 <PyErr_SetString@plt>
    2d74:	mov	w0, #0x0                   	// #0
    2d78:	ldp	x19, x20, [sp, #16]
    2d7c:	ldp	x29, x30, [sp], #32
    2d80:	ret
    2d84:	nop
    2d88:	stp	x29, x30, [sp, #-32]!
    2d8c:	mov	x29, sp
    2d90:	stp	x19, x20, [sp, #16]
    2d94:	mov	x20, x1
    2d98:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2d9c:	mov	x19, x0
    2da0:	bl	2480 <PyErr_Occurred@plt>
    2da4:	cbz	x0, 2db8 <_PyDict_SetItemId@plt+0x778>
    2da8:	mov	w0, #0x0                   	// #0
    2dac:	ldp	x19, x20, [sp, #16]
    2db0:	ldp	x29, x30, [sp], #32
    2db4:	ret
    2db8:	tst	x19, #0xffffffff00000000
    2dbc:	b.ne	2dd4 <_PyDict_SetItemId@plt+0x794>  // b.any
    2dc0:	str	w19, [x20]
    2dc4:	mov	w0, #0x1                   	// #1
    2dc8:	ldp	x19, x20, [sp, #16]
    2dcc:	ldp	x29, x30, [sp], #32
    2dd0:	ret
    2dd4:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    2dd8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2ddc:	add	x1, x1, #0xc50
    2de0:	ldr	x0, [x0, #4040]
    2de4:	ldr	x0, [x0]
    2de8:	bl	2350 <PyErr_SetString@plt>
    2dec:	mov	w0, #0x0                   	// #0
    2df0:	ldp	x19, x20, [sp, #16]
    2df4:	ldp	x29, x30, [sp], #32
    2df8:	ret
    2dfc:	nop
    2e00:	stp	x29, x30, [sp, #-32]!
    2e04:	mov	x29, sp
    2e08:	stp	x19, x20, [sp, #16]
    2e0c:	mov	x20, x1
    2e10:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2e14:	mov	x19, x0
    2e18:	bl	2480 <PyErr_Occurred@plt>
    2e1c:	cbz	x0, 2e30 <_PyDict_SetItemId@plt+0x7f0>
    2e20:	mov	w0, #0x0                   	// #0
    2e24:	ldp	x19, x20, [sp, #16]
    2e28:	ldp	x29, x30, [sp], #32
    2e2c:	ret
    2e30:	tst	x19, #0xffffffff00000000
    2e34:	b.ne	2e4c <_PyDict_SetItemId@plt+0x80c>  // b.any
    2e38:	str	w19, [x20]
    2e3c:	mov	w0, #0x1                   	// #1
    2e40:	ldp	x19, x20, [sp, #16]
    2e44:	ldp	x29, x30, [sp], #32
    2e48:	ret
    2e4c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    2e50:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2e54:	add	x1, x1, #0xc78
    2e58:	ldr	x0, [x0, #4040]
    2e5c:	ldr	x0, [x0]
    2e60:	bl	2350 <PyErr_SetString@plt>
    2e64:	mov	w0, #0x0                   	// #0
    2e68:	ldp	x19, x20, [sp, #16]
    2e6c:	ldp	x29, x30, [sp], #32
    2e70:	ret
    2e74:	nop
    2e78:	sub	sp, sp, #0xc0
    2e7c:	stp	x29, x30, [sp, #112]
    2e80:	add	x29, sp, #0x70
    2e84:	stp	x19, x20, [sp, #128]
    2e88:	mov	x20, x0
    2e8c:	stp	x21, x22, [sp, #144]
    2e90:	mov	x21, x1
    2e94:	bl	2230 <PyMapping_Check@plt>
    2e98:	cbz	w0, 30bc <_PyDict_SetItemId@plt+0xa7c>
    2e9c:	mov	x0, x20
    2ea0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2ea4:	add	x1, x1, #0xcd8
    2ea8:	bl	2360 <PyMapping_GetItemString@plt>
    2eac:	mov	x19, x0
    2eb0:	cbz	x0, 3190 <_PyDict_SetItemId@plt+0xb50>
    2eb4:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2eb8:	ldr	x2, [x19]
    2ebc:	str	x0, [x21]
    2ec0:	sub	x2, x2, #0x1
    2ec4:	str	x2, [x19]
    2ec8:	cbz	x2, 30f0 <_PyDict_SetItemId@plt+0xab0>
    2ecc:	bl	2480 <PyErr_Occurred@plt>
    2ed0:	mov	x22, x0
    2ed4:	cbz	x0, 2ef4 <_PyDict_SetItemId@plt+0x8b4>
    2ed8:	mov	w19, #0x0                   	// #0
    2edc:	mov	w0, w19
    2ee0:	ldp	x29, x30, [sp, #112]
    2ee4:	ldp	x19, x20, [sp, #128]
    2ee8:	ldp	x21, x22, [sp, #144]
    2eec:	add	sp, sp, #0xc0
    2ef0:	ret
    2ef4:	ldr	x2, [x21]
    2ef8:	cmp	x2, #0x9
    2efc:	b.hi	2f94 <_PyDict_SetItemId@plt+0x954>  // b.pmore
    2f00:	cmp	x2, #0x3
    2f04:	b.hi	3128 <_PyDict_SetItemId@plt+0xae8>  // b.pmore
    2f08:	b.ne	3108 <_PyDict_SetItemId@plt+0xac8>  // b.any
    2f0c:	adrp	x2, 17000 <PyInit__lzma@@Base+0x12948>
    2f10:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12948>
    2f14:	add	x3, x3, #0x570
    2f18:	mov	x1, x20
    2f1c:	ldr	x0, [x2, #2496]
    2f20:	add	x3, x3, #0x58
    2f24:	add	x6, sp, #0xb0
    2f28:	add	x4, sp, #0xb8
    2f2c:	mov	w20, #0x1                   	// #1
    2f30:	adrp	x5, 2000 <memcpy@plt-0x200>
    2f34:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2f38:	add	x5, x5, #0xe00
    2f3c:	add	x2, x2, #0xd80
    2f40:	str	w20, [sp, #176]
    2f44:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    2f48:	mov	w19, w0
    2f4c:	cbz	w0, 3214 <_PyDict_SetItemId@plt+0xbd4>
    2f50:	mov	x0, #0x28                  	// #40
    2f54:	bl	2620 <PyMem_Malloc@plt>
    2f58:	mov	x22, x0
    2f5c:	cbz	x0, 31ec <_PyDict_SetItemId@plt+0xbac>
    2f60:	stp	xzr, xzr, [x0]
    2f64:	mov	w19, w20
    2f68:	stp	xzr, xzr, [x0, #16]
    2f6c:	str	xzr, [x0, #32]
    2f70:	ldr	w0, [sp, #176]
    2f74:	str	w0, [x22, #4]
    2f78:	str	x22, [x21, #8]
    2f7c:	mov	w0, w19
    2f80:	ldp	x29, x30, [sp, #112]
    2f84:	ldp	x19, x20, [sp, #128]
    2f88:	ldp	x21, x22, [sp, #144]
    2f8c:	add	sp, sp, #0xc0
    2f90:	ret
    2f94:	cmp	x2, #0x21
    2f98:	b.eq	2fac <_PyDict_SetItemId@plt+0x96c>  // b.none
    2f9c:	mov	x0, #0x1                   	// #1
    2fa0:	movk	x0, #0x4000, lsl #48
    2fa4:	cmp	x2, x0
    2fa8:	b.ne	3108 <_PyDict_SetItemId@plt+0xac8>  // b.any
    2fac:	mov	w2, #0x6                   	// #6
    2fb0:	mov	x0, x20
    2fb4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2fb8:	add	x1, x1, #0xd10
    2fbc:	str	w2, [sp, #172]
    2fc0:	bl	2360 <PyMapping_GetItemString@plt>
    2fc4:	str	x0, [sp, #184]
    2fc8:	cbz	x0, 31c4 <_PyDict_SetItemId@plt+0xb84>
    2fcc:	add	x1, sp, #0xac
    2fd0:	bl	2e00 <_PyDict_SetItemId@plt+0x7c0>
    2fd4:	ldr	x2, [sp, #184]
    2fd8:	mov	w19, w0
    2fdc:	ldr	x1, [x2]
    2fe0:	sub	x1, x1, #0x1
    2fe4:	str	x1, [x2]
    2fe8:	cbz	x1, 31e0 <_PyDict_SetItemId@plt+0xba0>
    2fec:	cbz	w19, 3204 <_PyDict_SetItemId@plt+0xbc4>
    2ff0:	mov	x0, #0x70                  	// #112
    2ff4:	bl	2620 <PyMem_Malloc@plt>
    2ff8:	mov	x22, x0
    2ffc:	cbz	x0, 31ec <_PyDict_SetItemId@plt+0xbac>
    3000:	stp	xzr, xzr, [x0]
    3004:	ldr	w1, [sp, #172]
    3008:	stp	xzr, xzr, [x0, #16]
    300c:	stp	xzr, xzr, [x0, #32]
    3010:	stp	xzr, xzr, [x0, #48]
    3014:	stp	xzr, xzr, [x0, #64]
    3018:	stp	xzr, xzr, [x0, #80]
    301c:	stp	xzr, xzr, [x0, #96]
    3020:	bl	2610 <lzma_lzma_preset@plt>
    3024:	tst	w0, #0xff
    3028:	b.ne	3254 <_PyDict_SetItemId@plt+0xc14>  // b.any
    302c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12948>
    3030:	add	x9, x22, #0x2c
    3034:	add	x10, x22, #0x28
    3038:	add	x11, x22, #0x24
    303c:	ldr	x0, [x1, #2496]
    3040:	adrp	x8, 2000 <memcpy@plt-0x200>
    3044:	add	x8, x8, #0xd10
    3048:	add	x5, x22, #0x20
    304c:	add	x2, x22, #0x1c
    3050:	add	x3, x22, #0x18
    3054:	add	x1, x22, #0x14
    3058:	adrp	x6, 2000 <memcpy@plt-0x200>
    305c:	adrp	x4, 2000 <memcpy@plt-0x200>
    3060:	add	x6, x6, #0xe00
    3064:	add	x4, x4, #0xd88
    3068:	stp	x6, x1, [sp]
    306c:	mov	x7, x22
    3070:	stp	x6, x3, [sp, #16]
    3074:	mov	x1, x20
    3078:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12948>
    307c:	stp	x6, x2, [sp, #32]
    3080:	add	x3, x3, #0x570
    3084:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3088:	stp	x4, x5, [sp, #48]
    308c:	add	x2, x2, #0xd38
    3090:	add	x5, sp, #0xb8
    3094:	stp	x6, x11, [sp, #64]
    3098:	add	x4, sp, #0xb0
    309c:	stp	x8, x10, [sp, #80]
    30a0:	stp	x6, x9, [sp, #96]
    30a4:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    30a8:	mov	w19, w0
    30ac:	cbz	w0, 3284 <_PyDict_SetItemId@plt+0xc44>
    30b0:	mov	w19, #0x1                   	// #1
    30b4:	str	x22, [x21, #8]
    30b8:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    30bc:	mov	w19, w0
    30c0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    30c4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    30c8:	add	x1, x1, #0xca0
    30cc:	ldr	x0, [x0, #4016]
    30d0:	ldr	x0, [x0]
    30d4:	bl	2350 <PyErr_SetString@plt>
    30d8:	mov	w0, w19
    30dc:	ldp	x29, x30, [sp, #112]
    30e0:	ldp	x19, x20, [sp, #128]
    30e4:	ldp	x21, x22, [sp, #144]
    30e8:	add	sp, sp, #0xc0
    30ec:	ret
    30f0:	mov	x0, x19
    30f4:	bl	22f0 <_Py_Dealloc@plt>
    30f8:	bl	2480 <PyErr_Occurred@plt>
    30fc:	mov	x22, x0
    3100:	cbnz	x0, 2ed8 <_PyDict_SetItemId@plt+0x898>
    3104:	b	2ef4 <_PyDict_SetItemId@plt+0x8b4>
    3108:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    310c:	mov	w19, #0x0                   	// #0
    3110:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3114:	add	x1, x1, #0xde0
    3118:	ldr	x0, [x0, #4008]
    311c:	ldr	x0, [x0]
    3120:	bl	25b0 <PyErr_Format@plt>
    3124:	b	2edc <_PyDict_SetItemId@plt+0x89c>
    3128:	adrp	x2, 17000 <PyInit__lzma@@Base+0x12948>
    312c:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12948>
    3130:	add	x3, x3, #0x570
    3134:	mov	x1, x20
    3138:	ldr	x0, [x2, #2496]
    313c:	add	x3, x3, #0x70
    3140:	add	x6, sp, #0xb0
    3144:	add	x4, sp, #0xb8
    3148:	adrp	x5, 2000 <memcpy@plt-0x200>
    314c:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3150:	add	x5, x5, #0xe00
    3154:	add	x2, x2, #0xd80
    3158:	str	wzr, [sp, #176]
    315c:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3160:	mov	w19, w0
    3164:	cbz	w0, 3234 <_PyDict_SetItemId@plt+0xbf4>
    3168:	mov	x0, #0x4                   	// #4
    316c:	bl	2620 <PyMem_Malloc@plt>
    3170:	mov	x22, x0
    3174:	cbz	x0, 31ec <_PyDict_SetItemId@plt+0xbac>
    3178:	str	wzr, [x0]
    317c:	mov	w19, #0x1                   	// #1
    3180:	ldr	w0, [sp, #176]
    3184:	str	w0, [x22]
    3188:	str	x22, [x21, #8]
    318c:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    3190:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3194:	ldr	x0, [x0, #4024]
    3198:	ldr	x0, [x0]
    319c:	bl	23a0 <PyErr_ExceptionMatches@plt>
    31a0:	cbz	w0, 2ed8 <_PyDict_SetItemId@plt+0x898>
    31a4:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    31a8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    31ac:	mov	w19, #0x0                   	// #0
    31b0:	add	x1, x1, #0xce0
    31b4:	ldr	x0, [x0, #4008]
    31b8:	ldr	x0, [x0]
    31bc:	bl	2350 <PyErr_SetString@plt>
    31c0:	b	2edc <_PyDict_SetItemId@plt+0x89c>
    31c4:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    31c8:	ldr	x0, [x0, #4024]
    31cc:	ldr	x0, [x0]
    31d0:	bl	23a0 <PyErr_ExceptionMatches@plt>
    31d4:	cbz	w0, 3204 <_PyDict_SetItemId@plt+0xbc4>
    31d8:	bl	2420 <PyErr_Clear@plt>
    31dc:	b	2ff0 <_PyDict_SetItemId@plt+0x9b0>
    31e0:	mov	x0, x2
    31e4:	bl	22f0 <_Py_Dealloc@plt>
    31e8:	b	2fec <_PyDict_SetItemId@plt+0x9ac>
    31ec:	bl	2300 <PyErr_NoMemory@plt>
    31f0:	cmp	x0, #0x0
    31f4:	mov	x22, x0
    31f8:	cset	w19, ne  // ne = any
    31fc:	str	x22, [x21, #8]
    3200:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    3204:	mov	x22, #0x0                   	// #0
    3208:	mov	w19, #0x0                   	// #0
    320c:	str	x22, [x21, #8]
    3210:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    3214:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3218:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    321c:	add	x1, x1, #0xd88
    3220:	ldr	x0, [x0, #4008]
    3224:	ldr	x0, [x0]
    3228:	bl	2350 <PyErr_SetString@plt>
    322c:	str	x22, [x21, #8]
    3230:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    3234:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3238:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    323c:	add	x1, x1, #0xdb8
    3240:	ldr	x0, [x0, #4008]
    3244:	ldr	x0, [x0]
    3248:	bl	2350 <PyErr_SetString@plt>
    324c:	str	x22, [x21, #8]
    3250:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    3254:	mov	x0, x22
    3258:	bl	2270 <PyMem_Free@plt>
    325c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    3260:	ldr	w2, [sp, #172]
    3264:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3268:	mov	x22, #0x0                   	// #0
    326c:	ldr	x0, [x0, #2488]
    3270:	add	x1, x1, #0xd18
    3274:	mov	w19, #0x0                   	// #0
    3278:	bl	25b0 <PyErr_Format@plt>
    327c:	str	x22, [x21, #8]
    3280:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    3284:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3288:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    328c:	add	x1, x1, #0xd50
    3290:	ldr	x0, [x0, #4008]
    3294:	ldr	x0, [x0]
    3298:	bl	2350 <PyErr_SetString@plt>
    329c:	mov	x0, x22
    32a0:	mov	x22, #0x0                   	// #0
    32a4:	bl	2270 <PyMem_Free@plt>
    32a8:	str	x22, [x21, #8]
    32ac:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    32b0:	stp	x29, x30, [sp, #-80]!
    32b4:	mov	x29, sp
    32b8:	stp	x21, x22, [sp, #32]
    32bc:	mov	x22, x0
    32c0:	mov	x0, x1
    32c4:	stp	x23, x24, [sp, #48]
    32c8:	mov	x24, x1
    32cc:	bl	2410 <PySequence_Size@plt>
    32d0:	cmn	x0, #0x1
    32d4:	b.eq	33bc <_PyDict_SetItemId@plt+0xd7c>  // b.none
    32d8:	mov	x23, x0
    32dc:	cmp	x0, #0x4
    32e0:	b.gt	33d0 <_PyDict_SetItemId@plt+0xd90>
    32e4:	stp	x19, x20, [sp, #16]
    32e8:	cmp	x0, #0x0
    32ec:	mov	x21, x22
    32f0:	mov	x20, #0x0                   	// #0
    32f4:	b.le	3348 <_PyDict_SetItemId@plt+0xd08>
    32f8:	str	x25, [sp, #64]
    32fc:	nop
    3300:	mov	x1, x20
    3304:	mov	x0, x24
    3308:	bl	23c0 <PySequence_GetItem@plt>
    330c:	add	x20, x20, #0x1
    3310:	mov	x1, x21
    3314:	mov	x19, x0
    3318:	cbz	x0, 3378 <_PyDict_SetItemId@plt+0xd38>
    331c:	bl	2e78 <_PyDict_SetItemId@plt+0x838>
    3320:	mov	w25, w0
    3324:	ldr	x2, [x19]
    3328:	sub	x2, x2, #0x1
    332c:	str	x2, [x19]
    3330:	cbz	x2, 336c <_PyDict_SetItemId@plt+0xd2c>
    3334:	cbz	w25, 3378 <_PyDict_SetItemId@plt+0xd38>
    3338:	add	x21, x21, #0x10
    333c:	cmp	x23, x20
    3340:	b.ne	3300 <_PyDict_SetItemId@plt+0xcc0>  // b.any
    3344:	ldr	x25, [sp, #64]
    3348:	lsl	x23, x23, #4
    334c:	mov	x1, #0xffffffffffffffff    	// #-1
    3350:	mov	w0, #0x0                   	// #0
    3354:	ldp	x19, x20, [sp, #16]
    3358:	str	x1, [x22, x23]
    335c:	ldp	x21, x22, [sp, #32]
    3360:	ldp	x23, x24, [sp, #48]
    3364:	ldp	x29, x30, [sp], #80
    3368:	ret
    336c:	mov	x0, x19
    3370:	bl	22f0 <_Py_Dealloc@plt>
    3374:	b	3334 <_PyDict_SetItemId@plt+0xcf4>
    3378:	mov	x0, #0xffffffffffffffff    	// #-1
    337c:	str	x0, [x21]
    3380:	mov	w19, #0x0                   	// #0
    3384:	mov	x0, x22
    3388:	ldr	x1, [x22]
    338c:	cmn	x1, #0x1
    3390:	b.eq	33b4 <_PyDict_SetItemId@plt+0xd74>  // b.none
    3394:	ldr	x0, [x0, #8]
    3398:	add	w19, w19, #0x1
    339c:	bl	2270 <PyMem_Free@plt>
    33a0:	sbfiz	x1, x19, #4, #32
    33a4:	add	x0, x22, x1
    33a8:	ldr	x1, [x22, x1]
    33ac:	cmn	x1, #0x1
    33b0:	b.ne	3394 <_PyDict_SetItemId@plt+0xd54>  // b.any
    33b4:	ldp	x19, x20, [sp, #16]
    33b8:	ldr	x25, [sp, #64]
    33bc:	mov	w0, #0xffffffff            	// #-1
    33c0:	ldp	x21, x22, [sp, #32]
    33c4:	ldp	x23, x24, [sp, #48]
    33c8:	ldp	x29, x30, [sp], #80
    33cc:	ret
    33d0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    33d4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    33d8:	mov	w2, #0x4                   	// #4
    33dc:	add	x1, x1, #0xdf8
    33e0:	ldr	x0, [x0, #4008]
    33e4:	ldr	x0, [x0]
    33e8:	bl	25b0 <PyErr_Format@plt>
    33ec:	mov	w0, #0xffffffff            	// #-1
    33f0:	b	33c0 <_PyDict_SetItemId@plt+0xd80>
    33f4:	nop
    33f8:	sub	sp, sp, #0xc0
    33fc:	stp	x29, x30, [sp, #16]
    3400:	add	x29, sp, #0x10
    3404:	stp	x19, x20, [sp, #32]
    3408:	mov	x19, x0
    340c:	stp	x21, x22, [sp, #48]
    3410:	add	x21, x1, #0x18
    3414:	ldr	x1, [x1, #16]
    3418:	cbz	x2, 35c0 <_PyDict_SetItemId@plt+0xf80>
    341c:	ldr	x22, [x2, #16]
    3420:	add	x22, x1, x22
    3424:	add	x0, sp, #0x58
    3428:	str	x0, [sp]
    342c:	adrp	x4, 17000 <PyInit__lzma@@Base+0x12948>
    3430:	add	x4, x4, #0x570
    3434:	mov	x0, x21
    3438:	add	x4, x4, #0x88
    343c:	mov	w7, #0x0                   	// #0
    3440:	mov	w6, #0x3                   	// #3
    3444:	mov	w5, #0x0                   	// #0
    3448:	mov	x3, #0x0                   	// #0
    344c:	bl	2340 <_PyArg_UnpackKeywords@plt>
    3450:	mov	x21, x0
    3454:	cbz	x0, 379c <_PyDict_SetItemId@plt+0x115c>
    3458:	stp	x23, x24, [sp, #64]
    345c:	cbz	x22, 35d4 <_PyDict_SetItemId@plt+0xf94>
    3460:	ldr	x0, [x21]
    3464:	cbz	x0, 36ec <_PyDict_SetItemId@plt+0x10ac>
    3468:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11948>
    346c:	ldr	x0, [x0, #8]
    3470:	ldr	x1, [x1, #3984]
    3474:	cmp	x0, x1
    3478:	b.eq	37ac <_PyDict_SetItemId@plt+0x116c>  // b.none
    347c:	bl	25a0 <PyType_IsSubtype@plt>
    3480:	cbnz	w0, 37ac <_PyDict_SetItemId@plt+0x116c>
    3484:	ldr	x0, [x21]
    3488:	bl	2600 <_PyLong_AsInt@plt>
    348c:	mov	w20, w0
    3490:	cmn	w0, #0x1
    3494:	b.eq	3790 <_PyDict_SetItemId@plt+0x1150>  // b.none
    3498:	subs	x22, x22, #0x1
    349c:	b.eq	3778 <_PyDict_SetItemId@plt+0x1138>  // b.none
    34a0:	ldr	x0, [x21, #8]
    34a4:	adrp	x24, 16000 <PyInit__lzma@@Base+0x11948>
    34a8:	cbz	x0, 36fc <_PyDict_SetItemId@plt+0x10bc>
    34ac:	ldr	x23, [x24, #4056]
    34b0:	cmp	x22, #0x1
    34b4:	b.eq	34bc <_PyDict_SetItemId@plt+0xe7c>  // b.none
    34b8:	ldr	x23, [x21, #16]
    34bc:	ldr	x1, [x24, #4056]
    34c0:	cmp	x0, x1
    34c4:	b.eq	373c <_PyDict_SetItemId@plt+0x10fc>  // b.none
    34c8:	cmp	w20, #0x3
    34cc:	b.eq	37d0 <_PyDict_SetItemId@plt+0x1190>  // b.none
    34d0:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    34d4:	mov	x22, x0
    34d8:	bl	2480 <PyErr_Occurred@plt>
    34dc:	cbnz	x0, 3798 <_PyDict_SetItemId@plt+0x1158>
    34e0:	ldr	x24, [x24, #4056]
    34e4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    34e8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    34ec:	add	x1, x1, #0xeb0
    34f0:	cmp	x23, x24
    34f4:	b.ne	3760 <_PyDict_SetItemId@plt+0x1120>  // b.any
    34f8:	add	x2, x19, #0x10
    34fc:	adrp	x0, 2000 <memcpy@plt-0x200>
    3500:	adrp	x1, 2000 <memcpy@plt-0x200>
    3504:	add	x0, x0, #0x730
    3508:	add	x1, x1, #0x728
    350c:	stp	x0, x1, [x19, #16]
    3510:	stp	xzr, xzr, [x19, #32]
    3514:	str	x2, [x19, #88]
    3518:	bl	2500 <PyThread_allocate_lock@plt>
    351c:	mov	x21, x0
    3520:	cbz	x0, 37e0 <_PyDict_SetItemId@plt+0x11a0>
    3524:	ldr	x0, [x19, #216]
    3528:	cbz	x0, 3530 <_PyDict_SetItemId@plt+0xef0>
    352c:	bl	2630 <PyThread_free_lock@plt>
    3530:	mov	w1, #0x10                  	// #16
    3534:	mov	w0, #0x1                   	// #1
    3538:	str	w1, [x19, #176]
    353c:	mov	x1, #0x0                   	// #0
    3540:	strb	w0, [x19, #192]
    3544:	mov	x0, #0x0                   	// #0
    3548:	stp	xzr, xzr, [x19, #200]
    354c:	str	x21, [x19, #216]
    3550:	ldr	x21, [x19, #184]
    3554:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3558:	str	x0, [x19, #184]
    355c:	cbz	x21, 3570 <_PyDict_SetItemId@plt+0xf30>
    3560:	ldr	x1, [x21]
    3564:	sub	x1, x1, #0x1
    3568:	str	x1, [x21]
    356c:	cbz	x1, 35f0 <_PyDict_SetItemId@plt+0xfb0>
    3570:	cbz	x0, 3638 <_PyDict_SetItemId@plt+0xff8>
    3574:	cmp	w20, #0x2
    3578:	b.eq	3704 <_PyDict_SetItemId@plt+0x10c4>  // b.none
    357c:	b.gt	3660 <_PyDict_SetItemId@plt+0x1020>
    3580:	cbz	w20, 3720 <_PyDict_SetItemId@plt+0x10e0>
    3584:	cmp	w20, #0x1
    3588:	b.ne	3600 <_PyDict_SetItemId@plt+0xfc0>  // b.any
    358c:	mov	x1, x22
    3590:	mov	w2, #0x5                   	// #5
    3594:	add	x0, x19, #0x28
    3598:	bl	24a0 <lzma_stream_decoder@plt>
    359c:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    35a0:	cbnz	w0, 361c <_PyDict_SetItemId@plt+0xfdc>
    35a4:	ldp	x23, x24, [sp, #64]
    35a8:	mov	w0, #0x0                   	// #0
    35ac:	ldp	x29, x30, [sp, #16]
    35b0:	ldp	x19, x20, [sp, #32]
    35b4:	ldp	x21, x22, [sp, #48]
    35b8:	add	sp, sp, #0xc0
    35bc:	ret
    35c0:	cmp	x1, #0x3
    35c4:	b.hi	35e8 <_PyDict_SetItemId@plt+0xfa8>  // b.pmore
    35c8:	stp	x23, x24, [sp, #64]
    35cc:	mov	x22, x1
    35d0:	cbnz	x22, 3460 <_PyDict_SetItemId@plt+0xe20>
    35d4:	adrp	x23, 16000 <PyInit__lzma@@Base+0x11948>
    35d8:	mov	w20, #0x0                   	// #0
    35dc:	mov	x22, #0xffffffffffffffff    	// #-1
    35e0:	ldr	x23, [x23, #4056]
    35e4:	b	34f8 <_PyDict_SetItemId@plt+0xeb8>
    35e8:	mov	x22, x1
    35ec:	b	3424 <_PyDict_SetItemId@plt+0xde4>
    35f0:	mov	x0, x21
    35f4:	bl	22f0 <_Py_Dealloc@plt>
    35f8:	ldr	x0, [x19, #184]
    35fc:	b	3570 <_PyDict_SetItemId@plt+0xf30>
    3600:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3604:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3608:	mov	w2, w20
    360c:	add	x1, x1, #0xef8
    3610:	ldr	x0, [x0, #4008]
    3614:	ldr	x0, [x0]
    3618:	bl	25b0 <PyErr_Format@plt>
    361c:	ldr	x0, [x19, #184]
    3620:	cbz	x0, 3638 <_PyDict_SetItemId@plt+0xff8>
    3624:	ldr	x1, [x0]
    3628:	str	xzr, [x19, #184]
    362c:	sub	x1, x1, #0x1
    3630:	str	x1, [x0]
    3634:	cbz	x1, 37a4 <_PyDict_SetItemId@plt+0x1164>
    3638:	ldr	x0, [x19, #216]
    363c:	bl	2630 <PyThread_free_lock@plt>
    3640:	ldp	x23, x24, [sp, #64]
    3644:	str	xzr, [x19, #216]
    3648:	mov	w0, #0xffffffff            	// #-1
    364c:	ldp	x29, x30, [sp, #16]
    3650:	ldp	x19, x20, [sp, #32]
    3654:	ldp	x21, x22, [sp, #48]
    3658:	add	sp, sp, #0xc0
    365c:	ret
    3660:	cmp	w20, #0x3
    3664:	b.ne	3600 <_PyDict_SetItemId@plt+0xfc0>  // b.any
    3668:	str	wzr, [x19, #176]
    366c:	add	x21, sp, #0x70
    3670:	mov	x1, x23
    3674:	mov	x0, x21
    3678:	bl	32b0 <_PyDict_SetItemId@plt+0xc70>
    367c:	cmn	w0, #0x1
    3680:	add	x0, x19, #0x28
    3684:	b.eq	361c <_PyDict_SetItemId@plt+0xfdc>  // b.none
    3688:	mov	x1, x21
    368c:	bl	2530 <lzma_raw_decoder@plt>
    3690:	ldr	x1, [sp, #112]
    3694:	mov	w22, w0
    3698:	mov	x2, x21
    369c:	mov	w20, #0x0                   	// #0
    36a0:	cmn	x1, #0x1
    36a4:	b.eq	36c8 <_PyDict_SetItemId@plt+0x1088>  // b.none
    36a8:	ldr	x0, [x2, #8]
    36ac:	add	w20, w20, #0x1
    36b0:	bl	2270 <PyMem_Free@plt>
    36b4:	sbfiz	x1, x20, #4, #32
    36b8:	add	x2, x21, x1
    36bc:	ldr	x1, [x21, x1]
    36c0:	cmn	x1, #0x1
    36c4:	b.ne	36a8 <_PyDict_SetItemId@plt+0x1068>  // b.any
    36c8:	mov	w0, w22
    36cc:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    36d0:	cbnz	w0, 361c <_PyDict_SetItemId@plt+0xfdc>
    36d4:	ldp	x29, x30, [sp, #16]
    36d8:	ldp	x19, x20, [sp, #32]
    36dc:	ldp	x21, x22, [sp, #48]
    36e0:	ldp	x23, x24, [sp, #64]
    36e4:	add	sp, sp, #0xc0
    36e8:	ret
    36ec:	ldr	x0, [x21, #8]
    36f0:	mov	w20, #0x0                   	// #0
    36f4:	adrp	x24, 16000 <PyInit__lzma@@Base+0x11948>
    36f8:	cbnz	x0, 34ac <_PyDict_SetItemId@plt+0xe6c>
    36fc:	ldr	x0, [x24, #4056]
    3700:	b	34b8 <_PyDict_SetItemId@plt+0xe78>
    3704:	mov	x1, x22
    3708:	str	wzr, [x19, #176]
    370c:	add	x0, x19, #0x28
    3710:	bl	24b0 <lzma_alone_decoder@plt>
    3714:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3718:	cbz	w0, 35a4 <_PyDict_SetItemId@plt+0xf64>
    371c:	b	361c <_PyDict_SetItemId@plt+0xfdc>
    3720:	mov	x1, x22
    3724:	mov	w2, #0x5                   	// #5
    3728:	add	x0, x19, #0x28
    372c:	bl	23d0 <lzma_auto_decoder@plt>
    3730:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3734:	cbz	w0, 35a4 <_PyDict_SetItemId@plt+0xf64>
    3738:	b	361c <_PyDict_SetItemId@plt+0xfdc>
    373c:	cmp	w20, #0x3
    3740:	b.ne	3804 <_PyDict_SetItemId@plt+0x11c4>  // b.any
    3744:	cmp	x23, x0
    3748:	mov	x22, #0xffffffffffffffff    	// #-1
    374c:	b.ne	34f8 <_PyDict_SetItemId@plt+0xeb8>  // b.any
    3750:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3754:	add	x1, x1, #0xe88
    3758:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    375c:	nop
    3760:	ldr	x0, [x0, #4008]
    3764:	ldr	x0, [x0]
    3768:	bl	2350 <PyErr_SetString@plt>
    376c:	mov	w0, #0xffffffff            	// #-1
    3770:	ldp	x23, x24, [sp, #64]
    3774:	b	35ac <_PyDict_SetItemId@plt+0xf6c>
    3778:	cmp	w20, #0x3
    377c:	b.eq	3750 <_PyDict_SetItemId@plt+0x1110>  // b.none
    3780:	adrp	x23, 16000 <PyInit__lzma@@Base+0x11948>
    3784:	mov	x22, #0xffffffffffffffff    	// #-1
    3788:	ldr	x23, [x23, #4056]
    378c:	b	34f8 <_PyDict_SetItemId@plt+0xeb8>
    3790:	bl	2480 <PyErr_Occurred@plt>
    3794:	cbz	x0, 3498 <_PyDict_SetItemId@plt+0xe58>
    3798:	ldp	x23, x24, [sp, #64]
    379c:	mov	w0, #0xffffffff            	// #-1
    37a0:	b	35ac <_PyDict_SetItemId@plt+0xf6c>
    37a4:	bl	22f0 <_Py_Dealloc@plt>
    37a8:	b	3638 <_PyDict_SetItemId@plt+0xff8>
    37ac:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    37b0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    37b4:	add	x1, x1, #0xe30
    37b8:	ldr	x0, [x0, #4016]
    37bc:	ldr	x0, [x0]
    37c0:	bl	2350 <PyErr_SetString@plt>
    37c4:	mov	w0, #0xffffffff            	// #-1
    37c8:	ldp	x23, x24, [sp, #64]
    37cc:	b	35ac <_PyDict_SetItemId@plt+0xf6c>
    37d0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    37d4:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    37d8:	add	x1, x1, #0xe58
    37dc:	b	3760 <_PyDict_SetItemId@plt+0x1120>
    37e0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    37e4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    37e8:	add	x1, x1, #0xee0
    37ec:	ldr	x0, [x0, #4000]
    37f0:	ldr	x0, [x0]
    37f4:	bl	2350 <PyErr_SetString@plt>
    37f8:	mov	w0, #0xffffffff            	// #-1
    37fc:	ldp	x23, x24, [sp, #64]
    3800:	b	35ac <_PyDict_SetItemId@plt+0xf6c>
    3804:	mov	x22, #0xffffffffffffffff    	// #-1
    3808:	b	34e0 <_PyDict_SetItemId@plt+0xea0>
    380c:	nop
    3810:	stp	x29, x30, [sp, #-192]!
    3814:	mov	w10, #0x1                   	// #1
    3818:	mov	w9, #0x6                   	// #6
    381c:	mov	x29, sp
    3820:	stp	x19, x20, [sp, #16]
    3824:	adrp	x20, 16000 <PyInit__lzma@@Base+0x11948>
    3828:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12948>
    382c:	ldr	x8, [x20, #4056]
    3830:	add	x3, x3, #0x570
    3834:	mov	x19, x0
    3838:	add	x3, x3, #0xc8
    383c:	mov	x0, x1
    3840:	add	x7, sp, #0x48
    3844:	mov	x1, x2
    3848:	add	x6, sp, #0x40
    384c:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3850:	add	x5, sp, #0x38
    3854:	add	x2, x2, #0xf18
    3858:	add	x4, sp, #0x34
    385c:	stp	x21, x22, [sp, #32]
    3860:	mov	w21, #0xffffffff            	// #-1
    3864:	stp	w10, w21, [sp, #52]
    3868:	str	w9, [sp, #60]
    386c:	stp	x8, x8, [sp, #64]
    3870:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3874:	cbz	w0, 3b7c <_PyDict_SetItemId@plt+0x153c>
    3878:	ldr	w0, [sp, #52]
    387c:	cmp	w0, #0x1
    3880:	b.eq	3894 <_PyDict_SetItemId@plt+0x1254>  // b.none
    3884:	ldr	w0, [sp, #56]
    3888:	add	w0, w0, #0x1
    388c:	cmp	w0, #0x1
    3890:	b.hi	3b98 <_PyDict_SetItemId@plt+0x1558>  // b.pmore
    3894:	ldr	x1, [x20, #4056]
    3898:	ldr	x0, [sp, #64]
    389c:	cmp	x0, x1
    38a0:	b.eq	38bc <_PyDict_SetItemId@plt+0x127c>  // b.none
    38a4:	ldr	x2, [sp, #72]
    38a8:	cmp	x2, x1
    38ac:	b.ne	3b64 <_PyDict_SetItemId@plt+0x1524>  // b.any
    38b0:	add	x1, sp, #0x3c
    38b4:	bl	2e00 <_PyDict_SetItemId@plt+0x7c0>
    38b8:	cbz	w0, 3b7c <_PyDict_SetItemId@plt+0x153c>
    38bc:	add	x2, x19, #0x10
    38c0:	adrp	x1, 2000 <memcpy@plt-0x200>
    38c4:	adrp	x0, 2000 <memcpy@plt-0x200>
    38c8:	add	x1, x1, #0x730
    38cc:	add	x0, x0, #0x728
    38d0:	stp	x1, x0, [x19, #16]
    38d4:	str	xzr, [x19, #32]
    38d8:	str	x2, [x19, #88]
    38dc:	bl	2500 <PyThread_allocate_lock@plt>
    38e0:	str	x0, [x19, #184]
    38e4:	cbz	x0, 3bb8 <_PyDict_SetItemId@plt+0x1578>
    38e8:	ldr	w2, [sp, #52]
    38ec:	str	wzr, [x19, #176]
    38f0:	cmp	w2, #0x2
    38f4:	b.eq	3940 <_PyDict_SetItemId@plt+0x1300>  // b.none
    38f8:	cmp	w2, #0x3
    38fc:	b.eq	3a84 <_PyDict_SetItemId@plt+0x1444>  // b.none
    3900:	cmp	w2, #0x1
    3904:	b.eq	3a00 <_PyDict_SetItemId@plt+0x13c0>  // b.none
    3908:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    390c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3910:	add	x1, x1, #0xef8
    3914:	ldr	x0, [x0, #4008]
    3918:	ldr	x0, [x0]
    391c:	bl	25b0 <PyErr_Format@plt>
    3920:	ldr	x0, [x19, #184]
    3924:	bl	2630 <PyThread_free_lock@plt>
    3928:	str	xzr, [x19, #184]
    392c:	mov	w0, #0xffffffff            	// #-1
    3930:	ldp	x19, x20, [sp, #16]
    3934:	ldp	x21, x22, [sp, #32]
    3938:	ldp	x29, x30, [sp], #192
    393c:	ret
    3940:	ldr	x20, [x20, #4056]
    3944:	add	x21, x19, #0x28
    3948:	ldr	x1, [sp, #72]
    394c:	cmp	x1, x20
    3950:	b.eq	3b34 <_PyDict_SetItemId@plt+0x14f4>  // b.none
    3954:	add	x20, sp, #0x50
    3958:	mov	x0, x20
    395c:	bl	32b0 <_PyDict_SetItemId@plt+0xc70>
    3960:	cmn	w0, #0x1
    3964:	b.eq	3920 <_PyDict_SetItemId@plt+0x12e0>  // b.none
    3968:	ldr	x1, [sp, #80]
    396c:	mov	x0, #0x1                   	// #1
    3970:	movk	x0, #0x4000, lsl #48
    3974:	cmp	x1, x0
    3978:	b.ne	3988 <_PyDict_SetItemId@plt+0x1348>  // b.any
    397c:	ldr	x0, [sp, #96]
    3980:	cmn	x0, #0x1
    3984:	b.eq	3b84 <_PyDict_SetItemId@plt+0x1544>  // b.none
    3988:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    398c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3990:	mov	w22, #0xb                   	// #11
    3994:	add	x1, x1, #0xf98
    3998:	ldr	x0, [x0, #4008]
    399c:	ldr	x0, [x0]
    39a0:	bl	2350 <PyErr_SetString@plt>
    39a4:	ldr	x0, [sp, #80]
    39a8:	mov	x2, x20
    39ac:	mov	w21, #0x0                   	// #0
    39b0:	cmn	x0, #0x1
    39b4:	b.eq	39d8 <_PyDict_SetItemId@plt+0x1398>  // b.none
    39b8:	ldr	x0, [x2, #8]
    39bc:	add	w21, w21, #0x1
    39c0:	bl	2270 <PyMem_Free@plt>
    39c4:	sbfiz	x1, x21, #4, #32
    39c8:	add	x2, x20, x1
    39cc:	ldr	x1, [x20, x1]
    39d0:	cmn	x1, #0x1
    39d4:	b.ne	39b8 <_PyDict_SetItemId@plt+0x1378>  // b.any
    39d8:	bl	2480 <PyErr_Occurred@plt>
    39dc:	cbnz	x0, 3920 <_PyDict_SetItemId@plt+0x12e0>
    39e0:	mov	w0, w22
    39e4:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    39e8:	cbnz	w0, 3920 <_PyDict_SetItemId@plt+0x12e0>
    39ec:	mov	w0, #0x0                   	// #0
    39f0:	ldp	x19, x20, [sp, #16]
    39f4:	ldp	x21, x22, [sp, #32]
    39f8:	ldp	x29, x30, [sp], #192
    39fc:	ret
    3a00:	ldr	w21, [sp, #56]
    3a04:	cmn	w21, #0x1
    3a08:	b.eq	3b0c <_PyDict_SetItemId@plt+0x14cc>  // b.none
    3a0c:	ldr	x20, [x20, #4056]
    3a10:	add	x22, x19, #0x28
    3a14:	ldr	x1, [sp, #72]
    3a18:	cmp	x1, x20
    3a1c:	b.eq	3b1c <_PyDict_SetItemId@plt+0x14dc>  // b.none
    3a20:	add	x20, sp, #0x50
    3a24:	mov	x0, x20
    3a28:	bl	32b0 <_PyDict_SetItemId@plt+0xc70>
    3a2c:	cmn	w0, #0x1
    3a30:	b.eq	3920 <_PyDict_SetItemId@plt+0x12e0>  // b.none
    3a34:	mov	w2, w21
    3a38:	mov	x0, x22
    3a3c:	mov	x1, x20
    3a40:	bl	25d0 <lzma_stream_encoder@plt>
    3a44:	ldr	x1, [sp, #80]
    3a48:	mov	w22, w0
    3a4c:	mov	x2, x20
    3a50:	mov	w21, #0x0                   	// #0
    3a54:	cmn	x1, #0x1
    3a58:	b.eq	39e0 <_PyDict_SetItemId@plt+0x13a0>  // b.none
    3a5c:	nop
    3a60:	ldr	x0, [x2, #8]
    3a64:	add	w21, w21, #0x1
    3a68:	bl	2270 <PyMem_Free@plt>
    3a6c:	sbfiz	x1, x21, #4, #32
    3a70:	add	x2, x20, x1
    3a74:	ldr	x1, [x20, x1]
    3a78:	cmn	x1, #0x1
    3a7c:	b.ne	3a60 <_PyDict_SetItemId@plt+0x1420>  // b.any
    3a80:	b	39e0 <_PyDict_SetItemId@plt+0x13a0>
    3a84:	ldr	x20, [x20, #4056]
    3a88:	add	x21, x19, #0x28
    3a8c:	ldr	x1, [sp, #72]
    3a90:	cmp	x1, x20
    3a94:	b.eq	3bd8 <_PyDict_SetItemId@plt+0x1598>  // b.none
    3a98:	add	x20, sp, #0x50
    3a9c:	mov	x0, x20
    3aa0:	bl	32b0 <_PyDict_SetItemId@plt+0xc70>
    3aa4:	cmn	w0, #0x1
    3aa8:	b.eq	3920 <_PyDict_SetItemId@plt+0x12e0>  // b.none
    3aac:	mov	x0, x21
    3ab0:	mov	x1, x20
    3ab4:	bl	2370 <lzma_raw_encoder@plt>
    3ab8:	mov	w21, #0x0                   	// #0
    3abc:	ldr	x1, [sp, #80]
    3ac0:	mov	w22, w0
    3ac4:	mov	x2, x20
    3ac8:	cmn	x1, #0x1
    3acc:	b.eq	3af0 <_PyDict_SetItemId@plt+0x14b0>  // b.none
    3ad0:	ldr	x0, [x2, #8]
    3ad4:	add	w21, w21, #0x1
    3ad8:	bl	2270 <PyMem_Free@plt>
    3adc:	sbfiz	x1, x21, #4, #32
    3ae0:	add	x2, x20, x1
    3ae4:	ldr	x1, [x20, x1]
    3ae8:	cmn	x1, #0x1
    3aec:	b.ne	3ad0 <_PyDict_SetItemId@plt+0x1490>  // b.any
    3af0:	mov	w0, w22
    3af4:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3af8:	cbnz	w0, 3920 <_PyDict_SetItemId@plt+0x12e0>
    3afc:	ldp	x19, x20, [sp, #16]
    3b00:	ldp	x21, x22, [sp, #32]
    3b04:	ldp	x29, x30, [sp], #192
    3b08:	ret
    3b0c:	mov	w0, #0x4                   	// #4
    3b10:	mov	w21, w0
    3b14:	str	w0, [sp, #56]
    3b18:	b	3a0c <_PyDict_SetItemId@plt+0x13cc>
    3b1c:	ldr	w1, [sp, #60]
    3b20:	mov	x0, x22
    3b24:	mov	w2, w21
    3b28:	bl	2330 <lzma_easy_encoder@plt>
    3b2c:	mov	w22, w0
    3b30:	b	39e0 <_PyDict_SetItemId@plt+0x13a0>
    3b34:	ldr	w22, [sp, #60]
    3b38:	add	x20, sp, #0x50
    3b3c:	mov	x0, x20
    3b40:	mov	w1, w22
    3b44:	bl	2610 <lzma_lzma_preset@plt>
    3b48:	tst	w0, #0xff
    3b4c:	b.ne	3bf4 <_PyDict_SetItemId@plt+0x15b4>  // b.any
    3b50:	mov	x1, x20
    3b54:	mov	x0, x21
    3b58:	bl	2550 <lzma_alone_encoder@plt>
    3b5c:	mov	w22, w0
    3b60:	b	39d8 <_PyDict_SetItemId@plt+0x1398>
    3b64:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3b68:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3b6c:	add	x1, x1, #0xf68
    3b70:	ldr	x0, [x0, #4008]
    3b74:	ldr	x0, [x0]
    3b78:	bl	2350 <PyErr_SetString@plt>
    3b7c:	mov	w0, #0xffffffff            	// #-1
    3b80:	b	3930 <_PyDict_SetItemId@plt+0x12f0>
    3b84:	ldr	x1, [sp, #88]
    3b88:	mov	x0, x21
    3b8c:	bl	2550 <lzma_alone_encoder@plt>
    3b90:	mov	w22, w0
    3b94:	b	39a4 <_PyDict_SetItemId@plt+0x1364>
    3b98:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3b9c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3ba0:	add	x1, x1, #0xf30
    3ba4:	ldr	x0, [x0, #4008]
    3ba8:	ldr	x0, [x0]
    3bac:	bl	2350 <PyErr_SetString@plt>
    3bb0:	mov	w0, w21
    3bb4:	b	3930 <_PyDict_SetItemId@plt+0x12f0>
    3bb8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3bbc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3bc0:	add	x1, x1, #0xee0
    3bc4:	ldr	x0, [x0, #4000]
    3bc8:	ldr	x0, [x0]
    3bcc:	bl	2350 <PyErr_SetString@plt>
    3bd0:	mov	w0, #0xffffffff            	// #-1
    3bd4:	b	3930 <_PyDict_SetItemId@plt+0x12f0>
    3bd8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3bdc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3be0:	add	x1, x1, #0xe88
    3be4:	ldr	x0, [x0, #4008]
    3be8:	ldr	x0, [x0]
    3bec:	bl	2350 <PyErr_SetString@plt>
    3bf0:	b	3920 <_PyDict_SetItemId@plt+0x12e0>
    3bf4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    3bf8:	mov	w2, w22
    3bfc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3c00:	add	x1, x1, #0xd18
    3c04:	ldr	x0, [x0, #2488]
    3c08:	bl	25b0 <PyErr_Format@plt>
    3c0c:	b	3920 <_PyDict_SetItemId@plt+0x12e0>
    3c10:	sub	sp, sp, #0xe0
    3c14:	stp	x29, x30, [sp, #16]
    3c18:	add	x29, sp, #0x10
    3c1c:	stp	x19, x20, [sp, #32]
    3c20:	mov	x19, x1
    3c24:	mov	x1, x2
    3c28:	stp	x21, x22, [sp, #48]
    3c2c:	mov	x21, x0
    3c30:	cbz	x3, 3d3c <_PyDict_SetItemId@plt+0x16fc>
    3c34:	ldr	x20, [x3, #16]
    3c38:	stp	xzr, xzr, [sp, #144]
    3c3c:	add	x20, x2, x20
    3c40:	stp	xzr, xzr, [sp, #160]
    3c44:	stp	xzr, xzr, [sp, #176]
    3c48:	stp	xzr, xzr, [sp, #192]
    3c4c:	stp	xzr, xzr, [sp, #208]
    3c50:	add	x0, sp, #0x80
    3c54:	str	x0, [sp]
    3c58:	adrp	x4, 17000 <PyInit__lzma@@Base+0x12948>
    3c5c:	add	x4, x4, #0x570
    3c60:	mov	x0, x19
    3c64:	add	x4, x4, #0xf0
    3c68:	mov	w7, #0x0                   	// #0
    3c6c:	mov	w6, #0x2                   	// #2
    3c70:	mov	w5, #0x1                   	// #1
    3c74:	mov	x2, #0x0                   	// #0
    3c78:	bl	2340 <_PyArg_UnpackKeywords@plt>
    3c7c:	mov	x19, x0
    3c80:	cbz	x0, 3ec8 <_PyDict_SetItemId@plt+0x1888>
    3c84:	ldr	x0, [x19]
    3c88:	add	x22, sp, #0x90
    3c8c:	mov	x1, x22
    3c90:	mov	w2, #0x0                   	// #0
    3c94:	bl	2560 <PyObject_GetBuffer@plt>
    3c98:	cbnz	w0, 3ec8 <_PyDict_SetItemId@plt+0x1888>
    3c9c:	mov	x0, x22
    3ca0:	mov	w1, #0x43                  	// #67
    3ca4:	bl	22d0 <PyBuffer_IsContiguous@plt>
    3ca8:	cbz	w0, 4054 <_PyDict_SetItemId@plt+0x1a14>
    3cac:	stp	x23, x24, [sp, #64]
    3cb0:	cmp	x20, #0x1
    3cb4:	b.eq	3d70 <_PyDict_SetItemId@plt+0x1730>  // b.none
    3cb8:	ldr	x0, [x19, #8]
    3cbc:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11948>
    3cc0:	ldr	x1, [x1, #3984]
    3cc4:	ldr	x0, [x0, #8]
    3cc8:	cmp	x0, x1
    3ccc:	b.eq	3fc8 <_PyDict_SetItemId@plt+0x1988>  // b.none
    3cd0:	bl	25a0 <PyType_IsSubtype@plt>
    3cd4:	cbnz	w0, 3fc8 <_PyDict_SetItemId@plt+0x1988>
    3cd8:	ldr	x0, [x19, #8]
    3cdc:	bl	25f0 <PyNumber_Index@plt>
    3ce0:	mov	x19, x0
    3ce4:	cbz	x0, 3d68 <_PyDict_SetItemId@plt+0x1728>
    3ce8:	bl	23f0 <PyLong_AsSsize_t@plt>
    3cec:	mov	x24, x0
    3cf0:	ldr	x1, [x19]
    3cf4:	sub	x0, x1, #0x1
    3cf8:	str	x0, [x19]
    3cfc:	cbz	x0, 4040 <_PyDict_SetItemId@plt+0x1a00>
    3d00:	cmn	x24, #0x1
    3d04:	b.eq	3d68 <_PyDict_SetItemId@plt+0x1728>  // b.none
    3d08:	ldr	x0, [x21, #216]
    3d0c:	mov	w1, #0x0                   	// #0
    3d10:	stp	x25, x26, [sp, #80]
    3d14:	bl	2320 <PyThread_acquire_lock@plt>
    3d18:	cbnz	w0, 3d88 <_PyDict_SetItemId@plt+0x1748>
    3d1c:	bl	2580 <PyEval_SaveThread@plt>
    3d20:	mov	x19, x0
    3d24:	ldr	x0, [x21, #216]
    3d28:	mov	w1, #0x1                   	// #1
    3d2c:	bl	2320 <PyThread_acquire_lock@plt>
    3d30:	mov	x0, x19
    3d34:	bl	2260 <PyEval_RestoreThread@plt>
    3d38:	b	3d88 <_PyDict_SetItemId@plt+0x1748>
    3d3c:	stp	xzr, xzr, [sp, #144]
    3d40:	sub	x0, x2, #0x1
    3d44:	mov	x20, x2
    3d48:	stp	xzr, xzr, [sp, #160]
    3d4c:	cmp	x0, #0x1
    3d50:	stp	xzr, xzr, [sp, #176]
    3d54:	stp	xzr, xzr, [sp, #192]
    3d58:	stp	xzr, xzr, [sp, #208]
    3d5c:	b.hi	3c50 <_PyDict_SetItemId@plt+0x1610>  // b.pmore
    3d60:	cbnz	x19, 3c84 <_PyDict_SetItemId@plt+0x1644>
    3d64:	b	3c50 <_PyDict_SetItemId@plt+0x1610>
    3d68:	bl	2480 <PyErr_Occurred@plt>
    3d6c:	cbnz	x0, 3ec4 <_PyDict_SetItemId@plt+0x1884>
    3d70:	ldr	x0, [x21, #216]
    3d74:	mov	x24, #0xffffffffffffffff    	// #-1
    3d78:	mov	w1, #0x0                   	// #0
    3d7c:	stp	x25, x26, [sp, #80]
    3d80:	bl	2320 <PyThread_acquire_lock@plt>
    3d84:	cbz	w0, 3d1c <_PyDict_SetItemId@plt+0x16dc>
    3d88:	ldrb	w26, [x21, #180]
    3d8c:	cbnz	w26, 4020 <_PyDict_SetItemId@plt+0x19e0>
    3d90:	ldr	x1, [x21, #40]
    3d94:	str	x27, [sp, #96]
    3d98:	add	x19, x21, #0x28
    3d9c:	ldr	x27, [sp, #144]
    3da0:	ldr	x22, [sp, #160]
    3da4:	cbz	x1, 3ef4 <_PyDict_SetItemId@plt+0x18b4>
    3da8:	ldp	x4, x3, [x21, #200]
    3dac:	ldr	x2, [x19, #8]
    3db0:	add	x0, x1, x2
    3db4:	add	x25, x4, x3
    3db8:	sub	x5, x3, x2
    3dbc:	sub	x25, x25, x0
    3dc0:	cmp	x22, x5
    3dc4:	b.hi	407c <_PyDict_SetItemId@plt+0x1a3c>  // b.pmore
    3dc8:	cmp	x22, x25
    3dcc:	b.hi	4148 <_PyDict_SetItemId@plt+0x1b08>  // b.pmore
    3dd0:	mov	x2, x22
    3dd4:	mov	x1, x27
    3dd8:	bl	2200 <memcpy@plt>
    3ddc:	mov	w26, #0x1                   	// #1
    3de0:	ldr	x0, [x19, #8]
    3de4:	add	x22, x0, x22
    3de8:	str	x22, [x19, #8]
    3dec:	mov	x0, #0x1fff                	// #8191
    3df0:	cmp	x24, x0
    3df4:	b.ls	3fec <_PyDict_SetItemId@plt+0x19ac>  // b.plast
    3df8:	mov	x1, #0x2000                	// #8192
    3dfc:	mov	x0, #0x0                   	// #0
    3e00:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3e04:	str	x0, [sp, #120]
    3e08:	cbz	x0, 3fa0 <_PyDict_SetItemId@plt+0x1960>
    3e0c:	add	x1, x0, #0x20
    3e10:	add	x25, sp, #0x78
    3e14:	ldr	x0, [x0, #16]
    3e18:	stp	x1, x0, [x19, #24]
    3e1c:	nop
    3e20:	bl	2580 <PyEval_SaveThread@plt>
    3e24:	mov	w1, #0x0                   	// #0
    3e28:	mov	x23, x0
    3e2c:	mov	x0, x19
    3e30:	bl	2250 <lzma_code@plt>
    3e34:	ldr	x1, [sp, #120]
    3e38:	mov	w20, w0
    3e3c:	ldr	x22, [x19, #24]
    3e40:	add	x1, x1, #0x20
    3e44:	cmp	w0, #0xa
    3e48:	sub	x22, x22, x1
    3e4c:	b.eq	3f60 <_PyDict_SetItemId@plt+0x1920>  // b.none
    3e50:	mov	x0, x23
    3e54:	bl	2260 <PyEval_RestoreThread@plt>
    3e58:	mov	w0, w20
    3e5c:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3e60:	cbnz	w0, 3f88 <_PyDict_SetItemId@plt+0x1948>
    3e64:	sub	w0, w20, #0x2
    3e68:	tst	w0, #0xfffffffd
    3e6c:	b.ne	3e7c <_PyDict_SetItemId@plt+0x183c>  // b.any
    3e70:	mov	x0, x19
    3e74:	bl	24e0 <lzma_get_check@plt>
    3e78:	str	w0, [x21, #176]
    3e7c:	cmp	w20, #0x1
    3e80:	b.eq	404c <_PyDict_SetItemId@plt+0x1a0c>  // b.none
    3e84:	ldr	x0, [x19, #32]
    3e88:	cbnz	x0, 3f00 <_PyDict_SetItemId@plt+0x18c0>
    3e8c:	cmp	x24, x22
    3e90:	b.eq	3f08 <_PyDict_SetItemId@plt+0x18c8>  // b.none
    3e94:	mov	x1, x24
    3e98:	mov	x0, x25
    3e9c:	bl	28d8 <_PyDict_SetItemId@plt+0x298>
    3ea0:	cmn	w0, #0x1
    3ea4:	b.eq	3f88 <_PyDict_SetItemId@plt+0x1948>  // b.none
    3ea8:	ldr	x0, [sp, #120]
    3eac:	add	x1, x0, #0x20
    3eb0:	ldr	x0, [x0, #16]
    3eb4:	add	x1, x1, x22
    3eb8:	sub	x22, x0, x22
    3ebc:	stp	x1, x22, [x19, #24]
    3ec0:	b	3e20 <_PyDict_SetItemId@plt+0x17e0>
    3ec4:	ldp	x23, x24, [sp, #64]
    3ec8:	mov	x20, #0x0                   	// #0
    3ecc:	ldr	x0, [sp, #152]
    3ed0:	cbz	x0, 3edc <_PyDict_SetItemId@plt+0x189c>
    3ed4:	add	x0, sp, #0x90
    3ed8:	bl	2290 <PyBuffer_Release@plt>
    3edc:	mov	x0, x20
    3ee0:	ldp	x29, x30, [sp, #16]
    3ee4:	ldp	x19, x20, [sp, #32]
    3ee8:	ldp	x21, x22, [sp, #48]
    3eec:	add	sp, sp, #0xe0
    3ef0:	ret
    3ef4:	str	x27, [x21, #40]
    3ef8:	str	x22, [x19, #8]
    3efc:	b	3dec <_PyDict_SetItemId@plt+0x17ac>
    3f00:	ldr	x0, [x19, #8]
    3f04:	cbnz	x0, 3e20 <_PyDict_SetItemId@plt+0x17e0>
    3f08:	ldr	x20, [sp, #120]
    3f0c:	ldr	x0, [x20, #16]
    3f10:	cmp	x22, x0
    3f14:	b.eq	3f34 <_PyDict_SetItemId@plt+0x18f4>  // b.none
    3f18:	mov	x1, x22
    3f1c:	add	x0, sp, #0x78
    3f20:	bl	2240 <_PyBytes_Resize@plt>
    3f24:	cmn	w0, #0x1
    3f28:	b.eq	3f88 <_PyDict_SetItemId@plt+0x1948>  // b.none
    3f2c:	ldr	x20, [sp, #120]
    3f30:	cbz	x20, 3fa0 <_PyDict_SetItemId@plt+0x1960>
    3f34:	ldrb	w0, [x21, #180]
    3f38:	ldr	x2, [x19, #8]
    3f3c:	cbz	w0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3f40:	strb	wzr, [x21, #192]
    3f44:	cbnz	x2, 40e8 <_PyDict_SetItemId@plt+0x1aa8>
    3f48:	ldr	x27, [sp, #96]
    3f4c:	ldr	x0, [x21, #216]
    3f50:	bl	2520 <PyThread_release_lock@plt>
    3f54:	ldp	x23, x24, [sp, #64]
    3f58:	ldp	x25, x26, [sp, #80]
    3f5c:	b	3ecc <_PyDict_SetItemId@plt+0x188c>
    3f60:	ldr	x0, [x19, #8]
    3f64:	cbnz	x0, 3fb0 <_PyDict_SetItemId@plt+0x1970>
    3f68:	ldr	x0, [x19, #32]
    3f6c:	cbz	x0, 3fb0 <_PyDict_SetItemId@plt+0x1970>
    3f70:	mov	x0, x23
    3f74:	bl	2260 <PyEval_RestoreThread@plt>
    3f78:	mov	w0, #0x0                   	// #0
    3f7c:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3f80:	cbz	w0, 3e84 <_PyDict_SetItemId@plt+0x1844>
    3f84:	nop
    3f88:	ldr	x0, [sp, #120]
    3f8c:	cbz	x0, 3fa0 <_PyDict_SetItemId@plt+0x1960>
    3f90:	ldr	x1, [x0]
    3f94:	sub	x1, x1, #0x1
    3f98:	str	x1, [x0]
    3f9c:	cbz	x1, 4130 <_PyDict_SetItemId@plt+0x1af0>
    3fa0:	mov	x20, #0x0                   	// #0
    3fa4:	ldr	x27, [sp, #96]
    3fa8:	str	xzr, [x21, #40]
    3fac:	b	3f4c <_PyDict_SetItemId@plt+0x190c>
    3fb0:	mov	x0, x23
    3fb4:	bl	2260 <PyEval_RestoreThread@plt>
    3fb8:	mov	w0, w20
    3fbc:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3fc0:	cbz	w0, 3e84 <_PyDict_SetItemId@plt+0x1844>
    3fc4:	b	3f88 <_PyDict_SetItemId@plt+0x1948>
    3fc8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    3fcc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3fd0:	mov	x20, #0x0                   	// #0
    3fd4:	add	x1, x1, #0xe30
    3fd8:	ldr	x0, [x0, #4016]
    3fdc:	ldr	x0, [x0]
    3fe0:	bl	2350 <PyErr_SetString@plt>
    3fe4:	ldp	x23, x24, [sp, #64]
    3fe8:	b	3ecc <_PyDict_SetItemId@plt+0x188c>
    3fec:	mov	x1, x24
    3ff0:	mov	x0, #0x0                   	// #0
    3ff4:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3ff8:	str	x0, [sp, #120]
    3ffc:	b	3e08 <_PyDict_SetItemId@plt+0x17c8>
    4000:	cbnz	x2, 40b4 <_PyDict_SetItemId@plt+0x1a74>
    4004:	ldr	x0, [x19, #32]
    4008:	cmp	x0, #0x0
    400c:	cset	w0, ne  // ne = any
    4010:	strb	w0, [x21, #192]
    4014:	ldr	x27, [sp, #96]
    4018:	str	xzr, [x21, #40]
    401c:	b	3f4c <_PyDict_SetItemId@plt+0x190c>
    4020:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    4024:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4028:	mov	x20, #0x0                   	// #0
    402c:	add	x1, x1, #0x18
    4030:	ldr	x0, [x0, #4048]
    4034:	ldr	x0, [x0]
    4038:	bl	2350 <PyErr_SetString@plt>
    403c:	b	3f4c <_PyDict_SetItemId@plt+0x190c>
    4040:	mov	x0, x19
    4044:	bl	22f0 <_Py_Dealloc@plt>
    4048:	b	3d00 <_PyDict_SetItemId@plt+0x16c0>
    404c:	strb	w20, [x21, #180]
    4050:	b	3f08 <_PyDict_SetItemId@plt+0x18c8>
    4054:	ldr	x3, [x19]
    4058:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    405c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4060:	add	x2, x2, #0xfe0
    4064:	add	x1, x1, #0xff8
    4068:	adrp	x0, 5000 <PyInit__lzma@@Base+0x948>
    406c:	mov	x20, #0x0                   	// #0
    4070:	add	x0, x0, #0x8
    4074:	bl	2400 <_PyArg_BadArgument@plt>
    4078:	b	3ecc <_PyDict_SetItemId@plt+0x188c>
    407c:	add	x3, x22, x3
    4080:	sub	x23, x1, x4
    4084:	sub	x25, x3, x25
    4088:	mov	x0, x4
    408c:	mov	x1, x25
    4090:	bl	2380 <PyMem_Realloc@plt>
    4094:	mov	x20, x0
    4098:	cbz	x0, 41a0 <_PyDict_SetItemId@plt+0x1b60>
    409c:	ldr	x1, [x19, #8]
    40a0:	add	x0, x0, x23
    40a4:	str	x0, [x21, #40]
    40a8:	add	x0, x0, x1
    40ac:	stp	x20, x25, [x21, #200]
    40b0:	b	3dd0 <_PyDict_SetItemId@plt+0x1790>
    40b4:	strb	wzr, [x21, #192]
    40b8:	cbnz	w26, 3f48 <_PyDict_SetItemId@plt+0x1908>
    40bc:	ldr	x0, [x21, #200]
    40c0:	cbz	x0, 4170 <_PyDict_SetItemId@plt+0x1b30>
    40c4:	ldr	x1, [x21, #208]
    40c8:	cmp	x1, x2
    40cc:	b.cc	4164 <_PyDict_SetItemId@plt+0x1b24>  // b.lo, b.ul, b.last
    40d0:	ldr	x1, [x21, #40]
    40d4:	bl	2200 <memcpy@plt>
    40d8:	ldr	x0, [x21, #200]
    40dc:	ldr	x27, [sp, #96]
    40e0:	str	x0, [x21, #40]
    40e4:	b	3f4c <_PyDict_SetItemId@plt+0x190c>
    40e8:	ldr	x0, [x21, #40]
    40ec:	mov	x1, x2
    40f0:	ldr	x19, [x21, #184]
    40f4:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    40f8:	str	x0, [x21, #184]
    40fc:	cbz	x19, 4110 <_PyDict_SetItemId@plt+0x1ad0>
    4100:	ldr	x1, [x19]
    4104:	sub	x1, x1, #0x1
    4108:	str	x1, [x19]
    410c:	cbz	x1, 4138 <_PyDict_SetItemId@plt+0x1af8>
    4110:	cbnz	x0, 3f48 <_PyDict_SetItemId@plt+0x1908>
    4114:	ldr	x0, [x20]
    4118:	sub	x0, x0, #0x1
    411c:	str	x0, [x20]
    4120:	cbz	x0, 418c <_PyDict_SetItemId@plt+0x1b4c>
    4124:	mov	x20, #0x0                   	// #0
    4128:	ldr	x27, [sp, #96]
    412c:	b	3f4c <_PyDict_SetItemId@plt+0x190c>
    4130:	bl	22f0 <_Py_Dealloc@plt>
    4134:	b	3fa0 <_PyDict_SetItemId@plt+0x1960>
    4138:	mov	x0, x19
    413c:	bl	22f0 <_Py_Dealloc@plt>
    4140:	ldr	x0, [x21, #184]
    4144:	b	4110 <_PyDict_SetItemId@plt+0x1ad0>
    4148:	mov	x0, x4
    414c:	bl	2210 <memmove@plt>
    4150:	ldr	x1, [x19, #8]
    4154:	ldr	x0, [x21, #200]
    4158:	str	x0, [x21, #40]
    415c:	add	x0, x0, x1
    4160:	b	3dd0 <_PyDict_SetItemId@plt+0x1790>
    4164:	bl	2270 <PyMem_Free@plt>
    4168:	ldr	x2, [x19, #8]
    416c:	str	xzr, [x21, #200]
    4170:	mov	x0, x2
    4174:	bl	2620 <PyMem_Malloc@plt>
    4178:	str	x0, [x21, #200]
    417c:	cbz	x0, 41b8 <_PyDict_SetItemId@plt+0x1b78>
    4180:	ldr	x2, [x19, #8]
    4184:	str	x2, [x21, #208]
    4188:	b	40d0 <_PyDict_SetItemId@plt+0x1a90>
    418c:	mov	x0, x20
    4190:	mov	x20, #0x0                   	// #0
    4194:	bl	22f0 <_Py_Dealloc@plt>
    4198:	ldr	x27, [sp, #96]
    419c:	b	3f4c <_PyDict_SetItemId@plt+0x190c>
    41a0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    41a4:	ldr	x0, [x0, #4000]
    41a8:	ldr	x0, [x0]
    41ac:	bl	2390 <PyErr_SetNone@plt>
    41b0:	ldr	x27, [sp, #96]
    41b4:	b	3f4c <_PyDict_SetItemId@plt+0x190c>
    41b8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    41bc:	ldr	x0, [x0, #4000]
    41c0:	ldr	x0, [x0]
    41c4:	bl	2390 <PyErr_SetNone@plt>
    41c8:	b	4114 <_PyDict_SetItemId@plt+0x1ad4>
    41cc:	nop
    41d0:	stp	x29, x30, [sp, #-128]!
    41d4:	mov	w2, #0x0                   	// #0
    41d8:	mov	x29, sp
    41dc:	stp	x21, x22, [sp, #32]
    41e0:	add	x22, sp, #0x30
    41e4:	mov	x21, #0x0                   	// #0
    41e8:	stp	x19, x20, [sp, #16]
    41ec:	mov	x20, x1
    41f0:	mov	x19, x0
    41f4:	mov	x0, x1
    41f8:	mov	x1, x22
    41fc:	stp	xzr, xzr, [sp, #48]
    4200:	stp	xzr, xzr, [sp, #64]
    4204:	stp	xzr, xzr, [sp, #80]
    4208:	stp	xzr, xzr, [sp, #96]
    420c:	stp	xzr, xzr, [sp, #112]
    4210:	bl	2560 <PyObject_GetBuffer@plt>
    4214:	cbnz	w0, 4260 <_PyDict_SetItemId@plt+0x1c20>
    4218:	mov	x0, x22
    421c:	mov	w1, #0x43                  	// #67
    4220:	bl	22d0 <PyBuffer_IsContiguous@plt>
    4224:	cbz	w0, 42c8 <_PyDict_SetItemId@plt+0x1c88>
    4228:	ldr	x0, [x19, #184]
    422c:	mov	w1, #0x0                   	// #0
    4230:	bl	2320 <PyThread_acquire_lock@plt>
    4234:	cbz	w0, 4284 <_PyDict_SetItemId@plt+0x1c44>
    4238:	ldr	w0, [x19, #176]
    423c:	cbnz	w0, 42a8 <_PyDict_SetItemId@plt+0x1c68>
    4240:	ldr	x1, [sp, #48]
    4244:	mov	x0, x19
    4248:	ldr	x2, [sp, #64]
    424c:	mov	w3, #0x0                   	// #0
    4250:	bl	28f8 <_PyDict_SetItemId@plt+0x2b8>
    4254:	mov	x21, x0
    4258:	ldr	x0, [x19, #184]
    425c:	bl	2520 <PyThread_release_lock@plt>
    4260:	ldr	x0, [sp, #56]
    4264:	cbz	x0, 4270 <_PyDict_SetItemId@plt+0x1c30>
    4268:	mov	x0, x22
    426c:	bl	2290 <PyBuffer_Release@plt>
    4270:	mov	x0, x21
    4274:	ldp	x19, x20, [sp, #16]
    4278:	ldp	x21, x22, [sp, #32]
    427c:	ldp	x29, x30, [sp], #128
    4280:	ret
    4284:	bl	2580 <PyEval_SaveThread@plt>
    4288:	mov	x20, x0
    428c:	ldr	x0, [x19, #184]
    4290:	mov	w1, #0x1                   	// #1
    4294:	bl	2320 <PyThread_acquire_lock@plt>
    4298:	mov	x0, x20
    429c:	bl	2260 <PyEval_RestoreThread@plt>
    42a0:	ldr	w0, [x19, #176]
    42a4:	cbz	w0, 4240 <_PyDict_SetItemId@plt+0x1c00>
    42a8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    42ac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    42b0:	mov	x21, #0x0                   	// #0
    42b4:	add	x1, x1, #0x58
    42b8:	ldr	x0, [x0, #4008]
    42bc:	ldr	x0, [x0]
    42c0:	bl	2350 <PyErr_SetString@plt>
    42c4:	b	4258 <_PyDict_SetItemId@plt+0x1c18>
    42c8:	mov	x3, x20
    42cc:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    42d0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    42d4:	add	x2, x2, #0xfe0
    42d8:	add	x1, x1, #0x38
    42dc:	adrp	x0, 5000 <PyInit__lzma@@Base+0x948>
    42e0:	add	x0, x0, #0x48
    42e4:	bl	2400 <_PyArg_BadArgument@plt>
    42e8:	b	4260 <_PyDict_SetItemId@plt+0x1c20>
    42ec:	nop
    42f0:	stp	x29, x30, [sp, #-144]!
    42f4:	cmp	x2, #0x2
    42f8:	mov	x29, sp
    42fc:	stp	x19, x20, [sp, #16]
    4300:	mov	x19, x1
    4304:	stp	xzr, xzr, [sp, #64]
    4308:	stp	xzr, xzr, [sp, #80]
    430c:	stp	xzr, xzr, [sp, #96]
    4310:	stp	xzr, xzr, [sp, #112]
    4314:	stp	xzr, xzr, [sp, #128]
    4318:	b.eq	4338 <_PyDict_SetItemId@plt+0x1cf8>  // b.none
    431c:	mov	x1, x2
    4320:	adrp	x0, 5000 <PyInit__lzma@@Base+0x948>
    4324:	mov	x3, #0x2                   	// #2
    4328:	add	x0, x0, #0x78
    432c:	mov	x2, x3
    4330:	bl	2460 <_PyArg_CheckPositional@plt>
    4334:	cbz	w0, 434c <_PyDict_SetItemId@plt+0x1d0c>
    4338:	ldr	x0, [x19]
    433c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    4340:	mov	x20, x0
    4344:	bl	2480 <PyErr_Occurred@plt>
    4348:	cbz	x0, 4370 <_PyDict_SetItemId@plt+0x1d30>
    434c:	mov	x19, #0x0                   	// #0
    4350:	ldr	x0, [sp, #72]
    4354:	cbz	x0, 4360 <_PyDict_SetItemId@plt+0x1d20>
    4358:	add	x0, sp, #0x40
    435c:	bl	2290 <PyBuffer_Release@plt>
    4360:	mov	x0, x19
    4364:	ldp	x19, x20, [sp, #16]
    4368:	ldp	x29, x30, [sp], #144
    436c:	ret
    4370:	ldr	x0, [x19, #8]
    4374:	stp	x21, x22, [sp, #32]
    4378:	add	x21, sp, #0x40
    437c:	mov	x1, x21
    4380:	mov	w2, #0x0                   	// #0
    4384:	bl	2560 <PyObject_GetBuffer@plt>
    4388:	cbnz	w0, 4450 <_PyDict_SetItemId@plt+0x1e10>
    438c:	mov	x0, x21
    4390:	mov	w1, #0x43                  	// #67
    4394:	bl	22d0 <PyBuffer_IsContiguous@plt>
    4398:	cbz	w0, 4504 <_PyDict_SetItemId@plt+0x1ec4>
    439c:	ldr	x2, [sp, #64]
    43a0:	mov	x1, #0x0                   	// #0
    43a4:	ldr	x3, [sp, #80]
    43a8:	add	x0, sp, #0x30
    43ac:	mov	x19, #0x0                   	// #0
    43b0:	str	x20, [sp, #48]
    43b4:	bl	2470 <lzma_properties_decode@plt>
    43b8:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    43bc:	cbnz	w0, 4448 <_PyDict_SetItemId@plt+0x1e08>
    43c0:	bl	2540 <PyDict_New@plt>
    43c4:	mov	x19, x0
    43c8:	cbz	x0, 4434 <_PyDict_SetItemId@plt+0x1df4>
    43cc:	ldr	x2, [sp, #48]
    43d0:	adrp	x20, 17000 <PyInit__lzma@@Base+0x12948>
    43d4:	add	x21, x20, #0x570
    43d8:	add	x1, x21, #0x130
    43dc:	bl	2c18 <_PyDict_SetItemId@plt+0x5d8>
    43e0:	cmn	w0, #0x1
    43e4:	b.eq	4424 <_PyDict_SetItemId@plt+0x1de4>  // b.none
    43e8:	ldr	x2, [sp, #48]
    43ec:	cmp	x2, #0x21
    43f0:	b.eq	4550 <_PyDict_SetItemId@plt+0x1f10>  // b.none
    43f4:	b.hi	4478 <_PyDict_SetItemId@plt+0x1e38>  // b.pmore
    43f8:	cmp	x2, #0x3
    43fc:	b.eq	4530 <_PyDict_SetItemId@plt+0x1ef0>  // b.none
    4400:	sub	x0, x2, #0x4
    4404:	cmp	x0, #0x5
    4408:	b.ls	4458 <_PyDict_SetItemId@plt+0x1e18>  // b.plast
    440c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    4410:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4414:	add	x1, x1, #0xde0
    4418:	ldr	x0, [x0, #4008]
    441c:	ldr	x0, [x0]
    4420:	bl	25b0 <PyErr_Format@plt>
    4424:	ldr	x0, [x19]
    4428:	sub	x0, x0, #0x1
    442c:	str	x0, [x19]
    4430:	cbz	x0, 44f4 <_PyDict_SetItemId@plt+0x1eb4>
    4434:	mov	x19, #0x0                   	// #0
    4438:	ldr	x0, [sp, #56]
    443c:	bl	24f0 <free@plt>
    4440:	ldp	x21, x22, [sp, #32]
    4444:	b	4350 <_PyDict_SetItemId@plt+0x1d10>
    4448:	ldp	x21, x22, [sp, #32]
    444c:	b	4350 <_PyDict_SetItemId@plt+0x1d10>
    4450:	ldp	x21, x22, [sp, #32]
    4454:	b	434c <_PyDict_SetItemId@plt+0x1d0c>
    4458:	ldr	x2, [sp, #56]
    445c:	add	x1, x21, #0x148
    4460:	ldr	w2, [x2]
    4464:	mov	x0, x19
    4468:	bl	2c18 <_PyDict_SetItemId@plt+0x5d8>
    446c:	cmn	w0, #0x1
    4470:	b.ne	4438 <_PyDict_SetItemId@plt+0x1df8>  // b.any
    4474:	b	4424 <_PyDict_SetItemId@plt+0x1de4>
    4478:	mov	x0, #0x1                   	// #1
    447c:	movk	x0, #0x4000, lsl #48
    4480:	cmp	x2, x0
    4484:	b.ne	440c <_PyDict_SetItemId@plt+0x1dcc>  // b.any
    4488:	ldr	x22, [sp, #56]
    448c:	add	x1, x21, #0x160
    4490:	mov	x0, x19
    4494:	ldr	w2, [x22, #20]
    4498:	bl	2c18 <_PyDict_SetItemId@plt+0x5d8>
    449c:	cmn	w0, #0x1
    44a0:	b.eq	4424 <_PyDict_SetItemId@plt+0x1de4>  // b.none
    44a4:	ldr	w2, [x22, #24]
    44a8:	add	x20, x20, #0x570
    44ac:	add	x1, x20, #0x178
    44b0:	mov	x0, x19
    44b4:	bl	2c18 <_PyDict_SetItemId@plt+0x5d8>
    44b8:	cmn	w0, #0x1
    44bc:	b.eq	4424 <_PyDict_SetItemId@plt+0x1de4>  // b.none
    44c0:	ldr	w2, [x22, #28]
    44c4:	add	x1, x20, #0x190
    44c8:	mov	x0, x19
    44cc:	bl	2c18 <_PyDict_SetItemId@plt+0x5d8>
    44d0:	cmn	w0, #0x1
    44d4:	b.eq	4424 <_PyDict_SetItemId@plt+0x1de4>  // b.none
    44d8:	ldr	w2, [x22]
    44dc:	add	x1, x20, #0x1a8
    44e0:	mov	x0, x19
    44e4:	bl	2c18 <_PyDict_SetItemId@plt+0x5d8>
    44e8:	cmn	w0, #0x1
    44ec:	b.ne	4438 <_PyDict_SetItemId@plt+0x1df8>  // b.any
    44f0:	b	4424 <_PyDict_SetItemId@plt+0x1de4>
    44f4:	mov	x0, x19
    44f8:	mov	x19, #0x0                   	// #0
    44fc:	bl	22f0 <_Py_Dealloc@plt>
    4500:	b	4438 <_PyDict_SetItemId@plt+0x1df8>
    4504:	ldr	x3, [x19, #8]
    4508:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    450c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4510:	add	x2, x2, #0xfe0
    4514:	add	x1, x1, #0x98
    4518:	adrp	x0, 5000 <PyInit__lzma@@Base+0x948>
    451c:	mov	x19, #0x0                   	// #0
    4520:	add	x0, x0, #0x78
    4524:	bl	2400 <_PyArg_BadArgument@plt>
    4528:	ldp	x21, x22, [sp, #32]
    452c:	b	4350 <_PyDict_SetItemId@plt+0x1d10>
    4530:	ldr	x2, [sp, #56]
    4534:	add	x1, x21, #0x1d8
    4538:	mov	x0, x19
    453c:	ldr	w2, [x2, #4]
    4540:	bl	2c18 <_PyDict_SetItemId@plt+0x5d8>
    4544:	cmn	w0, #0x1
    4548:	b.ne	4438 <_PyDict_SetItemId@plt+0x1df8>  // b.any
    454c:	b	4424 <_PyDict_SetItemId@plt+0x1de4>
    4550:	add	x1, x21, #0x1c0
    4554:	ldr	x2, [sp, #56]
    4558:	b	4460 <_PyDict_SetItemId@plt+0x1e20>
    455c:	nop
    4560:	stp	x29, x30, [sp, #-80]!
    4564:	mov	x2, #0xffffffffffffffff    	// #-1
    4568:	mov	x0, x1
    456c:	mov	x29, sp
    4570:	add	x1, sp, #0x30
    4574:	stp	x19, x20, [sp, #16]
    4578:	mov	x19, #0x0                   	// #0
    457c:	stp	x2, xzr, [sp, #48]
    4580:	bl	2e78 <_PyDict_SetItemId@plt+0x838>
    4584:	cbz	w0, 45d0 <_PyDict_SetItemId@plt+0x1f90>
    4588:	ldp	x2, x3, [sp, #48]
    458c:	add	x20, sp, #0x40
    4590:	mov	x1, x20
    4594:	add	x0, sp, #0x2c
    4598:	stp	x2, x3, [sp, #64]
    459c:	bl	23b0 <lzma_properties_size@plt>
    45a0:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    45a4:	cbnz	w0, 45f4 <_PyDict_SetItemId@plt+0x1fb4>
    45a8:	ldr	w1, [sp, #44]
    45ac:	mov	x0, #0x0                   	// #0
    45b0:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    45b4:	mov	x19, x0
    45b8:	cbz	x0, 45f4 <_PyDict_SetItemId@plt+0x1fb4>
    45bc:	add	x1, x0, #0x20
    45c0:	mov	x0, x20
    45c4:	bl	2570 <lzma_properties_encode@plt>
    45c8:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    45cc:	cbnz	w0, 45fc <_PyDict_SetItemId@plt+0x1fbc>
    45d0:	ldr	x0, [sp, #48]
    45d4:	cmn	x0, #0x1
    45d8:	b.eq	45e4 <_PyDict_SetItemId@plt+0x1fa4>  // b.none
    45dc:	ldr	x0, [sp, #56]
    45e0:	bl	2270 <PyMem_Free@plt>
    45e4:	mov	x0, x19
    45e8:	ldp	x19, x20, [sp, #16]
    45ec:	ldp	x29, x30, [sp], #80
    45f0:	ret
    45f4:	mov	x19, #0x0                   	// #0
    45f8:	b	45d0 <_PyDict_SetItemId@plt+0x1f90>
    45fc:	ldr	x0, [x19]
    4600:	sub	x0, x0, #0x1
    4604:	str	x0, [x19]
    4608:	cbnz	x0, 45f4 <_PyDict_SetItemId@plt+0x1fb4>
    460c:	mov	x0, x19
    4610:	mov	x19, #0x0                   	// #0
    4614:	bl	22f0 <_Py_Dealloc@plt>
    4618:	b	45d0 <_PyDict_SetItemId@plt+0x1f90>
    461c:	nop
    4620:	stp	x29, x30, [sp, #-32]!
    4624:	adrp	x2, 16000 <PyInit__lzma@@Base+0x11948>
    4628:	mov	x29, sp
    462c:	str	x19, [sp, #16]
    4630:	mov	x19, x1
    4634:	ldr	x1, [x2, #3984]
    4638:	ldr	x0, [x19, #8]
    463c:	cmp	x0, x1
    4640:	b.eq	4690 <_PyDict_SetItemId@plt+0x2050>  // b.none
    4644:	bl	25a0 <PyType_IsSubtype@plt>
    4648:	cbnz	w0, 4690 <_PyDict_SetItemId@plt+0x2050>
    464c:	mov	x0, x19
    4650:	bl	2600 <_PyLong_AsInt@plt>
    4654:	mov	w19, w0
    4658:	cmn	w0, #0x1
    465c:	b.eq	4678 <_PyDict_SetItemId@plt+0x2038>  // b.none
    4660:	mov	w0, w19
    4664:	bl	25c0 <lzma_check_is_supported@plt>
    4668:	ldr	x19, [sp, #16]
    466c:	and	x0, x0, #0xff
    4670:	ldp	x29, x30, [sp], #32
    4674:	b	2430 <PyBool_FromLong@plt>
    4678:	bl	2480 <PyErr_Occurred@plt>
    467c:	cbz	x0, 4660 <_PyDict_SetItemId@plt+0x2020>
    4680:	mov	x0, #0x0                   	// #0
    4684:	ldr	x19, [sp, #16]
    4688:	ldp	x29, x30, [sp], #32
    468c:	ret
    4690:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11948>
    4694:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4698:	add	x1, x1, #0xe30
    469c:	ldr	x0, [x0, #4016]
    46a0:	ldr	x0, [x0]
    46a4:	bl	2350 <PyErr_SetString@plt>
    46a8:	mov	x0, #0x0                   	// #0
    46ac:	ldr	x19, [sp, #16]
    46b0:	ldp	x29, x30, [sp], #32
    46b4:	ret

00000000000046b8 <PyInit__lzma@@Base>:
    46b8:	stp	x29, x30, [sp, #-48]!
    46bc:	mov	x0, #0x0                   	// #0
    46c0:	mov	x29, sp
    46c4:	stp	x19, x20, [sp, #16]
    46c8:	bl	2450 <PyTuple_New@plt>
    46cc:	adrp	x20, 17000 <PyInit__lzma@@Base+0x12948>
    46d0:	add	x1, x20, #0x9b8
    46d4:	str	x0, [x1, #8]
    46d8:	cbz	x0, 4ad8 <PyInit__lzma@@Base+0x420>
    46dc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12948>
    46e0:	add	x0, x0, #0x570
    46e4:	add	x0, x0, #0x1f0
    46e8:	mov	w1, #0x3f5                 	// #1013
    46ec:	bl	2490 <PyModule_Create2@plt>
    46f0:	mov	x19, x0
    46f4:	cbz	x0, 4ad8 <PyInit__lzma@@Base+0x420>
    46f8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    46fc:	mov	x2, #0x0                   	// #0
    4700:	add	x1, x1, #0xa8
    4704:	bl	2220 <PyModule_AddIntConstant@plt>
    4708:	cmn	w0, #0x1
    470c:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4710:	mov	x0, x19
    4714:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4718:	mov	x2, #0x1                   	// #1
    471c:	add	x1, x1, #0xb8
    4720:	bl	2220 <PyModule_AddIntConstant@plt>
    4724:	cmn	w0, #0x1
    4728:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    472c:	mov	x0, x19
    4730:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4734:	mov	x2, #0x2                   	// #2
    4738:	add	x1, x1, #0xc8
    473c:	bl	2220 <PyModule_AddIntConstant@plt>
    4740:	cmn	w0, #0x1
    4744:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4748:	mov	x0, x19
    474c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4750:	mov	x2, #0x3                   	// #3
    4754:	add	x1, x1, #0xd8
    4758:	bl	2220 <PyModule_AddIntConstant@plt>
    475c:	cmn	w0, #0x1
    4760:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4764:	mov	x0, x19
    4768:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    476c:	mov	x2, #0x0                   	// #0
    4770:	add	x1, x1, #0xe8
    4774:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4778:	cmn	w0, #0x1
    477c:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4780:	mov	x0, x19
    4784:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4788:	mov	x2, #0x1                   	// #1
    478c:	add	x1, x1, #0xf8
    4790:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4794:	cmn	w0, #0x1
    4798:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    479c:	mov	x0, x19
    47a0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    47a4:	mov	x2, #0x4                   	// #4
    47a8:	add	x1, x1, #0x108
    47ac:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    47b0:	cmn	w0, #0x1
    47b4:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    47b8:	mov	x0, x19
    47bc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    47c0:	mov	x2, #0xa                   	// #10
    47c4:	add	x1, x1, #0x118
    47c8:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    47cc:	cmn	w0, #0x1
    47d0:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    47d4:	mov	x0, x19
    47d8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    47dc:	mov	x2, #0xf                   	// #15
    47e0:	add	x1, x1, #0x128
    47e4:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    47e8:	cmn	w0, #0x1
    47ec:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    47f0:	mov	x0, x19
    47f4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    47f8:	mov	x2, #0x10                  	// #16
    47fc:	add	x1, x1, #0x138
    4800:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4804:	cmn	w0, #0x1
    4808:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    480c:	mov	x2, #0x1                   	// #1
    4810:	mov	x0, x19
    4814:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4818:	movk	x2, #0x4000, lsl #48
    481c:	add	x1, x1, #0x148
    4820:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4824:	cmn	w0, #0x1
    4828:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    482c:	mov	x0, x19
    4830:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4834:	mov	x2, #0x21                  	// #33
    4838:	add	x1, x1, #0x158
    483c:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4840:	cmn	w0, #0x1
    4844:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4848:	mov	x0, x19
    484c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4850:	mov	x2, #0x3                   	// #3
    4854:	add	x1, x1, #0x168
    4858:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    485c:	cmn	w0, #0x1
    4860:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4864:	mov	x0, x19
    4868:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    486c:	mov	x2, #0x4                   	// #4
    4870:	add	x1, x1, #0x178
    4874:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4878:	cmn	w0, #0x1
    487c:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4880:	mov	x0, x19
    4884:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4888:	mov	x2, #0x6                   	// #6
    488c:	add	x1, x1, #0x188
    4890:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4894:	cmn	w0, #0x1
    4898:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    489c:	mov	x0, x19
    48a0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    48a4:	mov	x2, #0x7                   	// #7
    48a8:	add	x1, x1, #0x198
    48ac:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    48b0:	cmn	w0, #0x1
    48b4:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    48b8:	mov	x0, x19
    48bc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    48c0:	mov	x2, #0x8                   	// #8
    48c4:	add	x1, x1, #0x1a8
    48c8:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    48cc:	cmn	w0, #0x1
    48d0:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    48d4:	mov	x0, x19
    48d8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    48dc:	mov	x2, #0x9                   	// #9
    48e0:	add	x1, x1, #0x1b8
    48e4:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    48e8:	cmn	w0, #0x1
    48ec:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    48f0:	mov	x0, x19
    48f4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    48f8:	mov	x2, #0x5                   	// #5
    48fc:	add	x1, x1, #0x1c8
    4900:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4904:	cmn	w0, #0x1
    4908:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    490c:	mov	x0, x19
    4910:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4914:	mov	x2, #0x3                   	// #3
    4918:	add	x1, x1, #0x1d8
    491c:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4920:	cmn	w0, #0x1
    4924:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4928:	mov	x0, x19
    492c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4930:	mov	x2, #0x4                   	// #4
    4934:	add	x1, x1, #0x1e0
    4938:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    493c:	cmn	w0, #0x1
    4940:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4944:	mov	x0, x19
    4948:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    494c:	mov	x2, #0x12                  	// #18
    4950:	add	x1, x1, #0x1e8
    4954:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4958:	cmn	w0, #0x1
    495c:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4960:	mov	x0, x19
    4964:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4968:	mov	x2, #0x13                  	// #19
    496c:	add	x1, x1, #0x1f0
    4970:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4974:	cmn	w0, #0x1
    4978:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    497c:	mov	x0, x19
    4980:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4984:	mov	x2, #0x14                  	// #20
    4988:	add	x1, x1, #0x1f8
    498c:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4990:	cmn	w0, #0x1
    4994:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4998:	mov	x0, x19
    499c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    49a0:	mov	x2, #0x1                   	// #1
    49a4:	add	x1, x1, #0x200
    49a8:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    49ac:	cmn	w0, #0x1
    49b0:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    49b4:	mov	x0, x19
    49b8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    49bc:	mov	x2, #0x2                   	// #2
    49c0:	add	x1, x1, #0x210
    49c4:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    49c8:	cmn	w0, #0x1
    49cc:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    49d0:	mov	x0, x19
    49d4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    49d8:	mov	x2, #0x6                   	// #6
    49dc:	add	x1, x1, #0x220
    49e0:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    49e4:	cmn	w0, #0x1
    49e8:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    49ec:	mov	x0, x19
    49f0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    49f4:	mov	x2, #0x80000000            	// #2147483648
    49f8:	add	x1, x1, #0x230
    49fc:	bl	2ca0 <_PyDict_SetItemId@plt+0x660>
    4a00:	cmn	w0, #0x1
    4a04:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4a08:	mov	x2, #0x0                   	// #0
    4a0c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4a10:	adrp	x0, 5000 <PyInit__lzma@@Base+0x948>
    4a14:	add	x1, x1, #0x240
    4a18:	add	x0, x0, #0x258
    4a1c:	mov	x3, #0x0                   	// #0
    4a20:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    4a24:	str	x0, [x20, #2488]
    4a28:	mov	x2, x0
    4a2c:	cbz	x0, 4ad8 <PyInit__lzma@@Base+0x420>
    4a30:	ldr	x3, [x2]
    4a34:	mov	x0, x19
    4a38:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4a3c:	add	x1, x1, #0x268
    4a40:	add	x3, x3, #0x1
    4a44:	str	x3, [x2]
    4a48:	bl	2590 <PyModule_AddObject@plt>
    4a4c:	cmn	w0, #0x1
    4a50:	b.eq	4ad8 <PyInit__lzma@@Base+0x420>  // b.none
    4a54:	str	x21, [sp, #32]
    4a58:	adrp	x21, 17000 <PyInit__lzma@@Base+0x12948>
    4a5c:	add	x20, x21, #0x230
    4a60:	mov	x0, x20
    4a64:	bl	23e0 <PyType_Ready@plt>
    4a68:	cmn	w0, #0x1
    4a6c:	b.eq	4aec <PyInit__lzma@@Base+0x434>  // b.none
    4a70:	ldr	x3, [x21, #560]
    4a74:	mov	x2, x20
    4a78:	mov	x0, x19
    4a7c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4a80:	add	x3, x3, #0x1
    4a84:	add	x1, x1, #0x278
    4a88:	str	x3, [x21, #560]
    4a8c:	bl	2590 <PyModule_AddObject@plt>
    4a90:	cmn	w0, #0x1
    4a94:	b.eq	4aec <PyInit__lzma@@Base+0x434>  // b.none
    4a98:	add	x21, x20, #0x1a0
    4a9c:	mov	x0, x21
    4aa0:	bl	23e0 <PyType_Ready@plt>
    4aa4:	cmn	w0, #0x1
    4aa8:	b.eq	4aec <PyInit__lzma@@Base+0x434>  // b.none
    4aac:	ldr	x3, [x20, #416]
    4ab0:	mov	x2, x21
    4ab4:	mov	x0, x19
    4ab8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x948>
    4abc:	add	x3, x3, #0x1
    4ac0:	str	x3, [x20, #416]
    4ac4:	add	x1, x1, #0x288
    4ac8:	bl	2590 <PyModule_AddObject@plt>
    4acc:	cmn	w0, #0x1
    4ad0:	ldr	x21, [sp, #32]
    4ad4:	b.ne	4adc <PyInit__lzma@@Base+0x424>  // b.any
    4ad8:	mov	x19, #0x0                   	// #0
    4adc:	mov	x0, x19
    4ae0:	ldp	x19, x20, [sp, #16]
    4ae4:	ldp	x29, x30, [sp], #48
    4ae8:	ret
    4aec:	ldr	x21, [sp, #32]
    4af0:	b	4ad8 <PyInit__lzma@@Base+0x420>

Disassembly of section .fini:

0000000000004af4 <.fini>:
    4af4:	stp	x29, x30, [sp, #-16]!
    4af8:	mov	x29, sp
    4afc:	ldp	x29, x30, [sp], #16
    4b00:	ret
