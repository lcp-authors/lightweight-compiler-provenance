
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_opcode.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000009b0 <.init>:
 9b0:	stp	x29, x30, [sp, #-16]!
 9b4:	mov	x29, sp
 9b8:	bl	aa0 <_PyLong_AsInt@plt+0x10>
 9bc:	ldp	x29, x30, [sp], #16
 9c0:	ret

Disassembly of section .plt:

00000000000009d0 <__cxa_finalize@plt-0x20>:
 9d0:	stp	x16, x30, [sp, #-16]!
 9d4:	adrp	x16, 11000 <PyInit__opcode@@Base+0x1048c>
 9d8:	ldr	x17, [x16, #4088]
 9dc:	add	x16, x16, #0xff8
 9e0:	br	x17
 9e4:	nop
 9e8:	nop
 9ec:	nop

00000000000009f0 <__cxa_finalize@plt>:
 9f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 9f4:	ldr	x17, [x16]
 9f8:	add	x16, x16, #0x0
 9fc:	br	x17

0000000000000a00 <_PyArg_UnpackKeywords@plt>:
 a00:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a04:	ldr	x17, [x16, #8]
 a08:	add	x16, x16, #0x8
 a0c:	br	x17

0000000000000a10 <PyErr_SetString@plt>:
 a10:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a14:	ldr	x17, [x16, #16]
 a18:	add	x16, x16, #0x10
 a1c:	br	x17

0000000000000a20 <PyLong_FromLong@plt>:
 a20:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a24:	ldr	x17, [x16, #24]
 a28:	add	x16, x16, #0x18
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a34:	ldr	x17, [x16, #32]
 a38:	add	x16, x16, #0x20
 a3c:	br	x17

0000000000000a40 <PyErr_Occurred@plt>:
 a40:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a44:	ldr	x17, [x16, #40]
 a48:	add	x16, x16, #0x28
 a4c:	br	x17

0000000000000a50 <PyModule_Create2@plt>:
 a50:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a54:	ldr	x17, [x16, #48]
 a58:	add	x16, x16, #0x30
 a5c:	br	x17

0000000000000a60 <PyLong_AsLong@plt>:
 a60:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a64:	ldr	x17, [x16, #56]
 a68:	add	x16, x16, #0x38
 a6c:	br	x17

0000000000000a70 <PyCompile_OpcodeStackEffectWithJump@plt>:
 a70:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a74:	ldr	x17, [x16, #64]
 a78:	add	x16, x16, #0x40
 a7c:	br	x17

0000000000000a80 <PyType_IsSubtype@plt>:
 a80:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a84:	ldr	x17, [x16, #72]
 a88:	add	x16, x16, #0x48
 a8c:	br	x17

0000000000000a90 <_PyLong_AsInt@plt>:
 a90:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a94:	ldr	x17, [x16, #80]
 a98:	add	x16, x16, #0x50
 a9c:	br	x17

Disassembly of section .text:

0000000000000aa0 <PyInit__opcode@@Base-0xd4>:
 aa0:	adrp	x0, 11000 <PyInit__opcode@@Base+0x1048c>
 aa4:	ldr	x0, [x0, #4040]
 aa8:	cbz	x0, ab0 <_PyLong_AsInt@plt+0x20>
 aac:	b	a30 <__gmon_start__@plt>
 ab0:	ret
 ab4:	nop
 ab8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 abc:	add	x0, x0, #0x148
 ac0:	adrp	x1, 12000 <PyInit__opcode@@Base+0x1148c>
 ac4:	add	x1, x1, #0x148
 ac8:	cmp	x1, x0
 acc:	b.eq	ae4 <_PyLong_AsInt@plt+0x54>  // b.none
 ad0:	adrp	x1, 11000 <PyInit__opcode@@Base+0x1048c>
 ad4:	ldr	x1, [x1, #3992]
 ad8:	cbz	x1, ae4 <_PyLong_AsInt@plt+0x54>
 adc:	mov	x16, x1
 ae0:	br	x16
 ae4:	ret
 ae8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 aec:	add	x0, x0, #0x148
 af0:	adrp	x1, 12000 <PyInit__opcode@@Base+0x1148c>
 af4:	add	x1, x1, #0x148
 af8:	sub	x1, x1, x0
 afc:	lsr	x2, x1, #63
 b00:	add	x1, x2, x1, asr #3
 b04:	cmp	xzr, x1, asr #1
 b08:	asr	x1, x1, #1
 b0c:	b.eq	b24 <_PyLong_AsInt@plt+0x94>  // b.none
 b10:	adrp	x2, 11000 <PyInit__opcode@@Base+0x1048c>
 b14:	ldr	x2, [x2, #4064]
 b18:	cbz	x2, b24 <_PyLong_AsInt@plt+0x94>
 b1c:	mov	x16, x2
 b20:	br	x16
 b24:	ret
 b28:	stp	x29, x30, [sp, #-32]!
 b2c:	mov	x29, sp
 b30:	str	x19, [sp, #16]
 b34:	adrp	x19, 12000 <PyInit__opcode@@Base+0x1148c>
 b38:	ldrb	w0, [x19, #328]
 b3c:	cbnz	w0, b64 <_PyLong_AsInt@plt+0xd4>
 b40:	adrp	x0, 11000 <PyInit__opcode@@Base+0x1048c>
 b44:	ldr	x0, [x0, #4008]
 b48:	cbz	x0, b58 <_PyLong_AsInt@plt+0xc8>
 b4c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 b50:	ldr	x0, [x0, #88]
 b54:	bl	9f0 <__cxa_finalize@plt>
 b58:	bl	ab8 <_PyLong_AsInt@plt+0x28>
 b5c:	mov	w0, #0x1                   	// #1
 b60:	strb	w0, [x19, #328]
 b64:	ldr	x19, [sp, #16]
 b68:	ldp	x29, x30, [sp], #32
 b6c:	ret
 b70:	b	ae8 <_PyLong_AsInt@plt+0x58>

0000000000000b74 <PyInit__opcode@@Base>:
 b74:	stp	x29, x30, [sp, #-16]!
 b78:	mov	x29, sp
 b7c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 b80:	add	x0, x0, #0x60
 b84:	mov	w1, #0x3f5                 	// #1013
 b88:	bl	a50 <PyModule_Create2@plt>
 b8c:	ldp	x29, x30, [sp], #16
 b90:	ret
 b94:	sub	sp, sp, #0x50
 b98:	stp	x29, x30, [sp, #32]
 b9c:	stp	x22, x21, [sp, #48]
 ba0:	stp	x20, x19, [sp, #64]
 ba4:	add	x29, sp, #0x20
 ba8:	mov	x20, x2
 bac:	mov	x19, x1
 bb0:	cbz	x3, bc0 <PyInit__opcode@@Base+0x4c>
 bb4:	ldr	x22, [x3, #16]
 bb8:	cbnz	x19, bc8 <PyInit__opcode@@Base+0x54>
 bbc:	b	be0 <PyInit__opcode@@Base+0x6c>
 bc0:	mov	x22, xzr
 bc4:	cbz	x19, be0 <PyInit__opcode@@Base+0x6c>
 bc8:	sub	x8, x20, #0x1
 bcc:	cmp	x8, #0x1
 bd0:	b.hi	be0 <PyInit__opcode@@Base+0x6c>  // b.pmore
 bd4:	cbnz	x3, be0 <PyInit__opcode@@Base+0x6c>
 bd8:	cbnz	x19, c14 <PyInit__opcode@@Base+0xa0>
 bdc:	b	c54 <PyInit__opcode@@Base+0xe0>
 be0:	adrp	x4, 12000 <PyInit__opcode@@Base+0x1148c>
 be4:	add	x8, sp, #0x8
 be8:	add	x4, x4, #0x108
 bec:	mov	w5, #0x1                   	// #1
 bf0:	mov	w6, #0x2                   	// #2
 bf4:	mov	x0, x19
 bf8:	mov	x1, x20
 bfc:	mov	x2, xzr
 c00:	mov	w7, wzr
 c04:	str	x8, [sp]
 c08:	bl	a00 <_PyArg_UnpackKeywords@plt>
 c0c:	mov	x19, x0
 c10:	cbz	x19, c54 <PyInit__opcode@@Base+0xe0>
 c14:	ldr	x8, [x19]
 c18:	ldr	x0, [x8, #8]
 c1c:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 c20:	ldr	x8, [x8, #4000]
 c24:	cmp	x0, x8
 c28:	b.eq	c3c <PyInit__opcode@@Base+0xc8>  // b.none
 c2c:	adrp	x1, 11000 <PyInit__opcode@@Base+0x1048c>
 c30:	ldr	x1, [x1, #4000]
 c34:	bl	a80 <PyType_IsSubtype@plt>
 c38:	cbz	w0, c6c <PyInit__opcode@@Base+0xf8>
 c3c:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 c40:	ldr	x8, [x8, #4024]
 c44:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 c48:	add	x1, x1, #0xe51
 c4c:	ldr	x0, [x8]
 c50:	bl	a10 <PyErr_SetString@plt>
 c54:	mov	x0, xzr
 c58:	ldp	x20, x19, [sp, #64]
 c5c:	ldp	x22, x21, [sp, #48]
 c60:	ldp	x29, x30, [sp, #32]
 c64:	add	sp, sp, #0x50
 c68:	ret
 c6c:	ldr	x0, [x19]
 c70:	bl	a90 <_PyLong_AsInt@plt>
 c74:	mov	w21, w0
 c78:	cmn	w0, #0x1
 c7c:	b.eq	cd8 <PyInit__opcode@@Base+0x164>  // b.none
 c80:	cmp	x20, #0x2
 c84:	add	x8, x22, x20
 c88:	b.ge	ca4 <PyInit__opcode@@Base+0x130>  // b.tcont
 c8c:	adrp	x1, 11000 <PyInit__opcode@@Base+0x1048c>
 c90:	ldr	x1, [x1, #4048]
 c94:	sub	x8, x8, #0x1
 c98:	cbz	x8, cb0 <PyInit__opcode@@Base+0x13c>
 c9c:	ldr	x2, [x19, #16]
 ca0:	b	cb8 <PyInit__opcode@@Base+0x144>
 ca4:	ldr	x1, [x19, #8]
 ca8:	sub	x8, x8, #0x2
 cac:	cbnz	x8, c9c <PyInit__opcode@@Base+0x128>
 cb0:	adrp	x2, 11000 <PyInit__opcode@@Base+0x1048c>
 cb4:	ldr	x2, [x2, #4048]
 cb8:	mov	w0, w21
 cbc:	bl	cf0 <PyInit__opcode@@Base+0x17c>
 cc0:	mov	w19, w0
 cc4:	cmn	w0, #0x1
 cc8:	b.eq	ce4 <PyInit__opcode@@Base+0x170>  // b.none
 ccc:	sxtw	x0, w19
 cd0:	bl	a20 <PyLong_FromLong@plt>
 cd4:	b	c58 <PyInit__opcode@@Base+0xe4>
 cd8:	bl	a40 <PyErr_Occurred@plt>
 cdc:	cbnz	x0, c54 <PyInit__opcode@@Base+0xe0>
 ce0:	b	c80 <PyInit__opcode@@Base+0x10c>
 ce4:	bl	a40 <PyErr_Occurred@plt>
 ce8:	cbnz	x0, c54 <PyInit__opcode@@Base+0xe0>
 cec:	b	ccc <PyInit__opcode@@Base+0x158>
 cf0:	stp	x29, x30, [sp, #-32]!
 cf4:	stp	x20, x19, [sp, #16]
 cf8:	mov	x29, sp
 cfc:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 d00:	ldr	x8, [x8, #4048]
 d04:	mov	x20, x2
 d08:	mov	w19, w0
 d0c:	cmp	w0, #0x5a
 d10:	b.lt	d40 <PyInit__opcode@@Base+0x1cc>  // b.tstop
 d14:	cmp	x1, x8
 d18:	b.eq	d5c <PyInit__opcode@@Base+0x1e8>  // b.none
 d1c:	mov	x0, x1
 d20:	bl	a60 <PyLong_AsLong@plt>
 d24:	mov	x1, x0
 d28:	cmn	w1, #0x1
 d2c:	b.ne	d74 <PyInit__opcode@@Base+0x200>  // b.any
 d30:	bl	a40 <PyErr_Occurred@plt>
 d34:	mov	w1, #0xffffffff            	// #-1
 d38:	cbnz	x0, e00 <PyInit__opcode@@Base+0x28c>
 d3c:	b	d74 <PyInit__opcode@@Base+0x200>
 d40:	cmp	x1, x8
 d44:	b.eq	d70 <PyInit__opcode@@Base+0x1fc>  // b.none
 d48:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 d4c:	ldr	x8, [x8, #4016]
 d50:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 d54:	add	x1, x1, #0xeb6
 d58:	b	df4 <PyInit__opcode@@Base+0x280>
 d5c:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 d60:	ldr	x8, [x8, #4016]
 d64:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 d68:	add	x1, x1, #0xe76
 d6c:	b	df4 <PyInit__opcode@@Base+0x280>
 d70:	mov	w1, wzr
 d74:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 d78:	ldr	x8, [x8, #4048]
 d7c:	cmp	x20, x8
 d80:	b.eq	db8 <PyInit__opcode@@Base+0x244>  // b.none
 d84:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 d88:	ldr	x8, [x8, #4056]
 d8c:	cmp	x20, x8
 d90:	b.eq	dc0 <PyInit__opcode@@Base+0x24c>  // b.none
 d94:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 d98:	ldr	x8, [x8, #4032]
 d9c:	cmp	x20, x8
 da0:	b.eq	dc8 <PyInit__opcode@@Base+0x254>  // b.none
 da4:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 da8:	ldr	x8, [x8, #4016]
 dac:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 db0:	add	x1, x1, #0xef9
 db4:	b	df4 <PyInit__opcode@@Base+0x280>
 db8:	mov	w2, #0xffffffff            	// #-1
 dbc:	b	dcc <PyInit__opcode@@Base+0x258>
 dc0:	mov	w2, #0x1                   	// #1
 dc4:	b	dcc <PyInit__opcode@@Base+0x258>
 dc8:	mov	w2, wzr
 dcc:	mov	w0, w19
 dd0:	bl	a70 <PyCompile_OpcodeStackEffectWithJump@plt>
 dd4:	mov	w8, #0x7fffffff            	// #2147483647
 dd8:	mov	w1, w0
 ddc:	cmp	w0, w8
 de0:	b.ne	e00 <PyInit__opcode@@Base+0x28c>  // b.any
 de4:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 de8:	ldr	x8, [x8, #4016]
 dec:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 df0:	add	x1, x1, #0xf28
 df4:	ldr	x0, [x8]
 df8:	bl	a10 <PyErr_SetString@plt>
 dfc:	mov	w1, #0xffffffff            	// #-1
 e00:	ldp	x20, x19, [sp, #16]
 e04:	mov	w0, w1
 e08:	ldp	x29, x30, [sp], #32
 e0c:	ret

Disassembly of section .fini:

0000000000000e10 <.fini>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	ldp	x29, x30, [sp], #16
 e1c:	ret
