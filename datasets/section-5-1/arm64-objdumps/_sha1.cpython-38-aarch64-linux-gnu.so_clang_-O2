
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 11000 <PyInit__sha1@@Base+0x1010c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__sha1@@Base-0xd4>:
     e20:	adrp	x0, 11000 <PyInit__sha1@@Base+0x1010c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 12000 <PyInit__sha1@@Base+0x1110c>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 11000 <PyInit__sha1@@Base+0x1010c>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 12000 <PyInit__sha1@@Base+0x1110c>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 11000 <PyInit__sha1@@Base+0x1010c>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 12000 <PyInit__sha1@@Base+0x1110c>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 11000 <PyInit__sha1@@Base+0x1010c>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>

0000000000000ef4 <PyInit__sha1@@Base>:
     ef4:	stp	x29, x30, [sp, #-32]!
     ef8:	stp	x20, x19, [sp, #16]
     efc:	mov	x29, sp
     f00:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
     f04:	ldr	x8, [x8, #4048]
     f08:	adrp	x19, 12000 <PyInit__sha1@@Base+0x1110c>
     f0c:	add	x19, x19, #0x98
     f10:	mov	x0, x19
     f14:	str	x8, [x19, #8]
     f18:	bl	d80 <PyType_Ready@plt>
     f1c:	tbnz	w0, #31, f5c <PyInit__sha1@@Base+0x68>
     f20:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     f24:	add	x0, x0, #0x238
     f28:	mov	w1, #0x3f5                 	// #1013
     f2c:	bl	dc0 <PyModule_Create2@plt>
     f30:	mov	x20, x0
     f34:	cbz	x0, f60 <PyInit__sha1@@Base+0x6c>
     f38:	ldr	x8, [x19]
     f3c:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
     f40:	add	x1, x1, #0xa48
     f44:	mov	x0, x20
     f48:	add	x8, x8, #0x1
     f4c:	mov	x2, x19
     f50:	str	x8, [x19]
     f54:	bl	df0 <PyModule_AddObject@plt>
     f58:	b	f60 <PyInit__sha1@@Base+0x6c>
     f5c:	mov	x20, xzr
     f60:	mov	x0, x20
     f64:	ldp	x20, x19, [sp, #16]
     f68:	ldp	x29, x30, [sp], #32
     f6c:	ret
     f70:	b	d70 <PyObject_Free@plt>
     f74:	stp	x29, x30, [sp, #-32]!
     f78:	str	x19, [sp, #16]
     f7c:	mov	x29, sp
     f80:	mov	x19, x0
     f84:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     f88:	add	x0, x0, #0x98
     f8c:	bl	de0 <_PyObject_New@plt>
     f90:	cbz	x0, fac <PyInit__sha1@@Base+0xb8>
     f94:	ldp	q1, q0, [x19, #16]
     f98:	stp	q1, q0, [x0, #16]
     f9c:	ldp	q1, q0, [x19, #80]
     fa0:	ldp	q3, q2, [x19, #48]
     fa4:	stp	q1, q0, [x0, #80]
     fa8:	stp	q3, q2, [x0, #48]
     fac:	ldr	x19, [sp, #16]
     fb0:	ldp	x29, x30, [sp], #32
     fb4:	ret
     fb8:	sub	sp, sp, #0x90
     fbc:	stp	x29, x30, [sp, #128]
     fc0:	add	x29, sp, #0x80
     fc4:	ldp	q1, q0, [x0, #16]
     fc8:	sub	x1, x29, #0x14
     fcc:	stp	q1, q0, [sp]
     fd0:	ldp	q1, q0, [x0, #80]
     fd4:	ldp	q3, q2, [x0, #48]
     fd8:	mov	x0, sp
     fdc:	stp	q1, q0, [sp, #64]
     fe0:	stp	q3, q2, [sp, #32]
     fe4:	bl	11ec <PyInit__sha1@@Base+0x2f8>
     fe8:	sub	x0, x29, #0x14
     fec:	mov	w1, #0x14                  	// #20
     ff0:	bl	d30 <PyBytes_FromStringAndSize@plt>
     ff4:	ldp	x29, x30, [sp, #128]
     ff8:	add	sp, sp, #0x90
     ffc:	ret
    1000:	sub	sp, sp, #0x90
    1004:	stp	x29, x30, [sp, #128]
    1008:	add	x29, sp, #0x80
    100c:	ldp	q1, q0, [x0, #16]
    1010:	sub	x1, x29, #0x14
    1014:	stp	q1, q0, [sp]
    1018:	ldp	q1, q0, [x0, #80]
    101c:	ldp	q3, q2, [x0, #48]
    1020:	mov	x0, sp
    1024:	stp	q1, q0, [sp, #64]
    1028:	stp	q3, q2, [sp, #32]
    102c:	bl	11ec <PyInit__sha1@@Base+0x2f8>
    1030:	sub	x0, x29, #0x14
    1034:	mov	w1, #0x14                  	// #20
    1038:	bl	e10 <_Py_strhex@plt>
    103c:	ldp	x29, x30, [sp, #128]
    1040:	add	sp, sp, #0x90
    1044:	ret
    1048:	sub	sp, sp, #0xa0
    104c:	stp	x29, x30, [sp, #80]
    1050:	stp	x26, x25, [sp, #96]
    1054:	stp	x24, x23, [sp, #112]
    1058:	stp	x22, x21, [sp, #128]
    105c:	stp	x20, x19, [sp, #144]
    1060:	add	x29, sp, #0x50
    1064:	ldr	x9, [x1, #8]
    1068:	ldrb	w10, [x9, #171]
    106c:	tbnz	w10, #4, 10d0 <PyInit__sha1@@Base+0x1dc>
    1070:	ldr	x9, [x9, #160]
    1074:	cbz	x9, 10e4 <PyInit__sha1@@Base+0x1f0>
    1078:	ldr	x9, [x9]
    107c:	cbz	x9, 10e4 <PyInit__sha1@@Base+0x1f0>
    1080:	mov	x8, x1
    1084:	mov	x19, x0
    1088:	mov	x1, sp
    108c:	mov	x0, x8
    1090:	mov	w2, wzr
    1094:	bl	dd0 <PyObject_GetBuffer@plt>
    1098:	cmn	w0, #0x1
    109c:	b.eq	10fc <PyInit__sha1@@Base+0x208>  // b.none
    10a0:	ldr	w8, [sp, #36]
    10a4:	cmp	w8, #0x2
    10a8:	b.lt	111c <PyInit__sha1@@Base+0x228>  // b.tstop
    10ac:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    10b0:	ldr	x8, [x8, #4024]
    10b4:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    10b8:	add	x1, x1, #0xacb
    10bc:	ldr	x0, [x8]
    10c0:	bl	d60 <PyErr_SetString@plt>
    10c4:	mov	x0, sp
    10c8:	bl	d10 <PyBuffer_Release@plt>
    10cc:	b	10fc <PyInit__sha1@@Base+0x208>
    10d0:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    10d4:	ldr	x8, [x8, #4032]
    10d8:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    10dc:	add	x1, x1, #0xa72
    10e0:	b	10f4 <PyInit__sha1@@Base+0x200>
    10e4:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    10e8:	ldr	x8, [x8, #4032]
    10ec:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    10f0:	add	x1, x1, #0xaa1
    10f4:	ldr	x0, [x8]
    10f8:	bl	d60 <PyErr_SetString@plt>
    10fc:	mov	x0, xzr
    1100:	ldp	x20, x19, [sp, #144]
    1104:	ldp	x22, x21, [sp, #128]
    1108:	ldp	x24, x23, [sp, #112]
    110c:	ldp	x26, x25, [sp, #96]
    1110:	ldp	x29, x30, [sp, #80]
    1114:	add	sp, sp, #0xa0
    1118:	ret
    111c:	ldr	x25, [sp, #16]
    1120:	cmp	x25, #0x1
    1124:	b.lt	11cc <PyInit__sha1@@Base+0x2d8>  // b.tstop
    1128:	ldr	x20, [sp]
    112c:	add	x21, x19, #0x10
    1130:	add	x22, x19, #0x30
    1134:	mov	w24, #0x40                  	// #64
    1138:	b	1164 <PyInit__sha1@@Base+0x270>
    113c:	mov	x0, x21
    1140:	mov	x1, x20
    1144:	bl	137c <PyInit__sha1@@Base+0x488>
    1148:	ldr	x8, [x21]
    114c:	add	x20, x20, #0x40
    1150:	mov	x25, x23
    1154:	add	x8, x8, #0x200
    1158:	str	x8, [x21]
    115c:	cmp	x25, #0x0
    1160:	b.le	11cc <PyInit__sha1@@Base+0x2d8>
    1164:	ldr	w26, [x19, #44]
    1168:	subs	x23, x25, #0x40
    116c:	b.lt	1174 <PyInit__sha1@@Base+0x280>  // b.tstop
    1170:	cbz	w26, 113c <PyInit__sha1@@Base+0x248>
    1174:	sub	w8, w24, w26
    1178:	cmp	x25, x8
    117c:	add	x9, x19, x26
    1180:	csel	x23, x8, x25, gt
    1184:	add	x0, x9, #0x30
    1188:	mov	x1, x20
    118c:	mov	x2, x23
    1190:	bl	d00 <memcpy@plt>
    1194:	add	w8, w26, w23
    1198:	add	x20, x20, x23
    119c:	cmp	w8, #0x40
    11a0:	sub	x25, x25, x23
    11a4:	str	w8, [x19, #44]
    11a8:	b.ne	115c <PyInit__sha1@@Base+0x268>  // b.any
    11ac:	mov	x0, x21
    11b0:	mov	x1, x22
    11b4:	bl	137c <PyInit__sha1@@Base+0x488>
    11b8:	ldr	x8, [x19, #16]
    11bc:	str	wzr, [x19, #44]
    11c0:	add	x8, x8, #0x200
    11c4:	str	x8, [x19, #16]
    11c8:	b	115c <PyInit__sha1@@Base+0x268>
    11cc:	mov	x0, sp
    11d0:	bl	d10 <PyBuffer_Release@plt>
    11d4:	adrp	x0, 11000 <PyInit__sha1@@Base+0x1010c>
    11d8:	ldr	x0, [x0, #4056]
    11dc:	ldr	x8, [x0]
    11e0:	add	x8, x8, #0x1
    11e4:	str	x8, [x0]
    11e8:	b	1100 <PyInit__sha1@@Base+0x20c>
    11ec:	stp	x29, x30, [sp, #-48]!
    11f0:	str	x21, [sp, #16]
    11f4:	stp	x20, x19, [sp, #32]
    11f8:	mov	x29, sp
    11fc:	ldr	w8, [x0, #28]
    1200:	ldr	x10, [x0]
    1204:	mov	x19, x1
    1208:	mov	x20, x0
    120c:	lsl	w12, w8, #3
    1210:	add	w9, w8, #0x1
    1214:	add	x21, x0, #0x20
    1218:	mov	w11, #0x80                  	// #128
    121c:	add	x10, x10, x12
    1220:	cmp	w9, #0x39
    1224:	str	w9, [x0, #28]
    1228:	str	x10, [x0]
    122c:	strb	w11, [x21, x8]
    1230:	b.cc	1278 <PyInit__sha1@@Base+0x384>  // b.lo, b.ul, b.last
    1234:	cmp	w9, #0x3f
    1238:	b.hi	1260 <PyInit__sha1@@Base+0x36c>  // b.pmore
    123c:	mov	w9, w9
    1240:	add	x10, x20, #0x20
    1244:	add	w8, w8, #0x2
    1248:	str	w8, [x20, #28]
    124c:	strb	wzr, [x10, x9]
    1250:	cmp	x9, #0x3f
    1254:	add	x9, x9, #0x1
    1258:	add	w8, w8, #0x1
    125c:	b.cc	1248 <PyInit__sha1@@Base+0x354>  // b.lo, b.ul, b.last
    1260:	mov	x0, x20
    1264:	mov	x1, x21
    1268:	bl	137c <PyInit__sha1@@Base+0x488>
    126c:	mov	w9, wzr
    1270:	str	wzr, [x20, #28]
    1274:	b	1280 <PyInit__sha1@@Base+0x38c>
    1278:	cmp	w9, #0x38
    127c:	b.eq	12a0 <PyInit__sha1@@Base+0x3ac>  // b.none
    1280:	mov	w8, w9
    1284:	add	x9, x20, #0x20
    1288:	add	x10, x8, #0x1
    128c:	cmp	x8, #0x37
    1290:	str	w10, [x20, #28]
    1294:	strb	wzr, [x9, x8]
    1298:	mov	x8, x10
    129c:	b.cc	1288 <PyInit__sha1@@Base+0x394>  // b.lo, b.ul, b.last
    12a0:	ldr	x8, [x20]
    12a4:	mov	x0, x20
    12a8:	mov	x1, x21
    12ac:	rev	x8, x8
    12b0:	str	x8, [x20, #88]
    12b4:	bl	137c <PyInit__sha1@@Base+0x488>
    12b8:	ldrb	w8, [x20, #11]
    12bc:	ldr	x21, [sp, #16]
    12c0:	strb	w8, [x19]
    12c4:	ldrh	w8, [x20, #10]
    12c8:	strb	w8, [x19, #1]
    12cc:	ldr	w8, [x20, #8]
    12d0:	lsr	w8, w8, #8
    12d4:	strb	w8, [x19, #2]
    12d8:	ldr	w8, [x20, #8]
    12dc:	strb	w8, [x19, #3]
    12e0:	ldrb	w8, [x20, #15]
    12e4:	strb	w8, [x19, #4]
    12e8:	ldrh	w8, [x20, #14]
    12ec:	strb	w8, [x19, #5]
    12f0:	ldr	w8, [x20, #12]
    12f4:	lsr	w8, w8, #8
    12f8:	strb	w8, [x19, #6]
    12fc:	ldr	w8, [x20, #12]
    1300:	strb	w8, [x19, #7]
    1304:	ldrb	w8, [x20, #19]
    1308:	strb	w8, [x19, #8]
    130c:	ldrh	w8, [x20, #18]
    1310:	strb	w8, [x19, #9]
    1314:	ldr	w8, [x20, #16]
    1318:	lsr	w8, w8, #8
    131c:	strb	w8, [x19, #10]
    1320:	ldr	w8, [x20, #16]
    1324:	strb	w8, [x19, #11]
    1328:	ldrb	w8, [x20, #23]
    132c:	strb	w8, [x19, #12]
    1330:	ldrh	w8, [x20, #22]
    1334:	strb	w8, [x19, #13]
    1338:	ldr	w8, [x20, #20]
    133c:	lsr	w8, w8, #8
    1340:	strb	w8, [x19, #14]
    1344:	ldr	w8, [x20, #20]
    1348:	strb	w8, [x19, #15]
    134c:	ldrb	w8, [x20, #27]
    1350:	strb	w8, [x19, #16]
    1354:	ldrh	w8, [x20, #26]
    1358:	strb	w8, [x19, #17]
    135c:	ldr	w8, [x20, #24]
    1360:	lsr	w8, w8, #8
    1364:	strb	w8, [x19, #18]
    1368:	ldr	w8, [x20, #24]
    136c:	strb	w8, [x19, #19]
    1370:	ldp	x20, x19, [sp, #32]
    1374:	ldp	x29, x30, [sp], #48
    1378:	ret
    137c:	sub	sp, sp, #0x150
    1380:	str	x29, [sp, #320]
    1384:	mov	x8, xzr
    1388:	add	x9, x1, #0x1
    138c:	mov	x10, sp
    1390:	add	x11, x9, x8
    1394:	ldur	w11, [x11, #-1]
    1398:	rev	w11, w11
    139c:	str	w11, [x10, x8]
    13a0:	add	x8, x8, #0x4
    13a4:	cmp	x8, #0x40
    13a8:	b.ne	1390 <PyInit__sha1@@Base+0x49c>  // b.any
    13ac:	ldp	w8, w9, [x0, #8]
    13b0:	ldp	w10, w11, [x0, #16]
    13b4:	ldr	w12, [x0, #24]
    13b8:	mov	x14, sp
    13bc:	mov	x13, xzr
    13c0:	add	x15, x14, #0x20
    13c4:	add	x16, x15, x13
    13c8:	ldr	w17, [x16, #20]
    13cc:	ldr	w18, [x16]
    13d0:	ldur	w1, [x16, #-24]
    13d4:	ldr	w2, [x14, x13]
    13d8:	add	x13, x13, #0x4
    13dc:	eor	w17, w18, w17
    13e0:	eor	w17, w17, w1
    13e4:	eor	w17, w17, w2
    13e8:	ror	w17, w17, #31
    13ec:	cmp	x13, #0x100
    13f0:	str	w17, [x16, #32]
    13f4:	b.ne	13c4 <PyInit__sha1@@Base+0x4d0>  // b.any
    13f8:	mov	w15, #0x7999                	// #31129
    13fc:	mov	x13, sp
    1400:	movk	w15, #0x5a82, lsl #16
    1404:	add	x16, x13, #0x8
    1408:	mov	x2, #0xfffffffffffffffb    	// #-5
    140c:	mov	w13, w12
    1410:	mov	w17, w11
    1414:	mov	w14, w10
    1418:	mov	w1, w9
    141c:	mov	w18, w8
    1420:	ror	w3, w18, #27
    1424:	bic	w4, w17, w1
    1428:	and	w5, w14, w1
    142c:	ror	w1, w1, #2
    1430:	add	w3, w3, w15
    1434:	orr	w4, w5, w4
    1438:	bic	w5, w14, w18
    143c:	add	w13, w3, w13
    1440:	and	w3, w1, w18
    1444:	orr	w3, w3, w5
    1448:	add	w13, w13, w4
    144c:	ldp	w4, w5, [x16, #-8]
    1450:	add	w17, w17, w15
    1454:	add	w17, w17, w3
    1458:	add	w14, w14, w15
    145c:	add	w13, w13, w4
    1460:	ldp	w3, w4, [x16]
    1464:	add	w17, w17, w5
    1468:	ldr	w5, [x16, #8]
    146c:	ror	w18, w18, #2
    1470:	add	w14, w14, w3
    1474:	add	w3, w1, w15
    1478:	add	w3, w3, w4
    147c:	add	w4, w18, w15
    1480:	add	w4, w4, w5
    1484:	ror	w5, w13, #27
    1488:	bic	w1, w1, w13
    148c:	add	w17, w17, w5
    1490:	and	w5, w18, w13
    1494:	ror	w13, w13, #2
    1498:	orr	w1, w5, w1
    149c:	ror	w5, w17, #27
    14a0:	add	w14, w14, w1
    14a4:	bic	w18, w18, w17
    14a8:	and	w1, w13, w17
    14ac:	ror	w17, w17, #2
    14b0:	add	w14, w14, w5
    14b4:	orr	w18, w1, w18
    14b8:	ror	w1, w14, #27
    14bc:	add	w18, w3, w18
    14c0:	bic	w3, w13, w14
    14c4:	and	w5, w17, w14
    14c8:	add	w1, w18, w1
    14cc:	orr	w18, w5, w3
    14d0:	add	x2, x2, #0x5
    14d4:	ror	w3, w1, #27
    14d8:	add	w18, w4, w18
    14dc:	cmp	x2, #0xf
    14e0:	ror	w14, w14, #2
    14e4:	add	w18, w18, w3
    14e8:	add	x16, x16, #0x14
    14ec:	b.cc	1420 <PyInit__sha1@@Base+0x52c>  // b.lo, b.ul, b.last
    14f0:	mov	w15, #0xeba1                	// #60321
    14f4:	mov	x16, sp
    14f8:	movk	w15, #0x6ed9, lsl #16
    14fc:	add	x16, x16, #0x60
    1500:	mov	w2, #0xf                   	// #15
    1504:	ror	w3, w18, #27
    1508:	eor	w4, w14, w1
    150c:	ror	w1, w1, #2
    1510:	eor	w5, w14, w18
    1514:	eor	w4, w4, w17
    1518:	add	w17, w17, w15
    151c:	add	w3, w3, w15
    1520:	eor	w5, w5, w1
    1524:	add	w3, w3, w4
    1528:	add	w17, w17, w5
    152c:	ldp	w4, w5, [x16, #-16]
    1530:	add	w13, w3, w13
    1534:	ror	w18, w18, #2
    1538:	add	w14, w14, w15
    153c:	add	w13, w13, w4
    1540:	ldp	w3, w4, [x16, #-8]
    1544:	add	w17, w17, w5
    1548:	ldr	w5, [x16], #20
    154c:	add	x2, x2, #0x5
    1550:	add	w14, w14, w3
    1554:	eor	w3, w1, w18
    1558:	add	w1, w1, w15
    155c:	add	w1, w1, w4
    1560:	add	w4, w18, w15
    1564:	add	w4, w4, w5
    1568:	ror	w5, w13, #27
    156c:	eor	w3, w3, w13
    1570:	ror	w13, w13, #2
    1574:	add	w17, w17, w5
    1578:	add	w14, w14, w3
    157c:	eor	w18, w13, w18
    1580:	ror	w3, w17, #27
    1584:	eor	w18, w18, w17
    1588:	ror	w17, w17, #2
    158c:	add	w14, w14, w3
    1590:	add	w18, w1, w18
    1594:	eor	w1, w17, w13
    1598:	ror	w3, w14, #27
    159c:	eor	w5, w1, w14
    15a0:	add	w1, w18, w3
    15a4:	add	w18, w4, w5
    15a8:	ror	w3, w1, #27
    15ac:	cmp	x2, #0x23
    15b0:	ror	w14, w14, #2
    15b4:	add	w18, w18, w3
    15b8:	b.cc	1504 <PyInit__sha1@@Base+0x610>  // b.lo, b.ul, b.last
    15bc:	mov	w2, #0xbcdc                	// #48348
    15c0:	mov	x15, sp
    15c4:	movk	w2, #0x8f1b, lsl #16
    15c8:	add	x15, x15, #0xb0
    15cc:	mov	w16, #0x23                  	// #35
    15d0:	orr	w5, w14, w1
    15d4:	ror	w3, w18, #27
    15d8:	and	w4, w14, w1
    15dc:	and	w5, w17, w5
    15e0:	orr	w4, w5, w4
    15e4:	ldp	w5, w6, [x15, #-16]
    15e8:	add	w3, w3, w2
    15ec:	ror	w1, w1, #2
    15f0:	add	w13, w3, w13
    15f4:	add	w13, w13, w4
    15f8:	orr	w4, w1, w18
    15fc:	ror	w3, w18, #2
    1600:	and	w4, w4, w14
    1604:	and	w18, w1, w18
    1608:	orr	w18, w4, w18
    160c:	add	w13, w13, w5
    1610:	ldp	w4, w5, [x15, #-8]
    1614:	add	w17, w17, w2
    1618:	add	w17, w17, w18
    161c:	ldr	w18, [x15], #20
    1620:	add	w14, w14, w2
    1624:	add	w14, w14, w4
    1628:	add	w4, w1, w2
    162c:	add	w4, w4, w5
    1630:	add	w5, w3, w2
    1634:	add	w18, w5, w18
    1638:	add	w17, w17, w6
    163c:	ror	w5, w13, #27
    1640:	add	w17, w17, w5
    1644:	orr	w5, w13, w3
    1648:	and	w1, w5, w1
    164c:	and	w5, w13, w3
    1650:	ror	w13, w13, #2
    1654:	orr	w1, w1, w5
    1658:	add	w14, w14, w1
    165c:	orr	w1, w17, w13
    1660:	ror	w5, w17, #27
    1664:	and	w1, w1, w3
    1668:	and	w3, w17, w13
    166c:	ror	w17, w17, #2
    1670:	add	w14, w14, w5
    1674:	orr	w1, w1, w3
    1678:	ror	w3, w14, #27
    167c:	add	w1, w4, w1
    1680:	orr	w5, w14, w17
    1684:	and	w4, w14, w17
    1688:	add	w1, w1, w3
    168c:	and	w3, w5, w13
    1690:	orr	w3, w3, w4
    1694:	add	x16, x16, #0x5
    1698:	ror	w5, w1, #27
    169c:	add	w18, w18, w3
    16a0:	cmp	x16, #0x37
    16a4:	ror	w14, w14, #2
    16a8:	add	w18, w18, w5
    16ac:	b.cc	15d0 <PyInit__sha1@@Base+0x6dc>  // b.lo, b.ul, b.last
    16b0:	add	w2, w16, #0x5
    16b4:	cmp	w2, #0x4f
    16b8:	b.hi	177c <PyInit__sha1@@Base+0x888>  // b.pmore
    16bc:	mov	w2, #0xc1d6                	// #49622
    16c0:	movk	w2, #0xca62, lsl #16
    16c4:	ror	w3, w18, #27
    16c8:	eor	w4, w14, w1
    16cc:	ror	w1, w1, #2
    16d0:	eor	w5, w14, w18
    16d4:	eor	w4, w4, w17
    16d8:	add	w17, w17, w2
    16dc:	add	w3, w3, w2
    16e0:	eor	w5, w5, w1
    16e4:	add	w3, w3, w4
    16e8:	add	w17, w17, w5
    16ec:	ldp	w4, w5, [x15, #-16]
    16f0:	add	w13, w3, w13
    16f4:	ror	w18, w18, #2
    16f8:	add	w14, w14, w2
    16fc:	add	w13, w13, w4
    1700:	ldp	w3, w4, [x15, #-8]
    1704:	add	w17, w17, w5
    1708:	ldr	w5, [x15], #20
    170c:	add	x16, x16, #0x5
    1710:	add	w14, w14, w3
    1714:	eor	w3, w1, w18
    1718:	add	w1, w1, w2
    171c:	add	w1, w1, w4
    1720:	add	w4, w18, w2
    1724:	add	w4, w4, w5
    1728:	ror	w5, w13, #27
    172c:	eor	w3, w3, w13
    1730:	ror	w13, w13, #2
    1734:	add	w17, w17, w5
    1738:	add	w14, w14, w3
    173c:	eor	w18, w13, w18
    1740:	ror	w3, w17, #27
    1744:	eor	w18, w18, w17
    1748:	ror	w17, w17, #2
    174c:	add	w14, w14, w3
    1750:	add	w18, w1, w18
    1754:	eor	w1, w17, w13
    1758:	ror	w3, w14, #27
    175c:	eor	w5, w1, w14
    1760:	add	w1, w18, w3
    1764:	add	w18, w4, w5
    1768:	ror	w3, w1, #27
    176c:	cmp	x16, #0x4b
    1770:	ror	w14, w14, #2
    1774:	add	w18, w18, w3
    1778:	b.cc	16c4 <PyInit__sha1@@Base+0x7d0>  // b.lo, b.ul, b.last
    177c:	add	w8, w18, w8
    1780:	add	w9, w1, w9
    1784:	add	w10, w14, w10
    1788:	add	w11, w17, w11
    178c:	stp	w8, w9, [x0, #8]
    1790:	stp	w10, w11, [x0, #16]
    1794:	ldr	x29, [sp, #320]
    1798:	add	w12, w13, w12
    179c:	str	w12, [x0, #24]
    17a0:	add	sp, sp, #0x150
    17a4:	ret
    17a8:	mov	w0, #0x40                  	// #64
    17ac:	b	d90 <PyLong_FromLong@plt>
    17b0:	adrp	x0, 1000 <PyInit__sha1@@Base+0x10c>
    17b4:	add	x0, x0, #0xa57
    17b8:	mov	w1, #0x4                   	// #4
    17bc:	b	e00 <PyUnicode_FromStringAndSize@plt>
    17c0:	mov	w0, #0x14                  	// #20
    17c4:	b	d90 <PyLong_FromLong@plt>
    17c8:	sub	sp, sp, #0xb0
    17cc:	stp	x29, x30, [sp, #96]
    17d0:	stp	x26, x25, [sp, #112]
    17d4:	stp	x24, x23, [sp, #128]
    17d8:	stp	x22, x21, [sp, #144]
    17dc:	stp	x20, x19, [sp, #160]
    17e0:	add	x29, sp, #0x60
    17e4:	mov	x19, x2
    17e8:	mov	x0, x1
    17ec:	cbz	x3, 1824 <PyInit__sha1@@Base+0x930>
    17f0:	ldr	x20, [x3, #16]
    17f4:	adrp	x4, 12000 <PyInit__sha1@@Base+0x1110c>
    17f8:	add	x8, sp, #0x8
    17fc:	add	x4, x4, #0x420
    1800:	mov	w6, #0x1                   	// #1
    1804:	mov	x1, x19
    1808:	mov	x2, xzr
    180c:	mov	w5, wzr
    1810:	mov	w7, wzr
    1814:	str	x8, [sp]
    1818:	bl	d50 <_PyArg_UnpackKeywords@plt>
    181c:	cbnz	x0, 1834 <PyInit__sha1@@Base+0x940>
    1820:	b	19e0 <PyInit__sha1@@Base+0xaec>
    1824:	mov	x20, xzr
    1828:	cbz	x0, 17f4 <PyInit__sha1@@Base+0x900>
    182c:	cmp	x19, #0x2
    1830:	b.cs	17f4 <PyInit__sha1@@Base+0x900>  // b.hs, b.nlast
    1834:	cmn	x20, x19
    1838:	b.eq	189c <PyInit__sha1@@Base+0x9a8>  // b.none
    183c:	ldr	x0, [x0]
    1840:	cbz	x0, 189c <PyInit__sha1@@Base+0x9a8>
    1844:	ldr	x8, [x0, #8]
    1848:	ldrb	w9, [x8, #171]
    184c:	tbnz	w9, #4, 19a4 <PyInit__sha1@@Base+0xab0>
    1850:	ldr	x8, [x8, #160]
    1854:	cbz	x8, 19c8 <PyInit__sha1@@Base+0xad4>
    1858:	ldr	x8, [x8]
    185c:	cbz	x8, 19c8 <PyInit__sha1@@Base+0xad4>
    1860:	add	x1, sp, #0x10
    1864:	mov	w2, wzr
    1868:	bl	dd0 <PyObject_GetBuffer@plt>
    186c:	cmn	w0, #0x1
    1870:	b.eq	19e0 <PyInit__sha1@@Base+0xaec>  // b.none
    1874:	ldr	w8, [sp, #52]
    1878:	cmp	w8, #0x2
    187c:	b.lt	1a10 <PyInit__sha1@@Base+0xb1c>  // b.tstop
    1880:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    1884:	ldr	x8, [x8, #4024]
    1888:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    188c:	add	x1, x1, #0xacb
    1890:	ldr	x0, [x8]
    1894:	bl	d60 <PyErr_SetString@plt>
    1898:	b	18f0 <PyInit__sha1@@Base+0x9fc>
    189c:	mov	w21, wzr
    18a0:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
    18a4:	add	x0, x0, #0x98
    18a8:	bl	de0 <_PyObject_New@plt>
    18ac:	cbz	x0, 18ec <PyInit__sha1@@Base+0x9f8>
    18b0:	adrp	x8, 1000 <PyInit__sha1@@Base+0x10c>
    18b4:	adrp	x9, 1000 <PyInit__sha1@@Base+0x10c>
    18b8:	ldr	q0, [x8, #2608]
    18bc:	ldr	d1, [x9, #2624]
    18c0:	mov	x20, x0
    18c4:	str	xzr, [x20, #16]!
    18c8:	mov	x19, x0
    18cc:	stur	q0, [x20, #8]
    18d0:	str	d1, [x20, #24]
    18d4:	bl	db0 <PyErr_Occurred@plt>
    18d8:	cbz	x0, 18fc <PyInit__sha1@@Base+0xa08>
    18dc:	ldr	x8, [x19]
    18e0:	subs	x8, x8, #0x1
    18e4:	str	x8, [x19]
    18e8:	b.eq	19b8 <PyInit__sha1@@Base+0xac4>  // b.none
    18ec:	cbz	w21, 19e0 <PyInit__sha1@@Base+0xaec>
    18f0:	add	x0, sp, #0x10
    18f4:	bl	d10 <PyBuffer_Release@plt>
    18f8:	b	19e0 <PyInit__sha1@@Base+0xaec>
    18fc:	cbz	w21, 19e4 <PyInit__sha1@@Base+0xaf0>
    1900:	ldr	x25, [sp, #32]
    1904:	cmp	x25, #0x1
    1908:	b.lt	1a04 <PyInit__sha1@@Base+0xb10>  // b.tstop
    190c:	ldr	x21, [sp, #16]
    1910:	add	x22, x19, #0x30
    1914:	mov	w24, #0x40                  	// #64
    1918:	b	1944 <PyInit__sha1@@Base+0xa50>
    191c:	mov	x0, x20
    1920:	mov	x1, x21
    1924:	bl	137c <PyInit__sha1@@Base+0x488>
    1928:	ldr	x8, [x20]
    192c:	add	x21, x21, #0x40
    1930:	mov	x25, x23
    1934:	add	x8, x8, #0x200
    1938:	str	x8, [x20]
    193c:	cmp	x25, #0x0
    1940:	b.le	1a04 <PyInit__sha1@@Base+0xb10>
    1944:	ldr	w26, [x20, #28]
    1948:	subs	x23, x25, #0x40
    194c:	b.lt	1954 <PyInit__sha1@@Base+0xa60>  // b.tstop
    1950:	cbz	w26, 191c <PyInit__sha1@@Base+0xa28>
    1954:	sub	w8, w24, w26
    1958:	cmp	x25, x8
    195c:	add	x9, x20, x26
    1960:	csel	x23, x8, x25, gt
    1964:	add	x0, x9, #0x20
    1968:	mov	x1, x21
    196c:	mov	x2, x23
    1970:	bl	d00 <memcpy@plt>
    1974:	add	w8, w26, w23
    1978:	add	x21, x21, x23
    197c:	cmp	w8, #0x40
    1980:	sub	x25, x25, x23
    1984:	str	w8, [x20, #28]
    1988:	b.ne	193c <PyInit__sha1@@Base+0xa48>  // b.any
    198c:	mov	x0, x20
    1990:	mov	x1, x22
    1994:	bl	137c <PyInit__sha1@@Base+0x488>
    1998:	ldr	x8, [x20]
    199c:	str	wzr, [x20, #28]
    19a0:	b	1934 <PyInit__sha1@@Base+0xa40>
    19a4:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    19a8:	ldr	x8, [x8, #4032]
    19ac:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    19b0:	add	x1, x1, #0xa72
    19b4:	b	19d8 <PyInit__sha1@@Base+0xae4>
    19b8:	mov	x0, x19
    19bc:	bl	d40 <_Py_Dealloc@plt>
    19c0:	cbz	w21, 19e0 <PyInit__sha1@@Base+0xaec>
    19c4:	b	18f0 <PyInit__sha1@@Base+0x9fc>
    19c8:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    19cc:	ldr	x8, [x8, #4032]
    19d0:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    19d4:	add	x1, x1, #0xaa1
    19d8:	ldr	x0, [x8]
    19dc:	bl	d60 <PyErr_SetString@plt>
    19e0:	mov	x19, xzr
    19e4:	mov	x0, x19
    19e8:	ldp	x20, x19, [sp, #160]
    19ec:	ldp	x22, x21, [sp, #144]
    19f0:	ldp	x24, x23, [sp, #128]
    19f4:	ldp	x26, x25, [sp, #112]
    19f8:	ldp	x29, x30, [sp, #96]
    19fc:	add	sp, sp, #0xb0
    1a00:	ret
    1a04:	add	x0, sp, #0x10
    1a08:	bl	d10 <PyBuffer_Release@plt>
    1a0c:	b	19e4 <PyInit__sha1@@Base+0xaf0>
    1a10:	mov	w21, #0x1                   	// #1
    1a14:	b	18a0 <PyInit__sha1@@Base+0x9ac>

Disassembly of section .fini:

0000000000001a18 <.fini>:
    1a18:	stp	x29, x30, [sp, #-16]!
    1a1c:	mov	x29, sp
    1a20:	ldp	x29, x30, [sp], #16
    1a24:	ret
