
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400918 <_init>:
  400918:	stp	x29, x30, [sp, #-16]!
  40091c:	mov	x29, sp
  400920:	bl	400ab0 <call_weak_fn>
  400924:	ldp	x29, x30, [sp], #16
  400928:	ret

Disassembly of section .plt:

0000000000400930 <__libc_start_main@plt-0x20>:
  400930:	stp	x16, x30, [sp, #-16]!
  400934:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400938:	ldr	x17, [x16, #3952]
  40093c:	add	x16, x16, #0xf70
  400940:	br	x17
  400944:	nop
  400948:	nop
  40094c:	nop

0000000000400950 <__libc_start_main@plt>:
  400950:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400954:	ldr	x17, [x16, #3960]
  400958:	add	x16, x16, #0xf78
  40095c:	br	x17

0000000000400960 <abort@plt>:
  400960:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400964:	ldr	x17, [x16, #3968]
  400968:	add	x16, x16, #0xf80
  40096c:	br	x17

0000000000400970 <__gmon_start__@plt>:
  400970:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400974:	ldr	x17, [x16, #3976]
  400978:	add	x16, x16, #0xf88
  40097c:	br	x17

0000000000400980 <log_setup_generator@plt>:
  400980:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400984:	ldr	x17, [x16, #3984]
  400988:	add	x16, x16, #0xf90
  40098c:	br	x17

0000000000400990 <log_get_max_level_realm@plt>:
  400990:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400994:	ldr	x17, [x16, #3992]
  400998:	add	x16, x16, #0xf98
  40099c:	br	x17

00000000004009a0 <log_internal_realm@plt>:
  4009a0:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  4009a4:	ldr	x17, [x16, #4000]
  4009a8:	add	x16, x16, #0xfa0
  4009ac:	br	x17

00000000004009b0 <abs@plt>:
  4009b0:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  4009b4:	ldr	x17, [x16, #4008]
  4009b8:	add	x16, x16, #0xfa8
  4009bc:	br	x17

00000000004009c0 <in_initrd@plt>:
  4009c0:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  4009c4:	ldr	x17, [x16, #4016]
  4009c8:	add	x16, x16, #0xfb0
  4009cc:	br	x17

00000000004009d0 <detect_container@plt>:
  4009d0:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  4009d4:	ldr	x17, [x16, #4024]
  4009d8:	add	x16, x16, #0xfb8
  4009dc:	br	x17

00000000004009e0 <is_efi_boot@plt>:
  4009e0:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  4009e4:	ldr	x17, [x16, #4032]
  4009e8:	add	x16, x16, #0xfc0
  4009ec:	br	x17

00000000004009f0 <access@plt>:
  4009f0:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  4009f4:	ldr	x17, [x16, #4040]
  4009f8:	add	x16, x16, #0xfc8
  4009fc:	br	x17

0000000000400a00 <__errno_location@plt>:
  400a00:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400a04:	ldr	x17, [x16, #4048]
  400a08:	add	x16, x16, #0xfd0
  400a0c:	br	x17

0000000000400a10 <strlen@plt>:
  400a10:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400a14:	ldr	x17, [x16, #4056]
  400a18:	add	x16, x16, #0xfd8
  400a1c:	br	x17

0000000000400a20 <log_assert_failed_realm@plt>:
  400a20:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400a24:	ldr	x17, [x16, #4064]
  400a28:	add	x16, x16, #0xfe0
  400a2c:	br	x17

0000000000400a30 <stpcpy@plt>:
  400a30:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400a34:	ldr	x17, [x16, #4072]
  400a38:	add	x16, x16, #0xfe8
  400a3c:	br	x17

0000000000400a40 <mkdir_parents@plt>:
  400a40:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400a44:	ldr	x17, [x16, #4080]
  400a48:	add	x16, x16, #0xff0
  400a4c:	br	x17

0000000000400a50 <symlink@plt>:
  400a50:	adrp	x16, 41f000 <__FRAME_END__+0x1d880>
  400a54:	ldr	x17, [x16, #4088]
  400a58:	add	x16, x16, #0xff8
  400a5c:	br	x17

Disassembly of section .text:

0000000000400a60 <_start>:
  400a60:	mov	x29, #0x0                   	// #0
  400a64:	mov	x30, #0x0                   	// #0
  400a68:	mov	x5, x0
  400a6c:	ldr	x1, [sp]
  400a70:	add	x2, sp, #0x8
  400a74:	mov	x6, sp
  400a78:	movz	x0, #0x0, lsl #48
  400a7c:	movk	x0, #0x0, lsl #32
  400a80:	movk	x0, #0x40, lsl #16
  400a84:	movk	x0, #0xc28
  400a88:	movz	x3, #0x0, lsl #48
  400a8c:	movk	x3, #0x0, lsl #32
  400a90:	movk	x3, #0x40, lsl #16
  400a94:	movk	x3, #0x1360
  400a98:	movz	x4, #0x0, lsl #48
  400a9c:	movk	x4, #0x0, lsl #32
  400aa0:	movk	x4, #0x40, lsl #16
  400aa4:	movk	x4, #0x13e0
  400aa8:	bl	400950 <__libc_start_main@plt>
  400aac:	bl	400960 <abort@plt>

0000000000400ab0 <call_weak_fn>:
  400ab0:	adrp	x0, 41f000 <__FRAME_END__+0x1d880>
  400ab4:	ldr	x0, [x0, #3928]
  400ab8:	cbz	x0, 400ac0 <call_weak_fn+0x10>
  400abc:	b	400970 <__gmon_start__@plt>
  400ac0:	ret

0000000000400ac4 <deregister_tm_clones>:
  400ac4:	stp	x29, x30, [sp, #-32]!
  400ac8:	mov	x29, sp
  400acc:	adrp	x0, 420000 <arg_dest>
  400ad0:	add	x0, x0, #0x0
  400ad4:	str	x0, [sp, #24]
  400ad8:	ldr	x0, [sp, #24]
  400adc:	str	x0, [sp, #24]
  400ae0:	ldr	x1, [sp, #24]
  400ae4:	adrp	x0, 420000 <arg_dest>
  400ae8:	add	x0, x0, #0x0
  400aec:	cmp	x1, x0
  400af0:	b.eq	400b2c <deregister_tm_clones+0x68>  // b.none
  400af4:	adrp	x0, 401000 <main+0x3d8>
  400af8:	add	x0, x0, #0x3f8
  400afc:	ldr	x0, [x0]
  400b00:	str	x0, [sp, #16]
  400b04:	ldr	x0, [sp, #16]
  400b08:	str	x0, [sp, #16]
  400b0c:	ldr	x0, [sp, #16]
  400b10:	cmp	x0, #0x0
  400b14:	b.eq	400b30 <deregister_tm_clones+0x6c>  // b.none
  400b18:	ldr	x1, [sp, #16]
  400b1c:	adrp	x0, 420000 <arg_dest>
  400b20:	add	x0, x0, #0x0
  400b24:	blr	x1
  400b28:	b	400b30 <deregister_tm_clones+0x6c>
  400b2c:	nop
  400b30:	ldp	x29, x30, [sp], #32
  400b34:	ret

0000000000400b38 <register_tm_clones>:
  400b38:	stp	x29, x30, [sp, #-48]!
  400b3c:	mov	x29, sp
  400b40:	adrp	x0, 420000 <arg_dest>
  400b44:	add	x0, x0, #0x0
  400b48:	str	x0, [sp, #40]
  400b4c:	ldr	x0, [sp, #40]
  400b50:	str	x0, [sp, #40]
  400b54:	ldr	x1, [sp, #40]
  400b58:	adrp	x0, 420000 <arg_dest>
  400b5c:	add	x0, x0, #0x0
  400b60:	sub	x0, x1, x0
  400b64:	asr	x0, x0, #3
  400b68:	lsr	x1, x0, #63
  400b6c:	add	x0, x1, x0
  400b70:	asr	x0, x0, #1
  400b74:	str	x0, [sp, #32]
  400b78:	ldr	x0, [sp, #32]
  400b7c:	cmp	x0, #0x0
  400b80:	b.eq	400bc0 <register_tm_clones+0x88>  // b.none
  400b84:	adrp	x0, 401000 <main+0x3d8>
  400b88:	add	x0, x0, #0x400
  400b8c:	ldr	x0, [x0]
  400b90:	str	x0, [sp, #24]
  400b94:	ldr	x0, [sp, #24]
  400b98:	str	x0, [sp, #24]
  400b9c:	ldr	x0, [sp, #24]
  400ba0:	cmp	x0, #0x0
  400ba4:	b.eq	400bc4 <register_tm_clones+0x8c>  // b.none
  400ba8:	ldr	x2, [sp, #24]
  400bac:	ldr	x1, [sp, #32]
  400bb0:	adrp	x0, 420000 <arg_dest>
  400bb4:	add	x0, x0, #0x0
  400bb8:	blr	x2
  400bbc:	b	400bc4 <register_tm_clones+0x8c>
  400bc0:	nop
  400bc4:	ldp	x29, x30, [sp], #48
  400bc8:	ret

0000000000400bcc <__do_global_dtors_aux>:
  400bcc:	stp	x29, x30, [sp, #-16]!
  400bd0:	mov	x29, sp
  400bd4:	adrp	x0, 420000 <arg_dest>
  400bd8:	add	x0, x0, #0x8
  400bdc:	ldrb	w0, [x0]
  400be0:	and	x0, x0, #0xff
  400be4:	cmp	x0, #0x0
  400be8:	b.ne	400c04 <__do_global_dtors_aux+0x38>  // b.any
  400bec:	bl	400ac4 <deregister_tm_clones>
  400bf0:	adrp	x0, 420000 <arg_dest>
  400bf4:	add	x0, x0, #0x8
  400bf8:	mov	w1, #0x1                   	// #1
  400bfc:	strb	w1, [x0]
  400c00:	b	400c08 <__do_global_dtors_aux+0x3c>
  400c04:	nop
  400c08:	ldp	x29, x30, [sp], #16
  400c0c:	ret

0000000000400c10 <frame_dummy>:
  400c10:	stp	x29, x30, [sp, #-16]!
  400c14:	mov	x29, sp
  400c18:	bl	400b38 <register_tm_clones>
  400c1c:	nop
  400c20:	ldp	x29, x30, [sp], #16
  400c24:	ret

0000000000400c28 <main>:
  400c28:	stp	x29, x30, [sp, #-32]!
  400c2c:	str	x28, [sp, #16]
  400c30:	mov	x29, sp
  400c34:	sub	sp, sp, #0x110
  400c38:	adrp	x8, 401000 <main+0x3d8>
  400c3c:	add	x8, x8, #0x408
  400c40:	add	x8, x8, #0x3
  400c44:	adrp	x9, 401000 <main+0x3d8>
  400c48:	add	x9, x9, #0x42b
  400c4c:	stur	wzr, [x29, #-4]
  400c50:	stur	w0, [x29, #-8]
  400c54:	stur	x1, [x29, #-16]
  400c58:	stur	x8, [x29, #-216]
  400c5c:	stur	x9, [x29, #-224]
  400c60:	bl	400980 <log_setup_generator@plt>
  400c64:	ldur	w10, [x29, #-8]
  400c68:	cmp	w10, #0x1
  400c6c:	b.le	400cfc <main+0xd4>
  400c70:	ldur	w8, [x29, #-8]
  400c74:	cmp	w8, #0x4
  400c78:	b.eq	400cfc <main+0xd4>  // b.none
  400c7c:	mov	w8, #0x3                   	// #3
  400c80:	stur	w8, [x29, #-28]
  400c84:	stur	wzr, [x29, #-32]
  400c88:	stur	wzr, [x29, #-36]
  400c8c:	ldur	w0, [x29, #-36]
  400c90:	bl	400990 <log_get_max_level_realm@plt>
  400c94:	ldur	w8, [x29, #-28]
  400c98:	and	w8, w8, #0x7
  400c9c:	cmp	w0, w8
  400ca0:	b.lt	400cd4 <main+0xac>  // b.tstop
  400ca4:	ldur	w8, [x29, #-36]
  400ca8:	ldur	w9, [x29, #-28]
  400cac:	orr	w0, w9, w8, lsl #10
  400cb0:	ldur	w1, [x29, #-32]
  400cb4:	ldur	x2, [x29, #-216]
  400cb8:	mov	w3, #0x1c                  	// #28
  400cbc:	ldur	x4, [x29, #-224]
  400cc0:	adrp	x5, 401000 <main+0x3d8>
  400cc4:	add	x5, x5, #0x430
  400cc8:	bl	4009a0 <log_internal_realm@plt>
  400ccc:	stur	w0, [x29, #-228]
  400cd0:	b	400ce8 <main+0xc0>
  400cd4:	ldur	w0, [x29, #-32]
  400cd8:	bl	4009b0 <abs@plt>
  400cdc:	mov	w8, wzr
  400ce0:	subs	w8, w8, w0, uxtb
  400ce4:	stur	w8, [x29, #-228]
  400ce8:	ldur	w8, [x29, #-228]
  400cec:	stur	w8, [x29, #-40]
  400cf0:	mov	w8, #0x1                   	// #1
  400cf4:	stur	w8, [x29, #-4]
  400cf8:	b	4012e4 <main+0x6bc>
  400cfc:	ldur	w8, [x29, #-8]
  400d00:	cmp	w8, #0x1
  400d04:	b.le	400d1c <main+0xf4>
  400d08:	ldur	x8, [x29, #-16]
  400d0c:	ldr	x8, [x8, #16]
  400d10:	adrp	x9, 420000 <arg_dest>
  400d14:	add	x9, x9, #0x0
  400d18:	str	x8, [x9]
  400d1c:	bl	4009c0 <in_initrd@plt>
  400d20:	tst	w0, #0x1
  400d24:	cset	w8, le
  400d28:	tbnz	w8, #0, 400da8 <main+0x180>
  400d2c:	mov	w8, #0x7                   	// #7
  400d30:	stur	w8, [x29, #-44]
  400d34:	stur	wzr, [x29, #-48]
  400d38:	stur	wzr, [x29, #-52]
  400d3c:	ldur	w0, [x29, #-52]
  400d40:	bl	400990 <log_get_max_level_realm@plt>
  400d44:	ldur	w8, [x29, #-44]
  400d48:	and	w8, w8, #0x7
  400d4c:	cmp	w0, w8
  400d50:	b.lt	400d84 <main+0x15c>  // b.tstop
  400d54:	ldur	w8, [x29, #-52]
  400d58:	ldur	w9, [x29, #-44]
  400d5c:	orr	w0, w9, w8, lsl #10
  400d60:	ldur	w1, [x29, #-48]
  400d64:	ldur	x2, [x29, #-216]
  400d68:	mov	w3, #0x24                  	// #36
  400d6c:	ldur	x4, [x29, #-224]
  400d70:	adrp	x5, 401000 <main+0x3d8>
  400d74:	add	x5, x5, #0x45a
  400d78:	bl	4009a0 <log_internal_realm@plt>
  400d7c:	stur	w0, [x29, #-232]
  400d80:	b	400d98 <main+0x170>
  400d84:	ldur	w0, [x29, #-48]
  400d88:	bl	4009b0 <abs@plt>
  400d8c:	mov	w8, wzr
  400d90:	subs	w8, w8, w0, uxtb
  400d94:	stur	w8, [x29, #-232]
  400d98:	ldur	w8, [x29, #-232]
  400d9c:	stur	w8, [x29, #-56]
  400da0:	stur	wzr, [x29, #-4]
  400da4:	b	4012e4 <main+0x6bc>
  400da8:	bl	4009d0 <detect_container@plt>
  400dac:	cmp	w0, #0x0
  400db0:	cset	w8, le
  400db4:	tbnz	w8, #0, 400e34 <main+0x20c>
  400db8:	mov	w8, #0x7                   	// #7
  400dbc:	stur	w8, [x29, #-60]
  400dc0:	stur	wzr, [x29, #-64]
  400dc4:	stur	wzr, [x29, #-68]
  400dc8:	ldur	w0, [x29, #-68]
  400dcc:	bl	400990 <log_get_max_level_realm@plt>
  400dd0:	ldur	w8, [x29, #-60]
  400dd4:	and	w8, w8, #0x7
  400dd8:	cmp	w0, w8
  400ddc:	b.lt	400e10 <main+0x1e8>  // b.tstop
  400de0:	ldur	w8, [x29, #-68]
  400de4:	ldur	w9, [x29, #-60]
  400de8:	orr	w0, w9, w8, lsl #10
  400dec:	ldur	w1, [x29, #-64]
  400df0:	ldur	x2, [x29, #-216]
  400df4:	mov	w3, #0x29                  	// #41
  400df8:	ldur	x4, [x29, #-224]
  400dfc:	adrp	x5, 401000 <main+0x3d8>
  400e00:	add	x5, x5, #0x485
  400e04:	bl	4009a0 <log_internal_realm@plt>
  400e08:	stur	w0, [x29, #-236]
  400e0c:	b	400e24 <main+0x1fc>
  400e10:	ldur	w0, [x29, #-64]
  400e14:	bl	4009b0 <abs@plt>
  400e18:	mov	w8, wzr
  400e1c:	subs	w8, w8, w0, uxtb
  400e20:	stur	w8, [x29, #-236]
  400e24:	ldur	w8, [x29, #-236]
  400e28:	stur	w8, [x29, #-72]
  400e2c:	stur	wzr, [x29, #-4]
  400e30:	b	4012e4 <main+0x6bc>
  400e34:	bl	4009e0 <is_efi_boot@plt>
  400e38:	tbnz	w0, #0, 400eb8 <main+0x290>
  400e3c:	mov	w8, #0x7                   	// #7
  400e40:	stur	w8, [x29, #-76]
  400e44:	stur	wzr, [x29, #-80]
  400e48:	stur	wzr, [x29, #-84]
  400e4c:	ldur	w0, [x29, #-84]
  400e50:	bl	400990 <log_get_max_level_realm@plt>
  400e54:	ldur	w8, [x29, #-76]
  400e58:	and	w8, w8, #0x7
  400e5c:	cmp	w0, w8
  400e60:	b.lt	400e94 <main+0x26c>  // b.tstop
  400e64:	ldur	w8, [x29, #-84]
  400e68:	ldur	w9, [x29, #-76]
  400e6c:	orr	w0, w9, w8, lsl #10
  400e70:	ldur	w1, [x29, #-80]
  400e74:	ldur	x2, [x29, #-216]
  400e78:	mov	w3, #0x2e                  	// #46
  400e7c:	ldur	x4, [x29, #-224]
  400e80:	adrp	x5, 401000 <main+0x3d8>
  400e84:	add	x5, x5, #0x4b1
  400e88:	bl	4009a0 <log_internal_realm@plt>
  400e8c:	stur	w0, [x29, #-240]
  400e90:	b	400ea8 <main+0x280>
  400e94:	ldur	w0, [x29, #-80]
  400e98:	bl	4009b0 <abs@plt>
  400e9c:	mov	w8, wzr
  400ea0:	subs	w8, w8, w0, uxtb
  400ea4:	stur	w8, [x29, #-240]
  400ea8:	ldur	w8, [x29, #-240]
  400eac:	stur	w8, [x29, #-88]
  400eb0:	stur	wzr, [x29, #-4]
  400eb4:	b	4012e4 <main+0x6bc>
  400eb8:	adrp	x0, 401000 <main+0x3d8>
  400ebc:	add	x0, x0, #0x4d6
  400ec0:	mov	w8, wzr
  400ec4:	mov	w1, w8
  400ec8:	bl	4009f0 <access@plt>
  400ecc:	cmp	w0, #0x0
  400ed0:	cset	w8, ge  // ge = tcont
  400ed4:	tbnz	w8, #0, 400ff4 <main+0x3cc>
  400ed8:	bl	400a00 <__errno_location@plt>
  400edc:	ldr	w8, [x0]
  400ee0:	cmp	w8, #0x2
  400ee4:	b.ne	400f6c <main+0x344>  // b.any
  400ee8:	mov	w8, #0x7                   	// #7
  400eec:	stur	w8, [x29, #-92]
  400ef0:	bl	400a00 <__errno_location@plt>
  400ef4:	ldr	w8, [x0]
  400ef8:	stur	w8, [x29, #-96]
  400efc:	stur	wzr, [x29, #-100]
  400f00:	ldur	w0, [x29, #-100]
  400f04:	bl	400990 <log_get_max_level_realm@plt>
  400f08:	ldur	w8, [x29, #-92]
  400f0c:	and	w8, w8, #0x7
  400f10:	cmp	w0, w8
  400f14:	b.lt	400f48 <main+0x320>  // b.tstop
  400f18:	ldur	w8, [x29, #-100]
  400f1c:	ldur	w9, [x29, #-92]
  400f20:	orr	w0, w9, w8, lsl #10
  400f24:	ldur	w1, [x29, #-96]
  400f28:	ldur	x2, [x29, #-216]
  400f2c:	mov	w3, #0x35                  	// #53
  400f30:	ldur	x4, [x29, #-224]
  400f34:	adrp	x5, 401000 <main+0x3d8>
  400f38:	add	x5, x5, #0x529
  400f3c:	bl	4009a0 <log_internal_realm@plt>
  400f40:	stur	w0, [x29, #-244]
  400f44:	b	400f5c <main+0x334>
  400f48:	ldur	w0, [x29, #-96]
  400f4c:	bl	4009b0 <abs@plt>
  400f50:	mov	w8, wzr
  400f54:	subs	w8, w8, w0, uxtb
  400f58:	stur	w8, [x29, #-244]
  400f5c:	ldur	w8, [x29, #-244]
  400f60:	stur	w8, [x29, #-104]
  400f64:	stur	wzr, [x29, #-4]
  400f68:	b	4012e4 <main+0x6bc>
  400f6c:	mov	w8, #0x3                   	// #3
  400f70:	stur	w8, [x29, #-108]
  400f74:	bl	400a00 <__errno_location@plt>
  400f78:	ldr	w8, [x0]
  400f7c:	stur	w8, [x29, #-112]
  400f80:	stur	wzr, [x29, #-116]
  400f84:	ldur	w0, [x29, #-116]
  400f88:	bl	400990 <log_get_max_level_realm@plt>
  400f8c:	ldur	w8, [x29, #-108]
  400f90:	and	w8, w8, #0x7
  400f94:	cmp	w0, w8
  400f98:	b.lt	400fcc <main+0x3a4>  // b.tstop
  400f9c:	ldur	w8, [x29, #-116]
  400fa0:	ldur	w9, [x29, #-108]
  400fa4:	orr	w0, w9, w8, lsl #10
  400fa8:	ldur	w1, [x29, #-112]
  400fac:	ldur	x2, [x29, #-216]
  400fb0:	mov	w3, #0x39                  	// #57
  400fb4:	ldur	x4, [x29, #-224]
  400fb8:	adrp	x5, 401000 <main+0x3d8>
  400fbc:	add	x5, x5, #0x566
  400fc0:	bl	4009a0 <log_internal_realm@plt>
  400fc4:	stur	w0, [x29, #-248]
  400fc8:	b	400fe0 <main+0x3b8>
  400fcc:	ldur	w0, [x29, #-112]
  400fd0:	bl	4009b0 <abs@plt>
  400fd4:	mov	w8, wzr
  400fd8:	subs	w8, w8, w0, uxtb
  400fdc:	stur	w8, [x29, #-248]
  400fe0:	ldur	w8, [x29, #-248]
  400fe4:	stur	w8, [x29, #-120]
  400fe8:	mov	w8, #0x1                   	// #1
  400fec:	stur	w8, [x29, #-4]
  400ff0:	b	4012e4 <main+0x6bc>
  400ff4:	adrp	x8, 420000 <arg_dest>
  400ff8:	add	x8, x8, #0x0
  400ffc:	ldr	x8, [x8]
  401000:	sub	x9, x29, #0x88
  401004:	stur	x8, [x29, #-136]
  401008:	adrp	x8, 401000 <main+0x3d8>
  40100c:	add	x8, x8, #0x5a5
  401010:	str	x8, [x9, #8]
  401014:	stur	xzr, [x29, #-160]
  401018:	stur	xzr, [x29, #-168]
  40101c:	ldur	x8, [x29, #-168]
  401020:	mov	w9, #0x0                   	// #0
  401024:	cmp	x8, #0x2
  401028:	stur	w9, [x29, #-252]
  40102c:	b.cs	401054 <main+0x42c>  // b.hs, b.nlast
  401030:	ldur	x8, [x29, #-168]
  401034:	mov	x9, #0x8                   	// #8
  401038:	mul	x8, x9, x8
  40103c:	sub	x9, x29, #0x88
  401040:	add	x8, x9, x8
  401044:	ldr	x8, [x8]
  401048:	cmp	x8, #0x0
  40104c:	cset	w10, ne  // ne = any
  401050:	stur	w10, [x29, #-252]
  401054:	ldur	w8, [x29, #-252]
  401058:	tbnz	w8, #0, 401060 <main+0x438>
  40105c:	b	401098 <main+0x470>
  401060:	ldur	x8, [x29, #-168]
  401064:	mov	x9, #0x8                   	// #8
  401068:	mul	x8, x9, x8
  40106c:	sub	x9, x29, #0x88
  401070:	add	x8, x9, x8
  401074:	ldr	x0, [x8]
  401078:	bl	400a10 <strlen@plt>
  40107c:	ldur	x8, [x29, #-160]
  401080:	add	x8, x8, x0
  401084:	stur	x8, [x29, #-160]
  401088:	ldur	x8, [x29, #-168]
  40108c:	add	x8, x8, #0x1
  401090:	stur	x8, [x29, #-168]
  401094:	b	40101c <main+0x3f4>
  401098:	ldur	x8, [x29, #-160]
  40109c:	add	x8, x8, #0x1
  4010a0:	stur	x8, [x29, #-176]
  4010a4:	ldur	x1, [x29, #-176]
  4010a8:	mov	x0, #0x1                   	// #1
  4010ac:	bl	4012f8 <size_multiply_overflow>
  4010b0:	mov	w8, #0x1                   	// #1
  4010b4:	eor	w9, w0, #0x1
  4010b8:	eor	w9, w9, w8
  4010bc:	eor	w9, w9, w8
  4010c0:	eor	w8, w9, w8
  4010c4:	and	w8, w8, #0x1
  4010c8:	mov	w1, w8
  4010cc:	sxtw	x10, w1
  4010d0:	cbz	x10, 4010f8 <main+0x4d0>
  4010d4:	mov	w8, wzr
  4010d8:	mov	w0, w8
  4010dc:	adrp	x1, 401000 <main+0x3d8>
  4010e0:	add	x1, x1, #0x5d4
  4010e4:	ldur	x2, [x29, #-216]
  4010e8:	mov	w3, #0x3f                  	// #63
  4010ec:	adrp	x4, 401000 <main+0x3d8>
  4010f0:	add	x4, x4, #0x5ff
  4010f4:	bl	400a20 <log_assert_failed_realm@plt>
  4010f8:	ldur	x8, [x29, #-176]
  4010fc:	mov	x9, #0x1                   	// #1
  401100:	mul	x8, x9, x8
  401104:	cmp	x8, #0x400, lsl #12
  401108:	cset	w10, ls  // ls = plast
  40110c:	mov	w11, #0x1                   	// #1
  401110:	eor	w10, w10, #0x1
  401114:	eor	w10, w10, w11
  401118:	eor	w10, w10, w11
  40111c:	and	w10, w10, #0x1
  401120:	mov	w0, w10
  401124:	sxtw	x8, w0
  401128:	cbz	x8, 401150 <main+0x528>
  40112c:	mov	w8, wzr
  401130:	mov	w0, w8
  401134:	adrp	x1, 401000 <main+0x3d8>
  401138:	add	x1, x1, #0x616
  40113c:	ldur	x2, [x29, #-216]
  401140:	mov	w3, #0x3f                  	// #63
  401144:	adrp	x4, 401000 <main+0x3d8>
  401148:	add	x4, x4, #0x5ff
  40114c:	bl	400a20 <log_assert_failed_realm@plt>
  401150:	ldur	x8, [x29, #-176]
  401154:	mov	x9, #0x1                   	// #1
  401158:	mul	x8, x9, x8
  40115c:	mul	x8, x8, x9
  401160:	add	x8, x8, #0xf
  401164:	and	x8, x8, #0xfffffffffffffff0
  401168:	mov	x9, sp
  40116c:	subs	x8, x9, x8
  401170:	mov	sp, x8
  401174:	stur	x8, [x29, #-184]
  401178:	ldur	x8, [x29, #-184]
  40117c:	stur	x8, [x29, #-144]
  401180:	stur	x8, [x29, #-152]
  401184:	stur	xzr, [x29, #-168]
  401188:	ldur	x8, [x29, #-168]
  40118c:	mov	w9, #0x0                   	// #0
  401190:	cmp	x8, #0x2
  401194:	stur	w9, [x29, #-256]
  401198:	b.cs	4011c0 <main+0x598>  // b.hs, b.nlast
  40119c:	ldur	x8, [x29, #-168]
  4011a0:	mov	x9, #0x8                   	// #8
  4011a4:	mul	x8, x9, x8
  4011a8:	sub	x9, x29, #0x88
  4011ac:	add	x8, x9, x8
  4011b0:	ldr	x8, [x8]
  4011b4:	cmp	x8, #0x0
  4011b8:	cset	w10, ne  // ne = any
  4011bc:	stur	w10, [x29, #-256]
  4011c0:	ldur	w8, [x29, #-256]
  4011c4:	tbnz	w8, #0, 4011cc <main+0x5a4>
  4011c8:	b	401200 <main+0x5d8>
  4011cc:	ldur	x0, [x29, #-152]
  4011d0:	ldur	x8, [x29, #-168]
  4011d4:	mov	x9, #0x8                   	// #8
  4011d8:	mul	x8, x9, x8
  4011dc:	sub	x9, x29, #0x88
  4011e0:	add	x8, x9, x8
  4011e4:	ldr	x1, [x8]
  4011e8:	bl	400a30 <stpcpy@plt>
  4011ec:	stur	x0, [x29, #-152]
  4011f0:	ldur	x8, [x29, #-168]
  4011f4:	add	x8, x8, #0x1
  4011f8:	stur	x8, [x29, #-168]
  4011fc:	b	401188 <main+0x560>
  401200:	ldur	x8, [x29, #-152]
  401204:	mov	w9, #0x0                   	// #0
  401208:	strb	w9, [x8]
  40120c:	ldur	x8, [x29, #-144]
  401210:	stur	x8, [x29, #-192]
  401214:	ldur	x8, [x29, #-192]
  401218:	stur	x8, [x29, #-24]
  40121c:	ldur	x0, [x29, #-24]
  401220:	mov	w1, #0x1ed                 	// #493
  401224:	bl	400a40 <mkdir_parents@plt>
  401228:	ldur	x1, [x29, #-24]
  40122c:	adrp	x8, 401000 <main+0x3d8>
  401230:	add	x8, x8, #0x635
  401234:	mov	x0, x8
  401238:	bl	400a50 <symlink@plt>
  40123c:	cmp	w0, #0x0
  401240:	cset	w9, ge  // ge = tcont
  401244:	tbnz	w9, #0, 4012e0 <main+0x6b8>
  401248:	mov	w8, #0x3                   	// #3
  40124c:	stur	w8, [x29, #-196]
  401250:	bl	400a00 <__errno_location@plt>
  401254:	ldr	w8, [x0]
  401258:	stur	w8, [x29, #-200]
  40125c:	stur	wzr, [x29, #-204]
  401260:	ldur	w0, [x29, #-204]
  401264:	bl	400990 <log_get_max_level_realm@plt>
  401268:	ldur	w8, [x29, #-196]
  40126c:	and	w8, w8, #0x7
  401270:	cmp	w0, w8
  401274:	b.lt	4012b0 <main+0x688>  // b.tstop
  401278:	ldur	w8, [x29, #-204]
  40127c:	ldur	w9, [x29, #-196]
  401280:	orr	w0, w9, w8, lsl #10
  401284:	ldur	w1, [x29, #-200]
  401288:	ldur	x6, [x29, #-24]
  40128c:	ldur	x2, [x29, #-216]
  401290:	mov	w3, #0x42                  	// #66
  401294:	ldur	x4, [x29, #-224]
  401298:	adrp	x5, 401000 <main+0x3d8>
  40129c:	add	x5, x5, #0x664
  4012a0:	bl	4009a0 <log_internal_realm@plt>
  4012a4:	sub	x8, x29, #0x4
  4012a8:	stur	w0, [x8, #-256]
  4012ac:	b	4012c8 <main+0x6a0>
  4012b0:	ldur	w0, [x29, #-200]
  4012b4:	bl	4009b0 <abs@plt>
  4012b8:	mov	w8, wzr
  4012bc:	subs	w8, w8, w0, uxtb
  4012c0:	sub	x9, x29, #0x4
  4012c4:	stur	w8, [x9, #-256]
  4012c8:	sub	x8, x29, #0x4
  4012cc:	ldur	w8, [x8, #-256]
  4012d0:	stur	w8, [x29, #-208]
  4012d4:	mov	w8, #0x1                   	// #1
  4012d8:	stur	w8, [x29, #-4]
  4012dc:	b	4012e4 <main+0x6bc>
  4012e0:	stur	wzr, [x29, #-4]
  4012e4:	ldur	w0, [x29, #-4]
  4012e8:	mov	sp, x29
  4012ec:	ldr	x28, [sp, #16]
  4012f0:	ldp	x29, x30, [sp], #32
  4012f4:	ret

00000000004012f8 <size_multiply_overflow>:
  4012f8:	sub	sp, sp, #0x20
  4012fc:	str	x0, [sp, #24]
  401300:	str	x1, [sp, #16]
  401304:	ldr	x8, [sp, #16]
  401308:	mov	w9, #0x0                   	// #0
  40130c:	str	w9, [sp, #12]
  401310:	cbz	x8, 401330 <size_multiply_overflow+0x38>
  401314:	ldr	x8, [sp, #24]
  401318:	ldr	x9, [sp, #16]
  40131c:	mov	x10, #0xffffffffffffffff    	// #-1
  401320:	udiv	x9, x10, x9
  401324:	cmp	x8, x9
  401328:	cset	w11, hi  // hi = pmore
  40132c:	str	w11, [sp, #12]
  401330:	ldr	w8, [sp, #12]
  401334:	mov	w9, #0x1                   	// #1
  401338:	eor	w8, w8, #0x1
  40133c:	eor	w8, w8, w9
  401340:	and	w8, w8, #0x1
  401344:	mov	w0, w8
  401348:	sxtw	x10, w0
  40134c:	cmp	x10, #0x0
  401350:	cset	w8, ne  // ne = any
  401354:	and	w0, w8, #0x1
  401358:	add	sp, sp, #0x20
  40135c:	ret

0000000000401360 <__libc_csu_init>:
  401360:	stp	x29, x30, [sp, #-64]!
  401364:	mov	x29, sp
  401368:	stp	x19, x20, [sp, #16]
  40136c:	adrp	x20, 41f000 <__FRAME_END__+0x1d880>
  401370:	add	x20, x20, #0xd30
  401374:	stp	x21, x22, [sp, #32]
  401378:	adrp	x21, 41f000 <__FRAME_END__+0x1d880>
  40137c:	add	x21, x21, #0xd28
  401380:	sub	x20, x20, x21
  401384:	mov	w22, w0
  401388:	stp	x23, x24, [sp, #48]
  40138c:	mov	x23, x1
  401390:	mov	x24, x2
  401394:	bl	400918 <_init>
  401398:	cmp	xzr, x20, asr #3
  40139c:	b.eq	4013c8 <__libc_csu_init+0x68>  // b.none
  4013a0:	asr	x20, x20, #3
  4013a4:	mov	x19, #0x0                   	// #0
  4013a8:	ldr	x3, [x21, x19, lsl #3]
  4013ac:	mov	x2, x24
  4013b0:	add	x19, x19, #0x1
  4013b4:	mov	x1, x23
  4013b8:	mov	w0, w22
  4013bc:	blr	x3
  4013c0:	cmp	x20, x19
  4013c4:	b.ne	4013a8 <__libc_csu_init+0x48>  // b.any
  4013c8:	ldp	x19, x20, [sp, #16]
  4013cc:	ldp	x21, x22, [sp, #32]
  4013d0:	ldp	x23, x24, [sp, #48]
  4013d4:	ldp	x29, x30, [sp], #64
  4013d8:	ret
  4013dc:	nop

00000000004013e0 <__libc_csu_fini>:
  4013e0:	ret

Disassembly of section .fini:

00000000004013e4 <_fini>:
  4013e4:	stp	x29, x30, [sp, #-16]!
  4013e8:	mov	x29, sp
  4013ec:	ldp	x29, x30, [sp], #16
  4013f0:	ret
