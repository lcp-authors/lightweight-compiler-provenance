
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_crypt.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007a0 <.init>:
 7a0:	stp	x29, x30, [sp, #-16]!
 7a4:	mov	x29, sp
 7a8:	bl	890 <PyUnicode_AsUTF8AndSize@plt+0x10>
 7ac:	ldp	x29, x30, [sp], #16
 7b0:	ret

Disassembly of section .plt:

00000000000007c0 <strlen@plt-0x20>:
 7c0:	stp	x16, x30, [sp, #-16]!
 7c4:	adrp	x16, 11000 <PyInit__crypt@@Base+0x10494>
 7c8:	ldr	x17, [x16, #4088]
 7cc:	add	x16, x16, #0xff8
 7d0:	br	x17
 7d4:	nop
 7d8:	nop
 7dc:	nop

00000000000007e0 <strlen@plt>:
 7e0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 7e4:	ldr	x17, [x16]
 7e8:	add	x16, x16, #0x0
 7ec:	br	x17

00000000000007f0 <__cxa_finalize@plt>:
 7f0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #8]
 7f8:	add	x16, x16, #0x8
 7fc:	br	x17

0000000000000800 <PyErr_SetString@plt>:
 800:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 804:	ldr	x17, [x16, #16]
 808:	add	x16, x16, #0x10
 80c:	br	x17

0000000000000810 <memset@plt>:
 810:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 814:	ldr	x17, [x16, #24]
 818:	add	x16, x16, #0x18
 81c:	br	x17

0000000000000820 <_PyArg_BadArgument@plt>:
 820:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 824:	ldr	x17, [x16, #32]
 828:	add	x16, x16, #0x20
 82c:	br	x17

0000000000000830 <__gmon_start__@plt>:
 830:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 834:	ldr	x17, [x16, #40]
 838:	add	x16, x16, #0x28
 83c:	br	x17

0000000000000840 <_PyArg_CheckPositional@plt>:
 840:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 844:	ldr	x17, [x16, #48]
 848:	add	x16, x16, #0x30
 84c:	br	x17

0000000000000850 <Py_BuildValue@plt>:
 850:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 854:	ldr	x17, [x16, #56]
 858:	add	x16, x16, #0x38
 85c:	br	x17

0000000000000860 <PyModule_Create2@plt>:
 860:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 864:	ldr	x17, [x16, #64]
 868:	add	x16, x16, #0x40
 86c:	br	x17

0000000000000870 <crypt_r@plt>:
 870:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 874:	ldr	x17, [x16, #72]
 878:	add	x16, x16, #0x48
 87c:	br	x17

0000000000000880 <PyUnicode_AsUTF8AndSize@plt>:
 880:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 884:	ldr	x17, [x16, #80]
 888:	add	x16, x16, #0x50
 88c:	br	x17

Disassembly of section .text:

0000000000000890 <PyInit__crypt@@Base-0x2dc>:
 890:	adrp	x0, 11000 <PyInit__crypt@@Base+0x10494>
 894:	ldr	x0, [x0, #4056]
 898:	cbz	x0, 8a0 <PyUnicode_AsUTF8AndSize@plt+0x20>
 89c:	b	830 <__gmon_start__@plt>
 8a0:	ret
 8a4:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 8a8:	add	x0, x0, #0x108
 8ac:	adrp	x1, 12000 <PyInit__crypt@@Base+0x11494>
 8b0:	add	x1, x1, #0x108
 8b4:	cmp	x0, x1
 8b8:	b.eq	8e4 <PyUnicode_AsUTF8AndSize@plt+0x64>  // b.none
 8bc:	adrp	x1, 11000 <PyInit__crypt@@Base+0x10494>
 8c0:	ldr	x1, [x1, #4032]
 8c4:	cbz	x1, 8e4 <PyUnicode_AsUTF8AndSize@plt+0x64>
 8c8:	stp	x29, x30, [sp, #-16]!
 8cc:	mov	x29, sp
 8d0:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 8d4:	add	x0, x0, #0x108
 8d8:	blr	x1
 8dc:	ldp	x29, x30, [sp], #16
 8e0:	ret
 8e4:	ret
 8e8:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 8ec:	add	x0, x0, #0x108
 8f0:	adrp	x1, 12000 <PyInit__crypt@@Base+0x11494>
 8f4:	add	x1, x1, #0x108
 8f8:	sub	x0, x0, x1
 8fc:	lsr	x1, x0, #63
 900:	add	x0, x1, x0, asr #3
 904:	cmp	xzr, x0, asr #1
 908:	b.eq	938 <PyUnicode_AsUTF8AndSize@plt+0xb8>  // b.none
 90c:	asr	x1, x0, #1
 910:	adrp	x2, 11000 <PyInit__crypt@@Base+0x10494>
 914:	ldr	x2, [x2, #4064]
 918:	cbz	x2, 938 <PyUnicode_AsUTF8AndSize@plt+0xb8>
 91c:	stp	x29, x30, [sp, #-16]!
 920:	mov	x29, sp
 924:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 928:	add	x0, x0, #0x108
 92c:	blr	x2
 930:	ldp	x29, x30, [sp], #16
 934:	ret
 938:	ret
 93c:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 940:	ldrb	w0, [x0, #264]
 944:	cbnz	w0, 980 <PyUnicode_AsUTF8AndSize@plt+0x100>
 948:	stp	x29, x30, [sp, #-16]!
 94c:	mov	x29, sp
 950:	adrp	x0, 11000 <PyInit__crypt@@Base+0x10494>
 954:	ldr	x0, [x0, #4040]
 958:	cbz	x0, 968 <PyUnicode_AsUTF8AndSize@plt+0xe8>
 95c:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 960:	ldr	x0, [x0, #88]
 964:	bl	7f0 <__cxa_finalize@plt>
 968:	bl	8a4 <PyUnicode_AsUTF8AndSize@plt+0x24>
 96c:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 970:	mov	w1, #0x1                   	// #1
 974:	strb	w1, [x0, #264]
 978:	ldp	x29, x30, [sp], #16
 97c:	ret
 980:	ret
 984:	stp	x29, x30, [sp, #-16]!
 988:	mov	x29, sp
 98c:	bl	8e8 <PyUnicode_AsUTF8AndSize@plt+0x68>
 990:	ldp	x29, x30, [sp], #16
 994:	ret
 998:	sub	sp, sp, #0xd0
 99c:	sub	sp, sp, #0x20, lsl #12
 9a0:	stp	x29, x30, [sp]
 9a4:	mov	x29, sp
 9a8:	stp	x19, x20, [sp, #16]
 9ac:	str	x21, [sp, #32]
 9b0:	mov	x20, x1
 9b4:	mov	x21, x2
 9b8:	add	x19, sp, #0x30
 9bc:	mov	x2, #0xa0                  	// #160
 9c0:	movk	x2, #0x2, lsl #16
 9c4:	mov	w1, #0x0                   	// #0
 9c8:	mov	x0, x19
 9cc:	bl	810 <memset@plt>
 9d0:	mov	x2, x19
 9d4:	mov	x1, x21
 9d8:	mov	x0, x20
 9dc:	bl	870 <crypt_r@plt>
 9e0:	mov	x1, x0
 9e4:	adrp	x0, 0 <strlen@plt-0x7e0>
 9e8:	add	x0, x0, #0xba0
 9ec:	bl	850 <Py_BuildValue@plt>
 9f0:	ldp	x19, x20, [sp, #16]
 9f4:	ldr	x21, [sp, #32]
 9f8:	ldp	x29, x30, [sp]
 9fc:	add	sp, sp, #0xd0
 a00:	add	sp, sp, #0x20, lsl #12
 a04:	ret
 a08:	stp	x29, x30, [sp, #-64]!
 a0c:	mov	x29, sp
 a10:	stp	x19, x20, [sp, #16]
 a14:	str	x21, [sp, #32]
 a18:	mov	x21, x0
 a1c:	mov	x20, x1
 a20:	cmp	x2, #0x2
 a24:	b.ne	ab0 <PyUnicode_AsUTF8AndSize@plt+0x230>  // b.any
 a28:	ldr	x0, [x20]
 a2c:	ldr	x1, [x0, #8]
 a30:	ldr	x1, [x1, #168]
 a34:	tbz	w1, #28, ad4 <PyUnicode_AsUTF8AndSize@plt+0x254>
 a38:	add	x1, sp, #0x38
 a3c:	bl	880 <PyUnicode_AsUTF8AndSize@plt>
 a40:	mov	x19, x0
 a44:	cbz	x0, a9c <PyUnicode_AsUTF8AndSize@plt+0x21c>
 a48:	bl	7e0 <strlen@plt>
 a4c:	ldr	x1, [sp, #56]
 a50:	cmp	x0, x1
 a54:	b.ne	afc <PyUnicode_AsUTF8AndSize@plt+0x27c>  // b.any
 a58:	ldr	x0, [x20, #8]
 a5c:	ldr	x1, [x0, #8]
 a60:	ldr	x1, [x1, #168]
 a64:	tbz	w1, #28, b1c <PyUnicode_AsUTF8AndSize@plt+0x29c>
 a68:	add	x1, sp, #0x30
 a6c:	bl	880 <PyUnicode_AsUTF8AndSize@plt>
 a70:	mov	x20, x0
 a74:	cbz	x0, b64 <PyUnicode_AsUTF8AndSize@plt+0x2e4>
 a78:	bl	7e0 <strlen@plt>
 a7c:	ldr	x1, [sp, #48]
 a80:	cmp	x0, x1
 a84:	b.ne	b44 <PyUnicode_AsUTF8AndSize@plt+0x2c4>  // b.any
 a88:	mov	x2, x20
 a8c:	mov	x1, x19
 a90:	mov	x0, x21
 a94:	bl	998 <PyUnicode_AsUTF8AndSize@plt+0x118>
 a98:	mov	x19, x0
 a9c:	mov	x0, x19
 aa0:	ldp	x19, x20, [sp, #16]
 aa4:	ldr	x21, [sp, #32]
 aa8:	ldp	x29, x30, [sp], #64
 aac:	ret
 ab0:	mov	x1, x2
 ab4:	mov	x3, #0x2                   	// #2
 ab8:	mov	x2, x3
 abc:	adrp	x0, 0 <strlen@plt-0x7e0>
 ac0:	add	x0, x0, #0xba8
 ac4:	bl	840 <_PyArg_CheckPositional@plt>
 ac8:	cbnz	w0, a28 <PyUnicode_AsUTF8AndSize@plt+0x1a8>
 acc:	mov	x19, #0x0                   	// #0
 ad0:	b	a9c <PyUnicode_AsUTF8AndSize@plt+0x21c>
 ad4:	mov	x3, x0
 ad8:	adrp	x2, 0 <strlen@plt-0x7e0>
 adc:	add	x2, x2, #0xbb0
 ae0:	adrp	x1, 0 <strlen@plt-0x7e0>
 ae4:	add	x1, x1, #0xbb8
 ae8:	adrp	x0, 0 <strlen@plt-0x7e0>
 aec:	add	x0, x0, #0xba8
 af0:	bl	820 <_PyArg_BadArgument@plt>
 af4:	mov	x19, #0x0                   	// #0
 af8:	b	a9c <PyUnicode_AsUTF8AndSize@plt+0x21c>
 afc:	adrp	x1, 0 <strlen@plt-0x7e0>
 b00:	add	x1, x1, #0xbc8
 b04:	adrp	x0, 11000 <PyInit__crypt@@Base+0x10494>
 b08:	ldr	x0, [x0, #4048]
 b0c:	ldr	x0, [x0]
 b10:	bl	800 <PyErr_SetString@plt>
 b14:	mov	x19, #0x0                   	// #0
 b18:	b	a9c <PyUnicode_AsUTF8AndSize@plt+0x21c>
 b1c:	mov	x3, x0
 b20:	adrp	x2, 0 <strlen@plt-0x7e0>
 b24:	add	x2, x2, #0xbb0
 b28:	adrp	x1, 0 <strlen@plt-0x7e0>
 b2c:	add	x1, x1, #0xbe0
 b30:	adrp	x0, 0 <strlen@plt-0x7e0>
 b34:	add	x0, x0, #0xba8
 b38:	bl	820 <_PyArg_BadArgument@plt>
 b3c:	mov	x19, #0x0                   	// #0
 b40:	b	a9c <PyUnicode_AsUTF8AndSize@plt+0x21c>
 b44:	adrp	x1, 0 <strlen@plt-0x7e0>
 b48:	add	x1, x1, #0xbc8
 b4c:	adrp	x0, 11000 <PyInit__crypt@@Base+0x10494>
 b50:	ldr	x0, [x0, #4048]
 b54:	ldr	x0, [x0]
 b58:	bl	800 <PyErr_SetString@plt>
 b5c:	mov	x19, #0x0                   	// #0
 b60:	b	a9c <PyUnicode_AsUTF8AndSize@plt+0x21c>
 b64:	mov	x19, x0
 b68:	b	a9c <PyUnicode_AsUTF8AndSize@plt+0x21c>

0000000000000b6c <PyInit__crypt@@Base>:
 b6c:	stp	x29, x30, [sp, #-16]!
 b70:	mov	x29, sp
 b74:	mov	w1, #0x3f5                 	// #1013
 b78:	adrp	x0, 12000 <PyInit__crypt@@Base+0x11494>
 b7c:	add	x0, x0, #0x60
 b80:	bl	860 <PyModule_Create2@plt>
 b84:	ldp	x29, x30, [sp], #16
 b88:	ret

Disassembly of section .fini:

0000000000000b8c <.fini>:
 b8c:	stp	x29, x30, [sp, #-16]!
 b90:	mov	x29, sp
 b94:	ldp	x29, x30, [sp], #16
 b98:	ret
