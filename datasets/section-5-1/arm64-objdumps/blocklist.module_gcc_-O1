
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//blocklist.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <print_blocklist>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	x23, [sp, #48]
  14:	mov	x23, x0
  18:	mov	w22, w1
  1c:	mov	w20, w2
  20:	mov	w21, w3
  24:	mov	x19, x4
  28:	ldr	w0, [x4, #12]
  2c:	add	w1, w0, #0x1
  30:	str	w1, [x4, #12]
  34:	cbnz	w0, 6c <print_blocklist+0x6c>
  38:	ldr	x1, [x19, #16]
  3c:	sub	x1, x23, x1
  40:	adrp	x0, 0 <print_blocklist>
  44:	ldr	x0, [x0]
  48:	bl	0 <grub_printf>
  4c:	cbnz	w22, 7c <print_blocklist+0x7c>
  50:	orr	w0, w20, w21
  54:	cbnz	w0, 90 <print_blocklist+0x90>
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	adrp	x0, 0 <print_blocklist>
  70:	ldr	x0, [x0]
  74:	bl	0 <grub_printf>
  78:	b	38 <print_blocklist+0x38>
  7c:	mov	w1, w22
  80:	adrp	x0, 0 <print_blocklist>
  84:	ldr	x0, [x0]
  88:	bl	0 <grub_printf>
  8c:	b	50 <print_blocklist+0x50>
  90:	add	w2, w20, w21
  94:	mov	w1, w20
  98:	adrp	x0, 0 <print_blocklist>
  9c:	ldr	x0, [x0]
  a0:	bl	0 <grub_printf>
  a4:	b	58 <print_blocklist+0x58>
	...

00000000000000c8 <grub_cmd_blocklist>:
  c8:	sub	sp, sp, #0x240
  cc:	stp	x29, x30, [sp]
  d0:	mov	x29, sp
  d4:	str	xzr, [sp, #40]
  d8:	str	wzr, [sp, #48]
  dc:	str	wzr, [sp, #52]
  e0:	str	xzr, [sp, #56]
  e4:	cmp	w1, #0x0
  e8:	b.le	190 <grub_cmd_blocklist+0xc8>
  ec:	stp	x19, x20, [sp, #16]
  f0:	mov	w1, #0x21                  	// #33
  f4:	movk	w1, #0x2, lsl #16
  f8:	ldr	x0, [x2]
  fc:	bl	0 <grub_file_open>
 100:	mov	x19, x0
 104:	cbz	x0, 1a4 <grub_cmd_blocklist+0xdc>
 108:	ldr	x0, [x0, #8]
 10c:	ldr	x0, [x0]
 110:	cbz	x0, 1b8 <grub_cmd_blocklist+0xf0>
 114:	ldr	x1, [x0, #40]
 118:	cbz	x1, 1d0 <grub_cmd_blocklist+0x108>
 11c:	mov	x0, #0x0                   	// #0
 120:	ldr	x2, [x1, #8]
 124:	add	x0, x0, x2
 128:	ldr	x1, [x1, #40]
 12c:	cbnz	x1, 120 <grub_cmd_blocklist+0x58>
 130:	str	x0, [sp, #56]
 134:	adrp	x0, 0 <print_blocklist>
 138:	ldr	x0, [x0]
 13c:	str	x0, [x19, #88]
 140:	add	x0, sp, #0x28
 144:	str	x0, [x19, #96]
 148:	mov	x20, #0x200                 	// #512
 14c:	mov	x2, x20
 150:	add	x1, sp, #0x40
 154:	mov	x0, x19
 158:	bl	0 <grub_file_read>
 15c:	cmp	x0, #0x0
 160:	b.gt	14c <grub_cmd_blocklist+0x84>
 164:	ldr	w1, [sp, #48]
 168:	cbnz	w1, 1d8 <grub_cmd_blocklist+0x110>
 16c:	mov	x0, x19
 170:	bl	0 <grub_file_close>
 174:	adrp	x0, 0 <print_blocklist>
 178:	ldr	x0, [x0]
 17c:	ldr	w0, [x0]
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x29, x30, [sp]
 188:	add	sp, sp, #0x240
 18c:	ret
 190:	adrp	x0, 0 <print_blocklist>
 194:	ldr	x1, [x0]
 198:	mov	w0, #0x12                  	// #18
 19c:	bl	0 <grub_error>
 1a0:	b	184 <grub_cmd_blocklist+0xbc>
 1a4:	adrp	x0, 0 <print_blocklist>
 1a8:	ldr	x0, [x0]
 1ac:	ldr	w0, [x0]
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	b	184 <grub_cmd_blocklist+0xbc>
 1b8:	adrp	x0, 0 <print_blocklist>
 1bc:	ldr	x1, [x0]
 1c0:	mov	w0, #0xd                   	// #13
 1c4:	bl	0 <grub_error>
 1c8:	ldp	x19, x20, [sp, #16]
 1cc:	b	184 <grub_cmd_blocklist+0xbc>
 1d0:	mov	x0, #0x0                   	// #0
 1d4:	b	130 <grub_cmd_blocklist+0x68>
 1d8:	add	x4, sp, #0x28
 1dc:	mov	w3, #0x0                   	// #0
 1e0:	mov	w2, #0x0                   	// #0
 1e4:	ldr	x0, [sp, #40]
 1e8:	bl	0 <print_blocklist>
 1ec:	b	16c <grub_cmd_blocklist+0xa4>
	...

0000000000000210 <read_blocklist>:
 210:	stp	x29, x30, [sp, #-64]!
 214:	mov	x29, sp
 218:	stp	x19, x20, [sp, #16]
 21c:	stp	x21, x22, [sp, #32]
 220:	mov	x21, x0
 224:	mov	w22, w1
 228:	mov	w19, w2
 22c:	mov	x20, x3
 230:	ldr	w2, [x3, #8]
 234:	cbz	w2, 2b4 <read_blocklist+0xa4>
 238:	ldr	x0, [x3]
 23c:	add	x1, x0, w2, uxtw
 240:	cmp	x1, x21
 244:	b.eq	270 <read_blocklist+0x60>  // b.none
 248:	cbz	w19, 2f0 <read_blocklist+0xe0>
 24c:	mov	x4, x20
 250:	mov	w3, #0x0                   	// #0
 254:	mov	w2, #0x0                   	// #0
 258:	ldr	w1, [x20, #8]
 25c:	bl	0 <print_blocklist>
 260:	str	wzr, [x20, #8]
 264:	cbz	w22, 2bc <read_blocklist+0xac>
 268:	str	x23, [sp, #48]
 26c:	b	304 <read_blocklist+0xf4>
 270:	cmp	w19, #0x1ff
 274:	ccmp	w22, #0x0, #0x0, hi  // hi = pmore
 278:	b.ne	248 <read_blocklist+0x38>  // b.any
 27c:	lsr	w1, w19, #9
 280:	add	w2, w2, w1
 284:	str	w2, [x3, #8]
 288:	mov	w1, w1
 28c:	add	x21, x21, x1
 290:	ands	w19, w19, #0x1ff
 294:	b.eq	2f0 <read_blocklist+0xe0>  // b.none
 298:	mov	x4, x3
 29c:	mov	w3, #0x0                   	// #0
 2a0:	mov	w2, #0x0                   	// #0
 2a4:	ldr	w1, [x20, #8]
 2a8:	bl	0 <print_blocklist>
 2ac:	str	wzr, [x20, #8]
 2b0:	b	2bc <read_blocklist+0xac>
 2b4:	cbnz	w1, 300 <read_blocklist+0xf0>
 2b8:	cbz	w19, 2f0 <read_blocklist+0xe0>
 2bc:	ands	w22, w19, #0x1ff
 2c0:	b.eq	358 <read_blocklist+0x148>  // b.none
 2c4:	str	x23, [sp, #48]
 2c8:	lsr	w23, w19, #9
 2cc:	cmp	wzr, w19, lsr #9
 2d0:	b.ne	334 <read_blocklist+0x124>  // b.any
 2d4:	mov	x4, x20
 2d8:	mov	w3, w22
 2dc:	mov	w2, #0x0                   	// #0
 2e0:	mov	w1, #0x0                   	// #0
 2e4:	mov	x0, x21
 2e8:	bl	0 <print_blocklist>
 2ec:	ldr	x23, [sp, #48]
 2f0:	ldp	x19, x20, [sp, #16]
 2f4:	ldp	x21, x22, [sp, #32]
 2f8:	ldp	x29, x30, [sp], #64
 2fc:	ret
 300:	str	x23, [sp, #48]
 304:	add	w19, w19, w22
 308:	and	w23, w19, #0x1ff
 30c:	mov	x4, x20
 310:	sub	w3, w23, w22
 314:	mov	w2, w22
 318:	mov	w1, #0x0                   	// #0
 31c:	mov	x0, x21
 320:	bl	0 <print_blocklist>
 324:	sub	w19, w19, w23
 328:	add	x21, x21, #0x1
 32c:	ldr	x23, [sp, #48]
 330:	b	2b8 <read_blocklist+0xa8>
 334:	mov	x4, x20
 338:	mov	w3, #0x0                   	// #0
 33c:	mov	w2, #0x0                   	// #0
 340:	mov	w1, w23
 344:	mov	x0, x21
 348:	bl	0 <print_blocklist>
 34c:	mov	w23, w23
 350:	add	x21, x21, x23
 354:	b	2d4 <read_blocklist+0xc4>
 358:	str	x21, [x20]
 35c:	lsr	w19, w19, #9
 360:	str	w19, [x20, #8]
 364:	b	2f0 <read_blocklist+0xe0>

0000000000000368 <grub_mod_init>:
 368:	stp	x29, x30, [sp, #-16]!
 36c:	mov	x29, sp
 370:	mov	w4, #0x0                   	// #0
 374:	adrp	x0, 0 <print_blocklist>
 378:	ldr	x3, [x0]
 37c:	adrp	x0, 0 <print_blocklist>
 380:	ldr	x2, [x0]
 384:	adrp	x0, 0 <print_blocklist>
 388:	ldr	x1, [x0]
 38c:	adrp	x0, 0 <print_blocklist>
 390:	ldr	x0, [x0]
 394:	bl	0 <grub_register_command_prio>
 398:	adrp	x1, 0 <print_blocklist>
 39c:	ldr	x1, [x1]
 3a0:	str	x0, [x1]
 3a4:	ldp	x29, x30, [sp], #16
 3a8:	ret
 3ac:	nop
	...

00000000000003d8 <grub_mod_fini>:
 3d8:	stp	x29, x30, [sp, #-16]!
 3dc:	mov	x29, sp
 3e0:	adrp	x0, 0 <print_blocklist>
 3e4:	ldr	x0, [x0]
 3e8:	ldr	x0, [x0]
 3ec:	bl	0 <grub_unregister_command>
 3f0:	ldp	x29, x30, [sp], #16
 3f4:	ret
	...
