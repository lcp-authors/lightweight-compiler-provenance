
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_socket.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003f60 <.init>:
    3f60:	stp	x29, x30, [sp, #-16]!
    3f64:	mov	x29, sp
    3f68:	bl	4720 <PySequence_Fast@plt+0x10>
    3f6c:	ldp	x29, x30, [sp], #16
    3f70:	ret

Disassembly of section .plt:

0000000000003f80 <memcpy@plt-0x20>:
    3f80:	stp	x16, x30, [sp, #-16]!
    3f84:	adrp	x16, 27000 <PyInit__socket@@Base+0x19e80>
    3f88:	ldr	x17, [x16, #4088]
    3f8c:	add	x16, x16, #0xff8
    3f90:	br	x17
    3f94:	nop
    3f98:	nop
    3f9c:	nop

0000000000003fa0 <memcpy@plt>:
    3fa0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16]
    3fa8:	add	x16, x16, #0x0
    3fac:	br	x17

0000000000003fb0 <PyUnicode_FromFormat@plt>:
    3fb0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #8]
    3fb8:	add	x16, x16, #0x8
    3fbc:	br	x17

0000000000003fc0 <gai_strerror@plt>:
    3fc0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #16]
    3fc8:	add	x16, x16, #0x10
    3fcc:	br	x17

0000000000003fd0 <PyList_New@plt>:
    3fd0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #24]
    3fd8:	add	x16, x16, #0x18
    3fdc:	br	x17

0000000000003fe0 <_PyUnicode_Ready@plt>:
    3fe0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #32]
    3fe8:	add	x16, x16, #0x20
    3fec:	br	x17

0000000000003ff0 <sendto@plt>:
    3ff0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #40]
    3ff8:	add	x16, x16, #0x28
    3ffc:	br	x17

0000000000004000 <recvmsg@plt>:
    4000:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #48]
    4008:	add	x16, x16, #0x30
    400c:	br	x17

0000000000004010 <freeaddrinfo@plt>:
    4010:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #56]
    4018:	add	x16, x16, #0x38
    401c:	br	x17

0000000000004020 <strlen@plt>:
    4020:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #64]
    4028:	add	x16, x16, #0x40
    402c:	br	x17

0000000000004030 <getpeername@plt>:
    4030:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #72]
    4038:	add	x16, x16, #0x48
    403c:	br	x17

0000000000004040 <PyByteArray_Size@plt>:
    4040:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #80]
    4048:	add	x16, x16, #0x50
    404c:	br	x17

0000000000004050 <PyModule_AddIntConstant@plt>:
    4050:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #88]
    4058:	add	x16, x16, #0x58
    405c:	br	x17

0000000000004060 <__h_errno_location@plt>:
    4060:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #96]
    4068:	add	x16, x16, #0x60
    406c:	br	x17

0000000000004070 <listen@plt>:
    4070:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #104]
    4078:	add	x16, x16, #0x68
    407c:	br	x17

0000000000004080 <_PyBytes_Resize@plt>:
    4080:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #112]
    4088:	add	x16, x16, #0x70
    408c:	br	x17

0000000000004090 <PyErr_Restore@plt>:
    4090:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #120]
    4098:	add	x16, x16, #0x78
    409c:	br	x17

00000000000040a0 <getnameinfo@plt>:
    40a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #128]
    40a8:	add	x16, x16, #0x80
    40ac:	br	x17

00000000000040b0 <strnlen@plt>:
    40b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #136]
    40b8:	add	x16, x16, #0x88
    40bc:	br	x17

00000000000040c0 <PyEval_RestoreThread@plt>:
    40c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #144]
    40c8:	add	x16, x16, #0x90
    40cc:	br	x17

00000000000040d0 <PyMem_Free@plt>:
    40d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #152]
    40d8:	add	x16, x16, #0x98
    40dc:	br	x17

00000000000040e0 <PyErr_SetFromErrno@plt>:
    40e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #160]
    40e8:	add	x16, x16, #0xa0
    40ec:	br	x17

00000000000040f0 <bind@plt>:
    40f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #168]
    40f8:	add	x16, x16, #0xa8
    40fc:	br	x17

0000000000004100 <PyBuffer_Release@plt>:
    4100:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #176]
    4108:	add	x16, x16, #0xb0
    410c:	br	x17

0000000000004110 <__cxa_finalize@plt>:
    4110:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #184]
    4118:	add	x16, x16, #0xb8
    411c:	br	x17

0000000000004120 <PyBytes_FromStringAndSize@plt>:
    4120:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #192]
    4128:	add	x16, x16, #0xc0
    412c:	br	x17

0000000000004130 <_Py_set_inheritable@plt>:
    4130:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #200]
    4138:	add	x16, x16, #0xc8
    413c:	br	x17

0000000000004140 <getprotobyname@plt>:
    4140:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #208]
    4148:	add	x16, x16, #0xd0
    414c:	br	x17

0000000000004150 <inet_ntoa@plt>:
    4150:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #216]
    4158:	add	x16, x16, #0xd8
    415c:	br	x17

0000000000004160 <PyErr_WarnEx@plt>:
    4160:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #224]
    4168:	add	x16, x16, #0xe0
    416c:	br	x17

0000000000004170 <gethostbyname_r@plt>:
    4170:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #232]
    4178:	add	x16, x16, #0xe8
    417c:	br	x17

0000000000004180 <_Py_Dealloc@plt>:
    4180:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #240]
    4188:	add	x16, x16, #0xf0
    418c:	br	x17

0000000000004190 <PyErr_NoMemory@plt>:
    4190:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #248]
    4198:	add	x16, x16, #0xf8
    419c:	br	x17

00000000000041a0 <PyErr_SetObject@plt>:
    41a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #256]
    41a8:	add	x16, x16, #0x100
    41ac:	br	x17

00000000000041b0 <gethostbyaddr_r@plt>:
    41b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #264]
    41b8:	add	x16, x16, #0x108
    41bc:	br	x17

00000000000041c0 <PyLong_FromSize_t@plt>:
    41c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #272]
    41c8:	add	x16, x16, #0x110
    41cc:	br	x17

00000000000041d0 <PyErr_SetString@plt>:
    41d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #280]
    41d8:	add	x16, x16, #0x118
    41dc:	br	x17

00000000000041e0 <setsockopt@plt>:
    41e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #288]
    41e8:	add	x16, x16, #0x120
    41ec:	br	x17

00000000000041f0 <_PyTime_AsSecondsDouble@plt>:
    41f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #296]
    41f8:	add	x16, x16, #0x128
    41fc:	br	x17

0000000000004200 <poll@plt>:
    4200:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #304]
    4208:	add	x16, x16, #0x130
    420c:	br	x17

0000000000004210 <PyType_GenericNew@plt>:
    4210:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #312]
    4218:	add	x16, x16, #0x138
    421c:	br	x17

0000000000004220 <PyUnicode_AsEncodedString@plt>:
    4220:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #320]
    4228:	add	x16, x16, #0x140
    422c:	br	x17

0000000000004230 <recvfrom@plt>:
    4230:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #328]
    4238:	add	x16, x16, #0x148
    423c:	br	x17

0000000000004240 <PyByteArray_AsString@plt>:
    4240:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #336]
    4248:	add	x16, x16, #0x150
    424c:	br	x17

0000000000004250 <PyErr_ExceptionMatches@plt>:
    4250:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4254:	ldr	x17, [x16, #344]
    4258:	add	x16, x16, #0x158
    425c:	br	x17

0000000000004260 <if_indextoname@plt>:
    4260:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4264:	ldr	x17, [x16, #352]
    4268:	add	x16, x16, #0x160
    426c:	br	x17

0000000000004270 <memset@plt>:
    4270:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4274:	ldr	x17, [x16, #360]
    4278:	add	x16, x16, #0x168
    427c:	br	x17

0000000000004280 <PyOS_snprintf@plt>:
    4280:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4284:	ldr	x17, [x16, #368]
    4288:	add	x16, x16, #0x170
    428c:	br	x17

0000000000004290 <_PyTime_FromSecondsObject@plt>:
    4290:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4294:	ldr	x17, [x16, #376]
    4298:	add	x16, x16, #0x178
    429c:	br	x17

00000000000042a0 <accept@plt>:
    42a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42a4:	ldr	x17, [x16, #384]
    42a8:	add	x16, x16, #0x180
    42ac:	br	x17

00000000000042b0 <PyObject_CallFinalizerFromDealloc@plt>:
    42b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42b4:	ldr	x17, [x16, #392]
    42b8:	add	x16, x16, #0x188
    42bc:	br	x17

00000000000042c0 <sendmsg@plt>:
    42c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42c4:	ldr	x17, [x16, #400]
    42c8:	add	x16, x16, #0x190
    42cc:	br	x17

00000000000042d0 <_PyTime_AsMilliseconds@plt>:
    42d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42d4:	ldr	x17, [x16, #408]
    42d8:	add	x16, x16, #0x198
    42dc:	br	x17

00000000000042e0 <PyLong_FromSsize_t@plt>:
    42e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42e4:	ldr	x17, [x16, #416]
    42e8:	add	x16, x16, #0x1a0
    42ec:	br	x17

00000000000042f0 <PyFloat_FromDouble@plt>:
    42f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42f4:	ldr	x17, [x16, #424]
    42f8:	add	x16, x16, #0x1a8
    42fc:	br	x17

0000000000004300 <_PyArg_Parse_SizeT@plt>:
    4300:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4304:	ldr	x17, [x16, #432]
    4308:	add	x16, x16, #0x1b0
    430c:	br	x17

0000000000004310 <PyLong_FromLong@plt>:
    4310:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4314:	ldr	x17, [x16, #440]
    4318:	add	x16, x16, #0x1b8
    431c:	br	x17

0000000000004320 <PyUnicode_EncodeFSDefault@plt>:
    4320:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4324:	ldr	x17, [x16, #448]
    4328:	add	x16, x16, #0x1c0
    432c:	br	x17

0000000000004330 <PyBytes_Size@plt>:
    4330:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4334:	ldr	x17, [x16, #456]
    4338:	add	x16, x16, #0x1c8
    433c:	br	x17

0000000000004340 <PyErr_NewException@plt>:
    4340:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4344:	ldr	x17, [x16, #464]
    4348:	add	x16, x16, #0x1d0
    434c:	br	x17

0000000000004350 <PyErr_Clear@plt>:
    4350:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4354:	ldr	x17, [x16, #472]
    4358:	add	x16, x16, #0x1d8
    435c:	br	x17

0000000000004360 <PyList_Append@plt>:
    4360:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4364:	ldr	x17, [x16, #480]
    4368:	add	x16, x16, #0x1e0
    436c:	br	x17

0000000000004370 <shutdown@plt>:
    4370:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4374:	ldr	x17, [x16, #488]
    4378:	add	x16, x16, #0x1e8
    437c:	br	x17

0000000000004380 <close@plt>:
    4380:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4384:	ldr	x17, [x16, #496]
    4388:	add	x16, x16, #0x1f0
    438c:	br	x17

0000000000004390 <recv@plt>:
    4390:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4394:	ldr	x17, [x16, #504]
    4398:	add	x16, x16, #0x1f8
    439c:	br	x17

00000000000043a0 <__gmon_start__@plt>:
    43a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43a4:	ldr	x17, [x16, #512]
    43a8:	add	x16, x16, #0x200
    43ac:	br	x17

00000000000043b0 <getservbyport@plt>:
    43b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43b4:	ldr	x17, [x16, #520]
    43b8:	add	x16, x16, #0x208
    43bc:	br	x17

00000000000043c0 <PyErr_Occurred@plt>:
    43c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43c4:	ldr	x17, [x16, #528]
    43c8:	add	x16, x16, #0x210
    43cc:	br	x17

00000000000043d0 <PyModule_Create2@plt>:
    43d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43d4:	ldr	x17, [x16, #536]
    43d8:	add	x16, x16, #0x218
    43dc:	br	x17

00000000000043e0 <PyLong_AsLong@plt>:
    43e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43e4:	ldr	x17, [x16, #544]
    43e8:	add	x16, x16, #0x220
    43ec:	br	x17

00000000000043f0 <strcmp@plt>:
    43f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43f4:	ldr	x17, [x16, #552]
    43f8:	add	x16, x16, #0x228
    43fc:	br	x17

0000000000004400 <_PyArg_ParseTuple_SizeT@plt>:
    4400:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4404:	ldr	x17, [x16, #560]
    4408:	add	x16, x16, #0x230
    440c:	br	x17

0000000000004410 <hstrerror@plt>:
    4410:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4414:	ldr	x17, [x16, #568]
    4418:	add	x16, x16, #0x238
    441c:	br	x17

0000000000004420 <inet_pton@plt>:
    4420:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4424:	ldr	x17, [x16, #576]
    4428:	add	x16, x16, #0x240
    442c:	br	x17

0000000000004430 <PyErr_ResourceWarning@plt>:
    4430:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4434:	ldr	x17, [x16, #584]
    4438:	add	x16, x16, #0x248
    443c:	br	x17

0000000000004440 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    4440:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4444:	ldr	x17, [x16, #592]
    4448:	add	x16, x16, #0x250
    444c:	br	x17

0000000000004450 <send@plt>:
    4450:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4454:	ldr	x17, [x16, #600]
    4458:	add	x16, x16, #0x258
    445c:	br	x17

0000000000004460 <sethostname@plt>:
    4460:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4464:	ldr	x17, [x16, #608]
    4468:	add	x16, x16, #0x260
    446c:	br	x17

0000000000004470 <_Py_dup@plt>:
    4470:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4474:	ldr	x17, [x16, #616]
    4478:	add	x16, x16, #0x268
    447c:	br	x17

0000000000004480 <connect@plt>:
    4480:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4484:	ldr	x17, [x16, #624]
    4488:	add	x16, x16, #0x270
    448c:	br	x17

0000000000004490 <strchr@plt>:
    4490:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4494:	ldr	x17, [x16, #632]
    4498:	add	x16, x16, #0x278
    449c:	br	x17

00000000000044a0 <PySys_Audit@plt>:
    44a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44a4:	ldr	x17, [x16, #640]
    44a8:	add	x16, x16, #0x280
    44ac:	br	x17

00000000000044b0 <if_freenameindex@plt>:
    44b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44b4:	ldr	x17, [x16, #648]
    44b8:	add	x16, x16, #0x288
    44bc:	br	x17

00000000000044c0 <accept4@plt>:
    44c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44c4:	ldr	x17, [x16, #656]
    44c8:	add	x16, x16, #0x290
    44cc:	br	x17

00000000000044d0 <PyObject_GetBuffer@plt>:
    44d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44d4:	ldr	x17, [x16, #664]
    44d8:	add	x16, x16, #0x298
    44dc:	br	x17

00000000000044e0 <PyLong_AsUnsignedLong@plt>:
    44e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44e4:	ldr	x17, [x16, #672]
    44e8:	add	x16, x16, #0x2a0
    44ec:	br	x17

00000000000044f0 <socket@plt>:
    44f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44f4:	ldr	x17, [x16, #680]
    44f8:	add	x16, x16, #0x2a8
    44fc:	br	x17

0000000000004500 <PyLong_FromUnsignedLong@plt>:
    4500:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4504:	ldr	x17, [x16, #688]
    4508:	add	x16, x16, #0x2b0
    450c:	br	x17

0000000000004510 <PyUnicode_AsUTF8@plt>:
    4510:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4514:	ldr	x17, [x16, #696]
    4518:	add	x16, x16, #0x2b8
    451c:	br	x17

0000000000004520 <PyUnicode_DecodeFSDefault@plt>:
    4520:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4524:	ldr	x17, [x16, #704]
    4528:	add	x16, x16, #0x2c0
    452c:	br	x17

0000000000004530 <getsockopt@plt>:
    4530:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4534:	ldr	x17, [x16, #712]
    4538:	add	x16, x16, #0x2c8
    453c:	br	x17

0000000000004540 <PyErr_Fetch@plt>:
    4540:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4544:	ldr	x17, [x16, #720]
    4548:	add	x16, x16, #0x2d0
    454c:	br	x17

0000000000004550 <PyUnicode_FromString@plt>:
    4550:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4554:	ldr	x17, [x16, #728]
    4558:	add	x16, x16, #0x2d8
    455c:	br	x17

0000000000004560 <getaddrinfo@plt>:
    4560:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4564:	ldr	x17, [x16, #736]
    4568:	add	x16, x16, #0x2e0
    456c:	br	x17

0000000000004570 <PyEval_SaveThread@plt>:
    4570:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4574:	ldr	x17, [x16, #744]
    4578:	add	x16, x16, #0x2e8
    457c:	br	x17

0000000000004580 <PyModule_AddObject@plt>:
    4580:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4584:	ldr	x17, [x16, #752]
    4588:	add	x16, x16, #0x2f0
    458c:	br	x17

0000000000004590 <gethostname@plt>:
    4590:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4594:	ldr	x17, [x16, #760]
    4598:	add	x16, x16, #0x2f8
    459c:	br	x17

00000000000045a0 <PyBytes_AsString@plt>:
    45a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45a4:	ldr	x17, [x16, #768]
    45a8:	add	x16, x16, #0x300
    45ac:	br	x17

00000000000045b0 <inet_aton@plt>:
    45b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45b4:	ldr	x17, [x16, #776]
    45b8:	add	x16, x16, #0x308
    45bc:	br	x17

00000000000045c0 <if_nametoindex@plt>:
    45c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45c4:	ldr	x17, [x16, #784]
    45c8:	add	x16, x16, #0x310
    45cc:	br	x17

00000000000045d0 <_PyTime_FromSeconds@plt>:
    45d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45d4:	ldr	x17, [x16, #792]
    45d8:	add	x16, x16, #0x318
    45dc:	br	x17

00000000000045e0 <PyErr_CheckSignals@plt>:
    45e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45e4:	ldr	x17, [x16, #800]
    45e8:	add	x16, x16, #0x320
    45ec:	br	x17

00000000000045f0 <PyCapsule_New@plt>:
    45f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45f4:	ldr	x17, [x16, #808]
    45f8:	add	x16, x16, #0x328
    45fc:	br	x17

0000000000004600 <PyType_IsSubtype@plt>:
    4600:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4604:	ldr	x17, [x16, #816]
    4608:	add	x16, x16, #0x330
    460c:	br	x17

0000000000004610 <PyTuple_Size@plt>:
    4610:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4614:	ldr	x17, [x16, #824]
    4618:	add	x16, x16, #0x338
    461c:	br	x17

0000000000004620 <PyErr_Format@plt>:
    4620:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4624:	ldr	x17, [x16, #832]
    4628:	add	x16, x16, #0x340
    462c:	br	x17

0000000000004630 <socketpair@plt>:
    4630:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4634:	ldr	x17, [x16, #840]
    4638:	add	x16, x16, #0x348
    463c:	br	x17

0000000000004640 <_Py_BuildValue_SizeT@plt>:
    4640:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4644:	ldr	x17, [x16, #848]
    4648:	add	x16, x16, #0x350
    464c:	br	x17

0000000000004650 <strncpy@plt>:
    4650:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4654:	ldr	x17, [x16, #856]
    4658:	add	x16, x16, #0x358
    465c:	br	x17

0000000000004660 <__errno_location@plt>:
    4660:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4664:	ldr	x17, [x16, #864]
    4668:	add	x16, x16, #0x360
    466c:	br	x17

0000000000004670 <_PyLong_AsInt@plt>:
    4670:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4674:	ldr	x17, [x16, #872]
    4678:	add	x16, x16, #0x368
    467c:	br	x17

0000000000004680 <getsockname@plt>:
    4680:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4684:	ldr	x17, [x16, #880]
    4688:	add	x16, x16, #0x370
    468c:	br	x17

0000000000004690 <PyMem_Malloc@plt>:
    4690:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4694:	ldr	x17, [x16, #888]
    4698:	add	x16, x16, #0x378
    469c:	br	x17

00000000000046a0 <getservbyname@plt>:
    46a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46a4:	ldr	x17, [x16, #896]
    46a8:	add	x16, x16, #0x380
    46ac:	br	x17

00000000000046b0 <if_nameindex@plt>:
    46b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46b4:	ldr	x17, [x16, #904]
    46b8:	add	x16, x16, #0x388
    46bc:	br	x17

00000000000046c0 <_PyTime_GetMonotonicClock@plt>:
    46c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46c4:	ldr	x17, [x16, #912]
    46c8:	add	x16, x16, #0x390
    46cc:	br	x17

00000000000046d0 <PyTuple_Pack@plt>:
    46d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46d4:	ldr	x17, [x16, #920]
    46d8:	add	x16, x16, #0x398
    46dc:	br	x17

00000000000046e0 <inet_ntop@plt>:
    46e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46e4:	ldr	x17, [x16, #928]
    46e8:	add	x16, x16, #0x3a0
    46ec:	br	x17

00000000000046f0 <PyErr_WriteUnraisable@plt>:
    46f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46f4:	ldr	x17, [x16, #936]
    46f8:	add	x16, x16, #0x3a8
    46fc:	br	x17

0000000000004700 <ioctl@plt>:
    4700:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4704:	ldr	x17, [x16, #944]
    4708:	add	x16, x16, #0x3b0
    470c:	br	x17

0000000000004710 <PySequence_Fast@plt>:
    4710:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4714:	ldr	x17, [x16, #952]
    4718:	add	x16, x16, #0x3b8
    471c:	br	x17

Disassembly of section .text:

0000000000004720 <PyInit__socket@@Base-0x8a60>:
    4720:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4724:	ldr	x0, [x0, #4000]
    4728:	cbz	x0, 4730 <PySequence_Fast@plt+0x20>
    472c:	b	43a0 <__gmon_start__@plt>
    4730:	ret
    4734:	nop
    4738:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    473c:	add	x0, x0, #0xf10
    4740:	adrp	x1, 28000 <PyInit__socket@@Base+0x1ae80>
    4744:	add	x1, x1, #0xf10
    4748:	cmp	x1, x0
    474c:	b.eq	4764 <PySequence_Fast@plt+0x54>  // b.none
    4750:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    4754:	ldr	x1, [x1, #3904]
    4758:	cbz	x1, 4764 <PySequence_Fast@plt+0x54>
    475c:	mov	x16, x1
    4760:	br	x16
    4764:	ret
    4768:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    476c:	add	x0, x0, #0xf10
    4770:	adrp	x1, 28000 <PyInit__socket@@Base+0x1ae80>
    4774:	add	x1, x1, #0xf10
    4778:	sub	x1, x1, x0
    477c:	lsr	x2, x1, #63
    4780:	add	x1, x2, x1, asr #3
    4784:	cmp	xzr, x1, asr #1
    4788:	asr	x1, x1, #1
    478c:	b.eq	47a4 <PySequence_Fast@plt+0x94>  // b.none
    4790:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    4794:	ldr	x2, [x2, #4064]
    4798:	cbz	x2, 47a4 <PySequence_Fast@plt+0x94>
    479c:	mov	x16, x2
    47a0:	br	x16
    47a4:	ret
    47a8:	stp	x29, x30, [sp, #-32]!
    47ac:	mov	x29, sp
    47b0:	str	x19, [sp, #16]
    47b4:	adrp	x19, 28000 <PyInit__socket@@Base+0x1ae80>
    47b8:	ldrb	w0, [x19, #3856]
    47bc:	cbnz	w0, 47e4 <PySequence_Fast@plt+0xd4>
    47c0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    47c4:	ldr	x0, [x0, #3920]
    47c8:	cbz	x0, 47d8 <PySequence_Fast@plt+0xc8>
    47cc:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    47d0:	ldr	x0, [x0, #960]
    47d4:	bl	4110 <__cxa_finalize@plt>
    47d8:	bl	4738 <PySequence_Fast@plt+0x28>
    47dc:	mov	w0, #0x1                   	// #1
    47e0:	strb	w0, [x19, #3856]
    47e4:	ldr	x19, [sp, #16]
    47e8:	ldp	x29, x30, [sp], #32
    47ec:	ret
    47f0:	b	4768 <PySequence_Fast@plt+0x58>
    47f4:	nop
    47f8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    47fc:	ldr	x0, [x0, #3984]
    4800:	ldr	x0, [x0]
    4804:	b	40e0 <PyErr_SetFromErrno@plt>
    4808:	stp	x29, x30, [sp, #-80]!
    480c:	mov	x0, #0x0                   	// #0
    4810:	mov	x29, sp
    4814:	stp	x21, x22, [sp, #32]
    4818:	bl	3fd0 <PyList_New@plt>
    481c:	mov	x22, x0
    4820:	cbz	x0, 48ec <PySequence_Fast@plt+0x1dc>
    4824:	bl	46b0 <if_nameindex@plt>
    4828:	mov	x21, x0
    482c:	cbz	x0, 495c <PySequence_Fast@plt+0x24c>
    4830:	ldr	w1, [x0]
    4834:	cbz	w1, 48e4 <PySequence_Fast@plt+0x1d4>
    4838:	stp	x23, x24, [sp, #48]
    483c:	adrp	x23, 27000 <PyInit__socket@@Base+0x19e80>
    4840:	adrp	x24, e000 <PyInit__socket@@Base+0xe80>
    4844:	ldr	x23, [x23, #4048]
    4848:	add	x24, x24, #0xbc0
    484c:	stp	x19, x20, [sp, #16]
    4850:	mov	w20, #0x0                   	// #0
    4854:	str	x25, [sp, #64]
    4858:	mov	w25, #0x7fffffff            	// #2147483647
    485c:	b	4878 <PySequence_Fast@plt+0x168>
    4860:	sbfiz	x1, x20, #4, #32
    4864:	add	x0, x21, x1
    4868:	ldr	w1, [x21, x1]
    486c:	cmp	w1, #0x0
    4870:	ccmp	w20, w25, #0x4, ne  // ne = any
    4874:	b.eq	48d8 <PySequence_Fast@plt+0x1c8>  // b.none
    4878:	ldr	x3, [x0, #8]
    487c:	mov	x2, x23
    4880:	mov	x0, x24
    4884:	bl	4640 <_Py_BuildValue_SizeT@plt>
    4888:	mov	x19, x0
    488c:	mov	x1, x19
    4890:	mov	x0, x22
    4894:	cbz	x19, 4918 <PySequence_Fast@plt+0x208>
    4898:	bl	4360 <PyList_Append@plt>
    489c:	cmn	w0, #0x1
    48a0:	b.eq	48fc <PySequence_Fast@plt+0x1ec>  // b.none
    48a4:	ldr	x1, [x19]
    48a8:	add	w20, w20, #0x1
    48ac:	sub	x1, x1, #0x1
    48b0:	str	x1, [x19]
    48b4:	cbnz	x1, 4860 <PySequence_Fast@plt+0x150>
    48b8:	mov	x0, x19
    48bc:	bl	4180 <_Py_Dealloc@plt>
    48c0:	sbfiz	x1, x20, #4, #32
    48c4:	add	x0, x21, x1
    48c8:	ldr	w1, [x21, x1]
    48cc:	cmp	w1, #0x0
    48d0:	ccmp	w20, w25, #0x4, ne  // ne = any
    48d4:	b.ne	4878 <PySequence_Fast@plt+0x168>  // b.any
    48d8:	ldp	x19, x20, [sp, #16]
    48dc:	ldp	x23, x24, [sp, #48]
    48e0:	ldr	x25, [sp, #64]
    48e4:	mov	x0, x21
    48e8:	bl	44b0 <if_freenameindex@plt>
    48ec:	mov	x0, x22
    48f0:	ldp	x21, x22, [sp, #32]
    48f4:	ldp	x29, x30, [sp], #80
    48f8:	ret
    48fc:	ldr	x0, [x19]
    4900:	sub	x0, x0, #0x1
    4904:	str	x0, [x19]
    4908:	cbnz	x0, 4918 <PySequence_Fast@plt+0x208>
    490c:	mov	x0, x19
    4910:	bl	4180 <_Py_Dealloc@plt>
    4914:	nop
    4918:	ldr	x0, [x22]
    491c:	sub	x0, x0, #0x1
    4920:	str	x0, [x22]
    4924:	cbz	x0, 4950 <PySequence_Fast@plt+0x240>
    4928:	mov	x0, x21
    492c:	mov	x22, #0x0                   	// #0
    4930:	bl	44b0 <if_freenameindex@plt>
    4934:	mov	x0, x22
    4938:	ldp	x19, x20, [sp, #16]
    493c:	ldp	x21, x22, [sp, #32]
    4940:	ldp	x23, x24, [sp, #48]
    4944:	ldr	x25, [sp, #64]
    4948:	ldp	x29, x30, [sp], #80
    494c:	ret
    4950:	mov	x0, x22
    4954:	bl	4180 <_Py_Dealloc@plt>
    4958:	b	4928 <PySequence_Fast@plt+0x218>
    495c:	ldr	x0, [x22]
    4960:	sub	x0, x0, #0x1
    4964:	str	x0, [x22]
    4968:	cbz	x0, 4984 <PySequence_Fast@plt+0x274>
    496c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4970:	mov	x22, #0x0                   	// #0
    4974:	ldr	x0, [x0, #3984]
    4978:	ldr	x0, [x0]
    497c:	bl	40e0 <PyErr_SetFromErrno@plt>
    4980:	b	48ec <PySequence_Fast@plt+0x1dc>
    4984:	mov	x0, x22
    4988:	bl	4180 <_Py_Dealloc@plt>
    498c:	b	496c <PySequence_Fast@plt+0x25c>
    4990:	stp	x29, x30, [sp, #-32]!
    4994:	mov	x1, #0x0                   	// #0
    4998:	mov	x29, sp
    499c:	ldr	x2, [x0, #304]
    49a0:	str	x19, [sp, #16]
    49a4:	blr	x2
    49a8:	mov	x19, x0
    49ac:	cbz	x0, 49c8 <PySequence_Fast@plt+0x2b8>
    49b0:	mov	w0, #0xffffffff            	// #-1
    49b4:	str	w0, [x19, #16]
    49b8:	bl	45d0 <_PyTime_FromSeconds@plt>
    49bc:	adrp	x1, 4000 <recvmsg@plt>
    49c0:	add	x1, x1, #0x7f8
    49c4:	stp	x1, x0, [x19, #32]
    49c8:	mov	x0, x19
    49cc:	ldr	x19, [sp, #16]
    49d0:	ldp	x29, x30, [sp], #32
    49d4:	ret
    49d8:	stp	x29, x30, [sp, #-176]!
    49dc:	mov	x0, x1
    49e0:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    49e4:	mov	x29, sp
    49e8:	stp	x19, x20, [sp, #16]
    49ec:	add	x20, sp, #0x60
    49f0:	mov	x3, x20
    49f4:	add	x2, sp, #0x2c
    49f8:	add	x1, x1, #0xbc8
    49fc:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    4a00:	cbz	w0, 4acc <PySequence_Fast@plt+0x3bc>
    4a04:	ldr	w0, [sp, #44]
    4a08:	cmp	w0, #0x2
    4a0c:	b.eq	4a60 <PySequence_Fast@plt+0x350>  // b.none
    4a10:	cmp	w0, #0xa
    4a14:	b.ne	4aa0 <PySequence_Fast@plt+0x390>  // b.any
    4a18:	ldr	x1, [sp, #112]
    4a1c:	cmp	x1, #0x10
    4a20:	b.ne	4a6c <PySequence_Fast@plt+0x35c>  // b.any
    4a24:	ldr	x1, [sp, #96]
    4a28:	add	x2, sp, #0x30
    4a2c:	mov	w3, #0x2e                  	// #46
    4a30:	bl	46e0 <inet_ntop@plt>
    4a34:	mov	x19, x0
    4a38:	mov	x0, x20
    4a3c:	bl	4100 <PyBuffer_Release@plt>
    4a40:	cbz	x19, 4ae0 <PySequence_Fast@plt+0x3d0>
    4a44:	mov	x0, x19
    4a48:	bl	4550 <PyUnicode_FromString@plt>
    4a4c:	mov	x19, x0
    4a50:	mov	x0, x19
    4a54:	ldp	x19, x20, [sp, #16]
    4a58:	ldp	x29, x30, [sp], #176
    4a5c:	ret
    4a60:	ldr	x1, [sp, #112]
    4a64:	cmp	x1, #0x4
    4a68:	b.eq	4a24 <PySequence_Fast@plt+0x314>  // b.none
    4a6c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4a70:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4a74:	add	x1, x1, #0xbd8
    4a78:	mov	x19, #0x0                   	// #0
    4a7c:	ldr	x0, [x0, #3960]
    4a80:	ldr	x0, [x0]
    4a84:	bl	41d0 <PyErr_SetString@plt>
    4a88:	mov	x0, x20
    4a8c:	bl	4100 <PyBuffer_Release@plt>
    4a90:	mov	x0, x19
    4a94:	ldp	x19, x20, [sp, #16]
    4a98:	ldp	x29, x30, [sp], #176
    4a9c:	ret
    4aa0:	adrp	x3, 27000 <PyInit__socket@@Base+0x19e80>
    4aa4:	mov	w2, w0
    4aa8:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4aac:	add	x1, x1, #0xc08
    4ab0:	ldr	x3, [x3, #3960]
    4ab4:	mov	x19, #0x0                   	// #0
    4ab8:	ldr	x0, [x3]
    4abc:	bl	4620 <PyErr_Format@plt>
    4ac0:	mov	x0, x20
    4ac4:	bl	4100 <PyBuffer_Release@plt>
    4ac8:	b	4a50 <PySequence_Fast@plt+0x340>
    4acc:	mov	x19, #0x0                   	// #0
    4ad0:	mov	x0, x19
    4ad4:	ldp	x19, x20, [sp, #16]
    4ad8:	ldp	x29, x30, [sp], #176
    4adc:	ret
    4ae0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4ae4:	ldr	x0, [x0, #3984]
    4ae8:	ldr	x0, [x0]
    4aec:	bl	40e0 <PyErr_SetFromErrno@plt>
    4af0:	b	4a50 <PySequence_Fast@plt+0x340>
    4af4:	nop
    4af8:	stp	x29, x30, [sp, #-64]!
    4afc:	mov	x0, x1
    4b00:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4b04:	mov	x29, sp
    4b08:	add	x1, x1, #0xc28
    4b0c:	add	x3, sp, #0x28
    4b10:	add	x2, sp, #0x24
    4b14:	stp	x19, x20, [sp, #16]
    4b18:	mov	x19, #0x0                   	// #0
    4b1c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    4b20:	cbz	w0, 4b68 <PySequence_Fast@plt+0x458>
    4b24:	ldr	w0, [sp, #36]
    4b28:	add	x20, sp, #0x30
    4b2c:	ldr	x1, [sp, #40]
    4b30:	mov	x2, x20
    4b34:	bl	4420 <inet_pton@plt>
    4b38:	cmp	w0, #0x0
    4b3c:	b.lt	4bd0 <PySequence_Fast@plt+0x4c0>  // b.tstop
    4b40:	b.eq	4bb4 <PySequence_Fast@plt+0x4a4>  // b.none
    4b44:	ldr	w0, [sp, #36]
    4b48:	cmp	w0, #0x2
    4b4c:	b.eq	4ba0 <PySequence_Fast@plt+0x490>  // b.none
    4b50:	cmp	w0, #0xa
    4b54:	b.ne	4b78 <PySequence_Fast@plt+0x468>  // b.any
    4b58:	mov	x0, x20
    4b5c:	mov	x1, #0x10                  	// #16
    4b60:	bl	4120 <PyBytes_FromStringAndSize@plt>
    4b64:	mov	x19, x0
    4b68:	mov	x0, x19
    4b6c:	ldp	x19, x20, [sp, #16]
    4b70:	ldp	x29, x30, [sp], #64
    4b74:	ret
    4b78:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4b7c:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4b80:	add	x1, x1, #0xc68
    4b84:	ldr	x0, [x0, #3984]
    4b88:	ldr	x0, [x0]
    4b8c:	bl	41d0 <PyErr_SetString@plt>
    4b90:	mov	x0, x19
    4b94:	ldp	x19, x20, [sp, #16]
    4b98:	ldp	x29, x30, [sp], #64
    4b9c:	ret
    4ba0:	mov	x0, x20
    4ba4:	mov	x1, #0x4                   	// #4
    4ba8:	bl	4120 <PyBytes_FromStringAndSize@plt>
    4bac:	mov	x19, x0
    4bb0:	b	4b68 <PySequence_Fast@plt+0x458>
    4bb4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4bb8:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4bbc:	add	x1, x1, #0xc38
    4bc0:	ldr	x0, [x0, #3984]
    4bc4:	ldr	x0, [x0]
    4bc8:	bl	41d0 <PyErr_SetString@plt>
    4bcc:	b	4b68 <PySequence_Fast@plt+0x458>
    4bd0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4bd4:	ldr	x0, [x0, #3984]
    4bd8:	ldr	x0, [x0]
    4bdc:	bl	40e0 <PyErr_SetFromErrno@plt>
    4be0:	b	4b68 <PySequence_Fast@plt+0x458>
    4be4:	nop
    4be8:	stp	x29, x30, [sp, #-112]!
    4bec:	mov	x0, x1
    4bf0:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4bf4:	mov	x29, sp
    4bf8:	str	x19, [sp, #16]
    4bfc:	add	x19, sp, #0x20
    4c00:	add	x1, x1, #0xc80
    4c04:	mov	x2, x19
    4c08:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    4c0c:	cbz	w0, 4c74 <PySequence_Fast@plt+0x564>
    4c10:	ldr	x0, [sp, #48]
    4c14:	cmp	x0, #0x4
    4c18:	b.ne	4c44 <PySequence_Fast@plt+0x534>  // b.any
    4c1c:	ldr	x1, [sp, #32]
    4c20:	mov	x0, x19
    4c24:	ldr	w19, [x1]
    4c28:	bl	4100 <PyBuffer_Release@plt>
    4c2c:	mov	w0, w19
    4c30:	bl	4150 <inet_ntoa@plt>
    4c34:	bl	4550 <PyUnicode_FromString@plt>
    4c38:	ldr	x19, [sp, #16]
    4c3c:	ldp	x29, x30, [sp], #112
    4c40:	ret
    4c44:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4c48:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4c4c:	add	x1, x1, #0xc90
    4c50:	ldr	x0, [x0, #3984]
    4c54:	ldr	x0, [x0]
    4c58:	bl	41d0 <PyErr_SetString@plt>
    4c5c:	mov	x0, x19
    4c60:	bl	4100 <PyBuffer_Release@plt>
    4c64:	mov	x0, #0x0                   	// #0
    4c68:	ldr	x19, [sp, #16]
    4c6c:	ldp	x29, x30, [sp], #112
    4c70:	ret
    4c74:	mov	x0, #0x0                   	// #0
    4c78:	ldr	x19, [sp, #16]
    4c7c:	ldp	x29, x30, [sp], #112
    4c80:	ret
    4c84:	nop
    4c88:	stp	x29, x30, [sp, #-32]!
    4c8c:	mov	x0, x1
    4c90:	mov	x29, sp
    4c94:	stp	x19, x20, [sp, #16]
    4c98:	bl	43e0 <PyLong_AsLong@plt>
    4c9c:	mov	x19, x0
    4ca0:	cmn	w0, #0x1
    4ca4:	b.eq	4cdc <PySequence_Fast@plt+0x5cc>  // b.none
    4ca8:	mov	w0, w19
    4cac:	bl	4470 <_Py_dup@plt>
    4cb0:	mov	w19, w0
    4cb4:	cmn	w0, #0x1
    4cb8:	b.eq	4ce4 <PySequence_Fast@plt+0x5d4>  // b.none
    4cbc:	sxtw	x0, w0
    4cc0:	bl	4310 <PyLong_FromLong@plt>
    4cc4:	mov	x20, x0
    4cc8:	cbz	x0, 4cf8 <PySequence_Fast@plt+0x5e8>
    4ccc:	mov	x0, x20
    4cd0:	ldp	x19, x20, [sp, #16]
    4cd4:	ldp	x29, x30, [sp], #32
    4cd8:	ret
    4cdc:	bl	43c0 <PyErr_Occurred@plt>
    4ce0:	cbz	x0, 4ca8 <PySequence_Fast@plt+0x598>
    4ce4:	mov	x20, #0x0                   	// #0
    4ce8:	mov	x0, x20
    4cec:	ldp	x19, x20, [sp, #16]
    4cf0:	ldp	x29, x30, [sp], #32
    4cf4:	ret
    4cf8:	mov	w0, w19
    4cfc:	bl	4380 <close@plt>
    4d00:	mov	x0, x20
    4d04:	ldp	x19, x20, [sp, #16]
    4d08:	ldp	x29, x30, [sp], #32
    4d0c:	ret
    4d10:	ldrsw	x0, [x0, #16]
    4d14:	b	4310 <PyLong_FromLong@plt>
    4d18:	ldr	w1, [x0, #16]
    4d1c:	mov	w2, #0xffffffff            	// #-1
    4d20:	str	w2, [x0, #16]
    4d24:	sxtw	x0, w1
    4d28:	b	4310 <PyLong_FromLong@plt>
    4d2c:	nop
    4d30:	stp	x29, x30, [sp, #-48]!
    4d34:	mov	x0, x1
    4d38:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4d3c:	mov	x29, sp
    4d40:	add	x1, x1, #0xcb8
    4d44:	add	x3, sp, #0x28
    4d48:	add	x2, sp, #0x24
    4d4c:	stp	x19, x20, [sp, #16]
    4d50:	str	xzr, [sp, #40]
    4d54:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    4d58:	cbz	w0, 4dd0 <PySequence_Fast@plt+0x6c0>
    4d5c:	ldr	w2, [sp, #36]
    4d60:	mov	w0, #0xffff                	// #65535
    4d64:	cmp	w2, w0
    4d68:	b.hi	4de4 <PySequence_Fast@plt+0x6d4>  // b.pmore
    4d6c:	ldr	x3, [sp, #40]
    4d70:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4d74:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    4d78:	add	x1, x1, #0xcf8
    4d7c:	add	x0, x0, #0xd00
    4d80:	bl	44a0 <PySys_Audit@plt>
    4d84:	tbnz	w0, #31, 4dd0 <PySequence_Fast@plt+0x6c0>
    4d88:	bl	4570 <PyEval_SaveThread@plt>
    4d8c:	mov	x20, x0
    4d90:	ldr	x1, [sp, #40]
    4d94:	ldr	w0, [sp, #36]
    4d98:	rev16	w0, w0
    4d9c:	and	w0, w0, #0xffff
    4da0:	bl	43b0 <getservbyport@plt>
    4da4:	mov	x19, x0
    4da8:	mov	x0, x20
    4dac:	bl	40c0 <PyEval_RestoreThread@plt>
    4db0:	cbz	x19, 4e10 <PySequence_Fast@plt+0x700>
    4db4:	ldr	x0, [x19]
    4db8:	bl	4550 <PyUnicode_FromString@plt>
    4dbc:	mov	x19, x0
    4dc0:	mov	x0, x19
    4dc4:	ldp	x19, x20, [sp, #16]
    4dc8:	ldp	x29, x30, [sp], #48
    4dcc:	ret
    4dd0:	mov	x19, #0x0                   	// #0
    4dd4:	mov	x0, x19
    4dd8:	ldp	x19, x20, [sp, #16]
    4ddc:	ldp	x29, x30, [sp], #48
    4de0:	ret
    4de4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4de8:	mov	x19, #0x0                   	// #0
    4dec:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4df0:	add	x1, x1, #0xcd0
    4df4:	ldr	x0, [x0, #4008]
    4df8:	ldr	x0, [x0]
    4dfc:	bl	41d0 <PyErr_SetString@plt>
    4e00:	mov	x0, x19
    4e04:	ldp	x19, x20, [sp, #16]
    4e08:	ldp	x29, x30, [sp], #48
    4e0c:	ret
    4e10:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4e14:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4e18:	add	x1, x1, #0xd18
    4e1c:	ldr	x0, [x0, #3984]
    4e20:	ldr	x0, [x0]
    4e24:	bl	41d0 <PyErr_SetString@plt>
    4e28:	b	4dc0 <PySequence_Fast@plt+0x6b0>
    4e2c:	nop
    4e30:	stp	x29, x30, [sp, #-144]!
    4e34:	mov	x0, x1
    4e38:	mov	x29, sp
    4e3c:	stp	x19, x20, [sp, #16]
    4e40:	add	x20, sp, #0x38
    4e44:	mov	x19, x1
    4e48:	mov	x2, x20
    4e4c:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4e50:	add	x1, x1, #0xd30
    4e54:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    4e58:	cbnz	w0, 4f08 <PySequence_Fast@plt+0x7f8>
    4e5c:	bl	4350 <PyErr_Clear@plt>
    4e60:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    4e64:	mov	x3, x20
    4e68:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4e6c:	mov	x0, x19
    4e70:	ldr	x2, [x2, #3936]
    4e74:	add	x1, x1, #0xd40
    4e78:	mov	w20, #0x1                   	// #1
    4e7c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    4e80:	cbz	w0, 4f28 <PySequence_Fast@plt+0x818>
    4e84:	ldr	x2, [sp, #56]
    4e88:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4e8c:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    4e90:	add	x1, x1, #0xd50
    4e94:	add	x0, x0, #0xd58
    4e98:	bl	44a0 <PySys_Audit@plt>
    4e9c:	tbnz	w0, #31, 4f28 <PySequence_Fast@plt+0x818>
    4ea0:	ldr	x0, [sp, #56]
    4ea4:	str	x21, [sp, #32]
    4ea8:	add	x21, sp, #0x40
    4eac:	mov	w2, #0x0                   	// #0
    4eb0:	mov	x1, x21
    4eb4:	bl	44d0 <PyObject_GetBuffer@plt>
    4eb8:	mov	w19, w0
    4ebc:	cbz	w0, 4f38 <PySequence_Fast@plt+0x828>
    4ec0:	cbz	w20, 4f70 <PySequence_Fast@plt+0x860>
    4ec4:	ldr	x0, [sp, #56]
    4ec8:	ldr	x1, [x0]
    4ecc:	sub	x1, x1, #0x1
    4ed0:	str	x1, [x0]
    4ed4:	cbnz	x1, 4f70 <PySequence_Fast@plt+0x860>
    4ed8:	bl	4180 <_Py_Dealloc@plt>
    4edc:	cbnz	w19, 4f70 <PySequence_Fast@plt+0x860>
    4ee0:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    4ee4:	ldr	x21, [sp, #32]
    4ee8:	ldr	x1, [x1, #4024]
    4eec:	ldp	x19, x20, [sp, #16]
    4ef0:	mov	x0, x1
    4ef4:	ldr	x2, [x1]
    4ef8:	add	x2, x2, #0x1
    4efc:	str	x2, [x1]
    4f00:	ldp	x29, x30, [sp], #144
    4f04:	ret
    4f08:	ldr	x2, [sp, #56]
    4f0c:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    4f10:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    4f14:	add	x1, x1, #0xd50
    4f18:	add	x0, x0, #0xd58
    4f1c:	mov	w20, #0x0                   	// #0
    4f20:	bl	44a0 <PySys_Audit@plt>
    4f24:	tbz	w0, #31, 4ea0 <PySequence_Fast@plt+0x790>
    4f28:	mov	x0, #0x0                   	// #0
    4f2c:	ldp	x19, x20, [sp, #16]
    4f30:	ldp	x29, x30, [sp], #144
    4f34:	ret
    4f38:	ldr	x0, [sp, #64]
    4f3c:	ldr	x1, [sp, #80]
    4f40:	bl	4460 <sethostname@plt>
    4f44:	mov	w19, w0
    4f48:	mov	x0, x21
    4f4c:	bl	4100 <PyBuffer_Release@plt>
    4f50:	cbz	w20, 4edc <PySequence_Fast@plt+0x7cc>
    4f54:	ldr	x0, [sp, #56]
    4f58:	ldr	x1, [x0]
    4f5c:	sub	x1, x1, #0x1
    4f60:	str	x1, [x0]
    4f64:	cbnz	x1, 4edc <PySequence_Fast@plt+0x7cc>
    4f68:	bl	4180 <_Py_Dealloc@plt>
    4f6c:	b	4edc <PySequence_Fast@plt+0x7cc>
    4f70:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    4f74:	ldr	x0, [x0, #3984]
    4f78:	ldr	x0, [x0]
    4f7c:	bl	40e0 <PyErr_SetFromErrno@plt>
    4f80:	ldp	x19, x20, [sp, #16]
    4f84:	ldr	x21, [sp, #32]
    4f88:	ldp	x29, x30, [sp], #144
    4f8c:	ret
    4f90:	stp	x29, x30, [sp, #-64]!
    4f94:	mov	x29, sp
    4f98:	stp	x19, x20, [sp, #16]
    4f9c:	mov	x19, x0
    4fa0:	add	x2, sp, #0x38
    4fa4:	add	x0, sp, #0x28
    4fa8:	add	x1, sp, #0x30
    4fac:	bl	4540 <PyErr_Fetch@plt>
    4fb0:	ldr	w0, [x19, #16]
    4fb4:	cmn	w0, #0x1
    4fb8:	b.ne	4fd4 <PySequence_Fast@plt+0x8c4>  // b.any
    4fbc:	ldp	x0, x1, [sp, #40]
    4fc0:	ldr	x2, [sp, #56]
    4fc4:	bl	4090 <PyErr_Restore@plt>
    4fc8:	ldp	x19, x20, [sp, #16]
    4fcc:	ldp	x29, x30, [sp], #64
    4fd0:	ret
    4fd4:	adrp	x2, e000 <PyInit__socket@@Base+0xe80>
    4fd8:	mov	x3, x19
    4fdc:	add	x2, x2, #0xd70
    4fe0:	mov	x0, x19
    4fe4:	mov	x1, #0x1                   	// #1
    4fe8:	bl	4430 <PyErr_ResourceWarning@plt>
    4fec:	cbnz	w0, 502c <PySequence_Fast@plt+0x91c>
    4ff0:	ldr	w20, [x19, #16]
    4ff4:	mov	w0, #0xffffffff            	// #-1
    4ff8:	str	w0, [x19, #16]
    4ffc:	bl	4570 <PyEval_SaveThread@plt>
    5000:	mov	x19, x0
    5004:	mov	w0, w20
    5008:	bl	4380 <close@plt>
    500c:	mov	x0, x19
    5010:	bl	40c0 <PyEval_RestoreThread@plt>
    5014:	ldp	x0, x1, [sp, #40]
    5018:	ldr	x2, [sp, #56]
    501c:	bl	4090 <PyErr_Restore@plt>
    5020:	ldp	x19, x20, [sp, #16]
    5024:	ldp	x29, x30, [sp], #64
    5028:	ret
    502c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5030:	ldr	x0, [x0, #3952]
    5034:	ldr	x0, [x0]
    5038:	bl	4250 <PyErr_ExceptionMatches@plt>
    503c:	cbz	w0, 4ff0 <PySequence_Fast@plt+0x8e0>
    5040:	mov	x0, x19
    5044:	bl	46f0 <PyErr_WriteUnraisable@plt>
    5048:	b	4ff0 <PySequence_Fast@plt+0x8e0>
    504c:	nop
    5050:	stp	x29, x30, [sp, #-48]!
    5054:	mov	w2, #0x4                   	// #4
    5058:	mov	w1, #0x1                   	// #1
    505c:	mov	x29, sp
    5060:	ldr	w0, [x0, #16]
    5064:	add	x4, sp, #0x2c
    5068:	add	x3, sp, #0x28
    506c:	stp	x19, x20, [sp, #16]
    5070:	mov	w19, #0x0                   	// #0
    5074:	str	w2, [sp, #44]
    5078:	bl	4530 <getsockopt@plt>
    507c:	cbnz	w0, 5094 <PySequence_Fast@plt+0x984>
    5080:	ldr	w20, [sp, #40]
    5084:	mov	w19, #0x1                   	// #1
    5088:	cmp	w20, #0x6a
    508c:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    5090:	b.ne	50a4 <PySequence_Fast@plt+0x994>  // b.any
    5094:	mov	w0, w19
    5098:	ldp	x19, x20, [sp, #16]
    509c:	ldp	x29, x30, [sp], #48
    50a0:	ret
    50a4:	mov	w19, w0
    50a8:	bl	4660 <__errno_location@plt>
    50ac:	str	w20, [x0]
    50b0:	mov	w0, w19
    50b4:	ldp	x19, x20, [sp, #16]
    50b8:	ldp	x29, x30, [sp], #48
    50bc:	ret
    50c0:	b	42e0 <PyLong_FromSsize_t@plt>
    50c4:	nop
    50c8:	stp	x29, x30, [sp, #-32]!
    50cc:	mov	x29, sp
    50d0:	str	x19, [sp, #16]
    50d4:	mov	x19, x1
    50d8:	mov	x1, x0
    50dc:	ldr	x0, [x19]
    50e0:	ldr	x2, [x0, #16]
    50e4:	cmp	x2, x1
    50e8:	b.gt	5104 <PySequence_Fast@plt+0x9f4>
    50ec:	ldr	x1, [x0]
    50f0:	ldr	x19, [sp, #16]
    50f4:	add	x1, x1, #0x1
    50f8:	str	x1, [x0]
    50fc:	ldp	x29, x30, [sp], #32
    5100:	ret
    5104:	mov	x0, x19
    5108:	bl	4080 <_PyBytes_Resize@plt>
    510c:	ldr	x0, [x19]
    5110:	cbnz	x0, 50ec <PySequence_Fast@plt+0x9dc>
    5114:	ldr	x19, [sp, #16]
    5118:	ldp	x29, x30, [sp], #32
    511c:	ret
    5120:	stp	x29, x30, [sp, #-64]!
    5124:	mov	x29, sp
    5128:	stp	x19, x20, [sp, #16]
    512c:	add	x20, sp, #0x2c
    5130:	mov	x19, x0
    5134:	mov	x4, x20
    5138:	mov	x0, x1
    513c:	add	x3, sp, #0x28
    5140:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5144:	add	x2, sp, #0x24
    5148:	add	x1, x1, #0xd80
    514c:	stp	wzr, wzr, [sp, #44]
    5150:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    5154:	cbz	w0, 5210 <PySequence_Fast@plt+0xb00>
    5158:	ldr	w1, [sp, #44]
    515c:	ldr	w0, [x19, #20]
    5160:	cmp	w0, #0x28
    5164:	cbz	w1, 51c0 <PySequence_Fast@plt+0xab0>
    5168:	b.eq	5278 <PySequence_Fast@plt+0xb68>  // b.none
    516c:	sub	w0, w1, #0x1
    5170:	cmp	w0, #0x3ff
    5174:	b.hi	51f8 <PySequence_Fast@plt+0xae8>  // b.pmore
    5178:	mov	w1, w1
    517c:	mov	x0, #0x0                   	// #0
    5180:	bl	4120 <PyBytes_FromStringAndSize@plt>
    5184:	str	x0, [sp, #56]
    5188:	cbz	x0, 5210 <PySequence_Fast@plt+0xb00>
    518c:	add	x3, x0, #0x20
    5190:	ldr	w0, [x19, #16]
    5194:	ldp	w1, w2, [sp, #36]
    5198:	mov	x4, x20
    519c:	bl	4530 <getsockopt@plt>
    51a0:	tbnz	w0, #31, 5220 <PySequence_Fast@plt+0xb10>
    51a4:	ldr	w1, [sp, #44]
    51a8:	add	x0, sp, #0x38
    51ac:	bl	4080 <_PyBytes_Resize@plt>
    51b0:	ldp	x19, x20, [sp, #16]
    51b4:	ldr	x0, [sp, #56]
    51b8:	ldp	x29, x30, [sp], #64
    51bc:	ret
    51c0:	ldr	w0, [x19, #16]
    51c4:	ldp	w1, w2, [sp, #36]
    51c8:	b.eq	5250 <PySequence_Fast@plt+0xb40>  // b.none
    51cc:	mov	w5, #0x4                   	// #4
    51d0:	add	x4, sp, #0x34
    51d4:	add	x3, sp, #0x30
    51d8:	str	w5, [sp, #52]
    51dc:	bl	4530 <getsockopt@plt>
    51e0:	tbz	w0, #31, 523c <PySequence_Fast@plt+0xb2c>
    51e4:	ldr	x0, [x19, #32]
    51e8:	blr	x0
    51ec:	ldp	x19, x20, [sp, #16]
    51f0:	ldp	x29, x30, [sp], #64
    51f4:	ret
    51f8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    51fc:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5200:	add	x1, x1, #0xdb8
    5204:	ldr	x0, [x0, #3984]
    5208:	ldr	x0, [x0]
    520c:	bl	41d0 <PyErr_SetString@plt>
    5210:	mov	x0, #0x0                   	// #0
    5214:	ldp	x19, x20, [sp, #16]
    5218:	ldp	x29, x30, [sp], #64
    521c:	ret
    5220:	ldr	x0, [sp, #56]
    5224:	ldr	x1, [x0]
    5228:	sub	x1, x1, #0x1
    522c:	str	x1, [x0]
    5230:	cbnz	x1, 51e4 <PySequence_Fast@plt+0xad4>
    5234:	bl	4180 <_Py_Dealloc@plt>
    5238:	b	51e4 <PySequence_Fast@plt+0xad4>
    523c:	ldrsw	x0, [sp, #48]
    5240:	bl	4310 <PyLong_FromLong@plt>
    5244:	ldp	x19, x20, [sp, #16]
    5248:	ldp	x29, x30, [sp], #64
    524c:	ret
    5250:	mov	w5, #0x8                   	// #8
    5254:	add	x4, sp, #0x34
    5258:	add	x3, sp, #0x38
    525c:	str	w5, [sp, #52]
    5260:	str	xzr, [sp, #56]
    5264:	bl	4530 <getsockopt@plt>
    5268:	tbnz	w0, #31, 51e4 <PySequence_Fast@plt+0xad4>
    526c:	ldr	x0, [sp, #56]
    5270:	bl	4500 <PyLong_FromUnsignedLong@plt>
    5274:	b	51ec <PySequence_Fast@plt+0xadc>
    5278:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    527c:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5280:	add	x1, x1, #0xd90
    5284:	ldr	x0, [x0, #3984]
    5288:	ldr	x0, [x0]
    528c:	bl	41d0 <PyErr_SetString@plt>
    5290:	mov	x0, #0x0                   	// #0
    5294:	b	51ec <PySequence_Fast@plt+0xadc>
    5298:	stp	x29, x30, [sp, #-176]!
    529c:	mov	x29, sp
    52a0:	stp	x19, x20, [sp, #16]
    52a4:	mov	x19, x0
    52a8:	ldr	w0, [x0, #20]
    52ac:	stp	x21, x22, [sp, #32]
    52b0:	mov	x20, x1
    52b4:	cmp	w0, #0x28
    52b8:	b.eq	53d8 <PySequence_Fast@plt+0xcc8>  // b.none
    52bc:	add	x22, sp, #0x4c
    52c0:	add	x21, sp, #0x48
    52c4:	str	x23, [sp, #48]
    52c8:	add	x23, sp, #0x50
    52cc:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    52d0:	mov	x3, x22
    52d4:	mov	x2, x21
    52d8:	mov	x0, x20
    52dc:	add	x1, x1, #0xde8
    52e0:	mov	x4, x23
    52e4:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    52e8:	cbnz	w0, 53a0 <PySequence_Fast@plt+0xc90>
    52ec:	bl	4350 <PyErr_Clear@plt>
    52f0:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    52f4:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    52f8:	add	x6, sp, #0x54
    52fc:	add	x1, x1, #0xdf8
    5300:	ldr	x4, [x4, #4024]
    5304:	add	x5, sp, #0x58
    5308:	mov	x3, x22
    530c:	mov	x2, x21
    5310:	mov	x0, x20
    5314:	ldr	x4, [x4, #8]
    5318:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    531c:	cbnz	w0, 5420 <PySequence_Fast@plt+0xd10>
    5320:	bl	4350 <PyErr_Clear@plt>
    5324:	add	x23, sp, #0x60
    5328:	mov	x3, x22
    532c:	mov	x2, x21
    5330:	mov	x0, x20
    5334:	mov	x4, x23
    5338:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    533c:	add	x1, x1, #0xe10
    5340:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    5344:	mov	w1, w0
    5348:	mov	x0, #0x0                   	// #0
    534c:	cbz	w1, 5440 <PySequence_Fast@plt+0xd30>
    5350:	ldp	w1, w2, [sp, #72]
    5354:	ldr	w4, [sp, #112]
    5358:	ldr	w0, [x19, #16]
    535c:	ldr	x3, [sp, #96]
    5360:	bl	41e0 <setsockopt@plt>
    5364:	mov	w20, w0
    5368:	mov	x0, x23
    536c:	bl	4100 <PyBuffer_Release@plt>
    5370:	ldr	x23, [sp, #48]
    5374:	tbnz	w20, #31, 53c0 <PySequence_Fast@plt+0xcb0>
    5378:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    537c:	ldr	x1, [x1, #4024]
    5380:	mov	x0, x1
    5384:	ldr	x2, [x1]
    5388:	add	x2, x2, #0x1
    538c:	str	x2, [x1]
    5390:	ldp	x19, x20, [sp, #16]
    5394:	ldp	x21, x22, [sp, #32]
    5398:	ldp	x29, x30, [sp], #176
    539c:	ret
    53a0:	ldr	w0, [x19, #16]
    53a4:	mov	x3, x23
    53a8:	ldp	w1, w2, [sp, #72]
    53ac:	mov	w4, #0x4                   	// #4
    53b0:	bl	41e0 <setsockopt@plt>
    53b4:	mov	w20, w0
    53b8:	ldr	x23, [sp, #48]
    53bc:	tbz	w20, #31, 5378 <PySequence_Fast@plt+0xc68>
    53c0:	ldr	x0, [x19, #32]
    53c4:	blr	x0
    53c8:	ldp	x19, x20, [sp, #16]
    53cc:	ldp	x21, x22, [sp, #32]
    53d0:	ldp	x29, x30, [sp], #176
    53d4:	ret
    53d8:	add	x21, sp, #0x60
    53dc:	mov	x0, x1
    53e0:	mov	x4, x21
    53e4:	add	x3, sp, #0x4c
    53e8:	add	x2, sp, #0x48
    53ec:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    53f0:	add	x1, x1, #0xdd8
    53f4:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    53f8:	mov	w1, w0
    53fc:	mov	x0, #0x0                   	// #0
    5400:	cbz	w1, 5390 <PySequence_Fast@plt+0xc80>
    5404:	ldr	w0, [x19, #16]
    5408:	mov	x3, x21
    540c:	ldp	w1, w2, [sp, #72]
    5410:	mov	w4, #0x8                   	// #8
    5414:	bl	41e0 <setsockopt@plt>
    5418:	mov	w20, w0
    541c:	b	5374 <PySequence_Fast@plt+0xc64>
    5420:	ldr	w0, [x19, #16]
    5424:	mov	x3, #0x0                   	// #0
    5428:	ldp	w1, w2, [sp, #72]
    542c:	ldr	w4, [sp, #84]
    5430:	bl	41e0 <setsockopt@plt>
    5434:	mov	w20, w0
    5438:	ldr	x23, [sp, #48]
    543c:	b	5374 <PySequence_Fast@plt+0xc64>
    5440:	ldr	x23, [sp, #48]
    5444:	b	5390 <PySequence_Fast@plt+0xc80>
    5448:	stp	x29, x30, [sp, #-32]!
    544c:	mov	x29, sp
    5450:	ldr	w3, [x1, #16]
    5454:	ldr	w0, [x0, #16]
    5458:	str	x19, [sp, #16]
    545c:	mov	x19, x1
    5460:	ldp	x1, x2, [x1]
    5464:	bl	4450 <send@plt>
    5468:	str	x0, [x19, #24]
    546c:	mvn	x0, x0
    5470:	ldr	x19, [sp, #16]
    5474:	lsr	x0, x0, #63
    5478:	ldp	x29, x30, [sp], #32
    547c:	ret
    5480:	mov	x4, x0
    5484:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5488:	add	x0, x1, #0xe20
    548c:	ldp	w2, w3, [x4, #20]
    5490:	ldrsw	x1, [x4, #16]
    5494:	ldr	w4, [x4, #28]
    5498:	b	3fb0 <PyUnicode_FromFormat@plt>
    549c:	nop
    54a0:	stp	x29, x30, [sp, #-32]!
    54a4:	mov	x29, sp
    54a8:	str	x19, [sp, #16]
    54ac:	mov	x19, x0
    54b0:	bl	42b0 <PyObject_CallFinalizerFromDealloc@plt>
    54b4:	tbnz	w0, #31, 54d4 <PySequence_Fast@plt+0xdc4>
    54b8:	ldr	x1, [x19, #8]
    54bc:	mov	x0, x19
    54c0:	ldr	x19, [sp, #16]
    54c4:	ldp	x29, x30, [sp], #32
    54c8:	ldr	x1, [x1, #320]
    54cc:	mov	x16, x1
    54d0:	br	x16
    54d4:	ldr	x19, [sp, #16]
    54d8:	ldp	x29, x30, [sp], #32
    54dc:	ret
    54e0:	ldr	x0, [x0, #40]
    54e4:	cbz	x0, 5504 <PySequence_Fast@plt+0xdf4>
    54e8:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    54ec:	ldr	x1, [x1, #4032]
    54f0:	mov	x0, x1
    54f4:	ldr	x2, [x1]
    54f8:	add	x2, x2, #0x1
    54fc:	str	x2, [x1]
    5500:	ret
    5504:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    5508:	ldr	x1, [x1, #3992]
    550c:	mov	x0, x1
    5510:	ldr	x2, [x1]
    5514:	add	x2, x2, #0x1
    5518:	str	x2, [x1]
    551c:	ret
    5520:	stp	x29, x30, [sp, #-32]!
    5524:	mov	x0, x1
    5528:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    552c:	mov	x29, sp
    5530:	add	x1, x1, #0xe58
    5534:	add	x2, sp, #0x18
    5538:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    553c:	cbz	w0, 5584 <PySequence_Fast@plt+0xe74>
    5540:	ldr	x0, [sp, #24]
    5544:	mov	x1, #0x7ffffff0            	// #2147483632
    5548:	cmp	x0, x1
    554c:	b.cs	5560 <PySequence_Fast@plt+0xe50>  // b.hs, b.nlast
    5550:	add	x0, x0, #0x10
    5554:	bl	41c0 <PyLong_FromSize_t@plt>
    5558:	ldp	x29, x30, [sp], #32
    555c:	ret
    5560:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5564:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5568:	add	x1, x1, #0xe68
    556c:	ldr	x0, [x0, #4008]
    5570:	ldr	x0, [x0]
    5574:	bl	4620 <PyErr_Format@plt>
    5578:	mov	x0, #0x0                   	// #0
    557c:	ldp	x29, x30, [sp], #32
    5580:	ret
    5584:	mov	x0, #0x0                   	// #0
    5588:	ldp	x29, x30, [sp], #32
    558c:	ret
    5590:	stp	x29, x30, [sp, #-64]!
    5594:	mov	x0, x1
    5598:	mov	x29, sp
    559c:	stp	x19, x20, [sp, #16]
    55a0:	bl	44e0 <PyLong_AsUnsignedLong@plt>
    55a4:	cmn	x0, #0x1
    55a8:	b.eq	55dc <PySequence_Fast@plt+0xecc>  // b.none
    55ac:	add	x20, sp, #0x28
    55b0:	mov	x1, x20
    55b4:	bl	4260 <if_indextoname@plt>
    55b8:	mov	x19, x0
    55bc:	cbz	x0, 55f0 <PySequence_Fast@plt+0xee0>
    55c0:	mov	x0, x20
    55c4:	bl	4520 <PyUnicode_DecodeFSDefault@plt>
    55c8:	mov	x19, x0
    55cc:	mov	x0, x19
    55d0:	ldp	x19, x20, [sp, #16]
    55d4:	ldp	x29, x30, [sp], #64
    55d8:	ret
    55dc:	mov	x19, #0x0                   	// #0
    55e0:	mov	x0, x19
    55e4:	ldp	x19, x20, [sp, #16]
    55e8:	ldp	x29, x30, [sp], #64
    55ec:	ret
    55f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    55f4:	ldr	x0, [x0, #3984]
    55f8:	ldr	x0, [x0]
    55fc:	bl	40e0 <PyErr_SetFromErrno@plt>
    5600:	b	55cc <PySequence_Fast@plt+0xebc>
    5604:	nop
    5608:	stp	x29, x30, [sp, #-48]!
    560c:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    5610:	mov	x0, x1
    5614:	mov	x29, sp
    5618:	ldr	x2, [x2, #3936]
    561c:	add	x3, sp, #0x28
    5620:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5624:	add	x1, x1, #0xe90
    5628:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    562c:	mov	w1, w0
    5630:	mov	x0, #0x0                   	// #0
    5634:	cbz	w1, 5670 <PySequence_Fast@plt+0xf60>
    5638:	ldr	x0, [sp, #40]
    563c:	str	x19, [sp, #16]
    5640:	add	x0, x0, #0x20
    5644:	bl	45c0 <if_nametoindex@plt>
    5648:	ldr	x2, [sp, #40]
    564c:	mov	w19, w0
    5650:	ldr	x1, [x2]
    5654:	sub	x1, x1, #0x1
    5658:	str	x1, [x2]
    565c:	cbz	x1, 5678 <PySequence_Fast@plt+0xf68>
    5660:	cbz	x19, 5684 <PySequence_Fast@plt+0xf74>
    5664:	mov	x0, x19
    5668:	bl	4500 <PyLong_FromUnsignedLong@plt>
    566c:	ldr	x19, [sp, #16]
    5670:	ldp	x29, x30, [sp], #48
    5674:	ret
    5678:	mov	x0, x2
    567c:	bl	4180 <_Py_Dealloc@plt>
    5680:	cbnz	x19, 5664 <PySequence_Fast@plt+0xf54>
    5684:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5688:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    568c:	add	x1, x1, #0xea8
    5690:	ldr	x0, [x0, #3984]
    5694:	ldr	x0, [x0]
    5698:	bl	41d0 <PyErr_SetString@plt>
    569c:	mov	x0, #0x0                   	// #0
    56a0:	ldr	x19, [sp, #16]
    56a4:	ldp	x29, x30, [sp], #48
    56a8:	ret
    56ac:	nop
    56b0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    56b4:	ldr	x0, [x0, #968]
    56b8:	tbz	x0, #63, 56d4 <PySequence_Fast@plt+0xfc4>
    56bc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    56c0:	ldr	x0, [x0, #4024]
    56c4:	ldr	x1, [x0]
    56c8:	add	x1, x1, #0x1
    56cc:	str	x1, [x0]
    56d0:	ret
    56d4:	stp	x29, x30, [sp, #-16]!
    56d8:	mov	x29, sp
    56dc:	bl	41f0 <_PyTime_AsSecondsDouble@plt>
    56e0:	ldp	x29, x30, [sp], #16
    56e4:	b	42f0 <PyFloat_FromDouble@plt>
    56e8:	stp	x29, x30, [sp, #-32]!
    56ec:	mov	x0, x1
    56f0:	mov	x29, sp
    56f4:	stp	x19, x20, [sp, #16]
    56f8:	bl	43e0 <PyLong_AsLong@plt>
    56fc:	mov	x19, x0
    5700:	cmn	w0, #0x1
    5704:	b.eq	5774 <PySequence_Fast@plt+0x1064>  // b.none
    5708:	bl	4570 <PyEval_SaveThread@plt>
    570c:	mov	x20, x0
    5710:	mov	w0, w19
    5714:	bl	4380 <close@plt>
    5718:	mov	w19, w0
    571c:	mov	x0, x20
    5720:	bl	40c0 <PyEval_RestoreThread@plt>
    5724:	tbnz	w19, #31, 574c <PySequence_Fast@plt+0x103c>
    5728:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    572c:	ldp	x19, x20, [sp, #16]
    5730:	ldr	x1, [x1, #4024]
    5734:	mov	x0, x1
    5738:	ldr	x2, [x1]
    573c:	add	x2, x2, #0x1
    5740:	str	x2, [x1]
    5744:	ldp	x29, x30, [sp], #32
    5748:	ret
    574c:	bl	4660 <__errno_location@plt>
    5750:	ldr	w0, [x0]
    5754:	cmp	w0, #0x68
    5758:	b.eq	5728 <PySequence_Fast@plt+0x1018>  // b.none
    575c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5760:	ldp	x19, x20, [sp, #16]
    5764:	ldr	x0, [x0, #3984]
    5768:	ldp	x29, x30, [sp], #32
    576c:	ldr	x0, [x0]
    5770:	b	40e0 <PyErr_SetFromErrno@plt>
    5774:	bl	43c0 <PyErr_Occurred@plt>
    5778:	cbz	x0, 5708 <PySequence_Fast@plt+0xff8>
    577c:	mov	x0, #0x0                   	// #0
    5780:	ldp	x19, x20, [sp, #16]
    5784:	ldp	x29, x30, [sp], #32
    5788:	ret
    578c:	nop
    5790:	ldr	x2, [x1, #8]
    5794:	mov	x0, x1
    5798:	ldr	x1, [x2, #168]
    579c:	tbz	w1, #24, 57ec <PySequence_Fast@plt+0x10dc>
    57a0:	stp	x29, x30, [sp, #-16]!
    57a4:	mov	x29, sp
    57a8:	bl	44e0 <PyLong_AsUnsignedLong@plt>
    57ac:	cmn	x0, #0x1
    57b0:	b.eq	57c8 <PySequence_Fast@plt+0x10b8>  // b.none
    57b4:	tst	x0, #0xffffffff00000000
    57b8:	b.ne	57d0 <PySequence_Fast@plt+0x10c0>  // b.any
    57bc:	ldp	x29, x30, [sp], #16
    57c0:	rev	w0, w0
    57c4:	b	4500 <PyLong_FromUnsignedLong@plt>
    57c8:	bl	43c0 <PyErr_Occurred@plt>
    57cc:	cbnz	x0, 5808 <PySequence_Fast@plt+0x10f8>
    57d0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    57d4:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    57d8:	ldp	x29, x30, [sp], #16
    57dc:	add	x1, x1, #0xec8
    57e0:	ldr	x0, [x0, #4008]
    57e4:	ldr	x0, [x0]
    57e8:	b	4620 <PyErr_Format@plt>
    57ec:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    57f0:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    57f4:	ldr	x2, [x2, #24]
    57f8:	add	x1, x1, #0xee0
    57fc:	ldr	x0, [x0, #3976]
    5800:	ldr	x0, [x0]
    5804:	b	4620 <PyErr_Format@plt>
    5808:	mov	x0, #0x0                   	// #0
    580c:	ldp	x29, x30, [sp], #16
    5810:	ret
    5814:	nop
    5818:	stp	x29, x30, [sp, #-112]!
    581c:	mov	x29, sp
    5820:	stp	x19, x20, [sp, #16]
    5824:	mov	x19, x1
    5828:	ldrh	w1, [x1]
    582c:	cmp	w1, #0x1d
    5830:	b.eq	59b8 <PySequence_Fast@plt+0x12a8>  // b.none
    5834:	b.hi	58a0 <PySequence_Fast@plt+0x1190>  // b.pmore
    5838:	cmp	w1, #0xa
    583c:	b.eq	5a08 <PySequence_Fast@plt+0x12f8>  // b.none
    5840:	b.ls	593c <PySequence_Fast@plt+0x122c>  // b.plast
    5844:	cmp	w1, #0x10
    5848:	b.eq	58b4 <PySequence_Fast@plt+0x11a4>  // b.none
    584c:	cmp	w1, #0x11
    5850:	b.ne	59ec <PySequence_Fast@plt+0x12dc>  // b.any
    5854:	ldr	w3, [x19, #4]
    5858:	cbnz	w3, 5afc <PySequence_Fast@plt+0x13ec>
    585c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5860:	add	x1, x1, #0x918
    5864:	ldrb	w6, [x19, #11]
    5868:	add	x5, x19, #0xc
    586c:	ldrh	w4, [x19, #8]
    5870:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5874:	ldrb	w3, [x19, #10]
    5878:	add	x0, x0, #0xf10
    587c:	ldrh	w2, [x19, #2]
    5880:	rev16	w2, w2
    5884:	and	w2, w2, #0xffff
    5888:	bl	4640 <_Py_BuildValue_SizeT@plt>
    588c:	mov	x20, x0
    5890:	mov	x0, x20
    5894:	ldp	x19, x20, [sp, #16]
    5898:	ldp	x29, x30, [sp], #112
    589c:	ret
    58a0:	cmp	w1, #0x28
    58a4:	b.eq	5ac4 <PySequence_Fast@plt+0x13b4>  // b.none
    58a8:	b.ls	58d8 <PySequence_Fast@plt+0x11c8>  // b.plast
    58ac:	cmp	w1, #0x2a
    58b0:	b.ne	59ec <PySequence_Fast@plt+0x12dc>  // b.any
    58b4:	ldp	w1, w2, [x19, #4]
    58b8:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    58bc:	add	x0, x0, #0xf00
    58c0:	bl	4640 <_Py_BuildValue_SizeT@plt>
    58c4:	mov	x20, x0
    58c8:	mov	x0, x20
    58cc:	ldp	x19, x20, [sp, #16]
    58d0:	ldp	x29, x30, [sp], #112
    58d4:	ret
    58d8:	cmp	w1, #0x1e
    58dc:	b.eq	5a68 <PySequence_Fast@plt+0x1358>  // b.none
    58e0:	cmp	w1, #0x26
    58e4:	b.ne	59ec <PySequence_Fast@plt+0x12dc>  // b.any
    58e8:	stp	x21, x22, [sp, #32]
    58ec:	add	x21, x19, #0x2
    58f0:	add	x22, x19, #0x18
    58f4:	mov	x0, x21
    58f8:	mov	x1, #0xe                   	// #14
    58fc:	bl	40b0 <strnlen@plt>
    5900:	mov	x20, x0
    5904:	mov	x1, #0x40                  	// #64
    5908:	mov	x0, x22
    590c:	bl	40b0 <strnlen@plt>
    5910:	mov	x4, x0
    5914:	ldp	w5, w6, [x19, #16]
    5918:	mov	x2, x20
    591c:	mov	x3, x22
    5920:	mov	x1, x21
    5924:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5928:	add	x0, x0, #0xf48
    592c:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5930:	mov	x20, x0
    5934:	ldp	x21, x22, [sp, #32]
    5938:	b	5890 <PySequence_Fast@plt+0x1180>
    593c:	cmp	w1, #0x1
    5940:	b.eq	5aa4 <PySequence_Fast@plt+0x1394>  // b.none
    5944:	cmp	w1, #0x2
    5948:	b.ne	59ec <PySequence_Fast@plt+0x12dc>  // b.any
    594c:	stp	x21, x22, [sp, #32]
    5950:	add	x21, sp, #0x40
    5954:	mov	w0, w1
    5958:	mov	x2, x21
    595c:	add	x1, x19, #0x4
    5960:	mov	w3, #0x10                  	// #16
    5964:	bl	46e0 <inet_ntop@plt>
    5968:	mov	x20, x0
    596c:	cbz	x0, 5b28 <PySequence_Fast@plt+0x1418>
    5970:	mov	x0, x21
    5974:	bl	4550 <PyUnicode_FromString@plt>
    5978:	mov	x21, x0
    597c:	cbz	x0, 5b50 <PySequence_Fast@plt+0x1440>
    5980:	ldrh	w2, [x19, #2]
    5984:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5988:	mov	x1, x21
    598c:	add	x0, x0, #0xef8
    5990:	rev16	w2, w2
    5994:	and	w2, w2, #0xffff
    5998:	bl	4640 <_Py_BuildValue_SizeT@plt>
    599c:	ldr	x1, [x21]
    59a0:	mov	x20, x0
    59a4:	sub	x0, x1, #0x1
    59a8:	str	x0, [x21]
    59ac:	cbz	x0, 5b40 <PySequence_Fast@plt+0x1430>
    59b0:	ldp	x21, x22, [sp, #32]
    59b4:	b	5890 <PySequence_Fast@plt+0x1180>
    59b8:	ldr	w4, [x19, #4]
    59bc:	cbnz	w4, 5b78 <PySequence_Fast@plt+0x1468>
    59c0:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    59c4:	add	x2, x2, #0x918
    59c8:	cmp	w3, #0x6
    59cc:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    59d0:	b.eq	5b5c <PySequence_Fast@plt+0x144c>  // b.none
    59d4:	ldr	x1, [x1, #4048]
    59d8:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    59dc:	add	x0, x0, #0xf40
    59e0:	bl	4640 <_Py_BuildValue_SizeT@plt>
    59e4:	mov	x20, x0
    59e8:	b	5890 <PySequence_Fast@plt+0x1180>
    59ec:	add	x2, x19, #0x2
    59f0:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    59f4:	mov	x3, #0xe                   	// #14
    59f8:	add	x0, x0, #0xf50
    59fc:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5a00:	mov	x20, x0
    5a04:	b	5890 <PySequence_Fast@plt+0x1180>
    5a08:	stp	x21, x22, [sp, #32]
    5a0c:	add	x21, sp, #0x40
    5a10:	mov	w0, w1
    5a14:	mov	x2, x21
    5a18:	add	x1, x19, #0x8
    5a1c:	mov	w3, #0x2e                  	// #46
    5a20:	bl	46e0 <inet_ntop@plt>
    5a24:	mov	x20, x0
    5a28:	cbz	x0, 5b28 <PySequence_Fast@plt+0x1418>
    5a2c:	mov	x0, x21
    5a30:	bl	4550 <PyUnicode_FromString@plt>
    5a34:	mov	x21, x0
    5a38:	cbz	x0, 5b50 <PySequence_Fast@plt+0x1440>
    5a3c:	ldr	w4, [x19, #24]
    5a40:	mov	x1, x21
    5a44:	ldrh	w2, [x19, #2]
    5a48:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5a4c:	ldr	w3, [x19, #4]
    5a50:	add	x0, x0, #0xf08
    5a54:	rev16	w2, w2
    5a58:	and	w2, w2, #0xffff
    5a5c:	rev	w3, w3
    5a60:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5a64:	b	599c <PySequence_Fast@plt+0x128c>
    5a68:	ldrb	w1, [x19, #2]
    5a6c:	cmp	w1, #0x1
    5a70:	b.eq	5ba0 <PySequence_Fast@plt+0x1490>  // b.none
    5a74:	cmp	w1, #0x2
    5a78:	b.eq	5bc0 <PySequence_Fast@plt+0x14b0>  // b.none
    5a7c:	cmp	w1, #0x3
    5a80:	b.ne	5adc <PySequence_Fast@plt+0x13cc>  // b.any
    5a84:	ldrsb	w5, [x19, #3]
    5a88:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5a8c:	ldp	w3, w2, [x19, #4]
    5a90:	add	x0, x0, #0xf18
    5a94:	mov	w4, #0x0                   	// #0
    5a98:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5a9c:	mov	x20, x0
    5aa0:	b	5890 <PySequence_Fast@plt+0x1180>
    5aa4:	subs	x1, x2, #0x2
    5aa8:	add	x0, x19, #0x2
    5aac:	b.eq	5ab8 <PySequence_Fast@plt+0x13a8>  // b.none
    5ab0:	ldrb	w2, [x19, #2]
    5ab4:	cbz	w2, 5b1c <PySequence_Fast@plt+0x140c>
    5ab8:	bl	4520 <PyUnicode_DecodeFSDefault@plt>
    5abc:	mov	x20, x0
    5ac0:	b	5890 <PySequence_Fast@plt+0x1180>
    5ac4:	ldp	w2, w1, [x19, #4]
    5ac8:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5acc:	add	x0, x0, #0xf00
    5ad0:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5ad4:	mov	x20, x0
    5ad8:	b	5890 <PySequence_Fast@plt+0x1180>
    5adc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5ae0:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5ae4:	mov	x20, #0x0                   	// #0
    5ae8:	add	x1, x1, #0xf20
    5aec:	ldr	x0, [x0, #3960]
    5af0:	ldr	x0, [x0]
    5af4:	bl	41d0 <PyErr_SetString@plt>
    5af8:	b	5890 <PySequence_Fast@plt+0x1180>
    5afc:	add	x20, sp, #0x40
    5b00:	mov	x1, #0x8910                	// #35088
    5b04:	mov	x2, x20
    5b08:	str	w3, [sp, #80]
    5b0c:	bl	4700 <ioctl@plt>
    5b10:	mov	x1, x20
    5b14:	cbz	w0, 5864 <PySequence_Fast@plt+0x1154>
    5b18:	b	585c <PySequence_Fast@plt+0x114c>
    5b1c:	bl	4120 <PyBytes_FromStringAndSize@plt>
    5b20:	mov	x20, x0
    5b24:	b	5890 <PySequence_Fast@plt+0x1180>
    5b28:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5b2c:	ldr	x0, [x0, #3984]
    5b30:	ldr	x0, [x0]
    5b34:	bl	40e0 <PyErr_SetFromErrno@plt>
    5b38:	ldp	x21, x22, [sp, #32]
    5b3c:	b	5890 <PySequence_Fast@plt+0x1180>
    5b40:	mov	x0, x21
    5b44:	bl	4180 <_Py_Dealloc@plt>
    5b48:	ldp	x21, x22, [sp, #32]
    5b4c:	b	5890 <PySequence_Fast@plt+0x1180>
    5b50:	mov	x20, #0x0                   	// #0
    5b54:	ldp	x21, x22, [sp, #32]
    5b58:	b	5890 <PySequence_Fast@plt+0x1180>
    5b5c:	ldr	x1, [x1, #4048]
    5b60:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5b64:	ldp	w3, w4, [x19, #8]
    5b68:	add	x0, x0, #0xf38
    5b6c:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5b70:	mov	x20, x0
    5b74:	b	5890 <PySequence_Fast@plt+0x1180>
    5b78:	add	x2, sp, #0x40
    5b7c:	mov	x1, #0x8910                	// #35088
    5b80:	mov	x20, x2
    5b84:	str	w3, [sp, #60]
    5b88:	str	w4, [sp, #80]
    5b8c:	bl	4700 <ioctl@plt>
    5b90:	ldr	w3, [sp, #60]
    5b94:	mov	x2, x20
    5b98:	cbz	w0, 59c8 <PySequence_Fast@plt+0x12b8>
    5b9c:	b	59c0 <PySequence_Fast@plt+0x12b0>
    5ba0:	ldrsb	w5, [x19, #3]
    5ba4:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5ba8:	ldp	w2, w3, [x19, #4]
    5bac:	add	x0, x0, #0xf18
    5bb0:	ldr	w4, [x19, #12]
    5bb4:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5bb8:	mov	x20, x0
    5bbc:	b	5890 <PySequence_Fast@plt+0x1180>
    5bc0:	ldp	w2, w4, [x19, #4]
    5bc4:	adrp	x0, e000 <PyInit__socket@@Base+0xe80>
    5bc8:	ldrsb	w5, [x19, #3]
    5bcc:	add	x0, x0, #0xf18
    5bd0:	mov	w3, w4
    5bd4:	bl	4640 <_Py_BuildValue_SizeT@plt>
    5bd8:	mov	x20, x0
    5bdc:	b	5890 <PySequence_Fast@plt+0x1180>
    5be0:	stp	x29, x30, [sp, #-48]!
    5be4:	mov	x0, x1
    5be8:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5bec:	mov	x29, sp
    5bf0:	add	x1, x1, #0xf58
    5bf4:	add	x2, sp, #0x28
    5bf8:	stp	x19, x20, [sp, #16]
    5bfc:	mov	x19, #0x0                   	// #0
    5c00:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    5c04:	cbz	w0, 5c2c <PySequence_Fast@plt+0x151c>
    5c08:	ldr	x0, [sp, #40]
    5c0c:	add	x20, sp, #0x20
    5c10:	mov	x1, x20
    5c14:	bl	45b0 <inet_aton@plt>
    5c18:	cbz	w0, 5c3c <PySequence_Fast@plt+0x152c>
    5c1c:	mov	x0, x20
    5c20:	mov	x1, #0x4                   	// #4
    5c24:	bl	4120 <PyBytes_FromStringAndSize@plt>
    5c28:	mov	x19, x0
    5c2c:	mov	x0, x19
    5c30:	ldp	x19, x20, [sp, #16]
    5c34:	ldp	x29, x30, [sp], #48
    5c38:	ret
    5c3c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5c40:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5c44:	add	x1, x1, #0xf68
    5c48:	ldr	x0, [x0, #3984]
    5c4c:	ldr	x0, [x0]
    5c50:	bl	41d0 <PyErr_SetString@plt>
    5c54:	mov	x0, x19
    5c58:	ldp	x19, x20, [sp, #16]
    5c5c:	ldp	x29, x30, [sp], #48
    5c60:	ret
    5c64:	nop
    5c68:	stp	x29, x30, [sp, #-32]!
    5c6c:	mov	x0, x1
    5c70:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5c74:	mov	x29, sp
    5c78:	add	x1, x1, #0xf98
    5c7c:	add	x2, sp, #0x1c
    5c80:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    5c84:	cbz	w0, 5cec <PySequence_Fast@plt+0x15dc>
    5c88:	ldr	w0, [sp, #28]
    5c8c:	tbnz	w0, #31, 5cd4 <PySequence_Fast@plt+0x15c4>
    5c90:	mov	w1, #0xffff                	// #65535
    5c94:	cmp	w0, w1
    5c98:	b.le	5cc0 <PySequence_Fast@plt+0x15b0>
    5c9c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5ca0:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5ca4:	mov	x2, #0x1                   	// #1
    5ca8:	add	x1, x1, #0xfe8
    5cac:	ldr	x0, [x0, #3968]
    5cb0:	ldr	x0, [x0]
    5cb4:	bl	4160 <PyErr_WarnEx@plt>
    5cb8:	cbnz	w0, 5cec <PySequence_Fast@plt+0x15dc>
    5cbc:	ldr	w0, [sp, #28]
    5cc0:	rev16	w0, w0
    5cc4:	and	x0, x0, #0xffff
    5cc8:	bl	4500 <PyLong_FromUnsignedLong@plt>
    5ccc:	ldp	x29, x30, [sp], #32
    5cd0:	ret
    5cd4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5cd8:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    5cdc:	add	x1, x1, #0xfa0
    5ce0:	ldr	x0, [x0, #4008]
    5ce4:	ldr	x0, [x0]
    5ce8:	bl	41d0 <PyErr_SetString@plt>
    5cec:	mov	x0, #0x0                   	// #0
    5cf0:	ldp	x29, x30, [sp], #32
    5cf4:	ret
    5cf8:	stp	x29, x30, [sp, #-32]!
    5cfc:	mov	x0, x1
    5d00:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5d04:	mov	x29, sp
    5d08:	add	x1, x1, #0x58
    5d0c:	add	x2, sp, #0x1c
    5d10:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    5d14:	cbz	w0, 5d7c <PySequence_Fast@plt+0x166c>
    5d18:	ldr	w0, [sp, #28]
    5d1c:	tbnz	w0, #31, 5d64 <PySequence_Fast@plt+0x1654>
    5d20:	mov	w1, #0xffff                	// #65535
    5d24:	cmp	w0, w1
    5d28:	b.le	5d50 <PySequence_Fast@plt+0x1640>
    5d2c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5d30:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5d34:	mov	x2, #0x1                   	// #1
    5d38:	add	x1, x1, #0xa8
    5d3c:	ldr	x0, [x0, #3968]
    5d40:	ldr	x0, [x0]
    5d44:	bl	4160 <PyErr_WarnEx@plt>
    5d48:	cbnz	w0, 5d7c <PySequence_Fast@plt+0x166c>
    5d4c:	ldr	w0, [sp, #28]
    5d50:	rev16	w0, w0
    5d54:	and	x0, x0, #0xffff
    5d58:	bl	4500 <PyLong_FromUnsignedLong@plt>
    5d5c:	ldp	x29, x30, [sp], #32
    5d60:	ret
    5d64:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5d68:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5d6c:	add	x1, x1, #0x60
    5d70:	ldr	x0, [x0, #4008]
    5d74:	ldr	x0, [x0]
    5d78:	bl	41d0 <PyErr_SetString@plt>
    5d7c:	mov	x0, #0x0                   	// #0
    5d80:	ldp	x29, x30, [sp], #32
    5d84:	ret
    5d88:	stp	x29, x30, [sp, #-48]!
    5d8c:	mov	x29, sp
    5d90:	stp	x19, x20, [sp, #16]
    5d94:	ldr	w20, [x0, #16]
    5d98:	cmn	w20, #0x1
    5d9c:	b.ne	5dc0 <PySequence_Fast@plt+0x16b0>  // b.any
    5da0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5da4:	ldp	x19, x20, [sp, #16]
    5da8:	ldr	x0, [x0, #4024]
    5dac:	ldr	x1, [x0]
    5db0:	add	x1, x1, #0x1
    5db4:	str	x1, [x0]
    5db8:	ldp	x29, x30, [sp], #48
    5dbc:	ret
    5dc0:	mov	x19, x0
    5dc4:	str	x21, [sp, #32]
    5dc8:	mov	w0, #0xffffffff            	// #-1
    5dcc:	str	w0, [x19, #16]
    5dd0:	bl	4570 <PyEval_SaveThread@plt>
    5dd4:	mov	x21, x0
    5dd8:	mov	w0, w20
    5ddc:	bl	4380 <close@plt>
    5de0:	mov	w20, w0
    5de4:	mov	x0, x21
    5de8:	bl	40c0 <PyEval_RestoreThread@plt>
    5dec:	tbnz	w20, #31, 5e14 <PySequence_Fast@plt+0x1704>
    5df0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5df4:	ldp	x19, x20, [sp, #16]
    5df8:	ldr	x0, [x0, #4024]
    5dfc:	ldr	x21, [sp, #32]
    5e00:	ldr	x1, [x0]
    5e04:	add	x1, x1, #0x1
    5e08:	str	x1, [x0]
    5e0c:	ldp	x29, x30, [sp], #48
    5e10:	ret
    5e14:	bl	4660 <__errno_location@plt>
    5e18:	ldr	w0, [x0]
    5e1c:	cmp	w0, #0x68
    5e20:	b.eq	5df0 <PySequence_Fast@plt+0x16e0>  // b.none
    5e24:	ldr	x0, [x19, #32]
    5e28:	ldp	x19, x20, [sp, #16]
    5e2c:	mov	x16, x0
    5e30:	ldr	x21, [sp, #32]
    5e34:	ldp	x29, x30, [sp], #48
    5e38:	br	x16
    5e3c:	nop
    5e40:	stp	x29, x30, [sp, #-48]!
    5e44:	mov	x0, x1
    5e48:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5e4c:	mov	x29, sp
    5e50:	add	x1, x1, #0x118
    5e54:	add	x2, sp, #0x28
    5e58:	stp	x19, x20, [sp, #16]
    5e5c:	mov	x19, #0x0                   	// #0
    5e60:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    5e64:	cbz	w0, 5e94 <PySequence_Fast@plt+0x1784>
    5e68:	bl	4570 <PyEval_SaveThread@plt>
    5e6c:	mov	x20, x0
    5e70:	ldr	x0, [sp, #40]
    5e74:	bl	4140 <getprotobyname@plt>
    5e78:	mov	x19, x0
    5e7c:	mov	x0, x20
    5e80:	bl	40c0 <PyEval_RestoreThread@plt>
    5e84:	cbz	x19, 5ea4 <PySequence_Fast@plt+0x1794>
    5e88:	ldrsw	x0, [x19, #16]
    5e8c:	bl	4310 <PyLong_FromLong@plt>
    5e90:	mov	x19, x0
    5e94:	mov	x0, x19
    5e98:	ldp	x19, x20, [sp, #16]
    5e9c:	ldp	x29, x30, [sp], #48
    5ea0:	ret
    5ea4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5ea8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5eac:	add	x1, x1, #0x130
    5eb0:	ldr	x0, [x0, #3984]
    5eb4:	ldr	x0, [x0]
    5eb8:	bl	41d0 <PyErr_SetString@plt>
    5ebc:	b	5e94 <PySequence_Fast@plt+0x1784>
    5ec0:	stp	x29, x30, [sp, #-48]!
    5ec4:	mov	x0, x1
    5ec8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5ecc:	mov	x29, sp
    5ed0:	add	x1, x1, #0x148
    5ed4:	add	x3, sp, #0x28
    5ed8:	add	x2, sp, #0x20
    5edc:	stp	x19, x20, [sp, #16]
    5ee0:	str	xzr, [sp, #40]
    5ee4:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    5ee8:	cbz	w0, 5f4c <PySequence_Fast@plt+0x183c>
    5eec:	ldp	x2, x3, [sp, #32]
    5ef0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5ef4:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    5ef8:	add	x1, x1, #0x160
    5efc:	add	x0, x0, #0x168
    5f00:	bl	44a0 <PySys_Audit@plt>
    5f04:	tbnz	w0, #31, 5f4c <PySequence_Fast@plt+0x183c>
    5f08:	bl	4570 <PyEval_SaveThread@plt>
    5f0c:	mov	x20, x0
    5f10:	ldp	x0, x1, [sp, #32]
    5f14:	bl	46a0 <getservbyname@plt>
    5f18:	mov	x19, x0
    5f1c:	mov	x0, x20
    5f20:	bl	40c0 <PyEval_RestoreThread@plt>
    5f24:	cbz	x19, 5f60 <PySequence_Fast@plt+0x1850>
    5f28:	ldr	w0, [x19, #16]
    5f2c:	rev16	w0, w0
    5f30:	and	x0, x0, #0xffff
    5f34:	bl	4310 <PyLong_FromLong@plt>
    5f38:	mov	x19, x0
    5f3c:	mov	x0, x19
    5f40:	ldp	x19, x20, [sp, #16]
    5f44:	ldp	x29, x30, [sp], #48
    5f48:	ret
    5f4c:	mov	x19, #0x0                   	// #0
    5f50:	mov	x0, x19
    5f54:	ldp	x19, x20, [sp, #16]
    5f58:	ldp	x29, x30, [sp], #48
    5f5c:	ret
    5f60:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5f64:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    5f68:	add	x1, x1, #0x180
    5f6c:	ldr	x0, [x0, #3984]
    5f70:	ldr	x0, [x0]
    5f74:	bl	41d0 <PyErr_SetString@plt>
    5f78:	b	5f3c <PySequence_Fast@plt+0x182c>
    5f7c:	nop
    5f80:	sub	sp, sp, #0x430
    5f84:	mov	x1, #0x0                   	// #0
    5f88:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    5f8c:	add	x0, x0, #0x198
    5f90:	stp	x29, x30, [sp]
    5f94:	mov	x29, sp
    5f98:	bl	44a0 <PySys_Audit@plt>
    5f9c:	mov	w1, w0
    5fa0:	mov	x0, #0x0                   	// #0
    5fa4:	tbnz	w1, #31, 5fec <PySequence_Fast@plt+0x18dc>
    5fa8:	stp	x19, x20, [sp, #16]
    5fac:	str	x21, [sp, #32]
    5fb0:	bl	4570 <PyEval_SaveThread@plt>
    5fb4:	add	x21, sp, #0x30
    5fb8:	mov	x1, #0x3ff                 	// #1023
    5fbc:	mov	x20, x0
    5fc0:	mov	x0, x21
    5fc4:	bl	4590 <gethostname@plt>
    5fc8:	mov	w19, w0
    5fcc:	mov	x0, x20
    5fd0:	bl	40c0 <PyEval_RestoreThread@plt>
    5fd4:	tbnz	w19, #31, 5ff8 <PySequence_Fast@plt+0x18e8>
    5fd8:	mov	x0, x21
    5fdc:	strb	wzr, [sp, #1071]
    5fe0:	bl	4520 <PyUnicode_DecodeFSDefault@plt>
    5fe4:	ldp	x19, x20, [sp, #16]
    5fe8:	ldr	x21, [sp, #32]
    5fec:	ldp	x29, x30, [sp]
    5ff0:	add	sp, sp, #0x430
    5ff4:	ret
    5ff8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    5ffc:	ldr	x0, [x0, #3984]
    6000:	ldr	x0, [x0]
    6004:	bl	40e0 <PyErr_SetFromErrno@plt>
    6008:	ldp	x29, x30, [sp]
    600c:	ldp	x19, x20, [sp, #16]
    6010:	ldr	x21, [sp, #32]
    6014:	add	sp, sp, #0x430
    6018:	ret
    601c:	nop
    6020:	stp	x29, x30, [sp, #-96]!
    6024:	mov	x29, sp
    6028:	stp	x19, x20, [sp, #16]
    602c:	mov	x19, x1
    6030:	mov	x20, x2
    6034:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6038:	add	x1, x1, #0x1b0
    603c:	stp	x23, x24, [sp, #48]
    6040:	mov	x24, x4
    6044:	stp	x25, x26, [sp, #64]
    6048:	mov	x25, x3
    604c:	bl	4710 <PySequence_Fast@plt>
    6050:	cbz	x0, 61f0 <PySequence_Fast@plt+0x1ae0>
    6054:	stp	x21, x22, [sp, #32]
    6058:	mov	x22, x0
    605c:	mov	x0, #0x7fffffff            	// #2147483647
    6060:	ldr	x23, [x22, #16]
    6064:	cmp	x23, x0
    6068:	b.gt	61c8 <PySequence_Fast@plt+0x1ab8>
    606c:	str	x23, [x20]
    6070:	cmp	x23, #0x0
    6074:	b.le	61a4 <PySequence_Fast@plt+0x1a94>
    6078:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    607c:	cmp	x23, x0
    6080:	b.hi	61b4 <PySequence_Fast@plt+0x1aa4>  // b.pmore
    6084:	lsl	x0, x23, #4
    6088:	bl	4690 <PyMem_Malloc@plt>
    608c:	mov	x20, x0
    6090:	cbz	x0, 61b4 <PySequence_Fast@plt+0x1aa4>
    6094:	add	x0, x23, x23, lsl #2
    6098:	str	x20, [x19]
    609c:	lsl	x0, x0, #4
    60a0:	bl	4690 <PyMem_Malloc@plt>
    60a4:	mov	x26, x0
    60a8:	cbz	x0, 61b4 <PySequence_Fast@plt+0x1aa4>
    60ac:	mov	x19, x0
    60b0:	mov	x21, #0x0                   	// #0
    60b4:	stp	x27, x28, [sp, #80]
    60b8:	adrp	x28, f000 <PyInit__socket@@Base+0x1e80>
    60bc:	add	x27, x22, #0x18
    60c0:	add	x28, x28, #0x208
    60c4:	b	6104 <PySequence_Fast@plt+0x19f4>
    60c8:	ldr	x0, [x22, #24]
    60cc:	mov	x2, x19
    60d0:	mov	x1, x28
    60d4:	ldr	x0, [x0, x21, lsl #3]
    60d8:	bl	4300 <_PyArg_Parse_SizeT@plt>
    60dc:	cbz	w0, 6124 <PySequence_Fast@plt+0x1a14>
    60e0:	ldr	x0, [x19]
    60e4:	str	x0, [x20]
    60e8:	ldr	x0, [x19, #16]
    60ec:	str	x0, [x20, #8]
    60f0:	add	x21, x21, #0x1
    60f4:	add	x19, x19, #0x50
    60f8:	cmp	x23, x21
    60fc:	add	x20, x20, #0x10
    6100:	b.eq	6160 <PySequence_Fast@plt+0x1a50>  // b.none
    6104:	ldr	x0, [x22, #8]
    6108:	ldr	x0, [x0, #168]
    610c:	tbnz	w0, #25, 60c8 <PySequence_Fast@plt+0x19b8>
    6110:	ldr	x0, [x27, x21, lsl #3]
    6114:	mov	x2, x19
    6118:	mov	x1, x28
    611c:	bl	4300 <_PyArg_Parse_SizeT@plt>
    6120:	cbnz	w0, 60e0 <PySequence_Fast@plt+0x19d0>
    6124:	ldp	x27, x28, [sp, #80]
    6128:	mov	w19, #0xffffffff            	// #-1
    612c:	str	x26, [x25]
    6130:	str	x21, [x24]
    6134:	ldr	x0, [x22]
    6138:	sub	x0, x0, #0x1
    613c:	str	x0, [x22]
    6140:	cbz	x0, 6180 <PySequence_Fast@plt+0x1a70>
    6144:	ldp	x21, x22, [sp, #32]
    6148:	mov	w0, w19
    614c:	ldp	x19, x20, [sp, #16]
    6150:	ldp	x23, x24, [sp, #48]
    6154:	ldp	x25, x26, [sp, #64]
    6158:	ldp	x29, x30, [sp], #96
    615c:	ret
    6160:	ldp	x27, x28, [sp, #80]
    6164:	str	x26, [x25]
    6168:	str	x21, [x24]
    616c:	mov	w19, #0x0                   	// #0
    6170:	ldr	x0, [x22]
    6174:	sub	x0, x0, #0x1
    6178:	str	x0, [x22]
    617c:	cbnz	x0, 6144 <PySequence_Fast@plt+0x1a34>
    6180:	mov	x0, x22
    6184:	bl	4180 <_Py_Dealloc@plt>
    6188:	mov	w0, w19
    618c:	ldp	x19, x20, [sp, #16]
    6190:	ldp	x21, x22, [sp, #32]
    6194:	ldp	x23, x24, [sp, #48]
    6198:	ldp	x25, x26, [sp, #64]
    619c:	ldp	x29, x30, [sp], #96
    61a0:	ret
    61a4:	mov	x26, #0x0                   	// #0
    61a8:	mov	w19, #0x0                   	// #0
    61ac:	mov	x21, #0x0                   	// #0
    61b0:	b	612c <PySequence_Fast@plt+0x1a1c>
    61b4:	mov	x26, #0x0                   	// #0
    61b8:	mov	w19, #0xffffffff            	// #-1
    61bc:	mov	x21, #0x0                   	// #0
    61c0:	bl	4190 <PyErr_NoMemory@plt>
    61c4:	b	612c <PySequence_Fast@plt+0x1a1c>
    61c8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    61cc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    61d0:	mov	x26, #0x0                   	// #0
    61d4:	add	x1, x1, #0x1e0
    61d8:	ldr	x0, [x0, #3984]
    61dc:	mov	w19, #0xffffffff            	// #-1
    61e0:	mov	x21, #0x0                   	// #0
    61e4:	ldr	x0, [x0]
    61e8:	bl	41d0 <PyErr_SetString@plt>
    61ec:	b	612c <PySequence_Fast@plt+0x1a1c>
    61f0:	str	xzr, [x25]
    61f4:	mov	w19, #0xffffffff            	// #-1
    61f8:	str	xzr, [x24]
    61fc:	b	6148 <PySequence_Fast@plt+0x1a38>
    6200:	stp	x29, x30, [sp, #-64]!
    6204:	mov	w3, #0x80                  	// #128
    6208:	mov	x29, sp
    620c:	add	x2, sp, #0x3c
    6210:	stp	x19, x20, [sp, #16]
    6214:	mov	x19, x0
    6218:	mov	x0, x1
    621c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6220:	add	x1, x1, #0x250
    6224:	str	w3, [sp, #60]
    6228:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    622c:	cbz	w0, 62bc <PySequence_Fast@plt+0x1bac>
    6230:	str	x21, [sp, #32]
    6234:	bl	4570 <PyEval_SaveThread@plt>
    6238:	ldr	w1, [sp, #60]
    623c:	mov	x21, x0
    6240:	tbnz	w1, #31, 6284 <PySequence_Fast@plt+0x1b74>
    6244:	ldr	w0, [x19, #16]
    6248:	bl	4070 <listen@plt>
    624c:	mov	w20, w0
    6250:	mov	x0, x21
    6254:	bl	40c0 <PyEval_RestoreThread@plt>
    6258:	tbnz	w20, #31, 62a4 <PySequence_Fast@plt+0x1b94>
    625c:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    6260:	ldr	x21, [sp, #32]
    6264:	ldr	x1, [x1, #4024]
    6268:	ldp	x19, x20, [sp, #16]
    626c:	mov	x0, x1
    6270:	ldr	x2, [x1]
    6274:	add	x2, x2, #0x1
    6278:	str	x2, [x1]
    627c:	ldp	x29, x30, [sp], #64
    6280:	ret
    6284:	ldr	w0, [x19, #16]
    6288:	mov	w1, #0x0                   	// #0
    628c:	str	wzr, [sp, #60]
    6290:	bl	4070 <listen@plt>
    6294:	mov	w20, w0
    6298:	mov	x0, x21
    629c:	bl	40c0 <PyEval_RestoreThread@plt>
    62a0:	tbz	w20, #31, 625c <PySequence_Fast@plt+0x1b4c>
    62a4:	ldr	x0, [x19, #32]
    62a8:	blr	x0
    62ac:	ldp	x19, x20, [sp, #16]
    62b0:	ldr	x21, [sp, #32]
    62b4:	ldp	x29, x30, [sp], #64
    62b8:	ret
    62bc:	mov	x0, #0x0                   	// #0
    62c0:	ldp	x19, x20, [sp, #16]
    62c4:	ldp	x29, x30, [sp], #64
    62c8:	ret
    62cc:	nop
    62d0:	ldr	x0, [x0, #40]
    62d4:	tbz	x0, #63, 62f0 <PySequence_Fast@plt+0x1be0>
    62d8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    62dc:	ldr	x0, [x0, #4024]
    62e0:	ldr	x1, [x0]
    62e4:	add	x1, x1, #0x1
    62e8:	str	x1, [x0]
    62ec:	ret
    62f0:	stp	x29, x30, [sp, #-16]!
    62f4:	mov	x29, sp
    62f8:	bl	41f0 <_PyTime_AsSecondsDouble@plt>
    62fc:	ldp	x29, x30, [sp], #16
    6300:	b	42f0 <PyFloat_FromDouble@plt>
    6304:	nop
    6308:	stp	x29, x30, [sp, #-32]!
    630c:	mov	x0, x1
    6310:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6314:	mov	x29, sp
    6318:	add	x1, x1, #0x260
    631c:	add	x2, sp, #0x18
    6320:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    6324:	cbz	w0, 6380 <PySequence_Fast@plt+0x1c70>
    6328:	ldr	x1, [sp, #24]
    632c:	mov	x0, #0xffe7                	// #65511
    6330:	movk	x0, #0x7fff, lsl #16
    6334:	cmp	x1, x0
    6338:	b.hi	635c <PySequence_Fast@plt+0x1c4c>  // b.pmore
    633c:	add	x0, x1, #0x7
    6340:	and	x0, x0, #0xfffffffffffffff8
    6344:	add	x0, x0, #0x10
    6348:	cmp	x0, x1
    634c:	b.cc	635c <PySequence_Fast@plt+0x1c4c>  // b.lo, b.ul, b.last
    6350:	bl	41c0 <PyLong_FromSize_t@plt>
    6354:	ldp	x29, x30, [sp], #32
    6358:	ret
    635c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6360:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6364:	add	x1, x1, #0x270
    6368:	ldr	x0, [x0, #4008]
    636c:	ldr	x0, [x0]
    6370:	bl	41d0 <PyErr_SetString@plt>
    6374:	mov	x0, #0x0                   	// #0
    6378:	ldp	x29, x30, [sp], #32
    637c:	ret
    6380:	mov	x0, #0x0                   	// #0
    6384:	ldp	x29, x30, [sp], #32
    6388:	ret
    638c:	nop
    6390:	stp	x29, x30, [sp, #-48]!
    6394:	mov	x29, sp
    6398:	stp	x19, x20, [sp, #16]
    639c:	mov	x20, x0
    63a0:	mov	x0, x1
    63a4:	bl	4670 <_PyLong_AsInt@plt>
    63a8:	mov	w19, w0
    63ac:	cmn	w0, #0x1
    63b0:	b.eq	6404 <PySequence_Fast@plt+0x1cf4>  // b.none
    63b4:	str	x21, [sp, #32]
    63b8:	bl	4570 <PyEval_SaveThread@plt>
    63bc:	mov	x21, x0
    63c0:	ldr	w0, [x20, #16]
    63c4:	mov	w1, w19
    63c8:	bl	4370 <shutdown@plt>
    63cc:	mov	w19, w0
    63d0:	mov	x0, x21
    63d4:	bl	40c0 <PyEval_RestoreThread@plt>
    63d8:	tbnz	w19, #31, 641c <PySequence_Fast@plt+0x1d0c>
    63dc:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    63e0:	ldr	x21, [sp, #32]
    63e4:	ldr	x1, [x1, #4024]
    63e8:	ldp	x19, x20, [sp, #16]
    63ec:	mov	x0, x1
    63f0:	ldr	x2, [x1]
    63f4:	add	x2, x2, #0x1
    63f8:	str	x2, [x1]
    63fc:	ldp	x29, x30, [sp], #48
    6400:	ret
    6404:	bl	43c0 <PyErr_Occurred@plt>
    6408:	cbz	x0, 63b4 <PySequence_Fast@plt+0x1ca4>
    640c:	mov	x0, #0x0                   	// #0
    6410:	ldp	x19, x20, [sp, #16]
    6414:	ldp	x29, x30, [sp], #48
    6418:	ret
    641c:	ldr	x0, [x20, #32]
    6420:	ldp	x19, x20, [sp, #16]
    6424:	mov	x16, x0
    6428:	ldr	x21, [sp, #32]
    642c:	ldp	x29, x30, [sp], #48
    6430:	br	x16
    6434:	nop
    6438:	stp	x29, x30, [sp, #-224]!
    643c:	mov	w8, #0xffffffff            	// #-1
    6440:	adrp	x3, 28000 <PyInit__socket@@Base+0x1ae80>
    6444:	mov	x29, sp
    6448:	add	x3, x3, #0x580
    644c:	add	x7, sp, #0x58
    6450:	add	x6, sp, #0x48
    6454:	add	x5, sp, #0x44
    6458:	add	x4, sp, #0x40
    645c:	stp	x19, x20, [sp, #16]
    6460:	mov	x19, x0
    6464:	mov	x0, x1
    6468:	mov	x1, x2
    646c:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    6470:	add	x2, x2, #0x298
    6474:	stp	x21, x22, [sp, #32]
    6478:	stp	w8, w8, [sp, #64]
    647c:	str	w8, [sp, #72]
    6480:	str	xzr, [sp, #88]
    6484:	bl	4440 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    6488:	cbz	w0, 6724 <PySequence_Fast@plt+0x2014>
    648c:	ldp	w3, w4, [sp, #64]
    6490:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6494:	ldr	w5, [sp, #72]
    6498:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    649c:	add	x1, x1, #0x2a8
    64a0:	mov	x2, x19
    64a4:	add	x0, x0, #0x2b0
    64a8:	bl	44a0 <PySys_Audit@plt>
    64ac:	tbnz	w0, #31, 6724 <PySequence_Fast@plt+0x2014>
    64b0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    64b4:	ldr	x2, [sp, #88]
    64b8:	ldr	x0, [x0, #4024]
    64bc:	cmp	x2, #0x0
    64c0:	ccmp	x2, x0, #0x4, ne  // ne = any
    64c4:	b.ne	65b4 <PySequence_Fast@plt+0x1ea4>  // b.any
    64c8:	ldr	w0, [sp, #64]
    64cc:	str	x23, [sp, #48]
    64d0:	cmn	w0, #0x1
    64d4:	b.ne	64e0 <PySequence_Fast@plt+0x1dd0>  // b.any
    64d8:	mov	w0, #0x2                   	// #2
    64dc:	str	w0, [sp, #64]
    64e0:	ldr	w0, [sp, #68]
    64e4:	cmn	w0, #0x1
    64e8:	b.ne	64f4 <PySequence_Fast@plt+0x1de4>  // b.any
    64ec:	mov	w0, #0x1                   	// #1
    64f0:	str	w0, [sp, #68]
    64f4:	ldr	w0, [sp, #72]
    64f8:	cmn	w0, #0x1
    64fc:	b.ne	6504 <PySequence_Fast@plt+0x1df4>  // b.any
    6500:	str	wzr, [sp, #72]
    6504:	adrp	x21, 28000 <PyInit__socket@@Base+0x1ae80>
    6508:	add	x23, x21, #0x3c8
    650c:	bl	4570 <PyEval_SaveThread@plt>
    6510:	mov	x22, x0
    6514:	ldr	w0, [x23, #8]
    6518:	cbz	w0, 66e0 <PySequence_Fast@plt+0x1fd0>
    651c:	ldp	w0, w1, [sp, #64]
    6520:	ldr	w2, [sp, #72]
    6524:	orr	w1, w1, #0x80000
    6528:	bl	44f0 <socket@plt>
    652c:	mov	w20, w0
    6530:	ldr	w1, [x23, #8]
    6534:	cmn	w1, #0x1
    6538:	b.eq	672c <PySequence_Fast@plt+0x201c>  // b.none
    653c:	mov	x0, x22
    6540:	bl	40c0 <PyEval_RestoreThread@plt>
    6544:	cmn	w20, #0x1
    6548:	b.eq	6814 <PySequence_Fast@plt+0x2104>  // b.none
    654c:	add	x2, x21, #0x3c8
    6550:	mov	w0, w20
    6554:	add	x2, x2, #0x8
    6558:	mov	w1, #0x0                   	// #0
    655c:	bl	4130 <_Py_set_inheritable@plt>
    6560:	tbnz	w0, #31, 6830 <PySequence_Fast@plt+0x2120>
    6564:	ldp	w1, w3, [sp, #68]
    6568:	ldr	x23, [sp, #48]
    656c:	mov	w2, #0xf7ff                	// #63487
    6570:	ldr	w4, [sp, #64]
    6574:	movk	w2, #0xfff7, lsl #16
    6578:	adrp	x0, 4000 <recvmsg@plt>
    657c:	and	w2, w1, w2
    6580:	add	x0, x0, #0x7f8
    6584:	stp	w20, w4, [x19, #16]
    6588:	stp	w2, w3, [x19, #24]
    658c:	and	w21, w1, #0x800
    6590:	str	x0, [x19, #32]
    6594:	tbz	w1, #11, 667c <PySequence_Fast@plt+0x1f6c>
    6598:	mov	w21, #0x0                   	// #0
    659c:	str	xzr, [x19, #40]
    65a0:	mov	w0, w21
    65a4:	ldp	x19, x20, [sp, #16]
    65a8:	ldp	x21, x22, [sp, #32]
    65ac:	ldp	x29, x30, [sp], #224
    65b0:	ret
    65b4:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    65b8:	ldr	x0, [x2, #8]
    65bc:	ldr	x1, [x1, #3912]
    65c0:	cmp	x0, x1
    65c4:	b.eq	67f4 <PySequence_Fast@plt+0x20e4>  // b.none
    65c8:	bl	4600 <PyType_IsSubtype@plt>
    65cc:	cbnz	w0, 67f4 <PySequence_Fast@plt+0x20e4>
    65d0:	ldr	x0, [sp, #88]
    65d4:	bl	43e0 <PyLong_AsLong@plt>
    65d8:	mov	x21, x0
    65dc:	cmn	w0, #0x1
    65e0:	mov	w20, w0
    65e4:	b.eq	6750 <PySequence_Fast@plt+0x2040>  // b.none
    65e8:	tbnz	w0, #31, 6758 <PySequence_Fast@plt+0x2048>
    65ec:	mov	w3, #0x80                  	// #128
    65f0:	add	x2, sp, #0x4c
    65f4:	add	x1, sp, #0x60
    65f8:	str	w3, [sp, #76]
    65fc:	stp	xzr, xzr, [sp, #96]
    6600:	stp	xzr, xzr, [sp, #112]
    6604:	stp	xzr, xzr, [sp, #128]
    6608:	stp	xzr, xzr, [sp, #144]
    660c:	stp	xzr, xzr, [sp, #160]
    6610:	stp	xzr, xzr, [sp, #176]
    6614:	stp	xzr, xzr, [sp, #192]
    6618:	stp	xzr, xzr, [sp, #208]
    661c:	bl	4680 <getsockname@plt>
    6620:	cbnz	w0, 66f4 <PySequence_Fast@plt+0x1fe4>
    6624:	ldr	w0, [sp, #64]
    6628:	cmn	w0, #0x1
    662c:	b.eq	6744 <PySequence_Fast@plt+0x2034>  // b.none
    6630:	ldr	w1, [sp, #68]
    6634:	cmn	w1, #0x1
    6638:	b.eq	6778 <PySequence_Fast@plt+0x2068>  // b.none
    663c:	ldr	w3, [sp, #72]
    6640:	cmn	w3, #0x1
    6644:	b.ne	656c <PySequence_Fast@plt+0x1e5c>  // b.any
    6648:	mov	w5, #0x4                   	// #4
    664c:	mov	w0, w21
    6650:	add	x4, sp, #0x54
    6654:	add	x3, sp, #0x50
    6658:	mov	w2, #0x26                  	// #38
    665c:	mov	w1, #0x1                   	// #1
    6660:	str	w5, [sp, #84]
    6664:	bl	4530 <getsockopt@plt>
    6668:	cbnz	w0, 6714 <PySequence_Fast@plt+0x2004>
    666c:	ldr	w3, [sp, #80]
    6670:	ldr	w1, [sp, #68]
    6674:	str	w3, [sp, #72]
    6678:	b	656c <PySequence_Fast@plt+0x1e5c>
    667c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    6680:	ldr	x0, [x0, #968]
    6684:	str	x0, [x19, #40]
    6688:	tbnz	x0, #63, 65a0 <PySequence_Fast@plt+0x1e90>
    668c:	str	wzr, [sp, #96]
    6690:	bl	4570 <PyEval_SaveThread@plt>
    6694:	ldr	w1, [sp, #96]
    6698:	mov	x22, x0
    669c:	ldr	w0, [x19, #16]
    66a0:	add	x2, sp, #0x60
    66a4:	cmp	w1, #0x0
    66a8:	mov	x1, #0x5421                	// #21537
    66ac:	cset	w3, eq  // eq = none
    66b0:	str	w3, [sp, #96]
    66b4:	bl	4700 <ioctl@plt>
    66b8:	mov	w19, w0
    66bc:	cmn	w19, #0x1
    66c0:	mov	x0, x22
    66c4:	b.eq	67a8 <PySequence_Fast@plt+0x2098>  // b.none
    66c8:	bl	40c0 <PyEval_RestoreThread@plt>
    66cc:	mov	w0, w21
    66d0:	ldp	x19, x20, [sp, #16]
    66d4:	ldp	x21, x22, [sp, #32]
    66d8:	ldp	x29, x30, [sp], #224
    66dc:	ret
    66e0:	ldp	w0, w1, [sp, #64]
    66e4:	ldr	w2, [sp, #72]
    66e8:	bl	44f0 <socket@plt>
    66ec:	mov	w20, w0
    66f0:	b	653c <PySequence_Fast@plt+0x1e2c>
    66f4:	ldr	w0, [sp, #64]
    66f8:	cmn	w0, #0x1
    66fc:	b.eq	6714 <PySequence_Fast@plt+0x2004>  // b.none
    6700:	bl	4660 <__errno_location@plt>
    6704:	ldr	w0, [x0]
    6708:	cmp	w0, #0x58
    670c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    6710:	b.ne	6630 <PySequence_Fast@plt+0x1f20>  // b.any
    6714:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6718:	ldr	x0, [x0, #3984]
    671c:	ldr	x0, [x0]
    6720:	bl	40e0 <PyErr_SetFromErrno@plt>
    6724:	mov	w21, #0xffffffff            	// #-1
    6728:	b	65a0 <PySequence_Fast@plt+0x1e90>
    672c:	tbnz	w0, #31, 67cc <PySequence_Fast@plt+0x20bc>
    6730:	mov	w1, #0x1                   	// #1
    6734:	mov	x0, x22
    6738:	str	w1, [x23, #8]
    673c:	bl	40c0 <PyEval_RestoreThread@plt>
    6740:	b	654c <PySequence_Fast@plt+0x1e3c>
    6744:	ldrh	w0, [sp, #96]
    6748:	str	w0, [sp, #64]
    674c:	b	6630 <PySequence_Fast@plt+0x1f20>
    6750:	bl	43c0 <PyErr_Occurred@plt>
    6754:	cbnz	x0, 6724 <PySequence_Fast@plt+0x2014>
    6758:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    675c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6760:	mov	w21, #0xffffffff            	// #-1
    6764:	add	x1, x1, #0x2e8
    6768:	ldr	x0, [x0, #3960]
    676c:	ldr	x0, [x0]
    6770:	bl	41d0 <PyErr_SetString@plt>
    6774:	b	65a0 <PySequence_Fast@plt+0x1e90>
    6778:	mov	w5, #0x4                   	// #4
    677c:	add	x4, sp, #0x54
    6780:	add	x3, sp, #0x50
    6784:	mov	w0, w21
    6788:	mov	w2, #0x3                   	// #3
    678c:	mov	w1, #0x1                   	// #1
    6790:	str	w5, [sp, #84]
    6794:	bl	4530 <getsockopt@plt>
    6798:	cbnz	w0, 6714 <PySequence_Fast@plt+0x2004>
    679c:	ldr	w1, [sp, #80]
    67a0:	str	w1, [sp, #68]
    67a4:	b	663c <PySequence_Fast@plt+0x1f2c>
    67a8:	bl	40c0 <PyEval_RestoreThread@plt>
    67ac:	mov	w21, w19
    67b0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    67b4:	ldr	x0, [x0, #3984]
    67b8:	ldr	x0, [x0]
    67bc:	bl	40e0 <PyErr_SetFromErrno@plt>
    67c0:	mov	w0, w20
    67c4:	bl	4380 <close@plt>
    67c8:	b	65a0 <PySequence_Fast@plt+0x1e90>
    67cc:	bl	4660 <__errno_location@plt>
    67d0:	ldr	w0, [x0]
    67d4:	cmp	w0, #0x16
    67d8:	b.ne	653c <PySequence_Fast@plt+0x1e2c>  // b.any
    67dc:	ldp	w0, w1, [sp, #64]
    67e0:	str	wzr, [x23, #8]
    67e4:	ldr	w2, [sp, #72]
    67e8:	bl	44f0 <socket@plt>
    67ec:	mov	w20, w0
    67f0:	b	653c <PySequence_Fast@plt+0x1e2c>
    67f4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    67f8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    67fc:	mov	w21, #0xffffffff            	// #-1
    6800:	add	x1, x1, #0x2c0
    6804:	ldr	x0, [x0, #3976]
    6808:	ldr	x0, [x0]
    680c:	bl	41d0 <PyErr_SetString@plt>
    6810:	b	65a0 <PySequence_Fast@plt+0x1e90>
    6814:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6818:	mov	w21, w20
    681c:	ldr	x0, [x0, #3984]
    6820:	ldr	x0, [x0]
    6824:	bl	40e0 <PyErr_SetFromErrno@plt>
    6828:	ldr	x23, [sp, #48]
    682c:	b	65a0 <PySequence_Fast@plt+0x1e90>
    6830:	mov	w0, w20
    6834:	mov	w21, #0xffffffff            	// #-1
    6838:	bl	4380 <close@plt>
    683c:	ldr	x23, [sp, #48]
    6840:	b	65a0 <PySequence_Fast@plt+0x1e90>
    6844:	nop
    6848:	ldr	x2, [x1, #8]
    684c:	mov	x0, x1
    6850:	ldr	x1, [x2, #168]
    6854:	tbz	w1, #24, 68a4 <PySequence_Fast@plt+0x2194>
    6858:	stp	x29, x30, [sp, #-16]!
    685c:	mov	x29, sp
    6860:	bl	44e0 <PyLong_AsUnsignedLong@plt>
    6864:	cmn	x0, #0x1
    6868:	b.eq	6880 <PySequence_Fast@plt+0x2170>  // b.none
    686c:	tst	x0, #0xffffffff00000000
    6870:	b.ne	6888 <PySequence_Fast@plt+0x2178>  // b.any
    6874:	ldp	x29, x30, [sp], #16
    6878:	rev	w0, w0
    687c:	b	4500 <PyLong_FromUnsignedLong@plt>
    6880:	bl	43c0 <PyErr_Occurred@plt>
    6884:	cbnz	x0, 68c0 <PySequence_Fast@plt+0x21b0>
    6888:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    688c:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    6890:	ldp	x29, x30, [sp], #16
    6894:	add	x1, x1, #0xec8
    6898:	ldr	x0, [x0, #4008]
    689c:	ldr	x0, [x0]
    68a0:	b	4620 <PyErr_Format@plt>
    68a4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    68a8:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    68ac:	ldr	x2, [x2, #24]
    68b0:	add	x1, x1, #0xee0
    68b4:	ldr	x0, [x0, #3976]
    68b8:	ldr	x0, [x0]
    68bc:	b	4620 <PyErr_Format@plt>
    68c0:	mov	x0, #0x0                   	// #0
    68c4:	ldp	x29, x30, [sp], #16
    68c8:	ret
    68cc:	nop
    68d0:	stp	x29, x30, [sp, #-48]!
    68d4:	mov	x29, sp
    68d8:	str	x19, [sp, #16]
    68dc:	adrp	x19, 27000 <PyInit__socket@@Base+0x19e80>
    68e0:	ldr	x0, [x19, #4024]
    68e4:	cmp	x0, x1
    68e8:	b.eq	692c <PySequence_Fast@plt+0x221c>  // b.none
    68ec:	add	x0, sp, #0x28
    68f0:	mov	w2, #0x3                   	// #3
    68f4:	bl	4290 <_PyTime_FromSecondsObject@plt>
    68f8:	tbnz	w0, #31, 693c <PySequence_Fast@plt+0x222c>
    68fc:	ldr	x2, [sp, #40]
    6900:	tbnz	x2, #63, 6944 <PySequence_Fast@plt+0x2234>
    6904:	ldr	x1, [x19, #4024]
    6908:	adrp	x3, 28000 <PyInit__socket@@Base+0x1ae80>
    690c:	str	x2, [x3, #968]
    6910:	mov	x0, x1
    6914:	ldr	x2, [x1]
    6918:	add	x2, x2, #0x1
    691c:	str	x2, [x1]
    6920:	ldr	x19, [sp, #16]
    6924:	ldp	x29, x30, [sp], #48
    6928:	ret
    692c:	mov	w0, #0xffffffff            	// #-1
    6930:	bl	45d0 <_PyTime_FromSeconds@plt>
    6934:	mov	x2, x0
    6938:	b	6904 <PySequence_Fast@plt+0x21f4>
    693c:	mov	x0, #0x0                   	// #0
    6940:	b	6920 <PySequence_Fast@plt+0x2210>
    6944:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6948:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    694c:	add	x1, x1, #0x308
    6950:	ldr	x0, [x0, #3960]
    6954:	ldr	x0, [x0]
    6958:	bl	41d0 <PyErr_SetString@plt>
    695c:	mov	x0, #0x0                   	// #0
    6960:	b	6920 <PySequence_Fast@plt+0x2210>
    6964:	nop
    6968:	stp	x29, x30, [sp, #-48]!
    696c:	mov	x29, sp
    6970:	stp	x19, x20, [sp, #16]
    6974:	mov	x20, x0
    6978:	mov	x0, x1
    697c:	bl	43e0 <PyLong_AsLong@plt>
    6980:	mov	x19, x0
    6984:	cmp	x0, #0x0
    6988:	csetm	w0, ne  // ne = any
    698c:	cmn	x19, #0x1
    6990:	b.eq	6a20 <PySequence_Fast@plt+0x2310>  // b.none
    6994:	bl	45d0 <_PyTime_FromSeconds@plt>
    6998:	str	x0, [x20, #40]
    699c:	str	w19, [sp, #44]
    69a0:	bl	4570 <PyEval_SaveThread@plt>
    69a4:	mov	x19, x0
    69a8:	ldr	w1, [sp, #44]
    69ac:	add	x2, sp, #0x2c
    69b0:	ldr	w0, [x20, #16]
    69b4:	cmp	w1, #0x0
    69b8:	mov	x1, #0x5421                	// #21537
    69bc:	cset	w3, eq  // eq = none
    69c0:	str	w3, [sp, #44]
    69c4:	bl	4700 <ioctl@plt>
    69c8:	cmn	w0, #0x1
    69cc:	mov	x0, x19
    69d0:	b.eq	69fc <PySequence_Fast@plt+0x22ec>  // b.none
    69d4:	bl	40c0 <PyEval_RestoreThread@plt>
    69d8:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    69dc:	ldr	x1, [x1, #4024]
    69e0:	mov	x0, x1
    69e4:	ldr	x2, [x1]
    69e8:	add	x2, x2, #0x1
    69ec:	str	x2, [x1]
    69f0:	ldp	x19, x20, [sp, #16]
    69f4:	ldp	x29, x30, [sp], #48
    69f8:	ret
    69fc:	bl	40c0 <PyEval_RestoreThread@plt>
    6a00:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6a04:	ldr	x0, [x0, #3984]
    6a08:	ldr	x0, [x0]
    6a0c:	bl	40e0 <PyErr_SetFromErrno@plt>
    6a10:	mov	x0, #0x0                   	// #0
    6a14:	ldp	x19, x20, [sp, #16]
    6a18:	ldp	x29, x30, [sp], #48
    6a1c:	ret
    6a20:	bl	43c0 <PyErr_Occurred@plt>
    6a24:	mov	x1, x0
    6a28:	mov	x0, #0x0                   	// #0
    6a2c:	cbnz	x1, 69f0 <PySequence_Fast@plt+0x22e0>
    6a30:	mov	w0, w19
    6a34:	b	6994 <PySequence_Fast@plt+0x2284>
    6a38:	stp	x29, x30, [sp, #-64]!
    6a3c:	mov	x29, sp
    6a40:	stp	x19, x20, [sp, #16]
    6a44:	adrp	x19, 27000 <PyInit__socket@@Base+0x19e80>
    6a48:	mov	x20, x0
    6a4c:	ldr	x0, [x19, #4024]
    6a50:	cmp	x0, x1
    6a54:	b.eq	6b04 <PySequence_Fast@plt+0x23f4>  // b.none
    6a58:	add	x0, sp, #0x38
    6a5c:	mov	w2, #0x3                   	// #3
    6a60:	bl	4290 <_PyTime_FromSecondsObject@plt>
    6a64:	tbnz	w0, #31, 6b1c <PySequence_Fast@plt+0x240c>
    6a68:	ldr	x1, [sp, #56]
    6a6c:	tbnz	x1, #63, 6b24 <PySequence_Fast@plt+0x2414>
    6a70:	str	x21, [sp, #32]
    6a74:	str	x1, [x20, #40]
    6a78:	lsr	x1, x1, #63
    6a7c:	str	w1, [sp, #52]
    6a80:	bl	4570 <PyEval_SaveThread@plt>
    6a84:	mov	x21, x0
    6a88:	ldr	w1, [sp, #52]
    6a8c:	add	x2, sp, #0x34
    6a90:	ldr	w0, [x20, #16]
    6a94:	cmp	w1, #0x0
    6a98:	mov	x1, #0x5421                	// #21537
    6a9c:	cset	w3, eq  // eq = none
    6aa0:	str	w3, [sp, #52]
    6aa4:	bl	4700 <ioctl@plt>
    6aa8:	cmn	w0, #0x1
    6aac:	mov	x0, x21
    6ab0:	b.eq	6adc <PySequence_Fast@plt+0x23cc>  // b.none
    6ab4:	bl	40c0 <PyEval_RestoreThread@plt>
    6ab8:	ldr	x1, [x19, #4024]
    6abc:	ldr	x21, [sp, #32]
    6ac0:	mov	x0, x1
    6ac4:	ldr	x2, [x1]
    6ac8:	add	x2, x2, #0x1
    6acc:	str	x2, [x1]
    6ad0:	ldp	x19, x20, [sp, #16]
    6ad4:	ldp	x29, x30, [sp], #64
    6ad8:	ret
    6adc:	bl	40c0 <PyEval_RestoreThread@plt>
    6ae0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6ae4:	ldr	x0, [x0, #3984]
    6ae8:	ldr	x0, [x0]
    6aec:	bl	40e0 <PyErr_SetFromErrno@plt>
    6af0:	mov	x0, #0x0                   	// #0
    6af4:	ldp	x19, x20, [sp, #16]
    6af8:	ldr	x21, [sp, #32]
    6afc:	ldp	x29, x30, [sp], #64
    6b00:	ret
    6b04:	mov	w0, #0xffffffff            	// #-1
    6b08:	str	x21, [sp, #32]
    6b0c:	bl	45d0 <_PyTime_FromSeconds@plt>
    6b10:	mov	x1, x0
    6b14:	str	x0, [sp, #56]
    6b18:	b	6a74 <PySequence_Fast@plt+0x2364>
    6b1c:	mov	x0, #0x0                   	// #0
    6b20:	b	6ad0 <PySequence_Fast@plt+0x23c0>
    6b24:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6b28:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6b2c:	add	x1, x1, #0x308
    6b30:	ldr	x0, [x0, #3960]
    6b34:	ldr	x0, [x0]
    6b38:	bl	41d0 <PyErr_SetString@plt>
    6b3c:	mov	x0, #0x0                   	// #0
    6b40:	b	6ad0 <PySequence_Fast@plt+0x23c0>
    6b44:	nop
    6b48:	stp	x29, x30, [sp, #-48]!
    6b4c:	mov	x29, sp
    6b50:	stp	x19, x20, [sp, #16]
    6b54:	mov	x20, x1
    6b58:	str	x21, [sp, #32]
    6b5c:	cbz	x0, 6c84 <PySequence_Fast@plt+0x2574>
    6b60:	ldr	x2, [x0, #8]
    6b64:	mov	x19, x0
    6b68:	ldr	x1, [x2, #168]
    6b6c:	str	xzr, [x20]
    6b70:	tbnz	w1, #27, 6c3c <PySequence_Fast@plt+0x252c>
    6b74:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    6b78:	ldr	x1, [x1, #3928]
    6b7c:	cmp	x2, x1
    6b80:	b.eq	6bc8 <PySequence_Fast@plt+0x24b8>  // b.none
    6b84:	mov	x0, x2
    6b88:	bl	4600 <PyType_IsSubtype@plt>
    6b8c:	mov	w21, w0
    6b90:	cbnz	w0, 6bc8 <PySequence_Fast@plt+0x24b8>
    6b94:	ldr	x0, [x19, #8]
    6b98:	ldr	x1, [x0, #168]
    6b9c:	tbz	w1, #28, 6d00 <PySequence_Fast@plt+0x25f0>
    6ba0:	ldrb	w0, [x19, #32]
    6ba4:	tbz	w0, #7, 6ce8 <PySequence_Fast@plt+0x25d8>
    6ba8:	and	w1, w0, #0x60
    6bac:	cmp	w1, #0x60
    6bb0:	b.ne	6cac <PySequence_Fast@plt+0x259c>  // b.any
    6bb4:	tbnz	w0, #5, 6d20 <PySequence_Fast@plt+0x2610>
    6bb8:	ldr	x0, [x19, #72]
    6bbc:	ldr	x19, [x19, #16]
    6bc0:	str	x0, [x20, #8]
    6bc4:	b	6be4 <PySequence_Fast@plt+0x24d4>
    6bc8:	mov	x0, x19
    6bcc:	bl	4240 <PyByteArray_AsString@plt>
    6bd0:	str	x0, [x20, #8]
    6bd4:	mov	x0, x19
    6bd8:	bl	4040 <PyByteArray_Size@plt>
    6bdc:	mov	x19, x0
    6be0:	ldr	x0, [x20, #8]
    6be4:	bl	4020 <strlen@plt>
    6be8:	cmp	x0, x19
    6bec:	b.eq	6c60 <PySequence_Fast@plt+0x2550>  // b.none
    6bf0:	ldr	x19, [x20]
    6bf4:	cbz	x19, 6c0c <PySequence_Fast@plt+0x24fc>
    6bf8:	ldr	x0, [x19]
    6bfc:	str	xzr, [x20]
    6c00:	sub	x0, x0, #0x1
    6c04:	str	x0, [x19]
    6c08:	cbz	x0, 6c78 <PySequence_Fast@plt+0x2568>
    6c0c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6c10:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6c14:	mov	w21, #0x0                   	// #0
    6c18:	add	x1, x1, #0x380
    6c1c:	ldr	x0, [x0, #3976]
    6c20:	ldr	x0, [x0]
    6c24:	bl	41d0 <PyErr_SetString@plt>
    6c28:	mov	w0, w21
    6c2c:	ldp	x19, x20, [sp, #16]
    6c30:	ldr	x21, [sp, #32]
    6c34:	ldp	x29, x30, [sp], #48
    6c38:	ret
    6c3c:	bl	45a0 <PyBytes_AsString@plt>
    6c40:	str	x0, [x20, #8]
    6c44:	mov	x0, x19
    6c48:	bl	4330 <PyBytes_Size@plt>
    6c4c:	mov	x19, x0
    6c50:	ldr	x0, [x20, #8]
    6c54:	bl	4020 <strlen@plt>
    6c58:	cmp	x0, x19
    6c5c:	b.ne	6bf0 <PySequence_Fast@plt+0x24e0>  // b.any
    6c60:	mov	w21, #0x20000               	// #131072
    6c64:	mov	w0, w21
    6c68:	ldp	x19, x20, [sp, #16]
    6c6c:	ldr	x21, [sp, #32]
    6c70:	ldp	x29, x30, [sp], #48
    6c74:	ret
    6c78:	mov	x0, x19
    6c7c:	bl	4180 <_Py_Dealloc@plt>
    6c80:	b	6c0c <PySequence_Fast@plt+0x24fc>
    6c84:	ldr	x0, [x1]
    6c88:	mov	w21, #0x1                   	// #1
    6c8c:	cbz	x0, 6c28 <PySequence_Fast@plt+0x2518>
    6c90:	ldr	x1, [x0]
    6c94:	str	xzr, [x20]
    6c98:	sub	x1, x1, #0x1
    6c9c:	str	x1, [x0]
    6ca0:	cbnz	x1, 6c28 <PySequence_Fast@plt+0x2518>
    6ca4:	bl	4180 <_Py_Dealloc@plt>
    6ca8:	b	6c28 <PySequence_Fast@plt+0x2518>
    6cac:	mov	x0, x19
    6cb0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6cb4:	mov	x2, #0x0                   	// #0
    6cb8:	add	x1, x1, #0x328
    6cbc:	bl	4220 <PyUnicode_AsEncodedString@plt>
    6cc0:	mov	x19, x0
    6cc4:	cbz	x0, 6d34 <PySequence_Fast@plt+0x2624>
    6cc8:	add	x0, x0, #0x20
    6ccc:	stp	x19, x0, [x20]
    6cd0:	bl	4020 <strlen@plt>
    6cd4:	ldr	x1, [x19, #16]
    6cd8:	cmp	x1, x0
    6cdc:	b.ne	6bf8 <PySequence_Fast@plt+0x24e8>  // b.any
    6ce0:	mov	w21, #0x20000               	// #131072
    6ce4:	b	6c64 <PySequence_Fast@plt+0x2554>
    6ce8:	mov	x0, x19
    6cec:	bl	3fe0 <_PyUnicode_Ready@plt>
    6cf0:	cmn	w0, #0x1
    6cf4:	b.eq	6c28 <PySequence_Fast@plt+0x2518>  // b.none
    6cf8:	ldrb	w0, [x19, #32]
    6cfc:	b	6ba8 <PySequence_Fast@plt+0x2498>
    6d00:	adrp	x3, 27000 <PyInit__socket@@Base+0x19e80>
    6d04:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6d08:	ldr	x2, [x0, #24]
    6d0c:	add	x1, x1, #0x350
    6d10:	ldr	x3, [x3, #3976]
    6d14:	ldr	x0, [x3]
    6d18:	bl	4620 <PyErr_Format@plt>
    6d1c:	b	6c28 <PySequence_Fast@plt+0x2518>
    6d20:	tst	x0, #0x40
    6d24:	add	x1, x19, #0x48
    6d28:	add	x0, x19, #0x30
    6d2c:	csel	x0, x1, x0, eq  // eq = none
    6d30:	b	6bbc <PySequence_Fast@plt+0x24ac>
    6d34:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6d38:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6d3c:	add	x1, x1, #0x330
    6d40:	ldr	x0, [x0, #3976]
    6d44:	ldr	x0, [x0]
    6d48:	bl	41d0 <PyErr_SetString@plt>
    6d4c:	b	6c28 <PySequence_Fast@plt+0x2518>
    6d50:	stp	x29, x30, [sp, #-80]!
    6d54:	mov	x29, sp
    6d58:	stp	x19, x20, [sp, #16]
    6d5c:	mov	w20, w2
    6d60:	mov	x2, #0x0                   	// #0
    6d64:	stp	x21, x22, [sp, #32]
    6d68:	mov	w22, w1
    6d6c:	mov	w21, w3
    6d70:	mov	x1, #0x0                   	// #0
    6d74:	str	x23, [sp, #48]
    6d78:	mov	w23, w0
    6d7c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    6d80:	add	x0, x0, #0x3d8
    6d84:	bl	4210 <PyType_GenericNew@plt>
    6d88:	cbz	x0, 6e1c <PySequence_Fast@plt+0x270c>
    6d8c:	mov	x19, x0
    6d90:	mov	w1, #0xf7ff                	// #63487
    6d94:	movk	w1, #0xfff7, lsl #16
    6d98:	adrp	x0, 4000 <recvmsg@plt>
    6d9c:	and	w1, w20, w1
    6da0:	add	x0, x0, #0x7f8
    6da4:	stp	w23, w22, [x19, #16]
    6da8:	stp	w1, w21, [x19, #24]
    6dac:	str	x0, [x19, #32]
    6db0:	tbnz	w20, #11, 6ddc <PySequence_Fast@plt+0x26cc>
    6db4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    6db8:	ldr	x0, [x0, #968]
    6dbc:	str	x0, [x19, #40]
    6dc0:	tbz	x0, #63, 6e38 <PySequence_Fast@plt+0x2728>
    6dc4:	mov	x0, x19
    6dc8:	ldp	x19, x20, [sp, #16]
    6dcc:	ldp	x21, x22, [sp, #32]
    6dd0:	ldr	x23, [sp, #48]
    6dd4:	ldp	x29, x30, [sp], #80
    6dd8:	ret
    6ddc:	str	xzr, [x19, #40]
    6de0:	mov	x0, x19
    6de4:	ldp	x19, x20, [sp, #16]
    6de8:	ldp	x21, x22, [sp, #32]
    6dec:	ldr	x23, [sp, #48]
    6df0:	ldp	x29, x30, [sp], #80
    6df4:	ret
    6df8:	bl	40c0 <PyEval_RestoreThread@plt>
    6dfc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    6e00:	ldr	x0, [x0, #3984]
    6e04:	ldr	x0, [x0]
    6e08:	bl	40e0 <PyErr_SetFromErrno@plt>
    6e0c:	ldr	x0, [x19]
    6e10:	sub	x0, x0, #0x1
    6e14:	str	x0, [x19]
    6e18:	cbz	x0, 6e8c <PySequence_Fast@plt+0x277c>
    6e1c:	mov	x19, #0x0                   	// #0
    6e20:	mov	x0, x19
    6e24:	ldp	x19, x20, [sp, #16]
    6e28:	ldp	x21, x22, [sp, #32]
    6e2c:	ldr	x23, [sp, #48]
    6e30:	ldp	x29, x30, [sp], #80
    6e34:	ret
    6e38:	str	wzr, [sp, #76]
    6e3c:	bl	4570 <PyEval_SaveThread@plt>
    6e40:	ldr	w1, [sp, #76]
    6e44:	mov	x20, x0
    6e48:	ldr	w0, [x19, #16]
    6e4c:	add	x2, sp, #0x4c
    6e50:	cmp	w1, #0x0
    6e54:	mov	x1, #0x5421                	// #21537
    6e58:	cset	w3, eq  // eq = none
    6e5c:	str	w3, [sp, #76]
    6e60:	bl	4700 <ioctl@plt>
    6e64:	cmn	w0, #0x1
    6e68:	mov	x0, x20
    6e6c:	b.eq	6df8 <PySequence_Fast@plt+0x26e8>  // b.none
    6e70:	bl	40c0 <PyEval_RestoreThread@plt>
    6e74:	mov	x0, x19
    6e78:	ldp	x19, x20, [sp, #16]
    6e7c:	ldp	x21, x22, [sp, #32]
    6e80:	ldr	x23, [sp, #48]
    6e84:	ldp	x29, x30, [sp], #80
    6e88:	ret
    6e8c:	mov	x0, x19
    6e90:	mov	x19, #0x0                   	// #0
    6e94:	bl	4180 <_Py_Dealloc@plt>
    6e98:	b	6dc4 <PySequence_Fast@plt+0x26b4>
    6e9c:	nop
    6ea0:	stp	x29, x30, [sp, #-96]!
    6ea4:	mov	x0, x1
    6ea8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    6eac:	mov	x29, sp
    6eb0:	add	x4, sp, #0x54
    6eb4:	add	x1, x1, #0x3b0
    6eb8:	add	x3, sp, #0x50
    6ebc:	add	x2, sp, #0x4c
    6ec0:	stp	x19, x20, [sp, #16]
    6ec4:	mov	w20, #0x1                   	// #1
    6ec8:	stp	w20, w20, [sp, #76]
    6ecc:	str	wzr, [sp, #84]
    6ed0:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    6ed4:	cbz	w0, 7050 <PySequence_Fast@plt+0x2940>
    6ed8:	adrp	x19, 28000 <PyInit__socket@@Base+0x1ae80>
    6edc:	stp	x23, x24, [sp, #48]
    6ee0:	add	x23, x19, #0x3c8
    6ee4:	stp	x21, x22, [sp, #32]
    6ee8:	bl	4570 <PyEval_SaveThread@plt>
    6eec:	mov	x22, x0
    6ef0:	ldr	w0, [x23, #8]
    6ef4:	cbnz	w0, 6fc8 <PySequence_Fast@plt+0x28b8>
    6ef8:	ldp	w0, w1, [sp, #76]
    6efc:	add	x3, sp, #0x58
    6f00:	ldr	w2, [sp, #84]
    6f04:	bl	4630 <socketpair@plt>
    6f08:	mov	w21, w0
    6f0c:	mov	x0, x22
    6f10:	bl	40c0 <PyEval_RestoreThread@plt>
    6f14:	tbnz	w21, #31, 707c <PySequence_Fast@plt+0x296c>
    6f18:	ldr	w0, [sp, #88]
    6f1c:	add	x19, x19, #0x3c8
    6f20:	add	x19, x19, #0x8
    6f24:	mov	w1, #0x0                   	// #0
    6f28:	mov	x2, x19
    6f2c:	bl	4130 <_Py_set_inheritable@plt>
    6f30:	tbnz	w0, #31, 7004 <PySequence_Fast@plt+0x28f4>
    6f34:	ldr	w0, [sp, #92]
    6f38:	mov	x2, x19
    6f3c:	mov	w1, #0x0                   	// #0
    6f40:	bl	4130 <_Py_set_inheritable@plt>
    6f44:	tbnz	w0, #31, 7004 <PySequence_Fast@plt+0x28f4>
    6f48:	ldp	w1, w2, [sp, #76]
    6f4c:	ldp	w3, w0, [sp, #84]
    6f50:	bl	6d50 <PySequence_Fast@plt+0x2640>
    6f54:	mov	x20, x0
    6f58:	cbz	x0, 7004 <PySequence_Fast@plt+0x28f4>
    6f5c:	ldp	w1, w2, [sp, #76]
    6f60:	ldr	w3, [sp, #84]
    6f64:	ldr	w0, [sp, #92]
    6f68:	bl	6d50 <PySequence_Fast@plt+0x2640>
    6f6c:	mov	x21, x0
    6f70:	cbz	x0, 7030 <PySequence_Fast@plt+0x2920>
    6f74:	mov	x2, x0
    6f78:	mov	x1, x20
    6f7c:	mov	x0, #0x2                   	// #2
    6f80:	bl	46d0 <PyTuple_Pack@plt>
    6f84:	mov	x19, x0
    6f88:	ldr	x0, [x20]
    6f8c:	sub	x0, x0, #0x1
    6f90:	str	x0, [x20]
    6f94:	cbnz	x0, 6fa0 <PySequence_Fast@plt+0x2890>
    6f98:	mov	x0, x20
    6f9c:	bl	4180 <_Py_Dealloc@plt>
    6fa0:	ldr	x1, [x21]
    6fa4:	sub	x1, x1, #0x1
    6fa8:	str	x1, [x21]
    6fac:	cbz	x1, 70a8 <PySequence_Fast@plt+0x2998>
    6fb0:	mov	x0, x19
    6fb4:	ldp	x19, x20, [sp, #16]
    6fb8:	ldp	x21, x22, [sp, #32]
    6fbc:	ldp	x23, x24, [sp, #48]
    6fc0:	ldp	x29, x30, [sp], #96
    6fc4:	ret
    6fc8:	ldp	w0, w1, [sp, #76]
    6fcc:	add	x24, sp, #0x58
    6fd0:	ldr	w2, [sp, #84]
    6fd4:	mov	x3, x24
    6fd8:	orr	w1, w1, #0x80000
    6fdc:	bl	4630 <socketpair@plt>
    6fe0:	mov	w21, w0
    6fe4:	ldr	w1, [x23, #8]
    6fe8:	cmn	w1, #0x1
    6fec:	b.ne	6f0c <PySequence_Fast@plt+0x27fc>  // b.any
    6ff0:	tbnz	w0, #31, 7064 <PySequence_Fast@plt+0x2954>
    6ff4:	mov	x0, x22
    6ff8:	str	w20, [x23, #8]
    6ffc:	bl	40c0 <PyEval_RestoreThread@plt>
    7000:	b	6f18 <PySequence_Fast@plt+0x2808>
    7004:	ldr	w0, [sp, #88]
    7008:	mov	x19, #0x0                   	// #0
    700c:	bl	4380 <close@plt>
    7010:	ldr	w0, [sp, #92]
    7014:	bl	4380 <close@plt>
    7018:	ldp	x21, x22, [sp, #32]
    701c:	ldp	x23, x24, [sp, #48]
    7020:	mov	x0, x19
    7024:	ldp	x19, x20, [sp, #16]
    7028:	ldp	x29, x30, [sp], #96
    702c:	ret
    7030:	ldr	w0, [sp, #92]
    7034:	bl	4380 <close@plt>
    7038:	ldr	x0, [x20]
    703c:	sub	x0, x0, #0x1
    7040:	str	x0, [x20]
    7044:	cbz	x0, 70c8 <PySequence_Fast@plt+0x29b8>
    7048:	ldp	x21, x22, [sp, #32]
    704c:	ldp	x23, x24, [sp, #48]
    7050:	mov	x19, #0x0                   	// #0
    7054:	mov	x0, x19
    7058:	ldp	x19, x20, [sp, #16]
    705c:	ldp	x29, x30, [sp], #96
    7060:	ret
    7064:	bl	4660 <__errno_location@plt>
    7068:	ldr	w0, [x0]
    706c:	cmp	w0, #0x16
    7070:	b.eq	70e0 <PySequence_Fast@plt+0x29d0>  // b.none
    7074:	mov	x0, x22
    7078:	bl	40c0 <PyEval_RestoreThread@plt>
    707c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    7080:	ldr	x0, [x0, #3984]
    7084:	ldr	x0, [x0]
    7088:	bl	40e0 <PyErr_SetFromErrno@plt>
    708c:	mov	x19, x0
    7090:	mov	x0, x19
    7094:	ldp	x19, x20, [sp, #16]
    7098:	ldp	x21, x22, [sp, #32]
    709c:	ldp	x23, x24, [sp, #48]
    70a0:	ldp	x29, x30, [sp], #96
    70a4:	ret
    70a8:	mov	x0, x21
    70ac:	bl	4180 <_Py_Dealloc@plt>
    70b0:	mov	x0, x19
    70b4:	ldp	x19, x20, [sp, #16]
    70b8:	ldp	x21, x22, [sp, #32]
    70bc:	ldp	x23, x24, [sp, #48]
    70c0:	ldp	x29, x30, [sp], #96
    70c4:	ret
    70c8:	mov	x0, x20
    70cc:	mov	x19, #0x0                   	// #0
    70d0:	bl	4180 <_Py_Dealloc@plt>
    70d4:	ldp	x21, x22, [sp, #32]
    70d8:	ldp	x23, x24, [sp, #48]
    70dc:	b	7020 <PySequence_Fast@plt+0x2910>
    70e0:	ldp	w0, w1, [sp, #76]
    70e4:	mov	x3, x24
    70e8:	ldr	w2, [sp, #84]
    70ec:	str	wzr, [x23, #8]
    70f0:	bl	4630 <socketpair@plt>
    70f4:	mov	w21, w0
    70f8:	b	6f0c <PySequence_Fast@plt+0x27fc>
    70fc:	nop
    7100:	stp	x29, x30, [sp, #-192]!
    7104:	mov	x29, sp
    7108:	stp	x19, x20, [sp, #16]
    710c:	cbz	x0, 7460 <PySequence_Fast@plt+0x2d50>
    7110:	mov	x20, x0
    7114:	ldr	w0, [x0, #16]
    7118:	stp	x21, x22, [sp, #32]
    711c:	mov	w21, w2
    7120:	cmp	w0, w2
    7124:	b.ne	73c0 <PySequence_Fast@plt+0x2cb0>  // b.any
    7128:	mov	x0, #0x0                   	// #0
    712c:	stp	x23, x24, [sp, #48]
    7130:	mov	x23, x1
    7134:	bl	3fd0 <PyList_New@plt>
    7138:	mov	x19, x0
    713c:	cbz	x0, 7270 <PySequence_Fast@plt+0x2b60>
    7140:	mov	x0, #0x0                   	// #0
    7144:	bl	3fd0 <PyList_New@plt>
    7148:	mov	x22, x0
    714c:	cbz	x0, 7260 <PySequence_Fast@plt+0x2b50>
    7150:	stp	x25, x26, [sp, #64]
    7154:	ldr	x25, [x20, #8]
    7158:	cbz	x25, 71a0 <PySequence_Fast@plt+0x2a90>
    715c:	ldr	x0, [x25]
    7160:	cbz	x0, 71a0 <PySequence_Fast@plt+0x2a90>
    7164:	nop
    7168:	bl	4550 <PyUnicode_FromString@plt>
    716c:	mov	x24, x0
    7170:	mov	x0, x19
    7174:	cbz	x24, 7220 <PySequence_Fast@plt+0x2b10>
    7178:	mov	x1, x24
    717c:	bl	4360 <PyList_Append@plt>
    7180:	ldr	x1, [x24]
    7184:	mov	w26, w0
    7188:	sub	x1, x1, #0x1
    718c:	str	x1, [x24]
    7190:	cbz	x1, 7214 <PySequence_Fast@plt+0x2b04>
    7194:	cbnz	w26, 7220 <PySequence_Fast@plt+0x2b10>
    7198:	ldr	x0, [x25, #8]!
    719c:	cbnz	x0, 7168 <PySequence_Fast@plt+0x2a58>
    71a0:	ldr	x24, [x20, #24]
    71a4:	ldr	x0, [x24]
    71a8:	cbz	x0, 7310 <PySequence_Fast@plt+0x2c00>
    71ac:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    71b0:	add	x25, sp, #0x70
    71b4:	add	x26, sp, #0x90
    71b8:	stp	x27, x28, [sp, #80]
    71bc:	add	x28, x25, #0x4
    71c0:	ldr	x0, [x0, #3984]
    71c4:	str	x0, [sp, #104]
    71c8:	cmp	w21, #0x2
    71cc:	b.eq	733c <PySequence_Fast@plt+0x2c2c>  // b.none
    71d0:	cmp	w21, #0xa
    71d4:	b.eq	728c <PySequence_Fast@plt+0x2b7c>  // b.none
    71d8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    71dc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    71e0:	add	x1, x1, #0x3c8
    71e4:	mov	x20, #0x0                   	// #0
    71e8:	ldr	x0, [x0, #3984]
    71ec:	ldr	x0, [x0]
    71f0:	bl	41d0 <PyErr_SetString@plt>
    71f4:	ldp	x21, x22, [sp, #32]
    71f8:	ldp	x23, x24, [sp, #48]
    71fc:	ldp	x25, x26, [sp, #64]
    7200:	ldp	x27, x28, [sp, #80]
    7204:	mov	x0, x20
    7208:	ldp	x19, x20, [sp, #16]
    720c:	ldp	x29, x30, [sp], #192
    7210:	ret
    7214:	mov	x0, x24
    7218:	bl	4180 <_Py_Dealloc@plt>
    721c:	cbz	w26, 7198 <PySequence_Fast@plt+0x2a88>
    7220:	mov	x20, #0x0                   	// #0
    7224:	ldr	x0, [x19]
    7228:	sub	x0, x0, #0x1
    722c:	str	x0, [x19]
    7230:	cbz	x0, 7418 <PySequence_Fast@plt+0x2d08>
    7234:	ldr	x1, [x22]
    7238:	sub	x1, x1, #0x1
    723c:	str	x1, [x22]
    7240:	cbz	x1, 73f4 <PySequence_Fast@plt+0x2ce4>
    7244:	mov	x0, x20
    7248:	ldp	x19, x20, [sp, #16]
    724c:	ldp	x21, x22, [sp, #32]
    7250:	ldp	x23, x24, [sp, #48]
    7254:	ldp	x25, x26, [sp, #64]
    7258:	ldp	x29, x30, [sp], #192
    725c:	ret
    7260:	ldr	x0, [x19]
    7264:	sub	x0, x0, #0x1
    7268:	str	x0, [x19]
    726c:	cbz	x0, 7424 <PySequence_Fast@plt+0x2d14>
    7270:	ldp	x21, x22, [sp, #32]
    7274:	ldp	x23, x24, [sp, #48]
    7278:	mov	x20, #0x0                   	// #0
    727c:	mov	x0, x20
    7280:	ldp	x19, x20, [sp, #16]
    7284:	ldp	x29, x30, [sp], #192
    7288:	ret
    728c:	stp	xzr, xzr, [x25]
    7290:	mov	x2, x26
    7294:	add	x1, x25, #0x8
    7298:	str	xzr, [x25, #16]
    729c:	mov	w0, w21
    72a0:	str	wzr, [x25, #24]
    72a4:	mov	w3, #0x2e                  	// #46
    72a8:	strh	w21, [sp, #112]
    72ac:	ldr	x4, [x24]
    72b0:	ldp	x4, x5, [x4]
    72b4:	stp	x4, x5, [sp, #120]
    72b8:	bl	46e0 <inet_ntop@plt>
    72bc:	mov	x27, x0
    72c0:	cbz	x0, 743c <PySequence_Fast@plt+0x2d2c>
    72c4:	mov	x0, x26
    72c8:	bl	4550 <PyUnicode_FromString@plt>
    72cc:	mov	x27, x0
    72d0:	ldr	x0, [x20, #24]
    72d4:	cmp	x0, x24
    72d8:	b.eq	73a4 <PySequence_Fast@plt+0x2c94>  // b.none
    72dc:	cbz	x27, 74bc <PySequence_Fast@plt+0x2dac>
    72e0:	mov	x1, x27
    72e4:	mov	x0, x22
    72e8:	bl	4360 <PyList_Append@plt>
    72ec:	mov	w3, w0
    72f0:	ldr	x2, [x27]
    72f4:	sub	x2, x2, #0x1
    72f8:	str	x2, [x27]
    72fc:	cbz	x2, 7390 <PySequence_Fast@plt+0x2c80>
    7300:	cbnz	w3, 74bc <PySequence_Fast@plt+0x2dac>
    7304:	ldr	x0, [x24, #8]!
    7308:	cbnz	x0, 71c8 <PySequence_Fast@plt+0x2ab8>
    730c:	ldp	x27, x28, [sp, #80]
    7310:	ldr	x0, [x20]
    7314:	bl	4550 <PyUnicode_FromString@plt>
    7318:	mov	x1, x0
    731c:	cbz	x0, 7220 <PySequence_Fast@plt+0x2b10>
    7320:	mov	x3, x22
    7324:	mov	x2, x19
    7328:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    732c:	add	x0, x0, #0x3e8
    7330:	bl	4640 <_Py_BuildValue_SizeT@plt>
    7334:	mov	x20, x0
    7338:	b	7224 <PySequence_Fast@plt+0x2b14>
    733c:	stp	xzr, xzr, [x25]
    7340:	mov	x2, x26
    7344:	mov	x1, x28
    7348:	ldr	x4, [x24]
    734c:	strh	w21, [sp, #112]
    7350:	mov	w0, w21
    7354:	mov	w3, #0x10                  	// #16
    7358:	ldr	w4, [x4]
    735c:	str	w4, [sp, #116]
    7360:	bl	46e0 <inet_ntop@plt>
    7364:	mov	x27, x0
    7368:	cbz	x0, 7450 <PySequence_Fast@plt+0x2d40>
    736c:	mov	x0, x26
    7370:	bl	4550 <PyUnicode_FromString@plt>
    7374:	mov	x27, x0
    7378:	ldr	x0, [x20, #24]
    737c:	cmp	x0, x24
    7380:	b.ne	72dc <PySequence_Fast@plt+0x2bcc>  // b.any
    7384:	ldp	x2, x3, [sp, #112]
    7388:	stp	x2, x3, [x23]
    738c:	b	72dc <PySequence_Fast@plt+0x2bcc>
    7390:	mov	x0, x27
    7394:	str	w3, [sp, #100]
    7398:	bl	4180 <_Py_Dealloc@plt>
    739c:	ldr	w3, [sp, #100]
    73a0:	b	7300 <PySequence_Fast@plt+0x2bf0>
    73a4:	ldp	x2, x3, [x25]
    73a8:	stp	x2, x3, [x23]
    73ac:	ldr	w0, [x25, #24]
    73b0:	ldr	x2, [x25, #16]
    73b4:	str	x2, [x23, #16]
    73b8:	str	w0, [x23, #24]
    73bc:	b	72dc <PySequence_Fast@plt+0x2bcc>
    73c0:	bl	4660 <__errno_location@plt>
    73c4:	mov	x20, #0x0                   	// #0
    73c8:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    73cc:	mov	w2, #0x61                  	// #97
    73d0:	str	w2, [x0]
    73d4:	ldr	x1, [x1, #3984]
    73d8:	ldr	x0, [x1]
    73dc:	bl	40e0 <PyErr_SetFromErrno@plt>
    73e0:	mov	x0, x20
    73e4:	ldp	x19, x20, [sp, #16]
    73e8:	ldp	x21, x22, [sp, #32]
    73ec:	ldp	x29, x30, [sp], #192
    73f0:	ret
    73f4:	mov	x0, x22
    73f8:	bl	4180 <_Py_Dealloc@plt>
    73fc:	mov	x0, x20
    7400:	ldp	x19, x20, [sp, #16]
    7404:	ldp	x21, x22, [sp, #32]
    7408:	ldp	x23, x24, [sp, #48]
    740c:	ldp	x25, x26, [sp, #64]
    7410:	ldp	x29, x30, [sp], #192
    7414:	ret
    7418:	mov	x0, x19
    741c:	bl	4180 <_Py_Dealloc@plt>
    7420:	b	7234 <PySequence_Fast@plt+0x2b24>
    7424:	mov	x0, x19
    7428:	mov	x20, #0x0                   	// #0
    742c:	bl	4180 <_Py_Dealloc@plt>
    7430:	ldp	x21, x22, [sp, #32]
    7434:	ldp	x23, x24, [sp, #48]
    7438:	b	7204 <PySequence_Fast@plt+0x2af4>
    743c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    7440:	ldr	x0, [x0, #3984]
    7444:	ldr	x0, [x0]
    7448:	bl	40e0 <PyErr_SetFromErrno@plt>
    744c:	b	72d0 <PySequence_Fast@plt+0x2bc0>
    7450:	ldr	x0, [sp, #104]
    7454:	ldr	x0, [x0]
    7458:	bl	40e0 <PyErr_SetFromErrno@plt>
    745c:	b	7378 <PySequence_Fast@plt+0x2c68>
    7460:	bl	4060 <__h_errno_location@plt>
    7464:	ldr	w19, [x0]
    7468:	mov	w0, w19
    746c:	bl	4410 <hstrerror@plt>
    7470:	mov	w1, w19
    7474:	mov	x2, x0
    7478:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    747c:	add	x0, x0, #0x3c0
    7480:	bl	4640 <_Py_BuildValue_SizeT@plt>
    7484:	mov	x19, x0
    7488:	cbz	x0, 7278 <PySequence_Fast@plt+0x2b68>
    748c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    7490:	mov	x1, x19
    7494:	ldr	x0, [x0, #3864]
    7498:	bl	41a0 <PyErr_SetObject@plt>
    749c:	ldr	x0, [x19]
    74a0:	sub	x0, x0, #0x1
    74a4:	str	x0, [x19]
    74a8:	cbnz	x0, 7278 <PySequence_Fast@plt+0x2b68>
    74ac:	mov	x0, x19
    74b0:	mov	x20, #0x0                   	// #0
    74b4:	bl	4180 <_Py_Dealloc@plt>
    74b8:	b	7204 <PySequence_Fast@plt+0x2af4>
    74bc:	ldp	x27, x28, [sp, #80]
    74c0:	b	7220 <PySequence_Fast@plt+0x2b10>
    74c4:	nop
    74c8:	stp	x29, x30, [sp, #-192]!
    74cc:	mov	x29, sp
    74d0:	ldr	w1, [x0, #20]
    74d4:	stp	x19, x20, [sp, #16]
    74d8:	mov	x19, x0
    74dc:	cmp	w1, #0x15
    74e0:	b.eq	75cc <PySequence_Fast@plt+0x2ebc>  // b.none
    74e4:	b.gt	7594 <PySequence_Fast@plt+0x2e84>
    74e8:	cmp	w1, #0xa
    74ec:	b.eq	7678 <PySequence_Fast@plt+0x2f68>  // b.none
    74f0:	b.le	7578 <PySequence_Fast@plt+0x2e68>
    74f4:	cmp	w1, #0x10
    74f8:	b.eq	75b0 <PySequence_Fast@plt+0x2ea0>  // b.none
    74fc:	cmp	w1, #0x11
    7500:	b.ne	7604 <PySequence_Fast@plt+0x2ef4>  // b.any
    7504:	mov	w0, #0x14                  	// #20
    7508:	mov	x2, #0x14                  	// #20
    750c:	stp	x21, x22, [sp, #32]
    7510:	str	w0, [sp, #60]
    7514:	nop
    7518:	mov	w1, #0x0                   	// #0
    751c:	add	x22, sp, #0x40
    7520:	mov	x0, x22
    7524:	bl	4270 <memset@plt>
    7528:	bl	4570 <PyEval_SaveThread@plt>
    752c:	mov	x21, x0
    7530:	ldr	w0, [x19, #16]
    7534:	mov	x1, x22
    7538:	add	x2, sp, #0x3c
    753c:	bl	4680 <getsockname@plt>
    7540:	mov	w20, w0
    7544:	mov	x0, x21
    7548:	bl	40c0 <PyEval_RestoreThread@plt>
    754c:	tbnz	w20, #31, 764c <PySequence_Fast@plt+0x2f3c>
    7550:	ldr	w2, [sp, #60]
    7554:	cbz	x2, 7624 <PySequence_Fast@plt+0x2f14>
    7558:	ldr	w0, [x19, #16]
    755c:	mov	x1, x22
    7560:	ldr	w3, [x19, #28]
    7564:	bl	5818 <PySequence_Fast@plt+0x1108>
    7568:	ldp	x21, x22, [sp, #32]
    756c:	ldp	x19, x20, [sp, #16]
    7570:	ldp	x29, x30, [sp], #192
    7574:	ret
    7578:	cmp	w1, #0x1
    757c:	b.ne	75c4 <PySequence_Fast@plt+0x2eb4>  // b.any
    7580:	mov	w0, #0x6e                  	// #110
    7584:	mov	x2, #0x6e                  	// #110
    7588:	stp	x21, x22, [sp, #32]
    758c:	str	w0, [sp, #60]
    7590:	b	7518 <PySequence_Fast@plt+0x2e08>
    7594:	cmp	w1, #0x26
    7598:	b.eq	7664 <PySequence_Fast@plt+0x2f54>  // b.none
    759c:	b.le	75e0 <PySequence_Fast@plt+0x2ed0>
    75a0:	cmp	w1, #0x28
    75a4:	b.eq	75cc <PySequence_Fast@plt+0x2ebc>  // b.none
    75a8:	cmp	w1, #0x2a
    75ac:	b.ne	7604 <PySequence_Fast@plt+0x2ef4>  // b.any
    75b0:	mov	w0, #0xc                   	// #12
    75b4:	mov	x2, #0xc                   	// #12
    75b8:	stp	x21, x22, [sp, #32]
    75bc:	str	w0, [sp, #60]
    75c0:	b	7518 <PySequence_Fast@plt+0x2e08>
    75c4:	cmp	w1, #0x2
    75c8:	b.ne	7604 <PySequence_Fast@plt+0x2ef4>  // b.any
    75cc:	mov	w0, #0x10                  	// #16
    75d0:	mov	x2, #0x10                  	// #16
    75d4:	stp	x21, x22, [sp, #32]
    75d8:	str	w0, [sp, #60]
    75dc:	b	7518 <PySequence_Fast@plt+0x2e08>
    75e0:	cmp	w1, #0x1d
    75e4:	b.ne	75fc <PySequence_Fast@plt+0x2eec>  // b.any
    75e8:	mov	w0, #0x18                  	// #24
    75ec:	mov	x2, #0x18                  	// #24
    75f0:	stp	x21, x22, [sp, #32]
    75f4:	str	w0, [sp, #60]
    75f8:	b	7518 <PySequence_Fast@plt+0x2e08>
    75fc:	cmp	w1, #0x1e
    7600:	b.eq	75cc <PySequence_Fast@plt+0x2ebc>  // b.none
    7604:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    7608:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    760c:	add	x1, x1, #0x3f0
    7610:	ldr	x0, [x0, #3984]
    7614:	ldr	x0, [x0]
    7618:	bl	41d0 <PyErr_SetString@plt>
    761c:	mov	x0, #0x0                   	// #0
    7620:	b	756c <PySequence_Fast@plt+0x2e5c>
    7624:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    7628:	ldp	x21, x22, [sp, #32]
    762c:	ldr	x1, [x1, #4024]
    7630:	ldp	x19, x20, [sp, #16]
    7634:	mov	x0, x1
    7638:	ldr	x2, [x1]
    763c:	add	x2, x2, #0x1
    7640:	str	x2, [x1]
    7644:	ldp	x29, x30, [sp], #192
    7648:	ret
    764c:	ldr	x0, [x19, #32]
    7650:	blr	x0
    7654:	ldp	x19, x20, [sp, #16]
    7658:	ldp	x21, x22, [sp, #32]
    765c:	ldp	x29, x30, [sp], #192
    7660:	ret
    7664:	mov	w0, #0x58                  	// #88
    7668:	mov	x2, #0x58                  	// #88
    766c:	stp	x21, x22, [sp, #32]
    7670:	str	w0, [sp, #60]
    7674:	b	7518 <PySequence_Fast@plt+0x2e08>
    7678:	mov	w0, #0x1c                  	// #28
    767c:	mov	x2, #0x1c                  	// #28
    7680:	stp	x21, x22, [sp, #32]
    7684:	str	w0, [sp, #60]
    7688:	b	7518 <PySequence_Fast@plt+0x2e08>
    768c:	nop
    7690:	stp	x29, x30, [sp, #-192]!
    7694:	mov	x29, sp
    7698:	ldr	w1, [x0, #20]
    769c:	stp	x19, x20, [sp, #16]
    76a0:	mov	x19, x0
    76a4:	cmp	w1, #0x15
    76a8:	b.eq	7794 <PySequence_Fast@plt+0x3084>  // b.none
    76ac:	b.gt	775c <PySequence_Fast@plt+0x304c>
    76b0:	cmp	w1, #0xa
    76b4:	b.eq	7840 <PySequence_Fast@plt+0x3130>  // b.none
    76b8:	b.le	7740 <PySequence_Fast@plt+0x3030>
    76bc:	cmp	w1, #0x10
    76c0:	b.eq	7778 <PySequence_Fast@plt+0x3068>  // b.none
    76c4:	cmp	w1, #0x11
    76c8:	b.ne	77cc <PySequence_Fast@plt+0x30bc>  // b.any
    76cc:	mov	w0, #0x14                  	// #20
    76d0:	mov	x2, #0x14                  	// #20
    76d4:	stp	x21, x22, [sp, #32]
    76d8:	str	w0, [sp, #60]
    76dc:	nop
    76e0:	mov	w1, #0x0                   	// #0
    76e4:	add	x22, sp, #0x40
    76e8:	mov	x0, x22
    76ec:	bl	4270 <memset@plt>
    76f0:	bl	4570 <PyEval_SaveThread@plt>
    76f4:	mov	x21, x0
    76f8:	ldr	w0, [x19, #16]
    76fc:	mov	x1, x22
    7700:	add	x2, sp, #0x3c
    7704:	bl	4030 <getpeername@plt>
    7708:	mov	w20, w0
    770c:	mov	x0, x21
    7710:	bl	40c0 <PyEval_RestoreThread@plt>
    7714:	tbnz	w20, #31, 7814 <PySequence_Fast@plt+0x3104>
    7718:	ldr	w2, [sp, #60]
    771c:	cbz	x2, 77ec <PySequence_Fast@plt+0x30dc>
    7720:	ldr	w0, [x19, #16]
    7724:	mov	x1, x22
    7728:	ldr	w3, [x19, #28]
    772c:	bl	5818 <PySequence_Fast@plt+0x1108>
    7730:	ldp	x21, x22, [sp, #32]
    7734:	ldp	x19, x20, [sp, #16]
    7738:	ldp	x29, x30, [sp], #192
    773c:	ret
    7740:	cmp	w1, #0x1
    7744:	b.ne	778c <PySequence_Fast@plt+0x307c>  // b.any
    7748:	mov	w0, #0x6e                  	// #110
    774c:	mov	x2, #0x6e                  	// #110
    7750:	stp	x21, x22, [sp, #32]
    7754:	str	w0, [sp, #60]
    7758:	b	76e0 <PySequence_Fast@plt+0x2fd0>
    775c:	cmp	w1, #0x26
    7760:	b.eq	782c <PySequence_Fast@plt+0x311c>  // b.none
    7764:	b.le	77a8 <PySequence_Fast@plt+0x3098>
    7768:	cmp	w1, #0x28
    776c:	b.eq	7794 <PySequence_Fast@plt+0x3084>  // b.none
    7770:	cmp	w1, #0x2a
    7774:	b.ne	77cc <PySequence_Fast@plt+0x30bc>  // b.any
    7778:	mov	w0, #0xc                   	// #12
    777c:	mov	x2, #0xc                   	// #12
    7780:	stp	x21, x22, [sp, #32]
    7784:	str	w0, [sp, #60]
    7788:	b	76e0 <PySequence_Fast@plt+0x2fd0>
    778c:	cmp	w1, #0x2
    7790:	b.ne	77cc <PySequence_Fast@plt+0x30bc>  // b.any
    7794:	mov	w0, #0x10                  	// #16
    7798:	mov	x2, #0x10                  	// #16
    779c:	stp	x21, x22, [sp, #32]
    77a0:	str	w0, [sp, #60]
    77a4:	b	76e0 <PySequence_Fast@plt+0x2fd0>
    77a8:	cmp	w1, #0x1d
    77ac:	b.ne	77c4 <PySequence_Fast@plt+0x30b4>  // b.any
    77b0:	mov	w0, #0x18                  	// #24
    77b4:	mov	x2, #0x18                  	// #24
    77b8:	stp	x21, x22, [sp, #32]
    77bc:	str	w0, [sp, #60]
    77c0:	b	76e0 <PySequence_Fast@plt+0x2fd0>
    77c4:	cmp	w1, #0x1e
    77c8:	b.eq	7794 <PySequence_Fast@plt+0x3084>  // b.none
    77cc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    77d0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    77d4:	add	x1, x1, #0x3f0
    77d8:	ldr	x0, [x0, #3984]
    77dc:	ldr	x0, [x0]
    77e0:	bl	41d0 <PyErr_SetString@plt>
    77e4:	mov	x0, #0x0                   	// #0
    77e8:	b	7734 <PySequence_Fast@plt+0x3024>
    77ec:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    77f0:	ldp	x21, x22, [sp, #32]
    77f4:	ldr	x1, [x1, #4024]
    77f8:	ldp	x19, x20, [sp, #16]
    77fc:	mov	x0, x1
    7800:	ldr	x2, [x1]
    7804:	add	x2, x2, #0x1
    7808:	str	x2, [x1]
    780c:	ldp	x29, x30, [sp], #192
    7810:	ret
    7814:	ldr	x0, [x19, #32]
    7818:	blr	x0
    781c:	ldp	x19, x20, [sp, #16]
    7820:	ldp	x21, x22, [sp, #32]
    7824:	ldp	x29, x30, [sp], #192
    7828:	ret
    782c:	mov	w0, #0x58                  	// #88
    7830:	mov	x2, #0x58                  	// #88
    7834:	stp	x21, x22, [sp, #32]
    7838:	str	w0, [sp, #60]
    783c:	b	76e0 <PySequence_Fast@plt+0x2fd0>
    7840:	mov	w0, #0x1c                  	// #28
    7844:	mov	x2, #0x1c                  	// #28
    7848:	stp	x21, x22, [sp, #32]
    784c:	str	w0, [sp, #60]
    7850:	b	76e0 <PySequence_Fast@plt+0x2fd0>
    7854:	nop
    7858:	stp	x29, x30, [sp, #-112]!
    785c:	mov	x29, sp
    7860:	stp	x19, x20, [sp, #16]
    7864:	mov	x20, x1
    7868:	stp	x21, x22, [sp, #32]
    786c:	mov	x21, x0
    7870:	mov	x22, x2
    7874:	stp	x27, x28, [sp, #80]
    7878:	add	x27, sp, #0x68
    787c:	stp	x23, x24, [sp, #48]
    7880:	mov	w24, #0x0                   	// #0
    7884:	mov	x23, #0x0                   	// #0
    7888:	stp	x25, x26, [sp, #64]
    788c:	mov	w26, #0x4                   	// #4
    7890:	mov	x25, #0xffffffffffffffff    	// #-1
    7894:	cmp	x22, #0x0
    7898:	b.le	7920 <PySequence_Fast@plt+0x3210>
    789c:	cbnz	w24, 7984 <PySequence_Fast@plt+0x3274>
    78a0:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    78a4:	add	x23, x22, x0
    78a8:	mov	x0, x22
    78ac:	ldr	w2, [x21, #16]
    78b0:	cmn	w2, #0x1
    78b4:	b.eq	7900 <PySequence_Fast@plt+0x31f0>  // b.none
    78b8:	mov	w1, #0x1                   	// #1
    78bc:	str	w2, [sp, #104]
    78c0:	strh	w26, [sp, #108]
    78c4:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    78c8:	mov	x19, x0
    78cc:	bl	4570 <PyEval_SaveThread@plt>
    78d0:	cmp	x19, #0x0
    78d4:	mov	x1, #0x1                   	// #1
    78d8:	csel	x2, x19, x25, ge  // ge = tcont
    78dc:	mov	x24, x0
    78e0:	mov	x0, x27
    78e4:	bl	4200 <poll@plt>
    78e8:	mov	w19, w0
    78ec:	mov	x0, x24
    78f0:	bl	40c0 <PyEval_RestoreThread@plt>
    78f4:	cmp	w19, #0x0
    78f8:	b.lt	796c <PySequence_Fast@plt+0x325c>  // b.tstop
    78fc:	b.eq	7990 <PySequence_Fast@plt+0x3280>  // b.none
    7900:	mov	w24, #0x1                   	// #1
    7904:	b	7920 <PySequence_Fast@plt+0x3210>
    7908:	bl	4660 <__errno_location@plt>
    790c:	ldr	w0, [x0]
    7910:	cmp	w0, #0x4
    7914:	b.ne	79c4 <PySequence_Fast@plt+0x32b4>  // b.any
    7918:	bl	45e0 <PyErr_CheckSignals@plt>
    791c:	cbnz	w0, 79a4 <PySequence_Fast@plt+0x3294>
    7920:	bl	4570 <PyEval_SaveThread@plt>
    7924:	mov	x28, x0
    7928:	ldp	x1, x2, [x20]
    792c:	ldr	w3, [x20, #16]
    7930:	ldr	w0, [x21, #16]
    7934:	bl	4450 <send@plt>
    7938:	mov	x19, x0
    793c:	str	x19, [x20, #24]
    7940:	mov	x0, x28
    7944:	bl	40c0 <PyEval_RestoreThread@plt>
    7948:	tbnz	x19, #63, 7908 <PySequence_Fast@plt+0x31f8>
    794c:	mov	w0, #0x0                   	// #0
    7950:	ldp	x19, x20, [sp, #16]
    7954:	ldp	x21, x22, [sp, #32]
    7958:	ldp	x23, x24, [sp, #48]
    795c:	ldp	x25, x26, [sp, #64]
    7960:	ldp	x27, x28, [sp, #80]
    7964:	ldp	x29, x30, [sp], #112
    7968:	ret
    796c:	bl	4660 <__errno_location@plt>
    7970:	ldr	w0, [x0]
    7974:	cmp	w0, #0x4
    7978:	b.ne	79d4 <PySequence_Fast@plt+0x32c4>  // b.any
    797c:	bl	45e0 <PyErr_CheckSignals@plt>
    7980:	cbnz	w0, 79a4 <PySequence_Fast@plt+0x3294>
    7984:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    7988:	subs	x0, x23, x0
    798c:	b.pl	78ac <PySequence_Fast@plt+0x319c>  // b.nfrst
    7990:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    7994:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    7998:	add	x1, x1, #0x410
    799c:	ldr	x0, [x0, #3872]
    79a0:	bl	41d0 <PyErr_SetString@plt>
    79a4:	mov	w0, #0xffffffff            	// #-1
    79a8:	ldp	x19, x20, [sp, #16]
    79ac:	ldp	x21, x22, [sp, #32]
    79b0:	ldp	x23, x24, [sp, #48]
    79b4:	ldp	x25, x26, [sp, #64]
    79b8:	ldp	x27, x28, [sp, #80]
    79bc:	ldp	x29, x30, [sp], #112
    79c0:	ret
    79c4:	ldr	x1, [x21, #40]
    79c8:	cmp	x1, #0x0
    79cc:	ccmp	w0, #0xb, #0x0, gt
    79d0:	b.eq	7894 <PySequence_Fast@plt+0x3184>  // b.none
    79d4:	ldr	x0, [x21, #32]
    79d8:	blr	x0
    79dc:	mov	w0, #0xffffffff            	// #-1
    79e0:	ldp	x19, x20, [sp, #16]
    79e4:	ldp	x21, x22, [sp, #32]
    79e8:	ldp	x23, x24, [sp, #48]
    79ec:	ldp	x25, x26, [sp, #64]
    79f0:	ldp	x27, x28, [sp, #80]
    79f4:	ldp	x29, x30, [sp], #112
    79f8:	ret
    79fc:	nop
    7a00:	stp	x29, x30, [sp, #-160]!
    7a04:	mov	x29, sp
    7a08:	stp	x19, x20, [sp, #16]
    7a0c:	add	x20, sp, #0x50
    7a10:	mov	x19, x0
    7a14:	mov	x2, x20
    7a18:	mov	x0, x1
    7a1c:	add	x3, sp, #0x2c
    7a20:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    7a24:	add	x1, x1, #0x420
    7a28:	str	wzr, [sp, #44]
    7a2c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    7a30:	cbz	w0, 7a7c <PySequence_Fast@plt+0x336c>
    7a34:	ldr	x4, [sp, #80]
    7a38:	str	x4, [sp, #48]
    7a3c:	ldr	w3, [sp, #44]
    7a40:	mov	x0, x19
    7a44:	ldr	x2, [x19, #40]
    7a48:	add	x1, sp, #0x30
    7a4c:	ldr	x4, [sp, #96]
    7a50:	str	x4, [sp, #56]
    7a54:	str	w3, [sp, #64]
    7a58:	bl	7858 <PySequence_Fast@plt+0x3148>
    7a5c:	tbnz	w0, #31, 7a8c <PySequence_Fast@plt+0x337c>
    7a60:	mov	x0, x20
    7a64:	bl	4100 <PyBuffer_Release@plt>
    7a68:	ldr	x0, [sp, #72]
    7a6c:	bl	42e0 <PyLong_FromSsize_t@plt>
    7a70:	ldp	x19, x20, [sp, #16]
    7a74:	ldp	x29, x30, [sp], #160
    7a78:	ret
    7a7c:	mov	x0, #0x0                   	// #0
    7a80:	ldp	x19, x20, [sp, #16]
    7a84:	ldp	x29, x30, [sp], #160
    7a88:	ret
    7a8c:	mov	x0, x20
    7a90:	bl	4100 <PyBuffer_Release@plt>
    7a94:	mov	x0, #0x0                   	// #0
    7a98:	b	7a70 <PySequence_Fast@plt+0x3360>
    7a9c:	nop
    7aa0:	stp	x29, x30, [sp, #-208]!
    7aa4:	mov	x29, sp
    7aa8:	stp	x21, x22, [sp, #32]
    7aac:	mov	x22, x0
    7ab0:	add	x3, sp, #0x5c
    7ab4:	mov	x0, x1
    7ab8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    7abc:	ldr	x21, [x22, #40]
    7ac0:	str	x25, [sp, #64]
    7ac4:	add	x25, sp, #0x80
    7ac8:	add	x1, x1, #0x430
    7acc:	mov	x2, x25
    7ad0:	stp	x19, x20, [sp, #16]
    7ad4:	str	wzr, [sp, #92]
    7ad8:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    7adc:	cbz	w0, 7bfc <PySequence_Fast@plt+0x34ec>
    7ae0:	stp	x23, x24, [sp, #48]
    7ae4:	cmp	x21, #0x0
    7ae8:	ldr	x20, [sp, #128]
    7aec:	ldr	x19, [sp, #144]
    7af0:	b.le	7b6c <PySequence_Fast@plt+0x345c>
    7af4:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    7af8:	add	x23, sp, #0x60
    7afc:	ldr	x1, [x22, #40]
    7b00:	add	x24, x0, x1
    7b04:	ldr	w3, [sp, #92]
    7b08:	mov	x2, x21
    7b0c:	mov	x1, x23
    7b10:	mov	x0, x22
    7b14:	stp	x20, x19, [sp, #96]
    7b18:	str	w3, [sp, #112]
    7b1c:	bl	7858 <PySequence_Fast@plt+0x3148>
    7b20:	tbnz	w0, #31, 7bb0 <PySequence_Fast@plt+0x34a0>
    7b24:	ldr	x1, [sp, #120]
    7b28:	add	x20, x20, x1
    7b2c:	sub	x19, x19, x1
    7b30:	bl	45e0 <PyErr_CheckSignals@plt>
    7b34:	cbnz	w0, 7bb0 <PySequence_Fast@plt+0x34a0>
    7b38:	cmp	x19, #0x0
    7b3c:	b.le	7bd8 <PySequence_Fast@plt+0x34c8>
    7b40:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    7b44:	sub	x21, x24, x0
    7b48:	cmp	x21, #0x0
    7b4c:	b.gt	7b04 <PySequence_Fast@plt+0x33f4>
    7b50:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    7b54:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    7b58:	mov	x19, #0x0                   	// #0
    7b5c:	add	x1, x1, #0x410
    7b60:	ldr	x0, [x0, #3872]
    7b64:	bl	41d0 <PyErr_SetString@plt>
    7b68:	b	7bb4 <PySequence_Fast@plt+0x34a4>
    7b6c:	add	x23, sp, #0x60
    7b70:	b	7b90 <PySequence_Fast@plt+0x3480>
    7b74:	ldr	x0, [sp, #120]
    7b78:	add	x20, x20, x0
    7b7c:	sub	x19, x19, x0
    7b80:	bl	45e0 <PyErr_CheckSignals@plt>
    7b84:	cbnz	w0, 7bb0 <PySequence_Fast@plt+0x34a0>
    7b88:	cmp	x19, #0x0
    7b8c:	b.le	7bd8 <PySequence_Fast@plt+0x34c8>
    7b90:	ldr	w3, [sp, #92]
    7b94:	mov	x2, x21
    7b98:	mov	x1, x23
    7b9c:	mov	x0, x22
    7ba0:	stp	x20, x19, [sp, #96]
    7ba4:	str	w3, [sp, #112]
    7ba8:	bl	7858 <PySequence_Fast@plt+0x3148>
    7bac:	tbz	w0, #31, 7b74 <PySequence_Fast@plt+0x3464>
    7bb0:	mov	x19, #0x0                   	// #0
    7bb4:	mov	x0, x25
    7bb8:	bl	4100 <PyBuffer_Release@plt>
    7bbc:	mov	x0, x19
    7bc0:	ldp	x19, x20, [sp, #16]
    7bc4:	ldp	x21, x22, [sp, #32]
    7bc8:	ldp	x23, x24, [sp, #48]
    7bcc:	ldr	x25, [sp, #64]
    7bd0:	ldp	x29, x30, [sp], #208
    7bd4:	ret
    7bd8:	mov	x0, x25
    7bdc:	bl	4100 <PyBuffer_Release@plt>
    7be0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    7be4:	ldr	x0, [x0, #4024]
    7be8:	mov	x19, x0
    7bec:	ldr	x1, [x0]
    7bf0:	add	x1, x1, #0x1
    7bf4:	str	x1, [x0]
    7bf8:	b	7bb4 <PySequence_Fast@plt+0x34a4>
    7bfc:	mov	x19, #0x0                   	// #0
    7c00:	mov	x0, x19
    7c04:	ldp	x19, x20, [sp, #16]
    7c08:	ldp	x21, x22, [sp, #32]
    7c0c:	ldr	x25, [sp, #64]
    7c10:	ldp	x29, x30, [sp], #208
    7c14:	ret
    7c18:	stp	x29, x30, [sp, #-272]!
    7c1c:	mov	x29, sp
    7c20:	stp	x19, x20, [sp, #16]
    7c24:	mov	x19, x0
    7c28:	ldr	w0, [x0, #20]
    7c2c:	stp	x21, x22, [sp, #32]
    7c30:	mov	x20, x4
    7c34:	mov	x21, x1
    7c38:	stp	x23, x24, [sp, #48]
    7c3c:	mov	x22, x2
    7c40:	mov	w23, w3
    7c44:	stp	x27, x28, [sp, #80]
    7c48:	cmp	w0, #0x15
    7c4c:	str	xzr, [x4]
    7c50:	b.eq	7da8 <PySequence_Fast@plt+0x3698>  // b.none
    7c54:	b.gt	7d74 <PySequence_Fast@plt+0x3664>
    7c58:	cmp	w0, #0xa
    7c5c:	b.eq	7f40 <PySequence_Fast@plt+0x3830>  // b.none
    7c60:	b.le	7d5c <PySequence_Fast@plt+0x364c>
    7c64:	cmp	w0, #0x10
    7c68:	b.eq	7d90 <PySequence_Fast@plt+0x3680>  // b.none
    7c6c:	cmp	w0, #0x11
    7c70:	b.ne	7dd8 <PySequence_Fast@plt+0x36c8>  // b.any
    7c74:	mov	w0, #0x14                  	// #20
    7c78:	stp	x25, x26, [sp, #64]
    7c7c:	str	w0, [sp, #132]
    7c80:	ldr	x26, [x19, #40]
    7c84:	add	x24, sp, #0x90
    7c88:	add	x27, sp, #0x84
    7c8c:	add	x0, sp, #0x88
    7c90:	str	xzr, [sp, #96]
    7c94:	str	wzr, [sp, #104]
    7c98:	str	x0, [sp, #112]
    7c9c:	cmp	x26, #0x0
    7ca0:	b.le	7cd8 <PySequence_Fast@plt+0x35c8>
    7ca4:	ldr	w0, [sp, #104]
    7ca8:	cbnz	w0, 7e10 <PySequence_Fast@plt+0x3700>
    7cac:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    7cb0:	add	x0, x26, x0
    7cb4:	str	x0, [sp, #96]
    7cb8:	mov	x0, x26
    7cbc:	b	7e20 <PySequence_Fast@plt+0x3710>
    7cc0:	bl	4660 <__errno_location@plt>
    7cc4:	ldr	w0, [x0]
    7cc8:	cmp	w0, #0x4
    7ccc:	b.ne	7ebc <PySequence_Fast@plt+0x37ac>  // b.any
    7cd0:	bl	45e0 <PyErr_CheckSignals@plt>
    7cd4:	cbnz	w0, 7e98 <PySequence_Fast@plt+0x3788>
    7cd8:	bl	4570 <PyEval_SaveThread@plt>
    7cdc:	mov	x25, x0
    7ce0:	ldr	w2, [sp, #132]
    7ce4:	mov	w1, #0x0                   	// #0
    7ce8:	mov	x0, x24
    7cec:	bl	4270 <memset@plt>
    7cf0:	ldr	w0, [x19, #16]
    7cf4:	mov	x5, x27
    7cf8:	mov	x4, x24
    7cfc:	mov	w3, w23
    7d00:	mov	x2, x22
    7d04:	mov	x1, x21
    7d08:	bl	4230 <recvfrom@plt>
    7d0c:	mov	x28, x0
    7d10:	mov	x0, x25
    7d14:	bl	40c0 <PyEval_RestoreThread@plt>
    7d18:	tbnz	x28, #63, 7cc0 <PySequence_Fast@plt+0x35b0>
    7d1c:	ldr	w2, [sp, #132]
    7d20:	cbz	x2, 7ef8 <PySequence_Fast@plt+0x37e8>
    7d24:	ldr	w0, [x19, #16]
    7d28:	mov	x1, x24
    7d2c:	ldr	w3, [x19, #28]
    7d30:	bl	5818 <PySequence_Fast@plt+0x1108>
    7d34:	str	x0, [x20]
    7d38:	cbz	x0, 7e98 <PySequence_Fast@plt+0x3788>
    7d3c:	ldp	x25, x26, [sp, #64]
    7d40:	mov	x0, x28
    7d44:	ldp	x19, x20, [sp, #16]
    7d48:	ldp	x21, x22, [sp, #32]
    7d4c:	ldp	x23, x24, [sp, #48]
    7d50:	ldp	x27, x28, [sp, #80]
    7d54:	ldp	x29, x30, [sp], #272
    7d58:	ret
    7d5c:	cmp	w0, #0x1
    7d60:	b.ne	7da0 <PySequence_Fast@plt+0x3690>  // b.any
    7d64:	mov	w0, #0x6e                  	// #110
    7d68:	stp	x25, x26, [sp, #64]
    7d6c:	str	w0, [sp, #132]
    7d70:	b	7c80 <PySequence_Fast@plt+0x3570>
    7d74:	cmp	w0, #0x26
    7d78:	b.eq	7f30 <PySequence_Fast@plt+0x3820>  // b.none
    7d7c:	b.le	7db8 <PySequence_Fast@plt+0x36a8>
    7d80:	cmp	w0, #0x28
    7d84:	b.eq	7da8 <PySequence_Fast@plt+0x3698>  // b.none
    7d88:	cmp	w0, #0x2a
    7d8c:	b.ne	7dd8 <PySequence_Fast@plt+0x36c8>  // b.any
    7d90:	mov	w0, #0xc                   	// #12
    7d94:	stp	x25, x26, [sp, #64]
    7d98:	str	w0, [sp, #132]
    7d9c:	b	7c80 <PySequence_Fast@plt+0x3570>
    7da0:	cmp	w0, #0x2
    7da4:	b.ne	7dd8 <PySequence_Fast@plt+0x36c8>  // b.any
    7da8:	mov	w0, #0x10                  	// #16
    7dac:	stp	x25, x26, [sp, #64]
    7db0:	str	w0, [sp, #132]
    7db4:	b	7c80 <PySequence_Fast@plt+0x3570>
    7db8:	cmp	w0, #0x1d
    7dbc:	b.ne	7dd0 <PySequence_Fast@plt+0x36c0>  // b.any
    7dc0:	mov	w0, #0x18                  	// #24
    7dc4:	stp	x25, x26, [sp, #64]
    7dc8:	str	w0, [sp, #132]
    7dcc:	b	7c80 <PySequence_Fast@plt+0x3570>
    7dd0:	cmp	w0, #0x1e
    7dd4:	b.eq	7da8 <PySequence_Fast@plt+0x3698>  // b.none
    7dd8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    7ddc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    7de0:	mov	x28, #0xffffffffffffffff    	// #-1
    7de4:	add	x1, x1, #0x3f0
    7de8:	ldr	x0, [x0, #3984]
    7dec:	ldr	x0, [x0]
    7df0:	bl	41d0 <PyErr_SetString@plt>
    7df4:	b	7d40 <PySequence_Fast@plt+0x3630>
    7df8:	bl	4660 <__errno_location@plt>
    7dfc:	ldr	w0, [x0]
    7e00:	cmp	w0, #0x4
    7e04:	b.ne	7f50 <PySequence_Fast@plt+0x3840>  // b.any
    7e08:	bl	45e0 <PyErr_CheckSignals@plt>
    7e0c:	cbnz	w0, 7e98 <PySequence_Fast@plt+0x3788>
    7e10:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    7e14:	ldr	x1, [sp, #96]
    7e18:	subs	x0, x1, x0
    7e1c:	b.mi	7f60 <PySequence_Fast@plt+0x3850>  // b.first
    7e20:	ldr	w2, [x19, #16]
    7e24:	cmn	w2, #0x1
    7e28:	b.eq	7e8c <PySequence_Fast@plt+0x377c>  // b.none
    7e2c:	str	w2, [sp, #136]
    7e30:	mov	w2, #0x1                   	// #1
    7e34:	mov	w1, #0x1                   	// #1
    7e38:	strh	w2, [sp, #140]
    7e3c:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    7e40:	str	x0, [sp, #104]
    7e44:	bl	4570 <PyEval_SaveThread@plt>
    7e48:	mov	x3, x0
    7e4c:	ldp	x2, x0, [sp, #104]
    7e50:	mov	x1, #0x1                   	// #1
    7e54:	mov	x28, #0xffffffffffffffff    	// #-1
    7e58:	str	x3, [sp, #120]
    7e5c:	cmp	x2, #0x0
    7e60:	csel	x2, x2, x28, ge  // ge = tcont
    7e64:	bl	4200 <poll@plt>
    7e68:	mov	w1, w0
    7e6c:	ldr	x3, [sp, #120]
    7e70:	str	w1, [sp, #104]
    7e74:	mov	x0, x3
    7e78:	bl	40c0 <PyEval_RestoreThread@plt>
    7e7c:	ldr	w1, [sp, #104]
    7e80:	cmp	w1, #0x0
    7e84:	b.lt	7df8 <PySequence_Fast@plt+0x36e8>  // b.tstop
    7e88:	b.eq	7f60 <PySequence_Fast@plt+0x3850>  // b.none
    7e8c:	mov	w0, #0x1                   	// #1
    7e90:	str	w0, [sp, #104]
    7e94:	b	7cd8 <PySequence_Fast@plt+0x35c8>
    7e98:	mov	x28, #0xffffffffffffffff    	// #-1
    7e9c:	mov	x0, x28
    7ea0:	ldp	x19, x20, [sp, #16]
    7ea4:	ldp	x21, x22, [sp, #32]
    7ea8:	ldp	x23, x24, [sp, #48]
    7eac:	ldp	x25, x26, [sp, #64]
    7eb0:	ldp	x27, x28, [sp, #80]
    7eb4:	ldp	x29, x30, [sp], #272
    7eb8:	ret
    7ebc:	ldr	x1, [x19, #40]
    7ec0:	cmp	x1, #0x0
    7ec4:	ccmp	w0, #0xb, #0x0, gt
    7ec8:	b.eq	7c9c <PySequence_Fast@plt+0x358c>  // b.none
    7ecc:	ldr	x0, [x19, #32]
    7ed0:	mov	x28, #0xffffffffffffffff    	// #-1
    7ed4:	blr	x0
    7ed8:	mov	x0, x28
    7edc:	ldp	x19, x20, [sp, #16]
    7ee0:	ldp	x21, x22, [sp, #32]
    7ee4:	ldp	x23, x24, [sp, #48]
    7ee8:	ldp	x25, x26, [sp, #64]
    7eec:	ldp	x27, x28, [sp, #80]
    7ef0:	ldp	x29, x30, [sp], #272
    7ef4:	ret
    7ef8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    7efc:	ldp	x25, x26, [sp, #64]
    7f00:	ldr	x0, [x0, #4024]
    7f04:	ldp	x21, x22, [sp, #32]
    7f08:	ldr	x1, [x0]
    7f0c:	ldp	x23, x24, [sp, #48]
    7f10:	add	x1, x1, #0x1
    7f14:	str	x1, [x0]
    7f18:	str	x0, [x20]
    7f1c:	mov	x0, x28
    7f20:	ldp	x19, x20, [sp, #16]
    7f24:	ldp	x27, x28, [sp, #80]
    7f28:	ldp	x29, x30, [sp], #272
    7f2c:	ret
    7f30:	mov	w0, #0x58                  	// #88
    7f34:	stp	x25, x26, [sp, #64]
    7f38:	str	w0, [sp, #132]
    7f3c:	b	7c80 <PySequence_Fast@plt+0x3570>
    7f40:	mov	w0, #0x1c                  	// #28
    7f44:	stp	x25, x26, [sp, #64]
    7f48:	str	w0, [sp, #132]
    7f4c:	b	7c80 <PySequence_Fast@plt+0x3570>
    7f50:	ldr	x0, [x19, #32]
    7f54:	blr	x0
    7f58:	ldp	x25, x26, [sp, #64]
    7f5c:	b	7d40 <PySequence_Fast@plt+0x3630>
    7f60:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    7f64:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    7f68:	mov	x28, #0xffffffffffffffff    	// #-1
    7f6c:	add	x1, x1, #0x410
    7f70:	ldr	x0, [x0, #3872]
    7f74:	bl	41d0 <PyErr_SetString@plt>
    7f78:	ldp	x25, x26, [sp, #64]
    7f7c:	b	7d40 <PySequence_Fast@plt+0x3630>
    7f80:	stp	x29, x30, [sp, #-144]!
    7f84:	adrp	x3, 28000 <PyInit__socket@@Base+0x1ae80>
    7f88:	add	x3, x3, #0x580
    7f8c:	mov	x29, sp
    7f90:	stp	x19, x20, [sp, #16]
    7f94:	add	x20, sp, #0x40
    7f98:	mov	x19, x0
    7f9c:	add	x3, x3, #0x30
    7fa0:	mov	x0, x1
    7fa4:	mov	x4, x20
    7fa8:	mov	x1, x2
    7fac:	add	x6, sp, #0x2c
    7fb0:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    7fb4:	add	x5, sp, #0x30
    7fb8:	add	x2, x2, #0x440
    7fbc:	str	wzr, [sp, #44]
    7fc0:	stp	xzr, xzr, [sp, #48]
    7fc4:	bl	4440 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    7fc8:	cbz	w0, 8058 <PySequence_Fast@plt+0x3948>
    7fcc:	ldr	x2, [sp, #48]
    7fd0:	ldr	x1, [sp, #64]
    7fd4:	cmp	x2, #0x0
    7fd8:	ldr	x0, [sp, #80]
    7fdc:	b.lt	8090 <PySequence_Fast@plt+0x3980>  // b.tstop
    7fe0:	b.eq	802c <PySequence_Fast@plt+0x391c>  // b.none
    7fe4:	cmp	x2, x0
    7fe8:	b.gt	8038 <PySequence_Fast@plt+0x3928>
    7fec:	ldr	w3, [sp, #44]
    7ff0:	mov	x0, x19
    7ff4:	add	x4, sp, #0x38
    7ff8:	bl	7c18 <PySequence_Fast@plt+0x3508>
    7ffc:	mov	x19, x0
    8000:	mov	x0, x20
    8004:	tbnz	x19, #63, 8068 <PySequence_Fast@plt+0x3958>
    8008:	bl	4100 <PyBuffer_Release@plt>
    800c:	ldr	x2, [sp, #56]
    8010:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    8014:	mov	x1, x19
    8018:	add	x0, x0, #0x4b0
    801c:	bl	4640 <_Py_BuildValue_SizeT@plt>
    8020:	ldp	x19, x20, [sp, #16]
    8024:	ldp	x29, x30, [sp], #144
    8028:	ret
    802c:	mov	x2, x0
    8030:	str	x0, [sp, #48]
    8034:	b	7fec <PySequence_Fast@plt+0x38dc>
    8038:	mov	x0, x20
    803c:	bl	4100 <PyBuffer_Release@plt>
    8040:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8044:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8048:	add	x1, x1, #0x480
    804c:	ldr	x0, [x0, #3960]
    8050:	ldr	x0, [x0]
    8054:	bl	41d0 <PyErr_SetString@plt>
    8058:	mov	x0, #0x0                   	// #0
    805c:	ldp	x19, x20, [sp, #16]
    8060:	ldp	x29, x30, [sp], #144
    8064:	ret
    8068:	bl	4100 <PyBuffer_Release@plt>
    806c:	ldr	x0, [sp, #56]
    8070:	cbz	x0, 8058 <PySequence_Fast@plt+0x3948>
    8074:	ldr	x1, [x0]
    8078:	sub	x1, x1, #0x1
    807c:	str	x1, [x0]
    8080:	cbnz	x1, 8058 <PySequence_Fast@plt+0x3948>
    8084:	bl	4180 <_Py_Dealloc@plt>
    8088:	mov	x0, #0x0                   	// #0
    808c:	b	8020 <PySequence_Fast@plt+0x3910>
    8090:	mov	x0, x20
    8094:	bl	4100 <PyBuffer_Release@plt>
    8098:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    809c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    80a0:	add	x1, x1, #0x458
    80a4:	ldr	x0, [x0, #3960]
    80a8:	ldr	x0, [x0]
    80ac:	bl	41d0 <PyErr_SetString@plt>
    80b0:	mov	x0, #0x0                   	// #0
    80b4:	b	8020 <PySequence_Fast@plt+0x3910>
    80b8:	stp	x29, x30, [sp, #-64]!
    80bc:	mov	x29, sp
    80c0:	add	x3, sp, #0x24
    80c4:	add	x2, sp, #0x38
    80c8:	str	x19, [sp, #16]
    80cc:	mov	x19, x0
    80d0:	mov	x0, x1
    80d4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    80d8:	add	x1, x1, #0x4b8
    80dc:	str	wzr, [sp, #36]
    80e0:	stp	xzr, xzr, [sp, #40]
    80e4:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    80e8:	cbz	w0, 8194 <PySequence_Fast@plt+0x3a84>
    80ec:	ldr	x1, [sp, #56]
    80f0:	tbnz	x1, #63, 81c4 <PySequence_Fast@plt+0x3ab4>
    80f4:	mov	x0, #0x0                   	// #0
    80f8:	bl	4120 <PyBytes_FromStringAndSize@plt>
    80fc:	str	x0, [sp, #40]
    8100:	cbz	x0, 8194 <PySequence_Fast@plt+0x3a84>
    8104:	ldr	w3, [sp, #36]
    8108:	add	x1, x0, #0x20
    810c:	ldr	x2, [sp, #56]
    8110:	mov	x0, x19
    8114:	add	x4, sp, #0x30
    8118:	bl	7c18 <PySequence_Fast@plt+0x3508>
    811c:	tbnz	x0, #63, 818c <PySequence_Fast@plt+0x3a7c>
    8120:	ldr	x1, [sp, #56]
    8124:	cmp	x1, x0
    8128:	b.eq	813c <PySequence_Fast@plt+0x3a2c>  // b.none
    812c:	mov	x1, x0
    8130:	add	x0, sp, #0x28
    8134:	bl	4080 <_PyBytes_Resize@plt>
    8138:	tbnz	w0, #31, 818c <PySequence_Fast@plt+0x3a7c>
    813c:	ldp	x1, x2, [sp, #40]
    8140:	mov	x0, #0x2                   	// #2
    8144:	bl	46d0 <PyTuple_Pack@plt>
    8148:	mov	x19, x0
    814c:	ldr	x0, [sp, #40]
    8150:	cbz	x0, 8164 <PySequence_Fast@plt+0x3a54>
    8154:	ldr	x1, [x0]
    8158:	sub	x1, x1, #0x1
    815c:	str	x1, [x0]
    8160:	cbz	x1, 81a8 <PySequence_Fast@plt+0x3a98>
    8164:	ldr	x0, [sp, #48]
    8168:	cbz	x0, 817c <PySequence_Fast@plt+0x3a6c>
    816c:	ldr	x1, [x0]
    8170:	sub	x1, x1, #0x1
    8174:	str	x1, [x0]
    8178:	cbz	x1, 81b0 <PySequence_Fast@plt+0x3aa0>
    817c:	mov	x0, x19
    8180:	ldr	x19, [sp, #16]
    8184:	ldp	x29, x30, [sp], #64
    8188:	ret
    818c:	mov	x19, #0x0                   	// #0
    8190:	b	814c <PySequence_Fast@plt+0x3a3c>
    8194:	mov	x19, #0x0                   	// #0
    8198:	mov	x0, x19
    819c:	ldr	x19, [sp, #16]
    81a0:	ldp	x29, x30, [sp], #64
    81a4:	ret
    81a8:	bl	4180 <_Py_Dealloc@plt>
    81ac:	b	8164 <PySequence_Fast@plt+0x3a54>
    81b0:	bl	4180 <_Py_Dealloc@plt>
    81b4:	mov	x0, x19
    81b8:	ldr	x19, [sp, #16]
    81bc:	ldp	x29, x30, [sp], #64
    81c0:	ret
    81c4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    81c8:	mov	x19, #0x0                   	// #0
    81cc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    81d0:	add	x1, x1, #0x4c8
    81d4:	ldr	x0, [x0, #3960]
    81d8:	ldr	x0, [x0]
    81dc:	bl	41d0 <PyErr_SetString@plt>
    81e0:	mov	x0, x19
    81e4:	ldr	x19, [sp, #16]
    81e8:	ldp	x29, x30, [sp], #64
    81ec:	ret
    81f0:	stp	x29, x30, [sp, #-272]!
    81f4:	mov	x29, sp
    81f8:	ldr	w1, [x0, #20]
    81fc:	stp	x19, x20, [sp, #16]
    8200:	mov	x19, x0
    8204:	cmp	w1, #0x15
    8208:	stp	x21, x22, [sp, #32]
    820c:	b.eq	8398 <PySequence_Fast@plt+0x3c88>  // b.none
    8210:	b.gt	8358 <PySequence_Fast@plt+0x3c48>
    8214:	cmp	w1, #0xa
    8218:	b.eq	8688 <PySequence_Fast@plt+0x3f78>  // b.none
    821c:	b.le	8334 <PySequence_Fast@plt+0x3c24>
    8220:	cmp	w1, #0x10
    8224:	b.eq	8374 <PySequence_Fast@plt+0x3c64>  // b.none
    8228:	cmp	w1, #0x11
    822c:	b.ne	83e0 <PySequence_Fast@plt+0x3cd0>  // b.any
    8230:	mov	w0, #0x14                  	// #20
    8234:	mov	x2, #0x14                  	// #20
    8238:	stp	x23, x24, [sp, #48]
    823c:	stp	x25, x26, [sp, #64]
    8240:	stp	x27, x28, [sp, #80]
    8244:	str	w0, [sp, #132]
    8248:	add	x23, sp, #0x90
    824c:	mov	w1, #0x0                   	// #0
    8250:	mov	x0, x23
    8254:	bl	4270 <memset@plt>
    8258:	ldr	x25, [x19, #40]
    825c:	adrp	x22, 28000 <PyInit__socket@@Base+0x1ae80>
    8260:	add	x26, sp, #0x84
    8264:	add	x21, x22, #0x3c8
    8268:	add	x0, sp, #0x88
    826c:	str	xzr, [sp, #104]
    8270:	str	wzr, [sp, #116]
    8274:	str	x0, [sp, #120]
    8278:	cmp	x25, #0x0
    827c:	b.le	82fc <PySequence_Fast@plt+0x3bec>
    8280:	ldr	w0, [sp, #116]
    8284:	cbnz	w0, 850c <PySequence_Fast@plt+0x3dfc>
    8288:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    828c:	add	x0, x25, x0
    8290:	str	x0, [sp, #104]
    8294:	mov	x0, x25
    8298:	b	851c <PySequence_Fast@plt+0x3e0c>
    829c:	mov	x2, x24
    82a0:	mov	x1, x28
    82a4:	mov	w3, #0x80000               	// #524288
    82a8:	bl	44c0 <accept4@plt>
    82ac:	mov	w27, w0
    82b0:	cmn	w0, #0x1
    82b4:	ldr	w0, [x21, #12]
    82b8:	b.eq	8400 <PySequence_Fast@plt+0x3cf0>  // b.none
    82bc:	cbnz	w0, 82d8 <PySequence_Fast@plt+0x3bc8>
    82c0:	ldr	w0, [x19, #16]
    82c4:	nop
    82c8:	mov	x2, x24
    82cc:	mov	x1, x28
    82d0:	bl	42a0 <accept@plt>
    82d4:	mov	w27, w0
    82d8:	mov	x0, x20
    82dc:	bl	40c0 <PyEval_RestoreThread@plt>
    82e0:	tbz	w27, #31, 8464 <PySequence_Fast@plt+0x3d54>
    82e4:	bl	4660 <__errno_location@plt>
    82e8:	ldr	w0, [x0]
    82ec:	cmp	w0, #0x4
    82f0:	b.ne	8428 <PySequence_Fast@plt+0x3d18>  // b.any
    82f4:	bl	45e0 <PyErr_CheckSignals@plt>
    82f8:	cbnz	w0, 85d8 <PySequence_Fast@plt+0x3ec8>
    82fc:	bl	4570 <PyEval_SaveThread@plt>
    8300:	mov	x24, x26
    8304:	ldr	w3, [x19, #20]
    8308:	mov	x20, x0
    830c:	mov	x28, x23
    8310:	cmp	w3, #0x26
    8314:	b.ne	8324 <PySequence_Fast@plt+0x3c14>  // b.any
    8318:	mov	x24, #0x0                   	// #0
    831c:	mov	x28, #0x0                   	// #0
    8320:	str	wzr, [sp, #132]
    8324:	ldr	w3, [x21, #12]
    8328:	ldr	w0, [x19, #16]
    832c:	cbz	w3, 82c8 <PySequence_Fast@plt+0x3bb8>
    8330:	b	829c <PySequence_Fast@plt+0x3b8c>
    8334:	cmp	w1, #0x1
    8338:	b.ne	8390 <PySequence_Fast@plt+0x3c80>  // b.any
    833c:	mov	w0, #0x6e                  	// #110
    8340:	mov	x2, #0x6e                  	// #110
    8344:	stp	x23, x24, [sp, #48]
    8348:	stp	x25, x26, [sp, #64]
    834c:	stp	x27, x28, [sp, #80]
    8350:	str	w0, [sp, #132]
    8354:	b	8248 <PySequence_Fast@plt+0x3b38>
    8358:	cmp	w1, #0x26
    835c:	b.eq	866c <PySequence_Fast@plt+0x3f5c>  // b.none
    8360:	b.le	83b4 <PySequence_Fast@plt+0x3ca4>
    8364:	cmp	w1, #0x28
    8368:	b.eq	8398 <PySequence_Fast@plt+0x3c88>  // b.none
    836c:	cmp	w1, #0x2a
    8370:	b.ne	83e0 <PySequence_Fast@plt+0x3cd0>  // b.any
    8374:	mov	w0, #0xc                   	// #12
    8378:	mov	x2, #0xc                   	// #12
    837c:	stp	x23, x24, [sp, #48]
    8380:	stp	x25, x26, [sp, #64]
    8384:	stp	x27, x28, [sp, #80]
    8388:	str	w0, [sp, #132]
    838c:	b	8248 <PySequence_Fast@plt+0x3b38>
    8390:	cmp	w1, #0x2
    8394:	b.ne	83e0 <PySequence_Fast@plt+0x3cd0>  // b.any
    8398:	mov	w0, #0x10                  	// #16
    839c:	mov	x2, #0x10                  	// #16
    83a0:	stp	x23, x24, [sp, #48]
    83a4:	stp	x25, x26, [sp, #64]
    83a8:	stp	x27, x28, [sp, #80]
    83ac:	str	w0, [sp, #132]
    83b0:	b	8248 <PySequence_Fast@plt+0x3b38>
    83b4:	cmp	w1, #0x1d
    83b8:	b.ne	83d8 <PySequence_Fast@plt+0x3cc8>  // b.any
    83bc:	mov	w0, #0x18                  	// #24
    83c0:	mov	x2, #0x18                  	// #24
    83c4:	stp	x23, x24, [sp, #48]
    83c8:	stp	x25, x26, [sp, #64]
    83cc:	stp	x27, x28, [sp, #80]
    83d0:	str	w0, [sp, #132]
    83d4:	b	8248 <PySequence_Fast@plt+0x3b38>
    83d8:	cmp	w1, #0x1e
    83dc:	b.eq	8398 <PySequence_Fast@plt+0x3c88>  // b.none
    83e0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    83e4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    83e8:	mov	x21, #0x0                   	// #0
    83ec:	add	x1, x1, #0x3f0
    83f0:	ldr	x0, [x0, #3984]
    83f4:	ldr	x0, [x0]
    83f8:	bl	41d0 <PyErr_SetString@plt>
    83fc:	b	84e0 <PySequence_Fast@plt+0x3dd0>
    8400:	cmn	w0, #0x1
    8404:	b.eq	85c0 <PySequence_Fast@plt+0x3eb0>  // b.none
    8408:	cbz	w0, 82c0 <PySequence_Fast@plt+0x3bb0>
    840c:	mov	x0, x20
    8410:	bl	40c0 <PyEval_RestoreThread@plt>
    8414:	bl	4660 <__errno_location@plt>
    8418:	ldr	w0, [x0]
    841c:	cmp	w0, #0x4
    8420:	b.eq	82f4 <PySequence_Fast@plt+0x3be4>  // b.none
    8424:	nop
    8428:	ldr	x1, [x19, #40]
    842c:	cmp	x1, #0x0
    8430:	ccmp	w0, #0xb, #0x0, gt
    8434:	b.eq	8278 <PySequence_Fast@plt+0x3b68>  // b.none
    8438:	ldr	x0, [x19, #32]
    843c:	mov	x21, #0x0                   	// #0
    8440:	blr	x0
    8444:	mov	x0, x21
    8448:	ldp	x19, x20, [sp, #16]
    844c:	ldp	x21, x22, [sp, #32]
    8450:	ldp	x23, x24, [sp, #48]
    8454:	ldp	x25, x26, [sp, #64]
    8458:	ldp	x27, x28, [sp, #80]
    845c:	ldp	x29, x30, [sp], #272
    8460:	ret
    8464:	add	x22, x22, #0x3c8
    8468:	ldr	w0, [x22, #12]
    846c:	cbz	w0, 8580 <PySequence_Fast@plt+0x3e70>
    8470:	sxtw	x0, w27
    8474:	bl	4310 <PyLong_FromLong@plt>
    8478:	mov	x20, x0
    847c:	cbz	x0, 8594 <PySequence_Fast@plt+0x3e84>
    8480:	ldr	w2, [sp, #132]
    8484:	cbz	x2, 85fc <PySequence_Fast@plt+0x3eec>
    8488:	ldr	w0, [x19, #16]
    848c:	mov	x1, x23
    8490:	ldr	w3, [x19, #28]
    8494:	bl	5818 <PySequence_Fast@plt+0x1108>
    8498:	mov	x19, x0
    849c:	cbz	x0, 8618 <PySequence_Fast@plt+0x3f08>
    84a0:	mov	x1, x20
    84a4:	mov	x2, x19
    84a8:	mov	x0, #0x2                   	// #2
    84ac:	bl	46d0 <PyTuple_Pack@plt>
    84b0:	ldr	x1, [x20]
    84b4:	mov	x21, x0
    84b8:	sub	x0, x1, #0x1
    84bc:	str	x0, [x20]
    84c0:	cbz	x0, 86a4 <PySequence_Fast@plt+0x3f94>
    84c4:	ldr	x0, [x19]
    84c8:	sub	x0, x0, #0x1
    84cc:	str	x0, [x19]
    84d0:	cbz	x0, 8644 <PySequence_Fast@plt+0x3f34>
    84d4:	ldp	x23, x24, [sp, #48]
    84d8:	ldp	x25, x26, [sp, #64]
    84dc:	ldp	x27, x28, [sp, #80]
    84e0:	mov	x0, x21
    84e4:	ldp	x19, x20, [sp, #16]
    84e8:	ldp	x21, x22, [sp, #32]
    84ec:	ldp	x29, x30, [sp], #272
    84f0:	ret
    84f4:	bl	4660 <__errno_location@plt>
    84f8:	ldr	w0, [x0]
    84fc:	cmp	w0, #0x4
    8500:	b.ne	8438 <PySequence_Fast@plt+0x3d28>  // b.any
    8504:	bl	45e0 <PyErr_CheckSignals@plt>
    8508:	cbnz	w0, 85d8 <PySequence_Fast@plt+0x3ec8>
    850c:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    8510:	ldr	x1, [sp, #104]
    8514:	subs	x0, x1, x0
    8518:	b.mi	86b0 <PySequence_Fast@plt+0x3fa0>  // b.first
    851c:	ldr	w2, [x19, #16]
    8520:	cmn	w2, #0x1
    8524:	b.eq	8574 <PySequence_Fast@plt+0x3e64>  // b.none
    8528:	mov	w3, #0x1                   	// #1
    852c:	mov	w1, #0x1                   	// #1
    8530:	str	w2, [sp, #136]
    8534:	strh	w3, [sp, #140]
    8538:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    853c:	mov	x20, x0
    8540:	bl	4570 <PyEval_SaveThread@plt>
    8544:	mov	x27, x0
    8548:	cmp	x20, #0x0
    854c:	ldr	x0, [sp, #120]
    8550:	csinv	x2, x20, xzr, ge  // ge = tcont
    8554:	mov	x1, #0x1                   	// #1
    8558:	bl	4200 <poll@plt>
    855c:	mov	w20, w0
    8560:	mov	x0, x27
    8564:	bl	40c0 <PyEval_RestoreThread@plt>
    8568:	cmp	w20, #0x0
    856c:	b.lt	84f4 <PySequence_Fast@plt+0x3de4>  // b.tstop
    8570:	b.eq	86b0 <PySequence_Fast@plt+0x3fa0>  // b.none
    8574:	mov	w0, #0x1                   	// #1
    8578:	str	w0, [sp, #116]
    857c:	b	82fc <PySequence_Fast@plt+0x3bec>
    8580:	mov	w0, w27
    8584:	mov	x2, #0x0                   	// #0
    8588:	mov	w1, #0x0                   	// #0
    858c:	bl	4130 <_Py_set_inheritable@plt>
    8590:	tbz	w0, #31, 8470 <PySequence_Fast@plt+0x3d60>
    8594:	mov	w0, w27
    8598:	mov	x21, #0x0                   	// #0
    859c:	bl	4380 <close@plt>
    85a0:	mov	x0, x21
    85a4:	ldp	x19, x20, [sp, #16]
    85a8:	ldp	x21, x22, [sp, #32]
    85ac:	ldp	x23, x24, [sp, #48]
    85b0:	ldp	x25, x26, [sp, #64]
    85b4:	ldp	x27, x28, [sp, #80]
    85b8:	ldp	x29, x30, [sp], #272
    85bc:	ret
    85c0:	bl	4660 <__errno_location@plt>
    85c4:	ldr	w0, [x0]
    85c8:	cmp	w0, #0x26
    85cc:	cset	w0, ne  // ne = any
    85d0:	str	w0, [x21, #12]
    85d4:	b	8408 <PySequence_Fast@plt+0x3cf8>
    85d8:	mov	x21, #0x0                   	// #0
    85dc:	mov	x0, x21
    85e0:	ldp	x19, x20, [sp, #16]
    85e4:	ldp	x21, x22, [sp, #32]
    85e8:	ldp	x23, x24, [sp, #48]
    85ec:	ldp	x25, x26, [sp, #64]
    85f0:	ldp	x27, x28, [sp, #80]
    85f4:	ldp	x29, x30, [sp], #272
    85f8:	ret
    85fc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8600:	ldr	x0, [x0, #4024]
    8604:	mov	x19, x0
    8608:	ldr	x1, [x0]
    860c:	add	x1, x1, #0x1
    8610:	str	x1, [x0]
    8614:	b	84a0 <PySequence_Fast@plt+0x3d90>
    8618:	ldr	x0, [x20]
    861c:	sub	x0, x0, #0x1
    8620:	str	x0, [x20]
    8624:	cbnz	x0, 85d8 <PySequence_Fast@plt+0x3ec8>
    8628:	mov	x0, x20
    862c:	mov	x21, #0x0                   	// #0
    8630:	bl	4180 <_Py_Dealloc@plt>
    8634:	ldp	x23, x24, [sp, #48]
    8638:	ldp	x25, x26, [sp, #64]
    863c:	ldp	x27, x28, [sp, #80]
    8640:	b	84e0 <PySequence_Fast@plt+0x3dd0>
    8644:	mov	x0, x19
    8648:	bl	4180 <_Py_Dealloc@plt>
    864c:	mov	x0, x21
    8650:	ldp	x19, x20, [sp, #16]
    8654:	ldp	x21, x22, [sp, #32]
    8658:	ldp	x23, x24, [sp, #48]
    865c:	ldp	x25, x26, [sp, #64]
    8660:	ldp	x27, x28, [sp, #80]
    8664:	ldp	x29, x30, [sp], #272
    8668:	ret
    866c:	mov	w0, #0x58                  	// #88
    8670:	mov	x2, #0x58                  	// #88
    8674:	stp	x23, x24, [sp, #48]
    8678:	stp	x25, x26, [sp, #64]
    867c:	stp	x27, x28, [sp, #80]
    8680:	str	w0, [sp, #132]
    8684:	b	8248 <PySequence_Fast@plt+0x3b38>
    8688:	mov	w0, #0x1c                  	// #28
    868c:	mov	x2, #0x1c                  	// #28
    8690:	stp	x23, x24, [sp, #48]
    8694:	stp	x25, x26, [sp, #64]
    8698:	stp	x27, x28, [sp, #80]
    869c:	str	w0, [sp, #132]
    86a0:	b	8248 <PySequence_Fast@plt+0x3b38>
    86a4:	mov	x0, x20
    86a8:	bl	4180 <_Py_Dealloc@plt>
    86ac:	b	84c4 <PySequence_Fast@plt+0x3db4>
    86b0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    86b4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    86b8:	mov	x21, #0x0                   	// #0
    86bc:	add	x1, x1, #0x410
    86c0:	ldr	x0, [x0, #3872]
    86c4:	bl	41d0 <PyErr_SetString@plt>
    86c8:	ldp	x23, x24, [sp, #48]
    86cc:	ldp	x25, x26, [sp, #64]
    86d0:	ldp	x27, x28, [sp, #80]
    86d4:	b	84e0 <PySequence_Fast@plt+0x3dd0>
    86d8:	sub	sp, sp, #0xe0
    86dc:	add	x3, sp, #0x74
    86e0:	add	x0, sp, #0x70
    86e4:	add	x7, sp, #0x6c
    86e8:	add	x6, sp, #0x68
    86ec:	stp	x29, x30, [sp, #16]
    86f0:	add	x29, sp, #0x10
    86f4:	add	x5, sp, #0x88
    86f8:	add	x4, sp, #0x80
    86fc:	stp	x0, x3, [sp]
    8700:	adrp	x3, 28000 <PyInit__socket@@Base+0x1ae80>
    8704:	add	x3, x3, #0x580
    8708:	mov	x0, x1
    870c:	add	x3, x3, #0x50
    8710:	mov	x1, x2
    8714:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    8718:	add	x2, x2, #0x4e8
    871c:	stp	x21, x22, [sp, #48]
    8720:	stp	wzr, wzr, [sp, #104]
    8724:	stp	wzr, wzr, [sp, #112]
    8728:	stp	xzr, xzr, [sp, #120]
    872c:	str	xzr, [sp, #136]
    8730:	bl	4440 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    8734:	cbz	w0, 8908 <PySequence_Fast@plt+0x41f8>
    8738:	stp	x23, x24, [sp, #64]
    873c:	adrp	x23, 27000 <PyInit__socket@@Base+0x19e80>
    8740:	ldr	x1, [x23, #4024]
    8744:	ldr	x0, [sp, #128]
    8748:	cmp	x0, x1
    874c:	b.eq	89c4 <PySequence_Fast@plt+0x42b4>  // b.none
    8750:	ldr	x1, [x0, #8]
    8754:	ldr	x1, [x1, #168]
    8758:	tbnz	w1, #28, 8a38 <PySequence_Fast@plt+0x4328>
    875c:	tbz	w1, #27, 8adc <PySequence_Fast@plt+0x43cc>
    8760:	stp	x19, x20, [sp, #32]
    8764:	bl	45a0 <PyBytes_AsString@plt>
    8768:	mov	x21, x0
    876c:	mov	x24, #0x0                   	// #0
    8770:	ldr	x3, [sp, #136]
    8774:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    8778:	ldr	x1, [x1, #4040]
    877c:	ldr	x2, [x3, #8]
    8780:	cmp	x2, x1
    8784:	b.eq	89e8 <PySequence_Fast@plt+0x42d8>  // b.none
    8788:	ldr	x0, [x2, #168]
    878c:	tbnz	w0, #28, 8a20 <PySequence_Fast@plt+0x4310>
    8790:	add	x20, x3, #0x20
    8794:	tbnz	w0, #27, 87a8 <PySequence_Fast@plt+0x4098>
    8798:	ldr	x0, [x23, #4024]
    879c:	mov	x20, #0x0                   	// #0
    87a0:	cmp	x3, x0
    87a4:	b.ne	8a5c <PySequence_Fast@plt+0x434c>  // b.any
    87a8:	ldp	w4, w5, [sp, #104]
    87ac:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    87b0:	ldr	w6, [sp, #112]
    87b4:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    87b8:	ldr	x2, [sp, #128]
    87bc:	add	x1, x1, #0x550
    87c0:	add	x0, x0, #0x558
    87c4:	bl	44a0 <PySys_Audit@plt>
    87c8:	tbnz	w0, #31, 8900 <PySequence_Fast@plt+0x41f0>
    87cc:	ldp	s3, s2, [sp, #104]
    87d0:	add	x19, sp, #0xb0
    87d4:	ldp	s1, s0, [sp, #112]
    87d8:	stp	xzr, xzr, [sp, #192]
    87dc:	stp	xzr, xzr, [sp, #208]
    87e0:	mov	v0.s[1], v3.s[0]
    87e4:	mov	v0.s[2], v2.s[0]
    87e8:	mov	v0.s[3], v1.s[0]
    87ec:	str	q0, [sp, #176]
    87f0:	bl	4570 <PyEval_SaveThread@plt>
    87f4:	mov	x2, x19
    87f8:	mov	x1, x20
    87fc:	add	x3, sp, #0x78
    8800:	mov	x20, x0
    8804:	mov	x0, x21
    8808:	bl	4560 <getaddrinfo@plt>
    880c:	mov	w19, w0
    8810:	mov	x0, x20
    8814:	bl	40c0 <PyEval_RestoreThread@plt>
    8818:	cbnz	w19, 8a78 <PySequence_Fast@plt+0x4368>
    881c:	mov	x0, #0x0                   	// #0
    8820:	bl	3fd0 <PyList_New@plt>
    8824:	mov	x22, x0
    8828:	cbz	x0, 8984 <PySequence_Fast@plt+0x4274>
    882c:	ldr	x19, [sp, #120]
    8830:	cbz	x19, 8b30 <PySequence_Fast@plt+0x4420>
    8834:	ldr	x23, [x23, #4024]
    8838:	str	x25, [sp, #80]
    883c:	adrp	x25, f000 <PyInit__socket@@Base+0x1e80>
    8840:	add	x25, x25, #0x918
    8844:	nop
    8848:	ldr	w2, [x19, #16]
    884c:	mov	w0, #0xffffffff            	// #-1
    8850:	cbz	x2, 892c <PySequence_Fast@plt+0x421c>
    8854:	ldr	w3, [sp, #112]
    8858:	ldr	x1, [x19, #24]
    885c:	bl	5818 <PySequence_Fast@plt+0x1108>
    8860:	mov	x21, x0
    8864:	cbz	x0, 8970 <PySequence_Fast@plt+0x4260>
    8868:	ldr	x4, [x19, #32]
    886c:	mov	x5, x21
    8870:	ldp	w1, w2, [x19, #4]
    8874:	cmp	x4, #0x0
    8878:	ldr	w3, [x19, #12]
    887c:	csel	x4, x25, x4, eq  // eq = none
    8880:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    8884:	add	x0, x0, #0x570
    8888:	bl	4640 <_Py_BuildValue_SizeT@plt>
    888c:	mov	x20, x0
    8890:	ldr	x1, [x21]
    8894:	sub	x1, x1, #0x1
    8898:	str	x1, [x21]
    889c:	cbz	x1, 8920 <PySequence_Fast@plt+0x4210>
    88a0:	cbz	x20, 8970 <PySequence_Fast@plt+0x4260>
    88a4:	mov	x1, x20
    88a8:	mov	x0, x22
    88ac:	bl	4360 <PyList_Append@plt>
    88b0:	cbnz	w0, 8954 <PySequence_Fast@plt+0x4244>
    88b4:	ldr	x0, [x20]
    88b8:	sub	x0, x0, #0x1
    88bc:	str	x0, [x20]
    88c0:	cbz	x0, 8940 <PySequence_Fast@plt+0x4230>
    88c4:	ldr	x19, [x19, #40]
    88c8:	cbnz	x19, 8848 <PySequence_Fast@plt+0x4138>
    88cc:	ldr	x25, [sp, #80]
    88d0:	cbz	x24, 88ec <PySequence_Fast@plt+0x41dc>
    88d4:	ldr	x0, [x24]
    88d8:	sub	x0, x0, #0x1
    88dc:	str	x0, [x24]
    88e0:	cbnz	x0, 88ec <PySequence_Fast@plt+0x41dc>
    88e4:	mov	x0, x24
    88e8:	bl	4180 <_Py_Dealloc@plt>
    88ec:	ldr	x0, [sp, #120]
    88f0:	cbnz	x0, 89a4 <PySequence_Fast@plt+0x4294>
    88f4:	ldp	x19, x20, [sp, #32]
    88f8:	ldp	x23, x24, [sp, #64]
    88fc:	b	890c <PySequence_Fast@plt+0x41fc>
    8900:	ldp	x19, x20, [sp, #32]
    8904:	ldp	x23, x24, [sp, #64]
    8908:	mov	x22, #0x0                   	// #0
    890c:	mov	x0, x22
    8910:	ldp	x29, x30, [sp, #16]
    8914:	ldp	x21, x22, [sp, #48]
    8918:	add	sp, sp, #0xe0
    891c:	ret
    8920:	mov	x0, x21
    8924:	bl	4180 <_Py_Dealloc@plt>
    8928:	b	88a0 <PySequence_Fast@plt+0x4190>
    892c:	ldr	x0, [x23]
    8930:	mov	x21, x23
    8934:	add	x0, x0, #0x1
    8938:	str	x0, [x23]
    893c:	b	8868 <PySequence_Fast@plt+0x4158>
    8940:	mov	x0, x20
    8944:	bl	4180 <_Py_Dealloc@plt>
    8948:	ldr	x19, [x19, #40]
    894c:	cbnz	x19, 8848 <PySequence_Fast@plt+0x4138>
    8950:	b	88cc <PySequence_Fast@plt+0x41bc>
    8954:	ldr	x0, [x20]
    8958:	sub	x0, x0, #0x1
    895c:	str	x0, [x20]
    8960:	cbnz	x0, 8970 <PySequence_Fast@plt+0x4260>
    8964:	mov	x0, x20
    8968:	bl	4180 <_Py_Dealloc@plt>
    896c:	nop
    8970:	ldr	x0, [x22]
    8974:	sub	x0, x0, #0x1
    8978:	str	x0, [x22]
    897c:	cbz	x0, 8b00 <PySequence_Fast@plt+0x43f0>
    8980:	ldr	x25, [sp, #80]
    8984:	cbz	x24, 8998 <PySequence_Fast@plt+0x4288>
    8988:	ldr	x0, [x24]
    898c:	sub	x0, x0, #0x1
    8990:	str	x0, [x24]
    8994:	cbz	x0, 8ad0 <PySequence_Fast@plt+0x43c0>
    8998:	ldr	x0, [sp, #120]
    899c:	cbz	x0, 8900 <PySequence_Fast@plt+0x41f0>
    89a0:	mov	x22, #0x0                   	// #0
    89a4:	bl	4010 <freeaddrinfo@plt>
    89a8:	mov	x0, x22
    89ac:	ldp	x29, x30, [sp, #16]
    89b0:	ldp	x19, x20, [sp, #32]
    89b4:	ldp	x21, x22, [sp, #48]
    89b8:	ldp	x23, x24, [sp, #64]
    89bc:	add	sp, sp, #0xe0
    89c0:	ret
    89c4:	ldr	x3, [sp, #136]
    89c8:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    89cc:	stp	x19, x20, [sp, #32]
    89d0:	mov	x24, #0x0                   	// #0
    89d4:	mov	x21, #0x0                   	// #0
    89d8:	ldr	x1, [x1, #4040]
    89dc:	ldr	x2, [x3, #8]
    89e0:	cmp	x2, x1
    89e4:	b.ne	8788 <PySequence_Fast@plt+0x4078>  // b.any
    89e8:	mov	x0, x3
    89ec:	bl	43e0 <PyLong_AsLong@plt>
    89f0:	mov	x19, x0
    89f4:	cmn	x0, #0x1
    89f8:	b.eq	8b10 <PySequence_Fast@plt+0x4400>  // b.none
    89fc:	add	x0, sp, #0x90
    8a00:	mov	x3, x19
    8a04:	mov	x20, x0
    8a08:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    8a0c:	mov	x1, #0x1e                  	// #30
    8a10:	add	x2, x2, #0x530
    8a14:	bl	4280 <PyOS_snprintf@plt>
    8a18:	ldr	x3, [sp, #136]
    8a1c:	b	87a8 <PySequence_Fast@plt+0x4098>
    8a20:	mov	x0, x3
    8a24:	bl	4510 <PyUnicode_AsUTF8@plt>
    8a28:	mov	x20, x0
    8a2c:	cbz	x0, 8984 <PySequence_Fast@plt+0x4274>
    8a30:	ldr	x3, [sp, #136]
    8a34:	b	87a8 <PySequence_Fast@plt+0x4098>
    8a38:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8a3c:	mov	x2, #0x0                   	// #0
    8a40:	add	x1, x1, #0x328
    8a44:	bl	4220 <PyUnicode_AsEncodedString@plt>
    8a48:	mov	x24, x0
    8a4c:	cbz	x0, 8904 <PySequence_Fast@plt+0x41f4>
    8a50:	add	x21, x0, #0x20
    8a54:	stp	x19, x20, [sp, #32]
    8a58:	b	8770 <PySequence_Fast@plt+0x4060>
    8a5c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8a60:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8a64:	add	x1, x1, #0x538
    8a68:	ldr	x0, [x0, #3984]
    8a6c:	ldr	x0, [x0]
    8a70:	bl	41d0 <PyErr_SetString@plt>
    8a74:	b	8984 <PySequence_Fast@plt+0x4274>
    8a78:	cmn	w19, #0xb
    8a7c:	b.eq	8b1c <PySequence_Fast@plt+0x440c>  // b.none
    8a80:	mov	w0, w19
    8a84:	bl	3fc0 <gai_strerror@plt>
    8a88:	mov	w1, w19
    8a8c:	mov	x2, x0
    8a90:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    8a94:	add	x0, x0, #0x3c0
    8a98:	bl	4640 <_Py_BuildValue_SizeT@plt>
    8a9c:	mov	x19, x0
    8aa0:	cbz	x0, 8984 <PySequence_Fast@plt+0x4274>
    8aa4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    8aa8:	mov	x1, x19
    8aac:	ldr	x0, [x0, #3880]
    8ab0:	bl	41a0 <PyErr_SetObject@plt>
    8ab4:	ldr	x0, [x19]
    8ab8:	sub	x0, x0, #0x1
    8abc:	str	x0, [x19]
    8ac0:	cbnz	x0, 8984 <PySequence_Fast@plt+0x4274>
    8ac4:	mov	x0, x19
    8ac8:	bl	4180 <_Py_Dealloc@plt>
    8acc:	b	8984 <PySequence_Fast@plt+0x4274>
    8ad0:	mov	x0, x24
    8ad4:	bl	4180 <_Py_Dealloc@plt>
    8ad8:	b	8998 <PySequence_Fast@plt+0x4288>
    8adc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8ae0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8ae4:	mov	x22, #0x0                   	// #0
    8ae8:	add	x1, x1, #0x500
    8aec:	ldr	x0, [x0, #3976]
    8af0:	ldr	x0, [x0]
    8af4:	bl	41d0 <PyErr_SetString@plt>
    8af8:	ldp	x23, x24, [sp, #64]
    8afc:	b	890c <PySequence_Fast@plt+0x41fc>
    8b00:	mov	x0, x22
    8b04:	bl	4180 <_Py_Dealloc@plt>
    8b08:	ldr	x25, [sp, #80]
    8b0c:	b	8984 <PySequence_Fast@plt+0x4274>
    8b10:	bl	43c0 <PyErr_Occurred@plt>
    8b14:	cbnz	x0, 8984 <PySequence_Fast@plt+0x4274>
    8b18:	b	89fc <PySequence_Fast@plt+0x42ec>
    8b1c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8b20:	ldr	x0, [x0, #3984]
    8b24:	ldr	x0, [x0]
    8b28:	bl	40e0 <PyErr_SetFromErrno@plt>
    8b2c:	b	8984 <PySequence_Fast@plt+0x4274>
    8b30:	cbnz	x24, 88d4 <PySequence_Fast@plt+0x41c4>
    8b34:	b	88f4 <PySequence_Fast@plt+0x41e4>
    8b38:	stp	x29, x30, [sp, #-224]!
    8b3c:	adrp	x3, 28000 <PyInit__socket@@Base+0x1ae80>
    8b40:	add	x3, x3, #0x580
    8b44:	mov	x29, sp
    8b48:	stp	x21, x22, [sp, #32]
    8b4c:	add	x21, sp, #0x90
    8b50:	add	x3, x3, #0x90
    8b54:	mov	x4, x21
    8b58:	add	x6, sp, #0x7c
    8b5c:	add	x5, sp, #0x80
    8b60:	stp	x19, x20, [sp, #16]
    8b64:	mov	x19, x0
    8b68:	mov	x0, x1
    8b6c:	mov	x1, x2
    8b70:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    8b74:	add	x2, x2, #0x578
    8b78:	str	wzr, [sp, #124]
    8b7c:	str	xzr, [sp, #128]
    8b80:	bl	4440 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    8b84:	cbz	w0, 8cec <PySequence_Fast@plt+0x45dc>
    8b88:	ldr	x20, [sp, #128]
    8b8c:	stp	x27, x28, [sp, #80]
    8b90:	cmp	x20, #0x0
    8b94:	ldr	x22, [sp, #144]
    8b98:	ldr	x27, [sp, #160]
    8b9c:	b.lt	8d6c <PySequence_Fast@plt+0x465c>  // b.tstop
    8ba0:	b.eq	8c38 <PySequence_Fast@plt+0x4528>  // b.none
    8ba4:	cmp	x20, x27
    8ba8:	b.gt	8d34 <PySequence_Fast@plt+0x4624>
    8bac:	stp	x23, x24, [sp, #48]
    8bb0:	ldr	w23, [sp, #124]
    8bb4:	stp	x25, x26, [sp, #64]
    8bb8:	add	x28, sp, #0x88
    8bbc:	ldr	x25, [x19, #40]
    8bc0:	mov	x24, #0x0                   	// #0
    8bc4:	str	wzr, [sp, #108]
    8bc8:	cmp	x25, #0x0
    8bcc:	b.le	8c00 <PySequence_Fast@plt+0x44f0>
    8bd0:	ldr	w0, [sp, #108]
    8bd4:	cbnz	w0, 8c7c <PySequence_Fast@plt+0x456c>
    8bd8:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    8bdc:	add	x24, x25, x0
    8be0:	mov	x0, x25
    8be4:	b	8c88 <PySequence_Fast@plt+0x4578>
    8be8:	bl	4660 <__errno_location@plt>
    8bec:	ldr	w0, [x0]
    8bf0:	cmp	w0, #0x4
    8bf4:	b.ne	8d00 <PySequence_Fast@plt+0x45f0>  // b.any
    8bf8:	bl	45e0 <PyErr_CheckSignals@plt>
    8bfc:	cbnz	w0, 8d18 <PySequence_Fast@plt+0x4608>
    8c00:	bl	4570 <PyEval_SaveThread@plt>
    8c04:	mov	x26, x0
    8c08:	ldr	w0, [x19, #16]
    8c0c:	mov	w3, w23
    8c10:	mov	x2, x20
    8c14:	mov	x1, x22
    8c18:	bl	4390 <recv@plt>
    8c1c:	mov	x27, x0
    8c20:	mov	x0, x26
    8c24:	bl	40c0 <PyEval_RestoreThread@plt>
    8c28:	tbnz	x27, #63, 8be8 <PySequence_Fast@plt+0x44d8>
    8c2c:	ldp	x23, x24, [sp, #48]
    8c30:	ldp	x25, x26, [sp, #64]
    8c34:	b	8c40 <PySequence_Fast@plt+0x4530>
    8c38:	str	x27, [sp, #128]
    8c3c:	cbnz	x27, 8d84 <PySequence_Fast@plt+0x4674>
    8c40:	mov	x0, x21
    8c44:	bl	4100 <PyBuffer_Release@plt>
    8c48:	mov	x0, x27
    8c4c:	bl	42e0 <PyLong_FromSsize_t@plt>
    8c50:	ldp	x27, x28, [sp, #80]
    8c54:	ldp	x19, x20, [sp, #16]
    8c58:	ldp	x21, x22, [sp, #32]
    8c5c:	ldp	x29, x30, [sp], #224
    8c60:	ret
    8c64:	bl	4660 <__errno_location@plt>
    8c68:	ldr	w0, [x0]
    8c6c:	cmp	w0, #0x4
    8c70:	b.ne	8d10 <PySequence_Fast@plt+0x4600>  // b.any
    8c74:	bl	45e0 <PyErr_CheckSignals@plt>
    8c78:	cbnz	w0, 8d18 <PySequence_Fast@plt+0x4608>
    8c7c:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    8c80:	subs	x0, x24, x0
    8c84:	b.mi	8d98 <PySequence_Fast@plt+0x4688>  // b.first
    8c88:	ldr	w2, [x19, #16]
    8c8c:	cmn	w2, #0x1
    8c90:	b.eq	8ce0 <PySequence_Fast@plt+0x45d0>  // b.none
    8c94:	str	w2, [sp, #136]
    8c98:	mov	w2, #0x1                   	// #1
    8c9c:	mov	w1, #0x1                   	// #1
    8ca0:	strh	w2, [sp, #140]
    8ca4:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    8ca8:	mov	x26, x0
    8cac:	bl	4570 <PyEval_SaveThread@plt>
    8cb0:	mov	x27, x0
    8cb4:	cmp	x26, #0x0
    8cb8:	mov	x1, #0x1                   	// #1
    8cbc:	csinv	x2, x26, xzr, ge  // ge = tcont
    8cc0:	mov	x0, x28
    8cc4:	bl	4200 <poll@plt>
    8cc8:	mov	w26, w0
    8ccc:	mov	x0, x27
    8cd0:	bl	40c0 <PyEval_RestoreThread@plt>
    8cd4:	cmp	w26, #0x0
    8cd8:	b.lt	8c64 <PySequence_Fast@plt+0x4554>  // b.tstop
    8cdc:	b.eq	8d98 <PySequence_Fast@plt+0x4688>  // b.none
    8ce0:	mov	w0, #0x1                   	// #1
    8ce4:	str	w0, [sp, #108]
    8ce8:	b	8c00 <PySequence_Fast@plt+0x44f0>
    8cec:	mov	x0, #0x0                   	// #0
    8cf0:	ldp	x19, x20, [sp, #16]
    8cf4:	ldp	x21, x22, [sp, #32]
    8cf8:	ldp	x29, x30, [sp], #224
    8cfc:	ret
    8d00:	ldr	x1, [x19, #40]
    8d04:	cmp	x1, #0x0
    8d08:	ccmp	w0, #0xb, #0x0, gt
    8d0c:	b.eq	8bc8 <PySequence_Fast@plt+0x44b8>  // b.none
    8d10:	ldr	x0, [x19, #32]
    8d14:	blr	x0
    8d18:	mov	x0, x21
    8d1c:	bl	4100 <PyBuffer_Release@plt>
    8d20:	mov	x0, #0x0                   	// #0
    8d24:	ldp	x23, x24, [sp, #48]
    8d28:	ldp	x25, x26, [sp, #64]
    8d2c:	ldp	x27, x28, [sp, #80]
    8d30:	b	8c54 <PySequence_Fast@plt+0x4544>
    8d34:	mov	x0, x21
    8d38:	bl	4100 <PyBuffer_Release@plt>
    8d3c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8d40:	add	x1, x1, #0x5b0
    8d44:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8d48:	ldr	x0, [x0, #3960]
    8d4c:	ldr	x0, [x0]
    8d50:	bl	41d0 <PyErr_SetString@plt>
    8d54:	mov	x0, #0x0                   	// #0
    8d58:	ldp	x19, x20, [sp, #16]
    8d5c:	ldp	x21, x22, [sp, #32]
    8d60:	ldp	x27, x28, [sp, #80]
    8d64:	ldp	x29, x30, [sp], #224
    8d68:	ret
    8d6c:	mov	x0, x21
    8d70:	bl	4100 <PyBuffer_Release@plt>
    8d74:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8d78:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8d7c:	add	x1, x1, #0x588
    8d80:	b	8d48 <PySequence_Fast@plt+0x4638>
    8d84:	mov	x20, x27
    8d88:	stp	x23, x24, [sp, #48]
    8d8c:	ldr	w23, [sp, #124]
    8d90:	stp	x25, x26, [sp, #64]
    8d94:	b	8bb8 <PySequence_Fast@plt+0x44a8>
    8d98:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    8d9c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8da0:	add	x1, x1, #0x410
    8da4:	ldr	x0, [x0, #3872]
    8da8:	bl	41d0 <PyErr_SetString@plt>
    8dac:	b	8d18 <PySequence_Fast@plt+0x4608>
    8db0:	stp	x29, x30, [sp, #-144]!
    8db4:	mov	x29, sp
    8db8:	add	x3, sp, #0x74
    8dbc:	add	x2, sp, #0x78
    8dc0:	stp	x19, x20, [sp, #16]
    8dc4:	mov	x20, x0
    8dc8:	mov	x0, x1
    8dcc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8dd0:	add	x1, x1, #0x5d8
    8dd4:	str	wzr, [sp, #116]
    8dd8:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    8ddc:	cbz	w0, 8fa4 <PySequence_Fast@plt+0x4894>
    8de0:	ldr	x1, [sp, #120]
    8de4:	tbnz	x1, #63, 8fb8 <PySequence_Fast@plt+0x48a8>
    8de8:	mov	x0, #0x0                   	// #0
    8dec:	bl	4120 <PyBytes_FromStringAndSize@plt>
    8df0:	str	x0, [sp, #128]
    8df4:	mov	x19, x0
    8df8:	cbz	x0, 8fa4 <PySequence_Fast@plt+0x4894>
    8dfc:	stp	x21, x22, [sp, #32]
    8e00:	ldr	x21, [sp, #120]
    8e04:	cbnz	x21, 8e1c <PySequence_Fast@plt+0x470c>
    8e08:	ldp	x21, x22, [sp, #32]
    8e0c:	mov	x0, x19
    8e10:	ldp	x19, x20, [sp, #16]
    8e14:	ldp	x29, x30, [sp], #144
    8e18:	ret
    8e1c:	stp	x23, x24, [sp, #48]
    8e20:	mov	x24, #0x0                   	// #0
    8e24:	ldr	w23, [sp, #116]
    8e28:	stp	x25, x26, [sp, #64]
    8e2c:	ldr	x25, [x20, #40]
    8e30:	stp	x27, x28, [sp, #80]
    8e34:	add	x28, sp, #0x88
    8e38:	str	wzr, [sp, #108]
    8e3c:	cmp	x25, #0x0
    8e40:	b.le	8ee0 <PySequence_Fast@plt+0x47d0>
    8e44:	ldr	w0, [sp, #108]
    8e48:	cbnz	w0, 8e74 <PySequence_Fast@plt+0x4764>
    8e4c:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    8e50:	add	x24, x25, x0
    8e54:	mov	x0, x25
    8e58:	b	8e80 <PySequence_Fast@plt+0x4770>
    8e5c:	bl	4660 <__errno_location@plt>
    8e60:	ldr	w0, [x0]
    8e64:	cmp	w0, #0x4
    8e68:	b.ne	8f78 <PySequence_Fast@plt+0x4868>  // b.any
    8e6c:	bl	45e0 <PyErr_CheckSignals@plt>
    8e70:	cbnz	w0, 8f80 <PySequence_Fast@plt+0x4870>
    8e74:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    8e78:	subs	x0, x24, x0
    8e7c:	b.mi	9000 <PySequence_Fast@plt+0x48f0>  // b.first
    8e80:	ldr	w2, [x20, #16]
    8e84:	cmn	w2, #0x1
    8e88:	b.eq	8ed8 <PySequence_Fast@plt+0x47c8>  // b.none
    8e8c:	str	w2, [sp, #136]
    8e90:	mov	w2, #0x1                   	// #1
    8e94:	mov	w1, #0x1                   	// #1
    8e98:	strh	w2, [sp, #140]
    8e9c:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    8ea0:	mov	x22, x0
    8ea4:	bl	4570 <PyEval_SaveThread@plt>
    8ea8:	mov	x26, x0
    8eac:	cmp	x22, #0x0
    8eb0:	mov	x1, #0x1                   	// #1
    8eb4:	csinv	x2, x22, xzr, ge  // ge = tcont
    8eb8:	mov	x0, x28
    8ebc:	bl	4200 <poll@plt>
    8ec0:	mov	w22, w0
    8ec4:	mov	x0, x26
    8ec8:	bl	40c0 <PyEval_RestoreThread@plt>
    8ecc:	cmp	w22, #0x0
    8ed0:	b.lt	8e5c <PySequence_Fast@plt+0x474c>  // b.tstop
    8ed4:	b.eq	9000 <PySequence_Fast@plt+0x48f0>  // b.none
    8ed8:	mov	w0, #0x1                   	// #1
    8edc:	str	w0, [sp, #108]
    8ee0:	add	x22, x19, #0x20
    8ee4:	b	8f00 <PySequence_Fast@plt+0x47f0>
    8ee8:	bl	4660 <__errno_location@plt>
    8eec:	ldr	w0, [x0]
    8ef0:	cmp	w0, #0x4
    8ef4:	b.ne	8f68 <PySequence_Fast@plt+0x4858>  // b.any
    8ef8:	bl	45e0 <PyErr_CheckSignals@plt>
    8efc:	cbnz	w0, 8f80 <PySequence_Fast@plt+0x4870>
    8f00:	bl	4570 <PyEval_SaveThread@plt>
    8f04:	mov	x26, x0
    8f08:	ldr	w0, [x20, #16]
    8f0c:	mov	w3, w23
    8f10:	mov	x2, x21
    8f14:	mov	x1, x22
    8f18:	bl	4390 <recv@plt>
    8f1c:	mov	x27, x0
    8f20:	mov	x0, x26
    8f24:	bl	40c0 <PyEval_RestoreThread@plt>
    8f28:	tbnz	x27, #63, 8ee8 <PySequence_Fast@plt+0x47d8>
    8f2c:	ldr	x0, [sp, #120]
    8f30:	cmp	x0, x27
    8f34:	b.eq	8f44 <PySequence_Fast@plt+0x4834>  // b.none
    8f38:	mov	x1, x27
    8f3c:	add	x0, sp, #0x80
    8f40:	bl	4080 <_PyBytes_Resize@plt>
    8f44:	ldr	x19, [sp, #128]
    8f48:	ldp	x21, x22, [sp, #32]
    8f4c:	mov	x0, x19
    8f50:	ldp	x19, x20, [sp, #16]
    8f54:	ldp	x23, x24, [sp, #48]
    8f58:	ldp	x25, x26, [sp, #64]
    8f5c:	ldp	x27, x28, [sp, #80]
    8f60:	ldp	x29, x30, [sp], #144
    8f64:	ret
    8f68:	ldr	x1, [x20, #40]
    8f6c:	cmp	x1, #0x0
    8f70:	ccmp	w0, #0xb, #0x0, gt
    8f74:	b.eq	8e3c <PySequence_Fast@plt+0x472c>  // b.none
    8f78:	ldr	x0, [x20, #32]
    8f7c:	blr	x0
    8f80:	ldr	x0, [sp, #128]
    8f84:	ldr	x1, [x0]
    8f88:	sub	x1, x1, #0x1
    8f8c:	str	x1, [x0]
    8f90:	cbz	x1, 8fe4 <PySequence_Fast@plt+0x48d4>
    8f94:	ldp	x21, x22, [sp, #32]
    8f98:	ldp	x23, x24, [sp, #48]
    8f9c:	ldp	x25, x26, [sp, #64]
    8fa0:	ldp	x27, x28, [sp, #80]
    8fa4:	mov	x19, #0x0                   	// #0
    8fa8:	mov	x0, x19
    8fac:	ldp	x19, x20, [sp, #16]
    8fb0:	ldp	x29, x30, [sp], #144
    8fb4:	ret
    8fb8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    8fbc:	mov	x19, #0x0                   	// #0
    8fc0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    8fc4:	add	x1, x1, #0x5e8
    8fc8:	ldr	x0, [x0, #3960]
    8fcc:	ldr	x0, [x0]
    8fd0:	bl	41d0 <PyErr_SetString@plt>
    8fd4:	mov	x0, x19
    8fd8:	ldp	x19, x20, [sp, #16]
    8fdc:	ldp	x29, x30, [sp], #144
    8fe0:	ret
    8fe4:	bl	4180 <_Py_Dealloc@plt>
    8fe8:	mov	x19, #0x0                   	// #0
    8fec:	ldp	x21, x22, [sp, #32]
    8ff0:	ldp	x23, x24, [sp, #48]
    8ff4:	ldp	x25, x26, [sp, #64]
    8ff8:	ldp	x27, x28, [sp, #80]
    8ffc:	b	8e0c <PySequence_Fast@plt+0x46fc>
    9000:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    9004:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9008:	add	x1, x1, #0x410
    900c:	ldr	x0, [x0, #3872]
    9010:	bl	41d0 <PyErr_SetString@plt>
    9014:	b	8f80 <PySequence_Fast@plt+0x4870>
    9018:	stp	x29, x30, [sp, #-336]!
    901c:	mov	x29, sp
    9020:	ldr	w7, [x0, #20]
    9024:	stp	x19, x20, [sp, #16]
    9028:	mov	x20, x0
    902c:	cmp	w7, #0x15
    9030:	stp	x21, x22, [sp, #32]
    9034:	sxtw	x21, w2
    9038:	mov	w22, w3
    903c:	stp	x23, x24, [sp, #48]
    9040:	mov	x23, x4
    9044:	mov	x24, x6
    9048:	stp	x1, x5, [sp, #104]
    904c:	stp	xzr, xzr, [sp, #152]
    9050:	stp	xzr, xzr, [sp, #168]
    9054:	stp	xzr, xzr, [sp, #184]
    9058:	str	xzr, [sp, #200]
    905c:	b.eq	9178 <PySequence_Fast@plt+0x4a68>  // b.none
    9060:	b.gt	9188 <PySequence_Fast@plt+0x4a78>
    9064:	cmp	w7, #0xa
    9068:	b.eq	9408 <PySequence_Fast@plt+0x4cf8>  // b.none
    906c:	b.le	91b4 <PySequence_Fast@plt+0x4aa4>
    9070:	cmp	w7, #0x10
    9074:	b.eq	91a4 <PySequence_Fast@plt+0x4a94>  // b.none
    9078:	cmp	w7, #0x11
    907c:	b.ne	91ec <PySequence_Fast@plt+0x4adc>  // b.any
    9080:	mov	x2, #0x14                  	// #20
    9084:	mov	w19, w2
    9088:	stp	x25, x26, [sp, #64]
    908c:	nop
    9090:	add	x26, sp, #0xd0
    9094:	mov	x0, x26
    9098:	mov	w1, #0x0                   	// #0
    909c:	bl	4270 <memset@plt>
    90a0:	strh	wzr, [sp, #208]
    90a4:	mov	x0, #0x7fffffff            	// #2147483647
    90a8:	cmp	x23, x0
    90ac:	b.hi	9594 <PySequence_Fast@plt+0x4e84>  // b.pmore
    90b0:	cbnz	x23, 9344 <PySequence_Fast@plt+0x4c34>
    90b4:	mov	x25, #0x0                   	// #0
    90b8:	stp	x27, x28, [sp, #80]
    90bc:	add	x0, sp, #0x90
    90c0:	ldr	x27, [x20, #40]
    90c4:	add	x28, sp, #0x98
    90c8:	str	x0, [sp, #136]
    90cc:	ldr	x0, [sp, #104]
    90d0:	str	xzr, [sp, #120]
    90d4:	str	wzr, [sp, #128]
    90d8:	str	x26, [sp, #152]
    90dc:	str	w19, [sp, #160]
    90e0:	str	x0, [sp, #168]
    90e4:	stp	x21, x25, [sp, #176]
    90e8:	str	x23, [sp, #192]
    90ec:	cmp	x27, #0x0
    90f0:	b.le	9224 <PySequence_Fast@plt+0x4b14>
    90f4:	ldr	w0, [sp, #128]
    90f8:	cbnz	w0, 9318 <PySequence_Fast@plt+0x4c08>
    90fc:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    9100:	add	x0, x27, x0
    9104:	str	x0, [sp, #120]
    9108:	mov	x0, x27
    910c:	ldr	w2, [x20, #16]
    9110:	cmn	w2, #0x1
    9114:	b.eq	9164 <PySequence_Fast@plt+0x4a54>  // b.none
    9118:	str	w2, [sp, #144]
    911c:	mov	w2, #0x1                   	// #1
    9120:	mov	w1, #0x1                   	// #1
    9124:	strh	w2, [sp, #148]
    9128:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    912c:	mov	x21, x0
    9130:	bl	4570 <PyEval_SaveThread@plt>
    9134:	mov	x23, x0
    9138:	ldr	x0, [sp, #136]
    913c:	cmp	x21, #0x0
    9140:	csinv	x2, x21, xzr, ge  // ge = tcont
    9144:	mov	x1, #0x1                   	// #1
    9148:	bl	4200 <poll@plt>
    914c:	mov	w21, w0
    9150:	mov	x0, x23
    9154:	bl	40c0 <PyEval_RestoreThread@plt>
    9158:	cmp	w21, #0x0
    915c:	b.lt	9300 <PySequence_Fast@plt+0x4bf0>  // b.tstop
    9160:	b.eq	9328 <PySequence_Fast@plt+0x4c18>  // b.none
    9164:	mov	w0, #0x1                   	// #1
    9168:	str	w0, [sp, #128]
    916c:	b	9224 <PySequence_Fast@plt+0x4b14>
    9170:	cmp	w7, #0x2
    9174:	b.ne	91ec <PySequence_Fast@plt+0x4adc>  // b.any
    9178:	mov	x2, #0x10                  	// #16
    917c:	mov	w19, w2
    9180:	stp	x25, x26, [sp, #64]
    9184:	b	9090 <PySequence_Fast@plt+0x4980>
    9188:	cmp	w7, #0x26
    918c:	b.eq	93ec <PySequence_Fast@plt+0x4cdc>  // b.none
    9190:	b.le	91cc <PySequence_Fast@plt+0x4abc>
    9194:	cmp	w7, #0x28
    9198:	b.eq	9178 <PySequence_Fast@plt+0x4a68>  // b.none
    919c:	cmp	w7, #0x2a
    91a0:	b.ne	91ec <PySequence_Fast@plt+0x4adc>  // b.any
    91a4:	mov	x2, #0xc                   	// #12
    91a8:	mov	w19, w2
    91ac:	stp	x25, x26, [sp, #64]
    91b0:	b	9090 <PySequence_Fast@plt+0x4980>
    91b4:	cmp	w7, #0x1
    91b8:	b.ne	9170 <PySequence_Fast@plt+0x4a60>  // b.any
    91bc:	mov	x2, #0x6e                  	// #110
    91c0:	mov	w19, w2
    91c4:	stp	x25, x26, [sp, #64]
    91c8:	b	9090 <PySequence_Fast@plt+0x4980>
    91cc:	cmp	w7, #0x1d
    91d0:	b.ne	91e4 <PySequence_Fast@plt+0x4ad4>  // b.any
    91d4:	mov	x2, #0x18                  	// #24
    91d8:	mov	w19, w2
    91dc:	stp	x25, x26, [sp, #64]
    91e0:	b	9090 <PySequence_Fast@plt+0x4980>
    91e4:	cmp	w7, #0x1e
    91e8:	b.eq	9178 <PySequence_Fast@plt+0x4a68>  // b.none
    91ec:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    91f0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    91f4:	mov	x19, #0x0                   	// #0
    91f8:	add	x1, x1, #0x3f0
    91fc:	ldr	x0, [x0, #3984]
    9200:	ldr	x0, [x0]
    9204:	bl	41d0 <PyErr_SetString@plt>
    9208:	b	92e8 <PySequence_Fast@plt+0x4bd8>
    920c:	bl	4660 <__errno_location@plt>
    9210:	ldr	w0, [x0]
    9214:	cmp	w0, #0x4
    9218:	b.ne	93cc <PySequence_Fast@plt+0x4cbc>  // b.any
    921c:	bl	45e0 <PyErr_CheckSignals@plt>
    9220:	cbnz	w0, 93c4 <PySequence_Fast@plt+0x4cb4>
    9224:	bl	4570 <PyEval_SaveThread@plt>
    9228:	mov	x23, x0
    922c:	ldr	w0, [x20, #16]
    9230:	mov	w2, w22
    9234:	mov	x1, x28
    9238:	bl	4000 <recvmsg@plt>
    923c:	mov	x21, x0
    9240:	mov	x0, x23
    9244:	bl	40c0 <PyEval_RestoreThread@plt>
    9248:	tbnz	x21, #63, 920c <PySequence_Fast@plt+0x4afc>
    924c:	mov	x0, #0x0                   	// #0
    9250:	bl	3fd0 <PyList_New@plt>
    9254:	mov	x22, x0
    9258:	cbz	x0, 95b8 <PySequence_Fast@plt+0x4ea8>
    925c:	ldr	x0, [sp, #192]
    9260:	cmp	x0, #0xf
    9264:	b.hi	9434 <PySequence_Fast@plt+0x4d24>  // b.pmore
    9268:	ldr	x2, [sp, #112]
    926c:	mov	x0, x21
    9270:	mov	x1, x24
    9274:	blr	x2
    9278:	ldr	w23, [sp, #200]
    927c:	ldr	w2, [sp, #160]
    9280:	mov	x21, x0
    9284:	cmp	w2, w19
    9288:	csel	w2, w2, w19, ls  // ls = plast
    928c:	cbz	w2, 9418 <PySequence_Fast@plt+0x4d08>
    9290:	ldr	w0, [x20, #16]
    9294:	mov	w2, w2
    9298:	ldr	w3, [x20, #28]
    929c:	mov	x1, x26
    92a0:	bl	5818 <PySequence_Fast@plt+0x1108>
    92a4:	mov	x4, x0
    92a8:	mov	w3, w23
    92ac:	mov	x1, x21
    92b0:	mov	x2, x22
    92b4:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    92b8:	add	x0, x0, #0x698
    92bc:	bl	4640 <_Py_BuildValue_SizeT@plt>
    92c0:	mov	x19, x0
    92c4:	cbz	x0, 9374 <PySequence_Fast@plt+0x4c64>
    92c8:	ldr	x0, [x22]
    92cc:	sub	x0, x0, #0x1
    92d0:	str	x0, [x22]
    92d4:	cbz	x0, 93fc <PySequence_Fast@plt+0x4cec>
    92d8:	mov	x0, x25
    92dc:	bl	40d0 <PyMem_Free@plt>
    92e0:	ldp	x25, x26, [sp, #64]
    92e4:	ldp	x27, x28, [sp, #80]
    92e8:	mov	x0, x19
    92ec:	ldp	x19, x20, [sp, #16]
    92f0:	ldp	x21, x22, [sp, #32]
    92f4:	ldp	x23, x24, [sp, #48]
    92f8:	ldp	x29, x30, [sp], #336
    92fc:	ret
    9300:	bl	4660 <__errno_location@plt>
    9304:	ldr	w0, [x0]
    9308:	cmp	w0, #0x4
    930c:	b.ne	93dc <PySequence_Fast@plt+0x4ccc>  // b.any
    9310:	bl	45e0 <PyErr_CheckSignals@plt>
    9314:	cbnz	w0, 93c4 <PySequence_Fast@plt+0x4cb4>
    9318:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    931c:	ldr	x1, [sp, #120]
    9320:	subs	x0, x1, x0
    9324:	b.pl	910c <PySequence_Fast@plt+0x49fc>  // b.nfrst
    9328:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    932c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9330:	mov	x19, #0x0                   	// #0
    9334:	add	x1, x1, #0x410
    9338:	ldr	x0, [x0, #3872]
    933c:	bl	41d0 <PyErr_SetString@plt>
    9340:	b	92d8 <PySequence_Fast@plt+0x4bc8>
    9344:	mov	x0, x23
    9348:	bl	4690 <PyMem_Malloc@plt>
    934c:	mov	x25, x0
    9350:	cbz	x0, 9684 <PySequence_Fast@plt+0x4f74>
    9354:	stp	x27, x28, [sp, #80]
    9358:	b	90bc <PySequence_Fast@plt+0x49ac>
    935c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9360:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9364:	add	x1, x1, #0x670
    9368:	ldr	x0, [x0, #3984]
    936c:	ldr	x0, [x0]
    9370:	bl	41d0 <PyErr_SetString@plt>
    9374:	ldr	x0, [sp, #192]
    9378:	cmp	x0, #0xf
    937c:	b.ls	95cc <PySequence_Fast@plt+0x4ebc>  // b.plast
    9380:	ldr	x2, [sp, #184]
    9384:	mov	x20, #0x100000001           	// #4294967297
    9388:	mov	x19, x2
    938c:	cbz	x19, 93c0 <PySequence_Fast@plt+0x4cb0>
    9390:	cbz	x2, 93c0 <PySequence_Fast@plt+0x4cb0>
    9394:	sub	x0, x19, x2
    9398:	cmn	x0, #0x11
    939c:	b.hi	93c0 <PySequence_Fast@plt+0x4cb0>  // b.pmore
    93a0:	ldr	x1, [sp, #192]
    93a4:	add	x0, x0, #0x10
    93a8:	cmp	x0, x1
    93ac:	b.hi	93c0 <PySequence_Fast@plt+0x4cb0>  // b.pmore
    93b0:	ldr	x0, [x19]
    93b4:	cmp	x0, #0xf
    93b8:	b.hi	95d4 <PySequence_Fast@plt+0x4ec4>  // b.pmore
    93bc:	nop
    93c0:	cbnz	x22, 95cc <PySequence_Fast@plt+0x4ebc>
    93c4:	mov	x19, #0x0                   	// #0
    93c8:	b	92d8 <PySequence_Fast@plt+0x4bc8>
    93cc:	ldr	x1, [x20, #40]
    93d0:	cmp	x1, #0x0
    93d4:	ccmp	w0, #0xb, #0x0, gt
    93d8:	b.eq	90ec <PySequence_Fast@plt+0x49dc>  // b.none
    93dc:	ldr	x0, [x20, #32]
    93e0:	mov	x19, #0x0                   	// #0
    93e4:	blr	x0
    93e8:	b	92d8 <PySequence_Fast@plt+0x4bc8>
    93ec:	mov	x2, #0x58                  	// #88
    93f0:	mov	w19, w2
    93f4:	stp	x25, x26, [sp, #64]
    93f8:	b	9090 <PySequence_Fast@plt+0x4980>
    93fc:	mov	x0, x22
    9400:	bl	4180 <_Py_Dealloc@plt>
    9404:	b	92d8 <PySequence_Fast@plt+0x4bc8>
    9408:	mov	x2, #0x1c                  	// #28
    940c:	mov	w19, w2
    9410:	stp	x25, x26, [sp, #64]
    9414:	b	9090 <PySequence_Fast@plt+0x4980>
    9418:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    941c:	ldr	x0, [x0, #4024]
    9420:	mov	x4, x0
    9424:	ldr	x1, [x0]
    9428:	add	x1, x1, #0x1
    942c:	str	x1, [x0]
    9430:	b	92a8 <PySequence_Fast@plt+0x4b98>
    9434:	ldr	x28, [sp, #184]
    9438:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    943c:	adrp	x27, f000 <PyInit__socket@@Base+0x1e80>
    9440:	add	x1, x27, #0x630
    9444:	ldr	x0, [x0, #4056]
    9448:	mov	x2, x28
    944c:	stp	x1, x0, [sp, #120]
    9450:	cbz	x28, 9268 <PySequence_Fast@plt+0x4b58>
    9454:	cbz	x2, 9464 <PySequence_Fast@plt+0x4d54>
    9458:	sub	x0, x28, x2
    945c:	cmn	x0, #0x11
    9460:	b.ls	9498 <PySequence_Fast@plt+0x4d88>  // b.plast
    9464:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9468:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    946c:	mov	x2, #0x1                   	// #1
    9470:	add	x1, x1, #0x630
    9474:	ldr	x0, [x0, #4056]
    9478:	ldr	x0, [x0]
    947c:	bl	4160 <PyErr_WarnEx@plt>
    9480:	cmn	w0, #0x1
    9484:	b.ne	9268 <PySequence_Fast@plt+0x4b58>  // b.any
    9488:	ldr	x0, [sp, #192]
    948c:	cmp	x0, #0xf
    9490:	b.hi	9380 <PySequence_Fast@plt+0x4c70>  // b.pmore
    9494:	b	95cc <PySequence_Fast@plt+0x4ebc>
    9498:	ldr	x3, [sp, #192]
    949c:	add	x0, x0, #0x10
    94a0:	cmp	x0, x3
    94a4:	b.hi	9464 <PySequence_Fast@plt+0x4d54>  // b.pmore
    94a8:	ldr	x0, [x28]
    94ac:	cmp	x0, #0xf
    94b0:	b.ls	9464 <PySequence_Fast@plt+0x4d54>  // b.plast
    94b4:	add	x23, x28, #0x10
    94b8:	sub	x2, x23, x2
    94bc:	cmp	x3, x2
    94c0:	b.cc	9464 <PySequence_Fast@plt+0x4d54>  // b.lo, b.ul, b.last
    94c4:	sub	x0, x0, #0x10
    94c8:	sub	x27, x3, x2
    94cc:	cmp	x0, x27
    94d0:	b.ls	9694 <PySequence_Fast@plt+0x4f84>  // b.plast
    94d4:	ldp	x1, x0, [sp, #120]
    94d8:	mov	x2, #0x1                   	// #1
    94dc:	ldr	x0, [x0]
    94e0:	bl	4160 <PyErr_WarnEx@plt>
    94e4:	cmn	w0, #0x1
    94e8:	b.eq	9374 <PySequence_Fast@plt+0x4c64>  // b.none
    94ec:	mov	w0, #0x1                   	// #1
    94f0:	str	w0, [sp, #104]
    94f4:	tbnz	x27, #63, 935c <PySequence_Fast@plt+0x4c4c>
    94f8:	mov	x1, x27
    94fc:	mov	x0, x23
    9500:	bl	4120 <PyBytes_FromStringAndSize@plt>
    9504:	mov	x3, x0
    9508:	ldp	w1, w2, [x28, #8]
    950c:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    9510:	add	x0, x0, #0x690
    9514:	bl	4640 <_Py_BuildValue_SizeT@plt>
    9518:	mov	x23, x0
    951c:	cbz	x0, 9374 <PySequence_Fast@plt+0x4c64>
    9520:	mov	x1, x0
    9524:	mov	x0, x22
    9528:	bl	4360 <PyList_Append@plt>
    952c:	mov	w27, w0
    9530:	ldr	x2, [x23]
    9534:	sub	x2, x2, #0x1
    9538:	str	x2, [x23]
    953c:	cbz	x2, 9678 <PySequence_Fast@plt+0x4f68>
    9540:	cbnz	w27, 9374 <PySequence_Fast@plt+0x4c64>
    9544:	ldr	w0, [sp, #104]
    9548:	cbnz	w0, 9268 <PySequence_Fast@plt+0x4b58>
    954c:	ldr	x0, [x28]
    9550:	cmp	x0, #0xf
    9554:	b.ls	9268 <PySequence_Fast@plt+0x4b58>  // b.plast
    9558:	ldp	x2, x1, [sp, #184]
    955c:	add	x0, x0, #0x7
    9560:	and	x0, x0, #0xfffffffffffffff8
    9564:	add	x28, x28, x0
    9568:	add	x0, x28, #0x10
    956c:	add	x1, x2, x1
    9570:	cmp	x1, x0
    9574:	b.cc	9268 <PySequence_Fast@plt+0x4b58>  // b.lo, b.ul, b.last
    9578:	ldr	x0, [x28]
    957c:	add	x0, x0, #0x7
    9580:	and	x0, x0, #0xfffffffffffffff8
    9584:	add	x0, x28, x0
    9588:	cmp	x1, x0
    958c:	b.cs	9450 <PySequence_Fast@plt+0x4d40>  // b.hs, b.nlast
    9590:	b	9268 <PySequence_Fast@plt+0x4b58>
    9594:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9598:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    959c:	mov	x19, #0x0                   	// #0
    95a0:	add	x1, x1, #0x608
    95a4:	ldr	x0, [x0, #3960]
    95a8:	ldr	x0, [x0]
    95ac:	bl	41d0 <PyErr_SetString@plt>
    95b0:	ldp	x25, x26, [sp, #64]
    95b4:	b	92e8 <PySequence_Fast@plt+0x4bd8>
    95b8:	ldr	x0, [sp, #192]
    95bc:	cmp	x0, #0xf
    95c0:	b.hi	9380 <PySequence_Fast@plt+0x4c70>  // b.pmore
    95c4:	mov	x19, #0x0                   	// #0
    95c8:	b	92d8 <PySequence_Fast@plt+0x4bc8>
    95cc:	mov	x19, #0x0                   	// #0
    95d0:	b	92c8 <PySequence_Fast@plt+0x4bb8>
    95d4:	add	x21, x19, #0x10
    95d8:	sub	x3, x21, x2
    95dc:	cmp	x1, x3
    95e0:	b.cc	93c0 <PySequence_Fast@plt+0x4cb0>  // b.lo, b.ul, b.last
    95e4:	sub	x3, x1, x3
    95e8:	sub	x4, x0, #0x10
    95ec:	cmp	x4, x3
    95f0:	ldr	x5, [x19, #8]
    95f4:	b.ls	96a0 <PySequence_Fast@plt+0x4f90>  // b.plast
    95f8:	cmp	x5, x20
    95fc:	b.ne	93c0 <PySequence_Fast@plt+0x4cb0>  // b.any
    9600:	lsr	x3, x3, #2
    9604:	sub	x23, x3, #0x1
    9608:	cbz	x3, 93c0 <PySequence_Fast@plt+0x4cb0>
    960c:	mov	w24, #0x1                   	// #1
    9610:	add	x23, x23, #0x5
    9614:	add	x23, x19, x23, lsl #2
    9618:	ldr	w0, [x21], #4
    961c:	bl	4380 <close@plt>
    9620:	cmp	x21, x23
    9624:	b.ne	9618 <PySequence_Fast@plt+0x4f08>  // b.any
    9628:	cbnz	w24, 93c0 <PySequence_Fast@plt+0x4cb0>
    962c:	ldr	x0, [x19]
    9630:	cmp	x0, #0xf
    9634:	b.ls	93c0 <PySequence_Fast@plt+0x4cb0>  // b.plast
    9638:	ldp	x2, x1, [sp, #184]
    963c:	add	x0, x0, #0x7
    9640:	and	x0, x0, #0xfffffffffffffff8
    9644:	add	x1, x2, x1
    9648:	add	x19, x19, x0
    964c:	add	x0, x19, #0x10
    9650:	cmp	x1, x0
    9654:	b.cc	93c0 <PySequence_Fast@plt+0x4cb0>  // b.lo, b.ul, b.last
    9658:	ldr	x0, [x19]
    965c:	add	x0, x0, #0x7
    9660:	and	x0, x0, #0xfffffffffffffff8
    9664:	add	x0, x19, x0
    9668:	cmp	x1, x0
    966c:	b.cs	938c <PySequence_Fast@plt+0x4c7c>  // b.hs, b.nlast
    9670:	cbz	x22, 93c4 <PySequence_Fast@plt+0x4cb4>
    9674:	b	95cc <PySequence_Fast@plt+0x4ebc>
    9678:	mov	x0, x23
    967c:	bl	4180 <_Py_Dealloc@plt>
    9680:	b	9540 <PySequence_Fast@plt+0x4e30>
    9684:	bl	4190 <PyErr_NoMemory@plt>
    9688:	mov	x19, x0
    968c:	ldp	x25, x26, [sp, #64]
    9690:	b	92e8 <PySequence_Fast@plt+0x4bd8>
    9694:	mov	x27, x0
    9698:	str	wzr, [sp, #104]
    969c:	b	94f4 <PySequence_Fast@plt+0x4de4>
    96a0:	cmp	x5, x20
    96a4:	b.ne	963c <PySequence_Fast@plt+0x4f2c>  // b.any
    96a8:	lsr	x4, x4, #2
    96ac:	mov	w24, #0x0                   	// #0
    96b0:	sub	x23, x4, #0x1
    96b4:	cbnz	x4, 9610 <PySequence_Fast@plt+0x4f00>
    96b8:	b	963c <PySequence_Fast@plt+0x4f2c>
    96bc:	nop
    96c0:	stp	x29, x30, [sp, #-128]!
    96c4:	mov	x29, sp
    96c8:	add	x4, sp, #0x6c
    96cc:	add	x3, sp, #0x70
    96d0:	add	x2, sp, #0x78
    96d4:	stp	x21, x22, [sp, #32]
    96d8:	stp	x25, x26, [sp, #64]
    96dc:	mov	x26, x0
    96e0:	mov	x0, x1
    96e4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    96e8:	add	x1, x1, #0x6a0
    96ec:	str	wzr, [sp, #108]
    96f0:	str	xzr, [sp, #112]
    96f4:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    96f8:	cbz	w0, 9874 <PySequence_Fast@plt+0x5164>
    96fc:	ldr	x0, [sp, #120]
    9700:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9704:	add	x1, x1, #0x6b8
    9708:	bl	4710 <PySequence_Fast@plt>
    970c:	mov	x22, x0
    9710:	cbz	x0, 9874 <PySequence_Fast@plt+0x5164>
    9714:	ldr	x25, [x22, #16]
    9718:	stp	x23, x24, [sp, #48]
    971c:	mov	x0, #0x7fffffff            	// #2147483647
    9720:	cmp	x25, x0
    9724:	b.gt	98cc <PySequence_Fast@plt+0x51bc>
    9728:	stp	x19, x20, [sp, #16]
    972c:	cmp	x25, #0x0
    9730:	b.gt	97c8 <PySequence_Fast@plt+0x50b8>
    9734:	mov	x23, #0x0                   	// #0
    9738:	mov	x24, #0x0                   	// #0
    973c:	mov	x19, #0x0                   	// #0
    9740:	ldr	w3, [sp, #108]
    9744:	mov	w2, w25
    9748:	ldr	x4, [sp, #112]
    974c:	mov	x0, x26
    9750:	mov	x1, x24
    9754:	adrp	x5, 5000 <PySequence_Fast@plt+0x8f0>
    9758:	mov	x6, #0x0                   	// #0
    975c:	add	x5, x5, #0xc0
    9760:	bl	9018 <PySequence_Fast@plt+0x4908>
    9764:	mov	x21, x0
    9768:	cbz	x19, 978c <PySequence_Fast@plt+0x507c>
    976c:	add	x19, x19, x19, lsl #2
    9770:	mov	x20, x23
    9774:	add	x19, x23, x19, lsl #4
    9778:	mov	x0, x20
    977c:	add	x20, x20, #0x50
    9780:	bl	4100 <PyBuffer_Release@plt>
    9784:	cmp	x19, x20
    9788:	b.ne	9778 <PySequence_Fast@plt+0x5068>  // b.any
    978c:	ldp	x19, x20, [sp, #16]
    9790:	mov	x0, x23
    9794:	bl	40d0 <PyMem_Free@plt>
    9798:	mov	x0, x24
    979c:	bl	40d0 <PyMem_Free@plt>
    97a0:	ldr	x1, [x22]
    97a4:	sub	x1, x1, #0x1
    97a8:	str	x1, [x22]
    97ac:	cbz	x1, 988c <PySequence_Fast@plt+0x517c>
    97b0:	mov	x0, x21
    97b4:	ldp	x21, x22, [sp, #32]
    97b8:	ldp	x23, x24, [sp, #48]
    97bc:	ldp	x25, x26, [sp, #64]
    97c0:	ldp	x29, x30, [sp], #128
    97c4:	ret
    97c8:	lsl	x0, x25, #4
    97cc:	bl	4690 <PyMem_Malloc@plt>
    97d0:	mov	x24, x0
    97d4:	cbz	x0, 98ac <PySequence_Fast@plt+0x519c>
    97d8:	add	x0, x25, x25, lsl #2
    97dc:	lsl	x0, x0, #4
    97e0:	bl	4690 <PyMem_Malloc@plt>
    97e4:	mov	x23, x0
    97e8:	cbz	x0, 98ac <PySequence_Fast@plt+0x519c>
    97ec:	mov	x20, x0
    97f0:	mov	x21, x24
    97f4:	mov	x19, #0x0                   	// #0
    97f8:	stp	x27, x28, [sp, #80]
    97fc:	adrp	x28, f000 <PyInit__socket@@Base+0x1e80>
    9800:	add	x27, x22, #0x18
    9804:	add	x28, x28, #0x710
    9808:	b	9848 <PySequence_Fast@plt+0x5138>
    980c:	ldr	x0, [x22, #24]
    9810:	mov	x2, x20
    9814:	mov	x1, x28
    9818:	ldr	x0, [x0, x19, lsl #3]
    981c:	bl	4300 <_PyArg_Parse_SizeT@plt>
    9820:	cbz	w0, 9868 <PySequence_Fast@plt+0x5158>
    9824:	ldr	x0, [x20]
    9828:	str	x0, [x21]
    982c:	ldr	x0, [x20, #16]
    9830:	str	x0, [x21, #8]
    9834:	add	x19, x19, #0x1
    9838:	add	x20, x20, #0x50
    983c:	cmp	x25, x19
    9840:	add	x21, x21, #0x10
    9844:	b.eq	98c0 <PySequence_Fast@plt+0x51b0>  // b.none
    9848:	ldr	x0, [x22, #8]
    984c:	ldr	x0, [x0, #168]
    9850:	tbnz	w0, #25, 980c <PySequence_Fast@plt+0x50fc>
    9854:	ldr	x0, [x27, x19, lsl #3]
    9858:	mov	x2, x20
    985c:	mov	x1, x28
    9860:	bl	4300 <_PyArg_Parse_SizeT@plt>
    9864:	cbnz	w0, 9824 <PySequence_Fast@plt+0x5114>
    9868:	mov	x21, #0x0                   	// #0
    986c:	ldp	x27, x28, [sp, #80]
    9870:	b	9768 <PySequence_Fast@plt+0x5058>
    9874:	mov	x21, #0x0                   	// #0
    9878:	mov	x0, x21
    987c:	ldp	x21, x22, [sp, #32]
    9880:	ldp	x25, x26, [sp, #64]
    9884:	ldp	x29, x30, [sp], #128
    9888:	ret
    988c:	mov	x0, x22
    9890:	bl	4180 <_Py_Dealloc@plt>
    9894:	mov	x0, x21
    9898:	ldp	x21, x22, [sp, #32]
    989c:	ldp	x23, x24, [sp, #48]
    98a0:	ldp	x25, x26, [sp, #64]
    98a4:	ldp	x29, x30, [sp], #128
    98a8:	ret
    98ac:	bl	4190 <PyErr_NoMemory@plt>
    98b0:	mov	x21, #0x0                   	// #0
    98b4:	mov	x23, #0x0                   	// #0
    98b8:	ldp	x19, x20, [sp, #16]
    98bc:	b	9790 <PySequence_Fast@plt+0x5080>
    98c0:	mov	x19, x25
    98c4:	ldp	x27, x28, [sp, #80]
    98c8:	b	9740 <PySequence_Fast@plt+0x5030>
    98cc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    98d0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    98d4:	mov	x21, #0x0                   	// #0
    98d8:	add	x1, x1, #0x6e8
    98dc:	ldr	x0, [x0, #3984]
    98e0:	mov	x23, #0x0                   	// #0
    98e4:	mov	x24, #0x0                   	// #0
    98e8:	ldr	x0, [x0]
    98ec:	bl	41d0 <PyErr_SetString@plt>
    98f0:	b	9790 <PySequence_Fast@plt+0x5080>
    98f4:	nop
    98f8:	stp	x29, x30, [sp, #-80]!
    98fc:	mov	x29, sp
    9900:	add	x4, sp, #0x24
    9904:	add	x3, sp, #0x30
    9908:	add	x2, sp, #0x28
    990c:	str	x19, [sp, #16]
    9910:	mov	x19, x0
    9914:	mov	x0, x1
    9918:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    991c:	add	x1, x1, #0x768
    9920:	str	wzr, [sp, #36]
    9924:	stp	xzr, xzr, [sp, #48]
    9928:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    992c:	cbz	w0, 99a0 <PySequence_Fast@plt+0x5290>
    9930:	ldr	x1, [sp, #40]
    9934:	tbnz	x1, #63, 99cc <PySequence_Fast@plt+0x52bc>
    9938:	mov	x0, #0x0                   	// #0
    993c:	bl	4120 <PyBytes_FromStringAndSize@plt>
    9940:	str	x0, [sp, #56]
    9944:	cbz	x0, 99a0 <PySequence_Fast@plt+0x5290>
    9948:	ldp	x8, x4, [sp, #40]
    994c:	add	x7, x0, #0x20
    9950:	ldr	w3, [sp, #36]
    9954:	mov	x0, x19
    9958:	add	x1, sp, #0x40
    995c:	add	x6, sp, #0x38
    9960:	adrp	x5, 5000 <PySequence_Fast@plt+0x8f0>
    9964:	mov	w2, #0x1                   	// #1
    9968:	add	x5, x5, #0xc8
    996c:	stp	x7, x8, [sp, #64]
    9970:	bl	9018 <PySequence_Fast@plt+0x4908>
    9974:	ldr	x1, [sp, #56]
    9978:	mov	x19, x0
    997c:	cbz	x1, 9990 <PySequence_Fast@plt+0x5280>
    9980:	ldr	x0, [x1]
    9984:	sub	x0, x0, #0x1
    9988:	str	x0, [x1]
    998c:	cbz	x0, 99b4 <PySequence_Fast@plt+0x52a4>
    9990:	mov	x0, x19
    9994:	ldr	x19, [sp, #16]
    9998:	ldp	x29, x30, [sp], #80
    999c:	ret
    99a0:	mov	x19, #0x0                   	// #0
    99a4:	mov	x0, x19
    99a8:	ldr	x19, [sp, #16]
    99ac:	ldp	x29, x30, [sp], #80
    99b0:	ret
    99b4:	mov	x0, x1
    99b8:	bl	4180 <_Py_Dealloc@plt>
    99bc:	mov	x0, x19
    99c0:	ldr	x19, [sp, #16]
    99c4:	ldp	x29, x30, [sp], #80
    99c8:	ret
    99cc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    99d0:	mov	x19, #0x0                   	// #0
    99d4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    99d8:	add	x1, x1, #0x778
    99dc:	ldr	x0, [x0, #3960]
    99e0:	ldr	x0, [x0]
    99e4:	bl	41d0 <PyErr_SetString@plt>
    99e8:	mov	x0, x19
    99ec:	ldr	x19, [sp, #16]
    99f0:	ldp	x29, x30, [sp], #80
    99f4:	ret
    99f8:	sub	sp, sp, #0x4b0
    99fc:	mov	x0, x1
    9a00:	add	x3, sp, #0x30
    9a04:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9a08:	add	x2, sp, #0x40
    9a0c:	add	x1, x1, #0x7a0
    9a10:	stp	x29, x30, [sp]
    9a14:	mov	x29, sp
    9a18:	stp	x19, x20, [sp, #16]
    9a1c:	str	wzr, [sp, #48]
    9a20:	stp	wzr, wzr, [sp, #56]
    9a24:	str	xzr, [sp, #64]
    9a28:	str	xzr, [sp, #80]
    9a2c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    9a30:	cbz	w0, 9ba0 <PySequence_Fast@plt+0x5490>
    9a34:	ldr	x0, [sp, #64]
    9a38:	ldr	x1, [x0, #8]
    9a3c:	ldr	x1, [x1, #168]
    9a40:	tbz	w1, #26, 9c14 <PySequence_Fast@plt+0x5504>
    9a44:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9a48:	add	x5, sp, #0x3c
    9a4c:	add	x1, x1, #0x7e0
    9a50:	add	x4, sp, #0x38
    9a54:	add	x3, sp, #0x34
    9a58:	add	x2, sp, #0x48
    9a5c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    9a60:	cbz	w0, 9ba0 <PySequence_Fast@plt+0x5490>
    9a64:	ldr	w1, [sp, #56]
    9a68:	mov	w0, #0xfffff               	// #1048575
    9a6c:	cmp	w1, w0
    9a70:	b.hi	9bf4 <PySequence_Fast@plt+0x54e4>  // b.pmore
    9a74:	ldr	x2, [sp, #64]
    9a78:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    9a7c:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    9a80:	add	x1, x1, #0xd50
    9a84:	add	x0, x0, #0x840
    9a88:	bl	44a0 <PySys_Audit@plt>
    9a8c:	tbnz	w0, #31, 9ba0 <PySequence_Fast@plt+0x5490>
    9a90:	ldr	w3, [sp, #52]
    9a94:	mov	x1, #0x20                  	// #32
    9a98:	stp	x21, x22, [sp, #32]
    9a9c:	add	x21, sp, #0x58
    9aa0:	mov	x0, x21
    9aa4:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    9aa8:	add	x2, x2, #0x858
    9aac:	bl	4280 <PyOS_snprintf@plt>
    9ab0:	stp	xzr, xzr, [sp, #120]
    9ab4:	mov	w1, #0x4                   	// #4
    9ab8:	mov	w0, #0x2                   	// #2
    9abc:	str	w1, [sp, #120]
    9ac0:	str	w0, [sp, #128]
    9ac4:	add	x19, sp, #0x78
    9ac8:	stp	xzr, xzr, [sp, #136]
    9acc:	stp	xzr, xzr, [sp, #152]
    9ad0:	bl	4570 <PyEval_SaveThread@plt>
    9ad4:	mov	x20, x0
    9ad8:	ldr	x0, [sp, #72]
    9adc:	mov	x2, x19
    9ae0:	mov	x1, x21
    9ae4:	add	x3, sp, #0x50
    9ae8:	bl	4560 <getaddrinfo@plt>
    9aec:	mov	w19, w0
    9af0:	mov	x0, x20
    9af4:	bl	40c0 <PyEval_RestoreThread@plt>
    9af8:	cbnz	w19, 9c44 <PySequence_Fast@plt+0x5534>
    9afc:	ldr	x1, [sp, #80]
    9b00:	ldr	x19, [x1, #40]
    9b04:	cbnz	x19, 9bb8 <PySequence_Fast@plt+0x54a8>
    9b08:	ldr	w0, [x1, #4]
    9b0c:	cmp	w0, #0x2
    9b10:	b.eq	9c78 <PySequence_Fast@plt+0x5568>  // b.none
    9b14:	cmp	w0, #0xa
    9b18:	ldr	x0, [x1, #24]
    9b1c:	b.ne	9b30 <PySequence_Fast@plt+0x5420>  // b.any
    9b20:	ldp	w2, w3, [sp, #56]
    9b24:	str	w3, [x0, #24]
    9b28:	rev	w2, w2
    9b2c:	str	w2, [x0, #4]
    9b30:	ldr	w1, [x1, #16]
    9b34:	add	x22, sp, #0xa8
    9b38:	ldr	w6, [sp, #48]
    9b3c:	mov	x2, x22
    9b40:	mov	x4, x21
    9b44:	mov	w5, #0x20                  	// #32
    9b48:	mov	w3, #0x401                 	// #1025
    9b4c:	bl	40a0 <getnameinfo@plt>
    9b50:	mov	w20, w0
    9b54:	cbnz	w0, 9c90 <PySequence_Fast@plt+0x5580>
    9b58:	mov	x0, x22
    9b5c:	bl	4550 <PyUnicode_FromString@plt>
    9b60:	mov	x1, x0
    9b64:	cbz	x0, 9c70 <PySequence_Fast@plt+0x5560>
    9b68:	mov	x2, x21
    9b6c:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    9b70:	add	x0, x0, #0x8a8
    9b74:	bl	4640 <_Py_BuildValue_SizeT@plt>
    9b78:	mov	x19, x0
    9b7c:	ldr	x0, [sp, #80]
    9b80:	cbz	x0, 9bdc <PySequence_Fast@plt+0x54cc>
    9b84:	bl	4010 <freeaddrinfo@plt>
    9b88:	mov	x0, x19
    9b8c:	ldp	x29, x30, [sp]
    9b90:	ldp	x19, x20, [sp, #16]
    9b94:	ldp	x21, x22, [sp, #32]
    9b98:	add	sp, sp, #0x4b0
    9b9c:	ret
    9ba0:	mov	x19, #0x0                   	// #0
    9ba4:	mov	x0, x19
    9ba8:	ldp	x29, x30, [sp]
    9bac:	ldp	x19, x20, [sp, #16]
    9bb0:	add	sp, sp, #0x4b0
    9bb4:	ret
    9bb8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9bbc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9bc0:	add	x1, x1, #0x860
    9bc4:	mov	x19, #0x0                   	// #0
    9bc8:	ldr	x0, [x0, #3984]
    9bcc:	ldr	x0, [x0]
    9bd0:	bl	41d0 <PyErr_SetString@plt>
    9bd4:	ldr	x0, [sp, #80]
    9bd8:	cbnz	x0, 9b84 <PySequence_Fast@plt+0x5474>
    9bdc:	mov	x0, x19
    9be0:	ldp	x29, x30, [sp]
    9be4:	ldp	x19, x20, [sp, #16]
    9be8:	ldp	x21, x22, [sp, #32]
    9bec:	add	sp, sp, #0x4b0
    9bf0:	ret
    9bf4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9bf8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9bfc:	mov	x19, #0x0                   	// #0
    9c00:	add	x1, x1, #0x810
    9c04:	ldr	x0, [x0, #4008]
    9c08:	ldr	x0, [x0]
    9c0c:	bl	41d0 <PyErr_SetString@plt>
    9c10:	b	9ba4 <PySequence_Fast@plt+0x5494>
    9c14:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9c18:	mov	x19, #0x0                   	// #0
    9c1c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9c20:	add	x1, x1, #0x7b0
    9c24:	ldr	x0, [x0, #3976]
    9c28:	ldr	x0, [x0]
    9c2c:	bl	41d0 <PyErr_SetString@plt>
    9c30:	mov	x0, x19
    9c34:	ldp	x29, x30, [sp]
    9c38:	ldp	x19, x20, [sp, #16]
    9c3c:	add	sp, sp, #0x4b0
    9c40:	ret
    9c44:	cmn	w19, #0xb
    9c48:	b.eq	9d44 <PySequence_Fast@plt+0x5634>  // b.none
    9c4c:	mov	w0, w19
    9c50:	bl	3fc0 <gai_strerror@plt>
    9c54:	mov	w1, w19
    9c58:	mov	x2, x0
    9c5c:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    9c60:	add	x0, x0, #0x3c0
    9c64:	bl	4640 <_Py_BuildValue_SizeT@plt>
    9c68:	mov	x19, x0
    9c6c:	cbnz	x0, 9ce4 <PySequence_Fast@plt+0x55d4>
    9c70:	mov	x19, #0x0                   	// #0
    9c74:	b	9b7c <PySequence_Fast@plt+0x546c>
    9c78:	ldr	x0, [sp, #64]
    9c7c:	ldr	x0, [x0, #16]
    9c80:	cmp	x0, #0x2
    9c84:	b.ne	9d14 <PySequence_Fast@plt+0x5604>  // b.any
    9c88:	ldr	x0, [x1, #24]
    9c8c:	b	9b30 <PySequence_Fast@plt+0x5420>
    9c90:	cmn	w0, #0xb
    9c94:	b.eq	9d30 <PySequence_Fast@plt+0x5620>  // b.none
    9c98:	bl	3fc0 <gai_strerror@plt>
    9c9c:	mov	x2, x0
    9ca0:	mov	w1, w20
    9ca4:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    9ca8:	add	x0, x0, #0x3c0
    9cac:	bl	4640 <_Py_BuildValue_SizeT@plt>
    9cb0:	mov	x20, x0
    9cb4:	cbz	x0, 9c70 <PySequence_Fast@plt+0x5560>
    9cb8:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    9cbc:	mov	x1, x20
    9cc0:	ldr	x0, [x0, #3880]
    9cc4:	bl	41a0 <PyErr_SetObject@plt>
    9cc8:	ldr	x0, [x20]
    9ccc:	sub	x0, x0, #0x1
    9cd0:	str	x0, [x20]
    9cd4:	cbnz	x0, 9c70 <PySequence_Fast@plt+0x5560>
    9cd8:	mov	x0, x20
    9cdc:	bl	4180 <_Py_Dealloc@plt>
    9ce0:	b	9b7c <PySequence_Fast@plt+0x546c>
    9ce4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    9ce8:	mov	x1, x19
    9cec:	ldr	x0, [x0, #3880]
    9cf0:	bl	41a0 <PyErr_SetObject@plt>
    9cf4:	ldr	x0, [x19]
    9cf8:	sub	x0, x0, #0x1
    9cfc:	str	x0, [x19]
    9d00:	cbnz	x0, 9c70 <PySequence_Fast@plt+0x5560>
    9d04:	mov	x0, x19
    9d08:	mov	x19, #0x0                   	// #0
    9d0c:	bl	4180 <_Py_Dealloc@plt>
    9d10:	b	9b7c <PySequence_Fast@plt+0x546c>
    9d14:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9d18:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    9d1c:	add	x1, x1, #0x888
    9d20:	ldr	x0, [x0, #3984]
    9d24:	ldr	x0, [x0]
    9d28:	bl	41d0 <PyErr_SetString@plt>
    9d2c:	b	9b7c <PySequence_Fast@plt+0x546c>
    9d30:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9d34:	ldr	x0, [x0, #3984]
    9d38:	ldr	x0, [x0]
    9d3c:	bl	40e0 <PyErr_SetFromErrno@plt>
    9d40:	b	9b7c <PySequence_Fast@plt+0x546c>
    9d44:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    9d48:	mov	x19, #0x0                   	// #0
    9d4c:	ldr	x0, [x0, #3984]
    9d50:	ldr	x0, [x0]
    9d54:	bl	40e0 <PyErr_SetFromErrno@plt>
    9d58:	b	9b7c <PySequence_Fast@plt+0x546c>
    9d5c:	nop
    9d60:	sub	sp, sp, #0x150
    9d64:	stp	x29, x30, [sp, #32]
    9d68:	add	x29, sp, #0x20
    9d6c:	stp	x19, x20, [sp, #48]
    9d70:	mov	x19, x0
    9d74:	mov	x0, x1
    9d78:	mov	x1, x2
    9d7c:	stp	x21, x22, [sp, #64]
    9d80:	ldr	w2, [x19, #20]
    9d84:	str	wzr, [sp, #148]
    9d88:	stp	xzr, xzr, [sp, #152]
    9d8c:	cmp	w2, #0x26
    9d90:	stp	xzr, xzr, [sp, #168]
    9d94:	str	xzr, [sp, #184]
    9d98:	stp	xzr, xzr, [sp, #256]
    9d9c:	stp	xzr, xzr, [sp, #272]
    9da0:	stp	xzr, xzr, [sp, #288]
    9da4:	stp	xzr, xzr, [sp, #304]
    9da8:	stp	xzr, xzr, [sp, #320]
    9dac:	b.ne	a088 <PySequence_Fast@plt+0x5978>  // b.any
    9db0:	adrp	x5, 27000 <PyInit__socket@@Base+0x19e80>
    9db4:	add	x2, sp, #0x94
    9db8:	add	x3, sp, #0xb8
    9dbc:	str	x2, [sp, #16]
    9dc0:	ldr	x5, [x5, #4040]
    9dc4:	stp	x5, x3, [sp]
    9dc8:	add	x21, sp, #0x100
    9dcc:	adrp	x3, 28000 <PyInit__socket@@Base+0x1ae80>
    9dd0:	add	x3, x3, #0x580
    9dd4:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    9dd8:	mov	x7, x21
    9ddc:	add	x6, sp, #0xb0
    9de0:	add	x4, sp, #0xa8
    9de4:	add	x3, x3, #0xb0
    9de8:	add	x2, x2, #0x8d8
    9dec:	mov	x22, #0x0                   	// #0
    9df0:	bl	4440 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    9df4:	cbz	w0, a0a4 <PySequence_Fast@plt+0x5994>
    9df8:	ldr	x0, [sp, #176]
    9dfc:	stp	xzr, xzr, [sp, #200]
    9e00:	stp	xzr, xzr, [sp, #216]
    9e04:	stp	xzr, xzr, [sp, #232]
    9e08:	str	xzr, [sp, #248]
    9e0c:	cbz	x0, a184 <PySequence_Fast@plt+0x5a74>
    9e10:	stp	x23, x24, [sp, #80]
    9e14:	bl	4670 <_PyLong_AsInt@plt>
    9e18:	mov	w24, w0
    9e1c:	tbnz	w0, #31, a180 <PySequence_Fast@plt+0x5a70>
    9e20:	ldr	x0, [sp, #184]
    9e24:	cbz	x0, a0bc <PySequence_Fast@plt+0x59ac>
    9e28:	bl	4670 <_PyLong_AsInt@plt>
    9e2c:	mov	w23, w0
    9e30:	cmn	w0, #0x1
    9e34:	b.eq	a23c <PySequence_Fast@plt+0x5b2c>  // b.none
    9e38:	tbnz	w0, #31, a2b0 <PySequence_Fast@plt+0x5ba0>
    9e3c:	ldr	x0, [sp, #256]
    9e40:	mov	x22, #0x30                  	// #48
    9e44:	cbz	x0, 9e58 <PySequence_Fast@plt+0x5748>
    9e48:	ldr	x22, [sp, #272]
    9e4c:	add	x22, x22, #0xb
    9e50:	and	x22, x22, #0xfffffffffffffff8
    9e54:	add	x22, x22, #0x40
    9e58:	mov	x0, x22
    9e5c:	bl	4690 <PyMem_Malloc@plt>
    9e60:	mov	x20, x0
    9e64:	cbz	x0, a220 <PySequence_Fast@plt+0x5b10>
    9e68:	mov	x2, x22
    9e6c:	mov	w1, #0x0                   	// #0
    9e70:	stp	x25, x26, [sp, #96]
    9e74:	bl	4270 <memset@plt>
    9e78:	ldr	x0, [sp, #168]
    9e7c:	stp	x20, x22, [sp, #232]
    9e80:	cbz	x0, a0dc <PySequence_Fast@plt+0x59cc>
    9e84:	add	x2, sp, #0xe0
    9e88:	add	x1, sp, #0xd8
    9e8c:	add	x4, sp, #0x98
    9e90:	add	x3, sp, #0xa0
    9e94:	mov	x22, #0x0                   	// #0
    9e98:	bl	6020 <PySequence_Fast@plt+0x1910>
    9e9c:	cmn	w0, #0x1
    9ea0:	b.eq	a278 <PySequence_Fast@plt+0x5b68>  // b.none
    9ea4:	ldr	x22, [sp, #240]
    9ea8:	cmp	x22, #0xf
    9eac:	b.ls	a0e8 <PySequence_Fast@plt+0x59d8>  // b.plast
    9eb0:	ldr	x25, [sp, #232]
    9eb4:	cbz	x25, a0e8 <PySequence_Fast@plt+0x59d8>
    9eb8:	adrp	x0, 11000 <PyInit__socket@@Base+0x3e80>
    9ebc:	str	w24, [x25, #16]
    9ec0:	ldr	x1, [sp, #256]
    9ec4:	ldr	d0, [x0, #2808]
    9ec8:	mov	x0, #0x14                  	// #20
    9ecc:	str	x0, [x25]
    9ed0:	str	d0, [x25, #8]
    9ed4:	cbz	x1, a1dc <PySequence_Fast@plt+0x5acc>
    9ed8:	add	x22, x25, x22
    9edc:	add	x0, x25, #0x28
    9ee0:	cmp	x22, x0
    9ee4:	add	x26, x25, #0x18
    9ee8:	b.cc	a264 <PySequence_Fast@plt+0x5b54>  // b.lo, b.ul, b.last
    9eec:	ldr	x0, [x25, #24]
    9ef0:	add	x0, x0, #0x7
    9ef4:	and	x0, x0, #0xfffffffffffffff8
    9ef8:	add	x0, x26, x0
    9efc:	cmp	x22, x0
    9f00:	b.cc	a264 <PySequence_Fast@plt+0x5b54>  // b.lo, b.ul, b.last
    9f04:	adrp	x0, 11000 <PyInit__socket@@Base+0x3e80>
    9f08:	ldr	x2, [sp, #272]
    9f0c:	ldr	d0, [x0, #2816]
    9f10:	add	x0, x25, #0x2c
    9f14:	add	x24, x2, #0xb
    9f18:	and	x24, x24, #0xfffffffffffffff8
    9f1c:	str	d0, [x25, #32]
    9f20:	add	x24, x24, #0x10
    9f24:	str	x24, [x26]
    9f28:	str	w2, [x25, #40]
    9f2c:	bl	3fa0 <memcpy@plt>
    9f30:	cmn	w23, #0x1
    9f34:	b.eq	a1ec <PySequence_Fast@plt+0x5adc>  // b.none
    9f38:	cmp	x24, #0xf
    9f3c:	b.ls	a250 <PySequence_Fast@plt+0x5b40>  // b.plast
    9f40:	ldr	x22, [sp, #240]
    9f44:	add	x0, x24, #0x7
    9f48:	and	x0, x0, #0xfffffffffffffff8
    9f4c:	add	x22, x25, x22
    9f50:	add	x1, x26, x0
    9f54:	add	x2, x1, #0x10
    9f58:	cmp	x22, x2
    9f5c:	b.cc	a250 <PySequence_Fast@plt+0x5b40>  // b.lo, b.ul, b.last
    9f60:	ldr	x0, [x26, x0]
    9f64:	add	x0, x0, #0x7
    9f68:	and	x0, x0, #0xfffffffffffffff8
    9f6c:	add	x0, x1, x0
    9f70:	cmp	x22, x0
    9f74:	b.cc	a250 <PySequence_Fast@plt+0x5b40>  // b.lo, b.ul, b.last
    9f78:	adrp	x0, 11000 <PyInit__socket@@Base+0x3e80>
    9f7c:	stp	x27, x28, [sp, #112]
    9f80:	ldr	d0, [x0, #2824]
    9f84:	mov	x0, #0x14                  	// #20
    9f88:	str	x0, [x1]
    9f8c:	str	w23, [x1, #16]
    9f90:	str	d0, [x1, #8]
    9f94:	ldr	w23, [sp, #148]
    9f98:	add	x28, sp, #0xc0
    9f9c:	ldr	x25, [x19, #40]
    9fa0:	add	x22, sp, #0xc8
    9fa4:	mov	x24, #0x0                   	// #0
    9fa8:	str	wzr, [sp, #140]
    9fac:	cmp	x25, #0x0
    9fb0:	b.le	a044 <PySequence_Fast@plt+0x5934>
    9fb4:	ldr	w0, [sp, #140]
    9fb8:	cbnz	w0, a1a8 <PySequence_Fast@plt+0x5a98>
    9fbc:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    9fc0:	add	x24, x25, x0
    9fc4:	mov	x0, x25
    9fc8:	ldr	w2, [x19, #16]
    9fcc:	cmn	w2, #0x1
    9fd0:	b.eq	a020 <PySequence_Fast@plt+0x5910>  // b.none
    9fd4:	str	w2, [sp, #192]
    9fd8:	mov	w2, #0x4                   	// #4
    9fdc:	mov	w1, #0x1                   	// #1
    9fe0:	strh	w2, [sp, #196]
    9fe4:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    9fe8:	mov	x26, x0
    9fec:	bl	4570 <PyEval_SaveThread@plt>
    9ff0:	mov	x27, x0
    9ff4:	cmp	x26, #0x0
    9ff8:	mov	x1, #0x1                   	// #1
    9ffc:	csinv	x2, x26, xzr, ge  // ge = tcont
    a000:	mov	x0, x28
    a004:	bl	4200 <poll@plt>
    a008:	mov	w26, w0
    a00c:	mov	x0, x27
    a010:	bl	40c0 <PyEval_RestoreThread@plt>
    a014:	cmp	w26, #0x0
    a018:	b.lt	a1f4 <PySequence_Fast@plt+0x5ae4>  // b.tstop
    a01c:	b.eq	a1b4 <PySequence_Fast@plt+0x5aa4>  // b.none
    a020:	mov	w0, #0x1                   	// #1
    a024:	str	w0, [sp, #140]
    a028:	b	a044 <PySequence_Fast@plt+0x5934>
    a02c:	bl	4660 <__errno_location@plt>
    a030:	ldr	w0, [x0]
    a034:	cmp	w0, #0x4
    a038:	b.ne	a284 <PySequence_Fast@plt+0x5b74>  // b.any
    a03c:	bl	45e0 <PyErr_CheckSignals@plt>
    a040:	cbnz	w0, a20c <PySequence_Fast@plt+0x5afc>
    a044:	bl	4570 <PyEval_SaveThread@plt>
    a048:	mov	x26, x0
    a04c:	ldr	w0, [x19, #16]
    a050:	mov	w2, w23
    a054:	mov	x1, x22
    a058:	bl	42c0 <sendmsg@plt>
    a05c:	mov	x27, x0
    a060:	mov	x0, x26
    a064:	bl	40c0 <PyEval_RestoreThread@plt>
    a068:	tbnz	x27, #63, a02c <PySequence_Fast@plt+0x591c>
    a06c:	mov	x0, x27
    a070:	bl	42e0 <PyLong_FromSsize_t@plt>
    a074:	mov	x22, x0
    a078:	ldp	x23, x24, [sp, #80]
    a07c:	ldp	x25, x26, [sp, #96]
    a080:	ldp	x27, x28, [sp, #112]
    a084:	b	a10c <PySequence_Fast@plt+0x59fc>
    a088:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a08c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a090:	mov	x22, #0x0                   	// #0
    a094:	add	x1, x1, #0x8b0
    a098:	ldr	x0, [x0, #3984]
    a09c:	ldr	x0, [x0]
    a0a0:	bl	41d0 <PyErr_SetString@plt>
    a0a4:	mov	x0, x22
    a0a8:	ldp	x29, x30, [sp, #32]
    a0ac:	ldp	x19, x20, [sp, #48]
    a0b0:	ldp	x21, x22, [sp, #64]
    a0b4:	add	sp, sp, #0x150
    a0b8:	ret
    a0bc:	ldr	x0, [sp, #256]
    a0c0:	cbz	x0, a230 <PySequence_Fast@plt+0x5b20>
    a0c4:	ldr	x22, [sp, #272]
    a0c8:	mov	w23, #0xffffffff            	// #-1
    a0cc:	add	x22, x22, #0xb
    a0d0:	and	x22, x22, #0xfffffffffffffff8
    a0d4:	add	x22, x22, #0x28
    a0d8:	b	9e58 <PySequence_Fast@plt+0x5748>
    a0dc:	cmp	x22, #0xf
    a0e0:	mov	x25, x20
    a0e4:	b.hi	9eb8 <PySequence_Fast@plt+0x57a8>  // b.pmore
    a0e8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a0ec:	add	x1, x1, #0x940
    a0f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a0f4:	mov	x22, #0x0                   	// #0
    a0f8:	ldr	x0, [x0, #3944]
    a0fc:	ldr	x0, [x0]
    a100:	bl	41d0 <PyErr_SetString@plt>
    a104:	ldp	x23, x24, [sp, #80]
    a108:	ldp	x25, x26, [sp, #96]
    a10c:	mov	x0, x20
    a110:	bl	40d0 <PyMem_Free@plt>
    a114:	ldr	x0, [sp, #256]
    a118:	cbz	x0, a124 <PySequence_Fast@plt+0x5a14>
    a11c:	mov	x0, x21
    a120:	bl	4100 <PyBuffer_Release@plt>
    a124:	ldr	x0, [sp, #216]
    a128:	mov	x20, #0x0                   	// #0
    a12c:	mov	x19, #0x0                   	// #0
    a130:	bl	40d0 <PyMem_Free@plt>
    a134:	ldr	x0, [sp, #152]
    a138:	cmp	x0, #0x0
    a13c:	b.le	a160 <PySequence_Fast@plt+0x5a50>
    a140:	ldr	x0, [sp, #160]
    a144:	add	x19, x19, #0x1
    a148:	add	x0, x0, x20
    a14c:	bl	4100 <PyBuffer_Release@plt>
    a150:	ldr	x1, [sp, #152]
    a154:	add	x20, x20, #0x50
    a158:	cmp	x1, x19
    a15c:	b.gt	a140 <PySequence_Fast@plt+0x5a30>
    a160:	ldr	x0, [sp, #160]
    a164:	bl	40d0 <PyMem_Free@plt>
    a168:	mov	x0, x22
    a16c:	ldp	x29, x30, [sp, #32]
    a170:	ldp	x19, x20, [sp, #48]
    a174:	ldp	x21, x22, [sp, #64]
    a178:	add	sp, sp, #0x150
    a17c:	ret
    a180:	ldp	x23, x24, [sp, #80]
    a184:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a188:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a18c:	mov	x20, #0x0                   	// #0
    a190:	ldr	x0, [x0, #3976]
    a194:	add	x1, x1, #0x8f8
    a198:	mov	x22, #0x0                   	// #0
    a19c:	ldr	x0, [x0]
    a1a0:	bl	41d0 <PyErr_SetString@plt>
    a1a4:	b	a10c <PySequence_Fast@plt+0x59fc>
    a1a8:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    a1ac:	subs	x0, x24, x0
    a1b0:	b.pl	9fc8 <PySequence_Fast@plt+0x58b8>  // b.nfrst
    a1b4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    a1b8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a1bc:	mov	x22, #0x0                   	// #0
    a1c0:	add	x1, x1, #0x410
    a1c4:	ldr	x0, [x0, #3872]
    a1c8:	bl	41d0 <PyErr_SetString@plt>
    a1cc:	ldp	x23, x24, [sp, #80]
    a1d0:	ldp	x25, x26, [sp, #96]
    a1d4:	ldp	x27, x28, [sp, #112]
    a1d8:	b	a10c <PySequence_Fast@plt+0x59fc>
    a1dc:	mov	x24, x0
    a1e0:	cmn	w23, #0x1
    a1e4:	mov	x26, x25
    a1e8:	b.ne	9f44 <PySequence_Fast@plt+0x5834>  // b.any
    a1ec:	stp	x27, x28, [sp, #112]
    a1f0:	b	9f94 <PySequence_Fast@plt+0x5884>
    a1f4:	bl	4660 <__errno_location@plt>
    a1f8:	ldr	w0, [x0]
    a1fc:	cmp	w0, #0x4
    a200:	b.ne	a294 <PySequence_Fast@plt+0x5b84>  // b.any
    a204:	bl	45e0 <PyErr_CheckSignals@plt>
    a208:	cbz	w0, a1a8 <PySequence_Fast@plt+0x5a98>
    a20c:	mov	x22, #0x0                   	// #0
    a210:	ldp	x23, x24, [sp, #80]
    a214:	ldp	x25, x26, [sp, #96]
    a218:	ldp	x27, x28, [sp, #112]
    a21c:	b	a10c <PySequence_Fast@plt+0x59fc>
    a220:	bl	4190 <PyErr_NoMemory@plt>
    a224:	mov	x22, #0x0                   	// #0
    a228:	ldp	x23, x24, [sp, #80]
    a22c:	b	a10c <PySequence_Fast@plt+0x59fc>
    a230:	mov	x22, #0x18                  	// #24
    a234:	mov	w23, #0xffffffff            	// #-1
    a238:	b	9e58 <PySequence_Fast@plt+0x5748>
    a23c:	mov	x20, #0x0                   	// #0
    a240:	bl	43c0 <PyErr_Occurred@plt>
    a244:	cbz	x0, a2b0 <PySequence_Fast@plt+0x5ba0>
    a248:	ldp	x23, x24, [sp, #80]
    a24c:	b	a10c <PySequence_Fast@plt+0x59fc>
    a250:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a254:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a258:	add	x1, x1, #0x9a0
    a25c:	mov	x22, #0x0                   	// #0
    a260:	b	a0f8 <PySequence_Fast@plt+0x59e8>
    a264:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a268:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a26c:	add	x1, x1, #0x970
    a270:	mov	x22, #0x0                   	// #0
    a274:	b	a0f8 <PySequence_Fast@plt+0x59e8>
    a278:	ldp	x23, x24, [sp, #80]
    a27c:	ldp	x25, x26, [sp, #96]
    a280:	b	a10c <PySequence_Fast@plt+0x59fc>
    a284:	ldr	x1, [x19, #40]
    a288:	cmp	x1, #0x0
    a28c:	ccmp	w0, #0xb, #0x0, gt
    a290:	b.eq	9fac <PySequence_Fast@plt+0x589c>  // b.none
    a294:	ldr	x0, [x19, #32]
    a298:	mov	x22, #0x0                   	// #0
    a29c:	blr	x0
    a2a0:	ldp	x23, x24, [sp, #80]
    a2a4:	ldp	x25, x26, [sp, #96]
    a2a8:	ldp	x27, x28, [sp, #112]
    a2ac:	b	a10c <PySequence_Fast@plt+0x59fc>
    a2b0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a2b4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a2b8:	mov	x20, #0x0                   	// #0
    a2bc:	add	x1, x1, #0x920
    a2c0:	ldr	x0, [x0, #3976]
    a2c4:	mov	x22, #0x0                   	// #0
    a2c8:	ldr	x0, [x0]
    a2cc:	bl	41d0 <PyErr_SetString@plt>
    a2d0:	ldp	x23, x24, [sp, #80]
    a2d4:	b	a10c <PySequence_Fast@plt+0x59fc>
    a2d8:	stp	x29, x30, [sp, #-128]!
    a2dc:	mov	x29, sp
    a2e0:	stp	x19, x20, [sp, #16]
    a2e4:	mov	x19, x1
    a2e8:	stp	x21, x22, [sp, #32]
    a2ec:	mov	x22, x2
    a2f0:	mov	w21, w3
    a2f4:	stp	xzr, xzr, [x1]
    a2f8:	ldrb	w1, [x0]
    a2fc:	cbz	w1, a430 <PySequence_Fast@plt+0x5d20>
    a300:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a304:	mov	x20, x0
    a308:	add	x1, x1, #0x9f8
    a30c:	stp	x23, x24, [sp, #48]
    a310:	and	w23, w3, #0xfffffffd
    a314:	bl	43f0 <strcmp@plt>
    a318:	cbnz	w0, a350 <PySequence_Fast@plt+0x5c40>
    a31c:	cbnz	w23, a55c <PySequence_Fast@plt+0x5e4c>
    a320:	stp	xzr, xzr, [x19]
    a324:	mov	w1, #0x2                   	// #2
    a328:	mov	w0, #0xffffffff            	// #-1
    a32c:	mov	w20, #0x4                   	// #4
    a330:	strh	w1, [x19]
    a334:	ldp	x23, x24, [sp, #48]
    a338:	str	w0, [x19, #4]
    a33c:	mov	w0, w20
    a340:	ldp	x19, x20, [sp, #16]
    a344:	ldp	x21, x22, [sp, #32]
    a348:	ldp	x29, x30, [sp], #128
    a34c:	ret
    a350:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a354:	mov	x0, x20
    a358:	add	x1, x1, #0xa08
    a35c:	bl	43f0 <strcmp@plt>
    a360:	cbz	w0, a31c <PySequence_Fast@plt+0x5c0c>
    a364:	cmp	w21, #0x0
    a368:	cset	w24, eq  // eq = none
    a36c:	cbz	w23, a530 <PySequence_Fast@plt+0x5e20>
    a370:	cmp	w24, #0x0
    a374:	ccmp	w21, #0xa, #0x4, eq  // eq = none
    a378:	b.ne	a38c <PySequence_Fast@plt+0x5c7c>  // b.any
    a37c:	mov	x0, x20
    a380:	mov	w1, #0x25                  	// #37
    a384:	bl	4490 <strchr@plt>
    a388:	cbz	x0, a580 <PySequence_Fast@plt+0x5e70>
    a38c:	stp	xzr, xzr, [sp, #80]
    a390:	add	x23, sp, #0x50
    a394:	str	w21, [sp, #84]
    a398:	stp	xzr, xzr, [sp, #96]
    a39c:	stp	xzr, xzr, [sp, #112]
    a3a0:	bl	4570 <PyEval_SaveThread@plt>
    a3a4:	mov	x2, x23
    a3a8:	add	x3, sp, #0x48
    a3ac:	mov	x1, #0x0                   	// #0
    a3b0:	mov	x21, x0
    a3b4:	mov	x0, x20
    a3b8:	bl	4560 <getaddrinfo@plt>
    a3bc:	mov	w20, w0
    a3c0:	mov	x0, x21
    a3c4:	bl	40c0 <PyEval_RestoreThread@plt>
    a3c8:	cbnz	w20, a644 <PySequence_Fast@plt+0x5f34>
    a3cc:	ldr	x21, [sp, #72]
    a3d0:	mov	x0, x19
    a3d4:	mov	w20, #0x4                   	// #4
    a3d8:	ldr	w2, [x21, #16]
    a3dc:	ldr	x1, [x21, #24]
    a3e0:	cmp	x2, x22
    a3e4:	csel	x2, x2, x22, ls  // ls = plast
    a3e8:	bl	3fa0 <memcpy@plt>
    a3ec:	mov	x0, x21
    a3f0:	bl	4010 <freeaddrinfo@plt>
    a3f4:	ldrh	w0, [x19]
    a3f8:	cmp	w0, #0x2
    a3fc:	b.eq	a510 <PySequence_Fast@plt+0x5e00>  // b.none
    a400:	cmp	w0, #0xa
    a404:	mov	w20, #0x10                  	// #16
    a408:	b.eq	a510 <PySequence_Fast@plt+0x5e00>  // b.none
    a40c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a410:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    a414:	mov	w20, #0xffffffff            	// #-1
    a418:	add	x1, x1, #0xc68
    a41c:	ldr	x0, [x0, #3984]
    a420:	ldr	x0, [x0]
    a424:	bl	41d0 <PyErr_SetString@plt>
    a428:	ldp	x23, x24, [sp, #48]
    a42c:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a430:	mov	w1, #0x2                   	// #2
    a434:	mov	w2, #0x1                   	// #1
    a438:	stp	xzr, xzr, [sp, #88]
    a43c:	add	x20, sp, #0x50
    a440:	stp	w2, w3, [sp, #80]
    a444:	str	w1, [sp, #88]
    a448:	stp	xzr, xzr, [sp, #104]
    a44c:	str	xzr, [sp, #120]
    a450:	bl	4570 <PyEval_SaveThread@plt>
    a454:	mov	x2, x20
    a458:	add	x3, sp, #0x48
    a45c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    a460:	add	x1, x1, #0x478
    a464:	mov	x21, x0
    a468:	mov	x0, #0x0                   	// #0
    a46c:	bl	4560 <getaddrinfo@plt>
    a470:	mov	w20, w0
    a474:	mov	x0, x21
    a478:	bl	40c0 <PyEval_RestoreThread@plt>
    a47c:	cbnz	w20, a5e0 <PySequence_Fast@plt+0x5ed0>
    a480:	ldr	x21, [sp, #72]
    a484:	ldr	w0, [x21, #4]
    a488:	cmp	w0, #0x2
    a48c:	b.eq	a528 <PySequence_Fast@plt+0x5e18>  // b.none
    a490:	cmp	w0, #0xa
    a494:	b.ne	a4d8 <PySequence_Fast@plt+0x5dc8>  // b.any
    a498:	mov	w20, #0x10                  	// #16
    a49c:	ldr	x0, [x21, #40]
    a4a0:	cbnz	x0, a5b8 <PySequence_Fast@plt+0x5ea8>
    a4a4:	ldr	w2, [x21, #16]
    a4a8:	mov	x0, x19
    a4ac:	ldr	x1, [x21, #24]
    a4b0:	cmp	x2, x22
    a4b4:	csel	x2, x2, x22, ls  // ls = plast
    a4b8:	bl	3fa0 <memcpy@plt>
    a4bc:	mov	x0, x21
    a4c0:	bl	4010 <freeaddrinfo@plt>
    a4c4:	mov	w0, w20
    a4c8:	ldp	x19, x20, [sp, #16]
    a4cc:	ldp	x21, x22, [sp, #32]
    a4d0:	ldp	x29, x30, [sp], #128
    a4d4:	ret
    a4d8:	mov	x0, x21
    a4dc:	bl	4010 <freeaddrinfo@plt>
    a4e0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a4e4:	mov	w20, #0xffffffff            	// #-1
    a4e8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a4ec:	add	x1, x1, #0x3c8
    a4f0:	ldr	x0, [x0, #3984]
    a4f4:	ldr	x0, [x0]
    a4f8:	bl	41d0 <PyErr_SetString@plt>
    a4fc:	mov	w0, w20
    a500:	ldp	x19, x20, [sp, #16]
    a504:	ldp	x21, x22, [sp, #32]
    a508:	ldp	x29, x30, [sp], #128
    a50c:	ret
    a510:	mov	w0, w20
    a514:	ldp	x19, x20, [sp, #16]
    a518:	ldp	x21, x22, [sp, #32]
    a51c:	ldp	x23, x24, [sp, #48]
    a520:	ldp	x29, x30, [sp], #128
    a524:	ret
    a528:	mov	w20, #0x4                   	// #4
    a52c:	b	a49c <PySequence_Fast@plt+0x5d8c>
    a530:	add	x2, x19, #0x4
    a534:	mov	x1, x20
    a538:	mov	w0, #0x2                   	// #2
    a53c:	bl	4420 <inet_pton@plt>
    a540:	cmp	w0, #0x0
    a544:	b.le	a370 <PySequence_Fast@plt+0x5c60>
    a548:	mov	w0, #0x2                   	// #2
    a54c:	mov	w20, #0x4                   	// #4
    a550:	strh	w0, [x19]
    a554:	ldp	x23, x24, [sp, #48]
    a558:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a55c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a560:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a564:	mov	w20, #0xffffffff            	// #-1
    a568:	add	x1, x1, #0xa18
    a56c:	ldr	x0, [x0, #3984]
    a570:	ldr	x0, [x0]
    a574:	bl	41d0 <PyErr_SetString@plt>
    a578:	ldp	x23, x24, [sp, #48]
    a57c:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a580:	stp	xzr, xzr, [x19]
    a584:	add	x2, x19, #0x8
    a588:	mov	x1, x20
    a58c:	str	xzr, [x19, #16]
    a590:	mov	w0, #0xa                   	// #10
    a594:	str	wzr, [x19, #24]
    a598:	bl	4420 <inet_pton@plt>
    a59c:	cmp	w0, #0x0
    a5a0:	b.le	a38c <PySequence_Fast@plt+0x5c7c>
    a5a4:	mov	w0, #0xa                   	// #10
    a5a8:	mov	w20, #0x10                  	// #16
    a5ac:	strh	w0, [x19]
    a5b0:	ldp	x23, x24, [sp, #48]
    a5b4:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a5b8:	mov	x0, x21
    a5bc:	bl	4010 <freeaddrinfo@plt>
    a5c0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a5c4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a5c8:	mov	w20, #0xffffffff            	// #-1
    a5cc:	add	x1, x1, #0x9d0
    a5d0:	ldr	x0, [x0, #3984]
    a5d4:	ldr	x0, [x0]
    a5d8:	bl	41d0 <PyErr_SetString@plt>
    a5dc:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a5e0:	cmn	w20, #0xb
    a5e4:	b.eq	a6b0 <PySequence_Fast@plt+0x5fa0>  // b.none
    a5e8:	mov	w0, w20
    a5ec:	bl	3fc0 <gai_strerror@plt>
    a5f0:	mov	w1, w20
    a5f4:	mov	x2, x0
    a5f8:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    a5fc:	add	x0, x0, #0x3c0
    a600:	bl	4640 <_Py_BuildValue_SizeT@plt>
    a604:	mov	x19, x0
    a608:	cbz	x0, a62c <PySequence_Fast@plt+0x5f1c>
    a60c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    a610:	mov	x1, x19
    a614:	ldr	x0, [x0, #3880]
    a618:	bl	41a0 <PyErr_SetObject@plt>
    a61c:	ldr	x0, [x19]
    a620:	sub	x0, x0, #0x1
    a624:	str	x0, [x19]
    a628:	cbz	x0, a634 <PySequence_Fast@plt+0x5f24>
    a62c:	mov	w20, #0xffffffff            	// #-1
    a630:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a634:	mov	x0, x19
    a638:	mov	w20, #0xffffffff            	// #-1
    a63c:	bl	4180 <_Py_Dealloc@plt>
    a640:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a644:	cmn	w20, #0xb
    a648:	b.eq	a6c8 <PySequence_Fast@plt+0x5fb8>  // b.none
    a64c:	mov	w0, w20
    a650:	bl	3fc0 <gai_strerror@plt>
    a654:	mov	w1, w20
    a658:	mov	x2, x0
    a65c:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    a660:	add	x0, x0, #0x3c0
    a664:	bl	4640 <_Py_BuildValue_SizeT@plt>
    a668:	mov	x19, x0
    a66c:	cbz	x0, a690 <PySequence_Fast@plt+0x5f80>
    a670:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    a674:	mov	x1, x19
    a678:	ldr	x0, [x0, #3880]
    a67c:	bl	41a0 <PyErr_SetObject@plt>
    a680:	ldr	x0, [x19]
    a684:	sub	x0, x0, #0x1
    a688:	str	x0, [x19]
    a68c:	cbz	x0, a69c <PySequence_Fast@plt+0x5f8c>
    a690:	mov	w20, #0xffffffff            	// #-1
    a694:	ldp	x23, x24, [sp, #48]
    a698:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a69c:	mov	x0, x19
    a6a0:	mov	w20, #0xffffffff            	// #-1
    a6a4:	bl	4180 <_Py_Dealloc@plt>
    a6a8:	ldp	x23, x24, [sp, #48]
    a6ac:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a6b0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a6b4:	mov	w20, #0xffffffff            	// #-1
    a6b8:	ldr	x0, [x0, #3984]
    a6bc:	ldr	x0, [x0]
    a6c0:	bl	40e0 <PyErr_SetFromErrno@plt>
    a6c4:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a6c8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a6cc:	mov	w20, #0xffffffff            	// #-1
    a6d0:	ldr	x0, [x0, #3984]
    a6d4:	ldr	x0, [x0]
    a6d8:	bl	40e0 <PyErr_SetFromErrno@plt>
    a6dc:	ldp	x23, x24, [sp, #48]
    a6e0:	b	a33c <PySequence_Fast@plt+0x5c2c>
    a6e4:	nop
    a6e8:	stp	x29, x30, [sp, #-96]!
    a6ec:	mov	x0, x1
    a6f0:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    a6f4:	mov	x29, sp
    a6f8:	add	x2, x2, #0x328
    a6fc:	add	x3, sp, #0x38
    a700:	stp	x19, x20, [sp, #16]
    a704:	mov	x19, x1
    a708:	mov	x20, #0x0                   	// #0
    a70c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a710:	add	x1, x1, #0xa38
    a714:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    a718:	cbz	w0, a790 <PySequence_Fast@plt+0x6080>
    a71c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a720:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    a724:	mov	x2, x19
    a728:	add	x1, x1, #0xa50
    a72c:	add	x0, x0, #0xa58
    a730:	bl	44a0 <PySys_Audit@plt>
    a734:	tbnz	w0, #31, a7a0 <PySequence_Fast@plt+0x6090>
    a738:	ldr	x0, [sp, #56]
    a73c:	add	x19, sp, #0x40
    a740:	mov	x1, x19
    a744:	mov	w3, #0x2                   	// #2
    a748:	mov	x2, #0x10                  	// #16
    a74c:	bl	a2d8 <PySequence_Fast@plt+0x5bc8>
    a750:	tbnz	w0, #31, a7a0 <PySequence_Fast@plt+0x6090>
    a754:	str	x21, [sp, #32]
    a758:	add	x21, sp, #0x50
    a75c:	add	x1, x19, #0x4
    a760:	mov	x2, x21
    a764:	mov	w3, #0x10                  	// #16
    a768:	mov	w0, #0x2                   	// #2
    a76c:	bl	46e0 <inet_ntop@plt>
    a770:	mov	x20, x0
    a774:	cbz	x0, a7a8 <PySequence_Fast@plt+0x6098>
    a778:	mov	x0, x21
    a77c:	bl	4550 <PyUnicode_FromString@plt>
    a780:	ldr	x21, [sp, #32]
    a784:	mov	x20, x0
    a788:	ldr	x0, [sp, #56]
    a78c:	bl	40d0 <PyMem_Free@plt>
    a790:	mov	x0, x20
    a794:	ldp	x19, x20, [sp, #16]
    a798:	ldp	x29, x30, [sp], #96
    a79c:	ret
    a7a0:	mov	x20, #0x0                   	// #0
    a7a4:	b	a788 <PySequence_Fast@plt+0x6078>
    a7a8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a7ac:	ldr	x0, [x0, #3984]
    a7b0:	ldr	x0, [x0]
    a7b4:	bl	40e0 <PyErr_SetFromErrno@plt>
    a7b8:	ldr	x21, [sp, #32]
    a7bc:	b	a788 <PySequence_Fast@plt+0x6078>
    a7c0:	mov	x12, #0x40f0                	// #16624
    a7c4:	sub	sp, sp, x12
    a7c8:	mov	x0, x1
    a7cc:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    a7d0:	add	x3, sp, #0x40
    a7d4:	add	x2, x2, #0x328
    a7d8:	stp	x29, x30, [sp]
    a7dc:	mov	x29, sp
    a7e0:	stp	x19, x20, [sp, #16]
    a7e4:	mov	x19, x1
    a7e8:	mov	x20, #0x0                   	// #0
    a7ec:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a7f0:	add	x1, x1, #0xa70
    a7f4:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    a7f8:	cbz	w0, a8a8 <PySequence_Fast@plt+0x6198>
    a7fc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a800:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    a804:	mov	x2, x19
    a808:	add	x1, x1, #0xa50
    a80c:	add	x0, x0, #0xa88
    a810:	bl	44a0 <PySys_Audit@plt>
    a814:	tbnz	w0, #31, a8c4 <PySequence_Fast@plt+0x61b4>
    a818:	ldr	x0, [sp, #64]
    a81c:	stp	x21, x22, [sp, #32]
    a820:	add	x21, sp, #0x70
    a824:	mov	x1, x21
    a828:	mov	w3, #0x0                   	// #0
    a82c:	mov	x2, #0x80                  	// #128
    a830:	bl	a2d8 <PySequence_Fast@plt+0x5bc8>
    a834:	tbnz	w0, #31, a8c0 <PySequence_Fast@plt+0x61b0>
    a838:	ldrh	w19, [sp, #112]
    a83c:	cmp	w19, #0x2
    a840:	b.eq	a908 <PySequence_Fast@plt+0x61f8>  // b.none
    a844:	cmp	w19, #0xa
    a848:	b.ne	a8e8 <PySequence_Fast@plt+0x61d8>  // b.any
    a84c:	add	x22, x21, #0x8
    a850:	mov	w20, #0x10                  	// #16
    a854:	bl	4570 <PyEval_SaveThread@plt>
    a858:	mov	w1, w20
    a85c:	add	x7, sp, #0x3c
    a860:	add	x6, sp, #0x48
    a864:	add	x4, sp, #0xf0
    a868:	add	x3, sp, #0x50
    a86c:	mov	w2, w19
    a870:	mov	x5, #0x3fff                	// #16383
    a874:	mov	x20, x0
    a878:	mov	x0, x22
    a87c:	bl	41b0 <gethostbyaddr_r@plt>
    a880:	mov	x0, x20
    a884:	bl	40c0 <PyEval_RestoreThread@plt>
    a888:	ldr	x0, [sp, #72]
    a88c:	mov	x1, x21
    a890:	mov	w2, w19
    a894:	bl	7100 <PySequence_Fast@plt+0x29f0>
    a898:	mov	x20, x0
    a89c:	ldr	x0, [sp, #64]
    a8a0:	ldp	x21, x22, [sp, #32]
    a8a4:	bl	40d0 <PyMem_Free@plt>
    a8a8:	mov	x0, x20
    a8ac:	mov	x12, #0x40f0                	// #16624
    a8b0:	ldp	x29, x30, [sp]
    a8b4:	ldp	x19, x20, [sp, #16]
    a8b8:	add	sp, sp, x12
    a8bc:	ret
    a8c0:	ldp	x21, x22, [sp, #32]
    a8c4:	mov	x20, #0x0                   	// #0
    a8c8:	ldr	x0, [sp, #64]
    a8cc:	bl	40d0 <PyMem_Free@plt>
    a8d0:	mov	x0, x20
    a8d4:	mov	x12, #0x40f0                	// #16624
    a8d8:	ldp	x29, x30, [sp]
    a8dc:	ldp	x19, x20, [sp, #16]
    a8e0:	add	sp, sp, x12
    a8e4:	ret
    a8e8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    a8ec:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a8f0:	add	x1, x1, #0x3c8
    a8f4:	ldr	x0, [x0, #3984]
    a8f8:	ldr	x0, [x0]
    a8fc:	bl	41d0 <PyErr_SetString@plt>
    a900:	ldp	x21, x22, [sp, #32]
    a904:	b	a8c8 <PySequence_Fast@plt+0x61b8>
    a908:	add	x22, x21, #0x4
    a90c:	mov	w20, #0x4                   	// #4
    a910:	b	a854 <PySequence_Fast@plt+0x6144>
    a914:	nop
    a918:	mov	x12, #0x40e0                	// #16608
    a91c:	sub	sp, sp, x12
    a920:	mov	x0, x1
    a924:	add	x3, sp, #0x30
    a928:	adrp	x2, f000 <PyInit__socket@@Base+0x1e80>
    a92c:	add	x2, x2, #0x328
    a930:	stp	x29, x30, [sp]
    a934:	mov	x29, sp
    a938:	stp	x19, x20, [sp, #16]
    a93c:	mov	x19, x1
    a940:	mov	x20, #0x0                   	// #0
    a944:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a948:	add	x1, x1, #0xaa0
    a94c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    a950:	cbz	w0, a9d4 <PySequence_Fast@plt+0x62c4>
    a954:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    a958:	adrp	x0, f000 <PyInit__socket@@Base+0x1e80>
    a95c:	mov	x2, x19
    a960:	add	x1, x1, #0xa50
    a964:	add	x0, x0, #0xa58
    a968:	bl	44a0 <PySys_Audit@plt>
    a96c:	tbnz	w0, #31, a9ec <PySequence_Fast@plt+0x62dc>
    a970:	ldr	x0, [sp, #48]
    a974:	add	x19, sp, #0x60
    a978:	mov	x1, x19
    a97c:	mov	w3, #0x2                   	// #2
    a980:	mov	x2, #0x80                  	// #128
    a984:	bl	a2d8 <PySequence_Fast@plt+0x5bc8>
    a988:	tbnz	w0, #31, a9ec <PySequence_Fast@plt+0x62dc>
    a98c:	bl	4570 <PyEval_SaveThread@plt>
    a990:	mov	x20, x0
    a994:	ldr	x0, [sp, #48]
    a998:	add	x5, sp, #0x2c
    a99c:	add	x4, sp, #0x38
    a9a0:	add	x2, sp, #0xe0
    a9a4:	add	x1, sp, #0x40
    a9a8:	mov	x3, #0x3fff                	// #16383
    a9ac:	bl	4170 <gethostbyname_r@plt>
    a9b0:	mov	x0, x20
    a9b4:	bl	40c0 <PyEval_RestoreThread@plt>
    a9b8:	ldrh	w2, [sp, #96]
    a9bc:	mov	x1, x19
    a9c0:	ldr	x0, [sp, #56]
    a9c4:	bl	7100 <PySequence_Fast@plt+0x29f0>
    a9c8:	mov	x20, x0
    a9cc:	ldr	x0, [sp, #48]
    a9d0:	bl	40d0 <PyMem_Free@plt>
    a9d4:	mov	x0, x20
    a9d8:	mov	x12, #0x40e0                	// #16608
    a9dc:	ldp	x29, x30, [sp]
    a9e0:	ldp	x19, x20, [sp, #16]
    a9e4:	add	sp, sp, x12
    a9e8:	ret
    a9ec:	mov	x20, #0x0                   	// #0
    a9f0:	b	a9cc <PySequence_Fast@plt+0x62bc>
    a9f4:	nop
    a9f8:	stp	x29, x30, [sp, #-224]!
    a9fc:	mov	x29, sp
    aa00:	stp	x19, x20, [sp, #16]
    aa04:	mov	x20, x2
    aa08:	ldr	w19, [x0, #20]
    aa0c:	stp	x21, x22, [sp, #32]
    aa10:	mov	x21, x0
    aa14:	mov	x22, x1
    aa18:	stp	x23, x24, [sp, #48]
    aa1c:	cmp	w19, #0x1d
    aa20:	mov	x24, x3
    aa24:	mov	x23, x4
    aa28:	b.eq	afd4 <PySequence_Fast@plt+0x68c4>  // b.none
    aa2c:	b.gt	ab30 <PySequence_Fast@plt+0x6420>
    aa30:	cmp	w19, #0x10
    aa34:	b.eq	ae7c <PySequence_Fast@plt+0x676c>  // b.none
    aa38:	b.gt	ac18 <PySequence_Fast@plt+0x6508>
    aa3c:	cmp	w19, #0x2
    aa40:	b.eq	addc <PySequence_Fast@plt+0x66cc>  // b.none
    aa44:	cmp	w19, #0xa
    aa48:	b.ne	ab7c <PySequence_Fast@plt+0x646c>  // b.any
    aa4c:	ldr	x0, [x1, #8]
    aa50:	stp	xzr, xzr, [sp, #144]
    aa54:	ldr	x1, [x0, #168]
    aa58:	str	wzr, [sp, #96]
    aa5c:	str	wzr, [sp, #104]
    aa60:	tbz	w1, #26, b11c <PySequence_Fast@plt+0x6a0c>
    aa64:	mov	x0, x22
    aa68:	add	x6, sp, #0x68
    aa6c:	add	x5, sp, #0x60
    aa70:	add	x4, sp, #0x58
    aa74:	add	x3, sp, #0x90
    aa78:	adrp	x2, 6000 <PySequence_Fast@plt+0x18f0>
    aa7c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    aa80:	add	x2, x2, #0xb48
    aa84:	add	x1, x1, #0xc98
    aa88:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    aa8c:	mov	w19, w0
    aa90:	cbz	w0, b198 <PySequence_Fast@plt+0x6a88>
    aa94:	ldr	x0, [sp, #152]
    aa98:	mov	x1, x20
    aa9c:	mov	w3, #0xa                   	// #10
    aaa0:	mov	x2, #0x1c                  	// #28
    aaa4:	bl	a2d8 <PySequence_Fast@plt+0x5bc8>
    aaa8:	mov	w19, w0
    aaac:	ldr	x1, [sp, #144]
    aab0:	cbz	x1, aac8 <PySequence_Fast@plt+0x63b8>
    aab4:	ldr	x0, [x1]
    aab8:	str	xzr, [sp, #144]
    aabc:	sub	x0, x0, #0x1
    aac0:	str	x0, [x1]
    aac4:	cbz	x0, b218 <PySequence_Fast@plt+0x6b08>
    aac8:	tbnz	w19, #31, b09c <PySequence_Fast@plt+0x698c>
    aacc:	ldr	w0, [sp, #88]
    aad0:	mov	w1, #0xffff                	// #65535
    aad4:	cmp	w0, w1
    aad8:	b.hi	b310 <PySequence_Fast@plt+0x6c00>  // b.pmore
    aadc:	ldr	w1, [sp, #96]
    aae0:	mov	w2, #0xfffff               	// #1048575
    aae4:	cmp	w1, w2
    aae8:	b.hi	b4ac <PySequence_Fast@plt+0x6d9c>  // b.pmore
    aaec:	ldr	w2, [x21, #20]
    aaf0:	rev16	w0, w0
    aaf4:	ldr	w3, [sp, #104]
    aaf8:	rev	w1, w1
    aafc:	strh	w2, [x20]
    ab00:	mov	w19, #0x1                   	// #1
    ab04:	strh	w0, [x20, #2]
    ab08:	mov	w2, #0x1c                  	// #28
    ab0c:	str	w1, [x20, #4]
    ab10:	str	w3, [x20, #24]
    ab14:	str	w2, [x24]
    ab18:	mov	w0, w19
    ab1c:	ldp	x19, x20, [sp, #16]
    ab20:	ldp	x21, x22, [sp, #32]
    ab24:	ldp	x23, x24, [sp, #48]
    ab28:	ldp	x29, x30, [sp], #224
    ab2c:	ret
    ab30:	cmp	w19, #0x28
    ab34:	b.eq	aecc <PySequence_Fast@plt+0x67bc>  // b.none
    ab38:	b.le	ad1c <PySequence_Fast@plt+0x660c>
    ab3c:	cmp	w19, #0x2a
    ab40:	b.ne	af20 <PySequence_Fast@plt+0x6810>  // b.any
    ab44:	ldr	x0, [x1, #8]
    ab48:	ldr	x1, [x0, #168]
    ab4c:	tbz	w1, #26, b144 <PySequence_Fast@plt+0x6a34>
    ab50:	mov	x0, x22
    ab54:	add	x3, sp, #0x90
    ab58:	add	x2, sp, #0x68
    ab5c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ab60:	add	x1, x1, #0xb88
    ab64:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    ab68:	mov	w19, w0
    ab6c:	cbz	w0, ab18 <PySequence_Fast@plt+0x6408>
    ab70:	ldr	w2, [sp, #104]
    ab74:	mov	w3, #0x2a                  	// #42
    ab78:	b	aeb0 <PySequence_Fast@plt+0x67a0>
    ab7c:	cmp	w19, #0x1
    ab80:	b.ne	af20 <PySequence_Fast@plt+0x6810>  // b.any
    ab84:	ldr	x0, [x1, #8]
    ab88:	ldr	x0, [x0, #168]
    ab8c:	tbnz	w0, #28, b168 <PySequence_Fast@plt+0x6a58>
    ab90:	ldr	x0, [x1]
    ab94:	str	x25, [sp, #64]
    ab98:	add	x0, x0, #0x1
    ab9c:	str	x0, [x1]
    aba0:	add	x25, sp, #0x90
    aba4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    aba8:	mov	x2, x25
    abac:	add	x1, x1, #0xab8
    abb0:	mov	x0, x22
    abb4:	bl	4300 <_PyArg_Parse_SizeT@plt>
    abb8:	cbz	w0, b088 <PySequence_Fast@plt+0x6978>
    abbc:	ldr	x23, [sp, #160]
    abc0:	cmp	x23, #0x0
    abc4:	b.le	b180 <PySequence_Fast@plt+0x6a70>
    abc8:	ldr	x1, [sp, #144]
    abcc:	ldrb	w0, [x1]
    abd0:	cbnz	w0, b180 <PySequence_Fast@plt+0x6a70>
    abd4:	cmp	x23, #0x6c
    abd8:	b.gt	b334 <PySequence_Fast@plt+0x6c24>
    abdc:	mov	x0, x20
    abe0:	ldr	w3, [x21, #20]
    abe4:	mov	x2, x23
    abe8:	add	w23, w23, #0x2
    abec:	strh	w3, [x0], #2
    abf0:	bl	3fa0 <memcpy@plt>
    abf4:	str	w23, [x24]
    abf8:	mov	x0, x25
    abfc:	bl	4100 <PyBuffer_Release@plt>
    ac00:	ldr	x0, [x22]
    ac04:	sub	x0, x0, #0x1
    ac08:	str	x0, [x22]
    ac0c:	cbz	x0, b1fc <PySequence_Fast@plt+0x6aec>
    ac10:	ldr	x25, [sp, #64]
    ac14:	b	ab18 <PySequence_Fast@plt+0x6408>
    ac18:	cmp	w19, #0x11
    ac1c:	b.ne	add4 <PySequence_Fast@plt+0x66c4>  // b.any
    ac20:	ldr	x0, [x1, #8]
    ac24:	stp	xzr, xzr, [sp, #144]
    ac28:	ldr	x1, [x0, #168]
    ac2c:	stp	wzr, wzr, [sp, #84]
    ac30:	stp	xzr, xzr, [sp, #160]
    ac34:	stp	xzr, xzr, [sp, #176]
    ac38:	stp	xzr, xzr, [sp, #192]
    ac3c:	stp	xzr, xzr, [sp, #208]
    ac40:	tbz	w1, #26, b0a4 <PySequence_Fast@plt+0x6994>
    ac44:	str	x25, [sp, #64]
    ac48:	add	x25, sp, #0x90
    ac4c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ac50:	mov	x0, x22
    ac54:	add	x5, sp, #0x54
    ac58:	add	x1, x1, #0xd48
    ac5c:	add	x4, sp, #0x58
    ac60:	add	x3, sp, #0x50
    ac64:	add	x2, sp, #0x60
    ac68:	mov	x6, x25
    ac6c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    ac70:	cbz	w0, b1c4 <PySequence_Fast@plt+0x6ab4>
    ac74:	ldr	x1, [sp, #96]
    ac78:	add	x3, sp, #0x68
    ac7c:	mov	x2, #0x10                  	// #16
    ac80:	mov	x0, x3
    ac84:	bl	4650 <strncpy@plt>
    ac88:	mov	x2, x0
    ac8c:	ldr	w0, [x21, #16]
    ac90:	mov	x1, #0x8933                	// #35123
    ac94:	strb	wzr, [sp, #119]
    ac98:	bl	4700 <ioctl@plt>
    ac9c:	tbnz	w0, #31, b354 <PySequence_Fast@plt+0x6c44>
    aca0:	ldr	x1, [sp, #144]
    aca4:	cbz	x1, acb4 <PySequence_Fast@plt+0x65a4>
    aca8:	ldr	x0, [sp, #160]
    acac:	cmp	x0, #0x8
    acb0:	b.gt	b4f0 <PySequence_Fast@plt+0x6de0>
    acb4:	ldr	w0, [sp, #80]
    acb8:	mov	w2, #0xffff                	// #65535
    acbc:	cmp	w0, w2
    acc0:	b.hi	b47c <PySequence_Fast@plt+0x6d6c>  // b.pmore
    acc4:	ldp	w3, w2, [sp, #84]
    acc8:	rev16	w0, w0
    accc:	ldr	w4, [sp, #120]
    acd0:	mov	w5, #0x11                  	// #17
    acd4:	strh	w5, [x20]
    acd8:	strh	w0, [x20, #2]
    acdc:	str	w4, [x20, #4]
    ace0:	strh	w3, [x20, #8]
    ace4:	strb	w2, [x20, #10]
    ace8:	cbz	x1, b404 <PySequence_Fast@plt+0x6cf4>
    acec:	ldr	x19, [sp, #160]
    acf0:	add	x0, x20, #0xc
    acf4:	mov	x2, x19
    acf8:	bl	3fa0 <memcpy@plt>
    acfc:	strb	w19, [x20, #11]
    ad00:	mov	w0, #0x14                  	// #20
    ad04:	str	w0, [x24]
    ad08:	mov	w19, #0x1                   	// #1
    ad0c:	mov	x0, x25
    ad10:	bl	4100 <PyBuffer_Release@plt>
    ad14:	ldr	x25, [sp, #64]
    ad18:	b	ab18 <PySequence_Fast@plt+0x6408>
    ad1c:	cmp	w19, #0x1e
    ad20:	b.eq	af44 <PySequence_Fast@plt+0x6834>  // b.none
    ad24:	cmp	w19, #0x26
    ad28:	b.ne	af20 <PySequence_Fast@plt+0x6810>  // b.any
    ad2c:	stp	xzr, xzr, [x2]
    ad30:	stp	xzr, xzr, [x2, #16]
    ad34:	stp	xzr, xzr, [x2, #32]
    ad38:	stp	xzr, xzr, [x2, #48]
    ad3c:	stp	xzr, xzr, [x2, #64]
    ad40:	str	xzr, [x2, #80]
    ad44:	strh	w19, [x2]
    ad48:	ldr	x0, [x1, #8]
    ad4c:	ldr	x1, [x0, #168]
    ad50:	tbz	w1, #26, b0cc <PySequence_Fast@plt+0x69bc>
    ad54:	add	x5, x2, #0x14
    ad58:	add	x4, x2, #0x10
    ad5c:	mov	x0, x22
    ad60:	add	x3, sp, #0x90
    ad64:	add	x2, sp, #0x68
    ad68:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ad6c:	add	x1, x1, #0xf50
    ad70:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    ad74:	mov	w19, w0
    ad78:	cbz	w0, ab18 <PySequence_Fast@plt+0x6408>
    ad7c:	ldr	x19, [sp, #104]
    ad80:	mov	x0, x19
    ad84:	bl	4020 <strlen@plt>
    ad88:	cmp	x0, #0xd
    ad8c:	b.hi	b2f0 <PySequence_Fast@plt+0x6be0>  // b.pmore
    ad90:	mov	x1, x19
    ad94:	mov	x2, #0xe                   	// #14
    ad98:	add	x0, x20, #0x2
    ad9c:	bl	4650 <strncpy@plt>
    ada0:	ldr	x19, [sp, #144]
    ada4:	mov	x0, x19
    ada8:	bl	4020 <strlen@plt>
    adac:	cmp	x0, #0x3f
    adb0:	b.hi	b40c <PySequence_Fast@plt+0x6cfc>  // b.pmore
    adb4:	mov	x1, x19
    adb8:	add	x0, x20, #0x18
    adbc:	mov	x2, #0x40                  	// #64
    adc0:	bl	4650 <strncpy@plt>
    adc4:	mov	w0, #0x58                  	// #88
    adc8:	mov	w19, #0x1                   	// #1
    adcc:	str	w0, [x24]
    add0:	b	ab18 <PySequence_Fast@plt+0x6408>
    add4:	cmp	w19, #0x15
    add8:	b.ne	af20 <PySequence_Fast@plt+0x6810>  // b.any
    addc:	ldr	x0, [x22, #8]
    ade0:	stp	xzr, xzr, [sp, #144]
    ade4:	ldr	x1, [x0, #168]
    ade8:	tbz	w1, #26, b0f4 <PySequence_Fast@plt+0x69e4>
    adec:	mov	x0, x22
    adf0:	add	x4, sp, #0x68
    adf4:	add	x3, sp, #0x90
    adf8:	adrp	x2, 6000 <PySequence_Fast@plt+0x18f0>
    adfc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ae00:	add	x2, x2, #0xb48
    ae04:	add	x1, x1, #0xc10
    ae08:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    ae0c:	mov	w19, w0
    ae10:	cbz	w0, b198 <PySequence_Fast@plt+0x6a88>
    ae14:	ldr	x0, [sp, #152]
    ae18:	mov	x1, x20
    ae1c:	mov	w3, #0x2                   	// #2
    ae20:	mov	x2, #0x10                  	// #16
    ae24:	bl	a2d8 <PySequence_Fast@plt+0x5bc8>
    ae28:	mov	w19, w0
    ae2c:	ldr	x1, [sp, #144]
    ae30:	cbz	x1, ae48 <PySequence_Fast@plt+0x6738>
    ae34:	ldr	x0, [x1]
    ae38:	str	xzr, [sp, #144]
    ae3c:	sub	x0, x0, #0x1
    ae40:	str	x0, [x1]
    ae44:	cbz	x0, b20c <PySequence_Fast@plt+0x6afc>
    ae48:	tbnz	w19, #31, b09c <PySequence_Fast@plt+0x698c>
    ae4c:	ldr	w0, [sp, #104]
    ae50:	mov	w1, #0xffff                	// #65535
    ae54:	cmp	w0, w1
    ae58:	b.hi	b310 <PySequence_Fast@plt+0x6c00>  // b.pmore
    ae5c:	mov	w1, #0x2                   	// #2
    ae60:	rev16	w0, w0
    ae64:	strh	w1, [x20]
    ae68:	mov	w19, #0x1                   	// #1
    ae6c:	strh	w0, [x20, #2]
    ae70:	mov	w1, #0x10                  	// #16
    ae74:	str	w1, [x24]
    ae78:	b	ab18 <PySequence_Fast@plt+0x6408>
    ae7c:	ldr	x0, [x1, #8]
    ae80:	ldr	x1, [x0, #168]
    ae84:	tbz	w1, #26, b248 <PySequence_Fast@plt+0x6b38>
    ae88:	mov	x0, x22
    ae8c:	add	x3, sp, #0x90
    ae90:	add	x2, sp, #0x68
    ae94:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ae98:	add	x1, x1, #0xb10
    ae9c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    aea0:	mov	w19, w0
    aea4:	cbz	w0, ab18 <PySequence_Fast@plt+0x6408>
    aea8:	ldr	w2, [sp, #104]
    aeac:	mov	w3, #0x10                  	// #16
    aeb0:	ldr	w1, [sp, #144]
    aeb4:	mov	w0, #0xc                   	// #12
    aeb8:	strh	w3, [x20]
    aebc:	mov	w19, #0x1                   	// #1
    aec0:	stp	w2, w1, [x20, #4]
    aec4:	str	w0, [x24]
    aec8:	b	ab18 <PySequence_Fast@plt+0x6408>
    aecc:	stp	xzr, xzr, [x2]
    aed0:	ldr	x0, [x1, #8]
    aed4:	ldr	x1, [x0, #168]
    aed8:	tbz	w1, #26, b224 <PySequence_Fast@plt+0x6b14>
    aedc:	mov	x0, x22
    aee0:	add	x3, sp, #0x68
    aee4:	add	x2, sp, #0x90
    aee8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    aeec:	add	x1, x1, #0xb88
    aef0:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    aef4:	mov	w19, w0
    aef8:	cbz	w0, ab18 <PySequence_Fast@plt+0x6408>
    aefc:	ldr	w3, [x21, #20]
    af00:	mov	w0, #0x10                  	// #16
    af04:	ldr	w2, [sp, #104]
    af08:	mov	w19, #0x1                   	// #1
    af0c:	ldr	w1, [sp, #144]
    af10:	strh	w3, [x20]
    af14:	stp	w2, w1, [x20, #4]
    af18:	str	w0, [x24]
    af1c:	b	ab18 <PySequence_Fast@plt+0x6408>
    af20:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    af24:	mov	x2, x23
    af28:	mov	w19, #0x0                   	// #0
    af2c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    af30:	ldr	x0, [x0, #3984]
    af34:	add	x1, x1, #0xfc8
    af38:	ldr	x0, [x0]
    af3c:	bl	4620 <PyErr_Format@plt>
    af40:	b	ab18 <PySequence_Fast@plt+0x6408>
    af44:	ldr	x0, [x22, #8]
    af48:	mov	w1, #0x2                   	// #2
    af4c:	str	w1, [sp, #144]
    af50:	ldr	x1, [x0, #168]
    af54:	tbz	w1, #26, b270 <PySequence_Fast@plt+0x6b60>
    af58:	mov	x0, x22
    af5c:	add	x6, sp, #0x90
    af60:	add	x5, sp, #0x68
    af64:	add	x4, sp, #0x60
    af68:	add	x3, sp, #0x58
    af6c:	add	x2, sp, #0x54
    af70:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    af74:	add	x1, x1, #0xe38
    af78:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    af7c:	mov	w19, w0
    af80:	cbz	w0, ab18 <PySequence_Fast@plt+0x6408>
    af84:	ldr	w0, [sp, #84]
    af88:	mov	w2, #0x1e                  	// #30
    af8c:	ldr	w1, [sp, #144]
    af90:	stp	xzr, xzr, [x20]
    af94:	cmp	w0, #0x1
    af98:	strh	w2, [x20]
    af9c:	strb	w0, [x20, #2]
    afa0:	strb	w1, [x20, #3]
    afa4:	b.eq	b398 <PySequence_Fast@plt+0x6c88>  // b.none
    afa8:	cmp	w0, #0x2
    afac:	b.eq	b46c <PySequence_Fast@plt+0x6d5c>  // b.none
    afb0:	cmp	w0, #0x3
    afb4:	b.ne	b4d0 <PySequence_Fast@plt+0x6dc0>  // b.any
    afb8:	ldr	w0, [sp, #88]
    afbc:	ldr	w1, [sp, #96]
    afc0:	stp	w1, w0, [x20, #4]
    afc4:	mov	w0, #0x10                  	// #16
    afc8:	mov	w19, #0x1                   	// #1
    afcc:	str	w0, [x24]
    afd0:	b	ab18 <PySequence_Fast@plt+0x6408>
    afd4:	ldr	w0, [x0, #28]
    afd8:	cmp	w0, #0x2
    afdc:	b.le	b05c <PySequence_Fast@plt+0x694c>
    afe0:	cmp	w0, #0x6
    afe4:	b.ne	b064 <PySequence_Fast@plt+0x6954>  // b.any
    afe8:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    afec:	mov	x0, x1
    aff0:	add	x5, sp, #0x68
    aff4:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    aff8:	ldr	x2, [x2, #3936]
    affc:	add	x1, x1, #0xf38
    b000:	add	x4, sp, #0x60
    b004:	add	x3, sp, #0x58
    b008:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    b00c:	cbz	w0, b09c <PySequence_Fast@plt+0x698c>
    b010:	ldr	x0, [sp, #88]
    b014:	ldr	x1, [x0, #16]
    b018:	cbnz	x1, b3b0 <PySequence_Fast@plt+0x6ca0>
    b01c:	mov	w4, #0x0                   	// #0
    b020:	str	wzr, [sp, #160]
    b024:	ldp	x2, x3, [sp, #96]
    b028:	mov	w1, #0x1d                  	// #29
    b02c:	strh	w1, [x20]
    b030:	ldr	x1, [x0]
    b034:	stp	w4, w2, [x20, #4]
    b038:	mov	w2, #0x18                  	// #24
    b03c:	str	w3, [x20, #12]
    b040:	str	w2, [x24]
    b044:	sub	x1, x1, #0x1
    b048:	str	x1, [x0]
    b04c:	mov	w19, #0x1                   	// #1
    b050:	cbnz	x1, ab18 <PySequence_Fast@plt+0x6408>
    b054:	bl	4180 <_Py_Dealloc@plt>
    b058:	b	ab18 <PySequence_Fast@plt+0x6408>
    b05c:	cmp	w0, #0x0
    b060:	b.gt	b298 <PySequence_Fast@plt+0x6b88>
    b064:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b068:	mov	x2, x23
    b06c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b070:	mov	w19, #0x0                   	// #0
    b074:	ldr	x0, [x0, #3984]
    b078:	add	x1, x1, #0xf00
    b07c:	ldr	x0, [x0]
    b080:	bl	4620 <PyErr_Format@plt>
    b084:	b	ab18 <PySequence_Fast@plt+0x6408>
    b088:	ldr	x0, [x22]
    b08c:	sub	x0, x0, #0x1
    b090:	str	x0, [x22]
    b094:	cbz	x0, b3f0 <PySequence_Fast@plt+0x6ce0>
    b098:	ldr	x25, [sp, #64]
    b09c:	mov	w19, #0x0                   	// #0
    b0a0:	b	ab18 <PySequence_Fast@plt+0x6408>
    b0a4:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    b0a8:	mov	x2, x23
    b0ac:	ldr	x3, [x0, #24]
    b0b0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b0b4:	ldr	x0, [x4, #3976]
    b0b8:	add	x1, x1, #0xd10
    b0bc:	mov	w19, #0x0                   	// #0
    b0c0:	ldr	x0, [x0]
    b0c4:	bl	4620 <PyErr_Format@plt>
    b0c8:	b	ab18 <PySequence_Fast@plt+0x6408>
    b0cc:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    b0d0:	mov	x2, x23
    b0d4:	ldr	x3, [x0, #24]
    b0d8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b0dc:	ldr	x0, [x4, #3976]
    b0e0:	add	x1, x1, #0xf20
    b0e4:	mov	w19, #0x0                   	// #0
    b0e8:	ldr	x0, [x0]
    b0ec:	bl	4620 <PyErr_Format@plt>
    b0f0:	b	ab18 <PySequence_Fast@plt+0x6408>
    b0f4:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    b0f8:	mov	x2, x23
    b0fc:	ldr	x3, [x0, #24]
    b100:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b104:	ldr	x0, [x4, #3976]
    b108:	add	x1, x1, #0xbe0
    b10c:	mov	w19, #0x0                   	// #0
    b110:	ldr	x0, [x0]
    b114:	bl	4620 <PyErr_Format@plt>
    b118:	b	ab18 <PySequence_Fast@plt+0x6408>
    b11c:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    b120:	mov	x2, x23
    b124:	ldr	x3, [x0, #24]
    b128:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b12c:	ldr	x0, [x4, #3976]
    b130:	add	x1, x1, #0xc60
    b134:	mov	w19, #0x0                   	// #0
    b138:	ldr	x0, [x0]
    b13c:	bl	4620 <PyErr_Format@plt>
    b140:	b	ab18 <PySequence_Fast@plt+0x6408>
    b144:	adrp	x3, 27000 <PyInit__socket@@Base+0x19e80>
    b148:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b14c:	ldr	x2, [x0, #24]
    b150:	add	x1, x1, #0xb48
    b154:	ldr	x3, [x3, #3976]
    b158:	mov	w19, #0x0                   	// #0
    b15c:	ldr	x0, [x3]
    b160:	bl	4620 <PyErr_Format@plt>
    b164:	b	ab18 <PySequence_Fast@plt+0x6408>
    b168:	mov	x0, x1
    b16c:	bl	4320 <PyUnicode_EncodeFSDefault@plt>
    b170:	mov	x22, x0
    b174:	cbz	x0, b09c <PySequence_Fast@plt+0x698c>
    b178:	str	x25, [sp, #64]
    b17c:	b	aba0 <PySequence_Fast@plt+0x6490>
    b180:	cmp	x23, #0x6b
    b184:	b.hi	b334 <PySequence_Fast@plt+0x6c24>  // b.pmore
    b188:	add	x0, x20, x23
    b18c:	ldr	x1, [sp, #144]
    b190:	strb	wzr, [x0, #2]
    b194:	b	abdc <PySequence_Fast@plt+0x64cc>
    b198:	adrp	x20, 27000 <PyInit__socket@@Base+0x19e80>
    b19c:	ldr	x20, [x20, #4008]
    b1a0:	ldr	x0, [x20]
    b1a4:	bl	4250 <PyErr_ExceptionMatches@plt>
    b1a8:	cbz	w0, b09c <PySequence_Fast@plt+0x698c>
    b1ac:	ldr	x0, [x20]
    b1b0:	mov	x2, x23
    b1b4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b1b8:	add	x1, x1, #0xc40
    b1bc:	bl	4620 <PyErr_Format@plt>
    b1c0:	b	ab18 <PySequence_Fast@plt+0x6408>
    b1c4:	adrp	x20, 27000 <PyInit__socket@@Base+0x19e80>
    b1c8:	ldr	x20, [x20, #4008]
    b1cc:	ldr	x0, [x20]
    b1d0:	bl	4250 <PyErr_ExceptionMatches@plt>
    b1d4:	mov	w19, w0
    b1d8:	cbz	w0, ac10 <PySequence_Fast@plt+0x6500>
    b1dc:	ldr	x0, [x20]
    b1e0:	mov	x2, x23
    b1e4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b1e8:	mov	w19, #0x0                   	// #0
    b1ec:	add	x1, x1, #0xd90
    b1f0:	bl	4620 <PyErr_Format@plt>
    b1f4:	ldr	x25, [sp, #64]
    b1f8:	b	ab18 <PySequence_Fast@plt+0x6408>
    b1fc:	mov	x0, x22
    b200:	bl	4180 <_Py_Dealloc@plt>
    b204:	ldr	x25, [sp, #64]
    b208:	b	ab18 <PySequence_Fast@plt+0x6408>
    b20c:	mov	x0, x1
    b210:	bl	4180 <_Py_Dealloc@plt>
    b214:	b	ae48 <PySequence_Fast@plt+0x6738>
    b218:	mov	x0, x1
    b21c:	bl	4180 <_Py_Dealloc@plt>
    b220:	b	aac8 <PySequence_Fast@plt+0x63b8>
    b224:	adrp	x3, 27000 <PyInit__socket@@Base+0x19e80>
    b228:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b22c:	ldr	x2, [x0, #24]
    b230:	add	x1, x1, #0xba0
    b234:	ldr	x3, [x3, #3976]
    b238:	mov	w19, #0x0                   	// #0
    b23c:	ldr	x0, [x3]
    b240:	bl	4620 <PyErr_Format@plt>
    b244:	b	ab18 <PySequence_Fast@plt+0x6408>
    b248:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    b24c:	mov	x2, x23
    b250:	ldr	x3, [x0, #24]
    b254:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b258:	ldr	x0, [x4, #3976]
    b25c:	add	x1, x1, #0xad8
    b260:	mov	w19, #0x0                   	// #0
    b264:	ldr	x0, [x0]
    b268:	bl	4620 <PyErr_Format@plt>
    b26c:	b	ab18 <PySequence_Fast@plt+0x6408>
    b270:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    b274:	mov	x2, x23
    b278:	ldr	x3, [x0, #24]
    b27c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b280:	ldr	x0, [x4, #3976]
    b284:	add	x1, x1, #0xe08
    b288:	mov	w19, #0x0                   	// #0
    b28c:	ldr	x0, [x0]
    b290:	bl	4620 <PyErr_Format@plt>
    b294:	b	ab18 <PySequence_Fast@plt+0x6408>
    b298:	ldr	x0, [x1, #8]
    b29c:	ldr	x1, [x0, #168]
    b2a0:	tbz	w1, #26, b370 <PySequence_Fast@plt+0x6c60>
    b2a4:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    b2a8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b2ac:	mov	x0, x22
    b2b0:	add	x3, sp, #0x68
    b2b4:	ldr	x2, [x2, #3936]
    b2b8:	add	x1, x1, #0xeb0
    b2bc:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    b2c0:	cbz	w0, b09c <PySequence_Fast@plt+0x698c>
    b2c4:	ldr	x0, [sp, #104]
    b2c8:	ldr	x1, [x0, #16]
    b2cc:	cbnz	x1, b42c <PySequence_Fast@plt+0x6d1c>
    b2d0:	mov	w3, #0x0                   	// #0
    b2d4:	str	wzr, [sp, #160]
    b2d8:	mov	w2, #0x1d                  	// #29
    b2dc:	ldr	x1, [x0]
    b2e0:	strh	w2, [x20]
    b2e4:	mov	w2, #0x18                  	// #24
    b2e8:	str	w3, [x20, #4]
    b2ec:	b	b040 <PySequence_Fast@plt+0x6930>
    b2f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b2f4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b2f8:	mov	w19, #0x0                   	// #0
    b2fc:	add	x1, x1, #0xf98
    b300:	ldr	x0, [x0, #3960]
    b304:	ldr	x0, [x0]
    b308:	bl	41d0 <PyErr_SetString@plt>
    b30c:	b	ab18 <PySequence_Fast@plt+0x6408>
    b310:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b314:	mov	x2, x23
    b318:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b31c:	mov	w19, #0x0                   	// #0
    b320:	ldr	x0, [x0, #4008]
    b324:	add	x1, x1, #0xc40
    b328:	ldr	x0, [x0]
    b32c:	bl	4620 <PyErr_Format@plt>
    b330:	b	ab18 <PySequence_Fast@plt+0x6408>
    b334:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b338:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b33c:	mov	w19, #0x0                   	// #0
    b340:	add	x1, x1, #0xac0
    b344:	ldr	x0, [x0, #3984]
    b348:	ldr	x0, [x0]
    b34c:	bl	41d0 <PyErr_SetString@plt>
    b350:	b	abf8 <PySequence_Fast@plt+0x64e8>
    b354:	ldr	x0, [x21, #32]
    b358:	mov	w19, #0x0                   	// #0
    b35c:	blr	x0
    b360:	mov	x0, x25
    b364:	bl	4100 <PyBuffer_Release@plt>
    b368:	ldr	x25, [sp, #64]
    b36c:	b	ab18 <PySequence_Fast@plt+0x6408>
    b370:	adrp	x4, 27000 <PyInit__socket@@Base+0x19e80>
    b374:	mov	x2, x23
    b378:	ldr	x3, [x0, #24]
    b37c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b380:	ldr	x0, [x4, #3976]
    b384:	add	x1, x1, #0xe80
    b388:	mov	w19, #0x0                   	// #0
    b38c:	ldr	x0, [x0]
    b390:	bl	4620 <PyErr_Format@plt>
    b394:	b	ab18 <PySequence_Fast@plt+0x6408>
    b398:	ldr	w2, [sp, #88]
    b39c:	ldr	w1, [sp, #96]
    b3a0:	ldr	w0, [sp, #104]
    b3a4:	stp	w2, w1, [x20, #4]
    b3a8:	str	w0, [x20, #12]
    b3ac:	b	afc4 <PySequence_Fast@plt+0x68b4>
    b3b0:	cmp	x1, #0xf
    b3b4:	b.hi	b51c <PySequence_Fast@plt+0x6e0c>  // b.pmore
    b3b8:	add	x3, sp, #0x90
    b3bc:	add	x1, x0, #0x20
    b3c0:	mov	x2, #0x10                  	// #16
    b3c4:	mov	x0, x3
    b3c8:	bl	4650 <strncpy@plt>
    b3cc:	mov	x2, x0
    b3d0:	ldr	w0, [x21, #16]
    b3d4:	mov	x1, #0x8933                	// #35123
    b3d8:	strb	wzr, [sp, #159]
    b3dc:	bl	4700 <ioctl@plt>
    b3e0:	tbnz	w0, #31, b588 <PySequence_Fast@plt+0x6e78>
    b3e4:	ldr	w4, [sp, #160]
    b3e8:	ldr	x0, [sp, #88]
    b3ec:	b	b024 <PySequence_Fast@plt+0x6914>
    b3f0:	mov	x0, x22
    b3f4:	mov	w19, #0x0                   	// #0
    b3f8:	bl	4180 <_Py_Dealloc@plt>
    b3fc:	ldr	x25, [sp, #64]
    b400:	b	ab18 <PySequence_Fast@plt+0x6408>
    b404:	strb	wzr, [x20, #11]
    b408:	b	ad00 <PySequence_Fast@plt+0x65f0>
    b40c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b410:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b414:	mov	w19, #0x0                   	// #0
    b418:	add	x1, x1, #0xfb0
    b41c:	ldr	x0, [x0, #3960]
    b420:	ldr	x0, [x0]
    b424:	bl	41d0 <PyErr_SetString@plt>
    b428:	b	ab18 <PySequence_Fast@plt+0x6408>
    b42c:	cmp	x1, #0xf
    b430:	b.hi	b554 <PySequence_Fast@plt+0x6e44>  // b.pmore
    b434:	add	x3, sp, #0x90
    b438:	add	x1, x0, #0x20
    b43c:	mov	x2, #0x10                  	// #16
    b440:	mov	x0, x3
    b444:	bl	4650 <strncpy@plt>
    b448:	mov	x2, x0
    b44c:	ldr	w0, [x21, #16]
    b450:	mov	x1, #0x8933                	// #35123
    b454:	strb	wzr, [sp, #159]
    b458:	bl	4700 <ioctl@plt>
    b45c:	tbnz	w0, #31, b594 <PySequence_Fast@plt+0x6e84>
    b460:	ldr	w3, [sp, #160]
    b464:	ldr	x0, [sp, #104]
    b468:	b	b2d8 <PySequence_Fast@plt+0x6bc8>
    b46c:	ldr	w1, [sp, #88]
    b470:	ldr	w0, [sp, #96]
    b474:	stp	w1, w0, [x20, #4]
    b478:	b	afc4 <PySequence_Fast@plt+0x68b4>
    b47c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b480:	mov	x2, x23
    b484:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b488:	add	x1, x1, #0xde8
    b48c:	ldr	x0, [x0, #4008]
    b490:	mov	w19, #0x0                   	// #0
    b494:	ldr	x0, [x0]
    b498:	bl	4620 <PyErr_Format@plt>
    b49c:	mov	x0, x25
    b4a0:	bl	4100 <PyBuffer_Release@plt>
    b4a4:	ldr	x25, [sp, #64]
    b4a8:	b	ab18 <PySequence_Fast@plt+0x6408>
    b4ac:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b4b0:	mov	x2, x23
    b4b4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b4b8:	mov	w19, #0x0                   	// #0
    b4bc:	ldr	x0, [x0, #4008]
    b4c0:	add	x1, x1, #0xce8
    b4c4:	ldr	x0, [x0]
    b4c8:	bl	4620 <PyErr_Format@plt>
    b4cc:	b	ab18 <PySequence_Fast@plt+0x6408>
    b4d0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b4d4:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    b4d8:	mov	w19, #0x0                   	// #0
    b4dc:	add	x1, x1, #0xf20
    b4e0:	ldr	x0, [x0, #3976]
    b4e4:	ldr	x0, [x0]
    b4e8:	bl	41d0 <PyErr_SetString@plt>
    b4ec:	b	ab18 <PySequence_Fast@plt+0x6408>
    b4f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b4f4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b4f8:	add	x1, x1, #0xdb8
    b4fc:	mov	w19, #0x0                   	// #0
    b500:	ldr	x0, [x0, #3960]
    b504:	ldr	x0, [x0]
    b508:	bl	41d0 <PyErr_SetString@plt>
    b50c:	mov	x0, x25
    b510:	bl	4100 <PyBuffer_Release@plt>
    b514:	ldr	x25, [sp, #64]
    b518:	b	ab18 <PySequence_Fast@plt+0x6408>
    b51c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b520:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b524:	add	x1, x1, #0xee0
    b528:	ldr	x0, [x0, #3984]
    b52c:	ldr	x0, [x0]
    b530:	bl	41d0 <PyErr_SetString@plt>
    b534:	ldr	x0, [sp, #88]
    b538:	ldr	x1, [x0]
    b53c:	sub	x1, x1, #0x1
    b540:	str	x1, [x0]
    b544:	cbnz	x1, b09c <PySequence_Fast@plt+0x698c>
    b548:	mov	w19, #0x0                   	// #0
    b54c:	bl	4180 <_Py_Dealloc@plt>
    b550:	b	ab18 <PySequence_Fast@plt+0x6408>
    b554:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b558:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b55c:	add	x1, x1, #0xee0
    b560:	ldr	x0, [x0, #3984]
    b564:	ldr	x0, [x0]
    b568:	bl	41d0 <PyErr_SetString@plt>
    b56c:	ldr	x0, [sp, #104]
    b570:	ldr	x1, [x0]
    b574:	sub	x1, x1, #0x1
    b578:	str	x1, [x0]
    b57c:	cbz	x1, b548 <PySequence_Fast@plt+0x6e38>
    b580:	mov	w19, #0x0                   	// #0
    b584:	b	ab18 <PySequence_Fast@plt+0x6408>
    b588:	ldr	x0, [x21, #32]
    b58c:	blr	x0
    b590:	b	b534 <PySequence_Fast@plt+0x6e24>
    b594:	ldr	x0, [x21, #32]
    b598:	blr	x0
    b59c:	b	b56c <PySequence_Fast@plt+0x6e5c>
    b5a0:	stp	x29, x30, [sp, #-368]!
    b5a4:	mov	x29, sp
    b5a8:	stp	x19, x20, [sp, #16]
    b5ac:	mov	x20, x1
    b5b0:	mov	x19, x0
    b5b4:	mov	x0, x1
    b5b8:	stp	x21, x22, [sp, #32]
    b5bc:	str	wzr, [sp, #140]
    b5c0:	bl	4610 <PyTuple_Size@plt>
    b5c4:	cmp	x0, #0x2
    b5c8:	b.eq	b604 <PySequence_Fast@plt+0x6ef4>  // b.none
    b5cc:	mov	x2, x0
    b5d0:	cmp	x0, #0x3
    b5d4:	b.eq	b730 <PySequence_Fast@plt+0x7020>  // b.none
    b5d8:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    b5dc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    b5e0:	add	x1, x1, #0x0
    b5e4:	ldr	x0, [x0, #3976]
    b5e8:	ldr	x0, [x0]
    b5ec:	bl	4620 <PyErr_Format@plt>
    b5f0:	mov	x0, #0x0                   	// #0
    b5f4:	ldp	x19, x20, [sp, #16]
    b5f8:	ldp	x21, x22, [sp, #32]
    b5fc:	ldp	x29, x30, [sp], #368
    b600:	ret
    b604:	add	x22, sp, #0xa0
    b608:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b60c:	mov	x0, x20
    b610:	mov	x2, x22
    b614:	add	x3, sp, #0x90
    b618:	add	x1, x1, #0xfe0
    b61c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    b620:	cbz	w0, b5f0 <PySequence_Fast@plt+0x6ee0>
    b624:	ldr	x1, [sp, #144]
    b628:	add	x21, sp, #0xf0
    b62c:	adrp	x4, 10000 <PyInit__socket@@Base+0x2e80>
    b630:	mov	x2, x21
    b634:	add	x3, sp, #0x88
    b638:	add	x4, x4, #0x30
    b63c:	mov	x0, x19
    b640:	bl	a9f8 <PySequence_Fast@plt+0x62e8>
    b644:	cbz	w0, b77c <PySequence_Fast@plt+0x706c>
    b648:	ldr	x3, [sp, #144]
    b64c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    b650:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    b654:	add	x1, x1, #0x38
    b658:	add	x0, x0, #0x40
    b65c:	mov	x2, x19
    b660:	bl	44a0 <PySys_Audit@plt>
    b664:	tbnz	w0, #31, b5f0 <PySequence_Fast@plt+0x6ee0>
    b668:	stp	x23, x24, [sp, #48]
    b66c:	add	x0, sp, #0x98
    b670:	stp	x25, x26, [sp, #64]
    b674:	ldp	w26, w25, [sp, #136]
    b678:	stp	x27, x28, [sp, #80]
    b67c:	ldr	x28, [x19, #40]
    b680:	str	xzr, [sp, #104]
    b684:	ldr	x24, [sp, #160]
    b688:	str	wzr, [sp, #112]
    b68c:	ldr	x23, [sp, #176]
    b690:	str	x0, [sp, #120]
    b694:	cmp	x28, #0x0
    b698:	b.le	b6d0 <PySequence_Fast@plt+0x6fc0>
    b69c:	ldr	w0, [sp, #112]
    b6a0:	cbnz	w0, b7b0 <PySequence_Fast@plt+0x70a0>
    b6a4:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    b6a8:	add	x0, x28, x0
    b6ac:	str	x0, [sp, #104]
    b6b0:	mov	x0, x28
    b6b4:	b	b7c0 <PySequence_Fast@plt+0x70b0>
    b6b8:	bl	4660 <__errno_location@plt>
    b6bc:	ldr	w0, [x0]
    b6c0:	cmp	w0, #0x4
    b6c4:	b.ne	b758 <PySequence_Fast@plt+0x7048>  // b.any
    b6c8:	bl	45e0 <PyErr_CheckSignals@plt>
    b6cc:	cbnz	w0, b770 <PySequence_Fast@plt+0x7060>
    b6d0:	bl	4570 <PyEval_SaveThread@plt>
    b6d4:	mov	x27, x0
    b6d8:	ldr	w0, [x19, #16]
    b6dc:	mov	w5, w26
    b6e0:	mov	x4, x21
    b6e4:	mov	w3, w25
    b6e8:	mov	x2, x23
    b6ec:	mov	x1, x24
    b6f0:	bl	3ff0 <sendto@plt>
    b6f4:	mov	x20, x0
    b6f8:	mov	x0, x27
    b6fc:	bl	40c0 <PyEval_RestoreThread@plt>
    b700:	tbnz	x20, #63, b6b8 <PySequence_Fast@plt+0x6fa8>
    b704:	mov	x0, x22
    b708:	bl	4100 <PyBuffer_Release@plt>
    b70c:	mov	x0, x20
    b710:	bl	42e0 <PyLong_FromSsize_t@plt>
    b714:	ldp	x19, x20, [sp, #16]
    b718:	ldp	x21, x22, [sp, #32]
    b71c:	ldp	x23, x24, [sp, #48]
    b720:	ldp	x25, x26, [sp, #64]
    b724:	ldp	x27, x28, [sp, #80]
    b728:	ldp	x29, x30, [sp], #368
    b72c:	ret
    b730:	add	x22, sp, #0xa0
    b734:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b738:	mov	x0, x20
    b73c:	mov	x2, x22
    b740:	add	x4, sp, #0x90
    b744:	add	x1, x1, #0xff0
    b748:	add	x3, sp, #0x8c
    b74c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    b750:	cbnz	w0, b624 <PySequence_Fast@plt+0x6f14>
    b754:	b	b5f0 <PySequence_Fast@plt+0x6ee0>
    b758:	ldr	x1, [x19, #40]
    b75c:	cmp	x1, #0x0
    b760:	ccmp	w0, #0xb, #0x0, gt
    b764:	b.eq	b694 <PySequence_Fast@plt+0x6f84>  // b.none
    b768:	ldr	x0, [x19, #32]
    b76c:	blr	x0
    b770:	ldp	x23, x24, [sp, #48]
    b774:	ldp	x25, x26, [sp, #64]
    b778:	ldp	x27, x28, [sp, #80]
    b77c:	mov	x0, x22
    b780:	bl	4100 <PyBuffer_Release@plt>
    b784:	mov	x0, #0x0                   	// #0
    b788:	ldp	x19, x20, [sp, #16]
    b78c:	ldp	x21, x22, [sp, #32]
    b790:	ldp	x29, x30, [sp], #368
    b794:	ret
    b798:	bl	4660 <__errno_location@plt>
    b79c:	ldr	w0, [x0]
    b7a0:	cmp	w0, #0x4
    b7a4:	b.ne	b768 <PySequence_Fast@plt+0x7058>  // b.any
    b7a8:	bl	45e0 <PyErr_CheckSignals@plt>
    b7ac:	cbnz	w0, b770 <PySequence_Fast@plt+0x7060>
    b7b0:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    b7b4:	ldr	x1, [sp, #104]
    b7b8:	subs	x0, x1, x0
    b7bc:	b.mi	b82c <PySequence_Fast@plt+0x711c>  // b.first
    b7c0:	ldr	w2, [x19, #16]
    b7c4:	cmn	w2, #0x1
    b7c8:	b.eq	b820 <PySequence_Fast@plt+0x7110>  // b.none
    b7cc:	str	w2, [sp, #152]
    b7d0:	mov	w2, #0x4                   	// #4
    b7d4:	mov	w1, #0x1                   	// #1
    b7d8:	strh	w2, [sp, #156]
    b7dc:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    b7e0:	mov	x20, x0
    b7e4:	bl	4570 <PyEval_SaveThread@plt>
    b7e8:	mov	x3, x0
    b7ec:	ldr	x0, [sp, #120]
    b7f0:	cmp	x20, #0x0
    b7f4:	csinv	x2, x20, xzr, ge  // ge = tcont
    b7f8:	mov	x1, #0x1                   	// #1
    b7fc:	str	x3, [sp, #112]
    b800:	bl	4200 <poll@plt>
    b804:	mov	w20, w0
    b808:	ldr	x3, [sp, #112]
    b80c:	mov	x0, x3
    b810:	bl	40c0 <PyEval_RestoreThread@plt>
    b814:	cmp	w20, #0x0
    b818:	b.lt	b798 <PySequence_Fast@plt+0x7088>  // b.tstop
    b81c:	b.eq	b82c <PySequence_Fast@plt+0x711c>  // b.none
    b820:	mov	w0, #0x1                   	// #1
    b824:	str	w0, [sp, #112]
    b828:	b	b6d0 <PySequence_Fast@plt+0x6fc0>
    b82c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    b830:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    b834:	add	x1, x1, #0x410
    b838:	ldr	x0, [x0, #3872]
    b83c:	bl	41d0 <PyErr_SetString@plt>
    b840:	ldp	x23, x24, [sp, #48]
    b844:	ldp	x25, x26, [sp, #64]
    b848:	ldp	x27, x28, [sp, #80]
    b84c:	b	b77c <PySequence_Fast@plt+0x706c>
    b850:	stp	x29, x30, [sp, #-256]!
    b854:	adrp	x4, 10000 <PyInit__socket@@Base+0x2e80>
    b858:	add	x4, x4, #0x50
    b85c:	mov	x29, sp
    b860:	stp	x21, x22, [sp, #32]
    b864:	add	x21, sp, #0x80
    b868:	mov	x2, x21
    b86c:	add	x3, sp, #0x70
    b870:	stp	x19, x20, [sp, #16]
    b874:	mov	x19, x0
    b878:	mov	x20, x1
    b87c:	bl	a9f8 <PySequence_Fast@plt+0x62e8>
    b880:	cbz	w0, b900 <PySequence_Fast@plt+0x71f0>
    b884:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    b888:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    b88c:	mov	x3, x20
    b890:	add	x1, x1, #0x38
    b894:	add	x0, x0, #0x60
    b898:	mov	x2, x19
    b89c:	bl	44a0 <PySys_Audit@plt>
    b8a0:	tbnz	w0, #31, b900 <PySequence_Fast@plt+0x71f0>
    b8a4:	ldr	w20, [sp, #112]
    b8a8:	bl	4570 <PyEval_SaveThread@plt>
    b8ac:	mov	x1, x21
    b8b0:	mov	x21, x0
    b8b4:	ldr	w0, [x19, #16]
    b8b8:	mov	w2, w20
    b8bc:	bl	4480 <connect@plt>
    b8c0:	mov	w20, w0
    b8c4:	mov	x0, x21
    b8c8:	bl	40c0 <PyEval_RestoreThread@plt>
    b8cc:	cbz	w20, b914 <PySequence_Fast@plt+0x7204>
    b8d0:	stp	x25, x26, [sp, #64]
    b8d4:	bl	4660 <__errno_location@plt>
    b8d8:	ldr	w20, [x0]
    b8dc:	mov	x21, x0
    b8e0:	cmp	w20, #0x4
    b8e4:	b.eq	b92c <PySequence_Fast@plt+0x721c>  // b.none
    b8e8:	ldr	x25, [x19, #40]
    b8ec:	cmp	w20, #0x73
    b8f0:	ccmp	x25, #0x0, #0x4, eq  // eq = none
    b8f4:	b.gt	b93c <PySequence_Fast@plt+0x722c>
    b8f8:	tbz	w20, #31, bb4c <PySequence_Fast@plt+0x743c>
    b8fc:	ldp	x25, x26, [sp, #64]
    b900:	mov	x0, #0x0                   	// #0
    b904:	ldp	x19, x20, [sp, #16]
    b908:	ldp	x21, x22, [sp, #32]
    b90c:	ldp	x29, x30, [sp], #256
    b910:	ret
    b914:	mov	x0, #0x0                   	// #0
    b918:	bl	4310 <PyLong_FromLong@plt>
    b91c:	ldp	x19, x20, [sp, #16]
    b920:	ldp	x21, x22, [sp, #32]
    b924:	ldp	x29, x30, [sp], #256
    b928:	ret
    b92c:	bl	45e0 <PyErr_CheckSignals@plt>
    b930:	cbnz	w0, b8fc <PySequence_Fast@plt+0x71ec>
    b934:	ldr	x25, [x19, #40]
    b938:	cbz	x25, ba4c <PySequence_Fast@plt+0x733c>
    b93c:	add	x22, sp, #0x78
    b940:	stp	x23, x24, [sp, #48]
    b944:	add	x24, sp, #0x74
    b948:	mov	x26, #0x0                   	// #0
    b94c:	mov	w23, #0x4                   	// #4
    b950:	stp	x27, x28, [sp, #80]
    b954:	mov	w27, #0x0                   	// #0
    b958:	mov	w28, #0xc                   	// #12
    b95c:	cmp	x25, #0x0
    b960:	b.le	bab8 <PySequence_Fast@plt+0x73a8>
    b964:	cbnz	w27, ba28 <PySequence_Fast@plt+0x7318>
    b968:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    b96c:	add	x26, x0, x25
    b970:	mov	x0, x25
    b974:	ldr	w2, [x19, #16]
    b978:	cmn	w2, #0x1
    b97c:	b.eq	b9c8 <PySequence_Fast@plt+0x72b8>  // b.none
    b980:	mov	w1, #0x1                   	// #1
    b984:	str	w2, [sp, #120]
    b988:	strh	w28, [sp, #124]
    b98c:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    b990:	mov	x20, x0
    b994:	bl	4570 <PyEval_SaveThread@plt>
    b998:	cmp	x20, #0x0
    b99c:	mov	x1, #0x1                   	// #1
    b9a0:	csinv	x2, x20, xzr, ge  // ge = tcont
    b9a4:	mov	x27, x0
    b9a8:	mov	x0, x22
    b9ac:	bl	4200 <poll@plt>
    b9b0:	mov	w20, w0
    b9b4:	mov	x0, x27
    b9b8:	bl	40c0 <PyEval_RestoreThread@plt>
    b9bc:	cmp	w20, #0x0
    b9c0:	b.lt	bb1c <PySequence_Fast@plt+0x740c>  // b.tstop
    b9c4:	b.eq	ba34 <PySequence_Fast@plt+0x7324>  // b.none
    b9c8:	mov	w27, #0x1                   	// #1
    b9cc:	nop
    b9d0:	bl	4570 <PyEval_SaveThread@plt>
    b9d4:	mov	x20, x0
    b9d8:	ldr	w0, [x19, #16]
    b9dc:	mov	x4, x22
    b9e0:	mov	x3, x24
    b9e4:	mov	w2, #0x4                   	// #4
    b9e8:	mov	w1, #0x1                   	// #1
    b9ec:	str	w23, [sp, #120]
    b9f0:	bl	4530 <getsockopt@plt>
    b9f4:	cbnz	w0, ba5c <PySequence_Fast@plt+0x734c>
    b9f8:	ldr	w0, [sp, #116]
    b9fc:	cmp	w0, #0x6a
    ba00:	b.eq	ba08 <PySequence_Fast@plt+0x72f8>  // b.none
    ba04:	cbnz	w0, ba88 <PySequence_Fast@plt+0x7378>
    ba08:	mov	x0, x20
    ba0c:	bl	40c0 <PyEval_RestoreThread@plt>
    ba10:	mov	x0, #0x0                   	// #0
    ba14:	ldp	x23, x24, [sp, #48]
    ba18:	ldp	x25, x26, [sp, #64]
    ba1c:	ldp	x27, x28, [sp, #80]
    ba20:	bl	4310 <PyLong_FromLong@plt>
    ba24:	b	b91c <PySequence_Fast@plt+0x720c>
    ba28:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    ba2c:	subs	x0, x26, x0
    ba30:	b.pl	b974 <PySequence_Fast@plt+0x7264>  // b.nfrst
    ba34:	mov	x0, #0xb                   	// #11
    ba38:	ldp	x23, x24, [sp, #48]
    ba3c:	ldp	x25, x26, [sp, #64]
    ba40:	ldp	x27, x28, [sp, #80]
    ba44:	bl	4310 <PyLong_FromLong@plt>
    ba48:	b	b91c <PySequence_Fast@plt+0x720c>
    ba4c:	mov	x0, #0x4                   	// #4
    ba50:	ldp	x25, x26, [sp, #64]
    ba54:	bl	4310 <PyLong_FromLong@plt>
    ba58:	b	b91c <PySequence_Fast@plt+0x720c>
    ba5c:	mov	x0, x20
    ba60:	bl	40c0 <PyEval_RestoreThread@plt>
    ba64:	ldr	w20, [x21]
    ba68:	cmp	w20, #0x4
    ba6c:	b.ne	ba98 <PySequence_Fast@plt+0x7388>  // b.any
    ba70:	bl	45e0 <PyErr_CheckSignals@plt>
    ba74:	cbz	w0, b9d0 <PySequence_Fast@plt+0x72c0>
    ba78:	ldp	x23, x24, [sp, #48]
    ba7c:	ldp	x25, x26, [sp, #64]
    ba80:	ldp	x27, x28, [sp, #80]
    ba84:	b	b900 <PySequence_Fast@plt+0x71f0>
    ba88:	str	w0, [x21]
    ba8c:	mov	x0, x20
    ba90:	bl	40c0 <PyEval_RestoreThread@plt>
    ba94:	b	ba64 <PySequence_Fast@plt+0x7354>
    ba98:	ldr	x0, [x19, #40]
    ba9c:	cmp	x0, #0x0
    baa0:	ccmp	w20, #0xb, #0x0, gt
    baa4:	b.eq	b95c <PySequence_Fast@plt+0x724c>  // b.none
    baa8:	ldp	x23, x24, [sp, #48]
    baac:	ldp	x27, x28, [sp, #80]
    bab0:	tbnz	w20, #31, b8fc <PySequence_Fast@plt+0x71ec>
    bab4:	b	bb4c <PySequence_Fast@plt+0x743c>
    bab8:	ldr	w2, [x19, #16]
    babc:	cmn	w2, #0x1
    bac0:	b.eq	b9d0 <PySequence_Fast@plt+0x72c0>  // b.none
    bac4:	mov	w1, #0x1                   	// #1
    bac8:	mov	x0, x25
    bacc:	str	w2, [sp, #120]
    bad0:	strh	w28, [sp, #124]
    bad4:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    bad8:	mov	x20, x0
    badc:	bl	4570 <PyEval_SaveThread@plt>
    bae0:	cmp	x20, #0x0
    bae4:	mov	x3, x0
    bae8:	csinv	x2, x20, xzr, ge  // ge = tcont
    baec:	mov	x1, #0x1                   	// #1
    baf0:	mov	x0, x22
    baf4:	str	x3, [sp, #104]
    baf8:	bl	4200 <poll@plt>
    bafc:	mov	w20, w0
    bb00:	ldr	x3, [sp, #104]
    bb04:	mov	x0, x3
    bb08:	bl	40c0 <PyEval_RestoreThread@plt>
    bb0c:	cmp	w20, #0x0
    bb10:	b.lt	bb20 <PySequence_Fast@plt+0x7410>  // b.tstop
    bb14:	b.ne	b9d0 <PySequence_Fast@plt+0x72c0>  // b.any
    bb18:	b	ba34 <PySequence_Fast@plt+0x7324>
    bb1c:	mov	w27, #0x1                   	// #1
    bb20:	ldr	w20, [x21]
    bb24:	cmp	w20, #0x4
    bb28:	b.ne	bb38 <PySequence_Fast@plt+0x7428>  // b.any
    bb2c:	bl	45e0 <PyErr_CheckSignals@plt>
    bb30:	cbz	w0, b95c <PySequence_Fast@plt+0x724c>
    bb34:	b	ba78 <PySequence_Fast@plt+0x7368>
    bb38:	ldr	x0, [x19, #32]
    bb3c:	blr	x0
    bb40:	ldp	x23, x24, [sp, #48]
    bb44:	ldp	x27, x28, [sp, #80]
    bb48:	tbnz	w20, #31, b8fc <PySequence_Fast@plt+0x71ec>
    bb4c:	sxtw	x0, w20
    bb50:	ldp	x25, x26, [sp, #64]
    bb54:	bl	4310 <PyLong_FromLong@plt>
    bb58:	b	b91c <PySequence_Fast@plt+0x720c>
    bb5c:	nop
    bb60:	stp	x29, x30, [sp, #-256]!
    bb64:	adrp	x4, 10000 <PyInit__socket@@Base+0x2e80>
    bb68:	add	x4, x4, #0x70
    bb6c:	mov	x29, sp
    bb70:	stp	x21, x22, [sp, #32]
    bb74:	add	x21, sp, #0x80
    bb78:	mov	x2, x21
    bb7c:	add	x3, sp, #0x70
    bb80:	stp	x19, x20, [sp, #16]
    bb84:	mov	x19, x0
    bb88:	mov	x20, x1
    bb8c:	bl	a9f8 <PySequence_Fast@plt+0x62e8>
    bb90:	cbz	w0, bd70 <PySequence_Fast@plt+0x7660>
    bb94:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    bb98:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    bb9c:	mov	x3, x20
    bba0:	add	x1, x1, #0x38
    bba4:	add	x0, x0, #0x60
    bba8:	mov	x2, x19
    bbac:	bl	44a0 <PySys_Audit@plt>
    bbb0:	tbnz	w0, #31, bd70 <PySequence_Fast@plt+0x7660>
    bbb4:	ldr	w20, [sp, #112]
    bbb8:	bl	4570 <PyEval_SaveThread@plt>
    bbbc:	mov	x1, x21
    bbc0:	mov	x21, x0
    bbc4:	ldr	w0, [x19, #16]
    bbc8:	mov	w2, w20
    bbcc:	bl	4480 <connect@plt>
    bbd0:	mov	w20, w0
    bbd4:	mov	x0, x21
    bbd8:	bl	40c0 <PyEval_RestoreThread@plt>
    bbdc:	cbz	w20, bd1c <PySequence_Fast@plt+0x760c>
    bbe0:	stp	x23, x24, [sp, #48]
    bbe4:	bl	4660 <__errno_location@plt>
    bbe8:	ldr	w21, [x0]
    bbec:	mov	x20, x0
    bbf0:	cmp	w21, #0x4
    bbf4:	b.eq	bc2c <PySequence_Fast@plt+0x751c>  // b.none
    bbf8:	ldr	x24, [x19, #40]
    bbfc:	cmp	w21, #0x73
    bc00:	ccmp	x24, #0x0, #0x4, eq  // eq = none
    bc04:	b.gt	bc3c <PySequence_Fast@plt+0x752c>
    bc08:	ldr	x0, [x19, #32]
    bc0c:	str	w21, [x20]
    bc10:	blr	x0
    bc14:	ldp	x23, x24, [sp, #48]
    bc18:	mov	x0, #0x0                   	// #0
    bc1c:	ldp	x19, x20, [sp, #16]
    bc20:	ldp	x21, x22, [sp, #32]
    bc24:	ldp	x29, x30, [sp], #256
    bc28:	ret
    bc2c:	bl	45e0 <PyErr_CheckSignals@plt>
    bc30:	cbnz	w0, be74 <PySequence_Fast@plt+0x7764>
    bc34:	ldr	x24, [x19, #40]
    bc38:	cbz	x24, bc08 <PySequence_Fast@plt+0x74f8>
    bc3c:	add	x23, sp, #0x74
    bc40:	add	x21, sp, #0x78
    bc44:	mov	w22, #0x4                   	// #4
    bc48:	stp	x25, x26, [sp, #64]
    bc4c:	mov	w26, #0x0                   	// #0
    bc50:	mov	x25, #0x0                   	// #0
    bc54:	stp	x27, x28, [sp, #80]
    bc58:	mov	w27, #0xc                   	// #12
    bc5c:	cmp	x24, #0x0
    bc60:	b.le	bdf4 <PySequence_Fast@plt+0x76e4>
    bc64:	cbnz	w26, bd84 <PySequence_Fast@plt+0x7674>
    bc68:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    bc6c:	add	x25, x0, x24
    bc70:	mov	x0, x24
    bc74:	ldr	w2, [x19, #16]
    bc78:	cmn	w2, #0x1
    bc7c:	b.eq	bcc8 <PySequence_Fast@plt+0x75b8>  // b.none
    bc80:	mov	w1, #0x1                   	// #1
    bc84:	str	w2, [sp, #120]
    bc88:	strh	w27, [sp, #124]
    bc8c:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    bc90:	mov	x26, x0
    bc94:	bl	4570 <PyEval_SaveThread@plt>
    bc98:	cmp	x26, #0x0
    bc9c:	mov	x1, #0x1                   	// #1
    bca0:	csinv	x2, x26, xzr, ge  // ge = tcont
    bca4:	mov	x28, x0
    bca8:	mov	x0, x21
    bcac:	bl	4200 <poll@plt>
    bcb0:	mov	w26, w0
    bcb4:	mov	x0, x28
    bcb8:	bl	40c0 <PyEval_RestoreThread@plt>
    bcbc:	cmp	w26, #0x0
    bcc0:	b.lt	be58 <PySequence_Fast@plt+0x7748>  // b.tstop
    bcc4:	b.eq	bd90 <PySequence_Fast@plt+0x7680>  // b.none
    bcc8:	mov	w26, #0x1                   	// #1
    bccc:	nop
    bcd0:	bl	4570 <PyEval_SaveThread@plt>
    bcd4:	mov	x28, x0
    bcd8:	ldr	w0, [x19, #16]
    bcdc:	mov	x4, x21
    bce0:	mov	x3, x23
    bce4:	mov	w2, #0x4                   	// #4
    bce8:	mov	w1, #0x1                   	// #1
    bcec:	str	w22, [sp, #120]
    bcf0:	bl	4530 <getsockopt@plt>
    bcf4:	cbnz	w0, bd44 <PySequence_Fast@plt+0x7634>
    bcf8:	ldr	w0, [sp, #116]
    bcfc:	cmp	w0, #0x6a
    bd00:	b.eq	bd08 <PySequence_Fast@plt+0x75f8>  // b.none
    bd04:	cbnz	w0, bdb8 <PySequence_Fast@plt+0x76a8>
    bd08:	mov	x0, x28
    bd0c:	bl	40c0 <PyEval_RestoreThread@plt>
    bd10:	ldp	x23, x24, [sp, #48]
    bd14:	ldp	x25, x26, [sp, #64]
    bd18:	ldp	x27, x28, [sp, #80]
    bd1c:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    bd20:	ldp	x19, x20, [sp, #16]
    bd24:	ldr	x1, [x1, #4024]
    bd28:	ldp	x21, x22, [sp, #32]
    bd2c:	mov	x0, x1
    bd30:	ldr	x2, [x1]
    bd34:	add	x2, x2, #0x1
    bd38:	str	x2, [x1]
    bd3c:	ldp	x29, x30, [sp], #256
    bd40:	ret
    bd44:	mov	x0, x28
    bd48:	bl	40c0 <PyEval_RestoreThread@plt>
    bd4c:	ldr	w0, [x20]
    bd50:	cmp	w0, #0x4
    bd54:	b.ne	bdc8 <PySequence_Fast@plt+0x76b8>  // b.any
    bd58:	bl	45e0 <PyErr_CheckSignals@plt>
    bd5c:	cbz	w0, bcd0 <PySequence_Fast@plt+0x75c0>
    bd60:	ldp	x23, x24, [sp, #48]
    bd64:	ldp	x25, x26, [sp, #64]
    bd68:	ldp	x27, x28, [sp, #80]
    bd6c:	nop
    bd70:	mov	x0, #0x0                   	// #0
    bd74:	ldp	x19, x20, [sp, #16]
    bd78:	ldp	x21, x22, [sp, #32]
    bd7c:	ldp	x29, x30, [sp], #256
    bd80:	ret
    bd84:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    bd88:	subs	x0, x25, x0
    bd8c:	b.pl	bc74 <PySequence_Fast@plt+0x7564>  // b.nfrst
    bd90:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    bd94:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    bd98:	add	x1, x1, #0x410
    bd9c:	ldr	x0, [x0, #3872]
    bda0:	bl	41d0 <PyErr_SetString@plt>
    bda4:	mov	x0, #0x0                   	// #0
    bda8:	ldp	x23, x24, [sp, #48]
    bdac:	ldp	x25, x26, [sp, #64]
    bdb0:	ldp	x27, x28, [sp, #80]
    bdb4:	b	bc1c <PySequence_Fast@plt+0x750c>
    bdb8:	str	w0, [x20]
    bdbc:	mov	x0, x28
    bdc0:	bl	40c0 <PyEval_RestoreThread@plt>
    bdc4:	b	bd4c <PySequence_Fast@plt+0x763c>
    bdc8:	ldr	x1, [x19, #40]
    bdcc:	cmp	x1, #0x0
    bdd0:	ccmp	w0, #0xb, #0x0, gt
    bdd4:	b.eq	bc5c <PySequence_Fast@plt+0x754c>  // b.none
    bdd8:	ldr	x0, [x19, #32]
    bddc:	blr	x0
    bde0:	mov	x0, #0x0                   	// #0
    bde4:	ldp	x23, x24, [sp, #48]
    bde8:	ldp	x25, x26, [sp, #64]
    bdec:	ldp	x27, x28, [sp, #80]
    bdf0:	b	bc1c <PySequence_Fast@plt+0x750c>
    bdf4:	ldr	w2, [x19, #16]
    bdf8:	cmn	w2, #0x1
    bdfc:	b.eq	bcd0 <PySequence_Fast@plt+0x75c0>  // b.none
    be00:	mov	w1, #0x1                   	// #1
    be04:	mov	x0, x24
    be08:	str	w2, [sp, #120]
    be0c:	strh	w27, [sp, #124]
    be10:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    be14:	mov	x28, x0
    be18:	bl	4570 <PyEval_SaveThread@plt>
    be1c:	cmp	x28, #0x0
    be20:	mov	x3, x0
    be24:	csinv	x2, x28, xzr, ge  // ge = tcont
    be28:	mov	x1, #0x1                   	// #1
    be2c:	mov	x0, x21
    be30:	str	x3, [sp, #104]
    be34:	bl	4200 <poll@plt>
    be38:	mov	w28, w0
    be3c:	ldr	x3, [sp, #104]
    be40:	mov	x0, x3
    be44:	bl	40c0 <PyEval_RestoreThread@plt>
    be48:	cmp	w28, #0x0
    be4c:	b.lt	be5c <PySequence_Fast@plt+0x774c>  // b.tstop
    be50:	b.ne	bcd0 <PySequence_Fast@plt+0x75c0>  // b.any
    be54:	b	bd90 <PySequence_Fast@plt+0x7680>
    be58:	mov	w26, #0x1                   	// #1
    be5c:	ldr	w0, [x20]
    be60:	cmp	w0, #0x4
    be64:	b.ne	bdd8 <PySequence_Fast@plt+0x76c8>  // b.any
    be68:	bl	45e0 <PyErr_CheckSignals@plt>
    be6c:	cbz	w0, bc5c <PySequence_Fast@plt+0x754c>
    be70:	b	bd60 <PySequence_Fast@plt+0x7650>
    be74:	mov	x0, #0x0                   	// #0
    be78:	ldp	x23, x24, [sp, #48]
    be7c:	b	bd74 <PySequence_Fast@plt+0x7664>
    be80:	stp	x29, x30, [sp, #-336]!
    be84:	mov	x29, sp
    be88:	stp	x19, x20, [sp, #16]
    be8c:	mov	x20, x0
    be90:	ldr	w19, [x0, #20]
    be94:	stp	x21, x22, [sp, #32]
    be98:	mov	x21, x1
    be9c:	cmp	w19, #0x1d
    bea0:	b.eq	c4cc <PySequence_Fast@plt+0x7dbc>  // b.none
    bea4:	b.gt	bf88 <PySequence_Fast@plt+0x7878>
    bea8:	cmp	w19, #0x10
    beac:	b.eq	c3b8 <PySequence_Fast@plt+0x7ca8>  // b.none
    beb0:	b.gt	c0ec <PySequence_Fast@plt+0x79dc>
    beb4:	cmp	w19, #0x2
    beb8:	b.eq	c2ac <PySequence_Fast@plt+0x7b9c>  // b.none
    bebc:	cmp	w19, #0xa
    bec0:	b.ne	c050 <PySequence_Fast@plt+0x7940>  // b.any
    bec4:	ldr	x0, [x1, #8]
    bec8:	stp	xzr, xzr, [sp, #128]
    becc:	ldr	x1, [x0, #168]
    bed0:	str	wzr, [sp, #80]
    bed4:	str	wzr, [sp, #88]
    bed8:	tbz	w1, #26, c5d8 <PySequence_Fast@plt+0x7ec8>
    bedc:	adrp	x2, 6000 <PySequence_Fast@plt+0x18f0>
    bee0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    bee4:	add	x2, x2, #0xb48
    bee8:	add	x1, x1, #0xc98
    beec:	add	x6, sp, #0x58
    bef0:	add	x5, sp, #0x50
    bef4:	add	x4, sp, #0x48
    bef8:	add	x3, sp, #0x80
    befc:	mov	x0, x21
    bf00:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    bf04:	cbz	w0, c684 <PySequence_Fast@plt+0x7f74>
    bf08:	ldr	x0, [sp, #136]
    bf0c:	mov	w3, w19
    bf10:	add	x1, sp, #0xd0
    bf14:	mov	x2, #0x1c                  	// #28
    bf18:	bl	a2d8 <PySequence_Fast@plt+0x5bc8>
    bf1c:	mov	w19, w0
    bf20:	ldr	x1, [sp, #128]
    bf24:	cbz	x1, bf3c <PySequence_Fast@plt+0x782c>
    bf28:	ldr	x0, [x1]
    bf2c:	str	xzr, [sp, #128]
    bf30:	sub	x0, x0, #0x1
    bf34:	str	x0, [x1]
    bf38:	cbz	x0, c6ec <PySequence_Fast@plt+0x7fdc>
    bf3c:	tbnz	w19, #31, c380 <PySequence_Fast@plt+0x7c70>
    bf40:	ldr	w0, [sp, #72]
    bf44:	mov	w1, #0xffff                	// #65535
    bf48:	cmp	w0, w1
    bf4c:	b.hi	c820 <PySequence_Fast@plt+0x8110>  // b.pmore
    bf50:	ldr	w1, [sp, #80]
    bf54:	mov	w2, #0xfffff               	// #1048575
    bf58:	cmp	w1, w2
    bf5c:	b.hi	c9d4 <PySequence_Fast@plt+0x82c4>  // b.pmore
    bf60:	ldr	w3, [x20, #20]
    bf64:	rev16	w0, w0
    bf68:	ldr	w2, [sp, #88]
    bf6c:	rev	w1, w1
    bf70:	mov	w22, #0x1c                  	// #28
    bf74:	strh	w3, [sp, #208]
    bf78:	strh	w0, [sp, #210]
    bf7c:	str	w1, [sp, #212]
    bf80:	str	w2, [sp, #232]
    bf84:	b	bfdc <PySequence_Fast@plt+0x78cc>
    bf88:	cmp	w19, #0x28
    bf8c:	b.eq	c3d4 <PySequence_Fast@plt+0x7cc4>  // b.none
    bf90:	b.le	c1e8 <PySequence_Fast@plt+0x7ad8>
    bf94:	cmp	w19, #0x2a
    bf98:	b.ne	c420 <PySequence_Fast@plt+0x7d10>  // b.any
    bf9c:	ldr	x0, [x1, #8]
    bfa0:	ldr	x1, [x0, #168]
    bfa4:	tbz	w1, #26, c604 <PySequence_Fast@plt+0x7ef4>
    bfa8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    bfac:	add	x3, sp, #0x80
    bfb0:	add	x1, x1, #0xb88
    bfb4:	add	x2, sp, #0x58
    bfb8:	mov	x0, x21
    bfbc:	mov	x22, #0x0                   	// #0
    bfc0:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    bfc4:	cbz	w0, c03c <PySequence_Fast@plt+0x792c>
    bfc8:	ldr	w1, [sp, #88]
    bfcc:	mov	w22, #0xc                   	// #12
    bfd0:	ldr	w0, [sp, #128]
    bfd4:	strh	w19, [sp, #208]
    bfd8:	stp	w1, w0, [sp, #212]
    bfdc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    bfe0:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    bfe4:	mov	x3, x21
    bfe8:	add	x1, x1, #0x38
    bfec:	add	x0, x0, #0x80
    bff0:	mov	x2, x20
    bff4:	bl	44a0 <PySys_Audit@plt>
    bff8:	tbnz	w0, #31, c380 <PySequence_Fast@plt+0x7c70>
    bffc:	bl	4570 <PyEval_SaveThread@plt>
    c000:	mov	x21, x0
    c004:	ldr	w0, [x20, #16]
    c008:	mov	w2, w22
    c00c:	add	x1, sp, #0xd0
    c010:	bl	40f0 <bind@plt>
    c014:	mov	w19, w0
    c018:	mov	x0, x21
    c01c:	bl	40c0 <PyEval_RestoreThread@plt>
    c020:	tbnz	w19, #31, c398 <PySequence_Fast@plt+0x7c88>
    c024:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c028:	ldr	x0, [x0, #4024]
    c02c:	mov	x22, x0
    c030:	ldr	x1, [x0]
    c034:	add	x1, x1, #0x1
    c038:	str	x1, [x0]
    c03c:	mov	x0, x22
    c040:	ldp	x19, x20, [sp, #16]
    c044:	ldp	x21, x22, [sp, #32]
    c048:	ldp	x29, x30, [sp], #336
    c04c:	ret
    c050:	cmp	w19, #0x1
    c054:	b.ne	c420 <PySequence_Fast@plt+0x7d10>  // b.any
    c058:	ldr	x0, [x1, #8]
    c05c:	ldr	x0, [x0, #168]
    c060:	tbnz	w0, #28, c654 <PySequence_Fast@plt+0x7f44>
    c064:	ldr	x0, [x1]
    c068:	mov	x19, x1
    c06c:	str	x23, [sp, #48]
    c070:	add	x0, x0, #0x1
    c074:	str	x0, [x1]
    c078:	add	x23, sp, #0x80
    c07c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c080:	mov	x2, x23
    c084:	add	x1, x1, #0xab8
    c088:	mov	x0, x19
    c08c:	bl	4300 <_PyArg_Parse_SizeT@plt>
    c090:	cbz	w0, c7dc <PySequence_Fast@plt+0x80cc>
    c094:	ldr	x22, [sp, #144]
    c098:	cmp	x22, #0x0
    c09c:	b.le	c66c <PySequence_Fast@plt+0x7f5c>
    c0a0:	ldr	x1, [sp, #128]
    c0a4:	ldrb	w0, [x1]
    c0a8:	cbnz	w0, c66c <PySequence_Fast@plt+0x7f5c>
    c0ac:	cmp	x22, #0x6c
    c0b0:	b.gt	c340 <PySequence_Fast@plt+0x7c30>
    c0b4:	ldr	w3, [x20, #20]
    c0b8:	mov	x2, x22
    c0bc:	add	x0, sp, #0xd2
    c0c0:	strh	w3, [sp, #208]
    c0c4:	add	w22, w22, #0x2
    c0c8:	bl	3fa0 <memcpy@plt>
    c0cc:	mov	x0, x23
    c0d0:	bl	4100 <PyBuffer_Release@plt>
    c0d4:	ldr	x0, [x19]
    c0d8:	sub	x0, x0, #0x1
    c0dc:	str	x0, [x19]
    c0e0:	cbz	x0, c918 <PySequence_Fast@plt+0x8208>
    c0e4:	ldr	x23, [sp, #48]
    c0e8:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c0ec:	cmp	w19, #0x11
    c0f0:	b.ne	c2a4 <PySequence_Fast@plt+0x7b94>  // b.any
    c0f4:	ldr	x0, [x1, #8]
    c0f8:	stp	xzr, xzr, [sp, #128]
    c0fc:	ldr	x1, [x0, #168]
    c100:	stp	wzr, wzr, [sp, #68]
    c104:	stp	xzr, xzr, [sp, #144]
    c108:	stp	xzr, xzr, [sp, #160]
    c10c:	stp	xzr, xzr, [sp, #176]
    c110:	stp	xzr, xzr, [sp, #192]
    c114:	tbz	w1, #26, c57c <PySequence_Fast@plt+0x7e6c>
    c118:	str	x23, [sp, #48]
    c11c:	add	x23, sp, #0x80
    c120:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c124:	add	x5, sp, #0x44
    c128:	add	x1, x1, #0xd48
    c12c:	add	x4, sp, #0x48
    c130:	add	x3, sp, #0x40
    c134:	add	x2, sp, #0x50
    c138:	mov	x0, x21
    c13c:	mov	x6, x23
    c140:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    c144:	cbz	w0, c6b8 <PySequence_Fast@plt+0x7fa8>
    c148:	ldr	x1, [sp, #80]
    c14c:	add	x3, sp, #0x58
    c150:	mov	x2, #0x10                  	// #16
    c154:	mov	x0, x3
    c158:	bl	4650 <strncpy@plt>
    c15c:	mov	x2, x0
    c160:	ldr	w0, [x20, #16]
    c164:	mov	x1, #0x8933                	// #35123
    c168:	strb	wzr, [sp, #103]
    c16c:	bl	4700 <ioctl@plt>
    c170:	tbnz	w0, #31, c848 <PySequence_Fast@plt+0x8138>
    c174:	ldr	x1, [sp, #128]
    c178:	cbz	x1, c188 <PySequence_Fast@plt+0x7a78>
    c17c:	ldr	x0, [sp, #144]
    c180:	cmp	x0, #0x8
    c184:	b.gt	ca1c <PySequence_Fast@plt+0x830c>
    c188:	ldr	w0, [sp, #64]
    c18c:	mov	w2, #0xffff                	// #65535
    c190:	cmp	w0, w2
    c194:	b.hi	c9a0 <PySequence_Fast@plt+0x8290>  // b.pmore
    c198:	ldp	w3, w2, [sp, #68]
    c19c:	rev16	w0, w0
    c1a0:	ldr	w4, [sp, #104]
    c1a4:	mov	w5, #0x11                  	// #17
    c1a8:	strh	w5, [sp, #208]
    c1ac:	strh	w0, [sp, #210]
    c1b0:	str	w4, [sp, #212]
    c1b4:	strh	w3, [sp, #216]
    c1b8:	strb	w2, [sp, #218]
    c1bc:	cbz	x1, c8ec <PySequence_Fast@plt+0x81dc>
    c1c0:	ldr	x19, [sp, #144]
    c1c4:	add	x0, sp, #0xdc
    c1c8:	mov	x2, x19
    c1cc:	bl	3fa0 <memcpy@plt>
    c1d0:	strb	w19, [sp, #219]
    c1d4:	mov	x0, x23
    c1d8:	mov	w22, #0x14                  	// #20
    c1dc:	bl	4100 <PyBuffer_Release@plt>
    c1e0:	ldr	x23, [sp, #48]
    c1e4:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c1e8:	cmp	w19, #0x1e
    c1ec:	b.eq	c448 <PySequence_Fast@plt+0x7d38>  // b.none
    c1f0:	cmp	w19, #0x26
    c1f4:	b.ne	c420 <PySequence_Fast@plt+0x7d10>  // b.any
    c1f8:	ldr	x0, [x1, #8]
    c1fc:	stp	xzr, xzr, [sp, #208]
    c200:	strh	w19, [sp, #208]
    c204:	ldr	x1, [x0, #168]
    c208:	str	x23, [sp, #48]
    c20c:	stp	xzr, xzr, [sp, #224]
    c210:	add	x23, sp, #0xd0
    c214:	stp	xzr, xzr, [sp, #240]
    c218:	stp	xzr, xzr, [sp, #256]
    c21c:	stp	xzr, xzr, [sp, #272]
    c220:	str	xzr, [sp, #288]
    c224:	tbz	w1, #26, c5a8 <PySequence_Fast@plt+0x7e98>
    c228:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c22c:	add	x5, x23, #0x14
    c230:	add	x1, x1, #0xf50
    c234:	add	x4, x23, #0x10
    c238:	add	x3, sp, #0x80
    c23c:	add	x2, sp, #0x58
    c240:	mov	x0, x21
    c244:	mov	x22, #0x0                   	// #0
    c248:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    c24c:	cbz	w0, c6d8 <PySequence_Fast@plt+0x7fc8>
    c250:	ldr	x19, [sp, #88]
    c254:	mov	x0, x19
    c258:	bl	4020 <strlen@plt>
    c25c:	cmp	x0, #0xd
    c260:	b.hi	c800 <PySequence_Fast@plt+0x80f0>  // b.pmore
    c264:	mov	x1, x19
    c268:	mov	x2, #0xe                   	// #14
    c26c:	add	x0, x23, #0x2
    c270:	bl	4650 <strncpy@plt>
    c274:	ldr	x19, [sp, #128]
    c278:	mov	x0, x19
    c27c:	bl	4020 <strlen@plt>
    c280:	cmp	x0, #0x3f
    c284:	b.hi	c8f4 <PySequence_Fast@plt+0x81e4>  // b.pmore
    c288:	add	x0, x23, #0x18
    c28c:	mov	x1, x19
    c290:	mov	x2, #0x40                  	// #64
    c294:	mov	w22, #0x58                  	// #88
    c298:	bl	4650 <strncpy@plt>
    c29c:	ldr	x23, [sp, #48]
    c2a0:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c2a4:	cmp	w19, #0x15
    c2a8:	b.ne	c420 <PySequence_Fast@plt+0x7d10>  // b.any
    c2ac:	ldr	x0, [x21, #8]
    c2b0:	stp	xzr, xzr, [sp, #128]
    c2b4:	ldr	x1, [x0, #168]
    c2b8:	tbz	w1, #26, c628 <PySequence_Fast@plt+0x7f18>
    c2bc:	adrp	x2, 6000 <PySequence_Fast@plt+0x18f0>
    c2c0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c2c4:	add	x2, x2, #0xb48
    c2c8:	add	x1, x1, #0xc10
    c2cc:	add	x4, sp, #0x58
    c2d0:	add	x3, sp, #0x80
    c2d4:	mov	x0, x21
    c2d8:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    c2dc:	cbz	w0, c684 <PySequence_Fast@plt+0x7f74>
    c2e0:	ldr	x0, [sp, #136]
    c2e4:	add	x1, sp, #0xd0
    c2e8:	mov	w3, #0x2                   	// #2
    c2ec:	mov	x2, #0x10                  	// #16
    c2f0:	bl	a2d8 <PySequence_Fast@plt+0x5bc8>
    c2f4:	mov	w19, w0
    c2f8:	ldr	x1, [sp, #128]
    c2fc:	cbz	x1, c314 <PySequence_Fast@plt+0x7c04>
    c300:	ldr	x0, [x1]
    c304:	str	xzr, [sp, #128]
    c308:	sub	x0, x0, #0x1
    c30c:	str	x0, [x1]
    c310:	cbz	x0, c6e0 <PySequence_Fast@plt+0x7fd0>
    c314:	tbnz	w19, #31, c380 <PySequence_Fast@plt+0x7c70>
    c318:	ldr	w0, [sp, #88]
    c31c:	mov	w1, #0xffff                	// #65535
    c320:	cmp	w0, w1
    c324:	b.hi	c820 <PySequence_Fast@plt+0x8110>  // b.pmore
    c328:	rev16	w0, w0
    c32c:	mov	w1, #0x2                   	// #2
    c330:	mov	w22, #0x10                  	// #16
    c334:	strh	w1, [sp, #208]
    c338:	strh	w0, [sp, #210]
    c33c:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c340:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c344:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c348:	add	x1, x1, #0xac0
    c34c:	ldr	x0, [x0, #3984]
    c350:	ldr	x0, [x0]
    c354:	bl	41d0 <PyErr_SetString@plt>
    c358:	mov	x0, x23
    c35c:	bl	4100 <PyBuffer_Release@plt>
    c360:	ldr	x0, [x19]
    c364:	sub	x0, x0, #0x1
    c368:	str	x0, [x19]
    c36c:	cbnz	x0, c378 <PySequence_Fast@plt+0x7c68>
    c370:	mov	x0, x19
    c374:	bl	4180 <_Py_Dealloc@plt>
    c378:	ldr	x23, [sp, #48]
    c37c:	nop
    c380:	mov	x22, #0x0                   	// #0
    c384:	mov	x0, x22
    c388:	ldp	x19, x20, [sp, #16]
    c38c:	ldp	x21, x22, [sp, #32]
    c390:	ldp	x29, x30, [sp], #336
    c394:	ret
    c398:	ldr	x0, [x20, #32]
    c39c:	blr	x0
    c3a0:	mov	x22, x0
    c3a4:	mov	x0, x22
    c3a8:	ldp	x19, x20, [sp, #16]
    c3ac:	ldp	x21, x22, [sp, #32]
    c3b0:	ldp	x29, x30, [sp], #336
    c3b4:	ret
    c3b8:	ldr	x0, [x1, #8]
    c3bc:	ldr	x1, [x0, #168]
    c3c0:	tbz	w1, #26, c748 <PySequence_Fast@plt+0x8038>
    c3c4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c3c8:	add	x3, sp, #0x80
    c3cc:	add	x1, x1, #0xb10
    c3d0:	b	bfb4 <PySequence_Fast@plt+0x78a4>
    c3d4:	ldr	x0, [x1, #8]
    c3d8:	stp	xzr, xzr, [sp, #208]
    c3dc:	ldr	x1, [x0, #168]
    c3e0:	tbz	w1, #26, c724 <PySequence_Fast@plt+0x8014>
    c3e4:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c3e8:	add	x3, sp, #0x58
    c3ec:	add	x1, x1, #0xb88
    c3f0:	add	x2, sp, #0x80
    c3f4:	mov	x0, x21
    c3f8:	mov	x22, #0x0                   	// #0
    c3fc:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    c400:	cbz	w0, c03c <PySequence_Fast@plt+0x792c>
    c404:	ldr	w2, [x20, #20]
    c408:	mov	w22, #0x10                  	// #16
    c40c:	ldr	w1, [sp, #88]
    c410:	ldr	w0, [sp, #128]
    c414:	strh	w2, [sp, #208]
    c418:	stp	w1, w0, [sp, #212]
    c41c:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c420:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c424:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c428:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c42c:	add	x2, x2, #0x78
    c430:	ldr	x0, [x0, #3984]
    c434:	add	x1, x1, #0xfc8
    c438:	mov	x22, #0x0                   	// #0
    c43c:	ldr	x0, [x0]
    c440:	bl	4620 <PyErr_Format@plt>
    c444:	b	c03c <PySequence_Fast@plt+0x792c>
    c448:	ldr	x0, [x21, #8]
    c44c:	mov	w1, #0x2                   	// #2
    c450:	str	w1, [sp, #128]
    c454:	ldr	x1, [x0, #168]
    c458:	tbz	w1, #26, c6f8 <PySequence_Fast@plt+0x7fe8>
    c45c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c460:	add	x6, sp, #0x80
    c464:	add	x1, x1, #0xe38
    c468:	add	x5, sp, #0x58
    c46c:	add	x4, sp, #0x50
    c470:	add	x3, sp, #0x48
    c474:	add	x2, sp, #0x44
    c478:	mov	x0, x21
    c47c:	mov	x22, #0x0                   	// #0
    c480:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    c484:	cbz	w0, c03c <PySequence_Fast@plt+0x792c>
    c488:	ldr	w0, [sp, #68]
    c48c:	ldr	w1, [sp, #128]
    c490:	stp	xzr, xzr, [sp, #208]
    c494:	cmp	w0, #0x1
    c498:	strh	w19, [sp, #208]
    c49c:	strb	w0, [sp, #210]
    c4a0:	strb	w1, [sp, #211]
    c4a4:	b.eq	c890 <PySequence_Fast@plt+0x8180>  // b.none
    c4a8:	cmp	w0, #0x2
    c4ac:	b.eq	c94c <PySequence_Fast@plt+0x823c>  // b.none
    c4b0:	cmp	w0, #0x3
    c4b4:	b.ne	c9fc <PySequence_Fast@plt+0x82ec>  // b.any
    c4b8:	ldr	w0, [sp, #72]
    c4bc:	mov	w22, #0x10                  	// #16
    c4c0:	ldr	w1, [sp, #80]
    c4c4:	stp	w1, w0, [sp, #212]
    c4c8:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c4cc:	ldr	w0, [x0, #28]
    c4d0:	cmp	w0, #0x2
    c4d4:	b.le	c54c <PySequence_Fast@plt+0x7e3c>
    c4d8:	cmp	w0, #0x6
    c4dc:	b.ne	c554 <PySequence_Fast@plt+0x7e44>  // b.any
    c4e0:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    c4e4:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    c4e8:	add	x5, sp, #0x58
    c4ec:	add	x1, x1, #0xf38
    c4f0:	ldr	x2, [x2, #3936]
    c4f4:	add	x4, sp, #0x50
    c4f8:	add	x3, sp, #0x48
    c4fc:	mov	x0, x21
    c500:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    c504:	cbz	w0, c380 <PySequence_Fast@plt+0x7c70>
    c508:	ldr	x0, [sp, #72]
    c50c:	ldr	x1, [x0, #16]
    c510:	cbnz	x1, c8ac <PySequence_Fast@plt+0x819c>
    c514:	mov	w4, #0x0                   	// #0
    c518:	str	wzr, [sp, #144]
    c51c:	mov	w2, #0x1d                  	// #29
    c520:	mov	w22, #0x18                  	// #24
    c524:	ldr	x1, [x0]
    c528:	strh	w2, [sp, #208]
    c52c:	ldp	x3, x2, [sp, #80]
    c530:	stp	w4, w3, [sp, #212]
    c534:	str	w2, [sp, #220]
    c538:	sub	x1, x1, #0x1
    c53c:	str	x1, [x0]
    c540:	cbnz	x1, bfdc <PySequence_Fast@plt+0x78cc>
    c544:	bl	4180 <_Py_Dealloc@plt>
    c548:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c54c:	cmp	w0, #0x0
    c550:	b.gt	c774 <PySequence_Fast@plt+0x8064>
    c554:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c558:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c55c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c560:	add	x2, x2, #0x78
    c564:	ldr	x0, [x0, #3984]
    c568:	add	x1, x1, #0xf00
    c56c:	mov	x22, #0x0                   	// #0
    c570:	ldr	x0, [x0]
    c574:	bl	4620 <PyErr_Format@plt>
    c578:	b	c03c <PySequence_Fast@plt+0x792c>
    c57c:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    c580:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c584:	ldr	x3, [x0, #24]
    c588:	add	x2, x2, #0x78
    c58c:	ldr	x0, [x1, #3976]
    c590:	mov	x22, #0x0                   	// #0
    c594:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c598:	add	x1, x1, #0xd10
    c59c:	ldr	x0, [x0]
    c5a0:	bl	4620 <PyErr_Format@plt>
    c5a4:	b	c03c <PySequence_Fast@plt+0x792c>
    c5a8:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    c5ac:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c5b0:	ldr	x3, [x0, #24]
    c5b4:	add	x2, x2, #0x78
    c5b8:	ldr	x0, [x1, #3976]
    c5bc:	mov	x22, #0x0                   	// #0
    c5c0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c5c4:	add	x1, x1, #0xf20
    c5c8:	ldr	x0, [x0]
    c5cc:	bl	4620 <PyErr_Format@plt>
    c5d0:	ldr	x23, [sp, #48]
    c5d4:	b	c03c <PySequence_Fast@plt+0x792c>
    c5d8:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    c5dc:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c5e0:	ldr	x3, [x0, #24]
    c5e4:	add	x2, x2, #0x78
    c5e8:	ldr	x0, [x1, #3976]
    c5ec:	mov	x22, #0x0                   	// #0
    c5f0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c5f4:	add	x1, x1, #0xc60
    c5f8:	ldr	x0, [x0]
    c5fc:	bl	4620 <PyErr_Format@plt>
    c600:	b	c03c <PySequence_Fast@plt+0x792c>
    c604:	adrp	x3, 27000 <PyInit__socket@@Base+0x19e80>
    c608:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c60c:	ldr	x2, [x0, #24]
    c610:	add	x1, x1, #0xb48
    c614:	ldr	x3, [x3, #3976]
    c618:	mov	x22, #0x0                   	// #0
    c61c:	ldr	x0, [x3]
    c620:	bl	4620 <PyErr_Format@plt>
    c624:	b	c03c <PySequence_Fast@plt+0x792c>
    c628:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    c62c:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c630:	ldr	x3, [x0, #24]
    c634:	add	x2, x2, #0x78
    c638:	ldr	x0, [x1, #3976]
    c63c:	mov	x22, #0x0                   	// #0
    c640:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c644:	add	x1, x1, #0xbe0
    c648:	ldr	x0, [x0]
    c64c:	bl	4620 <PyErr_Format@plt>
    c650:	b	c03c <PySequence_Fast@plt+0x792c>
    c654:	mov	x0, x1
    c658:	bl	4320 <PyUnicode_EncodeFSDefault@plt>
    c65c:	mov	x19, x0
    c660:	cbz	x0, c380 <PySequence_Fast@plt+0x7c70>
    c664:	str	x23, [sp, #48]
    c668:	b	c078 <PySequence_Fast@plt+0x7968>
    c66c:	cmp	x22, #0x6b
    c670:	b.hi	c340 <PySequence_Fast@plt+0x7c30>  // b.pmore
    c674:	add	x0, sp, #0xd2
    c678:	ldr	x1, [sp, #128]
    c67c:	strb	wzr, [x0, x22]
    c680:	b	c0b4 <PySequence_Fast@plt+0x79a4>
    c684:	adrp	x19, 27000 <PyInit__socket@@Base+0x19e80>
    c688:	ldr	x19, [x19, #4008]
    c68c:	ldr	x0, [x19]
    c690:	bl	4250 <PyErr_ExceptionMatches@plt>
    c694:	cbz	w0, c380 <PySequence_Fast@plt+0x7c70>
    c698:	ldr	x0, [x19]
    c69c:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c6a0:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c6a4:	add	x2, x2, #0x78
    c6a8:	add	x1, x1, #0xc40
    c6ac:	mov	x22, #0x0                   	// #0
    c6b0:	bl	4620 <PyErr_Format@plt>
    c6b4:	b	c03c <PySequence_Fast@plt+0x792c>
    c6b8:	adrp	x19, 27000 <PyInit__socket@@Base+0x19e80>
    c6bc:	ldr	x19, [x19, #4008]
    c6c0:	ldr	x0, [x19]
    c6c4:	bl	4250 <PyErr_ExceptionMatches@plt>
    c6c8:	cbnz	w0, c928 <PySequence_Fast@plt+0x8218>
    c6cc:	mov	x22, #0x0                   	// #0
    c6d0:	ldr	x23, [sp, #48]
    c6d4:	b	c03c <PySequence_Fast@plt+0x792c>
    c6d8:	ldr	x23, [sp, #48]
    c6dc:	b	c03c <PySequence_Fast@plt+0x792c>
    c6e0:	mov	x0, x1
    c6e4:	bl	4180 <_Py_Dealloc@plt>
    c6e8:	b	c314 <PySequence_Fast@plt+0x7c04>
    c6ec:	mov	x0, x1
    c6f0:	bl	4180 <_Py_Dealloc@plt>
    c6f4:	b	bf3c <PySequence_Fast@plt+0x782c>
    c6f8:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    c6fc:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c700:	ldr	x3, [x0, #24]
    c704:	add	x2, x2, #0x78
    c708:	ldr	x0, [x1, #3976]
    c70c:	mov	x22, #0x0                   	// #0
    c710:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c714:	add	x1, x1, #0xe08
    c718:	ldr	x0, [x0]
    c71c:	bl	4620 <PyErr_Format@plt>
    c720:	b	c03c <PySequence_Fast@plt+0x792c>
    c724:	adrp	x3, 27000 <PyInit__socket@@Base+0x19e80>
    c728:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c72c:	ldr	x2, [x0, #24]
    c730:	add	x1, x1, #0xba0
    c734:	ldr	x3, [x3, #3976]
    c738:	mov	x22, #0x0                   	// #0
    c73c:	ldr	x0, [x3]
    c740:	bl	4620 <PyErr_Format@plt>
    c744:	b	c03c <PySequence_Fast@plt+0x792c>
    c748:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    c74c:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c750:	ldr	x3, [x0, #24]
    c754:	add	x2, x2, #0x78
    c758:	ldr	x0, [x1, #3976]
    c75c:	mov	x22, #0x0                   	// #0
    c760:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c764:	add	x1, x1, #0xad8
    c768:	ldr	x0, [x0]
    c76c:	bl	4620 <PyErr_Format@plt>
    c770:	b	c03c <PySequence_Fast@plt+0x792c>
    c774:	ldr	x0, [x1, #8]
    c778:	ldr	x1, [x0, #168]
    c77c:	tbz	w1, #26, c864 <PySequence_Fast@plt+0x8154>
    c780:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    c784:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c788:	add	x3, sp, #0x58
    c78c:	add	x1, x1, #0xeb0
    c790:	ldr	x2, [x2, #3936]
    c794:	mov	x0, x21
    c798:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    c79c:	cbz	w0, c380 <PySequence_Fast@plt+0x7c70>
    c7a0:	ldr	x0, [sp, #88]
    c7a4:	ldr	x1, [x0, #16]
    c7a8:	cbnz	x1, c960 <PySequence_Fast@plt+0x8250>
    c7ac:	mov	w2, #0x0                   	// #0
    c7b0:	str	wzr, [sp, #144]
    c7b4:	ldr	x1, [x0]
    c7b8:	mov	w3, #0x1d                  	// #29
    c7bc:	strh	w3, [sp, #208]
    c7c0:	mov	w22, #0x18                  	// #24
    c7c4:	str	w2, [sp, #212]
    c7c8:	sub	x1, x1, #0x1
    c7cc:	str	x1, [x0]
    c7d0:	cbnz	x1, bfdc <PySequence_Fast@plt+0x78cc>
    c7d4:	bl	4180 <_Py_Dealloc@plt>
    c7d8:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c7dc:	ldr	x0, [x19]
    c7e0:	sub	x0, x0, #0x1
    c7e4:	str	x0, [x19]
    c7e8:	cbnz	x0, c378 <PySequence_Fast@plt+0x7c68>
    c7ec:	mov	x0, x19
    c7f0:	mov	x22, #0x0                   	// #0
    c7f4:	bl	4180 <_Py_Dealloc@plt>
    c7f8:	ldr	x23, [sp, #48]
    c7fc:	b	c03c <PySequence_Fast@plt+0x792c>
    c800:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c804:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c808:	add	x1, x1, #0xf98
    c80c:	ldr	x0, [x0, #3960]
    c810:	ldr	x0, [x0]
    c814:	bl	41d0 <PyErr_SetString@plt>
    c818:	ldr	x23, [sp, #48]
    c81c:	b	c03c <PySequence_Fast@plt+0x792c>
    c820:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c824:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c828:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c82c:	add	x2, x2, #0x78
    c830:	ldr	x0, [x0, #4008]
    c834:	add	x1, x1, #0xc40
    c838:	mov	x22, #0x0                   	// #0
    c83c:	ldr	x0, [x0]
    c840:	bl	4620 <PyErr_Format@plt>
    c844:	b	c03c <PySequence_Fast@plt+0x792c>
    c848:	ldr	x0, [x20, #32]
    c84c:	mov	x22, #0x0                   	// #0
    c850:	blr	x0
    c854:	mov	x0, x23
    c858:	bl	4100 <PyBuffer_Release@plt>
    c85c:	ldr	x23, [sp, #48]
    c860:	b	c03c <PySequence_Fast@plt+0x792c>
    c864:	adrp	x1, 27000 <PyInit__socket@@Base+0x19e80>
    c868:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c86c:	ldr	x3, [x0, #24]
    c870:	add	x2, x2, #0x78
    c874:	ldr	x0, [x1, #3976]
    c878:	mov	x22, #0x0                   	// #0
    c87c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c880:	add	x1, x1, #0xe80
    c884:	ldr	x0, [x0]
    c888:	bl	4620 <PyErr_Format@plt>
    c88c:	b	c03c <PySequence_Fast@plt+0x792c>
    c890:	ldr	w2, [sp, #72]
    c894:	mov	w22, #0x10                  	// #16
    c898:	ldr	w1, [sp, #80]
    c89c:	ldr	w0, [sp, #88]
    c8a0:	stp	w2, w1, [sp, #212]
    c8a4:	str	w0, [sp, #220]
    c8a8:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c8ac:	cmp	x1, #0xf
    c8b0:	b.hi	ca48 <PySequence_Fast@plt+0x8338>  // b.pmore
    c8b4:	add	x3, sp, #0x80
    c8b8:	add	x1, x0, #0x20
    c8bc:	mov	x2, #0x10                  	// #16
    c8c0:	mov	x0, x3
    c8c4:	bl	4650 <strncpy@plt>
    c8c8:	mov	x2, x0
    c8cc:	ldr	w0, [x20, #16]
    c8d0:	mov	x1, #0x8933                	// #35123
    c8d4:	strb	wzr, [sp, #143]
    c8d8:	bl	4700 <ioctl@plt>
    c8dc:	tbnz	w0, #31, cab4 <PySequence_Fast@plt+0x83a4>
    c8e0:	ldr	w4, [sp, #144]
    c8e4:	ldr	x0, [sp, #72]
    c8e8:	b	c51c <PySequence_Fast@plt+0x7e0c>
    c8ec:	strb	wzr, [sp, #219]
    c8f0:	b	c1d4 <PySequence_Fast@plt+0x7ac4>
    c8f4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c8f8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c8fc:	mov	x22, #0x0                   	// #0
    c900:	add	x1, x1, #0xfb0
    c904:	ldr	x0, [x0, #3960]
    c908:	ldr	x0, [x0]
    c90c:	bl	41d0 <PyErr_SetString@plt>
    c910:	ldr	x23, [sp, #48]
    c914:	b	c03c <PySequence_Fast@plt+0x792c>
    c918:	mov	x0, x19
    c91c:	bl	4180 <_Py_Dealloc@plt>
    c920:	ldr	x23, [sp, #48]
    c924:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c928:	ldr	x0, [x19]
    c92c:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c930:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c934:	add	x2, x2, #0x78
    c938:	add	x1, x1, #0xd90
    c93c:	mov	x22, #0x0                   	// #0
    c940:	bl	4620 <PyErr_Format@plt>
    c944:	ldr	x23, [sp, #48]
    c948:	b	c03c <PySequence_Fast@plt+0x792c>
    c94c:	ldr	w1, [sp, #72]
    c950:	mov	w22, #0x10                  	// #16
    c954:	ldr	w0, [sp, #80]
    c958:	stp	w1, w0, [sp, #212]
    c95c:	b	bfdc <PySequence_Fast@plt+0x78cc>
    c960:	cmp	x1, #0xf
    c964:	b.hi	ca80 <PySequence_Fast@plt+0x8370>  // b.pmore
    c968:	add	x3, sp, #0x80
    c96c:	add	x1, x0, #0x20
    c970:	mov	x2, #0x10                  	// #16
    c974:	mov	x0, x3
    c978:	bl	4650 <strncpy@plt>
    c97c:	mov	x2, x0
    c980:	ldr	w0, [x20, #16]
    c984:	mov	x1, #0x8933                	// #35123
    c988:	strb	wzr, [sp, #143]
    c98c:	bl	4700 <ioctl@plt>
    c990:	tbnz	w0, #31, cac0 <PySequence_Fast@plt+0x83b0>
    c994:	ldr	w2, [sp, #144]
    c998:	ldr	x0, [sp, #88]
    c99c:	b	c7b4 <PySequence_Fast@plt+0x80a4>
    c9a0:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c9a4:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c9a8:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c9ac:	add	x2, x2, #0x78
    c9b0:	ldr	x0, [x0, #4008]
    c9b4:	add	x1, x1, #0xde8
    c9b8:	mov	x22, #0x0                   	// #0
    c9bc:	ldr	x0, [x0]
    c9c0:	bl	4620 <PyErr_Format@plt>
    c9c4:	mov	x0, x23
    c9c8:	bl	4100 <PyBuffer_Release@plt>
    c9cc:	ldr	x23, [sp, #48]
    c9d0:	b	c03c <PySequence_Fast@plt+0x792c>
    c9d4:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    c9d8:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    c9dc:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    c9e0:	add	x2, x2, #0x78
    c9e4:	ldr	x0, [x0, #4008]
    c9e8:	add	x1, x1, #0xce8
    c9ec:	mov	x22, #0x0                   	// #0
    c9f0:	ldr	x0, [x0]
    c9f4:	bl	4620 <PyErr_Format@plt>
    c9f8:	b	c03c <PySequence_Fast@plt+0x792c>
    c9fc:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    ca00:	adrp	x1, e000 <PyInit__socket@@Base+0xe80>
    ca04:	mov	x22, #0x0                   	// #0
    ca08:	add	x1, x1, #0xf20
    ca0c:	ldr	x0, [x0, #3976]
    ca10:	ldr	x0, [x0]
    ca14:	bl	41d0 <PyErr_SetString@plt>
    ca18:	b	c03c <PySequence_Fast@plt+0x792c>
    ca1c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    ca20:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ca24:	add	x1, x1, #0xdb8
    ca28:	mov	x22, #0x0                   	// #0
    ca2c:	ldr	x0, [x0, #3960]
    ca30:	ldr	x0, [x0]
    ca34:	bl	41d0 <PyErr_SetString@plt>
    ca38:	mov	x0, x23
    ca3c:	bl	4100 <PyBuffer_Release@plt>
    ca40:	ldr	x23, [sp, #48]
    ca44:	b	c03c <PySequence_Fast@plt+0x792c>
    ca48:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    ca4c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ca50:	add	x1, x1, #0xee0
    ca54:	ldr	x0, [x0, #3984]
    ca58:	ldr	x0, [x0]
    ca5c:	bl	41d0 <PyErr_SetString@plt>
    ca60:	ldr	x0, [sp, #72]
    ca64:	ldr	x1, [x0]
    ca68:	sub	x1, x1, #0x1
    ca6c:	str	x1, [x0]
    ca70:	cbnz	x1, c380 <PySequence_Fast@plt+0x7c70>
    ca74:	mov	x22, #0x0                   	// #0
    ca78:	bl	4180 <_Py_Dealloc@plt>
    ca7c:	b	c03c <PySequence_Fast@plt+0x792c>
    ca80:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    ca84:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    ca88:	add	x1, x1, #0xee0
    ca8c:	ldr	x0, [x0, #3984]
    ca90:	ldr	x0, [x0]
    ca94:	bl	41d0 <PyErr_SetString@plt>
    ca98:	ldr	x0, [sp, #88]
    ca9c:	ldr	x1, [x0]
    caa0:	sub	x1, x1, #0x1
    caa4:	str	x1, [x0]
    caa8:	cbz	x1, ca74 <PySequence_Fast@plt+0x8364>
    caac:	mov	x22, #0x0                   	// #0
    cab0:	b	c384 <PySequence_Fast@plt+0x7c74>
    cab4:	ldr	x0, [x20, #32]
    cab8:	blr	x0
    cabc:	b	ca60 <PySequence_Fast@plt+0x8350>
    cac0:	ldr	x0, [x20, #32]
    cac4:	blr	x0
    cac8:	b	ca98 <PySequence_Fast@plt+0x8388>
    cacc:	nop
    cad0:	stp	x29, x30, [sp, #-368]!
    cad4:	mov	x29, sp
    cad8:	add	x5, sp, #0xa8
    cadc:	add	x4, sp, #0x84
    cae0:	add	x3, sp, #0xa0
    cae4:	add	x2, sp, #0x98
    cae8:	stp	x19, x20, [sp, #16]
    caec:	mov	x20, x0
    caf0:	mov	x0, x1
    caf4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    caf8:	add	x1, x1, #0xb0
    cafc:	stp	x23, x24, [sp, #48]
    cb00:	str	wzr, [sp, #132]
    cb04:	stp	xzr, xzr, [sp, #136]
    cb08:	stp	xzr, xzr, [sp, #160]
    cb0c:	bl	4400 <_PyArg_ParseTuple_SizeT@plt>
    cb10:	cbz	w0, cd14 <PySequence_Fast@plt+0x8604>
    cb14:	adrp	x3, 27000 <PyInit__socket@@Base+0x19e80>
    cb18:	stp	xzr, xzr, [sp, #184]
    cb1c:	ldr	x1, [sp, #168]
    cb20:	stp	xzr, xzr, [sp, #200]
    cb24:	ldr	x3, [x3, #4024]
    cb28:	stp	xzr, xzr, [sp, #216]
    cb2c:	cmp	x1, #0x0
    cb30:	str	xzr, [sp, #232]
    cb34:	ccmp	x1, x3, #0x4, ne  // ne = any
    cb38:	b.ne	cc88 <PySequence_Fast@plt+0x8578>  // b.any
    cb3c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    cb40:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    cb44:	add	x1, x1, #0x38
    cb48:	add	x0, x0, #0xc8
    cb4c:	mov	x2, x20
    cb50:	bl	44a0 <PySys_Audit@plt>
    cb54:	tbnz	w0, #31, cd14 <PySequence_Fast@plt+0x8604>
    cb58:	ldr	x0, [sp, #152]
    cb5c:	add	x23, sp, #0xb8
    cb60:	add	x2, x23, #0x18
    cb64:	add	x1, x23, #0x10
    cb68:	add	x4, sp, #0x88
    cb6c:	add	x3, sp, #0x90
    cb70:	bl	6020 <PySequence_Fast@plt+0x1910>
    cb74:	cmn	w0, #0x1
    cb78:	b.eq	cca8 <PySequence_Fast@plt+0x8598>  // b.none
    cb7c:	stp	x27, x28, [sp, #80]
    cb80:	ldr	x28, [sp, #160]
    cb84:	stp	x21, x22, [sp, #32]
    cb88:	stp	x25, x26, [sp, #64]
    cb8c:	cbz	x28, cdd4 <PySequence_Fast@plt+0x86c4>
    cb90:	mov	x0, x28
    cb94:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    cb98:	add	x1, x1, #0xd8
    cb9c:	bl	4710 <PySequence_Fast@plt>
    cba0:	mov	x21, x0
    cba4:	cbz	x0, cef0 <PySequence_Fast@plt+0x87e0>
    cba8:	ldr	x24, [x0, #16]
    cbac:	cmp	x24, #0x0
    cbb0:	b.le	cee0 <PySequence_Fast@plt+0x87d0>
    cbb4:	mov	x0, #0x745d                	// #29789
    cbb8:	movk	x0, #0x45d1, lsl #16
    cbbc:	movk	x0, #0x5d17, lsl #32
    cbc0:	movk	x0, #0x174, lsl #48
    cbc4:	cmp	x24, x0
    cbc8:	b.gt	cf50 <PySequence_Fast@plt+0x8840>
    cbcc:	add	x0, x24, x24, lsl #1
    cbd0:	lsl	x0, x0, #2
    cbd4:	sub	x0, x0, x24
    cbd8:	lsl	x0, x0, #3
    cbdc:	bl	4690 <PyMem_Malloc@plt>
    cbe0:	mov	x25, x0
    cbe4:	cbz	x0, cf50 <PySequence_Fast@plt+0x8840>
    cbe8:	mov	x26, #0xffe7                	// #65511
    cbec:	mov	x28, x0
    cbf0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    cbf4:	add	x0, x21, #0x18
    cbf8:	add	x27, x1, #0x108
    cbfc:	mov	x22, #0x0                   	// #0
    cc00:	mov	x19, #0x0                   	// #0
    cc04:	movk	x26, #0x7fff, lsl #16
    cc08:	stp	x0, x25, [sp, #104]
    cc0c:	b	cc70 <PySequence_Fast@plt+0x8560>
    cc10:	ldr	x0, [x21, #24]
    cc14:	ldr	x0, [x0, x19, lsl #3]
    cc18:	add	x4, x28, #0x8
    cc1c:	add	x3, x28, #0x4
    cc20:	mov	x2, x28
    cc24:	mov	x1, x27
    cc28:	bl	4300 <_PyArg_Parse_SizeT@plt>
    cc2c:	cbz	w0, cf6c <PySequence_Fast@plt+0x885c>
    cc30:	ldr	x3, [x28, #24]
    cc34:	add	x19, x19, #0x1
    cc38:	add	x28, x28, #0x58
    cc3c:	add	x0, x3, #0x7
    cc40:	cmp	x3, x26
    cc44:	and	x0, x0, #0xfffffffffffffff8
    cc48:	b.hi	cd5c <PySequence_Fast@plt+0x864c>  // b.pmore
    cc4c:	add	x0, x0, #0x10
    cc50:	cmp	x3, x0
    cc54:	b.hi	cd5c <PySequence_Fast@plt+0x864c>  // b.pmore
    cc58:	adds	x22, x0, x22
    cc5c:	mov	x0, #0x7fffffff            	// #2147483647
    cc60:	ccmp	x22, x0, #0x2, cc  // cc = lo, ul, last
    cc64:	b.hi	cf88 <PySequence_Fast@plt+0x8878>  // b.pmore
    cc68:	cmp	x24, x19
    cc6c:	b.eq	cfa8 <PySequence_Fast@plt+0x8898>  // b.none
    cc70:	ldr	x0, [x21, #8]
    cc74:	ldr	x0, [x0, #168]
    cc78:	tbnz	w0, #25, cc10 <PySequence_Fast@plt+0x8500>
    cc7c:	ldr	x0, [sp, #104]
    cc80:	ldr	x0, [x0, x19, lsl #3]
    cc84:	b	cc18 <PySequence_Fast@plt+0x8508>
    cc88:	add	x19, sp, #0xf0
    cc8c:	adrp	x4, 10000 <PyInit__socket@@Base+0x2e80>
    cc90:	mov	x2, x19
    cc94:	add	x3, sp, #0x80
    cc98:	add	x4, x4, #0xc0
    cc9c:	mov	x0, x20
    cca0:	bl	a9f8 <PySequence_Fast@plt+0x62e8>
    cca4:	cbnz	w0, cd2c <PySequence_Fast@plt+0x861c>
    cca8:	mov	x0, #0x0                   	// #0
    ccac:	bl	40d0 <PyMem_Free@plt>
    ccb0:	mov	x0, #0x0                   	// #0
    ccb4:	mov	x23, #0x0                   	// #0
    ccb8:	bl	40d0 <PyMem_Free@plt>
    ccbc:	ldr	x0, [sp, #200]
    ccc0:	mov	x20, #0x0                   	// #0
    ccc4:	mov	x19, #0x0                   	// #0
    ccc8:	bl	40d0 <PyMem_Free@plt>
    cccc:	ldr	x0, [sp, #136]
    ccd0:	cmp	x0, #0x0
    ccd4:	b.le	ccf8 <PySequence_Fast@plt+0x85e8>
    ccd8:	ldr	x0, [sp, #144]
    ccdc:	add	x19, x19, #0x1
    cce0:	add	x0, x0, x20
    cce4:	bl	4100 <PyBuffer_Release@plt>
    cce8:	ldr	x0, [sp, #136]
    ccec:	add	x20, x20, #0x50
    ccf0:	cmp	x0, x19
    ccf4:	b.gt	ccd8 <PySequence_Fast@plt+0x85c8>
    ccf8:	ldr	x0, [sp, #144]
    ccfc:	bl	40d0 <PyMem_Free@plt>
    cd00:	mov	x0, x23
    cd04:	ldp	x19, x20, [sp, #16]
    cd08:	ldp	x23, x24, [sp, #48]
    cd0c:	ldp	x29, x30, [sp], #368
    cd10:	ret
    cd14:	mov	x23, #0x0                   	// #0
    cd18:	mov	x0, x23
    cd1c:	ldp	x19, x20, [sp, #16]
    cd20:	ldp	x23, x24, [sp, #48]
    cd24:	ldp	x29, x30, [sp], #368
    cd28:	ret
    cd2c:	ldr	x3, [sp, #168]
    cd30:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    cd34:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    cd38:	add	x1, x1, #0x38
    cd3c:	add	x0, x0, #0xc8
    cd40:	mov	x2, x20
    cd44:	bl	44a0 <PySys_Audit@plt>
    cd48:	tbnz	w0, #31, cd14 <PySequence_Fast@plt+0x8604>
    cd4c:	ldr	w0, [sp, #128]
    cd50:	str	x19, [sp, #184]
    cd54:	str	w0, [sp, #192]
    cd58:	b	cb58 <PySequence_Fast@plt+0x8448>
    cd5c:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    cd60:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    cd64:	mov	x28, #0x0                   	// #0
    cd68:	add	x1, x1, #0x130
    cd6c:	ldr	x0, [x0, #3984]
    cd70:	ldr	x0, [x0]
    cd74:	bl	41d0 <PyErr_SetString@plt>
    cd78:	mov	x0, x28
    cd7c:	mov	x23, #0x0                   	// #0
    cd80:	bl	40d0 <PyMem_Free@plt>
    cd84:	add	x22, x25, #0x8
    cd88:	mov	x20, #0x0                   	// #0
    cd8c:	nop
    cd90:	mov	x0, x22
    cd94:	add	x20, x20, #0x1
    cd98:	bl	4100 <PyBuffer_Release@plt>
    cd9c:	add	x22, x22, #0x58
    cda0:	cmp	x20, x19
    cda4:	b.lt	cd90 <PySequence_Fast@plt+0x8680>  // b.tstop
    cda8:	mov	x0, x25
    cdac:	bl	40d0 <PyMem_Free@plt>
    cdb0:	cbz	x21, cdc4 <PySequence_Fast@plt+0x86b4>
    cdb4:	ldr	x0, [x21]
    cdb8:	sub	x0, x0, #0x1
    cdbc:	str	x0, [x21]
    cdc0:	cbz	x0, cec8 <PySequence_Fast@plt+0x87b8>
    cdc4:	ldp	x21, x22, [sp, #32]
    cdc8:	ldp	x25, x26, [sp, #64]
    cdcc:	ldp	x27, x28, [sp, #80]
    cdd0:	b	ccbc <PySequence_Fast@plt+0x85ac>
    cdd4:	mov	x21, #0x0                   	// #0
    cdd8:	mov	x25, #0x0                   	// #0
    cddc:	mov	x19, #0x0                   	// #0
    cde0:	ldr	w22, [sp, #132]
    cde4:	add	x0, sp, #0xb0
    cde8:	ldr	x27, [x20, #40]
    cdec:	str	wzr, [sp, #104]
    cdf0:	stp	xzr, x0, [sp, #112]
    cdf4:	cmp	x27, #0x0
    cdf8:	b.le	ce90 <PySequence_Fast@plt+0x8780>
    cdfc:	ldr	w0, [sp, #104]
    ce00:	cbnz	w0, cf18 <PySequence_Fast@plt+0x8808>
    ce04:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    ce08:	add	x0, x27, x0
    ce0c:	str	x0, [sp, #112]
    ce10:	mov	x0, x27
    ce14:	ldr	w2, [x20, #16]
    ce18:	cmn	w2, #0x1
    ce1c:	b.eq	ce6c <PySequence_Fast@plt+0x875c>  // b.none
    ce20:	str	w2, [sp, #176]
    ce24:	mov	w2, #0x4                   	// #4
    ce28:	mov	w1, #0x1                   	// #1
    ce2c:	strh	w2, [sp, #180]
    ce30:	bl	42d0 <_PyTime_AsMilliseconds@plt>
    ce34:	mov	x26, x0
    ce38:	bl	4570 <PyEval_SaveThread@plt>
    ce3c:	mov	x24, x0
    ce40:	ldr	x0, [sp, #120]
    ce44:	cmp	x26, #0x0
    ce48:	csinv	x2, x26, xzr, ge  // ge = tcont
    ce4c:	mov	x1, #0x1                   	// #1
    ce50:	bl	4200 <poll@plt>
    ce54:	mov	w26, w0
    ce58:	mov	x0, x24
    ce5c:	bl	40c0 <PyEval_RestoreThread@plt>
    ce60:	cmp	w26, #0x0
    ce64:	b.lt	cf00 <PySequence_Fast@plt+0x87f0>  // b.tstop
    ce68:	b.eq	cf28 <PySequence_Fast@plt+0x8818>  // b.none
    ce6c:	mov	w0, #0x1                   	// #1
    ce70:	str	w0, [sp, #104]
    ce74:	b	ce90 <PySequence_Fast@plt+0x8780>
    ce78:	bl	4660 <__errno_location@plt>
    ce7c:	ldr	w0, [x0]
    ce80:	cmp	w0, #0x4
    ce84:	b.ne	d064 <PySequence_Fast@plt+0x8954>  // b.any
    ce88:	bl	45e0 <PyErr_CheckSignals@plt>
    ce8c:	cbnz	w0, d084 <PySequence_Fast@plt+0x8974>
    ce90:	bl	4570 <PyEval_SaveThread@plt>
    ce94:	mov	x26, x0
    ce98:	ldr	w0, [x20, #16]
    ce9c:	mov	w2, w22
    cea0:	mov	x1, x23
    cea4:	bl	42c0 <sendmsg@plt>
    cea8:	mov	x24, x0
    ceac:	mov	x0, x26
    ceb0:	bl	40c0 <PyEval_RestoreThread@plt>
    ceb4:	tbnz	x24, #63, ce78 <PySequence_Fast@plt+0x8768>
    ceb8:	mov	x0, x24
    cebc:	bl	42e0 <PyLong_FromSsize_t@plt>
    cec0:	mov	x23, x0
    cec4:	b	cf40 <PySequence_Fast@plt+0x8830>
    cec8:	mov	x0, x21
    cecc:	bl	4180 <_Py_Dealloc@plt>
    ced0:	ldp	x21, x22, [sp, #32]
    ced4:	ldp	x25, x26, [sp, #64]
    ced8:	ldp	x27, x28, [sp, #80]
    cedc:	b	ccbc <PySequence_Fast@plt+0x85ac>
    cee0:	mov	x25, #0x0                   	// #0
    cee4:	mov	x19, #0x0                   	// #0
    cee8:	mov	x28, #0x0                   	// #0
    ceec:	b	cde0 <PySequence_Fast@plt+0x86d0>
    cef0:	ldp	x21, x22, [sp, #32]
    cef4:	ldp	x25, x26, [sp, #64]
    cef8:	ldp	x27, x28, [sp, #80]
    cefc:	b	cca8 <PySequence_Fast@plt+0x8598>
    cf00:	bl	4660 <__errno_location@plt>
    cf04:	ldr	w0, [x0]
    cf08:	cmp	w0, #0x4
    cf0c:	b.ne	d074 <PySequence_Fast@plt+0x8964>  // b.any
    cf10:	bl	45e0 <PyErr_CheckSignals@plt>
    cf14:	cbnz	w0, d084 <PySequence_Fast@plt+0x8974>
    cf18:	bl	46c0 <_PyTime_GetMonotonicClock@plt>
    cf1c:	ldr	x1, [sp, #112]
    cf20:	subs	x0, x1, x0
    cf24:	b.pl	ce14 <PySequence_Fast@plt+0x8704>  // b.nfrst
    cf28:	adrp	x0, 28000 <PyInit__socket@@Base+0x1ae80>
    cf2c:	adrp	x1, f000 <PyInit__socket@@Base+0x1e80>
    cf30:	mov	x23, #0x0                   	// #0
    cf34:	add	x1, x1, #0x410
    cf38:	ldr	x0, [x0, #3872]
    cf3c:	bl	41d0 <PyErr_SetString@plt>
    cf40:	mov	x0, x28
    cf44:	bl	40d0 <PyMem_Free@plt>
    cf48:	cbnz	x19, cd84 <PySequence_Fast@plt+0x8674>
    cf4c:	b	cda8 <PySequence_Fast@plt+0x8698>
    cf50:	bl	4190 <PyErr_NoMemory@plt>
    cf54:	mov	x23, #0x0                   	// #0
    cf58:	mov	x0, #0x0                   	// #0
    cf5c:	bl	40d0 <PyMem_Free@plt>
    cf60:	mov	x0, #0x0                   	// #0
    cf64:	bl	40d0 <PyMem_Free@plt>
    cf68:	b	cdb4 <PySequence_Fast@plt+0x86a4>
    cf6c:	mov	x0, #0x0                   	// #0
    cf70:	mov	x23, #0x0                   	// #0
    cf74:	bl	40d0 <PyMem_Free@plt>
    cf78:	cbnz	x19, cd84 <PySequence_Fast@plt+0x8674>
    cf7c:	mov	x0, x25
    cf80:	bl	40d0 <PyMem_Free@plt>
    cf84:	b	cdb4 <PySequence_Fast@plt+0x86a4>
    cf88:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    cf8c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    cf90:	mov	x28, #0x0                   	// #0
    cf94:	add	x1, x1, #0x150
    cf98:	ldr	x0, [x0, #3984]
    cf9c:	ldr	x0, [x0]
    cfa0:	bl	41d0 <PyErr_SetString@plt>
    cfa4:	b	cd78 <PySequence_Fast@plt+0x8668>
    cfa8:	mov	x0, x22
    cfac:	bl	4690 <PyMem_Malloc@plt>
    cfb0:	mov	x28, x0
    cfb4:	cbz	x0, d118 <PySequence_Fast@plt+0x8a08>
    cfb8:	mov	x2, x22
    cfbc:	mov	x19, #0x0                   	// #0
    cfc0:	mov	x27, #0x0                   	// #0
    cfc4:	mov	x26, #0x7ffffff0            	// #2147483632
    cfc8:	mov	w1, #0x0                   	// #0
    cfcc:	stp	x0, x22, [sp, #216]
    cfd0:	bl	4270 <memset@plt>
    cfd4:	ldr	x0, [sp, #112]
    cfd8:	ldr	x2, [x0, #24]
    cfdc:	cbz	x27, d08c <PySequence_Fast@plt+0x897c>
    cfe0:	ldr	x0, [x19]
    cfe4:	cmp	x0, #0xf
    cfe8:	b.ls	d140 <PySequence_Fast@plt+0x8a30>  // b.plast
    cfec:	ldp	x1, x4, [sp, #216]
    cff0:	add	x0, x0, #0x7
    cff4:	and	x0, x0, #0xfffffffffffffff8
    cff8:	add	x19, x19, x0
    cffc:	add	x0, x19, #0x10
    d000:	add	x4, x1, x4
    d004:	cmp	x4, x0
    d008:	b.cc	d140 <PySequence_Fast@plt+0x8a30>  // b.lo, b.ul, b.last
    d00c:	ldr	x0, [x19]
    d010:	add	x0, x0, #0x7
    d014:	and	x0, x0, #0xfffffffffffffff8
    d018:	add	x0, x19, x0
    d01c:	cmp	x4, x0
    d020:	b.cc	d140 <PySequence_Fast@plt+0x8a30>  // b.lo, b.ul, b.last
    d024:	cmp	x2, x26
    d028:	b.cs	d120 <PySequence_Fast@plt+0x8a10>  // b.hs, b.nlast
    d02c:	cbz	x1, d044 <PySequence_Fast@plt+0x8934>
    d030:	add	x4, x2, #0x10
    d034:	sub	x0, x19, x1
    d038:	mvn	x5, x4
    d03c:	cmp	x0, x5
    d040:	b.ls	d0b4 <PySequence_Fast@plt+0x89a4>  // b.plast
    d044:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    d048:	mov	x19, x24
    d04c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d050:	add	x1, x1, #0x190
    d054:	ldr	x0, [x0, #3944]
    d058:	ldr	x0, [x0]
    d05c:	bl	41d0 <PyErr_SetString@plt>
    d060:	b	cd78 <PySequence_Fast@plt+0x8668>
    d064:	ldr	x1, [x20, #40]
    d068:	cmp	x1, #0x0
    d06c:	ccmp	w0, #0xb, #0x0, gt
    d070:	b.eq	cdf4 <PySequence_Fast@plt+0x86e4>  // b.none
    d074:	ldr	x0, [x20, #32]
    d078:	mov	x23, #0x0                   	// #0
    d07c:	blr	x0
    d080:	b	cf40 <PySequence_Fast@plt+0x8830>
    d084:	mov	x23, #0x0                   	// #0
    d088:	b	cf40 <PySequence_Fast@plt+0x8830>
    d08c:	ldr	x0, [sp, #224]
    d090:	cmp	x0, #0xf
    d094:	b.ls	d168 <PySequence_Fast@plt+0x8a58>  // b.plast
    d098:	ldr	x19, [sp, #216]
    d09c:	cbz	x19, d168 <PySequence_Fast@plt+0x8a58>
    d0a0:	cmp	x2, x26
    d0a4:	b.cs	d120 <PySequence_Fast@plt+0x8a10>  // b.hs, b.nlast
    d0a8:	add	x4, x2, #0x10
    d0ac:	mov	x1, x19
    d0b0:	mov	x0, #0x0                   	// #0
    d0b4:	ldr	x5, [sp, #224]
    d0b8:	add	x0, x4, x0
    d0bc:	cmp	x0, x5
    d0c0:	b.hi	d044 <PySequence_Fast@plt+0x8934>  // b.pmore
    d0c4:	mov	x0, x19
    d0c8:	str	x4, [x0], #16
    d0cc:	ldr	x4, [sp, #224]
    d0d0:	sub	x1, x0, x1
    d0d4:	cmp	x4, x1
    d0d8:	b.cc	d044 <PySequence_Fast@plt+0x8934>  // b.lo, b.ul, b.last
    d0dc:	sub	x1, x4, x1
    d0e0:	cmp	x2, x1
    d0e4:	b.hi	d044 <PySequence_Fast@plt+0x8934>  // b.pmore
    d0e8:	ldr	x3, [sp, #112]
    d0ec:	add	x27, x27, #0x1
    d0f0:	add	x3, x3, #0x58
    d0f4:	ldur	x1, [x3, #-80]
    d0f8:	ldur	d0, [x3, #-88]
    d0fc:	str	x3, [sp, #112]
    d100:	str	d0, [x19, #8]
    d104:	bl	3fa0 <memcpy@plt>
    d108:	cmp	x24, x27
    d10c:	b.ne	cfd4 <PySequence_Fast@plt+0x88c4>  // b.any
    d110:	mov	x19, x24
    d114:	b	cde0 <PySequence_Fast@plt+0x86d0>
    d118:	bl	4190 <PyErr_NoMemory@plt>
    d11c:	b	cd78 <PySequence_Fast@plt+0x8668>
    d120:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    d124:	mov	x19, x24
    d128:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d12c:	add	x1, x1, #0x1c0
    d130:	ldr	x0, [x0, #3944]
    d134:	ldr	x0, [x0]
    d138:	bl	41d0 <PyErr_SetString@plt>
    d13c:	b	cd78 <PySequence_Fast@plt+0x8668>
    d140:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    d144:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    d148:	add	x2, x2, #0xa0
    d14c:	ldr	x0, [x0, #3944]
    d150:	ldr	x0, [x0]
    d154:	mov	x19, x24
    d158:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d15c:	add	x1, x1, #0x168
    d160:	bl	4620 <PyErr_Format@plt>
    d164:	b	cd78 <PySequence_Fast@plt+0x8668>
    d168:	adrp	x0, 27000 <PyInit__socket@@Base+0x19e80>
    d16c:	adrp	x2, 10000 <PyInit__socket@@Base+0x2e80>
    d170:	add	x2, x2, #0x90
    d174:	ldr	x0, [x0, #3944]
    d178:	ldr	x0, [x0]
    d17c:	b	d154 <PySequence_Fast@plt+0x8a44>

000000000000d180 <PyInit__socket@@Base>:
    d180:	stp	x29, x30, [sp, #-64]!
    d184:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    d188:	mov	w1, #0x3f5                 	// #1013
    d18c:	mov	x29, sp
    d190:	ldr	x2, [x2, #4016]
    d194:	stp	x21, x22, [sp, #32]
    d198:	adrp	x22, 28000 <PyInit__socket@@Base+0x1ae80>
    d19c:	stp	x23, x24, [sp, #48]
    d1a0:	add	x23, x22, #0x3d8
    d1a4:	stp	x19, x20, [sp, #16]
    d1a8:	adrp	x20, 28000 <PyInit__socket@@Base+0x1ae80>
    d1ac:	add	x20, x20, #0x580
    d1b0:	add	x0, x20, #0xe0
    d1b4:	str	x2, [x23, #8]
    d1b8:	bl	43d0 <PyModule_Create2@plt>
    d1bc:	cbz	x0, eb88 <PyInit__socket@@Base+0x1a08>
    d1c0:	adrp	x21, 27000 <PyInit__socket@@Base+0x19e80>
    d1c4:	mov	x19, x0
    d1c8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d1cc:	add	x1, x1, #0x1f0
    d1d0:	ldr	x21, [x21, #3984]
    d1d4:	add	x20, x20, #0x148
    d1d8:	ldr	x2, [x21]
    d1dc:	ldr	x3, [x2]
    d1e0:	str	x2, [x20, #8]
    d1e4:	add	x3, x3, #0x2
    d1e8:	str	x3, [x2]
    d1ec:	bl	4580 <PyModule_AddObject@plt>
    d1f0:	ldr	x1, [x21]
    d1f4:	mov	x2, #0x0                   	// #0
    d1f8:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    d1fc:	add	x0, x0, #0x1e8
    d200:	bl	4340 <PyErr_NewException@plt>
    d204:	mov	x2, x0
    d208:	adrp	x1, 28000 <PyInit__socket@@Base+0x1ae80>
    d20c:	add	x24, x1, #0xf18
    d210:	str	x0, [x1, #3864]
    d214:	cbz	x0, eb88 <PyInit__socket@@Base+0x1a08>
    d218:	ldr	x3, [x2]
    d21c:	mov	x0, x19
    d220:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d224:	add	x1, x1, #0x1f8
    d228:	add	x3, x3, #0x1
    d22c:	str	x3, [x2]
    d230:	bl	4580 <PyModule_AddObject@plt>
    d234:	ldr	x1, [x21]
    d238:	mov	x2, #0x0                   	// #0
    d23c:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    d240:	add	x0, x0, #0x200
    d244:	bl	4340 <PyErr_NewException@plt>
    d248:	str	x0, [x24, #16]
    d24c:	mov	x2, x0
    d250:	cbz	x0, eb88 <PyInit__socket@@Base+0x1a08>
    d254:	ldr	x3, [x2]
    d258:	mov	x0, x19
    d25c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d260:	add	x1, x1, #0x210
    d264:	add	x3, x3, #0x1
    d268:	str	x3, [x2]
    d26c:	bl	4580 <PyModule_AddObject@plt>
    d270:	ldr	x1, [x21]
    d274:	mov	x2, #0x0                   	// #0
    d278:	adrp	x0, 10000 <PyInit__socket@@Base+0x2e80>
    d27c:	add	x0, x0, #0x220
    d280:	bl	4340 <PyErr_NewException@plt>
    d284:	str	x0, [x24, #8]
    d288:	mov	x2, x0
    d28c:	cbz	x0, eb88 <PyInit__socket@@Base+0x1a08>
    d290:	ldr	x0, [x0]
    d294:	str	x2, [x20, #16]
    d298:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d29c:	add	x1, x1, #0x230
    d2a0:	add	x0, x0, #0x1
    d2a4:	str	x0, [x2]
    d2a8:	mov	x0, x19
    d2ac:	bl	4580 <PyModule_AddObject@plt>
    d2b0:	ldr	x3, [x22, #984]
    d2b4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d2b8:	mov	x2, x23
    d2bc:	add	x1, x1, #0x238
    d2c0:	add	x3, x3, #0x1
    d2c4:	mov	x0, x19
    d2c8:	str	x3, [x22, #984]
    d2cc:	bl	4580 <PyModule_AddObject@plt>
    d2d0:	cbnz	w0, eb88 <PyInit__socket@@Base+0x1a08>
    d2d4:	ldr	x3, [x22, #984]
    d2d8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    d2dc:	mov	x2, x23
    d2e0:	mov	x0, x19
    d2e4:	add	x3, x3, #0x1
    d2e8:	add	x1, x1, #0xaf0
    d2ec:	str	x3, [x22, #984]
    d2f0:	bl	4580 <PyModule_AddObject@plt>
    d2f4:	cbnz	w0, eb88 <PyInit__socket@@Base+0x1a08>
    d2f8:	adrp	x2, 27000 <PyInit__socket@@Base+0x19e80>
    d2fc:	mov	x0, x19
    d300:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d304:	add	x1, x1, #0x248
    d308:	ldr	x2, [x2, #4032]
    d30c:	ldr	x3, [x2]
    d310:	add	x3, x3, #0x1
    d314:	str	x3, [x2]
    d318:	bl	4580 <PyModule_AddObject@plt>
    d31c:	mov	x2, #0x0                   	// #0
    d320:	mov	x0, x20
    d324:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d328:	add	x1, x1, #0x258
    d32c:	bl	45f0 <PyCapsule_New@plt>
    d330:	mov	x2, x0
    d334:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d338:	mov	x0, x19
    d33c:	add	x1, x1, #0x260
    d340:	bl	4580 <PyModule_AddObject@plt>
    d344:	cbnz	w0, eb88 <PyInit__socket@@Base+0x1a08>
    d348:	mov	x0, x19
    d34c:	mov	x2, #0x0                   	// #0
    d350:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d354:	add	x1, x1, #0x268
    d358:	bl	4050 <PyModule_AddIntConstant@plt>
    d35c:	mov	x0, x19
    d360:	mov	x2, #0x2                   	// #2
    d364:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d368:	add	x1, x1, #0x278
    d36c:	bl	4050 <PyModule_AddIntConstant@plt>
    d370:	mov	x0, x19
    d374:	mov	x2, #0x1                   	// #1
    d378:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d37c:	add	x1, x1, #0x280
    d380:	bl	4050 <PyModule_AddIntConstant@plt>
    d384:	mov	x0, x19
    d388:	mov	x2, #0x3                   	// #3
    d38c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d390:	add	x1, x1, #0x288
    d394:	bl	4050 <PyModule_AddIntConstant@plt>
    d398:	mov	x0, x19
    d39c:	mov	x2, #0x4                   	// #4
    d3a0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d3a4:	add	x1, x1, #0x290
    d3a8:	bl	4050 <PyModule_AddIntConstant@plt>
    d3ac:	mov	x0, x19
    d3b0:	mov	x2, #0x5                   	// #5
    d3b4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d3b8:	add	x1, x1, #0x298
    d3bc:	bl	4050 <PyModule_AddIntConstant@plt>
    d3c0:	mov	x0, x19
    d3c4:	mov	x2, #0x6                   	// #6
    d3c8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d3cc:	add	x1, x1, #0x2a8
    d3d0:	bl	4050 <PyModule_AddIntConstant@plt>
    d3d4:	mov	x0, x19
    d3d8:	mov	x2, #0x7                   	// #7
    d3dc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d3e0:	add	x1, x1, #0x2b8
    d3e4:	bl	4050 <PyModule_AddIntConstant@plt>
    d3e8:	mov	x0, x19
    d3ec:	mov	x2, #0x8                   	// #8
    d3f0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d3f4:	add	x1, x1, #0x2c8
    d3f8:	bl	4050 <PyModule_AddIntConstant@plt>
    d3fc:	mov	x0, x19
    d400:	mov	x2, #0x26                  	// #38
    d404:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d408:	add	x1, x1, #0x2d8
    d40c:	bl	4050 <PyModule_AddIntConstant@plt>
    d410:	mov	x0, x19
    d414:	mov	x2, #0x9                   	// #9
    d418:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d41c:	add	x1, x1, #0x2e0
    d420:	bl	4050 <PyModule_AddIntConstant@plt>
    d424:	mov	x0, x19
    d428:	mov	x2, #0xa                   	// #10
    d42c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d430:	add	x1, x1, #0x2e8
    d434:	bl	4050 <PyModule_AddIntConstant@plt>
    d438:	mov	x0, x19
    d43c:	mov	x2, #0xb                   	// #11
    d440:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d444:	add	x1, x1, #0x2f8
    d448:	bl	4050 <PyModule_AddIntConstant@plt>
    d44c:	mov	x0, x19
    d450:	mov	x2, #0xc                   	// #12
    d454:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d458:	add	x1, x1, #0x300
    d45c:	bl	4050 <PyModule_AddIntConstant@plt>
    d460:	mov	x0, x19
    d464:	mov	x2, #0xd                   	// #13
    d468:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d46c:	add	x1, x1, #0x310
    d470:	bl	4050 <PyModule_AddIntConstant@plt>
    d474:	mov	x0, x19
    d478:	mov	x2, #0xe                   	// #14
    d47c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d480:	add	x1, x1, #0x320
    d484:	bl	4050 <PyModule_AddIntConstant@plt>
    d488:	mov	x0, x19
    d48c:	mov	x2, #0xf                   	// #15
    d490:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d494:	add	x1, x1, #0x330
    d498:	bl	4050 <PyModule_AddIntConstant@plt>
    d49c:	mov	x0, x19
    d4a0:	mov	x2, #0x10                  	// #16
    d4a4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d4a8:	add	x1, x1, #0x338
    d4ac:	bl	4050 <PyModule_AddIntConstant@plt>
    d4b0:	mov	x0, x19
    d4b4:	mov	x2, #0x0                   	// #0
    d4b8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d4bc:	add	x1, x1, #0x348
    d4c0:	bl	4050 <PyModule_AddIntConstant@plt>
    d4c4:	mov	x0, x19
    d4c8:	mov	x2, #0x2                   	// #2
    d4cc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d4d0:	add	x1, x1, #0x358
    d4d4:	bl	4050 <PyModule_AddIntConstant@plt>
    d4d8:	mov	x0, x19
    d4dc:	mov	x2, #0x3                   	// #3
    d4e0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d4e4:	add	x1, x1, #0x370
    d4e8:	bl	4050 <PyModule_AddIntConstant@plt>
    d4ec:	mov	x0, x19
    d4f0:	mov	x2, #0x5                   	// #5
    d4f4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d4f8:	add	x1, x1, #0x388
    d4fc:	bl	4050 <PyModule_AddIntConstant@plt>
    d500:	mov	x0, x19
    d504:	mov	x2, #0x6                   	// #6
    d508:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d50c:	add	x1, x1, #0x398
    d510:	bl	4050 <PyModule_AddIntConstant@plt>
    d514:	mov	x0, x19
    d518:	mov	x2, #0xd                   	// #13
    d51c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d520:	add	x1, x1, #0x3a8
    d524:	bl	4050 <PyModule_AddIntConstant@plt>
    d528:	mov	x0, x19
    d52c:	mov	x2, #0xe                   	// #14
    d530:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d534:	add	x1, x1, #0x3b8
    d538:	bl	4050 <PyModule_AddIntConstant@plt>
    d53c:	mov	x0, x19
    d540:	mov	x2, #0x15                  	// #21
    d544:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d548:	add	x1, x1, #0x3c8
    d54c:	bl	4050 <PyModule_AddIntConstant@plt>
    d550:	mov	x0, x19
    d554:	mov	x2, #0x2a                  	// #42
    d558:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d55c:	add	x1, x1, #0x3d8
    d560:	bl	4050 <PyModule_AddIntConstant@plt>
    d564:	mov	x0, x19
    d568:	mov	x2, #0x28                  	// #40
    d56c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d570:	add	x1, x1, #0x3e8
    d574:	bl	4050 <PyModule_AddIntConstant@plt>
    d578:	mov	x0, x19
    d57c:	mov	x2, #0x0                   	// #0
    d580:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d584:	add	x1, x1, #0x3f8
    d588:	bl	4050 <PyModule_AddIntConstant@plt>
    d58c:	mov	x0, x19
    d590:	mov	x2, #0x1                   	// #1
    d594:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d598:	add	x1, x1, #0x418
    d59c:	bl	4050 <PyModule_AddIntConstant@plt>
    d5a0:	mov	x0, x19
    d5a4:	mov	x2, #0x2                   	// #2
    d5a8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d5ac:	add	x1, x1, #0x438
    d5b0:	bl	4050 <PyModule_AddIntConstant@plt>
    d5b4:	mov	x0, x19
    d5b8:	mov	x2, #0xffffffff            	// #4294967295
    d5bc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d5c0:	add	x1, x1, #0x458
    d5c4:	bl	4050 <PyModule_AddIntConstant@plt>
    d5c8:	mov	x0, x19
    d5cc:	mov	x2, #0xffffffff            	// #4294967295
    d5d0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d5d4:	add	x1, x1, #0x468
    d5d8:	bl	4050 <PyModule_AddIntConstant@plt>
    d5dc:	mov	x0, x19
    d5e0:	mov	x2, #0x2                   	// #2
    d5e4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d5e8:	add	x1, x1, #0x478
    d5ec:	bl	4050 <PyModule_AddIntConstant@plt>
    d5f0:	mov	x0, x19
    d5f4:	mov	x2, #0xffffffff            	// #4294967295
    d5f8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d5fc:	add	x1, x1, #0x488
    d600:	bl	4050 <PyModule_AddIntConstant@plt>
    d604:	mov	x0, x19
    d608:	mov	x2, #0x7b9                 	// #1977
    d60c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d610:	add	x1, x1, #0x4a8
    d614:	bl	4050 <PyModule_AddIntConstant@plt>
    d618:	mov	x0, x19
    d61c:	mov	x2, #0x10                  	// #16
    d620:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d624:	add	x1, x1, #0x4c8
    d628:	bl	4050 <PyModule_AddIntConstant@plt>
    d62c:	mov	x0, x19
    d630:	mov	x2, #0x12                  	// #18
    d634:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d638:	add	x1, x1, #0x4d8
    d63c:	bl	4050 <PyModule_AddIntConstant@plt>
    d640:	mov	x0, x19
    d644:	mov	x2, #0x13                  	// #19
    d648:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d64c:	add	x1, x1, #0x4e0
    d650:	bl	4050 <PyModule_AddIntConstant@plt>
    d654:	mov	x0, x19
    d658:	mov	x2, #0x14                  	// #20
    d65c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d660:	add	x1, x1, #0x4f0
    d664:	bl	4050 <PyModule_AddIntConstant@plt>
    d668:	mov	x0, x19
    d66c:	mov	x2, #0x16                  	// #22
    d670:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d674:	add	x1, x1, #0x500
    d678:	bl	4050 <PyModule_AddIntConstant@plt>
    d67c:	mov	x0, x19
    d680:	mov	x2, #0x17                  	// #23
    d684:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d688:	add	x1, x1, #0x508
    d68c:	bl	4050 <PyModule_AddIntConstant@plt>
    d690:	mov	x0, x19
    d694:	mov	x2, #0x18                  	// #24
    d698:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d69c:	add	x1, x1, #0x510
    d6a0:	bl	4050 <PyModule_AddIntConstant@plt>
    d6a4:	mov	x0, x19
    d6a8:	mov	x2, #0x19                  	// #25
    d6ac:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d6b0:	add	x1, x1, #0x520
    d6b4:	bl	4050 <PyModule_AddIntConstant@plt>
    d6b8:	mov	x0, x19
    d6bc:	mov	x2, #0x1a                  	// #26
    d6c0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d6c4:	add	x1, x1, #0x530
    d6c8:	bl	4050 <PyModule_AddIntConstant@plt>
    d6cc:	mov	x0, x19
    d6d0:	mov	x2, #0x1d                  	// #29
    d6d4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d6d8:	add	x1, x1, #0x538
    d6dc:	bl	4050 <PyModule_AddIntConstant@plt>
    d6e0:	mov	x0, x19
    d6e4:	mov	x2, #0x1d                  	// #29
    d6e8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d6ec:	add	x1, x1, #0x540
    d6f0:	bl	4050 <PyModule_AddIntConstant@plt>
    d6f4:	mov	x0, x19
    d6f8:	mov	x2, #0x15                  	// #21
    d6fc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d700:	add	x1, x1, #0x548
    d704:	bl	4050 <PyModule_AddIntConstant@plt>
    d708:	mov	x0, x19
    d70c:	mov	x2, #0x15                  	// #21
    d710:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d714:	add	x1, x1, #0x550
    d718:	bl	4050 <PyModule_AddIntConstant@plt>
    d71c:	mov	x0, x19
    d720:	mov	x2, #0x11                  	// #17
    d724:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d728:	add	x1, x1, #0x558
    d72c:	bl	4050 <PyModule_AddIntConstant@plt>
    d730:	mov	x0, x19
    d734:	mov	x2, #0x11                  	// #17
    d738:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d73c:	add	x1, x1, #0x568
    d740:	bl	4050 <PyModule_AddIntConstant@plt>
    d744:	mov	x0, x19
    d748:	mov	x2, #0x0                   	// #0
    d74c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d750:	add	x1, x1, #0x578
    d754:	bl	4050 <PyModule_AddIntConstant@plt>
    d758:	mov	x0, x19
    d75c:	mov	x2, #0x1                   	// #1
    d760:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d764:	add	x1, x1, #0x588
    d768:	bl	4050 <PyModule_AddIntConstant@plt>
    d76c:	mov	x0, x19
    d770:	mov	x2, #0x2                   	// #2
    d774:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d778:	add	x1, x1, #0x5a0
    d77c:	bl	4050 <PyModule_AddIntConstant@plt>
    d780:	mov	x0, x19
    d784:	mov	x2, #0x3                   	// #3
    d788:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d78c:	add	x1, x1, #0x5b8
    d790:	bl	4050 <PyModule_AddIntConstant@plt>
    d794:	mov	x0, x19
    d798:	mov	x2, #0x4                   	// #4
    d79c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d7a0:	add	x1, x1, #0x5d0
    d7a4:	bl	4050 <PyModule_AddIntConstant@plt>
    d7a8:	mov	x0, x19
    d7ac:	mov	x2, #0x5                   	// #5
    d7b0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d7b4:	add	x1, x1, #0x5e0
    d7b8:	bl	4050 <PyModule_AddIntConstant@plt>
    d7bc:	mov	x0, x19
    d7c0:	mov	x2, #0x6                   	// #6
    d7c4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d7c8:	add	x1, x1, #0x5f0
    d7cc:	bl	4050 <PyModule_AddIntConstant@plt>
    d7d0:	mov	x0, x19
    d7d4:	mov	x2, #0x1e                  	// #30
    d7d8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d7dc:	add	x1, x1, #0x608
    d7e0:	bl	4050 <PyModule_AddIntConstant@plt>
    d7e4:	mov	x0, x19
    d7e8:	mov	x2, #0x1                   	// #1
    d7ec:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d7f0:	add	x1, x1, #0x610
    d7f4:	bl	4050 <PyModule_AddIntConstant@plt>
    d7f8:	mov	x0, x19
    d7fc:	mov	x2, #0x2                   	// #2
    d800:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d804:	add	x1, x1, #0x628
    d808:	bl	4050 <PyModule_AddIntConstant@plt>
    d80c:	mov	x0, x19
    d810:	mov	x2, #0x3                   	// #3
    d814:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d818:	add	x1, x1, #0x638
    d81c:	bl	4050 <PyModule_AddIntConstant@plt>
    d820:	mov	x0, x19
    d824:	mov	x2, #0x1                   	// #1
    d828:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d82c:	add	x1, x1, #0x648
    d830:	bl	4050 <PyModule_AddIntConstant@plt>
    d834:	mov	x0, x19
    d838:	mov	x2, #0x2                   	// #2
    d83c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d840:	add	x1, x1, #0x658
    d844:	bl	4050 <PyModule_AddIntConstant@plt>
    d848:	mov	x0, x19
    d84c:	mov	x2, #0x3                   	// #3
    d850:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d854:	add	x1, x1, #0x670
    d858:	bl	4050 <PyModule_AddIntConstant@plt>
    d85c:	mov	x0, x19
    d860:	mov	x2, #0x10f                 	// #271
    d864:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d868:	add	x1, x1, #0x680
    d86c:	bl	4050 <PyModule_AddIntConstant@plt>
    d870:	mov	x0, x19
    d874:	mov	x2, #0x7f                  	// #127
    d878:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d87c:	add	x1, x1, #0x690
    d880:	bl	4050 <PyModule_AddIntConstant@plt>
    d884:	mov	x0, x19
    d888:	mov	x2, #0x80                  	// #128
    d88c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d890:	add	x1, x1, #0x6a0
    d894:	bl	4050 <PyModule_AddIntConstant@plt>
    d898:	mov	x0, x19
    d89c:	mov	x2, #0x81                  	// #129
    d8a0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d8a4:	add	x1, x1, #0x6b8
    d8a8:	bl	4050 <PyModule_AddIntConstant@plt>
    d8ac:	mov	x0, x19
    d8b0:	mov	x2, #0x82                  	// #130
    d8b4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d8b8:	add	x1, x1, #0x6d0
    d8bc:	bl	4050 <PyModule_AddIntConstant@plt>
    d8c0:	mov	x0, x19
    d8c4:	mov	x2, #0x0                   	// #0
    d8c8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d8cc:	add	x1, x1, #0x6e8
    d8d0:	bl	4050 <PyModule_AddIntConstant@plt>
    d8d4:	mov	x0, x19
    d8d8:	mov	x2, #0x1                   	// #1
    d8dc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d8e0:	add	x1, x1, #0x700
    d8e4:	bl	4050 <PyModule_AddIntConstant@plt>
    d8e8:	mov	x0, x19
    d8ec:	mov	x2, #0x2                   	// #2
    d8f0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d8f4:	add	x1, x1, #0x718
    d8f8:	bl	4050 <PyModule_AddIntConstant@plt>
    d8fc:	mov	x0, x19
    d900:	mov	x2, #0x3                   	// #3
    d904:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d908:	add	x1, x1, #0x730
    d90c:	bl	4050 <PyModule_AddIntConstant@plt>
    d910:	mov	x0, x19
    d914:	mov	x2, #0x1                   	// #1
    d918:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d91c:	add	x1, x1, #0x750
    d920:	bl	4050 <PyModule_AddIntConstant@plt>
    d924:	mov	x0, x19
    d928:	mov	x2, #0x2                   	// #2
    d92c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d930:	add	x1, x1, #0x760
    d934:	bl	4050 <PyModule_AddIntConstant@plt>
    d938:	mov	x0, x19
    d93c:	mov	x2, #0x4                   	// #4
    d940:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d944:	add	x1, x1, #0x778
    d948:	bl	4050 <PyModule_AddIntConstant@plt>
    d94c:	mov	x0, x19
    d950:	mov	x2, #0xffffffffffffffff    	// #-1
    d954:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d958:	add	x1, x1, #0x788
    d95c:	bl	4050 <PyModule_AddIntConstant@plt>
    d960:	mov	x0, x19
    d964:	mov	x2, #0x1                   	// #1
    d968:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d96c:	add	x1, x1, #0x7a0
    d970:	bl	4050 <PyModule_AddIntConstant@plt>
    d974:	mov	x0, x19
    d978:	mov	x2, #0x2                   	// #2
    d97c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d980:	add	x1, x1, #0x7b0
    d984:	bl	4050 <PyModule_AddIntConstant@plt>
    d988:	mov	x0, x19
    d98c:	mov	x2, #0x3                   	// #3
    d990:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d994:	add	x1, x1, #0x7c0
    d998:	bl	4050 <PyModule_AddIntConstant@plt>
    d99c:	mov	x0, x19
    d9a0:	mov	x2, #0x0                   	// #0
    d9a4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d9a8:	add	x1, x1, #0x7d8
    d9ac:	bl	4050 <PyModule_AddIntConstant@plt>
    d9b0:	mov	x0, x19
    d9b4:	mov	x2, #0x1                   	// #1
    d9b8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d9bc:	add	x1, x1, #0x7e8
    d9c0:	bl	4050 <PyModule_AddIntConstant@plt>
    d9c4:	mov	x0, x19
    d9c8:	mov	x2, #0x1                   	// #1
    d9cc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d9d0:	add	x1, x1, #0x7f8
    d9d4:	bl	4050 <PyModule_AddIntConstant@plt>
    d9d8:	mov	x0, x19
    d9dc:	mov	x2, #0x2                   	// #2
    d9e0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d9e4:	add	x1, x1, #0x808
    d9e8:	bl	4050 <PyModule_AddIntConstant@plt>
    d9ec:	mov	x0, x19
    d9f0:	mov	x2, #0x3                   	// #3
    d9f4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    d9f8:	add	x1, x1, #0x818
    d9fc:	bl	4050 <PyModule_AddIntConstant@plt>
    da00:	mov	x0, x19
    da04:	mov	x2, #0x4                   	// #4
    da08:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da0c:	add	x1, x1, #0x828
    da10:	bl	4050 <PyModule_AddIntConstant@plt>
    da14:	mov	x0, x19
    da18:	mov	x2, #0x5                   	// #5
    da1c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da20:	add	x1, x1, #0x840
    da24:	bl	4050 <PyModule_AddIntConstant@plt>
    da28:	mov	x0, x19
    da2c:	mov	x2, #0x6                   	// #6
    da30:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da34:	add	x1, x1, #0x858
    da38:	bl	4050 <PyModule_AddIntConstant@plt>
    da3c:	mov	x0, x19
    da40:	mov	x2, #0x0                   	// #0
    da44:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da48:	add	x1, x1, #0x868
    da4c:	bl	4050 <PyModule_AddIntConstant@plt>
    da50:	mov	x0, x19
    da54:	mov	x2, #0x1                   	// #1
    da58:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da5c:	add	x1, x1, #0x878
    da60:	bl	4050 <PyModule_AddIntConstant@plt>
    da64:	mov	x0, x19
    da68:	mov	x2, #0x2                   	// #2
    da6c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da70:	add	x1, x1, #0x888
    da74:	bl	4050 <PyModule_AddIntConstant@plt>
    da78:	mov	x0, x19
    da7c:	mov	x2, #0x3                   	// #3
    da80:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da84:	add	x1, x1, #0x898
    da88:	bl	4050 <PyModule_AddIntConstant@plt>
    da8c:	mov	x0, x19
    da90:	mov	x2, #0x1                   	// #1
    da94:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    da98:	add	x1, x1, #0x8a8
    da9c:	bl	4050 <PyModule_AddIntConstant@plt>
    daa0:	mov	x0, x19
    daa4:	mov	x2, #0x2                   	// #2
    daa8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    daac:	add	x1, x1, #0x8b8
    dab0:	bl	4050 <PyModule_AddIntConstant@plt>
    dab4:	mov	x0, x19
    dab8:	mov	x2, #0x3                   	// #3
    dabc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dac0:	add	x1, x1, #0x8c8
    dac4:	bl	4050 <PyModule_AddIntConstant@plt>
    dac8:	mov	x0, x19
    dacc:	mov	x2, #0x5                   	// #5
    dad0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dad4:	add	x1, x1, #0x8d8
    dad8:	bl	4050 <PyModule_AddIntConstant@plt>
    dadc:	mov	x0, x19
    dae0:	mov	x2, #0x4                   	// #4
    dae4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dae8:	add	x1, x1, #0x8e8
    daec:	bl	4050 <PyModule_AddIntConstant@plt>
    daf0:	mov	x0, x19
    daf4:	mov	x2, #0x80000               	// #524288
    daf8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dafc:	add	x1, x1, #0x8f8
    db00:	bl	4050 <PyModule_AddIntConstant@plt>
    db04:	mov	x0, x19
    db08:	mov	x2, #0x800                 	// #2048
    db0c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db10:	add	x1, x1, #0x908
    db14:	bl	4050 <PyModule_AddIntConstant@plt>
    db18:	mov	x0, x19
    db1c:	mov	x2, #0x1                   	// #1
    db20:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db24:	add	x1, x1, #0x918
    db28:	bl	4050 <PyModule_AddIntConstant@plt>
    db2c:	mov	x0, x19
    db30:	mov	x2, #0x1e                  	// #30
    db34:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db38:	add	x1, x1, #0x928
    db3c:	bl	4050 <PyModule_AddIntConstant@plt>
    db40:	mov	x0, x19
    db44:	mov	x2, #0x2                   	// #2
    db48:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db4c:	add	x1, x1, #0x938
    db50:	bl	4050 <PyModule_AddIntConstant@plt>
    db54:	mov	x0, x19
    db58:	mov	x2, #0x9                   	// #9
    db5c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db60:	add	x1, x1, #0x948
    db64:	bl	4050 <PyModule_AddIntConstant@plt>
    db68:	mov	x0, x19
    db6c:	mov	x2, #0x5                   	// #5
    db70:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db74:	add	x1, x1, #0x958
    db78:	bl	4050 <PyModule_AddIntConstant@plt>
    db7c:	mov	x0, x19
    db80:	mov	x2, #0x6                   	// #6
    db84:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db88:	add	x1, x1, #0x968
    db8c:	bl	4050 <PyModule_AddIntConstant@plt>
    db90:	mov	x0, x19
    db94:	mov	x2, #0xd                   	// #13
    db98:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    db9c:	add	x1, x1, #0x978
    dba0:	bl	4050 <PyModule_AddIntConstant@plt>
    dba4:	mov	x0, x19
    dba8:	mov	x2, #0xa                   	// #10
    dbac:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dbb0:	add	x1, x1, #0x988
    dbb4:	bl	4050 <PyModule_AddIntConstant@plt>
    dbb8:	mov	x0, x19
    dbbc:	mov	x2, #0xf                   	// #15
    dbc0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dbc4:	add	x1, x1, #0x998
    dbc8:	bl	4050 <PyModule_AddIntConstant@plt>
    dbcc:	mov	x0, x19
    dbd0:	mov	x2, #0x7                   	// #7
    dbd4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dbd8:	add	x1, x1, #0x9a8
    dbdc:	bl	4050 <PyModule_AddIntConstant@plt>
    dbe0:	mov	x0, x19
    dbe4:	mov	x2, #0x8                   	// #8
    dbe8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dbec:	add	x1, x1, #0x9b8
    dbf0:	bl	4050 <PyModule_AddIntConstant@plt>
    dbf4:	mov	x0, x19
    dbf8:	mov	x2, #0x13                  	// #19
    dbfc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc00:	add	x1, x1, #0x9c8
    dc04:	bl	4050 <PyModule_AddIntConstant@plt>
    dc08:	mov	x0, x19
    dc0c:	mov	x2, #0x12                  	// #18
    dc10:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc14:	add	x1, x1, #0x9d8
    dc18:	bl	4050 <PyModule_AddIntConstant@plt>
    dc1c:	mov	x0, x19
    dc20:	mov	x2, #0x15                  	// #21
    dc24:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc28:	add	x1, x1, #0x9e8
    dc2c:	bl	4050 <PyModule_AddIntConstant@plt>
    dc30:	mov	x0, x19
    dc34:	mov	x2, #0x14                  	// #20
    dc38:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc3c:	add	x1, x1, #0x9f8
    dc40:	bl	4050 <PyModule_AddIntConstant@plt>
    dc44:	mov	x0, x19
    dc48:	mov	x2, #0x4                   	// #4
    dc4c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc50:	add	x1, x1, #0xa08
    dc54:	bl	4050 <PyModule_AddIntConstant@plt>
    dc58:	mov	x0, x19
    dc5c:	mov	x2, #0x3                   	// #3
    dc60:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc64:	add	x1, x1, #0xa18
    dc68:	bl	4050 <PyModule_AddIntConstant@plt>
    dc6c:	mov	x0, x19
    dc70:	mov	x2, #0x10                  	// #16
    dc74:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc78:	add	x1, x1, #0xa20
    dc7c:	bl	4050 <PyModule_AddIntConstant@plt>
    dc80:	mov	x0, x19
    dc84:	mov	x2, #0x11                  	// #17
    dc88:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dc8c:	add	x1, x1, #0xa30
    dc90:	bl	4050 <PyModule_AddIntConstant@plt>
    dc94:	mov	x0, x19
    dc98:	mov	x2, #0x22                  	// #34
    dc9c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dca0:	add	x1, x1, #0xa40
    dca4:	bl	4050 <PyModule_AddIntConstant@plt>
    dca8:	mov	x0, x19
    dcac:	mov	x2, #0x1f                  	// #31
    dcb0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dcb4:	add	x1, x1, #0xa50
    dcb8:	bl	4050 <PyModule_AddIntConstant@plt>
    dcbc:	mov	x0, x19
    dcc0:	mov	x2, #0x19                  	// #25
    dcc4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dcc8:	add	x1, x1, #0xa60
    dccc:	bl	4050 <PyModule_AddIntConstant@plt>
    dcd0:	mov	x0, x19
    dcd4:	mov	x2, #0xc                   	// #12
    dcd8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dcdc:	add	x1, x1, #0xa70
    dce0:	bl	4050 <PyModule_AddIntConstant@plt>
    dce4:	mov	x0, x19
    dce8:	mov	x2, #0x24                  	// #36
    dcec:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dcf0:	add	x1, x1, #0xa80
    dcf4:	bl	4050 <PyModule_AddIntConstant@plt>
    dcf8:	mov	x0, x19
    dcfc:	mov	x2, #0x27                  	// #39
    dd00:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd04:	add	x1, x1, #0xa88
    dd08:	bl	4050 <PyModule_AddIntConstant@plt>
    dd0c:	mov	x0, x19
    dd10:	mov	x2, #0x26                  	// #38
    dd14:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd18:	add	x1, x1, #0xa98
    dd1c:	bl	4050 <PyModule_AddIntConstant@plt>
    dd20:	mov	x0, x19
    dd24:	mov	x2, #0x1000                	// #4096
    dd28:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd2c:	add	x1, x1, #0xaa8
    dd30:	bl	4050 <PyModule_AddIntConstant@plt>
    dd34:	mov	x0, x19
    dd38:	mov	x2, #0x1                   	// #1
    dd3c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd40:	add	x1, x1, #0xab8
    dd44:	bl	4050 <PyModule_AddIntConstant@plt>
    dd48:	mov	x0, x19
    dd4c:	mov	x2, #0x2                   	// #2
    dd50:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd54:	add	x1, x1, #0xac8
    dd58:	bl	4050 <PyModule_AddIntConstant@plt>
    dd5c:	mov	x0, x19
    dd60:	mov	x2, #0x1                   	// #1
    dd64:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd68:	add	x1, x1, #0xad8
    dd6c:	bl	4050 <PyModule_AddIntConstant@plt>
    dd70:	mov	x0, x19
    dd74:	mov	x2, #0x2                   	// #2
    dd78:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd7c:	add	x1, x1, #0xae0
    dd80:	bl	4050 <PyModule_AddIntConstant@plt>
    dd84:	mov	x0, x19
    dd88:	mov	x2, #0x4                   	// #4
    dd8c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dd90:	add	x1, x1, #0xaf0
    dd94:	bl	4050 <PyModule_AddIntConstant@plt>
    dd98:	mov	x0, x19
    dd9c:	mov	x2, #0x40                  	// #64
    dda0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dda4:	add	x1, x1, #0xb00
    dda8:	bl	4050 <PyModule_AddIntConstant@plt>
    ddac:	mov	x0, x19
    ddb0:	mov	x2, #0x80                  	// #128
    ddb4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    ddb8:	add	x1, x1, #0xb10
    ddbc:	bl	4050 <PyModule_AddIntConstant@plt>
    ddc0:	mov	x0, x19
    ddc4:	mov	x2, #0x20                  	// #32
    ddc8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    ddcc:	add	x1, x1, #0xb18
    ddd0:	bl	4050 <PyModule_AddIntConstant@plt>
    ddd4:	mov	x0, x19
    ddd8:	mov	x2, #0x8                   	// #8
    dddc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dde0:	add	x1, x1, #0xb28
    dde4:	bl	4050 <PyModule_AddIntConstant@plt>
    dde8:	mov	x0, x19
    ddec:	mov	x2, #0x100                 	// #256
    ddf0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    ddf4:	add	x1, x1, #0xb38
    ddf8:	bl	4050 <PyModule_AddIntConstant@plt>
    ddfc:	mov	x0, x19
    de00:	mov	x2, #0x4000                	// #16384
    de04:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de08:	add	x1, x1, #0xb48
    de0c:	bl	4050 <PyModule_AddIntConstant@plt>
    de10:	mov	x0, x19
    de14:	mov	x2, #0x40000000            	// #1073741824
    de18:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de1c:	add	x1, x1, #0xb58
    de20:	bl	4050 <PyModule_AddIntConstant@plt>
    de24:	mov	x0, x19
    de28:	mov	x2, #0x2000                	// #8192
    de2c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de30:	add	x1, x1, #0xb70
    de34:	bl	4050 <PyModule_AddIntConstant@plt>
    de38:	mov	x0, x19
    de3c:	mov	x2, #0x800                 	// #2048
    de40:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de44:	add	x1, x1, #0xb80
    de48:	bl	4050 <PyModule_AddIntConstant@plt>
    de4c:	mov	x0, x19
    de50:	mov	x2, #0x8000                	// #32768
    de54:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de58:	add	x1, x1, #0xb90
    de5c:	bl	4050 <PyModule_AddIntConstant@plt>
    de60:	mov	x0, x19
    de64:	mov	x2, #0x20000000            	// #536870912
    de68:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de6c:	add	x1, x1, #0xba0
    de70:	bl	4050 <PyModule_AddIntConstant@plt>
    de74:	mov	x0, x19
    de78:	mov	x2, #0x1                   	// #1
    de7c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de80:	add	x1, x1, #0xbb0
    de84:	bl	4050 <PyModule_AddIntConstant@plt>
    de88:	mov	x0, x19
    de8c:	mov	x2, #0x0                   	// #0
    de90:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    de94:	add	x1, x1, #0xbc0
    de98:	bl	4050 <PyModule_AddIntConstant@plt>
    de9c:	mov	x0, x19
    dea0:	mov	x2, #0x6                   	// #6
    dea4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dea8:	add	x1, x1, #0xbc8
    deac:	bl	4050 <PyModule_AddIntConstant@plt>
    deb0:	mov	x0, x19
    deb4:	mov	x2, #0x11                  	// #17
    deb8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    debc:	add	x1, x1, #0xbd0
    dec0:	bl	4050 <PyModule_AddIntConstant@plt>
    dec4:	mov	x0, x19
    dec8:	mov	x2, #0x64                  	// #100
    decc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    ded0:	add	x1, x1, #0xbd8
    ded4:	bl	4050 <PyModule_AddIntConstant@plt>
    ded8:	mov	x0, x19
    dedc:	mov	x2, #0x65                  	// #101
    dee0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dee4:	add	x1, x1, #0xbe8
    dee8:	bl	4050 <PyModule_AddIntConstant@plt>
    deec:	mov	x0, x19
    def0:	mov	x2, #0x1                   	// #1
    def4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    def8:	add	x1, x1, #0xbf8
    defc:	bl	4050 <PyModule_AddIntConstant@plt>
    df00:	mov	x0, x19
    df04:	mov	x2, #0x80000000            	// #2147483648
    df08:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df0c:	add	x1, x1, #0xc00
    df10:	bl	4050 <PyModule_AddIntConstant@plt>
    df14:	mov	x0, x19
    df18:	mov	x2, #0x40000000            	// #1073741824
    df1c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df20:	add	x1, x1, #0xc10
    df24:	bl	4050 <PyModule_AddIntConstant@plt>
    df28:	mov	x0, x19
    df2c:	mov	x2, #0x20000000            	// #536870912
    df30:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df34:	add	x1, x1, #0xc20
    df38:	bl	4050 <PyModule_AddIntConstant@plt>
    df3c:	mov	x0, x19
    df40:	mov	x2, #0x7ff                 	// #2047
    df44:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df48:	add	x1, x1, #0xc30
    df4c:	bl	4050 <PyModule_AddIntConstant@plt>
    df50:	mov	x0, x19
    df54:	mov	x2, #0x1fffffff            	// #536870911
    df58:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df5c:	add	x1, x1, #0xc40
    df60:	bl	4050 <PyModule_AddIntConstant@plt>
    df64:	mov	x0, x19
    df68:	mov	x2, #0x1fffffff            	// #536870911
    df6c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df70:	add	x1, x1, #0xc50
    df74:	bl	4050 <PyModule_AddIntConstant@plt>
    df78:	mov	x0, x19
    df7c:	mov	x2, #0x6                   	// #6
    df80:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df84:	add	x1, x1, #0xc60
    df88:	bl	4050 <PyModule_AddIntConstant@plt>
    df8c:	mov	x0, x19
    df90:	mov	x2, #0x1                   	// #1
    df94:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    df98:	add	x1, x1, #0xc70
    df9c:	bl	4050 <PyModule_AddIntConstant@plt>
    dfa0:	mov	x0, x19
    dfa4:	mov	x2, #0x2                   	// #2
    dfa8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dfac:	add	x1, x1, #0xc80
    dfb0:	bl	4050 <PyModule_AddIntConstant@plt>
    dfb4:	mov	x0, x19
    dfb8:	mov	x2, #0x3                   	// #3
    dfbc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dfc0:	add	x1, x1, #0xc98
    dfc4:	bl	4050 <PyModule_AddIntConstant@plt>
    dfc8:	mov	x0, x19
    dfcc:	mov	x2, #0x4                   	// #4
    dfd0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dfd4:	add	x1, x1, #0xcb0
    dfd8:	bl	4050 <PyModule_AddIntConstant@plt>
    dfdc:	mov	x0, x19
    dfe0:	mov	x2, #0x5                   	// #5
    dfe4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dfe8:	add	x1, x1, #0xcc8
    dfec:	bl	4050 <PyModule_AddIntConstant@plt>
    dff0:	mov	x0, x19
    dff4:	mov	x2, #0x2                   	// #2
    dff8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    dffc:	add	x1, x1, #0xce0
    e000:	bl	4050 <PyModule_AddIntConstant@plt>
    e004:	mov	x0, x19
    e008:	mov	x2, #0x1                   	// #1
    e00c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e010:	add	x1, x1, #0xce8
    e014:	bl	4050 <PyModule_AddIntConstant@plt>
    e018:	mov	x0, x19
    e01c:	mov	x2, #0x2                   	// #2
    e020:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e024:	add	x1, x1, #0xd00
    e028:	bl	4050 <PyModule_AddIntConstant@plt>
    e02c:	mov	x0, x19
    e030:	mov	x2, #0x3                   	// #3
    e034:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e038:	add	x1, x1, #0xd18
    e03c:	bl	4050 <PyModule_AddIntConstant@plt>
    e040:	mov	x0, x19
    e044:	mov	x2, #0x4                   	// #4
    e048:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e04c:	add	x1, x1, #0xd28
    e050:	bl	4050 <PyModule_AddIntConstant@plt>
    e054:	mov	x0, x19
    e058:	mov	x2, #0x5                   	// #5
    e05c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e060:	add	x1, x1, #0xd38
    e064:	bl	4050 <PyModule_AddIntConstant@plt>
    e068:	mov	x0, x19
    e06c:	mov	x2, #0x6                   	// #6
    e070:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e074:	add	x1, x1, #0xd50
    e078:	bl	4050 <PyModule_AddIntConstant@plt>
    e07c:	mov	x0, x19
    e080:	mov	x2, #0x7                   	// #7
    e084:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e088:	add	x1, x1, #0xd68
    e08c:	bl	4050 <PyModule_AddIntConstant@plt>
    e090:	mov	x0, x19
    e094:	mov	x2, #0x8                   	// #8
    e098:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e09c:	add	x1, x1, #0xd78
    e0a0:	bl	4050 <PyModule_AddIntConstant@plt>
    e0a4:	mov	x0, x19
    e0a8:	mov	x2, #0x9                   	// #9
    e0ac:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e0b0:	add	x1, x1, #0xd90
    e0b4:	bl	4050 <PyModule_AddIntConstant@plt>
    e0b8:	mov	x0, x19
    e0bc:	mov	x2, #0xa                   	// #10
    e0c0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e0c4:	add	x1, x1, #0xda8
    e0c8:	bl	4050 <PyModule_AddIntConstant@plt>
    e0cc:	mov	x0, x19
    e0d0:	mov	x2, #0xb                   	// #11
    e0d4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e0d8:	add	x1, x1, #0xdc0
    e0dc:	bl	4050 <PyModule_AddIntConstant@plt>
    e0e0:	mov	x0, x19
    e0e4:	mov	x2, #0xc                   	// #12
    e0e8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e0ec:	add	x1, x1, #0xdd8
    e0f0:	bl	4050 <PyModule_AddIntConstant@plt>
    e0f4:	mov	x0, x19
    e0f8:	mov	x2, #0x1                   	// #1
    e0fc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e100:	add	x1, x1, #0xdf0
    e104:	bl	4050 <PyModule_AddIntConstant@plt>
    e108:	mov	x0, x19
    e10c:	mov	x2, #0x2                   	// #2
    e110:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e114:	add	x1, x1, #0xe08
    e118:	bl	4050 <PyModule_AddIntConstant@plt>
    e11c:	mov	x0, x19
    e120:	mov	x2, #0x4                   	// #4
    e124:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e128:	add	x1, x1, #0xe20
    e12c:	bl	4050 <PyModule_AddIntConstant@plt>
    e130:	mov	x0, x19
    e134:	mov	x2, #0x8                   	// #8
    e138:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e13c:	add	x1, x1, #0xe38
    e140:	bl	4050 <PyModule_AddIntConstant@plt>
    e144:	mov	x0, x19
    e148:	mov	x2, #0x10                  	// #16
    e14c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e150:	add	x1, x1, #0xe50
    e154:	bl	4050 <PyModule_AddIntConstant@plt>
    e158:	mov	x0, x19
    e15c:	mov	x2, #0x20                  	// #32
    e160:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e164:	add	x1, x1, #0xe68
    e168:	bl	4050 <PyModule_AddIntConstant@plt>
    e16c:	mov	x0, x19
    e170:	mov	x2, #0x40                  	// #64
    e174:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e178:	add	x1, x1, #0xe80
    e17c:	bl	4050 <PyModule_AddIntConstant@plt>
    e180:	mov	x0, x19
    e184:	mov	x2, #0x80                  	// #128
    e188:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e18c:	add	x1, x1, #0xe98
    e190:	bl	4050 <PyModule_AddIntConstant@plt>
    e194:	mov	x0, x19
    e198:	mov	x2, #0x100                 	// #256
    e19c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e1a0:	add	x1, x1, #0xeb0
    e1a4:	bl	4050 <PyModule_AddIntConstant@plt>
    e1a8:	mov	x0, x19
    e1ac:	mov	x2, #0x200                 	// #512
    e1b0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e1b4:	add	x1, x1, #0xed0
    e1b8:	bl	4050 <PyModule_AddIntConstant@plt>
    e1bc:	mov	x0, x19
    e1c0:	mov	x2, #0x400                 	// #1024
    e1c4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e1c8:	add	x1, x1, #0xef0
    e1cc:	bl	4050 <PyModule_AddIntConstant@plt>
    e1d0:	mov	x0, x19
    e1d4:	mov	x2, #0x800                 	// #2048
    e1d8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e1dc:	add	x1, x1, #0xf08
    e1e0:	bl	4050 <PyModule_AddIntConstant@plt>
    e1e4:	mov	x0, x19
    e1e8:	mov	x2, #0x114                 	// #276
    e1ec:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e1f0:	add	x1, x1, #0xf20
    e1f4:	bl	4050 <PyModule_AddIntConstant@plt>
    e1f8:	mov	x0, x19
    e1fc:	mov	x2, #0x117                 	// #279
    e200:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e204:	add	x1, x1, #0xf28
    e208:	bl	4050 <PyModule_AddIntConstant@plt>
    e20c:	mov	x0, x19
    e210:	mov	x2, #0x0                   	// #0
    e214:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e218:	add	x1, x1, #0xf30
    e21c:	bl	4050 <PyModule_AddIntConstant@plt>
    e220:	mov	x0, x19
    e224:	mov	x2, #0x0                   	// #0
    e228:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e22c:	add	x1, x1, #0xf40
    e230:	bl	4050 <PyModule_AddIntConstant@plt>
    e234:	mov	x0, x19
    e238:	mov	x2, #0x1                   	// #1
    e23c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e240:	add	x1, x1, #0xf50
    e244:	bl	4050 <PyModule_AddIntConstant@plt>
    e248:	mov	x0, x19
    e24c:	mov	x2, #0x2                   	// #2
    e250:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e254:	add	x1, x1, #0xf60
    e258:	bl	4050 <PyModule_AddIntConstant@plt>
    e25c:	mov	x0, x19
    e260:	mov	x2, #0x29                  	// #41
    e264:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e268:	add	x1, x1, #0xf70
    e26c:	bl	4050 <PyModule_AddIntConstant@plt>
    e270:	mov	x0, x19
    e274:	mov	x2, #0x4                   	// #4
    e278:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e27c:	add	x1, x1, #0xf80
    e280:	bl	4050 <PyModule_AddIntConstant@plt>
    e284:	mov	x0, x19
    e288:	mov	x2, #0x6                   	// #6
    e28c:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e290:	add	x1, x1, #0xf90
    e294:	bl	4050 <PyModule_AddIntConstant@plt>
    e298:	mov	x0, x19
    e29c:	mov	x2, #0x8                   	// #8
    e2a0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e2a4:	add	x1, x1, #0xfa0
    e2a8:	bl	4050 <PyModule_AddIntConstant@plt>
    e2ac:	mov	x0, x19
    e2b0:	mov	x2, #0xc                   	// #12
    e2b4:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e2b8:	add	x1, x1, #0xfb0
    e2bc:	bl	4050 <PyModule_AddIntConstant@plt>
    e2c0:	mov	x0, x19
    e2c4:	mov	x2, #0x11                  	// #17
    e2c8:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e2cc:	add	x1, x1, #0xfc0
    e2d0:	bl	4050 <PyModule_AddIntConstant@plt>
    e2d4:	mov	x0, x19
    e2d8:	mov	x2, #0x16                  	// #22
    e2dc:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e2e0:	add	x1, x1, #0xfd0
    e2e4:	bl	4050 <PyModule_AddIntConstant@plt>
    e2e8:	mov	x0, x19
    e2ec:	mov	x2, #0x1d                  	// #29
    e2f0:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e2f4:	add	x1, x1, #0xfe0
    e2f8:	bl	4050 <PyModule_AddIntConstant@plt>
    e2fc:	mov	x0, x19
    e300:	mov	x2, #0x2b                  	// #43
    e304:	adrp	x1, 10000 <PyInit__socket@@Base+0x2e80>
    e308:	add	x1, x1, #0xff0
    e30c:	bl	4050 <PyModule_AddIntConstant@plt>
    e310:	mov	x0, x19
    e314:	mov	x2, #0x2c                  	// #44
    e318:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e31c:	add	x1, x1, #0x0
    e320:	bl	4050 <PyModule_AddIntConstant@plt>
    e324:	mov	x0, x19
    e328:	mov	x2, #0x2e                  	// #46
    e32c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e330:	add	x1, x1, #0x18
    e334:	bl	4050 <PyModule_AddIntConstant@plt>
    e338:	mov	x0, x19
    e33c:	mov	x2, #0x2f                  	// #47
    e340:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e344:	add	x1, x1, #0x28
    e348:	bl	4050 <PyModule_AddIntConstant@plt>
    e34c:	mov	x0, x19
    e350:	mov	x2, #0x32                  	// #50
    e354:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e358:	add	x1, x1, #0x38
    e35c:	bl	4050 <PyModule_AddIntConstant@plt>
    e360:	mov	x0, x19
    e364:	mov	x2, #0x33                  	// #51
    e368:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e36c:	add	x1, x1, #0x48
    e370:	bl	4050 <PyModule_AddIntConstant@plt>
    e374:	mov	x0, x19
    e378:	mov	x2, #0x3a                  	// #58
    e37c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e380:	add	x1, x1, #0x58
    e384:	bl	4050 <PyModule_AddIntConstant@plt>
    e388:	mov	x0, x19
    e38c:	mov	x2, #0x3b                  	// #59
    e390:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e394:	add	x1, x1, #0x68
    e398:	bl	4050 <PyModule_AddIntConstant@plt>
    e39c:	mov	x0, x19
    e3a0:	mov	x2, #0x3c                  	// #60
    e3a4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e3a8:	add	x1, x1, #0x78
    e3ac:	bl	4050 <PyModule_AddIntConstant@plt>
    e3b0:	mov	x0, x19
    e3b4:	mov	x2, #0x67                  	// #103
    e3b8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e3bc:	add	x1, x1, #0x88
    e3c0:	bl	4050 <PyModule_AddIntConstant@plt>
    e3c4:	mov	x0, x19
    e3c8:	mov	x2, #0x84                  	// #132
    e3cc:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e3d0:	add	x1, x1, #0x98
    e3d4:	bl	4050 <PyModule_AddIntConstant@plt>
    e3d8:	mov	x0, x19
    e3dc:	mov	x2, #0xff                  	// #255
    e3e0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e3e4:	add	x1, x1, #0xa8
    e3e8:	bl	4050 <PyModule_AddIntConstant@plt>
    e3ec:	mov	x0, x19
    e3f0:	mov	x2, #0x400                 	// #1024
    e3f4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e3f8:	add	x1, x1, #0xb8
    e3fc:	bl	4050 <PyModule_AddIntConstant@plt>
    e400:	mov	x0, x19
    e404:	mov	x2, #0x1388                	// #5000
    e408:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e40c:	add	x1, x1, #0xc8
    e410:	bl	4050 <PyModule_AddIntConstant@plt>
    e414:	mov	x0, x19
    e418:	mov	x2, #0x0                   	// #0
    e41c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e420:	add	x1, x1, #0xe0
    e424:	bl	4050 <PyModule_AddIntConstant@plt>
    e428:	mov	x0, x19
    e42c:	mov	x2, #0xffffffff            	// #4294967295
    e430:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e434:	add	x1, x1, #0xf0
    e438:	bl	4050 <PyModule_AddIntConstant@plt>
    e43c:	mov	x2, #0x1                   	// #1
    e440:	mov	x0, x19
    e444:	movk	x2, #0x7f00, lsl #16
    e448:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e44c:	add	x1, x1, #0x108
    e450:	bl	4050 <PyModule_AddIntConstant@plt>
    e454:	mov	x0, x19
    e458:	mov	x2, #0xe0000000            	// #3758096384
    e45c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e460:	add	x1, x1, #0x118
    e464:	bl	4050 <PyModule_AddIntConstant@plt>
    e468:	mov	x0, x19
    e46c:	mov	w2, #0xe0000001            	// #-536870911
    e470:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e474:	add	x1, x1, #0x130
    e478:	bl	4050 <PyModule_AddIntConstant@plt>
    e47c:	mov	x0, x19
    e480:	mov	w2, #0xe00000ff            	// #-536870657
    e484:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e488:	add	x1, x1, #0x148
    e48c:	bl	4050 <PyModule_AddIntConstant@plt>
    e490:	mov	x0, x19
    e494:	mov	x2, #0xffffffff            	// #4294967295
    e498:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e49c:	add	x1, x1, #0x160
    e4a0:	bl	4050 <PyModule_AddIntConstant@plt>
    e4a4:	mov	x0, x19
    e4a8:	mov	x2, #0x4                   	// #4
    e4ac:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e4b0:	add	x1, x1, #0x170
    e4b4:	bl	4050 <PyModule_AddIntConstant@plt>
    e4b8:	mov	x0, x19
    e4bc:	mov	x2, #0x3                   	// #3
    e4c0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e4c4:	add	x1, x1, #0x180
    e4c8:	bl	4050 <PyModule_AddIntConstant@plt>
    e4cc:	mov	x0, x19
    e4d0:	mov	x2, #0x1                   	// #1
    e4d4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e4d8:	add	x1, x1, #0x190
    e4dc:	bl	4050 <PyModule_AddIntConstant@plt>
    e4e0:	mov	x0, x19
    e4e4:	mov	x2, #0x2                   	// #2
    e4e8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e4ec:	add	x1, x1, #0x198
    e4f0:	bl	4050 <PyModule_AddIntConstant@plt>
    e4f4:	mov	x0, x19
    e4f8:	mov	x2, #0x6                   	// #6
    e4fc:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e500:	add	x1, x1, #0x1a0
    e504:	bl	4050 <PyModule_AddIntConstant@plt>
    e508:	mov	x0, x19
    e50c:	mov	x2, #0x7                   	// #7
    e510:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e514:	add	x1, x1, #0x1b0
    e518:	bl	4050 <PyModule_AddIntConstant@plt>
    e51c:	mov	x0, x19
    e520:	mov	x2, #0x7                   	// #7
    e524:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e528:	add	x1, x1, #0x1c0
    e52c:	bl	4050 <PyModule_AddIntConstant@plt>
    e530:	mov	x0, x19
    e534:	mov	x2, #0x20                  	// #32
    e538:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e53c:	add	x1, x1, #0x1d0
    e540:	bl	4050 <PyModule_AddIntConstant@plt>
    e544:	mov	x0, x19
    e548:	mov	x2, #0x21                  	// #33
    e54c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e550:	add	x1, x1, #0x1e0
    e554:	bl	4050 <PyModule_AddIntConstant@plt>
    e558:	mov	x0, x19
    e55c:	mov	x2, #0x22                  	// #34
    e560:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e564:	add	x1, x1, #0x1f8
    e568:	bl	4050 <PyModule_AddIntConstant@plt>
    e56c:	mov	x0, x19
    e570:	mov	x2, #0x23                  	// #35
    e574:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e578:	add	x1, x1, #0x210
    e57c:	bl	4050 <PyModule_AddIntConstant@plt>
    e580:	mov	x0, x19
    e584:	mov	x2, #0x24                  	// #36
    e588:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e58c:	add	x1, x1, #0x228
    e590:	bl	4050 <PyModule_AddIntConstant@plt>
    e594:	mov	x0, x19
    e598:	mov	x2, #0x1                   	// #1
    e59c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e5a0:	add	x1, x1, #0x240
    e5a4:	bl	4050 <PyModule_AddIntConstant@plt>
    e5a8:	mov	x0, x19
    e5ac:	mov	x2, #0x1                   	// #1
    e5b0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e5b4:	add	x1, x1, #0x260
    e5b8:	bl	4050 <PyModule_AddIntConstant@plt>
    e5bc:	mov	x0, x19
    e5c0:	mov	x2, #0x14                  	// #20
    e5c4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e5c8:	add	x1, x1, #0x280
    e5cc:	bl	4050 <PyModule_AddIntConstant@plt>
    e5d0:	mov	x0, x19
    e5d4:	mov	x2, #0x13                  	// #19
    e5d8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e5dc:	add	x1, x1, #0x298
    e5e0:	bl	4050 <PyModule_AddIntConstant@plt>
    e5e4:	mov	x0, x19
    e5e8:	mov	x2, #0x14                  	// #20
    e5ec:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e5f0:	add	x1, x1, #0x2a8
    e5f4:	bl	4050 <PyModule_AddIntConstant@plt>
    e5f8:	mov	x0, x19
    e5fc:	mov	x2, #0x15                  	// #21
    e600:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e604:	add	x1, x1, #0x2b8
    e608:	bl	4050 <PyModule_AddIntConstant@plt>
    e60c:	mov	x0, x19
    e610:	mov	x2, #0x12                  	// #18
    e614:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e618:	add	x1, x1, #0x2d0
    e61c:	bl	4050 <PyModule_AddIntConstant@plt>
    e620:	mov	x0, x19
    e624:	mov	x2, #0x11                  	// #17
    e628:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e62c:	add	x1, x1, #0x2e8
    e630:	bl	4050 <PyModule_AddIntConstant@plt>
    e634:	mov	x0, x19
    e638:	mov	x2, #0x13                  	// #19
    e63c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e640:	add	x1, x1, #0x300
    e644:	bl	4050 <PyModule_AddIntConstant@plt>
    e648:	mov	x0, x19
    e64c:	mov	x2, #0x10                  	// #16
    e650:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e654:	add	x1, x1, #0x318
    e658:	bl	4050 <PyModule_AddIntConstant@plt>
    e65c:	mov	x0, x19
    e660:	mov	x2, #0x1a                  	// #26
    e664:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e668:	add	x1, x1, #0x330
    e66c:	bl	4050 <PyModule_AddIntConstant@plt>
    e670:	mov	x0, x19
    e674:	mov	x2, #0x7                   	// #7
    e678:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e67c:	add	x1, x1, #0x340
    e680:	bl	4050 <PyModule_AddIntConstant@plt>
    e684:	mov	x0, x19
    e688:	mov	x2, #0x3e                  	// #62
    e68c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e690:	add	x1, x1, #0x350
    e694:	bl	4050 <PyModule_AddIntConstant@plt>
    e698:	mov	x0, x19
    e69c:	mov	x2, #0x3b                  	// #59
    e6a0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e6a4:	add	x1, x1, #0x360
    e6a8:	bl	4050 <PyModule_AddIntConstant@plt>
    e6ac:	mov	x0, x19
    e6b0:	mov	x2, #0x34                  	// #52
    e6b4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e6b8:	add	x1, x1, #0x370
    e6bc:	bl	4050 <PyModule_AddIntConstant@plt>
    e6c0:	mov	x0, x19
    e6c4:	mov	x2, #0x36                  	// #54
    e6c8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e6cc:	add	x1, x1, #0x380
    e6d0:	bl	4050 <PyModule_AddIntConstant@plt>
    e6d4:	mov	x0, x19
    e6d8:	mov	x2, #0x9                   	// #9
    e6dc:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e6e0:	add	x1, x1, #0x390
    e6e4:	bl	4050 <PyModule_AddIntConstant@plt>
    e6e8:	mov	x0, x19
    e6ec:	mov	x2, #0x3d                  	// #61
    e6f0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e6f4:	add	x1, x1, #0x3a0
    e6f8:	bl	4050 <PyModule_AddIntConstant@plt>
    e6fc:	mov	x0, x19
    e700:	mov	x2, #0x32                  	// #50
    e704:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e708:	add	x1, x1, #0x3b0
    e70c:	bl	4050 <PyModule_AddIntConstant@plt>
    e710:	mov	x0, x19
    e714:	mov	x2, #0x3a                  	// #58
    e718:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e71c:	add	x1, x1, #0x3c0
    e720:	bl	4050 <PyModule_AddIntConstant@plt>
    e724:	mov	x0, x19
    e728:	mov	x2, #0x33                  	// #51
    e72c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e730:	add	x1, x1, #0x3d8
    e734:	bl	4050 <PyModule_AddIntConstant@plt>
    e738:	mov	x0, x19
    e73c:	mov	x2, #0x35                  	// #53
    e740:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e744:	add	x1, x1, #0x3f0
    e748:	bl	4050 <PyModule_AddIntConstant@plt>
    e74c:	mov	x0, x19
    e750:	mov	x2, #0x31                  	// #49
    e754:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e758:	add	x1, x1, #0x408
    e75c:	bl	4050 <PyModule_AddIntConstant@plt>
    e760:	mov	x0, x19
    e764:	mov	x2, #0x38                  	// #56
    e768:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e76c:	add	x1, x1, #0x420
    e770:	bl	4050 <PyModule_AddIntConstant@plt>
    e774:	mov	x0, x19
    e778:	mov	x2, #0x42                  	// #66
    e77c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e780:	add	x1, x1, #0x430
    e784:	bl	4050 <PyModule_AddIntConstant@plt>
    e788:	mov	x0, x19
    e78c:	mov	x2, #0x39                  	// #57
    e790:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e794:	add	x1, x1, #0x440
    e798:	bl	4050 <PyModule_AddIntConstant@plt>
    e79c:	mov	x0, x19
    e7a0:	mov	x2, #0x37                  	// #55
    e7a4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e7a8:	add	x1, x1, #0x450
    e7ac:	bl	4050 <PyModule_AddIntConstant@plt>
    e7b0:	mov	x0, x19
    e7b4:	mov	x2, #0x0                   	// #0
    e7b8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e7bc:	add	x1, x1, #0x468
    e7c0:	bl	4050 <PyModule_AddIntConstant@plt>
    e7c4:	mov	x0, x19
    e7c8:	mov	x2, #0x3c                  	// #60
    e7cc:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e7d0:	add	x1, x1, #0x480
    e7d4:	bl	4050 <PyModule_AddIntConstant@plt>
    e7d8:	mov	x0, x19
    e7dc:	mov	x2, #0x43                  	// #67
    e7e0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e7e4:	add	x1, x1, #0x498
    e7e8:	bl	4050 <PyModule_AddIntConstant@plt>
    e7ec:	mov	x0, x19
    e7f0:	mov	x2, #0x1                   	// #1
    e7f4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e7f8:	add	x1, x1, #0x4a8
    e7fc:	bl	4050 <PyModule_AddIntConstant@plt>
    e800:	mov	x0, x19
    e804:	mov	x2, #0x2                   	// #2
    e808:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e80c:	add	x1, x1, #0x4b8
    e810:	bl	4050 <PyModule_AddIntConstant@plt>
    e814:	mov	x0, x19
    e818:	mov	x2, #0x3                   	// #3
    e81c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e820:	add	x1, x1, #0x4c8
    e824:	bl	4050 <PyModule_AddIntConstant@plt>
    e828:	mov	x0, x19
    e82c:	mov	x2, #0x4                   	// #4
    e830:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e834:	add	x1, x1, #0x4d8
    e838:	bl	4050 <PyModule_AddIntConstant@plt>
    e83c:	mov	x0, x19
    e840:	mov	x2, #0x5                   	// #5
    e844:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e848:	add	x1, x1, #0x4e8
    e84c:	bl	4050 <PyModule_AddIntConstant@plt>
    e850:	mov	x0, x19
    e854:	mov	x2, #0x6                   	// #6
    e858:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e85c:	add	x1, x1, #0x4f8
    e860:	bl	4050 <PyModule_AddIntConstant@plt>
    e864:	mov	x0, x19
    e868:	mov	x2, #0x7                   	// #7
    e86c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e870:	add	x1, x1, #0x508
    e874:	bl	4050 <PyModule_AddIntConstant@plt>
    e878:	mov	x0, x19
    e87c:	mov	x2, #0x8                   	// #8
    e880:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e884:	add	x1, x1, #0x518
    e888:	bl	4050 <PyModule_AddIntConstant@plt>
    e88c:	mov	x0, x19
    e890:	mov	x2, #0x9                   	// #9
    e894:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e898:	add	x1, x1, #0x528
    e89c:	bl	4050 <PyModule_AddIntConstant@plt>
    e8a0:	mov	x0, x19
    e8a4:	mov	x2, #0xa                   	// #10
    e8a8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e8ac:	add	x1, x1, #0x540
    e8b0:	bl	4050 <PyModule_AddIntConstant@plt>
    e8b4:	mov	x0, x19
    e8b8:	mov	x2, #0xb                   	// #11
    e8bc:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e8c0:	add	x1, x1, #0x558
    e8c4:	bl	4050 <PyModule_AddIntConstant@plt>
    e8c8:	mov	x0, x19
    e8cc:	mov	x2, #0xc                   	// #12
    e8d0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e8d4:	add	x1, x1, #0x568
    e8d8:	bl	4050 <PyModule_AddIntConstant@plt>
    e8dc:	mov	x0, x19
    e8e0:	mov	x2, #0x17                  	// #23
    e8e4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e8e8:	add	x1, x1, #0x578
    e8ec:	bl	4050 <PyModule_AddIntConstant@plt>
    e8f0:	mov	x0, x19
    e8f4:	mov	x2, #0xd                   	// #13
    e8f8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e8fc:	add	x1, x1, #0x588
    e900:	bl	4050 <PyModule_AddIntConstant@plt>
    e904:	mov	x0, x19
    e908:	mov	x2, #0x12                  	// #18
    e90c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e910:	add	x1, x1, #0x598
    e914:	bl	4050 <PyModule_AddIntConstant@plt>
    e918:	mov	x0, x19
    e91c:	mov	x2, #0x19                  	// #25
    e920:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e924:	add	x1, x1, #0x5b0
    e928:	bl	4050 <PyModule_AddIntConstant@plt>
    e92c:	mov	x0, x19
    e930:	mov	x2, #0xfffffffffffffff7    	// #-9
    e934:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e938:	add	x1, x1, #0x5c8
    e93c:	bl	4050 <PyModule_AddIntConstant@plt>
    e940:	mov	x0, x19
    e944:	mov	x2, #0xfffffffffffffffd    	// #-3
    e948:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e94c:	add	x1, x1, #0x5d8
    e950:	bl	4050 <PyModule_AddIntConstant@plt>
    e954:	mov	x0, x19
    e958:	mov	x2, #0xffffffffffffffff    	// #-1
    e95c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e960:	add	x1, x1, #0x5e8
    e964:	bl	4050 <PyModule_AddIntConstant@plt>
    e968:	mov	x0, x19
    e96c:	mov	x2, #0xfffffffffffffffc    	// #-4
    e970:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e974:	add	x1, x1, #0x5f8
    e978:	bl	4050 <PyModule_AddIntConstant@plt>
    e97c:	mov	x0, x19
    e980:	mov	x2, #0xfffffffffffffffa    	// #-6
    e984:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e988:	add	x1, x1, #0x608
    e98c:	bl	4050 <PyModule_AddIntConstant@plt>
    e990:	mov	x0, x19
    e994:	mov	x2, #0xfffffffffffffff6    	// #-10
    e998:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e99c:	add	x1, x1, #0x618
    e9a0:	bl	4050 <PyModule_AddIntConstant@plt>
    e9a4:	mov	x0, x19
    e9a8:	mov	x2, #0xfffffffffffffffb    	// #-5
    e9ac:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e9b0:	add	x1, x1, #0x628
    e9b4:	bl	4050 <PyModule_AddIntConstant@plt>
    e9b8:	mov	x0, x19
    e9bc:	mov	x2, #0xfffffffffffffffe    	// #-2
    e9c0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e9c4:	add	x1, x1, #0x638
    e9c8:	bl	4050 <PyModule_AddIntConstant@plt>
    e9cc:	mov	x0, x19
    e9d0:	mov	x2, #0xfffffffffffffff4    	// #-12
    e9d4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e9d8:	add	x1, x1, #0x648
    e9dc:	bl	4050 <PyModule_AddIntConstant@plt>
    e9e0:	mov	x0, x19
    e9e4:	mov	x2, #0xfffffffffffffff8    	// #-8
    e9e8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    e9ec:	add	x1, x1, #0x658
    e9f0:	bl	4050 <PyModule_AddIntConstant@plt>
    e9f4:	mov	x0, x19
    e9f8:	mov	x2, #0xfffffffffffffff9    	// #-7
    e9fc:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea00:	add	x1, x1, #0x668
    ea04:	bl	4050 <PyModule_AddIntConstant@plt>
    ea08:	mov	x0, x19
    ea0c:	mov	x2, #0xfffffffffffffff5    	// #-11
    ea10:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea14:	add	x1, x1, #0x678
    ea18:	bl	4050 <PyModule_AddIntConstant@plt>
    ea1c:	mov	x0, x19
    ea20:	mov	x2, #0x1                   	// #1
    ea24:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea28:	add	x1, x1, #0x688
    ea2c:	bl	4050 <PyModule_AddIntConstant@plt>
    ea30:	mov	x0, x19
    ea34:	mov	x2, #0x2                   	// #2
    ea38:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea3c:	add	x1, x1, #0x698
    ea40:	bl	4050 <PyModule_AddIntConstant@plt>
    ea44:	mov	x0, x19
    ea48:	mov	x2, #0x4                   	// #4
    ea4c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea50:	add	x1, x1, #0x6a8
    ea54:	bl	4050 <PyModule_AddIntConstant@plt>
    ea58:	mov	x0, x19
    ea5c:	mov	x2, #0x400                 	// #1024
    ea60:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea64:	add	x1, x1, #0x6b8
    ea68:	bl	4050 <PyModule_AddIntConstant@plt>
    ea6c:	mov	x0, x19
    ea70:	mov	x2, #0x10                  	// #16
    ea74:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea78:	add	x1, x1, #0x6c8
    ea7c:	bl	4050 <PyModule_AddIntConstant@plt>
    ea80:	mov	x0, x19
    ea84:	mov	x2, #0x20                  	// #32
    ea88:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    ea8c:	add	x1, x1, #0x6d0
    ea90:	bl	4050 <PyModule_AddIntConstant@plt>
    ea94:	mov	x0, x19
    ea98:	mov	x2, #0x8                   	// #8
    ea9c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eaa0:	add	x1, x1, #0x6e0
    eaa4:	bl	4050 <PyModule_AddIntConstant@plt>
    eaa8:	mov	x0, x19
    eaac:	mov	x2, #0x401                 	// #1025
    eab0:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eab4:	add	x1, x1, #0x6f0
    eab8:	bl	4050 <PyModule_AddIntConstant@plt>
    eabc:	mov	x0, x19
    eac0:	mov	x2, #0x20                  	// #32
    eac4:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eac8:	add	x1, x1, #0x700
    eacc:	bl	4050 <PyModule_AddIntConstant@plt>
    ead0:	mov	x0, x19
    ead4:	mov	x2, #0x4                   	// #4
    ead8:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eadc:	add	x1, x1, #0x710
    eae0:	bl	4050 <PyModule_AddIntConstant@plt>
    eae4:	mov	x0, x19
    eae8:	mov	x2, #0x1                   	// #1
    eaec:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eaf0:	add	x1, x1, #0x720
    eaf4:	bl	4050 <PyModule_AddIntConstant@plt>
    eaf8:	mov	x0, x19
    eafc:	mov	x2, #0x8                   	// #8
    eb00:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eb04:	add	x1, x1, #0x730
    eb08:	bl	4050 <PyModule_AddIntConstant@plt>
    eb0c:	mov	x0, x19
    eb10:	mov	x2, #0x2                   	// #2
    eb14:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eb18:	add	x1, x1, #0x740
    eb1c:	bl	4050 <PyModule_AddIntConstant@plt>
    eb20:	mov	x0, x19
    eb24:	mov	x2, #0x10                  	// #16
    eb28:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eb2c:	add	x1, x1, #0x750
    eb30:	bl	4050 <PyModule_AddIntConstant@plt>
    eb34:	mov	x0, x19
    eb38:	mov	x2, #0x0                   	// #0
    eb3c:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eb40:	add	x1, x1, #0x760
    eb44:	bl	4050 <PyModule_AddIntConstant@plt>
    eb48:	mov	x0, x19
    eb4c:	mov	x2, #0x1                   	// #1
    eb50:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eb54:	add	x1, x1, #0x768
    eb58:	bl	4050 <PyModule_AddIntConstant@plt>
    eb5c:	mov	x0, x19
    eb60:	mov	x2, #0x2                   	// #2
    eb64:	adrp	x1, 11000 <PyInit__socket@@Base+0x3e80>
    eb68:	add	x1, x1, #0x770
    eb6c:	bl	4050 <PyModule_AddIntConstant@plt>
    eb70:	mov	x0, x19
    eb74:	ldp	x19, x20, [sp, #16]
    eb78:	ldp	x21, x22, [sp, #32]
    eb7c:	ldp	x23, x24, [sp, #48]
    eb80:	ldp	x29, x30, [sp], #64
    eb84:	ret
    eb88:	mov	x19, #0x0                   	// #0
    eb8c:	mov	x0, x19
    eb90:	ldp	x19, x20, [sp, #16]
    eb94:	ldp	x21, x22, [sp, #32]
    eb98:	ldp	x23, x24, [sp, #48]
    eb9c:	ldp	x29, x30, [sp], #64
    eba0:	ret

Disassembly of section .fini:

000000000000eba4 <.fini>:
    eba4:	stp	x29, x30, [sp, #-16]!
    eba8:	mov	x29, sp
    ebac:	ldp	x29, x30, [sp], #16
    ebb0:	ret
