In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTarget.a_clang_-O3:

Target.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>

0000000000000024 <LLVMInitializeTarget>:
  24:	stp	x29, x30, [sp, #-32]!
  28:	str	x19, [sp, #16]
  2c:	mov	x29, sp
  30:	mov	x19, x0
  34:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>

0000000000000048 <LLVMGetModuleDataLayout>:
  48:	b	0 <_ZNK4llvm6Module13getDataLayoutEv>

000000000000004c <LLVMSetModuleDataLayout>:
  4c:	b	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>

0000000000000050 <LLVMCreateTargetData>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	stp	x20, x19, [sp, #16]
  58:	mov	x29, sp
  5c:	mov	x19, x0
  60:	mov	w0, #0x1b0                 	// #432
  64:	bl	0 <_Znwm>
  68:	mov	x20, x0
  6c:	cbz	x19, 80 <LLVMCreateTargetData+0x30>
  70:	mov	x0, x19
  74:	bl	0 <strlen>
  78:	mov	x2, x0
  7c:	b	84 <LLVMCreateTargetData+0x34>
  80:	mov	x2, xzr
  84:	adrp	x9, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  88:	ldr	d0, [x9]
  8c:	adrp	x9, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  90:	ldr	d1, [x9]
  94:	add	x8, x20, #0x30
  98:	str	x8, [x20, #32]
  9c:	add	x8, x20, #0x48
  a0:	mov	x9, x20
  a4:	str	x8, [x20, #56]
  a8:	add	x8, x20, #0xf8
  ac:	strh	wzr, [x20, #8]
  b0:	strh	wzr, [x20, #16]
  b4:	str	d0, [x20, #40]
  b8:	str	d1, [x20, #64]
  bc:	strb	wzr, [x9, #216]!
  c0:	str	x8, [x20, #232]
  c4:	add	x8, x20, #0x190
  c8:	mov	x0, x20
  cc:	mov	x1, x19
  d0:	stp	xzr, x8, [x20, #376]
  d4:	str	d0, [x20, #240]
  d8:	stp	x9, xzr, [x20, #200]
  dc:	str	d0, [x20, #392]
  e0:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
  e4:	mov	x0, x20
  e8:	ldp	x20, x19, [sp, #16]
  ec:	ldp	x29, x30, [sp], #32
  f0:	ret

00000000000000f4 <LLVMDisposeTargetData>:
  f4:	cbz	x0, 11c <LLVMDisposeTargetData+0x28>
  f8:	stp	x29, x30, [sp, #-32]!
  fc:	str	x19, [sp, #16]
 100:	mov	x29, sp
 104:	mov	x19, x0
 108:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
 10c:	mov	x0, x19
 110:	ldr	x19, [sp, #16]
 114:	ldp	x29, x30, [sp], #32
 118:	b	0 <_ZdlPv>
 11c:	ret

0000000000000120 <LLVMAddTargetLibraryInfo>:
 120:	stp	x29, x30, [sp, #-48]!
 124:	str	x21, [sp, #16]
 128:	stp	x20, x19, [sp, #32]
 12c:	mov	x29, sp
 130:	mov	x20, x0
 134:	mov	w0, #0x118                 	// #280
 138:	mov	x19, x1
 13c:	bl	0 <_Znwm>
 140:	mov	x1, x20
 144:	mov	x21, x0
 148:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPassC1ERKNS_21TargetLibraryInfoImplE>
 14c:	ldr	x8, [x19]
 150:	mov	x0, x19
 154:	mov	x1, x21
 158:	ldp	x20, x19, [sp, #32]
 15c:	ldr	x2, [x8, #16]
 160:	ldr	x21, [sp, #16]
 164:	ldp	x29, x30, [sp], #48
 168:	br	x2

000000000000016c <LLVMCopyStringRepOfTargetData>:
 16c:	sub	sp, sp, #0x50
 170:	stp	x29, x30, [sp, #32]
 174:	str	x21, [sp, #48]
 178:	stp	x20, x19, [sp, #64]
 17c:	add	x29, sp, #0x20
 180:	mov	x8, sp
 184:	add	x21, x8, #0x10
 188:	str	x21, [sp]
 18c:	ldp	x19, x20, [x0, #200]
 190:	cbnz	x19, 198 <LLVMCopyStringRepOfTargetData+0x2c>
 194:	cbnz	x20, 238 <LLVMCopyStringRepOfTargetData+0xcc>
 198:	cmp	x20, #0x10
 19c:	str	x20, [x29, #24]
 1a0:	b.cc	1c8 <LLVMCopyStringRepOfTargetData+0x5c>  // b.lo, b.ul, b.last
 1a4:	mov	x0, sp
 1a8:	add	x1, x29, #0x18
 1ac:	mov	x2, xzr
 1b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1b4:	ldr	x8, [x29, #24]
 1b8:	str	x0, [sp]
 1bc:	str	x8, [sp, #16]
 1c0:	cbnz	x20, 1d0 <LLVMCopyStringRepOfTargetData+0x64>
 1c4:	b	1f0 <LLVMCopyStringRepOfTargetData+0x84>
 1c8:	mov	x0, x21
 1cc:	cbz	x20, 1f0 <LLVMCopyStringRepOfTargetData+0x84>
 1d0:	cmp	x20, #0x1
 1d4:	b.ne	1e4 <LLVMCopyStringRepOfTargetData+0x78>  // b.any
 1d8:	ldrb	w8, [x19]
 1dc:	strb	w8, [x0]
 1e0:	b	1f0 <LLVMCopyStringRepOfTargetData+0x84>
 1e4:	mov	x1, x19
 1e8:	mov	x2, x20
 1ec:	bl	0 <memcpy>
 1f0:	ldr	x8, [x29, #24]
 1f4:	ldr	x9, [sp]
 1f8:	str	x8, [sp, #8]
 1fc:	strb	wzr, [x9, x8]
 200:	ldr	x0, [sp]
 204:	bl	0 <strdup>
 208:	ldr	x8, [sp]
 20c:	mov	x19, x0
 210:	cmp	x8, x21
 214:	b.eq	220 <LLVMCopyStringRepOfTargetData+0xb4>  // b.none
 218:	mov	x0, x8
 21c:	bl	0 <_ZdlPv>
 220:	mov	x0, x19
 224:	ldp	x20, x19, [sp, #64]
 228:	ldr	x21, [sp, #48]
 22c:	ldp	x29, x30, [sp, #32]
 230:	add	sp, sp, #0x50
 234:	ret
 238:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 23c:	add	x0, x0, #0x0
 240:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000244 <LLVMByteOrder>:
 244:	ldrb	w8, [x0]
 248:	eor	w0, w8, #0x1
 24c:	ret

0000000000000250 <LLVMPointerSize>:
 250:	mov	w1, wzr
 254:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

0000000000000258 <LLVMPointerSizeForAS>:
 258:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

000000000000025c <LLVMIntPtrType>:
 25c:	stp	x29, x30, [sp, #-32]!
 260:	str	x19, [sp, #16]
 264:	mov	x29, sp
 268:	mov	x19, x0
 26c:	bl	0 <LLVMGetGlobalContext>
 270:	mov	x1, x0
 274:	mov	x0, x19
 278:	ldr	x19, [sp, #16]
 27c:	mov	w2, wzr
 280:	ldp	x29, x30, [sp], #32
 284:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

0000000000000288 <LLVMIntPtrTypeForAS>:
 288:	stp	x29, x30, [sp, #-32]!
 28c:	stp	x20, x19, [sp, #16]
 290:	mov	x29, sp
 294:	mov	w19, w1
 298:	mov	x20, x0
 29c:	bl	0 <LLVMGetGlobalContext>
 2a0:	mov	x1, x0
 2a4:	mov	x0, x20
 2a8:	mov	w2, w19
 2ac:	ldp	x20, x19, [sp, #16]
 2b0:	ldp	x29, x30, [sp], #32
 2b4:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002b8 <LLVMIntPtrTypeInContext>:
 2b8:	mov	x8, x0
 2bc:	mov	x0, x1
 2c0:	mov	x1, x8
 2c4:	mov	w2, wzr
 2c8:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002cc <LLVMIntPtrTypeForASInContext>:
 2cc:	mov	x8, x0
 2d0:	mov	x0, x1
 2d4:	mov	x1, x8
 2d8:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002dc <LLVMSizeOfTypeInBits>:
 2dc:	stp	x29, x30, [sp, #-16]!
 2e0:	mov	x29, sp
 2e4:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2e8:	tst	w1, #0xff
 2ec:	b.ne	2f8 <LLVMSizeOfTypeInBits+0x1c>  // b.any
 2f0:	ldp	x29, x30, [sp], #16
 2f4:	ret
 2f8:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2fc:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 300:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 304:	add	x0, x0, #0x0
 308:	add	x1, x1, #0x0
 30c:	add	x3, x3, #0x0
 310:	mov	w2, #0x7d                  	// #125
 314:	bl	0 <__assert_fail>

0000000000000318 <LLVMStoreSizeOfType>:
 318:	stp	x29, x30, [sp, #-16]!
 31c:	mov	x29, sp
 320:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 324:	tst	w1, #0xff
 328:	b.ne	33c <LLVMStoreSizeOfType+0x24>  // b.any
 32c:	add	x8, x0, #0x7
 330:	lsr	x0, x8, #3
 334:	ldp	x29, x30, [sp], #16
 338:	ret
 33c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 340:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 344:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 348:	add	x0, x0, #0x0
 34c:	add	x1, x1, #0x0
 350:	add	x3, x3, #0x0
 354:	mov	w2, #0x7d                  	// #125
 358:	bl	0 <__assert_fail>

000000000000035c <LLVMABISizeOfType>:
 35c:	stp	x29, x30, [sp, #-48]!
 360:	stp	x22, x21, [sp, #16]
 364:	stp	x20, x19, [sp, #32]
 368:	mov	x29, sp
 36c:	mov	x21, x1
 370:	mov	x22, x0
 374:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 378:	mov	x19, x0
 37c:	mov	x20, x1
 380:	mov	x0, x22
 384:	mov	x1, x21
 388:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 38c:	cbz	w0, 3c0 <LLVMABISizeOfType+0x64>
 390:	and	w8, w20, #0xff
 394:	cbnz	w8, 3e0 <LLVMABISizeOfType+0x84>
 398:	mov	w8, w0
 39c:	add	x9, x19, #0x7
 3a0:	add	x9, x8, x9, lsr #3
 3a4:	ldp	x20, x19, [sp, #32]
 3a8:	ldp	x22, x21, [sp, #16]
 3ac:	sub	x9, x9, #0x1
 3b0:	udiv	x9, x9, x8
 3b4:	mul	x0, x9, x8
 3b8:	ldp	x29, x30, [sp], #48
 3bc:	ret
 3c0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3c4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3c8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0xc7                  	// #199
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3e4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3e8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x7d                  	// #125
 3fc:	bl	0 <__assert_fail>

0000000000000400 <LLVMABIAlignmentOfType>:
 400:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>

0000000000000404 <LLVMCallFrameAlignmentOfType>:
 404:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>

0000000000000408 <LLVMPreferredAlignmentOfType>:
 408:	b	0 <_ZNK4llvm10DataLayout20getPrefTypeAlignmentEPNS_4TypeE>

000000000000040c <LLVMPreferredAlignmentOfGlobal>:
 40c:	stp	x29, x30, [sp, #-16]!
 410:	mov	x29, sp
 414:	cbz	x1, 42c <LLVMPreferredAlignmentOfGlobal+0x20>
 418:	ldrb	w8, [x1, #16]
 41c:	cmp	w8, #0x3
 420:	b.ne	44c <LLVMPreferredAlignmentOfGlobal+0x40>  // b.any
 424:	ldp	x29, x30, [sp], #16
 428:	b	0 <_ZNK4llvm10DataLayout21getPreferredAlignmentEPKNS_14GlobalVariableE>
 42c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 430:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 434:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 438:	add	x0, x0, #0x0
 43c:	add	x1, x1, #0x0
 440:	add	x3, x3, #0x0
 444:	mov	w2, #0x69                  	// #105
 448:	bl	0 <__assert_fail>
 44c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 450:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 454:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 458:	add	x0, x0, #0x0
 45c:	add	x1, x1, #0x0
 460:	add	x3, x3, #0x0
 464:	mov	w2, #0x108                 	// #264
 468:	bl	0 <__assert_fail>

000000000000046c <LLVMElementAtOffset>:
 46c:	stp	x29, x30, [sp, #-32]!
 470:	str	x19, [sp, #16]
 474:	mov	x29, sp
 478:	cbz	x1, 4a0 <LLVMElementAtOffset+0x34>
 47c:	ldrb	w8, [x1, #8]
 480:	cmp	w8, #0xd
 484:	b.ne	4c0 <LLVMElementAtOffset+0x54>  // b.any
 488:	mov	x19, x2
 48c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 490:	mov	x1, x19
 494:	ldr	x19, [sp, #16]
 498:	ldp	x29, x30, [sp], #32
 49c:	b	0 <_ZNK4llvm12StructLayout26getElementContainingOffsetEm>
 4a0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4a4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4a8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4ac:	add	x0, x0, #0x0
 4b0:	add	x1, x1, #0x0
 4b4:	add	x3, x3, #0x0
 4b8:	mov	w2, #0x69                  	// #105
 4bc:	bl	0 <__assert_fail>
 4c0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4c4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4c8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x1, x1, #0x0
 4d4:	add	x3, x3, #0x0
 4d8:	mov	w2, #0x108                 	// #264
 4dc:	bl	0 <__assert_fail>

00000000000004e0 <LLVMOffsetOfElement>:
 4e0:	stp	x29, x30, [sp, #-32]!
 4e4:	str	x19, [sp, #16]
 4e8:	mov	x29, sp
 4ec:	cbz	x1, 528 <LLVMOffsetOfElement+0x48>
 4f0:	ldrb	w8, [x1, #8]
 4f4:	cmp	w8, #0xd
 4f8:	b.ne	548 <LLVMOffsetOfElement+0x68>  // b.any
 4fc:	mov	w19, w2
 500:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 504:	ldr	w8, [x0, #12]
 508:	and	w8, w8, #0x7fffffff
 50c:	cmp	w8, w19
 510:	b.ls	568 <LLVMOffsetOfElement+0x88>  // b.plast
 514:	add	x8, x0, w19, uxtw #3
 518:	ldr	x0, [x8, #16]
 51c:	ldr	x19, [sp, #16]
 520:	ldp	x29, x30, [sp], #32
 524:	ret
 528:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 52c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 530:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 534:	add	x0, x0, #0x0
 538:	add	x1, x1, #0x0
 53c:	add	x3, x3, #0x0
 540:	mov	w2, #0x69                  	// #105
 544:	bl	0 <__assert_fail>
 548:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 54c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 550:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 554:	add	x0, x0, #0x0
 558:	add	x1, x1, #0x0
 55c:	add	x3, x3, #0x0
 560:	mov	w2, #0x108                 	// #264
 564:	bl	0 <__assert_fail>
 568:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 56c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 570:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 574:	add	x0, x0, #0x0
 578:	add	x1, x1, #0x0
 57c:	add	x3, x3, #0x0
 580:	mov	w2, #0x260                 	// #608
 584:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x1, #8]
  18:	and	w9, w8, #0xff
  1c:	cmp	w9, #0x10
  20:	b.hi	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.pmore
  24:	mov	w10, #0x1                   	// #1
  28:	lsl	w9, w10, w9
  2c:	mov	w10, #0x8a7e                	// #35454
  30:	mov	x20, x1
  34:	mov	x19, x0
  38:	tst	w9, w10
  3c:	b.eq	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>  // b.none
  40:	and	w9, w8, #0xff
  44:	sub	w9, w9, #0x1
  48:	cmp	w9, #0xf
  4c:	b.hi	b0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xb0>  // b.pmore
  50:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  54:	add	x10, x10, #0x0
  58:	adr	x11, 70 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x70>
  5c:	ldrb	w12, [x10, x9]
  60:	add	x11, x11, x12, lsl #2
  64:	mov	x1, xzr
  68:	mov	w0, #0x10                  	// #16
  6c:	br	x11
  70:	mov	x1, xzr
  74:	mov	w0, #0x40                  	// #64
  78:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  7c:	mov	w8, #0x6000                	// #24576
  80:	movk	w8, #0x1, lsl #16
  84:	tst	w9, w8
  88:	b.eq	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.none
  8c:	mov	x0, x20
  90:	mov	x1, xzr
  94:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  98:	tbz	w0, #0, 1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>
  9c:	ldr	w8, [x20, #8]
  a0:	and	w9, w8, #0xff
  a4:	sub	w9, w9, #0x1
  a8:	cmp	w9, #0xf
  ac:	b.ls	50 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x50>  // b.plast
  b0:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b4:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	mov	w2, #0x298                 	// #664
  c4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  c8:	mov	x1, xzr
  cc:	mov	w0, #0x80                  	// #128
  d0:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  d4:	and	w9, w8, #0xff
  d8:	cmp	w9, #0xf
  dc:	b.ne	1fc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1fc>  // b.any
  e0:	lsr	w1, w8, #8
  e4:	mov	x0, x19
  e8:	b	144 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x144>
  ec:	ldr	x21, [x20, #32]
  f0:	lsr	x8, x21, #32
  f4:	cbnz	x8, 21c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x21c>
  f8:	ldr	x1, [x20, #24]
  fc:	ldrb	w22, [x20, #40]
 100:	mov	x0, x19
 104:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 108:	tst	w1, #0xff
 10c:	b.ne	23c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x23c>  // b.any
 110:	and	x8, x21, #0x100000000
 114:	orr	x8, x8, x22, lsl #32
 118:	mul	x0, x0, x21
 11c:	lsr	x1, x8, #32
 120:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 124:	mov	x0, x19
 128:	mov	x1, x20
 12c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 130:	ldr	x8, [x0]
 134:	mov	x1, xzr
 138:	b	1c4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c4>
 13c:	mov	x0, x19
 140:	mov	w1, wzr
 144:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 148:	mov	x1, xzr
 14c:	lsl	w0, w0, #3
 150:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 154:	mov	x1, xzr
 158:	mov	w0, #0x20                  	// #32
 15c:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 160:	mov	x1, xzr
 164:	mov	w0, #0x50                  	// #80
 168:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 16c:	mov	x1, xzr
 170:	lsr	w0, w8, #8
 174:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 178:	ldp	x22, x23, [x20, #24]
 17c:	mov	x0, x19
 180:	mov	x1, x22
 184:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 188:	mov	x20, x0
 18c:	mov	x21, x1
 190:	mov	x0, x19
 194:	mov	x1, x22
 198:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 19c:	cbz	w0, 25c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x25c>
 1a0:	mov	w8, w0
 1a4:	add	x9, x20, #0x7
 1a8:	add	x9, x8, x9, lsr #3
 1ac:	sub	x9, x9, #0x1
 1b0:	udiv	x9, x9, x8
 1b4:	tst	w21, #0xff
 1b8:	mul	x8, x9, x8
 1bc:	cset	w1, ne  // ne = any
 1c0:	mul	x8, x23, x8
 1c4:	lsl	x0, x8, #3
 1c8:	ldp	x20, x19, [sp, #48]
 1cc:	ldp	x22, x21, [sp, #32]
 1d0:	ldr	x23, [sp, #16]
 1d4:	ldp	x29, x30, [sp], #64
 1d8:	ret
 1dc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e8:	add	x0, x0, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x3, x3, #0x0
 1f4:	mov	w2, #0x271                 	// #625
 1f8:	bl	0 <__assert_fail>
 1fc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 200:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 204:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 208:	add	x0, x0, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x108                 	// #264
 218:	bl	0 <__assert_fail>
 21c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 220:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 224:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 228:	add	x0, x0, #0x0
 22c:	add	x1, x1, #0x0
 230:	add	x3, x3, #0x0
 234:	mov	w2, #0x220                 	// #544
 238:	bl	0 <__assert_fail>
 23c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 240:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 244:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 248:	add	x0, x0, #0x0
 24c:	add	x1, x1, #0x0
 250:	add	x3, x3, #0x0
 254:	mov	w2, #0x7d                  	// #125
 258:	bl	0 <__assert_fail>
 25c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 260:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 264:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 268:	add	x0, x0, #0x0
 26c:	add	x1, x1, #0x0
 270:	add	x3, x3, #0x0
 274:	mov	w2, #0xc7                  	// #199
 278:	bl	0 <__assert_fail>

TargetIntrinsicInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm19TargetIntrinsicInfoC2Ev>:
   0:	adrp	x8, 0 <_ZN4llvm19TargetIntrinsicInfoC2Ev>
   4:	ldr	x8, [x8]
   8:	add	x8, x8, #0x10
   c:	str	x8, [x0]
  10:	ret

0000000000000014 <_ZN4llvm19TargetIntrinsicInfoD1Ev>:
  14:	ret

0000000000000018 <_ZN4llvm19TargetIntrinsicInfoD0Ev>:
  18:	brk	#0x1

000000000000001c <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	str	x19, [sp, #16]
  24:	mov	x29, sp
  28:	mov	x19, x0
  2c:	mov	x0, x1
  30:	bl	0 <_ZNK4llvm5Value12getValueNameEv>
  34:	cbz	x0, 58 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE+0x3c>
  38:	mov	x1, x0
  3c:	ldr	w2, [x1], #16
  40:	ldr	x8, [x19]
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldr	x3, [x8, #24]
  50:	ldp	x29, x30, [sp], #32
  54:	br	x3
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

TargetLoweringObjectFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x21, [x0, #808]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	add	x24, x0, #0x334
  24:	str	x1, [x0, #800]
  28:	cbz	x21, 3c <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x3c>
  2c:	ldr	x0, [x21, #8]
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x21
  38:	bl	0 <_ZdlPv>
  3c:	mov	w0, #0x20                  	// #32
  40:	bl	0 <_Znwm>
  44:	movi	v0.2d, #0x0
  48:	stp	q0, q0, [x0]
  4c:	str	x0, [x20, #808]
  50:	mov	x0, x19
  54:	add	x21, x20, #0x8
  58:	add	x22, x19, #0x1c0
  5c:	bl	0 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
  60:	ldr	x20, [x20, #800]
  64:	mov	w23, w0
  68:	mov	x0, x19
  6c:	bl	0 <_ZNK4llvm13TargetMachine12getCodeModelEv>
  70:	cmp	w0, #0x4
  74:	cset	w4, eq  // eq = none
  78:	and	w2, w23, #0x1
  7c:	mov	x0, x21
  80:	mov	x1, x22
  84:	mov	x3, x20
  88:	bl	0 <_ZN4llvm16MCObjectFileInfo20InitMCObjectFileInfoERKNS_6TripleEbRNS_9MCContextEb>
  8c:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
  90:	ldr	d0, [x8]
  94:	str	xzr, [x24]
  98:	str	d0, [x24, #8]
  9c:	ldp	x20, x19, [sp, #48]
  a0:	ldp	x22, x21, [sp, #32]
  a4:	ldp	x24, x23, [sp, #16]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret

00000000000000b0 <_ZN4llvm24TargetLoweringObjectFileD1Ev>:
  b0:	stp	x29, x30, [sp, #-32]!
  b4:	stp	x20, x19, [sp, #16]
  b8:	mov	x29, sp
  bc:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
  c0:	ldr	x20, [x0, #808]
  c4:	ldr	x8, [x8]
  c8:	mov	x19, x0
  cc:	add	x8, x8, #0x10
  d0:	str	x8, [x0]
  d4:	cbz	x20, e8 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x38>
  d8:	ldr	x0, [x20, #8]
  dc:	bl	0 <_ZdlPv>
  e0:	mov	x0, x20
  e4:	bl	0 <_ZdlPv>
  e8:	ldr	x0, [x19, #728]
  ec:	add	x8, x19, #0x2e8
  f0:	add	x19, x19, #0x8
  f4:	cmp	x0, x8
  f8:	b.eq	100 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x50>  // b.none
  fc:	bl	0 <_ZdlPv>
 100:	ldr	x0, [x19, #456]
 104:	bl	0 <_ZdlPv>
 108:	ldr	x8, [x19, #448]
 10c:	add	x8, x8, #0x1
 110:	str	x8, [x19, #448]
 114:	ldp	x20, x19, [sp, #16]
 118:	ldp	x29, x30, [sp], #32
 11c:	ret

0000000000000120 <_ZN4llvm24TargetLoweringObjectFileD0Ev>:
 120:	brk	#0x1

0000000000000124 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE>:
 124:	sub	sp, sp, #0xc0
 128:	stp	x29, x30, [sp, #112]
 12c:	stp	x26, x25, [sp, #128]
 130:	stp	x24, x23, [sp, #144]
 134:	stp	x22, x21, [sp, #160]
 138:	stp	x20, x19, [sp, #176]
 13c:	add	x29, sp, #0x70
 140:	cbz	x3, 328 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x204>
 144:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 148:	ldr	d0, [x8]
 14c:	add	x8, sp, #0x20
 150:	add	x22, x8, #0x10
 154:	str	x22, [sp, #32]
 158:	str	d0, [sp, #40]
 15c:	mov	x19, x0
 160:	ldr	x0, [x1, #40]
 164:	mov	x23, x4
 168:	mov	x20, x3
 16c:	mov	x21, x2
 170:	mov	x24, x1
 174:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 178:	ldr	w8, [x0, #24]
 17c:	cmp	w8, #0x5
 180:	b.hi	348 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x224>  // b.pmore
 184:	adrp	x9, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 188:	add	x9, x9, #0x0
 18c:	adr	x10, 1a8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x84>
 190:	ldrb	w11, [x9, x8]
 194:	add	x10, x10, x11, lsl #2
 198:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 19c:	mov	x25, xzr
 1a0:	add	x26, x26, #0x0
 1a4:	br	x10
 1a8:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 1ac:	add	x26, x26, #0x0
 1b0:	mov	w25, #0x2                   	// #2
 1b4:	ldp	w8, w9, [sp, #40]
 1b8:	sub	x9, x9, x8
 1bc:	cmp	x25, x9
 1c0:	b.hi	1e4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xc0>  // b.pmore
 1c4:	b	1f8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xd4>
 1c8:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 1cc:	add	x26, x26, #0x0
 1d0:	mov	w25, #0x1                   	// #1
 1d4:	ldp	w8, w9, [sp, #40]
 1d8:	sub	x9, x9, x8
 1dc:	cmp	x25, x9
 1e0:	b.ls	1f8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xd4>  // b.plast
 1e4:	add	x2, x25, x8
 1e8:	add	x0, sp, #0x20
 1ec:	mov	w3, #0x1                   	// #1
 1f0:	mov	x1, x22
 1f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1f8:	cbz	x25, 214 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xf0>
 1fc:	ldr	x8, [sp, #32]
 200:	ldr	w9, [sp, #40]
 204:	mov	x1, x26
 208:	mov	x2, x25
 20c:	add	x0, x8, x9
 210:	bl	0 <memcpy>
 214:	ldp	w8, w9, [sp, #40]
 218:	add	x8, x25, x8
 21c:	cmp	x8, x9
 220:	b.hi	308 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1e4>  // b.pmore
 224:	str	w8, [sp, #40]
 228:	ldr	x3, [x19, #808]
 22c:	add	x1, sp, #0x20
 230:	mov	x0, x23
 234:	mov	x2, x24
 238:	mov	w4, wzr
 23c:	bl	0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 240:	ldp	w8, w9, [sp, #40]
 244:	sub	x9, x9, x8
 248:	cmp	x20, x9
 24c:	b.ls	268 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x144>  // b.plast
 250:	add	x2, x20, x8
 254:	add	x0, sp, #0x20
 258:	mov	w3, #0x1                   	// #1
 25c:	mov	x1, x22
 260:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 264:	ldr	w8, [sp, #40]
 268:	ldr	x9, [sp, #32]
 26c:	mov	x1, x21
 270:	mov	x2, x20
 274:	add	x0, x9, x8
 278:	bl	0 <memcpy>
 27c:	ldp	w8, w9, [sp, #40]
 280:	add	x8, x20, x8
 284:	cmp	x8, x9
 288:	b.hi	308 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1e4>  // b.pmore
 28c:	str	w8, [sp, #40]
 290:	ldr	x0, [x19, #800]
 294:	mov	w8, #0x106                 	// #262
 298:	add	x19, sp, #0x20
 29c:	add	x1, sp, #0x8
 2a0:	strh	w8, [sp, #24]
 2a4:	stp	x19, xzr, [sp, #8]
 2a8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 2ac:	ldr	x8, [sp, #32]
 2b0:	add	x9, x19, #0x10
 2b4:	mov	x19, x0
 2b8:	cmp	x8, x9
 2bc:	b.eq	2c8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1a4>  // b.none
 2c0:	mov	x0, x8
 2c4:	bl	0 <free>
 2c8:	mov	x0, x19
 2cc:	ldp	x20, x19, [sp, #176]
 2d0:	ldp	x22, x21, [sp, #160]
 2d4:	ldp	x24, x23, [sp, #144]
 2d8:	ldp	x26, x25, [sp, #128]
 2dc:	ldp	x29, x30, [sp, #112]
 2e0:	add	sp, sp, #0xc0
 2e4:	ret
 2e8:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 2ec:	add	x26, x26, #0x0
 2f0:	mov	w25, #0x1                   	// #1
 2f4:	ldp	w8, w9, [sp, #40]
 2f8:	sub	x9, x9, x8
 2fc:	cmp	x25, x9
 300:	b.hi	1e4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xc0>  // b.pmore
 304:	b	1f8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xd4>
 308:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 30c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 310:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 314:	add	x0, x0, #0x0
 318:	add	x1, x1, #0x0
 31c:	add	x3, x3, #0x0
 320:	mov	w2, #0x43                  	// #67
 324:	bl	0 <__assert_fail>
 328:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 32c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 330:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 334:	add	x0, x0, #0x0
 338:	add	x1, x1, #0x0
 33c:	add	x3, x3, #0x0
 340:	mov	w2, #0x76                  	// #118
 344:	bl	0 <__assert_fail>
 348:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 34c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 350:	add	x0, x0, #0x0
 354:	add	x1, x1, #0x0
 358:	mov	w2, #0x14d                 	// #333
 35c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000360 <_ZNK4llvm24TargetLoweringObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueERKNS_13TargetMachineEPNS_17MachineModuleInfoE>:
 360:	mov	x0, x2
 364:	b	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>

0000000000000368 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>:
 368:	ret

000000000000036c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE>:
 36c:	stp	x29, x30, [sp, #-64]!
 370:	str	x23, [sp, #16]
 374:	stp	x22, x21, [sp, #32]
 378:	stp	x20, x19, [sp, #48]
 37c:	mov	x29, sp
 380:	mov	x21, x1
 384:	mov	x19, x0
 388:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 38c:	tbnz	w0, #0, 64c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2e0>
 390:	ldr	w9, [x19, #32]
 394:	and	w8, w9, #0xf
 398:	cmp	w8, #0x1
 39c:	b.eq	64c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2e0>  // b.none
 3a0:	ldrb	w10, [x19, #16]
 3a4:	cbz	w10, 3f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x84>
 3a8:	cmp	w10, #0x3
 3ac:	b.ne	66c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x300>  // b.any
 3b0:	tst	w9, #0x1c00
 3b4:	b.eq	400 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x94>  // b.none
 3b8:	mov	x0, x19
 3bc:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 3c0:	tbnz	w0, #0, 68c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>
 3c4:	ldur	x0, [x19, #-24]
 3c8:	bl	b10 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 3cc:	tbz	w0, #0, 3f8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3d0:	ldrb	w8, [x19, #80]
 3d4:	tbnz	w8, #0, 3f8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3d8:	ldrb	w8, [x19, #34]
 3dc:	tbnz	w8, #6, 3f8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3e0:	ldrb	w8, [x21, #776]
 3e4:	tbnz	w8, #7, 3f8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3e8:	mov	w0, #0xb                   	// #11
 3ec:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 3f0:	mov	w0, #0x1                   	// #1
 3f4:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 3f8:	mov	w0, #0xc                   	// #12
 3fc:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 400:	cmp	w8, #0xa
 404:	b.ne	410 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xa4>  // b.any
 408:	mov	w0, #0x10                  	// #16
 40c:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 410:	mov	x0, x19
 414:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 418:	tbnz	w0, #0, 68c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>
 41c:	ldur	x0, [x19, #-24]
 420:	bl	b10 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 424:	ldrb	w8, [x19, #80]
 428:	tbz	w0, #0, 458 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xec>
 42c:	tbnz	w8, #0, 464 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf8>
 430:	ldr	w8, [x19, #32]
 434:	tbnz	w8, #22, 45c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf0>
 438:	ldrb	w9, [x21, #776]
 43c:	tbnz	w9, #7, 45c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf0>
 440:	and	w8, w8, #0xf
 444:	sub	w9, w8, #0x7
 448:	cmp	w9, #0x2
 44c:	b.cs	534 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1c8>  // b.hs, b.nlast
 450:	mov	w0, #0xe                   	// #14
 454:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 458:	tbnz	w8, #0, 464 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf8>
 45c:	mov	w0, #0x11                  	// #17
 460:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 464:	mov	x0, x19
 468:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 46c:	tbnz	w0, #0, 68c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>
 470:	ldur	x20, [x19, #-24]
 474:	mov	x0, x20
 478:	bl	0 <_ZNK4llvm8Constant15needsRelocationEv>
 47c:	tbz	w0, #0, 4a0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x134>
 480:	mov	x0, x21
 484:	bl	0 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 488:	cmp	w0, #0x6
 48c:	b.cs	52c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1c0>  // b.hs, b.nlast
 490:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 494:	add	x8, x8, #0x0
 498:	ldr	x0, [x8, w0, sxtw #3]
 49c:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 4a0:	ldr	w8, [x19, #32]
 4a4:	and	w8, w8, #0xc0
 4a8:	cmp	w8, #0x80
 4ac:	b.ne	5d8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x26c>  // b.any
 4b0:	ldr	x8, [x20]
 4b4:	cbz	x8, 6ac <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x340>
 4b8:	ldrb	w9, [x8, #8]
 4bc:	cmp	w9, #0xe
 4c0:	b.ne	568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 4c4:	ldr	x23, [x8, #24]
 4c8:	cbz	x23, 70c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3a0>
 4cc:	ldr	w9, [x23, #8]
 4d0:	and	w10, w9, #0xff
 4d4:	cmp	w10, #0xb
 4d8:	b.ne	568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 4dc:	lsr	w9, w9, #8
 4e0:	cmp	w9, #0x20
 4e4:	b.hi	568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.pmore
 4e8:	mov	w10, #0x1                   	// #1
 4ec:	lsl	x9, x10, x9
 4f0:	mov	x10, #0x100                 	// #256
 4f4:	movk	x10, #0x1, lsl #16
 4f8:	movk	x10, #0x1, lsl #32
 4fc:	tst	x9, x10
 500:	b.eq	568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.none
 504:	ldrb	w9, [x20, #16]
 508:	sub	w10, w9, #0xb
 50c:	cmp	w10, #0x1
 510:	b.ls	548 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1dc>  // b.plast
 514:	cmp	w9, #0xa
 518:	b.ne	568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 51c:	ldr	x8, [x8, #32]
 520:	cmp	x8, #0x1
 524:	b.ne	568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 528:	b	614 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2a8>
 52c:	mov	w0, #0x12                  	// #18
 530:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 534:	cmp	w8, #0x0
 538:	mov	w8, #0xd                   	// #13
 53c:	mov	w9, #0xf                   	// #15
 540:	csel	x0, x9, x8, eq  // eq = none
 544:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 548:	mov	x0, x20
 54c:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
 550:	cbz	w0, 72c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3c0>
 554:	sub	w21, w0, #0x1
 558:	mov	x0, x20
 55c:	mov	w1, w21
 560:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 564:	cbz	x0, 5f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x284>
 568:	ldr	x0, [x19, #40]
 56c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 570:	ldr	x21, [x20]
 574:	mov	x22, x0
 578:	mov	x1, x21
 57c:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 580:	mov	x19, x0
 584:	mov	x20, x1
 588:	mov	x0, x22
 58c:	mov	x1, x21
 590:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 594:	cbz	w0, 6cc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x360>
 598:	and	w8, w20, #0xff
 59c:	cbnz	w8, 6ec <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x380>
 5a0:	mov	w8, w0
 5a4:	add	x9, x19, #0x7
 5a8:	add	x9, x8, x9, lsr #3
 5ac:	sub	x9, x9, #0x1
 5b0:	udiv	x9, x9, x8
 5b4:	orr	x10, xzr, #0xfffffffffffffffc
 5b8:	madd	x8, x9, x8, x10
 5bc:	ror	x8, x8, #2
 5c0:	cmp	x8, #0x8
 5c4:	b.cs	5d8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x26c>  // b.hs, b.nlast
 5c8:	adrp	x9, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 5cc:	add	x9, x9, #0x0
 5d0:	ldr	x0, [x9, x8, lsl #3]
 5d4:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 5d8:	mov	w0, #0x3                   	// #3
 5dc:	ldp	x20, x19, [sp, #48]
 5e0:	ldp	x22, x21, [sp, #32]
 5e4:	ldr	x23, [sp, #16]
 5e8:	ldp	x29, x30, [sp], #64
 5ec:	ret
 5f0:	cbz	w21, 614 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2a8>
 5f4:	mov	w22, wzr
 5f8:	mov	x0, x20
 5fc:	mov	w1, w22
 600:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 604:	cbz	x0, 568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>
 608:	add	w22, w22, #0x1
 60c:	cmp	w21, w22
 610:	b.ne	5f8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x28c>  // b.any
 614:	ldr	w8, [x23, #8]
 618:	lsr	w8, w8, #8
 61c:	cmp	w8, #0x8
 620:	b.eq	644 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2d8>  // b.none
 624:	cmp	w8, #0x10
 628:	b.eq	63c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2d0>  // b.none
 62c:	cmp	w8, #0x20
 630:	b.ne	74c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3e0>  // b.any
 634:	mov	w0, #0x6                   	// #6
 638:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 63c:	mov	w0, #0x5                   	// #5
 640:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 644:	mov	w0, #0x4                   	// #4
 648:	b	5dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 64c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 650:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 654:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 658:	add	x0, x0, #0x0
 65c:	add	x1, x1, #0x0
 660:	add	x3, x3, #0x0
 664:	mov	w2, #0x92                  	// #146
 668:	bl	0 <__assert_fail>
 66c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 670:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 674:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 678:	add	x0, x0, #0x0
 67c:	add	x1, x1, #0x0
 680:	add	x3, x3, #0x0
 684:	mov	w2, #0x108                 	// #264
 688:	bl	0 <__assert_fail>
 68c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 690:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 694:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 698:	add	x0, x0, #0x0
 69c:	add	x1, x1, #0x0
 6a0:	add	x3, x3, #0x0
 6a4:	mov	w2, #0x89                  	// #137
 6a8:	bl	0 <__assert_fail>
 6ac:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6b0:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6b4:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6b8:	add	x0, x0, #0x0
 6bc:	add	x1, x1, #0x0
 6c0:	add	x3, x3, #0x0
 6c4:	mov	w2, #0x69                  	// #105
 6c8:	bl	0 <__assert_fail>
 6cc:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6d0:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6d4:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6d8:	add	x0, x0, #0x0
 6dc:	add	x1, x1, #0x0
 6e0:	add	x3, x3, #0x0
 6e4:	mov	w2, #0xc7                  	// #199
 6e8:	bl	0 <__assert_fail>
 6ec:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6f0:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6f4:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6f8:	add	x0, x0, #0x0
 6fc:	add	x1, x1, #0x0
 700:	add	x3, x3, #0x0
 704:	mov	w2, #0x7d                  	// #125
 708:	bl	0 <__assert_fail>
 70c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 710:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 714:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 718:	add	x0, x0, #0x0
 71c:	add	x1, x1, #0x0
 720:	add	x3, x3, #0x0
 724:	mov	w2, #0x69                  	// #105
 728:	bl	0 <__assert_fail>
 72c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 730:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 734:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 738:	add	x0, x0, #0x0
 73c:	add	x1, x1, #0x0
 740:	add	x3, x3, #0x0
 744:	mov	w2, #0x61                  	// #97
 748:	bl	0 <__assert_fail>
 74c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 750:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 754:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 758:	add	x0, x0, #0x0
 75c:	add	x1, x1, #0x0
 760:	add	x3, x3, #0x0
 764:	mov	w2, #0xcb                  	// #203
 768:	bl	0 <__assert_fail>

000000000000076c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE>:
 76c:	stp	x29, x30, [sp, #-64]!
 770:	str	x23, [sp, #16]
 774:	stp	x22, x21, [sp, #32]
 778:	stp	x20, x19, [sp, #48]
 77c:	mov	x29, sp
 780:	ldrb	w8, [x1, #34]
 784:	mov	x19, x3
 788:	mov	x22, x2
 78c:	mov	x20, x1
 790:	mov	x21, x0
 794:	tbnz	w8, #6, 86c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x100>
 798:	ldrb	w8, [x20, #16]
 79c:	cmp	w8, #0x3
 7a0:	b.ne	844 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xd8>  // b.any
 7a4:	ldr	x8, [x20, #72]
 7a8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 7ac:	add	x1, x1, #0x0
 7b0:	add	x0, x29, #0x18
 7b4:	mov	w2, #0xb                   	// #11
 7b8:	str	x8, [x29, #24]
 7bc:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 7c0:	sub	w8, w22, #0xd
 7c4:	and	w8, w8, #0xff
 7c8:	cmp	w8, #0x2
 7cc:	b.hi	7d4 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x68>  // b.pmore
 7d0:	tbnz	w0, #0, 860 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 7d4:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 7d8:	add	x1, x1, #0x0
 7dc:	add	x0, x29, #0x18
 7e0:	mov	w2, #0xc                   	// #12
 7e4:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 7e8:	and	w23, w22, #0xff
 7ec:	cmp	w23, #0x11
 7f0:	b.ne	7f8 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x8c>  // b.any
 7f4:	tbnz	w0, #0, 860 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 7f8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 7fc:	add	x1, x1, #0x0
 800:	add	x0, x29, #0x18
 804:	mov	w2, #0xd                   	// #13
 808:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 80c:	cmp	w23, #0x12
 810:	b.ne	818 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xac>  // b.any
 814:	tbnz	w0, #0, 860 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 818:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 81c:	add	x1, x1, #0x0
 820:	add	x0, x29, #0x18
 824:	mov	w2, #0xe                   	// #14
 828:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 82c:	sub	w8, w22, #0x3
 830:	and	w8, w8, #0xff
 834:	cmp	w8, #0x7
 838:	b.hi	840 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xd4>  // b.pmore
 83c:	tbnz	w0, #0, 860 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 840:	ldrb	w8, [x20, #16]
 844:	cbnz	w8, 898 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x12c>
 848:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 84c:	add	x0, x20, #0x70
 850:	add	x1, x1, #0x0
 854:	mov	w2, #0x15                  	// #21
 858:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 85c:	tbz	w0, #0, 898 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x12c>
 860:	ldr	x8, [x21]
 864:	ldr	x8, [x8, #80]
 868:	b	8a0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>
 86c:	ldr	x8, [x21]
 870:	and	x2, x22, #0xffffffff
 874:	mov	x0, x21
 878:	mov	x1, x20
 87c:	ldr	x4, [x8, #80]
 880:	mov	x3, x19
 884:	ldp	x20, x19, [sp, #48]
 888:	ldp	x22, x21, [sp, #32]
 88c:	ldr	x23, [sp, #16]
 890:	ldp	x29, x30, [sp], #64
 894:	br	x4
 898:	ldr	x8, [x21]
 89c:	ldr	x8, [x8, #168]
 8a0:	and	x2, x22, #0xffffffff
 8a4:	mov	x0, x21
 8a8:	mov	x1, x20
 8ac:	mov	x3, x19
 8b0:	blr	x8
 8b4:	ldp	x20, x19, [sp, #48]
 8b8:	ldp	x22, x21, [sp, #32]
 8bc:	ldr	x23, [sp, #16]
 8c0:	ldp	x29, x30, [sp], #64
 8c4:	ret

00000000000008c8 <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE>:
 8c8:	stp	x29, x30, [sp, #-32]!
 8cc:	str	x19, [sp, #16]
 8d0:	mov	x29, sp
 8d4:	str	wzr, [x29, #28]
 8d8:	ldr	x8, [x1, #40]
 8dc:	mov	x19, x0
 8e0:	mov	x0, x8
 8e4:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 8e8:	ldr	x8, [x19]
 8ec:	mov	x1, x0
 8f0:	add	x4, x29, #0x1c
 8f4:	mov	w2, #0x3                   	// #3
 8f8:	ldr	x8, [x8, #48]
 8fc:	mov	x0, x19
 900:	mov	x3, xzr
 904:	blr	x8
 908:	ldr	x19, [sp, #16]
 90c:	ldp	x29, x30, [sp], #32
 910:	ret

0000000000000914 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE>:
 914:	tbz	w1, #0, 920 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0xc>
 918:	mov	w0, #0x1                   	// #1
 91c:	ret
 920:	ldr	w8, [x2, #32]
 924:	and	w8, w8, #0xf
 928:	sub	w8, w8, #0x2
 92c:	cmp	w8, #0x8
 930:	b.hi	944 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x30>  // b.pmore
 934:	mov	w9, #0x18f                 	// #399
 938:	lsr	w8, w9, w8
 93c:	and	w0, w8, #0x1
 940:	ret
 944:	mov	w0, wzr
 948:	ret

000000000000094c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj>:
 94c:	sub	w8, w2, #0x3
 950:	and	w8, w8, #0xff
 954:	cmp	w8, #0x7
 958:	mov	x8, x0
 95c:	b.hi	96c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x20>  // b.pmore
 960:	ldr	x0, [x8, #48]
 964:	cbz	x0, 96c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x20>
 968:	ret
 96c:	ldr	x0, [x8, #32]
 970:	ret

0000000000000974 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE>:
 974:	stp	x29, x30, [sp, #-48]!
 978:	stp	x22, x21, [sp, #16]
 97c:	stp	x20, x19, [sp, #32]
 980:	mov	x29, sp
 984:	mov	x19, x0
 988:	mov	x0, x3
 98c:	mov	x20, x5
 990:	mov	w21, w2
 994:	bl	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>
 998:	ldr	x2, [x19, #800]
 99c:	mov	w1, wzr
 9a0:	mov	x3, xzr
 9a4:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 9a8:	ands	w8, w21, #0x70
 9ac:	mov	x21, x0
 9b0:	b.eq	a1c <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE+0xa8>  // b.none
 9b4:	cmp	w8, #0x10
 9b8:	b.ne	a30 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE+0xbc>  // b.any
 9bc:	ldr	x0, [x19, #800]
 9c0:	mov	w1, #0x1                   	// #1
 9c4:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 9c8:	ldr	x8, [x20]
 9cc:	mov	x22, x0
 9d0:	mov	x0, x20
 9d4:	mov	x1, x22
 9d8:	ldr	x8, [x8, #176]
 9dc:	mov	x2, xzr
 9e0:	blr	x8
 9e4:	ldr	x2, [x19, #800]
 9e8:	mov	x0, x22
 9ec:	mov	w1, wzr
 9f0:	mov	x3, xzr
 9f4:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 9f8:	ldr	x3, [x19, #800]
 9fc:	mov	x1, x21
 a00:	ldp	x20, x19, [sp, #32]
 a04:	ldp	x22, x21, [sp, #16]
 a08:	mov	x2, x0
 a0c:	mov	w0, #0x11                  	// #17
 a10:	mov	x4, xzr
 a14:	ldp	x29, x30, [sp], #48
 a18:	b	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 a1c:	mov	x0, x21
 a20:	ldp	x20, x19, [sp, #32]
 a24:	ldp	x22, x21, [sp, #16]
 a28:	ldp	x29, x30, [sp], #48
 a2c:	ret
 a30:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a34:	add	x0, x0, #0x0
 a38:	mov	w1, #0x1                   	// #1
 a3c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000a40 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>:
 a40:	stp	x29, x30, [sp, #-48]!
 a44:	stp	x22, x21, [sp, #16]
 a48:	stp	x20, x19, [sp, #32]
 a4c:	mov	x29, sp
 a50:	mov	x19, x1
 a54:	ands	w8, w2, #0x70
 a58:	b.eq	acc <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x8c>  // b.none
 a5c:	cmp	w8, #0x10
 a60:	b.ne	ae0 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0xa0>  // b.any
 a64:	mov	x20, x0
 a68:	ldr	x0, [x0, #800]
 a6c:	mov	w1, #0x1                   	// #1
 a70:	mov	x21, x3
 a74:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 a78:	ldr	x8, [x21]
 a7c:	mov	x22, x0
 a80:	mov	x0, x21
 a84:	mov	x1, x22
 a88:	ldr	x8, [x8, #176]
 a8c:	mov	x2, xzr
 a90:	blr	x8
 a94:	ldr	x2, [x20, #800]
 a98:	mov	x0, x22
 a9c:	mov	w1, wzr
 aa0:	mov	x3, xzr
 aa4:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 aa8:	ldr	x3, [x20, #800]
 aac:	mov	x1, x19
 ab0:	ldp	x20, x19, [sp, #32]
 ab4:	ldp	x22, x21, [sp, #16]
 ab8:	mov	x2, x0
 abc:	mov	w0, #0x11                  	// #17
 ac0:	mov	x4, xzr
 ac4:	ldp	x29, x30, [sp], #48
 ac8:	b	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 acc:	mov	x0, x19
 ad0:	ldp	x20, x19, [sp, #32]
 ad4:	ldp	x22, x21, [sp, #16]
 ad8:	ldp	x29, x30, [sp], #48
 adc:	ret
 ae0:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 ae4:	add	x0, x0, #0x0
 ae8:	mov	w1, #0x1                   	// #1
 aec:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000af0 <_ZNK4llvm24TargetLoweringObjectFile25getDebugThreadLocalSymbolEPKNS_8MCSymbolE>:
 af0:	ldr	x2, [x0, #800]
 af4:	mov	x0, x1
 af8:	mov	w1, wzr
 afc:	mov	x3, xzr
 b00:	b	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>

0000000000000b04 <_ZNK4llvm24TargetLoweringObjectFile17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERKNS_13TargetMachineE>:
 b04:	ldr	x0, [x0, #808]
 b08:	mov	w3, wzr
 b0c:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>

0000000000000b10 <_ZL13isNullOrUndefPKN4llvm8ConstantE>:
 b10:	stp	x29, x30, [sp, #-32]!
 b14:	stp	x20, x19, [sp, #16]
 b18:	mov	x29, sp
 b1c:	mov	x19, x0
 b20:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
 b24:	tbz	w0, #0, b38 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x28>
 b28:	mov	w0, #0x1                   	// #1
 b2c:	ldp	x20, x19, [sp, #16]
 b30:	ldp	x29, x30, [sp], #32
 b34:	ret
 b38:	cbz	x19, c3c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x12c>
 b3c:	ldrb	w8, [x19, #16]
 b40:	cmp	w8, #0x9
 b44:	b.ne	b58 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x48>  // b.any
 b48:	mov	w0, #0x1                   	// #1
 b4c:	ldp	x20, x19, [sp, #16]
 b50:	ldp	x29, x30, [sp], #32
 b54:	ret
 b58:	sub	w8, w8, #0x6
 b5c:	cmp	w8, #0x2
 b60:	b.hi	bc4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xb4>  // b.pmore
 b64:	ldr	w8, [x19, #20]
 b68:	tbnz	w8, #30, bd4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xc4>
 b6c:	and	w8, w8, #0xfffffff
 b70:	mov	w9, #0x18                  	// #24
 b74:	mneg	x9, x8, x9
 b78:	add	x19, x19, x9
 b7c:	mov	w9, #0x18                  	// #24
 b80:	madd	x20, x8, x9, x19
 b84:	cmp	x20, x19
 b88:	b.eq	bec <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xdc>  // b.none
 b8c:	ldr	x0, [x19]
 b90:	cbz	x0, bfc <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xec>
 b94:	ldrb	w8, [x0, #16]
 b98:	cmp	w8, #0x11
 b9c:	b.cs	c1c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x10c>  // b.hs, b.nlast
 ba0:	bl	b10 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 ba4:	tbz	w0, #0, bc4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xb4>
 ba8:	add	x19, x19, #0x18
 bac:	cmp	x20, x19
 bb0:	b.ne	b8c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x7c>  // b.any
 bb4:	mov	w0, #0x1                   	// #1
 bb8:	ldp	x20, x19, [sp, #16]
 bbc:	ldp	x29, x30, [sp], #32
 bc0:	ret
 bc4:	mov	w0, wzr
 bc8:	ldp	x20, x19, [sp, #16]
 bcc:	ldp	x29, x30, [sp], #32
 bd0:	ret
 bd4:	ldur	x19, [x19, #-8]
 bd8:	and	x8, x8, #0xfffffff
 bdc:	mov	w9, #0x18                  	// #24
 be0:	madd	x20, x8, x9, x19
 be4:	cmp	x20, x19
 be8:	b.ne	b8c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x7c>  // b.any
 bec:	mov	w0, #0x1                   	// #1
 bf0:	ldp	x20, x19, [sp, #16]
 bf4:	ldp	x29, x30, [sp], #32
 bf8:	ret
 bfc:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c00:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c04:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c08:	add	x0, x0, #0x0
 c0c:	add	x1, x1, #0x0
 c10:	add	x3, x3, #0x0
 c14:	mov	w2, #0x69                  	// #105
 c18:	bl	0 <__assert_fail>
 c1c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c20:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c24:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c28:	add	x0, x0, #0x0
 c2c:	add	x1, x1, #0x0
 c30:	add	x3, x3, #0x0
 c34:	mov	w2, #0x108                 	// #264
 c38:	bl	0 <__assert_fail>
 c3c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c40:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c44:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 c48:	add	x0, x0, #0x0
 c4c:	add	x1, x1, #0x0
 c50:	add	x3, x3, #0x0
 c54:	mov	w2, #0x69                  	// #105
 c58:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #840]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #848]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x1, #8]
  18:	and	w9, w8, #0xff
  1c:	cmp	w9, #0x10
  20:	b.hi	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.pmore
  24:	mov	w10, #0x1                   	// #1
  28:	lsl	w9, w10, w9
  2c:	mov	w10, #0x8a7e                	// #35454
  30:	mov	x20, x1
  34:	mov	x19, x0
  38:	tst	w9, w10
  3c:	b.eq	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>  // b.none
  40:	and	w9, w8, #0xff
  44:	sub	w9, w9, #0x1
  48:	cmp	w9, #0xf
  4c:	b.hi	b0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xb0>  // b.pmore
  50:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  54:	add	x10, x10, #0x0
  58:	adr	x11, 70 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x70>
  5c:	ldrb	w12, [x10, x9]
  60:	add	x11, x11, x12, lsl #2
  64:	mov	x1, xzr
  68:	mov	w0, #0x10                  	// #16
  6c:	br	x11
  70:	mov	x1, xzr
  74:	mov	w0, #0x40                  	// #64
  78:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  7c:	mov	w8, #0x6000                	// #24576
  80:	movk	w8, #0x1, lsl #16
  84:	tst	w9, w8
  88:	b.eq	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.none
  8c:	mov	x0, x20
  90:	mov	x1, xzr
  94:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  98:	tbz	w0, #0, 1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>
  9c:	ldr	w8, [x20, #8]
  a0:	and	w9, w8, #0xff
  a4:	sub	w9, w9, #0x1
  a8:	cmp	w9, #0xf
  ac:	b.ls	50 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x50>  // b.plast
  b0:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b4:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	mov	w2, #0x298                 	// #664
  c4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  c8:	mov	x1, xzr
  cc:	mov	w0, #0x80                  	// #128
  d0:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  d4:	and	w9, w8, #0xff
  d8:	cmp	w9, #0xf
  dc:	b.ne	1fc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1fc>  // b.any
  e0:	lsr	w1, w8, #8
  e4:	mov	x0, x19
  e8:	b	144 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x144>
  ec:	ldr	x21, [x20, #32]
  f0:	lsr	x8, x21, #32
  f4:	cbnz	x8, 21c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x21c>
  f8:	ldr	x1, [x20, #24]
  fc:	ldrb	w22, [x20, #40]
 100:	mov	x0, x19
 104:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 108:	tst	w1, #0xff
 10c:	b.ne	23c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x23c>  // b.any
 110:	and	x8, x21, #0x100000000
 114:	orr	x8, x8, x22, lsl #32
 118:	mul	x0, x0, x21
 11c:	lsr	x1, x8, #32
 120:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 124:	mov	x0, x19
 128:	mov	x1, x20
 12c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 130:	ldr	x8, [x0]
 134:	mov	x1, xzr
 138:	b	1c4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c4>
 13c:	mov	x0, x19
 140:	mov	w1, wzr
 144:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 148:	mov	x1, xzr
 14c:	lsl	w0, w0, #3
 150:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 154:	mov	x1, xzr
 158:	mov	w0, #0x20                  	// #32
 15c:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 160:	mov	x1, xzr
 164:	mov	w0, #0x50                  	// #80
 168:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 16c:	mov	x1, xzr
 170:	lsr	w0, w8, #8
 174:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 178:	ldp	x22, x23, [x20, #24]
 17c:	mov	x0, x19
 180:	mov	x1, x22
 184:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 188:	mov	x20, x0
 18c:	mov	x21, x1
 190:	mov	x0, x19
 194:	mov	x1, x22
 198:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 19c:	cbz	w0, 25c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x25c>
 1a0:	mov	w8, w0
 1a4:	add	x9, x20, #0x7
 1a8:	add	x9, x8, x9, lsr #3
 1ac:	sub	x9, x9, #0x1
 1b0:	udiv	x9, x9, x8
 1b4:	tst	w21, #0xff
 1b8:	mul	x8, x9, x8
 1bc:	cset	w1, ne  // ne = any
 1c0:	mul	x8, x23, x8
 1c4:	lsl	x0, x8, #3
 1c8:	ldp	x20, x19, [sp, #48]
 1cc:	ldp	x22, x21, [sp, #32]
 1d0:	ldr	x23, [sp, #16]
 1d4:	ldp	x29, x30, [sp], #64
 1d8:	ret
 1dc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e8:	add	x0, x0, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x3, x3, #0x0
 1f4:	mov	w2, #0x271                 	// #625
 1f8:	bl	0 <__assert_fail>
 1fc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 200:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 204:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 208:	add	x0, x0, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x108                 	// #264
 218:	bl	0 <__assert_fail>
 21c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 220:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 224:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 228:	add	x0, x0, #0x0
 22c:	add	x1, x1, #0x0
 230:	add	x3, x3, #0x0
 234:	mov	w2, #0x220                 	// #544
 238:	bl	0 <__assert_fail>
 23c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 240:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 244:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 248:	add	x0, x0, #0x0
 24c:	add	x1, x1, #0x0
 250:	add	x3, x3, #0x0
 254:	mov	w2, #0x7d                  	// #125
 258:	bl	0 <__assert_fail>
 25c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 260:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 264:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 268:	add	x0, x0, #0x0
 26c:	add	x1, x1, #0x0
 270:	add	x3, x3, #0x0
 274:	mov	w2, #0xc7                  	// #199
 278:	bl	0 <__assert_fail>

TargetMachine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  1c:	add	x9, x0, #0x40
  20:	ldr	x8, [x8]
  24:	str	x9, [x0, #48]
  28:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  2c:	ldr	d0, [x9]
  30:	add	x9, x0, #0x58
  34:	str	x9, [x0, #72]
  38:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  3c:	ldr	d1, [x9]
  40:	add	x8, x8, #0x10
  44:	mov	x9, x0
  48:	stp	x8, x1, [x0]
  4c:	add	x8, x0, #0x108
  50:	strh	wzr, [x0, #24]
  54:	strh	wzr, [x0, #32]
  58:	str	d0, [x0, #56]
  5c:	str	d1, [x0, #80]
  60:	strb	wzr, [x9, #232]!
  64:	str	x8, [x0, #248]
  68:	add	x8, x0, #0x1a0
  6c:	mov	x19, x0
  70:	stp	xzr, x8, [x0, #392]
  74:	add	x0, x0, #0x10
  78:	mov	x1, x2
  7c:	mov	x2, x3
  80:	mov	x20, x6
  84:	mov	x21, x5
  88:	mov	x23, x4
  8c:	str	d0, [x19, #256]
  90:	stp	x9, xzr, [x19, #216]
  94:	str	d0, [x19, #408]
  98:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
  9c:	add	x0, x19, #0x1d0
  a0:	str	x0, [x19, #448]
  a4:	ldp	x24, x25, [x23]
  a8:	cbnz	x24, b0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xb0>
  ac:	cbnz	x25, 2ac <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x2ac>
  b0:	cmp	x25, #0x10
  b4:	str	x25, [x29, #24]
  b8:	b.cc	d8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xd8>  // b.lo, b.ul, b.last
  bc:	add	x0, x19, #0x1c0
  c0:	add	x1, x29, #0x18
  c4:	mov	x2, xzr
  c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  cc:	str	x0, [x19, #448]
  d0:	ldr	x8, [x29, #24]
  d4:	str	x8, [x19, #464]
  d8:	ldr	x22, [x29, #80]
  dc:	cbz	x25, 100 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x100>
  e0:	cmp	x25, #0x1
  e4:	b.ne	f4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xf4>  // b.any
  e8:	ldrb	w8, [x24]
  ec:	strb	w8, [x0]
  f0:	b	100 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x100>
  f4:	mov	x1, x24
  f8:	mov	x2, x25
  fc:	bl	0 <memcpy>
 100:	ldr	x8, [x29, #24]
 104:	ldr	x9, [x19, #448]
 108:	add	x0, x19, #0x208
 10c:	str	x8, [x19, #456]
 110:	strb	wzr, [x9, x8]
 114:	ldr	q0, [x23, #32]
 118:	ldr	x8, [x23, #48]
 11c:	ldr	x23, [x29, #96]
 120:	str	q0, [x19, #480]
 124:	stp	x8, x0, [x19, #496]
 128:	cbz	x21, 16c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x16c>
 12c:	cmp	x20, #0x10
 130:	str	x20, [x29, #24]
 134:	b.cc	154 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x154>  // b.lo, b.ul, b.last
 138:	add	x0, x19, #0x1f8
 13c:	add	x1, x29, #0x18
 140:	mov	x2, xzr
 144:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 148:	str	x0, [x19, #504]
 14c:	ldr	x8, [x29, #24]
 150:	str	x8, [x19, #520]
 154:	cbz	x20, 198 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x198>
 158:	cmp	x20, #0x1
 15c:	b.ne	18c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x18c>  // b.any
 160:	ldrb	w8, [x21]
 164:	strb	w8, [x0]
 168:	b	198 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x198>
 16c:	str	xzr, [x19, #512]
 170:	strb	wzr, [x19, #520]
 174:	add	x0, x19, #0x228
 178:	str	x0, [x19, #536]
 17c:	cbnz	x22, 1b4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1b4>
 180:	str	xzr, [x19, #544]
 184:	strb	wzr, [x19, #552]
 188:	b	214 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x214>
 18c:	mov	x1, x21
 190:	mov	x2, x20
 194:	bl	0 <memcpy>
 198:	ldr	x8, [x29, #24]
 19c:	ldr	x9, [x19, #504]
 1a0:	str	x8, [x19, #512]
 1a4:	strb	wzr, [x9, x8]
 1a8:	add	x0, x19, #0x228
 1ac:	str	x0, [x19, #536]
 1b0:	cbz	x22, 180 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x180>
 1b4:	ldr	x20, [x29, #88]
 1b8:	cmp	x20, #0x10
 1bc:	str	x20, [x29, #24]
 1c0:	b.cc	1e0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1e0>  // b.lo, b.ul, b.last
 1c4:	add	x0, x19, #0x218
 1c8:	add	x1, x29, #0x18
 1cc:	mov	x2, xzr
 1d0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1d4:	str	x0, [x19, #536]
 1d8:	ldr	x8, [x29, #24]
 1dc:	str	x8, [x19, #552]
 1e0:	cbz	x20, 204 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x204>
 1e4:	cmp	x20, #0x1
 1e8:	b.ne	1f8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1f8>  // b.any
 1ec:	ldrb	w8, [x22]
 1f0:	strb	w8, [x0]
 1f4:	b	204 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x204>
 1f8:	mov	x1, x22
 1fc:	mov	x2, x20
 200:	bl	0 <memcpy>
 204:	ldr	x8, [x29, #24]
 208:	ldr	x9, [x19, #536]
 20c:	str	x8, [x19, #544]
 210:	strb	wzr, [x9, x8]
 214:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 218:	ldr	d0, [x8]
 21c:	mov	w9, #0x2                   	// #2
 220:	add	x8, x19, #0x248
 224:	movi	v1.2d, #0x0
 228:	str	w9, [x19, #576]
 22c:	str	d0, [x19, #568]
 230:	stp	q1, q1, [x8]
 234:	ldrb	w8, [x19, #616]
 238:	add	x9, x19, #0x270
 23c:	add	x20, x23, #0x38
 240:	add	x0, x9, #0x38
 244:	and	w8, w8, #0xfc
 248:	strb	w8, [x19, #616]
 24c:	ldp	q2, q0, [x23, #16]
 250:	ldr	x8, [x23, #48]
 254:	ldr	q1, [x23]
 258:	mov	x1, x20
 25c:	stp	q2, q0, [x19, #640]
 260:	str	x8, [x19, #672]
 264:	str	q1, [x19, #624]
 268:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 26c:	ldp	q2, q0, [x23, #16]
 270:	ldr	x8, [x23, #48]
 274:	ldr	q1, [x23]
 278:	add	x9, x19, #0x308
 27c:	add	x0, x19, #0x340
 280:	mov	x1, x20
 284:	str	x8, [x9, #48]
 288:	stp	q2, q0, [x9, #16]
 28c:	str	q1, [x9]
 290:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 294:	ldp	x20, x19, [sp, #64]
 298:	ldp	x22, x21, [sp, #48]
 29c:	ldp	x24, x23, [sp, #32]
 2a0:	ldr	x25, [sp, #16]
 2a4:	ldp	x29, x30, [sp], #80
 2a8:	ret
 2ac:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 2b0:	add	x0, x0, #0x0
 2b4:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000002b8 <_ZN4llvm13TargetMachineD1Ev>:
 2b8:	stp	x29, x30, [sp, #-48]!
 2bc:	str	x21, [sp, #16]
 2c0:	stp	x20, x19, [sp, #32]
 2c4:	mov	x29, sp
 2c8:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 2cc:	ldr	x20, [x0, #904]
 2d0:	ldr	x21, [x0, #912]
 2d4:	ldr	x8, [x8]
 2d8:	mov	x19, x0
 2dc:	cmp	x20, x21
 2e0:	add	x8, x8, #0x10
 2e4:	str	x8, [x0]
 2e8:	b.ne	430 <_ZN4llvm13TargetMachineD1Ev+0x178>  // b.any
 2ec:	cbz	x20, 2f8 <_ZN4llvm13TargetMachineD1Ev+0x40>
 2f0:	mov	x0, x20
 2f4:	bl	0 <_ZdlPv>
 2f8:	ldr	x0, [x19, #872]
 2fc:	add	x8, x19, #0x378
 300:	cmp	x0, x8
 304:	b.eq	30c <_ZN4llvm13TargetMachineD1Ev+0x54>  // b.none
 308:	bl	0 <_ZdlPv>
 30c:	ldr	x0, [x19, #840]
 310:	add	x8, x19, #0x358
 314:	cmp	x0, x8
 318:	b.eq	320 <_ZN4llvm13TargetMachineD1Ev+0x68>  // b.none
 31c:	bl	0 <_ZdlPv>
 320:	ldr	x20, [x19, #752]
 324:	ldr	x21, [x19, #760]
 328:	cmp	x20, x21
 32c:	b.ne	450 <_ZN4llvm13TargetMachineD1Ev+0x198>  // b.any
 330:	cbz	x20, 33c <_ZN4llvm13TargetMachineD1Ev+0x84>
 334:	mov	x0, x20
 338:	bl	0 <_ZdlPv>
 33c:	ldr	x0, [x19, #720]
 340:	add	x8, x19, #0x2e0
 344:	cmp	x0, x8
 348:	b.eq	350 <_ZN4llvm13TargetMachineD1Ev+0x98>  // b.none
 34c:	bl	0 <_ZdlPv>
 350:	ldr	x0, [x19, #688]
 354:	add	x8, x19, #0x2c0
 358:	cmp	x0, x8
 35c:	b.eq	364 <_ZN4llvm13TargetMachineD1Ev+0xac>  // b.none
 360:	bl	0 <_ZdlPv>
 364:	ldr	x0, [x19, #608]
 368:	cbz	x0, 378 <_ZN4llvm13TargetMachineD1Ev+0xc0>
 36c:	ldr	x8, [x0]
 370:	ldr	x8, [x8, #8]
 374:	blr	x8
 378:	ldr	x0, [x19, #600]
 37c:	str	xzr, [x19, #608]
 380:	cbz	x0, 388 <_ZN4llvm13TargetMachineD1Ev+0xd0>
 384:	bl	0 <_ZdlPv>
 388:	ldr	x20, [x19, #592]
 38c:	str	xzr, [x19, #600]
 390:	cbz	x20, 3b8 <_ZN4llvm13TargetMachineD1Ev+0x100>
 394:	ldr	x0, [x20, #200]
 398:	bl	0 <_ZdlPv>
 39c:	ldr	x8, [x20, #192]
 3a0:	ldr	x0, [x20, #168]
 3a4:	add	x8, x8, #0x1
 3a8:	str	x8, [x20, #192]
 3ac:	bl	0 <_ZdlPv>
 3b0:	mov	x0, x20
 3b4:	bl	0 <_ZdlPv>
 3b8:	ldr	x0, [x19, #584]
 3bc:	str	xzr, [x19, #592]
 3c0:	cbz	x0, 3d0 <_ZN4llvm13TargetMachineD1Ev+0x118>
 3c4:	ldr	x8, [x0]
 3c8:	ldr	x8, [x8, #8]
 3cc:	blr	x8
 3d0:	ldr	x0, [x19, #536]
 3d4:	add	x8, x19, #0x228
 3d8:	str	xzr, [x19, #584]
 3dc:	cmp	x0, x8
 3e0:	b.eq	3e8 <_ZN4llvm13TargetMachineD1Ev+0x130>  // b.none
 3e4:	bl	0 <_ZdlPv>
 3e8:	ldr	x0, [x19, #504]
 3ec:	add	x8, x19, #0x208
 3f0:	cmp	x0, x8
 3f4:	b.eq	3fc <_ZN4llvm13TargetMachineD1Ev+0x144>  // b.none
 3f8:	bl	0 <_ZdlPv>
 3fc:	ldr	x0, [x19, #448]
 400:	add	x8, x19, #0x1d0
 404:	cmp	x0, x8
 408:	b.eq	410 <_ZN4llvm13TargetMachineD1Ev+0x158>  // b.none
 40c:	bl	0 <_ZdlPv>
 410:	add	x0, x19, #0x10
 414:	ldp	x20, x19, [sp, #32]
 418:	ldr	x21, [sp, #16]
 41c:	ldp	x29, x30, [sp], #48
 420:	b	0 <_ZN4llvm10DataLayoutD1Ev>
 424:	add	x20, x20, #0x10
 428:	cmp	x20, x21
 42c:	b.eq	464 <_ZN4llvm13TargetMachineD1Ev+0x1ac>  // b.none
 430:	ldr	x0, [x20], #16
 434:	cmp	x0, x20
 438:	b.eq	424 <_ZN4llvm13TargetMachineD1Ev+0x16c>  // b.none
 43c:	bl	0 <_ZdlPv>
 440:	b	424 <_ZN4llvm13TargetMachineD1Ev+0x16c>
 444:	add	x20, x20, #0x10
 448:	cmp	x20, x21
 44c:	b.eq	470 <_ZN4llvm13TargetMachineD1Ev+0x1b8>  // b.none
 450:	ldr	x0, [x20], #16
 454:	cmp	x0, x20
 458:	b.eq	444 <_ZN4llvm13TargetMachineD1Ev+0x18c>  // b.none
 45c:	bl	0 <_ZdlPv>
 460:	b	444 <_ZN4llvm13TargetMachineD1Ev+0x18c>
 464:	ldr	x20, [x19, #904]
 468:	cbnz	x20, 2f0 <_ZN4llvm13TargetMachineD1Ev+0x38>
 46c:	b	2f8 <_ZN4llvm13TargetMachineD1Ev+0x40>
 470:	ldr	x20, [x19, #752]
 474:	cbnz	x20, 334 <_ZN4llvm13TargetMachineD1Ev+0x7c>
 478:	b	33c <_ZN4llvm13TargetMachineD1Ev+0x84>

000000000000047c <_ZN4llvm13TargetMachineD0Ev>:
 47c:	stp	x29, x30, [sp, #-32]!
 480:	str	x19, [sp, #16]
 484:	mov	x29, sp
 488:	mov	x19, x0
 48c:	bl	2b8 <_ZN4llvm13TargetMachineD1Ev>
 490:	mov	x0, x19
 494:	ldr	x19, [sp, #16]
 498:	ldp	x29, x30, [sp], #32
 49c:	b	0 <_ZdlPv>

00000000000004a0 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>:
 4a0:	ldr	w8, [x0, #568]
 4a4:	cmp	w8, #0x1
 4a8:	cset	w0, eq  // eq = none
 4ac:	ret

00000000000004b0 <_ZNK4llvm13TargetMachine18getRelocationModelEv>:
 4b0:	ldr	w0, [x0, #568]
 4b4:	ret

00000000000004b8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE>:
 4b8:	stp	x29, x30, [sp, #-48]!
 4bc:	str	x21, [sp, #16]
 4c0:	stp	x20, x19, [sp, #32]
 4c4:	mov	x29, sp
 4c8:	add	x20, x1, #0x70
 4cc:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 4d0:	mov	x19, x0
 4d4:	mov	w21, #0x7274                	// #29300
 4d8:	add	x1, x1, #0x0
 4dc:	mov	w2, #0xe                   	// #14
 4e0:	mov	x0, x20
 4e4:	movk	w21, #0x6575, lsl #16
 4e8:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 4ec:	tbz	w0, #0, 530 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x78>
 4f0:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 4f4:	add	x2, x2, #0x0
 4f8:	mov	w1, #0xffffffff            	// #-1
 4fc:	mov	w3, #0xe                   	// #14
 500:	mov	x0, x20
 504:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 508:	str	x0, [x29, #24]
 50c:	add	x0, x29, #0x18
 510:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 514:	cmp	x1, #0x4
 518:	b.ne	548 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x90>  // b.any
 51c:	ldr	w8, [x0]
 520:	cmp	w8, w21
 524:	cset	w8, eq  // eq = none
 528:	lsl	w8, w8, #1
 52c:	b	54c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x94>
 530:	ldrh	w8, [x19, #624]
 534:	ldrh	w9, [x19, #776]
 538:	and	w8, w8, #0x2
 53c:	and	w9, w9, #0xfffffffd
 540:	orr	w8, w9, w8
 544:	b	558 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xa0>
 548:	mov	w8, wzr
 54c:	ldrh	w9, [x19, #776]
 550:	and	w9, w9, #0xfffffffd
 554:	orr	w8, w8, w9
 558:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 55c:	add	x1, x1, #0x0
 560:	mov	w2, #0xf                   	// #15
 564:	mov	x0, x20
 568:	strh	w8, [x19, #776]
 56c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 570:	tbz	w0, #0, 5b4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xfc>
 574:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 578:	add	x2, x2, #0x0
 57c:	mov	w1, #0xffffffff            	// #-1
 580:	mov	w3, #0xf                   	// #15
 584:	mov	x0, x20
 588:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 58c:	str	x0, [x29, #24]
 590:	add	x0, x29, #0x18
 594:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 598:	cmp	x1, #0x4
 59c:	b.ne	5cc <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x114>  // b.any
 5a0:	ldr	w8, [x0]
 5a4:	cmp	w8, w21
 5a8:	cset	w8, eq  // eq = none
 5ac:	lsl	w8, w8, #2
 5b0:	b	5d0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x118>
 5b4:	ldrh	w8, [x19, #624]
 5b8:	ldrh	w9, [x19, #776]
 5bc:	and	w8, w8, #0x4
 5c0:	and	w9, w9, #0xfffffffb
 5c4:	orr	w8, w9, w8
 5c8:	b	5dc <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x124>
 5cc:	mov	w8, wzr
 5d0:	ldrh	w9, [x19, #776]
 5d4:	and	w9, w9, #0xfffffffb
 5d8:	orr	w8, w8, w9
 5dc:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 5e0:	add	x1, x1, #0x0
 5e4:	mov	w2, #0xf                   	// #15
 5e8:	mov	x0, x20
 5ec:	strh	w8, [x19, #776]
 5f0:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 5f4:	tbz	w0, #0, 638 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x180>
 5f8:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 5fc:	add	x2, x2, #0x0
 600:	mov	w1, #0xffffffff            	// #-1
 604:	mov	w3, #0xf                   	// #15
 608:	mov	x0, x20
 60c:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 610:	str	x0, [x29, #24]
 614:	add	x0, x29, #0x18
 618:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 61c:	cmp	x1, #0x4
 620:	b.ne	650 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x198>  // b.any
 624:	ldr	w8, [x0]
 628:	cmp	w8, w21
 62c:	cset	w8, eq  // eq = none
 630:	lsl	w8, w8, #3
 634:	b	654 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x19c>
 638:	ldrh	w8, [x19, #624]
 63c:	ldrh	w9, [x19, #776]
 640:	and	w8, w8, #0x8
 644:	and	w9, w9, #0xfffffff7
 648:	orr	w8, w9, w8
 64c:	b	660 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1a8>
 650:	mov	w8, wzr
 654:	ldrh	w9, [x19, #776]
 658:	and	w9, w9, #0xfffffff7
 65c:	orr	w8, w8, w9
 660:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 664:	add	x1, x1, #0x0
 668:	mov	w2, #0x17                  	// #23
 66c:	mov	x0, x20
 670:	strh	w8, [x19, #776]
 674:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 678:	tbz	w0, #0, 6bc <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x204>
 67c:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 680:	add	x2, x2, #0x0
 684:	mov	w1, #0xffffffff            	// #-1
 688:	mov	w3, #0x17                  	// #23
 68c:	mov	x0, x20
 690:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 694:	str	x0, [x29, #24]
 698:	add	x0, x29, #0x18
 69c:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 6a0:	cmp	x1, #0x4
 6a4:	b.ne	6d4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x21c>  // b.any
 6a8:	ldr	w8, [x0]
 6ac:	cmp	w8, w21
 6b0:	cset	w8, eq  // eq = none
 6b4:	lsl	w8, w8, #5
 6b8:	b	6d8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x220>
 6bc:	ldrh	w8, [x19, #624]
 6c0:	ldrh	w9, [x19, #776]
 6c4:	and	w8, w8, #0x20
 6c8:	and	w9, w9, #0xffffffdf
 6cc:	orr	w8, w9, w8
 6d0:	b	6e4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x22c>
 6d4:	mov	w8, wzr
 6d8:	ldrh	w9, [x19, #776]
 6dc:	and	w9, w9, #0xffffffdf
 6e0:	orr	w8, w8, w9
 6e4:	strh	w8, [x19, #776]
 6e8:	ldp	x20, x19, [sp, #32]
 6ec:	ldr	x21, [sp, #16]
 6f0:	ldp	x29, x30, [sp], #48
 6f4:	ret

00000000000006f8 <_ZNK4llvm13TargetMachine12getCodeModelEv>:
 6f8:	ldr	w0, [x0, #572]
 6fc:	ret

0000000000000700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>:
 700:	stp	x29, x30, [sp, #-48]!
 704:	stp	x22, x21, [sp, #16]
 708:	stp	x20, x19, [sp, #32]
 70c:	mov	x29, sp
 710:	mov	x19, x2
 714:	mov	x21, x1
 718:	mov	x20, x0
 71c:	cbz	x2, 728 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x28>
 720:	ldrb	w8, [x19, #33]
 724:	tbnz	w8, #6, 80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x10c>
 728:	mov	x0, x21
 72c:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
 730:	cbnz	x19, 74c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x4c>
 734:	tbz	w0, #0, 74c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x4c>
 738:	mov	w0, wzr
 73c:	ldp	x20, x19, [sp, #32]
 740:	ldp	x22, x21, [sp, #16]
 744:	ldp	x29, x30, [sp], #48
 748:	ret
 74c:	ldr	w22, [x20, #568]
 750:	cbz	x19, 778 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x78>
 754:	ldr	w8, [x19, #32]
 758:	and	w8, w8, #0x300
 75c:	cmp	w8, #0x100
 760:	b.ne	778 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x78>  // b.any
 764:	mov	w0, wzr
 768:	ldp	x20, x19, [sp, #32]
 76c:	ldp	x22, x21, [sp, #16]
 770:	ldp	x29, x30, [sp], #48
 774:	ret
 778:	ldr	w8, [x20, #492]
 77c:	cmp	w8, #0xf
 780:	b.ne	7c8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xc8>  // b.any
 784:	ldr	w8, [x20, #496]
 788:	cmp	w8, #0x1
 78c:	b.ne	7c8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xc8>  // b.any
 790:	cbz	x19, 7c8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xc8>
 794:	ldr	w8, [x20, #500]
 798:	cmp	w8, #0x1
 79c:	b.ne	7c8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xc8>  // b.any
 7a0:	ldr	w8, [x19, #32]
 7a4:	and	w8, w8, #0xf
 7a8:	cmp	w8, #0x1
 7ac:	b.eq	7bc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xbc>  // b.none
 7b0:	mov	x0, x19
 7b4:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 7b8:	tbz	w0, #0, 7c8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xc8>
 7bc:	ldrb	w8, [x19, #16]
 7c0:	cmp	w8, #0x3
 7c4:	b.eq	764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>  // b.none
 7c8:	ldr	w8, [x20, #500]
 7cc:	cbz	x19, 7f8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xf8>
 7d0:	cmp	w8, #0x1
 7d4:	b.ne	7f8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xf8>  // b.any
 7d8:	ldr	w8, [x19, #32]
 7dc:	and	w8, w8, #0xf
 7e0:	cmp	w8, #0x9
 7e4:	cset	w0, ne  // ne = any
 7e8:	ldp	x20, x19, [sp, #32]
 7ec:	ldp	x22, x21, [sp, #16]
 7f0:	ldp	x29, x30, [sp], #48
 7f4:	ret
 7f8:	cmp	w8, #0x1
 7fc:	b.eq	80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x10c>  // b.none
 800:	ldr	w9, [x20, #492]
 804:	cmp	w9, #0xf
 808:	b.ne	820 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x120>  // b.any
 80c:	mov	w0, #0x1                   	// #1
 810:	ldp	x20, x19, [sp, #32]
 814:	ldp	x22, x21, [sp, #16]
 818:	ldp	x29, x30, [sp], #48
 81c:	ret
 820:	cbz	x19, 848 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x148>
 824:	ldr	w10, [x20, #568]
 828:	ldr	w9, [x19, #32]
 82c:	cmp	w10, #0x1
 830:	b.ne	840 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x140>  // b.any
 834:	and	w10, w9, #0xf
 838:	cmp	w10, #0x9
 83c:	b.eq	764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>  // b.none
 840:	tst	w9, #0x30
 844:	b.ne	80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x10c>  // b.any
 848:	sub	w8, w8, #0x2
 84c:	cmp	w8, #0x3
 850:	b.hi	94c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x24c>  // b.pmore
 854:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 858:	add	x9, x9, #0x0
 85c:	adr	x10, 73c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x3c>
 860:	ldrb	w11, [x9, x8]
 864:	add	x10, x10, x11, lsl #2
 868:	mov	w0, wzr
 86c:	br	x10
 870:	cmp	w22, #0x2
 874:	b.eq	96c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x26c>  // b.none
 878:	cbz	w22, 888 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x188>
 87c:	mov	x0, x21
 880:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 884:	cbz	w0, 73c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x3c>
 888:	cbz	x19, 8c0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1c0>
 88c:	ldr	w8, [x19, #32]
 890:	and	w8, w8, #0xf
 894:	cmp	w8, #0x1
 898:	b.eq	8a8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1a8>  // b.none
 89c:	mov	x0, x19
 8a0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 8a4:	tbz	w0, #0, 80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x10c>
 8a8:	ldrb	w8, [x19, #16]
 8ac:	cbnz	w8, 8c0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1c0>
 8b0:	add	x0, x19, #0x70
 8b4:	mov	w1, #0x22                  	// #34
 8b8:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9Attribute8AttrKindE>
 8bc:	tbnz	w0, #0, 764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>
 8c0:	ldr	w8, [x20, #480]
 8c4:	sub	w8, w8, #0x10
 8c8:	cmp	w8, #0x3
 8cc:	b.cc	764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>  // b.lo, b.ul, b.last
 8d0:	cbz	x19, 944 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x244>
 8d4:	ldr	w8, [x19, #32]
 8d8:	and	w8, w8, #0x1c00
 8dc:	orr	w8, w8, w22
 8e0:	cbnz	w8, 764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>
 8e4:	b	80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x10c>
 8e8:	cmp	w22, #0x0
 8ec:	cset	w0, eq  // eq = none
 8f0:	cbz	x19, 73c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x3c>
 8f4:	cbz	w22, 73c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x3c>
 8f8:	ldr	w8, [x19, #32]
 8fc:	and	w8, w8, #0xf
 900:	cmp	w8, #0x1
 904:	b.eq	764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>  // b.none
 908:	mov	x0, x19
 90c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 910:	tbnz	w0, #0, 764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>
 914:	ldr	w8, [x19, #32]
 918:	and	w8, w8, #0xf
 91c:	sub	w8, w8, #0x2
 920:	cmp	w8, #0x9
 924:	b.cs	80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x10c>  // b.hs, b.nlast
 928:	mov	w9, #0x70                  	// #112
 92c:	lsr	w8, w9, w8
 930:	and	w0, w8, #0x1
 934:	ldp	x20, x19, [sp, #32]
 938:	ldp	x22, x21, [sp, #16]
 93c:	ldp	x29, x30, [sp], #48
 940:	ret
 944:	cbnz	w22, 764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>
 948:	b	80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x10c>
 94c:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 950:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 954:	adrp	x3, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 958:	add	x0, x0, #0x0
 95c:	add	x1, x1, #0x0
 960:	add	x3, x3, #0x0
 964:	mov	w2, #0xab                  	// #171
 968:	bl	0 <__assert_fail>
 96c:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 970:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 974:	adrp	x3, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 978:	add	x0, x0, #0x0
 97c:	add	x1, x1, #0x0
 980:	add	x3, x3, #0x0
 984:	mov	w2, #0xac                  	// #172
 988:	bl	0 <__assert_fail>

000000000000098c <_ZNK4llvm13TargetMachine14useEmulatedTLSEv>:
 98c:	ldr	w8, [x0, #800]
 990:	tbnz	w8, #15, 9c0 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x34>
 994:	ldr	w8, [x0, #496]
 998:	cmp	w8, #0xa
 99c:	b.eq	9c8 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 9a0:	ldr	w9, [x0, #492]
 9a4:	cmp	w9, #0xd
 9a8:	b.eq	9c8 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 9ac:	cmp	w9, #0xf
 9b0:	b.ne	9d0 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x44>  // b.any
 9b4:	cmp	w8, #0x10
 9b8:	cset	w0, eq  // eq = none
 9bc:	ret
 9c0:	ubfx	w0, w8, #14, #1
 9c4:	ret
 9c8:	mov	w0, #0x1                   	// #1
 9cc:	ret
 9d0:	mov	w0, wzr
 9d4:	ret

00000000000009d8 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE>:
 9d8:	stp	x29, x30, [sp, #-48]!
 9dc:	stp	x22, x21, [sp, #16]
 9e0:	stp	x20, x19, [sp, #32]
 9e4:	mov	x29, sp
 9e8:	ldr	x8, [x1, #40]
 9ec:	mov	x20, x0
 9f0:	mov	x19, x1
 9f4:	mov	x0, x8
 9f8:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 9fc:	ldr	x1, [x19, #40]
 a00:	ldr	w22, [x20, #568]
 a04:	mov	w21, w0
 a08:	mov	x0, x20
 a0c:	mov	x2, x19
 a10:	bl	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>
 a14:	ldr	w9, [x19, #32]
 a18:	tst	w0, #0x1
 a1c:	mov	w8, #0x2                   	// #2
 a20:	cinc	w8, w8, ne  // ne = any
 a24:	cmp	w22, #0x1
 a28:	ccmp	w21, #0x0, #0x0, eq  // eq = none
 a2c:	and	w10, w0, #0x1
 a30:	ubfx	w9, w9, #10, #3
 a34:	csel	w8, w10, w8, eq  // eq = none
 a38:	cmp	w9, #0x4
 a3c:	b.hi	a88 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xb0>  // b.pmore
 a40:	adrp	x10, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a44:	add	x10, x10, #0x0
 a48:	adr	x11, a5c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x84>
 a4c:	ldrb	w12, [x10, x9]
 a50:	add	x11, x11, x12, lsl #2
 a54:	mov	w9, wzr
 a58:	br	x11
 a5c:	mov	w9, #0x1                   	// #1
 a60:	b	a70 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x98>
 a64:	mov	w9, #0x3                   	// #3
 a68:	b	a70 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x98>
 a6c:	mov	w9, #0x2                   	// #2
 a70:	ldp	x20, x19, [sp, #32]
 a74:	ldp	x22, x21, [sp, #16]
 a78:	cmp	w9, w8
 a7c:	csel	w0, w9, w8, hi  // hi = pmore
 a80:	ldp	x29, x30, [sp], #48
 a84:	ret
 a88:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a8c:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a90:	add	x0, x0, #0x0
 a94:	add	x1, x1, #0x0
 a98:	mov	w2, #0x5b                  	// #91
 a9c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 aa0:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 aa4:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 aa8:	add	x0, x0, #0x0
 aac:	add	x1, x1, #0x0
 ab0:	mov	w2, #0x50                  	// #80
 ab4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000ab8 <_ZNK4llvm13TargetMachine11getOptLevelEv>:
 ab8:	ldr	w0, [x0, #576]
 abc:	ret

0000000000000ac0 <_ZN4llvm13TargetMachine11setOptLevelENS_10CodeGenOpt5LevelE>:
 ac0:	str	w1, [x0, #576]
 ac4:	ret

0000000000000ac8 <_ZN4llvm13TargetMachine22getTargetTransformInfoERKNS_8FunctionE>:
 ac8:	stp	x29, x30, [sp, #-32]!
 acc:	str	x19, [sp, #16]
 ad0:	mov	x29, sp
 ad4:	ldr	x0, [x1, #40]
 ad8:	mov	x19, x8
 adc:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 ae0:	mov	x1, x0
 ae4:	mov	x0, x19
 ae8:	ldr	x19, [sp, #16]
 aec:	ldp	x29, x30, [sp], #32
 af0:	b	0 <_ZN4llvm19TargetTransformInfoC1ERKNS_10DataLayoutE>

0000000000000af4 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>:
 af4:	stp	x29, x30, [sp, #-48]!
 af8:	str	x21, [sp, #16]
 afc:	stp	x20, x19, [sp, #32]
 b00:	mov	x29, sp
 b04:	mov	x19, x2
 b08:	mov	x20, x1
 b0c:	tbnz	w4, #0, b54 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x60>
 b10:	ldr	w8, [x19, #32]
 b14:	and	w8, w8, #0xf
 b18:	cmp	w8, #0x8
 b1c:	b.ne	b54 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x60>  // b.any
 b20:	ldr	x8, [x0]
 b24:	mov	x21, x0
 b28:	ldr	x8, [x8, #24]
 b2c:	blr	x8
 b30:	ldr	x8, [x0]
 b34:	mov	x1, x20
 b38:	mov	x2, x19
 b3c:	mov	x3, x21
 b40:	ldr	x4, [x8, #56]
 b44:	ldp	x20, x19, [sp, #32]
 b48:	ldr	x21, [sp, #16]
 b4c:	ldp	x29, x30, [sp], #48
 b50:	br	x4
 b54:	mov	x1, x20
 b58:	mov	x2, x19
 b5c:	ldp	x20, x19, [sp, #32]
 b60:	ldr	x21, [sp, #16]
 b64:	mov	x0, x3
 b68:	mov	w3, wzr
 b6c:	ldp	x29, x30, [sp], #48
 b70:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>

0000000000000b74 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>:
 b74:	sub	sp, sp, #0xe0
 b78:	stp	x29, x30, [sp, #176]
 b7c:	str	x21, [sp, #192]
 b80:	stp	x20, x19, [sp, #208]
 b84:	add	x29, sp, #0xb0
 b88:	ldr	x8, [x0]
 b8c:	mov	x20, x0
 b90:	mov	x19, x1
 b94:	ldr	x8, [x8, #24]
 b98:	blr	x8
 b9c:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 ba0:	ldr	d0, [x8]
 ba4:	add	x8, sp, #0x20
 ba8:	add	x8, x8, #0x10
 bac:	str	x8, [sp, #32]
 bb0:	str	d0, [sp, #40]
 bb4:	ldr	w8, [x19, #32]
 bb8:	mov	x21, x0
 bbc:	and	w8, w8, #0xf
 bc0:	cmp	w8, #0x8
 bc4:	b.ne	bf4 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x80>  // b.any
 bc8:	ldr	x8, [x20]
 bcc:	mov	x0, x20
 bd0:	ldr	x8, [x8, #24]
 bd4:	blr	x8
 bd8:	ldr	x8, [x0]
 bdc:	add	x1, sp, #0x20
 be0:	mov	x2, x19
 be4:	mov	x3, x20
 be8:	ldr	x8, [x8, #56]
 bec:	blr	x8
 bf0:	b	c08 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x94>
 bf4:	ldr	x0, [x21, #808]
 bf8:	add	x1, sp, #0x20
 bfc:	mov	x2, x19
 c00:	mov	w3, wzr
 c04:	bl	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
 c08:	ldr	x0, [x21, #800]
 c0c:	mov	w8, #0x106                 	// #262
 c10:	add	x19, sp, #0x20
 c14:	add	x1, sp, #0x8
 c18:	strh	w8, [sp, #24]
 c1c:	stp	x19, xzr, [sp, #8]
 c20:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 c24:	ldr	x8, [sp, #32]
 c28:	add	x9, x19, #0x10
 c2c:	mov	x19, x0
 c30:	cmp	x8, x9
 c34:	b.eq	c40 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0xcc>  // b.none
 c38:	mov	x0, x8
 c3c:	bl	0 <free>
 c40:	mov	x0, x19
 c44:	ldp	x20, x19, [sp, #208]
 c48:	ldr	x21, [sp, #192]
 c4c:	ldp	x29, x30, [sp, #176]
 c50:	add	sp, sp, #0xe0
 c54:	ret

0000000000000c58 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>:
 c58:	sub	sp, sp, #0x30
 c5c:	stp	x29, x30, [sp, #32]
 c60:	add	x29, sp, #0x20
 c64:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 c68:	adrp	x10, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 c6c:	add	x9, x9, #0x0
 c70:	add	x10, x10, #0x0
 c74:	str	x0, [sp]
 c78:	mov	x1, sp
 c7c:	mov	x0, x8
 c80:	stp	x10, x9, [sp, #16]
 c84:	bl	0 <_ZN4llvm16TargetIRAnalysisC1ESt8functionIFNS_19TargetTransformInfoERKNS_8FunctionEEE>
 c88:	ldr	x8, [sp, #16]
 c8c:	cbz	x8, ca0 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv+0x48>
 c90:	mov	x0, sp
 c94:	mov	x1, sp
 c98:	mov	w2, #0x3                   	// #3
 c9c:	blr	x8
 ca0:	ldp	x29, x30, [sp, #32]
 ca4:	add	sp, sp, #0x30
 ca8:	ret

0000000000000cac <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvE3$_0E9_M_invokeERKSt9_Any_dataS4_>:
 cac:	ldr	x0, [x0]
 cb0:	ldr	x9, [x0]
 cb4:	ldr	x2, [x9, #64]
 cb8:	br	x2

0000000000000cbc <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
 cbc:	cmp	w2, #0x2
 cc0:	b.eq	cd8 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x1c>  // b.none
 cc4:	cmp	w2, #0x1
 cc8:	b.ne	ce0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x24>  // b.any
 ccc:	str	x1, [x0]
 cd0:	mov	w0, wzr
 cd4:	ret
 cd8:	ldr	x8, [x1]
 cdc:	str	x8, [x0]
 ce0:	mov	w0, wzr
 ce4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine18getObjFileLoweringEv:

0000000000000000 <_ZNK4llvm13TargetMachine18getObjFileLoweringEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv:

0000000000000000 <_ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE:

0000000000000000 <_ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getIntrinsicInfoEv:

0000000000000000 <_ZNK4llvm13TargetMachine16getIntrinsicInfoEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE:

0000000000000000 <_ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE>:
   0:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb:

0000000000000000 <_ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv:

0000000000000000 <_ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm15MCTargetOptionsC2ERKS0_:

0000000000000000 <_ZN4llvm15MCTargetOptionsC2ERKS0_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x1]
  18:	mov	x20, x0
  1c:	mov	x19, x1
  20:	str	x8, [x0], #24
  24:	mov	x8, x20
  28:	str	x0, [x8, #8]!
  2c:	ldp	x21, x22, [x1, #8]
  30:	cbnz	x21, 38 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x38>
  34:	cbnz	x22, 128 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x128>
  38:	cmp	x22, #0x10
  3c:	str	x22, [sp, #8]
  40:	b.cc	60 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x60>  // b.lo, b.ul, b.last
  44:	add	x1, sp, #0x8
  48:	mov	x0, x8
  4c:	mov	x2, xzr
  50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  54:	str	x0, [x20, #8]
  58:	ldr	x8, [sp, #8]
  5c:	str	x8, [x20, #24]
  60:	cbz	x22, 84 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x84>
  64:	cmp	x22, #0x1
  68:	b.ne	78 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x78>  // b.any
  6c:	ldrb	w8, [x21]
  70:	strb	w8, [x0]
  74:	b	84 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x84>
  78:	mov	x1, x21
  7c:	mov	x2, x22
  80:	bl	0 <memcpy>
  84:	ldr	x9, [sp, #8]
  88:	ldr	x10, [x20, #8]
  8c:	add	x0, x20, #0x38
  90:	mov	x8, x20
  94:	str	x9, [x20, #16]
  98:	strb	wzr, [x10, x9]
  9c:	str	x0, [x8, #40]!
  a0:	ldp	x21, x22, [x19, #40]
  a4:	cbnz	x21, ac <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xac>
  a8:	cbnz	x22, 128 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x128>
  ac:	cmp	x22, #0x10
  b0:	str	x22, [sp, #8]
  b4:	b.cc	d4 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xd4>  // b.lo, b.ul, b.last
  b8:	add	x1, sp, #0x8
  bc:	mov	x0, x8
  c0:	mov	x2, xzr
  c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c8:	str	x0, [x20, #40]
  cc:	ldr	x8, [sp, #8]
  d0:	str	x8, [x20, #56]
  d4:	cbz	x22, f8 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xf8>
  d8:	cmp	x22, #0x1
  dc:	b.ne	ec <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xec>  // b.any
  e0:	ldrb	w8, [x21]
  e4:	strb	w8, [x0]
  e8:	b	f8 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xf8>
  ec:	mov	x1, x21
  f0:	mov	x2, x22
  f4:	bl	0 <memcpy>
  f8:	ldr	x8, [sp, #8]
  fc:	ldr	x9, [x20, #40]
 100:	add	x0, x20, #0x48
 104:	add	x1, x19, #0x48
 108:	str	x8, [x20, #48]
 10c:	strb	wzr, [x9, x8]
 110:	bl	0 <_ZN4llvm15MCTargetOptionsC2ERKS0_>
 114:	ldp	x20, x19, [sp, #48]
 118:	ldp	x22, x21, [sp, #32]
 11c:	ldp	x29, x30, [sp, #16]
 120:	add	sp, sp, #0x40
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm15MCTargetOptionsC2ERKS0_>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldp	x9, x8, [x1]
  1c:	mov	x19, x0
  20:	stp	xzr, xzr, [x0]
  24:	mov	x21, x1
  28:	subs	x0, x8, x9
  2c:	asr	x22, x0, #5
  30:	str	xzr, [x19, #16]
  34:	b.eq	4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x4c>  // b.none
  38:	lsr	x8, x22, #58
  3c:	cbnz	x8, 110 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x110>
  40:	bl	0 <_Znwm>
  44:	mov	x20, x0
  48:	b	50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x50>
  4c:	mov	x20, xzr
  50:	add	x8, x20, x22, lsl #5
  54:	stp	x20, x20, [x19]
  58:	str	x8, [x19, #16]
  5c:	ldp	x23, x24, [x21]
  60:	cmp	x23, x24
  64:	b.ne	b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0xb0>  // b.any
  68:	str	x20, [x19, #8]
  6c:	ldp	x20, x19, [sp, #64]
  70:	ldp	x22, x21, [sp, #48]
  74:	ldp	x24, x23, [sp, #32]
  78:	ldp	x29, x30, [sp, #16]
  7c:	add	sp, sp, #0x50
  80:	ret
  84:	mov	x1, x21
  88:	mov	x2, x22
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [sp, #8]
  94:	ldr	x9, [x20]
  98:	add	x23, x23, #0x20
  9c:	cmp	x23, x24
  a0:	str	x8, [x20, #8]
  a4:	add	x20, x20, #0x20
  a8:	strb	wzr, [x9, x8]
  ac:	b.eq	68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x68>  // b.none
  b0:	add	x0, x20, #0x10
  b4:	str	x0, [x20]
  b8:	ldp	x21, x22, [x23]
  bc:	cbnz	x21, c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0xc4>
  c0:	cbnz	x22, 104 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x104>
  c4:	cmp	x22, #0x10
  c8:	str	x22, [sp, #8]
  cc:	b.cc	ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0xec>  // b.lo, b.ul, b.last
  d0:	add	x1, sp, #0x8
  d4:	mov	x0, x20
  d8:	mov	x2, xzr
  dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  e0:	str	x0, [x20]
  e4:	ldr	x8, [sp, #8]
  e8:	str	x8, [x20, #16]
  ec:	cbz	x22, 90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x90>
  f0:	cmp	x22, #0x1
  f4:	b.ne	84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x84>  // b.any
  f8:	ldrb	w8, [x21]
  fc:	strb	w8, [x0]
 100:	b	90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x90>
 104:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_>
 108:	add	x0, x0, #0x0
 10c:	bl	0 <_ZSt19__throw_logic_errorPKc>
 110:	bl	0 <_ZSt17__throw_bad_allocv>

TargetMachineC.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMGetFirstTarget>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      10:	mov	x19, x0
      14:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      18:	cmp	x19, x1
      1c:	b.eq	34 <LLVMGetFirstTarget+0x34>  // b.none
      20:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      24:	cbz	x0, 44 <LLVMGetFirstTarget+0x44>
      28:	ldr	x19, [sp, #16]
      2c:	ldp	x29, x30, [sp], #32
      30:	ret
      34:	mov	x0, xzr
      38:	ldr	x19, [sp, #16]
      3c:	ldp	x29, x30, [sp], #32
      40:	ret
      44:	adrp	x0, 0 <LLVMGetFirstTarget>
      48:	adrp	x1, 0 <LLVMGetFirstTarget>
      4c:	adrp	x3, 0 <LLVMGetFirstTarget>
      50:	add	x0, x0, #0x0
      54:	add	x1, x1, #0x0
      58:	add	x3, x3, #0x0
      5c:	mov	w2, #0x277                 	// #631
      60:	bl	0 <__assert_fail>

0000000000000064 <LLVMGetNextTarget>:
      64:	ldr	x0, [x0]
      68:	ret

000000000000006c <LLVMGetTargetFromName>:
      6c:	stp	x29, x30, [sp, #-64]!
      70:	str	x23, [sp, #16]
      74:	stp	x22, x21, [sp, #32]
      78:	stp	x20, x19, [sp, #48]
      7c:	mov	x29, sp
      80:	mov	x20, x0
      84:	cbz	x0, a8 <LLVMGetTargetFromName+0x3c>
      88:	mov	x0, x20
      8c:	bl	0 <strlen>
      90:	mov	x21, x0
      94:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      98:	mov	x19, x0
      9c:	cmp	x1, x0
      a0:	b.ne	bc <LLVMGetTargetFromName+0x50>  // b.any
      a4:	b	114 <LLVMGetTargetFromName+0xa8>
      a8:	mov	x21, xzr
      ac:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      b0:	mov	x19, x0
      b4:	cmp	x1, x0
      b8:	b.eq	114 <LLVMGetTargetFromName+0xa8>  // b.none
      bc:	mov	x22, x1
      c0:	b	d0 <LLVMGetTargetFromName+0x64>
      c4:	ldr	x19, [x19]
      c8:	cmp	x22, x19
      cc:	b.eq	114 <LLVMGetTargetFromName+0xa8>  // b.none
      d0:	cbz	x19, 124 <LLVMGetTargetFromName+0xb8>
      d4:	ldr	x23, [x19, #16]
      d8:	cbz	x23, f0 <LLVMGetTargetFromName+0x84>
      dc:	mov	x0, x23
      e0:	bl	0 <strlen>
      e4:	cmp	x0, x21
      e8:	b.ne	c4 <LLVMGetTargetFromName+0x58>  // b.any
      ec:	b	fc <LLVMGetTargetFromName+0x90>
      f0:	mov	x0, xzr
      f4:	cmp	x0, x21
      f8:	b.ne	c4 <LLVMGetTargetFromName+0x58>  // b.any
      fc:	cbz	x21, 114 <LLVMGetTargetFromName+0xa8>
     100:	mov	x0, x23
     104:	mov	x1, x20
     108:	mov	x2, x21
     10c:	bl	0 <bcmp>
     110:	cbnz	w0, c4 <LLVMGetTargetFromName+0x58>
     114:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
     118:	cmp	x19, x1
     11c:	b.eq	144 <LLVMGetTargetFromName+0xd8>  // b.none
     120:	cbnz	x19, 148 <LLVMGetTargetFromName+0xdc>
     124:	adrp	x0, 0 <LLVMGetFirstTarget>
     128:	adrp	x1, 0 <LLVMGetFirstTarget>
     12c:	adrp	x3, 0 <LLVMGetFirstTarget>
     130:	add	x0, x0, #0x0
     134:	add	x1, x1, #0x0
     138:	add	x3, x3, #0x0
     13c:	mov	w2, #0x277                 	// #631
     140:	bl	0 <__assert_fail>
     144:	mov	x19, xzr
     148:	mov	x0, x19
     14c:	ldp	x20, x19, [sp, #48]
     150:	ldp	x22, x21, [sp, #32]
     154:	ldr	x23, [sp, #16]
     158:	ldp	x29, x30, [sp], #64
     15c:	ret

0000000000000160 <LLVMGetTargetFromTriple>:
     160:	sub	sp, sp, #0x90
     164:	stp	x29, x30, [sp, #80]
     168:	stp	x24, x23, [sp, #96]
     16c:	stp	x22, x21, [sp, #112]
     170:	stp	x20, x19, [sp, #128]
     174:	add	x29, sp, #0x50
     178:	add	x8, sp, #0x28
     17c:	add	x9, sp, #0x8
     180:	add	x23, x8, #0x10
     184:	add	x24, x9, #0x10
     188:	strb	wzr, [sp, #56]
     18c:	stp	x23, xzr, [sp, #40]
     190:	str	x24, [sp, #8]
     194:	cbz	x0, 294 <LLVMGetTargetFromTriple+0x134>
     198:	mov	x19, x2
     19c:	mov	x20, x1
     1a0:	mov	x21, x0
     1a4:	bl	0 <strlen>
     1a8:	mov	x22, x0
     1ac:	cmp	x0, #0x10
     1b0:	stur	x0, [x29, #-8]
     1b4:	b.cc	1dc <LLVMGetTargetFromTriple+0x7c>  // b.lo, b.ul, b.last
     1b8:	add	x0, sp, #0x8
     1bc:	sub	x1, x29, #0x8
     1c0:	mov	x2, xzr
     1c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     1c8:	ldur	x8, [x29, #-8]
     1cc:	str	x0, [sp, #8]
     1d0:	str	x8, [sp, #24]
     1d4:	cbnz	x22, 1e4 <LLVMGetTargetFromTriple+0x84>
     1d8:	b	204 <LLVMGetTargetFromTriple+0xa4>
     1dc:	mov	x0, x24
     1e0:	cbz	x22, 204 <LLVMGetTargetFromTriple+0xa4>
     1e4:	cmp	x22, #0x1
     1e8:	b.ne	1f8 <LLVMGetTargetFromTriple+0x98>  // b.any
     1ec:	ldrb	w8, [x21]
     1f0:	strb	w8, [x0]
     1f4:	b	204 <LLVMGetTargetFromTriple+0xa4>
     1f8:	mov	x1, x21
     1fc:	mov	x2, x22
     200:	bl	0 <memcpy>
     204:	ldur	x8, [x29, #-8]
     208:	ldr	x9, [sp, #8]
     20c:	add	x0, sp, #0x8
     210:	add	x1, sp, #0x28
     214:	str	x8, [sp, #16]
     218:	strb	wzr, [x9, x8]
     21c:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     220:	str	x0, [x20]
     224:	ldr	x8, [sp, #8]
     228:	cmp	x8, x24
     22c:	b.eq	23c <LLVMGetTargetFromTriple+0xdc>  // b.none
     230:	mov	x0, x8
     234:	bl	0 <_ZdlPv>
     238:	ldr	x0, [x20]
     23c:	cbz	x0, 270 <LLVMGetTargetFromTriple+0x110>
     240:	mov	w19, wzr
     244:	ldr	x0, [sp, #40]
     248:	cmp	x0, x23
     24c:	b.eq	254 <LLVMGetTargetFromTriple+0xf4>  // b.none
     250:	bl	0 <_ZdlPv>
     254:	mov	w0, w19
     258:	ldp	x20, x19, [sp, #128]
     25c:	ldp	x22, x21, [sp, #112]
     260:	ldp	x24, x23, [sp, #96]
     264:	ldp	x29, x30, [sp, #80]
     268:	add	sp, sp, #0x90
     26c:	ret
     270:	cbz	x19, 280 <LLVMGetTargetFromTriple+0x120>
     274:	ldr	x0, [sp, #40]
     278:	bl	0 <strdup>
     27c:	str	x0, [x19]
     280:	mov	w19, #0x1                   	// #1
     284:	ldr	x0, [sp, #40]
     288:	cmp	x0, x23
     28c:	b.ne	250 <LLVMGetTargetFromTriple+0xf0>  // b.any
     290:	b	254 <LLVMGetTargetFromTriple+0xf4>
     294:	adrp	x0, 0 <LLVMGetFirstTarget>
     298:	add	x0, x0, #0x0
     29c:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000002a0 <LLVMGetTargetName>:
     2a0:	ldr	x0, [x0, #16]
     2a4:	ret

00000000000002a8 <LLVMGetTargetDescription>:
     2a8:	ldr	x0, [x0, #24]
     2ac:	ret

00000000000002b0 <LLVMTargetHasJIT>:
     2b0:	ldrb	w0, [x0, #40]
     2b4:	ret

00000000000002b8 <LLVMTargetHasTargetMachine>:
     2b8:	ldr	x8, [x0, #88]
     2bc:	cmp	x8, #0x0
     2c0:	cset	w0, ne  // ne = any
     2c4:	ret

00000000000002c8 <LLVMTargetHasAsmBackend>:
     2c8:	ldr	x8, [x0, #96]
     2cc:	cmp	x8, #0x0
     2d0:	cset	w0, ne  // ne = any
     2d4:	ret

00000000000002d8 <LLVMCreateTargetMachine>:
     2d8:	sub	sp, sp, #0x190
     2dc:	stp	x29, x30, [sp, #304]
     2e0:	stp	x28, x27, [sp, #320]
     2e4:	stp	x26, x25, [sp, #336]
     2e8:	stp	x24, x23, [sp, #352]
     2ec:	stp	x22, x21, [sp, #368]
     2f0:	stp	x20, x19, [sp, #384]
     2f4:	add	x29, sp, #0x130
     2f8:	sub	w8, w5, #0x1
     2fc:	cmp	w8, #0x6
     300:	mov	x19, x3
     304:	mov	x20, x2
     308:	mov	x22, x1
     30c:	cset	w9, cc  // cc = lo, ul, last
     310:	csel	w8, w8, wzr, cc  // cc = lo, ul, last
     314:	cmp	w6, #0x6
     318:	mov	x26, x0
     31c:	stp	x9, x8, [sp, #24]
     320:	b.hi	35c <LLVMCreateTargetMachine+0x84>  // b.pmore
     324:	adrp	x9, 0 <LLVMGetFirstTarget>
     328:	mov	w8, w6
     32c:	add	x9, x9, #0x0
     330:	adr	x10, 34c <LLVMCreateTargetMachine+0x74>
     334:	ldrb	w11, [x9, x8]
     338:	add	x10, x10, x11, lsl #2
     33c:	mov	w12, wzr
     340:	mov	x27, xzr
     344:	mov	x28, xzr
     348:	br	x10
     34c:	mov	x27, xzr
     350:	mov	x28, xzr
     354:	mov	w12, #0x1                   	// #1
     358:	b	3a8 <LLVMCreateTargetMachine+0xd0>
     35c:	mov	w12, wzr
     360:	mov	x27, #0x100000000           	// #4294967296
     364:	mov	w28, #0x1                   	// #1
     368:	b	3a8 <LLVMCreateTargetMachine+0xd0>
     36c:	mov	w12, wzr
     370:	mov	x28, xzr
     374:	mov	x27, #0x100000000           	// #4294967296
     378:	b	3a8 <LLVMCreateTargetMachine+0xd0>
     37c:	mov	w12, wzr
     380:	mov	x27, #0x100000000           	// #4294967296
     384:	mov	w28, #0x2                   	// #2
     388:	b	3a8 <LLVMCreateTargetMachine+0xd0>
     38c:	mov	w12, wzr
     390:	mov	x27, #0x100000000           	// #4294967296
     394:	mov	w28, #0x3                   	// #3
     398:	b	3a8 <LLVMCreateTargetMachine+0xd0>
     39c:	mov	w12, wzr
     3a0:	mov	x27, #0x100000000           	// #4294967296
     3a4:	mov	w28, #0x4                   	// #4
     3a8:	cmp	w4, #0x4
     3ac:	mov	w8, #0x2                   	// #2
     3b0:	csel	w21, w4, w8, cc  // cc = lo, ul, last
     3b4:	adrp	x8, 0 <LLVMGetFirstTarget>
     3b8:	ldr	q0, [x8]
     3bc:	mov	w8, #0x10                  	// #16
     3c0:	strh	w8, [sp, #48]
     3c4:	adrp	x8, 0 <LLVMGetFirstTarget>
     3c8:	stur	q0, [sp, #84]
     3cc:	ldr	q0, [x8]
     3d0:	mov	w8, #0x1                   	// #1
     3d4:	strb	w8, [sp, #56]
     3d8:	str	w8, [sp, #60]
     3dc:	add	x8, sp, #0x30
     3e0:	add	x0, x8, #0x38
     3e4:	str	w12, [sp, #44]
     3e8:	str	wzr, [sp, #52]
     3ec:	strb	wzr, [sp, #64]
     3f0:	str	wzr, [sp, #100]
     3f4:	stur	q0, [sp, #68]
     3f8:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     3fc:	cbz	x22, 520 <LLVMCreateTargetMachine+0x248>
     400:	mov	x0, x22
     404:	bl	0 <strlen>
     408:	mov	x25, x0
     40c:	cbz	x20, 528 <LLVMCreateTargetMachine+0x250>
     410:	mov	x0, x20
     414:	bl	0 <strlen>
     418:	mov	x23, x0
     41c:	cbz	x19, 530 <LLVMCreateTargetMachine+0x258>
     420:	mov	x0, x19
     424:	bl	0 <strlen>
     428:	mov	x24, x0
     42c:	stp	x22, x25, [x29, #-24]
     430:	ldr	x25, [x26, #88]
     434:	cbz	x25, 540 <LLVMCreateTargetMachine+0x268>
     438:	ldp	x8, x11, [sp, #24]
     43c:	mov	w9, #0x105                 	// #261
     440:	sub	x10, x29, #0x18
     444:	sub	x0, x29, #0x50
     448:	lsl	x8, x8, #32
     44c:	sub	x1, x29, #0x68
     450:	orr	x27, x28, x27
     454:	orr	x22, x8, x11
     458:	sturh	w9, [x29, #-88]
     45c:	stp	x10, xzr, [x29, #-104]
     460:	sub	x28, x29, #0x50
     464:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     468:	ldr	w8, [sp, #44]
     46c:	sub	x1, x29, #0x50
     470:	add	x6, sp, #0x30
     474:	mov	x0, x26
     478:	mov	x2, x20
     47c:	mov	x3, x23
     480:	mov	x4, x19
     484:	mov	x5, x24
     488:	mov	x7, x22
     48c:	strb	w8, [sp, #16]
     490:	str	w21, [sp, #8]
     494:	str	x27, [sp]
     498:	blr	x25
     49c:	ldur	x8, [x29, #-80]
     4a0:	add	x9, x28, #0x10
     4a4:	mov	x19, x0
     4a8:	cmp	x8, x9
     4ac:	b.eq	4b8 <LLVMCreateTargetMachine+0x1e0>  // b.none
     4b0:	mov	x0, x8
     4b4:	bl	0 <_ZdlPv>
     4b8:	ldp	x20, x21, [sp, #176]
     4bc:	cmp	x20, x21
     4c0:	b.ne	560 <LLVMCreateTargetMachine+0x288>  // b.any
     4c4:	cbz	x20, 4d0 <LLVMCreateTargetMachine+0x1f8>
     4c8:	mov	x0, x20
     4cc:	bl	0 <_ZdlPv>
     4d0:	ldr	x0, [sp, #144]
     4d4:	add	x20, sp, #0x30
     4d8:	add	x8, x20, #0x70
     4dc:	cmp	x0, x8
     4e0:	b.eq	4e8 <LLVMCreateTargetMachine+0x210>  // b.none
     4e4:	bl	0 <_ZdlPv>
     4e8:	ldr	x0, [sp, #112]
     4ec:	add	x8, x20, #0x50
     4f0:	cmp	x0, x8
     4f4:	b.eq	4fc <LLVMCreateTargetMachine+0x224>  // b.none
     4f8:	bl	0 <_ZdlPv>
     4fc:	mov	x0, x19
     500:	ldp	x20, x19, [sp, #384]
     504:	ldp	x22, x21, [sp, #368]
     508:	ldp	x24, x23, [sp, #352]
     50c:	ldp	x26, x25, [sp, #336]
     510:	ldp	x28, x27, [sp, #320]
     514:	ldp	x29, x30, [sp, #304]
     518:	add	sp, sp, #0x190
     51c:	ret
     520:	mov	x25, xzr
     524:	cbnz	x20, 410 <LLVMCreateTargetMachine+0x138>
     528:	mov	x23, xzr
     52c:	cbnz	x19, 420 <LLVMCreateTargetMachine+0x148>
     530:	mov	x24, xzr
     534:	stp	x22, x25, [x29, #-24]
     538:	ldr	x25, [x26, #88]
     53c:	cbnz	x25, 438 <LLVMCreateTargetMachine+0x160>
     540:	mov	x19, xzr
     544:	ldp	x20, x21, [sp, #176]
     548:	cmp	x20, x21
     54c:	b.ne	560 <LLVMCreateTargetMachine+0x288>  // b.any
     550:	b	4c4 <LLVMCreateTargetMachine+0x1ec>
     554:	add	x20, x20, #0x10
     558:	cmp	x20, x21
     55c:	b.eq	574 <LLVMCreateTargetMachine+0x29c>  // b.none
     560:	ldr	x0, [x20], #16
     564:	cmp	x0, x20
     568:	b.eq	554 <LLVMCreateTargetMachine+0x27c>  // b.none
     56c:	bl	0 <_ZdlPv>
     570:	b	554 <LLVMCreateTargetMachine+0x27c>
     574:	ldr	x20, [sp, #176]
     578:	cbnz	x20, 4c8 <LLVMCreateTargetMachine+0x1f0>
     57c:	b	4d0 <LLVMCreateTargetMachine+0x1f8>

0000000000000580 <LLVMDisposeTargetMachine>:
     580:	cbz	x0, 590 <LLVMDisposeTargetMachine+0x10>
     584:	ldr	x8, [x0]
     588:	ldr	x1, [x8, #8]
     58c:	br	x1
     590:	ret

0000000000000594 <LLVMGetTargetMachineTarget>:
     594:	ldr	x0, [x0, #8]
     598:	ret

000000000000059c <LLVMGetTargetMachineTriple>:
     59c:	sub	sp, sp, #0x50
     5a0:	stp	x29, x30, [sp, #32]
     5a4:	str	x21, [sp, #48]
     5a8:	stp	x20, x19, [sp, #64]
     5ac:	add	x29, sp, #0x20
     5b0:	mov	x8, sp
     5b4:	add	x21, x8, #0x10
     5b8:	str	x21, [sp]
     5bc:	ldp	x19, x20, [x0, #448]
     5c0:	cbnz	x19, 5c8 <LLVMGetTargetMachineTriple+0x2c>
     5c4:	cbnz	x20, 668 <LLVMGetTargetMachineTriple+0xcc>
     5c8:	cmp	x20, #0x10
     5cc:	str	x20, [x29, #24]
     5d0:	b.cc	5f8 <LLVMGetTargetMachineTriple+0x5c>  // b.lo, b.ul, b.last
     5d4:	mov	x0, sp
     5d8:	add	x1, x29, #0x18
     5dc:	mov	x2, xzr
     5e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     5e4:	ldr	x8, [x29, #24]
     5e8:	str	x0, [sp]
     5ec:	str	x8, [sp, #16]
     5f0:	cbnz	x20, 600 <LLVMGetTargetMachineTriple+0x64>
     5f4:	b	620 <LLVMGetTargetMachineTriple+0x84>
     5f8:	mov	x0, x21
     5fc:	cbz	x20, 620 <LLVMGetTargetMachineTriple+0x84>
     600:	cmp	x20, #0x1
     604:	b.ne	614 <LLVMGetTargetMachineTriple+0x78>  // b.any
     608:	ldrb	w8, [x19]
     60c:	strb	w8, [x0]
     610:	b	620 <LLVMGetTargetMachineTriple+0x84>
     614:	mov	x1, x19
     618:	mov	x2, x20
     61c:	bl	0 <memcpy>
     620:	ldr	x8, [x29, #24]
     624:	ldr	x9, [sp]
     628:	str	x8, [sp, #8]
     62c:	strb	wzr, [x9, x8]
     630:	ldr	x0, [sp]
     634:	bl	0 <strdup>
     638:	ldr	x8, [sp]
     63c:	mov	x19, x0
     640:	cmp	x8, x21
     644:	b.eq	650 <LLVMGetTargetMachineTriple+0xb4>  // b.none
     648:	mov	x0, x8
     64c:	bl	0 <_ZdlPv>
     650:	mov	x0, x19
     654:	ldp	x20, x19, [sp, #64]
     658:	ldr	x21, [sp, #48]
     65c:	ldp	x29, x30, [sp, #32]
     660:	add	sp, sp, #0x50
     664:	ret
     668:	adrp	x0, 0 <LLVMGetFirstTarget>
     66c:	add	x0, x0, #0x0
     670:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000674 <LLVMGetTargetMachineCPU>:
     674:	sub	sp, sp, #0x50
     678:	stp	x29, x30, [sp, #32]
     67c:	str	x21, [sp, #48]
     680:	stp	x20, x19, [sp, #64]
     684:	add	x29, sp, #0x20
     688:	ldp	x19, x20, [x0, #504]
     68c:	mov	x8, sp
     690:	add	x21, x8, #0x10
     694:	str	x21, [sp]
     698:	cbz	x19, 6e0 <LLVMGetTargetMachineCPU+0x6c>
     69c:	cmp	x20, #0x10
     6a0:	mov	x0, x21
     6a4:	str	x20, [x29, #24]
     6a8:	b.cc	6c8 <LLVMGetTargetMachineCPU+0x54>  // b.lo, b.ul, b.last
     6ac:	mov	x0, sp
     6b0:	add	x1, x29, #0x18
     6b4:	mov	x2, xzr
     6b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     6bc:	ldr	x8, [x29, #24]
     6c0:	str	x0, [sp]
     6c4:	str	x8, [sp, #16]
     6c8:	cbz	x20, 6fc <LLVMGetTargetMachineCPU+0x88>
     6cc:	cmp	x20, #0x1
     6d0:	b.ne	6f0 <LLVMGetTargetMachineCPU+0x7c>  // b.any
     6d4:	ldrb	w8, [x19]
     6d8:	strb	w8, [x0]
     6dc:	b	6fc <LLVMGetTargetMachineCPU+0x88>
     6e0:	str	xzr, [sp, #8]
     6e4:	strb	wzr, [sp, #16]
     6e8:	mov	x0, x21
     6ec:	b	710 <LLVMGetTargetMachineCPU+0x9c>
     6f0:	mov	x1, x19
     6f4:	mov	x2, x20
     6f8:	bl	0 <memcpy>
     6fc:	ldr	x8, [x29, #24]
     700:	ldr	x9, [sp]
     704:	str	x8, [sp, #8]
     708:	strb	wzr, [x9, x8]
     70c:	ldr	x0, [sp]
     710:	bl	0 <strdup>
     714:	ldr	x8, [sp]
     718:	mov	x19, x0
     71c:	cmp	x8, x21
     720:	b.eq	72c <LLVMGetTargetMachineCPU+0xb8>  // b.none
     724:	mov	x0, x8
     728:	bl	0 <_ZdlPv>
     72c:	mov	x0, x19
     730:	ldp	x20, x19, [sp, #64]
     734:	ldr	x21, [sp, #48]
     738:	ldp	x29, x30, [sp, #32]
     73c:	add	sp, sp, #0x50
     740:	ret

0000000000000744 <LLVMGetTargetMachineFeatureString>:
     744:	sub	sp, sp, #0x50
     748:	stp	x29, x30, [sp, #32]
     74c:	str	x21, [sp, #48]
     750:	stp	x20, x19, [sp, #64]
     754:	add	x29, sp, #0x20
     758:	ldr	x19, [x0, #536]
     75c:	ldr	x20, [x0, #544]
     760:	mov	x8, sp
     764:	add	x21, x8, #0x10
     768:	str	x21, [sp]
     76c:	cbz	x19, 7b4 <LLVMGetTargetMachineFeatureString+0x70>
     770:	cmp	x20, #0x10
     774:	mov	x0, x21
     778:	str	x20, [x29, #24]
     77c:	b.cc	79c <LLVMGetTargetMachineFeatureString+0x58>  // b.lo, b.ul, b.last
     780:	mov	x0, sp
     784:	add	x1, x29, #0x18
     788:	mov	x2, xzr
     78c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     790:	ldr	x8, [x29, #24]
     794:	str	x0, [sp]
     798:	str	x8, [sp, #16]
     79c:	cbz	x20, 7d0 <LLVMGetTargetMachineFeatureString+0x8c>
     7a0:	cmp	x20, #0x1
     7a4:	b.ne	7c4 <LLVMGetTargetMachineFeatureString+0x80>  // b.any
     7a8:	ldrb	w8, [x19]
     7ac:	strb	w8, [x0]
     7b0:	b	7d0 <LLVMGetTargetMachineFeatureString+0x8c>
     7b4:	str	xzr, [sp, #8]
     7b8:	strb	wzr, [sp, #16]
     7bc:	mov	x0, x21
     7c0:	b	7e4 <LLVMGetTargetMachineFeatureString+0xa0>
     7c4:	mov	x1, x19
     7c8:	mov	x2, x20
     7cc:	bl	0 <memcpy>
     7d0:	ldr	x8, [x29, #24]
     7d4:	ldr	x9, [sp]
     7d8:	str	x8, [sp, #8]
     7dc:	strb	wzr, [x9, x8]
     7e0:	ldr	x0, [sp]
     7e4:	bl	0 <strdup>
     7e8:	ldr	x8, [sp]
     7ec:	mov	x19, x0
     7f0:	cmp	x8, x21
     7f4:	b.eq	800 <LLVMGetTargetMachineFeatureString+0xbc>  // b.none
     7f8:	mov	x0, x8
     7fc:	bl	0 <_ZdlPv>
     800:	mov	x0, x19
     804:	ldp	x20, x19, [sp, #64]
     808:	ldr	x21, [sp, #48]
     80c:	ldp	x29, x30, [sp, #32]
     810:	add	sp, sp, #0x50
     814:	ret

0000000000000818 <LLVMSetTargetMachineAsmVerbosity>:
     818:	ldrh	w8, [x0, #832]
     81c:	cmp	w1, #0x0
     820:	cset	w9, ne  // ne = any
     824:	and	w8, w8, #0xfffffbff
     828:	orr	w8, w8, w9, lsl #10
     82c:	strh	w8, [x0, #832]
     830:	ret

0000000000000834 <LLVMCreateTargetDataLayout>:
     834:	stp	x29, x30, [sp, #-80]!
     838:	str	x25, [sp, #16]
     83c:	stp	x24, x23, [sp, #32]
     840:	stp	x22, x21, [sp, #48]
     844:	stp	x20, x19, [sp, #64]
     848:	mov	x29, sp
     84c:	mov	x19, x0
     850:	mov	w0, #0x1b0                 	// #432
     854:	bl	0 <_Znwm>
     858:	adrp	x9, 0 <LLVMGetFirstTarget>
     85c:	adrp	x11, 0 <LLVMGetFirstTarget>
     860:	ldr	d0, [x9]
     864:	ldr	d1, [x11]
     868:	add	x8, x0, #0x30
     86c:	mov	x21, x0
     870:	add	x10, x0, #0x48
     874:	mov	x22, x0
     878:	mov	x9, x0
     87c:	strh	wzr, [x0, #8]
     880:	strh	wzr, [x0, #16]
     884:	str	x8, [x21, #32]!
     888:	mov	x23, x0
     88c:	add	x8, x0, #0xf8
     890:	str	d0, [x0, #40]
     894:	str	x10, [x22, #56]!
     898:	mov	x24, x0
     89c:	str	d1, [x0, #64]
     8a0:	strb	wzr, [x9, #216]!
     8a4:	str	x9, [x23, #200]!
     8a8:	str	xzr, [x0, #208]
     8ac:	str	x8, [x24, #232]!
     8b0:	add	x8, x0, #0x190
     8b4:	mov	x20, x0
     8b8:	add	x25, x0, #0x180
     8bc:	str	d0, [x0, #240]
     8c0:	stp	xzr, x8, [x0, #376]
     8c4:	str	d0, [x0, #392]
     8c8:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     8cc:	add	x1, x19, #0xd8
     8d0:	mov	x0, x23
     8d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     8d8:	ldrb	w8, [x19, #16]
     8dc:	add	x1, x19, #0x30
     8e0:	mov	x0, x21
     8e4:	strb	w8, [x20]
     8e8:	ldr	w8, [x19, #20]
     8ec:	str	w8, [x20, #4]
     8f0:	ldrh	w8, [x19, #24]
     8f4:	strh	w8, [x20, #8]
     8f8:	ldrh	w8, [x19, #32]
     8fc:	strh	w8, [x20, #16]
     900:	ldr	w8, [x19, #28]
     904:	str	w8, [x20, #12]
     908:	ldur	x8, [x19, #36]
     90c:	stur	x8, [x20, #20]
     910:	bl	0 <LLVMGetFirstTarget>
     914:	add	x1, x19, #0x48
     918:	mov	x0, x22
     91c:	bl	0 <LLVMGetFirstTarget>
     920:	add	x1, x19, #0xf8
     924:	mov	x0, x24
     928:	bl	0 <LLVMGetFirstTarget>
     92c:	add	x1, x19, #0x190
     930:	mov	x0, x25
     934:	bl	0 <LLVMGetFirstTarget>
     938:	mov	x0, x20
     93c:	ldp	x20, x19, [sp, #64]
     940:	ldp	x22, x21, [sp, #48]
     944:	ldp	x24, x23, [sp, #32]
     948:	ldr	x25, [sp, #16]
     94c:	ldp	x29, x30, [sp], #80
     950:	ret

0000000000000954 <LLVMTargetMachineEmitToFile>:
     954:	sub	sp, sp, #0xc0
     958:	stp	x29, x30, [sp, #128]
     95c:	str	x23, [sp, #144]
     960:	stp	x22, x21, [sp, #160]
     964:	stp	x20, x19, [sp, #176]
     968:	add	x29, sp, #0x80
     96c:	mov	x19, x4
     970:	mov	w20, w3
     974:	mov	x23, x2
     978:	mov	x21, x1
     97c:	mov	x22, x0
     980:	stur	wzr, [x29, #-16]
     984:	bl	0 <_ZNSt3_V215system_categoryEv>
     988:	stur	x0, [x29, #-8]
     98c:	cbz	x23, 9a0 <LLVMTargetMachineEmitToFile+0x4c>
     990:	mov	x0, x23
     994:	bl	0 <strlen>
     998:	mov	x2, x0
     99c:	b	9a4 <LLVMTargetMachineEmitToFile+0x50>
     9a0:	mov	x2, xzr
     9a4:	add	x0, sp, #0x28
     9a8:	sub	x3, x29, #0x10
     9ac:	mov	x1, x23
     9b0:	mov	w4, wzr
     9b4:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     9b8:	ldur	w1, [x29, #-16]
     9bc:	cbz	w1, a00 <LLVMTargetMachineEmitToFile+0xac>
     9c0:	ldur	x0, [x29, #-8]
     9c4:	add	x20, sp, #0x8
     9c8:	ldr	x8, [x0]
     9cc:	ldr	x9, [x8, #32]
     9d0:	add	x8, sp, #0x8
     9d4:	blr	x9
     9d8:	ldr	x0, [sp, #8]
     9dc:	bl	0 <strdup>
     9e0:	str	x0, [x19]
     9e4:	ldr	x0, [sp, #8]
     9e8:	add	x8, x20, #0x10
     9ec:	cmp	x0, x8
     9f0:	b.eq	9f8 <LLVMTargetMachineEmitToFile+0xa4>  // b.none
     9f4:	bl	0 <_ZdlPv>
     9f8:	mov	w19, #0x1                   	// #1
     9fc:	b	a3c <LLVMTargetMachineEmitToFile+0xe8>
     a00:	add	x2, sp, #0x28
     a04:	mov	x0, x22
     a08:	mov	x1, x21
     a0c:	mov	w3, w20
     a10:	mov	x4, x19
     a14:	bl	a60 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
     a18:	ldr	x8, [sp, #64]
     a1c:	ldr	x9, [sp, #48]
     a20:	mov	w19, w0
     a24:	cmp	x8, x9
     a28:	b.eq	a34 <LLVMTargetMachineEmitToFile+0xe0>  // b.none
     a2c:	add	x0, sp, #0x28
     a30:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     a34:	cmp	w19, #0x0
     a38:	cset	w19, ne  // ne = any
     a3c:	add	x0, sp, #0x28
     a40:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     a44:	mov	w0, w19
     a48:	ldp	x20, x19, [sp, #176]
     a4c:	ldp	x22, x21, [sp, #160]
     a50:	ldr	x23, [sp, #144]
     a54:	ldp	x29, x30, [sp, #128]
     a58:	add	sp, sp, #0xc0
     a5c:	ret

0000000000000a60 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>:
     a60:	stp	x29, x30, [sp, #-96]!
     a64:	stp	x28, x27, [sp, #16]
     a68:	stp	x26, x25, [sp, #32]
     a6c:	stp	x24, x23, [sp, #48]
     a70:	stp	x22, x21, [sp, #64]
     a74:	stp	x20, x19, [sp, #80]
     a78:	mov	x29, sp
     a7c:	sub	sp, sp, #0x1f0
     a80:	mov	x22, x0
     a84:	sub	x0, x29, #0x18
     a88:	str	x4, [sp]
     a8c:	mov	w19, w3
     a90:	mov	x20, x2
     a94:	mov	x21, x1
     a98:	bl	0 <_ZN4llvm6legacy11PassManagerC1Ev>
     a9c:	adrp	x10, 0 <LLVMGetFirstTarget>
     aa0:	adrp	x11, 0 <LLVMGetFirstTarget>
     aa4:	sub	x8, x29, #0x38
     aa8:	add	x9, sp, #0x8
     aac:	ldr	d0, [x10]
     ab0:	ldr	d1, [x11]
     ab4:	add	x23, x8, #0x10
     ab8:	add	x8, x9, #0x30
     abc:	str	x8, [sp, #40]
     ac0:	add	x8, x9, #0xf8
     ac4:	add	x10, x9, #0x48
     ac8:	add	x11, x9, #0xd8
     acc:	str	x8, [sp, #240]
     ad0:	add	x8, x9, #0x190
     ad4:	add	x0, sp, #0x8
     ad8:	sturb	wzr, [x29, #-40]
     adc:	strh	wzr, [sp, #16]
     ae0:	strh	wzr, [sp, #24]
     ae4:	strb	wzr, [sp, #224]
     ae8:	add	x24, x9, #0x20
     aec:	add	x25, x9, #0x38
     af0:	add	x26, x9, #0xc8
     af4:	add	x27, x9, #0xe8
     af8:	str	x10, [sp, #64]
     afc:	add	x28, x9, #0x180
     b00:	stp	x23, xzr, [x29, #-56]
     b04:	stp	x11, xzr, [sp, #208]
     b08:	stp	xzr, x8, [sp, #384]
     b0c:	str	d0, [sp, #48]
     b10:	str	d1, [sp, #72]
     b14:	str	d0, [sp, #248]
     b18:	str	d0, [sp, #400]
     b1c:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     b20:	add	x1, x22, #0xd8
     b24:	mov	x0, x26
     b28:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     b2c:	ldrb	w8, [x22, #16]
     b30:	add	x1, x22, #0x30
     b34:	mov	x0, x24
     b38:	strb	w8, [sp, #8]
     b3c:	ldr	w8, [x22, #20]
     b40:	str	w8, [sp, #12]
     b44:	ldrh	w8, [x22, #24]
     b48:	strh	w8, [sp, #16]
     b4c:	ldrh	w8, [x22, #32]
     b50:	strh	w8, [sp, #24]
     b54:	ldr	w8, [x22, #28]
     b58:	str	w8, [sp, #20]
     b5c:	ldur	x8, [x22, #36]
     b60:	stur	x8, [sp, #28]
     b64:	bl	0 <LLVMGetFirstTarget>
     b68:	add	x1, x22, #0x48
     b6c:	mov	x0, x25
     b70:	bl	0 <LLVMGetFirstTarget>
     b74:	add	x1, x22, #0xf8
     b78:	mov	x0, x27
     b7c:	bl	0 <LLVMGetFirstTarget>
     b80:	add	x1, x22, #0x190
     b84:	mov	x0, x28
     b88:	bl	0 <LLVMGetFirstTarget>
     b8c:	add	x1, sp, #0x8
     b90:	mov	x0, x21
     b94:	bl	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
     b98:	add	x0, sp, #0x8
     b9c:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
     ba0:	ldr	x8, [x22]
     ba4:	cmp	w19, #0x0
     ba8:	cset	w4, ne  // ne = any
     bac:	sub	x1, x29, #0x18
     bb0:	ldr	x8, [x8, #80]
     bb4:	mov	w5, #0x1                   	// #1
     bb8:	mov	x0, x22
     bbc:	mov	x2, x20
     bc0:	mov	x3, xzr
     bc4:	mov	x6, xzr
     bc8:	blr	x8
     bcc:	tbz	w0, #0, c10 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1b0>
     bd0:	ldur	x2, [x29, #-48]
     bd4:	adrp	x3, 0 <LLVMGetFirstTarget>
     bd8:	add	x3, x3, #0x0
     bdc:	sub	x0, x29, #0x38
     be0:	mov	w4, #0x2c                  	// #44
     be4:	mov	x1, xzr
     be8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     bec:	ldur	x0, [x29, #-56]
     bf0:	bl	0 <strdup>
     bf4:	ldr	x8, [sp]
     bf8:	mov	w19, #0x1                   	// #1
     bfc:	str	x0, [x8]
     c00:	ldur	x0, [x29, #-56]
     c04:	cmp	x0, x23
     c08:	b.ne	c44 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1e4>  // b.any
     c0c:	b	c48 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1e8>
     c10:	sub	x0, x29, #0x18
     c14:	mov	x1, x21
     c18:	bl	0 <_ZN4llvm6legacy11PassManager3runERNS_6ModuleE>
     c1c:	ldr	x8, [x20, #24]
     c20:	ldr	x9, [x20, #8]
     c24:	cmp	x8, x9
     c28:	b.eq	c34 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1d4>  // b.none
     c2c:	mov	x0, x20
     c30:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     c34:	mov	w19, wzr
     c38:	ldur	x0, [x29, #-56]
     c3c:	cmp	x0, x23
     c40:	b.eq	c48 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1e8>  // b.none
     c44:	bl	0 <_ZdlPv>
     c48:	sub	x0, x29, #0x18
     c4c:	bl	0 <_ZN4llvm6legacy11PassManagerD1Ev>
     c50:	mov	w0, w19
     c54:	add	sp, sp, #0x1f0
     c58:	ldp	x20, x19, [sp, #80]
     c5c:	ldp	x22, x21, [sp, #64]
     c60:	ldp	x24, x23, [sp, #48]
     c64:	ldp	x26, x25, [sp, #32]
     c68:	ldp	x28, x27, [sp, #16]
     c6c:	ldp	x29, x30, [sp], #96
     c70:	ret

0000000000000c74 <LLVMTargetMachineEmitToMemoryBuffer>:
     c74:	sub	sp, sp, #0x80
     c78:	stp	x29, x30, [sp, #64]
     c7c:	stp	x24, x23, [sp, #80]
     c80:	stp	x22, x21, [sp, #96]
     c84:	stp	x20, x19, [sp, #112]
     c88:	add	x29, sp, #0x40
     c8c:	stur	xzr, [x29, #-8]
     c90:	stp	xzr, xzr, [sp, #16]
     c94:	adrp	x10, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     c98:	ldr	x10, [x10]
     c9c:	sub	x8, x29, #0x10
     ca0:	mov	w9, #0x1                   	// #1
     ca4:	mov	x19, x3
     ca8:	mov	w21, w2
     cac:	mov	x22, x1
     cb0:	mov	x23, x0
     cb4:	str	w9, [sp, #32]
     cb8:	add	x24, x8, #0x10
     cbc:	add	x9, x10, #0x10
     cc0:	mov	x0, sp
     cc4:	mov	x1, xzr
     cc8:	mov	x2, xzr
     ccc:	mov	w3, wzr
     cd0:	mov	x20, x4
     cd4:	stur	x24, [x29, #-16]
     cd8:	stp	x9, xzr, [sp]
     cdc:	str	x8, [sp, #40]
     ce0:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     ce4:	mov	x2, sp
     ce8:	mov	x0, x23
     cec:	mov	x1, x22
     cf0:	mov	w3, w21
     cf4:	mov	x4, x19
     cf8:	bl	a60 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
     cfc:	ldr	x9, [sp, #40]
     d00:	adrp	x2, 0 <LLVMGetFirstTarget>
     d04:	cmp	w0, #0x0
     d08:	add	x2, x2, #0x0
     d0c:	ldr	x8, [x9]
     d10:	ldr	w1, [x9, #8]
     d14:	cset	w19, ne  // ne = any
     d18:	mov	x0, x8
     d1c:	bl	0 <LLVMCreateMemoryBufferWithMemoryRangeCopy>
     d20:	str	x0, [x20]
     d24:	mov	x0, sp
     d28:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     d2c:	ldur	x0, [x29, #-16]
     d30:	cmp	x0, x24
     d34:	b.eq	d3c <LLVMTargetMachineEmitToMemoryBuffer+0xc8>  // b.none
     d38:	bl	0 <free>
     d3c:	mov	w0, w19
     d40:	ldp	x20, x19, [sp, #112]
     d44:	ldp	x22, x21, [sp, #96]
     d48:	ldp	x24, x23, [sp, #80]
     d4c:	ldp	x29, x30, [sp, #64]
     d50:	add	sp, sp, #0x80
     d54:	ret

0000000000000d58 <LLVMGetDefaultTargetTriple>:
     d58:	sub	sp, sp, #0x40
     d5c:	stp	x29, x30, [sp, #32]
     d60:	str	x19, [sp, #48]
     d64:	add	x29, sp, #0x20
     d68:	mov	x8, sp
     d6c:	mov	x19, sp
     d70:	bl	0 <_ZN4llvm3sys22getDefaultTargetTripleB5cxx11Ev>
     d74:	ldr	x0, [sp]
     d78:	bl	0 <strdup>
     d7c:	ldr	x8, [sp]
     d80:	add	x9, x19, #0x10
     d84:	mov	x19, x0
     d88:	cmp	x8, x9
     d8c:	b.eq	d98 <LLVMGetDefaultTargetTriple+0x40>  // b.none
     d90:	mov	x0, x8
     d94:	bl	0 <_ZdlPv>
     d98:	mov	x0, x19
     d9c:	ldr	x19, [sp, #48]
     da0:	ldp	x29, x30, [sp, #32]
     da4:	add	sp, sp, #0x40
     da8:	ret

0000000000000dac <LLVMNormalizeTargetTriple>:
     dac:	sub	sp, sp, #0x40
     db0:	stp	x29, x30, [sp, #32]
     db4:	stp	x20, x19, [sp, #48]
     db8:	add	x29, sp, #0x20
     dbc:	mov	x19, x0
     dc0:	cbz	x0, dd4 <LLVMNormalizeTargetTriple+0x28>
     dc4:	mov	x0, x19
     dc8:	bl	0 <strlen>
     dcc:	mov	x1, x0
     dd0:	b	dd8 <LLVMNormalizeTargetTriple+0x2c>
     dd4:	mov	x1, xzr
     dd8:	mov	x8, sp
     ddc:	mov	x0, x19
     de0:	mov	x20, sp
     de4:	bl	0 <_ZN4llvm6Triple9normalizeB5cxx11ENS_9StringRefE>
     de8:	ldr	x0, [sp]
     dec:	bl	0 <strdup>
     df0:	ldr	x8, [sp]
     df4:	add	x9, x20, #0x10
     df8:	mov	x19, x0
     dfc:	cmp	x8, x9
     e00:	b.eq	e0c <LLVMNormalizeTargetTriple+0x60>  // b.none
     e04:	mov	x0, x8
     e08:	bl	0 <_ZdlPv>
     e0c:	mov	x0, x19
     e10:	ldp	x20, x19, [sp, #48]
     e14:	ldp	x29, x30, [sp, #32]
     e18:	add	sp, sp, #0x40
     e1c:	ret

0000000000000e20 <LLVMGetHostCPUName>:
     e20:	stp	x29, x30, [sp, #-16]!
     e24:	mov	x29, sp
     e28:	bl	0 <_ZN4llvm3sys14getHostCPUNameEv>
     e2c:	ldp	x29, x30, [sp], #16
     e30:	b	0 <strdup>

0000000000000e34 <LLVMGetHostCPUFeatures>:
     e34:	sub	sp, sp, #0x90
     e38:	stp	x29, x30, [sp, #96]
     e3c:	str	x21, [sp, #112]
     e40:	stp	x20, x19, [sp, #128]
     e44:	add	x29, sp, #0x60
     e48:	adrp	x1, 0 <LLVMGetFirstTarget>
     e4c:	add	x1, x1, #0x0
     e50:	sub	x0, x29, #0x18
     e54:	mov	x2, xzr
     e58:	bl	0 <_ZN4llvm17SubtargetFeaturesC1ENS_9StringRefE>
     e5c:	mov	x8, #0x1000000000          	// #68719476736
     e60:	add	x0, sp, #0x28
     e64:	stp	xzr, xzr, [sp, #40]
     e68:	str	x8, [sp, #56]
     e6c:	bl	0 <_ZN4llvm3sys18getHostCPUFeaturesERNS_9StringMapIbNS_15MallocAllocatorEEE>
     e70:	tbz	w0, #0, eec <LLVMGetHostCPUFeatures+0xb8>
     e74:	ldr	w8, [sp, #48]
     e78:	ldr	x9, [sp, #40]
     e7c:	cbz	w8, ea8 <LLVMGetHostCPUFeatures+0x74>
     e80:	add	x10, x9, #0x8
     e84:	mov	x19, x9
     e88:	b	e94 <LLVMGetHostCPUFeatures+0x60>
     e8c:	mov	x19, x10
     e90:	add	x10, x10, #0x8
     e94:	ldur	x11, [x10, #-8]
     e98:	cbz	x11, e8c <LLVMGetHostCPUFeatures+0x58>
     e9c:	cmn	x11, #0x8
     ea0:	b.eq	e8c <LLVMGetHostCPUFeatures+0x58>  // b.none
     ea4:	b	eac <LLVMGetHostCPUFeatures+0x78>
     ea8:	mov	x19, x9
     eac:	add	x20, x9, x8, lsl #3
     eb0:	cmp	x20, x19
     eb4:	b.eq	eec <LLVMGetHostCPUFeatures+0xb8>  // b.none
     eb8:	ldr	x8, [x19], #8
     ebc:	sub	x0, x29, #0x18
     ec0:	ldr	x2, [x8]
     ec4:	ldrb	w3, [x8, #8]
     ec8:	add	x1, x8, #0x10
     ecc:	bl	0 <_ZN4llvm17SubtargetFeatures10AddFeatureENS_9StringRefEb>
     ed0:	b	ed8 <LLVMGetHostCPUFeatures+0xa4>
     ed4:	add	x19, x19, #0x8
     ed8:	ldr	x8, [x19]
     edc:	cbz	x8, ed4 <LLVMGetHostCPUFeatures+0xa0>
     ee0:	cmn	x8, #0x8
     ee4:	b.eq	ed4 <LLVMGetHostCPUFeatures+0xa0>  // b.none
     ee8:	b	eb0 <LLVMGetHostCPUFeatures+0x7c>
     eec:	add	x8, sp, #0x8
     ef0:	sub	x0, x29, #0x18
     ef4:	add	x19, sp, #0x8
     ef8:	bl	0 <_ZNK4llvm17SubtargetFeatures9getStringB5cxx11Ev>
     efc:	ldr	x0, [sp, #8]
     f00:	bl	0 <strdup>
     f04:	ldr	x8, [sp, #8]
     f08:	add	x9, x19, #0x10
     f0c:	mov	x19, x0
     f10:	cmp	x8, x9
     f14:	b.eq	f20 <LLVMGetHostCPUFeatures+0xec>  // b.none
     f18:	mov	x0, x8
     f1c:	bl	0 <_ZdlPv>
     f20:	ldr	w8, [sp, #52]
     f24:	cbz	w8, f64 <LLVMGetHostCPUFeatures+0x130>
     f28:	ldr	w8, [sp, #48]
     f2c:	cbz	w8, f64 <LLVMGetHostCPUFeatures+0x130>
     f30:	mov	x20, xzr
     f34:	lsl	x21, x8, #3
     f38:	b	f48 <LLVMGetHostCPUFeatures+0x114>
     f3c:	add	x20, x20, #0x8
     f40:	cmp	x21, x20
     f44:	b.eq	f64 <LLVMGetHostCPUFeatures+0x130>  // b.none
     f48:	ldr	x8, [sp, #40]
     f4c:	ldr	x0, [x8, x20]
     f50:	cmn	x0, #0x8
     f54:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     f58:	b.eq	f3c <LLVMGetHostCPUFeatures+0x108>  // b.none
     f5c:	bl	0 <free>
     f60:	b	f3c <LLVMGetHostCPUFeatures+0x108>
     f64:	ldr	x0, [sp, #40]
     f68:	bl	0 <free>
     f6c:	ldp	x20, x21, [x29, #-24]
     f70:	cmp	x20, x21
     f74:	b.ne	fa8 <LLVMGetHostCPUFeatures+0x174>  // b.any
     f78:	cbz	x20, f84 <LLVMGetHostCPUFeatures+0x150>
     f7c:	mov	x0, x20
     f80:	bl	0 <_ZdlPv>
     f84:	mov	x0, x19
     f88:	ldp	x20, x19, [sp, #128]
     f8c:	ldr	x21, [sp, #112]
     f90:	ldp	x29, x30, [sp, #96]
     f94:	add	sp, sp, #0x90
     f98:	ret
     f9c:	add	x20, x20, #0x10
     fa0:	cmp	x20, x21
     fa4:	b.eq	fbc <LLVMGetHostCPUFeatures+0x188>  // b.none
     fa8:	ldr	x0, [x20], #16
     fac:	cmp	x0, x20
     fb0:	b.eq	f9c <LLVMGetHostCPUFeatures+0x168>  // b.none
     fb4:	bl	0 <_ZdlPv>
     fb8:	b	f9c <LLVMGetHostCPUFeatures+0x168>
     fbc:	ldur	x20, [x29, #-24]
     fc0:	cbnz	x20, f7c <LLVMGetHostCPUFeatures+0x148>
     fc4:	b	f84 <LLVMGetHostCPUFeatures+0x150>

0000000000000fc8 <LLVMAddAnalysisPasses>:
     fc8:	sub	sp, sp, #0x40
     fcc:	stp	x29, x30, [sp, #32]
     fd0:	str	x19, [sp, #48]
     fd4:	add	x29, sp, #0x20
     fd8:	mov	x8, sp
     fdc:	mov	x19, x1
     fe0:	bl	0 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>
     fe4:	mov	x0, sp
     fe8:	bl	0 <_ZN4llvm36createTargetTransformInfoWrapperPassENS_16TargetIRAnalysisE>
     fec:	ldr	x8, [x19]
     ff0:	mov	x1, x0
     ff4:	mov	x0, x19
     ff8:	ldr	x8, [x8, #16]
     ffc:	blr	x8
    1000:	ldr	x8, [sp, #16]
    1004:	cbz	x8, 1018 <LLVMAddAnalysisPasses+0x50>
    1008:	mov	x0, sp
    100c:	mov	x1, sp
    1010:	mov	w2, #0x3                   	// #3
    1014:	blr	x8
    1018:	ldr	x19, [sp, #48]
    101c:	ldp	x29, x30, [sp, #32]
    1020:	add	sp, sp, #0x40
    1024:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIhEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x1                   	// #1
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	mov	x2, x20
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	mov	x2, x22
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22
  ac:	add	x8, x9, x8
  b0:	add	x0, x10, x22
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	lsl	x2, x20, #3
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	lsl	x2, x22, #3
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22, lsl #3
  ac:	add	x8, x9, x8, lsl #3
  b0:	add	x0, x10, x22, lsl #3
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x10                  	// #16
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	lsl	x2, x20, #4
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	lsl	x2, x22, #4
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22, lsl #4
  ac:	add	x8, x9, x8, lsl #4
  b0:	add	x0, x10, x22, lsl #4
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIjEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x4                   	// #4
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	lsl	x2, x20, #2
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	lsl	x2, x22, #2
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22, lsl #2
  ac:	add	x8, x9, x8, lsl #2
  b0:	add	x0, x10, x22, lsl #2
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>
