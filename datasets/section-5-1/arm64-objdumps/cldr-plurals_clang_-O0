
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cldr-plurals_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401230 <_init>:
  401230:	stp	x29, x30, [sp, #-16]!
  401234:	mov	x29, sp
  401238:	bl	4015d0 <call_weak_fn>
  40123c:	ldp	x29, x30, [sp], #16
  401240:	ret

Disassembly of section .plt:

0000000000401250 <.plt>:
  401250:	stp	x16, x30, [sp, #-16]!
  401254:	adrp	x16, 416000 <__FRAME_END__+0xfd84>
  401258:	ldr	x17, [x16, #4088]
  40125c:	add	x16, x16, #0xff8
  401260:	br	x17
  401264:	nop
  401268:	nop
  40126c:	nop

0000000000401270 <memcpy@plt>:
  401270:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401274:	ldr	x17, [x16]
  401278:	add	x16, x16, #0x0
  40127c:	br	x17

0000000000401280 <strlen@plt>:
  401280:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401284:	ldr	x17, [x16, #8]
  401288:	add	x16, x16, #0x8
  40128c:	br	x17

0000000000401290 <exit@plt>:
  401290:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401294:	ldr	x17, [x16, #16]
  401298:	add	x16, x16, #0x10
  40129c:	br	x17

00000000004012a0 <error@plt>:
  4012a0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4012a4:	ldr	x17, [x16, #24]
  4012a8:	add	x16, x16, #0x18
  4012ac:	br	x17

00000000004012b0 <set_program_name@plt>:
  4012b0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4012b4:	ldr	x17, [x16, #32]
  4012b8:	add	x16, x16, #0x20
  4012bc:	br	x17

00000000004012c0 <xmlHasProp@plt>:
  4012c0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4012c4:	ldr	x17, [x16, #40]
  4012c8:	add	x16, x16, #0x28
  4012cc:	br	x17

00000000004012d0 <sprintf@plt>:
  4012d0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4012d4:	ldr	x17, [x16, #48]
  4012d8:	add	x16, x16, #0x30
  4012dc:	br	x17

00000000004012e0 <xmlFreeDoc@plt>:
  4012e0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4012e4:	ldr	x17, [x16, #56]
  4012e8:	add	x16, x16, #0x38
  4012ec:	br	x17

00000000004012f0 <__cxa_atexit@plt>:
  4012f0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4012f4:	ldr	x17, [x16, #64]
  4012f8:	add	x16, x16, #0x40
  4012fc:	br	x17

0000000000401300 <fputc@plt>:
  401300:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401304:	ldr	x17, [x16, #72]
  401308:	add	x16, x16, #0x48
  40130c:	br	x17

0000000000401310 <fileno@plt>:
  401310:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401314:	ldr	x17, [x16, #80]
  401318:	add	x16, x16, #0x50
  40131c:	br	x17

0000000000401320 <fclose@plt>:
  401320:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401324:	ldr	x17, [x16, #88]
  401328:	add	x16, x16, #0x58
  40132c:	br	x17

0000000000401330 <fopen@plt>:
  401330:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401334:	ldr	x17, [x16, #96]
  401338:	add	x16, x16, #0x60
  40133c:	br	x17

0000000000401340 <malloc@plt>:
  401340:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401344:	ldr	x17, [x16, #104]
  401348:	add	x16, x16, #0x68
  40134c:	br	x17

0000000000401350 <xrealloc@plt>:
  401350:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401354:	ldr	x17, [x16, #112]
  401358:	add	x16, x16, #0x70
  40135c:	br	x17

0000000000401360 <xmlGetProp@plt>:
  401360:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401364:	ldr	x17, [x16, #120]
  401368:	add	x16, x16, #0x78
  40136c:	br	x17

0000000000401370 <xmlCheckVersion@plt>:
  401370:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401374:	ldr	x17, [x16, #128]
  401378:	add	x16, x16, #0x80
  40137c:	br	x17

0000000000401380 <strncmp@plt>:
  401380:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401384:	ldr	x17, [x16, #136]
  401388:	add	x16, x16, #0x88
  40138c:	br	x17

0000000000401390 <bindtextdomain@plt>:
  401390:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401394:	ldr	x17, [x16, #144]
  401398:	add	x16, x16, #0x90
  40139c:	br	x17

00000000004013a0 <__libc_start_main@plt>:
  4013a0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013a4:	ldr	x17, [x16, #152]
  4013a8:	add	x16, x16, #0x98
  4013ac:	br	x17

00000000004013b0 <memset@plt>:
  4013b0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013b4:	ldr	x17, [x16, #160]
  4013b8:	add	x16, x16, #0xa0
  4013bc:	br	x17

00000000004013c0 <xmalloc@plt>:
  4013c0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013c4:	ldr	x17, [x16, #168]
  4013c8:	add	x16, x16, #0xa8
  4013cc:	br	x17

00000000004013d0 <xstrdup@plt>:
  4013d0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013d4:	ldr	x17, [x16, #176]
  4013d8:	add	x16, x16, #0xb0
  4013dc:	br	x17

00000000004013e0 <xmlStrlen@plt>:
  4013e0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013e4:	ldr	x17, [x16, #184]
  4013e8:	add	x16, x16, #0xb8
  4013ec:	br	x17

00000000004013f0 <close_stdout@plt>:
  4013f0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013f4:	ldr	x17, [x16, #192]
  4013f8:	add	x16, x16, #0xc0
  4013fc:	br	x17

0000000000401400 <xmlNodeGetContent@plt>:
  401400:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401404:	ldr	x17, [x16, #200]
  401408:	add	x16, x16, #0xc8
  40140c:	br	x17

0000000000401410 <xmlReadFd@plt>:
  401410:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401414:	ldr	x17, [x16, #208]
  401418:	add	x16, x16, #0xd0
  40141c:	br	x17

0000000000401420 <strrchr@plt>:
  401420:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401424:	ldr	x17, [x16, #216]
  401428:	add	x16, x16, #0xd8
  40142c:	br	x17

0000000000401430 <__gmon_start__@plt>:
  401430:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401434:	ldr	x17, [x16, #224]
  401438:	add	x16, x16, #0xe0
  40143c:	br	x17

0000000000401440 <abort@plt>:
  401440:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401444:	ldr	x17, [x16, #232]
  401448:	add	x16, x16, #0xe8
  40144c:	br	x17

0000000000401450 <textdomain@plt>:
  401450:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401454:	ldr	x17, [x16, #240]
  401458:	add	x16, x16, #0xf0
  40145c:	br	x17

0000000000401460 <getopt_long@plt>:
  401460:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401464:	ldr	x17, [x16, #248]
  401468:	add	x16, x16, #0xf8
  40146c:	br	x17

0000000000401470 <strcmp@plt>:
  401470:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401474:	ldr	x17, [x16, #256]
  401478:	add	x16, x16, #0x100
  40147c:	br	x17

0000000000401480 <basename@plt>:
  401480:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401484:	ldr	x17, [x16, #264]
  401488:	add	x16, x16, #0x108
  40148c:	br	x17

0000000000401490 <getline@plt>:
  401490:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401494:	ldr	x17, [x16, #272]
  401498:	add	x16, x16, #0x110
  40149c:	br	x17

00000000004014a0 <proper_name@plt>:
  4014a0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014a4:	ldr	x17, [x16, #280]
  4014a8:	add	x16, x16, #0x118
  4014ac:	br	x17

00000000004014b0 <dgettext@plt>:
  4014b0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014b4:	ldr	x17, [x16, #288]
  4014b8:	add	x16, x16, #0x120
  4014bc:	br	x17

00000000004014c0 <free@plt>:
  4014c0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014c4:	ldr	x17, [x16, #296]
  4014c8:	add	x16, x16, #0x128
  4014cc:	br	x17

00000000004014d0 <u8_mbtouc@plt>:
  4014d0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014d4:	ldr	x17, [x16, #304]
  4014d8:	add	x16, x16, #0x130
  4014dc:	br	x17

00000000004014e0 <xmlGetLineNo@plt>:
  4014e0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014e4:	ldr	x17, [x16, #312]
  4014e8:	add	x16, x16, #0x138
  4014ec:	br	x17

00000000004014f0 <c_isspace@plt>:
  4014f0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014f4:	ldr	x17, [x16, #320]
  4014f8:	add	x16, x16, #0x140
  4014fc:	br	x17

0000000000401500 <xmlStrncmp@plt>:
  401500:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401504:	ldr	x17, [x16, #328]
  401508:	add	x16, x16, #0x148
  40150c:	br	x17

0000000000401510 <printf@plt>:
  401510:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401514:	ldr	x17, [x16, #336]
  401518:	add	x16, x16, #0x150
  40151c:	br	x17

0000000000401520 <xmlStrEqual@plt>:
  401520:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401524:	ldr	x17, [x16, #344]
  401528:	add	x16, x16, #0x158
  40152c:	br	x17

0000000000401530 <xmlDocGetRootElement@plt>:
  401530:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401534:	ldr	x17, [x16, #352]
  401538:	add	x16, x16, #0x160
  40153c:	br	x17

0000000000401540 <gettext@plt>:
  401540:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401544:	ldr	x17, [x16, #360]
  401548:	add	x16, x16, #0x168
  40154c:	br	x17

0000000000401550 <error_at_line@plt>:
  401550:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401554:	ldr	x17, [x16, #368]
  401558:	add	x16, x16, #0x170
  40155c:	br	x17

0000000000401560 <fprintf@plt>:
  401560:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401564:	ldr	x17, [x16, #376]
  401568:	add	x16, x16, #0x178
  40156c:	br	x17

0000000000401570 <setlocale@plt>:
  401570:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401574:	ldr	x17, [x16, #384]
  401578:	add	x16, x16, #0x180
  40157c:	br	x17

Disassembly of section .text:

0000000000401580 <_start>:
  401580:	mov	x29, #0x0                   	// #0
  401584:	mov	x30, #0x0                   	// #0
  401588:	mov	x5, x0
  40158c:	ldr	x1, [sp]
  401590:	add	x2, sp, #0x8
  401594:	mov	x6, sp
  401598:	movz	x0, #0x0, lsl #48
  40159c:	movk	x0, #0x0, lsl #32
  4015a0:	movk	x0, #0x40, lsl #16
  4015a4:	movk	x0, #0x4a18
  4015a8:	movz	x3, #0x0, lsl #48
  4015ac:	movk	x3, #0x0, lsl #32
  4015b0:	movk	x3, #0x40, lsl #16
  4015b4:	movk	x3, #0x55c8
  4015b8:	movz	x4, #0x0, lsl #48
  4015bc:	movk	x4, #0x0, lsl #32
  4015c0:	movk	x4, #0x40, lsl #16
  4015c4:	movk	x4, #0x5648
  4015c8:	bl	4013a0 <__libc_start_main@plt>
  4015cc:	bl	401440 <abort@plt>

00000000004015d0 <call_weak_fn>:
  4015d0:	adrp	x0, 416000 <__FRAME_END__+0xfd84>
  4015d4:	ldr	x0, [x0, #4064]
  4015d8:	cbz	x0, 4015e0 <call_weak_fn+0x10>
  4015dc:	b	401430 <__gmon_start__@plt>
  4015e0:	ret
  4015e4:	nop

00000000004015e8 <deregister_tm_clones>:
  4015e8:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  4015ec:	add	x0, x0, #0x1a8
  4015f0:	adrp	x1, 417000 <memcpy@GLIBC_2.17>
  4015f4:	add	x1, x1, #0x1a8
  4015f8:	cmp	x1, x0
  4015fc:	b.eq	401614 <deregister_tm_clones+0x2c>  // b.none
  401600:	adrp	x1, 405000 <usage+0x100>
  401604:	ldr	x1, [x1, #1656]
  401608:	cbz	x1, 401614 <deregister_tm_clones+0x2c>
  40160c:	mov	x16, x1
  401610:	br	x16
  401614:	ret

0000000000401618 <register_tm_clones>:
  401618:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  40161c:	add	x0, x0, #0x1a8
  401620:	adrp	x1, 417000 <memcpy@GLIBC_2.17>
  401624:	add	x1, x1, #0x1a8
  401628:	sub	x1, x1, x0
  40162c:	lsr	x2, x1, #63
  401630:	add	x1, x2, x1, asr #3
  401634:	cmp	xzr, x1, asr #1
  401638:	asr	x1, x1, #1
  40163c:	b.eq	401654 <register_tm_clones+0x3c>  // b.none
  401640:	adrp	x2, 405000 <usage+0x100>
  401644:	ldr	x2, [x2, #1664]
  401648:	cbz	x2, 401654 <register_tm_clones+0x3c>
  40164c:	mov	x16, x2
  401650:	br	x16
  401654:	ret

0000000000401658 <__do_global_dtors_aux>:
  401658:	stp	x29, x30, [sp, #-32]!
  40165c:	mov	x29, sp
  401660:	str	x19, [sp, #16]
  401664:	adrp	x19, 417000 <memcpy@GLIBC_2.17>
  401668:	ldrb	w0, [x19, #472]
  40166c:	cbnz	w0, 40167c <__do_global_dtors_aux+0x24>
  401670:	bl	4015e8 <deregister_tm_clones>
  401674:	mov	w0, #0x1                   	// #1
  401678:	strb	w0, [x19, #472]
  40167c:	ldr	x19, [sp, #16]
  401680:	ldp	x29, x30, [sp], #32
  401684:	ret

0000000000401688 <frame_dummy>:
  401688:	b	401618 <register_tm_clones>

000000000040168c <yyparse>:
  40168c:	stp	x29, x30, [sp, #-32]!
  401690:	str	x28, [sp, #16]
  401694:	mov	x29, sp
  401698:	sub	sp, sp, #0x910
  40169c:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  4016a0:	add	x8, x8, #0x1e0
  4016a4:	mov	x9, #0xc8                  	// #200
  4016a8:	mov	w10, #0xfffffffe            	// #-2
  4016ac:	adrp	x11, 405000 <usage+0x100>
  4016b0:	add	x11, x11, #0x784
  4016b4:	adrp	x12, 405000 <usage+0x100>
  4016b8:	add	x12, x12, #0x891
  4016bc:	adrp	x13, 405000 <usage+0x100>
  4016c0:	add	x13, x13, #0x8c9
  4016c4:	add	x14, sp, #0x75c
  4016c8:	add	x15, sp, #0x108
  4016cc:	stur	x0, [x29, #-8]
  4016d0:	ldr	x8, [x8]
  4016d4:	stur	x8, [x29, #-24]
  4016d8:	str	wzr, [sp, #228]
  4016dc:	str	wzr, [sp, #212]
  4016e0:	str	x14, [sp, #1872]
  4016e4:	str	x14, [sp, #1864]
  4016e8:	str	x15, [sp, #256]
  4016ec:	str	x15, [sp, #248]
  4016f0:	str	x9, [sp, #240]
  4016f4:	stur	wzr, [x29, #-32]
  4016f8:	stur	wzr, [x29, #-36]
  4016fc:	stur	wzr, [x29, #-28]
  401700:	stur	w10, [x29, #-12]
  401704:	str	x11, [sp, #128]
  401708:	str	x12, [sp, #120]
  40170c:	str	x13, [sp, #112]
  401710:	b	401720 <yyparse+0x94>
  401714:	ldr	x8, [sp, #1864]
  401718:	add	x8, x8, #0x2
  40171c:	str	x8, [sp, #1864]
  401720:	ldur	w8, [x29, #-32]
  401724:	ldr	x9, [sp, #1864]
  401728:	strh	w8, [x9]
  40172c:	ldr	x9, [sp, #1872]
  401730:	ldr	x10, [sp, #240]
  401734:	mov	x11, #0x2                   	// #2
  401738:	mul	x10, x11, x10
  40173c:	add	x9, x9, x10
  401740:	mov	x10, #0xfffffffffffffffe    	// #-2
  401744:	add	x9, x9, x10
  401748:	ldr	x10, [sp, #1864]
  40174c:	cmp	x9, x10
  401750:	b.hi	401900 <yyparse+0x274>  // b.pmore
  401754:	ldr	x8, [sp, #1864]
  401758:	ldr	x9, [sp, #1872]
  40175c:	subs	x8, x8, x9
  401760:	mov	x9, #0x2                   	// #2
  401764:	sdiv	x8, x8, x9
  401768:	add	x8, x8, #0x1
  40176c:	str	x8, [sp, #200]
  401770:	ldr	x8, [sp, #240]
  401774:	mov	x9, #0x2710                	// #10000
  401778:	cmp	x9, x8
  40177c:	b.hi	401784 <yyparse+0xf8>  // b.pmore
  401780:	b	4020d0 <yyparse+0xa44>
  401784:	ldr	x8, [sp, #240]
  401788:	mov	x9, #0x2                   	// #2
  40178c:	mul	x8, x8, x9
  401790:	str	x8, [sp, #240]
  401794:	ldr	x8, [sp, #240]
  401798:	mov	x9, #0x2710                	// #10000
  40179c:	cmp	x9, x8
  4017a0:	b.cs	4017ac <yyparse+0x120>  // b.hs, b.nlast
  4017a4:	mov	x8, #0x2710                	// #10000
  4017a8:	str	x8, [sp, #240]
  4017ac:	ldr	x8, [sp, #1872]
  4017b0:	str	x8, [sp, #192]
  4017b4:	ldr	x8, [sp, #240]
  4017b8:	mov	x9, #0xa                   	// #10
  4017bc:	mul	x8, x8, x9
  4017c0:	add	x0, x8, #0x7
  4017c4:	bl	401340 <malloc@plt>
  4017c8:	str	x0, [sp, #184]
  4017cc:	ldr	x8, [sp, #184]
  4017d0:	cbnz	x8, 4017d8 <yyparse+0x14c>
  4017d4:	b	4020d0 <yyparse+0xa44>
  4017d8:	ldr	x0, [sp, #184]
  4017dc:	ldr	x1, [sp, #1872]
  4017e0:	ldr	x8, [sp, #200]
  4017e4:	mov	x9, #0x2                   	// #2
  4017e8:	mul	x2, x8, x9
  4017ec:	str	x9, [sp, #104]
  4017f0:	bl	401270 <memcpy@plt>
  4017f4:	ldr	x8, [sp, #184]
  4017f8:	str	x8, [sp, #1872]
  4017fc:	ldr	x8, [sp, #240]
  401800:	ldr	x9, [sp, #104]
  401804:	mul	x8, x8, x9
  401808:	add	x8, x8, #0x7
  40180c:	str	x8, [sp, #176]
  401810:	ldr	x8, [sp, #176]
  401814:	mov	x10, #0x8                   	// #8
  401818:	udiv	x8, x8, x10
  40181c:	ldr	x10, [sp, #184]
  401820:	mov	x11, #0x8                   	// #8
  401824:	mul	x8, x11, x8
  401828:	add	x8, x10, x8
  40182c:	str	x8, [sp, #184]
  401830:	ldr	x0, [sp, #184]
  401834:	ldr	x1, [sp, #256]
  401838:	ldr	x8, [sp, #200]
  40183c:	mov	x9, #0x8                   	// #8
  401840:	mul	x2, x8, x9
  401844:	str	x9, [sp, #96]
  401848:	bl	401270 <memcpy@plt>
  40184c:	ldr	x8, [sp, #184]
  401850:	str	x8, [sp, #256]
  401854:	ldr	x8, [sp, #240]
  401858:	ldr	x9, [sp, #96]
  40185c:	mul	x8, x8, x9
  401860:	add	x8, x8, #0x7
  401864:	str	x8, [sp, #168]
  401868:	ldr	x8, [sp, #168]
  40186c:	udiv	x8, x8, x9
  401870:	ldr	x10, [sp, #184]
  401874:	mov	x11, #0x8                   	// #8
  401878:	mul	x8, x11, x8
  40187c:	add	x8, x10, x8
  401880:	str	x8, [sp, #184]
  401884:	ldr	x8, [sp, #192]
  401888:	add	x9, sp, #0x75c
  40188c:	cmp	x8, x9
  401890:	b.eq	40189c <yyparse+0x210>  // b.none
  401894:	ldr	x0, [sp, #192]
  401898:	bl	4014c0 <free@plt>
  40189c:	ldr	x8, [sp, #1872]
  4018a0:	ldr	x9, [sp, #200]
  4018a4:	mov	x10, #0x2                   	// #2
  4018a8:	mul	x9, x10, x9
  4018ac:	add	x8, x8, x9
  4018b0:	mov	x9, #0xfffffffffffffffe    	// #-2
  4018b4:	add	x8, x8, x9
  4018b8:	str	x8, [sp, #1864]
  4018bc:	ldr	x8, [sp, #256]
  4018c0:	ldr	x11, [sp, #200]
  4018c4:	mov	x12, #0x8                   	// #8
  4018c8:	mul	x11, x12, x11
  4018cc:	add	x8, x8, x11
  4018d0:	mov	x11, #0xfffffffffffffff8    	// #-8
  4018d4:	add	x8, x8, x11
  4018d8:	str	x8, [sp, #248]
  4018dc:	ldr	x8, [sp, #1872]
  4018e0:	ldr	x11, [sp, #240]
  4018e4:	mul	x10, x10, x11
  4018e8:	add	x8, x8, x10
  4018ec:	add	x8, x8, x9
  4018f0:	ldr	x9, [sp, #1864]
  4018f4:	cmp	x8, x9
  4018f8:	b.hi	401900 <yyparse+0x274>  // b.pmore
  4018fc:	b	4020c4 <yyparse+0xa38>
  401900:	ldur	w8, [x29, #-32]
  401904:	cmp	w8, #0x7
  401908:	b.ne	401910 <yyparse+0x284>  // b.any
  40190c:	b	4020bc <yyparse+0xa30>
  401910:	ldursw	x8, [x29, #-32]
  401914:	adrp	x9, 405000 <usage+0x100>
  401918:	add	x9, x9, #0x750
  40191c:	ldrsb	w10, [x9, x8]
  401920:	str	w10, [sp, #236]
  401924:	ldr	w10, [sp, #236]
  401928:	mov	w11, #0xffffffec            	// #-20
  40192c:	cmp	w10, w11
  401930:	b.ne	401938 <yyparse+0x2ac>  // b.any
  401934:	b	401a60 <yyparse+0x3d4>
  401938:	ldur	w8, [x29, #-12]
  40193c:	mov	w9, #0xfffffffe            	// #-2
  401940:	cmp	w8, w9
  401944:	b.ne	401958 <yyparse+0x2cc>  // b.any
  401948:	ldur	x1, [x29, #-8]
  40194c:	sub	x0, x29, #0x18
  401950:	bl	40221c <yylex>
  401954:	stur	w0, [x29, #-12]
  401958:	ldur	w8, [x29, #-12]
  40195c:	cmp	w8, #0x0
  401960:	cset	w8, gt
  401964:	tbnz	w8, #0, 401974 <yyparse+0x2e8>
  401968:	str	wzr, [sp, #228]
  40196c:	stur	wzr, [x29, #-12]
  401970:	b	4019a4 <yyparse+0x318>
  401974:	ldur	w8, [x29, #-12]
  401978:	cmp	w8, #0x10c
  40197c:	b.hi	401994 <yyparse+0x308>  // b.pmore
  401980:	ldursw	x8, [x29, #-12]
  401984:	ldr	x9, [sp, #128]
  401988:	ldrb	w10, [x9, x8]
  40198c:	str	w10, [sp, #92]
  401990:	b	40199c <yyparse+0x310>
  401994:	mov	w8, #0x2                   	// #2
  401998:	str	w8, [sp, #92]
  40199c:	ldr	w8, [sp, #92]
  4019a0:	str	w8, [sp, #228]
  4019a4:	ldr	w8, [sp, #228]
  4019a8:	ldr	w9, [sp, #236]
  4019ac:	add	w8, w9, w8
  4019b0:	str	w8, [sp, #236]
  4019b4:	ldr	w8, [sp, #236]
  4019b8:	cmp	w8, #0x0
  4019bc:	cset	w8, lt  // lt = tstop
  4019c0:	tbnz	w8, #0, 4019ec <yyparse+0x360>
  4019c4:	ldr	w8, [sp, #236]
  4019c8:	mov	w9, #0x37                  	// #55
  4019cc:	cmp	w9, w8
  4019d0:	b.lt	4019ec <yyparse+0x360>  // b.tstop
  4019d4:	ldrsw	x8, [sp, #236]
  4019d8:	ldr	x9, [sp, #120]
  4019dc:	ldrsb	w10, [x9, x8]
  4019e0:	ldr	w11, [sp, #228]
  4019e4:	cmp	w10, w11
  4019e8:	b.eq	4019f0 <yyparse+0x364>  // b.none
  4019ec:	b	401a60 <yyparse+0x3d4>
  4019f0:	ldrsw	x8, [sp, #236]
  4019f4:	ldr	x9, [sp, #112]
  4019f8:	ldrb	w10, [x9, x8]
  4019fc:	str	w10, [sp, #236]
  401a00:	ldr	w10, [sp, #236]
  401a04:	cmp	w10, #0x0
  401a08:	cset	w10, gt
  401a0c:	tbnz	w10, #0, 401a24 <yyparse+0x398>
  401a10:	ldr	w8, [sp, #236]
  401a14:	mov	w9, wzr
  401a18:	subs	w8, w9, w8
  401a1c:	str	w8, [sp, #236]
  401a20:	b	401a80 <yyparse+0x3f4>
  401a24:	ldur	w8, [x29, #-36]
  401a28:	cbz	w8, 401a38 <yyparse+0x3ac>
  401a2c:	ldur	w8, [x29, #-36]
  401a30:	subs	w8, w8, #0x1
  401a34:	stur	w8, [x29, #-36]
  401a38:	mov	w8, #0xfffffffe            	// #-2
  401a3c:	stur	w8, [x29, #-12]
  401a40:	ldr	w8, [sp, #236]
  401a44:	stur	w8, [x29, #-32]
  401a48:	ldr	x9, [sp, #248]
  401a4c:	add	x10, x9, #0x8
  401a50:	str	x10, [sp, #248]
  401a54:	ldur	x10, [x29, #-24]
  401a58:	str	x10, [x9, #8]
  401a5c:	b	401714 <yyparse+0x88>
  401a60:	ldursw	x8, [x29, #-32]
  401a64:	adrp	x9, 405000 <usage+0x100>
  401a68:	add	x9, x9, #0x901
  401a6c:	ldrb	w10, [x9, x8]
  401a70:	str	w10, [sp, #236]
  401a74:	ldr	w10, [sp, #236]
  401a78:	cbnz	w10, 401a80 <yyparse+0x3f4>
  401a7c:	b	401eb8 <yyparse+0x82c>
  401a80:	ldrsw	x8, [sp, #236]
  401a84:	adrp	x9, 405000 <usage+0x100>
  401a88:	add	x9, x9, #0x935
  401a8c:	ldrb	w10, [x9, x8]
  401a90:	str	w10, [sp, #212]
  401a94:	ldr	x8, [sp, #248]
  401a98:	ldr	w10, [sp, #212]
  401a9c:	mov	w11, #0x1                   	// #1
  401aa0:	subs	w10, w11, w10
  401aa4:	ldr	x8, [x8, w10, sxtw #3]
  401aa8:	str	x8, [sp, #216]
  401aac:	ldr	w10, [sp, #236]
  401ab0:	subs	w10, w10, #0x4
  401ab4:	mov	w8, w10
  401ab8:	ubfx	x8, x8, #0, #32
  401abc:	cmp	x8, #0x1c
  401ac0:	str	x8, [sp, #80]
  401ac4:	b.hi	401dc8 <yyparse+0x73c>  // b.pmore
  401ac8:	adrp	x8, 405000 <usage+0x100>
  401acc:	add	x8, x8, #0x688
  401ad0:	ldr	x11, [sp, #80]
  401ad4:	ldrsw	x10, [x8, x11, lsl #2]
  401ad8:	add	x9, x8, x10
  401adc:	br	x9
  401ae0:	ldr	x8, [sp, #248]
  401ae4:	mov	x9, #0xffffffffffffffe8    	// #-24
  401ae8:	add	x8, x8, x9
  401aec:	ldr	x0, [x8]
  401af0:	ldr	x8, [sp, #248]
  401af4:	mov	x9, #0xfffffffffffffff8    	// #-8
  401af8:	add	x8, x8, x9
  401afc:	ldr	x1, [x8]
  401b00:	bl	40289c <new_rule>
  401b04:	str	x0, [sp, #160]
  401b08:	ldur	x8, [x29, #-8]
  401b0c:	ldr	x8, [x8, #16]
  401b10:	str	x8, [sp, #152]
  401b14:	ldr	x8, [sp, #152]
  401b18:	ldr	x8, [x8, #8]
  401b1c:	ldr	x9, [sp, #152]
  401b20:	ldr	x9, [x9, #16]
  401b24:	cmp	x8, x9
  401b28:	b.ne	401b6c <yyparse+0x4e0>  // b.any
  401b2c:	ldr	x8, [sp, #152]
  401b30:	ldr	x8, [x8, #16]
  401b34:	mov	x9, #0x2                   	// #2
  401b38:	mul	x8, x8, x9
  401b3c:	add	x8, x8, #0x1
  401b40:	ldr	x9, [sp, #152]
  401b44:	str	x8, [x9, #16]
  401b48:	ldr	x8, [sp, #152]
  401b4c:	ldr	x0, [x8]
  401b50:	ldr	x8, [sp, #152]
  401b54:	ldr	x8, [x8, #16]
  401b58:	mov	x9, #0x8                   	// #8
  401b5c:	mul	x1, x9, x8
  401b60:	bl	401350 <xrealloc@plt>
  401b64:	ldr	x8, [sp, #152]
  401b68:	str	x0, [x8]
  401b6c:	ldr	x8, [sp, #160]
  401b70:	ldr	x9, [sp, #152]
  401b74:	ldr	x9, [x9]
  401b78:	ldr	x10, [sp, #152]
  401b7c:	mov	x11, #0x8                   	// #8
  401b80:	ldr	x12, [x10, #8]
  401b84:	add	x13, x12, #0x1
  401b88:	str	x13, [x10, #8]
  401b8c:	mul	x10, x11, x12
  401b90:	add	x9, x9, x10
  401b94:	str	x8, [x9]
  401b98:	b	401dc8 <yyparse+0x73c>
  401b9c:	ldr	x8, [sp, #248]
  401ba0:	ldr	x8, [x8]
  401ba4:	str	x8, [sp, #216]
  401ba8:	b	401dc8 <yyparse+0x73c>
  401bac:	ldr	x8, [sp, #248]
  401bb0:	mov	x9, #0xfffffffffffffff0    	// #-16
  401bb4:	add	x8, x8, x9
  401bb8:	ldr	x1, [x8]
  401bbc:	ldr	x8, [sp, #248]
  401bc0:	ldr	x2, [x8]
  401bc4:	mov	w0, #0x1                   	// #1
  401bc8:	bl	4028e8 <new_branch_condition>
  401bcc:	str	x0, [sp, #216]
  401bd0:	b	401dc8 <yyparse+0x73c>
  401bd4:	ldr	x8, [sp, #248]
  401bd8:	ldr	x0, [x8]
  401bdc:	bl	402944 <new_leaf_condition>
  401be0:	str	x0, [sp, #216]
  401be4:	b	401dc8 <yyparse+0x73c>
  401be8:	ldr	x8, [sp, #248]
  401bec:	mov	x9, #0xfffffffffffffff0    	// #-16
  401bf0:	add	x8, x8, x9
  401bf4:	ldr	x1, [x8]
  401bf8:	ldr	x8, [sp, #248]
  401bfc:	ldr	x0, [x8]
  401c00:	str	x1, [sp, #72]
  401c04:	bl	402944 <new_leaf_condition>
  401c08:	mov	w10, wzr
  401c0c:	str	x0, [sp, #64]
  401c10:	mov	w0, w10
  401c14:	ldr	x1, [sp, #72]
  401c18:	ldr	x2, [sp, #64]
  401c1c:	bl	4028e8 <new_branch_condition>
  401c20:	str	x0, [sp, #216]
  401c24:	b	401dc8 <yyparse+0x73c>
  401c28:	ldr	x8, [sp, #248]
  401c2c:	mov	x9, #0xfffffffffffffff0    	// #-16
  401c30:	add	x8, x8, x9
  401c34:	ldr	x0, [x8]
  401c38:	ldr	x8, [sp, #248]
  401c3c:	ldr	x2, [x8]
  401c40:	mov	w10, wzr
  401c44:	mov	w1, w10
  401c48:	bl	402994 <new_relation>
  401c4c:	str	x0, [sp, #216]
  401c50:	b	401dc8 <yyparse+0x73c>
  401c54:	ldr	x8, [sp, #248]
  401c58:	mov	x9, #0xfffffffffffffff0    	// #-16
  401c5c:	add	x8, x8, x9
  401c60:	ldr	x0, [x8]
  401c64:	ldr	x8, [sp, #248]
  401c68:	ldr	x2, [x8]
  401c6c:	mov	w1, #0x1                   	// #1
  401c70:	bl	402994 <new_relation>
  401c74:	str	x0, [sp, #216]
  401c78:	b	401dc8 <yyparse+0x73c>
  401c7c:	ldr	x8, [sp, #248]
  401c80:	ldr	w0, [x8]
  401c84:	mov	w9, wzr
  401c88:	mov	w1, w9
  401c8c:	bl	4029f0 <new_expression>
  401c90:	str	x0, [sp, #216]
  401c94:	b	401dc8 <yyparse+0x73c>
  401c98:	ldr	x8, [sp, #248]
  401c9c:	ldur	w0, [x8, #-16]
  401ca0:	ldr	x8, [sp, #248]
  401ca4:	ldr	x8, [x8]
  401ca8:	ldr	w1, [x8, #8]
  401cac:	bl	4029f0 <new_expression>
  401cb0:	str	x0, [sp, #216]
  401cb4:	b	401dc8 <yyparse+0x73c>
  401cb8:	mov	x0, #0x18                  	// #24
  401cbc:	bl	4013c0 <xmalloc@plt>
  401cc0:	str	x0, [sp, #144]
  401cc4:	ldr	x8, [sp, #144]
  401cc8:	str	xzr, [x8]
  401ccc:	str	xzr, [x8, #8]
  401cd0:	str	xzr, [x8, #16]
  401cd4:	ldr	x0, [sp, #144]
  401cd8:	ldr	x8, [sp, #248]
  401cdc:	ldr	x1, [x8]
  401ce0:	bl	402a3c <add_range>
  401ce4:	str	x0, [sp, #216]
  401ce8:	b	401dc8 <yyparse+0x73c>
  401cec:	ldr	x8, [sp, #248]
  401cf0:	mov	x9, #0xfffffffffffffff0    	// #-16
  401cf4:	add	x8, x8, x9
  401cf8:	ldr	x0, [x8]
  401cfc:	ldr	x8, [sp, #248]
  401d00:	ldr	x1, [x8]
  401d04:	bl	402a3c <add_range>
  401d08:	str	x0, [sp, #216]
  401d0c:	b	401dc8 <yyparse+0x73c>
  401d10:	ldr	x8, [sp, #248]
  401d14:	ldr	x8, [x8]
  401d18:	str	x8, [sp, #216]
  401d1c:	b	401dc8 <yyparse+0x73c>
  401d20:	ldr	x8, [sp, #248]
  401d24:	ldr	x0, [x8]
  401d28:	ldr	x8, [sp, #248]
  401d2c:	ldr	x1, [x8]
  401d30:	bl	402ae4 <new_range>
  401d34:	str	x0, [sp, #216]
  401d38:	b	401dc8 <yyparse+0x73c>
  401d3c:	ldr	x8, [sp, #248]
  401d40:	mov	x9, #0xfffffffffffffff0    	// #-16
  401d44:	add	x8, x8, x9
  401d48:	ldr	x0, [x8]
  401d4c:	ldr	x8, [sp, #248]
  401d50:	ldr	x1, [x8]
  401d54:	bl	402ae4 <new_range>
  401d58:	str	x0, [sp, #216]
  401d5c:	b	401dc8 <yyparse+0x73c>
  401d60:	ldr	x8, [sp, #248]
  401d64:	ldr	x0, [x8]
  401d68:	bl	4014c0 <free@plt>
  401d6c:	b	401dc8 <yyparse+0x73c>
  401d70:	ldr	x8, [sp, #248]
  401d74:	mov	x9, #0xfffffffffffffff0    	// #-16
  401d78:	add	x8, x8, x9
  401d7c:	ldr	x0, [x8]
  401d80:	bl	4014c0 <free@plt>
  401d84:	ldr	x8, [sp, #248]
  401d88:	ldr	x0, [x8]
  401d8c:	bl	4014c0 <free@plt>
  401d90:	b	401dc8 <yyparse+0x73c>
  401d94:	ldr	x8, [sp, #248]
  401d98:	ldr	x0, [x8]
  401d9c:	bl	4014c0 <free@plt>
  401da0:	b	401dc8 <yyparse+0x73c>
  401da4:	ldr	x8, [sp, #248]
  401da8:	mov	x9, #0xfffffffffffffff0    	// #-16
  401dac:	add	x8, x8, x9
  401db0:	ldr	x0, [x8]
  401db4:	bl	4014c0 <free@plt>
  401db8:	ldr	x8, [sp, #248]
  401dbc:	ldr	x0, [x8]
  401dc0:	bl	4014c0 <free@plt>
  401dc4:	b	401dc8 <yyparse+0x73c>
  401dc8:	ldrsw	x8, [sp, #212]
  401dcc:	ldr	x9, [sp, #248]
  401dd0:	mov	x10, #0x8                   	// #8
  401dd4:	mneg	x8, x8, x10
  401dd8:	add	x8, x9, x8
  401ddc:	str	x8, [sp, #248]
  401de0:	ldrsw	x8, [sp, #212]
  401de4:	ldr	x9, [sp, #1864]
  401de8:	mov	x10, #0x2                   	// #2
  401dec:	mneg	x8, x8, x10
  401df0:	add	x8, x9, x8
  401df4:	str	x8, [sp, #1864]
  401df8:	mov	w11, wzr
  401dfc:	str	wzr, [sp, #212]
  401e00:	ldr	x8, [sp, #248]
  401e04:	add	x9, x8, #0x8
  401e08:	str	x9, [sp, #248]
  401e0c:	ldr	x9, [sp, #216]
  401e10:	str	x9, [x8, #8]
  401e14:	ldrsw	x8, [sp, #236]
  401e18:	adrp	x9, 405000 <usage+0x100>
  401e1c:	add	x9, x9, #0x956
  401e20:	ldrb	w12, [x9, x8]
  401e24:	subs	w12, w12, #0x15
  401e28:	str	w12, [sp, #140]
  401e2c:	ldrsw	x8, [sp, #140]
  401e30:	adrp	x9, 405000 <usage+0x100>
  401e34:	add	x9, x9, #0x977
  401e38:	ldrsb	w12, [x9, x8]
  401e3c:	ldr	x8, [sp, #1864]
  401e40:	ldrsh	w13, [x8]
  401e44:	add	w12, w12, w13
  401e48:	str	w12, [sp, #136]
  401e4c:	ldr	w12, [sp, #136]
  401e50:	cmp	w11, w12
  401e54:	cset	w11, gt
  401e58:	tbnz	w11, #0, 401e98 <yyparse+0x80c>
  401e5c:	ldr	w8, [sp, #136]
  401e60:	cmp	w8, #0x37
  401e64:	b.gt	401e98 <yyparse+0x80c>
  401e68:	ldrsw	x8, [sp, #136]
  401e6c:	ldr	x9, [sp, #120]
  401e70:	ldrsb	w10, [x9, x8]
  401e74:	ldr	x8, [sp, #1864]
  401e78:	ldrsh	w11, [x8]
  401e7c:	cmp	w10, w11
  401e80:	b.ne	401e98 <yyparse+0x80c>  // b.any
  401e84:	ldrsw	x8, [sp, #136]
  401e88:	ldr	x9, [sp, #112]
  401e8c:	ldrb	w10, [x9, x8]
  401e90:	str	w10, [sp, #60]
  401e94:	b	401eac <yyparse+0x820>
  401e98:	ldrsw	x8, [sp, #140]
  401e9c:	adrp	x9, 405000 <usage+0x100>
  401ea0:	add	x9, x9, #0x988
  401ea4:	ldrsb	w10, [x9, x8]
  401ea8:	str	w10, [sp, #60]
  401eac:	ldr	w8, [sp, #60]
  401eb0:	stur	w8, [x29, #-32]
  401eb4:	b	401714 <yyparse+0x88>
  401eb8:	ldur	w8, [x29, #-12]
  401ebc:	mov	w9, #0xfffffffe            	// #-2
  401ec0:	cmp	w8, w9
  401ec4:	b.ne	401ed4 <yyparse+0x848>  // b.any
  401ec8:	mov	w8, #0xfffffffe            	// #-2
  401ecc:	str	w8, [sp, #56]
  401ed0:	b	401f04 <yyparse+0x878>
  401ed4:	ldur	w8, [x29, #-12]
  401ed8:	cmp	w8, #0x10c
  401edc:	b.hi	401ef4 <yyparse+0x868>  // b.pmore
  401ee0:	ldursw	x8, [x29, #-12]
  401ee4:	ldr	x9, [sp, #128]
  401ee8:	ldrb	w10, [x9, x8]
  401eec:	str	w10, [sp, #52]
  401ef0:	b	401efc <yyparse+0x870>
  401ef4:	mov	w8, #0x2                   	// #2
  401ef8:	str	w8, [sp, #52]
  401efc:	ldr	w8, [sp, #52]
  401f00:	str	w8, [sp, #56]
  401f04:	ldr	w8, [sp, #56]
  401f08:	str	w8, [sp, #228]
  401f0c:	ldur	w8, [x29, #-36]
  401f10:	cbnz	w8, 401f54 <yyparse+0x8c8>
  401f14:	ldur	w8, [x29, #-28]
  401f18:	add	w8, w8, #0x1
  401f1c:	stur	w8, [x29, #-28]
  401f20:	ldur	x0, [x29, #-8]
  401f24:	adrp	x9, 405000 <usage+0x100>
  401f28:	add	x9, x9, #0x9cd
  401f2c:	str	x0, [sp, #40]
  401f30:	mov	x0, x9
  401f34:	adrp	x1, 405000 <usage+0x100>
  401f38:	add	x1, x1, #0x9db
  401f3c:	bl	4014b0 <dgettext@plt>
  401f40:	ldr	x9, [sp, #40]
  401f44:	str	x0, [sp, #32]
  401f48:	mov	x0, x9
  401f4c:	ldr	x1, [sp, #32]
  401f50:	bl	402b30 <yyerror>
  401f54:	ldur	w8, [x29, #-36]
  401f58:	cmp	w8, #0x3
  401f5c:	b.ne	401fa0 <yyparse+0x914>  // b.any
  401f60:	ldur	w8, [x29, #-12]
  401f64:	cmp	w8, #0x0
  401f68:	cset	w8, gt
  401f6c:	tbnz	w8, #0, 401f80 <yyparse+0x8f4>
  401f70:	ldur	w8, [x29, #-12]
  401f74:	cbnz	w8, 401f7c <yyparse+0x8f0>
  401f78:	b	4020c4 <yyparse+0xa38>
  401f7c:	b	401fa0 <yyparse+0x914>
  401f80:	ldr	w1, [sp, #228]
  401f84:	ldur	x3, [x29, #-8]
  401f88:	adrp	x0, 405000 <usage+0x100>
  401f8c:	add	x0, x0, #0x9e8
  401f90:	sub	x2, x29, #0x18
  401f94:	bl	402b70 <yydestruct>
  401f98:	mov	w8, #0xfffffffe            	// #-2
  401f9c:	stur	w8, [x29, #-12]
  401fa0:	mov	w8, #0x3                   	// #3
  401fa4:	stur	w8, [x29, #-36]
  401fa8:	ldursw	x8, [x29, #-32]
  401fac:	adrp	x9, 405000 <usage+0x100>
  401fb0:	add	x9, x9, #0x750
  401fb4:	ldrsb	w10, [x9, x8]
  401fb8:	str	w10, [sp, #236]
  401fbc:	ldr	w10, [sp, #236]
  401fc0:	mov	w11, #0xffffffec            	// #-20
  401fc4:	cmp	w10, w11
  401fc8:	b.eq	402034 <yyparse+0x9a8>  // b.none
  401fcc:	ldr	w8, [sp, #236]
  401fd0:	add	w8, w8, #0x1
  401fd4:	str	w8, [sp, #236]
  401fd8:	ldr	w8, [sp, #236]
  401fdc:	mov	w9, wzr
  401fe0:	cmp	w9, w8
  401fe4:	cset	w8, gt
  401fe8:	tbnz	w8, #0, 402034 <yyparse+0x9a8>
  401fec:	ldr	w8, [sp, #236]
  401ff0:	cmp	w8, #0x37
  401ff4:	b.gt	402034 <yyparse+0x9a8>
  401ff8:	ldrsw	x8, [sp, #236]
  401ffc:	ldr	x9, [sp, #120]
  402000:	ldrsb	w10, [x9, x8]
  402004:	cmp	w10, #0x1
  402008:	b.ne	402034 <yyparse+0x9a8>  // b.any
  40200c:	ldrsw	x8, [sp, #236]
  402010:	ldr	x9, [sp, #112]
  402014:	ldrb	w10, [x9, x8]
  402018:	str	w10, [sp, #236]
  40201c:	ldr	w10, [sp, #236]
  402020:	mov	w11, wzr
  402024:	cmp	w11, w10
  402028:	cset	w10, ge  // ge = tcont
  40202c:	tbnz	w10, #0, 402034 <yyparse+0x9a8>
  402030:	b	40209c <yyparse+0xa10>
  402034:	ldr	x8, [sp, #1864]
  402038:	ldr	x9, [sp, #1872]
  40203c:	cmp	x8, x9
  402040:	b.ne	402048 <yyparse+0x9bc>  // b.any
  402044:	b	4020c4 <yyparse+0xa38>
  402048:	ldursw	x8, [x29, #-32]
  40204c:	adrp	x9, 405000 <usage+0x100>
  402050:	add	x9, x9, #0x999
  402054:	ldrb	w1, [x9, x8]
  402058:	ldr	x2, [sp, #248]
  40205c:	ldur	x3, [x29, #-8]
  402060:	adrp	x0, 405000 <usage+0x100>
  402064:	add	x0, x0, #0x9fa
  402068:	bl	402b70 <yydestruct>
  40206c:	ldr	x8, [sp, #248]
  402070:	mov	x9, #0xfffffffffffffff8    	// #-8
  402074:	add	x8, x8, x9
  402078:	str	x8, [sp, #248]
  40207c:	ldr	x8, [sp, #1864]
  402080:	mov	x9, #0xfffffffffffffffe    	// #-2
  402084:	add	x8, x8, x9
  402088:	str	x8, [sp, #1864]
  40208c:	ldr	x8, [sp, #1864]
  402090:	ldrsh	w10, [x8]
  402094:	stur	w10, [x29, #-32]
  402098:	b	401fa8 <yyparse+0x91c>
  40209c:	ldr	x8, [sp, #248]
  4020a0:	add	x9, x8, #0x8
  4020a4:	str	x9, [sp, #248]
  4020a8:	ldur	x9, [x29, #-24]
  4020ac:	str	x9, [x8, #8]
  4020b0:	ldr	w10, [sp, #236]
  4020b4:	stur	w10, [x29, #-32]
  4020b8:	b	401714 <yyparse+0x88>
  4020bc:	str	wzr, [sp, #232]
  4020c0:	b	40210c <yyparse+0xa80>
  4020c4:	mov	w8, #0x1                   	// #1
  4020c8:	str	w8, [sp, #232]
  4020cc:	b	40210c <yyparse+0xa80>
  4020d0:	ldur	x0, [x29, #-8]
  4020d4:	adrp	x8, 405000 <usage+0x100>
  4020d8:	add	x8, x8, #0x9cd
  4020dc:	str	x0, [sp, #24]
  4020e0:	mov	x0, x8
  4020e4:	adrp	x1, 405000 <usage+0x100>
  4020e8:	add	x1, x1, #0xa09
  4020ec:	bl	4014b0 <dgettext@plt>
  4020f0:	ldr	x8, [sp, #24]
  4020f4:	str	x0, [sp, #16]
  4020f8:	mov	x0, x8
  4020fc:	ldr	x1, [sp, #16]
  402100:	bl	402b30 <yyerror>
  402104:	mov	w9, #0x2                   	// #2
  402108:	str	w9, [sp, #232]
  40210c:	ldur	w8, [x29, #-12]
  402110:	mov	w9, #0xfffffffe            	// #-2
  402114:	cmp	w8, w9
  402118:	b.eq	402164 <yyparse+0xad8>  // b.none
  40211c:	ldur	w8, [x29, #-12]
  402120:	cmp	w8, #0x10c
  402124:	b.hi	40213c <yyparse+0xab0>  // b.pmore
  402128:	ldursw	x8, [x29, #-12]
  40212c:	ldr	x9, [sp, #128]
  402130:	ldrb	w10, [x9, x8]
  402134:	str	w10, [sp, #12]
  402138:	b	402144 <yyparse+0xab8>
  40213c:	mov	w8, #0x2                   	// #2
  402140:	str	w8, [sp, #12]
  402144:	ldr	w8, [sp, #12]
  402148:	str	w8, [sp, #228]
  40214c:	ldr	w1, [sp, #228]
  402150:	ldur	x3, [x29, #-8]
  402154:	adrp	x0, 405000 <usage+0x100>
  402158:	add	x0, x0, #0xa1a
  40215c:	sub	x2, x29, #0x18
  402160:	bl	402b70 <yydestruct>
  402164:	ldrsw	x8, [sp, #212]
  402168:	ldr	x9, [sp, #248]
  40216c:	mov	x10, #0x8                   	// #8
  402170:	mneg	x8, x8, x10
  402174:	add	x8, x9, x8
  402178:	str	x8, [sp, #248]
  40217c:	ldrsw	x8, [sp, #212]
  402180:	ldr	x9, [sp, #1864]
  402184:	mov	x10, #0x2                   	// #2
  402188:	mneg	x8, x8, x10
  40218c:	add	x8, x9, x8
  402190:	str	x8, [sp, #1864]
  402194:	ldr	x8, [sp, #1864]
  402198:	ldr	x9, [sp, #1872]
  40219c:	cmp	x8, x9
  4021a0:	b.eq	4021f0 <yyparse+0xb64>  // b.none
  4021a4:	ldr	x8, [sp, #1864]
  4021a8:	ldrsh	x8, [x8]
  4021ac:	adrp	x9, 405000 <usage+0x100>
  4021b0:	add	x9, x9, #0x999
  4021b4:	ldrb	w1, [x9, x8]
  4021b8:	ldr	x2, [sp, #248]
  4021bc:	ldur	x3, [x29, #-8]
  4021c0:	adrp	x0, 405000 <usage+0x100>
  4021c4:	add	x0, x0, #0xa38
  4021c8:	bl	402b70 <yydestruct>
  4021cc:	ldr	x8, [sp, #248]
  4021d0:	mov	x9, #0xfffffffffffffff8    	// #-8
  4021d4:	add	x8, x8, x9
  4021d8:	str	x8, [sp, #248]
  4021dc:	ldr	x8, [sp, #1864]
  4021e0:	mov	x9, #0xfffffffffffffffe    	// #-2
  4021e4:	add	x8, x8, x9
  4021e8:	str	x8, [sp, #1864]
  4021ec:	b	402194 <yyparse+0xb08>
  4021f0:	ldr	x8, [sp, #1872]
  4021f4:	add	x9, sp, #0x75c
  4021f8:	cmp	x8, x9
  4021fc:	b.eq	402208 <yyparse+0xb7c>  // b.none
  402200:	ldr	x0, [sp, #1872]
  402204:	bl	4014c0 <free@plt>
  402208:	ldr	w0, [sp, #232]
  40220c:	add	sp, sp, #0x910
  402210:	ldr	x28, [sp, #16]
  402214:	ldp	x29, x30, [sp], #32
  402218:	ret

000000000040221c <yylex>:
  40221c:	sub	sp, sp, #0x80
  402220:	stp	x29, x30, [sp, #112]
  402224:	add	x29, sp, #0x70
  402228:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  40222c:	add	x8, x8, #0x1f0
  402230:	adrp	x9, 417000 <memcpy@GLIBC_2.17>
  402234:	add	x9, x9, #0x1e8
  402238:	stur	x0, [x29, #-16]
  40223c:	stur	x1, [x29, #-24]
  402240:	ldur	x10, [x29, #-24]
  402244:	ldr	x10, [x10]
  402248:	stur	x10, [x29, #-32]
  40224c:	str	x8, [sp, #24]
  402250:	str	x9, [sp, #16]
  402254:	ldur	x8, [x29, #-32]
  402258:	ldrb	w9, [x8]
  40225c:	cbnz	w9, 402274 <yylex+0x58>
  402260:	ldur	x8, [x29, #-32]
  402264:	ldur	x9, [x29, #-24]
  402268:	str	x8, [x9]
  40226c:	stur	wzr, [x29, #-4]
  402270:	b	40288c <yylex+0x670>
  402274:	ldur	x8, [x29, #-32]
  402278:	ldrb	w9, [x8]
  40227c:	cmp	w9, #0x20
  402280:	b.eq	402298 <yylex+0x7c>  // b.none
  402284:	ldur	x8, [x29, #-32]
  402288:	ldrb	w9, [x8]
  40228c:	cmp	w9, #0x9
  402290:	b.eq	402298 <yylex+0x7c>  // b.none
  402294:	b	4022a8 <yylex+0x8c>
  402298:	ldur	x8, [x29, #-32]
  40229c:	add	x8, x8, #0x1
  4022a0:	stur	x8, [x29, #-32]
  4022a4:	b	402254 <yylex+0x38>
  4022a8:	ldur	x1, [x29, #-32]
  4022ac:	ldur	x8, [x29, #-24]
  4022b0:	ldr	x8, [x8, #8]
  4022b4:	ldur	x9, [x29, #-32]
  4022b8:	subs	x2, x8, x9
  4022bc:	sub	x0, x29, #0x24
  4022c0:	bl	4014d0 <u8_mbtouc@plt>
  4022c4:	stur	w0, [x29, #-40]
  4022c8:	ldur	w10, [x29, #-36]
  4022cc:	mov	w11, #0x2026                	// #8230
  4022d0:	cmp	w10, w11
  4022d4:	b.ne	4022f8 <yylex+0xdc>  // b.any
  4022d8:	ldur	x8, [x29, #-32]
  4022dc:	ldursw	x9, [x29, #-40]
  4022e0:	add	x8, x8, x9
  4022e4:	ldur	x9, [x29, #-24]
  4022e8:	str	x8, [x9]
  4022ec:	mov	w10, #0x105                 	// #261
  4022f0:	stur	w10, [x29, #-4]
  4022f4:	b	40288c <yylex+0x670>
  4022f8:	ldur	x1, [x29, #-32]
  4022fc:	adrp	x0, 405000 <usage+0x100>
  402300:	add	x0, x0, #0xa52
  402304:	mov	x2, #0x3                   	// #3
  402308:	bl	401380 <strncmp@plt>
  40230c:	cbnz	w0, 40232c <yylex+0x110>
  402310:	ldur	x8, [x29, #-32]
  402314:	add	x8, x8, #0x3
  402318:	ldur	x9, [x29, #-24]
  40231c:	str	x8, [x9]
  402320:	mov	w10, #0x105                 	// #261
  402324:	stur	w10, [x29, #-4]
  402328:	b	40288c <yylex+0x670>
  40232c:	ldur	x1, [x29, #-32]
  402330:	adrp	x0, 405000 <usage+0x100>
  402334:	add	x0, x0, #0xa53
  402338:	mov	x2, #0x2                   	// #2
  40233c:	bl	401380 <strncmp@plt>
  402340:	cbnz	w0, 402360 <yylex+0x144>
  402344:	ldur	x8, [x29, #-32]
  402348:	add	x8, x8, #0x2
  40234c:	ldur	x9, [x29, #-24]
  402350:	str	x8, [x9]
  402354:	mov	w10, #0x104                 	// #260
  402358:	stur	w10, [x29, #-4]
  40235c:	b	40288c <yylex+0x670>
  402360:	ldur	x1, [x29, #-32]
  402364:	adrp	x0, 405000 <usage+0x100>
  402368:	add	x0, x0, #0xa56
  40236c:	mov	x2, #0x5                   	// #5
  402370:	bl	401380 <strncmp@plt>
  402374:	cbnz	w0, 402394 <yylex+0x178>
  402378:	ldur	x8, [x29, #-32]
  40237c:	add	x8, x8, #0x5
  402380:	ldur	x9, [x29, #-24]
  402384:	str	x8, [x9]
  402388:	mov	w10, #0x106                 	// #262
  40238c:	stur	w10, [x29, #-4]
  402390:	b	40288c <yylex+0x670>
  402394:	ldur	x1, [x29, #-32]
  402398:	adrp	x0, 405000 <usage+0x100>
  40239c:	add	x0, x0, #0xa5c
  4023a0:	mov	x2, #0x8                   	// #8
  4023a4:	bl	401380 <strncmp@plt>
  4023a8:	cbnz	w0, 4023c8 <yylex+0x1ac>
  4023ac:	ldur	x8, [x29, #-32]
  4023b0:	add	x8, x8, #0x8
  4023b4:	ldur	x9, [x29, #-24]
  4023b8:	str	x8, [x9]
  4023bc:	mov	w10, #0x107                 	// #263
  4023c0:	stur	w10, [x29, #-4]
  4023c4:	b	40288c <yylex+0x670>
  4023c8:	ldur	x1, [x29, #-32]
  4023cc:	adrp	x0, 405000 <usage+0x100>
  4023d0:	add	x0, x0, #0xa65
  4023d4:	mov	x2, #0x8                   	// #8
  4023d8:	bl	401380 <strncmp@plt>
  4023dc:	cbnz	w0, 4023fc <yylex+0x1e0>
  4023e0:	ldur	x8, [x29, #-32]
  4023e4:	add	x8, x8, #0x8
  4023e8:	ldur	x9, [x29, #-24]
  4023ec:	str	x8, [x9]
  4023f0:	mov	w10, #0x108                 	// #264
  4023f4:	stur	w10, [x29, #-4]
  4023f8:	b	40288c <yylex+0x670>
  4023fc:	ldur	x8, [x29, #-32]
  402400:	add	x9, x8, #0x1
  402404:	stur	x9, [x29, #-32]
  402408:	ldrb	w10, [x8]
  40240c:	stur	w10, [x29, #-44]
  402410:	ldur	w10, [x29, #-44]
  402414:	cmp	w10, #0x21
  402418:	str	w10, [sp, #12]
  40241c:	b.eq	402844 <yylex+0x628>  // b.none
  402420:	b	402424 <yylex+0x208>
  402424:	ldr	w8, [sp, #12]
  402428:	subs	w9, w8, #0x30
  40242c:	cmp	w9, #0x9
  402430:	b.ls	40244c <yylex+0x230>  // b.plast
  402434:	b	402438 <yylex+0x21c>
  402438:	ldr	w8, [sp, #12]
  40243c:	subs	w9, w8, #0x61
  402440:	cmp	w9, #0x19
  402444:	b.ls	402624 <yylex+0x408>  // b.plast
  402448:	b	402878 <yylex+0x65c>
  40244c:	ldur	w8, [x29, #-44]
  402450:	subs	w8, w8, #0x30
  402454:	mov	w0, w8
  402458:	sxtw	x9, w0
  40245c:	str	x9, [sp, #48]
  402460:	ldur	x8, [x29, #-32]
  402464:	ldrb	w9, [x8]
  402468:	mov	w10, #0x0                   	// #0
  40246c:	cmp	w9, #0x30
  402470:	str	w10, [sp, #8]
  402474:	b.lt	40248c <yylex+0x270>  // b.tstop
  402478:	ldur	x8, [x29, #-32]
  40247c:	ldrb	w9, [x8]
  402480:	cmp	w9, #0x39
  402484:	cset	w9, le
  402488:	str	w9, [sp, #8]
  40248c:	ldr	w8, [sp, #8]
  402490:	tbnz	w8, #0, 402498 <yylex+0x27c>
  402494:	b	4024d0 <yylex+0x2b4>
  402498:	ldr	x8, [sp, #48]
  40249c:	mov	x9, #0xa                   	// #10
  4024a0:	mul	x8, x8, x9
  4024a4:	str	x8, [sp, #48]
  4024a8:	ldur	x8, [x29, #-32]
  4024ac:	ldrb	w10, [x8]
  4024b0:	subs	w10, w10, #0x30
  4024b4:	ldr	x8, [sp, #48]
  4024b8:	add	x8, x8, w10, sxtw
  4024bc:	str	x8, [sp, #48]
  4024c0:	ldur	x8, [x29, #-32]
  4024c4:	add	x8, x8, #0x1
  4024c8:	stur	x8, [x29, #-32]
  4024cc:	b	402460 <yylex+0x244>
  4024d0:	mov	x0, #0x18                  	// #24
  4024d4:	bl	4013c0 <xmalloc@plt>
  4024d8:	ldur	x8, [x29, #-16]
  4024dc:	str	x0, [x8]
  4024e0:	ldur	x8, [x29, #-32]
  4024e4:	ldrb	w9, [x8]
  4024e8:	cmp	w9, #0x2e
  4024ec:	b.ne	4025fc <yylex+0x3e0>  // b.any
  4024f0:	ldur	x8, [x29, #-32]
  4024f4:	ldrb	w9, [x8, #1]
  4024f8:	cmp	w9, #0x30
  4024fc:	b.lt	4025fc <yylex+0x3e0>  // b.tstop
  402500:	ldur	x8, [x29, #-32]
  402504:	ldrb	w9, [x8, #1]
  402508:	cmp	w9, #0x39
  40250c:	b.gt	4025fc <yylex+0x3e0>
  402510:	ldr	x8, [sp, #48]
  402514:	ucvtf	d0, x8
  402518:	str	d0, [sp, #40]
  40251c:	mov	w9, #0xa                   	// #10
  402520:	str	w9, [sp, #36]
  402524:	str	wzr, [sp, #32]
  402528:	ldur	x8, [x29, #-32]
  40252c:	add	x8, x8, #0x1
  402530:	stur	x8, [x29, #-32]
  402534:	ldur	x8, [x29, #-32]
  402538:	ldrb	w9, [x8]
  40253c:	mov	w10, #0x0                   	// #0
  402540:	cmp	w9, #0x30
  402544:	str	w10, [sp, #4]
  402548:	b.lt	402560 <yylex+0x344>  // b.tstop
  40254c:	ldur	x8, [x29, #-32]
  402550:	ldrb	w9, [x8]
  402554:	cmp	w9, #0x39
  402558:	cset	w9, le
  40255c:	str	w9, [sp, #4]
  402560:	ldr	w8, [sp, #4]
  402564:	tbnz	w8, #0, 40256c <yylex+0x350>
  402568:	b	4025c0 <yylex+0x3a4>
  40256c:	ldur	x8, [x29, #-32]
  402570:	ldrb	w9, [x8]
  402574:	subs	w9, w9, #0x30
  402578:	scvtf	d0, w9
  40257c:	ldr	w9, [sp, #36]
  402580:	scvtf	d1, w9
  402584:	fdiv	d0, d0, d1
  402588:	ldr	d1, [sp, #40]
  40258c:	fadd	d0, d1, d0
  402590:	str	d0, [sp, #40]
  402594:	ldr	w9, [sp, #36]
  402598:	mov	w10, #0xa                   	// #10
  40259c:	mul	w9, w9, w10
  4025a0:	str	w9, [sp, #36]
  4025a4:	ldr	w9, [sp, #32]
  4025a8:	add	w9, w9, #0x1
  4025ac:	str	w9, [sp, #32]
  4025b0:	ldur	x8, [x29, #-32]
  4025b4:	add	x8, x8, #0x1
  4025b8:	stur	x8, [x29, #-32]
  4025bc:	b	402534 <yylex+0x318>
  4025c0:	ldur	x8, [x29, #-16]
  4025c4:	ldr	x8, [x8]
  4025c8:	mov	w9, #0x1                   	// #1
  4025cc:	str	w9, [x8]
  4025d0:	ldr	x8, [sp, #40]
  4025d4:	ldur	x10, [x29, #-16]
  4025d8:	ldr	x10, [x10]
  4025dc:	str	x8, [x10, #8]
  4025e0:	ldr	w9, [sp, #32]
  4025e4:	ldur	x8, [x29, #-16]
  4025e8:	ldr	x8, [x8]
  4025ec:	str	w9, [x8, #16]
  4025f0:	mov	w9, #0x10b                 	// #267
  4025f4:	stur	w9, [x29, #-44]
  4025f8:	b	402620 <yylex+0x404>
  4025fc:	ldur	x8, [x29, #-16]
  402600:	ldr	x8, [x8]
  402604:	str	wzr, [x8]
  402608:	ldr	x8, [sp, #48]
  40260c:	ldur	x9, [x29, #-16]
  402610:	ldr	x9, [x9]
  402614:	str	w8, [x9, #8]
  402618:	mov	w8, #0x10a                 	// #266
  40261c:	stur	w8, [x29, #-44]
  402620:	b	402878 <yylex+0x65c>
  402624:	str	xzr, [sp, #56]
  402628:	ldr	x8, [sp, #56]
  40262c:	ldr	x9, [sp, #24]
  402630:	ldr	x10, [x9]
  402634:	cmp	x8, x10
  402638:	b.cc	40266c <yylex+0x450>  // b.lo, b.ul, b.last
  40263c:	ldr	x8, [sp, #24]
  402640:	ldr	x9, [x8]
  402644:	mov	x10, #0x2                   	// #2
  402648:	mul	x9, x10, x9
  40264c:	add	x9, x9, #0xa
  402650:	str	x9, [x8]
  402654:	ldr	x9, [sp, #16]
  402658:	ldr	x0, [x9]
  40265c:	ldr	x1, [x8]
  402660:	bl	401350 <xrealloc@plt>
  402664:	ldr	x8, [sp, #16]
  402668:	str	x0, [x8]
  40266c:	ldur	w8, [x29, #-44]
  402670:	ldr	x9, [sp, #16]
  402674:	ldr	x10, [x9]
  402678:	ldr	x11, [sp, #56]
  40267c:	add	x12, x11, #0x1
  402680:	str	x12, [sp, #56]
  402684:	add	x10, x10, x11
  402688:	strb	w8, [x10]
  40268c:	ldur	x10, [x29, #-32]
  402690:	ldrb	w8, [x10]
  402694:	stur	w8, [x29, #-44]
  402698:	ldur	w8, [x29, #-44]
  40269c:	subs	w8, w8, #0x61
  4026a0:	cmp	w8, #0x19
  4026a4:	cset	w8, ls  // ls = plast
  4026a8:	eor	w8, w8, #0x1
  4026ac:	tbnz	w8, #0, 4026c4 <yylex+0x4a8>
  4026b0:	b	4026b4 <yylex+0x498>
  4026b4:	ldur	x8, [x29, #-32]
  4026b8:	add	x8, x8, #0x1
  4026bc:	stur	x8, [x29, #-32]
  4026c0:	b	402628 <yylex+0x40c>
  4026c4:	ldr	x8, [sp, #56]
  4026c8:	ldr	x9, [sp, #24]
  4026cc:	ldr	x10, [x9]
  4026d0:	cmp	x8, x10
  4026d4:	b.cc	402708 <yylex+0x4ec>  // b.lo, b.ul, b.last
  4026d8:	ldr	x8, [sp, #24]
  4026dc:	ldr	x9, [x8]
  4026e0:	mov	x10, #0x2                   	// #2
  4026e4:	mul	x9, x10, x9
  4026e8:	add	x9, x9, #0xa
  4026ec:	str	x9, [x8]
  4026f0:	ldr	x9, [sp, #16]
  4026f4:	ldr	x0, [x9]
  4026f8:	ldr	x1, [x8]
  4026fc:	bl	401350 <xrealloc@plt>
  402700:	ldr	x8, [sp, #16]
  402704:	str	x0, [x8]
  402708:	ldr	x8, [sp, #16]
  40270c:	ldr	x9, [x8]
  402710:	ldr	x10, [sp, #56]
  402714:	add	x9, x9, x10
  402718:	mov	w11, #0x0                   	// #0
  40271c:	strb	w11, [x9]
  402720:	ldr	x9, [sp, #56]
  402724:	cmp	x9, #0x1
  402728:	b.ne	4027c4 <yylex+0x5a8>  // b.any
  40272c:	ldr	x8, [sp, #16]
  402730:	ldr	x9, [x8]
  402734:	ldrb	w10, [x9]
  402738:	cmp	w10, #0x66
  40273c:	str	w10, [sp]
  402740:	b.eq	402798 <yylex+0x57c>  // b.none
  402744:	b	402748 <yylex+0x52c>
  402748:	ldr	w8, [sp]
  40274c:	cmp	w8, #0x69
  402750:	b.eq	402798 <yylex+0x57c>  // b.none
  402754:	b	402758 <yylex+0x53c>
  402758:	ldr	w8, [sp]
  40275c:	cmp	w8, #0x6e
  402760:	b.eq	402798 <yylex+0x57c>  // b.none
  402764:	b	402768 <yylex+0x54c>
  402768:	ldr	w8, [sp]
  40276c:	cmp	w8, #0x74
  402770:	b.eq	402798 <yylex+0x57c>  // b.none
  402774:	b	402778 <yylex+0x55c>
  402778:	ldr	w8, [sp]
  40277c:	subs	w9, w8, #0x76
  402780:	mov	w10, #0x1                   	// #1
  402784:	cmp	w9, #0x1
  402788:	cset	w9, ls  // ls = plast
  40278c:	eor	w9, w9, w10
  402790:	tbnz	w9, #0, 4027c4 <yylex+0x5a8>
  402794:	b	402798 <yylex+0x57c>
  402798:	ldur	x8, [x29, #-32]
  40279c:	ldur	x9, [x29, #-24]
  4027a0:	str	x8, [x9]
  4027a4:	ldr	x8, [sp, #16]
  4027a8:	ldr	x9, [x8]
  4027ac:	ldrb	w10, [x9]
  4027b0:	ldur	x9, [x29, #-16]
  4027b4:	str	w10, [x9]
  4027b8:	mov	w10, #0x10c                 	// #268
  4027bc:	stur	w10, [x29, #-4]
  4027c0:	b	40288c <yylex+0x670>
  4027c4:	ldr	x8, [sp, #16]
  4027c8:	ldr	x0, [x8]
  4027cc:	adrp	x1, 405000 <usage+0x100>
  4027d0:	add	x1, x1, #0xa6e
  4027d4:	bl	401470 <strcmp@plt>
  4027d8:	cbnz	w0, 4027f4 <yylex+0x5d8>
  4027dc:	ldur	x8, [x29, #-32]
  4027e0:	ldur	x9, [x29, #-24]
  4027e4:	str	x8, [x9]
  4027e8:	mov	w10, #0x102                 	// #258
  4027ec:	stur	w10, [x29, #-4]
  4027f0:	b	40288c <yylex+0x670>
  4027f4:	ldr	x8, [sp, #16]
  4027f8:	ldr	x0, [x8]
  4027fc:	adrp	x1, 405000 <usage+0x100>
  402800:	add	x1, x1, #0x9e5
  402804:	bl	401470 <strcmp@plt>
  402808:	cbnz	w0, 402824 <yylex+0x608>
  40280c:	ldur	x8, [x29, #-32]
  402810:	ldur	x9, [x29, #-24]
  402814:	str	x8, [x9]
  402818:	mov	w10, #0x103                 	// #259
  40281c:	stur	w10, [x29, #-4]
  402820:	b	40288c <yylex+0x670>
  402824:	ldr	x8, [sp, #16]
  402828:	ldr	x0, [x8]
  40282c:	bl	4013d0 <xstrdup@plt>
  402830:	ldur	x8, [x29, #-16]
  402834:	str	x0, [x8]
  402838:	mov	w9, #0x109                 	// #265
  40283c:	stur	w9, [x29, #-44]
  402840:	b	402878 <yylex+0x65c>
  402844:	ldur	x8, [x29, #-32]
  402848:	ldrb	w9, [x8]
  40284c:	cmp	w9, #0x3d
  402850:	b.ne	40286c <yylex+0x650>  // b.any
  402854:	ldur	x8, [x29, #-32]
  402858:	add	x8, x8, #0x1
  40285c:	stur	x8, [x29, #-32]
  402860:	mov	w9, #0x21                  	// #33
  402864:	stur	w9, [x29, #-44]
  402868:	b	402874 <yylex+0x658>
  40286c:	mov	w8, #0x100                 	// #256
  402870:	stur	w8, [x29, #-44]
  402874:	b	402878 <yylex+0x65c>
  402878:	ldur	x8, [x29, #-32]
  40287c:	ldur	x9, [x29, #-24]
  402880:	str	x8, [x9]
  402884:	ldur	w10, [x29, #-44]
  402888:	stur	w10, [x29, #-4]
  40288c:	ldur	w0, [x29, #-4]
  402890:	ldp	x29, x30, [sp, #112]
  402894:	add	sp, sp, #0x80
  402898:	ret

000000000040289c <new_rule>:
  40289c:	sub	sp, sp, #0x30
  4028a0:	stp	x29, x30, [sp, #32]
  4028a4:	add	x29, sp, #0x20
  4028a8:	mov	x8, #0x10                  	// #16
  4028ac:	stur	x0, [x29, #-8]
  4028b0:	str	x1, [sp, #16]
  4028b4:	mov	x0, x8
  4028b8:	bl	4013c0 <xmalloc@plt>
  4028bc:	str	x0, [sp, #8]
  4028c0:	ldur	x8, [x29, #-8]
  4028c4:	ldr	x9, [sp, #8]
  4028c8:	str	x8, [x9]
  4028cc:	ldr	x8, [sp, #16]
  4028d0:	ldr	x9, [sp, #8]
  4028d4:	str	x8, [x9, #8]
  4028d8:	ldr	x0, [sp, #8]
  4028dc:	ldp	x29, x30, [sp, #32]
  4028e0:	add	sp, sp, #0x30
  4028e4:	ret

00000000004028e8 <new_branch_condition>:
  4028e8:	sub	sp, sp, #0x30
  4028ec:	stp	x29, x30, [sp, #32]
  4028f0:	add	x29, sp, #0x20
  4028f4:	mov	x8, #0x18                  	// #24
  4028f8:	stur	w0, [x29, #-4]
  4028fc:	str	x1, [sp, #16]
  402900:	str	x2, [sp, #8]
  402904:	mov	x0, x8
  402908:	bl	4013c0 <xmalloc@plt>
  40290c:	str	x0, [sp]
  402910:	ldur	w9, [x29, #-4]
  402914:	ldr	x8, [sp]
  402918:	str	w9, [x8]
  40291c:	ldr	x8, [sp, #16]
  402920:	ldr	x10, [sp]
  402924:	str	x8, [x10, #8]
  402928:	ldr	x8, [sp, #8]
  40292c:	ldr	x10, [sp]
  402930:	str	x8, [x10, #16]
  402934:	ldr	x0, [sp]
  402938:	ldp	x29, x30, [sp, #32]
  40293c:	add	sp, sp, #0x30
  402940:	ret

0000000000402944 <new_leaf_condition>:
  402944:	sub	sp, sp, #0x30
  402948:	stp	x29, x30, [sp, #32]
  40294c:	add	x29, sp, #0x20
  402950:	mov	x8, #0x18                  	// #24
  402954:	mov	w9, #0x2                   	// #2
  402958:	stur	x0, [x29, #-8]
  40295c:	mov	x0, x8
  402960:	str	w9, [sp, #12]
  402964:	bl	4013c0 <xmalloc@plt>
  402968:	str	x0, [sp, #16]
  40296c:	ldr	x8, [sp, #16]
  402970:	ldr	w9, [sp, #12]
  402974:	str	w9, [x8]
  402978:	ldur	x8, [x29, #-8]
  40297c:	ldr	x10, [sp, #16]
  402980:	str	x8, [x10, #8]
  402984:	ldr	x0, [sp, #16]
  402988:	ldp	x29, x30, [sp, #32]
  40298c:	add	sp, sp, #0x30
  402990:	ret

0000000000402994 <new_relation>:
  402994:	sub	sp, sp, #0x30
  402998:	stp	x29, x30, [sp, #32]
  40299c:	add	x29, sp, #0x20
  4029a0:	mov	x8, #0x18                  	// #24
  4029a4:	stur	x0, [x29, #-8]
  4029a8:	stur	w1, [x29, #-12]
  4029ac:	str	x2, [sp, #8]
  4029b0:	mov	x0, x8
  4029b4:	bl	4013c0 <xmalloc@plt>
  4029b8:	str	x0, [sp]
  4029bc:	ldur	x8, [x29, #-8]
  4029c0:	ldr	x9, [sp]
  4029c4:	str	x8, [x9]
  4029c8:	ldur	w10, [x29, #-12]
  4029cc:	ldr	x8, [sp]
  4029d0:	str	w10, [x8, #8]
  4029d4:	ldr	x8, [sp, #8]
  4029d8:	ldr	x9, [sp]
  4029dc:	str	x8, [x9, #16]
  4029e0:	ldr	x0, [sp]
  4029e4:	ldp	x29, x30, [sp, #32]
  4029e8:	add	sp, sp, #0x30
  4029ec:	ret

00000000004029f0 <new_expression>:
  4029f0:	sub	sp, sp, #0x20
  4029f4:	stp	x29, x30, [sp, #16]
  4029f8:	add	x29, sp, #0x10
  4029fc:	mov	x8, #0x8                   	// #8
  402a00:	stur	w0, [x29, #-4]
  402a04:	str	w1, [sp, #8]
  402a08:	mov	x0, x8
  402a0c:	bl	4013c0 <xmalloc@plt>
  402a10:	str	x0, [sp]
  402a14:	ldur	w9, [x29, #-4]
  402a18:	ldr	x8, [sp]
  402a1c:	str	w9, [x8]
  402a20:	ldr	w9, [sp, #8]
  402a24:	ldr	x8, [sp]
  402a28:	str	w9, [x8, #4]
  402a2c:	ldr	x0, [sp]
  402a30:	ldp	x29, x30, [sp, #16]
  402a34:	add	sp, sp, #0x20
  402a38:	ret

0000000000402a3c <add_range>:
  402a3c:	sub	sp, sp, #0x20
  402a40:	stp	x29, x30, [sp, #16]
  402a44:	add	x29, sp, #0x10
  402a48:	str	x0, [sp, #8]
  402a4c:	str	x1, [sp]
  402a50:	ldr	x8, [sp, #8]
  402a54:	ldr	x8, [x8, #8]
  402a58:	ldr	x9, [sp, #8]
  402a5c:	ldr	x9, [x9, #16]
  402a60:	cmp	x8, x9
  402a64:	b.ne	402aa8 <add_range+0x6c>  // b.any
  402a68:	ldr	x8, [sp, #8]
  402a6c:	ldr	x8, [x8, #16]
  402a70:	mov	x9, #0x2                   	// #2
  402a74:	mul	x8, x8, x9
  402a78:	add	x8, x8, #0x1
  402a7c:	ldr	x9, [sp, #8]
  402a80:	str	x8, [x9, #16]
  402a84:	ldr	x8, [sp, #8]
  402a88:	ldr	x0, [x8]
  402a8c:	ldr	x8, [sp, #8]
  402a90:	ldr	x8, [x8, #16]
  402a94:	mov	x9, #0x8                   	// #8
  402a98:	mul	x1, x9, x8
  402a9c:	bl	401350 <xrealloc@plt>
  402aa0:	ldr	x8, [sp, #8]
  402aa4:	str	x0, [x8]
  402aa8:	ldr	x8, [sp]
  402aac:	ldr	x9, [sp, #8]
  402ab0:	ldr	x9, [x9]
  402ab4:	ldr	x10, [sp, #8]
  402ab8:	mov	x11, #0x8                   	// #8
  402abc:	ldr	x12, [x10, #8]
  402ac0:	add	x13, x12, #0x1
  402ac4:	str	x13, [x10, #8]
  402ac8:	mul	x10, x11, x12
  402acc:	add	x9, x9, x10
  402ad0:	str	x8, [x9]
  402ad4:	ldr	x0, [sp, #8]
  402ad8:	ldp	x29, x30, [sp, #16]
  402adc:	add	sp, sp, #0x20
  402ae0:	ret

0000000000402ae4 <new_range>:
  402ae4:	sub	sp, sp, #0x30
  402ae8:	stp	x29, x30, [sp, #32]
  402aec:	add	x29, sp, #0x20
  402af0:	mov	x8, #0x10                  	// #16
  402af4:	stur	x0, [x29, #-8]
  402af8:	str	x1, [sp, #16]
  402afc:	mov	x0, x8
  402b00:	bl	4013c0 <xmalloc@plt>
  402b04:	str	x0, [sp, #8]
  402b08:	ldur	x8, [x29, #-8]
  402b0c:	ldr	x9, [sp, #8]
  402b10:	str	x8, [x9]
  402b14:	ldr	x8, [sp, #16]
  402b18:	ldr	x9, [sp, #8]
  402b1c:	str	x8, [x9, #8]
  402b20:	ldr	x0, [sp, #8]
  402b24:	ldp	x29, x30, [sp, #32]
  402b28:	add	sp, sp, #0x30
  402b2c:	ret

0000000000402b30 <yyerror>:
  402b30:	sub	sp, sp, #0x20
  402b34:	stp	x29, x30, [sp, #16]
  402b38:	add	x29, sp, #0x10
  402b3c:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  402b40:	add	x8, x8, #0x1a8
  402b44:	adrp	x9, 405000 <usage+0x100>
  402b48:	add	x9, x9, #0xb66
  402b4c:	str	x0, [sp, #8]
  402b50:	str	x1, [sp]
  402b54:	ldr	x0, [x8]
  402b58:	ldr	x2, [sp]
  402b5c:	mov	x1, x9
  402b60:	bl	401560 <fprintf@plt>
  402b64:	ldp	x29, x30, [sp, #16]
  402b68:	add	sp, sp, #0x20
  402b6c:	ret

0000000000402b70 <yydestruct>:
  402b70:	sub	sp, sp, #0x40
  402b74:	stp	x29, x30, [sp, #48]
  402b78:	add	x29, sp, #0x30
  402b7c:	stur	x0, [x29, #-8]
  402b80:	stur	w1, [x29, #-12]
  402b84:	str	x2, [sp, #24]
  402b88:	str	x3, [sp, #16]
  402b8c:	ldur	x8, [x29, #-8]
  402b90:	cbnz	x8, 402ba0 <yydestruct+0x30>
  402b94:	adrp	x8, 405000 <usage+0x100>
  402b98:	add	x8, x8, #0xa49
  402b9c:	stur	x8, [x29, #-8]
  402ba0:	ldur	w8, [x29, #-12]
  402ba4:	subs	w8, w8, #0xa
  402ba8:	mov	w9, w8
  402bac:	ubfx	x9, x9, #0, #32
  402bb0:	cmp	x9, #0x14
  402bb4:	str	x9, [sp, #8]
  402bb8:	b.hi	402c78 <yydestruct+0x108>  // b.pmore
  402bbc:	adrp	x8, 405000 <usage+0x100>
  402bc0:	add	x8, x8, #0x6fc
  402bc4:	ldr	x11, [sp, #8]
  402bc8:	ldrsw	x10, [x8, x11, lsl #2]
  402bcc:	add	x9, x8, x10
  402bd0:	br	x9
  402bd4:	ldr	x8, [sp, #24]
  402bd8:	ldr	x0, [x8]
  402bdc:	bl	4014c0 <free@plt>
  402be0:	b	402c78 <yydestruct+0x108>
  402be4:	ldr	x8, [sp, #24]
  402be8:	ldr	x0, [x8]
  402bec:	bl	4014c0 <free@plt>
  402bf0:	b	402c78 <yydestruct+0x108>
  402bf4:	ldr	x8, [sp, #24]
  402bf8:	ldr	x0, [x8]
  402bfc:	bl	4014c0 <free@plt>
  402c00:	b	402c78 <yydestruct+0x108>
  402c04:	b	402c78 <yydestruct+0x108>
  402c08:	ldr	x8, [sp, #24]
  402c0c:	ldr	x0, [x8]
  402c10:	bl	402d4c <cldr_plural_condition_free>
  402c14:	b	402c78 <yydestruct+0x108>
  402c18:	ldr	x8, [sp, #24]
  402c1c:	ldr	x0, [x8]
  402c20:	bl	402d4c <cldr_plural_condition_free>
  402c24:	b	402c78 <yydestruct+0x108>
  402c28:	ldr	x8, [sp, #24]
  402c2c:	ldr	x0, [x8]
  402c30:	bl	402dc4 <cldr_plural_relation_free>
  402c34:	b	402c78 <yydestruct+0x108>
  402c38:	ldr	x8, [sp, #24]
  402c3c:	ldr	x0, [x8]
  402c40:	bl	4014c0 <free@plt>
  402c44:	b	402c78 <yydestruct+0x108>
  402c48:	ldr	x8, [sp, #24]
  402c4c:	ldr	x0, [x8]
  402c50:	bl	402cd8 <cldr_plural_range_list_free>
  402c54:	b	402c78 <yydestruct+0x108>
  402c58:	ldr	x8, [sp, #24]
  402c5c:	ldr	x0, [x8]
  402c60:	bl	402c84 <cldr_plural_range_free>
  402c64:	b	402c78 <yydestruct+0x108>
  402c68:	ldr	x8, [sp, #24]
  402c6c:	ldr	x0, [x8]
  402c70:	bl	402c84 <cldr_plural_range_free>
  402c74:	b	402c78 <yydestruct+0x108>
  402c78:	ldp	x29, x30, [sp, #48]
  402c7c:	add	sp, sp, #0x40
  402c80:	ret

0000000000402c84 <cldr_plural_range_free>:
  402c84:	sub	sp, sp, #0x20
  402c88:	stp	x29, x30, [sp, #16]
  402c8c:	add	x29, sp, #0x10
  402c90:	str	x0, [sp, #8]
  402c94:	ldr	x8, [sp, #8]
  402c98:	ldr	x8, [x8]
  402c9c:	ldr	x9, [sp, #8]
  402ca0:	ldr	x9, [x9, #8]
  402ca4:	cmp	x8, x9
  402ca8:	b.eq	402cb8 <cldr_plural_range_free+0x34>  // b.none
  402cac:	ldr	x8, [sp, #8]
  402cb0:	ldr	x0, [x8]
  402cb4:	bl	4014c0 <free@plt>
  402cb8:	ldr	x8, [sp, #8]
  402cbc:	ldr	x0, [x8, #8]
  402cc0:	bl	4014c0 <free@plt>
  402cc4:	ldr	x0, [sp, #8]
  402cc8:	bl	4014c0 <free@plt>
  402ccc:	ldp	x29, x30, [sp, #16]
  402cd0:	add	sp, sp, #0x20
  402cd4:	ret

0000000000402cd8 <cldr_plural_range_list_free>:
  402cd8:	sub	sp, sp, #0x20
  402cdc:	stp	x29, x30, [sp, #16]
  402ce0:	add	x29, sp, #0x10
  402ce4:	str	x0, [sp, #8]
  402ce8:	ldr	x8, [sp, #8]
  402cec:	ldr	x9, [x8, #8]
  402cf0:	subs	x10, x9, #0x1
  402cf4:	str	x10, [x8, #8]
  402cf8:	cmp	x9, #0x0
  402cfc:	cset	w11, ls  // ls = plast
  402d00:	tbnz	w11, #0, 402d2c <cldr_plural_range_list_free+0x54>
  402d04:	ldr	x8, [sp, #8]
  402d08:	ldr	x8, [x8]
  402d0c:	ldr	x9, [sp, #8]
  402d10:	mov	x10, #0x8                   	// #8
  402d14:	ldr	x9, [x9, #8]
  402d18:	mul	x9, x10, x9
  402d1c:	add	x8, x8, x9
  402d20:	ldr	x0, [x8]
  402d24:	bl	402c84 <cldr_plural_range_free>
  402d28:	b	402ce8 <cldr_plural_range_list_free+0x10>
  402d2c:	ldr	x8, [sp, #8]
  402d30:	ldr	x0, [x8]
  402d34:	bl	4014c0 <free@plt>
  402d38:	ldr	x0, [sp, #8]
  402d3c:	bl	4014c0 <free@plt>
  402d40:	ldp	x29, x30, [sp, #16]
  402d44:	add	sp, sp, #0x20
  402d48:	ret

0000000000402d4c <cldr_plural_condition_free>:
  402d4c:	sub	sp, sp, #0x20
  402d50:	stp	x29, x30, [sp, #16]
  402d54:	add	x29, sp, #0x10
  402d58:	str	x0, [sp, #8]
  402d5c:	ldr	x8, [sp, #8]
  402d60:	ldr	w9, [x8]
  402d64:	cbz	w9, 402d78 <cldr_plural_condition_free+0x2c>
  402d68:	ldr	x8, [sp, #8]
  402d6c:	ldr	w9, [x8]
  402d70:	cmp	w9, #0x1
  402d74:	b.ne	402d94 <cldr_plural_condition_free+0x48>  // b.any
  402d78:	ldr	x8, [sp, #8]
  402d7c:	ldr	x0, [x8, #8]
  402d80:	bl	402d4c <cldr_plural_condition_free>
  402d84:	ldr	x8, [sp, #8]
  402d88:	ldr	x0, [x8, #16]
  402d8c:	bl	402d4c <cldr_plural_condition_free>
  402d90:	b	402db0 <cldr_plural_condition_free+0x64>
  402d94:	ldr	x8, [sp, #8]
  402d98:	ldr	w9, [x8]
  402d9c:	cmp	w9, #0x2
  402da0:	b.ne	402db0 <cldr_plural_condition_free+0x64>  // b.any
  402da4:	ldr	x8, [sp, #8]
  402da8:	ldr	x0, [x8, #8]
  402dac:	bl	402dc4 <cldr_plural_relation_free>
  402db0:	ldr	x0, [sp, #8]
  402db4:	bl	4014c0 <free@plt>
  402db8:	ldp	x29, x30, [sp, #16]
  402dbc:	add	sp, sp, #0x20
  402dc0:	ret

0000000000402dc4 <cldr_plural_relation_free>:
  402dc4:	sub	sp, sp, #0x20
  402dc8:	stp	x29, x30, [sp, #16]
  402dcc:	add	x29, sp, #0x10
  402dd0:	str	x0, [sp, #8]
  402dd4:	ldr	x8, [sp, #8]
  402dd8:	ldr	x0, [x8]
  402ddc:	bl	4014c0 <free@plt>
  402de0:	ldr	x8, [sp, #8]
  402de4:	ldr	x0, [x8, #16]
  402de8:	bl	402cd8 <cldr_plural_range_list_free>
  402dec:	ldr	x0, [sp, #8]
  402df0:	bl	4014c0 <free@plt>
  402df4:	ldp	x29, x30, [sp, #16]
  402df8:	add	sp, sp, #0x20
  402dfc:	ret

0000000000402e00 <cldr_plural_rule_list_free>:
  402e00:	sub	sp, sp, #0x20
  402e04:	stp	x29, x30, [sp, #16]
  402e08:	add	x29, sp, #0x10
  402e0c:	str	x0, [sp, #8]
  402e10:	ldr	x8, [sp, #8]
  402e14:	ldr	x9, [x8, #8]
  402e18:	subs	x10, x9, #0x1
  402e1c:	str	x10, [x8, #8]
  402e20:	cmp	x9, #0x0
  402e24:	cset	w11, ls  // ls = plast
  402e28:	tbnz	w11, #0, 402e54 <cldr_plural_rule_list_free+0x54>
  402e2c:	ldr	x8, [sp, #8]
  402e30:	ldr	x8, [x8]
  402e34:	ldr	x9, [sp, #8]
  402e38:	mov	x10, #0x8                   	// #8
  402e3c:	ldr	x9, [x9, #8]
  402e40:	mul	x9, x10, x9
  402e44:	add	x8, x8, x9
  402e48:	ldr	x0, [x8]
  402e4c:	bl	402e74 <cldr_plural_rule_free>
  402e50:	b	402e10 <cldr_plural_rule_list_free+0x10>
  402e54:	ldr	x8, [sp, #8]
  402e58:	ldr	x0, [x8]
  402e5c:	bl	4014c0 <free@plt>
  402e60:	ldr	x0, [sp, #8]
  402e64:	bl	4014c0 <free@plt>
  402e68:	ldp	x29, x30, [sp, #16]
  402e6c:	add	sp, sp, #0x20
  402e70:	ret

0000000000402e74 <cldr_plural_rule_free>:
  402e74:	sub	sp, sp, #0x20
  402e78:	stp	x29, x30, [sp, #16]
  402e7c:	add	x29, sp, #0x10
  402e80:	str	x0, [sp, #8]
  402e84:	ldr	x8, [sp, #8]
  402e88:	ldr	x0, [x8]
  402e8c:	bl	4014c0 <free@plt>
  402e90:	ldr	x8, [sp, #8]
  402e94:	ldr	x0, [x8, #8]
  402e98:	bl	402d4c <cldr_plural_condition_free>
  402e9c:	ldr	x0, [sp, #8]
  402ea0:	bl	4014c0 <free@plt>
  402ea4:	ldp	x29, x30, [sp, #16]
  402ea8:	add	sp, sp, #0x20
  402eac:	ret

0000000000402eb0 <cldr_plural_parse>:
  402eb0:	sub	sp, sp, #0x50
  402eb4:	stp	x29, x30, [sp, #64]
  402eb8:	add	x29, sp, #0x40
  402ebc:	mov	x8, #0x18                  	// #24
  402ec0:	add	x9, sp, #0x18
  402ec4:	stur	x0, [x29, #-16]
  402ec8:	str	xzr, [sp, #24]
  402ecc:	str	xzr, [sp, #32]
  402ed0:	str	xzr, [sp, #40]
  402ed4:	ldur	x10, [x29, #-16]
  402ed8:	str	x10, [sp, #24]
  402edc:	ldur	x10, [x29, #-16]
  402ee0:	ldur	x0, [x29, #-16]
  402ee4:	str	x8, [sp, #16]
  402ee8:	str	x9, [sp, #8]
  402eec:	str	x10, [sp]
  402ef0:	bl	401280 <strlen@plt>
  402ef4:	ldr	x8, [sp]
  402ef8:	add	x9, x8, x0
  402efc:	ldr	x10, [sp, #8]
  402f00:	str	x9, [x10, #8]
  402f04:	ldr	x0, [sp, #16]
  402f08:	bl	4013c0 <xmalloc@plt>
  402f0c:	ldr	x8, [sp, #8]
  402f10:	str	x0, [x8, #16]
  402f14:	ldr	x9, [x8, #16]
  402f18:	str	xzr, [x9]
  402f1c:	str	xzr, [x9, #8]
  402f20:	str	xzr, [x9, #16]
  402f24:	mov	x0, x8
  402f28:	bl	40168c <yyparse>
  402f2c:	cbz	w0, 402f3c <cldr_plural_parse+0x8c>
  402f30:	mov	x8, xzr
  402f34:	stur	x8, [x29, #-8]
  402f38:	b	402f48 <cldr_plural_parse+0x98>
  402f3c:	add	x8, sp, #0x18
  402f40:	ldr	x8, [x8, #16]
  402f44:	stur	x8, [x29, #-8]
  402f48:	ldur	x0, [x29, #-8]
  402f4c:	ldp	x29, x30, [sp, #64]
  402f50:	add	sp, sp, #0x50
  402f54:	ret

0000000000402f58 <cldr_plural_rule_list_print>:
  402f58:	sub	sp, sp, #0xa0
  402f5c:	stp	x29, x30, [sp, #144]
  402f60:	add	x29, sp, #0x90
  402f64:	stur	x0, [x29, #-8]
  402f68:	stur	x1, [x29, #-16]
  402f6c:	stur	wzr, [x29, #-44]
  402f70:	stur	xzr, [x29, #-24]
  402f74:	ldur	x8, [x29, #-24]
  402f78:	ldur	x9, [x29, #-8]
  402f7c:	ldr	x9, [x9, #8]
  402f80:	cmp	x8, x9
  402f84:	b.cs	402fc4 <cldr_plural_rule_list_print+0x6c>  // b.hs, b.nlast
  402f88:	ldur	x8, [x29, #-8]
  402f8c:	ldr	x8, [x8]
  402f90:	ldur	x9, [x29, #-24]
  402f94:	mov	x10, #0x8                   	// #8
  402f98:	mul	x9, x10, x9
  402f9c:	add	x8, x8, x9
  402fa0:	ldr	x8, [x8]
  402fa4:	stur	x8, [x29, #-56]
  402fa8:	ldur	x8, [x29, #-56]
  402fac:	ldr	x0, [x8, #8]
  402fb0:	bl	403550 <eval_condition>
  402fb4:	ldur	x8, [x29, #-24]
  402fb8:	add	x8, x8, #0x1
  402fbc:	stur	x8, [x29, #-24]
  402fc0:	b	402f74 <cldr_plural_rule_list_print+0x1c>
  402fc4:	stur	xzr, [x29, #-24]
  402fc8:	ldur	x8, [x29, #-24]
  402fcc:	ldur	x9, [x29, #-8]
  402fd0:	ldr	x9, [x9, #8]
  402fd4:	cmp	x8, x9
  402fd8:	b.cs	403054 <cldr_plural_rule_list_print+0xfc>  // b.hs, b.nlast
  402fdc:	ldur	x8, [x29, #-8]
  402fe0:	ldr	x8, [x8]
  402fe4:	ldur	x9, [x29, #-24]
  402fe8:	mov	x10, #0x8                   	// #8
  402fec:	mul	x9, x10, x9
  402ff0:	add	x8, x8, x9
  402ff4:	ldr	x8, [x8]
  402ff8:	stur	x8, [x29, #-64]
  402ffc:	ldur	x8, [x29, #-64]
  403000:	ldr	x0, [x8, #8]
  403004:	bl	4038b8 <find_largest_modulus>
  403008:	stur	w0, [x29, #-68]
  40300c:	ldur	x8, [x29, #-64]
  403010:	ldr	x0, [x8, #8]
  403014:	bl	403970 <find_largest_number>
  403018:	str	w0, [sp, #72]
  40301c:	ldur	w11, [x29, #-68]
  403020:	ldr	w12, [sp, #72]
  403024:	cmp	w11, w12
  403028:	b.lt	403044 <cldr_plural_rule_list_print+0xec>  // b.tstop
  40302c:	ldur	w8, [x29, #-68]
  403030:	ldur	w9, [x29, #-44]
  403034:	cmp	w8, w9
  403038:	b.le	403044 <cldr_plural_rule_list_print+0xec>
  40303c:	ldur	w8, [x29, #-68]
  403040:	stur	w8, [x29, #-44]
  403044:	ldur	x8, [x29, #-24]
  403048:	add	x8, x8, #0x1
  40304c:	stur	x8, [x29, #-24]
  403050:	b	402fc8 <cldr_plural_rule_list_print+0x70>
  403054:	ldur	w8, [x29, #-44]
  403058:	cmp	w8, #0x0
  40305c:	cset	w8, le
  403060:	tbnz	w8, #0, 4031d4 <cldr_plural_rule_list_print+0x27c>
  403064:	ldursw	x0, [x29, #-44]
  403068:	bl	4013c0 <xmalloc@plt>
  40306c:	str	x0, [sp, #64]
  403070:	ldr	x0, [sp, #64]
  403074:	ldursw	x8, [x29, #-44]
  403078:	mov	x9, #0x1                   	// #1
  40307c:	mul	x2, x9, x8
  403080:	mov	w10, wzr
  403084:	mov	w1, w10
  403088:	bl	4013b0 <memset@plt>
  40308c:	stur	xzr, [x29, #-24]
  403090:	ldur	x8, [x29, #-24]
  403094:	ldur	x9, [x29, #-8]
  403098:	ldr	x9, [x9, #8]
  40309c:	cmp	x8, x9
  4030a0:	b.cs	403188 <cldr_plural_rule_list_print+0x230>  // b.hs, b.nlast
  4030a4:	ldur	x8, [x29, #-8]
  4030a8:	ldr	x8, [x8]
  4030ac:	ldur	x9, [x29, #-24]
  4030b0:	mov	x10, #0x8                   	// #8
  4030b4:	mul	x9, x10, x9
  4030b8:	add	x8, x8, x9
  4030bc:	ldr	x8, [x8]
  4030c0:	str	x8, [sp, #56]
  4030c4:	str	wzr, [sp, #52]
  4030c8:	ldr	w8, [sp, #52]
  4030cc:	ldur	w9, [x29, #-44]
  4030d0:	cmp	w8, w9
  4030d4:	b.ge	403124 <cldr_plural_rule_list_print+0x1cc>  // b.tcont
  4030d8:	ldr	x8, [sp, #56]
  4030dc:	ldr	x0, [x8, #8]
  4030e0:	ldr	w9, [sp, #52]
  4030e4:	add	w1, w9, #0x1
  4030e8:	bl	403aec <apply_condition>
  4030ec:	and	w9, w0, #0x1
  4030f0:	strb	w9, [sp, #51]
  4030f4:	ldrb	w9, [sp, #51]
  4030f8:	tbnz	w9, #0, 403100 <cldr_plural_rule_list_print+0x1a8>
  4030fc:	b	403114 <cldr_plural_rule_list_print+0x1bc>
  403100:	ldr	x8, [sp, #64]
  403104:	ldrsw	x9, [sp, #52]
  403108:	add	x8, x8, x9
  40310c:	mov	w10, #0x1                   	// #1
  403110:	strb	w10, [x8]
  403114:	ldr	w8, [sp, #52]
  403118:	add	w8, w8, #0x1
  40311c:	str	w8, [sp, #52]
  403120:	b	4030c8 <cldr_plural_rule_list_print+0x170>
  403124:	str	wzr, [sp, #52]
  403128:	ldr	w8, [sp, #52]
  40312c:	ldur	w9, [x29, #-44]
  403130:	cmp	w8, w9
  403134:	b.ge	403164 <cldr_plural_rule_list_print+0x20c>  // b.tcont
  403138:	ldr	x8, [sp, #64]
  40313c:	ldrsw	x9, [sp, #52]
  403140:	add	x8, x8, x9
  403144:	ldrb	w10, [x8]
  403148:	and	w10, w10, #0x1
  40314c:	cbnz	w10, 403154 <cldr_plural_rule_list_print+0x1fc>
  403150:	b	403164 <cldr_plural_rule_list_print+0x20c>
  403154:	ldr	w8, [sp, #52]
  403158:	add	w8, w8, #0x1
  40315c:	str	w8, [sp, #52]
  403160:	b	403128 <cldr_plural_rule_list_print+0x1d0>
  403164:	ldr	w8, [sp, #52]
  403168:	ldur	w9, [x29, #-44]
  40316c:	cmp	w8, w9
  403170:	b.ne	403178 <cldr_plural_rule_list_print+0x220>  // b.any
  403174:	b	403188 <cldr_plural_rule_list_print+0x230>
  403178:	ldur	x8, [x29, #-24]
  40317c:	add	x8, x8, #0x1
  403180:	stur	x8, [x29, #-24]
  403184:	b	403090 <cldr_plural_rule_list_print+0x138>
  403188:	ldr	x0, [sp, #64]
  40318c:	bl	4014c0 <free@plt>
  403190:	ldur	x8, [x29, #-24]
  403194:	ldur	x9, [x29, #-8]
  403198:	ldr	x9, [x9, #8]
  40319c:	cmp	x8, x9
  4031a0:	b.cs	4031d4 <cldr_plural_rule_list_print+0x27c>  // b.hs, b.nlast
  4031a4:	ldur	x8, [x29, #-8]
  4031a8:	ldr	x8, [x8]
  4031ac:	ldur	x9, [x29, #-8]
  4031b0:	mov	x10, #0x8                   	// #8
  4031b4:	ldr	x11, [x9, #8]
  4031b8:	subs	x11, x11, #0x1
  4031bc:	str	x11, [x9, #8]
  4031c0:	mul	x9, x10, x11
  4031c4:	add	x8, x8, x9
  4031c8:	ldr	x0, [x8]
  4031cc:	bl	402e74 <cldr_plural_rule_free>
  4031d0:	b	403190 <cldr_plural_rule_list_print+0x238>
  4031d4:	stur	xzr, [x29, #-24]
  4031d8:	mov	x8, #0x1                   	// #1
  4031dc:	stur	x8, [x29, #-40]
  4031e0:	ldur	x8, [x29, #-24]
  4031e4:	ldur	x9, [x29, #-8]
  4031e8:	ldr	x9, [x9, #8]
  4031ec:	cmp	x8, x9
  4031f0:	b.cs	403268 <cldr_plural_rule_list_print+0x310>  // b.hs, b.nlast
  4031f4:	ldur	x8, [x29, #-8]
  4031f8:	ldr	x8, [x8]
  4031fc:	ldur	x9, [x29, #-24]
  403200:	mov	x10, #0x8                   	// #8
  403204:	mul	x9, x10, x9
  403208:	add	x8, x8, x9
  40320c:	ldr	x8, [x8]
  403210:	ldr	x8, [x8, #8]
  403214:	ldr	w11, [x8]
  403218:	cmp	w11, #0x3
  40321c:	b.eq	403258 <cldr_plural_rule_list_print+0x300>  // b.none
  403220:	ldur	x8, [x29, #-8]
  403224:	ldr	x8, [x8]
  403228:	ldur	x9, [x29, #-24]
  40322c:	mov	x10, #0x8                   	// #8
  403230:	mul	x9, x10, x9
  403234:	add	x8, x8, x9
  403238:	ldr	x8, [x8]
  40323c:	ldr	x8, [x8, #8]
  403240:	ldr	w11, [x8]
  403244:	cmp	w11, #0x4
  403248:	b.eq	403258 <cldr_plural_rule_list_print+0x300>  // b.none
  40324c:	ldur	x8, [x29, #-40]
  403250:	add	x8, x8, #0x1
  403254:	stur	x8, [x29, #-40]
  403258:	ldur	x8, [x29, #-24]
  40325c:	add	x8, x8, #0x1
  403260:	stur	x8, [x29, #-24]
  403264:	b	4031e0 <cldr_plural_rule_list_print+0x288>
  403268:	ldur	x8, [x29, #-40]
  40326c:	cmp	x8, #0x1
  403270:	b.ne	403288 <cldr_plural_rule_list_print+0x330>  // b.any
  403274:	ldur	x0, [x29, #-16]
  403278:	adrp	x1, 405000 <usage+0x100>
  40327c:	add	x1, x1, #0xa72
  403280:	bl	401560 <fprintf@plt>
  403284:	b	403544 <cldr_plural_rule_list_print+0x5ec>
  403288:	ldur	x8, [x29, #-40]
  40328c:	cmp	x8, #0x2
  403290:	b.ne	403390 <cldr_plural_rule_list_print+0x438>  // b.any
  403294:	str	xzr, [sp, #32]
  403298:	ldr	x8, [sp, #32]
  40329c:	ldur	x9, [x29, #-8]
  4032a0:	ldr	x9, [x9, #8]
  4032a4:	cmp	x8, x9
  4032a8:	b.cs	403318 <cldr_plural_rule_list_print+0x3c0>  // b.hs, b.nlast
  4032ac:	ldur	x8, [x29, #-8]
  4032b0:	ldr	x8, [x8]
  4032b4:	ldr	x9, [sp, #32]
  4032b8:	mov	x10, #0x8                   	// #8
  4032bc:	mul	x9, x10, x9
  4032c0:	add	x8, x8, x9
  4032c4:	ldr	x8, [x8]
  4032c8:	ldr	x8, [x8, #8]
  4032cc:	ldr	w11, [x8]
  4032d0:	cmp	w11, #0x3
  4032d4:	b.eq	403308 <cldr_plural_rule_list_print+0x3b0>  // b.none
  4032d8:	ldur	x8, [x29, #-8]
  4032dc:	ldr	x8, [x8]
  4032e0:	ldr	x9, [sp, #32]
  4032e4:	mov	x10, #0x8                   	// #8
  4032e8:	mul	x9, x10, x9
  4032ec:	add	x8, x8, x9
  4032f0:	ldr	x8, [x8]
  4032f4:	ldr	x8, [x8, #8]
  4032f8:	ldr	w11, [x8]
  4032fc:	cmp	w11, #0x4
  403300:	b.eq	403308 <cldr_plural_rule_list_print+0x3b0>  // b.none
  403304:	b	403318 <cldr_plural_rule_list_print+0x3c0>
  403308:	ldr	x8, [sp, #32]
  40330c:	add	x8, x8, #0x1
  403310:	str	x8, [sp, #32]
  403314:	b	403298 <cldr_plural_rule_list_print+0x340>
  403318:	ldur	x8, [x29, #-8]
  40331c:	ldr	x8, [x8]
  403320:	ldr	x9, [sp, #32]
  403324:	mov	x10, #0x8                   	// #8
  403328:	mul	x9, x10, x9
  40332c:	add	x8, x8, x9
  403330:	ldr	x8, [x8]
  403334:	ldr	x8, [x8, #8]
  403338:	str	x8, [sp, #40]
  40333c:	str	xzr, [sp, #32]
  403340:	ldr	x8, [sp, #32]
  403344:	cmp	x8, #0x2
  403348:	b.cs	403390 <cldr_plural_rule_list_print+0x438>  // b.hs, b.nlast
  40334c:	ldr	x8, [sp, #32]
  403350:	mov	x9, #0x8                   	// #8
  403354:	mul	x8, x9, x8
  403358:	adrp	x9, 417000 <memcpy@GLIBC_2.17>
  40335c:	add	x9, x9, #0x198
  403360:	add	x8, x9, x8
  403364:	ldr	x8, [x8]
  403368:	ldr	x0, [sp, #40]
  40336c:	ldur	x1, [x29, #-16]
  403370:	blr	x8
  403374:	tbnz	w0, #0, 40337c <cldr_plural_rule_list_print+0x424>
  403378:	b	403380 <cldr_plural_rule_list_print+0x428>
  40337c:	b	403544 <cldr_plural_rule_list_print+0x5ec>
  403380:	ldr	x8, [sp, #32]
  403384:	add	x8, x8, #0x1
  403388:	str	x8, [sp, #32]
  40338c:	b	403340 <cldr_plural_rule_list_print+0x3e8>
  403390:	ldur	x0, [x29, #-16]
  403394:	ldur	x2, [x29, #-40]
  403398:	adrp	x1, 405000 <usage+0x100>
  40339c:	add	x1, x1, #0xa89
  4033a0:	bl	401560 <fprintf@plt>
  4033a4:	stur	xzr, [x29, #-24]
  4033a8:	stur	xzr, [x29, #-32]
  4033ac:	ldur	x8, [x29, #-24]
  4033b0:	ldur	x9, [x29, #-8]
  4033b4:	ldr	x9, [x9, #8]
  4033b8:	cmp	x8, x9
  4033bc:	b.cs	403508 <cldr_plural_rule_list_print+0x5b0>  // b.hs, b.nlast
  4033c0:	ldur	x8, [x29, #-8]
  4033c4:	ldr	x8, [x8]
  4033c8:	ldur	x9, [x29, #-24]
  4033cc:	mov	x10, #0x8                   	// #8
  4033d0:	mul	x9, x10, x9
  4033d4:	add	x8, x8, x9
  4033d8:	ldr	x8, [x8]
  4033dc:	str	x8, [sp, #24]
  4033e0:	ldr	x8, [sp, #24]
  4033e4:	ldr	x0, [x8, #8]
  4033e8:	ldur	x8, [x29, #-40]
  4033ec:	cmp	x8, #0x2
  4033f0:	cset	w11, eq  // eq = none
  4033f4:	ldur	x3, [x29, #-16]
  4033f8:	mov	w1, #0x4                   	// #4
  4033fc:	and	w2, w11, #0x1
  403400:	bl	403cd4 <print_condition>
  403404:	tbnz	w0, #0, 40340c <cldr_plural_rule_list_print+0x4b4>
  403408:	b	4034f8 <cldr_plural_rule_list_print+0x5a0>
  40340c:	ldur	x8, [x29, #-8]
  403410:	ldr	x8, [x8, #8]
  403414:	cmp	x8, #0x1
  403418:	b.ls	4034f8 <cldr_plural_rule_list_print+0x5a0>  // b.plast
  40341c:	mov	w8, #0x0                   	// #0
  403420:	strb	w8, [sp, #23]
  403424:	ldur	x9, [x29, #-24]
  403428:	add	x9, x9, #0x1
  40342c:	str	x9, [sp, #8]
  403430:	ldr	x8, [sp, #8]
  403434:	ldur	x9, [x29, #-8]
  403438:	ldr	x9, [x9, #8]
  40343c:	cmp	x8, x9
  403440:	b.cs	4034b4 <cldr_plural_rule_list_print+0x55c>  // b.hs, b.nlast
  403444:	ldur	x8, [x29, #-8]
  403448:	ldr	x8, [x8]
  40344c:	ldr	x9, [sp, #8]
  403450:	mov	x10, #0x8                   	// #8
  403454:	mul	x9, x10, x9
  403458:	add	x8, x8, x9
  40345c:	ldr	x8, [x8]
  403460:	ldr	x8, [x8, #8]
  403464:	ldr	w11, [x8]
  403468:	cmp	w11, #0x3
  40346c:	b.eq	4034a4 <cldr_plural_rule_list_print+0x54c>  // b.none
  403470:	ldur	x8, [x29, #-8]
  403474:	ldr	x8, [x8]
  403478:	ldr	x9, [sp, #8]
  40347c:	mov	x10, #0x8                   	// #8
  403480:	mul	x9, x10, x9
  403484:	add	x8, x8, x9
  403488:	ldr	x8, [x8]
  40348c:	ldr	x8, [x8, #8]
  403490:	ldr	w11, [x8]
  403494:	cmp	w11, #0x4
  403498:	b.eq	4034a4 <cldr_plural_rule_list_print+0x54c>  // b.none
  40349c:	mov	w8, #0x1                   	// #1
  4034a0:	strb	w8, [sp, #23]
  4034a4:	ldr	x8, [sp, #8]
  4034a8:	add	x8, x8, #0x1
  4034ac:	str	x8, [sp, #8]
  4034b0:	b	403430 <cldr_plural_rule_list_print+0x4d8>
  4034b4:	ldur	x8, [x29, #-24]
  4034b8:	ldur	x9, [x29, #-8]
  4034bc:	ldr	x9, [x9, #8]
  4034c0:	subs	x9, x9, #0x1
  4034c4:	cmp	x8, x9
  4034c8:	b.cs	4034f8 <cldr_plural_rule_list_print+0x5a0>  // b.hs, b.nlast
  4034cc:	ldrb	w8, [sp, #23]
  4034d0:	tbnz	w8, #0, 4034d8 <cldr_plural_rule_list_print+0x580>
  4034d4:	b	4034f8 <cldr_plural_rule_list_print+0x5a0>
  4034d8:	ldur	x0, [x29, #-16]
  4034dc:	ldur	x8, [x29, #-32]
  4034e0:	add	x9, x8, #0x1
  4034e4:	stur	x9, [x29, #-32]
  4034e8:	adrp	x1, 405000 <usage+0x100>
  4034ec:	add	x1, x1, #0xaa0
  4034f0:	mov	x2, x8
  4034f4:	bl	401560 <fprintf@plt>
  4034f8:	ldur	x8, [x29, #-24]
  4034fc:	add	x8, x8, #0x1
  403500:	stur	x8, [x29, #-24]
  403504:	b	4033ac <cldr_plural_rule_list_print+0x454>
  403508:	ldur	x8, [x29, #-8]
  40350c:	ldr	x8, [x8, #8]
  403510:	cmp	x8, #0x1
  403514:	b.ls	403534 <cldr_plural_rule_list_print+0x5dc>  // b.plast
  403518:	ldur	x0, [x29, #-16]
  40351c:	ldur	x2, [x29, #-32]
  403520:	ldur	x8, [x29, #-32]
  403524:	add	x3, x8, #0x1
  403528:	adrp	x1, 405000 <usage+0x100>
  40352c:	add	x1, x1, #0xaaa
  403530:	bl	401560 <fprintf@plt>
  403534:	ldur	x0, [x29, #-16]
  403538:	adrp	x1, 405000 <usage+0x100>
  40353c:	add	x1, x1, #0xad2
  403540:	bl	401560 <fprintf@plt>
  403544:	ldp	x29, x30, [sp, #144]
  403548:	add	sp, sp, #0xa0
  40354c:	ret

0000000000403550 <eval_condition>:
  403550:	sub	sp, sp, #0x40
  403554:	stp	x29, x30, [sp, #48]
  403558:	add	x29, sp, #0x30
  40355c:	stur	x0, [x29, #-8]
  403560:	ldur	x8, [x29, #-8]
  403564:	ldr	w9, [x8]
  403568:	cbnz	w9, 4036e4 <eval_condition+0x194>
  40356c:	ldur	x8, [x29, #-8]
  403570:	ldr	x0, [x8, #8]
  403574:	bl	403550 <eval_condition>
  403578:	ldur	x8, [x29, #-8]
  40357c:	ldr	x0, [x8, #16]
  403580:	bl	403550 <eval_condition>
  403584:	ldur	x8, [x29, #-8]
  403588:	ldr	x8, [x8, #8]
  40358c:	ldr	w9, [x8]
  403590:	cmp	w9, #0x4
  403594:	b.eq	4035ac <eval_condition+0x5c>  // b.none
  403598:	ldur	x8, [x29, #-8]
  40359c:	ldr	x8, [x8, #16]
  4035a0:	ldr	w9, [x8]
  4035a4:	cmp	w9, #0x4
  4035a8:	b.ne	4035d4 <eval_condition+0x84>  // b.any
  4035ac:	ldur	x8, [x29, #-8]
  4035b0:	ldr	x0, [x8, #8]
  4035b4:	bl	402d4c <cldr_plural_condition_free>
  4035b8:	ldur	x8, [x29, #-8]
  4035bc:	ldr	x0, [x8, #16]
  4035c0:	bl	402d4c <cldr_plural_condition_free>
  4035c4:	ldur	x8, [x29, #-8]
  4035c8:	mov	w9, #0x4                   	// #4
  4035cc:	str	w9, [x8]
  4035d0:	b	4036e0 <eval_condition+0x190>
  4035d4:	ldur	x8, [x29, #-8]
  4035d8:	ldr	x8, [x8, #8]
  4035dc:	ldr	w9, [x8]
  4035e0:	cmp	w9, #0x3
  4035e4:	b.ne	403624 <eval_condition+0xd4>  // b.any
  4035e8:	ldur	x8, [x29, #-8]
  4035ec:	ldr	x8, [x8, #16]
  4035f0:	ldr	w9, [x8]
  4035f4:	cmp	w9, #0x3
  4035f8:	b.ne	403624 <eval_condition+0xd4>  // b.any
  4035fc:	ldur	x8, [x29, #-8]
  403600:	ldr	x0, [x8, #8]
  403604:	bl	402d4c <cldr_plural_condition_free>
  403608:	ldur	x8, [x29, #-8]
  40360c:	ldr	x0, [x8, #16]
  403610:	bl	402d4c <cldr_plural_condition_free>
  403614:	ldur	x8, [x29, #-8]
  403618:	mov	w9, #0x3                   	// #3
  40361c:	str	w9, [x8]
  403620:	b	4036e0 <eval_condition+0x190>
  403624:	ldur	x8, [x29, #-8]
  403628:	ldr	x8, [x8, #8]
  40362c:	ldr	w9, [x8]
  403630:	cmp	w9, #0x3
  403634:	b.ne	403684 <eval_condition+0x134>  // b.any
  403638:	ldur	x8, [x29, #-8]
  40363c:	ldr	x8, [x8, #16]
  403640:	stur	x8, [x29, #-16]
  403644:	ldur	x8, [x29, #-8]
  403648:	ldr	x0, [x8, #8]
  40364c:	bl	402d4c <cldr_plural_condition_free>
  403650:	ldur	x8, [x29, #-8]
  403654:	ldr	x8, [x8, #16]
  403658:	ldr	w9, [x8]
  40365c:	ldur	x8, [x29, #-8]
  403660:	str	w9, [x8]
  403664:	ldur	x8, [x29, #-8]
  403668:	ldur	x10, [x29, #-8]
  40366c:	ldr	x10, [x10, #16]
  403670:	ldur	q0, [x10, #8]
  403674:	stur	q0, [x8, #8]
  403678:	ldur	x0, [x29, #-16]
  40367c:	bl	4014c0 <free@plt>
  403680:	b	4036e0 <eval_condition+0x190>
  403684:	ldur	x8, [x29, #-8]
  403688:	ldr	x8, [x8, #16]
  40368c:	ldr	w9, [x8]
  403690:	cmp	w9, #0x3
  403694:	b.ne	4036e0 <eval_condition+0x190>  // b.any
  403698:	ldur	x8, [x29, #-8]
  40369c:	ldr	x8, [x8, #8]
  4036a0:	str	x8, [sp, #24]
  4036a4:	ldur	x8, [x29, #-8]
  4036a8:	ldr	x0, [x8, #16]
  4036ac:	bl	402d4c <cldr_plural_condition_free>
  4036b0:	ldur	x8, [x29, #-8]
  4036b4:	ldr	x8, [x8, #8]
  4036b8:	ldr	w9, [x8]
  4036bc:	ldur	x8, [x29, #-8]
  4036c0:	str	w9, [x8]
  4036c4:	ldur	x8, [x29, #-8]
  4036c8:	ldur	x10, [x29, #-8]
  4036cc:	ldr	x10, [x10, #8]
  4036d0:	ldur	q0, [x10, #8]
  4036d4:	stur	q0, [x8, #8]
  4036d8:	ldr	x0, [sp, #24]
  4036dc:	bl	4014c0 <free@plt>
  4036e0:	b	4038ac <eval_condition+0x35c>
  4036e4:	ldur	x8, [x29, #-8]
  4036e8:	ldr	w9, [x8]
  4036ec:	cmp	w9, #0x1
  4036f0:	b.ne	40386c <eval_condition+0x31c>  // b.any
  4036f4:	ldur	x8, [x29, #-8]
  4036f8:	ldr	x0, [x8, #8]
  4036fc:	bl	403550 <eval_condition>
  403700:	ldur	x8, [x29, #-8]
  403704:	ldr	x0, [x8, #16]
  403708:	bl	403550 <eval_condition>
  40370c:	ldur	x8, [x29, #-8]
  403710:	ldr	x8, [x8, #8]
  403714:	ldr	w9, [x8]
  403718:	cmp	w9, #0x3
  40371c:	b.eq	403734 <eval_condition+0x1e4>  // b.none
  403720:	ldur	x8, [x29, #-8]
  403724:	ldr	x8, [x8, #16]
  403728:	ldr	w9, [x8]
  40372c:	cmp	w9, #0x3
  403730:	b.ne	40375c <eval_condition+0x20c>  // b.any
  403734:	ldur	x8, [x29, #-8]
  403738:	ldr	x0, [x8, #8]
  40373c:	bl	402d4c <cldr_plural_condition_free>
  403740:	ldur	x8, [x29, #-8]
  403744:	ldr	x0, [x8, #16]
  403748:	bl	402d4c <cldr_plural_condition_free>
  40374c:	ldur	x8, [x29, #-8]
  403750:	mov	w9, #0x3                   	// #3
  403754:	str	w9, [x8]
  403758:	b	403868 <eval_condition+0x318>
  40375c:	ldur	x8, [x29, #-8]
  403760:	ldr	x8, [x8, #8]
  403764:	ldr	w9, [x8]
  403768:	cmp	w9, #0x4
  40376c:	b.ne	4037ac <eval_condition+0x25c>  // b.any
  403770:	ldur	x8, [x29, #-8]
  403774:	ldr	x8, [x8, #16]
  403778:	ldr	w9, [x8]
  40377c:	cmp	w9, #0x4
  403780:	b.ne	4037ac <eval_condition+0x25c>  // b.any
  403784:	ldur	x8, [x29, #-8]
  403788:	ldr	x0, [x8, #8]
  40378c:	bl	402d4c <cldr_plural_condition_free>
  403790:	ldur	x8, [x29, #-8]
  403794:	ldr	x0, [x8, #16]
  403798:	bl	402d4c <cldr_plural_condition_free>
  40379c:	ldur	x8, [x29, #-8]
  4037a0:	mov	w9, #0x4                   	// #4
  4037a4:	str	w9, [x8]
  4037a8:	b	403868 <eval_condition+0x318>
  4037ac:	ldur	x8, [x29, #-8]
  4037b0:	ldr	x8, [x8, #8]
  4037b4:	ldr	w9, [x8]
  4037b8:	cmp	w9, #0x4
  4037bc:	b.ne	40380c <eval_condition+0x2bc>  // b.any
  4037c0:	ldur	x8, [x29, #-8]
  4037c4:	ldr	x8, [x8, #16]
  4037c8:	str	x8, [sp, #16]
  4037cc:	ldur	x8, [x29, #-8]
  4037d0:	ldr	x0, [x8, #8]
  4037d4:	bl	402d4c <cldr_plural_condition_free>
  4037d8:	ldur	x8, [x29, #-8]
  4037dc:	ldr	x8, [x8, #16]
  4037e0:	ldr	w9, [x8]
  4037e4:	ldur	x8, [x29, #-8]
  4037e8:	str	w9, [x8]
  4037ec:	ldur	x8, [x29, #-8]
  4037f0:	ldur	x10, [x29, #-8]
  4037f4:	ldr	x10, [x10, #16]
  4037f8:	ldur	q0, [x10, #8]
  4037fc:	stur	q0, [x8, #8]
  403800:	ldr	x0, [sp, #16]
  403804:	bl	4014c0 <free@plt>
  403808:	b	403868 <eval_condition+0x318>
  40380c:	ldur	x8, [x29, #-8]
  403810:	ldr	x8, [x8, #16]
  403814:	ldr	w9, [x8]
  403818:	cmp	w9, #0x4
  40381c:	b.ne	403868 <eval_condition+0x318>  // b.any
  403820:	ldur	x8, [x29, #-8]
  403824:	ldr	x8, [x8, #8]
  403828:	str	x8, [sp, #8]
  40382c:	ldur	x8, [x29, #-8]
  403830:	ldr	x0, [x8, #16]
  403834:	bl	402d4c <cldr_plural_condition_free>
  403838:	ldur	x8, [x29, #-8]
  40383c:	ldr	x8, [x8, #8]
  403840:	ldr	w9, [x8]
  403844:	ldur	x8, [x29, #-8]
  403848:	str	w9, [x8]
  40384c:	ldur	x8, [x29, #-8]
  403850:	ldur	x10, [x29, #-8]
  403854:	ldr	x10, [x10, #8]
  403858:	ldur	q0, [x10, #8]
  40385c:	stur	q0, [x8, #8]
  403860:	ldr	x0, [sp, #8]
  403864:	bl	4014c0 <free@plt>
  403868:	b	4038ac <eval_condition+0x35c>
  40386c:	ldur	x8, [x29, #-8]
  403870:	ldr	x0, [x8, #8]
  403874:	bl	403ea8 <eval_relation>
  403878:	str	w0, [sp, #4]
  40387c:	ldr	w9, [sp, #4]
  403880:	cmp	w9, #0x3
  403884:	b.eq	403894 <eval_condition+0x344>  // b.none
  403888:	ldr	w8, [sp, #4]
  40388c:	cmp	w8, #0x4
  403890:	b.ne	4038ac <eval_condition+0x35c>  // b.any
  403894:	ldur	x8, [x29, #-8]
  403898:	ldr	x0, [x8, #8]
  40389c:	bl	402dc4 <cldr_plural_relation_free>
  4038a0:	ldr	w9, [sp, #4]
  4038a4:	ldur	x8, [x29, #-8]
  4038a8:	str	w9, [x8]
  4038ac:	ldp	x29, x30, [sp, #48]
  4038b0:	add	sp, sp, #0x40
  4038b4:	ret

00000000004038b8 <find_largest_modulus>:
  4038b8:	sub	sp, sp, #0x30
  4038bc:	stp	x29, x30, [sp, #32]
  4038c0:	add	x29, sp, #0x20
  4038c4:	str	x0, [sp, #16]
  4038c8:	ldr	x8, [sp, #16]
  4038cc:	ldr	w9, [x8]
  4038d0:	cbz	w9, 4038e4 <find_largest_modulus+0x2c>
  4038d4:	ldr	x8, [sp, #16]
  4038d8:	ldr	w9, [x8]
  4038dc:	cmp	w9, #0x1
  4038e0:	b.ne	403934 <find_largest_modulus+0x7c>  // b.any
  4038e4:	ldr	x8, [sp, #16]
  4038e8:	ldr	x0, [x8, #8]
  4038ec:	bl	4038b8 <find_largest_modulus>
  4038f0:	str	w0, [sp, #12]
  4038f4:	ldr	x8, [sp, #16]
  4038f8:	ldr	x0, [x8, #16]
  4038fc:	bl	4038b8 <find_largest_modulus>
  403900:	str	w0, [sp, #8]
  403904:	ldr	w9, [sp, #12]
  403908:	ldr	w10, [sp, #8]
  40390c:	cmp	w9, w10
  403910:	b.le	403920 <find_largest_modulus+0x68>
  403914:	ldr	w8, [sp, #12]
  403918:	str	w8, [sp, #4]
  40391c:	b	403928 <find_largest_modulus+0x70>
  403920:	ldr	w8, [sp, #8]
  403924:	str	w8, [sp, #4]
  403928:	ldr	w8, [sp, #4]
  40392c:	stur	w8, [x29, #-4]
  403930:	b	403960 <find_largest_modulus+0xa8>
  403934:	ldr	x8, [sp, #16]
  403938:	ldr	w9, [x8]
  40393c:	cmp	w9, #0x2
  403940:	b.ne	40395c <find_largest_modulus+0xa4>  // b.any
  403944:	ldr	x8, [sp, #16]
  403948:	ldr	x8, [x8, #8]
  40394c:	ldr	x8, [x8]
  403950:	ldr	w9, [x8, #4]
  403954:	stur	w9, [x29, #-4]
  403958:	b	403960 <find_largest_modulus+0xa8>
  40395c:	stur	wzr, [x29, #-4]
  403960:	ldur	w0, [x29, #-4]
  403964:	ldp	x29, x30, [sp, #32]
  403968:	add	sp, sp, #0x30
  40396c:	ret

0000000000403970 <find_largest_number>:
  403970:	sub	sp, sp, #0x50
  403974:	stp	x29, x30, [sp, #64]
  403978:	add	x29, sp, #0x40
  40397c:	stur	x0, [x29, #-16]
  403980:	ldur	x8, [x29, #-16]
  403984:	ldr	w9, [x8]
  403988:	cbz	w9, 40399c <find_largest_number+0x2c>
  40398c:	ldur	x8, [x29, #-16]
  403990:	ldr	w9, [x8]
  403994:	cmp	w9, #0x1
  403998:	b.ne	4039ec <find_largest_number+0x7c>  // b.any
  40399c:	ldur	x8, [x29, #-16]
  4039a0:	ldr	x0, [x8, #8]
  4039a4:	bl	403970 <find_largest_number>
  4039a8:	stur	w0, [x29, #-20]
  4039ac:	ldur	x8, [x29, #-16]
  4039b0:	ldr	x0, [x8, #16]
  4039b4:	bl	403970 <find_largest_number>
  4039b8:	stur	w0, [x29, #-24]
  4039bc:	ldur	w9, [x29, #-20]
  4039c0:	ldur	w10, [x29, #-24]
  4039c4:	cmp	w9, w10
  4039c8:	b.le	4039d8 <find_largest_number+0x68>
  4039cc:	ldur	w8, [x29, #-20]
  4039d0:	str	w8, [sp, #12]
  4039d4:	b	4039e0 <find_largest_number+0x70>
  4039d8:	ldur	w8, [x29, #-24]
  4039dc:	str	w8, [sp, #12]
  4039e0:	ldr	w8, [sp, #12]
  4039e4:	stur	w8, [x29, #-4]
  4039e8:	b	403adc <find_largest_number+0x16c>
  4039ec:	ldur	x8, [x29, #-16]
  4039f0:	ldr	w9, [x8]
  4039f4:	cmp	w9, #0x2
  4039f8:	b.ne	403ad8 <find_largest_number+0x168>  // b.any
  4039fc:	stur	wzr, [x29, #-28]
  403a00:	str	xzr, [sp, #24]
  403a04:	ldr	x8, [sp, #24]
  403a08:	ldur	x9, [x29, #-16]
  403a0c:	ldr	x9, [x9, #8]
  403a10:	ldr	x9, [x9, #16]
  403a14:	ldr	x9, [x9, #8]
  403a18:	cmp	x8, x9
  403a1c:	b.cs	403acc <find_largest_number+0x15c>  // b.hs, b.nlast
  403a20:	ldur	x8, [x29, #-16]
  403a24:	mov	x9, #0x8                   	// #8
  403a28:	ldr	x8, [x8, #8]
  403a2c:	ldr	x8, [x8, #16]
  403a30:	ldr	x8, [x8]
  403a34:	ldr	x10, [sp, #24]
  403a38:	mul	x9, x9, x10
  403a3c:	add	x8, x8, x9
  403a40:	ldr	x8, [x8]
  403a44:	ldr	x8, [x8, #8]
  403a48:	str	x8, [sp, #16]
  403a4c:	ldr	x8, [sp, #16]
  403a50:	ldr	w11, [x8]
  403a54:	cbnz	w11, 403a7c <find_largest_number+0x10c>
  403a58:	ldr	x8, [sp, #16]
  403a5c:	ldr	w9, [x8, #8]
  403a60:	ldur	w10, [x29, #-28]
  403a64:	cmp	w9, w10
  403a68:	b.le	403a7c <find_largest_number+0x10c>
  403a6c:	ldr	x8, [sp, #16]
  403a70:	ldr	w9, [x8, #8]
  403a74:	stur	w9, [x29, #-28]
  403a78:	b	403abc <find_largest_number+0x14c>
  403a7c:	ldr	x8, [sp, #16]
  403a80:	ldr	w9, [x8]
  403a84:	cmp	w9, #0x1
  403a88:	b.ne	403abc <find_largest_number+0x14c>  // b.any
  403a8c:	ldr	x8, [sp, #16]
  403a90:	ldr	d0, [x8, #8]
  403a94:	ldur	w9, [x29, #-28]
  403a98:	scvtf	d1, w9
  403a9c:	fcmp	d0, d1
  403aa0:	cset	w9, gt
  403aa4:	tbnz	w9, #0, 403aac <find_largest_number+0x13c>
  403aa8:	b	403abc <find_largest_number+0x14c>
  403aac:	ldr	x8, [sp, #16]
  403ab0:	ldr	d0, [x8, #8]
  403ab4:	fcvtzs	w9, d0
  403ab8:	stur	w9, [x29, #-28]
  403abc:	ldr	x8, [sp, #24]
  403ac0:	add	x8, x8, #0x1
  403ac4:	str	x8, [sp, #24]
  403ac8:	b	403a04 <find_largest_number+0x94>
  403acc:	ldur	w8, [x29, #-28]
  403ad0:	stur	w8, [x29, #-4]
  403ad4:	b	403adc <find_largest_number+0x16c>
  403ad8:	stur	wzr, [x29, #-4]
  403adc:	ldur	w0, [x29, #-4]
  403ae0:	ldp	x29, x30, [sp, #64]
  403ae4:	add	sp, sp, #0x50
  403ae8:	ret

0000000000403aec <apply_condition>:
  403aec:	sub	sp, sp, #0x50
  403af0:	stp	x29, x30, [sp, #64]
  403af4:	add	x29, sp, #0x40
  403af8:	stur	x0, [x29, #-16]
  403afc:	stur	w1, [x29, #-20]
  403b00:	ldur	x8, [x29, #-16]
  403b04:	ldr	w9, [x8]
  403b08:	cbnz	w9, 403b50 <apply_condition+0x64>
  403b0c:	ldur	x8, [x29, #-16]
  403b10:	ldr	x0, [x8, #8]
  403b14:	ldur	w1, [x29, #-20]
  403b18:	bl	403aec <apply_condition>
  403b1c:	mov	w9, #0x0                   	// #0
  403b20:	str	w9, [sp, #4]
  403b24:	tbnz	w0, #0, 403b2c <apply_condition+0x40>
  403b28:	b	403b40 <apply_condition+0x54>
  403b2c:	ldur	x8, [x29, #-16]
  403b30:	ldr	x0, [x8, #16]
  403b34:	ldur	w1, [x29, #-20]
  403b38:	bl	403aec <apply_condition>
  403b3c:	str	w0, [sp, #4]
  403b40:	ldr	w8, [sp, #4]
  403b44:	and	w8, w8, #0x1
  403b48:	sturb	w8, [x29, #-1]
  403b4c:	b	403cc0 <apply_condition+0x1d4>
  403b50:	ldur	x8, [x29, #-16]
  403b54:	ldr	w9, [x8]
  403b58:	cmp	w9, #0x1
  403b5c:	b.ne	403ba0 <apply_condition+0xb4>  // b.any
  403b60:	ldur	x8, [x29, #-16]
  403b64:	ldr	x0, [x8, #8]
  403b68:	ldur	w1, [x29, #-20]
  403b6c:	bl	403aec <apply_condition>
  403b70:	mov	w9, #0x1                   	// #1
  403b74:	str	w9, [sp]
  403b78:	tbnz	w0, #0, 403b90 <apply_condition+0xa4>
  403b7c:	ldur	x8, [x29, #-16]
  403b80:	ldr	x0, [x8, #16]
  403b84:	ldur	w1, [x29, #-20]
  403b88:	bl	403aec <apply_condition>
  403b8c:	str	w0, [sp]
  403b90:	ldr	w8, [sp]
  403b94:	and	w8, w8, #0x1
  403b98:	sturb	w8, [x29, #-1]
  403b9c:	b	403cc0 <apply_condition+0x1d4>
  403ba0:	ldur	x8, [x29, #-16]
  403ba4:	ldr	w9, [x8]
  403ba8:	cmp	w9, #0x2
  403bac:	b.ne	403cb4 <apply_condition+0x1c8>  // b.any
  403bb0:	ldur	x8, [x29, #-16]
  403bb4:	ldr	x8, [x8, #8]
  403bb8:	str	x8, [sp, #32]
  403bbc:	ldur	w9, [x29, #-20]
  403bc0:	str	w9, [sp, #28]
  403bc4:	ldr	x8, [sp, #32]
  403bc8:	ldr	x8, [x8]
  403bcc:	ldr	w9, [x8, #4]
  403bd0:	cmp	w9, #0x0
  403bd4:	cset	w9, le
  403bd8:	tbnz	w9, #0, 403bfc <apply_condition+0x110>
  403bdc:	ldr	x8, [sp, #32]
  403be0:	ldr	x8, [x8]
  403be4:	ldr	w9, [x8, #4]
  403be8:	ldr	w10, [sp, #28]
  403bec:	sdiv	w11, w10, w9
  403bf0:	mul	w9, w11, w9
  403bf4:	subs	w9, w10, w9
  403bf8:	str	w9, [sp, #28]
  403bfc:	str	xzr, [sp, #16]
  403c00:	ldr	x8, [sp, #16]
  403c04:	ldr	x9, [sp, #32]
  403c08:	ldr	x9, [x9, #16]
  403c0c:	ldr	x9, [x9, #8]
  403c10:	cmp	x8, x9
  403c14:	b.cs	403c98 <apply_condition+0x1ac>  // b.hs, b.nlast
  403c18:	ldr	x8, [sp, #32]
  403c1c:	ldr	x8, [x8, #16]
  403c20:	ldr	x8, [x8]
  403c24:	ldr	x9, [sp, #16]
  403c28:	mov	x10, #0x8                   	// #8
  403c2c:	mul	x9, x10, x9
  403c30:	add	x8, x8, x9
  403c34:	ldr	x8, [x8]
  403c38:	str	x8, [sp, #8]
  403c3c:	ldr	x8, [sp, #8]
  403c40:	ldr	x8, [x8]
  403c44:	ldr	w11, [x8, #8]
  403c48:	ldr	w12, [sp, #28]
  403c4c:	cmp	w11, w12
  403c50:	b.gt	403c88 <apply_condition+0x19c>
  403c54:	ldr	w8, [sp, #28]
  403c58:	ldr	x9, [sp, #8]
  403c5c:	ldr	x9, [x9, #8]
  403c60:	ldr	w10, [x9, #8]
  403c64:	cmp	w8, w10
  403c68:	b.gt	403c88 <apply_condition+0x19c>
  403c6c:	ldr	x8, [sp, #32]
  403c70:	ldr	w9, [x8, #8]
  403c74:	cmp	w9, #0x0
  403c78:	cset	w9, eq  // eq = none
  403c7c:	and	w9, w9, #0x1
  403c80:	sturb	w9, [x29, #-1]
  403c84:	b	403cc0 <apply_condition+0x1d4>
  403c88:	ldr	x8, [sp, #16]
  403c8c:	add	x8, x8, #0x1
  403c90:	str	x8, [sp, #16]
  403c94:	b	403c00 <apply_condition+0x114>
  403c98:	ldr	x8, [sp, #32]
  403c9c:	ldr	w9, [x8, #8]
  403ca0:	cmp	w9, #0x0
  403ca4:	cset	w9, ne  // ne = any
  403ca8:	and	w9, w9, #0x1
  403cac:	sturb	w9, [x29, #-1]
  403cb0:	b	403cc0 <apply_condition+0x1d4>
  403cb4:	mov	w8, wzr
  403cb8:	and	w8, w8, #0x1
  403cbc:	sturb	w8, [x29, #-1]
  403cc0:	ldurb	w8, [x29, #-1]
  403cc4:	and	w0, w8, #0x1
  403cc8:	ldp	x29, x30, [sp, #64]
  403ccc:	add	sp, sp, #0x50
  403cd0:	ret

0000000000403cd4 <print_condition>:
  403cd4:	sub	sp, sp, #0x50
  403cd8:	stp	x29, x30, [sp, #64]
  403cdc:	add	x29, sp, #0x40
  403ce0:	mov	w8, #0x1                   	// #1
  403ce4:	stur	x0, [x29, #-16]
  403ce8:	stur	w1, [x29, #-20]
  403cec:	and	w8, w2, w8
  403cf0:	sturb	w8, [x29, #-21]
  403cf4:	str	x3, [sp, #32]
  403cf8:	ldur	x9, [x29, #-16]
  403cfc:	ldr	w8, [x9]
  403d00:	cbnz	w8, 403da0 <print_condition+0xcc>
  403d04:	ldur	w8, [x29, #-20]
  403d08:	cmp	w8, #0x1
  403d0c:	b.ne	403d1c <print_condition+0x48>  // b.any
  403d10:	ldr	x1, [sp, #32]
  403d14:	mov	w0, #0x28                  	// #40
  403d18:	bl	401300 <fputc@plt>
  403d1c:	ldur	x8, [x29, #-16]
  403d20:	ldr	x0, [x8, #8]
  403d24:	ldr	x3, [sp, #32]
  403d28:	mov	w9, wzr
  403d2c:	mov	w1, w9
  403d30:	mov	w10, wzr
  403d34:	and	w2, w10, #0x1
  403d38:	str	w9, [sp, #28]
  403d3c:	str	w10, [sp, #24]
  403d40:	bl	403cd4 <print_condition>
  403d44:	ldr	x8, [sp, #32]
  403d48:	mov	x0, x8
  403d4c:	adrp	x1, 405000 <usage+0x100>
  403d50:	add	x1, x1, #0xaf4
  403d54:	bl	401560 <fprintf@plt>
  403d58:	ldur	x8, [x29, #-16]
  403d5c:	ldr	x8, [x8, #16]
  403d60:	ldr	x3, [sp, #32]
  403d64:	mov	x0, x8
  403d68:	ldr	w1, [sp, #28]
  403d6c:	ldr	w9, [sp, #24]
  403d70:	and	w2, w9, #0x1
  403d74:	bl	403cd4 <print_condition>
  403d78:	ldur	w9, [x29, #-20]
  403d7c:	cmp	w9, #0x1
  403d80:	b.ne	403d90 <print_condition+0xbc>  // b.any
  403d84:	ldr	x1, [sp, #32]
  403d88:	mov	w0, #0x29                  	// #41
  403d8c:	bl	401300 <fputc@plt>
  403d90:	mov	w8, #0x1                   	// #1
  403d94:	and	w8, w8, #0x1
  403d98:	sturb	w8, [x29, #-1]
  403d9c:	b	403e94 <print_condition+0x1c0>
  403da0:	ldur	x8, [x29, #-16]
  403da4:	ldr	w9, [x8]
  403da8:	cmp	w9, #0x1
  403dac:	b.ne	403e44 <print_condition+0x170>  // b.any
  403db0:	ldur	w8, [x29, #-20]
  403db4:	cbnz	w8, 403dc4 <print_condition+0xf0>
  403db8:	ldr	x1, [sp, #32]
  403dbc:	mov	w0, #0x28                  	// #40
  403dc0:	bl	401300 <fputc@plt>
  403dc4:	ldur	x8, [x29, #-16]
  403dc8:	ldr	x0, [x8, #8]
  403dcc:	ldr	x3, [sp, #32]
  403dd0:	mov	w9, #0x1                   	// #1
  403dd4:	mov	w1, w9
  403dd8:	mov	w10, wzr
  403ddc:	and	w2, w10, #0x1
  403de0:	str	w9, [sp, #20]
  403de4:	str	w10, [sp, #16]
  403de8:	bl	403cd4 <print_condition>
  403dec:	ldr	x8, [sp, #32]
  403df0:	mov	x0, x8
  403df4:	adrp	x1, 405000 <usage+0x100>
  403df8:	add	x1, x1, #0xaf9
  403dfc:	bl	401560 <fprintf@plt>
  403e00:	ldur	x8, [x29, #-16]
  403e04:	ldr	x8, [x8, #16]
  403e08:	ldr	x3, [sp, #32]
  403e0c:	mov	x0, x8
  403e10:	ldr	w1, [sp, #20]
  403e14:	ldr	w9, [sp, #16]
  403e18:	and	w2, w9, #0x1
  403e1c:	bl	403cd4 <print_condition>
  403e20:	ldur	w9, [x29, #-20]
  403e24:	cbnz	w9, 403e34 <print_condition+0x160>
  403e28:	ldr	x1, [sp, #32]
  403e2c:	mov	w0, #0x29                  	// #41
  403e30:	bl	401300 <fputc@plt>
  403e34:	mov	w8, #0x1                   	// #1
  403e38:	and	w8, w8, #0x1
  403e3c:	sturb	w8, [x29, #-1]
  403e40:	b	403e94 <print_condition+0x1c0>
  403e44:	ldur	x8, [x29, #-16]
  403e48:	ldr	w9, [x8]
  403e4c:	cmp	w9, #0x2
  403e50:	b.ne	403e88 <print_condition+0x1b4>  // b.any
  403e54:	ldur	x8, [x29, #-16]
  403e58:	ldr	x0, [x8, #8]
  403e5c:	ldur	w1, [x29, #-20]
  403e60:	ldurb	w9, [x29, #-21]
  403e64:	ldr	x3, [sp, #32]
  403e68:	mov	w10, #0x1                   	// #1
  403e6c:	and	w2, w9, #0x1
  403e70:	str	w10, [sp, #12]
  403e74:	bl	40445c <print_relation>
  403e78:	ldr	w9, [sp, #12]
  403e7c:	and	w10, w9, w9
  403e80:	sturb	w10, [x29, #-1]
  403e84:	b	403e94 <print_condition+0x1c0>
  403e88:	mov	w8, wzr
  403e8c:	and	w8, w8, #0x1
  403e90:	sturb	w8, [x29, #-1]
  403e94:	ldurb	w8, [x29, #-1]
  403e98:	and	w0, w8, #0x1
  403e9c:	ldp	x29, x30, [sp, #64]
  403ea0:	add	sp, sp, #0x50
  403ea4:	ret

0000000000403ea8 <eval_relation>:
  403ea8:	sub	sp, sp, #0x40
  403eac:	str	x0, [sp, #48]
  403eb0:	ldr	x8, [sp, #48]
  403eb4:	ldr	x8, [x8]
  403eb8:	ldr	w9, [x8]
  403ebc:	cmp	w9, #0x66
  403ec0:	str	w9, [sp, #4]
  403ec4:	b.eq	404030 <eval_relation+0x188>  // b.none
  403ec8:	b	403ecc <eval_relation+0x24>
  403ecc:	ldr	w8, [sp, #4]
  403ed0:	cmp	w8, #0x69
  403ed4:	b.eq	403f10 <eval_relation+0x68>  // b.none
  403ed8:	b	403edc <eval_relation+0x34>
  403edc:	ldr	w8, [sp, #4]
  403ee0:	cmp	w8, #0x6e
  403ee4:	b.eq	403f10 <eval_relation+0x68>  // b.none
  403ee8:	b	403eec <eval_relation+0x44>
  403eec:	ldr	w8, [sp, #4]
  403ef0:	cmp	w8, #0x74
  403ef4:	b.eq	404030 <eval_relation+0x188>  // b.none
  403ef8:	b	403efc <eval_relation+0x54>
  403efc:	ldr	w8, [sp, #4]
  403f00:	subs	w9, w8, #0x76
  403f04:	cmp	w9, #0x1
  403f08:	b.ls	404030 <eval_relation+0x188>  // b.plast
  403f0c:	b	4041f0 <eval_relation+0x348>
  403f10:	str	xzr, [sp, #40]
  403f14:	ldr	x8, [sp, #40]
  403f18:	ldr	x9, [sp, #48]
  403f1c:	ldr	x9, [x9, #16]
  403f20:	ldr	x9, [x9, #8]
  403f24:	cmp	x8, x9
  403f28:	b.cs	40401c <eval_relation+0x174>  // b.hs, b.nlast
  403f2c:	ldr	x8, [sp, #48]
  403f30:	ldr	x8, [x8, #16]
  403f34:	ldr	x8, [x8]
  403f38:	ldr	x9, [sp, #40]
  403f3c:	mov	x10, #0x8                   	// #8
  403f40:	mul	x9, x10, x9
  403f44:	add	x8, x8, x9
  403f48:	ldr	x8, [x8]
  403f4c:	str	x8, [sp, #32]
  403f50:	ldr	x8, [sp, #32]
  403f54:	ldr	x8, [x8]
  403f58:	ldr	w11, [x8]
  403f5c:	cmp	w11, #0x1
  403f60:	b.ne	403fd0 <eval_relation+0x128>  // b.any
  403f64:	ldr	x8, [sp, #32]
  403f68:	ldr	x8, [x8]
  403f6c:	ldr	d0, [x8, #8]
  403f70:	fcvtzs	w9, d0
  403f74:	str	w9, [sp, #28]
  403f78:	ldr	x8, [sp, #32]
  403f7c:	ldr	x8, [x8]
  403f80:	str	wzr, [x8]
  403f84:	ldr	x8, [sp, #32]
  403f88:	ldr	x8, [x8]
  403f8c:	ldr	d0, [x8, #8]
  403f90:	ldr	w9, [sp, #28]
  403f94:	scvtf	d1, w9
  403f98:	fcmp	d0, d1
  403f9c:	cset	w9, eq  // eq = none
  403fa0:	tbnz	w9, #0, 403fa8 <eval_relation+0x100>
  403fa4:	b	403fb4 <eval_relation+0x10c>
  403fa8:	ldr	w8, [sp, #28]
  403fac:	str	w8, [sp]
  403fb0:	b	403fc0 <eval_relation+0x118>
  403fb4:	ldr	w8, [sp, #28]
  403fb8:	add	w8, w8, #0x1
  403fbc:	str	w8, [sp]
  403fc0:	ldr	w8, [sp]
  403fc4:	ldr	x9, [sp, #32]
  403fc8:	ldr	x9, [x9]
  403fcc:	str	w8, [x9, #8]
  403fd0:	ldr	x8, [sp, #32]
  403fd4:	ldr	x8, [x8, #8]
  403fd8:	ldr	w9, [x8]
  403fdc:	cmp	w9, #0x1
  403fe0:	b.ne	40400c <eval_relation+0x164>  // b.any
  403fe4:	ldr	x8, [sp, #32]
  403fe8:	ldr	x8, [x8, #8]
  403fec:	str	wzr, [x8]
  403ff0:	ldr	x8, [sp, #32]
  403ff4:	ldr	x8, [x8, #8]
  403ff8:	ldr	d0, [x8, #8]
  403ffc:	fcvtzs	w9, d0
  404000:	ldr	x8, [sp, #32]
  404004:	ldr	x8, [x8, #8]
  404008:	str	w9, [x8, #8]
  40400c:	ldr	x8, [sp, #40]
  404010:	add	x8, x8, #0x1
  404014:	str	x8, [sp, #40]
  404018:	b	403f14 <eval_relation+0x6c>
  40401c:	ldr	x8, [sp, #48]
  404020:	ldr	x8, [x8]
  404024:	mov	w9, #0x69                  	// #105
  404028:	str	w9, [x8]
  40402c:	b	4041f0 <eval_relation+0x348>
  404030:	str	xzr, [sp, #16]
  404034:	ldr	x8, [sp, #16]
  404038:	ldr	x9, [sp, #48]
  40403c:	ldr	x9, [x9, #16]
  404040:	ldr	x9, [x9, #8]
  404044:	cmp	x8, x9
  404048:	b.cs	4041e4 <eval_relation+0x33c>  // b.hs, b.nlast
  40404c:	ldr	x8, [sp, #48]
  404050:	ldr	x8, [x8, #16]
  404054:	ldr	x8, [x8]
  404058:	ldr	x9, [sp, #16]
  40405c:	mov	x10, #0x8                   	// #8
  404060:	mul	x9, x10, x9
  404064:	add	x8, x8, x9
  404068:	ldr	x8, [x8]
  40406c:	str	x8, [sp, #8]
  404070:	ldr	x8, [sp, #48]
  404074:	ldr	w11, [x8, #8]
  404078:	cbnz	w11, 40411c <eval_relation+0x274>
  40407c:	ldr	x8, [sp, #8]
  404080:	ldr	x8, [x8]
  404084:	ldr	w9, [x8]
  404088:	cbnz	w9, 40409c <eval_relation+0x1f4>
  40408c:	ldr	x8, [sp, #8]
  404090:	ldr	x8, [x8]
  404094:	ldr	w9, [x8, #8]
  404098:	cbz	w9, 4040cc <eval_relation+0x224>
  40409c:	ldr	x8, [sp, #8]
  4040a0:	ldr	x8, [x8]
  4040a4:	ldr	w9, [x8]
  4040a8:	cmp	w9, #0x1
  4040ac:	b.ne	4041c8 <eval_relation+0x320>  // b.any
  4040b0:	ldr	x8, [sp, #8]
  4040b4:	ldr	x8, [x8]
  4040b8:	ldr	d0, [x8, #8]
  4040bc:	fcmp	d0, #0.0
  4040c0:	cset	w9, eq  // eq = none
  4040c4:	tbnz	w9, #0, 4040cc <eval_relation+0x224>
  4040c8:	b	4041c8 <eval_relation+0x320>
  4040cc:	ldr	x8, [sp, #8]
  4040d0:	ldr	x8, [x8, #8]
  4040d4:	ldr	w9, [x8]
  4040d8:	cbnz	w9, 4040ec <eval_relation+0x244>
  4040dc:	ldr	x8, [sp, #8]
  4040e0:	ldr	x8, [x8, #8]
  4040e4:	ldr	w9, [x8, #8]
  4040e8:	cbz	w9, 40411c <eval_relation+0x274>
  4040ec:	ldr	x8, [sp, #8]
  4040f0:	ldr	x8, [x8, #8]
  4040f4:	ldr	w9, [x8]
  4040f8:	cmp	w9, #0x1
  4040fc:	b.ne	4041c8 <eval_relation+0x320>  // b.any
  404100:	ldr	x8, [sp, #8]
  404104:	ldr	x8, [x8, #8]
  404108:	ldr	d0, [x8, #8]
  40410c:	fcmp	d0, #0.0
  404110:	cset	w9, eq  // eq = none
  404114:	tbnz	w9, #0, 40411c <eval_relation+0x274>
  404118:	b	4041c8 <eval_relation+0x320>
  40411c:	ldr	x8, [sp, #48]
  404120:	ldr	w9, [x8, #8]
  404124:	cmp	w9, #0x1
  404128:	b.ne	4041d4 <eval_relation+0x32c>  // b.any
  40412c:	ldr	x8, [sp, #8]
  404130:	ldr	x8, [x8]
  404134:	ldr	w9, [x8]
  404138:	cbnz	w9, 40414c <eval_relation+0x2a4>
  40413c:	ldr	x8, [sp, #8]
  404140:	ldr	x8, [x8]
  404144:	ldr	w9, [x8, #8]
  404148:	cbz	w9, 4041c8 <eval_relation+0x320>
  40414c:	ldr	x8, [sp, #8]
  404150:	ldr	x8, [x8]
  404154:	ldr	w9, [x8]
  404158:	cmp	w9, #0x1
  40415c:	b.ne	404178 <eval_relation+0x2d0>  // b.any
  404160:	ldr	x8, [sp, #8]
  404164:	ldr	x8, [x8]
  404168:	ldr	d0, [x8, #8]
  40416c:	fcmp	d0, #0.0
  404170:	cset	w9, eq  // eq = none
  404174:	tbnz	w9, #0, 4041c8 <eval_relation+0x320>
  404178:	ldr	x8, [sp, #8]
  40417c:	ldr	x8, [x8, #8]
  404180:	ldr	w9, [x8]
  404184:	cbnz	w9, 404198 <eval_relation+0x2f0>
  404188:	ldr	x8, [sp, #8]
  40418c:	ldr	x8, [x8, #8]
  404190:	ldr	w9, [x8, #8]
  404194:	cbz	w9, 4041c8 <eval_relation+0x320>
  404198:	ldr	x8, [sp, #8]
  40419c:	ldr	x8, [x8, #8]
  4041a0:	ldr	w9, [x8]
  4041a4:	cmp	w9, #0x1
  4041a8:	b.ne	4041d4 <eval_relation+0x32c>  // b.any
  4041ac:	ldr	x8, [sp, #8]
  4041b0:	ldr	x8, [x8, #8]
  4041b4:	ldr	d0, [x8, #8]
  4041b8:	fcmp	d0, #0.0
  4041bc:	cset	w9, eq  // eq = none
  4041c0:	tbnz	w9, #0, 4041c8 <eval_relation+0x320>
  4041c4:	b	4041d4 <eval_relation+0x32c>
  4041c8:	mov	w8, #0x4                   	// #4
  4041cc:	str	w8, [sp, #60]
  4041d0:	b	4041f8 <eval_relation+0x350>
  4041d4:	ldr	x8, [sp, #16]
  4041d8:	add	x8, x8, #0x1
  4041dc:	str	x8, [sp, #16]
  4041e0:	b	404034 <eval_relation+0x18c>
  4041e4:	mov	w8, #0x3                   	// #3
  4041e8:	str	w8, [sp, #60]
  4041ec:	b	4041f8 <eval_relation+0x350>
  4041f0:	mov	w8, #0x2                   	// #2
  4041f4:	str	w8, [sp, #60]
  4041f8:	ldr	w0, [sp, #60]
  4041fc:	add	sp, sp, #0x40
  404200:	ret

0000000000404204 <print_condition_negation>:
  404204:	sub	sp, sp, #0x30
  404208:	stp	x29, x30, [sp, #32]
  40420c:	add	x29, sp, #0x20
  404210:	str	x0, [sp, #16]
  404214:	str	x1, [sp, #8]
  404218:	ldr	x8, [sp, #16]
  40421c:	ldr	w9, [x8]
  404220:	cmp	w9, #0x2
  404224:	b.ne	4042c4 <print_condition_negation+0xc0>  // b.any
  404228:	ldr	x8, [sp, #16]
  40422c:	ldr	x8, [x8, #8]
  404230:	ldr	w9, [x8, #8]
  404234:	cbnz	w9, 4042c4 <print_condition_negation+0xc0>
  404238:	ldr	x8, [sp, #16]
  40423c:	ldr	x8, [x8, #8]
  404240:	ldr	x8, [x8, #16]
  404244:	ldr	x8, [x8, #8]
  404248:	cmp	x8, #0x1
  40424c:	b.ne	4042c4 <print_condition_negation+0xc0>  // b.any
  404250:	ldr	x8, [sp, #16]
  404254:	ldr	x8, [x8, #8]
  404258:	ldr	x8, [x8, #16]
  40425c:	ldr	x8, [x8]
  404260:	ldr	x8, [x8]
  404264:	ldr	x8, [x8]
  404268:	ldr	x9, [sp, #16]
  40426c:	ldr	x9, [x9, #8]
  404270:	ldr	x9, [x9, #16]
  404274:	ldr	x9, [x9]
  404278:	ldr	x9, [x9]
  40427c:	ldr	x9, [x9, #8]
  404280:	cmp	x8, x9
  404284:	b.ne	4042c4 <print_condition_negation+0xc0>  // b.any
  404288:	ldr	x0, [sp, #8]
  40428c:	ldr	x8, [sp, #16]
  404290:	ldr	x8, [x8, #8]
  404294:	ldr	x8, [x8, #16]
  404298:	ldr	x8, [x8]
  40429c:	ldr	x8, [x8]
  4042a0:	ldr	x8, [x8]
  4042a4:	ldr	w2, [x8, #8]
  4042a8:	adrp	x1, 405000 <usage+0x100>
  4042ac:	add	x1, x1, #0xab7
  4042b0:	bl	401560 <fprintf@plt>
  4042b4:	mov	w9, #0x1                   	// #1
  4042b8:	and	w9, w9, #0x1
  4042bc:	sturb	w9, [x29, #-1]
  4042c0:	b	4042d0 <print_condition_negation+0xcc>
  4042c4:	mov	w8, wzr
  4042c8:	and	w8, w8, #0x1
  4042cc:	sturb	w8, [x29, #-1]
  4042d0:	ldurb	w8, [x29, #-1]
  4042d4:	and	w0, w8, #0x1
  4042d8:	ldp	x29, x30, [sp, #32]
  4042dc:	add	sp, sp, #0x30
  4042e0:	ret

00000000004042e4 <print_condition_greater>:
  4042e4:	sub	sp, sp, #0x50
  4042e8:	stp	x29, x30, [sp, #64]
  4042ec:	add	x29, sp, #0x40
  4042f0:	stur	x0, [x29, #-16]
  4042f4:	stur	x1, [x29, #-24]
  4042f8:	ldur	x8, [x29, #-16]
  4042fc:	ldr	w9, [x8]
  404300:	cmp	w9, #0x2
  404304:	b.ne	40443c <print_condition_greater+0x158>  // b.any
  404308:	ldur	x8, [x29, #-16]
  40430c:	ldr	x8, [x8, #8]
  404310:	ldr	w9, [x8, #8]
  404314:	cbnz	w9, 40443c <print_condition_greater+0x158>
  404318:	mov	w8, #0xffffffff            	// #-1
  40431c:	stur	w8, [x29, #-28]
  404320:	str	xzr, [sp, #24]
  404324:	ldr	x8, [sp, #24]
  404328:	ldur	x9, [x29, #-16]
  40432c:	ldr	x9, [x9, #8]
  404330:	ldr	x9, [x9, #16]
  404334:	ldr	x9, [x9, #8]
  404338:	cmp	x8, x9
  40433c:	b.cs	4043c8 <print_condition_greater+0xe4>  // b.hs, b.nlast
  404340:	ldur	x8, [x29, #-16]
  404344:	mov	x9, #0x8                   	// #8
  404348:	ldr	x8, [x8, #8]
  40434c:	ldr	x8, [x8, #16]
  404350:	ldr	x8, [x8]
  404354:	ldr	x10, [sp, #24]
  404358:	mul	x9, x9, x10
  40435c:	add	x8, x8, x9
  404360:	ldr	x8, [x8]
  404364:	str	x8, [sp, #16]
  404368:	ldr	x8, [sp, #16]
  40436c:	ldr	x8, [x8]
  404370:	ldr	w11, [x8]
  404374:	cbnz	w11, 4043a4 <print_condition_greater+0xc0>
  404378:	ldr	x8, [sp, #16]
  40437c:	ldr	x8, [x8, #8]
  404380:	ldr	w9, [x8]
  404384:	cbnz	w9, 4043a4 <print_condition_greater+0xc0>
  404388:	ldr	x8, [sp, #16]
  40438c:	ldr	x8, [x8]
  404390:	ldr	w9, [x8, #8]
  404394:	ldur	w10, [x29, #-28]
  404398:	add	w10, w10, #0x1
  40439c:	cmp	w9, w10
  4043a0:	b.eq	4043a8 <print_condition_greater+0xc4>  // b.none
  4043a4:	b	4043c8 <print_condition_greater+0xe4>
  4043a8:	ldr	x8, [sp, #16]
  4043ac:	ldr	x8, [x8, #8]
  4043b0:	ldr	w9, [x8, #8]
  4043b4:	stur	w9, [x29, #-28]
  4043b8:	ldr	x8, [sp, #24]
  4043bc:	add	x8, x8, #0x1
  4043c0:	str	x8, [sp, #24]
  4043c4:	b	404324 <print_condition_greater+0x40>
  4043c8:	ldr	x8, [sp, #24]
  4043cc:	ldur	x9, [x29, #-16]
  4043d0:	ldr	x9, [x9, #8]
  4043d4:	ldr	x9, [x9, #16]
  4043d8:	ldr	x9, [x9, #8]
  4043dc:	cmp	x8, x9
  4043e0:	b.ne	40443c <print_condition_greater+0x158>  // b.any
  4043e4:	ldur	x8, [x29, #-16]
  4043e8:	mov	x9, #0x8                   	// #8
  4043ec:	ldr	x8, [x8, #8]
  4043f0:	ldr	x8, [x8, #16]
  4043f4:	ldr	x8, [x8]
  4043f8:	ldr	x10, [sp, #24]
  4043fc:	subs	x10, x10, #0x1
  404400:	mul	x9, x9, x10
  404404:	add	x8, x8, x9
  404408:	ldr	x8, [x8]
  40440c:	str	x8, [sp, #8]
  404410:	ldur	x0, [x29, #-24]
  404414:	ldr	x8, [sp, #8]
  404418:	ldr	x8, [x8, #8]
  40441c:	ldr	w2, [x8, #8]
  404420:	adrp	x1, 405000 <usage+0x100>
  404424:	add	x1, x1, #0xad6
  404428:	bl	401560 <fprintf@plt>
  40442c:	mov	w11, #0x1                   	// #1
  404430:	and	w11, w11, #0x1
  404434:	sturb	w11, [x29, #-1]
  404438:	b	404448 <print_condition_greater+0x164>
  40443c:	mov	w8, wzr
  404440:	and	w8, w8, #0x1
  404444:	sturb	w8, [x29, #-1]
  404448:	ldurb	w8, [x29, #-1]
  40444c:	and	w0, w8, #0x1
  404450:	ldp	x29, x30, [sp, #64]
  404454:	add	sp, sp, #0x50
  404458:	ret

000000000040445c <print_relation>:
  40445c:	sub	sp, sp, #0x70
  404460:	stp	x29, x30, [sp, #96]
  404464:	add	x29, sp, #0x60
  404468:	mov	w8, #0x1                   	// #1
  40446c:	stur	x0, [x29, #-8]
  404470:	stur	w1, [x29, #-12]
  404474:	and	w8, w2, w8
  404478:	sturb	w8, [x29, #-13]
  40447c:	stur	x3, [x29, #-24]
  404480:	ldur	x9, [x29, #-8]
  404484:	ldr	w8, [x9, #8]
  404488:	cbnz	w8, 404714 <print_relation+0x2b8>
  40448c:	ldur	w8, [x29, #-12]
  404490:	cbnz	w8, 4044b4 <print_relation+0x58>
  404494:	ldur	x8, [x29, #-8]
  404498:	ldr	x8, [x8, #16]
  40449c:	ldr	x8, [x8, #8]
  4044a0:	cmp	x8, #0x1
  4044a4:	b.ls	4044b4 <print_relation+0x58>  // b.plast
  4044a8:	ldur	x1, [x29, #-24]
  4044ac:	mov	w0, #0x28                  	// #40
  4044b0:	bl	401300 <fputc@plt>
  4044b4:	stur	xzr, [x29, #-32]
  4044b8:	ldur	x8, [x29, #-32]
  4044bc:	ldur	x9, [x29, #-8]
  4044c0:	ldr	x9, [x9, #16]
  4044c4:	ldr	x9, [x9, #8]
  4044c8:	cmp	x8, x9
  4044cc:	b.cs	4046e8 <print_relation+0x28c>  // b.hs, b.nlast
  4044d0:	ldur	x8, [x29, #-8]
  4044d4:	ldr	x8, [x8, #16]
  4044d8:	ldr	x8, [x8]
  4044dc:	ldur	x9, [x29, #-32]
  4044e0:	mov	x10, #0x8                   	// #8
  4044e4:	mul	x9, x10, x9
  4044e8:	add	x8, x8, x9
  4044ec:	ldr	x8, [x8]
  4044f0:	stur	x8, [x29, #-40]
  4044f4:	ldur	x8, [x29, #-32]
  4044f8:	cmp	x8, #0x0
  4044fc:	cset	w11, ls  // ls = plast
  404500:	tbnz	w11, #0, 404514 <print_relation+0xb8>
  404504:	ldur	x0, [x29, #-24]
  404508:	adrp	x1, 405000 <usage+0x100>
  40450c:	add	x1, x1, #0xaf9
  404510:	bl	401560 <fprintf@plt>
  404514:	ldur	x8, [x29, #-40]
  404518:	ldr	x8, [x8]
  40451c:	ldr	w9, [x8, #8]
  404520:	ldur	x8, [x29, #-40]
  404524:	ldr	x8, [x8, #8]
  404528:	ldr	w10, [x8, #8]
  40452c:	cmp	w9, w10
  404530:	b.ne	4045b4 <print_relation+0x158>  // b.any
  404534:	ldur	x8, [x29, #-8]
  404538:	ldr	x0, [x8]
  40453c:	ldurb	w9, [x29, #-13]
  404540:	ldur	x2, [x29, #-24]
  404544:	and	w1, w9, #0x1
  404548:	bl	4049a4 <print_expression>
  40454c:	ldur	x0, [x29, #-24]
  404550:	ldurb	w9, [x29, #-13]
  404554:	mov	w10, #0x0                   	// #0
  404558:	str	x0, [sp, #32]
  40455c:	str	w10, [sp, #28]
  404560:	tbnz	w9, #0, 404568 <print_relation+0x10c>
  404564:	b	404580 <print_relation+0x124>
  404568:	ldur	x8, [x29, #-8]
  40456c:	ldr	x8, [x8, #16]
  404570:	ldr	x8, [x8, #8]
  404574:	cmp	x8, #0x1
  404578:	cset	w9, eq  // eq = none
  40457c:	str	w9, [sp, #28]
  404580:	ldr	w8, [sp, #28]
  404584:	adrp	x9, 405000 <usage+0x100>
  404588:	add	x9, x9, #0xb05
  40458c:	adrp	x10, 405000 <usage+0x100>
  404590:	add	x10, x10, #0xafe
  404594:	tst	w8, #0x1
  404598:	csel	x1, x10, x9, ne  // ne = any
  40459c:	ldur	x9, [x29, #-40]
  4045a0:	ldr	x9, [x9]
  4045a4:	ldr	w2, [x9, #8]
  4045a8:	ldr	x0, [sp, #32]
  4045ac:	bl	401560 <fprintf@plt>
  4045b0:	b	4046d8 <print_relation+0x27c>
  4045b4:	ldur	x8, [x29, #-40]
  4045b8:	ldr	x8, [x8]
  4045bc:	ldr	w9, [x8, #8]
  4045c0:	cbnz	w9, 4045fc <print_relation+0x1a0>
  4045c4:	ldur	x8, [x29, #-8]
  4045c8:	ldr	x0, [x8]
  4045cc:	ldur	x2, [x29, #-24]
  4045d0:	mov	w9, wzr
  4045d4:	and	w1, w9, #0x1
  4045d8:	bl	4049a4 <print_expression>
  4045dc:	ldur	x0, [x29, #-24]
  4045e0:	ldur	x8, [x29, #-40]
  4045e4:	ldr	x8, [x8, #8]
  4045e8:	ldr	w2, [x8, #8]
  4045ec:	adrp	x1, 405000 <usage+0x100>
  4045f0:	add	x1, x1, #0xb0a
  4045f4:	bl	401560 <fprintf@plt>
  4045f8:	b	4046d8 <print_relation+0x27c>
  4045fc:	ldur	w8, [x29, #-12]
  404600:	cmp	w8, #0x1
  404604:	b.eq	40461c <print_relation+0x1c0>  // b.none
  404608:	ldur	x8, [x29, #-8]
  40460c:	ldr	x8, [x8, #16]
  404610:	ldr	x8, [x8, #8]
  404614:	cmp	x8, #0x1
  404618:	b.ls	404628 <print_relation+0x1cc>  // b.plast
  40461c:	ldur	x1, [x29, #-24]
  404620:	mov	w0, #0x28                  	// #40
  404624:	bl	401300 <fputc@plt>
  404628:	ldur	x8, [x29, #-8]
  40462c:	ldr	x0, [x8]
  404630:	ldur	x2, [x29, #-24]
  404634:	mov	w9, wzr
  404638:	and	w1, w9, #0x1
  40463c:	str	w9, [sp, #24]
  404640:	bl	4049a4 <print_expression>
  404644:	ldur	x0, [x29, #-24]
  404648:	ldur	x8, [x29, #-40]
  40464c:	ldr	x8, [x8]
  404650:	ldr	w2, [x8, #8]
  404654:	adrp	x1, 405000 <usage+0x100>
  404658:	add	x1, x1, #0xb0f
  40465c:	bl	401560 <fprintf@plt>
  404660:	ldur	x8, [x29, #-24]
  404664:	mov	x0, x8
  404668:	adrp	x1, 405000 <usage+0x100>
  40466c:	add	x1, x1, #0xaf4
  404670:	bl	401560 <fprintf@plt>
  404674:	ldur	x8, [x29, #-8]
  404678:	ldr	x8, [x8]
  40467c:	ldur	x2, [x29, #-24]
  404680:	mov	x0, x8
  404684:	ldr	w9, [sp, #24]
  404688:	and	w1, w9, #0x1
  40468c:	bl	4049a4 <print_expression>
  404690:	ldur	x0, [x29, #-24]
  404694:	ldur	x8, [x29, #-40]
  404698:	ldr	x8, [x8, #8]
  40469c:	ldr	w2, [x8, #8]
  4046a0:	adrp	x1, 405000 <usage+0x100>
  4046a4:	add	x1, x1, #0xb0a
  4046a8:	bl	401560 <fprintf@plt>
  4046ac:	ldur	w9, [x29, #-12]
  4046b0:	cmp	w9, #0x1
  4046b4:	b.eq	4046cc <print_relation+0x270>  // b.none
  4046b8:	ldur	x8, [x29, #-8]
  4046bc:	ldr	x8, [x8, #16]
  4046c0:	ldr	x8, [x8, #8]
  4046c4:	cmp	x8, #0x1
  4046c8:	b.ls	4046d8 <print_relation+0x27c>  // b.plast
  4046cc:	ldur	x1, [x29, #-24]
  4046d0:	mov	w0, #0x29                  	// #41
  4046d4:	bl	401300 <fputc@plt>
  4046d8:	ldur	x8, [x29, #-32]
  4046dc:	add	x8, x8, #0x1
  4046e0:	stur	x8, [x29, #-32]
  4046e4:	b	4044b8 <print_relation+0x5c>
  4046e8:	ldur	w8, [x29, #-12]
  4046ec:	cbnz	w8, 404710 <print_relation+0x2b4>
  4046f0:	ldur	x8, [x29, #-8]
  4046f4:	ldr	x8, [x8, #16]
  4046f8:	ldr	x8, [x8, #8]
  4046fc:	cmp	x8, #0x1
  404700:	b.ls	404710 <print_relation+0x2b4>  // b.plast
  404704:	ldur	x1, [x29, #-24]
  404708:	mov	w0, #0x29                  	// #41
  40470c:	bl	401300 <fputc@plt>
  404710:	b	404998 <print_relation+0x53c>
  404714:	ldur	w8, [x29, #-12]
  404718:	cmp	w8, #0x1
  40471c:	b.ne	404740 <print_relation+0x2e4>  // b.any
  404720:	ldur	x8, [x29, #-8]
  404724:	ldr	x8, [x8, #16]
  404728:	ldr	x8, [x8, #8]
  40472c:	cmp	x8, #0x1
  404730:	b.ls	404740 <print_relation+0x2e4>  // b.plast
  404734:	ldur	x1, [x29, #-24]
  404738:	mov	w0, #0x28                  	// #40
  40473c:	bl	401300 <fputc@plt>
  404740:	str	xzr, [sp, #48]
  404744:	ldr	x8, [sp, #48]
  404748:	ldur	x9, [x29, #-8]
  40474c:	ldr	x9, [x9, #16]
  404750:	ldr	x9, [x9, #8]
  404754:	cmp	x8, x9
  404758:	b.cs	40496c <print_relation+0x510>  // b.hs, b.nlast
  40475c:	ldur	x8, [x29, #-8]
  404760:	ldr	x8, [x8, #16]
  404764:	ldr	x8, [x8]
  404768:	ldr	x9, [sp, #48]
  40476c:	mov	x10, #0x8                   	// #8
  404770:	mul	x9, x10, x9
  404774:	add	x8, x8, x9
  404778:	ldr	x8, [x8]
  40477c:	str	x8, [sp, #40]
  404780:	ldr	x8, [sp, #48]
  404784:	cmp	x8, #0x0
  404788:	cset	w11, ls  // ls = plast
  40478c:	tbnz	w11, #0, 4047a0 <print_relation+0x344>
  404790:	ldur	x0, [x29, #-24]
  404794:	adrp	x1, 405000 <usage+0x100>
  404798:	add	x1, x1, #0xaf4
  40479c:	bl	401560 <fprintf@plt>
  4047a0:	ldr	x8, [sp, #40]
  4047a4:	ldr	x8, [x8]
  4047a8:	ldr	w9, [x8, #8]
  4047ac:	ldr	x8, [sp, #40]
  4047b0:	ldr	x8, [x8, #8]
  4047b4:	ldr	w10, [x8, #8]
  4047b8:	cmp	w9, w10
  4047bc:	b.ne	404840 <print_relation+0x3e4>  // b.any
  4047c0:	ldur	x8, [x29, #-8]
  4047c4:	ldr	x0, [x8]
  4047c8:	ldurb	w9, [x29, #-13]
  4047cc:	ldur	x2, [x29, #-24]
  4047d0:	and	w1, w9, #0x1
  4047d4:	bl	4049a4 <print_expression>
  4047d8:	ldur	x0, [x29, #-24]
  4047dc:	ldurb	w9, [x29, #-13]
  4047e0:	mov	w10, #0x0                   	// #0
  4047e4:	str	x0, [sp, #16]
  4047e8:	str	w10, [sp, #12]
  4047ec:	tbnz	w9, #0, 4047f4 <print_relation+0x398>
  4047f0:	b	40480c <print_relation+0x3b0>
  4047f4:	ldur	x8, [x29, #-8]
  4047f8:	ldr	x8, [x8, #16]
  4047fc:	ldr	x8, [x8, #8]
  404800:	cmp	x8, #0x1
  404804:	cset	w9, eq  // eq = none
  404808:	str	w9, [sp, #12]
  40480c:	ldr	w8, [sp, #12]
  404810:	adrp	x9, 405000 <usage+0x100>
  404814:	add	x9, x9, #0xb1b
  404818:	adrp	x10, 405000 <usage+0x100>
  40481c:	add	x10, x10, #0xb14
  404820:	tst	w8, #0x1
  404824:	csel	x1, x10, x9, ne  // ne = any
  404828:	ldr	x9, [sp, #40]
  40482c:	ldr	x9, [x9]
  404830:	ldr	w2, [x9, #8]
  404834:	ldr	x0, [sp, #16]
  404838:	bl	401560 <fprintf@plt>
  40483c:	b	40495c <print_relation+0x500>
  404840:	ldr	x8, [sp, #40]
  404844:	ldr	x8, [x8]
  404848:	ldr	w9, [x8, #8]
  40484c:	cbnz	w9, 404888 <print_relation+0x42c>
  404850:	ldur	x8, [x29, #-8]
  404854:	ldr	x0, [x8]
  404858:	ldur	x2, [x29, #-24]
  40485c:	mov	w9, wzr
  404860:	and	w1, w9, #0x1
  404864:	bl	4049a4 <print_expression>
  404868:	ldur	x0, [x29, #-24]
  40486c:	ldr	x8, [sp, #40]
  404870:	ldr	x8, [x8, #8]
  404874:	ldr	w2, [x8, #8]
  404878:	adrp	x1, 405000 <usage+0x100>
  40487c:	add	x1, x1, #0xb20
  404880:	bl	401560 <fprintf@plt>
  404884:	b	40495c <print_relation+0x500>
  404888:	ldur	w8, [x29, #-12]
  40488c:	cbz	w8, 4048a4 <print_relation+0x448>
  404890:	ldur	x8, [x29, #-8]
  404894:	ldr	x8, [x8, #16]
  404898:	ldr	x8, [x8, #8]
  40489c:	cmp	x8, #0x1
  4048a0:	b.ls	4048b0 <print_relation+0x454>  // b.plast
  4048a4:	ldur	x1, [x29, #-24]
  4048a8:	mov	w0, #0x28                  	// #40
  4048ac:	bl	401300 <fputc@plt>
  4048b0:	ldur	x8, [x29, #-8]
  4048b4:	ldr	x0, [x8]
  4048b8:	ldur	x2, [x29, #-24]
  4048bc:	mov	w9, wzr
  4048c0:	and	w1, w9, #0x1
  4048c4:	str	w9, [sp, #8]
  4048c8:	bl	4049a4 <print_expression>
  4048cc:	ldur	x0, [x29, #-24]
  4048d0:	ldr	x8, [sp, #40]
  4048d4:	ldr	x8, [x8]
  4048d8:	ldr	w2, [x8, #8]
  4048dc:	adrp	x1, 405000 <usage+0x100>
  4048e0:	add	x1, x1, #0xb24
  4048e4:	bl	401560 <fprintf@plt>
  4048e8:	ldur	x8, [x29, #-24]
  4048ec:	mov	x0, x8
  4048f0:	adrp	x1, 405000 <usage+0x100>
  4048f4:	add	x1, x1, #0xaf9
  4048f8:	bl	401560 <fprintf@plt>
  4048fc:	ldur	x8, [x29, #-8]
  404900:	ldr	x8, [x8]
  404904:	ldur	x2, [x29, #-24]
  404908:	mov	x0, x8
  40490c:	ldr	w9, [sp, #8]
  404910:	and	w1, w9, #0x1
  404914:	bl	4049a4 <print_expression>
  404918:	ldur	x0, [x29, #-24]
  40491c:	ldr	x8, [sp, #40]
  404920:	ldr	x8, [x8, #8]
  404924:	ldr	w2, [x8, #8]
  404928:	adrp	x1, 405000 <usage+0x100>
  40492c:	add	x1, x1, #0xb20
  404930:	bl	401560 <fprintf@plt>
  404934:	ldur	w9, [x29, #-12]
  404938:	cbz	w9, 404950 <print_relation+0x4f4>
  40493c:	ldur	x8, [x29, #-8]
  404940:	ldr	x8, [x8, #16]
  404944:	ldr	x8, [x8, #8]
  404948:	cmp	x8, #0x1
  40494c:	b.ls	40495c <print_relation+0x500>  // b.plast
  404950:	ldur	x1, [x29, #-24]
  404954:	mov	w0, #0x29                  	// #41
  404958:	bl	401300 <fputc@plt>
  40495c:	ldr	x8, [sp, #48]
  404960:	add	x8, x8, #0x1
  404964:	str	x8, [sp, #48]
  404968:	b	404744 <print_relation+0x2e8>
  40496c:	ldur	w8, [x29, #-12]
  404970:	cmp	w8, #0x1
  404974:	b.ne	404998 <print_relation+0x53c>  // b.any
  404978:	ldur	x8, [x29, #-8]
  40497c:	ldr	x8, [x8, #16]
  404980:	ldr	x8, [x8, #8]
  404984:	cmp	x8, #0x1
  404988:	b.ls	404998 <print_relation+0x53c>  // b.plast
  40498c:	ldur	x1, [x29, #-24]
  404990:	mov	w0, #0x29                  	// #41
  404994:	bl	401300 <fputc@plt>
  404998:	ldp	x29, x30, [sp, #96]
  40499c:	add	sp, sp, #0x70
  4049a0:	ret

00000000004049a4 <print_expression>:
  4049a4:	sub	sp, sp, #0x30
  4049a8:	stp	x29, x30, [sp, #32]
  4049ac:	add	x29, sp, #0x20
  4049b0:	stur	x0, [x29, #-8]
  4049b4:	and	w8, w1, #0x1
  4049b8:	sturb	w8, [x29, #-9]
  4049bc:	str	x2, [sp, #8]
  4049c0:	ldur	x9, [x29, #-8]
  4049c4:	ldr	w8, [x9, #4]
  4049c8:	cbnz	w8, 4049e0 <print_expression+0x3c>
  4049cc:	ldr	x0, [sp, #8]
  4049d0:	adrp	x1, 405000 <usage+0x100>
  4049d4:	add	x1, x1, #0xcf8
  4049d8:	bl	401560 <fprintf@plt>
  4049dc:	b	404a0c <print_expression+0x68>
  4049e0:	ldr	x0, [sp, #8]
  4049e4:	ldurb	w8, [x29, #-9]
  4049e8:	adrp	x9, 405000 <usage+0x100>
  4049ec:	add	x9, x9, #0xb30
  4049f0:	adrp	x10, 405000 <usage+0x100>
  4049f4:	add	x10, x10, #0xb28
  4049f8:	tst	w8, #0x1
  4049fc:	csel	x1, x10, x9, ne  // ne = any
  404a00:	ldur	x9, [x29, #-8]
  404a04:	ldr	w2, [x9, #4]
  404a08:	bl	401560 <fprintf@plt>
  404a0c:	ldp	x29, x30, [sp, #32]
  404a10:	add	sp, sp, #0x30
  404a14:	ret

0000000000404a18 <main>:
  404a18:	sub	sp, sp, #0xf0
  404a1c:	stp	x29, x30, [sp, #224]
  404a20:	add	x29, sp, #0xe0
  404a24:	mov	w8, #0x0                   	// #0
  404a28:	mov	w9, #0x6                   	// #6
  404a2c:	adrp	x10, 405000 <usage+0x100>
  404a30:	add	x10, x10, #0xd49
  404a34:	adrp	x11, 405000 <usage+0x100>
  404a38:	add	x11, x11, #0xb36
  404a3c:	adrp	x12, 405000 <usage+0x100>
  404a40:	add	x12, x12, #0xb44
  404a44:	adrp	x13, 405000 <usage+0x100>
  404a48:	add	x13, x13, #0x9cd
  404a4c:	adrp	x14, 401000 <_init-0x230>
  404a50:	add	x14, x14, #0x3f0
  404a54:	adrp	x15, 417000 <memcpy@GLIBC_2.17>
  404a58:	add	x15, x15, #0x1b0
  404a5c:	stur	wzr, [x29, #-4]
  404a60:	stur	w0, [x29, #-8]
  404a64:	stur	x1, [x29, #-16]
  404a68:	sturb	w8, [x29, #-17]
  404a6c:	sturb	w8, [x29, #-18]
  404a70:	sturb	w8, [x29, #-19]
  404a74:	ldur	x16, [x29, #-16]
  404a78:	ldr	x0, [x16]
  404a7c:	stur	w9, [x29, #-100]
  404a80:	str	x10, [sp, #112]
  404a84:	str	x11, [sp, #104]
  404a88:	str	x12, [sp, #96]
  404a8c:	str	x13, [sp, #88]
  404a90:	str	x14, [sp, #80]
  404a94:	str	x15, [sp, #72]
  404a98:	bl	4012b0 <set_program_name@plt>
  404a9c:	ldur	w0, [x29, #-100]
  404aa0:	ldr	x1, [sp, #112]
  404aa4:	bl	401570 <setlocale@plt>
  404aa8:	ldr	x10, [sp, #104]
  404aac:	mov	x0, x10
  404ab0:	ldr	x1, [sp, #96]
  404ab4:	bl	401390 <bindtextdomain@plt>
  404ab8:	ldr	x10, [sp, #88]
  404abc:	mov	x0, x10
  404ac0:	ldr	x1, [sp, #96]
  404ac4:	bl	401390 <bindtextdomain@plt>
  404ac8:	ldr	x10, [sp, #104]
  404acc:	mov	x0, x10
  404ad0:	bl	401450 <textdomain@plt>
  404ad4:	ldr	x10, [sp, #80]
  404ad8:	mov	x0, x10
  404adc:	bl	405650 <atexit>
  404ae0:	ldur	w0, [x29, #-8]
  404ae4:	ldur	x1, [x29, #-16]
  404ae8:	adrp	x2, 405000 <usage+0x100>
  404aec:	add	x2, x2, #0xb56
  404af0:	adrp	x3, 406000 <yystos+0x667>
  404af4:	add	x3, x3, #0xe0
  404af8:	mov	x8, xzr
  404afc:	mov	x4, x8
  404b00:	bl	401460 <getopt_long@plt>
  404b04:	stur	w0, [x29, #-24]
  404b08:	mov	w9, #0xffffffff            	// #-1
  404b0c:	cmp	w0, w9
  404b10:	b.eq	404b88 <main+0x170>  // b.none
  404b14:	ldur	w8, [x29, #-24]
  404b18:	str	w8, [sp, #68]
  404b1c:	cbz	w8, 404b54 <main+0x13c>
  404b20:	b	404b24 <main+0x10c>
  404b24:	ldr	w8, [sp, #68]
  404b28:	cmp	w8, #0x56
  404b2c:	b.eq	404b70 <main+0x158>  // b.none
  404b30:	b	404b34 <main+0x11c>
  404b34:	ldr	w8, [sp, #68]
  404b38:	cmp	w8, #0x63
  404b3c:	b.eq	404b58 <main+0x140>  // b.none
  404b40:	b	404b44 <main+0x12c>
  404b44:	ldr	w8, [sp, #68]
  404b48:	cmp	w8, #0x68
  404b4c:	b.eq	404b64 <main+0x14c>  // b.none
  404b50:	b	404b7c <main+0x164>
  404b54:	b	404b84 <main+0x16c>
  404b58:	mov	w8, #0x1                   	// #1
  404b5c:	sturb	w8, [x29, #-17]
  404b60:	b	404b84 <main+0x16c>
  404b64:	mov	w8, #0x1                   	// #1
  404b68:	sturb	w8, [x29, #-18]
  404b6c:	b	404b84 <main+0x16c>
  404b70:	mov	w8, #0x1                   	// #1
  404b74:	sturb	w8, [x29, #-19]
  404b78:	b	404b84 <main+0x16c>
  404b7c:	mov	w0, #0x1                   	// #1
  404b80:	bl	404f00 <usage>
  404b84:	b	404ae0 <main+0xc8>
  404b88:	ldurb	w8, [x29, #-19]
  404b8c:	tbnz	w8, #0, 404b94 <main+0x17c>
  404b90:	b	404c30 <main+0x218>
  404b94:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  404b98:	add	x8, x8, #0x1c8
  404b9c:	ldr	x0, [x8]
  404ba0:	bl	401480 <basename@plt>
  404ba4:	adrp	x8, 405000 <usage+0x100>
  404ba8:	add	x8, x8, #0xb5a
  404bac:	str	x0, [sp, #56]
  404bb0:	mov	x0, x8
  404bb4:	ldr	x1, [sp, #56]
  404bb8:	ldr	x2, [sp, #104]
  404bbc:	adrp	x3, 405000 <usage+0x100>
  404bc0:	add	x3, x3, #0xb6a
  404bc4:	bl	401510 <printf@plt>
  404bc8:	adrp	x8, 405000 <usage+0x100>
  404bcc:	add	x8, x8, #0xb71
  404bd0:	mov	x0, x8
  404bd4:	bl	401540 <gettext@plt>
  404bd8:	adrp	x1, 405000 <usage+0x100>
  404bdc:	add	x1, x1, #0xc4b
  404be0:	adrp	x2, 405000 <usage+0x100>
  404be4:	add	x2, x2, #0xc55
  404be8:	bl	401510 <printf@plt>
  404bec:	adrp	x8, 405000 <usage+0x100>
  404bf0:	add	x8, x8, #0xc77
  404bf4:	mov	x0, x8
  404bf8:	bl	401540 <gettext@plt>
  404bfc:	adrp	x8, 405000 <usage+0x100>
  404c00:	add	x8, x8, #0xc87
  404c04:	str	x0, [sp, #48]
  404c08:	mov	x0, x8
  404c0c:	bl	4014a0 <proper_name@plt>
  404c10:	ldr	x1, [sp, #48]
  404c14:	str	x0, [sp, #40]
  404c18:	mov	x0, x1
  404c1c:	ldr	x1, [sp, #40]
  404c20:	bl	401510 <printf@plt>
  404c24:	mov	w9, wzr
  404c28:	mov	w0, w9
  404c2c:	bl	401290 <exit@plt>
  404c30:	ldurb	w8, [x29, #-18]
  404c34:	tbnz	w8, #0, 404c3c <main+0x224>
  404c38:	b	404c48 <main+0x230>
  404c3c:	mov	w8, wzr
  404c40:	mov	w0, w8
  404c44:	bl	404f00 <usage>
  404c48:	ldur	w8, [x29, #-8]
  404c4c:	ldr	x9, [sp, #72]
  404c50:	ldr	w10, [x9]
  404c54:	add	w10, w10, #0x2
  404c58:	cmp	w8, w10
  404c5c:	b.ne	404dcc <main+0x3b4>  // b.any
  404c60:	ldur	x8, [x29, #-16]
  404c64:	ldr	x9, [sp, #72]
  404c68:	ldrsw	x10, [x9]
  404c6c:	mov	x11, #0x8                   	// #8
  404c70:	mul	x10, x11, x10
  404c74:	add	x8, x8, x10
  404c78:	ldr	x8, [x8]
  404c7c:	stur	x8, [x29, #-32]
  404c80:	ldur	x8, [x29, #-16]
  404c84:	ldr	w12, [x9]
  404c88:	add	w12, w12, #0x1
  404c8c:	mov	w0, w12
  404c90:	sxtw	x10, w0
  404c94:	mul	x10, x11, x10
  404c98:	add	x8, x8, x10
  404c9c:	ldr	x8, [x8]
  404ca0:	stur	x8, [x29, #-40]
  404ca4:	mov	w0, #0x51ad                	// #20909
  404ca8:	bl	401370 <xmlCheckVersion@plt>
  404cac:	ldur	x0, [x29, #-40]
  404cb0:	adrp	x1, 405000 <usage+0x100>
  404cb4:	add	x1, x1, #0xceb
  404cb8:	bl	401330 <fopen@plt>
  404cbc:	stur	x0, [x29, #-56]
  404cc0:	ldur	x8, [x29, #-56]
  404cc4:	cbnz	x8, 404cf4 <main+0x2dc>
  404cc8:	adrp	x0, 405000 <usage+0x100>
  404ccc:	add	x0, x0, #0xc92
  404cd0:	bl	401540 <gettext@plt>
  404cd4:	ldur	x3, [x29, #-40]
  404cd8:	mov	w8, #0x1                   	// #1
  404cdc:	str	x0, [sp, #32]
  404ce0:	mov	w0, w8
  404ce4:	mov	w8, wzr
  404ce8:	mov	w1, w8
  404cec:	ldr	x2, [sp, #32]
  404cf0:	bl	4012a0 <error@plt>
  404cf4:	ldur	x0, [x29, #-56]
  404cf8:	ldur	x1, [x29, #-40]
  404cfc:	ldur	x2, [x29, #-40]
  404d00:	ldur	x3, [x29, #-32]
  404d04:	bl	405044 <extract_rules>
  404d08:	stur	x0, [x29, #-48]
  404d0c:	ldur	x0, [x29, #-56]
  404d10:	bl	401320 <fclose@plt>
  404d14:	ldur	x8, [x29, #-48]
  404d18:	cbnz	x8, 404d48 <main+0x330>
  404d1c:	adrp	x0, 405000 <usage+0x100>
  404d20:	add	x0, x0, #0xca4
  404d24:	bl	401540 <gettext@plt>
  404d28:	ldur	x3, [x29, #-32]
  404d2c:	mov	w8, #0x1                   	// #1
  404d30:	str	x0, [sp, #24]
  404d34:	mov	w0, w8
  404d38:	mov	w8, wzr
  404d3c:	mov	w1, w8
  404d40:	ldr	x2, [sp, #24]
  404d44:	bl	4012a0 <error@plt>
  404d48:	ldurb	w8, [x29, #-17]
  404d4c:	tbnz	w8, #0, 404d54 <main+0x33c>
  404d50:	b	404d68 <main+0x350>
  404d54:	ldur	x1, [x29, #-48]
  404d58:	adrp	x0, 405000 <usage+0x100>
  404d5c:	add	x0, x0, #0xb66
  404d60:	bl	401510 <printf@plt>
  404d64:	b	404dc0 <main+0x3a8>
  404d68:	ldur	x0, [x29, #-48]
  404d6c:	bl	402eb0 <cldr_plural_parse>
  404d70:	stur	x0, [x29, #-64]
  404d74:	ldur	x8, [x29, #-64]
  404d78:	cbnz	x8, 404da4 <main+0x38c>
  404d7c:	adrp	x0, 405000 <usage+0x100>
  404d80:	add	x0, x0, #0xcc0
  404d84:	bl	401540 <gettext@plt>
  404d88:	mov	w8, #0x1                   	// #1
  404d8c:	str	x0, [sp, #16]
  404d90:	mov	w0, w8
  404d94:	mov	w8, wzr
  404d98:	mov	w1, w8
  404d9c:	ldr	x2, [sp, #16]
  404da0:	bl	4012a0 <error@plt>
  404da4:	ldur	x0, [x29, #-64]
  404da8:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  404dac:	add	x8, x8, #0x1b8
  404db0:	ldr	x1, [x8]
  404db4:	bl	402f58 <cldr_plural_rule_list_print>
  404db8:	ldur	x0, [x29, #-64]
  404dbc:	bl	402e00 <cldr_plural_rule_list_free>
  404dc0:	ldur	x0, [x29, #-48]
  404dc4:	bl	4014c0 <free@plt>
  404dc8:	b	404eec <main+0x4d4>
  404dcc:	ldur	w8, [x29, #-8]
  404dd0:	ldr	x9, [sp, #72]
  404dd4:	ldr	w10, [x9]
  404dd8:	cmp	w8, w10
  404ddc:	b.ne	404ea8 <main+0x490>  // b.any
  404de0:	mov	x8, xzr
  404de4:	stur	x8, [x29, #-72]
  404de8:	stur	xzr, [x29, #-80]
  404dec:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  404df0:	add	x8, x8, #0x1c0
  404df4:	ldr	x2, [x8]
  404df8:	sub	x0, x29, #0x48
  404dfc:	sub	x1, x29, #0x50
  404e00:	bl	401490 <getline@plt>
  404e04:	stur	w0, [x29, #-84]
  404e08:	ldur	w9, [x29, #-84]
  404e0c:	cmp	w9, #0x0
  404e10:	cset	w9, ge  // ge = tcont
  404e14:	tbnz	w9, #0, 404e1c <main+0x404>
  404e18:	b	404e9c <main+0x484>
  404e1c:	ldur	w8, [x29, #-84]
  404e20:	cmp	w8, #0x0
  404e24:	cset	w8, le
  404e28:	tbnz	w8, #0, 404e68 <main+0x450>
  404e2c:	ldur	x8, [x29, #-72]
  404e30:	ldur	w9, [x29, #-84]
  404e34:	subs	w9, w9, #0x1
  404e38:	ldrb	w9, [x8, w9, sxtw]
  404e3c:	cmp	w9, #0xa
  404e40:	b.ne	404e68 <main+0x450>  // b.any
  404e44:	ldur	x8, [x29, #-72]
  404e48:	ldur	w9, [x29, #-84]
  404e4c:	subs	w9, w9, #0x1
  404e50:	stur	w9, [x29, #-84]
  404e54:	mov	w0, w9
  404e58:	sxtw	x10, w0
  404e5c:	add	x8, x8, x10
  404e60:	mov	w9, #0x0                   	// #0
  404e64:	strb	w9, [x8]
  404e68:	ldur	x0, [x29, #-72]
  404e6c:	bl	402eb0 <cldr_plural_parse>
  404e70:	stur	x0, [x29, #-96]
  404e74:	ldur	x8, [x29, #-96]
  404e78:	cbz	x8, 404e98 <main+0x480>
  404e7c:	ldur	x0, [x29, #-96]
  404e80:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  404e84:	add	x8, x8, #0x1b8
  404e88:	ldr	x1, [x8]
  404e8c:	bl	402f58 <cldr_plural_rule_list_print>
  404e90:	ldur	x0, [x29, #-96]
  404e94:	bl	402e00 <cldr_plural_rule_list_free>
  404e98:	b	404dec <main+0x3d4>
  404e9c:	ldur	x0, [x29, #-72]
  404ea0:	bl	4014c0 <free@plt>
  404ea4:	b	404eec <main+0x4d4>
  404ea8:	adrp	x0, 405000 <usage+0x100>
  404eac:	add	x0, x0, #0xcd7
  404eb0:	bl	401540 <gettext@plt>
  404eb4:	ldur	x8, [x29, #-16]
  404eb8:	ldr	x9, [sp, #72]
  404ebc:	ldrsw	x10, [x9]
  404ec0:	mov	x11, #0x8                   	// #8
  404ec4:	mul	x10, x11, x10
  404ec8:	add	x8, x8, x10
  404ecc:	ldr	x3, [x8]
  404ed0:	mov	w12, #0x1                   	// #1
  404ed4:	str	x0, [sp, #8]
  404ed8:	mov	w0, w12
  404edc:	mov	w12, wzr
  404ee0:	mov	w1, w12
  404ee4:	ldr	x2, [sp, #8]
  404ee8:	bl	4012a0 <error@plt>
  404eec:	mov	w8, wzr
  404ef0:	mov	w0, w8
  404ef4:	ldp	x29, x30, [sp, #224]
  404ef8:	add	sp, sp, #0xf0
  404efc:	ret

0000000000404f00 <usage>:
  404f00:	sub	sp, sp, #0x30
  404f04:	stp	x29, x30, [sp, #32]
  404f08:	add	x29, sp, #0x20
  404f0c:	adrp	x8, 405000 <usage+0x100>
  404f10:	add	x8, x8, #0xd48
  404f14:	stur	w0, [x29, #-4]
  404f18:	ldur	w9, [x29, #-4]
  404f1c:	str	x8, [sp, #16]
  404f20:	cbz	w9, 404f68 <usage+0x68>
  404f24:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  404f28:	add	x8, x8, #0x1a8
  404f2c:	ldr	x0, [x8]
  404f30:	adrp	x8, 405000 <usage+0x100>
  404f34:	add	x8, x8, #0xcfa
  404f38:	str	x0, [sp, #8]
  404f3c:	mov	x0, x8
  404f40:	bl	401540 <gettext@plt>
  404f44:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  404f48:	add	x8, x8, #0x1c8
  404f4c:	ldr	x2, [x8]
  404f50:	ldr	x8, [sp, #8]
  404f54:	str	x0, [sp]
  404f58:	mov	x0, x8
  404f5c:	ldr	x1, [sp]
  404f60:	bl	401560 <fprintf@plt>
  404f64:	b	40503c <usage+0x13c>
  404f68:	adrp	x0, 405000 <usage+0x100>
  404f6c:	add	x0, x0, #0xd21
  404f70:	bl	401540 <gettext@plt>
  404f74:	adrp	x8, 417000 <memcpy@GLIBC_2.17>
  404f78:	add	x8, x8, #0x1c8
  404f7c:	ldr	x1, [x8]
  404f80:	bl	401510 <printf@plt>
  404f84:	ldr	x8, [sp, #16]
  404f88:	mov	x0, x8
  404f8c:	bl	401510 <printf@plt>
  404f90:	adrp	x8, 405000 <usage+0x100>
  404f94:	add	x8, x8, #0xd4a
  404f98:	mov	x0, x8
  404f9c:	bl	401540 <gettext@plt>
  404fa0:	bl	401510 <printf@plt>
  404fa4:	ldr	x8, [sp, #16]
  404fa8:	mov	x0, x8
  404fac:	bl	401510 <printf@plt>
  404fb0:	adrp	x8, 405000 <usage+0x100>
  404fb4:	add	x8, x8, #0xe53
  404fb8:	mov	x0, x8
  404fbc:	bl	401540 <gettext@plt>
  404fc0:	bl	401510 <printf@plt>
  404fc4:	ldr	x8, [sp, #16]
  404fc8:	mov	x0, x8
  404fcc:	bl	401510 <printf@plt>
  404fd0:	adrp	x8, 405000 <usage+0x100>
  404fd4:	add	x8, x8, #0xebf
  404fd8:	mov	x0, x8
  404fdc:	bl	401540 <gettext@plt>
  404fe0:	bl	401510 <printf@plt>
  404fe4:	adrp	x8, 405000 <usage+0x100>
  404fe8:	add	x8, x8, #0xf04
  404fec:	mov	x0, x8
  404ff0:	bl	401540 <gettext@plt>
  404ff4:	bl	401510 <printf@plt>
  404ff8:	adrp	x8, 405000 <usage+0x100>
  404ffc:	add	x8, x8, #0xf3e
  405000:	mov	x0, x8
  405004:	bl	401540 <gettext@plt>
  405008:	bl	401510 <printf@plt>
  40500c:	ldr	x8, [sp, #16]
  405010:	mov	x0, x8
  405014:	bl	401510 <printf@plt>
  405018:	adrp	x8, 405000 <usage+0x100>
  40501c:	add	x8, x8, #0xf81
  405020:	mov	x0, x8
  405024:	bl	401540 <gettext@plt>
  405028:	adrp	x1, 405000 <usage+0x100>
  40502c:	add	x1, x1, #0xfbe
  405030:	adrp	x2, 405000 <usage+0x100>
  405034:	add	x2, x2, #0xfe8
  405038:	bl	401510 <printf@plt>
  40503c:	ldur	w0, [x29, #-4]
  405040:	bl	401290 <exit@plt>

0000000000405044 <extract_rules>:
  405044:	sub	sp, sp, #0x150
  405048:	stp	x29, x30, [sp, #304]
  40504c:	str	x28, [sp, #320]
  405050:	add	x29, sp, #0x130
  405054:	mov	x8, xzr
  405058:	mov	w9, #0x940                 	// #2368
  40505c:	adrp	x10, 406000 <yystos+0x667>
  405060:	add	x10, x10, #0x1b
  405064:	adrp	x11, 406000 <yystos+0x667>
  405068:	add	x11, x11, #0x8f
  40506c:	adrp	x12, 417000 <memcpy@GLIBC_2.17>
  405070:	add	x12, x12, #0x1d0
  405074:	adrp	x13, 406000 <yystos+0x667>
  405078:	add	x13, x13, #0xd0
  40507c:	stur	x0, [x29, #-8]
  405080:	stur	x1, [x29, #-16]
  405084:	stur	x2, [x29, #-24]
  405088:	stur	x3, [x29, #-32]
  40508c:	stur	x8, [x29, #-72]
  405090:	stur	xzr, [x29, #-88]
  405094:	stur	xzr, [x29, #-96]
  405098:	ldur	x0, [x29, #-8]
  40509c:	str	x8, [sp, #144]
  4050a0:	str	w9, [sp, #140]
  4050a4:	str	x10, [sp, #128]
  4050a8:	str	x11, [sp, #120]
  4050ac:	str	x12, [sp, #112]
  4050b0:	str	x13, [sp, #104]
  4050b4:	bl	401310 <fileno@plt>
  4050b8:	ldur	x1, [x29, #-24]
  4050bc:	ldr	x2, [sp, #144]
  4050c0:	ldr	w3, [sp, #140]
  4050c4:	bl	401410 <xmlReadFd@plt>
  4050c8:	stur	x0, [x29, #-40]
  4050cc:	ldur	x8, [x29, #-40]
  4050d0:	cbnz	x8, 405100 <extract_rules+0xbc>
  4050d4:	adrp	x0, 405000 <usage+0x100>
  4050d8:	add	x0, x0, #0xffc
  4050dc:	bl	401540 <gettext@plt>
  4050e0:	ldur	x3, [x29, #-24]
  4050e4:	mov	w8, #0x1                   	// #1
  4050e8:	str	x0, [sp, #96]
  4050ec:	mov	w0, w8
  4050f0:	mov	w8, wzr
  4050f4:	mov	w1, w8
  4050f8:	ldr	x2, [sp, #96]
  4050fc:	bl	4012a0 <error@plt>
  405100:	ldur	x0, [x29, #-40]
  405104:	bl	401530 <xmlDocGetRootElement@plt>
  405108:	stur	x0, [x29, #-48]
  40510c:	ldur	x8, [x29, #-48]
  405110:	cbz	x8, 405128 <extract_rules+0xe4>
  405114:	ldur	x8, [x29, #-48]
  405118:	ldr	x0, [x8, #16]
  40511c:	ldr	x1, [sp, #128]
  405120:	bl	401520 <xmlStrEqual@plt>
  405124:	cbnz	w0, 405174 <extract_rules+0x130>
  405128:	ldur	x2, [x29, #-24]
  40512c:	ldur	x0, [x29, #-48]
  405130:	str	x2, [sp, #88]
  405134:	bl	4014e0 <xmlGetLineNo@plt>
  405138:	adrp	x8, 406000 <yystos+0x667>
  40513c:	add	x8, x8, #0x2c
  405140:	str	w0, [sp, #84]
  405144:	mov	x0, x8
  405148:	bl	401540 <gettext@plt>
  40514c:	mov	w9, wzr
  405150:	str	x0, [sp, #72]
  405154:	mov	w0, w9
  405158:	mov	w1, w9
  40515c:	ldr	x2, [sp, #88]
  405160:	ldr	w3, [sp, #84]
  405164:	ldr	x4, [sp, #72]
  405168:	ldr	x5, [sp, #128]
  40516c:	bl	401550 <error_at_line@plt>
  405170:	b	4055a8 <extract_rules+0x564>
  405174:	ldur	x8, [x29, #-48]
  405178:	ldr	x8, [x8, #24]
  40517c:	stur	x8, [x29, #-56]
  405180:	ldur	x8, [x29, #-56]
  405184:	cbz	x8, 4051c4 <extract_rules+0x180>
  405188:	ldur	x8, [x29, #-56]
  40518c:	ldr	w9, [x8, #8]
  405190:	cmp	w9, #0x1
  405194:	b.ne	4051b4 <extract_rules+0x170>  // b.any
  405198:	ldur	x8, [x29, #-56]
  40519c:	ldr	x0, [x8, #16]
  4051a0:	adrp	x1, 406000 <yystos+0x667>
  4051a4:	add	x1, x1, #0x4a
  4051a8:	bl	401520 <xmlStrEqual@plt>
  4051ac:	cbz	w0, 4051b4 <extract_rules+0x170>
  4051b0:	b	4051c4 <extract_rules+0x180>
  4051b4:	ldur	x8, [x29, #-56]
  4051b8:	ldr	x8, [x8, #48]
  4051bc:	stur	x8, [x29, #-56]
  4051c0:	b	405180 <extract_rules+0x13c>
  4051c4:	ldur	x8, [x29, #-56]
  4051c8:	cbnz	x8, 405200 <extract_rules+0x1bc>
  4051cc:	adrp	x0, 406000 <yystos+0x667>
  4051d0:	add	x0, x0, #0x52
  4051d4:	bl	401540 <gettext@plt>
  4051d8:	mov	w8, wzr
  4051dc:	str	x0, [sp, #64]
  4051e0:	mov	w0, w8
  4051e4:	mov	w1, w8
  4051e8:	ldr	x2, [sp, #64]
  4051ec:	ldr	x3, [sp, #128]
  4051f0:	adrp	x4, 406000 <yystos+0x667>
  4051f4:	add	x4, x4, #0x4a
  4051f8:	bl	4012a0 <error@plt>
  4051fc:	b	4055a8 <extract_rules+0x564>
  405200:	ldur	x0, [x29, #-32]
  405204:	bl	401280 <strlen@plt>
  405208:	stur	x0, [x29, #-64]
  40520c:	ldur	x8, [x29, #-56]
  405210:	ldr	x8, [x8, #24]
  405214:	stur	x8, [x29, #-56]
  405218:	ldur	x8, [x29, #-56]
  40521c:	cbz	x8, 40557c <extract_rules+0x538>
  405220:	mov	w8, #0x0                   	// #0
  405224:	sturb	w8, [x29, #-121]
  405228:	ldur	x9, [x29, #-56]
  40522c:	ldr	w8, [x9, #8]
  405230:	cmp	w8, #0x1
  405234:	b.ne	405250 <extract_rules+0x20c>  // b.any
  405238:	ldur	x8, [x29, #-56]
  40523c:	ldr	x0, [x8, #16]
  405240:	adrp	x1, 406000 <yystos+0x667>
  405244:	add	x1, x1, #0x83
  405248:	bl	401520 <xmlStrEqual@plt>
  40524c:	cbnz	w0, 405254 <extract_rules+0x210>
  405250:	b	40556c <extract_rules+0x528>
  405254:	ldur	x0, [x29, #-56]
  405258:	ldr	x1, [sp, #120]
  40525c:	bl	4012c0 <xmlHasProp@plt>
  405260:	cbnz	x0, 4052b8 <extract_rules+0x274>
  405264:	ldur	x2, [x29, #-24]
  405268:	ldur	x0, [x29, #-56]
  40526c:	str	x2, [sp, #56]
  405270:	bl	4014e0 <xmlGetLineNo@plt>
  405274:	adrp	x8, 406000 <yystos+0x667>
  405278:	add	x8, x8, #0x97
  40527c:	str	w0, [sp, #52]
  405280:	mov	x0, x8
  405284:	bl	401540 <gettext@plt>
  405288:	mov	w9, wzr
  40528c:	str	x0, [sp, #40]
  405290:	mov	w0, w9
  405294:	mov	w1, w9
  405298:	ldr	x2, [sp, #56]
  40529c:	ldr	w3, [sp, #52]
  4052a0:	ldr	x4, [sp, #40]
  4052a4:	adrp	x5, 406000 <yystos+0x667>
  4052a8:	add	x5, x5, #0x83
  4052ac:	ldr	x6, [sp, #120]
  4052b0:	bl	401550 <error_at_line@plt>
  4052b4:	b	40556c <extract_rules+0x528>
  4052b8:	ldur	x0, [x29, #-56]
  4052bc:	ldr	x1, [sp, #120]
  4052c0:	bl	401360 <xmlGetProp@plt>
  4052c4:	stur	x0, [x29, #-104]
  4052c8:	stur	x0, [x29, #-112]
  4052cc:	ldur	x8, [x29, #-112]
  4052d0:	ldrb	w9, [x8]
  4052d4:	cbz	w9, 405390 <extract_rules+0x34c>
  4052d8:	ldur	x8, [x29, #-112]
  4052dc:	ldrb	w0, [x8]
  4052e0:	bl	4014f0 <c_isspace@plt>
  4052e4:	tbnz	w0, #0, 4052ec <extract_rules+0x2a8>
  4052e8:	b	4052fc <extract_rules+0x2b8>
  4052ec:	ldur	x8, [x29, #-112]
  4052f0:	add	x8, x8, #0x1
  4052f4:	stur	x8, [x29, #-112]
  4052f8:	b	4052d8 <extract_rules+0x294>
  4052fc:	ldur	x0, [x29, #-112]
  405300:	ldur	x1, [x29, #-32]
  405304:	ldur	x8, [x29, #-64]
  405308:	mov	w2, w8
  40530c:	bl	401500 <xmlStrncmp@plt>
  405310:	cbnz	w0, 405348 <extract_rules+0x304>
  405314:	ldur	x8, [x29, #-112]
  405318:	ldur	x9, [x29, #-64]
  40531c:	ldrb	w10, [x8, x9]
  405320:	cbz	w10, 40533c <extract_rules+0x2f8>
  405324:	ldur	x8, [x29, #-112]
  405328:	ldur	x9, [x29, #-64]
  40532c:	ldrb	w0, [x8, x9]
  405330:	bl	4014f0 <c_isspace@plt>
  405334:	tbnz	w0, #0, 40533c <extract_rules+0x2f8>
  405338:	b	405348 <extract_rules+0x304>
  40533c:	mov	w8, #0x1                   	// #1
  405340:	sturb	w8, [x29, #-121]
  405344:	b	405390 <extract_rules+0x34c>
  405348:	ldur	x8, [x29, #-112]
  40534c:	ldrb	w9, [x8]
  405350:	mov	w10, #0x0                   	// #0
  405354:	str	w10, [sp, #36]
  405358:	cbz	w9, 405370 <extract_rules+0x32c>
  40535c:	ldur	x8, [x29, #-112]
  405360:	ldrb	w0, [x8]
  405364:	bl	4014f0 <c_isspace@plt>
  405368:	eor	w9, w0, #0x1
  40536c:	str	w9, [sp, #36]
  405370:	ldr	w8, [sp, #36]
  405374:	tbnz	w8, #0, 40537c <extract_rules+0x338>
  405378:	b	40538c <extract_rules+0x348>
  40537c:	ldur	x8, [x29, #-112]
  405380:	add	x8, x8, #0x1
  405384:	stur	x8, [x29, #-112]
  405388:	b	405348 <extract_rules+0x304>
  40538c:	b	4052cc <extract_rules+0x288>
  405390:	ldr	x8, [sp, #112]
  405394:	ldr	x9, [x8]
  405398:	ldur	x0, [x29, #-104]
  40539c:	blr	x9
  4053a0:	ldurb	w10, [x29, #-121]
  4053a4:	tbnz	w10, #0, 4053ac <extract_rules+0x368>
  4053a8:	b	40556c <extract_rules+0x528>
  4053ac:	ldur	x8, [x29, #-56]
  4053b0:	ldr	x8, [x8, #24]
  4053b4:	stur	x8, [x29, #-120]
  4053b8:	ldur	x8, [x29, #-120]
  4053bc:	cbz	x8, 40556c <extract_rules+0x528>
  4053c0:	ldur	x8, [x29, #-120]
  4053c4:	ldr	w9, [x8, #8]
  4053c8:	cmp	w9, #0x1
  4053cc:	b.ne	4053e8 <extract_rules+0x3a4>  // b.any
  4053d0:	ldur	x8, [x29, #-120]
  4053d4:	ldr	x0, [x8, #16]
  4053d8:	adrp	x1, 406000 <yystos+0x667>
  4053dc:	add	x1, x1, #0xc5
  4053e0:	bl	401520 <xmlStrEqual@plt>
  4053e4:	cbnz	w0, 4053ec <extract_rules+0x3a8>
  4053e8:	b	40555c <extract_rules+0x518>
  4053ec:	ldur	x0, [x29, #-120]
  4053f0:	ldr	x1, [sp, #104]
  4053f4:	bl	4012c0 <xmlHasProp@plt>
  4053f8:	cbnz	x0, 405450 <extract_rules+0x40c>
  4053fc:	ldur	x2, [x29, #-24]
  405400:	ldur	x0, [x29, #-120]
  405404:	str	x2, [sp, #24]
  405408:	bl	4014e0 <xmlGetLineNo@plt>
  40540c:	adrp	x8, 406000 <yystos+0x667>
  405410:	add	x8, x8, #0x97
  405414:	str	w0, [sp, #20]
  405418:	mov	x0, x8
  40541c:	bl	401540 <gettext@plt>
  405420:	mov	w9, wzr
  405424:	str	x0, [sp, #8]
  405428:	mov	w0, w9
  40542c:	mov	w1, w9
  405430:	ldr	x2, [sp, #24]
  405434:	ldr	w3, [sp, #20]
  405438:	ldr	x4, [sp, #8]
  40543c:	adrp	x5, 406000 <yystos+0x667>
  405440:	add	x5, x5, #0xc5
  405444:	ldr	x6, [sp, #104]
  405448:	bl	401550 <error_at_line@plt>
  40544c:	b	40556c <extract_rules+0x528>
  405450:	ldur	x0, [x29, #-120]
  405454:	ldr	x1, [sp, #104]
  405458:	bl	401360 <xmlGetProp@plt>
  40545c:	stur	x0, [x29, #-136]
  405460:	ldur	x0, [x29, #-120]
  405464:	bl	401400 <xmlNodeGetContent@plt>
  405468:	stur	x0, [x29, #-144]
  40546c:	ldur	x0, [x29, #-136]
  405470:	bl	4013e0 <xmlStrlen@plt>
  405474:	mov	w1, w0
  405478:	sxtw	x8, w1
  40547c:	add	x8, x8, #0x2
  405480:	ldur	x0, [x29, #-144]
  405484:	str	x8, [sp]
  405488:	bl	4013e0 <xmlStrlen@plt>
  40548c:	ldr	x8, [sp]
  405490:	add	x9, x8, w0, sxtw
  405494:	add	x9, x9, #0x2
  405498:	str	x9, [sp, #152]
  40549c:	ldur	x9, [x29, #-96]
  4054a0:	ldr	x10, [sp, #152]
  4054a4:	add	x9, x9, x10
  4054a8:	add	x9, x9, #0x1
  4054ac:	ldur	x10, [x29, #-88]
  4054b0:	cmp	x9, x10
  4054b4:	b.ls	405508 <extract_rules+0x4c4>  // b.plast
  4054b8:	ldur	x8, [x29, #-88]
  4054bc:	mov	x9, #0x2                   	// #2
  4054c0:	mul	x8, x8, x9
  4054c4:	stur	x8, [x29, #-88]
  4054c8:	ldur	x8, [x29, #-88]
  4054cc:	ldur	x9, [x29, #-96]
  4054d0:	ldr	x10, [sp, #152]
  4054d4:	add	x9, x9, x10
  4054d8:	add	x9, x9, #0x1
  4054dc:	cmp	x8, x9
  4054e0:	b.cs	4054f8 <extract_rules+0x4b4>  // b.hs, b.nlast
  4054e4:	ldur	x8, [x29, #-96]
  4054e8:	ldr	x9, [sp, #152]
  4054ec:	add	x8, x8, x9
  4054f0:	add	x8, x8, #0x1
  4054f4:	stur	x8, [x29, #-88]
  4054f8:	ldur	x0, [x29, #-72]
  4054fc:	ldur	x1, [x29, #-88]
  405500:	bl	401350 <xrealloc@plt>
  405504:	stur	x0, [x29, #-72]
  405508:	ldur	x8, [x29, #-72]
  40550c:	ldur	x9, [x29, #-96]
  405510:	add	x0, x8, x9
  405514:	ldur	x2, [x29, #-136]
  405518:	ldur	x3, [x29, #-144]
  40551c:	adrp	x1, 406000 <yystos+0x667>
  405520:	add	x1, x1, #0xd6
  405524:	bl	4012d0 <sprintf@plt>
  405528:	ldr	x8, [sp, #112]
  40552c:	ldr	x9, [x8]
  405530:	ldur	x10, [x29, #-136]
  405534:	mov	x0, x10
  405538:	blr	x9
  40553c:	ldr	x8, [sp, #112]
  405540:	ldr	x9, [x8]
  405544:	ldur	x0, [x29, #-144]
  405548:	blr	x9
  40554c:	ldr	x8, [sp, #152]
  405550:	ldur	x9, [x29, #-96]
  405554:	add	x8, x9, x8
  405558:	stur	x8, [x29, #-96]
  40555c:	ldur	x8, [x29, #-120]
  405560:	ldr	x8, [x8, #48]
  405564:	stur	x8, [x29, #-120]
  405568:	b	4053b8 <extract_rules+0x374>
  40556c:	ldur	x8, [x29, #-56]
  405570:	ldr	x8, [x8, #48]
  405574:	stur	x8, [x29, #-56]
  405578:	b	405218 <extract_rules+0x1d4>
  40557c:	ldur	x8, [x29, #-72]
  405580:	cbz	x8, 4055a8 <extract_rules+0x564>
  405584:	ldur	x0, [x29, #-72]
  405588:	mov	w1, #0x3b                  	// #59
  40558c:	bl	401420 <strrchr@plt>
  405590:	stur	x0, [x29, #-80]
  405594:	ldur	x8, [x29, #-80]
  405598:	cbz	x8, 4055a8 <extract_rules+0x564>
  40559c:	ldur	x8, [x29, #-80]
  4055a0:	mov	w9, #0x0                   	// #0
  4055a4:	strb	w9, [x8]
  4055a8:	ldur	x0, [x29, #-40]
  4055ac:	bl	4012e0 <xmlFreeDoc@plt>
  4055b0:	ldur	x0, [x29, #-72]
  4055b4:	ldr	x28, [sp, #320]
  4055b8:	ldp	x29, x30, [sp, #304]
  4055bc:	add	sp, sp, #0x150
  4055c0:	ret
  4055c4:	nop

00000000004055c8 <__libc_csu_init>:
  4055c8:	stp	x29, x30, [sp, #-64]!
  4055cc:	mov	x29, sp
  4055d0:	stp	x19, x20, [sp, #16]
  4055d4:	adrp	x20, 416000 <__FRAME_END__+0xfd84>
  4055d8:	add	x20, x20, #0xd80
  4055dc:	stp	x21, x22, [sp, #32]
  4055e0:	adrp	x21, 416000 <__FRAME_END__+0xfd84>
  4055e4:	add	x21, x21, #0xd78
  4055e8:	sub	x20, x20, x21
  4055ec:	mov	w22, w0
  4055f0:	stp	x23, x24, [sp, #48]
  4055f4:	mov	x23, x1
  4055f8:	mov	x24, x2
  4055fc:	bl	401230 <_init>
  405600:	cmp	xzr, x20, asr #3
  405604:	b.eq	405630 <__libc_csu_init+0x68>  // b.none
  405608:	asr	x20, x20, #3
  40560c:	mov	x19, #0x0                   	// #0
  405610:	ldr	x3, [x21, x19, lsl #3]
  405614:	mov	x2, x24
  405618:	add	x19, x19, #0x1
  40561c:	mov	x1, x23
  405620:	mov	w0, w22
  405624:	blr	x3
  405628:	cmp	x20, x19
  40562c:	b.ne	405610 <__libc_csu_init+0x48>  // b.any
  405630:	ldp	x19, x20, [sp, #16]
  405634:	ldp	x21, x22, [sp, #32]
  405638:	ldp	x23, x24, [sp, #48]
  40563c:	ldp	x29, x30, [sp], #64
  405640:	ret
  405644:	nop

0000000000405648 <__libc_csu_fini>:
  405648:	ret
  40564c:	nop

0000000000405650 <atexit>:
  405650:	adrp	x2, 417000 <memcpy@GLIBC_2.17>
  405654:	mov	x1, #0x0                   	// #0
  405658:	ldr	x2, [x2, #400]
  40565c:	b	4012f0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000405660 <_fini>:
  405660:	stp	x29, x30, [sp, #-16]!
  405664:	mov	x29, sp
  405668:	ldp	x29, x30, [sp], #16
  40566c:	ret
