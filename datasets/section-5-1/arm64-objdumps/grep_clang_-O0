
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402240 <.init>:
  402240:	stp	x29, x30, [sp, #-16]!
  402244:	mov	x29, sp
  402248:	bl	402970 <wcrtomb@plt+0x60>
  40224c:	ldp	x29, x30, [sp], #16
  402250:	ret

Disassembly of section .plt:

0000000000402260 <mbrtowc@plt-0x20>:
  402260:	stp	x16, x30, [sp, #-16]!
  402264:	adrp	x16, 454000 <_obstack_memory_used@@Base+0x2c6e0>
  402268:	ldr	x17, [x16, #4088]
  40226c:	add	x16, x16, #0xff8
  402270:	br	x17
  402274:	nop
  402278:	nop
  40227c:	nop

0000000000402280 <mbrtowc@plt>:
  402280:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402284:	ldr	x17, [x16]
  402288:	add	x16, x16, #0x0
  40228c:	br	x17

0000000000402290 <memcpy@plt>:
  402290:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402294:	ldr	x17, [x16, #8]
  402298:	add	x16, x16, #0x8
  40229c:	br	x17

00000000004022a0 <sigaltstack@plt>:
  4022a0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #16]
  4022a8:	add	x16, x16, #0x10
  4022ac:	br	x17

00000000004022b0 <memmove@plt>:
  4022b0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #24]
  4022b8:	add	x16, x16, #0x18
  4022bc:	br	x17

00000000004022c0 <isalpha@plt>:
  4022c0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #32]
  4022c8:	add	x16, x16, #0x20
  4022cc:	br	x17

00000000004022d0 <_exit@plt>:
  4022d0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #40]
  4022d8:	add	x16, x16, #0x28
  4022dc:	br	x17

00000000004022e0 <fwrite_unlocked@plt>:
  4022e0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #48]
  4022e8:	add	x16, x16, #0x30
  4022ec:	br	x17

00000000004022f0 <strlen@plt>:
  4022f0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #56]
  4022f8:	add	x16, x16, #0x38
  4022fc:	br	x17

0000000000402300 <fputs@plt>:
  402300:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402304:	ldr	x17, [x16, #64]
  402308:	add	x16, x16, #0x40
  40230c:	br	x17

0000000000402310 <exit@plt>:
  402310:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16, #72]
  402318:	add	x16, x16, #0x48
  40231c:	br	x17

0000000000402320 <raise@plt>:
  402320:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #80]
  402328:	add	x16, x16, #0x50
  40232c:	br	x17

0000000000402330 <error@plt>:
  402330:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #88]
  402338:	add	x16, x16, #0x58
  40233c:	br	x17

0000000000402340 <fchdir@plt>:
  402340:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #96]
  402348:	add	x16, x16, #0x60
  40234c:	br	x17

0000000000402350 <strtoimax@plt>:
  402350:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #104]
  402358:	add	x16, x16, #0x68
  40235c:	br	x17

0000000000402360 <wctype@plt>:
  402360:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #112]
  402368:	add	x16, x16, #0x70
  40236c:	br	x17

0000000000402370 <ferror_unlocked@plt>:
  402370:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #120]
  402378:	add	x16, x16, #0x78
  40237c:	br	x17

0000000000402380 <__cxa_atexit@plt>:
  402380:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #128]
  402388:	add	x16, x16, #0x80
  40238c:	br	x17

0000000000402390 <iswcntrl@plt>:
  402390:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #136]
  402398:	add	x16, x16, #0x88
  40239c:	br	x17

00000000004023a0 <qsort@plt>:
  4023a0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #144]
  4023a8:	add	x16, x16, #0x90
  4023ac:	br	x17

00000000004023b0 <isblank@plt>:
  4023b0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #152]
  4023b8:	add	x16, x16, #0x98
  4023bc:	br	x17

00000000004023c0 <lseek@plt>:
  4023c0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #160]
  4023c8:	add	x16, x16, #0xa0
  4023cc:	br	x17

00000000004023d0 <__fpending@plt>:
  4023d0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #168]
  4023d8:	add	x16, x16, #0xa8
  4023dc:	br	x17

00000000004023e0 <putc_unlocked@plt>:
  4023e0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #176]
  4023e8:	add	x16, x16, #0xb0
  4023ec:	br	x17

00000000004023f0 <fclose@plt>:
  4023f0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #184]
  4023f8:	add	x16, x16, #0xb8
  4023fc:	br	x17

0000000000402400 <wctob@plt>:
  402400:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #192]
  402408:	add	x16, x16, #0xc0
  40240c:	br	x17

0000000000402410 <nl_langinfo@plt>:
  402410:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #200]
  402418:	add	x16, x16, #0xc8
  40241c:	br	x17

0000000000402420 <fopen@plt>:
  402420:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #208]
  402428:	add	x16, x16, #0xd0
  40242c:	br	x17

0000000000402430 <isspace@plt>:
  402430:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #216]
  402438:	add	x16, x16, #0xd8
  40243c:	br	x17

0000000000402440 <iswctype@plt>:
  402440:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #224]
  402448:	add	x16, x16, #0xe0
  40244c:	br	x17

0000000000402450 <malloc@plt>:
  402450:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #232]
  402458:	add	x16, x16, #0xe8
  40245c:	br	x17

0000000000402460 <toupper@plt>:
  402460:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #240]
  402468:	add	x16, x16, #0xf0
  40246c:	br	x17

0000000000402470 <wcwidth@plt>:
  402470:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #248]
  402478:	add	x16, x16, #0xf8
  40247c:	br	x17

0000000000402480 <open@plt>:
  402480:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #256]
  402488:	add	x16, x16, #0x100
  40248c:	br	x17

0000000000402490 <splice@plt>:
  402490:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #264]
  402498:	add	x16, x16, #0x108
  40249c:	br	x17

00000000004024a0 <islower@plt>:
  4024a0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #272]
  4024a8:	add	x16, x16, #0x110
  4024ac:	br	x17

00000000004024b0 <isxdigit@plt>:
  4024b0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #280]
  4024b8:	add	x16, x16, #0x118
  4024bc:	br	x17

00000000004024c0 <sigemptyset@plt>:
  4024c0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #288]
  4024c8:	add	x16, x16, #0x120
  4024cc:	br	x17

00000000004024d0 <strncmp@plt>:
  4024d0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #296]
  4024d8:	add	x16, x16, #0x128
  4024dc:	br	x17

00000000004024e0 <bindtextdomain@plt>:
  4024e0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #304]
  4024e8:	add	x16, x16, #0x130
  4024ec:	br	x17

00000000004024f0 <isdigit@plt>:
  4024f0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #312]
  4024f8:	add	x16, x16, #0x138
  4024fc:	br	x17

0000000000402500 <__libc_start_main@plt>:
  402500:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #320]
  402508:	add	x16, x16, #0x140
  40250c:	br	x17

0000000000402510 <fstatfs@plt>:
  402510:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #328]
  402518:	add	x16, x16, #0x148
  40251c:	br	x17

0000000000402520 <memset@plt>:
  402520:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #336]
  402528:	add	x16, x16, #0x150
  40252c:	br	x17

0000000000402530 <putchar_unlocked@plt>:
  402530:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #344]
  402538:	add	x16, x16, #0x158
  40253c:	br	x17

0000000000402540 <calloc@plt>:
  402540:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #352]
  402548:	add	x16, x16, #0x160
  40254c:	br	x17

0000000000402550 <isupper@plt>:
  402550:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #360]
  402558:	add	x16, x16, #0x168
  40255c:	br	x17

0000000000402560 <readdir@plt>:
  402560:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #368]
  402568:	add	x16, x16, #0x170
  40256c:	br	x17

0000000000402570 <realloc@plt>:
  402570:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #376]
  402578:	add	x16, x16, #0x178
  40257c:	br	x17

0000000000402580 <closedir@plt>:
  402580:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #384]
  402588:	add	x16, x16, #0x180
  40258c:	br	x17

0000000000402590 <getc_unlocked@plt>:
  402590:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #392]
  402598:	add	x16, x16, #0x188
  40259c:	br	x17

00000000004025a0 <close@plt>:
  4025a0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #400]
  4025a8:	add	x16, x16, #0x190
  4025ac:	br	x17

00000000004025b0 <sigaction@plt>:
  4025b0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #408]
  4025b8:	add	x16, x16, #0x198
  4025bc:	br	x17

00000000004025c0 <strrchr@plt>:
  4025c0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #416]
  4025c8:	add	x16, x16, #0x1a0
  4025cc:	br	x17

00000000004025d0 <__gmon_start__@plt>:
  4025d0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #424]
  4025d8:	add	x16, x16, #0x1a8
  4025dc:	br	x17

00000000004025e0 <fdopendir@plt>:
  4025e0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #432]
  4025e8:	add	x16, x16, #0x1b0
  4025ec:	br	x17

00000000004025f0 <write@plt>:
  4025f0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #440]
  4025f8:	add	x16, x16, #0x1b8
  4025fc:	br	x17

0000000000402600 <btowc@plt>:
  402600:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #448]
  402608:	add	x16, x16, #0x1c0
  40260c:	br	x17

0000000000402610 <abort@plt>:
  402610:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #456]
  402618:	add	x16, x16, #0x1c8
  40261c:	br	x17

0000000000402620 <iscntrl@plt>:
  402620:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #464]
  402628:	add	x16, x16, #0x1d0
  40262c:	br	x17

0000000000402630 <mbsinit@plt>:
  402630:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #472]
  402638:	add	x16, x16, #0x1d8
  40263c:	br	x17

0000000000402640 <ispunct@plt>:
  402640:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #480]
  402648:	add	x16, x16, #0x1e0
  40264c:	br	x17

0000000000402650 <puts@plt>:
  402650:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #488]
  402658:	add	x16, x16, #0x1e8
  40265c:	br	x17

0000000000402660 <fread_unlocked@plt>:
  402660:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #496]
  402668:	add	x16, x16, #0x1f0
  40266c:	br	x17

0000000000402670 <memcmp@plt>:
  402670:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #504]
  402678:	add	x16, x16, #0x1f8
  40267c:	br	x17

0000000000402680 <textdomain@plt>:
  402680:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #512]
  402688:	add	x16, x16, #0x200
  40268c:	br	x17

0000000000402690 <getopt_long@plt>:
  402690:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #520]
  402698:	add	x16, x16, #0x208
  40269c:	br	x17

00000000004026a0 <strcmp@plt>:
  4026a0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #528]
  4026a8:	add	x16, x16, #0x210
  4026ac:	br	x17

00000000004026b0 <__ctype_b_loc@plt>:
  4026b0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #536]
  4026b8:	add	x16, x16, #0x218
  4026bc:	br	x17

00000000004026c0 <free@plt>:
  4026c0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #544]
  4026c8:	add	x16, x16, #0x220
  4026cc:	br	x17

00000000004026d0 <__ctype_get_mb_cur_max@plt>:
  4026d0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #552]
  4026d8:	add	x16, x16, #0x228
  4026dc:	br	x17

00000000004026e0 <strchr@plt>:
  4026e0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #560]
  4026e8:	add	x16, x16, #0x230
  4026ec:	br	x17

00000000004026f0 <memrchr@plt>:
  4026f0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #568]
  4026f8:	add	x16, x16, #0x238
  4026fc:	br	x17

0000000000402700 <fnmatch@plt>:
  402700:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #576]
  402708:	add	x16, x16, #0x240
  40270c:	br	x17

0000000000402710 <fflush_unlocked@plt>:
  402710:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #584]
  402718:	add	x16, x16, #0x248
  40271c:	br	x17

0000000000402720 <fcntl@plt>:
  402720:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #592]
  402728:	add	x16, x16, #0x250
  40272c:	br	x17

0000000000402730 <strcpy@plt>:
  402730:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #600]
  402738:	add	x16, x16, #0x258
  40273c:	br	x17

0000000000402740 <dirfd@plt>:
  402740:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #608]
  402748:	add	x16, x16, #0x260
  40274c:	br	x17

0000000000402750 <__lxstat@plt>:
  402750:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #616]
  402758:	add	x16, x16, #0x268
  40275c:	br	x17

0000000000402760 <read@plt>:
  402760:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #624]
  402768:	add	x16, x16, #0x270
  40276c:	br	x17

0000000000402770 <memchr@plt>:
  402770:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #632]
  402778:	add	x16, x16, #0x278
  40277c:	br	x17

0000000000402780 <isatty@plt>:
  402780:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #640]
  402788:	add	x16, x16, #0x280
  40278c:	br	x17

0000000000402790 <sysconf@plt>:
  402790:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #648]
  402798:	add	x16, x16, #0x288
  40279c:	br	x17

00000000004027a0 <isgraph@plt>:
  4027a0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #656]
  4027a8:	add	x16, x16, #0x290
  4027ac:	br	x17

00000000004027b0 <iswalnum@plt>:
  4027b0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #664]
  4027b8:	add	x16, x16, #0x298
  4027bc:	br	x17

00000000004027c0 <__fxstat@plt>:
  4027c0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #672]
  4027c8:	add	x16, x16, #0x2a0
  4027cc:	br	x17

00000000004027d0 <strstr@plt>:
  4027d0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #680]
  4027d8:	add	x16, x16, #0x2a8
  4027dc:	br	x17

00000000004027e0 <fputs_unlocked@plt>:
  4027e0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #688]
  4027e8:	add	x16, x16, #0x2b0
  4027ec:	br	x17

00000000004027f0 <strcoll@plt>:
  4027f0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #696]
  4027f8:	add	x16, x16, #0x2b8
  4027fc:	br	x17

0000000000402800 <isalnum@plt>:
  402800:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #704]
  402808:	add	x16, x16, #0x2c0
  40280c:	br	x17

0000000000402810 <towupper@plt>:
  402810:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #712]
  402818:	add	x16, x16, #0x2c8
  40281c:	br	x17

0000000000402820 <iswprint@plt>:
  402820:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #720]
  402828:	add	x16, x16, #0x2d0
  40282c:	br	x17

0000000000402830 <vfprintf@plt>:
  402830:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #728]
  402838:	add	x16, x16, #0x2d8
  40283c:	br	x17

0000000000402840 <openat@plt>:
  402840:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #736]
  402848:	add	x16, x16, #0x2e0
  40284c:	br	x17

0000000000402850 <printf@plt>:
  402850:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #744]
  402858:	add	x16, x16, #0x2e8
  40285c:	br	x17

0000000000402860 <__assert_fail@plt>:
  402860:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #752]
  402868:	add	x16, x16, #0x2f0
  40286c:	br	x17

0000000000402870 <__errno_location@plt>:
  402870:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #760]
  402878:	add	x16, x16, #0x2f8
  40287c:	br	x17

0000000000402880 <tolower@plt>:
  402880:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #768]
  402888:	add	x16, x16, #0x300
  40288c:	br	x17

0000000000402890 <getenv@plt>:
  402890:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #776]
  402898:	add	x16, x16, #0x308
  40289c:	br	x17

00000000004028a0 <__xstat@plt>:
  4028a0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #784]
  4028a8:	add	x16, x16, #0x310
  4028ac:	br	x17

00000000004028b0 <gettext@plt>:
  4028b0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #792]
  4028b8:	add	x16, x16, #0x318
  4028bc:	br	x17

00000000004028c0 <towlower@plt>:
  4028c0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #800]
  4028c8:	add	x16, x16, #0x320
  4028cc:	br	x17

00000000004028d0 <fprintf@plt>:
  4028d0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #808]
  4028d8:	add	x16, x16, #0x328
  4028dc:	br	x17

00000000004028e0 <isprint@plt>:
  4028e0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #816]
  4028e8:	add	x16, x16, #0x330
  4028ec:	br	x17

00000000004028f0 <setlocale@plt>:
  4028f0:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #824]
  4028f8:	add	x16, x16, #0x338
  4028fc:	br	x17

0000000000402900 <__fxstatat@plt>:
  402900:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #832]
  402908:	add	x16, x16, #0x340
  40290c:	br	x17

0000000000402910 <wcrtomb@plt>:
  402910:	adrp	x16, 455000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #840]
  402918:	add	x16, x16, #0x348
  40291c:	br	x17

Disassembly of section .text:

0000000000402920 <_obstack_begin@@Base-0x24964>:
  402920:	mov	x29, #0x0                   	// #0
  402924:	mov	x30, #0x0                   	// #0
  402928:	mov	x5, x0
  40292c:	ldr	x1, [sp]
  402930:	add	x2, sp, #0x8
  402934:	mov	x6, sp
  402938:	movz	x0, #0x0, lsl #48
  40293c:	movk	x0, #0x0, lsl #32
  402940:	movk	x0, #0x40, lsl #16
  402944:	movk	x0, #0x4444
  402948:	movz	x3, #0x0, lsl #48
  40294c:	movk	x3, #0x0, lsl #32
  402950:	movk	x3, #0x44, lsl #16
  402954:	movk	x3, #0xb10
  402958:	movz	x4, #0x0, lsl #48
  40295c:	movk	x4, #0x0, lsl #32
  402960:	movk	x4, #0x44, lsl #16
  402964:	movk	x4, #0xb90
  402968:	bl	402500 <__libc_start_main@plt>
  40296c:	bl	402610 <abort@plt>
  402970:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x2c6e0>
  402974:	ldr	x0, [x0, #4064]
  402978:	cbz	x0, 402980 <wcrtomb@plt+0x70>
  40297c:	b	4025d0 <__gmon_start__@plt>
  402980:	ret
  402984:	nop
  402988:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40298c:	add	x0, x0, #0x438
  402990:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  402994:	add	x1, x1, #0x438
  402998:	cmp	x1, x0
  40299c:	b.eq	4029b4 <wcrtomb@plt+0xa4>  // b.none
  4029a0:	adrp	x1, 440000 <_obstack_memory_used@@Base+0x186e0>
  4029a4:	ldr	x1, [x1, #3088]
  4029a8:	cbz	x1, 4029b4 <wcrtomb@plt+0xa4>
  4029ac:	mov	x16, x1
  4029b0:	br	x16
  4029b4:	ret
  4029b8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4029bc:	add	x0, x0, #0x438
  4029c0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4029c4:	add	x1, x1, #0x438
  4029c8:	sub	x1, x1, x0
  4029cc:	lsr	x2, x1, #63
  4029d0:	add	x1, x2, x1, asr #3
  4029d4:	cmp	xzr, x1, asr #1
  4029d8:	asr	x1, x1, #1
  4029dc:	b.eq	4029f4 <wcrtomb@plt+0xe4>  // b.none
  4029e0:	adrp	x2, 440000 <_obstack_memory_used@@Base+0x186e0>
  4029e4:	ldr	x2, [x2, #3096]
  4029e8:	cbz	x2, 4029f4 <wcrtomb@plt+0xe4>
  4029ec:	mov	x16, x2
  4029f0:	br	x16
  4029f4:	ret
  4029f8:	stp	x29, x30, [sp, #-32]!
  4029fc:	mov	x29, sp
  402a00:	str	x19, [sp, #16]
  402a04:	adrp	x19, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  402a08:	ldrb	w0, [x19, #1136]
  402a0c:	cbnz	w0, 402a1c <wcrtomb@plt+0x10c>
  402a10:	bl	402988 <wcrtomb@plt+0x78>
  402a14:	mov	w0, #0x1                   	// #1
  402a18:	strb	w0, [x19, #1136]
  402a1c:	ldr	x19, [sp, #16]
  402a20:	ldp	x29, x30, [sp], #32
  402a24:	ret
  402a28:	b	4029b8 <wcrtomb@plt+0xa8>
  402a2c:	sub	sp, sp, #0x20
  402a30:	stp	x29, x30, [sp, #16]
  402a34:	add	x29, sp, #0x10
  402a38:	mov	w8, #0x2                   	// #2
  402a3c:	mov	w9, wzr
  402a40:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  402a44:	add	x2, x2, #0x122
  402a48:	str	x0, [sp, #8]
  402a4c:	ldr	x3, [sp, #8]
  402a50:	mov	w0, w8
  402a54:	mov	w1, w9
  402a58:	bl	402330 <error@plt>
  402a5c:	sub	sp, sp, #0x20
  402a60:	stp	x29, x30, [sp, #16]
  402a64:	add	x29, sp, #0x10
  402a68:	adrp	x8, 440000 <_obstack_memory_used@@Base+0x186e0>
  402a6c:	add	x8, x8, #0xc20
  402a70:	str	x0, [sp, #8]
  402a74:	mov	x0, x8
  402a78:	bl	402890 <getenv@plt>
  402a7c:	cbnz	x0, 402a88 <wcrtomb@plt+0x178>
  402a80:	ldr	x0, [sp, #8]
  402a84:	bl	402a2c <wcrtomb@plt+0x11c>
  402a88:	ldp	x29, x30, [sp, #16]
  402a8c:	add	sp, sp, #0x20
  402a90:	ret
  402a94:	sub	sp, sp, #0x120
  402a98:	stp	x29, x30, [sp, #256]
  402a9c:	str	x28, [sp, #272]
  402aa0:	add	x29, sp, #0x100
  402aa4:	mov	x8, #0x1                   	// #1
  402aa8:	mov	x9, #0x48                  	// #72
  402aac:	adrp	x10, 459000 <__progname@@GLIBC_2.17+0x3b98>
  402ab0:	add	x10, x10, #0xdce
  402ab4:	adrp	x11, 459000 <__progname@@GLIBC_2.17+0x3b98>
  402ab8:	add	x11, x11, #0x8c8
  402abc:	adrp	x12, 459000 <__progname@@GLIBC_2.17+0x3b98>
  402ac0:	add	x12, x12, #0xdcd
  402ac4:	stur	x0, [x29, #-8]
  402ac8:	stur	x1, [x29, #-16]
  402acc:	stur	x2, [x29, #-24]
  402ad0:	mov	x0, x8
  402ad4:	mov	x1, x9
  402ad8:	str	x10, [sp, #64]
  402adc:	str	x11, [sp, #56]
  402ae0:	str	x12, [sp, #48]
  402ae4:	bl	4232c8 <wcrtomb@plt+0x209b8>
  402ae8:	stur	x0, [x29, #-40]
  402aec:	bl	413aa0 <wcrtomb@plt+0x11190>
  402af0:	ldur	x8, [x29, #-40]
  402af4:	str	x0, [x8, #8]
  402af8:	ldr	x8, [sp, #64]
  402afc:	ldrb	w13, [x8]
  402b00:	tbnz	w13, #0, 402b08 <wcrtomb@plt+0x1f8>
  402b04:	b	402b14 <wcrtomb@plt+0x204>
  402b08:	ldur	x8, [x29, #-24]
  402b0c:	orr	x8, x8, #0x400000
  402b10:	stur	x8, [x29, #-24]
  402b14:	ldur	x0, [x29, #-24]
  402b18:	bl	427dd8 <_obstack_memory_used@@Base+0x4b8>
  402b1c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  402b20:	add	x8, x8, #0x8c4
  402b24:	ldrb	w9, [x8]
  402b28:	mov	w10, wzr
  402b2c:	mov	w11, #0x2                   	// #2
  402b30:	cmp	w9, #0x0
  402b34:	csel	w9, w10, w11, ne  // ne = any
  402b38:	stur	w9, [x29, #-44]
  402b3c:	ldur	x8, [x29, #-40]
  402b40:	ldr	x8, [x8, #8]
  402b44:	ldur	x2, [x29, #-24]
  402b48:	ldur	w3, [x29, #-44]
  402b4c:	mov	x0, x8
  402b50:	ldr	x1, [sp, #56]
  402b54:	bl	413ab8 <wcrtomb@plt+0x111a8>
  402b58:	ldr	x8, [sp, #56]
  402b5c:	ldrb	w9, [x8]
  402b60:	mov	w10, #0x1                   	// #1
  402b64:	eor	w9, w9, #0x1
  402b68:	and	w9, w9, #0x1
  402b6c:	ldrb	w11, [x8, #2]
  402b70:	and	w11, w11, #0x1
  402b74:	orr	w9, w9, w11
  402b78:	cmp	w9, #0x0
  402b7c:	cset	w9, ne  // ne = any
  402b80:	and	w9, w9, w10
  402b84:	sturb	w9, [x29, #-45]
  402b88:	ldur	x12, [x29, #-8]
  402b8c:	stur	x12, [x29, #-56]
  402b90:	ldur	x12, [x29, #-8]
  402b94:	ldur	x13, [x29, #-16]
  402b98:	add	x12, x12, x13
  402b9c:	stur	x12, [x29, #-64]
  402ba0:	mov	w9, #0x0                   	// #0
  402ba4:	sturb	w9, [x29, #-65]
  402ba8:	mov	x0, #0x40                  	// #64
  402bac:	bl	423058 <wcrtomb@plt+0x20748>
  402bb0:	ldur	x8, [x29, #-40]
  402bb4:	str	x0, [x8, #16]
  402bb8:	ldur	x8, [x29, #-40]
  402bbc:	ldr	x12, [x8, #16]
  402bc0:	add	x12, x12, #0x40
  402bc4:	str	x12, [x8, #16]
  402bc8:	ldur	x8, [x29, #-40]
  402bcc:	mov	x12, xzr
  402bd0:	str	xzr, [x8, #24]
  402bd4:	mov	x8, #0x1                   	// #1
  402bd8:	stur	x8, [x29, #-80]
  402bdc:	ldur	x8, [x29, #-8]
  402be0:	stur	x8, [x29, #-88]
  402be4:	stur	x12, [x29, #-96]
  402be8:	stur	xzr, [x29, #-104]
  402bec:	stur	xzr, [x29, #-112]
  402bf0:	stur	xzr, [x29, #-120]
  402bf4:	ldur	x0, [x29, #-56]
  402bf8:	ldur	x8, [x29, #-64]
  402bfc:	ldur	x9, [x29, #-56]
  402c00:	subs	x2, x8, x9
  402c04:	mov	w1, #0xa                   	// #10
  402c08:	bl	402770 <memchr@plt>
  402c0c:	str	x0, [sp, #120]
  402c10:	ldr	x8, [sp, #120]
  402c14:	cbz	x8, 402c38 <wcrtomb@plt+0x328>
  402c18:	ldr	x8, [sp, #120]
  402c1c:	ldur	x9, [x29, #-56]
  402c20:	subs	x8, x8, x9
  402c24:	str	x8, [sp, #128]
  402c28:	ldr	x8, [sp, #120]
  402c2c:	add	x8, x8, #0x1
  402c30:	str	x8, [sp, #120]
  402c34:	b	402c48 <wcrtomb@plt+0x338>
  402c38:	ldur	x8, [x29, #-64]
  402c3c:	ldur	x9, [x29, #-56]
  402c40:	subs	x8, x8, x9
  402c44:	str	x8, [sp, #128]
  402c48:	ldur	x0, [x29, #-56]
  402c4c:	ldr	x1, [sp, #128]
  402c50:	ldurb	w8, [x29, #-45]
  402c54:	mov	w9, #0x1                   	// #1
  402c58:	and	w2, w8, #0x1
  402c5c:	str	w9, [sp, #44]
  402c60:	bl	4030b0 <wcrtomb@plt+0x7a0>
  402c64:	ldr	w8, [sp, #44]
  402c68:	and	w9, w0, w8
  402c6c:	strb	w9, [sp, #119]
  402c70:	ldrb	w9, [sp, #119]
  402c74:	tbnz	w9, #0, 402c7c <wcrtomb@plt+0x36c>
  402c78:	b	402cf0 <wcrtomb@plt+0x3e0>
  402c7c:	ldur	x8, [x29, #-88]
  402c80:	ldur	x9, [x29, #-56]
  402c84:	cmp	x8, x9
  402c88:	b.cs	402cf0 <wcrtomb@plt+0x3e0>  // b.hs, b.nlast
  402c8c:	ldur	x8, [x29, #-56]
  402c90:	ldur	x9, [x29, #-88]
  402c94:	subs	x8, x8, x9
  402c98:	str	x8, [sp, #104]
  402c9c:	ldur	x8, [x29, #-112]
  402ca0:	ldur	x9, [x29, #-104]
  402ca4:	ldr	x10, [sp, #104]
  402ca8:	add	x9, x9, x10
  402cac:	cmp	x8, x9
  402cb0:	b.cs	402cc8 <wcrtomb@plt+0x3b8>  // b.hs, b.nlast
  402cb4:	ldur	x0, [x29, #-96]
  402cb8:	sub	x1, x29, #0x70
  402cbc:	bl	423270 <wcrtomb@plt+0x20960>
  402cc0:	stur	x0, [x29, #-96]
  402cc4:	b	402c9c <wcrtomb@plt+0x38c>
  402cc8:	ldur	x8, [x29, #-96]
  402ccc:	ldur	x9, [x29, #-104]
  402cd0:	add	x0, x8, x9
  402cd4:	ldur	x1, [x29, #-88]
  402cd8:	ldr	x2, [sp, #104]
  402cdc:	bl	402290 <memcpy@plt>
  402ce0:	ldr	x8, [sp, #104]
  402ce4:	ldur	x9, [x29, #-104]
  402ce8:	add	x8, x9, x8
  402cec:	stur	x8, [x29, #-104]
  402cf0:	ldur	x8, [x29, #-80]
  402cf4:	ldur	x9, [x29, #-40]
  402cf8:	ldr	x9, [x9, #24]
  402cfc:	add	x9, x9, #0x1
  402d00:	cmp	x8, x9
  402d04:	b.hi	402d40 <wcrtomb@plt+0x430>  // b.pmore
  402d08:	ldur	x8, [x29, #-40]
  402d0c:	ldr	x8, [x8, #16]
  402d10:	mov	x9, #0xffffffffffffffc0    	// #-64
  402d14:	add	x0, x8, x9
  402d18:	sub	x1, x29, #0x50
  402d1c:	mov	x2, #0x40                  	// #64
  402d20:	bl	423160 <wcrtomb@plt+0x20850>
  402d24:	ldur	x8, [x29, #-40]
  402d28:	str	x0, [x8, #16]
  402d2c:	ldur	x8, [x29, #-40]
  402d30:	ldr	x9, [x8, #16]
  402d34:	add	x9, x9, #0x40
  402d38:	str	x9, [x8, #16]
  402d3c:	b	402cf0 <wcrtomb@plt+0x3e0>
  402d40:	ldur	x0, [x29, #-40]
  402d44:	ldur	x1, [x29, #-56]
  402d48:	ldr	x2, [sp, #128]
  402d4c:	ldur	x8, [x29, #-40]
  402d50:	ldr	x3, [x8, #24]
  402d54:	ldur	x4, [x29, #-120]
  402d58:	ldrb	w9, [sp, #119]
  402d5c:	eor	w9, w9, #0x1
  402d60:	and	w5, w9, #0x1
  402d64:	bl	4031d4 <wcrtomb@plt+0x8c4>
  402d68:	tbnz	w0, #0, 402d74 <wcrtomb@plt+0x464>
  402d6c:	mov	w8, #0x1                   	// #1
  402d70:	sturb	w8, [x29, #-65]
  402d74:	ldr	x8, [sp, #120]
  402d78:	stur	x8, [x29, #-56]
  402d7c:	ldur	x8, [x29, #-120]
  402d80:	add	x8, x8, #0x1
  402d84:	stur	x8, [x29, #-120]
  402d88:	ldrb	w9, [sp, #119]
  402d8c:	tbnz	w9, #0, 402d94 <wcrtomb@plt+0x484>
  402d90:	b	402dac <wcrtomb@plt+0x49c>
  402d94:	ldur	x8, [x29, #-40]
  402d98:	ldr	x9, [x8, #24]
  402d9c:	add	x9, x9, #0x1
  402da0:	str	x9, [x8, #24]
  402da4:	ldur	x8, [x29, #-56]
  402da8:	stur	x8, [x29, #-88]
  402dac:	ldur	x8, [x29, #-56]
  402db0:	cbnz	x8, 402bf4 <wcrtomb@plt+0x2e4>
  402db4:	ldurb	w8, [x29, #-65]
  402db8:	tbnz	w8, #0, 402dc0 <wcrtomb@plt+0x4b0>
  402dbc:	b	402dc8 <wcrtomb@plt+0x4b8>
  402dc0:	mov	w0, #0x2                   	// #2
  402dc4:	bl	402310 <exit@plt>
  402dc8:	ldur	x8, [x29, #-88]
  402dcc:	cbz	x8, 402e44 <wcrtomb@plt+0x534>
  402dd0:	ldur	x8, [x29, #-8]
  402dd4:	ldur	x9, [x29, #-88]
  402dd8:	cmp	x8, x9
  402ddc:	b.cs	402e34 <wcrtomb@plt+0x524>  // b.hs, b.nlast
  402de0:	ldur	x8, [x29, #-64]
  402de4:	ldur	x9, [x29, #-88]
  402de8:	subs	x8, x8, x9
  402dec:	str	x8, [sp, #96]
  402df0:	ldur	x0, [x29, #-96]
  402df4:	ldur	x8, [x29, #-104]
  402df8:	ldr	x9, [sp, #96]
  402dfc:	add	x1, x8, x9
  402e00:	bl	4230ec <wcrtomb@plt+0x207dc>
  402e04:	stur	x0, [x29, #-96]
  402e08:	ldur	x8, [x29, #-96]
  402e0c:	ldur	x9, [x29, #-104]
  402e10:	add	x0, x8, x9
  402e14:	ldur	x1, [x29, #-88]
  402e18:	ldr	x2, [sp, #96]
  402e1c:	bl	402290 <memcpy@plt>
  402e20:	ldr	x8, [sp, #96]
  402e24:	ldur	x9, [x29, #-104]
  402e28:	add	x8, x9, x8
  402e2c:	stur	x8, [x29, #-104]
  402e30:	b	402e44 <wcrtomb@plt+0x534>
  402e34:	ldur	x8, [x29, #-8]
  402e38:	stur	x8, [x29, #-96]
  402e3c:	ldur	x8, [x29, #-16]
  402e40:	stur	x8, [x29, #-104]
  402e44:	ldur	x8, [x29, #-96]
  402e48:	cbz	x8, 402eb4 <wcrtomb@plt+0x5a4>
  402e4c:	ldur	x8, [x29, #-40]
  402e50:	ldr	x9, [x8, #16]
  402e54:	mov	x10, #0xffffffffffffffc0    	// #-64
  402e58:	add	x9, x9, x10
  402e5c:	str	x9, [x8, #16]
  402e60:	ldur	x8, [x29, #-40]
  402e64:	ldr	x9, [x8, #24]
  402e68:	add	x9, x9, #0x1
  402e6c:	str	x9, [x8, #24]
  402e70:	ldur	x0, [x29, #-40]
  402e74:	ldur	x1, [x29, #-96]
  402e78:	ldur	x2, [x29, #-104]
  402e7c:	mov	x8, xzr
  402e80:	mov	x3, x8
  402e84:	mov	x4, #0xffffffffffffffff    	// #-1
  402e88:	mov	w11, wzr
  402e8c:	and	w5, w11, #0x1
  402e90:	bl	4031d4 <wcrtomb@plt+0x8c4>
  402e94:	tbnz	w0, #0, 402e9c <wcrtomb@plt+0x58c>
  402e98:	bl	402610 <abort@plt>
  402e9c:	ldur	x8, [x29, #-96]
  402ea0:	ldur	x9, [x29, #-8]
  402ea4:	cmp	x8, x9
  402ea8:	b.eq	402eb4 <wcrtomb@plt+0x5a4>  // b.none
  402eac:	ldur	x0, [x29, #-96]
  402eb0:	bl	4026c0 <free@plt>
  402eb4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  402eb8:	add	x8, x8, #0xdcc
  402ebc:	ldrb	w9, [x8]
  402ec0:	tbnz	w9, #0, 402ed4 <wcrtomb@plt+0x5c4>
  402ec4:	ldr	x8, [sp, #48]
  402ec8:	ldrb	w9, [x8]
  402ecc:	tbnz	w9, #0, 402ed4 <wcrtomb@plt+0x5c4>
  402ed0:	b	403050 <wcrtomb@plt+0x740>
  402ed4:	ldur	x8, [x29, #-24]
  402ed8:	tst	x8, #0x2000
  402edc:	cset	w9, ne  // ne = any
  402ee0:	eor	w9, w9, #0x1
  402ee4:	and	w9, w9, #0x1
  402ee8:	str	w9, [sp, #92]
  402eec:	ldur	x8, [x29, #-16]
  402ef0:	add	x8, x8, #0x16
  402ef4:	add	x0, x8, #0x17
  402ef8:	bl	423058 <wcrtomb@plt+0x20748>
  402efc:	str	x0, [sp, #80]
  402f00:	ldr	x0, [sp, #80]
  402f04:	ldr	x8, [sp, #48]
  402f08:	ldrb	w9, [x8]
  402f0c:	str	x0, [sp, #32]
  402f10:	tbnz	w9, #0, 402f18 <wcrtomb@plt+0x608>
  402f14:	b	402f3c <wcrtomb@plt+0x62c>
  402f18:	ldr	w8, [sp, #92]
  402f1c:	adrp	x9, 440000 <_obstack_memory_used@@Base+0x186e0>
  402f20:	add	x9, x9, #0xc3b
  402f24:	adrp	x10, 440000 <_obstack_memory_used@@Base+0x186e0>
  402f28:	add	x10, x10, #0xc67
  402f2c:	cmp	w8, #0x0
  402f30:	csel	x9, x10, x9, ne  // ne = any
  402f34:	str	x9, [sp, #24]
  402f38:	b	402f5c <wcrtomb@plt+0x64c>
  402f3c:	ldr	w8, [sp, #92]
  402f40:	adrp	x9, 440000 <_obstack_memory_used@@Base+0x186e0>
  402f44:	add	x9, x9, #0xc41
  402f48:	adrp	x10, 440000 <_obstack_memory_used@@Base+0x186e0>
  402f4c:	add	x10, x10, #0xc6f
  402f50:	cmp	w8, #0x0
  402f54:	csel	x9, x10, x9, ne  // ne = any
  402f58:	str	x9, [sp, #24]
  402f5c:	ldr	x8, [sp, #24]
  402f60:	ldr	x0, [sp, #32]
  402f64:	mov	x1, x8
  402f68:	bl	402730 <strcpy@plt>
  402f6c:	ldr	x8, [sp, #80]
  402f70:	mov	x0, x8
  402f74:	bl	4022f0 <strlen@plt>
  402f78:	str	x0, [sp, #72]
  402f7c:	ldr	x8, [sp, #80]
  402f80:	ldr	x9, [sp, #72]
  402f84:	add	x0, x8, x9
  402f88:	ldur	x1, [x29, #-8]
  402f8c:	ldur	x2, [x29, #-16]
  402f90:	bl	402290 <memcpy@plt>
  402f94:	ldur	x8, [x29, #-16]
  402f98:	ldr	x9, [sp, #72]
  402f9c:	add	x8, x9, x8
  402fa0:	str	x8, [sp, #72]
  402fa4:	ldr	x8, [sp, #80]
  402fa8:	ldr	x9, [sp, #72]
  402fac:	add	x0, x8, x9
  402fb0:	ldr	x8, [sp, #48]
  402fb4:	ldrb	w10, [x8]
  402fb8:	str	x0, [sp, #16]
  402fbc:	tbnz	w10, #0, 402fc4 <wcrtomb@plt+0x6b4>
  402fc0:	b	402fe8 <wcrtomb@plt+0x6d8>
  402fc4:	ldr	w8, [sp, #92]
  402fc8:	adrp	x9, 440000 <_obstack_memory_used@@Base+0x186e0>
  402fcc:	add	x9, x9, #0xc3e
  402fd0:	adrp	x10, 440000 <_obstack_memory_used@@Base+0x186e0>
  402fd4:	add	x10, x10, #0xc6b
  402fd8:	cmp	w8, #0x0
  402fdc:	csel	x9, x10, x9, ne  // ne = any
  402fe0:	str	x9, [sp, #8]
  402fe4:	b	403008 <wcrtomb@plt+0x6f8>
  402fe8:	ldr	w8, [sp, #92]
  402fec:	adrp	x9, 440000 <_obstack_memory_used@@Base+0x186e0>
  402ff0:	add	x9, x9, #0xc54
  402ff4:	adrp	x10, 440000 <_obstack_memory_used@@Base+0x186e0>
  402ff8:	add	x10, x10, #0xc86
  402ffc:	cmp	w8, #0x0
  403000:	csel	x9, x10, x9, ne  // ne = any
  403004:	str	x9, [sp, #8]
  403008:	ldr	x8, [sp, #8]
  40300c:	ldr	x0, [sp, #16]
  403010:	mov	x1, x8
  403014:	bl	402730 <strcpy@plt>
  403018:	ldr	x8, [sp, #80]
  40301c:	ldr	x9, [sp, #72]
  403020:	add	x8, x8, x9
  403024:	mov	x0, x8
  403028:	bl	4022f0 <strlen@plt>
  40302c:	ldr	x8, [sp, #72]
  403030:	add	x8, x8, x0
  403034:	str	x8, [sp, #72]
  403038:	ldr	x8, [sp, #80]
  40303c:	stur	x8, [x29, #-32]
  403040:	stur	x8, [x29, #-8]
  403044:	ldr	x8, [sp, #72]
  403048:	stur	x8, [x29, #-16]
  40304c:	b	403058 <wcrtomb@plt+0x748>
  403050:	mov	x8, xzr
  403054:	stur	x8, [x29, #-32]
  403058:	ldur	x0, [x29, #-8]
  40305c:	ldur	x1, [x29, #-16]
  403060:	ldur	x8, [x29, #-40]
  403064:	ldr	x2, [x8, #8]
  403068:	bl	4103fc <wcrtomb@plt+0xdaec>
  40306c:	ldur	x0, [x29, #-40]
  403070:	bl	40337c <wcrtomb@plt+0xa6c>
  403074:	ldur	x8, [x29, #-40]
  403078:	ldr	x2, [x8, #8]
  40307c:	mov	x8, xzr
  403080:	mov	x0, x8
  403084:	mov	x1, x8
  403088:	mov	w9, #0x1                   	// #1
  40308c:	and	w3, w9, #0x1
  403090:	bl	4115fc <wcrtomb@plt+0xecec>
  403094:	ldur	x0, [x29, #-32]
  403098:	bl	4026c0 <free@plt>
  40309c:	ldur	x0, [x29, #-40]
  4030a0:	ldr	x28, [sp, #272]
  4030a4:	ldp	x29, x30, [sp, #256]
  4030a8:	add	sp, sp, #0x120
  4030ac:	ret
  4030b0:	sub	sp, sp, #0x40
  4030b4:	stp	x29, x30, [sp, #48]
  4030b8:	add	x29, sp, #0x30
  4030bc:	mov	w8, #0x5c                  	// #92
  4030c0:	mov	w9, #0x100                 	// #256
  4030c4:	mov	x10, xzr
  4030c8:	stur	x0, [x29, #-16]
  4030cc:	str	x1, [sp, #24]
  4030d0:	and	w11, w2, #0x1
  4030d4:	strb	w11, [sp, #23]
  4030d8:	ldrb	w11, [sp, #23]
  4030dc:	tst	w11, #0x1
  4030e0:	csel	w8, w8, w9, ne  // ne = any
  4030e4:	str	w8, [sp, #16]
  4030e8:	ldr	x12, [sp, #24]
  4030ec:	subs	x12, x12, #0x1
  4030f0:	str	x12, [sp, #24]
  4030f4:	ldr	x12, [sp, #24]
  4030f8:	cmp	x10, x12
  4030fc:	cset	w8, gt
  403100:	tbnz	w8, #0, 4031b4 <wcrtomb@plt+0x8a4>
  403104:	ldur	x8, [x29, #-16]
  403108:	ldr	x9, [sp, #24]
  40310c:	add	x8, x8, x9
  403110:	str	x8, [sp, #8]
  403114:	ldur	x8, [x29, #-16]
  403118:	str	x8, [sp]
  40311c:	ldr	x0, [sp]
  403120:	ldr	x8, [sp, #8]
  403124:	ldr	x9, [sp]
  403128:	subs	x2, x8, x9
  40312c:	mov	w1, #0x5c                  	// #92
  403130:	bl	402770 <memchr@plt>
  403134:	str	x0, [sp]
  403138:	cbz	x0, 4031b4 <wcrtomb@plt+0x8a4>
  40313c:	ldr	x8, [sp]
  403140:	ldrb	w9, [x8, #1]
  403144:	mov	w10, #0x31                  	// #49
  403148:	cmp	w10, w9
  40314c:	b.gt	403170 <wcrtomb@plt+0x860>
  403150:	ldr	x8, [sp]
  403154:	ldrb	w9, [x8, #1]
  403158:	cmp	w9, #0x39
  40315c:	b.gt	403170 <wcrtomb@plt+0x860>
  403160:	mov	w8, #0x1                   	// #1
  403164:	and	w8, w8, #0x1
  403168:	sturb	w8, [x29, #-1]
  40316c:	b	4031c0 <wcrtomb@plt+0x8b0>
  403170:	ldr	x8, [sp]
  403174:	ldrb	w9, [x8, #1]
  403178:	ldr	w10, [sp, #16]
  40317c:	cmp	w9, w10
  403180:	b.ne	4031a4 <wcrtomb@plt+0x894>  // b.any
  403184:	ldr	x8, [sp]
  403188:	add	x8, x8, #0x1
  40318c:	str	x8, [sp]
  403190:	ldr	x8, [sp]
  403194:	ldr	x9, [sp, #8]
  403198:	cmp	x8, x9
  40319c:	b.ne	4031a4 <wcrtomb@plt+0x894>  // b.any
  4031a0:	b	4031b4 <wcrtomb@plt+0x8a4>
  4031a4:	ldr	x8, [sp]
  4031a8:	add	x8, x8, #0x1
  4031ac:	str	x8, [sp]
  4031b0:	b	40311c <wcrtomb@plt+0x80c>
  4031b4:	mov	w8, wzr
  4031b8:	and	w8, w8, #0x1
  4031bc:	sturb	w8, [x29, #-1]
  4031c0:	ldurb	w8, [x29, #-1]
  4031c4:	and	w0, w8, #0x1
  4031c8:	ldp	x29, x30, [sp, #48]
  4031cc:	add	sp, sp, #0x40
  4031d0:	ret
  4031d4:	sub	sp, sp, #0xc0
  4031d8:	stp	x29, x30, [sp, #176]
  4031dc:	add	x29, sp, #0xb0
  4031e0:	stur	x0, [x29, #-16]
  4031e4:	stur	x1, [x29, #-24]
  4031e8:	stur	x2, [x29, #-32]
  4031ec:	stur	x3, [x29, #-40]
  4031f0:	stur	x4, [x29, #-48]
  4031f4:	and	w8, w5, #0x1
  4031f8:	sturb	w8, [x29, #-49]
  4031fc:	ldurb	w8, [x29, #-49]
  403200:	tbnz	w8, #0, 403208 <wcrtomb@plt+0x8f8>
  403204:	b	403214 <wcrtomb@plt+0x904>
  403208:	add	x8, sp, #0x38
  40320c:	str	x8, [sp, #16]
  403210:	b	403230 <wcrtomb@plt+0x920>
  403214:	ldur	x8, [x29, #-16]
  403218:	ldr	x8, [x8, #16]
  40321c:	ldur	x9, [x29, #-40]
  403220:	mov	x10, #0x40                  	// #64
  403224:	mul	x9, x10, x9
  403228:	add	x8, x8, x9
  40322c:	str	x8, [sp, #16]
  403230:	ldr	x8, [sp, #16]
  403234:	str	x8, [sp, #48]
  403238:	ldr	x8, [sp, #48]
  40323c:	mov	x9, xzr
  403240:	str	x9, [x8]
  403244:	ldr	x8, [sp, #48]
  403248:	str	xzr, [x8, #8]
  40324c:	ldurb	w10, [x29, #-49]
  403250:	and	w10, w10, #0x1
  403254:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  403258:	add	x8, x8, #0xdce
  40325c:	ldrb	w11, [x8]
  403260:	and	w11, w11, #0x1
  403264:	orr	w10, w10, w11
  403268:	cbz	w10, 403278 <wcrtomb@plt+0x968>
  40326c:	mov	x8, xzr
  403270:	str	x8, [sp, #8]
  403274:	b	403284 <wcrtomb@plt+0x974>
  403278:	mov	x0, #0x100                 	// #256
  40327c:	bl	423058 <wcrtomb@plt+0x20748>
  403280:	str	x0, [sp, #8]
  403284:	ldr	x8, [sp, #8]
  403288:	ldr	x9, [sp, #48]
  40328c:	str	x8, [x9, #32]
  403290:	ldr	x8, [sp, #48]
  403294:	mov	x9, xzr
  403298:	str	x9, [x8, #40]
  40329c:	ldur	x0, [x29, #-24]
  4032a0:	ldur	x1, [x29, #-32]
  4032a4:	ldr	x2, [sp, #48]
  4032a8:	bl	4279e0 <_obstack_memory_used@@Base+0xc0>
  4032ac:	str	x0, [sp, #40]
  4032b0:	ldr	x8, [sp, #40]
  4032b4:	cbnz	x8, 4032c8 <wcrtomb@plt+0x9b8>
  4032b8:	mov	w8, #0x1                   	// #1
  4032bc:	and	w8, w8, #0x1
  4032c0:	sturb	w8, [x29, #-1]
  4032c4:	b	403368 <wcrtomb@plt+0xa58>
  4032c8:	ldur	x8, [x29, #-48]
  4032cc:	str	x8, [sp, #32]
  4032d0:	ldur	x8, [x29, #-48]
  4032d4:	cmp	x8, #0x0
  4032d8:	cset	w9, ge  // ge = tcont
  4032dc:	tbnz	w9, #0, 4032f0 <wcrtomb@plt+0x9e0>
  4032e0:	adrp	x8, 440000 <_obstack_memory_used@@Base+0x186e0>
  4032e4:	add	x8, x8, #0xc9d
  4032e8:	str	x8, [sp]
  4032ec:	b	403304 <wcrtomb@plt+0x9f4>
  4032f0:	ldur	x8, [x29, #-48]
  4032f4:	add	x0, x8, #0x1
  4032f8:	add	x1, sp, #0x20
  4032fc:	bl	403fb4 <wcrtomb@plt+0x16a4>
  403300:	str	x0, [sp]
  403304:	ldr	x8, [sp]
  403308:	str	x8, [sp, #24]
  40330c:	ldr	x8, [sp, #24]
  403310:	ldrb	w9, [x8]
  403314:	cbnz	w9, 403338 <wcrtomb@plt+0xa28>
  403318:	ldr	x3, [sp, #40]
  40331c:	mov	w8, wzr
  403320:	mov	w0, w8
  403324:	mov	w1, w8
  403328:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40332c:	add	x2, x2, #0x122
  403330:	bl	402330 <error@plt>
  403334:	b	40335c <wcrtomb@plt+0xa4c>
  403338:	ldr	x3, [sp, #24]
  40333c:	ldr	x4, [sp, #32]
  403340:	ldr	x5, [sp, #40]
  403344:	mov	w8, wzr
  403348:	mov	w0, w8
  40334c:	mov	w1, w8
  403350:	adrp	x2, 440000 <_obstack_memory_used@@Base+0x186e0>
  403354:	add	x2, x2, #0xc30
  403358:	bl	402330 <error@plt>
  40335c:	mov	w8, wzr
  403360:	and	w8, w8, #0x1
  403364:	sturb	w8, [x29, #-1]
  403368:	ldurb	w8, [x29, #-1]
  40336c:	and	w0, w8, #0x1
  403370:	ldp	x29, x30, [sp, #176]
  403374:	add	sp, sp, #0xc0
  403378:	ret
  40337c:	sub	sp, sp, #0x60
  403380:	stp	x29, x30, [sp, #80]
  403384:	add	x29, sp, #0x50
  403388:	stur	x0, [x29, #-8]
  40338c:	ldur	x8, [x29, #-8]
  403390:	ldr	x0, [x8, #8]
  403394:	bl	412858 <wcrtomb@plt+0xff48>
  403398:	stur	x0, [x29, #-16]
  40339c:	ldur	x8, [x29, #-16]
  4033a0:	cbnz	x8, 4033a8 <wcrtomb@plt+0xa98>
  4033a4:	b	403548 <wcrtomb@plt+0xc38>
  4033a8:	mov	w8, wzr
  4033ac:	and	w0, w8, #0x1
  4033b0:	bl	40ef38 <wcrtomb@plt+0xc628>
  4033b4:	ldur	x9, [x29, #-8]
  4033b8:	str	x0, [x9]
  4033bc:	ldur	x9, [x29, #-16]
  4033c0:	ldrb	w8, [x9]
  4033c4:	tbnz	w8, #0, 4033cc <wcrtomb@plt+0xabc>
  4033c8:	b	4034f4 <wcrtomb@plt+0xbe4>
  4033cc:	ldur	x8, [x29, #-8]
  4033d0:	ldr	x9, [x8, #56]
  4033d4:	add	x9, x9, #0x1
  4033d8:	str	x9, [x8, #56]
  4033dc:	ldur	x8, [x29, #-16]
  4033e0:	add	x0, x8, #0x3
  4033e4:	bl	4022f0 <strlen@plt>
  4033e8:	stur	x0, [x29, #-24]
  4033ec:	ldur	x8, [x29, #-24]
  4033f0:	ldur	x9, [x29, #-16]
  4033f4:	ldrb	w10, [x9, #1]
  4033f8:	mov	w0, w10
  4033fc:	and	x9, x0, #0x1
  403400:	add	x8, x8, x9
  403404:	ldur	x9, [x29, #-16]
  403408:	ldrb	w10, [x9, #2]
  40340c:	mov	w0, w10
  403410:	and	x9, x0, #0x1
  403414:	add	x8, x8, x9
  403418:	stur	x8, [x29, #-32]
  40341c:	ldur	x0, [x29, #-32]
  403420:	bl	423058 <wcrtomb@plt+0x20748>
  403424:	str	x0, [sp, #40]
  403428:	ldr	x8, [sp, #40]
  40342c:	str	x8, [sp, #32]
  403430:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  403434:	add	x8, x8, #0x8c4
  403438:	ldrb	w10, [x8]
  40343c:	ldr	x8, [sp, #32]
  403440:	strb	w10, [x8]
  403444:	ldur	x8, [x29, #-16]
  403448:	ldrb	w10, [x8, #1]
  40344c:	mov	w11, #0x1                   	// #1
  403450:	and	w10, w10, #0x1
  403454:	ldr	x8, [sp, #32]
  403458:	mov	w0, w10
  40345c:	sxtw	x9, w0
  403460:	add	x8, x8, x9
  403464:	str	x8, [sp, #32]
  403468:	ldur	x8, [x29, #-16]
  40346c:	ldrb	w10, [x8, #1]
  403470:	and	w10, w10, #0x1
  403474:	ldur	x8, [x29, #-8]
  403478:	ldrb	w12, [x8, #64]
  40347c:	and	w12, w12, #0x1
  403480:	orr	w10, w12, w10
  403484:	cmp	w10, #0x0
  403488:	cset	w10, ne  // ne = any
  40348c:	and	w10, w10, w11
  403490:	strb	w10, [x8, #64]
  403494:	ldr	x0, [sp, #32]
  403498:	ldur	x8, [x29, #-16]
  40349c:	add	x1, x8, #0x3
  4034a0:	ldur	x2, [x29, #-24]
  4034a4:	bl	402290 <memcpy@plt>
  4034a8:	ldur	x8, [x29, #-16]
  4034ac:	ldrb	w10, [x8, #2]
  4034b0:	tbnz	w10, #0, 4034b8 <wcrtomb@plt+0xba8>
  4034b4:	b	4034d4 <wcrtomb@plt+0xbc4>
  4034b8:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4034bc:	add	x8, x8, #0x8c4
  4034c0:	ldrb	w9, [x8]
  4034c4:	ldr	x8, [sp, #32]
  4034c8:	ldur	x10, [x29, #-24]
  4034cc:	add	x8, x8, x10
  4034d0:	strb	w9, [x8]
  4034d4:	ldur	x8, [x29, #-8]
  4034d8:	ldr	x0, [x8]
  4034dc:	ldr	x1, [sp, #40]
  4034e0:	ldur	x2, [x29, #-32]
  4034e4:	bl	40b0a4 <wcrtomb@plt+0x8794>
  4034e8:	ldr	x0, [sp, #40]
  4034ec:	bl	4026c0 <free@plt>
  4034f0:	b	403534 <wcrtomb@plt+0xc24>
  4034f4:	ldur	x8, [x29, #-8]
  4034f8:	ldr	x0, [x8]
  4034fc:	ldur	x8, [x29, #-16]
  403500:	add	x1, x8, #0x3
  403504:	ldur	x8, [x29, #-16]
  403508:	add	x8, x8, #0x3
  40350c:	str	x0, [sp, #24]
  403510:	mov	x0, x8
  403514:	str	x1, [sp, #16]
  403518:	bl	4022f0 <strlen@plt>
  40351c:	ldr	x8, [sp, #24]
  403520:	str	x0, [sp, #8]
  403524:	mov	x0, x8
  403528:	ldr	x1, [sp, #16]
  40352c:	ldr	x2, [sp, #8]
  403530:	bl	40b0a4 <wcrtomb@plt+0x8794>
  403534:	ldur	x8, [x29, #-8]
  403538:	ldr	x0, [x8]
  40353c:	bl	40bc30 <wcrtomb@plt+0x9320>
  403540:	ldur	x0, [x29, #-16]
  403544:	bl	413a7c <wcrtomb@plt+0x1116c>
  403548:	ldp	x29, x30, [sp, #80]
  40354c:	add	sp, sp, #0x60
  403550:	ret
  403554:	sub	sp, sp, #0x190
  403558:	stp	x29, x30, [sp, #368]
  40355c:	str	x28, [sp, #384]
  403560:	add	x29, sp, #0x170
  403564:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  403568:	add	x8, x8, #0x8c4
  40356c:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  403570:	add	x9, x9, #0x8c8
  403574:	adrp	x10, 459000 <__progname@@GLIBC_2.17+0x3b98>
  403578:	add	x10, x10, #0xdcc
  40357c:	adrp	x11, 459000 <__progname@@GLIBC_2.17+0x3b98>
  403580:	add	x11, x11, #0xdcd
  403584:	stur	x0, [x29, #-16]
  403588:	stur	x1, [x29, #-24]
  40358c:	stur	x2, [x29, #-32]
  403590:	stur	x3, [x29, #-40]
  403594:	stur	x4, [x29, #-48]
  403598:	ldrb	w12, [x8]
  40359c:	sturb	w12, [x29, #-105]
  4035a0:	ldur	x8, [x29, #-16]
  4035a4:	stur	x8, [x29, #-176]
  4035a8:	ldur	x8, [x29, #-176]
  4035ac:	ldr	x0, [x8, #8]
  4035b0:	str	x9, [sp, #104]
  4035b4:	str	x10, [sp, #96]
  4035b8:	str	x11, [sp, #88]
  4035bc:	bl	4115c8 <wcrtomb@plt+0xecb8>
  4035c0:	str	x0, [sp, #184]
  4035c4:	ldur	x8, [x29, #-176]
  4035c8:	ldr	x0, [x8, #8]
  4035cc:	bl	4115e0 <wcrtomb@plt+0xecd0>
  4035d0:	and	w12, w0, #0x1
  4035d4:	strb	w12, [sp, #183]
  4035d8:	ldur	x8, [x29, #-24]
  4035dc:	stur	x8, [x29, #-104]
  4035e0:	ldur	x8, [x29, #-24]
  4035e4:	ldur	x9, [x29, #-32]
  4035e8:	add	x8, x8, x9
  4035ec:	stur	x8, [x29, #-56]
  4035f0:	ldur	x8, [x29, #-24]
  4035f4:	stur	x8, [x29, #-72]
  4035f8:	stur	x8, [x29, #-64]
  4035fc:	ldur	x8, [x29, #-72]
  403600:	ldur	x9, [x29, #-56]
  403604:	cmp	x8, x9
  403608:	b.cs	403f60 <wcrtomb@plt+0x1650>  // b.hs, b.nlast
  40360c:	ldur	x8, [x29, #-56]
  403610:	stur	x8, [x29, #-72]
  403614:	ldur	x8, [x29, #-48]
  403618:	cbnz	x8, 403abc <wcrtomb@plt+0x11ac>
  40361c:	ldur	x8, [x29, #-64]
  403620:	str	x8, [sp, #160]
  403624:	str	xzr, [sp, #152]
  403628:	mov	w9, #0x0                   	// #0
  40362c:	strb	w9, [sp, #151]
  403630:	strb	w9, [sp, #150]
  403634:	ldur	x8, [x29, #-176]
  403638:	ldr	x8, [x8]
  40363c:	cbz	x8, 403918 <wcrtomb@plt+0x1008>
  403640:	ldur	x8, [x29, #-176]
  403644:	ldr	x0, [x8]
  403648:	ldur	x8, [x29, #-64]
  40364c:	ldur	x9, [x29, #-176]
  403650:	ldrb	w10, [x9, #64]
  403654:	mov	w11, #0x1                   	// #1
  403658:	and	w10, w10, #0x1
  40365c:	mov	x9, xzr
  403660:	subs	x9, x9, w10, sxtw
  403664:	add	x1, x8, x9
  403668:	ldur	x8, [x29, #-56]
  40366c:	ldur	x9, [x29, #-64]
  403670:	subs	x8, x8, x9
  403674:	ldur	x9, [x29, #-176]
  403678:	ldrb	w10, [x9, #64]
  40367c:	mov	w2, w10
  403680:	and	x9, x2, #0x1
  403684:	add	x2, x8, x9
  403688:	sub	x3, x29, #0xa0
  40368c:	and	w4, w11, #0x1
  403690:	bl	40cbac <wcrtomb@plt+0xa29c>
  403694:	str	x0, [sp, #128]
  403698:	ldr	x8, [sp, #128]
  40369c:	cmp	x8, #0x0
  4036a0:	cset	w10, ge  // ge = tcont
  4036a4:	tbnz	w10, #0, 4036ac <wcrtomb@plt+0xd9c>
  4036a8:	b	403f60 <wcrtomb@plt+0x1650>
  4036ac:	ldur	x8, [x29, #-64]
  4036b0:	ldr	x9, [sp, #128]
  4036b4:	add	x8, x8, x9
  4036b8:	stur	x8, [x29, #-88]
  4036bc:	ldur	x8, [x29, #-64]
  4036c0:	str	x8, [sp, #136]
  4036c4:	ldur	x0, [x29, #-24]
  4036c8:	ldurb	w1, [x29, #-105]
  4036cc:	ldur	x8, [x29, #-88]
  4036d0:	ldur	x9, [x29, #-24]
  4036d4:	subs	x2, x8, x9
  4036d8:	bl	4026f0 <memrchr@plt>
  4036dc:	stur	x0, [x29, #-64]
  4036e0:	ldur	x8, [x29, #-64]
  4036e4:	cbz	x8, 4036f8 <wcrtomb@plt+0xde8>
  4036e8:	ldur	x8, [x29, #-64]
  4036ec:	add	x8, x8, #0x1
  4036f0:	str	x8, [sp, #80]
  4036f4:	b	403700 <wcrtomb@plt+0xdf0>
  4036f8:	ldur	x8, [x29, #-24]
  4036fc:	str	x8, [sp, #80]
  403700:	ldr	x8, [sp, #80]
  403704:	stur	x8, [x29, #-64]
  403708:	ldur	x8, [x29, #-64]
  40370c:	str	x8, [sp, #160]
  403710:	ldur	x8, [x29, #-160]
  403714:	ldur	x9, [x29, #-176]
  403718:	ldr	x9, [x9, #56]
  40371c:	cmp	x8, x9
  403720:	cset	w10, lt  // lt = tstop
  403724:	and	w10, w10, #0x1
  403728:	strb	w10, [sp, #151]
  40372c:	ldrb	w10, [sp, #151]
  403730:	tbnz	w10, #0, 403790 <wcrtomb@plt+0xe80>
  403734:	ldrb	w8, [sp, #183]
  403738:	tbnz	w8, #0, 403740 <wcrtomb@plt+0xe30>
  40373c:	b	403790 <wcrtomb@plt+0xe80>
  403740:	ldur	x8, [x29, #-88]
  403744:	ldur	x9, [x29, #-64]
  403748:	subs	x8, x8, x9
  40374c:	mov	x9, #0x10                  	// #16
  403750:	cmp	x9, x8
  403754:	b.le	403764 <wcrtomb@plt+0xe54>
  403758:	mov	x8, #0x10                  	// #16
  40375c:	str	x8, [sp, #72]
  403760:	b	403774 <wcrtomb@plt+0xe64>
  403764:	ldur	x8, [x29, #-88]
  403768:	ldur	x9, [x29, #-64]
  40376c:	subs	x8, x8, x9
  403770:	str	x8, [sp, #72]
  403774:	ldr	x8, [sp, #72]
  403778:	ldur	x9, [x29, #-88]
  40377c:	ldr	x10, [sp, #136]
  403780:	subs	x9, x9, x10
  403784:	asr	x9, x9, #2
  403788:	cmp	x8, x9
  40378c:	b.ge	40379c <wcrtomb@plt+0xe8c>  // b.tcont
  403790:	ldur	x8, [x29, #-88]
  403794:	str	x8, [sp, #64]
  403798:	b	403854 <wcrtomb@plt+0xf44>
  40379c:	ldur	x8, [x29, #-88]
  4037a0:	ldur	x9, [x29, #-64]
  4037a4:	subs	x8, x8, x9
  4037a8:	mov	x9, #0x10                  	// #16
  4037ac:	cmp	x9, x8
  4037b0:	b.le	4037c0 <wcrtomb@plt+0xeb0>
  4037b4:	mov	x8, #0x10                  	// #16
  4037b8:	str	x8, [sp, #56]
  4037bc:	b	4037d0 <wcrtomb@plt+0xec0>
  4037c0:	ldur	x8, [x29, #-88]
  4037c4:	ldur	x9, [x29, #-64]
  4037c8:	subs	x8, x8, x9
  4037cc:	str	x8, [sp, #56]
  4037d0:	ldr	x8, [sp, #56]
  4037d4:	ldur	x9, [x29, #-56]
  4037d8:	ldr	x10, [sp, #136]
  4037dc:	subs	x9, x9, x10
  4037e0:	asr	x9, x9, #2
  4037e4:	cmp	x8, x9
  4037e8:	b.ge	403844 <wcrtomb@plt+0xf34>  // b.tcont
  4037ec:	ldr	x8, [sp, #136]
  4037f0:	ldur	x9, [x29, #-88]
  4037f4:	ldur	x10, [x29, #-64]
  4037f8:	subs	x9, x9, x10
  4037fc:	mov	x10, #0x10                  	// #16
  403800:	cmp	x10, x9
  403804:	str	x8, [sp, #48]
  403808:	b.le	403818 <wcrtomb@plt+0xf08>
  40380c:	mov	x8, #0x10                  	// #16
  403810:	str	x8, [sp, #40]
  403814:	b	403828 <wcrtomb@plt+0xf18>
  403818:	ldur	x8, [x29, #-88]
  40381c:	ldur	x9, [x29, #-64]
  403820:	subs	x8, x8, x9
  403824:	str	x8, [sp, #40]
  403828:	ldr	x8, [sp, #40]
  40382c:	mov	x9, #0x4                   	// #4
  403830:	mul	x8, x9, x8
  403834:	ldr	x9, [sp, #48]
  403838:	add	x8, x9, x8
  40383c:	str	x8, [sp, #32]
  403840:	b	40384c <wcrtomb@plt+0xf3c>
  403844:	ldur	x8, [x29, #-56]
  403848:	str	x8, [sp, #32]
  40384c:	ldr	x8, [sp, #32]
  403850:	str	x8, [sp, #64]
  403854:	ldr	x8, [sp, #64]
  403858:	stur	x8, [x29, #-72]
  40385c:	ldur	x0, [x29, #-72]
  403860:	ldurb	w1, [x29, #-105]
  403864:	ldur	x8, [x29, #-56]
  403868:	ldur	x9, [x29, #-72]
  40386c:	subs	x2, x8, x9
  403870:	bl	402770 <memchr@plt>
  403874:	stur	x0, [x29, #-72]
  403878:	ldur	x8, [x29, #-72]
  40387c:	cbz	x8, 403890 <wcrtomb@plt+0xf80>
  403880:	ldur	x8, [x29, #-72]
  403884:	add	x8, x8, #0x1
  403888:	str	x8, [sp, #24]
  40388c:	b	403898 <wcrtomb@plt+0xf88>
  403890:	ldur	x8, [x29, #-56]
  403894:	str	x8, [sp, #24]
  403898:	ldr	x8, [sp, #24]
  40389c:	stur	x8, [x29, #-72]
  4038a0:	ldrb	w9, [sp, #151]
  4038a4:	tbnz	w9, #0, 4038ac <wcrtomb@plt+0xf9c>
  4038a8:	b	403918 <wcrtomb@plt+0x1008>
  4038ac:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4038b0:	add	x8, x8, #0x8c8
  4038b4:	ldrb	w9, [x8]
  4038b8:	eor	w9, w9, #0x1
  4038bc:	and	w9, w9, #0x1
  4038c0:	ldr	x8, [sp, #104]
  4038c4:	ldrb	w10, [x8, #2]
  4038c8:	and	w10, w10, #0x1
  4038cc:	orr	w9, w9, w10
  4038d0:	cbz	w9, 4038d8 <wcrtomb@plt+0xfc8>
  4038d4:	b	403f6c <wcrtomb@plt+0x165c>
  4038d8:	ldur	x8, [x29, #-104]
  4038dc:	ldur	x9, [x29, #-64]
  4038e0:	cmp	x8, x9
  4038e4:	b.cs	4038f0 <wcrtomb@plt+0xfe0>  // b.hs, b.nlast
  4038e8:	ldur	x8, [x29, #-64]
  4038ec:	stur	x8, [x29, #-104]
  4038f0:	ldur	x2, [x29, #-88]
  4038f4:	ldur	x3, [x29, #-56]
  4038f8:	sub	x0, x29, #0x68
  4038fc:	mov	x8, xzr
  403900:	mov	x1, x8
  403904:	bl	40f090 <wcrtomb@plt+0xc780>
  403908:	cbnz	x0, 403910 <wcrtomb@plt+0x1000>
  40390c:	b	403f6c <wcrtomb@plt+0x165c>
  403910:	ldur	x8, [x29, #-104]
  403914:	str	x8, [sp, #160]
  403918:	ldr	x8, [sp, #184]
  40391c:	cbz	x8, 4039ec <wcrtomb@plt+0x10dc>
  403920:	ldrb	w8, [sp, #151]
  403924:	tbnz	w8, #0, 4039ec <wcrtomb@plt+0x10dc>
  403928:	ldr	x0, [sp, #184]
  40392c:	ldr	x1, [sp, #160]
  403930:	ldur	x2, [x29, #-72]
  403934:	mov	w8, wzr
  403938:	and	w3, w8, #0x1
  40393c:	add	x4, sp, #0x98
  403940:	mov	x9, xzr
  403944:	mov	x5, x9
  403948:	bl	411568 <wcrtomb@plt+0xec58>
  40394c:	str	x0, [sp, #168]
  403950:	ldr	x9, [sp, #168]
  403954:	cbz	x9, 403968 <wcrtomb@plt+0x1058>
  403958:	ldr	x8, [sp, #168]
  40395c:	ldur	x9, [x29, #-72]
  403960:	cmp	x8, x9
  403964:	b.ne	40396c <wcrtomb@plt+0x105c>  // b.any
  403968:	b	403f54 <wcrtomb@plt+0x1644>
  40396c:	ldr	x8, [sp, #152]
  403970:	cbz	x8, 4039a4 <wcrtomb@plt+0x1094>
  403974:	ldur	x0, [x29, #-24]
  403978:	ldurb	w1, [x29, #-105]
  40397c:	ldr	x8, [sp, #168]
  403980:	ldur	x9, [x29, #-24]
  403984:	subs	x2, x8, x9
  403988:	bl	4026f0 <memrchr@plt>
  40398c:	stur	x0, [x29, #-64]
  403990:	ldur	x8, [x29, #-64]
  403994:	add	x8, x8, #0x1
  403998:	stur	x8, [x29, #-64]
  40399c:	ldur	x8, [x29, #-64]
  4039a0:	str	x8, [sp, #160]
  4039a4:	ldr	x0, [sp, #168]
  4039a8:	ldurb	w1, [x29, #-105]
  4039ac:	ldur	x8, [x29, #-56]
  4039b0:	ldr	x9, [sp, #168]
  4039b4:	subs	x2, x8, x9
  4039b8:	bl	402770 <memchr@plt>
  4039bc:	stur	x0, [x29, #-72]
  4039c0:	ldur	x8, [x29, #-72]
  4039c4:	cbz	x8, 4039d8 <wcrtomb@plt+0x10c8>
  4039c8:	ldur	x8, [x29, #-72]
  4039cc:	add	x8, x8, #0x1
  4039d0:	str	x8, [sp, #16]
  4039d4:	b	4039e0 <wcrtomb@plt+0x10d0>
  4039d8:	ldur	x8, [x29, #-56]
  4039dc:	str	x8, [sp, #16]
  4039e0:	ldr	x8, [sp, #16]
  4039e4:	stur	x8, [x29, #-72]
  4039e8:	str	xzr, [sp, #152]
  4039ec:	ldur	x8, [x29, #-176]
  4039f0:	ldr	x0, [x8, #8]
  4039f4:	ldr	x1, [sp, #160]
  4039f8:	ldur	x2, [x29, #-72]
  4039fc:	mov	w9, wzr
  403a00:	and	w3, w9, #0x1
  403a04:	add	x4, sp, #0x98
  403a08:	add	x5, sp, #0x96
  403a0c:	bl	411568 <wcrtomb@plt+0xec58>
  403a10:	str	x0, [sp, #168]
  403a14:	ldr	x8, [sp, #168]
  403a18:	cbz	x8, 403a2c <wcrtomb@plt+0x111c>
  403a1c:	ldr	x8, [sp, #168]
  403a20:	ldur	x9, [x29, #-72]
  403a24:	cmp	x8, x9
  403a28:	b.ne	403a30 <wcrtomb@plt+0x1120>  // b.any
  403a2c:	b	403f54 <wcrtomb@plt+0x1644>
  403a30:	ldr	x8, [sp, #152]
  403a34:	cbz	x8, 403a60 <wcrtomb@plt+0x1150>
  403a38:	ldur	x0, [x29, #-24]
  403a3c:	ldurb	w1, [x29, #-105]
  403a40:	ldr	x8, [sp, #168]
  403a44:	ldur	x9, [x29, #-24]
  403a48:	subs	x2, x8, x9
  403a4c:	bl	4026f0 <memrchr@plt>
  403a50:	stur	x0, [x29, #-64]
  403a54:	ldur	x8, [x29, #-64]
  403a58:	add	x8, x8, #0x1
  403a5c:	stur	x8, [x29, #-64]
  403a60:	ldr	x0, [sp, #168]
  403a64:	ldurb	w1, [x29, #-105]
  403a68:	ldur	x8, [x29, #-56]
  403a6c:	ldr	x9, [sp, #168]
  403a70:	subs	x2, x8, x9
  403a74:	bl	402770 <memchr@plt>
  403a78:	stur	x0, [x29, #-72]
  403a7c:	ldur	x8, [x29, #-72]
  403a80:	cbz	x8, 403a94 <wcrtomb@plt+0x1184>
  403a84:	ldur	x8, [x29, #-72]
  403a88:	add	x8, x8, #0x1
  403a8c:	str	x8, [sp, #8]
  403a90:	b	403a9c <wcrtomb@plt+0x118c>
  403a94:	ldur	x8, [x29, #-56]
  403a98:	str	x8, [sp, #8]
  403a9c:	ldr	x8, [sp, #8]
  403aa0:	stur	x8, [x29, #-72]
  403aa4:	ldrb	w9, [sp, #150]
  403aa8:	tbnz	w9, #0, 403ab0 <wcrtomb@plt+0x11a0>
  403aac:	b	403f6c <wcrtomb@plt+0x165c>
  403ab0:	ldur	x8, [x29, #-64]
  403ab4:	stur	x8, [x29, #-80]
  403ab8:	b	403ac4 <wcrtomb@plt+0x11b4>
  403abc:	ldur	x8, [x29, #-48]
  403ac0:	stur	x8, [x29, #-80]
  403ac4:	ldur	x8, [x29, #-72]
  403ac8:	ldur	x9, [x29, #-64]
  403acc:	subs	x8, x8, x9
  403ad0:	subs	x8, x8, #0x1
  403ad4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  403ad8:	cmp	x9, x8
  403adc:	b.ge	403ae4 <wcrtomb@plt+0x11d4>  // b.tcont
  403ae0:	bl	423394 <wcrtomb@plt+0x20a84>
  403ae4:	ldur	x8, [x29, #-72]
  403ae8:	stur	x8, [x29, #-96]
  403aec:	stur	xzr, [x29, #-136]
  403af0:	stur	xzr, [x29, #-168]
  403af4:	ldur	x8, [x29, #-168]
  403af8:	ldur	x9, [x29, #-176]
  403afc:	ldr	x9, [x9, #24]
  403b00:	cmp	x8, x9
  403b04:	b.cs	403f30 <wcrtomb@plt+0x1620>  // b.hs, b.nlast
  403b08:	ldur	x8, [x29, #-176]
  403b0c:	ldr	x8, [x8, #16]
  403b10:	ldur	x9, [x29, #-168]
  403b14:	mov	x10, #0x40                  	// #64
  403b18:	mul	x9, x10, x9
  403b1c:	add	x8, x8, x9
  403b20:	ldrb	w11, [x8, #56]
  403b24:	and	w11, w11, #0xffffffbf
  403b28:	strb	w11, [x8, #56]
  403b2c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  403b30:	add	x8, x8, #0x8c4
  403b34:	ldrb	w11, [x8]
  403b38:	cmp	w11, #0xa
  403b3c:	cset	w11, eq  // eq = none
  403b40:	and	w11, w11, #0x1
  403b44:	ldur	x8, [x29, #-176]
  403b48:	ldr	x8, [x8, #16]
  403b4c:	ldur	x9, [x29, #-168]
  403b50:	mul	x9, x10, x9
  403b54:	add	x8, x8, x9
  403b58:	ldrb	w12, [x8, #56]
  403b5c:	and	w11, w11, #0x1
  403b60:	lsl	w11, w11, #7
  403b64:	and	w12, w12, #0x7f
  403b68:	orr	w11, w12, w11
  403b6c:	strb	w11, [x8, #56]
  403b70:	ldur	x8, [x29, #-176]
  403b74:	ldr	x8, [x8, #16]
  403b78:	ldur	x9, [x29, #-168]
  403b7c:	mul	x9, x10, x9
  403b80:	add	x0, x8, x9
  403b84:	ldur	x1, [x29, #-64]
  403b88:	ldur	x8, [x29, #-72]
  403b8c:	ldur	x9, [x29, #-64]
  403b90:	subs	x8, x8, x9
  403b94:	subs	x2, x8, #0x1
  403b98:	ldur	x8, [x29, #-80]
  403b9c:	ldur	x9, [x29, #-64]
  403ba0:	subs	x3, x8, x9
  403ba4:	ldur	x8, [x29, #-72]
  403ba8:	ldur	x9, [x29, #-80]
  403bac:	subs	x8, x8, x9
  403bb0:	subs	x4, x8, #0x1
  403bb4:	ldur	x8, [x29, #-176]
  403bb8:	add	x5, x8, #0x20
  403bbc:	bl	42a160 <_obstack_memory_used@@Base+0x2840>
  403bc0:	stur	x0, [x29, #-120]
  403bc4:	ldur	x8, [x29, #-120]
  403bc8:	mov	x9, #0xffffffffffffffff    	// #-1
  403bcc:	cmp	x8, x9
  403bd0:	b.ge	403bd8 <wcrtomb@plt+0x12c8>  // b.tcont
  403bd4:	bl	423394 <wcrtomb@plt+0x20a84>
  403bd8:	ldur	x8, [x29, #-120]
  403bdc:	mov	x9, xzr
  403be0:	cmp	x9, x8
  403be4:	cset	w10, gt
  403be8:	tbnz	w10, #0, 403f20 <wcrtomb@plt+0x1610>
  403bec:	ldur	x8, [x29, #-176]
  403bf0:	ldr	x8, [x8, #48]
  403bf4:	ldr	x8, [x8]
  403bf8:	ldur	x9, [x29, #-120]
  403bfc:	subs	x8, x8, x9
  403c00:	stur	x8, [x29, #-128]
  403c04:	ldur	x8, [x29, #-64]
  403c08:	ldur	x9, [x29, #-120]
  403c0c:	add	x8, x8, x9
  403c10:	stur	x8, [x29, #-88]
  403c14:	ldur	x8, [x29, #-88]
  403c18:	ldur	x9, [x29, #-96]
  403c1c:	cmp	x8, x9
  403c20:	b.ls	403c28 <wcrtomb@plt+0x1318>  // b.plast
  403c24:	b	403f20 <wcrtomb@plt+0x1610>
  403c28:	ldur	x8, [x29, #-48]
  403c2c:	cbz	x8, 403c40 <wcrtomb@plt+0x1330>
  403c30:	ldr	x8, [sp, #96]
  403c34:	ldrb	w9, [x8]
  403c38:	tbnz	w9, #0, 403c40 <wcrtomb@plt+0x1330>
  403c3c:	b	403ed4 <wcrtomb@plt+0x15c4>
  403c40:	ldr	x8, [sp, #88]
  403c44:	ldrb	w9, [x8]
  403c48:	tbnz	w9, #0, 403c5c <wcrtomb@plt+0x134c>
  403c4c:	ldr	x8, [sp, #96]
  403c50:	ldrb	w9, [x8]
  403c54:	tbnz	w9, #0, 403c5c <wcrtomb@plt+0x134c>
  403c58:	b	403c88 <wcrtomb@plt+0x1378>
  403c5c:	ldr	x8, [sp, #88]
  403c60:	ldrb	w9, [x8]
  403c64:	tbnz	w9, #0, 403c6c <wcrtomb@plt+0x135c>
  403c68:	b	403ca4 <wcrtomb@plt+0x1394>
  403c6c:	ldur	x8, [x29, #-128]
  403c70:	ldur	x9, [x29, #-72]
  403c74:	ldur	x10, [x29, #-80]
  403c78:	subs	x9, x9, x10
  403c7c:	subs	x9, x9, #0x1
  403c80:	cmp	x8, x9
  403c84:	b.ne	403ca4 <wcrtomb@plt+0x1394>  // b.any
  403c88:	ldur	x8, [x29, #-80]
  403c8c:	stur	x8, [x29, #-88]
  403c90:	ldur	x8, [x29, #-72]
  403c94:	ldur	x9, [x29, #-80]
  403c98:	subs	x8, x8, x9
  403c9c:	stur	x8, [x29, #-128]
  403ca0:	b	403ed4 <wcrtomb@plt+0x15c4>
  403ca4:	ldr	x8, [sp, #88]
  403ca8:	ldrb	w9, [x8]
  403cac:	tbnz	w9, #0, 403ed0 <wcrtomb@plt+0x15c0>
  403cb0:	ldr	x8, [sp, #96]
  403cb4:	ldrb	w9, [x8]
  403cb8:	tbnz	w9, #0, 403cc0 <wcrtomb@plt+0x13b0>
  403cbc:	b	403ed0 <wcrtomb@plt+0x15c0>
  403cc0:	ldur	x8, [x29, #-88]
  403cc4:	ldur	x9, [x29, #-96]
  403cc8:	cmp	x8, x9
  403ccc:	b.hi	403ed0 <wcrtomb@plt+0x15c0>  // b.pmore
  403cd0:	str	xzr, [sp, #120]
  403cd4:	ldur	x8, [x29, #-88]
  403cd8:	ldur	x9, [x29, #-128]
  403cdc:	add	x0, x8, x9
  403ce0:	ldur	x8, [x29, #-72]
  403ce4:	mov	x9, #0xffffffffffffffff    	// #-1
  403ce8:	add	x1, x8, x9
  403cec:	bl	40f43c <wcrtomb@plt+0xcb2c>
  403cf0:	cbnz	x0, 403d14 <wcrtomb@plt+0x1404>
  403cf4:	ldur	x0, [x29, #-64]
  403cf8:	ldur	x1, [x29, #-88]
  403cfc:	ldur	x8, [x29, #-72]
  403d00:	mov	x9, #0xffffffffffffffff    	// #-1
  403d04:	add	x2, x8, x9
  403d08:	bl	40f470 <wcrtomb@plt+0xcb60>
  403d0c:	cbnz	x0, 403d14 <wcrtomb@plt+0x1404>
  403d10:	b	403ed4 <wcrtomb@plt+0x15c4>
  403d14:	ldur	x8, [x29, #-128]
  403d18:	cmp	x8, #0x0
  403d1c:	cset	w9, ls  // ls = plast
  403d20:	tbnz	w9, #0, 403dbc <wcrtomb@plt+0x14ac>
  403d24:	ldur	x8, [x29, #-128]
  403d28:	mov	x9, #0xffffffffffffffff    	// #-1
  403d2c:	subs	x8, x8, #0x1
  403d30:	stur	x8, [x29, #-128]
  403d34:	ldur	x8, [x29, #-176]
  403d38:	ldr	x8, [x8, #16]
  403d3c:	ldur	x10, [x29, #-168]
  403d40:	mov	x11, #0x40                  	// #64
  403d44:	mul	x10, x11, x10
  403d48:	add	x8, x8, x10
  403d4c:	ldrb	w12, [x8, #56]
  403d50:	and	w12, w12, #0xffffffbf
  403d54:	orr	w12, w12, #0x40
  403d58:	strb	w12, [x8, #56]
  403d5c:	ldur	x8, [x29, #-176]
  403d60:	ldr	x8, [x8, #16]
  403d64:	ldur	x10, [x29, #-168]
  403d68:	mul	x10, x11, x10
  403d6c:	add	x0, x8, x10
  403d70:	ldur	x1, [x29, #-64]
  403d74:	ldur	x8, [x29, #-88]
  403d78:	ldur	x10, [x29, #-128]
  403d7c:	add	x8, x8, x10
  403d80:	ldur	x10, [x29, #-80]
  403d84:	subs	x2, x8, x10
  403d88:	ldur	x8, [x29, #-88]
  403d8c:	ldur	x10, [x29, #-64]
  403d90:	subs	x3, x8, x10
  403d94:	ldur	x8, [x29, #-176]
  403d98:	add	x4, x8, #0x20
  403d9c:	str	x9, [sp]
  403da0:	bl	429c5c <_obstack_memory_used@@Base+0x233c>
  403da4:	str	x0, [sp, #120]
  403da8:	ldr	x8, [sp, #120]
  403dac:	ldr	x9, [sp]
  403db0:	cmp	x8, x9
  403db4:	b.ge	403dbc <wcrtomb@plt+0x14ac>  // b.tcont
  403db8:	bl	423394 <wcrtomb@plt+0x20a84>
  403dbc:	ldr	x8, [sp, #120]
  403dc0:	mov	x9, xzr
  403dc4:	cmp	x9, x8
  403dc8:	cset	w10, ge  // ge = tcont
  403dcc:	tbnz	w10, #0, 403ddc <wcrtomb@plt+0x14cc>
  403dd0:	ldr	x8, [sp, #120]
  403dd4:	stur	x8, [x29, #-128]
  403dd8:	b	403ecc <wcrtomb@plt+0x15bc>
  403ddc:	ldur	x8, [x29, #-88]
  403de0:	ldur	x9, [x29, #-72]
  403de4:	mov	x10, #0xffffffffffffffff    	// #-1
  403de8:	add	x9, x9, x10
  403dec:	cmp	x8, x9
  403df0:	b.ne	403df8 <wcrtomb@plt+0x14e8>  // b.any
  403df4:	b	403ed0 <wcrtomb@plt+0x15c0>
  403df8:	ldur	x8, [x29, #-88]
  403dfc:	add	x8, x8, #0x1
  403e00:	stur	x8, [x29, #-88]
  403e04:	ldur	x8, [x29, #-176]
  403e08:	ldr	x8, [x8, #16]
  403e0c:	ldur	x9, [x29, #-168]
  403e10:	mov	x10, #0x40                  	// #64
  403e14:	mul	x9, x10, x9
  403e18:	add	x8, x8, x9
  403e1c:	ldrb	w11, [x8, #56]
  403e20:	and	w11, w11, #0xffffffbf
  403e24:	strb	w11, [x8, #56]
  403e28:	ldur	x8, [x29, #-176]
  403e2c:	ldr	x8, [x8, #16]
  403e30:	ldur	x9, [x29, #-168]
  403e34:	mul	x9, x10, x9
  403e38:	add	x0, x8, x9
  403e3c:	ldur	x1, [x29, #-64]
  403e40:	ldur	x8, [x29, #-72]
  403e44:	ldur	x9, [x29, #-64]
  403e48:	subs	x8, x8, x9
  403e4c:	subs	x2, x8, #0x1
  403e50:	ldur	x8, [x29, #-88]
  403e54:	ldur	x9, [x29, #-64]
  403e58:	subs	x3, x8, x9
  403e5c:	ldur	x8, [x29, #-72]
  403e60:	ldur	x9, [x29, #-88]
  403e64:	subs	x8, x8, x9
  403e68:	subs	x4, x8, #0x1
  403e6c:	ldur	x8, [x29, #-176]
  403e70:	add	x5, x8, #0x20
  403e74:	bl	42a160 <_obstack_memory_used@@Base+0x2840>
  403e78:	stur	x0, [x29, #-120]
  403e7c:	ldur	x8, [x29, #-120]
  403e80:	cmp	x8, #0x0
  403e84:	cset	w11, ge  // ge = tcont
  403e88:	tbnz	w11, #0, 403ea4 <wcrtomb@plt+0x1594>
  403e8c:	ldur	x8, [x29, #-120]
  403e90:	mov	x9, #0xffffffffffffffff    	// #-1
  403e94:	cmp	x8, x9
  403e98:	b.ge	403ea0 <wcrtomb@plt+0x1590>  // b.tcont
  403e9c:	bl	423394 <wcrtomb@plt+0x20a84>
  403ea0:	b	403ed0 <wcrtomb@plt+0x15c0>
  403ea4:	ldur	x8, [x29, #-176]
  403ea8:	ldr	x8, [x8, #48]
  403eac:	ldr	x8, [x8]
  403eb0:	ldur	x9, [x29, #-120]
  403eb4:	subs	x8, x8, x9
  403eb8:	stur	x8, [x29, #-128]
  403ebc:	ldur	x8, [x29, #-64]
  403ec0:	ldur	x9, [x29, #-120]
  403ec4:	add	x8, x8, x9
  403ec8:	stur	x8, [x29, #-88]
  403ecc:	b	403cc0 <wcrtomb@plt+0x13b0>
  403ed0:	b	403f20 <wcrtomb@plt+0x1610>
  403ed4:	ldur	x8, [x29, #-48]
  403ed8:	cbnz	x8, 403ee0 <wcrtomb@plt+0x15d0>
  403edc:	b	403f6c <wcrtomb@plt+0x165c>
  403ee0:	ldur	x8, [x29, #-88]
  403ee4:	ldur	x9, [x29, #-96]
  403ee8:	cmp	x8, x9
  403eec:	b.cc	403f10 <wcrtomb@plt+0x1600>  // b.lo, b.ul, b.last
  403ef0:	ldur	x8, [x29, #-88]
  403ef4:	ldur	x9, [x29, #-96]
  403ef8:	cmp	x8, x9
  403efc:	b.ne	403f20 <wcrtomb@plt+0x1610>  // b.any
  403f00:	ldur	x8, [x29, #-128]
  403f04:	ldur	x9, [x29, #-136]
  403f08:	cmp	x8, x9
  403f0c:	b.ls	403f20 <wcrtomb@plt+0x1610>  // b.plast
  403f10:	ldur	x8, [x29, #-88]
  403f14:	stur	x8, [x29, #-96]
  403f18:	ldur	x8, [x29, #-128]
  403f1c:	stur	x8, [x29, #-136]
  403f20:	ldur	x8, [x29, #-168]
  403f24:	add	x8, x8, #0x1
  403f28:	stur	x8, [x29, #-168]
  403f2c:	b	403af4 <wcrtomb@plt+0x11e4>
  403f30:	ldur	x8, [x29, #-96]
  403f34:	ldur	x9, [x29, #-72]
  403f38:	cmp	x8, x9
  403f3c:	b.cs	403f54 <wcrtomb@plt+0x1644>  // b.hs, b.nlast
  403f40:	ldur	x8, [x29, #-96]
  403f44:	stur	x8, [x29, #-64]
  403f48:	ldur	x8, [x29, #-136]
  403f4c:	stur	x8, [x29, #-128]
  403f50:	b	403f7c <wcrtomb@plt+0x166c>
  403f54:	ldur	x8, [x29, #-72]
  403f58:	stur	x8, [x29, #-64]
  403f5c:	b	4035fc <wcrtomb@plt+0xcec>
  403f60:	mov	x8, #0xffffffffffffffff    	// #-1
  403f64:	stur	x8, [x29, #-8]
  403f68:	b	403fa0 <wcrtomb@plt+0x1690>
  403f6c:	ldur	x8, [x29, #-72]
  403f70:	ldur	x9, [x29, #-64]
  403f74:	subs	x8, x8, x9
  403f78:	stur	x8, [x29, #-128]
  403f7c:	ldur	x8, [x29, #-64]
  403f80:	ldur	x9, [x29, #-24]
  403f84:	subs	x8, x8, x9
  403f88:	str	x8, [sp, #112]
  403f8c:	ldur	x8, [x29, #-128]
  403f90:	ldur	x9, [x29, #-40]
  403f94:	str	x8, [x9]
  403f98:	ldr	x8, [sp, #112]
  403f9c:	stur	x8, [x29, #-8]
  403fa0:	ldur	x0, [x29, #-8]
  403fa4:	ldr	x28, [sp, #384]
  403fa8:	ldp	x29, x30, [sp, #368]
  403fac:	add	sp, sp, #0x190
  403fb0:	ret
  403fb4:	sub	sp, sp, #0x20
  403fb8:	mov	x8, #0x1                   	// #1
  403fbc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  403fc0:	add	x9, x9, #0x480
  403fc4:	str	x0, [sp, #24]
  403fc8:	str	x1, [sp, #16]
  403fcc:	str	x8, [sp, #8]
  403fd0:	str	x9, [sp]
  403fd4:	ldr	x8, [sp, #8]
  403fd8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  403fdc:	add	x9, x9, #0x478
  403fe0:	ldr	x9, [x9]
  403fe4:	cmp	x8, x9
  403fe8:	b.cs	404028 <wcrtomb@plt+0x1718>  // b.hs, b.nlast
  403fec:	ldr	x8, [sp, #24]
  403ff0:	ldr	x9, [sp]
  403ff4:	ldr	x10, [x9]
  403ff8:	ldr	x11, [sp, #8]
  403ffc:	mov	x12, #0x10                  	// #16
  404000:	mul	x11, x12, x11
  404004:	add	x10, x10, x11
  404008:	ldr	x10, [x10, #8]
  40400c:	cmp	x8, x10
  404010:	b.cs	404018 <wcrtomb@plt+0x1708>  // b.hs, b.nlast
  404014:	b	404028 <wcrtomb@plt+0x1718>
  404018:	ldr	x8, [sp, #8]
  40401c:	add	x8, x8, #0x1
  404020:	str	x8, [sp, #8]
  404024:	b	403fd4 <wcrtomb@plt+0x16c4>
  404028:	ldr	x8, [sp, #24]
  40402c:	ldr	x9, [sp]
  404030:	ldr	x10, [x9]
  404034:	ldr	x11, [sp, #8]
  404038:	subs	x11, x11, #0x1
  40403c:	mov	x12, #0x10                  	// #16
  404040:	mul	x11, x12, x11
  404044:	add	x10, x10, x11
  404048:	ldr	x10, [x10, #8]
  40404c:	subs	x8, x8, x10
  404050:	add	x8, x8, #0x1
  404054:	ldr	x10, [sp, #16]
  404058:	str	x8, [x10]
  40405c:	ldr	x8, [x9]
  404060:	ldr	x10, [sp, #8]
  404064:	subs	x10, x10, #0x1
  404068:	mul	x10, x12, x10
  40406c:	add	x8, x8, x10
  404070:	ldr	x0, [x8]
  404074:	add	sp, sp, #0x20
  404078:	ret
  40407c:	sub	sp, sp, #0x70
  404080:	stp	x29, x30, [sp, #96]
  404084:	add	x29, sp, #0x60
  404088:	stur	w0, [x29, #-4]
  40408c:	ldur	w8, [x29, #-4]
  404090:	cbz	w8, 404118 <wcrtomb@plt+0x1808>
  404094:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404098:	add	x8, x8, #0x440
  40409c:	ldr	x0, [x8]
  4040a0:	adrp	x9, 441000 <_obstack_memory_used@@Base+0x196e0>
  4040a4:	add	x9, x9, #0xd08
  4040a8:	stur	x0, [x29, #-16]
  4040ac:	mov	x0, x9
  4040b0:	stur	x8, [x29, #-24]
  4040b4:	bl	4028b0 <gettext@plt>
  4040b8:	stur	x0, [x29, #-32]
  4040bc:	bl	41df58 <wcrtomb@plt+0x1b648>
  4040c0:	ldur	x8, [x29, #-16]
  4040c4:	stur	x0, [x29, #-40]
  4040c8:	mov	x0, x8
  4040cc:	ldur	x1, [x29, #-32]
  4040d0:	ldur	x2, [x29, #-40]
  4040d4:	bl	4028d0 <fprintf@plt>
  4040d8:	ldur	x8, [x29, #-24]
  4040dc:	ldr	x9, [x8]
  4040e0:	adrp	x10, 441000 <_obstack_memory_used@@Base+0x196e0>
  4040e4:	add	x10, x10, #0xd32
  4040e8:	mov	x0, x10
  4040ec:	str	x9, [sp, #48]
  4040f0:	bl	4028b0 <gettext@plt>
  4040f4:	str	x0, [sp, #40]
  4040f8:	bl	41df58 <wcrtomb@plt+0x1b648>
  4040fc:	ldr	x8, [sp, #48]
  404100:	str	x0, [sp, #32]
  404104:	mov	x0, x8
  404108:	ldr	x1, [sp, #40]
  40410c:	ldr	x2, [sp, #32]
  404110:	bl	4028d0 <fprintf@plt>
  404114:	b	404260 <wcrtomb@plt+0x1950>
  404118:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x196e0>
  40411c:	add	x0, x0, #0xd08
  404120:	bl	4028b0 <gettext@plt>
  404124:	str	x0, [sp, #24]
  404128:	bl	41df58 <wcrtomb@plt+0x1b648>
  40412c:	ldr	x1, [sp, #24]
  404130:	str	x0, [sp, #16]
  404134:	mov	x0, x1
  404138:	ldr	x1, [sp, #16]
  40413c:	bl	402850 <printf@plt>
  404140:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  404144:	add	x8, x8, #0xd59
  404148:	mov	x0, x8
  40414c:	bl	4028b0 <gettext@plt>
  404150:	bl	402850 <printf@plt>
  404154:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  404158:	add	x8, x8, #0xd7c
  40415c:	mov	x0, x8
  404160:	bl	4028b0 <gettext@plt>
  404164:	str	x0, [sp, #8]
  404168:	bl	41df58 <wcrtomb@plt+0x1b648>
  40416c:	ldr	x1, [sp, #8]
  404170:	str	x0, [sp]
  404174:	mov	x0, x1
  404178:	ldr	x1, [sp]
  40417c:	bl	402850 <printf@plt>
  404180:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  404184:	add	x8, x8, #0xe0d
  404188:	mov	x0, x8
  40418c:	bl	4028b0 <gettext@plt>
  404190:	bl	402850 <printf@plt>
  404194:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  404198:	add	x8, x8, #0xf0a
  40419c:	mov	x0, x8
  4041a0:	bl	4028b0 <gettext@plt>
  4041a4:	bl	402850 <printf@plt>
  4041a8:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4041ac:	add	x8, x8, #0xaf
  4041b0:	mov	x0, x8
  4041b4:	bl	4028b0 <gettext@plt>
  4041b8:	bl	402850 <printf@plt>
  4041bc:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4041c0:	add	x8, x8, #0x1a7
  4041c4:	mov	x0, x8
  4041c8:	bl	4028b0 <gettext@plt>
  4041cc:	bl	402850 <printf@plt>
  4041d0:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4041d4:	add	x8, x8, #0x37d
  4041d8:	mov	x0, x8
  4041dc:	bl	4028b0 <gettext@plt>
  4041e0:	bl	402850 <printf@plt>
  4041e4:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4041e8:	add	x8, x8, #0x4c4
  4041ec:	mov	x0, x8
  4041f0:	bl	4028b0 <gettext@plt>
  4041f4:	bl	402850 <printf@plt>
  4041f8:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4041fc:	add	x8, x8, #0x67b
  404200:	mov	x0, x8
  404204:	bl	4028b0 <gettext@plt>
  404208:	bl	402850 <printf@plt>
  40420c:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404210:	add	x8, x8, #0x78c
  404214:	mov	x0, x8
  404218:	bl	4028b0 <gettext@plt>
  40421c:	bl	402850 <printf@plt>
  404220:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404224:	add	x8, x8, #0x8e2
  404228:	mov	x0, x8
  40422c:	bl	4028b0 <gettext@plt>
  404230:	bl	402850 <printf@plt>
  404234:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404238:	add	x8, x8, #0x9b2
  40423c:	mov	x0, x8
  404240:	bl	4028b0 <gettext@plt>
  404244:	bl	402850 <printf@plt>
  404248:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  40424c:	add	x8, x8, #0xad6
  404250:	mov	x0, x8
  404254:	bl	4028b0 <gettext@plt>
  404258:	bl	402850 <printf@plt>
  40425c:	bl	422f44 <wcrtomb@plt+0x20634>
  404260:	ldur	w0, [x29, #-4]
  404264:	bl	402310 <exit@plt>
  404268:	sub	sp, sp, #0x70
  40426c:	stp	x29, x30, [sp, #96]
  404270:	add	x29, sp, #0x60
  404274:	mov	x8, #0x2                   	// #2
  404278:	stur	x0, [x29, #-8]
  40427c:	stur	x1, [x29, #-16]
  404280:	ldur	x9, [x29, #-16]
  404284:	ldr	x9, [x9]
  404288:	stur	x9, [x29, #-24]
  40428c:	ldur	x9, [x29, #-8]
  404290:	ldr	x9, [x9]
  404294:	stur	x9, [x29, #-32]
  404298:	stur	xzr, [x29, #-40]
  40429c:	ldur	x9, [x29, #-24]
  4042a0:	add	x0, x9, #0x1
  4042a4:	mov	x1, x8
  4042a8:	bl	42300c <wcrtomb@plt+0x206fc>
  4042ac:	str	x0, [sp, #48]
  4042b0:	ldr	x8, [sp, #48]
  4042b4:	str	x8, [sp, #40]
  4042b8:	ldur	x8, [x29, #-24]
  4042bc:	cbz	x8, 40440c <wcrtomb@plt+0x1afc>
  4042c0:	ldur	x0, [x29, #-32]
  4042c4:	ldur	x1, [x29, #-24]
  4042c8:	sub	x2, x29, #0x28
  4042cc:	bl	40ede8 <wcrtomb@plt+0xc4d8>
  4042d0:	str	x0, [sp, #32]
  4042d4:	ldr	x8, [sp, #32]
  4042d8:	mov	x9, #0xfffffffffffffffe    	// #-2
  4042dc:	cmp	x8, x9
  4042e0:	str	x8, [sp, #24]
  4042e4:	b.eq	404310 <wcrtomb@plt+0x1a00>  // b.none
  4042e8:	b	4042ec <wcrtomb@plt+0x19dc>
  4042ec:	mov	x8, #0xffffffffffffffff    	// #-1
  4042f0:	ldr	x9, [sp, #24]
  4042f4:	cmp	x9, x8
  4042f8:	b.eq	40434c <wcrtomb@plt+0x1a3c>  // b.none
  4042fc:	b	404300 <wcrtomb@plt+0x19f0>
  404300:	ldr	x8, [sp, #24]
  404304:	cmp	x8, #0x1
  404308:	b.eq	404358 <wcrtomb@plt+0x1a48>  // b.none
  40430c:	b	404318 <wcrtomb@plt+0x1a08>
  404310:	ldur	x8, [x29, #-24]
  404314:	str	x8, [sp, #32]
  404318:	ldr	x8, [sp, #40]
  40431c:	ldur	x1, [x29, #-32]
  404320:	ldr	x9, [sp, #32]
  404324:	mov	x0, x8
  404328:	mov	x2, x9
  40432c:	str	x8, [sp, #16]
  404330:	str	x9, [sp, #8]
  404334:	bl	402290 <memcpy@plt>
  404338:	ldr	x8, [sp, #16]
  40433c:	ldr	x9, [sp, #8]
  404340:	add	x10, x8, x9
  404344:	str	x10, [sp, #40]
  404348:	b	4043e8 <wcrtomb@plt+0x1ad8>
  40434c:	stur	xzr, [x29, #-40]
  404350:	mov	x8, #0x1                   	// #1
  404354:	str	x8, [sp, #32]
  404358:	ldur	x8, [x29, #-32]
  40435c:	ldrb	w9, [x8]
  404360:	cmp	w9, #0x24
  404364:	str	w9, [sp, #4]
  404368:	b.eq	4043bc <wcrtomb@plt+0x1aac>  // b.none
  40436c:	b	404370 <wcrtomb@plt+0x1a60>
  404370:	ldr	w8, [sp, #4]
  404374:	cmp	w8, #0x2a
  404378:	b.eq	4043bc <wcrtomb@plt+0x1aac>  // b.none
  40437c:	b	404380 <wcrtomb@plt+0x1a70>
  404380:	ldr	w8, [sp, #4]
  404384:	cmp	w8, #0x2e
  404388:	b.eq	4043bc <wcrtomb@plt+0x1aac>  // b.none
  40438c:	b	404390 <wcrtomb@plt+0x1a80>
  404390:	ldr	w8, [sp, #4]
  404394:	subs	w9, w8, #0x5b
  404398:	cmp	w9, #0x1
  40439c:	b.ls	4043bc <wcrtomb@plt+0x1aac>  // b.plast
  4043a0:	b	4043a4 <wcrtomb@plt+0x1a94>
  4043a4:	ldr	w8, [sp, #4]
  4043a8:	cmp	w8, #0x5e
  4043ac:	cset	w9, eq  // eq = none
  4043b0:	eor	w9, w9, #0x1
  4043b4:	tbnz	w9, #0, 4043d0 <wcrtomb@plt+0x1ac0>
  4043b8:	b	4043bc <wcrtomb@plt+0x1aac>
  4043bc:	ldr	x8, [sp, #40]
  4043c0:	add	x9, x8, #0x1
  4043c4:	str	x9, [sp, #40]
  4043c8:	mov	w10, #0x5c                  	// #92
  4043cc:	strb	w10, [x8]
  4043d0:	ldur	x8, [x29, #-32]
  4043d4:	ldrb	w9, [x8]
  4043d8:	ldr	x8, [sp, #40]
  4043dc:	add	x10, x8, #0x1
  4043e0:	str	x10, [sp, #40]
  4043e4:	strb	w9, [x8]
  4043e8:	ldr	x8, [sp, #32]
  4043ec:	ldur	x9, [x29, #-32]
  4043f0:	add	x8, x9, x8
  4043f4:	stur	x8, [x29, #-32]
  4043f8:	ldr	x8, [sp, #32]
  4043fc:	ldur	x9, [x29, #-24]
  404400:	subs	x8, x9, x8
  404404:	stur	x8, [x29, #-24]
  404408:	b	4042b8 <wcrtomb@plt+0x19a8>
  40440c:	ldur	x8, [x29, #-8]
  404410:	ldr	x0, [x8]
  404414:	bl	4026c0 <free@plt>
  404418:	ldr	x8, [sp, #48]
  40441c:	ldur	x9, [x29, #-8]
  404420:	str	x8, [x9]
  404424:	ldr	x8, [sp, #40]
  404428:	ldr	x9, [sp, #48]
  40442c:	subs	x8, x8, x9
  404430:	ldur	x9, [x29, #-16]
  404434:	str	x8, [x9]
  404438:	ldp	x29, x30, [sp, #96]
  40443c:	add	sp, sp, #0x70
  404440:	ret
  404444:	stp	x29, x30, [sp, #-96]!
  404448:	stp	x28, x27, [sp, #16]
  40444c:	stp	x26, x25, [sp, #32]
  404450:	stp	x24, x23, [sp, #48]
  404454:	stp	x22, x21, [sp, #64]
  404458:	stp	x20, x19, [sp, #80]
  40445c:	mov	x29, sp
  404460:	sub	sp, sp, #0x390
  404464:	add	x8, sp, #0x288
  404468:	mov	x9, xzr
  40446c:	mov	w10, #0xffffffff            	// #-1
  404470:	mov	w11, #0x2                   	// #2
  404474:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404478:	add	x12, x12, #0x3d0
  40447c:	mov	w13, #0xa                   	// #10
  404480:	adrp	x14, 459000 <__progname@@GLIBC_2.17+0x3b98>
  404484:	add	x14, x14, #0x8c4
  404488:	adrp	x15, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40448c:	add	x15, x15, #0x488
  404490:	mov	x16, #0x7fffffffffffffff    	// #9223372036854775807
  404494:	adrp	x17, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404498:	add	x17, x17, #0x490
  40449c:	mov	x18, #0xffffffffffffffff    	// #-1
  4044a0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4044a4:	add	x2, x2, #0x498
  4044a8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4044ac:	add	x3, x3, #0x4a0
  4044b0:	mov	w4, #0x0                   	// #0
  4044b4:	adrp	x5, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4044b8:	add	x5, x5, #0x4a8
  4044bc:	mov	w6, #0x6                   	// #6
  4044c0:	adrp	x7, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4044c4:	add	x7, x7, #0xad5
  4044c8:	adrp	x19, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4044cc:	add	x19, x19, #0xce2
  4044d0:	adrp	x20, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4044d4:	add	x20, x20, #0xbe0
  4044d8:	adrp	x21, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4044dc:	add	x21, x21, #0x8c8
  4044e0:	adrp	x22, 405000 <wcrtomb@plt+0x26f0>
  4044e4:	add	x22, x22, #0xbf4
  4044e8:	mov	x23, x9
  4044ec:	adrp	x24, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4044f0:	add	x24, x24, #0xbf2
  4044f4:	adrp	x25, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4044f8:	add	x25, x25, #0x450
  4044fc:	adrp	x26, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404500:	add	x26, x26, #0x500
  404504:	adrp	x27, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404508:	add	x27, x27, #0x4c3
  40450c:	adrp	x28, 459000 <__progname@@GLIBC_2.17+0x3b98>
  404510:	add	x28, x28, #0xdcc
  404514:	adrp	x30, 459000 <__progname@@GLIBC_2.17+0x3b98>
  404518:	add	x30, x30, #0xdcd
  40451c:	str	x8, [sp, #456]
  404520:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404524:	add	x8, x8, #0x4c1
  404528:	str	x8, [sp, #448]
  40452c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404530:	add	x8, x8, #0x4bc
  404534:	str	x8, [sp, #440]
  404538:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40453c:	add	x8, x8, #0x4b7
  404540:	str	x8, [sp, #432]
  404544:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404548:	add	x8, x8, #0x4c4
  40454c:	str	x8, [sp, #424]
  404550:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  404554:	add	x8, x8, #0xdce
  404558:	str	x8, [sp, #416]
  40455c:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  404560:	add	x8, x8, #0x460
  404564:	str	x8, [sp, #408]
  404568:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40456c:	add	x8, x8, #0x360
  404570:	str	x8, [sp, #400]
  404574:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404578:	add	x8, x8, #0x4b8
  40457c:	str	x8, [sp, #392]
  404580:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404584:	add	x8, x8, #0x5a8
  404588:	str	x8, [sp, #384]
  40458c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404590:	add	x8, x8, #0x4ac
  404594:	str	x8, [sp, #376]
  404598:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40459c:	add	x8, x8, #0x448
  4045a0:	str	x8, [sp, #368]
  4045a4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4045a8:	add	x8, x8, #0x4e0
  4045ac:	str	x8, [sp, #360]
  4045b0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4045b4:	add	x8, x8, #0x4d0
  4045b8:	str	x8, [sp, #352]
  4045bc:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4045c0:	add	x8, x8, #0x122
  4045c4:	str	x8, [sp, #344]
  4045c8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4045cc:	add	x8, x8, #0x4b0
  4045d0:	str	x1, [sp, #336]
  4045d4:	sub	x1, x29, #0x10
  4045d8:	str	x2, [sp, #328]
  4045dc:	sub	x2, x29, #0x18
  4045e0:	str	x8, [sp, #320]
  4045e4:	ldr	x8, [sp, #456]
  4045e8:	str	wzr, [x8, #252]
  4045ec:	str	w0, [x8, #248]
  4045f0:	ldr	x0, [sp, #336]
  4045f4:	str	x0, [x8, #240]
  4045f8:	str	x9, [x8, #232]
  4045fc:	str	xzr, [x8, #224]
  404600:	str	xzr, [x8, #208]
  404604:	str	w10, [x8, #204]
  404608:	str	w11, [x12]
  40460c:	str	wzr, [x8, #148]
  404610:	strb	w13, [x14]
  404614:	str	w10, [x15]
  404618:	str	x16, [x17]
  40461c:	ldr	x9, [sp, #328]
  404620:	str	x18, [x9]
  404624:	str	x18, [x3]
  404628:	str	x18, [x8, #160]
  40462c:	strb	w4, [x5]
  404630:	mov	w0, w6
  404634:	str	x1, [sp, #312]
  404638:	mov	x1, x7
  40463c:	str	x14, [sp, #304]
  404640:	str	x17, [sp, #296]
  404644:	str	x3, [sp, #288]
  404648:	str	x7, [sp, #280]
  40464c:	str	x19, [sp, #272]
  404650:	str	x20, [sp, #264]
  404654:	str	x21, [sp, #256]
  404658:	str	x22, [sp, #248]
  40465c:	str	x23, [sp, #240]
  404660:	str	x24, [sp, #232]
  404664:	str	x25, [sp, #224]
  404668:	str	x26, [sp, #216]
  40466c:	str	x27, [sp, #208]
  404670:	str	x28, [sp, #200]
  404674:	str	x30, [sp, #192]
  404678:	str	x2, [sp, #184]
  40467c:	bl	4028f0 <setlocale@plt>
  404680:	ldr	x8, [sp, #272]
  404684:	mov	x0, x8
  404688:	ldr	x1, [sp, #264]
  40468c:	bl	4024e0 <bindtextdomain@plt>
  404690:	ldr	x8, [sp, #272]
  404694:	mov	x0, x8
  404698:	bl	402680 <textdomain@plt>
  40469c:	ldr	x8, [sp, #256]
  4046a0:	mov	x0, x8
  4046a4:	bl	41c7e4 <wcrtomb@plt+0x19ed4>
  4046a8:	ldr	x0, [sp, #248]
  4046ac:	bl	440b98 <_obstack_memory_used@@Base+0x19278>
  4046b0:	ldr	x1, [sp, #240]
  4046b4:	mov	x0, x1
  4046b8:	bl	40ff9c <wcrtomb@plt+0xd68c>
  4046bc:	ldr	x8, [sp, #456]
  4046c0:	str	wzr, [x8, #176]
  4046c4:	ldr	x9, [sp, #232]
  4046c8:	mov	x0, x9
  4046cc:	bl	402890 <getenv@plt>
  4046d0:	ldr	x1, [sp, #312]
  4046d4:	ldr	x2, [sp, #184]
  4046d8:	bl	405c18 <wcrtomb@plt+0x3308>
  4046dc:	ldr	x8, [sp, #456]
  4046e0:	str	w0, [x8, #184]
  4046e4:	ldr	w10, [x8, #184]
  4046e8:	cbz	w10, 404710 <wcrtomb@plt+0x1e00>
  4046ec:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4046f0:	add	x0, x0, #0xbff
  4046f4:	bl	4028b0 <gettext@plt>
  4046f8:	mov	w8, wzr
  4046fc:	str	x0, [sp, #176]
  404700:	mov	w0, w8
  404704:	mov	w1, w8
  404708:	ldr	x2, [sp, #176]
  40470c:	bl	402330 <error@plt>
  404710:	ldr	x8, [sp, #224]
  404714:	ldr	w9, [x8]
  404718:	ldr	x10, [sp, #456]
  40471c:	str	w9, [x10, #180]
  404720:	ldr	w0, [x10, #248]
  404724:	ldr	x1, [x10, #240]
  404728:	sub	x2, x29, #0x68
  40472c:	bl	405d80 <wcrtomb@plt+0x3470>
  404730:	ldr	x8, [sp, #456]
  404734:	str	w0, [x8, #188]
  404738:	mov	w9, #0xffffffff            	// #-1
  40473c:	cmp	w0, w9
  404740:	b.eq	405310 <wcrtomb@plt+0x2a00>  // b.none
  404744:	ldr	x8, [sp, #456]
  404748:	ldr	w9, [x8, #188]
  40474c:	subs	w9, w9, #0x0
  404750:	mov	w10, w9
  404754:	ubfx	x10, x10, #0, #32
  404758:	cmp	x10, #0x109
  40475c:	str	x10, [sp, #168]
  404760:	b.hi	405304 <wcrtomb@plt+0x29f4>  // b.pmore
  404764:	adrp	x8, 440000 <_obstack_memory_used@@Base+0x186e0>
  404768:	add	x8, x8, #0xca0
  40476c:	ldr	x11, [sp, #168]
  404770:	ldrsw	x10, [x8, x11, lsl #2]
  404774:	add	x9, x8, x10
  404778:	br	x9
  40477c:	ldr	x8, [sp, #368]
  404780:	ldr	x0, [x8]
  404784:	ldr	x1, [sp, #288]
  404788:	bl	405eec <wcrtomb@plt+0x35dc>
  40478c:	b	40530c <wcrtomb@plt+0x29fc>
  404790:	ldr	x8, [sp, #368]
  404794:	ldr	x0, [x8]
  404798:	ldr	x1, [sp, #328]
  40479c:	bl	405eec <wcrtomb@plt+0x35dc>
  4047a0:	b	40530c <wcrtomb@plt+0x29fc>
  4047a4:	ldr	x8, [sp, #368]
  4047a8:	ldr	x0, [x8]
  4047ac:	sub	x1, x29, #0x68
  4047b0:	bl	405eec <wcrtomb@plt+0x35dc>
  4047b4:	b	40530c <wcrtomb@plt+0x29fc>
  4047b8:	ldr	x8, [sp, #368]
  4047bc:	ldr	x0, [x8]
  4047c0:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4047c4:	add	x1, x1, #0xc42
  4047c8:	bl	4026a0 <strcmp@plt>
  4047cc:	cbnz	w0, 4047e0 <wcrtomb@plt+0x1ed0>
  4047d0:	mov	w8, #0x1                   	// #1
  4047d4:	ldr	x9, [sp, #376]
  4047d8:	str	w8, [x9]
  4047dc:	b	404830 <wcrtomb@plt+0x1f20>
  4047e0:	ldr	x8, [sp, #368]
  4047e4:	ldr	x0, [x8]
  4047e8:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4047ec:	add	x1, x1, #0xc47
  4047f0:	bl	4026a0 <strcmp@plt>
  4047f4:	cbnz	w0, 404808 <wcrtomb@plt+0x1ef8>
  4047f8:	mov	w8, #0x2                   	// #2
  4047fc:	ldr	x9, [sp, #376]
  404800:	str	w8, [x9]
  404804:	b	404830 <wcrtomb@plt+0x1f20>
  404808:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  40480c:	add	x0, x0, #0xc4c
  404810:	bl	4028b0 <gettext@plt>
  404814:	mov	w8, #0x2                   	// #2
  404818:	str	x0, [sp, #160]
  40481c:	mov	w0, w8
  404820:	mov	w8, wzr
  404824:	mov	w1, w8
  404828:	ldr	x2, [sp, #160]
  40482c:	bl	402330 <error@plt>
  404830:	b	40530c <wcrtomb@plt+0x29fc>
  404834:	ldr	x8, [sp, #456]
  404838:	ldr	w1, [x8, #204]
  40483c:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404840:	add	x0, x0, #0xc63
  404844:	bl	405fa0 <wcrtomb@plt+0x3690>
  404848:	ldr	x8, [sp, #456]
  40484c:	str	w0, [x8, #204]
  404850:	b	40530c <wcrtomb@plt+0x29fc>
  404854:	ldr	x8, [sp, #456]
  404858:	ldr	w1, [x8, #204]
  40485c:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404860:	add	x0, x0, #0xc69
  404864:	bl	405fa0 <wcrtomb@plt+0x3690>
  404868:	ldr	x8, [sp, #456]
  40486c:	str	w0, [x8, #204]
  404870:	b	40530c <wcrtomb@plt+0x29fc>
  404874:	ldr	x8, [sp, #456]
  404878:	ldr	w1, [x8, #204]
  40487c:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404880:	add	x0, x0, #0xc6f
  404884:	bl	405fa0 <wcrtomb@plt+0x3690>
  404888:	ldr	x8, [sp, #456]
  40488c:	str	w0, [x8, #204]
  404890:	b	40530c <wcrtomb@plt+0x29fc>
  404894:	ldr	x8, [sp, #456]
  404898:	ldr	w1, [x8, #204]
  40489c:	ldr	x0, [sp, #272]
  4048a0:	bl	405fa0 <wcrtomb@plt+0x3690>
  4048a4:	ldr	x8, [sp, #456]
  4048a8:	str	w0, [x8, #204]
  4048ac:	b	40530c <wcrtomb@plt+0x29fc>
  4048b0:	ldr	x8, [sp, #368]
  4048b4:	ldr	x0, [x8]
  4048b8:	ldr	x9, [sp, #456]
  4048bc:	ldr	w1, [x9, #204]
  4048c0:	bl	405fa0 <wcrtomb@plt+0x3690>
  4048c4:	ldr	x8, [sp, #456]
  4048c8:	str	w0, [x8, #204]
  4048cc:	b	40530c <wcrtomb@plt+0x29fc>
  4048d0:	mov	w8, #0x1                   	// #1
  4048d4:	ldr	x9, [sp, #456]
  4048d8:	str	w8, [x9, #148]
  4048dc:	b	40530c <wcrtomb@plt+0x29fc>
  4048e0:	mov	w8, #0x2                   	// #2
  4048e4:	ldr	x9, [sp, #320]
  4048e8:	str	w8, [x9]
  4048ec:	b	40530c <wcrtomb@plt+0x29fc>
  4048f0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4048f4:	add	x8, x8, #0x4b4
  4048f8:	mov	w9, #0x1                   	// #1
  4048fc:	strb	w9, [x8]
  404900:	b	40530c <wcrtomb@plt+0x29fc>
  404904:	b	40530c <wcrtomb@plt+0x29fc>
  404908:	b	40530c <wcrtomb@plt+0x29fc>
  40490c:	mov	w8, #0x1                   	// #1
  404910:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404914:	add	x9, x9, #0x4b5
  404918:	strb	w8, [x9]
  40491c:	b	40530c <wcrtomb@plt+0x29fc>
  404920:	mov	w8, #0x1                   	// #1
  404924:	ldr	x9, [sp, #320]
  404928:	str	w8, [x9]
  40492c:	b	40530c <wcrtomb@plt+0x29fc>
  404930:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404934:	add	x8, x8, #0x4b6
  404938:	mov	w9, #0x1                   	// #1
  40493c:	strb	w9, [x8]
  404940:	b	40530c <wcrtomb@plt+0x29fc>
  404944:	mov	w8, #0x1                   	// #1
  404948:	ldr	x9, [sp, #432]
  40494c:	strb	w8, [x9]
  404950:	b	40530c <wcrtomb@plt+0x29fc>
  404954:	ldr	x8, [sp, #368]
  404958:	ldr	x1, [x8]
  40495c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404960:	add	x9, x9, #0x3c8
  404964:	ldr	x5, [x9]
  404968:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  40496c:	add	x0, x0, #0xc74
  404970:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x196e0>
  404974:	add	x2, x2, #0x440
  404978:	adrp	x9, 441000 <_obstack_memory_used@@Base+0x196e0>
  40497c:	add	x9, x9, #0x430
  404980:	mov	x3, x9
  404984:	mov	x4, #0x4                   	// #4
  404988:	str	x9, [sp, #152]
  40498c:	bl	40f918 <wcrtomb@plt+0xd008>
  404990:	ldr	x8, [sp, #152]
  404994:	ldr	w10, [x8, x0, lsl #2]
  404998:	ldr	x9, [sp, #400]
  40499c:	str	w10, [x9]
  4049a0:	ldr	w10, [x9]
  4049a4:	cmp	w10, #0x3
  4049a8:	b.ne	4049b8 <wcrtomb@plt+0x20a8>  // b.any
  4049ac:	ldr	x8, [sp, #456]
  4049b0:	ldr	w9, [x8, #180]
  4049b4:	str	w9, [x8, #176]
  4049b8:	b	40530c <wcrtomb@plt+0x29fc>
  4049bc:	ldr	x8, [sp, #368]
  4049c0:	ldr	x0, [x8]
  4049c4:	bl	4022f0 <strlen@plt>
  4049c8:	ldr	x8, [sp, #456]
  4049cc:	str	x0, [x8, #192]
  4049d0:	ldr	x9, [x8, #208]
  4049d4:	ldr	x10, [x8, #224]
  4049d8:	ldr	x11, [x8, #192]
  4049dc:	add	x10, x10, x11
  4049e0:	add	x10, x10, #0x1
  4049e4:	cmp	x9, x10
  4049e8:	b.cs	404a18 <wcrtomb@plt+0x2108>  // b.hs, b.nlast
  4049ec:	ldr	x8, [sp, #456]
  4049f0:	ldr	x9, [x8, #224]
  4049f4:	ldr	x10, [x8, #192]
  4049f8:	add	x9, x9, x10
  4049fc:	add	x9, x9, #0x1
  404a00:	sub	x1, x29, #0x38
  404a04:	str	x9, [x8, #208]
  404a08:	ldr	x0, [x8, #232]
  404a0c:	bl	423270 <wcrtomb@plt+0x20960>
  404a10:	ldr	x8, [sp, #456]
  404a14:	str	x0, [x8, #232]
  404a18:	ldr	x8, [sp, #456]
  404a1c:	ldr	x9, [x8, #224]
  404a20:	str	x9, [x8, #216]
  404a24:	ldr	x9, [x8, #232]
  404a28:	ldr	x10, [x8, #216]
  404a2c:	add	x0, x9, x10
  404a30:	ldr	x9, [sp, #368]
  404a34:	ldr	x1, [x9]
  404a38:	ldr	x2, [x8, #192]
  404a3c:	bl	402290 <memcpy@plt>
  404a40:	ldr	x8, [sp, #456]
  404a44:	ldr	x9, [x8, #192]
  404a48:	ldr	x10, [x8, #224]
  404a4c:	add	x9, x10, x9
  404a50:	str	x9, [x8, #224]
  404a54:	ldr	x9, [x8, #232]
  404a58:	ldr	x10, [x8, #224]
  404a5c:	add	x11, x10, #0x1
  404a60:	str	x11, [x8, #224]
  404a64:	add	x9, x9, x10
  404a68:	mov	w12, #0xa                   	// #10
  404a6c:	strb	w12, [x9]
  404a70:	ldr	x9, [x8, #232]
  404a74:	ldr	x10, [x8, #216]
  404a78:	add	x0, x9, x10
  404a7c:	ldr	x9, [x8, #192]
  404a80:	add	x1, x9, #0x1
  404a84:	ldr	x2, [sp, #280]
  404a88:	bl	4060bc <wcrtomb@plt+0x37ac>
  404a8c:	b	40530c <wcrtomb@plt+0x29fc>
  404a90:	ldr	x8, [sp, #368]
  404a94:	ldr	x0, [x8]
  404a98:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404a9c:	add	x1, x1, #0xc82
  404aa0:	bl	4026a0 <strcmp@plt>
  404aa4:	cbnz	w0, 404ae0 <wcrtomb@plt+0x21d0>
  404aa8:	ldr	x8, [sp, #392]
  404aac:	ldrb	w9, [x8]
  404ab0:	tbnz	w9, #0, 404ab8 <wcrtomb@plt+0x21a8>
  404ab4:	b	404ac8 <wcrtomb@plt+0x21b8>
  404ab8:	mov	w8, wzr
  404abc:	mov	w0, w8
  404ac0:	mov	w1, w8
  404ac4:	bl	4233f4 <wcrtomb@plt+0x20ae4>
  404ac8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404acc:	add	x8, x8, #0x460
  404ad0:	ldr	x8, [x8]
  404ad4:	ldr	x9, [sp, #456]
  404ad8:	str	x8, [x9, #152]
  404adc:	b	404b38 <wcrtomb@plt+0x2228>
  404ae0:	ldr	x8, [sp, #368]
  404ae4:	ldr	x0, [x8]
  404ae8:	ldr	x9, [sp, #392]
  404aec:	ldrb	w10, [x9]
  404af0:	adrp	x11, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404af4:	add	x11, x11, #0xe83
  404af8:	adrp	x12, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404afc:	add	x12, x12, #0xc84
  404b00:	tst	w10, #0x1
  404b04:	csel	x1, x12, x11, ne  // ne = any
  404b08:	bl	402420 <fopen@plt>
  404b0c:	ldr	x8, [sp, #456]
  404b10:	str	x0, [x8, #152]
  404b14:	ldr	x9, [x8, #152]
  404b18:	cbnz	x9, 404b38 <wcrtomb@plt+0x2228>
  404b1c:	bl	402870 <__errno_location@plt>
  404b20:	ldr	w1, [x0]
  404b24:	ldr	x8, [sp, #368]
  404b28:	ldr	x3, [x8]
  404b2c:	mov	w0, #0x2                   	// #2
  404b30:	ldr	x2, [sp, #344]
  404b34:	bl	402330 <error@plt>
  404b38:	ldr	x8, [sp, #456]
  404b3c:	ldr	x9, [x8, #224]
  404b40:	str	x9, [x8, #216]
  404b44:	ldr	x8, [sp, #456]
  404b48:	ldr	x9, [x8, #208]
  404b4c:	ldr	x10, [x8, #224]
  404b50:	add	x10, x10, #0x1
  404b54:	cmp	x9, x10
  404b58:	b.hi	404b74 <wcrtomb@plt+0x2264>  // b.pmore
  404b5c:	ldr	x8, [sp, #456]
  404b60:	ldr	x0, [x8, #232]
  404b64:	sub	x1, x29, #0x38
  404b68:	bl	423270 <wcrtomb@plt+0x20960>
  404b6c:	ldr	x8, [sp, #456]
  404b70:	str	x0, [x8, #232]
  404b74:	ldr	x8, [sp, #456]
  404b78:	ldr	x9, [x8, #232]
  404b7c:	ldr	x10, [x8, #224]
  404b80:	add	x0, x9, x10
  404b84:	ldr	x9, [x8, #208]
  404b88:	ldr	x10, [x8, #224]
  404b8c:	mov	x1, #0x1                   	// #1
  404b90:	add	x10, x10, #0x1
  404b94:	subs	x2, x9, x10
  404b98:	ldr	x3, [x8, #152]
  404b9c:	bl	402660 <fread_unlocked@plt>
  404ba0:	ldr	x8, [sp, #456]
  404ba4:	str	x0, [x8, #192]
  404ba8:	ldr	x9, [x8, #192]
  404bac:	cbnz	x9, 404bb4 <wcrtomb@plt+0x22a4>
  404bb0:	b	404bcc <wcrtomb@plt+0x22bc>
  404bb4:	ldr	x8, [sp, #456]
  404bb8:	ldr	x9, [x8, #192]
  404bbc:	ldr	x10, [x8, #224]
  404bc0:	add	x9, x10, x9
  404bc4:	str	x9, [x8, #224]
  404bc8:	b	404b44 <wcrtomb@plt+0x2234>
  404bcc:	bl	402870 <__errno_location@plt>
  404bd0:	ldr	w8, [x0]
  404bd4:	ldr	x9, [sp, #456]
  404bd8:	str	w8, [x9, #172]
  404bdc:	ldr	x0, [x9, #152]
  404be0:	bl	402370 <ferror_unlocked@plt>
  404be4:	cbz	w0, 404c04 <wcrtomb@plt+0x22f4>
  404be8:	ldr	x8, [sp, #456]
  404bec:	ldr	w1, [x8, #172]
  404bf0:	ldr	x9, [sp, #368]
  404bf4:	ldr	x3, [x9]
  404bf8:	mov	w0, #0x2                   	// #2
  404bfc:	ldr	x2, [sp, #344]
  404c00:	bl	402330 <error@plt>
  404c04:	ldr	x8, [sp, #456]
  404c08:	ldr	x9, [x8, #152]
  404c0c:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404c10:	add	x10, x10, #0x460
  404c14:	ldr	x10, [x10]
  404c18:	cmp	x9, x10
  404c1c:	b.eq	404c2c <wcrtomb@plt+0x231c>  // b.none
  404c20:	ldr	x8, [sp, #456]
  404c24:	ldr	x0, [x8, #152]
  404c28:	bl	4023f0 <fclose@plt>
  404c2c:	ldr	x8, [sp, #456]
  404c30:	ldr	x9, [x8, #216]
  404c34:	ldr	x10, [x8, #224]
  404c38:	cmp	x9, x10
  404c3c:	b.eq	404c7c <wcrtomb@plt+0x236c>  // b.none
  404c40:	ldr	x8, [sp, #456]
  404c44:	ldr	x9, [x8, #232]
  404c48:	ldr	x10, [x8, #224]
  404c4c:	subs	x10, x10, #0x1
  404c50:	ldrb	w11, [x9, x10]
  404c54:	cmp	w11, #0xa
  404c58:	b.eq	404c7c <wcrtomb@plt+0x236c>  // b.none
  404c5c:	ldr	x8, [sp, #456]
  404c60:	ldr	x9, [x8, #232]
  404c64:	ldr	x10, [x8, #224]
  404c68:	add	x11, x10, #0x1
  404c6c:	str	x11, [x8, #224]
  404c70:	add	x9, x9, x10
  404c74:	mov	w12, #0xa                   	// #10
  404c78:	strb	w12, [x9]
  404c7c:	ldr	x8, [sp, #456]
  404c80:	ldr	x9, [x8, #232]
  404c84:	ldr	x10, [x8, #216]
  404c88:	add	x0, x9, x10
  404c8c:	ldr	x9, [x8, #224]
  404c90:	ldr	x10, [x8, #216]
  404c94:	subs	x1, x9, x10
  404c98:	ldr	x9, [sp, #368]
  404c9c:	ldr	x2, [x9]
  404ca0:	bl	4060bc <wcrtomb@plt+0x37ac>
  404ca4:	b	40530c <wcrtomb@plt+0x29fc>
  404ca8:	mov	w8, #0xffffffff            	// #-1
  404cac:	ldr	x9, [sp, #456]
  404cb0:	str	w8, [x9, #148]
  404cb4:	b	40530c <wcrtomb@plt+0x29fc>
  404cb8:	mov	w8, #0x1                   	// #1
  404cbc:	ldr	x9, [sp, #416]
  404cc0:	strb	w8, [x9]
  404cc4:	b	40530c <wcrtomb@plt+0x29fc>
  404cc8:	mov	w8, #0x0                   	// #0
  404ccc:	ldr	x9, [sp, #416]
  404cd0:	strb	w8, [x9]
  404cd4:	b	40530c <wcrtomb@plt+0x29fc>
  404cd8:	mov	w8, #0x2                   	// #2
  404cdc:	ldr	x9, [sp, #440]
  404ce0:	str	w8, [x9]
  404ce4:	b	40530c <wcrtomb@plt+0x29fc>
  404ce8:	mov	w8, #0x1                   	// #1
  404cec:	ldr	x9, [sp, #440]
  404cf0:	str	w8, [x9]
  404cf4:	b	40530c <wcrtomb@plt+0x29fc>
  404cf8:	ldr	x8, [sp, #368]
  404cfc:	ldr	x0, [x8]
  404d00:	mov	x9, xzr
  404d04:	mov	x1, x9
  404d08:	mov	w2, #0xa                   	// #10
  404d0c:	ldr	x3, [sp, #296]
  404d10:	ldr	x4, [sp, #280]
  404d14:	bl	423430 <wcrtomb@plt+0x20b20>
  404d18:	subs	w10, w0, #0x0
  404d1c:	mov	w11, #0x1                   	// #1
  404d20:	cmp	w10, #0x1
  404d24:	cset	w10, ls  // ls = plast
  404d28:	eor	w10, w10, w11
  404d2c:	tbnz	w10, #0, 404d38 <wcrtomb@plt+0x2428>
  404d30:	b	404d34 <wcrtomb@plt+0x2424>
  404d34:	b	404d60 <wcrtomb@plt+0x2450>
  404d38:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404d3c:	add	x0, x0, #0xc87
  404d40:	bl	4028b0 <gettext@plt>
  404d44:	mov	w8, #0x2                   	// #2
  404d48:	str	x0, [sp, #144]
  404d4c:	mov	w0, w8
  404d50:	mov	w8, wzr
  404d54:	mov	w1, w8
  404d58:	ldr	x2, [sp, #144]
  404d5c:	bl	402330 <error@plt>
  404d60:	b	40530c <wcrtomb@plt+0x29fc>
  404d64:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404d68:	add	x8, x8, #0x4c0
  404d6c:	mov	w9, #0x1                   	// #1
  404d70:	strb	w9, [x8]
  404d74:	b	40530c <wcrtomb@plt+0x29fc>
  404d78:	mov	w8, #0x1                   	// #1
  404d7c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404d80:	add	x9, x9, #0x4a8
  404d84:	strb	w8, [x9]
  404d88:	b	40530c <wcrtomb@plt+0x29fc>
  404d8c:	mov	w8, #0x1                   	// #1
  404d90:	ldr	x9, [sp, #448]
  404d94:	strb	w8, [x9]
  404d98:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404d9c:	add	x10, x10, #0x3d0
  404da0:	str	wzr, [x10]
  404da4:	b	40530c <wcrtomb@plt+0x29fc>
  404da8:	mov	w8, #0x30a                 	// #778
  404dac:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404db0:	add	x9, x9, #0x364
  404db4:	str	w8, [x9]
  404db8:	mov	w8, #0x3                   	// #3
  404dbc:	ldr	x9, [sp, #400]
  404dc0:	str	w8, [x9]
  404dc4:	ldr	x10, [sp, #456]
  404dc8:	ldr	w8, [x10, #180]
  404dcc:	str	w8, [x10, #176]
  404dd0:	b	40530c <wcrtomb@plt+0x29fc>
  404dd4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404dd8:	add	x8, x8, #0x4c2
  404ddc:	mov	w9, #0x1                   	// #1
  404de0:	strb	w9, [x8]
  404de4:	b	40530c <wcrtomb@plt+0x29fc>
  404de8:	mov	w8, #0x1                   	// #1
  404dec:	ldr	x9, [sp, #208]
  404df0:	strb	w8, [x9]
  404df4:	b	40530c <wcrtomb@plt+0x29fc>
  404df8:	bl	40ee7c <wcrtomb@plt+0xc56c>
  404dfc:	mov	w8, #0x1                   	// #1
  404e00:	ldr	x9, [sp, #200]
  404e04:	strb	w8, [x9]
  404e08:	b	40530c <wcrtomb@plt+0x29fc>
  404e0c:	mov	w8, #0x1                   	// #1
  404e10:	ldr	x9, [sp, #192]
  404e14:	strb	w8, [x9]
  404e18:	b	40530c <wcrtomb@plt+0x29fc>
  404e1c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404e20:	add	x8, x8, #0x488
  404e24:	str	wzr, [x8]
  404e28:	b	40530c <wcrtomb@plt+0x29fc>
  404e2c:	mov	w8, #0x0                   	// #0
  404e30:	ldr	x9, [sp, #304]
  404e34:	strb	w8, [x9]
  404e38:	b	40530c <wcrtomb@plt+0x29fc>
  404e3c:	ldr	x8, [sp, #368]
  404e40:	ldr	x0, [x8]
  404e44:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404e48:	add	x1, x1, #0xc99
  404e4c:	bl	4026a0 <strcmp@plt>
  404e50:	cbnz	w0, 404e60 <wcrtomb@plt+0x2550>
  404e54:	ldr	x8, [sp, #320]
  404e58:	str	wzr, [x8]
  404e5c:	b	404ed8 <wcrtomb@plt+0x25c8>
  404e60:	ldr	x8, [sp, #368]
  404e64:	ldr	x0, [x8]
  404e68:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404e6c:	add	x1, x1, #0xdbd
  404e70:	bl	4026a0 <strcmp@plt>
  404e74:	cbnz	w0, 404e88 <wcrtomb@plt+0x2578>
  404e78:	mov	w8, #0x1                   	// #1
  404e7c:	ldr	x9, [sp, #320]
  404e80:	str	w8, [x9]
  404e84:	b	404ed8 <wcrtomb@plt+0x25c8>
  404e88:	ldr	x8, [sp, #368]
  404e8c:	ldr	x0, [x8]
  404e90:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404e94:	add	x1, x1, #0xe2f
  404e98:	bl	4026a0 <strcmp@plt>
  404e9c:	cbnz	w0, 404eb0 <wcrtomb@plt+0x25a0>
  404ea0:	mov	w8, #0x2                   	// #2
  404ea4:	ldr	x9, [sp, #320]
  404ea8:	str	w8, [x9]
  404eac:	b	404ed8 <wcrtomb@plt+0x25c8>
  404eb0:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404eb4:	add	x0, x0, #0xca0
  404eb8:	bl	4028b0 <gettext@plt>
  404ebc:	mov	w8, #0x2                   	// #2
  404ec0:	str	x0, [sp, #136]
  404ec4:	mov	w0, w8
  404ec8:	mov	w8, wzr
  404ecc:	mov	w1, w8
  404ed0:	ldr	x2, [sp, #136]
  404ed4:	bl	402330 <error@plt>
  404ed8:	b	40530c <wcrtomb@plt+0x29fc>
  404edc:	ldr	x8, [sp, #368]
  404ee0:	ldr	x9, [x8]
  404ee4:	cbz	x9, 405000 <wcrtomb@plt+0x26f0>
  404ee8:	ldr	x8, [sp, #368]
  404eec:	ldr	x0, [x8]
  404ef0:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  404ef4:	add	x1, x1, #0xf55
  404ef8:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404efc:	cbz	w0, 404f30 <wcrtomb@plt+0x2620>
  404f00:	ldr	x8, [sp, #368]
  404f04:	ldr	x0, [x8]
  404f08:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404f0c:	add	x1, x1, #0xcba
  404f10:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404f14:	cbz	w0, 404f30 <wcrtomb@plt+0x2620>
  404f18:	ldr	x8, [sp, #368]
  404f1c:	ldr	x0, [x8]
  404f20:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404f24:	add	x1, x1, #0xcbe
  404f28:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404f2c:	cbnz	w0, 404f40 <wcrtomb@plt+0x2630>
  404f30:	mov	w8, #0x1                   	// #1
  404f34:	ldr	x9, [sp, #424]
  404f38:	str	w8, [x9]
  404f3c:	b	404ffc <wcrtomb@plt+0x26ec>
  404f40:	ldr	x8, [sp, #368]
  404f44:	ldr	x0, [x8]
  404f48:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404f4c:	add	x1, x1, #0xcc4
  404f50:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404f54:	cbz	w0, 404f88 <wcrtomb@plt+0x2678>
  404f58:	ldr	x8, [sp, #368]
  404f5c:	ldr	x0, [x8]
  404f60:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404f64:	add	x1, x1, #0xcca
  404f68:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404f6c:	cbz	w0, 404f88 <wcrtomb@plt+0x2678>
  404f70:	ldr	x8, [sp, #368]
  404f74:	ldr	x0, [x8]
  404f78:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404f7c:	add	x1, x1, #0xccd
  404f80:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404f84:	cbnz	w0, 404f94 <wcrtomb@plt+0x2684>
  404f88:	ldr	x8, [sp, #424]
  404f8c:	str	wzr, [x8]
  404f90:	b	404ffc <wcrtomb@plt+0x26ec>
  404f94:	ldr	x8, [sp, #368]
  404f98:	ldr	x0, [x8]
  404f9c:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404fa0:	add	x1, x1, #0xcd2
  404fa4:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404fa8:	cbz	w0, 404fdc <wcrtomb@plt+0x26cc>
  404fac:	ldr	x8, [sp, #368]
  404fb0:	ldr	x0, [x8]
  404fb4:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404fb8:	add	x1, x1, #0xcda
  404fbc:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404fc0:	cbz	w0, 404fdc <wcrtomb@plt+0x26cc>
  404fc4:	ldr	x8, [sp, #368]
  404fc8:	ldr	x0, [x8]
  404fcc:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  404fd0:	add	x1, x1, #0xcd7
  404fd4:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  404fd8:	cbnz	w0, 404fec <wcrtomb@plt+0x26dc>
  404fdc:	mov	w8, #0x2                   	// #2
  404fe0:	ldr	x9, [sp, #424]
  404fe4:	str	w8, [x9]
  404fe8:	b	404ffc <wcrtomb@plt+0x26ec>
  404fec:	mov	w8, #0x1                   	// #1
  404ff0:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  404ff4:	add	x9, x9, #0x4c8
  404ff8:	str	w8, [x9]
  404ffc:	b	40500c <wcrtomb@plt+0x26fc>
  405000:	mov	w8, #0x2                   	// #2
  405004:	ldr	x9, [sp, #424]
  405008:	str	w8, [x9]
  40500c:	b	40530c <wcrtomb@plt+0x29fc>
  405010:	ldr	x8, [sp, #456]
  405014:	str	wzr, [x8, #144]
  405018:	ldr	x8, [sp, #456]
  40501c:	ldr	w9, [x8, #144]
  405020:	cmp	w9, #0x2
  405024:	b.ge	4050ec <wcrtomb@plt+0x27dc>  // b.tcont
  405028:	ldr	x8, [sp, #456]
  40502c:	ldrsw	x9, [x8, #144]
  405030:	mov	x10, #0x8                   	// #8
  405034:	mul	x9, x10, x9
  405038:	ldr	x10, [sp, #352]
  40503c:	add	x9, x10, x9
  405040:	ldr	x9, [x9]
  405044:	cbnz	x9, 405068 <wcrtomb@plt+0x2758>
  405048:	bl	41cda4 <wcrtomb@plt+0x1a494>
  40504c:	ldr	x8, [sp, #456]
  405050:	ldrsw	x9, [x8, #144]
  405054:	mov	x10, #0x8                   	// #8
  405058:	mul	x9, x10, x9
  40505c:	ldr	x10, [sp, #352]
  405060:	add	x9, x10, x9
  405064:	str	x0, [x9]
  405068:	ldr	x8, [sp, #456]
  40506c:	ldrsw	x9, [x8, #144]
  405070:	mov	x10, #0x8                   	// #8
  405074:	mul	x9, x10, x9
  405078:	ldr	x10, [sp, #352]
  40507c:	add	x9, x10, x9
  405080:	ldr	x0, [x9]
  405084:	ldr	x9, [sp, #368]
  405088:	ldr	x1, [x9]
  40508c:	ldr	w11, [x8, #188]
  405090:	mov	w12, #0x20000000            	// #536870912
  405094:	mov	w13, wzr
  405098:	cmp	w11, #0x106
  40509c:	csel	w11, w12, w13, eq  // eq = none
  4050a0:	ldr	w12, [x8, #144]
  4050a4:	cmp	w12, #0x0
  4050a8:	cset	w12, ne  // ne = any
  4050ac:	and	w12, w12, #0x1
  4050b0:	str	x0, [sp, #128]
  4050b4:	mov	w0, w12
  4050b8:	str	x1, [sp, #120]
  4050bc:	str	w11, [sp, #116]
  4050c0:	bl	4061a8 <wcrtomb@plt+0x3898>
  4050c4:	ldr	w11, [sp, #116]
  4050c8:	orr	w2, w11, w0
  4050cc:	ldr	x0, [sp, #128]
  4050d0:	ldr	x1, [sp, #120]
  4050d4:	bl	41d448 <wcrtomb@plt+0x1ab38>
  4050d8:	ldr	x8, [sp, #456]
  4050dc:	ldr	w9, [x8, #144]
  4050e0:	add	w9, w9, #0x1
  4050e4:	str	w9, [x8, #144]
  4050e8:	b	405018 <wcrtomb@plt+0x2708>
  4050ec:	b	40530c <wcrtomb@plt+0x29fc>
  4050f0:	ldr	x8, [sp, #456]
  4050f4:	str	wzr, [x8, #140]
  4050f8:	ldr	x8, [sp, #456]
  4050fc:	ldr	w9, [x8, #140]
  405100:	cmp	w9, #0x2
  405104:	b.ge	4051e0 <wcrtomb@plt+0x28d0>  // b.tcont
  405108:	ldr	x8, [sp, #456]
  40510c:	ldrsw	x9, [x8, #140]
  405110:	mov	x10, #0x8                   	// #8
  405114:	mul	x9, x10, x9
  405118:	ldr	x10, [sp, #352]
  40511c:	add	x9, x10, x9
  405120:	ldr	x9, [x9]
  405124:	cbnz	x9, 405148 <wcrtomb@plt+0x2838>
  405128:	bl	41cda4 <wcrtomb@plt+0x1a494>
  40512c:	ldr	x8, [sp, #456]
  405130:	ldrsw	x9, [x8, #140]
  405134:	mov	x10, #0x8                   	// #8
  405138:	mul	x9, x10, x9
  40513c:	ldr	x10, [sp, #352]
  405140:	add	x9, x10, x9
  405144:	str	x0, [x9]
  405148:	ldr	x8, [sp, #456]
  40514c:	ldrsw	x9, [x8, #140]
  405150:	mov	x10, #0x8                   	// #8
  405154:	mul	x9, x10, x9
  405158:	ldr	x10, [sp, #352]
  40515c:	add	x9, x10, x9
  405160:	ldr	x1, [x9]
  405164:	ldr	x9, [sp, #368]
  405168:	ldr	x2, [x9]
  40516c:	ldr	w11, [x8, #140]
  405170:	cmp	w11, #0x0
  405174:	cset	w11, ne  // ne = any
  405178:	and	w0, w11, #0x1
  40517c:	str	x1, [sp, #104]
  405180:	str	x2, [sp, #96]
  405184:	bl	4061a8 <wcrtomb@plt+0x3898>
  405188:	adrp	x8, 41d000 <wcrtomb@plt+0x1a6f0>
  40518c:	add	x8, x8, #0x448
  405190:	str	w0, [sp, #92]
  405194:	mov	x0, x8
  405198:	ldr	x1, [sp, #104]
  40519c:	ldr	x2, [sp, #96]
  4051a0:	ldr	w3, [sp, #92]
  4051a4:	mov	w4, #0xa                   	// #10
  4051a8:	bl	41db5c <wcrtomb@plt+0x1b24c>
  4051ac:	cbz	w0, 4051cc <wcrtomb@plt+0x28bc>
  4051b0:	bl	402870 <__errno_location@plt>
  4051b4:	ldr	w1, [x0]
  4051b8:	ldr	x8, [sp, #368]
  4051bc:	ldr	x3, [x8]
  4051c0:	mov	w0, #0x2                   	// #2
  4051c4:	ldr	x2, [sp, #344]
  4051c8:	bl	402330 <error@plt>
  4051cc:	ldr	x8, [sp, #456]
  4051d0:	ldr	w9, [x8, #140]
  4051d4:	add	w9, w9, #0x1
  4051d8:	str	w9, [x8, #140]
  4051dc:	b	4050f8 <wcrtomb@plt+0x27e8>
  4051e0:	b	40530c <wcrtomb@plt+0x29fc>
  4051e4:	ldr	x8, [sp, #368]
  4051e8:	ldr	x0, [x8]
  4051ec:	bl	41cb9c <wcrtomb@plt+0x1a28c>
  4051f0:	ldr	x8, [sp, #456]
  4051f4:	str	wzr, [x8, #136]
  4051f8:	ldr	x8, [sp, #456]
  4051fc:	ldr	w9, [x8, #136]
  405200:	cmp	w9, #0x2
  405204:	b.ge	4052b8 <wcrtomb@plt+0x29a8>  // b.tcont
  405208:	ldr	x8, [sp, #456]
  40520c:	ldrsw	x9, [x8, #136]
  405210:	mov	x10, #0x8                   	// #8
  405214:	mul	x9, x10, x9
  405218:	ldr	x10, [sp, #360]
  40521c:	add	x9, x10, x9
  405220:	ldr	x9, [x9]
  405224:	cbnz	x9, 405248 <wcrtomb@plt+0x2938>
  405228:	bl	41cda4 <wcrtomb@plt+0x1a494>
  40522c:	ldr	x8, [sp, #456]
  405230:	ldrsw	x9, [x8, #136]
  405234:	mov	x10, #0x8                   	// #8
  405238:	mul	x9, x10, x9
  40523c:	ldr	x10, [sp, #360]
  405240:	add	x9, x10, x9
  405244:	str	x0, [x9]
  405248:	ldr	x8, [sp, #456]
  40524c:	ldrsw	x9, [x8, #136]
  405250:	mov	x10, #0x8                   	// #8
  405254:	mul	x9, x10, x9
  405258:	ldr	x10, [sp, #360]
  40525c:	add	x9, x10, x9
  405260:	ldr	x0, [x9]
  405264:	ldr	x9, [sp, #368]
  405268:	ldr	x1, [x9]
  40526c:	ldr	w11, [x8, #136]
  405270:	cmp	w11, #0x0
  405274:	cset	w11, ne  // ne = any
  405278:	and	w11, w11, #0x1
  40527c:	str	x0, [sp, #80]
  405280:	mov	w0, w11
  405284:	str	x1, [sp, #72]
  405288:	bl	4061a8 <wcrtomb@plt+0x3898>
  40528c:	ldr	x8, [sp, #80]
  405290:	str	w0, [sp, #68]
  405294:	mov	x0, x8
  405298:	ldr	x1, [sp, #72]
  40529c:	ldr	w2, [sp, #68]
  4052a0:	bl	41d448 <wcrtomb@plt+0x1ab38>
  4052a4:	ldr	x8, [sp, #456]
  4052a8:	ldr	w9, [x8, #136]
  4052ac:	add	w9, w9, #0x1
  4052b0:	str	w9, [x8, #136]
  4052b4:	b	4051f8 <wcrtomb@plt+0x28e8>
  4052b8:	b	40530c <wcrtomb@plt+0x29fc>
  4052bc:	ldr	x8, [sp, #368]
  4052c0:	ldr	x9, [x8]
  4052c4:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4052c8:	add	x10, x10, #0x368
  4052cc:	str	x9, [x10]
  4052d0:	b	40530c <wcrtomb@plt+0x29fc>
  4052d4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4052d8:	add	x8, x8, #0x4f0
  4052dc:	mov	w9, #0x1                   	// #1
  4052e0:	strb	w9, [x8]
  4052e4:	b	40530c <wcrtomb@plt+0x29fc>
  4052e8:	ldr	x8, [sp, #368]
  4052ec:	ldr	x9, [x8]
  4052f0:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4052f4:	add	x10, x10, #0x4f8
  4052f8:	str	x9, [x10]
  4052fc:	b	40530c <wcrtomb@plt+0x29fc>
  405300:	b	40530c <wcrtomb@plt+0x29fc>
  405304:	mov	w0, #0x2                   	// #2
  405308:	bl	40407c <wcrtomb@plt+0x176c>
  40530c:	b	404710 <wcrtomb@plt+0x1e00>
  405310:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405314:	add	x8, x8, #0x4b5
  405318:	ldrb	w9, [x8]
  40531c:	tbnz	w9, #0, 405324 <wcrtomb@plt+0x2a14>
  405320:	b	405380 <wcrtomb@plt+0x2a70>
  405324:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405328:	add	x8, x8, #0x458
  40532c:	ldr	x0, [x8]
  405330:	str	x0, [sp, #56]
  405334:	bl	41df58 <wcrtomb@plt+0x1b648>
  405338:	ldr	x8, [sp, #56]
  40533c:	str	x0, [sp, #48]
  405340:	mov	x0, x8
  405344:	ldr	x1, [sp, #48]
  405348:	adrp	x2, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  40534c:	add	x2, x2, #0xcde
  405350:	adrp	x3, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  405354:	add	x3, x3, #0xce7
  405358:	mov	x9, xzr
  40535c:	mov	x4, x9
  405360:	bl	422e8c <wcrtomb@plt+0x2057c>
  405364:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  405368:	add	x0, x0, #0xceb
  40536c:	bl	4028b0 <gettext@plt>
  405370:	bl	402650 <puts@plt>
  405374:	ldr	x8, [sp, #456]
  405378:	str	wzr, [x8, #252]
  40537c:	b	405bcc <wcrtomb@plt+0x32bc>
  405380:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405384:	add	x8, x8, #0x4c8
  405388:	ldr	w9, [x8]
  40538c:	cbz	w9, 40539c <wcrtomb@plt+0x2a8c>
  405390:	mov	w8, wzr
  405394:	mov	w0, w8
  405398:	bl	40407c <wcrtomb@plt+0x176c>
  40539c:	ldr	x8, [sp, #456]
  4053a0:	ldr	x9, [x8, #232]
  4053a4:	cbz	x9, 405404 <wcrtomb@plt+0x2af4>
  4053a8:	ldr	x8, [sp, #456]
  4053ac:	ldr	x9, [x8, #224]
  4053b0:	cbnz	x9, 4053f0 <wcrtomb@plt+0x2ae0>
  4053b4:	ldr	x8, [sp, #208]
  4053b8:	ldrb	w9, [x8]
  4053bc:	mov	w10, #0x1                   	// #1
  4053c0:	and	w9, w9, #0x1
  4053c4:	eor	w9, w9, #0x1
  4053c8:	cmp	w9, #0x0
  4053cc:	cset	w9, ne  // ne = any
  4053d0:	and	w9, w9, w10
  4053d4:	strb	w9, [x8]
  4053d8:	mov	w9, #0x0                   	// #0
  4053dc:	ldr	x11, [sp, #200]
  4053e0:	strb	w9, [x11]
  4053e4:	ldr	x12, [sp, #192]
  4053e8:	strb	w9, [x12]
  4053ec:	b	405400 <wcrtomb@plt+0x2af0>
  4053f0:	ldr	x8, [sp, #456]
  4053f4:	ldr	x9, [x8, #224]
  4053f8:	subs	x9, x9, #0x1
  4053fc:	str	x9, [x8, #224]
  405400:	b	4054b4 <wcrtomb@plt+0x2ba4>
  405404:	ldr	x8, [sp, #224]
  405408:	ldr	w9, [x8]
  40540c:	ldr	x10, [sp, #456]
  405410:	ldr	w11, [x10, #248]
  405414:	cmp	w9, w11
  405418:	b.ge	4054ac <wcrtomb@plt+0x2b9c>  // b.tcont
  40541c:	ldr	x8, [sp, #456]
  405420:	ldr	x9, [x8, #240]
  405424:	ldr	x10, [sp, #224]
  405428:	ldrsw	x11, [x10]
  40542c:	mov	x12, #0x8                   	// #8
  405430:	mul	x11, x12, x11
  405434:	add	x9, x9, x11
  405438:	ldr	x0, [x9]
  40543c:	str	x12, [sp, #40]
  405440:	bl	4022f0 <strlen@plt>
  405444:	ldr	x8, [sp, #456]
  405448:	str	x0, [x8, #224]
  40544c:	ldr	x9, [x8, #240]
  405450:	ldr	x10, [sp, #224]
  405454:	ldrsw	x11, [x10]
  405458:	mov	w13, w11
  40545c:	add	w13, w13, #0x1
  405460:	str	w13, [x10]
  405464:	ldr	x12, [sp, #40]
  405468:	mul	x11, x12, x11
  40546c:	add	x9, x9, x11
  405470:	ldr	x0, [x9]
  405474:	ldr	x9, [x8, #224]
  405478:	add	x1, x9, #0x1
  40547c:	bl	42331c <wcrtomb@plt+0x20a0c>
  405480:	ldr	x8, [sp, #456]
  405484:	str	x0, [x8, #232]
  405488:	ldr	x0, [x8, #232]
  40548c:	ldr	x1, [x8, #224]
  405490:	ldr	x2, [sp, #280]
  405494:	bl	4060bc <wcrtomb@plt+0x37ac>
  405498:	ldr	x8, [sp, #216]
  40549c:	ldr	x9, [x8]
  4054a0:	add	x9, x9, #0x1
  4054a4:	str	x9, [x8]
  4054a8:	b	4054b4 <wcrtomb@plt+0x2ba4>
  4054ac:	mov	w0, #0x2                   	// #2
  4054b0:	bl	40407c <wcrtomb@plt+0x176c>
  4054b4:	mov	w8, #0x0                   	// #0
  4054b8:	sturb	w8, [x29, #-129]
  4054bc:	ldr	x9, [sp, #448]
  4054c0:	ldrb	w8, [x9]
  4054c4:	tbnz	w8, #0, 405570 <wcrtomb@plt+0x2c60>
  4054c8:	mov	w0, #0x1                   	// #1
  4054cc:	add	x1, sp, #0x288
  4054d0:	bl	440bb8 <_obstack_memory_used@@Base+0x19298>
  4054d4:	cbnz	w0, 405570 <wcrtomb@plt+0x2c60>
  4054d8:	ldr	x8, [sp, #456]
  4054dc:	ldr	w9, [x8, #16]
  4054e0:	and	w9, w9, #0xf000
  4054e4:	cmp	w9, #0x8, lsl #12
  4054e8:	b.ne	405504 <wcrtomb@plt+0x2bf4>  // b.any
  4054ec:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4054f0:	add	x0, x0, #0x508
  4054f4:	add	x1, sp, #0x288
  4054f8:	mov	x2, #0x80                  	// #128
  4054fc:	bl	402290 <memcpy@plt>
  405500:	b	405570 <wcrtomb@plt+0x2c60>
  405504:	ldr	x8, [sp, #456]
  405508:	ldr	w9, [x8, #16]
  40550c:	and	w9, w9, #0xf000
  405510:	cmp	w9, #0x2, lsl #12
  405514:	b.ne	405570 <wcrtomb@plt+0x2c60>  // b.any
  405518:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  40551c:	add	x0, x0, #0xd48
  405520:	add	x1, sp, #0x208
  405524:	bl	440ba8 <_obstack_memory_used@@Base+0x19288>
  405528:	cbnz	w0, 405568 <wcrtomb@plt+0x2c58>
  40552c:	ldr	x8, [sp, #456]
  405530:	ldr	x9, [x8, #8]
  405534:	ldr	x10, [sp, #528]
  405538:	cmp	x9, x10
  40553c:	b.ne	405568 <wcrtomb@plt+0x2c58>  // b.any
  405540:	ldr	x8, [sp, #456]
  405544:	ldr	x9, [x8]
  405548:	ldr	x10, [sp, #520]
  40554c:	cmp	x9, x10
  405550:	b.ne	405568 <wcrtomb@plt+0x2c58>  // b.any
  405554:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405558:	add	x8, x8, #0x588
  40555c:	mov	w9, #0x1                   	// #1
  405560:	strb	w9, [x8]
  405564:	b	405570 <wcrtomb@plt+0x2c60>
  405568:	mov	w8, #0x1                   	// #1
  40556c:	sturb	w8, [x29, #-129]
  405570:	ldr	x8, [sp, #448]
  405574:	ldrb	w9, [x8]
  405578:	tbnz	w9, #0, 405580 <wcrtomb@plt+0x2c70>
  40557c:	b	405588 <wcrtomb@plt+0x2c78>
  405580:	ldr	x8, [sp, #440]
  405584:	str	wzr, [x8]
  405588:	ldr	x8, [sp, #448]
  40558c:	ldrb	w9, [x8]
  405590:	and	w9, w9, #0x1
  405594:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405598:	add	x10, x10, #0x588
  40559c:	ldrb	w11, [x10]
  4055a0:	and	w11, w11, #0x1
  4055a4:	orr	w9, w9, w11
  4055a8:	cbnz	w9, 4055b8 <wcrtomb@plt+0x2ca8>
  4055ac:	ldr	x8, [sp, #440]
  4055b0:	ldr	w9, [x8]
  4055b4:	cbz	w9, 4055d4 <wcrtomb@plt+0x2cc4>
  4055b8:	mov	w8, #0x0                   	// #0
  4055bc:	ldr	x9, [sp, #432]
  4055c0:	strb	w8, [x9]
  4055c4:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4055c8:	add	x10, x10, #0x589
  4055cc:	mov	w8, #0x1                   	// #1
  4055d0:	strb	w8, [x10]
  4055d4:	ldr	x8, [sp, #432]
  4055d8:	ldrb	w9, [x8]
  4055dc:	mov	w10, #0x1                   	// #1
  4055e0:	and	w9, w9, #0x1
  4055e4:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4055e8:	add	x11, x11, #0x589
  4055ec:	ldrb	w12, [x11]
  4055f0:	and	w12, w12, #0x1
  4055f4:	orr	w9, w9, w12
  4055f8:	cmp	w9, #0x0
  4055fc:	cset	w9, ne  // ne = any
  405600:	and	w9, w9, w10
  405604:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405608:	add	x11, x11, #0x58a
  40560c:	strb	w9, [x11]
  405610:	ldr	x11, [sp, #288]
  405614:	ldr	x13, [x11]
  405618:	cmp	x13, #0x0
  40561c:	cset	w9, ge  // ge = tcont
  405620:	tbnz	w9, #0, 405634 <wcrtomb@plt+0x2d24>
  405624:	ldr	x8, [sp, #456]
  405628:	ldr	x9, [x8, #160]
  40562c:	ldr	x10, [sp, #288]
  405630:	str	x9, [x10]
  405634:	ldr	x8, [sp, #328]
  405638:	ldr	x9, [x8]
  40563c:	cmp	x9, #0x0
  405640:	cset	w10, ge  // ge = tcont
  405644:	tbnz	w10, #0, 405658 <wcrtomb@plt+0x2d48>
  405648:	ldr	x8, [sp, #456]
  40564c:	ldr	x9, [x8, #160]
  405650:	ldr	x10, [sp, #328]
  405654:	str	x9, [x10]
  405658:	ldr	x8, [sp, #296]
  40565c:	ldr	x9, [x8]
  405660:	cbz	x9, 405698 <wcrtomb@plt+0x2d88>
  405664:	ldr	x8, [sp, #456]
  405668:	ldr	x9, [x8, #224]
  40566c:	cbnz	x9, 4056b8 <wcrtomb@plt+0x2da8>
  405670:	ldr	x8, [sp, #208]
  405674:	ldrb	w9, [x8]
  405678:	tbnz	w9, #0, 405680 <wcrtomb@plt+0x2d70>
  40567c:	b	4056b8 <wcrtomb@plt+0x2da8>
  405680:	ldr	x8, [sp, #192]
  405684:	ldrb	w9, [x8]
  405688:	tbnz	w9, #0, 4056b8 <wcrtomb@plt+0x2da8>
  40568c:	ldr	x8, [sp, #200]
  405690:	ldrb	w9, [x8]
  405694:	tbnz	w9, #0, 4056b8 <wcrtomb@plt+0x2da8>
  405698:	ldr	x8, [sp, #440]
  40569c:	ldr	w9, [x8]
  4056a0:	cmp	w9, #0x2
  4056a4:	b.eq	4056b8 <wcrtomb@plt+0x2da8>  // b.none
  4056a8:	mov	w8, #0x1                   	// #1
  4056ac:	ldr	x9, [sp, #456]
  4056b0:	str	w8, [x9, #252]
  4056b4:	b	405bcc <wcrtomb@plt+0x32bc>
  4056b8:	ldr	x8, [sp, #424]
  4056bc:	ldr	w9, [x8]
  4056c0:	cmp	w9, #0x2
  4056c4:	b.ne	405710 <wcrtomb@plt+0x2e00>  // b.any
  4056c8:	ldurb	w8, [x29, #-129]
  4056cc:	mov	w9, #0x0                   	// #0
  4056d0:	str	w9, [sp, #36]
  4056d4:	tbnz	w8, #0, 4056dc <wcrtomb@plt+0x2dcc>
  4056d8:	b	405700 <wcrtomb@plt+0x2df0>
  4056dc:	bl	4239e0 <wcrtomb@plt+0x210d0>
  4056e0:	mov	w8, #0x0                   	// #0
  4056e4:	str	w8, [sp, #36]
  4056e8:	cbz	w0, 405700 <wcrtomb@plt+0x2df0>
  4056ec:	mov	w0, #0x1                   	// #1
  4056f0:	bl	402780 <isatty@plt>
  4056f4:	cmp	w0, #0x0
  4056f8:	cset	w8, ne  // ne = any
  4056fc:	str	w8, [sp, #36]
  405700:	ldr	w8, [sp, #36]
  405704:	and	w8, w8, #0x1
  405708:	ldr	x9, [sp, #424]
  40570c:	str	w8, [x9]
  405710:	bl	423a3c <wcrtomb@plt+0x2112c>
  405714:	ldr	x8, [sp, #424]
  405718:	ldr	w9, [x8]
  40571c:	cbz	w9, 405764 <wcrtomb@plt+0x2e54>
  405720:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  405724:	add	x0, x0, #0xd52
  405728:	bl	402890 <getenv@plt>
  40572c:	str	x0, [sp, #512]
  405730:	ldr	x8, [sp, #512]
  405734:	cbz	x8, 405760 <wcrtomb@plt+0x2e50>
  405738:	ldr	x8, [sp, #512]
  40573c:	ldrb	w9, [x8]
  405740:	cbz	w9, 405760 <wcrtomb@plt+0x2e50>
  405744:	ldr	x8, [sp, #512]
  405748:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40574c:	add	x9, x9, #0x370
  405750:	str	x8, [x9]
  405754:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405758:	add	x9, x9, #0x378
  40575c:	str	x8, [x9]
  405760:	bl	4061d8 <wcrtomb@plt+0x38c8>
  405764:	bl	4063ac <wcrtomb@plt+0x3a9c>
  405768:	ldr	x8, [sp, #456]
  40576c:	ldr	w9, [x8, #204]
  405770:	cmp	w9, #0x0
  405774:	cset	w9, ge  // ge = tcont
  405778:	tbnz	w9, #0, 405784 <wcrtomb@plt+0x2e74>
  40577c:	ldr	x8, [sp, #456]
  405780:	str	wzr, [x8, #204]
  405784:	ldr	x8, [sp, #456]
  405788:	ldr	w9, [x8, #204]
  40578c:	cmp	w9, #0x2
  405790:	b.ne	405814 <wcrtomb@plt+0x2f04>  // b.any
  405794:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  405798:	add	x8, x8, #0x8c8
  40579c:	ldrb	w9, [x8]
  4057a0:	tbnz	w9, #0, 4057c4 <wcrtomb@plt+0x2eb4>
  4057a4:	ldr	x8, [sp, #216]
  4057a8:	ldr	x9, [x8]
  4057ac:	cmp	x9, #0x1
  4057b0:	b.ne	405814 <wcrtomb@plt+0x2f04>  // b.any
  4057b4:	ldr	x8, [sp, #200]
  4057b8:	ldrb	w9, [x8]
  4057bc:	tbnz	w9, #0, 4057fc <wcrtomb@plt+0x2eec>
  4057c0:	b	405814 <wcrtomb@plt+0x2f04>
  4057c4:	ldr	x8, [sp, #456]
  4057c8:	ldr	x0, [x8, #232]
  4057cc:	ldr	x1, [x8, #224]
  4057d0:	bl	406498 <wcrtomb@plt+0x3b88>
  4057d4:	tbnz	w0, #0, 4057fc <wcrtomb@plt+0x2eec>
  4057d8:	ldr	x8, [sp, #416]
  4057dc:	ldrb	w9, [x8]
  4057e0:	tbnz	w9, #0, 4057e8 <wcrtomb@plt+0x2ed8>
  4057e4:	b	405814 <wcrtomb@plt+0x2f04>
  4057e8:	ldr	x8, [sp, #456]
  4057ec:	ldr	x0, [x8, #232]
  4057f0:	ldr	x1, [x8, #224]
  4057f4:	bl	40653c <wcrtomb@plt+0x3c2c>
  4057f8:	tbnz	w0, #0, 405814 <wcrtomb@plt+0x2f04>
  4057fc:	sub	x0, x29, #0x20
  405800:	sub	x1, x29, #0x28
  405804:	bl	404268 <wcrtomb@plt+0x1958>
  405808:	ldr	x8, [sp, #456]
  40580c:	str	wzr, [x8, #204]
  405810:	b	405860 <wcrtomb@plt+0x2f50>
  405814:	ldr	x8, [sp, #456]
  405818:	ldr	w9, [x8, #204]
  40581c:	cbz	w9, 405830 <wcrtomb@plt+0x2f20>
  405820:	ldr	x8, [sp, #456]
  405824:	ldr	w9, [x8, #204]
  405828:	cmp	w9, #0x1
  40582c:	b.ne	405860 <wcrtomb@plt+0x2f50>  // b.any
  405830:	ldr	x8, [sp, #216]
  405834:	ldr	x9, [x8]
  405838:	mov	x10, #0x1                   	// #1
  40583c:	cmp	x10, x9
  405840:	b.cs	405860 <wcrtomb@plt+0x2f50>  // b.hs, b.nlast
  405844:	ldr	x8, [sp, #456]
  405848:	ldr	w0, [x8, #204]
  40584c:	ldr	x1, [x8, #232]
  405850:	sub	x2, x29, #0x28
  405854:	bl	4065e0 <wcrtomb@plt+0x3cd0>
  405858:	ldr	x8, [sp, #456]
  40585c:	str	w0, [x8, #204]
  405860:	ldr	x8, [sp, #456]
  405864:	ldrsw	x9, [x8, #204]
  405868:	mov	x10, #0x20                  	// #32
  40586c:	mul	x9, x10, x9
  405870:	ldr	x11, [sp, #408]
  405874:	add	x9, x11, x9
  405878:	ldr	x9, [x9, #24]
  40587c:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405880:	add	x12, x12, #0x590
  405884:	str	x9, [x12]
  405888:	ldrsw	x9, [x8, #204]
  40588c:	mul	x9, x10, x9
  405890:	add	x9, x11, x9
  405894:	ldr	x9, [x9, #16]
  405898:	ldr	x0, [x8, #232]
  40589c:	ldr	x1, [x8, #224]
  4058a0:	ldrsw	x13, [x8, #204]
  4058a4:	mul	x10, x10, x13
  4058a8:	add	x10, x11, x10
  4058ac:	ldrsw	x2, [x10, #12]
  4058b0:	str	x12, [sp, #24]
  4058b4:	blr	x9
  4058b8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4058bc:	add	x8, x8, #0x598
  4058c0:	str	x0, [x8]
  4058c4:	add	x9, sp, #0x1fd
  4058c8:	mov	w14, #0x0                   	// #0
  4058cc:	strb	w14, [sp, #509]
  4058d0:	ldr	x10, [sp, #304]
  4058d4:	ldrb	w15, [x10]
  4058d8:	strb	w15, [x9, #1]
  4058dc:	strb	w14, [x9, #2]
  4058e0:	ldr	x11, [sp, #24]
  4058e4:	ldr	x12, [x11]
  4058e8:	ldr	x0, [x8]
  4058ec:	add	x1, x9, #0x1
  4058f0:	mov	x2, #0x1                   	// #1
  4058f4:	add	x3, sp, #0x1f0
  4058f8:	mov	x8, xzr
  4058fc:	mov	x4, x8
  405900:	blr	x12
  405904:	cmp	x0, #0x0
  405908:	cset	w14, eq  // eq = none
  40590c:	mov	w15, #0x1                   	// #1
  405910:	and	w14, w14, #0x1
  405914:	ldr	x8, [sp, #208]
  405918:	ldrb	w16, [x8]
  40591c:	and	w16, w16, #0x1
  405920:	cmp	w14, w16
  405924:	cset	w14, eq  // eq = none
  405928:	and	w14, w14, w15
  40592c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405930:	add	x9, x9, #0x5a0
  405934:	strb	w14, [x9]
  405938:	ldr	x9, [sp, #456]
  40593c:	ldr	w14, [x9, #248]
  405940:	ldr	x10, [sp, #224]
  405944:	ldr	w15, [x10]
  405948:	subs	w14, w14, w15
  40594c:	str	w14, [sp, #492]
  405950:	ldr	w14, [x9, #148]
  405954:	cbnz	w14, 405988 <wcrtomb@plt+0x3078>
  405958:	ldr	w8, [sp, #492]
  40595c:	cmp	w8, #0x1
  405960:	b.gt	405988 <wcrtomb@plt+0x3078>
  405964:	ldr	x8, [sp, #400]
  405968:	ldr	w9, [x8]
  40596c:	cmp	w9, #0x3
  405970:	cset	w9, eq  // eq = none
  405974:	and	w9, w9, #0x1
  405978:	mov	w10, wzr
  40597c:	subs	w9, w10, w9
  405980:	str	w9, [sp, #20]
  405984:	b	4059a4 <wcrtomb@plt+0x3094>
  405988:	ldr	x8, [sp, #456]
  40598c:	ldr	w9, [x8, #148]
  405990:	mov	w10, wzr
  405994:	cmp	w10, w9
  405998:	cset	w9, le
  40599c:	and	w9, w9, #0x1
  4059a0:	str	w9, [sp, #20]
  4059a4:	ldr	w8, [sp, #20]
  4059a8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4059ac:	add	x9, x9, #0x5a4
  4059b0:	str	w8, [x9]
  4059b4:	ldr	x9, [sp, #392]
  4059b8:	ldrb	w8, [x9]
  4059bc:	tbnz	w8, #0, 4059c4 <wcrtomb@plt+0x30b4>
  4059c0:	b	4059d4 <wcrtomb@plt+0x30c4>
  4059c4:	mov	w0, #0x1                   	// #1
  4059c8:	mov	w8, wzr
  4059cc:	mov	w1, w8
  4059d0:	bl	4233f4 <wcrtomb@plt+0x20ae4>
  4059d4:	mov	w0, #0x1e                  	// #30
  4059d8:	bl	402790 <sysconf@plt>
  4059dc:	str	x0, [sp, #480]
  4059e0:	ldr	x8, [sp, #480]
  4059e4:	mov	x9, xzr
  4059e8:	cmp	x9, x8
  4059ec:	cset	w10, ge  // ge = tcont
  4059f0:	tbnz	w10, #0, 405a08 <wcrtomb@plt+0x30f8>
  4059f4:	ldr	x8, [sp, #480]
  4059f8:	mov	x9, #0xfffffffffffffffb    	// #-5
  4059fc:	movk	x9, #0x7fff, lsl #48
  405a00:	cmp	x8, x9
  405a04:	b.ls	405a0c <wcrtomb@plt+0x30fc>  // b.plast
  405a08:	bl	402610 <abort@plt>
  405a0c:	ldr	x8, [sp, #480]
  405a10:	ldr	x9, [sp, #384]
  405a14:	str	x8, [x9]
  405a18:	ldr	x8, [x9]
  405a1c:	mov	x10, #0x18000               	// #98304
  405a20:	udiv	x11, x10, x8
  405a24:	mul	x8, x11, x8
  405a28:	subs	x8, x10, x8
  405a2c:	cbnz	x8, 405a3c <wcrtomb@plt+0x312c>
  405a30:	mov	x8, #0x18000               	// #98304
  405a34:	str	x8, [sp, #8]
  405a38:	b	405a64 <wcrtomb@plt+0x3154>
  405a3c:	ldr	x8, [sp, #384]
  405a40:	ldr	x9, [x8]
  405a44:	ldr	x10, [x8]
  405a48:	mov	x11, #0x18000               	// #98304
  405a4c:	udiv	x12, x11, x10
  405a50:	mul	x10, x12, x10
  405a54:	subs	x10, x11, x10
  405a58:	subs	x9, x9, x10
  405a5c:	add	x9, x9, #0x18, lsl #12
  405a60:	str	x9, [sp, #8]
  405a64:	ldr	x8, [sp, #8]
  405a68:	ldr	x9, [sp, #384]
  405a6c:	ldr	x10, [x9]
  405a70:	add	x8, x8, x10
  405a74:	add	x8, x8, #0x8
  405a78:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405a7c:	add	x10, x10, #0x5b0
  405a80:	str	x8, [x10]
  405a84:	ldr	x0, [x10]
  405a88:	bl	423058 <wcrtomb@plt+0x20748>
  405a8c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405a90:	add	x8, x8, #0x5b8
  405a94:	str	x0, [x8]
  405a98:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405a9c:	add	x8, x8, #0x364
  405aa0:	ldr	w11, [x8]
  405aa4:	and	w11, w11, #0x2
  405aa8:	cbz	w11, 405ac4 <wcrtomb@plt+0x31b4>
  405aac:	ldr	x8, [sp, #376]
  405ab0:	ldr	w9, [x8]
  405ab4:	cbnz	w9, 405ac4 <wcrtomb@plt+0x31b4>
  405ab8:	mov	w8, #0x1                   	// #1
  405abc:	ldr	x9, [sp, #376]
  405ac0:	str	w8, [x9]
  405ac4:	ldr	w8, [sp, #492]
  405ac8:	mov	w9, wzr
  405acc:	cmp	w9, w8
  405ad0:	cset	w8, ge  // ge = tcont
  405ad4:	tbnz	w8, #0, 405afc <wcrtomb@plt+0x31ec>
  405ad8:	ldr	x8, [sp, #456]
  405adc:	ldr	x9, [x8, #240]
  405ae0:	ldr	x10, [sp, #224]
  405ae4:	ldrsw	x11, [x10]
  405ae8:	mov	x12, #0x8                   	// #8
  405aec:	mul	x11, x12, x11
  405af0:	add	x9, x9, x11
  405af4:	str	x9, [sp, #472]
  405af8:	b	405b4c <wcrtomb@plt+0x323c>
  405afc:	ldr	x8, [sp, #400]
  405b00:	ldr	w9, [x8]
  405b04:	cmp	w9, #0x3
  405b08:	b.ne	405b40 <wcrtomb@plt+0x3230>  // b.any
  405b0c:	ldr	x8, [sp, #456]
  405b10:	ldr	w9, [x8, #184]
  405b14:	ldr	w10, [x8, #176]
  405b18:	cmp	w9, w10
  405b1c:	b.ge	405b40 <wcrtomb@plt+0x3230>  // b.tcont
  405b20:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  405b24:	add	x8, x8, #0x520
  405b28:	str	x8, [sp, #472]
  405b2c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405b30:	add	x8, x8, #0x5c0
  405b34:	mov	w9, #0x1                   	// #1
  405b38:	strb	w9, [x8]
  405b3c:	b	405b4c <wcrtomb@plt+0x323c>
  405b40:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  405b44:	add	x8, x8, #0x530
  405b48:	str	x8, [sp, #472]
  405b4c:	mov	w8, #0x1                   	// #1
  405b50:	strb	w8, [sp, #471]
  405b54:	ldr	x8, [sp, #472]
  405b58:	add	x9, x8, #0x8
  405b5c:	str	x9, [sp, #472]
  405b60:	ldr	x0, [x8]
  405b64:	bl	406820 <wcrtomb@plt+0x3f10>
  405b68:	mov	w10, #0x1                   	// #1
  405b6c:	and	w11, w0, #0x1
  405b70:	ldrb	w12, [sp, #471]
  405b74:	and	w12, w12, #0x1
  405b78:	tst	w12, w11
  405b7c:	cset	w11, ne  // ne = any
  405b80:	and	w10, w11, w10
  405b84:	strb	w10, [sp, #471]
  405b88:	ldr	x8, [sp, #472]
  405b8c:	ldr	x8, [x8]
  405b90:	cbnz	x8, 405b54 <wcrtomb@plt+0x3244>
  405b94:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405b98:	add	x8, x8, #0x5c1
  405b9c:	ldrb	w9, [x8]
  405ba0:	tbnz	w9, #0, 405ba8 <wcrtomb@plt+0x3298>
  405ba4:	b	405bb4 <wcrtomb@plt+0x32a4>
  405ba8:	mov	w8, #0x2                   	// #2
  405bac:	str	w8, [sp, #4]
  405bb0:	b	405bc0 <wcrtomb@plt+0x32b0>
  405bb4:	ldrb	w8, [sp, #471]
  405bb8:	and	w8, w8, #0x1
  405bbc:	str	w8, [sp, #4]
  405bc0:	ldr	w8, [sp, #4]
  405bc4:	ldr	x9, [sp, #456]
  405bc8:	str	w8, [x9, #252]
  405bcc:	ldr	x8, [sp, #456]
  405bd0:	ldr	w0, [x8, #252]
  405bd4:	add	sp, sp, #0x390
  405bd8:	ldp	x20, x19, [sp, #80]
  405bdc:	ldp	x22, x21, [sp, #64]
  405be0:	ldp	x24, x23, [sp, #48]
  405be4:	ldp	x26, x25, [sp, #32]
  405be8:	ldp	x28, x27, [sp, #16]
  405bec:	ldp	x29, x30, [sp], #96
  405bf0:	ret
  405bf4:	stp	x29, x30, [sp, #-16]!
  405bf8:	mov	x29, sp
  405bfc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405c00:	add	x8, x8, #0x5c4
  405c04:	ldr	w9, [x8]
  405c08:	cbnz	w9, 405c10 <wcrtomb@plt+0x3300>
  405c0c:	bl	4102f4 <wcrtomb@plt+0xd9e4>
  405c10:	ldp	x29, x30, [sp], #16
  405c14:	ret
  405c18:	sub	sp, sp, #0x60
  405c1c:	stp	x29, x30, [sp, #80]
  405c20:	add	x29, sp, #0x50
  405c24:	stur	x0, [x29, #-16]
  405c28:	stur	x1, [x29, #-24]
  405c2c:	stur	x2, [x29, #-32]
  405c30:	ldur	x8, [x29, #-16]
  405c34:	cbz	x8, 405d6c <wcrtomb@plt+0x345c>
  405c38:	ldur	x8, [x29, #-16]
  405c3c:	ldrb	w9, [x8]
  405c40:	cbz	w9, 405d6c <wcrtomb@plt+0x345c>
  405c44:	ldur	x0, [x29, #-16]
  405c48:	bl	4022f0 <strlen@plt>
  405c4c:	add	x0, x0, #0x1
  405c50:	bl	423058 <wcrtomb@plt+0x20748>
  405c54:	str	x0, [sp, #40]
  405c58:	ldur	x0, [x29, #-16]
  405c5c:	ldr	x1, [sp, #40]
  405c60:	mov	x8, xzr
  405c64:	mov	x2, x8
  405c68:	bl	4068f4 <wcrtomb@plt+0x3fe4>
  405c6c:	str	x0, [sp, #32]
  405c70:	ldur	x8, [x29, #-24]
  405c74:	ldr	w9, [x8]
  405c78:	str	w9, [sp, #28]
  405c7c:	ldur	x8, [x29, #-32]
  405c80:	ldr	x8, [x8]
  405c84:	str	x8, [sp, #16]
  405c88:	ldr	w9, [sp, #28]
  405c8c:	mov	w10, #0x7fffffff            	// #2147483647
  405c90:	subs	w9, w10, w9
  405c94:	mov	w0, w9
  405c98:	sxtw	x8, w0
  405c9c:	ldr	x11, [sp, #32]
  405ca0:	cmp	x8, x11
  405ca4:	b.cs	405cac <wcrtomb@plt+0x339c>  // b.hs, b.nlast
  405ca8:	bl	423394 <wcrtomb@plt+0x20a84>
  405cac:	ldr	x8, [sp, #32]
  405cb0:	ldrsw	x9, [sp, #28]
  405cb4:	add	x8, x8, x9
  405cb8:	add	x8, x8, #0x1
  405cbc:	mov	x9, #0x8                   	// #8
  405cc0:	mul	x0, x8, x9
  405cc4:	bl	423058 <wcrtomb@plt+0x20748>
  405cc8:	str	x0, [sp, #8]
  405ccc:	ldr	x8, [sp, #32]
  405cd0:	ldrsw	x9, [sp, #28]
  405cd4:	add	x8, x8, x9
  405cd8:	ldur	x9, [x29, #-24]
  405cdc:	str	w8, [x9]
  405ce0:	ldr	x9, [sp, #8]
  405ce4:	ldur	x10, [x29, #-32]
  405ce8:	str	x9, [x10]
  405cec:	ldr	x9, [sp, #16]
  405cf0:	mov	x10, #0x8                   	// #8
  405cf4:	add	x11, x9, #0x8
  405cf8:	str	x11, [sp, #16]
  405cfc:	ldr	x9, [x9]
  405d00:	ldr	x11, [sp, #8]
  405d04:	add	x12, x11, #0x8
  405d08:	str	x12, [sp, #8]
  405d0c:	str	x9, [x11]
  405d10:	ldur	x0, [x29, #-16]
  405d14:	ldr	x1, [sp, #40]
  405d18:	ldr	x2, [sp, #8]
  405d1c:	str	x10, [sp]
  405d20:	bl	4068f4 <wcrtomb@plt+0x3fe4>
  405d24:	ldr	x9, [sp, #8]
  405d28:	ldr	x10, [sp]
  405d2c:	mul	x11, x10, x0
  405d30:	add	x9, x9, x11
  405d34:	str	x9, [sp, #8]
  405d38:	ldr	x8, [sp, #16]
  405d3c:	add	x9, x8, #0x8
  405d40:	str	x9, [sp, #16]
  405d44:	ldr	x8, [x8]
  405d48:	ldr	x9, [sp, #8]
  405d4c:	add	x10, x9, #0x8
  405d50:	str	x10, [sp, #8]
  405d54:	str	x8, [x9]
  405d58:	cbz	x8, 405d60 <wcrtomb@plt+0x3450>
  405d5c:	b	405d38 <wcrtomb@plt+0x3428>
  405d60:	ldr	x8, [sp, #32]
  405d64:	stur	w8, [x29, #-4]
  405d68:	b	405d70 <wcrtomb@plt+0x3460>
  405d6c:	stur	wzr, [x29, #-4]
  405d70:	ldur	w0, [x29, #-4]
  405d74:	ldp	x29, x30, [sp, #80]
  405d78:	add	sp, sp, #0x60
  405d7c:	ret
  405d80:	sub	sp, sp, #0x60
  405d84:	stp	x29, x30, [sp, #80]
  405d88:	add	x29, sp, #0x50
  405d8c:	mov	w8, #0x0                   	// #0
  405d90:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405d94:	add	x9, x9, #0x450
  405d98:	add	x10, sp, #0x1a
  405d9c:	stur	w0, [x29, #-4]
  405da0:	stur	x1, [x29, #-16]
  405da4:	stur	x2, [x29, #-24]
  405da8:	str	x10, [sp, #16]
  405dac:	sturb	w8, [x29, #-29]
  405db0:	ldr	w8, [x9]
  405db4:	stur	w8, [x29, #-28]
  405db8:	ldur	w0, [x29, #-4]
  405dbc:	ldur	x1, [x29, #-16]
  405dc0:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x196e0>
  405dc4:	add	x2, x2, #0x540
  405dc8:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x196e0>
  405dcc:	add	x3, x3, #0x580
  405dd0:	mov	x8, xzr
  405dd4:	mov	x4, x8
  405dd8:	bl	402690 <getopt_long@plt>
  405ddc:	str	w0, [sp, #12]
  405de0:	ldr	w0, [sp, #12]
  405de4:	bl	40fc2c <wcrtomb@plt+0xd31c>
  405de8:	tbnz	w0, #0, 405df0 <wcrtomb@plt+0x34e0>
  405dec:	b	405eb4 <wcrtomb@plt+0x35a4>
  405df0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405df4:	add	x8, x8, #0x380
  405df8:	ldr	w9, [x8]
  405dfc:	ldur	w10, [x29, #-28]
  405e00:	cmp	w9, w10
  405e04:	b.ne	405e10 <wcrtomb@plt+0x3500>  // b.any
  405e08:	ldurb	w8, [x29, #-29]
  405e0c:	tbnz	w8, #0, 405e1c <wcrtomb@plt+0x350c>
  405e10:	add	x8, sp, #0x1a
  405e14:	str	x8, [sp, #16]
  405e18:	b	405e40 <wcrtomb@plt+0x3530>
  405e1c:	ldrb	w8, [sp, #26]
  405e20:	cmp	w8, #0x30
  405e24:	cset	w8, eq  // eq = none
  405e28:	and	w8, w8, #0x1
  405e2c:	ldr	x9, [sp, #16]
  405e30:	mov	x10, xzr
  405e34:	subs	x10, x10, w8, sxtw
  405e38:	add	x9, x9, x10
  405e3c:	str	x9, [sp, #16]
  405e40:	ldr	x8, [sp, #16]
  405e44:	add	x9, sp, #0x1a
  405e48:	add	x9, x9, #0x15
  405e4c:	cmp	x8, x9
  405e50:	b.ne	405e74 <wcrtomb@plt+0x3564>  // b.any
  405e54:	ldr	x0, [sp, #16]
  405e58:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  405e5c:	add	x1, x1, #0xd5d
  405e60:	bl	402730 <strcpy@plt>
  405e64:	ldr	x8, [sp, #16]
  405e68:	add	x8, x8, #0x3
  405e6c:	str	x8, [sp, #16]
  405e70:	b	405eb4 <wcrtomb@plt+0x35a4>
  405e74:	ldr	w8, [sp, #12]
  405e78:	ldr	x9, [sp, #16]
  405e7c:	add	x10, x9, #0x1
  405e80:	str	x10, [sp, #16]
  405e84:	strb	w8, [x9]
  405e88:	mov	w8, #0x1                   	// #1
  405e8c:	sturb	w8, [x29, #-29]
  405e90:	ldur	w8, [x29, #-28]
  405e94:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405e98:	add	x9, x9, #0x380
  405e9c:	str	w8, [x9]
  405ea0:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  405ea4:	add	x9, x9, #0x450
  405ea8:	ldr	w8, [x9]
  405eac:	stur	w8, [x29, #-28]
  405eb0:	b	405db8 <wcrtomb@plt+0x34a8>
  405eb4:	ldr	x8, [sp, #16]
  405eb8:	add	x9, sp, #0x1a
  405ebc:	cmp	x8, x9
  405ec0:	b.eq	405edc <wcrtomb@plt+0x35cc>  // b.none
  405ec4:	ldr	x8, [sp, #16]
  405ec8:	mov	w9, #0x0                   	// #0
  405ecc:	strb	w9, [x8]
  405ed0:	ldur	x1, [x29, #-24]
  405ed4:	add	x0, sp, #0x1a
  405ed8:	bl	405eec <wcrtomb@plt+0x35dc>
  405edc:	ldr	w0, [sp, #12]
  405ee0:	ldp	x29, x30, [sp, #80]
  405ee4:	add	sp, sp, #0x60
  405ee8:	ret
  405eec:	sub	sp, sp, #0x30
  405ef0:	stp	x29, x30, [sp, #32]
  405ef4:	add	x29, sp, #0x20
  405ef8:	mov	x8, xzr
  405efc:	mov	w2, #0xa                   	// #10
  405f00:	adrp	x4, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  405f04:	add	x4, x4, #0xad5
  405f08:	stur	x0, [x29, #-8]
  405f0c:	str	x1, [sp, #16]
  405f10:	ldur	x0, [x29, #-8]
  405f14:	ldr	x3, [sp, #16]
  405f18:	mov	x1, x8
  405f1c:	bl	423430 <wcrtomb@plt+0x20b20>
  405f20:	subs	w9, w0, #0x0
  405f24:	mov	w10, #0x1                   	// #1
  405f28:	cmp	w9, #0x1
  405f2c:	cset	w9, ls  // ls = plast
  405f30:	eor	w9, w9, w10
  405f34:	tbnz	w9, #0, 405f58 <wcrtomb@plt+0x3648>
  405f38:	b	405f3c <wcrtomb@plt+0x362c>
  405f3c:	ldr	x8, [sp, #16]
  405f40:	ldr	x8, [x8]
  405f44:	mov	x9, xzr
  405f48:	cmp	x9, x8
  405f4c:	cset	w10, gt
  405f50:	tbnz	w10, #0, 405f58 <wcrtomb@plt+0x3648>
  405f54:	b	405f94 <wcrtomb@plt+0x3684>
  405f58:	ldur	x3, [x29, #-8]
  405f5c:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  405f60:	add	x0, x0, #0xf42
  405f64:	str	x3, [sp, #8]
  405f68:	bl	4028b0 <gettext@plt>
  405f6c:	mov	w8, #0x2                   	// #2
  405f70:	str	x0, [sp]
  405f74:	mov	w0, w8
  405f78:	mov	w8, wzr
  405f7c:	mov	w1, w8
  405f80:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  405f84:	add	x2, x2, #0x55
  405f88:	ldr	x3, [sp, #8]
  405f8c:	ldr	x4, [sp]
  405f90:	bl	402330 <error@plt>
  405f94:	ldp	x29, x30, [sp, #32]
  405f98:	add	sp, sp, #0x30
  405f9c:	ret
  405fa0:	sub	sp, sp, #0x40
  405fa4:	stp	x29, x30, [sp, #48]
  405fa8:	add	x29, sp, #0x30
  405fac:	stur	x0, [x29, #-8]
  405fb0:	stur	w1, [x29, #-12]
  405fb4:	stur	wzr, [x29, #-16]
  405fb8:	ldursw	x8, [x29, #-16]
  405fbc:	cmp	x8, #0x6
  405fc0:	b.cs	406054 <wcrtomb@plt+0x3744>  // b.hs, b.nlast
  405fc4:	ldur	x0, [x29, #-8]
  405fc8:	ldursw	x8, [x29, #-16]
  405fcc:	mov	x9, #0x20                  	// #32
  405fd0:	mul	x8, x9, x8
  405fd4:	adrp	x9, 441000 <_obstack_memory_used@@Base+0x196e0>
  405fd8:	add	x9, x9, #0x460
  405fdc:	add	x1, x9, x8
  405fe0:	bl	4026a0 <strcmp@plt>
  405fe4:	cbnz	w0, 406044 <wcrtomb@plt+0x3734>
  405fe8:	ldur	w8, [x29, #-12]
  405fec:	mov	w9, wzr
  405ff0:	cmp	w9, w8
  405ff4:	cset	w8, gt
  405ff8:	tbnz	w8, #0, 406034 <wcrtomb@plt+0x3724>
  405ffc:	ldur	w8, [x29, #-12]
  406000:	ldur	w9, [x29, #-16]
  406004:	cmp	w8, w9
  406008:	b.eq	406034 <wcrtomb@plt+0x3724>  // b.none
  40600c:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  406010:	add	x0, x0, #0xf62
  406014:	bl	4028b0 <gettext@plt>
  406018:	mov	w8, #0x2                   	// #2
  40601c:	str	x0, [sp, #24]
  406020:	mov	w0, w8
  406024:	mov	w8, wzr
  406028:	mov	w1, w8
  40602c:	ldr	x2, [sp, #24]
  406030:	bl	402330 <error@plt>
  406034:	ldur	w0, [x29, #-16]
  406038:	ldp	x29, x30, [sp, #48]
  40603c:	add	sp, sp, #0x40
  406040:	ret
  406044:	ldur	w8, [x29, #-16]
  406048:	add	w8, w8, #0x1
  40604c:	stur	w8, [x29, #-16]
  406050:	b	405fb8 <wcrtomb@plt+0x36a8>
  406054:	ldur	x0, [x29, #-8]
  406058:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  40605c:	add	x1, x1, #0xc6f
  406060:	bl	4026a0 <strcmp@plt>
  406064:	cbnz	w0, 406090 <wcrtomb@plt+0x3780>
  406068:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  40606c:	add	x0, x0, #0xf81
  406070:	bl	4028b0 <gettext@plt>
  406074:	mov	w8, #0x2                   	// #2
  406078:	str	x0, [sp, #16]
  40607c:	mov	w0, w8
  406080:	mov	w8, wzr
  406084:	mov	w1, w8
  406088:	ldr	x2, [sp, #16]
  40608c:	bl	402330 <error@plt>
  406090:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  406094:	add	x0, x0, #0xfbe
  406098:	bl	4028b0 <gettext@plt>
  40609c:	ldur	x3, [x29, #-8]
  4060a0:	mov	w8, #0x2                   	// #2
  4060a4:	str	x0, [sp, #8]
  4060a8:	mov	w0, w8
  4060ac:	mov	w8, wzr
  4060b0:	mov	w1, w8
  4060b4:	ldr	x2, [sp, #8]
  4060b8:	bl	402330 <error@plt>
  4060bc:	sub	sp, sp, #0x40
  4060c0:	stp	x29, x30, [sp, #48]
  4060c4:	add	x29, sp, #0x30
  4060c8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4060cc:	add	x8, x8, #0x5c8
  4060d0:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4060d4:	add	x9, x9, #0x478
  4060d8:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4060dc:	add	x10, x10, #0x480
  4060e0:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4060e4:	add	x11, x11, #0x500
  4060e8:	stur	x0, [x29, #-8]
  4060ec:	stur	x1, [x29, #-16]
  4060f0:	str	x2, [sp, #24]
  4060f4:	ldr	x8, [x8]
  4060f8:	ldr	x12, [x9]
  4060fc:	cmp	x8, x12
  406100:	str	x9, [sp, #16]
  406104:	str	x10, [sp, #8]
  406108:	str	x11, [sp]
  40610c:	b.hi	406130 <wcrtomb@plt+0x3820>  // b.pmore
  406110:	ldr	x8, [sp, #8]
  406114:	ldr	x0, [x8]
  406118:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40611c:	add	x1, x1, #0x5c8
  406120:	mov	x2, #0x10                  	// #16
  406124:	bl	423160 <wcrtomb@plt+0x20850>
  406128:	ldr	x8, [sp, #8]
  40612c:	str	x0, [x8]
  406130:	ldr	x8, [sp]
  406134:	ldr	x9, [x8]
  406138:	add	x9, x9, #0x1
  40613c:	ldr	x10, [sp, #8]
  406140:	ldr	x11, [x10]
  406144:	ldr	x12, [sp, #16]
  406148:	ldr	x13, [x12]
  40614c:	mov	x14, #0x10                  	// #16
  406150:	mul	x13, x14, x13
  406154:	add	x11, x11, x13
  406158:	str	x9, [x11, #8]
  40615c:	ldr	x9, [sp, #24]
  406160:	ldr	x11, [x10]
  406164:	ldr	x13, [x12]
  406168:	mul	x13, x14, x13
  40616c:	add	x11, x11, x13
  406170:	str	x9, [x11]
  406174:	ldr	x9, [x12]
  406178:	add	x9, x9, #0x1
  40617c:	str	x9, [x12]
  406180:	ldur	x0, [x29, #-8]
  406184:	ldur	x1, [x29, #-16]
  406188:	bl	406a40 <wcrtomb@plt+0x4130>
  40618c:	ldr	x8, [sp]
  406190:	ldr	x9, [x8]
  406194:	add	x9, x9, x0
  406198:	str	x9, [x8]
  40619c:	ldp	x29, x30, [sp, #48]
  4061a0:	add	sp, sp, #0x40
  4061a4:	ret
  4061a8:	sub	sp, sp, #0x10
  4061ac:	mov	w8, wzr
  4061b0:	mov	w9, #0x40000000            	// #1073741824
  4061b4:	mov	w10, #0x10000000            	// #268435456
  4061b8:	and	w11, w0, #0x1
  4061bc:	strb	w11, [sp, #15]
  4061c0:	ldrb	w11, [sp, #15]
  4061c4:	tst	w11, #0x1
  4061c8:	csel	w8, w8, w9, ne  // ne = any
  4061cc:	orr	w0, w10, w8
  4061d0:	add	sp, sp, #0x10
  4061d4:	ret
  4061d8:	sub	sp, sp, #0x40
  4061dc:	stp	x29, x30, [sp, #48]
  4061e0:	add	x29, sp, #0x30
  4061e4:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4061e8:	add	x0, x0, #0xfdf
  4061ec:	bl	402890 <getenv@plt>
  4061f0:	stur	x0, [x29, #-8]
  4061f4:	ldur	x8, [x29, #-8]
  4061f8:	cbz	x8, 406208 <wcrtomb@plt+0x38f8>
  4061fc:	ldur	x8, [x29, #-8]
  406200:	ldrb	w9, [x8]
  406204:	cbnz	w9, 40620c <wcrtomb@plt+0x38fc>
  406208:	b	4063a0 <wcrtomb@plt+0x3a90>
  40620c:	ldur	x0, [x29, #-8]
  406210:	bl	423358 <wcrtomb@plt+0x20a48>
  406214:	stur	x0, [x29, #-16]
  406218:	ldur	x8, [x29, #-16]
  40621c:	str	x8, [sp, #24]
  406220:	mov	x8, xzr
  406224:	str	x8, [sp, #16]
  406228:	ldur	x8, [x29, #-16]
  40622c:	ldrb	w9, [x8]
  406230:	cmp	w9, #0x3a
  406234:	b.eq	406244 <wcrtomb@plt+0x3934>  // b.none
  406238:	ldur	x8, [x29, #-16]
  40623c:	ldrb	w9, [x8]
  406240:	cbnz	w9, 406300 <wcrtomb@plt+0x39f0>
  406244:	ldur	x8, [x29, #-16]
  406248:	ldrb	w9, [x8]
  40624c:	strb	w9, [sp, #15]
  406250:	ldur	x8, [x29, #-16]
  406254:	add	x10, x8, #0x1
  406258:	stur	x10, [x29, #-16]
  40625c:	mov	w9, #0x0                   	// #0
  406260:	strb	w9, [x8]
  406264:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  406268:	add	x8, x8, #0xbe8
  40626c:	str	x8, [sp]
  406270:	ldr	x8, [sp]
  406274:	ldr	x8, [x8]
  406278:	cbz	x8, 4062a4 <wcrtomb@plt+0x3994>
  40627c:	ldr	x8, [sp]
  406280:	ldr	x0, [x8]
  406284:	ldr	x1, [sp, #24]
  406288:	bl	4026a0 <strcmp@plt>
  40628c:	cbnz	w0, 406294 <wcrtomb@plt+0x3984>
  406290:	b	4062a4 <wcrtomb@plt+0x3994>
  406294:	ldr	x8, [sp]
  406298:	add	x8, x8, #0x18
  40629c:	str	x8, [sp]
  4062a0:	b	406270 <wcrtomb@plt+0x3960>
  4062a4:	ldr	x8, [sp]
  4062a8:	ldr	x8, [x8, #8]
  4062ac:	cbz	x8, 4062c8 <wcrtomb@plt+0x39b8>
  4062b0:	ldr	x8, [sp, #16]
  4062b4:	cbz	x8, 4062c8 <wcrtomb@plt+0x39b8>
  4062b8:	ldr	x8, [sp, #16]
  4062bc:	ldr	x9, [sp]
  4062c0:	ldr	x9, [x9, #8]
  4062c4:	str	x8, [x9]
  4062c8:	ldr	x8, [sp]
  4062cc:	ldr	x8, [x8, #16]
  4062d0:	cbz	x8, 4062e0 <wcrtomb@plt+0x39d0>
  4062d4:	ldr	x8, [sp]
  4062d8:	ldr	x8, [x8, #16]
  4062dc:	blr	x8
  4062e0:	ldrb	w8, [sp, #15]
  4062e4:	cbnz	w8, 4062ec <wcrtomb@plt+0x39dc>
  4062e8:	b	4063a0 <wcrtomb@plt+0x3a90>
  4062ec:	ldur	x8, [x29, #-16]
  4062f0:	str	x8, [sp, #24]
  4062f4:	mov	x8, xzr
  4062f8:	str	x8, [sp, #16]
  4062fc:	b	40639c <wcrtomb@plt+0x3a8c>
  406300:	ldur	x8, [x29, #-16]
  406304:	ldrb	w9, [x8]
  406308:	cmp	w9, #0x3d
  40630c:	b.ne	40634c <wcrtomb@plt+0x3a3c>  // b.any
  406310:	ldur	x8, [x29, #-16]
  406314:	ldr	x9, [sp, #24]
  406318:	cmp	x8, x9
  40631c:	b.eq	406328 <wcrtomb@plt+0x3a18>  // b.none
  406320:	ldr	x8, [sp, #16]
  406324:	cbz	x8, 40632c <wcrtomb@plt+0x3a1c>
  406328:	b	4063a0 <wcrtomb@plt+0x3a90>
  40632c:	ldur	x8, [x29, #-16]
  406330:	add	x9, x8, #0x1
  406334:	stur	x9, [x29, #-16]
  406338:	mov	w10, #0x0                   	// #0
  40633c:	strb	w10, [x8]
  406340:	ldur	x8, [x29, #-16]
  406344:	str	x8, [sp, #16]
  406348:	b	40639c <wcrtomb@plt+0x3a8c>
  40634c:	ldr	x8, [sp, #16]
  406350:	cbnz	x8, 406364 <wcrtomb@plt+0x3a54>
  406354:	ldur	x8, [x29, #-16]
  406358:	add	x8, x8, #0x1
  40635c:	stur	x8, [x29, #-16]
  406360:	b	40639c <wcrtomb@plt+0x3a8c>
  406364:	ldur	x8, [x29, #-16]
  406368:	ldrb	w9, [x8]
  40636c:	cmp	w9, #0x3b
  406370:	b.eq	406388 <wcrtomb@plt+0x3a78>  // b.none
  406374:	ldur	x8, [x29, #-16]
  406378:	ldrb	w0, [x8]
  40637c:	bl	40fc2c <wcrtomb@plt+0xd31c>
  406380:	tbnz	w0, #0, 406388 <wcrtomb@plt+0x3a78>
  406384:	b	406398 <wcrtomb@plt+0x3a88>
  406388:	ldur	x8, [x29, #-16]
  40638c:	add	x8, x8, #0x1
  406390:	stur	x8, [x29, #-16]
  406394:	b	40639c <wcrtomb@plt+0x3a8c>
  406398:	b	4063a0 <wcrtomb@plt+0x3a90>
  40639c:	b	406228 <wcrtomb@plt+0x3918>
  4063a0:	ldp	x29, x30, [sp, #48]
  4063a4:	add	sp, sp, #0x40
  4063a8:	ret
  4063ac:	sub	sp, sp, #0x20
  4063b0:	mov	w8, #0x0                   	// #0
  4063b4:	mov	w9, #0x1                   	// #1
  4063b8:	adrp	x10, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4063bc:	add	x10, x10, #0x8c8
  4063c0:	add	x10, x10, #0x3
  4063c4:	strb	w8, [sp, #31]
  4063c8:	str	w9, [sp, #24]
  4063cc:	str	w9, [sp, #20]
  4063d0:	str	x10, [sp]
  4063d4:	ldr	w8, [sp, #20]
  4063d8:	cmp	w8, #0xff
  4063dc:	b.gt	406464 <wcrtomb@plt+0x3b54>
  4063e0:	ldrsw	x8, [sp, #20]
  4063e4:	ldr	x9, [sp]
  4063e8:	ldrsb	w10, [x9, x8]
  4063ec:	cmp	w10, #0x1
  4063f0:	cset	w10, ne  // ne = any
  4063f4:	and	w10, w10, #0x1
  4063f8:	ldrb	w11, [sp, #31]
  4063fc:	ldr	w12, [sp, #20]
  406400:	tst	w11, w12
  406404:	cset	w11, ne  // ne = any
  406408:	eor	w11, w11, #0x1
  40640c:	and	w11, w11, #0x1
  406410:	and	w10, w10, w11
  406414:	cbz	w10, 406454 <wcrtomb@plt+0x3b44>
  406418:	ldr	w8, [sp, #24]
  40641c:	mov	w9, #0x2                   	// #2
  406420:	mul	w8, w8, w9
  406424:	ldr	w9, [sp, #20]
  406428:	cmp	w8, w9
  40642c:	b.gt	406444 <wcrtomb@plt+0x3b34>
  406430:	ldr	w8, [sp, #24]
  406434:	mov	w9, #0x2                   	// #2
  406438:	mul	w8, w8, w9
  40643c:	str	w8, [sp, #24]
  406440:	b	406418 <wcrtomb@plt+0x3b08>
  406444:	ldr	w8, [sp, #24]
  406448:	ldrb	w9, [sp, #31]
  40644c:	orr	w8, w9, w8
  406450:	strb	w8, [sp, #31]
  406454:	ldr	w8, [sp, #20]
  406458:	add	w8, w8, #0x1
  40645c:	str	w8, [sp, #20]
  406460:	b	4063d4 <wcrtomb@plt+0x3ac4>
  406464:	mov	x8, #0xffffffffffffffff    	// #-1
  406468:	str	x8, [sp, #8]
  40646c:	ldr	x8, [sp, #8]
  406470:	mov	x9, #0xff                  	// #255
  406474:	udiv	x8, x8, x9
  406478:	ldrb	w10, [sp, #31]
  40647c:	mov	w9, w10
  406480:	mul	x8, x8, x9
  406484:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406488:	add	x9, x9, #0x5d0
  40648c:	str	x8, [x9]
  406490:	add	sp, sp, #0x20
  406494:	ret
  406498:	sub	sp, sp, #0x40
  40649c:	stp	x29, x30, [sp, #48]
  4064a0:	add	x29, sp, #0x30
  4064a4:	stur	x0, [x29, #-16]
  4064a8:	str	x1, [sp, #24]
  4064ac:	str	xzr, [sp, #16]
  4064b0:	str	xzr, [sp, #8]
  4064b4:	ldr	x8, [sp, #8]
  4064b8:	ldr	x9, [sp, #24]
  4064bc:	cmp	x8, x9
  4064c0:	b.cs	40651c <wcrtomb@plt+0x3c0c>  // b.hs, b.nlast
  4064c4:	ldur	x8, [x29, #-16]
  4064c8:	ldr	x9, [sp, #8]
  4064cc:	add	x0, x8, x9
  4064d0:	ldr	x8, [sp, #24]
  4064d4:	ldr	x9, [sp, #8]
  4064d8:	subs	x1, x8, x9
  4064dc:	add	x2, sp, #0x10
  4064e0:	bl	40ede8 <wcrtomb@plt+0xc4d8>
  4064e4:	str	x0, [sp]
  4064e8:	ldr	x8, [sp]
  4064ec:	mov	x9, #0xfffffffffffffffe    	// #-2
  4064f0:	cmp	x9, x8
  4064f4:	b.hi	406508 <wcrtomb@plt+0x3bf8>  // b.pmore
  4064f8:	mov	w8, #0x1                   	// #1
  4064fc:	and	w8, w8, #0x1
  406500:	sturb	w8, [x29, #-1]
  406504:	b	406528 <wcrtomb@plt+0x3c18>
  406508:	ldr	x8, [sp]
  40650c:	ldr	x9, [sp, #8]
  406510:	add	x8, x9, x8
  406514:	str	x8, [sp, #8]
  406518:	b	4064b4 <wcrtomb@plt+0x3ba4>
  40651c:	mov	w8, wzr
  406520:	and	w8, w8, #0x1
  406524:	sturb	w8, [x29, #-1]
  406528:	ldurb	w8, [x29, #-1]
  40652c:	and	w0, w8, #0x1
  406530:	ldp	x29, x30, [sp, #48]
  406534:	add	sp, sp, #0x40
  406538:	ret
  40653c:	sub	sp, sp, #0x40
  406540:	stp	x29, x30, [sp, #48]
  406544:	add	x29, sp, #0x30
  406548:	stur	x0, [x29, #-16]
  40654c:	str	x1, [sp, #24]
  406550:	str	xzr, [sp, #16]
  406554:	str	xzr, [sp, #8]
  406558:	ldr	x8, [sp, #8]
  40655c:	ldr	x9, [sp, #24]
  406560:	cmp	x8, x9
  406564:	b.cs	4065c0 <wcrtomb@plt+0x3cb0>  // b.hs, b.nlast
  406568:	ldur	x8, [x29, #-16]
  40656c:	ldr	x9, [sp, #8]
  406570:	add	x0, x8, x9
  406574:	ldr	x8, [sp, #24]
  406578:	ldr	x9, [sp, #8]
  40657c:	subs	x1, x8, x9
  406580:	add	x2, sp, #0x10
  406584:	bl	406b18 <wcrtomb@plt+0x4208>
  406588:	str	w0, [sp, #4]
  40658c:	ldr	w10, [sp, #4]
  406590:	cmp	w10, #0x0
  406594:	cset	w10, ge  // ge = tcont
  406598:	tbnz	w10, #0, 4065ac <wcrtomb@plt+0x3c9c>
  40659c:	mov	w8, wzr
  4065a0:	and	w8, w8, #0x1
  4065a4:	sturb	w8, [x29, #-1]
  4065a8:	b	4065cc <wcrtomb@plt+0x3cbc>
  4065ac:	ldrsw	x8, [sp, #4]
  4065b0:	ldr	x9, [sp, #8]
  4065b4:	add	x8, x9, x8
  4065b8:	str	x8, [sp, #8]
  4065bc:	b	406558 <wcrtomb@plt+0x3c48>
  4065c0:	mov	w8, #0x1                   	// #1
  4065c4:	and	w8, w8, #0x1
  4065c8:	sturb	w8, [x29, #-1]
  4065cc:	ldurb	w8, [x29, #-1]
  4065d0:	and	w0, w8, #0x1
  4065d4:	ldp	x29, x30, [sp, #48]
  4065d8:	add	sp, sp, #0x40
  4065dc:	ret
  4065e0:	sub	sp, sp, #0x90
  4065e4:	stp	x29, x30, [sp, #128]
  4065e8:	add	x29, sp, #0x80
  4065ec:	stur	w0, [x29, #-4]
  4065f0:	stur	x1, [x29, #-16]
  4065f4:	stur	x2, [x29, #-24]
  4065f8:	ldur	w8, [x29, #-4]
  4065fc:	stur	w8, [x29, #-28]
  406600:	ldur	x9, [x29, #-24]
  406604:	ldr	x9, [x9]
  406608:	stur	x9, [x29, #-40]
  40660c:	ldur	x9, [x29, #-40]
  406610:	add	x0, x9, #0x1
  406614:	bl	423058 <wcrtomb@plt+0x20748>
  406618:	stur	x0, [x29, #-48]
  40661c:	ldur	x9, [x29, #-48]
  406620:	stur	x9, [x29, #-56]
  406624:	ldur	x9, [x29, #-16]
  406628:	str	x9, [sp, #64]
  40662c:	str	xzr, [sp, #56]
  406630:	ldur	x8, [x29, #-40]
  406634:	cbz	x8, 4067b8 <wcrtomb@plt+0x3ea8>
  406638:	ldr	x8, [sp, #64]
  40663c:	ldrb	w9, [x8]
  406640:	subs	w9, w9, #0x24
  406644:	mov	w8, w9
  406648:	ubfx	x8, x8, #0, #32
  40664c:	cmp	x8, #0x58
  406650:	str	x8, [sp, #32]
  406654:	b.hi	4066f4 <wcrtomb@plt+0x3de4>  // b.pmore
  406658:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  40665c:	add	x8, x8, #0xc8
  406660:	ldr	x11, [sp, #32]
  406664:	ldrsw	x10, [x8, x11, lsl #2]
  406668:	add	x9, x8, x10
  40666c:	br	x9
  406670:	b	406808 <wcrtomb@plt+0x3ef8>
  406674:	ldur	w8, [x29, #-4]
  406678:	cbz	w8, 406680 <wcrtomb@plt+0x3d70>
  40667c:	b	406808 <wcrtomb@plt+0x3ef8>
  406680:	b	4066f4 <wcrtomb@plt+0x3de4>
  406684:	ldur	x8, [x29, #-40]
  406688:	mov	x9, #0x1                   	// #1
  40668c:	cmp	x9, x8
  406690:	b.cs	4066f4 <wcrtomb@plt+0x3de4>  // b.hs, b.nlast
  406694:	ldr	x8, [sp, #64]
  406698:	ldrb	w9, [x8, #1]
  40669c:	subs	w9, w9, #0xa
  4066a0:	mov	w8, w9
  4066a4:	ubfx	x8, x8, #0, #32
  4066a8:	cmp	x8, #0x72
  4066ac:	str	x8, [sp, #24]
  4066b0:	b.hi	4066dc <wcrtomb@plt+0x3dcc>  // b.pmore
  4066b4:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  4066b8:	add	x8, x8, #0x22c
  4066bc:	ldr	x11, [sp, #24]
  4066c0:	ldrsw	x10, [x8, x11, lsl #2]
  4066c4:	add	x9, x8, x10
  4066c8:	br	x9
  4066cc:	b	406808 <wcrtomb@plt+0x3ef8>
  4066d0:	ldur	w8, [x29, #-4]
  4066d4:	cbnz	w8, 4066dc <wcrtomb@plt+0x3dcc>
  4066d8:	b	406808 <wcrtomb@plt+0x3ef8>
  4066dc:	ldr	x8, [sp, #64]
  4066e0:	add	x8, x8, #0x1
  4066e4:	str	x8, [sp, #64]
  4066e8:	ldur	x8, [x29, #-40]
  4066ec:	subs	x8, x8, #0x1
  4066f0:	stur	x8, [x29, #-40]
  4066f4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4066f8:	add	x8, x8, #0xdce
  4066fc:	ldrb	w9, [x8]
  406700:	tbnz	w9, #0, 406708 <wcrtomb@plt+0x3df8>
  406704:	b	40673c <wcrtomb@plt+0x3e2c>
  406708:	ldr	x0, [sp, #64]
  40670c:	ldur	x1, [x29, #-40]
  406710:	add	x2, sp, #0x38
  406714:	bl	406b18 <wcrtomb@plt+0x4208>
  406718:	str	w0, [sp, #44]
  40671c:	ldr	w8, [sp, #44]
  406720:	cmp	w8, #0x0
  406724:	cset	w8, ge  // ge = tcont
  406728:	tbnz	w8, #0, 406730 <wcrtomb@plt+0x3e20>
  40672c:	b	406808 <wcrtomb@plt+0x3ef8>
  406730:	ldrsw	x8, [sp, #44]
  406734:	str	x8, [sp, #48]
  406738:	b	406764 <wcrtomb@plt+0x3e54>
  40673c:	ldr	x0, [sp, #64]
  406740:	ldur	x1, [x29, #-40]
  406744:	add	x2, sp, #0x38
  406748:	bl	40ede8 <wcrtomb@plt+0xc4d8>
  40674c:	str	x0, [sp, #48]
  406750:	ldr	x8, [sp, #48]
  406754:	mov	x9, #0x10                  	// #16
  406758:	cmp	x9, x8
  40675c:	b.cs	406764 <wcrtomb@plt+0x3e54>  // b.hs, b.nlast
  406760:	b	406808 <wcrtomb@plt+0x3ef8>
  406764:	ldur	x8, [x29, #-56]
  406768:	ldr	x1, [sp, #64]
  40676c:	ldr	x9, [sp, #48]
  406770:	mov	x0, x8
  406774:	mov	x2, x9
  406778:	str	x8, [sp, #16]
  40677c:	str	x9, [sp, #8]
  406780:	bl	402290 <memcpy@plt>
  406784:	ldr	x8, [sp, #16]
  406788:	ldr	x9, [sp, #8]
  40678c:	add	x10, x8, x9
  406790:	stur	x10, [x29, #-56]
  406794:	ldr	x10, [sp, #48]
  406798:	ldr	x11, [sp, #64]
  40679c:	add	x10, x11, x10
  4067a0:	str	x10, [sp, #64]
  4067a4:	ldr	x10, [sp, #48]
  4067a8:	ldur	x11, [x29, #-40]
  4067ac:	subs	x10, x11, x10
  4067b0:	stur	x10, [x29, #-40]
  4067b4:	b	406630 <wcrtomb@plt+0x3d20>
  4067b8:	ldur	x8, [x29, #-24]
  4067bc:	ldr	x8, [x8]
  4067c0:	ldur	x9, [x29, #-56]
  4067c4:	ldur	x10, [x29, #-48]
  4067c8:	subs	x9, x9, x10
  4067cc:	cmp	x8, x9
  4067d0:	b.eq	406800 <wcrtomb@plt+0x3ef0>  // b.none
  4067d4:	ldur	x8, [x29, #-56]
  4067d8:	ldur	x9, [x29, #-48]
  4067dc:	subs	x8, x8, x9
  4067e0:	ldur	x9, [x29, #-24]
  4067e4:	str	x8, [x9]
  4067e8:	ldur	x0, [x29, #-16]
  4067ec:	ldur	x1, [x29, #-48]
  4067f0:	ldur	x8, [x29, #-56]
  4067f4:	ldur	x9, [x29, #-48]
  4067f8:	subs	x2, x8, x9
  4067fc:	bl	402290 <memcpy@plt>
  406800:	mov	w8, #0x2                   	// #2
  406804:	stur	w8, [x29, #-28]
  406808:	ldur	x0, [x29, #-48]
  40680c:	bl	4026c0 <free@plt>
  406810:	ldur	w0, [x29, #-28]
  406814:	ldp	x29, x30, [sp, #128]
  406818:	add	sp, sp, #0x90
  40681c:	ret
  406820:	sub	sp, sp, #0x30
  406824:	stp	x29, x30, [sp, #32]
  406828:	add	x29, sp, #0x20
  40682c:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  406830:	add	x1, x1, #0xc82
  406834:	str	x0, [sp, #16]
  406838:	ldr	x0, [sp, #16]
  40683c:	bl	4026a0 <strcmp@plt>
  406840:	cbnz	w0, 4068a8 <wcrtomb@plt+0x3f98>
  406844:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406848:	add	x8, x8, #0x4f8
  40684c:	ldr	x8, [x8]
  406850:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406854:	add	x9, x9, #0x5d8
  406858:	str	x8, [x9]
  40685c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406860:	add	x8, x8, #0x4b8
  406864:	ldrb	w10, [x8]
  406868:	tbnz	w10, #0, 406870 <wcrtomb@plt+0x3f60>
  40686c:	b	406880 <wcrtomb@plt+0x3f70>
  406870:	mov	w8, wzr
  406874:	mov	w0, w8
  406878:	mov	w1, w8
  40687c:	bl	4233f4 <wcrtomb@plt+0x20ae4>
  406880:	mov	w8, wzr
  406884:	mov	w0, w8
  406888:	mov	w8, #0x1                   	// #1
  40688c:	and	w1, w8, #0x1
  406890:	str	w8, [sp, #12]
  406894:	bl	406c5c <wcrtomb@plt+0x434c>
  406898:	ldr	w8, [sp, #12]
  40689c:	and	w9, w0, w8
  4068a0:	sturb	w9, [x29, #-1]
  4068a4:	b	4068e0 <wcrtomb@plt+0x3fd0>
  4068a8:	ldr	x8, [sp, #16]
  4068ac:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4068b0:	add	x9, x9, #0x5d8
  4068b4:	str	x8, [x9]
  4068b8:	ldr	x1, [sp, #16]
  4068bc:	mov	w0, #0xffffff9c            	// #-100
  4068c0:	mov	w10, #0x1                   	// #1
  4068c4:	and	w2, w10, #0x1
  4068c8:	and	w3, w10, #0x1
  4068cc:	str	w10, [sp, #8]
  4068d0:	bl	407180 <wcrtomb@plt+0x4870>
  4068d4:	ldr	w10, [sp, #8]
  4068d8:	and	w11, w0, w10
  4068dc:	sturb	w11, [x29, #-1]
  4068e0:	ldurb	w8, [x29, #-1]
  4068e4:	and	w0, w8, #0x1
  4068e8:	ldp	x29, x30, [sp, #32]
  4068ec:	add	sp, sp, #0x30
  4068f0:	ret
  4068f4:	sub	sp, sp, #0x50
  4068f8:	stp	x29, x30, [sp, #64]
  4068fc:	add	x29, sp, #0x40
  406900:	stur	x0, [x29, #-8]
  406904:	stur	x1, [x29, #-16]
  406908:	stur	x2, [x29, #-24]
  40690c:	ldur	x8, [x29, #-8]
  406910:	str	x8, [sp, #32]
  406914:	ldur	x8, [x29, #-16]
  406918:	str	x8, [sp, #24]
  40691c:	str	xzr, [sp, #16]
  406920:	ldr	x8, [sp, #32]
  406924:	ldrb	w0, [x8]
  406928:	bl	40edd4 <wcrtomb@plt+0xc4c4>
  40692c:	and	w0, w0, #0xff
  406930:	bl	40fdd4 <wcrtomb@plt+0xd4c4>
  406934:	tbnz	w0, #0, 40693c <wcrtomb@plt+0x402c>
  406938:	b	40694c <wcrtomb@plt+0x403c>
  40693c:	ldr	x8, [sp, #32]
  406940:	add	x8, x8, #0x1
  406944:	str	x8, [sp, #32]
  406948:	b	406920 <wcrtomb@plt+0x4010>
  40694c:	ldr	x8, [sp, #32]
  406950:	ldrb	w9, [x8]
  406954:	cbnz	w9, 406968 <wcrtomb@plt+0x4058>
  406958:	ldr	x0, [sp, #16]
  40695c:	ldp	x29, x30, [sp, #64]
  406960:	add	sp, sp, #0x50
  406964:	ret
  406968:	ldur	x8, [x29, #-24]
  40696c:	cbz	x8, 40698c <wcrtomb@plt+0x407c>
  406970:	ldr	x8, [sp, #24]
  406974:	ldur	x9, [x29, #-24]
  406978:	ldr	x10, [sp, #16]
  40697c:	mov	x11, #0x8                   	// #8
  406980:	mul	x10, x11, x10
  406984:	add	x9, x9, x10
  406988:	str	x8, [x9]
  40698c:	ldr	x8, [sp, #16]
  406990:	add	x8, x8, #0x1
  406994:	str	x8, [sp, #16]
  406998:	ldr	x8, [sp, #32]
  40699c:	add	x9, x8, #0x1
  4069a0:	str	x9, [sp, #32]
  4069a4:	ldrb	w10, [x8]
  4069a8:	mov	w11, w10
  4069ac:	ldr	x8, [sp, #24]
  4069b0:	add	x9, x8, #0x1
  4069b4:	str	x9, [sp, #24]
  4069b8:	strb	w11, [x8]
  4069bc:	cmp	w10, #0x5c
  4069c0:	b.ne	4069f0 <wcrtomb@plt+0x40e0>  // b.any
  4069c4:	ldr	x8, [sp, #32]
  4069c8:	ldrb	w9, [x8]
  4069cc:	cbz	w9, 4069f0 <wcrtomb@plt+0x40e0>
  4069d0:	ldr	x8, [sp, #32]
  4069d4:	add	x9, x8, #0x1
  4069d8:	str	x9, [sp, #32]
  4069dc:	ldrb	w10, [x8]
  4069e0:	ldr	x8, [sp, #24]
  4069e4:	mov	x9, #0xffffffffffffffff    	// #-1
  4069e8:	add	x8, x8, x9
  4069ec:	strb	w10, [x8]
  4069f0:	ldr	x8, [sp, #32]
  4069f4:	ldrb	w9, [x8]
  4069f8:	mov	w10, #0x0                   	// #0
  4069fc:	str	w10, [sp, #12]
  406a00:	cbz	w9, 406a20 <wcrtomb@plt+0x4110>
  406a04:	ldr	x8, [sp, #32]
  406a08:	ldrb	w0, [x8]
  406a0c:	bl	40edd4 <wcrtomb@plt+0xc4c4>
  406a10:	and	w0, w0, #0xff
  406a14:	bl	40fdd4 <wcrtomb@plt+0xd4c4>
  406a18:	eor	w9, w0, #0x1
  406a1c:	str	w9, [sp, #12]
  406a20:	ldr	w8, [sp, #12]
  406a24:	tbnz	w8, #0, 406998 <wcrtomb@plt+0x4088>
  406a28:	ldr	x8, [sp, #24]
  406a2c:	add	x9, x8, #0x1
  406a30:	str	x9, [sp, #24]
  406a34:	mov	w10, #0x0                   	// #0
  406a38:	strb	w10, [x8]
  406a3c:	b	406920 <wcrtomb@plt+0x4010>
  406a40:	sub	sp, sp, #0x40
  406a44:	stp	x29, x30, [sp, #48]
  406a48:	add	x29, sp, #0x30
  406a4c:	stur	x0, [x29, #-8]
  406a50:	stur	x1, [x29, #-16]
  406a54:	ldur	x8, [x29, #-8]
  406a58:	str	x8, [sp, #24]
  406a5c:	ldur	x8, [x29, #-8]
  406a60:	ldur	x9, [x29, #-16]
  406a64:	add	x8, x8, x9
  406a68:	str	x8, [sp, #16]
  406a6c:	str	xzr, [sp, #8]
  406a70:	ldr	x0, [sp, #24]
  406a74:	ldr	x8, [sp, #16]
  406a78:	ldr	x9, [sp, #24]
  406a7c:	subs	x2, x8, x9
  406a80:	mov	w1, #0xa                   	// #10
  406a84:	bl	402770 <memchr@plt>
  406a88:	str	x0, [sp, #24]
  406a8c:	cbz	x0, 406aac <wcrtomb@plt+0x419c>
  406a90:	ldr	x8, [sp, #24]
  406a94:	add	x8, x8, #0x1
  406a98:	str	x8, [sp, #24]
  406a9c:	ldr	x8, [sp, #8]
  406aa0:	add	x8, x8, #0x1
  406aa4:	str	x8, [sp, #8]
  406aa8:	b	406a70 <wcrtomb@plt+0x4160>
  406aac:	ldr	x0, [sp, #8]
  406ab0:	ldp	x29, x30, [sp, #48]
  406ab4:	add	sp, sp, #0x40
  406ab8:	ret
  406abc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406ac0:	add	x8, x8, #0x378
  406ac4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406ac8:	add	x9, x9, #0x370
  406acc:	ldr	x8, [x8]
  406ad0:	str	x8, [x9]
  406ad4:	ret
  406ad8:	mov	w8, #0xffffffff            	// #-1
  406adc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406ae0:	add	x9, x9, #0x4c4
  406ae4:	str	w8, [x9]
  406ae8:	ret
  406aec:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  406af0:	add	x8, x8, #0xc
  406af4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406af8:	add	x9, x9, #0x3b8
  406afc:	adrp	x10, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  406b00:	add	x10, x10, #0x12
  406b04:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406b08:	add	x11, x11, #0x3c0
  406b0c:	str	x8, [x9]
  406b10:	str	x10, [x11]
  406b14:	ret
  406b18:	sub	sp, sp, #0xe0
  406b1c:	stp	x29, x30, [sp, #208]
  406b20:	add	x29, sp, #0xd0
  406b24:	sub	x8, x29, #0x28
  406b28:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  406b2c:	add	x9, x9, #0x8c8
  406b30:	add	x9, x9, #0x3
  406b34:	str	x0, [x8, #24]
  406b38:	str	x1, [x8, #16]
  406b3c:	str	x2, [x8, #8]
  406b40:	ldr	x10, [x8, #24]
  406b44:	ldrb	w0, [x10]
  406b48:	str	x8, [sp, #16]
  406b4c:	str	x9, [sp, #8]
  406b50:	bl	40edd4 <wcrtomb@plt+0xc4c4>
  406b54:	mov	w1, w0
  406b58:	and	x8, x1, #0xff
  406b5c:	ldr	x9, [sp, #8]
  406b60:	ldrsb	w11, [x9, x8]
  406b64:	ldr	x8, [sp, #16]
  406b68:	str	w11, [x8, #4]
  406b6c:	ldr	w11, [x8, #4]
  406b70:	cmp	w11, #0x0
  406b74:	cset	w11, ge  // ge = tcont
  406b78:	tbnz	w11, #0, 406c3c <wcrtomb@plt+0x432c>
  406b7c:	ldr	x8, [sp, #16]
  406b80:	ldr	x1, [x8, #24]
  406b84:	ldr	x2, [x8, #16]
  406b88:	ldr	x3, [x8, #8]
  406b8c:	sub	x0, x29, #0x28
  406b90:	bl	4271dc <wcrtomb@plt+0x248cc>
  406b94:	str	x0, [sp, #32]
  406b98:	ldr	x8, [sp, #32]
  406b9c:	mov	x9, #0x10                  	// #16
  406ba0:	cmp	x9, x8
  406ba4:	b.cc	406bbc <wcrtomb@plt+0x42ac>  // b.lo, b.ul, b.last
  406ba8:	ldr	x8, [sp, #16]
  406bac:	ldr	w0, [x8]
  406bb0:	add	x1, sp, #0x28
  406bb4:	bl	41ca4c <wcrtomb@plt+0x1a13c>
  406bb8:	cbz	w0, 406bcc <wcrtomb@plt+0x42bc>
  406bbc:	mov	w8, #0xffffffff            	// #-1
  406bc0:	ldr	x9, [sp, #16]
  406bc4:	str	w8, [x9, #36]
  406bc8:	b	406c48 <wcrtomb@plt+0x4338>
  406bcc:	ldr	x8, [sp, #32]
  406bd0:	str	w8, [sp, #28]
  406bd4:	ldr	w8, [sp, #28]
  406bd8:	subs	w8, w8, #0x1
  406bdc:	str	w8, [sp, #28]
  406be0:	mov	w9, wzr
  406be4:	cmp	w9, w8
  406be8:	cset	w8, ge  // ge = tcont
  406bec:	tbnz	w8, #0, 406c30 <wcrtomb@plt+0x4320>
  406bf0:	ldr	x8, [sp, #16]
  406bf4:	ldr	x9, [x8, #24]
  406bf8:	ldrsw	x10, [sp, #28]
  406bfc:	add	x9, x9, x10
  406c00:	ldrb	w11, [x9]
  406c04:	strb	w11, [sp, #27]
  406c08:	ldrb	w0, [sp, #27]
  406c0c:	bl	402460 <toupper@plt>
  406c10:	ldrb	w11, [sp, #27]
  406c14:	cmp	w0, w11
  406c18:	b.eq	406c2c <wcrtomb@plt+0x431c>  // b.none
  406c1c:	mov	w8, #0xffffffff            	// #-1
  406c20:	ldr	x9, [sp, #16]
  406c24:	str	w8, [x9, #36]
  406c28:	b	406c48 <wcrtomb@plt+0x4338>
  406c2c:	b	406bd4 <wcrtomb@plt+0x42c4>
  406c30:	ldr	x8, [sp, #32]
  406c34:	ldr	x9, [sp, #16]
  406c38:	str	w8, [x9, #4]
  406c3c:	ldr	x8, [sp, #16]
  406c40:	ldr	w9, [x8, #4]
  406c44:	str	w9, [x8, #36]
  406c48:	ldr	x8, [sp, #16]
  406c4c:	ldr	w0, [x8, #36]
  406c50:	ldp	x29, x30, [sp, #208]
  406c54:	add	sp, sp, #0xe0
  406c58:	ret
  406c5c:	sub	sp, sp, #0x120
  406c60:	stp	x29, x30, [sp, #256]
  406c64:	str	x28, [sp, #272]
  406c68:	add	x29, sp, #0x100
  406c6c:	mov	w8, #0x1                   	// #1
  406c70:	mov	w9, #0x0                   	// #0
  406c74:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406c78:	add	x10, x10, #0x5a4
  406c7c:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406c80:	add	x11, x11, #0x4bc
  406c84:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406c88:	add	x12, x12, #0x508
  406c8c:	mov	w13, #0x1                   	// #1
  406c90:	add	x14, sp, #0x60
  406c94:	stur	w0, [x29, #-8]
  406c98:	and	w13, w1, w13
  406c9c:	sturb	w13, [x29, #-9]
  406ca0:	sturb	w8, [x29, #-25]
  406ca4:	sturb	w9, [x29, #-26]
  406ca8:	ldur	w0, [x29, #-8]
  406cac:	mov	x1, x14
  406cb0:	str	x10, [sp, #48]
  406cb4:	str	x11, [sp, #40]
  406cb8:	str	x12, [sp, #32]
  406cbc:	bl	440bb8 <_obstack_memory_used@@Base+0x19298>
  406cc0:	cbz	w0, 406cd4 <wcrtomb@plt+0x43c4>
  406cc4:	bl	402870 <__errno_location@plt>
  406cc8:	ldr	w0, [x0]
  406ccc:	bl	4072a4 <wcrtomb@plt+0x4994>
  406cd0:	b	40713c <wcrtomb@plt+0x482c>
  406cd4:	ldur	w8, [x29, #-8]
  406cd8:	cbz	w8, 406d04 <wcrtomb@plt+0x43f4>
  406cdc:	ldurb	w8, [x29, #-9]
  406ce0:	and	w0, w8, #0x1
  406ce4:	bl	40730c <wcrtomb@plt+0x49fc>
  406ce8:	tbnz	w0, #0, 406cf0 <wcrtomb@plt+0x43e0>
  406cec:	b	406d04 <wcrtomb@plt+0x43f4>
  406cf0:	ldr	w0, [sp, #112]
  406cf4:	bl	407374 <wcrtomb@plt+0x4a64>
  406cf8:	tbnz	w0, #0, 406d00 <wcrtomb@plt+0x43f0>
  406cfc:	b	406d04 <wcrtomb@plt+0x43f4>
  406d00:	b	40713c <wcrtomb@plt+0x482c>
  406d04:	ldur	w8, [x29, #-8]
  406d08:	cbz	w8, 406d58 <wcrtomb@plt+0x4448>
  406d0c:	ldurb	w8, [x29, #-9]
  406d10:	tbnz	w8, #0, 406d18 <wcrtomb@plt+0x4408>
  406d14:	b	406d58 <wcrtomb@plt+0x4448>
  406d18:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406d1c:	add	x8, x8, #0x5d8
  406d20:	ldr	x0, [x8]
  406d24:	ldr	w9, [sp, #112]
  406d28:	and	w9, w9, #0xf000
  406d2c:	cmp	w9, #0x4, lsl #12
  406d30:	cset	w9, eq  // eq = none
  406d34:	mov	w10, #0x1                   	// #1
  406d38:	tst	w9, #0x1
  406d3c:	cset	w9, ne  // ne = any
  406d40:	and	w1, w10, #0x1
  406d44:	and	w2, w9, #0x1
  406d48:	bl	4073e8 <wcrtomb@plt+0x4ad8>
  406d4c:	tbnz	w0, #0, 406d54 <wcrtomb@plt+0x4444>
  406d50:	b	406d58 <wcrtomb@plt+0x4448>
  406d54:	b	40713c <wcrtomb@plt+0x482c>
  406d58:	ldr	x8, [sp, #48]
  406d5c:	ldr	w9, [x8]
  406d60:	cmp	w9, #0x0
  406d64:	cset	w9, ge  // ge = tcont
  406d68:	tbnz	w9, #0, 406d94 <wcrtomb@plt+0x4484>
  406d6c:	ldr	w8, [sp, #112]
  406d70:	and	w8, w8, #0xf000
  406d74:	cmp	w8, #0x4, lsl #12
  406d78:	cset	w8, eq  // eq = none
  406d7c:	mov	w9, #0x1                   	// #1
  406d80:	eor	w8, w8, #0x1
  406d84:	eor	w8, w8, w9
  406d88:	and	w8, w8, #0x1
  406d8c:	ldr	x10, [sp, #48]
  406d90:	str	w8, [x10]
  406d94:	ldur	w8, [x29, #-8]
  406d98:	cbz	w8, 406ecc <wcrtomb@plt+0x45bc>
  406d9c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406da0:	add	x8, x8, #0x360
  406da4:	ldr	w9, [x8]
  406da8:	cmp	w9, #0x3
  406dac:	b.ne	406ecc <wcrtomb@plt+0x45bc>  // b.any
  406db0:	ldr	w8, [sp, #112]
  406db4:	and	w8, w8, #0xf000
  406db8:	cmp	w8, #0x4, lsl #12
  406dbc:	b.ne	406ecc <wcrtomb@plt+0x45bc>  // b.any
  406dc0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406dc4:	add	x8, x8, #0x364
  406dc8:	ldr	w9, [x8]
  406dcc:	ldurb	w10, [x29, #-9]
  406dd0:	mov	w11, #0x1                   	// #1
  406dd4:	mov	w12, wzr
  406dd8:	tst	w10, #0x1
  406ddc:	csel	w10, w12, w11, ne  // ne = any
  406de0:	bic	w9, w9, w10
  406de4:	str	w9, [sp, #76]
  406de8:	ldur	w0, [x29, #-8]
  406dec:	bl	4025a0 <close@plt>
  406df0:	cbz	w0, 406e00 <wcrtomb@plt+0x44f0>
  406df4:	bl	402870 <__errno_location@plt>
  406df8:	ldr	w0, [x0]
  406dfc:	bl	4072a4 <wcrtomb@plt+0x4994>
  406e00:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406e04:	add	x8, x8, #0x5d8
  406e08:	ldr	x8, [x8]
  406e0c:	add	x9, sp, #0x38
  406e10:	str	x8, [sp, #56]
  406e14:	mov	x8, xzr
  406e18:	str	x8, [x9, #8]
  406e1c:	ldr	w1, [sp, #76]
  406e20:	mov	x0, x9
  406e24:	mov	x2, x8
  406e28:	bl	423a9c <wcrtomb@plt+0x2118c>
  406e2c:	str	x0, [sp, #88]
  406e30:	ldr	x8, [sp, #88]
  406e34:	cbnz	x8, 406e3c <wcrtomb@plt+0x452c>
  406e38:	bl	423394 <wcrtomb@plt+0x20a84>
  406e3c:	ldr	x0, [sp, #88]
  406e40:	bl	424a9c <wcrtomb@plt+0x2218c>
  406e44:	str	x0, [sp, #80]
  406e48:	cbz	x0, 406e8c <wcrtomb@plt+0x457c>
  406e4c:	ldr	x0, [sp, #88]
  406e50:	ldr	x1, [sp, #80]
  406e54:	ldurb	w8, [x29, #-9]
  406e58:	mov	w9, #0x1                   	// #1
  406e5c:	and	w2, w8, #0x1
  406e60:	str	w9, [sp, #28]
  406e64:	bl	4074fc <wcrtomb@plt+0x4bec>
  406e68:	and	w8, w0, #0x1
  406e6c:	ldurb	w9, [x29, #-25]
  406e70:	and	w9, w9, #0x1
  406e74:	tst	w9, w8
  406e78:	cset	w8, ne  // ne = any
  406e7c:	ldr	w9, [sp, #28]
  406e80:	and	w8, w8, w9
  406e84:	sturb	w8, [x29, #-25]
  406e88:	b	406e3c <wcrtomb@plt+0x452c>
  406e8c:	bl	402870 <__errno_location@plt>
  406e90:	ldr	w8, [x0]
  406e94:	cbz	w8, 406ea4 <wcrtomb@plt+0x4594>
  406e98:	bl	402870 <__errno_location@plt>
  406e9c:	ldr	w0, [x0]
  406ea0:	bl	4072a4 <wcrtomb@plt+0x4994>
  406ea4:	ldr	x0, [sp, #88]
  406ea8:	bl	424824 <wcrtomb@plt+0x21f14>
  406eac:	cbz	w0, 406ebc <wcrtomb@plt+0x45ac>
  406eb0:	bl	402870 <__errno_location@plt>
  406eb4:	ldr	w0, [x0]
  406eb8:	bl	4072a4 <wcrtomb@plt+0x4994>
  406ebc:	ldurb	w8, [x29, #-25]
  406ec0:	and	w8, w8, #0x1
  406ec4:	sturb	w8, [x29, #-1]
  406ec8:	b	407168 <wcrtomb@plt+0x4858>
  406ecc:	ldur	w8, [x29, #-8]
  406ed0:	cbz	w8, 406f38 <wcrtomb@plt+0x4628>
  406ed4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406ed8:	add	x8, x8, #0x360
  406edc:	ldr	w9, [x8]
  406ee0:	cmp	w9, #0x4
  406ee4:	b.ne	406ef8 <wcrtomb@plt+0x45e8>  // b.any
  406ee8:	ldr	w8, [sp, #112]
  406eec:	and	w8, w8, #0xf000
  406ef0:	cmp	w8, #0x4, lsl #12
  406ef4:	b.eq	406f34 <wcrtomb@plt+0x4624>  // b.none
  406ef8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406efc:	add	x8, x8, #0x4ac
  406f00:	ldr	w9, [x8]
  406f04:	cmp	w9, #0x2
  406f08:	b.eq	406f24 <wcrtomb@plt+0x4614>  // b.none
  406f0c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406f10:	add	x8, x8, #0x4ac
  406f14:	ldr	w9, [x8]
  406f18:	cbnz	w9, 406f38 <wcrtomb@plt+0x4628>
  406f1c:	ldurb	w8, [x29, #-9]
  406f20:	tbnz	w8, #0, 406f38 <wcrtomb@plt+0x4628>
  406f24:	ldr	w0, [sp, #112]
  406f28:	bl	407374 <wcrtomb@plt+0x4a64>
  406f2c:	tbnz	w0, #0, 406f34 <wcrtomb@plt+0x4624>
  406f30:	b	406f38 <wcrtomb@plt+0x4628>
  406f34:	b	40713c <wcrtomb@plt+0x482c>
  406f38:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406f3c:	add	x8, x8, #0x58a
  406f40:	ldrb	w9, [x8]
  406f44:	tbnz	w9, #0, 407000 <wcrtomb@plt+0x46f0>
  406f48:	ldr	x8, [sp, #40]
  406f4c:	ldr	w9, [x8]
  406f50:	cbnz	w9, 407000 <wcrtomb@plt+0x46f0>
  406f54:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406f58:	add	x8, x8, #0x490
  406f5c:	ldr	x8, [x8]
  406f60:	mov	x9, #0x1                   	// #1
  406f64:	cmp	x9, x8
  406f68:	b.ge	407000 <wcrtomb@plt+0x46f0>  // b.tcont
  406f6c:	ldr	w8, [sp, #112]
  406f70:	and	w8, w8, #0xf000
  406f74:	cmp	w8, #0x8, lsl #12
  406f78:	b.ne	407000 <wcrtomb@plt+0x46f0>  // b.any
  406f7c:	ldr	x8, [sp, #104]
  406f80:	ldr	x9, [sp, #32]
  406f84:	ldr	x10, [x9, #8]
  406f88:	cmp	x8, x10
  406f8c:	b.ne	407000 <wcrtomb@plt+0x46f0>  // b.any
  406f90:	ldr	x8, [sp, #96]
  406f94:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406f98:	add	x9, x9, #0x508
  406f9c:	ldr	x9, [x9]
  406fa0:	cmp	x8, x9
  406fa4:	b.ne	407000 <wcrtomb@plt+0x46f0>  // b.any
  406fa8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406fac:	add	x8, x8, #0x4c2
  406fb0:	ldrb	w9, [x8]
  406fb4:	tbnz	w9, #0, 406fec <wcrtomb@plt+0x46dc>
  406fb8:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  406fbc:	add	x0, x0, #0x26
  406fc0:	bl	4028b0 <gettext@plt>
  406fc4:	str	x0, [sp, #16]
  406fc8:	bl	4078f8 <wcrtomb@plt+0x4fe8>
  406fcc:	bl	422554 <wcrtomb@plt+0x1fc44>
  406fd0:	mov	w8, wzr
  406fd4:	str	x0, [sp, #8]
  406fd8:	mov	w0, w8
  406fdc:	mov	w1, w8
  406fe0:	ldr	x2, [sp, #16]
  406fe4:	ldr	x3, [sp, #8]
  406fe8:	bl	402330 <error@plt>
  406fec:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  406ff0:	add	x8, x8, #0x5c1
  406ff4:	mov	w9, #0x1                   	// #1
  406ff8:	strb	w9, [x8]
  406ffc:	b	40713c <wcrtomb@plt+0x482c>
  407000:	ldur	w0, [x29, #-8]
  407004:	add	x1, sp, #0x60
  407008:	sub	x2, x29, #0x1a
  40700c:	bl	407940 <wcrtomb@plt+0x5030>
  407010:	stur	x0, [x29, #-24]
  407014:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407018:	add	x8, x8, #0x4b7
  40701c:	ldrb	w9, [x8]
  407020:	tbnz	w9, #0, 407028 <wcrtomb@plt+0x4718>
  407024:	b	407088 <wcrtomb@plt+0x4778>
  407028:	ldr	x8, [sp, #48]
  40702c:	ldr	w9, [x8]
  407030:	cbz	w9, 407060 <wcrtomb@plt+0x4750>
  407034:	bl	408118 <wcrtomb@plt+0x5808>
  407038:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40703c:	add	x8, x8, #0x488
  407040:	ldr	w9, [x8]
  407044:	cbz	w9, 407054 <wcrtomb@plt+0x4744>
  407048:	mov	w0, #0x3a                  	// #58
  40704c:	bl	408158 <wcrtomb@plt+0x5848>
  407050:	b	407060 <wcrtomb@plt+0x4750>
  407054:	mov	w8, wzr
  407058:	mov	w0, w8
  40705c:	bl	40819c <wcrtomb@plt+0x588c>
  407060:	ldur	x1, [x29, #-24]
  407064:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  407068:	add	x0, x0, #0x47
  40706c:	bl	4081e0 <wcrtomb@plt+0x58d0>
  407070:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407074:	add	x8, x8, #0x4f0
  407078:	ldrb	w9, [x8]
  40707c:	tbnz	w9, #0, 407084 <wcrtomb@plt+0x4774>
  407080:	b	407088 <wcrtomb@plt+0x4778>
  407084:	bl	4082b4 <wcrtomb@plt+0x59a4>
  407088:	ldur	x8, [x29, #-24]
  40708c:	cmp	x8, #0x0
  407090:	cset	w9, ne  // ne = any
  407094:	mov	w10, #0x1                   	// #1
  407098:	eor	w9, w9, #0x1
  40709c:	and	w9, w9, #0x1
  4070a0:	ldr	x8, [sp, #40]
  4070a4:	ldr	w11, [x8]
  4070a8:	cmp	w11, #0x2
  4070ac:	cset	w11, eq  // eq = none
  4070b0:	eor	w11, w11, w10
  4070b4:	and	w11, w11, #0x1
  4070b8:	cmp	w9, w11
  4070bc:	cset	w9, eq  // eq = none
  4070c0:	and	w9, w9, w10
  4070c4:	sturb	w9, [x29, #-25]
  4070c8:	ldr	w9, [x8]
  4070cc:	cbz	w9, 4070e4 <wcrtomb@plt+0x47d4>
  4070d0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4070d4:	add	x8, x8, #0x588
  4070d8:	ldrb	w9, [x8]
  4070dc:	tbnz	w9, #0, 4070e4 <wcrtomb@plt+0x47d4>
  4070e0:	b	4070fc <wcrtomb@plt+0x47ec>
  4070e4:	ldur	w0, [x29, #-8]
  4070e8:	ldurb	w8, [x29, #-26]
  4070ec:	add	x1, sp, #0x60
  4070f0:	and	w2, w8, #0x1
  4070f4:	bl	4082ec <wcrtomb@plt+0x59dc>
  4070f8:	b	40713c <wcrtomb@plt+0x482c>
  4070fc:	ldurb	w8, [x29, #-25]
  407100:	and	w8, w8, #0x1
  407104:	cbnz	w8, 40713c <wcrtomb@plt+0x482c>
  407108:	bl	408118 <wcrtomb@plt+0x5808>
  40710c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407110:	add	x8, x8, #0x488
  407114:	ldr	w9, [x8]
  407118:	mov	w10, #0xa                   	// #10
  40711c:	and	w0, w10, w9
  407120:	bl	40819c <wcrtomb@plt+0x588c>
  407124:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407128:	add	x8, x8, #0x4f0
  40712c:	ldrb	w9, [x8]
  407130:	tbnz	w9, #0, 407138 <wcrtomb@plt+0x4828>
  407134:	b	40713c <wcrtomb@plt+0x482c>
  407138:	bl	4082b4 <wcrtomb@plt+0x59a4>
  40713c:	ldur	w8, [x29, #-8]
  407140:	cbz	w8, 40715c <wcrtomb@plt+0x484c>
  407144:	ldur	w0, [x29, #-8]
  407148:	bl	4025a0 <close@plt>
  40714c:	cbz	w0, 40715c <wcrtomb@plt+0x484c>
  407150:	bl	402870 <__errno_location@plt>
  407154:	ldr	w0, [x0]
  407158:	bl	4072a4 <wcrtomb@plt+0x4994>
  40715c:	ldurb	w8, [x29, #-25]
  407160:	and	w8, w8, #0x1
  407164:	sturb	w8, [x29, #-1]
  407168:	ldurb	w8, [x29, #-1]
  40716c:	and	w0, w8, #0x1
  407170:	ldr	x28, [sp, #272]
  407174:	ldp	x29, x30, [sp, #256]
  407178:	add	sp, sp, #0x120
  40717c:	ret
  407180:	sub	sp, sp, #0x40
  407184:	stp	x29, x30, [sp, #48]
  407188:	add	x29, sp, #0x30
  40718c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407190:	add	x8, x8, #0x4b8
  407194:	mov	w9, wzr
  407198:	mov	w10, #0x100                 	// #256
  40719c:	mov	w11, #0x8000                	// #32768
  4071a0:	mov	w12, #0x800                 	// #2048
  4071a4:	stur	w0, [x29, #-8]
  4071a8:	stur	x1, [x29, #-16]
  4071ac:	mov	w13, #0x1                   	// #1
  4071b0:	and	w14, w2, w13
  4071b4:	sturb	w14, [x29, #-17]
  4071b8:	and	w13, w3, w13
  4071bc:	sturb	w13, [x29, #-18]
  4071c0:	ldrb	w13, [x8]
  4071c4:	tst	w13, #0x1
  4071c8:	csel	w13, w9, w9, ne  // ne = any
  4071cc:	orr	w10, w10, w13
  4071d0:	ldurb	w13, [x29, #-17]
  4071d4:	tst	w13, #0x1
  4071d8:	csel	w11, w9, w11, ne  // ne = any
  4071dc:	orr	w10, w10, w11
  4071e0:	ldurb	w11, [x29, #-18]
  4071e4:	and	w0, w11, #0x1
  4071e8:	str	w9, [sp, #16]
  4071ec:	str	w12, [sp, #12]
  4071f0:	str	w10, [sp, #8]
  4071f4:	bl	40730c <wcrtomb@plt+0x49fc>
  4071f8:	tst	w0, #0x1
  4071fc:	ldr	w9, [sp, #12]
  407200:	ldr	w10, [sp, #16]
  407204:	csel	w11, w9, w10, ne  // ne = any
  407208:	ldr	w12, [sp, #8]
  40720c:	orr	w11, w12, w11
  407210:	str	w11, [sp, #24]
  407214:	ldur	w0, [x29, #-8]
  407218:	ldur	x1, [x29, #-16]
  40721c:	ldr	w2, [sp, #24]
  407220:	bl	42034c <wcrtomb@plt+0x1da3c>
  407224:	str	w0, [sp, #20]
  407228:	ldr	w9, [sp, #20]
  40722c:	cmp	w9, #0x0
  407230:	cset	w9, ge  // ge = tcont
  407234:	tbnz	w9, #0, 40726c <wcrtomb@plt+0x495c>
  407238:	ldurb	w8, [x29, #-17]
  40723c:	tbnz	w8, #0, 407250 <wcrtomb@plt+0x4940>
  407240:	bl	402870 <__errno_location@plt>
  407244:	ldr	w0, [x0]
  407248:	bl	40a3b4 <wcrtomb@plt+0x7aa4>
  40724c:	tbnz	w0, #0, 40725c <wcrtomb@plt+0x494c>
  407250:	bl	402870 <__errno_location@plt>
  407254:	ldr	w0, [x0]
  407258:	bl	4072a4 <wcrtomb@plt+0x4994>
  40725c:	mov	w8, #0x1                   	// #1
  407260:	and	w8, w8, #0x1
  407264:	sturb	w8, [x29, #-1]
  407268:	b	407290 <wcrtomb@plt+0x4980>
  40726c:	ldr	w0, [sp, #20]
  407270:	ldurb	w8, [x29, #-18]
  407274:	mov	w9, #0x1                   	// #1
  407278:	and	w1, w8, #0x1
  40727c:	str	w9, [sp, #4]
  407280:	bl	406c5c <wcrtomb@plt+0x434c>
  407284:	ldr	w8, [sp, #4]
  407288:	and	w9, w0, w8
  40728c:	sturb	w9, [x29, #-1]
  407290:	ldurb	w8, [x29, #-1]
  407294:	and	w0, w8, #0x1
  407298:	ldp	x29, x30, [sp, #48]
  40729c:	add	sp, sp, #0x40
  4072a0:	ret
  4072a4:	sub	sp, sp, #0x20
  4072a8:	stp	x29, x30, [sp, #16]
  4072ac:	add	x29, sp, #0x10
  4072b0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4072b4:	add	x8, x8, #0x4c2
  4072b8:	stur	w0, [x29, #-4]
  4072bc:	ldrb	w9, [x8]
  4072c0:	tbnz	w9, #0, 4072f0 <wcrtomb@plt+0x49e0>
  4072c4:	ldur	w1, [x29, #-4]
  4072c8:	str	w1, [sp, #8]
  4072cc:	bl	4078f8 <wcrtomb@plt+0x4fe8>
  4072d0:	mov	w8, wzr
  4072d4:	str	x0, [sp]
  4072d8:	mov	w0, w8
  4072dc:	ldr	w1, [sp, #8]
  4072e0:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4072e4:	add	x2, x2, #0x122
  4072e8:	ldr	x3, [sp]
  4072ec:	bl	402330 <error@plt>
  4072f0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4072f4:	add	x8, x8, #0x5c1
  4072f8:	mov	w9, #0x1                   	// #1
  4072fc:	strb	w9, [x8]
  407300:	ldp	x29, x30, [sp, #16]
  407304:	add	sp, sp, #0x20
  407308:	ret
  40730c:	sub	sp, sp, #0x10
  407310:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407314:	add	x8, x8, #0x4ac
  407318:	and	w9, w0, #0x1
  40731c:	strb	w9, [sp, #15]
  407320:	ldr	w9, [x8]
  407324:	mov	w10, #0x1                   	// #1
  407328:	cmp	w9, #0x2
  40732c:	str	w10, [sp, #8]
  407330:	b.eq	407364 <wcrtomb@plt+0x4a54>  // b.none
  407334:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407338:	add	x8, x8, #0x4ac
  40733c:	ldr	w9, [x8]
  407340:	cmp	w9, #0x0
  407344:	cset	w9, eq  // eq = none
  407348:	and	w9, w9, #0x1
  40734c:	ldrb	w10, [sp, #15]
  407350:	eor	w10, w10, #0x1
  407354:	and	w10, w10, #0x1
  407358:	tst	w9, w10
  40735c:	cset	w9, ne  // ne = any
  407360:	str	w9, [sp, #8]
  407364:	ldr	w8, [sp, #8]
  407368:	and	w0, w8, #0x1
  40736c:	add	sp, sp, #0x10
  407370:	ret
  407374:	sub	sp, sp, #0x10
  407378:	str	w0, [sp, #12]
  40737c:	ldr	w8, [sp, #12]
  407380:	and	w8, w8, #0xf000
  407384:	mov	w9, #0x1                   	// #1
  407388:	cmp	w8, #0x2, lsl #12
  40738c:	str	w9, [sp, #8]
  407390:	b.eq	4073d8 <wcrtomb@plt+0x4ac8>  // b.none
  407394:	ldr	w8, [sp, #12]
  407398:	and	w8, w8, #0xf000
  40739c:	mov	w9, #0x1                   	// #1
  4073a0:	cmp	w8, #0x6, lsl #12
  4073a4:	str	w9, [sp, #8]
  4073a8:	b.eq	4073d8 <wcrtomb@plt+0x4ac8>  // b.none
  4073ac:	ldr	w8, [sp, #12]
  4073b0:	and	w8, w8, #0xf000
  4073b4:	mov	w9, #0x1                   	// #1
  4073b8:	cmp	w8, #0xc, lsl #12
  4073bc:	str	w9, [sp, #8]
  4073c0:	b.eq	4073d8 <wcrtomb@plt+0x4ac8>  // b.none
  4073c4:	ldr	w8, [sp, #12]
  4073c8:	and	w8, w8, #0xf000
  4073cc:	cmp	w8, #0x1, lsl #12
  4073d0:	cset	w8, eq  // eq = none
  4073d4:	str	w8, [sp, #8]
  4073d8:	ldr	w8, [sp, #8]
  4073dc:	and	w0, w8, #0x1
  4073e0:	add	sp, sp, #0x10
  4073e4:	ret
  4073e8:	sub	sp, sp, #0x40
  4073ec:	stp	x29, x30, [sp, #48]
  4073f0:	add	x29, sp, #0x30
  4073f4:	stur	x0, [x29, #-16]
  4073f8:	mov	w8, #0x1                   	// #1
  4073fc:	and	w8, w1, w8
  407400:	sturb	w8, [x29, #-17]
  407404:	and	w8, w2, #0x1
  407408:	sturb	w8, [x29, #-18]
  40740c:	ldurb	w8, [x29, #-18]
  407410:	tbnz	w8, #0, 407424 <wcrtomb@plt+0x4b14>
  407414:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407418:	add	x8, x8, #0x4d0
  40741c:	str	x8, [sp, #16]
  407420:	b	407484 <wcrtomb@plt+0x4b74>
  407424:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407428:	add	x8, x8, #0x360
  40742c:	ldr	w9, [x8]
  407430:	cmp	w9, #0x4
  407434:	b.ne	407448 <wcrtomb@plt+0x4b38>  // b.any
  407438:	mov	w8, #0x1                   	// #1
  40743c:	and	w8, w8, #0x1
  407440:	sturb	w8, [x29, #-1]
  407444:	b	4074e8 <wcrtomb@plt+0x4bd8>
  407448:	ldurb	w8, [x29, #-17]
  40744c:	tbnz	w8, #0, 407454 <wcrtomb@plt+0x4b44>
  407450:	b	407478 <wcrtomb@plt+0x4b68>
  407454:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407458:	add	x8, x8, #0x5c0
  40745c:	ldrb	w9, [x8]
  407460:	tbnz	w9, #0, 407468 <wcrtomb@plt+0x4b58>
  407464:	b	407478 <wcrtomb@plt+0x4b68>
  407468:	mov	w8, wzr
  40746c:	and	w8, w8, #0x1
  407470:	sturb	w8, [x29, #-1]
  407474:	b	4074e8 <wcrtomb@plt+0x4bd8>
  407478:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40747c:	add	x8, x8, #0x4e0
  407480:	str	x8, [sp, #16]
  407484:	ldr	x8, [sp, #16]
  407488:	ldurb	w9, [x29, #-17]
  40748c:	mov	w0, w9
  407490:	and	x10, x0, #0x1
  407494:	mov	x11, #0x8                   	// #8
  407498:	mul	x10, x11, x10
  40749c:	add	x8, x8, x10
  4074a0:	ldr	x8, [x8]
  4074a4:	mov	w9, #0x0                   	// #0
  4074a8:	str	w9, [sp, #12]
  4074ac:	cbz	x8, 4074dc <wcrtomb@plt+0x4bcc>
  4074b0:	ldr	x8, [sp, #16]
  4074b4:	ldurb	w9, [x29, #-17]
  4074b8:	mov	w0, w9
  4074bc:	and	x10, x0, #0x1
  4074c0:	mov	x11, #0x8                   	// #8
  4074c4:	mul	x10, x11, x10
  4074c8:	add	x8, x8, x10
  4074cc:	ldr	x0, [x8]
  4074d0:	ldur	x1, [x29, #-16]
  4074d4:	bl	41d18c <wcrtomb@plt+0x1a87c>
  4074d8:	str	w0, [sp, #12]
  4074dc:	ldr	w8, [sp, #12]
  4074e0:	and	w8, w8, #0x1
  4074e4:	sturb	w8, [x29, #-1]
  4074e8:	ldurb	w8, [x29, #-1]
  4074ec:	and	w0, w8, #0x1
  4074f0:	ldp	x29, x30, [sp, #48]
  4074f4:	add	sp, sp, #0x40
  4074f8:	ret
  4074fc:	sub	sp, sp, #0x120
  407500:	stp	x29, x30, [sp, #256]
  407504:	str	x28, [sp, #272]
  407508:	add	x29, sp, #0x100
  40750c:	sub	x8, x29, #0x28
  407510:	mov	w9, #0x1                   	// #1
  407514:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407518:	add	x10, x10, #0x5d8
  40751c:	str	x0, [x8, #24]
  407520:	str	x1, [x8, #16]
  407524:	and	w11, w2, w9
  407528:	sturb	w11, [x29, #-25]
  40752c:	ldr	x12, [x8, #16]
  407530:	ldr	x12, [x12, #88]
  407534:	cmp	x12, #0x0
  407538:	cset	w11, eq  // eq = none
  40753c:	and	w11, w11, #0x1
  407540:	ldurb	w13, [x29, #-25]
  407544:	and	w13, w13, #0x1
  407548:	tst	w13, w11
  40754c:	cset	w11, ne  // ne = any
  407550:	and	w9, w11, w9
  407554:	sturb	w9, [x29, #-25]
  407558:	ldr	x12, [x8, #16]
  40755c:	ldrh	w9, [x12, #108]
  407560:	cmp	w9, #0x6
  407564:	str	x8, [sp, #72]
  407568:	str	x10, [sp, #64]
  40756c:	b.ne	407580 <wcrtomb@plt+0x4c70>  // b.any
  407570:	mov	w8, #0x1                   	// #1
  407574:	and	w8, w8, #0x1
  407578:	sturb	w8, [x29, #-1]
  40757c:	b	4078e0 <wcrtomb@plt+0x4fd0>
  407580:	ldurb	w8, [x29, #-25]
  407584:	tbnz	w8, #0, 407628 <wcrtomb@plt+0x4d18>
  407588:	ldr	x8, [sp, #72]
  40758c:	ldr	x9, [x8, #16]
  407590:	add	x0, x9, #0xf8
  407594:	ldr	x9, [x8, #16]
  407598:	ldrh	w10, [x9, #108]
  40759c:	mov	w11, #0x1                   	// #1
  4075a0:	cmp	w10, #0x1
  4075a4:	str	x0, [sp, #56]
  4075a8:	str	w11, [sp, #52]
  4075ac:	b.eq	4075e4 <wcrtomb@plt+0x4cd4>  // b.none
  4075b0:	ldr	x8, [sp, #72]
  4075b4:	ldr	x9, [x8, #16]
  4075b8:	ldrh	w10, [x9, #108]
  4075bc:	mov	w11, #0x1                   	// #1
  4075c0:	cmp	w10, #0x2
  4075c4:	str	w11, [sp, #52]
  4075c8:	b.eq	4075e4 <wcrtomb@plt+0x4cd4>  // b.none
  4075cc:	ldr	x8, [sp, #72]
  4075d0:	ldr	x9, [x8, #16]
  4075d4:	ldrh	w10, [x9, #108]
  4075d8:	cmp	w10, #0x4
  4075dc:	cset	w10, eq  // eq = none
  4075e0:	str	w10, [sp, #52]
  4075e4:	ldr	w8, [sp, #52]
  4075e8:	ldr	x0, [sp, #56]
  4075ec:	mov	w9, wzr
  4075f0:	and	w1, w9, #0x1
  4075f4:	and	w2, w8, #0x1
  4075f8:	bl	4073e8 <wcrtomb@plt+0x4ad8>
  4075fc:	tbnz	w0, #0, 407604 <wcrtomb@plt+0x4cf4>
  407600:	b	407628 <wcrtomb@plt+0x4d18>
  407604:	ldr	x8, [sp, #72]
  407608:	ldr	x0, [x8, #24]
  40760c:	ldr	x1, [x8, #16]
  407610:	mov	w2, #0x4                   	// #4
  407614:	bl	426938 <wcrtomb@plt+0x24028>
  407618:	mov	w9, #0x1                   	// #1
  40761c:	and	w9, w9, #0x1
  407620:	sturb	w9, [x29, #-1]
  407624:	b	4078e0 <wcrtomb@plt+0x4fd0>
  407628:	ldr	x8, [sp, #72]
  40762c:	ldr	x9, [x8, #16]
  407630:	ldr	x9, [x9, #56]
  407634:	ldr	x10, [sp, #64]
  407638:	str	x9, [x10]
  40763c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407640:	add	x9, x9, #0x5c0
  407644:	ldrb	w11, [x9]
  407648:	tbnz	w11, #0, 407650 <wcrtomb@plt+0x4d40>
  40764c:	b	407670 <wcrtomb@plt+0x4d60>
  407650:	ldr	x8, [sp, #64]
  407654:	ldr	x9, [x8]
  407658:	ldrb	w10, [x9, #1]
  40765c:	cbz	w10, 407670 <wcrtomb@plt+0x4d60>
  407660:	ldr	x8, [sp, #64]
  407664:	ldr	x9, [x8]
  407668:	add	x9, x9, #0x2
  40766c:	str	x9, [x8]
  407670:	ldr	x8, [sp, #72]
  407674:	ldr	x9, [x8, #24]
  407678:	ldr	w10, [x9, #72]
  40767c:	and	w10, w10, #0x2
  407680:	mov	w11, #0x1                   	// #1
  407684:	str	w11, [sp, #48]
  407688:	cbnz	w10, 4076b8 <wcrtomb@plt+0x4da8>
  40768c:	ldr	x8, [sp, #72]
  407690:	ldr	x9, [x8, #24]
  407694:	ldr	w10, [x9, #72]
  407698:	and	w10, w10, #0x1
  40769c:	mov	w11, #0x0                   	// #0
  4076a0:	str	w11, [sp, #44]
  4076a4:	cbz	w10, 4076b0 <wcrtomb@plt+0x4da0>
  4076a8:	ldurb	w8, [x29, #-25]
  4076ac:	str	w8, [sp, #44]
  4076b0:	ldr	w8, [sp, #44]
  4076b4:	str	w8, [sp, #48]
  4076b8:	ldr	w8, [sp, #48]
  4076bc:	mov	w9, #0x1                   	// #1
  4076c0:	and	w8, w8, w9
  4076c4:	sturb	w8, [x29, #-26]
  4076c8:	ldr	x10, [sp, #72]
  4076cc:	ldr	x11, [x10, #16]
  4076d0:	ldrh	w8, [x11, #108]
  4076d4:	subs	w8, w8, #0x1
  4076d8:	mov	w11, w8
  4076dc:	ubfx	x11, x11, #0, #32
  4076e0:	cmp	x11, #0xd
  4076e4:	str	x11, [sp, #32]
  4076e8:	b.hi	4078a0 <wcrtomb@plt+0x4f90>  // b.pmore
  4076ec:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x196e0>
  4076f0:	add	x8, x8, #0x3f8
  4076f4:	ldr	x11, [sp, #32]
  4076f8:	ldrsw	x10, [x8, x11, lsl #2]
  4076fc:	add	x9, x8, x10
  407700:	br	x9
  407704:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407708:	add	x8, x8, #0x360
  40770c:	ldr	w9, [x8]
  407710:	cmp	w9, #0x3
  407714:	b.ne	407728 <wcrtomb@plt+0x4e18>  // b.any
  407718:	mov	w8, #0x1                   	// #1
  40771c:	and	w8, w8, #0x1
  407720:	sturb	w8, [x29, #-1]
  407724:	b	4078e0 <wcrtomb@plt+0x4fd0>
  407728:	ldr	x8, [sp, #72]
  40772c:	ldr	x0, [x8, #24]
  407730:	ldr	x1, [x8, #16]
  407734:	mov	w2, #0x4                   	// #4
  407738:	bl	426938 <wcrtomb@plt+0x24028>
  40773c:	b	4078a4 <wcrtomb@plt+0x4f94>
  407740:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407744:	add	x8, x8, #0x4c2
  407748:	ldrb	w9, [x8]
  40774c:	tbnz	w9, #0, 40779c <wcrtomb@plt+0x4e8c>
  407750:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  407754:	add	x0, x0, #0x4c
  407758:	bl	4028b0 <gettext@plt>
  40775c:	ldr	x8, [sp, #64]
  407760:	ldr	x3, [x8]
  407764:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  407768:	add	x9, x9, #0x5c
  40776c:	str	x0, [sp, #24]
  407770:	mov	x0, x9
  407774:	str	x3, [sp, #16]
  407778:	bl	4028b0 <gettext@plt>
  40777c:	mov	w10, wzr
  407780:	str	x0, [sp, #8]
  407784:	mov	w0, w10
  407788:	mov	w1, w10
  40778c:	ldr	x2, [sp, #24]
  407790:	ldr	x3, [sp, #16]
  407794:	ldr	x4, [sp, #8]
  407798:	bl	402330 <error@plt>
  40779c:	mov	w8, #0x1                   	// #1
  4077a0:	and	w8, w8, #0x1
  4077a4:	sturb	w8, [x29, #-1]
  4077a8:	b	4078e0 <wcrtomb@plt+0x4fd0>
  4077ac:	ldr	x8, [sp, #72]
  4077b0:	ldr	x9, [x8, #16]
  4077b4:	ldr	w0, [x9, #64]
  4077b8:	bl	4072a4 <wcrtomb@plt+0x4994>
  4077bc:	mov	w10, #0x1                   	// #1
  4077c0:	and	w10, w10, #0x1
  4077c4:	sturb	w10, [x29, #-1]
  4077c8:	b	4078e0 <wcrtomb@plt+0x4fd0>
  4077cc:	ldurb	w8, [x29, #-25]
  4077d0:	and	w0, w8, #0x1
  4077d4:	bl	40730c <wcrtomb@plt+0x49fc>
  4077d8:	tbnz	w0, #0, 4077e0 <wcrtomb@plt+0x4ed0>
  4077dc:	b	407888 <wcrtomb@plt+0x4f78>
  4077e0:	ldr	x8, [sp, #72]
  4077e4:	ldr	x9, [x8, #16]
  4077e8:	add	x9, x9, #0x78
  4077ec:	str	x9, [x8]
  4077f0:	ldr	x9, [x8]
  4077f4:	ldr	w10, [x9, #16]
  4077f8:	cbnz	w10, 407860 <wcrtomb@plt+0x4f50>
  4077fc:	ldurb	w8, [x29, #-26]
  407800:	mov	w9, #0x100                 	// #256
  407804:	mov	w10, wzr
  407808:	tst	w8, #0x1
  40780c:	csel	w8, w10, w9, ne  // ne = any
  407810:	str	w8, [sp, #84]
  407814:	ldr	x11, [sp, #72]
  407818:	ldr	x12, [x11, #24]
  40781c:	ldr	w0, [x12, #44]
  407820:	ldr	x12, [x11, #16]
  407824:	ldr	x1, [x12, #48]
  407828:	ldr	w3, [sp, #84]
  40782c:	add	x2, sp, #0x58
  407830:	bl	440bd8 <_obstack_memory_used@@Base+0x192b8>
  407834:	cbz	w0, 407854 <wcrtomb@plt+0x4f44>
  407838:	bl	402870 <__errno_location@plt>
  40783c:	ldr	w0, [x0]
  407840:	bl	4072a4 <wcrtomb@plt+0x4994>
  407844:	mov	w8, #0x1                   	// #1
  407848:	and	w8, w8, #0x1
  40784c:	sturb	w8, [x29, #-1]
  407850:	b	4078e0 <wcrtomb@plt+0x4fd0>
  407854:	add	x8, sp, #0x58
  407858:	ldr	x9, [sp, #72]
  40785c:	str	x8, [x9]
  407860:	ldr	x8, [sp, #72]
  407864:	ldr	x9, [x8]
  407868:	ldr	w0, [x9, #16]
  40786c:	bl	407374 <wcrtomb@plt+0x4a64>
  407870:	tbnz	w0, #0, 407878 <wcrtomb@plt+0x4f68>
  407874:	b	407888 <wcrtomb@plt+0x4f78>
  407878:	mov	w8, #0x1                   	// #1
  40787c:	and	w8, w8, #0x1
  407880:	sturb	w8, [x29, #-1]
  407884:	b	4078e0 <wcrtomb@plt+0x4fd0>
  407888:	b	4078a4 <wcrtomb@plt+0x4f94>
  40788c:	b	4078a4 <wcrtomb@plt+0x4f94>
  407890:	mov	w8, #0x1                   	// #1
  407894:	and	w8, w8, #0x1
  407898:	sturb	w8, [x29, #-1]
  40789c:	b	4078e0 <wcrtomb@plt+0x4fd0>
  4078a0:	bl	402610 <abort@plt>
  4078a4:	ldr	x8, [sp, #72]
  4078a8:	ldr	x9, [x8, #24]
  4078ac:	ldr	w0, [x9, #44]
  4078b0:	ldr	x9, [x8, #16]
  4078b4:	ldr	x1, [x9, #48]
  4078b8:	ldurb	w10, [x29, #-26]
  4078bc:	ldurb	w11, [x29, #-25]
  4078c0:	mov	w12, #0x1                   	// #1
  4078c4:	and	w2, w10, #0x1
  4078c8:	and	w3, w11, #0x1
  4078cc:	str	w12, [sp, #4]
  4078d0:	bl	407180 <wcrtomb@plt+0x4870>
  4078d4:	ldr	w10, [sp, #4]
  4078d8:	and	w11, w0, w10
  4078dc:	sturb	w11, [x29, #-1]
  4078e0:	ldurb	w8, [x29, #-1]
  4078e4:	and	w0, w8, #0x1
  4078e8:	ldr	x28, [sp, #272]
  4078ec:	ldp	x29, x30, [sp, #256]
  4078f0:	add	sp, sp, #0x120
  4078f4:	ret
  4078f8:	sub	sp, sp, #0x20
  4078fc:	stp	x29, x30, [sp, #16]
  407900:	add	x29, sp, #0x10
  407904:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407908:	add	x8, x8, #0x5d8
  40790c:	ldr	x9, [x8]
  407910:	str	x8, [sp, #8]
  407914:	cbnz	x9, 40792c <wcrtomb@plt+0x501c>
  407918:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40791c:	add	x0, x0, #0x75
  407920:	bl	4028b0 <gettext@plt>
  407924:	ldr	x8, [sp, #8]
  407928:	str	x0, [x8]
  40792c:	ldr	x8, [sp, #8]
  407930:	ldr	x0, [x8]
  407934:	ldp	x29, x30, [sp, #16]
  407938:	add	sp, sp, #0x20
  40793c:	ret
  407940:	sub	sp, sp, #0x120
  407944:	stp	x29, x30, [sp, #256]
  407948:	str	x28, [sp, #272]
  40794c:	add	x29, sp, #0x100
  407950:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  407954:	add	x8, x8, #0x8c4
  407958:	mov	w9, #0x0                   	// #0
  40795c:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407960:	add	x10, x10, #0x589
  407964:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407968:	add	x11, x11, #0x58a
  40796c:	mov	x12, #0xffffffffffffffff    	// #-1
  407970:	adrp	x13, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407974:	add	x13, x13, #0x5e0
  407978:	adrp	x14, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40797c:	add	x14, x14, #0x5e8
  407980:	adrp	x15, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407984:	add	x15, x15, #0x5f8
  407988:	adrp	x16, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40798c:	add	x16, x16, #0x608
  407990:	adrp	x17, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407994:	add	x17, x17, #0x614
  407998:	mov	w18, #0x1                   	// #1
  40799c:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4079a0:	add	x3, x3, #0x618
  4079a4:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4079a8:	add	x4, x4, #0x620
  4079ac:	stur	w0, [x29, #-12]
  4079b0:	stur	x1, [x29, #-24]
  4079b4:	stur	x2, [x29, #-32]
  4079b8:	ldrb	w0, [x8]
  4079bc:	sturb	w0, [x29, #-89]
  4079c0:	sturb	w9, [x29, #-90]
  4079c4:	ldrb	w9, [x10]
  4079c8:	and	w9, w9, w18
  4079cc:	sturb	w9, [x29, #-91]
  4079d0:	ldrb	w9, [x11]
  4079d4:	and	w9, w9, w18
  4079d8:	sturb	w9, [x29, #-92]
  4079dc:	stur	x12, [x29, #-104]
  4079e0:	ldur	w0, [x29, #-12]
  4079e4:	ldur	x1, [x29, #-24]
  4079e8:	str	x10, [sp, #128]
  4079ec:	str	x11, [sp, #120]
  4079f0:	str	x13, [sp, #112]
  4079f4:	str	x14, [sp, #104]
  4079f8:	str	x15, [sp, #96]
  4079fc:	str	x16, [sp, #88]
  407a00:	str	x17, [sp, #80]
  407a04:	str	x3, [sp, #72]
  407a08:	str	x4, [sp, #64]
  407a0c:	bl	4083ec <wcrtomb@plt+0x5adc>
  407a10:	tbnz	w0, #0, 407a1c <wcrtomb@plt+0x510c>
  407a14:	stur	xzr, [x29, #-8]
  407a18:	b	408104 <wcrtomb@plt+0x57f4>
  407a1c:	mov	x8, xzr
  407a20:	ldr	x9, [sp, #112]
  407a24:	str	xzr, [x9]
  407a28:	ldr	x10, [sp, #104]
  407a2c:	str	x8, [x10]
  407a30:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407a34:	add	x8, x8, #0x5f0
  407a38:	str	xzr, [x8]
  407a3c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407a40:	add	x8, x8, #0x490
  407a44:	ldr	x8, [x8]
  407a48:	ldr	x11, [sp, #96]
  407a4c:	str	x8, [x11]
  407a50:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407a54:	add	x8, x8, #0x600
  407a58:	str	xzr, [x8]
  407a5c:	ldr	x8, [sp, #88]
  407a60:	str	xzr, [x8]
  407a64:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407a68:	add	x12, x12, #0x5a0
  407a6c:	ldrb	w13, [x12]
  407a70:	mov	w14, #0x0                   	// #0
  407a74:	str	w14, [sp, #60]
  407a78:	tbnz	w13, #0, 407a80 <wcrtomb@plt+0x5170>
  407a7c:	b	407a94 <wcrtomb@plt+0x5184>
  407a80:	ldurb	w8, [x29, #-89]
  407a84:	cmp	w8, #0x0
  407a88:	cset	w8, ne  // ne = any
  407a8c:	eor	w8, w8, #0x1
  407a90:	str	w8, [sp, #60]
  407a94:	ldr	w8, [sp, #60]
  407a98:	and	w8, w8, #0x1
  407a9c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407aa0:	add	x9, x9, #0x610
  407aa4:	strb	w8, [x9]
  407aa8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407aac:	add	x9, x9, #0x611
  407ab0:	mov	w8, #0x0                   	// #0
  407ab4:	strb	w8, [x9]
  407ab8:	stur	xzr, [x29, #-40]
  407abc:	stur	xzr, [x29, #-56]
  407ac0:	stur	xzr, [x29, #-64]
  407ac4:	ldur	x0, [x29, #-64]
  407ac8:	ldur	x1, [x29, #-24]
  407acc:	bl	4085a8 <wcrtomb@plt+0x5c98>
  407ad0:	tbnz	w0, #0, 407ae8 <wcrtomb@plt+0x51d8>
  407ad4:	bl	402870 <__errno_location@plt>
  407ad8:	ldr	w0, [x0]
  407adc:	bl	4072a4 <wcrtomb@plt+0x4994>
  407ae0:	stur	xzr, [x29, #-8]
  407ae4:	b	408104 <wcrtomb@plt+0x57f4>
  407ae8:	ldr	x8, [sp, #80]
  407aec:	str	wzr, [x8]
  407af0:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407af4:	add	x9, x9, #0x4b4
  407af8:	ldrb	w10, [x9]
  407afc:	tbnz	w10, #0, 407b04 <wcrtomb@plt+0x51f4>
  407b00:	b	407b9c <wcrtomb@plt+0x528c>
  407b04:	ldur	x0, [x29, #-24]
  407b08:	bl	408b48 <wcrtomb@plt+0x6238>
  407b0c:	tbnz	w0, #0, 407b14 <wcrtomb@plt+0x5204>
  407b10:	b	407b24 <wcrtomb@plt+0x5214>
  407b14:	ldur	x8, [x29, #-24]
  407b18:	ldr	x8, [x8, #48]
  407b1c:	str	x8, [sp, #48]
  407b20:	b	407b2c <wcrtomb@plt+0x521c>
  407b24:	mov	x8, #0xffffffffffffffff    	// #-1
  407b28:	str	x8, [sp, #48]
  407b2c:	ldr	x8, [sp, #48]
  407b30:	stur	x8, [x29, #-112]
  407b34:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407b38:	add	x8, x8, #0x4c0
  407b3c:	ldrb	w9, [x8]
  407b40:	mov	w10, #0x0                   	// #0
  407b44:	str	w10, [sp, #44]
  407b48:	tbnz	w9, #0, 407b50 <wcrtomb@plt+0x5240>
  407b4c:	b	407b64 <wcrtomb@plt+0x5254>
  407b50:	ldur	x8, [x29, #-112]
  407b54:	mov	x9, #0xffffffffffffffff    	// #-1
  407b58:	cmp	x8, x9
  407b5c:	cset	w10, cc  // cc = lo, ul, last
  407b60:	str	w10, [sp, #44]
  407b64:	ldr	w8, [sp, #44]
  407b68:	and	w8, w8, #0x1
  407b6c:	ldur	x9, [x29, #-112]
  407b70:	add	x9, x9, w8, sxtw
  407b74:	stur	x9, [x29, #-112]
  407b78:	ldr	x8, [sp, #80]
  407b7c:	ldr	w9, [x8]
  407b80:	add	w9, w9, #0x1
  407b84:	str	w9, [x8]
  407b88:	ldur	x8, [x29, #-112]
  407b8c:	mov	x9, #0xa                   	// #10
  407b90:	udiv	x8, x8, x9
  407b94:	stur	x8, [x29, #-112]
  407b98:	cbnz	x8, 407b78 <wcrtomb@plt+0x5268>
  407b9c:	mov	w8, #0x1                   	// #1
  407ba0:	sturb	w8, [x29, #-113]
  407ba4:	ldur	x8, [x29, #-104]
  407ba8:	cmp	x8, #0x0
  407bac:	cset	w9, ge  // ge = tcont
  407bb0:	tbnz	w9, #0, 407c90 <wcrtomb@plt+0x5380>
  407bb4:	ldurb	w8, [x29, #-89]
  407bb8:	cbz	w8, 407c90 <wcrtomb@plt+0x5380>
  407bbc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407bc0:	add	x8, x8, #0x4b0
  407bc4:	ldr	w9, [x8]
  407bc8:	cmp	w9, #0x1
  407bcc:	b.eq	407c90 <wcrtomb@plt+0x5380>  // b.none
  407bd0:	ldr	x8, [sp, #72]
  407bd4:	ldr	x0, [x8]
  407bd8:	ldr	x9, [sp, #64]
  407bdc:	ldr	x10, [x9]
  407be0:	ldr	x11, [x8]
  407be4:	subs	x1, x10, x11
  407be8:	bl	408ba4 <wcrtomb@plt+0x6294>
  407bec:	tbnz	w0, #0, 407c24 <wcrtomb@plt+0x5314>
  407bf0:	ldurb	w8, [x29, #-113]
  407bf4:	tbnz	w8, #0, 407bfc <wcrtomb@plt+0x52ec>
  407bf8:	b	407c90 <wcrtomb@plt+0x5380>
  407bfc:	ldr	x8, [sp, #64]
  407c00:	ldr	x9, [x8]
  407c04:	ldr	x10, [sp, #72]
  407c08:	ldr	x11, [x10]
  407c0c:	subs	x0, x9, x11
  407c10:	ldur	w1, [x29, #-12]
  407c14:	ldur	x2, [x29, #-24]
  407c18:	bl	408bf0 <wcrtomb@plt+0x62e0>
  407c1c:	tbnz	w0, #0, 407c24 <wcrtomb@plt+0x5314>
  407c20:	b	407c90 <wcrtomb@plt+0x5380>
  407c24:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407c28:	add	x8, x8, #0x4b0
  407c2c:	ldr	w9, [x8]
  407c30:	cmp	w9, #0x2
  407c34:	b.ne	407c40 <wcrtomb@plt+0x5330>  // b.any
  407c38:	stur	xzr, [x29, #-8]
  407c3c:	b	408104 <wcrtomb@plt+0x57f4>
  407c40:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407c44:	add	x8, x8, #0x4b7
  407c48:	ldrb	w9, [x8]
  407c4c:	tbnz	w9, #0, 407c64 <wcrtomb@plt+0x5354>
  407c50:	mov	w8, #0x1                   	// #1
  407c54:	ldr	x9, [sp, #120]
  407c58:	strb	w8, [x9]
  407c5c:	ldr	x10, [sp, #128]
  407c60:	strb	w8, [x10]
  407c64:	ldur	x8, [x29, #-40]
  407c68:	stur	x8, [x29, #-104]
  407c6c:	ldurb	w9, [x29, #-89]
  407c70:	sturb	w9, [x29, #-90]
  407c74:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407c78:	add	x8, x8, #0x5a0
  407c7c:	ldrb	w9, [x8]
  407c80:	and	w9, w9, #0x1
  407c84:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407c88:	add	x8, x8, #0x610
  407c8c:	strb	w9, [x8]
  407c90:	ldr	x8, [sp, #72]
  407c94:	ldr	x9, [x8]
  407c98:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407c9c:	add	x10, x10, #0x628
  407ca0:	str	x9, [x10]
  407ca4:	ldr	x9, [sp, #104]
  407ca8:	ldr	x10, [x9]
  407cac:	cbz	x10, 407cc0 <wcrtomb@plt+0x53b0>
  407cb0:	ldr	x8, [sp, #72]
  407cb4:	ldr	x9, [x8]
  407cb8:	ldr	x10, [sp, #104]
  407cbc:	str	x9, [x10]
  407cc0:	ldr	x8, [sp, #72]
  407cc4:	ldr	x9, [x8]
  407cc8:	ldur	x10, [x29, #-64]
  407ccc:	add	x9, x9, x10
  407cd0:	stur	x9, [x29, #-80]
  407cd4:	ldur	x9, [x29, #-80]
  407cd8:	ldr	x10, [sp, #64]
  407cdc:	ldr	x11, [x10]
  407ce0:	cmp	x9, x11
  407ce4:	b.ne	407cf8 <wcrtomb@plt+0x53e8>  // b.any
  407ce8:	ldur	x8, [x29, #-32]
  407cec:	mov	w9, #0x1                   	// #1
  407cf0:	strb	w9, [x8]
  407cf4:	b	407fe0 <wcrtomb@plt+0x56d0>
  407cf8:	ldur	x0, [x29, #-80]
  407cfc:	ldr	x8, [sp, #64]
  407d00:	ldr	x1, [x8]
  407d04:	ldurb	w2, [x29, #-90]
  407d08:	bl	408d1c <wcrtomb@plt+0x640c>
  407d0c:	ldur	x8, [x29, #-80]
  407d10:	mov	x9, #0xffffffffffffffff    	// #-1
  407d14:	add	x8, x8, x9
  407d18:	ldrb	w10, [x8]
  407d1c:	sturb	w10, [x29, #-65]
  407d20:	ldurb	w10, [x29, #-89]
  407d24:	ldur	x8, [x29, #-80]
  407d28:	add	x8, x8, x9
  407d2c:	strb	w10, [x8]
  407d30:	ldur	x8, [x29, #-80]
  407d34:	add	x0, x8, x9
  407d38:	ldurb	w1, [x29, #-89]
  407d3c:	ldr	x8, [sp, #64]
  407d40:	ldr	x11, [x8]
  407d44:	ldur	x12, [x29, #-80]
  407d48:	subs	x11, x11, x12
  407d4c:	add	x2, x11, #0x1
  407d50:	str	x9, [sp, #32]
  407d54:	bl	4026f0 <memrchr@plt>
  407d58:	stur	x0, [x29, #-88]
  407d5c:	ldur	x8, [x29, #-88]
  407d60:	add	x8, x8, #0x1
  407d64:	stur	x8, [x29, #-88]
  407d68:	ldurb	w10, [x29, #-65]
  407d6c:	ldur	x8, [x29, #-80]
  407d70:	ldr	x9, [sp, #32]
  407d74:	add	x8, x8, x9
  407d78:	strb	w10, [x8]
  407d7c:	ldur	x8, [x29, #-88]
  407d80:	ldur	x11, [x29, #-80]
  407d84:	cmp	x8, x11
  407d88:	b.ne	407da4 <wcrtomb@plt+0x5494>  // b.any
  407d8c:	ldur	x8, [x29, #-80]
  407d90:	ldur	x9, [x29, #-56]
  407d94:	mov	x10, xzr
  407d98:	subs	x9, x10, x9
  407d9c:	add	x8, x8, x9
  407da0:	stur	x8, [x29, #-88]
  407da4:	ldur	x8, [x29, #-56]
  407da8:	ldur	x9, [x29, #-80]
  407dac:	mov	x10, xzr
  407db0:	subs	x8, x10, x8
  407db4:	add	x8, x9, x8
  407db8:	stur	x8, [x29, #-80]
  407dbc:	ldr	x8, [sp, #64]
  407dc0:	ldr	x9, [x8]
  407dc4:	ldur	x10, [x29, #-88]
  407dc8:	subs	x9, x9, x10
  407dcc:	stur	x9, [x29, #-56]
  407dd0:	ldur	x9, [x29, #-80]
  407dd4:	ldur	x10, [x29, #-88]
  407dd8:	cmp	x9, x10
  407ddc:	b.cs	407e7c <wcrtomb@plt+0x556c>  // b.hs, b.nlast
  407de0:	ldr	x8, [sp, #96]
  407de4:	ldr	x9, [x8]
  407de8:	cbz	x9, 407e04 <wcrtomb@plt+0x54f4>
  407dec:	ldur	x0, [x29, #-80]
  407df0:	ldur	x1, [x29, #-88]
  407df4:	bl	408db8 <wcrtomb@plt+0x64a8>
  407df8:	ldur	x8, [x29, #-40]
  407dfc:	add	x8, x8, x0
  407e00:	stur	x8, [x29, #-40]
  407e04:	ldr	x8, [sp, #88]
  407e08:	ldr	x9, [x8]
  407e0c:	cbz	x9, 407e18 <wcrtomb@plt+0x5508>
  407e10:	ldur	x0, [x29, #-88]
  407e14:	bl	408fd4 <wcrtomb@plt+0x66c4>
  407e18:	ldr	x8, [sp, #96]
  407e1c:	ldr	x9, [x8]
  407e20:	cbnz	x9, 407e30 <wcrtomb@plt+0x5520>
  407e24:	ldr	x8, [sp, #88]
  407e28:	ldr	x9, [x8]
  407e2c:	cbz	x9, 407e78 <wcrtomb@plt+0x5568>
  407e30:	ldr	x8, [sp, #128]
  407e34:	ldrb	w9, [x8]
  407e38:	tbnz	w9, #0, 407e40 <wcrtomb@plt+0x5530>
  407e3c:	b	407e7c <wcrtomb@plt+0x556c>
  407e40:	ldur	x8, [x29, #-104]
  407e44:	mov	x9, xzr
  407e48:	cmp	x9, x8
  407e4c:	cset	w10, le
  407e50:	tbnz	w10, #0, 407e60 <wcrtomb@plt+0x5550>
  407e54:	mov	x8, xzr
  407e58:	str	x8, [sp, #24]
  407e5c:	b	407e68 <wcrtomb@plt+0x5558>
  407e60:	ldur	x8, [x29, #-104]
  407e64:	str	x8, [sp, #24]
  407e68:	ldr	x8, [sp, #24]
  407e6c:	ldur	x9, [x29, #-40]
  407e70:	cmp	x8, x9
  407e74:	b.ge	407e7c <wcrtomb@plt+0x556c>  // b.tcont
  407e78:	b	40805c <wcrtomb@plt+0x574c>
  407e7c:	stur	xzr, [x29, #-48]
  407e80:	ldur	x8, [x29, #-88]
  407e84:	stur	x8, [x29, #-80]
  407e88:	ldur	x8, [x29, #-48]
  407e8c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407e90:	add	x9, x9, #0x498
  407e94:	ldr	x9, [x9]
  407e98:	mov	w10, #0x0                   	// #0
  407e9c:	cmp	x8, x9
  407ea0:	str	w10, [sp, #20]
  407ea4:	b.ge	407edc <wcrtomb@plt+0x55cc>  // b.tcont
  407ea8:	ldur	x8, [x29, #-80]
  407eac:	ldr	x9, [sp, #72]
  407eb0:	ldr	x10, [x9]
  407eb4:	mov	w11, #0x0                   	// #0
  407eb8:	cmp	x8, x10
  407ebc:	str	w11, [sp, #20]
  407ec0:	b.ls	407edc <wcrtomb@plt+0x55cc>  // b.plast
  407ec4:	ldur	x8, [x29, #-80]
  407ec8:	ldr	x9, [sp, #104]
  407ecc:	ldr	x10, [x9]
  407ed0:	cmp	x8, x10
  407ed4:	cset	w11, ne  // ne = any
  407ed8:	str	w11, [sp, #20]
  407edc:	ldr	w8, [sp, #20]
  407ee0:	tbnz	w8, #0, 407ee8 <wcrtomb@plt+0x55d8>
  407ee4:	b	407f1c <wcrtomb@plt+0x560c>
  407ee8:	ldur	x8, [x29, #-48]
  407eec:	add	x8, x8, #0x1
  407ef0:	stur	x8, [x29, #-48]
  407ef4:	ldur	x8, [x29, #-80]
  407ef8:	mov	x9, #0xffffffffffffffff    	// #-1
  407efc:	add	x8, x8, x9
  407f00:	stur	x8, [x29, #-80]
  407f04:	ldur	x8, [x29, #-80]
  407f08:	ldurb	w9, [x8, #-1]
  407f0c:	ldurb	w10, [x29, #-89]
  407f10:	cmp	w9, w10
  407f14:	b.ne	407ef4 <wcrtomb@plt+0x55e4>  // b.any
  407f18:	b	407e88 <wcrtomb@plt+0x5578>
  407f1c:	ldur	x8, [x29, #-80]
  407f20:	ldr	x9, [sp, #104]
  407f24:	ldr	x10, [x9]
  407f28:	cmp	x8, x10
  407f2c:	b.eq	407f3c <wcrtomb@plt+0x562c>  // b.none
  407f30:	mov	x8, xzr
  407f34:	ldr	x9, [sp, #104]
  407f38:	str	x8, [x9]
  407f3c:	ldur	x8, [x29, #-56]
  407f40:	ldur	x9, [x29, #-88]
  407f44:	add	x8, x9, x8
  407f48:	ldur	x9, [x29, #-80]
  407f4c:	subs	x8, x8, x9
  407f50:	stur	x8, [x29, #-64]
  407f54:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407f58:	add	x8, x8, #0x4b6
  407f5c:	ldrb	w10, [x8]
  407f60:	tbnz	w10, #0, 407f68 <wcrtomb@plt+0x5658>
  407f64:	b	407f98 <wcrtomb@plt+0x5688>
  407f68:	ldr	x8, [sp, #112]
  407f6c:	ldr	x0, [x8]
  407f70:	ldr	x9, [sp, #64]
  407f74:	ldr	x10, [x9]
  407f78:	ldr	x11, [sp, #72]
  407f7c:	ldr	x12, [x11]
  407f80:	subs	x10, x10, x12
  407f84:	ldur	x12, [x29, #-64]
  407f88:	subs	x1, x10, x12
  407f8c:	bl	4090bc <wcrtomb@plt+0x67ac>
  407f90:	ldr	x8, [sp, #112]
  407f94:	str	x0, [x8]
  407f98:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  407f9c:	add	x8, x8, #0x4c0
  407fa0:	ldrb	w9, [x8]
  407fa4:	tbnz	w9, #0, 407fac <wcrtomb@plt+0x569c>
  407fa8:	b	407fb4 <wcrtomb@plt+0x56a4>
  407fac:	ldur	x0, [x29, #-80]
  407fb0:	bl	409128 <wcrtomb@plt+0x6818>
  407fb4:	ldur	x0, [x29, #-64]
  407fb8:	ldur	x1, [x29, #-24]
  407fbc:	bl	4085a8 <wcrtomb@plt+0x5c98>
  407fc0:	tbnz	w0, #0, 407fd4 <wcrtomb@plt+0x56c4>
  407fc4:	bl	402870 <__errno_location@plt>
  407fc8:	ldr	w0, [x0]
  407fcc:	bl	4072a4 <wcrtomb@plt+0x4994>
  407fd0:	b	40805c <wcrtomb@plt+0x574c>
  407fd4:	mov	w8, #0x0                   	// #0
  407fd8:	sturb	w8, [x29, #-113]
  407fdc:	b	407ba4 <wcrtomb@plt+0x5294>
  407fe0:	ldur	x8, [x29, #-56]
  407fe4:	cbz	x8, 40805c <wcrtomb@plt+0x574c>
  407fe8:	ldurb	w8, [x29, #-89]
  407fec:	ldr	x9, [sp, #64]
  407ff0:	ldr	x10, [x9]
  407ff4:	add	x11, x10, #0x1
  407ff8:	str	x11, [x9]
  407ffc:	strb	w8, [x10]
  408000:	ldr	x10, [sp, #96]
  408004:	ldr	x11, [x10]
  408008:	cbz	x11, 408044 <wcrtomb@plt+0x5734>
  40800c:	ldr	x8, [sp, #72]
  408010:	ldr	x9, [x8]
  408014:	ldur	x10, [x29, #-64]
  408018:	add	x9, x9, x10
  40801c:	ldur	x10, [x29, #-56]
  408020:	mov	x11, xzr
  408024:	subs	x10, x11, x10
  408028:	add	x0, x9, x10
  40802c:	ldr	x9, [sp, #64]
  408030:	ldr	x1, [x9]
  408034:	bl	408db8 <wcrtomb@plt+0x64a8>
  408038:	ldur	x8, [x29, #-40]
  40803c:	add	x8, x8, x0
  408040:	stur	x8, [x29, #-40]
  408044:	ldr	x8, [sp, #88]
  408048:	ldr	x9, [x8]
  40804c:	cbz	x9, 40805c <wcrtomb@plt+0x574c>
  408050:	ldr	x8, [sp, #64]
  408054:	ldr	x0, [x8]
  408058:	bl	408fd4 <wcrtomb@plt+0x66c4>
  40805c:	ldurb	w8, [x29, #-91]
  408060:	mov	w9, #0x1                   	// #1
  408064:	and	w8, w8, w9
  408068:	ldr	x10, [sp, #128]
  40806c:	strb	w8, [x10]
  408070:	ldurb	w8, [x29, #-92]
  408074:	and	w8, w8, #0x1
  408078:	ldr	x11, [sp, #120]
  40807c:	strb	w8, [x11]
  408080:	ldrb	w8, [x11]
  408084:	tbnz	w8, #0, 4080fc <wcrtomb@plt+0x57ec>
  408088:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40808c:	add	x8, x8, #0x611
  408090:	ldrb	w9, [x8]
  408094:	tbnz	w9, #0, 4080bc <wcrtomb@plt+0x57ac>
  408098:	ldur	x8, [x29, #-104]
  40809c:	mov	x9, xzr
  4080a0:	cmp	x9, x8
  4080a4:	cset	w10, gt
  4080a8:	tbnz	w10, #0, 4080fc <wcrtomb@plt+0x57ec>
  4080ac:	ldur	x8, [x29, #-104]
  4080b0:	ldur	x9, [x29, #-40]
  4080b4:	cmp	x8, x9
  4080b8:	b.ge	4080fc <wcrtomb@plt+0x57ec>  // b.tcont
  4080bc:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4080c0:	add	x0, x0, #0x86
  4080c4:	bl	4028b0 <gettext@plt>
  4080c8:	str	x0, [sp, #8]
  4080cc:	bl	4078f8 <wcrtomb@plt+0x4fe8>
  4080d0:	ldr	x1, [sp, #8]
  4080d4:	str	x0, [sp]
  4080d8:	mov	x0, x1
  4080dc:	ldr	x1, [sp]
  4080e0:	bl	4081e0 <wcrtomb@plt+0x58d0>
  4080e4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4080e8:	add	x8, x8, #0x4f0
  4080ec:	ldrb	w9, [x8]
  4080f0:	tbnz	w9, #0, 4080f8 <wcrtomb@plt+0x57e8>
  4080f4:	b	4080fc <wcrtomb@plt+0x57ec>
  4080f8:	bl	4082b4 <wcrtomb@plt+0x59a4>
  4080fc:	ldur	x8, [x29, #-40]
  408100:	stur	x8, [x29, #-8]
  408104:	ldur	x0, [x29, #-8]
  408108:	ldr	x28, [sp, #272]
  40810c:	ldp	x29, x30, [sp, #256]
  408110:	add	sp, sp, #0x120
  408114:	ret
  408118:	sub	sp, sp, #0x20
  40811c:	stp	x29, x30, [sp, #16]
  408120:	add	x29, sp, #0x10
  408124:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408128:	add	x8, x8, #0x388
  40812c:	ldr	x0, [x8]
  408130:	str	x8, [sp, #8]
  408134:	bl	409630 <wcrtomb@plt+0x6d20>
  408138:	bl	4078f8 <wcrtomb@plt+0x4fe8>
  40813c:	bl	409664 <wcrtomb@plt+0x6d54>
  408140:	ldr	x8, [sp, #8]
  408144:	ldr	x0, [x8]
  408148:	bl	4096b4 <wcrtomb@plt+0x6da4>
  40814c:	ldp	x29, x30, [sp, #16]
  408150:	add	sp, sp, #0x20
  408154:	ret
  408158:	sub	sp, sp, #0x20
  40815c:	stp	x29, x30, [sp, #16]
  408160:	add	x29, sp, #0x10
  408164:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408168:	add	x8, x8, #0x3a0
  40816c:	sturb	w0, [x29, #-1]
  408170:	ldr	x0, [x8]
  408174:	str	x8, [sp]
  408178:	bl	409630 <wcrtomb@plt+0x6d20>
  40817c:	ldurb	w0, [x29, #-1]
  408180:	bl	40819c <wcrtomb@plt+0x588c>
  408184:	ldr	x8, [sp]
  408188:	ldr	x0, [x8]
  40818c:	bl	4096b4 <wcrtomb@plt+0x6da4>
  408190:	ldp	x29, x30, [sp, #16]
  408194:	add	sp, sp, #0x20
  408198:	ret
  40819c:	sub	sp, sp, #0x20
  4081a0:	stp	x29, x30, [sp, #16]
  4081a4:	add	x29, sp, #0x10
  4081a8:	stur	w0, [x29, #-4]
  4081ac:	ldur	w0, [x29, #-4]
  4081b0:	bl	402530 <putchar_unlocked@plt>
  4081b4:	cmp	w0, #0x0
  4081b8:	cset	w8, ge  // ge = tcont
  4081bc:	tbnz	w8, #0, 4081d4 <wcrtomb@plt+0x58c4>
  4081c0:	bl	402870 <__errno_location@plt>
  4081c4:	ldr	w8, [x0]
  4081c8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4081cc:	add	x9, x9, #0x5c4
  4081d0:	str	w8, [x9]
  4081d4:	ldp	x29, x30, [sp, #16]
  4081d8:	add	sp, sp, #0x20
  4081dc:	ret
  4081e0:	sub	sp, sp, #0x130
  4081e4:	stp	x29, x30, [sp, #272]
  4081e8:	str	x28, [sp, #288]
  4081ec:	add	x29, sp, #0x110
  4081f0:	sub	x8, x29, #0x28
  4081f4:	str	q7, [sp, #112]
  4081f8:	str	q6, [sp, #96]
  4081fc:	str	q5, [sp, #80]
  408200:	str	q4, [sp, #64]
  408204:	str	q3, [sp, #48]
  408208:	str	q2, [sp, #32]
  40820c:	str	q1, [sp, #16]
  408210:	str	q0, [sp]
  408214:	str	x7, [sp, #184]
  408218:	str	x6, [sp, #176]
  40821c:	str	x5, [sp, #168]
  408220:	str	x4, [sp, #160]
  408224:	str	x3, [sp, #152]
  408228:	str	x2, [sp, #144]
  40822c:	str	x1, [sp, #136]
  408230:	stur	x0, [x29, #-8]
  408234:	mov	w9, #0xffffff80            	// #-128
  408238:	stur	w9, [x29, #-12]
  40823c:	mov	w9, #0xffffffc8            	// #-56
  408240:	stur	w9, [x29, #-16]
  408244:	mov	x10, sp
  408248:	add	x10, x10, #0x80
  40824c:	stur	x10, [x29, #-24]
  408250:	add	x10, sp, #0x88
  408254:	add	x10, x10, #0x38
  408258:	stur	x10, [x29, #-32]
  40825c:	add	x10, x29, #0x20
  408260:	stur	x10, [x29, #-40]
  408264:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408268:	ldr	x0, [x10, #1112]
  40826c:	ldur	x1, [x29, #-8]
  408270:	ldr	q0, [x8]
  408274:	ldr	q1, [x8, #16]
  408278:	stur	q1, [x29, #-64]
  40827c:	stur	q0, [x29, #-80]
  408280:	sub	x2, x29, #0x50
  408284:	bl	402830 <vfprintf@plt>
  408288:	tbz	w0, #31, 4082a4 <wcrtomb@plt+0x5994>
  40828c:	b	408290 <wcrtomb@plt+0x5980>
  408290:	bl	402870 <__errno_location@plt>
  408294:	ldr	w8, [x0]
  408298:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40829c:	str	w8, [x9, #1476]
  4082a0:	b	4082a4 <wcrtomb@plt+0x5994>
  4082a4:	ldr	x28, [sp, #288]
  4082a8:	ldp	x29, x30, [sp, #272]
  4082ac:	add	sp, sp, #0x130
  4082b0:	ret
  4082b4:	stp	x29, x30, [sp, #-16]!
  4082b8:	mov	x29, sp
  4082bc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4082c0:	add	x8, x8, #0x458
  4082c4:	ldr	x0, [x8]
  4082c8:	bl	402710 <fflush_unlocked@plt>
  4082cc:	cbz	w0, 4082e4 <wcrtomb@plt+0x59d4>
  4082d0:	bl	402870 <__errno_location@plt>
  4082d4:	ldr	w8, [x0]
  4082d8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4082dc:	add	x9, x9, #0x5c4
  4082e0:	str	w8, [x9]
  4082e4:	ldp	x29, x30, [sp], #16
  4082e8:	ret
  4082ec:	sub	sp, sp, #0x30
  4082f0:	stp	x29, x30, [sp, #32]
  4082f4:	add	x29, sp, #0x20
  4082f8:	stur	w0, [x29, #-4]
  4082fc:	str	x1, [sp, #16]
  408300:	and	w8, w2, #0x1
  408304:	strb	w8, [sp, #15]
  408308:	ldur	w8, [x29, #-4]
  40830c:	cbnz	w8, 4083e0 <wcrtomb@plt+0x5ad0>
  408310:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408314:	add	x8, x8, #0x5f8
  408318:	ldr	x8, [x8]
  40831c:	cbz	x8, 40837c <wcrtomb@plt+0x5a6c>
  408320:	ldrb	w8, [sp, #15]
  408324:	tbnz	w8, #0, 4083e0 <wcrtomb@plt+0x5ad0>
  408328:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40832c:	add	x8, x8, #0x640
  408330:	ldrb	w9, [x8]
  408334:	tbnz	w9, #0, 408368 <wcrtomb@plt+0x5a58>
  408338:	ldur	w0, [x29, #-4]
  40833c:	mov	x8, xzr
  408340:	mov	x1, x8
  408344:	mov	w2, #0x2                   	// #2
  408348:	bl	4023c0 <lseek@plt>
  40834c:	cmp	x0, #0x0
  408350:	cset	w9, ge  // ge = tcont
  408354:	tbnz	w9, #0, 4083e0 <wcrtomb@plt+0x5ad0>
  408358:	bl	402870 <__errno_location@plt>
  40835c:	ldr	w8, [x0]
  408360:	cmp	w8, #0x16
  408364:	b.eq	4083e0 <wcrtomb@plt+0x5ad0>  // b.none
  408368:	ldur	w0, [x29, #-4]
  40836c:	ldr	x1, [sp, #16]
  408370:	bl	40a260 <wcrtomb@plt+0x7950>
  408374:	tbnz	w0, #0, 4083e0 <wcrtomb@plt+0x5ad0>
  408378:	b	4083d4 <wcrtomb@plt+0x5ac4>
  40837c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408380:	add	x8, x8, #0x638
  408384:	ldr	x8, [x8]
  408388:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40838c:	add	x9, x9, #0x600
  408390:	ldr	x9, [x9]
  408394:	cmp	x8, x9
  408398:	b.eq	4083e0 <wcrtomb@plt+0x5ad0>  // b.none
  40839c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4083a0:	add	x8, x8, #0x640
  4083a4:	ldrb	w9, [x8]
  4083a8:	tbnz	w9, #0, 4083e0 <wcrtomb@plt+0x5ad0>
  4083ac:	ldur	w0, [x29, #-4]
  4083b0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4083b4:	add	x8, x8, #0x600
  4083b8:	ldr	x1, [x8]
  4083bc:	mov	w9, wzr
  4083c0:	mov	w2, w9
  4083c4:	bl	4023c0 <lseek@plt>
  4083c8:	cmp	x0, #0x0
  4083cc:	cset	w9, ge  // ge = tcont
  4083d0:	tbnz	w9, #0, 4083e0 <wcrtomb@plt+0x5ad0>
  4083d4:	bl	402870 <__errno_location@plt>
  4083d8:	ldr	w0, [x0]
  4083dc:	bl	4072a4 <wcrtomb@plt+0x4994>
  4083e0:	ldp	x29, x30, [sp, #32]
  4083e4:	add	sp, sp, #0x30
  4083e8:	ret
  4083ec:	sub	sp, sp, #0x50
  4083f0:	stp	x29, x30, [sp, #64]
  4083f4:	add	x29, sp, #0x40
  4083f8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4083fc:	add	x8, x8, #0x5b8
  408400:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408404:	add	x9, x9, #0x5a8
  408408:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40840c:	add	x10, x10, #0x638
  408410:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408414:	add	x11, x11, #0x640
  408418:	stur	w0, [x29, #-8]
  40841c:	stur	x1, [x29, #-16]
  408420:	ldr	x12, [x8]
  408424:	add	x12, x12, #0x1
  408428:	ldr	x13, [x9]
  40842c:	udiv	x14, x12, x13
  408430:	mul	x13, x14, x13
  408434:	subs	x12, x12, x13
  408438:	stur	x8, [x29, #-24]
  40843c:	str	x9, [sp, #32]
  408440:	str	x10, [sp, #24]
  408444:	str	x11, [sp, #16]
  408448:	cbnz	x12, 408460 <wcrtomb@plt+0x5b50>
  40844c:	ldur	x8, [x29, #-24]
  408450:	ldr	x9, [x8]
  408454:	add	x9, x9, #0x1
  408458:	str	x9, [sp, #8]
  40845c:	b	408498 <wcrtomb@plt+0x5b88>
  408460:	ldur	x8, [x29, #-24]
  408464:	ldr	x9, [x8]
  408468:	add	x9, x9, #0x1
  40846c:	ldr	x10, [sp, #32]
  408470:	ldr	x11, [x10]
  408474:	ldr	x12, [x8]
  408478:	add	x12, x12, #0x1
  40847c:	ldr	x13, [x10]
  408480:	udiv	x14, x12, x13
  408484:	mul	x13, x14, x13
  408488:	subs	x12, x12, x13
  40848c:	subs	x11, x11, x12
  408490:	add	x9, x9, x11
  408494:	str	x9, [sp, #8]
  408498:	ldr	x8, [sp, #8]
  40849c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4084a0:	add	x9, x9, #0x620
  4084a4:	str	x8, [x9]
  4084a8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4084ac:	add	x9, x9, #0x618
  4084b0:	str	x8, [x9]
  4084b4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4084b8:	add	x8, x8, #0x8c4
  4084bc:	ldrb	w10, [x8]
  4084c0:	ldr	x8, [x9]
  4084c4:	mov	x9, #0xffffffffffffffff    	// #-1
  4084c8:	add	x8, x8, x9
  4084cc:	strb	w10, [x8]
  4084d0:	ldur	w10, [x29, #-8]
  4084d4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4084d8:	add	x8, x8, #0x630
  4084dc:	str	w10, [x8]
  4084e0:	ldur	w10, [x29, #-8]
  4084e4:	cbnz	w10, 408504 <wcrtomb@plt+0x5bf4>
  4084e8:	ldur	w0, [x29, #-8]
  4084ec:	mov	x8, xzr
  4084f0:	mov	x1, x8
  4084f4:	mov	w2, #0x1                   	// #1
  4084f8:	bl	4023c0 <lseek@plt>
  4084fc:	str	x0, [sp]
  408500:	b	40850c <wcrtomb@plt+0x5bfc>
  408504:	mov	x8, xzr
  408508:	str	x8, [sp]
  40850c:	ldr	x8, [sp]
  408510:	ldr	x9, [sp, #24]
  408514:	str	x8, [x9]
  408518:	ldr	x8, [x9]
  40851c:	cmp	x8, #0x0
  408520:	cset	w10, lt  // lt = tstop
  408524:	mov	w11, #0x1                   	// #1
  408528:	and	w10, w10, w11
  40852c:	ldr	x8, [sp, #16]
  408530:	strb	w10, [x8]
  408534:	ldrb	w10, [x8]
  408538:	and	w10, w10, #0x1
  40853c:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408540:	add	x12, x12, #0x641
  408544:	strb	w10, [x12]
  408548:	ldrb	w10, [x8]
  40854c:	tbnz	w10, #0, 408554 <wcrtomb@plt+0x5c44>
  408550:	b	408588 <wcrtomb@plt+0x5c78>
  408554:	bl	402870 <__errno_location@plt>
  408558:	ldr	w8, [x0]
  40855c:	cmp	w8, #0x1d
  408560:	b.eq	408580 <wcrtomb@plt+0x5c70>  // b.none
  408564:	bl	402870 <__errno_location@plt>
  408568:	ldr	w0, [x0]
  40856c:	bl	4072a4 <wcrtomb@plt+0x4994>
  408570:	mov	w8, wzr
  408574:	and	w8, w8, #0x1
  408578:	sturb	w8, [x29, #-1]
  40857c:	b	408594 <wcrtomb@plt+0x5c84>
  408580:	ldr	x8, [sp, #24]
  408584:	str	xzr, [x8]
  408588:	mov	w8, #0x1                   	// #1
  40858c:	and	w8, w8, #0x1
  408590:	sturb	w8, [x29, #-1]
  408594:	ldurb	w8, [x29, #-1]
  408598:	and	w0, w8, #0x1
  40859c:	ldp	x29, x30, [sp, #64]
  4085a0:	add	sp, sp, #0x50
  4085a4:	ret
  4085a8:	sub	sp, sp, #0xd0
  4085ac:	stp	x29, x30, [sp, #192]
  4085b0:	add	x29, sp, #0xc0
  4085b4:	mov	w8, #0x1                   	// #1
  4085b8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085bc:	add	x9, x9, #0x620
  4085c0:	mov	x10, xzr
  4085c4:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085c8:	add	x11, x11, #0x5b8
  4085cc:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085d0:	add	x12, x12, #0x5a8
  4085d4:	adrp	x13, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085d8:	add	x13, x13, #0x5b0
  4085dc:	adrp	x14, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085e0:	add	x14, x14, #0x638
  4085e4:	adrp	x15, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085e8:	add	x15, x15, #0x618
  4085ec:	adrp	x16, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085f0:	add	x16, x16, #0x630
  4085f4:	adrp	x17, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4085f8:	add	x17, x17, #0x5f0
  4085fc:	stur	x0, [x29, #-8]
  408600:	stur	x1, [x29, #-16]
  408604:	sturb	w8, [x29, #-25]
  408608:	ldr	x18, [x9]
  40860c:	ldur	x0, [x29, #-8]
  408610:	subs	x10, x10, x0
  408614:	add	x10, x18, x10
  408618:	ldr	x18, [x11]
  40861c:	subs	x10, x10, x18
  408620:	stur	x10, [x29, #-56]
  408624:	ldr	x10, [x12]
  408628:	ldr	x18, [x11]
  40862c:	ldr	x0, [x13]
  408630:	add	x18, x18, x0
  408634:	mov	x0, #0xfffffffffffffff8    	// #-8
  408638:	add	x18, x18, x0
  40863c:	ldr	x0, [x9]
  408640:	subs	x18, x18, x0
  408644:	cmp	x10, x18
  408648:	str	x9, [sp, #72]
  40864c:	str	x11, [sp, #64]
  408650:	str	x12, [sp, #56]
  408654:	str	x13, [sp, #48]
  408658:	str	x14, [sp, #40]
  40865c:	str	x15, [sp, #32]
  408660:	str	x16, [sp, #24]
  408664:	str	x17, [sp, #16]
  408668:	b.hi	408698 <wcrtomb@plt+0x5d88>  // b.pmore
  40866c:	ldr	x8, [sp, #72]
  408670:	ldr	x9, [x8]
  408674:	stur	x9, [x29, #-40]
  408678:	ldr	x9, [x8]
  40867c:	ldur	x10, [x29, #-8]
  408680:	mov	x11, xzr
  408684:	subs	x10, x11, x10
  408688:	add	x9, x9, x10
  40868c:	ldr	x10, [sp, #32]
  408690:	str	x9, [x10]
  408694:	b	408914 <wcrtomb@plt+0x6004>
  408698:	ldur	x8, [x29, #-8]
  40869c:	ldr	x9, [sp, #56]
  4086a0:	ldr	x10, [x9]
  4086a4:	add	x8, x8, x10
  4086a8:	stur	x8, [x29, #-64]
  4086ac:	ldr	x8, [sp, #48]
  4086b0:	ldr	x10, [x8]
  4086b4:	ldr	x11, [x9]
  4086b8:	subs	x10, x10, x11
  4086bc:	subs	x10, x10, #0x8
  4086c0:	stur	x10, [x29, #-72]
  4086c4:	ldur	x8, [x29, #-72]
  4086c8:	ldur	x9, [x29, #-64]
  4086cc:	cmp	x8, x9
  4086d0:	b.cs	408714 <wcrtomb@plt+0x5e04>  // b.hs, b.nlast
  4086d4:	ldr	x8, [sp, #56]
  4086d8:	ldr	x9, [x8]
  4086dc:	mov	x10, #0xffffffffffffffff    	// #-1
  4086e0:	subs	x9, x10, x9
  4086e4:	subs	x9, x9, #0x8
  4086e8:	mov	x10, #0x2                   	// #2
  4086ec:	udiv	x9, x9, x10
  4086f0:	ldur	x10, [x29, #-72]
  4086f4:	cmp	x9, x10
  4086f8:	b.cs	408700 <wcrtomb@plt+0x5df0>  // b.hs, b.nlast
  4086fc:	bl	423394 <wcrtomb@plt+0x20a84>
  408700:	ldur	x8, [x29, #-72]
  408704:	mov	x9, #0x2                   	// #2
  408708:	mul	x8, x8, x9
  40870c:	stur	x8, [x29, #-72]
  408710:	b	4086c4 <wcrtomb@plt+0x5db4>
  408714:	ldur	x0, [x29, #-16]
  408718:	bl	408b48 <wcrtomb@plt+0x6238>
  40871c:	tbnz	w0, #0, 408724 <wcrtomb@plt+0x5e14>
  408720:	b	4087a8 <wcrtomb@plt+0x5e98>
  408724:	ldur	x8, [x29, #-16]
  408728:	ldr	x8, [x8, #48]
  40872c:	ldr	x9, [sp, #40]
  408730:	ldr	x10, [x9]
  408734:	subs	x8, x8, x10
  408738:	str	x8, [sp, #96]
  40873c:	ldur	x8, [x29, #-8]
  408740:	ldr	x10, [sp, #96]
  408744:	add	x8, x8, x10
  408748:	str	x8, [sp, #88]
  40874c:	ldr	x8, [sp, #96]
  408750:	mov	x10, xzr
  408754:	cmp	x10, x8
  408758:	cset	w11, gt
  40875c:	tbnz	w11, #0, 4087a8 <wcrtomb@plt+0x5e98>
  408760:	ldr	x8, [sp, #96]
  408764:	ldr	x9, [sp, #88]
  408768:	cmp	x8, x9
  40876c:	b.gt	4087a8 <wcrtomb@plt+0x5e98>
  408770:	ldr	x8, [sp, #88]
  408774:	ldr	x9, [sp, #88]
  408778:	cmp	x8, x9
  40877c:	b.ne	4087a8 <wcrtomb@plt+0x5e98>  // b.any
  408780:	ldur	x8, [x29, #-64]
  408784:	ldr	x9, [sp, #88]
  408788:	cmp	x8, x9
  40878c:	b.hi	4087a8 <wcrtomb@plt+0x5e98>  // b.pmore
  408790:	ldr	x8, [sp, #88]
  408794:	ldur	x9, [x29, #-72]
  408798:	cmp	x8, x9
  40879c:	b.cs	4087a8 <wcrtomb@plt+0x5e98>  // b.hs, b.nlast
  4087a0:	ldr	x8, [sp, #88]
  4087a4:	stur	x8, [x29, #-72]
  4087a8:	ldur	x8, [x29, #-72]
  4087ac:	ldr	x9, [sp, #56]
  4087b0:	ldr	x10, [x9]
  4087b4:	add	x8, x8, x10
  4087b8:	add	x8, x8, #0x8
  4087bc:	stur	x8, [x29, #-80]
  4087c0:	ldr	x8, [sp, #48]
  4087c4:	ldr	x10, [x8]
  4087c8:	ldur	x11, [x29, #-80]
  4087cc:	cmp	x10, x11
  4087d0:	b.cs	4087f0 <wcrtomb@plt+0x5ee0>  // b.hs, b.nlast
  4087d4:	ldur	x8, [x29, #-80]
  4087d8:	ldr	x9, [sp, #48]
  4087dc:	str	x8, [x9]
  4087e0:	mov	x0, x8
  4087e4:	bl	423058 <wcrtomb@plt+0x20748>
  4087e8:	str	x0, [sp, #8]
  4087ec:	b	4087fc <wcrtomb@plt+0x5eec>
  4087f0:	ldr	x8, [sp, #64]
  4087f4:	ldr	x9, [x8]
  4087f8:	str	x9, [sp, #8]
  4087fc:	ldr	x8, [sp, #8]
  408800:	stur	x8, [x29, #-88]
  408804:	ldur	x8, [x29, #-88]
  408808:	add	x8, x8, #0x1
  40880c:	ldur	x9, [x29, #-8]
  408810:	add	x8, x8, x9
  408814:	ldr	x9, [sp, #56]
  408818:	ldr	x10, [x9]
  40881c:	udiv	x11, x8, x10
  408820:	mul	x10, x11, x10
  408824:	subs	x8, x8, x10
  408828:	cbnz	x8, 408844 <wcrtomb@plt+0x5f34>
  40882c:	ldur	x8, [x29, #-88]
  408830:	add	x8, x8, #0x1
  408834:	ldur	x9, [x29, #-8]
  408838:	add	x8, x8, x9
  40883c:	str	x8, [sp]
  408840:	b	408888 <wcrtomb@plt+0x5f78>
  408844:	ldur	x8, [x29, #-88]
  408848:	add	x8, x8, #0x1
  40884c:	ldur	x9, [x29, #-8]
  408850:	add	x8, x8, x9
  408854:	ldr	x9, [sp, #56]
  408858:	ldr	x10, [x9]
  40885c:	ldur	x11, [x29, #-88]
  408860:	add	x11, x11, #0x1
  408864:	ldur	x12, [x29, #-8]
  408868:	add	x11, x11, x12
  40886c:	ldr	x12, [x9]
  408870:	udiv	x13, x11, x12
  408874:	mul	x12, x13, x12
  408878:	subs	x11, x11, x12
  40887c:	subs	x10, x10, x11
  408880:	add	x8, x8, x10
  408884:	str	x8, [sp]
  408888:	ldr	x8, [sp]
  40888c:	stur	x8, [x29, #-40]
  408890:	ldur	x8, [x29, #-40]
  408894:	ldur	x9, [x29, #-8]
  408898:	mov	x10, xzr
  40889c:	subs	x9, x10, x9
  4088a0:	add	x8, x8, x9
  4088a4:	ldr	x9, [sp, #32]
  4088a8:	str	x8, [x9]
  4088ac:	ldr	x0, [x9]
  4088b0:	ldr	x8, [sp, #64]
  4088b4:	ldr	x10, [x8]
  4088b8:	ldur	x11, [x29, #-56]
  4088bc:	add	x1, x10, x11
  4088c0:	ldur	x2, [x29, #-8]
  4088c4:	bl	4022b0 <memmove@plt>
  4088c8:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4088cc:	add	x8, x8, #0x8c4
  4088d0:	ldrb	w12, [x8]
  4088d4:	ldr	x8, [sp, #32]
  4088d8:	ldr	x9, [x8]
  4088dc:	mov	x10, #0xffffffffffffffff    	// #-1
  4088e0:	add	x9, x9, x10
  4088e4:	strb	w12, [x9]
  4088e8:	ldur	x9, [x29, #-88]
  4088ec:	ldr	x10, [sp, #64]
  4088f0:	ldr	x11, [x10]
  4088f4:	cmp	x9, x11
  4088f8:	b.eq	408914 <wcrtomb@plt+0x6004>  // b.none
  4088fc:	ldr	x8, [sp, #64]
  408900:	ldr	x0, [x8]
  408904:	bl	4026c0 <free@plt>
  408908:	ldur	x8, [x29, #-88]
  40890c:	ldr	x9, [sp, #64]
  408910:	str	x8, [x9]
  408914:	bl	4091e4 <wcrtomb@plt+0x68d4>
  408918:	ldr	x8, [sp, #64]
  40891c:	ldr	x9, [x8]
  408920:	ldr	x10, [sp, #48]
  408924:	ldr	x11, [x10]
  408928:	add	x9, x9, x11
  40892c:	mov	x11, #0xfffffffffffffff8    	// #-8
  408930:	add	x9, x9, x11
  408934:	ldur	x11, [x29, #-40]
  408938:	subs	x9, x9, x11
  40893c:	stur	x9, [x29, #-48]
  408940:	ldur	x9, [x29, #-48]
  408944:	ldr	x11, [sp, #56]
  408948:	ldr	x12, [x11]
  40894c:	udiv	x13, x9, x12
  408950:	mul	x12, x13, x12
  408954:	subs	x9, x9, x12
  408958:	ldur	x12, [x29, #-48]
  40895c:	subs	x9, x12, x9
  408960:	stur	x9, [x29, #-48]
  408964:	ldr	x8, [sp, #24]
  408968:	ldr	w0, [x8]
  40896c:	ldur	x1, [x29, #-40]
  408970:	ldur	x2, [x29, #-48]
  408974:	bl	42266c <wcrtomb@plt+0x1fd5c>
  408978:	stur	x0, [x29, #-24]
  40897c:	ldur	x8, [x29, #-24]
  408980:	mov	x9, #0xffffffffffffffff    	// #-1
  408984:	cmp	x8, x9
  408988:	b.ne	408998 <wcrtomb@plt+0x6088>  // b.any
  40898c:	stur	xzr, [x29, #-24]
  408990:	mov	w8, #0x0                   	// #0
  408994:	sturb	w8, [x29, #-25]
  408998:	ldur	x8, [x29, #-24]
  40899c:	ldr	x9, [sp, #40]
  4089a0:	ldr	x10, [x9]
  4089a4:	add	x8, x10, x8
  4089a8:	str	x8, [x9]
  4089ac:	ldur	x8, [x29, #-24]
  4089b0:	cmp	x8, #0x0
  4089b4:	cset	w11, eq  // eq = none
  4089b8:	and	w11, w11, #0x1
  4089bc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4089c0:	add	x8, x8, #0x610
  4089c4:	ldrb	w12, [x8]
  4089c8:	eor	w12, w12, #0x1
  4089cc:	and	w12, w12, #0x1
  4089d0:	orr	w11, w11, w12
  4089d4:	cbnz	w11, 4089e8 <wcrtomb@plt+0x60d8>
  4089d8:	ldur	x0, [x29, #-40]
  4089dc:	ldur	x1, [x29, #-24]
  4089e0:	bl	4091e8 <wcrtomb@plt+0x68d8>
  4089e4:	tbnz	w0, #0, 4089ec <wcrtomb@plt+0x60dc>
  4089e8:	b	408aec <wcrtomb@plt+0x61dc>
  4089ec:	ldr	x8, [sp, #16]
  4089f0:	ldr	x0, [x8]
  4089f4:	ldur	x1, [x29, #-24]
  4089f8:	bl	4090bc <wcrtomb@plt+0x67ac>
  4089fc:	ldr	x8, [sp, #16]
  408a00:	str	x0, [x8]
  408a04:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408a08:	add	x9, x9, #0x641
  408a0c:	ldrb	w10, [x9]
  408a10:	tbnz	w10, #0, 408ae8 <wcrtomb@plt+0x61d8>
  408a14:	ldr	x8, [sp, #24]
  408a18:	ldr	w0, [x8]
  408a1c:	ldr	x9, [sp, #40]
  408a20:	ldr	x1, [x9]
  408a24:	mov	w2, #0x3                   	// #3
  408a28:	bl	4023c0 <lseek@plt>
  408a2c:	str	x0, [sp, #80]
  408a30:	ldr	x8, [sp, #80]
  408a34:	cmp	x8, #0x0
  408a38:	cset	w10, ge  // ge = tcont
  408a3c:	tbnz	w10, #0, 408a94 <wcrtomb@plt+0x6184>
  408a40:	bl	402870 <__errno_location@plt>
  408a44:	ldr	w8, [x0]
  408a48:	cmp	w8, #0x6
  408a4c:	b.ne	408a94 <wcrtomb@plt+0x6184>  // b.any
  408a50:	ldur	x0, [x29, #-16]
  408a54:	bl	408b48 <wcrtomb@plt+0x6238>
  408a58:	tbnz	w0, #0, 408a60 <wcrtomb@plt+0x6150>
  408a5c:	b	408a94 <wcrtomb@plt+0x6184>
  408a60:	ldr	x8, [sp, #40]
  408a64:	ldr	x9, [x8]
  408a68:	ldur	x10, [x29, #-16]
  408a6c:	ldr	x10, [x10, #48]
  408a70:	cmp	x9, x10
  408a74:	b.ge	408a94 <wcrtomb@plt+0x6184>  // b.tcont
  408a78:	ldr	x8, [sp, #24]
  408a7c:	ldr	w0, [x8]
  408a80:	mov	x9, xzr
  408a84:	mov	x1, x9
  408a88:	mov	w2, #0x2                   	// #2
  408a8c:	bl	4023c0 <lseek@plt>
  408a90:	str	x0, [sp, #80]
  408a94:	ldr	x8, [sp, #80]
  408a98:	cmp	x8, #0x0
  408a9c:	cset	w9, ge  // ge = tcont
  408aa0:	tbnz	w9, #0, 408ab8 <wcrtomb@plt+0x61a8>
  408aa4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408aa8:	add	x8, x8, #0x641
  408aac:	mov	w9, #0x1                   	// #1
  408ab0:	strb	w9, [x8]
  408ab4:	b	408ae8 <wcrtomb@plt+0x61d8>
  408ab8:	ldr	x8, [sp, #16]
  408abc:	ldr	x0, [x8]
  408ac0:	ldr	x9, [sp, #80]
  408ac4:	ldr	x10, [sp, #40]
  408ac8:	ldr	x11, [x10]
  408acc:	subs	x1, x9, x11
  408ad0:	bl	4090bc <wcrtomb@plt+0x67ac>
  408ad4:	ldr	x8, [sp, #16]
  408ad8:	str	x0, [x8]
  408adc:	ldr	x9, [sp, #80]
  408ae0:	ldr	x10, [sp, #40]
  408ae4:	str	x9, [x10]
  408ae8:	b	408964 <wcrtomb@plt+0x6054>
  408aec:	ldur	x8, [x29, #-40]
  408af0:	ldur	x9, [x29, #-24]
  408af4:	add	x8, x8, x9
  408af8:	ldr	x9, [sp, #72]
  408afc:	str	x8, [x9]
  408b00:	ldr	x8, [x9]
  408b04:	str	xzr, [x8]
  408b08:	ldr	x8, [x9]
  408b0c:	add	x0, x8, #0x8
  408b10:	ldr	x8, [sp, #48]
  408b14:	ldr	x10, [x8]
  408b18:	ldr	x11, [x9]
  408b1c:	ldr	x12, [sp, #64]
  408b20:	ldr	x13, [x12]
  408b24:	subs	x11, x11, x13
  408b28:	subs	x10, x10, x11
  408b2c:	subs	x1, x10, #0x8
  408b30:	bl	40925c <wcrtomb@plt+0x694c>
  408b34:	ldurb	w14, [x29, #-25]
  408b38:	and	w0, w14, #0x1
  408b3c:	ldp	x29, x30, [sp, #192]
  408b40:	add	sp, sp, #0xd0
  408b44:	ret
  408b48:	sub	sp, sp, #0x10
  408b4c:	str	x0, [sp, #8]
  408b50:	ldr	x8, [sp, #8]
  408b54:	ldr	w9, [x8, #16]
  408b58:	and	w9, w9, #0xf000
  408b5c:	mov	w10, #0x1                   	// #1
  408b60:	cmp	w9, #0x8, lsl #12
  408b64:	str	w10, [sp, #4]
  408b68:	b.eq	408b94 <wcrtomb@plt+0x6284>  // b.none
  408b6c:	ldr	x8, [sp, #8]
  408b70:	ldr	w9, [x8, #16]
  408b74:	ldr	x8, [sp, #8]
  408b78:	ldr	w10, [x8, #16]
  408b7c:	subs	w9, w9, w10
  408b80:	mov	w10, #0x1                   	// #1
  408b84:	str	w10, [sp, #4]
  408b88:	cbnz	w9, 408b94 <wcrtomb@plt+0x6284>
  408b8c:	mov	w8, #0x0                   	// #0
  408b90:	str	w8, [sp, #4]
  408b94:	ldr	w8, [sp, #4]
  408b98:	and	w0, w8, #0x1
  408b9c:	add	sp, sp, #0x10
  408ba0:	ret
  408ba4:	sub	sp, sp, #0x20
  408ba8:	stp	x29, x30, [sp, #16]
  408bac:	add	x29, sp, #0x10
  408bb0:	mov	w8, #0x0                   	// #0
  408bb4:	str	x0, [sp, #8]
  408bb8:	str	x1, [sp]
  408bbc:	ldr	x9, [sp, #8]
  408bc0:	ldr	x10, [sp]
  408bc4:	add	x9, x9, x10
  408bc8:	strb	w8, [x9]
  408bcc:	ldr	x0, [sp, #8]
  408bd0:	bl	4022f0 <strlen@plt>
  408bd4:	ldr	x9, [sp]
  408bd8:	cmp	x0, x9
  408bdc:	cset	w8, ne  // ne = any
  408be0:	and	w0, w8, #0x1
  408be4:	ldp	x29, x30, [sp, #16]
  408be8:	add	sp, sp, #0x20
  408bec:	ret
  408bf0:	sub	sp, sp, #0x40
  408bf4:	stp	x29, x30, [sp, #48]
  408bf8:	add	x29, sp, #0x30
  408bfc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408c00:	add	x8, x8, #0x640
  408c04:	stur	x0, [x29, #-16]
  408c08:	stur	w1, [x29, #-20]
  408c0c:	str	x2, [sp, #16]
  408c10:	ldrb	w9, [x8]
  408c14:	tbnz	w9, #0, 408cfc <wcrtomb@plt+0x63ec>
  408c18:	ldr	x0, [sp, #16]
  408c1c:	bl	408b48 <wcrtomb@plt+0x6238>
  408c20:	tbnz	w0, #0, 408c28 <wcrtomb@plt+0x6318>
  408c24:	b	408cfc <wcrtomb@plt+0x63ec>
  408c28:	ldur	x8, [x29, #-16]
  408c2c:	ldr	x9, [sp, #16]
  408c30:	ldr	x9, [x9, #48]
  408c34:	cmp	x8, x9
  408c38:	b.cs	408cfc <wcrtomb@plt+0x63ec>  // b.hs, b.nlast
  408c3c:	ldur	x8, [x29, #-16]
  408c40:	str	x8, [sp, #8]
  408c44:	ldur	w9, [x29, #-20]
  408c48:	cbnz	w9, 408c84 <wcrtomb@plt+0x6374>
  408c4c:	ldur	w0, [x29, #-20]
  408c50:	mov	x8, xzr
  408c54:	mov	x1, x8
  408c58:	mov	w2, #0x1                   	// #1
  408c5c:	bl	4023c0 <lseek@plt>
  408c60:	str	x0, [sp, #8]
  408c64:	ldr	x8, [sp, #8]
  408c68:	cmp	x8, #0x0
  408c6c:	cset	w9, ge  // ge = tcont
  408c70:	tbnz	w9, #0, 408c84 <wcrtomb@plt+0x6374>
  408c74:	mov	w8, wzr
  408c78:	and	w8, w8, #0x1
  408c7c:	sturb	w8, [x29, #-1]
  408c80:	b	408d08 <wcrtomb@plt+0x63f8>
  408c84:	ldur	w0, [x29, #-20]
  408c88:	ldr	x1, [sp, #8]
  408c8c:	mov	w2, #0x4                   	// #4
  408c90:	bl	4023c0 <lseek@plt>
  408c94:	str	x0, [sp]
  408c98:	ldr	x8, [sp]
  408c9c:	mov	x9, xzr
  408ca0:	cmp	x9, x8
  408ca4:	cset	w10, gt
  408ca8:	tbnz	w10, #0, 408cfc <wcrtomb@plt+0x63ec>
  408cac:	ldur	w0, [x29, #-20]
  408cb0:	ldr	x1, [sp, #8]
  408cb4:	mov	w8, wzr
  408cb8:	mov	w2, w8
  408cbc:	bl	4023c0 <lseek@plt>
  408cc0:	cmp	x0, #0x0
  408cc4:	cset	w8, ge  // ge = tcont
  408cc8:	tbnz	w8, #0, 408cd8 <wcrtomb@plt+0x63c8>
  408ccc:	bl	402870 <__errno_location@plt>
  408cd0:	ldr	w0, [x0]
  408cd4:	bl	4072a4 <wcrtomb@plt+0x4994>
  408cd8:	ldr	x8, [sp]
  408cdc:	ldr	x9, [sp, #16]
  408ce0:	ldr	x9, [x9, #48]
  408ce4:	cmp	x8, x9
  408ce8:	b.ge	408cfc <wcrtomb@plt+0x63ec>  // b.tcont
  408cec:	mov	w8, #0x1                   	// #1
  408cf0:	and	w8, w8, #0x1
  408cf4:	sturb	w8, [x29, #-1]
  408cf8:	b	408d08 <wcrtomb@plt+0x63f8>
  408cfc:	mov	w8, wzr
  408d00:	and	w8, w8, #0x1
  408d04:	sturb	w8, [x29, #-1]
  408d08:	ldurb	w8, [x29, #-1]
  408d0c:	and	w0, w8, #0x1
  408d10:	ldp	x29, x30, [sp, #48]
  408d14:	add	sp, sp, #0x40
  408d18:	ret
  408d1c:	sub	sp, sp, #0x30
  408d20:	stp	x29, x30, [sp, #32]
  408d24:	add	x29, sp, #0x20
  408d28:	stur	x0, [x29, #-8]
  408d2c:	str	x1, [sp, #16]
  408d30:	strb	w2, [sp, #15]
  408d34:	ldrb	w8, [sp, #15]
  408d38:	cbz	w8, 408dac <wcrtomb@plt+0x649c>
  408d3c:	ldr	x8, [sp, #16]
  408d40:	mov	w9, #0x0                   	// #0
  408d44:	strb	w9, [x8]
  408d48:	ldur	x0, [x29, #-8]
  408d4c:	bl	4022f0 <strlen@plt>
  408d50:	ldur	x8, [x29, #-8]
  408d54:	add	x8, x8, x0
  408d58:	stur	x8, [x29, #-8]
  408d5c:	ldrb	w9, [sp, #15]
  408d60:	ldr	x8, [sp, #16]
  408d64:	strb	w9, [x8]
  408d68:	ldur	x8, [x29, #-8]
  408d6c:	ldr	x10, [sp, #16]
  408d70:	cmp	x8, x10
  408d74:	b.ne	408d7c <wcrtomb@plt+0x646c>  // b.any
  408d78:	b	408dac <wcrtomb@plt+0x649c>
  408d7c:	ldrb	w8, [sp, #15]
  408d80:	ldur	x9, [x29, #-8]
  408d84:	add	x10, x9, #0x1
  408d88:	stur	x10, [x29, #-8]
  408d8c:	strb	w8, [x9]
  408d90:	ldur	x8, [x29, #-8]
  408d94:	ldrb	w9, [x8]
  408d98:	cmp	w9, #0x0
  408d9c:	cset	w9, ne  // ne = any
  408da0:	eor	w9, w9, #0x1
  408da4:	tbnz	w9, #0, 408d7c <wcrtomb@plt+0x646c>
  408da8:	b	408d3c <wcrtomb@plt+0x642c>
  408dac:	ldp	x29, x30, [sp, #32]
  408db0:	add	sp, sp, #0x30
  408db4:	ret
  408db8:	sub	sp, sp, #0x90
  408dbc:	stp	x29, x30, [sp, #128]
  408dc0:	add	x29, sp, #0x80
  408dc4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408dc8:	add	x8, x8, #0x5f8
  408dcc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408dd0:	add	x9, x9, #0x4c3
  408dd4:	stur	x0, [x29, #-8]
  408dd8:	stur	x1, [x29, #-16]
  408ddc:	ldr	x10, [x8]
  408de0:	stur	x10, [x29, #-24]
  408de4:	ldur	x10, [x29, #-8]
  408de8:	stur	x10, [x29, #-40]
  408dec:	str	x8, [sp, #40]
  408df0:	str	x9, [sp, #32]
  408df4:	ldur	x8, [x29, #-40]
  408df8:	ldur	x9, [x29, #-16]
  408dfc:	cmp	x8, x9
  408e00:	b.cs	408fb8 <wcrtomb@plt+0x66a8>  // b.hs, b.nlast
  408e04:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408e08:	add	x8, x8, #0x590
  408e0c:	ldr	x8, [x8]
  408e10:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408e14:	add	x9, x9, #0x598
  408e18:	ldr	x0, [x9]
  408e1c:	ldur	x1, [x29, #-40]
  408e20:	ldur	x9, [x29, #-16]
  408e24:	ldur	x10, [x29, #-40]
  408e28:	subs	x2, x9, x10
  408e2c:	sub	x3, x29, #0x30
  408e30:	mov	x9, xzr
  408e34:	mov	x4, x9
  408e38:	blr	x8
  408e3c:	stur	x0, [x29, #-56]
  408e40:	ldur	x8, [x29, #-56]
  408e44:	mov	x9, #0xffffffffffffffff    	// #-1
  408e48:	cmp	x8, x9
  408e4c:	b.ne	408e74 <wcrtomb@plt+0x6564>  // b.any
  408e50:	ldr	x8, [sp, #32]
  408e54:	ldrb	w9, [x8]
  408e58:	tbnz	w9, #0, 408e60 <wcrtomb@plt+0x6550>
  408e5c:	b	408fb8 <wcrtomb@plt+0x66a8>
  408e60:	ldur	x8, [x29, #-16]
  408e64:	ldur	x9, [x29, #-40]
  408e68:	subs	x8, x8, x9
  408e6c:	stur	x8, [x29, #-56]
  408e70:	stur	xzr, [x29, #-48]
  408e74:	ldur	x8, [x29, #-40]
  408e78:	ldur	x9, [x29, #-56]
  408e7c:	add	x8, x8, x9
  408e80:	str	x8, [sp, #64]
  408e84:	ldr	x8, [sp, #64]
  408e88:	ldur	x9, [x29, #-48]
  408e8c:	add	x8, x8, x9
  408e90:	stur	x8, [x29, #-32]
  408e94:	ldr	x8, [sp, #32]
  408e98:	ldrb	w10, [x8]
  408e9c:	tbnz	w10, #0, 408eb4 <wcrtomb@plt+0x65a4>
  408ea0:	ldr	x8, [sp, #64]
  408ea4:	ldur	x9, [x29, #-16]
  408ea8:	cmp	x8, x9
  408eac:	b.ne	408eb4 <wcrtomb@plt+0x65a4>  // b.any
  408eb0:	b	408fb8 <wcrtomb@plt+0x66a8>
  408eb4:	ldr	x8, [sp, #32]
  408eb8:	ldrb	w9, [x8]
  408ebc:	tbnz	w9, #0, 408ec4 <wcrtomb@plt+0x65b4>
  408ec0:	b	408ed4 <wcrtomb@plt+0x65c4>
  408ec4:	ldur	x8, [x29, #-40]
  408ec8:	ldr	x9, [sp, #64]
  408ecc:	cmp	x8, x9
  408ed0:	b.cs	408fac <wcrtomb@plt+0x669c>  // b.hs, b.nlast
  408ed4:	ldr	x8, [sp, #32]
  408ed8:	ldrb	w9, [x8]
  408edc:	tbnz	w9, #0, 408ee4 <wcrtomb@plt+0x65d4>
  408ee0:	b	408ef0 <wcrtomb@plt+0x65e0>
  408ee4:	ldur	x8, [x29, #-40]
  408ee8:	str	x8, [sp, #24]
  408eec:	b	408ef8 <wcrtomb@plt+0x65e8>
  408ef0:	ldr	x8, [sp, #64]
  408ef4:	str	x8, [sp, #24]
  408ef8:	ldr	x8, [sp, #24]
  408efc:	str	x8, [sp, #56]
  408f00:	ldr	x8, [sp, #32]
  408f04:	ldrb	w9, [x8]
  408f08:	tbnz	w9, #0, 408f10 <wcrtomb@plt+0x6600>
  408f0c:	b	408f1c <wcrtomb@plt+0x660c>
  408f10:	ldr	x8, [sp, #64]
  408f14:	str	x8, [sp, #16]
  408f18:	b	408f24 <wcrtomb@plt+0x6614>
  408f1c:	ldur	x8, [x29, #-32]
  408f20:	str	x8, [sp, #16]
  408f24:	ldr	x8, [sp, #16]
  408f28:	str	x8, [sp, #48]
  408f2c:	ldr	x0, [sp, #56]
  408f30:	ldr	x1, [sp, #48]
  408f34:	bl	409270 <wcrtomb@plt+0x6960>
  408f38:	ldr	x8, [sp, #40]
  408f3c:	ldr	x9, [x8]
  408f40:	cbz	x9, 408f58 <wcrtomb@plt+0x6648>
  408f44:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408f48:	add	x8, x8, #0x589
  408f4c:	ldrb	w9, [x8]
  408f50:	tbnz	w9, #0, 408f58 <wcrtomb@plt+0x6648>
  408f54:	b	408fac <wcrtomb@plt+0x669c>
  408f58:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408f5c:	add	x8, x8, #0x4c1
  408f60:	ldrb	w9, [x8]
  408f64:	tbnz	w9, #0, 408f6c <wcrtomb@plt+0x665c>
  408f68:	b	408fa8 <wcrtomb@plt+0x6698>
  408f6c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408f70:	add	x8, x8, #0x5c1
  408f74:	ldrb	w9, [x8]
  408f78:	tbnz	w9, #0, 408f80 <wcrtomb@plt+0x6670>
  408f7c:	b	408f94 <wcrtomb@plt+0x6684>
  408f80:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408f84:	add	x8, x8, #0x3d0
  408f88:	ldr	w9, [x8]
  408f8c:	str	w9, [sp, #12]
  408f90:	b	408f9c <wcrtomb@plt+0x668c>
  408f94:	mov	w8, wzr
  408f98:	str	w8, [sp, #12]
  408f9c:	ldr	w8, [sp, #12]
  408fa0:	mov	w0, w8
  408fa4:	bl	402310 <exit@plt>
  408fa8:	b	408fb8 <wcrtomb@plt+0x66a8>
  408fac:	ldur	x8, [x29, #-32]
  408fb0:	stur	x8, [x29, #-40]
  408fb4:	b	408df4 <wcrtomb@plt+0x64e4>
  408fb8:	ldur	x8, [x29, #-24]
  408fbc:	ldr	x9, [sp, #40]
  408fc0:	ldr	x10, [x9]
  408fc4:	subs	x0, x8, x10
  408fc8:	ldp	x29, x30, [sp, #128]
  408fcc:	add	sp, sp, #0x90
  408fd0:	ret
  408fd4:	sub	sp, sp, #0x40
  408fd8:	stp	x29, x30, [sp, #48]
  408fdc:	add	x29, sp, #0x30
  408fe0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408fe4:	add	x8, x8, #0x5e8
  408fe8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  408fec:	add	x9, x9, #0x608
  408ff0:	stur	x0, [x29, #-8]
  408ff4:	ldr	x10, [x8]
  408ff8:	str	x8, [sp, #24]
  408ffc:	str	x9, [sp, #16]
  409000:	cbnz	x10, 409018 <wcrtomb@plt+0x6708>
  409004:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409008:	add	x8, x8, #0x618
  40900c:	ldr	x8, [x8]
  409010:	ldr	x9, [sp, #24]
  409014:	str	x8, [x9]
  409018:	ldr	x8, [sp, #16]
  40901c:	ldr	x9, [x8]
  409020:	mov	x10, xzr
  409024:	cmp	x10, x9
  409028:	cset	w11, ge  // ge = tcont
  40902c:	mov	w12, #0x0                   	// #0
  409030:	str	w12, [sp, #12]
  409034:	tbnz	w11, #0, 409050 <wcrtomb@plt+0x6740>
  409038:	ldr	x8, [sp, #24]
  40903c:	ldr	x9, [x8]
  409040:	ldur	x10, [x29, #-8]
  409044:	cmp	x9, x10
  409048:	cset	w11, cc  // cc = lo, ul, last
  40904c:	str	w11, [sp, #12]
  409050:	ldr	w8, [sp, #12]
  409054:	tbnz	w8, #0, 40905c <wcrtomb@plt+0x674c>
  409058:	b	4090b0 <wcrtomb@plt+0x67a0>
  40905c:	ldr	x8, [sp, #24]
  409060:	ldr	x0, [x8]
  409064:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  409068:	add	x9, x9, #0x8c4
  40906c:	ldrb	w1, [x9]
  409070:	ldur	x9, [x29, #-8]
  409074:	ldr	x10, [x8]
  409078:	subs	x2, x9, x10
  40907c:	bl	402770 <memchr@plt>
  409080:	stur	x0, [x29, #-16]
  409084:	ldr	x8, [sp, #24]
  409088:	ldr	x0, [x8]
  40908c:	ldur	x9, [x29, #-16]
  409090:	add	x1, x9, #0x1
  409094:	mov	w2, #0x2d                  	// #45
  409098:	bl	4096e8 <wcrtomb@plt+0x6dd8>
  40909c:	ldr	x8, [sp, #16]
  4090a0:	ldr	x9, [x8]
  4090a4:	subs	x9, x9, #0x1
  4090a8:	str	x9, [x8]
  4090ac:	b	409018 <wcrtomb@plt+0x6708>
  4090b0:	ldp	x29, x30, [sp, #48]
  4090b4:	add	sp, sp, #0x40
  4090b8:	ret
  4090bc:	sub	sp, sp, #0x30
  4090c0:	stp	x29, x30, [sp, #32]
  4090c4:	add	x29, sp, #0x20
  4090c8:	stur	x0, [x29, #-8]
  4090cc:	str	x1, [sp, #16]
  4090d0:	ldur	x8, [x29, #-8]
  4090d4:	ldr	x9, [sp, #16]
  4090d8:	add	x8, x8, x9
  4090dc:	str	x8, [sp, #8]
  4090e0:	ldr	x8, [sp, #8]
  4090e4:	ldur	x9, [x29, #-8]
  4090e8:	cmp	x8, x9
  4090ec:	b.cs	409118 <wcrtomb@plt+0x6808>  // b.hs, b.nlast
  4090f0:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4090f4:	add	x0, x0, #0xaf
  4090f8:	bl	4028b0 <gettext@plt>
  4090fc:	mov	w8, #0x2                   	// #2
  409100:	str	x0, [sp]
  409104:	mov	w0, w8
  409108:	mov	w8, wzr
  40910c:	mov	w1, w8
  409110:	ldr	x2, [sp]
  409114:	bl	402330 <error@plt>
  409118:	ldr	x0, [sp, #8]
  40911c:	ldp	x29, x30, [sp, #32]
  409120:	add	sp, sp, #0x30
  409124:	ret
  409128:	sub	sp, sp, #0x30
  40912c:	stp	x29, x30, [sp, #32]
  409130:	add	x29, sp, #0x20
  409134:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409138:	add	x8, x8, #0x628
  40913c:	stur	x0, [x29, #-8]
  409140:	str	xzr, [sp, #16]
  409144:	ldr	x8, [x8]
  409148:	str	x8, [sp, #8]
  40914c:	ldr	x8, [sp, #8]
  409150:	ldur	x9, [x29, #-8]
  409154:	cmp	x8, x9
  409158:	b.cs	4091a8 <wcrtomb@plt+0x6898>  // b.hs, b.nlast
  40915c:	ldr	x0, [sp, #8]
  409160:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  409164:	add	x8, x8, #0x8c4
  409168:	ldrb	w1, [x8]
  40916c:	ldur	x8, [x29, #-8]
  409170:	ldr	x9, [sp, #8]
  409174:	subs	x2, x8, x9
  409178:	bl	402770 <memchr@plt>
  40917c:	str	x0, [sp, #8]
  409180:	ldr	x8, [sp, #8]
  409184:	cbnz	x8, 40918c <wcrtomb@plt+0x687c>
  409188:	b	4091a8 <wcrtomb@plt+0x6898>
  40918c:	ldr	x8, [sp, #16]
  409190:	add	x8, x8, #0x1
  409194:	str	x8, [sp, #16]
  409198:	ldr	x8, [sp, #8]
  40919c:	add	x8, x8, #0x1
  4091a0:	str	x8, [sp, #8]
  4091a4:	b	40914c <wcrtomb@plt+0x683c>
  4091a8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4091ac:	add	x8, x8, #0x5f0
  4091b0:	ldr	x0, [x8]
  4091b4:	ldr	x1, [sp, #16]
  4091b8:	str	x8, [sp]
  4091bc:	bl	4090bc <wcrtomb@plt+0x67ac>
  4091c0:	ldr	x8, [sp]
  4091c4:	str	x0, [x8]
  4091c8:	ldur	x9, [x29, #-8]
  4091cc:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4091d0:	add	x10, x10, #0x628
  4091d4:	str	x9, [x10]
  4091d8:	ldp	x29, x30, [sp, #32]
  4091dc:	add	sp, sp, #0x30
  4091e0:	ret
  4091e4:	ret
  4091e8:	sub	sp, sp, #0x20
  4091ec:	str	x0, [sp, #16]
  4091f0:	str	x1, [sp, #8]
  4091f4:	ldr	x8, [sp, #16]
  4091f8:	str	x8, [sp]
  4091fc:	ldr	x8, [sp]
  409200:	ldr	x9, [sp, #16]
  409204:	ldr	x10, [sp, #8]
  409208:	add	x9, x9, x10
  40920c:	cmp	x8, x9
  409210:	b.cs	409240 <wcrtomb@plt+0x6930>  // b.hs, b.nlast
  409214:	ldr	x8, [sp]
  409218:	ldrb	w9, [x8]
  40921c:	cbz	w9, 409230 <wcrtomb@plt+0x6920>
  409220:	mov	w8, wzr
  409224:	and	w8, w8, #0x1
  409228:	strb	w8, [sp, #31]
  40922c:	b	40924c <wcrtomb@plt+0x693c>
  409230:	ldr	x8, [sp]
  409234:	add	x8, x8, #0x1
  409238:	str	x8, [sp]
  40923c:	b	4091fc <wcrtomb@plt+0x68ec>
  409240:	mov	w8, #0x1                   	// #1
  409244:	and	w8, w8, #0x1
  409248:	strb	w8, [sp, #31]
  40924c:	ldrb	w8, [sp, #31]
  409250:	and	w0, w8, #0x1
  409254:	add	sp, sp, #0x20
  409258:	ret
  40925c:	sub	sp, sp, #0x10
  409260:	str	x0, [sp, #8]
  409264:	str	x1, [sp]
  409268:	add	sp, sp, #0x10
  40926c:	ret
  409270:	sub	sp, sp, #0xa0
  409274:	stp	x29, x30, [sp, #144]
  409278:	add	x29, sp, #0x90
  40927c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  409280:	add	x8, x8, #0x8c4
  409284:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409288:	add	x9, x9, #0x58a
  40928c:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409290:	add	x10, x10, #0x5e8
  409294:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409298:	add	x11, x11, #0x4a0
  40929c:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4092a0:	add	x12, x12, #0x5f8
  4092a4:	stur	x0, [x29, #-8]
  4092a8:	stur	x1, [x29, #-16]
  4092ac:	ldrb	w13, [x8]
  4092b0:	sturb	w13, [x29, #-17]
  4092b4:	ldrb	w13, [x9]
  4092b8:	str	x9, [sp, #64]
  4092bc:	str	x10, [sp, #56]
  4092c0:	str	x11, [sp, #48]
  4092c4:	str	x12, [sp, #40]
  4092c8:	tbnz	w13, #0, 4092ec <wcrtomb@plt+0x69dc>
  4092cc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4092d0:	add	x8, x8, #0x608
  4092d4:	ldr	x8, [x8]
  4092d8:	cmp	x8, #0x0
  4092dc:	cset	w9, le
  4092e0:	tbnz	w9, #0, 4092ec <wcrtomb@plt+0x69dc>
  4092e4:	ldur	x0, [x29, #-8]
  4092e8:	bl	408fd4 <wcrtomb@plt+0x66c4>
  4092ec:	ldur	x8, [x29, #-8]
  4092f0:	stur	x8, [x29, #-32]
  4092f4:	ldr	x8, [sp, #64]
  4092f8:	ldrb	w9, [x8]
  4092fc:	tbnz	w9, #0, 40948c <wcrtomb@plt+0x6b7c>
  409300:	ldr	x8, [sp, #56]
  409304:	ldr	x9, [x8]
  409308:	cbz	x9, 40931c <wcrtomb@plt+0x6a0c>
  40930c:	ldr	x8, [sp, #56]
  409310:	ldr	x9, [x8]
  409314:	str	x9, [sp, #32]
  409318:	b	40932c <wcrtomb@plt+0x6a1c>
  40931c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409320:	add	x8, x8, #0x618
  409324:	ldr	x8, [x8]
  409328:	str	x8, [sp, #32]
  40932c:	ldr	x8, [sp, #32]
  409330:	stur	x8, [x29, #-40]
  409334:	stur	xzr, [x29, #-48]
  409338:	ldur	x8, [x29, #-48]
  40933c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409340:	add	x9, x9, #0x498
  409344:	ldr	x9, [x9]
  409348:	cmp	x8, x9
  40934c:	b.ge	409394 <wcrtomb@plt+0x6a84>  // b.tcont
  409350:	ldur	x8, [x29, #-32]
  409354:	ldur	x9, [x29, #-40]
  409358:	cmp	x8, x9
  40935c:	b.ls	409384 <wcrtomb@plt+0x6a74>  // b.plast
  409360:	ldur	x8, [x29, #-32]
  409364:	mov	x9, #0xffffffffffffffff    	// #-1
  409368:	add	x8, x8, x9
  40936c:	stur	x8, [x29, #-32]
  409370:	ldur	x8, [x29, #-32]
  409374:	ldurb	w9, [x8, #-1]
  409378:	ldurb	w10, [x29, #-17]
  40937c:	cmp	w9, w10
  409380:	b.ne	409360 <wcrtomb@plt+0x6a50>  // b.any
  409384:	ldur	x8, [x29, #-48]
  409388:	add	x8, x8, #0x1
  40938c:	stur	x8, [x29, #-48]
  409390:	b	409338 <wcrtomb@plt+0x6a28>
  409394:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409398:	add	x8, x8, #0x498
  40939c:	ldr	x8, [x8]
  4093a0:	mov	x9, xzr
  4093a4:	cmp	x9, x8
  4093a8:	cset	w10, le
  4093ac:	tbnz	w10, #0, 4093c8 <wcrtomb@plt+0x6ab8>
  4093b0:	ldr	x8, [sp, #48]
  4093b4:	ldr	x9, [x8]
  4093b8:	mov	x10, xzr
  4093bc:	cmp	x10, x9
  4093c0:	cset	w11, gt
  4093c4:	tbnz	w11, #0, 409438 <wcrtomb@plt+0x6b28>
  4093c8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4093cc:	add	x8, x8, #0x642
  4093d0:	ldrb	w9, [x8]
  4093d4:	tbnz	w9, #0, 4093dc <wcrtomb@plt+0x6acc>
  4093d8:	b	409438 <wcrtomb@plt+0x6b28>
  4093dc:	ldur	x8, [x29, #-32]
  4093e0:	ldr	x9, [sp, #56]
  4093e4:	ldr	x10, [x9]
  4093e8:	cmp	x8, x10
  4093ec:	b.eq	409438 <wcrtomb@plt+0x6b28>  // b.none
  4093f0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4093f4:	add	x8, x8, #0x368
  4093f8:	ldr	x8, [x8]
  4093fc:	cbz	x8, 409438 <wcrtomb@plt+0x6b28>
  409400:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409404:	add	x8, x8, #0x3a0
  409408:	ldr	x0, [x8]
  40940c:	str	x8, [sp, #24]
  409410:	bl	409630 <wcrtomb@plt+0x6d20>
  409414:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409418:	add	x8, x8, #0x368
  40941c:	ldr	x0, [x8]
  409420:	bl	409664 <wcrtomb@plt+0x6d54>
  409424:	ldr	x8, [sp, #24]
  409428:	ldr	x0, [x8]
  40942c:	bl	4096b4 <wcrtomb@plt+0x6da4>
  409430:	mov	w0, #0xa                   	// #10
  409434:	bl	40819c <wcrtomb@plt+0x588c>
  409438:	ldur	x8, [x29, #-32]
  40943c:	ldur	x9, [x29, #-8]
  409440:	cmp	x8, x9
  409444:	b.cs	40948c <wcrtomb@plt+0x6b7c>  // b.hs, b.nlast
  409448:	ldur	x0, [x29, #-32]
  40944c:	ldurb	w1, [x29, #-17]
  409450:	ldur	x8, [x29, #-8]
  409454:	ldur	x9, [x29, #-32]
  409458:	subs	x2, x8, x9
  40945c:	bl	402770 <memchr@plt>
  409460:	stur	x0, [x29, #-56]
  409464:	ldur	x8, [x29, #-56]
  409468:	add	x8, x8, #0x1
  40946c:	stur	x8, [x29, #-56]
  409470:	ldur	x0, [x29, #-32]
  409474:	ldur	x1, [x29, #-56]
  409478:	mov	w2, #0x2d                  	// #45
  40947c:	bl	4096e8 <wcrtomb@plt+0x6dd8>
  409480:	ldur	x8, [x29, #-56]
  409484:	stur	x8, [x29, #-32]
  409488:	b	409438 <wcrtomb@plt+0x6b28>
  40948c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409490:	add	x8, x8, #0x4c3
  409494:	ldrb	w9, [x8]
  409498:	tbnz	w9, #0, 4094a0 <wcrtomb@plt+0x6b90>
  40949c:	b	409540 <wcrtomb@plt+0x6c30>
  4094a0:	stur	xzr, [x29, #-64]
  4094a4:	ldur	x8, [x29, #-32]
  4094a8:	ldur	x9, [x29, #-16]
  4094ac:	mov	w10, #0x0                   	// #0
  4094b0:	cmp	x8, x9
  4094b4:	str	w10, [sp, #20]
  4094b8:	b.cs	4094d4 <wcrtomb@plt+0x6bc4>  // b.hs, b.nlast
  4094bc:	ldur	x8, [x29, #-64]
  4094c0:	ldr	x9, [sp, #40]
  4094c4:	ldr	x10, [x9]
  4094c8:	cmp	x8, x10
  4094cc:	cset	w11, lt  // lt = tstop
  4094d0:	str	w11, [sp, #20]
  4094d4:	ldr	w8, [sp, #20]
  4094d8:	tbnz	w8, #0, 4094e0 <wcrtomb@plt+0x6bd0>
  4094dc:	b	40953c <wcrtomb@plt+0x6c2c>
  4094e0:	ldur	x0, [x29, #-32]
  4094e4:	ldurb	w1, [x29, #-17]
  4094e8:	ldur	x8, [x29, #-16]
  4094ec:	ldur	x9, [x29, #-32]
  4094f0:	subs	x2, x8, x9
  4094f4:	bl	402770 <memchr@plt>
  4094f8:	str	x0, [sp, #72]
  4094fc:	ldr	x8, [sp, #72]
  409500:	add	x8, x8, #0x1
  409504:	str	x8, [sp, #72]
  409508:	ldr	x8, [sp, #64]
  40950c:	ldrb	w10, [x8]
  409510:	tbnz	w10, #0, 409524 <wcrtomb@plt+0x6c14>
  409514:	ldur	x0, [x29, #-32]
  409518:	ldr	x1, [sp, #72]
  40951c:	mov	w2, #0x3a                  	// #58
  409520:	bl	4096e8 <wcrtomb@plt+0x6dd8>
  409524:	ldr	x8, [sp, #72]
  409528:	stur	x8, [x29, #-32]
  40952c:	ldur	x8, [x29, #-64]
  409530:	add	x8, x8, #0x1
  409534:	stur	x8, [x29, #-64]
  409538:	b	4094a4 <wcrtomb@plt+0x6b94>
  40953c:	b	40956c <wcrtomb@plt+0x6c5c>
  409540:	ldr	x8, [sp, #64]
  409544:	ldrb	w9, [x8]
  409548:	tbnz	w9, #0, 40955c <wcrtomb@plt+0x6c4c>
  40954c:	ldur	x0, [x29, #-8]
  409550:	ldur	x1, [x29, #-16]
  409554:	mov	w2, #0x3a                  	// #58
  409558:	bl	4096e8 <wcrtomb@plt+0x6dd8>
  40955c:	mov	x8, #0x1                   	// #1
  409560:	stur	x8, [x29, #-64]
  409564:	ldur	x8, [x29, #-16]
  409568:	stur	x8, [x29, #-32]
  40956c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409570:	add	x8, x8, #0x638
  409574:	ldr	x8, [x8]
  409578:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40957c:	add	x9, x9, #0x620
  409580:	ldr	x9, [x9]
  409584:	ldur	x10, [x29, #-32]
  409588:	subs	x9, x9, x10
  40958c:	subs	x8, x8, x9
  409590:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409594:	add	x9, x9, #0x600
  409598:	str	x8, [x9]
  40959c:	ldr	x8, [sp, #64]
  4095a0:	ldrb	w11, [x8]
  4095a4:	tbnz	w11, #0, 4095ac <wcrtomb@plt+0x6c9c>
  4095a8:	b	4095b8 <wcrtomb@plt+0x6ca8>
  4095ac:	mov	x8, xzr
  4095b0:	str	x8, [sp, #8]
  4095b4:	b	4095f0 <wcrtomb@plt+0x6ce0>
  4095b8:	ldr	x8, [sp, #48]
  4095bc:	ldr	x9, [x8]
  4095c0:	mov	x10, xzr
  4095c4:	cmp	x10, x9
  4095c8:	cset	w11, le
  4095cc:	tbnz	w11, #0, 4095dc <wcrtomb@plt+0x6ccc>
  4095d0:	mov	x8, xzr
  4095d4:	str	x8, [sp]
  4095d8:	b	4095e8 <wcrtomb@plt+0x6cd8>
  4095dc:	ldr	x8, [sp, #48]
  4095e0:	ldr	x9, [x8]
  4095e4:	str	x9, [sp]
  4095e8:	ldr	x8, [sp]
  4095ec:	str	x8, [sp, #8]
  4095f0:	ldr	x8, [sp, #8]
  4095f4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4095f8:	add	x9, x9, #0x608
  4095fc:	str	x8, [x9]
  409600:	mov	w10, #0x1                   	// #1
  409604:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409608:	add	x8, x8, #0x642
  40960c:	strb	w10, [x8]
  409610:	ldur	x8, [x29, #-64]
  409614:	ldr	x9, [sp, #40]
  409618:	ldr	x11, [x9]
  40961c:	subs	x8, x11, x8
  409620:	str	x8, [x9]
  409624:	ldp	x29, x30, [sp, #144]
  409628:	add	sp, sp, #0xa0
  40962c:	ret
  409630:	sub	sp, sp, #0x20
  409634:	stp	x29, x30, [sp, #16]
  409638:	add	x29, sp, #0x10
  40963c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409640:	add	x8, x8, #0x4c4
  409644:	str	x0, [sp, #8]
  409648:	ldr	w9, [x8]
  40964c:	cbz	w9, 409658 <wcrtomb@plt+0x6d48>
  409650:	ldr	x0, [sp, #8]
  409654:	bl	4099b4 <wcrtomb@plt+0x70a4>
  409658:	ldp	x29, x30, [sp, #16]
  40965c:	add	sp, sp, #0x20
  409660:	ret
  409664:	sub	sp, sp, #0x20
  409668:	stp	x29, x30, [sp, #16]
  40966c:	add	x29, sp, #0x10
  409670:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409674:	add	x8, x8, #0x458
  409678:	str	x0, [sp, #8]
  40967c:	ldr	x0, [sp, #8]
  409680:	ldr	x1, [x8]
  409684:	bl	4027e0 <fputs_unlocked@plt>
  409688:	cmp	w0, #0x0
  40968c:	cset	w9, ge  // ge = tcont
  409690:	tbnz	w9, #0, 4096a8 <wcrtomb@plt+0x6d98>
  409694:	bl	402870 <__errno_location@plt>
  409698:	ldr	w8, [x0]
  40969c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4096a0:	add	x9, x9, #0x5c4
  4096a4:	str	w8, [x9]
  4096a8:	ldp	x29, x30, [sp, #16]
  4096ac:	add	sp, sp, #0x20
  4096b0:	ret
  4096b4:	sub	sp, sp, #0x20
  4096b8:	stp	x29, x30, [sp, #16]
  4096bc:	add	x29, sp, #0x10
  4096c0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4096c4:	add	x8, x8, #0x4c4
  4096c8:	str	x0, [sp, #8]
  4096cc:	ldr	w9, [x8]
  4096d0:	cbz	w9, 4096dc <wcrtomb@plt+0x6dcc>
  4096d4:	ldr	x0, [sp, #8]
  4096d8:	bl	4099f0 <wcrtomb@plt+0x70e0>
  4096dc:	ldp	x29, x30, [sp, #16]
  4096e0:	add	sp, sp, #0x20
  4096e4:	ret
  4096e8:	sub	sp, sp, #0x70
  4096ec:	stp	x29, x30, [sp, #96]
  4096f0:	add	x29, sp, #0x60
  4096f4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4096f8:	add	x8, x8, #0x4a8
  4096fc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409700:	add	x9, x9, #0x4c4
  409704:	stur	x0, [x29, #-8]
  409708:	stur	x1, [x29, #-16]
  40970c:	sturb	w2, [x29, #-17]
  409710:	ldrb	w10, [x8]
  409714:	str	x8, [sp, #48]
  409718:	str	x9, [sp, #40]
  40971c:	tbnz	w10, #0, 409748 <wcrtomb@plt+0x6e38>
  409720:	ldur	x0, [x29, #-8]
  409724:	ldur	x8, [x29, #-16]
  409728:	ldur	x9, [x29, #-8]
  40972c:	subs	x8, x8, x9
  409730:	subs	x1, x8, #0x1
  409734:	ldur	x2, [x29, #-16]
  409738:	ldurb	w3, [x29, #-17]
  40973c:	bl	409a28 <wcrtomb@plt+0x7118>
  409740:	tbnz	w0, #0, 409748 <wcrtomb@plt+0x6e38>
  409744:	b	4099a8 <wcrtomb@plt+0x7098>
  409748:	ldurb	w8, [x29, #-17]
  40974c:	cmp	w8, #0x3a
  409750:	cset	w8, eq  // eq = none
  409754:	mov	w9, #0x1                   	// #1
  409758:	and	w8, w8, #0x1
  40975c:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409760:	add	x10, x10, #0x4c3
  409764:	ldrb	w11, [x10]
  409768:	and	w11, w11, #0x1
  40976c:	eor	w8, w8, w11
  409770:	cmp	w8, #0x0
  409774:	cset	w8, ne  // ne = any
  409778:	and	w8, w8, w9
  40977c:	sturb	w8, [x29, #-18]
  409780:	ldr	x10, [sp, #40]
  409784:	ldr	w8, [x10]
  409788:	cbz	w8, 40984c <wcrtomb@plt+0x6f3c>
  40978c:	ldurb	w8, [x29, #-17]
  409790:	cmp	w8, #0x3a
  409794:	cset	w8, eq  // eq = none
  409798:	and	w8, w8, #0x1
  40979c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4097a0:	add	x9, x9, #0x4c3
  4097a4:	ldrb	w10, [x9]
  4097a8:	mov	w11, #0x0                   	// #0
  4097ac:	str	w8, [sp, #36]
  4097b0:	str	w11, [sp, #32]
  4097b4:	tbnz	w10, #0, 4097bc <wcrtomb@plt+0x6eac>
  4097b8:	b	4097d0 <wcrtomb@plt+0x6ec0>
  4097bc:	ldr	x8, [sp, #40]
  4097c0:	ldr	w9, [x8]
  4097c4:	cmp	w9, #0x0
  4097c8:	cset	w9, lt  // lt = tstop
  4097cc:	str	w9, [sp, #32]
  4097d0:	ldr	w8, [sp, #32]
  4097d4:	and	w8, w8, #0x1
  4097d8:	ldr	w9, [sp, #36]
  4097dc:	eor	w8, w9, w8
  4097e0:	cbz	w8, 4097f8 <wcrtomb@plt+0x6ee8>
  4097e4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4097e8:	add	x8, x8, #0x3a8
  4097ec:	ldr	x8, [x8]
  4097f0:	str	x8, [sp, #24]
  4097f4:	b	409808 <wcrtomb@plt+0x6ef8>
  4097f8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4097fc:	add	x8, x8, #0x3b0
  409800:	ldr	x8, [x8]
  409804:	str	x8, [sp, #24]
  409808:	ldr	x8, [sp, #24]
  40980c:	stur	x8, [x29, #-32]
  409810:	ldurb	w9, [x29, #-17]
  409814:	cmp	w9, #0x3a
  409818:	b.ne	409830 <wcrtomb@plt+0x6f20>  // b.any
  40981c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409820:	add	x8, x8, #0x378
  409824:	ldr	x8, [x8]
  409828:	str	x8, [sp, #16]
  40982c:	b	409840 <wcrtomb@plt+0x6f30>
  409830:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409834:	add	x8, x8, #0x370
  409838:	ldr	x8, [x8]
  40983c:	str	x8, [sp, #16]
  409840:	ldr	x8, [sp, #16]
  409844:	stur	x8, [x29, #-40]
  409848:	b	409858 <wcrtomb@plt+0x6f48>
  40984c:	mov	x8, xzr
  409850:	stur	x8, [x29, #-40]
  409854:	stur	x8, [x29, #-32]
  409858:	ldr	x8, [sp, #48]
  40985c:	ldrb	w9, [x8]
  409860:	tbnz	w9, #0, 409868 <wcrtomb@plt+0x6f58>
  409864:	b	409870 <wcrtomb@plt+0x6f60>
  409868:	ldurb	w8, [x29, #-18]
  40986c:	tbnz	w8, #0, 409894 <wcrtomb@plt+0x6f84>
  409870:	ldr	x8, [sp, #40]
  409874:	ldr	w9, [x8]
  409878:	cbz	w9, 409908 <wcrtomb@plt+0x6ff8>
  40987c:	ldur	x8, [x29, #-32]
  409880:	ldrb	w9, [x8]
  409884:	cbnz	w9, 409894 <wcrtomb@plt+0x6f84>
  409888:	ldur	x8, [x29, #-40]
  40988c:	ldrb	w9, [x8]
  409890:	cbz	w9, 409908 <wcrtomb@plt+0x6ff8>
  409894:	ldurb	w8, [x29, #-18]
  409898:	tbnz	w8, #0, 4098a0 <wcrtomb@plt+0x6f90>
  40989c:	b	4098dc <wcrtomb@plt+0x6fcc>
  4098a0:	ldr	x8, [sp, #48]
  4098a4:	ldrb	w9, [x8]
  4098a8:	tbnz	w9, #0, 4098b8 <wcrtomb@plt+0x6fa8>
  4098ac:	ldur	x8, [x29, #-40]
  4098b0:	ldrb	w9, [x8]
  4098b4:	cbz	w9, 4098dc <wcrtomb@plt+0x6fcc>
  4098b8:	ldur	x0, [x29, #-8]
  4098bc:	ldur	x1, [x29, #-16]
  4098c0:	ldur	x2, [x29, #-32]
  4098c4:	ldur	x3, [x29, #-40]
  4098c8:	bl	409c58 <wcrtomb@plt+0x7348>
  4098cc:	stur	x0, [x29, #-8]
  4098d0:	ldur	x8, [x29, #-8]
  4098d4:	cbnz	x8, 4098dc <wcrtomb@plt+0x6fcc>
  4098d8:	b	4099a8 <wcrtomb@plt+0x7098>
  4098dc:	ldr	x8, [sp, #48]
  4098e0:	ldrb	w9, [x8]
  4098e4:	tbnz	w9, #0, 409908 <wcrtomb@plt+0x6ff8>
  4098e8:	ldur	x8, [x29, #-32]
  4098ec:	ldrb	w9, [x8]
  4098f0:	cbz	w9, 409908 <wcrtomb@plt+0x6ff8>
  4098f4:	ldur	x0, [x29, #-8]
  4098f8:	ldur	x1, [x29, #-16]
  4098fc:	ldur	x2, [x29, #-32]
  409900:	bl	409e6c <wcrtomb@plt+0x755c>
  409904:	stur	x0, [x29, #-8]
  409908:	ldr	x8, [sp, #48]
  40990c:	ldrb	w9, [x8]
  409910:	tbnz	w9, #0, 40993c <wcrtomb@plt+0x702c>
  409914:	ldur	x8, [x29, #-16]
  409918:	ldur	x9, [x29, #-8]
  40991c:	cmp	x8, x9
  409920:	b.ls	40993c <wcrtomb@plt+0x702c>  // b.plast
  409924:	ldur	x0, [x29, #-8]
  409928:	ldur	x8, [x29, #-16]
  40992c:	ldur	x9, [x29, #-8]
  409930:	subs	x2, x8, x9
  409934:	mov	x1, #0x1                   	// #1
  409938:	bl	409fa0 <wcrtomb@plt+0x7690>
  40993c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409940:	add	x8, x8, #0x4f0
  409944:	ldrb	w9, [x8]
  409948:	tbnz	w9, #0, 409950 <wcrtomb@plt+0x7040>
  40994c:	b	409954 <wcrtomb@plt+0x7044>
  409950:	bl	4082b4 <wcrtomb@plt+0x59a4>
  409954:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409958:	add	x8, x8, #0x5c4
  40995c:	ldr	w9, [x8]
  409960:	cbz	w9, 409998 <wcrtomb@plt+0x7088>
  409964:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409968:	add	x8, x8, #0x5c4
  40996c:	ldr	w1, [x8]
  409970:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  409974:	add	x0, x0, #0x9e
  409978:	str	w1, [sp, #12]
  40997c:	bl	4028b0 <gettext@plt>
  409980:	mov	w9, #0x2                   	// #2
  409984:	str	x0, [sp]
  409988:	mov	w0, w9
  40998c:	ldr	w1, [sp, #12]
  409990:	ldr	x2, [sp]
  409994:	bl	402330 <error@plt>
  409998:	ldur	x8, [x29, #-16]
  40999c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4099a0:	add	x9, x9, #0x5e8
  4099a4:	str	x8, [x9]
  4099a8:	ldp	x29, x30, [sp, #96]
  4099ac:	add	sp, sp, #0x70
  4099b0:	ret
  4099b4:	sub	sp, sp, #0x20
  4099b8:	stp	x29, x30, [sp, #16]
  4099bc:	add	x29, sp, #0x10
  4099c0:	str	x0, [sp, #8]
  4099c4:	ldr	x8, [sp, #8]
  4099c8:	ldrb	w9, [x8]
  4099cc:	cbz	w9, 4099e4 <wcrtomb@plt+0x70d4>
  4099d0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4099d4:	add	x8, x8, #0x3b8
  4099d8:	ldr	x0, [x8]
  4099dc:	ldr	x1, [sp, #8]
  4099e0:	bl	423a40 <wcrtomb@plt+0x21130>
  4099e4:	ldp	x29, x30, [sp, #16]
  4099e8:	add	sp, sp, #0x20
  4099ec:	ret
  4099f0:	sub	sp, sp, #0x20
  4099f4:	stp	x29, x30, [sp, #16]
  4099f8:	add	x29, sp, #0x10
  4099fc:	str	x0, [sp, #8]
  409a00:	ldr	x8, [sp, #8]
  409a04:	ldrb	w9, [x8]
  409a08:	cbz	w9, 409a1c <wcrtomb@plt+0x710c>
  409a0c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409a10:	add	x8, x8, #0x3c0
  409a14:	ldr	x0, [x8]
  409a18:	bl	423a6c <wcrtomb@plt+0x2115c>
  409a1c:	ldp	x29, x30, [sp, #16]
  409a20:	add	sp, sp, #0x20
  409a24:	ret
  409a28:	sub	sp, sp, #0x50
  409a2c:	stp	x29, x30, [sp, #64]
  409a30:	add	x29, sp, #0x40
  409a34:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409a38:	add	x8, x8, #0x4b0
  409a3c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409a40:	add	x9, x9, #0x5f0
  409a44:	stur	x0, [x29, #-16]
  409a48:	stur	x1, [x29, #-24]
  409a4c:	str	x2, [sp, #32]
  409a50:	strb	w3, [sp, #31]
  409a54:	ldr	w10, [x8]
  409a58:	cmp	w10, #0x1
  409a5c:	str	x9, [sp, #8]
  409a60:	b.eq	409acc <wcrtomb@plt+0x71bc>  // b.none
  409a64:	ldur	x8, [x29, #-16]
  409a68:	ldur	x9, [x29, #-24]
  409a6c:	add	x8, x8, x9
  409a70:	ldrb	w10, [x8]
  409a74:	strb	w10, [sp, #30]
  409a78:	ldur	x0, [x29, #-16]
  409a7c:	ldur	x1, [x29, #-24]
  409a80:	bl	40a000 <wcrtomb@plt+0x76f0>
  409a84:	and	w10, w0, #0x1
  409a88:	strb	w10, [sp, #29]
  409a8c:	ldrb	w10, [sp, #30]
  409a90:	ldur	x8, [x29, #-16]
  409a94:	ldur	x9, [x29, #-24]
  409a98:	add	x8, x8, x9
  409a9c:	strb	w10, [x8]
  409aa0:	ldrb	w10, [sp, #29]
  409aa4:	tbnz	w10, #0, 409aac <wcrtomb@plt+0x719c>
  409aa8:	b	409acc <wcrtomb@plt+0x71bc>
  409aac:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409ab0:	add	x8, x8, #0x611
  409ab4:	mov	w9, #0x1                   	// #1
  409ab8:	strb	w9, [x8]
  409abc:	mov	w9, wzr
  409ac0:	and	w9, w9, #0x1
  409ac4:	sturb	w9, [x29, #-1]
  409ac8:	b	409c44 <wcrtomb@plt+0x7334>
  409acc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409ad0:	add	x8, x8, #0x5a4
  409ad4:	ldr	w9, [x8]
  409ad8:	cbz	w9, 409b08 <wcrtomb@plt+0x71f8>
  409adc:	bl	408118 <wcrtomb@plt+0x5808>
  409ae0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409ae4:	add	x8, x8, #0x488
  409ae8:	ldr	w9, [x8]
  409aec:	cbz	w9, 409afc <wcrtomb@plt+0x71ec>
  409af0:	ldrb	w0, [sp, #31]
  409af4:	bl	408158 <wcrtomb@plt+0x5848>
  409af8:	b	409b08 <wcrtomb@plt+0x71f8>
  409afc:	mov	w8, wzr
  409b00:	mov	w0, w8
  409b04:	bl	40819c <wcrtomb@plt+0x588c>
  409b08:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409b0c:	add	x8, x8, #0x4c0
  409b10:	ldrb	w9, [x8]
  409b14:	tbnz	w9, #0, 409b1c <wcrtomb@plt+0x720c>
  409b18:	b	409b84 <wcrtomb@plt+0x7274>
  409b1c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409b20:	add	x8, x8, #0x628
  409b24:	ldr	x8, [x8]
  409b28:	ldr	x9, [sp, #32]
  409b2c:	cmp	x8, x9
  409b30:	b.cs	409b64 <wcrtomb@plt+0x7254>  // b.hs, b.nlast
  409b34:	ldur	x0, [x29, #-16]
  409b38:	bl	409128 <wcrtomb@plt+0x6818>
  409b3c:	ldr	x8, [sp, #8]
  409b40:	ldr	x0, [x8]
  409b44:	mov	x1, #0x1                   	// #1
  409b48:	bl	4090bc <wcrtomb@plt+0x67ac>
  409b4c:	ldr	x8, [sp, #8]
  409b50:	str	x0, [x8]
  409b54:	ldr	x9, [sp, #32]
  409b58:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409b5c:	add	x10, x10, #0x628
  409b60:	str	x9, [x10]
  409b64:	ldr	x8, [sp, #8]
  409b68:	ldr	x0, [x8]
  409b6c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409b70:	add	x9, x9, #0x390
  409b74:	ldr	x1, [x9]
  409b78:	bl	40a0ec <wcrtomb@plt+0x77dc>
  409b7c:	ldrb	w0, [sp, #31]
  409b80:	bl	408158 <wcrtomb@plt+0x5848>
  409b84:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409b88:	add	x8, x8, #0x4b6
  409b8c:	ldrb	w9, [x8]
  409b90:	tbnz	w9, #0, 409b98 <wcrtomb@plt+0x7288>
  409b94:	b	409bdc <wcrtomb@plt+0x72cc>
  409b98:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409b9c:	add	x8, x8, #0x5e0
  409ba0:	ldr	x0, [x8]
  409ba4:	ldur	x8, [x29, #-16]
  409ba8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409bac:	add	x9, x9, #0x618
  409bb0:	ldr	x9, [x9]
  409bb4:	subs	x1, x8, x9
  409bb8:	bl	4090bc <wcrtomb@plt+0x67ac>
  409bbc:	str	x0, [sp, #16]
  409bc0:	ldr	x0, [sp, #16]
  409bc4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409bc8:	add	x8, x8, #0x398
  409bcc:	ldr	x1, [x8]
  409bd0:	bl	40a0ec <wcrtomb@plt+0x77dc>
  409bd4:	ldrb	w0, [sp, #31]
  409bd8:	bl	408158 <wcrtomb@plt+0x5848>
  409bdc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409be0:	add	x8, x8, #0x4b4
  409be4:	ldrb	w9, [x8]
  409be8:	tbnz	w9, #0, 409bf0 <wcrtomb@plt+0x72e0>
  409bec:	b	409c38 <wcrtomb@plt+0x7328>
  409bf0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409bf4:	add	x8, x8, #0x5a4
  409bf8:	ldr	w9, [x8]
  409bfc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409c00:	add	x8, x8, #0x4c0
  409c04:	ldrb	w10, [x8]
  409c08:	and	w10, w10, #0x1
  409c0c:	orr	w9, w9, w10
  409c10:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409c14:	add	x8, x8, #0x4b6
  409c18:	ldrb	w10, [x8]
  409c1c:	and	w10, w10, #0x1
  409c20:	orr	w9, w9, w10
  409c24:	cbz	w9, 409c38 <wcrtomb@plt+0x7328>
  409c28:	ldur	x8, [x29, #-24]
  409c2c:	cbz	x8, 409c38 <wcrtomb@plt+0x7328>
  409c30:	mov	w0, #0x9                   	// #9
  409c34:	bl	40819c <wcrtomb@plt+0x588c>
  409c38:	mov	w8, #0x1                   	// #1
  409c3c:	and	w8, w8, #0x1
  409c40:	sturb	w8, [x29, #-1]
  409c44:	ldurb	w8, [x29, #-1]
  409c48:	and	w0, w8, #0x1
  409c4c:	ldp	x29, x30, [sp, #64]
  409c50:	add	sp, sp, #0x50
  409c54:	ret
  409c58:	sub	sp, sp, #0x80
  409c5c:	stp	x29, x30, [sp, #112]
  409c60:	add	x29, sp, #0x70
  409c64:	mov	x8, xzr
  409c68:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409c6c:	add	x9, x9, #0x4a8
  409c70:	stur	x0, [x29, #-16]
  409c74:	stur	x1, [x29, #-24]
  409c78:	stur	x2, [x29, #-32]
  409c7c:	stur	x3, [x29, #-40]
  409c80:	str	x8, [sp, #40]
  409c84:	ldur	x8, [x29, #-16]
  409c88:	str	x8, [sp, #48]
  409c8c:	str	x9, [sp, #16]
  409c90:	ldr	x8, [sp, #48]
  409c94:	ldur	x9, [x29, #-24]
  409c98:	mov	w10, #0x0                   	// #0
  409c9c:	cmp	x8, x9
  409ca0:	str	w10, [sp, #12]
  409ca4:	b.cs	409cf0 <wcrtomb@plt+0x73e0>  // b.hs, b.nlast
  409ca8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409cac:	add	x8, x8, #0x590
  409cb0:	ldr	x8, [x8]
  409cb4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409cb8:	add	x9, x9, #0x598
  409cbc:	ldr	x0, [x9]
  409cc0:	ldur	x1, [x29, #-16]
  409cc4:	ldur	x9, [x29, #-24]
  409cc8:	ldur	x10, [x29, #-16]
  409ccc:	subs	x2, x9, x10
  409cd0:	ldr	x4, [sp, #48]
  409cd4:	sub	x3, x29, #0x30
  409cd8:	blr	x8
  409cdc:	str	x0, [sp, #56]
  409ce0:	mov	x8, #0xffffffffffffffff    	// #-1
  409ce4:	cmp	x0, x8
  409ce8:	cset	w11, ne  // ne = any
  409cec:	str	w11, [sp, #12]
  409cf0:	ldr	w8, [sp, #12]
  409cf4:	tbnz	w8, #0, 409cfc <wcrtomb@plt+0x73ec>
  409cf8:	b	409e28 <wcrtomb@plt+0x7518>
  409cfc:	ldur	x8, [x29, #-16]
  409d00:	ldr	x9, [sp, #56]
  409d04:	add	x8, x8, x9
  409d08:	str	x8, [sp, #32]
  409d0c:	ldr	x8, [sp, #32]
  409d10:	ldur	x9, [x29, #-24]
  409d14:	cmp	x8, x9
  409d18:	b.ne	409d20 <wcrtomb@plt+0x7410>  // b.any
  409d1c:	b	409e28 <wcrtomb@plt+0x7518>
  409d20:	ldur	x8, [x29, #-48]
  409d24:	cbnz	x8, 409d44 <wcrtomb@plt+0x7434>
  409d28:	mov	x8, #0x1                   	// #1
  409d2c:	stur	x8, [x29, #-48]
  409d30:	ldr	x8, [sp, #40]
  409d34:	cbnz	x8, 409d40 <wcrtomb@plt+0x7430>
  409d38:	ldr	x8, [sp, #48]
  409d3c:	str	x8, [sp, #40]
  409d40:	b	409e14 <wcrtomb@plt+0x7504>
  409d44:	ldr	x8, [sp, #16]
  409d48:	ldrb	w9, [x8]
  409d4c:	tbnz	w9, #0, 409d54 <wcrtomb@plt+0x7444>
  409d50:	b	409d9c <wcrtomb@plt+0x748c>
  409d54:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409d58:	add	x8, x8, #0x4c3
  409d5c:	ldrb	w9, [x8]
  409d60:	mov	w10, #0x3a                  	// #58
  409d64:	mov	w11, #0x2d                  	// #45
  409d68:	tst	w9, #0x1
  409d6c:	csel	w9, w11, w10, ne  // ne = any
  409d70:	strb	w9, [sp, #31]
  409d74:	ldr	x0, [sp, #32]
  409d78:	ldur	x1, [x29, #-48]
  409d7c:	ldur	x2, [x29, #-24]
  409d80:	ldrb	w3, [sp, #31]
  409d84:	bl	409a28 <wcrtomb@plt+0x7118>
  409d88:	tbnz	w0, #0, 409d98 <wcrtomb@plt+0x7488>
  409d8c:	mov	x8, xzr
  409d90:	stur	x8, [x29, #-8]
  409d94:	b	409e5c <wcrtomb@plt+0x754c>
  409d98:	b	409dd4 <wcrtomb@plt+0x74c4>
  409d9c:	ldur	x0, [x29, #-32]
  409da0:	bl	4099b4 <wcrtomb@plt+0x70a4>
  409da4:	ldr	x8, [sp, #40]
  409da8:	cbz	x8, 409dbc <wcrtomb@plt+0x74ac>
  409dac:	ldr	x8, [sp, #40]
  409db0:	str	x8, [sp, #48]
  409db4:	mov	x8, xzr
  409db8:	str	x8, [sp, #40]
  409dbc:	ldr	x0, [sp, #48]
  409dc0:	ldr	x8, [sp, #32]
  409dc4:	ldr	x9, [sp, #48]
  409dc8:	subs	x2, x8, x9
  409dcc:	mov	x1, #0x1                   	// #1
  409dd0:	bl	409fa0 <wcrtomb@plt+0x7690>
  409dd4:	ldur	x0, [x29, #-40]
  409dd8:	bl	409630 <wcrtomb@plt+0x6d20>
  409ddc:	ldr	x0, [sp, #32]
  409de0:	ldur	x2, [x29, #-48]
  409de4:	mov	x1, #0x1                   	// #1
  409de8:	bl	409fa0 <wcrtomb@plt+0x7690>
  409dec:	ldur	x0, [x29, #-40]
  409df0:	bl	4096b4 <wcrtomb@plt+0x6da4>
  409df4:	ldr	x8, [sp, #16]
  409df8:	ldrb	w9, [x8]
  409dfc:	tbnz	w9, #0, 409e04 <wcrtomb@plt+0x74f4>
  409e00:	b	409e14 <wcrtomb@plt+0x7504>
  409e04:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  409e08:	add	x8, x8, #0x8c4
  409e0c:	ldrb	w0, [x8]
  409e10:	bl	40819c <wcrtomb@plt+0x588c>
  409e14:	ldr	x8, [sp, #32]
  409e18:	ldur	x9, [x29, #-48]
  409e1c:	add	x8, x8, x9
  409e20:	str	x8, [sp, #48]
  409e24:	b	409c90 <wcrtomb@plt+0x7380>
  409e28:	ldr	x8, [sp, #16]
  409e2c:	ldrb	w9, [x8]
  409e30:	tbnz	w9, #0, 409e38 <wcrtomb@plt+0x7528>
  409e34:	b	409e44 <wcrtomb@plt+0x7534>
  409e38:	ldur	x8, [x29, #-24]
  409e3c:	str	x8, [sp, #48]
  409e40:	b	409e54 <wcrtomb@plt+0x7544>
  409e44:	ldr	x8, [sp, #40]
  409e48:	cbz	x8, 409e54 <wcrtomb@plt+0x7544>
  409e4c:	ldr	x8, [sp, #40]
  409e50:	str	x8, [sp, #48]
  409e54:	ldr	x8, [sp, #48]
  409e58:	stur	x8, [x29, #-8]
  409e5c:	ldur	x0, [x29, #-8]
  409e60:	ldp	x29, x30, [sp, #112]
  409e64:	add	sp, sp, #0x80
  409e68:	ret
  409e6c:	sub	sp, sp, #0x40
  409e70:	stp	x29, x30, [sp, #48]
  409e74:	add	x29, sp, #0x30
  409e78:	stur	x0, [x29, #-8]
  409e7c:	stur	x1, [x29, #-16]
  409e80:	str	x2, [sp, #24]
  409e84:	ldur	x8, [x29, #-16]
  409e88:	ldur	x9, [x29, #-8]
  409e8c:	mov	w10, #0x0                   	// #0
  409e90:	cmp	x8, x9
  409e94:	str	w10, [sp, #4]
  409e98:	b.ls	409ebc <wcrtomb@plt+0x75ac>  // b.plast
  409e9c:	ldur	x8, [x29, #-16]
  409ea0:	ldurb	w9, [x8, #-1]
  409ea4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  409ea8:	add	x8, x8, #0x8c4
  409eac:	ldrb	w10, [x8]
  409eb0:	cmp	w9, w10
  409eb4:	cset	w9, eq  // eq = none
  409eb8:	str	w9, [sp, #4]
  409ebc:	ldr	w8, [sp, #4]
  409ec0:	and	w8, w8, #0x1
  409ec4:	mov	w0, w8
  409ec8:	sxtw	x9, w0
  409ecc:	str	x9, [sp, #16]
  409ed0:	ldur	x9, [x29, #-16]
  409ed4:	ldr	x10, [sp, #16]
  409ed8:	mov	x11, xzr
  409edc:	subs	x10, x11, x10
  409ee0:	add	x9, x9, x10
  409ee4:	ldur	x10, [x29, #-8]
  409ee8:	mov	w8, #0x0                   	// #0
  409eec:	cmp	x9, x10
  409ef0:	str	w8, [sp]
  409ef4:	b.ls	409f1c <wcrtomb@plt+0x760c>  // b.plast
  409ef8:	ldur	x8, [x29, #-16]
  409efc:	ldr	x9, [sp, #16]
  409f00:	add	x9, x9, #0x1
  409f04:	mov	x10, xzr
  409f08:	subs	x9, x10, x9
  409f0c:	ldrb	w11, [x8, x9]
  409f10:	cmp	w11, #0xd
  409f14:	cset	w11, eq  // eq = none
  409f18:	str	w11, [sp]
  409f1c:	ldr	w8, [sp]
  409f20:	and	w8, w8, #0x1
  409f24:	ldr	x9, [sp, #16]
  409f28:	add	x9, x9, w8, sxtw
  409f2c:	str	x9, [sp, #16]
  409f30:	ldur	x9, [x29, #-16]
  409f34:	ldr	x10, [sp, #16]
  409f38:	mov	x11, xzr
  409f3c:	subs	x10, x11, x10
  409f40:	add	x9, x9, x10
  409f44:	ldur	x10, [x29, #-8]
  409f48:	subs	x9, x9, x10
  409f4c:	str	x9, [sp, #8]
  409f50:	ldr	x9, [sp, #8]
  409f54:	cmp	x9, #0x0
  409f58:	cset	w8, ls  // ls = plast
  409f5c:	tbnz	w8, #0, 409f90 <wcrtomb@plt+0x7680>
  409f60:	ldr	x0, [sp, #24]
  409f64:	bl	4099b4 <wcrtomb@plt+0x70a4>
  409f68:	ldur	x0, [x29, #-8]
  409f6c:	ldr	x2, [sp, #8]
  409f70:	mov	x1, #0x1                   	// #1
  409f74:	bl	409fa0 <wcrtomb@plt+0x7690>
  409f78:	ldr	x8, [sp, #8]
  409f7c:	ldur	x9, [x29, #-8]
  409f80:	add	x8, x9, x8
  409f84:	stur	x8, [x29, #-8]
  409f88:	ldr	x0, [sp, #24]
  409f8c:	bl	4099f0 <wcrtomb@plt+0x70e0>
  409f90:	ldur	x0, [x29, #-8]
  409f94:	ldp	x29, x30, [sp, #48]
  409f98:	add	sp, sp, #0x40
  409f9c:	ret
  409fa0:	sub	sp, sp, #0x30
  409fa4:	stp	x29, x30, [sp, #32]
  409fa8:	add	x29, sp, #0x20
  409fac:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409fb0:	add	x8, x8, #0x458
  409fb4:	stur	x0, [x29, #-8]
  409fb8:	str	x1, [sp, #16]
  409fbc:	str	x2, [sp, #8]
  409fc0:	ldur	x0, [x29, #-8]
  409fc4:	ldr	x1, [sp, #16]
  409fc8:	ldr	x2, [sp, #8]
  409fcc:	ldr	x3, [x8]
  409fd0:	bl	4022e0 <fwrite_unlocked@plt>
  409fd4:	ldr	x8, [sp, #8]
  409fd8:	cmp	x0, x8
  409fdc:	b.eq	409ff4 <wcrtomb@plt+0x76e4>  // b.none
  409fe0:	bl	402870 <__errno_location@plt>
  409fe4:	ldr	w8, [x0]
  409fe8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  409fec:	add	x9, x9, #0x5c4
  409ff0:	str	w8, [x9]
  409ff4:	ldp	x29, x30, [sp, #32]
  409ff8:	add	sp, sp, #0x30
  409ffc:	ret
  40a000:	sub	sp, sp, #0x40
  40a004:	stp	x29, x30, [sp, #48]
  40a008:	add	x29, sp, #0x30
  40a00c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40a010:	add	x8, x8, #0x5d0
  40a014:	stur	x0, [x29, #-16]
  40a018:	str	x1, [sp, #24]
  40a01c:	ldr	x8, [x8]
  40a020:	cbnz	x8, 40a034 <wcrtomb@plt+0x7724>
  40a024:	mov	w8, wzr
  40a028:	and	w8, w8, #0x1
  40a02c:	sturb	w8, [x29, #-1]
  40a030:	b	40a0d8 <wcrtomb@plt+0x77c8>
  40a034:	str	xzr, [sp, #16]
  40a038:	ldur	x8, [x29, #-16]
  40a03c:	ldr	x9, [sp, #24]
  40a040:	add	x8, x8, x9
  40a044:	mov	w10, #0xff                  	// #255
  40a048:	strb	w10, [x8]
  40a04c:	ldur	x8, [x29, #-16]
  40a050:	str	x8, [sp]
  40a054:	ldr	x0, [sp]
  40a058:	bl	40a148 <wcrtomb@plt+0x7838>
  40a05c:	str	x0, [sp]
  40a060:	ldur	x8, [x29, #-16]
  40a064:	ldr	x9, [sp, #24]
  40a068:	add	x8, x8, x9
  40a06c:	cmp	x0, x8
  40a070:	b.cs	40a0cc <wcrtomb@plt+0x77bc>  // b.hs, b.nlast
  40a074:	ldr	x0, [sp]
  40a078:	ldur	x8, [x29, #-16]
  40a07c:	ldr	x9, [sp, #24]
  40a080:	add	x8, x8, x9
  40a084:	ldr	x9, [sp]
  40a088:	subs	x1, x8, x9
  40a08c:	add	x2, sp, #0x10
  40a090:	bl	42718c <wcrtomb@plt+0x2487c>
  40a094:	str	x0, [sp, #8]
  40a098:	ldr	x8, [sp, #8]
  40a09c:	mov	x9, #0xfffffffffffffffe    	// #-2
  40a0a0:	cmp	x9, x8
  40a0a4:	b.hi	40a0b8 <wcrtomb@plt+0x77a8>  // b.pmore
  40a0a8:	mov	w8, #0x1                   	// #1
  40a0ac:	and	w8, w8, #0x1
  40a0b0:	sturb	w8, [x29, #-1]
  40a0b4:	b	40a0d8 <wcrtomb@plt+0x77c8>
  40a0b8:	ldr	x8, [sp, #8]
  40a0bc:	ldr	x9, [sp]
  40a0c0:	add	x8, x9, x8
  40a0c4:	str	x8, [sp]
  40a0c8:	b	40a054 <wcrtomb@plt+0x7744>
  40a0cc:	mov	w8, wzr
  40a0d0:	and	w8, w8, #0x1
  40a0d4:	sturb	w8, [x29, #-1]
  40a0d8:	ldurb	w8, [x29, #-1]
  40a0dc:	and	w0, w8, #0x1
  40a0e0:	ldp	x29, x30, [sp, #48]
  40a0e4:	add	sp, sp, #0x40
  40a0e8:	ret
  40a0ec:	sub	sp, sp, #0x30
  40a0f0:	stp	x29, x30, [sp, #32]
  40a0f4:	add	x29, sp, #0x20
  40a0f8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40a0fc:	add	x8, x8, #0x614
  40a100:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40a104:	add	x9, x9, #0xaa
  40a108:	stur	x0, [x29, #-8]
  40a10c:	str	x1, [sp, #16]
  40a110:	ldr	x0, [sp, #16]
  40a114:	str	x8, [sp, #8]
  40a118:	str	x9, [sp]
  40a11c:	bl	409630 <wcrtomb@plt+0x6d20>
  40a120:	ldr	x8, [sp, #8]
  40a124:	ldr	w1, [x8]
  40a128:	ldur	x2, [x29, #-8]
  40a12c:	ldr	x0, [sp]
  40a130:	bl	4081e0 <wcrtomb@plt+0x58d0>
  40a134:	ldr	x0, [sp, #16]
  40a138:	bl	4096b4 <wcrtomb@plt+0x6da4>
  40a13c:	ldp	x29, x30, [sp, #32]
  40a140:	add	sp, sp, #0x30
  40a144:	ret
  40a148:	sub	sp, sp, #0x40
  40a14c:	stp	x29, x30, [sp, #48]
  40a150:	add	x29, sp, #0x30
  40a154:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40a158:	add	x8, x8, #0x5d0
  40a15c:	stur	x0, [x29, #-16]
  40a160:	ldur	x9, [x29, #-16]
  40a164:	str	x9, [sp, #24]
  40a168:	str	x8, [sp, #8]
  40a16c:	ldr	x8, [sp, #24]
  40a170:	mov	x9, #0x8                   	// #8
  40a174:	udiv	x10, x8, x9
  40a178:	mul	x9, x10, x9
  40a17c:	subs	x8, x8, x9
  40a180:	cbz	x8, 40a1c4 <wcrtomb@plt+0x78b4>
  40a184:	ldr	x8, [sp, #24]
  40a188:	ldrb	w0, [x8]
  40a18c:	bl	40edd4 <wcrtomb@plt+0xc4c4>
  40a190:	mov	w1, w0
  40a194:	and	x8, x1, #0xff
  40a198:	ldr	x9, [sp, #8]
  40a19c:	ldr	x10, [x9]
  40a1a0:	and	x8, x8, x10
  40a1a4:	cbz	x8, 40a1b4 <wcrtomb@plt+0x78a4>
  40a1a8:	ldr	x8, [sp, #24]
  40a1ac:	stur	x8, [x29, #-8]
  40a1b0:	b	40a250 <wcrtomb@plt+0x7940>
  40a1b4:	ldr	x8, [sp, #24]
  40a1b8:	add	x8, x8, #0x1
  40a1bc:	str	x8, [sp, #24]
  40a1c0:	b	40a16c <wcrtomb@plt+0x785c>
  40a1c4:	ldr	x8, [sp, #24]
  40a1c8:	str	x8, [sp, #16]
  40a1cc:	ldr	x8, [sp, #16]
  40a1d0:	ldr	x8, [x8]
  40a1d4:	ldr	x9, [sp, #8]
  40a1d8:	ldr	x10, [x9]
  40a1dc:	tst	x8, x10
  40a1e0:	cset	w11, ne  // ne = any
  40a1e4:	eor	w11, w11, #0x1
  40a1e8:	tbnz	w11, #0, 40a1f0 <wcrtomb@plt+0x78e0>
  40a1ec:	b	40a200 <wcrtomb@plt+0x78f0>
  40a1f0:	ldr	x8, [sp, #16]
  40a1f4:	add	x8, x8, #0x8
  40a1f8:	str	x8, [sp, #16]
  40a1fc:	b	40a1cc <wcrtomb@plt+0x78bc>
  40a200:	ldr	x8, [sp, #16]
  40a204:	str	x8, [sp, #24]
  40a208:	ldr	x8, [sp, #24]
  40a20c:	ldrb	w0, [x8]
  40a210:	bl	40edd4 <wcrtomb@plt+0xc4c4>
  40a214:	mov	w1, w0
  40a218:	and	x8, x1, #0xff
  40a21c:	ldr	x9, [sp, #8]
  40a220:	ldr	x10, [x9]
  40a224:	tst	x8, x10
  40a228:	cset	w11, ne  // ne = any
  40a22c:	eor	w11, w11, #0x1
  40a230:	tbnz	w11, #0, 40a238 <wcrtomb@plt+0x7928>
  40a234:	b	40a248 <wcrtomb@plt+0x7938>
  40a238:	ldr	x8, [sp, #24]
  40a23c:	add	x8, x8, #0x1
  40a240:	str	x8, [sp, #24]
  40a244:	b	40a208 <wcrtomb@plt+0x78f8>
  40a248:	ldr	x8, [sp, #24]
  40a24c:	stur	x8, [x29, #-8]
  40a250:	ldur	x0, [x29, #-8]
  40a254:	ldp	x29, x30, [sp, #48]
  40a258:	add	sp, sp, #0x40
  40a25c:	ret
  40a260:	sub	sp, sp, #0x40
  40a264:	stp	x29, x30, [sp, #48]
  40a268:	add	x29, sp, #0x30
  40a26c:	stur	w0, [x29, #-8]
  40a270:	stur	x1, [x29, #-16]
  40a274:	ldur	x8, [x29, #-16]
  40a278:	ldr	w9, [x8, #16]
  40a27c:	and	w9, w9, #0xf000
  40a280:	cmp	w9, #0x1, lsl #12
  40a284:	b.ne	40a348 <wcrtomb@plt+0x7a38>  // b.any
  40a288:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40a28c:	add	x8, x8, #0x588
  40a290:	ldrb	w9, [x8]
  40a294:	tbnz	w9, #0, 40a29c <wcrtomb@plt+0x798c>
  40a298:	b	40a348 <wcrtomb@plt+0x7a38>
  40a29c:	ldur	w0, [x29, #-8]
  40a2a0:	mov	x8, xzr
  40a2a4:	mov	x1, x8
  40a2a8:	str	x1, [sp, #16]
  40a2ac:	mov	w9, #0x1                   	// #1
  40a2b0:	mov	w2, w9
  40a2b4:	ldr	x3, [sp, #16]
  40a2b8:	mov	x4, #0x18000               	// #98304
  40a2bc:	mov	w5, w9
  40a2c0:	str	x8, [sp, #8]
  40a2c4:	bl	402490 <splice@plt>
  40a2c8:	str	x0, [sp, #24]
  40a2cc:	ldr	x8, [sp, #24]
  40a2d0:	ldr	x10, [sp, #8]
  40a2d4:	cmp	x10, x8
  40a2d8:	cset	w9, le
  40a2dc:	tbnz	w9, #0, 40a2f0 <wcrtomb@plt+0x79e0>
  40a2e0:	bl	402870 <__errno_location@plt>
  40a2e4:	ldr	w8, [x0]
  40a2e8:	cmp	w8, #0x16
  40a2ec:	b.eq	40a348 <wcrtomb@plt+0x7a38>  // b.none
  40a2f0:	ldr	x8, [sp, #24]
  40a2f4:	mov	x9, xzr
  40a2f8:	cmp	x9, x8
  40a2fc:	cset	w10, ge  // ge = tcont
  40a300:	tbnz	w10, #0, 40a330 <wcrtomb@plt+0x7a20>
  40a304:	ldur	w0, [x29, #-8]
  40a308:	mov	x8, xzr
  40a30c:	mov	x1, x8
  40a310:	mov	w9, #0x1                   	// #1
  40a314:	mov	w2, w9
  40a318:	mov	x3, x8
  40a31c:	mov	x4, #0x18000               	// #98304
  40a320:	mov	w5, w9
  40a324:	bl	402490 <splice@plt>
  40a328:	str	x0, [sp, #24]
  40a32c:	b	40a2f0 <wcrtomb@plt+0x79e0>
  40a330:	ldr	x8, [sp, #24]
  40a334:	cmp	x8, #0x0
  40a338:	cset	w9, eq  // eq = none
  40a33c:	and	w9, w9, #0x1
  40a340:	sturb	w9, [x29, #-1]
  40a344:	b	40a3a0 <wcrtomb@plt+0x7a90>
  40a348:	ldur	w0, [x29, #-8]
  40a34c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40a350:	add	x8, x8, #0x5b8
  40a354:	ldr	x1, [x8]
  40a358:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40a35c:	add	x8, x8, #0x5b0
  40a360:	ldr	x2, [x8]
  40a364:	bl	42266c <wcrtomb@plt+0x1fd5c>
  40a368:	str	x0, [sp, #24]
  40a36c:	cbz	x0, 40a394 <wcrtomb@plt+0x7a84>
  40a370:	ldr	x8, [sp, #24]
  40a374:	mov	x9, #0xffffffffffffffff    	// #-1
  40a378:	cmp	x8, x9
  40a37c:	b.ne	40a390 <wcrtomb@plt+0x7a80>  // b.any
  40a380:	mov	w8, wzr
  40a384:	and	w8, w8, #0x1
  40a388:	sturb	w8, [x29, #-1]
  40a38c:	b	40a3a0 <wcrtomb@plt+0x7a90>
  40a390:	b	40a348 <wcrtomb@plt+0x7a38>
  40a394:	mov	w8, #0x1                   	// #1
  40a398:	and	w8, w8, #0x1
  40a39c:	sturb	w8, [x29, #-1]
  40a3a0:	ldurb	w8, [x29, #-1]
  40a3a4:	and	w0, w8, #0x1
  40a3a8:	ldp	x29, x30, [sp, #48]
  40a3ac:	add	sp, sp, #0x40
  40a3b0:	ret
  40a3b4:	sub	sp, sp, #0x10
  40a3b8:	str	w0, [sp, #8]
  40a3bc:	ldr	w8, [sp, #8]
  40a3c0:	cmp	w8, #0x28
  40a3c4:	b.eq	40a3d4 <wcrtomb@plt+0x7ac4>  // b.none
  40a3c8:	ldr	w8, [sp, #8]
  40a3cc:	cmp	w8, #0x1f
  40a3d0:	b.ne	40a3e4 <wcrtomb@plt+0x7ad4>  // b.any
  40a3d4:	mov	w8, #0x1                   	// #1
  40a3d8:	and	w8, w8, #0x1
  40a3dc:	strb	w8, [sp, #15]
  40a3e0:	b	40a3f0 <wcrtomb@plt+0x7ae0>
  40a3e4:	mov	w8, wzr
  40a3e8:	and	w8, w8, #0x1
  40a3ec:	strb	w8, [sp, #15]
  40a3f0:	ldrb	w8, [sp, #15]
  40a3f4:	and	w0, w8, #0x1
  40a3f8:	add	sp, sp, #0x10
  40a3fc:	ret
  40a400:	stp	x29, x30, [sp, #-32]!
  40a404:	str	x28, [sp, #16]
  40a408:	mov	x29, sp
  40a40c:	sub	sp, sp, #0x220
  40a410:	mov	x8, xzr
  40a414:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a418:	add	x9, x9, #0x8c4
  40a41c:	adrp	x10, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a420:	add	x10, x10, #0x8c8
  40a424:	add	x10, x10, #0x104
  40a428:	mov	w11, #0x1                   	// #1
  40a42c:	stur	x0, [x29, #-8]
  40a430:	stur	x1, [x29, #-16]
  40a434:	stur	x2, [x29, #-24]
  40a438:	ldur	x12, [x29, #-16]
  40a43c:	stur	x12, [x29, #-40]
  40a440:	stur	x8, [x29, #-48]
  40a444:	stur	xzr, [x29, #-56]
  40a448:	and	w0, w11, #0x1
  40a44c:	str	x9, [sp, #16]
  40a450:	str	x10, [sp, #8]
  40a454:	bl	40ef38 <wcrtomb@plt+0xc628>
  40a458:	stur	x0, [x29, #-32]
  40a45c:	ldur	x8, [x29, #-8]
  40a460:	stur	x8, [x29, #-64]
  40a464:	ldur	x0, [x29, #-64]
  40a468:	ldur	x2, [x29, #-40]
  40a46c:	mov	w1, #0xa                   	// #10
  40a470:	bl	402770 <memchr@plt>
  40a474:	stur	x0, [x29, #-80]
  40a478:	ldur	x8, [x29, #-80]
  40a47c:	cbz	x8, 40a4b4 <wcrtomb@plt+0x7ba4>
  40a480:	ldur	x8, [x29, #-80]
  40a484:	ldur	x9, [x29, #-64]
  40a488:	subs	x8, x8, x9
  40a48c:	stur	x8, [x29, #-72]
  40a490:	ldur	x8, [x29, #-80]
  40a494:	add	x8, x8, #0x1
  40a498:	stur	x8, [x29, #-80]
  40a49c:	ldur	x8, [x29, #-72]
  40a4a0:	add	x8, x8, #0x1
  40a4a4:	ldur	x9, [x29, #-40]
  40a4a8:	subs	x8, x9, x8
  40a4ac:	stur	x8, [x29, #-40]
  40a4b0:	b	40a4c0 <wcrtomb@plt+0x7bb0>
  40a4b4:	ldur	x8, [x29, #-40]
  40a4b8:	stur	x8, [x29, #-72]
  40a4bc:	stur	xzr, [x29, #-40]
  40a4c0:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a4c4:	add	x8, x8, #0xdcd
  40a4c8:	ldrb	w9, [x8]
  40a4cc:	tbnz	w9, #0, 40a4d4 <wcrtomb@plt+0x7bc4>
  40a4d0:	b	40a5a0 <wcrtomb@plt+0x7c90>
  40a4d4:	ldr	x8, [sp, #16]
  40a4d8:	ldrb	w9, [x8]
  40a4dc:	cmp	w9, #0xa
  40a4e0:	b.ne	40a510 <wcrtomb@plt+0x7c00>  // b.any
  40a4e4:	ldur	x8, [x29, #-8]
  40a4e8:	ldur	x9, [x29, #-64]
  40a4ec:	cmp	x8, x9
  40a4f0:	b.cs	40a510 <wcrtomb@plt+0x7c00>  // b.hs, b.nlast
  40a4f4:	ldur	x8, [x29, #-80]
  40a4f8:	cbz	x8, 40a510 <wcrtomb@plt+0x7c00>
  40a4fc:	ldur	x8, [x29, #-64]
  40a500:	mov	x9, #0xffffffffffffffff    	// #-1
  40a504:	add	x8, x8, x9
  40a508:	stur	x8, [x29, #-64]
  40a50c:	b	40a594 <wcrtomb@plt+0x7c84>
  40a510:	ldur	x8, [x29, #-56]
  40a514:	ldur	x9, [x29, #-72]
  40a518:	add	x9, x9, #0x2
  40a51c:	cmp	x8, x9
  40a520:	b.cs	40a55c <wcrtomb@plt+0x7c4c>  // b.hs, b.nlast
  40a524:	ldur	x0, [x29, #-48]
  40a528:	bl	4026c0 <free@plt>
  40a52c:	ldur	x8, [x29, #-72]
  40a530:	add	x8, x8, #0x2
  40a534:	sub	x1, x29, #0x38
  40a538:	stur	x8, [x29, #-56]
  40a53c:	mov	x8, xzr
  40a540:	mov	x0, x8
  40a544:	bl	423270 <wcrtomb@plt+0x20960>
  40a548:	stur	x0, [x29, #-48]
  40a54c:	ldr	x8, [sp, #16]
  40a550:	ldrb	w9, [x8]
  40a554:	ldur	x10, [x29, #-48]
  40a558:	strb	w9, [x10]
  40a55c:	ldur	x8, [x29, #-48]
  40a560:	add	x0, x8, #0x1
  40a564:	ldur	x1, [x29, #-64]
  40a568:	ldur	x2, [x29, #-72]
  40a56c:	bl	402290 <memcpy@plt>
  40a570:	ldr	x8, [sp, #16]
  40a574:	ldrb	w9, [x8]
  40a578:	ldur	x10, [x29, #-48]
  40a57c:	ldur	x11, [x29, #-72]
  40a580:	add	x11, x11, #0x1
  40a584:	add	x10, x10, x11
  40a588:	strb	w9, [x10]
  40a58c:	ldur	x10, [x29, #-48]
  40a590:	stur	x10, [x29, #-64]
  40a594:	ldur	x8, [x29, #-72]
  40a598:	add	x8, x8, #0x2
  40a59c:	stur	x8, [x29, #-72]
  40a5a0:	ldur	x0, [x29, #-32]
  40a5a4:	ldur	x1, [x29, #-64]
  40a5a8:	ldur	x2, [x29, #-72]
  40a5ac:	bl	40b0a4 <wcrtomb@plt+0x8794>
  40a5b0:	ldur	x8, [x29, #-80]
  40a5b4:	stur	x8, [x29, #-64]
  40a5b8:	ldur	x8, [x29, #-64]
  40a5bc:	cbnz	x8, 40a464 <wcrtomb@plt+0x7b54>
  40a5c0:	ldur	x0, [x29, #-48]
  40a5c4:	bl	4026c0 <free@plt>
  40a5c8:	ldur	x0, [x29, #-32]
  40a5cc:	bl	40bc18 <wcrtomb@plt+0x9308>
  40a5d0:	stur	x0, [x29, #-88]
  40a5d4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a5d8:	add	x8, x8, #0xdce
  40a5dc:	ldrb	w9, [x8]
  40a5e0:	tbnz	w9, #0, 40a5e8 <wcrtomb@plt+0x7cd8>
  40a5e4:	b	40a6f0 <wcrtomb@plt+0x7de0>
  40a5e8:	stur	xzr, [x29, #-96]
  40a5ec:	add	x0, sp, #0xc0
  40a5f0:	mov	w8, wzr
  40a5f4:	mov	w1, w8
  40a5f8:	mov	x2, #0x100                 	// #256
  40a5fc:	bl	402520 <memset@plt>
  40a600:	ldur	x9, [x29, #-8]
  40a604:	stur	x9, [x29, #-64]
  40a608:	ldur	x8, [x29, #-64]
  40a60c:	ldur	x9, [x29, #-8]
  40a610:	ldur	x10, [x29, #-16]
  40a614:	add	x9, x9, x10
  40a618:	cmp	x8, x9
  40a61c:	b.cs	40a6f0 <wcrtomb@plt+0x7de0>  // b.hs, b.nlast
  40a620:	ldur	x8, [x29, #-64]
  40a624:	ldrb	w9, [x8]
  40a628:	strb	w9, [sp, #191]
  40a62c:	ldrb	w9, [sp, #191]
  40a630:	mov	w8, w9
  40a634:	add	x10, sp, #0xc0
  40a638:	add	x8, x10, x8
  40a63c:	ldrb	w9, [x8]
  40a640:	cbz	w9, 40a648 <wcrtomb@plt+0x7d38>
  40a644:	b	40a6e0 <wcrtomb@plt+0x7dd0>
  40a648:	ldrb	w8, [sp, #191]
  40a64c:	mov	w9, w8
  40a650:	add	x10, sp, #0xc0
  40a654:	add	x9, x10, x9
  40a658:	mov	w8, #0x1                   	// #1
  40a65c:	strb	w8, [x9]
  40a660:	ldrb	w8, [sp, #191]
  40a664:	mov	w9, w8
  40a668:	ldr	x10, [sp, #8]
  40a66c:	ldr	w8, [x10, x9, lsl #2]
  40a670:	str	w8, [sp, #184]
  40a674:	ldr	w0, [sp, #184]
  40a678:	add	x1, sp, #0x38
  40a67c:	bl	41ca4c <wcrtomb@plt+0x1a13c>
  40a680:	str	w0, [sp, #52]
  40a684:	ldr	w8, [sp, #52]
  40a688:	subs	w8, w8, #0x1
  40a68c:	str	w8, [sp, #52]
  40a690:	mov	w9, wzr
  40a694:	cmp	w9, w8
  40a698:	cset	w8, gt
  40a69c:	tbnz	w8, #0, 40a6e0 <wcrtomb@plt+0x7dd0>
  40a6a0:	ldrsw	x8, [sp, #52]
  40a6a4:	add	x9, sp, #0x38
  40a6a8:	ldr	w1, [x9, x8, lsl #2]
  40a6ac:	add	x0, sp, #0x24
  40a6b0:	sub	x2, x29, #0x60
  40a6b4:	bl	402910 <wcrtomb@plt>
  40a6b8:	str	w0, [sp, #32]
  40a6bc:	ldr	w10, [sp, #32]
  40a6c0:	mov	w11, #0x1                   	// #1
  40a6c4:	cmp	w11, w10
  40a6c8:	b.ge	40a6dc <wcrtomb@plt+0x7dcc>  // b.tcont
  40a6cc:	ldur	x0, [x29, #-32]
  40a6d0:	ldrsw	x2, [sp, #32]
  40a6d4:	add	x1, sp, #0x24
  40a6d8:	bl	40b0a4 <wcrtomb@plt+0x8794>
  40a6dc:	b	40a684 <wcrtomb@plt+0x7d74>
  40a6e0:	ldur	x8, [x29, #-64]
  40a6e4:	add	x8, x8, #0x1
  40a6e8:	stur	x8, [x29, #-64]
  40a6ec:	b	40a608 <wcrtomb@plt+0x7cf8>
  40a6f0:	ldur	x0, [x29, #-32]
  40a6f4:	bl	40bc30 <wcrtomb@plt+0x9320>
  40a6f8:	mov	x0, #0x28                  	// #40
  40a6fc:	bl	423058 <wcrtomb@plt+0x20748>
  40a700:	str	x0, [sp, #24]
  40a704:	ldur	x8, [x29, #-32]
  40a708:	ldr	x9, [sp, #24]
  40a70c:	str	x8, [x9]
  40a710:	ldur	x8, [x29, #-88]
  40a714:	ldr	x9, [sp, #24]
  40a718:	str	x8, [x9, #8]
  40a71c:	ldur	x8, [x29, #-8]
  40a720:	ldr	x9, [sp, #24]
  40a724:	str	x8, [x9, #16]
  40a728:	ldur	x8, [x29, #-16]
  40a72c:	ldr	x9, [sp, #24]
  40a730:	str	x8, [x9, #24]
  40a734:	ldr	x8, [sp, #24]
  40a738:	mov	x9, xzr
  40a73c:	str	x9, [x8, #32]
  40a740:	ldr	x0, [sp, #24]
  40a744:	add	sp, sp, #0x220
  40a748:	ldr	x28, [sp, #16]
  40a74c:	ldp	x29, x30, [sp], #32
  40a750:	ret
  40a754:	sub	sp, sp, #0x100
  40a758:	stp	x29, x30, [sp, #240]
  40a75c:	add	x29, sp, #0xf0
  40a760:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a764:	add	x8, x8, #0x8c4
  40a768:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a76c:	add	x9, x9, #0xdcd
  40a770:	adrp	x10, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a774:	add	x10, x10, #0x8c8
  40a778:	adrp	x11, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40a77c:	add	x11, x11, #0xdcc
  40a780:	stur	x0, [x29, #-16]
  40a784:	stur	x1, [x29, #-24]
  40a788:	stur	x2, [x29, #-32]
  40a78c:	stur	x3, [x29, #-40]
  40a790:	stur	x4, [x29, #-48]
  40a794:	ldrb	w12, [x8]
  40a798:	sturb	w12, [x29, #-81]
  40a79c:	ldur	x8, [x29, #-16]
  40a7a0:	str	x8, [sp, #104]
  40a7a4:	ldr	x8, [sp, #104]
  40a7a8:	ldr	x8, [x8]
  40a7ac:	str	x8, [sp, #96]
  40a7b0:	ldrb	w12, [x9]
  40a7b4:	str	x9, [sp, #56]
  40a7b8:	str	x10, [sp, #48]
  40a7bc:	str	x11, [sp, #40]
  40a7c0:	tbnz	w12, #0, 40a7c8 <wcrtomb@plt+0x7eb8>
  40a7c4:	b	40a7d8 <wcrtomb@plt+0x7ec8>
  40a7c8:	mov	w8, #0x0                   	// #0
  40a7cc:	strb	w8, [sp, #118]
  40a7d0:	strb	w8, [sp, #119]
  40a7d4:	b	40a848 <wcrtomb@plt+0x7f38>
  40a7d8:	ldr	x8, [sp, #48]
  40a7dc:	ldrb	w9, [x8]
  40a7e0:	mov	w10, #0x1                   	// #1
  40a7e4:	and	w9, w9, #0x1
  40a7e8:	ldrb	w11, [x8, #2]
  40a7ec:	eor	w11, w11, #0x1
  40a7f0:	and	w11, w11, #0x1
  40a7f4:	tst	w9, w11
  40a7f8:	cset	w9, ne  // ne = any
  40a7fc:	and	w9, w9, w10
  40a800:	strb	w9, [sp, #119]
  40a804:	ldrb	w9, [sp, #119]
  40a808:	and	w9, w9, #0x1
  40a80c:	ldur	x12, [x29, #-48]
  40a810:	cmp	x12, #0x0
  40a814:	cset	w11, ne  // ne = any
  40a818:	eor	w11, w11, w10
  40a81c:	eor	w11, w11, w10
  40a820:	and	w11, w11, #0x1
  40a824:	orr	w9, w9, w11
  40a828:	ldr	x12, [sp, #40]
  40a82c:	ldrb	w11, [x12]
  40a830:	and	w11, w11, #0x1
  40a834:	orr	w9, w9, w11
  40a838:	cmp	w9, #0x0
  40a83c:	cset	w9, ne  // ne = any
  40a840:	and	w9, w9, w10
  40a844:	strb	w9, [sp, #118]
  40a848:	ldur	x8, [x29, #-48]
  40a84c:	cbz	x8, 40a85c <wcrtomb@plt+0x7f4c>
  40a850:	ldur	x8, [x29, #-48]
  40a854:	str	x8, [sp, #32]
  40a858:	b	40a864 <wcrtomb@plt+0x7f54>
  40a85c:	ldur	x8, [x29, #-24]
  40a860:	str	x8, [sp, #32]
  40a864:	ldr	x8, [sp, #32]
  40a868:	stur	x8, [x29, #-56]
  40a86c:	stur	x8, [x29, #-72]
  40a870:	ldur	x8, [x29, #-56]
  40a874:	ldur	x9, [x29, #-24]
  40a878:	ldur	x10, [x29, #-32]
  40a87c:	add	x9, x9, x10
  40a880:	cmp	x8, x9
  40a884:	b.hi	40acb4 <wcrtomb@plt+0x83a4>  // b.pmore
  40a888:	ldr	x0, [sp, #96]
  40a88c:	ldur	x8, [x29, #-56]
  40a890:	ldr	x9, [sp, #56]
  40a894:	ldrb	w10, [x9]
  40a898:	and	w10, w10, #0x1
  40a89c:	mov	x11, xzr
  40a8a0:	subs	x11, x11, w10, sxtw
  40a8a4:	add	x1, x8, x11
  40a8a8:	ldur	x8, [x29, #-24]
  40a8ac:	ldur	x11, [x29, #-32]
  40a8b0:	add	x8, x8, x11
  40a8b4:	ldur	x11, [x29, #-56]
  40a8b8:	subs	x8, x8, x11
  40a8bc:	ldrb	w10, [x9]
  40a8c0:	mov	w2, w10
  40a8c4:	and	x11, x2, #0x1
  40a8c8:	add	x2, x8, x11
  40a8cc:	ldrb	w10, [sp, #118]
  40a8d0:	sub	x3, x29, #0x70
  40a8d4:	and	w4, w10, #0x1
  40a8d8:	bl	40cbac <wcrtomb@plt+0xa29c>
  40a8dc:	str	x0, [sp, #80]
  40a8e0:	ldr	x8, [sp, #80]
  40a8e4:	cmp	x8, #0x0
  40a8e8:	cset	w10, ge  // ge = tcont
  40a8ec:	tbnz	w10, #0, 40a8f4 <wcrtomb@plt+0x7fe4>
  40a8f0:	b	40acb4 <wcrtomb@plt+0x83a4>
  40a8f4:	ldur	x8, [x29, #-96]
  40a8f8:	ldr	x9, [sp, #56]
  40a8fc:	ldrb	w10, [x9]
  40a900:	and	w10, w10, #0x1
  40a904:	mov	w11, #0x2                   	// #2
  40a908:	mul	w10, w11, w10
  40a90c:	subs	x8, x8, w10, sxtw
  40a910:	stur	x8, [x29, #-80]
  40a914:	ldr	x8, [sp, #104]
  40a918:	ldr	x8, [x8, #8]
  40a91c:	ldur	x12, [x29, #-112]
  40a920:	cmp	x8, x12
  40a924:	b.gt	40a990 <wcrtomb@plt+0x8080>
  40a928:	ldr	x8, [sp, #104]
  40a92c:	ldr	x8, [x8, #32]
  40a930:	cbnz	x8, 40a96c <wcrtomb@plt+0x805c>
  40a934:	ldr	x8, [sp, #104]
  40a938:	add	x0, x8, #0x10
  40a93c:	ldr	x8, [sp, #104]
  40a940:	add	x1, x8, #0x18
  40a944:	bl	404268 <wcrtomb@plt+0x1958>
  40a948:	ldr	x8, [sp, #104]
  40a94c:	ldr	x0, [x8, #16]
  40a950:	ldr	x8, [sp, #104]
  40a954:	ldr	x1, [x8, #24]
  40a958:	mov	x2, #0xa46                 	// #2630
  40a95c:	movk	x2, #0x1, lsl #16
  40a960:	bl	402a94 <wcrtomb@plt+0x184>
  40a964:	ldr	x8, [sp, #104]
  40a968:	str	x0, [x8, #32]
  40a96c:	ldr	x8, [sp, #104]
  40a970:	ldr	x0, [x8, #32]
  40a974:	ldur	x1, [x29, #-24]
  40a978:	ldur	x2, [x29, #-32]
  40a97c:	ldur	x3, [x29, #-40]
  40a980:	ldur	x4, [x29, #-48]
  40a984:	bl	403554 <wcrtomb@plt+0xc44>
  40a988:	stur	x0, [x29, #-8]
  40a98c:	b	40ada4 <wcrtomb@plt+0x8494>
  40a990:	str	xzr, [sp, #88]
  40a994:	ldrb	w8, [sp, #119]
  40a998:	tbnz	w8, #0, 40a9a0 <wcrtomb@plt+0x8090>
  40a99c:	b	40a9dc <wcrtomb@plt+0x80cc>
  40a9a0:	ldur	x8, [x29, #-56]
  40a9a4:	ldr	x9, [sp, #80]
  40a9a8:	add	x2, x8, x9
  40a9ac:	ldur	x8, [x29, #-24]
  40a9b0:	ldur	x9, [x29, #-32]
  40a9b4:	add	x3, x8, x9
  40a9b8:	sub	x0, x29, #0x48
  40a9bc:	add	x1, sp, #0x58
  40a9c0:	bl	40f090 <wcrtomb@plt+0xc780>
  40a9c4:	cbz	x0, 40a9dc <wcrtomb@plt+0x80cc>
  40a9c8:	ldur	x8, [x29, #-72]
  40a9cc:	mov	x9, #0xffffffffffffffff    	// #-1
  40a9d0:	add	x8, x8, x9
  40a9d4:	stur	x8, [x29, #-56]
  40a9d8:	b	40aca4 <wcrtomb@plt+0x8394>
  40a9dc:	ldr	x8, [sp, #80]
  40a9e0:	ldur	x9, [x29, #-56]
  40a9e4:	add	x8, x9, x8
  40a9e8:	stur	x8, [x29, #-56]
  40a9ec:	ldur	x8, [x29, #-48]
  40a9f0:	cmp	x8, #0x0
  40a9f4:	cset	w10, ne  // ne = any
  40a9f8:	mov	w11, #0x1                   	// #1
  40a9fc:	eor	w10, w10, #0x1
  40aa00:	eor	w10, w10, w11
  40aa04:	and	w10, w10, #0x1
  40aa08:	ldr	x8, [sp, #40]
  40aa0c:	ldrb	w12, [x8]
  40aa10:	eor	w11, w12, w11
  40aa14:	and	w11, w11, #0x1
  40aa18:	and	w10, w10, w11
  40aa1c:	cbz	w10, 40aa24 <wcrtomb@plt+0x8114>
  40aa20:	b	40ad78 <wcrtomb@plt+0x8468>
  40aa24:	ldr	x8, [sp, #56]
  40aa28:	ldrb	w9, [x8]
  40aa2c:	tbnz	w9, #0, 40aa34 <wcrtomb@plt+0x8124>
  40aa30:	b	40aa54 <wcrtomb@plt+0x8144>
  40aa34:	ldur	x8, [x29, #-48]
  40aa38:	cmp	x8, #0x0
  40aa3c:	cset	w9, eq  // eq = none
  40aa40:	and	w9, w9, #0x1
  40aa44:	ldur	x8, [x29, #-80]
  40aa48:	add	x8, x8, w9, sxtw
  40aa4c:	stur	x8, [x29, #-80]
  40aa50:	b	40ad78 <wcrtomb@plt+0x8468>
  40aa54:	ldr	x8, [sp, #40]
  40aa58:	ldrb	w9, [x8]
  40aa5c:	tbnz	w9, #0, 40aa64 <wcrtomb@plt+0x8154>
  40aa60:	b	40acc0 <wcrtomb@plt+0x83b0>
  40aa64:	ldr	x8, [sp, #88]
  40aa68:	cbnz	x8, 40aa9c <wcrtomb@plt+0x818c>
  40aa6c:	ldur	x0, [x29, #-72]
  40aa70:	ldurb	w1, [x29, #-81]
  40aa74:	ldur	x8, [x29, #-56]
  40aa78:	ldur	x9, [x29, #-72]
  40aa7c:	subs	x2, x8, x9
  40aa80:	bl	4026f0 <memrchr@plt>
  40aa84:	str	x0, [sp, #72]
  40aa88:	ldr	x8, [sp, #72]
  40aa8c:	cbz	x8, 40aa9c <wcrtomb@plt+0x818c>
  40aa90:	ldr	x8, [sp, #72]
  40aa94:	add	x8, x8, #0x1
  40aa98:	stur	x8, [x29, #-72]
  40aa9c:	ldr	x8, [sp, #88]
  40aaa0:	cmp	x8, #0x0
  40aaa4:	cset	w9, ls  // ls = plast
  40aaa8:	tbnz	w9, #0, 40aad8 <wcrtomb@plt+0x81c8>
  40aaac:	ldur	x8, [x29, #-56]
  40aab0:	ldr	x9, [sp, #88]
  40aab4:	mov	x10, xzr
  40aab8:	subs	x9, x10, x9
  40aabc:	add	x0, x8, x9
  40aac0:	ldur	x8, [x29, #-24]
  40aac4:	ldur	x9, [x29, #-32]
  40aac8:	add	x1, x8, x9
  40aacc:	bl	40f43c <wcrtomb@plt+0xcb2c>
  40aad0:	cbnz	x0, 40ac7c <wcrtomb@plt+0x836c>
  40aad4:	b	40aaf4 <wcrtomb@plt+0x81e4>
  40aad8:	ldur	x0, [x29, #-72]
  40aadc:	ldur	x1, [x29, #-56]
  40aae0:	ldur	x8, [x29, #-24]
  40aae4:	ldur	x9, [x29, #-32]
  40aae8:	add	x2, x8, x9
  40aaec:	bl	40f470 <wcrtomb@plt+0xcb60>
  40aaf0:	cbnz	x0, 40ac7c <wcrtomb@plt+0x836c>
  40aaf4:	ldur	x8, [x29, #-56]
  40aaf8:	ldur	x9, [x29, #-80]
  40aafc:	add	x0, x8, x9
  40ab00:	ldur	x8, [x29, #-24]
  40ab04:	ldur	x9, [x29, #-32]
  40ab08:	add	x1, x8, x9
  40ab0c:	bl	40f43c <wcrtomb@plt+0xcb2c>
  40ab10:	cbnz	x0, 40ab24 <wcrtomb@plt+0x8214>
  40ab14:	ldur	x8, [x29, #-48]
  40ab18:	cbz	x8, 40ab20 <wcrtomb@plt+0x8210>
  40ab1c:	b	40ad78 <wcrtomb@plt+0x8468>
  40ab20:	b	40acc0 <wcrtomb@plt+0x83b0>
  40ab24:	ldur	x8, [x29, #-48]
  40ab28:	cbnz	x8, 40ac2c <wcrtomb@plt+0x831c>
  40ab2c:	ldr	x8, [sp, #48]
  40ab30:	ldrb	w9, [x8]
  40ab34:	tbnz	w9, #0, 40ac2c <wcrtomb@plt+0x831c>
  40ab38:	ldr	x8, [sp, #104]
  40ab3c:	ldr	x8, [x8, #32]
  40ab40:	cbnz	x8, 40ab7c <wcrtomb@plt+0x826c>
  40ab44:	ldr	x8, [sp, #104]
  40ab48:	add	x0, x8, #0x10
  40ab4c:	ldr	x8, [sp, #104]
  40ab50:	add	x1, x8, #0x18
  40ab54:	bl	404268 <wcrtomb@plt+0x1958>
  40ab58:	ldr	x8, [sp, #104]
  40ab5c:	ldr	x0, [x8, #16]
  40ab60:	ldr	x8, [sp, #104]
  40ab64:	ldr	x1, [x8, #24]
  40ab68:	mov	x2, #0xa46                 	// #2630
  40ab6c:	movk	x2, #0x1, lsl #16
  40ab70:	bl	402a94 <wcrtomb@plt+0x184>
  40ab74:	ldr	x8, [sp, #104]
  40ab78:	str	x0, [x8, #32]
  40ab7c:	ldur	x8, [x29, #-56]
  40ab80:	ldur	x9, [x29, #-80]
  40ab84:	add	x0, x8, x9
  40ab88:	ldurb	w1, [x29, #-81]
  40ab8c:	ldur	x8, [x29, #-24]
  40ab90:	ldur	x9, [x29, #-32]
  40ab94:	add	x8, x8, x9
  40ab98:	ldur	x9, [x29, #-56]
  40ab9c:	ldur	x10, [x29, #-80]
  40aba0:	add	x9, x9, x10
  40aba4:	subs	x2, x8, x9
  40aba8:	bl	402770 <memchr@plt>
  40abac:	stur	x0, [x29, #-64]
  40abb0:	ldur	x8, [x29, #-64]
  40abb4:	cbz	x8, 40abc8 <wcrtomb@plt+0x82b8>
  40abb8:	ldur	x8, [x29, #-64]
  40abbc:	add	x8, x8, #0x1
  40abc0:	str	x8, [sp, #24]
  40abc4:	b	40abd8 <wcrtomb@plt+0x82c8>
  40abc8:	ldur	x8, [x29, #-24]
  40abcc:	ldur	x9, [x29, #-32]
  40abd0:	add	x8, x8, x9
  40abd4:	str	x8, [sp, #24]
  40abd8:	ldr	x8, [sp, #24]
  40abdc:	stur	x8, [x29, #-64]
  40abe0:	ldr	x8, [sp, #104]
  40abe4:	ldr	x0, [x8, #32]
  40abe8:	ldur	x1, [x29, #-56]
  40abec:	ldur	x8, [x29, #-64]
  40abf0:	ldur	x9, [x29, #-56]
  40abf4:	subs	x2, x8, x9
  40abf8:	ldur	x3, [x29, #-40]
  40abfc:	mov	x8, xzr
  40ac00:	mov	x4, x8
  40ac04:	bl	403554 <wcrtomb@plt+0xc44>
  40ac08:	mov	x8, #0xffffffffffffffff    	// #-1
  40ac0c:	cmp	x0, x8
  40ac10:	b.eq	40ac18 <wcrtomb@plt+0x8308>  // b.none
  40ac14:	b	40ad24 <wcrtomb@plt+0x8414>
  40ac18:	ldur	x8, [x29, #-64]
  40ac1c:	mov	x9, #0xffffffffffffffff    	// #-1
  40ac20:	add	x8, x8, x9
  40ac24:	stur	x8, [x29, #-56]
  40ac28:	b	40ac7c <wcrtomb@plt+0x836c>
  40ac2c:	ldur	x8, [x29, #-80]
  40ac30:	cbnz	x8, 40ac38 <wcrtomb@plt+0x8328>
  40ac34:	b	40ac7c <wcrtomb@plt+0x836c>
  40ac38:	ldr	x0, [sp, #96]
  40ac3c:	ldur	x1, [x29, #-56]
  40ac40:	ldur	x8, [x29, #-80]
  40ac44:	subs	x8, x8, #0x1
  40ac48:	stur	x8, [x29, #-80]
  40ac4c:	mov	x2, x8
  40ac50:	sub	x3, x29, #0x70
  40ac54:	mov	w9, #0x1                   	// #1
  40ac58:	and	w4, w9, #0x1
  40ac5c:	bl	40cbac <wcrtomb@plt+0xa29c>
  40ac60:	str	x0, [sp, #80]
  40ac64:	ldr	x8, [sp, #80]
  40ac68:	cbz	x8, 40ac70 <wcrtomb@plt+0x8360>
  40ac6c:	b	40ac7c <wcrtomb@plt+0x836c>
  40ac70:	ldur	x8, [x29, #-96]
  40ac74:	stur	x8, [x29, #-80]
  40ac78:	b	40aaf4 <wcrtomb@plt+0x81e4>
  40ac7c:	ldur	x0, [x29, #-56]
  40ac80:	ldur	x8, [x29, #-24]
  40ac84:	ldur	x9, [x29, #-32]
  40ac88:	add	x1, x8, x9
  40ac8c:	bl	40f2cc <wcrtomb@plt+0xc9bc>
  40ac90:	ldur	x8, [x29, #-56]
  40ac94:	add	x8, x8, x0
  40ac98:	stur	x8, [x29, #-56]
  40ac9c:	ldur	x8, [x29, #-56]
  40aca0:	stur	x8, [x29, #-72]
  40aca4:	ldur	x8, [x29, #-56]
  40aca8:	add	x8, x8, #0x1
  40acac:	stur	x8, [x29, #-56]
  40acb0:	b	40a870 <wcrtomb@plt+0x7f60>
  40acb4:	mov	x8, #0xffffffffffffffff    	// #-1
  40acb8:	stur	x8, [x29, #-8]
  40acbc:	b	40ada4 <wcrtomb@plt+0x8494>
  40acc0:	ldur	x8, [x29, #-56]
  40acc4:	ldur	x9, [x29, #-80]
  40acc8:	add	x0, x8, x9
  40accc:	ldurb	w1, [x29, #-81]
  40acd0:	ldur	x8, [x29, #-24]
  40acd4:	ldur	x9, [x29, #-32]
  40acd8:	add	x8, x8, x9
  40acdc:	ldur	x9, [x29, #-56]
  40ace0:	ldur	x10, [x29, #-80]
  40ace4:	add	x9, x9, x10
  40ace8:	subs	x2, x8, x9
  40acec:	bl	402770 <memchr@plt>
  40acf0:	stur	x0, [x29, #-64]
  40acf4:	ldur	x8, [x29, #-64]
  40acf8:	cbz	x8, 40ad0c <wcrtomb@plt+0x83fc>
  40acfc:	ldur	x8, [x29, #-64]
  40ad00:	add	x8, x8, #0x1
  40ad04:	str	x8, [sp, #16]
  40ad08:	b	40ad1c <wcrtomb@plt+0x840c>
  40ad0c:	ldur	x8, [x29, #-24]
  40ad10:	ldur	x9, [x29, #-32]
  40ad14:	add	x8, x8, x9
  40ad18:	str	x8, [sp, #16]
  40ad1c:	ldr	x8, [sp, #16]
  40ad20:	stur	x8, [x29, #-64]
  40ad24:	ldur	x0, [x29, #-24]
  40ad28:	ldurb	w1, [x29, #-81]
  40ad2c:	ldur	x8, [x29, #-56]
  40ad30:	ldur	x9, [x29, #-24]
  40ad34:	subs	x2, x8, x9
  40ad38:	bl	4026f0 <memrchr@plt>
  40ad3c:	stur	x0, [x29, #-56]
  40ad40:	ldur	x8, [x29, #-56]
  40ad44:	cbz	x8, 40ad58 <wcrtomb@plt+0x8448>
  40ad48:	ldur	x8, [x29, #-56]
  40ad4c:	add	x8, x8, #0x1
  40ad50:	str	x8, [sp, #8]
  40ad54:	b	40ad60 <wcrtomb@plt+0x8450>
  40ad58:	ldur	x8, [x29, #-24]
  40ad5c:	str	x8, [sp, #8]
  40ad60:	ldr	x8, [sp, #8]
  40ad64:	stur	x8, [x29, #-56]
  40ad68:	ldur	x8, [x29, #-64]
  40ad6c:	ldur	x9, [x29, #-56]
  40ad70:	subs	x8, x8, x9
  40ad74:	stur	x8, [x29, #-80]
  40ad78:	ldur	x8, [x29, #-56]
  40ad7c:	ldur	x9, [x29, #-24]
  40ad80:	subs	x8, x8, x9
  40ad84:	str	x8, [sp, #64]
  40ad88:	ldur	x8, [x29, #-80]
  40ad8c:	ldur	x9, [x29, #-40]
  40ad90:	str	x8, [x9]
  40ad94:	ldr	x8, [sp, #64]
  40ad98:	str	x8, [sp, #120]
  40ad9c:	ldr	x8, [sp, #120]
  40ada0:	stur	x8, [x29, #-8]
  40ada4:	ldur	x0, [x29, #-8]
  40ada8:	ldp	x29, x30, [sp, #240]
  40adac:	add	sp, sp, #0x100
  40adb0:	ret
  40adb4:	sub	sp, sp, #0x90
  40adb8:	stp	x29, x30, [sp, #128]
  40adbc:	add	x29, sp, #0x80
  40adc0:	mov	x8, #0x9a8                 	// #2472
  40adc4:	mov	x9, xzr
  40adc8:	adrp	x3, 423000 <wcrtomb@plt+0x206f0>
  40adcc:	add	x3, x3, #0x58
  40add0:	adrp	x4, 402000 <mbrtowc@plt-0x280>
  40add4:	add	x4, x4, #0x6c0
  40add8:	mov	x10, #0x40                  	// #64
  40addc:	stur	x0, [x29, #-8]
  40ade0:	mov	x0, x8
  40ade4:	str	x9, [sp, #32]
  40ade8:	str	x3, [sp, #24]
  40adec:	str	x4, [sp, #16]
  40adf0:	str	x10, [sp, #8]
  40adf4:	bl	423058 <wcrtomb@plt+0x20748>
  40adf8:	stur	x0, [x29, #-16]
  40adfc:	ldur	x0, [x29, #-16]
  40ae00:	ldr	x1, [sp, #32]
  40ae04:	ldr	x2, [sp, #32]
  40ae08:	ldr	x3, [sp, #24]
  40ae0c:	ldr	x4, [sp, #16]
  40ae10:	bl	427284 <_obstack_begin@@Base>
  40ae14:	ldur	x8, [x29, #-16]
  40ae18:	str	xzr, [x8, #88]
  40ae1c:	ldur	x8, [x29, #-16]
  40ae20:	stur	x8, [x29, #-24]
  40ae24:	ldur	x8, [x29, #-24]
  40ae28:	stur	x8, [x29, #-32]
  40ae2c:	ldr	x8, [sp, #8]
  40ae30:	stur	x8, [x29, #-40]
  40ae34:	ldur	x9, [x29, #-32]
  40ae38:	stur	x9, [x29, #-48]
  40ae3c:	ldur	x9, [x29, #-48]
  40ae40:	ldr	x9, [x9, #32]
  40ae44:	ldur	x10, [x29, #-48]
  40ae48:	ldr	x10, [x10, #24]
  40ae4c:	subs	x9, x9, x10
  40ae50:	stur	x9, [x29, #-56]
  40ae54:	ldur	x9, [x29, #-56]
  40ae58:	ldur	x10, [x29, #-40]
  40ae5c:	cmp	x9, x10
  40ae60:	b.cs	40ae70 <wcrtomb@plt+0x8560>  // b.hs, b.nlast
  40ae64:	ldur	x0, [x29, #-32]
  40ae68:	ldur	x1, [x29, #-40]
  40ae6c:	bl	427494 <_obstack_newchunk@@Base>
  40ae70:	ldur	x8, [x29, #-40]
  40ae74:	ldur	x9, [x29, #-32]
  40ae78:	ldr	x10, [x9, #24]
  40ae7c:	add	x8, x10, x8
  40ae80:	str	x8, [x9, #24]
  40ae84:	ldur	x8, [x29, #-24]
  40ae88:	str	x8, [sp, #56]
  40ae8c:	ldr	x8, [sp, #56]
  40ae90:	ldr	x8, [x8, #16]
  40ae94:	str	x8, [sp, #48]
  40ae98:	ldr	x8, [sp, #56]
  40ae9c:	ldr	x8, [x8, #24]
  40aea0:	ldr	x9, [sp, #48]
  40aea4:	cmp	x8, x9
  40aea8:	b.ne	40aec0 <wcrtomb@plt+0x85b0>  // b.any
  40aeac:	ldr	x8, [sp, #56]
  40aeb0:	ldrb	w9, [x8, #80]
  40aeb4:	and	w9, w9, #0xfffffffd
  40aeb8:	orr	w9, w9, #0x2
  40aebc:	strb	w9, [x8, #80]
  40aec0:	ldr	x8, [sp, #56]
  40aec4:	ldr	x8, [x8, #24]
  40aec8:	mov	x9, xzr
  40aecc:	subs	x8, x8, #0x0
  40aed0:	ldr	x10, [sp, #56]
  40aed4:	ldr	x10, [x10, #48]
  40aed8:	add	x8, x8, x10
  40aedc:	ldr	x10, [sp, #56]
  40aee0:	ldr	x10, [x10, #48]
  40aee4:	bic	x8, x8, x10
  40aee8:	add	x8, x9, x8
  40aeec:	ldr	x9, [sp, #56]
  40aef0:	str	x8, [x9, #24]
  40aef4:	ldr	x8, [sp, #56]
  40aef8:	ldr	x8, [x8, #24]
  40aefc:	ldr	x9, [sp, #56]
  40af00:	ldr	x9, [x9, #8]
  40af04:	subs	x8, x8, x9
  40af08:	ldr	x9, [sp, #56]
  40af0c:	ldr	x9, [x9, #32]
  40af10:	ldr	x10, [sp, #56]
  40af14:	ldr	x10, [x10, #8]
  40af18:	subs	x9, x9, x10
  40af1c:	cmp	x8, x9
  40af20:	b.ls	40af34 <wcrtomb@plt+0x8624>  // b.plast
  40af24:	ldr	x8, [sp, #56]
  40af28:	ldr	x8, [x8, #32]
  40af2c:	ldr	x9, [sp, #56]
  40af30:	str	x8, [x9, #24]
  40af34:	ldr	x8, [sp, #56]
  40af38:	ldr	x8, [x8, #24]
  40af3c:	ldr	x9, [sp, #56]
  40af40:	str	x8, [x9, #16]
  40af44:	ldr	x8, [sp, #48]
  40af48:	str	x8, [sp, #40]
  40af4c:	ldr	x8, [sp, #40]
  40af50:	str	x8, [sp, #64]
  40af54:	ldr	x8, [sp, #64]
  40af58:	ldur	x9, [x29, #-16]
  40af5c:	str	x8, [x9, #96]
  40af60:	ldur	x8, [x29, #-16]
  40af64:	ldr	x8, [x8, #96]
  40af68:	mov	x9, xzr
  40af6c:	str	xzr, [x8]
  40af70:	ldur	x8, [x29, #-16]
  40af74:	ldr	x8, [x8, #96]
  40af78:	str	x9, [x8, #8]
  40af7c:	ldur	x8, [x29, #-16]
  40af80:	ldr	x8, [x8, #96]
  40af84:	str	x9, [x8, #16]
  40af88:	ldur	x8, [x29, #-16]
  40af8c:	ldr	x8, [x8, #96]
  40af90:	str	x9, [x8, #24]
  40af94:	ldur	x8, [x29, #-16]
  40af98:	ldr	x8, [x8, #96]
  40af9c:	str	x9, [x8, #32]
  40afa0:	ldur	x8, [x29, #-16]
  40afa4:	ldr	x8, [x8, #96]
  40afa8:	str	xzr, [x8, #40]
  40afac:	ldur	x8, [x29, #-16]
  40afb0:	ldr	x8, [x8, #96]
  40afb4:	str	xzr, [x8, #48]
  40afb8:	ldur	x8, [x29, #-16]
  40afbc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40afc0:	str	x10, [x8, #104]
  40afc4:	ldur	x8, [x29, #-16]
  40afc8:	mov	x10, #0xffffffffffffffff    	// #-1
  40afcc:	str	x10, [x8, #112]
  40afd0:	ldur	x8, [x29, #-16]
  40afd4:	str	x9, [x8, #2424]
  40afd8:	ldur	x8, [x29, #-8]
  40afdc:	ldur	x9, [x29, #-16]
  40afe0:	str	x8, [x9, #2440]
  40afe4:	ldur	x8, [x29, #-16]
  40afe8:	adrp	x9, 40b000 <wcrtomb@plt+0x86f0>
  40afec:	add	x9, x9, #0x4
  40aff0:	str	x9, [x8, #2464]
  40aff4:	ldur	x0, [x29, #-16]
  40aff8:	ldp	x29, x30, [sp, #128]
  40affc:	add	sp, sp, #0x90
  40b000:	ret
  40b004:	sub	sp, sp, #0x40
  40b008:	stp	x29, x30, [sp, #48]
  40b00c:	add	x29, sp, #0x30
  40b010:	mov	x8, xzr
  40b014:	stur	x0, [x29, #-8]
  40b018:	stur	x1, [x29, #-16]
  40b01c:	str	x2, [sp, #24]
  40b020:	str	x3, [sp, #16]
  40b024:	and	w9, w4, #0x1
  40b028:	strb	w9, [sp, #15]
  40b02c:	ldr	x10, [sp, #24]
  40b030:	cmp	x8, x10
  40b034:	cset	w9, gt
  40b038:	tbnz	w9, #0, 40b040 <wcrtomb@plt+0x8730>
  40b03c:	b	40b040 <wcrtomb@plt+0x8730>
  40b040:	ldur	x8, [x29, #-8]
  40b044:	ldr	x8, [x8, #2440]
  40b048:	cbz	x8, 40b070 <wcrtomb@plt+0x8760>
  40b04c:	ldur	x0, [x29, #-8]
  40b050:	ldur	x1, [x29, #-16]
  40b054:	ldr	x2, [sp, #24]
  40b058:	ldr	x3, [sp, #16]
  40b05c:	ldrb	w8, [sp, #15]
  40b060:	and	w4, w8, #0x1
  40b064:	bl	40e8c4 <wcrtomb@plt+0xbfb4>
  40b068:	str	x0, [sp]
  40b06c:	b	40b090 <wcrtomb@plt+0x8780>
  40b070:	ldur	x0, [x29, #-8]
  40b074:	ldur	x1, [x29, #-16]
  40b078:	ldr	x2, [sp, #24]
  40b07c:	ldr	x3, [sp, #16]
  40b080:	ldrb	w8, [sp, #15]
  40b084:	and	w4, w8, #0x1
  40b088:	bl	40e8c4 <wcrtomb@plt+0xbfb4>
  40b08c:	str	x0, [sp]
  40b090:	ldr	x8, [sp]
  40b094:	mov	x0, x8
  40b098:	ldp	x29, x30, [sp, #48]
  40b09c:	add	sp, sp, #0x40
  40b0a0:	ret
  40b0a4:	sub	sp, sp, #0x1d0
  40b0a8:	stp	x29, x30, [sp, #432]
  40b0ac:	str	x28, [sp, #448]
  40b0b0:	add	x29, sp, #0x1b0
  40b0b4:	mov	x8, xzr
  40b0b8:	stur	x0, [x29, #-8]
  40b0bc:	stur	x1, [x29, #-16]
  40b0c0:	stur	x2, [x29, #-24]
  40b0c4:	ldur	x9, [x29, #-24]
  40b0c8:	cmp	x8, x9
  40b0cc:	cset	w10, gt
  40b0d0:	tbnz	w10, #0, 40b0d8 <wcrtomb@plt+0x87c8>
  40b0d4:	b	40b0d8 <wcrtomb@plt+0x87c8>
  40b0d8:	ldur	x8, [x29, #-8]
  40b0dc:	ldr	x8, [x8, #96]
  40b0e0:	stur	x8, [x29, #-32]
  40b0e4:	ldur	x8, [x29, #-8]
  40b0e8:	ldr	x8, [x8, #2440]
  40b0ec:	stur	x8, [x29, #-40]
  40b0f0:	ldur	x8, [x29, #-8]
  40b0f4:	ldr	x8, [x8, #2464]
  40b0f8:	adrp	x9, 40b000 <wcrtomb@plt+0x86f0>
  40b0fc:	add	x9, x9, #0xb6c
  40b100:	cmp	x8, x9
  40b104:	cset	w10, eq  // eq = none
  40b108:	and	w10, w10, #0x1
  40b10c:	sturb	w10, [x29, #-41]
  40b110:	ldurb	w10, [x29, #-41]
  40b114:	tbnz	w10, #0, 40b11c <wcrtomb@plt+0x880c>
  40b118:	b	40b12c <wcrtomb@plt+0x881c>
  40b11c:	ldur	x8, [x29, #-24]
  40b120:	ldur	x9, [x29, #-16]
  40b124:	add	x8, x9, x8
  40b128:	stur	x8, [x29, #-16]
  40b12c:	ldur	x8, [x29, #-24]
  40b130:	subs	x9, x8, #0x1
  40b134:	stur	x9, [x29, #-24]
  40b138:	cbz	x8, 40bacc <wcrtomb@plt+0x91bc>
  40b13c:	ldurb	w8, [x29, #-41]
  40b140:	tbnz	w8, #0, 40b148 <wcrtomb@plt+0x8838>
  40b144:	b	40b164 <wcrtomb@plt+0x8854>
  40b148:	ldur	x8, [x29, #-16]
  40b14c:	mov	x9, #0xffffffffffffffff    	// #-1
  40b150:	add	x9, x8, x9
  40b154:	stur	x9, [x29, #-16]
  40b158:	ldurb	w10, [x8, #-1]
  40b15c:	str	w10, [sp, #28]
  40b160:	b	40b178 <wcrtomb@plt+0x8868>
  40b164:	ldur	x8, [x29, #-16]
  40b168:	add	x9, x8, #0x1
  40b16c:	stur	x9, [x29, #-16]
  40b170:	ldrb	w10, [x8]
  40b174:	str	w10, [sp, #28]
  40b178:	ldr	w8, [sp, #28]
  40b17c:	sturb	w8, [x29, #-42]
  40b180:	ldur	x9, [x29, #-40]
  40b184:	cbz	x9, 40b1a0 <wcrtomb@plt+0x8890>
  40b188:	ldur	x8, [x29, #-40]
  40b18c:	ldurb	w9, [x29, #-42]
  40b190:	mov	w10, w9
  40b194:	ldrb	w9, [x8, x10]
  40b198:	str	w9, [sp, #24]
  40b19c:	b	40b1a8 <wcrtomb@plt+0x8898>
  40b1a0:	ldurb	w8, [x29, #-42]
  40b1a4:	str	w8, [sp, #24]
  40b1a8:	ldr	w8, [sp, #24]
  40b1ac:	sturb	w8, [x29, #-43]
  40b1b0:	ldur	x9, [x29, #-32]
  40b1b4:	ldr	x9, [x9, #8]
  40b1b8:	stur	x9, [x29, #-56]
  40b1bc:	ldur	x9, [x29, #-32]
  40b1c0:	add	x9, x9, #0x8
  40b1c4:	stur	x9, [x29, #-152]
  40b1c8:	stur	wzr, [x29, #-200]
  40b1cc:	mov	x9, #0x1                   	// #1
  40b1d0:	stur	x9, [x29, #-208]
  40b1d4:	ldur	x8, [x29, #-56]
  40b1d8:	mov	w9, #0x0                   	// #0
  40b1dc:	str	w9, [sp, #20]
  40b1e0:	cbz	x8, 40b1fc <wcrtomb@plt+0x88ec>
  40b1e4:	ldurb	w8, [x29, #-43]
  40b1e8:	ldur	x9, [x29, #-56]
  40b1ec:	ldrb	w10, [x9, #24]
  40b1f0:	cmp	w8, w10
  40b1f4:	cset	w8, ne  // ne = any
  40b1f8:	str	w8, [sp, #20]
  40b1fc:	ldr	w8, [sp, #20]
  40b200:	tbnz	w8, #0, 40b208 <wcrtomb@plt+0x88f8>
  40b204:	b	40b288 <wcrtomb@plt+0x8978>
  40b208:	ldur	x8, [x29, #-56]
  40b20c:	ldur	x9, [x29, #-208]
  40b210:	mov	x10, #0x8                   	// #8
  40b214:	mul	x9, x10, x9
  40b218:	sub	x10, x29, #0x98
  40b21c:	add	x9, x10, x9
  40b220:	str	x8, [x9]
  40b224:	ldurb	w11, [x29, #-43]
  40b228:	ldur	x8, [x29, #-56]
  40b22c:	ldrb	w12, [x8, #24]
  40b230:	cmp	w11, w12
  40b234:	b.ge	40b260 <wcrtomb@plt+0x8950>  // b.tcont
  40b238:	ldur	x8, [x29, #-208]
  40b23c:	add	x9, x8, #0x1
  40b240:	stur	x9, [x29, #-208]
  40b244:	sub	x9, x29, #0xc8
  40b248:	mov	w10, wzr
  40b24c:	str	w10, [x9, x8, lsl #2]
  40b250:	ldur	x8, [x29, #-56]
  40b254:	ldr	x8, [x8]
  40b258:	stur	x8, [x29, #-56]
  40b25c:	b	40b284 <wcrtomb@plt+0x8974>
  40b260:	ldur	x8, [x29, #-208]
  40b264:	add	x9, x8, #0x1
  40b268:	stur	x9, [x29, #-208]
  40b26c:	sub	x9, x29, #0xc8
  40b270:	mov	w10, #0x1                   	// #1
  40b274:	str	w10, [x9, x8, lsl #2]
  40b278:	ldur	x8, [x29, #-56]
  40b27c:	ldr	x8, [x8, #8]
  40b280:	stur	x8, [x29, #-56]
  40b284:	b	40b1d4 <wcrtomb@plt+0x88c4>
  40b288:	ldur	x8, [x29, #-56]
  40b28c:	cbnz	x8, 40babc <wcrtomb@plt+0x91ac>
  40b290:	ldur	x8, [x29, #-8]
  40b294:	str	x8, [sp, #216]
  40b298:	ldr	x8, [sp, #216]
  40b29c:	str	x8, [sp, #208]
  40b2a0:	mov	x8, #0x20                  	// #32
  40b2a4:	str	x8, [sp, #200]
  40b2a8:	ldr	x8, [sp, #208]
  40b2ac:	str	x8, [sp, #192]
  40b2b0:	ldr	x8, [sp, #192]
  40b2b4:	ldr	x8, [x8, #32]
  40b2b8:	ldr	x9, [sp, #192]
  40b2bc:	ldr	x9, [x9, #24]
  40b2c0:	subs	x8, x8, x9
  40b2c4:	str	x8, [sp, #184]
  40b2c8:	ldr	x8, [sp, #184]
  40b2cc:	ldr	x9, [sp, #200]
  40b2d0:	cmp	x8, x9
  40b2d4:	b.cs	40b2e4 <wcrtomb@plt+0x89d4>  // b.hs, b.nlast
  40b2d8:	ldr	x0, [sp, #208]
  40b2dc:	ldr	x1, [sp, #200]
  40b2e0:	bl	427494 <_obstack_newchunk@@Base>
  40b2e4:	ldr	x8, [sp, #200]
  40b2e8:	ldr	x9, [sp, #208]
  40b2ec:	ldr	x10, [x9, #24]
  40b2f0:	add	x8, x10, x8
  40b2f4:	str	x8, [x9, #24]
  40b2f8:	ldr	x8, [sp, #216]
  40b2fc:	str	x8, [sp, #168]
  40b300:	ldr	x8, [sp, #168]
  40b304:	ldr	x8, [x8, #16]
  40b308:	str	x8, [sp, #160]
  40b30c:	ldr	x8, [sp, #168]
  40b310:	ldr	x8, [x8, #24]
  40b314:	ldr	x9, [sp, #160]
  40b318:	cmp	x8, x9
  40b31c:	b.ne	40b334 <wcrtomb@plt+0x8a24>  // b.any
  40b320:	ldr	x8, [sp, #168]
  40b324:	ldrb	w9, [x8, #80]
  40b328:	and	w9, w9, #0xfffffffd
  40b32c:	orr	w9, w9, #0x2
  40b330:	strb	w9, [x8, #80]
  40b334:	ldr	x8, [sp, #168]
  40b338:	ldr	x8, [x8, #24]
  40b33c:	mov	x9, xzr
  40b340:	subs	x8, x8, #0x0
  40b344:	ldr	x10, [sp, #168]
  40b348:	ldr	x10, [x10, #48]
  40b34c:	add	x8, x8, x10
  40b350:	ldr	x10, [sp, #168]
  40b354:	ldr	x10, [x10, #48]
  40b358:	bic	x8, x8, x10
  40b35c:	add	x8, x9, x8
  40b360:	ldr	x9, [sp, #168]
  40b364:	str	x8, [x9, #24]
  40b368:	ldr	x8, [sp, #168]
  40b36c:	ldr	x8, [x8, #24]
  40b370:	ldr	x9, [sp, #168]
  40b374:	ldr	x9, [x9, #8]
  40b378:	subs	x8, x8, x9
  40b37c:	ldr	x9, [sp, #168]
  40b380:	ldr	x9, [x9, #32]
  40b384:	ldr	x10, [sp, #168]
  40b388:	ldr	x10, [x10, #8]
  40b38c:	subs	x9, x9, x10
  40b390:	cmp	x8, x9
  40b394:	b.ls	40b3a8 <wcrtomb@plt+0x8a98>  // b.plast
  40b398:	ldr	x8, [sp, #168]
  40b39c:	ldr	x8, [x8, #32]
  40b3a0:	ldr	x9, [sp, #168]
  40b3a4:	str	x8, [x9, #24]
  40b3a8:	ldr	x8, [sp, #168]
  40b3ac:	ldr	x8, [x8, #24]
  40b3b0:	ldr	x9, [sp, #168]
  40b3b4:	str	x8, [x9, #16]
  40b3b8:	ldr	x8, [sp, #160]
  40b3bc:	str	x8, [sp, #152]
  40b3c0:	ldr	x8, [sp, #152]
  40b3c4:	str	x8, [sp, #176]
  40b3c8:	ldr	x8, [sp, #176]
  40b3cc:	stur	x8, [x29, #-56]
  40b3d0:	ldur	x8, [x29, #-56]
  40b3d4:	mov	x9, xzr
  40b3d8:	str	x9, [x8]
  40b3dc:	ldur	x8, [x29, #-56]
  40b3e0:	str	x9, [x8, #8]
  40b3e4:	ldur	x8, [x29, #-8]
  40b3e8:	str	x8, [sp, #144]
  40b3ec:	ldr	x8, [sp, #144]
  40b3f0:	str	x8, [sp, #136]
  40b3f4:	mov	x8, #0x40                  	// #64
  40b3f8:	str	x8, [sp, #128]
  40b3fc:	ldr	x8, [sp, #136]
  40b400:	str	x8, [sp, #120]
  40b404:	ldr	x8, [sp, #120]
  40b408:	ldr	x8, [x8, #32]
  40b40c:	ldr	x9, [sp, #120]
  40b410:	ldr	x9, [x9, #24]
  40b414:	subs	x8, x8, x9
  40b418:	str	x8, [sp, #112]
  40b41c:	ldr	x8, [sp, #112]
  40b420:	ldr	x9, [sp, #128]
  40b424:	cmp	x8, x9
  40b428:	b.cs	40b438 <wcrtomb@plt+0x8b28>  // b.hs, b.nlast
  40b42c:	ldr	x0, [sp, #136]
  40b430:	ldr	x1, [sp, #128]
  40b434:	bl	427494 <_obstack_newchunk@@Base>
  40b438:	ldr	x8, [sp, #128]
  40b43c:	ldr	x9, [sp, #136]
  40b440:	ldr	x10, [x9, #24]
  40b444:	add	x8, x10, x8
  40b448:	str	x8, [x9, #24]
  40b44c:	ldr	x8, [sp, #144]
  40b450:	str	x8, [sp, #96]
  40b454:	ldr	x8, [sp, #96]
  40b458:	ldr	x8, [x8, #16]
  40b45c:	str	x8, [sp, #88]
  40b460:	ldr	x8, [sp, #96]
  40b464:	ldr	x8, [x8, #24]
  40b468:	ldr	x9, [sp, #88]
  40b46c:	cmp	x8, x9
  40b470:	b.ne	40b488 <wcrtomb@plt+0x8b78>  // b.any
  40b474:	ldr	x8, [sp, #96]
  40b478:	ldrb	w9, [x8, #80]
  40b47c:	and	w9, w9, #0xfffffffd
  40b480:	orr	w9, w9, #0x2
  40b484:	strb	w9, [x8, #80]
  40b488:	ldr	x8, [sp, #96]
  40b48c:	ldr	x8, [x8, #24]
  40b490:	mov	x9, xzr
  40b494:	subs	x8, x8, #0x0
  40b498:	ldr	x10, [sp, #96]
  40b49c:	ldr	x10, [x10, #48]
  40b4a0:	add	x8, x8, x10
  40b4a4:	ldr	x10, [sp, #96]
  40b4a8:	ldr	x10, [x10, #48]
  40b4ac:	bic	x8, x8, x10
  40b4b0:	add	x8, x9, x8
  40b4b4:	ldr	x9, [sp, #96]
  40b4b8:	str	x8, [x9, #24]
  40b4bc:	ldr	x8, [sp, #96]
  40b4c0:	ldr	x8, [x8, #24]
  40b4c4:	ldr	x9, [sp, #96]
  40b4c8:	ldr	x9, [x9, #8]
  40b4cc:	subs	x8, x8, x9
  40b4d0:	ldr	x9, [sp, #96]
  40b4d4:	ldr	x9, [x9, #32]
  40b4d8:	ldr	x10, [sp, #96]
  40b4dc:	ldr	x10, [x10, #8]
  40b4e0:	subs	x9, x9, x10
  40b4e4:	cmp	x8, x9
  40b4e8:	b.ls	40b4fc <wcrtomb@plt+0x8bec>  // b.plast
  40b4ec:	ldr	x8, [sp, #96]
  40b4f0:	ldr	x8, [x8, #32]
  40b4f4:	ldr	x9, [sp, #96]
  40b4f8:	str	x8, [x9, #24]
  40b4fc:	ldr	x8, [sp, #96]
  40b500:	ldr	x8, [x8, #24]
  40b504:	ldr	x9, [sp, #96]
  40b508:	str	x8, [x9, #16]
  40b50c:	ldr	x8, [sp, #88]
  40b510:	str	x8, [sp, #80]
  40b514:	ldr	x8, [sp, #80]
  40b518:	str	x8, [sp, #104]
  40b51c:	ldr	x8, [sp, #104]
  40b520:	ldur	x9, [x29, #-56]
  40b524:	str	x8, [x9, #16]
  40b528:	ldur	x8, [x29, #-56]
  40b52c:	ldr	x8, [x8, #16]
  40b530:	mov	x9, xzr
  40b534:	str	xzr, [x8]
  40b538:	ldur	x8, [x29, #-56]
  40b53c:	ldr	x8, [x8, #16]
  40b540:	str	x9, [x8, #8]
  40b544:	ldur	x8, [x29, #-32]
  40b548:	ldur	x10, [x29, #-56]
  40b54c:	ldr	x10, [x10, #16]
  40b550:	str	x8, [x10, #16]
  40b554:	ldur	x8, [x29, #-56]
  40b558:	ldr	x8, [x8, #16]
  40b55c:	str	x9, [x8, #24]
  40b560:	ldur	x8, [x29, #-56]
  40b564:	ldr	x8, [x8, #16]
  40b568:	str	x9, [x8, #32]
  40b56c:	ldur	x8, [x29, #-32]
  40b570:	ldr	x8, [x8, #40]
  40b574:	add	x8, x8, #0x1
  40b578:	ldur	x9, [x29, #-56]
  40b57c:	ldr	x9, [x9, #16]
  40b580:	str	x8, [x9, #40]
  40b584:	ldur	x8, [x29, #-56]
  40b588:	ldr	x8, [x8, #16]
  40b58c:	str	xzr, [x8, #48]
  40b590:	ldurb	w11, [x29, #-43]
  40b594:	ldur	x8, [x29, #-56]
  40b598:	strb	w11, [x8, #24]
  40b59c:	ldur	x8, [x29, #-56]
  40b5a0:	mov	w11, #0x0                   	// #0
  40b5a4:	strb	w11, [x8, #25]
  40b5a8:	ldur	x8, [x29, #-208]
  40b5ac:	subs	x8, x8, #0x1
  40b5b0:	stur	x8, [x29, #-208]
  40b5b4:	sub	x9, x29, #0xc8
  40b5b8:	ldr	w11, [x9, x8, lsl #2]
  40b5bc:	cbnz	w11, 40b5e4 <wcrtomb@plt+0x8cd4>
  40b5c0:	ldur	x8, [x29, #-56]
  40b5c4:	ldur	x9, [x29, #-208]
  40b5c8:	mov	x10, #0x8                   	// #8
  40b5cc:	mul	x9, x10, x9
  40b5d0:	sub	x10, x29, #0x98
  40b5d4:	add	x9, x10, x9
  40b5d8:	ldr	x9, [x9]
  40b5dc:	str	x8, [x9]
  40b5e0:	b	40b604 <wcrtomb@plt+0x8cf4>
  40b5e4:	ldur	x8, [x29, #-56]
  40b5e8:	ldur	x9, [x29, #-208]
  40b5ec:	mov	x10, #0x8                   	// #8
  40b5f0:	mul	x9, x10, x9
  40b5f4:	sub	x10, x29, #0x98
  40b5f8:	add	x9, x10, x9
  40b5fc:	ldr	x9, [x9]
  40b600:	str	x8, [x9, #8]
  40b604:	ldur	x8, [x29, #-208]
  40b608:	mov	w9, #0x0                   	// #0
  40b60c:	str	w9, [sp, #16]
  40b610:	cbz	x8, 40b640 <wcrtomb@plt+0x8d30>
  40b614:	ldur	x8, [x29, #-208]
  40b618:	mov	x9, #0x8                   	// #8
  40b61c:	mul	x8, x9, x8
  40b620:	sub	x9, x29, #0x98
  40b624:	add	x8, x9, x8
  40b628:	ldr	x8, [x8]
  40b62c:	ldrb	w10, [x8, #25]
  40b630:	cmp	w10, #0x0
  40b634:	cset	w10, ne  // ne = any
  40b638:	eor	w10, w10, #0x1
  40b63c:	str	w10, [sp, #16]
  40b640:	ldr	w8, [sp, #16]
  40b644:	tbnz	w8, #0, 40b64c <wcrtomb@plt+0x8d3c>
  40b648:	b	40b6bc <wcrtomb@plt+0x8dac>
  40b64c:	ldur	x8, [x29, #-208]
  40b650:	sub	x9, x29, #0xc8
  40b654:	ldr	w10, [x9, x8, lsl #2]
  40b658:	cbnz	w10, 40b688 <wcrtomb@plt+0x8d78>
  40b65c:	ldur	x8, [x29, #-208]
  40b660:	mov	x9, #0x8                   	// #8
  40b664:	mul	x8, x9, x8
  40b668:	sub	x9, x29, #0x98
  40b66c:	add	x8, x9, x8
  40b670:	ldr	x8, [x8]
  40b674:	ldrb	w10, [x8, #25]
  40b678:	mov	w11, #0xffffffff            	// #-1
  40b67c:	add	w10, w11, w10, uxtb
  40b680:	strb	w10, [x8, #25]
  40b684:	b	40b6ac <wcrtomb@plt+0x8d9c>
  40b688:	ldur	x8, [x29, #-208]
  40b68c:	mov	x9, #0x8                   	// #8
  40b690:	mul	x8, x9, x8
  40b694:	sub	x9, x29, #0x98
  40b698:	add	x8, x9, x8
  40b69c:	ldr	x8, [x8]
  40b6a0:	ldrb	w10, [x8, #25]
  40b6a4:	add	w10, w10, #0x1
  40b6a8:	strb	w10, [x8, #25]
  40b6ac:	ldur	x8, [x29, #-208]
  40b6b0:	subs	x8, x8, #0x1
  40b6b4:	stur	x8, [x29, #-208]
  40b6b8:	b	40b604 <wcrtomb@plt+0x8cf4>
  40b6bc:	ldur	x8, [x29, #-208]
  40b6c0:	cbz	x8, 40babc <wcrtomb@plt+0x91ac>
  40b6c4:	ldur	x8, [x29, #-208]
  40b6c8:	sub	x9, x29, #0xc8
  40b6cc:	ldr	w10, [x9, x8, lsl #2]
  40b6d0:	cbnz	w10, 40b708 <wcrtomb@plt+0x8df8>
  40b6d4:	ldur	x8, [x29, #-208]
  40b6d8:	mov	x9, #0x8                   	// #8
  40b6dc:	mul	x8, x9, x8
  40b6e0:	sub	x9, x29, #0x98
  40b6e4:	add	x8, x9, x8
  40b6e8:	ldr	x8, [x8]
  40b6ec:	ldrb	w10, [x8, #25]
  40b6f0:	mov	w11, #0xffffffff            	// #-1
  40b6f4:	add	w10, w11, w10, uxtb
  40b6f8:	mov	w11, w10
  40b6fc:	strb	w11, [x8, #25]
  40b700:	and	w10, w10, #0xff
  40b704:	cbnz	w10, 40b74c <wcrtomb@plt+0x8e3c>
  40b708:	ldur	x8, [x29, #-208]
  40b70c:	sub	x9, x29, #0xc8
  40b710:	ldr	w10, [x9, x8, lsl #2]
  40b714:	cmp	w10, #0x1
  40b718:	b.ne	40babc <wcrtomb@plt+0x91ac>  // b.any
  40b71c:	ldur	x8, [x29, #-208]
  40b720:	mov	x9, #0x8                   	// #8
  40b724:	mul	x8, x9, x8
  40b728:	sub	x9, x29, #0x98
  40b72c:	add	x8, x9, x8
  40b730:	ldr	x8, [x8]
  40b734:	ldrb	w10, [x8, #25]
  40b738:	add	w10, w10, #0x1
  40b73c:	mov	w11, w10
  40b740:	strb	w11, [x8, #25]
  40b744:	and	w10, w10, #0xff
  40b748:	cbz	w10, 40babc <wcrtomb@plt+0x91ac>
  40b74c:	ldur	x8, [x29, #-208]
  40b750:	mov	x9, #0x8                   	// #8
  40b754:	mul	x8, x9, x8
  40b758:	sub	x9, x29, #0x98
  40b75c:	add	x8, x9, x8
  40b760:	ldr	x8, [x8]
  40b764:	ldrb	w10, [x8, #25]
  40b768:	cmp	w10, #0x2
  40b76c:	str	w10, [sp, #12]
  40b770:	b.eq	40b8f0 <wcrtomb@plt+0x8fe0>  // b.none
  40b774:	b	40b778 <wcrtomb@plt+0x8e68>
  40b778:	ldr	w8, [sp, #12]
  40b77c:	cmp	w8, #0xfe
  40b780:	cset	w9, eq  // eq = none
  40b784:	eor	w9, w9, #0x1
  40b788:	tbnz	w9, #0, 40ba58 <wcrtomb@plt+0x9148>
  40b78c:	b	40b790 <wcrtomb@plt+0x8e80>
  40b790:	ldur	x8, [x29, #-208]
  40b794:	add	x8, x8, #0x1
  40b798:	sub	x9, x29, #0xc8
  40b79c:	ldr	w10, [x9, x8, lsl #2]
  40b7a0:	str	w10, [sp, #8]
  40b7a4:	cbz	w10, 40b7bc <wcrtomb@plt+0x8eac>
  40b7a8:	b	40b7ac <wcrtomb@plt+0x8e9c>
  40b7ac:	ldr	w8, [sp, #8]
  40b7b0:	cmp	w8, #0x1
  40b7b4:	b.eq	40b820 <wcrtomb@plt+0x8f10>  // b.none
  40b7b8:	b	40b8e8 <wcrtomb@plt+0x8fd8>
  40b7bc:	ldur	x8, [x29, #-208]
  40b7c0:	mov	x9, #0x8                   	// #8
  40b7c4:	mul	x8, x9, x8
  40b7c8:	sub	x9, x29, #0x98
  40b7cc:	add	x8, x9, x8
  40b7d0:	ldr	x8, [x8]
  40b7d4:	str	x8, [sp, #64]
  40b7d8:	ldr	x8, [sp, #64]
  40b7dc:	ldr	x8, [x8]
  40b7e0:	str	x8, [sp, #72]
  40b7e4:	ldr	x8, [sp, #72]
  40b7e8:	ldr	x8, [x8, #8]
  40b7ec:	str	x8, [sp, #48]
  40b7f0:	ldr	x8, [sp, #64]
  40b7f4:	ldr	x9, [sp, #72]
  40b7f8:	str	x8, [x9, #8]
  40b7fc:	ldr	x8, [sp, #48]
  40b800:	ldr	x9, [sp, #64]
  40b804:	str	x8, [x9]
  40b808:	ldr	x8, [sp, #64]
  40b80c:	mov	w10, #0x0                   	// #0
  40b810:	strb	w10, [x8, #25]
  40b814:	ldr	x8, [sp, #72]
  40b818:	strb	w10, [x8, #25]
  40b81c:	b	40b8ec <wcrtomb@plt+0x8fdc>
  40b820:	ldur	x8, [x29, #-208]
  40b824:	mov	x9, #0x8                   	// #8
  40b828:	mul	x8, x9, x8
  40b82c:	sub	x9, x29, #0x98
  40b830:	add	x8, x9, x8
  40b834:	ldr	x8, [x8]
  40b838:	str	x8, [sp, #64]
  40b83c:	ldr	x8, [sp, #64]
  40b840:	ldr	x8, [x8]
  40b844:	str	x8, [sp, #56]
  40b848:	ldr	x8, [sp, #56]
  40b84c:	ldr	x8, [x8, #8]
  40b850:	str	x8, [sp, #72]
  40b854:	ldr	x8, [sp, #72]
  40b858:	ldr	x8, [x8, #8]
  40b85c:	str	x8, [sp, #48]
  40b860:	ldr	x8, [sp, #72]
  40b864:	ldr	x8, [x8]
  40b868:	str	x8, [sp, #40]
  40b86c:	ldr	x8, [sp, #56]
  40b870:	ldr	x9, [sp, #72]
  40b874:	str	x8, [x9]
  40b878:	ldr	x8, [sp, #40]
  40b87c:	ldr	x9, [sp, #56]
  40b880:	str	x8, [x9, #8]
  40b884:	ldr	x8, [sp, #64]
  40b888:	ldr	x9, [sp, #72]
  40b88c:	str	x8, [x9, #8]
  40b890:	ldr	x8, [sp, #48]
  40b894:	ldr	x9, [sp, #64]
  40b898:	str	x8, [x9]
  40b89c:	ldr	x8, [sp, #72]
  40b8a0:	ldrb	w10, [x8, #25]
  40b8a4:	mov	w11, #0x1                   	// #1
  40b8a8:	mov	w12, #0xffffffff            	// #-1
  40b8ac:	mov	w13, wzr
  40b8b0:	cmp	w10, #0x1
  40b8b4:	csel	w10, w13, w12, ne  // ne = any
  40b8b8:	ldr	x8, [sp, #56]
  40b8bc:	strb	w10, [x8, #25]
  40b8c0:	ldr	x8, [sp, #72]
  40b8c4:	ldrb	w10, [x8, #25]
  40b8c8:	cmp	w10, #0xff
  40b8cc:	csel	w10, w13, w11, ne  // ne = any
  40b8d0:	ldr	x8, [sp, #64]
  40b8d4:	strb	w10, [x8, #25]
  40b8d8:	ldr	x8, [sp, #72]
  40b8dc:	mov	w10, #0x0                   	// #0
  40b8e0:	strb	w10, [x8, #25]
  40b8e4:	b	40b8ec <wcrtomb@plt+0x8fdc>
  40b8e8:	bl	402610 <abort@plt>
  40b8ec:	b	40ba5c <wcrtomb@plt+0x914c>
  40b8f0:	ldur	x8, [x29, #-208]
  40b8f4:	add	x8, x8, #0x1
  40b8f8:	sub	x9, x29, #0xc8
  40b8fc:	ldr	w10, [x9, x8, lsl #2]
  40b900:	str	w10, [sp, #4]
  40b904:	cbz	w10, 40b988 <wcrtomb@plt+0x9078>
  40b908:	b	40b90c <wcrtomb@plt+0x8ffc>
  40b90c:	ldr	w8, [sp, #4]
  40b910:	cmp	w8, #0x1
  40b914:	cset	w9, eq  // eq = none
  40b918:	eor	w9, w9, #0x1
  40b91c:	tbnz	w9, #0, 40ba50 <wcrtomb@plt+0x9140>
  40b920:	b	40b924 <wcrtomb@plt+0x9014>
  40b924:	ldur	x8, [x29, #-208]
  40b928:	mov	x9, #0x8                   	// #8
  40b92c:	mul	x8, x9, x8
  40b930:	sub	x9, x29, #0x98
  40b934:	add	x8, x9, x8
  40b938:	ldr	x8, [x8]
  40b93c:	str	x8, [sp, #56]
  40b940:	ldr	x8, [sp, #56]
  40b944:	ldr	x8, [x8, #8]
  40b948:	str	x8, [sp, #72]
  40b94c:	ldr	x8, [sp, #72]
  40b950:	ldr	x8, [x8]
  40b954:	str	x8, [sp, #40]
  40b958:	ldr	x8, [sp, #56]
  40b95c:	ldr	x9, [sp, #72]
  40b960:	str	x8, [x9]
  40b964:	ldr	x8, [sp, #40]
  40b968:	ldr	x9, [sp, #56]
  40b96c:	str	x8, [x9, #8]
  40b970:	ldr	x8, [sp, #56]
  40b974:	mov	w10, #0x0                   	// #0
  40b978:	strb	w10, [x8, #25]
  40b97c:	ldr	x8, [sp, #72]
  40b980:	strb	w10, [x8, #25]
  40b984:	b	40ba54 <wcrtomb@plt+0x9144>
  40b988:	ldur	x8, [x29, #-208]
  40b98c:	mov	x9, #0x8                   	// #8
  40b990:	mul	x8, x9, x8
  40b994:	sub	x9, x29, #0x98
  40b998:	add	x8, x9, x8
  40b99c:	ldr	x8, [x8]
  40b9a0:	str	x8, [sp, #56]
  40b9a4:	ldr	x8, [sp, #56]
  40b9a8:	ldr	x8, [x8, #8]
  40b9ac:	str	x8, [sp, #64]
  40b9b0:	ldr	x8, [sp, #64]
  40b9b4:	ldr	x8, [x8]
  40b9b8:	str	x8, [sp, #72]
  40b9bc:	ldr	x8, [sp, #72]
  40b9c0:	ldr	x8, [x8]
  40b9c4:	str	x8, [sp, #40]
  40b9c8:	ldr	x8, [sp, #72]
  40b9cc:	ldr	x8, [x8, #8]
  40b9d0:	str	x8, [sp, #48]
  40b9d4:	ldr	x8, [sp, #56]
  40b9d8:	ldr	x9, [sp, #72]
  40b9dc:	str	x8, [x9]
  40b9e0:	ldr	x8, [sp, #40]
  40b9e4:	ldr	x9, [sp, #56]
  40b9e8:	str	x8, [x9, #8]
  40b9ec:	ldr	x8, [sp, #64]
  40b9f0:	ldr	x9, [sp, #72]
  40b9f4:	str	x8, [x9, #8]
  40b9f8:	ldr	x8, [sp, #48]
  40b9fc:	ldr	x9, [sp, #64]
  40ba00:	str	x8, [x9]
  40ba04:	ldr	x8, [sp, #72]
  40ba08:	ldrb	w10, [x8, #25]
  40ba0c:	mov	w11, #0x1                   	// #1
  40ba10:	mov	w12, #0xffffffff            	// #-1
  40ba14:	mov	w13, wzr
  40ba18:	cmp	w10, #0x1
  40ba1c:	csel	w10, w13, w12, ne  // ne = any
  40ba20:	ldr	x8, [sp, #56]
  40ba24:	strb	w10, [x8, #25]
  40ba28:	ldr	x8, [sp, #72]
  40ba2c:	ldrb	w10, [x8, #25]
  40ba30:	cmp	w10, #0xff
  40ba34:	csel	w10, w13, w11, ne  // ne = any
  40ba38:	ldr	x8, [sp, #64]
  40ba3c:	strb	w10, [x8, #25]
  40ba40:	ldr	x8, [sp, #72]
  40ba44:	mov	w10, #0x0                   	// #0
  40ba48:	strb	w10, [x8, #25]
  40ba4c:	b	40ba54 <wcrtomb@plt+0x9144>
  40ba50:	bl	402610 <abort@plt>
  40ba54:	b	40ba5c <wcrtomb@plt+0x914c>
  40ba58:	bl	402610 <abort@plt>
  40ba5c:	ldur	x8, [x29, #-208]
  40ba60:	subs	x8, x8, #0x1
  40ba64:	sub	x9, x29, #0xc8
  40ba68:	ldr	w10, [x9, x8, lsl #2]
  40ba6c:	cbnz	w10, 40ba98 <wcrtomb@plt+0x9188>
  40ba70:	ldr	x8, [sp, #72]
  40ba74:	ldur	x9, [x29, #-208]
  40ba78:	subs	x9, x9, #0x1
  40ba7c:	mov	x10, #0x8                   	// #8
  40ba80:	mul	x9, x10, x9
  40ba84:	sub	x10, x29, #0x98
  40ba88:	add	x9, x10, x9
  40ba8c:	ldr	x9, [x9]
  40ba90:	str	x8, [x9]
  40ba94:	b	40babc <wcrtomb@plt+0x91ac>
  40ba98:	ldr	x8, [sp, #72]
  40ba9c:	ldur	x9, [x29, #-208]
  40baa0:	subs	x9, x9, #0x1
  40baa4:	mov	x10, #0x8                   	// #8
  40baa8:	mul	x9, x10, x9
  40baac:	sub	x10, x29, #0x98
  40bab0:	add	x9, x10, x9
  40bab4:	ldr	x9, [x9]
  40bab8:	str	x8, [x9, #8]
  40babc:	ldur	x8, [x29, #-56]
  40bac0:	ldr	x8, [x8, #16]
  40bac4:	stur	x8, [x29, #-32]
  40bac8:	b	40b12c <wcrtomb@plt+0x881c>
  40bacc:	ldur	x8, [x29, #-32]
  40bad0:	ldr	x8, [x8]
  40bad4:	cbnz	x8, 40bafc <wcrtomb@plt+0x91ec>
  40bad8:	ldur	x8, [x29, #-8]
  40badc:	ldr	x8, [x8, #88]
  40bae0:	str	x8, [sp, #32]
  40bae4:	ldr	x8, [sp, #32]
  40bae8:	mov	x9, #0x2                   	// #2
  40baec:	mul	x8, x9, x8
  40baf0:	add	x8, x8, #0x1
  40baf4:	ldur	x9, [x29, #-32]
  40baf8:	str	x8, [x9]
  40bafc:	ldur	x8, [x29, #-8]
  40bb00:	ldr	x9, [x8, #88]
  40bb04:	add	x9, x9, #0x1
  40bb08:	str	x9, [x8, #88]
  40bb0c:	ldur	x8, [x29, #-32]
  40bb10:	ldr	x8, [x8, #40]
  40bb14:	ldur	x9, [x29, #-8]
  40bb18:	ldr	x9, [x9, #104]
  40bb1c:	cmp	x8, x9
  40bb20:	b.ge	40bb34 <wcrtomb@plt+0x9224>  // b.tcont
  40bb24:	ldur	x8, [x29, #-32]
  40bb28:	ldr	x8, [x8, #40]
  40bb2c:	ldur	x9, [x29, #-8]
  40bb30:	str	x8, [x9, #104]
  40bb34:	ldur	x8, [x29, #-32]
  40bb38:	ldr	x8, [x8, #40]
  40bb3c:	ldur	x9, [x29, #-8]
  40bb40:	ldr	x9, [x9, #112]
  40bb44:	cmp	x8, x9
  40bb48:	b.le	40bb5c <wcrtomb@plt+0x924c>
  40bb4c:	ldur	x8, [x29, #-32]
  40bb50:	ldr	x8, [x8, #40]
  40bb54:	ldur	x9, [x29, #-8]
  40bb58:	str	x8, [x9, #112]
  40bb5c:	ldr	x28, [sp, #448]
  40bb60:	ldp	x29, x30, [sp, #432]
  40bb64:	add	sp, sp, #0x1d0
  40bb68:	ret
  40bb6c:	sub	sp, sp, #0x50
  40bb70:	stp	x29, x30, [sp, #64]
  40bb74:	add	x29, sp, #0x40
  40bb78:	stur	x0, [x29, #-8]
  40bb7c:	stur	x1, [x29, #-16]
  40bb80:	stur	x2, [x29, #-24]
  40bb84:	str	x3, [sp, #32]
  40bb88:	and	w8, w4, #0x1
  40bb8c:	strb	w8, [sp, #31]
  40bb90:	ldur	x9, [x29, #-8]
  40bb94:	ldr	x9, [x9, #2440]
  40bb98:	cbz	x9, 40bbb4 <wcrtomb@plt+0x92a4>
  40bb9c:	ldur	x0, [x29, #-8]
  40bba0:	ldur	x1, [x29, #-16]
  40bba4:	ldur	x2, [x29, #-24]
  40bba8:	bl	40cc84 <wcrtomb@plt+0xa374>
  40bbac:	str	x0, [sp, #8]
  40bbb0:	b	40bbc8 <wcrtomb@plt+0x92b8>
  40bbb4:	ldur	x0, [x29, #-8]
  40bbb8:	ldur	x1, [x29, #-16]
  40bbbc:	ldur	x2, [x29, #-24]
  40bbc0:	bl	40cc84 <wcrtomb@plt+0xa374>
  40bbc4:	str	x0, [sp, #8]
  40bbc8:	ldr	x8, [sp, #8]
  40bbcc:	str	x8, [sp, #16]
  40bbd0:	ldr	x8, [sp, #16]
  40bbd4:	mov	x9, xzr
  40bbd8:	cmp	x9, x8
  40bbdc:	cset	w10, gt
  40bbe0:	tbnz	w10, #0, 40bc08 <wcrtomb@plt+0x92f8>
  40bbe4:	ldr	x8, [sp, #32]
  40bbe8:	str	xzr, [x8]
  40bbec:	ldr	x8, [sp, #16]
  40bbf0:	ldr	x9, [sp, #32]
  40bbf4:	str	x8, [x9, #8]
  40bbf8:	ldur	x8, [x29, #-8]
  40bbfc:	ldr	x8, [x8, #104]
  40bc00:	ldr	x9, [sp, #32]
  40bc04:	str	x8, [x9, #16]
  40bc08:	ldr	x0, [sp, #16]
  40bc0c:	ldp	x29, x30, [sp, #64]
  40bc10:	add	sp, sp, #0x50
  40bc14:	ret
  40bc18:	sub	sp, sp, #0x10
  40bc1c:	str	x0, [sp, #8]
  40bc20:	ldr	x8, [sp, #8]
  40bc24:	ldr	x0, [x8, #88]
  40bc28:	add	sp, sp, #0x10
  40bc2c:	ret
  40bc30:	stp	x29, x30, [sp, #-32]!
  40bc34:	str	x28, [sp, #16]
  40bc38:	mov	x29, sp
  40bc3c:	sub	sp, sp, #0xa80
  40bc40:	stur	x0, [x29, #-8]
  40bc44:	ldur	x8, [x29, #-8]
  40bc48:	ldr	x8, [x8, #2440]
  40bc4c:	stur	x8, [x29, #-16]
  40bc50:	ldur	x8, [x29, #-16]
  40bc54:	cbz	x8, 40bc64 <wcrtomb@plt+0x9354>
  40bc58:	add	x8, sp, #0x968
  40bc5c:	str	x8, [sp, #48]
  40bc60:	b	40bc70 <wcrtomb@plt+0x9360>
  40bc64:	ldur	x8, [x29, #-8]
  40bc68:	add	x8, x8, #0x78
  40bc6c:	str	x8, [sp, #48]
  40bc70:	ldr	x8, [sp, #48]
  40bc74:	str	x8, [sp, #2400]
  40bc78:	ldur	x8, [x29, #-8]
  40bc7c:	ldr	x8, [x8, #88]
  40bc80:	cmp	x8, #0x1
  40bc84:	cset	w9, eq  // eq = none
  40bc88:	and	w9, w9, #0x1
  40bc8c:	strb	w9, [sp, #2383]
  40bc90:	ldrb	w9, [sp, #2383]
  40bc94:	tbnz	w9, #0, 40bc9c <wcrtomb@plt+0x938c>
  40bc98:	b	40bf28 <wcrtomb@plt+0x9618>
  40bc9c:	ldur	x8, [x29, #-8]
  40bca0:	ldr	x8, [x8, #96]
  40bca4:	str	x8, [sp, #2384]
  40bca8:	str	x8, [sp, #2392]
  40bcac:	ldr	x8, [sp, #2392]
  40bcb0:	cbz	x8, 40bcd4 <wcrtomb@plt+0x93c4>
  40bcb4:	ldr	x8, [sp, #2392]
  40bcb8:	ldr	x0, [x8, #8]
  40bcbc:	add	x1, sp, #0x950
  40bcc0:	bl	40c728 <wcrtomb@plt+0x9e18>
  40bcc4:	ldr	x8, [sp, #2392]
  40bcc8:	ldr	x8, [x8, #24]
  40bccc:	str	x8, [sp, #2392]
  40bcd0:	b	40bcac <wcrtomb@plt+0x939c>
  40bcd4:	ldur	x8, [x29, #-8]
  40bcd8:	str	x8, [sp, #2360]
  40bcdc:	ldr	x8, [sp, #2360]
  40bce0:	str	x8, [sp, #2352]
  40bce4:	ldur	x8, [x29, #-8]
  40bce8:	ldr	x8, [x8, #104]
  40bcec:	str	x8, [sp, #2344]
  40bcf0:	ldr	x8, [sp, #2352]
  40bcf4:	str	x8, [sp, #2336]
  40bcf8:	ldr	x8, [sp, #2336]
  40bcfc:	ldr	x8, [x8, #32]
  40bd00:	ldr	x9, [sp, #2336]
  40bd04:	ldr	x9, [x9, #24]
  40bd08:	subs	x8, x8, x9
  40bd0c:	str	x8, [sp, #2328]
  40bd10:	ldr	x8, [sp, #2328]
  40bd14:	ldr	x9, [sp, #2344]
  40bd18:	cmp	x8, x9
  40bd1c:	b.cs	40bd2c <wcrtomb@plt+0x941c>  // b.hs, b.nlast
  40bd20:	ldr	x0, [sp, #2352]
  40bd24:	ldr	x1, [sp, #2344]
  40bd28:	bl	427494 <_obstack_newchunk@@Base>
  40bd2c:	ldr	x8, [sp, #2344]
  40bd30:	ldr	x9, [sp, #2352]
  40bd34:	ldr	x10, [x9, #24]
  40bd38:	add	x8, x10, x8
  40bd3c:	str	x8, [x9, #24]
  40bd40:	ldr	x8, [sp, #2360]
  40bd44:	str	x8, [sp, #2312]
  40bd48:	ldr	x8, [sp, #2312]
  40bd4c:	ldr	x8, [x8, #16]
  40bd50:	str	x8, [sp, #2304]
  40bd54:	ldr	x8, [sp, #2312]
  40bd58:	ldr	x8, [x8, #24]
  40bd5c:	ldr	x9, [sp, #2304]
  40bd60:	cmp	x8, x9
  40bd64:	b.ne	40bd7c <wcrtomb@plt+0x946c>  // b.any
  40bd68:	ldr	x8, [sp, #2312]
  40bd6c:	ldrb	w9, [x8, #80]
  40bd70:	and	w9, w9, #0xfffffffd
  40bd74:	orr	w9, w9, #0x2
  40bd78:	strb	w9, [x8, #80]
  40bd7c:	ldr	x8, [sp, #2312]
  40bd80:	ldr	x8, [x8, #24]
  40bd84:	mov	x9, xzr
  40bd88:	subs	x8, x8, #0x0
  40bd8c:	ldr	x10, [sp, #2312]
  40bd90:	ldr	x10, [x10, #48]
  40bd94:	add	x8, x8, x10
  40bd98:	ldr	x10, [sp, #2312]
  40bd9c:	ldr	x10, [x10, #48]
  40bda0:	bic	x8, x8, x10
  40bda4:	add	x8, x9, x8
  40bda8:	ldr	x9, [sp, #2312]
  40bdac:	str	x8, [x9, #24]
  40bdb0:	ldr	x8, [sp, #2312]
  40bdb4:	ldr	x8, [x8, #24]
  40bdb8:	ldr	x9, [sp, #2312]
  40bdbc:	ldr	x9, [x9, #8]
  40bdc0:	subs	x8, x8, x9
  40bdc4:	ldr	x9, [sp, #2312]
  40bdc8:	ldr	x9, [x9, #32]
  40bdcc:	ldr	x10, [sp, #2312]
  40bdd0:	ldr	x10, [x10, #8]
  40bdd4:	subs	x9, x9, x10
  40bdd8:	cmp	x8, x9
  40bddc:	b.ls	40bdf0 <wcrtomb@plt+0x94e0>  // b.plast
  40bde0:	ldr	x8, [sp, #2312]
  40bde4:	ldr	x8, [x8, #32]
  40bde8:	ldr	x9, [sp, #2312]
  40bdec:	str	x8, [x9, #24]
  40bdf0:	ldr	x8, [sp, #2312]
  40bdf4:	ldr	x8, [x8, #24]
  40bdf8:	ldr	x9, [sp, #2312]
  40bdfc:	str	x8, [x9, #16]
  40be00:	ldr	x8, [sp, #2304]
  40be04:	str	x8, [sp, #2296]
  40be08:	ldr	x8, [sp, #2296]
  40be0c:	str	x8, [sp, #2320]
  40be10:	ldr	x8, [sp, #2320]
  40be14:	ldur	x9, [x29, #-8]
  40be18:	str	x8, [x9, #2424]
  40be1c:	stur	xzr, [x29, #-24]
  40be20:	ldur	x8, [x29, #-8]
  40be24:	ldr	x8, [x8, #96]
  40be28:	str	x8, [sp, #2392]
  40be2c:	ldur	x8, [x29, #-24]
  40be30:	ldur	x9, [x29, #-8]
  40be34:	ldr	x9, [x9, #104]
  40be38:	cmp	x8, x9
  40be3c:	b.ge	40be7c <wcrtomb@plt+0x956c>  // b.tcont
  40be40:	ldr	x8, [sp, #2392]
  40be44:	ldr	x8, [x8, #8]
  40be48:	ldrb	w9, [x8, #24]
  40be4c:	ldur	x8, [x29, #-8]
  40be50:	ldr	x8, [x8, #2424]
  40be54:	ldur	x10, [x29, #-24]
  40be58:	add	x8, x8, x10
  40be5c:	strb	w9, [x8]
  40be60:	ldr	x8, [sp, #2392]
  40be64:	ldr	x8, [x8, #24]
  40be68:	str	x8, [sp, #2392]
  40be6c:	ldur	x8, [x29, #-24]
  40be70:	add	x8, x8, #0x1
  40be74:	stur	x8, [x29, #-24]
  40be78:	b	40be2c <wcrtomb@plt+0x951c>
  40be7c:	ldur	x8, [x29, #-8]
  40be80:	ldr	x0, [x8, #2440]
  40be84:	bl	40adb4 <wcrtomb@plt+0x84a4>
  40be88:	str	x0, [sp, #2368]
  40be8c:	ldr	x8, [sp, #2368]
  40be90:	adrp	x9, 40b000 <wcrtomb@plt+0x86f0>
  40be94:	add	x9, x9, #0xb6c
  40be98:	str	x9, [x8, #2464]
  40be9c:	ldr	x0, [sp, #2368]
  40bea0:	ldur	x8, [x29, #-8]
  40bea4:	ldr	x1, [x8, #2424]
  40bea8:	ldur	x8, [x29, #-8]
  40beac:	ldr	x2, [x8, #104]
  40beb0:	bl	40b0a4 <wcrtomb@plt+0x8794>
  40beb4:	ldur	x8, [x29, #-8]
  40beb8:	str	x8, [sp, #2288]
  40bebc:	mov	x8, xzr
  40bec0:	str	x8, [sp, #2280]
  40bec4:	ldr	x8, [sp, #2280]
  40bec8:	ldr	x9, [sp, #2288]
  40becc:	ldr	x9, [x9, #8]
  40bed0:	cmp	x8, x9
  40bed4:	b.ls	40bf04 <wcrtomb@plt+0x95f4>  // b.plast
  40bed8:	ldr	x8, [sp, #2280]
  40bedc:	ldr	x9, [sp, #2288]
  40bee0:	ldr	x9, [x9, #32]
  40bee4:	cmp	x8, x9
  40bee8:	b.cs	40bf04 <wcrtomb@plt+0x95f4>  // b.hs, b.nlast
  40beec:	ldr	x8, [sp, #2280]
  40bef0:	ldr	x9, [sp, #2288]
  40bef4:	str	x8, [x9, #16]
  40bef8:	ldr	x9, [sp, #2288]
  40befc:	str	x8, [x9, #24]
  40bf00:	b	40bf10 <wcrtomb@plt+0x9600>
  40bf04:	ldr	x0, [sp, #2288]
  40bf08:	ldr	x1, [sp, #2280]
  40bf0c:	bl	427820 <_obstack_free@@Base>
  40bf10:	ldur	x0, [x29, #-8]
  40bf14:	ldr	x1, [sp, #2368]
  40bf18:	mov	x2, #0x9a8                 	// #2472
  40bf1c:	bl	402290 <memcpy@plt>
  40bf20:	ldr	x0, [sp, #2368]
  40bf24:	bl	4026c0 <free@plt>
  40bf28:	ldr	x0, [sp, #2400]
  40bf2c:	ldur	x8, [x29, #-8]
  40bf30:	ldr	x8, [x8, #104]
  40bf34:	cmp	x8, #0xff
  40bf38:	str	x0, [sp, #40]
  40bf3c:	b.ge	40bf50 <wcrtomb@plt+0x9640>  // b.tcont
  40bf40:	ldur	x8, [x29, #-8]
  40bf44:	ldr	x8, [x8, #104]
  40bf48:	str	x8, [sp, #32]
  40bf4c:	b	40bf58 <wcrtomb@plt+0x9648>
  40bf50:	mov	x8, #0xff                  	// #255
  40bf54:	str	x8, [sp, #32]
  40bf58:	ldr	x8, [sp, #32]
  40bf5c:	ldr	x0, [sp, #40]
  40bf60:	mov	w1, w8
  40bf64:	mov	x2, #0x100                 	// #256
  40bf68:	bl	402520 <memset@plt>
  40bf6c:	ldur	x9, [x29, #-8]
  40bf70:	ldr	x9, [x9, #96]
  40bf74:	str	x9, [sp, #2384]
  40bf78:	str	x9, [sp, #2392]
  40bf7c:	ldr	x8, [sp, #2392]
  40bf80:	cbz	x8, 40c0d4 <wcrtomb@plt+0x97c4>
  40bf84:	ldr	x8, [sp, #2392]
  40bf88:	ldr	x0, [x8, #8]
  40bf8c:	add	x1, sp, #0x950
  40bf90:	bl	40c728 <wcrtomb@plt+0x9e18>
  40bf94:	ldr	x8, [sp, #2392]
  40bf98:	ldr	x0, [x8, #8]
  40bf9c:	ldr	x8, [sp, #2392]
  40bfa0:	ldr	x1, [x8, #40]
  40bfa4:	ldr	x2, [sp, #2400]
  40bfa8:	bl	40c790 <wcrtomb@plt+0x9e80>
  40bfac:	ldr	x8, [sp, #2392]
  40bfb0:	ldr	x0, [x8, #8]
  40bfb4:	ldr	x8, [sp, #2392]
  40bfb8:	ldr	x1, [x8, #32]
  40bfbc:	ldur	x8, [x29, #-8]
  40bfc0:	ldr	x2, [x8, #96]
  40bfc4:	ldrb	w9, [sp, #2383]
  40bfc8:	and	w3, w9, #0x1
  40bfcc:	bl	40c828 <wcrtomb@plt+0x9f18>
  40bfd0:	ldrb	w9, [sp, #2383]
  40bfd4:	tbnz	w9, #0, 40bfdc <wcrtomb@plt+0x96cc>
  40bfd8:	b	40c0c4 <wcrtomb@plt+0x97b4>
  40bfdc:	ldur	x8, [x29, #-8]
  40bfe0:	ldr	x8, [x8, #104]
  40bfe4:	ldr	x9, [sp, #2392]
  40bfe8:	str	x8, [x9, #48]
  40bfec:	ldur	x8, [x29, #-8]
  40bff0:	ldr	x8, [x8, #104]
  40bff4:	ldr	x9, [sp, #2392]
  40bff8:	str	x8, [x9, #56]
  40bffc:	ldr	x8, [sp, #2392]
  40c000:	ldr	x8, [x8, #32]
  40c004:	str	x8, [sp, #2272]
  40c008:	ldr	x8, [sp, #2272]
  40c00c:	cbz	x8, 40c0c4 <wcrtomb@plt+0x97b4>
  40c010:	ldr	x8, [sp, #2272]
  40c014:	ldr	x0, [x8, #8]
  40c018:	ldr	x8, [sp, #2392]
  40c01c:	ldr	x1, [x8, #8]
  40c020:	bl	40c994 <wcrtomb@plt+0xa084>
  40c024:	tbnz	w0, #0, 40c068 <wcrtomb@plt+0x9758>
  40c028:	ldr	x8, [sp, #2392]
  40c02c:	ldr	x8, [x8, #40]
  40c030:	ldr	x9, [sp, #2272]
  40c034:	ldr	x9, [x9, #40]
  40c038:	subs	x8, x8, x9
  40c03c:	ldr	x9, [sp, #2272]
  40c040:	ldr	x9, [x9, #48]
  40c044:	cmp	x8, x9
  40c048:	b.ge	40c068 <wcrtomb@plt+0x9758>  // b.tcont
  40c04c:	ldr	x8, [sp, #2392]
  40c050:	ldr	x8, [x8, #40]
  40c054:	ldr	x9, [sp, #2272]
  40c058:	ldr	x9, [x9, #40]
  40c05c:	subs	x8, x8, x9
  40c060:	ldr	x9, [sp, #2272]
  40c064:	str	x8, [x9, #48]
  40c068:	ldr	x8, [sp, #2392]
  40c06c:	ldr	x8, [x8]
  40c070:	cbz	x8, 40c0b4 <wcrtomb@plt+0x97a4>
  40c074:	ldr	x8, [sp, #2272]
  40c078:	ldr	x8, [x8, #56]
  40c07c:	ldr	x9, [sp, #2392]
  40c080:	ldr	x9, [x9, #40]
  40c084:	ldr	x10, [sp, #2272]
  40c088:	ldr	x10, [x10, #40]
  40c08c:	subs	x9, x9, x10
  40c090:	cmp	x8, x9
  40c094:	b.le	40c0b4 <wcrtomb@plt+0x97a4>
  40c098:	ldr	x8, [sp, #2392]
  40c09c:	ldr	x8, [x8, #40]
  40c0a0:	ldr	x9, [sp, #2272]
  40c0a4:	ldr	x9, [x9, #40]
  40c0a8:	subs	x8, x8, x9
  40c0ac:	ldr	x9, [sp, #2272]
  40c0b0:	str	x8, [x9, #56]
  40c0b4:	ldr	x8, [sp, #2272]
  40c0b8:	ldr	x8, [x8, #32]
  40c0bc:	str	x8, [sp, #2272]
  40c0c0:	b	40c008 <wcrtomb@plt+0x96f8>
  40c0c4:	ldr	x8, [sp, #2392]
  40c0c8:	ldr	x8, [x8, #24]
  40c0cc:	str	x8, [sp, #2392]
  40c0d0:	b	40bf7c <wcrtomb@plt+0x966c>
  40c0d4:	ldrb	w8, [sp, #2383]
  40c0d8:	tbnz	w8, #0, 40c0e0 <wcrtomb@plt+0x97d0>
  40c0dc:	b	40c160 <wcrtomb@plt+0x9850>
  40c0e0:	ldur	x8, [x29, #-8]
  40c0e4:	ldr	x8, [x8, #96]
  40c0e8:	ldr	x8, [x8, #24]
  40c0ec:	str	x8, [sp, #2392]
  40c0f0:	ldr	x8, [sp, #2392]
  40c0f4:	cbz	x8, 40c160 <wcrtomb@plt+0x9850>
  40c0f8:	ldr	x8, [sp, #2392]
  40c0fc:	ldr	x8, [x8, #56]
  40c100:	ldr	x9, [sp, #2392]
  40c104:	ldr	x9, [x9, #16]
  40c108:	ldr	x9, [x9, #56]
  40c10c:	cmp	x8, x9
  40c110:	b.le	40c128 <wcrtomb@plt+0x9818>
  40c114:	ldr	x8, [sp, #2392]
  40c118:	ldr	x8, [x8, #16]
  40c11c:	ldr	x8, [x8, #56]
  40c120:	ldr	x9, [sp, #2392]
  40c124:	str	x8, [x9, #56]
  40c128:	ldr	x8, [sp, #2392]
  40c12c:	ldr	x8, [x8, #48]
  40c130:	ldr	x9, [sp, #2392]
  40c134:	ldr	x9, [x9, #56]
  40c138:	cmp	x8, x9
  40c13c:	b.le	40c150 <wcrtomb@plt+0x9840>
  40c140:	ldr	x8, [sp, #2392]
  40c144:	ldr	x8, [x8, #56]
  40c148:	ldr	x9, [sp, #2392]
  40c14c:	str	x8, [x9, #48]
  40c150:	ldr	x8, [sp, #2392]
  40c154:	ldr	x8, [x8, #24]
  40c158:	str	x8, [sp, #2392]
  40c15c:	b	40c0f0 <wcrtomb@plt+0x97e0>
  40c160:	ldur	x8, [x29, #-16]
  40c164:	cbz	x8, 40c174 <wcrtomb@plt+0x9864>
  40c168:	add	x8, sp, #0xe0
  40c16c:	str	x8, [sp, #24]
  40c170:	b	40c180 <wcrtomb@plt+0x9870>
  40c174:	ldur	x8, [x29, #-8]
  40c178:	add	x8, x8, #0x178
  40c17c:	str	x8, [sp, #24]
  40c180:	ldr	x8, [sp, #24]
  40c184:	str	x8, [sp, #216]
  40c188:	ldr	x0, [sp, #216]
  40c18c:	mov	w9, wzr
  40c190:	mov	w1, w9
  40c194:	mov	x2, #0x800                 	// #2048
  40c198:	bl	402520 <memset@plt>
  40c19c:	ldur	x8, [x29, #-8]
  40c1a0:	ldr	x8, [x8, #96]
  40c1a4:	ldr	x0, [x8, #8]
  40c1a8:	ldr	x1, [sp, #216]
  40c1ac:	bl	40caac <wcrtomb@plt+0xa19c>
  40c1b0:	mov	w9, #0xfffffffe            	// #-2
  40c1b4:	str	w9, [sp, #212]
  40c1b8:	mov	w9, #0xffffffff            	// #-1
  40c1bc:	str	w9, [sp, #208]
  40c1c0:	stur	xzr, [x29, #-24]
  40c1c4:	ldur	x8, [x29, #-24]
  40c1c8:	cmp	x8, #0x100
  40c1cc:	b.ge	40c2f0 <wcrtomb@plt+0x99e0>  // b.tcont
  40c1d0:	ldur	x8, [x29, #-24]
  40c1d4:	str	w8, [sp, #204]
  40c1d8:	ldur	x9, [x29, #-16]
  40c1dc:	cbz	x9, 40c228 <wcrtomb@plt+0x9918>
  40c1e0:	ldur	x8, [x29, #-16]
  40c1e4:	ldur	x9, [x29, #-24]
  40c1e8:	ldrb	w0, [x8, x9]
  40c1ec:	bl	40cb28 <wcrtomb@plt+0xa218>
  40c1f0:	and	w10, w0, #0xff
  40c1f4:	str	w10, [sp, #204]
  40c1f8:	ldr	x8, [sp, #216]
  40c1fc:	ldrsw	x9, [sp, #204]
  40c200:	mov	x11, #0x8                   	// #8
  40c204:	mul	x9, x11, x9
  40c208:	add	x8, x8, x9
  40c20c:	ldr	x8, [x8]
  40c210:	ldur	x9, [x29, #-8]
  40c214:	add	x9, x9, #0x178
  40c218:	ldur	x12, [x29, #-24]
  40c21c:	mul	x11, x11, x12
  40c220:	add	x9, x9, x11
  40c224:	str	x8, [x9]
  40c228:	ldur	x8, [x29, #-8]
  40c22c:	add	x8, x8, #0x178
  40c230:	ldur	x9, [x29, #-24]
  40c234:	mov	x10, #0x8                   	// #8
  40c238:	mul	x9, x10, x9
  40c23c:	add	x8, x8, x9
  40c240:	ldr	x8, [x8]
  40c244:	cbz	x8, 40c2e0 <wcrtomb@plt+0x99d0>
  40c248:	ldr	w8, [sp, #212]
  40c24c:	mov	w9, #0xffffffff            	// #-1
  40c250:	cmp	w8, w9
  40c254:	b.ge	40c26c <wcrtomb@plt+0x995c>  // b.tcont
  40c258:	ldr	w8, [sp, #204]
  40c25c:	str	w8, [sp, #212]
  40c260:	ldur	x9, [x29, #-24]
  40c264:	str	w9, [sp, #208]
  40c268:	b	40c2e0 <wcrtomb@plt+0x99d0>
  40c26c:	ldr	w8, [sp, #212]
  40c270:	ldr	w9, [sp, #204]
  40c274:	cmp	w8, w9
  40c278:	b.ne	40c2ac <wcrtomb@plt+0x999c>  // b.any
  40c27c:	ldr	w8, [sp, #208]
  40c280:	ldr	w9, [sp, #204]
  40c284:	cmp	w8, w9
  40c288:	b.ne	40c298 <wcrtomb@plt+0x9988>  // b.any
  40c28c:	ldur	x8, [x29, #-24]
  40c290:	str	x8, [sp, #16]
  40c294:	b	40c2a0 <wcrtomb@plt+0x9990>
  40c298:	mov	x8, #0xffffffffffffffff    	// #-1
  40c29c:	str	x8, [sp, #16]
  40c2a0:	ldr	x8, [sp, #16]
  40c2a4:	str	w8, [sp, #208]
  40c2a8:	b	40c2e0 <wcrtomb@plt+0x99d0>
  40c2ac:	ldur	x8, [x29, #-24]
  40c2b0:	ldrsw	x9, [sp, #204]
  40c2b4:	cmp	x8, x9
  40c2b8:	b.ne	40c2d8 <wcrtomb@plt+0x99c8>  // b.any
  40c2bc:	ldr	w8, [sp, #212]
  40c2c0:	ldr	w9, [sp, #208]
  40c2c4:	cmp	w8, w9
  40c2c8:	b.ne	40c2d8 <wcrtomb@plt+0x99c8>  // b.any
  40c2cc:	ldur	x8, [x29, #-24]
  40c2d0:	str	w8, [sp, #208]
  40c2d4:	b	40c2e0 <wcrtomb@plt+0x99d0>
  40c2d8:	mov	w8, #0xffffffff            	// #-1
  40c2dc:	str	w8, [sp, #212]
  40c2e0:	ldur	x8, [x29, #-24]
  40c2e4:	add	x8, x8, #0x1
  40c2e8:	stur	x8, [x29, #-24]
  40c2ec:	b	40c1c4 <wcrtomb@plt+0x98b4>
  40c2f0:	ldr	w8, [sp, #212]
  40c2f4:	ldur	x9, [x29, #-8]
  40c2f8:	str	w8, [x9, #2448]
  40c2fc:	ldr	w8, [sp, #208]
  40c300:	ldur	x9, [x29, #-8]
  40c304:	str	w8, [x9, #2452]
  40c308:	ldrb	w8, [sp, #2383]
  40c30c:	tbnz	w8, #0, 40c314 <wcrtomb@plt+0x9a04>
  40c310:	b	40c6b0 <wcrtomb@plt+0x9da0>
  40c314:	ldur	x8, [x29, #-8]
  40c318:	str	x8, [sp, #192]
  40c31c:	ldr	x8, [sp, #192]
  40c320:	str	x8, [sp, #184]
  40c324:	ldur	x8, [x29, #-8]
  40c328:	ldr	x8, [x8, #104]
  40c32c:	str	x8, [sp, #176]
  40c330:	ldr	x8, [sp, #184]
  40c334:	str	x8, [sp, #168]
  40c338:	ldr	x8, [sp, #168]
  40c33c:	ldr	x8, [x8, #32]
  40c340:	ldr	x9, [sp, #168]
  40c344:	ldr	x9, [x9, #24]
  40c348:	subs	x8, x8, x9
  40c34c:	str	x8, [sp, #160]
  40c350:	ldr	x8, [sp, #160]
  40c354:	ldr	x9, [sp, #176]
  40c358:	cmp	x8, x9
  40c35c:	b.cs	40c36c <wcrtomb@plt+0x9a5c>  // b.hs, b.nlast
  40c360:	ldr	x0, [sp, #184]
  40c364:	ldr	x1, [sp, #176]
  40c368:	bl	427494 <_obstack_newchunk@@Base>
  40c36c:	ldr	x8, [sp, #176]
  40c370:	ldr	x9, [sp, #184]
  40c374:	ldr	x10, [x9, #24]
  40c378:	add	x8, x10, x8
  40c37c:	str	x8, [x9, #24]
  40c380:	ldr	x8, [sp, #192]
  40c384:	str	x8, [sp, #144]
  40c388:	ldr	x8, [sp, #144]
  40c38c:	ldr	x8, [x8, #16]
  40c390:	str	x8, [sp, #136]
  40c394:	ldr	x8, [sp, #144]
  40c398:	ldr	x8, [x8, #24]
  40c39c:	ldr	x9, [sp, #136]
  40c3a0:	cmp	x8, x9
  40c3a4:	b.ne	40c3bc <wcrtomb@plt+0x9aac>  // b.any
  40c3a8:	ldr	x8, [sp, #144]
  40c3ac:	ldrb	w9, [x8, #80]
  40c3b0:	and	w9, w9, #0xfffffffd
  40c3b4:	orr	w9, w9, #0x2
  40c3b8:	strb	w9, [x8, #80]
  40c3bc:	ldr	x8, [sp, #144]
  40c3c0:	ldr	x8, [x8, #24]
  40c3c4:	mov	x9, xzr
  40c3c8:	subs	x8, x8, #0x0
  40c3cc:	ldr	x10, [sp, #144]
  40c3d0:	ldr	x10, [x10, #48]
  40c3d4:	add	x8, x8, x10
  40c3d8:	ldr	x10, [sp, #144]
  40c3dc:	ldr	x10, [x10, #48]
  40c3e0:	bic	x8, x8, x10
  40c3e4:	add	x8, x9, x8
  40c3e8:	ldr	x9, [sp, #144]
  40c3ec:	str	x8, [x9, #24]
  40c3f0:	ldr	x8, [sp, #144]
  40c3f4:	ldr	x8, [x8, #24]
  40c3f8:	ldr	x9, [sp, #144]
  40c3fc:	ldr	x9, [x9, #8]
  40c400:	subs	x8, x8, x9
  40c404:	ldr	x9, [sp, #144]
  40c408:	ldr	x9, [x9, #32]
  40c40c:	ldr	x10, [sp, #144]
  40c410:	ldr	x10, [x10, #8]
  40c414:	subs	x9, x9, x10
  40c418:	cmp	x8, x9
  40c41c:	b.ls	40c430 <wcrtomb@plt+0x9b20>  // b.plast
  40c420:	ldr	x8, [sp, #144]
  40c424:	ldr	x8, [x8, #32]
  40c428:	ldr	x9, [sp, #144]
  40c42c:	str	x8, [x9, #24]
  40c430:	ldr	x8, [sp, #144]
  40c434:	ldr	x8, [x8, #24]
  40c438:	ldr	x9, [sp, #144]
  40c43c:	str	x8, [x9, #16]
  40c440:	ldr	x8, [sp, #136]
  40c444:	str	x8, [sp, #128]
  40c448:	ldr	x8, [sp, #128]
  40c44c:	str	x8, [sp, #152]
  40c450:	ldr	x8, [sp, #152]
  40c454:	ldur	x9, [x29, #-8]
  40c458:	str	x8, [x9, #2424]
  40c45c:	ldur	x8, [x29, #-8]
  40c460:	ldr	x8, [x8, #104]
  40c464:	subs	x8, x8, #0x1
  40c468:	stur	x8, [x29, #-24]
  40c46c:	ldur	x8, [x29, #-8]
  40c470:	ldr	x8, [x8, #96]
  40c474:	str	x8, [sp, #2392]
  40c478:	ldur	x8, [x29, #-24]
  40c47c:	cmp	x8, #0x0
  40c480:	cset	w9, lt  // lt = tstop
  40c484:	tbnz	w9, #0, 40c4c4 <wcrtomb@plt+0x9bb4>
  40c488:	ldr	x8, [sp, #2392]
  40c48c:	ldr	x8, [x8, #8]
  40c490:	ldrb	w9, [x8, #24]
  40c494:	ldur	x8, [x29, #-8]
  40c498:	ldr	x8, [x8, #2424]
  40c49c:	ldur	x10, [x29, #-24]
  40c4a0:	add	x8, x8, x10
  40c4a4:	strb	w9, [x8]
  40c4a8:	ldr	x8, [sp, #2392]
  40c4ac:	ldr	x8, [x8, #24]
  40c4b0:	str	x8, [sp, #2392]
  40c4b4:	ldur	x8, [x29, #-24]
  40c4b8:	subs	x8, x8, #0x1
  40c4bc:	stur	x8, [x29, #-24]
  40c4c0:	b	40c478 <wcrtomb@plt+0x9b68>
  40c4c4:	ldur	x8, [x29, #-8]
  40c4c8:	ldr	x8, [x8, #104]
  40c4cc:	cmp	x8, #0x1
  40c4d0:	b.le	40c6b0 <wcrtomb@plt+0x9da0>
  40c4d4:	ldur	x8, [x29, #-8]
  40c4d8:	str	x8, [sp, #120]
  40c4dc:	ldr	x8, [sp, #120]
  40c4e0:	str	x8, [sp, #112]
  40c4e4:	ldur	x8, [x29, #-8]
  40c4e8:	ldr	x8, [x8, #104]
  40c4ec:	subs	x8, x8, #0x1
  40c4f0:	mov	x9, #0x8                   	// #8
  40c4f4:	mul	x8, x9, x8
  40c4f8:	str	x8, [sp, #104]
  40c4fc:	ldr	x8, [sp, #112]
  40c500:	str	x8, [sp, #96]
  40c504:	ldr	x8, [sp, #96]
  40c508:	ldr	x8, [x8, #32]
  40c50c:	ldr	x9, [sp, #96]
  40c510:	ldr	x9, [x9, #24]
  40c514:	subs	x8, x8, x9
  40c518:	str	x8, [sp, #88]
  40c51c:	ldr	x8, [sp, #88]
  40c520:	ldr	x9, [sp, #104]
  40c524:	cmp	x8, x9
  40c528:	b.cs	40c538 <wcrtomb@plt+0x9c28>  // b.hs, b.nlast
  40c52c:	ldr	x0, [sp, #112]
  40c530:	ldr	x1, [sp, #104]
  40c534:	bl	427494 <_obstack_newchunk@@Base>
  40c538:	ldr	x8, [sp, #104]
  40c53c:	ldr	x9, [sp, #112]
  40c540:	ldr	x10, [x9, #24]
  40c544:	add	x8, x10, x8
  40c548:	str	x8, [x9, #24]
  40c54c:	ldr	x8, [sp, #120]
  40c550:	str	x8, [sp, #72]
  40c554:	ldr	x8, [sp, #72]
  40c558:	ldr	x8, [x8, #16]
  40c55c:	str	x8, [sp, #64]
  40c560:	ldr	x8, [sp, #72]
  40c564:	ldr	x8, [x8, #24]
  40c568:	ldr	x9, [sp, #64]
  40c56c:	cmp	x8, x9
  40c570:	b.ne	40c588 <wcrtomb@plt+0x9c78>  // b.any
  40c574:	ldr	x8, [sp, #72]
  40c578:	ldrb	w9, [x8, #80]
  40c57c:	and	w9, w9, #0xfffffffd
  40c580:	orr	w9, w9, #0x2
  40c584:	strb	w9, [x8, #80]
  40c588:	ldr	x8, [sp, #72]
  40c58c:	ldr	x8, [x8, #24]
  40c590:	mov	x9, xzr
  40c594:	subs	x8, x8, #0x0
  40c598:	ldr	x10, [sp, #72]
  40c59c:	ldr	x10, [x10, #48]
  40c5a0:	add	x8, x8, x10
  40c5a4:	ldr	x10, [sp, #72]
  40c5a8:	ldr	x10, [x10, #48]
  40c5ac:	bic	x8, x8, x10
  40c5b0:	add	x8, x9, x8
  40c5b4:	ldr	x9, [sp, #72]
  40c5b8:	str	x8, [x9, #24]
  40c5bc:	ldr	x8, [sp, #72]
  40c5c0:	ldr	x8, [x8, #24]
  40c5c4:	ldr	x9, [sp, #72]
  40c5c8:	ldr	x9, [x9, #8]
  40c5cc:	subs	x8, x8, x9
  40c5d0:	ldr	x9, [sp, #72]
  40c5d4:	ldr	x9, [x9, #32]
  40c5d8:	ldr	x10, [sp, #72]
  40c5dc:	ldr	x10, [x10, #8]
  40c5e0:	subs	x9, x9, x10
  40c5e4:	cmp	x8, x9
  40c5e8:	b.ls	40c5fc <wcrtomb@plt+0x9cec>  // b.plast
  40c5ec:	ldr	x8, [sp, #72]
  40c5f0:	ldr	x8, [x8, #32]
  40c5f4:	ldr	x9, [sp, #72]
  40c5f8:	str	x8, [x9, #24]
  40c5fc:	ldr	x8, [sp, #72]
  40c600:	ldr	x8, [x8, #24]
  40c604:	ldr	x9, [sp, #72]
  40c608:	str	x8, [x9, #16]
  40c60c:	ldr	x8, [sp, #64]
  40c610:	str	x8, [sp, #56]
  40c614:	ldr	x8, [sp, #56]
  40c618:	str	x8, [sp, #80]
  40c61c:	ldr	x8, [sp, #80]
  40c620:	ldur	x9, [x29, #-8]
  40c624:	str	x8, [x9, #2432]
  40c628:	stur	xzr, [x29, #-24]
  40c62c:	ldur	x8, [x29, #-8]
  40c630:	ldr	x8, [x8, #96]
  40c634:	ldr	x8, [x8, #24]
  40c638:	str	x8, [sp, #2392]
  40c63c:	ldur	x8, [x29, #-24]
  40c640:	ldur	x9, [x29, #-8]
  40c644:	ldr	x9, [x9, #104]
  40c648:	subs	x9, x9, #0x1
  40c64c:	cmp	x8, x9
  40c650:	b.ge	40c688 <wcrtomb@plt+0x9d78>  // b.tcont
  40c654:	ldr	x8, [sp, #2392]
  40c658:	ldr	x8, [x8, #48]
  40c65c:	ldur	x9, [x29, #-8]
  40c660:	ldr	x9, [x9, #2432]
  40c664:	ldur	x10, [x29, #-24]
  40c668:	str	x8, [x9, x10, lsl #3]
  40c66c:	ldr	x8, [sp, #2392]
  40c670:	ldr	x8, [x8, #24]
  40c674:	str	x8, [sp, #2392]
  40c678:	ldur	x8, [x29, #-24]
  40c67c:	add	x8, x8, #0x1
  40c680:	stur	x8, [x29, #-24]
  40c684:	b	40c63c <wcrtomb@plt+0x9d2c>
  40c688:	ldur	x0, [x29, #-16]
  40c68c:	ldur	x8, [x29, #-8]
  40c690:	ldr	x8, [x8, #2424]
  40c694:	ldur	x9, [x29, #-8]
  40c698:	ldr	x9, [x9, #104]
  40c69c:	subs	x9, x9, #0x2
  40c6a0:	ldrb	w1, [x8, x9]
  40c6a4:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40c6a8:	ldur	x8, [x29, #-8]
  40c6ac:	strb	w0, [x8, #2456]
  40c6b0:	ldur	x8, [x29, #-16]
  40c6b4:	cbz	x8, 40c718 <wcrtomb@plt+0x9e08>
  40c6b8:	stur	xzr, [x29, #-24]
  40c6bc:	ldur	x8, [x29, #-24]
  40c6c0:	cmp	x8, #0x100
  40c6c4:	b.ge	40c718 <wcrtomb@plt+0x9e08>  // b.tcont
  40c6c8:	ldr	x8, [sp, #2400]
  40c6cc:	ldur	x9, [x29, #-16]
  40c6d0:	ldur	x10, [x29, #-24]
  40c6d4:	ldrb	w0, [x9, x10]
  40c6d8:	str	x8, [sp, #8]
  40c6dc:	bl	40cb28 <wcrtomb@plt+0xa218>
  40c6e0:	mov	w1, w0
  40c6e4:	and	x8, x1, #0xff
  40c6e8:	ldr	x9, [sp, #8]
  40c6ec:	add	x8, x9, x8
  40c6f0:	ldrb	w11, [x8]
  40c6f4:	ldur	x8, [x29, #-8]
  40c6f8:	add	x8, x8, #0x78
  40c6fc:	ldur	x10, [x29, #-24]
  40c700:	add	x8, x8, x10
  40c704:	strb	w11, [x8]
  40c708:	ldur	x8, [x29, #-24]
  40c70c:	add	x8, x8, #0x1
  40c710:	stur	x8, [x29, #-24]
  40c714:	b	40c6bc <wcrtomb@plt+0x9dac>
  40c718:	add	sp, sp, #0xa80
  40c71c:	ldr	x28, [sp, #16]
  40c720:	ldp	x29, x30, [sp], #32
  40c724:	ret
  40c728:	sub	sp, sp, #0x20
  40c72c:	stp	x29, x30, [sp, #16]
  40c730:	add	x29, sp, #0x10
  40c734:	str	x0, [sp, #8]
  40c738:	str	x1, [sp]
  40c73c:	ldr	x8, [sp, #8]
  40c740:	cbnz	x8, 40c748 <wcrtomb@plt+0x9e38>
  40c744:	b	40c784 <wcrtomb@plt+0x9e74>
  40c748:	ldr	x8, [sp, #8]
  40c74c:	ldr	x0, [x8]
  40c750:	ldr	x1, [sp]
  40c754:	bl	40c728 <wcrtomb@plt+0x9e18>
  40c758:	ldr	x8, [sp, #8]
  40c75c:	ldr	x0, [x8, #8]
  40c760:	ldr	x1, [sp]
  40c764:	bl	40c728 <wcrtomb@plt+0x9e18>
  40c768:	ldr	x8, [sp, #8]
  40c76c:	ldr	x8, [x8, #16]
  40c770:	ldr	x9, [sp]
  40c774:	ldr	x9, [x9]
  40c778:	str	x8, [x9, #24]
  40c77c:	ldr	x9, [sp]
  40c780:	str	x8, [x9]
  40c784:	ldp	x29, x30, [sp, #16]
  40c788:	add	sp, sp, #0x20
  40c78c:	ret
  40c790:	sub	sp, sp, #0x30
  40c794:	stp	x29, x30, [sp, #32]
  40c798:	add	x29, sp, #0x20
  40c79c:	stur	x0, [x29, #-8]
  40c7a0:	str	x1, [sp, #16]
  40c7a4:	str	x2, [sp, #8]
  40c7a8:	ldur	x8, [x29, #-8]
  40c7ac:	cbnz	x8, 40c7b4 <wcrtomb@plt+0x9ea4>
  40c7b0:	b	40c81c <wcrtomb@plt+0x9f0c>
  40c7b4:	ldur	x8, [x29, #-8]
  40c7b8:	ldr	x0, [x8]
  40c7bc:	ldr	x1, [sp, #16]
  40c7c0:	ldr	x2, [sp, #8]
  40c7c4:	bl	40c790 <wcrtomb@plt+0x9e80>
  40c7c8:	ldur	x8, [x29, #-8]
  40c7cc:	ldr	x0, [x8, #8]
  40c7d0:	ldr	x1, [sp, #16]
  40c7d4:	ldr	x2, [sp, #8]
  40c7d8:	bl	40c790 <wcrtomb@plt+0x9e80>
  40c7dc:	ldr	x8, [sp, #16]
  40c7e0:	ldr	x9, [sp, #8]
  40c7e4:	ldur	x10, [x29, #-8]
  40c7e8:	ldrb	w11, [x10, #24]
  40c7ec:	mov	w10, w11
  40c7f0:	ldrb	w11, [x9, x10]
  40c7f4:	mov	w9, w11
  40c7f8:	cmp	x8, x9
  40c7fc:	b.ge	40c81c <wcrtomb@plt+0x9f0c>  // b.tcont
  40c800:	ldr	x8, [sp, #16]
  40c804:	ldr	x9, [sp, #8]
  40c808:	ldur	x10, [x29, #-8]
  40c80c:	ldrb	w11, [x10, #24]
  40c810:	mov	w10, w11
  40c814:	add	x9, x9, x10
  40c818:	strb	w8, [x9]
  40c81c:	ldp	x29, x30, [sp, #32]
  40c820:	add	sp, sp, #0x30
  40c824:	ret
  40c828:	sub	sp, sp, #0x40
  40c82c:	stp	x29, x30, [sp, #48]
  40c830:	add	x29, sp, #0x30
  40c834:	stur	x0, [x29, #-8]
  40c838:	stur	x1, [x29, #-16]
  40c83c:	str	x2, [sp, #24]
  40c840:	and	w8, w3, #0x1
  40c844:	strb	w8, [sp, #23]
  40c848:	ldur	x9, [x29, #-8]
  40c84c:	cbnz	x9, 40c854 <wcrtomb@plt+0x9f44>
  40c850:	b	40c988 <wcrtomb@plt+0xa078>
  40c854:	ldur	x8, [x29, #-8]
  40c858:	ldr	x0, [x8]
  40c85c:	ldur	x1, [x29, #-16]
  40c860:	ldr	x2, [sp, #24]
  40c864:	ldrb	w9, [sp, #23]
  40c868:	and	w3, w9, #0x1
  40c86c:	bl	40c828 <wcrtomb@plt+0x9f18>
  40c870:	ldur	x8, [x29, #-8]
  40c874:	ldr	x0, [x8, #8]
  40c878:	ldur	x1, [x29, #-16]
  40c87c:	ldr	x2, [sp, #24]
  40c880:	ldrb	w9, [sp, #23]
  40c884:	and	w3, w9, #0x1
  40c888:	bl	40c828 <wcrtomb@plt+0x9f18>
  40c88c:	ldur	x8, [x29, #-16]
  40c890:	cbz	x8, 40c978 <wcrtomb@plt+0xa068>
  40c894:	ldur	x8, [x29, #-16]
  40c898:	ldr	x8, [x8, #8]
  40c89c:	str	x8, [sp, #8]
  40c8a0:	ldr	x8, [sp, #8]
  40c8a4:	mov	w9, #0x0                   	// #0
  40c8a8:	str	w9, [sp, #4]
  40c8ac:	cbz	x8, 40c8cc <wcrtomb@plt+0x9fbc>
  40c8b0:	ldur	x8, [x29, #-8]
  40c8b4:	ldrb	w9, [x8, #24]
  40c8b8:	ldr	x8, [sp, #8]
  40c8bc:	ldrb	w10, [x8, #24]
  40c8c0:	cmp	w9, w10
  40c8c4:	cset	w9, ne  // ne = any
  40c8c8:	str	w9, [sp, #4]
  40c8cc:	ldr	w8, [sp, #4]
  40c8d0:	tbnz	w8, #0, 40c8d8 <wcrtomb@plt+0x9fc8>
  40c8d4:	b	40c910 <wcrtomb@plt+0xa000>
  40c8d8:	ldur	x8, [x29, #-8]
  40c8dc:	ldrb	w9, [x8, #24]
  40c8e0:	ldr	x8, [sp, #8]
  40c8e4:	ldrb	w10, [x8, #24]
  40c8e8:	cmp	w9, w10
  40c8ec:	b.ge	40c900 <wcrtomb@plt+0x9ff0>  // b.tcont
  40c8f0:	ldr	x8, [sp, #8]
  40c8f4:	ldr	x8, [x8]
  40c8f8:	str	x8, [sp, #8]
  40c8fc:	b	40c90c <wcrtomb@plt+0x9ffc>
  40c900:	ldr	x8, [sp, #8]
  40c904:	ldr	x8, [x8, #8]
  40c908:	str	x8, [sp, #8]
  40c90c:	b	40c8a0 <wcrtomb@plt+0x9f90>
  40c910:	ldr	x8, [sp, #8]
  40c914:	cbz	x8, 40c968 <wcrtomb@plt+0xa058>
  40c918:	ldr	x8, [sp, #8]
  40c91c:	ldr	x8, [x8, #16]
  40c920:	ldur	x9, [x29, #-8]
  40c924:	ldr	x9, [x9, #16]
  40c928:	str	x8, [x9, #32]
  40c92c:	ldrb	w10, [sp, #23]
  40c930:	tbnz	w10, #0, 40c964 <wcrtomb@plt+0xa054>
  40c934:	ldr	x8, [sp, #8]
  40c938:	ldr	x8, [x8, #16]
  40c93c:	ldr	x8, [x8]
  40c940:	cbz	x8, 40c964 <wcrtomb@plt+0xa054>
  40c944:	ldur	x8, [x29, #-8]
  40c948:	ldr	x8, [x8, #16]
  40c94c:	ldr	x8, [x8]
  40c950:	cbnz	x8, 40c964 <wcrtomb@plt+0xa054>
  40c954:	ldur	x8, [x29, #-8]
  40c958:	ldr	x8, [x8, #16]
  40c95c:	mov	x9, #0xffffffffffffffff    	// #-1
  40c960:	str	x9, [x8]
  40c964:	b	40c988 <wcrtomb@plt+0xa078>
  40c968:	ldur	x8, [x29, #-16]
  40c96c:	ldr	x8, [x8, #32]
  40c970:	stur	x8, [x29, #-16]
  40c974:	b	40c88c <wcrtomb@plt+0x9f7c>
  40c978:	ldr	x8, [sp, #24]
  40c97c:	ldur	x9, [x29, #-8]
  40c980:	ldr	x9, [x9, #16]
  40c984:	str	x8, [x9, #32]
  40c988:	ldp	x29, x30, [sp, #48]
  40c98c:	add	sp, sp, #0x40
  40c990:	ret
  40c994:	sub	sp, sp, #0x30
  40c998:	stp	x29, x30, [sp, #32]
  40c99c:	add	x29, sp, #0x20
  40c9a0:	str	x0, [sp, #16]
  40c9a4:	str	x1, [sp, #8]
  40c9a8:	ldr	x8, [sp, #8]
  40c9ac:	cbnz	x8, 40c9c0 <wcrtomb@plt+0xa0b0>
  40c9b0:	mov	w8, #0x1                   	// #1
  40c9b4:	and	w8, w8, #0x1
  40c9b8:	sturb	w8, [x29, #-1]
  40c9bc:	b	40ca98 <wcrtomb@plt+0xa188>
  40c9c0:	ldr	x0, [sp, #16]
  40c9c4:	ldr	x8, [sp, #8]
  40c9c8:	ldr	x1, [x8]
  40c9cc:	bl	40c994 <wcrtomb@plt+0xa084>
  40c9d0:	tbnz	w0, #0, 40c9e4 <wcrtomb@plt+0xa0d4>
  40c9d4:	mov	w8, wzr
  40c9d8:	and	w8, w8, #0x1
  40c9dc:	sturb	w8, [x29, #-1]
  40c9e0:	b	40ca98 <wcrtomb@plt+0xa188>
  40c9e4:	ldr	x0, [sp, #16]
  40c9e8:	ldr	x8, [sp, #8]
  40c9ec:	ldr	x1, [x8, #8]
  40c9f0:	bl	40c994 <wcrtomb@plt+0xa084>
  40c9f4:	tbnz	w0, #0, 40ca08 <wcrtomb@plt+0xa0f8>
  40c9f8:	mov	w8, wzr
  40c9fc:	and	w8, w8, #0x1
  40ca00:	sturb	w8, [x29, #-1]
  40ca04:	b	40ca98 <wcrtomb@plt+0xa188>
  40ca08:	ldr	x8, [sp, #16]
  40ca0c:	mov	w9, #0x0                   	// #0
  40ca10:	str	w9, [sp, #4]
  40ca14:	cbz	x8, 40ca34 <wcrtomb@plt+0xa124>
  40ca18:	ldr	x8, [sp, #8]
  40ca1c:	ldrb	w9, [x8, #24]
  40ca20:	ldr	x8, [sp, #16]
  40ca24:	ldrb	w10, [x8, #24]
  40ca28:	cmp	w9, w10
  40ca2c:	cset	w9, ne  // ne = any
  40ca30:	str	w9, [sp, #4]
  40ca34:	ldr	w8, [sp, #4]
  40ca38:	tbnz	w8, #0, 40ca40 <wcrtomb@plt+0xa130>
  40ca3c:	b	40ca78 <wcrtomb@plt+0xa168>
  40ca40:	ldr	x8, [sp, #8]
  40ca44:	ldrb	w9, [x8, #24]
  40ca48:	ldr	x8, [sp, #16]
  40ca4c:	ldrb	w10, [x8, #24]
  40ca50:	cmp	w9, w10
  40ca54:	b.ge	40ca68 <wcrtomb@plt+0xa158>  // b.tcont
  40ca58:	ldr	x8, [sp, #16]
  40ca5c:	ldr	x8, [x8]
  40ca60:	str	x8, [sp, #16]
  40ca64:	b	40ca74 <wcrtomb@plt+0xa164>
  40ca68:	ldr	x8, [sp, #16]
  40ca6c:	ldr	x8, [x8, #8]
  40ca70:	str	x8, [sp, #16]
  40ca74:	b	40ca08 <wcrtomb@plt+0xa0f8>
  40ca78:	ldr	x8, [sp, #16]
  40ca7c:	cmp	x8, #0x0
  40ca80:	cset	w9, ne  // ne = any
  40ca84:	mov	w10, #0x1                   	// #1
  40ca88:	eor	w9, w9, #0x1
  40ca8c:	eor	w9, w9, w10
  40ca90:	and	w9, w9, w10
  40ca94:	sturb	w9, [x29, #-1]
  40ca98:	ldurb	w8, [x29, #-1]
  40ca9c:	and	w0, w8, #0x1
  40caa0:	ldp	x29, x30, [sp, #32]
  40caa4:	add	sp, sp, #0x30
  40caa8:	ret
  40caac:	sub	sp, sp, #0x30
  40cab0:	stp	x29, x30, [sp, #32]
  40cab4:	add	x29, sp, #0x20
  40cab8:	stur	x0, [x29, #-8]
  40cabc:	str	x1, [sp, #16]
  40cac0:	ldur	x8, [x29, #-8]
  40cac4:	cbnz	x8, 40cacc <wcrtomb@plt+0xa1bc>
  40cac8:	b	40cb1c <wcrtomb@plt+0xa20c>
  40cacc:	ldur	x8, [x29, #-8]
  40cad0:	ldr	x0, [x8]
  40cad4:	ldr	x1, [sp, #16]
  40cad8:	bl	40caac <wcrtomb@plt+0xa19c>
  40cadc:	ldur	x8, [x29, #-8]
  40cae0:	mov	x9, #0x8                   	// #8
  40cae4:	ldr	x0, [x8, #8]
  40cae8:	ldr	x1, [sp, #16]
  40caec:	str	x9, [sp, #8]
  40caf0:	bl	40caac <wcrtomb@plt+0xa19c>
  40caf4:	ldur	x8, [x29, #-8]
  40caf8:	ldr	x8, [x8, #16]
  40cafc:	ldr	x9, [sp, #16]
  40cb00:	ldur	x10, [x29, #-8]
  40cb04:	ldrb	w11, [x10, #24]
  40cb08:	mov	w10, w11
  40cb0c:	ldr	x12, [sp, #8]
  40cb10:	mul	x10, x12, x10
  40cb14:	add	x9, x9, x10
  40cb18:	str	x8, [x9]
  40cb1c:	ldp	x29, x30, [sp, #32]
  40cb20:	add	sp, sp, #0x30
  40cb24:	ret
  40cb28:	sub	sp, sp, #0x20
  40cb2c:	stp	x29, x30, [sp, #16]
  40cb30:	add	x29, sp, #0x10
  40cb34:	sturb	w0, [x29, #-1]
  40cb38:	ldurb	w0, [x29, #-1]
  40cb3c:	bl	40edd4 <wcrtomb@plt+0xc4c4>
  40cb40:	ldp	x29, x30, [sp, #16]
  40cb44:	add	sp, sp, #0x20
  40cb48:	ret
  40cb4c:	sub	sp, sp, #0x30
  40cb50:	stp	x29, x30, [sp, #32]
  40cb54:	add	x29, sp, #0x20
  40cb58:	stur	x0, [x29, #-8]
  40cb5c:	sturb	w1, [x29, #-9]
  40cb60:	ldur	x8, [x29, #-8]
  40cb64:	cbz	x8, 40cb90 <wcrtomb@plt+0xa280>
  40cb68:	ldur	x8, [x29, #-8]
  40cb6c:	ldurb	w0, [x29, #-9]
  40cb70:	str	x8, [sp, #8]
  40cb74:	bl	40cb28 <wcrtomb@plt+0xa218>
  40cb78:	mov	w1, w0
  40cb7c:	and	x8, x1, #0xff
  40cb80:	ldr	x9, [sp, #8]
  40cb84:	ldrb	w10, [x9, x8]
  40cb88:	str	w10, [sp, #4]
  40cb8c:	b	40cb98 <wcrtomb@plt+0xa288>
  40cb90:	ldurb	w8, [x29, #-9]
  40cb94:	str	w8, [sp, #4]
  40cb98:	ldr	w8, [sp, #4]
  40cb9c:	mov	w0, w8
  40cba0:	ldp	x29, x30, [sp, #32]
  40cba4:	add	sp, sp, #0x30
  40cba8:	ret
  40cbac:	sub	sp, sp, #0x40
  40cbb0:	stp	x29, x30, [sp, #48]
  40cbb4:	add	x29, sp, #0x30
  40cbb8:	stur	x0, [x29, #-8]
  40cbbc:	stur	x1, [x29, #-16]
  40cbc0:	str	x2, [sp, #24]
  40cbc4:	str	x3, [sp, #16]
  40cbc8:	mov	w8, #0x1                   	// #1
  40cbcc:	and	w8, w4, w8
  40cbd0:	strb	w8, [sp, #15]
  40cbd4:	ldur	x9, [x29, #-8]
  40cbd8:	ldr	x9, [x9, #2464]
  40cbdc:	ldur	x0, [x29, #-8]
  40cbe0:	ldur	x1, [x29, #-16]
  40cbe4:	ldr	x2, [sp, #24]
  40cbe8:	ldr	x3, [sp, #16]
  40cbec:	ldrb	w8, [sp, #15]
  40cbf0:	and	w4, w8, #0x1
  40cbf4:	blr	x9
  40cbf8:	ldp	x29, x30, [sp, #48]
  40cbfc:	add	sp, sp, #0x40
  40cc00:	ret
  40cc04:	sub	sp, sp, #0x30
  40cc08:	stp	x29, x30, [sp, #32]
  40cc0c:	add	x29, sp, #0x20
  40cc10:	mov	x8, xzr
  40cc14:	stur	x0, [x29, #-8]
  40cc18:	ldur	x9, [x29, #-8]
  40cc1c:	str	x9, [sp, #16]
  40cc20:	str	x8, [sp, #8]
  40cc24:	ldr	x8, [sp, #8]
  40cc28:	ldr	x9, [sp, #16]
  40cc2c:	ldr	x9, [x9, #8]
  40cc30:	cmp	x8, x9
  40cc34:	b.ls	40cc64 <wcrtomb@plt+0xa354>  // b.plast
  40cc38:	ldr	x8, [sp, #8]
  40cc3c:	ldr	x9, [sp, #16]
  40cc40:	ldr	x9, [x9, #32]
  40cc44:	cmp	x8, x9
  40cc48:	b.cs	40cc64 <wcrtomb@plt+0xa354>  // b.hs, b.nlast
  40cc4c:	ldr	x8, [sp, #8]
  40cc50:	ldr	x9, [sp, #16]
  40cc54:	str	x8, [x9, #16]
  40cc58:	ldr	x9, [sp, #16]
  40cc5c:	str	x8, [x9, #24]
  40cc60:	b	40cc70 <wcrtomb@plt+0xa360>
  40cc64:	ldr	x0, [sp, #16]
  40cc68:	ldr	x1, [sp, #8]
  40cc6c:	bl	427820 <_obstack_free@@Base>
  40cc70:	ldur	x0, [x29, #-8]
  40cc74:	bl	4026c0 <free@plt>
  40cc78:	ldp	x29, x30, [sp, #32]
  40cc7c:	add	sp, sp, #0x30
  40cc80:	ret
  40cc84:	sub	sp, sp, #0x100
  40cc88:	stp	x29, x30, [sp, #240]
  40cc8c:	add	x29, sp, #0xf0
  40cc90:	mov	x8, xzr
  40cc94:	mov	w9, #0x0                   	// #0
  40cc98:	mov	w10, #0x1                   	// #1
  40cc9c:	stur	x0, [x29, #-16]
  40cca0:	stur	x1, [x29, #-24]
  40cca4:	stur	x2, [x29, #-32]
  40cca8:	ldur	x11, [x29, #-32]
  40ccac:	cmp	x8, x11
  40ccb0:	cset	w12, gt
  40ccb4:	str	w9, [sp, #120]
  40ccb8:	str	w10, [sp, #116]
  40ccbc:	tbnz	w12, #0, 40ccc4 <wcrtomb@plt+0xa3b4>
  40ccc0:	b	40ccc4 <wcrtomb@plt+0xa3b4>
  40ccc4:	ldur	x8, [x29, #-16]
  40ccc8:	ldr	x8, [x8, #104]
  40cccc:	stur	x8, [x29, #-80]
  40ccd0:	ldur	x8, [x29, #-16]
  40ccd4:	ldr	x8, [x8, #2440]
  40ccd8:	stur	x8, [x29, #-88]
  40ccdc:	ldur	x8, [x29, #-80]
  40cce0:	cbnz	x8, 40ccec <wcrtomb@plt+0xa3dc>
  40cce4:	stur	xzr, [x29, #-8]
  40cce8:	b	40e4a0 <wcrtomb@plt+0xbb90>
  40ccec:	ldur	x8, [x29, #-80]
  40ccf0:	ldur	x9, [x29, #-32]
  40ccf4:	cmp	x8, x9
  40ccf8:	b.le	40cd08 <wcrtomb@plt+0xa3f8>
  40ccfc:	mov	x8, #0xffffffffffffffff    	// #-1
  40cd00:	stur	x8, [x29, #-8]
  40cd04:	b	40e4a0 <wcrtomb@plt+0xbb90>
  40cd08:	ldur	x8, [x29, #-80]
  40cd0c:	cmp	x8, #0x1
  40cd10:	b.ne	40cd58 <wcrtomb@plt+0xa448>  // b.any
  40cd14:	ldur	x0, [x29, #-24]
  40cd18:	ldur	x1, [x29, #-32]
  40cd1c:	ldur	x2, [x29, #-16]
  40cd20:	bl	40e4b0 <wcrtomb@plt+0xbba0>
  40cd24:	stur	x0, [x29, #-64]
  40cd28:	ldur	x8, [x29, #-64]
  40cd2c:	cbz	x8, 40cd44 <wcrtomb@plt+0xa434>
  40cd30:	ldur	x8, [x29, #-64]
  40cd34:	ldur	x9, [x29, #-24]
  40cd38:	subs	x8, x8, x9
  40cd3c:	str	x8, [sp, #104]
  40cd40:	b	40cd4c <wcrtomb@plt+0xa43c>
  40cd44:	mov	x8, #0xffffffffffffffff    	// #-1
  40cd48:	str	x8, [sp, #104]
  40cd4c:	ldr	x8, [sp, #104]
  40cd50:	stur	x8, [x29, #-8]
  40cd54:	b	40e4a0 <wcrtomb@plt+0xbb90>
  40cd58:	ldur	x8, [x29, #-16]
  40cd5c:	add	x8, x8, #0x78
  40cd60:	stur	x8, [x29, #-40]
  40cd64:	ldur	x8, [x29, #-16]
  40cd68:	ldr	x8, [x8, #2424]
  40cd6c:	ldur	x9, [x29, #-80]
  40cd70:	add	x8, x8, x9
  40cd74:	stur	x8, [x29, #-56]
  40cd78:	ldur	x8, [x29, #-24]
  40cd7c:	ldur	x9, [x29, #-80]
  40cd80:	add	x8, x8, x9
  40cd84:	stur	x8, [x29, #-64]
  40cd88:	ldur	x8, [x29, #-16]
  40cd8c:	ldr	w10, [x8, #2448]
  40cd90:	sturb	w10, [x29, #-89]
  40cd94:	ldur	x8, [x29, #-16]
  40cd98:	ldrb	w10, [x8, #2456]
  40cd9c:	sturb	w10, [x29, #-90]
  40cda0:	ldr	w10, [sp, #120]
  40cda4:	tbnz	w10, #0, 40cdac <wcrtomb@plt+0xa49c>
  40cda8:	b	40d178 <wcrtomb@plt+0xa868>
  40cdac:	ldr	w8, [sp, #120]
  40cdb0:	tbnz	w8, #0, 40cf98 <wcrtomb@plt+0xa688>
  40cdb4:	ldr	w8, [sp, #120]
  40cdb8:	tbnz	w8, #0, 40cdc0 <wcrtomb@plt+0xa4b0>
  40cdbc:	b	40cea0 <wcrtomb@plt+0xa590>
  40cdc0:	ldur	x8, [x29, #-80]
  40cdc4:	cmp	x8, #0x0
  40cdc8:	cset	w9, ge  // ge = tcont
  40cdcc:	tbnz	w9, #0, 40ce08 <wcrtomb@plt+0xa4f8>
  40cdd0:	ldr	w8, [sp, #116]
  40cdd4:	tbnz	w8, #0, 40cddc <wcrtomb@plt+0xa4cc>
  40cdd8:	b	40cdec <wcrtomb@plt+0xa4dc>
  40cddc:	ldur	x8, [x29, #-80]
  40cde0:	cmp	x8, #0xa
  40cde4:	b.lt	40cf48 <wcrtomb@plt+0xa638>  // b.tstop
  40cde8:	b	40cf70 <wcrtomb@plt+0xa660>
  40cdec:	ldur	x8, [x29, #-80]
  40cdf0:	mov	x9, #0xffffffffffffffff    	// #-1
  40cdf4:	subs	x8, x9, x8
  40cdf8:	mov	x9, #0xfffffffffffffff6    	// #-10
  40cdfc:	cmp	x9, x8
  40ce00:	b.le	40cf48 <wcrtomb@plt+0xa638>
  40ce04:	b	40cf70 <wcrtomb@plt+0xa660>
  40ce08:	ldr	w8, [sp, #116]
  40ce0c:	tbnz	w8, #0, 40ce14 <wcrtomb@plt+0xa504>
  40ce10:	b	40ce20 <wcrtomb@plt+0xa510>
  40ce14:	ldr	w8, [sp, #120]
  40ce18:	tbnz	w8, #0, 40ce2c <wcrtomb@plt+0xa51c>
  40ce1c:	b	40ce8c <wcrtomb@plt+0xa57c>
  40ce20:	ldr	w8, [sp, #120]
  40ce24:	tbnz	w8, #0, 40ce2c <wcrtomb@plt+0xa51c>
  40ce28:	b	40ce8c <wcrtomb@plt+0xa57c>
  40ce2c:	ldr	w8, [sp, #120]
  40ce30:	tbnz	w8, #0, 40ce38 <wcrtomb@plt+0xa528>
  40ce34:	b	40ce8c <wcrtomb@plt+0xa57c>
  40ce38:	ldr	w8, [sp, #116]
  40ce3c:	tbnz	w8, #0, 40ce44 <wcrtomb@plt+0xa534>
  40ce40:	b	40ce60 <wcrtomb@plt+0xa550>
  40ce44:	ldur	x8, [x29, #-80]
  40ce48:	subs	x8, x8, #0x80
  40ce4c:	mov	x9, xzr
  40ce50:	cmp	x9, x8
  40ce54:	cset	w10, lt  // lt = tstop
  40ce58:	tbnz	w10, #0, 40cf48 <wcrtomb@plt+0xa638>
  40ce5c:	b	40cf70 <wcrtomb@plt+0xa660>
  40ce60:	ldur	x8, [x29, #-80]
  40ce64:	mov	x9, xzr
  40ce68:	cmp	x9, x8
  40ce6c:	cset	w10, ge  // ge = tcont
  40ce70:	tbnz	w10, #0, 40cf70 <wcrtomb@plt+0xa660>
  40ce74:	ldur	x8, [x29, #-80]
  40ce78:	subs	x8, x8, #0x1
  40ce7c:	mov	x9, #0x7f                  	// #127
  40ce80:	cmp	x9, x8
  40ce84:	b.lt	40cf48 <wcrtomb@plt+0xa638>  // b.tstop
  40ce88:	b	40cf70 <wcrtomb@plt+0xa660>
  40ce8c:	ldur	x8, [x29, #-80]
  40ce90:	mov	x9, #0xfffffffffffffff6    	// #-10
  40ce94:	cmp	x9, x8
  40ce98:	b.lt	40cf48 <wcrtomb@plt+0xa638>  // b.tstop
  40ce9c:	b	40cf70 <wcrtomb@plt+0xa660>
  40cea0:	ldr	w8, [sp, #120]
  40cea4:	tbnz	w8, #0, 40ceac <wcrtomb@plt+0xa59c>
  40cea8:	b	40ceb8 <wcrtomb@plt+0xa5a8>
  40ceac:	ldr	w8, [sp, #120]
  40ceb0:	tbnz	w8, #0, 40cf48 <wcrtomb@plt+0xa638>
  40ceb4:	b	40cf70 <wcrtomb@plt+0xa660>
  40ceb8:	ldur	x8, [x29, #-80]
  40cebc:	cmp	x8, #0x0
  40cec0:	cset	w9, ge  // ge = tcont
  40cec4:	tbnz	w9, #0, 40cf38 <wcrtomb@plt+0xa628>
  40cec8:	ldr	w8, [sp, #116]
  40cecc:	tbnz	w8, #0, 40ced4 <wcrtomb@plt+0xa5c4>
  40ced0:	b	40cee0 <wcrtomb@plt+0xa5d0>
  40ced4:	ldr	w8, [sp, #120]
  40ced8:	tbnz	w8, #0, 40ceec <wcrtomb@plt+0xa5dc>
  40cedc:	b	40cf20 <wcrtomb@plt+0xa610>
  40cee0:	ldr	w8, [sp, #120]
  40cee4:	tbnz	w8, #0, 40ceec <wcrtomb@plt+0xa5dc>
  40cee8:	b	40cf20 <wcrtomb@plt+0xa610>
  40ceec:	ldur	x8, [x29, #-80]
  40cef0:	mov	x9, #0xffffffffffffffff    	// #-1
  40cef4:	cmp	x8, x9
  40cef8:	b.ne	40cf20 <wcrtomb@plt+0xa610>  // b.any
  40cefc:	ldr	w8, [sp, #116]
  40cf00:	tbnz	w8, #0, 40cf08 <wcrtomb@plt+0xa5f8>
  40cf04:	b	40cf14 <wcrtomb@plt+0xa604>
  40cf08:	ldr	w8, [sp, #120]
  40cf0c:	tbnz	w8, #0, 40cf48 <wcrtomb@plt+0xa638>
  40cf10:	b	40cf70 <wcrtomb@plt+0xa660>
  40cf14:	ldr	w8, [sp, #120]
  40cf18:	tbnz	w8, #0, 40cf48 <wcrtomb@plt+0xa638>
  40cf1c:	b	40cf70 <wcrtomb@plt+0xa660>
  40cf20:	ldur	x8, [x29, #-80]
  40cf24:	mov	x9, #0xffffffffffffff80    	// #-128
  40cf28:	sdiv	x8, x9, x8
  40cf2c:	cmp	x8, #0xc
  40cf30:	b.lt	40cf48 <wcrtomb@plt+0xa638>  // b.tstop
  40cf34:	b	40cf70 <wcrtomb@plt+0xa660>
  40cf38:	ldur	x8, [x29, #-80]
  40cf3c:	mov	x9, #0xa                   	// #10
  40cf40:	cmp	x9, x8
  40cf44:	b.ge	40cf70 <wcrtomb@plt+0xa660>  // b.tcont
  40cf48:	ldur	x8, [x29, #-80]
  40cf4c:	mov	w9, #0xc                   	// #12
  40cf50:	mul	w8, w8, w9
  40cf54:	mov	w0, w8
  40cf58:	lsl	x10, x0, #56
  40cf5c:	asr	x10, x10, #56
  40cf60:	stur	x10, [x29, #-104]
  40cf64:	ldr	w8, [sp, #116]
  40cf68:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40cf6c:	b	40e048 <wcrtomb@plt+0xb738>
  40cf70:	ldur	x8, [x29, #-80]
  40cf74:	mov	w9, #0xc                   	// #12
  40cf78:	mul	w8, w8, w9
  40cf7c:	mov	w0, w8
  40cf80:	lsl	x10, x0, #56
  40cf84:	asr	x10, x10, #56
  40cf88:	stur	x10, [x29, #-104]
  40cf8c:	ldr	w8, [sp, #120]
  40cf90:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40cf94:	b	40e048 <wcrtomb@plt+0xb738>
  40cf98:	ldr	w8, [sp, #120]
  40cf9c:	tbnz	w8, #0, 40cfa4 <wcrtomb@plt+0xa694>
  40cfa0:	b	40d088 <wcrtomb@plt+0xa778>
  40cfa4:	ldur	x8, [x29, #-80]
  40cfa8:	cmp	x8, #0x0
  40cfac:	cset	w9, ge  // ge = tcont
  40cfb0:	tbnz	w9, #0, 40cfec <wcrtomb@plt+0xa6dc>
  40cfb4:	ldr	w8, [sp, #116]
  40cfb8:	tbnz	w8, #0, 40cfc0 <wcrtomb@plt+0xa6b0>
  40cfbc:	b	40cfd0 <wcrtomb@plt+0xa6c0>
  40cfc0:	ldur	x8, [x29, #-80]
  40cfc4:	cmp	x8, #0x15
  40cfc8:	b.lt	40d130 <wcrtomb@plt+0xa820>  // b.tstop
  40cfcc:	b	40d154 <wcrtomb@plt+0xa844>
  40cfd0:	ldur	x8, [x29, #-80]
  40cfd4:	mov	x9, #0xffffffffffffffff    	// #-1
  40cfd8:	subs	x8, x9, x8
  40cfdc:	mov	x9, #0xffffffffffffffeb    	// #-21
  40cfe0:	cmp	x9, x8
  40cfe4:	b.le	40d130 <wcrtomb@plt+0xa820>
  40cfe8:	b	40d154 <wcrtomb@plt+0xa844>
  40cfec:	ldr	w8, [sp, #116]
  40cff0:	tbnz	w8, #0, 40cff8 <wcrtomb@plt+0xa6e8>
  40cff4:	b	40d004 <wcrtomb@plt+0xa6f4>
  40cff8:	ldr	w8, [sp, #120]
  40cffc:	tbnz	w8, #0, 40d010 <wcrtomb@plt+0xa700>
  40d000:	b	40d070 <wcrtomb@plt+0xa760>
  40d004:	ldr	w8, [sp, #120]
  40d008:	tbnz	w8, #0, 40d010 <wcrtomb@plt+0xa700>
  40d00c:	b	40d070 <wcrtomb@plt+0xa760>
  40d010:	ldr	w8, [sp, #120]
  40d014:	tbnz	w8, #0, 40d01c <wcrtomb@plt+0xa70c>
  40d018:	b	40d070 <wcrtomb@plt+0xa760>
  40d01c:	ldr	w8, [sp, #116]
  40d020:	tbnz	w8, #0, 40d028 <wcrtomb@plt+0xa718>
  40d024:	b	40d044 <wcrtomb@plt+0xa734>
  40d028:	ldur	x8, [x29, #-80]
  40d02c:	mov	x9, xzr
  40d030:	add	x8, x8, #0x0
  40d034:	cmp	x9, x8
  40d038:	cset	w10, lt  // lt = tstop
  40d03c:	tbnz	w10, #0, 40d130 <wcrtomb@plt+0xa820>
  40d040:	b	40d154 <wcrtomb@plt+0xa844>
  40d044:	ldur	x8, [x29, #-80]
  40d048:	mov	x9, xzr
  40d04c:	cmp	x9, x8
  40d050:	cset	w10, ge  // ge = tcont
  40d054:	tbnz	w10, #0, 40d154 <wcrtomb@plt+0xa844>
  40d058:	ldur	x8, [x29, #-80]
  40d05c:	subs	x8, x8, #0x1
  40d060:	mov	x9, #0xffffffffffffffff    	// #-1
  40d064:	cmp	x9, x8
  40d068:	b.lt	40d130 <wcrtomb@plt+0xa820>  // b.tstop
  40d06c:	b	40d154 <wcrtomb@plt+0xa844>
  40d070:	ldur	x8, [x29, #-80]
  40d074:	mov	x9, xzr
  40d078:	cmp	x9, x8
  40d07c:	cset	w10, lt  // lt = tstop
  40d080:	tbnz	w10, #0, 40d130 <wcrtomb@plt+0xa820>
  40d084:	b	40d154 <wcrtomb@plt+0xa844>
  40d088:	ldr	w8, [sp, #120]
  40d08c:	tbnz	w8, #0, 40d094 <wcrtomb@plt+0xa784>
  40d090:	b	40d0a0 <wcrtomb@plt+0xa790>
  40d094:	ldr	w8, [sp, #120]
  40d098:	tbnz	w8, #0, 40d130 <wcrtomb@plt+0xa820>
  40d09c:	b	40d154 <wcrtomb@plt+0xa844>
  40d0a0:	ldur	x8, [x29, #-80]
  40d0a4:	cmp	x8, #0x0
  40d0a8:	cset	w9, ge  // ge = tcont
  40d0ac:	tbnz	w9, #0, 40d120 <wcrtomb@plt+0xa810>
  40d0b0:	ldr	w8, [sp, #116]
  40d0b4:	tbnz	w8, #0, 40d0bc <wcrtomb@plt+0xa7ac>
  40d0b8:	b	40d0c8 <wcrtomb@plt+0xa7b8>
  40d0bc:	ldr	w8, [sp, #120]
  40d0c0:	tbnz	w8, #0, 40d0d4 <wcrtomb@plt+0xa7c4>
  40d0c4:	b	40d108 <wcrtomb@plt+0xa7f8>
  40d0c8:	ldr	w8, [sp, #120]
  40d0cc:	tbnz	w8, #0, 40d0d4 <wcrtomb@plt+0xa7c4>
  40d0d0:	b	40d108 <wcrtomb@plt+0xa7f8>
  40d0d4:	ldur	x8, [x29, #-80]
  40d0d8:	mov	x9, #0xffffffffffffffff    	// #-1
  40d0dc:	cmp	x8, x9
  40d0e0:	b.ne	40d108 <wcrtomb@plt+0xa7f8>  // b.any
  40d0e4:	ldr	w8, [sp, #116]
  40d0e8:	tbnz	w8, #0, 40d0f0 <wcrtomb@plt+0xa7e0>
  40d0ec:	b	40d0fc <wcrtomb@plt+0xa7ec>
  40d0f0:	ldr	w8, [sp, #116]
  40d0f4:	tbnz	w8, #0, 40d130 <wcrtomb@plt+0xa820>
  40d0f8:	b	40d154 <wcrtomb@plt+0xa844>
  40d0fc:	ldr	w8, [sp, #116]
  40d100:	tbnz	w8, #0, 40d130 <wcrtomb@plt+0xa820>
  40d104:	b	40d154 <wcrtomb@plt+0xa844>
  40d108:	ldur	x8, [x29, #-80]
  40d10c:	mov	x9, xzr
  40d110:	sdiv	x8, x9, x8
  40d114:	cmp	x8, #0xc
  40d118:	b.lt	40d130 <wcrtomb@plt+0xa820>  // b.tstop
  40d11c:	b	40d154 <wcrtomb@plt+0xa844>
  40d120:	ldur	x8, [x29, #-80]
  40d124:	mov	x9, #0x15                  	// #21
  40d128:	cmp	x9, x8
  40d12c:	b.ge	40d154 <wcrtomb@plt+0xa844>  // b.tcont
  40d130:	ldur	x8, [x29, #-80]
  40d134:	mov	w9, #0xc                   	// #12
  40d138:	mul	w8, w8, w9
  40d13c:	mov	w0, w8
  40d140:	and	x10, x0, #0xff
  40d144:	stur	x10, [x29, #-104]
  40d148:	ldr	w8, [sp, #116]
  40d14c:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d150:	b	40e048 <wcrtomb@plt+0xb738>
  40d154:	ldur	x8, [x29, #-80]
  40d158:	mov	w9, #0xc                   	// #12
  40d15c:	mul	w8, w8, w9
  40d160:	mov	w0, w8
  40d164:	and	x10, x0, #0xff
  40d168:	stur	x10, [x29, #-104]
  40d16c:	ldr	w8, [sp, #120]
  40d170:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d174:	b	40e048 <wcrtomb@plt+0xb738>
  40d178:	ldr	w8, [sp, #120]
  40d17c:	tbnz	w8, #0, 40d184 <wcrtomb@plt+0xa874>
  40d180:	b	40d554 <wcrtomb@plt+0xac44>
  40d184:	ldr	w8, [sp, #120]
  40d188:	tbnz	w8, #0, 40d370 <wcrtomb@plt+0xaa60>
  40d18c:	ldr	w8, [sp, #120]
  40d190:	tbnz	w8, #0, 40d198 <wcrtomb@plt+0xa888>
  40d194:	b	40d278 <wcrtomb@plt+0xa968>
  40d198:	ldur	x8, [x29, #-80]
  40d19c:	cmp	x8, #0x0
  40d1a0:	cset	w9, ge  // ge = tcont
  40d1a4:	tbnz	w9, #0, 40d1e0 <wcrtomb@plt+0xa8d0>
  40d1a8:	ldr	w8, [sp, #116]
  40d1ac:	tbnz	w8, #0, 40d1b4 <wcrtomb@plt+0xa8a4>
  40d1b0:	b	40d1c4 <wcrtomb@plt+0xa8b4>
  40d1b4:	ldur	x8, [x29, #-80]
  40d1b8:	cmp	x8, #0xaaa
  40d1bc:	b.lt	40d320 <wcrtomb@plt+0xaa10>  // b.tstop
  40d1c0:	b	40d348 <wcrtomb@plt+0xaa38>
  40d1c4:	ldur	x8, [x29, #-80]
  40d1c8:	mov	x9, #0xffffffffffffffff    	// #-1
  40d1cc:	subs	x8, x9, x8
  40d1d0:	mov	x9, #0xfffffffffffff556    	// #-2730
  40d1d4:	cmp	x9, x8
  40d1d8:	b.le	40d320 <wcrtomb@plt+0xaa10>
  40d1dc:	b	40d348 <wcrtomb@plt+0xaa38>
  40d1e0:	ldr	w8, [sp, #116]
  40d1e4:	tbnz	w8, #0, 40d1ec <wcrtomb@plt+0xa8dc>
  40d1e8:	b	40d1f8 <wcrtomb@plt+0xa8e8>
  40d1ec:	ldr	w8, [sp, #120]
  40d1f0:	tbnz	w8, #0, 40d204 <wcrtomb@plt+0xa8f4>
  40d1f4:	b	40d264 <wcrtomb@plt+0xa954>
  40d1f8:	ldr	w8, [sp, #120]
  40d1fc:	tbnz	w8, #0, 40d204 <wcrtomb@plt+0xa8f4>
  40d200:	b	40d264 <wcrtomb@plt+0xa954>
  40d204:	ldr	w8, [sp, #120]
  40d208:	tbnz	w8, #0, 40d210 <wcrtomb@plt+0xa900>
  40d20c:	b	40d264 <wcrtomb@plt+0xa954>
  40d210:	ldr	w8, [sp, #116]
  40d214:	tbnz	w8, #0, 40d21c <wcrtomb@plt+0xa90c>
  40d218:	b	40d238 <wcrtomb@plt+0xa928>
  40d21c:	ldur	x8, [x29, #-80]
  40d220:	subs	x8, x8, #0x8, lsl #12
  40d224:	mov	x9, xzr
  40d228:	cmp	x9, x8
  40d22c:	cset	w10, lt  // lt = tstop
  40d230:	tbnz	w10, #0, 40d320 <wcrtomb@plt+0xaa10>
  40d234:	b	40d348 <wcrtomb@plt+0xaa38>
  40d238:	ldur	x8, [x29, #-80]
  40d23c:	mov	x9, xzr
  40d240:	cmp	x9, x8
  40d244:	cset	w10, ge  // ge = tcont
  40d248:	tbnz	w10, #0, 40d348 <wcrtomb@plt+0xaa38>
  40d24c:	ldur	x8, [x29, #-80]
  40d250:	subs	x8, x8, #0x1
  40d254:	mov	x9, #0x7fff                	// #32767
  40d258:	cmp	x9, x8
  40d25c:	b.lt	40d320 <wcrtomb@plt+0xaa10>  // b.tstop
  40d260:	b	40d348 <wcrtomb@plt+0xaa38>
  40d264:	ldur	x8, [x29, #-80]
  40d268:	mov	x9, #0xfffffffffffff556    	// #-2730
  40d26c:	cmp	x9, x8
  40d270:	b.lt	40d320 <wcrtomb@plt+0xaa10>  // b.tstop
  40d274:	b	40d348 <wcrtomb@plt+0xaa38>
  40d278:	ldr	w8, [sp, #120]
  40d27c:	tbnz	w8, #0, 40d284 <wcrtomb@plt+0xa974>
  40d280:	b	40d290 <wcrtomb@plt+0xa980>
  40d284:	ldr	w8, [sp, #120]
  40d288:	tbnz	w8, #0, 40d320 <wcrtomb@plt+0xaa10>
  40d28c:	b	40d348 <wcrtomb@plt+0xaa38>
  40d290:	ldur	x8, [x29, #-80]
  40d294:	cmp	x8, #0x0
  40d298:	cset	w9, ge  // ge = tcont
  40d29c:	tbnz	w9, #0, 40d310 <wcrtomb@plt+0xaa00>
  40d2a0:	ldr	w8, [sp, #116]
  40d2a4:	tbnz	w8, #0, 40d2ac <wcrtomb@plt+0xa99c>
  40d2a8:	b	40d2b8 <wcrtomb@plt+0xa9a8>
  40d2ac:	ldr	w8, [sp, #120]
  40d2b0:	tbnz	w8, #0, 40d2c4 <wcrtomb@plt+0xa9b4>
  40d2b4:	b	40d2f8 <wcrtomb@plt+0xa9e8>
  40d2b8:	ldr	w8, [sp, #120]
  40d2bc:	tbnz	w8, #0, 40d2c4 <wcrtomb@plt+0xa9b4>
  40d2c0:	b	40d2f8 <wcrtomb@plt+0xa9e8>
  40d2c4:	ldur	x8, [x29, #-80]
  40d2c8:	mov	x9, #0xffffffffffffffff    	// #-1
  40d2cc:	cmp	x8, x9
  40d2d0:	b.ne	40d2f8 <wcrtomb@plt+0xa9e8>  // b.any
  40d2d4:	ldr	w8, [sp, #116]
  40d2d8:	tbnz	w8, #0, 40d2e0 <wcrtomb@plt+0xa9d0>
  40d2dc:	b	40d2ec <wcrtomb@plt+0xa9dc>
  40d2e0:	ldr	w8, [sp, #120]
  40d2e4:	tbnz	w8, #0, 40d320 <wcrtomb@plt+0xaa10>
  40d2e8:	b	40d348 <wcrtomb@plt+0xaa38>
  40d2ec:	ldr	w8, [sp, #120]
  40d2f0:	tbnz	w8, #0, 40d320 <wcrtomb@plt+0xaa10>
  40d2f4:	b	40d348 <wcrtomb@plt+0xaa38>
  40d2f8:	ldur	x8, [x29, #-80]
  40d2fc:	mov	x9, #0xffffffffffff8000    	// #-32768
  40d300:	sdiv	x8, x9, x8
  40d304:	cmp	x8, #0xc
  40d308:	b.lt	40d320 <wcrtomb@plt+0xaa10>  // b.tstop
  40d30c:	b	40d348 <wcrtomb@plt+0xaa38>
  40d310:	ldur	x8, [x29, #-80]
  40d314:	mov	x9, #0xaaa                 	// #2730
  40d318:	cmp	x9, x8
  40d31c:	b.ge	40d348 <wcrtomb@plt+0xaa38>  // b.tcont
  40d320:	ldur	x8, [x29, #-80]
  40d324:	mov	w9, #0xc                   	// #12
  40d328:	mul	w8, w8, w9
  40d32c:	mov	w0, w8
  40d330:	lsl	x10, x0, #48
  40d334:	asr	x10, x10, #48
  40d338:	stur	x10, [x29, #-104]
  40d33c:	ldr	w8, [sp, #116]
  40d340:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d344:	b	40e048 <wcrtomb@plt+0xb738>
  40d348:	ldur	x8, [x29, #-80]
  40d34c:	mov	w9, #0xc                   	// #12
  40d350:	mul	w8, w8, w9
  40d354:	mov	w0, w8
  40d358:	lsl	x10, x0, #48
  40d35c:	asr	x10, x10, #48
  40d360:	stur	x10, [x29, #-104]
  40d364:	ldr	w8, [sp, #120]
  40d368:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d36c:	b	40e048 <wcrtomb@plt+0xb738>
  40d370:	ldr	w8, [sp, #120]
  40d374:	tbnz	w8, #0, 40d37c <wcrtomb@plt+0xaa6c>
  40d378:	b	40d464 <wcrtomb@plt+0xab54>
  40d37c:	ldur	x8, [x29, #-80]
  40d380:	cmp	x8, #0x0
  40d384:	cset	w9, ge  // ge = tcont
  40d388:	tbnz	w9, #0, 40d3c8 <wcrtomb@plt+0xaab8>
  40d38c:	ldr	w8, [sp, #116]
  40d390:	tbnz	w8, #0, 40d398 <wcrtomb@plt+0xaa88>
  40d394:	b	40d3ac <wcrtomb@plt+0xaa9c>
  40d398:	ldur	x8, [x29, #-80]
  40d39c:	mov	x9, #0x1555                	// #5461
  40d3a0:	cmp	x8, x9
  40d3a4:	b.lt	40d50c <wcrtomb@plt+0xabfc>  // b.tstop
  40d3a8:	b	40d530 <wcrtomb@plt+0xac20>
  40d3ac:	ldur	x8, [x29, #-80]
  40d3b0:	mov	x9, #0xffffffffffffffff    	// #-1
  40d3b4:	subs	x8, x9, x8
  40d3b8:	mov	x9, #0xffffffffffffeaab    	// #-5461
  40d3bc:	cmp	x9, x8
  40d3c0:	b.le	40d50c <wcrtomb@plt+0xabfc>
  40d3c4:	b	40d530 <wcrtomb@plt+0xac20>
  40d3c8:	ldr	w8, [sp, #116]
  40d3cc:	tbnz	w8, #0, 40d3d4 <wcrtomb@plt+0xaac4>
  40d3d0:	b	40d3e0 <wcrtomb@plt+0xaad0>
  40d3d4:	ldr	w8, [sp, #120]
  40d3d8:	tbnz	w8, #0, 40d3ec <wcrtomb@plt+0xaadc>
  40d3dc:	b	40d44c <wcrtomb@plt+0xab3c>
  40d3e0:	ldr	w8, [sp, #120]
  40d3e4:	tbnz	w8, #0, 40d3ec <wcrtomb@plt+0xaadc>
  40d3e8:	b	40d44c <wcrtomb@plt+0xab3c>
  40d3ec:	ldr	w8, [sp, #120]
  40d3f0:	tbnz	w8, #0, 40d3f8 <wcrtomb@plt+0xaae8>
  40d3f4:	b	40d44c <wcrtomb@plt+0xab3c>
  40d3f8:	ldr	w8, [sp, #116]
  40d3fc:	tbnz	w8, #0, 40d404 <wcrtomb@plt+0xaaf4>
  40d400:	b	40d420 <wcrtomb@plt+0xab10>
  40d404:	ldur	x8, [x29, #-80]
  40d408:	mov	x9, xzr
  40d40c:	add	x8, x8, #0x0
  40d410:	cmp	x9, x8
  40d414:	cset	w10, lt  // lt = tstop
  40d418:	tbnz	w10, #0, 40d50c <wcrtomb@plt+0xabfc>
  40d41c:	b	40d530 <wcrtomb@plt+0xac20>
  40d420:	ldur	x8, [x29, #-80]
  40d424:	mov	x9, xzr
  40d428:	cmp	x9, x8
  40d42c:	cset	w10, ge  // ge = tcont
  40d430:	tbnz	w10, #0, 40d530 <wcrtomb@plt+0xac20>
  40d434:	ldur	x8, [x29, #-80]
  40d438:	subs	x8, x8, #0x1
  40d43c:	mov	x9, #0xffffffffffffffff    	// #-1
  40d440:	cmp	x9, x8
  40d444:	b.lt	40d50c <wcrtomb@plt+0xabfc>  // b.tstop
  40d448:	b	40d530 <wcrtomb@plt+0xac20>
  40d44c:	ldur	x8, [x29, #-80]
  40d450:	mov	x9, xzr
  40d454:	cmp	x9, x8
  40d458:	cset	w10, lt  // lt = tstop
  40d45c:	tbnz	w10, #0, 40d50c <wcrtomb@plt+0xabfc>
  40d460:	b	40d530 <wcrtomb@plt+0xac20>
  40d464:	ldr	w8, [sp, #120]
  40d468:	tbnz	w8, #0, 40d470 <wcrtomb@plt+0xab60>
  40d46c:	b	40d47c <wcrtomb@plt+0xab6c>
  40d470:	ldr	w8, [sp, #120]
  40d474:	tbnz	w8, #0, 40d50c <wcrtomb@plt+0xabfc>
  40d478:	b	40d530 <wcrtomb@plt+0xac20>
  40d47c:	ldur	x8, [x29, #-80]
  40d480:	cmp	x8, #0x0
  40d484:	cset	w9, ge  // ge = tcont
  40d488:	tbnz	w9, #0, 40d4fc <wcrtomb@plt+0xabec>
  40d48c:	ldr	w8, [sp, #116]
  40d490:	tbnz	w8, #0, 40d498 <wcrtomb@plt+0xab88>
  40d494:	b	40d4a4 <wcrtomb@plt+0xab94>
  40d498:	ldr	w8, [sp, #120]
  40d49c:	tbnz	w8, #0, 40d4b0 <wcrtomb@plt+0xaba0>
  40d4a0:	b	40d4e4 <wcrtomb@plt+0xabd4>
  40d4a4:	ldr	w8, [sp, #120]
  40d4a8:	tbnz	w8, #0, 40d4b0 <wcrtomb@plt+0xaba0>
  40d4ac:	b	40d4e4 <wcrtomb@plt+0xabd4>
  40d4b0:	ldur	x8, [x29, #-80]
  40d4b4:	mov	x9, #0xffffffffffffffff    	// #-1
  40d4b8:	cmp	x8, x9
  40d4bc:	b.ne	40d4e4 <wcrtomb@plt+0xabd4>  // b.any
  40d4c0:	ldr	w8, [sp, #116]
  40d4c4:	tbnz	w8, #0, 40d4cc <wcrtomb@plt+0xabbc>
  40d4c8:	b	40d4d8 <wcrtomb@plt+0xabc8>
  40d4cc:	ldr	w8, [sp, #116]
  40d4d0:	tbnz	w8, #0, 40d50c <wcrtomb@plt+0xabfc>
  40d4d4:	b	40d530 <wcrtomb@plt+0xac20>
  40d4d8:	ldr	w8, [sp, #116]
  40d4dc:	tbnz	w8, #0, 40d50c <wcrtomb@plt+0xabfc>
  40d4e0:	b	40d530 <wcrtomb@plt+0xac20>
  40d4e4:	ldur	x8, [x29, #-80]
  40d4e8:	mov	x9, xzr
  40d4ec:	sdiv	x8, x9, x8
  40d4f0:	cmp	x8, #0xc
  40d4f4:	b.lt	40d50c <wcrtomb@plt+0xabfc>  // b.tstop
  40d4f8:	b	40d530 <wcrtomb@plt+0xac20>
  40d4fc:	ldur	x8, [x29, #-80]
  40d500:	mov	x9, #0x1555                	// #5461
  40d504:	cmp	x9, x8
  40d508:	b.ge	40d530 <wcrtomb@plt+0xac20>  // b.tcont
  40d50c:	ldur	x8, [x29, #-80]
  40d510:	mov	w9, #0xc                   	// #12
  40d514:	mul	w8, w8, w9
  40d518:	mov	w0, w8
  40d51c:	and	x10, x0, #0xffff
  40d520:	stur	x10, [x29, #-104]
  40d524:	ldr	w8, [sp, #116]
  40d528:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d52c:	b	40e048 <wcrtomb@plt+0xb738>
  40d530:	ldur	x8, [x29, #-80]
  40d534:	mov	w9, #0xc                   	// #12
  40d538:	mul	w8, w8, w9
  40d53c:	mov	w0, w8
  40d540:	and	x10, x0, #0xffff
  40d544:	stur	x10, [x29, #-104]
  40d548:	ldr	w8, [sp, #120]
  40d54c:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d550:	b	40e048 <wcrtomb@plt+0xb738>
  40d554:	ldr	w8, [sp, #120]
  40d558:	tbnz	w8, #0, 40d560 <wcrtomb@plt+0xac50>
  40d55c:	b	40d928 <wcrtomb@plt+0xb018>
  40d560:	ldr	w8, [sp, #116]
  40d564:	tbnz	w8, #0, 40d56c <wcrtomb@plt+0xac5c>
  40d568:	b	40d73c <wcrtomb@plt+0xae2c>
  40d56c:	ldr	w8, [sp, #120]
  40d570:	tbnz	w8, #0, 40d578 <wcrtomb@plt+0xac68>
  40d574:	b	40d648 <wcrtomb@plt+0xad38>
  40d578:	ldur	x8, [x29, #-80]
  40d57c:	cmp	x8, #0x0
  40d580:	cset	w9, ge  // ge = tcont
  40d584:	tbnz	w9, #0, 40d5cc <wcrtomb@plt+0xacbc>
  40d588:	ldr	w8, [sp, #116]
  40d58c:	tbnz	w8, #0, 40d594 <wcrtomb@plt+0xac84>
  40d590:	b	40d5ac <wcrtomb@plt+0xac9c>
  40d594:	ldur	x8, [x29, #-80]
  40d598:	mov	x9, #0xaaaa                	// #43690
  40d59c:	movk	x9, #0xaaa, lsl #16
  40d5a0:	cmp	x8, x9
  40d5a4:	b.lt	40d6f4 <wcrtomb@plt+0xade4>  // b.tstop
  40d5a8:	b	40d718 <wcrtomb@plt+0xae08>
  40d5ac:	ldur	x8, [x29, #-80]
  40d5b0:	mov	x9, #0xffffffffffffffff    	// #-1
  40d5b4:	subs	x8, x9, x8
  40d5b8:	mov	x9, #0xffffffffffff5556    	// #-43690
  40d5bc:	movk	x9, #0xf555, lsl #16
  40d5c0:	cmp	x9, x8
  40d5c4:	b.le	40d6f4 <wcrtomb@plt+0xade4>
  40d5c8:	b	40d718 <wcrtomb@plt+0xae08>
  40d5cc:	ldr	w8, [sp, #120]
  40d5d0:	tbnz	w8, #0, 40d5d8 <wcrtomb@plt+0xacc8>
  40d5d4:	b	40d630 <wcrtomb@plt+0xad20>
  40d5d8:	ldr	w8, [sp, #116]
  40d5dc:	tbnz	w8, #0, 40d5e4 <wcrtomb@plt+0xacd4>
  40d5e0:	b	40d604 <wcrtomb@plt+0xacf4>
  40d5e4:	ldur	x8, [x29, #-80]
  40d5e8:	mov	x9, #0xffffffff80000000    	// #-2147483648
  40d5ec:	add	x8, x8, x9
  40d5f0:	mov	x9, xzr
  40d5f4:	cmp	x9, x8
  40d5f8:	cset	w10, lt  // lt = tstop
  40d5fc:	tbnz	w10, #0, 40d6f4 <wcrtomb@plt+0xade4>
  40d600:	b	40d718 <wcrtomb@plt+0xae08>
  40d604:	ldur	x8, [x29, #-80]
  40d608:	mov	x9, xzr
  40d60c:	cmp	x9, x8
  40d610:	cset	w10, ge  // ge = tcont
  40d614:	tbnz	w10, #0, 40d718 <wcrtomb@plt+0xae08>
  40d618:	ldur	x8, [x29, #-80]
  40d61c:	subs	x8, x8, #0x1
  40d620:	mov	x9, #0x7fffffff            	// #2147483647
  40d624:	cmp	x9, x8
  40d628:	b.lt	40d6f4 <wcrtomb@plt+0xade4>  // b.tstop
  40d62c:	b	40d718 <wcrtomb@plt+0xae08>
  40d630:	ldur	x8, [x29, #-80]
  40d634:	mov	x9, #0xffffffffffff5556    	// #-43690
  40d638:	movk	x9, #0xf555, lsl #16
  40d63c:	cmp	x9, x8
  40d640:	b.lt	40d6f4 <wcrtomb@plt+0xade4>  // b.tstop
  40d644:	b	40d718 <wcrtomb@plt+0xae08>
  40d648:	ldr	w8, [sp, #120]
  40d64c:	tbnz	w8, #0, 40d654 <wcrtomb@plt+0xad44>
  40d650:	b	40d660 <wcrtomb@plt+0xad50>
  40d654:	ldr	w8, [sp, #120]
  40d658:	tbnz	w8, #0, 40d6f4 <wcrtomb@plt+0xade4>
  40d65c:	b	40d718 <wcrtomb@plt+0xae08>
  40d660:	ldur	x8, [x29, #-80]
  40d664:	cmp	x8, #0x0
  40d668:	cset	w9, ge  // ge = tcont
  40d66c:	tbnz	w9, #0, 40d6e0 <wcrtomb@plt+0xadd0>
  40d670:	ldr	w8, [sp, #116]
  40d674:	tbnz	w8, #0, 40d67c <wcrtomb@plt+0xad6c>
  40d678:	b	40d688 <wcrtomb@plt+0xad78>
  40d67c:	ldr	w8, [sp, #120]
  40d680:	tbnz	w8, #0, 40d694 <wcrtomb@plt+0xad84>
  40d684:	b	40d6c8 <wcrtomb@plt+0xadb8>
  40d688:	ldr	w8, [sp, #120]
  40d68c:	tbnz	w8, #0, 40d694 <wcrtomb@plt+0xad84>
  40d690:	b	40d6c8 <wcrtomb@plt+0xadb8>
  40d694:	ldur	x8, [x29, #-80]
  40d698:	mov	x9, #0xffffffffffffffff    	// #-1
  40d69c:	cmp	x8, x9
  40d6a0:	b.ne	40d6c8 <wcrtomb@plt+0xadb8>  // b.any
  40d6a4:	ldr	w8, [sp, #116]
  40d6a8:	tbnz	w8, #0, 40d6b0 <wcrtomb@plt+0xada0>
  40d6ac:	b	40d6bc <wcrtomb@plt+0xadac>
  40d6b0:	ldr	w8, [sp, #120]
  40d6b4:	tbnz	w8, #0, 40d6f4 <wcrtomb@plt+0xade4>
  40d6b8:	b	40d718 <wcrtomb@plt+0xae08>
  40d6bc:	ldr	w8, [sp, #120]
  40d6c0:	tbnz	w8, #0, 40d6f4 <wcrtomb@plt+0xade4>
  40d6c4:	b	40d718 <wcrtomb@plt+0xae08>
  40d6c8:	ldur	x8, [x29, #-80]
  40d6cc:	mov	x9, #0xffffffff80000000    	// #-2147483648
  40d6d0:	sdiv	x8, x9, x8
  40d6d4:	cmp	x8, #0xc
  40d6d8:	b.lt	40d6f4 <wcrtomb@plt+0xade4>  // b.tstop
  40d6dc:	b	40d718 <wcrtomb@plt+0xae08>
  40d6e0:	ldur	x8, [x29, #-80]
  40d6e4:	mov	x9, #0xaaaa                	// #43690
  40d6e8:	movk	x9, #0xaaa, lsl #16
  40d6ec:	cmp	x9, x8
  40d6f0:	b.ge	40d718 <wcrtomb@plt+0xae08>  // b.tcont
  40d6f4:	ldur	x8, [x29, #-80]
  40d6f8:	mov	w9, #0xc                   	// #12
  40d6fc:	mul	w8, w8, w9
  40d700:	mov	w0, w8
  40d704:	sxtw	x10, w0
  40d708:	stur	x10, [x29, #-104]
  40d70c:	ldr	w8, [sp, #116]
  40d710:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d714:	b	40e048 <wcrtomb@plt+0xb738>
  40d718:	ldur	x8, [x29, #-80]
  40d71c:	mov	w9, #0xc                   	// #12
  40d720:	mul	w8, w8, w9
  40d724:	mov	w0, w8
  40d728:	sxtw	x10, w0
  40d72c:	stur	x10, [x29, #-104]
  40d730:	ldr	w8, [sp, #120]
  40d734:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d738:	b	40e048 <wcrtomb@plt+0xb738>
  40d73c:	ldr	w8, [sp, #120]
  40d740:	tbnz	w8, #0, 40d748 <wcrtomb@plt+0xae38>
  40d744:	b	40d834 <wcrtomb@plt+0xaf24>
  40d748:	ldur	x8, [x29, #-80]
  40d74c:	cmp	x8, #0x0
  40d750:	cset	w9, ge  // ge = tcont
  40d754:	tbnz	w9, #0, 40d798 <wcrtomb@plt+0xae88>
  40d758:	ldr	w8, [sp, #120]
  40d75c:	tbnz	w8, #0, 40d764 <wcrtomb@plt+0xae54>
  40d760:	b	40d77c <wcrtomb@plt+0xae6c>
  40d764:	ldur	x8, [x29, #-80]
  40d768:	mov	x9, #0x5555                	// #21845
  40d76c:	movk	x9, #0x1555, lsl #16
  40d770:	cmp	x8, x9
  40d774:	b.lt	40d8e0 <wcrtomb@plt+0xafd0>  // b.tstop
  40d778:	b	40d904 <wcrtomb@plt+0xaff4>
  40d77c:	ldur	x8, [x29, #-80]
  40d780:	mov	x9, #0xffffffffffffffff    	// #-1
  40d784:	subs	x8, x9, x8
  40d788:	mov	x9, #0x1                   	// #1
  40d78c:	cmp	x9, x8
  40d790:	b.le	40d8e0 <wcrtomb@plt+0xafd0>
  40d794:	b	40d904 <wcrtomb@plt+0xaff4>
  40d798:	ldr	w8, [sp, #116]
  40d79c:	tbnz	w8, #0, 40d7a4 <wcrtomb@plt+0xae94>
  40d7a0:	b	40d7b0 <wcrtomb@plt+0xaea0>
  40d7a4:	ldr	w8, [sp, #120]
  40d7a8:	tbnz	w8, #0, 40d7bc <wcrtomb@plt+0xaeac>
  40d7ac:	b	40d81c <wcrtomb@plt+0xaf0c>
  40d7b0:	ldr	w8, [sp, #120]
  40d7b4:	tbnz	w8, #0, 40d7bc <wcrtomb@plt+0xaeac>
  40d7b8:	b	40d81c <wcrtomb@plt+0xaf0c>
  40d7bc:	ldr	w8, [sp, #120]
  40d7c0:	tbnz	w8, #0, 40d7c8 <wcrtomb@plt+0xaeb8>
  40d7c4:	b	40d81c <wcrtomb@plt+0xaf0c>
  40d7c8:	ldr	w8, [sp, #116]
  40d7cc:	tbnz	w8, #0, 40d7d4 <wcrtomb@plt+0xaec4>
  40d7d0:	b	40d7f0 <wcrtomb@plt+0xaee0>
  40d7d4:	ldur	x8, [x29, #-80]
  40d7d8:	mov	x9, xzr
  40d7dc:	add	x8, x8, #0x0
  40d7e0:	cmp	x9, x8
  40d7e4:	cset	w10, lt  // lt = tstop
  40d7e8:	tbnz	w10, #0, 40d8e0 <wcrtomb@plt+0xafd0>
  40d7ec:	b	40d904 <wcrtomb@plt+0xaff4>
  40d7f0:	ldur	x8, [x29, #-80]
  40d7f4:	mov	x9, xzr
  40d7f8:	cmp	x9, x8
  40d7fc:	cset	w10, ge  // ge = tcont
  40d800:	tbnz	w10, #0, 40d904 <wcrtomb@plt+0xaff4>
  40d804:	ldur	x8, [x29, #-80]
  40d808:	subs	x8, x8, #0x1
  40d80c:	mov	x9, #0xffffffffffffffff    	// #-1
  40d810:	cmp	x9, x8
  40d814:	b.lt	40d8e0 <wcrtomb@plt+0xafd0>  // b.tstop
  40d818:	b	40d904 <wcrtomb@plt+0xaff4>
  40d81c:	ldur	x8, [x29, #-80]
  40d820:	mov	x9, xzr
  40d824:	cmp	x9, x8
  40d828:	cset	w10, lt  // lt = tstop
  40d82c:	tbnz	w10, #0, 40d8e0 <wcrtomb@plt+0xafd0>
  40d830:	b	40d904 <wcrtomb@plt+0xaff4>
  40d834:	ldr	w8, [sp, #120]
  40d838:	tbnz	w8, #0, 40d840 <wcrtomb@plt+0xaf30>
  40d83c:	b	40d84c <wcrtomb@plt+0xaf3c>
  40d840:	ldr	w8, [sp, #120]
  40d844:	tbnz	w8, #0, 40d8e0 <wcrtomb@plt+0xafd0>
  40d848:	b	40d904 <wcrtomb@plt+0xaff4>
  40d84c:	ldur	x8, [x29, #-80]
  40d850:	cmp	x8, #0x0
  40d854:	cset	w9, ge  // ge = tcont
  40d858:	tbnz	w9, #0, 40d8cc <wcrtomb@plt+0xafbc>
  40d85c:	ldr	w8, [sp, #116]
  40d860:	tbnz	w8, #0, 40d868 <wcrtomb@plt+0xaf58>
  40d864:	b	40d874 <wcrtomb@plt+0xaf64>
  40d868:	ldr	w8, [sp, #120]
  40d86c:	tbnz	w8, #0, 40d880 <wcrtomb@plt+0xaf70>
  40d870:	b	40d8b4 <wcrtomb@plt+0xafa4>
  40d874:	ldr	w8, [sp, #120]
  40d878:	tbnz	w8, #0, 40d880 <wcrtomb@plt+0xaf70>
  40d87c:	b	40d8b4 <wcrtomb@plt+0xafa4>
  40d880:	ldur	x8, [x29, #-80]
  40d884:	mov	x9, #0xffffffffffffffff    	// #-1
  40d888:	cmp	x8, x9
  40d88c:	b.ne	40d8b4 <wcrtomb@plt+0xafa4>  // b.any
  40d890:	ldr	w8, [sp, #116]
  40d894:	tbnz	w8, #0, 40d89c <wcrtomb@plt+0xaf8c>
  40d898:	b	40d8a8 <wcrtomb@plt+0xaf98>
  40d89c:	ldr	w8, [sp, #116]
  40d8a0:	tbnz	w8, #0, 40d8e0 <wcrtomb@plt+0xafd0>
  40d8a4:	b	40d904 <wcrtomb@plt+0xaff4>
  40d8a8:	ldr	w8, [sp, #116]
  40d8ac:	tbnz	w8, #0, 40d8e0 <wcrtomb@plt+0xafd0>
  40d8b0:	b	40d904 <wcrtomb@plt+0xaff4>
  40d8b4:	ldur	x8, [x29, #-80]
  40d8b8:	mov	x9, xzr
  40d8bc:	sdiv	x8, x9, x8
  40d8c0:	cmp	x8, #0xc
  40d8c4:	b.lt	40d8e0 <wcrtomb@plt+0xafd0>  // b.tstop
  40d8c8:	b	40d904 <wcrtomb@plt+0xaff4>
  40d8cc:	ldur	x8, [x29, #-80]
  40d8d0:	mov	x9, #0x5555                	// #21845
  40d8d4:	movk	x9, #0x1555, lsl #16
  40d8d8:	cmp	x9, x8
  40d8dc:	b.ge	40d904 <wcrtomb@plt+0xaff4>  // b.tcont
  40d8e0:	ldur	x8, [x29, #-80]
  40d8e4:	mov	w9, #0xc                   	// #12
  40d8e8:	mul	w8, w8, w9
  40d8ec:	mov	w10, w8
  40d8f0:	ubfx	x10, x10, #0, #32
  40d8f4:	stur	x10, [x29, #-104]
  40d8f8:	ldr	w8, [sp, #116]
  40d8fc:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d900:	b	40e048 <wcrtomb@plt+0xb738>
  40d904:	ldur	x8, [x29, #-80]
  40d908:	mov	w9, #0xc                   	// #12
  40d90c:	mul	w8, w8, w9
  40d910:	mov	w10, w8
  40d914:	ubfx	x10, x10, #0, #32
  40d918:	stur	x10, [x29, #-104]
  40d91c:	ldr	w8, [sp, #120]
  40d920:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40d924:	b	40e048 <wcrtomb@plt+0xb738>
  40d928:	ldr	w8, [sp, #116]
  40d92c:	tbnz	w8, #0, 40d934 <wcrtomb@plt+0xb024>
  40d930:	b	40dcc0 <wcrtomb@plt+0xb3b0>
  40d934:	ldr	w8, [sp, #116]
  40d938:	tbnz	w8, #0, 40d940 <wcrtomb@plt+0xb030>
  40d93c:	b	40dae4 <wcrtomb@plt+0xb1d4>
  40d940:	ldr	w8, [sp, #120]
  40d944:	tbnz	w8, #0, 40d94c <wcrtomb@plt+0xb03c>
  40d948:	b	40da24 <wcrtomb@plt+0xb114>
  40d94c:	ldur	x8, [x29, #-80]
  40d950:	cmp	x8, #0x0
  40d954:	cset	w9, ge  // ge = tcont
  40d958:	tbnz	w9, #0, 40d9a4 <wcrtomb@plt+0xb094>
  40d95c:	ldr	w8, [sp, #116]
  40d960:	tbnz	w8, #0, 40d968 <wcrtomb@plt+0xb058>
  40d964:	b	40d980 <wcrtomb@plt+0xb070>
  40d968:	ldur	x8, [x29, #-80]
  40d96c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40d970:	movk	x9, #0xaaa, lsl #48
  40d974:	cmp	x8, x9
  40d978:	b.lt	40daac <wcrtomb@plt+0xb19c>  // b.tstop
  40d97c:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40d980:	ldur	x8, [x29, #-80]
  40d984:	mov	x9, #0xffffffffffffffff    	// #-1
  40d988:	subs	x8, x9, x8
  40d98c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40d990:	movk	x9, #0x5556
  40d994:	movk	x9, #0xf555, lsl #48
  40d998:	cmp	x9, x8
  40d99c:	b.le	40daac <wcrtomb@plt+0xb19c>
  40d9a0:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40d9a4:	ldr	w8, [sp, #120]
  40d9a8:	tbnz	w8, #0, 40d9b0 <wcrtomb@plt+0xb0a0>
  40d9ac:	b	40da08 <wcrtomb@plt+0xb0f8>
  40d9b0:	ldr	w8, [sp, #116]
  40d9b4:	tbnz	w8, #0, 40d9bc <wcrtomb@plt+0xb0ac>
  40d9b8:	b	40d9dc <wcrtomb@plt+0xb0cc>
  40d9bc:	ldur	x8, [x29, #-80]
  40d9c0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40d9c4:	add	x8, x8, x9
  40d9c8:	mov	x9, xzr
  40d9cc:	cmp	x9, x8
  40d9d0:	cset	w10, lt  // lt = tstop
  40d9d4:	tbnz	w10, #0, 40daac <wcrtomb@plt+0xb19c>
  40d9d8:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40d9dc:	ldur	x8, [x29, #-80]
  40d9e0:	mov	x9, xzr
  40d9e4:	cmp	x9, x8
  40d9e8:	cset	w10, ge  // ge = tcont
  40d9ec:	tbnz	w10, #0, 40dac8 <wcrtomb@plt+0xb1b8>
  40d9f0:	ldur	x8, [x29, #-80]
  40d9f4:	subs	x8, x8, #0x1
  40d9f8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40d9fc:	cmp	x9, x8
  40da00:	b.lt	40daac <wcrtomb@plt+0xb19c>  // b.tstop
  40da04:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40da08:	ldur	x8, [x29, #-80]
  40da0c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40da10:	movk	x9, #0x5556
  40da14:	movk	x9, #0xf555, lsl #48
  40da18:	cmp	x9, x8
  40da1c:	b.lt	40daac <wcrtomb@plt+0xb19c>  // b.tstop
  40da20:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40da24:	ldr	w8, [sp, #120]
  40da28:	tbnz	w8, #0, 40da30 <wcrtomb@plt+0xb120>
  40da2c:	b	40da3c <wcrtomb@plt+0xb12c>
  40da30:	ldr	w8, [sp, #120]
  40da34:	tbnz	w8, #0, 40daac <wcrtomb@plt+0xb19c>
  40da38:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40da3c:	ldur	x8, [x29, #-80]
  40da40:	cmp	x8, #0x0
  40da44:	cset	w9, ge  // ge = tcont
  40da48:	tbnz	w9, #0, 40da98 <wcrtomb@plt+0xb188>
  40da4c:	ldur	x8, [x29, #-80]
  40da50:	mov	x9, #0xffffffffffffffff    	// #-1
  40da54:	cmp	x8, x9
  40da58:	b.ne	40da80 <wcrtomb@plt+0xb170>  // b.any
  40da5c:	ldr	w8, [sp, #116]
  40da60:	tbnz	w8, #0, 40da68 <wcrtomb@plt+0xb158>
  40da64:	b	40da74 <wcrtomb@plt+0xb164>
  40da68:	ldr	w8, [sp, #120]
  40da6c:	tbnz	w8, #0, 40daac <wcrtomb@plt+0xb19c>
  40da70:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40da74:	ldr	w8, [sp, #120]
  40da78:	tbnz	w8, #0, 40daac <wcrtomb@plt+0xb19c>
  40da7c:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40da80:	ldur	x8, [x29, #-80]
  40da84:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40da88:	sdiv	x8, x9, x8
  40da8c:	cmp	x8, #0xc
  40da90:	b.lt	40daac <wcrtomb@plt+0xb19c>  // b.tstop
  40da94:	b	40dac8 <wcrtomb@plt+0xb1b8>
  40da98:	ldur	x8, [x29, #-80]
  40da9c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40daa0:	movk	x9, #0xaaa, lsl #48
  40daa4:	cmp	x9, x8
  40daa8:	b.ge	40dac8 <wcrtomb@plt+0xb1b8>  // b.tcont
  40daac:	ldur	x8, [x29, #-80]
  40dab0:	mov	x9, #0xc                   	// #12
  40dab4:	mul	x8, x8, x9
  40dab8:	stur	x8, [x29, #-104]
  40dabc:	ldr	w10, [sp, #116]
  40dac0:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40dac4:	b	40e048 <wcrtomb@plt+0xb738>
  40dac8:	ldur	x8, [x29, #-80]
  40dacc:	mov	x9, #0xc                   	// #12
  40dad0:	mul	x8, x8, x9
  40dad4:	stur	x8, [x29, #-104]
  40dad8:	ldr	w10, [sp, #120]
  40dadc:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40dae0:	b	40e048 <wcrtomb@plt+0xb738>
  40dae4:	ldr	w8, [sp, #120]
  40dae8:	tbnz	w8, #0, 40daf0 <wcrtomb@plt+0xb1e0>
  40daec:	b	40dbdc <wcrtomb@plt+0xb2cc>
  40daf0:	ldur	x8, [x29, #-80]
  40daf4:	cmp	x8, #0x0
  40daf8:	cset	w9, ge  // ge = tcont
  40dafc:	tbnz	w9, #0, 40db40 <wcrtomb@plt+0xb230>
  40db00:	ldr	w8, [sp, #120]
  40db04:	tbnz	w8, #0, 40db0c <wcrtomb@plt+0xb1fc>
  40db08:	b	40db24 <wcrtomb@plt+0xb214>
  40db0c:	ldur	x8, [x29, #-80]
  40db10:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40db14:	movk	x9, #0x1555, lsl #48
  40db18:	cmp	x8, x9
  40db1c:	b.cc	40dc88 <wcrtomb@plt+0xb378>  // b.lo, b.ul, b.last
  40db20:	b	40dca4 <wcrtomb@plt+0xb394>
  40db24:	ldur	x8, [x29, #-80]
  40db28:	mov	x9, #0xffffffffffffffff    	// #-1
  40db2c:	subs	x8, x9, x8
  40db30:	mov	x9, #0x1                   	// #1
  40db34:	cmp	x9, x8
  40db38:	b.ls	40dc88 <wcrtomb@plt+0xb378>  // b.plast
  40db3c:	b	40dca4 <wcrtomb@plt+0xb394>
  40db40:	ldr	w8, [sp, #116]
  40db44:	tbnz	w8, #0, 40db4c <wcrtomb@plt+0xb23c>
  40db48:	b	40db58 <wcrtomb@plt+0xb248>
  40db4c:	ldr	w8, [sp, #120]
  40db50:	tbnz	w8, #0, 40db64 <wcrtomb@plt+0xb254>
  40db54:	b	40dbc4 <wcrtomb@plt+0xb2b4>
  40db58:	ldr	w8, [sp, #120]
  40db5c:	tbnz	w8, #0, 40db64 <wcrtomb@plt+0xb254>
  40db60:	b	40dbc4 <wcrtomb@plt+0xb2b4>
  40db64:	ldr	w8, [sp, #120]
  40db68:	tbnz	w8, #0, 40db70 <wcrtomb@plt+0xb260>
  40db6c:	b	40dbc4 <wcrtomb@plt+0xb2b4>
  40db70:	ldr	w8, [sp, #116]
  40db74:	tbnz	w8, #0, 40db7c <wcrtomb@plt+0xb26c>
  40db78:	b	40db98 <wcrtomb@plt+0xb288>
  40db7c:	ldur	x8, [x29, #-80]
  40db80:	mov	x9, xzr
  40db84:	add	x8, x8, #0x0
  40db88:	cmp	x9, x8
  40db8c:	cset	w10, lt  // lt = tstop
  40db90:	tbnz	w10, #0, 40dc88 <wcrtomb@plt+0xb378>
  40db94:	b	40dca4 <wcrtomb@plt+0xb394>
  40db98:	ldur	x8, [x29, #-80]
  40db9c:	mov	x9, xzr
  40dba0:	cmp	x9, x8
  40dba4:	cset	w10, ge  // ge = tcont
  40dba8:	tbnz	w10, #0, 40dca4 <wcrtomb@plt+0xb394>
  40dbac:	ldur	x8, [x29, #-80]
  40dbb0:	subs	x8, x8, #0x1
  40dbb4:	mov	x9, #0xffffffffffffffff    	// #-1
  40dbb8:	cmp	x9, x8
  40dbbc:	b.lt	40dc88 <wcrtomb@plt+0xb378>  // b.tstop
  40dbc0:	b	40dca4 <wcrtomb@plt+0xb394>
  40dbc4:	ldur	x8, [x29, #-80]
  40dbc8:	mov	x9, xzr
  40dbcc:	cmp	x9, x8
  40dbd0:	cset	w10, lt  // lt = tstop
  40dbd4:	tbnz	w10, #0, 40dc88 <wcrtomb@plt+0xb378>
  40dbd8:	b	40dca4 <wcrtomb@plt+0xb394>
  40dbdc:	ldr	w8, [sp, #120]
  40dbe0:	tbnz	w8, #0, 40dbe8 <wcrtomb@plt+0xb2d8>
  40dbe4:	b	40dbf4 <wcrtomb@plt+0xb2e4>
  40dbe8:	ldr	w8, [sp, #120]
  40dbec:	tbnz	w8, #0, 40dc88 <wcrtomb@plt+0xb378>
  40dbf0:	b	40dca4 <wcrtomb@plt+0xb394>
  40dbf4:	ldur	x8, [x29, #-80]
  40dbf8:	cmp	x8, #0x0
  40dbfc:	cset	w9, ge  // ge = tcont
  40dc00:	tbnz	w9, #0, 40dc74 <wcrtomb@plt+0xb364>
  40dc04:	ldr	w8, [sp, #116]
  40dc08:	tbnz	w8, #0, 40dc10 <wcrtomb@plt+0xb300>
  40dc0c:	b	40dc1c <wcrtomb@plt+0xb30c>
  40dc10:	ldr	w8, [sp, #120]
  40dc14:	tbnz	w8, #0, 40dc28 <wcrtomb@plt+0xb318>
  40dc18:	b	40dc5c <wcrtomb@plt+0xb34c>
  40dc1c:	ldr	w8, [sp, #120]
  40dc20:	tbnz	w8, #0, 40dc28 <wcrtomb@plt+0xb318>
  40dc24:	b	40dc5c <wcrtomb@plt+0xb34c>
  40dc28:	ldur	x8, [x29, #-80]
  40dc2c:	mov	x9, #0xffffffffffffffff    	// #-1
  40dc30:	cmp	x8, x9
  40dc34:	b.ne	40dc5c <wcrtomb@plt+0xb34c>  // b.any
  40dc38:	ldr	w8, [sp, #116]
  40dc3c:	tbnz	w8, #0, 40dc44 <wcrtomb@plt+0xb334>
  40dc40:	b	40dc50 <wcrtomb@plt+0xb340>
  40dc44:	ldr	w8, [sp, #116]
  40dc48:	tbnz	w8, #0, 40dc88 <wcrtomb@plt+0xb378>
  40dc4c:	b	40dca4 <wcrtomb@plt+0xb394>
  40dc50:	ldr	w8, [sp, #116]
  40dc54:	tbnz	w8, #0, 40dc88 <wcrtomb@plt+0xb378>
  40dc58:	b	40dca4 <wcrtomb@plt+0xb394>
  40dc5c:	ldur	x8, [x29, #-80]
  40dc60:	mov	x9, xzr
  40dc64:	sdiv	x8, x9, x8
  40dc68:	cmp	x8, #0xc
  40dc6c:	b.lt	40dc88 <wcrtomb@plt+0xb378>  // b.tstop
  40dc70:	b	40dca4 <wcrtomb@plt+0xb394>
  40dc74:	ldur	x8, [x29, #-80]
  40dc78:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40dc7c:	movk	x9, #0x1555, lsl #48
  40dc80:	cmp	x9, x8
  40dc84:	b.cs	40dca4 <wcrtomb@plt+0xb394>  // b.hs, b.nlast
  40dc88:	ldur	x8, [x29, #-80]
  40dc8c:	mov	x9, #0xc                   	// #12
  40dc90:	mul	x8, x8, x9
  40dc94:	stur	x8, [x29, #-104]
  40dc98:	ldr	w10, [sp, #116]
  40dc9c:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40dca0:	b	40e048 <wcrtomb@plt+0xb738>
  40dca4:	ldur	x8, [x29, #-80]
  40dca8:	mov	x9, #0xc                   	// #12
  40dcac:	mul	x8, x8, x9
  40dcb0:	stur	x8, [x29, #-104]
  40dcb4:	ldr	w10, [sp, #120]
  40dcb8:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40dcbc:	b	40e048 <wcrtomb@plt+0xb738>
  40dcc0:	ldr	w8, [sp, #116]
  40dcc4:	tbnz	w8, #0, 40dccc <wcrtomb@plt+0xb3bc>
  40dcc8:	b	40de70 <wcrtomb@plt+0xb560>
  40dccc:	ldr	w8, [sp, #120]
  40dcd0:	tbnz	w8, #0, 40dcd8 <wcrtomb@plt+0xb3c8>
  40dcd4:	b	40ddb0 <wcrtomb@plt+0xb4a0>
  40dcd8:	ldur	x8, [x29, #-80]
  40dcdc:	cmp	x8, #0x0
  40dce0:	cset	w9, ge  // ge = tcont
  40dce4:	tbnz	w9, #0, 40dd30 <wcrtomb@plt+0xb420>
  40dce8:	ldr	w8, [sp, #116]
  40dcec:	tbnz	w8, #0, 40dcf4 <wcrtomb@plt+0xb3e4>
  40dcf0:	b	40dd0c <wcrtomb@plt+0xb3fc>
  40dcf4:	ldur	x8, [x29, #-80]
  40dcf8:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40dcfc:	movk	x9, #0xaaa, lsl #48
  40dd00:	cmp	x8, x9
  40dd04:	b.lt	40de38 <wcrtomb@plt+0xb528>  // b.tstop
  40dd08:	b	40de54 <wcrtomb@plt+0xb544>
  40dd0c:	ldur	x8, [x29, #-80]
  40dd10:	mov	x9, #0xffffffffffffffff    	// #-1
  40dd14:	subs	x8, x9, x8
  40dd18:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40dd1c:	movk	x9, #0x5556
  40dd20:	movk	x9, #0xf555, lsl #48
  40dd24:	cmp	x9, x8
  40dd28:	b.le	40de38 <wcrtomb@plt+0xb528>
  40dd2c:	b	40de54 <wcrtomb@plt+0xb544>
  40dd30:	ldr	w8, [sp, #120]
  40dd34:	tbnz	w8, #0, 40dd3c <wcrtomb@plt+0xb42c>
  40dd38:	b	40dd94 <wcrtomb@plt+0xb484>
  40dd3c:	ldr	w8, [sp, #116]
  40dd40:	tbnz	w8, #0, 40dd48 <wcrtomb@plt+0xb438>
  40dd44:	b	40dd68 <wcrtomb@plt+0xb458>
  40dd48:	ldur	x8, [x29, #-80]
  40dd4c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40dd50:	add	x8, x8, x9
  40dd54:	mov	x9, xzr
  40dd58:	cmp	x9, x8
  40dd5c:	cset	w10, lt  // lt = tstop
  40dd60:	tbnz	w10, #0, 40de38 <wcrtomb@plt+0xb528>
  40dd64:	b	40de54 <wcrtomb@plt+0xb544>
  40dd68:	ldur	x8, [x29, #-80]
  40dd6c:	mov	x9, xzr
  40dd70:	cmp	x9, x8
  40dd74:	cset	w10, ge  // ge = tcont
  40dd78:	tbnz	w10, #0, 40de54 <wcrtomb@plt+0xb544>
  40dd7c:	ldur	x8, [x29, #-80]
  40dd80:	subs	x8, x8, #0x1
  40dd84:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40dd88:	cmp	x9, x8
  40dd8c:	b.lt	40de38 <wcrtomb@plt+0xb528>  // b.tstop
  40dd90:	b	40de54 <wcrtomb@plt+0xb544>
  40dd94:	ldur	x8, [x29, #-80]
  40dd98:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40dd9c:	movk	x9, #0x5556
  40dda0:	movk	x9, #0xf555, lsl #48
  40dda4:	cmp	x9, x8
  40dda8:	b.lt	40de38 <wcrtomb@plt+0xb528>  // b.tstop
  40ddac:	b	40de54 <wcrtomb@plt+0xb544>
  40ddb0:	ldr	w8, [sp, #120]
  40ddb4:	tbnz	w8, #0, 40ddbc <wcrtomb@plt+0xb4ac>
  40ddb8:	b	40ddc8 <wcrtomb@plt+0xb4b8>
  40ddbc:	ldr	w8, [sp, #120]
  40ddc0:	tbnz	w8, #0, 40de38 <wcrtomb@plt+0xb528>
  40ddc4:	b	40de54 <wcrtomb@plt+0xb544>
  40ddc8:	ldur	x8, [x29, #-80]
  40ddcc:	cmp	x8, #0x0
  40ddd0:	cset	w9, ge  // ge = tcont
  40ddd4:	tbnz	w9, #0, 40de24 <wcrtomb@plt+0xb514>
  40ddd8:	ldur	x8, [x29, #-80]
  40dddc:	mov	x9, #0xffffffffffffffff    	// #-1
  40dde0:	cmp	x8, x9
  40dde4:	b.ne	40de0c <wcrtomb@plt+0xb4fc>  // b.any
  40dde8:	ldr	w8, [sp, #116]
  40ddec:	tbnz	w8, #0, 40ddf4 <wcrtomb@plt+0xb4e4>
  40ddf0:	b	40de00 <wcrtomb@plt+0xb4f0>
  40ddf4:	ldr	w8, [sp, #120]
  40ddf8:	tbnz	w8, #0, 40de38 <wcrtomb@plt+0xb528>
  40ddfc:	b	40de54 <wcrtomb@plt+0xb544>
  40de00:	ldr	w8, [sp, #120]
  40de04:	tbnz	w8, #0, 40de38 <wcrtomb@plt+0xb528>
  40de08:	b	40de54 <wcrtomb@plt+0xb544>
  40de0c:	ldur	x8, [x29, #-80]
  40de10:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40de14:	sdiv	x8, x9, x8
  40de18:	cmp	x8, #0xc
  40de1c:	b.lt	40de38 <wcrtomb@plt+0xb528>  // b.tstop
  40de20:	b	40de54 <wcrtomb@plt+0xb544>
  40de24:	ldur	x8, [x29, #-80]
  40de28:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40de2c:	movk	x9, #0xaaa, lsl #48
  40de30:	cmp	x9, x8
  40de34:	b.ge	40de54 <wcrtomb@plt+0xb544>  // b.tcont
  40de38:	ldur	x8, [x29, #-80]
  40de3c:	mov	x9, #0xc                   	// #12
  40de40:	mul	x8, x8, x9
  40de44:	stur	x8, [x29, #-104]
  40de48:	ldr	w10, [sp, #116]
  40de4c:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40de50:	b	40e048 <wcrtomb@plt+0xb738>
  40de54:	ldur	x8, [x29, #-80]
  40de58:	mov	x9, #0xc                   	// #12
  40de5c:	mul	x8, x8, x9
  40de60:	stur	x8, [x29, #-104]
  40de64:	ldr	w10, [sp, #120]
  40de68:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40de6c:	b	40e048 <wcrtomb@plt+0xb738>
  40de70:	ldr	w8, [sp, #120]
  40de74:	tbnz	w8, #0, 40de7c <wcrtomb@plt+0xb56c>
  40de78:	b	40df68 <wcrtomb@plt+0xb658>
  40de7c:	ldur	x8, [x29, #-80]
  40de80:	cmp	x8, #0x0
  40de84:	cset	w9, ge  // ge = tcont
  40de88:	tbnz	w9, #0, 40decc <wcrtomb@plt+0xb5bc>
  40de8c:	ldr	w8, [sp, #120]
  40de90:	tbnz	w8, #0, 40de98 <wcrtomb@plt+0xb588>
  40de94:	b	40deb0 <wcrtomb@plt+0xb5a0>
  40de98:	ldur	x8, [x29, #-80]
  40de9c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40dea0:	movk	x9, #0x1555, lsl #48
  40dea4:	cmp	x8, x9
  40dea8:	b.cc	40e014 <wcrtomb@plt+0xb704>  // b.lo, b.ul, b.last
  40deac:	b	40e030 <wcrtomb@plt+0xb720>
  40deb0:	ldur	x8, [x29, #-80]
  40deb4:	mov	x9, #0xffffffffffffffff    	// #-1
  40deb8:	subs	x8, x9, x8
  40debc:	mov	x9, #0x1                   	// #1
  40dec0:	cmp	x9, x8
  40dec4:	b.ls	40e014 <wcrtomb@plt+0xb704>  // b.plast
  40dec8:	b	40e030 <wcrtomb@plt+0xb720>
  40decc:	ldr	w8, [sp, #116]
  40ded0:	tbnz	w8, #0, 40ded8 <wcrtomb@plt+0xb5c8>
  40ded4:	b	40dee4 <wcrtomb@plt+0xb5d4>
  40ded8:	ldr	w8, [sp, #120]
  40dedc:	tbnz	w8, #0, 40def0 <wcrtomb@plt+0xb5e0>
  40dee0:	b	40df50 <wcrtomb@plt+0xb640>
  40dee4:	ldr	w8, [sp, #120]
  40dee8:	tbnz	w8, #0, 40def0 <wcrtomb@plt+0xb5e0>
  40deec:	b	40df50 <wcrtomb@plt+0xb640>
  40def0:	ldr	w8, [sp, #120]
  40def4:	tbnz	w8, #0, 40defc <wcrtomb@plt+0xb5ec>
  40def8:	b	40df50 <wcrtomb@plt+0xb640>
  40defc:	ldr	w8, [sp, #116]
  40df00:	tbnz	w8, #0, 40df08 <wcrtomb@plt+0xb5f8>
  40df04:	b	40df24 <wcrtomb@plt+0xb614>
  40df08:	ldur	x8, [x29, #-80]
  40df0c:	mov	x9, xzr
  40df10:	add	x8, x8, #0x0
  40df14:	cmp	x9, x8
  40df18:	cset	w10, lt  // lt = tstop
  40df1c:	tbnz	w10, #0, 40e014 <wcrtomb@plt+0xb704>
  40df20:	b	40e030 <wcrtomb@plt+0xb720>
  40df24:	ldur	x8, [x29, #-80]
  40df28:	mov	x9, xzr
  40df2c:	cmp	x9, x8
  40df30:	cset	w10, ge  // ge = tcont
  40df34:	tbnz	w10, #0, 40e030 <wcrtomb@plt+0xb720>
  40df38:	ldur	x8, [x29, #-80]
  40df3c:	subs	x8, x8, #0x1
  40df40:	mov	x9, #0xffffffffffffffff    	// #-1
  40df44:	cmp	x9, x8
  40df48:	b.lt	40e014 <wcrtomb@plt+0xb704>  // b.tstop
  40df4c:	b	40e030 <wcrtomb@plt+0xb720>
  40df50:	ldur	x8, [x29, #-80]
  40df54:	mov	x9, xzr
  40df58:	cmp	x9, x8
  40df5c:	cset	w10, lt  // lt = tstop
  40df60:	tbnz	w10, #0, 40e014 <wcrtomb@plt+0xb704>
  40df64:	b	40e030 <wcrtomb@plt+0xb720>
  40df68:	ldr	w8, [sp, #120]
  40df6c:	tbnz	w8, #0, 40df74 <wcrtomb@plt+0xb664>
  40df70:	b	40df80 <wcrtomb@plt+0xb670>
  40df74:	ldr	w8, [sp, #120]
  40df78:	tbnz	w8, #0, 40e014 <wcrtomb@plt+0xb704>
  40df7c:	b	40e030 <wcrtomb@plt+0xb720>
  40df80:	ldur	x8, [x29, #-80]
  40df84:	cmp	x8, #0x0
  40df88:	cset	w9, ge  // ge = tcont
  40df8c:	tbnz	w9, #0, 40e000 <wcrtomb@plt+0xb6f0>
  40df90:	ldr	w8, [sp, #116]
  40df94:	tbnz	w8, #0, 40df9c <wcrtomb@plt+0xb68c>
  40df98:	b	40dfa8 <wcrtomb@plt+0xb698>
  40df9c:	ldr	w8, [sp, #120]
  40dfa0:	tbnz	w8, #0, 40dfb4 <wcrtomb@plt+0xb6a4>
  40dfa4:	b	40dfe8 <wcrtomb@plt+0xb6d8>
  40dfa8:	ldr	w8, [sp, #120]
  40dfac:	tbnz	w8, #0, 40dfb4 <wcrtomb@plt+0xb6a4>
  40dfb0:	b	40dfe8 <wcrtomb@plt+0xb6d8>
  40dfb4:	ldur	x8, [x29, #-80]
  40dfb8:	mov	x9, #0xffffffffffffffff    	// #-1
  40dfbc:	cmp	x8, x9
  40dfc0:	b.ne	40dfe8 <wcrtomb@plt+0xb6d8>  // b.any
  40dfc4:	ldr	w8, [sp, #116]
  40dfc8:	tbnz	w8, #0, 40dfd0 <wcrtomb@plt+0xb6c0>
  40dfcc:	b	40dfdc <wcrtomb@plt+0xb6cc>
  40dfd0:	ldr	w8, [sp, #116]
  40dfd4:	tbnz	w8, #0, 40e014 <wcrtomb@plt+0xb704>
  40dfd8:	b	40e030 <wcrtomb@plt+0xb720>
  40dfdc:	ldr	w8, [sp, #116]
  40dfe0:	tbnz	w8, #0, 40e014 <wcrtomb@plt+0xb704>
  40dfe4:	b	40e030 <wcrtomb@plt+0xb720>
  40dfe8:	ldur	x8, [x29, #-80]
  40dfec:	mov	x9, xzr
  40dff0:	sdiv	x8, x9, x8
  40dff4:	cmp	x8, #0xc
  40dff8:	b.lt	40e014 <wcrtomb@plt+0xb704>  // b.tstop
  40dffc:	b	40e030 <wcrtomb@plt+0xb720>
  40e000:	ldur	x8, [x29, #-80]
  40e004:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40e008:	movk	x9, #0x1555, lsl #48
  40e00c:	cmp	x9, x8
  40e010:	b.cs	40e030 <wcrtomb@plt+0xb720>  // b.hs, b.nlast
  40e014:	ldur	x8, [x29, #-80]
  40e018:	mov	x9, #0xc                   	// #12
  40e01c:	mul	x8, x8, x9
  40e020:	stur	x8, [x29, #-104]
  40e024:	ldr	w10, [sp, #116]
  40e028:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40e02c:	b	40e048 <wcrtomb@plt+0xb738>
  40e030:	ldur	x8, [x29, #-80]
  40e034:	mov	x9, #0xc                   	// #12
  40e038:	mul	x8, x8, x9
  40e03c:	stur	x8, [x29, #-104]
  40e040:	ldr	w10, [sp, #120]
  40e044:	tbnz	w10, #0, 40e3b4 <wcrtomb@plt+0xbaa4>
  40e048:	ldur	x8, [x29, #-104]
  40e04c:	ldur	x9, [x29, #-32]
  40e050:	cmp	x8, x9
  40e054:	b.ge	40e3b4 <wcrtomb@plt+0xbaa4>  // b.tcont
  40e058:	ldur	x8, [x29, #-24]
  40e05c:	ldur	x9, [x29, #-32]
  40e060:	add	x8, x8, x9
  40e064:	ldur	x9, [x29, #-80]
  40e068:	mov	x10, #0xb                   	// #11
  40e06c:	mneg	x9, x10, x9
  40e070:	add	x8, x8, x9
  40e074:	stur	x8, [x29, #-48]
  40e078:	ldur	x8, [x29, #-64]
  40e07c:	ldur	x9, [x29, #-48]
  40e080:	cmp	x8, x9
  40e084:	b.hi	40e3b4 <wcrtomb@plt+0xbaa4>  // b.pmore
  40e088:	ldur	x8, [x29, #-64]
  40e08c:	stur	x8, [x29, #-112]
  40e090:	ldur	x8, [x29, #-40]
  40e094:	ldur	x9, [x29, #-64]
  40e098:	ldurb	w0, [x9, #-1]
  40e09c:	str	x8, [sp, #96]
  40e0a0:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e0a4:	mov	w1, w0
  40e0a8:	and	x8, x1, #0xff
  40e0ac:	ldr	x9, [sp, #96]
  40e0b0:	ldrb	w10, [x9, x8]
  40e0b4:	stur	w10, [x29, #-68]
  40e0b8:	ldursw	x8, [x29, #-68]
  40e0bc:	ldur	x11, [x29, #-64]
  40e0c0:	add	x8, x11, x8
  40e0c4:	stur	x8, [x29, #-64]
  40e0c8:	ldur	x8, [x29, #-40]
  40e0cc:	ldur	x11, [x29, #-64]
  40e0d0:	ldurb	w0, [x11, #-1]
  40e0d4:	str	x8, [sp, #88]
  40e0d8:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e0dc:	mov	w1, w0
  40e0e0:	and	x8, x1, #0xff
  40e0e4:	ldr	x9, [sp, #88]
  40e0e8:	ldrb	w10, [x9, x8]
  40e0ec:	stur	w10, [x29, #-68]
  40e0f0:	ldursw	x8, [x29, #-68]
  40e0f4:	ldur	x11, [x29, #-64]
  40e0f8:	add	x8, x11, x8
  40e0fc:	stur	x8, [x29, #-64]
  40e100:	ldur	w10, [x29, #-68]
  40e104:	cbz	w10, 40e364 <wcrtomb@plt+0xba54>
  40e108:	ldur	x8, [x29, #-40]
  40e10c:	ldur	x9, [x29, #-64]
  40e110:	ldurb	w0, [x9, #-1]
  40e114:	str	x8, [sp, #80]
  40e118:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e11c:	mov	w1, w0
  40e120:	and	x8, x1, #0xff
  40e124:	ldr	x9, [sp, #80]
  40e128:	ldrb	w10, [x9, x8]
  40e12c:	stur	w10, [x29, #-68]
  40e130:	ldursw	x8, [x29, #-68]
  40e134:	ldur	x11, [x29, #-64]
  40e138:	add	x8, x11, x8
  40e13c:	stur	x8, [x29, #-64]
  40e140:	ldur	x8, [x29, #-40]
  40e144:	ldur	x11, [x29, #-64]
  40e148:	ldurb	w0, [x11, #-1]
  40e14c:	str	x8, [sp, #72]
  40e150:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e154:	mov	w1, w0
  40e158:	and	x8, x1, #0xff
  40e15c:	ldr	x9, [sp, #72]
  40e160:	ldrb	w10, [x9, x8]
  40e164:	stur	w10, [x29, #-68]
  40e168:	ldursw	x8, [x29, #-68]
  40e16c:	ldur	x11, [x29, #-64]
  40e170:	add	x8, x11, x8
  40e174:	stur	x8, [x29, #-64]
  40e178:	ldur	x8, [x29, #-40]
  40e17c:	ldur	x11, [x29, #-64]
  40e180:	ldurb	w0, [x11, #-1]
  40e184:	str	x8, [sp, #64]
  40e188:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e18c:	mov	w1, w0
  40e190:	and	x8, x1, #0xff
  40e194:	ldr	x9, [sp, #64]
  40e198:	ldrb	w10, [x9, x8]
  40e19c:	stur	w10, [x29, #-68]
  40e1a0:	ldursw	x8, [x29, #-68]
  40e1a4:	ldur	x11, [x29, #-64]
  40e1a8:	add	x8, x11, x8
  40e1ac:	stur	x8, [x29, #-64]
  40e1b0:	ldur	w10, [x29, #-68]
  40e1b4:	cbz	w10, 40e364 <wcrtomb@plt+0xba54>
  40e1b8:	ldur	x8, [x29, #-40]
  40e1bc:	ldur	x9, [x29, #-64]
  40e1c0:	ldurb	w0, [x9, #-1]
  40e1c4:	str	x8, [sp, #56]
  40e1c8:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e1cc:	mov	w1, w0
  40e1d0:	and	x8, x1, #0xff
  40e1d4:	ldr	x9, [sp, #56]
  40e1d8:	ldrb	w10, [x9, x8]
  40e1dc:	stur	w10, [x29, #-68]
  40e1e0:	ldursw	x8, [x29, #-68]
  40e1e4:	ldur	x11, [x29, #-64]
  40e1e8:	add	x8, x11, x8
  40e1ec:	stur	x8, [x29, #-64]
  40e1f0:	ldur	x8, [x29, #-40]
  40e1f4:	ldur	x11, [x29, #-64]
  40e1f8:	ldurb	w0, [x11, #-1]
  40e1fc:	str	x8, [sp, #48]
  40e200:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e204:	mov	w1, w0
  40e208:	and	x8, x1, #0xff
  40e20c:	ldr	x9, [sp, #48]
  40e210:	ldrb	w10, [x9, x8]
  40e214:	stur	w10, [x29, #-68]
  40e218:	ldursw	x8, [x29, #-68]
  40e21c:	ldur	x11, [x29, #-64]
  40e220:	add	x8, x11, x8
  40e224:	stur	x8, [x29, #-64]
  40e228:	ldur	x8, [x29, #-40]
  40e22c:	ldur	x11, [x29, #-64]
  40e230:	ldurb	w0, [x11, #-1]
  40e234:	str	x8, [sp, #40]
  40e238:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e23c:	mov	w1, w0
  40e240:	and	x8, x1, #0xff
  40e244:	ldr	x9, [sp, #40]
  40e248:	ldrb	w10, [x9, x8]
  40e24c:	stur	w10, [x29, #-68]
  40e250:	ldursw	x8, [x29, #-68]
  40e254:	ldur	x11, [x29, #-64]
  40e258:	add	x8, x11, x8
  40e25c:	stur	x8, [x29, #-64]
  40e260:	ldur	w10, [x29, #-68]
  40e264:	cbz	w10, 40e364 <wcrtomb@plt+0xba54>
  40e268:	ldur	x8, [x29, #-40]
  40e26c:	ldur	x9, [x29, #-64]
  40e270:	ldurb	w0, [x9, #-1]
  40e274:	str	x8, [sp, #32]
  40e278:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e27c:	mov	w1, w0
  40e280:	and	x8, x1, #0xff
  40e284:	ldr	x9, [sp, #32]
  40e288:	ldrb	w10, [x9, x8]
  40e28c:	stur	w10, [x29, #-68]
  40e290:	ldursw	x8, [x29, #-68]
  40e294:	ldur	x11, [x29, #-64]
  40e298:	add	x8, x11, x8
  40e29c:	stur	x8, [x29, #-64]
  40e2a0:	ldur	x8, [x29, #-40]
  40e2a4:	ldur	x11, [x29, #-64]
  40e2a8:	ldurb	w0, [x11, #-1]
  40e2ac:	str	x8, [sp, #24]
  40e2b0:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e2b4:	mov	w1, w0
  40e2b8:	and	x8, x1, #0xff
  40e2bc:	ldr	x9, [sp, #24]
  40e2c0:	ldrb	w10, [x9, x8]
  40e2c4:	stur	w10, [x29, #-68]
  40e2c8:	ldursw	x8, [x29, #-68]
  40e2cc:	ldur	x11, [x29, #-64]
  40e2d0:	add	x8, x11, x8
  40e2d4:	stur	x8, [x29, #-64]
  40e2d8:	mov	w10, #0x80                  	// #128
  40e2dc:	stur	w10, [x29, #-116]
  40e2e0:	ldursw	x8, [x29, #-116]
  40e2e4:	ldur	x11, [x29, #-64]
  40e2e8:	ldur	x12, [x29, #-112]
  40e2ec:	subs	x11, x11, x12
  40e2f0:	cmp	x8, x11
  40e2f4:	b.gt	40e2fc <wcrtomb@plt+0xb9ec>
  40e2f8:	b	40e078 <wcrtomb@plt+0xb768>
  40e2fc:	ldur	x8, [x29, #-64]
  40e300:	mov	x9, #0xffffffffffffffff    	// #-1
  40e304:	add	x8, x8, x9
  40e308:	stur	x8, [x29, #-64]
  40e30c:	ldur	x0, [x29, #-64]
  40e310:	ldur	x8, [x29, #-24]
  40e314:	ldur	x9, [x29, #-32]
  40e318:	add	x8, x8, x9
  40e31c:	ldur	x9, [x29, #-64]
  40e320:	subs	x1, x8, x9
  40e324:	ldur	x2, [x29, #-16]
  40e328:	bl	40e4b0 <wcrtomb@plt+0xbba0>
  40e32c:	stur	x0, [x29, #-64]
  40e330:	ldur	x8, [x29, #-64]
  40e334:	cbnz	x8, 40e344 <wcrtomb@plt+0xba34>
  40e338:	mov	x8, #0xffffffffffffffff    	// #-1
  40e33c:	stur	x8, [x29, #-8]
  40e340:	b	40e4a0 <wcrtomb@plt+0xbb90>
  40e344:	ldur	x8, [x29, #-64]
  40e348:	add	x8, x8, #0x1
  40e34c:	stur	x8, [x29, #-64]
  40e350:	ldur	x8, [x29, #-48]
  40e354:	ldur	x9, [x29, #-64]
  40e358:	cmp	x8, x9
  40e35c:	b.hi	40e364 <wcrtomb@plt+0xba54>  // b.pmore
  40e360:	b	40e3b4 <wcrtomb@plt+0xbaa4>
  40e364:	ldur	x1, [x29, #-48]
  40e368:	ldur	x2, [x29, #-56]
  40e36c:	ldur	x3, [x29, #-80]
  40e370:	ldur	x4, [x29, #-88]
  40e374:	ldurb	w5, [x29, #-89]
  40e378:	ldurb	w6, [x29, #-90]
  40e37c:	ldur	x7, [x29, #-40]
  40e380:	ldur	x8, [x29, #-16]
  40e384:	sub	x0, x29, #0x40
  40e388:	mov	x9, sp
  40e38c:	str	x8, [x9]
  40e390:	bl	40e62c <wcrtomb@plt+0xbd1c>
  40e394:	tbnz	w0, #0, 40e39c <wcrtomb@plt+0xba8c>
  40e398:	b	40e3b0 <wcrtomb@plt+0xbaa0>
  40e39c:	ldur	x8, [x29, #-64]
  40e3a0:	ldur	x9, [x29, #-24]
  40e3a4:	subs	x8, x8, x9
  40e3a8:	stur	x8, [x29, #-8]
  40e3ac:	b	40e4a0 <wcrtomb@plt+0xbb90>
  40e3b0:	b	40e078 <wcrtomb@plt+0xb768>
  40e3b4:	ldur	x8, [x29, #-24]
  40e3b8:	ldur	x9, [x29, #-32]
  40e3bc:	add	x8, x8, x9
  40e3c0:	stur	x8, [x29, #-48]
  40e3c4:	ldur	x8, [x29, #-40]
  40e3c8:	ldur	x9, [x29, #-64]
  40e3cc:	ldurb	w0, [x9, #-1]
  40e3d0:	str	x8, [sp, #16]
  40e3d4:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e3d8:	mov	w1, w0
  40e3dc:	and	x8, x1, #0xff
  40e3e0:	ldr	x9, [sp, #16]
  40e3e4:	ldrb	w10, [x9, x8]
  40e3e8:	stur	w10, [x29, #-68]
  40e3ec:	ldursw	x8, [x29, #-68]
  40e3f0:	ldur	x9, [x29, #-48]
  40e3f4:	ldur	x10, [x29, #-64]
  40e3f8:	subs	x9, x9, x10
  40e3fc:	cmp	x8, x9
  40e400:	b.gt	40e498 <wcrtomb@plt+0xbb88>
  40e404:	ldur	x8, [x29, #-40]
  40e408:	ldursw	x9, [x29, #-68]
  40e40c:	ldur	x10, [x29, #-64]
  40e410:	add	x9, x10, x9
  40e414:	stur	x9, [x29, #-64]
  40e418:	ldurb	w0, [x9, #-1]
  40e41c:	str	x8, [sp, #8]
  40e420:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e424:	mov	w1, w0
  40e428:	and	x8, x1, #0xff
  40e42c:	ldr	x9, [sp, #8]
  40e430:	ldrb	w11, [x9, x8]
  40e434:	stur	w11, [x29, #-68]
  40e438:	ldur	w11, [x29, #-68]
  40e43c:	cbz	w11, 40e444 <wcrtomb@plt+0xbb34>
  40e440:	b	40e3ec <wcrtomb@plt+0xbadc>
  40e444:	ldur	x1, [x29, #-48]
  40e448:	ldur	x2, [x29, #-56]
  40e44c:	ldur	x3, [x29, #-80]
  40e450:	ldur	x4, [x29, #-88]
  40e454:	ldurb	w5, [x29, #-89]
  40e458:	ldurb	w6, [x29, #-90]
  40e45c:	ldur	x8, [x29, #-16]
  40e460:	sub	x0, x29, #0x40
  40e464:	mov	x9, xzr
  40e468:	mov	x7, x9
  40e46c:	mov	x9, sp
  40e470:	str	x8, [x9]
  40e474:	bl	40e62c <wcrtomb@plt+0xbd1c>
  40e478:	tbnz	w0, #0, 40e480 <wcrtomb@plt+0xbb70>
  40e47c:	b	40e494 <wcrtomb@plt+0xbb84>
  40e480:	ldur	x8, [x29, #-64]
  40e484:	ldur	x9, [x29, #-24]
  40e488:	subs	x8, x8, x9
  40e48c:	stur	x8, [x29, #-8]
  40e490:	b	40e4a0 <wcrtomb@plt+0xbb90>
  40e494:	b	40e3ec <wcrtomb@plt+0xbadc>
  40e498:	mov	x8, #0xffffffffffffffff    	// #-1
  40e49c:	stur	x8, [x29, #-8]
  40e4a0:	ldur	x0, [x29, #-8]
  40e4a4:	ldp	x29, x30, [sp, #240]
  40e4a8:	add	sp, sp, #0x100
  40e4ac:	ret
  40e4b0:	sub	sp, sp, #0x60
  40e4b4:	stp	x29, x30, [sp, #80]
  40e4b8:	add	x29, sp, #0x50
  40e4bc:	stur	x0, [x29, #-16]
  40e4c0:	stur	x1, [x29, #-24]
  40e4c4:	stur	x2, [x29, #-32]
  40e4c8:	ldur	x8, [x29, #-16]
  40e4cc:	ldur	x9, [x29, #-24]
  40e4d0:	add	x8, x8, x9
  40e4d4:	str	x8, [sp, #40]
  40e4d8:	ldur	x8, [x29, #-32]
  40e4dc:	ldr	w10, [x8, #2452]
  40e4e0:	cmp	w10, #0x0
  40e4e4:	cset	w10, ge  // ge = tcont
  40e4e8:	tbnz	w10, #0, 40e554 <wcrtomb@plt+0xbc44>
  40e4ec:	ldur	x8, [x29, #-16]
  40e4f0:	ldr	x9, [sp, #40]
  40e4f4:	cmp	x8, x9
  40e4f8:	b.cs	40e550 <wcrtomb@plt+0xbc40>  // b.hs, b.nlast
  40e4fc:	ldur	x8, [x29, #-32]
  40e500:	add	x8, x8, #0x178
  40e504:	ldur	x9, [x29, #-16]
  40e508:	ldrb	w0, [x9]
  40e50c:	str	x8, [sp, #16]
  40e510:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e514:	mov	w1, w0
  40e518:	and	x8, x1, #0xff
  40e51c:	mov	x9, #0x8                   	// #8
  40e520:	mul	x8, x9, x8
  40e524:	ldr	x9, [sp, #16]
  40e528:	add	x8, x9, x8
  40e52c:	ldr	x8, [x8]
  40e530:	cbz	x8, 40e540 <wcrtomb@plt+0xbc30>
  40e534:	ldur	x8, [x29, #-16]
  40e538:	stur	x8, [x29, #-8]
  40e53c:	b	40e61c <wcrtomb@plt+0xbd0c>
  40e540:	ldur	x8, [x29, #-16]
  40e544:	add	x8, x8, #0x1
  40e548:	stur	x8, [x29, #-16]
  40e54c:	b	40e4ec <wcrtomb@plt+0xbbdc>
  40e550:	b	40e614 <wcrtomb@plt+0xbd04>
  40e554:	mov	w8, #0x2                   	// #2
  40e558:	str	w8, [sp, #36]
  40e55c:	ldrsw	x9, [sp, #36]
  40e560:	mov	x10, #0x8                   	// #8
  40e564:	mul	x9, x9, x10
  40e568:	str	x9, [sp, #24]
  40e56c:	ldur	x8, [x29, #-16]
  40e570:	ldr	x9, [sp, #40]
  40e574:	cmp	x8, x9
  40e578:	b.cs	40e614 <wcrtomb@plt+0xbd04>  // b.hs, b.nlast
  40e57c:	ldur	x8, [x29, #-32]
  40e580:	add	x8, x8, #0x178
  40e584:	ldur	x9, [x29, #-16]
  40e588:	ldrb	w0, [x9]
  40e58c:	str	x8, [sp, #8]
  40e590:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e594:	mov	w1, w0
  40e598:	and	x8, x1, #0xff
  40e59c:	mov	x9, #0x8                   	// #8
  40e5a0:	mul	x8, x9, x8
  40e5a4:	ldr	x9, [sp, #8]
  40e5a8:	add	x8, x9, x8
  40e5ac:	ldr	x8, [x8]
  40e5b0:	cbz	x8, 40e5c0 <wcrtomb@plt+0xbcb0>
  40e5b4:	ldur	x8, [x29, #-16]
  40e5b8:	stur	x8, [x29, #-8]
  40e5bc:	b	40e61c <wcrtomb@plt+0xbd0c>
  40e5c0:	ldur	x8, [x29, #-16]
  40e5c4:	add	x8, x8, #0x1
  40e5c8:	stur	x8, [x29, #-16]
  40e5cc:	ldur	x8, [x29, #-16]
  40e5d0:	ldr	x9, [sp, #24]
  40e5d4:	udiv	x10, x8, x9
  40e5d8:	mul	x9, x10, x9
  40e5dc:	subs	x8, x8, x9
  40e5e0:	cbnz	x8, 40e610 <wcrtomb@plt+0xbd00>
  40e5e4:	ldur	x0, [x29, #-16]
  40e5e8:	ldur	x8, [x29, #-32]
  40e5ec:	ldr	w1, [x8, #2448]
  40e5f0:	ldur	x8, [x29, #-32]
  40e5f4:	ldr	w2, [x8, #2452]
  40e5f8:	ldr	x8, [sp, #40]
  40e5fc:	ldur	x9, [x29, #-16]
  40e600:	subs	x3, x8, x9
  40e604:	bl	4200a8 <wcrtomb@plt+0x1d798>
  40e608:	stur	x0, [x29, #-8]
  40e60c:	b	40e61c <wcrtomb@plt+0xbd0c>
  40e610:	b	40e56c <wcrtomb@plt+0xbc5c>
  40e614:	mov	x8, xzr
  40e618:	stur	x8, [x29, #-8]
  40e61c:	ldur	x0, [x29, #-8]
  40e620:	ldp	x29, x30, [sp, #80]
  40e624:	add	sp, sp, #0x60
  40e628:	ret
  40e62c:	sub	sp, sp, #0xa0
  40e630:	stp	x29, x30, [sp, #144]
  40e634:	add	x29, sp, #0x90
  40e638:	ldr	x8, [x29, #16]
  40e63c:	stur	x0, [x29, #-16]
  40e640:	stur	x1, [x29, #-24]
  40e644:	stur	x2, [x29, #-32]
  40e648:	stur	x3, [x29, #-40]
  40e64c:	stur	x4, [x29, #-48]
  40e650:	sturb	w5, [x29, #-49]
  40e654:	sturb	w6, [x29, #-50]
  40e658:	stur	x7, [x29, #-64]
  40e65c:	str	x8, [sp, #72]
  40e660:	ldur	x8, [x29, #-16]
  40e664:	ldr	x8, [x8]
  40e668:	str	x8, [sp, #64]
  40e66c:	ldur	x8, [x29, #-40]
  40e670:	str	x8, [sp, #56]
  40e674:	str	xzr, [sp, #48]
  40e678:	mov	x8, #0x2                   	// #2
  40e67c:	str	x8, [sp, #40]
  40e680:	ldur	x0, [x29, #-48]
  40e684:	ldr	x8, [sp, #64]
  40e688:	ldurb	w1, [x8, #-2]
  40e68c:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40e690:	and	w9, w0, #0xff
  40e694:	ldurb	w10, [x29, #-50]
  40e698:	cmp	w9, w10
  40e69c:	b.ne	40e7ec <wcrtomb@plt+0xbedc>  // b.any
  40e6a0:	ldr	x8, [sp, #40]
  40e6a4:	add	x8, x8, #0x1
  40e6a8:	str	x8, [sp, #40]
  40e6ac:	ldr	x9, [sp, #56]
  40e6b0:	cmp	x8, x9
  40e6b4:	b.gt	40e714 <wcrtomb@plt+0xbe04>
  40e6b8:	ldur	x0, [x29, #-48]
  40e6bc:	ldr	x8, [sp, #64]
  40e6c0:	ldr	x9, [sp, #40]
  40e6c4:	mov	x10, xzr
  40e6c8:	subs	x9, x10, x9
  40e6cc:	ldrb	w1, [x8, x9]
  40e6d0:	str	x10, [sp, #32]
  40e6d4:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40e6d8:	and	w11, w0, #0xff
  40e6dc:	ldur	x0, [x29, #-48]
  40e6e0:	ldur	x8, [x29, #-32]
  40e6e4:	ldr	x9, [sp, #40]
  40e6e8:	ldr	x10, [sp, #32]
  40e6ec:	subs	x9, x10, x9
  40e6f0:	ldrb	w1, [x8, x9]
  40e6f4:	str	w11, [sp, #28]
  40e6f8:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40e6fc:	and	w11, w0, #0xff
  40e700:	ldr	w12, [sp, #28]
  40e704:	cmp	w12, w11
  40e708:	b.eq	40e710 <wcrtomb@plt+0xbe00>  // b.none
  40e70c:	b	40e714 <wcrtomb@plt+0xbe04>
  40e710:	b	40e6a0 <wcrtomb@plt+0xbd90>
  40e714:	ldr	x8, [sp, #40]
  40e718:	ldr	x9, [sp, #56]
  40e71c:	cmp	x8, x9
  40e720:	b.le	40e7ec <wcrtomb@plt+0xbedc>
  40e724:	ldr	x8, [sp, #56]
  40e728:	ldr	x9, [sp, #48]
  40e72c:	add	x8, x8, x9
  40e730:	add	x8, x8, #0x1
  40e734:	str	x8, [sp, #40]
  40e738:	ldr	x8, [sp, #40]
  40e73c:	ldur	x9, [x29, #-40]
  40e740:	cmp	x8, x9
  40e744:	b.gt	40e7b0 <wcrtomb@plt+0xbea0>
  40e748:	ldur	x0, [x29, #-48]
  40e74c:	ldr	x8, [sp, #64]
  40e750:	ldr	x9, [sp, #40]
  40e754:	mov	x10, xzr
  40e758:	subs	x9, x10, x9
  40e75c:	ldrb	w1, [x8, x9]
  40e760:	str	x10, [sp, #16]
  40e764:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40e768:	and	w11, w0, #0xff
  40e76c:	ldur	x0, [x29, #-48]
  40e770:	ldur	x8, [x29, #-32]
  40e774:	ldr	x9, [sp, #40]
  40e778:	ldr	x10, [sp, #16]
  40e77c:	subs	x9, x10, x9
  40e780:	ldrb	w1, [x8, x9]
  40e784:	str	w11, [sp, #12]
  40e788:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40e78c:	and	w11, w0, #0xff
  40e790:	ldr	w12, [sp, #12]
  40e794:	cmp	w12, w11
  40e798:	b.eq	40e7a0 <wcrtomb@plt+0xbe90>  // b.none
  40e79c:	b	40e7b0 <wcrtomb@plt+0xbea0>
  40e7a0:	ldr	x8, [sp, #40]
  40e7a4:	add	x8, x8, #0x1
  40e7a8:	str	x8, [sp, #40]
  40e7ac:	b	40e738 <wcrtomb@plt+0xbe28>
  40e7b0:	ldr	x8, [sp, #40]
  40e7b4:	ldur	x9, [x29, #-40]
  40e7b8:	cmp	x8, x9
  40e7bc:	b.le	40e7ec <wcrtomb@plt+0xbedc>
  40e7c0:	ldr	x8, [sp, #64]
  40e7c4:	ldur	x9, [x29, #-40]
  40e7c8:	mov	x10, xzr
  40e7cc:	subs	x9, x10, x9
  40e7d0:	add	x8, x8, x9
  40e7d4:	ldur	x9, [x29, #-16]
  40e7d8:	str	x8, [x9]
  40e7dc:	mov	w11, #0x1                   	// #1
  40e7e0:	and	w11, w11, #0x1
  40e7e4:	sturb	w11, [x29, #-1]
  40e7e8:	b	40e8b0 <wcrtomb@plt+0xbfa0>
  40e7ec:	ldr	x8, [sp, #72]
  40e7f0:	ldr	x8, [x8, #2432]
  40e7f4:	ldr	x9, [sp, #40]
  40e7f8:	subs	x9, x9, #0x2
  40e7fc:	ldr	x8, [x8, x9, lsl #3]
  40e800:	str	x8, [sp, #56]
  40e804:	ldr	x9, [sp, #64]
  40e808:	add	x8, x9, x8
  40e80c:	str	x8, [sp, #64]
  40e810:	ldr	x8, [sp, #64]
  40e814:	ldur	x9, [x29, #-24]
  40e818:	cmp	x8, x9
  40e81c:	b.ls	40e824 <wcrtomb@plt+0xbf14>  // b.plast
  40e820:	b	40e898 <wcrtomb@plt+0xbf88>
  40e824:	ldur	x0, [x29, #-48]
  40e828:	ldr	x8, [sp, #64]
  40e82c:	ldurb	w1, [x8, #-1]
  40e830:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40e834:	and	w9, w0, #0xff
  40e838:	ldurb	w10, [x29, #-49]
  40e83c:	cmp	w9, w10
  40e840:	b.eq	40e888 <wcrtomb@plt+0xbf78>  // b.none
  40e844:	ldur	x8, [x29, #-64]
  40e848:	cbz	x8, 40e884 <wcrtomb@plt+0xbf74>
  40e84c:	ldur	x8, [x29, #-64]
  40e850:	ldr	x9, [sp, #64]
  40e854:	ldurb	w0, [x9, #-1]
  40e858:	str	x8, [sp]
  40e85c:	bl	40cb28 <wcrtomb@plt+0xa218>
  40e860:	mov	w1, w0
  40e864:	and	x8, x1, #0xff
  40e868:	ldr	x9, [sp]
  40e86c:	ldrb	w10, [x9, x8]
  40e870:	ldr	x8, [sp, #64]
  40e874:	mov	w1, w10
  40e878:	sxtw	x11, w1
  40e87c:	add	x8, x8, x11
  40e880:	str	x8, [sp, #64]
  40e884:	b	40e898 <wcrtomb@plt+0xbf88>
  40e888:	ldr	x8, [sp, #40]
  40e88c:	subs	x8, x8, #0x1
  40e890:	str	x8, [sp, #48]
  40e894:	b	40e678 <wcrtomb@plt+0xbd68>
  40e898:	ldr	x8, [sp, #64]
  40e89c:	ldur	x9, [x29, #-16]
  40e8a0:	str	x8, [x9]
  40e8a4:	mov	w10, wzr
  40e8a8:	and	w10, w10, #0x1
  40e8ac:	sturb	w10, [x29, #-1]
  40e8b0:	ldurb	w8, [x29, #-1]
  40e8b4:	and	w0, w8, #0x1
  40e8b8:	ldp	x29, x30, [sp, #144]
  40e8bc:	add	sp, sp, #0xa0
  40e8c0:	ret
  40e8c4:	sub	sp, sp, #0xc0
  40e8c8:	stp	x29, x30, [sp, #176]
  40e8cc:	add	x29, sp, #0xb0
  40e8d0:	stur	x0, [x29, #-16]
  40e8d4:	stur	x1, [x29, #-24]
  40e8d8:	stur	x2, [x29, #-32]
  40e8dc:	stur	x3, [x29, #-40]
  40e8e0:	and	w8, w4, #0x1
  40e8e4:	sturb	w8, [x29, #-41]
  40e8e8:	ldur	x9, [x29, #-32]
  40e8ec:	ldur	x10, [x29, #-16]
  40e8f0:	ldr	x10, [x10, #104]
  40e8f4:	cmp	x9, x10
  40e8f8:	b.ge	40e908 <wcrtomb@plt+0xbff8>  // b.tcont
  40e8fc:	mov	x8, #0xffffffffffffffff    	// #-1
  40e900:	stur	x8, [x29, #-8]
  40e904:	b	40edc4 <wcrtomb@plt+0xc4b4>
  40e908:	ldur	x8, [x29, #-16]
  40e90c:	ldr	x8, [x8, #2440]
  40e910:	str	x8, [sp, #72]
  40e914:	ldur	x8, [x29, #-16]
  40e918:	ldr	x8, [x8, #96]
  40e91c:	stur	x8, [x29, #-56]
  40e920:	ldur	x8, [x29, #-24]
  40e924:	ldur	x9, [x29, #-32]
  40e928:	add	x8, x8, x9
  40e92c:	str	x8, [sp, #88]
  40e930:	ldur	x8, [x29, #-24]
  40e934:	stur	x8, [x29, #-72]
  40e938:	ldur	x8, [x29, #-56]
  40e93c:	ldr	x8, [x8]
  40e940:	cbnz	x8, 40eba0 <wcrtomb@plt+0xc290>
  40e944:	ldur	x8, [x29, #-16]
  40e948:	ldr	w9, [x8, #2448]
  40e94c:	str	w9, [sp, #64]
  40e950:	ldr	w8, [sp, #64]
  40e954:	cmp	w8, #0x0
  40e958:	cset	w8, ge  // ge = tcont
  40e95c:	tbnz	w8, #0, 40e9e0 <wcrtomb@plt+0xc0d0>
  40e960:	ldur	x8, [x29, #-16]
  40e964:	add	x8, x8, #0x178
  40e968:	ldr	x0, [sp, #72]
  40e96c:	ldur	x9, [x29, #-72]
  40e970:	add	x10, x9, #0x1
  40e974:	stur	x10, [x29, #-72]
  40e978:	ldrb	w1, [x9]
  40e97c:	str	x8, [sp, #32]
  40e980:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40e984:	strb	w0, [sp, #71]
  40e988:	mov	w2, w0
  40e98c:	and	x8, x2, #0xff
  40e990:	mov	x9, #0x8                   	// #8
  40e994:	mul	x8, x9, x8
  40e998:	ldr	x9, [sp, #32]
  40e99c:	add	x8, x9, x8
  40e9a0:	ldr	x8, [x8]
  40e9a4:	stur	x8, [x29, #-56]
  40e9a8:	cmp	x8, #0x0
  40e9ac:	cset	w11, ne  // ne = any
  40e9b0:	eor	w11, w11, #0x1
  40e9b4:	tbnz	w11, #0, 40e9bc <wcrtomb@plt+0xc0ac>
  40e9b8:	b	40e9dc <wcrtomb@plt+0xc0cc>
  40e9bc:	ldur	x8, [x29, #-72]
  40e9c0:	ldr	x9, [sp, #88]
  40e9c4:	cmp	x8, x9
  40e9c8:	b.cc	40e9d8 <wcrtomb@plt+0xc0c8>  // b.lo, b.ul, b.last
  40e9cc:	mov	x8, #0xffffffffffffffff    	// #-1
  40e9d0:	stur	x8, [x29, #-8]
  40e9d4:	b	40edc4 <wcrtomb@plt+0xc4b4>
  40e9d8:	b	40e960 <wcrtomb@plt+0xc050>
  40e9dc:	b	40ea50 <wcrtomb@plt+0xc140>
  40e9e0:	ldur	x0, [x29, #-72]
  40e9e4:	ldr	x8, [sp, #88]
  40e9e8:	ldur	x9, [x29, #-72]
  40e9ec:	subs	x1, x8, x9
  40e9f0:	ldur	x2, [x29, #-16]
  40e9f4:	bl	40e4b0 <wcrtomb@plt+0xbba0>
  40e9f8:	stur	x0, [x29, #-72]
  40e9fc:	ldur	x8, [x29, #-72]
  40ea00:	cbnz	x8, 40ea10 <wcrtomb@plt+0xc100>
  40ea04:	mov	x8, #0xffffffffffffffff    	// #-1
  40ea08:	stur	x8, [x29, #-8]
  40ea0c:	b	40edc4 <wcrtomb@plt+0xc4b4>
  40ea10:	ldr	x0, [sp, #72]
  40ea14:	ldur	x8, [x29, #-72]
  40ea18:	add	x9, x8, #0x1
  40ea1c:	stur	x9, [x29, #-72]
  40ea20:	ldrb	w1, [x8]
  40ea24:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40ea28:	strb	w0, [sp, #71]
  40ea2c:	ldur	x8, [x29, #-16]
  40ea30:	add	x8, x8, #0x178
  40ea34:	ldrb	w10, [sp, #71]
  40ea38:	mov	w9, w10
  40ea3c:	mov	x11, #0x8                   	// #8
  40ea40:	mul	x9, x11, x9
  40ea44:	add	x8, x8, x9
  40ea48:	ldr	x8, [x8]
  40ea4c:	stur	x8, [x29, #-56]
  40ea50:	ldur	x8, [x29, #-56]
  40ea54:	ldr	x8, [x8]
  40ea58:	cbz	x8, 40ea60 <wcrtomb@plt+0xc150>
  40ea5c:	b	40eba0 <wcrtomb@plt+0xc290>
  40ea60:	ldur	x8, [x29, #-72]
  40ea64:	ldr	x9, [sp, #88]
  40ea68:	cmp	x8, x9
  40ea6c:	b.cc	40ea7c <wcrtomb@plt+0xc16c>  // b.lo, b.ul, b.last
  40ea70:	mov	x8, #0xffffffffffffffff    	// #-1
  40ea74:	stur	x8, [x29, #-8]
  40ea78:	b	40edc4 <wcrtomb@plt+0xc4b4>
  40ea7c:	ldr	x0, [sp, #72]
  40ea80:	ldur	x8, [x29, #-72]
  40ea84:	add	x9, x8, #0x1
  40ea88:	stur	x9, [x29, #-72]
  40ea8c:	ldrb	w1, [x8]
  40ea90:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40ea94:	strb	w0, [sp, #71]
  40ea98:	ldur	x8, [x29, #-56]
  40ea9c:	ldr	x8, [x8, #8]
  40eaa0:	str	x8, [sp, #80]
  40eaa4:	ldrb	w8, [sp, #71]
  40eaa8:	ldr	x9, [sp, #80]
  40eaac:	ldrb	w10, [x9, #24]
  40eab0:	cmp	w8, w10
  40eab4:	b.eq	40eb8c <wcrtomb@plt+0xc27c>  // b.none
  40eab8:	ldrb	w8, [sp, #71]
  40eabc:	ldr	x9, [sp, #80]
  40eac0:	ldrb	w10, [x9, #24]
  40eac4:	cmp	w8, w10
  40eac8:	b.ge	40eadc <wcrtomb@plt+0xc1cc>  // b.tcont
  40eacc:	ldr	x8, [sp, #80]
  40ead0:	ldr	x8, [x8]
  40ead4:	str	x8, [sp, #24]
  40ead8:	b	40eae8 <wcrtomb@plt+0xc1d8>
  40eadc:	ldr	x8, [sp, #80]
  40eae0:	ldr	x8, [x8, #8]
  40eae4:	str	x8, [sp, #24]
  40eae8:	ldr	x8, [sp, #24]
  40eaec:	str	x8, [sp, #80]
  40eaf0:	ldr	x8, [sp, #80]
  40eaf4:	cbnz	x8, 40eb88 <wcrtomb@plt+0xc278>
  40eaf8:	ldur	x8, [x29, #-56]
  40eafc:	ldr	x8, [x8, #32]
  40eb00:	stur	x8, [x29, #-56]
  40eb04:	ldur	x8, [x29, #-56]
  40eb08:	cbnz	x8, 40eb5c <wcrtomb@plt+0xc24c>
  40eb0c:	ldur	x8, [x29, #-16]
  40eb10:	add	x8, x8, #0x178
  40eb14:	ldrb	w9, [sp, #71]
  40eb18:	mov	w10, w9
  40eb1c:	mov	x11, #0x8                   	// #8
  40eb20:	mul	x10, x11, x10
  40eb24:	add	x8, x8, x10
  40eb28:	ldr	x8, [x8]
  40eb2c:	stur	x8, [x29, #-56]
  40eb30:	ldur	x8, [x29, #-56]
  40eb34:	cbz	x8, 40eb3c <wcrtomb@plt+0xc22c>
  40eb38:	b	40eb98 <wcrtomb@plt+0xc288>
  40eb3c:	ldur	x8, [x29, #-72]
  40eb40:	ldr	x9, [sp, #88]
  40eb44:	cmp	x8, x9
  40eb48:	b.cc	40eb58 <wcrtomb@plt+0xc248>  // b.lo, b.ul, b.last
  40eb4c:	mov	x8, #0xffffffffffffffff    	// #-1
  40eb50:	stur	x8, [x29, #-8]
  40eb54:	b	40edc4 <wcrtomb@plt+0xc4b4>
  40eb58:	b	40eb9c <wcrtomb@plt+0xc28c>
  40eb5c:	ldur	x8, [x29, #-56]
  40eb60:	ldr	x8, [x8]
  40eb64:	cbz	x8, 40eb7c <wcrtomb@plt+0xc26c>
  40eb68:	ldur	x8, [x29, #-72]
  40eb6c:	mov	x9, #0xffffffffffffffff    	// #-1
  40eb70:	add	x8, x8, x9
  40eb74:	stur	x8, [x29, #-72]
  40eb78:	b	40eba0 <wcrtomb@plt+0xc290>
  40eb7c:	ldur	x8, [x29, #-56]
  40eb80:	ldr	x8, [x8, #8]
  40eb84:	str	x8, [sp, #80]
  40eb88:	b	40eaa4 <wcrtomb@plt+0xc194>
  40eb8c:	ldr	x8, [sp, #80]
  40eb90:	ldr	x8, [x8, #16]
  40eb94:	stur	x8, [x29, #-56]
  40eb98:	b	40ea50 <wcrtomb@plt+0xc140>
  40eb9c:	b	40e950 <wcrtomb@plt+0xc040>
  40eba0:	ldur	x8, [x29, #-56]
  40eba4:	stur	x8, [x29, #-64]
  40eba8:	ldur	x8, [x29, #-64]
  40ebac:	ldr	x8, [x8]
  40ebb0:	mov	x9, #0xffffffffffffffff    	// #-1
  40ebb4:	cmp	x8, x9
  40ebb8:	b.ne	40ebcc <wcrtomb@plt+0xc2bc>  // b.any
  40ebbc:	ldur	x8, [x29, #-64]
  40ebc0:	ldr	x8, [x8, #32]
  40ebc4:	stur	x8, [x29, #-64]
  40ebc8:	b	40eba8 <wcrtomb@plt+0xc298>
  40ebcc:	ldur	x8, [x29, #-72]
  40ebd0:	ldur	x9, [x29, #-64]
  40ebd4:	ldr	x9, [x9, #40]
  40ebd8:	mov	x10, xzr
  40ebdc:	subs	x9, x10, x9
  40ebe0:	add	x8, x8, x9
  40ebe4:	stur	x8, [x29, #-80]
  40ebe8:	ldurb	w11, [x29, #-41]
  40ebec:	tbnz	w11, #0, 40ebf4 <wcrtomb@plt+0xc2e4>
  40ebf0:	b	40ed78 <wcrtomb@plt+0xc468>
  40ebf4:	ldur	x8, [x29, #-72]
  40ebf8:	ldr	x9, [sp, #88]
  40ebfc:	cmp	x8, x9
  40ec00:	b.cs	40ed78 <wcrtomb@plt+0xc468>  // b.hs, b.nlast
  40ec04:	ldr	x0, [sp, #72]
  40ec08:	ldur	x8, [x29, #-72]
  40ec0c:	add	x9, x8, #0x1
  40ec10:	stur	x9, [x29, #-72]
  40ec14:	ldrb	w1, [x8]
  40ec18:	bl	40cb4c <wcrtomb@plt+0xa23c>
  40ec1c:	strb	w0, [sp, #47]
  40ec20:	ldur	x8, [x29, #-56]
  40ec24:	ldr	x8, [x8, #8]
  40ec28:	str	x8, [sp, #80]
  40ec2c:	ldr	x8, [sp, #80]
  40ec30:	mov	w9, #0x0                   	// #0
  40ec34:	str	w9, [sp, #20]
  40ec38:	cbz	x8, 40ec54 <wcrtomb@plt+0xc344>
  40ec3c:	ldrb	w8, [sp, #47]
  40ec40:	ldr	x9, [sp, #80]
  40ec44:	ldrb	w10, [x9, #24]
  40ec48:	cmp	w8, w10
  40ec4c:	cset	w8, ne  // ne = any
  40ec50:	str	w8, [sp, #20]
  40ec54:	ldr	w8, [sp, #20]
  40ec58:	tbnz	w8, #0, 40ec60 <wcrtomb@plt+0xc350>
  40ec5c:	b	40ec9c <wcrtomb@plt+0xc38c>
  40ec60:	ldrb	w8, [sp, #47]
  40ec64:	ldr	x9, [sp, #80]
  40ec68:	ldrb	w10, [x9, #24]
  40ec6c:	cmp	w8, w10
  40ec70:	b.ge	40ec84 <wcrtomb@plt+0xc374>  // b.tcont
  40ec74:	ldr	x8, [sp, #80]
  40ec78:	ldr	x8, [x8]
  40ec7c:	str	x8, [sp, #8]
  40ec80:	b	40ec90 <wcrtomb@plt+0xc380>
  40ec84:	ldr	x8, [sp, #80]
  40ec88:	ldr	x8, [x8, #8]
  40ec8c:	str	x8, [sp, #8]
  40ec90:	ldr	x8, [sp, #8]
  40ec94:	str	x8, [sp, #80]
  40ec98:	b	40ec2c <wcrtomb@plt+0xc31c>
  40ec9c:	ldr	x8, [sp, #80]
  40eca0:	mov	w9, #0x0                   	// #0
  40eca4:	str	w9, [sp, #4]
  40eca8:	cbnz	x8, 40ece0 <wcrtomb@plt+0xc3d0>
  40ecac:	ldur	x8, [x29, #-56]
  40ecb0:	ldr	x8, [x8, #32]
  40ecb4:	stur	x8, [x29, #-56]
  40ecb8:	mov	w9, #0x0                   	// #0
  40ecbc:	str	w9, [sp, #4]
  40ecc0:	cbz	x8, 40ece0 <wcrtomb@plt+0xc3d0>
  40ecc4:	ldur	x8, [x29, #-64]
  40ecc8:	ldr	x8, [x8, #40]
  40eccc:	ldur	x9, [x29, #-56]
  40ecd0:	ldr	x9, [x9, #40]
  40ecd4:	cmp	x8, x9
  40ecd8:	cset	w10, le
  40ecdc:	str	w10, [sp, #4]
  40ece0:	ldr	w8, [sp, #4]
  40ece4:	tbnz	w8, #0, 40ec20 <wcrtomb@plt+0xc310>
  40ece8:	ldr	x8, [sp, #80]
  40ecec:	cbnz	x8, 40ecf4 <wcrtomb@plt+0xc3e4>
  40ecf0:	b	40ed78 <wcrtomb@plt+0xc468>
  40ecf4:	ldr	x8, [sp, #80]
  40ecf8:	ldr	x8, [x8, #16]
  40ecfc:	stur	x8, [x29, #-56]
  40ed00:	ldur	x8, [x29, #-56]
  40ed04:	ldr	x8, [x8]
  40ed08:	cbz	x8, 40ed74 <wcrtomb@plt+0xc464>
  40ed0c:	ldur	x8, [x29, #-56]
  40ed10:	str	x8, [sp, #56]
  40ed14:	ldr	x8, [sp, #56]
  40ed18:	ldr	x8, [x8]
  40ed1c:	mov	x9, #0xffffffffffffffff    	// #-1
  40ed20:	cmp	x8, x9
  40ed24:	b.ne	40ed38 <wcrtomb@plt+0xc428>  // b.any
  40ed28:	ldr	x8, [sp, #56]
  40ed2c:	ldr	x8, [x8, #32]
  40ed30:	str	x8, [sp, #56]
  40ed34:	b	40ed14 <wcrtomb@plt+0xc404>
  40ed38:	ldur	x8, [x29, #-72]
  40ed3c:	ldr	x9, [sp, #56]
  40ed40:	ldr	x9, [x9, #40]
  40ed44:	mov	x10, xzr
  40ed48:	subs	x9, x10, x9
  40ed4c:	add	x8, x8, x9
  40ed50:	str	x8, [sp, #48]
  40ed54:	ldr	x8, [sp, #48]
  40ed58:	ldur	x9, [x29, #-80]
  40ed5c:	cmp	x8, x9
  40ed60:	b.hi	40ed74 <wcrtomb@plt+0xc464>  // b.pmore
  40ed64:	ldr	x8, [sp, #48]
  40ed68:	stur	x8, [x29, #-80]
  40ed6c:	ldr	x8, [sp, #56]
  40ed70:	stur	x8, [x29, #-64]
  40ed74:	b	40ebf4 <wcrtomb@plt+0xc2e4>
  40ed78:	ldur	x8, [x29, #-64]
  40ed7c:	ldr	x8, [x8]
  40ed80:	mov	x9, #0x2                   	// #2
  40ed84:	udiv	x8, x8, x9
  40ed88:	ldur	x9, [x29, #-40]
  40ed8c:	str	x8, [x9]
  40ed90:	ldur	x8, [x29, #-80]
  40ed94:	ldur	x9, [x29, #-24]
  40ed98:	subs	x8, x8, x9
  40ed9c:	ldur	x9, [x29, #-40]
  40eda0:	str	x8, [x9, #8]
  40eda4:	ldur	x8, [x29, #-64]
  40eda8:	ldr	x8, [x8, #40]
  40edac:	ldur	x9, [x29, #-40]
  40edb0:	str	x8, [x9, #16]
  40edb4:	ldur	x8, [x29, #-80]
  40edb8:	ldur	x9, [x29, #-24]
  40edbc:	subs	x8, x8, x9
  40edc0:	stur	x8, [x29, #-8]
  40edc4:	ldur	x0, [x29, #-8]
  40edc8:	ldp	x29, x30, [sp, #176]
  40edcc:	add	sp, sp, #0xc0
  40edd0:	ret
  40edd4:	sub	sp, sp, #0x10
  40edd8:	strb	w0, [sp, #15]
  40eddc:	ldrb	w0, [sp, #15]
  40ede0:	add	sp, sp, #0x10
  40ede4:	ret
  40ede8:	sub	sp, sp, #0x50
  40edec:	stp	x29, x30, [sp, #64]
  40edf0:	add	x29, sp, #0x40
  40edf4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40edf8:	add	x8, x8, #0x8c8
  40edfc:	add	x8, x8, #0x3
  40ee00:	mov	x9, #0xfffffffffffffffe    	// #-2
  40ee04:	stur	x0, [x29, #-8]
  40ee08:	stur	x1, [x29, #-16]
  40ee0c:	stur	x2, [x29, #-24]
  40ee10:	ldur	x10, [x29, #-8]
  40ee14:	ldrb	w0, [x10]
  40ee18:	str	x8, [sp, #24]
  40ee1c:	str	x9, [sp, #16]
  40ee20:	bl	40edd4 <wcrtomb@plt+0xc4c4>
  40ee24:	mov	w1, w0
  40ee28:	and	x8, x1, #0xff
  40ee2c:	ldr	x9, [sp, #24]
  40ee30:	ldrsb	x8, [x9, x8]
  40ee34:	str	x8, [sp, #32]
  40ee38:	ldr	x8, [sp, #32]
  40ee3c:	ldr	x10, [sp, #16]
  40ee40:	cmp	x8, x10
  40ee44:	b.ne	40ee60 <wcrtomb@plt+0xc550>  // b.any
  40ee48:	ldur	x0, [x29, #-8]
  40ee4c:	ldur	x1, [x29, #-16]
  40ee50:	ldur	x2, [x29, #-24]
  40ee54:	bl	42718c <wcrtomb@plt+0x2487c>
  40ee58:	str	x0, [sp, #8]
  40ee5c:	b	40ee68 <wcrtomb@plt+0xc558>
  40ee60:	ldr	x8, [sp, #32]
  40ee64:	str	x8, [sp, #8]
  40ee68:	ldr	x8, [sp, #8]
  40ee6c:	mov	x0, x8
  40ee70:	ldp	x29, x30, [sp, #64]
  40ee74:	add	sp, sp, #0x50
  40ee78:	ret
  40ee7c:	sub	sp, sp, #0x20
  40ee80:	stp	x29, x30, [sp, #16]
  40ee84:	add	x29, sp, #0x10
  40ee88:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40ee8c:	add	x8, x8, #0x8c8
  40ee90:	add	x8, x8, #0x104
  40ee94:	stur	wzr, [x29, #-4]
  40ee98:	str	x8, [sp]
  40ee9c:	ldur	w8, [x29, #-4]
  40eea0:	cmp	w8, #0x100
  40eea4:	b.ge	40eee0 <wcrtomb@plt+0xc5d0>  // b.tcont
  40eea8:	ldursw	x8, [x29, #-4]
  40eeac:	ldr	x9, [sp]
  40eeb0:	ldr	w0, [x9, x8, lsl #2]
  40eeb4:	bl	40eeec <wcrtomb@plt+0xc5dc>
  40eeb8:	ldursw	x8, [x29, #-4]
  40eebc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40eec0:	add	x9, x9, #0x643
  40eec4:	add	x8, x9, x8
  40eec8:	and	w10, w0, #0x1
  40eecc:	strb	w10, [x8]
  40eed0:	ldur	w8, [x29, #-4]
  40eed4:	add	w8, w8, #0x1
  40eed8:	stur	w8, [x29, #-4]
  40eedc:	b	40ee9c <wcrtomb@plt+0xc58c>
  40eee0:	ldp	x29, x30, [sp, #16]
  40eee4:	add	sp, sp, #0x20
  40eee8:	ret
  40eeec:	sub	sp, sp, #0x20
  40eef0:	stp	x29, x30, [sp, #16]
  40eef4:	add	x29, sp, #0x10
  40eef8:	stur	w0, [x29, #-4]
  40eefc:	ldur	w8, [x29, #-4]
  40ef00:	mov	w9, #0x1                   	// #1
  40ef04:	cmp	w8, #0x5f
  40ef08:	str	w9, [sp, #8]
  40ef0c:	b.eq	40ef24 <wcrtomb@plt+0xc614>  // b.none
  40ef10:	ldur	w0, [x29, #-4]
  40ef14:	bl	4027b0 <iswalnum@plt>
  40ef18:	cmp	w0, #0x0
  40ef1c:	cset	w8, ne  // ne = any
  40ef20:	str	w8, [sp, #8]
  40ef24:	ldr	w8, [sp, #8]
  40ef28:	and	w0, w8, #0x1
  40ef2c:	ldp	x29, x30, [sp, #16]
  40ef30:	add	sp, sp, #0x20
  40ef34:	ret
  40ef38:	sub	sp, sp, #0x50
  40ef3c:	stp	x29, x30, [sp, #64]
  40ef40:	add	x29, sp, #0x40
  40ef44:	mov	x8, xzr
  40ef48:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40ef4c:	add	x9, x9, #0xdce
  40ef50:	adrp	x10, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40ef54:	add	x10, x10, #0x8c8
  40ef58:	add	x10, x10, #0x104
  40ef5c:	mov	w11, #0x1                   	// #1
  40ef60:	and	w11, w0, w11
  40ef64:	sturb	w11, [x29, #-1]
  40ef68:	stur	x8, [x29, #-16]
  40ef6c:	ldrb	w11, [x9]
  40ef70:	str	x10, [sp, #8]
  40ef74:	tbnz	w11, #0, 40ef7c <wcrtomb@plt+0xc66c>
  40ef78:	b	40f07c <wcrtomb@plt+0xc76c>
  40ef7c:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  40ef80:	cmp	x0, #0x1
  40ef84:	b.eq	40ef94 <wcrtomb@plt+0xc684>  // b.none
  40ef88:	ldurb	w8, [x29, #-1]
  40ef8c:	tbnz	w8, #0, 40ef94 <wcrtomb@plt+0xc684>
  40ef90:	b	40f07c <wcrtomb@plt+0xc76c>
  40ef94:	mov	x0, #0x100                 	// #256
  40ef98:	bl	423058 <wcrtomb@plt+0x20748>
  40ef9c:	stur	x0, [x29, #-16]
  40efa0:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  40efa4:	cmp	x0, #0x1
  40efa8:	b.ne	40efe8 <wcrtomb@plt+0xc6d8>  // b.any
  40efac:	stur	wzr, [x29, #-20]
  40efb0:	ldur	w8, [x29, #-20]
  40efb4:	cmp	w8, #0x100
  40efb8:	b.ge	40efe4 <wcrtomb@plt+0xc6d4>  // b.tcont
  40efbc:	ldur	w0, [x29, #-20]
  40efc0:	bl	402460 <toupper@plt>
  40efc4:	ldur	x8, [x29, #-16]
  40efc8:	ldursw	x9, [x29, #-20]
  40efcc:	add	x8, x8, x9
  40efd0:	strb	w0, [x8]
  40efd4:	ldur	w8, [x29, #-20]
  40efd8:	add	w8, w8, #0x1
  40efdc:	stur	w8, [x29, #-20]
  40efe0:	b	40efb0 <wcrtomb@plt+0xc6a0>
  40efe4:	b	40f07c <wcrtomb@plt+0xc76c>
  40efe8:	stur	wzr, [x29, #-24]
  40efec:	ldur	w8, [x29, #-24]
  40eff0:	cmp	w8, #0x100
  40eff4:	b.ge	40f07c <wcrtomb@plt+0xc76c>  // b.tcont
  40eff8:	ldursw	x8, [x29, #-24]
  40effc:	ldr	x9, [sp, #8]
  40f000:	ldr	w10, [x9, x8, lsl #2]
  40f004:	stur	w10, [x29, #-28]
  40f008:	ldur	w0, [x29, #-28]
  40f00c:	bl	402810 <towupper@plt>
  40f010:	str	w0, [sp, #32]
  40f014:	ldr	w10, [sp, #32]
  40f018:	ldur	w11, [x29, #-28]
  40f01c:	cmp	w10, w11
  40f020:	b.eq	40f058 <wcrtomb@plt+0xc748>  // b.none
  40f024:	add	x2, sp, #0x18
  40f028:	str	xzr, [sp, #24]
  40f02c:	ldur	x8, [x29, #-16]
  40f030:	ldursw	x9, [x29, #-24]
  40f034:	add	x0, x8, x9
  40f038:	ldr	w1, [sp, #32]
  40f03c:	bl	402910 <wcrtomb@plt>
  40f040:	str	x0, [sp, #16]
  40f044:	ldr	x8, [sp, #16]
  40f048:	cmp	x8, #0x1
  40f04c:	b.eq	40f054 <wcrtomb@plt+0xc744>  // b.none
  40f050:	bl	402610 <abort@plt>
  40f054:	b	40f06c <wcrtomb@plt+0xc75c>
  40f058:	ldur	w8, [x29, #-24]
  40f05c:	ldur	x9, [x29, #-16]
  40f060:	ldursw	x10, [x29, #-24]
  40f064:	add	x9, x9, x10
  40f068:	strb	w8, [x9]
  40f06c:	ldur	w8, [x29, #-24]
  40f070:	add	w8, w8, #0x1
  40f074:	stur	w8, [x29, #-24]
  40f078:	b	40efec <wcrtomb@plt+0xc6dc>
  40f07c:	ldur	x0, [x29, #-16]
  40f080:	bl	40adb4 <wcrtomb@plt+0x84a4>
  40f084:	ldp	x29, x30, [sp, #64]
  40f088:	add	sp, sp, #0x50
  40f08c:	ret
  40f090:	sub	sp, sp, #0x80
  40f094:	stp	x29, x30, [sp, #112]
  40f098:	add	x29, sp, #0x70
  40f09c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40f0a0:	add	x8, x8, #0x8c8
  40f0a4:	stur	x0, [x29, #-16]
  40f0a8:	stur	x1, [x29, #-24]
  40f0ac:	stur	x2, [x29, #-32]
  40f0b0:	stur	x3, [x29, #-40]
  40f0b4:	ldur	x9, [x29, #-16]
  40f0b8:	ldr	x9, [x9]
  40f0bc:	stur	x9, [x29, #-48]
  40f0c0:	ldur	x9, [x29, #-48]
  40f0c4:	str	x9, [sp, #56]
  40f0c8:	ldur	x9, [x29, #-32]
  40f0cc:	ldur	x10, [x29, #-48]
  40f0d0:	cmp	x9, x10
  40f0d4:	str	x8, [sp, #16]
  40f0d8:	b.hi	40f0f0 <wcrtomb@plt+0xc7e0>  // b.pmore
  40f0dc:	ldur	x8, [x29, #-32]
  40f0e0:	ldur	x9, [x29, #-48]
  40f0e4:	subs	x8, x8, x9
  40f0e8:	stur	x8, [x29, #-8]
  40f0ec:	b	40f2bc <wcrtomb@plt+0xc9ac>
  40f0f0:	ldr	x8, [sp, #16]
  40f0f4:	ldrb	w9, [x8, #2]
  40f0f8:	tbnz	w9, #0, 40f100 <wcrtomb@plt+0xc7f0>
  40f0fc:	b	40f204 <wcrtomb@plt+0xc8f4>
  40f100:	ldur	x8, [x29, #-32]
  40f104:	stur	x8, [x29, #-48]
  40f108:	mov	x8, #0x1                   	// #1
  40f10c:	str	x8, [sp, #48]
  40f110:	ldur	x8, [x29, #-32]
  40f114:	ldur	x9, [x29, #-40]
  40f118:	cmp	x8, x9
  40f11c:	b.cs	40f200 <wcrtomb@plt+0xc8f0>  // b.hs, b.nlast
  40f120:	ldur	x8, [x29, #-32]
  40f124:	ldrb	w9, [x8]
  40f128:	and	w9, w9, #0xc0
  40f12c:	cmp	w9, #0x80
  40f130:	b.ne	40f200 <wcrtomb@plt+0xc8f0>  // b.any
  40f134:	mov	w8, #0x1                   	// #1
  40f138:	str	w8, [sp, #44]
  40f13c:	ldr	w8, [sp, #44]
  40f140:	cmp	w8, #0x3
  40f144:	b.gt	40f200 <wcrtomb@plt+0xc8f0>
  40f148:	ldur	x8, [x29, #-32]
  40f14c:	ldr	w9, [sp, #44]
  40f150:	mov	w10, wzr
  40f154:	subs	w9, w10, w9
  40f158:	ldrb	w9, [x8, w9, sxtw]
  40f15c:	and	w9, w9, #0xc0
  40f160:	cmp	w9, #0x80
  40f164:	b.eq	40f1f0 <wcrtomb@plt+0xc8e0>  // b.none
  40f168:	add	x2, sp, #0x20
  40f16c:	str	xzr, [sp, #32]
  40f170:	ldur	x8, [x29, #-32]
  40f174:	ldrsw	x9, [sp, #44]
  40f178:	mov	x10, xzr
  40f17c:	subs	x9, x10, x9
  40f180:	add	x0, x8, x9
  40f184:	ldur	x8, [x29, #-40]
  40f188:	ldur	x9, [x29, #-32]
  40f18c:	ldrsw	x11, [sp, #44]
  40f190:	subs	x10, x10, x11
  40f194:	add	x9, x9, x10
  40f198:	subs	x1, x8, x9
  40f19c:	bl	40ede8 <wcrtomb@plt+0xc4d8>
  40f1a0:	str	x0, [sp, #48]
  40f1a4:	ldrsw	x8, [sp, #44]
  40f1a8:	ldr	x9, [sp, #48]
  40f1ac:	cmp	x8, x9
  40f1b0:	b.cs	40f1ec <wcrtomb@plt+0xc8dc>  // b.hs, b.nlast
  40f1b4:	ldr	x8, [sp, #48]
  40f1b8:	mov	x9, #0xfffffffffffffffe    	// #-2
  40f1bc:	cmp	x8, x9
  40f1c0:	b.cs	40f1ec <wcrtomb@plt+0xc8dc>  // b.hs, b.nlast
  40f1c4:	ldur	x8, [x29, #-32]
  40f1c8:	ldrsw	x9, [sp, #44]
  40f1cc:	mov	x10, xzr
  40f1d0:	subs	x9, x10, x9
  40f1d4:	add	x8, x8, x9
  40f1d8:	str	x8, [sp, #56]
  40f1dc:	ldr	x8, [sp, #56]
  40f1e0:	ldr	x9, [sp, #48]
  40f1e4:	add	x8, x8, x9
  40f1e8:	stur	x8, [x29, #-48]
  40f1ec:	b	40f200 <wcrtomb@plt+0xc8f0>
  40f1f0:	ldr	w8, [sp, #44]
  40f1f4:	add	w8, w8, #0x1
  40f1f8:	str	w8, [sp, #44]
  40f1fc:	b	40f13c <wcrtomb@plt+0xc82c>
  40f200:	b	40f268 <wcrtomb@plt+0xc958>
  40f204:	str	xzr, [sp, #24]
  40f208:	ldur	x0, [x29, #-48]
  40f20c:	ldur	x8, [x29, #-40]
  40f210:	ldur	x9, [x29, #-48]
  40f214:	subs	x1, x8, x9
  40f218:	add	x2, sp, #0x18
  40f21c:	bl	40ede8 <wcrtomb@plt+0xc4d8>
  40f220:	str	x0, [sp, #48]
  40f224:	ldr	x8, [sp, #48]
  40f228:	mov	x9, #0xfffffffffffffffe    	// #-2
  40f22c:	cmp	x9, x8
  40f230:	b.hi	40f240 <wcrtomb@plt+0xc930>  // b.pmore
  40f234:	mov	x8, #0x1                   	// #1
  40f238:	str	x8, [sp, #48]
  40f23c:	str	xzr, [sp, #24]
  40f240:	ldur	x8, [x29, #-48]
  40f244:	str	x8, [sp, #56]
  40f248:	ldr	x8, [sp, #48]
  40f24c:	ldur	x9, [x29, #-48]
  40f250:	add	x8, x9, x8
  40f254:	stur	x8, [x29, #-48]
  40f258:	ldur	x8, [x29, #-48]
  40f25c:	ldur	x9, [x29, #-32]
  40f260:	cmp	x8, x9
  40f264:	b.cc	40f208 <wcrtomb@plt+0xc8f8>  // b.lo, b.ul, b.last
  40f268:	ldur	x8, [x29, #-48]
  40f26c:	ldur	x9, [x29, #-16]
  40f270:	str	x8, [x9]
  40f274:	ldur	x8, [x29, #-24]
  40f278:	cbz	x8, 40f288 <wcrtomb@plt+0xc978>
  40f27c:	ldr	x8, [sp, #48]
  40f280:	ldur	x9, [x29, #-24]
  40f284:	str	x8, [x9]
  40f288:	ldur	x8, [x29, #-48]
  40f28c:	ldur	x9, [x29, #-32]
  40f290:	cmp	x8, x9
  40f294:	b.ne	40f2a4 <wcrtomb@plt+0xc994>  // b.any
  40f298:	mov	x8, xzr
  40f29c:	str	x8, [sp, #8]
  40f2a0:	b	40f2b4 <wcrtomb@plt+0xc9a4>
  40f2a4:	ldur	x8, [x29, #-32]
  40f2a8:	ldr	x9, [sp, #56]
  40f2ac:	subs	x8, x8, x9
  40f2b0:	str	x8, [sp, #8]
  40f2b4:	ldr	x8, [sp, #8]
  40f2b8:	stur	x8, [x29, #-8]
  40f2bc:	ldur	x0, [x29, #-8]
  40f2c0:	ldp	x29, x30, [sp, #112]
  40f2c4:	add	sp, sp, #0x80
  40f2c8:	ret
  40f2cc:	sub	sp, sp, #0x20
  40f2d0:	stp	x29, x30, [sp, #16]
  40f2d4:	add	x29, sp, #0x10
  40f2d8:	str	x0, [sp, #8]
  40f2dc:	str	x1, [sp]
  40f2e0:	ldr	x0, [sp, #8]
  40f2e4:	ldr	x1, [sp]
  40f2e8:	mov	w8, #0x1                   	// #1
  40f2ec:	and	w2, w8, #0x1
  40f2f0:	bl	40f300 <wcrtomb@plt+0xc9f0>
  40f2f4:	ldp	x29, x30, [sp, #16]
  40f2f8:	add	sp, sp, #0x20
  40f2fc:	ret
  40f300:	sub	sp, sp, #0x50
  40f304:	stp	x29, x30, [sp, #64]
  40f308:	add	x29, sp, #0x40
  40f30c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40f310:	add	x8, x8, #0x8c8
  40f314:	add	x8, x8, #0x3
  40f318:	stur	x0, [x29, #-8]
  40f31c:	stur	x1, [x29, #-16]
  40f320:	and	w9, w2, #0x1
  40f324:	sturb	w9, [x29, #-17]
  40f328:	str	xzr, [sp, #32]
  40f32c:	str	xzr, [sp, #24]
  40f330:	str	x8, [sp]
  40f334:	ldr	x8, [sp, #32]
  40f338:	ldur	x9, [x29, #-16]
  40f33c:	ldur	x10, [x29, #-8]
  40f340:	subs	x9, x9, x10
  40f344:	cmp	x8, x9
  40f348:	b.cs	40f42c <wcrtomb@plt+0xcb1c>  // b.hs, b.nlast
  40f34c:	ldur	x8, [x29, #-8]
  40f350:	ldr	x9, [sp, #32]
  40f354:	add	x8, x8, x9
  40f358:	ldrb	w10, [x8]
  40f35c:	strb	w10, [sp, #23]
  40f360:	ldrb	w10, [sp, #23]
  40f364:	mov	w8, w10
  40f368:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40f36c:	add	x9, x9, #0x643
  40f370:	add	x8, x9, x8
  40f374:	ldrb	w10, [x8]
  40f378:	tbnz	w10, #0, 40f380 <wcrtomb@plt+0xca70>
  40f37c:	b	40f390 <wcrtomb@plt+0xca80>
  40f380:	ldr	x8, [sp, #32]
  40f384:	add	x8, x8, #0x1
  40f388:	str	x8, [sp, #32]
  40f38c:	b	40f41c <wcrtomb@plt+0xcb0c>
  40f390:	ldrb	w8, [sp, #23]
  40f394:	mov	w9, w8
  40f398:	ldr	x10, [sp]
  40f39c:	ldrsb	w8, [x10, x9]
  40f3a0:	mov	w11, #0xfffffffe            	// #-2
  40f3a4:	cmp	w8, w11
  40f3a8:	b.eq	40f3b0 <wcrtomb@plt+0xcaa0>  // b.none
  40f3ac:	b	40f42c <wcrtomb@plt+0xcb1c>
  40f3b0:	add	x0, sp, #0x10
  40f3b4:	str	wzr, [sp, #16]
  40f3b8:	ldur	x8, [x29, #-8]
  40f3bc:	ldr	x9, [sp, #32]
  40f3c0:	add	x1, x8, x9
  40f3c4:	ldur	x8, [x29, #-16]
  40f3c8:	ldur	x9, [x29, #-8]
  40f3cc:	subs	x8, x8, x9
  40f3d0:	ldr	x9, [sp, #32]
  40f3d4:	subs	x2, x8, x9
  40f3d8:	add	x3, sp, #0x18
  40f3dc:	bl	4271dc <wcrtomb@plt+0x248cc>
  40f3e0:	str	x0, [sp, #8]
  40f3e4:	ldr	w0, [sp, #16]
  40f3e8:	bl	40eeec <wcrtomb@plt+0xc5dc>
  40f3ec:	tbnz	w0, #0, 40f3f4 <wcrtomb@plt+0xcae4>
  40f3f0:	b	40f42c <wcrtomb@plt+0xcb1c>
  40f3f4:	ldr	x8, [sp, #8]
  40f3f8:	ldr	x9, [sp, #8]
  40f3fc:	cmp	x9, #0x0
  40f400:	cset	w10, ne  // ne = any
  40f404:	eor	w10, w10, #0x1
  40f408:	and	w10, w10, #0x1
  40f40c:	add	x8, x8, w10, sxtw
  40f410:	ldr	x9, [sp, #32]
  40f414:	add	x8, x9, x8
  40f418:	str	x8, [sp, #32]
  40f41c:	ldurb	w8, [x29, #-17]
  40f420:	tbnz	w8, #0, 40f428 <wcrtomb@plt+0xcb18>
  40f424:	b	40f42c <wcrtomb@plt+0xcb1c>
  40f428:	b	40f334 <wcrtomb@plt+0xca24>
  40f42c:	ldr	x0, [sp, #32]
  40f430:	ldp	x29, x30, [sp, #64]
  40f434:	add	sp, sp, #0x50
  40f438:	ret
  40f43c:	sub	sp, sp, #0x20
  40f440:	stp	x29, x30, [sp, #16]
  40f444:	add	x29, sp, #0x10
  40f448:	str	x0, [sp, #8]
  40f44c:	str	x1, [sp]
  40f450:	ldr	x0, [sp, #8]
  40f454:	ldr	x1, [sp]
  40f458:	mov	w8, wzr
  40f45c:	and	w2, w8, #0x1
  40f460:	bl	40f300 <wcrtomb@plt+0xc9f0>
  40f464:	ldp	x29, x30, [sp, #16]
  40f468:	add	sp, sp, #0x20
  40f46c:	ret
  40f470:	sub	sp, sp, #0x60
  40f474:	stp	x29, x30, [sp, #80]
  40f478:	add	x29, sp, #0x50
  40f47c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  40f480:	add	x8, x8, #0x8c8
  40f484:	add	x9, x8, #0x3
  40f488:	stur	x0, [x29, #-16]
  40f48c:	stur	x1, [x29, #-24]
  40f490:	stur	x2, [x29, #-32]
  40f494:	ldur	x10, [x29, #-16]
  40f498:	ldur	x11, [x29, #-24]
  40f49c:	cmp	x10, x11
  40f4a0:	str	x8, [sp, #24]
  40f4a4:	str	x9, [sp, #16]
  40f4a8:	b.ne	40f4b4 <wcrtomb@plt+0xcba4>  // b.any
  40f4ac:	stur	xzr, [x29, #-8]
  40f4b0:	b	40f578 <wcrtomb@plt+0xcc68>
  40f4b4:	ldur	x8, [x29, #-24]
  40f4b8:	mov	x9, #0xffffffffffffffff    	// #-1
  40f4bc:	add	x8, x8, x9
  40f4c0:	stur	x8, [x29, #-24]
  40f4c4:	ldrb	w10, [x8]
  40f4c8:	sturb	w10, [x29, #-33]
  40f4cc:	ldr	x8, [sp, #24]
  40f4d0:	ldrb	w10, [x8]
  40f4d4:	tbnz	w10, #0, 40f4dc <wcrtomb@plt+0xcbcc>
  40f4d8:	b	40f508 <wcrtomb@plt+0xcbf8>
  40f4dc:	ldr	x8, [sp, #24]
  40f4e0:	ldrb	w9, [x8, #2]
  40f4e4:	tbnz	w9, #0, 40f4ec <wcrtomb@plt+0xcbdc>
  40f4e8:	b	40f530 <wcrtomb@plt+0xcc20>
  40f4ec:	ldurb	w8, [x29, #-33]
  40f4f0:	mov	w9, w8
  40f4f4:	ldr	x10, [sp, #16]
  40f4f8:	ldrsb	w8, [x10, x9]
  40f4fc:	mov	w11, #0xfffffffe            	// #-2
  40f500:	cmp	w8, w11
  40f504:	b.eq	40f530 <wcrtomb@plt+0xcc20>  // b.none
  40f508:	ldurb	w8, [x29, #-33]
  40f50c:	mov	w9, w8
  40f510:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40f514:	add	x10, x10, #0x643
  40f518:	add	x9, x10, x9
  40f51c:	ldrb	w8, [x9]
  40f520:	mov	w0, w8
  40f524:	and	x9, x0, #0x1
  40f528:	stur	x9, [x29, #-8]
  40f52c:	b	40f578 <wcrtomb@plt+0xcc68>
  40f530:	ldur	x8, [x29, #-16]
  40f534:	add	x0, sp, #0x20
  40f538:	str	x8, [sp, #32]
  40f53c:	ldur	x2, [x29, #-24]
  40f540:	ldur	x3, [x29, #-32]
  40f544:	mov	x8, xzr
  40f548:	mov	x1, x8
  40f54c:	str	x8, [sp, #8]
  40f550:	bl	40f090 <wcrtomb@plt+0xc780>
  40f554:	ldur	x8, [x29, #-24]
  40f558:	ldr	x9, [sp, #8]
  40f55c:	subs	x10, x9, x0
  40f560:	add	x8, x8, x10
  40f564:	stur	x8, [x29, #-24]
  40f568:	ldur	x0, [x29, #-24]
  40f56c:	ldur	x1, [x29, #-32]
  40f570:	bl	40f43c <wcrtomb@plt+0xcb2c>
  40f574:	stur	x0, [x29, #-8]
  40f578:	ldur	x0, [x29, #-8]
  40f57c:	ldp	x29, x30, [sp, #80]
  40f580:	add	sp, sp, #0x60
  40f584:	ret
  40f588:	stp	x29, x30, [sp, #-16]!
  40f58c:	mov	x29, sp
  40f590:	mov	w0, #0x1                   	// #1
  40f594:	bl	40407c <wcrtomb@plt+0x176c>
  40f598:	ldp	x29, x30, [sp], #16
  40f59c:	ret
  40f5a0:	sub	sp, sp, #0x60
  40f5a4:	stp	x29, x30, [sp, #80]
  40f5a8:	add	x29, sp, #0x50
  40f5ac:	mov	x8, #0xffffffffffffffff    	// #-1
  40f5b0:	mov	w9, #0x0                   	// #0
  40f5b4:	stur	x0, [x29, #-16]
  40f5b8:	stur	x1, [x29, #-24]
  40f5bc:	stur	x2, [x29, #-32]
  40f5c0:	str	x3, [sp, #40]
  40f5c4:	str	x8, [sp, #16]
  40f5c8:	strb	w9, [sp, #15]
  40f5cc:	ldur	x0, [x29, #-16]
  40f5d0:	bl	4022f0 <strlen@plt>
  40f5d4:	str	x0, [sp, #24]
  40f5d8:	str	xzr, [sp, #32]
  40f5dc:	ldur	x8, [x29, #-24]
  40f5e0:	ldr	x9, [sp, #32]
  40f5e4:	mov	x10, #0x8                   	// #8
  40f5e8:	mul	x9, x10, x9
  40f5ec:	add	x8, x8, x9
  40f5f0:	ldr	x8, [x8]
  40f5f4:	cbz	x8, 40f6c4 <wcrtomb@plt+0xcdb4>
  40f5f8:	ldur	x8, [x29, #-24]
  40f5fc:	ldr	x9, [sp, #32]
  40f600:	mov	x10, #0x8                   	// #8
  40f604:	mul	x9, x10, x9
  40f608:	add	x8, x8, x9
  40f60c:	ldr	x0, [x8]
  40f610:	ldur	x1, [x29, #-16]
  40f614:	ldr	x2, [sp, #24]
  40f618:	bl	4024d0 <strncmp@plt>
  40f61c:	cbnz	w0, 40f6b4 <wcrtomb@plt+0xcda4>
  40f620:	ldur	x8, [x29, #-24]
  40f624:	ldr	x9, [sp, #32]
  40f628:	mov	x10, #0x8                   	// #8
  40f62c:	mul	x9, x10, x9
  40f630:	add	x8, x8, x9
  40f634:	ldr	x0, [x8]
  40f638:	bl	4022f0 <strlen@plt>
  40f63c:	ldr	x8, [sp, #24]
  40f640:	cmp	x0, x8
  40f644:	b.ne	40f654 <wcrtomb@plt+0xcd44>  // b.any
  40f648:	ldr	x8, [sp, #32]
  40f64c:	stur	x8, [x29, #-8]
  40f650:	b	40f6e4 <wcrtomb@plt+0xcdd4>
  40f654:	ldr	x8, [sp, #16]
  40f658:	mov	x9, #0xffffffffffffffff    	// #-1
  40f65c:	cmp	x8, x9
  40f660:	b.ne	40f670 <wcrtomb@plt+0xcd60>  // b.any
  40f664:	ldr	x8, [sp, #32]
  40f668:	str	x8, [sp, #16]
  40f66c:	b	40f6b4 <wcrtomb@plt+0xcda4>
  40f670:	ldur	x8, [x29, #-32]
  40f674:	cbz	x8, 40f6ac <wcrtomb@plt+0xcd9c>
  40f678:	ldur	x8, [x29, #-32]
  40f67c:	ldr	x9, [sp, #40]
  40f680:	ldr	x10, [sp, #16]
  40f684:	mul	x9, x9, x10
  40f688:	add	x0, x8, x9
  40f68c:	ldur	x8, [x29, #-32]
  40f690:	ldr	x9, [sp, #40]
  40f694:	ldr	x10, [sp, #32]
  40f698:	mul	x9, x9, x10
  40f69c:	add	x1, x8, x9
  40f6a0:	ldr	x2, [sp, #40]
  40f6a4:	bl	402670 <memcmp@plt>
  40f6a8:	cbz	w0, 40f6b4 <wcrtomb@plt+0xcda4>
  40f6ac:	mov	w8, #0x1                   	// #1
  40f6b0:	strb	w8, [sp, #15]
  40f6b4:	ldr	x8, [sp, #32]
  40f6b8:	add	x8, x8, #0x1
  40f6bc:	str	x8, [sp, #32]
  40f6c0:	b	40f5dc <wcrtomb@plt+0xcccc>
  40f6c4:	ldrb	w8, [sp, #15]
  40f6c8:	tbnz	w8, #0, 40f6d0 <wcrtomb@plt+0xcdc0>
  40f6cc:	b	40f6dc <wcrtomb@plt+0xcdcc>
  40f6d0:	mov	x8, #0xfffffffffffffffe    	// #-2
  40f6d4:	stur	x8, [x29, #-8]
  40f6d8:	b	40f6e4 <wcrtomb@plt+0xcdd4>
  40f6dc:	ldr	x8, [sp, #16]
  40f6e0:	stur	x8, [x29, #-8]
  40f6e4:	ldur	x0, [x29, #-8]
  40f6e8:	ldp	x29, x30, [sp, #80]
  40f6ec:	add	sp, sp, #0x60
  40f6f0:	ret
  40f6f4:	sub	sp, sp, #0x60
  40f6f8:	stp	x29, x30, [sp, #80]
  40f6fc:	add	x29, sp, #0x50
  40f700:	mov	x8, #0xffffffffffffffff    	// #-1
  40f704:	stur	x0, [x29, #-8]
  40f708:	stur	x1, [x29, #-16]
  40f70c:	stur	x2, [x29, #-24]
  40f710:	ldur	x9, [x29, #-24]
  40f714:	cmp	x9, x8
  40f718:	b.ne	40f730 <wcrtomb@plt+0xce20>  // b.any
  40f71c:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40f720:	add	x0, x0, #0xcb
  40f724:	bl	4028b0 <gettext@plt>
  40f728:	str	x0, [sp, #40]
  40f72c:	b	40f740 <wcrtomb@plt+0xce30>
  40f730:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40f734:	add	x0, x0, #0xe6
  40f738:	bl	4028b0 <gettext@plt>
  40f73c:	str	x0, [sp, #40]
  40f740:	ldr	x8, [sp, #40]
  40f744:	stur	x8, [x29, #-32]
  40f748:	ldur	x2, [x29, #-32]
  40f74c:	ldur	x8, [x29, #-16]
  40f750:	mov	w9, wzr
  40f754:	mov	w0, w9
  40f758:	mov	w1, #0x8                   	// #8
  40f75c:	str	x2, [sp, #32]
  40f760:	mov	x2, x8
  40f764:	str	w9, [sp, #28]
  40f768:	bl	422084 <wcrtomb@plt+0x1f774>
  40f76c:	ldur	x1, [x29, #-8]
  40f770:	mov	w9, #0x1                   	// #1
  40f774:	str	x0, [sp, #16]
  40f778:	mov	w0, w9
  40f77c:	bl	422524 <wcrtomb@plt+0x1fc14>
  40f780:	ldr	w9, [sp, #28]
  40f784:	str	x0, [sp, #8]
  40f788:	mov	w0, w9
  40f78c:	mov	w1, w9
  40f790:	ldr	x2, [sp, #32]
  40f794:	ldr	x3, [sp, #16]
  40f798:	ldr	x4, [sp, #8]
  40f79c:	bl	402330 <error@plt>
  40f7a0:	ldp	x29, x30, [sp, #80]
  40f7a4:	add	sp, sp, #0x60
  40f7a8:	ret
  40f7ac:	sub	sp, sp, #0x60
  40f7b0:	stp	x29, x30, [sp, #80]
  40f7b4:	add	x29, sp, #0x50
  40f7b8:	mov	x8, xzr
  40f7bc:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40f7c0:	add	x9, x9, #0x103
  40f7c4:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40f7c8:	add	x10, x10, #0x440
  40f7cc:	stur	x0, [x29, #-8]
  40f7d0:	stur	x1, [x29, #-16]
  40f7d4:	stur	x2, [x29, #-24]
  40f7d8:	str	x8, [sp, #40]
  40f7dc:	mov	x0, x9
  40f7e0:	str	x10, [sp, #32]
  40f7e4:	bl	4028b0 <gettext@plt>
  40f7e8:	ldr	x8, [sp, #32]
  40f7ec:	ldr	x1, [x8]
  40f7f0:	bl	4027e0 <fputs_unlocked@plt>
  40f7f4:	stur	xzr, [x29, #-32]
  40f7f8:	ldur	x8, [x29, #-8]
  40f7fc:	ldur	x9, [x29, #-32]
  40f800:	mov	x10, #0x8                   	// #8
  40f804:	mul	x9, x10, x9
  40f808:	add	x8, x8, x9
  40f80c:	ldr	x8, [x8]
  40f810:	cbz	x8, 40f8fc <wcrtomb@plt+0xcfec>
  40f814:	ldur	x8, [x29, #-32]
  40f818:	cbz	x8, 40f840 <wcrtomb@plt+0xcf30>
  40f81c:	ldr	x0, [sp, #40]
  40f820:	ldur	x8, [x29, #-16]
  40f824:	ldur	x9, [x29, #-24]
  40f828:	ldur	x10, [x29, #-32]
  40f82c:	mul	x9, x9, x10
  40f830:	add	x1, x8, x9
  40f834:	ldur	x2, [x29, #-24]
  40f838:	bl	402670 <memcmp@plt>
  40f83c:	cbz	w0, 40f8a4 <wcrtomb@plt+0xcf94>
  40f840:	ldr	x8, [sp, #32]
  40f844:	ldr	x0, [x8]
  40f848:	ldur	x9, [x29, #-8]
  40f84c:	ldur	x10, [x29, #-32]
  40f850:	mov	x11, #0x8                   	// #8
  40f854:	mul	x10, x11, x10
  40f858:	add	x9, x9, x10
  40f85c:	ldr	x9, [x9]
  40f860:	str	x0, [sp, #24]
  40f864:	mov	x0, x9
  40f868:	bl	422554 <wcrtomb@plt+0x1fc44>
  40f86c:	ldr	x8, [sp, #24]
  40f870:	str	x0, [sp, #16]
  40f874:	mov	x0, x8
  40f878:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40f87c:	add	x1, x1, #0x118
  40f880:	ldr	x2, [sp, #16]
  40f884:	bl	4028d0 <fprintf@plt>
  40f888:	ldur	x8, [x29, #-16]
  40f88c:	ldur	x9, [x29, #-24]
  40f890:	ldur	x10, [x29, #-32]
  40f894:	mul	x9, x9, x10
  40f898:	add	x8, x8, x9
  40f89c:	str	x8, [sp, #40]
  40f8a0:	b	40f8ec <wcrtomb@plt+0xcfdc>
  40f8a4:	ldr	x8, [sp, #32]
  40f8a8:	ldr	x0, [x8]
  40f8ac:	ldur	x9, [x29, #-8]
  40f8b0:	ldur	x10, [x29, #-32]
  40f8b4:	mov	x11, #0x8                   	// #8
  40f8b8:	mul	x10, x11, x10
  40f8bc:	add	x9, x9, x10
  40f8c0:	ldr	x9, [x9]
  40f8c4:	str	x0, [sp, #8]
  40f8c8:	mov	x0, x9
  40f8cc:	bl	422554 <wcrtomb@plt+0x1fc44>
  40f8d0:	ldr	x8, [sp, #8]
  40f8d4:	str	x0, [sp]
  40f8d8:	mov	x0, x8
  40f8dc:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40f8e0:	add	x1, x1, #0x120
  40f8e4:	ldr	x2, [sp]
  40f8e8:	bl	4028d0 <fprintf@plt>
  40f8ec:	ldur	x8, [x29, #-32]
  40f8f0:	add	x8, x8, #0x1
  40f8f4:	stur	x8, [x29, #-32]
  40f8f8:	b	40f7f8 <wcrtomb@plt+0xcee8>
  40f8fc:	ldr	x8, [sp, #32]
  40f900:	ldr	x1, [x8]
  40f904:	mov	w0, #0xa                   	// #10
  40f908:	bl	4023e0 <putc_unlocked@plt>
  40f90c:	ldp	x29, x30, [sp, #80]
  40f910:	add	sp, sp, #0x60
  40f914:	ret
  40f918:	sub	sp, sp, #0x50
  40f91c:	stp	x29, x30, [sp, #64]
  40f920:	add	x29, sp, #0x40
  40f924:	stur	x0, [x29, #-16]
  40f928:	stur	x1, [x29, #-24]
  40f92c:	str	x2, [sp, #32]
  40f930:	str	x3, [sp, #24]
  40f934:	str	x4, [sp, #16]
  40f938:	str	x5, [sp, #8]
  40f93c:	ldur	x0, [x29, #-24]
  40f940:	ldr	x1, [sp, #32]
  40f944:	ldr	x2, [sp, #24]
  40f948:	ldr	x3, [sp, #16]
  40f94c:	bl	40f5a0 <wcrtomb@plt+0xcc90>
  40f950:	str	x0, [sp]
  40f954:	ldr	x8, [sp]
  40f958:	cmp	x8, #0x0
  40f95c:	cset	w9, lt  // lt = tstop
  40f960:	tbnz	w9, #0, 40f970 <wcrtomb@plt+0xd060>
  40f964:	ldr	x8, [sp]
  40f968:	stur	x8, [x29, #-8]
  40f96c:	b	40f9a0 <wcrtomb@plt+0xd090>
  40f970:	ldur	x0, [x29, #-16]
  40f974:	ldur	x1, [x29, #-24]
  40f978:	ldr	x2, [sp]
  40f97c:	bl	40f6f4 <wcrtomb@plt+0xcde4>
  40f980:	ldr	x0, [sp, #32]
  40f984:	ldr	x1, [sp, #24]
  40f988:	ldr	x2, [sp, #16]
  40f98c:	bl	40f7ac <wcrtomb@plt+0xce9c>
  40f990:	ldr	x8, [sp, #8]
  40f994:	blr	x8
  40f998:	mov	x8, #0xffffffffffffffff    	// #-1
  40f99c:	stur	x8, [x29, #-8]
  40f9a0:	ldur	x0, [x29, #-8]
  40f9a4:	ldp	x29, x30, [sp, #64]
  40f9a8:	add	sp, sp, #0x50
  40f9ac:	ret
  40f9b0:	sub	sp, sp, #0x40
  40f9b4:	stp	x29, x30, [sp, #48]
  40f9b8:	add	x29, sp, #0x30
  40f9bc:	stur	x0, [x29, #-16]
  40f9c0:	str	x1, [sp, #24]
  40f9c4:	str	x2, [sp, #16]
  40f9c8:	str	x3, [sp, #8]
  40f9cc:	str	xzr, [sp]
  40f9d0:	ldr	x8, [sp, #24]
  40f9d4:	ldr	x9, [sp]
  40f9d8:	mov	x10, #0x8                   	// #8
  40f9dc:	mul	x9, x10, x9
  40f9e0:	add	x8, x8, x9
  40f9e4:	ldr	x8, [x8]
  40f9e8:	cbz	x8, 40fa40 <wcrtomb@plt+0xd130>
  40f9ec:	ldur	x0, [x29, #-16]
  40f9f0:	ldr	x8, [sp, #16]
  40f9f4:	ldr	x9, [sp, #8]
  40f9f8:	ldr	x10, [sp]
  40f9fc:	mul	x9, x9, x10
  40fa00:	add	x1, x8, x9
  40fa04:	ldr	x2, [sp, #8]
  40fa08:	bl	402670 <memcmp@plt>
  40fa0c:	cbnz	w0, 40fa30 <wcrtomb@plt+0xd120>
  40fa10:	ldr	x8, [sp, #24]
  40fa14:	ldr	x9, [sp]
  40fa18:	mov	x10, #0x8                   	// #8
  40fa1c:	mul	x9, x10, x9
  40fa20:	add	x8, x8, x9
  40fa24:	ldr	x8, [x8]
  40fa28:	stur	x8, [x29, #-8]
  40fa2c:	b	40fa48 <wcrtomb@plt+0xd138>
  40fa30:	ldr	x8, [sp]
  40fa34:	add	x8, x8, #0x1
  40fa38:	str	x8, [sp]
  40fa3c:	b	40f9d0 <wcrtomb@plt+0xd0c0>
  40fa40:	mov	x8, xzr
  40fa44:	stur	x8, [x29, #-8]
  40fa48:	ldur	x0, [x29, #-8]
  40fa4c:	ldp	x29, x30, [sp, #48]
  40fa50:	add	sp, sp, #0x40
  40fa54:	ret
  40fa58:	sub	sp, sp, #0x10
  40fa5c:	str	w0, [sp, #8]
  40fa60:	ldr	w8, [sp, #8]
  40fa64:	subs	w9, w8, #0x30
  40fa68:	cmp	w9, #0x9
  40fa6c:	str	w8, [sp, #4]
  40fa70:	b.ls	40faa8 <wcrtomb@plt+0xd198>  // b.plast
  40fa74:	b	40fa78 <wcrtomb@plt+0xd168>
  40fa78:	ldr	w8, [sp, #4]
  40fa7c:	subs	w9, w8, #0x41
  40fa80:	cmp	w9, #0x19
  40fa84:	b.ls	40faa8 <wcrtomb@plt+0xd198>  // b.plast
  40fa88:	b	40fa8c <wcrtomb@plt+0xd17c>
  40fa8c:	ldr	w8, [sp, #4]
  40fa90:	subs	w9, w8, #0x61
  40fa94:	cmp	w9, #0x19
  40fa98:	cset	w9, ls  // ls = plast
  40fa9c:	eor	w9, w9, #0x1
  40faa0:	tbnz	w9, #0, 40fab8 <wcrtomb@plt+0xd1a8>
  40faa4:	b	40faa8 <wcrtomb@plt+0xd198>
  40faa8:	mov	w8, #0x1                   	// #1
  40faac:	and	w8, w8, #0x1
  40fab0:	strb	w8, [sp, #15]
  40fab4:	b	40fac4 <wcrtomb@plt+0xd1b4>
  40fab8:	mov	w8, wzr
  40fabc:	and	w8, w8, #0x1
  40fac0:	strb	w8, [sp, #15]
  40fac4:	ldrb	w8, [sp, #15]
  40fac8:	and	w0, w8, #0x1
  40facc:	add	sp, sp, #0x10
  40fad0:	ret
  40fad4:	sub	sp, sp, #0x10
  40fad8:	str	w0, [sp, #8]
  40fadc:	ldr	w8, [sp, #8]
  40fae0:	subs	w9, w8, #0x41
  40fae4:	cmp	w9, #0x19
  40fae8:	str	w8, [sp, #4]
  40faec:	b.ls	40fb10 <wcrtomb@plt+0xd200>  // b.plast
  40faf0:	b	40faf4 <wcrtomb@plt+0xd1e4>
  40faf4:	ldr	w8, [sp, #4]
  40faf8:	subs	w9, w8, #0x61
  40fafc:	cmp	w9, #0x19
  40fb00:	cset	w9, ls  // ls = plast
  40fb04:	eor	w9, w9, #0x1
  40fb08:	tbnz	w9, #0, 40fb20 <wcrtomb@plt+0xd210>
  40fb0c:	b	40fb10 <wcrtomb@plt+0xd200>
  40fb10:	mov	w8, #0x1                   	// #1
  40fb14:	and	w8, w8, #0x1
  40fb18:	strb	w8, [sp, #15]
  40fb1c:	b	40fb2c <wcrtomb@plt+0xd21c>
  40fb20:	mov	w8, wzr
  40fb24:	and	w8, w8, #0x1
  40fb28:	strb	w8, [sp, #15]
  40fb2c:	ldrb	w8, [sp, #15]
  40fb30:	and	w0, w8, #0x1
  40fb34:	add	sp, sp, #0x10
  40fb38:	ret
  40fb3c:	sub	sp, sp, #0x10
  40fb40:	str	w0, [sp, #8]
  40fb44:	ldr	w8, [sp, #8]
  40fb48:	subs	w8, w8, #0x0
  40fb4c:	cmp	w8, #0x7f
  40fb50:	cset	w8, ls  // ls = plast
  40fb54:	eor	w8, w8, #0x1
  40fb58:	tbnz	w8, #0, 40fb70 <wcrtomb@plt+0xd260>
  40fb5c:	b	40fb60 <wcrtomb@plt+0xd250>
  40fb60:	mov	w8, #0x1                   	// #1
  40fb64:	and	w8, w8, #0x1
  40fb68:	strb	w8, [sp, #15]
  40fb6c:	b	40fb7c <wcrtomb@plt+0xd26c>
  40fb70:	mov	w8, wzr
  40fb74:	and	w8, w8, #0x1
  40fb78:	strb	w8, [sp, #15]
  40fb7c:	ldrb	w8, [sp, #15]
  40fb80:	and	w0, w8, #0x1
  40fb84:	add	sp, sp, #0x10
  40fb88:	ret
  40fb8c:	sub	sp, sp, #0x10
  40fb90:	str	w0, [sp, #12]
  40fb94:	ldr	w8, [sp, #12]
  40fb98:	mov	w9, #0x1                   	// #1
  40fb9c:	cmp	w8, #0x20
  40fba0:	str	w9, [sp, #8]
  40fba4:	b.eq	40fbb8 <wcrtomb@plt+0xd2a8>  // b.none
  40fba8:	ldr	w8, [sp, #12]
  40fbac:	cmp	w8, #0x9
  40fbb0:	cset	w8, eq  // eq = none
  40fbb4:	str	w8, [sp, #8]
  40fbb8:	ldr	w8, [sp, #8]
  40fbbc:	and	w0, w8, #0x1
  40fbc0:	add	sp, sp, #0x10
  40fbc4:	ret
  40fbc8:	sub	sp, sp, #0x10
  40fbcc:	str	w0, [sp, #8]
  40fbd0:	ldr	w8, [sp, #8]
  40fbd4:	subs	w9, w8, #0x0
  40fbd8:	cmp	w9, #0x1f
  40fbdc:	str	w8, [sp, #4]
  40fbe0:	b.ls	40fc00 <wcrtomb@plt+0xd2f0>  // b.plast
  40fbe4:	b	40fbe8 <wcrtomb@plt+0xd2d8>
  40fbe8:	ldr	w8, [sp, #4]
  40fbec:	cmp	w8, #0x7f
  40fbf0:	cset	w9, eq  // eq = none
  40fbf4:	eor	w9, w9, #0x1
  40fbf8:	tbnz	w9, #0, 40fc10 <wcrtomb@plt+0xd300>
  40fbfc:	b	40fc00 <wcrtomb@plt+0xd2f0>
  40fc00:	mov	w8, #0x1                   	// #1
  40fc04:	and	w8, w8, #0x1
  40fc08:	strb	w8, [sp, #15]
  40fc0c:	b	40fc1c <wcrtomb@plt+0xd30c>
  40fc10:	mov	w8, wzr
  40fc14:	and	w8, w8, #0x1
  40fc18:	strb	w8, [sp, #15]
  40fc1c:	ldrb	w8, [sp, #15]
  40fc20:	and	w0, w8, #0x1
  40fc24:	add	sp, sp, #0x10
  40fc28:	ret
  40fc2c:	sub	sp, sp, #0x10
  40fc30:	str	w0, [sp, #8]
  40fc34:	ldr	w8, [sp, #8]
  40fc38:	subs	w8, w8, #0x30
  40fc3c:	cmp	w8, #0x9
  40fc40:	cset	w8, ls  // ls = plast
  40fc44:	eor	w8, w8, #0x1
  40fc48:	tbnz	w8, #0, 40fc60 <wcrtomb@plt+0xd350>
  40fc4c:	b	40fc50 <wcrtomb@plt+0xd340>
  40fc50:	mov	w8, #0x1                   	// #1
  40fc54:	and	w8, w8, #0x1
  40fc58:	strb	w8, [sp, #15]
  40fc5c:	b	40fc6c <wcrtomb@plt+0xd35c>
  40fc60:	mov	w8, wzr
  40fc64:	and	w8, w8, #0x1
  40fc68:	strb	w8, [sp, #15]
  40fc6c:	ldrb	w8, [sp, #15]
  40fc70:	and	w0, w8, #0x1
  40fc74:	add	sp, sp, #0x10
  40fc78:	ret
  40fc7c:	sub	sp, sp, #0x10
  40fc80:	str	w0, [sp, #8]
  40fc84:	ldr	w8, [sp, #8]
  40fc88:	subs	w8, w8, #0x21
  40fc8c:	cmp	w8, #0x5d
  40fc90:	cset	w8, ls  // ls = plast
  40fc94:	eor	w8, w8, #0x1
  40fc98:	tbnz	w8, #0, 40fcb0 <wcrtomb@plt+0xd3a0>
  40fc9c:	b	40fca0 <wcrtomb@plt+0xd390>
  40fca0:	mov	w8, #0x1                   	// #1
  40fca4:	and	w8, w8, #0x1
  40fca8:	strb	w8, [sp, #15]
  40fcac:	b	40fcbc <wcrtomb@plt+0xd3ac>
  40fcb0:	mov	w8, wzr
  40fcb4:	and	w8, w8, #0x1
  40fcb8:	strb	w8, [sp, #15]
  40fcbc:	ldrb	w8, [sp, #15]
  40fcc0:	and	w0, w8, #0x1
  40fcc4:	add	sp, sp, #0x10
  40fcc8:	ret
  40fccc:	sub	sp, sp, #0x10
  40fcd0:	str	w0, [sp, #8]
  40fcd4:	ldr	w8, [sp, #8]
  40fcd8:	subs	w8, w8, #0x61
  40fcdc:	cmp	w8, #0x19
  40fce0:	cset	w8, ls  // ls = plast
  40fce4:	eor	w8, w8, #0x1
  40fce8:	tbnz	w8, #0, 40fd00 <wcrtomb@plt+0xd3f0>
  40fcec:	b	40fcf0 <wcrtomb@plt+0xd3e0>
  40fcf0:	mov	w8, #0x1                   	// #1
  40fcf4:	and	w8, w8, #0x1
  40fcf8:	strb	w8, [sp, #15]
  40fcfc:	b	40fd0c <wcrtomb@plt+0xd3fc>
  40fd00:	mov	w8, wzr
  40fd04:	and	w8, w8, #0x1
  40fd08:	strb	w8, [sp, #15]
  40fd0c:	ldrb	w8, [sp, #15]
  40fd10:	and	w0, w8, #0x1
  40fd14:	add	sp, sp, #0x10
  40fd18:	ret
  40fd1c:	sub	sp, sp, #0x10
  40fd20:	str	w0, [sp, #8]
  40fd24:	ldr	w8, [sp, #8]
  40fd28:	subs	w8, w8, #0x20
  40fd2c:	cmp	w8, #0x5e
  40fd30:	cset	w8, ls  // ls = plast
  40fd34:	eor	w8, w8, #0x1
  40fd38:	tbnz	w8, #0, 40fd50 <wcrtomb@plt+0xd440>
  40fd3c:	b	40fd40 <wcrtomb@plt+0xd430>
  40fd40:	mov	w8, #0x1                   	// #1
  40fd44:	and	w8, w8, #0x1
  40fd48:	strb	w8, [sp, #15]
  40fd4c:	b	40fd5c <wcrtomb@plt+0xd44c>
  40fd50:	mov	w8, wzr
  40fd54:	and	w8, w8, #0x1
  40fd58:	strb	w8, [sp, #15]
  40fd5c:	ldrb	w8, [sp, #15]
  40fd60:	and	w0, w8, #0x1
  40fd64:	add	sp, sp, #0x10
  40fd68:	ret
  40fd6c:	sub	sp, sp, #0x10
  40fd70:	str	w0, [sp, #8]
  40fd74:	ldr	w8, [sp, #8]
  40fd78:	subs	w8, w8, #0x21
  40fd7c:	mov	w9, w8
  40fd80:	ubfx	x9, x9, #0, #32
  40fd84:	cmp	x9, #0x5d
  40fd88:	str	x9, [sp]
  40fd8c:	b.hi	40fdb8 <wcrtomb@plt+0xd4a8>  // b.pmore
  40fd90:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  40fd94:	add	x8, x8, #0x128
  40fd98:	ldr	x11, [sp]
  40fd9c:	ldrsw	x10, [x8, x11, lsl #2]
  40fda0:	add	x9, x8, x10
  40fda4:	br	x9
  40fda8:	mov	w8, #0x1                   	// #1
  40fdac:	and	w8, w8, #0x1
  40fdb0:	strb	w8, [sp, #15]
  40fdb4:	b	40fdc4 <wcrtomb@plt+0xd4b4>
  40fdb8:	mov	w8, wzr
  40fdbc:	and	w8, w8, #0x1
  40fdc0:	strb	w8, [sp, #15]
  40fdc4:	ldrb	w8, [sp, #15]
  40fdc8:	and	w0, w8, #0x1
  40fdcc:	add	sp, sp, #0x10
  40fdd0:	ret
  40fdd4:	sub	sp, sp, #0x10
  40fdd8:	str	w0, [sp, #8]
  40fddc:	ldr	w8, [sp, #8]
  40fde0:	subs	w9, w8, #0x9
  40fde4:	cmp	w9, #0x4
  40fde8:	str	w8, [sp, #4]
  40fdec:	b.ls	40fe0c <wcrtomb@plt+0xd4fc>  // b.plast
  40fdf0:	b	40fdf4 <wcrtomb@plt+0xd4e4>
  40fdf4:	ldr	w8, [sp, #4]
  40fdf8:	cmp	w8, #0x20
  40fdfc:	cset	w9, eq  // eq = none
  40fe00:	eor	w9, w9, #0x1
  40fe04:	tbnz	w9, #0, 40fe1c <wcrtomb@plt+0xd50c>
  40fe08:	b	40fe0c <wcrtomb@plt+0xd4fc>
  40fe0c:	mov	w8, #0x1                   	// #1
  40fe10:	and	w8, w8, #0x1
  40fe14:	strb	w8, [sp, #15]
  40fe18:	b	40fe28 <wcrtomb@plt+0xd518>
  40fe1c:	mov	w8, wzr
  40fe20:	and	w8, w8, #0x1
  40fe24:	strb	w8, [sp, #15]
  40fe28:	ldrb	w8, [sp, #15]
  40fe2c:	and	w0, w8, #0x1
  40fe30:	add	sp, sp, #0x10
  40fe34:	ret
  40fe38:	sub	sp, sp, #0x10
  40fe3c:	str	w0, [sp, #8]
  40fe40:	ldr	w8, [sp, #8]
  40fe44:	subs	w8, w8, #0x41
  40fe48:	cmp	w8, #0x19
  40fe4c:	cset	w8, ls  // ls = plast
  40fe50:	eor	w8, w8, #0x1
  40fe54:	tbnz	w8, #0, 40fe6c <wcrtomb@plt+0xd55c>
  40fe58:	b	40fe5c <wcrtomb@plt+0xd54c>
  40fe5c:	mov	w8, #0x1                   	// #1
  40fe60:	and	w8, w8, #0x1
  40fe64:	strb	w8, [sp, #15]
  40fe68:	b	40fe78 <wcrtomb@plt+0xd568>
  40fe6c:	mov	w8, wzr
  40fe70:	and	w8, w8, #0x1
  40fe74:	strb	w8, [sp, #15]
  40fe78:	ldrb	w8, [sp, #15]
  40fe7c:	and	w0, w8, #0x1
  40fe80:	add	sp, sp, #0x10
  40fe84:	ret
  40fe88:	sub	sp, sp, #0x10
  40fe8c:	str	w0, [sp, #8]
  40fe90:	ldr	w8, [sp, #8]
  40fe94:	subs	w9, w8, #0x30
  40fe98:	cmp	w9, #0x9
  40fe9c:	str	w8, [sp, #4]
  40fea0:	b.ls	40fed8 <wcrtomb@plt+0xd5c8>  // b.plast
  40fea4:	b	40fea8 <wcrtomb@plt+0xd598>
  40fea8:	ldr	w8, [sp, #4]
  40feac:	subs	w9, w8, #0x41
  40feb0:	cmp	w9, #0x5
  40feb4:	b.ls	40fed8 <wcrtomb@plt+0xd5c8>  // b.plast
  40feb8:	b	40febc <wcrtomb@plt+0xd5ac>
  40febc:	ldr	w8, [sp, #4]
  40fec0:	subs	w9, w8, #0x61
  40fec4:	cmp	w9, #0x5
  40fec8:	cset	w9, ls  // ls = plast
  40fecc:	eor	w9, w9, #0x1
  40fed0:	tbnz	w9, #0, 40fee8 <wcrtomb@plt+0xd5d8>
  40fed4:	b	40fed8 <wcrtomb@plt+0xd5c8>
  40fed8:	mov	w8, #0x1                   	// #1
  40fedc:	and	w8, w8, #0x1
  40fee0:	strb	w8, [sp, #15]
  40fee4:	b	40fef4 <wcrtomb@plt+0xd5e4>
  40fee8:	mov	w8, wzr
  40feec:	and	w8, w8, #0x1
  40fef0:	strb	w8, [sp, #15]
  40fef4:	ldrb	w8, [sp, #15]
  40fef8:	and	w0, w8, #0x1
  40fefc:	add	sp, sp, #0x10
  40ff00:	ret
  40ff04:	sub	sp, sp, #0x10
  40ff08:	str	w0, [sp, #8]
  40ff0c:	ldr	w8, [sp, #8]
  40ff10:	subs	w8, w8, #0x41
  40ff14:	cmp	w8, #0x19
  40ff18:	cset	w8, ls  // ls = plast
  40ff1c:	eor	w8, w8, #0x1
  40ff20:	tbnz	w8, #0, 40ff3c <wcrtomb@plt+0xd62c>
  40ff24:	b	40ff28 <wcrtomb@plt+0xd618>
  40ff28:	ldr	w8, [sp, #8]
  40ff2c:	subs	w8, w8, #0x41
  40ff30:	add	w8, w8, #0x61
  40ff34:	str	w8, [sp, #12]
  40ff38:	b	40ff44 <wcrtomb@plt+0xd634>
  40ff3c:	ldr	w8, [sp, #8]
  40ff40:	str	w8, [sp, #12]
  40ff44:	ldr	w0, [sp, #12]
  40ff48:	add	sp, sp, #0x10
  40ff4c:	ret
  40ff50:	sub	sp, sp, #0x10
  40ff54:	str	w0, [sp, #8]
  40ff58:	ldr	w8, [sp, #8]
  40ff5c:	subs	w8, w8, #0x61
  40ff60:	cmp	w8, #0x19
  40ff64:	cset	w8, ls  // ls = plast
  40ff68:	eor	w8, w8, #0x1
  40ff6c:	tbnz	w8, #0, 40ff88 <wcrtomb@plt+0xd678>
  40ff70:	b	40ff74 <wcrtomb@plt+0xd664>
  40ff74:	ldr	w8, [sp, #8]
  40ff78:	subs	w8, w8, #0x61
  40ff7c:	add	w8, w8, #0x41
  40ff80:	str	w8, [sp, #12]
  40ff84:	b	40ff90 <wcrtomb@plt+0xd680>
  40ff88:	ldr	w8, [sp, #8]
  40ff8c:	str	w8, [sp, #12]
  40ff90:	ldr	w0, [sp, #12]
  40ff94:	add	sp, sp, #0x10
  40ff98:	ret
  40ff9c:	sub	sp, sp, #0xf0
  40ffa0:	stp	x29, x30, [sp, #224]
  40ffa4:	add	x29, sp, #0xe0
  40ffa8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  40ffac:	add	x8, x8, #0x750
  40ffb0:	mov	x9, #0x4000                	// #16384
  40ffb4:	mov	x10, xzr
  40ffb8:	sub	x11, x29, #0x30
  40ffbc:	stur	x0, [x29, #-16]
  40ffc0:	stur	wzr, [x29, #-40]
  40ffc4:	stur	x8, [x29, #-48]
  40ffc8:	stur	x9, [x29, #-32]
  40ffcc:	mov	x0, x11
  40ffd0:	mov	x1, x10
  40ffd4:	bl	4022a0 <sigaltstack@plt>
  40ffd8:	stur	w0, [x29, #-20]
  40ffdc:	ldur	w12, [x29, #-20]
  40ffe0:	cbz	w12, 40fff0 <wcrtomb@plt+0xd6e0>
  40ffe4:	ldur	w8, [x29, #-20]
  40ffe8:	stur	w8, [x29, #-4]
  40ffec:	b	4100a4 <wcrtomb@plt+0xd794>
  40fff0:	ldur	x8, [x29, #-16]
  40fff4:	cbz	x8, 410004 <wcrtomb@plt+0xd6f4>
  40fff8:	ldur	x8, [x29, #-16]
  40fffc:	str	x8, [sp, #16]
  410000:	b	410010 <wcrtomb@plt+0xd700>
  410004:	adrp	x8, 410000 <wcrtomb@plt+0xd6f0>
  410008:	add	x8, x8, #0xb4
  41000c:	str	x8, [sp, #16]
  410010:	ldr	x8, [sp, #16]
  410014:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410018:	add	x9, x9, #0x750
  41001c:	str	x8, [x9]
  410020:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  410024:	add	x0, x0, #0x2a0
  410028:	bl	4028b0 <gettext@plt>
  41002c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410030:	add	x8, x8, #0x758
  410034:	str	x0, [x8]
  410038:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41003c:	add	x0, x0, #0x2ae
  410040:	bl	4028b0 <gettext@plt>
  410044:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410048:	add	x8, x8, #0x760
  41004c:	str	x0, [x8]
  410050:	bl	41df58 <wcrtomb@plt+0x1b648>
  410054:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410058:	add	x8, x8, #0x768
  41005c:	str	x0, [x8]
  410060:	add	x8, sp, #0x18
  410064:	add	x0, x8, #0x8
  410068:	str	x8, [sp, #8]
  41006c:	bl	4024c0 <sigemptyset@plt>
  410070:	mov	w10, #0x4                   	// #4
  410074:	movk	w10, #0xc800, lsl #16
  410078:	str	w10, [sp, #160]
  41007c:	adrp	x8, 410000 <wcrtomb@plt+0xd6f0>
  410080:	add	x8, x8, #0xc4
  410084:	str	x8, [sp, #24]
  410088:	mov	w10, #0xb                   	// #11
  41008c:	mov	w0, w10
  410090:	ldr	x1, [sp, #8]
  410094:	mov	x8, xzr
  410098:	mov	x2, x8
  41009c:	bl	4025b0 <sigaction@plt>
  4100a0:	stur	w0, [x29, #-4]
  4100a4:	ldur	w0, [x29, #-4]
  4100a8:	ldp	x29, x30, [sp, #224]
  4100ac:	add	sp, sp, #0xf0
  4100b0:	ret
  4100b4:	sub	sp, sp, #0x10
  4100b8:	str	w0, [sp, #12]
  4100bc:	add	sp, sp, #0x10
  4100c0:	ret
  4100c4:	sub	sp, sp, #0x30
  4100c8:	stp	x29, x30, [sp, #32]
  4100cc:	add	x29, sp, #0x20
  4100d0:	stur	w0, [x29, #-4]
  4100d4:	str	x1, [sp, #16]
  4100d8:	str	x2, [sp, #8]
  4100dc:	stur	wzr, [x29, #-4]
  4100e0:	ldur	w0, [x29, #-4]
  4100e4:	bl	4100e8 <wcrtomb@plt+0xd7d8>
  4100e8:	sub	sp, sp, #0x70
  4100ec:	stp	x29, x30, [sp, #96]
  4100f0:	add	x29, sp, #0x60
  4100f4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4100f8:	add	x8, x8, #0x750
  4100fc:	stur	w0, [x29, #-4]
  410100:	ldr	x8, [x8]
  410104:	ldur	w0, [x29, #-4]
  410108:	blr	x8
  41010c:	ldur	w9, [x29, #-4]
  410110:	cbz	w9, 410128 <wcrtomb@plt+0xd818>
  410114:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410118:	add	x8, x8, #0x758
  41011c:	ldr	x8, [x8]
  410120:	str	x8, [sp, #40]
  410124:	b	410138 <wcrtomb@plt+0xd828>
  410128:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  41012c:	add	x8, x8, #0x760
  410130:	ldr	x8, [x8]
  410134:	str	x8, [sp, #40]
  410138:	ldr	x8, [sp, #40]
  41013c:	stur	x8, [x29, #-16]
  410140:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410144:	add	x8, x8, #0x768
  410148:	ldr	x1, [x8]
  41014c:	ldr	x0, [x8]
  410150:	str	x1, [sp, #32]
  410154:	bl	4022f0 <strlen@plt>
  410158:	mov	w9, #0x2                   	// #2
  41015c:	str	x0, [sp, #24]
  410160:	mov	w0, w9
  410164:	ldr	x1, [sp, #32]
  410168:	ldr	x2, [sp, #24]
  41016c:	str	w9, [sp, #20]
  410170:	bl	4025f0 <write@plt>
  410174:	stur	x0, [x29, #-24]
  410178:	ldr	w0, [sp, #20]
  41017c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  410180:	add	x1, x1, #0x2bd
  410184:	mov	x2, #0x2                   	// #2
  410188:	bl	4025f0 <write@plt>
  41018c:	stur	x0, [x29, #-32]
  410190:	ldur	x1, [x29, #-16]
  410194:	ldur	x0, [x29, #-16]
  410198:	str	x1, [sp, #8]
  41019c:	bl	4022f0 <strlen@plt>
  4101a0:	ldr	w9, [sp, #20]
  4101a4:	str	x0, [sp]
  4101a8:	mov	w0, w9
  4101ac:	ldr	x1, [sp, #8]
  4101b0:	ldr	x2, [sp]
  4101b4:	bl	4025f0 <write@plt>
  4101b8:	stur	x0, [x29, #-40]
  4101bc:	ldr	w0, [sp, #20]
  4101c0:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4101c4:	add	x1, x1, #0xad4
  4101c8:	mov	x2, #0x1                   	// #1
  4101cc:	bl	4025f0 <write@plt>
  4101d0:	str	x0, [sp, #48]
  4101d4:	ldur	w9, [x29, #-4]
  4101d8:	cbnz	w9, 4101ec <wcrtomb@plt+0xd8dc>
  4101dc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4101e0:	add	x8, x8, #0x3d0
  4101e4:	ldr	w0, [x8]
  4101e8:	bl	4022d0 <_exit@plt>
  4101ec:	ldur	w0, [x29, #-4]
  4101f0:	bl	402320 <raise@plt>
  4101f4:	bl	402610 <abort@plt>
  4101f8:	sub	sp, sp, #0x40
  4101fc:	stp	x29, x30, [sp, #48]
  410200:	add	x29, sp, #0x30
  410204:	stur	x0, [x29, #-16]
  410208:	str	x1, [sp, #24]
  41020c:	ldur	x8, [x29, #-16]
  410210:	str	x8, [sp, #16]
  410214:	ldr	x8, [sp, #24]
  410218:	str	x8, [sp, #8]
  41021c:	ldr	x8, [sp, #16]
  410220:	ldr	x9, [sp, #8]
  410224:	cmp	x8, x9
  410228:	b.ne	410234 <wcrtomb@plt+0xd924>  // b.any
  41022c:	stur	wzr, [x29, #-4]
  410230:	b	410298 <wcrtomb@plt+0xd988>
  410234:	ldr	x8, [sp, #16]
  410238:	ldrb	w0, [x8]
  41023c:	bl	40ff04 <wcrtomb@plt+0xd5f4>
  410240:	strb	w0, [sp, #7]
  410244:	ldr	x8, [sp, #8]
  410248:	ldrb	w0, [x8]
  41024c:	bl	40ff04 <wcrtomb@plt+0xd5f4>
  410250:	strb	w0, [sp, #6]
  410254:	ldrb	w9, [sp, #7]
  410258:	cbnz	w9, 410260 <wcrtomb@plt+0xd950>
  41025c:	b	410288 <wcrtomb@plt+0xd978>
  410260:	ldr	x8, [sp, #16]
  410264:	add	x8, x8, #0x1
  410268:	str	x8, [sp, #16]
  41026c:	ldr	x8, [sp, #8]
  410270:	add	x8, x8, #0x1
  410274:	str	x8, [sp, #8]
  410278:	ldrb	w8, [sp, #7]
  41027c:	ldrb	w9, [sp, #6]
  410280:	cmp	w8, w9
  410284:	b.eq	410234 <wcrtomb@plt+0xd924>  // b.none
  410288:	ldrb	w8, [sp, #7]
  41028c:	ldrb	w9, [sp, #6]
  410290:	subs	w8, w8, w9
  410294:	stur	w8, [x29, #-4]
  410298:	ldur	w0, [x29, #-4]
  41029c:	ldp	x29, x30, [sp, #48]
  4102a0:	add	sp, sp, #0x40
  4102a4:	ret
  4102a8:	sub	sp, sp, #0x10
  4102ac:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4102b0:	add	x8, x8, #0x770
  4102b4:	str	x0, [sp, #8]
  4102b8:	ldr	x9, [sp, #8]
  4102bc:	str	x9, [x8]
  4102c0:	add	sp, sp, #0x10
  4102c4:	ret
  4102c8:	sub	sp, sp, #0x10
  4102cc:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4102d0:	add	x8, x8, #0x778
  4102d4:	mov	w9, #0x1                   	// #1
  4102d8:	and	w9, w0, w9
  4102dc:	strb	w9, [sp, #15]
  4102e0:	ldrb	w9, [sp, #15]
  4102e4:	and	w9, w9, #0x1
  4102e8:	strb	w9, [x8]
  4102ec:	add	sp, sp, #0x10
  4102f0:	ret
  4102f4:	sub	sp, sp, #0x30
  4102f8:	stp	x29, x30, [sp, #32]
  4102fc:	add	x29, sp, #0x20
  410300:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  410304:	add	x8, x8, #0x458
  410308:	ldr	x0, [x8]
  41030c:	bl	43fa44 <_obstack_memory_used@@Base+0x18124>
  410310:	cbz	w0, 4103cc <wcrtomb@plt+0xdabc>
  410314:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410318:	add	x8, x8, #0x778
  41031c:	ldrb	w9, [x8]
  410320:	tbnz	w9, #0, 410328 <wcrtomb@plt+0xda18>
  410324:	b	410338 <wcrtomb@plt+0xda28>
  410328:	bl	402870 <__errno_location@plt>
  41032c:	ldr	w8, [x0]
  410330:	cmp	w8, #0x20
  410334:	b.eq	4103cc <wcrtomb@plt+0xdabc>  // b.none
  410338:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41033c:	add	x0, x0, #0x9e
  410340:	bl	4028b0 <gettext@plt>
  410344:	stur	x0, [x29, #-8]
  410348:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  41034c:	add	x8, x8, #0x770
  410350:	ldr	x8, [x8]
  410354:	cbz	x8, 41039c <wcrtomb@plt+0xda8c>
  410358:	bl	402870 <__errno_location@plt>
  41035c:	ldr	w1, [x0]
  410360:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  410364:	add	x8, x8, #0x770
  410368:	ldr	x0, [x8]
  41036c:	stur	w1, [x29, #-12]
  410370:	bl	422298 <wcrtomb@plt+0x1f988>
  410374:	ldur	x4, [x29, #-8]
  410378:	mov	w9, wzr
  41037c:	str	x0, [sp, #8]
  410380:	mov	w0, w9
  410384:	ldur	w1, [x29, #-12]
  410388:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41038c:	add	x2, x2, #0x55
  410390:	ldr	x3, [sp, #8]
  410394:	bl	402330 <error@plt>
  410398:	b	4103bc <wcrtomb@plt+0xdaac>
  41039c:	bl	402870 <__errno_location@plt>
  4103a0:	ldr	w1, [x0]
  4103a4:	ldur	x3, [x29, #-8]
  4103a8:	mov	w8, wzr
  4103ac:	mov	w0, w8
  4103b0:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4103b4:	add	x2, x2, #0x122
  4103b8:	bl	402330 <error@plt>
  4103bc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4103c0:	add	x8, x8, #0x3d0
  4103c4:	ldr	w0, [x8]
  4103c8:	bl	4022d0 <_exit@plt>
  4103cc:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4103d0:	add	x8, x8, #0x440
  4103d4:	ldr	x0, [x8]
  4103d8:	bl	43fa44 <_obstack_memory_used@@Base+0x18124>
  4103dc:	cbz	w0, 4103f0 <wcrtomb@plt+0xdae0>
  4103e0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4103e4:	add	x8, x8, #0x3d0
  4103e8:	ldr	w0, [x8]
  4103ec:	bl	4022d0 <_exit@plt>
  4103f0:	ldp	x29, x30, [sp, #32]
  4103f4:	add	sp, sp, #0x30
  4103f8:	ret
  4103fc:	sub	sp, sp, #0x30
  410400:	stp	x29, x30, [sp, #32]
  410404:	add	x29, sp, #0x20
  410408:	mov	x8, #0xffffffffffffffff    	// #-1
  41040c:	mov	w9, #0x1                   	// #1
  410410:	stur	x0, [x29, #-8]
  410414:	str	x1, [sp, #16]
  410418:	str	x2, [sp, #8]
  41041c:	ldur	x10, [x29, #-8]
  410420:	ldr	x11, [sp, #8]
  410424:	str	x10, [x11, #32]
  410428:	ldr	x10, [sp, #16]
  41042c:	ldr	x11, [sp, #8]
  410430:	str	x10, [x11, #40]
  410434:	ldr	x10, [sp, #8]
  410438:	str	x8, [x10, #48]
  41043c:	ldr	x8, [sp, #8]
  410440:	strb	w9, [x8, #120]
  410444:	ldr	x8, [sp, #8]
  410448:	ldrb	w9, [x8, #456]
  41044c:	tbnz	w9, #0, 410460 <wcrtomb@plt+0xdb50>
  410450:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  410454:	add	x0, x0, #0x768
  410458:	bl	4028b0 <gettext@plt>
  41045c:	bl	402a2c <wcrtomb@plt+0x11c>
  410460:	ldr	x8, [sp, #8]
  410464:	ldr	x8, [x8, #184]
  410468:	cbnz	x8, 410478 <wcrtomb@plt+0xdb68>
  41046c:	ldr	x0, [sp, #8]
  410470:	mov	x1, #0x10b                 	// #267
  410474:	bl	41051c <wcrtomb@plt+0xdc0c>
  410478:	ldr	x0, [sp, #8]
  41047c:	bl	41061c <wcrtomb@plt+0xdd0c>
  410480:	ldr	x8, [sp, #8]
  410484:	str	x0, [x8, #128]
  410488:	ldr	x8, [sp, #8]
  41048c:	ldr	x8, [x8, #168]
  410490:	ldr	x9, [sp, #8]
  410494:	str	x8, [x9, #136]
  410498:	ldr	x0, [sp, #8]
  41049c:	bl	41150c <wcrtomb@plt+0xebfc>
  4104a0:	ldr	x8, [sp, #8]
  4104a4:	ldr	x8, [x8, #128]
  4104a8:	mov	x9, #0xffffffffffffffff    	// #-1
  4104ac:	cmp	x8, x9
  4104b0:	b.eq	4104c4 <wcrtomb@plt+0xdbb4>  // b.none
  4104b4:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4104b8:	add	x0, x0, #0x77c
  4104bc:	bl	4028b0 <gettext@plt>
  4104c0:	bl	402a2c <wcrtomb@plt+0x11c>
  4104c4:	ldr	x0, [sp, #8]
  4104c8:	ldr	x8, [sp, #8]
  4104cc:	ldr	x8, [x8, #184]
  4104d0:	mov	x9, #0xffffffffffffffff    	// #-1
  4104d4:	subs	x1, x9, x8
  4104d8:	bl	41051c <wcrtomb@plt+0xdc0c>
  4104dc:	ldr	x0, [sp, #8]
  4104e0:	mov	x1, #0x105                 	// #261
  4104e4:	bl	41051c <wcrtomb@plt+0xdc0c>
  4104e8:	ldr	x8, [sp, #8]
  4104ec:	ldr	x8, [x8, #184]
  4104f0:	cbz	x8, 410500 <wcrtomb@plt+0xdbf0>
  4104f4:	ldr	x0, [sp, #8]
  4104f8:	mov	x1, #0x106                 	// #262
  4104fc:	bl	41051c <wcrtomb@plt+0xdc0c>
  410500:	ldr	x8, [sp, #8]
  410504:	ldr	x9, [x8, #184]
  410508:	add	x9, x9, #0x1
  41050c:	str	x9, [x8, #184]
  410510:	ldp	x29, x30, [sp, #32]
  410514:	add	sp, sp, #0x30
  410518:	ret
  41051c:	sub	sp, sp, #0x30
  410520:	stp	x29, x30, [sp, #32]
  410524:	add	x29, sp, #0x20
  410528:	stur	x0, [x29, #-8]
  41052c:	str	x1, [sp, #16]
  410530:	ldur	x8, [x29, #-8]
  410534:	ldrb	w9, [x8, #1048]
  410538:	tbnz	w9, #0, 410540 <wcrtomb@plt+0xdc30>
  41053c:	b	410600 <wcrtomb@plt+0xdcf0>
  410540:	ldr	x8, [sp, #16]
  410544:	cmp	x8, #0x113
  410548:	b.ne	410600 <wcrtomb@plt+0xdcf0>  // b.any
  41054c:	mov	w8, #0x0                   	// #0
  410550:	strb	w8, [sp, #15]
  410554:	str	xzr, [sp]
  410558:	ldr	x8, [sp]
  41055c:	ldur	x9, [x29, #-8]
  410560:	ldr	x9, [x9, #104]
  410564:	cmp	x8, x9
  410568:	b.ge	4105b4 <wcrtomb@plt+0xdca4>  // b.tcont
  41056c:	ldur	x0, [x29, #-8]
  410570:	ldur	x8, [x29, #-8]
  410574:	ldr	x8, [x8, #96]
  410578:	ldr	x9, [sp]
  41057c:	ldr	w1, [x8, x9, lsl #2]
  410580:	bl	413f58 <wcrtomb@plt+0x11648>
  410584:	ldrb	w10, [sp, #15]
  410588:	tbnz	w10, #0, 410590 <wcrtomb@plt+0xdc80>
  41058c:	b	41059c <wcrtomb@plt+0xdc8c>
  410590:	ldur	x0, [x29, #-8]
  410594:	mov	x1, #0x106                 	// #262
  410598:	bl	41051c <wcrtomb@plt+0xdc0c>
  41059c:	mov	w8, #0x1                   	// #1
  4105a0:	strb	w8, [sp, #15]
  4105a4:	ldr	x8, [sp]
  4105a8:	add	x8, x8, #0x1
  4105ac:	str	x8, [sp]
  4105b0:	b	410558 <wcrtomb@plt+0xdc48>
  4105b4:	ldur	x8, [x29, #-8]
  4105b8:	str	xzr, [x8, #104]
  4105bc:	ldur	x8, [x29, #-8]
  4105c0:	ldr	x8, [x8, #80]
  4105c4:	mov	x9, #0xffffffffffffffff    	// #-1
  4105c8:	cmp	x8, x9
  4105cc:	b.eq	4105fc <wcrtomb@plt+0xdcec>  // b.none
  4105d0:	ldur	x0, [x29, #-8]
  4105d4:	ldur	x8, [x29, #-8]
  4105d8:	ldr	x8, [x8, #80]
  4105dc:	add	x1, x8, #0x114
  4105e0:	bl	41051c <wcrtomb@plt+0xdc0c>
  4105e4:	ldrb	w9, [sp, #15]
  4105e8:	tbnz	w9, #0, 4105f0 <wcrtomb@plt+0xdce0>
  4105ec:	b	4105fc <wcrtomb@plt+0xdcec>
  4105f0:	ldur	x0, [x29, #-8]
  4105f4:	mov	x1, #0x106                 	// #262
  4105f8:	bl	41051c <wcrtomb@plt+0xdc0c>
  4105fc:	b	410610 <wcrtomb@plt+0xdd00>
  410600:	ldur	x0, [x29, #-8]
  410604:	ldr	x1, [sp, #16]
  410608:	mov	w2, #0x3                   	// #3
  41060c:	bl	414060 <wcrtomb@plt+0x11750>
  410610:	ldp	x29, x30, [sp, #32]
  410614:	add	sp, sp, #0x30
  410618:	ret
  41061c:	sub	sp, sp, #0x150
  410620:	stp	x29, x30, [sp, #304]
  410624:	str	x28, [sp, #320]
  410628:	add	x29, sp, #0x130
  41062c:	mov	w8, #0x0                   	// #0
  410630:	stur	x0, [x29, #-16]
  410634:	sturb	w8, [x29, #-17]
  410638:	stur	wzr, [x29, #-24]
  41063c:	ldur	w8, [x29, #-24]
  410640:	cmp	w8, #0x2
  410644:	b.ge	4114f4 <wcrtomb@plt+0xebe4>  // b.tcont
  410648:	ldur	x8, [x29, #-16]
  41064c:	ldr	x8, [x8, #40]
  410650:	cbnz	x8, 410668 <wcrtomb@plt+0xdd58>
  410654:	ldur	x8, [x29, #-16]
  410658:	mov	x9, #0xffffffffffffffff    	// #-1
  41065c:	str	x9, [x8, #48]
  410660:	stur	x9, [x29, #-8]
  410664:	b	4114f8 <wcrtomb@plt+0xebe8>
  410668:	ldur	x0, [x29, #-16]
  41066c:	bl	417050 <wcrtomb@plt+0x14740>
  410670:	stur	w0, [x29, #-28]
  410674:	ldur	w8, [x29, #-28]
  410678:	subs	w8, w8, #0xa
  41067c:	mov	w9, w8
  410680:	ubfx	x9, x9, #0, #32
  410684:	cmp	x9, #0x72
  410688:	str	x9, [sp, #64]
  41068c:	b.hi	41143c <wcrtomb@plt+0xeb2c>  // b.pmore
  410690:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  410694:	add	x8, x8, #0x2c0
  410698:	ldr	x11, [sp, #64]
  41069c:	ldrsw	x10, [x8, x11, lsl #2]
  4106a0:	add	x9, x8, x10
  4106a4:	br	x9
  4106a8:	ldurb	w8, [x29, #-17]
  4106ac:	tbnz	w8, #0, 4106b4 <wcrtomb@plt+0xdda4>
  4106b0:	b	4106b8 <wcrtomb@plt+0xdda8>
  4106b4:	b	41143c <wcrtomb@plt+0xeb2c>
  4106b8:	ldur	x8, [x29, #-16]
  4106bc:	ldr	x8, [x8, #40]
  4106c0:	cbnz	x8, 4106d4 <wcrtomb@plt+0xddc4>
  4106c4:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4106c8:	add	x0, x0, #0x7f7
  4106cc:	bl	4028b0 <gettext@plt>
  4106d0:	bl	402a2c <wcrtomb@plt+0x11c>
  4106d4:	mov	w8, #0x1                   	// #1
  4106d8:	sturb	w8, [x29, #-17]
  4106dc:	b	4114e4 <wcrtomb@plt+0xebd4>
  4106e0:	ldurb	w8, [x29, #-17]
  4106e4:	tbnz	w8, #0, 4106ec <wcrtomb@plt+0xdddc>
  4106e8:	b	4106f0 <wcrtomb@plt+0xdde0>
  4106ec:	b	41143c <wcrtomb@plt+0xeb2c>
  4106f0:	ldur	x8, [x29, #-16]
  4106f4:	ldr	x8, [x8, #448]
  4106f8:	and	x8, x8, #0x8
  4106fc:	cbnz	x8, 410734 <wcrtomb@plt+0xde24>
  410700:	ldur	x8, [x29, #-16]
  410704:	ldr	x8, [x8, #48]
  410708:	mov	x9, #0xffffffffffffffff    	// #-1
  41070c:	cmp	x8, x9
  410710:	b.eq	410734 <wcrtomb@plt+0xde24>  // b.none
  410714:	ldur	x8, [x29, #-16]
  410718:	ldr	x8, [x8, #48]
  41071c:	cmp	x8, #0x107
  410720:	b.eq	410734 <wcrtomb@plt+0xde24>  // b.none
  410724:	ldur	x8, [x29, #-16]
  410728:	ldr	x8, [x8, #48]
  41072c:	cmp	x8, #0x106
  410730:	b.ne	410748 <wcrtomb@plt+0xde38>  // b.any
  410734:	ldur	x8, [x29, #-16]
  410738:	mov	x9, #0x10c                 	// #268
  41073c:	str	x9, [x8, #48]
  410740:	stur	x9, [x29, #-8]
  410744:	b	4114f8 <wcrtomb@plt+0xebe8>
  410748:	b	41143c <wcrtomb@plt+0xeb2c>
  41074c:	ldurb	w8, [x29, #-17]
  410750:	tbnz	w8, #0, 410758 <wcrtomb@plt+0xde48>
  410754:	b	41075c <wcrtomb@plt+0xde4c>
  410758:	b	41143c <wcrtomb@plt+0xeb2c>
  41075c:	ldur	x8, [x29, #-16]
  410760:	ldr	x8, [x8, #448]
  410764:	and	x8, x8, #0x8
  410768:	cbnz	x8, 4108a0 <wcrtomb@plt+0xdf90>
  41076c:	ldur	x8, [x29, #-16]
  410770:	ldr	x8, [x8, #40]
  410774:	cbz	x8, 4108a0 <wcrtomb@plt+0xdf90>
  410778:	ldur	x8, [x29, #-16]
  41077c:	ldr	x8, [x8, #40]
  410780:	ldur	x9, [x29, #-16]
  410784:	ldr	x9, [x9, #448]
  410788:	tst	x9, #0x2000
  41078c:	cset	w10, ne  // ne = any
  410790:	eor	w10, w10, #0x1
  410794:	and	w10, w10, #0x1
  410798:	mov	w0, w10
  41079c:	sxtw	x9, w0
  4107a0:	cmp	x8, x9
  4107a4:	b.le	4107f0 <wcrtomb@plt+0xdee0>
  4107a8:	ldur	x8, [x29, #-16]
  4107ac:	ldr	x8, [x8, #32]
  4107b0:	ldur	x9, [x29, #-16]
  4107b4:	ldr	x9, [x9, #448]
  4107b8:	tst	x9, #0x2000
  4107bc:	cset	w10, ne  // ne = any
  4107c0:	eor	w10, w10, #0x1
  4107c4:	and	w10, w10, #0x1
  4107c8:	ldur	x9, [x29, #-16]
  4107cc:	ldr	x9, [x9, #32]
  4107d0:	ldrb	w11, [x9]
  4107d4:	cmp	w11, #0x5c
  4107d8:	cset	w11, eq  // eq = none
  4107dc:	and	w11, w11, #0x1
  4107e0:	and	w10, w10, w11
  4107e4:	ldrb	w10, [x8, w10, sxtw]
  4107e8:	cmp	w10, #0x29
  4107ec:	b.eq	4108a0 <wcrtomb@plt+0xdf90>  // b.none
  4107f0:	ldur	x8, [x29, #-16]
  4107f4:	ldr	x8, [x8, #40]
  4107f8:	ldur	x9, [x29, #-16]
  4107fc:	ldr	x9, [x9, #448]
  410800:	tst	x9, #0x8000
  410804:	cset	w10, ne  // ne = any
  410808:	eor	w10, w10, #0x1
  41080c:	and	w10, w10, #0x1
  410810:	mov	w0, w10
  410814:	sxtw	x9, w0
  410818:	cmp	x8, x9
  41081c:	b.le	410868 <wcrtomb@plt+0xdf58>
  410820:	ldur	x8, [x29, #-16]
  410824:	ldr	x8, [x8, #32]
  410828:	ldur	x9, [x29, #-16]
  41082c:	ldr	x9, [x9, #448]
  410830:	tst	x9, #0x8000
  410834:	cset	w10, ne  // ne = any
  410838:	eor	w10, w10, #0x1
  41083c:	and	w10, w10, #0x1
  410840:	ldur	x9, [x29, #-16]
  410844:	ldr	x9, [x9, #32]
  410848:	ldrb	w11, [x9]
  41084c:	cmp	w11, #0x5c
  410850:	cset	w11, eq  // eq = none
  410854:	and	w11, w11, #0x1
  410858:	and	w10, w10, w11
  41085c:	ldrb	w10, [x8, w10, sxtw]
  410860:	cmp	w10, #0x7c
  410864:	b.eq	4108a0 <wcrtomb@plt+0xdf90>  // b.none
  410868:	ldur	x8, [x29, #-16]
  41086c:	ldr	x8, [x8, #448]
  410870:	and	x8, x8, #0x800
  410874:	cbz	x8, 4108b4 <wcrtomb@plt+0xdfa4>
  410878:	ldur	x8, [x29, #-16]
  41087c:	ldr	x8, [x8, #40]
  410880:	cmp	x8, #0x0
  410884:	cset	w9, le
  410888:	tbnz	w9, #0, 4108b4 <wcrtomb@plt+0xdfa4>
  41088c:	ldur	x8, [x29, #-16]
  410890:	ldr	x8, [x8, #32]
  410894:	ldrb	w9, [x8]
  410898:	cmp	w9, #0xa
  41089c:	b.ne	4108b4 <wcrtomb@plt+0xdfa4>  // b.any
  4108a0:	ldur	x8, [x29, #-16]
  4108a4:	mov	x9, #0x10d                 	// #269
  4108a8:	str	x9, [x8, #48]
  4108ac:	stur	x9, [x29, #-8]
  4108b0:	b	4114f8 <wcrtomb@plt+0xebe8>
  4108b4:	b	41143c <wcrtomb@plt+0xeb2c>
  4108b8:	ldurb	w8, [x29, #-17]
  4108bc:	tbnz	w8, #0, 4108c4 <wcrtomb@plt+0xdfb4>
  4108c0:	b	4108f4 <wcrtomb@plt+0xdfe4>
  4108c4:	ldur	x8, [x29, #-16]
  4108c8:	ldr	x8, [x8, #448]
  4108cc:	and	x8, x8, #0x4000
  4108d0:	cbnz	x8, 4108f4 <wcrtomb@plt+0xdfe4>
  4108d4:	ldur	x8, [x29, #-16]
  4108d8:	mov	w9, #0x0                   	// #0
  4108dc:	strb	w9, [x8, #120]
  4108e0:	ldur	x8, [x29, #-16]
  4108e4:	mov	x10, #0x112                 	// #274
  4108e8:	str	x10, [x8, #48]
  4108ec:	stur	x10, [x29, #-8]
  4108f0:	b	4114f8 <wcrtomb@plt+0xebe8>
  4108f4:	b	41143c <wcrtomb@plt+0xeb2c>
  4108f8:	ldurb	w8, [x29, #-17]
  4108fc:	tbnz	w8, #0, 410904 <wcrtomb@plt+0xdff4>
  410900:	b	410928 <wcrtomb@plt+0xe018>
  410904:	ldur	x8, [x29, #-16]
  410908:	ldr	x8, [x8, #448]
  41090c:	and	x8, x8, #0x80000
  410910:	cbnz	x8, 410928 <wcrtomb@plt+0xe018>
  410914:	ldur	x8, [x29, #-16]
  410918:	mov	x9, #0x10c                 	// #268
  41091c:	str	x9, [x8, #48]
  410920:	stur	x9, [x29, #-8]
  410924:	b	4114f8 <wcrtomb@plt+0xebe8>
  410928:	b	41143c <wcrtomb@plt+0xeb2c>
  41092c:	ldurb	w8, [x29, #-17]
  410930:	tbnz	w8, #0, 410938 <wcrtomb@plt+0xe028>
  410934:	b	41095c <wcrtomb@plt+0xe04c>
  410938:	ldur	x8, [x29, #-16]
  41093c:	ldr	x8, [x8, #448]
  410940:	and	x8, x8, #0x80000
  410944:	cbnz	x8, 41095c <wcrtomb@plt+0xe04c>
  410948:	ldur	x8, [x29, #-16]
  41094c:	mov	x9, #0x10d                 	// #269
  410950:	str	x9, [x8, #48]
  410954:	stur	x9, [x29, #-8]
  410958:	b	4114f8 <wcrtomb@plt+0xebe8>
  41095c:	b	41143c <wcrtomb@plt+0xeb2c>
  410960:	ldurb	w8, [x29, #-17]
  410964:	tbnz	w8, #0, 41096c <wcrtomb@plt+0xe05c>
  410968:	b	410990 <wcrtomb@plt+0xe080>
  41096c:	ldur	x8, [x29, #-16]
  410970:	ldr	x8, [x8, #448]
  410974:	and	x8, x8, #0x80000
  410978:	cbnz	x8, 410990 <wcrtomb@plt+0xe080>
  41097c:	ldur	x8, [x29, #-16]
  410980:	mov	x9, #0x10e                 	// #270
  410984:	str	x9, [x8, #48]
  410988:	stur	x9, [x29, #-8]
  41098c:	b	4114f8 <wcrtomb@plt+0xebe8>
  410990:	b	41143c <wcrtomb@plt+0xeb2c>
  410994:	ldurb	w8, [x29, #-17]
  410998:	tbnz	w8, #0, 4109a0 <wcrtomb@plt+0xe090>
  41099c:	b	4109c4 <wcrtomb@plt+0xe0b4>
  4109a0:	ldur	x8, [x29, #-16]
  4109a4:	ldr	x8, [x8, #448]
  4109a8:	and	x8, x8, #0x80000
  4109ac:	cbnz	x8, 4109c4 <wcrtomb@plt+0xe0b4>
  4109b0:	ldur	x8, [x29, #-16]
  4109b4:	mov	x9, #0x10f                 	// #271
  4109b8:	str	x9, [x8, #48]
  4109bc:	stur	x9, [x29, #-8]
  4109c0:	b	4114f8 <wcrtomb@plt+0xebe8>
  4109c4:	b	41143c <wcrtomb@plt+0xeb2c>
  4109c8:	ldurb	w8, [x29, #-17]
  4109cc:	tbnz	w8, #0, 4109d4 <wcrtomb@plt+0xe0c4>
  4109d0:	b	4109f8 <wcrtomb@plt+0xe0e8>
  4109d4:	ldur	x8, [x29, #-16]
  4109d8:	ldr	x8, [x8, #448]
  4109dc:	and	x8, x8, #0x80000
  4109e0:	cbnz	x8, 4109f8 <wcrtomb@plt+0xe0e8>
  4109e4:	ldur	x8, [x29, #-16]
  4109e8:	mov	x9, #0x110                 	// #272
  4109ec:	str	x9, [x8, #48]
  4109f0:	stur	x9, [x29, #-8]
  4109f4:	b	4114f8 <wcrtomb@plt+0xebe8>
  4109f8:	b	41143c <wcrtomb@plt+0xeb2c>
  4109fc:	ldurb	w8, [x29, #-17]
  410a00:	tbnz	w8, #0, 410a08 <wcrtomb@plt+0xe0f8>
  410a04:	b	410a2c <wcrtomb@plt+0xe11c>
  410a08:	ldur	x8, [x29, #-16]
  410a0c:	ldr	x8, [x8, #448]
  410a10:	and	x8, x8, #0x80000
  410a14:	cbnz	x8, 410a2c <wcrtomb@plt+0xe11c>
  410a18:	ldur	x8, [x29, #-16]
  410a1c:	mov	x9, #0x111                 	// #273
  410a20:	str	x9, [x8, #48]
  410a24:	stur	x9, [x29, #-8]
  410a28:	b	4114f8 <wcrtomb@plt+0xebe8>
  410a2c:	b	41143c <wcrtomb@plt+0xeb2c>
  410a30:	ldur	x8, [x29, #-16]
  410a34:	ldr	x8, [x8, #448]
  410a38:	and	x8, x8, #0x400
  410a3c:	cbz	x8, 410a44 <wcrtomb@plt+0xe134>
  410a40:	b	41143c <wcrtomb@plt+0xeb2c>
  410a44:	ldurb	w8, [x29, #-17]
  410a48:	and	w8, w8, #0x1
  410a4c:	ldur	x9, [x29, #-16]
  410a50:	ldr	x9, [x9, #448]
  410a54:	tst	x9, #0x2
  410a58:	cset	w10, ne  // ne = any
  410a5c:	and	w10, w10, #0x1
  410a60:	cmp	w8, w10
  410a64:	b.eq	410a6c <wcrtomb@plt+0xe15c>  // b.none
  410a68:	b	41143c <wcrtomb@plt+0xeb2c>
  410a6c:	ldur	x8, [x29, #-16]
  410a70:	ldr	x8, [x8, #448]
  410a74:	and	x8, x8, #0x10
  410a78:	cbnz	x8, 410a90 <wcrtomb@plt+0xe180>
  410a7c:	ldur	x8, [x29, #-16]
  410a80:	ldrb	w9, [x8, #120]
  410a84:	tbnz	w9, #0, 410a8c <wcrtomb@plt+0xe17c>
  410a88:	b	410a90 <wcrtomb@plt+0xe180>
  410a8c:	b	41143c <wcrtomb@plt+0xeb2c>
  410a90:	ldur	x8, [x29, #-16]
  410a94:	mov	x9, #0x101                 	// #257
  410a98:	str	x9, [x8, #48]
  410a9c:	stur	x9, [x29, #-8]
  410aa0:	b	4114f8 <wcrtomb@plt+0xebe8>
  410aa4:	ldurb	w8, [x29, #-17]
  410aa8:	tbnz	w8, #0, 410ab0 <wcrtomb@plt+0xe1a0>
  410aac:	b	410ab4 <wcrtomb@plt+0xe1a4>
  410ab0:	b	41143c <wcrtomb@plt+0xeb2c>
  410ab4:	ldur	x8, [x29, #-16]
  410ab8:	ldr	x8, [x8, #448]
  410abc:	and	x8, x8, #0x10
  410ac0:	cbnz	x8, 410ad8 <wcrtomb@plt+0xe1c8>
  410ac4:	ldur	x8, [x29, #-16]
  410ac8:	ldrb	w9, [x8, #120]
  410acc:	tbnz	w9, #0, 410ad4 <wcrtomb@plt+0xe1c4>
  410ad0:	b	410ad8 <wcrtomb@plt+0xe1c8>
  410ad4:	b	41143c <wcrtomb@plt+0xeb2c>
  410ad8:	ldur	x8, [x29, #-16]
  410adc:	mov	x9, #0x102                 	// #258
  410ae0:	str	x9, [x8, #48]
  410ae4:	stur	x9, [x29, #-8]
  410ae8:	b	4114f8 <wcrtomb@plt+0xebe8>
  410aec:	ldur	x8, [x29, #-16]
  410af0:	ldr	x8, [x8, #448]
  410af4:	and	x8, x8, #0x400
  410af8:	cbz	x8, 410b00 <wcrtomb@plt+0xe1f0>
  410afc:	b	41143c <wcrtomb@plt+0xeb2c>
  410b00:	ldurb	w8, [x29, #-17]
  410b04:	and	w8, w8, #0x1
  410b08:	ldur	x9, [x29, #-16]
  410b0c:	ldr	x9, [x9, #448]
  410b10:	tst	x9, #0x2
  410b14:	cset	w10, ne  // ne = any
  410b18:	and	w10, w10, #0x1
  410b1c:	cmp	w8, w10
  410b20:	b.eq	410b28 <wcrtomb@plt+0xe218>  // b.none
  410b24:	b	41143c <wcrtomb@plt+0xeb2c>
  410b28:	ldur	x8, [x29, #-16]
  410b2c:	ldr	x8, [x8, #448]
  410b30:	and	x8, x8, #0x10
  410b34:	cbnz	x8, 410b4c <wcrtomb@plt+0xe23c>
  410b38:	ldur	x8, [x29, #-16]
  410b3c:	ldrb	w9, [x8, #120]
  410b40:	tbnz	w9, #0, 410b48 <wcrtomb@plt+0xe238>
  410b44:	b	410b4c <wcrtomb@plt+0xe23c>
  410b48:	b	41143c <wcrtomb@plt+0xeb2c>
  410b4c:	ldur	x8, [x29, #-16]
  410b50:	mov	x9, #0x103                 	// #259
  410b54:	str	x9, [x8, #48]
  410b58:	stur	x9, [x29, #-8]
  410b5c:	b	4114f8 <wcrtomb@plt+0xebe8>
  410b60:	ldur	x8, [x29, #-16]
  410b64:	ldr	x8, [x8, #448]
  410b68:	and	x8, x8, #0x200
  410b6c:	cbnz	x8, 410b74 <wcrtomb@plt+0xe264>
  410b70:	b	41143c <wcrtomb@plt+0xeb2c>
  410b74:	ldurb	w8, [x29, #-17]
  410b78:	and	w8, w8, #0x1
  410b7c:	ldur	x9, [x29, #-16]
  410b80:	ldr	x9, [x9, #448]
  410b84:	tst	x9, #0x1000
  410b88:	cset	w10, eq  // eq = none
  410b8c:	and	w10, w10, #0x1
  410b90:	cmp	w8, w10
  410b94:	b.eq	410b9c <wcrtomb@plt+0xe28c>  // b.none
  410b98:	b	41143c <wcrtomb@plt+0xeb2c>
  410b9c:	ldur	x8, [x29, #-16]
  410ba0:	ldr	x8, [x8, #448]
  410ba4:	and	x8, x8, #0x10
  410ba8:	cbnz	x8, 410bc0 <wcrtomb@plt+0xe2b0>
  410bac:	ldur	x8, [x29, #-16]
  410bb0:	ldrb	w9, [x8, #120]
  410bb4:	tbnz	w9, #0, 410bbc <wcrtomb@plt+0xe2ac>
  410bb8:	b	410bc0 <wcrtomb@plt+0xe2b0>
  410bbc:	b	41143c <wcrtomb@plt+0xeb2c>
  410bc0:	ldur	x8, [x29, #-16]
  410bc4:	ldr	x8, [x8, #32]
  410bc8:	stur	x8, [x29, #-40]
  410bcc:	ldur	x8, [x29, #-40]
  410bd0:	ldur	x9, [x29, #-16]
  410bd4:	ldr	x9, [x9, #40]
  410bd8:	add	x8, x8, x9
  410bdc:	stur	x8, [x29, #-48]
  410be0:	ldur	x8, [x29, #-16]
  410be4:	mov	w10, #0xffffffff            	// #-1
  410be8:	str	w10, [x8, #68]
  410bec:	ldur	x8, [x29, #-16]
  410bf0:	str	w10, [x8, #64]
  410bf4:	ldur	x8, [x29, #-40]
  410bf8:	ldur	x9, [x29, #-48]
  410bfc:	mov	w10, #0x0                   	// #0
  410c00:	cmp	x8, x9
  410c04:	str	w10, [sp, #60]
  410c08:	b.eq	410c1c <wcrtomb@plt+0xe30c>  // b.none
  410c0c:	ldur	x8, [x29, #-40]
  410c10:	ldrb	w0, [x8]
  410c14:	bl	4170f4 <wcrtomb@plt+0x147e4>
  410c18:	str	w0, [sp, #60]
  410c1c:	ldr	w8, [sp, #60]
  410c20:	tbnz	w8, #0, 410c28 <wcrtomb@plt+0xe318>
  410c24:	b	410cd0 <wcrtomb@plt+0xe3c0>
  410c28:	ldur	x8, [x29, #-16]
  410c2c:	ldr	w9, [x8, #64]
  410c30:	cmp	w9, #0x0
  410c34:	cset	w9, ge  // ge = tcont
  410c38:	tbnz	w9, #0, 410c50 <wcrtomb@plt+0xe340>
  410c3c:	ldur	x8, [x29, #-40]
  410c40:	ldrb	w9, [x8]
  410c44:	subs	w9, w9, #0x30
  410c48:	str	w9, [sp, #56]
  410c4c:	b	410cb4 <wcrtomb@plt+0xe3a4>
  410c50:	ldur	x8, [x29, #-16]
  410c54:	ldr	w9, [x8, #64]
  410c58:	mov	w10, #0xa                   	// #10
  410c5c:	mul	w9, w9, w10
  410c60:	ldur	x8, [x29, #-40]
  410c64:	ldrb	w10, [x8]
  410c68:	add	w9, w9, w10
  410c6c:	subs	w9, w9, #0x30
  410c70:	mov	w10, #0x8000                	// #32768
  410c74:	cmp	w10, w9
  410c78:	b.ge	410c88 <wcrtomb@plt+0xe378>  // b.tcont
  410c7c:	mov	w8, #0x8000                	// #32768
  410c80:	str	w8, [sp, #52]
  410c84:	b	410cac <wcrtomb@plt+0xe39c>
  410c88:	ldur	x8, [x29, #-16]
  410c8c:	ldr	w9, [x8, #64]
  410c90:	mov	w10, #0xa                   	// #10
  410c94:	mul	w9, w9, w10
  410c98:	ldur	x8, [x29, #-40]
  410c9c:	ldrb	w10, [x8]
  410ca0:	add	w9, w9, w10
  410ca4:	subs	w9, w9, #0x30
  410ca8:	str	w9, [sp, #52]
  410cac:	ldr	w8, [sp, #52]
  410cb0:	str	w8, [sp, #56]
  410cb4:	ldr	w8, [sp, #56]
  410cb8:	ldur	x9, [x29, #-16]
  410cbc:	str	w8, [x9, #64]
  410cc0:	ldur	x8, [x29, #-40]
  410cc4:	add	x8, x8, #0x1
  410cc8:	stur	x8, [x29, #-40]
  410ccc:	b	410bf4 <wcrtomb@plt+0xe2e4>
  410cd0:	ldur	x8, [x29, #-40]
  410cd4:	ldur	x9, [x29, #-48]
  410cd8:	cmp	x8, x9
  410cdc:	b.eq	410df8 <wcrtomb@plt+0xe4e8>  // b.none
  410ce0:	ldur	x8, [x29, #-40]
  410ce4:	ldrb	w9, [x8]
  410ce8:	cmp	w9, #0x2c
  410cec:	b.eq	410d04 <wcrtomb@plt+0xe3f4>  // b.none
  410cf0:	ldur	x8, [x29, #-16]
  410cf4:	ldr	w9, [x8, #64]
  410cf8:	ldur	x8, [x29, #-16]
  410cfc:	str	w9, [x8, #68]
  410d00:	b	410df8 <wcrtomb@plt+0xe4e8>
  410d04:	ldur	x8, [x29, #-16]
  410d08:	ldr	w9, [x8, #64]
  410d0c:	cmp	w9, #0x0
  410d10:	cset	w9, ge  // ge = tcont
  410d14:	tbnz	w9, #0, 410d20 <wcrtomb@plt+0xe410>
  410d18:	ldur	x8, [x29, #-16]
  410d1c:	str	wzr, [x8, #64]
  410d20:	ldur	x8, [x29, #-40]
  410d24:	add	x8, x8, #0x1
  410d28:	stur	x8, [x29, #-40]
  410d2c:	ldur	x9, [x29, #-48]
  410d30:	mov	w10, #0x0                   	// #0
  410d34:	cmp	x8, x9
  410d38:	str	w10, [sp, #48]
  410d3c:	b.eq	410d50 <wcrtomb@plt+0xe440>  // b.none
  410d40:	ldur	x8, [x29, #-40]
  410d44:	ldrb	w0, [x8]
  410d48:	bl	4170f4 <wcrtomb@plt+0x147e4>
  410d4c:	str	w0, [sp, #48]
  410d50:	ldr	w8, [sp, #48]
  410d54:	tbnz	w8, #0, 410d5c <wcrtomb@plt+0xe44c>
  410d58:	b	410df8 <wcrtomb@plt+0xe4e8>
  410d5c:	ldur	x8, [x29, #-16]
  410d60:	ldr	w9, [x8, #68]
  410d64:	cmp	w9, #0x0
  410d68:	cset	w9, ge  // ge = tcont
  410d6c:	tbnz	w9, #0, 410d84 <wcrtomb@plt+0xe474>
  410d70:	ldur	x8, [x29, #-40]
  410d74:	ldrb	w9, [x8]
  410d78:	subs	w9, w9, #0x30
  410d7c:	str	w9, [sp, #44]
  410d80:	b	410de8 <wcrtomb@plt+0xe4d8>
  410d84:	ldur	x8, [x29, #-16]
  410d88:	ldr	w9, [x8, #68]
  410d8c:	mov	w10, #0xa                   	// #10
  410d90:	mul	w9, w9, w10
  410d94:	ldur	x8, [x29, #-40]
  410d98:	ldrb	w10, [x8]
  410d9c:	add	w9, w9, w10
  410da0:	subs	w9, w9, #0x30
  410da4:	mov	w10, #0x8000                	// #32768
  410da8:	cmp	w10, w9
  410dac:	b.ge	410dbc <wcrtomb@plt+0xe4ac>  // b.tcont
  410db0:	mov	w8, #0x8000                	// #32768
  410db4:	str	w8, [sp, #40]
  410db8:	b	410de0 <wcrtomb@plt+0xe4d0>
  410dbc:	ldur	x8, [x29, #-16]
  410dc0:	ldr	w9, [x8, #68]
  410dc4:	mov	w10, #0xa                   	// #10
  410dc8:	mul	w9, w9, w10
  410dcc:	ldur	x8, [x29, #-40]
  410dd0:	ldrb	w10, [x8]
  410dd4:	add	w9, w9, w10
  410dd8:	subs	w9, w9, #0x30
  410ddc:	str	w9, [sp, #40]
  410de0:	ldr	w8, [sp, #40]
  410de4:	str	w8, [sp, #44]
  410de8:	ldr	w8, [sp, #44]
  410dec:	ldur	x9, [x29, #-16]
  410df0:	str	w8, [x9, #68]
  410df4:	b	410d20 <wcrtomb@plt+0xe410>
  410df8:	ldurb	w8, [x29, #-17]
  410dfc:	tbnz	w8, #0, 410e04 <wcrtomb@plt+0xe4f4>
  410e00:	b	410e2c <wcrtomb@plt+0xe51c>
  410e04:	ldur	x8, [x29, #-40]
  410e08:	ldur	x9, [x29, #-48]
  410e0c:	cmp	x8, x9
  410e10:	b.eq	410e98 <wcrtomb@plt+0xe588>  // b.none
  410e14:	ldur	x8, [x29, #-40]
  410e18:	add	x9, x8, #0x1
  410e1c:	stur	x9, [x29, #-40]
  410e20:	ldrb	w10, [x8]
  410e24:	cmp	w10, #0x5c
  410e28:	b.ne	410e98 <wcrtomb@plt+0xe588>  // b.any
  410e2c:	ldur	x8, [x29, #-40]
  410e30:	ldur	x9, [x29, #-48]
  410e34:	cmp	x8, x9
  410e38:	b.eq	410e98 <wcrtomb@plt+0xe588>  // b.none
  410e3c:	ldur	x8, [x29, #-40]
  410e40:	add	x9, x8, #0x1
  410e44:	stur	x9, [x29, #-40]
  410e48:	ldrb	w10, [x8]
  410e4c:	cmp	w10, #0x7d
  410e50:	b.ne	410e98 <wcrtomb@plt+0xe588>  // b.any
  410e54:	ldur	x8, [x29, #-16]
  410e58:	ldr	w9, [x8, #64]
  410e5c:	mov	w10, wzr
  410e60:	cmp	w10, w9
  410e64:	cset	w9, gt
  410e68:	tbnz	w9, #0, 410e98 <wcrtomb@plt+0xe588>
  410e6c:	ldur	x8, [x29, #-16]
  410e70:	ldr	w9, [x8, #68]
  410e74:	cmp	w9, #0x0
  410e78:	cset	w9, lt  // lt = tstop
  410e7c:	tbnz	w9, #0, 410ebc <wcrtomb@plt+0xe5ac>
  410e80:	ldur	x8, [x29, #-16]
  410e84:	ldr	w9, [x8, #64]
  410e88:	ldur	x8, [x29, #-16]
  410e8c:	ldr	w10, [x8, #68]
  410e90:	cmp	w9, w10
  410e94:	b.le	410ebc <wcrtomb@plt+0xe5ac>
  410e98:	ldur	x8, [x29, #-16]
  410e9c:	ldr	x8, [x8, #448]
  410ea0:	and	x8, x8, #0x200000
  410ea4:	cbz	x8, 410eac <wcrtomb@plt+0xe59c>
  410ea8:	b	41143c <wcrtomb@plt+0xeb2c>
  410eac:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  410eb0:	add	x0, x0, #0x80b
  410eb4:	bl	4028b0 <gettext@plt>
  410eb8:	bl	402a2c <wcrtomb@plt+0x11c>
  410ebc:	ldur	x8, [x29, #-16]
  410ec0:	ldr	w9, [x8, #68]
  410ec4:	mov	w10, #0x7fff                	// #32767
  410ec8:	cmp	w10, w9
  410ecc:	b.ge	410ee0 <wcrtomb@plt+0xe5d0>  // b.tcont
  410ed0:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  410ed4:	add	x0, x0, #0x823
  410ed8:	bl	4028b0 <gettext@plt>
  410edc:	bl	402a2c <wcrtomb@plt+0x11c>
  410ee0:	ldur	x8, [x29, #-40]
  410ee4:	ldur	x9, [x29, #-16]
  410ee8:	str	x8, [x9, #32]
  410eec:	ldur	x8, [x29, #-48]
  410ef0:	ldur	x9, [x29, #-40]
  410ef4:	subs	x8, x8, x9
  410ef8:	ldur	x9, [x29, #-16]
  410efc:	str	x8, [x9, #40]
  410f00:	ldur	x8, [x29, #-16]
  410f04:	mov	w10, #0x0                   	// #0
  410f08:	strb	w10, [x8, #120]
  410f0c:	ldur	x8, [x29, #-16]
  410f10:	mov	x9, #0x104                 	// #260
  410f14:	str	x9, [x8, #48]
  410f18:	stur	x9, [x29, #-8]
  410f1c:	b	4114f8 <wcrtomb@plt+0xebe8>
  410f20:	ldur	x8, [x29, #-16]
  410f24:	ldr	x8, [x8, #448]
  410f28:	and	x8, x8, #0x400
  410f2c:	cbz	x8, 410f34 <wcrtomb@plt+0xe624>
  410f30:	b	41143c <wcrtomb@plt+0xeb2c>
  410f34:	ldurb	w8, [x29, #-17]
  410f38:	and	w8, w8, #0x1
  410f3c:	ldur	x9, [x29, #-16]
  410f40:	ldr	x9, [x9, #448]
  410f44:	tst	x9, #0x8000
  410f48:	cset	w10, eq  // eq = none
  410f4c:	and	w10, w10, #0x1
  410f50:	cmp	w8, w10
  410f54:	b.eq	410f5c <wcrtomb@plt+0xe64c>  // b.none
  410f58:	b	41143c <wcrtomb@plt+0xeb2c>
  410f5c:	ldur	x8, [x29, #-16]
  410f60:	mov	w9, #0x1                   	// #1
  410f64:	strb	w9, [x8, #120]
  410f68:	ldur	x8, [x29, #-16]
  410f6c:	mov	x10, #0x106                 	// #262
  410f70:	str	x10, [x8, #48]
  410f74:	stur	x10, [x29, #-8]
  410f78:	b	4114f8 <wcrtomb@plt+0xebe8>
  410f7c:	ldur	x8, [x29, #-16]
  410f80:	ldr	x8, [x8, #448]
  410f84:	and	x8, x8, #0x400
  410f88:	cbnz	x8, 410fa4 <wcrtomb@plt+0xe694>
  410f8c:	ldurb	w8, [x29, #-17]
  410f90:	tbnz	w8, #0, 410fa4 <wcrtomb@plt+0xe694>
  410f94:	ldur	x8, [x29, #-16]
  410f98:	ldr	x8, [x8, #448]
  410f9c:	and	x8, x8, #0x800
  410fa0:	cbnz	x8, 410fa8 <wcrtomb@plt+0xe698>
  410fa4:	b	41143c <wcrtomb@plt+0xeb2c>
  410fa8:	ldur	x8, [x29, #-16]
  410fac:	mov	w9, #0x1                   	// #1
  410fb0:	strb	w9, [x8, #120]
  410fb4:	ldur	x8, [x29, #-16]
  410fb8:	mov	x10, #0x106                 	// #262
  410fbc:	str	x10, [x8, #48]
  410fc0:	stur	x10, [x29, #-8]
  410fc4:	b	4114f8 <wcrtomb@plt+0xebe8>
  410fc8:	ldurb	w8, [x29, #-17]
  410fcc:	and	w8, w8, #0x1
  410fd0:	ldur	x9, [x29, #-16]
  410fd4:	ldr	x9, [x9, #448]
  410fd8:	tst	x9, #0x2000
  410fdc:	cset	w10, eq  // eq = none
  410fe0:	and	w10, w10, #0x1
  410fe4:	cmp	w8, w10
  410fe8:	b.eq	410ff0 <wcrtomb@plt+0xe6e0>  // b.none
  410fec:	b	41143c <wcrtomb@plt+0xeb2c>
  410ff0:	ldur	x8, [x29, #-16]
  410ff4:	ldr	x9, [x8, #56]
  410ff8:	add	x9, x9, #0x1
  410ffc:	str	x9, [x8, #56]
  411000:	ldur	x8, [x29, #-16]
  411004:	mov	w10, #0x1                   	// #1
  411008:	strb	w10, [x8, #120]
  41100c:	ldur	x8, [x29, #-16]
  411010:	mov	x9, #0x107                 	// #263
  411014:	str	x9, [x8, #48]
  411018:	stur	x9, [x29, #-8]
  41101c:	b	4114f8 <wcrtomb@plt+0xebe8>
  411020:	ldurb	w8, [x29, #-17]
  411024:	and	w8, w8, #0x1
  411028:	ldur	x9, [x29, #-16]
  41102c:	ldr	x9, [x9, #448]
  411030:	tst	x9, #0x2000
  411034:	cset	w10, eq  // eq = none
  411038:	and	w10, w10, #0x1
  41103c:	cmp	w8, w10
  411040:	b.eq	411048 <wcrtomb@plt+0xe738>  // b.none
  411044:	b	41143c <wcrtomb@plt+0xeb2c>
  411048:	ldur	x8, [x29, #-16]
  41104c:	ldr	x8, [x8, #56]
  411050:	cbnz	x8, 411068 <wcrtomb@plt+0xe758>
  411054:	ldur	x8, [x29, #-16]
  411058:	ldr	x8, [x8, #448]
  41105c:	and	x8, x8, #0x20000
  411060:	cbz	x8, 411068 <wcrtomb@plt+0xe758>
  411064:	b	41143c <wcrtomb@plt+0xeb2c>
  411068:	ldur	x8, [x29, #-16]
  41106c:	ldr	x9, [x8, #56]
  411070:	subs	x9, x9, #0x1
  411074:	str	x9, [x8, #56]
  411078:	ldur	x8, [x29, #-16]
  41107c:	mov	w10, #0x0                   	// #0
  411080:	strb	w10, [x8, #120]
  411084:	ldur	x8, [x29, #-16]
  411088:	mov	x9, #0x108                 	// #264
  41108c:	str	x9, [x8, #48]
  411090:	stur	x9, [x29, #-8]
  411094:	b	4114f8 <wcrtomb@plt+0xebe8>
  411098:	ldurb	w8, [x29, #-17]
  41109c:	tbnz	w8, #0, 4110a4 <wcrtomb@plt+0xe794>
  4110a0:	b	4110a8 <wcrtomb@plt+0xe798>
  4110a4:	b	41143c <wcrtomb@plt+0xeb2c>
  4110a8:	ldur	x8, [x29, #-16]
  4110ac:	ldr	x8, [x8, #24]
  4110b0:	cmp	x8, #0x0
  4110b4:	cset	w9, ge  // ge = tcont
  4110b8:	tbnz	w9, #0, 41116c <wcrtomb@plt+0xe85c>
  4110bc:	sub	x0, x29, #0x50
  4110c0:	bl	417134 <wcrtomb@plt+0x14824>
  4110c4:	ldur	x8, [x29, #-16]
  4110c8:	ldr	x8, [x8, #448]
  4110cc:	and	x8, x8, #0x40
  4110d0:	cbnz	x8, 4110e0 <wcrtomb@plt+0xe7d0>
  4110d4:	mov	w0, #0xa                   	// #10
  4110d8:	sub	x1, x29, #0x50
  4110dc:	bl	417174 <wcrtomb@plt+0x14864>
  4110e0:	ldur	x8, [x29, #-16]
  4110e4:	ldr	x8, [x8, #448]
  4110e8:	and	x8, x8, #0x80
  4110ec:	cbz	x8, 411100 <wcrtomb@plt+0xe7f0>
  4110f0:	mov	w8, wzr
  4110f4:	mov	w0, w8
  4110f8:	sub	x1, x29, #0x50
  4110fc:	bl	417174 <wcrtomb@plt+0x14864>
  411100:	ldur	x8, [x29, #-16]
  411104:	ldrb	w9, [x8, #1048]
  411108:	tbnz	w9, #0, 411110 <wcrtomb@plt+0xe800>
  41110c:	b	411158 <wcrtomb@plt+0xe848>
  411110:	stur	wzr, [x29, #-84]
  411114:	ldur	w8, [x29, #-84]
  411118:	cmp	w8, #0x100
  41111c:	b.ge	411158 <wcrtomb@plt+0xe848>  // b.tcont
  411120:	ldur	x8, [x29, #-16]
  411124:	add	x8, x8, #0x51c
  411128:	ldursw	x9, [x29, #-84]
  41112c:	ldr	w10, [x8, x9, lsl #2]
  411130:	mov	w11, #0xffffffff            	// #-1
  411134:	cmp	w10, w11
  411138:	b.ne	411148 <wcrtomb@plt+0xe838>  // b.any
  41113c:	ldur	w0, [x29, #-84]
  411140:	sub	x1, x29, #0x50
  411144:	bl	417174 <wcrtomb@plt+0x14864>
  411148:	ldur	w8, [x29, #-84]
  41114c:	add	w8, w8, #0x1
  411150:	stur	w8, [x29, #-84]
  411154:	b	411114 <wcrtomb@plt+0xe804>
  411158:	ldur	x0, [x29, #-16]
  41115c:	sub	x1, x29, #0x50
  411160:	bl	4171dc <wcrtomb@plt+0x148cc>
  411164:	ldur	x8, [x29, #-16]
  411168:	str	x0, [x8, #24]
  41116c:	ldur	x8, [x29, #-16]
  411170:	mov	w9, #0x0                   	// #0
  411174:	strb	w9, [x8, #120]
  411178:	ldur	x8, [x29, #-16]
  41117c:	ldrb	w9, [x8, #1048]
  411180:	tbnz	w9, #0, 411188 <wcrtomb@plt+0xe878>
  411184:	b	411194 <wcrtomb@plt+0xe884>
  411188:	mov	x8, #0x10a                 	// #266
  41118c:	str	x8, [sp, #32]
  411190:	b	4111a4 <wcrtomb@plt+0xe894>
  411194:	ldur	x8, [x29, #-16]
  411198:	ldr	x8, [x8, #24]
  41119c:	add	x8, x8, #0x114
  4111a0:	str	x8, [sp, #32]
  4111a4:	ldr	x8, [sp, #32]
  4111a8:	ldur	x9, [x29, #-16]
  4111ac:	str	x8, [x9, #48]
  4111b0:	stur	x8, [x29, #-8]
  4111b4:	b	4114f8 <wcrtomb@plt+0xebe8>
  4111b8:	ldurb	w8, [x29, #-17]
  4111bc:	tbnz	w8, #0, 4111c4 <wcrtomb@plt+0xe8b4>
  4111c0:	b	4111d4 <wcrtomb@plt+0xe8c4>
  4111c4:	ldur	x8, [x29, #-16]
  4111c8:	ldr	x8, [x8, #448]
  4111cc:	and	x8, x8, #0x80000
  4111d0:	cbz	x8, 4111d8 <wcrtomb@plt+0xe8c8>
  4111d4:	b	41143c <wcrtomb@plt+0xeb2c>
  4111d8:	ldur	x8, [x29, #-16]
  4111dc:	ldrb	w9, [x8, #1048]
  4111e0:	tbnz	w9, #0, 411270 <wcrtomb@plt+0xe960>
  4111e4:	sub	x0, x29, #0x78
  4111e8:	bl	4172d0 <wcrtomb@plt+0x149c0>
  4111ec:	stur	wzr, [x29, #-124]
  4111f0:	ldur	w8, [x29, #-124]
  4111f4:	cmp	w8, #0x100
  4111f8:	b.ge	411230 <wcrtomb@plt+0xe920>  // b.tcont
  4111fc:	bl	4026b0 <__ctype_b_loc@plt>
  411200:	ldr	x8, [x0]
  411204:	ldursw	x9, [x29, #-124]
  411208:	ldrh	w10, [x8, x9, lsl #1]
  41120c:	and	w10, w10, #0x2000
  411210:	cbz	w10, 411220 <wcrtomb@plt+0xe910>
  411214:	ldur	w0, [x29, #-124]
  411218:	sub	x1, x29, #0x78
  41121c:	bl	413e44 <wcrtomb@plt+0x11534>
  411220:	ldur	w8, [x29, #-124]
  411224:	add	w8, w8, #0x1
  411228:	stur	w8, [x29, #-124]
  41122c:	b	4111f0 <wcrtomb@plt+0xe8e0>
  411230:	ldur	w8, [x29, #-28]
  411234:	cmp	w8, #0x53
  411238:	b.ne	411244 <wcrtomb@plt+0xe934>  // b.any
  41123c:	sub	x0, x29, #0x78
  411240:	bl	417300 <wcrtomb@plt+0x149f0>
  411244:	ldur	x8, [x29, #-16]
  411248:	mov	w9, #0x0                   	// #0
  41124c:	strb	w9, [x8, #120]
  411250:	ldur	x0, [x29, #-16]
  411254:	sub	x1, x29, #0x78
  411258:	bl	4171dc <wcrtomb@plt+0x148cc>
  41125c:	add	x8, x0, #0x114
  411260:	ldur	x10, [x29, #-16]
  411264:	str	x8, [x10, #48]
  411268:	stur	x8, [x29, #-8]
  41126c:	b	4114f8 <wcrtomb@plt+0xebe8>
  411270:	ldur	x0, [x29, #-16]
  411274:	ldur	w8, [x29, #-28]
  411278:	cmp	w8, #0x73
  41127c:	cset	w8, eq  // eq = none
  411280:	and	w8, w8, #0x1
  411284:	mov	w1, w8
  411288:	sxtw	x9, w1
  41128c:	adrp	x10, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  411290:	add	x10, x10, #0x83e
  411294:	add	x2, x10, x9
  411298:	sub	x9, x29, #0x90
  41129c:	mov	x1, x9
  4112a0:	str	x9, [sp, #24]
  4112a4:	bl	417350 <wcrtomb@plt+0x14a40>
  4112a8:	ldur	x0, [x29, #-16]
  4112ac:	bl	4173b0 <wcrtomb@plt+0x14aa0>
  4112b0:	ldur	x9, [x29, #-16]
  4112b4:	str	x0, [x9, #48]
  4112b8:	ldur	x0, [x29, #-16]
  4112bc:	ldr	x1, [sp, #24]
  4112c0:	bl	417bf4 <wcrtomb@plt+0x152e4>
  4112c4:	ldur	x9, [x29, #-16]
  4112c8:	mov	w8, #0x0                   	// #0
  4112cc:	strb	w8, [x9, #120]
  4112d0:	ldur	x9, [x29, #-16]
  4112d4:	ldr	x9, [x9, #48]
  4112d8:	stur	x9, [x29, #-8]
  4112dc:	b	4114f8 <wcrtomb@plt+0xebe8>
  4112e0:	ldurb	w8, [x29, #-17]
  4112e4:	tbnz	w8, #0, 4112ec <wcrtomb@plt+0xe9dc>
  4112e8:	b	4112fc <wcrtomb@plt+0xe9ec>
  4112ec:	ldur	x8, [x29, #-16]
  4112f0:	ldr	x8, [x8, #448]
  4112f4:	and	x8, x8, #0x80000
  4112f8:	cbz	x8, 411300 <wcrtomb@plt+0xe9f0>
  4112fc:	b	41143c <wcrtomb@plt+0xeb2c>
  411300:	ldur	x8, [x29, #-16]
  411304:	ldrb	w9, [x8, #1048]
  411308:	tbnz	w9, #0, 411398 <wcrtomb@plt+0xea88>
  41130c:	add	x0, sp, #0x80
  411310:	bl	4172d0 <wcrtomb@plt+0x149c0>
  411314:	str	wzr, [sp, #124]
  411318:	ldr	w8, [sp, #124]
  41131c:	cmp	w8, #0x100
  411320:	b.ge	411358 <wcrtomb@plt+0xea48>  // b.tcont
  411324:	ldur	x8, [x29, #-16]
  411328:	add	x8, x8, #0x1cc
  41132c:	ldrsw	x9, [sp, #124]
  411330:	ldrb	w10, [x8, x9]
  411334:	cmp	w10, #0x2
  411338:	b.ne	411348 <wcrtomb@plt+0xea38>  // b.any
  41133c:	ldr	w0, [sp, #124]
  411340:	add	x1, sp, #0x80
  411344:	bl	413e44 <wcrtomb@plt+0x11534>
  411348:	ldr	w8, [sp, #124]
  41134c:	add	w8, w8, #0x1
  411350:	str	w8, [sp, #124]
  411354:	b	411318 <wcrtomb@plt+0xea08>
  411358:	ldur	w8, [x29, #-28]
  41135c:	cmp	w8, #0x57
  411360:	b.ne	41136c <wcrtomb@plt+0xea5c>  // b.any
  411364:	add	x0, sp, #0x80
  411368:	bl	417300 <wcrtomb@plt+0x149f0>
  41136c:	ldur	x8, [x29, #-16]
  411370:	mov	w9, #0x0                   	// #0
  411374:	strb	w9, [x8, #120]
  411378:	ldur	x0, [x29, #-16]
  41137c:	add	x1, sp, #0x80
  411380:	bl	4171dc <wcrtomb@plt+0x148cc>
  411384:	add	x8, x0, #0x114
  411388:	ldur	x10, [x29, #-16]
  41138c:	str	x8, [x10, #48]
  411390:	stur	x8, [x29, #-8]
  411394:	b	4114f8 <wcrtomb@plt+0xebe8>
  411398:	ldur	x0, [x29, #-16]
  41139c:	ldur	w8, [x29, #-28]
  4113a0:	cmp	w8, #0x77
  4113a4:	cset	w8, eq  // eq = none
  4113a8:	and	w8, w8, #0x1
  4113ac:	mov	w1, w8
  4113b0:	sxtw	x9, w1
  4113b4:	adrp	x10, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4113b8:	add	x10, x10, #0x84a
  4113bc:	add	x2, x10, x9
  4113c0:	add	x9, sp, #0x68
  4113c4:	mov	x1, x9
  4113c8:	str	x9, [sp, #16]
  4113cc:	bl	417350 <wcrtomb@plt+0x14a40>
  4113d0:	ldur	x0, [x29, #-16]
  4113d4:	bl	4173b0 <wcrtomb@plt+0x14aa0>
  4113d8:	ldur	x9, [x29, #-16]
  4113dc:	str	x0, [x9, #48]
  4113e0:	ldur	x0, [x29, #-16]
  4113e4:	ldr	x1, [sp, #16]
  4113e8:	bl	417bf4 <wcrtomb@plt+0x152e4>
  4113ec:	ldur	x9, [x29, #-16]
  4113f0:	mov	w8, #0x0                   	// #0
  4113f4:	strb	w8, [x9, #120]
  4113f8:	ldur	x9, [x29, #-16]
  4113fc:	ldr	x9, [x9, #48]
  411400:	stur	x9, [x29, #-8]
  411404:	b	4114f8 <wcrtomb@plt+0xebe8>
  411408:	ldurb	w8, [x29, #-17]
  41140c:	tbnz	w8, #0, 411414 <wcrtomb@plt+0xeb04>
  411410:	b	411418 <wcrtomb@plt+0xeb08>
  411414:	b	41143c <wcrtomb@plt+0xeb2c>
  411418:	ldur	x8, [x29, #-16]
  41141c:	mov	w9, #0x0                   	// #0
  411420:	strb	w9, [x8, #120]
  411424:	ldur	x0, [x29, #-16]
  411428:	bl	4173b0 <wcrtomb@plt+0x14aa0>
  41142c:	ldur	x8, [x29, #-16]
  411430:	str	x0, [x8, #48]
  411434:	stur	x0, [x29, #-8]
  411438:	b	4114f8 <wcrtomb@plt+0xebe8>
  41143c:	ldur	x8, [x29, #-16]
  411440:	mov	w9, #0x0                   	// #0
  411444:	strb	w9, [x8, #120]
  411448:	ldur	x8, [x29, #-16]
  41144c:	ldrb	w9, [x8, #1048]
  411450:	tbnz	w9, #0, 411458 <wcrtomb@plt+0xeb48>
  411454:	b	41146c <wcrtomb@plt+0xeb5c>
  411458:	ldur	x8, [x29, #-16]
  41145c:	mov	x9, #0x109                 	// #265
  411460:	str	x9, [x8, #48]
  411464:	stur	x9, [x29, #-8]
  411468:	b	4114f8 <wcrtomb@plt+0xebe8>
  41146c:	ldur	x8, [x29, #-16]
  411470:	ldrb	w9, [x8, #457]
  411474:	tbnz	w9, #0, 41147c <wcrtomb@plt+0xeb6c>
  411478:	b	4114d0 <wcrtomb@plt+0xebc0>
  41147c:	bl	4026b0 <__ctype_b_loc@plt>
  411480:	ldr	x8, [x0]
  411484:	ldursw	x9, [x29, #-28]
  411488:	ldrh	w10, [x8, x9, lsl #1]
  41148c:	and	w10, w10, #0x400
  411490:	cbz	w10, 4114d0 <wcrtomb@plt+0xebc0>
  411494:	add	x8, sp, #0x48
  411498:	mov	x0, x8
  41149c:	str	x8, [sp, #8]
  4114a0:	bl	4172d0 <wcrtomb@plt+0x149c0>
  4114a4:	ldur	w0, [x29, #-28]
  4114a8:	ldr	x1, [sp, #8]
  4114ac:	bl	417c28 <wcrtomb@plt+0x15318>
  4114b0:	ldur	x0, [x29, #-16]
  4114b4:	ldr	x1, [sp, #8]
  4114b8:	bl	4171dc <wcrtomb@plt+0x148cc>
  4114bc:	add	x8, x0, #0x114
  4114c0:	ldur	x9, [x29, #-16]
  4114c4:	str	x8, [x9, #48]
  4114c8:	stur	x8, [x29, #-8]
  4114cc:	b	4114f8 <wcrtomb@plt+0xebe8>
  4114d0:	ldursw	x8, [x29, #-28]
  4114d4:	ldur	x9, [x29, #-16]
  4114d8:	str	x8, [x9, #48]
  4114dc:	stur	x8, [x29, #-8]
  4114e0:	b	4114f8 <wcrtomb@plt+0xebe8>
  4114e4:	ldur	w8, [x29, #-24]
  4114e8:	add	w8, w8, #0x1
  4114ec:	stur	w8, [x29, #-24]
  4114f0:	b	41063c <wcrtomb@plt+0xdd2c>
  4114f4:	bl	402610 <abort@plt>
  4114f8:	ldur	x0, [x29, #-8]
  4114fc:	ldr	x28, [sp, #320]
  411500:	ldp	x29, x30, [sp, #304]
  411504:	add	sp, sp, #0x150
  411508:	ret
  41150c:	sub	sp, sp, #0x20
  411510:	stp	x29, x30, [sp, #16]
  411514:	add	x29, sp, #0x10
  411518:	str	x0, [sp, #8]
  41151c:	ldr	x0, [sp, #8]
  411520:	bl	418008 <wcrtomb@plt+0x156f8>
  411524:	ldr	x8, [sp, #8]
  411528:	ldr	x8, [x8, #128]
  41152c:	cmp	x8, #0x106
  411530:	b.ne	41155c <wcrtomb@plt+0xec4c>  // b.any
  411534:	ldr	x0, [sp, #8]
  411538:	bl	41061c <wcrtomb@plt+0xdd0c>
  41153c:	ldr	x8, [sp, #8]
  411540:	str	x0, [x8, #128]
  411544:	ldr	x0, [sp, #8]
  411548:	bl	418008 <wcrtomb@plt+0x156f8>
  41154c:	ldr	x0, [sp, #8]
  411550:	mov	x1, #0x106                 	// #262
  411554:	bl	41051c <wcrtomb@plt+0xdc0c>
  411558:	b	411524 <wcrtomb@plt+0xec14>
  41155c:	ldp	x29, x30, [sp, #16]
  411560:	add	sp, sp, #0x20
  411564:	ret
  411568:	sub	sp, sp, #0x40
  41156c:	stp	x29, x30, [sp, #48]
  411570:	add	x29, sp, #0x30
  411574:	stur	x0, [x29, #-8]
  411578:	stur	x1, [x29, #-16]
  41157c:	str	x2, [sp, #24]
  411580:	mov	w8, #0x1                   	// #1
  411584:	and	w8, w3, w8
  411588:	strb	w8, [sp, #23]
  41158c:	str	x4, [sp, #8]
  411590:	str	x5, [sp]
  411594:	ldur	x9, [x29, #-8]
  411598:	ldr	x9, [x9, #1040]
  41159c:	ldur	x0, [x29, #-8]
  4115a0:	ldur	x1, [x29, #-16]
  4115a4:	ldr	x2, [sp, #24]
  4115a8:	ldrb	w8, [sp, #23]
  4115ac:	ldr	x4, [sp, #8]
  4115b0:	ldr	x5, [sp]
  4115b4:	and	w3, w8, #0x1
  4115b8:	blr	x9
  4115bc:	ldp	x29, x30, [sp, #48]
  4115c0:	add	sp, sp, #0x40
  4115c4:	ret
  4115c8:	sub	sp, sp, #0x10
  4115cc:	str	x0, [sp, #8]
  4115d0:	ldr	x8, [sp, #8]
  4115d4:	ldr	x0, [x8, #288]
  4115d8:	add	sp, sp, #0x10
  4115dc:	ret
  4115e0:	sub	sp, sp, #0x10
  4115e4:	str	x0, [sp, #8]
  4115e8:	ldr	x8, [sp, #8]
  4115ec:	ldrb	w9, [x8, #192]
  4115f0:	and	w0, w9, #0x1
  4115f4:	add	sp, sp, #0x10
  4115f8:	ret
  4115fc:	sub	sp, sp, #0x30
  411600:	stp	x29, x30, [sp, #32]
  411604:	add	x29, sp, #0x20
  411608:	stur	x0, [x29, #-8]
  41160c:	str	x1, [sp, #16]
  411610:	str	x2, [sp, #8]
  411614:	and	w8, w3, #0x1
  411618:	strb	w8, [sp, #7]
  41161c:	ldur	x9, [x29, #-8]
  411620:	cbz	x9, 411634 <wcrtomb@plt+0xed24>
  411624:	ldur	x0, [x29, #-8]
  411628:	ldr	x1, [sp, #16]
  41162c:	ldr	x2, [sp, #8]
  411630:	bl	4103fc <wcrtomb@plt+0xdaec>
  411634:	ldr	x0, [sp, #8]
  411638:	bl	4116b0 <wcrtomb@plt+0xeda0>
  41163c:	ldr	x0, [sp, #8]
  411640:	bl	411a4c <wcrtomb@plt+0xf13c>
  411644:	tbnz	w0, #0, 41164c <wcrtomb@plt+0xed3c>
  411648:	b	411668 <wcrtomb@plt+0xed58>
  41164c:	ldr	x0, [sp, #8]
  411650:	bl	411af0 <wcrtomb@plt+0xf1e0>
  411654:	ldr	x0, [sp, #8]
  411658:	ldrb	w8, [sp, #7]
  41165c:	and	w1, w8, #0x1
  411660:	bl	411c08 <wcrtomb@plt+0xf2f8>
  411664:	b	411678 <wcrtomb@plt+0xed68>
  411668:	ldr	x8, [sp, #8]
  41166c:	adrp	x9, 412000 <wcrtomb@plt+0xf6f0>
  411670:	add	x9, x9, #0x564
  411674:	str	x9, [x8, #1040]
  411678:	ldr	x8, [sp, #8]
  41167c:	ldr	x8, [x8, #288]
  411680:	cbz	x8, 4116a4 <wcrtomb@plt+0xed94>
  411684:	ldr	x8, [sp, #8]
  411688:	mov	w9, #0x1                   	// #1
  41168c:	strb	w9, [x8, #192]
  411690:	ldr	x8, [sp, #8]
  411694:	ldr	x0, [x8, #288]
  411698:	ldrb	w9, [sp, #7]
  41169c:	and	w1, w9, #0x1
  4116a0:	bl	411c08 <wcrtomb@plt+0xf2f8>
  4116a4:	ldp	x29, x30, [sp, #32]
  4116a8:	add	sp, sp, #0x30
  4116ac:	ret
  4116b0:	sub	sp, sp, #0x90
  4116b4:	stp	x29, x30, [sp, #128]
  4116b8:	add	x29, sp, #0x80
  4116bc:	mov	x2, #0x920                 	// #2336
  4116c0:	mov	w8, #0x0                   	// #0
  4116c4:	adrp	x9, 413000 <wcrtomb@plt+0x106f0>
  4116c8:	add	x9, x9, #0xd70
  4116cc:	mov	x10, xzr
  4116d0:	mov	x1, #0x20                  	// #32
  4116d4:	stur	x0, [x29, #-8]
  4116d8:	str	x2, [sp, #48]
  4116dc:	str	w8, [sp, #44]
  4116e0:	str	x9, [sp, #32]
  4116e4:	str	x10, [sp, #24]
  4116e8:	str	x1, [sp, #16]
  4116ec:	bl	413aa0 <wcrtomb@plt+0x11190>
  4116f0:	stur	x0, [x29, #-16]
  4116f4:	ldur	x0, [x29, #-16]
  4116f8:	ldur	x1, [x29, #-8]
  4116fc:	ldr	x2, [sp, #48]
  411700:	bl	402290 <memcpy@plt>
  411704:	ldur	x9, [x29, #-16]
  411708:	ldr	w8, [sp, #44]
  41170c:	strb	w8, [x9, #1048]
  411710:	ldur	x9, [x29, #-16]
  411714:	ldr	x10, [sp, #32]
  411718:	str	x10, [x9, #1040]
  41171c:	ldur	x9, [x29, #-16]
  411720:	ldr	x11, [sp, #24]
  411724:	str	x11, [x9, #280]
  411728:	ldur	x9, [x29, #-16]
  41172c:	str	x11, [x9, #288]
  411730:	ldur	x9, [x29, #-16]
  411734:	str	x11, [x9, #296]
  411738:	ldur	x9, [x29, #-16]
  41173c:	str	xzr, [x9, #304]
  411740:	ldur	x9, [x29, #-16]
  411744:	str	x11, [x9, #336]
  411748:	ldur	x9, [x29, #-16]
  41174c:	str	x11, [x9, #344]
  411750:	ldur	x9, [x29, #-16]
  411754:	str	x11, [x9, #320]
  411758:	ldur	x9, [x29, #-16]
  41175c:	str	xzr, [x9, #352]
  411760:	ldur	x9, [x29, #-16]
  411764:	str	x11, [x9, #368]
  411768:	ldur	x9, [x29, #-16]
  41176c:	str	x11, [x9, #376]
  411770:	ldur	x9, [x29, #-16]
  411774:	str	x11, [x9, #384]
  411778:	ldur	x9, [x29, #-16]
  41177c:	str	x11, [x9, #392]
  411780:	ldur	x9, [x29, #-16]
  411784:	ldr	x0, [x9, #16]
  411788:	ldr	x1, [sp, #16]
  41178c:	bl	42300c <wcrtomb@plt+0x206fc>
  411790:	ldur	x9, [x29, #-16]
  411794:	str	x0, [x9]
  411798:	ldur	x9, [x29, #-8]
  41179c:	ldr	x9, [x9, #8]
  4117a0:	cbz	x9, 4117c8 <wcrtomb@plt+0xeeb8>
  4117a4:	ldur	x8, [x29, #-16]
  4117a8:	ldr	x0, [x8]
  4117ac:	ldur	x8, [x29, #-8]
  4117b0:	ldr	x1, [x8]
  4117b4:	ldur	x8, [x29, #-8]
  4117b8:	ldr	x8, [x8, #8]
  4117bc:	mov	x9, #0x20                  	// #32
  4117c0:	mul	x2, x8, x9
  4117c4:	bl	402290 <memcpy@plt>
  4117c8:	ldur	x8, [x29, #-8]
  4117cc:	ldr	x0, [x8, #152]
  4117d0:	mov	x1, #0x10                  	// #16
  4117d4:	bl	42300c <wcrtomb@plt+0x206fc>
  4117d8:	ldur	x8, [x29, #-16]
  4117dc:	str	x0, [x8, #144]
  4117e0:	ldur	x8, [x29, #-8]
  4117e4:	ldr	x8, [x8, #152]
  4117e8:	mov	x9, #0x2                   	// #2
  4117ec:	mul	x8, x8, x9
  4117f0:	ldur	x9, [x29, #-16]
  4117f4:	str	x8, [x9, #160]
  4117f8:	mov	w10, #0x0                   	// #0
  4117fc:	sturb	w10, [x29, #-17]
  411800:	sturb	w10, [x29, #-18]
  411804:	stur	xzr, [x29, #-32]
  411808:	stur	xzr, [x29, #-40]
  41180c:	ldur	x8, [x29, #-40]
  411810:	ldur	x9, [x29, #-8]
  411814:	ldr	x9, [x9, #152]
  411818:	cmp	x8, x9
  41181c:	b.ge	4119f0 <wcrtomb@plt+0xf0e0>  // b.tcont
  411820:	ldur	x8, [x29, #-8]
  411824:	ldr	x8, [x8, #144]
  411828:	ldur	x9, [x29, #-40]
  41182c:	ldr	x8, [x8, x9, lsl #3]
  411830:	cmp	x8, #0x10a
  411834:	str	x8, [sp, #8]
  411838:	b.eq	411870 <wcrtomb@plt+0xef60>  // b.none
  41183c:	b	411840 <wcrtomb@plt+0xef30>
  411840:	ldr	x8, [sp, #8]
  411844:	subs	x9, x8, #0x10e
  411848:	cmp	x9, #0x3
  41184c:	b.ls	411930 <wcrtomb@plt+0xf020>  // b.plast
  411850:	b	411854 <wcrtomb@plt+0xef44>
  411854:	ldr	x8, [sp, #8]
  411858:	subs	x9, x8, #0x112
  41185c:	cmp	x9, #0x1
  411860:	cset	w10, ls  // ls = plast
  411864:	eor	w10, w10, #0x1
  411868:	tbnz	w10, #0, 411960 <wcrtomb@plt+0xf050>
  41186c:	b	411870 <wcrtomb@plt+0xef60>
  411870:	add	x8, sp, #0x38
  411874:	mov	x0, x8
  411878:	str	x8, [sp]
  41187c:	bl	417134 <wcrtomb@plt+0x14824>
  411880:	ldur	x0, [x29, #-16]
  411884:	ldr	x1, [sp]
  411888:	bl	4171dc <wcrtomb@plt+0x148cc>
  41188c:	add	x8, x0, #0x114
  411890:	ldur	x9, [x29, #-16]
  411894:	ldr	x9, [x9, #144]
  411898:	ldur	x10, [x29, #-32]
  41189c:	add	x11, x10, #0x1
  4118a0:	stur	x11, [x29, #-32]
  4118a4:	str	x8, [x9, x10, lsl #3]
  4118a8:	ldur	x8, [x29, #-16]
  4118ac:	ldr	x8, [x8, #144]
  4118b0:	ldur	x9, [x29, #-32]
  4118b4:	add	x10, x9, #0x1
  4118b8:	stur	x10, [x29, #-32]
  4118bc:	mov	x10, #0x102                 	// #258
  4118c0:	str	x10, [x8, x9, lsl #3]
  4118c4:	ldur	x8, [x29, #-8]
  4118c8:	ldr	x8, [x8, #144]
  4118cc:	ldur	x9, [x29, #-40]
  4118d0:	add	x9, x9, #0x1
  4118d4:	ldr	x8, [x8, x9, lsl #3]
  4118d8:	cmp	x8, #0x101
  4118dc:	b.eq	411918 <wcrtomb@plt+0xf008>  // b.none
  4118e0:	ldur	x8, [x29, #-8]
  4118e4:	ldr	x8, [x8, #144]
  4118e8:	ldur	x9, [x29, #-40]
  4118ec:	add	x9, x9, #0x1
  4118f0:	ldr	x8, [x8, x9, lsl #3]
  4118f4:	cmp	x8, #0x102
  4118f8:	b.eq	411918 <wcrtomb@plt+0xf008>  // b.none
  4118fc:	ldur	x8, [x29, #-8]
  411900:	ldr	x8, [x8, #144]
  411904:	ldur	x9, [x29, #-40]
  411908:	add	x9, x9, #0x1
  41190c:	ldr	x8, [x8, x9, lsl #3]
  411910:	cmp	x8, #0x103
  411914:	b.ne	411924 <wcrtomb@plt+0xf014>  // b.any
  411918:	ldur	x8, [x29, #-40]
  41191c:	add	x8, x8, #0x1
  411920:	stur	x8, [x29, #-40]
  411924:	mov	w8, #0x1                   	// #1
  411928:	sturb	w8, [x29, #-17]
  41192c:	b	4119e0 <wcrtomb@plt+0xf0d0>
  411930:	ldur	x8, [x29, #-8]
  411934:	ldrb	w9, [x8, #1048]
  411938:	tbnz	w9, #0, 411940 <wcrtomb@plt+0xf030>
  41193c:	b	411960 <wcrtomb@plt+0xf050>
  411940:	ldur	x8, [x29, #-16]
  411944:	ldr	x8, [x8, #144]
  411948:	ldur	x9, [x29, #-32]
  41194c:	add	x10, x9, #0x1
  411950:	stur	x10, [x29, #-32]
  411954:	mov	x10, #0x100                 	// #256
  411958:	str	x10, [x8, x9, lsl #3]
  41195c:	b	4119e0 <wcrtomb@plt+0xf0d0>
  411960:	ldur	x8, [x29, #-8]
  411964:	ldr	x8, [x8, #144]
  411968:	ldur	x9, [x29, #-40]
  41196c:	ldr	x8, [x8, x9, lsl #3]
  411970:	ldur	x9, [x29, #-16]
  411974:	ldr	x9, [x9, #144]
  411978:	ldur	x10, [x29, #-32]
  41197c:	add	x11, x10, #0x1
  411980:	stur	x11, [x29, #-32]
  411984:	str	x8, [x9, x10, lsl #3]
  411988:	ldur	x8, [x29, #-8]
  41198c:	ldr	x8, [x8, #144]
  411990:	ldur	x9, [x29, #-40]
  411994:	ldr	x8, [x8, x9, lsl #3]
  411998:	mov	x9, xzr
  41199c:	cmp	x9, x8
  4119a0:	cset	w12, gt
  4119a4:	tbnz	w12, #0, 4119c0 <wcrtomb@plt+0xf0b0>
  4119a8:	ldur	x8, [x29, #-8]
  4119ac:	ldr	x8, [x8, #144]
  4119b0:	ldur	x9, [x29, #-40]
  4119b4:	ldr	x8, [x8, x9, lsl #3]
  4119b8:	cmp	x8, #0x100
  4119bc:	b.lt	4119d8 <wcrtomb@plt+0xf0c8>  // b.tstop
  4119c0:	ldur	x8, [x29, #-8]
  4119c4:	ldr	x8, [x8, #144]
  4119c8:	ldur	x9, [x29, #-40]
  4119cc:	ldr	x8, [x8, x9, lsl #3]
  4119d0:	cmp	x8, #0x114
  4119d4:	b.lt	4119e0 <wcrtomb@plt+0xf0d0>  // b.tstop
  4119d8:	mov	w8, #0x1                   	// #1
  4119dc:	sturb	w8, [x29, #-18]
  4119e0:	ldur	x8, [x29, #-40]
  4119e4:	add	x8, x8, #0x1
  4119e8:	stur	x8, [x29, #-40]
  4119ec:	b	41180c <wcrtomb@plt+0xeefc>
  4119f0:	ldur	x8, [x29, #-32]
  4119f4:	ldur	x9, [x29, #-16]
  4119f8:	str	x8, [x9, #152]
  4119fc:	ldurb	w10, [x29, #-18]
  411a00:	tbnz	w10, #0, 411a08 <wcrtomb@plt+0xf0f8>
  411a04:	b	411a30 <wcrtomb@plt+0xf120>
  411a08:	ldurb	w8, [x29, #-17]
  411a0c:	tbnz	w8, #0, 411a20 <wcrtomb@plt+0xf110>
  411a10:	ldur	x8, [x29, #-8]
  411a14:	ldrb	w9, [x8, #1048]
  411a18:	tbnz	w9, #0, 411a20 <wcrtomb@plt+0xf110>
  411a1c:	b	411a30 <wcrtomb@plt+0xf120>
  411a20:	ldur	x8, [x29, #-16]
  411a24:	ldur	x9, [x29, #-8]
  411a28:	str	x8, [x9, #288]
  411a2c:	b	411a40 <wcrtomb@plt+0xf130>
  411a30:	ldur	x0, [x29, #-16]
  411a34:	bl	41259c <wcrtomb@plt+0xfc8c>
  411a38:	ldur	x0, [x29, #-16]
  411a3c:	bl	4026c0 <free@plt>
  411a40:	ldp	x29, x30, [sp, #128]
  411a44:	add	sp, sp, #0x90
  411a48:	ret
  411a4c:	sub	sp, sp, #0x20
  411a50:	str	x0, [sp, #16]
  411a54:	str	xzr, [sp, #8]
  411a58:	ldr	x8, [sp, #8]
  411a5c:	ldr	x9, [sp, #16]
  411a60:	ldr	x9, [x9, #152]
  411a64:	cmp	x8, x9
  411a68:	b.ge	411ad4 <wcrtomb@plt+0xf1c4>  // b.tcont
  411a6c:	ldr	x8, [sp, #16]
  411a70:	ldr	x8, [x8, #144]
  411a74:	ldr	x9, [sp, #8]
  411a78:	ldr	x8, [x8, x9, lsl #3]
  411a7c:	subs	x9, x8, #0x10e
  411a80:	cmp	x9, #0x3
  411a84:	str	x8, [sp]
  411a88:	b.ls	411aa4 <wcrtomb@plt+0xf194>  // b.plast
  411a8c:	b	411a90 <wcrtomb@plt+0xf180>
  411a90:	ldr	x8, [sp]
  411a94:	subs	x9, x8, #0x112
  411a98:	cmp	x9, #0x1
  411a9c:	b.ls	411ab4 <wcrtomb@plt+0xf1a4>  // b.plast
  411aa0:	b	411ac4 <wcrtomb@plt+0xf1b4>
  411aa4:	ldr	x8, [sp, #16]
  411aa8:	ldrb	w9, [x8, #1048]
  411aac:	tbnz	w9, #0, 411ab4 <wcrtomb@plt+0xf1a4>
  411ab0:	b	411ac4 <wcrtomb@plt+0xf1b4>
  411ab4:	mov	w8, wzr
  411ab8:	and	w8, w8, #0x1
  411abc:	strb	w8, [sp, #31]
  411ac0:	b	411ae0 <wcrtomb@plt+0xf1d0>
  411ac4:	ldr	x8, [sp, #8]
  411ac8:	add	x8, x8, #0x1
  411acc:	str	x8, [sp, #8]
  411ad0:	b	411a58 <wcrtomb@plt+0xf148>
  411ad4:	mov	w8, #0x1                   	// #1
  411ad8:	and	w8, w8, #0x1
  411adc:	strb	w8, [sp, #31]
  411ae0:	ldrb	w8, [sp, #31]
  411ae4:	and	w0, w8, #0x1
  411ae8:	add	sp, sp, #0x20
  411aec:	ret
  411af0:	sub	sp, sp, #0x30
  411af4:	stp	x29, x30, [sp, #32]
  411af8:	add	x29, sp, #0x20
  411afc:	stur	x0, [x29, #-8]
  411b00:	ldur	x8, [x29, #-8]
  411b04:	ldrb	w9, [x8, #1050]
  411b08:	tbnz	w9, #0, 411b10 <wcrtomb@plt+0xf200>
  411b0c:	b	411bfc <wcrtomb@plt+0xf2ec>
  411b10:	mov	w8, #0x0                   	// #0
  411b14:	sturb	w8, [x29, #-9]
  411b18:	str	xzr, [sp, #8]
  411b1c:	ldr	x8, [sp, #8]
  411b20:	ldur	x9, [x29, #-8]
  411b24:	ldr	x9, [x9, #152]
  411b28:	cmp	x8, x9
  411b2c:	b.ge	411b94 <wcrtomb@plt+0xf284>  // b.tcont
  411b30:	ldur	x8, [x29, #-8]
  411b34:	ldr	x8, [x8, #144]
  411b38:	ldr	x9, [sp, #8]
  411b3c:	ldr	x8, [x8, x9, lsl #3]
  411b40:	cmp	x8, #0x10a
  411b44:	str	x8, [sp]
  411b48:	b.eq	411b70 <wcrtomb@plt+0xf260>  // b.none
  411b4c:	b	411b50 <wcrtomb@plt+0xf240>
  411b50:	ldr	x8, [sp]
  411b54:	cmp	x8, #0x112
  411b58:	b.eq	411b74 <wcrtomb@plt+0xf264>  // b.none
  411b5c:	b	411b60 <wcrtomb@plt+0xf250>
  411b60:	ldr	x8, [sp]
  411b64:	cmp	x8, #0x113
  411b68:	b.eq	411b80 <wcrtomb@plt+0xf270>  // b.none
  411b6c:	b	411b84 <wcrtomb@plt+0xf274>
  411b70:	bl	402610 <abort@plt>
  411b74:	mov	w8, #0x1                   	// #1
  411b78:	sturb	w8, [x29, #-9]
  411b7c:	b	411b84 <wcrtomb@plt+0xf274>
  411b80:	b	411bfc <wcrtomb@plt+0xf2ec>
  411b84:	ldr	x8, [sp, #8]
  411b88:	add	x8, x8, #0x1
  411b8c:	str	x8, [sp, #8]
  411b90:	b	411b1c <wcrtomb@plt+0xf20c>
  411b94:	ldurb	w8, [x29, #-9]
  411b98:	tbnz	w8, #0, 411bcc <wcrtomb@plt+0xf2bc>
  411b9c:	ldur	x8, [x29, #-8]
  411ba0:	ldr	x8, [x8, #288]
  411ba4:	cbz	x8, 411bcc <wcrtomb@plt+0xf2bc>
  411ba8:	ldur	x8, [x29, #-8]
  411bac:	ldr	x0, [x8, #288]
  411bb0:	bl	41259c <wcrtomb@plt+0xfc8c>
  411bb4:	ldur	x8, [x29, #-8]
  411bb8:	ldr	x0, [x8, #288]
  411bbc:	bl	4026c0 <free@plt>
  411bc0:	ldur	x8, [x29, #-8]
  411bc4:	mov	x9, xzr
  411bc8:	str	x9, [x8, #288]
  411bcc:	ldur	x0, [x29, #-8]
  411bd0:	bl	4127ac <wcrtomb@plt+0xfe9c>
  411bd4:	ldur	x8, [x29, #-8]
  411bd8:	mov	w9, #0x0                   	// #0
  411bdc:	strb	w9, [x8, #1048]
  411be0:	ldur	x8, [x29, #-8]
  411be4:	adrp	x10, 413000 <wcrtomb@plt+0x106f0>
  411be8:	add	x10, x10, #0xd70
  411bec:	str	x10, [x8, #1040]
  411bf0:	ldur	x8, [x29, #-8]
  411bf4:	mov	w9, #0x1                   	// #1
  411bf8:	strb	w9, [x8, #192]
  411bfc:	ldp	x29, x30, [sp, #32]
  411c00:	add	sp, sp, #0x30
  411c04:	ret
  411c08:	sub	sp, sp, #0x150
  411c0c:	stp	x29, x30, [sp, #304]
  411c10:	str	x28, [sp, #320]
  411c14:	add	x29, sp, #0x130
  411c18:	sub	x8, x29, #0x38
  411c1c:	mov	x9, #0x20                  	// #32
  411c20:	mov	x10, #0x18                  	// #24
  411c24:	mov	x11, #0x105                 	// #261
  411c28:	mov	w12, #0x1                   	// #1
  411c2c:	sub	x13, x29, #0x78
  411c30:	str	x0, [x8, #48]
  411c34:	and	w14, w1, w12
  411c38:	sturb	w14, [x29, #-9]
  411c3c:	ldr	x15, [x8, #48]
  411c40:	ldr	x0, [x15, #176]
  411c44:	mov	x1, x9
  411c48:	str	x8, [sp, #96]
  411c4c:	str	x10, [sp, #88]
  411c50:	str	x11, [sp, #80]
  411c54:	str	w12, [sp, #76]
  411c58:	str	x13, [sp, #64]
  411c5c:	bl	42300c <wcrtomb@plt+0x206fc>
  411c60:	ldr	x8, [sp, #96]
  411c64:	str	x0, [x8, #32]
  411c68:	ldr	x9, [x8, #32]
  411c6c:	str	x9, [x8, #24]
  411c70:	ldr	x9, [x8, #24]
  411c74:	ldr	x10, [x8, #48]
  411c78:	ldr	x10, [x10, #176]
  411c7c:	mov	x11, #0x10                  	// #16
  411c80:	mul	x10, x11, x10
  411c84:	add	x9, x9, x10
  411c88:	str	x9, [x8, #16]
  411c8c:	ldr	x9, [x8, #48]
  411c90:	ldr	x0, [x9, #168]
  411c94:	ldr	x1, [sp, #88]
  411c98:	bl	42300c <wcrtomb@plt+0x206fc>
  411c9c:	stur	x0, [x29, #-88]
  411ca0:	ldur	x8, [x29, #-88]
  411ca4:	stur	x8, [x29, #-96]
  411ca8:	ldr	x8, [sp, #96]
  411cac:	ldr	x0, [x8, #48]
  411cb0:	ldr	x1, [sp, #80]
  411cb4:	bl	41051c <wcrtomb@plt+0xdc0c>
  411cb8:	ldurb	w12, [x29, #-9]
  411cbc:	ldr	x8, [sp, #96]
  411cc0:	ldr	x9, [x8, #48]
  411cc4:	ldr	w14, [sp, #76]
  411cc8:	and	w12, w12, w14
  411ccc:	strb	w12, [x9, #328]
  411cd0:	ldr	x9, [x8, #48]
  411cd4:	ldr	x1, [x9, #176]
  411cd8:	ldr	x0, [sp, #64]
  411cdc:	bl	41892c <wcrtomb@plt+0x1601c>
  411ce0:	ldr	x8, [sp, #96]
  411ce4:	ldr	x9, [x8, #48]
  411ce8:	ldr	x0, [x9, #152]
  411cec:	ldr	x1, [sp, #88]
  411cf0:	bl	4232c8 <wcrtomb@plt+0x209b8>
  411cf4:	ldr	x8, [sp, #96]
  411cf8:	ldr	x9, [x8, #48]
  411cfc:	str	x0, [x9, #320]
  411d00:	stur	xzr, [x29, #-128]
  411d04:	ldur	x8, [x29, #-128]
  411d08:	ldr	x9, [sp, #96]
  411d0c:	ldr	x10, [x9, #48]
  411d10:	ldr	x10, [x10, #152]
  411d14:	cmp	x8, x10
  411d18:	b.ge	412230 <wcrtomb@plt+0xf920>  // b.tcont
  411d1c:	ldr	x8, [sp, #96]
  411d20:	ldr	x9, [x8, #48]
  411d24:	ldr	x9, [x9, #144]
  411d28:	ldur	x10, [x29, #-128]
  411d2c:	ldr	x9, [x9, x10, lsl #3]
  411d30:	subs	x9, x9, #0x100
  411d34:	cmp	x9, #0x6
  411d38:	str	x9, [sp, #56]
  411d3c:	b.hi	412198 <wcrtomb@plt+0xf888>  // b.pmore
  411d40:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  411d44:	add	x8, x8, #0x48c
  411d48:	ldr	x11, [sp, #56]
  411d4c:	ldrsw	x10, [x8, x11, lsl #2]
  411d50:	add	x9, x8, x10
  411d54:	br	x9
  411d58:	ldur	x8, [x29, #-96]
  411d5c:	mov	w9, #0x1                   	// #1
  411d60:	strb	w9, [x8]
  411d64:	ldur	x8, [x29, #-96]
  411d68:	str	xzr, [x8, #16]
  411d6c:	ldur	x8, [x29, #-96]
  411d70:	str	xzr, [x8, #8]
  411d74:	ldur	x8, [x29, #-96]
  411d78:	add	x8, x8, #0x18
  411d7c:	stur	x8, [x29, #-96]
  411d80:	b	412220 <wcrtomb@plt+0xf910>
  411d84:	ldr	x8, [sp, #96]
  411d88:	ldr	x9, [x8, #24]
  411d8c:	ldur	x10, [x29, #-96]
  411d90:	ldur	x10, [x10, #-16]
  411d94:	mov	x11, #0x10                  	// #16
  411d98:	mneg	x10, x10, x11
  411d9c:	add	x9, x9, x10
  411da0:	stur	x9, [x29, #-80]
  411da4:	ldur	x9, [x29, #-96]
  411da8:	ldur	x9, [x9, #-16]
  411dac:	stur	x9, [x29, #-72]
  411db0:	ldr	x9, [x8, #16]
  411db4:	ldur	x10, [x29, #-96]
  411db8:	ldur	x10, [x10, #-8]
  411dbc:	mneg	x10, x10, x11
  411dc0:	add	x9, x9, x10
  411dc4:	stur	x9, [x29, #-136]
  411dc8:	stur	xzr, [x29, #-144]
  411dcc:	ldur	x8, [x29, #-144]
  411dd0:	ldur	x9, [x29, #-96]
  411dd4:	ldur	x9, [x9, #-8]
  411dd8:	cmp	x8, x9
  411ddc:	b.ge	411e6c <wcrtomb@plt+0xf55c>  // b.tcont
  411de0:	ldr	x8, [sp, #96]
  411de4:	ldr	x9, [x8, #48]
  411de8:	ldr	x9, [x9, #320]
  411dec:	ldur	x10, [x29, #-136]
  411df0:	ldur	x11, [x29, #-144]
  411df4:	mov	x12, #0x10                  	// #16
  411df8:	mul	x11, x12, x11
  411dfc:	ldr	x10, [x10, x11]
  411e00:	mov	x11, #0x18                  	// #24
  411e04:	mul	x10, x11, x10
  411e08:	add	x1, x9, x10
  411e0c:	sub	x0, x29, #0x50
  411e10:	sub	x9, x29, #0x78
  411e14:	mov	x2, x9
  411e18:	str	x12, [sp, #48]
  411e1c:	str	x11, [sp, #40]
  411e20:	str	x9, [sp, #32]
  411e24:	bl	418978 <wcrtomb@plt+0x16068>
  411e28:	ldr	x8, [sp, #96]
  411e2c:	ldr	x9, [x8, #48]
  411e30:	ldr	x9, [x9, #320]
  411e34:	ldur	x10, [x29, #-136]
  411e38:	ldur	x11, [x29, #-144]
  411e3c:	ldr	x12, [sp, #48]
  411e40:	mul	x11, x12, x11
  411e44:	ldr	x10, [x10, x11]
  411e48:	ldr	x11, [sp, #40]
  411e4c:	mul	x10, x11, x10
  411e50:	add	x1, x9, x10
  411e54:	ldr	x0, [sp, #32]
  411e58:	bl	4189b4 <wcrtomb@plt+0x160a4>
  411e5c:	ldur	x8, [x29, #-144]
  411e60:	add	x8, x8, #0x1
  411e64:	stur	x8, [x29, #-144]
  411e68:	b	411dcc <wcrtomb@plt+0xf4bc>
  411e6c:	ldr	x8, [sp, #96]
  411e70:	ldr	x9, [x8, #48]
  411e74:	ldr	x9, [x9, #144]
  411e78:	ldur	x10, [x29, #-128]
  411e7c:	ldr	x9, [x9, x10, lsl #3]
  411e80:	cmp	x9, #0x103
  411e84:	b.eq	411e9c <wcrtomb@plt+0xf58c>  // b.none
  411e88:	ldur	x8, [x29, #-96]
  411e8c:	mov	x9, #0xffffffffffffffe8    	// #-24
  411e90:	add	x8, x8, x9
  411e94:	mov	w10, #0x1                   	// #1
  411e98:	strb	w10, [x8]
  411e9c:	b	412220 <wcrtomb@plt+0xf910>
  411ea0:	ldur	x8, [x29, #-96]
  411ea4:	ldur	x8, [x8, #-16]
  411ea8:	stur	x8, [x29, #-72]
  411eac:	ldr	x8, [sp, #96]
  411eb0:	ldr	x9, [x8, #24]
  411eb4:	ldur	x10, [x29, #-96]
  411eb8:	ldur	x10, [x10, #-16]
  411ebc:	mov	x11, #0x10                  	// #16
  411ec0:	mneg	x10, x10, x11
  411ec4:	add	x9, x9, x10
  411ec8:	stur	x9, [x29, #-80]
  411ecc:	ldr	x9, [x8, #16]
  411ed0:	ldur	x10, [x29, #-96]
  411ed4:	ldur	x10, [x10, #-8]
  411ed8:	mneg	x10, x10, x11
  411edc:	add	x9, x9, x10
  411ee0:	ldur	x10, [x29, #-96]
  411ee4:	ldur	x10, [x10, #-32]
  411ee8:	mneg	x10, x10, x11
  411eec:	add	x9, x9, x10
  411ef0:	str	x9, [sp, #152]
  411ef4:	str	xzr, [sp, #144]
  411ef8:	ldr	x8, [sp, #144]
  411efc:	ldur	x9, [x29, #-96]
  411f00:	ldur	x9, [x9, #-32]
  411f04:	cmp	x8, x9
  411f08:	b.ge	411f98 <wcrtomb@plt+0xf688>  // b.tcont
  411f0c:	ldr	x8, [sp, #96]
  411f10:	ldr	x9, [x8, #48]
  411f14:	ldr	x9, [x9, #320]
  411f18:	ldr	x10, [sp, #152]
  411f1c:	ldr	x11, [sp, #144]
  411f20:	mov	x12, #0x10                  	// #16
  411f24:	mul	x11, x12, x11
  411f28:	ldr	x10, [x10, x11]
  411f2c:	mov	x11, #0x18                  	// #24
  411f30:	mul	x10, x11, x10
  411f34:	add	x1, x9, x10
  411f38:	sub	x0, x29, #0x50
  411f3c:	sub	x9, x29, #0x78
  411f40:	mov	x2, x9
  411f44:	str	x12, [sp, #24]
  411f48:	str	x11, [sp, #16]
  411f4c:	str	x9, [sp, #8]
  411f50:	bl	418978 <wcrtomb@plt+0x16068>
  411f54:	ldr	x8, [sp, #96]
  411f58:	ldr	x9, [x8, #48]
  411f5c:	ldr	x9, [x9, #320]
  411f60:	ldr	x10, [sp, #152]
  411f64:	ldr	x11, [sp, #144]
  411f68:	ldr	x12, [sp, #24]
  411f6c:	mul	x11, x12, x11
  411f70:	ldr	x10, [x10, x11]
  411f74:	ldr	x11, [sp, #16]
  411f78:	mul	x10, x11, x10
  411f7c:	add	x1, x9, x10
  411f80:	ldr	x0, [sp, #8]
  411f84:	bl	4189b4 <wcrtomb@plt+0x160a4>
  411f88:	ldr	x8, [sp, #144]
  411f8c:	add	x8, x8, #0x1
  411f90:	str	x8, [sp, #144]
  411f94:	b	411ef8 <wcrtomb@plt+0xf5e8>
  411f98:	ldur	x8, [x29, #-96]
  411f9c:	mov	x9, #0xffffffffffffffd0    	// #-48
  411fa0:	add	x8, x8, x9
  411fa4:	ldrb	w10, [x8]
  411fa8:	tbnz	w10, #0, 411fb0 <wcrtomb@plt+0xf6a0>
  411fac:	b	411fcc <wcrtomb@plt+0xf6bc>
  411fb0:	ldur	x8, [x29, #-96]
  411fb4:	ldur	x8, [x8, #-16]
  411fb8:	ldur	x9, [x29, #-96]
  411fbc:	ldur	x10, [x9, #-40]
  411fc0:	add	x8, x10, x8
  411fc4:	stur	x8, [x9, #-40]
  411fc8:	b	411fec <wcrtomb@plt+0xf6dc>
  411fcc:	ldur	x8, [x29, #-96]
  411fd0:	ldur	x8, [x8, #-16]
  411fd4:	ldr	x9, [sp, #96]
  411fd8:	ldr	x10, [x9, #24]
  411fdc:	mov	x11, #0x10                  	// #16
  411fe0:	mneg	x8, x8, x11
  411fe4:	add	x8, x10, x8
  411fe8:	str	x8, [x9, #24]
  411fec:	ldur	x8, [x29, #-96]
  411ff0:	mov	x9, #0xffffffffffffffe8    	// #-24
  411ff4:	add	x8, x8, x9
  411ff8:	ldrb	w10, [x8]
  411ffc:	tbnz	w10, #0, 412004 <wcrtomb@plt+0xf6f4>
  412000:	b	412020 <wcrtomb@plt+0xf710>
  412004:	ldur	x8, [x29, #-96]
  412008:	ldur	x8, [x8, #-8]
  41200c:	ldur	x9, [x29, #-96]
  412010:	ldur	x10, [x9, #-32]
  412014:	add	x8, x10, x8
  412018:	stur	x8, [x9, #-32]
  41201c:	b	4120cc <wcrtomb@plt+0xf7bc>
  412020:	ldr	x8, [sp, #96]
  412024:	ldr	x9, [x8, #16]
  412028:	ldur	x10, [x29, #-96]
  41202c:	mov	x11, #0x10                  	// #16
  412030:	ldur	x10, [x10, #-8]
  412034:	mneg	x10, x10, x11
  412038:	add	x9, x9, x10
  41203c:	ldur	x10, [x29, #-96]
  412040:	ldur	x10, [x10, #-32]
  412044:	mneg	x10, x10, x11
  412048:	add	x9, x9, x10
  41204c:	str	x9, [sp, #136]
  412050:	str	xzr, [sp, #128]
  412054:	ldr	x8, [sp, #128]
  412058:	ldur	x9, [x29, #-96]
  41205c:	ldur	x9, [x9, #-8]
  412060:	cmp	x8, x9
  412064:	b.ge	41209c <wcrtomb@plt+0xf78c>  // b.tcont
  412068:	ldr	x8, [sp, #136]
  41206c:	ldr	x9, [sp, #128]
  412070:	ldr	x10, [sp, #136]
  412074:	ldr	x11, [sp, #128]
  412078:	ldur	x12, [x29, #-96]
  41207c:	ldur	x12, [x12, #-32]
  412080:	add	x11, x11, x12
  412084:	ldr	q0, [x10, x11, lsl #4]
  412088:	str	q0, [x8, x9, lsl #4]
  41208c:	ldr	x8, [sp, #128]
  412090:	add	x8, x8, #0x1
  412094:	str	x8, [sp, #128]
  412098:	b	412054 <wcrtomb@plt+0xf744>
  41209c:	ldur	x8, [x29, #-96]
  4120a0:	mov	x9, #0x10                  	// #16
  4120a4:	ldur	x8, [x8, #-32]
  4120a8:	ldr	x10, [sp, #96]
  4120ac:	ldr	x11, [x10, #16]
  4120b0:	mneg	x8, x8, x9
  4120b4:	add	x8, x11, x8
  4120b8:	str	x8, [x10, #16]
  4120bc:	ldur	x8, [x29, #-96]
  4120c0:	ldur	x8, [x8, #-8]
  4120c4:	ldur	x9, [x29, #-96]
  4120c8:	stur	x8, [x9, #-32]
  4120cc:	ldur	x8, [x29, #-96]
  4120d0:	mov	x9, #0xffffffffffffffe8    	// #-24
  4120d4:	add	x8, x8, x9
  4120d8:	ldrb	w10, [x8]
  4120dc:	mov	w11, #0x1                   	// #1
  4120e0:	and	w10, w10, #0x1
  4120e4:	ldur	x8, [x29, #-96]
  4120e8:	mov	x12, #0xffffffffffffffd0    	// #-48
  4120ec:	add	x8, x8, x12
  4120f0:	ldrb	w13, [x8]
  4120f4:	and	w13, w13, #0x1
  4120f8:	tst	w13, w10
  4120fc:	cset	w10, ne  // ne = any
  412100:	and	w10, w10, w11
  412104:	strb	w10, [x8]
  412108:	ldur	x8, [x29, #-96]
  41210c:	add	x8, x8, x9
  412110:	stur	x8, [x29, #-96]
  412114:	b	412220 <wcrtomb@plt+0xf910>
  412118:	ldur	x8, [x29, #-96]
  41211c:	mov	x9, #0xffffffffffffffe8    	// #-24
  412120:	ldur	x8, [x8, #-16]
  412124:	ldur	x10, [x29, #-96]
  412128:	mov	x11, #0xffffffffffffffd0    	// #-48
  41212c:	ldur	x12, [x10, #-40]
  412130:	add	x8, x12, x8
  412134:	stur	x8, [x10, #-40]
  412138:	ldur	x8, [x29, #-96]
  41213c:	ldur	x8, [x8, #-8]
  412140:	ldur	x10, [x29, #-96]
  412144:	ldur	x12, [x10, #-32]
  412148:	add	x8, x12, x8
  41214c:	stur	x8, [x10, #-32]
  412150:	ldur	x8, [x29, #-96]
  412154:	add	x8, x8, x9
  412158:	ldrb	w13, [x8]
  41215c:	mov	w14, #0x1                   	// #1
  412160:	and	w13, w13, #0x1
  412164:	ldur	x8, [x29, #-96]
  412168:	add	x8, x8, x11
  41216c:	ldrb	w15, [x8]
  412170:	and	w15, w15, #0x1
  412174:	orr	w13, w15, w13
  412178:	cmp	w13, #0x0
  41217c:	cset	w13, ne  // ne = any
  412180:	and	w13, w13, w14
  412184:	strb	w13, [x8]
  412188:	ldur	x8, [x29, #-96]
  41218c:	add	x8, x8, x9
  412190:	stur	x8, [x29, #-96]
  412194:	b	412220 <wcrtomb@plt+0xf910>
  412198:	ldr	x8, [sp, #96]
  41219c:	ldr	x9, [x8, #48]
  4121a0:	ldr	x9, [x9, #144]
  4121a4:	ldur	x10, [x29, #-128]
  4121a8:	ldr	x9, [x9, x10, lsl #3]
  4121ac:	cmp	x9, #0x112
  4121b0:	cset	w11, eq  // eq = none
  4121b4:	ldur	x9, [x29, #-96]
  4121b8:	and	w11, w11, #0x1
  4121bc:	strb	w11, [x9]
  4121c0:	ldur	x9, [x29, #-96]
  4121c4:	mov	x10, #0x1                   	// #1
  4121c8:	str	x10, [x9, #16]
  4121cc:	ldur	x9, [x29, #-96]
  4121d0:	str	x10, [x9, #8]
  4121d4:	ldur	x9, [x29, #-96]
  4121d8:	add	x9, x9, #0x18
  4121dc:	stur	x9, [x29, #-96]
  4121e0:	ldur	x9, [x29, #-128]
  4121e4:	ldr	x10, [x8, #16]
  4121e8:	str	x9, [x10]
  4121ec:	ldr	x10, [x8, #24]
  4121f0:	str	x9, [x10]
  4121f4:	ldr	x9, [x8, #16]
  4121f8:	mov	w11, #0x1ff                 	// #511
  4121fc:	str	w11, [x9, #8]
  412200:	ldr	x9, [x8, #24]
  412204:	str	w11, [x9, #8]
  412208:	ldr	x9, [x8, #24]
  41220c:	add	x9, x9, #0x10
  412210:	str	x9, [x8, #24]
  412214:	ldr	x9, [x8, #16]
  412218:	add	x9, x9, #0x10
  41221c:	str	x9, [x8, #16]
  412220:	ldur	x8, [x29, #-128]
  412224:	add	x8, x8, #0x1
  412228:	stur	x8, [x29, #-128]
  41222c:	b	411d04 <wcrtomb@plt+0xf3f4>
  412230:	ldr	x8, [sp, #96]
  412234:	ldr	x0, [x8, #48]
  412238:	bl	418a70 <wcrtomb@plt+0x16160>
  41223c:	ldr	x8, [sp, #96]
  412240:	ldr	x0, [x8, #48]
  412244:	bl	418cb4 <wcrtomb@plt+0x163a4>
  412248:	ldr	x8, [sp, #96]
  41224c:	str	xzr, [x8]
  412250:	mov	w9, #0x1ff                 	// #511
  412254:	stur	w9, [x29, #-48]
  412258:	sub	x10, x29, #0x50
  41225c:	mov	x0, x10
  412260:	mov	x1, #0x1                   	// #1
  412264:	str	x10, [sp]
  412268:	bl	41892c <wcrtomb@plt+0x1601c>
  41226c:	ldr	x8, [sp, #96]
  412270:	ldr	x0, [x8]
  412274:	ldr	x1, [x8, #8]
  412278:	ldr	x2, [sp]
  41227c:	bl	418fb8 <wcrtomb@plt+0x166a8>
  412280:	ldr	x8, [sp, #96]
  412284:	ldr	x10, [x8, #48]
  412288:	ldr	x0, [x10, #152]
  41228c:	mov	x1, #0x4                   	// #4
  412290:	bl	42300c <wcrtomb@plt+0x206fc>
  412294:	ldr	x8, [sp, #96]
  412298:	ldr	x10, [x8, #48]
  41229c:	str	x0, [x10, #344]
  4122a0:	str	xzr, [sp, #120]
  4122a4:	ldr	x8, [sp, #120]
  4122a8:	ldr	x9, [sp, #96]
  4122ac:	ldr	x10, [x9, #48]
  4122b0:	ldr	x10, [x10, #152]
  4122b4:	cmp	x8, x10
  4122b8:	b.ge	412480 <wcrtomb@plt+0xfb70>  // b.tcont
  4122bc:	ldr	x8, [sp, #96]
  4122c0:	ldr	x9, [x8, #48]
  4122c4:	ldr	x9, [x9, #344]
  4122c8:	ldr	x10, [sp, #120]
  4122cc:	mov	w11, wzr
  4122d0:	str	w11, [x9, x10, lsl #2]
  4122d4:	ldr	x9, [x8, #48]
  4122d8:	ldr	x9, [x9, #336]
  4122dc:	ldr	x10, [sp, #120]
  4122e0:	ldr	w0, [x9, x10, lsl #2]
  4122e4:	bl	419030 <wcrtomb@plt+0x16720>
  4122e8:	tbnz	w0, #0, 4122f0 <wcrtomb@plt+0xf9e0>
  4122ec:	b	412318 <wcrtomb@plt+0xfa08>
  4122f0:	ldr	x8, [sp, #96]
  4122f4:	ldr	x9, [x8, #48]
  4122f8:	ldr	x9, [x9, #344]
  4122fc:	ldr	x10, [sp, #120]
  412300:	mov	x11, #0x4                   	// #4
  412304:	mul	x10, x11, x10
  412308:	add	x9, x9, x10
  41230c:	ldr	w12, [x9]
  412310:	orr	w12, w12, #0x4
  412314:	str	w12, [x9]
  412318:	ldr	x8, [sp, #96]
  41231c:	ldr	x9, [x8, #48]
  412320:	ldr	x9, [x9, #336]
  412324:	ldr	x10, [sp, #120]
  412328:	ldr	w0, [x9, x10, lsl #2]
  41232c:	bl	41905c <wcrtomb@plt+0x1674c>
  412330:	tbnz	w0, #0, 412338 <wcrtomb@plt+0xfa28>
  412334:	b	412360 <wcrtomb@plt+0xfa50>
  412338:	ldr	x8, [sp, #96]
  41233c:	ldr	x9, [x8, #48]
  412340:	ldr	x9, [x9, #344]
  412344:	ldr	x10, [sp, #120]
  412348:	mov	x11, #0x4                   	// #4
  41234c:	mul	x10, x11, x10
  412350:	add	x9, x9, x10
  412354:	ldr	w12, [x9]
  412358:	orr	w12, w12, #0x2
  41235c:	str	w12, [x9]
  412360:	str	xzr, [sp, #112]
  412364:	ldr	x8, [sp, #112]
  412368:	ldr	x9, [sp, #96]
  41236c:	ldr	x10, [x9, #48]
  412370:	ldr	x10, [x10, #320]
  412374:	ldr	x11, [sp, #120]
  412378:	mov	x12, #0x18                  	// #24
  41237c:	mul	x11, x12, x11
  412380:	add	x10, x10, x11
  412384:	ldr	x10, [x10, #8]
  412388:	cmp	x8, x10
  41238c:	b.ge	412470 <wcrtomb@plt+0xfb60>  // b.tcont
  412390:	ldr	x8, [sp, #96]
  412394:	ldr	x9, [x8, #48]
  412398:	ldr	x9, [x9, #320]
  41239c:	ldr	x10, [sp, #120]
  4123a0:	mov	x11, #0x18                  	// #24
  4123a4:	mul	x10, x11, x10
  4123a8:	add	x9, x9, x10
  4123ac:	ldr	x9, [x9]
  4123b0:	ldr	x10, [sp, #112]
  4123b4:	mov	x11, #0x10                  	// #16
  4123b8:	mul	x10, x11, x10
  4123bc:	add	x9, x9, x10
  4123c0:	ldr	w0, [x9, #8]
  4123c4:	bl	419030 <wcrtomb@plt+0x16720>
  4123c8:	tbnz	w0, #0, 4123d0 <wcrtomb@plt+0xfac0>
  4123cc:	b	4123f8 <wcrtomb@plt+0xfae8>
  4123d0:	ldr	x8, [sp, #96]
  4123d4:	ldr	x9, [x8, #48]
  4123d8:	ldr	x9, [x9, #344]
  4123dc:	ldr	x10, [sp, #120]
  4123e0:	mov	x11, #0x4                   	// #4
  4123e4:	mul	x10, x11, x10
  4123e8:	add	x9, x9, x10
  4123ec:	ldr	w12, [x9]
  4123f0:	orr	w12, w12, #0x4
  4123f4:	str	w12, [x9]
  4123f8:	ldr	x8, [sp, #96]
  4123fc:	ldr	x9, [x8, #48]
  412400:	ldr	x9, [x9, #320]
  412404:	ldr	x10, [sp, #120]
  412408:	mov	x11, #0x18                  	// #24
  41240c:	mul	x10, x11, x10
  412410:	add	x9, x9, x10
  412414:	ldr	x9, [x9]
  412418:	ldr	x10, [sp, #112]
  41241c:	mov	x11, #0x10                  	// #16
  412420:	mul	x10, x11, x10
  412424:	add	x9, x9, x10
  412428:	ldr	w0, [x9, #8]
  41242c:	bl	41905c <wcrtomb@plt+0x1674c>
  412430:	tbnz	w0, #0, 412438 <wcrtomb@plt+0xfb28>
  412434:	b	412460 <wcrtomb@plt+0xfb50>
  412438:	ldr	x8, [sp, #96]
  41243c:	ldr	x9, [x8, #48]
  412440:	ldr	x9, [x9, #344]
  412444:	ldr	x10, [sp, #120]
  412448:	mov	x11, #0x4                   	// #4
  41244c:	mul	x10, x11, x10
  412450:	add	x9, x9, x10
  412454:	ldr	w12, [x9]
  412458:	orr	w12, w12, #0x2
  41245c:	str	w12, [x9]
  412460:	ldr	x8, [sp, #112]
  412464:	add	x8, x8, #0x1
  412468:	str	x8, [sp, #112]
  41246c:	b	412364 <wcrtomb@plt+0xfa54>
  412470:	ldr	x8, [sp, #120]
  412474:	add	x8, x8, #0x1
  412478:	str	x8, [sp, #120]
  41247c:	b	4122a4 <wcrtomb@plt+0xf994>
  412480:	ldr	x8, [sp, #96]
  412484:	ldr	x0, [x8, #48]
  412488:	sub	x1, x29, #0x50
  41248c:	bl	419088 <wcrtomb@plt+0x16778>
  412490:	str	w0, [sp, #108]
  412494:	ldr	w9, [sp, #108]
  412498:	and	w9, w9, #0x4
  41249c:	cbz	w9, 4124b4 <wcrtomb@plt+0xfba4>
  4124a0:	ldr	x8, [sp, #96]
  4124a4:	ldr	x0, [x8, #48]
  4124a8:	sub	x1, x29, #0x50
  4124ac:	mov	w2, #0x4                   	// #4
  4124b0:	bl	4190fc <wcrtomb@plt+0x167ec>
  4124b4:	ldr	x8, [sp, #96]
  4124b8:	ldr	x0, [x8, #48]
  4124bc:	ldr	w9, [sp, #108]
  4124c0:	eor	w2, w9, #0x7
  4124c4:	sub	x1, x29, #0x50
  4124c8:	bl	4190fc <wcrtomb@plt+0x167ec>
  4124cc:	mov	w9, w0
  4124d0:	ldr	x8, [sp, #96]
  4124d4:	ldr	x10, [x8, #48]
  4124d8:	str	w9, [x10, #364]
  4124dc:	lsl	x10, x0, #32
  4124e0:	asr	x10, x10, #32
  4124e4:	ldr	x11, [x8, #48]
  4124e8:	str	x10, [x11, #400]
  4124ec:	ldr	w9, [sp, #108]
  4124f0:	and	w9, w9, #0x2
  4124f4:	cbz	w9, 412518 <wcrtomb@plt+0xfc08>
  4124f8:	ldr	x8, [sp, #96]
  4124fc:	ldr	x0, [x8, #48]
  412500:	sub	x1, x29, #0x50
  412504:	mov	w2, #0x2                   	// #2
  412508:	bl	4190fc <wcrtomb@plt+0x167ec>
  41250c:	ldr	x8, [sp, #96]
  412510:	ldr	x9, [x8, #48]
  412514:	str	w0, [x9, #364]
  412518:	ldr	x8, [sp, #96]
  41251c:	ldr	x9, [x8, #48]
  412520:	ldr	w10, [x9, #364]
  412524:	add	w10, w10, #0x1
  412528:	str	w10, [x9, #364]
  41252c:	ldr	x9, [x8, #48]
  412530:	str	wzr, [x9, #360]
  412534:	ldr	x0, [x8, #32]
  412538:	bl	4026c0 <free@plt>
  41253c:	ldur	x0, [x29, #-88]
  412540:	bl	4026c0 <free@plt>
  412544:	ldur	x0, [x29, #-120]
  412548:	bl	4026c0 <free@plt>
  41254c:	ldur	x0, [x29, #-80]
  412550:	bl	4026c0 <free@plt>
  412554:	ldr	x28, [sp, #320]
  412558:	ldp	x29, x30, [sp, #304]
  41255c:	add	sp, sp, #0x150
  412560:	ret
  412564:	sub	sp, sp, #0x30
  412568:	mov	w8, #0x1                   	// #1
  41256c:	str	x0, [sp, #40]
  412570:	str	x1, [sp, #32]
  412574:	str	x2, [sp, #24]
  412578:	and	w9, w3, #0x1
  41257c:	strb	w9, [sp, #23]
  412580:	str	x4, [sp, #8]
  412584:	str	x5, [sp]
  412588:	ldr	x10, [sp]
  41258c:	strb	w8, [x10]
  412590:	ldr	x0, [sp, #32]
  412594:	add	sp, sp, #0x30
  412598:	ret
  41259c:	sub	sp, sp, #0x40
  4125a0:	stp	x29, x30, [sp, #48]
  4125a4:	add	x29, sp, #0x30
  4125a8:	stur	x0, [x29, #-8]
  4125ac:	ldur	x8, [x29, #-8]
  4125b0:	ldr	x0, [x8]
  4125b4:	bl	4026c0 <free@plt>
  4125b8:	ldur	x8, [x29, #-8]
  4125bc:	ldr	x0, [x8, #144]
  4125c0:	bl	4026c0 <free@plt>
  4125c4:	ldur	x8, [x29, #-8]
  4125c8:	ldrb	w9, [x8, #1048]
  4125cc:	tbnz	w9, #0, 4125d4 <wcrtomb@plt+0xfcc4>
  4125d0:	b	4125dc <wcrtomb@plt+0xfccc>
  4125d4:	ldur	x0, [x29, #-8]
  4125d8:	bl	4127ac <wcrtomb@plt+0xfe9c>
  4125dc:	ldur	x8, [x29, #-8]
  4125e0:	ldr	x0, [x8, #336]
  4125e4:	bl	4026c0 <free@plt>
  4125e8:	ldur	x8, [x29, #-8]
  4125ec:	ldr	x0, [x8, #344]
  4125f0:	bl	4026c0 <free@plt>
  4125f4:	stur	xzr, [x29, #-16]
  4125f8:	ldur	x8, [x29, #-16]
  4125fc:	ldur	x9, [x29, #-8]
  412600:	ldr	x9, [x9, #304]
  412604:	cmp	x8, x9
  412608:	b.ge	412660 <wcrtomb@plt+0xfd50>  // b.tcont
  41260c:	ldur	x8, [x29, #-8]
  412610:	ldr	x8, [x8, #296]
  412614:	ldur	x9, [x29, #-16]
  412618:	mov	x10, #0x50                  	// #80
  41261c:	mul	x9, x10, x9
  412620:	add	x8, x8, x9
  412624:	ldr	x0, [x8, #8]
  412628:	str	x10, [sp, #8]
  41262c:	bl	4026c0 <free@plt>
  412630:	ldur	x8, [x29, #-8]
  412634:	ldr	x8, [x8, #296]
  412638:	ldur	x9, [x29, #-16]
  41263c:	ldr	x10, [sp, #8]
  412640:	mul	x9, x10, x9
  412644:	add	x8, x8, x9
  412648:	ldr	x0, [x8, #48]
  41264c:	bl	4026c0 <free@plt>
  412650:	ldur	x8, [x29, #-16]
  412654:	add	x8, x8, #0x1
  412658:	stur	x8, [x29, #-16]
  41265c:	b	4125f8 <wcrtomb@plt+0xfce8>
  412660:	ldur	x8, [x29, #-8]
  412664:	ldr	x0, [x8, #296]
  412668:	bl	4026c0 <free@plt>
  41266c:	ldur	x8, [x29, #-8]
  412670:	ldr	x8, [x8, #320]
  412674:	cbz	x8, 4126cc <wcrtomb@plt+0xfdbc>
  412678:	str	xzr, [sp, #24]
  41267c:	ldr	x8, [sp, #24]
  412680:	ldur	x9, [x29, #-8]
  412684:	ldr	x9, [x9, #152]
  412688:	cmp	x8, x9
  41268c:	b.ge	4126c0 <wcrtomb@plt+0xfdb0>  // b.tcont
  412690:	ldur	x8, [x29, #-8]
  412694:	ldr	x8, [x8, #320]
  412698:	ldr	x9, [sp, #24]
  41269c:	mov	x10, #0x18                  	// #24
  4126a0:	mul	x9, x10, x9
  4126a4:	add	x8, x8, x9
  4126a8:	ldr	x0, [x8]
  4126ac:	bl	4026c0 <free@plt>
  4126b0:	ldr	x8, [sp, #24]
  4126b4:	add	x8, x8, #0x1
  4126b8:	str	x8, [sp, #24]
  4126bc:	b	41267c <wcrtomb@plt+0xfd6c>
  4126c0:	ldur	x8, [x29, #-8]
  4126c4:	ldr	x0, [x8, #320]
  4126c8:	bl	4026c0 <free@plt>
  4126cc:	ldur	x8, [x29, #-8]
  4126d0:	ldr	x8, [x8, #368]
  4126d4:	cbz	x8, 41277c <wcrtomb@plt+0xfe6c>
  4126d8:	str	xzr, [sp, #16]
  4126dc:	ldr	x8, [sp, #16]
  4126e0:	ldur	x9, [x29, #-8]
  4126e4:	ldr	x9, [x9, #352]
  4126e8:	cmp	x8, x9
  4126ec:	b.ge	412744 <wcrtomb@plt+0xfe34>  // b.tcont
  4126f0:	ldur	x8, [x29, #-8]
  4126f4:	ldr	x8, [x8, #368]
  4126f8:	ldr	x9, [sp, #16]
  4126fc:	mov	x10, #0x8                   	// #8
  412700:	mul	x9, x10, x9
  412704:	add	x8, x8, x9
  412708:	ldr	x0, [x8]
  41270c:	str	x10, [sp]
  412710:	bl	4026c0 <free@plt>
  412714:	ldur	x8, [x29, #-8]
  412718:	ldr	x8, [x8, #376]
  41271c:	ldr	x9, [sp, #16]
  412720:	ldr	x10, [sp]
  412724:	mul	x9, x10, x9
  412728:	add	x8, x8, x9
  41272c:	ldr	x0, [x8]
  412730:	bl	4026c0 <free@plt>
  412734:	ldr	x8, [sp, #16]
  412738:	add	x8, x8, #0x1
  41273c:	str	x8, [sp, #16]
  412740:	b	4126dc <wcrtomb@plt+0xfdcc>
  412744:	ldur	x8, [x29, #-8]
  412748:	ldr	x8, [x8, #368]
  41274c:	mov	x9, #0xfffffffffffffff0    	// #-16
  412750:	add	x0, x8, x9
  412754:	bl	4026c0 <free@plt>
  412758:	ldur	x8, [x29, #-8]
  41275c:	ldr	x0, [x8, #376]
  412760:	bl	4026c0 <free@plt>
  412764:	ldur	x8, [x29, #-8]
  412768:	ldr	x0, [x8, #392]
  41276c:	bl	4026c0 <free@plt>
  412770:	ldur	x8, [x29, #-8]
  412774:	ldr	x0, [x8, #384]
  412778:	bl	4026c0 <free@plt>
  41277c:	ldur	x8, [x29, #-8]
  412780:	ldr	x8, [x8, #288]
  412784:	cbz	x8, 4127a0 <wcrtomb@plt+0xfe90>
  412788:	ldur	x8, [x29, #-8]
  41278c:	ldr	x0, [x8, #288]
  412790:	bl	41259c <wcrtomb@plt+0xfc8c>
  412794:	ldur	x8, [x29, #-8]
  412798:	ldr	x0, [x8, #288]
  41279c:	bl	4026c0 <free@plt>
  4127a0:	ldp	x29, x30, [sp, #48]
  4127a4:	add	sp, sp, #0x40
  4127a8:	ret
  4127ac:	sub	sp, sp, #0x20
  4127b0:	stp	x29, x30, [sp, #16]
  4127b4:	add	x29, sp, #0x10
  4127b8:	str	x0, [sp, #8]
  4127bc:	ldr	x8, [sp, #8]
  4127c0:	ldr	x0, [x8, #280]
  4127c4:	bl	4026c0 <free@plt>
  4127c8:	ldr	x8, [sp, #8]
  4127cc:	ldr	x0, [x8, #96]
  4127d0:	bl	4026c0 <free@plt>
  4127d4:	ldr	x8, [sp, #8]
  4127d8:	ldr	x0, [x8, #408]
  4127dc:	bl	4026c0 <free@plt>
  4127e0:	ldr	x8, [sp, #8]
  4127e4:	ldr	x8, [x8, #432]
  4127e8:	cbz	x8, 41284c <wcrtomb@plt+0xff3c>
  4127ec:	mov	x8, #0xffffffffffffffff    	// #-1
  4127f0:	str	x8, [sp]
  4127f4:	ldr	x8, [sp]
  4127f8:	ldr	x9, [sp, #8]
  4127fc:	ldr	x9, [x9, #352]
  412800:	cmp	x8, x9
  412804:	b.ge	412838 <wcrtomb@plt+0xff28>  // b.tcont
  412808:	ldr	x8, [sp, #8]
  41280c:	ldr	x8, [x8, #432]
  412810:	ldr	x9, [sp]
  412814:	mov	x10, #0x8                   	// #8
  412818:	mul	x9, x10, x9
  41281c:	add	x8, x8, x9
  412820:	ldr	x0, [x8]
  412824:	bl	4026c0 <free@plt>
  412828:	ldr	x8, [sp]
  41282c:	add	x8, x8, #0x1
  412830:	str	x8, [sp]
  412834:	b	4127f4 <wcrtomb@plt+0xfee4>
  412838:	ldr	x8, [sp, #8]
  41283c:	ldr	x8, [x8, #432]
  412840:	mov	x9, #0xfffffffffffffff0    	// #-16
  412844:	add	x0, x8, x9
  412848:	bl	4026c0 <free@plt>
  41284c:	ldp	x29, x30, [sp, #16]
  412850:	add	sp, sp, #0x20
  412854:	ret
  412858:	sub	sp, sp, #0x120
  41285c:	stp	x29, x30, [sp, #256]
  412860:	str	x28, [sp, #272]
  412864:	add	x29, sp, #0x100
  412868:	mov	x8, xzr
  41286c:	adrp	x9, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  412870:	add	x9, x9, #0xad5
  412874:	mov	w10, #0x0                   	// #0
  412878:	mov	x11, #0x1                   	// #1
  41287c:	mov	w12, #0x1                   	// #1
  412880:	stur	x0, [x29, #-8]
  412884:	stur	x8, [x29, #-16]
  412888:	stur	x9, [x29, #-24]
  41288c:	sturb	w10, [x29, #-25]
  412890:	sturb	w10, [x29, #-26]
  412894:	sturb	w10, [x29, #-27]
  412898:	sturb	w10, [x29, #-28]
  41289c:	sturb	w10, [x29, #-29]
  4128a0:	ldur	x8, [x29, #-8]
  4128a4:	ldrb	w10, [x8, #457]
  4128a8:	and	w10, w10, #0x1
  4128ac:	ldur	x8, [x29, #-8]
  4128b0:	ldrb	w13, [x8, #1048]
  4128b4:	eor	w13, w13, w12
  4128b8:	and	w13, w13, #0x1
  4128bc:	tst	w10, w13
  4128c0:	cset	w10, ne  // ne = any
  4128c4:	and	w10, w10, w12
  4128c8:	sturb	w10, [x29, #-30]
  4128cc:	stur	x11, [x29, #-40]
  4128d0:	ldur	x8, [x29, #-40]
  4128d4:	add	x8, x8, #0x1
  4128d8:	ldur	x9, [x29, #-8]
  4128dc:	ldr	x9, [x9, #152]
  4128e0:	cmp	x8, x9
  4128e4:	b.ge	413394 <wcrtomb@plt+0x10a84>  // b.tcont
  4128e8:	ldur	x8, [x29, #-8]
  4128ec:	ldr	x8, [x8, #144]
  4128f0:	ldur	x9, [x29, #-40]
  4128f4:	ldr	x8, [x8, x9, lsl #3]
  4128f8:	stur	x8, [x29, #-48]
  4128fc:	ldur	x8, [x29, #-48]
  412900:	mov	x9, #0xffffffffffffffff    	// #-1
  412904:	cmp	x8, x9
  412908:	str	x8, [sp, #40]
  41290c:	b.eq	412cf8 <wcrtomb@plt+0x103e8>  // b.none
  412910:	b	412914 <wcrtomb@plt+0x10004>
  412914:	ldr	x8, [sp, #40]
  412918:	cbz	x8, 413024 <wcrtomb@plt+0x10714>
  41291c:	b	412920 <wcrtomb@plt+0x10010>
  412920:	ldr	x8, [sp, #40]
  412924:	cmp	x8, #0x100
  412928:	b.eq	412a34 <wcrtomb@plt+0x10124>  // b.none
  41292c:	b	412930 <wcrtomb@plt+0x10020>
  412930:	ldr	x8, [sp, #40]
  412934:	subs	x9, x8, #0x101
  412938:	cmp	x9, #0x1
  41293c:	b.ls	412a48 <wcrtomb@plt+0x10138>  // b.plast
  412940:	b	412944 <wcrtomb@plt+0x10034>
  412944:	ldr	x8, [sp, #40]
  412948:	cmp	x8, #0x103
  41294c:	b.eq	412ce4 <wcrtomb@plt+0x103d4>  // b.none
  412950:	b	412954 <wcrtomb@plt+0x10044>
  412954:	ldr	x8, [sp, #40]
  412958:	cmp	x8, #0x105
  41295c:	b.eq	412e38 <wcrtomb@plt+0x10528>  // b.none
  412960:	b	412964 <wcrtomb@plt+0x10054>
  412964:	ldr	x8, [sp, #40]
  412968:	cmp	x8, #0x106
  41296c:	b.eq	412a54 <wcrtomb@plt+0x10144>  // b.none
  412970:	b	412974 <wcrtomb@plt+0x10064>
  412974:	ldr	x8, [sp, #40]
  412978:	subs	x9, x8, #0x107
  41297c:	cmp	x9, #0x1
  412980:	b.ls	412a14 <wcrtomb@plt+0x10104>  // b.plast
  412984:	b	412988 <wcrtomb@plt+0x10078>
  412988:	ldr	x8, [sp, #40]
  41298c:	cmp	x8, #0x10a
  412990:	b.eq	412a34 <wcrtomb@plt+0x10124>  // b.none
  412994:	b	412998 <wcrtomb@plt+0x10088>
  412998:	ldr	x8, [sp, #40]
  41299c:	cmp	x8, #0x10c
  4129a0:	b.eq	4129cc <wcrtomb@plt+0x100bc>  // b.none
  4129a4:	b	4129a8 <wcrtomb@plt+0x10098>
  4129a8:	ldr	x8, [sp, #40]
  4129ac:	cmp	x8, #0x10d
  4129b0:	b.eq	4129f0 <wcrtomb@plt+0x100e0>  // b.none
  4129b4:	b	4129b8 <wcrtomb@plt+0x100a8>
  4129b8:	ldr	x8, [sp, #40]
  4129bc:	subs	x9, x8, #0x10e
  4129c0:	cmp	x9, #0x5
  4129c4:	b.ls	412a34 <wcrtomb@plt+0x10124>  // b.plast
  4129c8:	b	413028 <wcrtomb@plt+0x10718>
  4129cc:	ldur	x0, [x29, #-16]
  4129d0:	mov	x1, #0x2                   	// #2
  4129d4:	bl	413440 <wcrtomb@plt+0x10b30>
  4129d8:	stur	x0, [x29, #-16]
  4129dc:	ldur	x8, [x29, #-16]
  4129e0:	mov	w9, #0x1                   	// #1
  4129e4:	strb	w9, [x8, #32]
  4129e8:	sturb	w9, [x29, #-28]
  4129ec:	b	413384 <wcrtomb@plt+0x10a74>
  4129f0:	ldur	x0, [x29, #-16]
  4129f4:	mov	x1, #0x2                   	// #2
  4129f8:	bl	413440 <wcrtomb@plt+0x10b30>
  4129fc:	stur	x0, [x29, #-16]
  412a00:	ldur	x8, [x29, #-16]
  412a04:	mov	w9, #0x1                   	// #1
  412a08:	strb	w9, [x8, #33]
  412a0c:	sturb	w9, [x29, #-29]
  412a10:	b	413384 <wcrtomb@plt+0x10a74>
  412a14:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  412a18:	add	x0, x0, #0x789
  412a1c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  412a20:	add	x1, x1, #0x7b6
  412a24:	mov	w2, #0xff6                 	// #4086
  412a28:	adrp	x3, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  412a2c:	add	x3, x3, #0x7bc
  412a30:	bl	402860 <__assert_fail@plt>
  412a34:	ldur	x0, [x29, #-16]
  412a38:	mov	x1, #0x2                   	// #2
  412a3c:	bl	413440 <wcrtomb@plt+0x10b30>
  412a40:	stur	x0, [x29, #-16]
  412a44:	b	413384 <wcrtomb@plt+0x10a74>
  412a48:	ldur	x0, [x29, #-16]
  412a4c:	bl	4134e4 <wcrtomb@plt+0x10bd4>
  412a50:	b	413384 <wcrtomb@plt+0x10a74>
  412a54:	ldur	x8, [x29, #-16]
  412a58:	stur	x8, [x29, #-64]
  412a5c:	ldur	x8, [x29, #-16]
  412a60:	ldr	x8, [x8, #40]
  412a64:	stur	x8, [x29, #-16]
  412a68:	stur	x8, [x29, #-72]
  412a6c:	ldur	x8, [x29, #-72]
  412a70:	ldr	x0, [x8, #24]
  412a74:	ldur	x8, [x29, #-64]
  412a78:	ldr	x1, [x8, #24]
  412a7c:	bl	413564 <wcrtomb@plt+0x10c54>
  412a80:	tbnz	w0, #0, 412a88 <wcrtomb@plt+0x10178>
  412a84:	b	412ae0 <wcrtomb@plt+0x101d0>
  412a88:	ldur	x8, [x29, #-64]
  412a8c:	ldrb	w9, [x8, #32]
  412a90:	mov	w10, #0x1                   	// #1
  412a94:	and	w9, w9, #0x1
  412a98:	ldur	x8, [x29, #-72]
  412a9c:	ldrb	w11, [x8, #32]
  412aa0:	and	w11, w11, #0x1
  412aa4:	tst	w11, w9
  412aa8:	cset	w9, ne  // ne = any
  412aac:	and	w9, w9, w10
  412ab0:	strb	w9, [x8, #32]
  412ab4:	ldur	x8, [x29, #-64]
  412ab8:	ldrb	w9, [x8, #33]
  412abc:	and	w9, w9, #0x1
  412ac0:	ldur	x8, [x29, #-72]
  412ac4:	ldrb	w11, [x8, #33]
  412ac8:	and	w11, w11, #0x1
  412acc:	tst	w11, w9
  412ad0:	cset	w9, ne  // ne = any
  412ad4:	and	w9, w9, w10
  412ad8:	strb	w9, [x8, #33]
  412adc:	b	412b00 <wcrtomb@plt+0x101f0>
  412ae0:	ldur	x8, [x29, #-72]
  412ae4:	ldr	x8, [x8, #24]
  412ae8:	mov	w9, #0x0                   	// #0
  412aec:	strb	w9, [x8]
  412af0:	ldur	x8, [x29, #-72]
  412af4:	strb	w9, [x8, #32]
  412af8:	ldur	x8, [x29, #-72]
  412afc:	strb	w9, [x8, #33]
  412b00:	stur	xzr, [x29, #-112]
  412b04:	ldur	x8, [x29, #-72]
  412b08:	ldr	x8, [x8, #8]
  412b0c:	ldur	x9, [x29, #-112]
  412b10:	ldrb	w10, [x8, x9]
  412b14:	mov	w11, #0x0                   	// #0
  412b18:	str	w11, [sp, #36]
  412b1c:	cbz	w10, 412b4c <wcrtomb@plt+0x1023c>
  412b20:	ldur	x8, [x29, #-72]
  412b24:	ldr	x8, [x8, #8]
  412b28:	ldur	x9, [x29, #-112]
  412b2c:	ldrb	w10, [x8, x9]
  412b30:	ldur	x8, [x29, #-64]
  412b34:	ldr	x8, [x8, #8]
  412b38:	ldur	x9, [x29, #-112]
  412b3c:	ldrb	w11, [x8, x9]
  412b40:	cmp	w10, w11
  412b44:	cset	w10, eq  // eq = none
  412b48:	str	w10, [sp, #36]
  412b4c:	ldr	w8, [sp, #36]
  412b50:	tbnz	w8, #0, 412b58 <wcrtomb@plt+0x10248>
  412b54:	b	412b68 <wcrtomb@plt+0x10258>
  412b58:	ldur	x8, [x29, #-112]
  412b5c:	add	x8, x8, #0x1
  412b60:	stur	x8, [x29, #-112]
  412b64:	b	412b04 <wcrtomb@plt+0x101f4>
  412b68:	ldur	x8, [x29, #-72]
  412b6c:	ldr	x8, [x8, #8]
  412b70:	ldur	x9, [x29, #-112]
  412b74:	add	x8, x8, x9
  412b78:	mov	w10, #0x0                   	// #0
  412b7c:	strb	w10, [x8]
  412b80:	ldur	x8, [x29, #-72]
  412b84:	ldr	x0, [x8, #16]
  412b88:	bl	4022f0 <strlen@plt>
  412b8c:	stur	x0, [x29, #-88]
  412b90:	ldur	x8, [x29, #-64]
  412b94:	ldr	x0, [x8, #16]
  412b98:	bl	4022f0 <strlen@plt>
  412b9c:	stur	x0, [x29, #-96]
  412ba0:	ldur	x8, [x29, #-88]
  412ba4:	stur	x8, [x29, #-104]
  412ba8:	ldur	x8, [x29, #-104]
  412bac:	ldur	x9, [x29, #-96]
  412bb0:	cmp	x8, x9
  412bb4:	b.le	412bc0 <wcrtomb@plt+0x102b0>
  412bb8:	ldur	x8, [x29, #-96]
  412bbc:	stur	x8, [x29, #-104]
  412bc0:	stur	xzr, [x29, #-112]
  412bc4:	ldur	x8, [x29, #-112]
  412bc8:	ldur	x9, [x29, #-104]
  412bcc:	cmp	x8, x9
  412bd0:	b.ge	412c28 <wcrtomb@plt+0x10318>  // b.tcont
  412bd4:	ldur	x8, [x29, #-72]
  412bd8:	ldr	x8, [x8, #16]
  412bdc:	ldur	x9, [x29, #-88]
  412be0:	ldur	x10, [x29, #-112]
  412be4:	subs	x9, x9, x10
  412be8:	subs	x9, x9, #0x1
  412bec:	ldrb	w11, [x8, x9]
  412bf0:	ldur	x8, [x29, #-64]
  412bf4:	ldr	x8, [x8, #16]
  412bf8:	ldur	x9, [x29, #-96]
  412bfc:	ldur	x10, [x29, #-112]
  412c00:	subs	x9, x9, x10
  412c04:	subs	x9, x9, #0x1
  412c08:	ldrb	w12, [x8, x9]
  412c0c:	cmp	w11, w12
  412c10:	b.eq	412c18 <wcrtomb@plt+0x10308>  // b.none
  412c14:	b	412c28 <wcrtomb@plt+0x10318>
  412c18:	ldur	x8, [x29, #-112]
  412c1c:	add	x8, x8, #0x1
  412c20:	stur	x8, [x29, #-112]
  412c24:	b	412bc4 <wcrtomb@plt+0x102b4>
  412c28:	stur	xzr, [x29, #-80]
  412c2c:	ldur	x8, [x29, #-80]
  412c30:	ldur	x9, [x29, #-112]
  412c34:	cmp	x8, x9
  412c38:	b.ge	412c84 <wcrtomb@plt+0x10374>  // b.tcont
  412c3c:	ldur	x8, [x29, #-72]
  412c40:	ldr	x8, [x8, #16]
  412c44:	ldur	x9, [x29, #-88]
  412c48:	ldur	x10, [x29, #-112]
  412c4c:	subs	x9, x9, x10
  412c50:	ldur	x10, [x29, #-80]
  412c54:	add	x9, x9, x10
  412c58:	add	x8, x8, x9
  412c5c:	ldrb	w11, [x8]
  412c60:	ldur	x8, [x29, #-72]
  412c64:	ldr	x8, [x8, #16]
  412c68:	ldur	x9, [x29, #-80]
  412c6c:	add	x8, x8, x9
  412c70:	strb	w11, [x8]
  412c74:	ldur	x8, [x29, #-80]
  412c78:	add	x8, x8, #0x1
  412c7c:	stur	x8, [x29, #-80]
  412c80:	b	412c2c <wcrtomb@plt+0x1031c>
  412c84:	ldur	x8, [x29, #-72]
  412c88:	ldr	x8, [x8, #16]
  412c8c:	ldur	x9, [x29, #-80]
  412c90:	add	x8, x8, x9
  412c94:	mov	w10, #0x0                   	// #0
  412c98:	strb	w10, [x8]
  412c9c:	ldur	x8, [x29, #-72]
  412ca0:	ldr	x0, [x8]
  412ca4:	ldur	x8, [x29, #-64]
  412ca8:	ldr	x1, [x8]
  412cac:	bl	41359c <wcrtomb@plt+0x10c8c>
  412cb0:	stur	x0, [x29, #-56]
  412cb4:	ldur	x8, [x29, #-72]
  412cb8:	ldr	x0, [x8]
  412cbc:	bl	413684 <wcrtomb@plt+0x10d74>
  412cc0:	ldur	x8, [x29, #-72]
  412cc4:	ldr	x0, [x8]
  412cc8:	bl	4026c0 <free@plt>
  412ccc:	ldur	x8, [x29, #-56]
  412cd0:	ldur	x9, [x29, #-72]
  412cd4:	str	x8, [x9]
  412cd8:	ldur	x0, [x29, #-64]
  412cdc:	bl	4136c4 <wcrtomb@plt+0x10db4>
  412ce0:	b	413384 <wcrtomb@plt+0x10a74>
  412ce4:	ldur	x8, [x29, #-16]
  412ce8:	ldr	x8, [x8, #24]
  412cec:	mov	w9, #0x0                   	// #0
  412cf0:	strb	w9, [x8]
  412cf4:	b	413384 <wcrtomb@plt+0x10a74>
  412cf8:	ldur	x8, [x29, #-16]
  412cfc:	ldr	x8, [x8, #40]
  412d00:	cbnz	x8, 412d08 <wcrtomb@plt+0x103f8>
  412d04:	b	412d28 <wcrtomb@plt+0x10418>
  412d08:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  412d0c:	add	x0, x0, #0x7e8
  412d10:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  412d14:	add	x1, x1, #0x7b6
  412d18:	mov	w2, #0x1039                	// #4153
  412d1c:	adrp	x3, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  412d20:	add	x3, x3, #0x7bc
  412d24:	bl	402860 <__assert_fail@plt>
  412d28:	stur	xzr, [x29, #-120]
  412d2c:	ldur	x8, [x29, #-16]
  412d30:	ldr	x8, [x8]
  412d34:	ldur	x9, [x29, #-120]
  412d38:	mov	x10, #0x8                   	// #8
  412d3c:	mul	x9, x10, x9
  412d40:	add	x8, x8, x9
  412d44:	ldr	x8, [x8]
  412d48:	cbz	x8, 412db8 <wcrtomb@plt+0x104a8>
  412d4c:	ldur	x8, [x29, #-16]
  412d50:	ldr	x8, [x8]
  412d54:	ldur	x9, [x29, #-120]
  412d58:	mov	x10, #0x8                   	// #8
  412d5c:	mul	x9, x10, x9
  412d60:	add	x8, x8, x9
  412d64:	ldr	x0, [x8]
  412d68:	bl	4022f0 <strlen@plt>
  412d6c:	ldur	x8, [x29, #-24]
  412d70:	str	x0, [sp, #24]
  412d74:	mov	x0, x8
  412d78:	bl	4022f0 <strlen@plt>
  412d7c:	ldr	x8, [sp, #24]
  412d80:	cmp	x8, x0
  412d84:	b.ls	412da8 <wcrtomb@plt+0x10498>  // b.plast
  412d88:	ldur	x8, [x29, #-16]
  412d8c:	ldr	x8, [x8]
  412d90:	ldur	x9, [x29, #-120]
  412d94:	mov	x10, #0x8                   	// #8
  412d98:	mul	x9, x10, x9
  412d9c:	add	x8, x8, x9
  412da0:	ldr	x8, [x8]
  412da4:	stur	x8, [x29, #-24]
  412da8:	ldur	x8, [x29, #-120]
  412dac:	add	x8, x8, #0x1
  412db0:	stur	x8, [x29, #-120]
  412db4:	b	412d2c <wcrtomb@plt+0x1041c>
  412db8:	ldur	x0, [x29, #-24]
  412dbc:	ldur	x8, [x29, #-16]
  412dc0:	ldr	x1, [x8, #24]
  412dc4:	bl	413564 <wcrtomb@plt+0x10c54>
  412dc8:	tbnz	w0, #0, 412dd0 <wcrtomb@plt+0x104c0>
  412dcc:	b	412e34 <wcrtomb@plt+0x10524>
  412dd0:	ldurb	w8, [x29, #-28]
  412dd4:	tbnz	w8, #0, 412ddc <wcrtomb@plt+0x104cc>
  412dd8:	b	412dec <wcrtomb@plt+0x104dc>
  412ddc:	ldur	x8, [x29, #-16]
  412de0:	ldrb	w9, [x8, #32]
  412de4:	tbnz	w9, #0, 412dec <wcrtomb@plt+0x104dc>
  412de8:	b	412e10 <wcrtomb@plt+0x10500>
  412dec:	ldurb	w8, [x29, #-29]
  412df0:	tbnz	w8, #0, 412df8 <wcrtomb@plt+0x104e8>
  412df4:	b	412e08 <wcrtomb@plt+0x104f8>
  412df8:	ldur	x8, [x29, #-16]
  412dfc:	ldrb	w9, [x8, #33]
  412e00:	tbnz	w9, #0, 412e08 <wcrtomb@plt+0x104f8>
  412e04:	b	412e10 <wcrtomb@plt+0x10500>
  412e08:	mov	w8, #0x1                   	// #1
  412e0c:	sturb	w8, [x29, #-25]
  412e10:	ldur	x8, [x29, #-16]
  412e14:	ldrb	w9, [x8, #32]
  412e18:	mov	w10, #0x1                   	// #1
  412e1c:	and	w9, w9, w10
  412e20:	sturb	w9, [x29, #-26]
  412e24:	ldur	x8, [x29, #-16]
  412e28:	ldrb	w9, [x8, #33]
  412e2c:	and	w9, w9, #0x1
  412e30:	sturb	w9, [x29, #-27]
  412e34:	b	413394 <wcrtomb@plt+0x10a84>
  412e38:	ldur	x8, [x29, #-16]
  412e3c:	str	x8, [sp, #128]
  412e40:	ldur	x8, [x29, #-16]
  412e44:	ldr	x8, [x8, #40]
  412e48:	stur	x8, [x29, #-16]
  412e4c:	str	x8, [sp, #120]
  412e50:	ldr	x8, [sp, #120]
  412e54:	ldr	x0, [x8]
  412e58:	ldr	x8, [sp, #128]
  412e5c:	ldr	x1, [x8]
  412e60:	bl	413724 <wcrtomb@plt+0x10e14>
  412e64:	ldr	x8, [sp, #120]
  412e68:	str	x0, [x8]
  412e6c:	ldr	x8, [sp, #120]
  412e70:	ldr	x8, [x8, #16]
  412e74:	ldrb	w9, [x8]
  412e78:	cbz	w9, 412f1c <wcrtomb@plt+0x1060c>
  412e7c:	ldr	x8, [sp, #128]
  412e80:	ldr	x8, [x8, #8]
  412e84:	ldrb	w9, [x8]
  412e88:	cbz	w9, 412f1c <wcrtomb@plt+0x1060c>
  412e8c:	ldr	x8, [sp, #120]
  412e90:	ldr	x0, [x8, #16]
  412e94:	bl	4022f0 <strlen@plt>
  412e98:	str	x0, [sp, #112]
  412e9c:	ldr	x8, [sp, #128]
  412ea0:	ldr	x0, [x8, #8]
  412ea4:	bl	4022f0 <strlen@plt>
  412ea8:	str	x0, [sp, #104]
  412eac:	ldr	x8, [sp, #112]
  412eb0:	ldr	x9, [sp, #104]
  412eb4:	add	x0, x8, x9
  412eb8:	bl	423058 <wcrtomb@plt+0x20748>
  412ebc:	str	x0, [sp, #96]
  412ec0:	ldr	x0, [sp, #96]
  412ec4:	ldr	x8, [sp, #120]
  412ec8:	ldr	x1, [x8, #16]
  412ecc:	ldr	x2, [sp, #112]
  412ed0:	bl	402290 <memcpy@plt>
  412ed4:	ldr	x8, [sp, #96]
  412ed8:	ldr	x9, [sp, #112]
  412edc:	add	x0, x8, x9
  412ee0:	ldr	x8, [sp, #128]
  412ee4:	ldr	x1, [x8, #8]
  412ee8:	ldr	x2, [sp, #104]
  412eec:	bl	402290 <memcpy@plt>
  412ef0:	ldr	x8, [sp, #120]
  412ef4:	ldr	x0, [x8]
  412ef8:	ldr	x1, [sp, #96]
  412efc:	ldr	x8, [sp, #112]
  412f00:	ldr	x9, [sp, #104]
  412f04:	add	x2, x8, x9
  412f08:	bl	4137a4 <wcrtomb@plt+0x10e94>
  412f0c:	ldr	x8, [sp, #120]
  412f10:	str	x0, [x8]
  412f14:	ldr	x0, [sp, #96]
  412f18:	bl	4026c0 <free@plt>
  412f1c:	ldr	x8, [sp, #120]
  412f20:	ldr	x8, [x8, #24]
  412f24:	ldrb	w9, [x8]
  412f28:	cbz	w9, 412f48 <wcrtomb@plt+0x10638>
  412f2c:	ldr	x8, [sp, #120]
  412f30:	ldr	x0, [x8, #8]
  412f34:	ldr	x8, [sp, #128]
  412f38:	ldr	x1, [x8, #8]
  412f3c:	bl	4139a0 <wcrtomb@plt+0x11090>
  412f40:	ldr	x8, [sp, #120]
  412f44:	str	x0, [x8, #8]
  412f48:	ldr	x8, [sp, #128]
  412f4c:	ldr	x8, [x8, #24]
  412f50:	ldrb	w9, [x8]
  412f54:	cbnz	w9, 412f68 <wcrtomb@plt+0x10658>
  412f58:	ldr	x8, [sp, #120]
  412f5c:	ldr	x8, [x8, #16]
  412f60:	mov	w9, #0x0                   	// #0
  412f64:	strb	w9, [x8]
  412f68:	ldr	x8, [sp, #120]
  412f6c:	ldr	x0, [x8, #16]
  412f70:	ldr	x8, [sp, #128]
  412f74:	ldr	x1, [x8, #16]
  412f78:	bl	4139a0 <wcrtomb@plt+0x11090>
  412f7c:	ldr	x8, [sp, #120]
  412f80:	str	x0, [x8, #16]
  412f84:	ldr	x8, [sp, #120]
  412f88:	ldr	x8, [x8, #24]
  412f8c:	ldrb	w9, [x8]
  412f90:	cbnz	w9, 412fa4 <wcrtomb@plt+0x10694>
  412f94:	ldr	x8, [sp, #120]
  412f98:	ldrb	w9, [x8, #32]
  412f9c:	tbnz	w9, #0, 412fa4 <wcrtomb@plt+0x10694>
  412fa0:	b	412ff8 <wcrtomb@plt+0x106e8>
  412fa4:	ldr	x8, [sp, #128]
  412fa8:	ldr	x8, [x8, #24]
  412fac:	ldrb	w9, [x8]
  412fb0:	cbnz	w9, 412fc4 <wcrtomb@plt+0x106b4>
  412fb4:	ldr	x8, [sp, #128]
  412fb8:	ldrb	w9, [x8, #33]
  412fbc:	tbnz	w9, #0, 412fc4 <wcrtomb@plt+0x106b4>
  412fc0:	b	412ff8 <wcrtomb@plt+0x106e8>
  412fc4:	ldr	x8, [sp, #120]
  412fc8:	ldr	x0, [x8, #24]
  412fcc:	ldr	x8, [sp, #128]
  412fd0:	ldr	x1, [x8, #24]
  412fd4:	bl	4139a0 <wcrtomb@plt+0x11090>
  412fd8:	ldr	x8, [sp, #120]
  412fdc:	str	x0, [x8, #24]
  412fe0:	ldr	x8, [sp, #128]
  412fe4:	ldrb	w9, [x8, #33]
  412fe8:	ldr	x8, [sp, #120]
  412fec:	and	w9, w9, #0x1
  412ff0:	strb	w9, [x8, #33]
  412ff4:	b	413018 <wcrtomb@plt+0x10708>
  412ff8:	ldr	x8, [sp, #120]
  412ffc:	ldr	x8, [x8, #24]
  413000:	mov	w9, #0x0                   	// #0
  413004:	strb	w9, [x8]
  413008:	ldr	x8, [sp, #120]
  41300c:	strb	w9, [x8, #32]
  413010:	ldr	x8, [sp, #120]
  413014:	strb	w9, [x8, #33]
  413018:	ldr	x0, [sp, #128]
  41301c:	bl	4136c4 <wcrtomb@plt+0x10db4>
  413020:	b	413384 <wcrtomb@plt+0x10a74>
  413024:	b	413394 <wcrtomb@plt+0x10a84>
  413028:	ldur	x8, [x29, #-48]
  41302c:	mov	x9, #0x114                 	// #276
  413030:	cmp	x9, x8
  413034:	b.gt	413138 <wcrtomb@plt+0x10828>
  413038:	ldur	x8, [x29, #-8]
  41303c:	ldr	x8, [x8]
  413040:	ldur	x9, [x29, #-48]
  413044:	subs	x9, x9, #0x114
  413048:	mov	x10, #0x20                  	// #32
  41304c:	mul	x9, x10, x9
  413050:	add	x8, x8, x9
  413054:	str	x8, [sp, #88]
  413058:	str	wzr, [sp, #84]
  41305c:	ldr	w8, [sp, #84]
  413060:	cmp	w8, #0x100
  413064:	b.ge	413090 <wcrtomb@plt+0x10780>  // b.tcont
  413068:	ldr	w0, [sp, #84]
  41306c:	ldr	x1, [sp, #88]
  413070:	bl	413a30 <wcrtomb@plt+0x11120>
  413074:	tbnz	w0, #0, 41307c <wcrtomb@plt+0x1076c>
  413078:	b	413080 <wcrtomb@plt+0x10770>
  41307c:	b	413090 <wcrtomb@plt+0x10780>
  413080:	ldr	w8, [sp, #84]
  413084:	add	w8, w8, #0x1
  413088:	str	w8, [sp, #84]
  41308c:	b	41305c <wcrtomb@plt+0x1074c>
  413090:	ldr	w8, [sp, #84]
  413094:	cmp	w8, #0x100
  413098:	b.lt	4130b0 <wcrtomb@plt+0x107a0>  // b.tstop
  41309c:	ldur	x0, [x29, #-16]
  4130a0:	mov	x1, #0x2                   	// #2
  4130a4:	bl	413440 <wcrtomb@plt+0x10b30>
  4130a8:	stur	x0, [x29, #-16]
  4130ac:	b	413384 <wcrtomb@plt+0x10a74>
  4130b0:	ldrsw	x8, [sp, #84]
  4130b4:	stur	x8, [x29, #-48]
  4130b8:	ldr	w8, [sp, #84]
  4130bc:	add	w8, w8, #0x1
  4130c0:	str	w8, [sp, #84]
  4130c4:	cmp	w8, #0x100
  4130c8:	b.ge	413118 <wcrtomb@plt+0x10808>  // b.tcont
  4130cc:	ldr	w0, [sp, #84]
  4130d0:	ldr	x1, [sp, #88]
  4130d4:	bl	413a30 <wcrtomb@plt+0x11120>
  4130d8:	tbnz	w0, #0, 4130e0 <wcrtomb@plt+0x107d0>
  4130dc:	b	413114 <wcrtomb@plt+0x10804>
  4130e0:	ldurb	w8, [x29, #-30]
  4130e4:	tbnz	w8, #0, 4130ec <wcrtomb@plt+0x107dc>
  4130e8:	b	413110 <wcrtomb@plt+0x10800>
  4130ec:	ldr	w0, [sp, #84]
  4130f0:	bl	402460 <toupper@plt>
  4130f4:	ldur	x8, [x29, #-48]
  4130f8:	str	w0, [sp, #20]
  4130fc:	mov	w0, w8
  413100:	bl	402460 <toupper@plt>
  413104:	ldr	w8, [sp, #20]
  413108:	cmp	w8, w0
  41310c:	b.eq	413114 <wcrtomb@plt+0x10804>  // b.none
  413110:	b	413118 <wcrtomb@plt+0x10808>
  413114:	b	4130b8 <wcrtomb@plt+0x107a8>
  413118:	ldr	w8, [sp, #84]
  41311c:	cmp	w8, #0x100
  413120:	b.ge	413138 <wcrtomb@plt+0x10828>  // b.tcont
  413124:	ldur	x0, [x29, #-16]
  413128:	mov	x1, #0x2                   	// #2
  41312c:	bl	413440 <wcrtomb@plt+0x10b30>
  413130:	stur	x0, [x29, #-16]
  413134:	b	413384 <wcrtomb@plt+0x10a74>
  413138:	ldur	x8, [x29, #-40]
  41313c:	add	x8, x8, #0x2
  413140:	str	x8, [sp, #72]
  413144:	ldur	x8, [x29, #-8]
  413148:	ldr	x8, [x8, #144]
  41314c:	ldur	x9, [x29, #-40]
  413150:	add	x9, x9, #0x1
  413154:	ldr	x8, [x8, x9, lsl #3]
  413158:	cmp	x8, #0x105
  41315c:	b.ne	4131f0 <wcrtomb@plt+0x108e0>  // b.any
  413160:	ldr	x8, [sp, #72]
  413164:	ldur	x9, [x29, #-8]
  413168:	ldr	x9, [x9, #152]
  41316c:	subs	x9, x9, #0x1
  413170:	cmp	x8, x9
  413174:	b.ge	4131f0 <wcrtomb@plt+0x108e0>  // b.tcont
  413178:	ldr	x8, [sp, #72]
  41317c:	ldur	x9, [x29, #-40]
  413180:	cmp	x8, x9
  413184:	b.eq	4131c0 <wcrtomb@plt+0x108b0>  // b.none
  413188:	ldur	x8, [x29, #-8]
  41318c:	ldr	x8, [x8, #144]
  413190:	ldr	x9, [sp, #72]
  413194:	ldr	x8, [x8, x9, lsl #3]
  413198:	cmp	x8, #0x0
  41319c:	cset	w10, le
  4131a0:	tbnz	w10, #0, 4131dc <wcrtomb@plt+0x108cc>
  4131a4:	ldur	x8, [x29, #-8]
  4131a8:	ldr	x8, [x8, #144]
  4131ac:	ldr	x9, [sp, #72]
  4131b0:	ldr	x8, [x8, x9, lsl #3]
  4131b4:	mov	x9, #0x100                 	// #256
  4131b8:	cmp	x9, x8
  4131bc:	b.le	4131dc <wcrtomb@plt+0x108cc>
  4131c0:	ldur	x8, [x29, #-8]
  4131c4:	ldr	x8, [x8, #144]
  4131c8:	ldr	x9, [sp, #72]
  4131cc:	add	x9, x9, #0x1
  4131d0:	ldr	x8, [x8, x9, lsl #3]
  4131d4:	cmp	x8, #0x105
  4131d8:	b.eq	4131e0 <wcrtomb@plt+0x108d0>  // b.none
  4131dc:	b	4131f0 <wcrtomb@plt+0x108e0>
  4131e0:	ldr	x8, [sp, #72]
  4131e4:	add	x8, x8, #0x2
  4131e8:	str	x8, [sp, #72]
  4131ec:	b	413160 <wcrtomb@plt+0x10850>
  4131f0:	ldur	x0, [x29, #-16]
  4131f4:	ldr	x8, [sp, #72]
  4131f8:	ldur	x9, [x29, #-40]
  4131fc:	subs	x8, x8, x9
  413200:	asr	x8, x8, #1
  413204:	add	x1, x8, #0x1
  413208:	bl	413440 <wcrtomb@plt+0x10b30>
  41320c:	stur	x0, [x29, #-16]
  413210:	ldurb	w10, [x29, #-30]
  413214:	tbnz	w10, #0, 41321c <wcrtomb@plt+0x1090c>
  413218:	b	413238 <wcrtomb@plt+0x10928>
  41321c:	ldur	x8, [x29, #-48]
  413220:	mov	w0, w8
  413224:	bl	402460 <toupper@plt>
  413228:	mov	w1, w0
  41322c:	sxtw	x9, w1
  413230:	str	x9, [sp, #8]
  413234:	b	413240 <wcrtomb@plt+0x10930>
  413238:	ldur	x8, [x29, #-48]
  41323c:	str	x8, [sp, #8]
  413240:	ldr	x8, [sp, #8]
  413244:	ldur	x9, [x29, #-16]
  413248:	ldr	x9, [x9, #16]
  41324c:	strb	w8, [x9]
  413250:	ldur	x9, [x29, #-16]
  413254:	ldr	x9, [x9, #8]
  413258:	strb	w8, [x9]
  41325c:	ldur	x9, [x29, #-16]
  413260:	ldr	x9, [x9, #24]
  413264:	strb	w8, [x9]
  413268:	mov	x9, #0x1                   	// #1
  41326c:	str	x9, [sp, #64]
  413270:	ldur	x8, [x29, #-40]
  413274:	add	x8, x8, #0x2
  413278:	ldr	x9, [sp, #72]
  41327c:	cmp	x8, x9
  413280:	b.ge	413324 <wcrtomb@plt+0x10a14>  // b.tcont
  413284:	ldur	x8, [x29, #-40]
  413288:	add	x8, x8, #0x2
  41328c:	stur	x8, [x29, #-40]
  413290:	ldur	x8, [x29, #-8]
  413294:	ldr	x8, [x8, #144]
  413298:	ldur	x9, [x29, #-40]
  41329c:	ldr	x8, [x8, x9, lsl #3]
  4132a0:	stur	x8, [x29, #-48]
  4132a4:	ldurb	w10, [x29, #-30]
  4132a8:	tbnz	w10, #0, 4132b0 <wcrtomb@plt+0x109a0>
  4132ac:	b	4132cc <wcrtomb@plt+0x109bc>
  4132b0:	ldur	x8, [x29, #-48]
  4132b4:	mov	w0, w8
  4132b8:	bl	402460 <toupper@plt>
  4132bc:	mov	w1, w0
  4132c0:	sxtw	x9, w1
  4132c4:	str	x9, [sp]
  4132c8:	b	4132d4 <wcrtomb@plt+0x109c4>
  4132cc:	ldur	x8, [x29, #-48]
  4132d0:	str	x8, [sp]
  4132d4:	ldr	x8, [sp]
  4132d8:	ldur	x9, [x29, #-16]
  4132dc:	ldr	x9, [x9, #16]
  4132e0:	ldr	x10, [sp, #64]
  4132e4:	add	x9, x9, x10
  4132e8:	strb	w8, [x9]
  4132ec:	ldur	x9, [x29, #-16]
  4132f0:	ldr	x9, [x9, #8]
  4132f4:	ldr	x10, [sp, #64]
  4132f8:	add	x9, x9, x10
  4132fc:	strb	w8, [x9]
  413300:	ldur	x9, [x29, #-16]
  413304:	ldr	x9, [x9, #24]
  413308:	ldr	x10, [sp, #64]
  41330c:	add	x9, x9, x10
  413310:	strb	w8, [x9]
  413314:	ldr	x8, [sp, #64]
  413318:	add	x8, x8, #0x1
  41331c:	str	x8, [sp, #64]
  413320:	b	413270 <wcrtomb@plt+0x10960>
  413324:	ldur	x8, [x29, #-16]
  413328:	ldr	x8, [x8, #16]
  41332c:	ldr	x9, [sp, #64]
  413330:	add	x8, x8, x9
  413334:	mov	w10, #0x0                   	// #0
  413338:	strb	w10, [x8]
  41333c:	ldur	x8, [x29, #-16]
  413340:	ldr	x8, [x8, #8]
  413344:	ldr	x9, [sp, #64]
  413348:	add	x8, x8, x9
  41334c:	strb	w10, [x8]
  413350:	ldur	x8, [x29, #-16]
  413354:	ldr	x8, [x8, #24]
  413358:	ldr	x9, [sp, #64]
  41335c:	add	x8, x8, x9
  413360:	strb	w10, [x8]
  413364:	ldur	x8, [x29, #-16]
  413368:	ldr	x0, [x8]
  41336c:	ldur	x8, [x29, #-16]
  413370:	ldr	x1, [x8, #24]
  413374:	ldr	x2, [sp, #64]
  413378:	bl	4137a4 <wcrtomb@plt+0x10e94>
  41337c:	ldur	x8, [x29, #-16]
  413380:	str	x0, [x8]
  413384:	ldur	x8, [x29, #-40]
  413388:	add	x8, x8, #0x1
  41338c:	stur	x8, [x29, #-40]
  413390:	b	4128d0 <wcrtomb@plt+0xffc0>
  413394:	mov	x8, xzr
  413398:	str	x8, [sp, #56]
  41339c:	ldur	x8, [x29, #-24]
  4133a0:	ldrb	w9, [x8]
  4133a4:	cbz	w9, 413404 <wcrtomb@plt+0x10af4>
  4133a8:	ldur	x0, [x29, #-24]
  4133ac:	bl	4022f0 <strlen@plt>
  4133b0:	add	x8, x0, #0x1
  4133b4:	add	x0, x8, #0x3
  4133b8:	bl	423058 <wcrtomb@plt+0x20748>
  4133bc:	str	x0, [sp, #56]
  4133c0:	ldurb	w9, [x29, #-25]
  4133c4:	ldr	x8, [sp, #56]
  4133c8:	mov	w10, #0x1                   	// #1
  4133cc:	and	w9, w9, w10
  4133d0:	strb	w9, [x8]
  4133d4:	ldurb	w9, [x29, #-26]
  4133d8:	ldr	x8, [sp, #56]
  4133dc:	and	w9, w9, w10
  4133e0:	strb	w9, [x8, #1]
  4133e4:	ldurb	w9, [x29, #-27]
  4133e8:	ldr	x8, [sp, #56]
  4133ec:	and	w9, w9, #0x1
  4133f0:	strb	w9, [x8, #2]
  4133f4:	ldr	x8, [sp, #56]
  4133f8:	add	x0, x8, #0x3
  4133fc:	ldur	x1, [x29, #-24]
  413400:	bl	402730 <strcpy@plt>
  413404:	ldur	x8, [x29, #-16]
  413408:	cbz	x8, 41342c <wcrtomb@plt+0x10b1c>
  41340c:	ldur	x8, [x29, #-16]
  413410:	ldr	x8, [x8, #40]
  413414:	str	x8, [sp, #48]
  413418:	ldur	x0, [x29, #-16]
  41341c:	bl	4136c4 <wcrtomb@plt+0x10db4>
  413420:	ldr	x8, [sp, #48]
  413424:	stur	x8, [x29, #-16]
  413428:	b	413404 <wcrtomb@plt+0x10af4>
  41342c:	ldr	x0, [sp, #56]
  413430:	ldr	x28, [sp, #272]
  413434:	ldp	x29, x30, [sp, #256]
  413438:	add	sp, sp, #0x120
  41343c:	ret
  413440:	sub	sp, sp, #0x40
  413444:	stp	x29, x30, [sp, #48]
  413448:	add	x29, sp, #0x30
  41344c:	mov	x8, #0x30                  	// #48
  413450:	mov	x9, #0x8                   	// #8
  413454:	mov	w10, #0x0                   	// #0
  413458:	stur	x0, [x29, #-8]
  41345c:	stur	x1, [x29, #-16]
  413460:	mov	x0, x8
  413464:	str	x9, [sp, #16]
  413468:	str	w10, [sp, #12]
  41346c:	bl	423058 <wcrtomb@plt+0x20748>
  413470:	str	x0, [sp, #24]
  413474:	ldr	x0, [sp, #16]
  413478:	bl	4232a0 <wcrtomb@plt+0x20990>
  41347c:	ldr	x8, [sp, #24]
  413480:	str	x0, [x8]
  413484:	ldur	x0, [x29, #-16]
  413488:	bl	4232a0 <wcrtomb@plt+0x20990>
  41348c:	ldr	x8, [sp, #24]
  413490:	str	x0, [x8, #8]
  413494:	ldur	x0, [x29, #-16]
  413498:	bl	4232a0 <wcrtomb@plt+0x20990>
  41349c:	ldr	x8, [sp, #24]
  4134a0:	str	x0, [x8, #16]
  4134a4:	ldur	x0, [x29, #-16]
  4134a8:	bl	4232a0 <wcrtomb@plt+0x20990>
  4134ac:	ldr	x8, [sp, #24]
  4134b0:	str	x0, [x8, #24]
  4134b4:	ldr	x8, [sp, #24]
  4134b8:	ldr	w10, [sp, #12]
  4134bc:	strb	w10, [x8, #32]
  4134c0:	ldr	x8, [sp, #24]
  4134c4:	strb	w10, [x8, #33]
  4134c8:	ldur	x8, [x29, #-8]
  4134cc:	ldr	x9, [sp, #24]
  4134d0:	str	x8, [x9, #40]
  4134d4:	ldr	x0, [sp, #24]
  4134d8:	ldp	x29, x30, [sp, #48]
  4134dc:	add	sp, sp, #0x40
  4134e0:	ret
  4134e4:	sub	sp, sp, #0x30
  4134e8:	stp	x29, x30, [sp, #32]
  4134ec:	add	x29, sp, #0x20
  4134f0:	mov	x8, xzr
  4134f4:	mov	w9, #0x0                   	// #0
  4134f8:	stur	x0, [x29, #-8]
  4134fc:	ldur	x10, [x29, #-8]
  413500:	ldr	x0, [x10]
  413504:	str	x8, [sp, #16]
  413508:	str	w9, [sp, #12]
  41350c:	bl	413684 <wcrtomb@plt+0x10d74>
  413510:	ldur	x8, [x29, #-8]
  413514:	ldr	x8, [x8]
  413518:	ldr	x10, [sp, #16]
  41351c:	str	x10, [x8]
  413520:	ldur	x8, [x29, #-8]
  413524:	ldr	x8, [x8, #24]
  413528:	ldr	w9, [sp, #12]
  41352c:	strb	w9, [x8]
  413530:	ldur	x8, [x29, #-8]
  413534:	ldr	x8, [x8, #16]
  413538:	strb	w9, [x8]
  41353c:	ldur	x8, [x29, #-8]
  413540:	ldr	x8, [x8, #8]
  413544:	strb	w9, [x8]
  413548:	ldur	x8, [x29, #-8]
  41354c:	strb	w9, [x8, #32]
  413550:	ldur	x8, [x29, #-8]
  413554:	strb	w9, [x8, #33]
  413558:	ldp	x29, x30, [sp, #32]
  41355c:	add	sp, sp, #0x30
  413560:	ret
  413564:	sub	sp, sp, #0x20
  413568:	stp	x29, x30, [sp, #16]
  41356c:	add	x29, sp, #0x10
  413570:	str	x0, [sp, #8]
  413574:	str	x1, [sp]
  413578:	ldr	x0, [sp, #8]
  41357c:	ldr	x1, [sp]
  413580:	bl	4026a0 <strcmp@plt>
  413584:	cmp	w0, #0x0
  413588:	cset	w8, eq  // eq = none
  41358c:	and	w0, w8, #0x1
  413590:	ldp	x29, x30, [sp, #16]
  413594:	add	sp, sp, #0x20
  413598:	ret
  41359c:	sub	sp, sp, #0x40
  4135a0:	stp	x29, x30, [sp, #48]
  4135a4:	add	x29, sp, #0x30
  4135a8:	mov	x8, #0x8                   	// #8
  4135ac:	stur	x0, [x29, #-8]
  4135b0:	stur	x1, [x29, #-16]
  4135b4:	mov	x0, x8
  4135b8:	bl	4232a0 <wcrtomb@plt+0x20990>
  4135bc:	str	x0, [sp, #24]
  4135c0:	str	xzr, [sp, #16]
  4135c4:	ldur	x8, [x29, #-8]
  4135c8:	ldr	x9, [sp, #16]
  4135cc:	mov	x10, #0x8                   	// #8
  4135d0:	mul	x9, x10, x9
  4135d4:	add	x8, x8, x9
  4135d8:	ldr	x8, [x8]
  4135dc:	cbz	x8, 413674 <wcrtomb@plt+0x10d64>
  4135e0:	str	xzr, [sp, #8]
  4135e4:	ldur	x8, [x29, #-16]
  4135e8:	ldr	x9, [sp, #8]
  4135ec:	mov	x10, #0x8                   	// #8
  4135f0:	mul	x9, x10, x9
  4135f4:	add	x8, x8, x9
  4135f8:	ldr	x8, [x8]
  4135fc:	cbz	x8, 413664 <wcrtomb@plt+0x10d54>
  413600:	ldur	x8, [x29, #-8]
  413604:	ldr	x9, [sp, #16]
  413608:	mov	x10, #0x8                   	// #8
  41360c:	mul	x9, x10, x9
  413610:	add	x8, x8, x9
  413614:	ldr	x0, [x8]
  413618:	ldur	x8, [x29, #-16]
  41361c:	ldr	x9, [sp, #8]
  413620:	mul	x9, x10, x9
  413624:	add	x8, x8, x9
  413628:	ldr	x1, [x8]
  41362c:	bl	41a5f8 <wcrtomb@plt+0x17ce8>
  413630:	str	x0, [sp]
  413634:	ldr	x0, [sp, #24]
  413638:	ldr	x1, [sp]
  41363c:	bl	413724 <wcrtomb@plt+0x10e14>
  413640:	str	x0, [sp, #24]
  413644:	ldr	x0, [sp]
  413648:	bl	413684 <wcrtomb@plt+0x10d74>
  41364c:	ldr	x0, [sp]
  413650:	bl	4026c0 <free@plt>
  413654:	ldr	x8, [sp, #8]
  413658:	add	x8, x8, #0x1
  41365c:	str	x8, [sp, #8]
  413660:	b	4135e4 <wcrtomb@plt+0x10cd4>
  413664:	ldr	x8, [sp, #16]
  413668:	add	x8, x8, #0x1
  41366c:	str	x8, [sp, #16]
  413670:	b	4135c4 <wcrtomb@plt+0x10cb4>
  413674:	ldr	x0, [sp, #24]
  413678:	ldp	x29, x30, [sp, #48]
  41367c:	add	sp, sp, #0x40
  413680:	ret
  413684:	sub	sp, sp, #0x20
  413688:	stp	x29, x30, [sp, #16]
  41368c:	add	x29, sp, #0x10
  413690:	str	x0, [sp, #8]
  413694:	ldr	x8, [sp, #8]
  413698:	ldr	x8, [x8]
  41369c:	cbz	x8, 4136b8 <wcrtomb@plt+0x10da8>
  4136a0:	ldr	x8, [sp, #8]
  4136a4:	add	x9, x8, #0x8
  4136a8:	str	x9, [sp, #8]
  4136ac:	ldr	x0, [x8]
  4136b0:	bl	4026c0 <free@plt>
  4136b4:	b	413694 <wcrtomb@plt+0x10d84>
  4136b8:	ldp	x29, x30, [sp, #16]
  4136bc:	add	sp, sp, #0x20
  4136c0:	ret
  4136c4:	sub	sp, sp, #0x20
  4136c8:	stp	x29, x30, [sp, #16]
  4136cc:	add	x29, sp, #0x10
  4136d0:	str	x0, [sp, #8]
  4136d4:	ldr	x8, [sp, #8]
  4136d8:	ldr	x0, [x8]
  4136dc:	bl	413684 <wcrtomb@plt+0x10d74>
  4136e0:	ldr	x8, [sp, #8]
  4136e4:	ldr	x0, [x8]
  4136e8:	bl	4026c0 <free@plt>
  4136ec:	ldr	x8, [sp, #8]
  4136f0:	ldr	x0, [x8, #8]
  4136f4:	bl	4026c0 <free@plt>
  4136f8:	ldr	x8, [sp, #8]
  4136fc:	ldr	x0, [x8, #16]
  413700:	bl	4026c0 <free@plt>
  413704:	ldr	x8, [sp, #8]
  413708:	ldr	x0, [x8, #24]
  41370c:	bl	4026c0 <free@plt>
  413710:	ldr	x0, [sp, #8]
  413714:	bl	4026c0 <free@plt>
  413718:	ldp	x29, x30, [sp, #16]
  41371c:	add	sp, sp, #0x20
  413720:	ret
  413724:	sub	sp, sp, #0x40
  413728:	stp	x29, x30, [sp, #48]
  41372c:	add	x29, sp, #0x30
  413730:	stur	x0, [x29, #-8]
  413734:	stur	x1, [x29, #-16]
  413738:	ldur	x8, [x29, #-16]
  41373c:	ldr	x8, [x8]
  413740:	cbz	x8, 413794 <wcrtomb@plt+0x10e84>
  413744:	ldur	x0, [x29, #-8]
  413748:	ldur	x8, [x29, #-16]
  41374c:	ldr	x1, [x8]
  413750:	ldur	x8, [x29, #-16]
  413754:	ldr	x8, [x8]
  413758:	str	x0, [sp, #24]
  41375c:	mov	x0, x8
  413760:	str	x1, [sp, #16]
  413764:	bl	4022f0 <strlen@plt>
  413768:	ldr	x8, [sp, #24]
  41376c:	str	x0, [sp, #8]
  413770:	mov	x0, x8
  413774:	ldr	x1, [sp, #16]
  413778:	ldr	x2, [sp, #8]
  41377c:	bl	4137a4 <wcrtomb@plt+0x10e94>
  413780:	stur	x0, [x29, #-8]
  413784:	ldur	x8, [x29, #-16]
  413788:	add	x8, x8, #0x8
  41378c:	stur	x8, [x29, #-16]
  413790:	b	413738 <wcrtomb@plt+0x10e28>
  413794:	ldur	x0, [x29, #-8]
  413798:	ldp	x29, x30, [sp, #48]
  41379c:	add	sp, sp, #0x40
  4137a0:	ret
  4137a4:	sub	sp, sp, #0x50
  4137a8:	stp	x29, x30, [sp, #64]
  4137ac:	add	x29, sp, #0x40
  4137b0:	mov	w8, #0x0                   	// #0
  4137b4:	stur	x0, [x29, #-16]
  4137b8:	stur	x1, [x29, #-24]
  4137bc:	str	x2, [sp, #32]
  4137c0:	ldr	x9, [sp, #32]
  4137c4:	add	x0, x9, #0x1
  4137c8:	str	w8, [sp, #12]
  4137cc:	bl	423058 <wcrtomb@plt+0x20748>
  4137d0:	ldur	x1, [x29, #-24]
  4137d4:	ldr	x2, [sp, #32]
  4137d8:	str	x0, [sp]
  4137dc:	bl	402290 <memcpy@plt>
  4137e0:	ldr	x9, [sp]
  4137e4:	stur	x9, [x29, #-24]
  4137e8:	ldur	x10, [x29, #-24]
  4137ec:	ldr	x11, [sp, #32]
  4137f0:	add	x10, x10, x11
  4137f4:	ldr	w8, [sp, #12]
  4137f8:	strb	w8, [x10]
  4137fc:	str	xzr, [sp, #24]
  413800:	ldur	x8, [x29, #-16]
  413804:	ldr	x9, [sp, #24]
  413808:	mov	x10, #0x8                   	// #8
  41380c:	mul	x9, x10, x9
  413810:	add	x8, x8, x9
  413814:	ldr	x8, [x8]
  413818:	cbz	x8, 413864 <wcrtomb@plt+0x10f54>
  41381c:	ldur	x8, [x29, #-16]
  413820:	ldr	x9, [sp, #24]
  413824:	mov	x10, #0x8                   	// #8
  413828:	mul	x9, x10, x9
  41382c:	add	x8, x8, x9
  413830:	ldr	x0, [x8]
  413834:	ldur	x1, [x29, #-24]
  413838:	bl	4027d0 <strstr@plt>
  41383c:	cbz	x0, 413854 <wcrtomb@plt+0x10f44>
  413840:	ldur	x0, [x29, #-24]
  413844:	bl	4026c0 <free@plt>
  413848:	ldur	x8, [x29, #-16]
  41384c:	stur	x8, [x29, #-8]
  413850:	b	413990 <wcrtomb@plt+0x11080>
  413854:	ldr	x8, [sp, #24]
  413858:	add	x8, x8, #0x1
  41385c:	str	x8, [sp, #24]
  413860:	b	413800 <wcrtomb@plt+0x10ef0>
  413864:	str	xzr, [sp, #16]
  413868:	ldur	x8, [x29, #-16]
  41386c:	ldr	x9, [sp, #16]
  413870:	mov	x10, #0x8                   	// #8
  413874:	mul	x9, x10, x9
  413878:	add	x8, x8, x9
  41387c:	ldr	x8, [x8]
  413880:	cbz	x8, 413938 <wcrtomb@plt+0x11028>
  413884:	ldur	x0, [x29, #-24]
  413888:	ldur	x8, [x29, #-16]
  41388c:	ldr	x9, [sp, #16]
  413890:	mov	x10, #0x8                   	// #8
  413894:	mul	x9, x10, x9
  413898:	add	x8, x8, x9
  41389c:	ldr	x1, [x8]
  4138a0:	bl	4027d0 <strstr@plt>
  4138a4:	cbnz	x0, 4138b8 <wcrtomb@plt+0x10fa8>
  4138a8:	ldr	x8, [sp, #16]
  4138ac:	add	x8, x8, #0x1
  4138b0:	str	x8, [sp, #16]
  4138b4:	b	413934 <wcrtomb@plt+0x11024>
  4138b8:	ldur	x8, [x29, #-16]
  4138bc:	ldr	x9, [sp, #16]
  4138c0:	mov	x10, #0x8                   	// #8
  4138c4:	mul	x9, x10, x9
  4138c8:	add	x8, x8, x9
  4138cc:	ldr	x0, [x8]
  4138d0:	bl	4026c0 <free@plt>
  4138d4:	ldr	x8, [sp, #24]
  4138d8:	subs	x8, x8, #0x1
  4138dc:	str	x8, [sp, #24]
  4138e0:	ldr	x9, [sp, #16]
  4138e4:	cmp	x8, x9
  4138e8:	b.ne	4138f0 <wcrtomb@plt+0x10fe0>  // b.any
  4138ec:	b	413938 <wcrtomb@plt+0x11028>
  4138f0:	ldur	x8, [x29, #-16]
  4138f4:	ldr	x9, [sp, #24]
  4138f8:	mov	x10, #0x8                   	// #8
  4138fc:	mul	x9, x10, x9
  413900:	add	x8, x8, x9
  413904:	ldr	x8, [x8]
  413908:	ldur	x9, [x29, #-16]
  41390c:	ldr	x11, [sp, #16]
  413910:	mul	x11, x10, x11
  413914:	add	x9, x9, x11
  413918:	str	x8, [x9]
  41391c:	ldur	x8, [x29, #-16]
  413920:	ldr	x9, [sp, #24]
  413924:	mul	x9, x10, x9
  413928:	add	x8, x8, x9
  41392c:	mov	x9, xzr
  413930:	str	x9, [x8]
  413934:	b	413868 <wcrtomb@plt+0x10f58>
  413938:	ldur	x0, [x29, #-16]
  41393c:	ldr	x8, [sp, #24]
  413940:	add	x1, x8, #0x2
  413944:	mov	x2, #0x8                   	// #8
  413948:	bl	423098 <wcrtomb@plt+0x20788>
  41394c:	stur	x0, [x29, #-16]
  413950:	ldur	x8, [x29, #-24]
  413954:	ldur	x9, [x29, #-16]
  413958:	ldr	x10, [sp, #24]
  41395c:	mov	x11, #0x8                   	// #8
  413960:	mul	x10, x11, x10
  413964:	add	x9, x9, x10
  413968:	str	x8, [x9]
  41396c:	ldur	x8, [x29, #-16]
  413970:	ldr	x9, [sp, #24]
  413974:	add	x9, x9, #0x1
  413978:	mul	x9, x11, x9
  41397c:	add	x8, x8, x9
  413980:	mov	x9, xzr
  413984:	str	x9, [x8]
  413988:	ldur	x8, [x29, #-16]
  41398c:	stur	x8, [x29, #-8]
  413990:	ldur	x0, [x29, #-8]
  413994:	ldp	x29, x30, [sp, #64]
  413998:	add	sp, sp, #0x50
  41399c:	ret
  4139a0:	sub	sp, sp, #0x40
  4139a4:	stp	x29, x30, [sp, #48]
  4139a8:	add	x29, sp, #0x30
  4139ac:	stur	x0, [x29, #-16]
  4139b0:	str	x1, [sp, #24]
  4139b4:	ldr	x0, [sp, #24]
  4139b8:	bl	4022f0 <strlen@plt>
  4139bc:	str	x0, [sp, #16]
  4139c0:	ldr	x8, [sp, #16]
  4139c4:	cbnz	x8, 4139d4 <wcrtomb@plt+0x110c4>
  4139c8:	ldur	x8, [x29, #-16]
  4139cc:	stur	x8, [x29, #-8]
  4139d0:	b	413a20 <wcrtomb@plt+0x11110>
  4139d4:	ldur	x0, [x29, #-16]
  4139d8:	bl	4022f0 <strlen@plt>
  4139dc:	str	x0, [sp, #8]
  4139e0:	ldur	x0, [x29, #-16]
  4139e4:	ldr	x8, [sp, #8]
  4139e8:	ldr	x9, [sp, #16]
  4139ec:	add	x8, x8, x9
  4139f0:	add	x1, x8, #0x1
  4139f4:	bl	4230ec <wcrtomb@plt+0x207dc>
  4139f8:	str	x0, [sp]
  4139fc:	ldr	x8, [sp]
  413a00:	ldr	x9, [sp, #8]
  413a04:	add	x0, x8, x9
  413a08:	ldr	x1, [sp, #24]
  413a0c:	ldr	x8, [sp, #16]
  413a10:	add	x2, x8, #0x1
  413a14:	bl	402290 <memcpy@plt>
  413a18:	ldr	x8, [sp]
  413a1c:	stur	x8, [x29, #-8]
  413a20:	ldur	x0, [x29, #-8]
  413a24:	ldp	x29, x30, [sp, #48]
  413a28:	add	sp, sp, #0x40
  413a2c:	ret
  413a30:	sub	sp, sp, #0x10
  413a34:	mov	w8, #0x40                  	// #64
  413a38:	str	w0, [sp, #12]
  413a3c:	str	x1, [sp]
  413a40:	ldr	x9, [sp]
  413a44:	ldr	w10, [sp, #12]
  413a48:	udiv	w10, w10, w8
  413a4c:	ldr	x9, [x9, w10, uxtw #3]
  413a50:	ldr	w10, [sp, #12]
  413a54:	udiv	w11, w10, w8
  413a58:	mul	w8, w11, w8
  413a5c:	subs	w8, w10, w8
  413a60:	mov	w12, w8
  413a64:	lsr	x9, x9, x12
  413a68:	tst	x9, #0x1
  413a6c:	cset	w8, ne  // ne = any
  413a70:	and	w0, w8, #0x1
  413a74:	add	sp, sp, #0x10
  413a78:	ret
  413a7c:	sub	sp, sp, #0x20
  413a80:	stp	x29, x30, [sp, #16]
  413a84:	add	x29, sp, #0x10
  413a88:	str	x0, [sp, #8]
  413a8c:	ldr	x0, [sp, #8]
  413a90:	bl	4026c0 <free@plt>
  413a94:	ldp	x29, x30, [sp, #16]
  413a98:	add	sp, sp, #0x20
  413a9c:	ret
  413aa0:	stp	x29, x30, [sp, #-16]!
  413aa4:	mov	x29, sp
  413aa8:	mov	x0, #0x920                 	// #2336
  413aac:	bl	423058 <wcrtomb@plt+0x20748>
  413ab0:	ldp	x29, x30, [sp], #16
  413ab4:	ret
  413ab8:	sub	sp, sp, #0x70
  413abc:	stp	x29, x30, [sp, #96]
  413ac0:	add	x29, sp, #0x60
  413ac4:	mov	x8, #0x410                 	// #1040
  413ac8:	adrp	x9, 413000 <wcrtomb@plt+0x106f0>
  413acc:	add	x9, x9, #0xd18
  413ad0:	adrp	x10, 413000 <wcrtomb@plt+0x106f0>
  413ad4:	add	x10, x10, #0xd70
  413ad8:	mov	x11, #0x504                 	// #1284
  413adc:	mov	x12, #0xffffffffffffffff    	// #-1
  413ae0:	mov	w13, #0x1                   	// #1
  413ae4:	mov	w14, #0x1                   	// #1
  413ae8:	mov	w15, wzr
  413aec:	mov	w16, #0xa                   	// #10
  413af0:	stur	x0, [x29, #-8]
  413af4:	stur	x1, [x29, #-16]
  413af8:	stur	x2, [x29, #-24]
  413afc:	stur	w3, [x29, #-28]
  413b00:	ldur	x0, [x29, #-8]
  413b04:	mov	w3, w15
  413b08:	mov	w1, w3
  413b0c:	mov	x2, x8
  413b10:	str	x9, [sp, #48]
  413b14:	str	x10, [sp, #40]
  413b18:	str	x11, [sp, #32]
  413b1c:	str	x12, [sp, #24]
  413b20:	str	w13, [sp, #20]
  413b24:	str	w14, [sp, #16]
  413b28:	str	w15, [sp, #12]
  413b2c:	str	w16, [sp, #8]
  413b30:	bl	402520 <memset@plt>
  413b34:	ldur	x8, [x29, #-16]
  413b38:	ldrb	w13, [x8]
  413b3c:	tst	w13, #0x1
  413b40:	ldr	x8, [sp, #48]
  413b44:	ldr	x9, [sp, #40]
  413b48:	csel	x10, x8, x9, ne  // ne = any
  413b4c:	ldur	x11, [x29, #-8]
  413b50:	str	x10, [x11, #1040]
  413b54:	ldur	x10, [x29, #-8]
  413b58:	add	x0, x10, #0x418
  413b5c:	ldur	x1, [x29, #-16]
  413b60:	ldr	x2, [sp, #32]
  413b64:	bl	402290 <memcpy@plt>
  413b68:	ldur	x8, [x29, #-8]
  413b6c:	ldrb	w13, [x8, #1048]
  413b70:	ldr	w14, [sp, #16]
  413b74:	eor	w13, w13, w14
  413b78:	ldur	x8, [x29, #-8]
  413b7c:	and	w13, w13, w14
  413b80:	strb	w13, [x8, #192]
  413b84:	ldur	x8, [x29, #-8]
  413b88:	ldr	x9, [sp, #24]
  413b8c:	str	x9, [x8, #24]
  413b90:	ldur	x8, [x29, #-8]
  413b94:	ldr	w13, [sp, #20]
  413b98:	strb	w13, [x8, #456]
  413b9c:	ldur	x8, [x29, #-24]
  413ba0:	tst	x8, #0x400000
  413ba4:	cset	w15, ne  // ne = any
  413ba8:	ldur	x8, [x29, #-8]
  413bac:	and	w15, w15, w14
  413bb0:	strb	w15, [x8, #457]
  413bb4:	ldur	w15, [x29, #-28]
  413bb8:	tst	w15, #0x1
  413bbc:	cset	w15, ne  // ne = any
  413bc0:	ldur	x8, [x29, #-8]
  413bc4:	and	w15, w15, w14
  413bc8:	strb	w15, [x8, #458]
  413bcc:	ldur	w15, [x29, #-28]
  413bd0:	tst	w15, #0x2
  413bd4:	ldr	w15, [sp, #12]
  413bd8:	ldr	w16, [sp, #8]
  413bdc:	csel	w17, w15, w16, ne  // ne = any
  413be0:	ldur	x8, [x29, #-8]
  413be4:	strb	w17, [x8, #459]
  413be8:	ldur	x8, [x29, #-24]
  413bec:	ldur	x10, [x29, #-8]
  413bf0:	str	x8, [x10, #448]
  413bf4:	stur	wzr, [x29, #-32]
  413bf8:	ldur	w8, [x29, #-32]
  413bfc:	cmp	w8, #0xff
  413c00:	b.gt	413d0c <wcrtomb@plt+0x113fc>
  413c04:	ldur	w8, [x29, #-32]
  413c08:	sturb	w8, [x29, #-33]
  413c0c:	ldur	x0, [x29, #-8]
  413c10:	ldurb	w1, [x29, #-33]
  413c14:	bl	413dcc <wcrtomb@plt+0x114bc>
  413c18:	ldur	x9, [x29, #-8]
  413c1c:	add	x9, x9, #0x1cc
  413c20:	ldurb	w8, [x29, #-33]
  413c24:	mov	w10, w8
  413c28:	add	x9, x9, x10
  413c2c:	strb	w0, [x9]
  413c30:	ldur	x9, [x29, #-8]
  413c34:	add	x9, x9, #0x1cc
  413c38:	ldurb	w8, [x29, #-33]
  413c3c:	mov	w10, w8
  413c40:	ldrb	w8, [x9, x10]
  413c44:	cmp	w8, #0x2
  413c48:	str	w8, [sp, #4]
  413c4c:	b.eq	413c64 <wcrtomb@plt+0x11354>  // b.none
  413c50:	b	413c54 <wcrtomb@plt+0x11344>
  413c54:	ldr	w8, [sp, #4]
  413c58:	cmp	w8, #0x4
  413c5c:	b.eq	413c78 <wcrtomb@plt+0x11368>  // b.none
  413c60:	b	413c88 <wcrtomb@plt+0x11378>
  413c64:	ldurb	w0, [x29, #-33]
  413c68:	ldur	x8, [x29, #-8]
  413c6c:	add	x1, x8, #0x3d0
  413c70:	bl	413e44 <wcrtomb@plt+0x11534>
  413c74:	b	413c88 <wcrtomb@plt+0x11378>
  413c78:	ldurb	w0, [x29, #-33]
  413c7c:	ldur	x8, [x29, #-8]
  413c80:	add	x1, x8, #0x3f0
  413c84:	bl	413e44 <wcrtomb@plt+0x11534>
  413c88:	ldur	x8, [x29, #-8]
  413c8c:	ldrb	w9, [x8, #1050]
  413c90:	tbnz	w9, #0, 413c98 <wcrtomb@plt+0x11388>
  413c94:	b	413cb4 <wcrtomb@plt+0x113a4>
  413c98:	ldurb	w8, [x29, #-33]
  413c9c:	and	w8, w8, #0xc0
  413ca0:	cmp	w8, #0x80
  413ca4:	cset	w8, ne  // ne = any
  413ca8:	and	w8, w8, #0x1
  413cac:	str	w8, [sp]
  413cb0:	b	413cd4 <wcrtomb@plt+0x113c4>
  413cb4:	ldurb	w1, [x29, #-33]
  413cb8:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  413cbc:	add	x0, x0, #0x7f2
  413cc0:	bl	4026e0 <strchr@plt>
  413cc4:	cmp	x0, #0x0
  413cc8:	cset	w8, ne  // ne = any
  413ccc:	and	w8, w8, #0x1
  413cd0:	str	w8, [sp]
  413cd4:	ldr	w8, [sp]
  413cd8:	cmp	w8, #0x0
  413cdc:	cset	w8, ne  // ne = any
  413ce0:	ldur	x9, [x29, #-8]
  413ce4:	add	x9, x9, #0x2cc
  413ce8:	ldurb	w10, [x29, #-33]
  413cec:	mov	w11, w10
  413cf0:	add	x9, x9, x11
  413cf4:	and	w8, w8, #0x1
  413cf8:	strb	w8, [x9]
  413cfc:	ldur	w8, [x29, #-32]
  413d00:	add	w8, w8, #0x1
  413d04:	stur	w8, [x29, #-32]
  413d08:	b	413bf8 <wcrtomb@plt+0x112e8>
  413d0c:	ldp	x29, x30, [sp, #96]
  413d10:	add	sp, sp, #0x70
  413d14:	ret
  413d18:	sub	sp, sp, #0x40
  413d1c:	stp	x29, x30, [sp, #48]
  413d20:	add	x29, sp, #0x30
  413d24:	stur	x0, [x29, #-8]
  413d28:	stur	x1, [x29, #-16]
  413d2c:	str	x2, [sp, #24]
  413d30:	mov	w8, #0x1                   	// #1
  413d34:	and	w9, w3, w8
  413d38:	strb	w9, [sp, #23]
  413d3c:	str	x4, [sp, #8]
  413d40:	str	x5, [sp]
  413d44:	ldur	x0, [x29, #-8]
  413d48:	ldur	x1, [x29, #-16]
  413d4c:	ldr	x2, [sp, #24]
  413d50:	ldrb	w9, [sp, #23]
  413d54:	ldr	x4, [sp, #8]
  413d58:	and	w3, w9, #0x1
  413d5c:	and	w5, w8, #0x1
  413d60:	bl	41a720 <wcrtomb@plt+0x17e10>
  413d64:	ldp	x29, x30, [sp, #48]
  413d68:	add	sp, sp, #0x40
  413d6c:	ret
  413d70:	sub	sp, sp, #0x40
  413d74:	stp	x29, x30, [sp, #48]
  413d78:	add	x29, sp, #0x30
  413d7c:	stur	x0, [x29, #-8]
  413d80:	stur	x1, [x29, #-16]
  413d84:	str	x2, [sp, #24]
  413d88:	mov	w8, #0x1                   	// #1
  413d8c:	and	w8, w3, w8
  413d90:	strb	w8, [sp, #23]
  413d94:	str	x4, [sp, #8]
  413d98:	str	x5, [sp]
  413d9c:	ldur	x0, [x29, #-8]
  413da0:	ldur	x1, [x29, #-16]
  413da4:	ldr	x2, [sp, #24]
  413da8:	ldrb	w8, [sp, #23]
  413dac:	ldr	x4, [sp, #8]
  413db0:	and	w3, w8, #0x1
  413db4:	mov	w8, wzr
  413db8:	and	w5, w8, #0x1
  413dbc:	bl	41a720 <wcrtomb@plt+0x17e10>
  413dc0:	ldp	x29, x30, [sp, #48]
  413dc4:	add	sp, sp, #0x40
  413dc8:	ret
  413dcc:	sub	sp, sp, #0x30
  413dd0:	stp	x29, x30, [sp, #32]
  413dd4:	add	x29, sp, #0x20
  413dd8:	str	x0, [sp, #16]
  413ddc:	strb	w1, [sp, #15]
  413de0:	ldrb	w8, [sp, #15]
  413de4:	ldr	x9, [sp, #16]
  413de8:	ldrb	w10, [x9, #459]
  413dec:	cmp	w8, w10
  413df0:	b.ne	413e0c <wcrtomb@plt+0x114fc>  // b.any
  413df4:	ldr	x8, [sp, #16]
  413df8:	ldrb	w9, [x8, #458]
  413dfc:	tbnz	w9, #0, 413e0c <wcrtomb@plt+0x114fc>
  413e00:	mov	w8, #0x4                   	// #4
  413e04:	stur	w8, [x29, #-4]
  413e08:	b	413e34 <wcrtomb@plt+0x11524>
  413e0c:	ldr	x0, [sp, #16]
  413e10:	ldrb	w1, [sp, #15]
  413e14:	bl	41c75c <wcrtomb@plt+0x19e4c>
  413e18:	tbnz	w0, #0, 413e20 <wcrtomb@plt+0x11510>
  413e1c:	b	413e2c <wcrtomb@plt+0x1151c>
  413e20:	mov	w8, #0x2                   	// #2
  413e24:	stur	w8, [x29, #-4]
  413e28:	b	413e34 <wcrtomb@plt+0x11524>
  413e2c:	mov	w8, #0x1                   	// #1
  413e30:	stur	w8, [x29, #-4]
  413e34:	ldur	w0, [x29, #-4]
  413e38:	ldp	x29, x30, [sp, #32]
  413e3c:	add	sp, sp, #0x30
  413e40:	ret
  413e44:	sub	sp, sp, #0x20
  413e48:	mov	x8, #0x1                   	// #1
  413e4c:	mov	w9, #0x40                  	// #64
  413e50:	str	w0, [sp, #28]
  413e54:	str	x1, [sp, #16]
  413e58:	str	x8, [sp, #8]
  413e5c:	ldr	x8, [sp, #8]
  413e60:	ldr	w10, [sp, #28]
  413e64:	udiv	w11, w10, w9
  413e68:	mul	w11, w11, w9
  413e6c:	subs	w10, w10, w11
  413e70:	mov	w12, w10
  413e74:	lsl	x8, x8, x12
  413e78:	ldr	x12, [sp, #16]
  413e7c:	ldr	w10, [sp, #28]
  413e80:	udiv	w9, w10, w9
  413e84:	mov	w13, w9
  413e88:	ubfx	x13, x13, #0, #32
  413e8c:	mov	x14, #0x8                   	// #8
  413e90:	mul	x13, x14, x13
  413e94:	add	x12, x12, x13
  413e98:	ldr	x13, [x12]
  413e9c:	orr	x8, x13, x8
  413ea0:	str	x8, [x12]
  413ea4:	add	sp, sp, #0x20
  413ea8:	ret
  413eac:	sub	sp, sp, #0x40
  413eb0:	stp	x29, x30, [sp, #48]
  413eb4:	add	x29, sp, #0x30
  413eb8:	mov	x2, #0x1c0                 	// #448
  413ebc:	mov	x8, #0xffffffffffffffff    	// #-1
  413ec0:	mov	x9, #0x250                 	// #592
  413ec4:	mov	x10, #0x504                 	// #1284
  413ec8:	stur	x0, [x29, #-8]
  413ecc:	stur	x1, [x29, #-16]
  413ed0:	ldur	x0, [x29, #-8]
  413ed4:	mov	w11, wzr
  413ed8:	mov	w1, w11
  413edc:	str	x8, [sp, #24]
  413ee0:	str	x9, [sp, #16]
  413ee4:	str	x10, [sp, #8]
  413ee8:	bl	402520 <memset@plt>
  413eec:	ldur	x8, [x29, #-8]
  413ef0:	ldr	x9, [sp, #24]
  413ef4:	str	x9, [x8, #24]
  413ef8:	ldur	x8, [x29, #-16]
  413efc:	ldrb	w11, [x8, #192]
  413f00:	ldur	x8, [x29, #-8]
  413f04:	and	w11, w11, #0x1
  413f08:	strb	w11, [x8, #192]
  413f0c:	ldur	x8, [x29, #-8]
  413f10:	add	x0, x8, #0x1c0
  413f14:	ldur	x8, [x29, #-16]
  413f18:	add	x1, x8, #0x1c0
  413f1c:	ldr	x2, [sp, #16]
  413f20:	bl	402290 <memcpy@plt>
  413f24:	ldur	x8, [x29, #-16]
  413f28:	ldr	x8, [x8, #1040]
  413f2c:	ldur	x9, [x29, #-8]
  413f30:	str	x8, [x9, #1040]
  413f34:	ldur	x8, [x29, #-8]
  413f38:	add	x0, x8, #0x418
  413f3c:	ldur	x8, [x29, #-16]
  413f40:	add	x1, x8, #0x418
  413f44:	ldr	x2, [sp, #8]
  413f48:	bl	402290 <memcpy@plt>
  413f4c:	ldp	x29, x30, [sp, #48]
  413f50:	add	sp, sp, #0x40
  413f54:	ret
  413f58:	sub	sp, sp, #0x60
  413f5c:	stp	x29, x30, [sp, #80]
  413f60:	add	x29, sp, #0x50
  413f64:	mov	x8, #0xffffffffffffffff    	// #-1
  413f68:	sub	x9, x29, #0x1c
  413f6c:	add	x2, sp, #0x28
  413f70:	stur	x0, [x29, #-8]
  413f74:	stur	w1, [x29, #-12]
  413f78:	str	xzr, [sp, #40]
  413f7c:	ldur	w1, [x29, #-12]
  413f80:	mov	x0, x9
  413f84:	str	x8, [sp, #16]
  413f88:	bl	402910 <wcrtomb@plt>
  413f8c:	str	x0, [sp, #32]
  413f90:	ldr	x8, [sp, #32]
  413f94:	ldr	x9, [sp, #16]
  413f98:	cmp	x8, x9
  413f9c:	b.eq	413fac <wcrtomb@plt+0x1169c>  // b.none
  413fa0:	ldr	x8, [sp, #32]
  413fa4:	str	w8, [sp, #28]
  413fa8:	b	413fbc <wcrtomb@plt+0x116ac>
  413fac:	mov	w8, #0x1                   	// #1
  413fb0:	str	w8, [sp, #28]
  413fb4:	mov	w8, #0x0                   	// #0
  413fb8:	sturb	w8, [x29, #-28]
  413fbc:	ldur	x0, [x29, #-8]
  413fc0:	ldurb	w8, [x29, #-28]
  413fc4:	mov	w1, w8
  413fc8:	ldr	w8, [sp, #28]
  413fcc:	mov	w9, #0x1                   	// #1
  413fd0:	mov	w10, #0x3                   	// #3
  413fd4:	cmp	w8, #0x1
  413fd8:	csel	w8, w10, w9, eq  // eq = none
  413fdc:	mov	w2, w8
  413fe0:	str	w9, [sp, #12]
  413fe4:	bl	414060 <wcrtomb@plt+0x11750>
  413fe8:	ldr	w8, [sp, #12]
  413fec:	str	w8, [sp, #24]
  413ff0:	ldr	w8, [sp, #24]
  413ff4:	ldr	w9, [sp, #28]
  413ff8:	cmp	w8, w9
  413ffc:	b.ge	414054 <wcrtomb@plt+0x11744>  // b.tcont
  414000:	ldur	x0, [x29, #-8]
  414004:	ldrsw	x8, [sp, #24]
  414008:	sub	x9, x29, #0x1c
  41400c:	ldrb	w10, [x9, x8]
  414010:	mov	w1, w10
  414014:	ldr	w10, [sp, #24]
  414018:	ldr	w11, [sp, #28]
  41401c:	subs	w11, w11, #0x1
  414020:	mov	w12, wzr
  414024:	mov	w13, #0x2                   	// #2
  414028:	cmp	w10, w11
  41402c:	csel	w10, w13, w12, eq  // eq = none
  414030:	mov	w2, w10
  414034:	bl	414060 <wcrtomb@plt+0x11750>
  414038:	ldur	x0, [x29, #-8]
  41403c:	mov	x1, #0x105                 	// #261
  414040:	bl	41051c <wcrtomb@plt+0xdc0c>
  414044:	ldr	w8, [sp, #24]
  414048:	add	w8, w8, #0x1
  41404c:	str	w8, [sp, #24]
  414050:	b	413ff0 <wcrtomb@plt+0x116e0>
  414054:	ldp	x29, x30, [sp, #80]
  414058:	add	sp, sp, #0x60
  41405c:	ret
  414060:	sub	sp, sp, #0x30
  414064:	stp	x29, x30, [sp, #32]
  414068:	add	x29, sp, #0x20
  41406c:	stur	x0, [x29, #-8]
  414070:	str	x1, [sp, #16]
  414074:	strb	w2, [sp, #15]
  414078:	ldur	x8, [x29, #-8]
  41407c:	ldr	x8, [x8, #160]
  414080:	ldur	x9, [x29, #-8]
  414084:	ldr	x9, [x9, #152]
  414088:	cmp	x8, x9
  41408c:	b.ne	4140e8 <wcrtomb@plt+0x117d8>  // b.any
  414090:	ldur	x8, [x29, #-8]
  414094:	ldr	x0, [x8, #144]
  414098:	ldur	x8, [x29, #-8]
  41409c:	add	x1, x8, #0xa0
  4140a0:	mov	x2, #0x1                   	// #1
  4140a4:	mov	x3, #0xffffffffffffffff    	// #-1
  4140a8:	mov	x4, #0x8                   	// #8
  4140ac:	bl	4141d8 <wcrtomb@plt+0x118c8>
  4140b0:	ldur	x8, [x29, #-8]
  4140b4:	str	x0, [x8, #144]
  4140b8:	ldur	x8, [x29, #-8]
  4140bc:	ldrb	w9, [x8, #1048]
  4140c0:	tbnz	w9, #0, 4140c8 <wcrtomb@plt+0x117b8>
  4140c4:	b	4140e8 <wcrtomb@plt+0x117d8>
  4140c8:	ldur	x8, [x29, #-8]
  4140cc:	ldr	x0, [x8, #280]
  4140d0:	ldur	x8, [x29, #-8]
  4140d4:	ldr	x1, [x8, #160]
  4140d8:	mov	x2, #0x1                   	// #1
  4140dc:	bl	423098 <wcrtomb@plt+0x20788>
  4140e0:	ldur	x8, [x29, #-8]
  4140e4:	str	x0, [x8, #280]
  4140e8:	ldur	x8, [x29, #-8]
  4140ec:	ldrb	w9, [x8, #1048]
  4140f0:	tbnz	w9, #0, 4140f8 <wcrtomb@plt+0x117e8>
  4140f4:	b	414114 <wcrtomb@plt+0x11804>
  4140f8:	ldrb	w8, [sp, #15]
  4140fc:	ldur	x9, [x29, #-8]
  414100:	ldr	x9, [x9, #280]
  414104:	ldur	x10, [x29, #-8]
  414108:	ldr	x10, [x10, #152]
  41410c:	add	x9, x9, x10
  414110:	strb	w8, [x9]
  414114:	ldr	x8, [sp, #16]
  414118:	ldur	x9, [x29, #-8]
  41411c:	ldr	x9, [x9, #144]
  414120:	ldur	x10, [x29, #-8]
  414124:	ldr	x11, [x10, #152]
  414128:	add	x12, x11, #0x1
  41412c:	str	x12, [x10, #152]
  414130:	str	x8, [x9, x11, lsl #3]
  414134:	ldr	x8, [sp, #16]
  414138:	subs	x8, x8, #0x100
  41413c:	cmp	x8, #0x12
  414140:	str	x8, [sp]
  414144:	b.hi	414184 <wcrtomb@plt+0x11874>  // b.pmore
  414148:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41414c:	add	x8, x8, #0x4a8
  414150:	ldr	x11, [sp]
  414154:	ldrsw	x10, [x8, x11, lsl #2]
  414158:	add	x9, x8, x10
  41415c:	br	x9
  414160:	b	4141a4 <wcrtomb@plt+0x11894>
  414164:	ldur	x8, [x29, #-8]
  414168:	ldr	x9, [x8, #136]
  41416c:	subs	x9, x9, #0x1
  414170:	str	x9, [x8, #136]
  414174:	b	4141a4 <wcrtomb@plt+0x11894>
  414178:	ldur	x8, [x29, #-8]
  41417c:	mov	w9, #0x0                   	// #0
  414180:	strb	w9, [x8, #192]
  414184:	ldur	x8, [x29, #-8]
  414188:	ldr	x9, [x8, #176]
  41418c:	add	x9, x9, #0x1
  414190:	str	x9, [x8, #176]
  414194:	ldur	x8, [x29, #-8]
  414198:	ldr	x9, [x8, #136]
  41419c:	add	x9, x9, #0x1
  4141a0:	str	x9, [x8, #136]
  4141a4:	ldur	x8, [x29, #-8]
  4141a8:	ldr	x8, [x8, #136]
  4141ac:	ldur	x9, [x29, #-8]
  4141b0:	ldr	x9, [x9, #168]
  4141b4:	cmp	x8, x9
  4141b8:	b.le	4141cc <wcrtomb@plt+0x118bc>
  4141bc:	ldur	x8, [x29, #-8]
  4141c0:	ldr	x8, [x8, #136]
  4141c4:	ldur	x9, [x29, #-8]
  4141c8:	str	x8, [x9, #168]
  4141cc:	ldp	x29, x30, [sp, #32]
  4141d0:	add	sp, sp, #0x30
  4141d4:	ret
  4141d8:	sub	sp, sp, #0x100
  4141dc:	stp	x29, x30, [sp, #240]
  4141e0:	add	x29, sp, #0xf0
  4141e4:	stur	x0, [x29, #-8]
  4141e8:	stur	x1, [x29, #-16]
  4141ec:	stur	x2, [x29, #-24]
  4141f0:	stur	x3, [x29, #-32]
  4141f4:	stur	x4, [x29, #-40]
  4141f8:	ldur	x8, [x29, #-16]
  4141fc:	ldr	x8, [x8]
  414200:	stur	x8, [x29, #-48]
  414204:	ldur	x8, [x29, #-48]
  414208:	adds	x8, x8, x8, asr #1
  41420c:	stur	x8, [x29, #-56]
  414210:	b.vc	414224 <wcrtomb@plt+0x11914>
  414214:	b	414218 <wcrtomb@plt+0x11908>
  414218:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41421c:	stur	x8, [x29, #-56]
  414220:	b	414224 <wcrtomb@plt+0x11914>
  414224:	ldur	x8, [x29, #-32]
  414228:	tbnz	x8, #63, 414250 <wcrtomb@plt+0x11940>
  41422c:	b	414230 <wcrtomb@plt+0x11920>
  414230:	ldur	x8, [x29, #-32]
  414234:	ldur	x9, [x29, #-56]
  414238:	subs	x8, x8, x9
  41423c:	b.ge	414250 <wcrtomb@plt+0x11940>  // b.tcont
  414240:	b	414244 <wcrtomb@plt+0x11934>
  414244:	ldur	x8, [x29, #-32]
  414248:	stur	x8, [x29, #-56]
  41424c:	b	414250 <wcrtomb@plt+0x11940>
  414250:	mov	w8, #0x1                   	// #1
  414254:	cbnz	w8, 4146f8 <wcrtomb@plt+0x11de8>
  414258:	b	41425c <wcrtomb@plt+0x1194c>
  41425c:	mov	w8, wzr
  414260:	cbnz	w8, 4144c4 <wcrtomb@plt+0x11bb4>
  414264:	b	414268 <wcrtomb@plt+0x11958>
  414268:	ldur	x8, [x29, #-40]
  41426c:	tbz	x8, #63, 4143b4 <wcrtomb@plt+0x11aa4>
  414270:	b	414274 <wcrtomb@plt+0x11964>
  414274:	ldur	x8, [x29, #-56]
  414278:	tbz	x8, #63, 414320 <wcrtomb@plt+0x11a10>
  41427c:	b	414280 <wcrtomb@plt+0x11970>
  414280:	mov	w8, wzr
  414284:	cbnz	w8, 4142ac <wcrtomb@plt+0x1199c>
  414288:	b	41428c <wcrtomb@plt+0x1197c>
  41428c:	ldur	x8, [x29, #-56]
  414290:	ldur	x9, [x29, #-40]
  414294:	mov	w10, #0x7f                  	// #127
  414298:	mov	w11, w10
  41429c:	sdiv	x9, x11, x9
  4142a0:	subs	x8, x8, x9
  4142a4:	b.lt	41447c <wcrtomb@plt+0x11b6c>  // b.tstop
  4142a8:	b	4144a0 <wcrtomb@plt+0x11b90>
  4142ac:	mov	w8, wzr
  4142b0:	cbnz	w8, 4142cc <wcrtomb@plt+0x119bc>
  4142b4:	b	4142b8 <wcrtomb@plt+0x119a8>
  4142b8:	ldur	x8, [x29, #-40]
  4142bc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4142c0:	subs	x8, x8, x9
  4142c4:	b.eq	4142dc <wcrtomb@plt+0x119cc>  // b.none
  4142c8:	b	4142e8 <wcrtomb@plt+0x119d8>
  4142cc:	ldur	x8, [x29, #-40]
  4142d0:	subs	x8, x8, #0x1
  4142d4:	b.lt	4142e8 <wcrtomb@plt+0x119d8>  // b.tstop
  4142d8:	b	4142dc <wcrtomb@plt+0x119cc>
  4142dc:	mov	x0, xzr
  4142e0:	stur	x0, [x29, #-80]
  4142e4:	b	414308 <wcrtomb@plt+0x119f8>
  4142e8:	ldur	x8, [x29, #-40]
  4142ec:	mov	x9, xzr
  4142f0:	subs	x8, x9, x8
  4142f4:	mov	w10, #0x7f                  	// #127
  4142f8:	mov	w9, w10
  4142fc:	sdiv	x8, x9, x8
  414300:	stur	x8, [x29, #-80]
  414304:	b	414308 <wcrtomb@plt+0x119f8>
  414308:	ldur	x8, [x29, #-80]
  41430c:	ldur	x9, [x29, #-56]
  414310:	mvn	x9, x9
  414314:	subs	x8, x8, x9
  414318:	b.le	41447c <wcrtomb@plt+0x11b6c>
  41431c:	b	4144a0 <wcrtomb@plt+0x11b90>
  414320:	mov	w8, wzr
  414324:	cbnz	w8, 414338 <wcrtomb@plt+0x11a28>
  414328:	b	41432c <wcrtomb@plt+0x11a1c>
  41432c:	mov	w8, wzr
  414330:	cbnz	w8, 414344 <wcrtomb@plt+0x11a34>
  414334:	b	414398 <wcrtomb@plt+0x11a88>
  414338:	mov	w8, #0x1                   	// #1
  41433c:	cbnz	w8, 414398 <wcrtomb@plt+0x11a88>
  414340:	b	414344 <wcrtomb@plt+0x11a34>
  414344:	ldur	x8, [x29, #-40]
  414348:	adds	x8, x8, #0x1
  41434c:	b.ne	414398 <wcrtomb@plt+0x11a88>  // b.any
  414350:	b	414354 <wcrtomb@plt+0x11a44>
  414354:	mov	w8, wzr
  414358:	cbnz	w8, 414374 <wcrtomb@plt+0x11a64>
  41435c:	b	414360 <wcrtomb@plt+0x11a50>
  414360:	ldur	x8, [x29, #-56]
  414364:	subs	x8, x8, #0x80
  414368:	subs	x8, x8, #0x0
  41436c:	b.gt	41447c <wcrtomb@plt+0x11b6c>
  414370:	b	4144a0 <wcrtomb@plt+0x11b90>
  414374:	ldur	x8, [x29, #-56]
  414378:	subs	x8, x8, #0x1
  41437c:	b.lt	4144a0 <wcrtomb@plt+0x11b90>  // b.tstop
  414380:	b	414384 <wcrtomb@plt+0x11a74>
  414384:	ldur	x8, [x29, #-56]
  414388:	subs	x8, x8, #0x1
  41438c:	subs	x8, x8, #0x7f
  414390:	b.gt	41447c <wcrtomb@plt+0x11b6c>
  414394:	b	4144a0 <wcrtomb@plt+0x11b90>
  414398:	ldur	x8, [x29, #-40]
  41439c:	mov	x9, #0xffffffffffffff80    	// #-128
  4143a0:	sdiv	x8, x9, x8
  4143a4:	ldur	x9, [x29, #-56]
  4143a8:	subs	x8, x8, x9
  4143ac:	b.lt	41447c <wcrtomb@plt+0x11b6c>  // b.tstop
  4143b0:	b	4144a0 <wcrtomb@plt+0x11b90>
  4143b4:	ldur	x8, [x29, #-40]
  4143b8:	cbnz	x8, 4143cc <wcrtomb@plt+0x11abc>
  4143bc:	b	4143c0 <wcrtomb@plt+0x11ab0>
  4143c0:	mov	w8, wzr
  4143c4:	cbnz	w8, 41447c <wcrtomb@plt+0x11b6c>
  4143c8:	b	4144a0 <wcrtomb@plt+0x11b90>
  4143cc:	ldur	x8, [x29, #-56]
  4143d0:	tbz	x8, #63, 41445c <wcrtomb@plt+0x11b4c>
  4143d4:	b	4143d8 <wcrtomb@plt+0x11ac8>
  4143d8:	mov	w8, wzr
  4143dc:	cbnz	w8, 4143f0 <wcrtomb@plt+0x11ae0>
  4143e0:	b	4143e4 <wcrtomb@plt+0x11ad4>
  4143e4:	mov	w8, wzr
  4143e8:	cbnz	w8, 4143fc <wcrtomb@plt+0x11aec>
  4143ec:	b	414440 <wcrtomb@plt+0x11b30>
  4143f0:	mov	w8, #0x1                   	// #1
  4143f4:	cbnz	w8, 414440 <wcrtomb@plt+0x11b30>
  4143f8:	b	4143fc <wcrtomb@plt+0x11aec>
  4143fc:	ldur	x8, [x29, #-56]
  414400:	adds	x8, x8, #0x1
  414404:	b.ne	414440 <wcrtomb@plt+0x11b30>  // b.any
  414408:	b	41440c <wcrtomb@plt+0x11afc>
  41440c:	mov	w8, wzr
  414410:	cbnz	w8, 41442c <wcrtomb@plt+0x11b1c>
  414414:	b	414418 <wcrtomb@plt+0x11b08>
  414418:	ldur	x8, [x29, #-40]
  41441c:	subs	x8, x8, #0x80
  414420:	subs	x8, x8, #0x0
  414424:	b.gt	41447c <wcrtomb@plt+0x11b6c>
  414428:	b	4144a0 <wcrtomb@plt+0x11b90>
  41442c:	ldur	x8, [x29, #-40]
  414430:	subs	x8, x8, #0x1
  414434:	subs	x8, x8, #0x7f
  414438:	b.gt	41447c <wcrtomb@plt+0x11b6c>
  41443c:	b	4144a0 <wcrtomb@plt+0x11b90>
  414440:	ldur	x8, [x29, #-56]
  414444:	mov	x9, #0xffffffffffffff80    	// #-128
  414448:	sdiv	x8, x9, x8
  41444c:	ldur	x9, [x29, #-40]
  414450:	subs	x8, x8, x9
  414454:	b.lt	41447c <wcrtomb@plt+0x11b6c>  // b.tstop
  414458:	b	4144a0 <wcrtomb@plt+0x11b90>
  41445c:	ldur	x8, [x29, #-40]
  414460:	mov	w9, #0x7f                  	// #127
  414464:	mov	w10, w9
  414468:	sdiv	x8, x10, x8
  41446c:	ldur	x10, [x29, #-56]
  414470:	subs	x8, x8, x10
  414474:	b.ge	4144a0 <wcrtomb@plt+0x11b90>  // b.tcont
  414478:	b	41447c <wcrtomb@plt+0x11b6c>
  41447c:	ldur	w8, [x29, #-56]
  414480:	ldur	w9, [x29, #-40]
  414484:	mul	w8, w8, w9
  414488:	mov	w0, w8
  41448c:	sxtb	x10, w0
  414490:	stur	x10, [x29, #-64]
  414494:	mov	w8, #0x1                   	// #1
  414498:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  41449c:	b	4158c4 <wcrtomb@plt+0x12fb4>
  4144a0:	ldur	w8, [x29, #-56]
  4144a4:	ldur	w9, [x29, #-40]
  4144a8:	mul	w8, w8, w9
  4144ac:	mov	w0, w8
  4144b0:	sxtb	x10, w0
  4144b4:	stur	x10, [x29, #-64]
  4144b8:	mov	w8, wzr
  4144bc:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  4144c0:	b	4158c4 <wcrtomb@plt+0x12fb4>
  4144c4:	ldur	x8, [x29, #-40]
  4144c8:	tbz	x8, #63, 4145fc <wcrtomb@plt+0x11cec>
  4144cc:	b	4144d0 <wcrtomb@plt+0x11bc0>
  4144d0:	ldur	x8, [x29, #-56]
  4144d4:	tbz	x8, #63, 41457c <wcrtomb@plt+0x11c6c>
  4144d8:	b	4144dc <wcrtomb@plt+0x11bcc>
  4144dc:	mov	w8, wzr
  4144e0:	cbnz	w8, 414508 <wcrtomb@plt+0x11bf8>
  4144e4:	b	4144e8 <wcrtomb@plt+0x11bd8>
  4144e8:	ldur	x8, [x29, #-56]
  4144ec:	ldur	x9, [x29, #-40]
  4144f0:	mov	w10, #0xff                  	// #255
  4144f4:	mov	w11, w10
  4144f8:	sdiv	x9, x11, x9
  4144fc:	subs	x8, x8, x9
  414500:	b.lt	4146b0 <wcrtomb@plt+0x11da0>  // b.tstop
  414504:	b	4146d4 <wcrtomb@plt+0x11dc4>
  414508:	mov	w8, wzr
  41450c:	cbnz	w8, 414528 <wcrtomb@plt+0x11c18>
  414510:	b	414514 <wcrtomb@plt+0x11c04>
  414514:	ldur	x8, [x29, #-40]
  414518:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41451c:	subs	x8, x8, x9
  414520:	b.eq	414538 <wcrtomb@plt+0x11c28>  // b.none
  414524:	b	414544 <wcrtomb@plt+0x11c34>
  414528:	ldur	x8, [x29, #-40]
  41452c:	subs	x8, x8, #0x1
  414530:	b.lt	414544 <wcrtomb@plt+0x11c34>  // b.tstop
  414534:	b	414538 <wcrtomb@plt+0x11c28>
  414538:	mov	x0, xzr
  41453c:	stur	x0, [x29, #-88]
  414540:	b	414564 <wcrtomb@plt+0x11c54>
  414544:	ldur	x8, [x29, #-40]
  414548:	mov	x9, xzr
  41454c:	subs	x8, x9, x8
  414550:	mov	w10, #0xff                  	// #255
  414554:	mov	w9, w10
  414558:	sdiv	x8, x9, x8
  41455c:	stur	x8, [x29, #-88]
  414560:	b	414564 <wcrtomb@plt+0x11c54>
  414564:	ldur	x8, [x29, #-88]
  414568:	ldur	x9, [x29, #-56]
  41456c:	mvn	x9, x9
  414570:	subs	x8, x8, x9
  414574:	b.le	4146b0 <wcrtomb@plt+0x11da0>
  414578:	b	4146d4 <wcrtomb@plt+0x11dc4>
  41457c:	mov	w8, wzr
  414580:	cbnz	w8, 414594 <wcrtomb@plt+0x11c84>
  414584:	b	414588 <wcrtomb@plt+0x11c78>
  414588:	mov	w8, wzr
  41458c:	cbnz	w8, 4145a0 <wcrtomb@plt+0x11c90>
  414590:	b	4145ec <wcrtomb@plt+0x11cdc>
  414594:	mov	w8, #0x1                   	// #1
  414598:	cbnz	w8, 4145ec <wcrtomb@plt+0x11cdc>
  41459c:	b	4145a0 <wcrtomb@plt+0x11c90>
  4145a0:	ldur	x8, [x29, #-40]
  4145a4:	adds	x8, x8, #0x1
  4145a8:	b.ne	4145ec <wcrtomb@plt+0x11cdc>  // b.any
  4145ac:	b	4145b0 <wcrtomb@plt+0x11ca0>
  4145b0:	mov	w8, wzr
  4145b4:	cbnz	w8, 4145cc <wcrtomb@plt+0x11cbc>
  4145b8:	b	4145bc <wcrtomb@plt+0x11cac>
  4145bc:	ldur	x8, [x29, #-56]
  4145c0:	subs	x8, x8, #0x0
  4145c4:	b.gt	4146b0 <wcrtomb@plt+0x11da0>
  4145c8:	b	4146d4 <wcrtomb@plt+0x11dc4>
  4145cc:	ldur	x8, [x29, #-56]
  4145d0:	subs	x8, x8, #0x1
  4145d4:	b.lt	4146d4 <wcrtomb@plt+0x11dc4>  // b.tstop
  4145d8:	b	4145dc <wcrtomb@plt+0x11ccc>
  4145dc:	ldur	x8, [x29, #-56]
  4145e0:	subs	x8, x8, #0x1
  4145e4:	tbz	x8, #63, 4146b0 <wcrtomb@plt+0x11da0>
  4145e8:	b	4146d4 <wcrtomb@plt+0x11dc4>
  4145ec:	ldur	x8, [x29, #-56]
  4145f0:	subs	x8, x8, #0x0
  4145f4:	b.gt	4146b0 <wcrtomb@plt+0x11da0>
  4145f8:	b	4146d4 <wcrtomb@plt+0x11dc4>
  4145fc:	ldur	x8, [x29, #-40]
  414600:	cbnz	x8, 414614 <wcrtomb@plt+0x11d04>
  414604:	b	414608 <wcrtomb@plt+0x11cf8>
  414608:	mov	w8, wzr
  41460c:	cbnz	w8, 4146b0 <wcrtomb@plt+0x11da0>
  414610:	b	4146d4 <wcrtomb@plt+0x11dc4>
  414614:	ldur	x8, [x29, #-56]
  414618:	tbz	x8, #63, 414690 <wcrtomb@plt+0x11d80>
  41461c:	b	414620 <wcrtomb@plt+0x11d10>
  414620:	mov	w8, wzr
  414624:	cbnz	w8, 414638 <wcrtomb@plt+0x11d28>
  414628:	b	41462c <wcrtomb@plt+0x11d1c>
  41462c:	mov	w8, wzr
  414630:	cbnz	w8, 414644 <wcrtomb@plt+0x11d34>
  414634:	b	414680 <wcrtomb@plt+0x11d70>
  414638:	mov	w8, #0x1                   	// #1
  41463c:	cbnz	w8, 414680 <wcrtomb@plt+0x11d70>
  414640:	b	414644 <wcrtomb@plt+0x11d34>
  414644:	ldur	x8, [x29, #-56]
  414648:	adds	x8, x8, #0x1
  41464c:	b.ne	414680 <wcrtomb@plt+0x11d70>  // b.any
  414650:	b	414654 <wcrtomb@plt+0x11d44>
  414654:	mov	w8, wzr
  414658:	cbnz	w8, 414670 <wcrtomb@plt+0x11d60>
  41465c:	b	414660 <wcrtomb@plt+0x11d50>
  414660:	ldur	x8, [x29, #-40]
  414664:	subs	x8, x8, #0x0
  414668:	b.gt	4146b0 <wcrtomb@plt+0x11da0>
  41466c:	b	4146d4 <wcrtomb@plt+0x11dc4>
  414670:	ldur	x8, [x29, #-40]
  414674:	subs	x8, x8, #0x1
  414678:	tbz	x8, #63, 4146b0 <wcrtomb@plt+0x11da0>
  41467c:	b	4146d4 <wcrtomb@plt+0x11dc4>
  414680:	ldur	x8, [x29, #-40]
  414684:	subs	x8, x8, #0x0
  414688:	b.gt	4146b0 <wcrtomb@plt+0x11da0>
  41468c:	b	4146d4 <wcrtomb@plt+0x11dc4>
  414690:	ldur	x8, [x29, #-40]
  414694:	mov	w9, #0xff                  	// #255
  414698:	mov	w10, w9
  41469c:	sdiv	x8, x10, x8
  4146a0:	ldur	x10, [x29, #-56]
  4146a4:	subs	x8, x8, x10
  4146a8:	b.ge	4146d4 <wcrtomb@plt+0x11dc4>  // b.tcont
  4146ac:	b	4146b0 <wcrtomb@plt+0x11da0>
  4146b0:	ldur	w8, [x29, #-56]
  4146b4:	ldur	w9, [x29, #-40]
  4146b8:	mul	w8, w8, w9
  4146bc:	mov	w0, w8
  4146c0:	and	x10, x0, #0xff
  4146c4:	stur	x10, [x29, #-64]
  4146c8:	mov	w8, #0x1                   	// #1
  4146cc:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  4146d0:	b	4158c4 <wcrtomb@plt+0x12fb4>
  4146d4:	ldur	w8, [x29, #-56]
  4146d8:	ldur	w9, [x29, #-40]
  4146dc:	mul	w8, w8, w9
  4146e0:	mov	w0, w8
  4146e4:	and	x10, x0, #0xff
  4146e8:	stur	x10, [x29, #-64]
  4146ec:	mov	w8, wzr
  4146f0:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  4146f4:	b	4158c4 <wcrtomb@plt+0x12fb4>
  4146f8:	mov	w8, #0x1                   	// #1
  4146fc:	cbnz	w8, 414ba0 <wcrtomb@plt+0x12290>
  414700:	b	414704 <wcrtomb@plt+0x11df4>
  414704:	mov	w8, wzr
  414708:	cbnz	w8, 41496c <wcrtomb@plt+0x1205c>
  41470c:	b	414710 <wcrtomb@plt+0x11e00>
  414710:	ldur	x8, [x29, #-40]
  414714:	tbz	x8, #63, 41485c <wcrtomb@plt+0x11f4c>
  414718:	b	41471c <wcrtomb@plt+0x11e0c>
  41471c:	ldur	x8, [x29, #-56]
  414720:	tbz	x8, #63, 4147c8 <wcrtomb@plt+0x11eb8>
  414724:	b	414728 <wcrtomb@plt+0x11e18>
  414728:	mov	w8, wzr
  41472c:	cbnz	w8, 414754 <wcrtomb@plt+0x11e44>
  414730:	b	414734 <wcrtomb@plt+0x11e24>
  414734:	ldur	x8, [x29, #-56]
  414738:	ldur	x9, [x29, #-40]
  41473c:	mov	w10, #0x7fff                	// #32767
  414740:	mov	w11, w10
  414744:	sdiv	x9, x11, x9
  414748:	subs	x8, x8, x9
  41474c:	b.lt	414924 <wcrtomb@plt+0x12014>  // b.tstop
  414750:	b	414948 <wcrtomb@plt+0x12038>
  414754:	mov	w8, wzr
  414758:	cbnz	w8, 414774 <wcrtomb@plt+0x11e64>
  41475c:	b	414760 <wcrtomb@plt+0x11e50>
  414760:	ldur	x8, [x29, #-40]
  414764:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414768:	subs	x8, x8, x9
  41476c:	b.eq	414784 <wcrtomb@plt+0x11e74>  // b.none
  414770:	b	414790 <wcrtomb@plt+0x11e80>
  414774:	ldur	x8, [x29, #-40]
  414778:	subs	x8, x8, #0x1
  41477c:	b.lt	414790 <wcrtomb@plt+0x11e80>  // b.tstop
  414780:	b	414784 <wcrtomb@plt+0x11e74>
  414784:	mov	x0, xzr
  414788:	stur	x0, [x29, #-96]
  41478c:	b	4147b0 <wcrtomb@plt+0x11ea0>
  414790:	ldur	x8, [x29, #-40]
  414794:	mov	x9, xzr
  414798:	subs	x8, x9, x8
  41479c:	mov	w10, #0x7fff                	// #32767
  4147a0:	mov	w9, w10
  4147a4:	sdiv	x8, x9, x8
  4147a8:	stur	x8, [x29, #-96]
  4147ac:	b	4147b0 <wcrtomb@plt+0x11ea0>
  4147b0:	ldur	x8, [x29, #-96]
  4147b4:	ldur	x9, [x29, #-56]
  4147b8:	mvn	x9, x9
  4147bc:	subs	x8, x8, x9
  4147c0:	b.le	414924 <wcrtomb@plt+0x12014>
  4147c4:	b	414948 <wcrtomb@plt+0x12038>
  4147c8:	mov	w8, wzr
  4147cc:	cbnz	w8, 4147e0 <wcrtomb@plt+0x11ed0>
  4147d0:	b	4147d4 <wcrtomb@plt+0x11ec4>
  4147d4:	mov	w8, wzr
  4147d8:	cbnz	w8, 4147ec <wcrtomb@plt+0x11edc>
  4147dc:	b	414840 <wcrtomb@plt+0x11f30>
  4147e0:	mov	w8, #0x1                   	// #1
  4147e4:	cbnz	w8, 414840 <wcrtomb@plt+0x11f30>
  4147e8:	b	4147ec <wcrtomb@plt+0x11edc>
  4147ec:	ldur	x8, [x29, #-40]
  4147f0:	adds	x8, x8, #0x1
  4147f4:	b.ne	414840 <wcrtomb@plt+0x11f30>  // b.any
  4147f8:	b	4147fc <wcrtomb@plt+0x11eec>
  4147fc:	mov	w8, wzr
  414800:	cbnz	w8, 41481c <wcrtomb@plt+0x11f0c>
  414804:	b	414808 <wcrtomb@plt+0x11ef8>
  414808:	ldur	x8, [x29, #-56]
  41480c:	subs	x8, x8, #0x8, lsl #12
  414810:	subs	x8, x8, #0x0
  414814:	b.gt	414924 <wcrtomb@plt+0x12014>
  414818:	b	414948 <wcrtomb@plt+0x12038>
  41481c:	ldur	x8, [x29, #-56]
  414820:	subs	x8, x8, #0x1
  414824:	b.lt	414948 <wcrtomb@plt+0x12038>  // b.tstop
  414828:	b	41482c <wcrtomb@plt+0x11f1c>
  41482c:	ldur	x8, [x29, #-56]
  414830:	subs	x8, x8, #0x1
  414834:	subs	x8, x8, #0x8, lsl #12
  414838:	b.ge	414924 <wcrtomb@plt+0x12014>  // b.tcont
  41483c:	b	414948 <wcrtomb@plt+0x12038>
  414840:	ldur	x8, [x29, #-40]
  414844:	mov	x9, #0xffffffffffff8000    	// #-32768
  414848:	sdiv	x8, x9, x8
  41484c:	ldur	x9, [x29, #-56]
  414850:	subs	x8, x8, x9
  414854:	b.lt	414924 <wcrtomb@plt+0x12014>  // b.tstop
  414858:	b	414948 <wcrtomb@plt+0x12038>
  41485c:	ldur	x8, [x29, #-40]
  414860:	cbnz	x8, 414874 <wcrtomb@plt+0x11f64>
  414864:	b	414868 <wcrtomb@plt+0x11f58>
  414868:	mov	w8, wzr
  41486c:	cbnz	w8, 414924 <wcrtomb@plt+0x12014>
  414870:	b	414948 <wcrtomb@plt+0x12038>
  414874:	ldur	x8, [x29, #-56]
  414878:	tbz	x8, #63, 414904 <wcrtomb@plt+0x11ff4>
  41487c:	b	414880 <wcrtomb@plt+0x11f70>
  414880:	mov	w8, wzr
  414884:	cbnz	w8, 414898 <wcrtomb@plt+0x11f88>
  414888:	b	41488c <wcrtomb@plt+0x11f7c>
  41488c:	mov	w8, wzr
  414890:	cbnz	w8, 4148a4 <wcrtomb@plt+0x11f94>
  414894:	b	4148e8 <wcrtomb@plt+0x11fd8>
  414898:	mov	w8, #0x1                   	// #1
  41489c:	cbnz	w8, 4148e8 <wcrtomb@plt+0x11fd8>
  4148a0:	b	4148a4 <wcrtomb@plt+0x11f94>
  4148a4:	ldur	x8, [x29, #-56]
  4148a8:	adds	x8, x8, #0x1
  4148ac:	b.ne	4148e8 <wcrtomb@plt+0x11fd8>  // b.any
  4148b0:	b	4148b4 <wcrtomb@plt+0x11fa4>
  4148b4:	mov	w8, wzr
  4148b8:	cbnz	w8, 4148d4 <wcrtomb@plt+0x11fc4>
  4148bc:	b	4148c0 <wcrtomb@plt+0x11fb0>
  4148c0:	ldur	x8, [x29, #-40]
  4148c4:	subs	x8, x8, #0x8, lsl #12
  4148c8:	subs	x8, x8, #0x0
  4148cc:	b.gt	414924 <wcrtomb@plt+0x12014>
  4148d0:	b	414948 <wcrtomb@plt+0x12038>
  4148d4:	ldur	x8, [x29, #-40]
  4148d8:	subs	x8, x8, #0x1
  4148dc:	subs	x8, x8, #0x8, lsl #12
  4148e0:	b.ge	414924 <wcrtomb@plt+0x12014>  // b.tcont
  4148e4:	b	414948 <wcrtomb@plt+0x12038>
  4148e8:	ldur	x8, [x29, #-56]
  4148ec:	mov	x9, #0xffffffffffff8000    	// #-32768
  4148f0:	sdiv	x8, x9, x8
  4148f4:	ldur	x9, [x29, #-40]
  4148f8:	subs	x8, x8, x9
  4148fc:	b.lt	414924 <wcrtomb@plt+0x12014>  // b.tstop
  414900:	b	414948 <wcrtomb@plt+0x12038>
  414904:	ldur	x8, [x29, #-40]
  414908:	mov	w9, #0x7fff                	// #32767
  41490c:	mov	w10, w9
  414910:	sdiv	x8, x10, x8
  414914:	ldur	x10, [x29, #-56]
  414918:	subs	x8, x8, x10
  41491c:	b.ge	414948 <wcrtomb@plt+0x12038>  // b.tcont
  414920:	b	414924 <wcrtomb@plt+0x12014>
  414924:	ldur	w8, [x29, #-56]
  414928:	ldur	w9, [x29, #-40]
  41492c:	mul	w8, w8, w9
  414930:	mov	w0, w8
  414934:	sxth	x10, w0
  414938:	stur	x10, [x29, #-64]
  41493c:	mov	w8, #0x1                   	// #1
  414940:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  414944:	b	4158c4 <wcrtomb@plt+0x12fb4>
  414948:	ldur	w8, [x29, #-56]
  41494c:	ldur	w9, [x29, #-40]
  414950:	mul	w8, w8, w9
  414954:	mov	w0, w8
  414958:	sxth	x10, w0
  41495c:	stur	x10, [x29, #-64]
  414960:	mov	w8, wzr
  414964:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  414968:	b	4158c4 <wcrtomb@plt+0x12fb4>
  41496c:	ldur	x8, [x29, #-40]
  414970:	tbz	x8, #63, 414aa4 <wcrtomb@plt+0x12194>
  414974:	b	414978 <wcrtomb@plt+0x12068>
  414978:	ldur	x8, [x29, #-56]
  41497c:	tbz	x8, #63, 414a24 <wcrtomb@plt+0x12114>
  414980:	b	414984 <wcrtomb@plt+0x12074>
  414984:	mov	w8, wzr
  414988:	cbnz	w8, 4149b0 <wcrtomb@plt+0x120a0>
  41498c:	b	414990 <wcrtomb@plt+0x12080>
  414990:	ldur	x8, [x29, #-56]
  414994:	ldur	x9, [x29, #-40]
  414998:	mov	w10, #0xffff                	// #65535
  41499c:	mov	w11, w10
  4149a0:	sdiv	x9, x11, x9
  4149a4:	subs	x8, x8, x9
  4149a8:	b.lt	414b58 <wcrtomb@plt+0x12248>  // b.tstop
  4149ac:	b	414b7c <wcrtomb@plt+0x1226c>
  4149b0:	mov	w8, wzr
  4149b4:	cbnz	w8, 4149d0 <wcrtomb@plt+0x120c0>
  4149b8:	b	4149bc <wcrtomb@plt+0x120ac>
  4149bc:	ldur	x8, [x29, #-40]
  4149c0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4149c4:	subs	x8, x8, x9
  4149c8:	b.eq	4149e0 <wcrtomb@plt+0x120d0>  // b.none
  4149cc:	b	4149ec <wcrtomb@plt+0x120dc>
  4149d0:	ldur	x8, [x29, #-40]
  4149d4:	subs	x8, x8, #0x1
  4149d8:	b.lt	4149ec <wcrtomb@plt+0x120dc>  // b.tstop
  4149dc:	b	4149e0 <wcrtomb@plt+0x120d0>
  4149e0:	mov	x0, xzr
  4149e4:	stur	x0, [x29, #-104]
  4149e8:	b	414a0c <wcrtomb@plt+0x120fc>
  4149ec:	ldur	x8, [x29, #-40]
  4149f0:	mov	x9, xzr
  4149f4:	subs	x8, x9, x8
  4149f8:	mov	w10, #0xffff                	// #65535
  4149fc:	mov	w9, w10
  414a00:	sdiv	x8, x9, x8
  414a04:	stur	x8, [x29, #-104]
  414a08:	b	414a0c <wcrtomb@plt+0x120fc>
  414a0c:	ldur	x8, [x29, #-104]
  414a10:	ldur	x9, [x29, #-56]
  414a14:	mvn	x9, x9
  414a18:	subs	x8, x8, x9
  414a1c:	b.le	414b58 <wcrtomb@plt+0x12248>
  414a20:	b	414b7c <wcrtomb@plt+0x1226c>
  414a24:	mov	w8, wzr
  414a28:	cbnz	w8, 414a3c <wcrtomb@plt+0x1212c>
  414a2c:	b	414a30 <wcrtomb@plt+0x12120>
  414a30:	mov	w8, wzr
  414a34:	cbnz	w8, 414a48 <wcrtomb@plt+0x12138>
  414a38:	b	414a94 <wcrtomb@plt+0x12184>
  414a3c:	mov	w8, #0x1                   	// #1
  414a40:	cbnz	w8, 414a94 <wcrtomb@plt+0x12184>
  414a44:	b	414a48 <wcrtomb@plt+0x12138>
  414a48:	ldur	x8, [x29, #-40]
  414a4c:	adds	x8, x8, #0x1
  414a50:	b.ne	414a94 <wcrtomb@plt+0x12184>  // b.any
  414a54:	b	414a58 <wcrtomb@plt+0x12148>
  414a58:	mov	w8, wzr
  414a5c:	cbnz	w8, 414a74 <wcrtomb@plt+0x12164>
  414a60:	b	414a64 <wcrtomb@plt+0x12154>
  414a64:	ldur	x8, [x29, #-56]
  414a68:	subs	x8, x8, #0x0
  414a6c:	b.gt	414b58 <wcrtomb@plt+0x12248>
  414a70:	b	414b7c <wcrtomb@plt+0x1226c>
  414a74:	ldur	x8, [x29, #-56]
  414a78:	subs	x8, x8, #0x1
  414a7c:	b.lt	414b7c <wcrtomb@plt+0x1226c>  // b.tstop
  414a80:	b	414a84 <wcrtomb@plt+0x12174>
  414a84:	ldur	x8, [x29, #-56]
  414a88:	subs	x8, x8, #0x1
  414a8c:	tbz	x8, #63, 414b58 <wcrtomb@plt+0x12248>
  414a90:	b	414b7c <wcrtomb@plt+0x1226c>
  414a94:	ldur	x8, [x29, #-56]
  414a98:	subs	x8, x8, #0x0
  414a9c:	b.gt	414b58 <wcrtomb@plt+0x12248>
  414aa0:	b	414b7c <wcrtomb@plt+0x1226c>
  414aa4:	ldur	x8, [x29, #-40]
  414aa8:	cbnz	x8, 414abc <wcrtomb@plt+0x121ac>
  414aac:	b	414ab0 <wcrtomb@plt+0x121a0>
  414ab0:	mov	w8, wzr
  414ab4:	cbnz	w8, 414b58 <wcrtomb@plt+0x12248>
  414ab8:	b	414b7c <wcrtomb@plt+0x1226c>
  414abc:	ldur	x8, [x29, #-56]
  414ac0:	tbz	x8, #63, 414b38 <wcrtomb@plt+0x12228>
  414ac4:	b	414ac8 <wcrtomb@plt+0x121b8>
  414ac8:	mov	w8, wzr
  414acc:	cbnz	w8, 414ae0 <wcrtomb@plt+0x121d0>
  414ad0:	b	414ad4 <wcrtomb@plt+0x121c4>
  414ad4:	mov	w8, wzr
  414ad8:	cbnz	w8, 414aec <wcrtomb@plt+0x121dc>
  414adc:	b	414b28 <wcrtomb@plt+0x12218>
  414ae0:	mov	w8, #0x1                   	// #1
  414ae4:	cbnz	w8, 414b28 <wcrtomb@plt+0x12218>
  414ae8:	b	414aec <wcrtomb@plt+0x121dc>
  414aec:	ldur	x8, [x29, #-56]
  414af0:	adds	x8, x8, #0x1
  414af4:	b.ne	414b28 <wcrtomb@plt+0x12218>  // b.any
  414af8:	b	414afc <wcrtomb@plt+0x121ec>
  414afc:	mov	w8, wzr
  414b00:	cbnz	w8, 414b18 <wcrtomb@plt+0x12208>
  414b04:	b	414b08 <wcrtomb@plt+0x121f8>
  414b08:	ldur	x8, [x29, #-40]
  414b0c:	subs	x8, x8, #0x0
  414b10:	b.gt	414b58 <wcrtomb@plt+0x12248>
  414b14:	b	414b7c <wcrtomb@plt+0x1226c>
  414b18:	ldur	x8, [x29, #-40]
  414b1c:	subs	x8, x8, #0x1
  414b20:	tbz	x8, #63, 414b58 <wcrtomb@plt+0x12248>
  414b24:	b	414b7c <wcrtomb@plt+0x1226c>
  414b28:	ldur	x8, [x29, #-40]
  414b2c:	subs	x8, x8, #0x0
  414b30:	b.gt	414b58 <wcrtomb@plt+0x12248>
  414b34:	b	414b7c <wcrtomb@plt+0x1226c>
  414b38:	ldur	x8, [x29, #-40]
  414b3c:	mov	w9, #0xffff                	// #65535
  414b40:	mov	w10, w9
  414b44:	sdiv	x8, x10, x8
  414b48:	ldur	x10, [x29, #-56]
  414b4c:	subs	x8, x8, x10
  414b50:	b.ge	414b7c <wcrtomb@plt+0x1226c>  // b.tcont
  414b54:	b	414b58 <wcrtomb@plt+0x12248>
  414b58:	ldur	w8, [x29, #-56]
  414b5c:	ldur	w9, [x29, #-40]
  414b60:	mul	w8, w8, w9
  414b64:	mov	w0, w8
  414b68:	and	x10, x0, #0xffff
  414b6c:	stur	x10, [x29, #-64]
  414b70:	mov	w8, #0x1                   	// #1
  414b74:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  414b78:	b	4158c4 <wcrtomb@plt+0x12fb4>
  414b7c:	ldur	w8, [x29, #-56]
  414b80:	ldur	w9, [x29, #-40]
  414b84:	mul	w8, w8, w9
  414b88:	mov	w0, w8
  414b8c:	and	x10, x0, #0xffff
  414b90:	stur	x10, [x29, #-64]
  414b94:	mov	w8, wzr
  414b98:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  414b9c:	b	4158c4 <wcrtomb@plt+0x12fb4>
  414ba0:	mov	w8, #0x1                   	// #1
  414ba4:	cbnz	w8, 415058 <wcrtomb@plt+0x12748>
  414ba8:	b	414bac <wcrtomb@plt+0x1229c>
  414bac:	mov	w8, wzr
  414bb0:	cbnz	w8, 414e2c <wcrtomb@plt+0x1251c>
  414bb4:	b	414bb8 <wcrtomb@plt+0x122a8>
  414bb8:	ldur	x8, [x29, #-40]
  414bbc:	tbz	x8, #63, 414d10 <wcrtomb@plt+0x12400>
  414bc0:	b	414bc4 <wcrtomb@plt+0x122b4>
  414bc4:	ldur	x8, [x29, #-56]
  414bc8:	tbz	x8, #63, 414c70 <wcrtomb@plt+0x12360>
  414bcc:	b	414bd0 <wcrtomb@plt+0x122c0>
  414bd0:	mov	w8, wzr
  414bd4:	cbnz	w8, 414bfc <wcrtomb@plt+0x122ec>
  414bd8:	b	414bdc <wcrtomb@plt+0x122cc>
  414bdc:	ldur	x8, [x29, #-56]
  414be0:	ldur	x9, [x29, #-40]
  414be4:	mov	w10, #0x7fffffff            	// #2147483647
  414be8:	mov	w11, w10
  414bec:	sdiv	x9, x11, x9
  414bf0:	subs	x8, x8, x9
  414bf4:	b.lt	414de4 <wcrtomb@plt+0x124d4>  // b.tstop
  414bf8:	b	414e08 <wcrtomb@plt+0x124f8>
  414bfc:	mov	w8, wzr
  414c00:	cbnz	w8, 414c1c <wcrtomb@plt+0x1230c>
  414c04:	b	414c08 <wcrtomb@plt+0x122f8>
  414c08:	ldur	x8, [x29, #-40]
  414c0c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414c10:	subs	x8, x8, x9
  414c14:	b.eq	414c2c <wcrtomb@plt+0x1231c>  // b.none
  414c18:	b	414c38 <wcrtomb@plt+0x12328>
  414c1c:	ldur	x8, [x29, #-40]
  414c20:	subs	x8, x8, #0x1
  414c24:	b.lt	414c38 <wcrtomb@plt+0x12328>  // b.tstop
  414c28:	b	414c2c <wcrtomb@plt+0x1231c>
  414c2c:	mov	x0, xzr
  414c30:	stur	x0, [x29, #-112]
  414c34:	b	414c58 <wcrtomb@plt+0x12348>
  414c38:	ldur	x8, [x29, #-40]
  414c3c:	mov	x9, xzr
  414c40:	subs	x8, x9, x8
  414c44:	mov	w10, #0x7fffffff            	// #2147483647
  414c48:	mov	w9, w10
  414c4c:	sdiv	x8, x9, x8
  414c50:	stur	x8, [x29, #-112]
  414c54:	b	414c58 <wcrtomb@plt+0x12348>
  414c58:	ldur	x8, [x29, #-112]
  414c5c:	ldur	x9, [x29, #-56]
  414c60:	mvn	x9, x9
  414c64:	subs	x8, x8, x9
  414c68:	b.le	414de4 <wcrtomb@plt+0x124d4>
  414c6c:	b	414e08 <wcrtomb@plt+0x124f8>
  414c70:	mov	w8, wzr
  414c74:	cbnz	w8, 414c88 <wcrtomb@plt+0x12378>
  414c78:	b	414c7c <wcrtomb@plt+0x1236c>
  414c7c:	mov	w8, wzr
  414c80:	cbnz	w8, 414c94 <wcrtomb@plt+0x12384>
  414c84:	b	414cf4 <wcrtomb@plt+0x123e4>
  414c88:	mov	w8, #0x1                   	// #1
  414c8c:	cbnz	w8, 414cf4 <wcrtomb@plt+0x123e4>
  414c90:	b	414c94 <wcrtomb@plt+0x12384>
  414c94:	ldur	x8, [x29, #-40]
  414c98:	adds	x8, x8, #0x1
  414c9c:	b.ne	414cf4 <wcrtomb@plt+0x123e4>  // b.any
  414ca0:	b	414ca4 <wcrtomb@plt+0x12394>
  414ca4:	mov	w8, wzr
  414ca8:	cbnz	w8, 414cc8 <wcrtomb@plt+0x123b8>
  414cac:	b	414cb0 <wcrtomb@plt+0x123a0>
  414cb0:	ldur	x8, [x29, #-56]
  414cb4:	mov	x9, #0xffffffff80000000    	// #-2147483648
  414cb8:	add	x8, x8, x9
  414cbc:	subs	x8, x8, #0x0
  414cc0:	b.gt	414de4 <wcrtomb@plt+0x124d4>
  414cc4:	b	414e08 <wcrtomb@plt+0x124f8>
  414cc8:	ldur	x8, [x29, #-56]
  414ccc:	subs	x8, x8, #0x1
  414cd0:	b.lt	414e08 <wcrtomb@plt+0x124f8>  // b.tstop
  414cd4:	b	414cd8 <wcrtomb@plt+0x123c8>
  414cd8:	ldur	x8, [x29, #-56]
  414cdc:	subs	x8, x8, #0x1
  414ce0:	mov	w9, #0x7fffffff            	// #2147483647
  414ce4:	mov	w10, w9
  414ce8:	subs	x8, x8, x10
  414cec:	b.gt	414de4 <wcrtomb@plt+0x124d4>
  414cf0:	b	414e08 <wcrtomb@plt+0x124f8>
  414cf4:	ldur	x8, [x29, #-40]
  414cf8:	mov	x9, #0xffffffff80000000    	// #-2147483648
  414cfc:	sdiv	x8, x9, x8
  414d00:	ldur	x9, [x29, #-56]
  414d04:	subs	x8, x8, x9
  414d08:	b.lt	414de4 <wcrtomb@plt+0x124d4>  // b.tstop
  414d0c:	b	414e08 <wcrtomb@plt+0x124f8>
  414d10:	ldur	x8, [x29, #-40]
  414d14:	cbnz	x8, 414d28 <wcrtomb@plt+0x12418>
  414d18:	b	414d1c <wcrtomb@plt+0x1240c>
  414d1c:	mov	w8, wzr
  414d20:	cbnz	w8, 414de4 <wcrtomb@plt+0x124d4>
  414d24:	b	414e08 <wcrtomb@plt+0x124f8>
  414d28:	ldur	x8, [x29, #-56]
  414d2c:	tbz	x8, #63, 414dc4 <wcrtomb@plt+0x124b4>
  414d30:	b	414d34 <wcrtomb@plt+0x12424>
  414d34:	mov	w8, wzr
  414d38:	cbnz	w8, 414d4c <wcrtomb@plt+0x1243c>
  414d3c:	b	414d40 <wcrtomb@plt+0x12430>
  414d40:	mov	w8, wzr
  414d44:	cbnz	w8, 414d58 <wcrtomb@plt+0x12448>
  414d48:	b	414da8 <wcrtomb@plt+0x12498>
  414d4c:	mov	w8, #0x1                   	// #1
  414d50:	cbnz	w8, 414da8 <wcrtomb@plt+0x12498>
  414d54:	b	414d58 <wcrtomb@plt+0x12448>
  414d58:	ldur	x8, [x29, #-56]
  414d5c:	adds	x8, x8, #0x1
  414d60:	b.ne	414da8 <wcrtomb@plt+0x12498>  // b.any
  414d64:	b	414d68 <wcrtomb@plt+0x12458>
  414d68:	mov	w8, wzr
  414d6c:	cbnz	w8, 414d8c <wcrtomb@plt+0x1247c>
  414d70:	b	414d74 <wcrtomb@plt+0x12464>
  414d74:	ldur	x8, [x29, #-40]
  414d78:	mov	x9, #0xffffffff80000000    	// #-2147483648
  414d7c:	add	x8, x8, x9
  414d80:	subs	x8, x8, #0x0
  414d84:	b.gt	414de4 <wcrtomb@plt+0x124d4>
  414d88:	b	414e08 <wcrtomb@plt+0x124f8>
  414d8c:	ldur	x8, [x29, #-40]
  414d90:	subs	x8, x8, #0x1
  414d94:	mov	w9, #0x7fffffff            	// #2147483647
  414d98:	mov	w10, w9
  414d9c:	subs	x8, x8, x10
  414da0:	b.gt	414de4 <wcrtomb@plt+0x124d4>
  414da4:	b	414e08 <wcrtomb@plt+0x124f8>
  414da8:	ldur	x8, [x29, #-56]
  414dac:	mov	x9, #0xffffffff80000000    	// #-2147483648
  414db0:	sdiv	x8, x9, x8
  414db4:	ldur	x9, [x29, #-40]
  414db8:	subs	x8, x8, x9
  414dbc:	b.lt	414de4 <wcrtomb@plt+0x124d4>  // b.tstop
  414dc0:	b	414e08 <wcrtomb@plt+0x124f8>
  414dc4:	ldur	x8, [x29, #-40]
  414dc8:	mov	w9, #0x7fffffff            	// #2147483647
  414dcc:	mov	w10, w9
  414dd0:	sdiv	x8, x10, x8
  414dd4:	ldur	x10, [x29, #-56]
  414dd8:	subs	x8, x8, x10
  414ddc:	b.ge	414e08 <wcrtomb@plt+0x124f8>  // b.tcont
  414de0:	b	414de4 <wcrtomb@plt+0x124d4>
  414de4:	ldur	w8, [x29, #-56]
  414de8:	ldur	w9, [x29, #-40]
  414dec:	mul	w8, w8, w9
  414df0:	mov	w0, w8
  414df4:	sxtw	x10, w0
  414df8:	stur	x10, [x29, #-64]
  414dfc:	mov	w8, #0x1                   	// #1
  414e00:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  414e04:	b	4158c4 <wcrtomb@plt+0x12fb4>
  414e08:	ldur	w8, [x29, #-56]
  414e0c:	ldur	w9, [x29, #-40]
  414e10:	mul	w8, w8, w9
  414e14:	mov	w0, w8
  414e18:	sxtw	x10, w0
  414e1c:	stur	x10, [x29, #-64]
  414e20:	mov	w8, wzr
  414e24:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  414e28:	b	4158c4 <wcrtomb@plt+0x12fb4>
  414e2c:	ldur	x8, [x29, #-40]
  414e30:	tbz	x8, #63, 414f64 <wcrtomb@plt+0x12654>
  414e34:	b	414e38 <wcrtomb@plt+0x12528>
  414e38:	ldur	x8, [x29, #-56]
  414e3c:	tbz	x8, #63, 414ee4 <wcrtomb@plt+0x125d4>
  414e40:	b	414e44 <wcrtomb@plt+0x12534>
  414e44:	mov	w8, wzr
  414e48:	cbnz	w8, 414e70 <wcrtomb@plt+0x12560>
  414e4c:	b	414e50 <wcrtomb@plt+0x12540>
  414e50:	ldur	x8, [x29, #-56]
  414e54:	ldur	x9, [x29, #-40]
  414e58:	mov	w10, #0xffffffff            	// #-1
  414e5c:	mov	w11, w10
  414e60:	sdiv	x9, x11, x9
  414e64:	subs	x8, x8, x9
  414e68:	b.lt	415018 <wcrtomb@plt+0x12708>  // b.tstop
  414e6c:	b	415038 <wcrtomb@plt+0x12728>
  414e70:	mov	w8, wzr
  414e74:	cbnz	w8, 414e90 <wcrtomb@plt+0x12580>
  414e78:	b	414e7c <wcrtomb@plt+0x1256c>
  414e7c:	ldur	x8, [x29, #-40]
  414e80:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414e84:	subs	x8, x8, x9
  414e88:	b.eq	414ea0 <wcrtomb@plt+0x12590>  // b.none
  414e8c:	b	414eac <wcrtomb@plt+0x1259c>
  414e90:	ldur	x8, [x29, #-40]
  414e94:	subs	x8, x8, #0x1
  414e98:	b.lt	414eac <wcrtomb@plt+0x1259c>  // b.tstop
  414e9c:	b	414ea0 <wcrtomb@plt+0x12590>
  414ea0:	mov	x0, xzr
  414ea4:	str	x0, [sp, #120]
  414ea8:	b	414ecc <wcrtomb@plt+0x125bc>
  414eac:	ldur	x8, [x29, #-40]
  414eb0:	mov	x9, xzr
  414eb4:	subs	x8, x9, x8
  414eb8:	mov	w10, #0xffffffff            	// #-1
  414ebc:	mov	w9, w10
  414ec0:	sdiv	x8, x9, x8
  414ec4:	str	x8, [sp, #120]
  414ec8:	b	414ecc <wcrtomb@plt+0x125bc>
  414ecc:	ldr	x8, [sp, #120]
  414ed0:	ldur	x9, [x29, #-56]
  414ed4:	mvn	x9, x9
  414ed8:	subs	x8, x8, x9
  414edc:	b.le	415018 <wcrtomb@plt+0x12708>
  414ee0:	b	415038 <wcrtomb@plt+0x12728>
  414ee4:	mov	w8, wzr
  414ee8:	cbnz	w8, 414efc <wcrtomb@plt+0x125ec>
  414eec:	b	414ef0 <wcrtomb@plt+0x125e0>
  414ef0:	mov	w8, wzr
  414ef4:	cbnz	w8, 414f08 <wcrtomb@plt+0x125f8>
  414ef8:	b	414f54 <wcrtomb@plt+0x12644>
  414efc:	mov	w8, #0x1                   	// #1
  414f00:	cbnz	w8, 414f54 <wcrtomb@plt+0x12644>
  414f04:	b	414f08 <wcrtomb@plt+0x125f8>
  414f08:	ldur	x8, [x29, #-40]
  414f0c:	adds	x8, x8, #0x1
  414f10:	b.ne	414f54 <wcrtomb@plt+0x12644>  // b.any
  414f14:	b	414f18 <wcrtomb@plt+0x12608>
  414f18:	mov	w8, wzr
  414f1c:	cbnz	w8, 414f34 <wcrtomb@plt+0x12624>
  414f20:	b	414f24 <wcrtomb@plt+0x12614>
  414f24:	ldur	x8, [x29, #-56]
  414f28:	subs	x8, x8, #0x0
  414f2c:	b.gt	415018 <wcrtomb@plt+0x12708>
  414f30:	b	415038 <wcrtomb@plt+0x12728>
  414f34:	ldur	x8, [x29, #-56]
  414f38:	subs	x8, x8, #0x1
  414f3c:	b.lt	415038 <wcrtomb@plt+0x12728>  // b.tstop
  414f40:	b	414f44 <wcrtomb@plt+0x12634>
  414f44:	ldur	x8, [x29, #-56]
  414f48:	subs	x8, x8, #0x1
  414f4c:	tbz	x8, #63, 415018 <wcrtomb@plt+0x12708>
  414f50:	b	415038 <wcrtomb@plt+0x12728>
  414f54:	ldur	x8, [x29, #-56]
  414f58:	subs	x8, x8, #0x0
  414f5c:	b.gt	415018 <wcrtomb@plt+0x12708>
  414f60:	b	415038 <wcrtomb@plt+0x12728>
  414f64:	ldur	x8, [x29, #-40]
  414f68:	cbnz	x8, 414f7c <wcrtomb@plt+0x1266c>
  414f6c:	b	414f70 <wcrtomb@plt+0x12660>
  414f70:	mov	w8, wzr
  414f74:	cbnz	w8, 415018 <wcrtomb@plt+0x12708>
  414f78:	b	415038 <wcrtomb@plt+0x12728>
  414f7c:	ldur	x8, [x29, #-56]
  414f80:	tbz	x8, #63, 414ff8 <wcrtomb@plt+0x126e8>
  414f84:	b	414f88 <wcrtomb@plt+0x12678>
  414f88:	mov	w8, wzr
  414f8c:	cbnz	w8, 414fa0 <wcrtomb@plt+0x12690>
  414f90:	b	414f94 <wcrtomb@plt+0x12684>
  414f94:	mov	w8, wzr
  414f98:	cbnz	w8, 414fac <wcrtomb@plt+0x1269c>
  414f9c:	b	414fe8 <wcrtomb@plt+0x126d8>
  414fa0:	mov	w8, #0x1                   	// #1
  414fa4:	cbnz	w8, 414fe8 <wcrtomb@plt+0x126d8>
  414fa8:	b	414fac <wcrtomb@plt+0x1269c>
  414fac:	ldur	x8, [x29, #-56]
  414fb0:	adds	x8, x8, #0x1
  414fb4:	b.ne	414fe8 <wcrtomb@plt+0x126d8>  // b.any
  414fb8:	b	414fbc <wcrtomb@plt+0x126ac>
  414fbc:	mov	w8, wzr
  414fc0:	cbnz	w8, 414fd8 <wcrtomb@plt+0x126c8>
  414fc4:	b	414fc8 <wcrtomb@plt+0x126b8>
  414fc8:	ldur	x8, [x29, #-40]
  414fcc:	subs	x8, x8, #0x0
  414fd0:	b.gt	415018 <wcrtomb@plt+0x12708>
  414fd4:	b	415038 <wcrtomb@plt+0x12728>
  414fd8:	ldur	x8, [x29, #-40]
  414fdc:	subs	x8, x8, #0x1
  414fe0:	tbz	x8, #63, 415018 <wcrtomb@plt+0x12708>
  414fe4:	b	415038 <wcrtomb@plt+0x12728>
  414fe8:	ldur	x8, [x29, #-40]
  414fec:	subs	x8, x8, #0x0
  414ff0:	b.gt	415018 <wcrtomb@plt+0x12708>
  414ff4:	b	415038 <wcrtomb@plt+0x12728>
  414ff8:	ldur	x8, [x29, #-40]
  414ffc:	mov	w9, #0xffffffff            	// #-1
  415000:	mov	w10, w9
  415004:	sdiv	x8, x10, x8
  415008:	ldur	x10, [x29, #-56]
  41500c:	subs	x8, x8, x10
  415010:	b.ge	415038 <wcrtomb@plt+0x12728>  // b.tcont
  415014:	b	415018 <wcrtomb@plt+0x12708>
  415018:	ldur	w8, [x29, #-56]
  41501c:	ldur	w9, [x29, #-40]
  415020:	mul	w8, w8, w9
  415024:	mov	w10, w8
  415028:	stur	x10, [x29, #-64]
  41502c:	mov	w8, #0x1                   	// #1
  415030:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  415034:	b	4158c4 <wcrtomb@plt+0x12fb4>
  415038:	ldur	w8, [x29, #-56]
  41503c:	ldur	w9, [x29, #-40]
  415040:	mul	w8, w8, w9
  415044:	mov	w10, w8
  415048:	stur	x10, [x29, #-64]
  41504c:	mov	w8, wzr
  415050:	cbnz	w8, 4158d4 <wcrtomb@plt+0x12fc4>
  415054:	b	4158c4 <wcrtomb@plt+0x12fb4>
  415058:	mov	w8, wzr
  41505c:	cbnz	w8, 415494 <wcrtomb@plt+0x12b84>
  415060:	b	415064 <wcrtomb@plt+0x12754>
  415064:	mov	w8, wzr
  415068:	cbnz	w8, 415278 <wcrtomb@plt+0x12968>
  41506c:	b	415070 <wcrtomb@plt+0x12760>
  415070:	ldur	x8, [x29, #-40]
  415074:	tbz	x8, #63, 415198 <wcrtomb@plt+0x12888>
  415078:	b	41507c <wcrtomb@plt+0x1276c>
  41507c:	ldur	x8, [x29, #-56]
  415080:	tbz	x8, #63, 415120 <wcrtomb@plt+0x12810>
  415084:	b	415088 <wcrtomb@plt+0x12778>
  415088:	mov	w8, wzr
  41508c:	cbnz	w8, 4150b0 <wcrtomb@plt+0x127a0>
  415090:	b	415094 <wcrtomb@plt+0x12784>
  415094:	ldur	x8, [x29, #-56]
  415098:	ldur	x9, [x29, #-40]
  41509c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4150a0:	sdiv	x9, x10, x9
  4150a4:	subs	x8, x8, x9
  4150a8:	b.lt	415240 <wcrtomb@plt+0x12930>  // b.tstop
  4150ac:	b	41525c <wcrtomb@plt+0x1294c>
  4150b0:	mov	w8, wzr
  4150b4:	cbnz	w8, 4150d0 <wcrtomb@plt+0x127c0>
  4150b8:	b	4150bc <wcrtomb@plt+0x127ac>
  4150bc:	ldur	x8, [x29, #-40]
  4150c0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4150c4:	subs	x8, x8, x9
  4150c8:	b.eq	4150e0 <wcrtomb@plt+0x127d0>  // b.none
  4150cc:	b	4150ec <wcrtomb@plt+0x127dc>
  4150d0:	ldur	x8, [x29, #-40]
  4150d4:	subs	x8, x8, #0x1
  4150d8:	b.lt	4150ec <wcrtomb@plt+0x127dc>  // b.tstop
  4150dc:	b	4150e0 <wcrtomb@plt+0x127d0>
  4150e0:	mov	x0, xzr
  4150e4:	str	x0, [sp, #112]
  4150e8:	b	415108 <wcrtomb@plt+0x127f8>
  4150ec:	ldur	x8, [x29, #-40]
  4150f0:	mov	x9, xzr
  4150f4:	subs	x8, x9, x8
  4150f8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4150fc:	sdiv	x8, x9, x8
  415100:	str	x8, [sp, #112]
  415104:	b	415108 <wcrtomb@plt+0x127f8>
  415108:	ldr	x8, [sp, #112]
  41510c:	ldur	x9, [x29, #-56]
  415110:	mvn	x9, x9
  415114:	subs	x8, x8, x9
  415118:	b.le	415240 <wcrtomb@plt+0x12930>
  41511c:	b	41525c <wcrtomb@plt+0x1294c>
  415120:	ldur	x8, [x29, #-40]
  415124:	adds	x8, x8, #0x1
  415128:	b.ne	41517c <wcrtomb@plt+0x1286c>  // b.any
  41512c:	b	415130 <wcrtomb@plt+0x12820>
  415130:	mov	w8, wzr
  415134:	cbnz	w8, 415154 <wcrtomb@plt+0x12844>
  415138:	b	41513c <wcrtomb@plt+0x1282c>
  41513c:	ldur	x8, [x29, #-56]
  415140:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415144:	add	x8, x8, x9
  415148:	subs	x8, x8, #0x0
  41514c:	b.gt	415240 <wcrtomb@plt+0x12930>
  415150:	b	41525c <wcrtomb@plt+0x1294c>
  415154:	ldur	x8, [x29, #-56]
  415158:	subs	x8, x8, #0x1
  41515c:	b.lt	41525c <wcrtomb@plt+0x1294c>  // b.tstop
  415160:	b	415164 <wcrtomb@plt+0x12854>
  415164:	ldur	x8, [x29, #-56]
  415168:	subs	x8, x8, #0x1
  41516c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  415170:	subs	x8, x8, x9
  415174:	b.gt	415240 <wcrtomb@plt+0x12930>
  415178:	b	41525c <wcrtomb@plt+0x1294c>
  41517c:	ldur	x8, [x29, #-40]
  415180:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415184:	sdiv	x8, x9, x8
  415188:	ldur	x9, [x29, #-56]
  41518c:	subs	x8, x8, x9
  415190:	b.lt	415240 <wcrtomb@plt+0x12930>  // b.tstop
  415194:	b	41525c <wcrtomb@plt+0x1294c>
  415198:	ldur	x8, [x29, #-40]
  41519c:	cbnz	x8, 4151b0 <wcrtomb@plt+0x128a0>
  4151a0:	b	4151a4 <wcrtomb@plt+0x12894>
  4151a4:	mov	w8, wzr
  4151a8:	cbnz	w8, 415240 <wcrtomb@plt+0x12930>
  4151ac:	b	41525c <wcrtomb@plt+0x1294c>
  4151b0:	ldur	x8, [x29, #-56]
  4151b4:	tbz	x8, #63, 415224 <wcrtomb@plt+0x12914>
  4151b8:	b	4151bc <wcrtomb@plt+0x128ac>
  4151bc:	ldur	x8, [x29, #-56]
  4151c0:	adds	x8, x8, #0x1
  4151c4:	b.ne	415208 <wcrtomb@plt+0x128f8>  // b.any
  4151c8:	b	4151cc <wcrtomb@plt+0x128bc>
  4151cc:	mov	w8, wzr
  4151d0:	cbnz	w8, 4151f0 <wcrtomb@plt+0x128e0>
  4151d4:	b	4151d8 <wcrtomb@plt+0x128c8>
  4151d8:	ldur	x8, [x29, #-40]
  4151dc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4151e0:	add	x8, x8, x9
  4151e4:	subs	x8, x8, #0x0
  4151e8:	b.gt	415240 <wcrtomb@plt+0x12930>
  4151ec:	b	41525c <wcrtomb@plt+0x1294c>
  4151f0:	ldur	x8, [x29, #-40]
  4151f4:	subs	x8, x8, #0x1
  4151f8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4151fc:	subs	x8, x8, x9
  415200:	b.gt	415240 <wcrtomb@plt+0x12930>
  415204:	b	41525c <wcrtomb@plt+0x1294c>
  415208:	ldur	x8, [x29, #-56]
  41520c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415210:	sdiv	x8, x9, x8
  415214:	ldur	x9, [x29, #-40]
  415218:	subs	x8, x8, x9
  41521c:	b.lt	415240 <wcrtomb@plt+0x12930>  // b.tstop
  415220:	b	41525c <wcrtomb@plt+0x1294c>
  415224:	ldur	x8, [x29, #-40]
  415228:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41522c:	sdiv	x8, x9, x8
  415230:	ldur	x9, [x29, #-56]
  415234:	subs	x8, x8, x9
  415238:	b.ge	41525c <wcrtomb@plt+0x1294c>  // b.tcont
  41523c:	b	415240 <wcrtomb@plt+0x12930>
  415240:	ldur	x8, [x29, #-56]
  415244:	ldur	x9, [x29, #-40]
  415248:	mul	x8, x8, x9
  41524c:	stur	x8, [x29, #-64]
  415250:	mov	w10, #0x1                   	// #1
  415254:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  415258:	b	4158c4 <wcrtomb@plt+0x12fb4>
  41525c:	ldur	x8, [x29, #-56]
  415260:	ldur	x9, [x29, #-40]
  415264:	mul	x8, x8, x9
  415268:	stur	x8, [x29, #-64]
  41526c:	mov	w10, wzr
  415270:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  415274:	b	4158c4 <wcrtomb@plt+0x12fb4>
  415278:	ldur	x8, [x29, #-40]
  41527c:	tbz	x8, #63, 4153ac <wcrtomb@plt+0x12a9c>
  415280:	b	415284 <wcrtomb@plt+0x12974>
  415284:	ldur	x8, [x29, #-56]
  415288:	tbz	x8, #63, 41532c <wcrtomb@plt+0x12a1c>
  41528c:	b	415290 <wcrtomb@plt+0x12980>
  415290:	mov	w8, #0x1                   	// #1
  415294:	cbnz	w8, 4152b8 <wcrtomb@plt+0x129a8>
  415298:	b	41529c <wcrtomb@plt+0x1298c>
  41529c:	ldur	x8, [x29, #-56]
  4152a0:	ldur	x9, [x29, #-40]
  4152a4:	mov	x10, #0xffffffffffffffff    	// #-1
  4152a8:	udiv	x9, x10, x9
  4152ac:	subs	x8, x8, x9
  4152b0:	b.cc	41545c <wcrtomb@plt+0x12b4c>  // b.lo, b.ul, b.last
  4152b4:	b	415478 <wcrtomb@plt+0x12b68>
  4152b8:	mov	w8, wzr
  4152bc:	cbnz	w8, 4152d8 <wcrtomb@plt+0x129c8>
  4152c0:	b	4152c4 <wcrtomb@plt+0x129b4>
  4152c4:	ldur	x8, [x29, #-40]
  4152c8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4152cc:	subs	x8, x8, x9
  4152d0:	b.eq	4152e8 <wcrtomb@plt+0x129d8>  // b.none
  4152d4:	b	4152f8 <wcrtomb@plt+0x129e8>
  4152d8:	ldur	x8, [x29, #-40]
  4152dc:	subs	x8, x8, #0x1
  4152e0:	b.lt	4152f8 <wcrtomb@plt+0x129e8>  // b.tstop
  4152e4:	b	4152e8 <wcrtomb@plt+0x129d8>
  4152e8:	mov	w8, #0x1                   	// #1
  4152ec:	mov	w0, w8
  4152f0:	str	x0, [sp, #104]
  4152f4:	b	415314 <wcrtomb@plt+0x12a04>
  4152f8:	ldur	x8, [x29, #-40]
  4152fc:	mov	x9, xzr
  415300:	subs	x8, x9, x8
  415304:	mov	x9, #0xffffffffffffffff    	// #-1
  415308:	udiv	x8, x9, x8
  41530c:	str	x8, [sp, #104]
  415310:	b	415314 <wcrtomb@plt+0x12a04>
  415314:	ldr	x8, [sp, #104]
  415318:	ldur	x9, [x29, #-56]
  41531c:	mvn	x9, x9
  415320:	subs	x8, x8, x9
  415324:	b.ls	41545c <wcrtomb@plt+0x12b4c>  // b.plast
  415328:	b	415478 <wcrtomb@plt+0x12b68>
  41532c:	mov	w8, wzr
  415330:	cbnz	w8, 415344 <wcrtomb@plt+0x12a34>
  415334:	b	415338 <wcrtomb@plt+0x12a28>
  415338:	mov	w8, wzr
  41533c:	cbnz	w8, 415350 <wcrtomb@plt+0x12a40>
  415340:	b	41539c <wcrtomb@plt+0x12a8c>
  415344:	mov	w8, #0x1                   	// #1
  415348:	cbnz	w8, 41539c <wcrtomb@plt+0x12a8c>
  41534c:	b	415350 <wcrtomb@plt+0x12a40>
  415350:	ldur	x8, [x29, #-40]
  415354:	adds	x8, x8, #0x1
  415358:	b.ne	41539c <wcrtomb@plt+0x12a8c>  // b.any
  41535c:	b	415360 <wcrtomb@plt+0x12a50>
  415360:	mov	w8, wzr
  415364:	cbnz	w8, 41537c <wcrtomb@plt+0x12a6c>
  415368:	b	41536c <wcrtomb@plt+0x12a5c>
  41536c:	ldur	x8, [x29, #-56]
  415370:	subs	x8, x8, #0x0
  415374:	b.gt	41545c <wcrtomb@plt+0x12b4c>
  415378:	b	415478 <wcrtomb@plt+0x12b68>
  41537c:	ldur	x8, [x29, #-56]
  415380:	subs	x8, x8, #0x1
  415384:	b.lt	415478 <wcrtomb@plt+0x12b68>  // b.tstop
  415388:	b	41538c <wcrtomb@plt+0x12a7c>
  41538c:	ldur	x8, [x29, #-56]
  415390:	subs	x8, x8, #0x1
  415394:	tbz	x8, #63, 41545c <wcrtomb@plt+0x12b4c>
  415398:	b	415478 <wcrtomb@plt+0x12b68>
  41539c:	ldur	x8, [x29, #-56]
  4153a0:	subs	x8, x8, #0x0
  4153a4:	b.gt	41545c <wcrtomb@plt+0x12b4c>
  4153a8:	b	415478 <wcrtomb@plt+0x12b68>
  4153ac:	ldur	x8, [x29, #-40]
  4153b0:	cbnz	x8, 4153c4 <wcrtomb@plt+0x12ab4>
  4153b4:	b	4153b8 <wcrtomb@plt+0x12aa8>
  4153b8:	mov	w8, wzr
  4153bc:	cbnz	w8, 41545c <wcrtomb@plt+0x12b4c>
  4153c0:	b	415478 <wcrtomb@plt+0x12b68>
  4153c4:	ldur	x8, [x29, #-56]
  4153c8:	tbz	x8, #63, 415440 <wcrtomb@plt+0x12b30>
  4153cc:	b	4153d0 <wcrtomb@plt+0x12ac0>
  4153d0:	mov	w8, wzr
  4153d4:	cbnz	w8, 4153e8 <wcrtomb@plt+0x12ad8>
  4153d8:	b	4153dc <wcrtomb@plt+0x12acc>
  4153dc:	mov	w8, wzr
  4153e0:	cbnz	w8, 4153f4 <wcrtomb@plt+0x12ae4>
  4153e4:	b	415430 <wcrtomb@plt+0x12b20>
  4153e8:	mov	w8, #0x1                   	// #1
  4153ec:	cbnz	w8, 415430 <wcrtomb@plt+0x12b20>
  4153f0:	b	4153f4 <wcrtomb@plt+0x12ae4>
  4153f4:	ldur	x8, [x29, #-56]
  4153f8:	adds	x8, x8, #0x1
  4153fc:	b.ne	415430 <wcrtomb@plt+0x12b20>  // b.any
  415400:	b	415404 <wcrtomb@plt+0x12af4>
  415404:	mov	w8, wzr
  415408:	cbnz	w8, 415420 <wcrtomb@plt+0x12b10>
  41540c:	b	415410 <wcrtomb@plt+0x12b00>
  415410:	ldur	x8, [x29, #-40]
  415414:	subs	x8, x8, #0x0
  415418:	b.gt	41545c <wcrtomb@plt+0x12b4c>
  41541c:	b	415478 <wcrtomb@plt+0x12b68>
  415420:	ldur	x8, [x29, #-40]
  415424:	subs	x8, x8, #0x1
  415428:	tbz	x8, #63, 41545c <wcrtomb@plt+0x12b4c>
  41542c:	b	415478 <wcrtomb@plt+0x12b68>
  415430:	ldur	x8, [x29, #-40]
  415434:	subs	x8, x8, #0x0
  415438:	b.gt	41545c <wcrtomb@plt+0x12b4c>
  41543c:	b	415478 <wcrtomb@plt+0x12b68>
  415440:	ldur	x8, [x29, #-40]
  415444:	mov	x9, #0xffffffffffffffff    	// #-1
  415448:	udiv	x8, x9, x8
  41544c:	ldur	x9, [x29, #-56]
  415450:	subs	x8, x8, x9
  415454:	b.cs	415478 <wcrtomb@plt+0x12b68>  // b.hs, b.nlast
  415458:	b	41545c <wcrtomb@plt+0x12b4c>
  41545c:	ldur	x8, [x29, #-56]
  415460:	ldur	x9, [x29, #-40]
  415464:	mul	x8, x8, x9
  415468:	stur	x8, [x29, #-64]
  41546c:	mov	w10, #0x1                   	// #1
  415470:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  415474:	b	4158c4 <wcrtomb@plt+0x12fb4>
  415478:	ldur	x8, [x29, #-56]
  41547c:	ldur	x9, [x29, #-40]
  415480:	mul	x8, x8, x9
  415484:	stur	x8, [x29, #-64]
  415488:	mov	w10, wzr
  41548c:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  415490:	b	4158c4 <wcrtomb@plt+0x12fb4>
  415494:	mov	w8, wzr
  415498:	cbnz	w8, 4156a8 <wcrtomb@plt+0x12d98>
  41549c:	b	4154a0 <wcrtomb@plt+0x12b90>
  4154a0:	ldur	x8, [x29, #-40]
  4154a4:	tbz	x8, #63, 4155c8 <wcrtomb@plt+0x12cb8>
  4154a8:	b	4154ac <wcrtomb@plt+0x12b9c>
  4154ac:	ldur	x8, [x29, #-56]
  4154b0:	tbz	x8, #63, 415550 <wcrtomb@plt+0x12c40>
  4154b4:	b	4154b8 <wcrtomb@plt+0x12ba8>
  4154b8:	mov	w8, wzr
  4154bc:	cbnz	w8, 4154e0 <wcrtomb@plt+0x12bd0>
  4154c0:	b	4154c4 <wcrtomb@plt+0x12bb4>
  4154c4:	ldur	x8, [x29, #-56]
  4154c8:	ldur	x9, [x29, #-40]
  4154cc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4154d0:	sdiv	x9, x10, x9
  4154d4:	subs	x8, x8, x9
  4154d8:	b.lt	415670 <wcrtomb@plt+0x12d60>  // b.tstop
  4154dc:	b	41568c <wcrtomb@plt+0x12d7c>
  4154e0:	mov	w8, wzr
  4154e4:	cbnz	w8, 415500 <wcrtomb@plt+0x12bf0>
  4154e8:	b	4154ec <wcrtomb@plt+0x12bdc>
  4154ec:	ldur	x8, [x29, #-40]
  4154f0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4154f4:	subs	x8, x8, x9
  4154f8:	b.eq	415510 <wcrtomb@plt+0x12c00>  // b.none
  4154fc:	b	41551c <wcrtomb@plt+0x12c0c>
  415500:	ldur	x8, [x29, #-40]
  415504:	subs	x8, x8, #0x1
  415508:	b.lt	41551c <wcrtomb@plt+0x12c0c>  // b.tstop
  41550c:	b	415510 <wcrtomb@plt+0x12c00>
  415510:	mov	x0, xzr
  415514:	str	x0, [sp, #96]
  415518:	b	415538 <wcrtomb@plt+0x12c28>
  41551c:	ldur	x8, [x29, #-40]
  415520:	mov	x9, xzr
  415524:	subs	x8, x9, x8
  415528:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41552c:	sdiv	x8, x9, x8
  415530:	str	x8, [sp, #96]
  415534:	b	415538 <wcrtomb@plt+0x12c28>
  415538:	ldr	x8, [sp, #96]
  41553c:	ldur	x9, [x29, #-56]
  415540:	mvn	x9, x9
  415544:	subs	x8, x8, x9
  415548:	b.le	415670 <wcrtomb@plt+0x12d60>
  41554c:	b	41568c <wcrtomb@plt+0x12d7c>
  415550:	ldur	x8, [x29, #-40]
  415554:	adds	x8, x8, #0x1
  415558:	b.ne	4155ac <wcrtomb@plt+0x12c9c>  // b.any
  41555c:	b	415560 <wcrtomb@plt+0x12c50>
  415560:	mov	w8, wzr
  415564:	cbnz	w8, 415584 <wcrtomb@plt+0x12c74>
  415568:	b	41556c <wcrtomb@plt+0x12c5c>
  41556c:	ldur	x8, [x29, #-56]
  415570:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415574:	add	x8, x8, x9
  415578:	subs	x8, x8, #0x0
  41557c:	b.gt	415670 <wcrtomb@plt+0x12d60>
  415580:	b	41568c <wcrtomb@plt+0x12d7c>
  415584:	ldur	x8, [x29, #-56]
  415588:	subs	x8, x8, #0x1
  41558c:	b.lt	41568c <wcrtomb@plt+0x12d7c>  // b.tstop
  415590:	b	415594 <wcrtomb@plt+0x12c84>
  415594:	ldur	x8, [x29, #-56]
  415598:	subs	x8, x8, #0x1
  41559c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4155a0:	subs	x8, x8, x9
  4155a4:	b.gt	415670 <wcrtomb@plt+0x12d60>
  4155a8:	b	41568c <wcrtomb@plt+0x12d7c>
  4155ac:	ldur	x8, [x29, #-40]
  4155b0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4155b4:	sdiv	x8, x9, x8
  4155b8:	ldur	x9, [x29, #-56]
  4155bc:	subs	x8, x8, x9
  4155c0:	b.lt	415670 <wcrtomb@plt+0x12d60>  // b.tstop
  4155c4:	b	41568c <wcrtomb@plt+0x12d7c>
  4155c8:	ldur	x8, [x29, #-40]
  4155cc:	cbnz	x8, 4155e0 <wcrtomb@plt+0x12cd0>
  4155d0:	b	4155d4 <wcrtomb@plt+0x12cc4>
  4155d4:	mov	w8, wzr
  4155d8:	cbnz	w8, 415670 <wcrtomb@plt+0x12d60>
  4155dc:	b	41568c <wcrtomb@plt+0x12d7c>
  4155e0:	ldur	x8, [x29, #-56]
  4155e4:	tbz	x8, #63, 415654 <wcrtomb@plt+0x12d44>
  4155e8:	b	4155ec <wcrtomb@plt+0x12cdc>
  4155ec:	ldur	x8, [x29, #-56]
  4155f0:	adds	x8, x8, #0x1
  4155f4:	b.ne	415638 <wcrtomb@plt+0x12d28>  // b.any
  4155f8:	b	4155fc <wcrtomb@plt+0x12cec>
  4155fc:	mov	w8, wzr
  415600:	cbnz	w8, 415620 <wcrtomb@plt+0x12d10>
  415604:	b	415608 <wcrtomb@plt+0x12cf8>
  415608:	ldur	x8, [x29, #-40]
  41560c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415610:	add	x8, x8, x9
  415614:	subs	x8, x8, #0x0
  415618:	b.gt	415670 <wcrtomb@plt+0x12d60>
  41561c:	b	41568c <wcrtomb@plt+0x12d7c>
  415620:	ldur	x8, [x29, #-40]
  415624:	subs	x8, x8, #0x1
  415628:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41562c:	subs	x8, x8, x9
  415630:	b.gt	415670 <wcrtomb@plt+0x12d60>
  415634:	b	41568c <wcrtomb@plt+0x12d7c>
  415638:	ldur	x8, [x29, #-56]
  41563c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415640:	sdiv	x8, x9, x8
  415644:	ldur	x9, [x29, #-40]
  415648:	subs	x8, x8, x9
  41564c:	b.lt	415670 <wcrtomb@plt+0x12d60>  // b.tstop
  415650:	b	41568c <wcrtomb@plt+0x12d7c>
  415654:	ldur	x8, [x29, #-40]
  415658:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41565c:	sdiv	x8, x9, x8
  415660:	ldur	x9, [x29, #-56]
  415664:	subs	x8, x8, x9
  415668:	b.ge	41568c <wcrtomb@plt+0x12d7c>  // b.tcont
  41566c:	b	415670 <wcrtomb@plt+0x12d60>
  415670:	ldur	x8, [x29, #-56]
  415674:	ldur	x9, [x29, #-40]
  415678:	mul	x8, x8, x9
  41567c:	stur	x8, [x29, #-64]
  415680:	mov	w10, #0x1                   	// #1
  415684:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  415688:	b	4158c4 <wcrtomb@plt+0x12fb4>
  41568c:	ldur	x8, [x29, #-56]
  415690:	ldur	x9, [x29, #-40]
  415694:	mul	x8, x8, x9
  415698:	stur	x8, [x29, #-64]
  41569c:	mov	w10, wzr
  4156a0:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  4156a4:	b	4158c4 <wcrtomb@plt+0x12fb4>
  4156a8:	ldur	x8, [x29, #-40]
  4156ac:	tbz	x8, #63, 4157dc <wcrtomb@plt+0x12ecc>
  4156b0:	b	4156b4 <wcrtomb@plt+0x12da4>
  4156b4:	ldur	x8, [x29, #-56]
  4156b8:	tbz	x8, #63, 41575c <wcrtomb@plt+0x12e4c>
  4156bc:	b	4156c0 <wcrtomb@plt+0x12db0>
  4156c0:	mov	w8, #0x1                   	// #1
  4156c4:	cbnz	w8, 4156e8 <wcrtomb@plt+0x12dd8>
  4156c8:	b	4156cc <wcrtomb@plt+0x12dbc>
  4156cc:	ldur	x8, [x29, #-56]
  4156d0:	ldur	x9, [x29, #-40]
  4156d4:	mov	x10, #0xffffffffffffffff    	// #-1
  4156d8:	udiv	x9, x10, x9
  4156dc:	subs	x8, x8, x9
  4156e0:	b.cc	41588c <wcrtomb@plt+0x12f7c>  // b.lo, b.ul, b.last
  4156e4:	b	4158a8 <wcrtomb@plt+0x12f98>
  4156e8:	mov	w8, wzr
  4156ec:	cbnz	w8, 415708 <wcrtomb@plt+0x12df8>
  4156f0:	b	4156f4 <wcrtomb@plt+0x12de4>
  4156f4:	ldur	x8, [x29, #-40]
  4156f8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4156fc:	subs	x8, x8, x9
  415700:	b.eq	415718 <wcrtomb@plt+0x12e08>  // b.none
  415704:	b	415728 <wcrtomb@plt+0x12e18>
  415708:	ldur	x8, [x29, #-40]
  41570c:	subs	x8, x8, #0x1
  415710:	b.lt	415728 <wcrtomb@plt+0x12e18>  // b.tstop
  415714:	b	415718 <wcrtomb@plt+0x12e08>
  415718:	mov	w8, #0x1                   	// #1
  41571c:	mov	w0, w8
  415720:	str	x0, [sp, #88]
  415724:	b	415744 <wcrtomb@plt+0x12e34>
  415728:	ldur	x8, [x29, #-40]
  41572c:	mov	x9, xzr
  415730:	subs	x8, x9, x8
  415734:	mov	x9, #0xffffffffffffffff    	// #-1
  415738:	udiv	x8, x9, x8
  41573c:	str	x8, [sp, #88]
  415740:	b	415744 <wcrtomb@plt+0x12e34>
  415744:	ldr	x8, [sp, #88]
  415748:	ldur	x9, [x29, #-56]
  41574c:	mvn	x9, x9
  415750:	subs	x8, x8, x9
  415754:	b.ls	41588c <wcrtomb@plt+0x12f7c>  // b.plast
  415758:	b	4158a8 <wcrtomb@plt+0x12f98>
  41575c:	mov	w8, wzr
  415760:	cbnz	w8, 415774 <wcrtomb@plt+0x12e64>
  415764:	b	415768 <wcrtomb@plt+0x12e58>
  415768:	mov	w8, wzr
  41576c:	cbnz	w8, 415780 <wcrtomb@plt+0x12e70>
  415770:	b	4157cc <wcrtomb@plt+0x12ebc>
  415774:	mov	w8, #0x1                   	// #1
  415778:	cbnz	w8, 4157cc <wcrtomb@plt+0x12ebc>
  41577c:	b	415780 <wcrtomb@plt+0x12e70>
  415780:	ldur	x8, [x29, #-40]
  415784:	adds	x8, x8, #0x1
  415788:	b.ne	4157cc <wcrtomb@plt+0x12ebc>  // b.any
  41578c:	b	415790 <wcrtomb@plt+0x12e80>
  415790:	mov	w8, wzr
  415794:	cbnz	w8, 4157ac <wcrtomb@plt+0x12e9c>
  415798:	b	41579c <wcrtomb@plt+0x12e8c>
  41579c:	ldur	x8, [x29, #-56]
  4157a0:	subs	x8, x8, #0x0
  4157a4:	b.gt	41588c <wcrtomb@plt+0x12f7c>
  4157a8:	b	4158a8 <wcrtomb@plt+0x12f98>
  4157ac:	ldur	x8, [x29, #-56]
  4157b0:	subs	x8, x8, #0x1
  4157b4:	b.lt	4158a8 <wcrtomb@plt+0x12f98>  // b.tstop
  4157b8:	b	4157bc <wcrtomb@plt+0x12eac>
  4157bc:	ldur	x8, [x29, #-56]
  4157c0:	subs	x8, x8, #0x1
  4157c4:	tbz	x8, #63, 41588c <wcrtomb@plt+0x12f7c>
  4157c8:	b	4158a8 <wcrtomb@plt+0x12f98>
  4157cc:	ldur	x8, [x29, #-56]
  4157d0:	subs	x8, x8, #0x0
  4157d4:	b.gt	41588c <wcrtomb@plt+0x12f7c>
  4157d8:	b	4158a8 <wcrtomb@plt+0x12f98>
  4157dc:	ldur	x8, [x29, #-40]
  4157e0:	cbnz	x8, 4157f4 <wcrtomb@plt+0x12ee4>
  4157e4:	b	4157e8 <wcrtomb@plt+0x12ed8>
  4157e8:	mov	w8, wzr
  4157ec:	cbnz	w8, 41588c <wcrtomb@plt+0x12f7c>
  4157f0:	b	4158a8 <wcrtomb@plt+0x12f98>
  4157f4:	ldur	x8, [x29, #-56]
  4157f8:	tbz	x8, #63, 415870 <wcrtomb@plt+0x12f60>
  4157fc:	b	415800 <wcrtomb@plt+0x12ef0>
  415800:	mov	w8, wzr
  415804:	cbnz	w8, 415818 <wcrtomb@plt+0x12f08>
  415808:	b	41580c <wcrtomb@plt+0x12efc>
  41580c:	mov	w8, wzr
  415810:	cbnz	w8, 415824 <wcrtomb@plt+0x12f14>
  415814:	b	415860 <wcrtomb@plt+0x12f50>
  415818:	mov	w8, #0x1                   	// #1
  41581c:	cbnz	w8, 415860 <wcrtomb@plt+0x12f50>
  415820:	b	415824 <wcrtomb@plt+0x12f14>
  415824:	ldur	x8, [x29, #-56]
  415828:	adds	x8, x8, #0x1
  41582c:	b.ne	415860 <wcrtomb@plt+0x12f50>  // b.any
  415830:	b	415834 <wcrtomb@plt+0x12f24>
  415834:	mov	w8, wzr
  415838:	cbnz	w8, 415850 <wcrtomb@plt+0x12f40>
  41583c:	b	415840 <wcrtomb@plt+0x12f30>
  415840:	ldur	x8, [x29, #-40]
  415844:	subs	x8, x8, #0x0
  415848:	b.gt	41588c <wcrtomb@plt+0x12f7c>
  41584c:	b	4158a8 <wcrtomb@plt+0x12f98>
  415850:	ldur	x8, [x29, #-40]
  415854:	subs	x8, x8, #0x1
  415858:	tbz	x8, #63, 41588c <wcrtomb@plt+0x12f7c>
  41585c:	b	4158a8 <wcrtomb@plt+0x12f98>
  415860:	ldur	x8, [x29, #-40]
  415864:	subs	x8, x8, #0x0
  415868:	b.gt	41588c <wcrtomb@plt+0x12f7c>
  41586c:	b	4158a8 <wcrtomb@plt+0x12f98>
  415870:	ldur	x8, [x29, #-40]
  415874:	mov	x9, #0xffffffffffffffff    	// #-1
  415878:	udiv	x8, x9, x8
  41587c:	ldur	x9, [x29, #-56]
  415880:	subs	x8, x8, x9
  415884:	b.cs	4158a8 <wcrtomb@plt+0x12f98>  // b.hs, b.nlast
  415888:	b	41588c <wcrtomb@plt+0x12f7c>
  41588c:	ldur	x8, [x29, #-56]
  415890:	ldur	x9, [x29, #-40]
  415894:	mul	x8, x8, x9
  415898:	stur	x8, [x29, #-64]
  41589c:	mov	w10, #0x1                   	// #1
  4158a0:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  4158a4:	b	4158c4 <wcrtomb@plt+0x12fb4>
  4158a8:	ldur	x8, [x29, #-56]
  4158ac:	ldur	x9, [x29, #-40]
  4158b0:	mul	x8, x8, x9
  4158b4:	stur	x8, [x29, #-64]
  4158b8:	mov	w10, wzr
  4158bc:	cbnz	w10, 4158d4 <wcrtomb@plt+0x12fc4>
  4158c0:	b	4158c4 <wcrtomb@plt+0x12fb4>
  4158c4:	ldur	x8, [x29, #-64]
  4158c8:	adds	x8, x8, #0x1
  4158cc:	b.ls	4158e0 <wcrtomb@plt+0x12fd0>  // b.plast
  4158d0:	b	4158d4 <wcrtomb@plt+0x12fc4>
  4158d4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4158d8:	str	x8, [sp, #80]
  4158dc:	b	4158fc <wcrtomb@plt+0x12fec>
  4158e0:	ldur	x8, [x29, #-64]
  4158e4:	subs	x8, x8, #0x80
  4158e8:	cset	w9, lt  // lt = tstop
  4158ec:	mov	w10, w9
  4158f0:	lsl	x10, x10, #7
  4158f4:	str	x10, [sp, #80]
  4158f8:	b	4158fc <wcrtomb@plt+0x12fec>
  4158fc:	ldr	x8, [sp, #80]
  415900:	stur	x8, [x29, #-72]
  415904:	ldur	x8, [x29, #-72]
  415908:	cbz	x8, 415938 <wcrtomb@plt+0x13028>
  41590c:	b	415910 <wcrtomb@plt+0x13000>
  415910:	ldur	x8, [x29, #-72]
  415914:	ldur	x9, [x29, #-40]
  415918:	sdiv	x8, x8, x9
  41591c:	stur	x8, [x29, #-56]
  415920:	ldur	x8, [x29, #-72]
  415924:	ldur	x9, [x29, #-40]
  415928:	sdiv	x8, x8, x9
  41592c:	mul	x8, x8, x9
  415930:	stur	x8, [x29, #-64]
  415934:	b	415938 <wcrtomb@plt+0x13028>
  415938:	ldur	x8, [x29, #-8]
  41593c:	cbnz	x8, 415954 <wcrtomb@plt+0x13044>
  415940:	b	415944 <wcrtomb@plt+0x13034>
  415944:	ldur	x8, [x29, #-16]
  415948:	mov	x9, xzr
  41594c:	str	x9, [x8]
  415950:	b	415954 <wcrtomb@plt+0x13044>
  415954:	ldur	x8, [x29, #-56]
  415958:	ldur	x9, [x29, #-48]
  41595c:	subs	x8, x8, x9
  415960:	ldur	x9, [x29, #-24]
  415964:	subs	x8, x8, x9
  415968:	b.ge	417024 <wcrtomb@plt+0x14714>  // b.tcont
  41596c:	b	415970 <wcrtomb@plt+0x13060>
  415970:	ldur	x8, [x29, #-48]
  415974:	ldur	x9, [x29, #-24]
  415978:	adds	x8, x8, x9
  41597c:	cset	w10, vs
  415980:	stur	x8, [x29, #-56]
  415984:	tbnz	w10, #0, 417020 <wcrtomb@plt+0x14710>
  415988:	b	41598c <wcrtomb@plt+0x1307c>
  41598c:	ldur	x8, [x29, #-32]
  415990:	tbnz	x8, #63, 4159ac <wcrtomb@plt+0x1309c>
  415994:	b	415998 <wcrtomb@plt+0x13088>
  415998:	ldur	x8, [x29, #-32]
  41599c:	ldur	x9, [x29, #-56]
  4159a0:	subs	x8, x8, x9
  4159a4:	b.lt	417020 <wcrtomb@plt+0x14710>  // b.tstop
  4159a8:	b	4159ac <wcrtomb@plt+0x1309c>
  4159ac:	mov	w8, #0x1                   	// #1
  4159b0:	cbnz	w8, 415e54 <wcrtomb@plt+0x13544>
  4159b4:	b	4159b8 <wcrtomb@plt+0x130a8>
  4159b8:	mov	w8, wzr
  4159bc:	cbnz	w8, 415c20 <wcrtomb@plt+0x13310>
  4159c0:	b	4159c4 <wcrtomb@plt+0x130b4>
  4159c4:	ldur	x8, [x29, #-40]
  4159c8:	tbz	x8, #63, 415b10 <wcrtomb@plt+0x13200>
  4159cc:	b	4159d0 <wcrtomb@plt+0x130c0>
  4159d0:	ldur	x8, [x29, #-56]
  4159d4:	tbz	x8, #63, 415a7c <wcrtomb@plt+0x1316c>
  4159d8:	b	4159dc <wcrtomb@plt+0x130cc>
  4159dc:	mov	w8, wzr
  4159e0:	cbnz	w8, 415a08 <wcrtomb@plt+0x130f8>
  4159e4:	b	4159e8 <wcrtomb@plt+0x130d8>
  4159e8:	ldur	x8, [x29, #-56]
  4159ec:	ldur	x9, [x29, #-40]
  4159f0:	mov	w10, #0x7f                  	// #127
  4159f4:	mov	w11, w10
  4159f8:	sdiv	x9, x11, x9
  4159fc:	subs	x8, x8, x9
  415a00:	b.lt	415bd8 <wcrtomb@plt+0x132c8>  // b.tstop
  415a04:	b	415bfc <wcrtomb@plt+0x132ec>
  415a08:	mov	w8, wzr
  415a0c:	cbnz	w8, 415a28 <wcrtomb@plt+0x13118>
  415a10:	b	415a14 <wcrtomb@plt+0x13104>
  415a14:	ldur	x8, [x29, #-40]
  415a18:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415a1c:	subs	x8, x8, x9
  415a20:	b.eq	415a38 <wcrtomb@plt+0x13128>  // b.none
  415a24:	b	415a44 <wcrtomb@plt+0x13134>
  415a28:	ldur	x8, [x29, #-40]
  415a2c:	subs	x8, x8, #0x1
  415a30:	b.lt	415a44 <wcrtomb@plt+0x13134>  // b.tstop
  415a34:	b	415a38 <wcrtomb@plt+0x13128>
  415a38:	mov	x0, xzr
  415a3c:	str	x0, [sp, #72]
  415a40:	b	415a64 <wcrtomb@plt+0x13154>
  415a44:	ldur	x8, [x29, #-40]
  415a48:	mov	x9, xzr
  415a4c:	subs	x8, x9, x8
  415a50:	mov	w10, #0x7f                  	// #127
  415a54:	mov	w9, w10
  415a58:	sdiv	x8, x9, x8
  415a5c:	str	x8, [sp, #72]
  415a60:	b	415a64 <wcrtomb@plt+0x13154>
  415a64:	ldr	x8, [sp, #72]
  415a68:	ldur	x9, [x29, #-56]
  415a6c:	mvn	x9, x9
  415a70:	subs	x8, x8, x9
  415a74:	b.le	415bd8 <wcrtomb@plt+0x132c8>
  415a78:	b	415bfc <wcrtomb@plt+0x132ec>
  415a7c:	mov	w8, wzr
  415a80:	cbnz	w8, 415a94 <wcrtomb@plt+0x13184>
  415a84:	b	415a88 <wcrtomb@plt+0x13178>
  415a88:	mov	w8, wzr
  415a8c:	cbnz	w8, 415aa0 <wcrtomb@plt+0x13190>
  415a90:	b	415af4 <wcrtomb@plt+0x131e4>
  415a94:	mov	w8, #0x1                   	// #1
  415a98:	cbnz	w8, 415af4 <wcrtomb@plt+0x131e4>
  415a9c:	b	415aa0 <wcrtomb@plt+0x13190>
  415aa0:	ldur	x8, [x29, #-40]
  415aa4:	adds	x8, x8, #0x1
  415aa8:	b.ne	415af4 <wcrtomb@plt+0x131e4>  // b.any
  415aac:	b	415ab0 <wcrtomb@plt+0x131a0>
  415ab0:	mov	w8, wzr
  415ab4:	cbnz	w8, 415ad0 <wcrtomb@plt+0x131c0>
  415ab8:	b	415abc <wcrtomb@plt+0x131ac>
  415abc:	ldur	x8, [x29, #-56]
  415ac0:	subs	x8, x8, #0x80
  415ac4:	subs	x8, x8, #0x0
  415ac8:	b.gt	415bd8 <wcrtomb@plt+0x132c8>
  415acc:	b	415bfc <wcrtomb@plt+0x132ec>
  415ad0:	ldur	x8, [x29, #-56]
  415ad4:	subs	x8, x8, #0x1
  415ad8:	b.lt	415bfc <wcrtomb@plt+0x132ec>  // b.tstop
  415adc:	b	415ae0 <wcrtomb@plt+0x131d0>
  415ae0:	ldur	x8, [x29, #-56]
  415ae4:	subs	x8, x8, #0x1
  415ae8:	subs	x8, x8, #0x7f
  415aec:	b.gt	415bd8 <wcrtomb@plt+0x132c8>
  415af0:	b	415bfc <wcrtomb@plt+0x132ec>
  415af4:	ldur	x8, [x29, #-40]
  415af8:	mov	x9, #0xffffffffffffff80    	// #-128
  415afc:	sdiv	x8, x9, x8
  415b00:	ldur	x9, [x29, #-56]
  415b04:	subs	x8, x8, x9
  415b08:	b.lt	415bd8 <wcrtomb@plt+0x132c8>  // b.tstop
  415b0c:	b	415bfc <wcrtomb@plt+0x132ec>
  415b10:	ldur	x8, [x29, #-40]
  415b14:	cbnz	x8, 415b28 <wcrtomb@plt+0x13218>
  415b18:	b	415b1c <wcrtomb@plt+0x1320c>
  415b1c:	mov	w8, wzr
  415b20:	cbnz	w8, 415bd8 <wcrtomb@plt+0x132c8>
  415b24:	b	415bfc <wcrtomb@plt+0x132ec>
  415b28:	ldur	x8, [x29, #-56]
  415b2c:	tbz	x8, #63, 415bb8 <wcrtomb@plt+0x132a8>
  415b30:	b	415b34 <wcrtomb@plt+0x13224>
  415b34:	mov	w8, wzr
  415b38:	cbnz	w8, 415b4c <wcrtomb@plt+0x1323c>
  415b3c:	b	415b40 <wcrtomb@plt+0x13230>
  415b40:	mov	w8, wzr
  415b44:	cbnz	w8, 415b58 <wcrtomb@plt+0x13248>
  415b48:	b	415b9c <wcrtomb@plt+0x1328c>
  415b4c:	mov	w8, #0x1                   	// #1
  415b50:	cbnz	w8, 415b9c <wcrtomb@plt+0x1328c>
  415b54:	b	415b58 <wcrtomb@plt+0x13248>
  415b58:	ldur	x8, [x29, #-56]
  415b5c:	adds	x8, x8, #0x1
  415b60:	b.ne	415b9c <wcrtomb@plt+0x1328c>  // b.any
  415b64:	b	415b68 <wcrtomb@plt+0x13258>
  415b68:	mov	w8, wzr
  415b6c:	cbnz	w8, 415b88 <wcrtomb@plt+0x13278>
  415b70:	b	415b74 <wcrtomb@plt+0x13264>
  415b74:	ldur	x8, [x29, #-40]
  415b78:	subs	x8, x8, #0x80
  415b7c:	subs	x8, x8, #0x0
  415b80:	b.gt	415bd8 <wcrtomb@plt+0x132c8>
  415b84:	b	415bfc <wcrtomb@plt+0x132ec>
  415b88:	ldur	x8, [x29, #-40]
  415b8c:	subs	x8, x8, #0x1
  415b90:	subs	x8, x8, #0x7f
  415b94:	b.gt	415bd8 <wcrtomb@plt+0x132c8>
  415b98:	b	415bfc <wcrtomb@plt+0x132ec>
  415b9c:	ldur	x8, [x29, #-56]
  415ba0:	mov	x9, #0xffffffffffffff80    	// #-128
  415ba4:	sdiv	x8, x9, x8
  415ba8:	ldur	x9, [x29, #-40]
  415bac:	subs	x8, x8, x9
  415bb0:	b.lt	415bd8 <wcrtomb@plt+0x132c8>  // b.tstop
  415bb4:	b	415bfc <wcrtomb@plt+0x132ec>
  415bb8:	ldur	x8, [x29, #-40]
  415bbc:	mov	w9, #0x7f                  	// #127
  415bc0:	mov	w10, w9
  415bc4:	sdiv	x8, x10, x8
  415bc8:	ldur	x10, [x29, #-56]
  415bcc:	subs	x8, x8, x10
  415bd0:	b.ge	415bfc <wcrtomb@plt+0x132ec>  // b.tcont
  415bd4:	b	415bd8 <wcrtomb@plt+0x132c8>
  415bd8:	ldur	w8, [x29, #-56]
  415bdc:	ldur	w9, [x29, #-40]
  415be0:	mul	w8, w8, w9
  415be4:	mov	w0, w8
  415be8:	sxtb	x10, w0
  415bec:	stur	x10, [x29, #-64]
  415bf0:	mov	w8, #0x1                   	// #1
  415bf4:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  415bf8:	b	417024 <wcrtomb@plt+0x14714>
  415bfc:	ldur	w8, [x29, #-56]
  415c00:	ldur	w9, [x29, #-40]
  415c04:	mul	w8, w8, w9
  415c08:	mov	w0, w8
  415c0c:	sxtb	x10, w0
  415c10:	stur	x10, [x29, #-64]
  415c14:	mov	w8, wzr
  415c18:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  415c1c:	b	417024 <wcrtomb@plt+0x14714>
  415c20:	ldur	x8, [x29, #-40]
  415c24:	tbz	x8, #63, 415d58 <wcrtomb@plt+0x13448>
  415c28:	b	415c2c <wcrtomb@plt+0x1331c>
  415c2c:	ldur	x8, [x29, #-56]
  415c30:	tbz	x8, #63, 415cd8 <wcrtomb@plt+0x133c8>
  415c34:	b	415c38 <wcrtomb@plt+0x13328>
  415c38:	mov	w8, wzr
  415c3c:	cbnz	w8, 415c64 <wcrtomb@plt+0x13354>
  415c40:	b	415c44 <wcrtomb@plt+0x13334>
  415c44:	ldur	x8, [x29, #-56]
  415c48:	ldur	x9, [x29, #-40]
  415c4c:	mov	w10, #0xff                  	// #255
  415c50:	mov	w11, w10
  415c54:	sdiv	x9, x11, x9
  415c58:	subs	x8, x8, x9
  415c5c:	b.lt	415e0c <wcrtomb@plt+0x134fc>  // b.tstop
  415c60:	b	415e30 <wcrtomb@plt+0x13520>
  415c64:	mov	w8, wzr
  415c68:	cbnz	w8, 415c84 <wcrtomb@plt+0x13374>
  415c6c:	b	415c70 <wcrtomb@plt+0x13360>
  415c70:	ldur	x8, [x29, #-40]
  415c74:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415c78:	subs	x8, x8, x9
  415c7c:	b.eq	415c94 <wcrtomb@plt+0x13384>  // b.none
  415c80:	b	415ca0 <wcrtomb@plt+0x13390>
  415c84:	ldur	x8, [x29, #-40]
  415c88:	subs	x8, x8, #0x1
  415c8c:	b.lt	415ca0 <wcrtomb@plt+0x13390>  // b.tstop
  415c90:	b	415c94 <wcrtomb@plt+0x13384>
  415c94:	mov	x0, xzr
  415c98:	str	x0, [sp, #64]
  415c9c:	b	415cc0 <wcrtomb@plt+0x133b0>
  415ca0:	ldur	x8, [x29, #-40]
  415ca4:	mov	x9, xzr
  415ca8:	subs	x8, x9, x8
  415cac:	mov	w10, #0xff                  	// #255
  415cb0:	mov	w9, w10
  415cb4:	sdiv	x8, x9, x8
  415cb8:	str	x8, [sp, #64]
  415cbc:	b	415cc0 <wcrtomb@plt+0x133b0>
  415cc0:	ldr	x8, [sp, #64]
  415cc4:	ldur	x9, [x29, #-56]
  415cc8:	mvn	x9, x9
  415ccc:	subs	x8, x8, x9
  415cd0:	b.le	415e0c <wcrtomb@plt+0x134fc>
  415cd4:	b	415e30 <wcrtomb@plt+0x13520>
  415cd8:	mov	w8, wzr
  415cdc:	cbnz	w8, 415cf0 <wcrtomb@plt+0x133e0>
  415ce0:	b	415ce4 <wcrtomb@plt+0x133d4>
  415ce4:	mov	w8, wzr
  415ce8:	cbnz	w8, 415cfc <wcrtomb@plt+0x133ec>
  415cec:	b	415d48 <wcrtomb@plt+0x13438>
  415cf0:	mov	w8, #0x1                   	// #1
  415cf4:	cbnz	w8, 415d48 <wcrtomb@plt+0x13438>
  415cf8:	b	415cfc <wcrtomb@plt+0x133ec>
  415cfc:	ldur	x8, [x29, #-40]
  415d00:	adds	x8, x8, #0x1
  415d04:	b.ne	415d48 <wcrtomb@plt+0x13438>  // b.any
  415d08:	b	415d0c <wcrtomb@plt+0x133fc>
  415d0c:	mov	w8, wzr
  415d10:	cbnz	w8, 415d28 <wcrtomb@plt+0x13418>
  415d14:	b	415d18 <wcrtomb@plt+0x13408>
  415d18:	ldur	x8, [x29, #-56]
  415d1c:	subs	x8, x8, #0x0
  415d20:	b.gt	415e0c <wcrtomb@plt+0x134fc>
  415d24:	b	415e30 <wcrtomb@plt+0x13520>
  415d28:	ldur	x8, [x29, #-56]
  415d2c:	subs	x8, x8, #0x1
  415d30:	b.lt	415e30 <wcrtomb@plt+0x13520>  // b.tstop
  415d34:	b	415d38 <wcrtomb@plt+0x13428>
  415d38:	ldur	x8, [x29, #-56]
  415d3c:	subs	x8, x8, #0x1
  415d40:	tbz	x8, #63, 415e0c <wcrtomb@plt+0x134fc>
  415d44:	b	415e30 <wcrtomb@plt+0x13520>
  415d48:	ldur	x8, [x29, #-56]
  415d4c:	subs	x8, x8, #0x0
  415d50:	b.gt	415e0c <wcrtomb@plt+0x134fc>
  415d54:	b	415e30 <wcrtomb@plt+0x13520>
  415d58:	ldur	x8, [x29, #-40]
  415d5c:	cbnz	x8, 415d70 <wcrtomb@plt+0x13460>
  415d60:	b	415d64 <wcrtomb@plt+0x13454>
  415d64:	mov	w8, wzr
  415d68:	cbnz	w8, 415e0c <wcrtomb@plt+0x134fc>
  415d6c:	b	415e30 <wcrtomb@plt+0x13520>
  415d70:	ldur	x8, [x29, #-56]
  415d74:	tbz	x8, #63, 415dec <wcrtomb@plt+0x134dc>
  415d78:	b	415d7c <wcrtomb@plt+0x1346c>
  415d7c:	mov	w8, wzr
  415d80:	cbnz	w8, 415d94 <wcrtomb@plt+0x13484>
  415d84:	b	415d88 <wcrtomb@plt+0x13478>
  415d88:	mov	w8, wzr
  415d8c:	cbnz	w8, 415da0 <wcrtomb@plt+0x13490>
  415d90:	b	415ddc <wcrtomb@plt+0x134cc>
  415d94:	mov	w8, #0x1                   	// #1
  415d98:	cbnz	w8, 415ddc <wcrtomb@plt+0x134cc>
  415d9c:	b	415da0 <wcrtomb@plt+0x13490>
  415da0:	ldur	x8, [x29, #-56]
  415da4:	adds	x8, x8, #0x1
  415da8:	b.ne	415ddc <wcrtomb@plt+0x134cc>  // b.any
  415dac:	b	415db0 <wcrtomb@plt+0x134a0>
  415db0:	mov	w8, wzr
  415db4:	cbnz	w8, 415dcc <wcrtomb@plt+0x134bc>
  415db8:	b	415dbc <wcrtomb@plt+0x134ac>
  415dbc:	ldur	x8, [x29, #-40]
  415dc0:	subs	x8, x8, #0x0
  415dc4:	b.gt	415e0c <wcrtomb@plt+0x134fc>
  415dc8:	b	415e30 <wcrtomb@plt+0x13520>
  415dcc:	ldur	x8, [x29, #-40]
  415dd0:	subs	x8, x8, #0x1
  415dd4:	tbz	x8, #63, 415e0c <wcrtomb@plt+0x134fc>
  415dd8:	b	415e30 <wcrtomb@plt+0x13520>
  415ddc:	ldur	x8, [x29, #-40]
  415de0:	subs	x8, x8, #0x0
  415de4:	b.gt	415e0c <wcrtomb@plt+0x134fc>
  415de8:	b	415e30 <wcrtomb@plt+0x13520>
  415dec:	ldur	x8, [x29, #-40]
  415df0:	mov	w9, #0xff                  	// #255
  415df4:	mov	w10, w9
  415df8:	sdiv	x8, x10, x8
  415dfc:	ldur	x10, [x29, #-56]
  415e00:	subs	x8, x8, x10
  415e04:	b.ge	415e30 <wcrtomb@plt+0x13520>  // b.tcont
  415e08:	b	415e0c <wcrtomb@plt+0x134fc>
  415e0c:	ldur	w8, [x29, #-56]
  415e10:	ldur	w9, [x29, #-40]
  415e14:	mul	w8, w8, w9
  415e18:	mov	w0, w8
  415e1c:	and	x10, x0, #0xff
  415e20:	stur	x10, [x29, #-64]
  415e24:	mov	w8, #0x1                   	// #1
  415e28:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  415e2c:	b	417024 <wcrtomb@plt+0x14714>
  415e30:	ldur	w8, [x29, #-56]
  415e34:	ldur	w9, [x29, #-40]
  415e38:	mul	w8, w8, w9
  415e3c:	mov	w0, w8
  415e40:	and	x10, x0, #0xff
  415e44:	stur	x10, [x29, #-64]
  415e48:	mov	w8, wzr
  415e4c:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  415e50:	b	417024 <wcrtomb@plt+0x14714>
  415e54:	mov	w8, #0x1                   	// #1
  415e58:	cbnz	w8, 4162fc <wcrtomb@plt+0x139ec>
  415e5c:	b	415e60 <wcrtomb@plt+0x13550>
  415e60:	mov	w8, wzr
  415e64:	cbnz	w8, 4160c8 <wcrtomb@plt+0x137b8>
  415e68:	b	415e6c <wcrtomb@plt+0x1355c>
  415e6c:	ldur	x8, [x29, #-40]
  415e70:	tbz	x8, #63, 415fb8 <wcrtomb@plt+0x136a8>
  415e74:	b	415e78 <wcrtomb@plt+0x13568>
  415e78:	ldur	x8, [x29, #-56]
  415e7c:	tbz	x8, #63, 415f24 <wcrtomb@plt+0x13614>
  415e80:	b	415e84 <wcrtomb@plt+0x13574>
  415e84:	mov	w8, wzr
  415e88:	cbnz	w8, 415eb0 <wcrtomb@plt+0x135a0>
  415e8c:	b	415e90 <wcrtomb@plt+0x13580>
  415e90:	ldur	x8, [x29, #-56]
  415e94:	ldur	x9, [x29, #-40]
  415e98:	mov	w10, #0x7fff                	// #32767
  415e9c:	mov	w11, w10
  415ea0:	sdiv	x9, x11, x9
  415ea4:	subs	x8, x8, x9
  415ea8:	b.lt	416080 <wcrtomb@plt+0x13770>  // b.tstop
  415eac:	b	4160a4 <wcrtomb@plt+0x13794>
  415eb0:	mov	w8, wzr
  415eb4:	cbnz	w8, 415ed0 <wcrtomb@plt+0x135c0>
  415eb8:	b	415ebc <wcrtomb@plt+0x135ac>
  415ebc:	ldur	x8, [x29, #-40]
  415ec0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  415ec4:	subs	x8, x8, x9
  415ec8:	b.eq	415ee0 <wcrtomb@plt+0x135d0>  // b.none
  415ecc:	b	415eec <wcrtomb@plt+0x135dc>
  415ed0:	ldur	x8, [x29, #-40]
  415ed4:	subs	x8, x8, #0x1
  415ed8:	b.lt	415eec <wcrtomb@plt+0x135dc>  // b.tstop
  415edc:	b	415ee0 <wcrtomb@plt+0x135d0>
  415ee0:	mov	x0, xzr
  415ee4:	str	x0, [sp, #56]
  415ee8:	b	415f0c <wcrtomb@plt+0x135fc>
  415eec:	ldur	x8, [x29, #-40]
  415ef0:	mov	x9, xzr
  415ef4:	subs	x8, x9, x8
  415ef8:	mov	w10, #0x7fff                	// #32767
  415efc:	mov	w9, w10
  415f00:	sdiv	x8, x9, x8
  415f04:	str	x8, [sp, #56]
  415f08:	b	415f0c <wcrtomb@plt+0x135fc>
  415f0c:	ldr	x8, [sp, #56]
  415f10:	ldur	x9, [x29, #-56]
  415f14:	mvn	x9, x9
  415f18:	subs	x8, x8, x9
  415f1c:	b.le	416080 <wcrtomb@plt+0x13770>
  415f20:	b	4160a4 <wcrtomb@plt+0x13794>
  415f24:	mov	w8, wzr
  415f28:	cbnz	w8, 415f3c <wcrtomb@plt+0x1362c>
  415f2c:	b	415f30 <wcrtomb@plt+0x13620>
  415f30:	mov	w8, wzr
  415f34:	cbnz	w8, 415f48 <wcrtomb@plt+0x13638>
  415f38:	b	415f9c <wcrtomb@plt+0x1368c>
  415f3c:	mov	w8, #0x1                   	// #1
  415f40:	cbnz	w8, 415f9c <wcrtomb@plt+0x1368c>
  415f44:	b	415f48 <wcrtomb@plt+0x13638>
  415f48:	ldur	x8, [x29, #-40]
  415f4c:	adds	x8, x8, #0x1
  415f50:	b.ne	415f9c <wcrtomb@plt+0x1368c>  // b.any
  415f54:	b	415f58 <wcrtomb@plt+0x13648>
  415f58:	mov	w8, wzr
  415f5c:	cbnz	w8, 415f78 <wcrtomb@plt+0x13668>
  415f60:	b	415f64 <wcrtomb@plt+0x13654>
  415f64:	ldur	x8, [x29, #-56]
  415f68:	subs	x8, x8, #0x8, lsl #12
  415f6c:	subs	x8, x8, #0x0
  415f70:	b.gt	416080 <wcrtomb@plt+0x13770>
  415f74:	b	4160a4 <wcrtomb@plt+0x13794>
  415f78:	ldur	x8, [x29, #-56]
  415f7c:	subs	x8, x8, #0x1
  415f80:	b.lt	4160a4 <wcrtomb@plt+0x13794>  // b.tstop
  415f84:	b	415f88 <wcrtomb@plt+0x13678>
  415f88:	ldur	x8, [x29, #-56]
  415f8c:	subs	x8, x8, #0x1
  415f90:	subs	x8, x8, #0x8, lsl #12
  415f94:	b.ge	416080 <wcrtomb@plt+0x13770>  // b.tcont
  415f98:	b	4160a4 <wcrtomb@plt+0x13794>
  415f9c:	ldur	x8, [x29, #-40]
  415fa0:	mov	x9, #0xffffffffffff8000    	// #-32768
  415fa4:	sdiv	x8, x9, x8
  415fa8:	ldur	x9, [x29, #-56]
  415fac:	subs	x8, x8, x9
  415fb0:	b.lt	416080 <wcrtomb@plt+0x13770>  // b.tstop
  415fb4:	b	4160a4 <wcrtomb@plt+0x13794>
  415fb8:	ldur	x8, [x29, #-40]
  415fbc:	cbnz	x8, 415fd0 <wcrtomb@plt+0x136c0>
  415fc0:	b	415fc4 <wcrtomb@plt+0x136b4>
  415fc4:	mov	w8, wzr
  415fc8:	cbnz	w8, 416080 <wcrtomb@plt+0x13770>
  415fcc:	b	4160a4 <wcrtomb@plt+0x13794>
  415fd0:	ldur	x8, [x29, #-56]
  415fd4:	tbz	x8, #63, 416060 <wcrtomb@plt+0x13750>
  415fd8:	b	415fdc <wcrtomb@plt+0x136cc>
  415fdc:	mov	w8, wzr
  415fe0:	cbnz	w8, 415ff4 <wcrtomb@plt+0x136e4>
  415fe4:	b	415fe8 <wcrtomb@plt+0x136d8>
  415fe8:	mov	w8, wzr
  415fec:	cbnz	w8, 416000 <wcrtomb@plt+0x136f0>
  415ff0:	b	416044 <wcrtomb@plt+0x13734>
  415ff4:	mov	w8, #0x1                   	// #1
  415ff8:	cbnz	w8, 416044 <wcrtomb@plt+0x13734>
  415ffc:	b	416000 <wcrtomb@plt+0x136f0>
  416000:	ldur	x8, [x29, #-56]
  416004:	adds	x8, x8, #0x1
  416008:	b.ne	416044 <wcrtomb@plt+0x13734>  // b.any
  41600c:	b	416010 <wcrtomb@plt+0x13700>
  416010:	mov	w8, wzr
  416014:	cbnz	w8, 416030 <wcrtomb@plt+0x13720>
  416018:	b	41601c <wcrtomb@plt+0x1370c>
  41601c:	ldur	x8, [x29, #-40]
  416020:	subs	x8, x8, #0x8, lsl #12
  416024:	subs	x8, x8, #0x0
  416028:	b.gt	416080 <wcrtomb@plt+0x13770>
  41602c:	b	4160a4 <wcrtomb@plt+0x13794>
  416030:	ldur	x8, [x29, #-40]
  416034:	subs	x8, x8, #0x1
  416038:	subs	x8, x8, #0x8, lsl #12
  41603c:	b.ge	416080 <wcrtomb@plt+0x13770>  // b.tcont
  416040:	b	4160a4 <wcrtomb@plt+0x13794>
  416044:	ldur	x8, [x29, #-56]
  416048:	mov	x9, #0xffffffffffff8000    	// #-32768
  41604c:	sdiv	x8, x9, x8
  416050:	ldur	x9, [x29, #-40]
  416054:	subs	x8, x8, x9
  416058:	b.lt	416080 <wcrtomb@plt+0x13770>  // b.tstop
  41605c:	b	4160a4 <wcrtomb@plt+0x13794>
  416060:	ldur	x8, [x29, #-40]
  416064:	mov	w9, #0x7fff                	// #32767
  416068:	mov	w10, w9
  41606c:	sdiv	x8, x10, x8
  416070:	ldur	x10, [x29, #-56]
  416074:	subs	x8, x8, x10
  416078:	b.ge	4160a4 <wcrtomb@plt+0x13794>  // b.tcont
  41607c:	b	416080 <wcrtomb@plt+0x13770>
  416080:	ldur	w8, [x29, #-56]
  416084:	ldur	w9, [x29, #-40]
  416088:	mul	w8, w8, w9
  41608c:	mov	w0, w8
  416090:	sxth	x10, w0
  416094:	stur	x10, [x29, #-64]
  416098:	mov	w8, #0x1                   	// #1
  41609c:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  4160a0:	b	417024 <wcrtomb@plt+0x14714>
  4160a4:	ldur	w8, [x29, #-56]
  4160a8:	ldur	w9, [x29, #-40]
  4160ac:	mul	w8, w8, w9
  4160b0:	mov	w0, w8
  4160b4:	sxth	x10, w0
  4160b8:	stur	x10, [x29, #-64]
  4160bc:	mov	w8, wzr
  4160c0:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  4160c4:	b	417024 <wcrtomb@plt+0x14714>
  4160c8:	ldur	x8, [x29, #-40]
  4160cc:	tbz	x8, #63, 416200 <wcrtomb@plt+0x138f0>
  4160d0:	b	4160d4 <wcrtomb@plt+0x137c4>
  4160d4:	ldur	x8, [x29, #-56]
  4160d8:	tbz	x8, #63, 416180 <wcrtomb@plt+0x13870>
  4160dc:	b	4160e0 <wcrtomb@plt+0x137d0>
  4160e0:	mov	w8, wzr
  4160e4:	cbnz	w8, 41610c <wcrtomb@plt+0x137fc>
  4160e8:	b	4160ec <wcrtomb@plt+0x137dc>
  4160ec:	ldur	x8, [x29, #-56]
  4160f0:	ldur	x9, [x29, #-40]
  4160f4:	mov	w10, #0xffff                	// #65535
  4160f8:	mov	w11, w10
  4160fc:	sdiv	x9, x11, x9
  416100:	subs	x8, x8, x9
  416104:	b.lt	4162b4 <wcrtomb@plt+0x139a4>  // b.tstop
  416108:	b	4162d8 <wcrtomb@plt+0x139c8>
  41610c:	mov	w8, wzr
  416110:	cbnz	w8, 41612c <wcrtomb@plt+0x1381c>
  416114:	b	416118 <wcrtomb@plt+0x13808>
  416118:	ldur	x8, [x29, #-40]
  41611c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416120:	subs	x8, x8, x9
  416124:	b.eq	41613c <wcrtomb@plt+0x1382c>  // b.none
  416128:	b	416148 <wcrtomb@plt+0x13838>
  41612c:	ldur	x8, [x29, #-40]
  416130:	subs	x8, x8, #0x1
  416134:	b.lt	416148 <wcrtomb@plt+0x13838>  // b.tstop
  416138:	b	41613c <wcrtomb@plt+0x1382c>
  41613c:	mov	x0, xzr
  416140:	str	x0, [sp, #48]
  416144:	b	416168 <wcrtomb@plt+0x13858>
  416148:	ldur	x8, [x29, #-40]
  41614c:	mov	x9, xzr
  416150:	subs	x8, x9, x8
  416154:	mov	w10, #0xffff                	// #65535
  416158:	mov	w9, w10
  41615c:	sdiv	x8, x9, x8
  416160:	str	x8, [sp, #48]
  416164:	b	416168 <wcrtomb@plt+0x13858>
  416168:	ldr	x8, [sp, #48]
  41616c:	ldur	x9, [x29, #-56]
  416170:	mvn	x9, x9
  416174:	subs	x8, x8, x9
  416178:	b.le	4162b4 <wcrtomb@plt+0x139a4>
  41617c:	b	4162d8 <wcrtomb@plt+0x139c8>
  416180:	mov	w8, wzr
  416184:	cbnz	w8, 416198 <wcrtomb@plt+0x13888>
  416188:	b	41618c <wcrtomb@plt+0x1387c>
  41618c:	mov	w8, wzr
  416190:	cbnz	w8, 4161a4 <wcrtomb@plt+0x13894>
  416194:	b	4161f0 <wcrtomb@plt+0x138e0>
  416198:	mov	w8, #0x1                   	// #1
  41619c:	cbnz	w8, 4161f0 <wcrtomb@plt+0x138e0>
  4161a0:	b	4161a4 <wcrtomb@plt+0x13894>
  4161a4:	ldur	x8, [x29, #-40]
  4161a8:	adds	x8, x8, #0x1
  4161ac:	b.ne	4161f0 <wcrtomb@plt+0x138e0>  // b.any
  4161b0:	b	4161b4 <wcrtomb@plt+0x138a4>
  4161b4:	mov	w8, wzr
  4161b8:	cbnz	w8, 4161d0 <wcrtomb@plt+0x138c0>
  4161bc:	b	4161c0 <wcrtomb@plt+0x138b0>
  4161c0:	ldur	x8, [x29, #-56]
  4161c4:	subs	x8, x8, #0x0
  4161c8:	b.gt	4162b4 <wcrtomb@plt+0x139a4>
  4161cc:	b	4162d8 <wcrtomb@plt+0x139c8>
  4161d0:	ldur	x8, [x29, #-56]
  4161d4:	subs	x8, x8, #0x1
  4161d8:	b.lt	4162d8 <wcrtomb@plt+0x139c8>  // b.tstop
  4161dc:	b	4161e0 <wcrtomb@plt+0x138d0>
  4161e0:	ldur	x8, [x29, #-56]
  4161e4:	subs	x8, x8, #0x1
  4161e8:	tbz	x8, #63, 4162b4 <wcrtomb@plt+0x139a4>
  4161ec:	b	4162d8 <wcrtomb@plt+0x139c8>
  4161f0:	ldur	x8, [x29, #-56]
  4161f4:	subs	x8, x8, #0x0
  4161f8:	b.gt	4162b4 <wcrtomb@plt+0x139a4>
  4161fc:	b	4162d8 <wcrtomb@plt+0x139c8>
  416200:	ldur	x8, [x29, #-40]
  416204:	cbnz	x8, 416218 <wcrtomb@plt+0x13908>
  416208:	b	41620c <wcrtomb@plt+0x138fc>
  41620c:	mov	w8, wzr
  416210:	cbnz	w8, 4162b4 <wcrtomb@plt+0x139a4>
  416214:	b	4162d8 <wcrtomb@plt+0x139c8>
  416218:	ldur	x8, [x29, #-56]
  41621c:	tbz	x8, #63, 416294 <wcrtomb@plt+0x13984>
  416220:	b	416224 <wcrtomb@plt+0x13914>
  416224:	mov	w8, wzr
  416228:	cbnz	w8, 41623c <wcrtomb@plt+0x1392c>
  41622c:	b	416230 <wcrtomb@plt+0x13920>
  416230:	mov	w8, wzr
  416234:	cbnz	w8, 416248 <wcrtomb@plt+0x13938>
  416238:	b	416284 <wcrtomb@plt+0x13974>
  41623c:	mov	w8, #0x1                   	// #1
  416240:	cbnz	w8, 416284 <wcrtomb@plt+0x13974>
  416244:	b	416248 <wcrtomb@plt+0x13938>
  416248:	ldur	x8, [x29, #-56]
  41624c:	adds	x8, x8, #0x1
  416250:	b.ne	416284 <wcrtomb@plt+0x13974>  // b.any
  416254:	b	416258 <wcrtomb@plt+0x13948>
  416258:	mov	w8, wzr
  41625c:	cbnz	w8, 416274 <wcrtomb@plt+0x13964>
  416260:	b	416264 <wcrtomb@plt+0x13954>
  416264:	ldur	x8, [x29, #-40]
  416268:	subs	x8, x8, #0x0
  41626c:	b.gt	4162b4 <wcrtomb@plt+0x139a4>
  416270:	b	4162d8 <wcrtomb@plt+0x139c8>
  416274:	ldur	x8, [x29, #-40]
  416278:	subs	x8, x8, #0x1
  41627c:	tbz	x8, #63, 4162b4 <wcrtomb@plt+0x139a4>
  416280:	b	4162d8 <wcrtomb@plt+0x139c8>
  416284:	ldur	x8, [x29, #-40]
  416288:	subs	x8, x8, #0x0
  41628c:	b.gt	4162b4 <wcrtomb@plt+0x139a4>
  416290:	b	4162d8 <wcrtomb@plt+0x139c8>
  416294:	ldur	x8, [x29, #-40]
  416298:	mov	w9, #0xffff                	// #65535
  41629c:	mov	w10, w9
  4162a0:	sdiv	x8, x10, x8
  4162a4:	ldur	x10, [x29, #-56]
  4162a8:	subs	x8, x8, x10
  4162ac:	b.ge	4162d8 <wcrtomb@plt+0x139c8>  // b.tcont
  4162b0:	b	4162b4 <wcrtomb@plt+0x139a4>
  4162b4:	ldur	w8, [x29, #-56]
  4162b8:	ldur	w9, [x29, #-40]
  4162bc:	mul	w8, w8, w9
  4162c0:	mov	w0, w8
  4162c4:	and	x10, x0, #0xffff
  4162c8:	stur	x10, [x29, #-64]
  4162cc:	mov	w8, #0x1                   	// #1
  4162d0:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  4162d4:	b	417024 <wcrtomb@plt+0x14714>
  4162d8:	ldur	w8, [x29, #-56]
  4162dc:	ldur	w9, [x29, #-40]
  4162e0:	mul	w8, w8, w9
  4162e4:	mov	w0, w8
  4162e8:	and	x10, x0, #0xffff
  4162ec:	stur	x10, [x29, #-64]
  4162f0:	mov	w8, wzr
  4162f4:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  4162f8:	b	417024 <wcrtomb@plt+0x14714>
  4162fc:	mov	w8, #0x1                   	// #1
  416300:	cbnz	w8, 4167b4 <wcrtomb@plt+0x13ea4>
  416304:	b	416308 <wcrtomb@plt+0x139f8>
  416308:	mov	w8, wzr
  41630c:	cbnz	w8, 416588 <wcrtomb@plt+0x13c78>
  416310:	b	416314 <wcrtomb@plt+0x13a04>
  416314:	ldur	x8, [x29, #-40]
  416318:	tbz	x8, #63, 41646c <wcrtomb@plt+0x13b5c>
  41631c:	b	416320 <wcrtomb@plt+0x13a10>
  416320:	ldur	x8, [x29, #-56]
  416324:	tbz	x8, #63, 4163cc <wcrtomb@plt+0x13abc>
  416328:	b	41632c <wcrtomb@plt+0x13a1c>
  41632c:	mov	w8, wzr
  416330:	cbnz	w8, 416358 <wcrtomb@plt+0x13a48>
  416334:	b	416338 <wcrtomb@plt+0x13a28>
  416338:	ldur	x8, [x29, #-56]
  41633c:	ldur	x9, [x29, #-40]
  416340:	mov	w10, #0x7fffffff            	// #2147483647
  416344:	mov	w11, w10
  416348:	sdiv	x9, x11, x9
  41634c:	subs	x8, x8, x9
  416350:	b.lt	416540 <wcrtomb@plt+0x13c30>  // b.tstop
  416354:	b	416564 <wcrtomb@plt+0x13c54>
  416358:	mov	w8, wzr
  41635c:	cbnz	w8, 416378 <wcrtomb@plt+0x13a68>
  416360:	b	416364 <wcrtomb@plt+0x13a54>
  416364:	ldur	x8, [x29, #-40]
  416368:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41636c:	subs	x8, x8, x9
  416370:	b.eq	416388 <wcrtomb@plt+0x13a78>  // b.none
  416374:	b	416394 <wcrtomb@plt+0x13a84>
  416378:	ldur	x8, [x29, #-40]
  41637c:	subs	x8, x8, #0x1
  416380:	b.lt	416394 <wcrtomb@plt+0x13a84>  // b.tstop
  416384:	b	416388 <wcrtomb@plt+0x13a78>
  416388:	mov	x0, xzr
  41638c:	str	x0, [sp, #40]
  416390:	b	4163b4 <wcrtomb@plt+0x13aa4>
  416394:	ldur	x8, [x29, #-40]
  416398:	mov	x9, xzr
  41639c:	subs	x8, x9, x8
  4163a0:	mov	w10, #0x7fffffff            	// #2147483647
  4163a4:	mov	w9, w10
  4163a8:	sdiv	x8, x9, x8
  4163ac:	str	x8, [sp, #40]
  4163b0:	b	4163b4 <wcrtomb@plt+0x13aa4>
  4163b4:	ldr	x8, [sp, #40]
  4163b8:	ldur	x9, [x29, #-56]
  4163bc:	mvn	x9, x9
  4163c0:	subs	x8, x8, x9
  4163c4:	b.le	416540 <wcrtomb@plt+0x13c30>
  4163c8:	b	416564 <wcrtomb@plt+0x13c54>
  4163cc:	mov	w8, wzr
  4163d0:	cbnz	w8, 4163e4 <wcrtomb@plt+0x13ad4>
  4163d4:	b	4163d8 <wcrtomb@plt+0x13ac8>
  4163d8:	mov	w8, wzr
  4163dc:	cbnz	w8, 4163f0 <wcrtomb@plt+0x13ae0>
  4163e0:	b	416450 <wcrtomb@plt+0x13b40>
  4163e4:	mov	w8, #0x1                   	// #1
  4163e8:	cbnz	w8, 416450 <wcrtomb@plt+0x13b40>
  4163ec:	b	4163f0 <wcrtomb@plt+0x13ae0>
  4163f0:	ldur	x8, [x29, #-40]
  4163f4:	adds	x8, x8, #0x1
  4163f8:	b.ne	416450 <wcrtomb@plt+0x13b40>  // b.any
  4163fc:	b	416400 <wcrtomb@plt+0x13af0>
  416400:	mov	w8, wzr
  416404:	cbnz	w8, 416424 <wcrtomb@plt+0x13b14>
  416408:	b	41640c <wcrtomb@plt+0x13afc>
  41640c:	ldur	x8, [x29, #-56]
  416410:	mov	x9, #0xffffffff80000000    	// #-2147483648
  416414:	add	x8, x8, x9
  416418:	subs	x8, x8, #0x0
  41641c:	b.gt	416540 <wcrtomb@plt+0x13c30>
  416420:	b	416564 <wcrtomb@plt+0x13c54>
  416424:	ldur	x8, [x29, #-56]
  416428:	subs	x8, x8, #0x1
  41642c:	b.lt	416564 <wcrtomb@plt+0x13c54>  // b.tstop
  416430:	b	416434 <wcrtomb@plt+0x13b24>
  416434:	ldur	x8, [x29, #-56]
  416438:	subs	x8, x8, #0x1
  41643c:	mov	w9, #0x7fffffff            	// #2147483647
  416440:	mov	w10, w9
  416444:	subs	x8, x8, x10
  416448:	b.gt	416540 <wcrtomb@plt+0x13c30>
  41644c:	b	416564 <wcrtomb@plt+0x13c54>
  416450:	ldur	x8, [x29, #-40]
  416454:	mov	x9, #0xffffffff80000000    	// #-2147483648
  416458:	sdiv	x8, x9, x8
  41645c:	ldur	x9, [x29, #-56]
  416460:	subs	x8, x8, x9
  416464:	b.lt	416540 <wcrtomb@plt+0x13c30>  // b.tstop
  416468:	b	416564 <wcrtomb@plt+0x13c54>
  41646c:	ldur	x8, [x29, #-40]
  416470:	cbnz	x8, 416484 <wcrtomb@plt+0x13b74>
  416474:	b	416478 <wcrtomb@plt+0x13b68>
  416478:	mov	w8, wzr
  41647c:	cbnz	w8, 416540 <wcrtomb@plt+0x13c30>
  416480:	b	416564 <wcrtomb@plt+0x13c54>
  416484:	ldur	x8, [x29, #-56]
  416488:	tbz	x8, #63, 416520 <wcrtomb@plt+0x13c10>
  41648c:	b	416490 <wcrtomb@plt+0x13b80>
  416490:	mov	w8, wzr
  416494:	cbnz	w8, 4164a8 <wcrtomb@plt+0x13b98>
  416498:	b	41649c <wcrtomb@plt+0x13b8c>
  41649c:	mov	w8, wzr
  4164a0:	cbnz	w8, 4164b4 <wcrtomb@plt+0x13ba4>
  4164a4:	b	416504 <wcrtomb@plt+0x13bf4>
  4164a8:	mov	w8, #0x1                   	// #1
  4164ac:	cbnz	w8, 416504 <wcrtomb@plt+0x13bf4>
  4164b0:	b	4164b4 <wcrtomb@plt+0x13ba4>
  4164b4:	ldur	x8, [x29, #-56]
  4164b8:	adds	x8, x8, #0x1
  4164bc:	b.ne	416504 <wcrtomb@plt+0x13bf4>  // b.any
  4164c0:	b	4164c4 <wcrtomb@plt+0x13bb4>
  4164c4:	mov	w8, wzr
  4164c8:	cbnz	w8, 4164e8 <wcrtomb@plt+0x13bd8>
  4164cc:	b	4164d0 <wcrtomb@plt+0x13bc0>
  4164d0:	ldur	x8, [x29, #-40]
  4164d4:	mov	x9, #0xffffffff80000000    	// #-2147483648
  4164d8:	add	x8, x8, x9
  4164dc:	subs	x8, x8, #0x0
  4164e0:	b.gt	416540 <wcrtomb@plt+0x13c30>
  4164e4:	b	416564 <wcrtomb@plt+0x13c54>
  4164e8:	ldur	x8, [x29, #-40]
  4164ec:	subs	x8, x8, #0x1
  4164f0:	mov	w9, #0x7fffffff            	// #2147483647
  4164f4:	mov	w10, w9
  4164f8:	subs	x8, x8, x10
  4164fc:	b.gt	416540 <wcrtomb@plt+0x13c30>
  416500:	b	416564 <wcrtomb@plt+0x13c54>
  416504:	ldur	x8, [x29, #-56]
  416508:	mov	x9, #0xffffffff80000000    	// #-2147483648
  41650c:	sdiv	x8, x9, x8
  416510:	ldur	x9, [x29, #-40]
  416514:	subs	x8, x8, x9
  416518:	b.lt	416540 <wcrtomb@plt+0x13c30>  // b.tstop
  41651c:	b	416564 <wcrtomb@plt+0x13c54>
  416520:	ldur	x8, [x29, #-40]
  416524:	mov	w9, #0x7fffffff            	// #2147483647
  416528:	mov	w10, w9
  41652c:	sdiv	x8, x10, x8
  416530:	ldur	x10, [x29, #-56]
  416534:	subs	x8, x8, x10
  416538:	b.ge	416564 <wcrtomb@plt+0x13c54>  // b.tcont
  41653c:	b	416540 <wcrtomb@plt+0x13c30>
  416540:	ldur	w8, [x29, #-56]
  416544:	ldur	w9, [x29, #-40]
  416548:	mul	w8, w8, w9
  41654c:	mov	w0, w8
  416550:	sxtw	x10, w0
  416554:	stur	x10, [x29, #-64]
  416558:	mov	w8, #0x1                   	// #1
  41655c:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  416560:	b	417024 <wcrtomb@plt+0x14714>
  416564:	ldur	w8, [x29, #-56]
  416568:	ldur	w9, [x29, #-40]
  41656c:	mul	w8, w8, w9
  416570:	mov	w0, w8
  416574:	sxtw	x10, w0
  416578:	stur	x10, [x29, #-64]
  41657c:	mov	w8, wzr
  416580:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  416584:	b	417024 <wcrtomb@plt+0x14714>
  416588:	ldur	x8, [x29, #-40]
  41658c:	tbz	x8, #63, 4166c0 <wcrtomb@plt+0x13db0>
  416590:	b	416594 <wcrtomb@plt+0x13c84>
  416594:	ldur	x8, [x29, #-56]
  416598:	tbz	x8, #63, 416640 <wcrtomb@plt+0x13d30>
  41659c:	b	4165a0 <wcrtomb@plt+0x13c90>
  4165a0:	mov	w8, wzr
  4165a4:	cbnz	w8, 4165cc <wcrtomb@plt+0x13cbc>
  4165a8:	b	4165ac <wcrtomb@plt+0x13c9c>
  4165ac:	ldur	x8, [x29, #-56]
  4165b0:	ldur	x9, [x29, #-40]
  4165b4:	mov	w10, #0xffffffff            	// #-1
  4165b8:	mov	w11, w10
  4165bc:	sdiv	x9, x11, x9
  4165c0:	subs	x8, x8, x9
  4165c4:	b.lt	416774 <wcrtomb@plt+0x13e64>  // b.tstop
  4165c8:	b	416794 <wcrtomb@plt+0x13e84>
  4165cc:	mov	w8, wzr
  4165d0:	cbnz	w8, 4165ec <wcrtomb@plt+0x13cdc>
  4165d4:	b	4165d8 <wcrtomb@plt+0x13cc8>
  4165d8:	ldur	x8, [x29, #-40]
  4165dc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4165e0:	subs	x8, x8, x9
  4165e4:	b.eq	4165fc <wcrtomb@plt+0x13cec>  // b.none
  4165e8:	b	416608 <wcrtomb@plt+0x13cf8>
  4165ec:	ldur	x8, [x29, #-40]
  4165f0:	subs	x8, x8, #0x1
  4165f4:	b.lt	416608 <wcrtomb@plt+0x13cf8>  // b.tstop
  4165f8:	b	4165fc <wcrtomb@plt+0x13cec>
  4165fc:	mov	x0, xzr
  416600:	str	x0, [sp, #32]
  416604:	b	416628 <wcrtomb@plt+0x13d18>
  416608:	ldur	x8, [x29, #-40]
  41660c:	mov	x9, xzr
  416610:	subs	x8, x9, x8
  416614:	mov	w10, #0xffffffff            	// #-1
  416618:	mov	w9, w10
  41661c:	sdiv	x8, x9, x8
  416620:	str	x8, [sp, #32]
  416624:	b	416628 <wcrtomb@plt+0x13d18>
  416628:	ldr	x8, [sp, #32]
  41662c:	ldur	x9, [x29, #-56]
  416630:	mvn	x9, x9
  416634:	subs	x8, x8, x9
  416638:	b.le	416774 <wcrtomb@plt+0x13e64>
  41663c:	b	416794 <wcrtomb@plt+0x13e84>
  416640:	mov	w8, wzr
  416644:	cbnz	w8, 416658 <wcrtomb@plt+0x13d48>
  416648:	b	41664c <wcrtomb@plt+0x13d3c>
  41664c:	mov	w8, wzr
  416650:	cbnz	w8, 416664 <wcrtomb@plt+0x13d54>
  416654:	b	4166b0 <wcrtomb@plt+0x13da0>
  416658:	mov	w8, #0x1                   	// #1
  41665c:	cbnz	w8, 4166b0 <wcrtomb@plt+0x13da0>
  416660:	b	416664 <wcrtomb@plt+0x13d54>
  416664:	ldur	x8, [x29, #-40]
  416668:	adds	x8, x8, #0x1
  41666c:	b.ne	4166b0 <wcrtomb@plt+0x13da0>  // b.any
  416670:	b	416674 <wcrtomb@plt+0x13d64>
  416674:	mov	w8, wzr
  416678:	cbnz	w8, 416690 <wcrtomb@plt+0x13d80>
  41667c:	b	416680 <wcrtomb@plt+0x13d70>
  416680:	ldur	x8, [x29, #-56]
  416684:	subs	x8, x8, #0x0
  416688:	b.gt	416774 <wcrtomb@plt+0x13e64>
  41668c:	b	416794 <wcrtomb@plt+0x13e84>
  416690:	ldur	x8, [x29, #-56]
  416694:	subs	x8, x8, #0x1
  416698:	b.lt	416794 <wcrtomb@plt+0x13e84>  // b.tstop
  41669c:	b	4166a0 <wcrtomb@plt+0x13d90>
  4166a0:	ldur	x8, [x29, #-56]
  4166a4:	subs	x8, x8, #0x1
  4166a8:	tbz	x8, #63, 416774 <wcrtomb@plt+0x13e64>
  4166ac:	b	416794 <wcrtomb@plt+0x13e84>
  4166b0:	ldur	x8, [x29, #-56]
  4166b4:	subs	x8, x8, #0x0
  4166b8:	b.gt	416774 <wcrtomb@plt+0x13e64>
  4166bc:	b	416794 <wcrtomb@plt+0x13e84>
  4166c0:	ldur	x8, [x29, #-40]
  4166c4:	cbnz	x8, 4166d8 <wcrtomb@plt+0x13dc8>
  4166c8:	b	4166cc <wcrtomb@plt+0x13dbc>
  4166cc:	mov	w8, wzr
  4166d0:	cbnz	w8, 416774 <wcrtomb@plt+0x13e64>
  4166d4:	b	416794 <wcrtomb@plt+0x13e84>
  4166d8:	ldur	x8, [x29, #-56]
  4166dc:	tbz	x8, #63, 416754 <wcrtomb@plt+0x13e44>
  4166e0:	b	4166e4 <wcrtomb@plt+0x13dd4>
  4166e4:	mov	w8, wzr
  4166e8:	cbnz	w8, 4166fc <wcrtomb@plt+0x13dec>
  4166ec:	b	4166f0 <wcrtomb@plt+0x13de0>
  4166f0:	mov	w8, wzr
  4166f4:	cbnz	w8, 416708 <wcrtomb@plt+0x13df8>
  4166f8:	b	416744 <wcrtomb@plt+0x13e34>
  4166fc:	mov	w8, #0x1                   	// #1
  416700:	cbnz	w8, 416744 <wcrtomb@plt+0x13e34>
  416704:	b	416708 <wcrtomb@plt+0x13df8>
  416708:	ldur	x8, [x29, #-56]
  41670c:	adds	x8, x8, #0x1
  416710:	b.ne	416744 <wcrtomb@plt+0x13e34>  // b.any
  416714:	b	416718 <wcrtomb@plt+0x13e08>
  416718:	mov	w8, wzr
  41671c:	cbnz	w8, 416734 <wcrtomb@plt+0x13e24>
  416720:	b	416724 <wcrtomb@plt+0x13e14>
  416724:	ldur	x8, [x29, #-40]
  416728:	subs	x8, x8, #0x0
  41672c:	b.gt	416774 <wcrtomb@plt+0x13e64>
  416730:	b	416794 <wcrtomb@plt+0x13e84>
  416734:	ldur	x8, [x29, #-40]
  416738:	subs	x8, x8, #0x1
  41673c:	tbz	x8, #63, 416774 <wcrtomb@plt+0x13e64>
  416740:	b	416794 <wcrtomb@plt+0x13e84>
  416744:	ldur	x8, [x29, #-40]
  416748:	subs	x8, x8, #0x0
  41674c:	b.gt	416774 <wcrtomb@plt+0x13e64>
  416750:	b	416794 <wcrtomb@plt+0x13e84>
  416754:	ldur	x8, [x29, #-40]
  416758:	mov	w9, #0xffffffff            	// #-1
  41675c:	mov	w10, w9
  416760:	sdiv	x8, x10, x8
  416764:	ldur	x10, [x29, #-56]
  416768:	subs	x8, x8, x10
  41676c:	b.ge	416794 <wcrtomb@plt+0x13e84>  // b.tcont
  416770:	b	416774 <wcrtomb@plt+0x13e64>
  416774:	ldur	w8, [x29, #-56]
  416778:	ldur	w9, [x29, #-40]
  41677c:	mul	w8, w8, w9
  416780:	mov	w10, w8
  416784:	stur	x10, [x29, #-64]
  416788:	mov	w8, #0x1                   	// #1
  41678c:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  416790:	b	417024 <wcrtomb@plt+0x14714>
  416794:	ldur	w8, [x29, #-56]
  416798:	ldur	w9, [x29, #-40]
  41679c:	mul	w8, w8, w9
  4167a0:	mov	w10, w8
  4167a4:	stur	x10, [x29, #-64]
  4167a8:	mov	w8, wzr
  4167ac:	cbnz	w8, 417020 <wcrtomb@plt+0x14710>
  4167b0:	b	417024 <wcrtomb@plt+0x14714>
  4167b4:	mov	w8, wzr
  4167b8:	cbnz	w8, 416bf0 <wcrtomb@plt+0x142e0>
  4167bc:	b	4167c0 <wcrtomb@plt+0x13eb0>
  4167c0:	mov	w8, wzr
  4167c4:	cbnz	w8, 4169d4 <wcrtomb@plt+0x140c4>
  4167c8:	b	4167cc <wcrtomb@plt+0x13ebc>
  4167cc:	ldur	x8, [x29, #-40]
  4167d0:	tbz	x8, #63, 4168f4 <wcrtomb@plt+0x13fe4>
  4167d4:	b	4167d8 <wcrtomb@plt+0x13ec8>
  4167d8:	ldur	x8, [x29, #-56]
  4167dc:	tbz	x8, #63, 41687c <wcrtomb@plt+0x13f6c>
  4167e0:	b	4167e4 <wcrtomb@plt+0x13ed4>
  4167e4:	mov	w8, wzr
  4167e8:	cbnz	w8, 41680c <wcrtomb@plt+0x13efc>
  4167ec:	b	4167f0 <wcrtomb@plt+0x13ee0>
  4167f0:	ldur	x8, [x29, #-56]
  4167f4:	ldur	x9, [x29, #-40]
  4167f8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4167fc:	sdiv	x9, x10, x9
  416800:	subs	x8, x8, x9
  416804:	b.lt	41699c <wcrtomb@plt+0x1408c>  // b.tstop
  416808:	b	4169b8 <wcrtomb@plt+0x140a8>
  41680c:	mov	w8, wzr
  416810:	cbnz	w8, 41682c <wcrtomb@plt+0x13f1c>
  416814:	b	416818 <wcrtomb@plt+0x13f08>
  416818:	ldur	x8, [x29, #-40]
  41681c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416820:	subs	x8, x8, x9
  416824:	b.eq	41683c <wcrtomb@plt+0x13f2c>  // b.none
  416828:	b	416848 <wcrtomb@plt+0x13f38>
  41682c:	ldur	x8, [x29, #-40]
  416830:	subs	x8, x8, #0x1
  416834:	b.lt	416848 <wcrtomb@plt+0x13f38>  // b.tstop
  416838:	b	41683c <wcrtomb@plt+0x13f2c>
  41683c:	mov	x0, xzr
  416840:	str	x0, [sp, #24]
  416844:	b	416864 <wcrtomb@plt+0x13f54>
  416848:	ldur	x8, [x29, #-40]
  41684c:	mov	x9, xzr
  416850:	subs	x8, x9, x8
  416854:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416858:	sdiv	x8, x9, x8
  41685c:	str	x8, [sp, #24]
  416860:	b	416864 <wcrtomb@plt+0x13f54>
  416864:	ldr	x8, [sp, #24]
  416868:	ldur	x9, [x29, #-56]
  41686c:	mvn	x9, x9
  416870:	subs	x8, x8, x9
  416874:	b.le	41699c <wcrtomb@plt+0x1408c>
  416878:	b	4169b8 <wcrtomb@plt+0x140a8>
  41687c:	ldur	x8, [x29, #-40]
  416880:	adds	x8, x8, #0x1
  416884:	b.ne	4168d8 <wcrtomb@plt+0x13fc8>  // b.any
  416888:	b	41688c <wcrtomb@plt+0x13f7c>
  41688c:	mov	w8, wzr
  416890:	cbnz	w8, 4168b0 <wcrtomb@plt+0x13fa0>
  416894:	b	416898 <wcrtomb@plt+0x13f88>
  416898:	ldur	x8, [x29, #-56]
  41689c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4168a0:	add	x8, x8, x9
  4168a4:	subs	x8, x8, #0x0
  4168a8:	b.gt	41699c <wcrtomb@plt+0x1408c>
  4168ac:	b	4169b8 <wcrtomb@plt+0x140a8>
  4168b0:	ldur	x8, [x29, #-56]
  4168b4:	subs	x8, x8, #0x1
  4168b8:	b.lt	4169b8 <wcrtomb@plt+0x140a8>  // b.tstop
  4168bc:	b	4168c0 <wcrtomb@plt+0x13fb0>
  4168c0:	ldur	x8, [x29, #-56]
  4168c4:	subs	x8, x8, #0x1
  4168c8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4168cc:	subs	x8, x8, x9
  4168d0:	b.gt	41699c <wcrtomb@plt+0x1408c>
  4168d4:	b	4169b8 <wcrtomb@plt+0x140a8>
  4168d8:	ldur	x8, [x29, #-40]
  4168dc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4168e0:	sdiv	x8, x9, x8
  4168e4:	ldur	x9, [x29, #-56]
  4168e8:	subs	x8, x8, x9
  4168ec:	b.lt	41699c <wcrtomb@plt+0x1408c>  // b.tstop
  4168f0:	b	4169b8 <wcrtomb@plt+0x140a8>
  4168f4:	ldur	x8, [x29, #-40]
  4168f8:	cbnz	x8, 41690c <wcrtomb@plt+0x13ffc>
  4168fc:	b	416900 <wcrtomb@plt+0x13ff0>
  416900:	mov	w8, wzr
  416904:	cbnz	w8, 41699c <wcrtomb@plt+0x1408c>
  416908:	b	4169b8 <wcrtomb@plt+0x140a8>
  41690c:	ldur	x8, [x29, #-56]
  416910:	tbz	x8, #63, 416980 <wcrtomb@plt+0x14070>
  416914:	b	416918 <wcrtomb@plt+0x14008>
  416918:	ldur	x8, [x29, #-56]
  41691c:	adds	x8, x8, #0x1
  416920:	b.ne	416964 <wcrtomb@plt+0x14054>  // b.any
  416924:	b	416928 <wcrtomb@plt+0x14018>
  416928:	mov	w8, wzr
  41692c:	cbnz	w8, 41694c <wcrtomb@plt+0x1403c>
  416930:	b	416934 <wcrtomb@plt+0x14024>
  416934:	ldur	x8, [x29, #-40]
  416938:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41693c:	add	x8, x8, x9
  416940:	subs	x8, x8, #0x0
  416944:	b.gt	41699c <wcrtomb@plt+0x1408c>
  416948:	b	4169b8 <wcrtomb@plt+0x140a8>
  41694c:	ldur	x8, [x29, #-40]
  416950:	subs	x8, x8, #0x1
  416954:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416958:	subs	x8, x8, x9
  41695c:	b.gt	41699c <wcrtomb@plt+0x1408c>
  416960:	b	4169b8 <wcrtomb@plt+0x140a8>
  416964:	ldur	x8, [x29, #-56]
  416968:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41696c:	sdiv	x8, x9, x8
  416970:	ldur	x9, [x29, #-40]
  416974:	subs	x8, x8, x9
  416978:	b.lt	41699c <wcrtomb@plt+0x1408c>  // b.tstop
  41697c:	b	4169b8 <wcrtomb@plt+0x140a8>
  416980:	ldur	x8, [x29, #-40]
  416984:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416988:	sdiv	x8, x9, x8
  41698c:	ldur	x9, [x29, #-56]
  416990:	subs	x8, x8, x9
  416994:	b.ge	4169b8 <wcrtomb@plt+0x140a8>  // b.tcont
  416998:	b	41699c <wcrtomb@plt+0x1408c>
  41699c:	ldur	x8, [x29, #-56]
  4169a0:	ldur	x9, [x29, #-40]
  4169a4:	mul	x8, x8, x9
  4169a8:	stur	x8, [x29, #-64]
  4169ac:	mov	w10, #0x1                   	// #1
  4169b0:	cbnz	w10, 417020 <wcrtomb@plt+0x14710>
  4169b4:	b	417024 <wcrtomb@plt+0x14714>
  4169b8:	ldur	x8, [x29, #-56]
  4169bc:	ldur	x9, [x29, #-40]
  4169c0:	mul	x8, x8, x9
  4169c4:	stur	x8, [x29, #-64]
  4169c8:	mov	w10, wzr
  4169cc:	cbnz	w10, 417020 <wcrtomb@plt+0x14710>
  4169d0:	b	417024 <wcrtomb@plt+0x14714>
  4169d4:	ldur	x8, [x29, #-40]
  4169d8:	tbz	x8, #63, 416b08 <wcrtomb@plt+0x141f8>
  4169dc:	b	4169e0 <wcrtomb@plt+0x140d0>
  4169e0:	ldur	x8, [x29, #-56]
  4169e4:	tbz	x8, #63, 416a88 <wcrtomb@plt+0x14178>
  4169e8:	b	4169ec <wcrtomb@plt+0x140dc>
  4169ec:	mov	w8, #0x1                   	// #1
  4169f0:	cbnz	w8, 416a14 <wcrtomb@plt+0x14104>
  4169f4:	b	4169f8 <wcrtomb@plt+0x140e8>
  4169f8:	ldur	x8, [x29, #-56]
  4169fc:	ldur	x9, [x29, #-40]
  416a00:	mov	x10, #0xffffffffffffffff    	// #-1
  416a04:	udiv	x9, x10, x9
  416a08:	subs	x8, x8, x9
  416a0c:	b.cc	416bb8 <wcrtomb@plt+0x142a8>  // b.lo, b.ul, b.last
  416a10:	b	416bd4 <wcrtomb@plt+0x142c4>
  416a14:	mov	w8, wzr
  416a18:	cbnz	w8, 416a34 <wcrtomb@plt+0x14124>
  416a1c:	b	416a20 <wcrtomb@plt+0x14110>
  416a20:	ldur	x8, [x29, #-40]
  416a24:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416a28:	subs	x8, x8, x9
  416a2c:	b.eq	416a44 <wcrtomb@plt+0x14134>  // b.none
  416a30:	b	416a54 <wcrtomb@plt+0x14144>
  416a34:	ldur	x8, [x29, #-40]
  416a38:	subs	x8, x8, #0x1
  416a3c:	b.lt	416a54 <wcrtomb@plt+0x14144>  // b.tstop
  416a40:	b	416a44 <wcrtomb@plt+0x14134>
  416a44:	mov	w8, #0x1                   	// #1
  416a48:	mov	w0, w8
  416a4c:	str	x0, [sp, #16]
  416a50:	b	416a70 <wcrtomb@plt+0x14160>
  416a54:	ldur	x8, [x29, #-40]
  416a58:	mov	x9, xzr
  416a5c:	subs	x8, x9, x8
  416a60:	mov	x9, #0xffffffffffffffff    	// #-1
  416a64:	udiv	x8, x9, x8
  416a68:	str	x8, [sp, #16]
  416a6c:	b	416a70 <wcrtomb@plt+0x14160>
  416a70:	ldr	x8, [sp, #16]
  416a74:	ldur	x9, [x29, #-56]
  416a78:	mvn	x9, x9
  416a7c:	subs	x8, x8, x9
  416a80:	b.ls	416bb8 <wcrtomb@plt+0x142a8>  // b.plast
  416a84:	b	416bd4 <wcrtomb@plt+0x142c4>
  416a88:	mov	w8, wzr
  416a8c:	cbnz	w8, 416aa0 <wcrtomb@plt+0x14190>
  416a90:	b	416a94 <wcrtomb@plt+0x14184>
  416a94:	mov	w8, wzr
  416a98:	cbnz	w8, 416aac <wcrtomb@plt+0x1419c>
  416a9c:	b	416af8 <wcrtomb@plt+0x141e8>
  416aa0:	mov	w8, #0x1                   	// #1
  416aa4:	cbnz	w8, 416af8 <wcrtomb@plt+0x141e8>
  416aa8:	b	416aac <wcrtomb@plt+0x1419c>
  416aac:	ldur	x8, [x29, #-40]
  416ab0:	adds	x8, x8, #0x1
  416ab4:	b.ne	416af8 <wcrtomb@plt+0x141e8>  // b.any
  416ab8:	b	416abc <wcrtomb@plt+0x141ac>
  416abc:	mov	w8, wzr
  416ac0:	cbnz	w8, 416ad8 <wcrtomb@plt+0x141c8>
  416ac4:	b	416ac8 <wcrtomb@plt+0x141b8>
  416ac8:	ldur	x8, [x29, #-56]
  416acc:	subs	x8, x8, #0x0
  416ad0:	b.gt	416bb8 <wcrtomb@plt+0x142a8>
  416ad4:	b	416bd4 <wcrtomb@plt+0x142c4>
  416ad8:	ldur	x8, [x29, #-56]
  416adc:	subs	x8, x8, #0x1
  416ae0:	b.lt	416bd4 <wcrtomb@plt+0x142c4>  // b.tstop
  416ae4:	b	416ae8 <wcrtomb@plt+0x141d8>
  416ae8:	ldur	x8, [x29, #-56]
  416aec:	subs	x8, x8, #0x1
  416af0:	tbz	x8, #63, 416bb8 <wcrtomb@plt+0x142a8>
  416af4:	b	416bd4 <wcrtomb@plt+0x142c4>
  416af8:	ldur	x8, [x29, #-56]
  416afc:	subs	x8, x8, #0x0
  416b00:	b.gt	416bb8 <wcrtomb@plt+0x142a8>
  416b04:	b	416bd4 <wcrtomb@plt+0x142c4>
  416b08:	ldur	x8, [x29, #-40]
  416b0c:	cbnz	x8, 416b20 <wcrtomb@plt+0x14210>
  416b10:	b	416b14 <wcrtomb@plt+0x14204>
  416b14:	mov	w8, wzr
  416b18:	cbnz	w8, 416bb8 <wcrtomb@plt+0x142a8>
  416b1c:	b	416bd4 <wcrtomb@plt+0x142c4>
  416b20:	ldur	x8, [x29, #-56]
  416b24:	tbz	x8, #63, 416b9c <wcrtomb@plt+0x1428c>
  416b28:	b	416b2c <wcrtomb@plt+0x1421c>
  416b2c:	mov	w8, wzr
  416b30:	cbnz	w8, 416b44 <wcrtomb@plt+0x14234>
  416b34:	b	416b38 <wcrtomb@plt+0x14228>
  416b38:	mov	w8, wzr
  416b3c:	cbnz	w8, 416b50 <wcrtomb@plt+0x14240>
  416b40:	b	416b8c <wcrtomb@plt+0x1427c>
  416b44:	mov	w8, #0x1                   	// #1
  416b48:	cbnz	w8, 416b8c <wcrtomb@plt+0x1427c>
  416b4c:	b	416b50 <wcrtomb@plt+0x14240>
  416b50:	ldur	x8, [x29, #-56]
  416b54:	adds	x8, x8, #0x1
  416b58:	b.ne	416b8c <wcrtomb@plt+0x1427c>  // b.any
  416b5c:	b	416b60 <wcrtomb@plt+0x14250>
  416b60:	mov	w8, wzr
  416b64:	cbnz	w8, 416b7c <wcrtomb@plt+0x1426c>
  416b68:	b	416b6c <wcrtomb@plt+0x1425c>
  416b6c:	ldur	x8, [x29, #-40]
  416b70:	subs	x8, x8, #0x0
  416b74:	b.gt	416bb8 <wcrtomb@plt+0x142a8>
  416b78:	b	416bd4 <wcrtomb@plt+0x142c4>
  416b7c:	ldur	x8, [x29, #-40]
  416b80:	subs	x8, x8, #0x1
  416b84:	tbz	x8, #63, 416bb8 <wcrtomb@plt+0x142a8>
  416b88:	b	416bd4 <wcrtomb@plt+0x142c4>
  416b8c:	ldur	x8, [x29, #-40]
  416b90:	subs	x8, x8, #0x0
  416b94:	b.gt	416bb8 <wcrtomb@plt+0x142a8>
  416b98:	b	416bd4 <wcrtomb@plt+0x142c4>
  416b9c:	ldur	x8, [x29, #-40]
  416ba0:	mov	x9, #0xffffffffffffffff    	// #-1
  416ba4:	udiv	x8, x9, x8
  416ba8:	ldur	x9, [x29, #-56]
  416bac:	subs	x8, x8, x9
  416bb0:	b.cs	416bd4 <wcrtomb@plt+0x142c4>  // b.hs, b.nlast
  416bb4:	b	416bb8 <wcrtomb@plt+0x142a8>
  416bb8:	ldur	x8, [x29, #-56]
  416bbc:	ldur	x9, [x29, #-40]
  416bc0:	mul	x8, x8, x9
  416bc4:	stur	x8, [x29, #-64]
  416bc8:	mov	w10, #0x1                   	// #1
  416bcc:	cbnz	w10, 417020 <wcrtomb@plt+0x14710>
  416bd0:	b	417024 <wcrtomb@plt+0x14714>
  416bd4:	ldur	x8, [x29, #-56]
  416bd8:	ldur	x9, [x29, #-40]
  416bdc:	mul	x8, x8, x9
  416be0:	stur	x8, [x29, #-64]
  416be4:	mov	w10, wzr
  416be8:	cbnz	w10, 417020 <wcrtomb@plt+0x14710>
  416bec:	b	417024 <wcrtomb@plt+0x14714>
  416bf0:	mov	w8, wzr
  416bf4:	cbnz	w8, 416e04 <wcrtomb@plt+0x144f4>
  416bf8:	b	416bfc <wcrtomb@plt+0x142ec>
  416bfc:	ldur	x8, [x29, #-40]
  416c00:	tbz	x8, #63, 416d24 <wcrtomb@plt+0x14414>
  416c04:	b	416c08 <wcrtomb@plt+0x142f8>
  416c08:	ldur	x8, [x29, #-56]
  416c0c:	tbz	x8, #63, 416cac <wcrtomb@plt+0x1439c>
  416c10:	b	416c14 <wcrtomb@plt+0x14304>
  416c14:	mov	w8, wzr
  416c18:	cbnz	w8, 416c3c <wcrtomb@plt+0x1432c>
  416c1c:	b	416c20 <wcrtomb@plt+0x14310>
  416c20:	ldur	x8, [x29, #-56]
  416c24:	ldur	x9, [x29, #-40]
  416c28:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  416c2c:	sdiv	x9, x10, x9
  416c30:	subs	x8, x8, x9
  416c34:	b.lt	416dcc <wcrtomb@plt+0x144bc>  // b.tstop
  416c38:	b	416de8 <wcrtomb@plt+0x144d8>
  416c3c:	mov	w8, wzr
  416c40:	cbnz	w8, 416c5c <wcrtomb@plt+0x1434c>
  416c44:	b	416c48 <wcrtomb@plt+0x14338>
  416c48:	ldur	x8, [x29, #-40]
  416c4c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416c50:	subs	x8, x8, x9
  416c54:	b.eq	416c6c <wcrtomb@plt+0x1435c>  // b.none
  416c58:	b	416c78 <wcrtomb@plt+0x14368>
  416c5c:	ldur	x8, [x29, #-40]
  416c60:	subs	x8, x8, #0x1
  416c64:	b.lt	416c78 <wcrtomb@plt+0x14368>  // b.tstop
  416c68:	b	416c6c <wcrtomb@plt+0x1435c>
  416c6c:	mov	x0, xzr
  416c70:	str	x0, [sp, #8]
  416c74:	b	416c94 <wcrtomb@plt+0x14384>
  416c78:	ldur	x8, [x29, #-40]
  416c7c:	mov	x9, xzr
  416c80:	subs	x8, x9, x8
  416c84:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416c88:	sdiv	x8, x9, x8
  416c8c:	str	x8, [sp, #8]
  416c90:	b	416c94 <wcrtomb@plt+0x14384>
  416c94:	ldr	x8, [sp, #8]
  416c98:	ldur	x9, [x29, #-56]
  416c9c:	mvn	x9, x9
  416ca0:	subs	x8, x8, x9
  416ca4:	b.le	416dcc <wcrtomb@plt+0x144bc>
  416ca8:	b	416de8 <wcrtomb@plt+0x144d8>
  416cac:	ldur	x8, [x29, #-40]
  416cb0:	adds	x8, x8, #0x1
  416cb4:	b.ne	416d08 <wcrtomb@plt+0x143f8>  // b.any
  416cb8:	b	416cbc <wcrtomb@plt+0x143ac>
  416cbc:	mov	w8, wzr
  416cc0:	cbnz	w8, 416ce0 <wcrtomb@plt+0x143d0>
  416cc4:	b	416cc8 <wcrtomb@plt+0x143b8>
  416cc8:	ldur	x8, [x29, #-56]
  416ccc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416cd0:	add	x8, x8, x9
  416cd4:	subs	x8, x8, #0x0
  416cd8:	b.gt	416dcc <wcrtomb@plt+0x144bc>
  416cdc:	b	416de8 <wcrtomb@plt+0x144d8>
  416ce0:	ldur	x8, [x29, #-56]
  416ce4:	subs	x8, x8, #0x1
  416ce8:	b.lt	416de8 <wcrtomb@plt+0x144d8>  // b.tstop
  416cec:	b	416cf0 <wcrtomb@plt+0x143e0>
  416cf0:	ldur	x8, [x29, #-56]
  416cf4:	subs	x8, x8, #0x1
  416cf8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416cfc:	subs	x8, x8, x9
  416d00:	b.gt	416dcc <wcrtomb@plt+0x144bc>
  416d04:	b	416de8 <wcrtomb@plt+0x144d8>
  416d08:	ldur	x8, [x29, #-40]
  416d0c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416d10:	sdiv	x8, x9, x8
  416d14:	ldur	x9, [x29, #-56]
  416d18:	subs	x8, x8, x9
  416d1c:	b.lt	416dcc <wcrtomb@plt+0x144bc>  // b.tstop
  416d20:	b	416de8 <wcrtomb@plt+0x144d8>
  416d24:	ldur	x8, [x29, #-40]
  416d28:	cbnz	x8, 416d3c <wcrtomb@plt+0x1442c>
  416d2c:	b	416d30 <wcrtomb@plt+0x14420>
  416d30:	mov	w8, wzr
  416d34:	cbnz	w8, 416dcc <wcrtomb@plt+0x144bc>
  416d38:	b	416de8 <wcrtomb@plt+0x144d8>
  416d3c:	ldur	x8, [x29, #-56]
  416d40:	tbz	x8, #63, 416db0 <wcrtomb@plt+0x144a0>
  416d44:	b	416d48 <wcrtomb@plt+0x14438>
  416d48:	ldur	x8, [x29, #-56]
  416d4c:	adds	x8, x8, #0x1
  416d50:	b.ne	416d94 <wcrtomb@plt+0x14484>  // b.any
  416d54:	b	416d58 <wcrtomb@plt+0x14448>
  416d58:	mov	w8, wzr
  416d5c:	cbnz	w8, 416d7c <wcrtomb@plt+0x1446c>
  416d60:	b	416d64 <wcrtomb@plt+0x14454>
  416d64:	ldur	x8, [x29, #-40]
  416d68:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416d6c:	add	x8, x8, x9
  416d70:	subs	x8, x8, #0x0
  416d74:	b.gt	416dcc <wcrtomb@plt+0x144bc>
  416d78:	b	416de8 <wcrtomb@plt+0x144d8>
  416d7c:	ldur	x8, [x29, #-40]
  416d80:	subs	x8, x8, #0x1
  416d84:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416d88:	subs	x8, x8, x9
  416d8c:	b.gt	416dcc <wcrtomb@plt+0x144bc>
  416d90:	b	416de8 <wcrtomb@plt+0x144d8>
  416d94:	ldur	x8, [x29, #-56]
  416d98:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416d9c:	sdiv	x8, x9, x8
  416da0:	ldur	x9, [x29, #-40]
  416da4:	subs	x8, x8, x9
  416da8:	b.lt	416dcc <wcrtomb@plt+0x144bc>  // b.tstop
  416dac:	b	416de8 <wcrtomb@plt+0x144d8>
  416db0:	ldur	x8, [x29, #-40]
  416db4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  416db8:	sdiv	x8, x9, x8
  416dbc:	ldur	x9, [x29, #-56]
  416dc0:	subs	x8, x8, x9
  416dc4:	b.ge	416de8 <wcrtomb@plt+0x144d8>  // b.tcont
  416dc8:	b	416dcc <wcrtomb@plt+0x144bc>
  416dcc:	ldur	x8, [x29, #-56]
  416dd0:	ldur	x9, [x29, #-40]
  416dd4:	mul	x8, x8, x9
  416dd8:	stur	x8, [x29, #-64]
  416ddc:	mov	w10, #0x1                   	// #1
  416de0:	cbnz	w10, 417020 <wcrtomb@plt+0x14710>
  416de4:	b	417024 <wcrtomb@plt+0x14714>
  416de8:	ldur	x8, [x29, #-56]
  416dec:	ldur	x9, [x29, #-40]
  416df0:	mul	x8, x8, x9
  416df4:	stur	x8, [x29, #-64]
  416df8:	mov	w10, wzr
  416dfc:	cbnz	w10, 417020 <wcrtomb@plt+0x14710>
  416e00:	b	417024 <wcrtomb@plt+0x14714>
  416e04:	ldur	x8, [x29, #-40]
  416e08:	tbz	x8, #63, 416f38 <wcrtomb@plt+0x14628>
  416e0c:	b	416e10 <wcrtomb@plt+0x14500>
  416e10:	ldur	x8, [x29, #-56]
  416e14:	tbz	x8, #63, 416eb8 <wcrtomb@plt+0x145a8>
  416e18:	b	416e1c <wcrtomb@plt+0x1450c>
  416e1c:	mov	w8, #0x1                   	// #1
  416e20:	cbnz	w8, 416e44 <wcrtomb@plt+0x14534>
  416e24:	b	416e28 <wcrtomb@plt+0x14518>
  416e28:	ldur	x8, [x29, #-56]
  416e2c:	ldur	x9, [x29, #-40]
  416e30:	mov	x10, #0xffffffffffffffff    	// #-1
  416e34:	udiv	x9, x10, x9
  416e38:	subs	x8, x8, x9
  416e3c:	b.cc	416fe8 <wcrtomb@plt+0x146d8>  // b.lo, b.ul, b.last
  416e40:	b	417004 <wcrtomb@plt+0x146f4>
  416e44:	mov	w8, wzr
  416e48:	cbnz	w8, 416e64 <wcrtomb@plt+0x14554>
  416e4c:	b	416e50 <wcrtomb@plt+0x14540>
  416e50:	ldur	x8, [x29, #-40]
  416e54:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  416e58:	subs	x8, x8, x9
  416e5c:	b.eq	416e74 <wcrtomb@plt+0x14564>  // b.none
  416e60:	b	416e84 <wcrtomb@plt+0x14574>
  416e64:	ldur	x8, [x29, #-40]
  416e68:	subs	x8, x8, #0x1
  416e6c:	b.lt	416e84 <wcrtomb@plt+0x14574>  // b.tstop
  416e70:	b	416e74 <wcrtomb@plt+0x14564>
  416e74:	mov	w8, #0x1                   	// #1
  416e78:	mov	w0, w8
  416e7c:	str	x0, [sp]
  416e80:	b	416ea0 <wcrtomb@plt+0x14590>
  416e84:	ldur	x8, [x29, #-40]
  416e88:	mov	x9, xzr
  416e8c:	subs	x8, x9, x8
  416e90:	mov	x9, #0xffffffffffffffff    	// #-1
  416e94:	udiv	x8, x9, x8
  416e98:	str	x8, [sp]
  416e9c:	b	416ea0 <wcrtomb@plt+0x14590>
  416ea0:	ldr	x8, [sp]
  416ea4:	ldur	x9, [x29, #-56]
  416ea8:	mvn	x9, x9
  416eac:	subs	x8, x8, x9
  416eb0:	b.ls	416fe8 <wcrtomb@plt+0x146d8>  // b.plast
  416eb4:	b	417004 <wcrtomb@plt+0x146f4>
  416eb8:	mov	w8, wzr
  416ebc:	cbnz	w8, 416ed0 <wcrtomb@plt+0x145c0>
  416ec0:	b	416ec4 <wcrtomb@plt+0x145b4>
  416ec4:	mov	w8, wzr
  416ec8:	cbnz	w8, 416edc <wcrtomb@plt+0x145cc>
  416ecc:	b	416f28 <wcrtomb@plt+0x14618>
  416ed0:	mov	w8, #0x1                   	// #1
  416ed4:	cbnz	w8, 416f28 <wcrtomb@plt+0x14618>
  416ed8:	b	416edc <wcrtomb@plt+0x145cc>
  416edc:	ldur	x8, [x29, #-40]
  416ee0:	adds	x8, x8, #0x1
  416ee4:	b.ne	416f28 <wcrtomb@plt+0x14618>  // b.any
  416ee8:	b	416eec <wcrtomb@plt+0x145dc>
  416eec:	mov	w8, wzr
  416ef0:	cbnz	w8, 416f08 <wcrtomb@plt+0x145f8>
  416ef4:	b	416ef8 <wcrtomb@plt+0x145e8>
  416ef8:	ldur	x8, [x29, #-56]
  416efc:	subs	x8, x8, #0x0
  416f00:	b.gt	416fe8 <wcrtomb@plt+0x146d8>
  416f04:	b	417004 <wcrtomb@plt+0x146f4>
  416f08:	ldur	x8, [x29, #-56]
  416f0c:	subs	x8, x8, #0x1
  416f10:	b.lt	417004 <wcrtomb@plt+0x146f4>  // b.tstop
  416f14:	b	416f18 <wcrtomb@plt+0x14608>
  416f18:	ldur	x8, [x29, #-56]
  416f1c:	subs	x8, x8, #0x1
  416f20:	tbz	x8, #63, 416fe8 <wcrtomb@plt+0x146d8>
  416f24:	b	417004 <wcrtomb@plt+0x146f4>
  416f28:	ldur	x8, [x29, #-56]
  416f2c:	subs	x8, x8, #0x0
  416f30:	b.gt	416fe8 <wcrtomb@plt+0x146d8>
  416f34:	b	417004 <wcrtomb@plt+0x146f4>
  416f38:	ldur	x8, [x29, #-40]
  416f3c:	cbnz	x8, 416f50 <wcrtomb@plt+0x14640>
  416f40:	b	416f44 <wcrtomb@plt+0x14634>
  416f44:	mov	w8, wzr
  416f48:	cbnz	w8, 416fe8 <wcrtomb@plt+0x146d8>
  416f4c:	b	417004 <wcrtomb@plt+0x146f4>
  416f50:	ldur	x8, [x29, #-56]
  416f54:	tbz	x8, #63, 416fcc <wcrtomb@plt+0x146bc>
  416f58:	b	416f5c <wcrtomb@plt+0x1464c>
  416f5c:	mov	w8, wzr
  416f60:	cbnz	w8, 416f74 <wcrtomb@plt+0x14664>
  416f64:	b	416f68 <wcrtomb@plt+0x14658>
  416f68:	mov	w8, wzr
  416f6c:	cbnz	w8, 416f80 <wcrtomb@plt+0x14670>
  416f70:	b	416fbc <wcrtomb@plt+0x146ac>
  416f74:	mov	w8, #0x1                   	// #1
  416f78:	cbnz	w8, 416fbc <wcrtomb@plt+0x146ac>
  416f7c:	b	416f80 <wcrtomb@plt+0x14670>
  416f80:	ldur	x8, [x29, #-56]
  416f84:	adds	x8, x8, #0x1
  416f88:	b.ne	416fbc <wcrtomb@plt+0x146ac>  // b.any
  416f8c:	b	416f90 <wcrtomb@plt+0x14680>
  416f90:	mov	w8, wzr
  416f94:	cbnz	w8, 416fac <wcrtomb@plt+0x1469c>
  416f98:	b	416f9c <wcrtomb@plt+0x1468c>
  416f9c:	ldur	x8, [x29, #-40]
  416fa0:	subs	x8, x8, #0x0
  416fa4:	b.gt	416fe8 <wcrtomb@plt+0x146d8>
  416fa8:	b	417004 <wcrtomb@plt+0x146f4>
  416fac:	ldur	x8, [x29, #-40]
  416fb0:	subs	x8, x8, #0x1
  416fb4:	tbz	x8, #63, 416fe8 <wcrtomb@plt+0x146d8>
  416fb8:	b	417004 <wcrtomb@plt+0x146f4>
  416fbc:	ldur	x8, [x29, #-40]
  416fc0:	subs	x8, x8, #0x0
  416fc4:	b.gt	416fe8 <wcrtomb@plt+0x146d8>
  416fc8:	b	417004 <wcrtomb@plt+0x146f4>
  416fcc:	ldur	x8, [x29, #-40]
  416fd0:	mov	x9, #0xffffffffffffffff    	// #-1
  416fd4:	udiv	x8, x9, x8
  416fd8:	ldur	x9, [x29, #-56]
  416fdc:	subs	x8, x8, x9
  416fe0:	b.cs	417004 <wcrtomb@plt+0x146f4>  // b.hs, b.nlast
  416fe4:	b	416fe8 <wcrtomb@plt+0x146d8>
  416fe8:	ldur	x8, [x29, #-56]
  416fec:	ldur	x9, [x29, #-40]
  416ff0:	mul	x8, x8, x9
  416ff4:	stur	x8, [x29, #-64]
  416ff8:	mov	w10, #0x1                   	// #1
  416ffc:	cbnz	w10, 417020 <wcrtomb@plt+0x14710>
  417000:	b	417024 <wcrtomb@plt+0x14714>
  417004:	ldur	x8, [x29, #-56]
  417008:	ldur	x9, [x29, #-40]
  41700c:	mul	x8, x8, x9
  417010:	stur	x8, [x29, #-64]
  417014:	mov	w10, #0x1                   	// #1
  417018:	cbnz	w10, 417024 <wcrtomb@plt+0x14714>
  41701c:	b	417020 <wcrtomb@plt+0x14710>
  417020:	bl	423394 <wcrtomb@plt+0x20a84>
  417024:	ldur	x0, [x29, #-8]
  417028:	ldur	x1, [x29, #-64]
  41702c:	bl	4230ec <wcrtomb@plt+0x207dc>
  417030:	stur	x0, [x29, #-8]
  417034:	ldur	x8, [x29, #-56]
  417038:	ldur	x9, [x29, #-16]
  41703c:	str	x8, [x9]
  417040:	ldur	x0, [x29, #-8]
  417044:	ldp	x29, x30, [sp, #240]
  417048:	add	sp, sp, #0x100
  41704c:	ret
  417050:	sub	sp, sp, #0x30
  417054:	stp	x29, x30, [sp, #32]
  417058:	add	x29, sp, #0x20
  41705c:	stur	x0, [x29, #-8]
  417060:	ldur	x8, [x29, #-8]
  417064:	add	x0, x8, #0x48
  417068:	ldur	x8, [x29, #-8]
  41706c:	ldr	x1, [x8, #32]
  417070:	ldur	x8, [x29, #-8]
  417074:	ldr	x2, [x8, #40]
  417078:	ldur	x3, [x29, #-8]
  41707c:	bl	417c94 <wcrtomb@plt+0x15384>
  417080:	stur	w0, [x29, #-12]
  417084:	ldur	w9, [x29, #-12]
  417088:	cmp	w9, #0x1
  41708c:	b.ne	4170ac <wcrtomb@plt+0x1479c>  // b.any
  417090:	ldur	x8, [x29, #-8]
  417094:	ldr	x8, [x8, #32]
  417098:	ldrb	w0, [x8]
  41709c:	bl	417d68 <wcrtomb@plt+0x15458>
  4170a0:	and	w9, w0, #0xff
  4170a4:	str	w9, [sp, #12]
  4170a8:	b	4170b4 <wcrtomb@plt+0x147a4>
  4170ac:	mov	w8, #0xffffffff            	// #-1
  4170b0:	str	w8, [sp, #12]
  4170b4:	ldr	w8, [sp, #12]
  4170b8:	str	w8, [sp, #16]
  4170bc:	ldursw	x9, [x29, #-12]
  4170c0:	ldur	x10, [x29, #-8]
  4170c4:	ldr	x11, [x10, #32]
  4170c8:	add	x9, x11, x9
  4170cc:	str	x9, [x10, #32]
  4170d0:	ldursw	x9, [x29, #-12]
  4170d4:	ldur	x10, [x29, #-8]
  4170d8:	ldr	x11, [x10, #40]
  4170dc:	subs	x9, x11, x9
  4170e0:	str	x9, [x10, #40]
  4170e4:	ldr	w0, [sp, #16]
  4170e8:	ldp	x29, x30, [sp, #32]
  4170ec:	add	sp, sp, #0x30
  4170f0:	ret
  4170f4:	sub	sp, sp, #0x10
  4170f8:	mov	w8, #0x30                  	// #48
  4170fc:	strb	w0, [sp, #15]
  417100:	ldrb	w9, [sp, #15]
  417104:	mov	w10, #0x0                   	// #0
  417108:	cmp	w8, w9
  41710c:	str	w10, [sp, #8]
  417110:	b.gt	417124 <wcrtomb@plt+0x14814>
  417114:	ldrb	w8, [sp, #15]
  417118:	cmp	w8, #0x39
  41711c:	cset	w8, le
  417120:	str	w8, [sp, #8]
  417124:	ldr	w8, [sp, #8]
  417128:	and	w0, w8, #0x1
  41712c:	add	sp, sp, #0x10
  417130:	ret
  417134:	sub	sp, sp, #0x10
  417138:	str	x0, [sp, #8]
  41713c:	str	wzr, [sp, #4]
  417140:	ldr	w8, [sp, #4]
  417144:	cmp	w8, #0x4
  417148:	b.ge	41716c <wcrtomb@plt+0x1485c>  // b.tcont
  41714c:	ldr	x8, [sp, #8]
  417150:	ldrsw	x9, [sp, #4]
  417154:	mov	x10, #0xffffffffffffffff    	// #-1
  417158:	str	x10, [x8, x9, lsl #3]
  41715c:	ldr	w8, [sp, #4]
  417160:	add	w8, w8, #0x1
  417164:	str	w8, [sp, #4]
  417168:	b	417140 <wcrtomb@plt+0x14830>
  41716c:	add	sp, sp, #0x10
  417170:	ret
  417174:	sub	sp, sp, #0x20
  417178:	mov	x8, #0x1                   	// #1
  41717c:	mov	w9, #0x40                  	// #64
  417180:	str	w0, [sp, #28]
  417184:	str	x1, [sp, #16]
  417188:	str	x8, [sp, #8]
  41718c:	ldr	x8, [sp, #8]
  417190:	ldr	w10, [sp, #28]
  417194:	udiv	w11, w10, w9
  417198:	mul	w11, w11, w9
  41719c:	subs	w10, w10, w11
  4171a0:	mov	w12, w10
  4171a4:	lsl	x8, x8, x12
  4171a8:	ldr	x12, [sp, #16]
  4171ac:	ldr	w10, [sp, #28]
  4171b0:	udiv	w9, w10, w9
  4171b4:	mov	w13, w9
  4171b8:	ubfx	x13, x13, #0, #32
  4171bc:	mov	x14, #0x8                   	// #8
  4171c0:	mul	x13, x14, x13
  4171c4:	add	x12, x12, x13
  4171c8:	ldr	x13, [x12]
  4171cc:	bic	x8, x13, x8
  4171d0:	str	x8, [x12]
  4171d4:	add	sp, sp, #0x20
  4171d8:	ret
  4171dc:	sub	sp, sp, #0x30
  4171e0:	stp	x29, x30, [sp, #32]
  4171e4:	add	x29, sp, #0x20
  4171e8:	str	x0, [sp, #16]
  4171ec:	str	x1, [sp, #8]
  4171f0:	str	xzr, [sp]
  4171f4:	ldr	x8, [sp]
  4171f8:	ldr	x9, [sp, #16]
  4171fc:	ldr	x9, [x9, #8]
  417200:	cmp	x8, x9
  417204:	b.ge	41724c <wcrtomb@plt+0x1493c>  // b.tcont
  417208:	ldr	x0, [sp, #8]
  41720c:	ldr	x8, [sp, #16]
  417210:	ldr	x8, [x8]
  417214:	ldr	x9, [sp]
  417218:	mov	x10, #0x20                  	// #32
  41721c:	mul	x9, x10, x9
  417220:	add	x1, x8, x9
  417224:	bl	417d7c <wcrtomb@plt+0x1546c>
  417228:	tbnz	w0, #0, 417230 <wcrtomb@plt+0x14920>
  41722c:	b	41723c <wcrtomb@plt+0x1492c>
  417230:	ldr	x8, [sp]
  417234:	stur	x8, [x29, #-8]
  417238:	b	4172c0 <wcrtomb@plt+0x149b0>
  41723c:	ldr	x8, [sp]
  417240:	add	x8, x8, #0x1
  417244:	str	x8, [sp]
  417248:	b	4171f4 <wcrtomb@plt+0x148e4>
  41724c:	ldr	x8, [sp, #16]
  417250:	ldr	x0, [x8]
  417254:	ldr	x8, [sp, #16]
  417258:	ldr	x1, [x8, #8]
  41725c:	ldr	x8, [sp, #16]
  417260:	add	x2, x8, #0x10
  417264:	mov	x3, #0xfffffffffffffeeb    	// #-277
  417268:	movk	x3, #0x7fff, lsl #48
  41726c:	mov	x4, #0x20                  	// #32
  417270:	bl	417dec <wcrtomb@plt+0x154dc>
  417274:	ldr	x8, [sp, #16]
  417278:	str	x0, [x8]
  41727c:	ldr	x8, [sp, #16]
  417280:	ldr	x9, [x8, #8]
  417284:	add	x9, x9, #0x1
  417288:	str	x9, [x8, #8]
  41728c:	ldr	x8, [sp, #16]
  417290:	ldr	x8, [x8]
  417294:	ldr	x9, [sp]
  417298:	mov	x10, #0x20                  	// #32
  41729c:	mul	x9, x10, x9
  4172a0:	add	x8, x8, x9
  4172a4:	ldr	x9, [sp, #8]
  4172a8:	ldr	q0, [x9]
  4172ac:	str	q0, [x8]
  4172b0:	ldr	q0, [x9, #16]
  4172b4:	str	q0, [x8, #16]
  4172b8:	ldr	x8, [sp]
  4172bc:	stur	x8, [x29, #-8]
  4172c0:	ldur	x0, [x29, #-8]
  4172c4:	ldp	x29, x30, [sp, #32]
  4172c8:	add	sp, sp, #0x30
  4172cc:	ret
  4172d0:	sub	sp, sp, #0x20
  4172d4:	stp	x29, x30, [sp, #16]
  4172d8:	add	x29, sp, #0x10
  4172dc:	mov	x2, #0x20                  	// #32
  4172e0:	str	x0, [sp, #8]
  4172e4:	ldr	x0, [sp, #8]
  4172e8:	mov	w8, wzr
  4172ec:	mov	w1, w8
  4172f0:	bl	402520 <memset@plt>
  4172f4:	ldp	x29, x30, [sp, #16]
  4172f8:	add	sp, sp, #0x20
  4172fc:	ret
  417300:	sub	sp, sp, #0x10
  417304:	str	x0, [sp, #8]
  417308:	str	wzr, [sp, #4]
  41730c:	ldr	w8, [sp, #4]
  417310:	cmp	w8, #0x4
  417314:	b.ge	417348 <wcrtomb@plt+0x14a38>  // b.tcont
  417318:	ldr	x8, [sp, #8]
  41731c:	ldrsw	x9, [sp, #4]
  417320:	ldr	x8, [x8, x9, lsl #3]
  417324:	mov	x9, #0xffffffffffffffff    	// #-1
  417328:	bic	x8, x9, x8
  41732c:	ldr	x9, [sp, #8]
  417330:	ldrsw	x10, [sp, #4]
  417334:	str	x8, [x9, x10, lsl #3]
  417338:	ldr	w8, [sp, #4]
  41733c:	add	w8, w8, #0x1
  417340:	str	w8, [sp, #4]
  417344:	b	41730c <wcrtomb@plt+0x149fc>
  417348:	add	sp, sp, #0x10
  41734c:	ret
  417350:	sub	sp, sp, #0x30
  417354:	stp	x29, x30, [sp, #32]
  417358:	add	x29, sp, #0x20
  41735c:	stur	x0, [x29, #-8]
  417360:	str	x1, [sp, #16]
  417364:	str	x2, [sp, #8]
  417368:	ldur	x8, [x29, #-8]
  41736c:	ldr	x8, [x8, #32]
  417370:	ldr	x9, [sp, #16]
  417374:	str	x8, [x9]
  417378:	ldur	x8, [x29, #-8]
  41737c:	ldr	x8, [x8, #40]
  417380:	ldr	x9, [sp, #16]
  417384:	str	x8, [x9, #8]
  417388:	ldr	x8, [sp, #8]
  41738c:	ldur	x9, [x29, #-8]
  417390:	str	x8, [x9, #32]
  417394:	ldr	x0, [sp, #8]
  417398:	bl	4022f0 <strlen@plt>
  41739c:	ldur	x8, [x29, #-8]
  4173a0:	str	x0, [x8, #40]
  4173a4:	ldp	x29, x30, [sp, #32]
  4173a8:	add	sp, sp, #0x30
  4173ac:	ret
  4173b0:	sub	sp, sp, #0x170
  4173b4:	stp	x29, x30, [sp, #336]
  4173b8:	str	x28, [sp, #352]
  4173bc:	add	x29, sp, #0x150
  4173c0:	sub	x8, x29, #0x88
  4173c4:	mov	w9, #0x1                   	// #1
  4173c8:	mov	w10, #0x1                   	// #1
  4173cc:	sub	x11, x29, #0x38
  4173d0:	str	x0, [x8, #120]
  4173d4:	sturb	w9, [x29, #-17]
  4173d8:	ldr	x12, [x8, #120]
  4173dc:	str	xzr, [x12, #104]
  4173e0:	mov	x0, x11
  4173e4:	str	x8, [sp, #32]
  4173e8:	str	w10, [sp, #28]
  4173ec:	bl	4172d0 <wcrtomb@plt+0x149c0>
  4173f0:	ldr	x8, [sp, #32]
  4173f4:	ldr	x0, [x8, #120]
  4173f8:	bl	417e58 <wcrtomb@plt+0x15548>
  4173fc:	stur	w0, [x29, #-60]
  417400:	ldur	w9, [x29, #-60]
  417404:	cmp	w9, #0x5e
  417408:	cset	w9, eq  // eq = none
  41740c:	ldr	w10, [sp, #28]
  417410:	and	w9, w9, w10
  417414:	sturb	w9, [x29, #-61]
  417418:	ldurb	w9, [x29, #-61]
  41741c:	tbnz	w9, #0, 417424 <wcrtomb@plt+0x14b14>
  417420:	b	417448 <wcrtomb@plt+0x14b38>
  417424:	ldr	x8, [sp, #32]
  417428:	ldr	x0, [x8, #120]
  41742c:	bl	417e58 <wcrtomb@plt+0x15548>
  417430:	stur	w0, [x29, #-60]
  417434:	ldr	x8, [sp, #32]
  417438:	ldr	x9, [x8, #120]
  41743c:	ldrb	w10, [x9, #1049]
  417440:	and	w10, w10, #0x1
  417444:	sturb	w10, [x29, #-17]
  417448:	ldr	x8, [sp, #32]
  41744c:	ldr	x9, [x8, #120]
  417450:	ldr	w10, [x9, #72]
  417454:	stur	w10, [x29, #-68]
  417458:	ldur	w10, [x29, #-60]
  41745c:	cmp	w10, #0x3a
  417460:	cset	w10, eq  // eq = none
  417464:	and	w10, w10, #0x1
  417468:	stur	w10, [x29, #-24]
  41746c:	mov	w8, #0x100                 	// #256
  417470:	stur	w8, [x29, #-72]
  417474:	ldur	w8, [x29, #-24]
  417478:	and	w8, w8, #0xfffffffd
  41747c:	stur	w8, [x29, #-24]
  417480:	ldur	w8, [x29, #-60]
  417484:	cmp	w8, #0x5b
  417488:	b.ne	4176ec <wcrtomb@plt+0x14ddc>  // b.any
  41748c:	ldr	x8, [sp, #32]
  417490:	ldr	x0, [x8, #120]
  417494:	bl	417e58 <wcrtomb@plt+0x15548>
  417498:	stur	w0, [x29, #-72]
  41749c:	ldr	x8, [sp, #32]
  4174a0:	ldr	x9, [x8, #120]
  4174a4:	ldr	w10, [x9, #72]
  4174a8:	stur	w10, [x29, #-76]
  4174ac:	ldur	w10, [x29, #-72]
  4174b0:	cmp	w10, #0x3a
  4174b4:	b.ne	4174cc <wcrtomb@plt+0x14bbc>  // b.any
  4174b8:	ldr	x8, [sp, #32]
  4174bc:	ldr	x9, [x8, #120]
  4174c0:	ldr	x9, [x9, #448]
  4174c4:	and	x9, x9, #0x4
  4174c8:	cbnz	x9, 4174e4 <wcrtomb@plt+0x14bd4>
  4174cc:	ldur	w8, [x29, #-72]
  4174d0:	cmp	w8, #0x2e
  4174d4:	b.eq	4174e4 <wcrtomb@plt+0x14bd4>  // b.none
  4174d8:	ldur	w8, [x29, #-72]
  4174dc:	cmp	w8, #0x3d
  4174e0:	b.ne	4176ec <wcrtomb@plt+0x14ddc>  // b.any
  4174e4:	stur	wzr, [x29, #-116]
  4174e8:	ldr	x8, [sp, #32]
  4174ec:	ldr	x0, [x8, #120]
  4174f0:	bl	417e58 <wcrtomb@plt+0x15548>
  4174f4:	stur	w0, [x29, #-60]
  4174f8:	ldr	x8, [sp, #32]
  4174fc:	ldr	x9, [x8, #120]
  417500:	ldr	x9, [x9, #40]
  417504:	cbz	x9, 417530 <wcrtomb@plt+0x14c20>
  417508:	ldur	w8, [x29, #-60]
  41750c:	ldur	w9, [x29, #-72]
  417510:	cmp	w8, w9
  417514:	b.ne	417534 <wcrtomb@plt+0x14c24>  // b.any
  417518:	ldr	x8, [sp, #32]
  41751c:	ldr	x9, [x8, #120]
  417520:	ldr	x9, [x9, #32]
  417524:	ldrb	w10, [x9]
  417528:	cmp	w10, #0x5d
  41752c:	b.ne	417534 <wcrtomb@plt+0x14c24>  // b.any
  417530:	b	417570 <wcrtomb@plt+0x14c60>
  417534:	ldur	w8, [x29, #-116]
  417538:	cmp	w8, #0x20
  41753c:	b.ge	417564 <wcrtomb@plt+0x14c54>  // b.tcont
  417540:	ldur	w8, [x29, #-60]
  417544:	ldursw	x9, [x29, #-116]
  417548:	mov	w10, w9
  41754c:	add	w10, w10, #0x1
  417550:	stur	w10, [x29, #-116]
  417554:	sub	x11, x29, #0x6d
  417558:	add	x9, x11, x9
  41755c:	strb	w8, [x9]
  417560:	b	41756c <wcrtomb@plt+0x14c5c>
  417564:	mov	w8, #0x0                   	// #0
  417568:	sturb	w8, [x29, #-109]
  41756c:	b	4174e8 <wcrtomb@plt+0x14bd8>
  417570:	ldursw	x8, [x29, #-116]
  417574:	sub	x9, x29, #0x6d
  417578:	add	x8, x9, x8
  41757c:	mov	w10, #0x0                   	// #0
  417580:	strb	w10, [x8]
  417584:	ldr	x8, [sp, #32]
  417588:	ldr	x0, [x8, #120]
  41758c:	bl	417e58 <wcrtomb@plt+0x15548>
  417590:	stur	w0, [x29, #-60]
  417594:	ldr	x8, [sp, #32]
  417598:	ldr	x9, [x8, #120]
  41759c:	ldr	w10, [x9, #72]
  4175a0:	stur	w10, [x29, #-68]
  4175a4:	ldur	w10, [x29, #-72]
  4175a8:	cmp	w10, #0x3a
  4175ac:	b.ne	4176b4 <wcrtomb@plt+0x14da4>  // b.any
  4175b0:	ldr	x8, [sp, #32]
  4175b4:	ldr	x9, [x8, #120]
  4175b8:	ldrb	w10, [x9, #457]
  4175bc:	tbnz	w10, #0, 4175c4 <wcrtomb@plt+0x14cb4>
  4175c0:	b	417600 <wcrtomb@plt+0x14cf0>
  4175c4:	sub	x0, x29, #0x6d
  4175c8:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4175cc:	add	x1, x1, #0x857
  4175d0:	bl	413564 <wcrtomb@plt+0x10c54>
  4175d4:	tbnz	w0, #0, 4175f0 <wcrtomb@plt+0x14ce0>
  4175d8:	sub	x0, x29, #0x6d
  4175dc:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4175e0:	add	x1, x1, #0x85d
  4175e4:	bl	413564 <wcrtomb@plt+0x10c54>
  4175e8:	tbnz	w0, #0, 4175f0 <wcrtomb@plt+0x14ce0>
  4175ec:	b	417600 <wcrtomb@plt+0x14cf0>
  4175f0:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4175f4:	add	x8, x8, #0x863
  4175f8:	str	x8, [sp, #16]
  4175fc:	b	417608 <wcrtomb@plt+0x14cf8>
  417600:	sub	x8, x29, #0x6d
  417604:	str	x8, [sp, #16]
  417608:	ldr	x8, [sp, #16]
  41760c:	ldr	x9, [sp, #32]
  417610:	str	x8, [x9, #8]
  417614:	ldr	x0, [x9, #8]
  417618:	bl	417e98 <wcrtomb@plt+0x15588>
  41761c:	ldr	x8, [sp, #32]
  417620:	str	x0, [x8]
  417624:	ldr	x9, [x8]
  417628:	cbnz	x9, 41763c <wcrtomb@plt+0x14d2c>
  41762c:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  417630:	add	x0, x0, #0x869
  417634:	bl	4028b0 <gettext@plt>
  417638:	bl	402a2c <wcrtomb@plt+0x11c>
  41763c:	ldr	x8, [sp, #32]
  417640:	ldr	x9, [x8, #120]
  417644:	ldrb	w10, [x9, #1048]
  417648:	tbnz	w10, #0, 417650 <wcrtomb@plt+0x14d40>
  41764c:	b	41766c <wcrtomb@plt+0x14d5c>
  417650:	ldr	x8, [sp, #32]
  417654:	ldr	x9, [x8]
  417658:	ldrb	w10, [x9, #16]
  41765c:	tbnz	w10, #0, 41766c <wcrtomb@plt+0x14d5c>
  417660:	mov	w8, #0x0                   	// #0
  417664:	sturb	w8, [x29, #-17]
  417668:	b	4176b0 <wcrtomb@plt+0x14da0>
  41766c:	stur	wzr, [x29, #-140]
  417670:	ldur	w8, [x29, #-140]
  417674:	cmp	w8, #0x100
  417678:	b.ge	4176b0 <wcrtomb@plt+0x14da0>  // b.tcont
  41767c:	ldr	x8, [sp, #32]
  417680:	ldr	x9, [x8]
  417684:	ldr	x9, [x9, #8]
  417688:	ldur	w0, [x29, #-140]
  41768c:	blr	x9
  417690:	cbz	w0, 4176a0 <wcrtomb@plt+0x14d90>
  417694:	ldur	w0, [x29, #-140]
  417698:	sub	x1, x29, #0x38
  41769c:	bl	413e44 <wcrtomb@plt+0x11534>
  4176a0:	ldur	w8, [x29, #-140]
  4176a4:	add	w8, w8, #0x1
  4176a8:	stur	w8, [x29, #-140]
  4176ac:	b	417670 <wcrtomb@plt+0x14d60>
  4176b0:	b	4176bc <wcrtomb@plt+0x14dac>
  4176b4:	mov	w8, #0x0                   	// #0
  4176b8:	sturb	w8, [x29, #-17]
  4176bc:	ldur	w8, [x29, #-24]
  4176c0:	orr	w8, w8, #0x8
  4176c4:	stur	w8, [x29, #-24]
  4176c8:	ldr	x9, [sp, #32]
  4176cc:	ldr	x0, [x9, #120]
  4176d0:	bl	417e58 <wcrtomb@plt+0x15548>
  4176d4:	stur	w0, [x29, #-72]
  4176d8:	ldr	x9, [sp, #32]
  4176dc:	ldr	x10, [x9, #120]
  4176e0:	ldr	w8, [x10, #72]
  4176e4:	stur	w8, [x29, #-76]
  4176e8:	b	417ab4 <wcrtomb@plt+0x151a4>
  4176ec:	ldur	w8, [x29, #-60]
  4176f0:	cmp	w8, #0x5c
  4176f4:	b.ne	41772c <wcrtomb@plt+0x14e1c>  // b.any
  4176f8:	ldr	x8, [sp, #32]
  4176fc:	ldr	x9, [x8, #120]
  417700:	ldr	x9, [x9, #448]
  417704:	and	x9, x9, #0x1
  417708:	cbz	x9, 41772c <wcrtomb@plt+0x14e1c>
  41770c:	ldr	x8, [sp, #32]
  417710:	ldr	x0, [x8, #120]
  417714:	bl	417e58 <wcrtomb@plt+0x15548>
  417718:	stur	w0, [x29, #-60]
  41771c:	ldr	x8, [sp, #32]
  417720:	ldr	x9, [x8, #120]
  417724:	ldr	w10, [x9, #72]
  417728:	stur	w10, [x29, #-68]
  41772c:	ldur	w8, [x29, #-72]
  417730:	cmp	w8, #0x100
  417734:	b.ne	417758 <wcrtomb@plt+0x14e48>  // b.any
  417738:	ldr	x8, [sp, #32]
  41773c:	ldr	x0, [x8, #120]
  417740:	bl	417e58 <wcrtomb@plt+0x15548>
  417744:	stur	w0, [x29, #-72]
  417748:	ldr	x8, [sp, #32]
  41774c:	ldr	x9, [x8, #120]
  417750:	ldr	w10, [x9, #72]
  417754:	stur	w10, [x29, #-76]
  417758:	ldur	w8, [x29, #-72]
  41775c:	cmp	w8, #0x2d
  417760:	b.ne	41793c <wcrtomb@plt+0x1502c>  // b.any
  417764:	ldr	x8, [sp, #32]
  417768:	ldr	x0, [x8, #120]
  41776c:	bl	417e58 <wcrtomb@plt+0x15548>
  417770:	stur	w0, [x29, #-144]
  417774:	ldr	x8, [sp, #32]
  417778:	ldr	x9, [x8, #120]
  41777c:	ldr	w10, [x9, #72]
  417780:	stur	w10, [x29, #-148]
  417784:	ldur	w10, [x29, #-144]
  417788:	cmp	w10, #0x5b
  41778c:	b.ne	4177b8 <wcrtomb@plt+0x14ea8>  // b.any
  417790:	ldr	x8, [sp, #32]
  417794:	ldr	x9, [x8, #120]
  417798:	ldr	x9, [x9, #32]
  41779c:	ldrb	w10, [x9]
  4177a0:	cmp	w10, #0x2e
  4177a4:	b.ne	4177b8 <wcrtomb@plt+0x14ea8>  // b.any
  4177a8:	mov	w8, #0x0                   	// #0
  4177ac:	sturb	w8, [x29, #-17]
  4177b0:	mov	w8, #0x5d                  	// #93
  4177b4:	stur	w8, [x29, #-144]
  4177b8:	ldur	w8, [x29, #-144]
  4177bc:	cmp	w8, #0x5d
  4177c0:	b.ne	4177f0 <wcrtomb@plt+0x14ee0>  // b.any
  4177c4:	ldr	x8, [sp, #32]
  4177c8:	ldr	x9, [x8, #120]
  4177cc:	ldr	x10, [x9, #32]
  4177d0:	mov	x11, #0xffffffffffffffff    	// #-1
  4177d4:	add	x10, x10, x11
  4177d8:	str	x10, [x9, #32]
  4177dc:	ldr	x9, [x8, #120]
  4177e0:	ldr	x10, [x9, #40]
  4177e4:	add	x10, x10, #0x1
  4177e8:	str	x10, [x9, #40]
  4177ec:	b	41793c <wcrtomb@plt+0x1502c>
  4177f0:	ldur	w8, [x29, #-144]
  4177f4:	cmp	w8, #0x5c
  4177f8:	b.ne	417830 <wcrtomb@plt+0x14f20>  // b.any
  4177fc:	ldr	x8, [sp, #32]
  417800:	ldr	x9, [x8, #120]
  417804:	ldr	x9, [x9, #448]
  417808:	and	x9, x9, #0x1
  41780c:	cbz	x9, 417830 <wcrtomb@plt+0x14f20>
  417810:	ldr	x8, [sp, #32]
  417814:	ldr	x0, [x8, #120]
  417818:	bl	417e58 <wcrtomb@plt+0x15548>
  41781c:	stur	w0, [x29, #-144]
  417820:	ldr	x8, [sp, #32]
  417824:	ldr	x9, [x8, #120]
  417828:	ldr	w10, [x9, #72]
  41782c:	stur	w10, [x29, #-148]
  417830:	ldur	w8, [x29, #-24]
  417834:	orr	w8, w8, #0x8
  417838:	stur	w8, [x29, #-24]
  41783c:	ldr	x9, [sp, #32]
  417840:	ldr	x0, [x9, #120]
  417844:	bl	417e58 <wcrtomb@plt+0x15548>
  417848:	stur	w0, [x29, #-72]
  41784c:	ldr	x9, [sp, #32]
  417850:	ldr	x10, [x9, #120]
  417854:	ldr	w8, [x10, #72]
  417858:	stur	w8, [x29, #-76]
  41785c:	ldur	w8, [x29, #-68]
  417860:	ldur	w11, [x29, #-148]
  417864:	cmp	w8, w11
  417868:	b.ne	41787c <wcrtomb@plt+0x14f6c>  // b.any
  41786c:	ldur	w8, [x29, #-68]
  417870:	mov	w9, #0xffffffff            	// #-1
  417874:	cmp	w8, w9
  417878:	b.ne	41793c <wcrtomb@plt+0x1502c>  // b.any
  41787c:	ldr	x8, [sp, #32]
  417880:	ldr	x9, [x8, #120]
  417884:	ldrb	w10, [x9, #1049]
  417888:	tbnz	w10, #0, 4178bc <wcrtomb@plt+0x14fac>
  41788c:	ldur	w8, [x29, #-60]
  417890:	mov	w0, w8
  417894:	bl	4170f4 <wcrtomb@plt+0x147e4>
  417898:	and	w8, w0, #0x1
  41789c:	ldur	w9, [x29, #-144]
  4178a0:	mov	w0, w9
  4178a4:	str	w8, [sp, #12]
  4178a8:	bl	4170f4 <wcrtomb@plt+0x147e4>
  4178ac:	and	w8, w0, #0x1
  4178b0:	ldr	w9, [sp, #12]
  4178b4:	and	w8, w9, w8
  4178b8:	cbz	w8, 417930 <wcrtomb@plt+0x15020>
  4178bc:	ldur	w8, [x29, #-60]
  4178c0:	stur	w8, [x29, #-152]
  4178c4:	ldur	w8, [x29, #-152]
  4178c8:	ldur	w9, [x29, #-144]
  4178cc:	cmp	w8, w9
  4178d0:	b.gt	41792c <wcrtomb@plt+0x1501c>
  4178d4:	ldr	x8, [sp, #32]
  4178d8:	ldr	x9, [x8, #120]
  4178dc:	ldrb	w10, [x9, #457]
  4178e0:	tbnz	w10, #0, 4178e8 <wcrtomb@plt+0x14fd8>
  4178e4:	b	417910 <wcrtomb@plt+0x15000>
  4178e8:	bl	4026b0 <__ctype_b_loc@plt>
  4178ec:	ldr	x8, [x0]
  4178f0:	ldursw	x9, [x29, #-152]
  4178f4:	ldrh	w10, [x8, x9, lsl #1]
  4178f8:	and	w10, w10, #0x400
  4178fc:	cbz	w10, 417910 <wcrtomb@plt+0x15000>
  417900:	ldur	w0, [x29, #-152]
  417904:	sub	x1, x29, #0x38
  417908:	bl	417c28 <wcrtomb@plt+0x15318>
  41790c:	b	41791c <wcrtomb@plt+0x1500c>
  417910:	ldur	w0, [x29, #-152]
  417914:	sub	x1, x29, #0x38
  417918:	bl	413e44 <wcrtomb@plt+0x11534>
  41791c:	ldur	w8, [x29, #-152]
  417920:	add	w8, w8, #0x1
  417924:	stur	w8, [x29, #-152]
  417928:	b	4178c4 <wcrtomb@plt+0x14fb4>
  41792c:	b	417938 <wcrtomb@plt+0x15028>
  417930:	mov	w8, #0x0                   	// #0
  417934:	sturb	w8, [x29, #-17]
  417938:	b	417ab4 <wcrtomb@plt+0x151a4>
  41793c:	ldur	w8, [x29, #-60]
  417940:	mov	w9, #0x4                   	// #4
  417944:	mov	w10, #0x2                   	// #2
  417948:	cmp	w8, #0x3a
  41794c:	csel	w8, w10, w9, eq  // eq = none
  417950:	ldur	w9, [x29, #-24]
  417954:	orr	w8, w9, w8
  417958:	stur	w8, [x29, #-24]
  41795c:	ldr	x11, [sp, #32]
  417960:	ldr	x12, [x11, #120]
  417964:	ldrb	w8, [x12, #1048]
  417968:	tbnz	w8, #0, 4179b8 <wcrtomb@plt+0x150a8>
  41796c:	ldr	x8, [sp, #32]
  417970:	ldr	x9, [x8, #120]
  417974:	ldrb	w10, [x9, #457]
  417978:	tbnz	w10, #0, 417980 <wcrtomb@plt+0x15070>
  41797c:	b	4179a8 <wcrtomb@plt+0x15098>
  417980:	bl	4026b0 <__ctype_b_loc@plt>
  417984:	ldr	x8, [x0]
  417988:	ldursw	x9, [x29, #-60]
  41798c:	ldrh	w10, [x8, x9, lsl #1]
  417990:	and	w10, w10, #0x400
  417994:	cbz	w10, 4179a8 <wcrtomb@plt+0x15098>
  417998:	ldur	w0, [x29, #-60]
  41799c:	sub	x1, x29, #0x38
  4179a0:	bl	417c28 <wcrtomb@plt+0x15318>
  4179a4:	b	4179b4 <wcrtomb@plt+0x150a4>
  4179a8:	ldur	w0, [x29, #-60]
  4179ac:	sub	x1, x29, #0x38
  4179b0:	bl	413e44 <wcrtomb@plt+0x11534>
  4179b4:	b	417ab4 <wcrtomb@plt+0x151a4>
  4179b8:	ldur	w8, [x29, #-68]
  4179bc:	mov	w9, #0xffffffff            	// #-1
  4179c0:	cmp	w8, w9
  4179c4:	b.ne	4179d4 <wcrtomb@plt+0x150c4>  // b.any
  4179c8:	mov	w8, #0x0                   	// #0
  4179cc:	sturb	w8, [x29, #-17]
  4179d0:	b	417ab4 <wcrtomb@plt+0x151a4>
  4179d4:	ldr	x8, [sp, #32]
  4179d8:	ldr	x9, [x8, #120]
  4179dc:	ldrb	w10, [x9, #457]
  4179e0:	tbnz	w10, #0, 4179e8 <wcrtomb@plt+0x150d8>
  4179e4:	b	417a04 <wcrtomb@plt+0x150f4>
  4179e8:	ldur	w0, [x29, #-68]
  4179ec:	add	x8, sp, #0x34
  4179f0:	add	x1, x8, #0x4
  4179f4:	bl	41ca4c <wcrtomb@plt+0x1a13c>
  4179f8:	add	w9, w0, #0x1
  4179fc:	str	w9, [sp, #8]
  417a00:	b	417a0c <wcrtomb@plt+0x150fc>
  417a04:	mov	w8, #0x1                   	// #1
  417a08:	str	w8, [sp, #8]
  417a0c:	ldr	w8, [sp, #8]
  417a10:	str	w8, [sp, #48]
  417a14:	ldur	w8, [x29, #-68]
  417a18:	str	w8, [sp, #52]
  417a1c:	str	wzr, [sp, #44]
  417a20:	ldr	w8, [sp, #44]
  417a24:	ldr	w9, [sp, #48]
  417a28:	cmp	w8, w9
  417a2c:	b.ge	417ab4 <wcrtomb@plt+0x151a4>  // b.tcont
  417a30:	ldrsw	x8, [sp, #44]
  417a34:	add	x9, sp, #0x34
  417a38:	ldr	w0, [x9, x8, lsl #2]
  417a3c:	sub	x1, x29, #0x38
  417a40:	bl	417f40 <wcrtomb@plt+0x15630>
  417a44:	tbnz	w0, #0, 417aa4 <wcrtomb@plt+0x15194>
  417a48:	ldr	x8, [sp, #32]
  417a4c:	ldr	x9, [x8, #120]
  417a50:	ldr	x0, [x9, #96]
  417a54:	ldr	x9, [x8, #120]
  417a58:	ldr	x1, [x9, #104]
  417a5c:	ldr	x9, [x8, #120]
  417a60:	add	x2, x9, #0x70
  417a64:	mov	x3, #0xffffffffffffffff    	// #-1
  417a68:	mov	x4, #0x4                   	// #4
  417a6c:	bl	417dec <wcrtomb@plt+0x154dc>
  417a70:	ldr	x8, [sp, #32]
  417a74:	ldr	x9, [x8, #120]
  417a78:	str	x0, [x9, #96]
  417a7c:	ldrsw	x9, [sp, #44]
  417a80:	add	x10, sp, #0x34
  417a84:	ldr	w11, [x10, x9, lsl #2]
  417a88:	ldr	x9, [x8, #120]
  417a8c:	ldr	x9, [x9, #96]
  417a90:	ldr	x10, [x8, #120]
  417a94:	ldr	x12, [x10, #104]
  417a98:	add	x13, x12, #0x1
  417a9c:	str	x13, [x10, #104]
  417aa0:	str	w11, [x9, x12, lsl #2]
  417aa4:	ldr	w8, [sp, #44]
  417aa8:	add	w8, w8, #0x1
  417aac:	str	w8, [sp, #44]
  417ab0:	b	417a20 <wcrtomb@plt+0x15110>
  417ab4:	ldur	w8, [x29, #-76]
  417ab8:	stur	w8, [x29, #-68]
  417abc:	ldur	w8, [x29, #-72]
  417ac0:	stur	w8, [x29, #-60]
  417ac4:	cmp	w8, #0x5d
  417ac8:	b.ne	41746c <wcrtomb@plt+0x14b5c>  // b.any
  417acc:	ldur	w8, [x29, #-24]
  417ad0:	cmp	w8, #0x7
  417ad4:	b.ne	417ae8 <wcrtomb@plt+0x151d8>  // b.any
  417ad8:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  417adc:	add	x0, x0, #0x881
  417ae0:	bl	4028b0 <gettext@plt>
  417ae4:	bl	402a5c <wcrtomb@plt+0x14c>
  417ae8:	ldurb	w8, [x29, #-17]
  417aec:	tbnz	w8, #0, 417b00 <wcrtomb@plt+0x151f0>
  417af0:	mov	x8, #0x112                 	// #274
  417af4:	ldr	x9, [sp, #32]
  417af8:	str	x8, [x9, #128]
  417afc:	b	417bdc <wcrtomb@plt+0x152cc>
  417b00:	ldr	x8, [sp, #32]
  417b04:	ldr	x9, [x8, #120]
  417b08:	ldrb	w10, [x9, #1048]
  417b0c:	tbnz	w10, #0, 417b14 <wcrtomb@plt+0x15204>
  417b10:	b	417b8c <wcrtomb@plt+0x1527c>
  417b14:	ldurb	w8, [x29, #-61]
  417b18:	tbnz	w8, #0, 417b2c <wcrtomb@plt+0x1521c>
  417b1c:	ldr	x8, [sp, #32]
  417b20:	ldr	x9, [x8, #120]
  417b24:	ldr	x9, [x9, #104]
  417b28:	cbz	x9, 417b8c <wcrtomb@plt+0x1527c>
  417b2c:	ldurb	w8, [x29, #-61]
  417b30:	ldr	x9, [sp, #32]
  417b34:	ldr	x10, [x9, #120]
  417b38:	and	w8, w8, #0x1
  417b3c:	strb	w8, [x10, #88]
  417b40:	sub	x0, x29, #0x38
  417b44:	bl	417fac <wcrtomb@plt+0x1569c>
  417b48:	tbnz	w0, #0, 417b50 <wcrtomb@plt+0x15240>
  417b4c:	b	417b5c <wcrtomb@plt+0x1524c>
  417b50:	mov	x8, #0xffffffffffffffff    	// #-1
  417b54:	str	x8, [sp]
  417b58:	b	417b70 <wcrtomb@plt+0x15260>
  417b5c:	ldr	x8, [sp, #32]
  417b60:	ldr	x0, [x8, #120]
  417b64:	sub	x1, x29, #0x38
  417b68:	bl	4171dc <wcrtomb@plt+0x148cc>
  417b6c:	str	x0, [sp]
  417b70:	ldr	x8, [sp]
  417b74:	ldr	x9, [sp, #32]
  417b78:	ldr	x10, [x9, #120]
  417b7c:	str	x8, [x10, #80]
  417b80:	mov	x8, #0x113                 	// #275
  417b84:	str	x8, [x9, #128]
  417b88:	b	417bdc <wcrtomb@plt+0x152cc>
  417b8c:	ldurb	w8, [x29, #-61]
  417b90:	tbnz	w8, #0, 417b98 <wcrtomb@plt+0x15288>
  417b94:	b	417bc0 <wcrtomb@plt+0x152b0>
  417b98:	sub	x0, x29, #0x38
  417b9c:	bl	417300 <wcrtomb@plt+0x149f0>
  417ba0:	ldr	x8, [sp, #32]
  417ba4:	ldr	x9, [x8, #120]
  417ba8:	ldr	x9, [x9, #448]
  417bac:	and	x9, x9, #0x100
  417bb0:	cbz	x9, 417bc0 <wcrtomb@plt+0x152b0>
  417bb4:	mov	w0, #0xa                   	// #10
  417bb8:	sub	x1, x29, #0x38
  417bbc:	bl	417174 <wcrtomb@plt+0x14864>
  417bc0:	ldr	x8, [sp, #32]
  417bc4:	ldr	x0, [x8, #120]
  417bc8:	sub	x1, x29, #0x38
  417bcc:	bl	4171dc <wcrtomb@plt+0x148cc>
  417bd0:	add	x8, x0, #0x114
  417bd4:	ldr	x9, [sp, #32]
  417bd8:	str	x8, [x9, #128]
  417bdc:	ldr	x8, [sp, #32]
  417be0:	ldr	x0, [x8, #128]
  417be4:	ldr	x28, [sp, #352]
  417be8:	ldp	x29, x30, [sp, #336]
  417bec:	add	sp, sp, #0x170
  417bf0:	ret
  417bf4:	sub	sp, sp, #0x10
  417bf8:	str	x0, [sp, #8]
  417bfc:	str	x1, [sp]
  417c00:	ldr	x8, [sp]
  417c04:	ldr	x8, [x8]
  417c08:	ldr	x9, [sp, #8]
  417c0c:	str	x8, [x9, #32]
  417c10:	ldr	x8, [sp]
  417c14:	ldr	x8, [x8, #8]
  417c18:	ldr	x9, [sp, #8]
  417c1c:	str	x8, [x9, #40]
  417c20:	add	sp, sp, #0x10
  417c24:	ret
  417c28:	sub	sp, sp, #0x30
  417c2c:	stp	x29, x30, [sp, #32]
  417c30:	add	x29, sp, #0x20
  417c34:	stur	w0, [x29, #-4]
  417c38:	str	x1, [sp, #16]
  417c3c:	ldur	w0, [x29, #-4]
  417c40:	bl	402460 <toupper@plt>
  417c44:	str	w0, [sp, #12]
  417c48:	str	wzr, [sp, #8]
  417c4c:	ldr	w8, [sp, #8]
  417c50:	cmp	w8, #0x100
  417c54:	b.ge	417c88 <wcrtomb@plt+0x15378>  // b.tcont
  417c58:	ldr	w0, [sp, #8]
  417c5c:	bl	402460 <toupper@plt>
  417c60:	ldr	w8, [sp, #12]
  417c64:	cmp	w0, w8
  417c68:	b.ne	417c78 <wcrtomb@plt+0x15368>  // b.any
  417c6c:	ldr	w0, [sp, #8]
  417c70:	ldr	x1, [sp, #16]
  417c74:	bl	413e44 <wcrtomb@plt+0x11534>
  417c78:	ldr	w8, [sp, #8]
  417c7c:	add	w8, w8, #0x1
  417c80:	str	w8, [sp, #8]
  417c84:	b	417c4c <wcrtomb@plt+0x1533c>
  417c88:	ldp	x29, x30, [sp, #32]
  417c8c:	add	sp, sp, #0x30
  417c90:	ret
  417c94:	sub	sp, sp, #0x50
  417c98:	stp	x29, x30, [sp, #64]
  417c9c:	add	x29, sp, #0x40
  417ca0:	mov	w8, #0xffffffff            	// #-1
  417ca4:	stur	x0, [x29, #-16]
  417ca8:	stur	x1, [x29, #-24]
  417cac:	str	x2, [sp, #32]
  417cb0:	str	x3, [sp, #24]
  417cb4:	ldur	x9, [x29, #-24]
  417cb8:	ldrb	w10, [x9]
  417cbc:	strb	w10, [sp, #23]
  417cc0:	ldr	x9, [sp, #24]
  417cc4:	add	x9, x9, #0x51c
  417cc8:	ldrb	w10, [sp, #23]
  417ccc:	mov	w11, w10
  417cd0:	ldr	w10, [x9, x11, lsl #2]
  417cd4:	str	w10, [sp, #16]
  417cd8:	ldr	w10, [sp, #16]
  417cdc:	cmp	w10, w8
  417ce0:	b.ne	417d44 <wcrtomb@plt+0x15434>  // b.any
  417ce4:	ldur	x1, [x29, #-24]
  417ce8:	ldr	x2, [sp, #32]
  417cec:	ldr	x8, [sp, #24]
  417cf0:	add	x3, x8, #0x110
  417cf4:	add	x0, sp, #0xc
  417cf8:	bl	4271dc <wcrtomb@plt+0x248cc>
  417cfc:	str	x0, [sp]
  417d00:	ldr	x8, [sp]
  417d04:	mov	x9, xzr
  417d08:	cmp	x9, x8
  417d0c:	cset	w10, cs  // cs = hs, nlast
  417d10:	tbnz	w10, #0, 417d3c <wcrtomb@plt+0x1542c>
  417d14:	ldr	x8, [sp]
  417d18:	mov	x9, #0xfffffffffffffffe    	// #-2
  417d1c:	cmp	x8, x9
  417d20:	b.cs	417d3c <wcrtomb@plt+0x1542c>  // b.hs, b.nlast
  417d24:	ldr	w8, [sp, #12]
  417d28:	ldur	x9, [x29, #-16]
  417d2c:	str	w8, [x9]
  417d30:	ldr	x9, [sp]
  417d34:	stur	w9, [x29, #-4]
  417d38:	b	417d58 <wcrtomb@plt+0x15448>
  417d3c:	ldr	x8, [sp, #24]
  417d40:	str	xzr, [x8, #272]
  417d44:	ldr	w8, [sp, #16]
  417d48:	ldur	x9, [x29, #-16]
  417d4c:	str	w8, [x9]
  417d50:	mov	w8, #0x1                   	// #1
  417d54:	stur	w8, [x29, #-4]
  417d58:	ldur	w0, [x29, #-4]
  417d5c:	ldp	x29, x30, [sp, #64]
  417d60:	add	sp, sp, #0x50
  417d64:	ret
  417d68:	sub	sp, sp, #0x10
  417d6c:	strb	w0, [sp, #15]
  417d70:	ldrb	w0, [sp, #15]
  417d74:	add	sp, sp, #0x10
  417d78:	ret
  417d7c:	sub	sp, sp, #0x20
  417d80:	str	x0, [sp, #24]
  417d84:	str	x1, [sp, #16]
  417d88:	str	xzr, [sp, #8]
  417d8c:	str	wzr, [sp, #4]
  417d90:	ldr	w8, [sp, #4]
  417d94:	cmp	w8, #0x4
  417d98:	b.ge	417dd4 <wcrtomb@plt+0x154c4>  // b.tcont
  417d9c:	ldr	x8, [sp, #24]
  417da0:	ldrsw	x9, [sp, #4]
  417da4:	ldr	x8, [x8, x9, lsl #3]
  417da8:	ldr	x9, [sp, #16]
  417dac:	ldrsw	x10, [sp, #4]
  417db0:	ldr	x9, [x9, x10, lsl #3]
  417db4:	eor	x8, x8, x9
  417db8:	ldr	x9, [sp, #8]
  417dbc:	orr	x8, x9, x8
  417dc0:	str	x8, [sp, #8]
  417dc4:	ldr	w8, [sp, #4]
  417dc8:	add	w8, w8, #0x1
  417dcc:	str	w8, [sp, #4]
  417dd0:	b	417d90 <wcrtomb@plt+0x15480>
  417dd4:	ldr	x8, [sp, #8]
  417dd8:	cmp	x8, #0x0
  417ddc:	cset	w9, eq  // eq = none
  417de0:	and	w0, w9, #0x1
  417de4:	add	sp, sp, #0x20
  417de8:	ret
  417dec:	sub	sp, sp, #0x40
  417df0:	stp	x29, x30, [sp, #48]
  417df4:	add	x29, sp, #0x30
  417df8:	stur	x0, [x29, #-16]
  417dfc:	str	x1, [sp, #24]
  417e00:	str	x2, [sp, #16]
  417e04:	str	x3, [sp, #8]
  417e08:	str	x4, [sp]
  417e0c:	ldr	x8, [sp, #24]
  417e10:	ldr	x9, [sp, #16]
  417e14:	ldr	x9, [x9]
  417e18:	cmp	x8, x9
  417e1c:	b.ge	417e2c <wcrtomb@plt+0x1551c>  // b.tcont
  417e20:	ldur	x8, [x29, #-16]
  417e24:	stur	x8, [x29, #-8]
  417e28:	b	417e48 <wcrtomb@plt+0x15538>
  417e2c:	ldur	x0, [x29, #-16]
  417e30:	ldr	x1, [sp, #16]
  417e34:	ldr	x3, [sp, #8]
  417e38:	ldr	x4, [sp]
  417e3c:	mov	x2, #0x1                   	// #1
  417e40:	bl	4141d8 <wcrtomb@plt+0x118c8>
  417e44:	stur	x0, [x29, #-8]
  417e48:	ldur	x0, [x29, #-8]
  417e4c:	ldp	x29, x30, [sp, #48]
  417e50:	add	sp, sp, #0x40
  417e54:	ret
  417e58:	sub	sp, sp, #0x20
  417e5c:	stp	x29, x30, [sp, #16]
  417e60:	add	x29, sp, #0x10
  417e64:	str	x0, [sp, #8]
  417e68:	ldr	x8, [sp, #8]
  417e6c:	ldr	x8, [x8, #40]
  417e70:	cbnz	x8, 417e84 <wcrtomb@plt+0x15574>
  417e74:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  417e78:	add	x0, x0, #0x8b6
  417e7c:	bl	4028b0 <gettext@plt>
  417e80:	bl	402a2c <wcrtomb@plt+0x11c>
  417e84:	ldr	x0, [sp, #8]
  417e88:	bl	417050 <wcrtomb@plt+0x14740>
  417e8c:	ldp	x29, x30, [sp, #16]
  417e90:	add	sp, sp, #0x20
  417e94:	ret
  417e98:	sub	sp, sp, #0x30
  417e9c:	stp	x29, x30, [sp, #32]
  417ea0:	add	x29, sp, #0x20
  417ea4:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  417ea8:	add	x8, x8, #0x510
  417eac:	str	x0, [sp, #16]
  417eb0:	str	wzr, [sp, #12]
  417eb4:	str	x8, [sp]
  417eb8:	ldrsw	x8, [sp, #12]
  417ebc:	mov	x9, #0x18                  	// #24
  417ec0:	mul	x8, x9, x8
  417ec4:	ldr	x9, [sp]
  417ec8:	add	x8, x9, x8
  417ecc:	ldr	x8, [x8]
  417ed0:	cbz	x8, 417f28 <wcrtomb@plt+0x15618>
  417ed4:	ldr	x0, [sp, #16]
  417ed8:	ldrsw	x8, [sp, #12]
  417edc:	mov	x9, #0x18                  	// #24
  417ee0:	mul	x8, x9, x8
  417ee4:	ldr	x9, [sp]
  417ee8:	add	x8, x9, x8
  417eec:	ldr	x1, [x8]
  417ef0:	bl	413564 <wcrtomb@plt+0x10c54>
  417ef4:	tbnz	w0, #0, 417efc <wcrtomb@plt+0x155ec>
  417ef8:	b	417f18 <wcrtomb@plt+0x15608>
  417efc:	ldrsw	x8, [sp, #12]
  417f00:	mov	x9, #0x18                  	// #24
  417f04:	mul	x8, x9, x8
  417f08:	ldr	x9, [sp]
  417f0c:	add	x8, x9, x8
  417f10:	stur	x8, [x29, #-8]
  417f14:	b	417f30 <wcrtomb@plt+0x15620>
  417f18:	ldr	w8, [sp, #12]
  417f1c:	add	w8, w8, #0x1
  417f20:	str	w8, [sp, #12]
  417f24:	b	417eb8 <wcrtomb@plt+0x155a8>
  417f28:	mov	x8, xzr
  417f2c:	stur	x8, [x29, #-8]
  417f30:	ldur	x0, [x29, #-8]
  417f34:	ldp	x29, x30, [sp, #32]
  417f38:	add	sp, sp, #0x30
  417f3c:	ret
  417f40:	sub	sp, sp, #0x30
  417f44:	stp	x29, x30, [sp, #32]
  417f48:	add	x29, sp, #0x20
  417f4c:	stur	w0, [x29, #-8]
  417f50:	str	x1, [sp, #16]
  417f54:	ldur	w0, [x29, #-8]
  417f58:	bl	402400 <wctob@plt>
  417f5c:	str	w0, [sp, #12]
  417f60:	ldr	w8, [sp, #12]
  417f64:	cmp	w8, #0x0
  417f68:	cset	w8, ge  // ge = tcont
  417f6c:	tbnz	w8, #0, 417f80 <wcrtomb@plt+0x15670>
  417f70:	mov	w8, wzr
  417f74:	and	w8, w8, #0x1
  417f78:	sturb	w8, [x29, #-1]
  417f7c:	b	417f98 <wcrtomb@plt+0x15688>
  417f80:	ldr	w0, [sp, #12]
  417f84:	ldr	x1, [sp, #16]
  417f88:	bl	413e44 <wcrtomb@plt+0x11534>
  417f8c:	mov	w8, #0x1                   	// #1
  417f90:	and	w8, w8, #0x1
  417f94:	sturb	w8, [x29, #-1]
  417f98:	ldurb	w8, [x29, #-1]
  417f9c:	and	w0, w8, #0x1
  417fa0:	ldp	x29, x30, [sp, #32]
  417fa4:	add	sp, sp, #0x30
  417fa8:	ret
  417fac:	sub	sp, sp, #0x20
  417fb0:	str	x0, [sp, #24]
  417fb4:	str	xzr, [sp, #16]
  417fb8:	str	wzr, [sp, #12]
  417fbc:	ldr	w8, [sp, #12]
  417fc0:	cmp	w8, #0x4
  417fc4:	b.ge	417ff0 <wcrtomb@plt+0x156e0>  // b.tcont
  417fc8:	ldr	x8, [sp, #24]
  417fcc:	ldrsw	x9, [sp, #12]
  417fd0:	ldr	x8, [x8, x9, lsl #3]
  417fd4:	ldr	x9, [sp, #16]
  417fd8:	orr	x8, x9, x8
  417fdc:	str	x8, [sp, #16]
  417fe0:	ldr	w8, [sp, #12]
  417fe4:	add	w8, w8, #0x1
  417fe8:	str	w8, [sp, #12]
  417fec:	b	417fbc <wcrtomb@plt+0x156ac>
  417ff0:	ldr	x8, [sp, #16]
  417ff4:	cmp	x8, #0x0
  417ff8:	cset	w9, eq  // eq = none
  417ffc:	and	w0, w9, #0x1
  418000:	add	sp, sp, #0x20
  418004:	ret
  418008:	sub	sp, sp, #0x20
  41800c:	stp	x29, x30, [sp, #16]
  418010:	add	x29, sp, #0x10
  418014:	str	x0, [sp, #8]
  418018:	ldr	x0, [sp, #8]
  41801c:	bl	418094 <wcrtomb@plt+0x15784>
  418020:	ldr	x8, [sp, #8]
  418024:	ldr	x8, [x8, #128]
  418028:	mov	w9, #0x0                   	// #0
  41802c:	cmp	x8, #0x108
  418030:	str	w9, [sp, #4]
  418034:	b.eq	418064 <wcrtomb@plt+0x15754>  // b.none
  418038:	ldr	x8, [sp, #8]
  41803c:	ldr	x8, [x8, #128]
  418040:	mov	w9, #0x0                   	// #0
  418044:	cmp	x8, #0x106
  418048:	str	w9, [sp, #4]
  41804c:	b.eq	418064 <wcrtomb@plt+0x15754>  // b.none
  418050:	ldr	x8, [sp, #8]
  418054:	ldr	x8, [x8, #128]
  418058:	cmp	x8, #0x0
  41805c:	cset	w9, ge  // ge = tcont
  418060:	str	w9, [sp, #4]
  418064:	ldr	w8, [sp, #4]
  418068:	tbnz	w8, #0, 418070 <wcrtomb@plt+0x15760>
  41806c:	b	418088 <wcrtomb@plt+0x15778>
  418070:	ldr	x0, [sp, #8]
  418074:	bl	418094 <wcrtomb@plt+0x15784>
  418078:	ldr	x0, [sp, #8]
  41807c:	mov	x1, #0x105                 	// #261
  418080:	bl	41051c <wcrtomb@plt+0xdc0c>
  418084:	b	418020 <wcrtomb@plt+0x15710>
  418088:	ldp	x29, x30, [sp, #16]
  41808c:	add	sp, sp, #0x20
  418090:	ret
  418094:	sub	sp, sp, #0x30
  418098:	stp	x29, x30, [sp, #32]
  41809c:	add	x29, sp, #0x20
  4180a0:	stur	x0, [x29, #-8]
  4180a4:	ldur	x0, [x29, #-8]
  4180a8:	bl	4182c0 <wcrtomb@plt+0x159b0>
  4180ac:	ldur	x8, [x29, #-8]
  4180b0:	ldr	x8, [x8, #128]
  4180b4:	mov	w9, #0x1                   	// #1
  4180b8:	cmp	x8, #0x101
  4180bc:	str	w9, [sp]
  4180c0:	b.eq	418108 <wcrtomb@plt+0x157f8>  // b.none
  4180c4:	ldur	x8, [x29, #-8]
  4180c8:	ldr	x8, [x8, #128]
  4180cc:	mov	w9, #0x1                   	// #1
  4180d0:	cmp	x8, #0x102
  4180d4:	str	w9, [sp]
  4180d8:	b.eq	418108 <wcrtomb@plt+0x157f8>  // b.none
  4180dc:	ldur	x8, [x29, #-8]
  4180e0:	ldr	x8, [x8, #128]
  4180e4:	mov	w9, #0x1                   	// #1
  4180e8:	cmp	x8, #0x103
  4180ec:	str	w9, [sp]
  4180f0:	b.eq	418108 <wcrtomb@plt+0x157f8>  // b.none
  4180f4:	ldur	x8, [x29, #-8]
  4180f8:	ldr	x8, [x8, #128]
  4180fc:	cmp	x8, #0x104
  418100:	cset	w9, eq  // eq = none
  418104:	str	w9, [sp]
  418108:	ldr	w8, [sp]
  41810c:	tbnz	w8, #0, 418114 <wcrtomb@plt+0x15804>
  418110:	b	4182b4 <wcrtomb@plt+0x159a4>
  418114:	ldur	x8, [x29, #-8]
  418118:	ldr	x8, [x8, #128]
  41811c:	cmp	x8, #0x104
  418120:	b.ne	418244 <wcrtomb@plt+0x15934>  // b.any
  418124:	ldur	x8, [x29, #-8]
  418128:	ldr	w9, [x8, #64]
  41812c:	cbnz	w9, 41813c <wcrtomb@plt+0x1582c>
  418130:	ldur	x8, [x29, #-8]
  418134:	ldr	w9, [x8, #68]
  418138:	cbz	w9, 418244 <wcrtomb@plt+0x15934>
  41813c:	ldur	x0, [x29, #-8]
  418140:	ldur	x8, [x29, #-8]
  418144:	ldr	x1, [x8, #152]
  418148:	bl	41852c <wcrtomb@plt+0x15c1c>
  41814c:	str	x0, [sp, #16]
  418150:	ldur	x8, [x29, #-8]
  418154:	ldr	x8, [x8, #152]
  418158:	ldr	x9, [sp, #16]
  41815c:	subs	x8, x8, x9
  418160:	str	x8, [sp, #8]
  418164:	ldur	x8, [x29, #-8]
  418168:	ldr	w10, [x8, #68]
  41816c:	cmp	w10, #0x0
  418170:	cset	w10, ge  // ge = tcont
  418174:	tbnz	w10, #0, 418184 <wcrtomb@plt+0x15874>
  418178:	ldur	x0, [x29, #-8]
  41817c:	mov	x1, #0x103                 	// #259
  418180:	bl	41051c <wcrtomb@plt+0xdc0c>
  418184:	ldur	x8, [x29, #-8]
  418188:	ldr	w9, [x8, #64]
  41818c:	cbnz	w9, 41819c <wcrtomb@plt+0x1588c>
  418190:	ldur	x0, [x29, #-8]
  418194:	mov	x1, #0x101                 	// #257
  418198:	bl	41051c <wcrtomb@plt+0xdc0c>
  41819c:	mov	w8, #0x1                   	// #1
  4181a0:	str	w8, [sp, #4]
  4181a4:	ldr	w8, [sp, #4]
  4181a8:	ldur	x9, [x29, #-8]
  4181ac:	ldr	w10, [x9, #64]
  4181b0:	cmp	w8, w10
  4181b4:	b.ge	4181e4 <wcrtomb@plt+0x158d4>  // b.tcont
  4181b8:	ldur	x0, [x29, #-8]
  4181bc:	ldr	x1, [sp, #8]
  4181c0:	ldr	x2, [sp, #16]
  4181c4:	bl	4185f8 <wcrtomb@plt+0x15ce8>
  4181c8:	ldur	x0, [x29, #-8]
  4181cc:	mov	x1, #0x105                 	// #261
  4181d0:	bl	41051c <wcrtomb@plt+0xdc0c>
  4181d4:	ldr	w8, [sp, #4]
  4181d8:	add	w8, w8, #0x1
  4181dc:	str	w8, [sp, #4]
  4181e0:	b	4181a4 <wcrtomb@plt+0x15894>
  4181e4:	ldr	w8, [sp, #4]
  4181e8:	ldur	x9, [x29, #-8]
  4181ec:	ldr	w10, [x9, #68]
  4181f0:	cmp	w8, w10
  4181f4:	b.ge	418230 <wcrtomb@plt+0x15920>  // b.tcont
  4181f8:	ldur	x0, [x29, #-8]
  4181fc:	ldr	x1, [sp, #8]
  418200:	ldr	x2, [sp, #16]
  418204:	bl	4185f8 <wcrtomb@plt+0x15ce8>
  418208:	ldur	x0, [x29, #-8]
  41820c:	mov	x1, #0x101                 	// #257
  418210:	bl	41051c <wcrtomb@plt+0xdc0c>
  418214:	ldur	x0, [x29, #-8]
  418218:	mov	x1, #0x105                 	// #261
  41821c:	bl	41051c <wcrtomb@plt+0xdc0c>
  418220:	ldr	w8, [sp, #4]
  418224:	add	w8, w8, #0x1
  418228:	str	w8, [sp, #4]
  41822c:	b	4181e4 <wcrtomb@plt+0x158d4>
  418230:	ldur	x0, [x29, #-8]
  418234:	bl	41061c <wcrtomb@plt+0xdd0c>
  418238:	ldur	x8, [x29, #-8]
  41823c:	str	x0, [x8, #128]
  418240:	b	4182b0 <wcrtomb@plt+0x159a0>
  418244:	ldur	x8, [x29, #-8]
  418248:	ldr	x8, [x8, #128]
  41824c:	cmp	x8, #0x104
  418250:	b.ne	418290 <wcrtomb@plt+0x15980>  // b.any
  418254:	ldur	x0, [x29, #-8]
  418258:	ldur	x8, [x29, #-8]
  41825c:	ldr	x1, [x8, #152]
  418260:	bl	41852c <wcrtomb@plt+0x15c1c>
  418264:	ldur	x8, [x29, #-8]
  418268:	ldr	x9, [x8, #152]
  41826c:	subs	x9, x9, x0
  418270:	str	x9, [x8, #152]
  418274:	ldur	x0, [x29, #-8]
  418278:	bl	41061c <wcrtomb@plt+0xdd0c>
  41827c:	ldur	x8, [x29, #-8]
  418280:	str	x0, [x8, #128]
  418284:	ldur	x0, [x29, #-8]
  418288:	bl	418094 <wcrtomb@plt+0x15784>
  41828c:	b	4182b0 <wcrtomb@plt+0x159a0>
  418290:	ldur	x0, [x29, #-8]
  418294:	ldur	x8, [x29, #-8]
  418298:	ldr	x1, [x8, #128]
  41829c:	bl	41051c <wcrtomb@plt+0xdc0c>
  4182a0:	ldur	x0, [x29, #-8]
  4182a4:	bl	41061c <wcrtomb@plt+0xdd0c>
  4182a8:	ldur	x8, [x29, #-8]
  4182ac:	str	x0, [x8, #128]
  4182b0:	b	4180ac <wcrtomb@plt+0x1579c>
  4182b4:	ldp	x29, x30, [sp, #32]
  4182b8:	add	sp, sp, #0x30
  4182bc:	ret
  4182c0:	sub	sp, sp, #0xa0
  4182c4:	stp	x29, x30, [sp, #144]
  4182c8:	add	x29, sp, #0x90
  4182cc:	mov	x8, xzr
  4182d0:	stur	x0, [x29, #-8]
  4182d4:	ldur	x9, [x29, #-8]
  4182d8:	ldr	x9, [x9, #128]
  4182dc:	cmp	x8, x9
  4182e0:	cset	w10, gt
  4182e4:	tbnz	w10, #0, 4182f8 <wcrtomb@plt+0x159e8>
  4182e8:	ldur	x8, [x29, #-8]
  4182ec:	ldr	x8, [x8, #128]
  4182f0:	cmp	x8, #0x100
  4182f4:	b.lt	4183a8 <wcrtomb@plt+0x15a98>  // b.tstop
  4182f8:	ldur	x8, [x29, #-8]
  4182fc:	ldr	x8, [x8, #128]
  418300:	cmp	x8, #0x114
  418304:	b.ge	4183a8 <wcrtomb@plt+0x15a98>  // b.tcont
  418308:	ldur	x8, [x29, #-8]
  41830c:	ldr	x8, [x8, #128]
  418310:	cmp	x8, #0x10b
  418314:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418318:	ldur	x8, [x29, #-8]
  41831c:	ldr	x8, [x8, #128]
  418320:	cmp	x8, #0x112
  418324:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418328:	ldur	x8, [x29, #-8]
  41832c:	ldr	x8, [x8, #128]
  418330:	cmp	x8, #0x10c
  418334:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418338:	ldur	x8, [x29, #-8]
  41833c:	ldr	x8, [x8, #128]
  418340:	cmp	x8, #0x10d
  418344:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418348:	ldur	x8, [x29, #-8]
  41834c:	ldr	x8, [x8, #128]
  418350:	cmp	x8, #0x10e
  418354:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418358:	ldur	x8, [x29, #-8]
  41835c:	ldr	x8, [x8, #128]
  418360:	cmp	x8, #0x10f
  418364:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418368:	ldur	x8, [x29, #-8]
  41836c:	ldr	x8, [x8, #128]
  418370:	cmp	x8, #0x110
  418374:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418378:	ldur	x8, [x29, #-8]
  41837c:	ldr	x8, [x8, #128]
  418380:	cmp	x8, #0x111
  418384:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418388:	ldur	x8, [x29, #-8]
  41838c:	ldr	x8, [x8, #128]
  418390:	cmp	x8, #0x10a
  418394:	b.eq	4183a8 <wcrtomb@plt+0x15a98>  // b.none
  418398:	ldur	x8, [x29, #-8]
  41839c:	ldr	x8, [x8, #128]
  4183a0:	cmp	x8, #0x113
  4183a4:	b.ne	4183f8 <wcrtomb@plt+0x15ae8>  // b.any
  4183a8:	ldur	x8, [x29, #-8]
  4183ac:	ldr	x8, [x8, #128]
  4183b0:	cmp	x8, #0x10a
  4183b4:	b.ne	4183d4 <wcrtomb@plt+0x15ac4>  // b.any
  4183b8:	ldur	x8, [x29, #-8]
  4183bc:	ldrb	w9, [x8, #1050]
  4183c0:	tbnz	w9, #0, 4183c8 <wcrtomb@plt+0x15ab8>
  4183c4:	b	4183d4 <wcrtomb@plt+0x15ac4>
  4183c8:	ldur	x0, [x29, #-8]
  4183cc:	bl	4186d4 <wcrtomb@plt+0x15dc4>
  4183d0:	b	4183e4 <wcrtomb@plt+0x15ad4>
  4183d4:	ldur	x0, [x29, #-8]
  4183d8:	ldur	x8, [x29, #-8]
  4183dc:	ldr	x1, [x8, #128]
  4183e0:	bl	41051c <wcrtomb@plt+0xdc0c>
  4183e4:	ldur	x0, [x29, #-8]
  4183e8:	bl	41061c <wcrtomb@plt+0xdd0c>
  4183ec:	ldur	x8, [x29, #-8]
  4183f0:	str	x0, [x8, #128]
  4183f4:	b	418520 <wcrtomb@plt+0x15c10>
  4183f8:	ldur	x8, [x29, #-8]
  4183fc:	ldr	x8, [x8, #128]
  418400:	cmp	x8, #0x109
  418404:	b.ne	4184b8 <wcrtomb@plt+0x15ba8>  // b.any
  418408:	ldur	x8, [x29, #-8]
  41840c:	ldr	w9, [x8, #72]
  418410:	mov	w10, #0xffffffff            	// #-1
  418414:	cmp	w9, w10
  418418:	b.ne	41842c <wcrtomb@plt+0x15b1c>  // b.any
  41841c:	ldur	x0, [x29, #-8]
  418420:	mov	x1, #0x112                 	// #274
  418424:	bl	41051c <wcrtomb@plt+0xdc0c>
  418428:	b	4184a4 <wcrtomb@plt+0x15b94>
  41842c:	ldur	x0, [x29, #-8]
  418430:	ldur	x8, [x29, #-8]
  418434:	ldr	w1, [x8, #72]
  418438:	bl	413f58 <wcrtomb@plt+0x11648>
  41843c:	ldur	x8, [x29, #-8]
  418440:	ldrb	w9, [x8, #457]
  418444:	tbnz	w9, #0, 41844c <wcrtomb@plt+0x15b3c>
  418448:	b	4184a4 <wcrtomb@plt+0x15b94>
  41844c:	ldur	x8, [x29, #-8]
  418450:	ldr	w0, [x8, #72]
  418454:	add	x1, sp, #0x8
  418458:	bl	41ca4c <wcrtomb@plt+0x1a13c>
  41845c:	str	w0, [sp, #4]
  418460:	str	wzr, [sp]
  418464:	ldr	w8, [sp]
  418468:	ldr	w9, [sp, #4]
  41846c:	cmp	w8, w9
  418470:	b.ge	4184a4 <wcrtomb@plt+0x15b94>  // b.tcont
  418474:	ldur	x0, [x29, #-8]
  418478:	ldrsw	x8, [sp]
  41847c:	add	x9, sp, #0x8
  418480:	ldr	w1, [x9, x8, lsl #2]
  418484:	bl	413f58 <wcrtomb@plt+0x11648>
  418488:	ldur	x0, [x29, #-8]
  41848c:	mov	x1, #0x106                 	// #262
  418490:	bl	41051c <wcrtomb@plt+0xdc0c>
  418494:	ldr	w8, [sp]
  418498:	add	w8, w8, #0x1
  41849c:	str	w8, [sp]
  4184a0:	b	418464 <wcrtomb@plt+0x15b54>
  4184a4:	ldur	x0, [x29, #-8]
  4184a8:	bl	41061c <wcrtomb@plt+0xdd0c>
  4184ac:	ldur	x8, [x29, #-8]
  4184b0:	str	x0, [x8, #128]
  4184b4:	b	418520 <wcrtomb@plt+0x15c10>
  4184b8:	ldur	x8, [x29, #-8]
  4184bc:	ldr	x8, [x8, #128]
  4184c0:	cmp	x8, #0x107
  4184c4:	b.ne	418514 <wcrtomb@plt+0x15c04>  // b.any
  4184c8:	ldur	x0, [x29, #-8]
  4184cc:	bl	41061c <wcrtomb@plt+0xdd0c>
  4184d0:	ldur	x8, [x29, #-8]
  4184d4:	str	x0, [x8, #128]
  4184d8:	ldur	x0, [x29, #-8]
  4184dc:	bl	41150c <wcrtomb@plt+0xebfc>
  4184e0:	ldur	x8, [x29, #-8]
  4184e4:	ldr	x8, [x8, #128]
  4184e8:	cmp	x8, #0x108
  4184ec:	b.eq	418500 <wcrtomb@plt+0x15bf0>  // b.none
  4184f0:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4184f4:	add	x0, x0, #0x8f4
  4184f8:	bl	4028b0 <gettext@plt>
  4184fc:	bl	402a2c <wcrtomb@plt+0x11c>
  418500:	ldur	x0, [x29, #-8]
  418504:	bl	41061c <wcrtomb@plt+0xdd0c>
  418508:	ldur	x8, [x29, #-8]
  41850c:	str	x0, [x8, #128]
  418510:	b	418520 <wcrtomb@plt+0x15c10>
  418514:	ldur	x0, [x29, #-8]
  418518:	mov	x1, #0x100                 	// #256
  41851c:	bl	41051c <wcrtomb@plt+0xdc0c>
  418520:	ldp	x29, x30, [sp, #144]
  418524:	add	sp, sp, #0xa0
  418528:	ret
  41852c:	sub	sp, sp, #0x40
  418530:	stp	x29, x30, [sp, #48]
  418534:	add	x29, sp, #0x30
  418538:	stur	x0, [x29, #-16]
  41853c:	str	x1, [sp, #24]
  418540:	ldur	x8, [x29, #-16]
  418544:	ldr	x8, [x8, #144]
  418548:	ldr	x9, [sp, #24]
  41854c:	subs	x9, x9, #0x1
  418550:	ldr	x8, [x8, x9, lsl #3]
  418554:	subs	x9, x8, #0x101
  418558:	cmp	x9, #0x2
  41855c:	str	x8, [sp, #8]
  418560:	b.ls	418588 <wcrtomb@plt+0x15c78>  // b.plast
  418564:	b	418568 <wcrtomb@plt+0x15c58>
  418568:	ldr	x8, [sp, #8]
  41856c:	subs	x9, x8, #0x105
  418570:	cmp	x9, #0x1
  418574:	b.ls	4185a4 <wcrtomb@plt+0x15c94>  // b.plast
  418578:	b	41857c <wcrtomb@plt+0x15c6c>
  41857c:	mov	x8, #0x1                   	// #1
  418580:	stur	x8, [x29, #-8]
  418584:	b	4185e8 <wcrtomb@plt+0x15cd8>
  418588:	ldur	x0, [x29, #-16]
  41858c:	ldr	x8, [sp, #24]
  418590:	subs	x1, x8, #0x1
  418594:	bl	41852c <wcrtomb@plt+0x15c1c>
  418598:	add	x8, x0, #0x1
  41859c:	stur	x8, [x29, #-8]
  4185a0:	b	4185e8 <wcrtomb@plt+0x15cd8>
  4185a4:	ldur	x0, [x29, #-16]
  4185a8:	ldr	x8, [sp, #24]
  4185ac:	subs	x1, x8, #0x1
  4185b0:	bl	41852c <wcrtomb@plt+0x15c1c>
  4185b4:	str	x0, [sp, #16]
  4185b8:	ldr	x8, [sp, #16]
  4185bc:	add	x8, x8, #0x1
  4185c0:	ldur	x0, [x29, #-16]
  4185c4:	ldr	x9, [sp, #24]
  4185c8:	subs	x9, x9, #0x1
  4185cc:	ldr	x10, [sp, #16]
  4185d0:	subs	x1, x9, x10
  4185d4:	str	x8, [sp]
  4185d8:	bl	41852c <wcrtomb@plt+0x15c1c>
  4185dc:	ldr	x8, [sp]
  4185e0:	add	x9, x8, x0
  4185e4:	stur	x9, [x29, #-8]
  4185e8:	ldur	x0, [x29, #-8]
  4185ec:	ldp	x29, x30, [sp, #48]
  4185f0:	add	sp, sp, #0x40
  4185f4:	ret
  4185f8:	sub	sp, sp, #0x40
  4185fc:	stp	x29, x30, [sp, #48]
  418600:	add	x29, sp, #0x30
  418604:	stur	x0, [x29, #-8]
  418608:	stur	x1, [x29, #-16]
  41860c:	str	x2, [sp, #24]
  418610:	ldur	x8, [x29, #-8]
  418614:	ldrb	w9, [x8, #1048]
  418618:	tbnz	w9, #0, 418620 <wcrtomb@plt+0x15d10>
  41861c:	b	418680 <wcrtomb@plt+0x15d70>
  418620:	str	xzr, [sp, #16]
  418624:	ldr	x8, [sp, #16]
  418628:	ldr	x9, [sp, #24]
  41862c:	cmp	x8, x9
  418630:	b.ge	41867c <wcrtomb@plt+0x15d6c>  // b.tcont
  418634:	ldur	x0, [x29, #-8]
  418638:	ldur	x8, [x29, #-8]
  41863c:	ldr	x8, [x8, #144]
  418640:	ldur	x9, [x29, #-16]
  418644:	ldr	x10, [sp, #16]
  418648:	add	x9, x9, x10
  41864c:	ldr	x1, [x8, x9, lsl #3]
  418650:	ldur	x8, [x29, #-8]
  418654:	ldr	x8, [x8, #280]
  418658:	ldur	x9, [x29, #-16]
  41865c:	ldr	x10, [sp, #16]
  418660:	add	x9, x9, x10
  418664:	ldrb	w2, [x8, x9]
  418668:	bl	414060 <wcrtomb@plt+0x11750>
  41866c:	ldr	x8, [sp, #16]
  418670:	add	x8, x8, #0x1
  418674:	str	x8, [sp, #16]
  418678:	b	418624 <wcrtomb@plt+0x15d14>
  41867c:	b	4186c8 <wcrtomb@plt+0x15db8>
  418680:	str	xzr, [sp, #8]
  418684:	ldr	x8, [sp, #8]
  418688:	ldr	x9, [sp, #24]
  41868c:	cmp	x8, x9
  418690:	b.ge	4186c8 <wcrtomb@plt+0x15db8>  // b.tcont
  418694:	ldur	x0, [x29, #-8]
  418698:	ldur	x8, [x29, #-8]
  41869c:	ldr	x8, [x8, #144]
  4186a0:	ldur	x9, [x29, #-16]
  4186a4:	ldr	x10, [sp, #8]
  4186a8:	add	x9, x9, x10
  4186ac:	ldr	x1, [x8, x9, lsl #3]
  4186b0:	mov	w2, #0x3                   	// #3
  4186b4:	bl	414060 <wcrtomb@plt+0x11750>
  4186b8:	ldr	x8, [sp, #8]
  4186bc:	add	x8, x8, #0x1
  4186c0:	str	x8, [sp, #8]
  4186c4:	b	418684 <wcrtomb@plt+0x15d74>
  4186c8:	ldp	x29, x30, [sp, #48]
  4186cc:	add	sp, sp, #0x40
  4186d0:	ret
  4186d4:	sub	sp, sp, #0x60
  4186d8:	stp	x29, x30, [sp, #80]
  4186dc:	add	x29, sp, #0x50
  4186e0:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4186e4:	add	x8, x8, #0x648
  4186e8:	stur	x0, [x29, #-8]
  4186ec:	ldur	x9, [x29, #-8]
  4186f0:	ldr	x9, [x9, #200]
  4186f4:	str	x8, [sp, #16]
  4186f8:	cbnz	x9, 4187b8 <wcrtomb@plt+0x15ea8>
  4186fc:	ldr	x8, [sp, #16]
  418700:	ldr	q0, [x8]
  418704:	str	q0, [sp, #32]
  418708:	ldr	q0, [x8, #16]
  41870c:	str	q0, [sp, #48]
  418710:	ldur	x9, [x29, #-8]
  418714:	ldr	x9, [x9, #448]
  418718:	and	x9, x9, #0x40
  41871c:	cbnz	x9, 41872c <wcrtomb@plt+0x15e1c>
  418720:	mov	w0, #0xa                   	// #10
  418724:	add	x1, sp, #0x20
  418728:	bl	417174 <wcrtomb@plt+0x14864>
  41872c:	ldur	x8, [x29, #-8]
  418730:	ldr	x8, [x8, #448]
  418734:	and	x8, x8, #0x80
  418738:	cbz	x8, 41874c <wcrtomb@plt+0x15e3c>
  41873c:	mov	w8, wzr
  418740:	mov	w0, w8
  418744:	add	x1, sp, #0x20
  418748:	bl	417174 <wcrtomb@plt+0x14864>
  41874c:	ldur	x0, [x29, #-8]
  418750:	add	x1, sp, #0x20
  418754:	bl	4171dc <wcrtomb@plt+0x148cc>
  418758:	add	x8, x0, #0x114
  41875c:	ldur	x9, [x29, #-8]
  418760:	str	x8, [x9, #200]
  418764:	mov	w10, #0x1                   	// #1
  418768:	str	w10, [sp, #28]
  41876c:	ldrsw	x8, [sp, #28]
  418770:	cmp	x8, #0x9
  418774:	b.cs	4187b8 <wcrtomb@plt+0x15ea8>  // b.hs, b.nlast
  418778:	ldur	x0, [x29, #-8]
  41877c:	ldrsw	x8, [sp, #28]
  418780:	mov	x9, #0x20                  	// #32
  418784:	mul	x8, x9, x8
  418788:	ldr	x9, [sp, #16]
  41878c:	add	x1, x9, x8
  418790:	bl	4171dc <wcrtomb@plt+0x148cc>
  418794:	add	x8, x0, #0x114
  418798:	ldur	x9, [x29, #-8]
  41879c:	add	x9, x9, #0xc8
  4187a0:	ldrsw	x10, [sp, #28]
  4187a4:	str	x8, [x9, x10, lsl #3]
  4187a8:	ldr	w8, [sp, #28]
  4187ac:	add	w8, w8, #0x1
  4187b0:	str	w8, [sp, #28]
  4187b4:	b	41876c <wcrtomb@plt+0x15e5c>
  4187b8:	ldur	x0, [x29, #-8]
  4187bc:	ldur	x8, [x29, #-8]
  4187c0:	ldr	x1, [x8, #200]
  4187c4:	bl	41051c <wcrtomb@plt+0xdc0c>
  4187c8:	ldur	x0, [x29, #-8]
  4187cc:	ldur	x8, [x29, #-8]
  4187d0:	ldr	x1, [x8, #208]
  4187d4:	bl	41051c <wcrtomb@plt+0xdc0c>
  4187d8:	ldur	x0, [x29, #-8]
  4187dc:	mov	x1, #0xe0                  	// #224
  4187e0:	bl	41051c <wcrtomb@plt+0xdc0c>
  4187e4:	ldur	x0, [x29, #-8]
  4187e8:	ldur	x8, [x29, #-8]
  4187ec:	ldr	x1, [x8, #224]
  4187f0:	bl	41051c <wcrtomb@plt+0xdc0c>
  4187f4:	ldur	x0, [x29, #-8]
  4187f8:	mov	x8, #0x105                 	// #261
  4187fc:	mov	x1, x8
  418800:	str	x8, [sp, #8]
  418804:	bl	41051c <wcrtomb@plt+0xdc0c>
  418808:	ldur	x0, [x29, #-8]
  41880c:	mov	x8, #0x106                 	// #262
  418810:	mov	x1, x8
  418814:	str	x8, [sp]
  418818:	bl	41051c <wcrtomb@plt+0xdc0c>
  41881c:	ldur	x0, [x29, #-8]
  418820:	mov	x1, #0xed                  	// #237
  418824:	bl	41051c <wcrtomb@plt+0xdc0c>
  418828:	ldur	x0, [x29, #-8]
  41882c:	ldur	x8, [x29, #-8]
  418830:	ldr	x1, [x8, #240]
  418834:	bl	41051c <wcrtomb@plt+0xdc0c>
  418838:	ldur	x0, [x29, #-8]
  41883c:	ldr	x1, [sp, #8]
  418840:	bl	41051c <wcrtomb@plt+0xdc0c>
  418844:	ldur	x0, [x29, #-8]
  418848:	ldr	x1, [sp]
  41884c:	bl	41051c <wcrtomb@plt+0xdc0c>
  418850:	ldur	x0, [x29, #-8]
  418854:	ldur	x8, [x29, #-8]
  418858:	ldr	x1, [x8, #232]
  41885c:	bl	41051c <wcrtomb@plt+0xdc0c>
  418860:	ldur	x0, [x29, #-8]
  418864:	mov	x1, #0xf0                  	// #240
  418868:	bl	41051c <wcrtomb@plt+0xdc0c>
  41886c:	ldur	x0, [x29, #-8]
  418870:	ldur	x8, [x29, #-8]
  418874:	ldr	x1, [x8, #248]
  418878:	bl	41051c <wcrtomb@plt+0xdc0c>
  41887c:	ldur	x0, [x29, #-8]
  418880:	ldr	x1, [sp, #8]
  418884:	bl	41051c <wcrtomb@plt+0xdc0c>
  418888:	ldur	x0, [x29, #-8]
  41888c:	ldr	x1, [sp]
  418890:	bl	41051c <wcrtomb@plt+0xdc0c>
  418894:	ldur	x0, [x29, #-8]
  418898:	mov	x1, #0xf4                  	// #244
  41889c:	bl	41051c <wcrtomb@plt+0xdc0c>
  4188a0:	ldur	x0, [x29, #-8]
  4188a4:	ldur	x8, [x29, #-8]
  4188a8:	ldr	x1, [x8, #264]
  4188ac:	bl	41051c <wcrtomb@plt+0xdc0c>
  4188b0:	ldur	x0, [x29, #-8]
  4188b4:	ldr	x1, [sp, #8]
  4188b8:	bl	41051c <wcrtomb@plt+0xdc0c>
  4188bc:	ldur	x0, [x29, #-8]
  4188c0:	ldr	x1, [sp]
  4188c4:	bl	41051c <wcrtomb@plt+0xdc0c>
  4188c8:	ldur	x0, [x29, #-8]
  4188cc:	ldur	x8, [x29, #-8]
  4188d0:	ldr	x1, [x8, #256]
  4188d4:	bl	41051c <wcrtomb@plt+0xdc0c>
  4188d8:	str	wzr, [sp, #24]
  4188dc:	ldr	w8, [sp, #24]
  4188e0:	cmp	w8, #0x3
  4188e4:	b.ge	418920 <wcrtomb@plt+0x16010>  // b.tcont
  4188e8:	ldur	x0, [x29, #-8]
  4188ec:	ldur	x8, [x29, #-8]
  4188f0:	ldr	x1, [x8, #216]
  4188f4:	bl	41051c <wcrtomb@plt+0xdc0c>
  4188f8:	ldur	x0, [x29, #-8]
  4188fc:	mov	x1, #0x105                 	// #261
  418900:	bl	41051c <wcrtomb@plt+0xdc0c>
  418904:	ldur	x0, [x29, #-8]
  418908:	mov	x1, #0x106                 	// #262
  41890c:	bl	41051c <wcrtomb@plt+0xdc0c>
  418910:	ldr	w8, [sp, #24]
  418914:	add	w8, w8, #0x1
  418918:	str	w8, [sp, #24]
  41891c:	b	4188dc <wcrtomb@plt+0x15fcc>
  418920:	ldp	x29, x30, [sp, #80]
  418924:	add	sp, sp, #0x60
  418928:	ret
  41892c:	sub	sp, sp, #0x20
  418930:	stp	x29, x30, [sp, #16]
  418934:	add	x29, sp, #0x10
  418938:	mov	x8, #0x10                  	// #16
  41893c:	str	x0, [sp, #8]
  418940:	str	x1, [sp]
  418944:	ldr	x0, [sp]
  418948:	mov	x1, x8
  41894c:	bl	42300c <wcrtomb@plt+0x206fc>
  418950:	ldr	x8, [sp, #8]
  418954:	str	x0, [x8]
  418958:	ldr	x8, [sp]
  41895c:	ldr	x9, [sp, #8]
  418960:	str	x8, [x9, #16]
  418964:	ldr	x8, [sp, #8]
  418968:	str	xzr, [x8, #8]
  41896c:	ldp	x29, x30, [sp, #16]
  418970:	add	sp, sp, #0x20
  418974:	ret
  418978:	sub	sp, sp, #0x30
  41897c:	stp	x29, x30, [sp, #32]
  418980:	add	x29, sp, #0x20
  418984:	mov	w8, #0xffffffff            	// #-1
  418988:	stur	x0, [x29, #-8]
  41898c:	str	x1, [sp, #16]
  418990:	str	x2, [sp, #8]
  418994:	ldur	x0, [x29, #-8]
  418998:	ldr	x1, [sp, #16]
  41899c:	ldr	x3, [sp, #8]
  4189a0:	mov	w2, w8
  4189a4:	bl	419570 <wcrtomb@plt+0x16c60>
  4189a8:	ldp	x29, x30, [sp, #32]
  4189ac:	add	sp, sp, #0x30
  4189b0:	ret
  4189b4:	sub	sp, sp, #0x20
  4189b8:	stp	x29, x30, [sp, #16]
  4189bc:	add	x29, sp, #0x10
  4189c0:	str	x0, [sp, #8]
  4189c4:	str	x1, [sp]
  4189c8:	ldr	x8, [sp]
  4189cc:	ldr	x8, [x8, #16]
  4189d0:	ldr	x9, [sp, #8]
  4189d4:	ldr	x9, [x9, #8]
  4189d8:	cmp	x8, x9
  4189dc:	b.ge	418a24 <wcrtomb@plt+0x16114>  // b.tcont
  4189e0:	ldr	x8, [sp]
  4189e4:	ldr	x0, [x8]
  4189e8:	bl	4026c0 <free@plt>
  4189ec:	ldr	x8, [sp]
  4189f0:	add	x1, x8, #0x10
  4189f4:	ldr	x8, [sp, #8]
  4189f8:	ldr	x8, [x8, #8]
  4189fc:	ldr	x9, [sp]
  418a00:	ldr	x9, [x9, #16]
  418a04:	subs	x2, x8, x9
  418a08:	mov	x8, xzr
  418a0c:	mov	x0, x8
  418a10:	mov	x3, #0xffffffffffffffff    	// #-1
  418a14:	mov	x4, #0x10                  	// #16
  418a18:	bl	4141d8 <wcrtomb@plt+0x118c8>
  418a1c:	ldr	x8, [sp]
  418a20:	str	x0, [x8]
  418a24:	ldr	x8, [sp, #8]
  418a28:	ldr	x8, [x8, #8]
  418a2c:	ldr	x9, [sp]
  418a30:	str	x8, [x9, #8]
  418a34:	ldr	x8, [sp, #8]
  418a38:	ldr	x8, [x8, #8]
  418a3c:	cbz	x8, 418a64 <wcrtomb@plt+0x16154>
  418a40:	ldr	x8, [sp]
  418a44:	ldr	x0, [x8]
  418a48:	ldr	x8, [sp, #8]
  418a4c:	ldr	x1, [x8]
  418a50:	ldr	x8, [sp, #8]
  418a54:	ldr	x8, [x8, #8]
  418a58:	mov	x9, #0x10                  	// #16
  418a5c:	mul	x2, x8, x9
  418a60:	bl	402290 <memcpy@plt>
  418a64:	ldp	x29, x30, [sp, #16]
  418a68:	add	sp, sp, #0x20
  418a6c:	ret
  418a70:	sub	sp, sp, #0x50
  418a74:	stp	x29, x30, [sp, #64]
  418a78:	add	x29, sp, #0x40
  418a7c:	add	x8, sp, #0x20
  418a80:	stur	x0, [x29, #-8]
  418a84:	ldur	x9, [x29, #-8]
  418a88:	ldr	x1, [x9, #176]
  418a8c:	mov	x0, x8
  418a90:	bl	41892c <wcrtomb@plt+0x1601c>
  418a94:	str	xzr, [sp, #24]
  418a98:	ldr	x8, [sp, #24]
  418a9c:	ldur	x9, [x29, #-8]
  418aa0:	ldr	x9, [x9, #152]
  418aa4:	cmp	x8, x9
  418aa8:	b.ge	418ca0 <wcrtomb@plt+0x16390>  // b.tcont
  418aac:	ldur	x8, [x29, #-8]
  418ab0:	ldr	x8, [x8, #320]
  418ab4:	ldr	x9, [sp, #24]
  418ab8:	mov	x10, #0x18                  	// #24
  418abc:	mul	x9, x10, x9
  418ac0:	add	x8, x8, x9
  418ac4:	ldr	x8, [x8, #8]
  418ac8:	cmp	x8, #0x0
  418acc:	cset	w11, le
  418ad0:	tbnz	w11, #0, 418c90 <wcrtomb@plt+0x16380>
  418ad4:	ldur	x8, [x29, #-8]
  418ad8:	ldr	x8, [x8, #144]
  418adc:	ldr	x9, [sp, #24]
  418ae0:	ldr	x8, [x8, x9, lsl #3]
  418ae4:	cmp	x8, #0x100
  418ae8:	b.lt	418c90 <wcrtomb@plt+0x16380>  // b.tstop
  418aec:	ldur	x8, [x29, #-8]
  418af0:	ldr	x8, [x8, #144]
  418af4:	ldr	x9, [sp, #24]
  418af8:	ldr	x8, [x8, x9, lsl #3]
  418afc:	cmp	x8, #0x112
  418b00:	b.eq	418c90 <wcrtomb@plt+0x16380>  // b.none
  418b04:	ldur	x8, [x29, #-8]
  418b08:	ldr	x8, [x8, #144]
  418b0c:	ldr	x9, [sp, #24]
  418b10:	ldr	x8, [x8, x9, lsl #3]
  418b14:	cmp	x8, #0x10a
  418b18:	b.eq	418c90 <wcrtomb@plt+0x16380>  // b.none
  418b1c:	ldur	x8, [x29, #-8]
  418b20:	ldr	x8, [x8, #144]
  418b24:	ldr	x9, [sp, #24]
  418b28:	ldr	x8, [x8, x9, lsl #3]
  418b2c:	cmp	x8, #0x113
  418b30:	b.eq	418c90 <wcrtomb@plt+0x16380>  // b.none
  418b34:	ldur	x8, [x29, #-8]
  418b38:	ldr	x8, [x8, #144]
  418b3c:	ldr	x9, [sp, #24]
  418b40:	ldr	x8, [x8, x9, lsl #3]
  418b44:	cmp	x8, #0x114
  418b48:	b.ge	418c90 <wcrtomb@plt+0x16380>  // b.tcont
  418b4c:	ldur	x8, [x29, #-8]
  418b50:	ldr	x8, [x8, #144]
  418b54:	ldr	x9, [sp, #24]
  418b58:	ldr	x8, [x8, x9, lsl #3]
  418b5c:	subs	x8, x8, #0x10c
  418b60:	cmp	x8, #0x5
  418b64:	str	x8, [sp]
  418b68:	b.hi	418bcc <wcrtomb@plt+0x162bc>  // b.pmore
  418b6c:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  418b70:	add	x8, x8, #0x4f4
  418b74:	ldr	x11, [sp]
  418b78:	ldrsw	x10, [x8, x11, lsl #2]
  418b7c:	add	x9, x8, x10
  418b80:	br	x9
  418b84:	mov	w8, #0x124                 	// #292
  418b88:	str	w8, [sp, #20]
  418b8c:	b	418bd4 <wcrtomb@plt+0x162c4>
  418b90:	mov	w8, #0x1c0                 	// #448
  418b94:	str	w8, [sp, #20]
  418b98:	b	418bd4 <wcrtomb@plt+0x162c4>
  418b9c:	mov	w8, #0x28                  	// #40
  418ba0:	str	w8, [sp, #20]
  418ba4:	b	418bd4 <wcrtomb@plt+0x162c4>
  418ba8:	mov	w8, #0x82                  	// #130
  418bac:	str	w8, [sp, #20]
  418bb0:	b	418bd4 <wcrtomb@plt+0x162c4>
  418bb4:	mov	w8, #0xaa                  	// #170
  418bb8:	str	w8, [sp, #20]
  418bbc:	b	418bd4 <wcrtomb@plt+0x162c4>
  418bc0:	mov	w8, #0x155                 	// #341
  418bc4:	str	w8, [sp, #20]
  418bc8:	b	418bd4 <wcrtomb@plt+0x162c4>
  418bcc:	mov	w8, #0x1ff                 	// #511
  418bd0:	str	w8, [sp, #20]
  418bd4:	ldr	x0, [sp, #24]
  418bd8:	ldur	x8, [x29, #-8]
  418bdc:	ldr	x8, [x8, #320]
  418be0:	ldr	x9, [sp, #24]
  418be4:	mov	x10, #0x18                  	// #24
  418be8:	mul	x9, x10, x9
  418bec:	add	x1, x8, x9
  418bf0:	bl	41987c <wcrtomb@plt+0x16f6c>
  418bf4:	str	xzr, [sp, #8]
  418bf8:	ldr	x8, [sp, #8]
  418bfc:	ldur	x9, [x29, #-8]
  418c00:	ldr	x9, [x9, #152]
  418c04:	cmp	x8, x9
  418c08:	b.ge	418c90 <wcrtomb@plt+0x16380>  // b.tcont
  418c0c:	ldr	x8, [sp, #24]
  418c10:	ldr	x9, [sp, #8]
  418c14:	cmp	x8, x9
  418c18:	b.eq	418c80 <wcrtomb@plt+0x16370>  // b.none
  418c1c:	ldur	x8, [x29, #-8]
  418c20:	ldr	x8, [x8, #320]
  418c24:	ldr	x9, [sp, #8]
  418c28:	mov	x10, #0x18                  	// #24
  418c2c:	mul	x9, x10, x9
  418c30:	add	x8, x8, x9
  418c34:	ldr	x8, [x8, #8]
  418c38:	cmp	x8, #0x0
  418c3c:	cset	w11, le
  418c40:	tbnz	w11, #0, 418c80 <wcrtomb@plt+0x16370>
  418c44:	ldur	x8, [x29, #-8]
  418c48:	ldr	x8, [x8, #320]
  418c4c:	ldr	x9, [sp, #8]
  418c50:	mov	x10, #0x18                  	// #24
  418c54:	mul	x9, x10, x9
  418c58:	add	x0, x8, x9
  418c5c:	ldr	x1, [sp, #24]
  418c60:	ldur	x8, [x29, #-8]
  418c64:	ldr	x8, [x8, #320]
  418c68:	ldr	x9, [sp, #24]
  418c6c:	mul	x9, x10, x9
  418c70:	add	x2, x8, x9
  418c74:	ldr	w3, [sp, #20]
  418c78:	add	x4, sp, #0x20
  418c7c:	bl	4199c0 <wcrtomb@plt+0x170b0>
  418c80:	ldr	x8, [sp, #8]
  418c84:	add	x8, x8, #0x1
  418c88:	str	x8, [sp, #8]
  418c8c:	b	418bf8 <wcrtomb@plt+0x162e8>
  418c90:	ldr	x8, [sp, #24]
  418c94:	add	x8, x8, #0x1
  418c98:	str	x8, [sp, #24]
  418c9c:	b	418a98 <wcrtomb@plt+0x16188>
  418ca0:	ldr	x0, [sp, #32]
  418ca4:	bl	4026c0 <free@plt>
  418ca8:	ldp	x29, x30, [sp, #64]
  418cac:	add	sp, sp, #0x50
  418cb0:	ret
  418cb4:	sub	sp, sp, #0x60
  418cb8:	stp	x29, x30, [sp, #80]
  418cbc:	add	x29, sp, #0x50
  418cc0:	stur	x0, [x29, #-8]
  418cc4:	ldur	x8, [x29, #-8]
  418cc8:	ldr	x0, [x8, #152]
  418ccc:	bl	4232a0 <wcrtomb@plt+0x20990>
  418cd0:	stur	x0, [x29, #-16]
  418cd4:	stur	xzr, [x29, #-24]
  418cd8:	ldur	x8, [x29, #-24]
  418cdc:	ldur	x9, [x29, #-8]
  418ce0:	ldr	x9, [x9, #152]
  418ce4:	cmp	x8, x9
  418ce8:	b.ge	418f00 <wcrtomb@plt+0x165f0>  // b.tcont
  418cec:	stur	xzr, [x29, #-32]
  418cf0:	ldur	x8, [x29, #-32]
  418cf4:	ldur	x9, [x29, #-8]
  418cf8:	ldr	x9, [x9, #320]
  418cfc:	ldur	x10, [x29, #-24]
  418d00:	mov	x11, #0x18                  	// #24
  418d04:	mul	x10, x11, x10
  418d08:	add	x9, x9, x10
  418d0c:	ldr	x9, [x9, #8]
  418d10:	cmp	x8, x9
  418d14:	b.ge	418ef0 <wcrtomb@plt+0x165e0>  // b.tcont
  418d18:	ldur	x8, [x29, #-8]
  418d1c:	ldr	x8, [x8, #320]
  418d20:	ldur	x9, [x29, #-24]
  418d24:	mov	x10, #0x18                  	// #24
  418d28:	mul	x9, x10, x9
  418d2c:	add	x8, x8, x9
  418d30:	ldr	x8, [x8]
  418d34:	ldur	x9, [x29, #-32]
  418d38:	mov	x10, #0x10                  	// #16
  418d3c:	mul	x9, x10, x9
  418d40:	ldr	x8, [x8, x9]
  418d44:	ldur	x9, [x29, #-24]
  418d48:	cmp	x8, x9
  418d4c:	b.ne	418d94 <wcrtomb@plt+0x16484>  // b.any
  418d50:	ldur	x8, [x29, #-16]
  418d54:	ldur	x9, [x29, #-8]
  418d58:	ldr	x9, [x9, #320]
  418d5c:	ldur	x10, [x29, #-24]
  418d60:	mov	x11, #0x18                  	// #24
  418d64:	mul	x10, x11, x10
  418d68:	add	x9, x9, x10
  418d6c:	ldr	x9, [x9]
  418d70:	ldur	x10, [x29, #-32]
  418d74:	mov	x11, #0x10                  	// #16
  418d78:	mul	x10, x11, x10
  418d7c:	ldr	x9, [x9, x10]
  418d80:	add	x8, x8, x9
  418d84:	ldrb	w12, [x8]
  418d88:	orr	w12, w12, #0x1
  418d8c:	strb	w12, [x8]
  418d90:	b	418ee0 <wcrtomb@plt+0x165d0>
  418d94:	ldur	x8, [x29, #-8]
  418d98:	ldr	x8, [x8, #320]
  418d9c:	ldur	x9, [x29, #-24]
  418da0:	mov	x10, #0x18                  	// #24
  418da4:	mul	x9, x10, x9
  418da8:	add	x8, x8, x9
  418dac:	ldr	x8, [x8]
  418db0:	ldur	x9, [x29, #-32]
  418db4:	mov	x10, #0x10                  	// #16
  418db8:	mul	x9, x10, x9
  418dbc:	ldr	x8, [x8, x9]
  418dc0:	ldur	x9, [x29, #-24]
  418dc4:	cmp	x8, x9
  418dc8:	b.ge	418e10 <wcrtomb@plt+0x16500>  // b.tcont
  418dcc:	ldur	x8, [x29, #-16]
  418dd0:	ldur	x9, [x29, #-8]
  418dd4:	ldr	x9, [x9, #320]
  418dd8:	ldur	x10, [x29, #-24]
  418ddc:	mov	x11, #0x18                  	// #24
  418de0:	mul	x10, x11, x10
  418de4:	add	x9, x9, x10
  418de8:	ldr	x9, [x9]
  418dec:	ldur	x10, [x29, #-32]
  418df0:	mov	x11, #0x10                  	// #16
  418df4:	mul	x10, x11, x10
  418df8:	ldr	x9, [x9, x10]
  418dfc:	add	x8, x8, x9
  418e00:	ldrb	w12, [x8]
  418e04:	orr	w12, w12, #0x2
  418e08:	strb	w12, [x8]
  418e0c:	b	418ee0 <wcrtomb@plt+0x165d0>
  418e10:	ldur	x8, [x29, #-16]
  418e14:	ldur	x9, [x29, #-8]
  418e18:	ldr	x9, [x9, #320]
  418e1c:	ldur	x10, [x29, #-24]
  418e20:	mov	x11, #0x18                  	// #24
  418e24:	mul	x10, x11, x10
  418e28:	add	x9, x9, x10
  418e2c:	ldr	x9, [x9]
  418e30:	ldur	x10, [x29, #-32]
  418e34:	mov	x11, #0x10                  	// #16
  418e38:	mul	x10, x11, x10
  418e3c:	ldr	x9, [x9, x10]
  418e40:	add	x8, x8, x9
  418e44:	ldrb	w12, [x8]
  418e48:	and	w12, w12, #0x8
  418e4c:	mov	w13, w12
  418e50:	strb	w13, [x8]
  418e54:	and	w12, w12, #0xff
  418e58:	cbz	w12, 418ea0 <wcrtomb@plt+0x16590>
  418e5c:	ldur	x8, [x29, #-16]
  418e60:	ldur	x9, [x29, #-8]
  418e64:	ldr	x9, [x9, #320]
  418e68:	ldur	x10, [x29, #-24]
  418e6c:	mov	x11, #0x18                  	// #24
  418e70:	mul	x10, x11, x10
  418e74:	add	x9, x9, x10
  418e78:	ldr	x9, [x9]
  418e7c:	ldur	x10, [x29, #-32]
  418e80:	mov	x11, #0x10                  	// #16
  418e84:	mul	x10, x11, x10
  418e88:	ldr	x9, [x9, x10]
  418e8c:	add	x8, x8, x9
  418e90:	ldrb	w12, [x8]
  418e94:	orr	w12, w12, #0x4
  418e98:	strb	w12, [x8]
  418e9c:	b	418ee0 <wcrtomb@plt+0x165d0>
  418ea0:	ldur	x8, [x29, #-16]
  418ea4:	ldur	x9, [x29, #-8]
  418ea8:	ldr	x9, [x9, #320]
  418eac:	ldur	x10, [x29, #-24]
  418eb0:	mov	x11, #0x18                  	// #24
  418eb4:	mul	x10, x11, x10
  418eb8:	add	x9, x9, x10
  418ebc:	ldr	x9, [x9]
  418ec0:	ldur	x10, [x29, #-32]
  418ec4:	mov	x11, #0x10                  	// #16
  418ec8:	mul	x10, x11, x10
  418ecc:	ldr	x9, [x9, x10]
  418ed0:	add	x8, x8, x9
  418ed4:	ldrb	w12, [x8]
  418ed8:	orr	w12, w12, #0x8
  418edc:	strb	w12, [x8]
  418ee0:	ldur	x8, [x29, #-32]
  418ee4:	add	x8, x8, #0x1
  418ee8:	stur	x8, [x29, #-32]
  418eec:	b	418cf0 <wcrtomb@plt+0x163e0>
  418ef0:	ldur	x8, [x29, #-24]
  418ef4:	add	x8, x8, #0x1
  418ef8:	stur	x8, [x29, #-24]
  418efc:	b	418cd8 <wcrtomb@plt+0x163c8>
  418f00:	ldur	x8, [x29, #-16]
  418f04:	ldrb	w9, [x8]
  418f08:	orr	w9, w9, #0x10
  418f0c:	strb	w9, [x8]
  418f10:	add	x8, sp, #0x18
  418f14:	str	x8, [sp, #16]
  418f18:	ldr	x0, [sp, #16]
  418f1c:	ldur	x8, [x29, #-8]
  418f20:	ldr	x1, [x8, #176]
  418f24:	bl	41892c <wcrtomb@plt+0x1601c>
  418f28:	ldur	x8, [x29, #-8]
  418f2c:	ldr	x0, [x8, #152]
  418f30:	mov	x1, #0x4                   	// #4
  418f34:	bl	42300c <wcrtomb@plt+0x206fc>
  418f38:	ldur	x8, [x29, #-8]
  418f3c:	str	x0, [x8, #336]
  418f40:	str	xzr, [sp, #8]
  418f44:	ldr	x8, [sp, #8]
  418f48:	ldur	x9, [x29, #-8]
  418f4c:	ldr	x9, [x9, #152]
  418f50:	cmp	x8, x9
  418f54:	b.ge	418f90 <wcrtomb@plt+0x16680>  // b.tcont
  418f58:	ldur	x8, [x29, #-16]
  418f5c:	ldr	x9, [sp, #8]
  418f60:	ldrb	w10, [x8, x9]
  418f64:	and	w10, w10, #0x10
  418f68:	cbz	w10, 418f80 <wcrtomb@plt+0x16670>
  418f6c:	ldur	x0, [x29, #-8]
  418f70:	ldr	x1, [sp, #8]
  418f74:	ldur	x2, [x29, #-16]
  418f78:	ldr	x3, [sp, #16]
  418f7c:	bl	419a2c <wcrtomb@plt+0x1711c>
  418f80:	ldr	x8, [sp, #8]
  418f84:	add	x8, x8, #0x1
  418f88:	str	x8, [sp, #8]
  418f8c:	b	418f44 <wcrtomb@plt+0x16634>
  418f90:	ldur	x0, [x29, #-8]
  418f94:	bl	419d94 <wcrtomb@plt+0x17484>
  418f98:	ldr	x8, [sp, #16]
  418f9c:	ldr	x0, [x8]
  418fa0:	bl	4026c0 <free@plt>
  418fa4:	ldur	x0, [x29, #-16]
  418fa8:	bl	4026c0 <free@plt>
  418fac:	ldp	x29, x30, [sp, #80]
  418fb0:	add	sp, sp, #0x60
  418fb4:	ret
  418fb8:	sub	sp, sp, #0x30
  418fbc:	stp	x29, x30, [sp, #32]
  418fc0:	add	x29, sp, #0x20
  418fc4:	mov	x3, #0xffffffffffffffff    	// #-1
  418fc8:	mov	x4, #0x10                  	// #16
  418fcc:	str	x0, [sp, #16]
  418fd0:	str	x1, [sp, #24]
  418fd4:	str	x2, [sp, #8]
  418fd8:	ldr	x8, [sp, #8]
  418fdc:	ldr	x8, [x8, #8]
  418fe0:	str	x8, [sp]
  418fe4:	ldr	x8, [sp, #8]
  418fe8:	ldr	x0, [x8]
  418fec:	ldr	x1, [sp]
  418ff0:	ldr	x8, [sp, #8]
  418ff4:	add	x2, x8, #0x10
  418ff8:	bl	417dec <wcrtomb@plt+0x154dc>
  418ffc:	ldr	x8, [sp, #8]
  419000:	str	x0, [x8]
  419004:	ldr	x8, [sp, #8]
  419008:	ldr	x8, [x8]
  41900c:	ldr	x9, [sp, #8]
  419010:	ldr	x10, [x9, #8]
  419014:	add	x11, x10, #0x1
  419018:	str	x11, [x9, #8]
  41901c:	ldr	q0, [sp, #16]
  419020:	str	q0, [x8, x10, lsl #4]
  419024:	ldp	x29, x30, [sp, #32]
  419028:	add	sp, sp, #0x30
  41902c:	ret
  419030:	sub	sp, sp, #0x10
  419034:	mov	w8, #0x49                  	// #73
  419038:	str	w0, [sp, #12]
  41903c:	ldr	w9, [sp, #12]
  419040:	ldr	w10, [sp, #12]
  419044:	eor	w9, w9, w10, asr #2
  419048:	tst	w9, w8
  41904c:	cset	w8, ne  // ne = any
  419050:	and	w0, w8, #0x1
  419054:	add	sp, sp, #0x10
  419058:	ret
  41905c:	sub	sp, sp, #0x10
  419060:	mov	w8, #0x49                  	// #73
  419064:	str	w0, [sp, #12]
  419068:	ldr	w9, [sp, #12]
  41906c:	ldr	w10, [sp, #12]
  419070:	eor	w9, w9, w10, asr #1
  419074:	tst	w9, w8
  419078:	cset	w8, ne  // ne = any
  41907c:	and	w0, w8, #0x1
  419080:	add	sp, sp, #0x10
  419084:	ret
  419088:	sub	sp, sp, #0x20
  41908c:	str	x0, [sp, #24]
  419090:	str	x1, [sp, #16]
  419094:	str	wzr, [sp, #12]
  419098:	str	xzr, [sp]
  41909c:	ldr	x8, [sp]
  4190a0:	ldr	x9, [sp, #16]
  4190a4:	ldr	x9, [x9, #8]
  4190a8:	cmp	x8, x9
  4190ac:	b.ge	4190f0 <wcrtomb@plt+0x167e0>  // b.tcont
  4190b0:	ldr	x8, [sp, #24]
  4190b4:	ldr	x8, [x8, #344]
  4190b8:	ldr	x9, [sp, #16]
  4190bc:	ldr	x9, [x9]
  4190c0:	ldr	x10, [sp]
  4190c4:	mov	x11, #0x10                  	// #16
  4190c8:	mul	x10, x11, x10
  4190cc:	ldr	x9, [x9, x10]
  4190d0:	ldr	w12, [x8, x9, lsl #2]
  4190d4:	ldr	w13, [sp, #12]
  4190d8:	orr	w12, w13, w12
  4190dc:	str	w12, [sp, #12]
  4190e0:	ldr	x8, [sp]
  4190e4:	add	x8, x8, #0x1
  4190e8:	str	x8, [sp]
  4190ec:	b	41909c <wcrtomb@plt+0x1678c>
  4190f0:	ldr	w0, [sp, #12]
  4190f4:	add	sp, sp, #0x20
  4190f8:	ret
  4190fc:	sub	sp, sp, #0x80
  419100:	stp	x29, x30, [sp, #112]
  419104:	add	x29, sp, #0x70
  419108:	stur	x0, [x29, #-16]
  41910c:	stur	x1, [x29, #-24]
  419110:	stur	w2, [x29, #-28]
  419114:	stur	xzr, [x29, #-40]
  419118:	stur	wzr, [x29, #-44]
  41911c:	str	xzr, [sp, #48]
  419120:	str	xzr, [sp, #56]
  419124:	ldr	x8, [sp, #56]
  419128:	ldur	x9, [x29, #-24]
  41912c:	ldr	x9, [x9, #8]
  419130:	cmp	x8, x9
  419134:	b.ge	419194 <wcrtomb@plt+0x16884>  // b.tcont
  419138:	ldur	x8, [x29, #-24]
  41913c:	ldr	x8, [x8]
  419140:	ldr	x9, [sp, #56]
  419144:	mov	x10, #0x10                  	// #16
  419148:	mul	x9, x10, x9
  41914c:	ldr	x8, [x8, x9]
  419150:	str	x8, [sp, #40]
  419154:	ldr	x8, [sp, #40]
  419158:	ldur	x9, [x29, #-24]
  41915c:	ldr	x9, [x9]
  419160:	ldr	x11, [sp, #56]
  419164:	mul	x10, x10, x11
  419168:	add	x9, x9, x10
  41916c:	ldr	w12, [x9, #8]
  419170:	mov	w9, w12
  419174:	add	x8, x8, x9
  419178:	ldur	x9, [x29, #-40]
  41917c:	eor	x8, x9, x8
  419180:	stur	x8, [x29, #-40]
  419184:	ldr	x8, [sp, #56]
  419188:	add	x8, x8, #0x1
  41918c:	str	x8, [sp, #56]
  419190:	b	419124 <wcrtomb@plt+0x16814>
  419194:	str	xzr, [sp, #56]
  419198:	ldr	x8, [sp, #56]
  41919c:	ldur	x9, [x29, #-16]
  4191a0:	ldr	x9, [x9, #304]
  4191a4:	cmp	x8, x9
  4191a8:	b.ge	41931c <wcrtomb@plt+0x16a0c>  // b.tcont
  4191ac:	ldur	x8, [x29, #-40]
  4191b0:	ldur	x9, [x29, #-16]
  4191b4:	ldr	x9, [x9, #296]
  4191b8:	ldr	x10, [sp, #56]
  4191bc:	mov	x11, #0x50                  	// #80
  4191c0:	mul	x10, x11, x10
  4191c4:	ldr	x9, [x9, x10]
  4191c8:	cmp	x8, x9
  4191cc:	b.ne	419224 <wcrtomb@plt+0x16914>  // b.any
  4191d0:	ldur	x8, [x29, #-24]
  4191d4:	ldr	x8, [x8, #8]
  4191d8:	ldur	x9, [x29, #-16]
  4191dc:	ldr	x9, [x9, #296]
  4191e0:	ldr	x10, [sp, #56]
  4191e4:	mov	x11, #0x50                  	// #80
  4191e8:	mul	x10, x11, x10
  4191ec:	add	x9, x9, x10
  4191f0:	ldr	x9, [x9, #16]
  4191f4:	cmp	x8, x9
  4191f8:	b.ne	419224 <wcrtomb@plt+0x16914>  // b.any
  4191fc:	ldur	w8, [x29, #-28]
  419200:	ldur	x9, [x29, #-16]
  419204:	ldr	x9, [x9, #296]
  419208:	ldr	x10, [sp, #56]
  41920c:	mov	x11, #0x50                  	// #80
  419210:	mul	x10, x11, x10
  419214:	add	x9, x9, x10
  419218:	ldrb	w12, [x9, #32]
  41921c:	cmp	w8, w12
  419220:	b.eq	419228 <wcrtomb@plt+0x16918>  // b.none
  419224:	b	41930c <wcrtomb@plt+0x169fc>
  419228:	str	xzr, [sp, #32]
  41922c:	ldr	x8, [sp, #32]
  419230:	ldur	x9, [x29, #-24]
  419234:	ldr	x9, [x9, #8]
  419238:	cmp	x8, x9
  41923c:	b.ge	4192ec <wcrtomb@plt+0x169dc>  // b.tcont
  419240:	ldur	x8, [x29, #-24]
  419244:	ldr	x8, [x8]
  419248:	ldr	x9, [sp, #32]
  41924c:	mov	x10, #0x10                  	// #16
  419250:	mul	x9, x10, x9
  419254:	add	x8, x8, x9
  419258:	ldr	w11, [x8, #8]
  41925c:	ldur	x8, [x29, #-16]
  419260:	ldr	x8, [x8, #296]
  419264:	ldr	x9, [sp, #56]
  419268:	mov	x12, #0x50                  	// #80
  41926c:	mul	x9, x12, x9
  419270:	add	x8, x8, x9
  419274:	ldr	x8, [x8, #8]
  419278:	ldr	x9, [sp, #32]
  41927c:	mul	x9, x10, x9
  419280:	add	x8, x8, x9
  419284:	ldr	w13, [x8, #8]
  419288:	cmp	w11, w13
  41928c:	b.ne	4192d8 <wcrtomb@plt+0x169c8>  // b.any
  419290:	ldur	x8, [x29, #-24]
  419294:	ldr	x8, [x8]
  419298:	ldr	x9, [sp, #32]
  41929c:	mov	x10, #0x10                  	// #16
  4192a0:	mul	x9, x10, x9
  4192a4:	ldr	x8, [x8, x9]
  4192a8:	ldur	x9, [x29, #-16]
  4192ac:	ldr	x9, [x9, #296]
  4192b0:	ldr	x11, [sp, #56]
  4192b4:	mov	x12, #0x50                  	// #80
  4192b8:	mul	x11, x12, x11
  4192bc:	add	x9, x9, x11
  4192c0:	ldr	x9, [x9, #8]
  4192c4:	ldr	x11, [sp, #32]
  4192c8:	mul	x10, x10, x11
  4192cc:	ldr	x9, [x9, x10]
  4192d0:	cmp	x8, x9
  4192d4:	b.eq	4192dc <wcrtomb@plt+0x169cc>  // b.none
  4192d8:	b	4192ec <wcrtomb@plt+0x169dc>
  4192dc:	ldr	x8, [sp, #32]
  4192e0:	add	x8, x8, #0x1
  4192e4:	str	x8, [sp, #32]
  4192e8:	b	41922c <wcrtomb@plt+0x1691c>
  4192ec:	ldr	x8, [sp, #32]
  4192f0:	ldur	x9, [x29, #-24]
  4192f4:	ldr	x9, [x9, #8]
  4192f8:	cmp	x8, x9
  4192fc:	b.ne	41930c <wcrtomb@plt+0x169fc>  // b.any
  419300:	ldr	x8, [sp, #56]
  419304:	stur	x8, [x29, #-8]
  419308:	b	419560 <wcrtomb@plt+0x16c50>
  41930c:	ldr	x8, [sp, #56]
  419310:	add	x8, x8, #0x1
  419314:	str	x8, [sp, #56]
  419318:	b	419198 <wcrtomb@plt+0x16888>
  41931c:	str	xzr, [sp, #24]
  419320:	ldr	x8, [sp, #24]
  419324:	ldur	x9, [x29, #-24]
  419328:	ldr	x9, [x9, #8]
  41932c:	cmp	x8, x9
  419330:	b.ge	419404 <wcrtomb@plt+0x16af4>  // b.tcont
  419334:	ldur	x8, [x29, #-16]
  419338:	ldr	x8, [x8, #336]
  41933c:	ldur	x9, [x29, #-24]
  419340:	ldr	x9, [x9]
  419344:	ldr	x10, [sp, #24]
  419348:	mov	x11, #0x10                  	// #16
  41934c:	mul	x10, x11, x10
  419350:	ldr	x9, [x9, x10]
  419354:	ldr	w12, [x8, x9, lsl #2]
  419358:	str	w12, [sp, #20]
  41935c:	ldr	w12, [sp, #20]
  419360:	cbz	w12, 4193c0 <wcrtomb@plt+0x16ab0>
  419364:	ldr	w0, [sp, #20]
  419368:	ldur	w1, [x29, #-28]
  41936c:	mov	w2, #0x7                   	// #7
  419370:	bl	41a4d8 <wcrtomb@plt+0x17bc8>
  419374:	tbnz	w0, #0, 41937c <wcrtomb@plt+0x16a6c>
  419378:	b	41938c <wcrtomb@plt+0x16a7c>
  41937c:	ldr	w8, [sp, #20]
  419380:	ldur	w9, [x29, #-44]
  419384:	orr	w8, w9, w8
  419388:	stur	w8, [x29, #-44]
  41938c:	ldr	x8, [sp, #48]
  419390:	cbnz	x8, 4193bc <wcrtomb@plt+0x16aac>
  419394:	ldur	x8, [x29, #-16]
  419398:	ldr	x8, [x8, #144]
  41939c:	ldur	x9, [x29, #-24]
  4193a0:	ldr	x9, [x9]
  4193a4:	ldr	x10, [sp, #24]
  4193a8:	mov	x11, #0x10                  	// #16
  4193ac:	mul	x10, x11, x10
  4193b0:	ldr	x9, [x9, x10]
  4193b4:	ldr	x8, [x8, x9, lsl #3]
  4193b8:	str	x8, [sp, #48]
  4193bc:	b	4193f4 <wcrtomb@plt+0x16ae4>
  4193c0:	ldur	x8, [x29, #-16]
  4193c4:	ldr	x8, [x8, #144]
  4193c8:	ldur	x9, [x29, #-24]
  4193cc:	ldr	x9, [x9]
  4193d0:	ldr	x10, [sp, #24]
  4193d4:	mov	x11, #0x10                  	// #16
  4193d8:	mul	x10, x11, x10
  4193dc:	ldr	x9, [x9, x10]
  4193e0:	ldr	x8, [x8, x9, lsl #3]
  4193e4:	cmp	x8, #0x112
  4193e8:	b.ne	4193f4 <wcrtomb@plt+0x16ae4>  // b.any
  4193ec:	mov	w8, #0x1ff                 	// #511
  4193f0:	stur	w8, [x29, #-44]
  4193f4:	ldr	x8, [sp, #24]
  4193f8:	add	x8, x8, #0x1
  4193fc:	str	x8, [sp, #24]
  419400:	b	419320 <wcrtomb@plt+0x16a10>
  419404:	ldur	x8, [x29, #-16]
  419408:	ldr	x0, [x8, #296]
  41940c:	ldur	x8, [x29, #-16]
  419410:	ldr	x1, [x8, #304]
  419414:	ldur	x8, [x29, #-16]
  419418:	add	x2, x8, #0x138
  41941c:	mov	x8, #0xffffffffffffffff    	// #-1
  419420:	mov	x3, x8
  419424:	mov	x4, #0x50                  	// #80
  419428:	str	x8, [sp, #8]
  41942c:	bl	417dec <wcrtomb@plt+0x154dc>
  419430:	ldur	x8, [x29, #-16]
  419434:	str	x0, [x8, #296]
  419438:	ldur	x8, [x29, #-40]
  41943c:	ldur	x9, [x29, #-16]
  419440:	ldr	x9, [x9, #296]
  419444:	ldr	x10, [sp, #56]
  419448:	mov	x11, #0x50                  	// #80
  41944c:	mul	x10, x11, x10
  419450:	str	x8, [x9, x10]
  419454:	ldur	x8, [x29, #-16]
  419458:	ldr	x8, [x8, #296]
  41945c:	ldr	x9, [sp, #56]
  419460:	mul	x9, x11, x9
  419464:	add	x8, x8, x9
  419468:	add	x0, x8, #0x8
  41946c:	ldur	x8, [x29, #-24]
  419470:	ldr	x1, [x8, #8]
  419474:	str	x11, [sp]
  419478:	bl	41892c <wcrtomb@plt+0x1601c>
  41947c:	ldur	x0, [x29, #-24]
  419480:	ldur	x8, [x29, #-16]
  419484:	ldr	x8, [x8, #296]
  419488:	ldr	x9, [sp, #56]
  41948c:	ldr	x10, [sp]
  419490:	mul	x9, x10, x9
  419494:	add	x8, x8, x9
  419498:	add	x1, x8, #0x8
  41949c:	bl	4189b4 <wcrtomb@plt+0x160a4>
  4194a0:	ldur	w12, [x29, #-28]
  4194a4:	ldur	x8, [x29, #-16]
  4194a8:	ldr	x8, [x8, #296]
  4194ac:	ldr	x9, [sp, #56]
  4194b0:	ldr	x10, [sp]
  4194b4:	mul	x9, x10, x9
  4194b8:	add	x8, x8, x9
  4194bc:	strb	w12, [x8, #32]
  4194c0:	ldur	w12, [x29, #-44]
  4194c4:	ldur	x8, [x29, #-16]
  4194c8:	ldr	x8, [x8, #296]
  4194cc:	ldr	x9, [sp, #56]
  4194d0:	mul	x9, x10, x9
  4194d4:	add	x8, x8, x9
  4194d8:	strh	w12, [x8, #34]
  4194dc:	ldr	x8, [sp, #48]
  4194e0:	ldur	x9, [x29, #-16]
  4194e4:	ldr	x9, [x9, #296]
  4194e8:	ldr	x11, [sp, #56]
  4194ec:	mul	x11, x10, x11
  4194f0:	add	x9, x9, x11
  4194f4:	str	x8, [x9, #40]
  4194f8:	ldur	x8, [x29, #-16]
  4194fc:	ldr	x8, [x8, #296]
  419500:	ldr	x9, [sp, #56]
  419504:	mul	x9, x10, x9
  419508:	add	x8, x8, x9
  41950c:	mov	x9, xzr
  419510:	str	xzr, [x8, #56]
  419514:	ldur	x8, [x29, #-16]
  419518:	ldr	x8, [x8, #296]
  41951c:	ldr	x11, [sp, #56]
  419520:	mul	x11, x10, x11
  419524:	add	x8, x8, x11
  419528:	str	x9, [x8, #48]
  41952c:	ldur	x8, [x29, #-16]
  419530:	ldr	x8, [x8, #296]
  419534:	ldr	x9, [sp, #56]
  419538:	mul	x9, x10, x9
  41953c:	add	x8, x8, x9
  419540:	ldr	x9, [sp, #8]
  419544:	str	x9, [x8, #72]
  419548:	ldur	x8, [x29, #-16]
  41954c:	ldr	x11, [x8, #304]
  419550:	add	x11, x11, #0x1
  419554:	str	x11, [x8, #304]
  419558:	ldr	x8, [sp, #56]
  41955c:	stur	x8, [x29, #-8]
  419560:	ldur	x0, [x29, #-8]
  419564:	ldp	x29, x30, [sp, #112]
  419568:	add	sp, sp, #0x80
  41956c:	ret
  419570:	sub	sp, sp, #0x50
  419574:	stp	x29, x30, [sp, #64]
  419578:	add	x29, sp, #0x40
  41957c:	stur	x0, [x29, #-8]
  419580:	stur	x1, [x29, #-16]
  419584:	stur	w2, [x29, #-20]
  419588:	str	x3, [sp, #32]
  41958c:	str	xzr, [sp, #24]
  419590:	str	xzr, [sp, #16]
  419594:	ldr	x8, [sp, #32]
  419598:	ldr	x8, [x8, #16]
  41959c:	ldur	x9, [x29, #-8]
  4195a0:	ldr	x9, [x9, #8]
  4195a4:	subs	x8, x8, x9
  4195a8:	ldur	x9, [x29, #-16]
  4195ac:	ldr	x9, [x9, #8]
  4195b0:	cmp	x8, x9
  4195b4:	b.ge	419600 <wcrtomb@plt+0x16cf0>  // b.tcont
  4195b8:	ldr	x8, [sp, #32]
  4195bc:	ldr	x0, [x8]
  4195c0:	bl	4026c0 <free@plt>
  4195c4:	ldur	x8, [x29, #-8]
  4195c8:	ldr	x8, [x8, #8]
  4195cc:	ldr	x9, [sp, #32]
  4195d0:	str	x8, [x9, #16]
  4195d4:	ldr	x8, [sp, #32]
  4195d8:	add	x1, x8, #0x10
  4195dc:	ldur	x8, [x29, #-16]
  4195e0:	ldr	x2, [x8, #8]
  4195e4:	mov	x8, xzr
  4195e8:	mov	x0, x8
  4195ec:	mov	x3, #0xffffffffffffffff    	// #-1
  4195f0:	mov	x4, #0x10                  	// #16
  4195f4:	bl	4141d8 <wcrtomb@plt+0x118c8>
  4195f8:	ldr	x8, [sp, #32]
  4195fc:	str	x0, [x8]
  419600:	ldr	x8, [sp, #32]
  419604:	str	xzr, [x8, #8]
  419608:	ldr	x8, [sp, #24]
  41960c:	ldur	x9, [x29, #-8]
  419610:	ldr	x9, [x9, #8]
  419614:	mov	w10, #0x1                   	// #1
  419618:	cmp	x8, x9
  41961c:	str	w10, [sp, #8]
  419620:	b.lt	41963c <wcrtomb@plt+0x16d2c>  // b.tstop
  419624:	ldr	x8, [sp, #16]
  419628:	ldur	x9, [x29, #-16]
  41962c:	ldr	x9, [x9, #8]
  419630:	cmp	x8, x9
  419634:	cset	w10, lt  // lt = tstop
  419638:	str	w10, [sp, #8]
  41963c:	ldr	w8, [sp, #8]
  419640:	tbnz	w8, #0, 419648 <wcrtomb@plt+0x16d38>
  419644:	b	419870 <wcrtomb@plt+0x16f60>
  419648:	ldr	x8, [sp, #16]
  41964c:	ldur	x9, [x29, #-16]
  419650:	ldr	x9, [x9, #8]
  419654:	cmp	x8, x9
  419658:	b.ge	4196a4 <wcrtomb@plt+0x16d94>  // b.tcont
  41965c:	ldr	x8, [sp, #24]
  419660:	ldur	x9, [x29, #-8]
  419664:	ldr	x9, [x9, #8]
  419668:	cmp	x8, x9
  41966c:	b.ge	4197c4 <wcrtomb@plt+0x16eb4>  // b.tcont
  419670:	ldur	x8, [x29, #-8]
  419674:	ldr	x8, [x8]
  419678:	ldr	x9, [sp, #24]
  41967c:	mov	x10, #0x10                  	// #16
  419680:	mul	x9, x10, x9
  419684:	ldr	x8, [x8, x9]
  419688:	ldur	x9, [x29, #-16]
  41968c:	ldr	x9, [x9]
  419690:	ldr	x11, [sp, #16]
  419694:	mul	x10, x10, x11
  419698:	ldr	x9, [x9, x10]
  41969c:	cmp	x8, x9
  4196a0:	b.gt	4197c4 <wcrtomb@plt+0x16eb4>
  4196a4:	ldr	x8, [sp, #24]
  4196a8:	ldur	x9, [x29, #-8]
  4196ac:	ldr	x9, [x9, #8]
  4196b0:	cmp	x8, x9
  4196b4:	b.ge	419734 <wcrtomb@plt+0x16e24>  // b.tcont
  4196b8:	ldr	x8, [sp, #16]
  4196bc:	ldur	x9, [x29, #-16]
  4196c0:	ldr	x9, [x9, #8]
  4196c4:	cmp	x8, x9
  4196c8:	b.ge	419734 <wcrtomb@plt+0x16e24>  // b.tcont
  4196cc:	ldur	x8, [x29, #-8]
  4196d0:	ldr	x8, [x8]
  4196d4:	ldr	x9, [sp, #24]
  4196d8:	mov	x10, #0x10                  	// #16
  4196dc:	mul	x9, x10, x9
  4196e0:	ldr	x8, [x8, x9]
  4196e4:	ldur	x9, [x29, #-16]
  4196e8:	ldr	x9, [x9]
  4196ec:	ldr	x11, [sp, #16]
  4196f0:	mul	x10, x10, x11
  4196f4:	ldr	x9, [x9, x10]
  4196f8:	cmp	x8, x9
  4196fc:	b.ne	419734 <wcrtomb@plt+0x16e24>  // b.any
  419700:	ldur	x8, [x29, #-16]
  419704:	ldr	x8, [x8]
  419708:	ldr	x9, [sp, #16]
  41970c:	add	x10, x9, #0x1
  419710:	str	x10, [sp, #16]
  419714:	mov	x10, #0x10                  	// #16
  419718:	mul	x9, x10, x9
  41971c:	add	x8, x8, x9
  419720:	ldr	w11, [x8, #8]
  419724:	ldur	w12, [x29, #-20]
  419728:	and	w11, w11, w12
  41972c:	str	w11, [sp, #4]
  419730:	b	41973c <wcrtomb@plt+0x16e2c>
  419734:	mov	w8, wzr
  419738:	str	w8, [sp, #4]
  41973c:	ldr	w8, [sp, #4]
  419740:	str	w8, [sp, #12]
  419744:	ldur	x9, [x29, #-8]
  419748:	ldr	x9, [x9]
  41974c:	ldr	x10, [sp, #24]
  419750:	mov	x11, #0x10                  	// #16
  419754:	mul	x10, x11, x10
  419758:	ldr	x9, [x9, x10]
  41975c:	ldr	x10, [sp, #32]
  419760:	ldr	x10, [x10]
  419764:	ldr	x12, [sp, #32]
  419768:	ldr	x12, [x12, #8]
  41976c:	mul	x12, x11, x12
  419770:	str	x9, [x10, x12]
  419774:	ldur	x9, [x29, #-8]
  419778:	ldr	x9, [x9]
  41977c:	ldr	x10, [sp, #24]
  419780:	add	x12, x10, #0x1
  419784:	str	x12, [sp, #24]
  419788:	mul	x10, x11, x10
  41978c:	add	x9, x9, x10
  419790:	ldr	w8, [x9, #8]
  419794:	ldr	w13, [sp, #12]
  419798:	orr	w8, w8, w13
  41979c:	ldr	x9, [sp, #32]
  4197a0:	ldr	x9, [x9]
  4197a4:	ldr	x10, [sp, #32]
  4197a8:	ldr	x12, [x10, #8]
  4197ac:	add	x14, x12, #0x1
  4197b0:	str	x14, [x10, #8]
  4197b4:	mul	x10, x11, x12
  4197b8:	add	x9, x9, x10
  4197bc:	str	w8, [x9, #8]
  4197c0:	b	41986c <wcrtomb@plt+0x16f5c>
  4197c4:	ldur	x8, [x29, #-16]
  4197c8:	ldr	x8, [x8]
  4197cc:	ldr	x9, [sp, #16]
  4197d0:	mov	x10, #0x10                  	// #16
  4197d4:	mul	x9, x10, x9
  4197d8:	add	x8, x8, x9
  4197dc:	ldr	w11, [x8, #8]
  4197e0:	ldur	w12, [x29, #-20]
  4197e4:	and	w11, w11, w12
  4197e8:	cbz	w11, 419860 <wcrtomb@plt+0x16f50>
  4197ec:	ldur	x8, [x29, #-16]
  4197f0:	ldr	x8, [x8]
  4197f4:	ldr	x9, [sp, #16]
  4197f8:	mov	x10, #0x10                  	// #16
  4197fc:	mul	x9, x10, x9
  419800:	ldr	x8, [x8, x9]
  419804:	ldr	x9, [sp, #32]
  419808:	ldr	x9, [x9]
  41980c:	ldr	x11, [sp, #32]
  419810:	ldr	x11, [x11, #8]
  419814:	mul	x11, x10, x11
  419818:	str	x8, [x9, x11]
  41981c:	ldur	x8, [x29, #-16]
  419820:	ldr	x8, [x8]
  419824:	ldr	x9, [sp, #16]
  419828:	mul	x9, x10, x9
  41982c:	add	x8, x8, x9
  419830:	ldr	w12, [x8, #8]
  419834:	ldur	w13, [x29, #-20]
  419838:	and	w12, w12, w13
  41983c:	ldr	x8, [sp, #32]
  419840:	ldr	x8, [x8]
  419844:	ldr	x9, [sp, #32]
  419848:	ldr	x11, [x9, #8]
  41984c:	add	x14, x11, #0x1
  419850:	str	x14, [x9, #8]
  419854:	mul	x9, x10, x11
  419858:	add	x8, x8, x9
  41985c:	str	w12, [x8, #8]
  419860:	ldr	x8, [sp, #16]
  419864:	add	x8, x8, #0x1
  419868:	str	x8, [sp, #16]
  41986c:	b	419608 <wcrtomb@plt+0x16cf8>
  419870:	ldp	x29, x30, [sp, #64]
  419874:	add	sp, sp, #0x50
  419878:	ret
  41987c:	sub	sp, sp, #0x50
  419880:	str	x0, [sp, #64]
  419884:	str	x1, [sp, #56]
  419888:	ldr	x8, [sp, #56]
  41988c:	ldr	x8, [x8, #8]
  419890:	str	x8, [sp, #48]
  419894:	str	xzr, [sp, #40]
  419898:	ldr	x8, [sp, #48]
  41989c:	str	x8, [sp, #32]
  4198a0:	ldr	x8, [sp, #40]
  4198a4:	ldr	x9, [sp, #32]
  4198a8:	cmp	x8, x9
  4198ac:	b.ge	4199b0 <wcrtomb@plt+0x170a0>  // b.tcont
  4198b0:	ldr	x8, [sp, #40]
  4198b4:	ldr	x9, [sp, #32]
  4198b8:	add	x8, x8, x9
  4198bc:	asr	x8, x8, #1
  4198c0:	str	x8, [sp, #24]
  4198c4:	ldr	x8, [sp, #56]
  4198c8:	ldr	x8, [x8]
  4198cc:	ldr	x9, [sp, #24]
  4198d0:	mov	x10, #0x10                  	// #16
  4198d4:	mul	x9, x10, x9
  4198d8:	ldr	x8, [x8, x9]
  4198dc:	ldr	x9, [sp, #64]
  4198e0:	cmp	x8, x9
  4198e4:	b.ge	4198f8 <wcrtomb@plt+0x16fe8>  // b.tcont
  4198e8:	ldr	x8, [sp, #24]
  4198ec:	add	x8, x8, #0x1
  4198f0:	str	x8, [sp, #40]
  4198f4:	b	4199ac <wcrtomb@plt+0x1709c>
  4198f8:	ldr	x8, [sp, #56]
  4198fc:	ldr	x8, [x8]
  419900:	ldr	x9, [sp, #24]
  419904:	mov	x10, #0x10                  	// #16
  419908:	mul	x9, x10, x9
  41990c:	ldr	x8, [x8, x9]
  419910:	ldr	x9, [sp, #64]
  419914:	cmp	x8, x9
  419918:	b.ne	4199a4 <wcrtomb@plt+0x17094>  // b.any
  41991c:	ldr	x8, [sp, #56]
  419920:	ldr	x8, [x8]
  419924:	ldr	x9, [sp, #24]
  419928:	mov	x10, #0x10                  	// #16
  41992c:	mul	x9, x10, x9
  419930:	add	x8, x8, x9
  419934:	ldr	w11, [x8, #8]
  419938:	str	w11, [sp, #20]
  41993c:	ldr	x8, [sp, #24]
  419940:	str	x8, [sp, #8]
  419944:	ldr	x8, [sp, #8]
  419948:	add	x8, x8, #0x1
  41994c:	ldr	x9, [sp, #48]
  419950:	cmp	x8, x9
  419954:	b.ge	41998c <wcrtomb@plt+0x1707c>  // b.tcont
  419958:	ldr	x8, [sp, #56]
  41995c:	ldr	x8, [x8]
  419960:	ldr	x9, [sp, #8]
  419964:	ldr	x10, [sp, #56]
  419968:	ldr	x10, [x10]
  41996c:	ldr	x11, [sp, #8]
  419970:	add	x11, x11, #0x1
  419974:	ldr	q0, [x10, x11, lsl #4]
  419978:	str	q0, [x8, x9, lsl #4]
  41997c:	ldr	x8, [sp, #8]
  419980:	add	x8, x8, #0x1
  419984:	str	x8, [sp, #8]
  419988:	b	419944 <wcrtomb@plt+0x17034>
  41998c:	ldr	x8, [sp, #8]
  419990:	ldr	x9, [sp, #56]
  419994:	str	x8, [x9, #8]
  419998:	ldr	w10, [sp, #20]
  41999c:	str	w10, [sp, #76]
  4199a0:	b	4199b4 <wcrtomb@plt+0x170a4>
  4199a4:	ldr	x8, [sp, #24]
  4199a8:	str	x8, [sp, #32]
  4199ac:	b	4198a0 <wcrtomb@plt+0x16f90>
  4199b0:	str	wzr, [sp, #76]
  4199b4:	ldr	w0, [sp, #76]
  4199b8:	add	sp, sp, #0x50
  4199bc:	ret
  4199c0:	sub	sp, sp, #0x40
  4199c4:	stp	x29, x30, [sp, #48]
  4199c8:	add	x29, sp, #0x30
  4199cc:	stur	x0, [x29, #-8]
  4199d0:	stur	x1, [x29, #-16]
  4199d4:	str	x2, [sp, #24]
  4199d8:	str	w3, [sp, #20]
  4199dc:	str	x4, [sp, #8]
  4199e0:	ldur	x0, [x29, #-16]
  4199e4:	ldur	x1, [x29, #-8]
  4199e8:	bl	41987c <wcrtomb@plt+0x16f6c>
  4199ec:	ldr	w8, [sp, #20]
  4199f0:	and	w8, w0, w8
  4199f4:	str	w8, [sp, #4]
  4199f8:	ldr	w8, [sp, #4]
  4199fc:	cbz	w8, 419a20 <wcrtomb@plt+0x17110>
  419a00:	ldur	x0, [x29, #-8]
  419a04:	ldr	x1, [sp, #8]
  419a08:	bl	4189b4 <wcrtomb@plt+0x160a4>
  419a0c:	ldr	x0, [sp, #8]
  419a10:	ldr	x1, [sp, #24]
  419a14:	ldr	w2, [sp, #4]
  419a18:	ldur	x3, [x29, #-8]
  419a1c:	bl	419570 <wcrtomb@plt+0x16c60>
  419a20:	ldp	x29, x30, [sp, #48]
  419a24:	add	sp, sp, #0x40
  419a28:	ret
  419a2c:	sub	sp, sp, #0x70
  419a30:	stp	x29, x30, [sp, #96]
  419a34:	add	x29, sp, #0x60
  419a38:	mov	w8, wzr
  419a3c:	stur	x0, [x29, #-8]
  419a40:	stur	x1, [x29, #-16]
  419a44:	stur	x2, [x29, #-24]
  419a48:	stur	x3, [x29, #-32]
  419a4c:	ldur	x9, [x29, #-8]
  419a50:	ldr	x9, [x9, #320]
  419a54:	stur	x9, [x29, #-40]
  419a58:	str	xzr, [sp, #48]
  419a5c:	ldur	x9, [x29, #-8]
  419a60:	ldr	x9, [x9, #336]
  419a64:	ldur	x10, [x29, #-16]
  419a68:	str	w8, [x9, x10, lsl #2]
  419a6c:	str	xzr, [sp, #40]
  419a70:	ldr	x8, [sp, #40]
  419a74:	ldur	x9, [x29, #-40]
  419a78:	ldur	x10, [x29, #-16]
  419a7c:	mov	x11, #0x18                  	// #24
  419a80:	mul	x10, x11, x10
  419a84:	add	x9, x9, x10
  419a88:	ldr	x9, [x9, #8]
  419a8c:	cmp	x8, x9
  419a90:	b.ge	419d6c <wcrtomb@plt+0x1745c>  // b.tcont
  419a94:	ldur	x8, [x29, #-40]
  419a98:	ldur	x9, [x29, #-16]
  419a9c:	mov	x10, #0x18                  	// #24
  419aa0:	mul	x9, x10, x9
  419aa4:	add	x8, x8, x9
  419aa8:	ldr	x8, [x8]
  419aac:	ldr	x9, [sp, #40]
  419ab0:	mov	x11, #0x10                  	// #16
  419ab4:	mul	x9, x11, x9
  419ab8:	ldr	x8, [x8, x9]
  419abc:	str	x8, [sp, #32]
  419ac0:	ldur	x8, [x29, #-40]
  419ac4:	ldur	x9, [x29, #-16]
  419ac8:	mul	x9, x10, x9
  419acc:	add	x8, x8, x9
  419ad0:	ldr	x8, [x8]
  419ad4:	ldr	x9, [sp, #40]
  419ad8:	mul	x9, x11, x9
  419adc:	add	x8, x8, x9
  419ae0:	ldr	w12, [x8, #8]
  419ae4:	str	w12, [sp, #28]
  419ae8:	ldr	w12, [sp, #28]
  419aec:	cbnz	w12, 419af4 <wcrtomb@plt+0x171e4>
  419af0:	b	419d5c <wcrtomb@plt+0x1744c>
  419af4:	ldur	x8, [x29, #-8]
  419af8:	ldr	x8, [x8, #144]
  419afc:	ldur	x9, [x29, #-40]
  419b00:	ldur	x10, [x29, #-16]
  419b04:	mov	x11, #0x18                  	// #24
  419b08:	mul	x10, x11, x10
  419b0c:	add	x9, x9, x10
  419b10:	ldr	x9, [x9]
  419b14:	ldr	x10, [sp, #40]
  419b18:	mov	x11, #0x10                  	// #16
  419b1c:	mul	x10, x11, x10
  419b20:	ldr	x9, [x9, x10]
  419b24:	ldr	x8, [x8, x9, lsl #3]
  419b28:	mov	x9, #0xffffffffffffffff    	// #-1
  419b2c:	cmp	x8, x9
  419b30:	b.gt	419b88 <wcrtomb@plt+0x17278>
  419b34:	ldur	x8, [x29, #-40]
  419b38:	ldur	x9, [x29, #-16]
  419b3c:	mov	x10, #0x18                  	// #24
  419b40:	mul	x9, x10, x9
  419b44:	add	x8, x8, x9
  419b48:	ldr	x8, [x8]
  419b4c:	ldr	x9, [sp, #40]
  419b50:	mov	x10, #0x10                  	// #16
  419b54:	mul	x9, x10, x9
  419b58:	add	x8, x8, x9
  419b5c:	ldr	w11, [x8, #8]
  419b60:	ldur	x8, [x29, #-8]
  419b64:	ldr	x8, [x8, #336]
  419b68:	ldur	x9, [x29, #-16]
  419b6c:	mov	x10, #0x4                   	// #4
  419b70:	mul	x9, x10, x9
  419b74:	add	x8, x8, x9
  419b78:	ldr	w12, [x8]
  419b7c:	orr	w11, w12, w11
  419b80:	str	w11, [x8]
  419b84:	b	419d5c <wcrtomb@plt+0x1744c>
  419b88:	ldur	x8, [x29, #-24]
  419b8c:	ldr	x9, [sp, #32]
  419b90:	ldrb	w10, [x8, x9]
  419b94:	and	w10, w10, #0x6
  419b98:	cbnz	w10, 419d00 <wcrtomb@plt+0x173f0>
  419b9c:	str	xzr, [sp, #16]
  419ba0:	ldr	x8, [sp, #16]
  419ba4:	ldr	x9, [sp, #48]
  419ba8:	cmp	x8, x9
  419bac:	b.ge	419cec <wcrtomb@plt+0x173dc>  // b.tcont
  419bb0:	ldur	x8, [x29, #-40]
  419bb4:	ldur	x9, [x29, #-16]
  419bb8:	mov	x10, #0x18                  	// #24
  419bbc:	mul	x9, x10, x9
  419bc0:	add	x8, x8, x9
  419bc4:	ldr	x8, [x8]
  419bc8:	ldr	x9, [sp, #16]
  419bcc:	mov	x11, #0x10                  	// #16
  419bd0:	mul	x9, x11, x9
  419bd4:	ldr	x8, [x8, x9]
  419bd8:	str	x8, [sp, #8]
  419bdc:	ldur	x8, [x29, #-40]
  419be0:	ldur	x9, [x29, #-16]
  419be4:	mul	x9, x10, x9
  419be8:	add	x8, x8, x9
  419bec:	ldr	x8, [x8]
  419bf0:	ldr	x9, [sp, #16]
  419bf4:	mul	x9, x11, x9
  419bf8:	add	x8, x8, x9
  419bfc:	ldr	w12, [x8, #8]
  419c00:	ldr	w13, [sp, #28]
  419c04:	cmp	w12, w13
  419c08:	b.eq	419c10 <wcrtomb@plt+0x17300>  // b.none
  419c0c:	b	419cdc <wcrtomb@plt+0x173cc>
  419c10:	ldur	x8, [x29, #-24]
  419c14:	ldr	x9, [sp, #8]
  419c18:	ldrb	w10, [x8, x9]
  419c1c:	and	w10, w10, #0x6
  419c20:	cbz	w10, 419c28 <wcrtomb@plt+0x17318>
  419c24:	b	419cdc <wcrtomb@plt+0x173cc>
  419c28:	ldur	x8, [x29, #-8]
  419c2c:	ldr	x8, [x8, #144]
  419c30:	ldr	x9, [sp, #32]
  419c34:	ldr	x8, [x8, x9, lsl #3]
  419c38:	ldur	x9, [x29, #-8]
  419c3c:	ldr	x9, [x9, #144]
  419c40:	ldr	x10, [sp, #8]
  419c44:	ldr	x9, [x9, x10, lsl #3]
  419c48:	cmp	x8, x9
  419c4c:	b.eq	419c54 <wcrtomb@plt+0x17344>  // b.none
  419c50:	b	419cdc <wcrtomb@plt+0x173cc>
  419c54:	ldur	x8, [x29, #-24]
  419c58:	ldr	x9, [sp, #32]
  419c5c:	ldrb	w10, [x8, x9]
  419c60:	ldur	x8, [x29, #-24]
  419c64:	ldr	x9, [sp, #8]
  419c68:	ldrb	w11, [x8, x9]
  419c6c:	eor	w10, w10, w11
  419c70:	and	w10, w10, #0x1
  419c74:	cbz	w10, 419c7c <wcrtomb@plt+0x1736c>
  419c78:	b	419cdc <wcrtomb@plt+0x173cc>
  419c7c:	ldur	x8, [x29, #-24]
  419c80:	ldr	x9, [sp, #32]
  419c84:	ldrb	w10, [x8, x9]
  419c88:	and	w10, w10, #0x1
  419c8c:	cbz	w10, 419cac <wcrtomb@plt+0x1739c>
  419c90:	ldr	x0, [sp, #32]
  419c94:	ldur	x8, [x29, #-40]
  419c98:	ldr	x9, [sp, #32]
  419c9c:	mov	x10, #0x18                  	// #24
  419ca0:	mul	x9, x10, x9
  419ca4:	add	x1, x8, x9
  419ca8:	bl	41987c <wcrtomb@plt+0x16f6c>
  419cac:	ldur	x8, [x29, #-40]
  419cb0:	ldr	x9, [sp, #8]
  419cb4:	mov	x10, #0x18                  	// #24
  419cb8:	mul	x9, x10, x9
  419cbc:	add	x0, x8, x9
  419cc0:	ldur	x8, [x29, #-40]
  419cc4:	ldr	x9, [sp, #32]
  419cc8:	mul	x9, x10, x9
  419ccc:	add	x1, x8, x9
  419cd0:	ldur	x2, [x29, #-32]
  419cd4:	bl	41a23c <wcrtomb@plt+0x1792c>
  419cd8:	b	419cec <wcrtomb@plt+0x173dc>
  419cdc:	ldr	x8, [sp, #16]
  419ce0:	add	x8, x8, #0x1
  419ce4:	str	x8, [sp, #16]
  419ce8:	b	419ba0 <wcrtomb@plt+0x17290>
  419cec:	ldr	x8, [sp, #16]
  419cf0:	ldr	x9, [sp, #48]
  419cf4:	cmp	x8, x9
  419cf8:	b.ge	419d00 <wcrtomb@plt+0x173f0>  // b.tcont
  419cfc:	b	419d5c <wcrtomb@plt+0x1744c>
  419d00:	ldur	x8, [x29, #-40]
  419d04:	ldur	x9, [x29, #-16]
  419d08:	mov	x10, #0x18                  	// #24
  419d0c:	mul	x9, x10, x9
  419d10:	add	x8, x8, x9
  419d14:	ldr	x8, [x8]
  419d18:	ldr	x9, [sp, #48]
  419d1c:	add	x11, x9, #0x1
  419d20:	str	x11, [sp, #48]
  419d24:	ldur	x11, [x29, #-40]
  419d28:	ldur	x12, [x29, #-16]
  419d2c:	mul	x10, x10, x12
  419d30:	add	x10, x11, x10
  419d34:	ldr	x10, [x10]
  419d38:	ldr	x11, [sp, #40]
  419d3c:	ldr	q0, [x10, x11, lsl #4]
  419d40:	str	q0, [x8, x9, lsl #4]
  419d44:	ldur	x8, [x29, #-24]
  419d48:	ldr	x9, [sp, #32]
  419d4c:	add	x8, x8, x9
  419d50:	ldrb	w13, [x8]
  419d54:	orr	w13, w13, #0x10
  419d58:	strb	w13, [x8]
  419d5c:	ldr	x8, [sp, #40]
  419d60:	add	x8, x8, #0x1
  419d64:	str	x8, [sp, #40]
  419d68:	b	419a70 <wcrtomb@plt+0x17160>
  419d6c:	ldr	x8, [sp, #48]
  419d70:	ldur	x9, [x29, #-40]
  419d74:	ldur	x10, [x29, #-16]
  419d78:	mov	x11, #0x18                  	// #24
  419d7c:	mul	x10, x11, x10
  419d80:	add	x9, x9, x10
  419d84:	str	x8, [x9, #8]
  419d88:	ldp	x29, x30, [sp, #96]
  419d8c:	add	sp, sp, #0x70
  419d90:	ret
  419d94:	sub	sp, sp, #0x80
  419d98:	stp	x29, x30, [sp, #112]
  419d9c:	add	x29, sp, #0x70
  419da0:	mov	x1, #0x8                   	// #8
  419da4:	mov	x8, #0x1                   	// #1
  419da8:	stur	x0, [x29, #-8]
  419dac:	stur	xzr, [x29, #-16]
  419db0:	ldur	x9, [x29, #-8]
  419db4:	ldr	x0, [x9, #152]
  419db8:	str	x8, [sp, #16]
  419dbc:	bl	42300c <wcrtomb@plt+0x206fc>
  419dc0:	stur	x0, [x29, #-24]
  419dc4:	ldur	x8, [x29, #-16]
  419dc8:	add	x9, x8, #0x1
  419dcc:	stur	x9, [x29, #-16]
  419dd0:	ldur	x9, [x29, #-24]
  419dd4:	str	x8, [x9]
  419dd8:	ldr	x8, [sp, #16]
  419ddc:	str	x8, [sp, #48]
  419de0:	ldr	x8, [sp, #48]
  419de4:	ldur	x9, [x29, #-8]
  419de8:	ldr	x9, [x9, #152]
  419dec:	cmp	x8, x9
  419df0:	b.ge	419e14 <wcrtomb@plt+0x17504>  // b.tcont
  419df4:	ldur	x8, [x29, #-24]
  419df8:	ldr	x9, [sp, #48]
  419dfc:	mov	x10, #0xffffffffffffffff    	// #-1
  419e00:	str	x10, [x8, x9, lsl #3]
  419e04:	ldr	x8, [sp, #48]
  419e08:	add	x8, x8, #0x1
  419e0c:	str	x8, [sp, #48]
  419e10:	b	419de0 <wcrtomb@plt+0x174d0>
  419e14:	ldur	x8, [x29, #-8]
  419e18:	ldr	x0, [x8, #176]
  419e1c:	mov	x1, #0x8                   	// #8
  419e20:	bl	42300c <wcrtomb@plt+0x206fc>
  419e24:	stur	x0, [x29, #-32]
  419e28:	ldur	x8, [x29, #-8]
  419e2c:	ldr	x0, [x8, #176]
  419e30:	mov	x1, #0x18                  	// #24
  419e34:	bl	42300c <wcrtomb@plt+0x206fc>
  419e38:	stur	x0, [x29, #-40]
  419e3c:	ldur	x8, [x29, #-8]
  419e40:	ldr	x0, [x8, #176]
  419e44:	mov	x1, #0x4                   	// #4
  419e48:	bl	42300c <wcrtomb@plt+0x206fc>
  419e4c:	stur	x0, [x29, #-48]
  419e50:	ldur	x8, [x29, #-8]
  419e54:	ldrb	w9, [x8, #1048]
  419e58:	tbnz	w9, #0, 419e60 <wcrtomb@plt+0x17550>
  419e5c:	b	419e78 <wcrtomb@plt+0x17568>
  419e60:	ldur	x8, [x29, #-8]
  419e64:	ldr	x0, [x8, #176]
  419e68:	mov	x1, #0x1                   	// #1
  419e6c:	bl	42300c <wcrtomb@plt+0x206fc>
  419e70:	str	x0, [sp, #56]
  419e74:	b	419e80 <wcrtomb@plt+0x17570>
  419e78:	mov	x8, xzr
  419e7c:	str	x8, [sp, #56]
  419e80:	str	xzr, [sp, #40]
  419e84:	ldr	x8, [sp, #40]
  419e88:	ldur	x9, [x29, #-8]
  419e8c:	ldr	x9, [x9, #152]
  419e90:	cmp	x8, x9
  419e94:	b.ge	41a134 <wcrtomb@plt+0x17824>  // b.tcont
  419e98:	ldur	x8, [x29, #-24]
  419e9c:	ldr	x9, [sp, #40]
  419ea0:	ldr	x8, [x8, x9, lsl #3]
  419ea4:	mov	x9, #0xffffffffffffffff    	// #-1
  419ea8:	cmp	x8, x9
  419eac:	b.ne	419f10 <wcrtomb@plt+0x17600>  // b.any
  419eb0:	ldur	x8, [x29, #-8]
  419eb4:	ldr	x8, [x8, #320]
  419eb8:	ldr	x9, [sp, #40]
  419ebc:	mov	x10, #0x18                  	// #24
  419ec0:	mul	x9, x10, x9
  419ec4:	add	x8, x8, x9
  419ec8:	ldr	x0, [x8]
  419ecc:	str	x10, [sp, #8]
  419ed0:	bl	4026c0 <free@plt>
  419ed4:	ldur	x8, [x29, #-8]
  419ed8:	ldr	x8, [x8, #320]
  419edc:	ldr	x9, [sp, #40]
  419ee0:	ldr	x10, [sp, #8]
  419ee4:	mul	x9, x10, x9
  419ee8:	add	x8, x8, x9
  419eec:	mov	x9, xzr
  419ef0:	str	x9, [x8]
  419ef4:	ldur	x8, [x29, #-8]
  419ef8:	ldr	x8, [x8, #320]
  419efc:	ldr	x9, [sp, #40]
  419f00:	mul	x9, x10, x9
  419f04:	add	x8, x8, x9
  419f08:	str	xzr, [x8, #8]
  419f0c:	b	41a124 <wcrtomb@plt+0x17814>
  419f10:	ldur	x8, [x29, #-8]
  419f14:	ldr	x8, [x8, #144]
  419f18:	ldr	x9, [sp, #40]
  419f1c:	ldr	x8, [x8, x9, lsl #3]
  419f20:	ldur	x9, [x29, #-32]
  419f24:	ldur	x10, [x29, #-24]
  419f28:	ldr	x11, [sp, #40]
  419f2c:	ldr	x10, [x10, x11, lsl #3]
  419f30:	str	x8, [x9, x10, lsl #3]
  419f34:	ldur	x8, [x29, #-40]
  419f38:	ldur	x9, [x29, #-24]
  419f3c:	ldr	x10, [sp, #40]
  419f40:	ldr	x9, [x9, x10, lsl #3]
  419f44:	mov	x10, #0x18                  	// #24
  419f48:	mul	x9, x10, x9
  419f4c:	add	x8, x8, x9
  419f50:	ldur	x9, [x29, #-8]
  419f54:	ldr	x9, [x9, #320]
  419f58:	ldr	x11, [sp, #40]
  419f5c:	mul	x10, x10, x11
  419f60:	add	x9, x9, x10
  419f64:	ldr	q0, [x9]
  419f68:	str	q0, [x8]
  419f6c:	ldr	x9, [x9, #16]
  419f70:	str	x9, [x8, #16]
  419f74:	ldur	x8, [x29, #-8]
  419f78:	ldr	x8, [x8, #336]
  419f7c:	ldr	x9, [sp, #40]
  419f80:	ldr	w12, [x8, x9, lsl #2]
  419f84:	ldur	x8, [x29, #-48]
  419f88:	ldur	x9, [x29, #-24]
  419f8c:	ldr	x10, [sp, #40]
  419f90:	ldr	x9, [x9, x10, lsl #3]
  419f94:	str	w12, [x8, x9, lsl #2]
  419f98:	ldr	x8, [sp, #56]
  419f9c:	cbz	x8, 419fcc <wcrtomb@plt+0x176bc>
  419fa0:	ldur	x8, [x29, #-8]
  419fa4:	ldr	x8, [x8, #280]
  419fa8:	ldr	x9, [sp, #40]
  419fac:	add	x8, x8, x9
  419fb0:	ldrb	w10, [x8]
  419fb4:	ldr	x8, [sp, #56]
  419fb8:	ldur	x9, [x29, #-24]
  419fbc:	ldr	x11, [sp, #40]
  419fc0:	ldr	x9, [x9, x11, lsl #3]
  419fc4:	add	x8, x8, x9
  419fc8:	strb	w10, [x8]
  419fcc:	str	xzr, [sp, #32]
  419fd0:	ldr	x8, [sp, #32]
  419fd4:	ldur	x9, [x29, #-8]
  419fd8:	ldr	x9, [x9, #320]
  419fdc:	ldr	x10, [sp, #40]
  419fe0:	mov	x11, #0x18                  	// #24
  419fe4:	mul	x10, x11, x10
  419fe8:	add	x9, x9, x10
  419fec:	ldr	x9, [x9, #8]
  419ff0:	cmp	x8, x9
  419ff4:	b.ge	41a0e0 <wcrtomb@plt+0x177d0>  // b.tcont
  419ff8:	ldur	x8, [x29, #-24]
  419ffc:	ldur	x9, [x29, #-8]
  41a000:	ldr	x9, [x9, #320]
  41a004:	ldr	x10, [sp, #40]
  41a008:	mov	x11, #0x18                  	// #24
  41a00c:	mul	x10, x11, x10
  41a010:	add	x9, x9, x10
  41a014:	ldr	x9, [x9]
  41a018:	ldr	x10, [sp, #32]
  41a01c:	mov	x11, #0x10                  	// #16
  41a020:	mul	x10, x11, x10
  41a024:	ldr	x9, [x9, x10]
  41a028:	ldr	x8, [x8, x9, lsl #3]
  41a02c:	mov	x9, #0xffffffffffffffff    	// #-1
  41a030:	cmp	x8, x9
  41a034:	b.ne	41a078 <wcrtomb@plt+0x17768>  // b.any
  41a038:	ldur	x8, [x29, #-16]
  41a03c:	add	x9, x8, #0x1
  41a040:	stur	x9, [x29, #-16]
  41a044:	ldur	x9, [x29, #-24]
  41a048:	ldur	x10, [x29, #-8]
  41a04c:	ldr	x10, [x10, #320]
  41a050:	ldr	x11, [sp, #40]
  41a054:	mov	x12, #0x18                  	// #24
  41a058:	mul	x11, x12, x11
  41a05c:	add	x10, x10, x11
  41a060:	ldr	x10, [x10]
  41a064:	ldr	x11, [sp, #32]
  41a068:	mov	x12, #0x10                  	// #16
  41a06c:	mul	x11, x12, x11
  41a070:	ldr	x10, [x10, x11]
  41a074:	str	x8, [x9, x10, lsl #3]
  41a078:	ldur	x8, [x29, #-24]
  41a07c:	ldur	x9, [x29, #-8]
  41a080:	ldr	x9, [x9, #320]
  41a084:	ldr	x10, [sp, #40]
  41a088:	mov	x11, #0x18                  	// #24
  41a08c:	mul	x10, x11, x10
  41a090:	add	x9, x9, x10
  41a094:	ldr	x9, [x9]
  41a098:	ldr	x10, [sp, #32]
  41a09c:	mov	x12, #0x10                  	// #16
  41a0a0:	mul	x10, x12, x10
  41a0a4:	ldr	x9, [x9, x10]
  41a0a8:	ldr	x8, [x8, x9, lsl #3]
  41a0ac:	ldur	x9, [x29, #-8]
  41a0b0:	ldr	x9, [x9, #320]
  41a0b4:	ldr	x10, [sp, #40]
  41a0b8:	mul	x10, x11, x10
  41a0bc:	add	x9, x9, x10
  41a0c0:	ldr	x9, [x9]
  41a0c4:	ldr	x10, [sp, #32]
  41a0c8:	mul	x10, x12, x10
  41a0cc:	str	x8, [x9, x10]
  41a0d0:	ldr	x8, [sp, #32]
  41a0d4:	add	x8, x8, #0x1
  41a0d8:	str	x8, [sp, #32]
  41a0dc:	b	419fd0 <wcrtomb@plt+0x176c0>
  41a0e0:	ldur	x8, [x29, #-8]
  41a0e4:	ldr	x8, [x8, #320]
  41a0e8:	ldr	x9, [sp, #40]
  41a0ec:	mov	x10, #0x18                  	// #24
  41a0f0:	mul	x9, x10, x9
  41a0f4:	add	x8, x8, x9
  41a0f8:	ldr	x0, [x8]
  41a0fc:	ldur	x8, [x29, #-8]
  41a100:	ldr	x8, [x8, #320]
  41a104:	ldr	x9, [sp, #40]
  41a108:	mul	x9, x10, x9
  41a10c:	add	x8, x8, x9
  41a110:	ldr	x1, [x8, #8]
  41a114:	mov	x2, #0x10                  	// #16
  41a118:	adrp	x3, 41a000 <wcrtomb@plt+0x176f0>
  41a11c:	add	x3, x3, #0x468
  41a120:	bl	4023a0 <qsort@plt>
  41a124:	ldr	x8, [sp, #40]
  41a128:	add	x8, x8, #0x1
  41a12c:	str	x8, [sp, #40]
  41a130:	b	419e84 <wcrtomb@plt+0x17574>
  41a134:	str	xzr, [sp, #24]
  41a138:	ldr	x8, [sp, #24]
  41a13c:	ldur	x9, [x29, #-16]
  41a140:	cmp	x8, x9
  41a144:	b.ge	41a1f4 <wcrtomb@plt+0x178e4>  // b.tcont
  41a148:	ldur	x8, [x29, #-32]
  41a14c:	ldr	x9, [sp, #24]
  41a150:	ldr	x8, [x8, x9, lsl #3]
  41a154:	ldur	x9, [x29, #-8]
  41a158:	ldr	x9, [x9, #144]
  41a15c:	ldr	x10, [sp, #24]
  41a160:	str	x8, [x9, x10, lsl #3]
  41a164:	ldur	x8, [x29, #-8]
  41a168:	ldr	x8, [x8, #320]
  41a16c:	ldr	x9, [sp, #24]
  41a170:	mov	x10, #0x18                  	// #24
  41a174:	mul	x9, x10, x9
  41a178:	add	x8, x8, x9
  41a17c:	ldur	x9, [x29, #-40]
  41a180:	ldr	x11, [sp, #24]
  41a184:	mul	x10, x10, x11
  41a188:	add	x9, x9, x10
  41a18c:	ldr	q0, [x9]
  41a190:	str	q0, [x8]
  41a194:	ldr	x9, [x9, #16]
  41a198:	str	x9, [x8, #16]
  41a19c:	ldur	x8, [x29, #-48]
  41a1a0:	ldr	x9, [sp, #24]
  41a1a4:	ldr	w12, [x8, x9, lsl #2]
  41a1a8:	ldur	x8, [x29, #-8]
  41a1ac:	ldr	x8, [x8, #336]
  41a1b0:	ldr	x9, [sp, #24]
  41a1b4:	str	w12, [x8, x9, lsl #2]
  41a1b8:	ldr	x8, [sp, #56]
  41a1bc:	cbz	x8, 41a1e4 <wcrtomb@plt+0x178d4>
  41a1c0:	ldr	x8, [sp, #56]
  41a1c4:	ldr	x9, [sp, #24]
  41a1c8:	add	x8, x8, x9
  41a1cc:	ldrb	w10, [x8]
  41a1d0:	ldur	x8, [x29, #-8]
  41a1d4:	ldr	x8, [x8, #280]
  41a1d8:	ldr	x9, [sp, #24]
  41a1dc:	add	x8, x8, x9
  41a1e0:	strb	w10, [x8]
  41a1e4:	ldr	x8, [sp, #24]
  41a1e8:	add	x8, x8, #0x1
  41a1ec:	str	x8, [sp, #24]
  41a1f0:	b	41a138 <wcrtomb@plt+0x17828>
  41a1f4:	ldur	x8, [x29, #-16]
  41a1f8:	ldur	x9, [x29, #-8]
  41a1fc:	str	x8, [x9, #176]
  41a200:	ldur	x9, [x29, #-8]
  41a204:	str	x8, [x9, #152]
  41a208:	ldur	x0, [x29, #-32]
  41a20c:	bl	4026c0 <free@plt>
  41a210:	ldur	x0, [x29, #-40]
  41a214:	bl	4026c0 <free@plt>
  41a218:	ldur	x0, [x29, #-48]
  41a21c:	bl	4026c0 <free@plt>
  41a220:	ldr	x0, [sp, #56]
  41a224:	bl	4026c0 <free@plt>
  41a228:	ldur	x0, [x29, #-24]
  41a22c:	bl	4026c0 <free@plt>
  41a230:	ldp	x29, x30, [sp, #112]
  41a234:	add	sp, sp, #0x80
  41a238:	ret
  41a23c:	sub	sp, sp, #0x30
  41a240:	stp	x29, x30, [sp, #32]
  41a244:	add	x29, sp, #0x20
  41a248:	stur	x0, [x29, #-8]
  41a24c:	str	x1, [sp, #16]
  41a250:	str	x2, [sp, #8]
  41a254:	ldr	x8, [sp, #16]
  41a258:	ldr	x8, [x8, #8]
  41a25c:	cmp	x8, #0x4
  41a260:	b.ge	41a2b8 <wcrtomb@plt+0x179a8>  // b.tcont
  41a264:	str	xzr, [sp]
  41a268:	ldr	x8, [sp]
  41a26c:	ldr	x9, [sp, #16]
  41a270:	ldr	x9, [x9, #8]
  41a274:	cmp	x8, x9
  41a278:	b.ge	41a2b4 <wcrtomb@plt+0x179a4>  // b.tcont
  41a27c:	ldr	x8, [sp, #16]
  41a280:	ldr	x8, [x8]
  41a284:	ldr	x9, [sp]
  41a288:	mov	x10, #0x10                  	// #16
  41a28c:	mul	x9, x10, x9
  41a290:	add	x8, x8, x9
  41a294:	ldur	x2, [x29, #-8]
  41a298:	ldr	x0, [x8]
  41a29c:	ldr	x1, [x8, #8]
  41a2a0:	bl	41a2e0 <wcrtomb@plt+0x179d0>
  41a2a4:	ldr	x8, [sp]
  41a2a8:	add	x8, x8, #0x1
  41a2ac:	str	x8, [sp]
  41a2b0:	b	41a268 <wcrtomb@plt+0x17958>
  41a2b4:	b	41a2d4 <wcrtomb@plt+0x179c4>
  41a2b8:	ldr	x0, [sp, #16]
  41a2bc:	ldur	x1, [x29, #-8]
  41a2c0:	ldr	x2, [sp, #8]
  41a2c4:	bl	418978 <wcrtomb@plt+0x16068>
  41a2c8:	ldr	x0, [sp, #8]
  41a2cc:	ldur	x1, [x29, #-8]
  41a2d0:	bl	4189b4 <wcrtomb@plt+0x160a4>
  41a2d4:	ldp	x29, x30, [sp, #32]
  41a2d8:	add	sp, sp, #0x30
  41a2dc:	ret
  41a2e0:	sub	sp, sp, #0x50
  41a2e4:	stp	x29, x30, [sp, #64]
  41a2e8:	add	x29, sp, #0x40
  41a2ec:	stur	x0, [x29, #-16]
  41a2f0:	stur	x1, [x29, #-8]
  41a2f4:	stur	x2, [x29, #-24]
  41a2f8:	ldur	x8, [x29, #-24]
  41a2fc:	ldr	x8, [x8, #8]
  41a300:	str	x8, [sp, #32]
  41a304:	str	xzr, [sp, #24]
  41a308:	ldr	x8, [sp, #32]
  41a30c:	str	x8, [sp, #16]
  41a310:	ldr	x8, [sp, #24]
  41a314:	ldr	x9, [sp, #16]
  41a318:	cmp	x8, x9
  41a31c:	b.ge	41a3c4 <wcrtomb@plt+0x17ab4>  // b.tcont
  41a320:	ldr	x8, [sp, #24]
  41a324:	ldr	x9, [sp, #16]
  41a328:	add	x8, x8, x9
  41a32c:	asr	x8, x8, #1
  41a330:	str	x8, [sp, #8]
  41a334:	ldur	x8, [x29, #-24]
  41a338:	ldr	x8, [x8]
  41a33c:	ldr	x9, [sp, #8]
  41a340:	mov	x10, #0x10                  	// #16
  41a344:	mul	x9, x10, x9
  41a348:	ldr	x8, [x8, x9]
  41a34c:	ldur	x9, [x29, #-16]
  41a350:	cmp	x8, x9
  41a354:	b.ge	41a368 <wcrtomb@plt+0x17a58>  // b.tcont
  41a358:	ldr	x8, [sp, #8]
  41a35c:	add	x8, x8, #0x1
  41a360:	str	x8, [sp, #24]
  41a364:	b	41a3c0 <wcrtomb@plt+0x17ab0>
  41a368:	ldur	x8, [x29, #-24]
  41a36c:	ldr	x8, [x8]
  41a370:	ldr	x9, [sp, #8]
  41a374:	mov	x10, #0x10                  	// #16
  41a378:	mul	x9, x10, x9
  41a37c:	ldr	x8, [x8, x9]
  41a380:	ldur	x9, [x29, #-16]
  41a384:	cmp	x8, x9
  41a388:	b.ne	41a3b8 <wcrtomb@plt+0x17aa8>  // b.any
  41a38c:	ldur	w8, [x29, #-8]
  41a390:	ldur	x9, [x29, #-24]
  41a394:	ldr	x9, [x9]
  41a398:	ldr	x10, [sp, #8]
  41a39c:	mov	x11, #0x10                  	// #16
  41a3a0:	mul	x10, x11, x10
  41a3a4:	add	x9, x9, x10
  41a3a8:	ldr	w12, [x9, #8]
  41a3ac:	orr	w8, w12, w8
  41a3b0:	str	w8, [x9, #8]
  41a3b4:	b	41a45c <wcrtomb@plt+0x17b4c>
  41a3b8:	ldr	x8, [sp, #8]
  41a3bc:	str	x8, [sp, #16]
  41a3c0:	b	41a310 <wcrtomb@plt+0x17a00>
  41a3c4:	ldur	x8, [x29, #-24]
  41a3c8:	ldr	x0, [x8]
  41a3cc:	ldr	x1, [sp, #32]
  41a3d0:	ldur	x8, [x29, #-24]
  41a3d4:	add	x2, x8, #0x10
  41a3d8:	mov	x3, #0xffffffffffffffff    	// #-1
  41a3dc:	mov	x4, #0x10                  	// #16
  41a3e0:	bl	417dec <wcrtomb@plt+0x154dc>
  41a3e4:	ldur	x8, [x29, #-24]
  41a3e8:	str	x0, [x8]
  41a3ec:	ldr	x8, [sp, #32]
  41a3f0:	str	x8, [sp]
  41a3f4:	ldr	x8, [sp]
  41a3f8:	ldr	x9, [sp, #24]
  41a3fc:	cmp	x8, x9
  41a400:	b.le	41a438 <wcrtomb@plt+0x17b28>
  41a404:	ldur	x8, [x29, #-24]
  41a408:	ldr	x8, [x8]
  41a40c:	ldr	x9, [sp]
  41a410:	ldur	x10, [x29, #-24]
  41a414:	ldr	x10, [x10]
  41a418:	ldr	x11, [sp]
  41a41c:	subs	x11, x11, #0x1
  41a420:	ldr	q0, [x10, x11, lsl #4]
  41a424:	str	q0, [x8, x9, lsl #4]
  41a428:	ldr	x8, [sp]
  41a42c:	subs	x8, x8, #0x1
  41a430:	str	x8, [sp]
  41a434:	b	41a3f4 <wcrtomb@plt+0x17ae4>
  41a438:	ldur	x8, [x29, #-24]
  41a43c:	ldr	x8, [x8]
  41a440:	ldr	x9, [sp, #24]
  41a444:	ldur	q0, [x29, #-16]
  41a448:	str	q0, [x8, x9, lsl #4]
  41a44c:	ldur	x8, [x29, #-24]
  41a450:	ldr	x9, [x8, #8]
  41a454:	add	x9, x9, #0x1
  41a458:	str	x9, [x8, #8]
  41a45c:	ldp	x29, x30, [sp, #64]
  41a460:	add	sp, sp, #0x50
  41a464:	ret
  41a468:	sub	sp, sp, #0x30
  41a46c:	str	x0, [sp, #40]
  41a470:	str	x1, [sp, #32]
  41a474:	ldr	x8, [sp, #40]
  41a478:	str	x8, [sp, #24]
  41a47c:	ldr	x8, [sp, #32]
  41a480:	str	x8, [sp, #16]
  41a484:	ldr	x8, [sp, #24]
  41a488:	ldr	x8, [x8]
  41a48c:	ldr	x9, [sp, #16]
  41a490:	ldr	x9, [x9]
  41a494:	cmp	x8, x9
  41a498:	b.ge	41a4a8 <wcrtomb@plt+0x17b98>  // b.tcont
  41a49c:	mov	w8, #0xffffffff            	// #-1
  41a4a0:	str	w8, [sp, #12]
  41a4a4:	b	41a4c8 <wcrtomb@plt+0x17bb8>
  41a4a8:	ldr	x8, [sp, #24]
  41a4ac:	ldr	x8, [x8]
  41a4b0:	ldr	x9, [sp, #16]
  41a4b4:	ldr	x9, [x9]
  41a4b8:	cmp	x8, x9
  41a4bc:	cset	w10, gt
  41a4c0:	and	w10, w10, #0x1
  41a4c4:	str	w10, [sp, #12]
  41a4c8:	ldr	w8, [sp, #12]
  41a4cc:	mov	w0, w8
  41a4d0:	add	sp, sp, #0x30
  41a4d4:	ret
  41a4d8:	sub	sp, sp, #0x30
  41a4dc:	stp	x29, x30, [sp, #32]
  41a4e0:	add	x29, sp, #0x20
  41a4e4:	stur	w0, [x29, #-4]
  41a4e8:	stur	w1, [x29, #-8]
  41a4ec:	stur	w2, [x29, #-12]
  41a4f0:	ldur	w8, [x29, #-12]
  41a4f4:	and	w8, w8, #0x1
  41a4f8:	cbz	w8, 41a50c <wcrtomb@plt+0x17bfc>
  41a4fc:	ldur	w0, [x29, #-4]
  41a500:	bl	41a5a8 <wcrtomb@plt+0x17c98>
  41a504:	str	w0, [sp, #16]
  41a508:	b	41a514 <wcrtomb@plt+0x17c04>
  41a50c:	mov	w8, wzr
  41a510:	str	w8, [sp, #16]
  41a514:	ldr	w8, [sp, #16]
  41a518:	ldur	w9, [x29, #-12]
  41a51c:	and	w9, w9, #0x2
  41a520:	str	w8, [sp, #12]
  41a524:	cbz	w9, 41a538 <wcrtomb@plt+0x17c28>
  41a528:	ldur	w0, [x29, #-4]
  41a52c:	bl	41a5c0 <wcrtomb@plt+0x17cb0>
  41a530:	str	w0, [sp, #8]
  41a534:	b	41a540 <wcrtomb@plt+0x17c30>
  41a538:	mov	w8, wzr
  41a53c:	str	w8, [sp, #8]
  41a540:	ldr	w8, [sp, #8]
  41a544:	ldr	w9, [sp, #12]
  41a548:	orr	w8, w9, w8
  41a54c:	ldur	w10, [x29, #-12]
  41a550:	and	w10, w10, #0x4
  41a554:	str	w8, [sp, #4]
  41a558:	cbz	w10, 41a56c <wcrtomb@plt+0x17c5c>
  41a55c:	ldur	w0, [x29, #-4]
  41a560:	bl	41a5dc <wcrtomb@plt+0x17ccc>
  41a564:	str	w0, [sp]
  41a568:	b	41a574 <wcrtomb@plt+0x17c64>
  41a56c:	mov	w8, wzr
  41a570:	str	w8, [sp]
  41a574:	ldr	w8, [sp]
  41a578:	ldr	w9, [sp, #4]
  41a57c:	orr	w8, w9, w8
  41a580:	ldur	w10, [x29, #-8]
  41a584:	tst	w8, w10
  41a588:	cset	w8, ne  // ne = any
  41a58c:	mov	w10, #0x1                   	// #1
  41a590:	eor	w8, w8, #0x1
  41a594:	eor	w8, w8, w10
  41a598:	and	w0, w8, #0x1
  41a59c:	ldp	x29, x30, [sp, #32]
  41a5a0:	add	sp, sp, #0x30
  41a5a4:	ret
  41a5a8:	sub	sp, sp, #0x10
  41a5ac:	str	w0, [sp, #12]
  41a5b0:	ldr	w8, [sp, #12]
  41a5b4:	and	w0, w8, #0x7
  41a5b8:	add	sp, sp, #0x10
  41a5bc:	ret
  41a5c0:	sub	sp, sp, #0x10
  41a5c4:	str	w0, [sp, #12]
  41a5c8:	ldr	w8, [sp, #12]
  41a5cc:	asr	w8, w8, #3
  41a5d0:	and	w0, w8, #0x7
  41a5d4:	add	sp, sp, #0x10
  41a5d8:	ret
  41a5dc:	sub	sp, sp, #0x10
  41a5e0:	str	w0, [sp, #12]
  41a5e4:	ldr	w8, [sp, #12]
  41a5e8:	asr	w8, w8, #6
  41a5ec:	and	w0, w8, #0x7
  41a5f0:	add	sp, sp, #0x10
  41a5f4:	ret
  41a5f8:	sub	sp, sp, #0x50
  41a5fc:	stp	x29, x30, [sp, #64]
  41a600:	add	x29, sp, #0x40
  41a604:	mov	x8, #0x8                   	// #8
  41a608:	stur	x0, [x29, #-8]
  41a60c:	stur	x1, [x29, #-16]
  41a610:	mov	x0, x8
  41a614:	bl	4232a0 <wcrtomb@plt+0x20990>
  41a618:	stur	x0, [x29, #-24]
  41a61c:	ldur	x8, [x29, #-8]
  41a620:	str	x8, [sp, #32]
  41a624:	ldr	x8, [sp, #32]
  41a628:	ldrb	w9, [x8]
  41a62c:	cbz	w9, 41a710 <wcrtomb@plt+0x17e00>
  41a630:	str	xzr, [sp, #24]
  41a634:	ldur	x0, [x29, #-16]
  41a638:	ldr	x8, [sp, #32]
  41a63c:	ldrb	w1, [x8]
  41a640:	bl	4026e0 <strchr@plt>
  41a644:	str	x0, [sp, #16]
  41a648:	ldr	x8, [sp, #16]
  41a64c:	cbz	x8, 41a6e4 <wcrtomb@plt+0x17dd4>
  41a650:	mov	x8, #0x1                   	// #1
  41a654:	str	x8, [sp, #8]
  41a658:	ldr	x8, [sp, #32]
  41a65c:	ldr	x9, [sp, #8]
  41a660:	ldrb	w10, [x8, x9]
  41a664:	mov	w11, #0x0                   	// #0
  41a668:	str	w11, [sp, #4]
  41a66c:	cbz	w10, 41a694 <wcrtomb@plt+0x17d84>
  41a670:	ldr	x8, [sp, #32]
  41a674:	ldr	x9, [sp, #8]
  41a678:	ldrb	w10, [x8, x9]
  41a67c:	ldr	x8, [sp, #16]
  41a680:	ldr	x9, [sp, #8]
  41a684:	ldrb	w11, [x8, x9]
  41a688:	cmp	w10, w11
  41a68c:	cset	w10, eq  // eq = none
  41a690:	str	w10, [sp, #4]
  41a694:	ldr	w8, [sp, #4]
  41a698:	tbnz	w8, #0, 41a6a0 <wcrtomb@plt+0x17d90>
  41a69c:	b	41a6b0 <wcrtomb@plt+0x17da0>
  41a6a0:	ldr	x8, [sp, #8]
  41a6a4:	add	x8, x8, #0x1
  41a6a8:	str	x8, [sp, #8]
  41a6ac:	b	41a658 <wcrtomb@plt+0x17d48>
  41a6b0:	ldr	x8, [sp, #8]
  41a6b4:	ldr	x9, [sp, #24]
  41a6b8:	cmp	x8, x9
  41a6bc:	b.le	41a6c8 <wcrtomb@plt+0x17db8>
  41a6c0:	ldr	x8, [sp, #8]
  41a6c4:	str	x8, [sp, #24]
  41a6c8:	ldr	x8, [sp, #16]
  41a6cc:	add	x0, x8, #0x1
  41a6d0:	ldr	x8, [sp, #32]
  41a6d4:	ldrb	w1, [x8]
  41a6d8:	bl	4026e0 <strchr@plt>
  41a6dc:	str	x0, [sp, #16]
  41a6e0:	b	41a648 <wcrtomb@plt+0x17d38>
  41a6e4:	ldr	x8, [sp, #24]
  41a6e8:	cbz	x8, 41a700 <wcrtomb@plt+0x17df0>
  41a6ec:	ldur	x0, [x29, #-24]
  41a6f0:	ldr	x1, [sp, #32]
  41a6f4:	ldr	x2, [sp, #24]
  41a6f8:	bl	4137a4 <wcrtomb@plt+0x10e94>
  41a6fc:	stur	x0, [x29, #-24]
  41a700:	ldr	x8, [sp, #32]
  41a704:	add	x8, x8, #0x1
  41a708:	str	x8, [sp, #32]
  41a70c:	b	41a624 <wcrtomb@plt+0x17d14>
  41a710:	ldur	x0, [x29, #-24]
  41a714:	ldp	x29, x30, [sp, #64]
  41a718:	add	sp, sp, #0x50
  41a71c:	ret
  41a720:	sub	sp, sp, #0xe0
  41a724:	stp	x29, x30, [sp, #208]
  41a728:	add	x29, sp, #0xd0
  41a72c:	mov	x8, #0x400                 	// #1024
  41a730:	mov	w9, #0x1                   	// #1
  41a734:	stur	x0, [x29, #-8]
  41a738:	stur	x1, [x29, #-16]
  41a73c:	stur	x2, [x29, #-24]
  41a740:	and	w10, w3, w9
  41a744:	sturb	w10, [x29, #-25]
  41a748:	stur	x4, [x29, #-40]
  41a74c:	and	w9, w5, w9
  41a750:	sturb	w9, [x29, #-41]
  41a754:	ldur	x11, [x29, #-8]
  41a758:	ldr	x11, [x11, #304]
  41a75c:	cmp	x8, x11
  41a760:	b.gt	41a97c <wcrtomb@plt+0x1806c>
  41a764:	ldur	x8, [x29, #-8]
  41a768:	ldrsw	x8, [x8, #364]
  41a76c:	stur	x8, [x29, #-56]
  41a770:	ldur	x8, [x29, #-56]
  41a774:	ldur	x9, [x29, #-8]
  41a778:	ldr	x9, [x9, #304]
  41a77c:	cmp	x8, x9
  41a780:	b.ge	41a7d8 <wcrtomb@plt+0x17ec8>  // b.tcont
  41a784:	ldur	x8, [x29, #-8]
  41a788:	ldr	x8, [x8, #296]
  41a78c:	ldur	x9, [x29, #-56]
  41a790:	mov	x10, #0x50                  	// #80
  41a794:	mul	x9, x10, x9
  41a798:	add	x8, x8, x9
  41a79c:	ldr	x0, [x8, #8]
  41a7a0:	str	x10, [sp, #48]
  41a7a4:	bl	4026c0 <free@plt>
  41a7a8:	ldur	x8, [x29, #-8]
  41a7ac:	ldr	x8, [x8, #296]
  41a7b0:	ldur	x9, [x29, #-56]
  41a7b4:	ldr	x10, [sp, #48]
  41a7b8:	mul	x9, x10, x9
  41a7bc:	add	x8, x8, x9
  41a7c0:	ldr	x0, [x8, #48]
  41a7c4:	bl	4026c0 <free@plt>
  41a7c8:	ldur	x8, [x29, #-56]
  41a7cc:	add	x8, x8, #0x1
  41a7d0:	stur	x8, [x29, #-56]
  41a7d4:	b	41a770 <wcrtomb@plt+0x17e60>
  41a7d8:	ldur	x8, [x29, #-8]
  41a7dc:	ldrsw	x8, [x8, #364]
  41a7e0:	ldur	x9, [x29, #-8]
  41a7e4:	str	x8, [x9, #304]
  41a7e8:	ldur	x8, [x29, #-8]
  41a7ec:	ldr	x8, [x8, #368]
  41a7f0:	cbz	x8, 41a8a0 <wcrtomb@plt+0x17f90>
  41a7f4:	stur	xzr, [x29, #-64]
  41a7f8:	ldur	x8, [x29, #-64]
  41a7fc:	ldur	x9, [x29, #-8]
  41a800:	ldr	x9, [x9, #352]
  41a804:	cmp	x8, x9
  41a808:	b.ge	41a898 <wcrtomb@plt+0x17f88>  // b.tcont
  41a80c:	ldur	x8, [x29, #-8]
  41a810:	ldr	x8, [x8, #368]
  41a814:	ldur	x9, [x29, #-64]
  41a818:	mov	x10, #0x8                   	// #8
  41a81c:	mul	x9, x10, x9
  41a820:	add	x8, x8, x9
  41a824:	ldr	x0, [x8]
  41a828:	str	x10, [sp, #40]
  41a82c:	bl	4026c0 <free@plt>
  41a830:	ldur	x8, [x29, #-8]
  41a834:	ldr	x8, [x8, #376]
  41a838:	ldur	x9, [x29, #-64]
  41a83c:	ldr	x10, [sp, #40]
  41a840:	mul	x9, x10, x9
  41a844:	add	x8, x8, x9
  41a848:	ldr	x0, [x8]
  41a84c:	bl	4026c0 <free@plt>
  41a850:	ldur	x8, [x29, #-8]
  41a854:	ldr	x8, [x8, #376]
  41a858:	ldur	x9, [x29, #-64]
  41a85c:	ldr	x10, [sp, #40]
  41a860:	mul	x9, x10, x9
  41a864:	add	x8, x8, x9
  41a868:	mov	x9, xzr
  41a86c:	str	x9, [x8]
  41a870:	ldur	x8, [x29, #-8]
  41a874:	ldr	x8, [x8, #368]
  41a878:	ldur	x11, [x29, #-64]
  41a87c:	mul	x11, x10, x11
  41a880:	add	x8, x8, x11
  41a884:	str	x9, [x8]
  41a888:	ldur	x8, [x29, #-64]
  41a88c:	add	x8, x8, #0x1
  41a890:	stur	x8, [x29, #-64]
  41a894:	b	41a7f8 <wcrtomb@plt+0x17ee8>
  41a898:	ldur	x8, [x29, #-8]
  41a89c:	str	wzr, [x8, #360]
  41a8a0:	ldur	x8, [x29, #-8]
  41a8a4:	ldrb	w9, [x8, #1048]
  41a8a8:	tbnz	w9, #0, 41a8b0 <wcrtomb@plt+0x17fa0>
  41a8ac:	b	41a97c <wcrtomb@plt+0x1806c>
  41a8b0:	ldur	x8, [x29, #-8]
  41a8b4:	ldr	x8, [x8, #432]
  41a8b8:	cbz	x8, 41a97c <wcrtomb@plt+0x1806c>
  41a8bc:	mov	x8, #0xffffffffffffffff    	// #-1
  41a8c0:	stur	x8, [x29, #-72]
  41a8c4:	ldur	x8, [x29, #-72]
  41a8c8:	ldur	x9, [x29, #-8]
  41a8cc:	ldr	x9, [x9, #352]
  41a8d0:	cmp	x8, x9
  41a8d4:	b.ge	41a92c <wcrtomb@plt+0x1801c>  // b.tcont
  41a8d8:	ldur	x8, [x29, #-8]
  41a8dc:	ldr	x8, [x8, #432]
  41a8e0:	ldur	x9, [x29, #-72]
  41a8e4:	mov	x10, #0x8                   	// #8
  41a8e8:	mul	x9, x10, x9
  41a8ec:	add	x8, x8, x9
  41a8f0:	ldr	x0, [x8]
  41a8f4:	str	x10, [sp, #32]
  41a8f8:	bl	4026c0 <free@plt>
  41a8fc:	ldur	x8, [x29, #-8]
  41a900:	ldr	x8, [x8, #432]
  41a904:	ldur	x9, [x29, #-72]
  41a908:	ldr	x10, [sp, #32]
  41a90c:	mul	x9, x10, x9
  41a910:	add	x8, x8, x9
  41a914:	mov	x9, xzr
  41a918:	str	x9, [x8]
  41a91c:	ldur	x8, [x29, #-72]
  41a920:	add	x8, x8, #0x1
  41a924:	stur	x8, [x29, #-72]
  41a928:	b	41a8c4 <wcrtomb@plt+0x17fb4>
  41a92c:	stur	xzr, [x29, #-80]
  41a930:	ldur	x8, [x29, #-80]
  41a934:	ldur	x9, [x29, #-8]
  41a938:	ldrsw	x9, [x9, #364]
  41a93c:	cmp	x8, x9
  41a940:	b.ge	41a974 <wcrtomb@plt+0x18064>  // b.tcont
  41a944:	ldur	x8, [x29, #-8]
  41a948:	ldr	x8, [x8, #296]
  41a94c:	ldur	x9, [x29, #-80]
  41a950:	mov	x10, #0x50                  	// #80
  41a954:	mul	x9, x10, x9
  41a958:	add	x8, x8, x9
  41a95c:	mov	x9, #0xffffffffffffffff    	// #-1
  41a960:	str	x9, [x8, #72]
  41a964:	ldur	x8, [x29, #-80]
  41a968:	add	x8, x8, #0x1
  41a96c:	stur	x8, [x29, #-80]
  41a970:	b	41a930 <wcrtomb@plt+0x18020>
  41a974:	ldur	x8, [x29, #-8]
  41a978:	str	xzr, [x8, #440]
  41a97c:	ldur	x8, [x29, #-8]
  41a980:	ldr	x8, [x8, #352]
  41a984:	cbnz	x8, 41a990 <wcrtomb@plt+0x18080>
  41a988:	ldur	x0, [x29, #-8]
  41a98c:	bl	41afac <wcrtomb@plt+0x1869c>
  41a990:	stur	xzr, [x29, #-88]
  41a994:	stur	xzr, [x29, #-96]
  41a998:	ldur	x8, [x29, #-16]
  41a99c:	str	x8, [sp, #104]
  41a9a0:	ldr	x8, [sp, #104]
  41a9a4:	str	x8, [sp, #96]
  41a9a8:	ldur	x8, [x29, #-8]
  41a9ac:	ldr	x8, [x8, #368]
  41a9b0:	str	x8, [sp, #88]
  41a9b4:	ldur	x8, [x29, #-8]
  41a9b8:	ldrb	w9, [x8, #459]
  41a9bc:	strb	w9, [sp, #87]
  41a9c0:	ldur	x8, [x29, #-24]
  41a9c4:	ldrb	w9, [x8]
  41a9c8:	strb	w9, [sp, #86]
  41a9cc:	ldrb	w9, [sp, #87]
  41a9d0:	ldur	x8, [x29, #-24]
  41a9d4:	strb	w9, [x8]
  41a9d8:	ldurb	w9, [x29, #-41]
  41a9dc:	tbnz	w9, #0, 41a9e4 <wcrtomb@plt+0x180d4>
  41a9e0:	b	41aa0c <wcrtomb@plt+0x180fc>
  41a9e4:	ldur	x8, [x29, #-8]
  41a9e8:	str	xzr, [x8, #272]
  41a9ec:	ldur	x8, [x29, #-8]
  41a9f0:	ldr	x8, [x8, #424]
  41a9f4:	cbnz	x8, 41aa0c <wcrtomb@plt+0x180fc>
  41a9f8:	ldur	x8, [x29, #-8]
  41a9fc:	add	x0, x8, #0x198
  41aa00:	ldur	x8, [x29, #-8]
  41aa04:	ldr	x1, [x8, #176]
  41aa08:	bl	41892c <wcrtomb@plt+0x1601c>
  41aa0c:	str	xzr, [sp, #72]
  41aa10:	ldr	x8, [sp, #88]
  41aa14:	ldur	x9, [x29, #-88]
  41aa18:	mov	x10, #0x8                   	// #8
  41aa1c:	mul	x9, x10, x9
  41aa20:	add	x8, x8, x9
  41aa24:	ldr	x8, [x8]
  41aa28:	str	x8, [sp, #64]
  41aa2c:	cbz	x8, 41ac4c <wcrtomb@plt+0x1833c>
  41aa30:	ldur	x8, [x29, #-88]
  41aa34:	ldur	x9, [x29, #-8]
  41aa38:	ldrsw	x9, [x9, #364]
  41aa3c:	cmp	x8, x9
  41aa40:	b.ge	41aac8 <wcrtomb@plt+0x181b8>  // b.tcont
  41aa44:	ldurb	w8, [x29, #-41]
  41aa48:	tbnz	w8, #0, 41aa50 <wcrtomb@plt+0x18140>
  41aa4c:	b	41aa70 <wcrtomb@plt+0x18160>
  41aa50:	ldur	x8, [x29, #-8]
  41aa54:	ldr	x8, [x8, #296]
  41aa58:	ldur	x9, [x29, #-88]
  41aa5c:	mov	x10, #0x50                  	// #80
  41aa60:	mul	x9, x10, x9
  41aa64:	add	x8, x8, x9
  41aa68:	ldr	x8, [x8, #56]
  41aa6c:	cbnz	x8, 41aaa0 <wcrtomb@plt+0x18190>
  41aa70:	ldr	x8, [sp, #64]
  41aa74:	ldr	x9, [sp, #104]
  41aa78:	ldrb	w10, [x9]
  41aa7c:	mov	w9, w10
  41aa80:	ldr	x8, [x8, x9, lsl #3]
  41aa84:	ldur	x9, [x29, #-88]
  41aa88:	cmp	x8, x9
  41aa8c:	b.ne	41aaa0 <wcrtomb@plt+0x18190>  // b.any
  41aa90:	ldr	x8, [sp, #104]
  41aa94:	add	x8, x8, #0x1
  41aa98:	str	x8, [sp, #104]
  41aa9c:	b	41aa70 <wcrtomb@plt+0x18160>
  41aaa0:	ldurb	w8, [x29, #-41]
  41aaa4:	tbnz	w8, #0, 41aaac <wcrtomb@plt+0x1819c>
  41aaa8:	b	41aac8 <wcrtomb@plt+0x181b8>
  41aaac:	ldur	x0, [x29, #-8]
  41aab0:	ldr	x1, [sp, #104]
  41aab4:	ldr	x2, [sp, #96]
  41aab8:	ldur	x3, [x29, #-24]
  41aabc:	bl	41b210 <wcrtomb@plt+0x18900>
  41aac0:	str	x0, [sp, #96]
  41aac4:	str	x0, [sp, #104]
  41aac8:	ldurb	w8, [x29, #-41]
  41aacc:	tbnz	w8, #0, 41aad4 <wcrtomb@plt+0x181c4>
  41aad0:	b	41ab84 <wcrtomb@plt+0x18274>
  41aad4:	ldur	x8, [x29, #-88]
  41aad8:	stur	x8, [x29, #-96]
  41aadc:	ldur	x8, [x29, #-8]
  41aae0:	ldr	x8, [x8, #296]
  41aae4:	ldur	x9, [x29, #-88]
  41aae8:	mov	x10, #0x50                  	// #80
  41aaec:	mul	x9, x10, x9
  41aaf0:	add	x8, x8, x9
  41aaf4:	ldr	x8, [x8, #56]
  41aaf8:	cbz	x8, 41ab30 <wcrtomb@plt+0x18220>
  41aafc:	ldur	x8, [x29, #-8]
  41ab00:	add	x8, x8, #0x51c
  41ab04:	ldr	x9, [sp, #104]
  41ab08:	ldrb	w10, [x9]
  41ab0c:	mov	w9, w10
  41ab10:	ldr	w10, [x8, x9, lsl #2]
  41ab14:	mov	w11, #0xffffffff            	// #-1
  41ab18:	cmp	w10, w11
  41ab1c:	b.ne	41ab30 <wcrtomb@plt+0x18220>  // b.any
  41ab20:	ldr	x8, [sp, #104]
  41ab24:	ldur	x9, [x29, #-24]
  41ab28:	cmp	x8, x9
  41ab2c:	b.cc	41ab54 <wcrtomb@plt+0x18244>  // b.lo, b.ul, b.last
  41ab30:	ldr	x8, [sp, #64]
  41ab34:	ldr	x9, [sp, #104]
  41ab38:	add	x10, x9, #0x1
  41ab3c:	str	x10, [sp, #104]
  41ab40:	ldrb	w11, [x9]
  41ab44:	mov	w9, w11
  41ab48:	ldr	x8, [x8, x9, lsl #3]
  41ab4c:	stur	x8, [x29, #-88]
  41ab50:	b	41ab80 <wcrtomb@plt+0x18270>
  41ab54:	ldur	x0, [x29, #-8]
  41ab58:	ldur	x1, [x29, #-88]
  41ab5c:	ldur	x3, [x29, #-24]
  41ab60:	add	x2, sp, #0x68
  41ab64:	bl	41b2b8 <wcrtomb@plt+0x189a8>
  41ab68:	stur	x0, [x29, #-88]
  41ab6c:	ldr	x8, [sp, #104]
  41ab70:	str	x8, [sp, #96]
  41ab74:	ldur	x8, [x29, #-8]
  41ab78:	ldr	x8, [x8, #368]
  41ab7c:	str	x8, [sp, #88]
  41ab80:	b	41ac48 <wcrtomb@plt+0x18338>
  41ab84:	ldr	x8, [sp, #64]
  41ab88:	ldr	x9, [sp, #104]
  41ab8c:	add	x10, x9, #0x1
  41ab90:	str	x10, [sp, #104]
  41ab94:	ldrb	w11, [x9]
  41ab98:	mov	w9, w11
  41ab9c:	mov	x10, #0x8                   	// #8
  41aba0:	ldr	x8, [x8, x9, lsl #3]
  41aba4:	stur	x8, [x29, #-96]
  41aba8:	ldr	x8, [sp, #88]
  41abac:	ldur	x9, [x29, #-96]
  41abb0:	mul	x9, x10, x9
  41abb4:	add	x8, x8, x9
  41abb8:	ldr	x8, [x8]
  41abbc:	str	x8, [sp, #64]
  41abc0:	ldr	x8, [sp, #64]
  41abc4:	cbnz	x8, 41abe4 <wcrtomb@plt+0x182d4>
  41abc8:	ldur	x8, [x29, #-88]
  41abcc:	str	x8, [sp, #56]
  41abd0:	ldur	x8, [x29, #-96]
  41abd4:	stur	x8, [x29, #-88]
  41abd8:	ldr	x8, [sp, #56]
  41abdc:	stur	x8, [x29, #-96]
  41abe0:	b	41ac4c <wcrtomb@plt+0x1833c>
  41abe4:	ldur	x8, [x29, #-88]
  41abe8:	ldur	x9, [x29, #-8]
  41abec:	ldrsw	x9, [x9, #364]
  41abf0:	cmp	x8, x9
  41abf4:	b.ge	41ac28 <wcrtomb@plt+0x18318>  // b.tcont
  41abf8:	ldr	x8, [sp, #64]
  41abfc:	ldr	x9, [sp, #104]
  41ac00:	ldrb	w10, [x9]
  41ac04:	mov	w9, w10
  41ac08:	ldr	x8, [x8, x9, lsl #3]
  41ac0c:	ldur	x9, [x29, #-96]
  41ac10:	cmp	x8, x9
  41ac14:	b.ne	41ac28 <wcrtomb@plt+0x18318>  // b.any
  41ac18:	ldr	x8, [sp, #104]
  41ac1c:	add	x8, x8, #0x1
  41ac20:	str	x8, [sp, #104]
  41ac24:	b	41abf8 <wcrtomb@plt+0x182e8>
  41ac28:	ldr	x8, [sp, #64]
  41ac2c:	ldr	x9, [sp, #104]
  41ac30:	add	x10, x9, #0x1
  41ac34:	str	x10, [sp, #104]
  41ac38:	ldrb	w11, [x9]
  41ac3c:	mov	w9, w11
  41ac40:	ldr	x8, [x8, x9, lsl #3]
  41ac44:	stur	x8, [x29, #-88]
  41ac48:	b	41aa10 <wcrtomb@plt+0x18100>
  41ac4c:	ldur	x8, [x29, #-88]
  41ac50:	cmp	x8, #0x0
  41ac54:	cset	w9, ge  // ge = tcont
  41ac58:	tbnz	w9, #0, 41ada8 <wcrtomb@plt+0x18498>
  41ac5c:	ldur	x8, [x29, #-88]
  41ac60:	mov	x9, #0xfffffffffffffffe    	// #-2
  41ac64:	cmp	x8, x9
  41ac68:	b.ne	41ac94 <wcrtomb@plt+0x18384>  // b.any
  41ac6c:	ldur	x0, [x29, #-96]
  41ac70:	ldur	x1, [x29, #-8]
  41ac74:	ldr	x8, [sp, #104]
  41ac78:	ldurb	w2, [x8, #-1]
  41ac7c:	bl	41b71c <wcrtomb@plt+0x18e0c>
  41ac80:	stur	x0, [x29, #-88]
  41ac84:	ldur	x8, [x29, #-8]
  41ac88:	ldr	x8, [x8, #368]
  41ac8c:	str	x8, [sp, #88]
  41ac90:	b	41ada4 <wcrtomb@plt+0x18494>
  41ac94:	ldr	x8, [sp, #104]
  41ac98:	ldur	x9, [x29, #-24]
  41ac9c:	cmp	x8, x9
  41aca0:	b.hi	41ad98 <wcrtomb@plt+0x18488>  // b.pmore
  41aca4:	ldr	x8, [sp, #104]
  41aca8:	ldurb	w9, [x8, #-1]
  41acac:	ldrb	w10, [sp, #87]
  41acb0:	cmp	w9, w10
  41acb4:	b.ne	41ad98 <wcrtomb@plt+0x18488>  // b.any
  41acb8:	ldur	x8, [x29, #-8]
  41acbc:	ldr	x8, [x8, #392]
  41acc0:	ldur	x9, [x29, #-96]
  41acc4:	ldr	x8, [x8, x9, lsl #3]
  41acc8:	mov	x9, xzr
  41accc:	cmp	x9, x8
  41acd0:	cset	w10, gt
  41acd4:	tbnz	w10, #0, 41ad98 <wcrtomb@plt+0x18488>
  41acd8:	ldr	x8, [sp, #72]
  41acdc:	add	x8, x8, #0x1
  41ace0:	str	x8, [sp, #72]
  41ace4:	ldr	x8, [sp, #104]
  41ace8:	str	x8, [sp, #96]
  41acec:	ldurb	w9, [x29, #-25]
  41acf0:	tbnz	w9, #0, 41acf8 <wcrtomb@plt+0x183e8>
  41acf4:	b	41ad10 <wcrtomb@plt+0x18400>
  41acf8:	ldur	x8, [x29, #-8]
  41acfc:	ldr	x8, [x8, #392]
  41ad00:	ldur	x9, [x29, #-96]
  41ad04:	ldr	x8, [x8, x9, lsl #3]
  41ad08:	str	x8, [sp, #24]
  41ad0c:	b	41ad8c <wcrtomb@plt+0x1847c>
  41ad10:	ldur	x8, [x29, #-8]
  41ad14:	add	x8, x8, #0x1cc
  41ad18:	ldrb	w9, [sp, #87]
  41ad1c:	mov	w10, w9
  41ad20:	ldrb	w9, [x8, x10]
  41ad24:	cmp	w9, #0x4
  41ad28:	b.ne	41ad38 <wcrtomb@plt+0x18428>  // b.any
  41ad2c:	mov	x8, xzr
  41ad30:	str	x8, [sp, #16]
  41ad34:	b	41ad84 <wcrtomb@plt+0x18474>
  41ad38:	ldur	x8, [x29, #-8]
  41ad3c:	add	x8, x8, #0x1cc
  41ad40:	ldrb	w9, [sp, #87]
  41ad44:	mov	w10, w9
  41ad48:	ldrb	w9, [x8, x10]
  41ad4c:	cmp	w9, #0x2
  41ad50:	b.ne	41ad70 <wcrtomb@plt+0x18460>  // b.any
  41ad54:	ldur	x8, [x29, #-8]
  41ad58:	ldr	w9, [x8, #364]
  41ad5c:	subs	w9, w9, #0x1
  41ad60:	mov	w0, w9
  41ad64:	sxtw	x8, w0
  41ad68:	str	x8, [sp, #8]
  41ad6c:	b	41ad7c <wcrtomb@plt+0x1846c>
  41ad70:	ldur	x8, [x29, #-8]
  41ad74:	ldr	x8, [x8, #400]
  41ad78:	str	x8, [sp, #8]
  41ad7c:	ldr	x8, [sp, #8]
  41ad80:	str	x8, [sp, #16]
  41ad84:	ldr	x8, [sp, #16]
  41ad88:	str	x8, [sp, #24]
  41ad8c:	ldr	x8, [sp, #24]
  41ad90:	stur	x8, [x29, #-88]
  41ad94:	b	41ada4 <wcrtomb@plt+0x18494>
  41ad98:	mov	x8, xzr
  41ad9c:	str	x8, [sp, #104]
  41ada0:	b	41af74 <wcrtomb@plt+0x18664>
  41ada4:	b	41af70 <wcrtomb@plt+0x18660>
  41ada8:	ldur	x8, [x29, #-8]
  41adac:	ldr	x8, [x8, #376]
  41adb0:	ldur	x9, [x29, #-88]
  41adb4:	mov	x10, #0x8                   	// #8
  41adb8:	mul	x9, x10, x9
  41adbc:	add	x8, x8, x9
  41adc0:	ldr	x8, [x8]
  41adc4:	cbz	x8, 41af50 <wcrtomb@plt+0x18640>
  41adc8:	ldur	x8, [x29, #-8]
  41adcc:	ldr	x8, [x8, #384]
  41add0:	ldur	x9, [x29, #-88]
  41add4:	ldrb	w10, [x8, x9]
  41add8:	ldur	x8, [x29, #-8]
  41addc:	add	x8, x8, #0x1cc
  41ade0:	ldr	x9, [sp, #104]
  41ade4:	ldrb	w11, [x9]
  41ade8:	mov	w9, w11
  41adec:	ldrb	w11, [x8, x9]
  41adf0:	and	w10, w10, w11
  41adf4:	cbnz	w10, 41ae3c <wcrtomb@plt+0x1852c>
  41adf8:	ldr	x8, [sp, #104]
  41adfc:	ldur	x9, [x29, #-24]
  41ae00:	cmp	x8, x9
  41ae04:	b.ne	41ae40 <wcrtomb@plt+0x18530>  // b.any
  41ae08:	ldur	x8, [x29, #-8]
  41ae0c:	ldr	x8, [x8, #296]
  41ae10:	ldur	x9, [x29, #-88]
  41ae14:	mov	x10, #0x50                  	// #80
  41ae18:	mul	x9, x10, x9
  41ae1c:	add	x8, x8, x9
  41ae20:	ldrb	w0, [x8, #32]
  41ae24:	ldur	x2, [x29, #-88]
  41ae28:	ldur	x3, [x29, #-8]
  41ae2c:	mov	w1, #0x4                   	// #4
  41ae30:	bl	41c43c <wcrtomb@plt+0x19b2c>
  41ae34:	tbnz	w0, #0, 41ae3c <wcrtomb@plt+0x1852c>
  41ae38:	b	41ae40 <wcrtomb@plt+0x18530>
  41ae3c:	b	41af74 <wcrtomb@plt+0x18664>
  41ae40:	ldurb	w8, [x29, #-41]
  41ae44:	tbnz	w8, #0, 41ae4c <wcrtomb@plt+0x1853c>
  41ae48:	b	41ae7c <wcrtomb@plt+0x1856c>
  41ae4c:	ldur	x8, [x29, #-88]
  41ae50:	ldur	x9, [x29, #-8]
  41ae54:	ldrsw	x9, [x9, #364]
  41ae58:	cmp	x8, x9
  41ae5c:	b.ge	41ae7c <wcrtomb@plt+0x1856c>  // b.tcont
  41ae60:	ldur	x0, [x29, #-8]
  41ae64:	ldr	x1, [sp, #104]
  41ae68:	ldr	x2, [sp, #96]
  41ae6c:	ldur	x3, [x29, #-24]
  41ae70:	bl	41b210 <wcrtomb@plt+0x18900>
  41ae74:	str	x0, [sp, #96]
  41ae78:	str	x0, [sp, #104]
  41ae7c:	ldur	x8, [x29, #-88]
  41ae80:	stur	x8, [x29, #-96]
  41ae84:	ldurb	w9, [x29, #-41]
  41ae88:	tbnz	w9, #0, 41ae90 <wcrtomb@plt+0x18580>
  41ae8c:	b	41aee4 <wcrtomb@plt+0x185d4>
  41ae90:	ldur	x8, [x29, #-8]
  41ae94:	ldr	x8, [x8, #296]
  41ae98:	ldur	x9, [x29, #-88]
  41ae9c:	mov	x10, #0x50                  	// #80
  41aea0:	mul	x9, x10, x9
  41aea4:	add	x8, x8, x9
  41aea8:	ldr	x8, [x8, #56]
  41aeac:	cbz	x8, 41aee4 <wcrtomb@plt+0x185d4>
  41aeb0:	ldur	x8, [x29, #-8]
  41aeb4:	add	x8, x8, #0x51c
  41aeb8:	ldr	x9, [sp, #104]
  41aebc:	ldrb	w10, [x9]
  41aec0:	mov	w9, w10
  41aec4:	ldr	w10, [x8, x9, lsl #2]
  41aec8:	mov	w11, #0xffffffff            	// #-1
  41aecc:	cmp	w10, w11
  41aed0:	b.ne	41aee4 <wcrtomb@plt+0x185d4>  // b.any
  41aed4:	ldr	x8, [sp, #104]
  41aed8:	ldur	x9, [x29, #-24]
  41aedc:	cmp	x8, x9
  41aee0:	b.cc	41af20 <wcrtomb@plt+0x18610>  // b.lo, b.ul, b.last
  41aee4:	ldur	x8, [x29, #-8]
  41aee8:	ldr	x8, [x8, #376]
  41aeec:	ldur	x9, [x29, #-88]
  41aef0:	mov	x10, #0x8                   	// #8
  41aef4:	mul	x9, x10, x9
  41aef8:	add	x8, x8, x9
  41aefc:	ldr	x8, [x8]
  41af00:	ldr	x9, [sp, #104]
  41af04:	add	x10, x9, #0x1
  41af08:	str	x10, [sp, #104]
  41af0c:	ldrb	w11, [x9]
  41af10:	mov	w9, w11
  41af14:	ldr	x8, [x8, x9, lsl #3]
  41af18:	stur	x8, [x29, #-88]
  41af1c:	b	41af4c <wcrtomb@plt+0x1863c>
  41af20:	ldur	x0, [x29, #-8]
  41af24:	ldur	x1, [x29, #-88]
  41af28:	ldur	x3, [x29, #-24]
  41af2c:	add	x2, sp, #0x68
  41af30:	bl	41b2b8 <wcrtomb@plt+0x189a8>
  41af34:	stur	x0, [x29, #-88]
  41af38:	ldr	x8, [sp, #104]
  41af3c:	str	x8, [sp, #96]
  41af40:	ldur	x8, [x29, #-8]
  41af44:	ldr	x8, [x8, #368]
  41af48:	str	x8, [sp, #88]
  41af4c:	b	41af70 <wcrtomb@plt+0x18660>
  41af50:	ldur	x0, [x29, #-88]
  41af54:	ldur	x1, [x29, #-8]
  41af58:	ldr	x8, [sp, #104]
  41af5c:	ldrb	w2, [x8]
  41af60:	bl	41b71c <wcrtomb@plt+0x18e0c>
  41af64:	ldur	x8, [x29, #-8]
  41af68:	ldr	x8, [x8, #368]
  41af6c:	str	x8, [sp, #88]
  41af70:	b	41aa10 <wcrtomb@plt+0x18100>
  41af74:	ldur	x8, [x29, #-40]
  41af78:	cbz	x8, 41af90 <wcrtomb@plt+0x18680>
  41af7c:	ldr	x8, [sp, #72]
  41af80:	ldur	x9, [x29, #-40]
  41af84:	ldr	x10, [x9]
  41af88:	add	x8, x10, x8
  41af8c:	str	x8, [x9]
  41af90:	ldrb	w8, [sp, #86]
  41af94:	ldur	x9, [x29, #-24]
  41af98:	strb	w8, [x9]
  41af9c:	ldr	x0, [sp, #104]
  41afa0:	ldp	x29, x30, [sp, #208]
  41afa4:	add	sp, sp, #0xe0
  41afa8:	ret
  41afac:	sub	sp, sp, #0x60
  41afb0:	stp	x29, x30, [sp, #80]
  41afb4:	add	x29, sp, #0x50
  41afb8:	stur	x0, [x29, #-8]
  41afbc:	ldur	x8, [x29, #-8]
  41afc0:	ldr	x8, [x8, #352]
  41afc4:	stur	x8, [x29, #-16]
  41afc8:	ldur	x8, [x29, #-16]
  41afcc:	ldur	x9, [x29, #-8]
  41afd0:	ldr	x9, [x9, #304]
  41afd4:	cmp	x8, x9
  41afd8:	b.ge	41b204 <wcrtomb@plt+0x188f4>  // b.tcont
  41afdc:	ldur	x8, [x29, #-8]
  41afe0:	ldr	x8, [x8, #368]
  41afe4:	cbz	x8, 41b000 <wcrtomb@plt+0x186f0>
  41afe8:	ldur	x8, [x29, #-8]
  41afec:	ldr	x8, [x8, #368]
  41aff0:	mov	x9, #0xfffffffffffffff0    	// #-16
  41aff4:	add	x8, x8, x9
  41aff8:	str	x8, [sp, #32]
  41affc:	b	41b008 <wcrtomb@plt+0x186f8>
  41b000:	mov	x8, xzr
  41b004:	str	x8, [sp, #32]
  41b008:	ldr	x8, [sp, #32]
  41b00c:	stur	x8, [x29, #-24]
  41b010:	ldur	x8, [x29, #-24]
  41b014:	cbz	x8, 41b02c <wcrtomb@plt+0x1871c>
  41b018:	ldur	x8, [x29, #-8]
  41b01c:	ldr	x8, [x8, #352]
  41b020:	add	x8, x8, #0x2
  41b024:	str	x8, [sp, #24]
  41b028:	b	41b034 <wcrtomb@plt+0x18724>
  41b02c:	mov	x8, xzr
  41b030:	str	x8, [sp, #24]
  41b034:	ldr	x8, [sp, #24]
  41b038:	sub	x1, x29, #0x20
  41b03c:	stur	x8, [x29, #-32]
  41b040:	ldur	x0, [x29, #-24]
  41b044:	ldur	x8, [x29, #-8]
  41b048:	ldr	x8, [x8, #304]
  41b04c:	ldur	x9, [x29, #-16]
  41b050:	subs	x2, x8, x9
  41b054:	mov	x3, #0xffffffffffffffff    	// #-1
  41b058:	mov	x8, #0x8                   	// #8
  41b05c:	mov	x4, x8
  41b060:	str	x8, [sp, #16]
  41b064:	bl	4141d8 <wcrtomb@plt+0x118c8>
  41b068:	stur	x0, [x29, #-24]
  41b06c:	ldur	x8, [x29, #-24]
  41b070:	mov	x9, xzr
  41b074:	str	x9, [x8, #8]
  41b078:	ldur	x8, [x29, #-24]
  41b07c:	str	x9, [x8]
  41b080:	ldur	x8, [x29, #-24]
  41b084:	add	x8, x8, #0x10
  41b088:	ldur	x9, [x29, #-8]
  41b08c:	str	x8, [x9, #368]
  41b090:	ldur	x8, [x29, #-32]
  41b094:	subs	x8, x8, #0x2
  41b098:	ldur	x9, [x29, #-8]
  41b09c:	str	x8, [x9, #352]
  41b0a0:	str	x8, [sp, #40]
  41b0a4:	ldur	x8, [x29, #-8]
  41b0a8:	ldr	x0, [x8, #376]
  41b0ac:	ldr	x1, [sp, #40]
  41b0b0:	ldr	x2, [sp, #16]
  41b0b4:	bl	423098 <wcrtomb@plt+0x20788>
  41b0b8:	ldur	x8, [x29, #-8]
  41b0bc:	str	x0, [x8, #376]
  41b0c0:	ldur	x8, [x29, #-8]
  41b0c4:	ldr	x0, [x8, #384]
  41b0c8:	ldr	x1, [sp, #40]
  41b0cc:	mov	x2, #0x1                   	// #1
  41b0d0:	bl	423098 <wcrtomb@plt+0x20788>
  41b0d4:	ldur	x8, [x29, #-8]
  41b0d8:	str	x0, [x8, #384]
  41b0dc:	ldur	x8, [x29, #-8]
  41b0e0:	ldr	x0, [x8, #392]
  41b0e4:	ldr	x1, [sp, #40]
  41b0e8:	ldr	x2, [sp, #16]
  41b0ec:	bl	423098 <wcrtomb@plt+0x20788>
  41b0f0:	ldur	x8, [x29, #-8]
  41b0f4:	str	x0, [x8, #392]
  41b0f8:	ldur	x8, [x29, #-8]
  41b0fc:	ldrb	w10, [x8, #1048]
  41b100:	tbnz	w10, #0, 41b108 <wcrtomb@plt+0x187f8>
  41b104:	b	41b17c <wcrtomb@plt+0x1886c>
  41b108:	ldur	x8, [x29, #-8]
  41b10c:	ldr	x8, [x8, #432]
  41b110:	cbz	x8, 41b12c <wcrtomb@plt+0x1881c>
  41b114:	ldur	x8, [x29, #-8]
  41b118:	ldr	x8, [x8, #432]
  41b11c:	mov	x9, #0xfffffffffffffff0    	// #-16
  41b120:	add	x8, x8, x9
  41b124:	str	x8, [sp, #8]
  41b128:	b	41b134 <wcrtomb@plt+0x18824>
  41b12c:	mov	x8, xzr
  41b130:	str	x8, [sp, #8]
  41b134:	ldr	x8, [sp, #8]
  41b138:	stur	x8, [x29, #-24]
  41b13c:	ldur	x0, [x29, #-24]
  41b140:	ldur	x1, [x29, #-32]
  41b144:	mov	x2, #0x8                   	// #8
  41b148:	bl	423098 <wcrtomb@plt+0x20788>
  41b14c:	stur	x0, [x29, #-24]
  41b150:	ldur	x8, [x29, #-16]
  41b154:	cbnz	x8, 41b16c <wcrtomb@plt+0x1885c>
  41b158:	ldur	x8, [x29, #-24]
  41b15c:	mov	x9, xzr
  41b160:	str	x9, [x8, #8]
  41b164:	ldur	x8, [x29, #-24]
  41b168:	str	x9, [x8]
  41b16c:	ldur	x8, [x29, #-24]
  41b170:	add	x8, x8, #0x10
  41b174:	ldur	x9, [x29, #-8]
  41b178:	str	x8, [x9, #432]
  41b17c:	ldur	x8, [x29, #-16]
  41b180:	ldr	x9, [sp, #40]
  41b184:	cmp	x8, x9
  41b188:	b.ge	41b204 <wcrtomb@plt+0x188f4>  // b.tcont
  41b18c:	ldur	x8, [x29, #-8]
  41b190:	ldr	x8, [x8, #368]
  41b194:	ldur	x9, [x29, #-16]
  41b198:	mov	x10, #0x8                   	// #8
  41b19c:	mul	x9, x10, x9
  41b1a0:	add	x8, x8, x9
  41b1a4:	mov	x9, xzr
  41b1a8:	str	x9, [x8]
  41b1ac:	ldur	x8, [x29, #-8]
  41b1b0:	ldr	x8, [x8, #376]
  41b1b4:	ldur	x11, [x29, #-16]
  41b1b8:	mul	x10, x10, x11
  41b1bc:	add	x8, x8, x10
  41b1c0:	str	x9, [x8]
  41b1c4:	ldur	x8, [x29, #-8]
  41b1c8:	ldrb	w12, [x8, #1048]
  41b1cc:	tbnz	w12, #0, 41b1d4 <wcrtomb@plt+0x188c4>
  41b1d0:	b	41b1f4 <wcrtomb@plt+0x188e4>
  41b1d4:	ldur	x8, [x29, #-8]
  41b1d8:	ldr	x8, [x8, #432]
  41b1dc:	ldur	x9, [x29, #-16]
  41b1e0:	mov	x10, #0x8                   	// #8
  41b1e4:	mul	x9, x10, x9
  41b1e8:	add	x8, x8, x9
  41b1ec:	mov	x9, xzr
  41b1f0:	str	x9, [x8]
  41b1f4:	ldur	x8, [x29, #-16]
  41b1f8:	add	x8, x8, #0x1
  41b1fc:	stur	x8, [x29, #-16]
  41b200:	b	41b17c <wcrtomb@plt+0x1886c>
  41b204:	ldp	x29, x30, [sp, #80]
  41b208:	add	sp, sp, #0x60
  41b20c:	ret
  41b210:	sub	sp, sp, #0x40
  41b214:	stp	x29, x30, [sp, #48]
  41b218:	add	x29, sp, #0x30
  41b21c:	stur	x0, [x29, #-16]
  41b220:	str	x1, [sp, #24]
  41b224:	str	x2, [sp, #16]
  41b228:	str	x3, [sp, #8]
  41b22c:	ldur	x8, [x29, #-16]
  41b230:	add	x8, x8, #0x2cc
  41b234:	ldr	x9, [sp, #24]
  41b238:	ldrb	w10, [x9]
  41b23c:	mov	w9, w10
  41b240:	add	x8, x8, x9
  41b244:	ldrb	w10, [x8]
  41b248:	tbnz	w10, #0, 41b250 <wcrtomb@plt+0x18940>
  41b24c:	b	41b25c <wcrtomb@plt+0x1894c>
  41b250:	ldr	x8, [sp, #24]
  41b254:	stur	x8, [x29, #-8]
  41b258:	b	41b2a8 <wcrtomb@plt+0x18998>
  41b25c:	ldr	x8, [sp, #16]
  41b260:	ldr	x9, [sp, #24]
  41b264:	cmp	x8, x9
  41b268:	b.cs	41b2a0 <wcrtomb@plt+0x18990>  // b.hs, b.nlast
  41b26c:	ldr	x1, [sp, #16]
  41b270:	ldr	x8, [sp, #8]
  41b274:	ldr	x9, [sp, #16]
  41b278:	subs	x2, x8, x9
  41b27c:	ldur	x3, [x29, #-16]
  41b280:	add	x0, sp, #0x4
  41b284:	bl	417c94 <wcrtomb@plt+0x15384>
  41b288:	ldr	x8, [sp, #16]
  41b28c:	mov	w1, w0
  41b290:	sxtw	x9, w1
  41b294:	add	x8, x8, x9
  41b298:	str	x8, [sp, #16]
  41b29c:	b	41b25c <wcrtomb@plt+0x1894c>
  41b2a0:	ldr	x8, [sp, #16]
  41b2a4:	stur	x8, [x29, #-8]
  41b2a8:	ldur	x0, [x29, #-8]
  41b2ac:	ldp	x29, x30, [sp, #48]
  41b2b0:	add	sp, sp, #0x40
  41b2b4:	ret
  41b2b8:	sub	sp, sp, #0x80
  41b2bc:	stp	x29, x30, [sp, #112]
  41b2c0:	add	x29, sp, #0x70
  41b2c4:	sub	x8, x29, #0x2c
  41b2c8:	stur	x0, [x29, #-16]
  41b2cc:	stur	x1, [x29, #-24]
  41b2d0:	stur	x2, [x29, #-32]
  41b2d4:	stur	x3, [x29, #-40]
  41b2d8:	ldur	x9, [x29, #-32]
  41b2dc:	ldr	x1, [x9]
  41b2e0:	ldur	x9, [x29, #-40]
  41b2e4:	ldur	x10, [x29, #-32]
  41b2e8:	ldr	x10, [x10]
  41b2ec:	subs	x2, x9, x10
  41b2f0:	ldur	x3, [x29, #-16]
  41b2f4:	mov	x0, x8
  41b2f8:	bl	417c94 <wcrtomb@plt+0x15384>
  41b2fc:	stur	w0, [x29, #-48]
  41b300:	ldur	x8, [x29, #-16]
  41b304:	str	xzr, [x8, #416]
  41b308:	ldur	x8, [x29, #-24]
  41b30c:	str	x8, [sp, #56]
  41b310:	str	wzr, [sp, #52]
  41b314:	ldr	w8, [sp, #52]
  41b318:	ldur	w9, [x29, #-48]
  41b31c:	mov	w10, #0x0                   	// #0
  41b320:	cmp	w8, w9
  41b324:	str	w10, [sp, #12]
  41b328:	b.ge	41b35c <wcrtomb@plt+0x18a4c>  // b.tcont
  41b32c:	ldr	w8, [sp, #52]
  41b330:	mov	w9, #0x1                   	// #1
  41b334:	str	w9, [sp, #8]
  41b338:	cbz	w8, 41b354 <wcrtomb@plt+0x18a44>
  41b33c:	ldur	x8, [x29, #-16]
  41b340:	ldrsw	x8, [x8, #364]
  41b344:	ldur	x9, [x29, #-24]
  41b348:	cmp	x8, x9
  41b34c:	cset	w10, le
  41b350:	str	w10, [sp, #8]
  41b354:	ldr	w8, [sp, #8]
  41b358:	str	w8, [sp, #12]
  41b35c:	ldr	w8, [sp, #12]
  41b360:	tbnz	w8, #0, 41b368 <wcrtomb@plt+0x18a58>
  41b364:	b	41b38c <wcrtomb@plt+0x18a7c>
  41b368:	ldur	x0, [x29, #-16]
  41b36c:	ldur	x1, [x29, #-24]
  41b370:	ldur	x2, [x29, #-32]
  41b374:	bl	41c490 <wcrtomb@plt+0x19b80>
  41b378:	stur	x0, [x29, #-24]
  41b37c:	ldr	w8, [sp, #52]
  41b380:	add	w8, w8, #0x1
  41b384:	str	w8, [sp, #52]
  41b388:	b	41b314 <wcrtomb@plt+0x18a04>
  41b38c:	ldur	w8, [x29, #-48]
  41b390:	ldr	w9, [sp, #52]
  41b394:	subs	w8, w8, w9
  41b398:	ldur	x10, [x29, #-32]
  41b39c:	ldr	x11, [x10]
  41b3a0:	mov	w0, w8
  41b3a4:	sxtw	x12, w0
  41b3a8:	add	x11, x11, x12
  41b3ac:	str	x11, [x10]
  41b3b0:	ldur	w8, [x29, #-44]
  41b3b4:	mov	w9, #0xffffffff            	// #-1
  41b3b8:	cmp	w8, w9
  41b3bc:	b.ne	41b3cc <wcrtomb@plt+0x18abc>  // b.any
  41b3c0:	ldur	x8, [x29, #-24]
  41b3c4:	stur	x8, [x29, #-8]
  41b3c8:	b	41b70c <wcrtomb@plt+0x18dfc>
  41b3cc:	ldur	x8, [x29, #-16]
  41b3d0:	ldr	x8, [x8, #296]
  41b3d4:	ldr	x9, [sp, #56]
  41b3d8:	mov	x10, #0x50                  	// #80
  41b3dc:	mul	x9, x10, x9
  41b3e0:	add	x8, x8, x9
  41b3e4:	ldr	x8, [x8, #72]
  41b3e8:	cmp	x8, #0x0
  41b3ec:	cset	w11, ge  // ge = tcont
  41b3f0:	tbnz	w11, #0, 41b4f4 <wcrtomb@plt+0x18be4>
  41b3f4:	ldur	x8, [x29, #-16]
  41b3f8:	ldr	x8, [x8, #440]
  41b3fc:	mov	x9, #0x400                 	// #1024
  41b400:	cmp	x9, x8
  41b404:	b.gt	41b4c8 <wcrtomb@plt+0x18bb8>
  41b408:	mov	x8, #0xffffffffffffffff    	// #-1
  41b40c:	str	x8, [sp, #40]
  41b410:	ldr	x8, [sp, #40]
  41b414:	ldur	x9, [x29, #-16]
  41b418:	ldr	x9, [x9, #352]
  41b41c:	cmp	x8, x9
  41b420:	b.ge	41b478 <wcrtomb@plt+0x18b68>  // b.tcont
  41b424:	ldur	x8, [x29, #-16]
  41b428:	ldr	x8, [x8, #432]
  41b42c:	ldr	x9, [sp, #40]
  41b430:	mov	x10, #0x8                   	// #8
  41b434:	mul	x9, x10, x9
  41b438:	add	x8, x8, x9
  41b43c:	ldr	x0, [x8]
  41b440:	str	x10, [sp]
  41b444:	bl	4026c0 <free@plt>
  41b448:	ldur	x8, [x29, #-16]
  41b44c:	ldr	x8, [x8, #432]
  41b450:	ldr	x9, [sp, #40]
  41b454:	ldr	x10, [sp]
  41b458:	mul	x9, x10, x9
  41b45c:	add	x8, x8, x9
  41b460:	mov	x9, xzr
  41b464:	str	x9, [x8]
  41b468:	ldr	x8, [sp, #40]
  41b46c:	add	x8, x8, #0x1
  41b470:	str	x8, [sp, #40]
  41b474:	b	41b410 <wcrtomb@plt+0x18b00>
  41b478:	str	xzr, [sp, #32]
  41b47c:	ldr	x8, [sp, #32]
  41b480:	ldur	x9, [x29, #-16]
  41b484:	ldr	x9, [x9, #304]
  41b488:	cmp	x8, x9
  41b48c:	b.ge	41b4c0 <wcrtomb@plt+0x18bb0>  // b.tcont
  41b490:	ldur	x8, [x29, #-16]
  41b494:	ldr	x8, [x8, #296]
  41b498:	ldr	x9, [sp, #32]
  41b49c:	mov	x10, #0x50                  	// #80
  41b4a0:	mul	x9, x10, x9
  41b4a4:	add	x8, x8, x9
  41b4a8:	mov	x9, #0xffffffffffffffff    	// #-1
  41b4ac:	str	x9, [x8, #72]
  41b4b0:	ldr	x8, [sp, #32]
  41b4b4:	add	x8, x8, #0x1
  41b4b8:	str	x8, [sp, #32]
  41b4bc:	b	41b47c <wcrtomb@plt+0x18b6c>
  41b4c0:	ldur	x8, [x29, #-16]
  41b4c4:	str	xzr, [x8, #440]
  41b4c8:	ldur	x8, [x29, #-16]
  41b4cc:	ldr	x9, [x8, #440]
  41b4d0:	add	x10, x9, #0x1
  41b4d4:	str	x10, [x8, #440]
  41b4d8:	ldur	x8, [x29, #-16]
  41b4dc:	ldr	x8, [x8, #296]
  41b4e0:	ldr	x10, [sp, #56]
  41b4e4:	mov	x11, #0x50                  	// #80
  41b4e8:	mul	x10, x11, x10
  41b4ec:	add	x8, x8, x10
  41b4f0:	str	x9, [x8, #72]
  41b4f4:	ldur	x8, [x29, #-16]
  41b4f8:	ldr	x8, [x8, #432]
  41b4fc:	ldur	x9, [x29, #-24]
  41b500:	mov	x10, #0x8                   	// #8
  41b504:	mul	x9, x10, x9
  41b508:	add	x8, x8, x9
  41b50c:	ldr	x8, [x8]
  41b510:	cbnz	x8, 41b584 <wcrtomb@plt+0x18c74>
  41b514:	mov	x0, #0x2000                	// #8192
  41b518:	bl	423058 <wcrtomb@plt+0x20748>
  41b51c:	ldur	x8, [x29, #-16]
  41b520:	ldr	x8, [x8, #432]
  41b524:	ldur	x9, [x29, #-24]
  41b528:	mov	x10, #0x8                   	// #8
  41b52c:	mul	x9, x10, x9
  41b530:	add	x8, x8, x9
  41b534:	str	x0, [x8]
  41b538:	str	wzr, [sp, #28]
  41b53c:	ldr	w8, [sp, #28]
  41b540:	cmp	w8, #0x400
  41b544:	b.ge	41b580 <wcrtomb@plt+0x18c70>  // b.tcont
  41b548:	ldur	x8, [x29, #-16]
  41b54c:	ldr	x8, [x8, #432]
  41b550:	ldur	x9, [x29, #-24]
  41b554:	mov	x10, #0x8                   	// #8
  41b558:	mul	x9, x10, x9
  41b55c:	add	x8, x8, x9
  41b560:	ldr	x8, [x8]
  41b564:	ldrsw	x9, [sp, #28]
  41b568:	mov	x10, #0xffffffffffffffff    	// #-1
  41b56c:	str	x10, [x8, x9, lsl #3]
  41b570:	ldr	w8, [sp, #28]
  41b574:	add	w8, w8, #0x1
  41b578:	str	w8, [sp, #28]
  41b57c:	b	41b53c <wcrtomb@plt+0x18c2c>
  41b580:	b	41b610 <wcrtomb@plt+0x18d00>
  41b584:	ldur	x8, [x29, #-16]
  41b588:	ldr	x8, [x8, #432]
  41b58c:	ldur	x9, [x29, #-24]
  41b590:	mov	x10, #0x8                   	// #8
  41b594:	mul	x9, x10, x9
  41b598:	add	x8, x8, x9
  41b59c:	ldr	x8, [x8]
  41b5a0:	ldur	x9, [x29, #-16]
  41b5a4:	ldr	x9, [x9, #296]
  41b5a8:	ldr	x10, [sp, #56]
  41b5ac:	mov	x11, #0x50                  	// #80
  41b5b0:	mul	x10, x11, x10
  41b5b4:	add	x9, x9, x10
  41b5b8:	ldr	x9, [x9, #72]
  41b5bc:	ldr	x8, [x8, x9, lsl #3]
  41b5c0:	cmp	x8, #0x0
  41b5c4:	cset	w12, lt  // lt = tstop
  41b5c8:	tbnz	w12, #0, 41b610 <wcrtomb@plt+0x18d00>
  41b5cc:	ldur	x8, [x29, #-16]
  41b5d0:	ldr	x8, [x8, #432]
  41b5d4:	ldur	x9, [x29, #-24]
  41b5d8:	mov	x10, #0x8                   	// #8
  41b5dc:	mul	x9, x10, x9
  41b5e0:	add	x8, x8, x9
  41b5e4:	ldr	x8, [x8]
  41b5e8:	ldur	x9, [x29, #-16]
  41b5ec:	ldr	x9, [x9, #296]
  41b5f0:	ldr	x10, [sp, #56]
  41b5f4:	mov	x11, #0x50                  	// #80
  41b5f8:	mul	x10, x11, x10
  41b5fc:	add	x9, x9, x10
  41b600:	ldr	x9, [x9, #72]
  41b604:	ldr	x8, [x8, x9, lsl #3]
  41b608:	stur	x8, [x29, #-8]
  41b60c:	b	41b70c <wcrtomb@plt+0x18dfc>
  41b610:	ldur	x8, [x29, #-24]
  41b614:	mov	x9, #0xffffffffffffffff    	// #-1
  41b618:	cmp	x8, x9
  41b61c:	b.ne	41b64c <wcrtomb@plt+0x18d3c>  // b.any
  41b620:	ldur	x8, [x29, #-16]
  41b624:	ldr	x8, [x8, #296]
  41b628:	ldr	x9, [sp, #56]
  41b62c:	mov	x10, #0x50                  	// #80
  41b630:	mul	x9, x10, x9
  41b634:	add	x8, x8, x9
  41b638:	add	x0, x8, #0x30
  41b63c:	ldur	x8, [x29, #-16]
  41b640:	add	x1, x8, #0x198
  41b644:	bl	4189b4 <wcrtomb@plt+0x160a4>
  41b648:	b	41b68c <wcrtomb@plt+0x18d7c>
  41b64c:	ldur	x8, [x29, #-16]
  41b650:	ldr	x8, [x8, #296]
  41b654:	ldr	x9, [sp, #56]
  41b658:	mov	x10, #0x50                  	// #80
  41b65c:	mul	x9, x10, x9
  41b660:	add	x8, x8, x9
  41b664:	add	x0, x8, #0x30
  41b668:	ldur	x8, [x29, #-16]
  41b66c:	ldr	x8, [x8, #296]
  41b670:	ldur	x9, [x29, #-24]
  41b674:	mul	x9, x10, x9
  41b678:	add	x8, x8, x9
  41b67c:	add	x1, x8, #0x8
  41b680:	ldur	x8, [x29, #-16]
  41b684:	add	x2, x8, #0x198
  41b688:	bl	418978 <wcrtomb@plt+0x16068>
  41b68c:	ldur	x0, [x29, #-16]
  41b690:	ldur	x8, [x29, #-16]
  41b694:	add	x1, x8, #0x198
  41b698:	bl	419088 <wcrtomb@plt+0x16778>
  41b69c:	str	w0, [sp, #24]
  41b6a0:	ldur	x0, [x29, #-16]
  41b6a4:	ldur	x8, [x29, #-16]
  41b6a8:	add	x1, x8, #0x198
  41b6ac:	ldr	w9, [sp, #24]
  41b6b0:	eor	w2, w9, #0x7
  41b6b4:	bl	4190fc <wcrtomb@plt+0x167ec>
  41b6b8:	str	x0, [sp, #16]
  41b6bc:	ldur	x0, [x29, #-16]
  41b6c0:	bl	41afac <wcrtomb@plt+0x1869c>
  41b6c4:	ldr	x8, [sp, #16]
  41b6c8:	ldur	x10, [x29, #-16]
  41b6cc:	ldr	x10, [x10, #432]
  41b6d0:	ldur	x11, [x29, #-24]
  41b6d4:	mov	x12, #0x8                   	// #8
  41b6d8:	mul	x11, x12, x11
  41b6dc:	add	x10, x10, x11
  41b6e0:	ldr	x10, [x10]
  41b6e4:	ldur	x11, [x29, #-16]
  41b6e8:	ldr	x11, [x11, #296]
  41b6ec:	ldr	x12, [sp, #56]
  41b6f0:	mov	x13, #0x50                  	// #80
  41b6f4:	mul	x12, x13, x12
  41b6f8:	add	x11, x11, x12
  41b6fc:	ldr	x11, [x11, #72]
  41b700:	str	x8, [x10, x11, lsl #3]
  41b704:	ldr	x8, [sp, #16]
  41b708:	stur	x8, [x29, #-8]
  41b70c:	ldur	x0, [x29, #-8]
  41b710:	ldp	x29, x30, [sp, #112]
  41b714:	add	sp, sp, #0x80
  41b718:	ret
  41b71c:	sub	sp, sp, #0x1a0
  41b720:	stp	x29, x30, [sp, #384]
  41b724:	str	x28, [sp, #400]
  41b728:	add	x29, sp, #0x180
  41b72c:	sub	x8, x29, #0xa8
  41b730:	str	x0, [x8, #160]
  41b734:	str	x1, [x8, #152]
  41b738:	sturb	w2, [x29, #-17]
  41b73c:	ldr	x0, [x8, #160]
  41b740:	ldr	x1, [x8, #152]
  41b744:	str	x8, [sp, #64]
  41b748:	bl	41c640 <wcrtomb@plt+0x19d30>
  41b74c:	tbnz	w0, #0, 41b754 <wcrtomb@plt+0x18e44>
  41b750:	b	41b768 <wcrtomb@plt+0x18e58>
  41b754:	ldr	x8, [sp, #64]
  41b758:	ldr	x9, [x8, #152]
  41b75c:	ldr	x9, [x9, #376]
  41b760:	str	x9, [sp, #56]
  41b764:	b	41b778 <wcrtomb@plt+0x18e68>
  41b768:	ldr	x8, [sp, #64]
  41b76c:	ldr	x9, [x8, #152]
  41b770:	ldr	x9, [x9, #368]
  41b774:	str	x9, [sp, #56]
  41b778:	ldr	x8, [sp, #56]
  41b77c:	ldr	x9, [sp, #64]
  41b780:	ldr	x10, [x9, #160]
  41b784:	mov	x11, #0x8                   	// #8
  41b788:	mul	x10, x11, x10
  41b78c:	add	x8, x8, x10
  41b790:	str	x8, [x9, #40]
  41b794:	ldr	x8, [x9, #40]
  41b798:	ldr	x8, [x8]
  41b79c:	str	x8, [x9, #32]
  41b7a0:	ldr	x8, [x9, #32]
  41b7a4:	cbnz	x8, 41b8f0 <wcrtomb@plt+0x18fe0>
  41b7a8:	ldr	x8, [sp, #64]
  41b7ac:	ldr	x9, [x8, #152]
  41b7b0:	ldr	w10, [x9, #360]
  41b7b4:	mov	w11, #0x400                 	// #1024
  41b7b8:	cmp	w11, w10
  41b7bc:	b.gt	41b890 <wcrtomb@plt+0x18f80>
  41b7c0:	ldr	x8, [sp, #64]
  41b7c4:	ldr	x9, [x8, #152]
  41b7c8:	ldrsw	x9, [x9, #364]
  41b7cc:	str	x9, [x8, #24]
  41b7d0:	ldr	x8, [sp, #64]
  41b7d4:	ldr	x9, [x8, #24]
  41b7d8:	ldr	x10, [x8, #152]
  41b7dc:	ldr	x10, [x10, #352]
  41b7e0:	cmp	x9, x10
  41b7e4:	b.ge	41b884 <wcrtomb@plt+0x18f74>  // b.tcont
  41b7e8:	ldr	x8, [sp, #64]
  41b7ec:	ldr	x9, [x8, #152]
  41b7f0:	ldr	x9, [x9, #368]
  41b7f4:	ldr	x10, [x8, #24]
  41b7f8:	mov	x11, #0x8                   	// #8
  41b7fc:	mul	x10, x11, x10
  41b800:	add	x9, x9, x10
  41b804:	ldr	x0, [x9]
  41b808:	str	x11, [sp, #48]
  41b80c:	bl	4026c0 <free@plt>
  41b810:	ldr	x8, [sp, #64]
  41b814:	ldr	x9, [x8, #152]
  41b818:	ldr	x9, [x9, #376]
  41b81c:	ldr	x10, [x8, #24]
  41b820:	ldr	x11, [sp, #48]
  41b824:	mul	x10, x11, x10
  41b828:	add	x9, x9, x10
  41b82c:	ldr	x0, [x9]
  41b830:	bl	4026c0 <free@plt>
  41b834:	ldr	x8, [sp, #64]
  41b838:	ldr	x9, [x8, #152]
  41b83c:	ldr	x9, [x9, #376]
  41b840:	ldr	x10, [x8, #24]
  41b844:	ldr	x11, [sp, #48]
  41b848:	mul	x10, x11, x10
  41b84c:	add	x9, x9, x10
  41b850:	mov	x10, xzr
  41b854:	str	x10, [x9]
  41b858:	ldr	x9, [x8, #152]
  41b85c:	ldr	x9, [x9, #368]
  41b860:	ldr	x12, [x8, #24]
  41b864:	mul	x12, x11, x12
  41b868:	add	x9, x9, x12
  41b86c:	str	x10, [x9]
  41b870:	ldr	x8, [sp, #64]
  41b874:	ldr	x9, [x8, #24]
  41b878:	add	x9, x9, #0x1
  41b87c:	str	x9, [x8, #24]
  41b880:	b	41b7d0 <wcrtomb@plt+0x18ec0>
  41b884:	ldr	x8, [sp, #64]
  41b888:	ldr	x9, [x8, #152]
  41b88c:	str	wzr, [x9, #360]
  41b890:	ldr	x8, [sp, #64]
  41b894:	ldr	x9, [x8, #152]
  41b898:	ldr	w10, [x9, #360]
  41b89c:	add	w10, w10, #0x1
  41b8a0:	str	w10, [x9, #360]
  41b8a4:	mov	x0, #0x800                 	// #2048
  41b8a8:	bl	423058 <wcrtomb@plt+0x20748>
  41b8ac:	ldr	x8, [sp, #64]
  41b8b0:	str	x0, [x8, #32]
  41b8b4:	ldr	x9, [x8, #40]
  41b8b8:	str	x0, [x9]
  41b8bc:	stur	wzr, [x29, #-148]
  41b8c0:	ldur	w8, [x29, #-148]
  41b8c4:	cmp	w8, #0x100
  41b8c8:	b.ge	41b8f0 <wcrtomb@plt+0x18fe0>  // b.tcont
  41b8cc:	ldr	x8, [sp, #64]
  41b8d0:	ldr	x9, [x8, #32]
  41b8d4:	ldursw	x10, [x29, #-148]
  41b8d8:	mov	x11, #0xfffffffffffffffe    	// #-2
  41b8dc:	str	x11, [x9, x10, lsl #3]
  41b8e0:	ldur	w8, [x29, #-148]
  41b8e4:	add	w8, w8, #0x1
  41b8e8:	stur	w8, [x29, #-148]
  41b8ec:	b	41b8c0 <wcrtomb@plt+0x18fb0>
  41b8f0:	ldr	x8, [sp, #64]
  41b8f4:	ldr	x9, [x8, #152]
  41b8f8:	ldr	x9, [x9, #384]
  41b8fc:	ldr	x10, [x8, #160]
  41b900:	add	x9, x9, x10
  41b904:	mov	w11, #0x0                   	// #0
  41b908:	strb	w11, [x9]
  41b90c:	ldr	x9, [x8, #152]
  41b910:	ldr	x9, [x9, #296]
  41b914:	ldr	x10, [x8, #160]
  41b918:	mov	x12, #0x50                  	// #80
  41b91c:	mul	x10, x12, x10
  41b920:	add	x9, x9, x10
  41b924:	ldrb	w0, [x9, #32]
  41b928:	ldr	x2, [x8, #160]
  41b92c:	ldr	x3, [x8, #152]
  41b930:	mov	w1, #0x4                   	// #4
  41b934:	bl	41c43c <wcrtomb@plt+0x19b2c>
  41b938:	tbnz	w0, #0, 41b940 <wcrtomb@plt+0x19030>
  41b93c:	b	41b960 <wcrtomb@plt+0x19050>
  41b940:	ldr	x8, [sp, #64]
  41b944:	ldr	x9, [x8, #152]
  41b948:	ldr	x9, [x9, #384]
  41b94c:	ldr	x10, [x8, #160]
  41b950:	add	x9, x9, x10
  41b954:	ldrb	w11, [x9]
  41b958:	orr	w11, w11, #0x4
  41b95c:	strb	w11, [x9]
  41b960:	ldr	x8, [sp, #64]
  41b964:	ldr	x9, [x8, #152]
  41b968:	ldr	x9, [x9, #296]
  41b96c:	ldr	x10, [x8, #160]
  41b970:	mov	x11, #0x50                  	// #80
  41b974:	mul	x10, x11, x10
  41b978:	add	x9, x9, x10
  41b97c:	ldrb	w0, [x9, #32]
  41b980:	ldr	x2, [x8, #160]
  41b984:	ldr	x3, [x8, #152]
  41b988:	mov	w1, #0x2                   	// #2
  41b98c:	bl	41c43c <wcrtomb@plt+0x19b2c>
  41b990:	tbnz	w0, #0, 41b998 <wcrtomb@plt+0x19088>
  41b994:	b	41b9b8 <wcrtomb@plt+0x190a8>
  41b998:	ldr	x8, [sp, #64]
  41b99c:	ldr	x9, [x8, #152]
  41b9a0:	ldr	x9, [x9, #384]
  41b9a4:	ldr	x10, [x8, #160]
  41b9a8:	add	x9, x9, x10
  41b9ac:	ldrb	w11, [x9]
  41b9b0:	orr	w11, w11, #0x2
  41b9b4:	strb	w11, [x9]
  41b9b8:	ldr	x8, [sp, #64]
  41b9bc:	ldr	x9, [x8, #152]
  41b9c0:	ldr	x9, [x9, #296]
  41b9c4:	ldr	x10, [x8, #160]
  41b9c8:	mov	x11, #0x50                  	// #80
  41b9cc:	mul	x10, x11, x10
  41b9d0:	add	x9, x9, x10
  41b9d4:	ldrb	w0, [x9, #32]
  41b9d8:	ldr	x2, [x8, #160]
  41b9dc:	ldr	x3, [x8, #152]
  41b9e0:	mov	w1, #0x1                   	// #1
  41b9e4:	bl	41c43c <wcrtomb@plt+0x19b2c>
  41b9e8:	tbnz	w0, #0, 41b9f0 <wcrtomb@plt+0x190e0>
  41b9ec:	b	41ba10 <wcrtomb@plt+0x19100>
  41b9f0:	ldr	x8, [sp, #64]
  41b9f4:	ldr	x9, [x8, #152]
  41b9f8:	ldr	x9, [x9, #384]
  41b9fc:	ldr	x10, [x8, #160]
  41ba00:	add	x9, x9, x10
  41ba04:	ldrb	w11, [x9]
  41ba08:	orr	w11, w11, #0x1
  41ba0c:	strb	w11, [x9]
  41ba10:	ldr	x8, [sp, #64]
  41ba14:	ldr	x9, [x8, #152]
  41ba18:	ldr	x1, [x9, #176]
  41ba1c:	sub	x0, x29, #0x30
  41ba20:	bl	41892c <wcrtomb@plt+0x1601c>
  41ba24:	ldr	x8, [sp, #64]
  41ba28:	str	xzr, [x8, #8]
  41ba2c:	ldr	x8, [sp, #64]
  41ba30:	ldr	x9, [x8, #8]
  41ba34:	ldr	x10, [x8, #152]
  41ba38:	ldr	x10, [x10, #296]
  41ba3c:	ldr	x11, [x8, #160]
  41ba40:	mov	x12, #0x50                  	// #80
  41ba44:	mul	x11, x12, x11
  41ba48:	add	x10, x10, x11
  41ba4c:	ldr	x10, [x10, #16]
  41ba50:	cmp	x9, x10
  41ba54:	b.ge	41bb40 <wcrtomb@plt+0x19230>  // b.tcont
  41ba58:	ldr	x8, [sp, #64]
  41ba5c:	str	xzr, [x8]
  41ba60:	ldr	x8, [sp, #64]
  41ba64:	ldr	x9, [x8]
  41ba68:	ldr	x10, [x8, #152]
  41ba6c:	ldr	x10, [x10, #320]
  41ba70:	ldr	x11, [x8, #152]
  41ba74:	ldr	x11, [x11, #296]
  41ba78:	ldr	x12, [x8, #160]
  41ba7c:	mov	x13, #0x50                  	// #80
  41ba80:	mul	x12, x13, x12
  41ba84:	add	x11, x11, x12
  41ba88:	ldr	x11, [x11, #8]
  41ba8c:	ldr	x12, [x8, #8]
  41ba90:	mov	x13, #0x10                  	// #16
  41ba94:	mul	x12, x13, x12
  41ba98:	ldr	x11, [x11, x12]
  41ba9c:	mov	x12, #0x18                  	// #24
  41baa0:	mul	x11, x12, x11
  41baa4:	add	x10, x10, x11
  41baa8:	ldr	x10, [x10, #8]
  41baac:	cmp	x9, x10
  41bab0:	b.ge	41bb2c <wcrtomb@plt+0x1921c>  // b.tcont
  41bab4:	ldr	x8, [sp, #64]
  41bab8:	ldr	x9, [x8, #152]
  41babc:	ldr	x9, [x9, #320]
  41bac0:	ldr	x10, [x8, #152]
  41bac4:	ldr	x10, [x10, #296]
  41bac8:	ldr	x11, [x8, #160]
  41bacc:	mov	x12, #0x50                  	// #80
  41bad0:	mul	x11, x12, x11
  41bad4:	add	x10, x10, x11
  41bad8:	ldr	x10, [x10, #8]
  41badc:	ldr	x11, [x8, #8]
  41bae0:	mov	x12, #0x10                  	// #16
  41bae4:	mul	x11, x12, x11
  41bae8:	ldr	x10, [x10, x11]
  41baec:	mov	x11, #0x18                  	// #24
  41baf0:	mul	x10, x11, x10
  41baf4:	add	x9, x9, x10
  41baf8:	ldr	x9, [x9]
  41bafc:	ldr	x10, [x8]
  41bb00:	mul	x10, x12, x10
  41bb04:	add	x9, x9, x10
  41bb08:	ldr	x0, [x9]
  41bb0c:	ldr	x1, [x9, #8]
  41bb10:	sub	x2, x29, #0x30
  41bb14:	bl	41a2e0 <wcrtomb@plt+0x179d0>
  41bb18:	ldr	x8, [sp, #64]
  41bb1c:	ldr	x9, [x8]
  41bb20:	add	x9, x9, #0x1
  41bb24:	str	x9, [x8]
  41bb28:	b	41ba60 <wcrtomb@plt+0x19150>
  41bb2c:	ldr	x8, [sp, #64]
  41bb30:	ldr	x9, [x8, #8]
  41bb34:	add	x9, x9, #0x1
  41bb38:	str	x9, [x8, #8]
  41bb3c:	b	41ba2c <wcrtomb@plt+0x1911c>
  41bb40:	ldr	x8, [sp, #64]
  41bb44:	ldr	x9, [x8, #152]
  41bb48:	ldr	x1, [x9, #176]
  41bb4c:	sub	x0, x29, #0x48
  41bb50:	bl	41892c <wcrtomb@plt+0x1601c>
  41bb54:	add	x0, sp, #0xb8
  41bb58:	bl	417134 <wcrtomb@plt+0x14824>
  41bb5c:	str	xzr, [sp, #176]
  41bb60:	ldr	x8, [sp, #176]
  41bb64:	ldr	x9, [sp, #64]
  41bb68:	ldr	x10, [x9, #128]
  41bb6c:	cmp	x8, x10
  41bb70:	b.ge	41c05c <wcrtomb@plt+0x1974c>  // b.tcont
  41bb74:	ldr	x8, [sp, #64]
  41bb78:	ldr	x9, [x8, #120]
  41bb7c:	ldr	x10, [sp, #176]
  41bb80:	ldr	q0, [x9, x10, lsl #4]
  41bb84:	str	q0, [sp, #128]
  41bb88:	mov	w11, #0x0                   	// #0
  41bb8c:	strb	w11, [sp, #127]
  41bb90:	ldr	x9, [x8, #152]
  41bb94:	ldr	x9, [x9, #144]
  41bb98:	ldr	x10, [sp, #128]
  41bb9c:	ldr	x9, [x9, x10, lsl #3]
  41bba0:	cmp	x9, #0x0
  41bba4:	cset	w11, lt  // lt = tstop
  41bba8:	tbnz	w11, #0, 41bc28 <wcrtomb@plt+0x19318>
  41bbac:	ldr	x8, [sp, #64]
  41bbb0:	ldr	x9, [x8, #152]
  41bbb4:	ldr	x9, [x9, #144]
  41bbb8:	ldr	x10, [sp, #128]
  41bbbc:	ldr	x9, [x9, x10, lsl #3]
  41bbc0:	cmp	x9, #0x100
  41bbc4:	b.ge	41bc28 <wcrtomb@plt+0x19318>  // b.tcont
  41bbc8:	add	x8, sp, #0x90
  41bbcc:	mov	x0, x8
  41bbd0:	str	x8, [sp, #40]
  41bbd4:	bl	4172d0 <wcrtomb@plt+0x149c0>
  41bbd8:	ldr	x8, [sp, #64]
  41bbdc:	ldr	x9, [x8, #152]
  41bbe0:	ldr	x9, [x9, #144]
  41bbe4:	ldr	x10, [sp, #128]
  41bbe8:	ldr	x9, [x9, x10, lsl #3]
  41bbec:	mov	w0, w9
  41bbf0:	ldr	x1, [sp, #40]
  41bbf4:	bl	413e44 <wcrtomb@plt+0x11534>
  41bbf8:	ldr	x8, [sp, #64]
  41bbfc:	ldr	x10, [x8, #152]
  41bc00:	ldr	x10, [x10, #144]
  41bc04:	ldr	x11, [sp, #128]
  41bc08:	ldr	x10, [x10, x11, lsl #3]
  41bc0c:	ldurb	w9, [x29, #-17]
  41bc10:	mov	w11, w9
  41bc14:	cmp	x10, x11
  41bc18:	b.ne	41bc24 <wcrtomb@plt+0x19314>  // b.any
  41bc1c:	mov	w8, #0x1                   	// #1
  41bc20:	strb	w8, [sp, #127]
  41bc24:	b	41bdbc <wcrtomb@plt+0x194ac>
  41bc28:	ldr	x8, [sp, #64]
  41bc2c:	ldr	x9, [x8, #152]
  41bc30:	ldr	x9, [x9, #144]
  41bc34:	ldr	x10, [sp, #128]
  41bc38:	ldr	x9, [x9, x10, lsl #3]
  41bc3c:	cmp	x9, #0x114
  41bc40:	b.lt	41bca0 <wcrtomb@plt+0x19390>  // b.tstop
  41bc44:	ldr	x8, [sp, #64]
  41bc48:	ldr	x9, [x8, #152]
  41bc4c:	ldr	x9, [x9]
  41bc50:	ldr	x10, [x8, #152]
  41bc54:	ldr	x10, [x10, #144]
  41bc58:	ldr	x11, [sp, #128]
  41bc5c:	ldr	x10, [x10, x11, lsl #3]
  41bc60:	subs	x10, x10, #0x114
  41bc64:	mov	x11, #0x20                  	// #32
  41bc68:	mul	x10, x11, x10
  41bc6c:	add	x9, x9, x10
  41bc70:	ldr	q0, [x9]
  41bc74:	add	x1, sp, #0x90
  41bc78:	str	q0, [sp, #144]
  41bc7c:	ldr	q0, [x9, #16]
  41bc80:	str	q0, [sp, #160]
  41bc84:	ldurb	w0, [x29, #-17]
  41bc88:	bl	413a30 <wcrtomb@plt+0x11120>
  41bc8c:	tbnz	w0, #0, 41bc94 <wcrtomb@plt+0x19384>
  41bc90:	b	41bc9c <wcrtomb@plt+0x1938c>
  41bc94:	mov	w8, #0x1                   	// #1
  41bc98:	strb	w8, [sp, #127]
  41bc9c:	b	41bdbc <wcrtomb@plt+0x194ac>
  41bca0:	ldr	x8, [sp, #64]
  41bca4:	ldr	x9, [x8, #152]
  41bca8:	ldr	x9, [x9, #144]
  41bcac:	ldr	x10, [sp, #128]
  41bcb0:	ldr	x9, [x9, x10, lsl #3]
  41bcb4:	cmp	x9, #0x10a
  41bcb8:	b.ne	41bdb8 <wcrtomb@plt+0x194a8>  // b.any
  41bcbc:	ldr	x8, [sp, #64]
  41bcc0:	ldr	x9, [x8, #152]
  41bcc4:	ldr	x9, [x9]
  41bcc8:	ldr	x10, [x8, #152]
  41bccc:	ldr	x10, [x10, #24]
  41bcd0:	mov	x11, #0x20                  	// #32
  41bcd4:	mul	x10, x11, x10
  41bcd8:	add	x9, x9, x10
  41bcdc:	ldr	q0, [x9]
  41bce0:	add	x1, sp, #0x90
  41bce4:	str	q0, [sp, #144]
  41bce8:	ldr	q0, [x9, #16]
  41bcec:	str	q0, [sp, #160]
  41bcf0:	ldurb	w0, [x29, #-17]
  41bcf4:	bl	413a30 <wcrtomb@plt+0x11120>
  41bcf8:	tbnz	w0, #0, 41bd00 <wcrtomb@plt+0x193f0>
  41bcfc:	b	41bd08 <wcrtomb@plt+0x193f8>
  41bd00:	mov	w8, #0x1                   	// #1
  41bd04:	strb	w8, [sp, #127]
  41bd08:	ldr	w0, [sp, #136]
  41bd0c:	ldr	x8, [sp, #64]
  41bd10:	ldr	x9, [x8, #152]
  41bd14:	ldr	x9, [x9, #296]
  41bd18:	ldr	x10, [x8, #160]
  41bd1c:	mov	x11, #0x50                  	// #80
  41bd20:	mul	x10, x11, x10
  41bd24:	add	x9, x9, x10
  41bd28:	ldrb	w1, [x9, #32]
  41bd2c:	mov	w2, #0x1                   	// #1
  41bd30:	bl	41a4d8 <wcrtomb@plt+0x17bc8>
  41bd34:	tbnz	w0, #0, 41bd3c <wcrtomb@plt+0x1942c>
  41bd38:	b	41bdb4 <wcrtomb@plt+0x194a4>
  41bd3c:	ldr	x8, [sp, #64]
  41bd40:	ldr	x9, [x8, #152]
  41bd44:	ldr	x9, [x9, #296]
  41bd48:	ldr	x10, [x8, #160]
  41bd4c:	mov	x11, #0x50                  	// #80
  41bd50:	mul	x10, x11, x10
  41bd54:	add	x9, x9, x10
  41bd58:	ldr	x9, [x9, #56]
  41bd5c:	cbnz	x9, 41bd88 <wcrtomb@plt+0x19478>
  41bd60:	ldr	x8, [sp, #64]
  41bd64:	ldr	x9, [x8, #152]
  41bd68:	ldr	x9, [x9, #296]
  41bd6c:	ldr	x10, [x8, #160]
  41bd70:	mov	x11, #0x50                  	// #80
  41bd74:	mul	x10, x11, x10
  41bd78:	add	x9, x9, x10
  41bd7c:	add	x0, x9, #0x30
  41bd80:	mov	x1, #0x1                   	// #1
  41bd84:	bl	41892c <wcrtomb@plt+0x1601c>
  41bd88:	ldr	x8, [sp, #64]
  41bd8c:	ldr	x9, [x8, #152]
  41bd90:	ldr	x9, [x9, #296]
  41bd94:	ldr	x10, [x8, #160]
  41bd98:	mov	x11, #0x50                  	// #80
  41bd9c:	mul	x10, x11, x10
  41bda0:	add	x9, x9, x10
  41bda4:	add	x2, x9, #0x30
  41bda8:	ldr	x0, [sp, #128]
  41bdac:	ldr	x1, [sp, #136]
  41bdb0:	bl	41a2e0 <wcrtomb@plt+0x179d0>
  41bdb4:	b	41bdbc <wcrtomb@plt+0x194ac>
  41bdb8:	b	41c04c <wcrtomb@plt+0x1973c>
  41bdbc:	ldr	w8, [sp, #136]
  41bdc0:	cmp	w8, #0x1ff
  41bdc4:	b.eq	41bf94 <wcrtomb@plt+0x19684>  // b.none
  41bdc8:	ldr	w0, [sp, #136]
  41bdcc:	ldr	x8, [sp, #64]
  41bdd0:	ldr	x9, [x8, #152]
  41bdd4:	ldr	x9, [x9, #296]
  41bdd8:	ldr	x10, [x8, #160]
  41bddc:	mov	x11, #0x50                  	// #80
  41bde0:	mul	x10, x11, x10
  41bde4:	add	x9, x9, x10
  41bde8:	ldrb	w1, [x9, #32]
  41bdec:	mov	w2, #0x4                   	// #4
  41bdf0:	bl	41a4d8 <wcrtomb@plt+0x17bc8>
  41bdf4:	tbnz	w0, #0, 41be4c <wcrtomb@plt+0x1953c>
  41bdf8:	str	wzr, [sp, #120]
  41bdfc:	ldr	w8, [sp, #120]
  41be00:	cmp	w8, #0x4
  41be04:	b.ge	41be4c <wcrtomb@plt+0x1953c>  // b.tcont
  41be08:	ldr	x8, [sp, #64]
  41be0c:	ldr	x9, [x8, #152]
  41be10:	add	x9, x9, #0x3f0
  41be14:	ldrsw	x10, [sp, #120]
  41be18:	mov	x11, #0x8                   	// #8
  41be1c:	ldr	x9, [x9, x10, lsl #3]
  41be20:	ldrsw	x10, [sp, #120]
  41be24:	mul	x10, x11, x10
  41be28:	add	x11, sp, #0x90
  41be2c:	add	x10, x11, x10
  41be30:	ldr	x11, [x10]
  41be34:	bic	x9, x11, x9
  41be38:	str	x9, [x10]
  41be3c:	ldr	w8, [sp, #120]
  41be40:	add	w8, w8, #0x1
  41be44:	str	w8, [sp, #120]
  41be48:	b	41bdfc <wcrtomb@plt+0x194ec>
  41be4c:	ldr	w0, [sp, #136]
  41be50:	ldr	x8, [sp, #64]
  41be54:	ldr	x9, [x8, #152]
  41be58:	ldr	x9, [x9, #296]
  41be5c:	ldr	x10, [x8, #160]
  41be60:	mov	x11, #0x50                  	// #80
  41be64:	mul	x10, x11, x10
  41be68:	add	x9, x9, x10
  41be6c:	ldrb	w1, [x9, #32]
  41be70:	mov	w2, #0x2                   	// #2
  41be74:	bl	41a4d8 <wcrtomb@plt+0x17bc8>
  41be78:	tbnz	w0, #0, 41bed0 <wcrtomb@plt+0x195c0>
  41be7c:	str	wzr, [sp, #116]
  41be80:	ldr	w8, [sp, #116]
  41be84:	cmp	w8, #0x4
  41be88:	b.ge	41bed0 <wcrtomb@plt+0x195c0>  // b.tcont
  41be8c:	ldr	x8, [sp, #64]
  41be90:	ldr	x9, [x8, #152]
  41be94:	add	x9, x9, #0x3d0
  41be98:	ldrsw	x10, [sp, #116]
  41be9c:	mov	x11, #0x8                   	// #8
  41bea0:	ldr	x9, [x9, x10, lsl #3]
  41bea4:	ldrsw	x10, [sp, #116]
  41bea8:	mul	x10, x11, x10
  41beac:	add	x11, sp, #0x90
  41beb0:	add	x10, x11, x10
  41beb4:	ldr	x11, [x10]
  41beb8:	bic	x9, x11, x9
  41bebc:	str	x9, [x10]
  41bec0:	ldr	w8, [sp, #116]
  41bec4:	add	w8, w8, #0x1
  41bec8:	str	w8, [sp, #116]
  41becc:	b	41be80 <wcrtomb@plt+0x19570>
  41bed0:	ldr	w0, [sp, #136]
  41bed4:	ldr	x8, [sp, #64]
  41bed8:	ldr	x9, [x8, #152]
  41bedc:	ldr	x9, [x9, #296]
  41bee0:	ldr	x10, [x8, #160]
  41bee4:	mov	x11, #0x50                  	// #80
  41bee8:	mul	x10, x11, x10
  41beec:	add	x9, x9, x10
  41bef0:	ldrb	w1, [x9, #32]
  41bef4:	mov	w2, #0x1                   	// #1
  41bef8:	bl	41a4d8 <wcrtomb@plt+0x17bc8>
  41befc:	tbnz	w0, #0, 41bf68 <wcrtomb@plt+0x19658>
  41bf00:	str	wzr, [sp, #112]
  41bf04:	ldr	w8, [sp, #112]
  41bf08:	cmp	w8, #0x4
  41bf0c:	b.ge	41bf68 <wcrtomb@plt+0x19658>  // b.tcont
  41bf10:	ldr	x8, [sp, #64]
  41bf14:	ldr	x9, [x8, #152]
  41bf18:	add	x9, x9, #0x3d0
  41bf1c:	ldrsw	x10, [sp, #112]
  41bf20:	mov	x11, #0x8                   	// #8
  41bf24:	ldr	x9, [x9, x10, lsl #3]
  41bf28:	ldr	x10, [x8, #152]
  41bf2c:	add	x10, x10, #0x3f0
  41bf30:	ldrsw	x12, [sp, #112]
  41bf34:	ldr	x10, [x10, x12, lsl #3]
  41bf38:	orr	x9, x9, x10
  41bf3c:	ldrsw	x10, [sp, #112]
  41bf40:	mul	x10, x11, x10
  41bf44:	add	x11, sp, #0x90
  41bf48:	add	x10, x11, x10
  41bf4c:	ldr	x11, [x10]
  41bf50:	and	x9, x11, x9
  41bf54:	str	x9, [x10]
  41bf58:	ldr	w8, [sp, #112]
  41bf5c:	add	w8, w8, #0x1
  41bf60:	str	w8, [sp, #112]
  41bf64:	b	41bf04 <wcrtomb@plt+0x195f4>
  41bf68:	add	x0, sp, #0x90
  41bf6c:	bl	417fac <wcrtomb@plt+0x1569c>
  41bf70:	tbnz	w0, #0, 41bf78 <wcrtomb@plt+0x19668>
  41bf74:	b	41bf7c <wcrtomb@plt+0x1966c>
  41bf78:	b	41c04c <wcrtomb@plt+0x1973c>
  41bf7c:	ldurb	w0, [x29, #-17]
  41bf80:	add	x1, sp, #0x90
  41bf84:	bl	413a30 <wcrtomb@plt+0x11120>
  41bf88:	tbnz	w0, #0, 41bf94 <wcrtomb@plt+0x19684>
  41bf8c:	mov	w8, #0x0                   	// #0
  41bf90:	strb	w8, [sp, #127]
  41bf94:	ldrb	w8, [sp, #127]
  41bf98:	tbnz	w8, #0, 41bfa0 <wcrtomb@plt+0x19690>
  41bf9c:	b	41c000 <wcrtomb@plt+0x196f0>
  41bfa0:	str	wzr, [sp, #108]
  41bfa4:	ldr	w8, [sp, #108]
  41bfa8:	cmp	w8, #0x4
  41bfac:	b.ge	41bfec <wcrtomb@plt+0x196dc>  // b.tcont
  41bfb0:	ldrsw	x8, [sp, #108]
  41bfb4:	mov	x9, #0x8                   	// #8
  41bfb8:	add	x10, sp, #0x90
  41bfbc:	ldr	x8, [x10, x8, lsl #3]
  41bfc0:	ldrsw	x10, [sp, #108]
  41bfc4:	mul	x9, x9, x10
  41bfc8:	add	x10, sp, #0xb8
  41bfcc:	add	x9, x10, x9
  41bfd0:	ldr	x10, [x9]
  41bfd4:	and	x8, x10, x8
  41bfd8:	str	x8, [x9]
  41bfdc:	ldr	w8, [sp, #108]
  41bfe0:	add	w8, w8, #0x1
  41bfe4:	str	w8, [sp, #108]
  41bfe8:	b	41bfa4 <wcrtomb@plt+0x19694>
  41bfec:	ldr	x0, [sp, #128]
  41bff0:	ldr	x1, [sp, #136]
  41bff4:	sub	x2, x29, #0x48
  41bff8:	bl	418fb8 <wcrtomb@plt+0x166a8>
  41bffc:	b	41c04c <wcrtomb@plt+0x1973c>
  41c000:	str	wzr, [sp, #104]
  41c004:	ldr	w8, [sp, #104]
  41c008:	cmp	w8, #0x4
  41c00c:	b.ge	41c04c <wcrtomb@plt+0x1973c>  // b.tcont
  41c010:	ldrsw	x8, [sp, #104]
  41c014:	mov	x9, #0x8                   	// #8
  41c018:	add	x10, sp, #0x90
  41c01c:	ldr	x8, [x10, x8, lsl #3]
  41c020:	ldrsw	x10, [sp, #104]
  41c024:	mul	x9, x9, x10
  41c028:	add	x10, sp, #0xb8
  41c02c:	add	x9, x10, x9
  41c030:	ldr	x10, [x9]
  41c034:	bic	x8, x10, x8
  41c038:	str	x8, [x9]
  41c03c:	ldr	w8, [sp, #104]
  41c040:	add	w8, w8, #0x1
  41c044:	str	w8, [sp, #104]
  41c048:	b	41c004 <wcrtomb@plt+0x196f4>
  41c04c:	ldr	x8, [sp, #176]
  41c050:	add	x8, x8, #0x1
  41c054:	str	x8, [sp, #176]
  41c058:	b	41bb60 <wcrtomb@plt+0x19250>
  41c05c:	ldr	x8, [sp, #64]
  41c060:	ldr	x9, [x8, #152]
  41c064:	ldr	x1, [x9, #176]
  41c068:	sub	x0, x29, #0x60
  41c06c:	bl	41892c <wcrtomb@plt+0x1601c>
  41c070:	ldr	x8, [sp, #64]
  41c074:	ldr	x9, [x8, #104]
  41c078:	cmp	x9, #0x0
  41c07c:	cset	w10, le
  41c080:	tbnz	w10, #0, 41c28c <wcrtomb@plt+0x1997c>
  41c084:	ldr	x8, [sp, #64]
  41c088:	ldr	x9, [x8, #152]
  41c08c:	ldrb	w10, [x9, #328]
  41c090:	tbnz	w10, #0, 41c098 <wcrtomb@plt+0x19788>
  41c094:	b	41c194 <wcrtomb@plt+0x19884>
  41c098:	ldr	x8, [sp, #64]
  41c09c:	ldr	x9, [x8, #152]
  41c0a0:	ldrb	w10, [x9, #1048]
  41c0a4:	mov	w11, #0x1                   	// #1
  41c0a8:	eor	w10, w10, #0x1
  41c0ac:	and	w10, w10, w11
  41c0b0:	strb	w10, [sp, #103]
  41c0b4:	ldrb	w10, [sp, #103]
  41c0b8:	tbnz	w10, #0, 41c150 <wcrtomb@plt+0x19840>
  41c0bc:	mov	w8, #0x1                   	// #1
  41c0c0:	strb	w8, [sp, #103]
  41c0c4:	str	xzr, [sp, #88]
  41c0c8:	ldrb	w8, [sp, #103]
  41c0cc:	mov	w9, #0x0                   	// #0
  41c0d0:	str	w9, [sp, #36]
  41c0d4:	tbnz	w8, #0, 41c0dc <wcrtomb@plt+0x197cc>
  41c0d8:	b	41c0f4 <wcrtomb@plt+0x197e4>
  41c0dc:	ldr	x8, [sp, #88]
  41c0e0:	ldr	x9, [sp, #64]
  41c0e4:	ldr	x10, [x9, #104]
  41c0e8:	cmp	x8, x10
  41c0ec:	cset	w11, lt  // lt = tstop
  41c0f0:	str	w11, [sp, #36]
  41c0f4:	ldr	w8, [sp, #36]
  41c0f8:	tbnz	w8, #0, 41c100 <wcrtomb@plt+0x197f0>
  41c0fc:	b	41c150 <wcrtomb@plt+0x19840>
  41c100:	ldr	x8, [sp, #64]
  41c104:	ldr	x9, [x8, #152]
  41c108:	ldr	x9, [x9, #280]
  41c10c:	ldr	x10, [x8, #96]
  41c110:	ldr	x11, [sp, #88]
  41c114:	mov	x12, #0x10                  	// #16
  41c118:	mul	x11, x12, x11
  41c11c:	ldr	x10, [x10, x11]
  41c120:	ldrb	w13, [x9, x10]
  41c124:	ldrb	w14, [sp, #103]
  41c128:	mov	w15, #0x1                   	// #1
  41c12c:	and	w14, w14, #0x1
  41c130:	tst	w14, w13
  41c134:	cset	w13, ne  // ne = any
  41c138:	and	w13, w13, w15
  41c13c:	strb	w13, [sp, #103]
  41c140:	ldr	x8, [sp, #88]
  41c144:	add	x8, x8, #0x1
  41c148:	str	x8, [sp, #88]
  41c14c:	b	41c0c8 <wcrtomb@plt+0x197b8>
  41c150:	ldrb	w8, [sp, #103]
  41c154:	tbnz	w8, #0, 41c15c <wcrtomb@plt+0x1984c>
  41c158:	b	41c194 <wcrtomb@plt+0x19884>
  41c15c:	ldr	x8, [sp, #64]
  41c160:	ldr	x9, [x8, #152]
  41c164:	ldr	x9, [x9, #296]
  41c168:	add	x0, x9, #0x8
  41c16c:	sub	x9, x29, #0x48
  41c170:	mov	x1, x9
  41c174:	sub	x10, x29, #0x60
  41c178:	mov	x2, x10
  41c17c:	str	x9, [sp, #24]
  41c180:	str	x10, [sp, #16]
  41c184:	bl	418978 <wcrtomb@plt+0x16068>
  41c188:	ldr	x0, [sp, #16]
  41c18c:	ldr	x1, [sp, #24]
  41c190:	bl	4189b4 <wcrtomb@plt+0x160a4>
  41c194:	ldr	x8, [sp, #64]
  41c198:	ldr	x0, [x8, #152]
  41c19c:	add	x1, sp, #0xb8
  41c1a0:	bl	41c67c <wcrtomb@plt+0x19d6c>
  41c1a4:	str	w0, [sp, #84]
  41c1a8:	ldr	x8, [sp, #64]
  41c1ac:	ldr	x0, [x8, #152]
  41c1b0:	sub	x1, x29, #0x48
  41c1b4:	bl	419088 <wcrtomb@plt+0x16778>
  41c1b8:	str	w0, [sp, #80]
  41c1bc:	ldr	w9, [sp, #84]
  41c1c0:	ldr	w10, [sp, #80]
  41c1c4:	bic	w9, w9, w10
  41c1c8:	cbz	w9, 41c1f0 <wcrtomb@plt+0x198e0>
  41c1cc:	ldr	x8, [sp, #64]
  41c1d0:	ldr	x0, [x8, #152]
  41c1d4:	ldr	w9, [sp, #80]
  41c1d8:	eor	w2, w9, #0x7
  41c1dc:	sub	x1, x29, #0x48
  41c1e0:	bl	4190fc <wcrtomb@plt+0x167ec>
  41c1e4:	ldr	x8, [sp, #64]
  41c1e8:	str	x0, [x8, #64]
  41c1ec:	b	41c1fc <wcrtomb@plt+0x198ec>
  41c1f0:	mov	x8, #0xffffffffffffffff    	// #-1
  41c1f4:	ldr	x9, [sp, #64]
  41c1f8:	str	x8, [x9, #64]
  41c1fc:	ldr	w8, [sp, #80]
  41c200:	ldr	w9, [sp, #84]
  41c204:	and	w8, w8, w9
  41c208:	and	w8, w8, #0x4
  41c20c:	cbz	w8, 41c230 <wcrtomb@plt+0x19920>
  41c210:	ldr	x8, [sp, #64]
  41c214:	ldr	x0, [x8, #152]
  41c218:	sub	x1, x29, #0x48
  41c21c:	mov	w2, #0x4                   	// #4
  41c220:	bl	4190fc <wcrtomb@plt+0x167ec>
  41c224:	ldr	x8, [sp, #64]
  41c228:	str	x0, [x8, #56]
  41c22c:	b	41c23c <wcrtomb@plt+0x1992c>
  41c230:	ldr	x8, [sp, #64]
  41c234:	ldr	x9, [x8, #64]
  41c238:	str	x9, [x8, #56]
  41c23c:	ldr	w8, [sp, #80]
  41c240:	ldr	w9, [sp, #84]
  41c244:	and	w8, w8, w9
  41c248:	and	w8, w8, #0x2
  41c24c:	cbz	w8, 41c270 <wcrtomb@plt+0x19960>
  41c250:	ldr	x8, [sp, #64]
  41c254:	ldr	x0, [x8, #152]
  41c258:	sub	x1, x29, #0x48
  41c25c:	mov	w2, #0x2                   	// #2
  41c260:	bl	4190fc <wcrtomb@plt+0x167ec>
  41c264:	ldr	x8, [sp, #64]
  41c268:	str	x0, [x8, #48]
  41c26c:	b	41c27c <wcrtomb@plt+0x1996c>
  41c270:	ldr	x8, [sp, #64]
  41c274:	ldr	x9, [x8, #64]
  41c278:	str	x9, [x8, #48]
  41c27c:	ldr	x8, [sp, #64]
  41c280:	ldr	x0, [x8, #152]
  41c284:	bl	41afac <wcrtomb@plt+0x1869c>
  41c288:	b	41c2e4 <wcrtomb@plt+0x199d4>
  41c28c:	ldr	x8, [sp, #64]
  41c290:	ldr	x9, [x8, #152]
  41c294:	ldrb	w10, [x9, #328]
  41c298:	tbnz	w10, #0, 41c2a0 <wcrtomb@plt+0x19990>
  41c29c:	b	41c2d0 <wcrtomb@plt+0x199c0>
  41c2a0:	ldr	x8, [sp, #64]
  41c2a4:	str	xzr, [x8, #56]
  41c2a8:	ldr	x9, [x8, #152]
  41c2ac:	ldr	w10, [x9, #364]
  41c2b0:	subs	w10, w10, #0x1
  41c2b4:	mov	w0, w10
  41c2b8:	sxtw	x9, w0
  41c2bc:	str	x9, [x8, #48]
  41c2c0:	ldr	x9, [x8, #152]
  41c2c4:	ldr	x9, [x9, #400]
  41c2c8:	str	x9, [x8, #64]
  41c2cc:	b	41c2e4 <wcrtomb@plt+0x199d4>
  41c2d0:	mov	x8, #0xffffffffffffffff    	// #-1
  41c2d4:	ldr	x9, [sp, #64]
  41c2d8:	str	x8, [x9, #56]
  41c2dc:	str	x8, [x9, #48]
  41c2e0:	str	x8, [x9, #64]
  41c2e4:	str	wzr, [sp, #76]
  41c2e8:	ldr	w8, [sp, #76]
  41c2ec:	cmp	w8, #0x100
  41c2f0:	b.ge	41c398 <wcrtomb@plt+0x19a88>  // b.tcont
  41c2f4:	ldr	w0, [sp, #76]
  41c2f8:	add	x1, sp, #0xb8
  41c2fc:	bl	413a30 <wcrtomb@plt+0x11120>
  41c300:	tbnz	w0, #0, 41c308 <wcrtomb@plt+0x199f8>
  41c304:	b	41c388 <wcrtomb@plt+0x19a78>
  41c308:	ldr	x8, [sp, #64]
  41c30c:	ldr	x9, [x8, #152]
  41c310:	add	x9, x9, #0x1cc
  41c314:	ldrsw	x10, [sp, #76]
  41c318:	ldrb	w11, [x9, x10]
  41c31c:	cmp	w11, #0x2
  41c320:	str	w11, [sp, #12]
  41c324:	b.eq	41c35c <wcrtomb@plt+0x19a4c>  // b.none
  41c328:	b	41c32c <wcrtomb@plt+0x19a1c>
  41c32c:	ldr	w8, [sp, #12]
  41c330:	cmp	w8, #0x4
  41c334:	cset	w9, eq  // eq = none
  41c338:	eor	w9, w9, #0x1
  41c33c:	tbnz	w9, #0, 41c374 <wcrtomb@plt+0x19a64>
  41c340:	b	41c344 <wcrtomb@plt+0x19a34>
  41c344:	ldr	x8, [sp, #64]
  41c348:	ldr	x9, [x8, #56]
  41c34c:	ldr	x10, [x8, #32]
  41c350:	ldrsw	x11, [sp, #76]
  41c354:	str	x9, [x10, x11, lsl #3]
  41c358:	b	41c388 <wcrtomb@plt+0x19a78>
  41c35c:	ldr	x8, [sp, #64]
  41c360:	ldr	x9, [x8, #48]
  41c364:	ldr	x10, [x8, #32]
  41c368:	ldrsw	x11, [sp, #76]
  41c36c:	str	x9, [x10, x11, lsl #3]
  41c370:	b	41c388 <wcrtomb@plt+0x19a78>
  41c374:	ldr	x8, [sp, #64]
  41c378:	ldr	x9, [x8, #64]
  41c37c:	ldr	x10, [x8, #32]
  41c380:	ldrsw	x11, [sp, #76]
  41c384:	str	x9, [x10, x11, lsl #3]
  41c388:	ldr	w8, [sp, #76]
  41c38c:	add	w8, w8, #0x1
  41c390:	str	w8, [sp, #76]
  41c394:	b	41c2e8 <wcrtomb@plt+0x199d8>
  41c398:	ldr	x8, [sp, #64]
  41c39c:	ldr	x0, [x8, #96]
  41c3a0:	bl	4026c0 <free@plt>
  41c3a4:	ldr	x8, [sp, #64]
  41c3a8:	ldr	x0, [x8, #120]
  41c3ac:	bl	4026c0 <free@plt>
  41c3b0:	ldr	x8, [sp, #64]
  41c3b4:	ldr	x0, [x8, #72]
  41c3b8:	bl	4026c0 <free@plt>
  41c3bc:	ldr	x8, [sp, #64]
  41c3c0:	ldr	x9, [x8, #152]
  41c3c4:	ldrb	w0, [x9, #459]
  41c3c8:	add	x1, sp, #0xb8
  41c3cc:	bl	413a30 <wcrtomb@plt+0x11120>
  41c3d0:	tbnz	w0, #0, 41c3d8 <wcrtomb@plt+0x19ac8>
  41c3d4:	b	41c418 <wcrtomb@plt+0x19b08>
  41c3d8:	ldr	x8, [sp, #64]
  41c3dc:	ldr	x9, [x8, #32]
  41c3e0:	ldr	x10, [x8, #152]
  41c3e4:	ldrb	w11, [x10, #459]
  41c3e8:	mov	w10, w11
  41c3ec:	ldr	x9, [x9, x10, lsl #3]
  41c3f0:	ldr	x10, [x8, #152]
  41c3f4:	ldr	x10, [x10, #392]
  41c3f8:	ldr	x12, [x8, #160]
  41c3fc:	str	x9, [x10, x12, lsl #3]
  41c400:	ldr	x9, [x8, #32]
  41c404:	ldr	x10, [x8, #152]
  41c408:	ldrb	w11, [x10, #459]
  41c40c:	mov	w10, w11
  41c410:	mov	x12, #0xffffffffffffffff    	// #-1
  41c414:	str	x12, [x9, x10, lsl #3]
  41c418:	ldr	x8, [sp, #64]
  41c41c:	ldr	x9, [x8, #32]
  41c420:	ldurb	w10, [x29, #-17]
  41c424:	mov	w11, w10
  41c428:	ldr	x0, [x9, x11, lsl #3]
  41c42c:	ldr	x28, [sp, #400]
  41c430:	ldp	x29, x30, [sp, #384]
  41c434:	add	sp, sp, #0x1a0
  41c438:	ret
  41c43c:	sub	sp, sp, #0x30
  41c440:	stp	x29, x30, [sp, #32]
  41c444:	add	x29, sp, #0x20
  41c448:	stur	w0, [x29, #-4]
  41c44c:	stur	w1, [x29, #-8]
  41c450:	str	x2, [sp, #16]
  41c454:	str	x3, [sp, #8]
  41c458:	ldr	x8, [sp, #8]
  41c45c:	ldr	x8, [x8, #296]
  41c460:	ldr	x9, [sp, #16]
  41c464:	mov	x10, #0x50                  	// #80
  41c468:	mul	x9, x10, x9
  41c46c:	add	x8, x8, x9
  41c470:	ldrh	w0, [x8, #34]
  41c474:	ldur	w1, [x29, #-4]
  41c478:	ldur	w2, [x29, #-8]
  41c47c:	bl	41a4d8 <wcrtomb@plt+0x17bc8>
  41c480:	and	w0, w0, #0x1
  41c484:	ldp	x29, x30, [sp, #32]
  41c488:	add	sp, sp, #0x30
  41c48c:	ret
  41c490:	sub	sp, sp, #0x30
  41c494:	stp	x29, x30, [sp, #32]
  41c498:	add	x29, sp, #0x20
  41c49c:	stur	x0, [x29, #-8]
  41c4a0:	str	x1, [sp, #16]
  41c4a4:	str	x2, [sp, #8]
  41c4a8:	ldur	x8, [x29, #-8]
  41c4ac:	ldr	x8, [x8, #368]
  41c4b0:	ldr	x9, [sp, #16]
  41c4b4:	mov	x10, #0x8                   	// #8
  41c4b8:	mul	x9, x10, x9
  41c4bc:	add	x8, x8, x9
  41c4c0:	ldr	x8, [x8]
  41c4c4:	cbz	x8, 41c4ec <wcrtomb@plt+0x19bdc>
  41c4c8:	ldur	x8, [x29, #-8]
  41c4cc:	ldr	x8, [x8, #368]
  41c4d0:	ldr	x9, [sp, #16]
  41c4d4:	mov	x10, #0x8                   	// #8
  41c4d8:	mul	x9, x10, x9
  41c4dc:	add	x8, x8, x9
  41c4e0:	ldr	x8, [x8]
  41c4e4:	str	x8, [sp]
  41c4e8:	b	41c5d8 <wcrtomb@plt+0x19cc8>
  41c4ec:	ldur	x8, [x29, #-8]
  41c4f0:	ldr	x8, [x8, #376]
  41c4f4:	ldr	x9, [sp, #16]
  41c4f8:	mov	x10, #0x8                   	// #8
  41c4fc:	mul	x9, x10, x9
  41c500:	add	x8, x8, x9
  41c504:	ldr	x8, [x8]
  41c508:	cbz	x8, 41c530 <wcrtomb@plt+0x19c20>
  41c50c:	ldur	x8, [x29, #-8]
  41c510:	ldr	x8, [x8, #376]
  41c514:	ldr	x9, [sp, #16]
  41c518:	mov	x10, #0x8                   	// #8
  41c51c:	mul	x9, x10, x9
  41c520:	add	x8, x8, x9
  41c524:	ldr	x8, [x8]
  41c528:	str	x8, [sp]
  41c52c:	b	41c5d8 <wcrtomb@plt+0x19cc8>
  41c530:	ldr	x0, [sp, #16]
  41c534:	ldur	x1, [x29, #-8]
  41c538:	ldr	x8, [sp, #8]
  41c53c:	ldr	x8, [x8]
  41c540:	ldrb	w2, [x8]
  41c544:	bl	41b71c <wcrtomb@plt+0x18e0c>
  41c548:	ldur	x8, [x29, #-8]
  41c54c:	ldr	x8, [x8, #368]
  41c550:	ldr	x9, [sp, #16]
  41c554:	mov	x10, #0x8                   	// #8
  41c558:	mul	x9, x10, x9
  41c55c:	add	x8, x8, x9
  41c560:	ldr	x8, [x8]
  41c564:	cbz	x8, 41c58c <wcrtomb@plt+0x19c7c>
  41c568:	ldur	x8, [x29, #-8]
  41c56c:	ldr	x8, [x8, #368]
  41c570:	ldr	x9, [sp, #16]
  41c574:	mov	x10, #0x8                   	// #8
  41c578:	mul	x9, x10, x9
  41c57c:	add	x8, x8, x9
  41c580:	ldr	x8, [x8]
  41c584:	str	x8, [sp]
  41c588:	b	41c5d8 <wcrtomb@plt+0x19cc8>
  41c58c:	ldur	x8, [x29, #-8]
  41c590:	ldr	x8, [x8, #376]
  41c594:	ldr	x9, [sp, #16]
  41c598:	mov	x10, #0x8                   	// #8
  41c59c:	mul	x9, x10, x9
  41c5a0:	add	x8, x8, x9
  41c5a4:	ldr	x8, [x8]
  41c5a8:	str	x8, [sp]
  41c5ac:	ldr	x8, [sp]
  41c5b0:	cbz	x8, 41c5b8 <wcrtomb@plt+0x19ca8>
  41c5b4:	b	41c5d8 <wcrtomb@plt+0x19cc8>
  41c5b8:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41c5bc:	add	x0, x0, #0x8d4
  41c5c0:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41c5c4:	add	x1, x1, #0x7b6
  41c5c8:	mov	w2, #0xc93                 	// #3219
  41c5cc:	adrp	x3, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41c5d0:	add	x3, x3, #0x901
  41c5d4:	bl	402860 <__assert_fail@plt>
  41c5d8:	ldr	x8, [sp]
  41c5dc:	ldr	x9, [sp, #8]
  41c5e0:	ldr	x9, [x9]
  41c5e4:	ldrb	w10, [x9]
  41c5e8:	mov	w9, w10
  41c5ec:	ldr	x8, [x8, x9, lsl #3]
  41c5f0:	mov	x9, #0xfffffffffffffffe    	// #-2
  41c5f4:	cmp	x8, x9
  41c5f8:	b.ne	41c614 <wcrtomb@plt+0x19d04>  // b.any
  41c5fc:	ldr	x0, [sp, #16]
  41c600:	ldur	x1, [x29, #-8]
  41c604:	ldr	x8, [sp, #8]
  41c608:	ldr	x8, [x8]
  41c60c:	ldrb	w2, [x8]
  41c610:	bl	41b71c <wcrtomb@plt+0x18e0c>
  41c614:	ldr	x8, [sp]
  41c618:	ldr	x9, [sp, #8]
  41c61c:	ldr	x10, [x9]
  41c620:	add	x11, x10, #0x1
  41c624:	str	x11, [x9]
  41c628:	ldrb	w12, [x10]
  41c62c:	mov	w9, w12
  41c630:	ldr	x0, [x8, x9, lsl #3]
  41c634:	ldp	x29, x30, [sp, #32]
  41c638:	add	sp, sp, #0x30
  41c63c:	ret
  41c640:	sub	sp, sp, #0x10
  41c644:	str	x0, [sp, #8]
  41c648:	str	x1, [sp]
  41c64c:	ldr	x8, [sp]
  41c650:	ldr	x8, [x8, #296]
  41c654:	ldr	x9, [sp, #8]
  41c658:	mov	x10, #0x50                  	// #80
  41c65c:	mul	x9, x10, x9
  41c660:	add	x8, x8, x9
  41c664:	ldrh	w11, [x8, #34]
  41c668:	cmp	w11, #0x0
  41c66c:	cset	w11, ne  // ne = any
  41c670:	and	w0, w11, #0x1
  41c674:	add	sp, sp, #0x10
  41c678:	ret
  41c67c:	sub	sp, sp, #0x20
  41c680:	str	x0, [sp, #24]
  41c684:	str	x1, [sp, #16]
  41c688:	str	wzr, [sp, #12]
  41c68c:	str	wzr, [sp, #8]
  41c690:	ldr	w8, [sp, #8]
  41c694:	cmp	w8, #0x4
  41c698:	b.ge	41c750 <wcrtomb@plt+0x19e40>  // b.tcont
  41c69c:	ldr	x8, [sp, #16]
  41c6a0:	ldrsw	x9, [sp, #8]
  41c6a4:	ldr	x8, [x8, x9, lsl #3]
  41c6a8:	ldr	x9, [sp, #24]
  41c6ac:	add	x9, x9, #0x3f0
  41c6b0:	ldrsw	x10, [sp, #8]
  41c6b4:	ldr	x9, [x9, x10, lsl #3]
  41c6b8:	and	x8, x8, x9
  41c6bc:	cbz	x8, 41c6cc <wcrtomb@plt+0x19dbc>
  41c6c0:	ldr	w8, [sp, #12]
  41c6c4:	orr	w8, w8, #0x4
  41c6c8:	str	w8, [sp, #12]
  41c6cc:	ldr	x8, [sp, #16]
  41c6d0:	ldrsw	x9, [sp, #8]
  41c6d4:	ldr	x8, [x8, x9, lsl #3]
  41c6d8:	ldr	x9, [sp, #24]
  41c6dc:	add	x9, x9, #0x3d0
  41c6e0:	ldrsw	x10, [sp, #8]
  41c6e4:	ldr	x9, [x9, x10, lsl #3]
  41c6e8:	and	x8, x8, x9
  41c6ec:	cbz	x8, 41c6fc <wcrtomb@plt+0x19dec>
  41c6f0:	ldr	w8, [sp, #12]
  41c6f4:	orr	w8, w8, #0x2
  41c6f8:	str	w8, [sp, #12]
  41c6fc:	ldr	x8, [sp, #16]
  41c700:	ldrsw	x9, [sp, #8]
  41c704:	ldr	x8, [x8, x9, lsl #3]
  41c708:	ldr	x9, [sp, #24]
  41c70c:	add	x9, x9, #0x3d0
  41c710:	ldrsw	x10, [sp, #8]
  41c714:	ldr	x9, [x9, x10, lsl #3]
  41c718:	ldr	x10, [sp, #24]
  41c71c:	add	x10, x10, #0x3f0
  41c720:	ldrsw	x11, [sp, #8]
  41c724:	ldr	x10, [x10, x11, lsl #3]
  41c728:	orr	x9, x9, x10
  41c72c:	bic	x8, x8, x9
  41c730:	cbz	x8, 41c740 <wcrtomb@plt+0x19e30>
  41c734:	ldr	w8, [sp, #12]
  41c738:	orr	w8, w8, #0x1
  41c73c:	str	w8, [sp, #12]
  41c740:	ldr	w8, [sp, #8]
  41c744:	add	w8, w8, #0x1
  41c748:	str	w8, [sp, #8]
  41c74c:	b	41c690 <wcrtomb@plt+0x19d80>
  41c750:	ldr	w0, [sp, #12]
  41c754:	add	sp, sp, #0x20
  41c758:	ret
  41c75c:	sub	sp, sp, #0x30
  41c760:	stp	x29, x30, [sp, #32]
  41c764:	add	x29, sp, #0x20
  41c768:	mov	w8, #0xffffffff            	// #-1
  41c76c:	stur	x0, [x29, #-8]
  41c770:	sturb	w1, [x29, #-9]
  41c774:	ldur	x9, [x29, #-8]
  41c778:	add	x9, x9, #0x51c
  41c77c:	ldurb	w10, [x29, #-9]
  41c780:	mov	w11, w10
  41c784:	ldr	w10, [x9, x11, lsl #2]
  41c788:	mov	w12, #0x0                   	// #0
  41c78c:	cmp	w10, w8
  41c790:	str	w12, [sp, #16]
  41c794:	b.eq	41c7d0 <wcrtomb@plt+0x19ec0>  // b.none
  41c798:	bl	4026b0 <__ctype_b_loc@plt>
  41c79c:	ldr	x8, [x0]
  41c7a0:	ldurb	w9, [x29, #-9]
  41c7a4:	ldrh	w9, [x8, w9, sxtw #1]
  41c7a8:	and	w9, w9, #0x8
  41c7ac:	mov	w10, #0x1                   	// #1
  41c7b0:	str	w10, [sp, #12]
  41c7b4:	cbnz	w9, 41c7c8 <wcrtomb@plt+0x19eb8>
  41c7b8:	ldurb	w8, [x29, #-9]
  41c7bc:	cmp	w8, #0x5f
  41c7c0:	cset	w8, eq  // eq = none
  41c7c4:	str	w8, [sp, #12]
  41c7c8:	ldr	w8, [sp, #12]
  41c7cc:	str	w8, [sp, #16]
  41c7d0:	ldr	w8, [sp, #16]
  41c7d4:	and	w0, w8, #0x1
  41c7d8:	ldp	x29, x30, [sp, #32]
  41c7dc:	add	sp, sp, #0x30
  41c7e0:	ret
  41c7e4:	sub	sp, sp, #0x50
  41c7e8:	stp	x29, x30, [sp, #64]
  41c7ec:	add	x29, sp, #0x40
  41c7f0:	mov	w8, #0x1                   	// #1
  41c7f4:	stur	x0, [x29, #-8]
  41c7f8:	str	w8, [sp, #20]
  41c7fc:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  41c800:	cmp	x0, #0x1
  41c804:	cset	w8, hi  // hi = pmore
  41c808:	ldur	x9, [x29, #-8]
  41c80c:	ldr	w10, [sp, #20]
  41c810:	and	w8, w8, w10
  41c814:	strb	w8, [x9]
  41c818:	ldur	x9, [x29, #-8]
  41c81c:	ldrb	w8, [x9]
  41c820:	and	w0, w8, #0x1
  41c824:	bl	41c928 <wcrtomb@plt+0x1a018>
  41c828:	ldur	x9, [x29, #-8]
  41c82c:	ldr	w8, [sp, #20]
  41c830:	and	w10, w0, w8
  41c834:	strb	w10, [x9, #1]
  41c838:	bl	41c9f0 <wcrtomb@plt+0x1a0e0>
  41c83c:	ldur	x9, [x29, #-8]
  41c840:	ldr	w8, [sp, #20]
  41c844:	and	w10, w0, w8
  41c848:	strb	w10, [x9, #2]
  41c84c:	stur	wzr, [x29, #-12]
  41c850:	ldur	w8, [x29, #-12]
  41c854:	cmp	w8, #0xff
  41c858:	b.gt	41c91c <wcrtomb@plt+0x1a00c>
  41c85c:	ldur	w8, [x29, #-12]
  41c860:	sub	x1, x29, #0xd
  41c864:	sturb	w8, [x29, #-13]
  41c868:	ldur	w8, [x29, #-12]
  41c86c:	sturb	w8, [x29, #-14]
  41c870:	sub	x3, x29, #0x18
  41c874:	stur	xzr, [x29, #-24]
  41c878:	sub	x0, x29, #0x1c
  41c87c:	mov	x2, #0x1                   	// #1
  41c880:	bl	4271dc <wcrtomb@plt+0x248cc>
  41c884:	str	x0, [sp, #24]
  41c888:	ldr	x9, [sp, #24]
  41c88c:	cmp	x9, #0x1
  41c890:	b.hi	41c8a0 <wcrtomb@plt+0x19f90>  // b.pmore
  41c894:	mov	w8, #0x1                   	// #1
  41c898:	str	w8, [sp, #16]
  41c89c:	b	41c8b8 <wcrtomb@plt+0x19fa8>
  41c8a0:	ldr	x8, [sp, #24]
  41c8a4:	mov	x9, xzr
  41c8a8:	subs	x8, x9, x8
  41c8ac:	mov	w10, wzr
  41c8b0:	subs	w8, w10, w8
  41c8b4:	str	w8, [sp, #16]
  41c8b8:	ldr	w8, [sp, #16]
  41c8bc:	ldur	x9, [x29, #-8]
  41c8c0:	add	x9, x9, #0x3
  41c8c4:	ldurb	w10, [x29, #-14]
  41c8c8:	mov	w11, w10
  41c8cc:	add	x9, x9, x11
  41c8d0:	strb	w8, [x9]
  41c8d4:	ldr	x9, [sp, #24]
  41c8d8:	cmp	x9, #0x1
  41c8dc:	b.hi	41c8ec <wcrtomb@plt+0x19fdc>  // b.pmore
  41c8e0:	ldur	w8, [x29, #-28]
  41c8e4:	str	w8, [sp, #12]
  41c8e8:	b	41c8f4 <wcrtomb@plt+0x19fe4>
  41c8ec:	mov	w8, #0xffffffff            	// #-1
  41c8f0:	str	w8, [sp, #12]
  41c8f4:	ldr	w8, [sp, #12]
  41c8f8:	ldur	x9, [x29, #-8]
  41c8fc:	add	x9, x9, #0x104
  41c900:	ldurb	w10, [x29, #-14]
  41c904:	mov	w11, w10
  41c908:	str	w8, [x9, x11, lsl #2]
  41c90c:	ldur	w8, [x29, #-12]
  41c910:	add	w8, w8, #0x1
  41c914:	stur	w8, [x29, #-12]
  41c918:	b	41c850 <wcrtomb@plt+0x19f40>
  41c91c:	ldp	x29, x30, [sp, #64]
  41c920:	add	sp, sp, #0x50
  41c924:	ret
  41c928:	sub	sp, sp, #0x20
  41c92c:	stp	x29, x30, [sp, #16]
  41c930:	add	x29, sp, #0x10
  41c934:	mov	w8, #0x1                   	// #1
  41c938:	and	w8, w0, w8
  41c93c:	sturb	w8, [x29, #-2]
  41c940:	ldurb	w8, [x29, #-2]
  41c944:	tbnz	w8, #0, 41c94c <wcrtomb@plt+0x1a03c>
  41c948:	b	41c95c <wcrtomb@plt+0x1a04c>
  41c94c:	mov	w8, wzr
  41c950:	and	w8, w8, #0x1
  41c954:	sturb	w8, [x29, #-1]
  41c958:	b	41c9dc <wcrtomb@plt+0x1a0cc>
  41c95c:	str	wzr, [sp, #8]
  41c960:	ldr	w8, [sp, #8]
  41c964:	cmp	w8, #0xff
  41c968:	b.ge	41c9d0 <wcrtomb@plt+0x1a0c0>  // b.tcont
  41c96c:	ldr	w8, [sp, #8]
  41c970:	add	x9, sp, #0x6
  41c974:	strb	w8, [sp, #6]
  41c978:	mov	w8, #0x0                   	// #0
  41c97c:	strb	w8, [x9, #1]
  41c980:	ldr	w10, [sp, #8]
  41c984:	add	w10, w10, #0x1
  41c988:	add	x11, sp, #0x4
  41c98c:	strb	w10, [sp, #4]
  41c990:	strb	w8, [x11, #1]
  41c994:	mov	x0, x9
  41c998:	mov	x1, x11
  41c99c:	bl	4027f0 <strcoll@plt>
  41c9a0:	mov	w8, wzr
  41c9a4:	cmp	w8, w0
  41c9a8:	cset	w8, gt
  41c9ac:	tbnz	w8, #0, 41c9c0 <wcrtomb@plt+0x1a0b0>
  41c9b0:	mov	w8, wzr
  41c9b4:	and	w8, w8, #0x1
  41c9b8:	sturb	w8, [x29, #-1]
  41c9bc:	b	41c9dc <wcrtomb@plt+0x1a0cc>
  41c9c0:	ldr	w8, [sp, #8]
  41c9c4:	add	w8, w8, #0x1
  41c9c8:	str	w8, [sp, #8]
  41c9cc:	b	41c960 <wcrtomb@plt+0x1a050>
  41c9d0:	mov	w8, #0x1                   	// #1
  41c9d4:	and	w8, w8, #0x1
  41c9d8:	sturb	w8, [x29, #-1]
  41c9dc:	ldurb	w8, [x29, #-1]
  41c9e0:	and	w0, w8, #0x1
  41c9e4:	ldp	x29, x30, [sp, #16]
  41c9e8:	add	sp, sp, #0x20
  41c9ec:	ret
  41c9f0:	sub	sp, sp, #0x30
  41c9f4:	stp	x29, x30, [sp, #32]
  41c9f8:	add	x29, sp, #0x20
  41c9fc:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41ca00:	add	x1, x1, #0x97c
  41ca04:	mov	x2, #0x2                   	// #2
  41ca08:	sub	x0, x29, #0x4
  41ca0c:	add	x3, sp, #0x10
  41ca10:	str	xzr, [sp, #16]
  41ca14:	bl	4271dc <wcrtomb@plt+0x248cc>
  41ca18:	mov	w8, #0x0                   	// #0
  41ca1c:	cmp	x0, #0x2
  41ca20:	str	w8, [sp, #12]
  41ca24:	b.ne	41ca38 <wcrtomb@plt+0x1a128>  // b.any
  41ca28:	ldur	w8, [x29, #-4]
  41ca2c:	cmp	w8, #0x100
  41ca30:	cset	w8, eq  // eq = none
  41ca34:	str	w8, [sp, #12]
  41ca38:	ldr	w8, [sp, #12]
  41ca3c:	and	w0, w8, #0x1
  41ca40:	ldp	x29, x30, [sp, #32]
  41ca44:	add	sp, sp, #0x30
  41ca48:	ret
  41ca4c:	sub	sp, sp, #0x40
  41ca50:	stp	x29, x30, [sp, #48]
  41ca54:	add	x29, sp, #0x30
  41ca58:	stur	w0, [x29, #-4]
  41ca5c:	stur	x1, [x29, #-16]
  41ca60:	str	wzr, [sp, #24]
  41ca64:	ldur	w0, [x29, #-4]
  41ca68:	bl	402810 <towupper@plt>
  41ca6c:	str	w0, [sp, #20]
  41ca70:	ldr	w0, [sp, #20]
  41ca74:	bl	4028c0 <towlower@plt>
  41ca78:	str	w0, [sp, #16]
  41ca7c:	ldr	w8, [sp, #20]
  41ca80:	ldur	w9, [x29, #-4]
  41ca84:	cmp	w8, w9
  41ca88:	b.eq	41caa8 <wcrtomb@plt+0x1a198>  // b.none
  41ca8c:	ldr	w8, [sp, #20]
  41ca90:	ldur	x9, [x29, #-16]
  41ca94:	ldrsw	x10, [sp, #24]
  41ca98:	mov	w11, w10
  41ca9c:	add	w11, w11, #0x1
  41caa0:	str	w11, [sp, #24]
  41caa4:	str	w8, [x9, x10, lsl #2]
  41caa8:	ldr	w8, [sp, #16]
  41caac:	ldr	w9, [sp, #20]
  41cab0:	cmp	w8, w9
  41cab4:	b.eq	41caf8 <wcrtomb@plt+0x1a1e8>  // b.none
  41cab8:	ldr	w8, [sp, #16]
  41cabc:	ldur	w9, [x29, #-4]
  41cac0:	cmp	w8, w9
  41cac4:	b.eq	41caf8 <wcrtomb@plt+0x1a1e8>  // b.none
  41cac8:	ldr	w0, [sp, #16]
  41cacc:	bl	402810 <towupper@plt>
  41cad0:	ldr	w8, [sp, #20]
  41cad4:	cmp	w0, w8
  41cad8:	b.ne	41caf8 <wcrtomb@plt+0x1a1e8>  // b.any
  41cadc:	ldr	w8, [sp, #16]
  41cae0:	ldur	x9, [x29, #-16]
  41cae4:	ldrsw	x10, [sp, #24]
  41cae8:	mov	w11, w10
  41caec:	add	w11, w11, #0x1
  41caf0:	str	w11, [sp, #24]
  41caf4:	str	w8, [x9, x10, lsl #2]
  41caf8:	stur	wzr, [x29, #-20]
  41cafc:	ldursw	x8, [x29, #-20]
  41cb00:	cmp	x8, #0x13
  41cb04:	b.cs	41cb8c <wcrtomb@plt+0x1a27c>  // b.hs, b.nlast
  41cb08:	ldursw	x8, [x29, #-20]
  41cb0c:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41cb10:	add	x9, x9, #0x956
  41cb14:	ldrsh	w10, [x9, x8, lsl #1]
  41cb18:	str	w10, [sp, #12]
  41cb1c:	ldr	w10, [sp, #12]
  41cb20:	ldr	w11, [sp, #16]
  41cb24:	cmp	w10, w11
  41cb28:	b.eq	41cb7c <wcrtomb@plt+0x1a26c>  // b.none
  41cb2c:	ldr	w8, [sp, #12]
  41cb30:	ldr	w9, [sp, #20]
  41cb34:	cmp	w8, w9
  41cb38:	b.eq	41cb7c <wcrtomb@plt+0x1a26c>  // b.none
  41cb3c:	ldr	w8, [sp, #12]
  41cb40:	ldur	w9, [x29, #-4]
  41cb44:	cmp	w8, w9
  41cb48:	b.eq	41cb7c <wcrtomb@plt+0x1a26c>  // b.none
  41cb4c:	ldr	w0, [sp, #12]
  41cb50:	bl	402810 <towupper@plt>
  41cb54:	ldr	w8, [sp, #20]
  41cb58:	cmp	w0, w8
  41cb5c:	b.ne	41cb7c <wcrtomb@plt+0x1a26c>  // b.any
  41cb60:	ldr	w8, [sp, #12]
  41cb64:	ldur	x9, [x29, #-16]
  41cb68:	ldrsw	x10, [sp, #24]
  41cb6c:	mov	w11, w10
  41cb70:	add	w11, w11, #0x1
  41cb74:	str	w11, [sp, #24]
  41cb78:	str	w8, [x9, x10, lsl #2]
  41cb7c:	ldur	w8, [x29, #-20]
  41cb80:	add	w8, w8, #0x1
  41cb84:	stur	w8, [x29, #-20]
  41cb88:	b	41cafc <wcrtomb@plt+0x1a1ec>
  41cb8c:	ldr	w0, [sp, #24]
  41cb90:	ldp	x29, x30, [sp, #48]
  41cb94:	add	sp, sp, #0x40
  41cb98:	ret
  41cb9c:	sub	sp, sp, #0x40
  41cba0:	stp	x29, x30, [sp, #48]
  41cba4:	add	x29, sp, #0x30
  41cba8:	stur	x0, [x29, #-8]
  41cbac:	ldur	x0, [x29, #-8]
  41cbb0:	bl	43fc6c <_obstack_memory_used@@Base+0x1834c>
  41cbb4:	stur	x0, [x29, #-16]
  41cbb8:	ldur	x8, [x29, #-16]
  41cbbc:	ldrb	w9, [x8]
  41cbc0:	cbnz	w9, 41cbcc <wcrtomb@plt+0x1a2bc>
  41cbc4:	ldur	x8, [x29, #-8]
  41cbc8:	stur	x8, [x29, #-16]
  41cbcc:	ldur	x8, [x29, #-16]
  41cbd0:	ldur	x0, [x29, #-16]
  41cbd4:	str	x8, [sp, #8]
  41cbd8:	bl	43fd0c <_obstack_memory_used@@Base+0x183ec>
  41cbdc:	ldr	x8, [sp, #8]
  41cbe0:	add	x9, x8, x0
  41cbe4:	str	x9, [sp, #24]
  41cbe8:	ldr	x9, [sp, #24]
  41cbec:	ldrb	w10, [x9]
  41cbf0:	cmp	w10, #0x0
  41cbf4:	cset	w10, ne  // ne = any
  41cbf8:	mov	w11, #0x1                   	// #1
  41cbfc:	and	w10, w10, w11
  41cc00:	strb	w10, [sp, #23]
  41cc04:	ldr	x9, [sp, #24]
  41cc08:	mov	w10, #0x0                   	// #0
  41cc0c:	strb	w10, [x9]
  41cc10:	ldrb	w10, [sp, #23]
  41cc14:	and	w0, w10, #0x1
  41cc18:	ldp	x29, x30, [sp, #48]
  41cc1c:	add	sp, sp, #0x40
  41cc20:	ret
  41cc24:	sub	sp, sp, #0x30
  41cc28:	stp	x29, x30, [sp, #32]
  41cc2c:	add	x29, sp, #0x20
  41cc30:	mov	x8, #0x10                  	// #16
  41cc34:	stur	x0, [x29, #-8]
  41cc38:	str	x1, [sp, #16]
  41cc3c:	mov	x0, x8
  41cc40:	bl	423058 <wcrtomb@plt+0x20748>
  41cc44:	str	x0, [sp, #8]
  41cc48:	ldr	x8, [sp, #16]
  41cc4c:	ldr	x9, [sp, #8]
  41cc50:	str	x8, [x9, #8]
  41cc54:	ldur	x8, [x29, #-8]
  41cc58:	ldr	x8, [x8, #8]
  41cc5c:	ldr	x9, [sp, #8]
  41cc60:	str	x8, [x9]
  41cc64:	ldr	x8, [sp, #8]
  41cc68:	ldur	x9, [x29, #-8]
  41cc6c:	str	x8, [x9, #8]
  41cc70:	ldp	x29, x30, [sp, #32]
  41cc74:	add	sp, sp, #0x30
  41cc78:	ret
  41cc7c:	sub	sp, sp, #0x30
  41cc80:	str	x0, [sp, #32]
  41cc84:	str	w1, [sp, #28]
  41cc88:	ldr	x8, [sp, #32]
  41cc8c:	add	x9, x8, #0x1
  41cc90:	str	x9, [sp, #32]
  41cc94:	ldrb	w10, [x8]
  41cc98:	subs	w10, w10, #0x0
  41cc9c:	mov	w8, w10
  41cca0:	ubfx	x8, x8, #0, #32
  41cca4:	cmp	x8, #0x7d
  41cca8:	str	x8, [sp, #16]
  41ccac:	b.hi	41cd90 <wcrtomb@plt+0x1a480>  // b.pmore
  41ccb0:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41ccb4:	add	x8, x8, #0x980
  41ccb8:	ldr	x11, [sp, #16]
  41ccbc:	ldrsw	x10, [x8, x11, lsl #2]
  41ccc0:	add	x9, x8, x10
  41ccc4:	br	x9
  41ccc8:	ldr	w8, [sp, #28]
  41cccc:	and	w8, w8, #0x8000000
  41ccd0:	cbz	w8, 41cce4 <wcrtomb@plt+0x1a3d4>
  41ccd4:	mov	w8, #0x1                   	// #1
  41ccd8:	and	w8, w8, #0x1
  41ccdc:	strb	w8, [sp, #47]
  41cce0:	b	41cd94 <wcrtomb@plt+0x1a484>
  41cce4:	b	41cd90 <wcrtomb@plt+0x1a480>
  41cce8:	ldr	w8, [sp, #28]
  41ccec:	and	w8, w8, #0x8000000
  41ccf0:	cbz	w8, 41ccf8 <wcrtomb@plt+0x1a3e8>
  41ccf4:	b	41cc88 <wcrtomb@plt+0x1a378>
  41ccf8:	ldr	w8, [sp, #28]
  41ccfc:	and	w8, w8, #0x2
  41cd00:	mov	w9, #0x0                   	// #0
  41cd04:	str	w9, [sp, #12]
  41cd08:	cbnz	w8, 41cd20 <wcrtomb@plt+0x1a410>
  41cd0c:	ldr	x8, [sp, #32]
  41cd10:	ldrb	w9, [x8]
  41cd14:	cmp	w9, #0x0
  41cd18:	cset	w9, ne  // ne = any
  41cd1c:	str	w9, [sp, #12]
  41cd20:	ldr	w8, [sp, #12]
  41cd24:	and	w8, w8, #0x1
  41cd28:	ldr	x9, [sp, #32]
  41cd2c:	mov	w0, w8
  41cd30:	sxtw	x10, w0
  41cd34:	add	x9, x9, x10
  41cd38:	str	x9, [sp, #32]
  41cd3c:	b	41cd90 <wcrtomb@plt+0x1a480>
  41cd40:	ldr	w8, [sp, #28]
  41cd44:	and	w8, w8, #0x20
  41cd48:	cbz	w8, 41cd6c <wcrtomb@plt+0x1a45c>
  41cd4c:	ldr	x8, [sp, #32]
  41cd50:	ldrb	w9, [x8]
  41cd54:	cmp	w9, #0x28
  41cd58:	b.ne	41cd6c <wcrtomb@plt+0x1a45c>  // b.any
  41cd5c:	mov	w8, #0x1                   	// #1
  41cd60:	and	w8, w8, #0x1
  41cd64:	strb	w8, [sp, #47]
  41cd68:	b	41cd94 <wcrtomb@plt+0x1a484>
  41cd6c:	b	41cd90 <wcrtomb@plt+0x1a480>
  41cd70:	mov	w8, #0x1                   	// #1
  41cd74:	and	w8, w8, #0x1
  41cd78:	strb	w8, [sp, #47]
  41cd7c:	b	41cd94 <wcrtomb@plt+0x1a484>
  41cd80:	mov	w8, wzr
  41cd84:	and	w8, w8, #0x1
  41cd88:	strb	w8, [sp, #47]
  41cd8c:	b	41cd94 <wcrtomb@plt+0x1a484>
  41cd90:	b	41cc88 <wcrtomb@plt+0x1a378>
  41cd94:	ldrb	w8, [sp, #47]
  41cd98:	and	w0, w8, #0x1
  41cd9c:	add	sp, sp, #0x30
  41cda0:	ret
  41cda4:	stp	x29, x30, [sp, #-16]!
  41cda8:	mov	x29, sp
  41cdac:	mov	x0, #0x10                  	// #16
  41cdb0:	bl	4232a0 <wcrtomb@plt+0x20990>
  41cdb4:	ldp	x29, x30, [sp], #16
  41cdb8:	ret
  41cdbc:	sub	sp, sp, #0x40
  41cdc0:	stp	x29, x30, [sp, #48]
  41cdc4:	add	x29, sp, #0x30
  41cdc8:	stur	x0, [x29, #-8]
  41cdcc:	ldur	x8, [x29, #-8]
  41cdd0:	ldr	x8, [x8]
  41cdd4:	stur	x8, [x29, #-16]
  41cdd8:	ldur	x8, [x29, #-16]
  41cddc:	cbz	x8, 41ce00 <wcrtomb@plt+0x1a4f0>
  41cde0:	ldur	x8, [x29, #-16]
  41cde4:	ldr	x8, [x8]
  41cde8:	str	x8, [sp, #16]
  41cdec:	ldur	x0, [x29, #-16]
  41cdf0:	bl	41ce54 <wcrtomb@plt+0x1a544>
  41cdf4:	ldr	x8, [sp, #16]
  41cdf8:	stur	x8, [x29, #-16]
  41cdfc:	b	41cdd8 <wcrtomb@plt+0x1a4c8>
  41ce00:	ldur	x8, [x29, #-8]
  41ce04:	ldr	x8, [x8, #8]
  41ce08:	str	x8, [sp, #24]
  41ce0c:	ldr	x8, [sp, #24]
  41ce10:	cbz	x8, 41ce40 <wcrtomb@plt+0x1a530>
  41ce14:	ldr	x8, [sp, #24]
  41ce18:	ldr	x8, [x8]
  41ce1c:	str	x8, [sp, #8]
  41ce20:	ldr	x8, [sp, #24]
  41ce24:	ldr	x0, [x8, #8]
  41ce28:	bl	4026c0 <free@plt>
  41ce2c:	ldr	x0, [sp, #24]
  41ce30:	bl	4026c0 <free@plt>
  41ce34:	ldr	x8, [sp, #8]
  41ce38:	str	x8, [sp, #24]
  41ce3c:	b	41ce0c <wcrtomb@plt+0x1a4fc>
  41ce40:	ldur	x0, [x29, #-8]
  41ce44:	bl	4026c0 <free@plt>
  41ce48:	ldp	x29, x30, [sp, #48]
  41ce4c:	add	sp, sp, #0x40
  41ce50:	ret
  41ce54:	sub	sp, sp, #0x30
  41ce58:	stp	x29, x30, [sp, #32]
  41ce5c:	add	x29, sp, #0x20
  41ce60:	stur	x0, [x29, #-8]
  41ce64:	ldur	x8, [x29, #-8]
  41ce68:	ldr	w9, [x8, #8]
  41ce6c:	str	w9, [sp, #12]
  41ce70:	cbz	w9, 41cf08 <wcrtomb@plt+0x1a5f8>
  41ce74:	b	41ce78 <wcrtomb@plt+0x1a568>
  41ce78:	ldr	w8, [sp, #12]
  41ce7c:	cmp	w8, #0x1
  41ce80:	cset	w9, eq  // eq = none
  41ce84:	eor	w9, w9, #0x1
  41ce88:	tbnz	w9, #0, 41cf14 <wcrtomb@plt+0x1a604>
  41ce8c:	b	41ce90 <wcrtomb@plt+0x1a580>
  41ce90:	str	xzr, [sp, #16]
  41ce94:	ldr	x8, [sp, #16]
  41ce98:	ldur	x9, [x29, #-8]
  41ce9c:	ldr	x9, [x9, #32]
  41cea0:	cmp	x8, x9
  41cea4:	b.cs	41cef8 <wcrtomb@plt+0x1a5e8>  // b.hs, b.nlast
  41cea8:	ldur	x8, [x29, #-8]
  41ceac:	ldr	x8, [x8, #16]
  41ceb0:	ldr	x9, [sp, #16]
  41ceb4:	mov	x10, #0x48                  	// #72
  41ceb8:	mul	x9, x10, x9
  41cebc:	ldr	w11, [x8, x9]
  41cec0:	and	w11, w11, #0x8000000
  41cec4:	cbz	w11, 41cee8 <wcrtomb@plt+0x1a5d8>
  41cec8:	ldur	x8, [x29, #-8]
  41cecc:	ldr	x8, [x8, #16]
  41ced0:	ldr	x9, [sp, #16]
  41ced4:	mov	x10, #0x48                  	// #72
  41ced8:	mul	x9, x10, x9
  41cedc:	add	x8, x8, x9
  41cee0:	add	x0, x8, #0x8
  41cee4:	bl	428924 <_obstack_memory_used@@Base+0x1004>
  41cee8:	ldr	x8, [sp, #16]
  41ceec:	add	x8, x8, #0x1
  41cef0:	str	x8, [sp, #16]
  41cef4:	b	41ce94 <wcrtomb@plt+0x1a584>
  41cef8:	ldur	x8, [x29, #-8]
  41cefc:	ldr	x0, [x8, #16]
  41cf00:	bl	4026c0 <free@plt>
  41cf04:	b	41cf14 <wcrtomb@plt+0x1a604>
  41cf08:	ldur	x8, [x29, #-8]
  41cf0c:	ldr	x0, [x8, #16]
  41cf10:	bl	41ebc0 <wcrtomb@plt+0x1c2b0>
  41cf14:	ldur	x0, [x29, #-8]
  41cf18:	bl	4026c0 <free@plt>
  41cf1c:	ldp	x29, x30, [sp, #32]
  41cf20:	add	sp, sp, #0x30
  41cf24:	ret
  41cf28:	sub	sp, sp, #0x50
  41cf2c:	stp	x29, x30, [sp, #64]
  41cf30:	add	x29, sp, #0x40
  41cf34:	adrp	x8, 402000 <mbrtowc@plt-0x280>
  41cf38:	add	x8, x8, #0x700
  41cf3c:	adrp	x9, 41d000 <wcrtomb@plt+0x1a6f0>
  41cf40:	add	x9, x9, #0x30
  41cf44:	stur	x0, [x29, #-8]
  41cf48:	stur	x1, [x29, #-16]
  41cf4c:	stur	w2, [x29, #-20]
  41cf50:	ldur	w10, [x29, #-20]
  41cf54:	tst	w10, #0x10000000
  41cf58:	csel	x8, x8, x9, ne  // ne = any
  41cf5c:	str	x8, [sp, #32]
  41cf60:	ldr	x8, [sp, #32]
  41cf64:	ldur	x0, [x29, #-8]
  41cf68:	ldur	x1, [x29, #-16]
  41cf6c:	ldur	w2, [x29, #-20]
  41cf70:	blr	x8
  41cf74:	cmp	w0, #0x0
  41cf78:	cset	w10, eq  // eq = none
  41cf7c:	and	w10, w10, #0x1
  41cf80:	strb	w10, [sp, #31]
  41cf84:	ldur	w10, [x29, #-20]
  41cf88:	and	w10, w10, #0x40000000
  41cf8c:	cbnz	w10, 41d01c <wcrtomb@plt+0x1a70c>
  41cf90:	ldur	x8, [x29, #-16]
  41cf94:	str	x8, [sp, #16]
  41cf98:	ldr	x8, [sp, #16]
  41cf9c:	ldrb	w9, [x8]
  41cfa0:	mov	w10, #0x0                   	// #0
  41cfa4:	str	w10, [sp, #12]
  41cfa8:	cbz	w9, 41cfb8 <wcrtomb@plt+0x1a6a8>
  41cfac:	ldrb	w8, [sp, #31]
  41cfb0:	eor	w8, w8, #0x1
  41cfb4:	str	w8, [sp, #12]
  41cfb8:	ldr	w8, [sp, #12]
  41cfbc:	tbnz	w8, #0, 41cfc4 <wcrtomb@plt+0x1a6b4>
  41cfc0:	b	41d01c <wcrtomb@plt+0x1a70c>
  41cfc4:	ldr	x8, [sp, #16]
  41cfc8:	ldrb	w9, [x8]
  41cfcc:	cmp	w9, #0x2f
  41cfd0:	b.ne	41d00c <wcrtomb@plt+0x1a6fc>  // b.any
  41cfd4:	ldr	x8, [sp, #16]
  41cfd8:	ldrb	w9, [x8, #1]
  41cfdc:	cmp	w9, #0x2f
  41cfe0:	b.eq	41d00c <wcrtomb@plt+0x1a6fc>  // b.none
  41cfe4:	ldr	x8, [sp, #32]
  41cfe8:	ldur	x0, [x29, #-8]
  41cfec:	ldr	x9, [sp, #16]
  41cff0:	add	x1, x9, #0x1
  41cff4:	ldur	w2, [x29, #-20]
  41cff8:	blr	x8
  41cffc:	cmp	w0, #0x0
  41d000:	cset	w10, eq  // eq = none
  41d004:	and	w10, w10, #0x1
  41d008:	strb	w10, [sp, #31]
  41d00c:	ldr	x8, [sp, #16]
  41d010:	add	x8, x8, #0x1
  41d014:	str	x8, [sp, #16]
  41d018:	b	41cf98 <wcrtomb@plt+0x1a688>
  41d01c:	ldrb	w8, [sp, #31]
  41d020:	and	w0, w8, #0x1
  41d024:	ldp	x29, x30, [sp, #64]
  41d028:	add	sp, sp, #0x50
  41d02c:	ret
  41d030:	sub	sp, sp, #0x60
  41d034:	stp	x29, x30, [sp, #80]
  41d038:	add	x29, sp, #0x50
  41d03c:	stur	x0, [x29, #-16]
  41d040:	stur	x1, [x29, #-24]
  41d044:	stur	w2, [x29, #-28]
  41d048:	ldur	w8, [x29, #-28]
  41d04c:	and	w8, w8, #0x8
  41d050:	cbnz	w8, 41d090 <wcrtomb@plt+0x1a780>
  41d054:	ldur	w8, [x29, #-28]
  41d058:	and	w8, w8, #0x10
  41d05c:	cbz	w8, 41d074 <wcrtomb@plt+0x1a764>
  41d060:	ldur	x0, [x29, #-16]
  41d064:	ldur	x1, [x29, #-24]
  41d068:	bl	41f958 <wcrtomb@plt+0x1d048>
  41d06c:	str	w0, [sp, #8]
  41d070:	b	41d084 <wcrtomb@plt+0x1a774>
  41d074:	ldur	x0, [x29, #-16]
  41d078:	ldur	x1, [x29, #-24]
  41d07c:	bl	4026a0 <strcmp@plt>
  41d080:	str	w0, [sp, #8]
  41d084:	ldr	w8, [sp, #8]
  41d088:	stur	w8, [x29, #-4]
  41d08c:	b	41d17c <wcrtomb@plt+0x1a86c>
  41d090:	ldur	w8, [x29, #-28]
  41d094:	and	w8, w8, #0x10
  41d098:	cbnz	w8, 41d0f0 <wcrtomb@plt+0x1a7e0>
  41d09c:	ldur	x0, [x29, #-16]
  41d0a0:	bl	4022f0 <strlen@plt>
  41d0a4:	str	x0, [sp, #40]
  41d0a8:	ldur	x0, [x29, #-16]
  41d0ac:	ldur	x1, [x29, #-24]
  41d0b0:	ldr	x2, [sp, #40]
  41d0b4:	bl	4024d0 <strncmp@plt>
  41d0b8:	str	w0, [sp, #36]
  41d0bc:	ldr	w8, [sp, #36]
  41d0c0:	cbnz	w8, 41d0e4 <wcrtomb@plt+0x1a7d4>
  41d0c4:	ldur	x8, [x29, #-24]
  41d0c8:	ldr	x9, [sp, #40]
  41d0cc:	ldrb	w10, [x8, x9]
  41d0d0:	str	w10, [sp, #36]
  41d0d4:	ldr	w10, [sp, #36]
  41d0d8:	cmp	w10, #0x2f
  41d0dc:	b.ne	41d0e4 <wcrtomb@plt+0x1a7d4>  // b.any
  41d0e0:	str	wzr, [sp, #36]
  41d0e4:	ldr	w8, [sp, #36]
  41d0e8:	stur	w8, [x29, #-4]
  41d0ec:	b	41d17c <wcrtomb@plt+0x1a86c>
  41d0f0:	ldur	x0, [x29, #-24]
  41d0f4:	bl	423358 <wcrtomb@plt+0x20a48>
  41d0f8:	str	x0, [sp, #24]
  41d0fc:	ldr	x8, [sp, #24]
  41d100:	str	x8, [sp, #16]
  41d104:	ldr	x0, [sp, #16]
  41d108:	mov	w1, #0x2f                  	// #47
  41d10c:	bl	4026e0 <strchr@plt>
  41d110:	str	x0, [sp, #16]
  41d114:	ldr	x8, [sp, #16]
  41d118:	cbz	x8, 41d128 <wcrtomb@plt+0x1a818>
  41d11c:	ldr	x8, [sp, #16]
  41d120:	mov	w9, #0x0                   	// #0
  41d124:	strb	w9, [x8]
  41d128:	ldur	x0, [x29, #-16]
  41d12c:	ldr	x1, [sp, #24]
  41d130:	bl	41f958 <wcrtomb@plt+0x1d048>
  41d134:	str	w0, [sp, #12]
  41d138:	ldr	x8, [sp, #16]
  41d13c:	cbz	x8, 41d150 <wcrtomb@plt+0x1a840>
  41d140:	ldr	w8, [sp, #12]
  41d144:	cmp	w8, #0x0
  41d148:	cset	w8, gt
  41d14c:	tbnz	w8, #0, 41d154 <wcrtomb@plt+0x1a844>
  41d150:	b	41d16c <wcrtomb@plt+0x1a85c>
  41d154:	ldr	x8, [sp, #16]
  41d158:	add	x9, x8, #0x1
  41d15c:	str	x9, [sp, #16]
  41d160:	mov	w10, #0x2f                  	// #47
  41d164:	strb	w10, [x8]
  41d168:	b	41d104 <wcrtomb@plt+0x1a7f4>
  41d16c:	ldr	x0, [sp, #24]
  41d170:	bl	4026c0 <free@plt>
  41d174:	ldr	w8, [sp, #12]
  41d178:	stur	w8, [x29, #-4]
  41d17c:	ldur	w0, [x29, #-4]
  41d180:	ldp	x29, x30, [sp, #80]
  41d184:	add	sp, sp, #0x60
  41d188:	ret
  41d18c:	sub	sp, sp, #0x40
  41d190:	stp	x29, x30, [sp, #48]
  41d194:	add	x29, sp, #0x30
  41d198:	mov	w8, #0x0                   	// #0
  41d19c:	mov	x9, xzr
  41d1a0:	stur	x0, [x29, #-16]
  41d1a4:	str	x1, [sp, #24]
  41d1a8:	strb	w8, [sp, #15]
  41d1ac:	str	x9, [sp]
  41d1b0:	ldur	x9, [x29, #-16]
  41d1b4:	ldr	x9, [x9]
  41d1b8:	cbnz	x9, 41d1cc <wcrtomb@plt+0x1a8bc>
  41d1bc:	mov	w8, wzr
  41d1c0:	and	w8, w8, #0x1
  41d1c4:	sturb	w8, [x29, #-1]
  41d1c8:	b	41d2a0 <wcrtomb@plt+0x1a990>
  41d1cc:	ldur	x8, [x29, #-16]
  41d1d0:	ldr	x8, [x8]
  41d1d4:	str	x8, [sp, #16]
  41d1d8:	ldr	x8, [sp, #16]
  41d1dc:	ldr	w9, [x8, #8]
  41d1e0:	cbnz	w9, 41d220 <wcrtomb@plt+0x1a910>
  41d1e4:	ldr	x8, [sp]
  41d1e8:	cbnz	x8, 41d200 <wcrtomb@plt+0x1a8f0>
  41d1ec:	ldr	x0, [sp, #24]
  41d1f0:	bl	4022f0 <strlen@plt>
  41d1f4:	add	x0, x0, #0x1
  41d1f8:	bl	423058 <wcrtomb@plt+0x20748>
  41d1fc:	str	x0, [sp]
  41d200:	ldr	x0, [sp, #16]
  41d204:	ldr	x1, [sp, #24]
  41d208:	ldr	x2, [sp]
  41d20c:	bl	41d2b4 <wcrtomb@plt+0x1a9a4>
  41d210:	tbnz	w0, #0, 41d218 <wcrtomb@plt+0x1a908>
  41d214:	b	41d21c <wcrtomb@plt+0x1a90c>
  41d218:	b	41d260 <wcrtomb@plt+0x1a950>
  41d21c:	b	41d238 <wcrtomb@plt+0x1a928>
  41d220:	ldr	x0, [sp, #16]
  41d224:	ldr	x1, [sp, #24]
  41d228:	bl	41d3a4 <wcrtomb@plt+0x1aa94>
  41d22c:	tbnz	w0, #0, 41d234 <wcrtomb@plt+0x1a924>
  41d230:	b	41d238 <wcrtomb@plt+0x1a928>
  41d234:	b	41d260 <wcrtomb@plt+0x1a950>
  41d238:	ldr	x8, [sp, #16]
  41d23c:	ldr	x8, [x8]
  41d240:	cbnz	x8, 41d250 <wcrtomb@plt+0x1a940>
  41d244:	mov	w8, #0x1                   	// #1
  41d248:	strb	w8, [sp, #15]
  41d24c:	b	41d260 <wcrtomb@plt+0x1a950>
  41d250:	ldr	x8, [sp, #16]
  41d254:	ldr	x8, [x8]
  41d258:	str	x8, [sp, #16]
  41d25c:	b	41d1d8 <wcrtomb@plt+0x1a8c8>
  41d260:	ldr	x0, [sp]
  41d264:	bl	4026c0 <free@plt>
  41d268:	ldrb	w8, [sp, #15]
  41d26c:	mov	w9, #0x1                   	// #1
  41d270:	and	w8, w8, #0x1
  41d274:	ldr	x10, [sp, #16]
  41d278:	ldr	w11, [x10, #12]
  41d27c:	tst	w11, #0x20000000
  41d280:	cset	w11, ne  // ne = any
  41d284:	eor	w11, w11, #0x1
  41d288:	and	w11, w11, #0x1
  41d28c:	eor	w8, w8, w11
  41d290:	cmp	w8, #0x0
  41d294:	cset	w8, ne  // ne = any
  41d298:	and	w8, w8, w9
  41d29c:	sturb	w8, [x29, #-1]
  41d2a0:	ldurb	w8, [x29, #-1]
  41d2a4:	and	w0, w8, #0x1
  41d2a8:	ldp	x29, x30, [sp, #48]
  41d2ac:	add	sp, sp, #0x40
  41d2b0:	ret
  41d2b4:	sub	sp, sp, #0x50
  41d2b8:	stp	x29, x30, [sp, #64]
  41d2bc:	add	x29, sp, #0x40
  41d2c0:	stur	x0, [x29, #-16]
  41d2c4:	stur	x1, [x29, #-24]
  41d2c8:	str	x2, [sp, #32]
  41d2cc:	ldur	x8, [x29, #-16]
  41d2d0:	ldr	w9, [x8, #12]
  41d2d4:	str	w9, [sp, #28]
  41d2d8:	ldur	x8, [x29, #-16]
  41d2dc:	ldr	x8, [x8, #16]
  41d2e0:	str	x8, [sp, #16]
  41d2e4:	ldr	x0, [sp, #32]
  41d2e8:	ldur	x1, [x29, #-24]
  41d2ec:	bl	402730 <strcpy@plt>
  41d2f0:	ldr	x0, [sp, #16]
  41d2f4:	ldr	x1, [sp, #32]
  41d2f8:	bl	41e228 <wcrtomb@plt+0x1b918>
  41d2fc:	cbz	x0, 41d310 <wcrtomb@plt+0x1aa00>
  41d300:	mov	w8, #0x1                   	// #1
  41d304:	and	w8, w8, #0x1
  41d308:	sturb	w8, [x29, #-1]
  41d30c:	b	41d390 <wcrtomb@plt+0x1aa80>
  41d310:	ldr	w8, [sp, #28]
  41d314:	and	w8, w8, #0x8
  41d318:	cbz	w8, 41d344 <wcrtomb@plt+0x1aa34>
  41d31c:	ldr	x0, [sp, #32]
  41d320:	mov	w1, #0x2f                  	// #47
  41d324:	bl	4025c0 <strrchr@plt>
  41d328:	str	x0, [sp, #8]
  41d32c:	ldr	x8, [sp, #8]
  41d330:	cbz	x8, 41d344 <wcrtomb@plt+0x1aa34>
  41d334:	ldr	x8, [sp, #8]
  41d338:	mov	w9, #0x0                   	// #0
  41d33c:	strb	w9, [x8]
  41d340:	b	41d2f0 <wcrtomb@plt+0x1a9e0>
  41d344:	ldr	w8, [sp, #28]
  41d348:	and	w8, w8, #0x40000000
  41d34c:	cbnz	w8, 41d378 <wcrtomb@plt+0x1aa68>
  41d350:	ldur	x0, [x29, #-24]
  41d354:	mov	w1, #0x2f                  	// #47
  41d358:	bl	4026e0 <strchr@plt>
  41d35c:	stur	x0, [x29, #-24]
  41d360:	ldur	x8, [x29, #-24]
  41d364:	cbz	x8, 41d374 <wcrtomb@plt+0x1aa64>
  41d368:	ldur	x8, [x29, #-24]
  41d36c:	add	x8, x8, #0x1
  41d370:	stur	x8, [x29, #-24]
  41d374:	b	41d37c <wcrtomb@plt+0x1aa6c>
  41d378:	b	41d384 <wcrtomb@plt+0x1aa74>
  41d37c:	ldur	x8, [x29, #-24]
  41d380:	cbnz	x8, 41d2e4 <wcrtomb@plt+0x1a9d4>
  41d384:	mov	w8, wzr
  41d388:	and	w8, w8, #0x1
  41d38c:	sturb	w8, [x29, #-1]
  41d390:	ldurb	w8, [x29, #-1]
  41d394:	and	w0, w8, #0x1
  41d398:	ldp	x29, x30, [sp, #64]
  41d39c:	add	sp, sp, #0x50
  41d3a0:	ret
  41d3a4:	sub	sp, sp, #0x40
  41d3a8:	stp	x29, x30, [sp, #48]
  41d3ac:	add	x29, sp, #0x30
  41d3b0:	stur	x0, [x29, #-16]
  41d3b4:	str	x1, [sp, #24]
  41d3b8:	ldur	x8, [x29, #-16]
  41d3bc:	ldr	x8, [x8, #32]
  41d3c0:	str	x8, [sp, #16]
  41d3c4:	ldur	x8, [x29, #-16]
  41d3c8:	ldr	x8, [x8, #16]
  41d3cc:	str	x8, [sp, #8]
  41d3d0:	str	xzr, [sp]
  41d3d4:	ldr	x8, [sp]
  41d3d8:	ldr	x9, [sp, #16]
  41d3dc:	cmp	x8, x9
  41d3e0:	b.cs	41d428 <wcrtomb@plt+0x1ab18>  // b.hs, b.nlast
  41d3e4:	ldr	x8, [sp, #8]
  41d3e8:	ldr	x9, [sp]
  41d3ec:	mov	x10, #0x48                  	// #72
  41d3f0:	mul	x9, x10, x9
  41d3f4:	add	x0, x8, x9
  41d3f8:	ldr	x1, [sp, #24]
  41d3fc:	bl	41dca0 <wcrtomb@plt+0x1b390>
  41d400:	tbnz	w0, #0, 41d408 <wcrtomb@plt+0x1aaf8>
  41d404:	b	41d418 <wcrtomb@plt+0x1ab08>
  41d408:	mov	w8, #0x1                   	// #1
  41d40c:	and	w8, w8, #0x1
  41d410:	sturb	w8, [x29, #-1]
  41d414:	b	41d434 <wcrtomb@plt+0x1ab24>
  41d418:	ldr	x8, [sp]
  41d41c:	add	x8, x8, #0x1
  41d420:	str	x8, [sp]
  41d424:	b	41d3d4 <wcrtomb@plt+0x1aac4>
  41d428:	mov	w8, wzr
  41d42c:	and	w8, w8, #0x1
  41d430:	sturb	w8, [x29, #-1]
  41d434:	ldurb	w8, [x29, #-1]
  41d438:	and	w0, w8, #0x1
  41d43c:	ldp	x29, x30, [sp, #48]
  41d440:	add	sp, sp, #0x40
  41d444:	ret
  41d448:	sub	sp, sp, #0x70
  41d44c:	stp	x29, x30, [sp, #96]
  41d450:	add	x29, sp, #0x60
  41d454:	stur	x0, [x29, #-8]
  41d458:	stur	x1, [x29, #-16]
  41d45c:	stur	w2, [x29, #-20]
  41d460:	ldur	w8, [x29, #-20]
  41d464:	and	w8, w8, #0x18000000
  41d468:	cbz	w8, 41d6c8 <wcrtomb@plt+0x1adb8>
  41d46c:	ldur	x0, [x29, #-16]
  41d470:	ldur	w1, [x29, #-20]
  41d474:	bl	41cc7c <wcrtomb@plt+0x1a36c>
  41d478:	tbnz	w0, #0, 41d480 <wcrtomb@plt+0x1ab70>
  41d47c:	b	41d6c8 <wcrtomb@plt+0x1adb8>
  41d480:	ldur	x8, [x29, #-8]
  41d484:	ldr	x8, [x8]
  41d488:	cbz	x8, 41d4c0 <wcrtomb@plt+0x1abb0>
  41d48c:	ldur	x8, [x29, #-8]
  41d490:	ldr	x8, [x8]
  41d494:	ldr	w9, [x8, #8]
  41d498:	cmp	w9, #0x1
  41d49c:	b.ne	41d4c0 <wcrtomb@plt+0x1abb0>  // b.any
  41d4a0:	ldur	x8, [x29, #-8]
  41d4a4:	ldr	x8, [x8]
  41d4a8:	ldr	w9, [x8, #12]
  41d4ac:	and	w9, w9, #0x20000000
  41d4b0:	ldur	w10, [x29, #-20]
  41d4b4:	and	w10, w10, #0x20000000
  41d4b8:	cmp	w9, w10
  41d4bc:	b.eq	41d4d0 <wcrtomb@plt+0x1abc0>  // b.none
  41d4c0:	ldur	x0, [x29, #-8]
  41d4c4:	ldur	w2, [x29, #-20]
  41d4c8:	mov	w1, #0x1                   	// #1
  41d4cc:	bl	41d7a0 <wcrtomb@plt+0x1ae90>
  41d4d0:	ldur	x8, [x29, #-8]
  41d4d4:	ldr	x8, [x8]
  41d4d8:	stur	x8, [x29, #-32]
  41d4dc:	ldur	x8, [x29, #-32]
  41d4e0:	add	x8, x8, #0x10
  41d4e4:	stur	x8, [x29, #-40]
  41d4e8:	ldur	x8, [x29, #-40]
  41d4ec:	ldr	x8, [x8, #16]
  41d4f0:	ldur	x9, [x29, #-40]
  41d4f4:	ldr	x9, [x9, #8]
  41d4f8:	cmp	x8, x9
  41d4fc:	b.ne	41d520 <wcrtomb@plt+0x1ac10>  // b.any
  41d500:	ldur	x8, [x29, #-40]
  41d504:	ldr	x0, [x8]
  41d508:	ldur	x8, [x29, #-40]
  41d50c:	add	x1, x8, #0x8
  41d510:	mov	x2, #0x48                  	// #72
  41d514:	bl	423160 <wcrtomb@plt+0x20850>
  41d518:	ldur	x8, [x29, #-40]
  41d51c:	str	x0, [x8]
  41d520:	ldur	x8, [x29, #-40]
  41d524:	ldr	x8, [x8]
  41d528:	ldur	x9, [x29, #-40]
  41d52c:	ldr	x10, [x9, #16]
  41d530:	add	x11, x10, #0x1
  41d534:	str	x11, [x9, #16]
  41d538:	mov	x9, #0x48                  	// #72
  41d53c:	mul	x9, x9, x10
  41d540:	add	x8, x8, x9
  41d544:	str	x8, [sp, #48]
  41d548:	ldur	w12, [x29, #-20]
  41d54c:	ldr	x8, [sp, #48]
  41d550:	str	w12, [x8]
  41d554:	ldur	w12, [x29, #-20]
  41d558:	and	w12, w12, #0x8000000
  41d55c:	cbz	w12, 41d694 <wcrtomb@plt+0x1ad84>
  41d560:	ldur	w8, [x29, #-20]
  41d564:	mov	w9, wzr
  41d568:	mov	w10, #0x2                   	// #2
  41d56c:	tst	w8, #0x10
  41d570:	csel	w8, w10, w9, ne  // ne = any
  41d574:	mov	w9, #0x9                   	// #9
  41d578:	orr	w8, w9, w8
  41d57c:	str	w8, [sp, #40]
  41d580:	ldur	w8, [x29, #-20]
  41d584:	and	w8, w8, #0x8
  41d588:	cbz	w8, 41d65c <wcrtomb@plt+0x1ad4c>
  41d58c:	ldur	x0, [x29, #-16]
  41d590:	bl	4022f0 <strlen@plt>
  41d594:	str	x0, [sp, #24]
  41d598:	ldr	x8, [sp, #24]
  41d59c:	cmp	x8, #0x0
  41d5a0:	cset	w9, ls  // ls = plast
  41d5a4:	mov	w10, #0x0                   	// #0
  41d5a8:	str	w10, [sp]
  41d5ac:	tbnz	w9, #0, 41d5cc <wcrtomb@plt+0x1acbc>
  41d5b0:	ldur	x8, [x29, #-16]
  41d5b4:	ldr	x9, [sp, #24]
  41d5b8:	subs	x9, x9, #0x1
  41d5bc:	ldrb	w10, [x8, x9]
  41d5c0:	cmp	w10, #0x2f
  41d5c4:	cset	w10, eq  // eq = none
  41d5c8:	str	w10, [sp]
  41d5cc:	ldr	w8, [sp]
  41d5d0:	tbnz	w8, #0, 41d5d8 <wcrtomb@plt+0x1acc8>
  41d5d4:	b	41d5e8 <wcrtomb@plt+0x1acd8>
  41d5d8:	ldr	x8, [sp, #24]
  41d5dc:	subs	x8, x8, #0x1
  41d5e0:	str	x8, [sp, #24]
  41d5e4:	b	41d598 <wcrtomb@plt+0x1ac88>
  41d5e8:	ldr	x8, [sp, #24]
  41d5ec:	cbnz	x8, 41d5fc <wcrtomb@plt+0x1acec>
  41d5f0:	mov	w8, #0x1                   	// #1
  41d5f4:	str	w8, [sp, #44]
  41d5f8:	b	41d658 <wcrtomb@plt+0x1ad48>
  41d5fc:	ldr	x8, [sp, #24]
  41d600:	add	x0, x8, #0x7
  41d604:	bl	423058 <wcrtomb@plt+0x20748>
  41d608:	str	x0, [sp, #32]
  41d60c:	ldr	x0, [sp, #32]
  41d610:	ldur	x1, [x29, #-16]
  41d614:	ldr	x2, [sp, #24]
  41d618:	bl	402290 <memcpy@plt>
  41d61c:	ldr	x8, [sp, #32]
  41d620:	ldr	x9, [sp, #24]
  41d624:	add	x0, x8, x9
  41d628:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41d62c:	add	x1, x1, #0xb78
  41d630:	bl	402730 <strcpy@plt>
  41d634:	ldr	x8, [sp, #48]
  41d638:	add	x8, x8, #0x8
  41d63c:	ldr	x1, [sp, #32]
  41d640:	ldr	w2, [sp, #40]
  41d644:	mov	x0, x8
  41d648:	bl	428618 <_obstack_memory_used@@Base+0xcf8>
  41d64c:	str	w0, [sp, #44]
  41d650:	ldr	x0, [sp, #32]
  41d654:	bl	4026c0 <free@plt>
  41d658:	b	41d674 <wcrtomb@plt+0x1ad64>
  41d65c:	ldr	x8, [sp, #48]
  41d660:	add	x0, x8, #0x8
  41d664:	ldur	x1, [x29, #-16]
  41d668:	ldr	w2, [sp, #40]
  41d66c:	bl	428618 <_obstack_memory_used@@Base+0xcf8>
  41d670:	str	w0, [sp, #44]
  41d674:	ldr	w8, [sp, #44]
  41d678:	cbz	w8, 41d690 <wcrtomb@plt+0x1ad80>
  41d67c:	ldur	x8, [x29, #-40]
  41d680:	ldr	x9, [x8, #16]
  41d684:	subs	x9, x9, #0x1
  41d688:	str	x9, [x8, #16]
  41d68c:	b	41d794 <wcrtomb@plt+0x1ae84>
  41d690:	b	41d6c4 <wcrtomb@plt+0x1adb4>
  41d694:	ldur	w8, [x29, #-20]
  41d698:	and	w8, w8, #0x4000000
  41d69c:	cbz	w8, 41d6b8 <wcrtomb@plt+0x1ada8>
  41d6a0:	ldur	x0, [x29, #-16]
  41d6a4:	bl	423358 <wcrtomb@plt+0x20a48>
  41d6a8:	stur	x0, [x29, #-16]
  41d6ac:	ldur	x0, [x29, #-8]
  41d6b0:	ldur	x1, [x29, #-16]
  41d6b4:	bl	41cc24 <wcrtomb@plt+0x1a314>
  41d6b8:	ldur	x8, [x29, #-16]
  41d6bc:	ldr	x9, [sp, #48]
  41d6c0:	str	x8, [x9, #8]
  41d6c4:	b	41d794 <wcrtomb@plt+0x1ae84>
  41d6c8:	mov	w8, #0x18                  	// #24
  41d6cc:	movk	w8, #0x6000, lsl #16
  41d6d0:	str	w8, [sp, #4]
  41d6d4:	ldur	x9, [x29, #-8]
  41d6d8:	ldr	x9, [x9]
  41d6dc:	cbz	x9, 41d718 <wcrtomb@plt+0x1ae08>
  41d6e0:	ldur	x8, [x29, #-8]
  41d6e4:	ldr	x8, [x8]
  41d6e8:	ldr	w9, [x8, #8]
  41d6ec:	cbnz	w9, 41d718 <wcrtomb@plt+0x1ae08>
  41d6f0:	ldur	x8, [x29, #-8]
  41d6f4:	ldr	x8, [x8]
  41d6f8:	ldr	w9, [x8, #12]
  41d6fc:	ldr	w10, [sp, #4]
  41d700:	and	w9, w9, w10
  41d704:	ldur	w10, [x29, #-20]
  41d708:	ldr	w11, [sp, #4]
  41d70c:	and	w10, w10, w11
  41d710:	cmp	w9, w10
  41d714:	b.eq	41d72c <wcrtomb@plt+0x1ae1c>  // b.none
  41d718:	ldur	x0, [x29, #-8]
  41d71c:	ldur	w2, [x29, #-20]
  41d720:	mov	w8, wzr
  41d724:	mov	w1, w8
  41d728:	bl	41d7a0 <wcrtomb@plt+0x1ae90>
  41d72c:	ldur	x8, [x29, #-8]
  41d730:	ldr	x8, [x8]
  41d734:	stur	x8, [x29, #-32]
  41d738:	ldur	x0, [x29, #-16]
  41d73c:	bl	423358 <wcrtomb@plt+0x20a48>
  41d740:	str	x0, [sp, #16]
  41d744:	ldur	w9, [x29, #-20]
  41d748:	mov	w10, #0x2                   	// #2
  41d74c:	movk	w10, #0x1000, lsl #16
  41d750:	and	w9, w9, w10
  41d754:	mov	w10, #0x10000000            	// #268435456
  41d758:	cmp	w9, w10
  41d75c:	b.ne	41d768 <wcrtomb@plt+0x1ae58>  // b.any
  41d760:	ldr	x0, [sp, #16]
  41d764:	bl	41d88c <wcrtomb@plt+0x1af7c>
  41d768:	ldur	x8, [x29, #-32]
  41d76c:	ldr	x0, [x8, #16]
  41d770:	ldr	x1, [sp, #16]
  41d774:	bl	41f584 <wcrtomb@plt+0x1cc74>
  41d778:	str	x0, [sp, #8]
  41d77c:	ldr	x8, [sp, #8]
  41d780:	ldr	x9, [sp, #16]
  41d784:	cmp	x8, x9
  41d788:	b.eq	41d794 <wcrtomb@plt+0x1ae84>  // b.none
  41d78c:	ldr	x0, [sp, #16]
  41d790:	bl	4026c0 <free@plt>
  41d794:	ldp	x29, x30, [sp, #96]
  41d798:	add	sp, sp, #0x70
  41d79c:	ret
  41d7a0:	sub	sp, sp, #0x30
  41d7a4:	stp	x29, x30, [sp, #32]
  41d7a8:	add	x29, sp, #0x20
  41d7ac:	mov	x8, #0x28                  	// #40
  41d7b0:	stur	x0, [x29, #-8]
  41d7b4:	stur	w1, [x29, #-12]
  41d7b8:	str	w2, [sp, #16]
  41d7bc:	mov	x0, x8
  41d7c0:	bl	4232a0 <wcrtomb@plt+0x20990>
  41d7c4:	str	x0, [sp, #8]
  41d7c8:	ldur	w9, [x29, #-12]
  41d7cc:	ldr	x8, [sp, #8]
  41d7d0:	str	w9, [x8, #8]
  41d7d4:	ldr	w9, [sp, #16]
  41d7d8:	ldr	x8, [sp, #8]
  41d7dc:	str	w9, [x8, #12]
  41d7e0:	ldur	w9, [x29, #-12]
  41d7e4:	str	w9, [sp, #4]
  41d7e8:	cbz	w9, 41d80c <wcrtomb@plt+0x1aefc>
  41d7ec:	b	41d7f0 <wcrtomb@plt+0x1aee0>
  41d7f0:	ldr	w8, [sp, #4]
  41d7f4:	cmp	w8, #0x1
  41d7f8:	cset	w9, eq  // eq = none
  41d7fc:	eor	w9, w9, #0x1
  41d800:	tbnz	w9, #0, 41d864 <wcrtomb@plt+0x1af54>
  41d804:	b	41d808 <wcrtomb@plt+0x1aef8>
  41d808:	b	41d864 <wcrtomb@plt+0x1af54>
  41d80c:	ldr	w8, [sp, #16]
  41d810:	adrp	x9, 41d000 <wcrtomb@plt+0x1a6f0>
  41d814:	add	x9, x9, #0xe70
  41d818:	adrp	x10, 41d000 <wcrtomb@plt+0x1a6f0>
  41d81c:	add	x10, x10, #0xd3c
  41d820:	tst	w8, #0x10
  41d824:	csel	x2, x10, x9, ne  // ne = any
  41d828:	ldr	w8, [sp, #16]
  41d82c:	adrp	x9, 41d000 <wcrtomb@plt+0x1a6f0>
  41d830:	add	x9, x9, #0xeec
  41d834:	adrp	x10, 41d000 <wcrtomb@plt+0x1a6f0>
  41d838:	add	x10, x10, #0xea4
  41d83c:	tst	w8, #0x10
  41d840:	csel	x3, x10, x9, ne  // ne = any
  41d844:	mov	x9, xzr
  41d848:	mov	x0, x9
  41d84c:	mov	x1, x9
  41d850:	adrp	x4, 41d000 <wcrtomb@plt+0x1a6f0>
  41d854:	add	x4, x4, #0xf34
  41d858:	bl	41e6b8 <wcrtomb@plt+0x1bda8>
  41d85c:	ldr	x9, [sp, #8]
  41d860:	str	x0, [x9, #16]
  41d864:	ldur	x8, [x29, #-8]
  41d868:	ldr	x8, [x8]
  41d86c:	ldr	x9, [sp, #8]
  41d870:	str	x8, [x9]
  41d874:	ldr	x8, [sp, #8]
  41d878:	ldur	x9, [x29, #-8]
  41d87c:	str	x8, [x9]
  41d880:	ldp	x29, x30, [sp, #32]
  41d884:	add	sp, sp, #0x30
  41d888:	ret
  41d88c:	sub	sp, sp, #0x20
  41d890:	str	x0, [sp, #24]
  41d894:	ldr	x8, [sp, #24]
  41d898:	str	x8, [sp, #16]
  41d89c:	ldr	x8, [sp, #16]
  41d8a0:	ldrb	w9, [x8]
  41d8a4:	mov	w10, #0x0                   	// #0
  41d8a8:	cmp	w9, #0x5c
  41d8ac:	str	w10, [sp, #12]
  41d8b0:	b.ne	41d8c8 <wcrtomb@plt+0x1afb8>  // b.any
  41d8b4:	ldr	x8, [sp, #16]
  41d8b8:	ldrb	w9, [x8, #1]
  41d8bc:	cmp	w9, #0x0
  41d8c0:	cset	w9, ne  // ne = any
  41d8c4:	str	w9, [sp, #12]
  41d8c8:	ldr	w8, [sp, #12]
  41d8cc:	and	w8, w8, #0x1
  41d8d0:	ldr	x9, [sp, #16]
  41d8d4:	mov	w0, w8
  41d8d8:	sxtw	x10, w0
  41d8dc:	add	x9, x9, x10
  41d8e0:	str	x9, [sp, #16]
  41d8e4:	ldr	x8, [sp, #16]
  41d8e8:	add	x9, x8, #0x1
  41d8ec:	str	x9, [sp, #16]
  41d8f0:	ldrb	w10, [x8]
  41d8f4:	ldr	x8, [sp, #24]
  41d8f8:	add	x9, x8, #0x1
  41d8fc:	str	x9, [sp, #24]
  41d900:	strb	w10, [x8]
  41d904:	cbnz	w10, 41d89c <wcrtomb@plt+0x1af8c>
  41d908:	add	sp, sp, #0x20
  41d90c:	ret
  41d910:	sub	sp, sp, #0x90
  41d914:	stp	x29, x30, [sp, #128]
  41d918:	add	x29, sp, #0x80
  41d91c:	mov	x8, xzr
  41d920:	stur	x0, [x29, #-8]
  41d924:	stur	x1, [x29, #-16]
  41d928:	stur	x2, [x29, #-24]
  41d92c:	stur	w3, [x29, #-28]
  41d930:	sturb	w4, [x29, #-29]
  41d934:	stur	x5, [x29, #-40]
  41d938:	stur	x8, [x29, #-48]
  41d93c:	str	xzr, [sp, #48]
  41d940:	str	xzr, [sp, #40]
  41d944:	str	wzr, [sp, #32]
  41d948:	ldur	x0, [x29, #-24]
  41d94c:	bl	402590 <getc_unlocked@plt>
  41d950:	str	w0, [sp, #36]
  41d954:	mov	w8, #0xffffffff            	// #-1
  41d958:	cmp	w0, w8
  41d95c:	b.eq	41d9a0 <wcrtomb@plt+0x1b090>  // b.none
  41d960:	ldr	x8, [sp, #40]
  41d964:	ldr	x9, [sp, #48]
  41d968:	cmp	x8, x9
  41d96c:	b.ne	41d980 <wcrtomb@plt+0x1b070>  // b.any
  41d970:	ldur	x0, [x29, #-48]
  41d974:	add	x1, sp, #0x30
  41d978:	bl	423270 <wcrtomb@plt+0x20960>
  41d97c:	stur	x0, [x29, #-48]
  41d980:	ldr	w8, [sp, #36]
  41d984:	ldur	x9, [x29, #-48]
  41d988:	ldr	x10, [sp, #40]
  41d98c:	add	x11, x10, #0x1
  41d990:	str	x11, [sp, #40]
  41d994:	add	x9, x9, x10
  41d998:	strb	w8, [x9]
  41d99c:	b	41d948 <wcrtomb@plt+0x1b038>
  41d9a0:	ldur	x0, [x29, #-24]
  41d9a4:	bl	402370 <ferror_unlocked@plt>
  41d9a8:	cbz	w0, 41d9b8 <wcrtomb@plt+0x1b0a8>
  41d9ac:	bl	402870 <__errno_location@plt>
  41d9b0:	ldr	w8, [x0]
  41d9b4:	str	w8, [sp, #32]
  41d9b8:	ldur	x0, [x29, #-48]
  41d9bc:	ldr	x8, [sp, #40]
  41d9c0:	add	x1, x8, #0x1
  41d9c4:	bl	4230ec <wcrtomb@plt+0x207dc>
  41d9c8:	stur	x0, [x29, #-48]
  41d9cc:	ldurb	w9, [x29, #-29]
  41d9d0:	ldur	x8, [x29, #-48]
  41d9d4:	ldr	x10, [sp, #40]
  41d9d8:	add	x8, x8, x10
  41d9dc:	strb	w9, [x8]
  41d9e0:	ldur	x8, [x29, #-48]
  41d9e4:	ldr	x10, [sp, #40]
  41d9e8:	add	x8, x8, x10
  41d9ec:	ldr	x10, [sp, #40]
  41d9f0:	mov	w9, #0x1                   	// #1
  41d9f4:	str	x8, [sp, #16]
  41d9f8:	str	w9, [sp, #12]
  41d9fc:	cbz	x10, 41da20 <wcrtomb@plt+0x1b110>
  41da00:	ldur	x8, [x29, #-48]
  41da04:	ldr	x9, [sp, #40]
  41da08:	subs	x9, x9, #0x1
  41da0c:	ldrb	w10, [x8, x9]
  41da10:	ldurb	w11, [x29, #-29]
  41da14:	cmp	w10, w11
  41da18:	cset	w10, eq  // eq = none
  41da1c:	str	w10, [sp, #12]
  41da20:	ldr	w8, [sp, #12]
  41da24:	eor	w8, w8, #0x1
  41da28:	and	w8, w8, #0x1
  41da2c:	mov	w0, w8
  41da30:	sxtw	x9, w0
  41da34:	ldr	x10, [sp, #16]
  41da38:	add	x9, x10, x9
  41da3c:	str	x9, [sp, #56]
  41da40:	ldur	x0, [x29, #-16]
  41da44:	ldur	x1, [x29, #-48]
  41da48:	bl	41cc24 <wcrtomb@plt+0x1a314>
  41da4c:	ldur	x9, [x29, #-48]
  41da50:	str	x9, [sp, #64]
  41da54:	ldur	x9, [x29, #-48]
  41da58:	stur	x9, [x29, #-56]
  41da5c:	ldur	x8, [x29, #-56]
  41da60:	ldr	x9, [sp, #56]
  41da64:	cmp	x8, x9
  41da68:	b.cs	41db28 <wcrtomb@plt+0x1b218>  // b.hs, b.nlast
  41da6c:	ldur	x8, [x29, #-56]
  41da70:	ldrb	w9, [x8]
  41da74:	ldurb	w10, [x29, #-29]
  41da78:	cmp	w9, w10
  41da7c:	b.ne	41db18 <wcrtomb@plt+0x1b208>  // b.any
  41da80:	ldur	x8, [x29, #-56]
  41da84:	str	x8, [sp, #24]
  41da88:	bl	4026b0 <__ctype_b_loc@plt>
  41da8c:	ldr	x8, [x0]
  41da90:	ldurb	w9, [x29, #-29]
  41da94:	ldrh	w9, [x8, w9, sxtw #1]
  41da98:	and	w9, w9, #0x2000
  41da9c:	cbz	w9, 41dae8 <wcrtomb@plt+0x1b1d8>
  41daa0:	ldr	x8, [sp, #24]
  41daa4:	ldr	x9, [sp, #64]
  41daa8:	cmp	x8, x9
  41daac:	b.ne	41dab4 <wcrtomb@plt+0x1b1a4>  // b.any
  41dab0:	b	41db0c <wcrtomb@plt+0x1b1fc>
  41dab4:	bl	4026b0 <__ctype_b_loc@plt>
  41dab8:	ldr	x8, [x0]
  41dabc:	ldr	x9, [sp, #24]
  41dac0:	ldurb	w10, [x9, #-1]
  41dac4:	ldrh	w10, [x8, w10, sxtw #1]
  41dac8:	and	w10, w10, #0x2000
  41dacc:	cbnz	w10, 41dad4 <wcrtomb@plt+0x1b1c4>
  41dad0:	b	41dae8 <wcrtomb@plt+0x1b1d8>
  41dad4:	ldr	x8, [sp, #24]
  41dad8:	mov	x9, #0xffffffffffffffff    	// #-1
  41dadc:	add	x8, x8, x9
  41dae0:	str	x8, [sp, #24]
  41dae4:	b	41daa0 <wcrtomb@plt+0x1b190>
  41dae8:	ldr	x8, [sp, #24]
  41daec:	mov	w9, #0x0                   	// #0
  41daf0:	strb	w9, [x8]
  41daf4:	ldur	x8, [x29, #-8]
  41daf8:	ldur	x0, [x29, #-16]
  41dafc:	ldr	x1, [sp, #64]
  41db00:	ldur	w2, [x29, #-28]
  41db04:	ldur	x3, [x29, #-40]
  41db08:	blr	x8
  41db0c:	ldur	x8, [x29, #-56]
  41db10:	add	x8, x8, #0x1
  41db14:	str	x8, [sp, #64]
  41db18:	ldur	x8, [x29, #-56]
  41db1c:	add	x8, x8, #0x1
  41db20:	stur	x8, [x29, #-56]
  41db24:	b	41da5c <wcrtomb@plt+0x1b14c>
  41db28:	ldr	w8, [sp, #32]
  41db2c:	str	w8, [sp, #8]
  41db30:	bl	402870 <__errno_location@plt>
  41db34:	ldr	w8, [sp, #8]
  41db38:	str	w8, [x0]
  41db3c:	ldr	w9, [sp, #32]
  41db40:	mov	w10, wzr
  41db44:	mov	w11, #0xffffffff            	// #-1
  41db48:	cmp	w9, #0x0
  41db4c:	csel	w0, w11, w10, ne  // ne = any
  41db50:	ldp	x29, x30, [sp, #128]
  41db54:	add	sp, sp, #0x90
  41db58:	ret
  41db5c:	sub	sp, sp, #0x50
  41db60:	stp	x29, x30, [sp, #64]
  41db64:	add	x29, sp, #0x40
  41db68:	stur	x0, [x29, #-16]
  41db6c:	stur	x1, [x29, #-24]
  41db70:	str	x2, [sp, #32]
  41db74:	str	w3, [sp, #28]
  41db78:	strb	w4, [sp, #27]
  41db7c:	ldr	x8, [sp, #32]
  41db80:	ldrb	w9, [x8]
  41db84:	mov	w10, #0x0                   	// #0
  41db88:	cmp	w9, #0x2d
  41db8c:	str	w10, [sp, #8]
  41db90:	b.ne	41dbac <wcrtomb@plt+0x1b29c>  // b.any
  41db94:	ldr	x8, [sp, #32]
  41db98:	ldrb	w9, [x8, #1]
  41db9c:	cmp	w9, #0x0
  41dba0:	cset	w9, ne  // ne = any
  41dba4:	eor	w9, w9, #0x1
  41dba8:	str	w9, [sp, #8]
  41dbac:	ldr	w8, [sp, #8]
  41dbb0:	and	w8, w8, #0x1
  41dbb4:	strb	w8, [sp, #26]
  41dbb8:	str	wzr, [sp, #12]
  41dbbc:	ldrb	w8, [sp, #26]
  41dbc0:	tbnz	w8, #0, 41dbc8 <wcrtomb@plt+0x1b2b8>
  41dbc4:	b	41dbdc <wcrtomb@plt+0x1b2cc>
  41dbc8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  41dbcc:	add	x8, x8, #0x460
  41dbd0:	ldr	x8, [x8]
  41dbd4:	str	x8, [sp, #16]
  41dbd8:	b	41dc00 <wcrtomb@plt+0x1b2f0>
  41dbdc:	ldr	x0, [sp, #32]
  41dbe0:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  41dbe4:	add	x1, x1, #0xe83
  41dbe8:	bl	402420 <fopen@plt>
  41dbec:	str	x0, [sp, #16]
  41dbf0:	cbnz	x0, 41dc00 <wcrtomb@plt+0x1b2f0>
  41dbf4:	mov	w8, #0xffffffff            	// #-1
  41dbf8:	stur	w8, [x29, #-4]
  41dbfc:	b	41dc48 <wcrtomb@plt+0x1b338>
  41dc00:	ldur	x1, [x29, #-24]
  41dc04:	ldr	x2, [sp, #16]
  41dc08:	ldr	w3, [sp, #28]
  41dc0c:	ldrb	w4, [sp, #27]
  41dc10:	adrp	x0, 41d000 <wcrtomb@plt+0x1a6f0>
  41dc14:	add	x0, x0, #0xc58
  41dc18:	sub	x5, x29, #0x10
  41dc1c:	bl	41d910 <wcrtomb@plt+0x1b000>
  41dc20:	str	w0, [sp, #12]
  41dc24:	ldrb	w8, [sp, #26]
  41dc28:	tbnz	w8, #0, 41dc40 <wcrtomb@plt+0x1b330>
  41dc2c:	ldr	x0, [sp, #16]
  41dc30:	bl	4023f0 <fclose@plt>
  41dc34:	cbz	w0, 41dc40 <wcrtomb@plt+0x1b330>
  41dc38:	mov	w8, #0xffffffff            	// #-1
  41dc3c:	str	w8, [sp, #12]
  41dc40:	ldr	w8, [sp, #12]
  41dc44:	stur	w8, [x29, #-4]
  41dc48:	ldur	w0, [x29, #-4]
  41dc4c:	ldp	x29, x30, [sp, #64]
  41dc50:	add	sp, sp, #0x50
  41dc54:	ret
  41dc58:	sub	sp, sp, #0x40
  41dc5c:	stp	x29, x30, [sp, #48]
  41dc60:	add	x29, sp, #0x30
  41dc64:	stur	x0, [x29, #-8]
  41dc68:	stur	x1, [x29, #-16]
  41dc6c:	stur	w2, [x29, #-20]
  41dc70:	str	x3, [sp, #16]
  41dc74:	ldr	x8, [sp, #16]
  41dc78:	str	x8, [sp, #8]
  41dc7c:	ldr	x8, [sp, #8]
  41dc80:	ldr	x8, [x8]
  41dc84:	ldur	x0, [x29, #-8]
  41dc88:	ldur	x1, [x29, #-16]
  41dc8c:	ldur	w2, [x29, #-20]
  41dc90:	blr	x8
  41dc94:	ldp	x29, x30, [sp, #48]
  41dc98:	add	sp, sp, #0x40
  41dc9c:	ret
  41dca0:	sub	sp, sp, #0x30
  41dca4:	stp	x29, x30, [sp, #32]
  41dca8:	add	x29, sp, #0x20
  41dcac:	stur	x0, [x29, #-8]
  41dcb0:	str	x1, [sp, #16]
  41dcb4:	ldur	x8, [x29, #-8]
  41dcb8:	ldr	w9, [x8]
  41dcbc:	str	w9, [sp, #12]
  41dcc0:	ldr	w9, [sp, #12]
  41dcc4:	and	w9, w9, #0x8000000
  41dcc8:	cbz	w9, 41dd04 <wcrtomb@plt+0x1b3f4>
  41dccc:	ldur	x8, [x29, #-8]
  41dcd0:	add	x0, x8, #0x8
  41dcd4:	ldr	x1, [sp, #16]
  41dcd8:	mov	x8, xzr
  41dcdc:	mov	x2, x8
  41dce0:	mov	x3, x8
  41dce4:	mov	w9, wzr
  41dce8:	mov	w4, w9
  41dcec:	bl	428bfc <_obstack_memory_used@@Base+0x12dc>
  41dcf0:	cmp	w0, #0x0
  41dcf4:	cset	w9, eq  // eq = none
  41dcf8:	and	w9, w9, #0x1
  41dcfc:	str	w9, [sp, #8]
  41dd00:	b	41dd20 <wcrtomb@plt+0x1b410>
  41dd04:	ldur	x8, [x29, #-8]
  41dd08:	ldr	x0, [x8, #8]
  41dd0c:	ldr	x1, [sp, #16]
  41dd10:	ldr	w2, [sp, #12]
  41dd14:	bl	41cf28 <wcrtomb@plt+0x1a618>
  41dd18:	and	w9, w0, #0x1
  41dd1c:	str	w9, [sp, #8]
  41dd20:	ldr	w8, [sp, #8]
  41dd24:	cmp	w8, #0x0
  41dd28:	cset	w8, ne  // ne = any
  41dd2c:	and	w0, w8, #0x1
  41dd30:	ldp	x29, x30, [sp, #32]
  41dd34:	add	sp, sp, #0x30
  41dd38:	ret
  41dd3c:	sub	sp, sp, #0xd0
  41dd40:	stp	x29, x30, [sp, #192]
  41dd44:	add	x29, sp, #0xc0
  41dd48:	sub	x8, x29, #0x10
  41dd4c:	mov	w9, #0x0                   	// #0
  41dd50:	sub	x10, x29, #0x58
  41dd54:	str	x0, [x8, #8]
  41dd58:	str	x1, [x8]
  41dd5c:	ldr	x11, [x8, #8]
  41dd60:	stur	x11, [x29, #-24]
  41dd64:	str	xzr, [sp, #96]
  41dd68:	ldur	x11, [x29, #-24]
  41dd6c:	str	x11, [x10, #16]
  41dd70:	sturb	w9, [x29, #-88]
  41dd74:	stur	xzr, [x10, #4]
  41dd78:	strb	w9, [x10, #12]
  41dd7c:	str	x8, [sp, #32]
  41dd80:	sub	x8, x29, #0x58
  41dd84:	mov	x0, x8
  41dd88:	str	x8, [sp, #24]
  41dd8c:	bl	41fdb4 <wcrtomb@plt+0x1d4a4>
  41dd90:	ldr	x8, [sp, #24]
  41dd94:	ldrb	w9, [x8, #32]
  41dd98:	mov	w10, #0x0                   	// #0
  41dd9c:	str	w10, [sp, #20]
  41dda0:	tbnz	w9, #0, 41dda8 <wcrtomb@plt+0x1b498>
  41dda4:	b	41ddb8 <wcrtomb@plt+0x1b4a8>
  41dda8:	ldur	w8, [x29, #-52]
  41ddac:	cmp	w8, #0x0
  41ddb0:	cset	w8, eq  // eq = none
  41ddb4:	str	w8, [sp, #20]
  41ddb8:	ldr	w8, [sp, #20]
  41ddbc:	eor	w8, w8, #0x1
  41ddc0:	tbnz	w8, #0, 41ddc8 <wcrtomb@plt+0x1b4b8>
  41ddc4:	b	41de60 <wcrtomb@plt+0x1b550>
  41ddc8:	sub	x8, x29, #0x58
  41ddcc:	add	x1, x8, #0x10
  41ddd0:	add	x8, sp, #0x30
  41ddd4:	mov	x0, x8
  41ddd8:	mov	x2, #0x30                  	// #48
  41dddc:	str	x8, [sp, #8]
  41dde0:	bl	402290 <memcpy@plt>
  41dde4:	ldr	x8, [sp, #8]
  41dde8:	ldrb	w9, [x8, #16]
  41ddec:	tbnz	w9, #0, 41ddf4 <wcrtomb@plt+0x1b4e4>
  41ddf0:	b	41de04 <wcrtomb@plt+0x1b4f4>
  41ddf4:	ldr	w0, [sp, #68]
  41ddf8:	bl	4028c0 <towlower@plt>
  41ddfc:	str	w0, [sp, #44]
  41de00:	b	41de10 <wcrtomb@plt+0x1b500>
  41de04:	ldr	x8, [sp, #48]
  41de08:	ldrb	w9, [x8]
  41de0c:	str	w9, [sp, #44]
  41de10:	ldr	x8, [sp, #96]
  41de14:	mov	x9, #0x1f                  	// #31
  41de18:	mul	x8, x8, x9
  41de1c:	ldr	w10, [sp, #44]
  41de20:	mov	w9, w10
  41de24:	add	x8, x8, x9
  41de28:	ldr	x9, [sp, #32]
  41de2c:	ldr	x11, [x9]
  41de30:	udiv	x12, x8, x11
  41de34:	mul	x11, x12, x11
  41de38:	subs	x8, x8, x11
  41de3c:	str	x8, [sp, #96]
  41de40:	sub	x8, x29, #0x58
  41de44:	ldur	x9, [x29, #-64]
  41de48:	ldr	x10, [x8, #16]
  41de4c:	add	x9, x10, x9
  41de50:	str	x9, [x8, #16]
  41de54:	mov	w11, #0x0                   	// #0
  41de58:	strb	w11, [x8, #12]
  41de5c:	b	41dd80 <wcrtomb@plt+0x1b470>
  41de60:	ldr	x0, [sp, #96]
  41de64:	ldp	x29, x30, [sp, #192]
  41de68:	add	sp, sp, #0xd0
  41de6c:	ret
  41de70:	sub	sp, sp, #0x30
  41de74:	stp	x29, x30, [sp, #32]
  41de78:	add	x29, sp, #0x20
  41de7c:	stur	x0, [x29, #-8]
  41de80:	str	x1, [sp, #16]
  41de84:	ldur	x8, [x29, #-8]
  41de88:	str	x8, [sp, #8]
  41de8c:	ldr	x0, [sp, #8]
  41de90:	ldr	x1, [sp, #16]
  41de94:	bl	41e624 <wcrtomb@plt+0x1bd14>
  41de98:	ldp	x29, x30, [sp, #32]
  41de9c:	add	sp, sp, #0x30
  41dea0:	ret
  41dea4:	sub	sp, sp, #0x30
  41dea8:	stp	x29, x30, [sp, #32]
  41deac:	add	x29, sp, #0x20
  41deb0:	stur	x0, [x29, #-8]
  41deb4:	str	x1, [sp, #16]
  41deb8:	ldur	x8, [x29, #-8]
  41debc:	str	x8, [sp, #8]
  41dec0:	ldr	x8, [sp, #16]
  41dec4:	str	x8, [sp]
  41dec8:	ldr	x0, [sp, #8]
  41decc:	ldr	x1, [sp]
  41ded0:	bl	41f958 <wcrtomb@plt+0x1d048>
  41ded4:	cmp	w0, #0x0
  41ded8:	cset	w9, eq  // eq = none
  41dedc:	and	w0, w9, #0x1
  41dee0:	ldp	x29, x30, [sp, #32]
  41dee4:	add	sp, sp, #0x30
  41dee8:	ret
  41deec:	sub	sp, sp, #0x30
  41def0:	stp	x29, x30, [sp, #32]
  41def4:	add	x29, sp, #0x20
  41def8:	stur	x0, [x29, #-8]
  41defc:	str	x1, [sp, #16]
  41df00:	ldur	x8, [x29, #-8]
  41df04:	str	x8, [sp, #8]
  41df08:	ldr	x8, [sp, #16]
  41df0c:	str	x8, [sp]
  41df10:	ldr	x0, [sp, #8]
  41df14:	ldr	x1, [sp]
  41df18:	bl	4026a0 <strcmp@plt>
  41df1c:	cmp	w0, #0x0
  41df20:	cset	w9, eq  // eq = none
  41df24:	and	w0, w9, #0x1
  41df28:	ldp	x29, x30, [sp, #32]
  41df2c:	add	sp, sp, #0x30
  41df30:	ret
  41df34:	sub	sp, sp, #0x20
  41df38:	stp	x29, x30, [sp, #16]
  41df3c:	add	x29, sp, #0x10
  41df40:	str	x0, [sp, #8]
  41df44:	ldr	x0, [sp, #8]
  41df48:	bl	4026c0 <free@plt>
  41df4c:	ldp	x29, x30, [sp, #16]
  41df50:	add	sp, sp, #0x20
  41df54:	ret
  41df58:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  41df5c:	add	x8, x8, #0x468
  41df60:	ldr	x0, [x8]
  41df64:	ret
  41df68:	sub	sp, sp, #0x10
  41df6c:	str	x0, [sp, #8]
  41df70:	ldr	x8, [sp, #8]
  41df74:	ldr	x0, [x8, #16]
  41df78:	add	sp, sp, #0x10
  41df7c:	ret
  41df80:	sub	sp, sp, #0x10
  41df84:	str	x0, [sp, #8]
  41df88:	ldr	x8, [sp, #8]
  41df8c:	ldr	x0, [x8, #24]
  41df90:	add	sp, sp, #0x10
  41df94:	ret
  41df98:	sub	sp, sp, #0x10
  41df9c:	str	x0, [sp, #8]
  41dfa0:	ldr	x8, [sp, #8]
  41dfa4:	ldr	x0, [x8, #32]
  41dfa8:	add	sp, sp, #0x10
  41dfac:	ret
  41dfb0:	sub	sp, sp, #0x30
  41dfb4:	str	x0, [sp, #40]
  41dfb8:	str	xzr, [sp, #24]
  41dfbc:	ldr	x8, [sp, #40]
  41dfc0:	ldr	x8, [x8]
  41dfc4:	str	x8, [sp, #32]
  41dfc8:	ldr	x8, [sp, #32]
  41dfcc:	ldr	x9, [sp, #40]
  41dfd0:	ldr	x9, [x9, #8]
  41dfd4:	cmp	x8, x9
  41dfd8:	b.cs	41e044 <wcrtomb@plt+0x1b734>  // b.hs, b.nlast
  41dfdc:	ldr	x8, [sp, #32]
  41dfe0:	ldr	x8, [x8]
  41dfe4:	cbz	x8, 41e034 <wcrtomb@plt+0x1b724>
  41dfe8:	ldr	x8, [sp, #32]
  41dfec:	str	x8, [sp, #16]
  41dff0:	mov	x8, #0x1                   	// #1
  41dff4:	str	x8, [sp, #8]
  41dff8:	ldr	x8, [sp, #16]
  41dffc:	ldr	x8, [x8, #8]
  41e000:	str	x8, [sp, #16]
  41e004:	ldr	x8, [sp, #16]
  41e008:	cbz	x8, 41e01c <wcrtomb@plt+0x1b70c>
  41e00c:	ldr	x8, [sp, #8]
  41e010:	add	x8, x8, #0x1
  41e014:	str	x8, [sp, #8]
  41e018:	b	41dff8 <wcrtomb@plt+0x1b6e8>
  41e01c:	ldr	x8, [sp, #8]
  41e020:	ldr	x9, [sp, #24]
  41e024:	cmp	x8, x9
  41e028:	b.ls	41e034 <wcrtomb@plt+0x1b724>  // b.plast
  41e02c:	ldr	x8, [sp, #8]
  41e030:	str	x8, [sp, #24]
  41e034:	ldr	x8, [sp, #32]
  41e038:	add	x8, x8, #0x10
  41e03c:	str	x8, [sp, #32]
  41e040:	b	41dfc8 <wcrtomb@plt+0x1b6b8>
  41e044:	ldr	x0, [sp, #24]
  41e048:	add	sp, sp, #0x30
  41e04c:	ret
  41e050:	sub	sp, sp, #0x30
  41e054:	str	x0, [sp, #32]
  41e058:	str	xzr, [sp, #16]
  41e05c:	str	xzr, [sp, #8]
  41e060:	ldr	x8, [sp, #32]
  41e064:	ldr	x8, [x8]
  41e068:	str	x8, [sp, #24]
  41e06c:	ldr	x8, [sp, #24]
  41e070:	ldr	x9, [sp, #32]
  41e074:	ldr	x9, [x9, #8]
  41e078:	cmp	x8, x9
  41e07c:	b.cs	41e0e0 <wcrtomb@plt+0x1b7d0>  // b.hs, b.nlast
  41e080:	ldr	x8, [sp, #24]
  41e084:	ldr	x8, [x8]
  41e088:	cbz	x8, 41e0d0 <wcrtomb@plt+0x1b7c0>
  41e08c:	ldr	x8, [sp, #24]
  41e090:	str	x8, [sp]
  41e094:	ldr	x8, [sp, #16]
  41e098:	add	x8, x8, #0x1
  41e09c:	str	x8, [sp, #16]
  41e0a0:	ldr	x8, [sp, #8]
  41e0a4:	add	x8, x8, #0x1
  41e0a8:	str	x8, [sp, #8]
  41e0ac:	ldr	x8, [sp]
  41e0b0:	ldr	x8, [x8, #8]
  41e0b4:	str	x8, [sp]
  41e0b8:	ldr	x8, [sp]
  41e0bc:	cbz	x8, 41e0d0 <wcrtomb@plt+0x1b7c0>
  41e0c0:	ldr	x8, [sp, #8]
  41e0c4:	add	x8, x8, #0x1
  41e0c8:	str	x8, [sp, #8]
  41e0cc:	b	41e0ac <wcrtomb@plt+0x1b79c>
  41e0d0:	ldr	x8, [sp, #24]
  41e0d4:	add	x8, x8, #0x10
  41e0d8:	str	x8, [sp, #24]
  41e0dc:	b	41e06c <wcrtomb@plt+0x1b75c>
  41e0e0:	ldr	x8, [sp, #16]
  41e0e4:	ldr	x9, [sp, #32]
  41e0e8:	ldr	x9, [x9, #24]
  41e0ec:	cmp	x8, x9
  41e0f0:	b.ne	41e118 <wcrtomb@plt+0x1b808>  // b.any
  41e0f4:	ldr	x8, [sp, #8]
  41e0f8:	ldr	x9, [sp, #32]
  41e0fc:	ldr	x9, [x9, #32]
  41e100:	cmp	x8, x9
  41e104:	b.ne	41e118 <wcrtomb@plt+0x1b808>  // b.any
  41e108:	mov	w8, #0x1                   	// #1
  41e10c:	and	w8, w8, #0x1
  41e110:	strb	w8, [sp, #47]
  41e114:	b	41e124 <wcrtomb@plt+0x1b814>
  41e118:	mov	w8, wzr
  41e11c:	and	w8, w8, #0x1
  41e120:	strb	w8, [sp, #47]
  41e124:	ldrb	w8, [sp, #47]
  41e128:	and	w0, w8, #0x1
  41e12c:	add	sp, sp, #0x30
  41e130:	ret
  41e134:	sub	sp, sp, #0x70
  41e138:	stp	x29, x30, [sp, #96]
  41e13c:	add	x29, sp, #0x60
  41e140:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e144:	add	x8, x8, #0xb7f
  41e148:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e14c:	add	x9, x9, #0xb97
  41e150:	mov	x10, #0x4059000000000000    	// #4636737291354636288
  41e154:	fmov	d0, x10
  41e158:	adrp	x10, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e15c:	add	x10, x10, #0xbaf
  41e160:	adrp	x11, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e164:	add	x11, x11, #0xbd0
  41e168:	stur	x0, [x29, #-8]
  41e16c:	stur	x1, [x29, #-16]
  41e170:	ldur	x0, [x29, #-8]
  41e174:	str	x8, [sp, #40]
  41e178:	str	x9, [sp, #32]
  41e17c:	str	d0, [sp, #24]
  41e180:	str	x10, [sp, #16]
  41e184:	str	x11, [sp, #8]
  41e188:	bl	41df98 <wcrtomb@plt+0x1b688>
  41e18c:	stur	x0, [x29, #-24]
  41e190:	ldur	x0, [x29, #-8]
  41e194:	bl	41df68 <wcrtomb@plt+0x1b658>
  41e198:	stur	x0, [x29, #-32]
  41e19c:	ldur	x0, [x29, #-8]
  41e1a0:	bl	41df80 <wcrtomb@plt+0x1b670>
  41e1a4:	stur	x0, [x29, #-40]
  41e1a8:	ldur	x0, [x29, #-8]
  41e1ac:	bl	41dfb0 <wcrtomb@plt+0x1b6a0>
  41e1b0:	str	x0, [sp, #48]
  41e1b4:	ldur	x0, [x29, #-16]
  41e1b8:	ldur	x2, [x29, #-24]
  41e1bc:	ldr	x1, [sp, #40]
  41e1c0:	bl	4028d0 <fprintf@plt>
  41e1c4:	ldur	x8, [x29, #-16]
  41e1c8:	ldur	x2, [x29, #-32]
  41e1cc:	mov	x0, x8
  41e1d0:	ldr	x1, [sp, #32]
  41e1d4:	bl	4028d0 <fprintf@plt>
  41e1d8:	ldur	x8, [x29, #-16]
  41e1dc:	ldur	x2, [x29, #-40]
  41e1e0:	ldur	x9, [x29, #-40]
  41e1e4:	ucvtf	d0, x9
  41e1e8:	ldr	d1, [sp, #24]
  41e1ec:	fmul	d0, d1, d0
  41e1f0:	ldur	x9, [x29, #-32]
  41e1f4:	ucvtf	d2, x9
  41e1f8:	fdiv	d0, d0, d2
  41e1fc:	mov	x0, x8
  41e200:	ldr	x1, [sp, #16]
  41e204:	bl	4028d0 <fprintf@plt>
  41e208:	ldur	x8, [x29, #-16]
  41e20c:	ldr	x2, [sp, #48]
  41e210:	mov	x0, x8
  41e214:	ldr	x1, [sp, #8]
  41e218:	bl	4028d0 <fprintf@plt>
  41e21c:	ldp	x29, x30, [sp, #96]
  41e220:	add	sp, sp, #0x70
  41e224:	ret
  41e228:	sub	sp, sp, #0x40
  41e22c:	stp	x29, x30, [sp, #48]
  41e230:	add	x29, sp, #0x30
  41e234:	stur	x0, [x29, #-16]
  41e238:	str	x1, [sp, #24]
  41e23c:	ldur	x0, [x29, #-16]
  41e240:	ldr	x1, [sp, #24]
  41e244:	bl	41e2e0 <wcrtomb@plt+0x1b9d0>
  41e248:	str	x0, [sp, #16]
  41e24c:	ldr	x8, [sp, #16]
  41e250:	ldr	x8, [x8]
  41e254:	cbnz	x8, 41e264 <wcrtomb@plt+0x1b954>
  41e258:	mov	x8, xzr
  41e25c:	stur	x8, [x29, #-8]
  41e260:	b	41e2d0 <wcrtomb@plt+0x1b9c0>
  41e264:	ldr	x8, [sp, #16]
  41e268:	str	x8, [sp, #8]
  41e26c:	ldr	x8, [sp, #8]
  41e270:	cbz	x8, 41e2c8 <wcrtomb@plt+0x1b9b8>
  41e274:	ldr	x8, [sp, #24]
  41e278:	ldr	x9, [sp, #8]
  41e27c:	ldr	x9, [x9]
  41e280:	cmp	x8, x9
  41e284:	b.eq	41e2a8 <wcrtomb@plt+0x1b998>  // b.none
  41e288:	ldur	x8, [x29, #-16]
  41e28c:	ldr	x8, [x8, #56]
  41e290:	ldr	x0, [sp, #24]
  41e294:	ldr	x9, [sp, #8]
  41e298:	ldr	x1, [x9]
  41e29c:	blr	x8
  41e2a0:	tbnz	w0, #0, 41e2a8 <wcrtomb@plt+0x1b998>
  41e2a4:	b	41e2b8 <wcrtomb@plt+0x1b9a8>
  41e2a8:	ldr	x8, [sp, #8]
  41e2ac:	ldr	x8, [x8]
  41e2b0:	stur	x8, [x29, #-8]
  41e2b4:	b	41e2d0 <wcrtomb@plt+0x1b9c0>
  41e2b8:	ldr	x8, [sp, #8]
  41e2bc:	ldr	x8, [x8, #8]
  41e2c0:	str	x8, [sp, #8]
  41e2c4:	b	41e26c <wcrtomb@plt+0x1b95c>
  41e2c8:	mov	x8, xzr
  41e2cc:	stur	x8, [x29, #-8]
  41e2d0:	ldur	x0, [x29, #-8]
  41e2d4:	ldp	x29, x30, [sp, #48]
  41e2d8:	add	sp, sp, #0x40
  41e2dc:	ret
  41e2e0:	sub	sp, sp, #0x30
  41e2e4:	stp	x29, x30, [sp, #32]
  41e2e8:	add	x29, sp, #0x20
  41e2ec:	stur	x0, [x29, #-8]
  41e2f0:	str	x1, [sp, #16]
  41e2f4:	ldur	x8, [x29, #-8]
  41e2f8:	ldr	x8, [x8, #48]
  41e2fc:	ldr	x0, [sp, #16]
  41e300:	ldur	x9, [x29, #-8]
  41e304:	ldr	x1, [x9, #16]
  41e308:	blr	x8
  41e30c:	str	x0, [sp, #8]
  41e310:	ldr	x8, [sp, #8]
  41e314:	ldur	x9, [x29, #-8]
  41e318:	ldr	x9, [x9, #16]
  41e31c:	cmp	x8, x9
  41e320:	b.cc	41e328 <wcrtomb@plt+0x1ba18>  // b.lo, b.ul, b.last
  41e324:	bl	402610 <abort@plt>
  41e328:	ldur	x8, [x29, #-8]
  41e32c:	ldr	x8, [x8]
  41e330:	ldr	x9, [sp, #8]
  41e334:	mov	x10, #0x10                  	// #16
  41e338:	mul	x9, x10, x9
  41e33c:	add	x0, x8, x9
  41e340:	ldp	x29, x30, [sp, #32]
  41e344:	add	sp, sp, #0x30
  41e348:	ret
  41e34c:	sub	sp, sp, #0x30
  41e350:	stp	x29, x30, [sp, #32]
  41e354:	add	x29, sp, #0x20
  41e358:	str	x0, [sp, #16]
  41e35c:	ldr	x8, [sp, #16]
  41e360:	ldr	x8, [x8, #32]
  41e364:	cbnz	x8, 41e374 <wcrtomb@plt+0x1ba64>
  41e368:	mov	x8, xzr
  41e36c:	stur	x8, [x29, #-8]
  41e370:	b	41e3c4 <wcrtomb@plt+0x1bab4>
  41e374:	ldr	x8, [sp, #16]
  41e378:	ldr	x8, [x8]
  41e37c:	str	x8, [sp, #8]
  41e380:	ldr	x8, [sp, #8]
  41e384:	ldr	x9, [sp, #16]
  41e388:	ldr	x9, [x9, #8]
  41e38c:	cmp	x8, x9
  41e390:	b.cc	41e398 <wcrtomb@plt+0x1ba88>  // b.lo, b.ul, b.last
  41e394:	bl	402610 <abort@plt>
  41e398:	ldr	x8, [sp, #8]
  41e39c:	ldr	x8, [x8]
  41e3a0:	cbz	x8, 41e3b4 <wcrtomb@plt+0x1baa4>
  41e3a4:	ldr	x8, [sp, #8]
  41e3a8:	ldr	x8, [x8]
  41e3ac:	stur	x8, [x29, #-8]
  41e3b0:	b	41e3c4 <wcrtomb@plt+0x1bab4>
  41e3b4:	ldr	x8, [sp, #8]
  41e3b8:	add	x8, x8, #0x10
  41e3bc:	str	x8, [sp, #8]
  41e3c0:	b	41e380 <wcrtomb@plt+0x1ba70>
  41e3c4:	ldur	x0, [x29, #-8]
  41e3c8:	ldp	x29, x30, [sp, #32]
  41e3cc:	add	sp, sp, #0x30
  41e3d0:	ret
  41e3d4:	sub	sp, sp, #0x40
  41e3d8:	stp	x29, x30, [sp, #48]
  41e3dc:	add	x29, sp, #0x30
  41e3e0:	stur	x0, [x29, #-16]
  41e3e4:	str	x1, [sp, #24]
  41e3e8:	ldur	x0, [x29, #-16]
  41e3ec:	ldr	x1, [sp, #24]
  41e3f0:	bl	41e2e0 <wcrtomb@plt+0x1b9d0>
  41e3f4:	str	x0, [sp, #16]
  41e3f8:	ldr	x8, [sp, #16]
  41e3fc:	str	x8, [sp, #8]
  41e400:	ldr	x8, [sp, #8]
  41e404:	ldr	x8, [x8]
  41e408:	ldr	x9, [sp, #24]
  41e40c:	cmp	x8, x9
  41e410:	b.ne	41e434 <wcrtomb@plt+0x1bb24>  // b.any
  41e414:	ldr	x8, [sp, #8]
  41e418:	ldr	x8, [x8, #8]
  41e41c:	cbz	x8, 41e434 <wcrtomb@plt+0x1bb24>
  41e420:	ldr	x8, [sp, #8]
  41e424:	ldr	x8, [x8, #8]
  41e428:	ldr	x8, [x8]
  41e42c:	stur	x8, [x29, #-8]
  41e430:	b	41e48c <wcrtomb@plt+0x1bb7c>
  41e434:	ldr	x8, [sp, #8]
  41e438:	ldr	x8, [x8, #8]
  41e43c:	str	x8, [sp, #8]
  41e440:	ldr	x8, [sp, #8]
  41e444:	cbnz	x8, 41e400 <wcrtomb@plt+0x1baf0>
  41e448:	ldr	x8, [sp, #16]
  41e44c:	add	x8, x8, #0x10
  41e450:	str	x8, [sp, #16]
  41e454:	ldur	x9, [x29, #-16]
  41e458:	ldr	x9, [x9, #8]
  41e45c:	cmp	x8, x9
  41e460:	b.cs	41e484 <wcrtomb@plt+0x1bb74>  // b.hs, b.nlast
  41e464:	ldr	x8, [sp, #16]
  41e468:	ldr	x8, [x8]
  41e46c:	cbz	x8, 41e480 <wcrtomb@plt+0x1bb70>
  41e470:	ldr	x8, [sp, #16]
  41e474:	ldr	x8, [x8]
  41e478:	stur	x8, [x29, #-8]
  41e47c:	b	41e48c <wcrtomb@plt+0x1bb7c>
  41e480:	b	41e448 <wcrtomb@plt+0x1bb38>
  41e484:	mov	x8, xzr
  41e488:	stur	x8, [x29, #-8]
  41e48c:	ldur	x0, [x29, #-8]
  41e490:	ldp	x29, x30, [sp, #48]
  41e494:	add	sp, sp, #0x40
  41e498:	ret
  41e49c:	sub	sp, sp, #0x40
  41e4a0:	str	x0, [sp, #48]
  41e4a4:	str	x1, [sp, #40]
  41e4a8:	str	x2, [sp, #32]
  41e4ac:	str	xzr, [sp, #24]
  41e4b0:	ldr	x8, [sp, #48]
  41e4b4:	ldr	x8, [x8]
  41e4b8:	str	x8, [sp, #16]
  41e4bc:	ldr	x8, [sp, #16]
  41e4c0:	ldr	x9, [sp, #48]
  41e4c4:	ldr	x9, [x9, #8]
  41e4c8:	cmp	x8, x9
  41e4cc:	b.cs	41e550 <wcrtomb@plt+0x1bc40>  // b.hs, b.nlast
  41e4d0:	ldr	x8, [sp, #16]
  41e4d4:	ldr	x8, [x8]
  41e4d8:	cbz	x8, 41e540 <wcrtomb@plt+0x1bc30>
  41e4dc:	ldr	x8, [sp, #16]
  41e4e0:	str	x8, [sp, #8]
  41e4e4:	ldr	x8, [sp, #8]
  41e4e8:	cbz	x8, 41e540 <wcrtomb@plt+0x1bc30>
  41e4ec:	ldr	x8, [sp, #24]
  41e4f0:	ldr	x9, [sp, #32]
  41e4f4:	cmp	x8, x9
  41e4f8:	b.cc	41e508 <wcrtomb@plt+0x1bbf8>  // b.lo, b.ul, b.last
  41e4fc:	ldr	x8, [sp, #24]
  41e500:	str	x8, [sp, #56]
  41e504:	b	41e558 <wcrtomb@plt+0x1bc48>
  41e508:	ldr	x8, [sp, #8]
  41e50c:	ldr	x8, [x8]
  41e510:	ldr	x9, [sp, #40]
  41e514:	ldr	x10, [sp, #24]
  41e518:	add	x11, x10, #0x1
  41e51c:	str	x11, [sp, #24]
  41e520:	mov	x11, #0x8                   	// #8
  41e524:	mul	x10, x11, x10
  41e528:	add	x9, x9, x10
  41e52c:	str	x8, [x9]
  41e530:	ldr	x8, [sp, #8]
  41e534:	ldr	x8, [x8, #8]
  41e538:	str	x8, [sp, #8]
  41e53c:	b	41e4e4 <wcrtomb@plt+0x1bbd4>
  41e540:	ldr	x8, [sp, #16]
  41e544:	add	x8, x8, #0x10
  41e548:	str	x8, [sp, #16]
  41e54c:	b	41e4bc <wcrtomb@plt+0x1bbac>
  41e550:	ldr	x8, [sp, #24]
  41e554:	str	x8, [sp, #56]
  41e558:	ldr	x0, [sp, #56]
  41e55c:	add	sp, sp, #0x40
  41e560:	ret
  41e564:	sub	sp, sp, #0x50
  41e568:	stp	x29, x30, [sp, #64]
  41e56c:	add	x29, sp, #0x40
  41e570:	stur	x0, [x29, #-16]
  41e574:	stur	x1, [x29, #-24]
  41e578:	str	x2, [sp, #32]
  41e57c:	str	xzr, [sp, #24]
  41e580:	ldur	x8, [x29, #-16]
  41e584:	ldr	x8, [x8]
  41e588:	str	x8, [sp, #16]
  41e58c:	ldr	x8, [sp, #16]
  41e590:	ldur	x9, [x29, #-16]
  41e594:	ldr	x9, [x9, #8]
  41e598:	cmp	x8, x9
  41e59c:	b.cs	41e60c <wcrtomb@plt+0x1bcfc>  // b.hs, b.nlast
  41e5a0:	ldr	x8, [sp, #16]
  41e5a4:	ldr	x8, [x8]
  41e5a8:	cbz	x8, 41e5fc <wcrtomb@plt+0x1bcec>
  41e5ac:	ldr	x8, [sp, #16]
  41e5b0:	str	x8, [sp, #8]
  41e5b4:	ldr	x8, [sp, #8]
  41e5b8:	cbz	x8, 41e5fc <wcrtomb@plt+0x1bcec>
  41e5bc:	ldur	x8, [x29, #-24]
  41e5c0:	ldr	x9, [sp, #8]
  41e5c4:	ldr	x0, [x9]
  41e5c8:	ldr	x1, [sp, #32]
  41e5cc:	blr	x8
  41e5d0:	tbnz	w0, #0, 41e5e0 <wcrtomb@plt+0x1bcd0>
  41e5d4:	ldr	x8, [sp, #24]
  41e5d8:	stur	x8, [x29, #-8]
  41e5dc:	b	41e614 <wcrtomb@plt+0x1bd04>
  41e5e0:	ldr	x8, [sp, #24]
  41e5e4:	add	x8, x8, #0x1
  41e5e8:	str	x8, [sp, #24]
  41e5ec:	ldr	x8, [sp, #8]
  41e5f0:	ldr	x8, [x8, #8]
  41e5f4:	str	x8, [sp, #8]
  41e5f8:	b	41e5b4 <wcrtomb@plt+0x1bca4>
  41e5fc:	ldr	x8, [sp, #16]
  41e600:	add	x8, x8, #0x10
  41e604:	str	x8, [sp, #16]
  41e608:	b	41e58c <wcrtomb@plt+0x1bc7c>
  41e60c:	ldr	x8, [sp, #24]
  41e610:	stur	x8, [x29, #-8]
  41e614:	ldur	x0, [x29, #-8]
  41e618:	ldp	x29, x30, [sp, #64]
  41e61c:	add	sp, sp, #0x50
  41e620:	ret
  41e624:	sub	sp, sp, #0x20
  41e628:	str	x0, [sp, #24]
  41e62c:	str	x1, [sp, #16]
  41e630:	str	xzr, [sp, #8]
  41e634:	ldr	x8, [sp, #24]
  41e638:	ldrb	w9, [x8]
  41e63c:	strb	w9, [sp, #7]
  41e640:	cbz	w9, 41e680 <wcrtomb@plt+0x1bd70>
  41e644:	ldr	x8, [sp, #8]
  41e648:	mov	x9, #0x1f                  	// #31
  41e64c:	mul	x8, x8, x9
  41e650:	ldrb	w10, [sp, #7]
  41e654:	mov	w9, w10
  41e658:	add	x8, x8, x9
  41e65c:	ldr	x9, [sp, #16]
  41e660:	udiv	x11, x8, x9
  41e664:	mul	x9, x11, x9
  41e668:	subs	x8, x8, x9
  41e66c:	str	x8, [sp, #8]
  41e670:	ldr	x8, [sp, #24]
  41e674:	add	x8, x8, #0x1
  41e678:	str	x8, [sp, #24]
  41e67c:	b	41e634 <wcrtomb@plt+0x1bd24>
  41e680:	ldr	x0, [sp, #8]
  41e684:	add	sp, sp, #0x20
  41e688:	ret
  41e68c:	sub	sp, sp, #0x10
  41e690:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e694:	add	x8, x8, #0xbe8
  41e698:	str	x0, [sp, #8]
  41e69c:	ldr	x9, [sp, #8]
  41e6a0:	ldr	q0, [x8]
  41e6a4:	str	q0, [x9]
  41e6a8:	ldr	w10, [x8, #16]
  41e6ac:	str	w10, [x9, #16]
  41e6b0:	add	sp, sp, #0x10
  41e6b4:	ret
  41e6b8:	sub	sp, sp, #0x50
  41e6bc:	stp	x29, x30, [sp, #64]
  41e6c0:	add	x29, sp, #0x40
  41e6c4:	stur	x0, [x29, #-16]
  41e6c8:	stur	x1, [x29, #-24]
  41e6cc:	str	x2, [sp, #32]
  41e6d0:	str	x3, [sp, #24]
  41e6d4:	str	x4, [sp, #16]
  41e6d8:	ldr	x8, [sp, #32]
  41e6dc:	cbnz	x8, 41e6ec <wcrtomb@plt+0x1bddc>
  41e6e0:	adrp	x8, 41e000 <wcrtomb@plt+0x1b6f0>
  41e6e4:	add	x8, x8, #0x82c
  41e6e8:	str	x8, [sp, #32]
  41e6ec:	ldr	x8, [sp, #24]
  41e6f0:	cbnz	x8, 41e700 <wcrtomb@plt+0x1bdf0>
  41e6f4:	adrp	x8, 41e000 <wcrtomb@plt+0x1b6f0>
  41e6f8:	add	x8, x8, #0x874
  41e6fc:	str	x8, [sp, #24]
  41e700:	mov	x0, #0x50                  	// #80
  41e704:	bl	402450 <malloc@plt>
  41e708:	str	x0, [sp, #8]
  41e70c:	ldr	x8, [sp, #8]
  41e710:	cbnz	x8, 41e720 <wcrtomb@plt+0x1be10>
  41e714:	mov	x8, xzr
  41e718:	stur	x8, [x29, #-8]
  41e71c:	b	41e81c <wcrtomb@plt+0x1bf0c>
  41e720:	ldur	x8, [x29, #-24]
  41e724:	cbnz	x8, 41e734 <wcrtomb@plt+0x1be24>
  41e728:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e72c:	add	x8, x8, #0xbe8
  41e730:	stur	x8, [x29, #-24]
  41e734:	ldur	x8, [x29, #-24]
  41e738:	ldr	x9, [sp, #8]
  41e73c:	str	x8, [x9, #40]
  41e740:	ldr	x0, [sp, #8]
  41e744:	bl	41e89c <wcrtomb@plt+0x1bf8c>
  41e748:	tbnz	w0, #0, 41e750 <wcrtomb@plt+0x1be40>
  41e74c:	b	41e80c <wcrtomb@plt+0x1befc>
  41e750:	ldur	x0, [x29, #-16]
  41e754:	ldur	x1, [x29, #-24]
  41e758:	bl	41ea0c <wcrtomb@plt+0x1c0fc>
  41e75c:	ldr	x8, [sp, #8]
  41e760:	str	x0, [x8, #16]
  41e764:	ldr	x8, [sp, #8]
  41e768:	ldr	x8, [x8, #16]
  41e76c:	cbnz	x8, 41e774 <wcrtomb@plt+0x1be64>
  41e770:	b	41e80c <wcrtomb@plt+0x1befc>
  41e774:	ldr	x8, [sp, #8]
  41e778:	ldr	x0, [x8, #16]
  41e77c:	mov	x1, #0x10                  	// #16
  41e780:	bl	402540 <calloc@plt>
  41e784:	ldr	x8, [sp, #8]
  41e788:	str	x0, [x8]
  41e78c:	ldr	x8, [sp, #8]
  41e790:	ldr	x8, [x8]
  41e794:	cbnz	x8, 41e79c <wcrtomb@plt+0x1be8c>
  41e798:	b	41e80c <wcrtomb@plt+0x1befc>
  41e79c:	ldr	x8, [sp, #8]
  41e7a0:	ldr	x8, [x8]
  41e7a4:	ldr	x9, [sp, #8]
  41e7a8:	mov	x10, #0x10                  	// #16
  41e7ac:	ldr	x9, [x9, #16]
  41e7b0:	mul	x9, x10, x9
  41e7b4:	add	x8, x8, x9
  41e7b8:	ldr	x9, [sp, #8]
  41e7bc:	str	x8, [x9, #8]
  41e7c0:	ldr	x8, [sp, #8]
  41e7c4:	mov	x9, xzr
  41e7c8:	str	xzr, [x8, #24]
  41e7cc:	ldr	x8, [sp, #8]
  41e7d0:	str	xzr, [x8, #32]
  41e7d4:	ldr	x8, [sp, #32]
  41e7d8:	ldr	x10, [sp, #8]
  41e7dc:	str	x8, [x10, #48]
  41e7e0:	ldr	x8, [sp, #24]
  41e7e4:	ldr	x10, [sp, #8]
  41e7e8:	str	x8, [x10, #56]
  41e7ec:	ldr	x8, [sp, #16]
  41e7f0:	ldr	x10, [sp, #8]
  41e7f4:	str	x8, [x10, #64]
  41e7f8:	ldr	x8, [sp, #8]
  41e7fc:	str	x9, [x8, #72]
  41e800:	ldr	x8, [sp, #8]
  41e804:	stur	x8, [x29, #-8]
  41e808:	b	41e81c <wcrtomb@plt+0x1bf0c>
  41e80c:	ldr	x0, [sp, #8]
  41e810:	bl	4026c0 <free@plt>
  41e814:	mov	x8, xzr
  41e818:	stur	x8, [x29, #-8]
  41e81c:	ldur	x0, [x29, #-8]
  41e820:	ldp	x29, x30, [sp, #64]
  41e824:	add	sp, sp, #0x50
  41e828:	ret
  41e82c:	sub	sp, sp, #0x30
  41e830:	stp	x29, x30, [sp, #32]
  41e834:	add	x29, sp, #0x20
  41e838:	mov	w8, #0x3                   	// #3
  41e83c:	stur	x0, [x29, #-8]
  41e840:	str	x1, [sp, #16]
  41e844:	ldur	x0, [x29, #-8]
  41e848:	mov	w1, w8
  41e84c:	bl	43f908 <_obstack_memory_used@@Base+0x17fe8>
  41e850:	str	x0, [sp, #8]
  41e854:	ldr	x9, [sp, #8]
  41e858:	ldr	x10, [sp, #16]
  41e85c:	udiv	x11, x9, x10
  41e860:	mul	x10, x11, x10
  41e864:	subs	x0, x9, x10
  41e868:	ldp	x29, x30, [sp, #32]
  41e86c:	add	sp, sp, #0x30
  41e870:	ret
  41e874:	sub	sp, sp, #0x10
  41e878:	str	x0, [sp, #8]
  41e87c:	str	x1, [sp]
  41e880:	ldr	x8, [sp, #8]
  41e884:	ldr	x9, [sp]
  41e888:	cmp	x8, x9
  41e88c:	cset	w10, eq  // eq = none
  41e890:	and	w0, w10, #0x1
  41e894:	add	sp, sp, #0x10
  41e898:	ret
  41e89c:	sub	sp, sp, #0x20
  41e8a0:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e8a4:	add	x8, x8, #0xbe8
  41e8a8:	str	x0, [sp, #16]
  41e8ac:	ldr	x9, [sp, #16]
  41e8b0:	ldr	x9, [x9, #40]
  41e8b4:	str	x9, [sp, #8]
  41e8b8:	ldr	x9, [sp, #8]
  41e8bc:	cmp	x9, x8
  41e8c0:	b.ne	41e8d4 <wcrtomb@plt+0x1bfc4>  // b.any
  41e8c4:	mov	w8, #0x1                   	// #1
  41e8c8:	and	w8, w8, #0x1
  41e8cc:	strb	w8, [sp, #31]
  41e8d0:	b	41e9fc <wcrtomb@plt+0x1c0ec>
  41e8d4:	mov	w8, #0xcccd                	// #52429
  41e8d8:	movk	w8, #0x3dcc, lsl #16
  41e8dc:	fmov	s0, w8
  41e8e0:	str	s0, [sp, #4]
  41e8e4:	ldr	s0, [sp, #4]
  41e8e8:	ldr	x9, [sp, #8]
  41e8ec:	ldr	s1, [x9, #8]
  41e8f0:	fcmp	s0, s1
  41e8f4:	cset	w8, mi  // mi = first
  41e8f8:	tbnz	w8, #0, 41e900 <wcrtomb@plt+0x1bff0>
  41e8fc:	b	41e9e0 <wcrtomb@plt+0x1c0d0>
  41e900:	ldr	x8, [sp, #8]
  41e904:	ldr	s0, [x8, #8]
  41e908:	ldr	s1, [sp, #4]
  41e90c:	fmov	s2, #1.000000000000000000e+00
  41e910:	fsub	s1, s2, s1
  41e914:	fcmp	s0, s1
  41e918:	cset	w9, mi  // mi = first
  41e91c:	tbnz	w9, #0, 41e924 <wcrtomb@plt+0x1c014>
  41e920:	b	41e9e0 <wcrtomb@plt+0x1c0d0>
  41e924:	ldr	s0, [sp, #4]
  41e928:	fmov	s1, #1.000000000000000000e+00
  41e92c:	fadd	s0, s1, s0
  41e930:	ldr	x8, [sp, #8]
  41e934:	ldr	s1, [x8, #12]
  41e938:	fcmp	s0, s1
  41e93c:	cset	w9, mi  // mi = first
  41e940:	tbnz	w9, #0, 41e948 <wcrtomb@plt+0x1c038>
  41e944:	b	41e9e0 <wcrtomb@plt+0x1c0d0>
  41e948:	ldr	x8, [sp, #8]
  41e94c:	ldr	s0, [x8]
  41e950:	fmov	s1, wzr
  41e954:	fcmp	s1, s0
  41e958:	cset	w9, ls  // ls = plast
  41e95c:	tbnz	w9, #0, 41e964 <wcrtomb@plt+0x1c054>
  41e960:	b	41e9e0 <wcrtomb@plt+0x1c0d0>
  41e964:	ldr	x8, [sp, #8]
  41e968:	ldr	s0, [x8]
  41e96c:	ldr	s1, [sp, #4]
  41e970:	fadd	s0, s0, s1
  41e974:	ldr	x8, [sp, #8]
  41e978:	ldr	s1, [x8, #4]
  41e97c:	fcmp	s0, s1
  41e980:	cset	w9, mi  // mi = first
  41e984:	tbnz	w9, #0, 41e98c <wcrtomb@plt+0x1c07c>
  41e988:	b	41e9e0 <wcrtomb@plt+0x1c0d0>
  41e98c:	ldr	x8, [sp, #8]
  41e990:	ldr	s0, [x8, #4]
  41e994:	fmov	s1, #1.000000000000000000e+00
  41e998:	fcmp	s0, s1
  41e99c:	cset	w9, ls  // ls = plast
  41e9a0:	tbnz	w9, #0, 41e9a8 <wcrtomb@plt+0x1c098>
  41e9a4:	b	41e9e0 <wcrtomb@plt+0x1c0d0>
  41e9a8:	ldr	x8, [sp, #8]
  41e9ac:	ldr	s0, [x8]
  41e9b0:	ldr	s1, [sp, #4]
  41e9b4:	fadd	s0, s0, s1
  41e9b8:	ldr	x8, [sp, #8]
  41e9bc:	ldr	s1, [x8, #8]
  41e9c0:	fcmp	s0, s1
  41e9c4:	cset	w9, mi  // mi = first
  41e9c8:	tbnz	w9, #0, 41e9d0 <wcrtomb@plt+0x1c0c0>
  41e9cc:	b	41e9e0 <wcrtomb@plt+0x1c0d0>
  41e9d0:	mov	w8, #0x1                   	// #1
  41e9d4:	and	w8, w8, #0x1
  41e9d8:	strb	w8, [sp, #31]
  41e9dc:	b	41e9fc <wcrtomb@plt+0x1c0ec>
  41e9e0:	ldr	x8, [sp, #16]
  41e9e4:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41e9e8:	add	x9, x9, #0xbe8
  41e9ec:	str	x9, [x8, #40]
  41e9f0:	mov	w10, wzr
  41e9f4:	and	w10, w10, #0x1
  41e9f8:	strb	w10, [sp, #31]
  41e9fc:	ldrb	w8, [sp, #31]
  41ea00:	and	w0, w8, #0x1
  41ea04:	add	sp, sp, #0x20
  41ea08:	ret
  41ea0c:	sub	sp, sp, #0x30
  41ea10:	stp	x29, x30, [sp, #32]
  41ea14:	add	x29, sp, #0x20
  41ea18:	str	x0, [sp, #16]
  41ea1c:	str	x1, [sp, #8]
  41ea20:	ldr	x8, [sp, #8]
  41ea24:	ldrb	w9, [x8, #16]
  41ea28:	tbnz	w9, #0, 41ea74 <wcrtomb@plt+0x1c164>
  41ea2c:	ldr	x8, [sp, #16]
  41ea30:	ucvtf	s0, x8
  41ea34:	ldr	x8, [sp, #8]
  41ea38:	ldr	s1, [x8, #8]
  41ea3c:	fdiv	s0, s0, s1
  41ea40:	str	s0, [sp, #4]
  41ea44:	ldr	s0, [sp, #4]
  41ea48:	mov	w9, #0x5f800000            	// #1602224128
  41ea4c:	fmov	s1, w9
  41ea50:	fcmp	s1, s0
  41ea54:	cset	w9, ls  // ls = plast
  41ea58:	tbnz	w9, #0, 41ea60 <wcrtomb@plt+0x1c150>
  41ea5c:	b	41ea68 <wcrtomb@plt+0x1c158>
  41ea60:	stur	xzr, [x29, #-8]
  41ea64:	b	41eaa0 <wcrtomb@plt+0x1c190>
  41ea68:	ldr	s0, [sp, #4]
  41ea6c:	fcvtzu	x8, s0
  41ea70:	str	x8, [sp, #16]
  41ea74:	ldr	x0, [sp, #16]
  41ea78:	bl	41f7c8 <wcrtomb@plt+0x1ceb8>
  41ea7c:	str	x0, [sp, #16]
  41ea80:	ldr	x8, [sp, #16]
  41ea84:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  41ea88:	cmp	x9, x8
  41ea8c:	b.cs	41ea98 <wcrtomb@plt+0x1c188>  // b.hs, b.nlast
  41ea90:	stur	xzr, [x29, #-8]
  41ea94:	b	41eaa0 <wcrtomb@plt+0x1c190>
  41ea98:	ldr	x8, [sp, #16]
  41ea9c:	stur	x8, [x29, #-8]
  41eaa0:	ldur	x0, [x29, #-8]
  41eaa4:	ldp	x29, x30, [sp, #32]
  41eaa8:	add	sp, sp, #0x30
  41eaac:	ret
  41eab0:	sub	sp, sp, #0x30
  41eab4:	stp	x29, x30, [sp, #32]
  41eab8:	add	x29, sp, #0x20
  41eabc:	stur	x0, [x29, #-8]
  41eac0:	ldur	x8, [x29, #-8]
  41eac4:	ldr	x8, [x8]
  41eac8:	str	x8, [sp, #16]
  41eacc:	ldr	x8, [sp, #16]
  41ead0:	ldur	x9, [x29, #-8]
  41ead4:	ldr	x9, [x9, #8]
  41ead8:	cmp	x8, x9
  41eadc:	b.cs	41eba4 <wcrtomb@plt+0x1c294>  // b.hs, b.nlast
  41eae0:	ldr	x8, [sp, #16]
  41eae4:	ldr	x8, [x8]
  41eae8:	cbz	x8, 41eb94 <wcrtomb@plt+0x1c284>
  41eaec:	ldr	x8, [sp, #16]
  41eaf0:	ldr	x8, [x8, #8]
  41eaf4:	str	x8, [sp, #8]
  41eaf8:	ldr	x8, [sp, #8]
  41eafc:	cbz	x8, 41eb60 <wcrtomb@plt+0x1c250>
  41eb00:	ldur	x8, [x29, #-8]
  41eb04:	ldr	x8, [x8, #64]
  41eb08:	cbz	x8, 41eb20 <wcrtomb@plt+0x1c210>
  41eb0c:	ldur	x8, [x29, #-8]
  41eb10:	ldr	x8, [x8, #64]
  41eb14:	ldr	x9, [sp, #8]
  41eb18:	ldr	x0, [x9]
  41eb1c:	blr	x8
  41eb20:	ldr	x8, [sp, #8]
  41eb24:	mov	x9, xzr
  41eb28:	str	x9, [x8]
  41eb2c:	ldr	x8, [sp, #8]
  41eb30:	ldr	x8, [x8, #8]
  41eb34:	str	x8, [sp]
  41eb38:	ldur	x8, [x29, #-8]
  41eb3c:	ldr	x8, [x8, #72]
  41eb40:	ldr	x9, [sp, #8]
  41eb44:	str	x8, [x9, #8]
  41eb48:	ldr	x8, [sp, #8]
  41eb4c:	ldur	x9, [x29, #-8]
  41eb50:	str	x8, [x9, #72]
  41eb54:	ldr	x8, [sp]
  41eb58:	str	x8, [sp, #8]
  41eb5c:	b	41eaf8 <wcrtomb@plt+0x1c1e8>
  41eb60:	ldur	x8, [x29, #-8]
  41eb64:	ldr	x8, [x8, #64]
  41eb68:	cbz	x8, 41eb80 <wcrtomb@plt+0x1c270>
  41eb6c:	ldur	x8, [x29, #-8]
  41eb70:	ldr	x8, [x8, #64]
  41eb74:	ldr	x9, [sp, #16]
  41eb78:	ldr	x0, [x9]
  41eb7c:	blr	x8
  41eb80:	ldr	x8, [sp, #16]
  41eb84:	mov	x9, xzr
  41eb88:	str	x9, [x8]
  41eb8c:	ldr	x8, [sp, #16]
  41eb90:	str	x9, [x8, #8]
  41eb94:	ldr	x8, [sp, #16]
  41eb98:	add	x8, x8, #0x10
  41eb9c:	str	x8, [sp, #16]
  41eba0:	b	41eacc <wcrtomb@plt+0x1c1bc>
  41eba4:	ldur	x8, [x29, #-8]
  41eba8:	str	xzr, [x8, #24]
  41ebac:	ldur	x8, [x29, #-8]
  41ebb0:	str	xzr, [x8, #32]
  41ebb4:	ldp	x29, x30, [sp, #32]
  41ebb8:	add	sp, sp, #0x30
  41ebbc:	ret
  41ebc0:	sub	sp, sp, #0x30
  41ebc4:	stp	x29, x30, [sp, #32]
  41ebc8:	add	x29, sp, #0x20
  41ebcc:	stur	x0, [x29, #-8]
  41ebd0:	ldur	x8, [x29, #-8]
  41ebd4:	ldr	x8, [x8, #64]
  41ebd8:	cbz	x8, 41ec58 <wcrtomb@plt+0x1c348>
  41ebdc:	ldur	x8, [x29, #-8]
  41ebe0:	ldr	x8, [x8, #32]
  41ebe4:	cbz	x8, 41ec58 <wcrtomb@plt+0x1c348>
  41ebe8:	ldur	x8, [x29, #-8]
  41ebec:	ldr	x8, [x8]
  41ebf0:	str	x8, [sp, #16]
  41ebf4:	ldr	x8, [sp, #16]
  41ebf8:	ldur	x9, [x29, #-8]
  41ebfc:	ldr	x9, [x9, #8]
  41ec00:	cmp	x8, x9
  41ec04:	b.cs	41ec58 <wcrtomb@plt+0x1c348>  // b.hs, b.nlast
  41ec08:	ldr	x8, [sp, #16]
  41ec0c:	ldr	x8, [x8]
  41ec10:	cbz	x8, 41ec48 <wcrtomb@plt+0x1c338>
  41ec14:	ldr	x8, [sp, #16]
  41ec18:	str	x8, [sp, #8]
  41ec1c:	ldr	x8, [sp, #8]
  41ec20:	cbz	x8, 41ec48 <wcrtomb@plt+0x1c338>
  41ec24:	ldur	x8, [x29, #-8]
  41ec28:	ldr	x8, [x8, #64]
  41ec2c:	ldr	x9, [sp, #8]
  41ec30:	ldr	x0, [x9]
  41ec34:	blr	x8
  41ec38:	ldr	x8, [sp, #8]
  41ec3c:	ldr	x8, [x8, #8]
  41ec40:	str	x8, [sp, #8]
  41ec44:	b	41ec1c <wcrtomb@plt+0x1c30c>
  41ec48:	ldr	x8, [sp, #16]
  41ec4c:	add	x8, x8, #0x10
  41ec50:	str	x8, [sp, #16]
  41ec54:	b	41ebf4 <wcrtomb@plt+0x1c2e4>
  41ec58:	ldur	x8, [x29, #-8]
  41ec5c:	ldr	x8, [x8]
  41ec60:	str	x8, [sp, #16]
  41ec64:	ldr	x8, [sp, #16]
  41ec68:	ldur	x9, [x29, #-8]
  41ec6c:	ldr	x9, [x9, #8]
  41ec70:	cmp	x8, x9
  41ec74:	b.cs	41ecbc <wcrtomb@plt+0x1c3ac>  // b.hs, b.nlast
  41ec78:	ldr	x8, [sp, #16]
  41ec7c:	ldr	x8, [x8, #8]
  41ec80:	str	x8, [sp, #8]
  41ec84:	ldr	x8, [sp, #8]
  41ec88:	cbz	x8, 41ecac <wcrtomb@plt+0x1c39c>
  41ec8c:	ldr	x8, [sp, #8]
  41ec90:	ldr	x8, [x8, #8]
  41ec94:	str	x8, [sp]
  41ec98:	ldr	x0, [sp, #8]
  41ec9c:	bl	4026c0 <free@plt>
  41eca0:	ldr	x8, [sp]
  41eca4:	str	x8, [sp, #8]
  41eca8:	b	41ec84 <wcrtomb@plt+0x1c374>
  41ecac:	ldr	x8, [sp, #16]
  41ecb0:	add	x8, x8, #0x10
  41ecb4:	str	x8, [sp, #16]
  41ecb8:	b	41ec64 <wcrtomb@plt+0x1c354>
  41ecbc:	ldur	x8, [x29, #-8]
  41ecc0:	ldr	x8, [x8, #72]
  41ecc4:	str	x8, [sp, #8]
  41ecc8:	ldr	x8, [sp, #8]
  41eccc:	cbz	x8, 41ecf0 <wcrtomb@plt+0x1c3e0>
  41ecd0:	ldr	x8, [sp, #8]
  41ecd4:	ldr	x8, [x8, #8]
  41ecd8:	str	x8, [sp]
  41ecdc:	ldr	x0, [sp, #8]
  41ece0:	bl	4026c0 <free@plt>
  41ece4:	ldr	x8, [sp]
  41ece8:	str	x8, [sp, #8]
  41ecec:	b	41ecc8 <wcrtomb@plt+0x1c3b8>
  41ecf0:	ldur	x8, [x29, #-8]
  41ecf4:	ldr	x0, [x8]
  41ecf8:	bl	4026c0 <free@plt>
  41ecfc:	ldur	x0, [x29, #-8]
  41ed00:	bl	4026c0 <free@plt>
  41ed04:	ldp	x29, x30, [sp, #32]
  41ed08:	add	sp, sp, #0x30
  41ed0c:	ret
  41ed10:	sub	sp, sp, #0x90
  41ed14:	stp	x29, x30, [sp, #128]
  41ed18:	add	x29, sp, #0x80
  41ed1c:	stur	x0, [x29, #-16]
  41ed20:	stur	x1, [x29, #-24]
  41ed24:	ldur	x0, [x29, #-24]
  41ed28:	ldur	x8, [x29, #-16]
  41ed2c:	ldr	x1, [x8, #40]
  41ed30:	bl	41ea0c <wcrtomb@plt+0x1c0fc>
  41ed34:	str	x0, [sp, #8]
  41ed38:	ldr	x8, [sp, #8]
  41ed3c:	cbnz	x8, 41ed50 <wcrtomb@plt+0x1c440>
  41ed40:	mov	w8, wzr
  41ed44:	and	w8, w8, #0x1
  41ed48:	sturb	w8, [x29, #-1]
  41ed4c:	b	41ef20 <wcrtomb@plt+0x1c610>
  41ed50:	ldr	x8, [sp, #8]
  41ed54:	ldur	x9, [x29, #-16]
  41ed58:	ldr	x9, [x9, #16]
  41ed5c:	cmp	x8, x9
  41ed60:	b.ne	41ed74 <wcrtomb@plt+0x1c464>  // b.any
  41ed64:	mov	w8, #0x1                   	// #1
  41ed68:	and	w8, w8, #0x1
  41ed6c:	sturb	w8, [x29, #-1]
  41ed70:	b	41ef20 <wcrtomb@plt+0x1c610>
  41ed74:	add	x8, sp, #0x18
  41ed78:	str	x8, [sp, #16]
  41ed7c:	ldr	x0, [sp, #8]
  41ed80:	mov	x1, #0x10                  	// #16
  41ed84:	bl	402540 <calloc@plt>
  41ed88:	ldr	x8, [sp, #16]
  41ed8c:	str	x0, [x8]
  41ed90:	ldr	x8, [sp, #16]
  41ed94:	ldr	x8, [x8]
  41ed98:	cbnz	x8, 41edac <wcrtomb@plt+0x1c49c>
  41ed9c:	mov	w8, wzr
  41eda0:	and	w8, w8, #0x1
  41eda4:	sturb	w8, [x29, #-1]
  41eda8:	b	41ef20 <wcrtomb@plt+0x1c610>
  41edac:	ldr	x8, [sp, #8]
  41edb0:	ldr	x9, [sp, #16]
  41edb4:	mov	x10, #0x10                  	// #16
  41edb8:	str	x8, [x9, #16]
  41edbc:	ldr	x8, [sp, #16]
  41edc0:	ldr	x8, [x8]
  41edc4:	ldr	x9, [sp, #8]
  41edc8:	mul	x9, x10, x9
  41edcc:	add	x8, x8, x9
  41edd0:	ldr	x9, [sp, #16]
  41edd4:	str	x8, [x9, #8]
  41edd8:	ldr	x8, [sp, #16]
  41eddc:	str	xzr, [x8, #24]
  41ede0:	ldr	x8, [sp, #16]
  41ede4:	str	xzr, [x8, #32]
  41ede8:	ldur	x8, [x29, #-16]
  41edec:	ldr	x8, [x8, #40]
  41edf0:	ldr	x9, [sp, #16]
  41edf4:	str	x8, [x9, #40]
  41edf8:	ldur	x8, [x29, #-16]
  41edfc:	ldr	x8, [x8, #48]
  41ee00:	ldr	x9, [sp, #16]
  41ee04:	str	x8, [x9, #48]
  41ee08:	ldur	x8, [x29, #-16]
  41ee0c:	ldr	x8, [x8, #56]
  41ee10:	ldr	x9, [sp, #16]
  41ee14:	str	x8, [x9, #56]
  41ee18:	ldur	x8, [x29, #-16]
  41ee1c:	ldr	x8, [x8, #64]
  41ee20:	ldr	x9, [sp, #16]
  41ee24:	str	x8, [x9, #64]
  41ee28:	ldur	x8, [x29, #-16]
  41ee2c:	ldr	x8, [x8, #72]
  41ee30:	ldr	x9, [sp, #16]
  41ee34:	str	x8, [x9, #72]
  41ee38:	ldr	x0, [sp, #16]
  41ee3c:	ldur	x1, [x29, #-16]
  41ee40:	mov	w11, wzr
  41ee44:	and	w2, w11, #0x1
  41ee48:	bl	41ef34 <wcrtomb@plt+0x1c624>
  41ee4c:	tbnz	w0, #0, 41ee54 <wcrtomb@plt+0x1c544>
  41ee50:	b	41eec0 <wcrtomb@plt+0x1c5b0>
  41ee54:	ldur	x8, [x29, #-16]
  41ee58:	ldr	x0, [x8]
  41ee5c:	bl	4026c0 <free@plt>
  41ee60:	ldr	x8, [sp, #16]
  41ee64:	ldr	x8, [x8]
  41ee68:	ldur	x9, [x29, #-16]
  41ee6c:	str	x8, [x9]
  41ee70:	ldr	x8, [sp, #16]
  41ee74:	ldr	x8, [x8, #8]
  41ee78:	ldur	x9, [x29, #-16]
  41ee7c:	str	x8, [x9, #8]
  41ee80:	ldr	x8, [sp, #16]
  41ee84:	ldr	x8, [x8, #16]
  41ee88:	ldur	x9, [x29, #-16]
  41ee8c:	str	x8, [x9, #16]
  41ee90:	ldr	x8, [sp, #16]
  41ee94:	ldr	x8, [x8, #24]
  41ee98:	ldur	x9, [x29, #-16]
  41ee9c:	str	x8, [x9, #24]
  41eea0:	ldr	x8, [sp, #16]
  41eea4:	ldr	x8, [x8, #72]
  41eea8:	ldur	x9, [x29, #-16]
  41eeac:	str	x8, [x9, #72]
  41eeb0:	mov	w10, #0x1                   	// #1
  41eeb4:	and	w10, w10, #0x1
  41eeb8:	sturb	w10, [x29, #-1]
  41eebc:	b	41ef20 <wcrtomb@plt+0x1c610>
  41eec0:	ldr	x8, [sp, #16]
  41eec4:	ldr	x8, [x8, #72]
  41eec8:	ldur	x9, [x29, #-16]
  41eecc:	str	x8, [x9, #72]
  41eed0:	ldur	x0, [x29, #-16]
  41eed4:	ldr	x1, [sp, #16]
  41eed8:	mov	w10, #0x1                   	// #1
  41eedc:	and	w2, w10, #0x1
  41eee0:	bl	41ef34 <wcrtomb@plt+0x1c624>
  41eee4:	tbnz	w0, #0, 41eeec <wcrtomb@plt+0x1c5dc>
  41eee8:	b	41ef04 <wcrtomb@plt+0x1c5f4>
  41eeec:	ldur	x0, [x29, #-16]
  41eef0:	ldr	x1, [sp, #16]
  41eef4:	mov	w8, wzr
  41eef8:	and	w2, w8, #0x1
  41eefc:	bl	41ef34 <wcrtomb@plt+0x1c624>
  41ef00:	tbnz	w0, #0, 41ef08 <wcrtomb@plt+0x1c5f8>
  41ef04:	bl	402610 <abort@plt>
  41ef08:	ldr	x8, [sp, #16]
  41ef0c:	ldr	x0, [x8]
  41ef10:	bl	4026c0 <free@plt>
  41ef14:	mov	w9, wzr
  41ef18:	and	w9, w9, #0x1
  41ef1c:	sturb	w9, [x29, #-1]
  41ef20:	ldurb	w8, [x29, #-1]
  41ef24:	and	w0, w8, #0x1
  41ef28:	ldp	x29, x30, [sp, #128]
  41ef2c:	add	sp, sp, #0x90
  41ef30:	ret
  41ef34:	sub	sp, sp, #0x60
  41ef38:	stp	x29, x30, [sp, #80]
  41ef3c:	add	x29, sp, #0x50
  41ef40:	stur	x0, [x29, #-16]
  41ef44:	stur	x1, [x29, #-24]
  41ef48:	and	w8, w2, #0x1
  41ef4c:	sturb	w8, [x29, #-25]
  41ef50:	ldur	x9, [x29, #-24]
  41ef54:	ldr	x9, [x9]
  41ef58:	str	x9, [sp, #40]
  41ef5c:	ldr	x8, [sp, #40]
  41ef60:	ldur	x9, [x29, #-24]
  41ef64:	ldr	x9, [x9, #8]
  41ef68:	cmp	x8, x9
  41ef6c:	b.cs	41f0f4 <wcrtomb@plt+0x1c7e4>  // b.hs, b.nlast
  41ef70:	ldr	x8, [sp, #40]
  41ef74:	ldr	x8, [x8]
  41ef78:	cbz	x8, 41f0e4 <wcrtomb@plt+0x1c7d4>
  41ef7c:	ldr	x8, [sp, #40]
  41ef80:	ldr	x8, [x8, #8]
  41ef84:	str	x8, [sp, #32]
  41ef88:	ldr	x8, [sp, #32]
  41ef8c:	cbz	x8, 41f018 <wcrtomb@plt+0x1c708>
  41ef90:	ldr	x8, [sp, #32]
  41ef94:	ldr	x8, [x8]
  41ef98:	str	x8, [sp, #16]
  41ef9c:	ldur	x0, [x29, #-16]
  41efa0:	ldr	x1, [sp, #16]
  41efa4:	bl	41e2e0 <wcrtomb@plt+0x1b9d0>
  41efa8:	str	x0, [sp, #8]
  41efac:	ldr	x8, [sp, #32]
  41efb0:	ldr	x8, [x8, #8]
  41efb4:	str	x8, [sp, #24]
  41efb8:	ldr	x8, [sp, #8]
  41efbc:	ldr	x8, [x8]
  41efc0:	cbz	x8, 41efe4 <wcrtomb@plt+0x1c6d4>
  41efc4:	ldr	x8, [sp, #8]
  41efc8:	ldr	x8, [x8, #8]
  41efcc:	ldr	x9, [sp, #32]
  41efd0:	str	x8, [x9, #8]
  41efd4:	ldr	x8, [sp, #32]
  41efd8:	ldr	x9, [sp, #8]
  41efdc:	str	x8, [x9, #8]
  41efe0:	b	41f00c <wcrtomb@plt+0x1c6fc>
  41efe4:	ldr	x8, [sp, #16]
  41efe8:	ldr	x9, [sp, #8]
  41efec:	str	x8, [x9]
  41eff0:	ldur	x8, [x29, #-16]
  41eff4:	ldr	x9, [x8, #24]
  41eff8:	add	x9, x9, #0x1
  41effc:	str	x9, [x8, #24]
  41f000:	ldur	x0, [x29, #-16]
  41f004:	ldr	x1, [sp, #32]
  41f008:	bl	41f91c <wcrtomb@plt+0x1d00c>
  41f00c:	ldr	x8, [sp, #24]
  41f010:	str	x8, [sp, #32]
  41f014:	b	41ef88 <wcrtomb@plt+0x1c678>
  41f018:	ldr	x8, [sp, #40]
  41f01c:	ldr	x8, [x8]
  41f020:	str	x8, [sp, #16]
  41f024:	ldr	x8, [sp, #40]
  41f028:	mov	x9, xzr
  41f02c:	str	x9, [x8, #8]
  41f030:	ldurb	w10, [x29, #-25]
  41f034:	tbnz	w10, #0, 41f03c <wcrtomb@plt+0x1c72c>
  41f038:	b	41f040 <wcrtomb@plt+0x1c730>
  41f03c:	b	41f0e4 <wcrtomb@plt+0x1c7d4>
  41f040:	ldur	x0, [x29, #-16]
  41f044:	ldr	x1, [sp, #16]
  41f048:	bl	41e2e0 <wcrtomb@plt+0x1b9d0>
  41f04c:	str	x0, [sp, #8]
  41f050:	ldr	x8, [sp, #8]
  41f054:	ldr	x8, [x8]
  41f058:	cbz	x8, 41f0ac <wcrtomb@plt+0x1c79c>
  41f05c:	ldur	x0, [x29, #-16]
  41f060:	bl	41f52c <wcrtomb@plt+0x1cc1c>
  41f064:	str	x0, [sp]
  41f068:	ldr	x8, [sp]
  41f06c:	cbnz	x8, 41f080 <wcrtomb@plt+0x1c770>
  41f070:	mov	w8, wzr
  41f074:	and	w8, w8, #0x1
  41f078:	sturb	w8, [x29, #-1]
  41f07c:	b	41f100 <wcrtomb@plt+0x1c7f0>
  41f080:	ldr	x8, [sp, #16]
  41f084:	ldr	x9, [sp]
  41f088:	str	x8, [x9]
  41f08c:	ldr	x8, [sp, #8]
  41f090:	ldr	x8, [x8, #8]
  41f094:	ldr	x9, [sp]
  41f098:	str	x8, [x9, #8]
  41f09c:	ldr	x8, [sp]
  41f0a0:	ldr	x9, [sp, #8]
  41f0a4:	str	x8, [x9, #8]
  41f0a8:	b	41f0c8 <wcrtomb@plt+0x1c7b8>
  41f0ac:	ldr	x8, [sp, #16]
  41f0b0:	ldr	x9, [sp, #8]
  41f0b4:	str	x8, [x9]
  41f0b8:	ldur	x8, [x29, #-16]
  41f0bc:	ldr	x9, [x8, #24]
  41f0c0:	add	x9, x9, #0x1
  41f0c4:	str	x9, [x8, #24]
  41f0c8:	ldr	x8, [sp, #40]
  41f0cc:	mov	x9, xzr
  41f0d0:	str	x9, [x8]
  41f0d4:	ldur	x8, [x29, #-24]
  41f0d8:	ldr	x9, [x8, #24]
  41f0dc:	subs	x9, x9, #0x1
  41f0e0:	str	x9, [x8, #24]
  41f0e4:	ldr	x8, [sp, #40]
  41f0e8:	add	x8, x8, #0x10
  41f0ec:	str	x8, [sp, #40]
  41f0f0:	b	41ef5c <wcrtomb@plt+0x1c64c>
  41f0f4:	mov	w8, #0x1                   	// #1
  41f0f8:	and	w8, w8, #0x1
  41f0fc:	sturb	w8, [x29, #-1]
  41f100:	ldurb	w8, [x29, #-1]
  41f104:	and	w0, w8, #0x1
  41f108:	ldp	x29, x30, [sp, #80]
  41f10c:	add	sp, sp, #0x60
  41f110:	ret
  41f114:	sub	sp, sp, #0x60
  41f118:	stp	x29, x30, [sp, #80]
  41f11c:	add	x29, sp, #0x50
  41f120:	stur	x0, [x29, #-16]
  41f124:	stur	x1, [x29, #-24]
  41f128:	stur	x2, [x29, #-32]
  41f12c:	ldur	x8, [x29, #-24]
  41f130:	cbnz	x8, 41f138 <wcrtomb@plt+0x1c828>
  41f134:	bl	402610 <abort@plt>
  41f138:	ldur	x0, [x29, #-16]
  41f13c:	ldur	x1, [x29, #-24]
  41f140:	add	x2, sp, #0x20
  41f144:	mov	w8, wzr
  41f148:	and	w3, w8, #0x1
  41f14c:	bl	41f374 <wcrtomb@plt+0x1ca64>
  41f150:	str	x0, [sp, #40]
  41f154:	cbz	x0, 41f174 <wcrtomb@plt+0x1c864>
  41f158:	ldur	x8, [x29, #-32]
  41f15c:	cbz	x8, 41f16c <wcrtomb@plt+0x1c85c>
  41f160:	ldr	x8, [sp, #40]
  41f164:	ldur	x9, [x29, #-32]
  41f168:	str	x8, [x9]
  41f16c:	stur	wzr, [x29, #-4]
  41f170:	b	41f364 <wcrtomb@plt+0x1ca54>
  41f174:	ldur	x8, [x29, #-16]
  41f178:	ldr	x8, [x8, #24]
  41f17c:	ucvtf	s0, x8
  41f180:	ldur	x8, [x29, #-16]
  41f184:	ldr	x8, [x8, #40]
  41f188:	ldr	s1, [x8, #8]
  41f18c:	ldur	x8, [x29, #-16]
  41f190:	ldr	x8, [x8, #16]
  41f194:	ucvtf	s2, x8
  41f198:	fmul	s1, s1, s2
  41f19c:	fcmp	s0, s1
  41f1a0:	cset	w9, gt
  41f1a4:	tbnz	w9, #0, 41f1ac <wcrtomb@plt+0x1c89c>
  41f1a8:	b	41f2c0 <wcrtomb@plt+0x1c9b0>
  41f1ac:	ldur	x0, [x29, #-16]
  41f1b0:	bl	41e89c <wcrtomb@plt+0x1bf8c>
  41f1b4:	ldur	x8, [x29, #-16]
  41f1b8:	ldr	x8, [x8, #24]
  41f1bc:	ucvtf	s0, x8
  41f1c0:	ldur	x8, [x29, #-16]
  41f1c4:	ldr	x8, [x8, #40]
  41f1c8:	ldr	s1, [x8, #8]
  41f1cc:	ldur	x8, [x29, #-16]
  41f1d0:	ldr	x8, [x8, #16]
  41f1d4:	ucvtf	s2, x8
  41f1d8:	fmul	s1, s1, s2
  41f1dc:	fcmp	s0, s1
  41f1e0:	cset	w9, gt
  41f1e4:	tbnz	w9, #0, 41f1ec <wcrtomb@plt+0x1c8dc>
  41f1e8:	b	41f2c0 <wcrtomb@plt+0x1c9b0>
  41f1ec:	ldur	x8, [x29, #-16]
  41f1f0:	ldr	x8, [x8, #40]
  41f1f4:	str	x8, [sp, #24]
  41f1f8:	ldr	x8, [sp, #24]
  41f1fc:	ldrb	w9, [x8, #16]
  41f200:	tbnz	w9, #0, 41f208 <wcrtomb@plt+0x1c8f8>
  41f204:	b	41f228 <wcrtomb@plt+0x1c918>
  41f208:	ldur	x8, [x29, #-16]
  41f20c:	ldr	x8, [x8, #16]
  41f210:	ucvtf	s0, x8
  41f214:	ldr	x8, [sp, #24]
  41f218:	ldr	s1, [x8, #12]
  41f21c:	fmul	s0, s0, s1
  41f220:	str	s0, [sp, #4]
  41f224:	b	41f250 <wcrtomb@plt+0x1c940>
  41f228:	ldur	x8, [x29, #-16]
  41f22c:	ldr	x8, [x8, #16]
  41f230:	ucvtf	s0, x8
  41f234:	ldr	x8, [sp, #24]
  41f238:	ldr	s1, [x8, #12]
  41f23c:	fmul	s0, s0, s1
  41f240:	ldr	x8, [sp, #24]
  41f244:	ldr	s1, [x8, #8]
  41f248:	fmul	s0, s0, s1
  41f24c:	str	s0, [sp, #4]
  41f250:	ldr	s0, [sp, #4]
  41f254:	str	s0, [sp, #20]
  41f258:	ldr	s0, [sp, #20]
  41f25c:	mov	w8, #0x5f800000            	// #1602224128
  41f260:	fmov	s1, w8
  41f264:	fcmp	s1, s0
  41f268:	cset	w8, ls  // ls = plast
  41f26c:	tbnz	w8, #0, 41f274 <wcrtomb@plt+0x1c964>
  41f270:	b	41f280 <wcrtomb@plt+0x1c970>
  41f274:	mov	w8, #0xffffffff            	// #-1
  41f278:	stur	w8, [x29, #-4]
  41f27c:	b	41f364 <wcrtomb@plt+0x1ca54>
  41f280:	ldur	x0, [x29, #-16]
  41f284:	ldr	s0, [sp, #20]
  41f288:	fcvtzu	x1, s0
  41f28c:	bl	41ed10 <wcrtomb@plt+0x1c400>
  41f290:	tbnz	w0, #0, 41f2a0 <wcrtomb@plt+0x1c990>
  41f294:	mov	w8, #0xffffffff            	// #-1
  41f298:	stur	w8, [x29, #-4]
  41f29c:	b	41f364 <wcrtomb@plt+0x1ca54>
  41f2a0:	ldur	x0, [x29, #-16]
  41f2a4:	ldur	x1, [x29, #-24]
  41f2a8:	add	x2, sp, #0x20
  41f2ac:	mov	w8, wzr
  41f2b0:	and	w3, w8, #0x1
  41f2b4:	bl	41f374 <wcrtomb@plt+0x1ca64>
  41f2b8:	cbz	x0, 41f2c0 <wcrtomb@plt+0x1c9b0>
  41f2bc:	bl	402610 <abort@plt>
  41f2c0:	ldr	x8, [sp, #32]
  41f2c4:	ldr	x8, [x8]
  41f2c8:	cbz	x8, 41f330 <wcrtomb@plt+0x1ca20>
  41f2cc:	ldur	x0, [x29, #-16]
  41f2d0:	bl	41f52c <wcrtomb@plt+0x1cc1c>
  41f2d4:	str	x0, [sp, #8]
  41f2d8:	ldr	x8, [sp, #8]
  41f2dc:	cbnz	x8, 41f2ec <wcrtomb@plt+0x1c9dc>
  41f2e0:	mov	w8, #0xffffffff            	// #-1
  41f2e4:	stur	w8, [x29, #-4]
  41f2e8:	b	41f364 <wcrtomb@plt+0x1ca54>
  41f2ec:	ldur	x8, [x29, #-24]
  41f2f0:	ldr	x9, [sp, #8]
  41f2f4:	str	x8, [x9]
  41f2f8:	ldr	x8, [sp, #32]
  41f2fc:	ldr	x8, [x8, #8]
  41f300:	ldr	x9, [sp, #8]
  41f304:	str	x8, [x9, #8]
  41f308:	ldr	x8, [sp, #8]
  41f30c:	ldr	x9, [sp, #32]
  41f310:	str	x8, [x9, #8]
  41f314:	ldur	x8, [x29, #-16]
  41f318:	ldr	x9, [x8, #32]
  41f31c:	add	x9, x9, #0x1
  41f320:	str	x9, [x8, #32]
  41f324:	mov	w10, #0x1                   	// #1
  41f328:	stur	w10, [x29, #-4]
  41f32c:	b	41f364 <wcrtomb@plt+0x1ca54>
  41f330:	ldur	x8, [x29, #-24]
  41f334:	ldr	x9, [sp, #32]
  41f338:	str	x8, [x9]
  41f33c:	ldur	x8, [x29, #-16]
  41f340:	ldr	x9, [x8, #32]
  41f344:	add	x9, x9, #0x1
  41f348:	str	x9, [x8, #32]
  41f34c:	ldur	x8, [x29, #-16]
  41f350:	ldr	x9, [x8, #24]
  41f354:	add	x9, x9, #0x1
  41f358:	str	x9, [x8, #24]
  41f35c:	mov	w10, #0x1                   	// #1
  41f360:	stur	w10, [x29, #-4]
  41f364:	ldur	w0, [x29, #-4]
  41f368:	ldp	x29, x30, [sp, #80]
  41f36c:	add	sp, sp, #0x60
  41f370:	ret
  41f374:	sub	sp, sp, #0x70
  41f378:	stp	x29, x30, [sp, #96]
  41f37c:	add	x29, sp, #0x60
  41f380:	stur	x0, [x29, #-16]
  41f384:	stur	x1, [x29, #-24]
  41f388:	stur	x2, [x29, #-32]
  41f38c:	and	w8, w3, #0x1
  41f390:	sturb	w8, [x29, #-33]
  41f394:	ldur	x0, [x29, #-16]
  41f398:	ldur	x1, [x29, #-24]
  41f39c:	bl	41e2e0 <wcrtomb@plt+0x1b9d0>
  41f3a0:	str	x0, [sp, #48]
  41f3a4:	ldr	x9, [sp, #48]
  41f3a8:	ldur	x10, [x29, #-32]
  41f3ac:	str	x9, [x10]
  41f3b0:	ldr	x9, [sp, #48]
  41f3b4:	ldr	x9, [x9]
  41f3b8:	cbnz	x9, 41f3c8 <wcrtomb@plt+0x1cab8>
  41f3bc:	mov	x8, xzr
  41f3c0:	stur	x8, [x29, #-8]
  41f3c4:	b	41f51c <wcrtomb@plt+0x1cc0c>
  41f3c8:	ldur	x8, [x29, #-24]
  41f3cc:	ldr	x9, [sp, #48]
  41f3d0:	ldr	x9, [x9]
  41f3d4:	cmp	x8, x9
  41f3d8:	b.eq	41f3fc <wcrtomb@plt+0x1caec>  // b.none
  41f3dc:	ldur	x8, [x29, #-16]
  41f3e0:	ldr	x8, [x8, #56]
  41f3e4:	ldur	x0, [x29, #-24]
  41f3e8:	ldr	x9, [sp, #48]
  41f3ec:	ldr	x1, [x9]
  41f3f0:	blr	x8
  41f3f4:	tbnz	w0, #0, 41f3fc <wcrtomb@plt+0x1caec>
  41f3f8:	b	41f464 <wcrtomb@plt+0x1cb54>
  41f3fc:	ldr	x8, [sp, #48]
  41f400:	ldr	x8, [x8]
  41f404:	str	x8, [sp, #32]
  41f408:	ldurb	w9, [x29, #-33]
  41f40c:	tbnz	w9, #0, 41f414 <wcrtomb@plt+0x1cb04>
  41f410:	b	41f458 <wcrtomb@plt+0x1cb48>
  41f414:	ldr	x8, [sp, #48]
  41f418:	ldr	x8, [x8, #8]
  41f41c:	cbz	x8, 41f44c <wcrtomb@plt+0x1cb3c>
  41f420:	ldr	x8, [sp, #48]
  41f424:	ldr	x8, [x8, #8]
  41f428:	str	x8, [sp, #24]
  41f42c:	ldr	x8, [sp, #48]
  41f430:	ldr	x9, [sp, #24]
  41f434:	ldr	q0, [x9]
  41f438:	str	q0, [x8]
  41f43c:	ldur	x0, [x29, #-16]
  41f440:	ldr	x1, [sp, #24]
  41f444:	bl	41f91c <wcrtomb@plt+0x1d00c>
  41f448:	b	41f458 <wcrtomb@plt+0x1cb48>
  41f44c:	ldr	x8, [sp, #48]
  41f450:	mov	x9, xzr
  41f454:	str	x9, [x8]
  41f458:	ldr	x8, [sp, #32]
  41f45c:	stur	x8, [x29, #-8]
  41f460:	b	41f51c <wcrtomb@plt+0x1cc0c>
  41f464:	ldr	x8, [sp, #48]
  41f468:	str	x8, [sp, #40]
  41f46c:	ldr	x8, [sp, #40]
  41f470:	ldr	x8, [x8, #8]
  41f474:	cbz	x8, 41f514 <wcrtomb@plt+0x1cc04>
  41f478:	ldur	x8, [x29, #-24]
  41f47c:	ldr	x9, [sp, #40]
  41f480:	ldr	x9, [x9, #8]
  41f484:	ldr	x9, [x9]
  41f488:	cmp	x8, x9
  41f48c:	b.eq	41f4b4 <wcrtomb@plt+0x1cba4>  // b.none
  41f490:	ldur	x8, [x29, #-16]
  41f494:	ldr	x8, [x8, #56]
  41f498:	ldur	x0, [x29, #-24]
  41f49c:	ldr	x9, [sp, #40]
  41f4a0:	ldr	x9, [x9, #8]
  41f4a4:	ldr	x1, [x9]
  41f4a8:	blr	x8
  41f4ac:	tbnz	w0, #0, 41f4b4 <wcrtomb@plt+0x1cba4>
  41f4b0:	b	41f504 <wcrtomb@plt+0x1cbf4>
  41f4b4:	ldr	x8, [sp, #40]
  41f4b8:	ldr	x8, [x8, #8]
  41f4bc:	ldr	x8, [x8]
  41f4c0:	str	x8, [sp, #16]
  41f4c4:	ldurb	w9, [x29, #-33]
  41f4c8:	tbnz	w9, #0, 41f4d0 <wcrtomb@plt+0x1cbc0>
  41f4cc:	b	41f4f8 <wcrtomb@plt+0x1cbe8>
  41f4d0:	ldr	x8, [sp, #40]
  41f4d4:	ldr	x8, [x8, #8]
  41f4d8:	str	x8, [sp, #8]
  41f4dc:	ldr	x8, [sp, #8]
  41f4e0:	ldr	x8, [x8, #8]
  41f4e4:	ldr	x9, [sp, #40]
  41f4e8:	str	x8, [x9, #8]
  41f4ec:	ldur	x0, [x29, #-16]
  41f4f0:	ldr	x1, [sp, #8]
  41f4f4:	bl	41f91c <wcrtomb@plt+0x1d00c>
  41f4f8:	ldr	x8, [sp, #16]
  41f4fc:	stur	x8, [x29, #-8]
  41f500:	b	41f51c <wcrtomb@plt+0x1cc0c>
  41f504:	ldr	x8, [sp, #40]
  41f508:	ldr	x8, [x8, #8]
  41f50c:	str	x8, [sp, #40]
  41f510:	b	41f46c <wcrtomb@plt+0x1cb5c>
  41f514:	mov	x8, xzr
  41f518:	stur	x8, [x29, #-8]
  41f51c:	ldur	x0, [x29, #-8]
  41f520:	ldp	x29, x30, [sp, #96]
  41f524:	add	sp, sp, #0x70
  41f528:	ret
  41f52c:	sub	sp, sp, #0x20
  41f530:	stp	x29, x30, [sp, #16]
  41f534:	add	x29, sp, #0x10
  41f538:	str	x0, [sp, #8]
  41f53c:	ldr	x8, [sp, #8]
  41f540:	ldr	x8, [x8, #72]
  41f544:	cbz	x8, 41f568 <wcrtomb@plt+0x1cc58>
  41f548:	ldr	x8, [sp, #8]
  41f54c:	ldr	x8, [x8, #72]
  41f550:	str	x8, [sp]
  41f554:	ldr	x8, [sp]
  41f558:	ldr	x8, [x8, #8]
  41f55c:	ldr	x9, [sp, #8]
  41f560:	str	x8, [x9, #72]
  41f564:	b	41f574 <wcrtomb@plt+0x1cc64>
  41f568:	mov	x0, #0x10                  	// #16
  41f56c:	bl	402450 <malloc@plt>
  41f570:	str	x0, [sp]
  41f574:	ldr	x0, [sp]
  41f578:	ldp	x29, x30, [sp, #16]
  41f57c:	add	sp, sp, #0x20
  41f580:	ret
  41f584:	sub	sp, sp, #0x40
  41f588:	stp	x29, x30, [sp, #48]
  41f58c:	add	x29, sp, #0x30
  41f590:	mov	w8, #0xffffffff            	// #-1
  41f594:	add	x2, sp, #0x18
  41f598:	stur	x0, [x29, #-8]
  41f59c:	stur	x1, [x29, #-16]
  41f5a0:	ldur	x0, [x29, #-8]
  41f5a4:	ldur	x1, [x29, #-16]
  41f5a8:	str	w8, [sp, #16]
  41f5ac:	bl	41f114 <wcrtomb@plt+0x1c804>
  41f5b0:	str	w0, [sp, #20]
  41f5b4:	ldr	w8, [sp, #20]
  41f5b8:	ldr	w9, [sp, #16]
  41f5bc:	cmp	w8, w9
  41f5c0:	b.ne	41f5d0 <wcrtomb@plt+0x1ccc0>  // b.any
  41f5c4:	mov	x8, xzr
  41f5c8:	str	x8, [sp, #8]
  41f5cc:	b	41f5f4 <wcrtomb@plt+0x1cce4>
  41f5d0:	ldr	w8, [sp, #20]
  41f5d4:	cbnz	w8, 41f5e4 <wcrtomb@plt+0x1ccd4>
  41f5d8:	ldr	x8, [sp, #24]
  41f5dc:	str	x8, [sp]
  41f5e0:	b	41f5ec <wcrtomb@plt+0x1ccdc>
  41f5e4:	ldur	x8, [x29, #-16]
  41f5e8:	str	x8, [sp]
  41f5ec:	ldr	x8, [sp]
  41f5f0:	str	x8, [sp, #8]
  41f5f4:	ldr	x8, [sp, #8]
  41f5f8:	mov	x0, x8
  41f5fc:	ldp	x29, x30, [sp, #48]
  41f600:	add	sp, sp, #0x40
  41f604:	ret
  41f608:	sub	sp, sp, #0x60
  41f60c:	stp	x29, x30, [sp, #80]
  41f610:	add	x29, sp, #0x50
  41f614:	add	x2, sp, #0x28
  41f618:	stur	x0, [x29, #-16]
  41f61c:	stur	x1, [x29, #-24]
  41f620:	ldur	x0, [x29, #-16]
  41f624:	ldur	x1, [x29, #-24]
  41f628:	mov	w8, #0x1                   	// #1
  41f62c:	and	w3, w8, #0x1
  41f630:	bl	41f374 <wcrtomb@plt+0x1ca64>
  41f634:	stur	x0, [x29, #-32]
  41f638:	ldur	x9, [x29, #-32]
  41f63c:	cbnz	x9, 41f64c <wcrtomb@plt+0x1cd3c>
  41f640:	mov	x8, xzr
  41f644:	stur	x8, [x29, #-8]
  41f648:	b	41f7b8 <wcrtomb@plt+0x1cea8>
  41f64c:	ldur	x8, [x29, #-16]
  41f650:	ldr	x9, [x8, #32]
  41f654:	subs	x9, x9, #0x1
  41f658:	str	x9, [x8, #32]
  41f65c:	ldr	x8, [sp, #40]
  41f660:	ldr	x8, [x8]
  41f664:	cbnz	x8, 41f7b0 <wcrtomb@plt+0x1cea0>
  41f668:	ldur	x8, [x29, #-16]
  41f66c:	ldr	x9, [x8, #24]
  41f670:	subs	x9, x9, #0x1
  41f674:	str	x9, [x8, #24]
  41f678:	ldur	x8, [x29, #-16]
  41f67c:	ldr	x8, [x8, #24]
  41f680:	ucvtf	s0, x8
  41f684:	ldur	x8, [x29, #-16]
  41f688:	ldr	x8, [x8, #40]
  41f68c:	ldr	s1, [x8]
  41f690:	ldur	x8, [x29, #-16]
  41f694:	ldr	x8, [x8, #16]
  41f698:	ucvtf	s2, x8
  41f69c:	fmul	s1, s1, s2
  41f6a0:	fcmp	s0, s1
  41f6a4:	cset	w10, mi  // mi = first
  41f6a8:	tbnz	w10, #0, 41f6b0 <wcrtomb@plt+0x1cda0>
  41f6ac:	b	41f7b0 <wcrtomb@plt+0x1cea0>
  41f6b0:	ldur	x0, [x29, #-16]
  41f6b4:	bl	41e89c <wcrtomb@plt+0x1bf8c>
  41f6b8:	ldur	x8, [x29, #-16]
  41f6bc:	ldr	x8, [x8, #24]
  41f6c0:	ucvtf	s0, x8
  41f6c4:	ldur	x8, [x29, #-16]
  41f6c8:	ldr	x8, [x8, #40]
  41f6cc:	ldr	s1, [x8]
  41f6d0:	ldur	x8, [x29, #-16]
  41f6d4:	ldr	x8, [x8, #16]
  41f6d8:	ucvtf	s2, x8
  41f6dc:	fmul	s1, s1, s2
  41f6e0:	fcmp	s0, s1
  41f6e4:	cset	w9, mi  // mi = first
  41f6e8:	tbnz	w9, #0, 41f6f0 <wcrtomb@plt+0x1cde0>
  41f6ec:	b	41f7b0 <wcrtomb@plt+0x1cea0>
  41f6f0:	ldur	x8, [x29, #-16]
  41f6f4:	ldr	x8, [x8, #40]
  41f6f8:	str	x8, [sp, #32]
  41f6fc:	ldr	x8, [sp, #32]
  41f700:	ldrb	w9, [x8, #16]
  41f704:	tbnz	w9, #0, 41f70c <wcrtomb@plt+0x1cdfc>
  41f708:	b	41f72c <wcrtomb@plt+0x1ce1c>
  41f70c:	ldur	x8, [x29, #-16]
  41f710:	ldr	x8, [x8, #16]
  41f714:	ucvtf	s0, x8
  41f718:	ldr	x8, [sp, #32]
  41f71c:	ldr	s1, [x8, #4]
  41f720:	fmul	s0, s0, s1
  41f724:	str	s0, [sp, #4]
  41f728:	b	41f754 <wcrtomb@plt+0x1ce44>
  41f72c:	ldur	x8, [x29, #-16]
  41f730:	ldr	x8, [x8, #16]
  41f734:	ucvtf	s0, x8
  41f738:	ldr	x8, [sp, #32]
  41f73c:	ldr	s1, [x8, #4]
  41f740:	fmul	s0, s0, s1
  41f744:	ldr	x8, [sp, #32]
  41f748:	ldr	s1, [x8, #8]
  41f74c:	fmul	s0, s0, s1
  41f750:	str	s0, [sp, #4]
  41f754:	ldr	s0, [sp, #4]
  41f758:	fcvtzu	x8, s0
  41f75c:	str	x8, [sp, #24]
  41f760:	ldur	x0, [x29, #-16]
  41f764:	ldr	x1, [sp, #24]
  41f768:	bl	41ed10 <wcrtomb@plt+0x1c400>
  41f76c:	tbnz	w0, #0, 41f7b0 <wcrtomb@plt+0x1cea0>
  41f770:	ldur	x8, [x29, #-16]
  41f774:	ldr	x8, [x8, #72]
  41f778:	str	x8, [sp, #16]
  41f77c:	ldr	x8, [sp, #16]
  41f780:	cbz	x8, 41f7a4 <wcrtomb@plt+0x1ce94>
  41f784:	ldr	x8, [sp, #16]
  41f788:	ldr	x8, [x8, #8]
  41f78c:	str	x8, [sp, #8]
  41f790:	ldr	x0, [sp, #16]
  41f794:	bl	4026c0 <free@plt>
  41f798:	ldr	x8, [sp, #8]
  41f79c:	str	x8, [sp, #16]
  41f7a0:	b	41f77c <wcrtomb@plt+0x1ce6c>
  41f7a4:	ldur	x8, [x29, #-16]
  41f7a8:	mov	x9, xzr
  41f7ac:	str	x9, [x8, #72]
  41f7b0:	ldur	x8, [x29, #-32]
  41f7b4:	stur	x8, [x29, #-8]
  41f7b8:	ldur	x0, [x29, #-8]
  41f7bc:	ldp	x29, x30, [sp, #80]
  41f7c0:	add	sp, sp, #0x60
  41f7c4:	ret
  41f7c8:	sub	sp, sp, #0x20
  41f7cc:	stp	x29, x30, [sp, #16]
  41f7d0:	add	x29, sp, #0x10
  41f7d4:	str	x0, [sp, #8]
  41f7d8:	ldr	x8, [sp, #8]
  41f7dc:	cmp	x8, #0xa
  41f7e0:	b.cs	41f7ec <wcrtomb@plt+0x1cedc>  // b.hs, b.nlast
  41f7e4:	mov	x8, #0xa                   	// #10
  41f7e8:	str	x8, [sp, #8]
  41f7ec:	ldr	x8, [sp, #8]
  41f7f0:	orr	x8, x8, #0x1
  41f7f4:	str	x8, [sp, #8]
  41f7f8:	ldr	x8, [sp, #8]
  41f7fc:	mov	x9, #0xffffffffffffffff    	// #-1
  41f800:	mov	w10, #0x0                   	// #0
  41f804:	cmp	x9, x8
  41f808:	str	w10, [sp, #4]
  41f80c:	b.eq	41f820 <wcrtomb@plt+0x1cf10>  // b.none
  41f810:	ldr	x0, [sp, #8]
  41f814:	bl	41f84c <wcrtomb@plt+0x1cf3c>
  41f818:	eor	w8, w0, #0x1
  41f81c:	str	w8, [sp, #4]
  41f820:	ldr	w8, [sp, #4]
  41f824:	tbnz	w8, #0, 41f82c <wcrtomb@plt+0x1cf1c>
  41f828:	b	41f83c <wcrtomb@plt+0x1cf2c>
  41f82c:	ldr	x8, [sp, #8]
  41f830:	add	x8, x8, #0x2
  41f834:	str	x8, [sp, #8]
  41f838:	b	41f7f8 <wcrtomb@plt+0x1cee8>
  41f83c:	ldr	x0, [sp, #8]
  41f840:	ldp	x29, x30, [sp, #16]
  41f844:	add	sp, sp, #0x20
  41f848:	ret
  41f84c:	sub	sp, sp, #0x20
  41f850:	mov	x8, #0x3                   	// #3
  41f854:	str	x0, [sp, #24]
  41f858:	str	x8, [sp, #16]
  41f85c:	ldr	x8, [sp, #16]
  41f860:	ldr	x9, [sp, #16]
  41f864:	mul	x8, x8, x9
  41f868:	str	x8, [sp, #8]
  41f86c:	ldr	x8, [sp, #8]
  41f870:	ldr	x9, [sp, #24]
  41f874:	mov	w10, #0x0                   	// #0
  41f878:	cmp	x8, x9
  41f87c:	str	w10, [sp, #4]
  41f880:	b.cs	41f8a4 <wcrtomb@plt+0x1cf94>  // b.hs, b.nlast
  41f884:	ldr	x8, [sp, #24]
  41f888:	ldr	x9, [sp, #16]
  41f88c:	udiv	x10, x8, x9
  41f890:	mul	x9, x10, x9
  41f894:	subs	x8, x8, x9
  41f898:	cmp	x8, #0x0
  41f89c:	cset	w11, ne  // ne = any
  41f8a0:	str	w11, [sp, #4]
  41f8a4:	ldr	w8, [sp, #4]
  41f8a8:	tbnz	w8, #0, 41f8b0 <wcrtomb@plt+0x1cfa0>
  41f8ac:	b	41f8e4 <wcrtomb@plt+0x1cfd4>
  41f8b0:	ldr	x8, [sp, #16]
  41f8b4:	add	x8, x8, #0x1
  41f8b8:	str	x8, [sp, #16]
  41f8bc:	ldr	x8, [sp, #16]
  41f8c0:	mov	x9, #0x4                   	// #4
  41f8c4:	mul	x8, x9, x8
  41f8c8:	ldr	x9, [sp, #8]
  41f8cc:	add	x8, x9, x8
  41f8d0:	str	x8, [sp, #8]
  41f8d4:	ldr	x8, [sp, #16]
  41f8d8:	add	x8, x8, #0x1
  41f8dc:	str	x8, [sp, #16]
  41f8e0:	b	41f86c <wcrtomb@plt+0x1cf5c>
  41f8e4:	ldr	x8, [sp, #24]
  41f8e8:	ldr	x9, [sp, #16]
  41f8ec:	udiv	x10, x8, x9
  41f8f0:	mul	x9, x10, x9
  41f8f4:	subs	x8, x8, x9
  41f8f8:	mov	w11, wzr
  41f8fc:	mov	w12, #0x1                   	// #1
  41f900:	cmp	x8, #0x0
  41f904:	csel	w11, w12, w11, ne  // ne = any
  41f908:	cmp	w11, #0x0
  41f90c:	cset	w11, ne  // ne = any
  41f910:	and	w0, w11, #0x1
  41f914:	add	sp, sp, #0x20
  41f918:	ret
  41f91c:	sub	sp, sp, #0x10
  41f920:	mov	x8, xzr
  41f924:	str	x0, [sp, #8]
  41f928:	str	x1, [sp]
  41f92c:	ldr	x9, [sp]
  41f930:	str	x8, [x9]
  41f934:	ldr	x8, [sp, #8]
  41f938:	ldr	x8, [x8, #72]
  41f93c:	ldr	x9, [sp]
  41f940:	str	x8, [x9, #8]
  41f944:	ldr	x8, [sp]
  41f948:	ldr	x9, [sp, #8]
  41f94c:	str	x8, [x9, #72]
  41f950:	add	sp, sp, #0x10
  41f954:	ret
  41f958:	sub	sp, sp, #0x140
  41f95c:	stp	x29, x30, [sp, #288]
  41f960:	str	x28, [sp, #304]
  41f964:	add	x29, sp, #0x120
  41f968:	sub	x8, x29, #0x18
  41f96c:	str	x0, [x8, #8]
  41f970:	str	x1, [x8]
  41f974:	ldr	x9, [x8, #8]
  41f978:	ldr	x10, [x8]
  41f97c:	cmp	x9, x10
  41f980:	str	x8, [sp, #96]
  41f984:	b.ne	41f994 <wcrtomb@plt+0x1d084>  // b.any
  41f988:	ldr	x8, [sp, #96]
  41f98c:	str	wzr, [x8, #20]
  41f990:	b	41fd9c <wcrtomb@plt+0x1d48c>
  41f994:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  41f998:	cmp	x0, #0x1
  41f99c:	b.ls	41fcb8 <wcrtomb@plt+0x1d3a8>  // b.plast
  41f9a0:	ldr	x8, [sp, #96]
  41f9a4:	ldr	x9, [x8, #8]
  41f9a8:	sub	x10, x29, #0x58
  41f9ac:	str	x9, [x10, #16]
  41f9b0:	mov	w11, #0x0                   	// #0
  41f9b4:	sturb	w11, [x29, #-88]
  41f9b8:	stur	xzr, [x10, #4]
  41f9bc:	strb	w11, [x10, #12]
  41f9c0:	ldr	x9, [x8]
  41f9c4:	add	x10, sp, #0x88
  41f9c8:	str	x9, [x10, #16]
  41f9cc:	strb	w11, [sp, #136]
  41f9d0:	stur	xzr, [x10, #4]
  41f9d4:	strb	w11, [x10, #12]
  41f9d8:	sub	x8, x29, #0x58
  41f9dc:	mov	x0, x8
  41f9e0:	str	x8, [sp, #88]
  41f9e4:	bl	41fdb4 <wcrtomb@plt+0x1d4a4>
  41f9e8:	ldr	x8, [sp, #88]
  41f9ec:	ldrb	w9, [x8, #32]
  41f9f0:	mov	w10, #0x0                   	// #0
  41f9f4:	str	w10, [sp, #84]
  41f9f8:	tbnz	w9, #0, 41fa00 <wcrtomb@plt+0x1d0f0>
  41f9fc:	b	41fa10 <wcrtomb@plt+0x1d100>
  41fa00:	ldur	w8, [x29, #-52]
  41fa04:	cmp	w8, #0x0
  41fa08:	cset	w8, eq  // eq = none
  41fa0c:	str	w8, [sp, #84]
  41fa10:	ldr	w8, [sp, #84]
  41fa14:	eor	w8, w8, #0x1
  41fa18:	mov	w9, #0x0                   	// #0
  41fa1c:	str	w9, [sp, #80]
  41fa20:	tbnz	w8, #0, 41fa28 <wcrtomb@plt+0x1d118>
  41fa24:	b	41fa6c <wcrtomb@plt+0x1d15c>
  41fa28:	add	x8, sp, #0x88
  41fa2c:	mov	x0, x8
  41fa30:	str	x8, [sp, #72]
  41fa34:	bl	41fdb4 <wcrtomb@plt+0x1d4a4>
  41fa38:	ldr	x8, [sp, #72]
  41fa3c:	ldrb	w9, [x8, #32]
  41fa40:	mov	w10, #0x0                   	// #0
  41fa44:	str	w10, [sp, #68]
  41fa48:	tbnz	w9, #0, 41fa50 <wcrtomb@plt+0x1d140>
  41fa4c:	b	41fa60 <wcrtomb@plt+0x1d150>
  41fa50:	ldr	w8, [sp, #172]
  41fa54:	cmp	w8, #0x0
  41fa58:	cset	w8, eq  // eq = none
  41fa5c:	str	w8, [sp, #68]
  41fa60:	ldr	w8, [sp, #68]
  41fa64:	eor	w8, w8, #0x1
  41fa68:	str	w8, [sp, #80]
  41fa6c:	ldr	w8, [sp, #80]
  41fa70:	tbnz	w8, #0, 41fa78 <wcrtomb@plt+0x1d168>
  41fa74:	b	41fbfc <wcrtomb@plt+0x1d2ec>
  41fa78:	sub	x8, x29, #0x58
  41fa7c:	ldrb	w9, [x8, #32]
  41fa80:	tbnz	w9, #0, 41fa88 <wcrtomb@plt+0x1d178>
  41fa84:	b	41fad4 <wcrtomb@plt+0x1d1c4>
  41fa88:	add	x8, sp, #0x88
  41fa8c:	ldrb	w9, [x8, #32]
  41fa90:	tbnz	w9, #0, 41fa98 <wcrtomb@plt+0x1d188>
  41fa94:	b	41fac0 <wcrtomb@plt+0x1d1b0>
  41fa98:	ldur	w0, [x29, #-52]
  41fa9c:	bl	4028c0 <towlower@plt>
  41faa0:	ldr	w8, [sp, #172]
  41faa4:	str	w0, [sp, #64]
  41faa8:	mov	w0, w8
  41faac:	bl	4028c0 <towlower@plt>
  41fab0:	ldr	w8, [sp, #64]
  41fab4:	subs	w9, w8, w0
  41fab8:	str	w9, [sp, #60]
  41fabc:	b	41fac8 <wcrtomb@plt+0x1d1b8>
  41fac0:	mov	w8, #0xffffffff            	// #-1
  41fac4:	str	w8, [sp, #60]
  41fac8:	ldr	w8, [sp, #60]
  41facc:	str	w8, [sp, #56]
  41fad0:	b	41fba4 <wcrtomb@plt+0x1d294>
  41fad4:	add	x8, sp, #0x88
  41fad8:	ldrb	w9, [x8, #32]
  41fadc:	tbnz	w9, #0, 41fae4 <wcrtomb@plt+0x1d1d4>
  41fae0:	b	41faf0 <wcrtomb@plt+0x1d1e0>
  41fae4:	mov	w8, #0x1                   	// #1
  41fae8:	str	w8, [sp, #52]
  41faec:	b	41fb9c <wcrtomb@plt+0x1d28c>
  41faf0:	ldur	x8, [x29, #-64]
  41faf4:	ldr	x9, [sp, #160]
  41faf8:	cmp	x8, x9
  41fafc:	b.ne	41fb20 <wcrtomb@plt+0x1d210>  // b.any
  41fb00:	sub	x8, x29, #0x58
  41fb04:	ldr	x0, [x8, #16]
  41fb08:	add	x8, sp, #0x88
  41fb0c:	ldr	x1, [x8, #16]
  41fb10:	ldur	x2, [x29, #-64]
  41fb14:	bl	402670 <memcmp@plt>
  41fb18:	str	w0, [sp, #48]
  41fb1c:	b	41fb94 <wcrtomb@plt+0x1d284>
  41fb20:	ldur	x8, [x29, #-64]
  41fb24:	ldr	x9, [sp, #160]
  41fb28:	cmp	x8, x9
  41fb2c:	b.cs	41fb60 <wcrtomb@plt+0x1d250>  // b.hs, b.nlast
  41fb30:	sub	x8, x29, #0x58
  41fb34:	ldr	x0, [x8, #16]
  41fb38:	add	x8, sp, #0x88
  41fb3c:	ldr	x1, [x8, #16]
  41fb40:	ldur	x2, [x29, #-64]
  41fb44:	bl	402670 <memcmp@plt>
  41fb48:	mov	w9, #0x1                   	// #1
  41fb4c:	mov	w10, #0xffffffff            	// #-1
  41fb50:	cmp	w0, #0x0
  41fb54:	csel	w9, w9, w10, gt
  41fb58:	str	w9, [sp, #44]
  41fb5c:	b	41fb8c <wcrtomb@plt+0x1d27c>
  41fb60:	sub	x8, x29, #0x58
  41fb64:	ldr	x0, [x8, #16]
  41fb68:	add	x8, sp, #0x88
  41fb6c:	ldr	x1, [x8, #16]
  41fb70:	ldr	x2, [sp, #160]
  41fb74:	bl	402670 <memcmp@plt>
  41fb78:	mov	w9, #0x1                   	// #1
  41fb7c:	mov	w10, #0xffffffff            	// #-1
  41fb80:	cmp	w0, #0x0
  41fb84:	csel	w9, w9, w10, ge  // ge = tcont
  41fb88:	str	w9, [sp, #44]
  41fb8c:	ldr	w8, [sp, #44]
  41fb90:	str	w8, [sp, #48]
  41fb94:	ldr	w8, [sp, #48]
  41fb98:	str	w8, [sp, #52]
  41fb9c:	ldr	w8, [sp, #52]
  41fba0:	str	w8, [sp, #56]
  41fba4:	ldr	w8, [sp, #56]
  41fba8:	str	w8, [sp, #132]
  41fbac:	ldr	w8, [sp, #132]
  41fbb0:	cbz	w8, 41fbc4 <wcrtomb@plt+0x1d2b4>
  41fbb4:	ldr	w8, [sp, #132]
  41fbb8:	ldr	x9, [sp, #96]
  41fbbc:	str	w8, [x9, #20]
  41fbc0:	b	41fd9c <wcrtomb@plt+0x1d48c>
  41fbc4:	sub	x8, x29, #0x58
  41fbc8:	ldur	x9, [x29, #-64]
  41fbcc:	ldr	x10, [x8, #16]
  41fbd0:	add	x9, x10, x9
  41fbd4:	str	x9, [x8, #16]
  41fbd8:	mov	w11, #0x0                   	// #0
  41fbdc:	strb	w11, [x8, #12]
  41fbe0:	add	x8, sp, #0x88
  41fbe4:	ldr	x9, [sp, #160]
  41fbe8:	ldr	x10, [x8, #16]
  41fbec:	add	x9, x10, x9
  41fbf0:	str	x9, [x8, #16]
  41fbf4:	strb	w11, [x8, #12]
  41fbf8:	b	41f9d8 <wcrtomb@plt+0x1d0c8>
  41fbfc:	sub	x8, x29, #0x58
  41fc00:	mov	x0, x8
  41fc04:	str	x8, [sp, #32]
  41fc08:	bl	41fdb4 <wcrtomb@plt+0x1d4a4>
  41fc0c:	ldr	x8, [sp, #32]
  41fc10:	ldrb	w9, [x8, #32]
  41fc14:	mov	w10, #0x0                   	// #0
  41fc18:	str	w10, [sp, #28]
  41fc1c:	tbnz	w9, #0, 41fc24 <wcrtomb@plt+0x1d314>
  41fc20:	b	41fc34 <wcrtomb@plt+0x1d324>
  41fc24:	ldur	w8, [x29, #-52]
  41fc28:	cmp	w8, #0x0
  41fc2c:	cset	w8, eq  // eq = none
  41fc30:	str	w8, [sp, #28]
  41fc34:	ldr	w8, [sp, #28]
  41fc38:	eor	w8, w8, #0x1
  41fc3c:	tbnz	w8, #0, 41fc44 <wcrtomb@plt+0x1d334>
  41fc40:	b	41fc54 <wcrtomb@plt+0x1d344>
  41fc44:	mov	w8, #0x1                   	// #1
  41fc48:	ldr	x9, [sp, #96]
  41fc4c:	str	w8, [x9, #20]
  41fc50:	b	41fd9c <wcrtomb@plt+0x1d48c>
  41fc54:	add	x8, sp, #0x88
  41fc58:	mov	x0, x8
  41fc5c:	str	x8, [sp, #16]
  41fc60:	bl	41fdb4 <wcrtomb@plt+0x1d4a4>
  41fc64:	ldr	x8, [sp, #16]
  41fc68:	ldrb	w9, [x8, #32]
  41fc6c:	mov	w10, #0x0                   	// #0
  41fc70:	str	w10, [sp, #12]
  41fc74:	tbnz	w9, #0, 41fc7c <wcrtomb@plt+0x1d36c>
  41fc78:	b	41fc8c <wcrtomb@plt+0x1d37c>
  41fc7c:	ldr	w8, [sp, #172]
  41fc80:	cmp	w8, #0x0
  41fc84:	cset	w8, eq  // eq = none
  41fc88:	str	w8, [sp, #12]
  41fc8c:	ldr	w8, [sp, #12]
  41fc90:	eor	w8, w8, #0x1
  41fc94:	tbnz	w8, #0, 41fc9c <wcrtomb@plt+0x1d38c>
  41fc98:	b	41fcac <wcrtomb@plt+0x1d39c>
  41fc9c:	mov	w8, #0xffffffff            	// #-1
  41fca0:	ldr	x9, [sp, #96]
  41fca4:	str	w8, [x9, #20]
  41fca8:	b	41fd9c <wcrtomb@plt+0x1d48c>
  41fcac:	ldr	x8, [sp, #96]
  41fcb0:	str	wzr, [x8, #20]
  41fcb4:	b	41fd9c <wcrtomb@plt+0x1d48c>
  41fcb8:	ldr	x8, [sp, #96]
  41fcbc:	ldr	x9, [x8, #8]
  41fcc0:	str	x9, [sp, #120]
  41fcc4:	ldr	x9, [x8]
  41fcc8:	str	x9, [sp, #112]
  41fccc:	bl	4026b0 <__ctype_b_loc@plt>
  41fcd0:	ldr	x8, [x0]
  41fcd4:	ldr	x9, [sp, #120]
  41fcd8:	ldrb	w10, [x9]
  41fcdc:	ldrh	w10, [x8, w10, sxtw #1]
  41fce0:	and	w10, w10, #0x100
  41fce4:	cbz	w10, 41fcfc <wcrtomb@plt+0x1d3ec>
  41fce8:	ldr	x8, [sp, #120]
  41fcec:	ldrb	w0, [x8]
  41fcf0:	bl	402880 <tolower@plt>
  41fcf4:	str	w0, [sp, #8]
  41fcf8:	b	41fd08 <wcrtomb@plt+0x1d3f8>
  41fcfc:	ldr	x8, [sp, #120]
  41fd00:	ldrb	w9, [x8]
  41fd04:	str	w9, [sp, #8]
  41fd08:	ldr	w8, [sp, #8]
  41fd0c:	strb	w8, [sp, #111]
  41fd10:	bl	4026b0 <__ctype_b_loc@plt>
  41fd14:	ldr	x9, [x0]
  41fd18:	ldr	x10, [sp, #112]
  41fd1c:	ldrb	w8, [x10]
  41fd20:	ldrh	w8, [x9, w8, sxtw #1]
  41fd24:	and	w8, w8, #0x100
  41fd28:	cbz	w8, 41fd40 <wcrtomb@plt+0x1d430>
  41fd2c:	ldr	x8, [sp, #112]
  41fd30:	ldrb	w0, [x8]
  41fd34:	bl	402880 <tolower@plt>
  41fd38:	str	w0, [sp, #4]
  41fd3c:	b	41fd4c <wcrtomb@plt+0x1d43c>
  41fd40:	ldr	x8, [sp, #112]
  41fd44:	ldrb	w9, [x8]
  41fd48:	str	w9, [sp, #4]
  41fd4c:	ldr	w8, [sp, #4]
  41fd50:	strb	w8, [sp, #110]
  41fd54:	ldrb	w8, [sp, #111]
  41fd58:	cbnz	w8, 41fd60 <wcrtomb@plt+0x1d450>
  41fd5c:	b	41fd88 <wcrtomb@plt+0x1d478>
  41fd60:	ldr	x8, [sp, #120]
  41fd64:	add	x8, x8, #0x1
  41fd68:	str	x8, [sp, #120]
  41fd6c:	ldr	x8, [sp, #112]
  41fd70:	add	x8, x8, #0x1
  41fd74:	str	x8, [sp, #112]
  41fd78:	ldrb	w8, [sp, #111]
  41fd7c:	ldrb	w9, [sp, #110]
  41fd80:	cmp	w8, w9
  41fd84:	b.eq	41fccc <wcrtomb@plt+0x1d3bc>  // b.none
  41fd88:	ldrb	w8, [sp, #111]
  41fd8c:	ldrb	w9, [sp, #110]
  41fd90:	subs	w8, w8, w9
  41fd94:	ldr	x10, [sp, #96]
  41fd98:	str	w8, [x10, #20]
  41fd9c:	ldr	x8, [sp, #96]
  41fda0:	ldr	w0, [x8, #20]
  41fda4:	ldr	x28, [sp, #304]
  41fda8:	ldp	x29, x30, [sp, #288]
  41fdac:	add	sp, sp, #0x140
  41fdb0:	ret
  41fdb4:	sub	sp, sp, #0x50
  41fdb8:	stp	x29, x30, [sp, #64]
  41fdbc:	add	x29, sp, #0x40
  41fdc0:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41fdc4:	add	x8, x8, #0xc13
  41fdc8:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41fdcc:	add	x9, x9, #0xc1f
  41fdd0:	stur	x0, [x29, #-8]
  41fdd4:	ldur	x10, [x29, #-8]
  41fdd8:	ldrb	w11, [x10, #12]
  41fddc:	stur	x8, [x29, #-16]
  41fde0:	stur	x9, [x29, #-24]
  41fde4:	tbnz	w11, #0, 41fdec <wcrtomb@plt+0x1d4dc>
  41fde8:	b	41fdf0 <wcrtomb@plt+0x1d4e0>
  41fdec:	b	41fff0 <wcrtomb@plt+0x1d6e0>
  41fdf0:	ldur	x8, [x29, #-8]
  41fdf4:	ldrb	w9, [x8]
  41fdf8:	tbnz	w9, #0, 41fe00 <wcrtomb@plt+0x1d4f0>
  41fdfc:	b	41fe04 <wcrtomb@plt+0x1d4f4>
  41fe00:	b	41fe84 <wcrtomb@plt+0x1d574>
  41fe04:	ldur	x8, [x29, #-8]
  41fe08:	ldr	x8, [x8, #16]
  41fe0c:	ldrb	w0, [x8]
  41fe10:	bl	4402dc <_obstack_memory_used@@Base+0x189bc>
  41fe14:	tbnz	w0, #0, 41fe1c <wcrtomb@plt+0x1d50c>
  41fe18:	b	41fe4c <wcrtomb@plt+0x1d53c>
  41fe1c:	ldur	x8, [x29, #-8]
  41fe20:	mov	x9, #0x1                   	// #1
  41fe24:	str	x9, [x8, #24]
  41fe28:	ldur	x8, [x29, #-8]
  41fe2c:	ldr	x8, [x8, #16]
  41fe30:	ldrb	w10, [x8]
  41fe34:	ldur	x8, [x29, #-8]
  41fe38:	str	w10, [x8, #36]
  41fe3c:	ldur	x8, [x29, #-8]
  41fe40:	mov	w10, #0x1                   	// #1
  41fe44:	strb	w10, [x8, #32]
  41fe48:	b	41ffe4 <wcrtomb@plt+0x1d6d4>
  41fe4c:	ldur	x8, [x29, #-8]
  41fe50:	add	x0, x8, #0x4
  41fe54:	bl	402630 <mbsinit@plt>
  41fe58:	cbz	w0, 41fe60 <wcrtomb@plt+0x1d550>
  41fe5c:	b	41fe78 <wcrtomb@plt+0x1d568>
  41fe60:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41fe64:	add	x0, x0, #0xbfc
  41fe68:	ldur	x1, [x29, #-16]
  41fe6c:	mov	w2, #0x96                  	// #150
  41fe70:	ldur	x3, [x29, #-24]
  41fe74:	bl	402860 <__assert_fail@plt>
  41fe78:	ldur	x8, [x29, #-8]
  41fe7c:	mov	w9, #0x1                   	// #1
  41fe80:	strb	w9, [x8]
  41fe84:	ldur	x8, [x29, #-8]
  41fe88:	add	x0, x8, #0x24
  41fe8c:	ldur	x8, [x29, #-8]
  41fe90:	ldr	x1, [x8, #16]
  41fe94:	ldur	x8, [x29, #-8]
  41fe98:	ldr	x8, [x8, #16]
  41fe9c:	str	x0, [sp, #32]
  41fea0:	str	x1, [sp, #24]
  41fea4:	str	x8, [sp, #16]
  41fea8:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  41feac:	ldr	x8, [sp, #16]
  41feb0:	str	x0, [sp, #8]
  41feb4:	mov	x0, x8
  41feb8:	ldr	x1, [sp, #8]
  41febc:	bl	422718 <wcrtomb@plt+0x1fe08>
  41fec0:	ldur	x8, [x29, #-8]
  41fec4:	add	x3, x8, #0x4
  41fec8:	ldr	x8, [sp, #32]
  41fecc:	str	x0, [sp]
  41fed0:	mov	x0, x8
  41fed4:	ldr	x1, [sp, #24]
  41fed8:	ldr	x2, [sp]
  41fedc:	bl	4271dc <wcrtomb@plt+0x248cc>
  41fee0:	ldur	x8, [x29, #-8]
  41fee4:	str	x0, [x8, #24]
  41fee8:	ldur	x8, [x29, #-8]
  41feec:	ldr	x8, [x8, #24]
  41fef0:	mov	x9, #0xffffffffffffffff    	// #-1
  41fef4:	cmp	x8, x9
  41fef8:	b.ne	41ff18 <wcrtomb@plt+0x1d608>  // b.any
  41fefc:	ldur	x8, [x29, #-8]
  41ff00:	mov	x9, #0x1                   	// #1
  41ff04:	str	x9, [x8, #24]
  41ff08:	ldur	x8, [x29, #-8]
  41ff0c:	mov	w10, #0x0                   	// #0
  41ff10:	strb	w10, [x8, #32]
  41ff14:	b	41ffe4 <wcrtomb@plt+0x1d6d4>
  41ff18:	ldur	x8, [x29, #-8]
  41ff1c:	ldr	x8, [x8, #24]
  41ff20:	mov	x9, #0xfffffffffffffffe    	// #-2
  41ff24:	cmp	x8, x9
  41ff28:	b.ne	41ff50 <wcrtomb@plt+0x1d640>  // b.any
  41ff2c:	ldur	x8, [x29, #-8]
  41ff30:	ldr	x0, [x8, #16]
  41ff34:	bl	4022f0 <strlen@plt>
  41ff38:	ldur	x8, [x29, #-8]
  41ff3c:	str	x0, [x8, #24]
  41ff40:	ldur	x8, [x29, #-8]
  41ff44:	mov	w9, #0x0                   	// #0
  41ff48:	strb	w9, [x8, #32]
  41ff4c:	b	41ffe4 <wcrtomb@plt+0x1d6d4>
  41ff50:	ldur	x8, [x29, #-8]
  41ff54:	ldr	x8, [x8, #24]
  41ff58:	cbnz	x8, 41ffbc <wcrtomb@plt+0x1d6ac>
  41ff5c:	ldur	x8, [x29, #-8]
  41ff60:	mov	x9, #0x1                   	// #1
  41ff64:	str	x9, [x8, #24]
  41ff68:	ldur	x8, [x29, #-8]
  41ff6c:	ldr	x8, [x8, #16]
  41ff70:	ldrb	w10, [x8]
  41ff74:	cbnz	w10, 41ff7c <wcrtomb@plt+0x1d66c>
  41ff78:	b	41ff94 <wcrtomb@plt+0x1d684>
  41ff7c:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41ff80:	add	x0, x0, #0xc4f
  41ff84:	ldur	x1, [x29, #-16]
  41ff88:	mov	w2, #0xb2                  	// #178
  41ff8c:	ldur	x3, [x29, #-24]
  41ff90:	bl	402860 <__assert_fail@plt>
  41ff94:	ldur	x8, [x29, #-8]
  41ff98:	ldr	w9, [x8, #36]
  41ff9c:	cbnz	w9, 41ffa4 <wcrtomb@plt+0x1d694>
  41ffa0:	b	41ffbc <wcrtomb@plt+0x1d6ac>
  41ffa4:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  41ffa8:	add	x0, x0, #0xc66
  41ffac:	ldur	x1, [x29, #-16]
  41ffb0:	mov	w2, #0xb3                  	// #179
  41ffb4:	ldur	x3, [x29, #-24]
  41ffb8:	bl	402860 <__assert_fail@plt>
  41ffbc:	ldur	x8, [x29, #-8]
  41ffc0:	mov	w9, #0x1                   	// #1
  41ffc4:	strb	w9, [x8, #32]
  41ffc8:	ldur	x8, [x29, #-8]
  41ffcc:	add	x0, x8, #0x4
  41ffd0:	bl	402630 <mbsinit@plt>
  41ffd4:	cbz	w0, 41ffe4 <wcrtomb@plt+0x1d6d4>
  41ffd8:	ldur	x8, [x29, #-8]
  41ffdc:	mov	w9, #0x0                   	// #0
  41ffe0:	strb	w9, [x8]
  41ffe4:	ldur	x8, [x29, #-8]
  41ffe8:	mov	w9, #0x1                   	// #1
  41ffec:	strb	w9, [x8, #12]
  41fff0:	ldp	x29, x30, [sp, #64]
  41fff4:	add	sp, sp, #0x50
  41fff8:	ret
  41fffc:	sub	sp, sp, #0x10
  420000:	str	x0, [sp, #8]
  420004:	str	x1, [sp]
  420008:	ldr	x8, [sp]
  42000c:	ldr	x9, [sp, #8]
  420010:	ldr	x10, [x9, #16]
  420014:	add	x8, x10, x8
  420018:	str	x8, [x9, #16]
  42001c:	add	sp, sp, #0x10
  420020:	ret
  420024:	sub	sp, sp, #0x20
  420028:	stp	x29, x30, [sp, #16]
  42002c:	add	x29, sp, #0x10
  420030:	str	x0, [sp, #8]
  420034:	str	x1, [sp]
  420038:	ldr	x8, [sp]
  42003c:	ldrb	w9, [x8]
  420040:	ldr	x8, [sp, #8]
  420044:	mov	w2, w9
  420048:	and	w10, w2, #0x1
  42004c:	strb	w10, [x8]
  420050:	tbnz	w9, #0, 420058 <wcrtomb@plt+0x1d748>
  420054:	b	42006c <wcrtomb@plt+0x1d75c>
  420058:	ldr	x8, [sp, #8]
  42005c:	ldr	x9, [sp]
  420060:	ldur	x9, [x9, #4]
  420064:	stur	x9, [x8, #4]
  420068:	b	420074 <wcrtomb@plt+0x1d764>
  42006c:	ldr	x8, [sp, #8]
  420070:	stur	xzr, [x8, #4]
  420074:	ldr	x8, [sp]
  420078:	ldrb	w9, [x8, #12]
  42007c:	ldr	x8, [sp, #8]
  420080:	and	w9, w9, #0x1
  420084:	strb	w9, [x8, #12]
  420088:	ldr	x8, [sp, #8]
  42008c:	add	x0, x8, #0x10
  420090:	ldr	x8, [sp]
  420094:	add	x1, x8, #0x10
  420098:	bl	440224 <_obstack_memory_used@@Base+0x18904>
  42009c:	ldp	x29, x30, [sp, #16]
  4200a0:	add	sp, sp, #0x20
  4200a4:	ret
  4200a8:	sub	sp, sp, #0x80
  4200ac:	stp	x29, x30, [sp, #112]
  4200b0:	add	x29, sp, #0x70
  4200b4:	stur	x0, [x29, #-16]
  4200b8:	stur	w1, [x29, #-20]
  4200bc:	stur	w2, [x29, #-24]
  4200c0:	stur	x3, [x29, #-32]
  4200c4:	ldur	w8, [x29, #-20]
  4200c8:	strb	w8, [sp, #31]
  4200cc:	ldur	w8, [x29, #-24]
  4200d0:	strb	w8, [sp, #30]
  4200d4:	ldrb	w8, [sp, #31]
  4200d8:	ldrb	w9, [sp, #30]
  4200dc:	cmp	w8, w9
  4200e0:	b.ne	4200fc <wcrtomb@plt+0x1d7ec>  // b.any
  4200e4:	ldur	x0, [x29, #-16]
  4200e8:	ldrb	w1, [sp, #31]
  4200ec:	ldur	x2, [x29, #-32]
  4200f0:	bl	402770 <memchr@plt>
  4200f4:	stur	x0, [x29, #-8]
  4200f8:	b	42033c <wcrtomb@plt+0x1da2c>
  4200fc:	ldur	x8, [x29, #-16]
  420100:	stur	x8, [x29, #-48]
  420104:	ldur	x8, [x29, #-32]
  420108:	cmp	x8, #0x0
  42010c:	cset	w9, ls  // ls = plast
  420110:	mov	w10, #0x0                   	// #0
  420114:	str	w10, [sp, #4]
  420118:	tbnz	w9, #0, 42013c <wcrtomb@plt+0x1d82c>
  42011c:	ldur	x8, [x29, #-48]
  420120:	mov	x9, #0x8                   	// #8
  420124:	udiv	x10, x8, x9
  420128:	mul	x9, x10, x9
  42012c:	subs	x8, x8, x9
  420130:	cmp	x8, #0x0
  420134:	cset	w11, ne  // ne = any
  420138:	str	w11, [sp, #4]
  42013c:	ldr	w8, [sp, #4]
  420140:	tbnz	w8, #0, 420148 <wcrtomb@plt+0x1d838>
  420144:	b	4201a0 <wcrtomb@plt+0x1d890>
  420148:	ldur	x8, [x29, #-48]
  42014c:	stur	x8, [x29, #-40]
  420150:	ldur	x8, [x29, #-40]
  420154:	ldrb	w9, [x8]
  420158:	ldrb	w10, [sp, #31]
  42015c:	cmp	w9, w10
  420160:	b.eq	420178 <wcrtomb@plt+0x1d868>  // b.none
  420164:	ldur	x8, [x29, #-40]
  420168:	ldrb	w9, [x8]
  42016c:	ldrb	w10, [sp, #30]
  420170:	cmp	w9, w10
  420174:	b.ne	420184 <wcrtomb@plt+0x1d874>  // b.any
  420178:	ldur	x8, [x29, #-48]
  42017c:	stur	x8, [x29, #-8]
  420180:	b	42033c <wcrtomb@plt+0x1da2c>
  420184:	ldur	x8, [x29, #-40]
  420188:	add	x8, x8, #0x1
  42018c:	stur	x8, [x29, #-48]
  420190:	ldur	x8, [x29, #-32]
  420194:	subs	x8, x8, #0x1
  420198:	stur	x8, [x29, #-32]
  42019c:	b	420104 <wcrtomb@plt+0x1d7f4>
  4201a0:	ldur	x8, [x29, #-48]
  4201a4:	str	x8, [sp, #56]
  4201a8:	mov	x8, #0x101                 	// #257
  4201ac:	movk	x8, #0x101, lsl #16
  4201b0:	str	x8, [sp, #48]
  4201b4:	ldrb	w9, [sp, #31]
  4201b8:	ldrb	w10, [sp, #31]
  4201bc:	orr	w9, w9, w10, lsl #8
  4201c0:	mov	w0, w9
  4201c4:	sxtw	x8, w0
  4201c8:	str	x8, [sp, #40]
  4201cc:	ldrb	w9, [sp, #30]
  4201d0:	ldrb	w10, [sp, #30]
  4201d4:	orr	w9, w9, w10, lsl #8
  4201d8:	mov	w0, w9
  4201dc:	sxtw	x8, w0
  4201e0:	str	x8, [sp, #32]
  4201e4:	ldr	x8, [sp, #40]
  4201e8:	ldr	x11, [sp, #40]
  4201ec:	orr	x8, x11, x8, lsl #16
  4201f0:	str	x8, [sp, #40]
  4201f4:	ldr	x8, [sp, #32]
  4201f8:	ldr	x11, [sp, #32]
  4201fc:	orr	x8, x11, x8, lsl #16
  420200:	str	x8, [sp, #32]
  420204:	ldr	x8, [sp, #48]
  420208:	lsl	x8, x8, #31
  42020c:	ldr	x11, [sp, #48]
  420210:	orr	x8, x11, x8, lsl #1
  420214:	str	x8, [sp, #48]
  420218:	ldr	x8, [sp, #40]
  42021c:	lsl	x8, x8, #31
  420220:	ldr	x11, [sp, #40]
  420224:	orr	x8, x11, x8, lsl #1
  420228:	str	x8, [sp, #40]
  42022c:	ldr	x8, [sp, #32]
  420230:	lsl	x8, x8, #31
  420234:	ldr	x11, [sp, #32]
  420238:	orr	x8, x11, x8, lsl #1
  42023c:	str	x8, [sp, #32]
  420240:	ldur	x8, [x29, #-32]
  420244:	cmp	x8, #0x8
  420248:	b.cc	4202cc <wcrtomb@plt+0x1d9bc>  // b.lo, b.ul, b.last
  42024c:	ldr	x8, [sp, #56]
  420250:	ldr	x8, [x8]
  420254:	ldr	x9, [sp, #40]
  420258:	eor	x8, x8, x9
  42025c:	str	x8, [sp, #16]
  420260:	ldr	x8, [sp, #56]
  420264:	ldr	x8, [x8]
  420268:	ldr	x9, [sp, #32]
  42026c:	eor	x8, x8, x9
  420270:	str	x8, [sp, #8]
  420274:	ldr	x8, [sp, #16]
  420278:	ldr	x9, [sp, #48]
  42027c:	subs	x8, x8, x9
  420280:	ldr	x9, [sp, #16]
  420284:	bic	x8, x8, x9
  420288:	ldr	x9, [sp, #8]
  42028c:	ldr	x10, [sp, #48]
  420290:	subs	x9, x9, x10
  420294:	ldr	x10, [sp, #8]
  420298:	bic	x9, x9, x10
  42029c:	orr	x8, x8, x9
  4202a0:	ldr	x9, [sp, #48]
  4202a4:	and	x8, x8, x9, lsl #7
  4202a8:	cbz	x8, 4202b0 <wcrtomb@plt+0x1d9a0>
  4202ac:	b	4202cc <wcrtomb@plt+0x1d9bc>
  4202b0:	ldr	x8, [sp, #56]
  4202b4:	add	x8, x8, #0x8
  4202b8:	str	x8, [sp, #56]
  4202bc:	ldur	x8, [x29, #-32]
  4202c0:	subs	x8, x8, #0x8
  4202c4:	stur	x8, [x29, #-32]
  4202c8:	b	420240 <wcrtomb@plt+0x1d930>
  4202cc:	ldr	x8, [sp, #56]
  4202d0:	stur	x8, [x29, #-40]
  4202d4:	ldur	x8, [x29, #-32]
  4202d8:	cmp	x8, #0x0
  4202dc:	cset	w9, ls  // ls = plast
  4202e0:	tbnz	w9, #0, 420334 <wcrtomb@plt+0x1da24>
  4202e4:	ldur	x8, [x29, #-40]
  4202e8:	ldrb	w9, [x8]
  4202ec:	ldrb	w10, [sp, #31]
  4202f0:	cmp	w9, w10
  4202f4:	b.eq	42030c <wcrtomb@plt+0x1d9fc>  // b.none
  4202f8:	ldur	x8, [x29, #-40]
  4202fc:	ldrb	w9, [x8]
  420300:	ldrb	w10, [sp, #30]
  420304:	cmp	w9, w10
  420308:	b.ne	420318 <wcrtomb@plt+0x1da08>  // b.any
  42030c:	ldur	x8, [x29, #-40]
  420310:	stur	x8, [x29, #-8]
  420314:	b	42033c <wcrtomb@plt+0x1da2c>
  420318:	ldur	x8, [x29, #-32]
  42031c:	subs	x8, x8, #0x1
  420320:	stur	x8, [x29, #-32]
  420324:	ldur	x8, [x29, #-40]
  420328:	add	x8, x8, #0x1
  42032c:	stur	x8, [x29, #-40]
  420330:	b	4202d4 <wcrtomb@plt+0x1d9c4>
  420334:	mov	x8, xzr
  420338:	stur	x8, [x29, #-8]
  42033c:	ldur	x0, [x29, #-8]
  420340:	ldp	x29, x30, [sp, #112]
  420344:	add	sp, sp, #0x80
  420348:	ret
  42034c:	sub	sp, sp, #0x120
  420350:	stp	x29, x30, [sp, #256]
  420354:	str	x28, [sp, #272]
  420358:	add	x29, sp, #0x100
  42035c:	str	q7, [sp, #144]
  420360:	str	q6, [sp, #128]
  420364:	str	q5, [sp, #112]
  420368:	str	q4, [sp, #96]
  42036c:	str	q3, [sp, #80]
  420370:	str	q2, [sp, #64]
  420374:	str	q1, [sp, #48]
  420378:	str	q0, [sp, #32]
  42037c:	stur	x7, [x29, #-64]
  420380:	stur	x6, [x29, #-72]
  420384:	stur	x5, [x29, #-80]
  420388:	stur	x4, [x29, #-88]
  42038c:	stur	x3, [x29, #-96]
  420390:	stur	w0, [x29, #-4]
  420394:	stur	x1, [x29, #-16]
  420398:	stur	w2, [x29, #-20]
  42039c:	mov	w8, wzr
  4203a0:	stur	w8, [x29, #-24]
  4203a4:	ldurb	w8, [x29, #-20]
  4203a8:	tbz	w8, #6, 420454 <wcrtomb@plt+0x1db44>
  4203ac:	b	4203b0 <wcrtomb@plt+0x1daa0>
  4203b0:	mov	w8, #0xffffff80            	// #-128
  4203b4:	stur	w8, [x29, #-28]
  4203b8:	mov	w8, #0xffffffd8            	// #-40
  4203bc:	stur	w8, [x29, #-32]
  4203c0:	add	x9, x29, #0x20
  4203c4:	stur	x9, [x29, #-56]
  4203c8:	add	x9, sp, #0x20
  4203cc:	add	x9, x9, #0x80
  4203d0:	stur	x9, [x29, #-40]
  4203d4:	sub	x9, x29, #0x60
  4203d8:	add	x9, x9, #0x28
  4203dc:	stur	x9, [x29, #-48]
  4203e0:	sub	x9, x29, #0x38
  4203e4:	add	x9, x9, #0x18
  4203e8:	ldur	w8, [x29, #-32]
  4203ec:	mov	w10, w8
  4203f0:	str	x9, [sp, #24]
  4203f4:	str	w10, [sp, #20]
  4203f8:	tbz	w8, #31, 420430 <wcrtomb@plt+0x1db20>
  4203fc:	b	420400 <wcrtomb@plt+0x1daf0>
  420400:	ldr	w8, [sp, #20]
  420404:	add	w9, w8, #0x8
  420408:	ldr	x10, [sp, #24]
  42040c:	str	w9, [x10]
  420410:	subs	w9, w9, #0x0
  420414:	b.gt	420430 <wcrtomb@plt+0x1db20>
  420418:	b	42041c <wcrtomb@plt+0x1db0c>
  42041c:	ldur	x8, [x29, #-48]
  420420:	ldr	w9, [sp, #20]
  420424:	add	x8, x8, w9, sxtw
  420428:	str	x8, [sp, #8]
  42042c:	b	420444 <wcrtomb@plt+0x1db34>
  420430:	ldur	x8, [x29, #-56]
  420434:	add	x9, x8, #0x8
  420438:	stur	x9, [x29, #-56]
  42043c:	str	x8, [sp, #8]
  420440:	b	420444 <wcrtomb@plt+0x1db34>
  420444:	ldr	x8, [sp, #8]
  420448:	ldr	w9, [x8]
  42044c:	stur	w9, [x29, #-24]
  420450:	b	420454 <wcrtomb@plt+0x1db44>
  420454:	ldur	w0, [x29, #-4]
  420458:	ldur	x1, [x29, #-16]
  42045c:	ldur	w2, [x29, #-20]
  420460:	ldur	w3, [x29, #-24]
  420464:	bl	402840 <openat@plt>
  420468:	bl	42277c <wcrtomb@plt+0x1fe6c>
  42046c:	ldr	x28, [sp, #272]
  420470:	ldp	x29, x30, [sp, #256]
  420474:	add	sp, sp, #0x120
  420478:	ret
  42047c:	sub	sp, sp, #0x40
  420480:	stp	x29, x30, [sp, #48]
  420484:	add	x29, sp, #0x30
  420488:	stur	x0, [x29, #-8]
  42048c:	bl	402870 <__errno_location@plt>
  420490:	ldr	w8, [x0]
  420494:	stur	w8, [x29, #-12]
  420498:	ldur	x9, [x29, #-8]
  42049c:	cbz	x9, 4204ac <wcrtomb@plt+0x1db9c>
  4204a0:	ldur	x8, [x29, #-8]
  4204a4:	str	x8, [sp, #16]
  4204a8:	b	4204b8 <wcrtomb@plt+0x1dba8>
  4204ac:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4204b0:	add	x8, x8, #0x780
  4204b4:	str	x8, [sp, #16]
  4204b8:	ldr	x8, [sp, #16]
  4204bc:	mov	x0, x8
  4204c0:	mov	x1, #0x38                  	// #56
  4204c4:	bl	42331c <wcrtomb@plt+0x20a0c>
  4204c8:	str	x0, [sp, #24]
  4204cc:	ldur	w9, [x29, #-12]
  4204d0:	str	w9, [sp, #12]
  4204d4:	bl	402870 <__errno_location@plt>
  4204d8:	ldr	w9, [sp, #12]
  4204dc:	str	w9, [x0]
  4204e0:	ldr	x0, [sp, #24]
  4204e4:	ldp	x29, x30, [sp, #48]
  4204e8:	add	sp, sp, #0x40
  4204ec:	ret
  4204f0:	sub	sp, sp, #0x10
  4204f4:	str	x0, [sp, #8]
  4204f8:	ldr	x8, [sp, #8]
  4204fc:	cbz	x8, 42050c <wcrtomb@plt+0x1dbfc>
  420500:	ldr	x8, [sp, #8]
  420504:	str	x8, [sp]
  420508:	b	420518 <wcrtomb@plt+0x1dc08>
  42050c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  420510:	add	x8, x8, #0x780
  420514:	str	x8, [sp]
  420518:	ldr	x8, [sp]
  42051c:	ldr	w0, [x8]
  420520:	add	sp, sp, #0x10
  420524:	ret
  420528:	sub	sp, sp, #0x20
  42052c:	str	x0, [sp, #24]
  420530:	str	w1, [sp, #20]
  420534:	ldr	w8, [sp, #20]
  420538:	ldr	x9, [sp, #24]
  42053c:	str	w8, [sp, #16]
  420540:	cbz	x9, 420550 <wcrtomb@plt+0x1dc40>
  420544:	ldr	x8, [sp, #24]
  420548:	str	x8, [sp, #8]
  42054c:	b	42055c <wcrtomb@plt+0x1dc4c>
  420550:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  420554:	add	x8, x8, #0x780
  420558:	str	x8, [sp, #8]
  42055c:	ldr	x8, [sp, #8]
  420560:	ldr	w9, [sp, #16]
  420564:	str	w9, [x8]
  420568:	add	sp, sp, #0x20
  42056c:	ret
  420570:	sub	sp, sp, #0x30
  420574:	str	x0, [sp, #40]
  420578:	strb	w1, [sp, #39]
  42057c:	str	w2, [sp, #32]
  420580:	ldrb	w8, [sp, #39]
  420584:	strb	w8, [sp, #31]
  420588:	ldr	x9, [sp, #40]
  42058c:	cbz	x9, 42059c <wcrtomb@plt+0x1dc8c>
  420590:	ldr	x8, [sp, #40]
  420594:	str	x8, [sp]
  420598:	b	4205a8 <wcrtomb@plt+0x1dc98>
  42059c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4205a0:	add	x8, x8, #0x780
  4205a4:	str	x8, [sp]
  4205a8:	ldr	x8, [sp]
  4205ac:	add	x8, x8, #0x8
  4205b0:	ldrb	w9, [sp, #31]
  4205b4:	mov	w10, w9
  4205b8:	mov	x11, #0x20                  	// #32
  4205bc:	udiv	x10, x10, x11
  4205c0:	mov	x12, #0x4                   	// #4
  4205c4:	mul	x10, x12, x10
  4205c8:	add	x8, x8, x10
  4205cc:	str	x8, [sp, #16]
  4205d0:	ldrb	w9, [sp, #31]
  4205d4:	mov	w8, w9
  4205d8:	udiv	x10, x8, x11
  4205dc:	mul	x10, x10, x11
  4205e0:	subs	x8, x8, x10
  4205e4:	str	w8, [sp, #12]
  4205e8:	ldr	x10, [sp, #16]
  4205ec:	ldr	w8, [x10]
  4205f0:	ldr	w9, [sp, #12]
  4205f4:	lsr	w8, w8, w9
  4205f8:	and	w8, w8, #0x1
  4205fc:	str	w8, [sp, #8]
  420600:	ldr	w8, [sp, #32]
  420604:	and	w8, w8, #0x1
  420608:	ldr	w9, [sp, #8]
  42060c:	eor	w8, w8, w9
  420610:	ldr	w9, [sp, #12]
  420614:	lsl	w8, w8, w9
  420618:	ldr	x10, [sp, #16]
  42061c:	ldr	w9, [x10]
  420620:	eor	w8, w9, w8
  420624:	str	w8, [x10]
  420628:	ldr	w0, [sp, #8]
  42062c:	add	sp, sp, #0x30
  420630:	ret
  420634:	sub	sp, sp, #0x10
  420638:	str	x0, [sp, #8]
  42063c:	str	w1, [sp, #4]
  420640:	ldr	x8, [sp, #8]
  420644:	cbnz	x8, 420654 <wcrtomb@plt+0x1dd44>
  420648:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  42064c:	add	x8, x8, #0x780
  420650:	str	x8, [sp, #8]
  420654:	ldr	x8, [sp, #8]
  420658:	ldr	w9, [x8, #4]
  42065c:	str	w9, [sp]
  420660:	ldr	w9, [sp, #4]
  420664:	ldr	x8, [sp, #8]
  420668:	str	w9, [x8, #4]
  42066c:	ldr	w0, [sp]
  420670:	add	sp, sp, #0x10
  420674:	ret
  420678:	sub	sp, sp, #0x30
  42067c:	stp	x29, x30, [sp, #32]
  420680:	add	x29, sp, #0x20
  420684:	stur	x0, [x29, #-8]
  420688:	str	x1, [sp, #16]
  42068c:	str	x2, [sp, #8]
  420690:	ldur	x8, [x29, #-8]
  420694:	cbnz	x8, 4206a4 <wcrtomb@plt+0x1dd94>
  420698:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  42069c:	add	x8, x8, #0x780
  4206a0:	stur	x8, [x29, #-8]
  4206a4:	ldur	x8, [x29, #-8]
  4206a8:	mov	w9, #0xa                   	// #10
  4206ac:	str	w9, [x8]
  4206b0:	ldr	x8, [sp, #16]
  4206b4:	cbz	x8, 4206c0 <wcrtomb@plt+0x1ddb0>
  4206b8:	ldr	x8, [sp, #8]
  4206bc:	cbnz	x8, 4206c4 <wcrtomb@plt+0x1ddb4>
  4206c0:	bl	402610 <abort@plt>
  4206c4:	ldr	x8, [sp, #16]
  4206c8:	ldur	x9, [x29, #-8]
  4206cc:	str	x8, [x9, #40]
  4206d0:	ldr	x8, [sp, #8]
  4206d4:	ldur	x9, [x29, #-8]
  4206d8:	str	x8, [x9, #48]
  4206dc:	ldp	x29, x30, [sp, #32]
  4206e0:	add	sp, sp, #0x30
  4206e4:	ret
  4206e8:	sub	sp, sp, #0x70
  4206ec:	stp	x29, x30, [sp, #96]
  4206f0:	add	x29, sp, #0x60
  4206f4:	stur	x0, [x29, #-8]
  4206f8:	stur	x1, [x29, #-16]
  4206fc:	stur	x2, [x29, #-24]
  420700:	stur	x3, [x29, #-32]
  420704:	stur	x4, [x29, #-40]
  420708:	ldur	x8, [x29, #-40]
  42070c:	cbz	x8, 42071c <wcrtomb@plt+0x1de0c>
  420710:	ldur	x8, [x29, #-40]
  420714:	str	x8, [sp, #24]
  420718:	b	420728 <wcrtomb@plt+0x1de18>
  42071c:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  420720:	add	x8, x8, #0x780
  420724:	str	x8, [sp, #24]
  420728:	ldr	x8, [sp, #24]
  42072c:	str	x8, [sp, #48]
  420730:	bl	402870 <__errno_location@plt>
  420734:	ldr	w9, [x0]
  420738:	str	w9, [sp, #44]
  42073c:	ldur	x0, [x29, #-8]
  420740:	ldur	x1, [x29, #-16]
  420744:	ldur	x2, [x29, #-24]
  420748:	ldur	x3, [x29, #-32]
  42074c:	ldr	x8, [sp, #48]
  420750:	ldr	w4, [x8]
  420754:	ldr	x8, [sp, #48]
  420758:	ldr	w5, [x8, #4]
  42075c:	ldr	x8, [sp, #48]
  420760:	add	x6, x8, #0x8
  420764:	ldr	x8, [sp, #48]
  420768:	ldr	x7, [x8, #40]
  42076c:	ldr	x8, [sp, #48]
  420770:	ldr	x8, [x8, #48]
  420774:	mov	x10, sp
  420778:	str	x8, [x10]
  42077c:	bl	4207a8 <wcrtomb@plt+0x1de98>
  420780:	str	x0, [sp, #32]
  420784:	ldr	w9, [sp, #44]
  420788:	str	w9, [sp, #20]
  42078c:	bl	402870 <__errno_location@plt>
  420790:	ldr	w9, [sp, #20]
  420794:	str	w9, [x0]
  420798:	ldr	x0, [sp, #32]
  42079c:	ldp	x29, x30, [sp, #96]
  4207a0:	add	sp, sp, #0x70
  4207a4:	ret
  4207a8:	sub	sp, sp, #0x130
  4207ac:	stp	x29, x30, [sp, #272]
  4207b0:	str	x28, [sp, #288]
  4207b4:	add	x29, sp, #0x110
  4207b8:	ldr	x8, [x29, #32]
  4207bc:	mov	x9, xzr
  4207c0:	mov	w10, #0x0                   	// #0
  4207c4:	mov	w11, #0x1                   	// #1
  4207c8:	mov	w12, #0x1                   	// #1
  4207cc:	stur	x0, [x29, #-16]
  4207d0:	stur	x1, [x29, #-24]
  4207d4:	stur	x2, [x29, #-32]
  4207d8:	stur	x3, [x29, #-40]
  4207dc:	stur	w4, [x29, #-44]
  4207e0:	stur	w5, [x29, #-48]
  4207e4:	stur	x6, [x29, #-56]
  4207e8:	stur	x7, [x29, #-64]
  4207ec:	stur	x8, [x29, #-72]
  4207f0:	stur	xzr, [x29, #-88]
  4207f4:	stur	xzr, [x29, #-96]
  4207f8:	stur	x9, [x29, #-104]
  4207fc:	stur	xzr, [x29, #-112]
  420800:	sturb	w10, [x29, #-113]
  420804:	str	w10, [sp, #84]
  420808:	str	w11, [sp, #80]
  42080c:	str	w12, [sp, #76]
  420810:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  420814:	cmp	x0, #0x1
  420818:	cset	w10, eq  // eq = none
  42081c:	ldr	w11, [sp, #76]
  420820:	and	w10, w10, w11
  420824:	sturb	w10, [x29, #-114]
  420828:	ldur	w10, [x29, #-48]
  42082c:	tst	w10, #0x2
  420830:	cset	w10, ne  // ne = any
  420834:	and	w10, w10, w11
  420838:	sturb	w10, [x29, #-115]
  42083c:	ldr	w10, [sp, #84]
  420840:	sturb	w10, [x29, #-116]
  420844:	sturb	w10, [x29, #-117]
  420848:	ldr	w12, [sp, #80]
  42084c:	sturb	w12, [x29, #-118]
  420850:	ldur	w8, [x29, #-44]
  420854:	subs	w8, w8, #0x0
  420858:	mov	w9, w8
  42085c:	ubfx	x9, x9, #0, #32
  420860:	cmp	x9, #0xa
  420864:	str	x9, [sp, #64]
  420868:	b.hi	420a38 <wcrtomb@plt+0x1e128>  // b.pmore
  42086c:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  420870:	add	x8, x8, #0xc78
  420874:	ldr	x11, [sp, #64]
  420878:	ldrsw	x10, [x8, x11, lsl #2]
  42087c:	add	x9, x8, x10
  420880:	br	x9
  420884:	mov	w8, #0x5                   	// #5
  420888:	stur	w8, [x29, #-44]
  42088c:	mov	w8, #0x1                   	// #1
  420890:	sturb	w8, [x29, #-115]
  420894:	ldurb	w8, [x29, #-115]
  420898:	tbnz	w8, #0, 4208cc <wcrtomb@plt+0x1dfbc>
  42089c:	ldur	x8, [x29, #-88]
  4208a0:	ldur	x9, [x29, #-24]
  4208a4:	cmp	x8, x9
  4208a8:	b.cs	4208c0 <wcrtomb@plt+0x1dfb0>  // b.hs, b.nlast
  4208ac:	ldur	x8, [x29, #-16]
  4208b0:	ldur	x9, [x29, #-88]
  4208b4:	add	x8, x8, x9
  4208b8:	mov	w10, #0x22                  	// #34
  4208bc:	strb	w10, [x8]
  4208c0:	ldur	x8, [x29, #-88]
  4208c4:	add	x8, x8, #0x1
  4208c8:	stur	x8, [x29, #-88]
  4208cc:	mov	w8, #0x1                   	// #1
  4208d0:	sturb	w8, [x29, #-113]
  4208d4:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4208d8:	add	x9, x9, #0x7b4
  4208dc:	stur	x9, [x29, #-104]
  4208e0:	mov	x9, #0x1                   	// #1
  4208e4:	stur	x9, [x29, #-112]
  4208e8:	b	420a3c <wcrtomb@plt+0x1e12c>
  4208ec:	mov	w8, #0x1                   	// #1
  4208f0:	sturb	w8, [x29, #-113]
  4208f4:	mov	w8, #0x0                   	// #0
  4208f8:	sturb	w8, [x29, #-115]
  4208fc:	b	420a3c <wcrtomb@plt+0x1e12c>
  420900:	ldur	w8, [x29, #-44]
  420904:	cmp	w8, #0xa
  420908:	b.eq	420934 <wcrtomb@plt+0x1e024>  // b.none
  42090c:	ldur	w1, [x29, #-44]
  420910:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  420914:	add	x0, x0, #0xf6c
  420918:	bl	422580 <wcrtomb@plt+0x1fc70>
  42091c:	stur	x0, [x29, #-64]
  420920:	ldur	w1, [x29, #-44]
  420924:	adrp	x0, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  420928:	add	x0, x0, #0xc64
  42092c:	bl	422580 <wcrtomb@plt+0x1fc70>
  420930:	stur	x0, [x29, #-72]
  420934:	ldurb	w8, [x29, #-115]
  420938:	tbnz	w8, #0, 420994 <wcrtomb@plt+0x1e084>
  42093c:	ldur	x8, [x29, #-64]
  420940:	stur	x8, [x29, #-104]
  420944:	ldur	x8, [x29, #-104]
  420948:	ldrb	w9, [x8]
  42094c:	cbz	w9, 420994 <wcrtomb@plt+0x1e084>
  420950:	ldur	x8, [x29, #-88]
  420954:	ldur	x9, [x29, #-24]
  420958:	cmp	x8, x9
  42095c:	b.cs	420978 <wcrtomb@plt+0x1e068>  // b.hs, b.nlast
  420960:	ldur	x8, [x29, #-104]
  420964:	ldrb	w9, [x8]
  420968:	ldur	x8, [x29, #-16]
  42096c:	ldur	x10, [x29, #-88]
  420970:	add	x8, x8, x10
  420974:	strb	w9, [x8]
  420978:	ldur	x8, [x29, #-88]
  42097c:	add	x8, x8, #0x1
  420980:	stur	x8, [x29, #-88]
  420984:	ldur	x8, [x29, #-104]
  420988:	add	x8, x8, #0x1
  42098c:	stur	x8, [x29, #-104]
  420990:	b	420944 <wcrtomb@plt+0x1e034>
  420994:	mov	w8, #0x1                   	// #1
  420998:	sturb	w8, [x29, #-113]
  42099c:	ldur	x9, [x29, #-72]
  4209a0:	stur	x9, [x29, #-104]
  4209a4:	ldur	x0, [x29, #-104]
  4209a8:	bl	4022f0 <strlen@plt>
  4209ac:	stur	x0, [x29, #-112]
  4209b0:	b	420a3c <wcrtomb@plt+0x1e12c>
  4209b4:	mov	w8, #0x1                   	// #1
  4209b8:	sturb	w8, [x29, #-113]
  4209bc:	mov	w8, #0x1                   	// #1
  4209c0:	sturb	w8, [x29, #-115]
  4209c4:	ldurb	w8, [x29, #-115]
  4209c8:	tbnz	w8, #0, 4209d4 <wcrtomb@plt+0x1e0c4>
  4209cc:	mov	w8, #0x1                   	// #1
  4209d0:	sturb	w8, [x29, #-113]
  4209d4:	mov	w8, #0x2                   	// #2
  4209d8:	stur	w8, [x29, #-44]
  4209dc:	ldurb	w8, [x29, #-115]
  4209e0:	tbnz	w8, #0, 420a14 <wcrtomb@plt+0x1e104>
  4209e4:	ldur	x8, [x29, #-88]
  4209e8:	ldur	x9, [x29, #-24]
  4209ec:	cmp	x8, x9
  4209f0:	b.cs	420a08 <wcrtomb@plt+0x1e0f8>  // b.hs, b.nlast
  4209f4:	ldur	x8, [x29, #-16]
  4209f8:	ldur	x9, [x29, #-88]
  4209fc:	add	x8, x8, x9
  420a00:	mov	w10, #0x27                  	// #39
  420a04:	strb	w10, [x8]
  420a08:	ldur	x8, [x29, #-88]
  420a0c:	add	x8, x8, #0x1
  420a10:	stur	x8, [x29, #-88]
  420a14:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  420a18:	add	x8, x8, #0xc64
  420a1c:	stur	x8, [x29, #-104]
  420a20:	mov	x8, #0x1                   	// #1
  420a24:	stur	x8, [x29, #-112]
  420a28:	b	420a3c <wcrtomb@plt+0x1e12c>
  420a2c:	mov	w8, #0x0                   	// #0
  420a30:	sturb	w8, [x29, #-115]
  420a34:	b	420a3c <wcrtomb@plt+0x1e12c>
  420a38:	bl	402610 <abort@plt>
  420a3c:	stur	xzr, [x29, #-80]
  420a40:	ldur	x8, [x29, #-40]
  420a44:	mov	x9, #0xffffffffffffffff    	// #-1
  420a48:	cmp	x8, x9
  420a4c:	b.ne	420a70 <wcrtomb@plt+0x1e160>  // b.any
  420a50:	ldur	x8, [x29, #-32]
  420a54:	ldur	x9, [x29, #-80]
  420a58:	ldrb	w10, [x8, x9]
  420a5c:	cmp	w10, #0x0
  420a60:	cset	w10, eq  // eq = none
  420a64:	and	w10, w10, #0x1
  420a68:	str	w10, [sp, #60]
  420a6c:	b	420a88 <wcrtomb@plt+0x1e178>
  420a70:	ldur	x8, [x29, #-80]
  420a74:	ldur	x9, [x29, #-40]
  420a78:	cmp	x8, x9
  420a7c:	cset	w10, eq  // eq = none
  420a80:	and	w10, w10, #0x1
  420a84:	str	w10, [sp, #60]
  420a88:	ldr	w8, [sp, #60]
  420a8c:	cmp	w8, #0x0
  420a90:	cset	w8, ne  // ne = any
  420a94:	eor	w8, w8, #0x1
  420a98:	tbnz	w8, #0, 420aa0 <wcrtomb@plt+0x1e190>
  420a9c:	b	4218d4 <wcrtomb@plt+0x1efc4>
  420aa0:	mov	w8, #0x0                   	// #0
  420aa4:	sturb	w8, [x29, #-121]
  420aa8:	sturb	w8, [x29, #-122]
  420aac:	sturb	w8, [x29, #-123]
  420ab0:	ldurb	w8, [x29, #-113]
  420ab4:	tbnz	w8, #0, 420abc <wcrtomb@plt+0x1e1ac>
  420ab8:	b	420b60 <wcrtomb@plt+0x1e250>
  420abc:	ldur	w8, [x29, #-44]
  420ac0:	cmp	w8, #0x2
  420ac4:	b.eq	420b60 <wcrtomb@plt+0x1e250>  // b.none
  420ac8:	ldur	x8, [x29, #-112]
  420acc:	cbz	x8, 420b60 <wcrtomb@plt+0x1e250>
  420ad0:	ldur	x8, [x29, #-80]
  420ad4:	ldur	x9, [x29, #-112]
  420ad8:	add	x8, x8, x9
  420adc:	ldur	x9, [x29, #-40]
  420ae0:	mov	x10, #0xffffffffffffffff    	// #-1
  420ae4:	cmp	x9, x10
  420ae8:	str	x8, [sp, #48]
  420aec:	b.ne	420b14 <wcrtomb@plt+0x1e204>  // b.any
  420af0:	ldur	x8, [x29, #-112]
  420af4:	mov	x9, #0x1                   	// #1
  420af8:	cmp	x9, x8
  420afc:	b.cs	420b14 <wcrtomb@plt+0x1e204>  // b.hs, b.nlast
  420b00:	ldur	x0, [x29, #-32]
  420b04:	bl	4022f0 <strlen@plt>
  420b08:	stur	x0, [x29, #-40]
  420b0c:	str	x0, [sp, #40]
  420b10:	b	420b1c <wcrtomb@plt+0x1e20c>
  420b14:	ldur	x8, [x29, #-40]
  420b18:	str	x8, [sp, #40]
  420b1c:	ldr	x8, [sp, #40]
  420b20:	ldr	x9, [sp, #48]
  420b24:	cmp	x9, x8
  420b28:	b.hi	420b60 <wcrtomb@plt+0x1e250>  // b.pmore
  420b2c:	ldur	x8, [x29, #-32]
  420b30:	ldur	x9, [x29, #-80]
  420b34:	add	x0, x8, x9
  420b38:	ldur	x1, [x29, #-104]
  420b3c:	ldur	x2, [x29, #-112]
  420b40:	bl	402670 <memcmp@plt>
  420b44:	cbnz	w0, 420b60 <wcrtomb@plt+0x1e250>
  420b48:	ldurb	w8, [x29, #-115]
  420b4c:	tbnz	w8, #0, 420b54 <wcrtomb@plt+0x1e244>
  420b50:	b	420b58 <wcrtomb@plt+0x1e248>
  420b54:	b	421a0c <wcrtomb@plt+0x1f0fc>
  420b58:	mov	w8, #0x1                   	// #1
  420b5c:	sturb	w8, [x29, #-121]
  420b60:	ldur	x8, [x29, #-32]
  420b64:	ldur	x9, [x29, #-80]
  420b68:	add	x8, x8, x9
  420b6c:	ldrb	w10, [x8]
  420b70:	sturb	w10, [x29, #-119]
  420b74:	ldurb	w10, [x29, #-119]
  420b78:	subs	w10, w10, #0x0
  420b7c:	mov	w8, w10
  420b80:	ubfx	x8, x8, #0, #32
  420b84:	cmp	x8, #0x7e
  420b88:	str	x8, [sp, #32]
  420b8c:	b.hi	421184 <wcrtomb@plt+0x1e874>  // b.pmore
  420b90:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  420b94:	add	x8, x8, #0xca4
  420b98:	ldr	x11, [sp, #32]
  420b9c:	ldrsw	x10, [x8, x11, lsl #2]
  420ba0:	add	x9, x8, x10
  420ba4:	br	x9
  420ba8:	ldurb	w8, [x29, #-113]
  420bac:	tbnz	w8, #0, 420bb4 <wcrtomb@plt+0x1e2a4>
  420bb0:	b	420d68 <wcrtomb@plt+0x1e458>
  420bb4:	ldurb	w8, [x29, #-115]
  420bb8:	tbnz	w8, #0, 420bc0 <wcrtomb@plt+0x1e2b0>
  420bbc:	b	420bc4 <wcrtomb@plt+0x1e2b4>
  420bc0:	b	421a0c <wcrtomb@plt+0x1f0fc>
  420bc4:	mov	w8, #0x1                   	// #1
  420bc8:	sturb	w8, [x29, #-122]
  420bcc:	ldur	w8, [x29, #-44]
  420bd0:	cmp	w8, #0x2
  420bd4:	b.ne	420c78 <wcrtomb@plt+0x1e368>  // b.any
  420bd8:	ldurb	w8, [x29, #-116]
  420bdc:	tbnz	w8, #0, 420c78 <wcrtomb@plt+0x1e368>
  420be0:	ldur	x8, [x29, #-88]
  420be4:	ldur	x9, [x29, #-24]
  420be8:	cmp	x8, x9
  420bec:	b.cs	420c04 <wcrtomb@plt+0x1e2f4>  // b.hs, b.nlast
  420bf0:	ldur	x8, [x29, #-16]
  420bf4:	ldur	x9, [x29, #-88]
  420bf8:	add	x8, x8, x9
  420bfc:	mov	w10, #0x27                  	// #39
  420c00:	strb	w10, [x8]
  420c04:	ldur	x8, [x29, #-88]
  420c08:	add	x8, x8, #0x1
  420c0c:	stur	x8, [x29, #-88]
  420c10:	ldur	x8, [x29, #-88]
  420c14:	ldur	x9, [x29, #-24]
  420c18:	cmp	x8, x9
  420c1c:	b.cs	420c34 <wcrtomb@plt+0x1e324>  // b.hs, b.nlast
  420c20:	ldur	x8, [x29, #-16]
  420c24:	ldur	x9, [x29, #-88]
  420c28:	add	x8, x8, x9
  420c2c:	mov	w10, #0x24                  	// #36
  420c30:	strb	w10, [x8]
  420c34:	ldur	x8, [x29, #-88]
  420c38:	add	x8, x8, #0x1
  420c3c:	stur	x8, [x29, #-88]
  420c40:	ldur	x8, [x29, #-88]
  420c44:	ldur	x9, [x29, #-24]
  420c48:	cmp	x8, x9
  420c4c:	b.cs	420c64 <wcrtomb@plt+0x1e354>  // b.hs, b.nlast
  420c50:	ldur	x8, [x29, #-16]
  420c54:	ldur	x9, [x29, #-88]
  420c58:	add	x8, x8, x9
  420c5c:	mov	w10, #0x27                  	// #39
  420c60:	strb	w10, [x8]
  420c64:	ldur	x8, [x29, #-88]
  420c68:	add	x8, x8, #0x1
  420c6c:	stur	x8, [x29, #-88]
  420c70:	mov	w8, #0x1                   	// #1
  420c74:	sturb	w8, [x29, #-116]
  420c78:	ldur	x8, [x29, #-88]
  420c7c:	ldur	x9, [x29, #-24]
  420c80:	cmp	x8, x9
  420c84:	b.cs	420c9c <wcrtomb@plt+0x1e38c>  // b.hs, b.nlast
  420c88:	ldur	x8, [x29, #-16]
  420c8c:	ldur	x9, [x29, #-88]
  420c90:	add	x8, x8, x9
  420c94:	mov	w10, #0x5c                  	// #92
  420c98:	strb	w10, [x8]
  420c9c:	ldur	x8, [x29, #-88]
  420ca0:	add	x8, x8, #0x1
  420ca4:	stur	x8, [x29, #-88]
  420ca8:	ldur	w8, [x29, #-44]
  420cac:	cmp	w8, #0x2
  420cb0:	b.eq	420d5c <wcrtomb@plt+0x1e44c>  // b.none
  420cb4:	ldur	x8, [x29, #-80]
  420cb8:	add	x8, x8, #0x1
  420cbc:	ldur	x9, [x29, #-40]
  420cc0:	cmp	x8, x9
  420cc4:	b.cs	420d5c <wcrtomb@plt+0x1e44c>  // b.hs, b.nlast
  420cc8:	ldur	x8, [x29, #-32]
  420ccc:	ldur	x9, [x29, #-80]
  420cd0:	add	x9, x9, #0x1
  420cd4:	ldrb	w10, [x8, x9]
  420cd8:	mov	w11, #0x30                  	// #48
  420cdc:	cmp	w11, w10
  420ce0:	b.gt	420d5c <wcrtomb@plt+0x1e44c>
  420ce4:	ldur	x8, [x29, #-32]
  420ce8:	ldur	x9, [x29, #-80]
  420cec:	add	x9, x9, #0x1
  420cf0:	ldrb	w10, [x8, x9]
  420cf4:	cmp	w10, #0x39
  420cf8:	b.gt	420d5c <wcrtomb@plt+0x1e44c>
  420cfc:	ldur	x8, [x29, #-88]
  420d00:	ldur	x9, [x29, #-24]
  420d04:	cmp	x8, x9
  420d08:	b.cs	420d20 <wcrtomb@plt+0x1e410>  // b.hs, b.nlast
  420d0c:	ldur	x8, [x29, #-16]
  420d10:	ldur	x9, [x29, #-88]
  420d14:	add	x8, x8, x9
  420d18:	mov	w10, #0x30                  	// #48
  420d1c:	strb	w10, [x8]
  420d20:	ldur	x8, [x29, #-88]
  420d24:	add	x8, x8, #0x1
  420d28:	stur	x8, [x29, #-88]
  420d2c:	ldur	x8, [x29, #-88]
  420d30:	ldur	x9, [x29, #-24]
  420d34:	cmp	x8, x9
  420d38:	b.cs	420d50 <wcrtomb@plt+0x1e440>  // b.hs, b.nlast
  420d3c:	ldur	x8, [x29, #-16]
  420d40:	ldur	x9, [x29, #-88]
  420d44:	add	x8, x8, x9
  420d48:	mov	w10, #0x30                  	// #48
  420d4c:	strb	w10, [x8]
  420d50:	ldur	x8, [x29, #-88]
  420d54:	add	x8, x8, #0x1
  420d58:	stur	x8, [x29, #-88]
  420d5c:	mov	w8, #0x30                  	// #48
  420d60:	sturb	w8, [x29, #-119]
  420d64:	b	420d78 <wcrtomb@plt+0x1e468>
  420d68:	ldur	w8, [x29, #-48]
  420d6c:	and	w8, w8, #0x1
  420d70:	cbz	w8, 420d78 <wcrtomb@plt+0x1e468>
  420d74:	b	4218c4 <wcrtomb@plt+0x1efb4>
  420d78:	b	4216a4 <wcrtomb@plt+0x1ed94>
  420d7c:	ldur	w8, [x29, #-44]
  420d80:	cmp	w8, #0x2
  420d84:	str	w8, [sp, #28]
  420d88:	b.eq	420da0 <wcrtomb@plt+0x1e490>  // b.none
  420d8c:	b	420d90 <wcrtomb@plt+0x1e480>
  420d90:	ldr	w8, [sp, #28]
  420d94:	cmp	w8, #0x5
  420d98:	b.eq	420db4 <wcrtomb@plt+0x1e4a4>  // b.none
  420d9c:	b	420f58 <wcrtomb@plt+0x1e648>
  420da0:	ldurb	w8, [x29, #-115]
  420da4:	tbnz	w8, #0, 420dac <wcrtomb@plt+0x1e49c>
  420da8:	b	420db0 <wcrtomb@plt+0x1e4a0>
  420dac:	b	421a0c <wcrtomb@plt+0x1f0fc>
  420db0:	b	420f58 <wcrtomb@plt+0x1e648>
  420db4:	ldur	w8, [x29, #-48]
  420db8:	and	w8, w8, #0x4
  420dbc:	cbz	w8, 420f54 <wcrtomb@plt+0x1e644>
  420dc0:	ldur	x8, [x29, #-80]
  420dc4:	add	x8, x8, #0x2
  420dc8:	ldur	x9, [x29, #-40]
  420dcc:	cmp	x8, x9
  420dd0:	b.cs	420f54 <wcrtomb@plt+0x1e644>  // b.hs, b.nlast
  420dd4:	ldur	x8, [x29, #-32]
  420dd8:	ldur	x9, [x29, #-80]
  420ddc:	add	x9, x9, #0x1
  420de0:	ldrb	w10, [x8, x9]
  420de4:	cmp	w10, #0x3f
  420de8:	b.ne	420f54 <wcrtomb@plt+0x1e644>  // b.any
  420dec:	ldur	x8, [x29, #-32]
  420df0:	ldur	x9, [x29, #-80]
  420df4:	add	x9, x9, #0x2
  420df8:	ldrb	w10, [x8, x9]
  420dfc:	cmp	w10, #0x21
  420e00:	str	w10, [sp, #24]
  420e04:	b.eq	420e5c <wcrtomb@plt+0x1e54c>  // b.none
  420e08:	b	420e0c <wcrtomb@plt+0x1e4fc>
  420e0c:	ldr	w8, [sp, #24]
  420e10:	subs	w9, w8, #0x27
  420e14:	cmp	w9, #0x2
  420e18:	b.ls	420e5c <wcrtomb@plt+0x1e54c>  // b.plast
  420e1c:	b	420e20 <wcrtomb@plt+0x1e510>
  420e20:	ldr	w8, [sp, #24]
  420e24:	cmp	w8, #0x2d
  420e28:	b.eq	420e5c <wcrtomb@plt+0x1e54c>  // b.none
  420e2c:	b	420e30 <wcrtomb@plt+0x1e520>
  420e30:	ldr	w8, [sp, #24]
  420e34:	cmp	w8, #0x2f
  420e38:	b.eq	420e5c <wcrtomb@plt+0x1e54c>  // b.none
  420e3c:	b	420e40 <wcrtomb@plt+0x1e530>
  420e40:	ldr	w8, [sp, #24]
  420e44:	subs	w9, w8, #0x3c
  420e48:	cmp	w9, #0x2
  420e4c:	cset	w9, ls  // ls = plast
  420e50:	eor	w9, w9, #0x1
  420e54:	tbnz	w9, #0, 420f54 <wcrtomb@plt+0x1e644>
  420e58:	b	420e5c <wcrtomb@plt+0x1e54c>
  420e5c:	ldurb	w8, [x29, #-115]
  420e60:	tbnz	w8, #0, 420e68 <wcrtomb@plt+0x1e558>
  420e64:	b	420e6c <wcrtomb@plt+0x1e55c>
  420e68:	b	421a0c <wcrtomb@plt+0x1f0fc>
  420e6c:	ldur	x8, [x29, #-32]
  420e70:	ldur	x9, [x29, #-80]
  420e74:	add	x9, x9, #0x2
  420e78:	add	x8, x8, x9
  420e7c:	ldrb	w10, [x8]
  420e80:	sturb	w10, [x29, #-119]
  420e84:	ldur	x8, [x29, #-80]
  420e88:	add	x8, x8, #0x2
  420e8c:	stur	x8, [x29, #-80]
  420e90:	ldur	x8, [x29, #-88]
  420e94:	ldur	x9, [x29, #-24]
  420e98:	cmp	x8, x9
  420e9c:	b.cs	420eb4 <wcrtomb@plt+0x1e5a4>  // b.hs, b.nlast
  420ea0:	ldur	x8, [x29, #-16]
  420ea4:	ldur	x9, [x29, #-88]
  420ea8:	add	x8, x8, x9
  420eac:	mov	w10, #0x3f                  	// #63
  420eb0:	strb	w10, [x8]
  420eb4:	ldur	x8, [x29, #-88]
  420eb8:	add	x8, x8, #0x1
  420ebc:	stur	x8, [x29, #-88]
  420ec0:	ldur	x8, [x29, #-88]
  420ec4:	ldur	x9, [x29, #-24]
  420ec8:	cmp	x8, x9
  420ecc:	b.cs	420ee4 <wcrtomb@plt+0x1e5d4>  // b.hs, b.nlast
  420ed0:	ldur	x8, [x29, #-16]
  420ed4:	ldur	x9, [x29, #-88]
  420ed8:	add	x8, x8, x9
  420edc:	mov	w10, #0x22                  	// #34
  420ee0:	strb	w10, [x8]
  420ee4:	ldur	x8, [x29, #-88]
  420ee8:	add	x8, x8, #0x1
  420eec:	stur	x8, [x29, #-88]
  420ef0:	ldur	x8, [x29, #-88]
  420ef4:	ldur	x9, [x29, #-24]
  420ef8:	cmp	x8, x9
  420efc:	b.cs	420f14 <wcrtomb@plt+0x1e604>  // b.hs, b.nlast
  420f00:	ldur	x8, [x29, #-16]
  420f04:	ldur	x9, [x29, #-88]
  420f08:	add	x8, x8, x9
  420f0c:	mov	w10, #0x22                  	// #34
  420f10:	strb	w10, [x8]
  420f14:	ldur	x8, [x29, #-88]
  420f18:	add	x8, x8, #0x1
  420f1c:	stur	x8, [x29, #-88]
  420f20:	ldur	x8, [x29, #-88]
  420f24:	ldur	x9, [x29, #-24]
  420f28:	cmp	x8, x9
  420f2c:	b.cs	420f44 <wcrtomb@plt+0x1e634>  // b.hs, b.nlast
  420f30:	ldur	x8, [x29, #-16]
  420f34:	ldur	x9, [x29, #-88]
  420f38:	add	x8, x8, x9
  420f3c:	mov	w10, #0x3f                  	// #63
  420f40:	strb	w10, [x8]
  420f44:	ldur	x8, [x29, #-88]
  420f48:	add	x8, x8, #0x1
  420f4c:	stur	x8, [x29, #-88]
  420f50:	b	420f54 <wcrtomb@plt+0x1e644>
  420f54:	b	420f58 <wcrtomb@plt+0x1e648>
  420f58:	b	4216a4 <wcrtomb@plt+0x1ed94>
  420f5c:	mov	w8, #0x61                  	// #97
  420f60:	sturb	w8, [x29, #-120]
  420f64:	b	421018 <wcrtomb@plt+0x1e708>
  420f68:	mov	w8, #0x62                  	// #98
  420f6c:	sturb	w8, [x29, #-120]
  420f70:	b	421018 <wcrtomb@plt+0x1e708>
  420f74:	mov	w8, #0x66                  	// #102
  420f78:	sturb	w8, [x29, #-120]
  420f7c:	b	421018 <wcrtomb@plt+0x1e708>
  420f80:	mov	w8, #0x6e                  	// #110
  420f84:	sturb	w8, [x29, #-120]
  420f88:	b	420ffc <wcrtomb@plt+0x1e6ec>
  420f8c:	mov	w8, #0x72                  	// #114
  420f90:	sturb	w8, [x29, #-120]
  420f94:	b	420ffc <wcrtomb@plt+0x1e6ec>
  420f98:	mov	w8, #0x74                  	// #116
  420f9c:	sturb	w8, [x29, #-120]
  420fa0:	b	420ffc <wcrtomb@plt+0x1e6ec>
  420fa4:	mov	w8, #0x76                  	// #118
  420fa8:	sturb	w8, [x29, #-120]
  420fac:	b	421018 <wcrtomb@plt+0x1e708>
  420fb0:	ldurb	w8, [x29, #-119]
  420fb4:	sturb	w8, [x29, #-120]
  420fb8:	ldur	w8, [x29, #-44]
  420fbc:	cmp	w8, #0x2
  420fc0:	b.ne	420fd8 <wcrtomb@plt+0x1e6c8>  // b.any
  420fc4:	ldurb	w8, [x29, #-115]
  420fc8:	tbnz	w8, #0, 420fd0 <wcrtomb@plt+0x1e6c0>
  420fcc:	b	420fd4 <wcrtomb@plt+0x1e6c4>
  420fd0:	b	421a0c <wcrtomb@plt+0x1f0fc>
  420fd4:	b	421808 <wcrtomb@plt+0x1eef8>
  420fd8:	ldurb	w8, [x29, #-113]
  420fdc:	tbnz	w8, #0, 420fe4 <wcrtomb@plt+0x1e6d4>
  420fe0:	b	420ffc <wcrtomb@plt+0x1e6ec>
  420fe4:	ldurb	w8, [x29, #-115]
  420fe8:	tbnz	w8, #0, 420ff0 <wcrtomb@plt+0x1e6e0>
  420fec:	b	420ffc <wcrtomb@plt+0x1e6ec>
  420ff0:	ldur	x8, [x29, #-112]
  420ff4:	cbz	x8, 420ffc <wcrtomb@plt+0x1e6ec>
  420ff8:	b	421808 <wcrtomb@plt+0x1eef8>
  420ffc:	ldur	w8, [x29, #-44]
  421000:	cmp	w8, #0x2
  421004:	b.ne	421018 <wcrtomb@plt+0x1e708>  // b.any
  421008:	ldurb	w8, [x29, #-115]
  42100c:	tbnz	w8, #0, 421014 <wcrtomb@plt+0x1e704>
  421010:	b	421018 <wcrtomb@plt+0x1e708>
  421014:	b	421a0c <wcrtomb@plt+0x1f0fc>
  421018:	ldurb	w8, [x29, #-113]
  42101c:	tbnz	w8, #0, 421024 <wcrtomb@plt+0x1e714>
  421020:	b	421030 <wcrtomb@plt+0x1e720>
  421024:	ldurb	w8, [x29, #-120]
  421028:	sturb	w8, [x29, #-119]
  42102c:	b	421714 <wcrtomb@plt+0x1ee04>
  421030:	b	4216a4 <wcrtomb@plt+0x1ed94>
  421034:	ldur	x8, [x29, #-40]
  421038:	mov	x9, #0xffffffffffffffff    	// #-1
  42103c:	cmp	x8, x9
  421040:	b.ne	421054 <wcrtomb@plt+0x1e744>  // b.any
  421044:	ldur	x8, [x29, #-32]
  421048:	ldrb	w9, [x8, #1]
  42104c:	cbz	w9, 421064 <wcrtomb@plt+0x1e754>
  421050:	b	421060 <wcrtomb@plt+0x1e750>
  421054:	ldur	x8, [x29, #-40]
  421058:	cmp	x8, #0x1
  42105c:	b.eq	421064 <wcrtomb@plt+0x1e754>  // b.none
  421060:	b	4216a4 <wcrtomb@plt+0x1ed94>
  421064:	ldur	x8, [x29, #-80]
  421068:	cbz	x8, 421070 <wcrtomb@plt+0x1e760>
  42106c:	b	4216a4 <wcrtomb@plt+0x1ed94>
  421070:	mov	w8, #0x1                   	// #1
  421074:	sturb	w8, [x29, #-123]
  421078:	ldur	w8, [x29, #-44]
  42107c:	cmp	w8, #0x2
  421080:	b.ne	421094 <wcrtomb@plt+0x1e784>  // b.any
  421084:	ldurb	w8, [x29, #-115]
  421088:	tbnz	w8, #0, 421090 <wcrtomb@plt+0x1e780>
  42108c:	b	421094 <wcrtomb@plt+0x1e784>
  421090:	b	421a0c <wcrtomb@plt+0x1f0fc>
  421094:	b	4216a4 <wcrtomb@plt+0x1ed94>
  421098:	mov	w8, #0x1                   	// #1
  42109c:	sturb	w8, [x29, #-117]
  4210a0:	sturb	w8, [x29, #-123]
  4210a4:	ldur	w8, [x29, #-44]
  4210a8:	cmp	w8, #0x2
  4210ac:	b.ne	421174 <wcrtomb@plt+0x1e864>  // b.any
  4210b0:	ldurb	w8, [x29, #-115]
  4210b4:	tbnz	w8, #0, 4210bc <wcrtomb@plt+0x1e7ac>
  4210b8:	b	4210c0 <wcrtomb@plt+0x1e7b0>
  4210bc:	b	421a0c <wcrtomb@plt+0x1f0fc>
  4210c0:	ldur	x8, [x29, #-24]
  4210c4:	cbz	x8, 4210dc <wcrtomb@plt+0x1e7cc>
  4210c8:	ldur	x8, [x29, #-96]
  4210cc:	cbnz	x8, 4210dc <wcrtomb@plt+0x1e7cc>
  4210d0:	ldur	x8, [x29, #-24]
  4210d4:	stur	x8, [x29, #-96]
  4210d8:	stur	xzr, [x29, #-24]
  4210dc:	ldur	x8, [x29, #-88]
  4210e0:	ldur	x9, [x29, #-24]
  4210e4:	cmp	x8, x9
  4210e8:	b.cs	421100 <wcrtomb@plt+0x1e7f0>  // b.hs, b.nlast
  4210ec:	ldur	x8, [x29, #-16]
  4210f0:	ldur	x9, [x29, #-88]
  4210f4:	add	x8, x8, x9
  4210f8:	mov	w10, #0x27                  	// #39
  4210fc:	strb	w10, [x8]
  421100:	ldur	x8, [x29, #-88]
  421104:	add	x8, x8, #0x1
  421108:	stur	x8, [x29, #-88]
  42110c:	ldur	x8, [x29, #-88]
  421110:	ldur	x9, [x29, #-24]
  421114:	cmp	x8, x9
  421118:	b.cs	421130 <wcrtomb@plt+0x1e820>  // b.hs, b.nlast
  42111c:	ldur	x8, [x29, #-16]
  421120:	ldur	x9, [x29, #-88]
  421124:	add	x8, x8, x9
  421128:	mov	w10, #0x5c                  	// #92
  42112c:	strb	w10, [x8]
  421130:	ldur	x8, [x29, #-88]
  421134:	add	x8, x8, #0x1
  421138:	stur	x8, [x29, #-88]
  42113c:	ldur	x8, [x29, #-88]
  421140:	ldur	x9, [x29, #-24]
  421144:	cmp	x8, x9
  421148:	b.cs	421160 <wcrtomb@plt+0x1e850>  // b.hs, b.nlast
  42114c:	ldur	x8, [x29, #-16]
  421150:	ldur	x9, [x29, #-88]
  421154:	add	x8, x8, x9
  421158:	mov	w10, #0x27                  	// #39
  42115c:	strb	w10, [x8]
  421160:	ldur	x8, [x29, #-88]
  421164:	add	x8, x8, #0x1
  421168:	stur	x8, [x29, #-88]
  42116c:	mov	w8, #0x0                   	// #0
  421170:	sturb	w8, [x29, #-116]
  421174:	b	4216a4 <wcrtomb@plt+0x1ed94>
  421178:	mov	w8, #0x1                   	// #1
  42117c:	sturb	w8, [x29, #-123]
  421180:	b	4216a4 <wcrtomb@plt+0x1ed94>
  421184:	ldurb	w8, [x29, #-114]
  421188:	tbnz	w8, #0, 421190 <wcrtomb@plt+0x1e880>
  42118c:	b	4211bc <wcrtomb@plt+0x1e8ac>
  421190:	mov	x8, #0x1                   	// #1
  421194:	str	x8, [sp, #136]
  421198:	bl	4026b0 <__ctype_b_loc@plt>
  42119c:	ldr	x8, [x0]
  4211a0:	ldurb	w9, [x29, #-119]
  4211a4:	ldrh	w9, [x8, w9, sxtw #1]
  4211a8:	tst	w9, #0x4000
  4211ac:	cset	w9, ne  // ne = any
  4211b0:	and	w9, w9, #0x1
  4211b4:	strb	w9, [sp, #135]
  4211b8:	b	4213a8 <wcrtomb@plt+0x1ea98>
  4211bc:	str	xzr, [sp, #120]
  4211c0:	str	xzr, [sp, #136]
  4211c4:	mov	w8, #0x1                   	// #1
  4211c8:	strb	w8, [sp, #135]
  4211cc:	ldur	x9, [x29, #-40]
  4211d0:	mov	x10, #0xffffffffffffffff    	// #-1
  4211d4:	cmp	x9, x10
  4211d8:	b.ne	4211e8 <wcrtomb@plt+0x1e8d8>  // b.any
  4211dc:	ldur	x0, [x29, #-32]
  4211e0:	bl	4022f0 <strlen@plt>
  4211e4:	stur	x0, [x29, #-40]
  4211e8:	ldur	x8, [x29, #-32]
  4211ec:	ldur	x9, [x29, #-80]
  4211f0:	ldr	x10, [sp, #136]
  4211f4:	add	x9, x9, x10
  4211f8:	add	x1, x8, x9
  4211fc:	ldur	x8, [x29, #-40]
  421200:	ldur	x9, [x29, #-80]
  421204:	ldr	x10, [sp, #136]
  421208:	add	x9, x9, x10
  42120c:	subs	x2, x8, x9
  421210:	add	x0, sp, #0x74
  421214:	add	x3, sp, #0x78
  421218:	bl	4271dc <wcrtomb@plt+0x248cc>
  42121c:	str	x0, [sp, #104]
  421220:	ldr	x8, [sp, #104]
  421224:	cbnz	x8, 42122c <wcrtomb@plt+0x1e91c>
  421228:	b	4213a8 <wcrtomb@plt+0x1ea98>
  42122c:	ldr	x8, [sp, #104]
  421230:	mov	x9, #0xffffffffffffffff    	// #-1
  421234:	cmp	x8, x9
  421238:	b.ne	421248 <wcrtomb@plt+0x1e938>  // b.any
  42123c:	mov	w8, #0x0                   	// #0
  421240:	strb	w8, [sp, #135]
  421244:	b	4213a8 <wcrtomb@plt+0x1ea98>
  421248:	ldr	x8, [sp, #104]
  42124c:	mov	x9, #0xfffffffffffffffe    	// #-2
  421250:	cmp	x8, x9
  421254:	b.ne	4212c0 <wcrtomb@plt+0x1e9b0>  // b.any
  421258:	mov	w8, #0x0                   	// #0
  42125c:	strb	w8, [sp, #135]
  421260:	ldur	x8, [x29, #-80]
  421264:	ldr	x9, [sp, #136]
  421268:	add	x8, x8, x9
  42126c:	ldur	x9, [x29, #-40]
  421270:	mov	w10, #0x0                   	// #0
  421274:	cmp	x8, x9
  421278:	str	w10, [sp, #20]
  42127c:	b.cs	4212a0 <wcrtomb@plt+0x1e990>  // b.hs, b.nlast
  421280:	ldur	x8, [x29, #-32]
  421284:	ldur	x9, [x29, #-80]
  421288:	ldr	x10, [sp, #136]
  42128c:	add	x9, x9, x10
  421290:	ldrb	w11, [x8, x9]
  421294:	cmp	w11, #0x0
  421298:	cset	w11, ne  // ne = any
  42129c:	str	w11, [sp, #20]
  4212a0:	ldr	w8, [sp, #20]
  4212a4:	tbnz	w8, #0, 4212ac <wcrtomb@plt+0x1e99c>
  4212a8:	b	4212bc <wcrtomb@plt+0x1e9ac>
  4212ac:	ldr	x8, [sp, #136]
  4212b0:	add	x8, x8, #0x1
  4212b4:	str	x8, [sp, #136]
  4212b8:	b	421260 <wcrtomb@plt+0x1e950>
  4212bc:	b	4213a8 <wcrtomb@plt+0x1ea98>
  4212c0:	ldurb	w8, [x29, #-115]
  4212c4:	tbnz	w8, #0, 4212cc <wcrtomb@plt+0x1e9bc>
  4212c8:	b	42136c <wcrtomb@plt+0x1ea5c>
  4212cc:	ldur	w8, [x29, #-44]
  4212d0:	cmp	w8, #0x2
  4212d4:	b.ne	42136c <wcrtomb@plt+0x1ea5c>  // b.any
  4212d8:	mov	x8, #0x1                   	// #1
  4212dc:	str	x8, [sp, #96]
  4212e0:	ldr	x8, [sp, #96]
  4212e4:	ldr	x9, [sp, #104]
  4212e8:	cmp	x8, x9
  4212ec:	b.cs	42136c <wcrtomb@plt+0x1ea5c>  // b.hs, b.nlast
  4212f0:	ldur	x8, [x29, #-32]
  4212f4:	ldur	x9, [x29, #-80]
  4212f8:	ldr	x10, [sp, #136]
  4212fc:	add	x9, x9, x10
  421300:	ldr	x10, [sp, #96]
  421304:	add	x9, x9, x10
  421308:	ldrb	w11, [x8, x9]
  42130c:	subs	w12, w11, #0x5b
  421310:	cmp	w12, #0x1
  421314:	str	w11, [sp, #16]
  421318:	b.ls	421358 <wcrtomb@plt+0x1ea48>  // b.plast
  42131c:	b	421320 <wcrtomb@plt+0x1ea10>
  421320:	ldr	w8, [sp, #16]
  421324:	cmp	w8, #0x5e
  421328:	b.eq	421358 <wcrtomb@plt+0x1ea48>  // b.none
  42132c:	b	421330 <wcrtomb@plt+0x1ea20>
  421330:	ldr	w8, [sp, #16]
  421334:	cmp	w8, #0x60
  421338:	b.eq	421358 <wcrtomb@plt+0x1ea48>  // b.none
  42133c:	b	421340 <wcrtomb@plt+0x1ea30>
  421340:	ldr	w8, [sp, #16]
  421344:	cmp	w8, #0x7c
  421348:	cset	w9, eq  // eq = none
  42134c:	eor	w9, w9, #0x1
  421350:	tbnz	w9, #0, 42135c <wcrtomb@plt+0x1ea4c>
  421354:	b	421358 <wcrtomb@plt+0x1ea48>
  421358:	b	421a0c <wcrtomb@plt+0x1f0fc>
  42135c:	ldr	x8, [sp, #96]
  421360:	add	x8, x8, #0x1
  421364:	str	x8, [sp, #96]
  421368:	b	4212e0 <wcrtomb@plt+0x1e9d0>
  42136c:	ldr	w0, [sp, #116]
  421370:	bl	402820 <iswprint@plt>
  421374:	cbnz	w0, 421380 <wcrtomb@plt+0x1ea70>
  421378:	mov	w8, #0x0                   	// #0
  42137c:	strb	w8, [sp, #135]
  421380:	ldr	x8, [sp, #104]
  421384:	ldr	x9, [sp, #136]
  421388:	add	x8, x9, x8
  42138c:	str	x8, [sp, #136]
  421390:	add	x0, sp, #0x78
  421394:	bl	402630 <mbsinit@plt>
  421398:	cmp	w0, #0x0
  42139c:	cset	w8, ne  // ne = any
  4213a0:	eor	w8, w8, #0x1
  4213a4:	tbnz	w8, #0, 4211e8 <wcrtomb@plt+0x1e8d8>
  4213a8:	ldrb	w8, [sp, #135]
  4213ac:	and	w8, w8, #0x1
  4213b0:	sturb	w8, [x29, #-123]
  4213b4:	ldr	x9, [sp, #136]
  4213b8:	mov	x10, #0x1                   	// #1
  4213bc:	cmp	x10, x9
  4213c0:	b.cc	4213d8 <wcrtomb@plt+0x1eac8>  // b.lo, b.ul, b.last
  4213c4:	ldurb	w8, [x29, #-113]
  4213c8:	tbnz	w8, #0, 4213d0 <wcrtomb@plt+0x1eac0>
  4213cc:	b	4216a4 <wcrtomb@plt+0x1ed94>
  4213d0:	ldrb	w8, [sp, #135]
  4213d4:	tbnz	w8, #0, 4216a4 <wcrtomb@plt+0x1ed94>
  4213d8:	ldur	x8, [x29, #-80]
  4213dc:	ldr	x9, [sp, #136]
  4213e0:	add	x8, x8, x9
  4213e4:	str	x8, [sp, #88]
  4213e8:	ldurb	w8, [x29, #-113]
  4213ec:	tbnz	w8, #0, 4213f4 <wcrtomb@plt+0x1eae4>
  4213f0:	b	421578 <wcrtomb@plt+0x1ec68>
  4213f4:	ldrb	w8, [sp, #135]
  4213f8:	tbnz	w8, #0, 421578 <wcrtomb@plt+0x1ec68>
  4213fc:	ldurb	w8, [x29, #-115]
  421400:	tbnz	w8, #0, 421408 <wcrtomb@plt+0x1eaf8>
  421404:	b	42140c <wcrtomb@plt+0x1eafc>
  421408:	b	421a0c <wcrtomb@plt+0x1f0fc>
  42140c:	mov	w8, #0x1                   	// #1
  421410:	sturb	w8, [x29, #-122]
  421414:	ldur	w8, [x29, #-44]
  421418:	cmp	w8, #0x2
  42141c:	b.ne	4214c0 <wcrtomb@plt+0x1ebb0>  // b.any
  421420:	ldurb	w8, [x29, #-116]
  421424:	tbnz	w8, #0, 4214c0 <wcrtomb@plt+0x1ebb0>
  421428:	ldur	x8, [x29, #-88]
  42142c:	ldur	x9, [x29, #-24]
  421430:	cmp	x8, x9
  421434:	b.cs	42144c <wcrtomb@plt+0x1eb3c>  // b.hs, b.nlast
  421438:	ldur	x8, [x29, #-16]
  42143c:	ldur	x9, [x29, #-88]
  421440:	add	x8, x8, x9
  421444:	mov	w10, #0x27                  	// #39
  421448:	strb	w10, [x8]
  42144c:	ldur	x8, [x29, #-88]
  421450:	add	x8, x8, #0x1
  421454:	stur	x8, [x29, #-88]
  421458:	ldur	x8, [x29, #-88]
  42145c:	ldur	x9, [x29, #-24]
  421460:	cmp	x8, x9
  421464:	b.cs	42147c <wcrtomb@plt+0x1eb6c>  // b.hs, b.nlast
  421468:	ldur	x8, [x29, #-16]
  42146c:	ldur	x9, [x29, #-88]
  421470:	add	x8, x8, x9
  421474:	mov	w10, #0x24                  	// #36
  421478:	strb	w10, [x8]
  42147c:	ldur	x8, [x29, #-88]
  421480:	add	x8, x8, #0x1
  421484:	stur	x8, [x29, #-88]
  421488:	ldur	x8, [x29, #-88]
  42148c:	ldur	x9, [x29, #-24]
  421490:	cmp	x8, x9
  421494:	b.cs	4214ac <wcrtomb@plt+0x1eb9c>  // b.hs, b.nlast
  421498:	ldur	x8, [x29, #-16]
  42149c:	ldur	x9, [x29, #-88]
  4214a0:	add	x8, x8, x9
  4214a4:	mov	w10, #0x27                  	// #39
  4214a8:	strb	w10, [x8]
  4214ac:	ldur	x8, [x29, #-88]
  4214b0:	add	x8, x8, #0x1
  4214b4:	stur	x8, [x29, #-88]
  4214b8:	mov	w8, #0x1                   	// #1
  4214bc:	sturb	w8, [x29, #-116]
  4214c0:	ldur	x8, [x29, #-88]
  4214c4:	ldur	x9, [x29, #-24]
  4214c8:	cmp	x8, x9
  4214cc:	b.cs	4214e4 <wcrtomb@plt+0x1ebd4>  // b.hs, b.nlast
  4214d0:	ldur	x8, [x29, #-16]
  4214d4:	ldur	x9, [x29, #-88]
  4214d8:	add	x8, x8, x9
  4214dc:	mov	w10, #0x5c                  	// #92
  4214e0:	strb	w10, [x8]
  4214e4:	ldur	x8, [x29, #-88]
  4214e8:	add	x8, x8, #0x1
  4214ec:	stur	x8, [x29, #-88]
  4214f0:	ldur	x8, [x29, #-88]
  4214f4:	ldur	x9, [x29, #-24]
  4214f8:	cmp	x8, x9
  4214fc:	b.cs	42151c <wcrtomb@plt+0x1ec0c>  // b.hs, b.nlast
  421500:	ldurb	w8, [x29, #-119]
  421504:	asr	w8, w8, #6
  421508:	add	w8, w8, #0x30
  42150c:	ldur	x9, [x29, #-16]
  421510:	ldur	x10, [x29, #-88]
  421514:	add	x9, x9, x10
  421518:	strb	w8, [x9]
  42151c:	ldur	x8, [x29, #-88]
  421520:	add	x8, x8, #0x1
  421524:	stur	x8, [x29, #-88]
  421528:	ldur	x8, [x29, #-88]
  42152c:	ldur	x9, [x29, #-24]
  421530:	cmp	x8, x9
  421534:	b.cs	421558 <wcrtomb@plt+0x1ec48>  // b.hs, b.nlast
  421538:	ldurb	w8, [x29, #-119]
  42153c:	asr	w8, w8, #3
  421540:	and	w8, w8, #0x7
  421544:	add	w8, w8, #0x30
  421548:	ldur	x9, [x29, #-16]
  42154c:	ldur	x10, [x29, #-88]
  421550:	add	x9, x9, x10
  421554:	strb	w8, [x9]
  421558:	ldur	x8, [x29, #-88]
  42155c:	add	x8, x8, #0x1
  421560:	stur	x8, [x29, #-88]
  421564:	ldurb	w8, [x29, #-119]
  421568:	and	w8, w8, #0x7
  42156c:	add	w8, w8, #0x30
  421570:	sturb	w8, [x29, #-119]
  421574:	b	4215bc <wcrtomb@plt+0x1ecac>
  421578:	ldurb	w8, [x29, #-121]
  42157c:	tbnz	w8, #0, 421584 <wcrtomb@plt+0x1ec74>
  421580:	b	4215bc <wcrtomb@plt+0x1ecac>
  421584:	ldur	x8, [x29, #-88]
  421588:	ldur	x9, [x29, #-24]
  42158c:	cmp	x8, x9
  421590:	b.cs	4215a8 <wcrtomb@plt+0x1ec98>  // b.hs, b.nlast
  421594:	ldur	x8, [x29, #-16]
  421598:	ldur	x9, [x29, #-88]
  42159c:	add	x8, x8, x9
  4215a0:	mov	w10, #0x5c                  	// #92
  4215a4:	strb	w10, [x8]
  4215a8:	ldur	x8, [x29, #-88]
  4215ac:	add	x8, x8, #0x1
  4215b0:	stur	x8, [x29, #-88]
  4215b4:	mov	w8, #0x0                   	// #0
  4215b8:	sturb	w8, [x29, #-121]
  4215bc:	ldr	x8, [sp, #88]
  4215c0:	ldur	x9, [x29, #-80]
  4215c4:	add	x9, x9, #0x1
  4215c8:	cmp	x8, x9
  4215cc:	b.hi	4215d4 <wcrtomb@plt+0x1ecc4>  // b.pmore
  4215d0:	b	4216a0 <wcrtomb@plt+0x1ed90>
  4215d4:	ldurb	w8, [x29, #-116]
  4215d8:	tbnz	w8, #0, 4215e0 <wcrtomb@plt+0x1ecd0>
  4215dc:	b	421650 <wcrtomb@plt+0x1ed40>
  4215e0:	ldurb	w8, [x29, #-122]
  4215e4:	tbnz	w8, #0, 421650 <wcrtomb@plt+0x1ed40>
  4215e8:	ldur	x8, [x29, #-88]
  4215ec:	ldur	x9, [x29, #-24]
  4215f0:	cmp	x8, x9
  4215f4:	b.cs	42160c <wcrtomb@plt+0x1ecfc>  // b.hs, b.nlast
  4215f8:	ldur	x8, [x29, #-16]
  4215fc:	ldur	x9, [x29, #-88]
  421600:	add	x8, x8, x9
  421604:	mov	w10, #0x27                  	// #39
  421608:	strb	w10, [x8]
  42160c:	ldur	x8, [x29, #-88]
  421610:	add	x8, x8, #0x1
  421614:	stur	x8, [x29, #-88]
  421618:	ldur	x8, [x29, #-88]
  42161c:	ldur	x9, [x29, #-24]
  421620:	cmp	x8, x9
  421624:	b.cs	42163c <wcrtomb@plt+0x1ed2c>  // b.hs, b.nlast
  421628:	ldur	x8, [x29, #-16]
  42162c:	ldur	x9, [x29, #-88]
  421630:	add	x8, x8, x9
  421634:	mov	w10, #0x27                  	// #39
  421638:	strb	w10, [x8]
  42163c:	ldur	x8, [x29, #-88]
  421640:	add	x8, x8, #0x1
  421644:	stur	x8, [x29, #-88]
  421648:	mov	w8, #0x0                   	// #0
  42164c:	sturb	w8, [x29, #-116]
  421650:	ldur	x8, [x29, #-88]
  421654:	ldur	x9, [x29, #-24]
  421658:	cmp	x8, x9
  42165c:	b.cs	421674 <wcrtomb@plt+0x1ed64>  // b.hs, b.nlast
  421660:	ldurb	w8, [x29, #-119]
  421664:	ldur	x9, [x29, #-16]
  421668:	ldur	x10, [x29, #-88]
  42166c:	add	x9, x9, x10
  421670:	strb	w8, [x9]
  421674:	ldur	x8, [x29, #-88]
  421678:	add	x8, x8, #0x1
  42167c:	stur	x8, [x29, #-88]
  421680:	ldur	x8, [x29, #-32]
  421684:	ldur	x9, [x29, #-80]
  421688:	add	x9, x9, #0x1
  42168c:	stur	x9, [x29, #-80]
  421690:	add	x8, x8, x9
  421694:	ldrb	w10, [x8]
  421698:	sturb	w10, [x29, #-119]
  42169c:	b	4213e8 <wcrtomb@plt+0x1ead8>
  4216a0:	b	421808 <wcrtomb@plt+0x1eef8>
  4216a4:	ldurb	w8, [x29, #-113]
  4216a8:	tbnz	w8, #0, 4216b0 <wcrtomb@plt+0x1eda0>
  4216ac:	b	4216bc <wcrtomb@plt+0x1edac>
  4216b0:	ldur	w8, [x29, #-44]
  4216b4:	cmp	w8, #0x2
  4216b8:	b.ne	4216c8 <wcrtomb@plt+0x1edb8>  // b.any
  4216bc:	ldurb	w8, [x29, #-115]
  4216c0:	tbnz	w8, #0, 4216c8 <wcrtomb@plt+0x1edb8>
  4216c4:	b	421708 <wcrtomb@plt+0x1edf8>
  4216c8:	ldur	x8, [x29, #-56]
  4216cc:	cbz	x8, 421708 <wcrtomb@plt+0x1edf8>
  4216d0:	ldur	x8, [x29, #-56]
  4216d4:	ldurb	w9, [x29, #-119]
  4216d8:	mov	w10, w9
  4216dc:	mov	x11, #0x20                  	// #32
  4216e0:	udiv	x10, x10, x11
  4216e4:	ldr	w9, [x8, x10, lsl #2]
  4216e8:	ldurb	w12, [x29, #-119]
  4216ec:	mov	w8, w12
  4216f0:	udiv	x10, x8, x11
  4216f4:	mul	x10, x10, x11
  4216f8:	subs	x8, x8, x10
  4216fc:	lsr	w8, w9, w8
  421700:	and	w8, w8, #0x1
  421704:	cbnz	w8, 421714 <wcrtomb@plt+0x1ee04>
  421708:	ldurb	w8, [x29, #-121]
  42170c:	tbnz	w8, #0, 421714 <wcrtomb@plt+0x1ee04>
  421710:	b	421808 <wcrtomb@plt+0x1eef8>
  421714:	ldurb	w8, [x29, #-115]
  421718:	tbnz	w8, #0, 421720 <wcrtomb@plt+0x1ee10>
  42171c:	b	421724 <wcrtomb@plt+0x1ee14>
  421720:	b	421a0c <wcrtomb@plt+0x1f0fc>
  421724:	mov	w8, #0x1                   	// #1
  421728:	sturb	w8, [x29, #-122]
  42172c:	ldur	w8, [x29, #-44]
  421730:	cmp	w8, #0x2
  421734:	b.ne	4217d8 <wcrtomb@plt+0x1eec8>  // b.any
  421738:	ldurb	w8, [x29, #-116]
  42173c:	tbnz	w8, #0, 4217d8 <wcrtomb@plt+0x1eec8>
  421740:	ldur	x8, [x29, #-88]
  421744:	ldur	x9, [x29, #-24]
  421748:	cmp	x8, x9
  42174c:	b.cs	421764 <wcrtomb@plt+0x1ee54>  // b.hs, b.nlast
  421750:	ldur	x8, [x29, #-16]
  421754:	ldur	x9, [x29, #-88]
  421758:	add	x8, x8, x9
  42175c:	mov	w10, #0x27                  	// #39
  421760:	strb	w10, [x8]
  421764:	ldur	x8, [x29, #-88]
  421768:	add	x8, x8, #0x1
  42176c:	stur	x8, [x29, #-88]
  421770:	ldur	x8, [x29, #-88]
  421774:	ldur	x9, [x29, #-24]
  421778:	cmp	x8, x9
  42177c:	b.cs	421794 <wcrtomb@plt+0x1ee84>  // b.hs, b.nlast
  421780:	ldur	x8, [x29, #-16]
  421784:	ldur	x9, [x29, #-88]
  421788:	add	x8, x8, x9
  42178c:	mov	w10, #0x24                  	// #36
  421790:	strb	w10, [x8]
  421794:	ldur	x8, [x29, #-88]
  421798:	add	x8, x8, #0x1
  42179c:	stur	x8, [x29, #-88]
  4217a0:	ldur	x8, [x29, #-88]
  4217a4:	ldur	x9, [x29, #-24]
  4217a8:	cmp	x8, x9
  4217ac:	b.cs	4217c4 <wcrtomb@plt+0x1eeb4>  // b.hs, b.nlast
  4217b0:	ldur	x8, [x29, #-16]
  4217b4:	ldur	x9, [x29, #-88]
  4217b8:	add	x8, x8, x9
  4217bc:	mov	w10, #0x27                  	// #39
  4217c0:	strb	w10, [x8]
  4217c4:	ldur	x8, [x29, #-88]
  4217c8:	add	x8, x8, #0x1
  4217cc:	stur	x8, [x29, #-88]
  4217d0:	mov	w8, #0x1                   	// #1
  4217d4:	sturb	w8, [x29, #-116]
  4217d8:	ldur	x8, [x29, #-88]
  4217dc:	ldur	x9, [x29, #-24]
  4217e0:	cmp	x8, x9
  4217e4:	b.cs	4217fc <wcrtomb@plt+0x1eeec>  // b.hs, b.nlast
  4217e8:	ldur	x8, [x29, #-16]
  4217ec:	ldur	x9, [x29, #-88]
  4217f0:	add	x8, x8, x9
  4217f4:	mov	w10, #0x5c                  	// #92
  4217f8:	strb	w10, [x8]
  4217fc:	ldur	x8, [x29, #-88]
  421800:	add	x8, x8, #0x1
  421804:	stur	x8, [x29, #-88]
  421808:	ldurb	w8, [x29, #-116]
  42180c:	tbnz	w8, #0, 421814 <wcrtomb@plt+0x1ef04>
  421810:	b	421884 <wcrtomb@plt+0x1ef74>
  421814:	ldurb	w8, [x29, #-122]
  421818:	tbnz	w8, #0, 421884 <wcrtomb@plt+0x1ef74>
  42181c:	ldur	x8, [x29, #-88]
  421820:	ldur	x9, [x29, #-24]
  421824:	cmp	x8, x9
  421828:	b.cs	421840 <wcrtomb@plt+0x1ef30>  // b.hs, b.nlast
  42182c:	ldur	x8, [x29, #-16]
  421830:	ldur	x9, [x29, #-88]
  421834:	add	x8, x8, x9
  421838:	mov	w10, #0x27                  	// #39
  42183c:	strb	w10, [x8]
  421840:	ldur	x8, [x29, #-88]
  421844:	add	x8, x8, #0x1
  421848:	stur	x8, [x29, #-88]
  42184c:	ldur	x8, [x29, #-88]
  421850:	ldur	x9, [x29, #-24]
  421854:	cmp	x8, x9
  421858:	b.cs	421870 <wcrtomb@plt+0x1ef60>  // b.hs, b.nlast
  42185c:	ldur	x8, [x29, #-16]
  421860:	ldur	x9, [x29, #-88]
  421864:	add	x8, x8, x9
  421868:	mov	w10, #0x27                  	// #39
  42186c:	strb	w10, [x8]
  421870:	ldur	x8, [x29, #-88]
  421874:	add	x8, x8, #0x1
  421878:	stur	x8, [x29, #-88]
  42187c:	mov	w8, #0x0                   	// #0
  421880:	sturb	w8, [x29, #-116]
  421884:	ldur	x8, [x29, #-88]
  421888:	ldur	x9, [x29, #-24]
  42188c:	cmp	x8, x9
  421890:	b.cs	4218a8 <wcrtomb@plt+0x1ef98>  // b.hs, b.nlast
  421894:	ldurb	w8, [x29, #-119]
  421898:	ldur	x9, [x29, #-16]
  42189c:	ldur	x10, [x29, #-88]
  4218a0:	add	x9, x9, x10
  4218a4:	strb	w8, [x9]
  4218a8:	ldur	x8, [x29, #-88]
  4218ac:	add	x8, x8, #0x1
  4218b0:	stur	x8, [x29, #-88]
  4218b4:	ldurb	w8, [x29, #-123]
  4218b8:	tbnz	w8, #0, 4218c4 <wcrtomb@plt+0x1efb4>
  4218bc:	mov	w8, #0x0                   	// #0
  4218c0:	sturb	w8, [x29, #-118]
  4218c4:	ldur	x8, [x29, #-80]
  4218c8:	add	x8, x8, #0x1
  4218cc:	stur	x8, [x29, #-80]
  4218d0:	b	420a40 <wcrtomb@plt+0x1e130>
  4218d4:	ldur	x8, [x29, #-88]
  4218d8:	cbnz	x8, 4218f8 <wcrtomb@plt+0x1efe8>
  4218dc:	ldur	w8, [x29, #-44]
  4218e0:	cmp	w8, #0x2
  4218e4:	b.ne	4218f8 <wcrtomb@plt+0x1efe8>  // b.any
  4218e8:	ldurb	w8, [x29, #-115]
  4218ec:	tbnz	w8, #0, 4218f4 <wcrtomb@plt+0x1efe4>
  4218f0:	b	4218f8 <wcrtomb@plt+0x1efe8>
  4218f4:	b	421a0c <wcrtomb@plt+0x1f0fc>
  4218f8:	ldur	w8, [x29, #-44]
  4218fc:	cmp	w8, #0x2
  421900:	b.ne	42197c <wcrtomb@plt+0x1f06c>  // b.any
  421904:	ldurb	w8, [x29, #-115]
  421908:	tbnz	w8, #0, 42197c <wcrtomb@plt+0x1f06c>
  42190c:	ldurb	w8, [x29, #-117]
  421910:	tbnz	w8, #0, 421918 <wcrtomb@plt+0x1f008>
  421914:	b	42197c <wcrtomb@plt+0x1f06c>
  421918:	ldurb	w8, [x29, #-118]
  42191c:	tbnz	w8, #0, 421924 <wcrtomb@plt+0x1f014>
  421920:	b	42195c <wcrtomb@plt+0x1f04c>
  421924:	ldur	x0, [x29, #-16]
  421928:	ldur	x1, [x29, #-96]
  42192c:	ldur	x2, [x29, #-32]
  421930:	ldur	x3, [x29, #-40]
  421934:	ldur	w5, [x29, #-48]
  421938:	ldur	x6, [x29, #-56]
  42193c:	ldur	x7, [x29, #-64]
  421940:	ldur	x8, [x29, #-72]
  421944:	mov	w4, #0x5                   	// #5
  421948:	mov	x9, sp
  42194c:	str	x8, [x9]
  421950:	bl	4207a8 <wcrtomb@plt+0x1de98>
  421954:	stur	x0, [x29, #-8]
  421958:	b	421a68 <wcrtomb@plt+0x1f158>
  42195c:	ldur	x8, [x29, #-24]
  421960:	cbnz	x8, 42197c <wcrtomb@plt+0x1f06c>
  421964:	ldur	x8, [x29, #-96]
  421968:	cbz	x8, 42197c <wcrtomb@plt+0x1f06c>
  42196c:	ldur	x8, [x29, #-96]
  421970:	stur	x8, [x29, #-24]
  421974:	stur	xzr, [x29, #-88]
  421978:	b	420850 <wcrtomb@plt+0x1df40>
  42197c:	ldur	x8, [x29, #-104]
  421980:	cbz	x8, 4219dc <wcrtomb@plt+0x1f0cc>
  421984:	ldurb	w8, [x29, #-115]
  421988:	tbnz	w8, #0, 4219dc <wcrtomb@plt+0x1f0cc>
  42198c:	ldur	x8, [x29, #-104]
  421990:	ldrb	w9, [x8]
  421994:	cbz	w9, 4219dc <wcrtomb@plt+0x1f0cc>
  421998:	ldur	x8, [x29, #-88]
  42199c:	ldur	x9, [x29, #-24]
  4219a0:	cmp	x8, x9
  4219a4:	b.cs	4219c0 <wcrtomb@plt+0x1f0b0>  // b.hs, b.nlast
  4219a8:	ldur	x8, [x29, #-104]
  4219ac:	ldrb	w9, [x8]
  4219b0:	ldur	x8, [x29, #-16]
  4219b4:	ldur	x10, [x29, #-88]
  4219b8:	add	x8, x8, x10
  4219bc:	strb	w9, [x8]
  4219c0:	ldur	x8, [x29, #-88]
  4219c4:	add	x8, x8, #0x1
  4219c8:	stur	x8, [x29, #-88]
  4219cc:	ldur	x8, [x29, #-104]
  4219d0:	add	x8, x8, #0x1
  4219d4:	stur	x8, [x29, #-104]
  4219d8:	b	42198c <wcrtomb@plt+0x1f07c>
  4219dc:	ldur	x8, [x29, #-88]
  4219e0:	ldur	x9, [x29, #-24]
  4219e4:	cmp	x8, x9
  4219e8:	b.cs	421a00 <wcrtomb@plt+0x1f0f0>  // b.hs, b.nlast
  4219ec:	ldur	x8, [x29, #-16]
  4219f0:	ldur	x9, [x29, #-88]
  4219f4:	add	x8, x8, x9
  4219f8:	mov	w10, #0x0                   	// #0
  4219fc:	strb	w10, [x8]
  421a00:	ldur	x8, [x29, #-88]
  421a04:	stur	x8, [x29, #-8]
  421a08:	b	421a68 <wcrtomb@plt+0x1f158>
  421a0c:	ldur	w8, [x29, #-44]
  421a10:	cmp	w8, #0x2
  421a14:	b.ne	421a2c <wcrtomb@plt+0x1f11c>  // b.any
  421a18:	ldurb	w8, [x29, #-113]
  421a1c:	tbnz	w8, #0, 421a24 <wcrtomb@plt+0x1f114>
  421a20:	b	421a2c <wcrtomb@plt+0x1f11c>
  421a24:	mov	w8, #0x4                   	// #4
  421a28:	stur	w8, [x29, #-44]
  421a2c:	ldur	x0, [x29, #-16]
  421a30:	ldur	x1, [x29, #-24]
  421a34:	ldur	x2, [x29, #-32]
  421a38:	ldur	x3, [x29, #-40]
  421a3c:	ldur	w4, [x29, #-44]
  421a40:	ldur	w8, [x29, #-48]
  421a44:	and	w5, w8, #0xfffffffd
  421a48:	ldur	x7, [x29, #-64]
  421a4c:	ldur	x9, [x29, #-72]
  421a50:	mov	x10, xzr
  421a54:	mov	x6, x10
  421a58:	mov	x10, sp
  421a5c:	str	x9, [x10]
  421a60:	bl	4207a8 <wcrtomb@plt+0x1de98>
  421a64:	stur	x0, [x29, #-8]
  421a68:	ldur	x0, [x29, #-8]
  421a6c:	ldr	x28, [sp, #288]
  421a70:	ldp	x29, x30, [sp, #272]
  421a74:	add	sp, sp, #0x130
  421a78:	ret
  421a7c:	sub	sp, sp, #0x30
  421a80:	stp	x29, x30, [sp, #32]
  421a84:	add	x29, sp, #0x20
  421a88:	mov	x8, xzr
  421a8c:	stur	x0, [x29, #-8]
  421a90:	str	x1, [sp, #16]
  421a94:	str	x2, [sp, #8]
  421a98:	ldur	x0, [x29, #-8]
  421a9c:	ldr	x1, [sp, #16]
  421aa0:	ldr	x3, [sp, #8]
  421aa4:	mov	x2, x8
  421aa8:	bl	421ab8 <wcrtomb@plt+0x1f1a8>
  421aac:	ldp	x29, x30, [sp, #32]
  421ab0:	add	sp, sp, #0x30
  421ab4:	ret
  421ab8:	sub	sp, sp, #0x70
  421abc:	stp	x29, x30, [sp, #96]
  421ac0:	add	x29, sp, #0x60
  421ac4:	stur	x0, [x29, #-8]
  421ac8:	stur	x1, [x29, #-16]
  421acc:	stur	x2, [x29, #-24]
  421ad0:	stur	x3, [x29, #-32]
  421ad4:	ldur	x8, [x29, #-32]
  421ad8:	cbz	x8, 421ae8 <wcrtomb@plt+0x1f1d8>
  421adc:	ldur	x8, [x29, #-32]
  421ae0:	str	x8, [sp, #24]
  421ae4:	b	421af4 <wcrtomb@plt+0x1f1e4>
  421ae8:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  421aec:	add	x8, x8, #0x780
  421af0:	str	x8, [sp, #24]
  421af4:	ldr	x8, [sp, #24]
  421af8:	stur	x8, [x29, #-40]
  421afc:	bl	402870 <__errno_location@plt>
  421b00:	ldr	w9, [x0]
  421b04:	stur	w9, [x29, #-44]
  421b08:	ldur	x8, [x29, #-40]
  421b0c:	ldr	w9, [x8, #4]
  421b10:	ldur	x8, [x29, #-24]
  421b14:	mov	x10, xzr
  421b18:	mov	w11, #0x1                   	// #1
  421b1c:	mov	w12, wzr
  421b20:	cmp	x8, #0x0
  421b24:	csel	w11, w12, w11, ne  // ne = any
  421b28:	orr	w9, w9, w11
  421b2c:	str	w9, [sp, #48]
  421b30:	ldur	x2, [x29, #-8]
  421b34:	ldur	x3, [x29, #-16]
  421b38:	ldur	x8, [x29, #-40]
  421b3c:	ldr	w4, [x8]
  421b40:	ldr	w5, [sp, #48]
  421b44:	ldur	x8, [x29, #-40]
  421b48:	add	x6, x8, #0x8
  421b4c:	ldur	x8, [x29, #-40]
  421b50:	ldr	x7, [x8, #40]
  421b54:	ldur	x8, [x29, #-40]
  421b58:	ldr	x8, [x8, #48]
  421b5c:	mov	x0, x10
  421b60:	mov	x1, x10
  421b64:	mov	x10, sp
  421b68:	str	x8, [x10]
  421b6c:	bl	4207a8 <wcrtomb@plt+0x1de98>
  421b70:	add	x8, x0, #0x1
  421b74:	str	x8, [sp, #40]
  421b78:	ldr	x0, [sp, #40]
  421b7c:	bl	42324c <wcrtomb@plt+0x2093c>
  421b80:	str	x0, [sp, #32]
  421b84:	ldr	x0, [sp, #32]
  421b88:	ldr	x1, [sp, #40]
  421b8c:	ldur	x2, [x29, #-8]
  421b90:	ldur	x3, [x29, #-16]
  421b94:	ldur	x8, [x29, #-40]
  421b98:	ldr	w4, [x8]
  421b9c:	ldr	w5, [sp, #48]
  421ba0:	ldur	x8, [x29, #-40]
  421ba4:	add	x6, x8, #0x8
  421ba8:	ldur	x8, [x29, #-40]
  421bac:	ldr	x7, [x8, #40]
  421bb0:	ldur	x8, [x29, #-40]
  421bb4:	ldr	x8, [x8, #48]
  421bb8:	mov	x10, sp
  421bbc:	str	x8, [x10]
  421bc0:	bl	4207a8 <wcrtomb@plt+0x1de98>
  421bc4:	ldur	w9, [x29, #-44]
  421bc8:	str	w9, [sp, #20]
  421bcc:	bl	402870 <__errno_location@plt>
  421bd0:	ldr	w9, [sp, #20]
  421bd4:	str	w9, [x0]
  421bd8:	ldur	x8, [x29, #-24]
  421bdc:	cbz	x8, 421bf0 <wcrtomb@plt+0x1f2e0>
  421be0:	ldr	x8, [sp, #40]
  421be4:	subs	x8, x8, #0x1
  421be8:	ldur	x9, [x29, #-24]
  421bec:	str	x8, [x9]
  421bf0:	ldr	x0, [sp, #32]
  421bf4:	ldp	x29, x30, [sp, #96]
  421bf8:	add	sp, sp, #0x70
  421bfc:	ret
  421c00:	sub	sp, sp, #0x30
  421c04:	stp	x29, x30, [sp, #32]
  421c08:	add	x29, sp, #0x20
  421c0c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421c10:	add	x8, x8, #0x3d8
  421c14:	mov	w9, #0x1                   	// #1
  421c18:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421c1c:	add	x10, x10, #0x3e8
  421c20:	ldr	x8, [x8]
  421c24:	stur	x8, [x29, #-8]
  421c28:	stur	w9, [x29, #-12]
  421c2c:	str	x10, [sp, #8]
  421c30:	ldur	w8, [x29, #-12]
  421c34:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421c38:	add	x9, x9, #0x3e0
  421c3c:	ldr	w10, [x9]
  421c40:	cmp	w8, w10
  421c44:	b.ge	421c74 <wcrtomb@plt+0x1f364>  // b.tcont
  421c48:	ldur	x8, [x29, #-8]
  421c4c:	ldursw	x9, [x29, #-12]
  421c50:	mov	x10, #0x10                  	// #16
  421c54:	mul	x9, x10, x9
  421c58:	add	x8, x8, x9
  421c5c:	ldr	x0, [x8, #8]
  421c60:	bl	4026c0 <free@plt>
  421c64:	ldur	w8, [x29, #-12]
  421c68:	add	w8, w8, #0x1
  421c6c:	stur	w8, [x29, #-12]
  421c70:	b	421c30 <wcrtomb@plt+0x1f320>
  421c74:	ldur	x8, [x29, #-8]
  421c78:	ldr	x8, [x8, #8]
  421c7c:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  421c80:	add	x9, x9, #0x7b8
  421c84:	cmp	x8, x9
  421c88:	b.eq	421cb0 <wcrtomb@plt+0x1f3a0>  // b.none
  421c8c:	ldur	x8, [x29, #-8]
  421c90:	ldr	x0, [x8, #8]
  421c94:	bl	4026c0 <free@plt>
  421c98:	mov	x8, #0x100                 	// #256
  421c9c:	ldr	x9, [sp, #8]
  421ca0:	str	x8, [x9]
  421ca4:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  421ca8:	add	x8, x8, #0x7b8
  421cac:	str	x8, [x9, #8]
  421cb0:	ldur	x8, [x29, #-8]
  421cb4:	ldr	x9, [sp, #8]
  421cb8:	cmp	x8, x9
  421cbc:	b.eq	421cd8 <wcrtomb@plt+0x1f3c8>  // b.none
  421cc0:	ldur	x0, [x29, #-8]
  421cc4:	bl	4026c0 <free@plt>
  421cc8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421ccc:	add	x8, x8, #0x3d8
  421cd0:	ldr	x9, [sp, #8]
  421cd4:	str	x9, [x8]
  421cd8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421cdc:	add	x8, x8, #0x3e0
  421ce0:	mov	w9, #0x1                   	// #1
  421ce4:	str	w9, [x8]
  421ce8:	ldp	x29, x30, [sp, #32]
  421cec:	add	sp, sp, #0x30
  421cf0:	ret
  421cf4:	sub	sp, sp, #0x20
  421cf8:	stp	x29, x30, [sp, #16]
  421cfc:	add	x29, sp, #0x10
  421d00:	mov	x2, #0xffffffffffffffff    	// #-1
  421d04:	adrp	x3, 459000 <__progname@@GLIBC_2.17+0x3b98>
  421d08:	add	x3, x3, #0x780
  421d0c:	stur	w0, [x29, #-4]
  421d10:	str	x1, [sp]
  421d14:	ldur	w0, [x29, #-4]
  421d18:	ldr	x1, [sp]
  421d1c:	bl	421d2c <wcrtomb@plt+0x1f41c>
  421d20:	ldp	x29, x30, [sp, #16]
  421d24:	add	sp, sp, #0x20
  421d28:	ret
  421d2c:	sub	sp, sp, #0x90
  421d30:	stp	x29, x30, [sp, #128]
  421d34:	add	x29, sp, #0x80
  421d38:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421d3c:	add	x8, x8, #0x3d8
  421d40:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421d44:	add	x9, x9, #0x3e0
  421d48:	stur	w0, [x29, #-4]
  421d4c:	stur	x1, [x29, #-16]
  421d50:	stur	x2, [x29, #-24]
  421d54:	stur	x3, [x29, #-32]
  421d58:	str	x8, [sp, #32]
  421d5c:	str	x9, [sp, #24]
  421d60:	bl	402870 <__errno_location@plt>
  421d64:	ldr	w10, [x0]
  421d68:	stur	w10, [x29, #-36]
  421d6c:	ldr	x8, [sp, #32]
  421d70:	ldr	x9, [x8]
  421d74:	stur	x9, [x29, #-48]
  421d78:	ldur	w10, [x29, #-4]
  421d7c:	cmp	w10, #0x0
  421d80:	cset	w10, ge  // ge = tcont
  421d84:	tbnz	w10, #0, 421d8c <wcrtomb@plt+0x1f47c>
  421d88:	bl	402610 <abort@plt>
  421d8c:	ldr	x8, [sp, #24]
  421d90:	ldr	w9, [x8]
  421d94:	ldur	w10, [x29, #-4]
  421d98:	cmp	w9, w10
  421d9c:	b.gt	421e90 <wcrtomb@plt+0x1f580>
  421da0:	ldur	x8, [x29, #-48]
  421da4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421da8:	add	x9, x9, #0x3e8
  421dac:	cmp	x8, x9
  421db0:	cset	w10, eq  // eq = none
  421db4:	and	w10, w10, #0x1
  421db8:	sturb	w10, [x29, #-49]
  421dbc:	mov	w10, #0x7ffffffe            	// #2147483646
  421dc0:	stur	w10, [x29, #-56]
  421dc4:	ldur	w10, [x29, #-56]
  421dc8:	ldur	w11, [x29, #-4]
  421dcc:	cmp	w10, w11
  421dd0:	b.ge	421dd8 <wcrtomb@plt+0x1f4c8>  // b.tcont
  421dd4:	bl	423394 <wcrtomb@plt+0x20a84>
  421dd8:	ldurb	w8, [x29, #-49]
  421ddc:	tbnz	w8, #0, 421de4 <wcrtomb@plt+0x1f4d4>
  421de0:	b	421df0 <wcrtomb@plt+0x1f4e0>
  421de4:	mov	x8, xzr
  421de8:	str	x8, [sp, #16]
  421dec:	b	421df8 <wcrtomb@plt+0x1f4e8>
  421df0:	ldur	x8, [x29, #-48]
  421df4:	str	x8, [sp, #16]
  421df8:	ldr	x8, [sp, #16]
  421dfc:	ldur	w9, [x29, #-4]
  421e00:	add	w9, w9, #0x1
  421e04:	mov	w10, #0x10                  	// #16
  421e08:	smull	x1, w9, w10
  421e0c:	mov	x0, x8
  421e10:	bl	4230ec <wcrtomb@plt+0x207dc>
  421e14:	stur	x0, [x29, #-48]
  421e18:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421e1c:	add	x8, x8, #0x3d8
  421e20:	str	x0, [x8]
  421e24:	ldurb	w9, [x29, #-49]
  421e28:	tbnz	w9, #0, 421e30 <wcrtomb@plt+0x1f520>
  421e2c:	b	421e44 <wcrtomb@plt+0x1f534>
  421e30:	ldur	x8, [x29, #-48]
  421e34:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  421e38:	add	x9, x9, #0x3e8
  421e3c:	ldr	q0, [x9]
  421e40:	str	q0, [x8]
  421e44:	ldur	x8, [x29, #-48]
  421e48:	ldr	x9, [sp, #24]
  421e4c:	ldrsw	x10, [x9]
  421e50:	mov	x11, #0x10                  	// #16
  421e54:	mul	x10, x11, x10
  421e58:	add	x0, x8, x10
  421e5c:	ldur	w12, [x29, #-4]
  421e60:	add	w12, w12, #0x1
  421e64:	ldr	w13, [x9]
  421e68:	subs	w12, w12, w13
  421e6c:	mov	w13, #0x10                  	// #16
  421e70:	smull	x2, w12, w13
  421e74:	mov	w12, wzr
  421e78:	mov	w1, w12
  421e7c:	bl	402520 <memset@plt>
  421e80:	ldur	w12, [x29, #-4]
  421e84:	add	w12, w12, #0x1
  421e88:	ldr	x8, [sp, #24]
  421e8c:	str	w12, [x8]
  421e90:	ldur	x8, [x29, #-48]
  421e94:	ldursw	x9, [x29, #-4]
  421e98:	mov	x10, #0x10                  	// #16
  421e9c:	mul	x9, x10, x9
  421ea0:	ldr	x8, [x8, x9]
  421ea4:	str	x8, [sp, #64]
  421ea8:	ldur	x8, [x29, #-48]
  421eac:	ldursw	x9, [x29, #-4]
  421eb0:	mul	x9, x10, x9
  421eb4:	add	x8, x8, x9
  421eb8:	ldr	x8, [x8, #8]
  421ebc:	str	x8, [sp, #56]
  421ec0:	ldur	x8, [x29, #-32]
  421ec4:	ldr	w11, [x8, #4]
  421ec8:	orr	w11, w11, #0x1
  421ecc:	str	w11, [sp, #52]
  421ed0:	ldr	x0, [sp, #56]
  421ed4:	ldr	x1, [sp, #64]
  421ed8:	ldur	x2, [x29, #-16]
  421edc:	ldur	x3, [x29, #-24]
  421ee0:	ldur	x8, [x29, #-32]
  421ee4:	ldr	w4, [x8]
  421ee8:	ldr	w5, [sp, #52]
  421eec:	ldur	x8, [x29, #-32]
  421ef0:	add	x6, x8, #0x8
  421ef4:	ldur	x8, [x29, #-32]
  421ef8:	ldr	x7, [x8, #40]
  421efc:	ldur	x8, [x29, #-32]
  421f00:	ldr	x8, [x8, #48]
  421f04:	mov	x9, sp
  421f08:	str	x8, [x9]
  421f0c:	bl	4207a8 <wcrtomb@plt+0x1de98>
  421f10:	str	x0, [sp, #40]
  421f14:	ldr	x8, [sp, #64]
  421f18:	ldr	x9, [sp, #40]
  421f1c:	cmp	x8, x9
  421f20:	b.hi	421fc4 <wcrtomb@plt+0x1f6b4>  // b.pmore
  421f24:	ldr	x8, [sp, #40]
  421f28:	add	x8, x8, #0x1
  421f2c:	str	x8, [sp, #64]
  421f30:	ldur	x9, [x29, #-48]
  421f34:	ldursw	x10, [x29, #-4]
  421f38:	mov	x11, #0x10                  	// #16
  421f3c:	mul	x10, x11, x10
  421f40:	str	x8, [x9, x10]
  421f44:	ldr	x8, [sp, #56]
  421f48:	adrp	x9, 459000 <__progname@@GLIBC_2.17+0x3b98>
  421f4c:	add	x9, x9, #0x7b8
  421f50:	cmp	x8, x9
  421f54:	b.eq	421f60 <wcrtomb@plt+0x1f650>  // b.none
  421f58:	ldr	x0, [sp, #56]
  421f5c:	bl	4026c0 <free@plt>
  421f60:	ldr	x0, [sp, #64]
  421f64:	bl	42324c <wcrtomb@plt+0x2093c>
  421f68:	str	x0, [sp, #56]
  421f6c:	ldur	x8, [x29, #-48]
  421f70:	ldursw	x9, [x29, #-4]
  421f74:	mov	x10, #0x10                  	// #16
  421f78:	mul	x9, x10, x9
  421f7c:	add	x8, x8, x9
  421f80:	str	x0, [x8, #8]
  421f84:	ldr	x0, [sp, #56]
  421f88:	ldr	x1, [sp, #64]
  421f8c:	ldur	x2, [x29, #-16]
  421f90:	ldur	x3, [x29, #-24]
  421f94:	ldur	x8, [x29, #-32]
  421f98:	ldr	w4, [x8]
  421f9c:	ldr	w5, [sp, #52]
  421fa0:	ldur	x8, [x29, #-32]
  421fa4:	add	x6, x8, #0x8
  421fa8:	ldur	x8, [x29, #-32]
  421fac:	ldr	x7, [x8, #40]
  421fb0:	ldur	x8, [x29, #-32]
  421fb4:	ldr	x8, [x8, #48]
  421fb8:	mov	x9, sp
  421fbc:	str	x8, [x9]
  421fc0:	bl	4207a8 <wcrtomb@plt+0x1de98>
  421fc4:	ldur	w8, [x29, #-36]
  421fc8:	str	w8, [sp, #12]
  421fcc:	bl	402870 <__errno_location@plt>
  421fd0:	ldr	w8, [sp, #12]
  421fd4:	str	w8, [x0]
  421fd8:	ldr	x0, [sp, #56]
  421fdc:	ldp	x29, x30, [sp, #128]
  421fe0:	add	sp, sp, #0x90
  421fe4:	ret
  421fe8:	sub	sp, sp, #0x30
  421fec:	stp	x29, x30, [sp, #32]
  421ff0:	add	x29, sp, #0x20
  421ff4:	adrp	x3, 459000 <__progname@@GLIBC_2.17+0x3b98>
  421ff8:	add	x3, x3, #0x780
  421ffc:	stur	w0, [x29, #-4]
  422000:	str	x1, [sp, #16]
  422004:	str	x2, [sp, #8]
  422008:	ldur	w0, [x29, #-4]
  42200c:	ldr	x1, [sp, #16]
  422010:	ldr	x2, [sp, #8]
  422014:	bl	421d2c <wcrtomb@plt+0x1f41c>
  422018:	ldp	x29, x30, [sp, #32]
  42201c:	add	sp, sp, #0x30
  422020:	ret
  422024:	sub	sp, sp, #0x20
  422028:	stp	x29, x30, [sp, #16]
  42202c:	add	x29, sp, #0x10
  422030:	mov	w8, wzr
  422034:	str	x0, [sp, #8]
  422038:	ldr	x1, [sp, #8]
  42203c:	mov	w0, w8
  422040:	bl	421cf4 <wcrtomb@plt+0x1f3e4>
  422044:	ldp	x29, x30, [sp, #16]
  422048:	add	sp, sp, #0x20
  42204c:	ret
  422050:	sub	sp, sp, #0x20
  422054:	stp	x29, x30, [sp, #16]
  422058:	add	x29, sp, #0x10
  42205c:	mov	w8, wzr
  422060:	str	x0, [sp, #8]
  422064:	str	x1, [sp]
  422068:	ldr	x1, [sp, #8]
  42206c:	ldr	x2, [sp]
  422070:	mov	w0, w8
  422074:	bl	421fe8 <wcrtomb@plt+0x1f6d8>
  422078:	ldp	x29, x30, [sp, #16]
  42207c:	add	sp, sp, #0x20
  422080:	ret
  422084:	sub	sp, sp, #0x70
  422088:	stp	x29, x30, [sp, #96]
  42208c:	add	x29, sp, #0x60
  422090:	mov	x8, #0xffffffffffffffff    	// #-1
  422094:	add	x9, sp, #0x18
  422098:	stur	w0, [x29, #-4]
  42209c:	stur	w1, [x29, #-8]
  4220a0:	stur	x2, [x29, #-16]
  4220a4:	ldur	w0, [x29, #-8]
  4220a8:	str	x8, [sp, #16]
  4220ac:	mov	x8, x9
  4220b0:	str	x9, [sp, #8]
  4220b4:	bl	4220d8 <wcrtomb@plt+0x1f7c8>
  4220b8:	ldur	w0, [x29, #-4]
  4220bc:	ldur	x1, [x29, #-16]
  4220c0:	ldr	x2, [sp, #16]
  4220c4:	ldr	x3, [sp, #8]
  4220c8:	bl	421d2c <wcrtomb@plt+0x1f41c>
  4220cc:	ldp	x29, x30, [sp, #96]
  4220d0:	add	sp, sp, #0x70
  4220d4:	ret
  4220d8:	sub	sp, sp, #0x20
  4220dc:	stp	x29, x30, [sp, #16]
  4220e0:	add	x29, sp, #0x10
  4220e4:	mov	x2, #0x38                  	// #56
  4220e8:	stur	w0, [x29, #-4]
  4220ec:	mov	x0, x8
  4220f0:	mov	w9, wzr
  4220f4:	mov	w1, w9
  4220f8:	str	x8, [sp]
  4220fc:	bl	402520 <memset@plt>
  422100:	ldur	w9, [x29, #-4]
  422104:	cmp	w9, #0xa
  422108:	b.ne	422110 <wcrtomb@plt+0x1f800>  // b.any
  42210c:	bl	402610 <abort@plt>
  422110:	ldur	w8, [x29, #-4]
  422114:	ldr	x9, [sp]
  422118:	str	w8, [x9]
  42211c:	ldp	x29, x30, [sp, #16]
  422120:	add	sp, sp, #0x20
  422124:	ret
  422128:	sub	sp, sp, #0x70
  42212c:	stp	x29, x30, [sp, #96]
  422130:	add	x29, sp, #0x60
  422134:	add	x8, sp, #0x10
  422138:	stur	w0, [x29, #-4]
  42213c:	stur	w1, [x29, #-8]
  422140:	stur	x2, [x29, #-16]
  422144:	stur	x3, [x29, #-24]
  422148:	ldur	w0, [x29, #-8]
  42214c:	str	x8, [sp, #8]
  422150:	bl	4220d8 <wcrtomb@plt+0x1f7c8>
  422154:	ldur	w0, [x29, #-4]
  422158:	ldur	x1, [x29, #-16]
  42215c:	ldur	x2, [x29, #-24]
  422160:	ldr	x3, [sp, #8]
  422164:	bl	421d2c <wcrtomb@plt+0x1f41c>
  422168:	ldp	x29, x30, [sp, #96]
  42216c:	add	sp, sp, #0x70
  422170:	ret
  422174:	sub	sp, sp, #0x20
  422178:	stp	x29, x30, [sp, #16]
  42217c:	add	x29, sp, #0x10
  422180:	mov	w8, wzr
  422184:	stur	w0, [x29, #-4]
  422188:	str	x1, [sp]
  42218c:	ldur	w1, [x29, #-4]
  422190:	ldr	x2, [sp]
  422194:	mov	w0, w8
  422198:	bl	422084 <wcrtomb@plt+0x1f774>
  42219c:	ldp	x29, x30, [sp, #16]
  4221a0:	add	sp, sp, #0x20
  4221a4:	ret
  4221a8:	sub	sp, sp, #0x30
  4221ac:	stp	x29, x30, [sp, #32]
  4221b0:	add	x29, sp, #0x20
  4221b4:	mov	w8, wzr
  4221b8:	stur	w0, [x29, #-4]
  4221bc:	str	x1, [sp, #16]
  4221c0:	str	x2, [sp, #8]
  4221c4:	ldur	w1, [x29, #-4]
  4221c8:	ldr	x2, [sp, #16]
  4221cc:	ldr	x3, [sp, #8]
  4221d0:	mov	w0, w8
  4221d4:	bl	422128 <wcrtomb@plt+0x1f818>
  4221d8:	ldp	x29, x30, [sp, #32]
  4221dc:	add	sp, sp, #0x30
  4221e0:	ret
  4221e4:	sub	sp, sp, #0x70
  4221e8:	stp	x29, x30, [sp, #96]
  4221ec:	add	x29, sp, #0x60
  4221f0:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4221f4:	add	x8, x8, #0x780
  4221f8:	mov	x9, #0x38                  	// #56
  4221fc:	mov	w10, #0x1                   	// #1
  422200:	mov	w11, wzr
  422204:	add	x12, sp, #0x10
  422208:	stur	x0, [x29, #-8]
  42220c:	stur	x1, [x29, #-16]
  422210:	sturb	w2, [x29, #-17]
  422214:	mov	x0, x12
  422218:	mov	x1, x8
  42221c:	mov	x2, x9
  422220:	str	w10, [sp, #12]
  422224:	str	w11, [sp, #8]
  422228:	str	x12, [sp]
  42222c:	bl	402290 <memcpy@plt>
  422230:	ldurb	w1, [x29, #-17]
  422234:	ldr	x0, [sp]
  422238:	ldr	w2, [sp, #12]
  42223c:	bl	420570 <wcrtomb@plt+0x1dc60>
  422240:	ldur	x1, [x29, #-8]
  422244:	ldur	x2, [x29, #-16]
  422248:	ldr	w10, [sp, #8]
  42224c:	mov	w0, w10
  422250:	ldr	x3, [sp]
  422254:	bl	421d2c <wcrtomb@plt+0x1f41c>
  422258:	ldp	x29, x30, [sp, #96]
  42225c:	add	sp, sp, #0x70
  422260:	ret
  422264:	sub	sp, sp, #0x20
  422268:	stp	x29, x30, [sp, #16]
  42226c:	add	x29, sp, #0x10
  422270:	mov	x8, #0xffffffffffffffff    	// #-1
  422274:	str	x0, [sp, #8]
  422278:	strb	w1, [sp, #7]
  42227c:	ldr	x0, [sp, #8]
  422280:	ldrb	w2, [sp, #7]
  422284:	mov	x1, x8
  422288:	bl	4221e4 <wcrtomb@plt+0x1f8d4>
  42228c:	ldp	x29, x30, [sp, #16]
  422290:	add	sp, sp, #0x20
  422294:	ret
  422298:	sub	sp, sp, #0x20
  42229c:	stp	x29, x30, [sp, #16]
  4222a0:	add	x29, sp, #0x10
  4222a4:	str	x0, [sp, #8]
  4222a8:	ldr	x0, [sp, #8]
  4222ac:	mov	w1, #0x3a                  	// #58
  4222b0:	bl	422264 <wcrtomb@plt+0x1f954>
  4222b4:	ldp	x29, x30, [sp, #16]
  4222b8:	add	sp, sp, #0x20
  4222bc:	ret
  4222c0:	sub	sp, sp, #0x20
  4222c4:	stp	x29, x30, [sp, #16]
  4222c8:	add	x29, sp, #0x10
  4222cc:	str	x0, [sp, #8]
  4222d0:	str	x1, [sp]
  4222d4:	ldr	x0, [sp, #8]
  4222d8:	ldr	x1, [sp]
  4222dc:	mov	w2, #0x3a                  	// #58
  4222e0:	bl	4221e4 <wcrtomb@plt+0x1f8d4>
  4222e4:	ldp	x29, x30, [sp, #16]
  4222e8:	add	sp, sp, #0x20
  4222ec:	ret
  4222f0:	sub	sp, sp, #0xc0
  4222f4:	stp	x29, x30, [sp, #176]
  4222f8:	add	x29, sp, #0xb0
  4222fc:	mov	x8, #0x38                  	// #56
  422300:	mov	w9, #0x1                   	// #1
  422304:	mov	x10, #0xffffffffffffffff    	// #-1
  422308:	sub	x11, x29, #0x48
  42230c:	add	x12, sp, #0x30
  422310:	stur	w0, [x29, #-4]
  422314:	stur	w1, [x29, #-8]
  422318:	stur	x2, [x29, #-16]
  42231c:	ldur	w0, [x29, #-8]
  422320:	str	x8, [sp, #40]
  422324:	mov	x8, x12
  422328:	str	w9, [sp, #36]
  42232c:	str	x10, [sp, #24]
  422330:	str	x11, [sp, #16]
  422334:	str	x12, [sp, #8]
  422338:	bl	4220d8 <wcrtomb@plt+0x1f7c8>
  42233c:	ldr	x0, [sp, #16]
  422340:	ldr	x1, [sp, #8]
  422344:	ldr	x2, [sp, #40]
  422348:	bl	402290 <memcpy@plt>
  42234c:	ldr	x0, [sp, #16]
  422350:	mov	w1, #0x3a                  	// #58
  422354:	ldr	w2, [sp, #36]
  422358:	bl	420570 <wcrtomb@plt+0x1dc60>
  42235c:	ldur	w9, [x29, #-4]
  422360:	ldur	x1, [x29, #-16]
  422364:	mov	w0, w9
  422368:	ldr	x2, [sp, #24]
  42236c:	ldr	x3, [sp, #16]
  422370:	bl	421d2c <wcrtomb@plt+0x1f41c>
  422374:	ldp	x29, x30, [sp, #176]
  422378:	add	sp, sp, #0xc0
  42237c:	ret
  422380:	sub	sp, sp, #0x30
  422384:	stp	x29, x30, [sp, #32]
  422388:	add	x29, sp, #0x20
  42238c:	mov	x4, #0xffffffffffffffff    	// #-1
  422390:	stur	w0, [x29, #-4]
  422394:	str	x1, [sp, #16]
  422398:	str	x2, [sp, #8]
  42239c:	str	x3, [sp]
  4223a0:	ldur	w0, [x29, #-4]
  4223a4:	ldr	x1, [sp, #16]
  4223a8:	ldr	x2, [sp, #8]
  4223ac:	ldr	x3, [sp]
  4223b0:	bl	4223c0 <wcrtomb@plt+0x1fab0>
  4223b4:	ldp	x29, x30, [sp, #32]
  4223b8:	add	sp, sp, #0x30
  4223bc:	ret
  4223c0:	sub	sp, sp, #0x80
  4223c4:	stp	x29, x30, [sp, #112]
  4223c8:	add	x29, sp, #0x70
  4223cc:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4223d0:	add	x8, x8, #0x780
  4223d4:	mov	x9, #0x38                  	// #56
  4223d8:	add	x10, sp, #0x10
  4223dc:	stur	w0, [x29, #-4]
  4223e0:	stur	x1, [x29, #-16]
  4223e4:	stur	x2, [x29, #-24]
  4223e8:	stur	x3, [x29, #-32]
  4223ec:	stur	x4, [x29, #-40]
  4223f0:	mov	x0, x10
  4223f4:	mov	x1, x8
  4223f8:	mov	x2, x9
  4223fc:	str	x10, [sp, #8]
  422400:	bl	402290 <memcpy@plt>
  422404:	ldur	x1, [x29, #-16]
  422408:	ldur	x2, [x29, #-24]
  42240c:	ldr	x0, [sp, #8]
  422410:	bl	420678 <wcrtomb@plt+0x1dd68>
  422414:	ldur	w0, [x29, #-4]
  422418:	ldur	x1, [x29, #-32]
  42241c:	ldur	x2, [x29, #-40]
  422420:	ldr	x3, [sp, #8]
  422424:	bl	421d2c <wcrtomb@plt+0x1f41c>
  422428:	ldp	x29, x30, [sp, #112]
  42242c:	add	sp, sp, #0x80
  422430:	ret
  422434:	sub	sp, sp, #0x30
  422438:	stp	x29, x30, [sp, #32]
  42243c:	add	x29, sp, #0x20
  422440:	mov	w8, wzr
  422444:	stur	x0, [x29, #-8]
  422448:	str	x1, [sp, #16]
  42244c:	str	x2, [sp, #8]
  422450:	ldur	x1, [x29, #-8]
  422454:	ldr	x2, [sp, #16]
  422458:	ldr	x3, [sp, #8]
  42245c:	mov	w0, w8
  422460:	bl	422380 <wcrtomb@plt+0x1fa70>
  422464:	ldp	x29, x30, [sp, #32]
  422468:	add	sp, sp, #0x30
  42246c:	ret
  422470:	sub	sp, sp, #0x30
  422474:	stp	x29, x30, [sp, #32]
  422478:	add	x29, sp, #0x20
  42247c:	mov	w8, wzr
  422480:	stur	x0, [x29, #-8]
  422484:	str	x1, [sp, #16]
  422488:	str	x2, [sp, #8]
  42248c:	str	x3, [sp]
  422490:	ldur	x1, [x29, #-8]
  422494:	ldr	x2, [sp, #16]
  422498:	ldr	x3, [sp, #8]
  42249c:	ldr	x4, [sp]
  4224a0:	mov	w0, w8
  4224a4:	bl	4223c0 <wcrtomb@plt+0x1fab0>
  4224a8:	ldp	x29, x30, [sp, #32]
  4224ac:	add	sp, sp, #0x30
  4224b0:	ret
  4224b4:	sub	sp, sp, #0x30
  4224b8:	stp	x29, x30, [sp, #32]
  4224bc:	add	x29, sp, #0x20
  4224c0:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4224c4:	add	x3, x3, #0x3f8
  4224c8:	stur	w0, [x29, #-4]
  4224cc:	str	x1, [sp, #16]
  4224d0:	str	x2, [sp, #8]
  4224d4:	ldur	w0, [x29, #-4]
  4224d8:	ldr	x1, [sp, #16]
  4224dc:	ldr	x2, [sp, #8]
  4224e0:	bl	421d2c <wcrtomb@plt+0x1f41c>
  4224e4:	ldp	x29, x30, [sp, #32]
  4224e8:	add	sp, sp, #0x30
  4224ec:	ret
  4224f0:	sub	sp, sp, #0x20
  4224f4:	stp	x29, x30, [sp, #16]
  4224f8:	add	x29, sp, #0x10
  4224fc:	mov	w8, wzr
  422500:	str	x0, [sp, #8]
  422504:	str	x1, [sp]
  422508:	ldr	x1, [sp, #8]
  42250c:	ldr	x2, [sp]
  422510:	mov	w0, w8
  422514:	bl	4224b4 <wcrtomb@plt+0x1fba4>
  422518:	ldp	x29, x30, [sp, #16]
  42251c:	add	sp, sp, #0x20
  422520:	ret
  422524:	sub	sp, sp, #0x20
  422528:	stp	x29, x30, [sp, #16]
  42252c:	add	x29, sp, #0x10
  422530:	mov	x2, #0xffffffffffffffff    	// #-1
  422534:	stur	w0, [x29, #-4]
  422538:	str	x1, [sp]
  42253c:	ldur	w0, [x29, #-4]
  422540:	ldr	x1, [sp]
  422544:	bl	4224b4 <wcrtomb@plt+0x1fba4>
  422548:	ldp	x29, x30, [sp, #16]
  42254c:	add	sp, sp, #0x20
  422550:	ret
  422554:	sub	sp, sp, #0x20
  422558:	stp	x29, x30, [sp, #16]
  42255c:	add	x29, sp, #0x10
  422560:	mov	w8, wzr
  422564:	str	x0, [sp, #8]
  422568:	ldr	x1, [sp, #8]
  42256c:	mov	w0, w8
  422570:	bl	422524 <wcrtomb@plt+0x1fc14>
  422574:	ldp	x29, x30, [sp, #16]
  422578:	add	sp, sp, #0x20
  42257c:	ret
  422580:	sub	sp, sp, #0x40
  422584:	stp	x29, x30, [sp, #48]
  422588:	add	x29, sp, #0x30
  42258c:	stur	x0, [x29, #-16]
  422590:	stur	w1, [x29, #-20]
  422594:	ldur	x0, [x29, #-16]
  422598:	bl	4028b0 <gettext@plt>
  42259c:	str	x0, [sp, #16]
  4225a0:	ldr	x8, [sp, #16]
  4225a4:	ldur	x9, [x29, #-16]
  4225a8:	cmp	x8, x9
  4225ac:	b.eq	4225bc <wcrtomb@plt+0x1fcac>  // b.none
  4225b0:	ldr	x8, [sp, #16]
  4225b4:	stur	x8, [x29, #-8]
  4225b8:	b	42265c <wcrtomb@plt+0x1fd4c>
  4225bc:	bl	440168 <_obstack_memory_used@@Base+0x18848>
  4225c0:	str	x0, [sp, #8]
  4225c4:	ldr	x0, [sp, #8]
  4225c8:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4225cc:	add	x1, x1, #0xf6e
  4225d0:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  4225d4:	cbnz	w0, 422600 <wcrtomb@plt+0x1fcf0>
  4225d8:	ldur	x8, [x29, #-16]
  4225dc:	ldrb	w9, [x8]
  4225e0:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4225e4:	add	x8, x8, #0xf78
  4225e8:	adrp	x10, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4225ec:	add	x10, x10, #0xf74
  4225f0:	cmp	w9, #0x60
  4225f4:	csel	x8, x10, x8, eq  // eq = none
  4225f8:	stur	x8, [x29, #-8]
  4225fc:	b	42265c <wcrtomb@plt+0x1fd4c>
  422600:	ldr	x0, [sp, #8]
  422604:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  422608:	add	x1, x1, #0xf7c
  42260c:	bl	4101f8 <wcrtomb@plt+0xd8e8>
  422610:	cbnz	w0, 42263c <wcrtomb@plt+0x1fd2c>
  422614:	ldur	x8, [x29, #-16]
  422618:	ldrb	w9, [x8]
  42261c:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  422620:	add	x8, x8, #0xf88
  422624:	adrp	x10, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  422628:	add	x10, x10, #0xf84
  42262c:	cmp	w9, #0x60
  422630:	csel	x8, x10, x8, eq  // eq = none
  422634:	stur	x8, [x29, #-8]
  422638:	b	42265c <wcrtomb@plt+0x1fd4c>
  42263c:	ldur	w8, [x29, #-20]
  422640:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  422644:	add	x9, x9, #0xc64
  422648:	adrp	x10, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  42264c:	add	x10, x10, #0x7b4
  422650:	cmp	w8, #0x9
  422654:	csel	x9, x10, x9, eq  // eq = none
  422658:	stur	x9, [x29, #-8]
  42265c:	ldur	x0, [x29, #-8]
  422660:	ldp	x29, x30, [sp, #48]
  422664:	add	sp, sp, #0x40
  422668:	ret
  42266c:	sub	sp, sp, #0x40
  422670:	stp	x29, x30, [sp, #48]
  422674:	add	x29, sp, #0x30
  422678:	stur	w0, [x29, #-12]
  42267c:	str	x1, [sp, #24]
  422680:	str	x2, [sp, #16]
  422684:	ldur	w0, [x29, #-12]
  422688:	ldr	x1, [sp, #24]
  42268c:	ldr	x2, [sp, #16]
  422690:	bl	402760 <read@plt>
  422694:	str	x0, [sp, #8]
  422698:	ldr	x8, [sp, #8]
  42269c:	mov	x9, xzr
  4226a0:	cmp	x9, x8
  4226a4:	cset	w10, gt
  4226a8:	tbnz	w10, #0, 4226b8 <wcrtomb@plt+0x1fda8>
  4226ac:	ldr	x8, [sp, #8]
  4226b0:	stur	x8, [x29, #-8]
  4226b4:	b	422708 <wcrtomb@plt+0x1fdf8>
  4226b8:	bl	402870 <__errno_location@plt>
  4226bc:	ldr	w8, [x0]
  4226c0:	cmp	w8, #0x4
  4226c4:	b.ne	4226cc <wcrtomb@plt+0x1fdbc>  // b.any
  4226c8:	b	422684 <wcrtomb@plt+0x1fd74>
  4226cc:	bl	402870 <__errno_location@plt>
  4226d0:	ldr	w8, [x0]
  4226d4:	cmp	w8, #0x16
  4226d8:	b.ne	4226f8 <wcrtomb@plt+0x1fde8>  // b.any
  4226dc:	ldr	x8, [sp, #16]
  4226e0:	mov	x9, #0x7ff00000            	// #2146435072
  4226e4:	cmp	x9, x8
  4226e8:	b.cs	4226f8 <wcrtomb@plt+0x1fde8>  // b.hs, b.nlast
  4226ec:	mov	x8, #0x7ff00000            	// #2146435072
  4226f0:	str	x8, [sp, #16]
  4226f4:	b	422704 <wcrtomb@plt+0x1fdf4>
  4226f8:	ldr	x8, [sp, #8]
  4226fc:	stur	x8, [x29, #-8]
  422700:	b	422708 <wcrtomb@plt+0x1fdf8>
  422704:	b	422684 <wcrtomb@plt+0x1fd74>
  422708:	ldur	x0, [x29, #-8]
  42270c:	ldp	x29, x30, [sp, #48]
  422710:	add	sp, sp, #0x40
  422714:	ret
  422718:	sub	sp, sp, #0x30
  42271c:	stp	x29, x30, [sp, #32]
  422720:	add	x29, sp, #0x20
  422724:	mov	w8, wzr
  422728:	str	x0, [sp, #16]
  42272c:	str	x1, [sp, #8]
  422730:	ldr	x0, [sp, #16]
  422734:	ldr	x2, [sp, #8]
  422738:	mov	w1, w8
  42273c:	bl	402770 <memchr@plt>
  422740:	str	x0, [sp]
  422744:	ldr	x9, [sp]
  422748:	cbz	x9, 422764 <wcrtomb@plt+0x1fe54>
  42274c:	ldr	x8, [sp]
  422750:	ldr	x9, [sp, #16]
  422754:	subs	x8, x8, x9
  422758:	add	x8, x8, #0x1
  42275c:	stur	x8, [x29, #-8]
  422760:	b	42276c <wcrtomb@plt+0x1fe5c>
  422764:	ldr	x8, [sp, #8]
  422768:	stur	x8, [x29, #-8]
  42276c:	ldur	x0, [x29, #-8]
  422770:	ldp	x29, x30, [sp, #32]
  422774:	add	sp, sp, #0x30
  422778:	ret
  42277c:	sub	sp, sp, #0x20
  422780:	stp	x29, x30, [sp, #16]
  422784:	add	x29, sp, #0x10
  422788:	mov	w8, wzr
  42278c:	stur	w0, [x29, #-4]
  422790:	ldur	w9, [x29, #-4]
  422794:	cmp	w8, w9
  422798:	cset	w8, gt
  42279c:	tbnz	w8, #0, 4227e8 <wcrtomb@plt+0x1fed8>
  4227a0:	ldur	w8, [x29, #-4]
  4227a4:	cmp	w8, #0x2
  4227a8:	b.gt	4227e8 <wcrtomb@plt+0x1fed8>
  4227ac:	ldur	w0, [x29, #-4]
  4227b0:	bl	440548 <_obstack_memory_used@@Base+0x18c28>
  4227b4:	str	w0, [sp, #8]
  4227b8:	bl	402870 <__errno_location@plt>
  4227bc:	ldr	w8, [x0]
  4227c0:	str	w8, [sp, #4]
  4227c4:	ldur	w0, [x29, #-4]
  4227c8:	bl	4025a0 <close@plt>
  4227cc:	ldr	w8, [sp, #4]
  4227d0:	str	w8, [sp]
  4227d4:	bl	402870 <__errno_location@plt>
  4227d8:	ldr	w8, [sp]
  4227dc:	str	w8, [x0]
  4227e0:	ldr	w9, [sp, #8]
  4227e4:	stur	w9, [x29, #-4]
  4227e8:	ldur	w0, [x29, #-4]
  4227ec:	ldp	x29, x30, [sp, #16]
  4227f0:	add	sp, sp, #0x20
  4227f4:	ret
  4227f8:	sub	sp, sp, #0x140
  4227fc:	stp	x29, x30, [sp, #288]
  422800:	str	x28, [sp, #304]
  422804:	add	x29, sp, #0x120
  422808:	stur	x0, [x29, #-8]
  42280c:	stur	x1, [x29, #-16]
  422810:	stur	x2, [x29, #-24]
  422814:	stur	x3, [x29, #-32]
  422818:	stur	x4, [x29, #-40]
  42281c:	stur	x5, [x29, #-48]
  422820:	ldur	x8, [x29, #-16]
  422824:	cbz	x8, 422848 <wcrtomb@plt+0x1ff38>
  422828:	ldur	x0, [x29, #-8]
  42282c:	ldur	x2, [x29, #-16]
  422830:	ldur	x3, [x29, #-24]
  422834:	ldur	x4, [x29, #-32]
  422838:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  42283c:	add	x1, x1, #0xfb4
  422840:	bl	4028d0 <fprintf@plt>
  422844:	b	422860 <wcrtomb@plt+0x1ff50>
  422848:	ldur	x0, [x29, #-8]
  42284c:	ldur	x2, [x29, #-24]
  422850:	ldur	x3, [x29, #-32]
  422854:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  422858:	add	x1, x1, #0xfc0
  42285c:	bl	4028d0 <fprintf@plt>
  422860:	ldur	x0, [x29, #-8]
  422864:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  422868:	add	x8, x8, #0xfc7
  42286c:	stur	x0, [x29, #-56]
  422870:	mov	x0, x8
  422874:	bl	4028b0 <gettext@plt>
  422878:	ldur	x8, [x29, #-56]
  42287c:	stur	x0, [x29, #-64]
  422880:	mov	x0, x8
  422884:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422888:	add	x1, x1, #0x2b3
  42288c:	ldur	x2, [x29, #-64]
  422890:	mov	w3, #0x7e4                 	// #2020
  422894:	bl	4028d0 <fprintf@plt>
  422898:	ldur	x1, [x29, #-8]
  42289c:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4228a0:	add	x8, x8, #0xad4
  4228a4:	mov	x0, x8
  4228a8:	stur	x8, [x29, #-72]
  4228ac:	bl	4027e0 <fputs_unlocked@plt>
  4228b0:	ldur	x8, [x29, #-8]
  4228b4:	adrp	x9, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4228b8:	add	x9, x9, #0xfcb
  4228bc:	mov	x0, x9
  4228c0:	stur	x8, [x29, #-80]
  4228c4:	bl	4028b0 <gettext@plt>
  4228c8:	ldur	x8, [x29, #-80]
  4228cc:	stur	x0, [x29, #-88]
  4228d0:	mov	x0, x8
  4228d4:	ldur	x1, [x29, #-88]
  4228d8:	adrp	x2, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4228dc:	add	x2, x2, #0x76
  4228e0:	bl	4028d0 <fprintf@plt>
  4228e4:	ldur	x1, [x29, #-8]
  4228e8:	ldur	x8, [x29, #-72]
  4228ec:	mov	x0, x8
  4228f0:	bl	4027e0 <fputs_unlocked@plt>
  4228f4:	ldur	x8, [x29, #-48]
  4228f8:	subs	x8, x8, #0x0
  4228fc:	cmp	x8, #0x9
  422900:	stur	x8, [x29, #-96]
  422904:	b.hi	422c6c <wcrtomb@plt+0x2035c>  // b.pmore
  422908:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  42290c:	add	x8, x8, #0xf8c
  422910:	ldur	x11, [x29, #-96]
  422914:	ldrsw	x10, [x8, x11, lsl #2]
  422918:	add	x9, x8, x10
  42291c:	br	x9
  422920:	b	422cf8 <wcrtomb@plt+0x203e8>
  422924:	ldur	x0, [x29, #-8]
  422928:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42292c:	add	x8, x8, #0x98
  422930:	stur	x0, [x29, #-104]
  422934:	mov	x0, x8
  422938:	bl	4028b0 <gettext@plt>
  42293c:	ldur	x8, [x29, #-40]
  422940:	ldr	x2, [x8]
  422944:	ldur	x8, [x29, #-104]
  422948:	stur	x0, [x29, #-112]
  42294c:	mov	x0, x8
  422950:	ldur	x1, [x29, #-112]
  422954:	bl	4028d0 <fprintf@plt>
  422958:	b	422cf8 <wcrtomb@plt+0x203e8>
  42295c:	ldur	x0, [x29, #-8]
  422960:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422964:	add	x8, x8, #0xa8
  422968:	stur	x0, [x29, #-120]
  42296c:	mov	x0, x8
  422970:	bl	4028b0 <gettext@plt>
  422974:	ldur	x8, [x29, #-40]
  422978:	ldr	x2, [x8]
  42297c:	ldur	x8, [x29, #-40]
  422980:	ldr	x3, [x8, #8]
  422984:	ldur	x8, [x29, #-120]
  422988:	stur	x0, [x29, #-128]
  42298c:	mov	x0, x8
  422990:	ldur	x1, [x29, #-128]
  422994:	bl	4028d0 <fprintf@plt>
  422998:	b	422cf8 <wcrtomb@plt+0x203e8>
  42299c:	ldur	x0, [x29, #-8]
  4229a0:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4229a4:	add	x8, x8, #0xbf
  4229a8:	stur	x0, [x29, #-136]
  4229ac:	mov	x0, x8
  4229b0:	bl	4028b0 <gettext@plt>
  4229b4:	ldur	x8, [x29, #-40]
  4229b8:	ldr	x2, [x8]
  4229bc:	ldur	x8, [x29, #-40]
  4229c0:	ldr	x3, [x8, #8]
  4229c4:	ldur	x8, [x29, #-40]
  4229c8:	ldr	x4, [x8, #16]
  4229cc:	ldur	x8, [x29, #-136]
  4229d0:	str	x0, [sp, #144]
  4229d4:	mov	x0, x8
  4229d8:	ldr	x1, [sp, #144]
  4229dc:	bl	4028d0 <fprintf@plt>
  4229e0:	b	422cf8 <wcrtomb@plt+0x203e8>
  4229e4:	ldur	x0, [x29, #-8]
  4229e8:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4229ec:	add	x8, x8, #0xdb
  4229f0:	str	x0, [sp, #136]
  4229f4:	mov	x0, x8
  4229f8:	bl	4028b0 <gettext@plt>
  4229fc:	ldur	x8, [x29, #-40]
  422a00:	ldr	x2, [x8]
  422a04:	ldur	x8, [x29, #-40]
  422a08:	ldr	x3, [x8, #8]
  422a0c:	ldur	x8, [x29, #-40]
  422a10:	ldr	x4, [x8, #16]
  422a14:	ldur	x8, [x29, #-40]
  422a18:	ldr	x5, [x8, #24]
  422a1c:	ldr	x8, [sp, #136]
  422a20:	str	x0, [sp, #128]
  422a24:	mov	x0, x8
  422a28:	ldr	x1, [sp, #128]
  422a2c:	bl	4028d0 <fprintf@plt>
  422a30:	b	422cf8 <wcrtomb@plt+0x203e8>
  422a34:	ldur	x0, [x29, #-8]
  422a38:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422a3c:	add	x8, x8, #0xfb
  422a40:	str	x0, [sp, #120]
  422a44:	mov	x0, x8
  422a48:	bl	4028b0 <gettext@plt>
  422a4c:	ldur	x8, [x29, #-40]
  422a50:	ldr	x2, [x8]
  422a54:	ldur	x8, [x29, #-40]
  422a58:	ldr	x3, [x8, #8]
  422a5c:	ldur	x8, [x29, #-40]
  422a60:	ldr	x4, [x8, #16]
  422a64:	ldur	x8, [x29, #-40]
  422a68:	ldr	x5, [x8, #24]
  422a6c:	ldur	x8, [x29, #-40]
  422a70:	ldr	x6, [x8, #32]
  422a74:	ldr	x8, [sp, #120]
  422a78:	str	x0, [sp, #112]
  422a7c:	mov	x0, x8
  422a80:	ldr	x1, [sp, #112]
  422a84:	bl	4028d0 <fprintf@plt>
  422a88:	b	422cf8 <wcrtomb@plt+0x203e8>
  422a8c:	ldur	x0, [x29, #-8]
  422a90:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422a94:	add	x8, x8, #0x11f
  422a98:	str	x0, [sp, #104]
  422a9c:	mov	x0, x8
  422aa0:	bl	4028b0 <gettext@plt>
  422aa4:	ldur	x8, [x29, #-40]
  422aa8:	ldr	x2, [x8]
  422aac:	ldur	x8, [x29, #-40]
  422ab0:	ldr	x3, [x8, #8]
  422ab4:	ldur	x8, [x29, #-40]
  422ab8:	ldr	x4, [x8, #16]
  422abc:	ldur	x8, [x29, #-40]
  422ac0:	ldr	x5, [x8, #24]
  422ac4:	ldur	x8, [x29, #-40]
  422ac8:	ldr	x6, [x8, #32]
  422acc:	ldur	x8, [x29, #-40]
  422ad0:	ldr	x7, [x8, #40]
  422ad4:	ldr	x8, [sp, #104]
  422ad8:	str	x0, [sp, #96]
  422adc:	mov	x0, x8
  422ae0:	ldr	x1, [sp, #96]
  422ae4:	bl	4028d0 <fprintf@plt>
  422ae8:	b	422cf8 <wcrtomb@plt+0x203e8>
  422aec:	ldur	x0, [x29, #-8]
  422af0:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422af4:	add	x8, x8, #0x147
  422af8:	str	x0, [sp, #88]
  422afc:	mov	x0, x8
  422b00:	bl	4028b0 <gettext@plt>
  422b04:	ldur	x8, [x29, #-40]
  422b08:	ldr	x2, [x8]
  422b0c:	ldur	x8, [x29, #-40]
  422b10:	ldr	x3, [x8, #8]
  422b14:	ldur	x8, [x29, #-40]
  422b18:	ldr	x4, [x8, #16]
  422b1c:	ldur	x8, [x29, #-40]
  422b20:	ldr	x5, [x8, #24]
  422b24:	ldur	x8, [x29, #-40]
  422b28:	ldr	x6, [x8, #32]
  422b2c:	ldur	x8, [x29, #-40]
  422b30:	ldr	x7, [x8, #40]
  422b34:	ldur	x8, [x29, #-40]
  422b38:	ldr	x8, [x8, #48]
  422b3c:	ldr	x9, [sp, #88]
  422b40:	str	x0, [sp, #80]
  422b44:	mov	x0, x9
  422b48:	ldr	x1, [sp, #80]
  422b4c:	mov	x10, sp
  422b50:	str	x8, [x10]
  422b54:	bl	4028d0 <fprintf@plt>
  422b58:	b	422cf8 <wcrtomb@plt+0x203e8>
  422b5c:	ldur	x0, [x29, #-8]
  422b60:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422b64:	add	x8, x8, #0x173
  422b68:	str	x0, [sp, #72]
  422b6c:	mov	x0, x8
  422b70:	bl	4028b0 <gettext@plt>
  422b74:	ldur	x8, [x29, #-40]
  422b78:	ldr	x2, [x8]
  422b7c:	ldur	x8, [x29, #-40]
  422b80:	ldr	x3, [x8, #8]
  422b84:	ldur	x8, [x29, #-40]
  422b88:	ldr	x4, [x8, #16]
  422b8c:	ldur	x8, [x29, #-40]
  422b90:	ldr	x5, [x8, #24]
  422b94:	ldur	x8, [x29, #-40]
  422b98:	ldr	x6, [x8, #32]
  422b9c:	ldur	x8, [x29, #-40]
  422ba0:	ldr	x7, [x8, #40]
  422ba4:	ldur	x8, [x29, #-40]
  422ba8:	ldr	x8, [x8, #48]
  422bac:	ldur	x9, [x29, #-40]
  422bb0:	ldr	x9, [x9, #56]
  422bb4:	ldr	x10, [sp, #72]
  422bb8:	str	x0, [sp, #64]
  422bbc:	mov	x0, x10
  422bc0:	ldr	x1, [sp, #64]
  422bc4:	mov	x11, sp
  422bc8:	str	x8, [x11]
  422bcc:	mov	x8, sp
  422bd0:	str	x9, [x8, #8]
  422bd4:	bl	4028d0 <fprintf@plt>
  422bd8:	b	422cf8 <wcrtomb@plt+0x203e8>
  422bdc:	ldur	x0, [x29, #-8]
  422be0:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422be4:	add	x8, x8, #0x1a3
  422be8:	str	x0, [sp, #56]
  422bec:	mov	x0, x8
  422bf0:	bl	4028b0 <gettext@plt>
  422bf4:	ldur	x8, [x29, #-40]
  422bf8:	ldr	x2, [x8]
  422bfc:	ldur	x8, [x29, #-40]
  422c00:	ldr	x3, [x8, #8]
  422c04:	ldur	x8, [x29, #-40]
  422c08:	ldr	x4, [x8, #16]
  422c0c:	ldur	x8, [x29, #-40]
  422c10:	ldr	x5, [x8, #24]
  422c14:	ldur	x8, [x29, #-40]
  422c18:	ldr	x6, [x8, #32]
  422c1c:	ldur	x8, [x29, #-40]
  422c20:	ldr	x7, [x8, #40]
  422c24:	ldur	x8, [x29, #-40]
  422c28:	ldr	x8, [x8, #48]
  422c2c:	ldur	x9, [x29, #-40]
  422c30:	ldr	x9, [x9, #56]
  422c34:	ldur	x10, [x29, #-40]
  422c38:	ldr	x10, [x10, #64]
  422c3c:	ldr	x11, [sp, #56]
  422c40:	str	x0, [sp, #48]
  422c44:	mov	x0, x11
  422c48:	ldr	x1, [sp, #48]
  422c4c:	mov	x12, sp
  422c50:	str	x8, [x12]
  422c54:	mov	x8, sp
  422c58:	str	x9, [x8, #8]
  422c5c:	mov	x8, sp
  422c60:	str	x10, [x8, #16]
  422c64:	bl	4028d0 <fprintf@plt>
  422c68:	b	422cf8 <wcrtomb@plt+0x203e8>
  422c6c:	ldur	x0, [x29, #-8]
  422c70:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422c74:	add	x8, x8, #0x1d7
  422c78:	str	x0, [sp, #40]
  422c7c:	mov	x0, x8
  422c80:	bl	4028b0 <gettext@plt>
  422c84:	ldur	x8, [x29, #-40]
  422c88:	ldr	x2, [x8]
  422c8c:	ldur	x8, [x29, #-40]
  422c90:	ldr	x3, [x8, #8]
  422c94:	ldur	x8, [x29, #-40]
  422c98:	ldr	x4, [x8, #16]
  422c9c:	ldur	x8, [x29, #-40]
  422ca0:	ldr	x5, [x8, #24]
  422ca4:	ldur	x8, [x29, #-40]
  422ca8:	ldr	x6, [x8, #32]
  422cac:	ldur	x8, [x29, #-40]
  422cb0:	ldr	x7, [x8, #40]
  422cb4:	ldur	x8, [x29, #-40]
  422cb8:	ldr	x8, [x8, #48]
  422cbc:	ldur	x9, [x29, #-40]
  422cc0:	ldr	x9, [x9, #56]
  422cc4:	ldur	x10, [x29, #-40]
  422cc8:	ldr	x10, [x10, #64]
  422ccc:	ldr	x11, [sp, #40]
  422cd0:	str	x0, [sp, #32]
  422cd4:	mov	x0, x11
  422cd8:	ldr	x1, [sp, #32]
  422cdc:	mov	x12, sp
  422ce0:	str	x8, [x12]
  422ce4:	mov	x8, sp
  422ce8:	str	x9, [x8, #8]
  422cec:	mov	x8, sp
  422cf0:	str	x10, [x8, #16]
  422cf4:	bl	4028d0 <fprintf@plt>
  422cf8:	ldr	x28, [sp, #304]
  422cfc:	ldp	x29, x30, [sp, #288]
  422d00:	add	sp, sp, #0x140
  422d04:	ret
  422d08:	sub	sp, sp, #0x40
  422d0c:	stp	x29, x30, [sp, #48]
  422d10:	add	x29, sp, #0x30
  422d14:	stur	x0, [x29, #-8]
  422d18:	stur	x1, [x29, #-16]
  422d1c:	str	x2, [sp, #24]
  422d20:	str	x3, [sp, #16]
  422d24:	str	x4, [sp, #8]
  422d28:	str	xzr, [sp]
  422d2c:	ldr	x8, [sp, #8]
  422d30:	ldr	x9, [sp]
  422d34:	mov	x10, #0x8                   	// #8
  422d38:	mul	x9, x10, x9
  422d3c:	add	x8, x8, x9
  422d40:	ldr	x8, [x8]
  422d44:	cbz	x8, 422d58 <wcrtomb@plt+0x20448>
  422d48:	ldr	x8, [sp]
  422d4c:	add	x8, x8, #0x1
  422d50:	str	x8, [sp]
  422d54:	b	422d2c <wcrtomb@plt+0x2041c>
  422d58:	ldur	x0, [x29, #-8]
  422d5c:	ldur	x1, [x29, #-16]
  422d60:	ldr	x2, [sp, #24]
  422d64:	ldr	x3, [sp, #16]
  422d68:	ldr	x4, [sp, #8]
  422d6c:	ldr	x5, [sp]
  422d70:	bl	4227f8 <wcrtomb@plt+0x1fee8>
  422d74:	ldp	x29, x30, [sp, #48]
  422d78:	add	sp, sp, #0x40
  422d7c:	ret
  422d80:	sub	sp, sp, #0xb0
  422d84:	stp	x29, x30, [sp, #160]
  422d88:	add	x29, sp, #0xa0
  422d8c:	stur	x0, [x29, #-8]
  422d90:	stur	x1, [x29, #-16]
  422d94:	stur	x2, [x29, #-24]
  422d98:	stur	x3, [x29, #-32]
  422d9c:	stur	xzr, [x29, #-40]
  422da0:	str	x4, [sp, #32]
  422da4:	ldur	x8, [x29, #-40]
  422da8:	mov	w9, #0x0                   	// #0
  422dac:	cmp	x8, #0xa
  422db0:	str	w9, [sp, #28]
  422db4:	b.cs	422e48 <wcrtomb@plt+0x20538>  // b.hs, b.nlast
  422db8:	ldr	x8, [sp, #32]
  422dbc:	ldrsw	x9, [x8, #24]
  422dc0:	mov	w10, w9
  422dc4:	cmp	w10, #0x0
  422dc8:	cset	w10, ge  // ge = tcont
  422dcc:	str	x9, [sp, #16]
  422dd0:	tbnz	w10, #0, 422e08 <wcrtomb@plt+0x204f8>
  422dd4:	ldr	x8, [sp, #16]
  422dd8:	add	w8, w8, #0x8
  422ddc:	ldr	x9, [sp, #32]
  422de0:	str	w8, [x9, #24]
  422de4:	cmp	w8, #0x0
  422de8:	cset	w8, gt
  422dec:	tbnz	w8, #0, 422e08 <wcrtomb@plt+0x204f8>
  422df0:	ldr	x8, [sp, #32]
  422df4:	ldr	x9, [x8, #8]
  422df8:	ldr	x10, [sp, #16]
  422dfc:	add	x9, x9, x10
  422e00:	str	x9, [sp, #8]
  422e04:	b	422e1c <wcrtomb@plt+0x2050c>
  422e08:	ldr	x8, [sp, #32]
  422e0c:	ldr	x9, [x8]
  422e10:	add	x10, x9, #0x8
  422e14:	str	x10, [x8]
  422e18:	str	x9, [sp, #8]
  422e1c:	ldr	x8, [sp, #8]
  422e20:	ldr	x8, [x8]
  422e24:	ldur	x9, [x29, #-40]
  422e28:	mov	x10, #0x8                   	// #8
  422e2c:	mul	x9, x10, x9
  422e30:	add	x10, sp, #0x28
  422e34:	add	x9, x10, x9
  422e38:	str	x8, [x9]
  422e3c:	cmp	x8, #0x0
  422e40:	cset	w11, ne  // ne = any
  422e44:	str	w11, [sp, #28]
  422e48:	ldr	w8, [sp, #28]
  422e4c:	tbnz	w8, #0, 422e54 <wcrtomb@plt+0x20544>
  422e50:	b	422e64 <wcrtomb@plt+0x20554>
  422e54:	ldur	x8, [x29, #-40]
  422e58:	add	x8, x8, #0x1
  422e5c:	stur	x8, [x29, #-40]
  422e60:	b	422da4 <wcrtomb@plt+0x20494>
  422e64:	ldur	x0, [x29, #-8]
  422e68:	ldur	x1, [x29, #-16]
  422e6c:	ldur	x2, [x29, #-24]
  422e70:	ldur	x3, [x29, #-32]
  422e74:	ldur	x5, [x29, #-40]
  422e78:	add	x4, sp, #0x28
  422e7c:	bl	4227f8 <wcrtomb@plt+0x1fee8>
  422e80:	ldp	x29, x30, [sp, #160]
  422e84:	add	sp, sp, #0xb0
  422e88:	ret
  422e8c:	sub	sp, sp, #0x120
  422e90:	stp	x29, x30, [sp, #256]
  422e94:	str	x28, [sp, #272]
  422e98:	add	x29, sp, #0x100
  422e9c:	str	q7, [sp, #112]
  422ea0:	str	q6, [sp, #96]
  422ea4:	str	q5, [sp, #80]
  422ea8:	str	q4, [sp, #64]
  422eac:	str	q3, [sp, #48]
  422eb0:	str	q2, [sp, #32]
  422eb4:	str	q1, [sp, #16]
  422eb8:	str	q0, [sp]
  422ebc:	str	x7, [sp, #152]
  422ec0:	str	x6, [sp, #144]
  422ec4:	str	x5, [sp, #136]
  422ec8:	str	x4, [sp, #128]
  422ecc:	stur	x0, [x29, #-8]
  422ed0:	stur	x1, [x29, #-16]
  422ed4:	stur	x2, [x29, #-24]
  422ed8:	stur	x3, [x29, #-32]
  422edc:	mov	w8, #0xffffff80            	// #-128
  422ee0:	stur	w8, [x29, #-36]
  422ee4:	mov	w8, #0xffffffe0            	// #-32
  422ee8:	stur	w8, [x29, #-40]
  422eec:	mov	x9, sp
  422ef0:	add	x9, x9, #0x80
  422ef4:	stur	x9, [x29, #-48]
  422ef8:	add	x9, sp, #0x80
  422efc:	add	x9, x9, #0x20
  422f00:	stur	x9, [x29, #-56]
  422f04:	add	x9, x29, #0x20
  422f08:	stur	x9, [x29, #-64]
  422f0c:	ldur	x0, [x29, #-8]
  422f10:	ldur	x1, [x29, #-16]
  422f14:	ldur	x2, [x29, #-24]
  422f18:	ldur	x3, [x29, #-32]
  422f1c:	ldur	q0, [x29, #-64]
  422f20:	ldur	q1, [x29, #-48]
  422f24:	stur	q1, [x29, #-80]
  422f28:	stur	q0, [x29, #-96]
  422f2c:	sub	x4, x29, #0x60
  422f30:	bl	422d80 <wcrtomb@plt+0x20470>
  422f34:	ldr	x28, [sp, #272]
  422f38:	ldp	x29, x30, [sp, #256]
  422f3c:	add	sp, sp, #0x120
  422f40:	ret
  422f44:	sub	sp, sp, #0x50
  422f48:	stp	x29, x30, [sp, #64]
  422f4c:	add	x29, sp, #0x40
  422f50:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  422f54:	add	x8, x8, #0x458
  422f58:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  422f5c:	add	x0, x0, #0xad4
  422f60:	adrp	x9, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422f64:	add	x9, x9, #0x213
  422f68:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422f6c:	add	x1, x1, #0x227
  422f70:	adrp	x10, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422f74:	add	x10, x10, #0x238
  422f78:	adrp	x11, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  422f7c:	add	x11, x11, #0xcde
  422f80:	adrp	x2, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422f84:	add	x2, x2, #0x24c
  422f88:	adrp	x12, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422f8c:	add	x12, x12, #0x26f
  422f90:	adrp	x13, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  422f94:	add	x13, x13, #0x296
  422f98:	ldr	x8, [x8]
  422f9c:	stur	x1, [x29, #-8]
  422fa0:	mov	x1, x8
  422fa4:	stur	x9, [x29, #-16]
  422fa8:	stur	x10, [x29, #-24]
  422fac:	str	x11, [sp, #32]
  422fb0:	str	x2, [sp, #24]
  422fb4:	str	x12, [sp, #16]
  422fb8:	str	x13, [sp, #8]
  422fbc:	bl	4027e0 <fputs_unlocked@plt>
  422fc0:	ldur	x8, [x29, #-16]
  422fc4:	mov	x0, x8
  422fc8:	bl	4028b0 <gettext@plt>
  422fcc:	ldur	x1, [x29, #-8]
  422fd0:	bl	402850 <printf@plt>
  422fd4:	ldur	x8, [x29, #-24]
  422fd8:	mov	x0, x8
  422fdc:	bl	4028b0 <gettext@plt>
  422fe0:	ldr	x1, [sp, #32]
  422fe4:	ldr	x2, [sp, #24]
  422fe8:	bl	402850 <printf@plt>
  422fec:	ldr	x8, [sp, #16]
  422ff0:	mov	x0, x8
  422ff4:	bl	4028b0 <gettext@plt>
  422ff8:	ldr	x1, [sp, #8]
  422ffc:	bl	402850 <printf@plt>
  423000:	ldp	x29, x30, [sp, #64]
  423004:	add	sp, sp, #0x50
  423008:	ret
  42300c:	sub	sp, sp, #0x20
  423010:	stp	x29, x30, [sp, #16]
  423014:	add	x29, sp, #0x10
  423018:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  42301c:	str	x0, [sp, #8]
  423020:	str	x1, [sp]
  423024:	ldr	x9, [sp]
  423028:	udiv	x8, x8, x9
  42302c:	ldr	x9, [sp, #8]
  423030:	cmp	x8, x9
  423034:	b.cs	42303c <wcrtomb@plt+0x2072c>  // b.hs, b.nlast
  423038:	bl	423394 <wcrtomb@plt+0x20a84>
  42303c:	ldr	x8, [sp, #8]
  423040:	ldr	x9, [sp]
  423044:	mul	x0, x8, x9
  423048:	bl	423058 <wcrtomb@plt+0x20748>
  42304c:	ldp	x29, x30, [sp, #16]
  423050:	add	sp, sp, #0x20
  423054:	ret
  423058:	sub	sp, sp, #0x20
  42305c:	stp	x29, x30, [sp, #16]
  423060:	add	x29, sp, #0x10
  423064:	str	x0, [sp, #8]
  423068:	ldr	x0, [sp, #8]
  42306c:	bl	402450 <malloc@plt>
  423070:	str	x0, [sp]
  423074:	ldr	x8, [sp]
  423078:	cbnz	x8, 423088 <wcrtomb@plt+0x20778>
  42307c:	ldr	x8, [sp, #8]
  423080:	cbz	x8, 423088 <wcrtomb@plt+0x20778>
  423084:	bl	423394 <wcrtomb@plt+0x20a84>
  423088:	ldr	x0, [sp]
  42308c:	ldp	x29, x30, [sp, #16]
  423090:	add	sp, sp, #0x20
  423094:	ret
  423098:	sub	sp, sp, #0x30
  42309c:	stp	x29, x30, [sp, #32]
  4230a0:	add	x29, sp, #0x20
  4230a4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4230a8:	stur	x0, [x29, #-8]
  4230ac:	str	x1, [sp, #16]
  4230b0:	str	x2, [sp, #8]
  4230b4:	ldr	x9, [sp, #8]
  4230b8:	udiv	x8, x8, x9
  4230bc:	ldr	x9, [sp, #16]
  4230c0:	cmp	x8, x9
  4230c4:	b.cs	4230cc <wcrtomb@plt+0x207bc>  // b.hs, b.nlast
  4230c8:	bl	423394 <wcrtomb@plt+0x20a84>
  4230cc:	ldur	x0, [x29, #-8]
  4230d0:	ldr	x8, [sp, #16]
  4230d4:	ldr	x9, [sp, #8]
  4230d8:	mul	x1, x8, x9
  4230dc:	bl	4230ec <wcrtomb@plt+0x207dc>
  4230e0:	ldp	x29, x30, [sp, #32]
  4230e4:	add	sp, sp, #0x30
  4230e8:	ret
  4230ec:	sub	sp, sp, #0x30
  4230f0:	stp	x29, x30, [sp, #32]
  4230f4:	add	x29, sp, #0x20
  4230f8:	str	x0, [sp, #16]
  4230fc:	str	x1, [sp, #8]
  423100:	ldr	x8, [sp, #8]
  423104:	cbnz	x8, 423124 <wcrtomb@plt+0x20814>
  423108:	ldr	x8, [sp, #16]
  42310c:	cbz	x8, 423124 <wcrtomb@plt+0x20814>
  423110:	ldr	x0, [sp, #16]
  423114:	bl	4026c0 <free@plt>
  423118:	mov	x8, xzr
  42311c:	stur	x8, [x29, #-8]
  423120:	b	423150 <wcrtomb@plt+0x20840>
  423124:	ldr	x0, [sp, #16]
  423128:	ldr	x1, [sp, #8]
  42312c:	bl	402570 <realloc@plt>
  423130:	str	x0, [sp, #16]
  423134:	ldr	x8, [sp, #16]
  423138:	cbnz	x8, 423148 <wcrtomb@plt+0x20838>
  42313c:	ldr	x8, [sp, #8]
  423140:	cbz	x8, 423148 <wcrtomb@plt+0x20838>
  423144:	bl	423394 <wcrtomb@plt+0x20a84>
  423148:	ldr	x8, [sp, #16]
  42314c:	stur	x8, [x29, #-8]
  423150:	ldur	x0, [x29, #-8]
  423154:	ldp	x29, x30, [sp, #32]
  423158:	add	sp, sp, #0x30
  42315c:	ret
  423160:	sub	sp, sp, #0x30
  423164:	stp	x29, x30, [sp, #32]
  423168:	add	x29, sp, #0x20
  42316c:	stur	x0, [x29, #-8]
  423170:	str	x1, [sp, #16]
  423174:	str	x2, [sp, #8]
  423178:	ldr	x8, [sp, #16]
  42317c:	ldr	x8, [x8]
  423180:	str	x8, [sp]
  423184:	ldur	x8, [x29, #-8]
  423188:	cbnz	x8, 4231e4 <wcrtomb@plt+0x208d4>
  42318c:	ldr	x8, [sp]
  423190:	cbnz	x8, 4231c4 <wcrtomb@plt+0x208b4>
  423194:	ldr	x8, [sp, #8]
  423198:	mov	x9, #0x80                  	// #128
  42319c:	udiv	x8, x9, x8
  4231a0:	str	x8, [sp]
  4231a4:	ldr	x8, [sp]
  4231a8:	cmp	x8, #0x0
  4231ac:	cset	w10, ne  // ne = any
  4231b0:	eor	w10, w10, #0x1
  4231b4:	and	w10, w10, #0x1
  4231b8:	ldr	x8, [sp]
  4231bc:	add	x8, x8, w10, sxtw
  4231c0:	str	x8, [sp]
  4231c4:	ldr	x8, [sp, #8]
  4231c8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4231cc:	udiv	x8, x9, x8
  4231d0:	ldr	x9, [sp]
  4231d4:	cmp	x8, x9
  4231d8:	b.cs	4231e0 <wcrtomb@plt+0x208d0>  // b.hs, b.nlast
  4231dc:	bl	423394 <wcrtomb@plt+0x20a84>
  4231e0:	b	423220 <wcrtomb@plt+0x20910>
  4231e4:	ldr	x8, [sp, #8]
  4231e8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4231ec:	movk	x9, #0x5554
  4231f0:	udiv	x8, x9, x8
  4231f4:	ldr	x9, [sp]
  4231f8:	cmp	x8, x9
  4231fc:	b.hi	423204 <wcrtomb@plt+0x208f4>  // b.pmore
  423200:	bl	423394 <wcrtomb@plt+0x20a84>
  423204:	ldr	x8, [sp]
  423208:	mov	x9, #0x2                   	// #2
  42320c:	udiv	x8, x8, x9
  423210:	add	x8, x8, #0x1
  423214:	ldr	x9, [sp]
  423218:	add	x8, x9, x8
  42321c:	str	x8, [sp]
  423220:	ldr	x8, [sp]
  423224:	ldr	x9, [sp, #16]
  423228:	str	x8, [x9]
  42322c:	ldur	x0, [x29, #-8]
  423230:	ldr	x8, [sp]
  423234:	ldr	x9, [sp, #8]
  423238:	mul	x1, x8, x9
  42323c:	bl	4230ec <wcrtomb@plt+0x207dc>
  423240:	ldp	x29, x30, [sp, #32]
  423244:	add	sp, sp, #0x30
  423248:	ret
  42324c:	sub	sp, sp, #0x20
  423250:	stp	x29, x30, [sp, #16]
  423254:	add	x29, sp, #0x10
  423258:	str	x0, [sp, #8]
  42325c:	ldr	x0, [sp, #8]
  423260:	bl	423058 <wcrtomb@plt+0x20748>
  423264:	ldp	x29, x30, [sp, #16]
  423268:	add	sp, sp, #0x20
  42326c:	ret
  423270:	sub	sp, sp, #0x20
  423274:	stp	x29, x30, [sp, #16]
  423278:	add	x29, sp, #0x10
  42327c:	mov	x2, #0x1                   	// #1
  423280:	str	x0, [sp, #8]
  423284:	str	x1, [sp]
  423288:	ldr	x0, [sp, #8]
  42328c:	ldr	x1, [sp]
  423290:	bl	423160 <wcrtomb@plt+0x20850>
  423294:	ldp	x29, x30, [sp, #16]
  423298:	add	sp, sp, #0x20
  42329c:	ret
  4232a0:	sub	sp, sp, #0x20
  4232a4:	stp	x29, x30, [sp, #16]
  4232a8:	add	x29, sp, #0x10
  4232ac:	mov	x1, #0x1                   	// #1
  4232b0:	str	x0, [sp, #8]
  4232b4:	ldr	x0, [sp, #8]
  4232b8:	bl	4232c8 <wcrtomb@plt+0x209b8>
  4232bc:	ldp	x29, x30, [sp, #16]
  4232c0:	add	sp, sp, #0x20
  4232c4:	ret
  4232c8:	sub	sp, sp, #0x30
  4232cc:	stp	x29, x30, [sp, #32]
  4232d0:	add	x29, sp, #0x20
  4232d4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4232d8:	stur	x0, [x29, #-8]
  4232dc:	str	x1, [sp, #16]
  4232e0:	ldr	x9, [sp, #16]
  4232e4:	udiv	x8, x8, x9
  4232e8:	ldur	x9, [x29, #-8]
  4232ec:	cmp	x8, x9
  4232f0:	b.cc	423308 <wcrtomb@plt+0x209f8>  // b.lo, b.ul, b.last
  4232f4:	ldur	x0, [x29, #-8]
  4232f8:	ldr	x1, [sp, #16]
  4232fc:	bl	402540 <calloc@plt>
  423300:	str	x0, [sp, #8]
  423304:	cbnz	x0, 42330c <wcrtomb@plt+0x209fc>
  423308:	bl	423394 <wcrtomb@plt+0x20a84>
  42330c:	ldr	x0, [sp, #8]
  423310:	ldp	x29, x30, [sp, #32]
  423314:	add	sp, sp, #0x30
  423318:	ret
  42331c:	sub	sp, sp, #0x30
  423320:	stp	x29, x30, [sp, #32]
  423324:	add	x29, sp, #0x20
  423328:	stur	x0, [x29, #-8]
  42332c:	str	x1, [sp, #16]
  423330:	ldr	x0, [sp, #16]
  423334:	bl	423058 <wcrtomb@plt+0x20748>
  423338:	ldur	x1, [x29, #-8]
  42333c:	ldr	x2, [sp, #16]
  423340:	str	x0, [sp, #8]
  423344:	bl	402290 <memcpy@plt>
  423348:	ldr	x0, [sp, #8]
  42334c:	ldp	x29, x30, [sp, #32]
  423350:	add	sp, sp, #0x30
  423354:	ret
  423358:	sub	sp, sp, #0x20
  42335c:	stp	x29, x30, [sp, #16]
  423360:	add	x29, sp, #0x10
  423364:	str	x0, [sp, #8]
  423368:	ldr	x0, [sp, #8]
  42336c:	ldr	x8, [sp, #8]
  423370:	str	x0, [sp]
  423374:	mov	x0, x8
  423378:	bl	4022f0 <strlen@plt>
  42337c:	add	x1, x0, #0x1
  423380:	ldr	x0, [sp]
  423384:	bl	42331c <wcrtomb@plt+0x20a0c>
  423388:	ldp	x29, x30, [sp, #16]
  42338c:	add	sp, sp, #0x20
  423390:	ret
  423394:	sub	sp, sp, #0x30
  423398:	stp	x29, x30, [sp, #32]
  42339c:	add	x29, sp, #0x20
  4233a0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4233a4:	add	x8, x8, #0x3d0
  4233a8:	adrp	x0, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4233ac:	add	x0, x0, #0x2e2
  4233b0:	mov	w9, wzr
  4233b4:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4233b8:	add	x2, x2, #0x122
  4233bc:	ldr	w10, [x8]
  4233c0:	stur	w9, [x29, #-4]
  4233c4:	str	x2, [sp, #16]
  4233c8:	str	w10, [sp, #12]
  4233cc:	bl	4028b0 <gettext@plt>
  4233d0:	ldr	w9, [sp, #12]
  4233d4:	str	x0, [sp]
  4233d8:	mov	w0, w9
  4233dc:	ldur	w1, [x29, #-4]
  4233e0:	ldr	x2, [sp, #16]
  4233e4:	ldr	x3, [sp]
  4233e8:	bl	402330 <error@plt>
  4233ec:	bl	402610 <abort@plt>
  4233f0:	ret
  4233f4:	sub	sp, sp, #0x20
  4233f8:	stp	x29, x30, [sp, #16]
  4233fc:	add	x29, sp, #0x10
  423400:	stur	w0, [x29, #-4]
  423404:	str	w1, [sp, #8]
  423408:	ldur	w0, [x29, #-4]
  42340c:	ldr	w1, [sp, #8]
  423410:	bl	43f7b0 <_obstack_memory_used@@Base+0x17e90>
  423414:	cmp	w0, #0x0
  423418:	cset	w8, ge  // ge = tcont
  42341c:	tbnz	w8, #0, 423424 <wcrtomb@plt+0x20b14>
  423420:	bl	4233f0 <wcrtomb@plt+0x20ae0>
  423424:	ldp	x29, x30, [sp, #16]
  423428:	add	sp, sp, #0x20
  42342c:	ret
  423430:	sub	sp, sp, #0x80
  423434:	stp	x29, x30, [sp, #112]
  423438:	add	x29, sp, #0x70
  42343c:	mov	w8, wzr
  423440:	stur	x0, [x29, #-16]
  423444:	stur	x1, [x29, #-24]
  423448:	stur	w2, [x29, #-28]
  42344c:	stur	x3, [x29, #-40]
  423450:	stur	x4, [x29, #-48]
  423454:	str	wzr, [sp, #36]
  423458:	ldur	w9, [x29, #-28]
  42345c:	cmp	w8, w9
  423460:	cset	w8, gt
  423464:	tbnz	w8, #0, 423478 <wcrtomb@plt+0x20b68>
  423468:	ldur	w8, [x29, #-28]
  42346c:	cmp	w8, #0x24
  423470:	b.gt	423478 <wcrtomb@plt+0x20b68>
  423474:	b	423498 <wcrtomb@plt+0x20b88>
  423478:	adrp	x0, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42347c:	add	x0, x0, #0x3cc
  423480:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  423484:	add	x1, x1, #0x3f2
  423488:	mov	w2, #0x54                  	// #84
  42348c:	adrp	x3, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  423490:	add	x3, x3, #0x3fe
  423494:	bl	402860 <__assert_fail@plt>
  423498:	ldur	x8, [x29, #-24]
  42349c:	cbz	x8, 4234ac <wcrtomb@plt+0x20b9c>
  4234a0:	ldur	x8, [x29, #-24]
  4234a4:	str	x8, [sp, #16]
  4234a8:	b	4234b4 <wcrtomb@plt+0x20ba4>
  4234ac:	add	x8, sp, #0x38
  4234b0:	str	x8, [sp, #16]
  4234b4:	ldr	x8, [sp, #16]
  4234b8:	str	x8, [sp, #48]
  4234bc:	bl	402870 <__errno_location@plt>
  4234c0:	str	wzr, [x0]
  4234c4:	ldur	x0, [x29, #-16]
  4234c8:	ldr	x1, [sp, #48]
  4234cc:	ldur	w2, [x29, #-28]
  4234d0:	bl	402350 <strtoimax@plt>
  4234d4:	str	x0, [sp, #40]
  4234d8:	ldr	x8, [sp, #48]
  4234dc:	ldr	x8, [x8]
  4234e0:	ldur	x9, [x29, #-16]
  4234e4:	cmp	x8, x9
  4234e8:	b.ne	423538 <wcrtomb@plt+0x20c28>  // b.any
  4234ec:	ldur	x8, [x29, #-48]
  4234f0:	cbz	x8, 423528 <wcrtomb@plt+0x20c18>
  4234f4:	ldr	x8, [sp, #48]
  4234f8:	ldr	x8, [x8]
  4234fc:	ldrb	w9, [x8]
  423500:	cbz	w9, 423528 <wcrtomb@plt+0x20c18>
  423504:	ldur	x0, [x29, #-48]
  423508:	ldr	x8, [sp, #48]
  42350c:	ldr	x8, [x8]
  423510:	ldrb	w1, [x8]
  423514:	bl	4026e0 <strchr@plt>
  423518:	cbz	x0, 423528 <wcrtomb@plt+0x20c18>
  42351c:	mov	x8, #0x1                   	// #1
  423520:	str	x8, [sp, #40]
  423524:	b	423534 <wcrtomb@plt+0x20c24>
  423528:	mov	w8, #0x4                   	// #4
  42352c:	stur	w8, [x29, #-4]
  423530:	b	4238e0 <wcrtomb@plt+0x20fd0>
  423534:	b	423568 <wcrtomb@plt+0x20c58>
  423538:	bl	402870 <__errno_location@plt>
  42353c:	ldr	w8, [x0]
  423540:	cbz	w8, 423568 <wcrtomb@plt+0x20c58>
  423544:	bl	402870 <__errno_location@plt>
  423548:	ldr	w8, [x0]
  42354c:	cmp	w8, #0x22
  423550:	b.eq	423560 <wcrtomb@plt+0x20c50>  // b.none
  423554:	mov	w8, #0x4                   	// #4
  423558:	stur	w8, [x29, #-4]
  42355c:	b	4238e0 <wcrtomb@plt+0x20fd0>
  423560:	mov	w8, #0x1                   	// #1
  423564:	str	w8, [sp, #36]
  423568:	ldur	x8, [x29, #-48]
  42356c:	cbnz	x8, 423588 <wcrtomb@plt+0x20c78>
  423570:	ldr	x8, [sp, #40]
  423574:	ldur	x9, [x29, #-40]
  423578:	str	x8, [x9]
  42357c:	ldr	w10, [sp, #36]
  423580:	stur	w10, [x29, #-4]
  423584:	b	4238e0 <wcrtomb@plt+0x20fd0>
  423588:	ldr	x8, [sp, #48]
  42358c:	ldr	x8, [x8]
  423590:	ldrb	w9, [x8]
  423594:	cbz	w9, 4238cc <wcrtomb@plt+0x20fbc>
  423598:	mov	w8, #0x400                 	// #1024
  42359c:	str	w8, [sp, #32]
  4235a0:	mov	w8, #0x1                   	// #1
  4235a4:	str	w8, [sp, #28]
  4235a8:	ldur	x0, [x29, #-48]
  4235ac:	ldr	x9, [sp, #48]
  4235b0:	ldr	x9, [x9]
  4235b4:	ldrb	w1, [x9]
  4235b8:	bl	4026e0 <strchr@plt>
  4235bc:	cbnz	x0, 4235dc <wcrtomb@plt+0x20ccc>
  4235c0:	ldr	x8, [sp, #40]
  4235c4:	ldur	x9, [x29, #-40]
  4235c8:	str	x8, [x9]
  4235cc:	ldr	w10, [sp, #36]
  4235d0:	orr	w10, w10, #0x2
  4235d4:	stur	w10, [x29, #-4]
  4235d8:	b	4238e0 <wcrtomb@plt+0x20fd0>
  4235dc:	ldr	x8, [sp, #48]
  4235e0:	ldr	x8, [x8]
  4235e4:	ldrb	w9, [x8]
  4235e8:	cmp	w9, #0x45
  4235ec:	str	w9, [sp, #12]
  4235f0:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  4235f4:	b	4235f8 <wcrtomb@plt+0x20ce8>
  4235f8:	ldr	w8, [sp, #12]
  4235fc:	cmp	w8, #0x47
  423600:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423604:	b	423608 <wcrtomb@plt+0x20cf8>
  423608:	ldr	w8, [sp, #12]
  42360c:	cmp	w8, #0x4b
  423610:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423614:	b	423618 <wcrtomb@plt+0x20d08>
  423618:	ldr	w8, [sp, #12]
  42361c:	cmp	w8, #0x4d
  423620:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423624:	b	423628 <wcrtomb@plt+0x20d18>
  423628:	ldr	w8, [sp, #12]
  42362c:	cmp	w8, #0x50
  423630:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423634:	b	423638 <wcrtomb@plt+0x20d28>
  423638:	ldr	w8, [sp, #12]
  42363c:	cmp	w8, #0x54
  423640:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423644:	b	423648 <wcrtomb@plt+0x20d38>
  423648:	ldr	w8, [sp, #12]
  42364c:	subs	w9, w8, #0x59
  423650:	cmp	w9, #0x1
  423654:	b.ls	4236a4 <wcrtomb@plt+0x20d94>  // b.plast
  423658:	b	42365c <wcrtomb@plt+0x20d4c>
  42365c:	ldr	w8, [sp, #12]
  423660:	cmp	w8, #0x67
  423664:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423668:	b	42366c <wcrtomb@plt+0x20d5c>
  42366c:	ldr	w8, [sp, #12]
  423670:	cmp	w8, #0x6b
  423674:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423678:	b	42367c <wcrtomb@plt+0x20d6c>
  42367c:	ldr	w8, [sp, #12]
  423680:	cmp	w8, #0x6d
  423684:	b.eq	4236a4 <wcrtomb@plt+0x20d94>  // b.none
  423688:	b	42368c <wcrtomb@plt+0x20d7c>
  42368c:	ldr	w8, [sp, #12]
  423690:	cmp	w8, #0x74
  423694:	cset	w9, eq  // eq = none
  423698:	eor	w9, w9, #0x1
  42369c:	tbnz	w9, #0, 423730 <wcrtomb@plt+0x20e20>
  4236a0:	b	4236a4 <wcrtomb@plt+0x20d94>
  4236a4:	ldur	x0, [x29, #-48]
  4236a8:	mov	w1, #0x30                  	// #48
  4236ac:	bl	4026e0 <strchr@plt>
  4236b0:	cbz	x0, 423730 <wcrtomb@plt+0x20e20>
  4236b4:	ldr	x8, [sp, #48]
  4236b8:	ldr	x8, [x8]
  4236bc:	ldrb	w9, [x8, #1]
  4236c0:	cmp	w9, #0x42
  4236c4:	str	w9, [sp, #8]
  4236c8:	b.eq	42371c <wcrtomb@plt+0x20e0c>  // b.none
  4236cc:	b	4236d0 <wcrtomb@plt+0x20dc0>
  4236d0:	ldr	w8, [sp, #8]
  4236d4:	cmp	w8, #0x44
  4236d8:	b.eq	42371c <wcrtomb@plt+0x20e0c>  // b.none
  4236dc:	b	4236e0 <wcrtomb@plt+0x20dd0>
  4236e0:	ldr	w8, [sp, #8]
  4236e4:	cmp	w8, #0x69
  4236e8:	cset	w9, eq  // eq = none
  4236ec:	eor	w9, w9, #0x1
  4236f0:	tbnz	w9, #0, 423730 <wcrtomb@plt+0x20e20>
  4236f4:	b	4236f8 <wcrtomb@plt+0x20de8>
  4236f8:	ldr	x8, [sp, #48]
  4236fc:	ldr	x8, [x8]
  423700:	ldrb	w9, [x8, #2]
  423704:	cmp	w9, #0x42
  423708:	b.ne	423718 <wcrtomb@plt+0x20e08>  // b.any
  42370c:	ldr	w8, [sp, #28]
  423710:	add	w8, w8, #0x2
  423714:	str	w8, [sp, #28]
  423718:	b	423730 <wcrtomb@plt+0x20e20>
  42371c:	mov	w8, #0x3e8                 	// #1000
  423720:	str	w8, [sp, #32]
  423724:	ldr	w8, [sp, #28]
  423728:	add	w8, w8, #0x1
  42372c:	str	w8, [sp, #28]
  423730:	ldr	x8, [sp, #48]
  423734:	ldr	x8, [x8]
  423738:	ldrb	w9, [x8]
  42373c:	subs	w9, w9, #0x42
  423740:	mov	w8, w9
  423744:	ubfx	x8, x8, #0, #32
  423748:	cmp	x8, #0x35
  42374c:	str	x8, [sp]
  423750:	b.hi	423870 <wcrtomb@plt+0x20f60>  // b.pmore
  423754:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  423758:	add	x8, x8, #0x2f4
  42375c:	ldr	x11, [sp]
  423760:	ldrsw	x10, [x8, x11, lsl #2]
  423764:	add	x9, x8, x10
  423768:	br	x9
  42376c:	add	x0, sp, #0x28
  423770:	mov	w1, #0x200                 	// #512
  423774:	bl	4238f0 <wcrtomb@plt+0x20fe0>
  423778:	str	w0, [sp, #24]
  42377c:	b	42388c <wcrtomb@plt+0x20f7c>
  423780:	add	x0, sp, #0x28
  423784:	mov	w1, #0x400                 	// #1024
  423788:	bl	4238f0 <wcrtomb@plt+0x20fe0>
  42378c:	str	w0, [sp, #24]
  423790:	b	42388c <wcrtomb@plt+0x20f7c>
  423794:	str	wzr, [sp, #24]
  423798:	b	42388c <wcrtomb@plt+0x20f7c>
  42379c:	ldr	w1, [sp, #32]
  4237a0:	add	x0, sp, #0x28
  4237a4:	mov	w2, #0x6                   	// #6
  4237a8:	bl	423988 <wcrtomb@plt+0x21078>
  4237ac:	str	w0, [sp, #24]
  4237b0:	b	42388c <wcrtomb@plt+0x20f7c>
  4237b4:	ldr	w1, [sp, #32]
  4237b8:	add	x0, sp, #0x28
  4237bc:	mov	w2, #0x3                   	// #3
  4237c0:	bl	423988 <wcrtomb@plt+0x21078>
  4237c4:	str	w0, [sp, #24]
  4237c8:	b	42388c <wcrtomb@plt+0x20f7c>
  4237cc:	ldr	w1, [sp, #32]
  4237d0:	add	x0, sp, #0x28
  4237d4:	mov	w2, #0x1                   	// #1
  4237d8:	bl	423988 <wcrtomb@plt+0x21078>
  4237dc:	str	w0, [sp, #24]
  4237e0:	b	42388c <wcrtomb@plt+0x20f7c>
  4237e4:	ldr	w1, [sp, #32]
  4237e8:	add	x0, sp, #0x28
  4237ec:	mov	w2, #0x2                   	// #2
  4237f0:	bl	423988 <wcrtomb@plt+0x21078>
  4237f4:	str	w0, [sp, #24]
  4237f8:	b	42388c <wcrtomb@plt+0x20f7c>
  4237fc:	ldr	w1, [sp, #32]
  423800:	add	x0, sp, #0x28
  423804:	mov	w2, #0x5                   	// #5
  423808:	bl	423988 <wcrtomb@plt+0x21078>
  42380c:	str	w0, [sp, #24]
  423810:	b	42388c <wcrtomb@plt+0x20f7c>
  423814:	ldr	w1, [sp, #32]
  423818:	add	x0, sp, #0x28
  42381c:	mov	w2, #0x4                   	// #4
  423820:	bl	423988 <wcrtomb@plt+0x21078>
  423824:	str	w0, [sp, #24]
  423828:	b	42388c <wcrtomb@plt+0x20f7c>
  42382c:	add	x0, sp, #0x28
  423830:	mov	w1, #0x2                   	// #2
  423834:	bl	4238f0 <wcrtomb@plt+0x20fe0>
  423838:	str	w0, [sp, #24]
  42383c:	b	42388c <wcrtomb@plt+0x20f7c>
  423840:	ldr	w1, [sp, #32]
  423844:	add	x0, sp, #0x28
  423848:	mov	w2, #0x8                   	// #8
  42384c:	bl	423988 <wcrtomb@plt+0x21078>
  423850:	str	w0, [sp, #24]
  423854:	b	42388c <wcrtomb@plt+0x20f7c>
  423858:	ldr	w1, [sp, #32]
  42385c:	add	x0, sp, #0x28
  423860:	mov	w2, #0x7                   	// #7
  423864:	bl	423988 <wcrtomb@plt+0x21078>
  423868:	str	w0, [sp, #24]
  42386c:	b	42388c <wcrtomb@plt+0x20f7c>
  423870:	ldr	x8, [sp, #40]
  423874:	ldur	x9, [x29, #-40]
  423878:	str	x8, [x9]
  42387c:	ldr	w10, [sp, #36]
  423880:	orr	w10, w10, #0x2
  423884:	stur	w10, [x29, #-4]
  423888:	b	4238e0 <wcrtomb@plt+0x20fd0>
  42388c:	ldr	w8, [sp, #24]
  423890:	ldr	w9, [sp, #36]
  423894:	orr	w8, w9, w8
  423898:	str	w8, [sp, #36]
  42389c:	ldrsw	x10, [sp, #28]
  4238a0:	ldr	x11, [sp, #48]
  4238a4:	ldr	x12, [x11]
  4238a8:	add	x10, x12, x10
  4238ac:	str	x10, [x11]
  4238b0:	ldr	x10, [sp, #48]
  4238b4:	ldr	x10, [x10]
  4238b8:	ldrb	w8, [x10]
  4238bc:	cbz	w8, 4238cc <wcrtomb@plt+0x20fbc>
  4238c0:	ldr	w8, [sp, #36]
  4238c4:	orr	w8, w8, #0x2
  4238c8:	str	w8, [sp, #36]
  4238cc:	ldr	x8, [sp, #40]
  4238d0:	ldur	x9, [x29, #-40]
  4238d4:	str	x8, [x9]
  4238d8:	ldr	w10, [sp, #36]
  4238dc:	stur	w10, [x29, #-4]
  4238e0:	ldur	w0, [x29, #-4]
  4238e4:	ldp	x29, x30, [sp, #112]
  4238e8:	add	sp, sp, #0x80
  4238ec:	ret
  4238f0:	sub	sp, sp, #0x20
  4238f4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4238f8:	str	x0, [sp, #16]
  4238fc:	str	w1, [sp, #12]
  423900:	ldr	x9, [sp, #16]
  423904:	ldr	x9, [x9]
  423908:	ldrsw	x10, [sp, #12]
  42390c:	sdiv	x8, x8, x10
  423910:	cmp	x9, x8
  423914:	b.ge	423930 <wcrtomb@plt+0x21020>  // b.tcont
  423918:	ldr	x8, [sp, #16]
  42391c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  423920:	str	x9, [x8]
  423924:	mov	w10, #0x1                   	// #1
  423928:	str	w10, [sp, #28]
  42392c:	b	42397c <wcrtomb@plt+0x2106c>
  423930:	ldrsw	x8, [sp, #12]
  423934:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  423938:	sdiv	x8, x9, x8
  42393c:	ldr	x9, [sp, #16]
  423940:	ldr	x9, [x9]
  423944:	cmp	x8, x9
  423948:	b.ge	423964 <wcrtomb@plt+0x21054>  // b.tcont
  42394c:	ldr	x8, [sp, #16]
  423950:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  423954:	str	x9, [x8]
  423958:	mov	w10, #0x1                   	// #1
  42395c:	str	w10, [sp, #28]
  423960:	b	42397c <wcrtomb@plt+0x2106c>
  423964:	ldrsw	x8, [sp, #12]
  423968:	ldr	x9, [sp, #16]
  42396c:	ldr	x10, [x9]
  423970:	mul	x8, x10, x8
  423974:	str	x8, [x9]
  423978:	str	wzr, [sp, #28]
  42397c:	ldr	w0, [sp, #28]
  423980:	add	sp, sp, #0x20
  423984:	ret
  423988:	sub	sp, sp, #0x30
  42398c:	stp	x29, x30, [sp, #32]
  423990:	add	x29, sp, #0x20
  423994:	stur	x0, [x29, #-8]
  423998:	stur	w1, [x29, #-12]
  42399c:	str	w2, [sp, #16]
  4239a0:	str	wzr, [sp, #12]
  4239a4:	ldr	w8, [sp, #16]
  4239a8:	subs	w9, w8, #0x1
  4239ac:	str	w9, [sp, #16]
  4239b0:	cbz	w8, 4239d0 <wcrtomb@plt+0x210c0>
  4239b4:	ldur	x0, [x29, #-8]
  4239b8:	ldur	w1, [x29, #-12]
  4239bc:	bl	4238f0 <wcrtomb@plt+0x20fe0>
  4239c0:	ldr	w8, [sp, #12]
  4239c4:	orr	w8, w8, w0
  4239c8:	str	w8, [sp, #12]
  4239cc:	b	4239a4 <wcrtomb@plt+0x21094>
  4239d0:	ldr	w0, [sp, #12]
  4239d4:	ldp	x29, x30, [sp, #32]
  4239d8:	add	sp, sp, #0x30
  4239dc:	ret
  4239e0:	sub	sp, sp, #0x20
  4239e4:	stp	x29, x30, [sp, #16]
  4239e8:	add	x29, sp, #0x10
  4239ec:	adrp	x0, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4239f0:	add	x0, x0, #0x44c
  4239f4:	bl	402890 <getenv@plt>
  4239f8:	str	x0, [sp, #8]
  4239fc:	ldr	x8, [sp, #8]
  423a00:	mov	w9, #0x0                   	// #0
  423a04:	str	w9, [sp, #4]
  423a08:	cbz	x8, 423a28 <wcrtomb@plt+0x21118>
  423a0c:	ldr	x0, [sp, #8]
  423a10:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  423a14:	add	x1, x1, #0x451
  423a18:	bl	4026a0 <strcmp@plt>
  423a1c:	cmp	w0, #0x0
  423a20:	cset	w8, ne  // ne = any
  423a24:	str	w8, [sp, #4]
  423a28:	ldr	w8, [sp, #4]
  423a2c:	and	w0, w8, #0x1
  423a30:	ldp	x29, x30, [sp, #16]
  423a34:	add	sp, sp, #0x20
  423a38:	ret
  423a3c:	ret
  423a40:	sub	sp, sp, #0x20
  423a44:	stp	x29, x30, [sp, #16]
  423a48:	add	x29, sp, #0x10
  423a4c:	str	x0, [sp, #8]
  423a50:	str	x1, [sp]
  423a54:	ldr	x0, [sp, #8]
  423a58:	ldr	x1, [sp]
  423a5c:	bl	402850 <printf@plt>
  423a60:	ldp	x29, x30, [sp, #16]
  423a64:	add	sp, sp, #0x20
  423a68:	ret
  423a6c:	sub	sp, sp, #0x20
  423a70:	stp	x29, x30, [sp, #16]
  423a74:	add	x29, sp, #0x10
  423a78:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  423a7c:	add	x8, x8, #0x458
  423a80:	str	x0, [sp, #8]
  423a84:	ldr	x0, [sp, #8]
  423a88:	ldr	x1, [x8]
  423a8c:	bl	402300 <fputs@plt>
  423a90:	ldp	x29, x30, [sp, #16]
  423a94:	add	sp, sp, #0x20
  423a98:	ret
  423a9c:	sub	sp, sp, #0xa0
  423aa0:	stp	x29, x30, [sp, #144]
  423aa4:	add	x29, sp, #0x90
  423aa8:	mov	x8, xzr
  423aac:	mov	w9, #0x1                   	// #1
  423ab0:	stur	x0, [x29, #-16]
  423ab4:	stur	w1, [x29, #-20]
  423ab8:	stur	x2, [x29, #-32]
  423abc:	str	x8, [sp, #72]
  423ac0:	str	x8, [sp, #64]
  423ac4:	ldur	w10, [x29, #-20]
  423ac8:	and	w10, w10, #0xfffff000
  423acc:	str	w9, [sp, #28]
  423ad0:	cbz	w10, 423aec <wcrtomb@plt+0x211dc>
  423ad4:	bl	402870 <__errno_location@plt>
  423ad8:	mov	w8, #0x16                  	// #22
  423adc:	str	w8, [x0]
  423ae0:	mov	x9, xzr
  423ae4:	stur	x9, [x29, #-8]
  423ae8:	b	423fb8 <wcrtomb@plt+0x216a8>
  423aec:	ldur	w8, [x29, #-20]
  423af0:	and	w8, w8, #0x4
  423af4:	cbz	w8, 423b1c <wcrtomb@plt+0x2120c>
  423af8:	ldur	w8, [x29, #-20]
  423afc:	and	w8, w8, #0x200
  423b00:	cbz	w8, 423b1c <wcrtomb@plt+0x2120c>
  423b04:	bl	402870 <__errno_location@plt>
  423b08:	mov	w8, #0x16                  	// #22
  423b0c:	str	w8, [x0]
  423b10:	mov	x9, xzr
  423b14:	stur	x9, [x29, #-8]
  423b18:	b	423fb8 <wcrtomb@plt+0x216a8>
  423b1c:	ldur	w8, [x29, #-20]
  423b20:	mov	w9, #0x12                  	// #18
  423b24:	and	w8, w8, w9
  423b28:	cbnz	w8, 423b44 <wcrtomb@plt+0x21234>
  423b2c:	bl	402870 <__errno_location@plt>
  423b30:	mov	w8, #0x16                  	// #22
  423b34:	str	w8, [x0]
  423b38:	mov	x9, xzr
  423b3c:	stur	x9, [x29, #-8]
  423b40:	b	423fb8 <wcrtomb@plt+0x216a8>
  423b44:	mov	x0, #0x1                   	// #1
  423b48:	mov	x1, #0x80                  	// #128
  423b4c:	bl	402540 <calloc@plt>
  423b50:	stur	x0, [x29, #-40]
  423b54:	ldur	x8, [x29, #-40]
  423b58:	cbnz	x8, 423b68 <wcrtomb@plt+0x21258>
  423b5c:	mov	x8, xzr
  423b60:	stur	x8, [x29, #-8]
  423b64:	b	423fb8 <wcrtomb@plt+0x216a8>
  423b68:	ldur	x8, [x29, #-32]
  423b6c:	ldur	x9, [x29, #-40]
  423b70:	str	x8, [x9, #64]
  423b74:	ldur	w10, [x29, #-20]
  423b78:	ldur	x8, [x29, #-40]
  423b7c:	str	w10, [x8, #72]
  423b80:	ldur	x8, [x29, #-40]
  423b84:	ldr	w10, [x8, #72]
  423b88:	and	w10, w10, #0x2
  423b8c:	cbz	w10, 423bb0 <wcrtomb@plt+0x212a0>
  423b90:	ldur	x8, [x29, #-40]
  423b94:	ldr	w9, [x8, #72]
  423b98:	orr	w9, w9, #0x4
  423b9c:	str	w9, [x8, #72]
  423ba0:	ldur	x8, [x29, #-40]
  423ba4:	ldr	w9, [x8, #72]
  423ba8:	and	w9, w9, #0xfffffdff
  423bac:	str	w9, [x8, #72]
  423bb0:	ldur	x8, [x29, #-40]
  423bb4:	mov	w9, #0xffffff9c            	// #-100
  423bb8:	str	w9, [x8, #44]
  423bbc:	ldur	x8, [x29, #-40]
  423bc0:	ldr	w9, [x8, #72]
  423bc4:	and	w9, w9, #0x200
  423bc8:	cbz	w9, 423c08 <wcrtomb@plt+0x212f8>
  423bcc:	ldr	w8, [sp, #28]
  423bd0:	tbnz	w8, #0, 423c08 <wcrtomb@plt+0x212f8>
  423bd4:	adrp	x0, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  423bd8:	add	x0, x0, #0xd5f
  423bdc:	mov	w8, wzr
  423be0:	mov	w1, w8
  423be4:	bl	43fd8c <_obstack_memory_used@@Base+0x1846c>
  423be8:	str	w0, [sp, #56]
  423bec:	ldr	w8, [sp, #56]
  423bf0:	cmp	w8, #0x0
  423bf4:	cset	w8, ge  // ge = tcont
  423bf8:	tbnz	w8, #0, 423c00 <wcrtomb@plt+0x212f0>
  423bfc:	b	423c08 <wcrtomb@plt+0x212f8>
  423c00:	ldr	w0, [sp, #56]
  423c04:	bl	4025a0 <close@plt>
  423c08:	ldur	x0, [x29, #-16]
  423c0c:	bl	423fc8 <wcrtomb@plt+0x216b8>
  423c10:	str	x0, [sp, #48]
  423c14:	ldur	x0, [x29, #-40]
  423c18:	ldr	x8, [sp, #48]
  423c1c:	cmp	x8, #0x1, lsl #12
  423c20:	str	x0, [sp, #16]
  423c24:	b.ls	423c34 <wcrtomb@plt+0x21324>  // b.plast
  423c28:	ldr	x8, [sp, #48]
  423c2c:	str	x8, [sp, #8]
  423c30:	b	423c3c <wcrtomb@plt+0x2132c>
  423c34:	mov	x8, #0x1000                	// #4096
  423c38:	str	x8, [sp, #8]
  423c3c:	ldr	x8, [sp, #8]
  423c40:	ldr	x0, [sp, #16]
  423c44:	mov	x1, x8
  423c48:	bl	424030 <wcrtomb@plt+0x21720>
  423c4c:	tbnz	w0, #0, 423c54 <wcrtomb@plt+0x21344>
  423c50:	b	423fa8 <wcrtomb@plt+0x21698>
  423c54:	ldur	x8, [x29, #-16]
  423c58:	ldr	x8, [x8]
  423c5c:	cbz	x8, 423c9c <wcrtomb@plt+0x2138c>
  423c60:	ldur	x0, [x29, #-40]
  423c64:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  423c68:	add	x1, x1, #0xad5
  423c6c:	mov	x8, xzr
  423c70:	mov	x2, x8
  423c74:	bl	424124 <wcrtomb@plt+0x21814>
  423c78:	str	x0, [sp, #72]
  423c7c:	cbnz	x0, 423c84 <wcrtomb@plt+0x21374>
  423c80:	b	423f9c <wcrtomb@plt+0x2168c>
  423c84:	ldr	x8, [sp, #72]
  423c88:	mov	x9, #0xffffffffffffffff    	// #-1
  423c8c:	str	x9, [x8, #88]
  423c90:	ldr	x8, [sp, #72]
  423c94:	mov	w10, #0xffffffff            	// #-1
  423c98:	str	w10, [x8, #104]
  423c9c:	ldur	x8, [x29, #-32]
  423ca0:	mov	w9, #0x1                   	// #1
  423ca4:	str	w9, [sp, #4]
  423ca8:	cbz	x8, 423cc0 <wcrtomb@plt+0x213b0>
  423cac:	ldur	x8, [x29, #-40]
  423cb0:	ldr	w9, [x8, #72]
  423cb4:	tst	w9, #0x400
  423cb8:	cset	w9, ne  // ne = any
  423cbc:	str	w9, [sp, #4]
  423cc0:	ldr	w8, [sp, #4]
  423cc4:	and	w8, w8, #0x1
  423cc8:	strb	w8, [sp, #63]
  423ccc:	mov	x9, xzr
  423cd0:	stur	x9, [x29, #-56]
  423cd4:	stur	xzr, [x29, #-64]
  423cd8:	ldur	x8, [x29, #-16]
  423cdc:	ldr	x8, [x8]
  423ce0:	cbz	x8, 423e8c <wcrtomb@plt+0x2157c>
  423ce4:	ldur	x8, [x29, #-16]
  423ce8:	ldr	x0, [x8]
  423cec:	bl	4022f0 <strlen@plt>
  423cf0:	str	x0, [sp, #40]
  423cf4:	ldur	w9, [x29, #-20]
  423cf8:	and	w9, w9, #0x800
  423cfc:	cbnz	w9, 423d84 <wcrtomb@plt+0x21474>
  423d00:	ldur	x8, [x29, #-16]
  423d04:	ldr	x8, [x8]
  423d08:	str	x8, [sp, #32]
  423d0c:	ldr	x8, [sp, #40]
  423d10:	mov	x9, #0x2                   	// #2
  423d14:	cmp	x9, x8
  423d18:	b.cs	423d84 <wcrtomb@plt+0x21474>  // b.hs, b.nlast
  423d1c:	ldr	x8, [sp, #32]
  423d20:	ldr	x9, [sp, #40]
  423d24:	subs	x9, x9, #0x1
  423d28:	ldrb	w10, [x8, x9]
  423d2c:	cmp	w10, #0x2f
  423d30:	b.ne	423d84 <wcrtomb@plt+0x21474>  // b.any
  423d34:	ldr	x8, [sp, #40]
  423d38:	mov	x9, #0x1                   	// #1
  423d3c:	mov	w10, #0x0                   	// #0
  423d40:	cmp	x9, x8
  423d44:	str	w10, [sp]
  423d48:	b.cs	423d68 <wcrtomb@plt+0x21458>  // b.hs, b.nlast
  423d4c:	ldr	x8, [sp, #32]
  423d50:	ldr	x9, [sp, #40]
  423d54:	subs	x9, x9, #0x2
  423d58:	ldrb	w10, [x8, x9]
  423d5c:	cmp	w10, #0x2f
  423d60:	cset	w10, eq  // eq = none
  423d64:	str	w10, [sp]
  423d68:	ldr	w8, [sp]
  423d6c:	tbnz	w8, #0, 423d74 <wcrtomb@plt+0x21464>
  423d70:	b	423d84 <wcrtomb@plt+0x21474>
  423d74:	ldr	x8, [sp, #40]
  423d78:	subs	x8, x8, #0x1
  423d7c:	str	x8, [sp, #40]
  423d80:	b	423d34 <wcrtomb@plt+0x21424>
  423d84:	ldur	x0, [x29, #-40]
  423d88:	ldur	x8, [x29, #-16]
  423d8c:	ldr	x1, [x8]
  423d90:	ldr	x2, [sp, #40]
  423d94:	bl	424124 <wcrtomb@plt+0x21814>
  423d98:	stur	x0, [x29, #-48]
  423d9c:	cbnz	x0, 423da4 <wcrtomb@plt+0x21494>
  423da0:	b	423f8c <wcrtomb@plt+0x2167c>
  423da4:	ldur	x8, [x29, #-48]
  423da8:	str	xzr, [x8, #88]
  423dac:	ldr	x8, [sp, #72]
  423db0:	ldur	x9, [x29, #-48]
  423db4:	str	x8, [x9, #8]
  423db8:	ldur	x8, [x29, #-48]
  423dbc:	add	x8, x8, #0xf8
  423dc0:	ldur	x9, [x29, #-48]
  423dc4:	str	x8, [x9, #48]
  423dc8:	ldrb	w10, [sp, #63]
  423dcc:	tbnz	w10, #0, 423dd4 <wcrtomb@plt+0x214c4>
  423dd0:	b	423dfc <wcrtomb@plt+0x214ec>
  423dd4:	ldur	x8, [x29, #-56]
  423dd8:	cbz	x8, 423dfc <wcrtomb@plt+0x214ec>
  423ddc:	ldur	x8, [x29, #-48]
  423de0:	mov	w9, #0xb                   	// #11
  423de4:	strh	w9, [x8, #108]
  423de8:	ldur	x0, [x29, #-48]
  423dec:	mov	w9, #0x1                   	// #1
  423df0:	and	w1, w9, #0x1
  423df4:	bl	424214 <wcrtomb@plt+0x21904>
  423df8:	b	423e18 <wcrtomb@plt+0x21508>
  423dfc:	ldur	x0, [x29, #-40]
  423e00:	ldur	x1, [x29, #-48]
  423e04:	mov	w8, wzr
  423e08:	and	w2, w8, #0x1
  423e0c:	bl	424274 <wcrtomb@plt+0x21964>
  423e10:	ldur	x9, [x29, #-48]
  423e14:	strh	w0, [x9, #108]
  423e18:	ldur	x8, [x29, #-32]
  423e1c:	cbz	x8, 423e38 <wcrtomb@plt+0x21528>
  423e20:	ldur	x8, [x29, #-56]
  423e24:	ldur	x9, [x29, #-48]
  423e28:	str	x8, [x9, #16]
  423e2c:	ldur	x8, [x29, #-48]
  423e30:	stur	x8, [x29, #-56]
  423e34:	b	423e70 <wcrtomb@plt+0x21560>
  423e38:	ldur	x8, [x29, #-48]
  423e3c:	mov	x9, xzr
  423e40:	str	x9, [x8, #16]
  423e44:	ldur	x8, [x29, #-56]
  423e48:	cbnz	x8, 423e5c <wcrtomb@plt+0x2154c>
  423e4c:	ldur	x8, [x29, #-48]
  423e50:	stur	x8, [x29, #-56]
  423e54:	str	x8, [sp, #64]
  423e58:	b	423e70 <wcrtomb@plt+0x21560>
  423e5c:	ldur	x8, [x29, #-48]
  423e60:	ldr	x9, [sp, #64]
  423e64:	str	x8, [x9, #16]
  423e68:	ldur	x8, [x29, #-48]
  423e6c:	str	x8, [sp, #64]
  423e70:	ldur	x8, [x29, #-16]
  423e74:	add	x8, x8, #0x8
  423e78:	stur	x8, [x29, #-16]
  423e7c:	ldur	x8, [x29, #-64]
  423e80:	add	x8, x8, #0x1
  423e84:	stur	x8, [x29, #-64]
  423e88:	b	423cd8 <wcrtomb@plt+0x213c8>
  423e8c:	ldur	x8, [x29, #-32]
  423e90:	cbz	x8, 423eb4 <wcrtomb@plt+0x215a4>
  423e94:	ldur	x8, [x29, #-64]
  423e98:	cmp	x8, #0x1
  423e9c:	b.ls	423eb4 <wcrtomb@plt+0x215a4>  // b.plast
  423ea0:	ldur	x0, [x29, #-40]
  423ea4:	ldur	x1, [x29, #-56]
  423ea8:	ldur	x2, [x29, #-64]
  423eac:	bl	4244c8 <wcrtomb@plt+0x21bb8>
  423eb0:	stur	x0, [x29, #-56]
  423eb4:	ldur	x0, [x29, #-40]
  423eb8:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  423ebc:	add	x1, x1, #0xad5
  423ec0:	mov	x8, xzr
  423ec4:	mov	x2, x8
  423ec8:	bl	424124 <wcrtomb@plt+0x21814>
  423ecc:	ldur	x8, [x29, #-40]
  423ed0:	str	x0, [x8]
  423ed4:	cbnz	x0, 423edc <wcrtomb@plt+0x215cc>
  423ed8:	b	423f8c <wcrtomb@plt+0x2167c>
  423edc:	ldur	x8, [x29, #-56]
  423ee0:	ldur	x9, [x29, #-40]
  423ee4:	ldr	x9, [x9]
  423ee8:	str	x8, [x9, #16]
  423eec:	ldur	x8, [x29, #-40]
  423ef0:	ldr	x8, [x8]
  423ef4:	mov	w10, #0x9                   	// #9
  423ef8:	strh	w10, [x8, #108]
  423efc:	ldur	x8, [x29, #-40]
  423f00:	ldr	x8, [x8]
  423f04:	mov	x9, #0x1                   	// #1
  423f08:	str	x9, [x8, #88]
  423f0c:	ldur	x0, [x29, #-40]
  423f10:	bl	424670 <wcrtomb@plt+0x21d60>
  423f14:	tbnz	w0, #0, 423f1c <wcrtomb@plt+0x2160c>
  423f18:	b	423f8c <wcrtomb@plt+0x2167c>
  423f1c:	ldur	x8, [x29, #-40]
  423f20:	ldr	w9, [x8, #72]
  423f24:	and	w9, w9, #0x4
  423f28:	cbnz	w9, 423f70 <wcrtomb@plt+0x21660>
  423f2c:	ldur	x8, [x29, #-40]
  423f30:	ldr	w9, [x8, #72]
  423f34:	and	w9, w9, #0x200
  423f38:	cbnz	w9, 423f70 <wcrtomb@plt+0x21660>
  423f3c:	ldur	x0, [x29, #-40]
  423f40:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  423f44:	add	x1, x1, #0xd5f
  423f48:	bl	42473c <wcrtomb@plt+0x21e2c>
  423f4c:	ldur	x8, [x29, #-40]
  423f50:	str	w0, [x8, #40]
  423f54:	cmp	w0, #0x0
  423f58:	cset	w9, ge  // ge = tcont
  423f5c:	tbnz	w9, #0, 423f70 <wcrtomb@plt+0x21660>
  423f60:	ldur	x8, [x29, #-40]
  423f64:	ldr	w9, [x8, #72]
  423f68:	orr	w9, w9, #0x4
  423f6c:	str	w9, [x8, #72]
  423f70:	ldur	x8, [x29, #-40]
  423f74:	add	x0, x8, #0x60
  423f78:	mov	w1, #0xffffffff            	// #-1
  423f7c:	bl	43ff58 <_obstack_memory_used@@Base+0x18638>
  423f80:	ldur	x8, [x29, #-40]
  423f84:	stur	x8, [x29, #-8]
  423f88:	b	423fb8 <wcrtomb@plt+0x216a8>
  423f8c:	ldur	x0, [x29, #-56]
  423f90:	bl	4247cc <wcrtomb@plt+0x21ebc>
  423f94:	ldr	x0, [sp, #72]
  423f98:	bl	4026c0 <free@plt>
  423f9c:	ldur	x8, [x29, #-40]
  423fa0:	ldr	x0, [x8, #32]
  423fa4:	bl	4026c0 <free@plt>
  423fa8:	ldur	x0, [x29, #-40]
  423fac:	bl	4026c0 <free@plt>
  423fb0:	mov	x8, xzr
  423fb4:	stur	x8, [x29, #-8]
  423fb8:	ldur	x0, [x29, #-8]
  423fbc:	ldp	x29, x30, [sp, #144]
  423fc0:	add	sp, sp, #0xa0
  423fc4:	ret
  423fc8:	sub	sp, sp, #0x30
  423fcc:	stp	x29, x30, [sp, #32]
  423fd0:	add	x29, sp, #0x20
  423fd4:	stur	x0, [x29, #-8]
  423fd8:	str	xzr, [sp, #8]
  423fdc:	ldur	x8, [x29, #-8]
  423fe0:	ldr	x8, [x8]
  423fe4:	cbz	x8, 42401c <wcrtomb@plt+0x2170c>
  423fe8:	ldur	x8, [x29, #-8]
  423fec:	ldr	x0, [x8]
  423ff0:	bl	4022f0 <strlen@plt>
  423ff4:	str	x0, [sp, #16]
  423ff8:	ldr	x8, [sp, #8]
  423ffc:	cmp	x0, x8
  424000:	b.ls	42400c <wcrtomb@plt+0x216fc>  // b.plast
  424004:	ldr	x8, [sp, #16]
  424008:	str	x8, [sp, #8]
  42400c:	ldur	x8, [x29, #-8]
  424010:	add	x8, x8, #0x8
  424014:	stur	x8, [x29, #-8]
  424018:	b	423fdc <wcrtomb@plt+0x216cc>
  42401c:	ldr	x8, [sp, #8]
  424020:	add	x0, x8, #0x1
  424024:	ldp	x29, x30, [sp, #32]
  424028:	add	sp, sp, #0x30
  42402c:	ret
  424030:	sub	sp, sp, #0x40
  424034:	stp	x29, x30, [sp, #48]
  424038:	add	x29, sp, #0x30
  42403c:	stur	x0, [x29, #-16]
  424040:	str	x1, [sp, #24]
  424044:	ldur	x8, [x29, #-16]
  424048:	ldr	x8, [x8, #48]
  42404c:	ldr	x9, [sp, #24]
  424050:	add	x8, x8, x9
  424054:	add	x8, x8, #0x100
  424058:	str	x8, [sp, #8]
  42405c:	ldr	x8, [sp, #8]
  424060:	ldur	x9, [x29, #-16]
  424064:	ldr	x9, [x9, #48]
  424068:	cmp	x8, x9
  42406c:	b.cs	4240a4 <wcrtomb@plt+0x21794>  // b.hs, b.nlast
  424070:	ldur	x8, [x29, #-16]
  424074:	ldr	x0, [x8, #32]
  424078:	bl	4026c0 <free@plt>
  42407c:	ldur	x8, [x29, #-16]
  424080:	mov	x9, xzr
  424084:	str	x9, [x8, #32]
  424088:	bl	402870 <__errno_location@plt>
  42408c:	mov	w10, #0x24                  	// #36
  424090:	str	w10, [x0]
  424094:	mov	w10, wzr
  424098:	and	w10, w10, #0x1
  42409c:	sturb	w10, [x29, #-1]
  4240a0:	b	424110 <wcrtomb@plt+0x21800>
  4240a4:	ldr	x8, [sp, #8]
  4240a8:	ldur	x9, [x29, #-16]
  4240ac:	str	x8, [x9, #48]
  4240b0:	ldur	x8, [x29, #-16]
  4240b4:	ldr	x0, [x8, #32]
  4240b8:	ldur	x8, [x29, #-16]
  4240bc:	ldr	x1, [x8, #48]
  4240c0:	bl	402570 <realloc@plt>
  4240c4:	str	x0, [sp, #16]
  4240c8:	ldr	x8, [sp, #16]
  4240cc:	cbnz	x8, 4240f8 <wcrtomb@plt+0x217e8>
  4240d0:	ldur	x8, [x29, #-16]
  4240d4:	ldr	x0, [x8, #32]
  4240d8:	bl	4026c0 <free@plt>
  4240dc:	ldur	x8, [x29, #-16]
  4240e0:	mov	x9, xzr
  4240e4:	str	x9, [x8, #32]
  4240e8:	mov	w10, wzr
  4240ec:	and	w10, w10, #0x1
  4240f0:	sturb	w10, [x29, #-1]
  4240f4:	b	424110 <wcrtomb@plt+0x21800>
  4240f8:	ldr	x8, [sp, #16]
  4240fc:	ldur	x9, [x29, #-16]
  424100:	str	x8, [x9, #32]
  424104:	mov	w10, #0x1                   	// #1
  424108:	and	w10, w10, #0x1
  42410c:	sturb	w10, [x29, #-1]
  424110:	ldurb	w8, [x29, #-1]
  424114:	and	w0, w8, #0x1
  424118:	ldp	x29, x30, [sp, #48]
  42411c:	add	sp, sp, #0x40
  424120:	ret
  424124:	sub	sp, sp, #0x40
  424128:	stp	x29, x30, [sp, #48]
  42412c:	add	x29, sp, #0x30
  424130:	stur	x0, [x29, #-16]
  424134:	str	x1, [sp, #24]
  424138:	str	x2, [sp, #16]
  42413c:	ldr	x8, [sp, #16]
  424140:	add	x8, x8, #0x1
  424144:	add	x8, x8, #0xff
  424148:	and	x8, x8, #0xfffffffffffffff8
  42414c:	str	x8, [sp]
  424150:	ldr	x0, [sp]
  424154:	bl	402450 <malloc@plt>
  424158:	str	x0, [sp, #8]
  42415c:	cbnz	x0, 42416c <wcrtomb@plt+0x2185c>
  424160:	mov	x8, xzr
  424164:	stur	x8, [x29, #-8]
  424168:	b	424204 <wcrtomb@plt+0x218f4>
  42416c:	ldr	x8, [sp, #8]
  424170:	add	x0, x8, #0xf8
  424174:	ldr	x1, [sp, #24]
  424178:	ldr	x2, [sp, #16]
  42417c:	bl	402290 <memcpy@plt>
  424180:	ldr	x8, [sp, #8]
  424184:	add	x8, x8, #0xf8
  424188:	ldr	x9, [sp, #16]
  42418c:	add	x8, x8, x9
  424190:	mov	w10, #0x0                   	// #0
  424194:	strb	w10, [x8]
  424198:	ldr	x8, [sp, #16]
  42419c:	ldr	x9, [sp, #8]
  4241a0:	str	x8, [x9, #96]
  4241a4:	ldur	x8, [x29, #-16]
  4241a8:	ldr	x9, [sp, #8]
  4241ac:	str	x8, [x9, #80]
  4241b0:	ldur	x8, [x29, #-16]
  4241b4:	ldr	x8, [x8, #32]
  4241b8:	ldr	x9, [sp, #8]
  4241bc:	str	x8, [x9, #56]
  4241c0:	ldr	x8, [sp, #8]
  4241c4:	str	wzr, [x8, #64]
  4241c8:	ldr	x8, [sp, #8]
  4241cc:	mov	x9, xzr
  4241d0:	str	x9, [x8, #24]
  4241d4:	ldr	x8, [sp, #8]
  4241d8:	mov	w10, #0x0                   	// #0
  4241dc:	strh	w10, [x8, #110]
  4241e0:	ldr	x8, [sp, #8]
  4241e4:	mov	w10, #0x3                   	// #3
  4241e8:	strh	w10, [x8, #112]
  4241ec:	ldr	x8, [sp, #8]
  4241f0:	str	xzr, [x8, #32]
  4241f4:	ldr	x8, [sp, #8]
  4241f8:	str	x9, [x8, #40]
  4241fc:	ldr	x8, [sp, #8]
  424200:	stur	x8, [x29, #-8]
  424204:	ldur	x0, [x29, #-8]
  424208:	ldp	x29, x30, [sp, #48]
  42420c:	add	sp, sp, #0x40
  424210:	ret
  424214:	sub	sp, sp, #0x20
  424218:	stp	x29, x30, [sp, #16]
  42421c:	add	x29, sp, #0x10
  424220:	mov	w8, #0x1                   	// #1
  424224:	str	x0, [sp, #8]
  424228:	and	w8, w1, w8
  42422c:	strb	w8, [sp, #7]
  424230:	ldr	x8, [sp, #8]
  424234:	ldrh	w9, [x8, #108]
  424238:	cmp	w9, #0xb
  42423c:	b.eq	424244 <wcrtomb@plt+0x21934>  // b.none
  424240:	bl	402610 <abort@plt>
  424244:	ldrb	w8, [sp, #7]
  424248:	mov	w9, #0x1                   	// #1
  42424c:	mov	w10, #0x2                   	// #2
  424250:	tst	w8, #0x1
  424254:	csel	w8, w10, w9, ne  // ne = any
  424258:	mov	w0, w8
  42425c:	sxtw	x11, w0
  424260:	ldr	x12, [sp, #8]
  424264:	str	x11, [x12, #168]
  424268:	ldp	x29, x30, [sp, #16]
  42426c:	add	sp, sp, #0x20
  424270:	ret
  424274:	sub	sp, sp, #0x40
  424278:	stp	x29, x30, [sp, #48]
  42427c:	add	x29, sp, #0x30
  424280:	mov	w8, #0x1                   	// #1
  424284:	stur	x0, [x29, #-16]
  424288:	str	x1, [sp, #24]
  42428c:	and	w8, w2, w8
  424290:	strb	w8, [sp, #23]
  424294:	ldr	x9, [sp, #24]
  424298:	add	x9, x9, #0x78
  42429c:	str	x9, [sp, #8]
  4242a0:	ldr	x9, [sp, #24]
  4242a4:	ldr	x9, [x9, #88]
  4242a8:	cbnz	x9, 4242c4 <wcrtomb@plt+0x219b4>
  4242ac:	ldur	x8, [x29, #-16]
  4242b0:	ldr	w9, [x8, #72]
  4242b4:	and	w9, w9, #0x1
  4242b8:	cbz	w9, 4242c4 <wcrtomb@plt+0x219b4>
  4242bc:	mov	w8, #0x1                   	// #1
  4242c0:	strb	w8, [sp, #23]
  4242c4:	ldur	x8, [x29, #-16]
  4242c8:	ldr	w9, [x8, #72]
  4242cc:	and	w9, w9, #0x2
  4242d0:	cbnz	w9, 4242e0 <wcrtomb@plt+0x219d0>
  4242d4:	ldrb	w8, [sp, #23]
  4242d8:	tbnz	w8, #0, 4242e0 <wcrtomb@plt+0x219d0>
  4242dc:	b	424344 <wcrtomb@plt+0x21a34>
  4242e0:	ldr	x8, [sp, #24]
  4242e4:	ldr	x0, [x8, #48]
  4242e8:	ldr	x1, [sp, #8]
  4242ec:	bl	440ba8 <_obstack_memory_used@@Base+0x19288>
  4242f0:	cbz	w0, 424340 <wcrtomb@plt+0x21a30>
  4242f4:	bl	402870 <__errno_location@plt>
  4242f8:	ldr	w8, [x0]
  4242fc:	cmp	w8, #0x2
  424300:	b.ne	42432c <wcrtomb@plt+0x21a1c>  // b.any
  424304:	ldr	x8, [sp, #24]
  424308:	ldr	x0, [x8, #48]
  42430c:	ldr	x1, [sp, #8]
  424310:	bl	440bc8 <_obstack_memory_used@@Base+0x192a8>
  424314:	cbnz	w0, 42432c <wcrtomb@plt+0x21a1c>
  424318:	bl	402870 <__errno_location@plt>
  42431c:	str	wzr, [x0]
  424320:	mov	w8, #0xd                   	// #13
  424324:	sturh	w8, [x29, #-2]
  424328:	b	4244b8 <wcrtomb@plt+0x21ba8>
  42432c:	bl	402870 <__errno_location@plt>
  424330:	ldr	w8, [x0]
  424334:	ldr	x9, [sp, #24]
  424338:	str	w8, [x9, #64]
  42433c:	b	424374 <wcrtomb@plt+0x21a64>
  424340:	b	424394 <wcrtomb@plt+0x21a84>
  424344:	ldur	x8, [x29, #-16]
  424348:	ldr	w0, [x8, #44]
  42434c:	ldr	x8, [sp, #24]
  424350:	ldr	x1, [x8, #48]
  424354:	ldr	x2, [sp, #8]
  424358:	mov	w3, #0x100                 	// #256
  42435c:	bl	440bd8 <_obstack_memory_used@@Base+0x192b8>
  424360:	cbz	w0, 424394 <wcrtomb@plt+0x21a84>
  424364:	bl	402870 <__errno_location@plt>
  424368:	ldr	w8, [x0]
  42436c:	ldr	x9, [sp, #24]
  424370:	str	w8, [x9, #64]
  424374:	ldr	x0, [sp, #8]
  424378:	mov	w8, wzr
  42437c:	mov	w1, w8
  424380:	mov	x2, #0x80                  	// #128
  424384:	bl	402520 <memset@plt>
  424388:	mov	w8, #0xa                   	// #10
  42438c:	sturh	w8, [x29, #-2]
  424390:	b	4244b8 <wcrtomb@plt+0x21ba8>
  424394:	ldr	x8, [sp, #8]
  424398:	ldr	w9, [x8, #16]
  42439c:	and	w9, w9, #0xf000
  4243a0:	cmp	w9, #0x4, lsl #12
  4243a4:	b.ne	424470 <wcrtomb@plt+0x21b60>  // b.any
  4243a8:	ldr	x8, [sp, #8]
  4243ac:	ldr	w9, [x8, #20]
  4243b0:	cmp	w9, #0x2
  4243b4:	b.cc	4243cc <wcrtomb@plt+0x21abc>  // b.lo, b.ul, b.last
  4243b8:	ldr	x8, [sp, #24]
  4243bc:	ldr	x8, [x8, #88]
  4243c0:	cmp	x8, #0x0
  4243c4:	cset	w9, gt
  4243c8:	tbnz	w9, #0, 4243d8 <wcrtomb@plt+0x21ac8>
  4243cc:	mov	w8, #0xffffffff            	// #-1
  4243d0:	str	w8, [sp, #4]
  4243d4:	b	424400 <wcrtomb@plt+0x21af0>
  4243d8:	ldr	x8, [sp, #8]
  4243dc:	ldr	w9, [x8, #20]
  4243e0:	ldur	x8, [x29, #-16]
  4243e4:	ldr	w10, [x8, #72]
  4243e8:	mov	w11, wzr
  4243ec:	mov	w12, #0x2                   	// #2
  4243f0:	tst	w10, #0x20
  4243f4:	csel	w10, w11, w12, ne  // ne = any
  4243f8:	subs	w9, w9, w10
  4243fc:	str	w9, [sp, #4]
  424400:	ldr	w8, [sp, #4]
  424404:	ldr	x9, [sp, #24]
  424408:	str	w8, [x9, #104]
  42440c:	ldr	x9, [sp, #24]
  424410:	ldrb	w8, [x9, #248]
  424414:	cmp	w8, #0x2e
  424418:	b.ne	424464 <wcrtomb@plt+0x21b54>  // b.any
  42441c:	ldr	x8, [sp, #24]
  424420:	ldrb	w9, [x8, #249]
  424424:	cbz	w9, 424444 <wcrtomb@plt+0x21b34>
  424428:	ldr	x8, [sp, #24]
  42442c:	ldrb	w9, [x8, #249]
  424430:	cmp	w9, #0x2e
  424434:	b.ne	424464 <wcrtomb@plt+0x21b54>  // b.any
  424438:	ldr	x8, [sp, #24]
  42443c:	ldrb	w9, [x8, #250]
  424440:	cbnz	w9, 424464 <wcrtomb@plt+0x21b54>
  424444:	ldr	x8, [sp, #24]
  424448:	ldr	x8, [x8, #88]
  42444c:	mov	w9, #0x5                   	// #5
  424450:	mov	w10, #0x1                   	// #1
  424454:	cmp	x8, #0x0
  424458:	csel	w9, w10, w9, eq  // eq = none
  42445c:	sturh	w9, [x29, #-2]
  424460:	b	4244b8 <wcrtomb@plt+0x21ba8>
  424464:	mov	w8, #0x1                   	// #1
  424468:	sturh	w8, [x29, #-2]
  42446c:	b	4244b8 <wcrtomb@plt+0x21ba8>
  424470:	ldr	x8, [sp, #8]
  424474:	ldr	w9, [x8, #16]
  424478:	and	w9, w9, #0xf000
  42447c:	cmp	w9, #0xa, lsl #12
  424480:	b.ne	424490 <wcrtomb@plt+0x21b80>  // b.any
  424484:	mov	w8, #0xc                   	// #12
  424488:	sturh	w8, [x29, #-2]
  42448c:	b	4244b8 <wcrtomb@plt+0x21ba8>
  424490:	ldr	x8, [sp, #8]
  424494:	ldr	w9, [x8, #16]
  424498:	and	w9, w9, #0xf000
  42449c:	cmp	w9, #0x8, lsl #12
  4244a0:	b.ne	4244b0 <wcrtomb@plt+0x21ba0>  // b.any
  4244a4:	mov	w8, #0x8                   	// #8
  4244a8:	sturh	w8, [x29, #-2]
  4244ac:	b	4244b8 <wcrtomb@plt+0x21ba8>
  4244b0:	mov	w8, #0x3                   	// #3
  4244b4:	sturh	w8, [x29, #-2]
  4244b8:	ldurh	w0, [x29, #-2]
  4244bc:	ldp	x29, x30, [sp, #48]
  4244c0:	add	sp, sp, #0x40
  4244c4:	ret
  4244c8:	sub	sp, sp, #0x60
  4244cc:	stp	x29, x30, [sp, #80]
  4244d0:	add	x29, sp, #0x50
  4244d4:	add	x8, sp, #0x18
  4244d8:	stur	x0, [x29, #-16]
  4244dc:	stur	x1, [x29, #-24]
  4244e0:	stur	x2, [x29, #-32]
  4244e4:	mov	x9, x8
  4244e8:	cmp	x9, x8
  4244ec:	b.ne	424500 <wcrtomb@plt+0x21bf0>  // b.any
  4244f0:	ldur	x8, [x29, #-16]
  4244f4:	ldr	x8, [x8, #64]
  4244f8:	str	x8, [sp]
  4244fc:	b	42450c <wcrtomb@plt+0x21bfc>
  424500:	adrp	x8, 427000 <wcrtomb@plt+0x246f0>
  424504:	add	x8, x8, #0x140
  424508:	str	x8, [sp]
  42450c:	ldr	x8, [sp]
  424510:	str	x8, [sp, #16]
  424514:	ldur	x8, [x29, #-32]
  424518:	ldur	x9, [x29, #-16]
  42451c:	ldr	x9, [x9, #56]
  424520:	cmp	x8, x9
  424524:	b.ls	4245a8 <wcrtomb@plt+0x21c98>  // b.plast
  424528:	ldur	x8, [x29, #-32]
  42452c:	add	x8, x8, #0x28
  424530:	ldur	x9, [x29, #-16]
  424534:	str	x8, [x9, #56]
  424538:	ldur	x8, [x29, #-16]
  42453c:	ldr	x8, [x8, #56]
  424540:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  424544:	cmp	x9, x8
  424548:	b.cc	424570 <wcrtomb@plt+0x21c60>  // b.lo, b.ul, b.last
  42454c:	ldur	x8, [x29, #-16]
  424550:	ldr	x0, [x8, #16]
  424554:	ldur	x8, [x29, #-16]
  424558:	ldr	x8, [x8, #56]
  42455c:	mov	x9, #0x8                   	// #8
  424560:	mul	x1, x8, x9
  424564:	bl	402570 <realloc@plt>
  424568:	str	x0, [sp, #8]
  42456c:	cbnz	x0, 42459c <wcrtomb@plt+0x21c8c>
  424570:	ldur	x8, [x29, #-16]
  424574:	ldr	x0, [x8, #16]
  424578:	bl	4026c0 <free@plt>
  42457c:	ldur	x8, [x29, #-16]
  424580:	mov	x9, xzr
  424584:	str	x9, [x8, #16]
  424588:	ldur	x8, [x29, #-16]
  42458c:	str	xzr, [x8, #56]
  424590:	ldur	x8, [x29, #-24]
  424594:	stur	x8, [x29, #-8]
  424598:	b	424660 <wcrtomb@plt+0x21d50>
  42459c:	ldr	x8, [sp, #8]
  4245a0:	ldur	x9, [x29, #-16]
  4245a4:	str	x8, [x9, #16]
  4245a8:	ldur	x8, [x29, #-16]
  4245ac:	ldr	x8, [x8, #16]
  4245b0:	str	x8, [sp, #40]
  4245b4:	ldur	x8, [x29, #-24]
  4245b8:	str	x8, [sp, #32]
  4245bc:	ldr	x8, [sp, #32]
  4245c0:	cbz	x8, 4245e8 <wcrtomb@plt+0x21cd8>
  4245c4:	ldr	x8, [sp, #32]
  4245c8:	ldr	x9, [sp, #40]
  4245cc:	add	x10, x9, #0x8
  4245d0:	str	x10, [sp, #40]
  4245d4:	str	x8, [x9]
  4245d8:	ldr	x8, [sp, #32]
  4245dc:	ldr	x8, [x8, #16]
  4245e0:	str	x8, [sp, #32]
  4245e4:	b	4245bc <wcrtomb@plt+0x21cac>
  4245e8:	ldur	x8, [x29, #-16]
  4245ec:	ldr	x0, [x8, #16]
  4245f0:	ldur	x1, [x29, #-32]
  4245f4:	ldr	x3, [sp, #16]
  4245f8:	mov	x2, #0x8                   	// #8
  4245fc:	bl	4023a0 <qsort@plt>
  424600:	ldur	x8, [x29, #-16]
  424604:	ldr	x8, [x8, #16]
  424608:	str	x8, [sp, #40]
  42460c:	ldr	x8, [x8]
  424610:	stur	x8, [x29, #-24]
  424614:	ldur	x8, [x29, #-32]
  424618:	subs	x8, x8, #0x1
  42461c:	stur	x8, [x29, #-32]
  424620:	cbz	x8, 424648 <wcrtomb@plt+0x21d38>
  424624:	ldr	x8, [sp, #40]
  424628:	ldr	x8, [x8, #8]
  42462c:	ldr	x9, [sp, #40]
  424630:	ldr	x9, [x9]
  424634:	str	x8, [x9, #16]
  424638:	ldr	x8, [sp, #40]
  42463c:	add	x8, x8, #0x8
  424640:	str	x8, [sp, #40]
  424644:	b	424614 <wcrtomb@plt+0x21d04>
  424648:	ldr	x8, [sp, #40]
  42464c:	ldr	x8, [x8]
  424650:	mov	x9, xzr
  424654:	str	x9, [x8, #16]
  424658:	ldur	x8, [x29, #-24]
  42465c:	stur	x8, [x29, #-8]
  424660:	ldur	x0, [x29, #-8]
  424664:	ldp	x29, x30, [sp, #80]
  424668:	add	sp, sp, #0x60
  42466c:	ret
  424670:	sub	sp, sp, #0x20
  424674:	stp	x29, x30, [sp, #16]
  424678:	add	x29, sp, #0x10
  42467c:	mov	w8, #0x102                 	// #258
  424680:	str	x0, [sp]
  424684:	ldr	x9, [sp]
  424688:	ldr	w10, [x9, #72]
  42468c:	and	w8, w10, w8
  424690:	cbz	w8, 4246e4 <wcrtomb@plt+0x21dd4>
  424694:	mov	x0, #0x1f                  	// #31
  424698:	mov	x8, xzr
  42469c:	mov	x1, x8
  4246a0:	adrp	x2, 426000 <wcrtomb@plt+0x236f0>
  4246a4:	add	x2, x2, #0xbd4
  4246a8:	adrp	x3, 426000 <wcrtomb@plt+0x236f0>
  4246ac:	add	x3, x3, #0xc08
  4246b0:	adrp	x4, 402000 <mbrtowc@plt-0x280>
  4246b4:	add	x4, x4, #0x6c0
  4246b8:	bl	41e6b8 <wcrtomb@plt+0x1bda8>
  4246bc:	ldr	x8, [sp]
  4246c0:	str	x0, [x8, #88]
  4246c4:	ldr	x8, [sp]
  4246c8:	ldr	x8, [x8, #88]
  4246cc:	cbnz	x8, 4246e0 <wcrtomb@plt+0x21dd0>
  4246d0:	mov	w8, wzr
  4246d4:	and	w8, w8, #0x1
  4246d8:	sturb	w8, [x29, #-1]
  4246dc:	b	424728 <wcrtomb@plt+0x21e18>
  4246e0:	b	42471c <wcrtomb@plt+0x21e0c>
  4246e4:	mov	x0, #0x20                  	// #32
  4246e8:	bl	402450 <malloc@plt>
  4246ec:	ldr	x8, [sp]
  4246f0:	str	x0, [x8, #88]
  4246f4:	ldr	x8, [sp]
  4246f8:	ldr	x8, [x8, #88]
  4246fc:	cbnz	x8, 424710 <wcrtomb@plt+0x21e00>
  424700:	mov	w8, wzr
  424704:	and	w8, w8, #0x1
  424708:	sturb	w8, [x29, #-1]
  42470c:	b	424728 <wcrtomb@plt+0x21e18>
  424710:	ldr	x8, [sp]
  424714:	ldr	x0, [x8, #88]
  424718:	bl	43fb04 <_obstack_memory_used@@Base+0x181e4>
  42471c:	mov	w8, #0x1                   	// #1
  424720:	and	w8, w8, #0x1
  424724:	sturb	w8, [x29, #-1]
  424728:	ldurb	w8, [x29, #-1]
  42472c:	and	w0, w8, #0x1
  424730:	ldp	x29, x30, [sp, #16]
  424734:	add	sp, sp, #0x20
  424738:	ret
  42473c:	sub	sp, sp, #0x30
  424740:	stp	x29, x30, [sp, #32]
  424744:	add	x29, sp, #0x20
  424748:	mov	w8, wzr
  42474c:	mov	w9, #0x8000                	// #32768
  424750:	mov	w10, #0x4900                	// #18688
  424754:	movk	w10, #0x8, lsl #16
  424758:	stur	x0, [x29, #-8]
  42475c:	str	x1, [sp, #16]
  424760:	ldur	x11, [x29, #-8]
  424764:	ldr	w12, [x11, #72]
  424768:	tst	w12, #0x10
  42476c:	csel	w8, w9, w8, ne  // ne = any
  424770:	orr	w8, w10, w8
  424774:	str	w8, [sp, #12]
  424778:	ldur	x11, [x29, #-8]
  42477c:	ldr	w8, [x11, #72]
  424780:	and	w8, w8, #0x200
  424784:	cbz	w8, 4247a4 <wcrtomb@plt+0x21e94>
  424788:	ldur	x8, [x29, #-8]
  42478c:	ldr	w0, [x8, #44]
  424790:	ldr	x1, [sp, #16]
  424794:	ldr	w2, [sp, #12]
  424798:	bl	42034c <wcrtomb@plt+0x1da3c>
  42479c:	str	w0, [sp, #4]
  4247a0:	b	4247b4 <wcrtomb@plt+0x21ea4>
  4247a4:	ldr	x0, [sp, #16]
  4247a8:	ldr	w1, [sp, #12]
  4247ac:	bl	43fd8c <_obstack_memory_used@@Base+0x1846c>
  4247b0:	str	w0, [sp, #4]
  4247b4:	ldr	w8, [sp, #4]
  4247b8:	str	w8, [sp, #8]
  4247bc:	ldr	w0, [sp, #8]
  4247c0:	ldp	x29, x30, [sp, #32]
  4247c4:	add	sp, sp, #0x30
  4247c8:	ret
  4247cc:	sub	sp, sp, #0x20
  4247d0:	stp	x29, x30, [sp, #16]
  4247d4:	add	x29, sp, #0x10
  4247d8:	str	x0, [sp, #8]
  4247dc:	ldr	x8, [sp, #8]
  4247e0:	str	x8, [sp]
  4247e4:	cbz	x8, 424818 <wcrtomb@plt+0x21f08>
  4247e8:	ldr	x8, [sp, #8]
  4247ec:	ldr	x8, [x8, #16]
  4247f0:	str	x8, [sp, #8]
  4247f4:	ldr	x8, [sp]
  4247f8:	ldr	x8, [x8, #24]
  4247fc:	cbz	x8, 42480c <wcrtomb@plt+0x21efc>
  424800:	ldr	x8, [sp]
  424804:	ldr	x0, [x8, #24]
  424808:	bl	402580 <closedir@plt>
  42480c:	ldr	x0, [sp]
  424810:	bl	4026c0 <free@plt>
  424814:	b	4247dc <wcrtomb@plt+0x21ecc>
  424818:	ldp	x29, x30, [sp, #16]
  42481c:	add	sp, sp, #0x20
  424820:	ret
  424824:	sub	sp, sp, #0x50
  424828:	stp	x29, x30, [sp, #64]
  42482c:	add	x29, sp, #0x40
  424830:	stur	x0, [x29, #-16]
  424834:	str	wzr, [sp, #28]
  424838:	ldur	x8, [x29, #-16]
  42483c:	ldr	x8, [x8]
  424840:	cbz	x8, 4248b0 <wcrtomb@plt+0x21fa0>
  424844:	ldur	x8, [x29, #-16]
  424848:	ldr	x8, [x8]
  42484c:	str	x8, [sp, #32]
  424850:	ldr	x8, [sp, #32]
  424854:	ldr	x8, [x8, #88]
  424858:	cmp	x8, #0x0
  42485c:	cset	w9, lt  // lt = tstop
  424860:	tbnz	w9, #0, 4248a8 <wcrtomb@plt+0x21f98>
  424864:	ldr	x8, [sp, #32]
  424868:	stur	x8, [x29, #-24]
  42486c:	ldr	x8, [sp, #32]
  424870:	ldr	x8, [x8, #16]
  424874:	cbz	x8, 424888 <wcrtomb@plt+0x21f78>
  424878:	ldr	x8, [sp, #32]
  42487c:	ldr	x8, [x8, #16]
  424880:	str	x8, [sp, #16]
  424884:	b	424894 <wcrtomb@plt+0x21f84>
  424888:	ldr	x8, [sp, #32]
  42488c:	ldr	x8, [x8, #8]
  424890:	str	x8, [sp, #16]
  424894:	ldr	x8, [sp, #16]
  424898:	str	x8, [sp, #32]
  42489c:	ldur	x0, [x29, #-24]
  4248a0:	bl	4026c0 <free@plt>
  4248a4:	b	424850 <wcrtomb@plt+0x21f40>
  4248a8:	ldr	x0, [sp, #32]
  4248ac:	bl	4026c0 <free@plt>
  4248b0:	ldur	x8, [x29, #-16]
  4248b4:	ldr	x8, [x8, #8]
  4248b8:	cbz	x8, 4248c8 <wcrtomb@plt+0x21fb8>
  4248bc:	ldur	x8, [x29, #-16]
  4248c0:	ldr	x0, [x8, #8]
  4248c4:	bl	4247cc <wcrtomb@plt+0x21ebc>
  4248c8:	ldur	x8, [x29, #-16]
  4248cc:	ldr	x0, [x8, #16]
  4248d0:	bl	4026c0 <free@plt>
  4248d4:	ldur	x8, [x29, #-16]
  4248d8:	ldr	x0, [x8, #32]
  4248dc:	bl	4026c0 <free@plt>
  4248e0:	ldur	x8, [x29, #-16]
  4248e4:	ldr	w9, [x8, #72]
  4248e8:	and	w9, w9, #0x200
  4248ec:	cbz	w9, 424928 <wcrtomb@plt+0x22018>
  4248f0:	ldur	x8, [x29, #-16]
  4248f4:	ldr	w9, [x8, #44]
  4248f8:	mov	w10, wzr
  4248fc:	cmp	w10, w9
  424900:	cset	w9, gt
  424904:	tbnz	w9, #0, 424924 <wcrtomb@plt+0x22014>
  424908:	ldur	x8, [x29, #-16]
  42490c:	ldr	w0, [x8, #44]
  424910:	bl	4025a0 <close@plt>
  424914:	cbz	w0, 424924 <wcrtomb@plt+0x22014>
  424918:	bl	402870 <__errno_location@plt>
  42491c:	ldr	w8, [x0]
  424920:	str	w8, [sp, #28]
  424924:	b	424978 <wcrtomb@plt+0x22068>
  424928:	ldur	x8, [x29, #-16]
  42492c:	ldr	w9, [x8, #72]
  424930:	and	w9, w9, #0x4
  424934:	cbnz	w9, 424978 <wcrtomb@plt+0x22068>
  424938:	ldur	x8, [x29, #-16]
  42493c:	ldr	w0, [x8, #40]
  424940:	bl	402340 <fchdir@plt>
  424944:	cbz	w0, 424954 <wcrtomb@plt+0x22044>
  424948:	bl	402870 <__errno_location@plt>
  42494c:	ldr	w8, [x0]
  424950:	str	w8, [sp, #28]
  424954:	ldur	x8, [x29, #-16]
  424958:	ldr	w0, [x8, #40]
  42495c:	bl	4025a0 <close@plt>
  424960:	cbz	w0, 424978 <wcrtomb@plt+0x22068>
  424964:	ldr	w8, [sp, #28]
  424968:	cbnz	w8, 424978 <wcrtomb@plt+0x22068>
  42496c:	bl	402870 <__errno_location@plt>
  424970:	ldr	w8, [x0]
  424974:	str	w8, [sp, #28]
  424978:	ldur	x8, [x29, #-16]
  42497c:	add	x0, x8, #0x60
  424980:	bl	4249e8 <wcrtomb@plt+0x220d8>
  424984:	ldur	x8, [x29, #-16]
  424988:	ldr	x8, [x8, #80]
  42498c:	cbz	x8, 42499c <wcrtomb@plt+0x2208c>
  424990:	ldur	x8, [x29, #-16]
  424994:	ldr	x0, [x8, #80]
  424998:	bl	41ebc0 <wcrtomb@plt+0x1c2b0>
  42499c:	ldur	x0, [x29, #-16]
  4249a0:	bl	424a44 <wcrtomb@plt+0x22134>
  4249a4:	ldur	x0, [x29, #-16]
  4249a8:	bl	4026c0 <free@plt>
  4249ac:	ldr	w8, [sp, #28]
  4249b0:	cbz	w8, 4249d4 <wcrtomb@plt+0x220c4>
  4249b4:	ldr	w8, [sp, #28]
  4249b8:	str	w8, [sp, #12]
  4249bc:	bl	402870 <__errno_location@plt>
  4249c0:	ldr	w8, [sp, #12]
  4249c4:	str	w8, [x0]
  4249c8:	mov	w9, #0xffffffff            	// #-1
  4249cc:	stur	w9, [x29, #-4]
  4249d0:	b	4249d8 <wcrtomb@plt+0x220c8>
  4249d4:	stur	wzr, [x29, #-4]
  4249d8:	ldur	w0, [x29, #-4]
  4249dc:	ldp	x29, x30, [sp, #64]
  4249e0:	add	sp, sp, #0x50
  4249e4:	ret
  4249e8:	sub	sp, sp, #0x20
  4249ec:	stp	x29, x30, [sp, #16]
  4249f0:	add	x29, sp, #0x10
  4249f4:	str	x0, [sp, #8]
  4249f8:	ldr	x0, [sp, #8]
  4249fc:	bl	43ffc4 <_obstack_memory_used@@Base+0x186a4>
  424a00:	eor	w8, w0, #0x1
  424a04:	tbnz	w8, #0, 424a0c <wcrtomb@plt+0x220fc>
  424a08:	b	424a38 <wcrtomb@plt+0x22128>
  424a0c:	ldr	x0, [sp, #8]
  424a10:	bl	4400b0 <_obstack_memory_used@@Base+0x18790>
  424a14:	str	w0, [sp, #4]
  424a18:	ldr	w8, [sp, #4]
  424a1c:	mov	w9, wzr
  424a20:	cmp	w9, w8
  424a24:	cset	w8, gt
  424a28:	tbnz	w8, #0, 424a34 <wcrtomb@plt+0x22124>
  424a2c:	ldr	w0, [sp, #4]
  424a30:	bl	4025a0 <close@plt>
  424a34:	b	4249f8 <wcrtomb@plt+0x220e8>
  424a38:	ldp	x29, x30, [sp, #16]
  424a3c:	add	sp, sp, #0x20
  424a40:	ret
  424a44:	sub	sp, sp, #0x20
  424a48:	stp	x29, x30, [sp, #16]
  424a4c:	add	x29, sp, #0x10
  424a50:	mov	w8, #0x102                 	// #258
  424a54:	str	x0, [sp, #8]
  424a58:	ldr	x9, [sp, #8]
  424a5c:	ldr	w10, [x9, #72]
  424a60:	and	w8, w10, w8
  424a64:	cbz	w8, 424a84 <wcrtomb@plt+0x22174>
  424a68:	ldr	x8, [sp, #8]
  424a6c:	ldr	x8, [x8, #88]
  424a70:	cbz	x8, 424a80 <wcrtomb@plt+0x22170>
  424a74:	ldr	x8, [sp, #8]
  424a78:	ldr	x0, [x8, #88]
  424a7c:	bl	41ebc0 <wcrtomb@plt+0x1c2b0>
  424a80:	b	424a90 <wcrtomb@plt+0x22180>
  424a84:	ldr	x8, [sp, #8]
  424a88:	ldr	x0, [x8, #88]
  424a8c:	bl	4026c0 <free@plt>
  424a90:	ldp	x29, x30, [sp, #16]
  424a94:	add	sp, sp, #0x20
  424a98:	ret
  424a9c:	sub	sp, sp, #0x70
  424aa0:	stp	x29, x30, [sp, #96]
  424aa4:	add	x29, sp, #0x60
  424aa8:	mov	w8, #0x0                   	// #0
  424aac:	stur	x0, [x29, #-16]
  424ab0:	ldur	x9, [x29, #-16]
  424ab4:	ldr	x9, [x9]
  424ab8:	str	w8, [sp, #36]
  424abc:	cbz	x9, 424ad0 <wcrtomb@plt+0x221c0>
  424ac0:	ldur	x8, [x29, #-16]
  424ac4:	ldr	w9, [x8, #72]
  424ac8:	and	w9, w9, #0x2000
  424acc:	cbz	w9, 424adc <wcrtomb@plt+0x221cc>
  424ad0:	mov	x8, xzr
  424ad4:	stur	x8, [x29, #-8]
  424ad8:	b	4253ec <wcrtomb@plt+0x22adc>
  424adc:	ldur	x8, [x29, #-16]
  424ae0:	ldr	x8, [x8]
  424ae4:	stur	x8, [x29, #-24]
  424ae8:	ldur	x8, [x29, #-24]
  424aec:	ldrh	w9, [x8, #112]
  424af0:	sturh	w9, [x29, #-34]
  424af4:	ldur	x8, [x29, #-24]
  424af8:	mov	w9, #0x3                   	// #3
  424afc:	strh	w9, [x8, #112]
  424b00:	ldurh	w9, [x29, #-34]
  424b04:	cmp	w9, #0x1
  424b08:	b.ne	424b34 <wcrtomb@plt+0x22224>  // b.any
  424b0c:	ldur	x0, [x29, #-16]
  424b10:	ldur	x1, [x29, #-24]
  424b14:	mov	w8, wzr
  424b18:	and	w2, w8, #0x1
  424b1c:	bl	424274 <wcrtomb@plt+0x21964>
  424b20:	ldur	x9, [x29, #-24]
  424b24:	strh	w0, [x9, #108]
  424b28:	ldur	x9, [x29, #-24]
  424b2c:	stur	x9, [x29, #-8]
  424b30:	b	4253ec <wcrtomb@plt+0x22adc>
  424b34:	ldurh	w8, [x29, #-34]
  424b38:	cmp	w8, #0x2
  424b3c:	b.ne	424bf4 <wcrtomb@plt+0x222e4>  // b.any
  424b40:	ldur	x8, [x29, #-24]
  424b44:	ldrh	w9, [x8, #108]
  424b48:	cmp	w9, #0xc
  424b4c:	b.eq	424b60 <wcrtomb@plt+0x22250>  // b.none
  424b50:	ldur	x8, [x29, #-24]
  424b54:	ldrh	w9, [x8, #108]
  424b58:	cmp	w9, #0xd
  424b5c:	b.ne	424bf4 <wcrtomb@plt+0x222e4>  // b.any
  424b60:	ldur	x0, [x29, #-16]
  424b64:	ldur	x1, [x29, #-24]
  424b68:	mov	w8, #0x1                   	// #1
  424b6c:	and	w2, w8, #0x1
  424b70:	bl	424274 <wcrtomb@plt+0x21964>
  424b74:	ldur	x9, [x29, #-24]
  424b78:	strh	w0, [x9, #108]
  424b7c:	ldur	x9, [x29, #-24]
  424b80:	ldrh	w8, [x9, #108]
  424b84:	cmp	w8, #0x1
  424b88:	b.ne	424bf0 <wcrtomb@plt+0x222e0>  // b.any
  424b8c:	ldur	x8, [x29, #-16]
  424b90:	ldr	w9, [x8, #72]
  424b94:	and	w9, w9, #0x4
  424b98:	cbnz	w9, 424bf0 <wcrtomb@plt+0x222e0>
  424b9c:	ldur	x0, [x29, #-16]
  424ba0:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  424ba4:	add	x1, x1, #0xd5f
  424ba8:	bl	42473c <wcrtomb@plt+0x21e2c>
  424bac:	ldur	x8, [x29, #-24]
  424bb0:	str	w0, [x8, #68]
  424bb4:	cmp	w0, #0x0
  424bb8:	cset	w9, ge  // ge = tcont
  424bbc:	tbnz	w9, #0, 424be0 <wcrtomb@plt+0x222d0>
  424bc0:	bl	402870 <__errno_location@plt>
  424bc4:	ldr	w8, [x0]
  424bc8:	ldur	x9, [x29, #-24]
  424bcc:	str	w8, [x9, #64]
  424bd0:	ldur	x9, [x29, #-24]
  424bd4:	mov	w8, #0x7                   	// #7
  424bd8:	strh	w8, [x9, #108]
  424bdc:	b	424bf0 <wcrtomb@plt+0x222e0>
  424be0:	ldur	x8, [x29, #-24]
  424be4:	ldrh	w9, [x8, #110]
  424be8:	orr	w9, w9, #0x2
  424bec:	strh	w9, [x8, #110]
  424bf0:	b	425060 <wcrtomb@plt+0x22750>
  424bf4:	ldur	x8, [x29, #-24]
  424bf8:	ldrh	w9, [x8, #108]
  424bfc:	cmp	w9, #0x1
  424c00:	b.ne	424df4 <wcrtomb@plt+0x224e4>  // b.any
  424c04:	ldurh	w8, [x29, #-34]
  424c08:	cmp	w8, #0x4
  424c0c:	b.eq	424c38 <wcrtomb@plt+0x22328>  // b.none
  424c10:	ldur	x8, [x29, #-16]
  424c14:	ldr	w9, [x8, #72]
  424c18:	and	w9, w9, #0x40
  424c1c:	cbz	w9, 424c9c <wcrtomb@plt+0x2238c>
  424c20:	ldur	x8, [x29, #-24]
  424c24:	ldr	x8, [x8, #120]
  424c28:	ldur	x9, [x29, #-16]
  424c2c:	ldr	x9, [x9, #24]
  424c30:	cmp	x8, x9
  424c34:	b.eq	424c9c <wcrtomb@plt+0x2238c>  // b.none
  424c38:	ldur	x8, [x29, #-24]
  424c3c:	ldrh	w9, [x8, #110]
  424c40:	and	w9, w9, #0x2
  424c44:	cbz	w9, 424c54 <wcrtomb@plt+0x22344>
  424c48:	ldur	x8, [x29, #-24]
  424c4c:	ldr	w0, [x8, #68]
  424c50:	bl	4025a0 <close@plt>
  424c54:	ldur	x8, [x29, #-16]
  424c58:	ldr	x8, [x8, #8]
  424c5c:	cbz	x8, 424c78 <wcrtomb@plt+0x22368>
  424c60:	ldur	x8, [x29, #-16]
  424c64:	ldr	x0, [x8, #8]
  424c68:	bl	4247cc <wcrtomb@plt+0x21ebc>
  424c6c:	ldur	x8, [x29, #-16]
  424c70:	mov	x9, xzr
  424c74:	str	x9, [x8, #8]
  424c78:	ldur	x8, [x29, #-24]
  424c7c:	mov	w9, #0x6                   	// #6
  424c80:	strh	w9, [x8, #108]
  424c84:	ldur	x0, [x29, #-16]
  424c88:	ldur	x1, [x29, #-24]
  424c8c:	bl	4253fc <wcrtomb@plt+0x22aec>
  424c90:	ldur	x8, [x29, #-24]
  424c94:	stur	x8, [x29, #-8]
  424c98:	b	4253ec <wcrtomb@plt+0x22adc>
  424c9c:	ldur	x8, [x29, #-16]
  424ca0:	ldr	x8, [x8, #8]
  424ca4:	cbz	x8, 424ce0 <wcrtomb@plt+0x223d0>
  424ca8:	ldur	x8, [x29, #-16]
  424cac:	ldr	w9, [x8, #72]
  424cb0:	and	w9, w9, #0x1000
  424cb4:	cbz	w9, 424ce0 <wcrtomb@plt+0x223d0>
  424cb8:	ldur	x8, [x29, #-16]
  424cbc:	ldr	w9, [x8, #72]
  424cc0:	and	w9, w9, #0xffffefff
  424cc4:	str	w9, [x8, #72]
  424cc8:	ldur	x8, [x29, #-16]
  424ccc:	ldr	x0, [x8, #8]
  424cd0:	bl	4247cc <wcrtomb@plt+0x21ebc>
  424cd4:	ldur	x8, [x29, #-16]
  424cd8:	mov	x10, xzr
  424cdc:	str	x10, [x8, #8]
  424ce0:	ldur	x8, [x29, #-16]
  424ce4:	ldr	x8, [x8, #8]
  424ce8:	cbz	x8, 424d64 <wcrtomb@plt+0x22454>
  424cec:	ldur	x0, [x29, #-16]
  424cf0:	ldur	x1, [x29, #-24]
  424cf4:	ldur	x8, [x29, #-24]
  424cf8:	ldr	x3, [x8, #48]
  424cfc:	mov	w2, #0xffffffff            	// #-1
  424d00:	bl	425520 <wcrtomb@plt+0x22c10>
  424d04:	cbz	w0, 424d60 <wcrtomb@plt+0x22450>
  424d08:	bl	402870 <__errno_location@plt>
  424d0c:	ldr	w8, [x0]
  424d10:	ldur	x9, [x29, #-24]
  424d14:	str	w8, [x9, #64]
  424d18:	ldur	x9, [x29, #-24]
  424d1c:	ldrh	w8, [x9, #110]
  424d20:	orr	w8, w8, #0x1
  424d24:	strh	w8, [x9, #110]
  424d28:	ldur	x9, [x29, #-16]
  424d2c:	ldr	x9, [x9, #8]
  424d30:	stur	x9, [x29, #-24]
  424d34:	ldur	x8, [x29, #-24]
  424d38:	cbz	x8, 424d60 <wcrtomb@plt+0x22450>
  424d3c:	ldur	x8, [x29, #-24]
  424d40:	ldr	x8, [x8, #8]
  424d44:	ldr	x8, [x8, #48]
  424d48:	ldur	x9, [x29, #-24]
  424d4c:	str	x8, [x9, #48]
  424d50:	ldur	x8, [x29, #-24]
  424d54:	ldr	x8, [x8, #16]
  424d58:	stur	x8, [x29, #-24]
  424d5c:	b	424d34 <wcrtomb@plt+0x22424>
  424d60:	b	424dd8 <wcrtomb@plt+0x224c8>
  424d64:	ldur	x0, [x29, #-16]
  424d68:	mov	w1, #0x3                   	// #3
  424d6c:	bl	4257c0 <wcrtomb@plt+0x22eb0>
  424d70:	ldur	x8, [x29, #-16]
  424d74:	str	x0, [x8, #8]
  424d78:	cbnz	x0, 424dd8 <wcrtomb@plt+0x224c8>
  424d7c:	ldur	x8, [x29, #-16]
  424d80:	ldr	w9, [x8, #72]
  424d84:	and	w9, w9, #0x2000
  424d88:	cbz	w9, 424d98 <wcrtomb@plt+0x22488>
  424d8c:	mov	x8, xzr
  424d90:	stur	x8, [x29, #-8]
  424d94:	b	4253ec <wcrtomb@plt+0x22adc>
  424d98:	ldur	x8, [x29, #-24]
  424d9c:	ldr	w9, [x8, #64]
  424da0:	cbz	w9, 424dc0 <wcrtomb@plt+0x224b0>
  424da4:	ldur	x8, [x29, #-24]
  424da8:	ldrh	w9, [x8, #108]
  424dac:	cmp	w9, #0x4
  424db0:	b.eq	424dc0 <wcrtomb@plt+0x224b0>  // b.none
  424db4:	ldur	x8, [x29, #-24]
  424db8:	mov	w9, #0x7                   	// #7
  424dbc:	strh	w9, [x8, #108]
  424dc0:	ldur	x0, [x29, #-16]
  424dc4:	ldur	x1, [x29, #-24]
  424dc8:	bl	4253fc <wcrtomb@plt+0x22aec>
  424dcc:	ldur	x8, [x29, #-24]
  424dd0:	stur	x8, [x29, #-8]
  424dd4:	b	4253ec <wcrtomb@plt+0x22adc>
  424dd8:	ldur	x8, [x29, #-16]
  424ddc:	ldr	x8, [x8, #8]
  424de0:	stur	x8, [x29, #-24]
  424de4:	ldur	x8, [x29, #-16]
  424de8:	mov	x9, xzr
  424dec:	str	x9, [x8, #8]
  424df0:	b	424fc4 <wcrtomb@plt+0x226b4>
  424df4:	ldur	x8, [x29, #-24]
  424df8:	stur	x8, [x29, #-32]
  424dfc:	ldur	x8, [x29, #-24]
  424e00:	ldr	x8, [x8, #16]
  424e04:	cbnz	x8, 424e8c <wcrtomb@plt+0x2257c>
  424e08:	ldur	x8, [x29, #-24]
  424e0c:	ldr	x8, [x8, #8]
  424e10:	ldr	x8, [x8, #24]
  424e14:	cbz	x8, 424e8c <wcrtomb@plt+0x2257c>
  424e18:	ldur	x8, [x29, #-32]
  424e1c:	ldr	x8, [x8, #8]
  424e20:	stur	x8, [x29, #-24]
  424e24:	ldur	x8, [x29, #-24]
  424e28:	ldur	x9, [x29, #-16]
  424e2c:	str	x8, [x9]
  424e30:	ldur	x8, [x29, #-16]
  424e34:	ldr	x8, [x8, #32]
  424e38:	ldur	x9, [x29, #-24]
  424e3c:	ldr	x9, [x9, #72]
  424e40:	add	x8, x8, x9
  424e44:	mov	w10, #0x0                   	// #0
  424e48:	strb	w10, [x8]
  424e4c:	ldur	x0, [x29, #-16]
  424e50:	mov	w1, #0x3                   	// #3
  424e54:	bl	4257c0 <wcrtomb@plt+0x22eb0>
  424e58:	stur	x0, [x29, #-24]
  424e5c:	cbnz	x0, 424e80 <wcrtomb@plt+0x22570>
  424e60:	ldur	x8, [x29, #-16]
  424e64:	ldr	w9, [x8, #72]
  424e68:	and	w9, w9, #0x2000
  424e6c:	cbz	w9, 424e7c <wcrtomb@plt+0x2256c>
  424e70:	mov	x8, xzr
  424e74:	stur	x8, [x29, #-8]
  424e78:	b	4253ec <wcrtomb@plt+0x22adc>
  424e7c:	b	4251d0 <wcrtomb@plt+0x228c0>
  424e80:	ldur	x0, [x29, #-32]
  424e84:	bl	4026c0 <free@plt>
  424e88:	b	424fc4 <wcrtomb@plt+0x226b4>
  424e8c:	ldur	x8, [x29, #-24]
  424e90:	ldr	x8, [x8, #16]
  424e94:	stur	x8, [x29, #-24]
  424e98:	cbz	x8, 4251d0 <wcrtomb@plt+0x228c0>
  424e9c:	ldur	x8, [x29, #-24]
  424ea0:	ldur	x9, [x29, #-16]
  424ea4:	str	x8, [x9]
  424ea8:	ldur	x0, [x29, #-32]
  424eac:	bl	4026c0 <free@plt>
  424eb0:	ldur	x8, [x29, #-24]
  424eb4:	ldr	x8, [x8, #88]
  424eb8:	cbnz	x8, 424f04 <wcrtomb@plt+0x225f4>
  424ebc:	ldur	x0, [x29, #-16]
  424ec0:	bl	426464 <wcrtomb@plt+0x23b54>
  424ec4:	cbz	w0, 424ee4 <wcrtomb@plt+0x225d4>
  424ec8:	ldur	x8, [x29, #-16]
  424ecc:	ldr	w9, [x8, #72]
  424ed0:	orr	w9, w9, #0x2000
  424ed4:	str	w9, [x8, #72]
  424ed8:	mov	x8, xzr
  424edc:	stur	x8, [x29, #-8]
  424ee0:	b	4253ec <wcrtomb@plt+0x22adc>
  424ee4:	ldur	x0, [x29, #-16]
  424ee8:	bl	424a44 <wcrtomb@plt+0x22134>
  424eec:	ldur	x0, [x29, #-16]
  424ef0:	ldur	x1, [x29, #-24]
  424ef4:	bl	426568 <wcrtomb@plt+0x23c58>
  424ef8:	ldur	x0, [x29, #-16]
  424efc:	bl	424670 <wcrtomb@plt+0x21d60>
  424f00:	b	425060 <wcrtomb@plt+0x22750>
  424f04:	ldur	x8, [x29, #-24]
  424f08:	ldrh	w9, [x8, #112]
  424f0c:	cmp	w9, #0x4
  424f10:	b.ne	424f18 <wcrtomb@plt+0x22608>  // b.any
  424f14:	b	424df4 <wcrtomb@plt+0x224e4>
  424f18:	ldur	x8, [x29, #-24]
  424f1c:	ldrh	w9, [x8, #112]
  424f20:	cmp	w9, #0x2
  424f24:	b.ne	424fc4 <wcrtomb@plt+0x226b4>  // b.any
  424f28:	ldur	x0, [x29, #-16]
  424f2c:	ldur	x1, [x29, #-24]
  424f30:	mov	w8, #0x1                   	// #1
  424f34:	and	w2, w8, #0x1
  424f38:	bl	424274 <wcrtomb@plt+0x21964>
  424f3c:	ldur	x9, [x29, #-24]
  424f40:	strh	w0, [x9, #108]
  424f44:	ldur	x9, [x29, #-24]
  424f48:	ldrh	w8, [x9, #108]
  424f4c:	cmp	w8, #0x1
  424f50:	b.ne	424fb8 <wcrtomb@plt+0x226a8>  // b.any
  424f54:	ldur	x8, [x29, #-16]
  424f58:	ldr	w9, [x8, #72]
  424f5c:	and	w9, w9, #0x4
  424f60:	cbnz	w9, 424fb8 <wcrtomb@plt+0x226a8>
  424f64:	ldur	x0, [x29, #-16]
  424f68:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  424f6c:	add	x1, x1, #0xd5f
  424f70:	bl	42473c <wcrtomb@plt+0x21e2c>
  424f74:	ldur	x8, [x29, #-24]
  424f78:	str	w0, [x8, #68]
  424f7c:	cmp	w0, #0x0
  424f80:	cset	w9, ge  // ge = tcont
  424f84:	tbnz	w9, #0, 424fa8 <wcrtomb@plt+0x22698>
  424f88:	bl	402870 <__errno_location@plt>
  424f8c:	ldr	w8, [x0]
  424f90:	ldur	x9, [x29, #-24]
  424f94:	str	w8, [x9, #64]
  424f98:	ldur	x9, [x29, #-24]
  424f9c:	mov	w8, #0x7                   	// #7
  424fa0:	strh	w8, [x9, #108]
  424fa4:	b	424fb8 <wcrtomb@plt+0x226a8>
  424fa8:	ldur	x8, [x29, #-24]
  424fac:	ldrh	w9, [x8, #110]
  424fb0:	orr	w9, w9, #0x2
  424fb4:	strh	w9, [x8, #110]
  424fb8:	ldur	x8, [x29, #-24]
  424fbc:	mov	w9, #0x3                   	// #3
  424fc0:	strh	w9, [x8, #112]
  424fc4:	ldur	x8, [x29, #-16]
  424fc8:	ldr	x8, [x8, #32]
  424fcc:	ldur	x9, [x29, #-24]
  424fd0:	ldr	x9, [x9, #8]
  424fd4:	ldr	x9, [x9, #56]
  424fd8:	ldur	x10, [x29, #-24]
  424fdc:	ldr	x10, [x10, #8]
  424fe0:	ldr	x10, [x10, #72]
  424fe4:	subs	x10, x10, #0x1
  424fe8:	ldrb	w11, [x9, x10]
  424fec:	cmp	w11, #0x2f
  424ff0:	str	x8, [sp, #24]
  424ff4:	b.ne	425010 <wcrtomb@plt+0x22700>  // b.any
  424ff8:	ldur	x8, [x29, #-24]
  424ffc:	ldr	x8, [x8, #8]
  425000:	ldr	x8, [x8, #72]
  425004:	subs	x8, x8, #0x1
  425008:	str	x8, [sp, #16]
  42500c:	b	425020 <wcrtomb@plt+0x22710>
  425010:	ldur	x8, [x29, #-24]
  425014:	ldr	x8, [x8, #8]
  425018:	ldr	x8, [x8, #72]
  42501c:	str	x8, [sp, #16]
  425020:	ldr	x8, [sp, #16]
  425024:	ldr	x9, [sp, #24]
  425028:	add	x8, x9, x8
  42502c:	str	x8, [sp, #48]
  425030:	ldr	x8, [sp, #48]
  425034:	add	x10, x8, #0x1
  425038:	str	x10, [sp, #48]
  42503c:	mov	w11, #0x2f                  	// #47
  425040:	strb	w11, [x8]
  425044:	ldr	x0, [sp, #48]
  425048:	ldur	x8, [x29, #-24]
  42504c:	add	x1, x8, #0xf8
  425050:	ldur	x8, [x29, #-24]
  425054:	ldr	x8, [x8, #96]
  425058:	add	x2, x8, #0x1
  42505c:	bl	4022b0 <memmove@plt>
  425060:	ldur	x8, [x29, #-24]
  425064:	ldur	x9, [x29, #-16]
  425068:	str	x8, [x9]
  42506c:	ldur	x8, [x29, #-24]
  425070:	ldrh	w10, [x8, #108]
  425074:	cmp	w10, #0xb
  425078:	b.ne	425170 <wcrtomb@plt+0x22860>  // b.any
  42507c:	ldur	x8, [x29, #-24]
  425080:	ldr	x8, [x8, #168]
  425084:	cmp	x8, #0x2
  425088:	b.ne	42515c <wcrtomb@plt+0x2284c>  // b.any
  42508c:	ldur	x8, [x29, #-24]
  425090:	ldr	x8, [x8, #8]
  425094:	str	x8, [sp, #40]
  425098:	ldr	x8, [sp, #40]
  42509c:	ldr	w9, [x8, #104]
  4250a0:	cbnz	w9, 4250e0 <wcrtomb@plt+0x227d0>
  4250a4:	ldur	x8, [x29, #-16]
  4250a8:	ldr	w9, [x8, #72]
  4250ac:	and	w9, w9, #0x8
  4250b0:	cbz	w9, 4250e0 <wcrtomb@plt+0x227d0>
  4250b4:	ldur	x8, [x29, #-16]
  4250b8:	ldr	w9, [x8, #72]
  4250bc:	and	w9, w9, #0x10
  4250c0:	cbz	w9, 4250e0 <wcrtomb@plt+0x227d0>
  4250c4:	ldr	x0, [sp, #40]
  4250c8:	ldur	x8, [x29, #-16]
  4250cc:	ldr	w1, [x8, #44]
  4250d0:	bl	42664c <wcrtomb@plt+0x23d3c>
  4250d4:	cmp	w0, #0x2
  4250d8:	b.ne	4250e0 <wcrtomb@plt+0x227d0>  // b.any
  4250dc:	b	425158 <wcrtomb@plt+0x22848>
  4250e0:	ldur	x0, [x29, #-16]
  4250e4:	ldur	x1, [x29, #-24]
  4250e8:	mov	w8, wzr
  4250ec:	and	w2, w8, #0x1
  4250f0:	bl	424274 <wcrtomb@plt+0x21964>
  4250f4:	ldur	x9, [x29, #-24]
  4250f8:	strh	w0, [x9, #108]
  4250fc:	ldur	x9, [x29, #-24]
  425100:	ldr	w8, [x9, #136]
  425104:	and	w8, w8, #0xf000
  425108:	cmp	w8, #0x4, lsl #12
  42510c:	b.ne	425158 <wcrtomb@plt+0x22848>  // b.any
  425110:	ldur	x8, [x29, #-24]
  425114:	ldr	x8, [x8, #88]
  425118:	cbz	x8, 425158 <wcrtomb@plt+0x22848>
  42511c:	ldr	x8, [sp, #40]
  425120:	ldr	w9, [x8, #104]
  425124:	mov	w10, wzr
  425128:	cmp	w10, w9
  42512c:	cset	w9, cs  // cs = hs, nlast
  425130:	tbnz	w9, #0, 425158 <wcrtomb@plt+0x22848>
  425134:	ldr	x8, [sp, #40]
  425138:	ldr	w9, [x8, #104]
  42513c:	mov	w10, #0xffffffff            	// #-1
  425140:	cmp	w9, w10
  425144:	b.eq	425158 <wcrtomb@plt+0x22848>  // b.none
  425148:	ldr	x8, [sp, #40]
  42514c:	ldr	w9, [x8, #104]
  425150:	subs	w9, w9, #0x1
  425154:	str	w9, [x8, #104]
  425158:	b	425170 <wcrtomb@plt+0x22860>
  42515c:	ldur	x8, [x29, #-24]
  425160:	ldr	x8, [x8, #168]
  425164:	cmp	x8, #0x1
  425168:	b.eq	425170 <wcrtomb@plt+0x22860>  // b.none
  42516c:	bl	402610 <abort@plt>
  425170:	ldur	x8, [x29, #-24]
  425174:	ldrh	w9, [x8, #108]
  425178:	cmp	w9, #0x1
  42517c:	b.ne	4251c4 <wcrtomb@plt+0x228b4>  // b.any
  425180:	ldur	x8, [x29, #-24]
  425184:	ldr	x8, [x8, #88]
  425188:	cbnz	x8, 42519c <wcrtomb@plt+0x2288c>
  42518c:	ldur	x8, [x29, #-24]
  425190:	ldr	x8, [x8, #120]
  425194:	ldur	x9, [x29, #-16]
  425198:	str	x8, [x9, #24]
  42519c:	ldur	x0, [x29, #-16]
  4251a0:	ldur	x1, [x29, #-24]
  4251a4:	bl	42672c <wcrtomb@plt+0x23e1c>
  4251a8:	tbnz	w0, #0, 4251c4 <wcrtomb@plt+0x228b4>
  4251ac:	bl	402870 <__errno_location@plt>
  4251b0:	mov	w8, #0xc                   	// #12
  4251b4:	str	w8, [x0]
  4251b8:	mov	x9, xzr
  4251bc:	stur	x9, [x29, #-8]
  4251c0:	b	4253ec <wcrtomb@plt+0x22adc>
  4251c4:	ldur	x8, [x29, #-24]
  4251c8:	stur	x8, [x29, #-8]
  4251cc:	b	4253ec <wcrtomb@plt+0x22adc>
  4251d0:	ldur	x8, [x29, #-32]
  4251d4:	ldr	x8, [x8, #8]
  4251d8:	stur	x8, [x29, #-24]
  4251dc:	ldur	x8, [x29, #-24]
  4251e0:	ldur	x9, [x29, #-16]
  4251e4:	str	x8, [x9]
  4251e8:	ldur	x0, [x29, #-32]
  4251ec:	bl	4026c0 <free@plt>
  4251f0:	ldur	x8, [x29, #-24]
  4251f4:	ldr	x8, [x8, #88]
  4251f8:	mov	x9, #0xffffffffffffffff    	// #-1
  4251fc:	cmp	x8, x9
  425200:	b.ne	425228 <wcrtomb@plt+0x22918>  // b.any
  425204:	ldur	x0, [x29, #-24]
  425208:	bl	4026c0 <free@plt>
  42520c:	bl	402870 <__errno_location@plt>
  425210:	str	wzr, [x0]
  425214:	ldur	x8, [x29, #-16]
  425218:	mov	x9, xzr
  42521c:	str	x9, [x8]
  425220:	stur	x9, [x29, #-8]
  425224:	b	4253ec <wcrtomb@plt+0x22adc>
  425228:	ldur	x8, [x29, #-24]
  42522c:	ldrh	w9, [x8, #108]
  425230:	cmp	w9, #0xb
  425234:	b.ne	42523c <wcrtomb@plt+0x2292c>  // b.any
  425238:	bl	402610 <abort@plt>
  42523c:	ldur	x8, [x29, #-16]
  425240:	ldr	x8, [x8, #32]
  425244:	ldur	x9, [x29, #-24]
  425248:	ldr	x9, [x9, #72]
  42524c:	add	x8, x8, x9
  425250:	mov	w10, #0x0                   	// #0
  425254:	strb	w10, [x8]
  425258:	ldur	x8, [x29, #-24]
  42525c:	ldr	x8, [x8, #88]
  425260:	cbnz	x8, 425294 <wcrtomb@plt+0x22984>
  425264:	ldur	x0, [x29, #-16]
  425268:	bl	426464 <wcrtomb@plt+0x23b54>
  42526c:	cbz	w0, 425290 <wcrtomb@plt+0x22980>
  425270:	bl	402870 <__errno_location@plt>
  425274:	ldr	w8, [x0]
  425278:	ldur	x9, [x29, #-24]
  42527c:	str	w8, [x9, #64]
  425280:	ldur	x9, [x29, #-16]
  425284:	ldr	w8, [x9, #72]
  425288:	orr	w8, w8, #0x2000
  42528c:	str	w8, [x9, #72]
  425290:	b	425378 <wcrtomb@plt+0x22a68>
  425294:	ldur	x8, [x29, #-24]
  425298:	ldrh	w9, [x8, #110]
  42529c:	and	w9, w9, #0x2
  4252a0:	cbz	w9, 425328 <wcrtomb@plt+0x22a18>
  4252a4:	ldur	x8, [x29, #-16]
  4252a8:	ldr	w9, [x8, #72]
  4252ac:	and	w9, w9, #0x4
  4252b0:	cbnz	w9, 425318 <wcrtomb@plt+0x22a08>
  4252b4:	ldur	x8, [x29, #-16]
  4252b8:	ldr	w9, [x8, #72]
  4252bc:	and	w9, w9, #0x200
  4252c0:	cbz	w9, 4252e8 <wcrtomb@plt+0x229d8>
  4252c4:	ldur	x0, [x29, #-16]
  4252c8:	ldur	x8, [x29, #-24]
  4252cc:	ldr	w1, [x8, #68]
  4252d0:	mov	w9, #0x1                   	// #1
  4252d4:	and	w2, w9, #0x1
  4252d8:	bl	426868 <wcrtomb@plt+0x23f58>
  4252dc:	ldr	w9, [sp, #36]
  4252e0:	tbnz	w9, #0, 4252f8 <wcrtomb@plt+0x229e8>
  4252e4:	b	425318 <wcrtomb@plt+0x22a08>
  4252e8:	ldur	x8, [x29, #-24]
  4252ec:	ldr	w0, [x8, #68]
  4252f0:	bl	402340 <fchdir@plt>
  4252f4:	cbz	w0, 425318 <wcrtomb@plt+0x22a08>
  4252f8:	bl	402870 <__errno_location@plt>
  4252fc:	ldr	w8, [x0]
  425300:	ldur	x9, [x29, #-24]
  425304:	str	w8, [x9, #64]
  425308:	ldur	x9, [x29, #-16]
  42530c:	ldr	w8, [x9, #72]
  425310:	orr	w8, w8, #0x2000
  425314:	str	w8, [x9, #72]
  425318:	ldur	x8, [x29, #-24]
  42531c:	ldr	w0, [x8, #68]
  425320:	bl	4025a0 <close@plt>
  425324:	b	425378 <wcrtomb@plt+0x22a68>
  425328:	ldur	x8, [x29, #-24]
  42532c:	ldrh	w9, [x8, #110]
  425330:	and	w9, w9, #0x1
  425334:	cbnz	w9, 425378 <wcrtomb@plt+0x22a68>
  425338:	ldur	x0, [x29, #-16]
  42533c:	ldur	x8, [x29, #-24]
  425340:	ldr	x1, [x8, #8]
  425344:	mov	w2, #0xffffffff            	// #-1
  425348:	adrp	x3, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  42534c:	add	x3, x3, #0xd5e
  425350:	bl	425520 <wcrtomb@plt+0x22c10>
  425354:	cbz	w0, 425378 <wcrtomb@plt+0x22a68>
  425358:	bl	402870 <__errno_location@plt>
  42535c:	ldr	w8, [x0]
  425360:	ldur	x9, [x29, #-24]
  425364:	str	w8, [x9, #64]
  425368:	ldur	x9, [x29, #-16]
  42536c:	ldr	w8, [x9, #72]
  425370:	orr	w8, w8, #0x2000
  425374:	str	w8, [x9, #72]
  425378:	ldur	x8, [x29, #-24]
  42537c:	ldrh	w9, [x8, #108]
  425380:	cmp	w9, #0x2
  425384:	b.eq	4253c0 <wcrtomb@plt+0x22ab0>  // b.none
  425388:	ldur	x8, [x29, #-24]
  42538c:	ldr	w9, [x8, #64]
  425390:	mov	w10, #0x6                   	// #6
  425394:	mov	w11, #0x7                   	// #7
  425398:	cmp	w9, #0x0
  42539c:	csel	w9, w11, w10, ne  // ne = any
  4253a0:	ldur	x8, [x29, #-24]
  4253a4:	strh	w9, [x8, #108]
  4253a8:	ldur	x8, [x29, #-24]
  4253ac:	ldr	w9, [x8, #64]
  4253b0:	cbnz	w9, 4253c0 <wcrtomb@plt+0x22ab0>
  4253b4:	ldur	x0, [x29, #-16]
  4253b8:	ldur	x1, [x29, #-24]
  4253bc:	bl	4253fc <wcrtomb@plt+0x22aec>
  4253c0:	ldur	x8, [x29, #-16]
  4253c4:	ldr	w9, [x8, #72]
  4253c8:	and	w9, w9, #0x2000
  4253cc:	cbz	w9, 4253dc <wcrtomb@plt+0x22acc>
  4253d0:	mov	x8, xzr
  4253d4:	str	x8, [sp, #8]
  4253d8:	b	4253e4 <wcrtomb@plt+0x22ad4>
  4253dc:	ldur	x8, [x29, #-24]
  4253e0:	str	x8, [sp, #8]
  4253e4:	ldr	x8, [sp, #8]
  4253e8:	stur	x8, [x29, #-8]
  4253ec:	ldur	x0, [x29, #-8]
  4253f0:	ldp	x29, x30, [sp, #96]
  4253f4:	add	sp, sp, #0x70
  4253f8:	ret
  4253fc:	sub	sp, sp, #0x50
  425400:	stp	x29, x30, [sp, #64]
  425404:	add	x29, sp, #0x40
  425408:	mov	w8, #0x102                 	// #258
  42540c:	stur	x0, [x29, #-8]
  425410:	stur	x1, [x29, #-16]
  425414:	ldur	x9, [x29, #-16]
  425418:	add	x9, x9, #0x78
  42541c:	stur	x9, [x29, #-24]
  425420:	ldur	x9, [x29, #-8]
  425424:	ldr	w10, [x9, #72]
  425428:	and	w8, w10, w8
  42542c:	cbz	w8, 425474 <wcrtomb@plt+0x22b64>
  425430:	ldur	x8, [x29, #-24]
  425434:	ldr	x8, [x8]
  425438:	add	x1, sp, #0x10
  42543c:	str	x8, [sp, #16]
  425440:	ldur	x8, [x29, #-24]
  425444:	ldr	x8, [x8, #8]
  425448:	str	x8, [sp, #24]
  42544c:	ldur	x8, [x29, #-8]
  425450:	ldr	x0, [x8, #88]
  425454:	bl	41f608 <wcrtomb@plt+0x1ccf8>
  425458:	str	x0, [sp, #8]
  42545c:	ldr	x8, [sp, #8]
  425460:	cbnz	x8, 425468 <wcrtomb@plt+0x22b58>
  425464:	bl	402610 <abort@plt>
  425468:	ldr	x0, [sp, #8]
  42546c:	bl	4026c0 <free@plt>
  425470:	b	425514 <wcrtomb@plt+0x22c04>
  425474:	ldur	x8, [x29, #-16]
  425478:	ldr	x8, [x8, #8]
  42547c:	str	x8, [sp]
  425480:	ldr	x8, [sp]
  425484:	cbz	x8, 425514 <wcrtomb@plt+0x22c04>
  425488:	ldr	x8, [sp]
  42548c:	ldr	x8, [x8, #88]
  425490:	mov	x9, xzr
  425494:	cmp	x9, x8
  425498:	cset	w10, gt
  42549c:	tbnz	w10, #0, 425514 <wcrtomb@plt+0x22c04>
  4254a0:	ldur	x8, [x29, #-8]
  4254a4:	ldr	x8, [x8, #88]
  4254a8:	ldr	x8, [x8, #16]
  4254ac:	cbnz	x8, 4254b4 <wcrtomb@plt+0x22ba4>
  4254b0:	bl	402610 <abort@plt>
  4254b4:	ldur	x8, [x29, #-8]
  4254b8:	ldr	x8, [x8, #88]
  4254bc:	ldr	x8, [x8]
  4254c0:	ldur	x9, [x29, #-24]
  4254c4:	ldr	x9, [x9, #8]
  4254c8:	cmp	x8, x9
  4254cc:	b.ne	425514 <wcrtomb@plt+0x22c04>  // b.any
  4254d0:	ldur	x8, [x29, #-8]
  4254d4:	ldr	x8, [x8, #88]
  4254d8:	ldr	x8, [x8, #8]
  4254dc:	ldur	x9, [x29, #-24]
  4254e0:	ldr	x9, [x9]
  4254e4:	cmp	x8, x9
  4254e8:	b.ne	425514 <wcrtomb@plt+0x22c04>  // b.any
  4254ec:	ldr	x8, [sp]
  4254f0:	ldr	x8, [x8, #120]
  4254f4:	ldur	x9, [x29, #-8]
  4254f8:	ldr	x9, [x9, #88]
  4254fc:	str	x8, [x9, #8]
  425500:	ldr	x8, [sp]
  425504:	ldr	x8, [x8, #128]
  425508:	ldur	x9, [x29, #-8]
  42550c:	ldr	x9, [x9, #88]
  425510:	str	x8, [x9]
  425514:	ldp	x29, x30, [sp, #64]
  425518:	add	sp, sp, #0x50
  42551c:	ret
  425520:	sub	sp, sp, #0xe0
  425524:	stp	x29, x30, [sp, #208]
  425528:	add	x29, sp, #0xd0
  42552c:	sub	x8, x29, #0x28
  425530:	str	x0, [x8, #24]
  425534:	str	x1, [x8, #16]
  425538:	stur	w2, [x29, #-28]
  42553c:	str	x3, [x8]
  425540:	ldr	x9, [x8]
  425544:	mov	w10, #0x0                   	// #0
  425548:	str	x8, [sp, #8]
  42554c:	str	w10, [sp, #4]
  425550:	cbz	x9, 425574 <wcrtomb@plt+0x22c64>
  425554:	ldr	x8, [sp, #8]
  425558:	ldr	x0, [x8]
  42555c:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  425560:	add	x1, x1, #0xd5e
  425564:	bl	4026a0 <strcmp@plt>
  425568:	cmp	w0, #0x0
  42556c:	cset	w9, eq  // eq = none
  425570:	str	w9, [sp, #4]
  425574:	ldr	w8, [sp, #4]
  425578:	and	w8, w8, #0x1
  42557c:	sturb	w8, [x29, #-45]
  425580:	ldr	x9, [sp, #8]
  425584:	ldr	x10, [x9, #24]
  425588:	ldr	w8, [x10, #72]
  42558c:	and	w8, w8, #0x4
  425590:	cbz	w8, 4255cc <wcrtomb@plt+0x22cbc>
  425594:	ldr	x8, [sp, #8]
  425598:	ldr	x9, [x8, #24]
  42559c:	ldr	w10, [x9, #72]
  4255a0:	and	w10, w10, #0x200
  4255a4:	cbz	w10, 4255c4 <wcrtomb@plt+0x22cb4>
  4255a8:	ldur	w8, [x29, #-28]
  4255ac:	mov	w9, wzr
  4255b0:	cmp	w9, w8
  4255b4:	cset	w8, gt
  4255b8:	tbnz	w8, #0, 4255c4 <wcrtomb@plt+0x22cb4>
  4255bc:	ldur	w0, [x29, #-28]
  4255c0:	bl	4025a0 <close@plt>
  4255c4:	stur	wzr, [x29, #-4]
  4255c8:	b	4257b0 <wcrtomb@plt+0x22ea0>
  4255cc:	ldur	w8, [x29, #-28]
  4255d0:	cmp	w8, #0x0
  4255d4:	cset	w8, ge  // ge = tcont
  4255d8:	tbnz	w8, #0, 42564c <wcrtomb@plt+0x22d3c>
  4255dc:	ldurb	w8, [x29, #-45]
  4255e0:	tbnz	w8, #0, 4255e8 <wcrtomb@plt+0x22cd8>
  4255e4:	b	42564c <wcrtomb@plt+0x22d3c>
  4255e8:	ldr	x8, [sp, #8]
  4255ec:	ldr	x9, [x8, #24]
  4255f0:	ldr	w10, [x9, #72]
  4255f4:	and	w10, w10, #0x200
  4255f8:	cbz	w10, 42564c <wcrtomb@plt+0x22d3c>
  4255fc:	ldr	x8, [sp, #8]
  425600:	ldr	x9, [x8, #24]
  425604:	add	x0, x9, #0x60
  425608:	bl	43ffc4 <_obstack_memory_used@@Base+0x186a4>
  42560c:	tbnz	w0, #0, 42564c <wcrtomb@plt+0x22d3c>
  425610:	ldr	x8, [sp, #8]
  425614:	ldr	x9, [x8, #24]
  425618:	add	x0, x9, #0x60
  42561c:	bl	4400b0 <_obstack_memory_used@@Base+0x18790>
  425620:	stur	w0, [x29, #-56]
  425624:	ldur	w10, [x29, #-56]
  425628:	mov	w11, wzr
  42562c:	cmp	w11, w10
  425630:	cset	w10, gt
  425634:	tbnz	w10, #0, 42564c <wcrtomb@plt+0x22d3c>
  425638:	ldur	w8, [x29, #-56]
  42563c:	stur	w8, [x29, #-28]
  425640:	mov	x9, xzr
  425644:	ldr	x10, [sp, #8]
  425648:	str	x9, [x10]
  42564c:	ldur	w8, [x29, #-28]
  425650:	stur	w8, [x29, #-52]
  425654:	ldur	w8, [x29, #-28]
  425658:	cmp	w8, #0x0
  42565c:	cset	w8, ge  // ge = tcont
  425660:	tbnz	w8, #0, 425690 <wcrtomb@plt+0x22d80>
  425664:	ldr	x8, [sp, #8]
  425668:	ldr	x0, [x8, #24]
  42566c:	ldr	x1, [x8]
  425670:	bl	42473c <wcrtomb@plt+0x21e2c>
  425674:	stur	w0, [x29, #-52]
  425678:	cmp	w0, #0x0
  42567c:	cset	w9, ge  // ge = tcont
  425680:	tbnz	w9, #0, 425690 <wcrtomb@plt+0x22d80>
  425684:	mov	w8, #0xffffffff            	// #-1
  425688:	stur	w8, [x29, #-4]
  42568c:	b	4257b0 <wcrtomb@plt+0x22ea0>
  425690:	ldr	x8, [sp, #8]
  425694:	ldr	x9, [x8, #24]
  425698:	ldr	w10, [x9, #72]
  42569c:	and	w10, w10, #0x2
  4256a0:	cbnz	w10, 4256c8 <wcrtomb@plt+0x22db8>
  4256a4:	ldr	x8, [sp, #8]
  4256a8:	ldr	x9, [x8]
  4256ac:	cbz	x9, 42572c <wcrtomb@plt+0x22e1c>
  4256b0:	ldr	x8, [sp, #8]
  4256b4:	ldr	x0, [x8]
  4256b8:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  4256bc:	add	x1, x1, #0xd5e
  4256c0:	bl	4026a0 <strcmp@plt>
  4256c4:	cbnz	w0, 42572c <wcrtomb@plt+0x22e1c>
  4256c8:	ldur	w0, [x29, #-52]
  4256cc:	add	x1, sp, #0x18
  4256d0:	bl	440bb8 <_obstack_memory_used@@Base+0x19298>
  4256d4:	cbz	w0, 4256e4 <wcrtomb@plt+0x22dd4>
  4256d8:	mov	w8, #0xffffffff            	// #-1
  4256dc:	stur	w8, [x29, #-44]
  4256e0:	b	425770 <wcrtomb@plt+0x22e60>
  4256e4:	ldr	x8, [sp, #8]
  4256e8:	ldr	x9, [x8, #16]
  4256ec:	ldr	x9, [x9, #120]
  4256f0:	ldr	x10, [sp, #24]
  4256f4:	cmp	x9, x10
  4256f8:	b.ne	425714 <wcrtomb@plt+0x22e04>  // b.any
  4256fc:	ldr	x8, [sp, #8]
  425700:	ldr	x9, [x8, #16]
  425704:	ldr	x9, [x9, #128]
  425708:	ldr	x10, [sp, #32]
  42570c:	cmp	x9, x10
  425710:	b.eq	42572c <wcrtomb@plt+0x22e1c>  // b.none
  425714:	bl	402870 <__errno_location@plt>
  425718:	mov	w8, #0x2                   	// #2
  42571c:	str	w8, [x0]
  425720:	mov	w8, #0xffffffff            	// #-1
  425724:	stur	w8, [x29, #-44]
  425728:	b	425770 <wcrtomb@plt+0x22e60>
  42572c:	ldr	x8, [sp, #8]
  425730:	ldr	x9, [x8, #24]
  425734:	ldr	w10, [x9, #72]
  425738:	and	w10, w10, #0x200
  42573c:	cbz	w10, 425764 <wcrtomb@plt+0x22e54>
  425740:	ldr	x8, [sp, #8]
  425744:	ldr	x0, [x8, #24]
  425748:	ldur	w1, [x29, #-52]
  42574c:	ldurb	w9, [x29, #-45]
  425750:	eor	w9, w9, #0x1
  425754:	and	w2, w9, #0x1
  425758:	bl	426868 <wcrtomb@plt+0x23f58>
  42575c:	stur	wzr, [x29, #-4]
  425760:	b	4257b0 <wcrtomb@plt+0x22ea0>
  425764:	ldur	w0, [x29, #-52]
  425768:	bl	402340 <fchdir@plt>
  42576c:	stur	w0, [x29, #-44]
  425770:	ldur	w8, [x29, #-28]
  425774:	cmp	w8, #0x0
  425778:	cset	w8, ge  // ge = tcont
  42577c:	tbnz	w8, #0, 4257a8 <wcrtomb@plt+0x22e98>
  425780:	bl	402870 <__errno_location@plt>
  425784:	ldr	w8, [x0]
  425788:	str	w8, [sp, #20]
  42578c:	ldur	w0, [x29, #-52]
  425790:	bl	4025a0 <close@plt>
  425794:	ldr	w8, [sp, #20]
  425798:	str	w8, [sp]
  42579c:	bl	402870 <__errno_location@plt>
  4257a0:	ldr	w8, [sp]
  4257a4:	str	w8, [x0]
  4257a8:	ldur	w8, [x29, #-44]
  4257ac:	stur	w8, [x29, #-4]
  4257b0:	ldur	w0, [x29, #-4]
  4257b4:	ldp	x29, x30, [sp, #208]
  4257b8:	add	sp, sp, #0xe0
  4257bc:	ret
  4257c0:	sub	sp, sp, #0x100
  4257c4:	stp	x29, x30, [sp, #240]
  4257c8:	add	x29, sp, #0xf0
  4257cc:	sub	x8, x29, #0x28
  4257d0:	mov	w9, #0x0                   	// #0
  4257d4:	mov	w10, #0x1                   	// #1
  4257d8:	str	x0, [x8, #24]
  4257dc:	str	w1, [x8, #20]
  4257e0:	ldr	x11, [x8, #24]
  4257e4:	ldr	x11, [x11]
  4257e8:	str	x11, [sp, #112]
  4257ec:	ldr	x11, [sp, #112]
  4257f0:	ldr	x11, [x11, #24]
  4257f4:	cmp	x11, #0x0
  4257f8:	cset	w12, ne  // ne = any
  4257fc:	eor	w12, w12, w10
  425800:	eor	w12, w12, w10
  425804:	and	w10, w12, w10
  425808:	strb	w10, [sp, #111]
  42580c:	strb	w9, [sp, #110]
  425810:	ldrb	w9, [sp, #111]
  425814:	str	x8, [sp, #56]
  425818:	tbnz	w9, #0, 425820 <wcrtomb@plt+0x22f10>
  42581c:	b	4258a0 <wcrtomb@plt+0x22f90>
  425820:	ldr	x8, [sp, #112]
  425824:	ldr	x8, [x8, #24]
  425828:	str	x8, [sp, #88]
  42582c:	ldr	x0, [sp, #88]
  425830:	bl	402740 <dirfd@plt>
  425834:	stur	w0, [x29, #-116]
  425838:	ldur	w9, [x29, #-116]
  42583c:	cmp	w9, #0x0
  425840:	cset	w9, ge  // ge = tcont
  425844:	tbnz	w9, #0, 42589c <wcrtomb@plt+0x22f8c>
  425848:	ldr	x8, [sp, #112]
  42584c:	ldr	x0, [x8, #24]
  425850:	bl	402580 <closedir@plt>
  425854:	ldr	x8, [sp, #112]
  425858:	mov	x9, xzr
  42585c:	str	x9, [x8, #24]
  425860:	ldr	x8, [sp, #56]
  425864:	ldr	w9, [x8, #20]
  425868:	cmp	w9, #0x3
  42586c:	b.ne	42588c <wcrtomb@plt+0x22f7c>  // b.any
  425870:	ldr	x8, [sp, #112]
  425874:	mov	w9, #0x4                   	// #4
  425878:	strh	w9, [x8, #108]
  42587c:	bl	402870 <__errno_location@plt>
  425880:	ldr	w9, [x0]
  425884:	ldr	x8, [sp, #112]
  425888:	str	w9, [x8, #64]
  42588c:	mov	x8, xzr
  425890:	ldr	x9, [sp, #56]
  425894:	str	x8, [x9, #32]
  425898:	b	426450 <wcrtomb@plt+0x23b40>
  42589c:	b	425a60 <wcrtomb@plt+0x23150>
  4258a0:	ldr	x8, [sp, #56]
  4258a4:	ldr	x9, [x8, #24]
  4258a8:	ldr	w10, [x9, #72]
  4258ac:	and	w10, w10, #0x4
  4258b0:	cbnz	w10, 4258dc <wcrtomb@plt+0x22fcc>
  4258b4:	ldr	x8, [sp, #56]
  4258b8:	ldr	x9, [x8, #24]
  4258bc:	ldr	w10, [x9, #72]
  4258c0:	and	w10, w10, #0x200
  4258c4:	cbz	w10, 4258dc <wcrtomb@plt+0x22fcc>
  4258c8:	ldr	x8, [sp, #56]
  4258cc:	ldr	x9, [x8, #24]
  4258d0:	ldr	w10, [x9, #44]
  4258d4:	str	w10, [sp, #52]
  4258d8:	b	4258e4 <wcrtomb@plt+0x22fd4>
  4258dc:	mov	w8, #0xffffff9c            	// #-100
  4258e0:	str	w8, [sp, #52]
  4258e4:	ldr	w8, [sp, #52]
  4258e8:	ldr	x9, [sp, #112]
  4258ec:	ldr	x1, [x9, #48]
  4258f0:	ldr	x9, [sp, #56]
  4258f4:	ldr	x10, [x9, #24]
  4258f8:	ldr	w11, [x10, #72]
  4258fc:	and	w11, w11, #0x10
  425900:	mov	w12, #0x0                   	// #0
  425904:	str	w8, [sp, #48]
  425908:	str	x1, [sp, #40]
  42590c:	str	w12, [sp, #36]
  425910:	cbz	w11, 425950 <wcrtomb@plt+0x23040>
  425914:	ldr	x8, [sp, #56]
  425918:	ldr	x9, [x8, #24]
  42591c:	ldr	w10, [x9, #72]
  425920:	and	w10, w10, #0x1
  425924:	mov	w11, #0x0                   	// #0
  425928:	str	w11, [sp, #32]
  42592c:	cbz	w10, 425944 <wcrtomb@plt+0x23034>
  425930:	ldr	x8, [sp, #112]
  425934:	ldr	x8, [x8, #88]
  425938:	cmp	x8, #0x0
  42593c:	cset	w9, eq  // eq = none
  425940:	str	w9, [sp, #32]
  425944:	ldr	w8, [sp, #32]
  425948:	eor	w8, w8, #0x1
  42594c:	str	w8, [sp, #36]
  425950:	ldr	w8, [sp, #36]
  425954:	mov	w9, #0x8000                	// #32768
  425958:	mov	w10, wzr
  42595c:	tst	w8, #0x1
  425960:	csel	w2, w9, w10, ne  // ne = any
  425964:	ldr	w0, [sp, #48]
  425968:	ldr	x1, [sp, #40]
  42596c:	sub	x3, x29, #0x74
  425970:	bl	440318 <_obstack_memory_used@@Base+0x189f8>
  425974:	ldr	x11, [sp, #112]
  425978:	str	x0, [x11, #24]
  42597c:	cbnz	x0, 4259bc <wcrtomb@plt+0x230ac>
  425980:	ldr	x8, [sp, #56]
  425984:	ldr	w9, [x8, #20]
  425988:	cmp	w9, #0x3
  42598c:	b.ne	4259ac <wcrtomb@plt+0x2309c>  // b.any
  425990:	ldr	x8, [sp, #112]
  425994:	mov	w9, #0x4                   	// #4
  425998:	strh	w9, [x8, #108]
  42599c:	bl	402870 <__errno_location@plt>
  4259a0:	ldr	w9, [x0]
  4259a4:	ldr	x8, [sp, #112]
  4259a8:	str	w9, [x8, #64]
  4259ac:	mov	x8, xzr
  4259b0:	ldr	x9, [sp, #56]
  4259b4:	str	x8, [x9, #32]
  4259b8:	b	426450 <wcrtomb@plt+0x23b40>
  4259bc:	ldr	x8, [sp, #112]
  4259c0:	ldrh	w9, [x8, #108]
  4259c4:	cmp	w9, #0xb
  4259c8:	b.ne	4259f0 <wcrtomb@plt+0x230e0>  // b.any
  4259cc:	ldr	x8, [sp, #56]
  4259d0:	ldr	x0, [x8, #24]
  4259d4:	ldr	x1, [sp, #112]
  4259d8:	mov	w9, wzr
  4259dc:	and	w2, w9, #0x1
  4259e0:	bl	424274 <wcrtomb@plt+0x21964>
  4259e4:	ldr	x8, [sp, #112]
  4259e8:	strh	w0, [x8, #108]
  4259ec:	b	425a60 <wcrtomb@plt+0x23150>
  4259f0:	ldr	x8, [sp, #56]
  4259f4:	ldr	x9, [x8, #24]
  4259f8:	ldr	w10, [x9, #72]
  4259fc:	and	w10, w10, #0x100
  425a00:	cbz	w10, 425a60 <wcrtomb@plt+0x23150>
  425a04:	ldr	x8, [sp, #56]
  425a08:	ldr	x0, [x8, #24]
  425a0c:	ldr	x1, [sp, #112]
  425a10:	bl	4253fc <wcrtomb@plt+0x22aec>
  425a14:	ldr	x8, [sp, #56]
  425a18:	ldr	x0, [x8, #24]
  425a1c:	ldr	x1, [sp, #112]
  425a20:	mov	w9, wzr
  425a24:	and	w2, w9, #0x1
  425a28:	bl	424274 <wcrtomb@plt+0x21964>
  425a2c:	ldr	x8, [sp, #56]
  425a30:	ldr	x10, [x8, #24]
  425a34:	ldr	x1, [sp, #112]
  425a38:	mov	x0, x10
  425a3c:	bl	42672c <wcrtomb@plt+0x23e1c>
  425a40:	tbnz	w0, #0, 425a60 <wcrtomb@plt+0x23150>
  425a44:	bl	402870 <__errno_location@plt>
  425a48:	mov	w8, #0xc                   	// #12
  425a4c:	str	w8, [x0]
  425a50:	mov	x9, xzr
  425a54:	ldr	x10, [sp, #56]
  425a58:	str	x9, [x10, #32]
  425a5c:	b	426450 <wcrtomb@plt+0x23b40>
  425a60:	ldr	x8, [sp, #56]
  425a64:	ldr	x9, [x8, #24]
  425a68:	ldr	x9, [x9, #64]
  425a6c:	mov	x10, #0x86a0                	// #34464
  425a70:	movk	x10, #0x1, lsl #16
  425a74:	mov	x11, #0xffffffffffffffff    	// #-1
  425a78:	cmp	x9, #0x0
  425a7c:	csel	x9, x11, x10, ne  // ne = any
  425a80:	str	x9, [sp, #96]
  425a84:	ldrb	w12, [sp, #111]
  425a88:	tbnz	w12, #0, 425a90 <wcrtomb@plt+0x23180>
  425a8c:	b	425a9c <wcrtomb@plt+0x2318c>
  425a90:	mov	w8, #0x1                   	// #1
  425a94:	sturb	w8, [x29, #-69]
  425a98:	b	425c64 <wcrtomb@plt+0x23354>
  425a9c:	ldr	x8, [sp, #56]
  425aa0:	ldr	w9, [x8, #20]
  425aa4:	mov	w10, #0x0                   	// #0
  425aa8:	cmp	w9, #0x2
  425aac:	str	w10, [sp, #28]
  425ab0:	b.eq	425b44 <wcrtomb@plt+0x23234>  // b.none
  425ab4:	ldr	x8, [sp, #56]
  425ab8:	ldr	x9, [x8, #24]
  425abc:	ldr	w10, [x9, #72]
  425ac0:	and	w10, w10, #0x8
  425ac4:	mov	w11, #0x0                   	// #0
  425ac8:	str	w11, [sp, #24]
  425acc:	cbz	w10, 425b38 <wcrtomb@plt+0x23228>
  425ad0:	ldr	x8, [sp, #56]
  425ad4:	ldr	x9, [x8, #24]
  425ad8:	ldr	w10, [x9, #72]
  425adc:	and	w10, w10, #0x10
  425ae0:	mov	w11, #0x0                   	// #0
  425ae4:	str	w11, [sp, #24]
  425ae8:	cbz	w10, 425b38 <wcrtomb@plt+0x23228>
  425aec:	ldr	x8, [sp, #56]
  425af0:	ldr	x9, [x8, #24]
  425af4:	ldr	w10, [x9, #72]
  425af8:	and	w10, w10, #0x20
  425afc:	mov	w11, #0x0                   	// #0
  425b00:	str	w11, [sp, #24]
  425b04:	cbnz	w10, 425b38 <wcrtomb@plt+0x23228>
  425b08:	ldr	x8, [sp, #112]
  425b0c:	ldr	w9, [x8, #140]
  425b10:	mov	w10, #0x0                   	// #0
  425b14:	cmp	w9, #0x2
  425b18:	str	w10, [sp, #24]
  425b1c:	b.ne	425b38 <wcrtomb@plt+0x23228>  // b.any
  425b20:	ldr	x0, [sp, #112]
  425b24:	ldur	w1, [x29, #-116]
  425b28:	bl	42664c <wcrtomb@plt+0x23d3c>
  425b2c:	cmp	w0, #0x0
  425b30:	cset	w8, ne  // ne = any
  425b34:	str	w8, [sp, #24]
  425b38:	ldr	w8, [sp, #24]
  425b3c:	eor	w8, w8, #0x1
  425b40:	str	w8, [sp, #28]
  425b44:	ldr	w8, [sp, #28]
  425b48:	and	w8, w8, #0x1
  425b4c:	sturb	w8, [x29, #-69]
  425b50:	ldurb	w8, [x29, #-69]
  425b54:	tbnz	w8, #0, 425b68 <wcrtomb@plt+0x23258>
  425b58:	ldr	x8, [sp, #56]
  425b5c:	ldr	w9, [x8, #20]
  425b60:	cmp	w9, #0x3
  425b64:	b.ne	425c64 <wcrtomb@plt+0x23354>  // b.any
  425b68:	ldr	x8, [sp, #56]
  425b6c:	ldr	x9, [x8, #24]
  425b70:	ldr	w10, [x9, #72]
  425b74:	and	w10, w10, #0x200
  425b78:	cbz	w10, 425b90 <wcrtomb@plt+0x23280>
  425b7c:	ldur	w0, [x29, #-116]
  425b80:	mov	w1, #0x406                 	// #1030
  425b84:	mov	w2, #0x3                   	// #3
  425b88:	bl	440578 <_obstack_memory_used@@Base+0x18c58>
  425b8c:	stur	w0, [x29, #-116]
  425b90:	ldur	w8, [x29, #-116]
  425b94:	cmp	w8, #0x0
  425b98:	cset	w8, lt  // lt = tstop
  425b9c:	tbnz	w8, #0, 425bc0 <wcrtomb@plt+0x232b0>
  425ba0:	ldr	x8, [sp, #56]
  425ba4:	ldr	x0, [x8, #24]
  425ba8:	ldr	x1, [sp, #112]
  425bac:	ldur	w2, [x29, #-116]
  425bb0:	mov	x9, xzr
  425bb4:	mov	x3, x9
  425bb8:	bl	425520 <wcrtomb@plt+0x22c10>
  425bbc:	cbz	w0, 425c5c <wcrtomb@plt+0x2334c>
  425bc0:	ldurb	w8, [x29, #-69]
  425bc4:	tbnz	w8, #0, 425bcc <wcrtomb@plt+0x232bc>
  425bc8:	b	425bec <wcrtomb@plt+0x232dc>
  425bcc:	ldr	x8, [sp, #56]
  425bd0:	ldr	w9, [x8, #20]
  425bd4:	cmp	w9, #0x3
  425bd8:	b.ne	425bec <wcrtomb@plt+0x232dc>  // b.any
  425bdc:	bl	402870 <__errno_location@plt>
  425be0:	ldr	w8, [x0]
  425be4:	ldr	x9, [sp, #112]
  425be8:	str	w8, [x9, #64]
  425bec:	ldr	x8, [sp, #112]
  425bf0:	ldrh	w9, [x8, #110]
  425bf4:	orr	w9, w9, #0x1
  425bf8:	strh	w9, [x8, #110]
  425bfc:	mov	w9, #0x0                   	// #0
  425c00:	sturb	w9, [x29, #-69]
  425c04:	ldr	x8, [sp, #112]
  425c08:	ldr	x0, [x8, #24]
  425c0c:	bl	402580 <closedir@plt>
  425c10:	ldr	x8, [sp, #112]
  425c14:	mov	x9, xzr
  425c18:	str	x9, [x8, #24]
  425c1c:	ldr	x8, [sp, #56]
  425c20:	ldr	x9, [x8, #24]
  425c24:	ldr	w10, [x9, #72]
  425c28:	and	w10, w10, #0x200
  425c2c:	cbz	w10, 425c4c <wcrtomb@plt+0x2333c>
  425c30:	ldur	w8, [x29, #-116]
  425c34:	mov	w9, wzr
  425c38:	cmp	w9, w8
  425c3c:	cset	w8, gt
  425c40:	tbnz	w8, #0, 425c4c <wcrtomb@plt+0x2333c>
  425c44:	ldur	w0, [x29, #-116]
  425c48:	bl	4025a0 <close@plt>
  425c4c:	ldr	x8, [sp, #112]
  425c50:	mov	x9, xzr
  425c54:	str	x9, [x8, #24]
  425c58:	b	425c64 <wcrtomb@plt+0x23354>
  425c5c:	mov	w8, #0x1                   	// #1
  425c60:	sturb	w8, [x29, #-69]
  425c64:	ldr	x8, [sp, #112]
  425c68:	ldr	x8, [x8, #56]
  425c6c:	ldr	x9, [sp, #112]
  425c70:	ldr	x9, [x9, #72]
  425c74:	subs	x9, x9, #0x1
  425c78:	ldrb	w10, [x8, x9]
  425c7c:	cmp	w10, #0x2f
  425c80:	b.ne	425c98 <wcrtomb@plt+0x23388>  // b.any
  425c84:	ldr	x8, [sp, #112]
  425c88:	ldr	x8, [x8, #72]
  425c8c:	subs	x8, x8, #0x1
  425c90:	str	x8, [sp, #16]
  425c94:	b	425ca4 <wcrtomb@plt+0x23394>
  425c98:	ldr	x8, [sp, #112]
  425c9c:	ldr	x8, [x8, #72]
  425ca0:	str	x8, [sp, #16]
  425ca4:	ldr	x8, [sp, #16]
  425ca8:	stur	x8, [x29, #-88]
  425cac:	ldr	x8, [sp, #56]
  425cb0:	ldr	x9, [x8, #24]
  425cb4:	ldr	w10, [x9, #72]
  425cb8:	and	w10, w10, #0x4
  425cbc:	cbz	w10, 425cf0 <wcrtomb@plt+0x233e0>
  425cc0:	ldr	x8, [sp, #56]
  425cc4:	ldr	x9, [x8, #24]
  425cc8:	ldr	x9, [x9, #32]
  425ccc:	ldur	x10, [x29, #-88]
  425cd0:	add	x9, x9, x10
  425cd4:	stur	x9, [x29, #-112]
  425cd8:	ldur	x9, [x29, #-112]
  425cdc:	add	x10, x9, #0x1
  425ce0:	stur	x10, [x29, #-112]
  425ce4:	mov	w11, #0x2f                  	// #47
  425ce8:	strb	w11, [x9]
  425cec:	b	425cf8 <wcrtomb@plt+0x233e8>
  425cf0:	mov	x8, xzr
  425cf4:	stur	x8, [x29, #-112]
  425cf8:	ldur	x8, [x29, #-88]
  425cfc:	add	x8, x8, #0x1
  425d00:	stur	x8, [x29, #-88]
  425d04:	ldr	x8, [sp, #56]
  425d08:	ldr	x9, [x8, #24]
  425d0c:	ldr	x9, [x9, #48]
  425d10:	ldur	x10, [x29, #-88]
  425d14:	subs	x9, x9, x10
  425d18:	stur	x9, [x29, #-96]
  425d1c:	ldr	x9, [sp, #112]
  425d20:	ldr	x9, [x9, #88]
  425d24:	add	x9, x9, #0x1
  425d28:	stur	x9, [x29, #-80]
  425d2c:	mov	w11, #0x0                   	// #0
  425d30:	sturb	w11, [x29, #-70]
  425d34:	mov	x9, xzr
  425d38:	str	x9, [x8]
  425d3c:	stur	x9, [x29, #-56]
  425d40:	stur	xzr, [x29, #-48]
  425d44:	ldr	x8, [sp, #112]
  425d48:	ldr	x8, [x8, #24]
  425d4c:	cbz	x8, 426230 <wcrtomb@plt+0x23920>
  425d50:	bl	402870 <__errno_location@plt>
  425d54:	str	wzr, [x0]
  425d58:	ldr	x8, [sp, #112]
  425d5c:	ldr	x0, [x8, #24]
  425d60:	bl	402560 <readdir@plt>
  425d64:	str	x0, [sp, #72]
  425d68:	ldr	x8, [sp, #72]
  425d6c:	cbnz	x8, 425dcc <wcrtomb@plt+0x234bc>
  425d70:	bl	402870 <__errno_location@plt>
  425d74:	ldr	w8, [x0]
  425d78:	cbz	w8, 425dc8 <wcrtomb@plt+0x234b8>
  425d7c:	bl	402870 <__errno_location@plt>
  425d80:	ldr	w8, [x0]
  425d84:	ldr	x9, [sp, #112]
  425d88:	str	w8, [x9, #64]
  425d8c:	ldrb	w8, [sp, #111]
  425d90:	mov	w10, #0x1                   	// #1
  425d94:	str	w10, [sp, #12]
  425d98:	tbnz	w8, #0, 425dac <wcrtomb@plt+0x2349c>
  425d9c:	ldur	x8, [x29, #-48]
  425da0:	cmp	x8, #0x0
  425da4:	cset	w9, ne  // ne = any
  425da8:	str	w9, [sp, #12]
  425dac:	ldr	w8, [sp, #12]
  425db0:	mov	w9, #0x7                   	// #7
  425db4:	mov	w10, #0x4                   	// #4
  425db8:	tst	w8, #0x1
  425dbc:	csel	w8, w9, w10, ne  // ne = any
  425dc0:	ldr	x11, [sp, #112]
  425dc4:	strh	w8, [x11, #108]
  425dc8:	b	426230 <wcrtomb@plt+0x23920>
  425dcc:	ldr	x8, [sp, #56]
  425dd0:	ldr	x9, [x8, #24]
  425dd4:	ldr	w10, [x9, #72]
  425dd8:	and	w10, w10, #0x20
  425ddc:	cbnz	w10, 425e1c <wcrtomb@plt+0x2350c>
  425de0:	ldr	x8, [sp, #72]
  425de4:	ldrb	w9, [x8, #19]
  425de8:	cmp	w9, #0x2e
  425dec:	b.ne	425e1c <wcrtomb@plt+0x2350c>  // b.any
  425df0:	ldr	x8, [sp, #72]
  425df4:	ldrb	w9, [x8, #20]
  425df8:	cbz	w9, 425e18 <wcrtomb@plt+0x23508>
  425dfc:	ldr	x8, [sp, #72]
  425e00:	ldrb	w9, [x8, #20]
  425e04:	cmp	w9, #0x2e
  425e08:	b.ne	425e1c <wcrtomb@plt+0x2350c>  // b.any
  425e0c:	ldr	x8, [sp, #72]
  425e10:	ldrb	w9, [x8, #21]
  425e14:	cbnz	w9, 425e1c <wcrtomb@plt+0x2350c>
  425e18:	b	425d44 <wcrtomb@plt+0x23434>
  425e1c:	ldr	x8, [sp, #72]
  425e20:	add	x0, x8, #0x13
  425e24:	bl	4022f0 <strlen@plt>
  425e28:	str	x0, [sp, #80]
  425e2c:	ldr	x8, [sp, #56]
  425e30:	ldr	x0, [x8, #24]
  425e34:	ldr	x9, [sp, #72]
  425e38:	add	x1, x9, #0x13
  425e3c:	ldr	x2, [sp, #80]
  425e40:	bl	424124 <wcrtomb@plt+0x21814>
  425e44:	ldr	x8, [sp, #56]
  425e48:	str	x0, [x8, #8]
  425e4c:	ldr	x9, [x8, #8]
  425e50:	cbnz	x9, 425e58 <wcrtomb@plt+0x23548>
  425e54:	b	425e94 <wcrtomb@plt+0x23584>
  425e58:	ldr	x8, [sp, #80]
  425e5c:	ldur	x9, [x29, #-96]
  425e60:	cmp	x8, x9
  425e64:	b.cc	425f78 <wcrtomb@plt+0x23668>  // b.lo, b.ul, b.last
  425e68:	ldr	x8, [sp, #56]
  425e6c:	ldr	x9, [x8, #24]
  425e70:	ldr	x9, [x9, #32]
  425e74:	stur	x9, [x29, #-64]
  425e78:	ldr	x0, [x8, #24]
  425e7c:	ldr	x9, [sp, #80]
  425e80:	ldur	x10, [x29, #-88]
  425e84:	add	x9, x9, x10
  425e88:	add	x1, x9, #0x1
  425e8c:	bl	424030 <wcrtomb@plt+0x21720>
  425e90:	tbnz	w0, #0, 425f14 <wcrtomb@plt+0x23604>
  425e94:	bl	402870 <__errno_location@plt>
  425e98:	ldr	w8, [x0]
  425e9c:	stur	w8, [x29, #-68]
  425ea0:	ldr	x9, [sp, #56]
  425ea4:	ldr	x0, [x9, #8]
  425ea8:	bl	4026c0 <free@plt>
  425eac:	ldr	x9, [sp, #56]
  425eb0:	ldr	x0, [x9]
  425eb4:	bl	4247cc <wcrtomb@plt+0x21ebc>
  425eb8:	ldr	x8, [sp, #112]
  425ebc:	ldr	x0, [x8, #24]
  425ec0:	bl	402580 <closedir@plt>
  425ec4:	ldr	x8, [sp, #112]
  425ec8:	mov	x9, xzr
  425ecc:	str	x9, [x8, #24]
  425ed0:	ldr	x8, [sp, #112]
  425ed4:	mov	w9, #0x7                   	// #7
  425ed8:	strh	w9, [x8, #108]
  425edc:	ldr	x8, [sp, #56]
  425ee0:	ldr	x10, [x8, #24]
  425ee4:	ldr	w9, [x10, #72]
  425ee8:	orr	w9, w9, #0x2000
  425eec:	str	w9, [x10, #72]
  425ef0:	ldur	w9, [x29, #-68]
  425ef4:	str	w9, [sp, #8]
  425ef8:	bl	402870 <__errno_location@plt>
  425efc:	ldr	w9, [sp, #8]
  425f00:	str	w9, [x0]
  425f04:	mov	x8, xzr
  425f08:	ldr	x10, [sp, #56]
  425f0c:	str	x8, [x10, #32]
  425f10:	b	426450 <wcrtomb@plt+0x23b40>
  425f14:	ldur	x8, [x29, #-64]
  425f18:	ldr	x9, [sp, #56]
  425f1c:	ldr	x10, [x9, #24]
  425f20:	ldr	x10, [x10, #32]
  425f24:	cmp	x8, x10
  425f28:	b.eq	425f60 <wcrtomb@plt+0x23650>  // b.none
  425f2c:	mov	w8, #0x1                   	// #1
  425f30:	sturb	w8, [x29, #-70]
  425f34:	ldr	x9, [sp, #56]
  425f38:	ldr	x10, [x9, #24]
  425f3c:	ldr	w8, [x10, #72]
  425f40:	and	w8, w8, #0x4
  425f44:	cbz	w8, 425f60 <wcrtomb@plt+0x23650>
  425f48:	ldr	x8, [sp, #56]
  425f4c:	ldr	x9, [x8, #24]
  425f50:	ldr	x9, [x9, #32]
  425f54:	ldur	x10, [x29, #-88]
  425f58:	add	x9, x9, x10
  425f5c:	stur	x9, [x29, #-112]
  425f60:	ldr	x8, [sp, #56]
  425f64:	ldr	x9, [x8, #24]
  425f68:	ldr	x9, [x9, #48]
  425f6c:	ldur	x10, [x29, #-88]
  425f70:	subs	x9, x9, x10
  425f74:	stur	x9, [x29, #-96]
  425f78:	ldur	x8, [x29, #-88]
  425f7c:	ldr	x9, [sp, #80]
  425f80:	add	x8, x8, x9
  425f84:	stur	x8, [x29, #-104]
  425f88:	ldur	x8, [x29, #-104]
  425f8c:	ldur	x9, [x29, #-88]
  425f90:	cmp	x8, x9
  425f94:	b.cs	426004 <wcrtomb@plt+0x236f4>  // b.hs, b.nlast
  425f98:	ldr	x8, [sp, #56]
  425f9c:	ldr	x0, [x8, #8]
  425fa0:	bl	4026c0 <free@plt>
  425fa4:	ldr	x8, [sp, #56]
  425fa8:	ldr	x0, [x8]
  425fac:	bl	4247cc <wcrtomb@plt+0x21ebc>
  425fb0:	ldr	x8, [sp, #112]
  425fb4:	ldr	x0, [x8, #24]
  425fb8:	bl	402580 <closedir@plt>
  425fbc:	ldr	x8, [sp, #112]
  425fc0:	mov	x9, xzr
  425fc4:	str	x9, [x8, #24]
  425fc8:	ldr	x8, [sp, #112]
  425fcc:	mov	w9, #0x7                   	// #7
  425fd0:	strh	w9, [x8, #108]
  425fd4:	ldr	x8, [sp, #56]
  425fd8:	ldr	x10, [x8, #24]
  425fdc:	ldr	w9, [x10, #72]
  425fe0:	orr	w9, w9, #0x2000
  425fe4:	str	w9, [x10, #72]
  425fe8:	bl	402870 <__errno_location@plt>
  425fec:	mov	w9, #0x24                  	// #36
  425ff0:	str	w9, [x0]
  425ff4:	mov	x8, xzr
  425ff8:	ldr	x10, [sp, #56]
  425ffc:	str	x8, [x10, #32]
  426000:	b	426450 <wcrtomb@plt+0x23b40>
  426004:	ldur	x8, [x29, #-80]
  426008:	ldr	x9, [sp, #56]
  42600c:	ldr	x10, [x9, #8]
  426010:	str	x8, [x10, #88]
  426014:	ldr	x8, [x9, #24]
  426018:	ldr	x8, [x8]
  42601c:	ldr	x10, [x9, #8]
  426020:	str	x8, [x10, #8]
  426024:	ldur	x8, [x29, #-104]
  426028:	ldr	x10, [x9, #8]
  42602c:	str	x8, [x10, #72]
  426030:	ldr	x8, [sp, #72]
  426034:	ldr	x8, [x8]
  426038:	ldr	x10, [x9, #8]
  42603c:	str	x8, [x10, #128]
  426040:	ldr	x8, [x9, #24]
  426044:	ldr	w11, [x8, #72]
  426048:	and	w11, w11, #0x4
  42604c:	cbz	w11, 426084 <wcrtomb@plt+0x23774>
  426050:	ldr	x8, [sp, #56]
  426054:	ldr	x9, [x8, #8]
  426058:	ldr	x9, [x9, #56]
  42605c:	ldr	x10, [x8, #8]
  426060:	str	x9, [x10, #48]
  426064:	ldur	x0, [x29, #-112]
  426068:	ldr	x9, [x8, #8]
  42606c:	add	x1, x9, #0xf8
  426070:	ldr	x9, [x8, #8]
  426074:	ldr	x9, [x9, #96]
  426078:	add	x2, x9, #0x1
  42607c:	bl	4022b0 <memmove@plt>
  426080:	b	426098 <wcrtomb@plt+0x23788>
  426084:	ldr	x8, [sp, #56]
  426088:	ldr	x9, [x8, #8]
  42608c:	add	x9, x9, #0xf8
  426090:	ldr	x10, [x8, #8]
  426094:	str	x9, [x10, #48]
  426098:	ldr	x8, [sp, #56]
  42609c:	ldr	x9, [x8, #24]
  4260a0:	ldr	x9, [x9, #64]
  4260a4:	cbz	x9, 4260bc <wcrtomb@plt+0x237ac>
  4260a8:	ldr	x8, [sp, #56]
  4260ac:	ldr	x9, [x8, #24]
  4260b0:	ldr	w10, [x9, #72]
  4260b4:	and	w10, w10, #0x400
  4260b8:	cbz	w10, 426170 <wcrtomb@plt+0x23860>
  4260bc:	ldr	x8, [sp, #56]
  4260c0:	ldr	x9, [x8, #24]
  4260c4:	ldr	w10, [x9, #72]
  4260c8:	and	w10, w10, #0x10
  4260cc:	mov	w11, #0x0                   	// #0
  4260d0:	str	w11, [sp, #4]
  4260d4:	cbz	w10, 426120 <wcrtomb@plt+0x23810>
  4260d8:	ldr	x8, [sp, #56]
  4260dc:	ldr	x9, [x8, #24]
  4260e0:	ldr	w10, [x9, #72]
  4260e4:	and	w10, w10, #0x8
  4260e8:	mov	w11, #0x0                   	// #0
  4260ec:	str	w11, [sp, #4]
  4260f0:	cbz	w10, 426120 <wcrtomb@plt+0x23810>
  4260f4:	ldr	x8, [sp, #72]
  4260f8:	ldrb	w9, [x8, #18]
  4260fc:	mov	w10, #0x0                   	// #0
  426100:	str	w10, [sp, #4]
  426104:	cbz	w9, 426120 <wcrtomb@plt+0x23810>
  426108:	ldr	x8, [sp, #72]
  42610c:	ldrb	w9, [x8, #18]
  426110:	cmp	w9, #0x4
  426114:	cset	w9, eq  // eq = none
  426118:	eor	w9, w9, #0x1
  42611c:	str	w9, [sp, #4]
  426120:	ldr	w8, [sp, #4]
  426124:	mov	w9, #0x1                   	// #1
  426128:	and	w8, w8, w9
  42612c:	strb	w8, [sp, #71]
  426130:	ldr	x10, [sp, #56]
  426134:	ldr	x11, [x10, #8]
  426138:	mov	w8, #0xb                   	// #11
  42613c:	strh	w8, [x11, #108]
  426140:	ldr	x11, [x10, #8]
  426144:	add	x0, x11, #0x78
  426148:	ldr	x11, [sp, #72]
  42614c:	ldrb	w1, [x11, #18]
  426150:	bl	426e58 <wcrtomb@plt+0x24548>
  426154:	ldr	x10, [sp, #56]
  426158:	ldr	x0, [x10, #8]
  42615c:	ldrb	w8, [sp, #71]
  426160:	eor	w8, w8, #0x1
  426164:	and	w1, w8, #0x1
  426168:	bl	424214 <wcrtomb@plt+0x21904>
  42616c:	b	426194 <wcrtomb@plt+0x23884>
  426170:	ldr	x8, [sp, #56]
  426174:	ldr	x0, [x8, #24]
  426178:	ldr	x1, [x8, #8]
  42617c:	mov	w9, wzr
  426180:	and	w2, w9, #0x1
  426184:	bl	424274 <wcrtomb@plt+0x21964>
  426188:	ldr	x8, [sp, #56]
  42618c:	ldr	x10, [x8, #8]
  426190:	strh	w0, [x10, #108]
  426194:	ldr	x8, [sp, #56]
  426198:	ldr	x9, [x8, #8]
  42619c:	mov	x10, xzr
  4261a0:	str	x10, [x9, #16]
  4261a4:	ldr	x9, [x8]
  4261a8:	cbnz	x9, 4261c0 <wcrtomb@plt+0x238b0>
  4261ac:	ldr	x8, [sp, #56]
  4261b0:	ldr	x9, [x8, #8]
  4261b4:	stur	x9, [x29, #-56]
  4261b8:	str	x9, [x8]
  4261bc:	b	4261d8 <wcrtomb@plt+0x238c8>
  4261c0:	ldr	x8, [sp, #56]
  4261c4:	ldr	x9, [x8, #8]
  4261c8:	ldur	x10, [x29, #-56]
  4261cc:	str	x9, [x10, #16]
  4261d0:	ldr	x9, [x8, #8]
  4261d4:	stur	x9, [x29, #-56]
  4261d8:	ldur	x8, [x29, #-48]
  4261dc:	mov	x9, #0x2710                	// #10000
  4261e0:	cmp	x8, x9
  4261e4:	b.ne	42620c <wcrtomb@plt+0x238fc>  // b.any
  4261e8:	ldr	x8, [sp, #56]
  4261ec:	ldr	x9, [x8, #24]
  4261f0:	ldr	x9, [x9, #64]
  4261f4:	cbnz	x9, 42620c <wcrtomb@plt+0x238fc>
  4261f8:	ldr	x0, [sp, #112]
  4261fc:	ldur	w1, [x29, #-116]
  426200:	bl	426f04 <wcrtomb@plt+0x245f4>
  426204:	and	w8, w0, #0x1
  426208:	strb	w8, [sp, #110]
  42620c:	ldur	x8, [x29, #-48]
  426210:	add	x8, x8, #0x1
  426214:	stur	x8, [x29, #-48]
  426218:	ldr	x8, [sp, #96]
  42621c:	ldur	x9, [x29, #-48]
  426220:	cmp	x8, x9
  426224:	b.hi	42622c <wcrtomb@plt+0x2391c>  // b.pmore
  426228:	b	426254 <wcrtomb@plt+0x23944>
  42622c:	b	425d44 <wcrtomb@plt+0x23434>
  426230:	ldr	x8, [sp, #112]
  426234:	ldr	x8, [x8, #24]
  426238:	cbz	x8, 426254 <wcrtomb@plt+0x23944>
  42623c:	ldr	x8, [sp, #112]
  426240:	ldr	x0, [x8, #24]
  426244:	bl	402580 <closedir@plt>
  426248:	ldr	x8, [sp, #112]
  42624c:	mov	x9, xzr
  426250:	str	x9, [x8, #24]
  426254:	ldurb	w8, [x29, #-70]
  426258:	tbnz	w8, #0, 426260 <wcrtomb@plt+0x23950>
  42625c:	b	426270 <wcrtomb@plt+0x23960>
  426260:	ldr	x8, [sp, #56]
  426264:	ldr	x0, [x8, #24]
  426268:	ldr	x1, [x8]
  42626c:	bl	426fa8 <wcrtomb@plt+0x24698>
  426270:	ldr	x8, [sp, #56]
  426274:	ldr	x9, [x8, #24]
  426278:	ldr	w10, [x9, #72]
  42627c:	and	w10, w10, #0x4
  426280:	cbz	w10, 4262c0 <wcrtomb@plt+0x239b0>
  426284:	ldur	x8, [x29, #-88]
  426288:	ldr	x9, [sp, #56]
  42628c:	ldr	x10, [x9, #24]
  426290:	ldr	x10, [x10, #48]
  426294:	cmp	x8, x10
  426298:	b.eq	4262a4 <wcrtomb@plt+0x23994>  // b.none
  42629c:	ldur	x8, [x29, #-48]
  4262a0:	cbnz	x8, 4262b4 <wcrtomb@plt+0x239a4>
  4262a4:	ldur	x8, [x29, #-112]
  4262a8:	mov	x9, #0xffffffffffffffff    	// #-1
  4262ac:	add	x8, x8, x9
  4262b0:	stur	x8, [x29, #-112]
  4262b4:	ldur	x8, [x29, #-112]
  4262b8:	mov	w9, #0x0                   	// #0
  4262bc:	strb	w9, [x8]
  4262c0:	ldrb	w8, [sp, #111]
  4262c4:	tbnz	w8, #0, 426368 <wcrtomb@plt+0x23a58>
  4262c8:	ldurb	w8, [x29, #-69]
  4262cc:	tbnz	w8, #0, 4262d4 <wcrtomb@plt+0x239c4>
  4262d0:	b	426368 <wcrtomb@plt+0x23a58>
  4262d4:	ldr	x8, [sp, #56]
  4262d8:	ldr	w9, [x8, #20]
  4262dc:	cmp	w9, #0x1
  4262e0:	b.eq	4262ec <wcrtomb@plt+0x239dc>  // b.none
  4262e4:	ldur	x8, [x29, #-48]
  4262e8:	cbnz	x8, 426368 <wcrtomb@plt+0x23a58>
  4262ec:	ldr	x8, [sp, #112]
  4262f0:	ldr	x8, [x8, #88]
  4262f4:	cbnz	x8, 42630c <wcrtomb@plt+0x239fc>
  4262f8:	ldr	x8, [sp, #56]
  4262fc:	ldr	x0, [x8, #24]
  426300:	bl	426464 <wcrtomb@plt+0x23b54>
  426304:	cbnz	w0, 426330 <wcrtomb@plt+0x23a20>
  426308:	b	426368 <wcrtomb@plt+0x23a58>
  42630c:	ldr	x8, [sp, #56]
  426310:	ldr	x0, [x8, #24]
  426314:	ldr	x9, [sp, #112]
  426318:	ldr	x1, [x9, #8]
  42631c:	mov	w2, #0xffffffff            	// #-1
  426320:	adrp	x3, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  426324:	add	x3, x3, #0xd5e
  426328:	bl	425520 <wcrtomb@plt+0x22c10>
  42632c:	cbz	w0, 426368 <wcrtomb@plt+0x23a58>
  426330:	ldr	x8, [sp, #112]
  426334:	mov	w9, #0x7                   	// #7
  426338:	strh	w9, [x8, #108]
  42633c:	ldr	x8, [sp, #56]
  426340:	ldr	x10, [x8, #24]
  426344:	ldr	w9, [x10, #72]
  426348:	orr	w9, w9, #0x2000
  42634c:	str	w9, [x10, #72]
  426350:	ldr	x0, [x8]
  426354:	bl	4247cc <wcrtomb@plt+0x21ebc>
  426358:	mov	x8, xzr
  42635c:	ldr	x10, [sp, #56]
  426360:	str	x8, [x10, #32]
  426364:	b	426450 <wcrtomb@plt+0x23b40>
  426368:	ldur	x8, [x29, #-48]
  42636c:	cbnz	x8, 4263c8 <wcrtomb@plt+0x23ab8>
  426370:	ldr	x8, [sp, #56]
  426374:	ldr	w9, [x8, #20]
  426378:	cmp	w9, #0x3
  42637c:	b.ne	4263ac <wcrtomb@plt+0x23a9c>  // b.any
  426380:	ldr	x8, [sp, #112]
  426384:	ldrh	w9, [x8, #108]
  426388:	cmp	w9, #0x4
  42638c:	b.eq	4263ac <wcrtomb@plt+0x23a9c>  // b.none
  426390:	ldr	x8, [sp, #112]
  426394:	ldrh	w9, [x8, #108]
  426398:	cmp	w9, #0x7
  42639c:	b.eq	4263ac <wcrtomb@plt+0x23a9c>  // b.none
  4263a0:	ldr	x8, [sp, #112]
  4263a4:	mov	w9, #0x6                   	// #6
  4263a8:	strh	w9, [x8, #108]
  4263ac:	ldr	x8, [sp, #56]
  4263b0:	ldr	x0, [x8]
  4263b4:	bl	4247cc <wcrtomb@plt+0x21ebc>
  4263b8:	mov	x8, xzr
  4263bc:	ldr	x9, [sp, #56]
  4263c0:	str	x8, [x9, #32]
  4263c4:	b	426450 <wcrtomb@plt+0x23b40>
  4263c8:	ldrb	w8, [sp, #110]
  4263cc:	tbnz	w8, #0, 4263d4 <wcrtomb@plt+0x23ac4>
  4263d0:	b	42640c <wcrtomb@plt+0x23afc>
  4263d4:	ldr	x8, [sp, #56]
  4263d8:	ldr	x9, [x8, #24]
  4263dc:	adrp	x10, 427000 <wcrtomb@plt+0x246f0>
  4263e0:	add	x10, x10, #0xcc
  4263e4:	str	x10, [x9, #64]
  4263e8:	ldr	x0, [x8, #24]
  4263ec:	ldr	x1, [x8]
  4263f0:	ldur	x2, [x29, #-48]
  4263f4:	bl	4244c8 <wcrtomb@plt+0x21bb8>
  4263f8:	ldr	x8, [sp, #56]
  4263fc:	str	x0, [x8]
  426400:	ldr	x9, [x8, #24]
  426404:	mov	x10, xzr
  426408:	str	x10, [x9, #64]
  42640c:	ldr	x8, [sp, #56]
  426410:	ldr	x9, [x8, #24]
  426414:	ldr	x9, [x9, #64]
  426418:	cbz	x9, 426444 <wcrtomb@plt+0x23b34>
  42641c:	ldur	x8, [x29, #-48]
  426420:	cmp	x8, #0x1
  426424:	b.ls	426444 <wcrtomb@plt+0x23b34>  // b.plast
  426428:	ldr	x8, [sp, #56]
  42642c:	ldr	x0, [x8, #24]
  426430:	ldr	x1, [x8]
  426434:	ldur	x2, [x29, #-48]
  426438:	bl	4244c8 <wcrtomb@plt+0x21bb8>
  42643c:	ldr	x8, [sp, #56]
  426440:	str	x0, [x8]
  426444:	ldr	x8, [sp, #56]
  426448:	ldr	x9, [x8]
  42644c:	str	x9, [x8, #32]
  426450:	ldr	x8, [sp, #56]
  426454:	ldr	x0, [x8, #32]
  426458:	ldp	x29, x30, [sp, #240]
  42645c:	add	sp, sp, #0x100
  426460:	ret
  426464:	sub	sp, sp, #0x40
  426468:	stp	x29, x30, [sp, #48]
  42646c:	add	x29, sp, #0x30
  426470:	stur	x0, [x29, #-8]
  426474:	ldur	x8, [x29, #-8]
  426478:	ldr	w9, [x8, #72]
  42647c:	and	w9, w9, #0x4
  426480:	mov	w10, #0x0                   	// #0
  426484:	stur	w10, [x29, #-16]
  426488:	cbnz	w9, 426540 <wcrtomb@plt+0x23c30>
  42648c:	ldur	x8, [x29, #-8]
  426490:	ldr	w9, [x8, #72]
  426494:	and	w9, w9, #0x200
  426498:	cbz	w9, 4264f8 <wcrtomb@plt+0x23be8>
  42649c:	ldur	x0, [x29, #-8]
  4264a0:	ldur	x8, [x29, #-8]
  4264a4:	ldr	w9, [x8, #72]
  4264a8:	and	w9, w9, #0x200
  4264ac:	str	x0, [sp, #24]
  4264b0:	cbz	w9, 4264c0 <wcrtomb@plt+0x23bb0>
  4264b4:	mov	w8, #0xffffff9c            	// #-100
  4264b8:	str	w8, [sp, #20]
  4264bc:	b	4264cc <wcrtomb@plt+0x23bbc>
  4264c0:	ldur	x8, [x29, #-8]
  4264c4:	ldr	w9, [x8, #40]
  4264c8:	str	w9, [sp, #20]
  4264cc:	ldr	w8, [sp, #20]
  4264d0:	mov	w9, wzr
  4264d4:	ldr	x0, [sp, #24]
  4264d8:	mov	w1, w8
  4264dc:	mov	w8, #0x1                   	// #1
  4264e0:	and	w2, w8, #0x1
  4264e4:	str	w9, [sp, #16]
  4264e8:	bl	426868 <wcrtomb@plt+0x23f58>
  4264ec:	ldr	w8, [sp, #16]
  4264f0:	str	w8, [sp, #12]
  4264f4:	b	426530 <wcrtomb@plt+0x23c20>
  4264f8:	ldur	x8, [x29, #-8]
  4264fc:	ldr	w9, [x8, #72]
  426500:	and	w9, w9, #0x200
  426504:	cbz	w9, 426514 <wcrtomb@plt+0x23c04>
  426508:	mov	w8, #0xffffff9c            	// #-100
  42650c:	str	w8, [sp, #8]
  426510:	b	426520 <wcrtomb@plt+0x23c10>
  426514:	ldur	x8, [x29, #-8]
  426518:	ldr	w9, [x8, #40]
  42651c:	str	w9, [sp, #8]
  426520:	ldr	w8, [sp, #8]
  426524:	mov	w0, w8
  426528:	bl	402340 <fchdir@plt>
  42652c:	str	w0, [sp, #12]
  426530:	ldr	w8, [sp, #12]
  426534:	cmp	w8, #0x0
  426538:	cset	w8, ne  // ne = any
  42653c:	stur	w8, [x29, #-16]
  426540:	ldur	w8, [x29, #-16]
  426544:	and	w8, w8, #0x1
  426548:	stur	w8, [x29, #-12]
  42654c:	ldur	x9, [x29, #-8]
  426550:	add	x0, x9, #0x60
  426554:	bl	4249e8 <wcrtomb@plt+0x220d8>
  426558:	ldur	w0, [x29, #-12]
  42655c:	ldp	x29, x30, [sp, #48]
  426560:	add	sp, sp, #0x40
  426564:	ret
  426568:	sub	sp, sp, #0x40
  42656c:	stp	x29, x30, [sp, #48]
  426570:	add	x29, sp, #0x30
  426574:	mov	w8, #0x2f                  	// #47
  426578:	stur	x0, [x29, #-8]
  42657c:	stur	x1, [x29, #-16]
  426580:	ldur	x9, [x29, #-16]
  426584:	ldr	x9, [x9, #96]
  426588:	ldur	x10, [x29, #-16]
  42658c:	str	x9, [x10, #72]
  426590:	str	x9, [sp, #24]
  426594:	ldur	x9, [x29, #-8]
  426598:	ldr	x0, [x9, #32]
  42659c:	ldur	x9, [x29, #-16]
  4265a0:	add	x1, x9, #0xf8
  4265a4:	ldr	x9, [sp, #24]
  4265a8:	add	x2, x9, #0x1
  4265ac:	str	w8, [sp, #12]
  4265b0:	bl	4022b0 <memmove@plt>
  4265b4:	ldur	x9, [x29, #-16]
  4265b8:	add	x0, x9, #0xf8
  4265bc:	ldr	w1, [sp, #12]
  4265c0:	bl	4025c0 <strrchr@plt>
  4265c4:	str	x0, [sp, #16]
  4265c8:	cbz	x0, 426628 <wcrtomb@plt+0x23d18>
  4265cc:	ldr	x8, [sp, #16]
  4265d0:	ldur	x9, [x29, #-16]
  4265d4:	add	x9, x9, #0xf8
  4265d8:	cmp	x8, x9
  4265dc:	b.ne	4265ec <wcrtomb@plt+0x23cdc>  // b.any
  4265e0:	ldr	x8, [sp, #16]
  4265e4:	ldrb	w9, [x8, #1]
  4265e8:	cbz	w9, 426628 <wcrtomb@plt+0x23d18>
  4265ec:	ldr	x8, [sp, #16]
  4265f0:	add	x8, x8, #0x1
  4265f4:	str	x8, [sp, #16]
  4265f8:	mov	x0, x8
  4265fc:	bl	4022f0 <strlen@plt>
  426600:	str	x0, [sp, #24]
  426604:	ldur	x8, [x29, #-16]
  426608:	add	x0, x8, #0xf8
  42660c:	ldr	x1, [sp, #16]
  426610:	ldr	x8, [sp, #24]
  426614:	add	x2, x8, #0x1
  426618:	bl	4022b0 <memmove@plt>
  42661c:	ldr	x8, [sp, #24]
  426620:	ldur	x9, [x29, #-16]
  426624:	str	x8, [x9, #96]
  426628:	ldur	x8, [x29, #-8]
  42662c:	ldr	x8, [x8, #32]
  426630:	ldur	x9, [x29, #-16]
  426634:	str	x8, [x9, #56]
  426638:	ldur	x9, [x29, #-16]
  42663c:	str	x8, [x9, #48]
  426640:	ldp	x29, x30, [sp, #48]
  426644:	add	sp, sp, #0x40
  426648:	ret
  42664c:	sub	sp, sp, #0x30
  426650:	stp	x29, x30, [sp, #32]
  426654:	add	x29, sp, #0x20
  426658:	str	x0, [sp, #16]
  42665c:	str	w1, [sp, #12]
  426660:	ldr	x0, [sp, #16]
  426664:	ldr	w1, [sp, #12]
  426668:	bl	426c70 <wcrtomb@plt+0x24360>
  42666c:	str	x0, [sp]
  426670:	cbz	x0, 42670c <wcrtomb@plt+0x23dfc>
  426674:	b	426678 <wcrtomb@plt+0x23d68>
  426678:	mov	x8, #0x6969                	// #26985
  42667c:	ldr	x9, [sp]
  426680:	cmp	x9, x8
  426684:	b.eq	42670c <wcrtomb@plt+0x23dfc>  // b.none
  426688:	b	42668c <wcrtomb@plt+0x23d7c>
  42668c:	mov	x8, #0x9fa0                	// #40864
  426690:	ldr	x9, [sp]
  426694:	cmp	x9, x8
  426698:	b.eq	42670c <wcrtomb@plt+0x23dfc>  // b.none
  42669c:	b	4266a0 <wcrtomb@plt+0x23d90>
  4266a0:	mov	x8, #0x4973                	// #18803
  4266a4:	movk	x8, #0x5265, lsl #16
  4266a8:	ldr	x9, [sp]
  4266ac:	cmp	x9, x8
  4266b0:	b.eq	426700 <wcrtomb@plt+0x23df0>  // b.none
  4266b4:	b	4266b8 <wcrtomb@plt+0x23da8>
  4266b8:	mov	x8, #0x414f                	// #16719
  4266bc:	movk	x8, #0x5346, lsl #16
  4266c0:	ldr	x9, [sp]
  4266c4:	cmp	x9, x8
  4266c8:	b.eq	42670c <wcrtomb@plt+0x23dfc>  // b.none
  4266cc:	b	4266d0 <wcrtomb@plt+0x23dc0>
  4266d0:	mov	x8, #0x5342                	// #21314
  4266d4:	movk	x8, #0x5846, lsl #16
  4266d8:	ldr	x9, [sp]
  4266dc:	cmp	x9, x8
  4266e0:	b.eq	426700 <wcrtomb@plt+0x23df0>  // b.none
  4266e4:	b	4266e8 <wcrtomb@plt+0x23dd8>
  4266e8:	mov	x8, #0x4d42                	// #19778
  4266ec:	movk	x8, #0xff53, lsl #16
  4266f0:	ldr	x9, [sp]
  4266f4:	cmp	x9, x8
  4266f8:	b.eq	42670c <wcrtomb@plt+0x23dfc>  // b.none
  4266fc:	b	426714 <wcrtomb@plt+0x23e04>
  426700:	mov	w8, #0x2                   	// #2
  426704:	stur	w8, [x29, #-4]
  426708:	b	42671c <wcrtomb@plt+0x23e0c>
  42670c:	stur	wzr, [x29, #-4]
  426710:	b	42671c <wcrtomb@plt+0x23e0c>
  426714:	mov	w8, #0x1                   	// #1
  426718:	stur	w8, [x29, #-4]
  42671c:	ldur	w0, [x29, #-4]
  426720:	ldp	x29, x30, [sp, #32]
  426724:	add	sp, sp, #0x30
  426728:	ret
  42672c:	sub	sp, sp, #0x40
  426730:	stp	x29, x30, [sp, #48]
  426734:	add	x29, sp, #0x30
  426738:	mov	w8, #0x102                 	// #258
  42673c:	stur	x0, [x29, #-16]
  426740:	str	x1, [sp, #24]
  426744:	ldur	x9, [x29, #-16]
  426748:	ldr	w10, [x9, #72]
  42674c:	and	w8, w10, w8
  426750:	cbz	w8, 426814 <wcrtomb@plt+0x23f04>
  426754:	ldr	x8, [sp, #24]
  426758:	add	x8, x8, #0x78
  42675c:	str	x8, [sp, #16]
  426760:	mov	x0, #0x18                  	// #24
  426764:	bl	402450 <malloc@plt>
  426768:	str	x0, [sp, #8]
  42676c:	ldr	x8, [sp, #8]
  426770:	cbnz	x8, 426784 <wcrtomb@plt+0x23e74>
  426774:	mov	w8, wzr
  426778:	and	w8, w8, #0x1
  42677c:	sturb	w8, [x29, #-1]
  426780:	b	426854 <wcrtomb@plt+0x23f44>
  426784:	ldr	x8, [sp, #16]
  426788:	ldr	x8, [x8]
  42678c:	ldr	x9, [sp, #8]
  426790:	str	x8, [x9]
  426794:	ldr	x8, [sp, #16]
  426798:	ldr	x8, [x8, #8]
  42679c:	ldr	x9, [sp, #8]
  4267a0:	str	x8, [x9, #8]
  4267a4:	ldr	x8, [sp, #24]
  4267a8:	ldr	x9, [sp, #8]
  4267ac:	str	x8, [x9, #16]
  4267b0:	ldur	x8, [x29, #-16]
  4267b4:	ldr	x0, [x8, #88]
  4267b8:	ldr	x1, [sp, #8]
  4267bc:	bl	41f584 <wcrtomb@plt+0x1cc74>
  4267c0:	str	x0, [sp]
  4267c4:	ldr	x8, [sp]
  4267c8:	ldr	x9, [sp, #8]
  4267cc:	cmp	x8, x9
  4267d0:	b.eq	426810 <wcrtomb@plt+0x23f00>  // b.none
  4267d4:	ldr	x0, [sp, #8]
  4267d8:	bl	4026c0 <free@plt>
  4267dc:	ldr	x8, [sp]
  4267e0:	cbnz	x8, 4267f4 <wcrtomb@plt+0x23ee4>
  4267e4:	mov	w8, wzr
  4267e8:	and	w8, w8, #0x1
  4267ec:	sturb	w8, [x29, #-1]
  4267f0:	b	426854 <wcrtomb@plt+0x23f44>
  4267f4:	ldr	x8, [sp]
  4267f8:	ldr	x8, [x8, #16]
  4267fc:	ldr	x9, [sp, #24]
  426800:	str	x8, [x9]
  426804:	ldr	x8, [sp, #24]
  426808:	mov	w10, #0x2                   	// #2
  42680c:	strh	w10, [x8, #108]
  426810:	b	426848 <wcrtomb@plt+0x23f38>
  426814:	ldur	x8, [x29, #-16]
  426818:	ldr	x0, [x8, #88]
  42681c:	ldr	x8, [sp, #24]
  426820:	add	x1, x8, #0x78
  426824:	bl	43fb2c <_obstack_memory_used@@Base+0x1820c>
  426828:	tbnz	w0, #0, 426830 <wcrtomb@plt+0x23f20>
  42682c:	b	426848 <wcrtomb@plt+0x23f38>
  426830:	ldr	x8, [sp, #24]
  426834:	ldr	x9, [sp, #24]
  426838:	str	x8, [x9]
  42683c:	ldr	x8, [sp, #24]
  426840:	mov	w10, #0x2                   	// #2
  426844:	strh	w10, [x8, #108]
  426848:	mov	w8, #0x1                   	// #1
  42684c:	and	w8, w8, #0x1
  426850:	sturb	w8, [x29, #-1]
  426854:	ldurb	w8, [x29, #-1]
  426858:	and	w0, w8, #0x1
  42685c:	ldp	x29, x30, [sp, #48]
  426860:	add	sp, sp, #0x40
  426864:	ret
  426868:	sub	sp, sp, #0x30
  42686c:	stp	x29, x30, [sp, #32]
  426870:	add	x29, sp, #0x20
  426874:	stur	x0, [x29, #-8]
  426878:	stur	w1, [x29, #-12]
  42687c:	and	w8, w2, #0x1
  426880:	sturb	w8, [x29, #-13]
  426884:	ldur	x9, [x29, #-8]
  426888:	ldr	w8, [x9, #44]
  42688c:	str	w8, [sp, #12]
  426890:	ldr	w8, [sp, #12]
  426894:	ldur	w9, [x29, #-12]
  426898:	cmp	w8, w9
  42689c:	b.ne	4268b4 <wcrtomb@plt+0x23fa4>  // b.any
  4268a0:	ldr	w8, [sp, #12]
  4268a4:	mov	w9, #0xffffff9c            	// #-100
  4268a8:	cmp	w8, w9
  4268ac:	b.eq	4268b4 <wcrtomb@plt+0x23fa4>  // b.none
  4268b0:	bl	402610 <abort@plt>
  4268b4:	ldurb	w8, [x29, #-13]
  4268b8:	tbnz	w8, #0, 4268c0 <wcrtomb@plt+0x23fb0>
  4268bc:	b	4268f4 <wcrtomb@plt+0x23fe4>
  4268c0:	ldur	x8, [x29, #-8]
  4268c4:	add	x0, x8, #0x60
  4268c8:	ldr	w1, [sp, #12]
  4268cc:	bl	43ffe0 <_obstack_memory_used@@Base+0x186c0>
  4268d0:	str	w0, [sp, #8]
  4268d4:	ldr	w9, [sp, #8]
  4268d8:	mov	w10, wzr
  4268dc:	cmp	w10, w9
  4268e0:	cset	w9, gt
  4268e4:	tbnz	w9, #0, 4268f0 <wcrtomb@plt+0x23fe0>
  4268e8:	ldr	w0, [sp, #8]
  4268ec:	bl	4025a0 <close@plt>
  4268f0:	b	426920 <wcrtomb@plt+0x24010>
  4268f4:	ldur	x8, [x29, #-8]
  4268f8:	ldr	w9, [x8, #72]
  4268fc:	and	w9, w9, #0x4
  426900:	cbnz	w9, 426920 <wcrtomb@plt+0x24010>
  426904:	ldr	w8, [sp, #12]
  426908:	mov	w9, wzr
  42690c:	cmp	w9, w8
  426910:	cset	w8, gt
  426914:	tbnz	w8, #0, 426920 <wcrtomb@plt+0x24010>
  426918:	ldr	w0, [sp, #12]
  42691c:	bl	4025a0 <close@plt>
  426920:	ldur	w8, [x29, #-12]
  426924:	ldur	x9, [x29, #-8]
  426928:	str	w8, [x9, #44]
  42692c:	ldp	x29, x30, [sp, #32]
  426930:	add	sp, sp, #0x30
  426934:	ret
  426938:	sub	sp, sp, #0x30
  42693c:	stp	x29, x30, [sp, #32]
  426940:	add	x29, sp, #0x20
  426944:	str	x0, [sp, #16]
  426948:	str	x1, [sp, #8]
  42694c:	str	w2, [sp, #4]
  426950:	ldr	w8, [sp, #4]
  426954:	cbz	w8, 4269a0 <wcrtomb@plt+0x24090>
  426958:	ldr	w8, [sp, #4]
  42695c:	cmp	w8, #0x1
  426960:	b.eq	4269a0 <wcrtomb@plt+0x24090>  // b.none
  426964:	ldr	w8, [sp, #4]
  426968:	cmp	w8, #0x2
  42696c:	b.eq	4269a0 <wcrtomb@plt+0x24090>  // b.none
  426970:	ldr	w8, [sp, #4]
  426974:	cmp	w8, #0x3
  426978:	b.eq	4269a0 <wcrtomb@plt+0x24090>  // b.none
  42697c:	ldr	w8, [sp, #4]
  426980:	cmp	w8, #0x4
  426984:	b.eq	4269a0 <wcrtomb@plt+0x24090>  // b.none
  426988:	bl	402870 <__errno_location@plt>
  42698c:	mov	w8, #0x16                  	// #22
  426990:	str	w8, [x0]
  426994:	mov	w8, #0x1                   	// #1
  426998:	stur	w8, [x29, #-4]
  42699c:	b	4269b0 <wcrtomb@plt+0x240a0>
  4269a0:	ldr	w8, [sp, #4]
  4269a4:	ldr	x9, [sp, #8]
  4269a8:	strh	w8, [x9, #112]
  4269ac:	stur	wzr, [x29, #-4]
  4269b0:	ldur	w0, [x29, #-4]
  4269b4:	ldp	x29, x30, [sp, #32]
  4269b8:	add	sp, sp, #0x30
  4269bc:	ret
  4269c0:	sub	sp, sp, #0x40
  4269c4:	stp	x29, x30, [sp, #48]
  4269c8:	add	x29, sp, #0x30
  4269cc:	stur	x0, [x29, #-16]
  4269d0:	stur	w1, [x29, #-20]
  4269d4:	ldur	w8, [x29, #-20]
  4269d8:	cbz	w8, 426a00 <wcrtomb@plt+0x240f0>
  4269dc:	ldur	w8, [x29, #-20]
  4269e0:	cmp	w8, #0x1, lsl #12
  4269e4:	b.eq	426a00 <wcrtomb@plt+0x240f0>  // b.none
  4269e8:	bl	402870 <__errno_location@plt>
  4269ec:	mov	w8, #0x16                  	// #22
  4269f0:	str	w8, [x0]
  4269f4:	mov	x9, xzr
  4269f8:	stur	x9, [x29, #-8]
  4269fc:	b	426bc4 <wcrtomb@plt+0x242b4>
  426a00:	ldur	x8, [x29, #-16]
  426a04:	ldr	x8, [x8]
  426a08:	str	x8, [sp, #16]
  426a0c:	bl	402870 <__errno_location@plt>
  426a10:	str	wzr, [x0]
  426a14:	ldur	x8, [x29, #-16]
  426a18:	ldr	w9, [x8, #72]
  426a1c:	and	w9, w9, #0x2000
  426a20:	cbz	w9, 426a30 <wcrtomb@plt+0x24120>
  426a24:	mov	x8, xzr
  426a28:	stur	x8, [x29, #-8]
  426a2c:	b	426bc4 <wcrtomb@plt+0x242b4>
  426a30:	ldr	x8, [sp, #16]
  426a34:	ldrh	w9, [x8, #108]
  426a38:	cmp	w9, #0x9
  426a3c:	b.ne	426a50 <wcrtomb@plt+0x24140>  // b.any
  426a40:	ldr	x8, [sp, #16]
  426a44:	ldr	x8, [x8, #16]
  426a48:	stur	x8, [x29, #-8]
  426a4c:	b	426bc4 <wcrtomb@plt+0x242b4>
  426a50:	ldr	x8, [sp, #16]
  426a54:	ldrh	w9, [x8, #108]
  426a58:	cmp	w9, #0x1
  426a5c:	b.eq	426a6c <wcrtomb@plt+0x2415c>  // b.none
  426a60:	mov	x8, xzr
  426a64:	stur	x8, [x29, #-8]
  426a68:	b	426bc4 <wcrtomb@plt+0x242b4>
  426a6c:	ldur	x8, [x29, #-16]
  426a70:	ldr	x8, [x8, #8]
  426a74:	cbz	x8, 426a84 <wcrtomb@plt+0x24174>
  426a78:	ldur	x8, [x29, #-16]
  426a7c:	ldr	x0, [x8, #8]
  426a80:	bl	4247cc <wcrtomb@plt+0x21ebc>
  426a84:	ldur	w8, [x29, #-20]
  426a88:	cmp	w8, #0x1, lsl #12
  426a8c:	b.ne	426aac <wcrtomb@plt+0x2419c>  // b.any
  426a90:	ldur	x8, [x29, #-16]
  426a94:	ldr	w9, [x8, #72]
  426a98:	orr	w9, w9, #0x1000
  426a9c:	str	w9, [x8, #72]
  426aa0:	mov	w9, #0x2                   	// #2
  426aa4:	stur	w9, [x29, #-20]
  426aa8:	b	426ab4 <wcrtomb@plt+0x241a4>
  426aac:	mov	w8, #0x1                   	// #1
  426ab0:	stur	w8, [x29, #-20]
  426ab4:	ldr	x8, [sp, #16]
  426ab8:	ldr	x8, [x8, #88]
  426abc:	cbnz	x8, 426ae4 <wcrtomb@plt+0x241d4>
  426ac0:	ldr	x8, [sp, #16]
  426ac4:	ldr	x8, [x8, #48]
  426ac8:	ldrb	w9, [x8]
  426acc:	cmp	w9, #0x2f
  426ad0:	b.eq	426ae4 <wcrtomb@plt+0x241d4>  // b.none
  426ad4:	ldur	x8, [x29, #-16]
  426ad8:	ldr	w9, [x8, #72]
  426adc:	and	w9, w9, #0x4
  426ae0:	cbz	w9, 426b00 <wcrtomb@plt+0x241f0>
  426ae4:	ldur	x0, [x29, #-16]
  426ae8:	ldur	w1, [x29, #-20]
  426aec:	bl	4257c0 <wcrtomb@plt+0x22eb0>
  426af0:	ldur	x8, [x29, #-16]
  426af4:	str	x0, [x8, #8]
  426af8:	stur	x0, [x29, #-8]
  426afc:	b	426bc4 <wcrtomb@plt+0x242b4>
  426b00:	ldur	x0, [x29, #-16]
  426b04:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  426b08:	add	x1, x1, #0xd5f
  426b0c:	bl	42473c <wcrtomb@plt+0x21e2c>
  426b10:	str	w0, [sp, #12]
  426b14:	cmp	w0, #0x0
  426b18:	cset	w8, ge  // ge = tcont
  426b1c:	tbnz	w8, #0, 426b34 <wcrtomb@plt+0x24224>
  426b20:	ldur	x8, [x29, #-16]
  426b24:	mov	x9, xzr
  426b28:	str	x9, [x8, #8]
  426b2c:	stur	x9, [x29, #-8]
  426b30:	b	426bc4 <wcrtomb@plt+0x242b4>
  426b34:	ldur	x0, [x29, #-16]
  426b38:	ldur	w1, [x29, #-20]
  426b3c:	bl	4257c0 <wcrtomb@plt+0x22eb0>
  426b40:	ldur	x8, [x29, #-16]
  426b44:	str	x0, [x8, #8]
  426b48:	ldur	x8, [x29, #-16]
  426b4c:	ldr	w9, [x8, #72]
  426b50:	and	w9, w9, #0x200
  426b54:	cbz	w9, 426b70 <wcrtomb@plt+0x24260>
  426b58:	ldur	x0, [x29, #-16]
  426b5c:	ldr	w1, [sp, #12]
  426b60:	mov	w8, #0x1                   	// #1
  426b64:	and	w2, w8, #0x1
  426b68:	bl	426868 <wcrtomb@plt+0x23f58>
  426b6c:	b	426bb8 <wcrtomb@plt+0x242a8>
  426b70:	ldr	w0, [sp, #12]
  426b74:	bl	402340 <fchdir@plt>
  426b78:	cbz	w0, 426bb0 <wcrtomb@plt+0x242a0>
  426b7c:	bl	402870 <__errno_location@plt>
  426b80:	ldr	w8, [x0]
  426b84:	str	w8, [sp, #8]
  426b88:	ldr	w0, [sp, #12]
  426b8c:	bl	4025a0 <close@plt>
  426b90:	ldr	w8, [sp, #8]
  426b94:	str	w8, [sp, #4]
  426b98:	bl	402870 <__errno_location@plt>
  426b9c:	ldr	w8, [sp, #4]
  426ba0:	str	w8, [x0]
  426ba4:	mov	x9, xzr
  426ba8:	stur	x9, [x29, #-8]
  426bac:	b	426bc4 <wcrtomb@plt+0x242b4>
  426bb0:	ldr	w0, [sp, #12]
  426bb4:	bl	4025a0 <close@plt>
  426bb8:	ldur	x8, [x29, #-16]
  426bbc:	ldr	x8, [x8, #8]
  426bc0:	stur	x8, [x29, #-8]
  426bc4:	ldur	x0, [x29, #-8]
  426bc8:	ldp	x29, x30, [sp, #48]
  426bcc:	add	sp, sp, #0x40
  426bd0:	ret
  426bd4:	sub	sp, sp, #0x20
  426bd8:	str	x0, [sp, #24]
  426bdc:	str	x1, [sp, #16]
  426be0:	ldr	x8, [sp, #24]
  426be4:	str	x8, [sp, #8]
  426be8:	ldr	x8, [sp, #8]
  426bec:	ldr	x8, [x8, #8]
  426bf0:	ldr	x9, [sp, #16]
  426bf4:	udiv	x10, x8, x9
  426bf8:	mul	x9, x10, x9
  426bfc:	subs	x0, x8, x9
  426c00:	add	sp, sp, #0x20
  426c04:	ret
  426c08:	sub	sp, sp, #0x30
  426c0c:	str	x0, [sp, #40]
  426c10:	str	x1, [sp, #32]
  426c14:	ldr	x8, [sp, #40]
  426c18:	str	x8, [sp, #24]
  426c1c:	ldr	x8, [sp, #32]
  426c20:	str	x8, [sp, #16]
  426c24:	ldr	x8, [sp, #24]
  426c28:	ldr	x8, [x8, #8]
  426c2c:	ldr	x9, [sp, #16]
  426c30:	ldr	x9, [x9, #8]
  426c34:	mov	w10, #0x0                   	// #0
  426c38:	cmp	x8, x9
  426c3c:	str	w10, [sp, #12]
  426c40:	b.ne	426c60 <wcrtomb@plt+0x24350>  // b.any
  426c44:	ldr	x8, [sp, #24]
  426c48:	ldr	x8, [x8]
  426c4c:	ldr	x9, [sp, #16]
  426c50:	ldr	x9, [x9]
  426c54:	cmp	x8, x9
  426c58:	cset	w10, eq  // eq = none
  426c5c:	str	w10, [sp, #12]
  426c60:	ldr	w8, [sp, #12]
  426c64:	and	w0, w8, #0x1
  426c68:	add	sp, sp, #0x30
  426c6c:	ret
  426c70:	sub	sp, sp, #0xd0
  426c74:	stp	x29, x30, [sp, #192]
  426c78:	add	x29, sp, #0xc0
  426c7c:	stur	x0, [x29, #-16]
  426c80:	stur	w1, [x29, #-20]
  426c84:	ldur	x8, [x29, #-16]
  426c88:	ldr	x8, [x8, #80]
  426c8c:	stur	x8, [x29, #-32]
  426c90:	ldur	x8, [x29, #-32]
  426c94:	ldr	x8, [x8, #80]
  426c98:	stur	x8, [x29, #-40]
  426c9c:	ldur	x8, [x29, #-32]
  426ca0:	ldr	w9, [x8, #72]
  426ca4:	and	w9, w9, #0x200
  426ca8:	cbnz	w9, 426cb4 <wcrtomb@plt+0x243a4>
  426cac:	stur	xzr, [x29, #-8]
  426cb0:	b	426dcc <wcrtomb@plt+0x244bc>
  426cb4:	ldur	x8, [x29, #-40]
  426cb8:	cbnz	x8, 426cf0 <wcrtomb@plt+0x243e0>
  426cbc:	mov	x0, #0xd                   	// #13
  426cc0:	mov	x8, xzr
  426cc4:	mov	x1, x8
  426cc8:	adrp	x2, 426000 <wcrtomb@plt+0x236f0>
  426ccc:	add	x2, x2, #0xddc
  426cd0:	adrp	x3, 426000 <wcrtomb@plt+0x236f0>
  426cd4:	add	x3, x3, #0xe18
  426cd8:	adrp	x4, 402000 <mbrtowc@plt-0x280>
  426cdc:	add	x4, x4, #0x6c0
  426ce0:	bl	41e6b8 <wcrtomb@plt+0x1bda8>
  426ce4:	ldur	x8, [x29, #-32]
  426ce8:	str	x0, [x8, #80]
  426cec:	stur	x0, [x29, #-40]
  426cf0:	ldur	x8, [x29, #-40]
  426cf4:	cbz	x8, 426d2c <wcrtomb@plt+0x2441c>
  426cf8:	ldur	x8, [x29, #-16]
  426cfc:	ldr	x8, [x8, #120]
  426d00:	add	x1, sp, #0x8
  426d04:	str	x8, [sp, #8]
  426d08:	ldur	x0, [x29, #-40]
  426d0c:	bl	41e228 <wcrtomb@plt+0x1b918>
  426d10:	stur	x0, [x29, #-48]
  426d14:	ldur	x8, [x29, #-48]
  426d18:	cbz	x8, 426d2c <wcrtomb@plt+0x2441c>
  426d1c:	ldur	x8, [x29, #-48]
  426d20:	ldr	x8, [x8, #8]
  426d24:	stur	x8, [x29, #-8]
  426d28:	b	426dcc <wcrtomb@plt+0x244bc>
  426d2c:	ldur	w8, [x29, #-20]
  426d30:	cmp	w8, #0x0
  426d34:	cset	w8, lt  // lt = tstop
  426d38:	tbnz	w8, #0, 426d4c <wcrtomb@plt+0x2443c>
  426d3c:	ldur	w0, [x29, #-20]
  426d40:	add	x1, sp, #0x18
  426d44:	bl	402510 <fstatfs@plt>
  426d48:	cbz	w0, 426d54 <wcrtomb@plt+0x24444>
  426d4c:	stur	xzr, [x29, #-8]
  426d50:	b	426dcc <wcrtomb@plt+0x244bc>
  426d54:	ldur	x8, [x29, #-40]
  426d58:	cbz	x8, 426dc4 <wcrtomb@plt+0x244b4>
  426d5c:	mov	x0, #0x10                  	// #16
  426d60:	bl	402450 <malloc@plt>
  426d64:	str	x0, [sp]
  426d68:	ldr	x8, [sp]
  426d6c:	cbz	x8, 426dc4 <wcrtomb@plt+0x244b4>
  426d70:	ldur	x8, [x29, #-16]
  426d74:	ldr	x8, [x8, #120]
  426d78:	ldr	x9, [sp]
  426d7c:	str	x8, [x9]
  426d80:	ldr	x8, [sp, #24]
  426d84:	ldr	x9, [sp]
  426d88:	str	x8, [x9, #8]
  426d8c:	ldur	x0, [x29, #-40]
  426d90:	ldr	x1, [sp]
  426d94:	bl	41f584 <wcrtomb@plt+0x1cc74>
  426d98:	stur	x0, [x29, #-48]
  426d9c:	ldur	x8, [x29, #-48]
  426da0:	cbz	x8, 426dbc <wcrtomb@plt+0x244ac>
  426da4:	ldur	x8, [x29, #-48]
  426da8:	ldr	x9, [sp]
  426dac:	cmp	x8, x9
  426db0:	b.eq	426db8 <wcrtomb@plt+0x244a8>  // b.none
  426db4:	bl	402610 <abort@plt>
  426db8:	b	426dc4 <wcrtomb@plt+0x244b4>
  426dbc:	ldr	x0, [sp]
  426dc0:	bl	4026c0 <free@plt>
  426dc4:	ldr	x8, [sp, #24]
  426dc8:	stur	x8, [x29, #-8]
  426dcc:	ldur	x0, [x29, #-8]
  426dd0:	ldp	x29, x30, [sp, #192]
  426dd4:	add	sp, sp, #0xd0
  426dd8:	ret
  426ddc:	sub	sp, sp, #0x20
  426de0:	str	x0, [sp, #24]
  426de4:	str	x1, [sp, #16]
  426de8:	ldr	x8, [sp, #24]
  426dec:	str	x8, [sp, #8]
  426df0:	ldr	x8, [sp, #8]
  426df4:	ldr	x8, [x8]
  426df8:	str	x8, [sp]
  426dfc:	ldr	x8, [sp]
  426e00:	ldr	x9, [sp, #16]
  426e04:	udiv	x10, x8, x9
  426e08:	mul	x9, x10, x9
  426e0c:	subs	x0, x8, x9
  426e10:	add	sp, sp, #0x20
  426e14:	ret
  426e18:	sub	sp, sp, #0x20
  426e1c:	str	x0, [sp, #24]
  426e20:	str	x1, [sp, #16]
  426e24:	ldr	x8, [sp, #24]
  426e28:	str	x8, [sp, #8]
  426e2c:	ldr	x8, [sp, #16]
  426e30:	str	x8, [sp]
  426e34:	ldr	x8, [sp, #8]
  426e38:	ldr	x8, [x8]
  426e3c:	ldr	x9, [sp]
  426e40:	ldr	x9, [x9]
  426e44:	cmp	x8, x9
  426e48:	cset	w10, eq  // eq = none
  426e4c:	and	w0, w10, #0x1
  426e50:	add	sp, sp, #0x20
  426e54:	ret
  426e58:	sub	sp, sp, #0x20
  426e5c:	str	x0, [sp, #24]
  426e60:	str	w1, [sp, #20]
  426e64:	ldr	w8, [sp, #20]
  426e68:	subs	w8, w8, #0x1
  426e6c:	mov	w9, w8
  426e70:	ubfx	x9, x9, #0, #32
  426e74:	cmp	x9, #0xb
  426e78:	str	x9, [sp, #8]
  426e7c:	b.hi	426eec <wcrtomb@plt+0x245dc>  // b.pmore
  426e80:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  426e84:	add	x8, x8, #0x458
  426e88:	ldr	x11, [sp, #8]
  426e8c:	ldrsw	x10, [x8, x11, lsl #2]
  426e90:	add	x9, x8, x10
  426e94:	br	x9
  426e98:	mov	w8, #0x6000                	// #24576
  426e9c:	str	w8, [sp, #16]
  426ea0:	b	426ef0 <wcrtomb@plt+0x245e0>
  426ea4:	mov	w8, #0x2000                	// #8192
  426ea8:	str	w8, [sp, #16]
  426eac:	b	426ef0 <wcrtomb@plt+0x245e0>
  426eb0:	mov	w8, #0x4000                	// #16384
  426eb4:	str	w8, [sp, #16]
  426eb8:	b	426ef0 <wcrtomb@plt+0x245e0>
  426ebc:	mov	w8, #0x1000                	// #4096
  426ec0:	str	w8, [sp, #16]
  426ec4:	b	426ef0 <wcrtomb@plt+0x245e0>
  426ec8:	mov	w8, #0xa000                	// #40960
  426ecc:	str	w8, [sp, #16]
  426ed0:	b	426ef0 <wcrtomb@plt+0x245e0>
  426ed4:	mov	w8, #0x8000                	// #32768
  426ed8:	str	w8, [sp, #16]
  426edc:	b	426ef0 <wcrtomb@plt+0x245e0>
  426ee0:	mov	w8, #0xc000                	// #49152
  426ee4:	str	w8, [sp, #16]
  426ee8:	b	426ef0 <wcrtomb@plt+0x245e0>
  426eec:	str	wzr, [sp, #16]
  426ef0:	ldr	w8, [sp, #16]
  426ef4:	ldr	x9, [sp, #24]
  426ef8:	str	w8, [x9, #16]
  426efc:	add	sp, sp, #0x20
  426f00:	ret
  426f04:	sub	sp, sp, #0x40
  426f08:	stp	x29, x30, [sp, #48]
  426f0c:	add	x29, sp, #0x30
  426f10:	mov	x8, #0x6969                	// #26985
  426f14:	stur	x0, [x29, #-16]
  426f18:	stur	w1, [x29, #-20]
  426f1c:	ldur	x0, [x29, #-16]
  426f20:	ldur	w1, [x29, #-20]
  426f24:	str	x8, [sp, #16]
  426f28:	bl	426c70 <wcrtomb@plt+0x24360>
  426f2c:	ldr	x8, [sp, #16]
  426f30:	cmp	x0, x8
  426f34:	str	x0, [sp, #8]
  426f38:	b.eq	426f78 <wcrtomb@plt+0x24668>  // b.none
  426f3c:	b	426f40 <wcrtomb@plt+0x24630>
  426f40:	mov	x8, #0x1994                	// #6548
  426f44:	movk	x8, #0x102, lsl #16
  426f48:	ldr	x9, [sp, #8]
  426f4c:	cmp	x9, x8
  426f50:	b.eq	426f78 <wcrtomb@plt+0x24668>  // b.none
  426f54:	b	426f58 <wcrtomb@plt+0x24648>
  426f58:	mov	x8, #0x4d42                	// #19778
  426f5c:	movk	x8, #0xff53, lsl #16
  426f60:	ldr	x9, [sp, #8]
  426f64:	cmp	x9, x8
  426f68:	cset	w10, eq  // eq = none
  426f6c:	eor	w10, w10, #0x1
  426f70:	tbnz	w10, #0, 426f88 <wcrtomb@plt+0x24678>
  426f74:	b	426f78 <wcrtomb@plt+0x24668>
  426f78:	mov	w8, wzr
  426f7c:	and	w8, w8, #0x1
  426f80:	sturb	w8, [x29, #-1]
  426f84:	b	426f94 <wcrtomb@plt+0x24684>
  426f88:	mov	w8, #0x1                   	// #1
  426f8c:	and	w8, w8, #0x1
  426f90:	sturb	w8, [x29, #-1]
  426f94:	ldurb	w8, [x29, #-1]
  426f98:	and	w0, w8, #0x1
  426f9c:	ldp	x29, x30, [sp, #48]
  426fa0:	add	sp, sp, #0x40
  426fa4:	ret
  426fa8:	sub	sp, sp, #0x30
  426fac:	str	x0, [sp, #40]
  426fb0:	str	x1, [sp, #32]
  426fb4:	ldr	x8, [sp, #40]
  426fb8:	ldr	x8, [x8, #32]
  426fbc:	str	x8, [sp, #16]
  426fc0:	ldr	x8, [sp, #40]
  426fc4:	ldr	x8, [x8, #8]
  426fc8:	str	x8, [sp, #24]
  426fcc:	ldr	x8, [sp, #24]
  426fd0:	cbz	x8, 42702c <wcrtomb@plt+0x2471c>
  426fd4:	ldr	x8, [sp, #24]
  426fd8:	ldr	x8, [x8, #48]
  426fdc:	ldr	x9, [sp, #24]
  426fe0:	add	x9, x9, #0xf8
  426fe4:	cmp	x8, x9
  426fe8:	b.eq	427010 <wcrtomb@plt+0x24700>  // b.none
  426fec:	ldr	x8, [sp, #16]
  426ff0:	ldr	x9, [sp, #24]
  426ff4:	ldr	x9, [x9, #48]
  426ff8:	ldr	x10, [sp, #24]
  426ffc:	ldr	x10, [x10, #56]
  427000:	subs	x9, x9, x10
  427004:	add	x8, x8, x9
  427008:	ldr	x9, [sp, #24]
  42700c:	str	x8, [x9, #48]
  427010:	ldr	x8, [sp, #16]
  427014:	ldr	x9, [sp, #24]
  427018:	str	x8, [x9, #56]
  42701c:	ldr	x8, [sp, #24]
  427020:	ldr	x8, [x8, #16]
  427024:	str	x8, [sp, #24]
  427028:	b	426fcc <wcrtomb@plt+0x246bc>
  42702c:	ldr	x8, [sp, #32]
  427030:	str	x8, [sp, #24]
  427034:	ldr	x8, [sp, #24]
  427038:	ldr	x8, [x8, #88]
  42703c:	cmp	x8, #0x0
  427040:	cset	w9, lt  // lt = tstop
  427044:	tbnz	w9, #0, 4270c4 <wcrtomb@plt+0x247b4>
  427048:	ldr	x8, [sp, #24]
  42704c:	ldr	x8, [x8, #48]
  427050:	ldr	x9, [sp, #24]
  427054:	add	x9, x9, #0xf8
  427058:	cmp	x8, x9
  42705c:	b.eq	427084 <wcrtomb@plt+0x24774>  // b.none
  427060:	ldr	x8, [sp, #16]
  427064:	ldr	x9, [sp, #24]
  427068:	ldr	x9, [x9, #48]
  42706c:	ldr	x10, [sp, #24]
  427070:	ldr	x10, [x10, #56]
  427074:	subs	x9, x9, x10
  427078:	add	x8, x8, x9
  42707c:	ldr	x9, [sp, #24]
  427080:	str	x8, [x9, #48]
  427084:	ldr	x8, [sp, #16]
  427088:	ldr	x9, [sp, #24]
  42708c:	str	x8, [x9, #56]
  427090:	ldr	x8, [sp, #24]
  427094:	ldr	x8, [x8, #16]
  427098:	cbz	x8, 4270ac <wcrtomb@plt+0x2479c>
  42709c:	ldr	x8, [sp, #24]
  4270a0:	ldr	x8, [x8, #16]
  4270a4:	str	x8, [sp, #8]
  4270a8:	b	4270b8 <wcrtomb@plt+0x247a8>
  4270ac:	ldr	x8, [sp, #24]
  4270b0:	ldr	x8, [x8, #8]
  4270b4:	str	x8, [sp, #8]
  4270b8:	ldr	x8, [sp, #8]
  4270bc:	str	x8, [sp, #24]
  4270c0:	b	427034 <wcrtomb@plt+0x24724>
  4270c4:	add	sp, sp, #0x30
  4270c8:	ret
  4270cc:	sub	sp, sp, #0x20
  4270d0:	str	x0, [sp, #24]
  4270d4:	str	x1, [sp, #16]
  4270d8:	ldr	x8, [sp, #24]
  4270dc:	ldr	x8, [x8]
  4270e0:	ldr	x8, [x8, #128]
  4270e4:	ldr	x9, [sp, #16]
  4270e8:	ldr	x9, [x9]
  4270ec:	ldr	x9, [x9, #128]
  4270f0:	cmp	x8, x9
  4270f4:	b.cs	427104 <wcrtomb@plt+0x247f4>  // b.hs, b.nlast
  4270f8:	mov	w8, #0xffffffff            	// #-1
  4270fc:	str	w8, [sp, #12]
  427100:	b	427130 <wcrtomb@plt+0x24820>
  427104:	ldr	x8, [sp, #16]
  427108:	ldr	x8, [x8]
  42710c:	ldr	x8, [x8, #128]
  427110:	ldr	x9, [sp, #24]
  427114:	ldr	x9, [x9]
  427118:	ldr	x9, [x9, #128]
  42711c:	mov	w10, wzr
  427120:	mov	w11, #0x1                   	// #1
  427124:	cmp	x8, x9
  427128:	csel	w10, w11, w10, cc  // cc = lo, ul, last
  42712c:	str	w10, [sp, #12]
  427130:	ldr	w8, [sp, #12]
  427134:	mov	w0, w8
  427138:	add	sp, sp, #0x20
  42713c:	ret
  427140:	sub	sp, sp, #0x30
  427144:	stp	x29, x30, [sp, #32]
  427148:	add	x29, sp, #0x20
  42714c:	stur	x0, [x29, #-8]
  427150:	str	x1, [sp, #16]
  427154:	ldur	x8, [x29, #-8]
  427158:	str	x8, [sp, #8]
  42715c:	ldr	x8, [sp, #16]
  427160:	str	x8, [sp]
  427164:	ldr	x8, [sp, #8]
  427168:	ldr	x8, [x8]
  42716c:	ldr	x8, [x8, #80]
  427170:	ldr	x8, [x8, #64]
  427174:	ldr	x0, [sp, #8]
  427178:	ldr	x1, [sp]
  42717c:	blr	x8
  427180:	ldp	x29, x30, [sp, #32]
  427184:	add	sp, sp, #0x30
  427188:	ret
  42718c:	sub	sp, sp, #0x30
  427190:	stp	x29, x30, [sp, #32]
  427194:	add	x29, sp, #0x20
  427198:	stur	x0, [x29, #-8]
  42719c:	str	x1, [sp, #16]
  4271a0:	str	x2, [sp, #8]
  4271a4:	ldr	x8, [sp, #8]
  4271a8:	cbnz	x8, 4271b8 <wcrtomb@plt+0x248a8>
  4271ac:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4271b0:	add	x8, x8, #0x8b8
  4271b4:	str	x8, [sp, #8]
  4271b8:	ldur	x1, [x29, #-8]
  4271bc:	ldr	x2, [sp, #16]
  4271c0:	ldr	x3, [sp, #8]
  4271c4:	mov	x8, xzr
  4271c8:	mov	x0, x8
  4271cc:	bl	4271dc <wcrtomb@plt+0x248cc>
  4271d0:	ldp	x29, x30, [sp, #32]
  4271d4:	add	sp, sp, #0x30
  4271d8:	ret
  4271dc:	sub	sp, sp, #0x50
  4271e0:	stp	x29, x30, [sp, #64]
  4271e4:	add	x29, sp, #0x40
  4271e8:	stur	x0, [x29, #-16]
  4271ec:	stur	x1, [x29, #-24]
  4271f0:	str	x2, [sp, #32]
  4271f4:	str	x3, [sp, #24]
  4271f8:	ldur	x8, [x29, #-16]
  4271fc:	cbnz	x8, 427208 <wcrtomb@plt+0x248f8>
  427200:	add	x8, sp, #0xc
  427204:	stur	x8, [x29, #-16]
  427208:	ldur	x0, [x29, #-16]
  42720c:	ldur	x1, [x29, #-24]
  427210:	ldr	x2, [sp, #32]
  427214:	ldr	x3, [sp, #24]
  427218:	bl	402280 <mbrtowc@plt>
  42721c:	str	x0, [sp, #16]
  427220:	ldr	x8, [sp, #16]
  427224:	mov	x9, #0xfffffffffffffffe    	// #-2
  427228:	cmp	x9, x8
  42722c:	b.hi	42726c <wcrtomb@plt+0x2495c>  // b.pmore
  427230:	ldr	x8, [sp, #32]
  427234:	cbz	x8, 42726c <wcrtomb@plt+0x2495c>
  427238:	mov	w8, wzr
  42723c:	mov	w0, w8
  427240:	bl	43feb8 <_obstack_memory_used@@Base+0x18598>
  427244:	tbnz	w0, #0, 42726c <wcrtomb@plt+0x2495c>
  427248:	ldur	x8, [x29, #-24]
  42724c:	ldrb	w9, [x8]
  427250:	strb	w9, [sp, #11]
  427254:	ldrb	w9, [sp, #11]
  427258:	ldur	x8, [x29, #-16]
  42725c:	str	w9, [x8]
  427260:	mov	x8, #0x1                   	// #1
  427264:	stur	x8, [x29, #-8]
  427268:	b	427274 <wcrtomb@plt+0x24964>
  42726c:	ldr	x8, [sp, #16]
  427270:	stur	x8, [x29, #-8]
  427274:	ldur	x0, [x29, #-8]
  427278:	ldp	x29, x30, [sp, #64]
  42727c:	add	sp, sp, #0x50
  427280:	ret

0000000000427284 <_obstack_begin@@Base>:
  427284:	sub	sp, sp, #0x40
  427288:	stp	x29, x30, [sp, #48]
  42728c:	add	x29, sp, #0x30
  427290:	stur	x0, [x29, #-8]
  427294:	stur	x1, [x29, #-16]
  427298:	str	x2, [sp, #24]
  42729c:	str	x3, [sp, #16]
  4272a0:	str	x4, [sp, #8]
  4272a4:	ldr	x8, [sp, #16]
  4272a8:	ldur	x9, [x29, #-8]
  4272ac:	str	x8, [x9, #56]
  4272b0:	ldr	x8, [sp, #8]
  4272b4:	ldur	x9, [x29, #-8]
  4272b8:	str	x8, [x9, #64]
  4272bc:	ldur	x8, [x29, #-8]
  4272c0:	ldrb	w10, [x8, #80]
  4272c4:	and	w10, w10, #0xfffffffe
  4272c8:	strb	w10, [x8, #80]
  4272cc:	ldur	x0, [x29, #-8]
  4272d0:	ldur	x1, [x29, #-16]
  4272d4:	ldr	x2, [sp, #24]
  4272d8:	bl	4272e8 <_obstack_begin@@Base+0x64>
  4272dc:	ldp	x29, x30, [sp, #48]
  4272e0:	add	sp, sp, #0x40
  4272e4:	ret
  4272e8:	sub	sp, sp, #0x40
  4272ec:	stp	x29, x30, [sp, #48]
  4272f0:	add	x29, sp, #0x30
  4272f4:	stur	x0, [x29, #-8]
  4272f8:	stur	x1, [x29, #-16]
  4272fc:	str	x2, [sp, #24]
  427300:	ldr	x8, [sp, #24]
  427304:	cbnz	x8, 427310 <_obstack_begin@@Base+0x8c>
  427308:	mov	x8, #0x10                  	// #16
  42730c:	str	x8, [sp, #24]
  427310:	ldur	x8, [x29, #-16]
  427314:	cbnz	x8, 427338 <_obstack_begin@@Base+0xb4>
  427318:	mov	w8, #0x20                  	// #32
  42731c:	str	w8, [sp, #12]
  427320:	ldr	w8, [sp, #12]
  427324:	mov	w9, #0x1000                	// #4096
  427328:	subs	w8, w9, w8
  42732c:	mov	w0, w8
  427330:	sxtw	x10, w0
  427334:	stur	x10, [x29, #-16]
  427338:	ldur	x8, [x29, #-16]
  42733c:	ldur	x9, [x29, #-8]
  427340:	str	x8, [x9]
  427344:	ldr	x8, [sp, #24]
  427348:	subs	x8, x8, #0x1
  42734c:	ldur	x9, [x29, #-8]
  427350:	str	x8, [x9, #48]
  427354:	ldur	x0, [x29, #-8]
  427358:	ldur	x8, [x29, #-8]
  42735c:	ldr	x1, [x8]
  427360:	bl	4276b8 <_obstack_newchunk@@Base+0x224>
  427364:	ldur	x8, [x29, #-8]
  427368:	str	x0, [x8, #8]
  42736c:	str	x0, [sp, #16]
  427370:	ldr	x8, [sp, #16]
  427374:	cbnz	x8, 427388 <_obstack_begin@@Base+0x104>
  427378:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  42737c:	add	x8, x8, #0x430
  427380:	ldr	x8, [x8]
  427384:	blr	x8
  427388:	ldr	x8, [sp, #16]
  42738c:	add	x8, x8, #0x10
  427390:	mov	x9, xzr
  427394:	subs	x8, x8, #0x0
  427398:	ldr	x10, [sp, #24]
  42739c:	subs	x10, x10, #0x1
  4273a0:	add	x8, x8, x10
  4273a4:	ldr	x10, [sp, #24]
  4273a8:	subs	x10, x10, #0x1
  4273ac:	bic	x8, x8, x10
  4273b0:	add	x8, x9, x8
  4273b4:	ldur	x10, [x29, #-8]
  4273b8:	str	x8, [x10, #16]
  4273bc:	ldur	x10, [x29, #-8]
  4273c0:	str	x8, [x10, #24]
  4273c4:	ldr	x8, [sp, #16]
  4273c8:	ldur	x10, [x29, #-8]
  4273cc:	ldr	x10, [x10]
  4273d0:	add	x8, x8, x10
  4273d4:	ldr	x10, [sp, #16]
  4273d8:	str	x8, [x10]
  4273dc:	ldur	x10, [x29, #-8]
  4273e0:	str	x8, [x10, #32]
  4273e4:	ldr	x8, [sp, #16]
  4273e8:	str	x9, [x8, #8]
  4273ec:	ldur	x8, [x29, #-8]
  4273f0:	ldrb	w11, [x8, #80]
  4273f4:	and	w11, w11, #0xfffffffd
  4273f8:	strb	w11, [x8, #80]
  4273fc:	ldur	x8, [x29, #-8]
  427400:	ldrb	w11, [x8, #80]
  427404:	and	w11, w11, #0xfffffffb
  427408:	strb	w11, [x8, #80]
  42740c:	mov	w0, #0x1                   	// #1
  427410:	ldp	x29, x30, [sp, #48]
  427414:	add	sp, sp, #0x40
  427418:	ret

000000000042741c <_obstack_begin_1@@Base>:
  42741c:	sub	sp, sp, #0x40
  427420:	stp	x29, x30, [sp, #48]
  427424:	add	x29, sp, #0x30
  427428:	stur	x0, [x29, #-8]
  42742c:	stur	x1, [x29, #-16]
  427430:	str	x2, [sp, #24]
  427434:	str	x3, [sp, #16]
  427438:	str	x4, [sp, #8]
  42743c:	str	x5, [sp]
  427440:	ldr	x8, [sp, #16]
  427444:	ldur	x9, [x29, #-8]
  427448:	str	x8, [x9, #56]
  42744c:	ldr	x8, [sp, #8]
  427450:	ldur	x9, [x29, #-8]
  427454:	str	x8, [x9, #64]
  427458:	ldr	x8, [sp]
  42745c:	ldur	x9, [x29, #-8]
  427460:	str	x8, [x9, #72]
  427464:	ldur	x8, [x29, #-8]
  427468:	ldrb	w10, [x8, #80]
  42746c:	and	w10, w10, #0xfffffffe
  427470:	orr	w10, w10, #0x1
  427474:	strb	w10, [x8, #80]
  427478:	ldur	x0, [x29, #-8]
  42747c:	ldur	x1, [x29, #-16]
  427480:	ldr	x2, [sp, #24]
  427484:	bl	4272e8 <_obstack_begin@@Base+0x64>
  427488:	ldp	x29, x30, [sp, #48]
  42748c:	add	sp, sp, #0x40
  427490:	ret

0000000000427494 <_obstack_newchunk@@Base>:
  427494:	sub	sp, sp, #0x60
  427498:	stp	x29, x30, [sp, #80]
  42749c:	add	x29, sp, #0x50
  4274a0:	mov	x8, xzr
  4274a4:	stur	x0, [x29, #-8]
  4274a8:	stur	x1, [x29, #-16]
  4274ac:	ldur	x9, [x29, #-8]
  4274b0:	ldr	x9, [x9, #8]
  4274b4:	stur	x9, [x29, #-24]
  4274b8:	stur	x8, [x29, #-32]
  4274bc:	ldur	x8, [x29, #-8]
  4274c0:	ldr	x8, [x8, #24]
  4274c4:	ldur	x9, [x29, #-8]
  4274c8:	ldr	x9, [x9, #16]
  4274cc:	subs	x8, x8, x9
  4274d0:	str	x8, [sp, #40]
  4274d4:	ldr	x8, [sp, #40]
  4274d8:	ldur	x9, [x29, #-16]
  4274dc:	add	x8, x8, x9
  4274e0:	str	x8, [sp, #24]
  4274e4:	ldr	x8, [sp, #24]
  4274e8:	ldur	x9, [x29, #-8]
  4274ec:	ldr	x9, [x9, #48]
  4274f0:	add	x8, x8, x9
  4274f4:	str	x8, [sp, #16]
  4274f8:	ldr	x8, [sp, #16]
  4274fc:	ldr	x9, [sp, #40]
  427500:	add	x8, x8, x9, lsr #3
  427504:	add	x8, x8, #0x64
  427508:	str	x8, [sp, #8]
  42750c:	ldr	x8, [sp, #8]
  427510:	ldr	x9, [sp, #16]
  427514:	cmp	x8, x9
  427518:	b.cs	427524 <_obstack_newchunk@@Base+0x90>  // b.hs, b.nlast
  42751c:	ldr	x8, [sp, #16]
  427520:	str	x8, [sp, #8]
  427524:	ldr	x8, [sp, #8]
  427528:	ldur	x9, [x29, #-8]
  42752c:	ldr	x9, [x9]
  427530:	cmp	x8, x9
  427534:	b.cs	427544 <_obstack_newchunk@@Base+0xb0>  // b.hs, b.nlast
  427538:	ldur	x8, [x29, #-8]
  42753c:	ldr	x8, [x8]
  427540:	str	x8, [sp, #8]
  427544:	ldr	x8, [sp, #40]
  427548:	ldr	x9, [sp, #24]
  42754c:	cmp	x8, x9
  427550:	b.hi	427574 <_obstack_newchunk@@Base+0xe0>  // b.pmore
  427554:	ldr	x8, [sp, #24]
  427558:	ldr	x9, [sp, #16]
  42755c:	cmp	x8, x9
  427560:	b.hi	427574 <_obstack_newchunk@@Base+0xe0>  // b.pmore
  427564:	ldur	x0, [x29, #-8]
  427568:	ldr	x1, [sp, #8]
  42756c:	bl	4276b8 <_obstack_newchunk@@Base+0x224>
  427570:	stur	x0, [x29, #-32]
  427574:	ldur	x8, [x29, #-32]
  427578:	cbnz	x8, 42758c <_obstack_newchunk@@Base+0xf8>
  42757c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  427580:	add	x8, x8, #0x430
  427584:	ldr	x8, [x8]
  427588:	blr	x8
  42758c:	ldur	x8, [x29, #-32]
  427590:	ldur	x9, [x29, #-8]
  427594:	str	x8, [x9, #8]
  427598:	ldur	x8, [x29, #-24]
  42759c:	ldur	x9, [x29, #-32]
  4275a0:	str	x8, [x9, #8]
  4275a4:	ldur	x8, [x29, #-32]
  4275a8:	ldr	x9, [sp, #8]
  4275ac:	add	x8, x8, x9
  4275b0:	ldur	x9, [x29, #-8]
  4275b4:	str	x8, [x9, #32]
  4275b8:	ldur	x9, [x29, #-32]
  4275bc:	str	x8, [x9]
  4275c0:	ldur	x8, [x29, #-32]
  4275c4:	add	x8, x8, #0x10
  4275c8:	mov	x9, xzr
  4275cc:	subs	x8, x8, #0x0
  4275d0:	ldur	x10, [x29, #-8]
  4275d4:	ldr	x10, [x10, #48]
  4275d8:	add	x8, x8, x10
  4275dc:	ldur	x10, [x29, #-8]
  4275e0:	ldr	x10, [x10, #48]
  4275e4:	bic	x8, x8, x10
  4275e8:	add	x8, x9, x8
  4275ec:	str	x8, [sp, #32]
  4275f0:	ldr	x0, [sp, #32]
  4275f4:	ldur	x8, [x29, #-8]
  4275f8:	ldr	x1, [x8, #16]
  4275fc:	ldr	x2, [sp, #40]
  427600:	bl	402290 <memcpy@plt>
  427604:	ldur	x8, [x29, #-8]
  427608:	ldrb	w11, [x8, #80]
  42760c:	mov	w12, #0x1                   	// #1
  427610:	lsr	w11, w11, w12
  427614:	and	w11, w11, w12
  427618:	and	w11, w11, #0xff
  42761c:	cbnz	w11, 427678 <_obstack_newchunk@@Base+0x1e4>
  427620:	ldur	x8, [x29, #-8]
  427624:	ldr	x8, [x8, #16]
  427628:	ldur	x9, [x29, #-24]
  42762c:	add	x9, x9, #0x10
  427630:	mov	x10, xzr
  427634:	subs	x9, x9, #0x0
  427638:	ldur	x11, [x29, #-8]
  42763c:	ldr	x11, [x11, #48]
  427640:	add	x9, x9, x11
  427644:	ldur	x11, [x29, #-8]
  427648:	ldr	x11, [x11, #48]
  42764c:	bic	x9, x9, x11
  427650:	add	x9, x10, x9
  427654:	cmp	x8, x9
  427658:	b.ne	427678 <_obstack_newchunk@@Base+0x1e4>  // b.any
  42765c:	ldur	x8, [x29, #-24]
  427660:	ldr	x8, [x8, #8]
  427664:	ldur	x9, [x29, #-32]
  427668:	str	x8, [x9, #8]
  42766c:	ldur	x0, [x29, #-8]
  427670:	ldur	x1, [x29, #-24]
  427674:	bl	427724 <_obstack_newchunk@@Base+0x290>
  427678:	ldr	x8, [sp, #32]
  42767c:	ldur	x9, [x29, #-8]
  427680:	str	x8, [x9, #16]
  427684:	ldur	x8, [x29, #-8]
  427688:	ldr	x8, [x8, #16]
  42768c:	ldr	x9, [sp, #40]
  427690:	add	x8, x8, x9
  427694:	ldur	x9, [x29, #-8]
  427698:	str	x8, [x9, #24]
  42769c:	ldur	x8, [x29, #-8]
  4276a0:	ldrb	w10, [x8, #80]
  4276a4:	and	w10, w10, #0xfffffffd
  4276a8:	strb	w10, [x8, #80]
  4276ac:	ldp	x29, x30, [sp, #80]
  4276b0:	add	sp, sp, #0x60
  4276b4:	ret
  4276b8:	sub	sp, sp, #0x30
  4276bc:	stp	x29, x30, [sp, #32]
  4276c0:	add	x29, sp, #0x20
  4276c4:	str	x0, [sp, #16]
  4276c8:	str	x1, [sp, #8]
  4276cc:	ldr	x8, [sp, #16]
  4276d0:	ldrb	w9, [x8, #80]
  4276d4:	and	w9, w9, #0x1
  4276d8:	and	w9, w9, #0xff
  4276dc:	cbz	w9, 427700 <_obstack_newchunk@@Base+0x26c>
  4276e0:	ldr	x8, [sp, #16]
  4276e4:	ldr	x8, [x8, #56]
  4276e8:	ldr	x9, [sp, #16]
  4276ec:	ldr	x0, [x9, #72]
  4276f0:	ldr	x1, [sp, #8]
  4276f4:	blr	x8
  4276f8:	stur	x0, [x29, #-8]
  4276fc:	b	427714 <_obstack_newchunk@@Base+0x280>
  427700:	ldr	x8, [sp, #16]
  427704:	ldr	x8, [x8, #56]
  427708:	ldr	x0, [sp, #8]
  42770c:	blr	x8
  427710:	stur	x0, [x29, #-8]
  427714:	ldur	x0, [x29, #-8]
  427718:	ldp	x29, x30, [sp, #32]
  42771c:	add	sp, sp, #0x30
  427720:	ret
  427724:	sub	sp, sp, #0x20
  427728:	stp	x29, x30, [sp, #16]
  42772c:	add	x29, sp, #0x10
  427730:	str	x0, [sp, #8]
  427734:	str	x1, [sp]
  427738:	ldr	x8, [sp, #8]
  42773c:	ldrb	w9, [x8, #80]
  427740:	and	w9, w9, #0x1
  427744:	and	w9, w9, #0xff
  427748:	cbz	w9, 427768 <_obstack_newchunk@@Base+0x2d4>
  42774c:	ldr	x8, [sp, #8]
  427750:	ldr	x8, [x8, #64]
  427754:	ldr	x9, [sp, #8]
  427758:	ldr	x0, [x9, #72]
  42775c:	ldr	x1, [sp]
  427760:	blr	x8
  427764:	b	427778 <_obstack_newchunk@@Base+0x2e4>
  427768:	ldr	x8, [sp, #8]
  42776c:	ldr	x8, [x8, #64]
  427770:	ldr	x0, [sp]
  427774:	blr	x8
  427778:	ldp	x29, x30, [sp, #16]
  42777c:	add	sp, sp, #0x20
  427780:	ret

0000000000427784 <_obstack_allocated_p@@Base>:
  427784:	sub	sp, sp, #0x30
  427788:	str	x0, [sp, #40]
  42778c:	str	x1, [sp, #32]
  427790:	ldr	x8, [sp, #40]
  427794:	ldr	x8, [x8, #8]
  427798:	str	x8, [sp, #24]
  42779c:	ldr	x8, [sp, #24]
  4277a0:	mov	w9, #0x0                   	// #0
  4277a4:	str	w9, [sp, #12]
  4277a8:	cbz	x8, 4277e4 <_obstack_allocated_p@@Base+0x60>
  4277ac:	ldr	x8, [sp, #24]
  4277b0:	ldr	x9, [sp, #32]
  4277b4:	mov	w10, #0x1                   	// #1
  4277b8:	cmp	x8, x9
  4277bc:	str	w10, [sp, #8]
  4277c0:	b.cs	4277dc <_obstack_allocated_p@@Base+0x58>  // b.hs, b.nlast
  4277c4:	ldr	x8, [sp, #24]
  4277c8:	ldr	x8, [x8]
  4277cc:	ldr	x9, [sp, #32]
  4277d0:	cmp	x8, x9
  4277d4:	cset	w10, cc  // cc = lo, ul, last
  4277d8:	str	w10, [sp, #8]
  4277dc:	ldr	w8, [sp, #8]
  4277e0:	str	w8, [sp, #12]
  4277e4:	ldr	w8, [sp, #12]
  4277e8:	tbnz	w8, #0, 4277f0 <_obstack_allocated_p@@Base+0x6c>
  4277ec:	b	427808 <_obstack_allocated_p@@Base+0x84>
  4277f0:	ldr	x8, [sp, #24]
  4277f4:	ldr	x8, [x8, #8]
  4277f8:	str	x8, [sp, #16]
  4277fc:	ldr	x8, [sp, #16]
  427800:	str	x8, [sp, #24]
  427804:	b	42779c <_obstack_allocated_p@@Base+0x18>
  427808:	ldr	x8, [sp, #24]
  42780c:	cmp	x8, #0x0
  427810:	cset	w9, ne  // ne = any
  427814:	and	w0, w9, #0x1
  427818:	add	sp, sp, #0x30
  42781c:	ret

0000000000427820 <_obstack_free@@Base>:
  427820:	sub	sp, sp, #0x40
  427824:	stp	x29, x30, [sp, #48]
  427828:	add	x29, sp, #0x30
  42782c:	stur	x0, [x29, #-8]
  427830:	stur	x1, [x29, #-16]
  427834:	ldur	x8, [x29, #-8]
  427838:	ldr	x8, [x8, #8]
  42783c:	str	x8, [sp, #24]
  427840:	ldr	x8, [sp, #24]
  427844:	mov	w9, #0x0                   	// #0
  427848:	str	w9, [sp, #12]
  42784c:	cbz	x8, 427888 <_obstack_free@@Base+0x68>
  427850:	ldr	x8, [sp, #24]
  427854:	ldur	x9, [x29, #-16]
  427858:	mov	w10, #0x1                   	// #1
  42785c:	cmp	x8, x9
  427860:	str	w10, [sp, #8]
  427864:	b.cs	427880 <_obstack_free@@Base+0x60>  // b.hs, b.nlast
  427868:	ldr	x8, [sp, #24]
  42786c:	ldr	x8, [x8]
  427870:	ldur	x9, [x29, #-16]
  427874:	cmp	x8, x9
  427878:	cset	w10, cc  // cc = lo, ul, last
  42787c:	str	w10, [sp, #8]
  427880:	ldr	w8, [sp, #8]
  427884:	str	w8, [sp, #12]
  427888:	ldr	w8, [sp, #12]
  42788c:	tbnz	w8, #0, 427894 <_obstack_free@@Base+0x74>
  427890:	b	4278cc <_obstack_free@@Base+0xac>
  427894:	ldr	x8, [sp, #24]
  427898:	ldr	x8, [x8, #8]
  42789c:	str	x8, [sp, #16]
  4278a0:	ldur	x0, [x29, #-8]
  4278a4:	ldr	x1, [sp, #24]
  4278a8:	bl	427724 <_obstack_newchunk@@Base+0x290>
  4278ac:	ldr	x8, [sp, #16]
  4278b0:	str	x8, [sp, #24]
  4278b4:	ldur	x8, [x29, #-8]
  4278b8:	ldrb	w9, [x8, #80]
  4278bc:	and	w9, w9, #0xfffffffd
  4278c0:	orr	w9, w9, #0x2
  4278c4:	strb	w9, [x8, #80]
  4278c8:	b	427840 <_obstack_free@@Base+0x20>
  4278cc:	ldr	x8, [sp, #24]
  4278d0:	cbz	x8, 427908 <_obstack_free@@Base+0xe8>
  4278d4:	ldur	x8, [x29, #-16]
  4278d8:	ldur	x9, [x29, #-8]
  4278dc:	str	x8, [x9, #24]
  4278e0:	ldur	x9, [x29, #-8]
  4278e4:	str	x8, [x9, #16]
  4278e8:	ldr	x8, [sp, #24]
  4278ec:	ldr	x8, [x8]
  4278f0:	ldur	x9, [x29, #-8]
  4278f4:	str	x8, [x9, #32]
  4278f8:	ldr	x8, [sp, #24]
  4278fc:	ldur	x9, [x29, #-8]
  427900:	str	x8, [x9, #8]
  427904:	b	427914 <_obstack_free@@Base+0xf4>
  427908:	ldur	x8, [x29, #-16]
  42790c:	cbz	x8, 427914 <_obstack_free@@Base+0xf4>
  427910:	bl	402610 <abort@plt>
  427914:	ldp	x29, x30, [sp, #48]
  427918:	add	sp, sp, #0x40
  42791c:	ret

0000000000427920 <_obstack_memory_used@@Base>:
  427920:	sub	sp, sp, #0x20
  427924:	str	x0, [sp, #24]
  427928:	str	xzr, [sp, #8]
  42792c:	ldr	x8, [sp, #24]
  427930:	ldr	x8, [x8, #8]
  427934:	str	x8, [sp, #16]
  427938:	ldr	x8, [sp, #16]
  42793c:	cbz	x8, 42796c <_obstack_memory_used@@Base+0x4c>
  427940:	ldr	x8, [sp, #16]
  427944:	ldr	x8, [x8]
  427948:	ldr	x9, [sp, #16]
  42794c:	subs	x8, x8, x9
  427950:	ldr	x9, [sp, #8]
  427954:	add	x8, x9, x8
  427958:	str	x8, [sp, #8]
  42795c:	ldr	x8, [sp, #16]
  427960:	ldr	x8, [x8, #8]
  427964:	str	x8, [sp, #16]
  427968:	b	427938 <_obstack_memory_used@@Base+0x18>
  42796c:	ldr	x0, [sp, #8]
  427970:	add	sp, sp, #0x20
  427974:	ret
  427978:	sub	sp, sp, #0x30
  42797c:	stp	x29, x30, [sp, #32]
  427980:	add	x29, sp, #0x20
  427984:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  427988:	add	x8, x8, #0x440
  42798c:	adrp	x0, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  427990:	add	x0, x0, #0x2e2
  427994:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  427998:	add	x1, x1, #0xfbc
  42799c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  4279a0:	add	x9, x9, #0x3d0
  4279a4:	ldr	x8, [x8]
  4279a8:	stur	x1, [x29, #-8]
  4279ac:	str	x9, [sp, #16]
  4279b0:	str	x8, [sp, #8]
  4279b4:	bl	4028b0 <gettext@plt>
  4279b8:	ldr	x8, [sp, #8]
  4279bc:	str	x0, [sp]
  4279c0:	mov	x0, x8
  4279c4:	ldur	x1, [x29, #-8]
  4279c8:	ldr	x2, [sp]
  4279cc:	bl	4028d0 <fprintf@plt>
  4279d0:	ldr	x8, [sp, #16]
  4279d4:	ldr	w10, [x8]
  4279d8:	mov	w0, w10
  4279dc:	bl	402310 <exit@plt>
  4279e0:	sub	sp, sp, #0x40
  4279e4:	stp	x29, x30, [sp, #48]
  4279e8:	add	x29, sp, #0x30
  4279ec:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4279f0:	add	x8, x8, #0xdd0
  4279f4:	stur	x0, [x29, #-16]
  4279f8:	str	x1, [sp, #24]
  4279fc:	str	x2, [sp, #16]
  427a00:	ldr	x9, [x8]
  427a04:	tst	x9, #0x2000000
  427a08:	cset	w10, ne  // ne = any
  427a0c:	mov	w11, #0x1                   	// #1
  427a10:	eor	w10, w10, #0x1
  427a14:	eor	w10, w10, w11
  427a18:	and	w10, w10, #0x1
  427a1c:	ldr	x9, [sp, #16]
  427a20:	ldrb	w12, [x9, #56]
  427a24:	and	w10, w10, w11
  427a28:	lsl	w10, w10, #4
  427a2c:	and	w11, w12, #0xffffffef
  427a30:	orr	w10, w11, w10
  427a34:	strb	w10, [x9, #56]
  427a38:	ldr	x9, [sp, #16]
  427a3c:	ldrb	w10, [x9, #56]
  427a40:	and	w10, w10, #0x7f
  427a44:	orr	w10, w10, #0xffffff80
  427a48:	strb	w10, [x9, #56]
  427a4c:	ldr	x0, [sp, #16]
  427a50:	ldur	x1, [x29, #-16]
  427a54:	ldr	x2, [sp, #24]
  427a58:	ldr	x3, [x8]
  427a5c:	bl	427aac <_obstack_memory_used@@Base+0x18c>
  427a60:	str	w0, [sp, #12]
  427a64:	ldr	w10, [sp, #12]
  427a68:	cbnz	w10, 427a78 <_obstack_memory_used@@Base+0x158>
  427a6c:	mov	x8, xzr
  427a70:	stur	x8, [x29, #-8]
  427a74:	b	427a9c <_obstack_memory_used@@Base+0x17c>
  427a78:	ldrsw	x8, [sp, #12]
  427a7c:	adrp	x9, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  427a80:	add	x9, x9, #0xa78
  427a84:	ldr	x8, [x9, x8, lsl #3]
  427a88:	adrp	x9, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  427a8c:	add	x9, x9, #0x8f4
  427a90:	add	x0, x9, x8
  427a94:	bl	4028b0 <gettext@plt>
  427a98:	stur	x0, [x29, #-8]
  427a9c:	ldur	x0, [x29, #-8]
  427aa0:	ldp	x29, x30, [sp, #48]
  427aa4:	add	sp, sp, #0x40
  427aa8:	ret
  427aac:	sub	sp, sp, #0xf0
  427ab0:	stp	x29, x30, [sp, #224]
  427ab4:	add	x29, sp, #0xe0
  427ab8:	stur	x0, [x29, #-16]
  427abc:	stur	x1, [x29, #-24]
  427ac0:	stur	x2, [x29, #-32]
  427ac4:	stur	x3, [x29, #-40]
  427ac8:	stur	wzr, [x29, #-44]
  427acc:	ldur	x8, [x29, #-16]
  427ad0:	ldrb	w9, [x8, #56]
  427ad4:	and	w9, w9, #0xfffffff7
  427ad8:	strb	w9, [x8, #56]
  427adc:	ldur	x8, [x29, #-40]
  427ae0:	ldur	x10, [x29, #-16]
  427ae4:	str	x8, [x10, #24]
  427ae8:	ldur	x8, [x29, #-16]
  427aec:	ldrb	w9, [x8, #56]
  427af0:	and	w9, w9, #0xffffffbf
  427af4:	strb	w9, [x8, #56]
  427af8:	ldur	x8, [x29, #-16]
  427afc:	ldrb	w9, [x8, #56]
  427b00:	and	w9, w9, #0xffffffdf
  427b04:	strb	w9, [x8, #56]
  427b08:	ldur	x8, [x29, #-16]
  427b0c:	str	xzr, [x8, #16]
  427b10:	ldur	x8, [x29, #-16]
  427b14:	str	xzr, [x8, #48]
  427b18:	ldur	x8, [x29, #-16]
  427b1c:	ldrb	w9, [x8, #56]
  427b20:	and	w9, w9, #0xfffffffe
  427b24:	strb	w9, [x8, #56]
  427b28:	ldur	x8, [x29, #-16]
  427b2c:	ldrb	w9, [x8, #56]
  427b30:	and	w9, w9, #0xfffffff9
  427b34:	strb	w9, [x8, #56]
  427b38:	ldur	x8, [x29, #-16]
  427b3c:	ldr	x8, [x8]
  427b40:	stur	x8, [x29, #-56]
  427b44:	ldur	x8, [x29, #-16]
  427b48:	ldr	x8, [x8, #8]
  427b4c:	cmp	x8, #0xe8
  427b50:	cset	w9, cc  // cc = lo, ul, last
  427b54:	and	w9, w9, #0x1
  427b58:	mov	w0, w9
  427b5c:	sxtw	x8, w0
  427b60:	cbz	x8, 427ba4 <_obstack_memory_used@@Base+0x284>
  427b64:	ldur	x8, [x29, #-16]
  427b68:	ldr	x0, [x8]
  427b6c:	mov	x1, #0xe8                  	// #232
  427b70:	bl	402570 <realloc@plt>
  427b74:	stur	x0, [x29, #-56]
  427b78:	ldur	x8, [x29, #-56]
  427b7c:	cbnz	x8, 427b8c <_obstack_memory_used@@Base+0x26c>
  427b80:	mov	w8, #0xc                   	// #12
  427b84:	stur	w8, [x29, #-4]
  427b88:	b	427dc8 <_obstack_memory_used@@Base+0x4a8>
  427b8c:	ldur	x8, [x29, #-16]
  427b90:	mov	x9, #0xe8                  	// #232
  427b94:	str	x9, [x8, #8]
  427b98:	ldur	x8, [x29, #-56]
  427b9c:	ldur	x9, [x29, #-16]
  427ba0:	str	x8, [x9]
  427ba4:	ldur	x8, [x29, #-16]
  427ba8:	mov	x9, #0xe8                  	// #232
  427bac:	str	x9, [x8, #16]
  427bb0:	ldur	x0, [x29, #-56]
  427bb4:	ldur	x1, [x29, #-32]
  427bb8:	bl	42a650 <_obstack_memory_used@@Base+0x2d30>
  427bbc:	stur	w0, [x29, #-44]
  427bc0:	ldur	w10, [x29, #-44]
  427bc4:	mov	w11, #0x0                   	// #0
  427bc8:	str	w11, [sp, #12]
  427bcc:	cbnz	w10, 427bd8 <_obstack_memory_used@@Base+0x2b8>
  427bd0:	mov	w8, #0x0                   	// #0
  427bd4:	str	w8, [sp, #12]
  427bd8:	ldr	w8, [sp, #12]
  427bdc:	and	w8, w8, #0x1
  427be0:	mov	w0, w8
  427be4:	sxtw	x9, w0
  427be8:	cbz	x9, 427bf4 <_obstack_memory_used@@Base+0x2d4>
  427bec:	mov	w8, #0xc                   	// #12
  427bf0:	stur	w8, [x29, #-44]
  427bf4:	ldur	w8, [x29, #-44]
  427bf8:	cmp	w8, #0x0
  427bfc:	cset	w8, ne  // ne = any
  427c00:	and	w8, w8, #0x1
  427c04:	mov	w0, w8
  427c08:	sxtw	x9, w0
  427c0c:	cbz	x9, 427c38 <_obstack_memory_used@@Base+0x318>
  427c10:	ldur	x0, [x29, #-56]
  427c14:	bl	4289b8 <_obstack_memory_used@@Base+0x1098>
  427c18:	ldur	x8, [x29, #-16]
  427c1c:	mov	x9, xzr
  427c20:	str	x9, [x8]
  427c24:	ldur	x8, [x29, #-16]
  427c28:	str	xzr, [x8, #8]
  427c2c:	ldur	w10, [x29, #-44]
  427c30:	stur	w10, [x29, #-4]
  427c34:	b	427dc8 <_obstack_memory_used@@Base+0x4a8>
  427c38:	ldur	x1, [x29, #-24]
  427c3c:	ldur	x2, [x29, #-32]
  427c40:	ldur	x8, [x29, #-16]
  427c44:	ldr	x3, [x8, #40]
  427c48:	ldur	x8, [x29, #-40]
  427c4c:	tst	x8, #0x400000
  427c50:	cset	w9, ne  // ne = any
  427c54:	ldur	x5, [x29, #-56]
  427c58:	add	x0, sp, #0x10
  427c5c:	and	w4, w9, #0x1
  427c60:	bl	42ac1c <_obstack_memory_used@@Base+0x32fc>
  427c64:	stur	w0, [x29, #-44]
  427c68:	ldur	w9, [x29, #-44]
  427c6c:	cmp	w9, #0x0
  427c70:	cset	w9, ne  // ne = any
  427c74:	and	w9, w9, #0x1
  427c78:	mov	w1, w9
  427c7c:	sxtw	x8, w1
  427c80:	cbz	x8, 427cbc <_obstack_memory_used@@Base+0x39c>
  427c84:	ldur	x0, [x29, #-16]
  427c88:	bl	42ae48 <_obstack_memory_used@@Base+0x3528>
  427c8c:	add	x0, sp, #0x10
  427c90:	bl	42aee0 <_obstack_memory_used@@Base+0x35c0>
  427c94:	ldur	x0, [x29, #-56]
  427c98:	bl	4289b8 <_obstack_memory_used@@Base+0x1098>
  427c9c:	ldur	x8, [x29, #-16]
  427ca0:	mov	x9, xzr
  427ca4:	str	x9, [x8]
  427ca8:	ldur	x8, [x29, #-16]
  427cac:	str	xzr, [x8, #8]
  427cb0:	ldur	w10, [x29, #-44]
  427cb4:	stur	w10, [x29, #-4]
  427cb8:	b	427dc8 <_obstack_memory_used@@Base+0x4a8>
  427cbc:	ldur	x8, [x29, #-16]
  427cc0:	str	xzr, [x8, #48]
  427cc4:	ldur	x1, [x29, #-16]
  427cc8:	ldur	x2, [x29, #-40]
  427ccc:	add	x0, sp, #0x10
  427cd0:	sub	x3, x29, #0x2c
  427cd4:	bl	42af2c <_obstack_memory_used@@Base+0x360c>
  427cd8:	ldur	x8, [x29, #-56]
  427cdc:	str	x0, [x8, #104]
  427ce0:	ldur	x8, [x29, #-56]
  427ce4:	ldr	x8, [x8, #104]
  427ce8:	cmp	x8, #0x0
  427cec:	cset	w9, eq  // eq = none
  427cf0:	and	w9, w9, #0x1
  427cf4:	mov	w0, w9
  427cf8:	sxtw	x8, w0
  427cfc:	cbz	x8, 427d04 <_obstack_memory_used@@Base+0x3e4>
  427d00:	b	427c84 <_obstack_memory_used@@Base+0x364>
  427d04:	ldur	x0, [x29, #-16]
  427d08:	bl	42b094 <_obstack_memory_used@@Base+0x3774>
  427d0c:	stur	w0, [x29, #-44]
  427d10:	ldur	w8, [x29, #-44]
  427d14:	cmp	w8, #0x0
  427d18:	cset	w8, ne  // ne = any
  427d1c:	and	w8, w8, #0x1
  427d20:	mov	w1, w8
  427d24:	sxtw	x9, w1
  427d28:	cbz	x9, 427d30 <_obstack_memory_used@@Base+0x410>
  427d2c:	b	427c84 <_obstack_memory_used@@Base+0x364>
  427d30:	ldur	x8, [x29, #-56]
  427d34:	ldrb	w9, [x8, #176]
  427d38:	mov	w10, #0x2                   	// #2
  427d3c:	lsr	w9, w9, w10
  427d40:	and	w9, w9, #0x1
  427d44:	and	w9, w9, #0xff
  427d48:	cbz	w9, 427d6c <_obstack_memory_used@@Base+0x44c>
  427d4c:	ldur	x8, [x29, #-40]
  427d50:	and	x8, x8, #0x400000
  427d54:	cbnz	x8, 427d6c <_obstack_memory_used@@Base+0x44c>
  427d58:	ldur	x8, [x29, #-16]
  427d5c:	ldr	x8, [x8, #40]
  427d60:	cbnz	x8, 427d6c <_obstack_memory_used@@Base+0x44c>
  427d64:	ldur	x0, [x29, #-56]
  427d68:	bl	42b464 <_obstack_memory_used@@Base+0x3b44>
  427d6c:	ldur	x0, [x29, #-56]
  427d70:	bl	42b780 <_obstack_memory_used@@Base+0x3e60>
  427d74:	stur	w0, [x29, #-44]
  427d78:	ldur	x0, [x29, #-16]
  427d7c:	bl	42ae48 <_obstack_memory_used@@Base+0x3528>
  427d80:	add	x0, sp, #0x10
  427d84:	bl	42aee0 <_obstack_memory_used@@Base+0x35c0>
  427d88:	ldur	w8, [x29, #-44]
  427d8c:	cmp	w8, #0x0
  427d90:	cset	w8, ne  // ne = any
  427d94:	and	w8, w8, #0x1
  427d98:	mov	w0, w8
  427d9c:	sxtw	x9, w0
  427da0:	cbz	x9, 427dc0 <_obstack_memory_used@@Base+0x4a0>
  427da4:	ldur	x0, [x29, #-56]
  427da8:	bl	4289b8 <_obstack_memory_used@@Base+0x1098>
  427dac:	ldur	x8, [x29, #-16]
  427db0:	mov	x9, xzr
  427db4:	str	x9, [x8]
  427db8:	ldur	x8, [x29, #-16]
  427dbc:	str	xzr, [x8, #8]
  427dc0:	ldur	w8, [x29, #-44]
  427dc4:	stur	w8, [x29, #-4]
  427dc8:	ldur	w0, [x29, #-4]
  427dcc:	ldp	x29, x30, [sp, #224]
  427dd0:	add	sp, sp, #0xf0
  427dd4:	ret
  427dd8:	sub	sp, sp, #0x10
  427ddc:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  427de0:	add	x8, x8, #0xdd0
  427de4:	str	x0, [sp, #8]
  427de8:	ldr	x9, [x8]
  427dec:	str	x9, [sp]
  427df0:	ldr	x9, [sp, #8]
  427df4:	str	x9, [x8]
  427df8:	ldr	x0, [sp]
  427dfc:	add	sp, sp, #0x10
  427e00:	ret
  427e04:	sub	sp, sp, #0x30
  427e08:	stp	x29, x30, [sp, #32]
  427e0c:	add	x29, sp, #0x20
  427e10:	mov	x2, #0x100                 	// #256
  427e14:	mov	w8, wzr
  427e18:	stur	x0, [x29, #-8]
  427e1c:	ldur	x9, [x29, #-8]
  427e20:	ldr	x9, [x9]
  427e24:	str	x9, [sp, #16]
  427e28:	ldur	x9, [x29, #-8]
  427e2c:	ldr	x9, [x9, #32]
  427e30:	str	x9, [sp, #8]
  427e34:	ldr	x0, [sp, #8]
  427e38:	mov	w1, w8
  427e3c:	bl	402520 <memset@plt>
  427e40:	ldur	x0, [x29, #-8]
  427e44:	ldr	x9, [sp, #16]
  427e48:	ldr	x1, [x9, #72]
  427e4c:	ldr	x2, [sp, #8]
  427e50:	bl	427f00 <_obstack_memory_used@@Base+0x5e0>
  427e54:	ldr	x9, [sp, #16]
  427e58:	ldr	x9, [x9, #72]
  427e5c:	ldr	x10, [sp, #16]
  427e60:	ldr	x10, [x10, #80]
  427e64:	cmp	x9, x10
  427e68:	b.eq	427e80 <_obstack_memory_used@@Base+0x560>  // b.none
  427e6c:	ldur	x0, [x29, #-8]
  427e70:	ldr	x8, [sp, #16]
  427e74:	ldr	x1, [x8, #80]
  427e78:	ldr	x2, [sp, #8]
  427e7c:	bl	427f00 <_obstack_memory_used@@Base+0x5e0>
  427e80:	ldr	x8, [sp, #16]
  427e84:	ldr	x8, [x8, #72]
  427e88:	ldr	x9, [sp, #16]
  427e8c:	ldr	x9, [x9, #88]
  427e90:	cmp	x8, x9
  427e94:	b.eq	427eac <_obstack_memory_used@@Base+0x58c>  // b.none
  427e98:	ldur	x0, [x29, #-8]
  427e9c:	ldr	x8, [sp, #16]
  427ea0:	ldr	x1, [x8, #88]
  427ea4:	ldr	x2, [sp, #8]
  427ea8:	bl	427f00 <_obstack_memory_used@@Base+0x5e0>
  427eac:	ldr	x8, [sp, #16]
  427eb0:	ldr	x8, [x8, #72]
  427eb4:	ldr	x9, [sp, #16]
  427eb8:	ldr	x9, [x9, #96]
  427ebc:	cmp	x8, x9
  427ec0:	b.eq	427ed8 <_obstack_memory_used@@Base+0x5b8>  // b.none
  427ec4:	ldur	x0, [x29, #-8]
  427ec8:	ldr	x8, [sp, #16]
  427ecc:	ldr	x1, [x8, #96]
  427ed0:	ldr	x2, [sp, #8]
  427ed4:	bl	427f00 <_obstack_memory_used@@Base+0x5e0>
  427ed8:	ldur	x8, [x29, #-8]
  427edc:	ldrb	w9, [x8, #56]
  427ee0:	and	w9, w9, #0xfffffff7
  427ee4:	orr	w9, w9, #0x8
  427ee8:	strb	w9, [x8, #56]
  427eec:	mov	w9, wzr
  427ef0:	mov	w0, w9
  427ef4:	ldp	x29, x30, [sp, #32]
  427ef8:	add	sp, sp, #0x30
  427efc:	ret
  427f00:	stp	x29, x30, [sp, #-32]!
  427f04:	str	x28, [sp, #16]
  427f08:	mov	x29, sp
  427f0c:	sub	sp, sp, #0x260
  427f10:	stur	x0, [x29, #-104]
  427f14:	stur	x1, [x29, #-112]
  427f18:	stur	x2, [x29, #-120]
  427f1c:	ldur	x8, [x29, #-104]
  427f20:	ldr	x8, [x8]
  427f24:	stur	x8, [x29, #-128]
  427f28:	ldur	x8, [x29, #-128]
  427f2c:	ldr	w9, [x8, #180]
  427f30:	mov	w10, #0x0                   	// #0
  427f34:	cmp	w9, #0x1
  427f38:	str	w10, [sp, #84]
  427f3c:	b.ne	427f54 <_obstack_memory_used@@Base+0x634>  // b.any
  427f40:	ldur	x8, [x29, #-104]
  427f44:	ldr	x8, [x8, #24]
  427f48:	tst	x8, #0x400000
  427f4c:	cset	w9, ne  // ne = any
  427f50:	str	w9, [sp, #84]
  427f54:	ldr	w8, [sp, #84]
  427f58:	and	w8, w8, #0x1
  427f5c:	sturb	w8, [x29, #-137]
  427f60:	stur	xzr, [x29, #-136]
  427f64:	ldur	x8, [x29, #-136]
  427f68:	ldur	x9, [x29, #-112]
  427f6c:	ldr	x9, [x9, #16]
  427f70:	cmp	x8, x9
  427f74:	b.ge	428608 <_obstack_memory_used@@Base+0xce8>  // b.tcont
  427f78:	ldur	x8, [x29, #-112]
  427f7c:	mov	x9, #0x10                  	// #16
  427f80:	ldr	x8, [x8, #24]
  427f84:	ldur	x10, [x29, #-136]
  427f88:	ldr	x8, [x8, x10, lsl #3]
  427f8c:	stur	x8, [x29, #-152]
  427f90:	ldur	x8, [x29, #-128]
  427f94:	ldr	x8, [x8]
  427f98:	ldur	x10, [x29, #-152]
  427f9c:	mul	x9, x9, x10
  427fa0:	add	x8, x8, x9
  427fa4:	ldr	w11, [x8, #8]
  427fa8:	and	w11, w11, #0xff
  427fac:	stur	w11, [x29, #-156]
  427fb0:	ldur	w11, [x29, #-156]
  427fb4:	cmp	w11, #0x1
  427fb8:	b.ne	428210 <_obstack_memory_used@@Base+0x8f0>  // b.any
  427fbc:	ldur	x8, [x29, #-120]
  427fc0:	ldurb	w9, [x29, #-137]
  427fc4:	ldur	x10, [x29, #-128]
  427fc8:	ldr	x10, [x10]
  427fcc:	ldur	x11, [x29, #-152]
  427fd0:	mov	x12, #0x10                  	// #16
  427fd4:	mul	x11, x12, x11
  427fd8:	ldrb	w13, [x10, x11]
  427fdc:	stur	x8, [x29, #-88]
  427fe0:	and	w9, w9, #0x1
  427fe4:	sturb	w9, [x29, #-89]
  427fe8:	stur	w13, [x29, #-96]
  427fec:	ldur	x8, [x29, #-88]
  427ff0:	ldursw	x10, [x29, #-96]
  427ff4:	add	x8, x8, x10
  427ff8:	mov	w9, #0x1                   	// #1
  427ffc:	strb	w9, [x8]
  428000:	ldurb	w9, [x29, #-89]
  428004:	tbnz	w9, #0, 42800c <_obstack_memory_used@@Base+0x6ec>
  428008:	b	428034 <_obstack_memory_used@@Base+0x714>
  42800c:	ldur	x8, [x29, #-88]
  428010:	ldur	w0, [x29, #-96]
  428014:	str	x8, [sp, #72]
  428018:	bl	402880 <tolower@plt>
  42801c:	mov	w1, w0
  428020:	sxtw	x8, w1
  428024:	ldr	x9, [sp, #72]
  428028:	add	x8, x9, x8
  42802c:	mov	w10, #0x1                   	// #1
  428030:	strb	w10, [x8]
  428034:	ldur	x8, [x29, #-104]
  428038:	ldr	x8, [x8, #24]
  42803c:	and	x8, x8, #0x400000
  428040:	cbz	x8, 42820c <_obstack_memory_used@@Base+0x8ec>
  428044:	ldur	x8, [x29, #-128]
  428048:	ldr	w9, [x8, #180]
  42804c:	cmp	w9, #0x1
  428050:	b.le	42820c <_obstack_memory_used@@Base+0x8ec>
  428054:	sub	x8, x29, #0xac
  428058:	stur	x8, [x29, #-184]
  42805c:	ldur	x8, [x29, #-128]
  428060:	ldr	x8, [x8]
  428064:	ldur	x9, [x29, #-152]
  428068:	mov	x10, #0x10                  	// #16
  42806c:	mul	x9, x10, x9
  428070:	add	x8, x8, x9
  428074:	ldrb	w11, [x8]
  428078:	ldur	x8, [x29, #-184]
  42807c:	add	x9, x8, #0x1
  428080:	stur	x9, [x29, #-184]
  428084:	strb	w11, [x8]
  428088:	ldur	x8, [x29, #-152]
  42808c:	add	x8, x8, #0x1
  428090:	stur	x8, [x29, #-152]
  428094:	ldur	x9, [x29, #-128]
  428098:	ldr	x9, [x9, #16]
  42809c:	mov	w10, #0x0                   	// #0
  4280a0:	cmp	x8, x9
  4280a4:	str	w10, [sp, #68]
  4280a8:	b.cs	428108 <_obstack_memory_used@@Base+0x7e8>  // b.hs, b.nlast
  4280ac:	ldur	x8, [x29, #-128]
  4280b0:	ldr	x8, [x8]
  4280b4:	ldur	x9, [x29, #-152]
  4280b8:	mov	x10, #0x10                  	// #16
  4280bc:	mul	x9, x10, x9
  4280c0:	add	x8, x8, x9
  4280c4:	ldr	w11, [x8, #8]
  4280c8:	and	w11, w11, #0xff
  4280cc:	mov	w12, #0x0                   	// #0
  4280d0:	cmp	w11, #0x1
  4280d4:	str	w12, [sp, #68]
  4280d8:	b.ne	428108 <_obstack_memory_used@@Base+0x7e8>  // b.any
  4280dc:	ldur	x8, [x29, #-128]
  4280e0:	ldr	x8, [x8]
  4280e4:	ldur	x9, [x29, #-152]
  4280e8:	mov	x10, #0x10                  	// #16
  4280ec:	mul	x9, x10, x9
  4280f0:	add	x8, x8, x9
  4280f4:	ldr	w11, [x8, #8]
  4280f8:	lsr	w11, w11, #21
  4280fc:	tst	w11, #0x1
  428100:	cset	w11, ne  // ne = any
  428104:	str	w11, [sp, #68]
  428108:	ldr	w8, [sp, #68]
  42810c:	tbnz	w8, #0, 428114 <_obstack_memory_used@@Base+0x7f4>
  428110:	b	428144 <_obstack_memory_used@@Base+0x824>
  428114:	ldur	x8, [x29, #-128]
  428118:	ldr	x8, [x8]
  42811c:	ldur	x9, [x29, #-152]
  428120:	mov	x10, #0x10                  	// #16
  428124:	mul	x9, x10, x9
  428128:	add	x8, x8, x9
  42812c:	ldrb	w11, [x8]
  428130:	ldur	x8, [x29, #-184]
  428134:	add	x9, x8, #0x1
  428138:	stur	x9, [x29, #-184]
  42813c:	strb	w11, [x8]
  428140:	b	428088 <_obstack_memory_used@@Base+0x768>
  428144:	sub	x3, x29, #0xc8
  428148:	stur	xzr, [x29, #-200]
  42814c:	ldur	x8, [x29, #-184]
  428150:	sub	x9, x29, #0xac
  428154:	mov	x10, x9
  428158:	subs	x2, x8, x10
  42815c:	sub	x0, x29, #0xbc
  428160:	mov	x1, x9
  428164:	str	x9, [sp, #56]
  428168:	bl	4271dc <wcrtomb@plt+0x248cc>
  42816c:	ldur	x8, [x29, #-184]
  428170:	ldr	x9, [sp, #56]
  428174:	subs	x8, x8, x9
  428178:	cmp	x0, x8
  42817c:	b.ne	42820c <_obstack_memory_used@@Base+0x8ec>  // b.any
  428180:	ldur	w0, [x29, #-188]
  428184:	bl	4028c0 <towlower@plt>
  428188:	sub	x8, x29, #0xac
  42818c:	str	w0, [sp, #52]
  428190:	mov	x0, x8
  428194:	ldr	w1, [sp, #52]
  428198:	sub	x2, x29, #0xc8
  42819c:	bl	402910 <wcrtomb@plt>
  4281a0:	mov	x8, #0xffffffffffffffff    	// #-1
  4281a4:	cmp	x0, x8
  4281a8:	b.eq	42820c <_obstack_memory_used@@Base+0x8ec>  // b.none
  4281ac:	ldur	x8, [x29, #-120]
  4281b0:	ldurb	w9, [x29, #-172]
  4281b4:	stur	x8, [x29, #-72]
  4281b8:	mov	w10, #0x0                   	// #0
  4281bc:	sturb	w10, [x29, #-73]
  4281c0:	stur	w9, [x29, #-80]
  4281c4:	ldur	x8, [x29, #-72]
  4281c8:	ldursw	x11, [x29, #-80]
  4281cc:	add	x8, x8, x11
  4281d0:	mov	w9, #0x1                   	// #1
  4281d4:	strb	w9, [x8]
  4281d8:	ldurb	w9, [x29, #-73]
  4281dc:	tbnz	w9, #0, 4281e4 <_obstack_memory_used@@Base+0x8c4>
  4281e0:	b	42820c <_obstack_memory_used@@Base+0x8ec>
  4281e4:	ldur	x8, [x29, #-72]
  4281e8:	ldur	w0, [x29, #-80]
  4281ec:	str	x8, [sp, #40]
  4281f0:	bl	402880 <tolower@plt>
  4281f4:	mov	w1, w0
  4281f8:	sxtw	x8, w1
  4281fc:	ldr	x9, [sp, #40]
  428200:	add	x8, x9, x8
  428204:	mov	w10, #0x1                   	// #1
  428208:	strb	w10, [x8]
  42820c:	b	4285f8 <_obstack_memory_used@@Base+0xcd8>
  428210:	ldur	w8, [x29, #-156]
  428214:	cmp	w8, #0x3
  428218:	b.ne	428318 <_obstack_memory_used@@Base+0x9f8>  // b.any
  42821c:	stur	wzr, [x29, #-204]
  428220:	stur	wzr, [x29, #-208]
  428224:	ldur	w8, [x29, #-204]
  428228:	cmp	w8, #0x4
  42822c:	b.ge	428314 <_obstack_memory_used@@Base+0x9f4>  // b.tcont
  428230:	ldur	x8, [x29, #-128]
  428234:	ldr	x8, [x8]
  428238:	ldur	x9, [x29, #-152]
  42823c:	mov	x10, #0x10                  	// #16
  428240:	mul	x9, x10, x9
  428244:	add	x8, x8, x9
  428248:	ldr	x8, [x8]
  42824c:	ldursw	x9, [x29, #-204]
  428250:	ldr	x8, [x8, x9, lsl #3]
  428254:	stur	x8, [x29, #-224]
  428258:	stur	wzr, [x29, #-212]
  42825c:	ldur	w8, [x29, #-212]
  428260:	cmp	w8, #0x40
  428264:	b.ge	428304 <_obstack_memory_used@@Base+0x9e4>  // b.tcont
  428268:	ldur	x8, [x29, #-224]
  42826c:	ldur	w9, [x29, #-212]
  428270:	mov	w10, w9
  428274:	mov	x11, #0x1                   	// #1
  428278:	lsl	x10, x11, x10
  42827c:	and	x8, x8, x10
  428280:	cbz	x8, 4282e8 <_obstack_memory_used@@Base+0x9c8>
  428284:	ldur	x8, [x29, #-120]
  428288:	ldurb	w9, [x29, #-137]
  42828c:	ldur	w10, [x29, #-208]
  428290:	stur	x8, [x29, #-56]
  428294:	and	w9, w9, #0x1
  428298:	sturb	w9, [x29, #-57]
  42829c:	stur	w10, [x29, #-64]
  4282a0:	ldur	x8, [x29, #-56]
  4282a4:	ldursw	x11, [x29, #-64]
  4282a8:	add	x8, x8, x11
  4282ac:	mov	w9, #0x1                   	// #1
  4282b0:	strb	w9, [x8]
  4282b4:	ldurb	w9, [x29, #-57]
  4282b8:	tbnz	w9, #0, 4282c0 <_obstack_memory_used@@Base+0x9a0>
  4282bc:	b	4282e8 <_obstack_memory_used@@Base+0x9c8>
  4282c0:	ldur	x8, [x29, #-56]
  4282c4:	ldur	w0, [x29, #-64]
  4282c8:	str	x8, [sp, #32]
  4282cc:	bl	402880 <tolower@plt>
  4282d0:	mov	w1, w0
  4282d4:	sxtw	x8, w1
  4282d8:	ldr	x9, [sp, #32]
  4282dc:	add	x8, x9, x8
  4282e0:	mov	w10, #0x1                   	// #1
  4282e4:	strb	w10, [x8]
  4282e8:	ldur	w8, [x29, #-212]
  4282ec:	add	w8, w8, #0x1
  4282f0:	stur	w8, [x29, #-212]
  4282f4:	ldur	w8, [x29, #-208]
  4282f8:	add	w8, w8, #0x1
  4282fc:	stur	w8, [x29, #-208]
  428300:	b	42825c <_obstack_memory_used@@Base+0x93c>
  428304:	ldur	w8, [x29, #-204]
  428308:	add	w8, w8, #0x1
  42830c:	stur	w8, [x29, #-204]
  428310:	b	428224 <_obstack_memory_used@@Base+0x904>
  428314:	b	4285f8 <_obstack_memory_used@@Base+0xcd8>
  428318:	ldur	w8, [x29, #-156]
  42831c:	cmp	w8, #0x6
  428320:	b.ne	4285a0 <_obstack_memory_used@@Base+0xc80>  // b.any
  428324:	ldur	x8, [x29, #-128]
  428328:	ldr	x8, [x8]
  42832c:	ldur	x9, [x29, #-152]
  428330:	mov	x10, #0x10                  	// #16
  428334:	mul	x9, x10, x9
  428338:	add	x8, x8, x9
  42833c:	ldr	x8, [x8]
  428340:	stur	x8, [x29, #-232]
  428344:	ldur	x8, [x29, #-128]
  428348:	ldr	w11, [x8, #180]
  42834c:	cmp	w11, #0x1
  428350:	b.le	42842c <_obstack_memory_used@@Base+0xb0c>
  428354:	ldur	x8, [x29, #-232]
  428358:	ldr	x8, [x8, #72]
  42835c:	cbnz	x8, 428380 <_obstack_memory_used@@Base+0xa60>
  428360:	ldur	x8, [x29, #-232]
  428364:	ldrb	w9, [x8, #32]
  428368:	and	w9, w9, #0x1
  42836c:	and	w9, w9, #0xff
  428370:	cbnz	w9, 428380 <_obstack_memory_used@@Base+0xa60>
  428374:	ldur	x8, [x29, #-232]
  428378:	ldr	x8, [x8, #64]
  42837c:	cbz	x8, 42842c <_obstack_memory_used@@Base+0xb0c>
  428380:	mov	w8, #0x0                   	// #0
  428384:	sturb	w8, [x29, #-241]
  428388:	sub	x3, x29, #0x100
  42838c:	stur	xzr, [x29, #-256]
  428390:	mov	x8, xzr
  428394:	mov	x0, x8
  428398:	sub	x1, x29, #0xf1
  42839c:	mov	x2, #0x1                   	// #1
  4283a0:	bl	4271dc <wcrtomb@plt+0x248cc>
  4283a4:	mov	x8, #0xfffffffffffffffe    	// #-2
  4283a8:	cmp	x0, x8
  4283ac:	b.ne	428410 <_obstack_memory_used@@Base+0xaf0>  // b.any
  4283b0:	ldur	x8, [x29, #-120]
  4283b4:	ldurb	w9, [x29, #-241]
  4283b8:	stur	x8, [x29, #-40]
  4283bc:	mov	w10, #0x0                   	// #0
  4283c0:	sturb	w10, [x29, #-41]
  4283c4:	stur	w9, [x29, #-48]
  4283c8:	ldur	x8, [x29, #-40]
  4283cc:	ldursw	x11, [x29, #-48]
  4283d0:	add	x8, x8, x11
  4283d4:	mov	w9, #0x1                   	// #1
  4283d8:	strb	w9, [x8]
  4283dc:	ldurb	w9, [x29, #-41]
  4283e0:	tbnz	w9, #0, 4283e8 <_obstack_memory_used@@Base+0xac8>
  4283e4:	b	428410 <_obstack_memory_used@@Base+0xaf0>
  4283e8:	ldur	x8, [x29, #-40]
  4283ec:	ldur	w0, [x29, #-48]
  4283f0:	str	x8, [sp, #24]
  4283f4:	bl	402880 <tolower@plt>
  4283f8:	mov	w1, w0
  4283fc:	sxtw	x8, w1
  428400:	ldr	x9, [sp, #24]
  428404:	add	x8, x9, x8
  428408:	mov	w10, #0x1                   	// #1
  42840c:	strb	w10, [x8]
  428410:	ldurb	w8, [x29, #-241]
  428414:	add	w8, w8, #0x1
  428418:	mov	w9, w8
  42841c:	sturb	w9, [x29, #-241]
  428420:	and	w8, w8, #0xff
  428424:	cbnz	w8, 428388 <_obstack_memory_used@@Base+0xa68>
  428428:	b	42859c <_obstack_memory_used@@Base+0xc7c>
  42842c:	stur	xzr, [x29, #-240]
  428430:	ldur	x8, [x29, #-240]
  428434:	ldur	x9, [x29, #-232]
  428438:	ldr	x9, [x9, #40]
  42843c:	cmp	x8, x9
  428440:	b.ge	42859c <_obstack_memory_used@@Base+0xc7c>  // b.tcont
  428444:	add	x2, sp, #0x58
  428448:	str	xzr, [sp, #88]
  42844c:	ldur	x8, [x29, #-232]
  428450:	ldr	x8, [x8]
  428454:	ldur	x9, [x29, #-240]
  428458:	ldr	w1, [x8, x9, lsl #2]
  42845c:	add	x0, sp, #0x60
  428460:	bl	402910 <wcrtomb@plt>
  428464:	mov	x8, #0xffffffffffffffff    	// #-1
  428468:	cmp	x0, x8
  42846c:	b.eq	4284d4 <_obstack_memory_used@@Base+0xbb4>  // b.none
  428470:	ldur	x8, [x29, #-120]
  428474:	ldurb	w9, [x29, #-137]
  428478:	ldrb	w10, [sp, #96]
  42847c:	stur	x8, [x29, #-24]
  428480:	and	w9, w9, #0x1
  428484:	sturb	w9, [x29, #-25]
  428488:	stur	w10, [x29, #-32]
  42848c:	ldur	x8, [x29, #-24]
  428490:	ldursw	x11, [x29, #-32]
  428494:	add	x8, x8, x11
  428498:	mov	w9, #0x1                   	// #1
  42849c:	strb	w9, [x8]
  4284a0:	ldurb	w9, [x29, #-25]
  4284a4:	tbnz	w9, #0, 4284ac <_obstack_memory_used@@Base+0xb8c>
  4284a8:	b	4284d4 <_obstack_memory_used@@Base+0xbb4>
  4284ac:	ldur	x8, [x29, #-24]
  4284b0:	ldur	w0, [x29, #-32]
  4284b4:	str	x8, [sp, #16]
  4284b8:	bl	402880 <tolower@plt>
  4284bc:	mov	w1, w0
  4284c0:	sxtw	x8, w1
  4284c4:	ldr	x9, [sp, #16]
  4284c8:	add	x8, x9, x8
  4284cc:	mov	w10, #0x1                   	// #1
  4284d0:	strb	w10, [x8]
  4284d4:	ldur	x8, [x29, #-104]
  4284d8:	ldr	x8, [x8, #24]
  4284dc:	and	x8, x8, #0x400000
  4284e0:	cbz	x8, 42858c <_obstack_memory_used@@Base+0xc6c>
  4284e4:	ldur	x8, [x29, #-128]
  4284e8:	ldr	w9, [x8, #180]
  4284ec:	cmp	w9, #0x1
  4284f0:	b.le	42858c <_obstack_memory_used@@Base+0xc6c>
  4284f4:	ldur	x8, [x29, #-232]
  4284f8:	ldr	x8, [x8]
  4284fc:	ldur	x9, [x29, #-240]
  428500:	ldr	w0, [x8, x9, lsl #2]
  428504:	bl	4028c0 <towlower@plt>
  428508:	add	x8, sp, #0x60
  42850c:	str	w0, [sp, #12]
  428510:	mov	x0, x8
  428514:	ldr	w1, [sp, #12]
  428518:	add	x2, sp, #0x58
  42851c:	bl	402910 <wcrtomb@plt>
  428520:	mov	x8, #0xffffffffffffffff    	// #-1
  428524:	cmp	x0, x8
  428528:	b.eq	42858c <_obstack_memory_used@@Base+0xc6c>  // b.none
  42852c:	ldur	x8, [x29, #-120]
  428530:	ldrb	w9, [sp, #96]
  428534:	stur	x8, [x29, #-8]
  428538:	mov	w10, #0x0                   	// #0
  42853c:	sturb	w10, [x29, #-9]
  428540:	stur	w9, [x29, #-16]
  428544:	ldur	x8, [x29, #-8]
  428548:	ldursw	x11, [x29, #-16]
  42854c:	add	x8, x8, x11
  428550:	mov	w9, #0x1                   	// #1
  428554:	strb	w9, [x8]
  428558:	ldurb	w9, [x29, #-9]
  42855c:	tbnz	w9, #0, 428564 <_obstack_memory_used@@Base+0xc44>
  428560:	b	42858c <_obstack_memory_used@@Base+0xc6c>
  428564:	ldur	x8, [x29, #-8]
  428568:	ldur	w0, [x29, #-16]
  42856c:	str	x8, [sp]
  428570:	bl	402880 <tolower@plt>
  428574:	mov	w1, w0
  428578:	sxtw	x8, w1
  42857c:	ldr	x9, [sp]
  428580:	add	x8, x9, x8
  428584:	mov	w10, #0x1                   	// #1
  428588:	strb	w10, [x8]
  42858c:	ldur	x8, [x29, #-240]
  428590:	add	x8, x8, #0x1
  428594:	stur	x8, [x29, #-240]
  428598:	b	428430 <_obstack_memory_used@@Base+0xb10>
  42859c:	b	4285f8 <_obstack_memory_used@@Base+0xcd8>
  4285a0:	ldur	w8, [x29, #-156]
  4285a4:	cmp	w8, #0x5
  4285a8:	b.eq	4285c4 <_obstack_memory_used@@Base+0xca4>  // b.none
  4285ac:	ldur	w8, [x29, #-156]
  4285b0:	cmp	w8, #0x7
  4285b4:	b.eq	4285c4 <_obstack_memory_used@@Base+0xca4>  // b.none
  4285b8:	ldur	w8, [x29, #-156]
  4285bc:	cmp	w8, #0x2
  4285c0:	b.ne	4285f8 <_obstack_memory_used@@Base+0xcd8>  // b.any
  4285c4:	ldur	x0, [x29, #-120]
  4285c8:	mov	w1, #0x1                   	// #1
  4285cc:	mov	x2, #0x100                 	// #256
  4285d0:	bl	402520 <memset@plt>
  4285d4:	ldur	w8, [x29, #-156]
  4285d8:	cmp	w8, #0x2
  4285dc:	b.ne	4285f4 <_obstack_memory_used@@Base+0xcd4>  // b.any
  4285e0:	ldur	x8, [x29, #-104]
  4285e4:	ldrb	w9, [x8, #56]
  4285e8:	and	w9, w9, #0xfffffffe
  4285ec:	orr	w9, w9, #0x1
  4285f0:	strb	w9, [x8, #56]
  4285f4:	b	428608 <_obstack_memory_used@@Base+0xce8>
  4285f8:	ldur	x8, [x29, #-136]
  4285fc:	add	x8, x8, #0x1
  428600:	stur	x8, [x29, #-136]
  428604:	b	427f64 <_obstack_memory_used@@Base+0x644>
  428608:	add	sp, sp, #0x260
  42860c:	ldr	x28, [sp, #16]
  428610:	ldp	x29, x30, [sp], #32
  428614:	ret
  428618:	sub	sp, sp, #0x50
  42861c:	stp	x29, x30, [sp, #64]
  428620:	add	x29, sp, #0x40
  428624:	mov	x8, #0xb2fc                	// #45820
  428628:	movk	x8, #0x3, lsl #16
  42862c:	mov	x9, #0x2c6                 	// #710
  428630:	movk	x9, #0x101, lsl #16
  428634:	mov	x10, xzr
  428638:	mov	x11, #0x100                 	// #256
  42863c:	stur	x0, [x29, #-16]
  428640:	stur	x1, [x29, #-24]
  428644:	stur	w2, [x29, #-28]
  428648:	ldur	w12, [x29, #-28]
  42864c:	tst	w12, #0x1
  428650:	csel	x8, x8, x9, ne  // ne = any
  428654:	str	x8, [sp, #24]
  428658:	ldur	x8, [x29, #-16]
  42865c:	str	x10, [x8]
  428660:	ldur	x8, [x29, #-16]
  428664:	str	xzr, [x8, #8]
  428668:	ldur	x8, [x29, #-16]
  42866c:	str	xzr, [x8, #16]
  428670:	mov	x0, x11
  428674:	bl	402450 <malloc@plt>
  428678:	ldur	x8, [x29, #-16]
  42867c:	str	x0, [x8, #32]
  428680:	ldur	x8, [x29, #-16]
  428684:	ldr	x8, [x8, #32]
  428688:	cmp	x8, #0x0
  42868c:	cset	w12, eq  // eq = none
  428690:	and	w12, w12, #0x1
  428694:	mov	w0, w12
  428698:	sxtw	x8, w0
  42869c:	cbz	x8, 4286ac <_obstack_memory_used@@Base+0xd8c>
  4286a0:	mov	w8, #0xc                   	// #12
  4286a4:	stur	w8, [x29, #-4]
  4286a8:	b	4287f4 <_obstack_memory_used@@Base+0xed4>
  4286ac:	ldur	w8, [x29, #-28]
  4286b0:	mov	x9, #0x400000              	// #4194304
  4286b4:	mov	x10, xzr
  4286b8:	tst	w8, #0x2
  4286bc:	csel	x9, x9, x10, ne  // ne = any
  4286c0:	ldr	x10, [sp, #24]
  4286c4:	orr	x9, x10, x9
  4286c8:	str	x9, [sp, #24]
  4286cc:	ldur	w8, [x29, #-28]
  4286d0:	and	w8, w8, #0x4
  4286d4:	cbz	w8, 428708 <_obstack_memory_used@@Base+0xde8>
  4286d8:	ldr	x8, [sp, #24]
  4286dc:	and	x8, x8, #0xffffffffffffffbf
  4286e0:	str	x8, [sp, #24]
  4286e4:	ldr	x8, [sp, #24]
  4286e8:	orr	x8, x8, #0x100
  4286ec:	str	x8, [sp, #24]
  4286f0:	ldur	x8, [x29, #-16]
  4286f4:	ldrb	w9, [x8, #56]
  4286f8:	and	w9, w9, #0x7f
  4286fc:	orr	w9, w9, #0xffffff80
  428700:	strb	w9, [x8, #56]
  428704:	b	428718 <_obstack_memory_used@@Base+0xdf8>
  428708:	ldur	x8, [x29, #-16]
  42870c:	ldrb	w9, [x8, #56]
  428710:	and	w9, w9, #0x7f
  428714:	strb	w9, [x8, #56]
  428718:	ldur	w8, [x29, #-28]
  42871c:	tst	w8, #0x8
  428720:	cset	w8, ne  // ne = any
  428724:	mov	w9, #0x1                   	// #1
  428728:	eor	w8, w8, #0x1
  42872c:	eor	w8, w8, w9
  428730:	and	w8, w8, #0x1
  428734:	ldur	x10, [x29, #-16]
  428738:	ldrb	w11, [x10, #56]
  42873c:	and	w8, w8, w9
  428740:	lsl	w8, w8, #4
  428744:	and	w9, w11, #0xffffffef
  428748:	orr	w8, w9, w8
  42874c:	strb	w8, [x10, #56]
  428750:	ldur	x10, [x29, #-16]
  428754:	mov	x12, xzr
  428758:	str	x12, [x10, #40]
  42875c:	ldur	x0, [x29, #-16]
  428760:	ldur	x1, [x29, #-24]
  428764:	ldur	x10, [x29, #-24]
  428768:	str	x0, [sp, #16]
  42876c:	mov	x0, x10
  428770:	str	x1, [sp, #8]
  428774:	bl	4022f0 <strlen@plt>
  428778:	ldr	x3, [sp, #24]
  42877c:	ldr	x10, [sp, #16]
  428780:	str	x0, [sp]
  428784:	mov	x0, x10
  428788:	ldr	x1, [sp, #8]
  42878c:	ldr	x2, [sp]
  428790:	bl	427aac <_obstack_memory_used@@Base+0x18c>
  428794:	str	w0, [sp, #32]
  428798:	ldr	w8, [sp, #32]
  42879c:	cmp	w8, #0x10
  4287a0:	b.ne	4287ac <_obstack_memory_used@@Base+0xe8c>  // b.any
  4287a4:	mov	w8, #0x8                   	// #8
  4287a8:	str	w8, [sp, #32]
  4287ac:	ldr	w8, [sp, #32]
  4287b0:	cmp	w8, #0x0
  4287b4:	cset	w8, eq  // eq = none
  4287b8:	and	w8, w8, #0x1
  4287bc:	mov	w0, w8
  4287c0:	sxtw	x9, w0
  4287c4:	cbz	x9, 4287d4 <_obstack_memory_used@@Base+0xeb4>
  4287c8:	ldur	x0, [x29, #-16]
  4287cc:	bl	427e04 <_obstack_memory_used@@Base+0x4e4>
  4287d0:	b	4287ec <_obstack_memory_used@@Base+0xecc>
  4287d4:	ldur	x8, [x29, #-16]
  4287d8:	ldr	x0, [x8, #32]
  4287dc:	bl	4026c0 <free@plt>
  4287e0:	ldur	x8, [x29, #-16]
  4287e4:	mov	x9, xzr
  4287e8:	str	x9, [x8, #32]
  4287ec:	ldr	w8, [sp, #32]
  4287f0:	stur	w8, [x29, #-4]
  4287f4:	ldur	w0, [x29, #-4]
  4287f8:	ldp	x29, x30, [sp, #64]
  4287fc:	add	sp, sp, #0x50
  428800:	ret
  428804:	sub	sp, sp, #0x60
  428808:	stp	x29, x30, [sp, #80]
  42880c:	add	x29, sp, #0x50
  428810:	mov	w8, #0x11                  	// #17
  428814:	stur	w0, [x29, #-4]
  428818:	stur	x1, [x29, #-16]
  42881c:	stur	x2, [x29, #-24]
  428820:	stur	x3, [x29, #-32]
  428824:	str	w8, [sp, #28]
  428828:	ldur	w8, [x29, #-4]
  42882c:	cmp	w8, #0x0
  428830:	cset	w8, lt  // lt = tstop
  428834:	mov	w9, #0x1                   	// #1
  428838:	str	w9, [sp, #12]
  42883c:	tbnz	w8, #0, 428854 <_obstack_memory_used@@Base+0xf34>
  428840:	ldur	w8, [x29, #-4]
  428844:	ldr	w9, [sp, #28]
  428848:	cmp	w8, w9
  42884c:	cset	w8, ge  // ge = tcont
  428850:	str	w8, [sp, #12]
  428854:	ldr	w8, [sp, #12]
  428858:	and	w8, w8, #0x1
  42885c:	mov	w0, w8
  428860:	sxtw	x9, w0
  428864:	cbz	x9, 42886c <_obstack_memory_used@@Base+0xf4c>
  428868:	bl	402610 <abort@plt>
  42886c:	ldursw	x8, [x29, #-4]
  428870:	adrp	x9, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  428874:	add	x9, x9, #0xa78
  428878:	ldr	x8, [x9, x8, lsl #3]
  42887c:	adrp	x9, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  428880:	add	x9, x9, #0x8f4
  428884:	add	x0, x9, x8
  428888:	bl	4028b0 <gettext@plt>
  42888c:	str	x0, [sp, #40]
  428890:	ldr	x0, [sp, #40]
  428894:	bl	4022f0 <strlen@plt>
  428898:	add	x8, x0, #0x1
  42889c:	str	x8, [sp, #32]
  4288a0:	ldur	x8, [x29, #-32]
  4288a4:	cmp	x8, #0x0
  4288a8:	cset	w10, ne  // ne = any
  4288ac:	and	w10, w10, #0x1
  4288b0:	mov	w0, w10
  4288b4:	sxtw	x8, w0
  4288b8:	cbz	x8, 428914 <_obstack_memory_used@@Base+0xff4>
  4288bc:	ldr	x8, [sp, #32]
  4288c0:	str	x8, [sp, #16]
  4288c4:	ldr	x8, [sp, #32]
  4288c8:	ldur	x9, [x29, #-32]
  4288cc:	cmp	x8, x9
  4288d0:	cset	w10, hi  // hi = pmore
  4288d4:	and	w10, w10, #0x1
  4288d8:	mov	w0, w10
  4288dc:	sxtw	x8, w0
  4288e0:	cbz	x8, 428904 <_obstack_memory_used@@Base+0xfe4>
  4288e4:	ldur	x8, [x29, #-32]
  4288e8:	subs	x8, x8, #0x1
  4288ec:	str	x8, [sp, #16]
  4288f0:	ldur	x8, [x29, #-24]
  4288f4:	ldr	x9, [sp, #16]
  4288f8:	add	x8, x8, x9
  4288fc:	mov	w10, #0x0                   	// #0
  428900:	strb	w10, [x8]
  428904:	ldur	x0, [x29, #-24]
  428908:	ldr	x1, [sp, #40]
  42890c:	ldr	x2, [sp, #16]
  428910:	bl	402290 <memcpy@plt>
  428914:	ldr	x0, [sp, #32]
  428918:	ldp	x29, x30, [sp, #80]
  42891c:	add	sp, sp, #0x60
  428920:	ret
  428924:	sub	sp, sp, #0x30
  428928:	stp	x29, x30, [sp, #32]
  42892c:	add	x29, sp, #0x20
  428930:	stur	x0, [x29, #-8]
  428934:	ldur	x8, [x29, #-8]
  428938:	ldr	x8, [x8]
  42893c:	str	x8, [sp, #16]
  428940:	ldr	x8, [sp, #16]
  428944:	cmp	x8, #0x0
  428948:	cset	w9, ne  // ne = any
  42894c:	and	w9, w9, #0x1
  428950:	mov	w0, w9
  428954:	sxtw	x8, w0
  428958:	cbz	x8, 428964 <_obstack_memory_used@@Base+0x1044>
  42895c:	ldr	x0, [sp, #16]
  428960:	bl	4289b8 <_obstack_memory_used@@Base+0x1098>
  428964:	ldur	x8, [x29, #-8]
  428968:	mov	x9, xzr
  42896c:	str	x9, [x8]
  428970:	ldur	x8, [x29, #-8]
  428974:	str	xzr, [x8, #8]
  428978:	ldur	x8, [x29, #-8]
  42897c:	ldr	x0, [x8, #32]
  428980:	str	x9, [sp, #8]
  428984:	bl	4026c0 <free@plt>
  428988:	ldur	x8, [x29, #-8]
  42898c:	ldr	x9, [sp, #8]
  428990:	str	x9, [x8, #32]
  428994:	ldur	x8, [x29, #-8]
  428998:	ldr	x0, [x8, #40]
  42899c:	bl	4026c0 <free@plt>
  4289a0:	ldur	x8, [x29, #-8]
  4289a4:	ldr	x9, [sp, #8]
  4289a8:	str	x9, [x8, #40]
  4289ac:	ldp	x29, x30, [sp, #32]
  4289b0:	add	sp, sp, #0x30
  4289b4:	ret
  4289b8:	sub	sp, sp, #0x40
  4289bc:	stp	x29, x30, [sp, #48]
  4289c0:	add	x29, sp, #0x30
  4289c4:	stur	x0, [x29, #-8]
  4289c8:	ldur	x8, [x29, #-8]
  4289cc:	ldr	x8, [x8]
  4289d0:	cbz	x8, 428a18 <_obstack_memory_used@@Base+0x10f8>
  4289d4:	stur	xzr, [x29, #-16]
  4289d8:	ldur	x8, [x29, #-16]
  4289dc:	ldur	x9, [x29, #-8]
  4289e0:	ldr	x9, [x9, #16]
  4289e4:	cmp	x8, x9
  4289e8:	b.cs	428a18 <_obstack_memory_used@@Base+0x10f8>  // b.hs, b.nlast
  4289ec:	ldur	x8, [x29, #-8]
  4289f0:	ldr	x8, [x8]
  4289f4:	ldur	x9, [x29, #-16]
  4289f8:	mov	x10, #0x10                  	// #16
  4289fc:	mul	x9, x10, x9
  428a00:	add	x0, x8, x9
  428a04:	bl	42a4e0 <_obstack_memory_used@@Base+0x2bc0>
  428a08:	ldur	x8, [x29, #-16]
  428a0c:	add	x8, x8, #0x1
  428a10:	stur	x8, [x29, #-16]
  428a14:	b	4289d8 <_obstack_memory_used@@Base+0x10b8>
  428a18:	ldur	x8, [x29, #-8]
  428a1c:	ldr	x0, [x8, #24]
  428a20:	bl	4026c0 <free@plt>
  428a24:	stur	xzr, [x29, #-16]
  428a28:	ldur	x8, [x29, #-16]
  428a2c:	ldur	x9, [x29, #-8]
  428a30:	ldr	x9, [x9, #16]
  428a34:	cmp	x8, x9
  428a38:	b.cs	428ad0 <_obstack_memory_used@@Base+0x11b0>  // b.hs, b.nlast
  428a3c:	ldur	x8, [x29, #-8]
  428a40:	ldr	x8, [x8, #48]
  428a44:	cbz	x8, 428a68 <_obstack_memory_used@@Base+0x1148>
  428a48:	ldur	x8, [x29, #-8]
  428a4c:	ldr	x8, [x8, #48]
  428a50:	ldur	x9, [x29, #-16]
  428a54:	mov	x10, #0x18                  	// #24
  428a58:	mul	x9, x10, x9
  428a5c:	add	x8, x8, x9
  428a60:	ldr	x0, [x8, #16]
  428a64:	bl	4026c0 <free@plt>
  428a68:	ldur	x8, [x29, #-8]
  428a6c:	ldr	x8, [x8, #56]
  428a70:	cbz	x8, 428a94 <_obstack_memory_used@@Base+0x1174>
  428a74:	ldur	x8, [x29, #-8]
  428a78:	ldr	x8, [x8, #56]
  428a7c:	ldur	x9, [x29, #-16]
  428a80:	mov	x10, #0x18                  	// #24
  428a84:	mul	x9, x10, x9
  428a88:	add	x8, x8, x9
  428a8c:	ldr	x0, [x8, #16]
  428a90:	bl	4026c0 <free@plt>
  428a94:	ldur	x8, [x29, #-8]
  428a98:	ldr	x8, [x8, #40]
  428a9c:	cbz	x8, 428ac0 <_obstack_memory_used@@Base+0x11a0>
  428aa0:	ldur	x8, [x29, #-8]
  428aa4:	ldr	x8, [x8, #40]
  428aa8:	ldur	x9, [x29, #-16]
  428aac:	mov	x10, #0x18                  	// #24
  428ab0:	mul	x9, x10, x9
  428ab4:	add	x8, x8, x9
  428ab8:	ldr	x0, [x8, #16]
  428abc:	bl	4026c0 <free@plt>
  428ac0:	ldur	x8, [x29, #-16]
  428ac4:	add	x8, x8, #0x1
  428ac8:	stur	x8, [x29, #-16]
  428acc:	b	428a28 <_obstack_memory_used@@Base+0x1108>
  428ad0:	ldur	x8, [x29, #-8]
  428ad4:	ldr	x0, [x8, #40]
  428ad8:	bl	4026c0 <free@plt>
  428adc:	ldur	x8, [x29, #-8]
  428ae0:	ldr	x0, [x8, #48]
  428ae4:	bl	4026c0 <free@plt>
  428ae8:	ldur	x8, [x29, #-8]
  428aec:	ldr	x0, [x8, #56]
  428af0:	bl	4026c0 <free@plt>
  428af4:	ldur	x8, [x29, #-8]
  428af8:	ldr	x0, [x8]
  428afc:	bl	4026c0 <free@plt>
  428b00:	ldur	x8, [x29, #-8]
  428b04:	ldr	x8, [x8, #64]
  428b08:	cbz	x8, 428bac <_obstack_memory_used@@Base+0x128c>
  428b0c:	stur	xzr, [x29, #-16]
  428b10:	ldur	x8, [x29, #-16]
  428b14:	ldur	x9, [x29, #-8]
  428b18:	ldr	x9, [x9, #136]
  428b1c:	cmp	x8, x9
  428b20:	b.hi	428bac <_obstack_memory_used@@Base+0x128c>  // b.pmore
  428b24:	ldur	x8, [x29, #-8]
  428b28:	ldr	x8, [x8, #64]
  428b2c:	ldur	x9, [x29, #-16]
  428b30:	mov	x10, #0x18                  	// #24
  428b34:	mul	x9, x10, x9
  428b38:	add	x8, x8, x9
  428b3c:	str	x8, [sp, #16]
  428b40:	str	xzr, [sp, #24]
  428b44:	ldr	x8, [sp, #24]
  428b48:	ldr	x9, [sp, #16]
  428b4c:	ldr	x9, [x9]
  428b50:	cmp	x8, x9
  428b54:	b.ge	428b90 <_obstack_memory_used@@Base+0x1270>  // b.tcont
  428b58:	ldr	x8, [sp, #16]
  428b5c:	ldr	x8, [x8, #16]
  428b60:	ldr	x9, [sp, #24]
  428b64:	mov	x10, #0x8                   	// #8
  428b68:	mul	x9, x10, x9
  428b6c:	add	x8, x8, x9
  428b70:	ldr	x8, [x8]
  428b74:	str	x8, [sp, #8]
  428b78:	ldr	x0, [sp, #8]
  428b7c:	bl	42a568 <_obstack_memory_used@@Base+0x2c48>
  428b80:	ldr	x8, [sp, #24]
  428b84:	add	x8, x8, #0x1
  428b88:	str	x8, [sp, #24]
  428b8c:	b	428b44 <_obstack_memory_used@@Base+0x1224>
  428b90:	ldr	x8, [sp, #16]
  428b94:	ldr	x0, [x8, #16]
  428b98:	bl	4026c0 <free@plt>
  428b9c:	ldur	x8, [x29, #-16]
  428ba0:	add	x8, x8, #0x1
  428ba4:	stur	x8, [x29, #-16]
  428ba8:	b	428b10 <_obstack_memory_used@@Base+0x11f0>
  428bac:	ldur	x8, [x29, #-8]
  428bb0:	ldr	x0, [x8, #64]
  428bb4:	bl	4026c0 <free@plt>
  428bb8:	ldur	x8, [x29, #-8]
  428bbc:	ldr	x8, [x8, #120]
  428bc0:	adrp	x9, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  428bc4:	add	x9, x9, #0xb00
  428bc8:	cmp	x8, x9
  428bcc:	b.eq	428bdc <_obstack_memory_used@@Base+0x12bc>  // b.none
  428bd0:	ldur	x8, [x29, #-8]
  428bd4:	ldr	x0, [x8, #120]
  428bd8:	bl	4026c0 <free@plt>
  428bdc:	ldur	x8, [x29, #-8]
  428be0:	ldr	x0, [x8, #224]
  428be4:	bl	4026c0 <free@plt>
  428be8:	ldur	x0, [x29, #-8]
  428bec:	bl	4026c0 <free@plt>
  428bf0:	ldp	x29, x30, [sp, #48]
  428bf4:	add	sp, sp, #0x40
  428bf8:	ret
  428bfc:	sub	sp, sp, #0x60
  428c00:	stp	x29, x30, [sp, #80]
  428c04:	add	x29, sp, #0x50
  428c08:	stur	x0, [x29, #-16]
  428c0c:	stur	x1, [x29, #-24]
  428c10:	stur	x2, [x29, #-32]
  428c14:	str	x3, [sp, #40]
  428c18:	str	w4, [sp, #36]
  428c1c:	ldur	x8, [x29, #-16]
  428c20:	ldr	x8, [x8]
  428c24:	str	x8, [sp, #8]
  428c28:	ldr	w9, [sp, #36]
  428c2c:	and	w9, w9, #0xfffffff8
  428c30:	cbz	w9, 428c40 <_obstack_memory_used@@Base+0x1320>
  428c34:	mov	w8, #0x2                   	// #2
  428c38:	stur	w8, [x29, #-4]
  428c3c:	b	428d18 <_obstack_memory_used@@Base+0x13f8>
  428c40:	ldr	w8, [sp, #36]
  428c44:	and	w8, w8, #0x4
  428c48:	cbz	w8, 428c68 <_obstack_memory_used@@Base+0x1348>
  428c4c:	ldr	x8, [sp, #40]
  428c50:	ldr	x8, [x8]
  428c54:	str	x8, [sp, #24]
  428c58:	ldr	x8, [sp, #40]
  428c5c:	ldr	x8, [x8, #8]
  428c60:	str	x8, [sp, #16]
  428c64:	b	428c78 <_obstack_memory_used@@Base+0x1358>
  428c68:	str	xzr, [sp, #24]
  428c6c:	ldur	x0, [x29, #-24]
  428c70:	bl	4022f0 <strlen@plt>
  428c74:	str	x0, [sp, #16]
  428c78:	ldur	x8, [x29, #-16]
  428c7c:	ldrb	w9, [x8, #56]
  428c80:	mov	w10, #0x4                   	// #4
  428c84:	lsr	w9, w9, w10
  428c88:	and	w9, w9, #0x1
  428c8c:	and	w9, w9, #0xff
  428c90:	cbz	w9, 428cd0 <_obstack_memory_used@@Base+0x13b0>
  428c94:	ldur	x0, [x29, #-16]
  428c98:	ldur	x1, [x29, #-24]
  428c9c:	ldr	x2, [sp, #16]
  428ca0:	ldr	x3, [sp, #24]
  428ca4:	ldr	x4, [sp, #16]
  428ca8:	ldr	x5, [sp, #16]
  428cac:	ldr	w8, [sp, #36]
  428cb0:	mov	x9, xzr
  428cb4:	mov	x6, x9
  428cb8:	mov	x7, x9
  428cbc:	mov	x9, sp
  428cc0:	str	w8, [x9]
  428cc4:	bl	428d28 <_obstack_memory_used@@Base+0x1408>
  428cc8:	str	w0, [sp, #32]
  428ccc:	b	428d04 <_obstack_memory_used@@Base+0x13e4>
  428cd0:	ldur	x0, [x29, #-16]
  428cd4:	ldur	x1, [x29, #-24]
  428cd8:	ldr	x2, [sp, #16]
  428cdc:	ldr	x3, [sp, #24]
  428ce0:	ldr	x4, [sp, #16]
  428ce4:	ldr	x5, [sp, #16]
  428ce8:	ldur	x6, [x29, #-32]
  428cec:	ldr	x7, [sp, #40]
  428cf0:	ldr	w8, [sp, #36]
  428cf4:	mov	x9, sp
  428cf8:	str	w8, [x9]
  428cfc:	bl	428d28 <_obstack_memory_used@@Base+0x1408>
  428d00:	str	w0, [sp, #32]
  428d04:	ldr	w8, [sp, #32]
  428d08:	cmp	w8, #0x0
  428d0c:	cset	w8, ne  // ne = any
  428d10:	and	w8, w8, #0x1
  428d14:	stur	w8, [x29, #-4]
  428d18:	ldur	w0, [x29, #-4]
  428d1c:	ldp	x29, x30, [sp, #80]
  428d20:	add	sp, sp, #0x60
  428d24:	ret
  428d28:	stp	x29, x30, [sp, #-32]!
  428d2c:	str	x28, [sp, #16]
  428d30:	mov	x29, sp
  428d34:	sub	sp, sp, #0x280
  428d38:	ldr	w8, [x29, #32]
  428d3c:	mov	x9, #0xffffffffffffffff    	// #-1
  428d40:	mov	x10, #0x100                 	// #256
  428d44:	mov	w11, wzr
  428d48:	add	x12, sp, #0xe8
  428d4c:	stur	x0, [x29, #-16]
  428d50:	stur	x1, [x29, #-24]
  428d54:	stur	x2, [x29, #-32]
  428d58:	stur	x3, [x29, #-40]
  428d5c:	stur	x4, [x29, #-48]
  428d60:	stur	x5, [x29, #-56]
  428d64:	stur	x6, [x29, #-64]
  428d68:	stur	x7, [x29, #-72]
  428d6c:	stur	w8, [x29, #-76]
  428d70:	ldur	x13, [x29, #-16]
  428d74:	ldr	x13, [x13]
  428d78:	stur	x13, [x29, #-88]
  428d7c:	stur	x9, [x29, #-136]
  428d80:	mov	x0, x12
  428d84:	mov	w1, w11
  428d88:	mov	x2, x10
  428d8c:	str	x12, [sp, #184]
  428d90:	bl	402520 <memset@plt>
  428d94:	ldur	x9, [x29, #-88]
  428d98:	ldr	x10, [sp, #184]
  428d9c:	str	x9, [x10, #152]
  428da0:	ldur	x9, [x29, #-16]
  428da4:	ldr	x9, [x9, #32]
  428da8:	cbz	x9, 428dfc <_obstack_memory_used@@Base+0x14dc>
  428dac:	ldur	x8, [x29, #-16]
  428db0:	ldrb	w9, [x8, #56]
  428db4:	mov	w10, #0x3                   	// #3
  428db8:	lsr	w9, w9, w10
  428dbc:	and	w9, w9, #0x1
  428dc0:	and	w9, w9, #0xff
  428dc4:	cbz	w9, 428dfc <_obstack_memory_used@@Base+0x14dc>
  428dc8:	ldur	x8, [x29, #-40]
  428dcc:	ldur	x9, [x29, #-48]
  428dd0:	cmp	x8, x9
  428dd4:	b.eq	428dfc <_obstack_memory_used@@Base+0x14dc>  // b.none
  428dd8:	ldur	x8, [x29, #-16]
  428ddc:	ldrb	w9, [x8, #56]
  428de0:	and	w9, w9, #0x1
  428de4:	and	w9, w9, #0xff
  428de8:	cbnz	w9, 428dfc <_obstack_memory_used@@Base+0x14dc>
  428dec:	ldur	x8, [x29, #-16]
  428df0:	ldr	x8, [x8, #32]
  428df4:	str	x8, [sp, #176]
  428df8:	b	428e04 <_obstack_memory_used@@Base+0x14e4>
  428dfc:	mov	x8, xzr
  428e00:	str	x8, [sp, #176]
  428e04:	ldr	x8, [sp, #176]
  428e08:	str	x8, [sp, #224]
  428e0c:	ldur	x8, [x29, #-16]
  428e10:	ldr	x8, [x8, #40]
  428e14:	str	x8, [sp, #216]
  428e18:	ldur	x8, [x29, #-64]
  428e1c:	ldur	x9, [x29, #-16]
  428e20:	ldr	x9, [x9, #48]
  428e24:	cmp	x8, x9
  428e28:	b.ls	428e48 <_obstack_memory_used@@Base+0x1528>  // b.plast
  428e2c:	ldur	x8, [x29, #-64]
  428e30:	ldur	x9, [x29, #-16]
  428e34:	ldr	x9, [x9, #48]
  428e38:	add	x9, x9, #0x1
  428e3c:	subs	x8, x8, x9
  428e40:	str	x8, [sp, #168]
  428e44:	b	428e50 <_obstack_memory_used@@Base+0x1530>
  428e48:	mov	x8, xzr
  428e4c:	str	x8, [sp, #168]
  428e50:	ldr	x8, [sp, #168]
  428e54:	stur	x8, [x29, #-144]
  428e58:	ldur	x8, [x29, #-144]
  428e5c:	ldur	x9, [x29, #-64]
  428e60:	subs	x8, x9, x8
  428e64:	stur	x8, [x29, #-64]
  428e68:	ldur	x8, [x29, #-16]
  428e6c:	ldr	x8, [x8, #16]
  428e70:	mov	w10, #0x1                   	// #1
  428e74:	str	w10, [sp, #164]
  428e78:	cbz	x8, 428ecc <_obstack_memory_used@@Base+0x15ac>
  428e7c:	ldur	x8, [x29, #-88]
  428e80:	ldr	x8, [x8, #72]
  428e84:	mov	w9, #0x1                   	// #1
  428e88:	str	w9, [sp, #164]
  428e8c:	cbz	x8, 428ecc <_obstack_memory_used@@Base+0x15ac>
  428e90:	ldur	x8, [x29, #-88]
  428e94:	ldr	x8, [x8, #80]
  428e98:	mov	w9, #0x1                   	// #1
  428e9c:	str	w9, [sp, #164]
  428ea0:	cbz	x8, 428ecc <_obstack_memory_used@@Base+0x15ac>
  428ea4:	ldur	x8, [x29, #-88]
  428ea8:	ldr	x8, [x8, #88]
  428eac:	mov	w9, #0x1                   	// #1
  428eb0:	str	w9, [sp, #164]
  428eb4:	cbz	x8, 428ecc <_obstack_memory_used@@Base+0x15ac>
  428eb8:	ldur	x8, [x29, #-88]
  428ebc:	ldr	x8, [x8, #96]
  428ec0:	cmp	x8, #0x0
  428ec4:	cset	w9, eq  // eq = none
  428ec8:	str	w9, [sp, #164]
  428ecc:	ldr	w8, [sp, #164]
  428ed0:	and	w8, w8, #0x1
  428ed4:	mov	w0, w8
  428ed8:	sxtw	x9, w0
  428edc:	cbz	x9, 428eec <_obstack_memory_used@@Base+0x15cc>
  428ee0:	mov	w8, #0x1                   	// #1
  428ee4:	stur	w8, [x29, #-4]
  428ee8:	b	429c48 <_obstack_memory_used@@Base+0x2328>
  428eec:	ldur	x8, [x29, #-48]
  428ef0:	mov	x9, xzr
  428ef4:	cmp	x9, x8
  428ef8:	cset	w10, gt
  428efc:	tbnz	w10, #0, 428f14 <_obstack_memory_used@@Base+0x15f4>
  428f00:	ldur	x8, [x29, #-48]
  428f04:	ldur	x9, [x29, #-32]
  428f08:	cmp	x8, x9
  428f0c:	b.gt	428f14 <_obstack_memory_used@@Base+0x15f4>
  428f10:	b	428f14 <_obstack_memory_used@@Base+0x15f4>
  428f14:	ldur	x8, [x29, #-88]
  428f18:	ldr	x8, [x8, #72]
  428f1c:	ldr	x8, [x8, #16]
  428f20:	cbnz	x8, 428f80 <_obstack_memory_used@@Base+0x1660>
  428f24:	ldur	x8, [x29, #-88]
  428f28:	ldr	x8, [x8, #80]
  428f2c:	ldr	x8, [x8, #16]
  428f30:	cbnz	x8, 428f80 <_obstack_memory_used@@Base+0x1660>
  428f34:	ldur	x8, [x29, #-88]
  428f38:	ldr	x8, [x8, #88]
  428f3c:	ldr	x8, [x8, #16]
  428f40:	cbz	x8, 428f5c <_obstack_memory_used@@Base+0x163c>
  428f44:	ldur	x8, [x29, #-16]
  428f48:	ldrb	w9, [x8, #56]
  428f4c:	mov	w10, #0x7                   	// #7
  428f50:	lsr	w9, w9, w10
  428f54:	and	w9, w9, #0xff
  428f58:	cbnz	w9, 428f80 <_obstack_memory_used@@Base+0x1660>
  428f5c:	ldur	x8, [x29, #-40]
  428f60:	cbz	x8, 428f78 <_obstack_memory_used@@Base+0x1658>
  428f64:	ldur	x8, [x29, #-48]
  428f68:	cbz	x8, 428f78 <_obstack_memory_used@@Base+0x1658>
  428f6c:	mov	w8, #0x1                   	// #1
  428f70:	stur	w8, [x29, #-4]
  428f74:	b	429c48 <_obstack_memory_used@@Base+0x2328>
  428f78:	stur	xzr, [x29, #-48]
  428f7c:	stur	xzr, [x29, #-40]
  428f80:	ldur	x8, [x29, #-64]
  428f84:	mov	w9, #0x1                   	// #1
  428f88:	str	w9, [sp, #160]
  428f8c:	cbnz	x8, 428fa4 <_obstack_memory_used@@Base+0x1684>
  428f90:	ldur	x8, [x29, #-88]
  428f94:	ldr	x8, [x8, #152]
  428f98:	cmp	x8, #0x0
  428f9c:	cset	w9, ne  // ne = any
  428fa0:	str	w9, [sp, #160]
  428fa4:	ldr	w8, [sp, #160]
  428fa8:	mov	w9, #0x1                   	// #1
  428fac:	and	w8, w8, w9
  428fb0:	sturb	w8, [x29, #-109]
  428fb4:	ldur	x1, [x29, #-24]
  428fb8:	ldur	x2, [x29, #-32]
  428fbc:	ldur	x10, [x29, #-88]
  428fc0:	ldr	x10, [x10, #16]
  428fc4:	add	x3, x10, #0x1
  428fc8:	ldur	x10, [x29, #-16]
  428fcc:	ldr	x4, [x10, #40]
  428fd0:	ldur	x10, [x29, #-16]
  428fd4:	ldr	x10, [x10, #24]
  428fd8:	tst	x10, #0x400000
  428fdc:	cset	w8, ne  // ne = any
  428fe0:	ldur	x6, [x29, #-88]
  428fe4:	add	x0, sp, #0xe8
  428fe8:	and	w5, w8, #0x1
  428fec:	bl	435380 <_obstack_memory_used@@Base+0xda60>
  428ff0:	stur	w0, [x29, #-80]
  428ff4:	ldur	w8, [x29, #-80]
  428ff8:	cmp	w8, #0x0
  428ffc:	cset	w8, ne  // ne = any
  429000:	and	w8, w8, #0x1
  429004:	mov	w1, w8
  429008:	sxtw	x10, w1
  42900c:	cbz	x10, 429014 <_obstack_memory_used@@Base+0x16f4>
  429010:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429014:	ldur	x8, [x29, #-56]
  429018:	add	x9, sp, #0xe8
  42901c:	str	x8, [sp, #336]
  429020:	ldur	x8, [x29, #-56]
  429024:	str	x8, [sp, #328]
  429028:	ldur	x8, [x29, #-16]
  42902c:	ldrb	w10, [x8, #56]
  429030:	mov	w11, #0x7                   	// #7
  429034:	lsr	w10, w10, w11
  429038:	and	w10, w10, #0xff
  42903c:	strb	w10, [x9, #141]
  429040:	ldur	w1, [x29, #-76]
  429044:	ldur	x8, [x29, #-88]
  429048:	ldr	x8, [x8, #152]
  42904c:	mov	x12, #0x2                   	// #2
  429050:	mul	x2, x8, x12
  429054:	mov	x0, x9
  429058:	bl	43551c <_obstack_memory_used@@Base+0xdbfc>
  42905c:	stur	w0, [x29, #-80]
  429060:	ldur	w10, [x29, #-80]
  429064:	cmp	w10, #0x0
  429068:	cset	w10, ne  // ne = any
  42906c:	and	w10, w10, #0x1
  429070:	mov	w2, w10
  429074:	sxtw	x8, w2
  429078:	cbz	x8, 429080 <_obstack_memory_used@@Base+0x1760>
  42907c:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429080:	ldur	x8, [x29, #-64]
  429084:	cmp	x8, #0x1
  429088:	b.hi	4290a8 <_obstack_memory_used@@Base+0x1788>  // b.pmore
  42908c:	ldur	x8, [x29, #-88]
  429090:	ldrb	w9, [x8, #176]
  429094:	mov	w10, #0x1                   	// #1
  429098:	lsr	w9, w9, w10
  42909c:	and	w9, w9, w10
  4290a0:	and	w9, w9, #0xff
  4290a4:	cbz	w9, 429120 <_obstack_memory_used@@Base+0x1800>
  4290a8:	ldr	x8, [sp, #296]
  4290ac:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  4290b0:	cmp	x9, x8
  4290b4:	cset	w10, ls  // ls = plast
  4290b8:	and	w10, w10, #0x1
  4290bc:	mov	w0, w10
  4290c0:	sxtw	x8, w0
  4290c4:	cbz	x8, 4290d4 <_obstack_memory_used@@Base+0x17b4>
  4290c8:	mov	w8, #0xc                   	// #12
  4290cc:	stur	w8, [x29, #-80]
  4290d0:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  4290d4:	add	x8, sp, #0xe8
  4290d8:	ldr	x9, [sp, #296]
  4290dc:	add	x9, x9, #0x1
  4290e0:	mov	x10, #0x8                   	// #8
  4290e4:	mul	x0, x9, x10
  4290e8:	str	x8, [sp, #152]
  4290ec:	bl	402450 <malloc@plt>
  4290f0:	ldr	x8, [sp, #152]
  4290f4:	str	x0, [x8, #184]
  4290f8:	ldr	x9, [x8, #184]
  4290fc:	cmp	x9, #0x0
  429100:	cset	w11, eq  // eq = none
  429104:	and	w11, w11, #0x1
  429108:	mov	w0, w11
  42910c:	sxtw	x9, w0
  429110:	cbz	x9, 429120 <_obstack_memory_used@@Base+0x1800>
  429114:	mov	w8, #0xc                   	// #12
  429118:	stur	w8, [x29, #-80]
  42911c:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429120:	ldur	x8, [x29, #-40]
  429124:	stur	x8, [x29, #-128]
  429128:	ldur	w9, [x29, #-76]
  42912c:	mov	w10, #0x1                   	// #1
  429130:	mov	w11, #0x6                   	// #6
  429134:	mov	w12, #0x4                   	// #4
  429138:	tst	w9, #0x1
  42913c:	csel	w9, w12, w11, ne  // ne = any
  429140:	str	w9, [sp, #344]
  429144:	ldur	x8, [x29, #-48]
  429148:	ldur	x13, [x29, #-40]
  42914c:	mov	w9, #0xffffffff            	// #-1
  429150:	cmp	x8, x13
  429154:	csel	w9, w9, w10, lt  // lt = tstop
  429158:	stur	w9, [x29, #-108]
  42915c:	ldur	x8, [x29, #-48]
  429160:	ldur	x13, [x29, #-40]
  429164:	cmp	x8, x13
  429168:	b.ge	429178 <_obstack_memory_used@@Base+0x1858>  // b.tcont
  42916c:	ldur	x8, [x29, #-48]
  429170:	str	x8, [sp, #144]
  429174:	b	429180 <_obstack_memory_used@@Base+0x1860>
  429178:	ldur	x8, [x29, #-40]
  42917c:	str	x8, [sp, #144]
  429180:	ldr	x8, [sp, #144]
  429184:	stur	x8, [x29, #-96]
  429188:	ldur	x8, [x29, #-48]
  42918c:	ldur	x9, [x29, #-40]
  429190:	cmp	x8, x9
  429194:	b.ge	4291a4 <_obstack_memory_used@@Base+0x1884>  // b.tcont
  429198:	ldur	x8, [x29, #-40]
  42919c:	str	x8, [sp, #136]
  4291a0:	b	4291ac <_obstack_memory_used@@Base+0x188c>
  4291a4:	ldur	x8, [x29, #-48]
  4291a8:	str	x8, [sp, #136]
  4291ac:	ldr	x8, [sp, #136]
  4291b0:	stur	x8, [x29, #-104]
  4291b4:	ldur	x8, [x29, #-88]
  4291b8:	ldr	w9, [x8, #180]
  4291bc:	cmp	w9, #0x1
  4291c0:	cset	w9, eq  // eq = none
  4291c4:	and	w9, w9, #0x1
  4291c8:	sturb	w9, [x29, #-145]
  4291cc:	ldr	x8, [sp, #224]
  4291d0:	cbz	x8, 429260 <_obstack_memory_used@@Base+0x1940>
  4291d4:	ldurb	w8, [x29, #-145]
  4291d8:	mov	w9, #0x1                   	// #1
  4291dc:	str	w9, [sp, #132]
  4291e0:	tbnz	w8, #0, 429218 <_obstack_memory_used@@Base+0x18f8>
  4291e4:	ldur	x8, [x29, #-16]
  4291e8:	ldr	x8, [x8, #24]
  4291ec:	and	x8, x8, #0x400000
  4291f0:	mov	w9, #0x1                   	// #1
  4291f4:	str	w9, [sp, #128]
  4291f8:	cbnz	x8, 42920c <_obstack_memory_used@@Base+0x18ec>
  4291fc:	ldr	x8, [sp, #216]
  429200:	cmp	x8, #0x0
  429204:	cset	w9, ne  // ne = any
  429208:	str	w9, [sp, #128]
  42920c:	ldr	w8, [sp, #128]
  429210:	eor	w8, w8, #0x1
  429214:	str	w8, [sp, #132]
  429218:	ldr	w8, [sp, #132]
  42921c:	mov	w9, #0x4                   	// #4
  429220:	mov	w10, wzr
  429224:	tst	w8, #0x1
  429228:	csel	w8, w9, w10, ne  // ne = any
  42922c:	ldur	x11, [x29, #-40]
  429230:	ldur	x12, [x29, #-48]
  429234:	mov	w9, #0x2                   	// #2
  429238:	cmp	x11, x12
  42923c:	csel	w9, w9, w10, le
  429240:	orr	w8, w8, w9
  429244:	ldr	x11, [sp, #216]
  429248:	mov	w9, #0x1                   	// #1
  42924c:	cmp	x11, #0x0
  429250:	csel	w9, w9, w10, ne  // ne = any
  429254:	orr	w8, w8, w9
  429258:	str	w8, [sp, #124]
  42925c:	b	429268 <_obstack_memory_used@@Base+0x1948>
  429260:	mov	w8, #0x8                   	// #8
  429264:	str	w8, [sp, #124]
  429268:	ldr	w8, [sp, #124]
  42926c:	stur	w8, [x29, #-116]
  429270:	mov	w8, #0x1                   	// #1
  429274:	stur	w8, [x29, #-80]
  429278:	ldur	x9, [x29, #-128]
  42927c:	ldur	x10, [x29, #-96]
  429280:	cmp	x9, x10
  429284:	b.lt	429298 <_obstack_memory_used@@Base+0x1978>  // b.tstop
  429288:	ldur	x8, [x29, #-104]
  42928c:	ldur	x9, [x29, #-128]
  429290:	cmp	x8, x9
  429294:	b.ge	42929c <_obstack_memory_used@@Base+0x197c>  // b.tcont
  429298:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  42929c:	ldur	w8, [x29, #-116]
  4292a0:	subs	w8, w8, #0x4
  4292a4:	mov	w9, w8
  4292a8:	ubfx	x9, x9, #0, #32
  4292ac:	cmp	x9, #0x4
  4292b0:	str	x9, [sp, #112]
  4292b4:	b.hi	429520 <_obstack_memory_used@@Base+0x1c00>  // b.pmore
  4292b8:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4292bc:	add	x8, x8, #0x488
  4292c0:	ldr	x11, [sp, #112]
  4292c4:	ldrsw	x10, [x8, x11, lsl #2]
  4292c8:	add	x9, x8, x10
  4292cc:	br	x9
  4292d0:	b	429624 <_obstack_memory_used@@Base+0x1d04>
  4292d4:	ldur	x8, [x29, #-128]
  4292d8:	ldur	x9, [x29, #-104]
  4292dc:	cmp	x8, x9
  4292e0:	cset	w10, lt  // lt = tstop
  4292e4:	and	w10, w10, #0x1
  4292e8:	mov	w0, w10
  4292ec:	sxtw	x8, w0
  4292f0:	mov	w10, #0x0                   	// #0
  4292f4:	str	w10, [sp, #108]
  4292f8:	cbz	x8, 429334 <_obstack_memory_used@@Base+0x1a14>
  4292fc:	ldr	x8, [sp, #224]
  429300:	ldr	x9, [sp, #216]
  429304:	ldur	x10, [x29, #-24]
  429308:	ldur	x11, [x29, #-128]
  42930c:	ldrb	w12, [x10, x11]
  429310:	mov	w10, w12
  429314:	ldrb	w12, [x9, x10]
  429318:	mov	w9, w12
  42931c:	add	x8, x8, x9
  429320:	ldrb	w12, [x8]
  429324:	cmp	w12, #0x0
  429328:	cset	w12, ne  // ne = any
  42932c:	eor	w12, w12, #0x1
  429330:	str	w12, [sp, #108]
  429334:	ldr	w8, [sp, #108]
  429338:	tbnz	w8, #0, 429340 <_obstack_memory_used@@Base+0x1a20>
  42933c:	b	429350 <_obstack_memory_used@@Base+0x1a30>
  429340:	ldur	x8, [x29, #-128]
  429344:	add	x8, x8, #0x1
  429348:	stur	x8, [x29, #-128]
  42934c:	b	4292d4 <_obstack_memory_used@@Base+0x19b4>
  429350:	b	4293c4 <_obstack_memory_used@@Base+0x1aa4>
  429354:	ldur	x8, [x29, #-128]
  429358:	ldur	x9, [x29, #-104]
  42935c:	cmp	x8, x9
  429360:	cset	w10, lt  // lt = tstop
  429364:	and	w10, w10, #0x1
  429368:	mov	w0, w10
  42936c:	sxtw	x8, w0
  429370:	mov	w10, #0x0                   	// #0
  429374:	str	w10, [sp, #104]
  429378:	cbz	x8, 4293a8 <_obstack_memory_used@@Base+0x1a88>
  42937c:	ldr	x8, [sp, #224]
  429380:	ldur	x9, [x29, #-24]
  429384:	ldur	x10, [x29, #-128]
  429388:	ldrb	w11, [x9, x10]
  42938c:	mov	w9, w11
  429390:	add	x8, x8, x9
  429394:	ldrb	w11, [x8]
  429398:	cmp	w11, #0x0
  42939c:	cset	w11, ne  // ne = any
  4293a0:	eor	w11, w11, #0x1
  4293a4:	str	w11, [sp, #104]
  4293a8:	ldr	w8, [sp, #104]
  4293ac:	tbnz	w8, #0, 4293b4 <_obstack_memory_used@@Base+0x1a94>
  4293b0:	b	4293c4 <_obstack_memory_used@@Base+0x1aa4>
  4293b4:	ldur	x8, [x29, #-128]
  4293b8:	add	x8, x8, #0x1
  4293bc:	stur	x8, [x29, #-128]
  4293c0:	b	429354 <_obstack_memory_used@@Base+0x1a34>
  4293c4:	ldur	x8, [x29, #-128]
  4293c8:	ldur	x9, [x29, #-104]
  4293cc:	cmp	x8, x9
  4293d0:	cset	w10, eq  // eq = none
  4293d4:	and	w10, w10, #0x1
  4293d8:	mov	w0, w10
  4293dc:	sxtw	x8, w0
  4293e0:	cbz	x8, 429464 <_obstack_memory_used@@Base+0x1b44>
  4293e4:	ldur	x8, [x29, #-128]
  4293e8:	ldur	x9, [x29, #-32]
  4293ec:	cmp	x8, x9
  4293f0:	b.lt	429400 <_obstack_memory_used@@Base+0x1ae0>  // b.tstop
  4293f4:	mov	w8, wzr
  4293f8:	str	w8, [sp, #100]
  4293fc:	b	429410 <_obstack_memory_used@@Base+0x1af0>
  429400:	ldur	x8, [x29, #-24]
  429404:	ldur	x9, [x29, #-128]
  429408:	ldrb	w10, [x8, x9]
  42940c:	str	w10, [sp, #100]
  429410:	ldr	w8, [sp, #100]
  429414:	stur	w8, [x29, #-152]
  429418:	ldr	x9, [sp, #224]
  42941c:	ldr	x10, [sp, #216]
  429420:	str	x9, [sp, #88]
  429424:	cbz	x10, 42943c <_obstack_memory_used@@Base+0x1b1c>
  429428:	ldr	x8, [sp, #216]
  42942c:	ldursw	x9, [x29, #-152]
  429430:	ldrb	w10, [x8, x9]
  429434:	str	w10, [sp, #84]
  429438:	b	429444 <_obstack_memory_used@@Base+0x1b24>
  42943c:	ldur	w8, [x29, #-152]
  429440:	str	w8, [sp, #84]
  429444:	ldr	w8, [sp, #84]
  429448:	mov	w0, w8
  42944c:	sxtw	x9, w0
  429450:	ldr	x10, [sp, #88]
  429454:	add	x9, x10, x9
  429458:	ldrb	w8, [x9]
  42945c:	cbnz	w8, 429464 <_obstack_memory_used@@Base+0x1b44>
  429460:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429464:	b	429624 <_obstack_memory_used@@Base+0x1d04>
  429468:	ldur	x8, [x29, #-128]
  42946c:	ldur	x9, [x29, #-96]
  429470:	cmp	x8, x9
  429474:	b.lt	429508 <_obstack_memory_used@@Base+0x1be8>  // b.tstop
  429478:	ldur	x8, [x29, #-128]
  42947c:	ldur	x9, [x29, #-32]
  429480:	cmp	x8, x9
  429484:	b.lt	429494 <_obstack_memory_used@@Base+0x1b74>  // b.tstop
  429488:	mov	w8, wzr
  42948c:	str	w8, [sp, #80]
  429490:	b	4294a4 <_obstack_memory_used@@Base+0x1b84>
  429494:	ldur	x8, [x29, #-24]
  429498:	ldur	x9, [x29, #-128]
  42949c:	ldrb	w10, [x8, x9]
  4294a0:	str	w10, [sp, #80]
  4294a4:	ldr	w8, [sp, #80]
  4294a8:	stur	w8, [x29, #-152]
  4294ac:	ldr	x9, [sp, #224]
  4294b0:	ldr	x10, [sp, #216]
  4294b4:	str	x9, [sp, #72]
  4294b8:	cbz	x10, 4294d0 <_obstack_memory_used@@Base+0x1bb0>
  4294bc:	ldr	x8, [sp, #216]
  4294c0:	ldursw	x9, [x29, #-152]
  4294c4:	ldrb	w10, [x8, x9]
  4294c8:	str	w10, [sp, #68]
  4294cc:	b	4294d8 <_obstack_memory_used@@Base+0x1bb8>
  4294d0:	ldur	w8, [x29, #-152]
  4294d4:	str	w8, [sp, #68]
  4294d8:	ldr	w8, [sp, #68]
  4294dc:	mov	w0, w8
  4294e0:	sxtw	x9, w0
  4294e4:	ldr	x10, [sp, #72]
  4294e8:	add	x9, x10, x9
  4294ec:	ldrb	w8, [x9]
  4294f0:	cbz	w8, 4294f8 <_obstack_memory_used@@Base+0x1bd8>
  4294f4:	b	429508 <_obstack_memory_used@@Base+0x1be8>
  4294f8:	ldur	x8, [x29, #-128]
  4294fc:	subs	x8, x8, #0x1
  429500:	stur	x8, [x29, #-128]
  429504:	b	429468 <_obstack_memory_used@@Base+0x1b48>
  429508:	ldur	x8, [x29, #-128]
  42950c:	ldur	x9, [x29, #-96]
  429510:	cmp	x8, x9
  429514:	b.ge	42951c <_obstack_memory_used@@Base+0x1bfc>  // b.tcont
  429518:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  42951c:	b	429624 <_obstack_memory_used@@Base+0x1d04>
  429520:	ldur	x8, [x29, #-128]
  429524:	ldr	x9, [sp, #272]
  429528:	subs	x8, x8, x9
  42952c:	str	x8, [sp, #208]
  429530:	ldr	x8, [sp, #208]
  429534:	ldr	x9, [sp, #288]
  429538:	cmp	x8, x9
  42953c:	cset	w10, cs  // cs = hs, nlast
  429540:	and	w10, w10, #0x1
  429544:	mov	w0, w10
  429548:	sxtw	x8, w0
  42954c:	cbz	x8, 429594 <_obstack_memory_used@@Base+0x1c74>
  429550:	ldur	x1, [x29, #-128]
  429554:	ldur	w2, [x29, #-76]
  429558:	add	x0, sp, #0xe8
  42955c:	bl	435674 <_obstack_memory_used@@Base+0xdd54>
  429560:	stur	w0, [x29, #-80]
  429564:	ldur	w8, [x29, #-80]
  429568:	cmp	w8, #0x0
  42956c:	cset	w8, ne  // ne = any
  429570:	and	w8, w8, #0x1
  429574:	mov	w1, w8
  429578:	sxtw	x9, w1
  42957c:	cbz	x9, 429584 <_obstack_memory_used@@Base+0x1c64>
  429580:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429584:	ldur	x8, [x29, #-128]
  429588:	ldr	x9, [sp, #272]
  42958c:	subs	x8, x8, x9
  429590:	str	x8, [sp, #208]
  429594:	ldur	x8, [x29, #-128]
  429598:	ldur	x9, [x29, #-32]
  42959c:	cmp	x8, x9
  4295a0:	b.lt	4295b0 <_obstack_memory_used@@Base+0x1c90>  // b.tstop
  4295a4:	mov	w8, wzr
  4295a8:	str	w8, [sp, #64]
  4295ac:	b	4295c4 <_obstack_memory_used@@Base+0x1ca4>
  4295b0:	add	x8, sp, #0xe8
  4295b4:	ldr	x8, [x8, #8]
  4295b8:	ldr	x9, [sp, #208]
  4295bc:	ldrb	w10, [x8, x9]
  4295c0:	str	w10, [sp, #64]
  4295c4:	ldr	w8, [sp, #64]
  4295c8:	stur	w8, [x29, #-152]
  4295cc:	ldr	x9, [sp, #224]
  4295d0:	ldursw	x10, [x29, #-152]
  4295d4:	add	x9, x9, x10
  4295d8:	ldrb	w8, [x9]
  4295dc:	cbz	w8, 4295e4 <_obstack_memory_used@@Base+0x1cc4>
  4295e0:	b	429624 <_obstack_memory_used@@Base+0x1d04>
  4295e4:	ldursw	x8, [x29, #-108]
  4295e8:	ldur	x9, [x29, #-128]
  4295ec:	add	x8, x9, x8
  4295f0:	stur	x8, [x29, #-128]
  4295f4:	ldur	x8, [x29, #-128]
  4295f8:	ldur	x9, [x29, #-96]
  4295fc:	cmp	x8, x9
  429600:	b.lt	429614 <_obstack_memory_used@@Base+0x1cf4>  // b.tstop
  429604:	ldur	x8, [x29, #-128]
  429608:	ldur	x9, [x29, #-104]
  42960c:	cmp	x8, x9
  429610:	b.le	429620 <_obstack_memory_used@@Base+0x1d00>
  429614:	mov	w8, #0x1                   	// #1
  429618:	stur	w8, [x29, #-80]
  42961c:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429620:	b	429520 <_obstack_memory_used@@Base+0x1c00>
  429624:	ldur	x1, [x29, #-128]
  429628:	ldur	w2, [x29, #-76]
  42962c:	add	x0, sp, #0xe8
  429630:	bl	435674 <_obstack_memory_used@@Base+0xdd54>
  429634:	stur	w0, [x29, #-80]
  429638:	ldur	w8, [x29, #-80]
  42963c:	cmp	w8, #0x0
  429640:	cset	w8, ne  // ne = any
  429644:	and	w8, w8, #0x1
  429648:	mov	w1, w8
  42964c:	sxtw	x9, w1
  429650:	cbz	x9, 429658 <_obstack_memory_used@@Base+0x1d38>
  429654:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429658:	ldurb	w8, [x29, #-145]
  42965c:	tbnz	w8, #0, 429684 <_obstack_memory_used@@Base+0x1d64>
  429660:	ldr	x8, [sp, #280]
  429664:	cbz	x8, 429684 <_obstack_memory_used@@Base+0x1d64>
  429668:	add	x8, sp, #0xe8
  42966c:	ldr	x8, [x8, #16]
  429670:	ldr	w9, [x8]
  429674:	mov	w10, #0xffffffff            	// #-1
  429678:	cmp	w9, w10
  42967c:	b.ne	429684 <_obstack_memory_used@@Base+0x1d64>  // b.any
  429680:	b	42981c <_obstack_memory_used@@Base+0x1efc>
  429684:	str	wzr, [sp, #456]
  429688:	str	xzr, [sp, #432]
  42968c:	str	xzr, [sp, #424]
  429690:	ldurb	w8, [x29, #-109]
  429694:	ldur	x9, [x29, #-40]
  429698:	ldur	x10, [x29, #-48]
  42969c:	cmp	x9, x10
  4296a0:	str	w8, [sp, #60]
  4296a4:	b.gt	4296b4 <_obstack_memory_used@@Base+0x1d94>
  4296a8:	sub	x8, x29, #0x80
  4296ac:	str	x8, [sp, #48]
  4296b0:	b	4296bc <_obstack_memory_used@@Base+0x1d9c>
  4296b4:	mov	x8, xzr
  4296b8:	str	x8, [sp, #48]
  4296bc:	ldr	x8, [sp, #48]
  4296c0:	add	x0, sp, #0xe8
  4296c4:	ldr	w9, [sp, #60]
  4296c8:	and	w1, w9, #0x1
  4296cc:	mov	x2, x8
  4296d0:	bl	436350 <_obstack_memory_used@@Base+0xea30>
  4296d4:	stur	x0, [x29, #-136]
  4296d8:	ldur	x8, [x29, #-136]
  4296dc:	mov	x10, #0xffffffffffffffff    	// #-1
  4296e0:	cmp	x8, x10
  4296e4:	b.eq	429814 <_obstack_memory_used@@Base+0x1ef4>  // b.none
  4296e8:	ldur	x8, [x29, #-136]
  4296ec:	mov	x9, #0xfffffffffffffffe    	// #-2
  4296f0:	cmp	x8, x9
  4296f4:	cset	w10, eq  // eq = none
  4296f8:	and	w10, w10, #0x1
  4296fc:	mov	w0, w10
  429700:	sxtw	x8, w0
  429704:	cbz	x8, 429714 <_obstack_memory_used@@Base+0x1df4>
  429708:	mov	w8, #0xc                   	// #12
  42970c:	stur	w8, [x29, #-80]
  429710:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429714:	ldur	x8, [x29, #-136]
  429718:	str	x8, [sp, #400]
  42971c:	ldur	x8, [x29, #-16]
  429720:	ldrb	w9, [x8, #56]
  429724:	mov	w10, #0x4                   	// #4
  429728:	lsr	w9, w9, w10
  42972c:	and	w9, w9, #0x1
  429730:	and	w9, w9, #0xff
  429734:	cbnz	w9, 429744 <_obstack_memory_used@@Base+0x1e24>
  429738:	ldur	x8, [x29, #-64]
  42973c:	cmp	x8, #0x1
  429740:	b.hi	429750 <_obstack_memory_used@@Base+0x1e30>  // b.pmore
  429744:	ldur	x8, [x29, #-88]
  429748:	ldr	x8, [x8, #152]
  42974c:	cbz	x8, 429784 <_obstack_memory_used@@Base+0x1e64>
  429750:	add	x8, sp, #0xe8
  429754:	ldr	x9, [x8, #184]
  429758:	ldur	x10, [x29, #-136]
  42975c:	mov	x11, #0x8                   	// #8
  429760:	mul	x10, x11, x10
  429764:	add	x9, x9, x10
  429768:	ldr	x9, [x9]
  42976c:	str	x9, [sp, #200]
  429770:	ldr	x1, [sp, #200]
  429774:	ldur	x2, [x29, #-136]
  429778:	mov	x0, x8
  42977c:	bl	4368e0 <_obstack_memory_used@@Base+0xefc0>
  429780:	str	x0, [sp, #408]
  429784:	ldur	x8, [x29, #-16]
  429788:	ldrb	w9, [x8, #56]
  42978c:	mov	w10, #0x4                   	// #4
  429790:	lsr	w9, w9, w10
  429794:	and	w9, w9, #0x1
  429798:	and	w9, w9, #0xff
  42979c:	cbnz	w9, 4297c0 <_obstack_memory_used@@Base+0x1ea0>
  4297a0:	ldur	x8, [x29, #-64]
  4297a4:	cmp	x8, #0x1
  4297a8:	b.ls	4297c0 <_obstack_memory_used@@Base+0x1ea0>  // b.plast
  4297ac:	ldur	x8, [x29, #-88]
  4297b0:	ldrb	w9, [x8, #176]
  4297b4:	and	w9, w9, #0x1
  4297b8:	and	w9, w9, #0xff
  4297bc:	cbnz	w9, 4297cc <_obstack_memory_used@@Base+0x1eac>
  4297c0:	ldur	x8, [x29, #-88]
  4297c4:	ldr	x8, [x8, #152]
  4297c8:	cbz	x8, 429810 <_obstack_memory_used@@Base+0x1ef0>
  4297cc:	add	x0, sp, #0xe8
  4297d0:	bl	4369ac <_obstack_memory_used@@Base+0xf08c>
  4297d4:	stur	w0, [x29, #-80]
  4297d8:	ldur	w8, [x29, #-80]
  4297dc:	cbnz	w8, 4297e4 <_obstack_memory_used@@Base+0x1ec4>
  4297e0:	b	429830 <_obstack_memory_used@@Base+0x1f10>
  4297e4:	ldur	w8, [x29, #-80]
  4297e8:	cmp	w8, #0x1
  4297ec:	cset	w8, ne  // ne = any
  4297f0:	and	w8, w8, #0x1
  4297f4:	mov	w0, w8
  4297f8:	sxtw	x9, w0
  4297fc:	cbz	x9, 429804 <_obstack_memory_used@@Base+0x1ee4>
  429800:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429804:	mov	x8, #0xffffffffffffffff    	// #-1
  429808:	stur	x8, [x29, #-136]
  42980c:	b	429814 <_obstack_memory_used@@Base+0x1ef4>
  429810:	b	429830 <_obstack_memory_used@@Base+0x1f10>
  429814:	add	x0, sp, #0xe8
  429818:	bl	436d38 <_obstack_memory_used@@Base+0xf418>
  42981c:	ldursw	x8, [x29, #-108]
  429820:	ldur	x9, [x29, #-128]
  429824:	add	x8, x9, x8
  429828:	stur	x8, [x29, #-128]
  42982c:	b	429270 <_obstack_memory_used@@Base+0x1950>
  429830:	ldur	x8, [x29, #-136]
  429834:	mov	x9, #0xffffffffffffffff    	// #-1
  429838:	cmp	x8, x9
  42983c:	b.eq	429844 <_obstack_memory_used@@Base+0x1f24>  // b.none
  429840:	b	429844 <_obstack_memory_used@@Base+0x1f24>
  429844:	ldur	w8, [x29, #-80]
  429848:	cbnz	w8, 429850 <_obstack_memory_used@@Base+0x1f30>
  42984c:	b	429850 <_obstack_memory_used@@Base+0x1f30>
  429850:	ldur	x8, [x29, #-64]
  429854:	cmp	x8, #0x0
  429858:	cset	w9, ls  // ls = plast
  42985c:	tbnz	w9, #0, 429c18 <_obstack_memory_used@@Base+0x22f8>
  429860:	mov	x8, #0x1                   	// #1
  429864:	str	x8, [sp, #192]
  429868:	ldr	x8, [sp, #192]
  42986c:	ldur	x9, [x29, #-64]
  429870:	cmp	x8, x9
  429874:	b.cs	4298b4 <_obstack_memory_used@@Base+0x1f94>  // b.hs, b.nlast
  429878:	ldur	x8, [x29, #-72]
  42987c:	ldr	x9, [sp, #192]
  429880:	mov	x10, #0x10                  	// #16
  429884:	mul	x9, x10, x9
  429888:	add	x8, x8, x9
  42988c:	mov	x9, #0xffffffffffffffff    	// #-1
  429890:	str	x9, [x8, #8]
  429894:	ldur	x8, [x29, #-72]
  429898:	ldr	x11, [sp, #192]
  42989c:	mul	x10, x10, x11
  4298a0:	str	x9, [x8, x10]
  4298a4:	ldr	x8, [sp, #192]
  4298a8:	add	x8, x8, #0x1
  4298ac:	str	x8, [sp, #192]
  4298b0:	b	429868 <_obstack_memory_used@@Base+0x1f48>
  4298b4:	ldur	x8, [x29, #-72]
  4298b8:	str	xzr, [x8]
  4298bc:	ldr	x8, [sp, #400]
  4298c0:	ldur	x9, [x29, #-72]
  4298c4:	str	x8, [x9, #8]
  4298c8:	ldur	x8, [x29, #-16]
  4298cc:	ldrb	w10, [x8, #56]
  4298d0:	mov	w11, #0x4                   	// #4
  4298d4:	lsr	w10, w10, w11
  4298d8:	and	w10, w10, #0x1
  4298dc:	and	w10, w10, #0xff
  4298e0:	cbnz	w10, 429978 <_obstack_memory_used@@Base+0x2058>
  4298e4:	ldur	x8, [x29, #-64]
  4298e8:	cmp	x8, #0x1
  4298ec:	b.ls	429978 <_obstack_memory_used@@Base+0x2058>  // b.plast
  4298f0:	ldur	x0, [x29, #-16]
  4298f4:	ldur	x2, [x29, #-64]
  4298f8:	ldur	x3, [x29, #-72]
  4298fc:	ldur	x8, [x29, #-88]
  429900:	ldrb	w9, [x8, #176]
  429904:	and	w9, w9, #0x1
  429908:	and	w9, w9, #0xff
  42990c:	mov	w10, #0x0                   	// #0
  429910:	str	x0, [sp, #40]
  429914:	str	x2, [sp, #32]
  429918:	str	x3, [sp, #24]
  42991c:	str	w10, [sp, #20]
  429920:	cbz	w9, 429938 <_obstack_memory_used@@Base+0x2018>
  429924:	ldur	x8, [x29, #-88]
  429928:	ldr	x8, [x8, #152]
  42992c:	cmp	x8, #0x0
  429930:	cset	w9, gt
  429934:	str	w9, [sp, #20]
  429938:	ldr	w8, [sp, #20]
  42993c:	ldr	x0, [sp, #40]
  429940:	add	x1, sp, #0xe8
  429944:	ldr	x2, [sp, #32]
  429948:	ldr	x3, [sp, #24]
  42994c:	and	w4, w8, #0x1
  429950:	bl	436e44 <_obstack_memory_used@@Base+0xf524>
  429954:	stur	w0, [x29, #-80]
  429958:	ldur	w8, [x29, #-80]
  42995c:	cmp	w8, #0x0
  429960:	cset	w8, ne  // ne = any
  429964:	and	w8, w8, #0x1
  429968:	mov	w1, w8
  42996c:	sxtw	x9, w1
  429970:	cbz	x9, 429978 <_obstack_memory_used@@Base+0x2058>
  429974:	b	429c18 <_obstack_memory_used@@Base+0x22f8>
  429978:	str	xzr, [sp, #192]
  42997c:	ldr	x8, [sp, #192]
  429980:	ldur	x9, [x29, #-64]
  429984:	cmp	x8, x9
  429988:	b.cs	429af4 <_obstack_memory_used@@Base+0x21d4>  // b.hs, b.nlast
  42998c:	ldur	x8, [x29, #-72]
  429990:	ldr	x9, [sp, #192]
  429994:	mov	x10, #0x10                  	// #16
  429998:	mul	x9, x10, x9
  42999c:	ldr	x8, [x8, x9]
  4299a0:	mov	x9, #0xffffffffffffffff    	// #-1
  4299a4:	cmp	x8, x9
  4299a8:	b.eq	429ae4 <_obstack_memory_used@@Base+0x21c4>  // b.none
  4299ac:	ldrb	w8, [sp, #372]
  4299b0:	cmp	w8, #0x0
  4299b4:	cset	w8, ne  // ne = any
  4299b8:	and	w8, w8, #0x1
  4299bc:	mov	w0, w8
  4299c0:	sxtw	x9, w0
  4299c4:	cbz	x9, 429aa0 <_obstack_memory_used@@Base+0x2180>
  4299c8:	ldur	x8, [x29, #-72]
  4299cc:	ldr	x9, [sp, #192]
  4299d0:	mov	x10, #0x10                  	// #16
  4299d4:	mul	x9, x10, x9
  4299d8:	ldr	x8, [x8, x9]
  4299dc:	ldr	x9, [sp, #280]
  4299e0:	cmp	x8, x9
  4299e4:	b.ne	4299f4 <_obstack_memory_used@@Base+0x20d4>  // b.any
  4299e8:	ldr	x8, [sp, #288]
  4299ec:	str	x8, [sp, #8]
  4299f0:	b	429a18 <_obstack_memory_used@@Base+0x20f8>
  4299f4:	add	x8, sp, #0xe8
  4299f8:	ldr	x8, [x8, #24]
  4299fc:	ldur	x9, [x29, #-72]
  429a00:	ldr	x10, [sp, #192]
  429a04:	mov	x11, #0x10                  	// #16
  429a08:	mul	x10, x11, x10
  429a0c:	ldr	x9, [x9, x10]
  429a10:	ldr	x8, [x8, x9, lsl #3]
  429a14:	str	x8, [sp, #8]
  429a18:	ldr	x8, [sp, #8]
  429a1c:	ldur	x9, [x29, #-72]
  429a20:	ldr	x10, [sp, #192]
  429a24:	mov	x11, #0x10                  	// #16
  429a28:	mul	x10, x11, x10
  429a2c:	str	x8, [x9, x10]
  429a30:	ldur	x8, [x29, #-72]
  429a34:	ldr	x9, [sp, #192]
  429a38:	mul	x9, x11, x9
  429a3c:	add	x8, x8, x9
  429a40:	ldr	x8, [x8, #8]
  429a44:	ldr	x9, [sp, #280]
  429a48:	cmp	x8, x9
  429a4c:	b.ne	429a5c <_obstack_memory_used@@Base+0x213c>  // b.any
  429a50:	ldr	x8, [sp, #288]
  429a54:	str	x8, [sp]
  429a58:	b	429a84 <_obstack_memory_used@@Base+0x2164>
  429a5c:	add	x8, sp, #0xe8
  429a60:	ldr	x8, [x8, #24]
  429a64:	ldur	x9, [x29, #-72]
  429a68:	ldr	x10, [sp, #192]
  429a6c:	mov	x11, #0x10                  	// #16
  429a70:	mul	x10, x11, x10
  429a74:	add	x9, x9, x10
  429a78:	ldr	x9, [x9, #8]
  429a7c:	ldr	x8, [x8, x9, lsl #3]
  429a80:	str	x8, [sp]
  429a84:	ldr	x8, [sp]
  429a88:	ldur	x9, [x29, #-72]
  429a8c:	ldr	x10, [sp, #192]
  429a90:	mov	x11, #0x10                  	// #16
  429a94:	mul	x10, x11, x10
  429a98:	add	x9, x9, x10
  429a9c:	str	x8, [x9, #8]
  429aa0:	ldur	x8, [x29, #-128]
  429aa4:	ldur	x9, [x29, #-72]
  429aa8:	ldr	x10, [sp, #192]
  429aac:	mov	x11, #0x10                  	// #16
  429ab0:	mul	x10, x11, x10
  429ab4:	add	x9, x9, x10
  429ab8:	ldr	x10, [x9]
  429abc:	add	x8, x10, x8
  429ac0:	str	x8, [x9]
  429ac4:	ldur	x8, [x29, #-128]
  429ac8:	ldur	x9, [x29, #-72]
  429acc:	ldr	x10, [sp, #192]
  429ad0:	mul	x10, x11, x10
  429ad4:	add	x9, x9, x10
  429ad8:	ldr	x10, [x9, #8]
  429adc:	add	x8, x10, x8
  429ae0:	str	x8, [x9, #8]
  429ae4:	ldr	x8, [sp, #192]
  429ae8:	add	x8, x8, #0x1
  429aec:	str	x8, [sp, #192]
  429af0:	b	42997c <_obstack_memory_used@@Base+0x205c>
  429af4:	str	xzr, [sp, #192]
  429af8:	ldr	x8, [sp, #192]
  429afc:	ldur	x9, [x29, #-144]
  429b00:	cmp	x8, x9
  429b04:	b.ge	429b54 <_obstack_memory_used@@Base+0x2234>  // b.tcont
  429b08:	ldur	x8, [x29, #-72]
  429b0c:	ldur	x9, [x29, #-64]
  429b10:	ldr	x10, [sp, #192]
  429b14:	add	x9, x9, x10
  429b18:	mov	x10, #0x10                  	// #16
  429b1c:	mul	x9, x10, x9
  429b20:	mov	x11, #0xffffffffffffffff    	// #-1
  429b24:	str	x11, [x8, x9]
  429b28:	ldur	x8, [x29, #-72]
  429b2c:	ldur	x9, [x29, #-64]
  429b30:	ldr	x12, [sp, #192]
  429b34:	add	x9, x9, x12
  429b38:	mul	x9, x10, x9
  429b3c:	add	x8, x8, x9
  429b40:	str	x11, [x8, #8]
  429b44:	ldr	x8, [sp, #192]
  429b48:	add	x8, x8, #0x1
  429b4c:	str	x8, [sp, #192]
  429b50:	b	429af8 <_obstack_memory_used@@Base+0x21d8>
  429b54:	ldur	x8, [x29, #-88]
  429b58:	ldr	x8, [x8, #224]
  429b5c:	cbz	x8, 429c18 <_obstack_memory_used@@Base+0x22f8>
  429b60:	str	xzr, [sp, #192]
  429b64:	ldr	x8, [sp, #192]
  429b68:	add	x8, x8, #0x1
  429b6c:	ldur	x9, [x29, #-64]
  429b70:	cmp	x8, x9
  429b74:	b.cs	429c18 <_obstack_memory_used@@Base+0x22f8>  // b.hs, b.nlast
  429b78:	ldur	x8, [x29, #-88]
  429b7c:	ldr	x8, [x8, #224]
  429b80:	ldr	x9, [sp, #192]
  429b84:	ldr	x8, [x8, x9, lsl #3]
  429b88:	ldr	x9, [sp, #192]
  429b8c:	cmp	x8, x9
  429b90:	b.eq	429c08 <_obstack_memory_used@@Base+0x22e8>  // b.none
  429b94:	ldur	x8, [x29, #-72]
  429b98:	ldur	x9, [x29, #-88]
  429b9c:	ldr	x9, [x9, #224]
  429ba0:	ldr	x10, [sp, #192]
  429ba4:	ldr	x9, [x9, x10, lsl #3]
  429ba8:	add	x9, x9, #0x1
  429bac:	mov	x10, #0x10                  	// #16
  429bb0:	mul	x9, x10, x9
  429bb4:	ldr	x8, [x8, x9]
  429bb8:	ldur	x9, [x29, #-72]
  429bbc:	ldr	x11, [sp, #192]
  429bc0:	add	x11, x11, #0x1
  429bc4:	mul	x11, x10, x11
  429bc8:	str	x8, [x9, x11]
  429bcc:	ldur	x8, [x29, #-72]
  429bd0:	ldur	x9, [x29, #-88]
  429bd4:	ldr	x9, [x9, #224]
  429bd8:	ldr	x11, [sp, #192]
  429bdc:	ldr	x9, [x9, x11, lsl #3]
  429be0:	add	x9, x9, #0x1
  429be4:	mul	x9, x10, x9
  429be8:	add	x8, x8, x9
  429bec:	ldr	x8, [x8, #8]
  429bf0:	ldur	x9, [x29, #-72]
  429bf4:	ldr	x11, [sp, #192]
  429bf8:	add	x11, x11, #0x1
  429bfc:	mul	x10, x10, x11
  429c00:	add	x9, x9, x10
  429c04:	str	x8, [x9, #8]
  429c08:	ldr	x8, [sp, #192]
  429c0c:	add	x8, x8, #0x1
  429c10:	str	x8, [sp, #192]
  429c14:	b	429b64 <_obstack_memory_used@@Base+0x2244>
  429c18:	add	x8, sp, #0xe8
  429c1c:	ldr	x0, [x8, #184]
  429c20:	bl	4026c0 <free@plt>
  429c24:	ldur	x8, [x29, #-88]
  429c28:	ldr	x8, [x8, #152]
  429c2c:	cbz	x8, 429c38 <_obstack_memory_used@@Base+0x2318>
  429c30:	add	x0, sp, #0xe8
  429c34:	bl	437240 <_obstack_memory_used@@Base+0xf920>
  429c38:	add	x0, sp, #0xe8
  429c3c:	bl	42aee0 <_obstack_memory_used@@Base+0x35c0>
  429c40:	ldur	w8, [x29, #-80]
  429c44:	stur	w8, [x29, #-4]
  429c48:	ldur	w0, [x29, #-4]
  429c4c:	add	sp, sp, #0x280
  429c50:	ldr	x28, [sp, #16]
  429c54:	ldp	x29, x30, [sp], #32
  429c58:	ret
  429c5c:	sub	sp, sp, #0x40
  429c60:	stp	x29, x30, [sp, #48]
  429c64:	add	x29, sp, #0x30
  429c68:	mov	x8, xzr
  429c6c:	stur	x0, [x29, #-8]
  429c70:	stur	x1, [x29, #-16]
  429c74:	str	x2, [sp, #24]
  429c78:	str	x3, [sp, #16]
  429c7c:	str	x4, [sp, #8]
  429c80:	ldur	x0, [x29, #-8]
  429c84:	ldur	x1, [x29, #-16]
  429c88:	ldr	x2, [sp, #24]
  429c8c:	ldr	x3, [sp, #16]
  429c90:	ldr	x5, [sp, #24]
  429c94:	ldr	x6, [sp, #8]
  429c98:	mov	x4, x8
  429c9c:	mov	w9, #0x1                   	// #1
  429ca0:	and	w7, w9, #0x1
  429ca4:	bl	429cb4 <_obstack_memory_used@@Base+0x2394>
  429ca8:	ldp	x29, x30, [sp, #48]
  429cac:	add	sp, sp, #0x40
  429cb0:	ret
  429cb4:	sub	sp, sp, #0xb0
  429cb8:	stp	x29, x30, [sp, #160]
  429cbc:	add	x29, sp, #0xa0
  429cc0:	mov	w8, #0x1                   	// #1
  429cc4:	stur	x0, [x29, #-16]
  429cc8:	stur	x1, [x29, #-24]
  429ccc:	stur	x2, [x29, #-32]
  429cd0:	stur	x3, [x29, #-40]
  429cd4:	stur	x4, [x29, #-48]
  429cd8:	stur	x5, [x29, #-56]
  429cdc:	stur	x6, [x29, #-64]
  429ce0:	and	w8, w7, w8
  429ce4:	sturb	w8, [x29, #-65]
  429ce8:	str	wzr, [sp, #60]
  429cec:	ldur	x9, [x29, #-16]
  429cf0:	ldr	x9, [x9]
  429cf4:	str	x9, [sp, #48]
  429cf8:	ldur	x9, [x29, #-40]
  429cfc:	ldur	x10, [x29, #-48]
  429d00:	add	x9, x9, x10
  429d04:	str	x9, [sp, #40]
  429d08:	ldur	x9, [x29, #-40]
  429d0c:	cmp	x9, #0x0
  429d10:	cset	w8, lt  // lt = tstop
  429d14:	mov	w11, #0x1                   	// #1
  429d18:	str	w11, [sp, #36]
  429d1c:	tbnz	w8, #0, 429d34 <_obstack_memory_used@@Base+0x2414>
  429d20:	ldur	x8, [x29, #-40]
  429d24:	ldur	x9, [x29, #-32]
  429d28:	cmp	x8, x9
  429d2c:	cset	w10, gt
  429d30:	str	w10, [sp, #36]
  429d34:	ldr	w8, [sp, #36]
  429d38:	and	w8, w8, #0x1
  429d3c:	mov	w0, w8
  429d40:	sxtw	x9, w0
  429d44:	cbz	x9, 429d54 <_obstack_memory_used@@Base+0x2434>
  429d48:	mov	x8, #0xffffffffffffffff    	// #-1
  429d4c:	stur	x8, [x29, #-8]
  429d50:	b	42a150 <_obstack_memory_used@@Base+0x2830>
  429d54:	ldur	x8, [x29, #-32]
  429d58:	ldr	x9, [sp, #40]
  429d5c:	mov	w10, #0x1                   	// #1
  429d60:	cmp	x8, x9
  429d64:	str	w10, [sp, #32]
  429d68:	b.lt	429da4 <_obstack_memory_used@@Base+0x2484>  // b.tstop
  429d6c:	ldur	x8, [x29, #-48]
  429d70:	mov	x9, xzr
  429d74:	cmp	x9, x8
  429d78:	cset	w10, gt
  429d7c:	mov	w11, #0x0                   	// #0
  429d80:	str	w11, [sp, #28]
  429d84:	tbnz	w10, #0, 429d9c <_obstack_memory_used@@Base+0x247c>
  429d88:	ldr	x8, [sp, #40]
  429d8c:	ldur	x9, [x29, #-40]
  429d90:	cmp	x8, x9
  429d94:	cset	w10, lt  // lt = tstop
  429d98:	str	w10, [sp, #28]
  429d9c:	ldr	w8, [sp, #28]
  429da0:	str	w8, [sp, #32]
  429da4:	ldr	w8, [sp, #32]
  429da8:	and	w8, w8, #0x1
  429dac:	mov	w0, w8
  429db0:	sxtw	x9, w0
  429db4:	cbz	x9, 429dc4 <_obstack_memory_used@@Base+0x24a4>
  429db8:	ldur	x8, [x29, #-32]
  429dbc:	str	x8, [sp, #40]
  429dc0:	b	429e28 <_obstack_memory_used@@Base+0x2508>
  429dc4:	ldr	x8, [sp, #40]
  429dc8:	cmp	x8, #0x0
  429dcc:	cset	w9, lt  // lt = tstop
  429dd0:	mov	w10, #0x1                   	// #1
  429dd4:	str	w10, [sp, #24]
  429dd8:	tbnz	w9, #0, 429e10 <_obstack_memory_used@@Base+0x24f0>
  429ddc:	ldur	x8, [x29, #-48]
  429de0:	cmp	x8, #0x0
  429de4:	cset	w9, ge  // ge = tcont
  429de8:	mov	w10, #0x0                   	// #0
  429dec:	str	w10, [sp, #20]
  429df0:	tbnz	w9, #0, 429e08 <_obstack_memory_used@@Base+0x24e8>
  429df4:	ldur	x8, [x29, #-40]
  429df8:	ldr	x9, [sp, #40]
  429dfc:	cmp	x8, x9
  429e00:	cset	w10, le
  429e04:	str	w10, [sp, #20]
  429e08:	ldr	w8, [sp, #20]
  429e0c:	str	w8, [sp, #24]
  429e10:	ldr	w8, [sp, #24]
  429e14:	and	w8, w8, #0x1
  429e18:	mov	w0, w8
  429e1c:	sxtw	x9, w0
  429e20:	cbz	x9, 429e28 <_obstack_memory_used@@Base+0x2508>
  429e24:	str	xzr, [sp, #40]
  429e28:	ldur	x8, [x29, #-16]
  429e2c:	ldrb	w9, [x8, #56]
  429e30:	mov	w10, #0x5                   	// #5
  429e34:	lsr	w9, w9, w10
  429e38:	mov	w10, #0x1                   	// #1
  429e3c:	and	w9, w9, #0x1
  429e40:	mov	w11, wzr
  429e44:	mov	w12, #0x1                   	// #1
  429e48:	tst	w9, #0xff
  429e4c:	csel	w9, w12, w11, ne  // ne = any
  429e50:	ldr	w12, [sp, #60]
  429e54:	orr	w9, w12, w9
  429e58:	str	w9, [sp, #60]
  429e5c:	ldur	x8, [x29, #-16]
  429e60:	ldrb	w9, [x8, #56]
  429e64:	mov	w12, #0x6                   	// #6
  429e68:	lsr	w9, w9, w12
  429e6c:	and	w9, w9, w10
  429e70:	mov	w10, #0x2                   	// #2
  429e74:	tst	w9, #0xff
  429e78:	csel	w9, w10, w11, ne  // ne = any
  429e7c:	ldr	w10, [sp, #60]
  429e80:	orr	w9, w10, w9
  429e84:	str	w9, [sp, #60]
  429e88:	ldur	x8, [x29, #-40]
  429e8c:	ldr	x13, [sp, #40]
  429e90:	cmp	x8, x13
  429e94:	b.ge	429ec8 <_obstack_memory_used@@Base+0x25a8>  // b.tcont
  429e98:	ldur	x8, [x29, #-16]
  429e9c:	ldr	x8, [x8, #32]
  429ea0:	cbz	x8, 429ec8 <_obstack_memory_used@@Base+0x25a8>
  429ea4:	ldur	x8, [x29, #-16]
  429ea8:	ldrb	w9, [x8, #56]
  429eac:	mov	w10, #0x3                   	// #3
  429eb0:	lsr	w9, w9, w10
  429eb4:	and	w9, w9, #0x1
  429eb8:	and	w9, w9, #0xff
  429ebc:	cbnz	w9, 429ec8 <_obstack_memory_used@@Base+0x25a8>
  429ec0:	ldur	x0, [x29, #-16]
  429ec4:	bl	427e04 <_obstack_memory_used@@Base+0x4e4>
  429ec8:	ldur	x8, [x29, #-16]
  429ecc:	ldrb	w9, [x8, #56]
  429ed0:	mov	w10, #0x4                   	// #4
  429ed4:	lsr	w9, w9, w10
  429ed8:	and	w9, w9, #0x1
  429edc:	and	w9, w9, #0xff
  429ee0:	mov	w8, w9
  429ee4:	ubfx	x8, x8, #0, #32
  429ee8:	cbz	x8, 429ef4 <_obstack_memory_used@@Base+0x25d4>
  429eec:	mov	x8, xzr
  429ef0:	stur	x8, [x29, #-64]
  429ef4:	ldur	x8, [x29, #-64]
  429ef8:	cbnz	x8, 429f08 <_obstack_memory_used@@Base+0x25e8>
  429efc:	mov	x8, #0x1                   	// #1
  429f00:	str	x8, [sp, #72]
  429f04:	b	429fac <_obstack_memory_used@@Base+0x268c>
  429f08:	ldur	x8, [x29, #-16]
  429f0c:	ldrb	w9, [x8, #56]
  429f10:	mov	w10, #0x1                   	// #1
  429f14:	lsr	w9, w9, w10
  429f18:	and	w9, w9, #0x3
  429f1c:	and	w9, w9, #0xff
  429f20:	mov	w10, #0x0                   	// #0
  429f24:	cmp	w9, #0x2
  429f28:	str	w10, [sp, #16]
  429f2c:	b.ne	429f4c <_obstack_memory_used@@Base+0x262c>  // b.any
  429f30:	ldur	x8, [x29, #-64]
  429f34:	ldr	x8, [x8]
  429f38:	ldur	x9, [x29, #-16]
  429f3c:	ldr	x9, [x9, #48]
  429f40:	cmp	x8, x9
  429f44:	cset	w10, ls  // ls = plast
  429f48:	str	w10, [sp, #16]
  429f4c:	ldr	w8, [sp, #16]
  429f50:	and	w8, w8, #0x1
  429f54:	mov	w0, w8
  429f58:	sxtw	x9, w0
  429f5c:	cbz	x9, 429f9c <_obstack_memory_used@@Base+0x267c>
  429f60:	ldur	x8, [x29, #-64]
  429f64:	ldr	x8, [x8]
  429f68:	str	x8, [sp, #72]
  429f6c:	ldr	x8, [sp, #72]
  429f70:	cmp	x8, #0x1
  429f74:	cset	w9, lt  // lt = tstop
  429f78:	and	w9, w9, #0x1
  429f7c:	mov	w0, w9
  429f80:	sxtw	x8, w0
  429f84:	cbz	x8, 429f98 <_obstack_memory_used@@Base+0x2678>
  429f88:	mov	x8, xzr
  429f8c:	stur	x8, [x29, #-64]
  429f90:	mov	x8, #0x1                   	// #1
  429f94:	str	x8, [sp, #72]
  429f98:	b	429fac <_obstack_memory_used@@Base+0x268c>
  429f9c:	ldur	x8, [x29, #-16]
  429fa0:	ldr	x8, [x8, #48]
  429fa4:	add	x8, x8, #0x1
  429fa8:	str	x8, [sp, #72]
  429fac:	ldr	x8, [sp, #72]
  429fb0:	mov	x9, #0x10                  	// #16
  429fb4:	mul	x0, x8, x9
  429fb8:	bl	402450 <malloc@plt>
  429fbc:	str	x0, [sp, #80]
  429fc0:	ldr	x8, [sp, #80]
  429fc4:	cmp	x8, #0x0
  429fc8:	cset	w10, eq  // eq = none
  429fcc:	and	w10, w10, #0x1
  429fd0:	mov	w0, w10
  429fd4:	sxtw	x8, w0
  429fd8:	cbz	x8, 429fe8 <_obstack_memory_used@@Base+0x26c8>
  429fdc:	mov	x8, #0xfffffffffffffffe    	// #-2
  429fe0:	str	x8, [sp, #64]
  429fe4:	b	42a148 <_obstack_memory_used@@Base+0x2828>
  429fe8:	ldur	x0, [x29, #-16]
  429fec:	ldur	x1, [x29, #-24]
  429ff0:	ldur	x2, [x29, #-32]
  429ff4:	ldur	x3, [x29, #-40]
  429ff8:	ldr	x4, [sp, #40]
  429ffc:	ldur	x5, [x29, #-56]
  42a000:	ldr	x6, [sp, #72]
  42a004:	ldr	x7, [sp, #80]
  42a008:	ldr	w8, [sp, #60]
  42a00c:	mov	x9, sp
  42a010:	str	w8, [x9]
  42a014:	bl	428d28 <_obstack_memory_used@@Base+0x1408>
  42a018:	stur	w0, [x29, #-72]
  42a01c:	str	xzr, [sp, #64]
  42a020:	ldur	w8, [x29, #-72]
  42a024:	cbz	w8, 42a04c <_obstack_memory_used@@Base+0x272c>
  42a028:	ldur	w8, [x29, #-72]
  42a02c:	mov	w9, #0xfffffffe            	// #-2
  42a030:	mov	w10, #0xffffffff            	// #-1
  42a034:	cmp	w8, #0x1
  42a038:	csel	w8, w10, w9, eq  // eq = none
  42a03c:	mov	w0, w8
  42a040:	sxtw	x11, w0
  42a044:	str	x11, [sp, #64]
  42a048:	b	42a0dc <_obstack_memory_used@@Base+0x27bc>
  42a04c:	ldur	x8, [x29, #-64]
  42a050:	cbz	x8, 42a0dc <_obstack_memory_used@@Base+0x27bc>
  42a054:	ldur	x0, [x29, #-64]
  42a058:	ldr	x1, [sp, #80]
  42a05c:	ldr	x2, [sp, #72]
  42a060:	ldur	x8, [x29, #-16]
  42a064:	ldrb	w9, [x8, #56]
  42a068:	mov	w10, #0x1                   	// #1
  42a06c:	lsr	w9, w9, w10
  42a070:	mov	w11, #0x3                   	// #3
  42a074:	and	w9, w9, #0x3
  42a078:	and	w3, w9, #0xff
  42a07c:	str	w10, [sp, #12]
  42a080:	str	w11, [sp, #8]
  42a084:	bl	4350d0 <_obstack_memory_used@@Base+0xd7b0>
  42a088:	ldur	x8, [x29, #-16]
  42a08c:	ldrb	w9, [x8, #56]
  42a090:	ldr	w10, [sp, #8]
  42a094:	and	w11, w0, w10
  42a098:	ldr	w12, [sp, #12]
  42a09c:	lsl	w11, w11, w12
  42a0a0:	and	w9, w9, #0xfffffff9
  42a0a4:	orr	w9, w9, w11
  42a0a8:	strb	w9, [x8, #56]
  42a0ac:	ldur	x8, [x29, #-16]
  42a0b0:	ldrb	w9, [x8, #56]
  42a0b4:	lsr	w9, w9, w12
  42a0b8:	and	w9, w9, w10
  42a0bc:	tst	w9, #0xff
  42a0c0:	cset	w9, eq  // eq = none
  42a0c4:	and	w9, w9, #0x1
  42a0c8:	mov	w1, w9
  42a0cc:	sxtw	x8, w1
  42a0d0:	cbz	x8, 42a0dc <_obstack_memory_used@@Base+0x27bc>
  42a0d4:	mov	x8, #0xfffffffffffffffe    	// #-2
  42a0d8:	str	x8, [sp, #64]
  42a0dc:	ldr	x8, [sp, #64]
  42a0e0:	cmp	x8, #0x0
  42a0e4:	cset	w9, eq  // eq = none
  42a0e8:	and	w9, w9, #0x1
  42a0ec:	mov	w0, w9
  42a0f0:	sxtw	x8, w0
  42a0f4:	cbz	x8, 42a140 <_obstack_memory_used@@Base+0x2820>
  42a0f8:	ldurb	w8, [x29, #-65]
  42a0fc:	tbnz	w8, #0, 42a104 <_obstack_memory_used@@Base+0x27e4>
  42a100:	b	42a134 <_obstack_memory_used@@Base+0x2814>
  42a104:	ldr	x8, [sp, #80]
  42a108:	ldr	x8, [x8]
  42a10c:	ldur	x9, [x29, #-40]
  42a110:	cmp	x8, x9
  42a114:	b.ne	42a11c <_obstack_memory_used@@Base+0x27fc>  // b.any
  42a118:	b	42a11c <_obstack_memory_used@@Base+0x27fc>
  42a11c:	ldr	x8, [sp, #80]
  42a120:	ldr	x8, [x8, #8]
  42a124:	ldur	x9, [x29, #-40]
  42a128:	subs	x8, x8, x9
  42a12c:	str	x8, [sp, #64]
  42a130:	b	42a140 <_obstack_memory_used@@Base+0x2820>
  42a134:	ldr	x8, [sp, #80]
  42a138:	ldr	x8, [x8]
  42a13c:	str	x8, [sp, #64]
  42a140:	ldr	x0, [sp, #80]
  42a144:	bl	4026c0 <free@plt>
  42a148:	ldr	x8, [sp, #64]
  42a14c:	stur	x8, [x29, #-8]
  42a150:	ldur	x0, [x29, #-8]
  42a154:	ldp	x29, x30, [sp, #160]
  42a158:	add	sp, sp, #0xb0
  42a15c:	ret
  42a160:	sub	sp, sp, #0x40
  42a164:	stp	x29, x30, [sp, #48]
  42a168:	add	x29, sp, #0x30
  42a16c:	stur	x0, [x29, #-8]
  42a170:	stur	x1, [x29, #-16]
  42a174:	str	x2, [sp, #24]
  42a178:	str	x3, [sp, #16]
  42a17c:	str	x4, [sp, #8]
  42a180:	str	x5, [sp]
  42a184:	ldur	x0, [x29, #-8]
  42a188:	ldur	x1, [x29, #-16]
  42a18c:	ldr	x2, [sp, #24]
  42a190:	ldr	x3, [sp, #16]
  42a194:	ldr	x4, [sp, #8]
  42a198:	ldr	x5, [sp, #24]
  42a19c:	ldr	x6, [sp]
  42a1a0:	mov	w8, wzr
  42a1a4:	and	w7, w8, #0x1
  42a1a8:	bl	429cb4 <_obstack_memory_used@@Base+0x2394>
  42a1ac:	ldp	x29, x30, [sp, #48]
  42a1b0:	add	sp, sp, #0x40
  42a1b4:	ret
  42a1b8:	sub	sp, sp, #0x60
  42a1bc:	stp	x29, x30, [sp, #80]
  42a1c0:	add	x29, sp, #0x50
  42a1c4:	mov	x8, xzr
  42a1c8:	stur	x0, [x29, #-8]
  42a1cc:	stur	x1, [x29, #-16]
  42a1d0:	stur	x2, [x29, #-24]
  42a1d4:	stur	x3, [x29, #-32]
  42a1d8:	str	x4, [sp, #40]
  42a1dc:	str	x5, [sp, #32]
  42a1e0:	str	x6, [sp, #24]
  42a1e4:	str	x7, [sp, #16]
  42a1e8:	ldur	x0, [x29, #-8]
  42a1ec:	ldur	x1, [x29, #-16]
  42a1f0:	ldur	x2, [x29, #-24]
  42a1f4:	ldur	x3, [x29, #-32]
  42a1f8:	ldr	x4, [sp, #40]
  42a1fc:	ldr	x5, [sp, #32]
  42a200:	ldr	x7, [sp, #24]
  42a204:	ldr	x9, [sp, #16]
  42a208:	mov	x6, x8
  42a20c:	mov	x8, sp
  42a210:	str	x9, [x8]
  42a214:	mov	x8, sp
  42a218:	mov	w10, #0x1                   	// #1
  42a21c:	and	w10, w10, #0x1
  42a220:	strb	w10, [x8, #8]
  42a224:	bl	42a234 <_obstack_memory_used@@Base+0x2914>
  42a228:	ldp	x29, x30, [sp, #80]
  42a22c:	add	sp, sp, #0x60
  42a230:	ret
  42a234:	sub	sp, sp, #0x90
  42a238:	stp	x29, x30, [sp, #128]
  42a23c:	add	x29, sp, #0x80
  42a240:	ldrb	w8, [x29, #24]
  42a244:	stur	x0, [x29, #-16]
  42a248:	stur	x1, [x29, #-24]
  42a24c:	stur	x2, [x29, #-32]
  42a250:	stur	x3, [x29, #-40]
  42a254:	stur	x4, [x29, #-48]
  42a258:	stur	x5, [x29, #-56]
  42a25c:	str	x6, [sp, #64]
  42a260:	str	x7, [sp, #56]
  42a264:	and	w8, w8, #0x1
  42a268:	strb	w8, [sp, #52]
  42a26c:	mov	x9, xzr
  42a270:	str	x9, [sp, #16]
  42a274:	ldur	x9, [x29, #-32]
  42a278:	mov	w8, #0x1                   	// #1
  42a27c:	str	w8, [sp, #12]
  42a280:	tbnz	x9, #63, 42a2cc <_obstack_memory_used@@Base+0x29ac>
  42a284:	b	42a288 <_obstack_memory_used@@Base+0x2968>
  42a288:	ldur	x8, [x29, #-48]
  42a28c:	mov	w9, #0x1                   	// #1
  42a290:	str	w9, [sp, #12]
  42a294:	tbnz	x8, #63, 42a2cc <_obstack_memory_used@@Base+0x29ac>
  42a298:	b	42a29c <_obstack_memory_used@@Base+0x297c>
  42a29c:	ldr	x8, [x29, #16]
  42a2a0:	mov	w9, #0x1                   	// #1
  42a2a4:	str	w9, [sp, #12]
  42a2a8:	tbnz	x8, #63, 42a2cc <_obstack_memory_used@@Base+0x29ac>
  42a2ac:	b	42a2b0 <_obstack_memory_used@@Base+0x2990>
  42a2b0:	ldur	x8, [x29, #-32]
  42a2b4:	ldur	x9, [x29, #-48]
  42a2b8:	adds	x8, x8, x9
  42a2bc:	cset	w10, vs
  42a2c0:	str	x8, [sp, #24]
  42a2c4:	str	w10, [sp, #12]
  42a2c8:	b	42a2cc <_obstack_memory_used@@Base+0x29ac>
  42a2cc:	ldr	w8, [sp, #12]
  42a2d0:	tbz	w8, #0, 42a2e4 <_obstack_memory_used@@Base+0x29c4>
  42a2d4:	b	42a2d8 <_obstack_memory_used@@Base+0x29b8>
  42a2d8:	mov	x8, #0xfffffffffffffffe    	// #-2
  42a2dc:	stur	x8, [x29, #-8]
  42a2e0:	b	42a3c0 <_obstack_memory_used@@Base+0x2aa0>
  42a2e4:	ldur	x8, [x29, #-48]
  42a2e8:	subs	x8, x8, #0x1
  42a2ec:	b.lt	42a374 <_obstack_memory_used@@Base+0x2a54>  // b.tstop
  42a2f0:	b	42a2f4 <_obstack_memory_used@@Base+0x29d4>
  42a2f4:	ldur	x8, [x29, #-32]
  42a2f8:	subs	x8, x8, #0x1
  42a2fc:	b.lt	42a364 <_obstack_memory_used@@Base+0x2a44>  // b.tstop
  42a300:	b	42a304 <_obstack_memory_used@@Base+0x29e4>
  42a304:	ldr	x0, [sp, #24]
  42a308:	bl	402450 <malloc@plt>
  42a30c:	str	x0, [sp, #16]
  42a310:	ldr	x8, [sp, #16]
  42a314:	cbnz	x8, 42a328 <_obstack_memory_used@@Base+0x2a08>
  42a318:	b	42a31c <_obstack_memory_used@@Base+0x29fc>
  42a31c:	mov	x8, #0xfffffffffffffffe    	// #-2
  42a320:	stur	x8, [x29, #-8]
  42a324:	b	42a3c0 <_obstack_memory_used@@Base+0x2aa0>
  42a328:	ldr	x0, [sp, #16]
  42a32c:	ldur	x1, [x29, #-24]
  42a330:	ldur	x2, [x29, #-32]
  42a334:	bl	402290 <memcpy@plt>
  42a338:	ldr	x8, [sp, #16]
  42a33c:	ldur	x9, [x29, #-32]
  42a340:	add	x8, x8, x9
  42a344:	ldur	x1, [x29, #-40]
  42a348:	ldur	x2, [x29, #-48]
  42a34c:	str	x0, [sp]
  42a350:	mov	x0, x8
  42a354:	bl	402290 <memcpy@plt>
  42a358:	ldr	x8, [sp, #16]
  42a35c:	str	x8, [sp, #40]
  42a360:	b	42a370 <_obstack_memory_used@@Base+0x2a50>
  42a364:	ldur	x8, [x29, #-40]
  42a368:	str	x8, [sp, #40]
  42a36c:	b	42a370 <_obstack_memory_used@@Base+0x2a50>
  42a370:	b	42a380 <_obstack_memory_used@@Base+0x2a60>
  42a374:	ldur	x8, [x29, #-24]
  42a378:	str	x8, [sp, #40]
  42a37c:	b	42a380 <_obstack_memory_used@@Base+0x2a60>
  42a380:	ldur	x0, [x29, #-16]
  42a384:	ldr	x1, [sp, #40]
  42a388:	ldr	x2, [sp, #24]
  42a38c:	ldur	x3, [x29, #-56]
  42a390:	ldr	x4, [sp, #64]
  42a394:	ldr	x5, [x29, #16]
  42a398:	ldr	x6, [sp, #56]
  42a39c:	ldrb	w8, [sp, #52]
  42a3a0:	and	w7, w8, #0x1
  42a3a4:	bl	429cb4 <_obstack_memory_used@@Base+0x2394>
  42a3a8:	str	x0, [sp, #32]
  42a3ac:	ldr	x0, [sp, #16]
  42a3b0:	bl	4026c0 <free@plt>
  42a3b4:	ldr	x9, [sp, #32]
  42a3b8:	stur	x9, [x29, #-8]
  42a3bc:	b	42a3c0 <_obstack_memory_used@@Base+0x2aa0>
  42a3c0:	ldur	x0, [x29, #-8]
  42a3c4:	ldp	x29, x30, [sp, #128]
  42a3c8:	add	sp, sp, #0x90
  42a3cc:	ret
  42a3d0:	sub	sp, sp, #0x70
  42a3d4:	stp	x29, x30, [sp, #96]
  42a3d8:	add	x29, sp, #0x60
  42a3dc:	ldr	x8, [x29, #16]
  42a3e0:	stur	x0, [x29, #-8]
  42a3e4:	stur	x1, [x29, #-16]
  42a3e8:	stur	x2, [x29, #-24]
  42a3ec:	stur	x3, [x29, #-32]
  42a3f0:	stur	x4, [x29, #-40]
  42a3f4:	str	x5, [sp, #48]
  42a3f8:	str	x6, [sp, #40]
  42a3fc:	str	x7, [sp, #32]
  42a400:	str	x8, [sp, #24]
  42a404:	ldur	x0, [x29, #-8]
  42a408:	ldur	x1, [x29, #-16]
  42a40c:	ldur	x2, [x29, #-24]
  42a410:	ldur	x3, [x29, #-32]
  42a414:	ldur	x4, [x29, #-40]
  42a418:	ldr	x5, [sp, #48]
  42a41c:	ldr	x6, [sp, #40]
  42a420:	ldr	x7, [sp, #32]
  42a424:	ldr	x8, [sp, #24]
  42a428:	mov	x9, sp
  42a42c:	str	x8, [x9]
  42a430:	mov	x8, sp
  42a434:	mov	w10, wzr
  42a438:	and	w10, w10, #0x1
  42a43c:	strb	w10, [x8, #8]
  42a440:	bl	42a234 <_obstack_memory_used@@Base+0x2914>
  42a444:	ldp	x29, x30, [sp, #96]
  42a448:	add	sp, sp, #0x70
  42a44c:	ret
  42a450:	sub	sp, sp, #0x30
  42a454:	str	x0, [sp, #40]
  42a458:	str	x1, [sp, #32]
  42a45c:	str	x2, [sp, #24]
  42a460:	str	x3, [sp, #16]
  42a464:	str	x4, [sp, #8]
  42a468:	ldr	x8, [sp, #24]
  42a46c:	cbz	x8, 42a4ac <_obstack_memory_used@@Base+0x2b8c>
  42a470:	ldr	x8, [sp, #40]
  42a474:	ldrb	w9, [x8, #56]
  42a478:	and	w9, w9, #0xfffffff9
  42a47c:	orr	w9, w9, #0x2
  42a480:	strb	w9, [x8, #56]
  42a484:	ldr	x8, [sp, #24]
  42a488:	ldr	x10, [sp, #32]
  42a48c:	str	x8, [x10]
  42a490:	ldr	x8, [sp, #16]
  42a494:	ldr	x10, [sp, #32]
  42a498:	str	x8, [x10, #8]
  42a49c:	ldr	x8, [sp, #8]
  42a4a0:	ldr	x10, [sp, #32]
  42a4a4:	str	x8, [x10, #16]
  42a4a8:	b	42a4d8 <_obstack_memory_used@@Base+0x2bb8>
  42a4ac:	ldr	x8, [sp, #40]
  42a4b0:	ldrb	w9, [x8, #56]
  42a4b4:	and	w9, w9, #0xfffffff9
  42a4b8:	strb	w9, [x8, #56]
  42a4bc:	ldr	x8, [sp, #32]
  42a4c0:	mov	x10, xzr
  42a4c4:	str	xzr, [x8]
  42a4c8:	ldr	x8, [sp, #32]
  42a4cc:	str	x10, [x8, #16]
  42a4d0:	ldr	x8, [sp, #32]
  42a4d4:	str	x10, [x8, #8]
  42a4d8:	add	sp, sp, #0x30
  42a4dc:	ret
  42a4e0:	sub	sp, sp, #0x20
  42a4e4:	stp	x29, x30, [sp, #16]
  42a4e8:	add	x29, sp, #0x10
  42a4ec:	str	x0, [sp, #8]
  42a4f0:	ldr	x8, [sp, #8]
  42a4f4:	ldr	w9, [x8, #8]
  42a4f8:	and	w9, w9, #0xff
  42a4fc:	cmp	w9, #0x6
  42a500:	b.ne	42a528 <_obstack_memory_used@@Base+0x2c08>  // b.any
  42a504:	ldr	x8, [sp, #8]
  42a508:	ldr	w9, [x8, #8]
  42a50c:	lsr	w9, w9, #18
  42a510:	and	w9, w9, #0x1
  42a514:	cbnz	w9, 42a528 <_obstack_memory_used@@Base+0x2c08>
  42a518:	ldr	x8, [sp, #8]
  42a51c:	ldr	x0, [x8]
  42a520:	bl	42a5fc <_obstack_memory_used@@Base+0x2cdc>
  42a524:	b	42a55c <_obstack_memory_used@@Base+0x2c3c>
  42a528:	ldr	x8, [sp, #8]
  42a52c:	ldr	w9, [x8, #8]
  42a530:	and	w9, w9, #0xff
  42a534:	cmp	w9, #0x3
  42a538:	b.ne	42a55c <_obstack_memory_used@@Base+0x2c3c>  // b.any
  42a53c:	ldr	x8, [sp, #8]
  42a540:	ldr	w9, [x8, #8]
  42a544:	lsr	w9, w9, #18
  42a548:	and	w9, w9, #0x1
  42a54c:	cbnz	w9, 42a55c <_obstack_memory_used@@Base+0x2c3c>
  42a550:	ldr	x8, [sp, #8]
  42a554:	ldr	x0, [x8]
  42a558:	bl	4026c0 <free@plt>
  42a55c:	ldp	x29, x30, [sp, #16]
  42a560:	add	sp, sp, #0x20
  42a564:	ret
  42a568:	sub	sp, sp, #0x20
  42a56c:	stp	x29, x30, [sp, #16]
  42a570:	add	x29, sp, #0x10
  42a574:	str	x0, [sp, #8]
  42a578:	ldr	x8, [sp, #8]
  42a57c:	ldr	x0, [x8, #48]
  42a580:	bl	4026c0 <free@plt>
  42a584:	ldr	x8, [sp, #8]
  42a588:	ldr	x0, [x8, #72]
  42a58c:	bl	4026c0 <free@plt>
  42a590:	ldr	x8, [sp, #8]
  42a594:	ldr	x8, [x8, #80]
  42a598:	ldr	x9, [sp, #8]
  42a59c:	add	x9, x9, #0x8
  42a5a0:	cmp	x8, x9
  42a5a4:	b.eq	42a5c4 <_obstack_memory_used@@Base+0x2ca4>  // b.none
  42a5a8:	ldr	x8, [sp, #8]
  42a5ac:	ldr	x8, [x8, #80]
  42a5b0:	ldr	x0, [x8, #16]
  42a5b4:	bl	4026c0 <free@plt>
  42a5b8:	ldr	x8, [sp, #8]
  42a5bc:	ldr	x0, [x8, #80]
  42a5c0:	bl	4026c0 <free@plt>
  42a5c4:	ldr	x8, [sp, #8]
  42a5c8:	ldr	x0, [x8, #24]
  42a5cc:	bl	4026c0 <free@plt>
  42a5d0:	ldr	x8, [sp, #8]
  42a5d4:	ldr	x0, [x8, #96]
  42a5d8:	bl	4026c0 <free@plt>
  42a5dc:	ldr	x8, [sp, #8]
  42a5e0:	ldr	x0, [x8, #88]
  42a5e4:	bl	4026c0 <free@plt>
  42a5e8:	ldr	x0, [sp, #8]
  42a5ec:	bl	4026c0 <free@plt>
  42a5f0:	ldp	x29, x30, [sp, #16]
  42a5f4:	add	sp, sp, #0x20
  42a5f8:	ret
  42a5fc:	sub	sp, sp, #0x20
  42a600:	stp	x29, x30, [sp, #16]
  42a604:	add	x29, sp, #0x10
  42a608:	str	x0, [sp, #8]
  42a60c:	ldr	x8, [sp, #8]
  42a610:	ldr	x0, [x8]
  42a614:	bl	4026c0 <free@plt>
  42a618:	ldr	x8, [sp, #8]
  42a61c:	ldr	x0, [x8, #8]
  42a620:	bl	4026c0 <free@plt>
  42a624:	ldr	x8, [sp, #8]
  42a628:	ldr	x0, [x8, #16]
  42a62c:	bl	4026c0 <free@plt>
  42a630:	ldr	x8, [sp, #8]
  42a634:	ldr	x0, [x8, #24]
  42a638:	bl	4026c0 <free@plt>
  42a63c:	ldr	x0, [sp, #8]
  42a640:	bl	4026c0 <free@plt>
  42a644:	ldp	x29, x30, [sp, #16]
  42a648:	add	sp, sp, #0x20
  42a64c:	ret
  42a650:	sub	sp, sp, #0xf0
  42a654:	stp	x29, x30, [sp, #224]
  42a658:	add	x29, sp, #0xe0
  42a65c:	mov	x8, #0x8                   	// #8
  42a660:	mov	x9, #0x10                  	// #16
  42a664:	stur	x0, [x29, #-16]
  42a668:	stur	x1, [x29, #-24]
  42a66c:	stur	x8, [x29, #-48]
  42a670:	ldur	x8, [x29, #-48]
  42a674:	cmp	x9, x8
  42a678:	b.cs	42a688 <_obstack_memory_used@@Base+0x2d68>  // b.hs, b.nlast
  42a67c:	ldur	x8, [x29, #-48]
  42a680:	stur	x8, [x29, #-80]
  42a684:	b	42a690 <_obstack_memory_used@@Base+0x2d70>
  42a688:	mov	x8, #0x10                  	// #16
  42a68c:	stur	x8, [x29, #-80]
  42a690:	ldur	x8, [x29, #-80]
  42a694:	mov	x9, #0x18                  	// #24
  42a698:	cmp	x9, x8
  42a69c:	b.cs	42a6d0 <_obstack_memory_used@@Base+0x2db0>  // b.hs, b.nlast
  42a6a0:	ldur	x8, [x29, #-48]
  42a6a4:	mov	x9, #0x10                  	// #16
  42a6a8:	cmp	x9, x8
  42a6ac:	b.cs	42a6bc <_obstack_memory_used@@Base+0x2d9c>  // b.hs, b.nlast
  42a6b0:	ldur	x8, [x29, #-48]
  42a6b4:	stur	x8, [x29, #-88]
  42a6b8:	b	42a6c4 <_obstack_memory_used@@Base+0x2da4>
  42a6bc:	mov	x8, #0x10                  	// #16
  42a6c0:	stur	x8, [x29, #-88]
  42a6c4:	ldur	x8, [x29, #-88]
  42a6c8:	stur	x8, [x29, #-96]
  42a6cc:	b	42a6d8 <_obstack_memory_used@@Base+0x2db8>
  42a6d0:	mov	x8, #0x18                  	// #24
  42a6d4:	stur	x8, [x29, #-96]
  42a6d8:	ldur	x8, [x29, #-96]
  42a6dc:	mov	x9, #0x10                  	// #16
  42a6e0:	cmp	x9, x8
  42a6e4:	b.cs	42a760 <_obstack_memory_used@@Base+0x2e40>  // b.hs, b.nlast
  42a6e8:	ldur	x8, [x29, #-48]
  42a6ec:	mov	x9, #0x10                  	// #16
  42a6f0:	cmp	x9, x8
  42a6f4:	b.cs	42a704 <_obstack_memory_used@@Base+0x2de4>  // b.hs, b.nlast
  42a6f8:	ldur	x8, [x29, #-48]
  42a6fc:	stur	x8, [x29, #-104]
  42a700:	b	42a70c <_obstack_memory_used@@Base+0x2dec>
  42a704:	mov	x8, #0x10                  	// #16
  42a708:	stur	x8, [x29, #-104]
  42a70c:	ldur	x8, [x29, #-104]
  42a710:	mov	x9, #0x18                  	// #24
  42a714:	cmp	x9, x8
  42a718:	b.cs	42a74c <_obstack_memory_used@@Base+0x2e2c>  // b.hs, b.nlast
  42a71c:	ldur	x8, [x29, #-48]
  42a720:	mov	x9, #0x10                  	// #16
  42a724:	cmp	x9, x8
  42a728:	b.cs	42a738 <_obstack_memory_used@@Base+0x2e18>  // b.hs, b.nlast
  42a72c:	ldur	x8, [x29, #-48]
  42a730:	str	x8, [sp, #112]
  42a734:	b	42a740 <_obstack_memory_used@@Base+0x2e20>
  42a738:	mov	x8, #0x10                  	// #16
  42a73c:	str	x8, [sp, #112]
  42a740:	ldr	x8, [sp, #112]
  42a744:	str	x8, [sp, #104]
  42a748:	b	42a754 <_obstack_memory_used@@Base+0x2e34>
  42a74c:	mov	x8, #0x18                  	// #24
  42a750:	str	x8, [sp, #104]
  42a754:	ldr	x8, [sp, #104]
  42a758:	str	x8, [sp, #96]
  42a75c:	b	42a768 <_obstack_memory_used@@Base+0x2e48>
  42a760:	mov	x8, #0x10                  	// #16
  42a764:	str	x8, [sp, #96]
  42a768:	ldr	x8, [sp, #96]
  42a76c:	mov	x9, #0x18                  	// #24
  42a770:	cmp	x9, x8
  42a774:	b.cs	42a880 <_obstack_memory_used@@Base+0x2f60>  // b.hs, b.nlast
  42a778:	ldur	x8, [x29, #-48]
  42a77c:	mov	x9, #0x10                  	// #16
  42a780:	cmp	x9, x8
  42a784:	b.cs	42a794 <_obstack_memory_used@@Base+0x2e74>  // b.hs, b.nlast
  42a788:	ldur	x8, [x29, #-48]
  42a78c:	str	x8, [sp, #88]
  42a790:	b	42a79c <_obstack_memory_used@@Base+0x2e7c>
  42a794:	mov	x8, #0x10                  	// #16
  42a798:	str	x8, [sp, #88]
  42a79c:	ldr	x8, [sp, #88]
  42a7a0:	mov	x9, #0x18                  	// #24
  42a7a4:	cmp	x9, x8
  42a7a8:	b.cs	42a7dc <_obstack_memory_used@@Base+0x2ebc>  // b.hs, b.nlast
  42a7ac:	ldur	x8, [x29, #-48]
  42a7b0:	mov	x9, #0x10                  	// #16
  42a7b4:	cmp	x9, x8
  42a7b8:	b.cs	42a7c8 <_obstack_memory_used@@Base+0x2ea8>  // b.hs, b.nlast
  42a7bc:	ldur	x8, [x29, #-48]
  42a7c0:	str	x8, [sp, #80]
  42a7c4:	b	42a7d0 <_obstack_memory_used@@Base+0x2eb0>
  42a7c8:	mov	x8, #0x10                  	// #16
  42a7cc:	str	x8, [sp, #80]
  42a7d0:	ldr	x8, [sp, #80]
  42a7d4:	str	x8, [sp, #72]
  42a7d8:	b	42a7e4 <_obstack_memory_used@@Base+0x2ec4>
  42a7dc:	mov	x8, #0x18                  	// #24
  42a7e0:	str	x8, [sp, #72]
  42a7e4:	ldr	x8, [sp, #72]
  42a7e8:	mov	x9, #0x10                  	// #16
  42a7ec:	cmp	x9, x8
  42a7f0:	b.cs	42a86c <_obstack_memory_used@@Base+0x2f4c>  // b.hs, b.nlast
  42a7f4:	ldur	x8, [x29, #-48]
  42a7f8:	mov	x9, #0x10                  	// #16
  42a7fc:	cmp	x9, x8
  42a800:	b.cs	42a810 <_obstack_memory_used@@Base+0x2ef0>  // b.hs, b.nlast
  42a804:	ldur	x8, [x29, #-48]
  42a808:	str	x8, [sp, #64]
  42a80c:	b	42a818 <_obstack_memory_used@@Base+0x2ef8>
  42a810:	mov	x8, #0x10                  	// #16
  42a814:	str	x8, [sp, #64]
  42a818:	ldr	x8, [sp, #64]
  42a81c:	mov	x9, #0x18                  	// #24
  42a820:	cmp	x9, x8
  42a824:	b.cs	42a858 <_obstack_memory_used@@Base+0x2f38>  // b.hs, b.nlast
  42a828:	ldur	x8, [x29, #-48]
  42a82c:	mov	x9, #0x10                  	// #16
  42a830:	cmp	x9, x8
  42a834:	b.cs	42a844 <_obstack_memory_used@@Base+0x2f24>  // b.hs, b.nlast
  42a838:	ldur	x8, [x29, #-48]
  42a83c:	str	x8, [sp, #56]
  42a840:	b	42a84c <_obstack_memory_used@@Base+0x2f2c>
  42a844:	mov	x8, #0x10                  	// #16
  42a848:	str	x8, [sp, #56]
  42a84c:	ldr	x8, [sp, #56]
  42a850:	str	x8, [sp, #48]
  42a854:	b	42a860 <_obstack_memory_used@@Base+0x2f40>
  42a858:	mov	x8, #0x18                  	// #24
  42a85c:	str	x8, [sp, #48]
  42a860:	ldr	x8, [sp, #48]
  42a864:	str	x8, [sp, #40]
  42a868:	b	42a874 <_obstack_memory_used@@Base+0x2f54>
  42a86c:	mov	x8, #0x10                  	// #16
  42a870:	str	x8, [sp, #40]
  42a874:	ldr	x8, [sp, #40]
  42a878:	str	x8, [sp, #32]
  42a87c:	b	42a888 <_obstack_memory_used@@Base+0x2f68>
  42a880:	mov	x8, #0x18                  	// #24
  42a884:	str	x8, [sp, #32]
  42a888:	ldr	x8, [sp, #32]
  42a88c:	stur	x8, [x29, #-56]
  42a890:	ldur	x0, [x29, #-16]
  42a894:	mov	w9, wzr
  42a898:	mov	w1, w9
  42a89c:	mov	x2, #0xe8                  	// #232
  42a8a0:	bl	402520 <memset@plt>
  42a8a4:	ldur	x8, [x29, #-16]
  42a8a8:	mov	w9, #0xf                   	// #15
  42a8ac:	str	w9, [x8, #128]
  42a8b0:	ldur	x8, [x29, #-56]
  42a8b4:	mov	x10, #0xffffffffffffffff    	// #-1
  42a8b8:	udiv	x8, x10, x8
  42a8bc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  42a8c0:	cmp	x10, x8
  42a8c4:	b.cs	42a8d4 <_obstack_memory_used@@Base+0x2fb4>  // b.hs, b.nlast
  42a8c8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  42a8cc:	str	x8, [sp, #24]
  42a8d0:	b	42a8e4 <_obstack_memory_used@@Base+0x2fc4>
  42a8d4:	ldur	x8, [x29, #-56]
  42a8d8:	mov	x9, #0xffffffffffffffff    	// #-1
  42a8dc:	udiv	x8, x9, x8
  42a8e0:	str	x8, [sp, #24]
  42a8e4:	ldr	x8, [sp, #24]
  42a8e8:	mov	x9, #0x2                   	// #2
  42a8ec:	udiv	x8, x8, x9
  42a8f0:	ldur	x9, [x29, #-24]
  42a8f4:	cmp	x8, x9
  42a8f8:	cset	w10, ls  // ls = plast
  42a8fc:	and	w10, w10, #0x1
  42a900:	mov	w0, w10
  42a904:	sxtw	x8, w0
  42a908:	cbz	x8, 42a918 <_obstack_memory_used@@Base+0x2ff8>
  42a90c:	mov	w8, #0xc                   	// #12
  42a910:	stur	w8, [x29, #-4]
  42a914:	b	42ac0c <_obstack_memory_used@@Base+0x32ec>
  42a918:	ldur	x8, [x29, #-24]
  42a91c:	mov	x9, #0x1                   	// #1
  42a920:	add	x8, x8, #0x1
  42a924:	ldur	x10, [x29, #-16]
  42a928:	str	x8, [x10, #8]
  42a92c:	ldur	x8, [x29, #-16]
  42a930:	ldr	x8, [x8, #8]
  42a934:	mov	x10, #0x10                  	// #16
  42a938:	mul	x0, x8, x10
  42a93c:	str	x9, [sp, #16]
  42a940:	bl	402450 <malloc@plt>
  42a944:	ldur	x8, [x29, #-16]
  42a948:	str	x0, [x8]
  42a94c:	ldr	x8, [sp, #16]
  42a950:	stur	x8, [x29, #-32]
  42a954:	ldur	x8, [x29, #-32]
  42a958:	ldur	x9, [x29, #-24]
  42a95c:	cmp	x8, x9
  42a960:	b.ls	42a968 <_obstack_memory_used@@Base+0x3048>  // b.plast
  42a964:	b	42a978 <_obstack_memory_used@@Base+0x3058>
  42a968:	ldur	x8, [x29, #-32]
  42a96c:	lsl	x8, x8, #1
  42a970:	stur	x8, [x29, #-32]
  42a974:	b	42a954 <_obstack_memory_used@@Base+0x3034>
  42a978:	ldur	x1, [x29, #-32]
  42a97c:	mov	x0, #0x18                  	// #24
  42a980:	bl	402540 <calloc@plt>
  42a984:	ldur	x8, [x29, #-16]
  42a988:	str	x0, [x8, #64]
  42a98c:	ldur	x8, [x29, #-32]
  42a990:	subs	x8, x8, #0x1
  42a994:	ldur	x9, [x29, #-16]
  42a998:	str	x8, [x9, #136]
  42a99c:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  42a9a0:	ldur	x8, [x29, #-16]
  42a9a4:	str	w0, [x8, #180]
  42a9a8:	mov	w0, #0xe                   	// #14
  42a9ac:	bl	402410 <nl_langinfo@plt>
  42a9b0:	stur	x0, [x29, #-40]
  42a9b4:	ldur	x8, [x29, #-40]
  42a9b8:	ldrb	w10, [x8]
  42a9bc:	cmp	w10, #0x55
  42a9c0:	b.eq	42a9d4 <_obstack_memory_used@@Base+0x30b4>  // b.none
  42a9c4:	ldur	x8, [x29, #-40]
  42a9c8:	ldrb	w9, [x8]
  42a9cc:	cmp	w9, #0x75
  42a9d0:	b.ne	42aa60 <_obstack_memory_used@@Base+0x3140>  // b.any
  42a9d4:	ldur	x8, [x29, #-40]
  42a9d8:	ldrb	w9, [x8, #1]
  42a9dc:	cmp	w9, #0x54
  42a9e0:	b.eq	42a9f4 <_obstack_memory_used@@Base+0x30d4>  // b.none
  42a9e4:	ldur	x8, [x29, #-40]
  42a9e8:	ldrb	w9, [x8, #1]
  42a9ec:	cmp	w9, #0x74
  42a9f0:	b.ne	42aa60 <_obstack_memory_used@@Base+0x3140>  // b.any
  42a9f4:	ldur	x8, [x29, #-40]
  42a9f8:	ldrb	w9, [x8, #2]
  42a9fc:	cmp	w9, #0x46
  42aa00:	b.eq	42aa14 <_obstack_memory_used@@Base+0x30f4>  // b.none
  42aa04:	ldur	x8, [x29, #-40]
  42aa08:	ldrb	w9, [x8, #2]
  42aa0c:	cmp	w9, #0x66
  42aa10:	b.ne	42aa60 <_obstack_memory_used@@Base+0x3140>  // b.any
  42aa14:	ldur	x8, [x29, #-40]
  42aa18:	add	x8, x8, #0x3
  42aa1c:	ldur	x9, [x29, #-40]
  42aa20:	ldrb	w10, [x9, #3]
  42aa24:	cmp	w10, #0x2d
  42aa28:	cset	w10, eq  // eq = none
  42aa2c:	and	w10, w10, #0x1
  42aa30:	mov	w0, w10
  42aa34:	sxtw	x9, w0
  42aa38:	add	x0, x8, x9
  42aa3c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  42aa40:	add	x1, x1, #0xf72
  42aa44:	bl	4026a0 <strcmp@plt>
  42aa48:	cbnz	w0, 42aa60 <_obstack_memory_used@@Base+0x3140>
  42aa4c:	ldur	x8, [x29, #-16]
  42aa50:	ldrb	w9, [x8, #176]
  42aa54:	and	w9, w9, #0xfffffffb
  42aa58:	orr	w9, w9, #0x4
  42aa5c:	strb	w9, [x8, #176]
  42aa60:	ldur	x8, [x29, #-16]
  42aa64:	ldrb	w9, [x8, #176]
  42aa68:	and	w9, w9, #0xfffffff7
  42aa6c:	strb	w9, [x8, #176]
  42aa70:	ldur	x8, [x29, #-16]
  42aa74:	ldr	w9, [x8, #180]
  42aa78:	cmp	w9, #0x1
  42aa7c:	b.le	42abc0 <_obstack_memory_used@@Base+0x32a0>
  42aa80:	ldur	x8, [x29, #-16]
  42aa84:	ldrb	w9, [x8, #176]
  42aa88:	mov	w10, #0x2                   	// #2
  42aa8c:	lsr	w9, w9, w10
  42aa90:	and	w9, w9, #0x1
  42aa94:	and	w9, w9, #0xff
  42aa98:	cbz	w9, 42aab0 <_obstack_memory_used@@Base+0x3190>
  42aa9c:	ldur	x8, [x29, #-16]
  42aaa0:	adrp	x9, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42aaa4:	add	x9, x9, #0xb00
  42aaa8:	str	x9, [x8, #120]
  42aaac:	b	42abc0 <_obstack_memory_used@@Base+0x32a0>
  42aab0:	mov	x0, #0x20                  	// #32
  42aab4:	mov	x1, #0x1                   	// #1
  42aab8:	bl	402540 <calloc@plt>
  42aabc:	ldur	x8, [x29, #-16]
  42aac0:	str	x0, [x8, #120]
  42aac4:	ldur	x8, [x29, #-16]
  42aac8:	ldr	x8, [x8, #120]
  42aacc:	cmp	x8, #0x0
  42aad0:	cset	w9, eq  // eq = none
  42aad4:	and	w9, w9, #0x1
  42aad8:	mov	w0, w9
  42aadc:	sxtw	x8, w0
  42aae0:	cbz	x8, 42aaf0 <_obstack_memory_used@@Base+0x31d0>
  42aae4:	mov	w8, #0xc                   	// #12
  42aae8:	stur	w8, [x29, #-4]
  42aaec:	b	42ac0c <_obstack_memory_used@@Base+0x32ec>
  42aaf0:	stur	wzr, [x29, #-60]
  42aaf4:	stur	wzr, [x29, #-68]
  42aaf8:	ldur	w8, [x29, #-60]
  42aafc:	cmp	w8, #0x4
  42ab00:	b.ge	42abc0 <_obstack_memory_used@@Base+0x32a0>  // b.tcont
  42ab04:	stur	wzr, [x29, #-64]
  42ab08:	ldur	w8, [x29, #-64]
  42ab0c:	cmp	w8, #0x40
  42ab10:	b.ge	42abb0 <_obstack_memory_used@@Base+0x3290>  // b.tcont
  42ab14:	ldur	w0, [x29, #-68]
  42ab18:	bl	402600 <btowc@plt>
  42ab1c:	stur	w0, [x29, #-72]
  42ab20:	ldur	w8, [x29, #-72]
  42ab24:	mov	w9, #0xffffffff            	// #-1
  42ab28:	cmp	w8, w9
  42ab2c:	b.eq	42ab64 <_obstack_memory_used@@Base+0x3244>  // b.none
  42ab30:	ldur	w8, [x29, #-64]
  42ab34:	mov	w9, w8
  42ab38:	mov	x10, #0x1                   	// #1
  42ab3c:	lsl	x9, x10, x9
  42ab40:	ldur	x10, [x29, #-16]
  42ab44:	ldr	x10, [x10, #120]
  42ab48:	ldursw	x11, [x29, #-60]
  42ab4c:	mov	x12, #0x8                   	// #8
  42ab50:	mul	x11, x12, x11
  42ab54:	add	x10, x10, x11
  42ab58:	ldr	x11, [x10]
  42ab5c:	orr	x9, x11, x9
  42ab60:	str	x9, [x10]
  42ab64:	ldur	w8, [x29, #-68]
  42ab68:	and	w8, w8, #0xffffff80
  42ab6c:	cbnz	w8, 42ab94 <_obstack_memory_used@@Base+0x3274>
  42ab70:	ldur	w8, [x29, #-72]
  42ab74:	ldur	w9, [x29, #-68]
  42ab78:	cmp	w8, w9
  42ab7c:	b.eq	42ab94 <_obstack_memory_used@@Base+0x3274>  // b.none
  42ab80:	ldur	x8, [x29, #-16]
  42ab84:	ldrb	w9, [x8, #176]
  42ab88:	and	w9, w9, #0xfffffff7
  42ab8c:	orr	w9, w9, #0x8
  42ab90:	strb	w9, [x8, #176]
  42ab94:	ldur	w8, [x29, #-64]
  42ab98:	add	w8, w8, #0x1
  42ab9c:	stur	w8, [x29, #-64]
  42aba0:	ldur	w8, [x29, #-68]
  42aba4:	add	w8, w8, #0x1
  42aba8:	stur	w8, [x29, #-68]
  42abac:	b	42ab08 <_obstack_memory_used@@Base+0x31e8>
  42abb0:	ldur	w8, [x29, #-60]
  42abb4:	add	w8, w8, #0x1
  42abb8:	stur	w8, [x29, #-60]
  42abbc:	b	42aaf8 <_obstack_memory_used@@Base+0x31d8>
  42abc0:	ldur	x8, [x29, #-16]
  42abc4:	ldr	x8, [x8]
  42abc8:	mov	w9, #0x1                   	// #1
  42abcc:	str	w9, [sp, #12]
  42abd0:	cbz	x8, 42abe8 <_obstack_memory_used@@Base+0x32c8>
  42abd4:	ldur	x8, [x29, #-16]
  42abd8:	ldr	x8, [x8, #64]
  42abdc:	cmp	x8, #0x0
  42abe0:	cset	w9, eq  // eq = none
  42abe4:	str	w9, [sp, #12]
  42abe8:	ldr	w8, [sp, #12]
  42abec:	and	w8, w8, #0x1
  42abf0:	mov	w0, w8
  42abf4:	sxtw	x9, w0
  42abf8:	cbz	x9, 42ac08 <_obstack_memory_used@@Base+0x32e8>
  42abfc:	mov	w8, #0xc                   	// #12
  42ac00:	stur	w8, [x29, #-4]
  42ac04:	b	42ac0c <_obstack_memory_used@@Base+0x32ec>
  42ac08:	stur	wzr, [x29, #-4]
  42ac0c:	ldur	w0, [x29, #-4]
  42ac10:	ldp	x29, x30, [sp, #224]
  42ac14:	add	sp, sp, #0xf0
  42ac18:	ret
  42ac1c:	sub	sp, sp, #0x60
  42ac20:	stp	x29, x30, [sp, #80]
  42ac24:	add	x29, sp, #0x50
  42ac28:	mov	x8, #0x98                  	// #152
  42ac2c:	mov	w9, wzr
  42ac30:	mov	w10, #0x1                   	// #1
  42ac34:	stur	x0, [x29, #-16]
  42ac38:	stur	x1, [x29, #-24]
  42ac3c:	stur	x2, [x29, #-32]
  42ac40:	str	x3, [sp, #40]
  42ac44:	and	w10, w4, w10
  42ac48:	strb	w10, [sp, #39]
  42ac4c:	str	x5, [sp, #24]
  42ac50:	ldur	x0, [x29, #-16]
  42ac54:	mov	w1, w9
  42ac58:	mov	x2, x8
  42ac5c:	bl	402520 <memset@plt>
  42ac60:	ldur	x0, [x29, #-24]
  42ac64:	ldur	x1, [x29, #-32]
  42ac68:	ldur	x2, [x29, #-16]
  42ac6c:	ldr	x3, [sp, #40]
  42ac70:	ldrb	w9, [sp, #39]
  42ac74:	ldr	x5, [sp, #24]
  42ac78:	and	w4, w9, #0x1
  42ac7c:	bl	42bb08 <_obstack_memory_used@@Base+0x41e8>
  42ac80:	ldur	x8, [x29, #-32]
  42ac84:	cmp	x8, #0x0
  42ac88:	cset	w9, le
  42ac8c:	tbnz	w9, #0, 42accc <_obstack_memory_used@@Base+0x33ac>
  42ac90:	ldur	x0, [x29, #-16]
  42ac94:	ldur	x8, [x29, #-32]
  42ac98:	add	x1, x8, #0x1
  42ac9c:	bl	42bc10 <_obstack_memory_used@@Base+0x42f0>
  42aca0:	str	w0, [sp, #20]
  42aca4:	ldr	w9, [sp, #20]
  42aca8:	cmp	w9, #0x0
  42acac:	cset	w9, ne  // ne = any
  42acb0:	and	w9, w9, #0x1
  42acb4:	mov	w1, w9
  42acb8:	sxtw	x8, w1
  42acbc:	cbz	x8, 42accc <_obstack_memory_used@@Base+0x33ac>
  42acc0:	ldr	w8, [sp, #20]
  42acc4:	stur	w8, [x29, #-4]
  42acc8:	b	42ae38 <_obstack_memory_used@@Base+0x3518>
  42accc:	ldur	x8, [x29, #-16]
  42acd0:	ldrb	w9, [x8, #139]
  42acd4:	cbz	w9, 42ace8 <_obstack_memory_used@@Base+0x33c8>
  42acd8:	ldur	x8, [x29, #-16]
  42acdc:	ldr	x8, [x8, #8]
  42ace0:	str	x8, [sp, #8]
  42ace4:	b	42acf0 <_obstack_memory_used@@Base+0x33d0>
  42ace8:	ldur	x8, [x29, #-24]
  42acec:	str	x8, [sp, #8]
  42acf0:	ldr	x8, [sp, #8]
  42acf4:	ldur	x9, [x29, #-16]
  42acf8:	str	x8, [x9, #8]
  42acfc:	ldrb	w10, [sp, #39]
  42ad00:	tbnz	w10, #0, 42ad08 <_obstack_memory_used@@Base+0x33e8>
  42ad04:	b	42ade4 <_obstack_memory_used@@Base+0x34c4>
  42ad08:	ldr	x8, [sp, #24]
  42ad0c:	ldr	w9, [x8, #180]
  42ad10:	cmp	w9, #0x1
  42ad14:	b.le	42add8 <_obstack_memory_used@@Base+0x34b8>
  42ad18:	ldur	x0, [x29, #-16]
  42ad1c:	bl	42bd90 <_obstack_memory_used@@Base+0x4470>
  42ad20:	str	w0, [sp, #20]
  42ad24:	ldr	w8, [sp, #20]
  42ad28:	cmp	w8, #0x0
  42ad2c:	cset	w8, ne  // ne = any
  42ad30:	and	w8, w8, #0x1
  42ad34:	mov	w1, w8
  42ad38:	sxtw	x9, w1
  42ad3c:	cbz	x9, 42ad4c <_obstack_memory_used@@Base+0x342c>
  42ad40:	ldr	w8, [sp, #20]
  42ad44:	stur	w8, [x29, #-4]
  42ad48:	b	42ae38 <_obstack_memory_used@@Base+0x3518>
  42ad4c:	ldur	x8, [x29, #-16]
  42ad50:	ldr	x8, [x8, #56]
  42ad54:	ldur	x9, [x29, #-32]
  42ad58:	cmp	x8, x9
  42ad5c:	b.lt	42ad64 <_obstack_memory_used@@Base+0x3444>  // b.tstop
  42ad60:	b	42add4 <_obstack_memory_used@@Base+0x34b4>
  42ad64:	ldur	x8, [x29, #-16]
  42ad68:	ldr	x8, [x8, #64]
  42ad6c:	ldur	x9, [x29, #-16]
  42ad70:	ldr	x9, [x9, #48]
  42ad74:	ldr	x10, [sp, #24]
  42ad78:	ldrsw	x10, [x10, #180]
  42ad7c:	add	x9, x9, x10
  42ad80:	cmp	x8, x9
  42ad84:	b.le	42ad8c <_obstack_memory_used@@Base+0x346c>
  42ad88:	b	42add4 <_obstack_memory_used@@Base+0x34b4>
  42ad8c:	ldur	x0, [x29, #-16]
  42ad90:	ldur	x8, [x29, #-16]
  42ad94:	ldr	x8, [x8, #64]
  42ad98:	mov	x9, #0x2                   	// #2
  42ad9c:	mul	x1, x8, x9
  42ada0:	bl	42bc10 <_obstack_memory_used@@Base+0x42f0>
  42ada4:	str	w0, [sp, #20]
  42ada8:	ldr	w10, [sp, #20]
  42adac:	cmp	w10, #0x0
  42adb0:	cset	w10, ne  // ne = any
  42adb4:	and	w10, w10, #0x1
  42adb8:	mov	w1, w10
  42adbc:	sxtw	x8, w1
  42adc0:	cbz	x8, 42add0 <_obstack_memory_used@@Base+0x34b0>
  42adc4:	ldr	w8, [sp, #20]
  42adc8:	stur	w8, [x29, #-4]
  42adcc:	b	42ae38 <_obstack_memory_used@@Base+0x3518>
  42add0:	b	42ad18 <_obstack_memory_used@@Base+0x33f8>
  42add4:	b	42ade0 <_obstack_memory_used@@Base+0x34c0>
  42add8:	ldur	x0, [x29, #-16]
  42addc:	bl	42c97c <_obstack_memory_used@@Base+0x505c>
  42ade0:	b	42ae34 <_obstack_memory_used@@Base+0x3514>
  42ade4:	ldr	x8, [sp, #24]
  42ade8:	ldr	w9, [x8, #180]
  42adec:	cmp	w9, #0x1
  42adf0:	b.le	42ae00 <_obstack_memory_used@@Base+0x34e0>
  42adf4:	ldur	x0, [x29, #-16]
  42adf8:	bl	42ca88 <_obstack_memory_used@@Base+0x5168>
  42adfc:	b	42ae34 <_obstack_memory_used@@Base+0x3514>
  42ae00:	ldr	x8, [sp, #40]
  42ae04:	cbz	x8, 42ae14 <_obstack_memory_used@@Base+0x34f4>
  42ae08:	ldur	x0, [x29, #-16]
  42ae0c:	bl	42cdcc <_obstack_memory_used@@Base+0x54ac>
  42ae10:	b	42ae34 <_obstack_memory_used@@Base+0x3514>
  42ae14:	ldur	x8, [x29, #-16]
  42ae18:	ldr	x8, [x8, #64]
  42ae1c:	ldur	x9, [x29, #-16]
  42ae20:	str	x8, [x9, #48]
  42ae24:	ldur	x8, [x29, #-16]
  42ae28:	ldr	x8, [x8, #64]
  42ae2c:	ldur	x9, [x29, #-16]
  42ae30:	str	x8, [x9, #56]
  42ae34:	stur	wzr, [x29, #-4]
  42ae38:	ldur	w0, [x29, #-4]
  42ae3c:	ldp	x29, x30, [sp, #80]
  42ae40:	add	sp, sp, #0x60
  42ae44:	ret
  42ae48:	sub	sp, sp, #0x40
  42ae4c:	stp	x29, x30, [sp, #48]
  42ae50:	add	x29, sp, #0x30
  42ae54:	stur	x0, [x29, #-8]
  42ae58:	ldur	x8, [x29, #-8]
  42ae5c:	ldr	x8, [x8]
  42ae60:	stur	x8, [x29, #-16]
  42ae64:	ldur	x8, [x29, #-16]
  42ae68:	ldr	x8, [x8, #112]
  42ae6c:	str	x8, [sp, #24]
  42ae70:	ldr	x8, [sp, #24]
  42ae74:	cbz	x8, 42ae98 <_obstack_memory_used@@Base+0x3578>
  42ae78:	ldr	x8, [sp, #24]
  42ae7c:	ldr	x8, [x8]
  42ae80:	str	x8, [sp, #16]
  42ae84:	ldr	x0, [sp, #24]
  42ae88:	bl	4026c0 <free@plt>
  42ae8c:	ldr	x8, [sp, #16]
  42ae90:	str	x8, [sp, #24]
  42ae94:	b	42ae70 <_obstack_memory_used@@Base+0x3550>
  42ae98:	ldur	x8, [x29, #-16]
  42ae9c:	mov	x9, xzr
  42aea0:	str	x9, [x8, #112]
  42aea4:	ldur	x8, [x29, #-16]
  42aea8:	mov	w10, #0xf                   	// #15
  42aeac:	str	w10, [x8, #128]
  42aeb0:	ldur	x8, [x29, #-16]
  42aeb4:	str	x9, [x8, #104]
  42aeb8:	ldur	x8, [x29, #-16]
  42aebc:	ldr	x0, [x8, #32]
  42aec0:	str	x9, [sp, #8]
  42aec4:	bl	4026c0 <free@plt>
  42aec8:	ldur	x8, [x29, #-16]
  42aecc:	ldr	x9, [sp, #8]
  42aed0:	str	x9, [x8, #32]
  42aed4:	ldp	x29, x30, [sp, #48]
  42aed8:	add	sp, sp, #0x40
  42aedc:	ret
  42aee0:	sub	sp, sp, #0x20
  42aee4:	stp	x29, x30, [sp, #16]
  42aee8:	add	x29, sp, #0x10
  42aeec:	str	x0, [sp, #8]
  42aef0:	ldr	x8, [sp, #8]
  42aef4:	ldr	x0, [x8, #16]
  42aef8:	bl	4026c0 <free@plt>
  42aefc:	ldr	x8, [sp, #8]
  42af00:	ldr	x0, [x8, #24]
  42af04:	bl	4026c0 <free@plt>
  42af08:	ldr	x8, [sp, #8]
  42af0c:	ldrb	w9, [x8, #139]
  42af10:	cbz	w9, 42af20 <_obstack_memory_used@@Base+0x3600>
  42af14:	ldr	x8, [sp, #8]
  42af18:	ldr	x0, [x8, #8]
  42af1c:	bl	4026c0 <free@plt>
  42af20:	ldp	x29, x30, [sp, #16]
  42af24:	add	sp, sp, #0x20
  42af28:	ret
  42af2c:	sub	sp, sp, #0x80
  42af30:	stp	x29, x30, [sp, #112]
  42af34:	add	x29, sp, #0x70
  42af38:	mov	x8, xzr
  42af3c:	add	x9, sp, #0x18
  42af40:	stur	x0, [x29, #-16]
  42af44:	stur	x1, [x29, #-24]
  42af48:	stur	x2, [x29, #-32]
  42af4c:	stur	x3, [x29, #-40]
  42af50:	ldur	x10, [x29, #-24]
  42af54:	ldr	x10, [x10]
  42af58:	stur	x10, [x29, #-48]
  42af5c:	ldur	x10, [x29, #-32]
  42af60:	ldur	x11, [x29, #-48]
  42af64:	str	x10, [x11, #216]
  42af68:	ldur	x1, [x29, #-16]
  42af6c:	ldur	x10, [x29, #-32]
  42af70:	orr	x2, x10, #0x800000
  42af74:	mov	x0, x9
  42af78:	str	x8, [sp, #16]
  42af7c:	str	x9, [sp, #8]
  42af80:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  42af84:	ldur	x0, [x29, #-16]
  42af88:	ldur	x1, [x29, #-24]
  42af8c:	ldur	x3, [x29, #-32]
  42af90:	ldur	x5, [x29, #-40]
  42af94:	ldr	x2, [sp, #8]
  42af98:	ldr	x4, [sp, #16]
  42af9c:	bl	42cee8 <_obstack_memory_used@@Base+0x55c8>
  42afa0:	str	x0, [sp, #56]
  42afa4:	ldur	x8, [x29, #-40]
  42afa8:	ldr	w12, [x8]
  42afac:	mov	w13, #0x0                   	// #0
  42afb0:	str	w13, [sp, #4]
  42afb4:	cbz	w12, 42afc8 <_obstack_memory_used@@Base+0x36a8>
  42afb8:	ldr	x8, [sp, #56]
  42afbc:	cmp	x8, #0x0
  42afc0:	cset	w9, eq  // eq = none
  42afc4:	str	w9, [sp, #4]
  42afc8:	ldr	w8, [sp, #4]
  42afcc:	and	w8, w8, #0x1
  42afd0:	mov	w0, w8
  42afd4:	sxtw	x9, w0
  42afd8:	cbz	x9, 42afe8 <_obstack_memory_used@@Base+0x36c8>
  42afdc:	mov	x8, xzr
  42afe0:	stur	x8, [x29, #-8]
  42afe4:	b	42b084 <_obstack_memory_used@@Base+0x3764>
  42afe8:	ldur	x0, [x29, #-48]
  42afec:	mov	x8, xzr
  42aff0:	mov	x1, x8
  42aff4:	mov	x2, x8
  42aff8:	mov	w3, #0x2                   	// #2
  42affc:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42b000:	str	x0, [sp, #48]
  42b004:	ldr	x8, [sp, #56]
  42b008:	cbz	x8, 42b028 <_obstack_memory_used@@Base+0x3708>
  42b00c:	ldur	x0, [x29, #-48]
  42b010:	ldr	x1, [sp, #56]
  42b014:	ldr	x2, [sp, #48]
  42b018:	mov	w3, #0x10                  	// #16
  42b01c:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42b020:	str	x0, [sp, #40]
  42b024:	b	42b030 <_obstack_memory_used@@Base+0x3710>
  42b028:	ldr	x8, [sp, #48]
  42b02c:	str	x8, [sp, #40]
  42b030:	ldr	x8, [sp, #48]
  42b034:	mov	w9, #0x1                   	// #1
  42b038:	str	w9, [sp]
  42b03c:	cbz	x8, 42b050 <_obstack_memory_used@@Base+0x3730>
  42b040:	ldr	x8, [sp, #40]
  42b044:	cmp	x8, #0x0
  42b048:	cset	w9, eq  // eq = none
  42b04c:	str	w9, [sp]
  42b050:	ldr	w8, [sp]
  42b054:	and	w8, w8, #0x1
  42b058:	mov	w0, w8
  42b05c:	sxtw	x9, w0
  42b060:	cbz	x9, 42b07c <_obstack_memory_used@@Base+0x375c>
  42b064:	ldur	x8, [x29, #-40]
  42b068:	mov	w9, #0xc                   	// #12
  42b06c:	str	w9, [x8]
  42b070:	mov	x8, xzr
  42b074:	stur	x8, [x29, #-8]
  42b078:	b	42b084 <_obstack_memory_used@@Base+0x3764>
  42b07c:	ldr	x8, [sp, #40]
  42b080:	stur	x8, [x29, #-8]
  42b084:	ldur	x0, [x29, #-8]
  42b088:	ldp	x29, x30, [sp, #112]
  42b08c:	add	sp, sp, #0x80
  42b090:	ret
  42b094:	sub	sp, sp, #0x50
  42b098:	stp	x29, x30, [sp, #64]
  42b09c:	add	x29, sp, #0x40
  42b0a0:	mov	x8, #0x8                   	// #8
  42b0a4:	mov	x9, #0x18                  	// #24
  42b0a8:	stur	x0, [x29, #-16]
  42b0ac:	ldur	x10, [x29, #-16]
  42b0b0:	ldr	x10, [x10]
  42b0b4:	stur	x10, [x29, #-24]
  42b0b8:	ldur	x10, [x29, #-24]
  42b0bc:	ldr	x10, [x10, #8]
  42b0c0:	mul	x0, x10, x8
  42b0c4:	str	x8, [sp, #16]
  42b0c8:	str	x9, [sp, #8]
  42b0cc:	bl	402450 <malloc@plt>
  42b0d0:	ldur	x8, [x29, #-24]
  42b0d4:	str	x0, [x8, #24]
  42b0d8:	ldur	x8, [x29, #-24]
  42b0dc:	ldr	x8, [x8, #8]
  42b0e0:	ldr	x9, [sp, #16]
  42b0e4:	mul	x0, x8, x9
  42b0e8:	bl	402450 <malloc@plt>
  42b0ec:	ldur	x8, [x29, #-24]
  42b0f0:	str	x0, [x8, #32]
  42b0f4:	ldur	x8, [x29, #-24]
  42b0f8:	ldr	x8, [x8, #8]
  42b0fc:	ldr	x9, [sp, #8]
  42b100:	mul	x0, x8, x9
  42b104:	bl	402450 <malloc@plt>
  42b108:	ldur	x8, [x29, #-24]
  42b10c:	str	x0, [x8, #40]
  42b110:	ldur	x8, [x29, #-24]
  42b114:	ldr	x8, [x8, #8]
  42b118:	ldr	x9, [sp, #8]
  42b11c:	mul	x0, x8, x9
  42b120:	bl	402450 <malloc@plt>
  42b124:	ldur	x8, [x29, #-24]
  42b128:	str	x0, [x8, #48]
  42b12c:	ldur	x8, [x29, #-24]
  42b130:	ldr	x8, [x8, #24]
  42b134:	mov	w11, #0x1                   	// #1
  42b138:	str	w11, [sp, #4]
  42b13c:	cbz	x8, 42b17c <_obstack_memory_used@@Base+0x385c>
  42b140:	ldur	x8, [x29, #-24]
  42b144:	ldr	x8, [x8, #32]
  42b148:	mov	w9, #0x1                   	// #1
  42b14c:	str	w9, [sp, #4]
  42b150:	cbz	x8, 42b17c <_obstack_memory_used@@Base+0x385c>
  42b154:	ldur	x8, [x29, #-24]
  42b158:	ldr	x8, [x8, #40]
  42b15c:	mov	w9, #0x1                   	// #1
  42b160:	str	w9, [sp, #4]
  42b164:	cbz	x8, 42b17c <_obstack_memory_used@@Base+0x385c>
  42b168:	ldur	x8, [x29, #-24]
  42b16c:	ldr	x8, [x8, #48]
  42b170:	cmp	x8, #0x0
  42b174:	cset	w9, eq  // eq = none
  42b178:	str	w9, [sp, #4]
  42b17c:	ldr	w8, [sp, #4]
  42b180:	and	w8, w8, #0x1
  42b184:	mov	w0, w8
  42b188:	sxtw	x9, w0
  42b18c:	cbz	x9, 42b19c <_obstack_memory_used@@Base+0x387c>
  42b190:	mov	w8, #0xc                   	// #12
  42b194:	stur	w8, [x29, #-4]
  42b198:	b	42b454 <_obstack_memory_used@@Base+0x3b34>
  42b19c:	ldur	x8, [x29, #-16]
  42b1a0:	ldr	x8, [x8, #48]
  42b1a4:	mov	x9, #0x8                   	// #8
  42b1a8:	mul	x0, x8, x9
  42b1ac:	bl	402450 <malloc@plt>
  42b1b0:	ldur	x8, [x29, #-24]
  42b1b4:	str	x0, [x8, #224]
  42b1b8:	ldur	x8, [x29, #-24]
  42b1bc:	ldr	x8, [x8, #224]
  42b1c0:	cbz	x8, 42b28c <_obstack_memory_used@@Base+0x396c>
  42b1c4:	str	xzr, [sp, #24]
  42b1c8:	ldr	x8, [sp, #24]
  42b1cc:	ldur	x9, [x29, #-16]
  42b1d0:	ldr	x9, [x9, #48]
  42b1d4:	cmp	x8, x9
  42b1d8:	b.cs	42b200 <_obstack_memory_used@@Base+0x38e0>  // b.hs, b.nlast
  42b1dc:	ldr	x8, [sp, #24]
  42b1e0:	ldur	x9, [x29, #-24]
  42b1e4:	ldr	x9, [x9, #224]
  42b1e8:	ldr	x10, [sp, #24]
  42b1ec:	str	x8, [x9, x10, lsl #3]
  42b1f0:	ldr	x8, [sp, #24]
  42b1f4:	add	x8, x8, #0x1
  42b1f8:	str	x8, [sp, #24]
  42b1fc:	b	42b1c8 <_obstack_memory_used@@Base+0x38a8>
  42b200:	ldur	x8, [x29, #-24]
  42b204:	ldr	x0, [x8, #104]
  42b208:	ldur	x2, [x29, #-24]
  42b20c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0xa6e0>
  42b210:	add	x1, x1, #0x338
  42b214:	bl	432234 <_obstack_memory_used@@Base+0xa914>
  42b218:	str	xzr, [sp, #24]
  42b21c:	ldr	x8, [sp, #24]
  42b220:	ldur	x9, [x29, #-16]
  42b224:	ldr	x9, [x9, #48]
  42b228:	cmp	x8, x9
  42b22c:	b.cs	42b260 <_obstack_memory_used@@Base+0x3940>  // b.hs, b.nlast
  42b230:	ldur	x8, [x29, #-24]
  42b234:	ldr	x8, [x8, #224]
  42b238:	ldr	x9, [sp, #24]
  42b23c:	ldr	x8, [x8, x9, lsl #3]
  42b240:	ldr	x9, [sp, #24]
  42b244:	cmp	x8, x9
  42b248:	b.eq	42b250 <_obstack_memory_used@@Base+0x3930>  // b.none
  42b24c:	b	42b260 <_obstack_memory_used@@Base+0x3940>
  42b250:	ldr	x8, [sp, #24]
  42b254:	add	x8, x8, #0x1
  42b258:	str	x8, [sp, #24]
  42b25c:	b	42b21c <_obstack_memory_used@@Base+0x38fc>
  42b260:	ldr	x8, [sp, #24]
  42b264:	ldur	x9, [x29, #-16]
  42b268:	ldr	x9, [x9, #48]
  42b26c:	cmp	x8, x9
  42b270:	b.ne	42b28c <_obstack_memory_used@@Base+0x396c>  // b.any
  42b274:	ldur	x8, [x29, #-24]
  42b278:	ldr	x0, [x8, #224]
  42b27c:	bl	4026c0 <free@plt>
  42b280:	ldur	x8, [x29, #-24]
  42b284:	mov	x9, xzr
  42b288:	str	x9, [x8, #224]
  42b28c:	ldur	x8, [x29, #-24]
  42b290:	ldr	x0, [x8, #104]
  42b294:	ldur	x2, [x29, #-16]
  42b298:	adrp	x1, 432000 <_obstack_memory_used@@Base+0xa6e0>
  42b29c:	add	x1, x1, #0x490
  42b2a0:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42b2a4:	stur	w0, [x29, #-28]
  42b2a8:	ldur	w9, [x29, #-28]
  42b2ac:	cmp	w9, #0x0
  42b2b0:	cset	w9, ne  // ne = any
  42b2b4:	and	w9, w9, #0x1
  42b2b8:	mov	w1, w9
  42b2bc:	sxtw	x8, w1
  42b2c0:	cbz	x8, 42b2d0 <_obstack_memory_used@@Base+0x39b0>
  42b2c4:	ldur	w8, [x29, #-28]
  42b2c8:	stur	w8, [x29, #-4]
  42b2cc:	b	42b454 <_obstack_memory_used@@Base+0x3b34>
  42b2d0:	ldur	x8, [x29, #-24]
  42b2d4:	ldr	x0, [x8, #104]
  42b2d8:	ldur	x2, [x29, #-24]
  42b2dc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0xa6e0>
  42b2e0:	add	x1, x1, #0x578
  42b2e4:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42b2e8:	stur	w0, [x29, #-28]
  42b2ec:	ldur	w9, [x29, #-28]
  42b2f0:	cmp	w9, #0x0
  42b2f4:	cset	w9, ne  // ne = any
  42b2f8:	and	w9, w9, #0x1
  42b2fc:	mov	w1, w9
  42b300:	sxtw	x8, w1
  42b304:	cbz	x8, 42b314 <_obstack_memory_used@@Base+0x39f4>
  42b308:	ldur	w8, [x29, #-28]
  42b30c:	stur	w8, [x29, #-4]
  42b310:	b	42b454 <_obstack_memory_used@@Base+0x3b34>
  42b314:	ldur	x8, [x29, #-24]
  42b318:	ldr	x0, [x8, #104]
  42b31c:	ldur	x2, [x29, #-24]
  42b320:	adrp	x1, 432000 <_obstack_memory_used@@Base+0xa6e0>
  42b324:	add	x1, x1, #0x68c
  42b328:	bl	432234 <_obstack_memory_used@@Base+0xa914>
  42b32c:	ldur	x8, [x29, #-24]
  42b330:	ldr	x8, [x8, #104]
  42b334:	ldur	x2, [x29, #-24]
  42b338:	mov	x0, x8
  42b33c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0xa6e0>
  42b340:	add	x1, x1, #0x758
  42b344:	bl	432234 <_obstack_memory_used@@Base+0xa914>
  42b348:	stur	w0, [x29, #-28]
  42b34c:	ldur	w9, [x29, #-28]
  42b350:	cmp	w9, #0x0
  42b354:	cset	w9, ne  // ne = any
  42b358:	and	w9, w9, #0x1
  42b35c:	mov	w1, w9
  42b360:	sxtw	x8, w1
  42b364:	cbz	x8, 42b374 <_obstack_memory_used@@Base+0x3a54>
  42b368:	ldur	w8, [x29, #-28]
  42b36c:	stur	w8, [x29, #-4]
  42b370:	b	42b454 <_obstack_memory_used@@Base+0x3b34>
  42b374:	ldur	x0, [x29, #-24]
  42b378:	bl	432980 <_obstack_memory_used@@Base+0xb060>
  42b37c:	stur	w0, [x29, #-28]
  42b380:	ldur	w8, [x29, #-28]
  42b384:	cmp	w8, #0x0
  42b388:	cset	w8, ne  // ne = any
  42b38c:	and	w8, w8, #0x1
  42b390:	mov	w1, w8
  42b394:	sxtw	x9, w1
  42b398:	cbz	x9, 42b3a8 <_obstack_memory_used@@Base+0x3a88>
  42b39c:	ldur	w8, [x29, #-28]
  42b3a0:	stur	w8, [x29, #-4]
  42b3a4:	b	42b454 <_obstack_memory_used@@Base+0x3b34>
  42b3a8:	ldur	x8, [x29, #-16]
  42b3ac:	ldrb	w9, [x8, #56]
  42b3b0:	mov	w10, #0x4                   	// #4
  42b3b4:	lsr	w9, w9, w10
  42b3b8:	and	w9, w9, #0x1
  42b3bc:	and	w9, w9, #0xff
  42b3c0:	cbnz	w9, 42b3ec <_obstack_memory_used@@Base+0x3acc>
  42b3c4:	ldur	x8, [x29, #-16]
  42b3c8:	ldr	x8, [x8, #48]
  42b3cc:	cmp	x8, #0x0
  42b3d0:	cset	w9, ls  // ls = plast
  42b3d4:	tbnz	w9, #0, 42b3ec <_obstack_memory_used@@Base+0x3acc>
  42b3d8:	ldur	x8, [x29, #-24]
  42b3dc:	ldrb	w9, [x8, #176]
  42b3e0:	and	w9, w9, #0x1
  42b3e4:	and	w9, w9, #0xff
  42b3e8:	cbnz	w9, 42b3f8 <_obstack_memory_used@@Base+0x3ad8>
  42b3ec:	ldur	x8, [x29, #-24]
  42b3f0:	ldr	x8, [x8, #152]
  42b3f4:	cbz	x8, 42b44c <_obstack_memory_used@@Base+0x3b2c>
  42b3f8:	ldur	x8, [x29, #-24]
  42b3fc:	ldr	x8, [x8, #16]
  42b400:	mov	x9, #0x18                  	// #24
  42b404:	mul	x0, x8, x9
  42b408:	bl	402450 <malloc@plt>
  42b40c:	ldur	x8, [x29, #-24]
  42b410:	str	x0, [x8, #56]
  42b414:	ldur	x8, [x29, #-24]
  42b418:	ldr	x8, [x8, #56]
  42b41c:	cmp	x8, #0x0
  42b420:	cset	w10, eq  // eq = none
  42b424:	and	w10, w10, #0x1
  42b428:	mov	w0, w10
  42b42c:	sxtw	x8, w0
  42b430:	cbz	x8, 42b440 <_obstack_memory_used@@Base+0x3b20>
  42b434:	mov	w8, #0xc                   	// #12
  42b438:	stur	w8, [x29, #-4]
  42b43c:	b	42b454 <_obstack_memory_used@@Base+0x3b34>
  42b440:	ldur	x0, [x29, #-24]
  42b444:	bl	432acc <_obstack_memory_used@@Base+0xb1ac>
  42b448:	stur	w0, [x29, #-28]
  42b44c:	ldur	w8, [x29, #-28]
  42b450:	stur	w8, [x29, #-4]
  42b454:	ldur	w0, [x29, #-4]
  42b458:	ldp	x29, x30, [sp, #64]
  42b45c:	add	sp, sp, #0x50
  42b460:	ret
  42b464:	sub	sp, sp, #0x40
  42b468:	stp	x29, x30, [sp, #48]
  42b46c:	add	x29, sp, #0x30
  42b470:	mov	w8, #0x0                   	// #0
  42b474:	stur	x0, [x29, #-8]
  42b478:	sturb	w8, [x29, #-21]
  42b47c:	sturb	w8, [x29, #-22]
  42b480:	stur	xzr, [x29, #-16]
  42b484:	ldur	x8, [x29, #-16]
  42b488:	ldur	x9, [x29, #-8]
  42b48c:	ldr	x9, [x9, #16]
  42b490:	cmp	x8, x9
  42b494:	b.cs	42b610 <_obstack_memory_used@@Base+0x3cf0>  // b.hs, b.nlast
  42b498:	ldur	x8, [x29, #-8]
  42b49c:	ldr	x8, [x8]
  42b4a0:	ldur	x9, [x29, #-16]
  42b4a4:	mov	x10, #0x10                  	// #16
  42b4a8:	mul	x9, x10, x9
  42b4ac:	add	x8, x8, x9
  42b4b0:	ldr	w11, [x8, #8]
  42b4b4:	and	w11, w11, #0xff
  42b4b8:	subs	w11, w11, #0x1
  42b4bc:	mov	w8, w11
  42b4c0:	ubfx	x8, x8, #0, #32
  42b4c4:	cmp	x8, #0xb
  42b4c8:	str	x8, [sp, #8]
  42b4cc:	b.hi	42b5fc <_obstack_memory_used@@Base+0x3cdc>  // b.pmore
  42b4d0:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42b4d4:	add	x8, x8, #0x49c
  42b4d8:	ldr	x11, [sp, #8]
  42b4dc:	ldrsw	x10, [x8, x11, lsl #2]
  42b4e0:	add	x9, x8, x10
  42b4e4:	br	x9
  42b4e8:	ldur	x8, [x29, #-8]
  42b4ec:	ldr	x8, [x8]
  42b4f0:	ldur	x9, [x29, #-16]
  42b4f4:	mov	x10, #0x10                  	// #16
  42b4f8:	mul	x9, x10, x9
  42b4fc:	ldrb	w11, [x8, x9]
  42b500:	cmp	w11, #0x80
  42b504:	b.lt	42b510 <_obstack_memory_used@@Base+0x3bf0>  // b.tstop
  42b508:	mov	w8, #0x1                   	// #1
  42b50c:	sturb	w8, [x29, #-21]
  42b510:	b	42b600 <_obstack_memory_used@@Base+0x3ce0>
  42b514:	ldur	x8, [x29, #-8]
  42b518:	ldr	x8, [x8]
  42b51c:	ldur	x9, [x29, #-16]
  42b520:	mov	x10, #0x10                  	// #16
  42b524:	mul	x9, x10, x9
  42b528:	ldr	w11, [x8, x9]
  42b52c:	cmp	w11, #0x10
  42b530:	str	w11, [sp, #4]
  42b534:	b.eq	42b574 <_obstack_memory_used@@Base+0x3c54>  // b.none
  42b538:	b	42b53c <_obstack_memory_used@@Base+0x3c1c>
  42b53c:	ldr	w8, [sp, #4]
  42b540:	cmp	w8, #0x20
  42b544:	b.eq	42b574 <_obstack_memory_used@@Base+0x3c54>  // b.none
  42b548:	b	42b54c <_obstack_memory_used@@Base+0x3c2c>
  42b54c:	ldr	w8, [sp, #4]
  42b550:	cmp	w8, #0x40
  42b554:	b.eq	42b574 <_obstack_memory_used@@Base+0x3c54>  // b.none
  42b558:	b	42b55c <_obstack_memory_used@@Base+0x3c3c>
  42b55c:	ldr	w8, [sp, #4]
  42b560:	cmp	w8, #0x80
  42b564:	cset	w9, eq  // eq = none
  42b568:	eor	w9, w9, #0x1
  42b56c:	tbnz	w9, #0, 42b578 <_obstack_memory_used@@Base+0x3c58>
  42b570:	b	42b574 <_obstack_memory_used@@Base+0x3c54>
  42b574:	b	42b57c <_obstack_memory_used@@Base+0x3c5c>
  42b578:	b	42b774 <_obstack_memory_used@@Base+0x3e54>
  42b57c:	b	42b600 <_obstack_memory_used@@Base+0x3ce0>
  42b580:	mov	w8, #0x1                   	// #1
  42b584:	sturb	w8, [x29, #-22]
  42b588:	b	42b600 <_obstack_memory_used@@Base+0x3ce0>
  42b58c:	b	42b600 <_obstack_memory_used@@Base+0x3ce0>
  42b590:	b	42b774 <_obstack_memory_used@@Base+0x3e54>
  42b594:	str	wzr, [sp, #20]
  42b598:	mov	w8, #0x2                   	// #2
  42b59c:	stur	w8, [x29, #-20]
  42b5a0:	ldur	w8, [x29, #-20]
  42b5a4:	cmp	w8, #0x4
  42b5a8:	b.ge	42b5f8 <_obstack_memory_used@@Base+0x3cd8>  // b.tcont
  42b5ac:	ldur	x8, [x29, #-8]
  42b5b0:	ldr	x8, [x8]
  42b5b4:	ldur	x9, [x29, #-16]
  42b5b8:	mov	x10, #0x10                  	// #16
  42b5bc:	mul	x9, x10, x9
  42b5c0:	add	x8, x8, x9
  42b5c4:	ldr	x8, [x8]
  42b5c8:	ldursw	x9, [x29, #-20]
  42b5cc:	ldr	x8, [x8, x9, lsl #3]
  42b5d0:	ldr	w11, [sp, #20]
  42b5d4:	mov	w9, w11
  42b5d8:	lsr	x8, x8, x9
  42b5dc:	cbz	x8, 42b5e4 <_obstack_memory_used@@Base+0x3cc4>
  42b5e0:	b	42b774 <_obstack_memory_used@@Base+0x3e54>
  42b5e4:	str	wzr, [sp, #20]
  42b5e8:	ldur	w8, [x29, #-20]
  42b5ec:	add	w8, w8, #0x1
  42b5f0:	stur	w8, [x29, #-20]
  42b5f4:	b	42b5a0 <_obstack_memory_used@@Base+0x3c80>
  42b5f8:	b	42b600 <_obstack_memory_used@@Base+0x3ce0>
  42b5fc:	bl	402610 <abort@plt>
  42b600:	ldur	x8, [x29, #-16]
  42b604:	add	x8, x8, #0x1
  42b608:	stur	x8, [x29, #-16]
  42b60c:	b	42b484 <_obstack_memory_used@@Base+0x3b64>
  42b610:	ldurb	w8, [x29, #-21]
  42b614:	tbnz	w8, #0, 42b624 <_obstack_memory_used@@Base+0x3d04>
  42b618:	ldurb	w8, [x29, #-22]
  42b61c:	tbnz	w8, #0, 42b624 <_obstack_memory_used@@Base+0x3d04>
  42b620:	b	42b70c <_obstack_memory_used@@Base+0x3dec>
  42b624:	stur	xzr, [x29, #-16]
  42b628:	ldur	x8, [x29, #-16]
  42b62c:	ldur	x9, [x29, #-8]
  42b630:	ldr	x9, [x9, #16]
  42b634:	cmp	x8, x9
  42b638:	b.cs	42b70c <_obstack_memory_used@@Base+0x3dec>  // b.hs, b.nlast
  42b63c:	ldur	x8, [x29, #-8]
  42b640:	ldr	x8, [x8]
  42b644:	ldur	x9, [x29, #-16]
  42b648:	mov	x10, #0x10                  	// #16
  42b64c:	mul	x9, x10, x9
  42b650:	add	x8, x8, x9
  42b654:	ldr	w11, [x8, #8]
  42b658:	and	w11, w11, #0xff
  42b65c:	cmp	w11, #0x1
  42b660:	b.ne	42b6ac <_obstack_memory_used@@Base+0x3d8c>  // b.any
  42b664:	ldur	x8, [x29, #-8]
  42b668:	ldr	x8, [x8]
  42b66c:	ldur	x9, [x29, #-16]
  42b670:	mov	x10, #0x10                  	// #16
  42b674:	mul	x9, x10, x9
  42b678:	ldrb	w11, [x8, x9]
  42b67c:	cmp	w11, #0x80
  42b680:	b.lt	42b6ac <_obstack_memory_used@@Base+0x3d8c>  // b.tstop
  42b684:	ldur	x8, [x29, #-8]
  42b688:	ldr	x8, [x8]
  42b68c:	ldur	x9, [x29, #-16]
  42b690:	mov	x10, #0x10                  	// #16
  42b694:	mul	x9, x10, x9
  42b698:	add	x8, x8, x9
  42b69c:	ldr	w11, [x8, #8]
  42b6a0:	and	w11, w11, #0xffdfffff
  42b6a4:	str	w11, [x8, #8]
  42b6a8:	b	42b6fc <_obstack_memory_used@@Base+0x3ddc>
  42b6ac:	ldur	x8, [x29, #-8]
  42b6b0:	ldr	x8, [x8]
  42b6b4:	ldur	x9, [x29, #-16]
  42b6b8:	mov	x10, #0x10                  	// #16
  42b6bc:	mul	x9, x10, x9
  42b6c0:	add	x8, x8, x9
  42b6c4:	ldr	w11, [x8, #8]
  42b6c8:	and	w11, w11, #0xff
  42b6cc:	cmp	w11, #0x5
  42b6d0:	b.ne	42b6fc <_obstack_memory_used@@Base+0x3ddc>  // b.any
  42b6d4:	ldur	x8, [x29, #-8]
  42b6d8:	ldr	x8, [x8]
  42b6dc:	ldur	x9, [x29, #-16]
  42b6e0:	mov	x10, #0x10                  	// #16
  42b6e4:	mul	x9, x10, x9
  42b6e8:	add	x8, x8, x9
  42b6ec:	ldr	w11, [x8, #8]
  42b6f0:	and	w11, w11, #0xffffff00
  42b6f4:	orr	w11, w11, #0x7
  42b6f8:	str	w11, [x8, #8]
  42b6fc:	ldur	x8, [x29, #-16]
  42b700:	add	x8, x8, #0x1
  42b704:	stur	x8, [x29, #-16]
  42b708:	b	42b628 <_obstack_memory_used@@Base+0x3d08>
  42b70c:	ldur	x8, [x29, #-8]
  42b710:	mov	w9, #0x1                   	// #1
  42b714:	str	w9, [x8, #180]
  42b718:	ldur	x8, [x29, #-8]
  42b71c:	ldrb	w9, [x8, #176]
  42b720:	and	w9, w9, #0xfffffffb
  42b724:	strb	w9, [x8, #176]
  42b728:	ldur	x8, [x29, #-8]
  42b72c:	ldr	x8, [x8, #152]
  42b730:	cmp	x8, #0x0
  42b734:	cset	w9, gt
  42b738:	mov	w10, #0x1                   	// #1
  42b73c:	str	w10, [sp]
  42b740:	tbnz	w9, #0, 42b74c <_obstack_memory_used@@Base+0x3e2c>
  42b744:	ldurb	w8, [x29, #-22]
  42b748:	str	w8, [sp]
  42b74c:	ldr	w8, [sp]
  42b750:	mov	w9, #0x1                   	// #1
  42b754:	and	w8, w8, #0x1
  42b758:	ldur	x10, [x29, #-8]
  42b75c:	ldrb	w11, [x10, #176]
  42b760:	and	w8, w8, #0x1
  42b764:	lsl	w8, w8, w9
  42b768:	and	w9, w11, #0xfffffffd
  42b76c:	orr	w8, w9, w8
  42b770:	strb	w8, [x10, #176]
  42b774:	ldp	x29, x30, [sp, #48]
  42b778:	add	sp, sp, #0x40
  42b77c:	ret
  42b780:	sub	sp, sp, #0xa0
  42b784:	stp	x29, x30, [sp, #144]
  42b788:	add	x29, sp, #0x90
  42b78c:	sub	x8, x29, #0x40
  42b790:	stur	x0, [x29, #-16]
  42b794:	ldur	x9, [x29, #-16]
  42b798:	ldr	x9, [x9, #104]
  42b79c:	mov	x10, #0x18                  	// #24
  42b7a0:	ldr	x9, [x9, #24]
  42b7a4:	ldr	x9, [x9, #56]
  42b7a8:	stur	x9, [x29, #-24]
  42b7ac:	ldur	x9, [x29, #-24]
  42b7b0:	ldur	x11, [x29, #-16]
  42b7b4:	str	x9, [x11, #144]
  42b7b8:	ldur	x9, [x29, #-16]
  42b7bc:	ldr	x9, [x9, #48]
  42b7c0:	ldur	x11, [x29, #-24]
  42b7c4:	mul	x10, x10, x11
  42b7c8:	add	x1, x9, x10
  42b7cc:	mov	x0, x8
  42b7d0:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  42b7d4:	stur	w0, [x29, #-36]
  42b7d8:	ldur	w12, [x29, #-36]
  42b7dc:	cmp	w12, #0x0
  42b7e0:	cset	w12, ne  // ne = any
  42b7e4:	and	w12, w12, #0x1
  42b7e8:	mov	w1, w12
  42b7ec:	sxtw	x8, w1
  42b7f0:	cbz	x8, 42b800 <_obstack_memory_used@@Base+0x3ee0>
  42b7f4:	ldur	w8, [x29, #-36]
  42b7f8:	stur	w8, [x29, #-4]
  42b7fc:	b	42baf8 <_obstack_memory_used@@Base+0x41d8>
  42b800:	ldur	x8, [x29, #-16]
  42b804:	ldr	x8, [x8, #152]
  42b808:	cmp	x8, #0x0
  42b80c:	cset	w9, le
  42b810:	tbnz	w9, #0, 42b99c <_obstack_memory_used@@Base+0x407c>
  42b814:	stur	xzr, [x29, #-32]
  42b818:	ldur	x8, [x29, #-32]
  42b81c:	ldur	x9, [x29, #-56]
  42b820:	cmp	x8, x9
  42b824:	b.ge	42b99c <_obstack_memory_used@@Base+0x407c>  // b.tcont
  42b828:	mov	x8, #0x10                  	// #16
  42b82c:	sub	x9, x29, #0x40
  42b830:	ldr	x9, [x9, #16]
  42b834:	ldur	x10, [x29, #-32]
  42b838:	ldr	x9, [x9, x10, lsl #3]
  42b83c:	str	x9, [sp, #72]
  42b840:	ldur	x9, [x29, #-16]
  42b844:	ldr	x9, [x9]
  42b848:	ldr	x10, [sp, #72]
  42b84c:	mul	x8, x8, x10
  42b850:	add	x8, x9, x8
  42b854:	ldr	w11, [x8, #8]
  42b858:	and	w11, w11, #0xff
  42b85c:	str	w11, [sp, #68]
  42b860:	ldr	w11, [sp, #68]
  42b864:	cmp	w11, #0x4
  42b868:	b.eq	42b870 <_obstack_memory_used@@Base+0x3f50>  // b.none
  42b86c:	b	42b98c <_obstack_memory_used@@Base+0x406c>
  42b870:	str	xzr, [sp, #56]
  42b874:	ldr	x8, [sp, #56]
  42b878:	ldur	x9, [x29, #-56]
  42b87c:	cmp	x8, x9
  42b880:	b.ge	42b8fc <_obstack_memory_used@@Base+0x3fdc>  // b.tcont
  42b884:	ldur	x8, [x29, #-16]
  42b888:	ldr	x8, [x8]
  42b88c:	mov	x9, #0x10                  	// #16
  42b890:	sub	x10, x29, #0x40
  42b894:	ldr	x10, [x10, #16]
  42b898:	ldr	x11, [sp, #56]
  42b89c:	ldr	x10, [x10, x11, lsl #3]
  42b8a0:	mul	x9, x9, x10
  42b8a4:	add	x8, x8, x9
  42b8a8:	str	x8, [sp, #48]
  42b8ac:	ldr	x8, [sp, #48]
  42b8b0:	ldr	w12, [x8, #8]
  42b8b4:	and	w12, w12, #0xff
  42b8b8:	cmp	w12, #0x9
  42b8bc:	b.ne	42b8ec <_obstack_memory_used@@Base+0x3fcc>  // b.any
  42b8c0:	ldr	x8, [sp, #48]
  42b8c4:	ldr	x8, [x8]
  42b8c8:	ldur	x9, [x29, #-16]
  42b8cc:	ldr	x9, [x9]
  42b8d0:	ldr	x10, [sp, #72]
  42b8d4:	mov	x11, #0x10                  	// #16
  42b8d8:	mul	x10, x11, x10
  42b8dc:	ldr	x9, [x9, x10]
  42b8e0:	cmp	x8, x9
  42b8e4:	b.ne	42b8ec <_obstack_memory_used@@Base+0x3fcc>  // b.any
  42b8e8:	b	42b8fc <_obstack_memory_used@@Base+0x3fdc>
  42b8ec:	ldr	x8, [sp, #56]
  42b8f0:	add	x8, x8, #0x1
  42b8f4:	str	x8, [sp, #56]
  42b8f8:	b	42b874 <_obstack_memory_used@@Base+0x3f54>
  42b8fc:	ldr	x8, [sp, #56]
  42b900:	ldur	x9, [x29, #-56]
  42b904:	cmp	x8, x9
  42b908:	b.ne	42b910 <_obstack_memory_used@@Base+0x3ff0>  // b.any
  42b90c:	b	42b98c <_obstack_memory_used@@Base+0x406c>
  42b910:	ldr	w8, [sp, #68]
  42b914:	cmp	w8, #0x4
  42b918:	b.ne	42b98c <_obstack_memory_used@@Base+0x406c>  // b.any
  42b91c:	ldur	x8, [x29, #-16]
  42b920:	ldr	x8, [x8, #40]
  42b924:	ldr	x9, [sp, #72]
  42b928:	mov	x10, #0x18                  	// #24
  42b92c:	mul	x9, x10, x9
  42b930:	add	x8, x8, x9
  42b934:	ldr	x8, [x8, #16]
  42b938:	ldr	x8, [x8]
  42b93c:	str	x8, [sp, #40]
  42b940:	ldr	x1, [sp, #40]
  42b944:	sub	x0, x29, #0x40
  42b948:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  42b94c:	cbnz	x0, 42b98c <_obstack_memory_used@@Base+0x406c>
  42b950:	ldur	x8, [x29, #-16]
  42b954:	ldr	x8, [x8, #48]
  42b958:	ldr	x9, [sp, #40]
  42b95c:	mov	x10, #0x18                  	// #24
  42b960:	mul	x9, x10, x9
  42b964:	add	x1, x8, x9
  42b968:	sub	x0, x29, #0x40
  42b96c:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  42b970:	str	w0, [sp, #36]
  42b974:	ldr	w11, [sp, #36]
  42b978:	cbz	w11, 42b988 <_obstack_memory_used@@Base+0x4068>
  42b97c:	ldr	w8, [sp, #36]
  42b980:	stur	w8, [x29, #-4]
  42b984:	b	42baf8 <_obstack_memory_used@@Base+0x41d8>
  42b988:	stur	xzr, [x29, #-32]
  42b98c:	ldur	x8, [x29, #-32]
  42b990:	add	x8, x8, #0x1
  42b994:	stur	x8, [x29, #-32]
  42b998:	b	42b818 <_obstack_memory_used@@Base+0x3ef8>
  42b99c:	ldur	x1, [x29, #-16]
  42b9a0:	sub	x0, x29, #0x24
  42b9a4:	sub	x2, x29, #0x40
  42b9a8:	mov	w8, wzr
  42b9ac:	mov	w3, w8
  42b9b0:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  42b9b4:	ldur	x9, [x29, #-16]
  42b9b8:	str	x0, [x9, #72]
  42b9bc:	ldur	x9, [x29, #-16]
  42b9c0:	ldr	x9, [x9, #72]
  42b9c4:	cmp	x9, #0x0
  42b9c8:	cset	w8, eq  // eq = none
  42b9cc:	and	w8, w8, #0x1
  42b9d0:	mov	w0, w8
  42b9d4:	sxtw	x9, w0
  42b9d8:	cbz	x9, 42b9e8 <_obstack_memory_used@@Base+0x40c8>
  42b9dc:	ldur	w8, [x29, #-36]
  42b9e0:	stur	w8, [x29, #-4]
  42b9e4:	b	42baf8 <_obstack_memory_used@@Base+0x41d8>
  42b9e8:	ldur	x8, [x29, #-16]
  42b9ec:	ldr	x8, [x8, #72]
  42b9f0:	ldrb	w9, [x8, #104]
  42b9f4:	mov	w10, #0x7                   	// #7
  42b9f8:	lsr	w9, w9, w10
  42b9fc:	and	w9, w9, #0xff
  42ba00:	cbz	w9, 42bac8 <_obstack_memory_used@@Base+0x41a8>
  42ba04:	ldur	x1, [x29, #-16]
  42ba08:	sub	x8, x29, #0x24
  42ba0c:	mov	x0, x8
  42ba10:	sub	x9, x29, #0x40
  42ba14:	mov	x2, x9
  42ba18:	mov	w3, #0x1                   	// #1
  42ba1c:	str	x8, [sp, #24]
  42ba20:	str	x9, [sp, #16]
  42ba24:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  42ba28:	ldur	x8, [x29, #-16]
  42ba2c:	str	x0, [x8, #80]
  42ba30:	ldur	x1, [x29, #-16]
  42ba34:	ldr	x0, [sp, #24]
  42ba38:	ldr	x2, [sp, #16]
  42ba3c:	mov	w3, #0x2                   	// #2
  42ba40:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  42ba44:	ldur	x8, [x29, #-16]
  42ba48:	str	x0, [x8, #88]
  42ba4c:	ldur	x1, [x29, #-16]
  42ba50:	ldr	x0, [sp, #24]
  42ba54:	ldr	x2, [sp, #16]
  42ba58:	mov	w3, #0x6                   	// #6
  42ba5c:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  42ba60:	ldur	x8, [x29, #-16]
  42ba64:	str	x0, [x8, #96]
  42ba68:	ldur	x8, [x29, #-16]
  42ba6c:	ldr	x8, [x8, #80]
  42ba70:	mov	w10, #0x1                   	// #1
  42ba74:	str	w10, [sp, #12]
  42ba78:	cbz	x8, 42baa4 <_obstack_memory_used@@Base+0x4184>
  42ba7c:	ldur	x8, [x29, #-16]
  42ba80:	ldr	x8, [x8, #88]
  42ba84:	mov	w9, #0x1                   	// #1
  42ba88:	str	w9, [sp, #12]
  42ba8c:	cbz	x8, 42baa4 <_obstack_memory_used@@Base+0x4184>
  42ba90:	ldur	x8, [x29, #-16]
  42ba94:	ldr	x8, [x8, #96]
  42ba98:	cmp	x8, #0x0
  42ba9c:	cset	w9, eq  // eq = none
  42baa0:	str	w9, [sp, #12]
  42baa4:	ldr	w8, [sp, #12]
  42baa8:	and	w8, w8, #0x1
  42baac:	mov	w0, w8
  42bab0:	sxtw	x9, w0
  42bab4:	cbz	x9, 42bac4 <_obstack_memory_used@@Base+0x41a4>
  42bab8:	ldur	w8, [x29, #-36]
  42babc:	stur	w8, [x29, #-4]
  42bac0:	b	42baf8 <_obstack_memory_used@@Base+0x41d8>
  42bac4:	b	42bae8 <_obstack_memory_used@@Base+0x41c8>
  42bac8:	ldur	x8, [x29, #-16]
  42bacc:	ldr	x8, [x8, #72]
  42bad0:	ldur	x9, [x29, #-16]
  42bad4:	str	x8, [x9, #96]
  42bad8:	ldur	x9, [x29, #-16]
  42badc:	str	x8, [x9, #88]
  42bae0:	ldur	x9, [x29, #-16]
  42bae4:	str	x8, [x9, #80]
  42bae8:	sub	x8, x29, #0x40
  42baec:	ldr	x0, [x8, #16]
  42baf0:	bl	4026c0 <free@plt>
  42baf4:	stur	wzr, [x29, #-4]
  42baf8:	ldur	w0, [x29, #-4]
  42bafc:	ldp	x29, x30, [sp, #144]
  42bb00:	add	sp, sp, #0xa0
  42bb04:	ret
  42bb08:	sub	sp, sp, #0x40
  42bb0c:	str	x0, [sp, #56]
  42bb10:	str	x1, [sp, #48]
  42bb14:	str	x2, [sp, #40]
  42bb18:	str	x3, [sp, #32]
  42bb1c:	mov	w8, #0x1                   	// #1
  42bb20:	and	w8, w4, w8
  42bb24:	strb	w8, [sp, #31]
  42bb28:	str	x5, [sp, #16]
  42bb2c:	ldr	x9, [sp, #56]
  42bb30:	ldr	x10, [sp, #40]
  42bb34:	str	x9, [x10]
  42bb38:	ldr	x9, [sp, #48]
  42bb3c:	ldr	x10, [sp, #40]
  42bb40:	str	x9, [x10, #88]
  42bb44:	ldr	x9, [sp, #48]
  42bb48:	ldr	x10, [sp, #40]
  42bb4c:	str	x9, [x10, #80]
  42bb50:	ldr	x9, [sp, #32]
  42bb54:	ldr	x10, [sp, #40]
  42bb58:	str	x9, [x10, #120]
  42bb5c:	ldrb	w8, [sp, #31]
  42bb60:	and	w8, w8, #0x1
  42bb64:	ldr	x9, [sp, #40]
  42bb68:	strb	w8, [x9, #136]
  42bb6c:	ldr	x9, [sp, #32]
  42bb70:	mov	w8, #0x1                   	// #1
  42bb74:	str	w8, [sp, #12]
  42bb78:	cbnz	x9, 42bb84 <_obstack_memory_used@@Base+0x4264>
  42bb7c:	ldrb	w8, [sp, #31]
  42bb80:	str	w8, [sp, #12]
  42bb84:	ldr	w8, [sp, #12]
  42bb88:	mov	w9, #0x1                   	// #1
  42bb8c:	and	w8, w8, #0x1
  42bb90:	ldr	x10, [sp, #40]
  42bb94:	strb	w8, [x10, #139]
  42bb98:	ldr	x10, [sp, #16]
  42bb9c:	ldr	w8, [x10, #180]
  42bba0:	ldr	x10, [sp, #40]
  42bba4:	str	w8, [x10, #144]
  42bba8:	ldr	x10, [sp, #16]
  42bbac:	ldrb	w8, [x10, #176]
  42bbb0:	mov	w11, #0x2                   	// #2
  42bbb4:	lsr	w8, w8, w11
  42bbb8:	and	w8, w8, #0x1
  42bbbc:	and	w8, w8, #0xff
  42bbc0:	ldr	x10, [sp, #40]
  42bbc4:	strb	w8, [x10, #137]
  42bbc8:	ldr	x10, [sp, #16]
  42bbcc:	ldrb	w8, [x10, #176]
  42bbd0:	mov	w11, #0x3                   	// #3
  42bbd4:	lsr	w8, w8, w11
  42bbd8:	and	w8, w8, w9
  42bbdc:	and	w8, w8, #0xff
  42bbe0:	ldr	x10, [sp, #40]
  42bbe4:	strb	w8, [x10, #138]
  42bbe8:	ldr	x10, [sp, #40]
  42bbec:	ldr	x10, [x10, #88]
  42bbf0:	ldr	x12, [sp, #40]
  42bbf4:	str	x10, [x12, #104]
  42bbf8:	ldr	x10, [sp, #40]
  42bbfc:	ldr	x10, [x10, #104]
  42bc00:	ldr	x12, [sp, #40]
  42bc04:	str	x10, [x12, #96]
  42bc08:	add	sp, sp, #0x40
  42bc0c:	ret
  42bc10:	sub	sp, sp, #0x50
  42bc14:	stp	x29, x30, [sp, #64]
  42bc18:	add	x29, sp, #0x40
  42bc1c:	stur	x0, [x29, #-16]
  42bc20:	stur	x1, [x29, #-24]
  42bc24:	ldur	x8, [x29, #-16]
  42bc28:	ldr	w9, [x8, #144]
  42bc2c:	cmp	w9, #0x1
  42bc30:	b.le	42bd14 <_obstack_memory_used@@Base+0x43f4>
  42bc34:	mov	x8, #0x8                   	// #8
  42bc38:	str	x8, [sp, #24]
  42bc3c:	ldur	x8, [x29, #-24]
  42bc40:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  42bc44:	cmp	x9, x8
  42bc48:	cset	w10, cc  // cc = lo, ul, last
  42bc4c:	and	w10, w10, #0x1
  42bc50:	mov	w0, w10
  42bc54:	sxtw	x8, w0
  42bc58:	cbz	x8, 42bc68 <_obstack_memory_used@@Base+0x4348>
  42bc5c:	mov	w8, #0xc                   	// #12
  42bc60:	stur	w8, [x29, #-4]
  42bc64:	b	42bd80 <_obstack_memory_used@@Base+0x4460>
  42bc68:	ldur	x8, [x29, #-16]
  42bc6c:	ldr	x0, [x8, #16]
  42bc70:	ldur	x8, [x29, #-24]
  42bc74:	mov	x9, #0x4                   	// #4
  42bc78:	mul	x1, x8, x9
  42bc7c:	bl	402570 <realloc@plt>
  42bc80:	str	x0, [sp, #32]
  42bc84:	ldr	x8, [sp, #32]
  42bc88:	cmp	x8, #0x0
  42bc8c:	cset	w10, eq  // eq = none
  42bc90:	and	w10, w10, #0x1
  42bc94:	mov	w0, w10
  42bc98:	sxtw	x8, w0
  42bc9c:	cbz	x8, 42bcac <_obstack_memory_used@@Base+0x438c>
  42bca0:	mov	w8, #0xc                   	// #12
  42bca4:	stur	w8, [x29, #-4]
  42bca8:	b	42bd80 <_obstack_memory_used@@Base+0x4460>
  42bcac:	ldr	x8, [sp, #32]
  42bcb0:	ldur	x9, [x29, #-16]
  42bcb4:	str	x8, [x9, #16]
  42bcb8:	ldur	x8, [x29, #-16]
  42bcbc:	ldr	x8, [x8, #24]
  42bcc0:	cbz	x8, 42bd14 <_obstack_memory_used@@Base+0x43f4>
  42bcc4:	ldur	x8, [x29, #-16]
  42bcc8:	ldr	x0, [x8, #24]
  42bccc:	ldur	x8, [x29, #-24]
  42bcd0:	mov	x9, #0x8                   	// #8
  42bcd4:	mul	x1, x8, x9
  42bcd8:	bl	402570 <realloc@plt>
  42bcdc:	str	x0, [sp, #16]
  42bce0:	ldr	x8, [sp, #16]
  42bce4:	cmp	x8, #0x0
  42bce8:	cset	w10, eq  // eq = none
  42bcec:	and	w10, w10, #0x1
  42bcf0:	mov	w0, w10
  42bcf4:	sxtw	x8, w0
  42bcf8:	cbz	x8, 42bd08 <_obstack_memory_used@@Base+0x43e8>
  42bcfc:	mov	w8, #0xc                   	// #12
  42bd00:	stur	w8, [x29, #-4]
  42bd04:	b	42bd80 <_obstack_memory_used@@Base+0x4460>
  42bd08:	ldr	x8, [sp, #16]
  42bd0c:	ldur	x9, [x29, #-16]
  42bd10:	str	x8, [x9, #24]
  42bd14:	ldur	x8, [x29, #-16]
  42bd18:	ldrb	w9, [x8, #139]
  42bd1c:	cbz	w9, 42bd70 <_obstack_memory_used@@Base+0x4450>
  42bd20:	ldur	x8, [x29, #-16]
  42bd24:	ldr	x0, [x8, #8]
  42bd28:	ldur	x8, [x29, #-24]
  42bd2c:	mov	x9, #0x1                   	// #1
  42bd30:	mul	x1, x8, x9
  42bd34:	bl	402570 <realloc@plt>
  42bd38:	str	x0, [sp, #8]
  42bd3c:	ldr	x8, [sp, #8]
  42bd40:	cmp	x8, #0x0
  42bd44:	cset	w10, eq  // eq = none
  42bd48:	and	w10, w10, #0x1
  42bd4c:	mov	w0, w10
  42bd50:	sxtw	x8, w0
  42bd54:	cbz	x8, 42bd64 <_obstack_memory_used@@Base+0x4444>
  42bd58:	mov	w8, #0xc                   	// #12
  42bd5c:	stur	w8, [x29, #-4]
  42bd60:	b	42bd80 <_obstack_memory_used@@Base+0x4460>
  42bd64:	ldr	x8, [sp, #8]
  42bd68:	ldur	x9, [x29, #-16]
  42bd6c:	str	x8, [x9, #8]
  42bd70:	ldur	x8, [x29, #-24]
  42bd74:	ldur	x9, [x29, #-16]
  42bd78:	str	x8, [x9, #64]
  42bd7c:	stur	wzr, [x29, #-4]
  42bd80:	ldur	w0, [x29, #-4]
  42bd84:	ldp	x29, x30, [sp, #64]
  42bd88:	add	sp, sp, #0x50
  42bd8c:	ret
  42bd90:	sub	sp, sp, #0x130
  42bd94:	stp	x29, x30, [sp, #272]
  42bd98:	str	x28, [sp, #288]
  42bd9c:	add	x29, sp, #0x110
  42bda0:	sub	x8, x29, #0x40
  42bda4:	str	x0, [x8, #48]
  42bda8:	ldr	x9, [x8, #48]
  42bdac:	ldr	x9, [x9, #48]
  42bdb0:	str	x9, [x8, #24]
  42bdb4:	ldr	x9, [x8, #48]
  42bdb8:	ldr	x9, [x9, #64]
  42bdbc:	ldr	x10, [x8, #48]
  42bdc0:	ldr	x10, [x10, #88]
  42bdc4:	cmp	x9, x10
  42bdc8:	str	x8, [sp, #56]
  42bdcc:	b.le	42bde4 <_obstack_memory_used@@Base+0x44c4>
  42bdd0:	ldr	x8, [sp, #56]
  42bdd4:	ldr	x9, [x8, #48]
  42bdd8:	ldr	x9, [x9, #88]
  42bddc:	str	x9, [sp, #48]
  42bde0:	b	42bdf4 <_obstack_memory_used@@Base+0x44d4>
  42bde4:	ldr	x8, [sp, #56]
  42bde8:	ldr	x9, [x8, #48]
  42bdec:	ldr	x9, [x9, #64]
  42bdf0:	str	x9, [sp, #48]
  42bdf4:	ldr	x8, [sp, #48]
  42bdf8:	ldr	x9, [sp, #56]
  42bdfc:	str	x8, [x9, #16]
  42be00:	ldr	x8, [x9, #48]
  42be04:	ldrb	w10, [x8, #138]
  42be08:	cbnz	w10, 42c1d4 <_obstack_memory_used@@Base+0x48b4>
  42be0c:	ldr	x8, [sp, #56]
  42be10:	ldr	x9, [x8, #48]
  42be14:	ldr	x9, [x9, #120]
  42be18:	cbnz	x9, 42c1d4 <_obstack_memory_used@@Base+0x48b4>
  42be1c:	ldr	x8, [sp, #56]
  42be20:	ldr	x9, [x8, #48]
  42be24:	ldrb	w10, [x9, #140]
  42be28:	cbnz	w10, 42c1d4 <_obstack_memory_used@@Base+0x48b4>
  42be2c:	ldr	x8, [sp, #56]
  42be30:	ldr	x9, [x8, #24]
  42be34:	ldr	x10, [x8, #16]
  42be38:	cmp	x9, x10
  42be3c:	b.ge	42c1b0 <_obstack_memory_used@@Base+0x4890>  // b.tcont
  42be40:	ldr	x8, [sp, #56]
  42be44:	ldr	x9, [x8, #48]
  42be48:	ldr	x9, [x9]
  42be4c:	ldr	x10, [x8, #48]
  42be50:	ldr	x10, [x10, #40]
  42be54:	ldr	x11, [x8, #24]
  42be58:	add	x10, x10, x11
  42be5c:	ldrb	w12, [x9, x10]
  42be60:	and	w12, w12, #0xffffff80
  42be64:	cbnz	w12, 42bee8 <_obstack_memory_used@@Base+0x45c8>
  42be68:	ldr	x8, [sp, #56]
  42be6c:	ldr	x9, [x8, #48]
  42be70:	add	x0, x9, #0x20
  42be74:	bl	402630 <mbsinit@plt>
  42be78:	cbz	w0, 42bee8 <_obstack_memory_used@@Base+0x45c8>
  42be7c:	ldr	x8, [sp, #56]
  42be80:	ldr	x9, [x8, #48]
  42be84:	ldr	x9, [x9]
  42be88:	ldr	x10, [x8, #48]
  42be8c:	ldr	x10, [x10, #40]
  42be90:	ldr	x11, [x8, #24]
  42be94:	add	x10, x10, x11
  42be98:	ldrb	w0, [x9, x10]
  42be9c:	bl	402460 <toupper@plt>
  42bea0:	ldr	x8, [sp, #56]
  42bea4:	ldr	x9, [x8, #48]
  42bea8:	ldr	x9, [x9, #8]
  42beac:	ldr	x10, [x8, #24]
  42beb0:	add	x9, x9, x10
  42beb4:	strb	w0, [x9]
  42beb8:	ldr	x9, [x8, #48]
  42bebc:	ldr	x9, [x9, #8]
  42bec0:	ldr	x10, [x8, #24]
  42bec4:	ldrb	w12, [x9, x10]
  42bec8:	ldr	x9, [x8, #48]
  42becc:	ldr	x9, [x9, #16]
  42bed0:	ldr	x10, [x8, #24]
  42bed4:	str	w12, [x9, x10, lsl #2]
  42bed8:	ldr	x9, [x8, #24]
  42bedc:	add	x9, x9, #0x1
  42bee0:	str	x9, [x8, #24]
  42bee4:	b	42be2c <_obstack_memory_used@@Base+0x450c>
  42bee8:	ldr	x8, [sp, #56]
  42beec:	ldr	x9, [x8, #16]
  42bef0:	ldr	x10, [x8, #24]
  42bef4:	subs	x9, x9, x10
  42bef8:	str	x9, [x8, #8]
  42befc:	ldr	x9, [x8, #48]
  42bf00:	ldr	x9, [x9, #32]
  42bf04:	str	x9, [x8, #40]
  42bf08:	ldr	x9, [x8, #48]
  42bf0c:	ldr	x9, [x9]
  42bf10:	ldr	x10, [x8, #48]
  42bf14:	ldr	x10, [x10, #40]
  42bf18:	add	x9, x9, x10
  42bf1c:	ldr	x10, [x8, #24]
  42bf20:	add	x1, x9, x10
  42bf24:	ldr	x2, [x8, #8]
  42bf28:	ldr	x9, [x8, #48]
  42bf2c:	add	x3, x9, #0x20
  42bf30:	sub	x0, x29, #0x84
  42bf34:	bl	4271dc <wcrtomb@plt+0x248cc>
  42bf38:	ldr	x8, [sp, #56]
  42bf3c:	str	x0, [x8]
  42bf40:	ldr	x9, [x8]
  42bf44:	mov	x10, xzr
  42bf48:	cmp	x10, x9
  42bf4c:	cset	w11, cs  // cs = hs, nlast
  42bf50:	mov	w12, #0x0                   	// #0
  42bf54:	str	w12, [sp, #44]
  42bf58:	tbnz	w11, #0, 42bf74 <_obstack_memory_used@@Base+0x4654>
  42bf5c:	ldr	x8, [sp, #56]
  42bf60:	ldr	x9, [x8]
  42bf64:	mov	x10, #0xfffffffffffffffe    	// #-2
  42bf68:	cmp	x9, x10
  42bf6c:	cset	w11, cc  // cc = lo, ul, last
  42bf70:	str	w11, [sp, #44]
  42bf74:	ldr	w8, [sp, #44]
  42bf78:	and	w8, w8, #0x1
  42bf7c:	mov	w0, w8
  42bf80:	sxtw	x9, w0
  42bf84:	cbz	x9, 42c0bc <_obstack_memory_used@@Base+0x479c>
  42bf88:	ldur	w0, [x29, #-132]
  42bf8c:	bl	402810 <towupper@plt>
  42bf90:	str	w0, [sp, #136]
  42bf94:	ldr	w8, [sp, #136]
  42bf98:	ldur	w9, [x29, #-132]
  42bf9c:	cmp	w8, w9
  42bfa0:	b.eq	42c014 <_obstack_memory_used@@Base+0x46f4>  // b.none
  42bfa4:	ldr	w1, [sp, #136]
  42bfa8:	sub	x0, x29, #0x80
  42bfac:	sub	x2, x29, #0x18
  42bfb0:	bl	402910 <wcrtomb@plt>
  42bfb4:	str	x0, [sp, #128]
  42bfb8:	ldr	x8, [sp, #56]
  42bfbc:	ldr	x9, [x8]
  42bfc0:	ldr	x10, [sp, #128]
  42bfc4:	cmp	x9, x10
  42bfc8:	cset	w11, eq  // eq = none
  42bfcc:	and	w11, w11, #0x1
  42bfd0:	mov	w0, w11
  42bfd4:	sxtw	x9, w0
  42bfd8:	cbz	x9, 42c000 <_obstack_memory_used@@Base+0x46e0>
  42bfdc:	ldr	x8, [sp, #56]
  42bfe0:	ldr	x9, [x8, #48]
  42bfe4:	ldr	x9, [x9, #8]
  42bfe8:	ldr	x10, [x8, #24]
  42bfec:	add	x0, x9, x10
  42bff0:	ldr	x2, [x8]
  42bff4:	sub	x1, x29, #0x80
  42bff8:	bl	402290 <memcpy@plt>
  42bffc:	b	42c010 <_obstack_memory_used@@Base+0x46f0>
  42c000:	ldr	x8, [sp, #56]
  42c004:	ldr	x9, [x8, #24]
  42c008:	str	x9, [x8, #32]
  42c00c:	b	42c1f8 <_obstack_memory_used@@Base+0x48d8>
  42c010:	b	42c04c <_obstack_memory_used@@Base+0x472c>
  42c014:	ldr	x8, [sp, #56]
  42c018:	ldr	x9, [x8, #48]
  42c01c:	ldr	x9, [x9, #8]
  42c020:	ldr	x10, [x8, #24]
  42c024:	add	x0, x9, x10
  42c028:	ldr	x9, [x8, #48]
  42c02c:	ldr	x9, [x9]
  42c030:	ldr	x10, [x8, #48]
  42c034:	ldr	x10, [x10, #40]
  42c038:	add	x9, x9, x10
  42c03c:	ldr	x10, [x8, #24]
  42c040:	add	x1, x9, x10
  42c044:	ldr	x2, [x8]
  42c048:	bl	402290 <memcpy@plt>
  42c04c:	ldr	w8, [sp, #136]
  42c050:	ldr	x9, [sp, #56]
  42c054:	ldr	x10, [x9, #48]
  42c058:	ldr	x10, [x10, #16]
  42c05c:	ldr	x11, [x9, #24]
  42c060:	add	x12, x11, #0x1
  42c064:	str	x12, [x9, #24]
  42c068:	str	w8, [x10, x11, lsl #2]
  42c06c:	ldr	x10, [x9, #24]
  42c070:	ldr	x11, [x9]
  42c074:	add	x10, x10, x11
  42c078:	subs	x10, x10, #0x1
  42c07c:	str	x10, [x9, #8]
  42c080:	ldr	x8, [sp, #56]
  42c084:	ldr	x9, [x8, #24]
  42c088:	ldr	x10, [x8, #8]
  42c08c:	cmp	x9, x10
  42c090:	b.ge	42c0b8 <_obstack_memory_used@@Base+0x4798>  // b.tcont
  42c094:	ldr	x8, [sp, #56]
  42c098:	ldr	x9, [x8, #48]
  42c09c:	ldr	x9, [x9, #16]
  42c0a0:	ldr	x10, [x8, #24]
  42c0a4:	add	x11, x10, #0x1
  42c0a8:	str	x11, [x8, #24]
  42c0ac:	mov	w12, #0xffffffff            	// #-1
  42c0b0:	str	w12, [x9, x10, lsl #2]
  42c0b4:	b	42c080 <_obstack_memory_used@@Base+0x4760>
  42c0b8:	b	42c1ac <_obstack_memory_used@@Base+0x488c>
  42c0bc:	ldr	x8, [sp, #56]
  42c0c0:	ldr	x9, [x8]
  42c0c4:	mov	x10, #0xffffffffffffffff    	// #-1
  42c0c8:	cmp	x9, x10
  42c0cc:	b.eq	42c10c <_obstack_memory_used@@Base+0x47ec>  // b.none
  42c0d0:	ldr	x8, [sp, #56]
  42c0d4:	ldr	x9, [x8]
  42c0d8:	cbz	x9, 42c10c <_obstack_memory_used@@Base+0x47ec>
  42c0dc:	ldr	x8, [sp, #56]
  42c0e0:	ldr	x9, [x8]
  42c0e4:	mov	x10, #0xfffffffffffffffe    	// #-2
  42c0e8:	cmp	x9, x10
  42c0ec:	b.ne	42c198 <_obstack_memory_used@@Base+0x4878>  // b.any
  42c0f0:	ldr	x8, [sp, #56]
  42c0f4:	ldr	x9, [x8, #48]
  42c0f8:	ldr	x9, [x9, #64]
  42c0fc:	ldr	x10, [x8, #48]
  42c100:	ldr	x10, [x10, #88]
  42c104:	cmp	x9, x10
  42c108:	b.lt	42c198 <_obstack_memory_used@@Base+0x4878>  // b.tstop
  42c10c:	ldr	x8, [sp, #56]
  42c110:	ldr	x9, [x8, #48]
  42c114:	ldr	x9, [x9]
  42c118:	ldr	x10, [x8, #48]
  42c11c:	ldr	x10, [x10, #40]
  42c120:	ldr	x11, [x8, #24]
  42c124:	add	x10, x10, x11
  42c128:	ldrb	w12, [x9, x10]
  42c12c:	str	w12, [sp, #124]
  42c130:	ldr	w12, [sp, #124]
  42c134:	ldr	x9, [x8, #48]
  42c138:	ldr	x9, [x9, #8]
  42c13c:	ldr	x10, [x8, #24]
  42c140:	add	x9, x9, x10
  42c144:	strb	w12, [x9]
  42c148:	ldr	w12, [sp, #124]
  42c14c:	ldr	x9, [x8, #48]
  42c150:	ldr	x9, [x9, #16]
  42c154:	ldr	x10, [x8, #24]
  42c158:	add	x11, x10, #0x1
  42c15c:	str	x11, [x8, #24]
  42c160:	str	w12, [x9, x10, lsl #2]
  42c164:	ldr	x9, [x8]
  42c168:	mov	x10, #0xffffffffffffffff    	// #-1
  42c16c:	cmp	x9, x10
  42c170:	cset	w12, eq  // eq = none
  42c174:	and	w12, w12, #0x1
  42c178:	mov	w0, w12
  42c17c:	sxtw	x9, w0
  42c180:	cbz	x9, 42c194 <_obstack_memory_used@@Base+0x4874>
  42c184:	ldr	x8, [sp, #56]
  42c188:	ldr	x9, [x8, #48]
  42c18c:	ldr	x10, [x8, #40]
  42c190:	str	x10, [x9, #32]
  42c194:	b	42c1ac <_obstack_memory_used@@Base+0x488c>
  42c198:	ldr	x8, [sp, #56]
  42c19c:	ldr	x9, [x8, #48]
  42c1a0:	ldr	x10, [x8, #40]
  42c1a4:	str	x10, [x9, #32]
  42c1a8:	b	42c1b0 <_obstack_memory_used@@Base+0x4890>
  42c1ac:	b	42be2c <_obstack_memory_used@@Base+0x450c>
  42c1b0:	ldr	x8, [sp, #56]
  42c1b4:	ldr	x9, [x8, #24]
  42c1b8:	ldr	x10, [x8, #48]
  42c1bc:	str	x9, [x10, #48]
  42c1c0:	ldr	x9, [x8, #24]
  42c1c4:	ldr	x10, [x8, #48]
  42c1c8:	str	x9, [x10, #56]
  42c1cc:	stur	wzr, [x29, #-4]
  42c1d0:	b	42c968 <_obstack_memory_used@@Base+0x5048>
  42c1d4:	ldr	x8, [sp, #56]
  42c1d8:	ldr	x9, [x8, #48]
  42c1dc:	ldr	x9, [x9, #56]
  42c1e0:	str	x9, [x8, #32]
  42c1e4:	ldr	x8, [sp, #56]
  42c1e8:	ldr	x9, [x8, #24]
  42c1ec:	ldr	x10, [x8, #16]
  42c1f0:	cmp	x9, x10
  42c1f4:	b.ge	42c948 <_obstack_memory_used@@Base+0x5028>  // b.tcont
  42c1f8:	ldr	x8, [sp, #56]
  42c1fc:	ldr	x9, [x8, #16]
  42c200:	ldr	x10, [x8, #24]
  42c204:	subs	x9, x9, x10
  42c208:	str	x9, [x8, #8]
  42c20c:	ldr	x9, [x8, #48]
  42c210:	ldr	x9, [x9, #32]
  42c214:	str	x9, [x8, #40]
  42c218:	ldr	x9, [x8, #48]
  42c21c:	ldr	x9, [x9, #120]
  42c220:	cmp	x9, #0x0
  42c224:	cset	w11, ne  // ne = any
  42c228:	and	w11, w11, #0x1
  42c22c:	mov	w0, w11
  42c230:	sxtw	x9, w0
  42c234:	cbz	x9, 42c2ec <_obstack_memory_used@@Base+0x49cc>
  42c238:	str	wzr, [sp, #108]
  42c23c:	ldr	w8, [sp, #108]
  42c240:	ldr	x9, [sp, #56]
  42c244:	ldr	x10, [x9, #48]
  42c248:	ldr	w11, [x10, #144]
  42c24c:	mov	w12, #0x0                   	// #0
  42c250:	cmp	w8, w11
  42c254:	str	w12, [sp, #40]
  42c258:	b.ge	42c274 <_obstack_memory_used@@Base+0x4954>  // b.tcont
  42c25c:	ldrsw	x8, [sp, #108]
  42c260:	ldr	x9, [sp, #56]
  42c264:	ldr	x10, [x9, #8]
  42c268:	cmp	x8, x10
  42c26c:	cset	w11, lt  // lt = tstop
  42c270:	str	w11, [sp, #40]
  42c274:	ldr	w8, [sp, #40]
  42c278:	tbnz	w8, #0, 42c280 <_obstack_memory_used@@Base+0x4960>
  42c27c:	b	42c2e0 <_obstack_memory_used@@Base+0x49c0>
  42c280:	ldr	x8, [sp, #56]
  42c284:	ldr	x9, [x8, #48]
  42c288:	ldr	x9, [x9]
  42c28c:	ldr	x10, [x8, #48]
  42c290:	ldr	x10, [x10, #40]
  42c294:	ldr	x11, [x8, #32]
  42c298:	add	x10, x10, x11
  42c29c:	ldrsw	x11, [sp, #108]
  42c2a0:	add	x10, x10, x11
  42c2a4:	ldrb	w12, [x9, x10]
  42c2a8:	str	w12, [sp, #104]
  42c2ac:	ldr	x9, [x8, #48]
  42c2b0:	ldr	x9, [x9, #120]
  42c2b4:	ldrsw	x10, [sp, #104]
  42c2b8:	add	x9, x9, x10
  42c2bc:	ldrb	w12, [x9]
  42c2c0:	ldrsw	x9, [sp, #108]
  42c2c4:	sub	x10, x29, #0x80
  42c2c8:	add	x9, x10, x9
  42c2cc:	strb	w12, [x9]
  42c2d0:	ldr	w8, [sp, #108]
  42c2d4:	add	w8, w8, #0x1
  42c2d8:	str	w8, [sp, #108]
  42c2dc:	b	42c23c <_obstack_memory_used@@Base+0x491c>
  42c2e0:	sub	x8, x29, #0x80
  42c2e4:	str	x8, [sp, #112]
  42c2e8:	b	42c310 <_obstack_memory_used@@Base+0x49f0>
  42c2ec:	ldr	x8, [sp, #56]
  42c2f0:	ldr	x9, [x8, #48]
  42c2f4:	ldr	x9, [x9]
  42c2f8:	ldr	x10, [x8, #48]
  42c2fc:	ldr	x10, [x10, #40]
  42c300:	add	x9, x9, x10
  42c304:	ldr	x10, [x8, #32]
  42c308:	add	x9, x9, x10
  42c30c:	str	x9, [sp, #112]
  42c310:	ldr	x1, [sp, #112]
  42c314:	ldr	x8, [sp, #56]
  42c318:	ldr	x2, [x8, #8]
  42c31c:	ldr	x9, [x8, #48]
  42c320:	add	x3, x9, #0x20
  42c324:	add	x0, sp, #0x78
  42c328:	bl	4271dc <wcrtomb@plt+0x248cc>
  42c32c:	ldr	x8, [sp, #56]
  42c330:	str	x0, [x8]
  42c334:	ldr	x9, [x8]
  42c338:	mov	x10, xzr
  42c33c:	cmp	x10, x9
  42c340:	cset	w11, cs  // cs = hs, nlast
  42c344:	mov	w12, #0x0                   	// #0
  42c348:	str	w12, [sp, #36]
  42c34c:	tbnz	w11, #0, 42c368 <_obstack_memory_used@@Base+0x4a48>
  42c350:	ldr	x8, [sp, #56]
  42c354:	ldr	x9, [x8]
  42c358:	mov	x10, #0xfffffffffffffffe    	// #-2
  42c35c:	cmp	x9, x10
  42c360:	cset	w11, cc  // cc = lo, ul, last
  42c364:	str	w11, [sp, #36]
  42c368:	ldr	w8, [sp, #36]
  42c36c:	and	w8, w8, #0x1
  42c370:	mov	w0, w8
  42c374:	sxtw	x9, w0
  42c378:	cbz	x9, 42c7d0 <_obstack_memory_used@@Base+0x4eb0>
  42c37c:	ldr	w0, [sp, #120]
  42c380:	bl	402810 <towupper@plt>
  42c384:	str	w0, [sp, #100]
  42c388:	ldr	w8, [sp, #100]
  42c38c:	ldr	w9, [sp, #120]
  42c390:	cmp	w8, w9
  42c394:	b.eq	42c6bc <_obstack_memory_used@@Base+0x4d9c>  // b.none
  42c398:	ldr	w1, [sp, #100]
  42c39c:	sub	x0, x29, #0x80
  42c3a0:	sub	x2, x29, #0x18
  42c3a4:	bl	402910 <wcrtomb@plt>
  42c3a8:	str	x0, [sp, #88]
  42c3ac:	ldr	x8, [sp, #56]
  42c3b0:	ldr	x9, [x8]
  42c3b4:	ldr	x10, [sp, #88]
  42c3b8:	cmp	x9, x10
  42c3bc:	cset	w11, eq  // eq = none
  42c3c0:	and	w11, w11, #0x1
  42c3c4:	mov	w0, w11
  42c3c8:	sxtw	x9, w0
  42c3cc:	cbz	x9, 42c3f4 <_obstack_memory_used@@Base+0x4ad4>
  42c3d0:	ldr	x8, [sp, #56]
  42c3d4:	ldr	x9, [x8, #48]
  42c3d8:	ldr	x9, [x9, #8]
  42c3dc:	ldr	x10, [x8, #24]
  42c3e0:	add	x0, x9, x10
  42c3e4:	ldr	x2, [x8]
  42c3e8:	sub	x1, x29, #0x80
  42c3ec:	bl	402290 <memcpy@plt>
  42c3f0:	b	42c6b8 <_obstack_memory_used@@Base+0x4d98>
  42c3f4:	ldr	x8, [sp, #88]
  42c3f8:	mov	x9, #0xffffffffffffffff    	// #-1
  42c3fc:	cmp	x8, x9
  42c400:	b.eq	42c698 <_obstack_memory_used@@Base+0x4d78>  // b.none
  42c404:	ldr	x8, [sp, #56]
  42c408:	ldr	x9, [x8, #24]
  42c40c:	ldr	x10, [sp, #88]
  42c410:	add	x9, x9, x10
  42c414:	ldr	x10, [x8, #48]
  42c418:	ldr	x10, [x10, #64]
  42c41c:	cmp	x9, x10
  42c420:	b.ls	42c438 <_obstack_memory_used@@Base+0x4b18>  // b.plast
  42c424:	ldr	x8, [sp, #56]
  42c428:	ldr	x9, [x8, #48]
  42c42c:	ldr	x10, [x8, #40]
  42c430:	str	x10, [x9, #32]
  42c434:	b	42c948 <_obstack_memory_used@@Base+0x5028>
  42c438:	ldr	x8, [sp, #56]
  42c43c:	ldr	x9, [x8, #48]
  42c440:	ldr	x9, [x9, #24]
  42c444:	cbnz	x9, 42c484 <_obstack_memory_used@@Base+0x4b64>
  42c448:	ldr	x8, [sp, #56]
  42c44c:	ldr	x9, [x8, #48]
  42c450:	ldr	x9, [x9, #64]
  42c454:	mov	x10, #0x8                   	// #8
  42c458:	mul	x0, x9, x10
  42c45c:	bl	402450 <malloc@plt>
  42c460:	ldr	x8, [sp, #56]
  42c464:	ldr	x9, [x8, #48]
  42c468:	str	x0, [x9, #24]
  42c46c:	ldr	x9, [x8, #48]
  42c470:	ldr	x9, [x9, #24]
  42c474:	cbnz	x9, 42c484 <_obstack_memory_used@@Base+0x4b64>
  42c478:	mov	w8, #0xc                   	// #12
  42c47c:	stur	w8, [x29, #-4]
  42c480:	b	42c968 <_obstack_memory_used@@Base+0x5048>
  42c484:	ldr	x8, [sp, #56]
  42c488:	ldr	x9, [x8, #48]
  42c48c:	ldrb	w10, [x9, #140]
  42c490:	cbnz	w10, 42c4e4 <_obstack_memory_used@@Base+0x4bc4>
  42c494:	str	xzr, [sp, #80]
  42c498:	ldr	x8, [sp, #80]
  42c49c:	ldr	x9, [sp, #56]
  42c4a0:	ldr	x10, [x9, #24]
  42c4a4:	cmp	x8, x10
  42c4a8:	b.cs	42c4d4 <_obstack_memory_used@@Base+0x4bb4>  // b.hs, b.nlast
  42c4ac:	ldr	x8, [sp, #80]
  42c4b0:	ldr	x9, [sp, #56]
  42c4b4:	ldr	x10, [x9, #48]
  42c4b8:	ldr	x10, [x10, #24]
  42c4bc:	ldr	x11, [sp, #80]
  42c4c0:	str	x8, [x10, x11, lsl #3]
  42c4c4:	ldr	x8, [sp, #80]
  42c4c8:	add	x8, x8, #0x1
  42c4cc:	str	x8, [sp, #80]
  42c4d0:	b	42c498 <_obstack_memory_used@@Base+0x4b78>
  42c4d4:	ldr	x8, [sp, #56]
  42c4d8:	ldr	x9, [x8, #48]
  42c4dc:	mov	w10, #0x1                   	// #1
  42c4e0:	strb	w10, [x9, #140]
  42c4e4:	ldr	x8, [sp, #56]
  42c4e8:	ldr	x9, [x8, #48]
  42c4ec:	ldr	x9, [x9, #8]
  42c4f0:	ldr	x10, [x8, #24]
  42c4f4:	add	x0, x9, x10
  42c4f8:	ldr	x2, [sp, #88]
  42c4fc:	sub	x1, x29, #0x80
  42c500:	bl	402290 <memcpy@plt>
  42c504:	ldr	w11, [sp, #100]
  42c508:	ldr	x8, [sp, #56]
  42c50c:	ldr	x9, [x8, #48]
  42c510:	ldr	x9, [x9, #16]
  42c514:	ldr	x10, [x8, #24]
  42c518:	str	w11, [x9, x10, lsl #2]
  42c51c:	ldr	x9, [x8, #32]
  42c520:	ldr	x10, [x8, #48]
  42c524:	ldr	x10, [x10, #24]
  42c528:	ldr	x12, [x8, #24]
  42c52c:	str	x9, [x10, x12, lsl #3]
  42c530:	mov	x9, #0x1                   	// #1
  42c534:	str	x9, [sp, #80]
  42c538:	ldr	x8, [sp, #80]
  42c53c:	ldr	x9, [sp, #88]
  42c540:	cmp	x8, x9
  42c544:	b.cs	42c5d4 <_obstack_memory_used@@Base+0x4cb4>  // b.hs, b.nlast
  42c548:	ldr	x8, [sp, #56]
  42c54c:	ldr	x9, [x8, #32]
  42c550:	ldr	x10, [sp, #80]
  42c554:	ldr	x11, [x8]
  42c558:	cmp	x10, x11
  42c55c:	str	x9, [sp, #24]
  42c560:	b.cs	42c570 <_obstack_memory_used@@Base+0x4c50>  // b.hs, b.nlast
  42c564:	ldr	x8, [sp, #80]
  42c568:	str	x8, [sp, #16]
  42c56c:	b	42c580 <_obstack_memory_used@@Base+0x4c60>
  42c570:	ldr	x8, [sp, #56]
  42c574:	ldr	x9, [x8]
  42c578:	subs	x9, x9, #0x1
  42c57c:	str	x9, [sp, #16]
  42c580:	ldr	x8, [sp, #16]
  42c584:	ldr	x9, [sp, #24]
  42c588:	add	x8, x9, x8
  42c58c:	ldr	x10, [sp, #56]
  42c590:	ldr	x11, [x10, #48]
  42c594:	ldr	x11, [x11, #24]
  42c598:	ldr	x12, [x10, #24]
  42c59c:	ldr	x13, [sp, #80]
  42c5a0:	add	x12, x12, x13
  42c5a4:	str	x8, [x11, x12, lsl #3]
  42c5a8:	ldr	x8, [x10, #48]
  42c5ac:	ldr	x8, [x8, #16]
  42c5b0:	ldr	x11, [x10, #24]
  42c5b4:	ldr	x12, [sp, #80]
  42c5b8:	add	x11, x11, x12
  42c5bc:	mov	w14, #0xffffffff            	// #-1
  42c5c0:	str	w14, [x8, x11, lsl #2]
  42c5c4:	ldr	x8, [sp, #80]
  42c5c8:	add	x8, x8, #0x1
  42c5cc:	str	x8, [sp, #80]
  42c5d0:	b	42c538 <_obstack_memory_used@@Base+0x4c18>
  42c5d4:	ldr	x8, [sp, #88]
  42c5d8:	ldr	x9, [sp, #56]
  42c5dc:	ldr	x10, [x9]
  42c5e0:	subs	x8, x8, x10
  42c5e4:	ldr	x10, [x9, #48]
  42c5e8:	ldr	x11, [x10, #88]
  42c5ec:	add	x8, x11, x8
  42c5f0:	str	x8, [x10, #88]
  42c5f4:	ldr	x8, [x9, #48]
  42c5f8:	ldr	x8, [x8, #96]
  42c5fc:	ldr	x10, [x9, #32]
  42c600:	cmp	x8, x10
  42c604:	b.le	42c628 <_obstack_memory_used@@Base+0x4d08>
  42c608:	ldr	x8, [sp, #88]
  42c60c:	ldr	x9, [sp, #56]
  42c610:	ldr	x10, [x9]
  42c614:	subs	x8, x8, x10
  42c618:	ldr	x10, [x9, #48]
  42c61c:	ldr	x11, [x10, #104]
  42c620:	add	x8, x11, x8
  42c624:	str	x8, [x10, #104]
  42c628:	ldr	x8, [sp, #56]
  42c62c:	ldr	x9, [x8, #48]
  42c630:	ldr	x9, [x9, #64]
  42c634:	ldr	x10, [x8, #48]
  42c638:	ldr	x10, [x10, #88]
  42c63c:	cmp	x9, x10
  42c640:	b.le	42c658 <_obstack_memory_used@@Base+0x4d38>
  42c644:	ldr	x8, [sp, #56]
  42c648:	ldr	x9, [x8, #48]
  42c64c:	ldr	x9, [x9, #88]
  42c650:	str	x9, [sp, #8]
  42c654:	b	42c668 <_obstack_memory_used@@Base+0x4d48>
  42c658:	ldr	x8, [sp, #56]
  42c65c:	ldr	x9, [x8, #48]
  42c660:	ldr	x9, [x9, #64]
  42c664:	str	x9, [sp, #8]
  42c668:	ldr	x8, [sp, #8]
  42c66c:	ldr	x9, [sp, #56]
  42c670:	str	x8, [x9, #16]
  42c674:	ldr	x8, [sp, #88]
  42c678:	ldr	x10, [x9, #24]
  42c67c:	add	x8, x10, x8
  42c680:	str	x8, [x9, #24]
  42c684:	ldr	x8, [x9]
  42c688:	ldr	x10, [x9, #32]
  42c68c:	add	x8, x10, x8
  42c690:	str	x8, [x9, #32]
  42c694:	b	42c1e4 <_obstack_memory_used@@Base+0x48c4>
  42c698:	ldr	x8, [sp, #56]
  42c69c:	ldr	x9, [x8, #48]
  42c6a0:	ldr	x9, [x9, #8]
  42c6a4:	ldr	x10, [x8, #24]
  42c6a8:	add	x0, x9, x10
  42c6ac:	ldr	x1, [sp, #112]
  42c6b0:	ldr	x2, [x8]
  42c6b4:	bl	402290 <memcpy@plt>
  42c6b8:	b	42c6dc <_obstack_memory_used@@Base+0x4dbc>
  42c6bc:	ldr	x8, [sp, #56]
  42c6c0:	ldr	x9, [x8, #48]
  42c6c4:	ldr	x9, [x9, #8]
  42c6c8:	ldr	x10, [x8, #24]
  42c6cc:	add	x0, x9, x10
  42c6d0:	ldr	x1, [sp, #112]
  42c6d4:	ldr	x2, [x8]
  42c6d8:	bl	402290 <memcpy@plt>
  42c6dc:	ldr	x8, [sp, #56]
  42c6e0:	ldr	x9, [x8, #48]
  42c6e4:	ldrb	w10, [x9, #140]
  42c6e8:	cmp	w10, #0x0
  42c6ec:	cset	w10, ne  // ne = any
  42c6f0:	and	w10, w10, #0x1
  42c6f4:	mov	w0, w10
  42c6f8:	sxtw	x9, w0
  42c6fc:	cbz	x9, 42c750 <_obstack_memory_used@@Base+0x4e30>
  42c700:	str	xzr, [sp, #72]
  42c704:	ldr	x8, [sp, #72]
  42c708:	ldr	x9, [sp, #56]
  42c70c:	ldr	x10, [x9]
  42c710:	cmp	x8, x10
  42c714:	b.cs	42c750 <_obstack_memory_used@@Base+0x4e30>  // b.hs, b.nlast
  42c718:	ldr	x8, [sp, #56]
  42c71c:	ldr	x9, [x8, #32]
  42c720:	ldr	x10, [sp, #72]
  42c724:	add	x9, x9, x10
  42c728:	ldr	x10, [x8, #48]
  42c72c:	ldr	x10, [x10, #24]
  42c730:	ldr	x11, [x8, #24]
  42c734:	ldr	x12, [sp, #72]
  42c738:	add	x11, x11, x12
  42c73c:	str	x9, [x10, x11, lsl #3]
  42c740:	ldr	x8, [sp, #72]
  42c744:	add	x8, x8, #0x1
  42c748:	str	x8, [sp, #72]
  42c74c:	b	42c704 <_obstack_memory_used@@Base+0x4de4>
  42c750:	ldr	x8, [sp, #56]
  42c754:	ldr	x9, [x8]
  42c758:	ldr	x10, [x8, #32]
  42c75c:	add	x9, x10, x9
  42c760:	str	x9, [x8, #32]
  42c764:	ldr	w11, [sp, #100]
  42c768:	ldr	x9, [x8, #48]
  42c76c:	ldr	x9, [x9, #16]
  42c770:	ldr	x10, [x8, #24]
  42c774:	add	x12, x10, #0x1
  42c778:	str	x12, [x8, #24]
  42c77c:	str	w11, [x9, x10, lsl #2]
  42c780:	ldr	x9, [x8, #24]
  42c784:	ldr	x10, [x8]
  42c788:	add	x9, x9, x10
  42c78c:	subs	x9, x9, #0x1
  42c790:	str	x9, [x8, #8]
  42c794:	ldr	x8, [sp, #56]
  42c798:	ldr	x9, [x8, #24]
  42c79c:	ldr	x10, [x8, #8]
  42c7a0:	cmp	x9, x10
  42c7a4:	b.ge	42c7cc <_obstack_memory_used@@Base+0x4eac>  // b.tcont
  42c7a8:	ldr	x8, [sp, #56]
  42c7ac:	ldr	x9, [x8, #48]
  42c7b0:	ldr	x9, [x9, #16]
  42c7b4:	ldr	x10, [x8, #24]
  42c7b8:	add	x11, x10, #0x1
  42c7bc:	str	x11, [x8, #24]
  42c7c0:	mov	w12, #0xffffffff            	// #-1
  42c7c4:	str	w12, [x9, x10, lsl #2]
  42c7c8:	b	42c794 <_obstack_memory_used@@Base+0x4e74>
  42c7cc:	b	42c944 <_obstack_memory_used@@Base+0x5024>
  42c7d0:	ldr	x8, [sp, #56]
  42c7d4:	ldr	x9, [x8]
  42c7d8:	mov	x10, #0xffffffffffffffff    	// #-1
  42c7dc:	cmp	x9, x10
  42c7e0:	b.eq	42c820 <_obstack_memory_used@@Base+0x4f00>  // b.none
  42c7e4:	ldr	x8, [sp, #56]
  42c7e8:	ldr	x9, [x8]
  42c7ec:	cbz	x9, 42c820 <_obstack_memory_used@@Base+0x4f00>
  42c7f0:	ldr	x8, [sp, #56]
  42c7f4:	ldr	x9, [x8]
  42c7f8:	mov	x10, #0xfffffffffffffffe    	// #-2
  42c7fc:	cmp	x9, x10
  42c800:	b.ne	42c930 <_obstack_memory_used@@Base+0x5010>  // b.any
  42c804:	ldr	x8, [sp, #56]
  42c808:	ldr	x9, [x8, #48]
  42c80c:	ldr	x9, [x9, #64]
  42c810:	ldr	x10, [x8, #48]
  42c814:	ldr	x10, [x10, #88]
  42c818:	cmp	x9, x10
  42c81c:	b.lt	42c930 <_obstack_memory_used@@Base+0x5010>  // b.tstop
  42c820:	ldr	x8, [sp, #56]
  42c824:	ldr	x9, [x8, #48]
  42c828:	ldr	x9, [x9]
  42c82c:	ldr	x10, [x8, #48]
  42c830:	ldr	x10, [x10, #40]
  42c834:	ldr	x11, [x8, #32]
  42c838:	add	x10, x10, x11
  42c83c:	ldrb	w12, [x9, x10]
  42c840:	str	w12, [sp, #68]
  42c844:	ldr	x9, [x8, #48]
  42c848:	ldr	x9, [x9, #120]
  42c84c:	cmp	x9, #0x0
  42c850:	cset	w12, ne  // ne = any
  42c854:	and	w12, w12, #0x1
  42c858:	mov	w0, w12
  42c85c:	sxtw	x9, w0
  42c860:	cbz	x9, 42c87c <_obstack_memory_used@@Base+0x4f5c>
  42c864:	ldr	x8, [sp, #56]
  42c868:	ldr	x9, [x8, #48]
  42c86c:	ldr	x9, [x9, #120]
  42c870:	ldrsw	x10, [sp, #68]
  42c874:	ldrb	w11, [x9, x10]
  42c878:	str	w11, [sp, #68]
  42c87c:	ldr	w8, [sp, #68]
  42c880:	ldr	x9, [sp, #56]
  42c884:	ldr	x10, [x9, #48]
  42c888:	ldr	x10, [x10, #8]
  42c88c:	ldr	x11, [x9, #24]
  42c890:	add	x10, x10, x11
  42c894:	strb	w8, [x10]
  42c898:	ldr	x10, [x9, #48]
  42c89c:	ldrb	w8, [x10, #140]
  42c8a0:	cmp	w8, #0x0
  42c8a4:	cset	w8, ne  // ne = any
  42c8a8:	and	w8, w8, #0x1
  42c8ac:	mov	w0, w8
  42c8b0:	sxtw	x10, w0
  42c8b4:	cbz	x10, 42c8d0 <_obstack_memory_used@@Base+0x4fb0>
  42c8b8:	ldr	x8, [sp, #56]
  42c8bc:	ldr	x9, [x8, #32]
  42c8c0:	ldr	x10, [x8, #48]
  42c8c4:	ldr	x10, [x10, #24]
  42c8c8:	ldr	x11, [x8, #24]
  42c8cc:	str	x9, [x10, x11, lsl #3]
  42c8d0:	ldr	x8, [sp, #56]
  42c8d4:	ldr	x9, [x8, #32]
  42c8d8:	add	x9, x9, #0x1
  42c8dc:	str	x9, [x8, #32]
  42c8e0:	ldr	w10, [sp, #68]
  42c8e4:	ldr	x9, [x8, #48]
  42c8e8:	ldr	x9, [x9, #16]
  42c8ec:	ldr	x11, [x8, #24]
  42c8f0:	add	x12, x11, #0x1
  42c8f4:	str	x12, [x8, #24]
  42c8f8:	str	w10, [x9, x11, lsl #2]
  42c8fc:	ldr	x9, [x8]
  42c900:	mov	x11, #0xffffffffffffffff    	// #-1
  42c904:	cmp	x9, x11
  42c908:	cset	w10, eq  // eq = none
  42c90c:	and	w10, w10, #0x1
  42c910:	mov	w0, w10
  42c914:	sxtw	x9, w0
  42c918:	cbz	x9, 42c92c <_obstack_memory_used@@Base+0x500c>
  42c91c:	ldr	x8, [sp, #56]
  42c920:	ldr	x9, [x8, #48]
  42c924:	ldr	x10, [x8, #40]
  42c928:	str	x10, [x9, #32]
  42c92c:	b	42c944 <_obstack_memory_used@@Base+0x5024>
  42c930:	ldr	x8, [sp, #56]
  42c934:	ldr	x9, [x8, #48]
  42c938:	ldr	x10, [x8, #40]
  42c93c:	str	x10, [x9, #32]
  42c940:	b	42c948 <_obstack_memory_used@@Base+0x5028>
  42c944:	b	42c1e4 <_obstack_memory_used@@Base+0x48c4>
  42c948:	ldr	x8, [sp, #56]
  42c94c:	ldr	x9, [x8, #24]
  42c950:	ldr	x10, [x8, #48]
  42c954:	str	x9, [x10, #48]
  42c958:	ldr	x9, [x8, #32]
  42c95c:	ldr	x10, [x8, #48]
  42c960:	str	x9, [x10, #56]
  42c964:	stur	wzr, [x29, #-4]
  42c968:	ldur	w0, [x29, #-4]
  42c96c:	ldr	x28, [sp, #288]
  42c970:	ldp	x29, x30, [sp, #272]
  42c974:	add	sp, sp, #0x130
  42c978:	ret
  42c97c:	sub	sp, sp, #0x40
  42c980:	stp	x29, x30, [sp, #48]
  42c984:	add	x29, sp, #0x30
  42c988:	stur	x0, [x29, #-8]
  42c98c:	ldur	x8, [x29, #-8]
  42c990:	ldr	x8, [x8, #64]
  42c994:	ldur	x9, [x29, #-8]
  42c998:	ldr	x9, [x9, #88]
  42c99c:	cmp	x8, x9
  42c9a0:	b.le	42c9b4 <_obstack_memory_used@@Base+0x5094>
  42c9a4:	ldur	x8, [x29, #-8]
  42c9a8:	ldr	x8, [x8, #88]
  42c9ac:	str	x8, [sp, #8]
  42c9b0:	b	42c9c0 <_obstack_memory_used@@Base+0x50a0>
  42c9b4:	ldur	x8, [x29, #-8]
  42c9b8:	ldr	x8, [x8, #64]
  42c9bc:	str	x8, [sp, #8]
  42c9c0:	ldr	x8, [sp, #8]
  42c9c4:	str	x8, [sp, #24]
  42c9c8:	ldur	x8, [x29, #-8]
  42c9cc:	ldr	x8, [x8, #48]
  42c9d0:	stur	x8, [x29, #-16]
  42c9d4:	ldur	x8, [x29, #-16]
  42c9d8:	ldr	x9, [sp, #24]
  42c9dc:	cmp	x8, x9
  42c9e0:	b.ge	42ca64 <_obstack_memory_used@@Base+0x5144>  // b.tcont
  42c9e4:	ldur	x8, [x29, #-8]
  42c9e8:	ldr	x8, [x8]
  42c9ec:	ldur	x9, [x29, #-8]
  42c9f0:	ldr	x9, [x9, #40]
  42c9f4:	ldur	x10, [x29, #-16]
  42c9f8:	add	x9, x9, x10
  42c9fc:	ldrb	w11, [x8, x9]
  42ca00:	str	w11, [sp, #20]
  42ca04:	ldur	x8, [x29, #-8]
  42ca08:	ldr	x8, [x8, #120]
  42ca0c:	cmp	x8, #0x0
  42ca10:	cset	w11, ne  // ne = any
  42ca14:	and	w11, w11, #0x1
  42ca18:	mov	w0, w11
  42ca1c:	sxtw	x8, w0
  42ca20:	cbz	x8, 42ca38 <_obstack_memory_used@@Base+0x5118>
  42ca24:	ldur	x8, [x29, #-8]
  42ca28:	ldr	x8, [x8, #120]
  42ca2c:	ldrsw	x9, [sp, #20]
  42ca30:	ldrb	w10, [x8, x9]
  42ca34:	str	w10, [sp, #20]
  42ca38:	ldr	w0, [sp, #20]
  42ca3c:	bl	402460 <toupper@plt>
  42ca40:	ldur	x8, [x29, #-8]
  42ca44:	ldr	x8, [x8, #8]
  42ca48:	ldur	x9, [x29, #-16]
  42ca4c:	add	x8, x8, x9
  42ca50:	strb	w0, [x8]
  42ca54:	ldur	x8, [x29, #-16]
  42ca58:	add	x8, x8, #0x1
  42ca5c:	stur	x8, [x29, #-16]
  42ca60:	b	42c9d4 <_obstack_memory_used@@Base+0x50b4>
  42ca64:	ldur	x8, [x29, #-16]
  42ca68:	ldur	x9, [x29, #-8]
  42ca6c:	str	x8, [x9, #48]
  42ca70:	ldur	x8, [x29, #-16]
  42ca74:	ldur	x9, [x29, #-8]
  42ca78:	str	x8, [x9, #56]
  42ca7c:	ldp	x29, x30, [sp, #48]
  42ca80:	add	sp, sp, #0x40
  42ca84:	ret
  42ca88:	sub	sp, sp, #0xb0
  42ca8c:	stp	x29, x30, [sp, #160]
  42ca90:	add	x29, sp, #0xa0
  42ca94:	stur	x0, [x29, #-8]
  42ca98:	ldur	x8, [x29, #-8]
  42ca9c:	ldr	x8, [x8, #64]
  42caa0:	ldur	x9, [x29, #-8]
  42caa4:	ldr	x9, [x9, #88]
  42caa8:	cmp	x8, x9
  42caac:	b.le	42cac0 <_obstack_memory_used@@Base+0x51a0>
  42cab0:	ldur	x8, [x29, #-8]
  42cab4:	ldr	x8, [x8, #88]
  42cab8:	str	x8, [sp, #16]
  42cabc:	b	42cacc <_obstack_memory_used@@Base+0x51ac>
  42cac0:	ldur	x8, [x29, #-8]
  42cac4:	ldr	x8, [x8, #64]
  42cac8:	str	x8, [sp, #16]
  42cacc:	ldr	x8, [sp, #16]
  42cad0:	str	x8, [sp, #64]
  42cad4:	ldur	x8, [x29, #-8]
  42cad8:	ldr	x8, [x8, #48]
  42cadc:	str	x8, [sp, #72]
  42cae0:	ldr	x8, [sp, #72]
  42cae4:	ldr	x9, [sp, #64]
  42cae8:	cmp	x8, x9
  42caec:	b.ge	42cda8 <_obstack_memory_used@@Base+0x5488>  // b.tcont
  42caf0:	ldr	x8, [sp, #64]
  42caf4:	ldr	x9, [sp, #72]
  42caf8:	subs	x8, x8, x9
  42cafc:	str	x8, [sp, #56]
  42cb00:	ldur	x8, [x29, #-8]
  42cb04:	ldr	x8, [x8, #32]
  42cb08:	str	x8, [sp, #80]
  42cb0c:	ldur	x8, [x29, #-8]
  42cb10:	ldr	x8, [x8, #120]
  42cb14:	cmp	x8, #0x0
  42cb18:	cset	w10, ne  // ne = any
  42cb1c:	and	w10, w10, #0x1
  42cb20:	mov	w0, w10
  42cb24:	sxtw	x8, w0
  42cb28:	cbz	x8, 42cbf0 <_obstack_memory_used@@Base+0x52d0>
  42cb2c:	str	wzr, [sp, #28]
  42cb30:	ldr	w8, [sp, #28]
  42cb34:	ldur	x9, [x29, #-8]
  42cb38:	ldr	w10, [x9, #144]
  42cb3c:	mov	w11, #0x0                   	// #0
  42cb40:	cmp	w8, w10
  42cb44:	str	w11, [sp, #12]
  42cb48:	b.ge	42cb60 <_obstack_memory_used@@Base+0x5240>  // b.tcont
  42cb4c:	ldrsw	x8, [sp, #28]
  42cb50:	ldr	x9, [sp, #56]
  42cb54:	cmp	x8, x9
  42cb58:	cset	w10, lt  // lt = tstop
  42cb5c:	str	w10, [sp, #12]
  42cb60:	ldr	w8, [sp, #12]
  42cb64:	tbnz	w8, #0, 42cb6c <_obstack_memory_used@@Base+0x524c>
  42cb68:	b	42cbe4 <_obstack_memory_used@@Base+0x52c4>
  42cb6c:	ldur	x8, [x29, #-8]
  42cb70:	ldr	x8, [x8]
  42cb74:	ldur	x9, [x29, #-8]
  42cb78:	ldr	x9, [x9, #40]
  42cb7c:	ldr	x10, [sp, #72]
  42cb80:	add	x9, x9, x10
  42cb84:	ldrsw	x10, [sp, #28]
  42cb88:	add	x9, x9, x10
  42cb8c:	ldrb	w11, [x8, x9]
  42cb90:	str	w11, [sp, #24]
  42cb94:	ldur	x8, [x29, #-8]
  42cb98:	ldr	x8, [x8, #120]
  42cb9c:	ldrsw	x9, [sp, #24]
  42cba0:	add	x8, x8, x9
  42cba4:	ldrb	w11, [x8]
  42cba8:	ldur	x8, [x29, #-8]
  42cbac:	ldr	x8, [x8, #8]
  42cbb0:	ldr	x9, [sp, #72]
  42cbb4:	ldrsw	x10, [sp, #28]
  42cbb8:	add	x9, x9, x10
  42cbbc:	add	x8, x8, x9
  42cbc0:	strb	w11, [x8]
  42cbc4:	ldrsw	x8, [sp, #28]
  42cbc8:	sub	x9, x29, #0x48
  42cbcc:	add	x8, x9, x8
  42cbd0:	strb	w11, [x8]
  42cbd4:	ldr	w8, [sp, #28]
  42cbd8:	add	w8, w8, #0x1
  42cbdc:	str	w8, [sp, #28]
  42cbe0:	b	42cb30 <_obstack_memory_used@@Base+0x5210>
  42cbe4:	sub	x8, x29, #0x48
  42cbe8:	str	x8, [sp, #32]
  42cbec:	b	42cc10 <_obstack_memory_used@@Base+0x52f0>
  42cbf0:	ldur	x8, [x29, #-8]
  42cbf4:	ldr	x8, [x8]
  42cbf8:	ldur	x9, [x29, #-8]
  42cbfc:	ldr	x9, [x9, #40]
  42cc00:	add	x8, x8, x9
  42cc04:	ldr	x9, [sp, #72]
  42cc08:	add	x8, x8, x9
  42cc0c:	str	x8, [sp, #32]
  42cc10:	ldr	x1, [sp, #32]
  42cc14:	ldr	x2, [sp, #56]
  42cc18:	ldur	x8, [x29, #-8]
  42cc1c:	add	x3, x8, #0x20
  42cc20:	add	x0, sp, #0x2c
  42cc24:	bl	4271dc <wcrtomb@plt+0x248cc>
  42cc28:	str	x0, [sp, #48]
  42cc2c:	ldr	x8, [sp, #48]
  42cc30:	mov	x9, #0xffffffffffffffff    	// #-1
  42cc34:	mov	w10, #0x1                   	// #1
  42cc38:	cmp	x8, x9
  42cc3c:	str	w10, [sp, #8]
  42cc40:	b.eq	42cc90 <_obstack_memory_used@@Base+0x5370>  // b.none
  42cc44:	ldr	x8, [sp, #48]
  42cc48:	mov	w9, #0x1                   	// #1
  42cc4c:	str	w9, [sp, #8]
  42cc50:	cbz	x8, 42cc90 <_obstack_memory_used@@Base+0x5370>
  42cc54:	ldr	x8, [sp, #48]
  42cc58:	mov	x9, #0xfffffffffffffffe    	// #-2
  42cc5c:	mov	w10, #0x0                   	// #0
  42cc60:	cmp	x8, x9
  42cc64:	str	w10, [sp, #4]
  42cc68:	b.ne	42cc88 <_obstack_memory_used@@Base+0x5368>  // b.any
  42cc6c:	ldur	x8, [x29, #-8]
  42cc70:	ldr	x8, [x8, #64]
  42cc74:	ldur	x9, [x29, #-8]
  42cc78:	ldr	x9, [x9, #88]
  42cc7c:	cmp	x8, x9
  42cc80:	cset	w10, ge  // ge = tcont
  42cc84:	str	w10, [sp, #4]
  42cc88:	ldr	w8, [sp, #4]
  42cc8c:	str	w8, [sp, #8]
  42cc90:	ldr	w8, [sp, #8]
  42cc94:	and	w8, w8, #0x1
  42cc98:	mov	w0, w8
  42cc9c:	sxtw	x9, w0
  42cca0:	cbz	x9, 42cd14 <_obstack_memory_used@@Base+0x53f4>
  42cca4:	mov	x8, #0x1                   	// #1
  42cca8:	str	x8, [sp, #48]
  42ccac:	ldur	x8, [x29, #-8]
  42ccb0:	ldr	x8, [x8]
  42ccb4:	ldur	x9, [x29, #-8]
  42ccb8:	ldr	x9, [x9, #40]
  42ccbc:	ldr	x10, [sp, #72]
  42ccc0:	add	x9, x9, x10
  42ccc4:	ldrb	w11, [x8, x9]
  42ccc8:	str	w11, [sp, #44]
  42cccc:	ldur	x8, [x29, #-8]
  42ccd0:	ldr	x8, [x8, #120]
  42ccd4:	cmp	x8, #0x0
  42ccd8:	cset	w11, ne  // ne = any
  42ccdc:	and	w11, w11, #0x1
  42cce0:	mov	w0, w11
  42cce4:	sxtw	x8, w0
  42cce8:	cbz	x8, 42cd04 <_obstack_memory_used@@Base+0x53e4>
  42ccec:	ldur	x8, [x29, #-8]
  42ccf0:	ldr	x8, [x8, #120]
  42ccf4:	ldr	w9, [sp, #44]
  42ccf8:	mov	w10, w9
  42ccfc:	ldrb	w9, [x8, x10]
  42cd00:	str	w9, [sp, #44]
  42cd04:	ldur	x8, [x29, #-8]
  42cd08:	ldr	x9, [sp, #80]
  42cd0c:	str	x9, [x8, #32]
  42cd10:	b	42cd44 <_obstack_memory_used@@Base+0x5424>
  42cd14:	ldr	x8, [sp, #48]
  42cd18:	mov	x9, #0xfffffffffffffffe    	// #-2
  42cd1c:	cmp	x8, x9
  42cd20:	cset	w10, eq  // eq = none
  42cd24:	and	w10, w10, #0x1
  42cd28:	mov	w0, w10
  42cd2c:	sxtw	x8, w0
  42cd30:	cbz	x8, 42cd44 <_obstack_memory_used@@Base+0x5424>
  42cd34:	ldur	x8, [x29, #-8]
  42cd38:	ldr	x9, [sp, #80]
  42cd3c:	str	x9, [x8, #32]
  42cd40:	b	42cda8 <_obstack_memory_used@@Base+0x5488>
  42cd44:	ldr	w8, [sp, #44]
  42cd48:	ldur	x9, [x29, #-8]
  42cd4c:	ldr	x9, [x9, #16]
  42cd50:	ldr	x10, [sp, #72]
  42cd54:	add	x11, x10, #0x1
  42cd58:	str	x11, [sp, #72]
  42cd5c:	str	w8, [x9, x10, lsl #2]
  42cd60:	ldr	x9, [sp, #72]
  42cd64:	ldr	x10, [sp, #48]
  42cd68:	add	x9, x9, x10
  42cd6c:	subs	x9, x9, #0x1
  42cd70:	str	x9, [sp, #56]
  42cd74:	ldr	x8, [sp, #72]
  42cd78:	ldr	x9, [sp, #56]
  42cd7c:	cmp	x8, x9
  42cd80:	b.ge	42cda4 <_obstack_memory_used@@Base+0x5484>  // b.tcont
  42cd84:	ldur	x8, [x29, #-8]
  42cd88:	ldr	x8, [x8, #16]
  42cd8c:	ldr	x9, [sp, #72]
  42cd90:	add	x10, x9, #0x1
  42cd94:	str	x10, [sp, #72]
  42cd98:	mov	w11, #0xffffffff            	// #-1
  42cd9c:	str	w11, [x8, x9, lsl #2]
  42cda0:	b	42cd74 <_obstack_memory_used@@Base+0x5454>
  42cda4:	b	42cae0 <_obstack_memory_used@@Base+0x51c0>
  42cda8:	ldr	x8, [sp, #72]
  42cdac:	ldur	x9, [x29, #-8]
  42cdb0:	str	x8, [x9, #48]
  42cdb4:	ldr	x8, [sp, #72]
  42cdb8:	ldur	x9, [x29, #-8]
  42cdbc:	str	x8, [x9, #56]
  42cdc0:	ldp	x29, x30, [sp, #160]
  42cdc4:	add	sp, sp, #0xb0
  42cdc8:	ret
  42cdcc:	sub	sp, sp, #0x30
  42cdd0:	str	x0, [sp, #40]
  42cdd4:	ldr	x8, [sp, #40]
  42cdd8:	ldr	x8, [x8, #64]
  42cddc:	ldr	x9, [sp, #40]
  42cde0:	ldr	x9, [x9, #88]
  42cde4:	cmp	x8, x9
  42cde8:	b.le	42cdfc <_obstack_memory_used@@Base+0x54dc>
  42cdec:	ldr	x8, [sp, #40]
  42cdf0:	ldr	x8, [x8, #88]
  42cdf4:	str	x8, [sp, #8]
  42cdf8:	b	42ce08 <_obstack_memory_used@@Base+0x54e8>
  42cdfc:	ldr	x8, [sp, #40]
  42ce00:	ldr	x8, [x8, #64]
  42ce04:	str	x8, [sp, #8]
  42ce08:	ldr	x8, [sp, #8]
  42ce0c:	str	x8, [sp, #24]
  42ce10:	ldr	x8, [sp, #40]
  42ce14:	ldr	x8, [x8, #48]
  42ce18:	str	x8, [sp, #32]
  42ce1c:	ldr	x8, [sp, #32]
  42ce20:	ldr	x9, [sp, #24]
  42ce24:	cmp	x8, x9
  42ce28:	b.ge	42ce84 <_obstack_memory_used@@Base+0x5564>  // b.tcont
  42ce2c:	ldr	x8, [sp, #40]
  42ce30:	ldr	x8, [x8]
  42ce34:	ldr	x9, [sp, #40]
  42ce38:	ldr	x9, [x9, #40]
  42ce3c:	ldr	x10, [sp, #32]
  42ce40:	add	x9, x9, x10
  42ce44:	ldrb	w11, [x8, x9]
  42ce48:	str	w11, [sp, #20]
  42ce4c:	ldr	x8, [sp, #40]
  42ce50:	ldr	x8, [x8, #120]
  42ce54:	ldrsw	x9, [sp, #20]
  42ce58:	add	x8, x8, x9
  42ce5c:	ldrb	w11, [x8]
  42ce60:	ldr	x8, [sp, #40]
  42ce64:	ldr	x8, [x8, #8]
  42ce68:	ldr	x9, [sp, #32]
  42ce6c:	add	x8, x8, x9
  42ce70:	strb	w11, [x8]
  42ce74:	ldr	x8, [sp, #32]
  42ce78:	add	x8, x8, #0x1
  42ce7c:	str	x8, [sp, #32]
  42ce80:	b	42ce1c <_obstack_memory_used@@Base+0x54fc>
  42ce84:	ldr	x8, [sp, #32]
  42ce88:	ldr	x9, [sp, #40]
  42ce8c:	str	x8, [x9, #48]
  42ce90:	ldr	x8, [sp, #32]
  42ce94:	ldr	x9, [sp, #40]
  42ce98:	str	x8, [x9, #56]
  42ce9c:	add	sp, sp, #0x30
  42cea0:	ret
  42cea4:	sub	sp, sp, #0x30
  42cea8:	stp	x29, x30, [sp, #32]
  42ceac:	add	x29, sp, #0x20
  42ceb0:	stur	x0, [x29, #-8]
  42ceb4:	str	x1, [sp, #16]
  42ceb8:	str	x2, [sp, #8]
  42cebc:	ldur	x0, [x29, #-8]
  42cec0:	ldr	x1, [sp, #16]
  42cec4:	ldr	x2, [sp, #8]
  42cec8:	bl	42d1c4 <_obstack_memory_used@@Base+0x58a4>
  42cecc:	ldr	x8, [sp, #16]
  42ced0:	ldr	x9, [x8, #72]
  42ced4:	add	x9, x9, w0, sxtw
  42ced8:	str	x9, [x8, #72]
  42cedc:	ldp	x29, x30, [sp, #32]
  42cee0:	add	sp, sp, #0x30
  42cee4:	ret
  42cee8:	sub	sp, sp, #0x80
  42ceec:	stp	x29, x30, [sp, #112]
  42cef0:	add	x29, sp, #0x70
  42cef4:	mov	x8, xzr
  42cef8:	stur	x0, [x29, #-16]
  42cefc:	stur	x1, [x29, #-24]
  42cf00:	stur	x2, [x29, #-32]
  42cf04:	stur	x3, [x29, #-40]
  42cf08:	stur	x4, [x29, #-48]
  42cf0c:	str	x5, [sp, #56]
  42cf10:	ldur	x9, [x29, #-24]
  42cf14:	ldr	x9, [x9]
  42cf18:	str	x9, [sp, #48]
  42cf1c:	str	x8, [sp, #32]
  42cf20:	ldr	x8, [sp, #48]
  42cf24:	ldr	x8, [x8, #168]
  42cf28:	str	x8, [sp, #24]
  42cf2c:	ldur	x0, [x29, #-16]
  42cf30:	ldur	x1, [x29, #-24]
  42cf34:	ldur	x2, [x29, #-32]
  42cf38:	ldur	x3, [x29, #-40]
  42cf3c:	ldur	x4, [x29, #-48]
  42cf40:	ldr	x5, [sp, #56]
  42cf44:	bl	42ddc4 <_obstack_memory_used@@Base+0x64a4>
  42cf48:	str	x0, [sp, #40]
  42cf4c:	ldr	x8, [sp, #56]
  42cf50:	ldr	w10, [x8]
  42cf54:	mov	w11, #0x0                   	// #0
  42cf58:	str	w11, [sp, #12]
  42cf5c:	cbz	w10, 42cf70 <_obstack_memory_used@@Base+0x5650>
  42cf60:	ldr	x8, [sp, #40]
  42cf64:	cmp	x8, #0x0
  42cf68:	cset	w9, eq  // eq = none
  42cf6c:	str	w9, [sp, #12]
  42cf70:	ldr	w8, [sp, #12]
  42cf74:	and	w8, w8, #0x1
  42cf78:	mov	w0, w8
  42cf7c:	sxtw	x9, w0
  42cf80:	cbz	x9, 42cf90 <_obstack_memory_used@@Base+0x5670>
  42cf84:	mov	x8, xzr
  42cf88:	stur	x8, [x29, #-8]
  42cf8c:	b	42d110 <_obstack_memory_used@@Base+0x57f0>
  42cf90:	ldur	x8, [x29, #-32]
  42cf94:	ldr	w9, [x8, #8]
  42cf98:	and	w9, w9, #0xff
  42cf9c:	cmp	w9, #0xa
  42cfa0:	b.ne	42d108 <_obstack_memory_used@@Base+0x57e8>  // b.any
  42cfa4:	ldur	x0, [x29, #-32]
  42cfa8:	ldur	x1, [x29, #-16]
  42cfac:	ldur	x8, [x29, #-40]
  42cfb0:	orr	x2, x8, #0x800000
  42cfb4:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  42cfb8:	ldur	x8, [x29, #-32]
  42cfbc:	ldr	w9, [x8, #8]
  42cfc0:	and	w9, w9, #0xff
  42cfc4:	cmp	w9, #0xa
  42cfc8:	b.eq	42d0b0 <_obstack_memory_used@@Base+0x5790>  // b.none
  42cfcc:	ldur	x8, [x29, #-32]
  42cfd0:	ldr	w9, [x8, #8]
  42cfd4:	and	w9, w9, #0xff
  42cfd8:	cmp	w9, #0x2
  42cfdc:	b.eq	42d0b0 <_obstack_memory_used@@Base+0x5790>  // b.none
  42cfe0:	ldur	x8, [x29, #-48]
  42cfe4:	cbz	x8, 42cffc <_obstack_memory_used@@Base+0x56dc>
  42cfe8:	ldur	x8, [x29, #-32]
  42cfec:	ldr	w9, [x8, #8]
  42cff0:	and	w9, w9, #0xff
  42cff4:	cmp	w9, #0x9
  42cff8:	b.eq	42d0b0 <_obstack_memory_used@@Base+0x5790>  // b.none
  42cffc:	ldr	x8, [sp, #48]
  42d000:	ldr	x8, [x8, #168]
  42d004:	str	x8, [sp, #16]
  42d008:	ldr	x8, [sp, #24]
  42d00c:	ldr	x9, [sp, #48]
  42d010:	str	x8, [x9, #168]
  42d014:	ldur	x0, [x29, #-16]
  42d018:	ldur	x1, [x29, #-24]
  42d01c:	ldur	x2, [x29, #-32]
  42d020:	ldur	x3, [x29, #-40]
  42d024:	ldur	x4, [x29, #-48]
  42d028:	ldr	x5, [sp, #56]
  42d02c:	bl	42ddc4 <_obstack_memory_used@@Base+0x64a4>
  42d030:	str	x0, [sp, #32]
  42d034:	ldr	x8, [sp, #56]
  42d038:	ldr	w10, [x8]
  42d03c:	mov	w11, #0x0                   	// #0
  42d040:	str	w11, [sp, #8]
  42d044:	cbz	w10, 42d058 <_obstack_memory_used@@Base+0x5738>
  42d048:	ldr	x8, [sp, #32]
  42d04c:	cmp	x8, #0x0
  42d050:	cset	w9, eq  // eq = none
  42d054:	str	w9, [sp, #8]
  42d058:	ldr	w8, [sp, #8]
  42d05c:	and	w8, w8, #0x1
  42d060:	mov	w0, w8
  42d064:	sxtw	x9, w0
  42d068:	cbz	x9, 42d098 <_obstack_memory_used@@Base+0x5778>
  42d06c:	ldr	x8, [sp, #40]
  42d070:	cbz	x8, 42d08c <_obstack_memory_used@@Base+0x576c>
  42d074:	ldr	x0, [sp, #40]
  42d078:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x66e0>
  42d07c:	add	x1, x1, #0x144
  42d080:	mov	x8, xzr
  42d084:	mov	x2, x8
  42d088:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42d08c:	mov	x8, xzr
  42d090:	stur	x8, [x29, #-8]
  42d094:	b	42d110 <_obstack_memory_used@@Base+0x57f0>
  42d098:	ldr	x8, [sp, #16]
  42d09c:	ldr	x9, [sp, #48]
  42d0a0:	ldr	x10, [x9, #168]
  42d0a4:	orr	x8, x10, x8
  42d0a8:	str	x8, [x9, #168]
  42d0ac:	b	42d0b8 <_obstack_memory_used@@Base+0x5798>
  42d0b0:	mov	x8, xzr
  42d0b4:	str	x8, [sp, #32]
  42d0b8:	ldr	x0, [sp, #48]
  42d0bc:	ldr	x1, [sp, #40]
  42d0c0:	ldr	x2, [sp, #32]
  42d0c4:	mov	w3, #0xa                   	// #10
  42d0c8:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42d0cc:	str	x0, [sp, #40]
  42d0d0:	ldr	x8, [sp, #40]
  42d0d4:	cmp	x8, #0x0
  42d0d8:	cset	w9, eq  // eq = none
  42d0dc:	and	w9, w9, #0x1
  42d0e0:	mov	w0, w9
  42d0e4:	sxtw	x8, w0
  42d0e8:	cbz	x8, 42d104 <_obstack_memory_used@@Base+0x57e4>
  42d0ec:	ldr	x8, [sp, #56]
  42d0f0:	mov	w9, #0xc                   	// #12
  42d0f4:	str	w9, [x8]
  42d0f8:	mov	x8, xzr
  42d0fc:	stur	x8, [x29, #-8]
  42d100:	b	42d110 <_obstack_memory_used@@Base+0x57f0>
  42d104:	b	42cf90 <_obstack_memory_used@@Base+0x5670>
  42d108:	ldr	x8, [sp, #40]
  42d10c:	stur	x8, [x29, #-8]
  42d110:	ldur	x0, [x29, #-8]
  42d114:	ldp	x29, x30, [sp, #112]
  42d118:	add	sp, sp, #0x80
  42d11c:	ret
  42d120:	sub	sp, sp, #0x40
  42d124:	stp	x29, x30, [sp, #48]
  42d128:	add	x29, sp, #0x30
  42d12c:	mov	x8, sp
  42d130:	stur	x0, [x29, #-8]
  42d134:	stur	x1, [x29, #-16]
  42d138:	str	x2, [sp, #24]
  42d13c:	str	w3, [sp, #20]
  42d140:	str	xzr, [sp]
  42d144:	ldr	w9, [sp, #20]
  42d148:	ldr	w10, [sp, #8]
  42d14c:	and	w9, w9, #0xff
  42d150:	and	w10, w10, #0xffffff00
  42d154:	orr	w9, w10, w9
  42d158:	str	w9, [sp, #8]
  42d15c:	ldr	w9, [sp, #8]
  42d160:	and	w9, w9, #0xfffc00ff
  42d164:	str	w9, [sp, #8]
  42d168:	ldr	w9, [sp, #8]
  42d16c:	and	w9, w9, #0xfffbffff
  42d170:	str	w9, [sp, #8]
  42d174:	ldr	w9, [sp, #8]
  42d178:	and	w9, w9, #0xfff7ffff
  42d17c:	str	w9, [sp, #8]
  42d180:	ldr	w9, [sp, #8]
  42d184:	and	w9, w9, #0xffefffff
  42d188:	str	w9, [sp, #8]
  42d18c:	ldr	w9, [sp, #8]
  42d190:	and	w9, w9, #0xffdfffff
  42d194:	str	w9, [sp, #8]
  42d198:	ldr	w9, [sp, #8]
  42d19c:	and	w9, w9, #0xffbfffff
  42d1a0:	str	w9, [sp, #8]
  42d1a4:	ldur	x0, [x29, #-8]
  42d1a8:	ldur	x1, [x29, #-16]
  42d1ac:	ldr	x2, [sp, #24]
  42d1b0:	mov	x3, x8
  42d1b4:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42d1b8:	ldp	x29, x30, [sp, #48]
  42d1bc:	add	sp, sp, #0x40
  42d1c0:	ret
  42d1c4:	sub	sp, sp, #0x70
  42d1c8:	stp	x29, x30, [sp, #96]
  42d1cc:	add	x29, sp, #0x60
  42d1d0:	stur	x0, [x29, #-16]
  42d1d4:	stur	x1, [x29, #-24]
  42d1d8:	stur	x2, [x29, #-32]
  42d1dc:	ldur	x8, [x29, #-24]
  42d1e0:	ldr	x8, [x8, #104]
  42d1e4:	ldur	x9, [x29, #-24]
  42d1e8:	ldr	x9, [x9, #72]
  42d1ec:	cmp	x8, x9
  42d1f0:	b.gt	42d210 <_obstack_memory_used@@Base+0x58f0>
  42d1f4:	ldur	x8, [x29, #-16]
  42d1f8:	ldr	w9, [x8, #8]
  42d1fc:	and	w9, w9, #0xffffff00
  42d200:	orr	w9, w9, #0x2
  42d204:	str	w9, [x8, #8]
  42d208:	stur	wzr, [x29, #-4]
  42d20c:	b	42dbac <_obstack_memory_used@@Base+0x628c>
  42d210:	ldur	x8, [x29, #-24]
  42d214:	ldr	x8, [x8, #8]
  42d218:	ldur	x9, [x29, #-24]
  42d21c:	ldr	x9, [x9, #72]
  42d220:	add	x9, x9, #0x0
  42d224:	add	x8, x8, x9
  42d228:	ldrb	w10, [x8]
  42d22c:	sturb	w10, [x29, #-33]
  42d230:	ldurb	w10, [x29, #-33]
  42d234:	ldur	x8, [x29, #-16]
  42d238:	strb	w10, [x8]
  42d23c:	ldur	x8, [x29, #-16]
  42d240:	ldr	w10, [x8, #8]
  42d244:	and	w10, w10, #0xffbfffff
  42d248:	str	w10, [x8, #8]
  42d24c:	ldur	x8, [x29, #-16]
  42d250:	ldr	w10, [x8, #8]
  42d254:	and	w10, w10, #0xffdfffff
  42d258:	str	w10, [x8, #8]
  42d25c:	ldur	x8, [x29, #-24]
  42d260:	ldr	w10, [x8, #144]
  42d264:	cmp	w10, #0x1
  42d268:	b.le	42d2d8 <_obstack_memory_used@@Base+0x59b8>
  42d26c:	ldur	x8, [x29, #-24]
  42d270:	ldr	x8, [x8, #72]
  42d274:	ldur	x9, [x29, #-24]
  42d278:	ldr	x9, [x9, #48]
  42d27c:	cmp	x8, x9
  42d280:	b.eq	42d2d8 <_obstack_memory_used@@Base+0x59b8>  // b.none
  42d284:	ldur	x8, [x29, #-24]
  42d288:	ldr	x8, [x8, #16]
  42d28c:	ldur	x9, [x29, #-24]
  42d290:	ldr	x9, [x9, #72]
  42d294:	ldr	w10, [x8, x9, lsl #2]
  42d298:	mov	w11, #0xffffffff            	// #-1
  42d29c:	cmp	w10, w11
  42d2a0:	b.ne	42d2d8 <_obstack_memory_used@@Base+0x59b8>  // b.any
  42d2a4:	ldur	x8, [x29, #-16]
  42d2a8:	ldr	w9, [x8, #8]
  42d2ac:	and	w9, w9, #0xffffff00
  42d2b0:	mov	w10, #0x1                   	// #1
  42d2b4:	orr	w9, w9, #0x1
  42d2b8:	str	w9, [x8, #8]
  42d2bc:	ldur	x8, [x29, #-16]
  42d2c0:	ldr	w9, [x8, #8]
  42d2c4:	and	w9, w9, #0xffdfffff
  42d2c8:	orr	w9, w9, #0x200000
  42d2cc:	str	w9, [x8, #8]
  42d2d0:	stur	w10, [x29, #-4]
  42d2d4:	b	42dbac <_obstack_memory_used@@Base+0x628c>
  42d2d8:	ldurb	w8, [x29, #-33]
  42d2dc:	cmp	w8, #0x5c
  42d2e0:	b.ne	42d7a8 <_obstack_memory_used@@Base+0x5e88>  // b.any
  42d2e4:	ldur	x8, [x29, #-24]
  42d2e8:	ldr	x8, [x8, #72]
  42d2ec:	add	x8, x8, #0x1
  42d2f0:	ldur	x9, [x29, #-24]
  42d2f4:	ldr	x9, [x9, #88]
  42d2f8:	cmp	x8, x9
  42d2fc:	b.lt	42d324 <_obstack_memory_used@@Base+0x5a04>  // b.tstop
  42d300:	ldur	x8, [x29, #-16]
  42d304:	ldr	w9, [x8, #8]
  42d308:	and	w9, w9, #0xffffff00
  42d30c:	mov	w10, #0x24                  	// #36
  42d310:	orr	w9, w9, w10
  42d314:	str	w9, [x8, #8]
  42d318:	mov	w9, #0x1                   	// #1
  42d31c:	stur	w9, [x29, #-4]
  42d320:	b	42dbac <_obstack_memory_used@@Base+0x628c>
  42d324:	ldur	x0, [x29, #-24]
  42d328:	mov	x1, #0x1                   	// #1
  42d32c:	bl	42dbbc <_obstack_memory_used@@Base+0x629c>
  42d330:	sturb	w0, [x29, #-34]
  42d334:	ldurb	w8, [x29, #-34]
  42d338:	ldur	x9, [x29, #-16]
  42d33c:	strb	w8, [x9]
  42d340:	ldur	x9, [x29, #-16]
  42d344:	ldr	w8, [x9, #8]
  42d348:	and	w8, w8, #0xffffff00
  42d34c:	orr	w8, w8, #0x1
  42d350:	str	w8, [x9, #8]
  42d354:	ldur	x9, [x29, #-24]
  42d358:	ldr	w8, [x9, #144]
  42d35c:	cmp	w8, #0x1
  42d360:	b.le	42d3cc <_obstack_memory_used@@Base+0x5aac>
  42d364:	ldur	x0, [x29, #-24]
  42d368:	ldur	x8, [x29, #-24]
  42d36c:	ldr	x8, [x8, #72]
  42d370:	add	x1, x8, #0x1
  42d374:	bl	42dd70 <_obstack_memory_used@@Base+0x6450>
  42d378:	stur	w0, [x29, #-40]
  42d37c:	ldur	w0, [x29, #-40]
  42d380:	bl	4027b0 <iswalnum@plt>
  42d384:	mov	w9, #0x1                   	// #1
  42d388:	str	w9, [sp, #28]
  42d38c:	cbnz	w0, 42d3a0 <_obstack_memory_used@@Base+0x5a80>
  42d390:	ldur	w8, [x29, #-40]
  42d394:	cmp	w8, #0x5f
  42d398:	cset	w8, eq  // eq = none
  42d39c:	str	w8, [sp, #28]
  42d3a0:	ldr	w8, [sp, #28]
  42d3a4:	tst	w8, #0x1
  42d3a8:	cset	w8, ne  // ne = any
  42d3ac:	and	w8, w8, #0x1
  42d3b0:	ldur	x9, [x29, #-16]
  42d3b4:	ldr	w10, [x9, #8]
  42d3b8:	and	w8, w8, #0x1
  42d3bc:	and	w10, w10, #0xffbfffff
  42d3c0:	orr	w8, w10, w8, lsl #22
  42d3c4:	str	w8, [x9, #8]
  42d3c8:	b	42d424 <_obstack_memory_used@@Base+0x5b04>
  42d3cc:	bl	4026b0 <__ctype_b_loc@plt>
  42d3d0:	ldr	x8, [x0]
  42d3d4:	ldurb	w9, [x29, #-34]
  42d3d8:	ldrh	w9, [x8, w9, sxtw #1]
  42d3dc:	and	w9, w9, #0x8
  42d3e0:	mov	w10, #0x1                   	// #1
  42d3e4:	str	w10, [sp, #24]
  42d3e8:	cbnz	w9, 42d3fc <_obstack_memory_used@@Base+0x5adc>
  42d3ec:	ldurb	w8, [x29, #-34]
  42d3f0:	cmp	w8, #0x5f
  42d3f4:	cset	w8, eq  // eq = none
  42d3f8:	str	w8, [sp, #24]
  42d3fc:	ldr	w8, [sp, #24]
  42d400:	tst	w8, #0x1
  42d404:	cset	w8, ne  // ne = any
  42d408:	and	w8, w8, #0x1
  42d40c:	ldur	x9, [x29, #-16]
  42d410:	ldr	w10, [x9, #8]
  42d414:	and	w8, w8, #0x1
  42d418:	and	w10, w10, #0xffbfffff
  42d41c:	orr	w8, w10, w8, lsl #22
  42d420:	str	w8, [x9, #8]
  42d424:	ldurb	w8, [x29, #-34]
  42d428:	subs	w8, w8, #0x27
  42d42c:	mov	w9, w8
  42d430:	ubfx	x9, x9, #0, #32
  42d434:	cmp	x9, #0x56
  42d438:	str	x9, [sp, #16]
  42d43c:	b.hi	42d79c <_obstack_memory_used@@Base+0x5e7c>  // b.pmore
  42d440:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42d444:	add	x8, x8, #0x69c
  42d448:	ldr	x11, [sp, #16]
  42d44c:	ldrsw	x10, [x8, x11, lsl #2]
  42d450:	add	x9, x8, x10
  42d454:	br	x9
  42d458:	ldur	x8, [x29, #-32]
  42d45c:	and	x8, x8, #0x400
  42d460:	cbnz	x8, 42d488 <_obstack_memory_used@@Base+0x5b68>
  42d464:	ldur	x8, [x29, #-32]
  42d468:	and	x8, x8, #0x8000
  42d46c:	cbnz	x8, 42d488 <_obstack_memory_used@@Base+0x5b68>
  42d470:	ldur	x8, [x29, #-16]
  42d474:	ldr	w9, [x8, #8]
  42d478:	and	w9, w9, #0xffffff00
  42d47c:	mov	w10, #0xa                   	// #10
  42d480:	orr	w9, w9, w10
  42d484:	str	w9, [x8, #8]
  42d488:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d48c:	ldur	x8, [x29, #-32]
  42d490:	and	x8, x8, #0x4000
  42d494:	cbnz	x8, 42d4c4 <_obstack_memory_used@@Base+0x5ba4>
  42d498:	ldur	x8, [x29, #-16]
  42d49c:	ldr	w9, [x8, #8]
  42d4a0:	and	w9, w9, #0xffffff00
  42d4a4:	orr	w9, w9, #0x4
  42d4a8:	str	w9, [x8, #8]
  42d4ac:	ldurb	w9, [x29, #-34]
  42d4b0:	subs	w9, w9, #0x31
  42d4b4:	mov	w0, w9
  42d4b8:	sxtw	x8, w0
  42d4bc:	ldur	x10, [x29, #-16]
  42d4c0:	str	x8, [x10]
  42d4c4:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d4c8:	ldur	x8, [x29, #-32]
  42d4cc:	and	x8, x8, #0x80000
  42d4d0:	cbnz	x8, 42d4f4 <_obstack_memory_used@@Base+0x5bd4>
  42d4d4:	ldur	x8, [x29, #-16]
  42d4d8:	ldr	w9, [x8, #8]
  42d4dc:	and	w9, w9, #0xffffff00
  42d4e0:	orr	w9, w9, #0xc
  42d4e4:	str	w9, [x8, #8]
  42d4e8:	ldur	x8, [x29, #-16]
  42d4ec:	mov	w9, #0x6                   	// #6
  42d4f0:	str	w9, [x8]
  42d4f4:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d4f8:	ldur	x8, [x29, #-32]
  42d4fc:	and	x8, x8, #0x80000
  42d500:	cbnz	x8, 42d524 <_obstack_memory_used@@Base+0x5c04>
  42d504:	ldur	x8, [x29, #-16]
  42d508:	ldr	w9, [x8, #8]
  42d50c:	and	w9, w9, #0xffffff00
  42d510:	orr	w9, w9, #0xc
  42d514:	str	w9, [x8, #8]
  42d518:	ldur	x8, [x29, #-16]
  42d51c:	mov	w9, #0x9                   	// #9
  42d520:	str	w9, [x8]
  42d524:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d528:	ldur	x8, [x29, #-32]
  42d52c:	and	x8, x8, #0x80000
  42d530:	cbnz	x8, 42d554 <_obstack_memory_used@@Base+0x5c34>
  42d534:	ldur	x8, [x29, #-16]
  42d538:	ldr	w9, [x8, #8]
  42d53c:	and	w9, w9, #0xffffff00
  42d540:	orr	w9, w9, #0xc
  42d544:	str	w9, [x8, #8]
  42d548:	ldur	x8, [x29, #-16]
  42d54c:	mov	w9, #0x100                 	// #256
  42d550:	str	w9, [x8]
  42d554:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d558:	ldur	x8, [x29, #-32]
  42d55c:	and	x8, x8, #0x80000
  42d560:	cbnz	x8, 42d584 <_obstack_memory_used@@Base+0x5c64>
  42d564:	ldur	x8, [x29, #-16]
  42d568:	ldr	w9, [x8, #8]
  42d56c:	and	w9, w9, #0xffffff00
  42d570:	orr	w9, w9, #0xc
  42d574:	str	w9, [x8, #8]
  42d578:	ldur	x8, [x29, #-16]
  42d57c:	mov	w9, #0x200                 	// #512
  42d580:	str	w9, [x8]
  42d584:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d588:	ldur	x8, [x29, #-32]
  42d58c:	and	x8, x8, #0x80000
  42d590:	cbnz	x8, 42d5a8 <_obstack_memory_used@@Base+0x5c88>
  42d594:	ldur	x8, [x29, #-16]
  42d598:	ldr	w9, [x8, #8]
  42d59c:	and	w9, w9, #0xffffff00
  42d5a0:	orr	w9, w9, #0x20
  42d5a4:	str	w9, [x8, #8]
  42d5a8:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d5ac:	ldur	x8, [x29, #-32]
  42d5b0:	and	x8, x8, #0x80000
  42d5b4:	cbnz	x8, 42d5d0 <_obstack_memory_used@@Base+0x5cb0>
  42d5b8:	ldur	x8, [x29, #-16]
  42d5bc:	ldr	w9, [x8, #8]
  42d5c0:	and	w9, w9, #0xffffff00
  42d5c4:	mov	w10, #0x21                  	// #33
  42d5c8:	orr	w9, w9, w10
  42d5cc:	str	w9, [x8, #8]
  42d5d0:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d5d4:	ldur	x8, [x29, #-32]
  42d5d8:	and	x8, x8, #0x80000
  42d5dc:	cbnz	x8, 42d5f8 <_obstack_memory_used@@Base+0x5cd8>
  42d5e0:	ldur	x8, [x29, #-16]
  42d5e4:	ldr	w9, [x8, #8]
  42d5e8:	and	w9, w9, #0xffffff00
  42d5ec:	mov	w10, #0x22                  	// #34
  42d5f0:	orr	w9, w9, w10
  42d5f4:	str	w9, [x8, #8]
  42d5f8:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d5fc:	ldur	x8, [x29, #-32]
  42d600:	and	x8, x8, #0x80000
  42d604:	cbnz	x8, 42d620 <_obstack_memory_used@@Base+0x5d00>
  42d608:	ldur	x8, [x29, #-16]
  42d60c:	ldr	w9, [x8, #8]
  42d610:	and	w9, w9, #0xffffff00
  42d614:	mov	w10, #0x23                  	// #35
  42d618:	orr	w9, w9, w10
  42d61c:	str	w9, [x8, #8]
  42d620:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d624:	ldur	x8, [x29, #-32]
  42d628:	and	x8, x8, #0x80000
  42d62c:	cbnz	x8, 42d650 <_obstack_memory_used@@Base+0x5d30>
  42d630:	ldur	x8, [x29, #-16]
  42d634:	ldr	w9, [x8, #8]
  42d638:	and	w9, w9, #0xffffff00
  42d63c:	orr	w9, w9, #0xc
  42d640:	str	w9, [x8, #8]
  42d644:	ldur	x8, [x29, #-16]
  42d648:	mov	w9, #0x40                  	// #64
  42d64c:	str	w9, [x8]
  42d650:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d654:	ldur	x8, [x29, #-32]
  42d658:	and	x8, x8, #0x80000
  42d65c:	cbnz	x8, 42d680 <_obstack_memory_used@@Base+0x5d60>
  42d660:	ldur	x8, [x29, #-16]
  42d664:	ldr	w9, [x8, #8]
  42d668:	and	w9, w9, #0xffffff00
  42d66c:	orr	w9, w9, #0xc
  42d670:	str	w9, [x8, #8]
  42d674:	ldur	x8, [x29, #-16]
  42d678:	mov	w9, #0x80                  	// #128
  42d67c:	str	w9, [x8]
  42d680:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d684:	ldur	x8, [x29, #-32]
  42d688:	and	x8, x8, #0x2000
  42d68c:	cbnz	x8, 42d6a4 <_obstack_memory_used@@Base+0x5d84>
  42d690:	ldur	x8, [x29, #-16]
  42d694:	ldr	w9, [x8, #8]
  42d698:	and	w9, w9, #0xffffff00
  42d69c:	orr	w9, w9, #0x8
  42d6a0:	str	w9, [x8, #8]
  42d6a4:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d6a8:	ldur	x8, [x29, #-32]
  42d6ac:	and	x8, x8, #0x2000
  42d6b0:	cbnz	x8, 42d6cc <_obstack_memory_used@@Base+0x5dac>
  42d6b4:	ldur	x8, [x29, #-16]
  42d6b8:	ldr	w9, [x8, #8]
  42d6bc:	and	w9, w9, #0xffffff00
  42d6c0:	mov	w10, #0x9                   	// #9
  42d6c4:	orr	w9, w9, w10
  42d6c8:	str	w9, [x8, #8]
  42d6cc:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d6d0:	ldur	x8, [x29, #-32]
  42d6d4:	and	x8, x8, #0x400
  42d6d8:	cbnz	x8, 42d700 <_obstack_memory_used@@Base+0x5de0>
  42d6dc:	ldur	x8, [x29, #-32]
  42d6e0:	and	x8, x8, #0x2
  42d6e4:	cbz	x8, 42d700 <_obstack_memory_used@@Base+0x5de0>
  42d6e8:	ldur	x8, [x29, #-16]
  42d6ec:	ldr	w9, [x8, #8]
  42d6f0:	and	w9, w9, #0xffffff00
  42d6f4:	mov	w10, #0x12                  	// #18
  42d6f8:	orr	w9, w9, w10
  42d6fc:	str	w9, [x8, #8]
  42d700:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d704:	ldur	x8, [x29, #-32]
  42d708:	and	x8, x8, #0x400
  42d70c:	cbnz	x8, 42d734 <_obstack_memory_used@@Base+0x5e14>
  42d710:	ldur	x8, [x29, #-32]
  42d714:	and	x8, x8, #0x2
  42d718:	cbz	x8, 42d734 <_obstack_memory_used@@Base+0x5e14>
  42d71c:	ldur	x8, [x29, #-16]
  42d720:	ldr	w9, [x8, #8]
  42d724:	and	w9, w9, #0xffffff00
  42d728:	mov	w10, #0x13                  	// #19
  42d72c:	orr	w9, w9, w10
  42d730:	str	w9, [x8, #8]
  42d734:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d738:	ldur	x8, [x29, #-32]
  42d73c:	and	x8, x8, #0x200
  42d740:	cbz	x8, 42d768 <_obstack_memory_used@@Base+0x5e48>
  42d744:	ldur	x8, [x29, #-32]
  42d748:	and	x8, x8, #0x1000
  42d74c:	cbnz	x8, 42d768 <_obstack_memory_used@@Base+0x5e48>
  42d750:	ldur	x8, [x29, #-16]
  42d754:	ldr	w9, [x8, #8]
  42d758:	and	w9, w9, #0xffffff00
  42d75c:	mov	w10, #0x17                  	// #23
  42d760:	orr	w9, w9, w10
  42d764:	str	w9, [x8, #8]
  42d768:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d76c:	ldur	x8, [x29, #-32]
  42d770:	and	x8, x8, #0x200
  42d774:	cbz	x8, 42d798 <_obstack_memory_used@@Base+0x5e78>
  42d778:	ldur	x8, [x29, #-32]
  42d77c:	and	x8, x8, #0x1000
  42d780:	cbnz	x8, 42d798 <_obstack_memory_used@@Base+0x5e78>
  42d784:	ldur	x8, [x29, #-16]
  42d788:	ldr	w9, [x8, #8]
  42d78c:	and	w9, w9, #0xffffff00
  42d790:	orr	w9, w9, #0x18
  42d794:	str	w9, [x8, #8]
  42d798:	b	42d79c <_obstack_memory_used@@Base+0x5e7c>
  42d79c:	mov	w8, #0x2                   	// #2
  42d7a0:	stur	w8, [x29, #-4]
  42d7a4:	b	42dbac <_obstack_memory_used@@Base+0x628c>
  42d7a8:	ldur	x8, [x29, #-16]
  42d7ac:	ldr	w9, [x8, #8]
  42d7b0:	and	w9, w9, #0xffffff00
  42d7b4:	orr	w9, w9, #0x1
  42d7b8:	str	w9, [x8, #8]
  42d7bc:	ldur	x8, [x29, #-24]
  42d7c0:	ldr	w9, [x8, #144]
  42d7c4:	cmp	w9, #0x1
  42d7c8:	b.le	42d830 <_obstack_memory_used@@Base+0x5f10>
  42d7cc:	ldur	x0, [x29, #-24]
  42d7d0:	ldur	x8, [x29, #-24]
  42d7d4:	ldr	x1, [x8, #72]
  42d7d8:	bl	42dd70 <_obstack_memory_used@@Base+0x6450>
  42d7dc:	stur	w0, [x29, #-44]
  42d7e0:	ldur	w0, [x29, #-44]
  42d7e4:	bl	4027b0 <iswalnum@plt>
  42d7e8:	mov	w9, #0x1                   	// #1
  42d7ec:	str	w9, [sp, #12]
  42d7f0:	cbnz	w0, 42d804 <_obstack_memory_used@@Base+0x5ee4>
  42d7f4:	ldur	w8, [x29, #-44]
  42d7f8:	cmp	w8, #0x5f
  42d7fc:	cset	w8, eq  // eq = none
  42d800:	str	w8, [sp, #12]
  42d804:	ldr	w8, [sp, #12]
  42d808:	tst	w8, #0x1
  42d80c:	cset	w8, ne  // ne = any
  42d810:	and	w8, w8, #0x1
  42d814:	ldur	x9, [x29, #-16]
  42d818:	ldr	w10, [x9, #8]
  42d81c:	and	w8, w8, #0x1
  42d820:	and	w10, w10, #0xffbfffff
  42d824:	orr	w8, w10, w8, lsl #22
  42d828:	str	w8, [x9, #8]
  42d82c:	b	42d888 <_obstack_memory_used@@Base+0x5f68>
  42d830:	bl	4026b0 <__ctype_b_loc@plt>
  42d834:	ldr	x8, [x0]
  42d838:	ldur	x9, [x29, #-16]
  42d83c:	ldrb	w10, [x9]
  42d840:	ldrh	w10, [x8, w10, sxtw #1]
  42d844:	and	w10, w10, #0x8
  42d848:	mov	w11, #0x1                   	// #1
  42d84c:	str	w11, [sp, #8]
  42d850:	cbnz	w10, 42d868 <_obstack_memory_used@@Base+0x5f48>
  42d854:	ldur	x8, [x29, #-16]
  42d858:	ldrb	w9, [x8]
  42d85c:	cmp	w9, #0x5f
  42d860:	cset	w9, eq  // eq = none
  42d864:	str	w9, [sp, #8]
  42d868:	ldr	w8, [sp, #8]
  42d86c:	and	w8, w8, #0x1
  42d870:	ldur	x9, [x29, #-16]
  42d874:	ldr	w10, [x9, #8]
  42d878:	and	w8, w8, #0x1
  42d87c:	and	w10, w10, #0xffbfffff
  42d880:	orr	w8, w10, w8, lsl #22
  42d884:	str	w8, [x9, #8]
  42d888:	ldurb	w8, [x29, #-33]
  42d88c:	subs	w8, w8, #0xa
  42d890:	mov	w9, w8
  42d894:	ubfx	x9, x9, #0, #32
  42d898:	cmp	x9, #0x73
  42d89c:	str	x9, [sp]
  42d8a0:	b.hi	42dba4 <_obstack_memory_used@@Base+0x6284>  // b.pmore
  42d8a4:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42d8a8:	add	x8, x8, #0x4cc
  42d8ac:	ldr	x11, [sp]
  42d8b0:	ldrsw	x10, [x8, x11, lsl #2]
  42d8b4:	add	x9, x8, x10
  42d8b8:	br	x9
  42d8bc:	ldur	x8, [x29, #-32]
  42d8c0:	and	x8, x8, #0x800
  42d8c4:	cbz	x8, 42d8e0 <_obstack_memory_used@@Base+0x5fc0>
  42d8c8:	ldur	x8, [x29, #-16]
  42d8cc:	ldr	w9, [x8, #8]
  42d8d0:	and	w9, w9, #0xffffff00
  42d8d4:	mov	w10, #0xa                   	// #10
  42d8d8:	orr	w9, w9, w10
  42d8dc:	str	w9, [x8, #8]
  42d8e0:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42d8e4:	ldur	x8, [x29, #-32]
  42d8e8:	and	x8, x8, #0x400
  42d8ec:	cbnz	x8, 42d914 <_obstack_memory_used@@Base+0x5ff4>
  42d8f0:	ldur	x8, [x29, #-32]
  42d8f4:	and	x8, x8, #0x8000
  42d8f8:	cbz	x8, 42d914 <_obstack_memory_used@@Base+0x5ff4>
  42d8fc:	ldur	x8, [x29, #-16]
  42d900:	ldr	w9, [x8, #8]
  42d904:	and	w9, w9, #0xffffff00
  42d908:	mov	w10, #0xa                   	// #10
  42d90c:	orr	w9, w9, w10
  42d910:	str	w9, [x8, #8]
  42d914:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42d918:	ldur	x8, [x29, #-16]
  42d91c:	ldr	w9, [x8, #8]
  42d920:	and	w9, w9, #0xffffff00
  42d924:	mov	w10, #0xb                   	// #11
  42d928:	orr	w9, w9, w10
  42d92c:	str	w9, [x8, #8]
  42d930:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42d934:	ldur	x8, [x29, #-32]
  42d938:	and	x8, x8, #0x400
  42d93c:	cbnz	x8, 42d964 <_obstack_memory_used@@Base+0x6044>
  42d940:	ldur	x8, [x29, #-32]
  42d944:	and	x8, x8, #0x2
  42d948:	cbnz	x8, 42d964 <_obstack_memory_used@@Base+0x6044>
  42d94c:	ldur	x8, [x29, #-16]
  42d950:	ldr	w9, [x8, #8]
  42d954:	and	w9, w9, #0xffffff00
  42d958:	mov	w10, #0x12                  	// #18
  42d95c:	orr	w9, w9, w10
  42d960:	str	w9, [x8, #8]
  42d964:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42d968:	ldur	x8, [x29, #-32]
  42d96c:	and	x8, x8, #0x400
  42d970:	cbnz	x8, 42d998 <_obstack_memory_used@@Base+0x6078>
  42d974:	ldur	x8, [x29, #-32]
  42d978:	and	x8, x8, #0x2
  42d97c:	cbnz	x8, 42d998 <_obstack_memory_used@@Base+0x6078>
  42d980:	ldur	x8, [x29, #-16]
  42d984:	ldr	w9, [x8, #8]
  42d988:	and	w9, w9, #0xffffff00
  42d98c:	mov	w10, #0x13                  	// #19
  42d990:	orr	w9, w9, w10
  42d994:	str	w9, [x8, #8]
  42d998:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42d99c:	ldur	x8, [x29, #-32]
  42d9a0:	and	x8, x8, #0x200
  42d9a4:	cbz	x8, 42d9cc <_obstack_memory_used@@Base+0x60ac>
  42d9a8:	ldur	x8, [x29, #-32]
  42d9ac:	and	x8, x8, #0x1000
  42d9b0:	cbz	x8, 42d9cc <_obstack_memory_used@@Base+0x60ac>
  42d9b4:	ldur	x8, [x29, #-16]
  42d9b8:	ldr	w9, [x8, #8]
  42d9bc:	and	w9, w9, #0xffffff00
  42d9c0:	mov	w10, #0x17                  	// #23
  42d9c4:	orr	w9, w9, w10
  42d9c8:	str	w9, [x8, #8]
  42d9cc:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42d9d0:	ldur	x8, [x29, #-32]
  42d9d4:	and	x8, x8, #0x200
  42d9d8:	cbz	x8, 42d9fc <_obstack_memory_used@@Base+0x60dc>
  42d9dc:	ldur	x8, [x29, #-32]
  42d9e0:	and	x8, x8, #0x1000
  42d9e4:	cbz	x8, 42d9fc <_obstack_memory_used@@Base+0x60dc>
  42d9e8:	ldur	x8, [x29, #-16]
  42d9ec:	ldr	w9, [x8, #8]
  42d9f0:	and	w9, w9, #0xffffff00
  42d9f4:	orr	w9, w9, #0x18
  42d9f8:	str	w9, [x8, #8]
  42d9fc:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42da00:	ldur	x8, [x29, #-32]
  42da04:	and	x8, x8, #0x2000
  42da08:	cbz	x8, 42da20 <_obstack_memory_used@@Base+0x6100>
  42da0c:	ldur	x8, [x29, #-16]
  42da10:	ldr	w9, [x8, #8]
  42da14:	and	w9, w9, #0xffffff00
  42da18:	orr	w9, w9, #0x8
  42da1c:	str	w9, [x8, #8]
  42da20:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42da24:	ldur	x8, [x29, #-32]
  42da28:	and	x8, x8, #0x2000
  42da2c:	cbz	x8, 42da48 <_obstack_memory_used@@Base+0x6128>
  42da30:	ldur	x8, [x29, #-16]
  42da34:	ldr	w9, [x8, #8]
  42da38:	and	w9, w9, #0xffffff00
  42da3c:	mov	w10, #0x9                   	// #9
  42da40:	orr	w9, w9, w10
  42da44:	str	w9, [x8, #8]
  42da48:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42da4c:	ldur	x8, [x29, #-16]
  42da50:	ldr	w9, [x8, #8]
  42da54:	and	w9, w9, #0xffffff00
  42da58:	mov	w10, #0x14                  	// #20
  42da5c:	orr	w9, w9, w10
  42da60:	str	w9, [x8, #8]
  42da64:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42da68:	ldur	x8, [x29, #-16]
  42da6c:	ldr	w9, [x8, #8]
  42da70:	and	w9, w9, #0xffffff00
  42da74:	mov	w10, #0x5                   	// #5
  42da78:	orr	w9, w9, w10
  42da7c:	str	w9, [x8, #8]
  42da80:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42da84:	ldur	x8, [x29, #-32]
  42da88:	mov	x9, #0x8                   	// #8
  42da8c:	movk	x9, #0x80, lsl #16
  42da90:	and	x8, x8, x9
  42da94:	cbnz	x8, 42dae0 <_obstack_memory_used@@Base+0x61c0>
  42da98:	ldur	x8, [x29, #-24]
  42da9c:	ldr	x8, [x8, #72]
  42daa0:	cbz	x8, 42dae0 <_obstack_memory_used@@Base+0x61c0>
  42daa4:	ldur	x8, [x29, #-24]
  42daa8:	ldr	x8, [x8, #8]
  42daac:	ldur	x9, [x29, #-24]
  42dab0:	ldr	x9, [x9, #72]
  42dab4:	subs	x9, x9, #0x1
  42dab8:	add	x8, x8, x9
  42dabc:	ldrb	w10, [x8]
  42dac0:	sturb	w10, [x29, #-45]
  42dac4:	ldur	x8, [x29, #-32]
  42dac8:	and	x8, x8, #0x800
  42dacc:	cbz	x8, 42dadc <_obstack_memory_used@@Base+0x61bc>
  42dad0:	ldurb	w8, [x29, #-45]
  42dad4:	cmp	w8, #0xa
  42dad8:	b.eq	42dae0 <_obstack_memory_used@@Base+0x61c0>  // b.none
  42dadc:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42dae0:	ldur	x8, [x29, #-16]
  42dae4:	ldr	w9, [x8, #8]
  42dae8:	and	w9, w9, #0xffffff00
  42daec:	orr	w9, w9, #0xc
  42daf0:	str	w9, [x8, #8]
  42daf4:	ldur	x8, [x29, #-16]
  42daf8:	mov	w9, #0x10                  	// #16
  42dafc:	str	w9, [x8]
  42db00:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42db04:	ldur	x8, [x29, #-32]
  42db08:	and	x8, x8, #0x8
  42db0c:	cbnz	x8, 42db80 <_obstack_memory_used@@Base+0x6260>
  42db10:	ldur	x8, [x29, #-24]
  42db14:	ldr	x8, [x8, #72]
  42db18:	add	x8, x8, #0x1
  42db1c:	ldur	x9, [x29, #-24]
  42db20:	ldr	x9, [x9, #88]
  42db24:	cmp	x8, x9
  42db28:	b.eq	42db80 <_obstack_memory_used@@Base+0x6260>  // b.none
  42db2c:	ldur	x8, [x29, #-24]
  42db30:	ldr	x9, [x8, #72]
  42db34:	add	x9, x9, #0x1
  42db38:	str	x9, [x8, #72]
  42db3c:	ldur	x1, [x29, #-24]
  42db40:	ldur	x2, [x29, #-32]
  42db44:	add	x0, sp, #0x20
  42db48:	bl	42d1c4 <_obstack_memory_used@@Base+0x58a4>
  42db4c:	ldur	x8, [x29, #-24]
  42db50:	ldr	x9, [x8, #72]
  42db54:	subs	x9, x9, #0x1
  42db58:	str	x9, [x8, #72]
  42db5c:	ldr	w10, [sp, #40]
  42db60:	and	w10, w10, #0xff
  42db64:	cmp	w10, #0xa
  42db68:	b.eq	42db80 <_obstack_memory_used@@Base+0x6260>  // b.none
  42db6c:	ldr	w8, [sp, #40]
  42db70:	and	w8, w8, #0xff
  42db74:	cmp	w8, #0x9
  42db78:	b.eq	42db80 <_obstack_memory_used@@Base+0x6260>  // b.none
  42db7c:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42db80:	ldur	x8, [x29, #-16]
  42db84:	ldr	w9, [x8, #8]
  42db88:	and	w9, w9, #0xffffff00
  42db8c:	orr	w9, w9, #0xc
  42db90:	str	w9, [x8, #8]
  42db94:	ldur	x8, [x29, #-16]
  42db98:	mov	w9, #0x20                  	// #32
  42db9c:	str	w9, [x8]
  42dba0:	b	42dba4 <_obstack_memory_used@@Base+0x6284>
  42dba4:	mov	w8, #0x1                   	// #1
  42dba8:	stur	w8, [x29, #-4]
  42dbac:	ldur	w0, [x29, #-4]
  42dbb0:	ldp	x29, x30, [sp, #96]
  42dbb4:	add	sp, sp, #0x70
  42dbb8:	ret
  42dbbc:	sub	sp, sp, #0x30
  42dbc0:	mov	w8, #0x1                   	// #1
  42dbc4:	str	x0, [sp, #32]
  42dbc8:	str	x1, [sp, #24]
  42dbcc:	ldr	x9, [sp, #32]
  42dbd0:	ldrb	w10, [x9, #139]
  42dbd4:	cmp	w10, #0x0
  42dbd8:	cset	w10, ne  // ne = any
  42dbdc:	eor	w8, w10, w8
  42dbe0:	and	w8, w8, #0x1
  42dbe4:	mov	w0, w8
  42dbe8:	sxtw	x9, w0
  42dbec:	cbz	x9, 42dc18 <_obstack_memory_used@@Base+0x62f8>
  42dbf0:	ldr	x8, [sp, #32]
  42dbf4:	ldr	x8, [x8, #8]
  42dbf8:	ldr	x9, [sp, #32]
  42dbfc:	ldr	x9, [x9, #72]
  42dc00:	ldr	x10, [sp, #24]
  42dc04:	add	x9, x9, x10
  42dc08:	add	x8, x8, x9
  42dc0c:	ldrb	w11, [x8]
  42dc10:	strb	w11, [sp, #47]
  42dc14:	b	42dd64 <_obstack_memory_used@@Base+0x6444>
  42dc18:	ldr	x8, [sp, #32]
  42dc1c:	ldr	w9, [x8, #144]
  42dc20:	cmp	w9, #0x1
  42dc24:	b.le	42dcc8 <_obstack_memory_used@@Base+0x63a8>
  42dc28:	ldr	x8, [sp, #32]
  42dc2c:	ldr	x8, [x8, #16]
  42dc30:	ldr	x9, [sp, #32]
  42dc34:	ldr	x9, [x9, #72]
  42dc38:	ldr	x10, [sp, #24]
  42dc3c:	add	x9, x9, x10
  42dc40:	ldr	w11, [x8, x9, lsl #2]
  42dc44:	mov	w12, #0xffffffff            	// #-1
  42dc48:	cmp	w11, w12
  42dc4c:	b.eq	42dca0 <_obstack_memory_used@@Base+0x6380>  // b.none
  42dc50:	ldr	x8, [sp, #32]
  42dc54:	ldr	x8, [x8, #48]
  42dc58:	ldr	x9, [sp, #32]
  42dc5c:	ldr	x9, [x9, #72]
  42dc60:	ldr	x10, [sp, #24]
  42dc64:	add	x9, x9, x10
  42dc68:	add	x9, x9, #0x1
  42dc6c:	cmp	x8, x9
  42dc70:	b.eq	42dcc8 <_obstack_memory_used@@Base+0x63a8>  // b.none
  42dc74:	ldr	x8, [sp, #32]
  42dc78:	ldr	x8, [x8, #16]
  42dc7c:	ldr	x9, [sp, #32]
  42dc80:	ldr	x9, [x9, #72]
  42dc84:	ldr	x10, [sp, #24]
  42dc88:	add	x9, x9, x10
  42dc8c:	add	x9, x9, #0x1
  42dc90:	ldr	w11, [x8, x9, lsl #2]
  42dc94:	mov	w12, #0xffffffff            	// #-1
  42dc98:	cmp	w11, w12
  42dc9c:	b.ne	42dcc8 <_obstack_memory_used@@Base+0x63a8>  // b.any
  42dca0:	ldr	x8, [sp, #32]
  42dca4:	ldr	x8, [x8, #8]
  42dca8:	ldr	x9, [sp, #32]
  42dcac:	ldr	x9, [x9, #72]
  42dcb0:	ldr	x10, [sp, #24]
  42dcb4:	add	x9, x9, x10
  42dcb8:	add	x8, x8, x9
  42dcbc:	ldrb	w11, [x8]
  42dcc0:	strb	w11, [sp, #47]
  42dcc4:	b	42dd64 <_obstack_memory_used@@Base+0x6444>
  42dcc8:	ldr	x8, [sp, #32]
  42dccc:	ldr	x8, [x8, #72]
  42dcd0:	ldr	x9, [sp, #24]
  42dcd4:	add	x8, x8, x9
  42dcd8:	str	x8, [sp, #8]
  42dcdc:	ldr	x8, [sp, #32]
  42dce0:	ldrb	w10, [x8, #140]
  42dce4:	cbz	w10, 42dcfc <_obstack_memory_used@@Base+0x63dc>
  42dce8:	ldr	x8, [sp, #32]
  42dcec:	ldr	x8, [x8, #24]
  42dcf0:	ldr	x9, [sp, #8]
  42dcf4:	ldr	x8, [x8, x9, lsl #3]
  42dcf8:	str	x8, [sp, #8]
  42dcfc:	ldr	x8, [sp, #32]
  42dd00:	ldr	x8, [x8]
  42dd04:	ldr	x9, [sp, #32]
  42dd08:	ldr	x9, [x9, #40]
  42dd0c:	ldr	x10, [sp, #8]
  42dd10:	add	x9, x9, x10
  42dd14:	ldrb	w11, [x8, x9]
  42dd18:	str	w11, [sp, #20]
  42dd1c:	ldr	x8, [sp, #32]
  42dd20:	ldrb	w11, [x8, #140]
  42dd24:	cbz	w11, 42dd5c <_obstack_memory_used@@Base+0x643c>
  42dd28:	ldr	w8, [sp, #20]
  42dd2c:	and	w8, w8, #0xffffff80
  42dd30:	cbz	w8, 42dd5c <_obstack_memory_used@@Base+0x643c>
  42dd34:	ldr	x8, [sp, #32]
  42dd38:	ldr	x8, [x8, #8]
  42dd3c:	ldr	x9, [sp, #32]
  42dd40:	ldr	x9, [x9, #72]
  42dd44:	ldr	x10, [sp, #24]
  42dd48:	add	x9, x9, x10
  42dd4c:	add	x8, x8, x9
  42dd50:	ldrb	w11, [x8]
  42dd54:	strb	w11, [sp, #47]
  42dd58:	b	42dd64 <_obstack_memory_used@@Base+0x6444>
  42dd5c:	ldr	w8, [sp, #20]
  42dd60:	strb	w8, [sp, #47]
  42dd64:	ldrb	w0, [sp, #47]
  42dd68:	add	sp, sp, #0x30
  42dd6c:	ret
  42dd70:	sub	sp, sp, #0x20
  42dd74:	str	x0, [sp, #16]
  42dd78:	str	x1, [sp, #8]
  42dd7c:	ldr	x8, [sp, #16]
  42dd80:	ldr	w9, [x8, #144]
  42dd84:	cmp	w9, #0x1
  42dd88:	b.ne	42dda4 <_obstack_memory_used@@Base+0x6484>  // b.any
  42dd8c:	ldr	x8, [sp, #16]
  42dd90:	ldr	x8, [x8, #8]
  42dd94:	ldr	x9, [sp, #8]
  42dd98:	ldrb	w10, [x8, x9]
  42dd9c:	str	w10, [sp, #28]
  42dda0:	b	42ddb8 <_obstack_memory_used@@Base+0x6498>
  42dda4:	ldr	x8, [sp, #16]
  42dda8:	ldr	x8, [x8, #16]
  42ddac:	ldr	x9, [sp, #8]
  42ddb0:	ldr	w10, [x8, x9, lsl #2]
  42ddb4:	str	w10, [sp, #28]
  42ddb8:	ldr	w0, [sp, #28]
  42ddbc:	add	sp, sp, #0x20
  42ddc0:	ret
  42ddc4:	sub	sp, sp, #0x90
  42ddc8:	stp	x29, x30, [sp, #128]
  42ddcc:	add	x29, sp, #0x80
  42ddd0:	adrp	x8, 42e000 <_obstack_memory_used@@Base+0x66e0>
  42ddd4:	add	x8, x8, #0x144
  42ddd8:	stur	x0, [x29, #-16]
  42dddc:	stur	x1, [x29, #-24]
  42dde0:	stur	x2, [x29, #-32]
  42dde4:	stur	x3, [x29, #-40]
  42dde8:	stur	x4, [x29, #-48]
  42ddec:	stur	x5, [x29, #-56]
  42ddf0:	ldur	x9, [x29, #-24]
  42ddf4:	ldr	x9, [x9]
  42ddf8:	str	x9, [sp, #48]
  42ddfc:	ldur	x0, [x29, #-16]
  42de00:	ldur	x1, [x29, #-24]
  42de04:	ldur	x2, [x29, #-32]
  42de08:	ldur	x3, [x29, #-40]
  42de0c:	ldur	x4, [x29, #-48]
  42de10:	ldur	x5, [x29, #-56]
  42de14:	str	x8, [sp, #32]
  42de18:	bl	42e17c <_obstack_memory_used@@Base+0x685c>
  42de1c:	str	x0, [sp, #64]
  42de20:	ldur	x8, [x29, #-56]
  42de24:	ldr	w10, [x8]
  42de28:	mov	w11, #0x0                   	// #0
  42de2c:	str	w11, [sp, #28]
  42de30:	cbz	w10, 42de44 <_obstack_memory_used@@Base+0x6524>
  42de34:	ldr	x8, [sp, #64]
  42de38:	cmp	x8, #0x0
  42de3c:	cset	w9, eq  // eq = none
  42de40:	str	w9, [sp, #28]
  42de44:	ldr	w8, [sp, #28]
  42de48:	and	w8, w8, #0x1
  42de4c:	mov	w0, w8
  42de50:	sxtw	x9, w0
  42de54:	cbz	x9, 42de64 <_obstack_memory_used@@Base+0x6544>
  42de58:	mov	x8, xzr
  42de5c:	stur	x8, [x29, #-8]
  42de60:	b	42dff8 <_obstack_memory_used@@Base+0x66d8>
  42de64:	ldur	x8, [x29, #-32]
  42de68:	ldr	w9, [x8, #8]
  42de6c:	and	w9, w9, #0xff
  42de70:	mov	w10, #0x0                   	// #0
  42de74:	cmp	w9, #0xa
  42de78:	str	w10, [sp, #24]
  42de7c:	b.eq	42decc <_obstack_memory_used@@Base+0x65ac>  // b.none
  42de80:	ldur	x8, [x29, #-32]
  42de84:	ldr	w9, [x8, #8]
  42de88:	and	w9, w9, #0xff
  42de8c:	mov	w10, #0x0                   	// #0
  42de90:	cmp	w9, #0x2
  42de94:	str	w10, [sp, #24]
  42de98:	b.eq	42decc <_obstack_memory_used@@Base+0x65ac>  // b.none
  42de9c:	ldur	x8, [x29, #-48]
  42dea0:	mov	w9, #0x1                   	// #1
  42dea4:	str	w9, [sp, #20]
  42dea8:	cbz	x8, 42dec4 <_obstack_memory_used@@Base+0x65a4>
  42deac:	ldur	x8, [x29, #-32]
  42deb0:	ldr	w9, [x8, #8]
  42deb4:	and	w9, w9, #0xff
  42deb8:	cmp	w9, #0x9
  42debc:	cset	w9, ne  // ne = any
  42dec0:	str	w9, [sp, #20]
  42dec4:	ldr	w8, [sp, #20]
  42dec8:	str	w8, [sp, #24]
  42decc:	ldr	w8, [sp, #24]
  42ded0:	tbnz	w8, #0, 42ded8 <_obstack_memory_used@@Base+0x65b8>
  42ded4:	b	42dff0 <_obstack_memory_used@@Base+0x66d0>
  42ded8:	ldur	x0, [x29, #-16]
  42dedc:	ldur	x1, [x29, #-24]
  42dee0:	ldur	x2, [x29, #-32]
  42dee4:	ldur	x3, [x29, #-40]
  42dee8:	ldur	x4, [x29, #-48]
  42deec:	ldur	x5, [x29, #-56]
  42def0:	bl	42e17c <_obstack_memory_used@@Base+0x685c>
  42def4:	str	x0, [sp, #56]
  42def8:	ldur	x8, [x29, #-56]
  42defc:	ldr	w9, [x8]
  42df00:	mov	w10, #0x0                   	// #0
  42df04:	str	w10, [sp, #16]
  42df08:	cbz	w9, 42df1c <_obstack_memory_used@@Base+0x65fc>
  42df0c:	ldr	x8, [sp, #56]
  42df10:	cmp	x8, #0x0
  42df14:	cset	w9, eq  // eq = none
  42df18:	str	w9, [sp, #16]
  42df1c:	ldr	w8, [sp, #16]
  42df20:	and	w8, w8, #0x1
  42df24:	mov	w0, w8
  42df28:	sxtw	x9, w0
  42df2c:	cbz	x9, 42df58 <_obstack_memory_used@@Base+0x6638>
  42df30:	ldr	x8, [sp, #64]
  42df34:	cbz	x8, 42df4c <_obstack_memory_used@@Base+0x662c>
  42df38:	ldr	x0, [sp, #64]
  42df3c:	ldr	x1, [sp, #32]
  42df40:	mov	x8, xzr
  42df44:	mov	x2, x8
  42df48:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42df4c:	mov	x8, xzr
  42df50:	stur	x8, [x29, #-8]
  42df54:	b	42dff8 <_obstack_memory_used@@Base+0x66d8>
  42df58:	ldr	x8, [sp, #64]
  42df5c:	cbz	x8, 42dfdc <_obstack_memory_used@@Base+0x66bc>
  42df60:	ldr	x8, [sp, #56]
  42df64:	cbz	x8, 42dfdc <_obstack_memory_used@@Base+0x66bc>
  42df68:	ldr	x0, [sp, #48]
  42df6c:	ldr	x1, [sp, #64]
  42df70:	ldr	x2, [sp, #56]
  42df74:	mov	w3, #0x10                  	// #16
  42df78:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42df7c:	str	x0, [sp, #40]
  42df80:	ldr	x8, [sp, #40]
  42df84:	cbnz	x8, 42dfd0 <_obstack_memory_used@@Base+0x66b0>
  42df88:	ldr	x0, [sp, #56]
  42df8c:	ldr	x1, [sp, #32]
  42df90:	mov	x8, xzr
  42df94:	mov	x2, x8
  42df98:	str	x2, [sp, #8]
  42df9c:	str	x8, [sp]
  42dfa0:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42dfa4:	ldr	x8, [sp, #64]
  42dfa8:	mov	x0, x8
  42dfac:	ldr	x1, [sp, #32]
  42dfb0:	ldr	x2, [sp, #8]
  42dfb4:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42dfb8:	ldur	x8, [x29, #-56]
  42dfbc:	mov	w9, #0xc                   	// #12
  42dfc0:	str	w9, [x8]
  42dfc4:	ldr	x8, [sp]
  42dfc8:	stur	x8, [x29, #-8]
  42dfcc:	b	42dff8 <_obstack_memory_used@@Base+0x66d8>
  42dfd0:	ldr	x8, [sp, #40]
  42dfd4:	str	x8, [sp, #64]
  42dfd8:	b	42dfec <_obstack_memory_used@@Base+0x66cc>
  42dfdc:	ldr	x8, [sp, #64]
  42dfe0:	cbnz	x8, 42dfec <_obstack_memory_used@@Base+0x66cc>
  42dfe4:	ldr	x8, [sp, #56]
  42dfe8:	str	x8, [sp, #64]
  42dfec:	b	42de64 <_obstack_memory_used@@Base+0x6544>
  42dff0:	ldr	x8, [sp, #64]
  42dff4:	stur	x8, [x29, #-8]
  42dff8:	ldur	x0, [x29, #-8]
  42dffc:	ldp	x29, x30, [sp, #128]
  42e000:	add	sp, sp, #0x90
  42e004:	ret
  42e008:	sub	sp, sp, #0x50
  42e00c:	stp	x29, x30, [sp, #64]
  42e010:	add	x29, sp, #0x40
  42e014:	stur	x0, [x29, #-16]
  42e018:	stur	x1, [x29, #-24]
  42e01c:	str	x2, [sp, #32]
  42e020:	ldur	x8, [x29, #-16]
  42e024:	str	x8, [sp, #24]
  42e028:	ldr	x8, [sp, #24]
  42e02c:	ldr	x8, [x8, #8]
  42e030:	mov	w9, #0x1                   	// #1
  42e034:	str	w9, [sp, #8]
  42e038:	cbnz	x8, 42e050 <_obstack_memory_used@@Base+0x6730>
  42e03c:	ldr	x8, [sp, #24]
  42e040:	ldr	x8, [x8, #16]
  42e044:	cmp	x8, #0x0
  42e048:	cset	w9, ne  // ne = any
  42e04c:	str	w9, [sp, #8]
  42e050:	ldr	w8, [sp, #8]
  42e054:	tbnz	w8, #0, 42e05c <_obstack_memory_used@@Base+0x673c>
  42e058:	b	42e088 <_obstack_memory_used@@Base+0x6768>
  42e05c:	ldr	x8, [sp, #24]
  42e060:	ldr	x8, [x8, #8]
  42e064:	cbz	x8, 42e078 <_obstack_memory_used@@Base+0x6758>
  42e068:	ldr	x8, [sp, #24]
  42e06c:	ldr	x8, [x8, #8]
  42e070:	str	x8, [sp, #24]
  42e074:	b	42e084 <_obstack_memory_used@@Base+0x6764>
  42e078:	ldr	x8, [sp, #24]
  42e07c:	ldr	x8, [x8, #16]
  42e080:	str	x8, [sp, #24]
  42e084:	b	42e028 <_obstack_memory_used@@Base+0x6708>
  42e088:	ldur	x8, [x29, #-24]
  42e08c:	ldr	x0, [sp, #32]
  42e090:	ldr	x1, [sp, #24]
  42e094:	blr	x8
  42e098:	str	w0, [sp, #12]
  42e09c:	ldr	w9, [sp, #12]
  42e0a0:	cmp	w9, #0x0
  42e0a4:	cset	w9, ne  // ne = any
  42e0a8:	and	w9, w9, #0x1
  42e0ac:	mov	w1, w9
  42e0b0:	sxtw	x8, w1
  42e0b4:	cbz	x8, 42e0c4 <_obstack_memory_used@@Base+0x67a4>
  42e0b8:	ldr	w8, [sp, #12]
  42e0bc:	stur	w8, [x29, #-4]
  42e0c0:	b	42e134 <_obstack_memory_used@@Base+0x6814>
  42e0c4:	ldr	x8, [sp, #24]
  42e0c8:	ldr	x8, [x8]
  42e0cc:	cbnz	x8, 42e0d8 <_obstack_memory_used@@Base+0x67b8>
  42e0d0:	stur	wzr, [x29, #-4]
  42e0d4:	b	42e134 <_obstack_memory_used@@Base+0x6814>
  42e0d8:	ldr	x8, [sp, #24]
  42e0dc:	str	x8, [sp, #16]
  42e0e0:	ldr	x8, [sp, #24]
  42e0e4:	ldr	x8, [x8]
  42e0e8:	str	x8, [sp, #24]
  42e0ec:	ldr	x8, [sp, #24]
  42e0f0:	ldr	x8, [x8, #16]
  42e0f4:	ldr	x9, [sp, #16]
  42e0f8:	mov	w10, #0x1                   	// #1
  42e0fc:	cmp	x8, x9
  42e100:	str	w10, [sp, #4]
  42e104:	b.eq	42e11c <_obstack_memory_used@@Base+0x67fc>  // b.none
  42e108:	ldr	x8, [sp, #24]
  42e10c:	ldr	x8, [x8, #16]
  42e110:	cmp	x8, #0x0
  42e114:	cset	w9, eq  // eq = none
  42e118:	str	w9, [sp, #4]
  42e11c:	ldr	w8, [sp, #4]
  42e120:	tbnz	w8, #0, 42e088 <_obstack_memory_used@@Base+0x6768>
  42e124:	ldr	x8, [sp, #24]
  42e128:	ldr	x8, [x8, #16]
  42e12c:	str	x8, [sp, #24]
  42e130:	b	42e028 <_obstack_memory_used@@Base+0x6708>
  42e134:	ldur	w0, [x29, #-4]
  42e138:	ldp	x29, x30, [sp, #64]
  42e13c:	add	sp, sp, #0x50
  42e140:	ret
  42e144:	sub	sp, sp, #0x30
  42e148:	stp	x29, x30, [sp, #32]
  42e14c:	add	x29, sp, #0x20
  42e150:	mov	w8, wzr
  42e154:	stur	x0, [x29, #-8]
  42e158:	str	x1, [sp, #16]
  42e15c:	ldr	x9, [sp, #16]
  42e160:	add	x0, x9, #0x28
  42e164:	str	w8, [sp, #12]
  42e168:	bl	42a4e0 <_obstack_memory_used@@Base+0x2bc0>
  42e16c:	ldr	w0, [sp, #12]
  42e170:	ldp	x29, x30, [sp, #32]
  42e174:	add	sp, sp, #0x30
  42e178:	ret
  42e17c:	sub	sp, sp, #0xb0
  42e180:	stp	x29, x30, [sp, #160]
  42e184:	add	x29, sp, #0xa0
  42e188:	stur	x0, [x29, #-16]
  42e18c:	stur	x1, [x29, #-24]
  42e190:	stur	x2, [x29, #-32]
  42e194:	stur	x3, [x29, #-40]
  42e198:	stur	x4, [x29, #-48]
  42e19c:	stur	x5, [x29, #-56]
  42e1a0:	ldur	x8, [x29, #-24]
  42e1a4:	ldr	x8, [x8]
  42e1a8:	stur	x8, [x29, #-64]
  42e1ac:	ldur	x8, [x29, #-32]
  42e1b0:	ldr	w9, [x8, #8]
  42e1b4:	and	w9, w9, #0xff
  42e1b8:	subs	w9, w9, #0x1
  42e1bc:	mov	w8, w9
  42e1c0:	ubfx	x8, x8, #0, #32
  42e1c4:	str	x8, [sp, #48]
  42e1c8:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42e1cc:	add	x8, x8, #0x7f8
  42e1d0:	ldr	x11, [sp, #48]
  42e1d4:	ldrsw	x10, [x8, x11, lsl #2]
  42e1d8:	add	x9, x8, x10
  42e1dc:	br	x9
  42e1e0:	ldur	x0, [x29, #-64]
  42e1e4:	ldur	x3, [x29, #-32]
  42e1e8:	mov	x8, xzr
  42e1ec:	mov	x1, x8
  42e1f0:	mov	x2, x8
  42e1f4:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e1f8:	stur	x0, [x29, #-72]
  42e1fc:	ldur	x8, [x29, #-72]
  42e200:	cmp	x8, #0x0
  42e204:	cset	w9, eq  // eq = none
  42e208:	and	w9, w9, #0x1
  42e20c:	mov	w0, w9
  42e210:	sxtw	x8, w0
  42e214:	cbz	x8, 42e230 <_obstack_memory_used@@Base+0x6910>
  42e218:	ldur	x8, [x29, #-56]
  42e21c:	mov	w9, #0xc                   	// #12
  42e220:	str	w9, [x8]
  42e224:	mov	x8, xzr
  42e228:	stur	x8, [x29, #-8]
  42e22c:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e230:	ldur	x8, [x29, #-64]
  42e234:	ldr	w9, [x8, #180]
  42e238:	cmp	w9, #0x1
  42e23c:	b.le	42e350 <_obstack_memory_used@@Base+0x6a30>
  42e240:	ldur	x8, [x29, #-16]
  42e244:	ldr	x8, [x8, #104]
  42e248:	ldur	x9, [x29, #-16]
  42e24c:	ldr	x9, [x9, #72]
  42e250:	mov	w10, #0x0                   	// #0
  42e254:	cmp	x8, x9
  42e258:	str	w10, [sp, #44]
  42e25c:	b.le	42e2b0 <_obstack_memory_used@@Base+0x6990>
  42e260:	ldur	x8, [x29, #-16]
  42e264:	ldr	x8, [x8, #72]
  42e268:	ldur	x9, [x29, #-16]
  42e26c:	ldr	x9, [x9, #48]
  42e270:	mov	w10, #0x1                   	// #1
  42e274:	cmp	x8, x9
  42e278:	str	w10, [sp, #40]
  42e27c:	b.eq	42e2a4 <_obstack_memory_used@@Base+0x6984>  // b.none
  42e280:	ldur	x8, [x29, #-16]
  42e284:	ldr	x8, [x8, #16]
  42e288:	ldur	x9, [x29, #-16]
  42e28c:	ldr	x9, [x9, #72]
  42e290:	ldr	w10, [x8, x9, lsl #2]
  42e294:	mov	w11, #0xffffffff            	// #-1
  42e298:	cmp	w10, w11
  42e29c:	cset	w10, ne  // ne = any
  42e2a0:	str	w10, [sp, #40]
  42e2a4:	ldr	w8, [sp, #40]
  42e2a8:	eor	w8, w8, #0x1
  42e2ac:	str	w8, [sp, #44]
  42e2b0:	ldr	w8, [sp, #44]
  42e2b4:	tbnz	w8, #0, 42e2bc <_obstack_memory_used@@Base+0x699c>
  42e2b8:	b	42e350 <_obstack_memory_used@@Base+0x6a30>
  42e2bc:	ldur	x0, [x29, #-32]
  42e2c0:	ldur	x1, [x29, #-16]
  42e2c4:	ldur	x2, [x29, #-40]
  42e2c8:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  42e2cc:	ldur	x0, [x29, #-64]
  42e2d0:	ldur	x3, [x29, #-32]
  42e2d4:	mov	x8, xzr
  42e2d8:	mov	x1, x8
  42e2dc:	mov	x2, x8
  42e2e0:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e2e4:	str	x0, [sp, #80]
  42e2e8:	ldur	x0, [x29, #-64]
  42e2ec:	ldur	x1, [x29, #-72]
  42e2f0:	ldr	x2, [sp, #80]
  42e2f4:	mov	w3, #0x10                  	// #16
  42e2f8:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42e2fc:	stur	x0, [x29, #-72]
  42e300:	ldr	x8, [sp, #80]
  42e304:	mov	w9, #0x1                   	// #1
  42e308:	str	w9, [sp, #36]
  42e30c:	cbz	x8, 42e320 <_obstack_memory_used@@Base+0x6a00>
  42e310:	ldur	x8, [x29, #-72]
  42e314:	cmp	x8, #0x0
  42e318:	cset	w9, eq  // eq = none
  42e31c:	str	w9, [sp, #36]
  42e320:	ldr	w8, [sp, #36]
  42e324:	and	w8, w8, #0x1
  42e328:	mov	w0, w8
  42e32c:	sxtw	x9, w0
  42e330:	cbz	x9, 42e34c <_obstack_memory_used@@Base+0x6a2c>
  42e334:	ldur	x8, [x29, #-56]
  42e338:	mov	w9, #0xc                   	// #12
  42e33c:	str	w9, [x8]
  42e340:	mov	x8, xzr
  42e344:	stur	x8, [x29, #-8]
  42e348:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e34c:	b	42e240 <_obstack_memory_used@@Base+0x6920>
  42e350:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e354:	ldur	x0, [x29, #-16]
  42e358:	ldur	x1, [x29, #-24]
  42e35c:	ldur	x2, [x29, #-32]
  42e360:	ldur	x3, [x29, #-40]
  42e364:	ldur	x8, [x29, #-48]
  42e368:	add	x4, x8, #0x1
  42e36c:	ldur	x5, [x29, #-56]
  42e370:	bl	42eca8 <_obstack_memory_used@@Base+0x7388>
  42e374:	stur	x0, [x29, #-72]
  42e378:	ldur	x8, [x29, #-56]
  42e37c:	ldr	w9, [x8]
  42e380:	mov	w10, #0x0                   	// #0
  42e384:	str	w10, [sp, #32]
  42e388:	cbz	w9, 42e39c <_obstack_memory_used@@Base+0x6a7c>
  42e38c:	ldur	x8, [x29, #-72]
  42e390:	cmp	x8, #0x0
  42e394:	cset	w9, eq  // eq = none
  42e398:	str	w9, [sp, #32]
  42e39c:	ldr	w8, [sp, #32]
  42e3a0:	and	w8, w8, #0x1
  42e3a4:	mov	w0, w8
  42e3a8:	sxtw	x9, w0
  42e3ac:	cbz	x9, 42e3bc <_obstack_memory_used@@Base+0x6a9c>
  42e3b0:	mov	x8, xzr
  42e3b4:	stur	x8, [x29, #-8]
  42e3b8:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e3bc:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e3c0:	ldur	x0, [x29, #-16]
  42e3c4:	ldur	x1, [x29, #-64]
  42e3c8:	ldur	x2, [x29, #-32]
  42e3cc:	ldur	x3, [x29, #-40]
  42e3d0:	ldur	x4, [x29, #-56]
  42e3d4:	bl	42ee7c <_obstack_memory_used@@Base+0x755c>
  42e3d8:	stur	x0, [x29, #-72]
  42e3dc:	ldur	x8, [x29, #-56]
  42e3e0:	ldr	w9, [x8]
  42e3e4:	mov	w10, #0x0                   	// #0
  42e3e8:	str	w10, [sp, #28]
  42e3ec:	cbz	w9, 42e400 <_obstack_memory_used@@Base+0x6ae0>
  42e3f0:	ldur	x8, [x29, #-72]
  42e3f4:	cmp	x8, #0x0
  42e3f8:	cset	w9, eq  // eq = none
  42e3fc:	str	w9, [sp, #28]
  42e400:	ldr	w8, [sp, #28]
  42e404:	and	w8, w8, #0x1
  42e408:	mov	w0, w8
  42e40c:	sxtw	x9, w0
  42e410:	cbz	x9, 42e420 <_obstack_memory_used@@Base+0x6b00>
  42e414:	mov	x8, xzr
  42e418:	stur	x8, [x29, #-8]
  42e41c:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e420:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e424:	ldur	x8, [x29, #-64]
  42e428:	ldr	x8, [x8, #168]
  42e42c:	ldur	x9, [x29, #-32]
  42e430:	ldr	x9, [x9]
  42e434:	mov	w10, #0x1                   	// #1
  42e438:	lsl	w9, w10, w9
  42e43c:	mov	w0, w9
  42e440:	sxtw	x11, w0
  42e444:	and	x8, x8, x11
  42e448:	cbnz	x8, 42e464 <_obstack_memory_used@@Base+0x6b44>
  42e44c:	ldur	x8, [x29, #-56]
  42e450:	mov	w9, #0x6                   	// #6
  42e454:	str	w9, [x8]
  42e458:	mov	x8, xzr
  42e45c:	stur	x8, [x29, #-8]
  42e460:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e464:	ldur	x8, [x29, #-32]
  42e468:	ldr	x8, [x8]
  42e46c:	mov	w9, #0x1                   	// #1
  42e470:	lsl	w8, w9, w8
  42e474:	mov	w0, w8
  42e478:	sxtw	x10, w0
  42e47c:	ldur	x11, [x29, #-64]
  42e480:	ldr	x12, [x11, #160]
  42e484:	orr	x10, x12, x10
  42e488:	str	x10, [x11, #160]
  42e48c:	ldur	x0, [x29, #-64]
  42e490:	ldur	x3, [x29, #-32]
  42e494:	mov	x10, xzr
  42e498:	mov	x1, x10
  42e49c:	mov	x2, x10
  42e4a0:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e4a4:	stur	x0, [x29, #-72]
  42e4a8:	ldur	x10, [x29, #-72]
  42e4ac:	cmp	x10, #0x0
  42e4b0:	cset	w8, eq  // eq = none
  42e4b4:	and	w8, w8, #0x1
  42e4b8:	mov	w0, w8
  42e4bc:	sxtw	x10, w0
  42e4c0:	cbz	x10, 42e4dc <_obstack_memory_used@@Base+0x6bbc>
  42e4c4:	ldur	x8, [x29, #-56]
  42e4c8:	mov	w9, #0xc                   	// #12
  42e4cc:	str	w9, [x8]
  42e4d0:	mov	x8, xzr
  42e4d4:	stur	x8, [x29, #-8]
  42e4d8:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e4dc:	ldur	x8, [x29, #-64]
  42e4e0:	ldr	x9, [x8, #152]
  42e4e4:	add	x9, x9, #0x1
  42e4e8:	str	x9, [x8, #152]
  42e4ec:	ldur	x8, [x29, #-64]
  42e4f0:	ldrb	w10, [x8, #176]
  42e4f4:	and	w10, w10, #0xfffffffd
  42e4f8:	orr	w10, w10, #0x2
  42e4fc:	strb	w10, [x8, #176]
  42e500:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e504:	ldur	x8, [x29, #-40]
  42e508:	and	x8, x8, #0x1000000
  42e50c:	cbz	x8, 42e528 <_obstack_memory_used@@Base+0x6c08>
  42e510:	ldur	x8, [x29, #-56]
  42e514:	mov	w9, #0xd                   	// #13
  42e518:	str	w9, [x8]
  42e51c:	mov	x8, xzr
  42e520:	stur	x8, [x29, #-8]
  42e524:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e528:	ldur	x8, [x29, #-40]
  42e52c:	and	x8, x8, #0x20
  42e530:	cbz	x8, 42e54c <_obstack_memory_used@@Base+0x6c2c>
  42e534:	ldur	x8, [x29, #-56]
  42e538:	mov	w9, #0xd                   	// #13
  42e53c:	str	w9, [x8]
  42e540:	mov	x8, xzr
  42e544:	stur	x8, [x29, #-8]
  42e548:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e54c:	ldur	x8, [x29, #-40]
  42e550:	and	x8, x8, #0x10
  42e554:	cbz	x8, 42e58c <_obstack_memory_used@@Base+0x6c6c>
  42e558:	ldur	x0, [x29, #-32]
  42e55c:	ldur	x1, [x29, #-16]
  42e560:	ldur	x2, [x29, #-40]
  42e564:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  42e568:	ldur	x0, [x29, #-16]
  42e56c:	ldur	x1, [x29, #-24]
  42e570:	ldur	x2, [x29, #-32]
  42e574:	ldur	x3, [x29, #-40]
  42e578:	ldur	x4, [x29, #-48]
  42e57c:	ldur	x5, [x29, #-56]
  42e580:	bl	42e17c <_obstack_memory_used@@Base+0x685c>
  42e584:	stur	x0, [x29, #-8]
  42e588:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e58c:	ldur	x8, [x29, #-32]
  42e590:	ldr	w9, [x8, #8]
  42e594:	and	w9, w9, #0xff
  42e598:	cmp	w9, #0x9
  42e59c:	b.ne	42e5c4 <_obstack_memory_used@@Base+0x6ca4>  // b.any
  42e5a0:	ldur	x8, [x29, #-40]
  42e5a4:	and	x8, x8, #0x20000
  42e5a8:	cbnz	x8, 42e5c4 <_obstack_memory_used@@Base+0x6ca4>
  42e5ac:	ldur	x8, [x29, #-56]
  42e5b0:	mov	w9, #0x10                  	// #16
  42e5b4:	str	w9, [x8]
  42e5b8:	mov	x8, xzr
  42e5bc:	stur	x8, [x29, #-8]
  42e5c0:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e5c4:	ldur	x8, [x29, #-32]
  42e5c8:	ldr	w9, [x8, #8]
  42e5cc:	and	w9, w9, #0xffffff00
  42e5d0:	orr	w9, w9, #0x1
  42e5d4:	str	w9, [x8, #8]
  42e5d8:	ldur	x0, [x29, #-64]
  42e5dc:	ldur	x3, [x29, #-32]
  42e5e0:	mov	x8, xzr
  42e5e4:	mov	x1, x8
  42e5e8:	mov	x2, x8
  42e5ec:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e5f0:	stur	x0, [x29, #-72]
  42e5f4:	ldur	x8, [x29, #-72]
  42e5f8:	cmp	x8, #0x0
  42e5fc:	cset	w9, eq  // eq = none
  42e600:	and	w9, w9, #0x1
  42e604:	mov	w0, w9
  42e608:	sxtw	x8, w0
  42e60c:	cbz	x8, 42e628 <_obstack_memory_used@@Base+0x6d08>
  42e610:	ldur	x8, [x29, #-56]
  42e614:	mov	w9, #0xc                   	// #12
  42e618:	str	w9, [x8]
  42e61c:	mov	x8, xzr
  42e620:	stur	x8, [x29, #-8]
  42e624:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e628:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e62c:	ldur	x8, [x29, #-32]
  42e630:	ldr	w9, [x8]
  42e634:	mov	w10, #0x30f                 	// #783
  42e638:	and	w9, w9, w10
  42e63c:	cbz	w9, 42e664 <_obstack_memory_used@@Base+0x6d44>
  42e640:	ldur	x8, [x29, #-64]
  42e644:	ldrb	w9, [x8, #176]
  42e648:	mov	w10, #0x4                   	// #4
  42e64c:	lsr	w9, w9, w10
  42e650:	and	w9, w9, #0x1
  42e654:	and	w9, w9, #0xff
  42e658:	cbnz	w9, 42e664 <_obstack_memory_used@@Base+0x6d44>
  42e65c:	ldur	x0, [x29, #-64]
  42e660:	bl	42f8ec <_obstack_memory_used@@Base+0x7fcc>
  42e664:	ldur	x8, [x29, #-32]
  42e668:	ldr	w9, [x8]
  42e66c:	cmp	w9, #0x100
  42e670:	b.eq	42e684 <_obstack_memory_used@@Base+0x6d64>  // b.none
  42e674:	ldur	x8, [x29, #-32]
  42e678:	ldr	w9, [x8]
  42e67c:	cmp	w9, #0x200
  42e680:	b.ne	42e794 <_obstack_memory_used@@Base+0x6e74>  // b.any
  42e684:	ldur	x8, [x29, #-32]
  42e688:	ldr	w9, [x8]
  42e68c:	cmp	w9, #0x100
  42e690:	b.ne	42e6cc <_obstack_memory_used@@Base+0x6dac>  // b.any
  42e694:	ldur	x8, [x29, #-32]
  42e698:	mov	w9, #0x6                   	// #6
  42e69c:	str	w9, [x8]
  42e6a0:	ldur	x0, [x29, #-64]
  42e6a4:	ldur	x3, [x29, #-32]
  42e6a8:	mov	x8, xzr
  42e6ac:	mov	x1, x8
  42e6b0:	mov	x2, x8
  42e6b4:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e6b8:	str	x0, [sp, #72]
  42e6bc:	ldur	x8, [x29, #-32]
  42e6c0:	mov	w9, #0x9                   	// #9
  42e6c4:	str	w9, [x8]
  42e6c8:	b	42e700 <_obstack_memory_used@@Base+0x6de0>
  42e6cc:	ldur	x8, [x29, #-32]
  42e6d0:	mov	w9, #0x5                   	// #5
  42e6d4:	str	w9, [x8]
  42e6d8:	ldur	x0, [x29, #-64]
  42e6dc:	ldur	x3, [x29, #-32]
  42e6e0:	mov	x8, xzr
  42e6e4:	mov	x1, x8
  42e6e8:	mov	x2, x8
  42e6ec:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e6f0:	str	x0, [sp, #72]
  42e6f4:	ldur	x8, [x29, #-32]
  42e6f8:	mov	w9, #0xa                   	// #10
  42e6fc:	str	w9, [x8]
  42e700:	ldur	x0, [x29, #-64]
  42e704:	ldur	x3, [x29, #-32]
  42e708:	mov	x8, xzr
  42e70c:	mov	x1, x8
  42e710:	mov	x2, x8
  42e714:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e718:	str	x0, [sp, #64]
  42e71c:	ldur	x0, [x29, #-64]
  42e720:	ldr	x1, [sp, #72]
  42e724:	ldr	x2, [sp, #64]
  42e728:	mov	w3, #0xa                   	// #10
  42e72c:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42e730:	stur	x0, [x29, #-72]
  42e734:	ldr	x8, [sp, #72]
  42e738:	mov	w9, #0x1                   	// #1
  42e73c:	str	w9, [sp, #24]
  42e740:	cbz	x8, 42e764 <_obstack_memory_used@@Base+0x6e44>
  42e744:	ldr	x8, [sp, #64]
  42e748:	mov	w9, #0x1                   	// #1
  42e74c:	str	w9, [sp, #24]
  42e750:	cbz	x8, 42e764 <_obstack_memory_used@@Base+0x6e44>
  42e754:	ldur	x8, [x29, #-72]
  42e758:	cmp	x8, #0x0
  42e75c:	cset	w9, eq  // eq = none
  42e760:	str	w9, [sp, #24]
  42e764:	ldr	w8, [sp, #24]
  42e768:	and	w8, w8, #0x1
  42e76c:	mov	w0, w8
  42e770:	sxtw	x9, w0
  42e774:	cbz	x9, 42e790 <_obstack_memory_used@@Base+0x6e70>
  42e778:	ldur	x8, [x29, #-56]
  42e77c:	mov	w9, #0xc                   	// #12
  42e780:	str	w9, [x8]
  42e784:	mov	x8, xzr
  42e788:	stur	x8, [x29, #-8]
  42e78c:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e790:	b	42e7e4 <_obstack_memory_used@@Base+0x6ec4>
  42e794:	ldur	x0, [x29, #-64]
  42e798:	ldur	x3, [x29, #-32]
  42e79c:	mov	x8, xzr
  42e7a0:	mov	x1, x8
  42e7a4:	mov	x2, x8
  42e7a8:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e7ac:	stur	x0, [x29, #-72]
  42e7b0:	ldur	x8, [x29, #-72]
  42e7b4:	cmp	x8, #0x0
  42e7b8:	cset	w9, eq  // eq = none
  42e7bc:	and	w9, w9, #0x1
  42e7c0:	mov	w0, w9
  42e7c4:	sxtw	x8, w0
  42e7c8:	cbz	x8, 42e7e4 <_obstack_memory_used@@Base+0x6ec4>
  42e7cc:	ldur	x8, [x29, #-56]
  42e7d0:	mov	w9, #0xc                   	// #12
  42e7d4:	str	w9, [x8]
  42e7d8:	mov	x8, xzr
  42e7dc:	stur	x8, [x29, #-8]
  42e7e0:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e7e4:	ldur	x0, [x29, #-32]
  42e7e8:	ldur	x1, [x29, #-16]
  42e7ec:	ldur	x2, [x29, #-40]
  42e7f0:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  42e7f4:	ldur	x8, [x29, #-72]
  42e7f8:	stur	x8, [x29, #-8]
  42e7fc:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e800:	ldur	x0, [x29, #-64]
  42e804:	ldur	x3, [x29, #-32]
  42e808:	mov	x8, xzr
  42e80c:	mov	x1, x8
  42e810:	mov	x2, x8
  42e814:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42e818:	stur	x0, [x29, #-72]
  42e81c:	ldur	x8, [x29, #-72]
  42e820:	cmp	x8, #0x0
  42e824:	cset	w9, eq  // eq = none
  42e828:	and	w9, w9, #0x1
  42e82c:	mov	w0, w9
  42e830:	sxtw	x8, w0
  42e834:	cbz	x8, 42e850 <_obstack_memory_used@@Base+0x6f30>
  42e838:	ldur	x8, [x29, #-56]
  42e83c:	mov	w9, #0xc                   	// #12
  42e840:	str	w9, [x8]
  42e844:	mov	x8, xzr
  42e848:	stur	x8, [x29, #-8]
  42e84c:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e850:	ldur	x8, [x29, #-64]
  42e854:	ldr	w9, [x8, #180]
  42e858:	cmp	w9, #0x1
  42e85c:	b.le	42e874 <_obstack_memory_used@@Base+0x6f54>
  42e860:	ldur	x8, [x29, #-64]
  42e864:	ldrb	w9, [x8, #176]
  42e868:	and	w9, w9, #0xfffffffd
  42e86c:	orr	w9, w9, #0x2
  42e870:	strb	w9, [x8, #176]
  42e874:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e878:	ldur	x0, [x29, #-64]
  42e87c:	ldur	x8, [x29, #-16]
  42e880:	ldr	x1, [x8, #120]
  42e884:	ldur	x8, [x29, #-32]
  42e888:	ldr	w9, [x8, #8]
  42e88c:	and	w9, w9, #0xff
  42e890:	cmp	w9, #0x21
  42e894:	cset	w9, eq  // eq = none
  42e898:	ldur	x5, [x29, #-56]
  42e89c:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  42e8a0:	add	x2, x2, #0x8d6
  42e8a4:	adrp	x3, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42e8a8:	add	x3, x3, #0xb38
  42e8ac:	and	w4, w9, #0x1
  42e8b0:	bl	42fabc <_obstack_memory_used@@Base+0x819c>
  42e8b4:	stur	x0, [x29, #-72]
  42e8b8:	ldur	x8, [x29, #-56]
  42e8bc:	ldr	w9, [x8]
  42e8c0:	mov	w10, #0x0                   	// #0
  42e8c4:	str	w10, [sp, #20]
  42e8c8:	cbz	w9, 42e8dc <_obstack_memory_used@@Base+0x6fbc>
  42e8cc:	ldur	x8, [x29, #-72]
  42e8d0:	cmp	x8, #0x0
  42e8d4:	cset	w9, eq  // eq = none
  42e8d8:	str	w9, [sp, #20]
  42e8dc:	ldr	w8, [sp, #20]
  42e8e0:	and	w8, w8, #0x1
  42e8e4:	mov	w0, w8
  42e8e8:	sxtw	x9, w0
  42e8ec:	cbz	x9, 42e8fc <_obstack_memory_used@@Base+0x6fdc>
  42e8f0:	mov	x8, xzr
  42e8f4:	stur	x8, [x29, #-8]
  42e8f8:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e8fc:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e900:	ldur	x0, [x29, #-64]
  42e904:	ldur	x8, [x29, #-16]
  42e908:	ldr	x1, [x8, #120]
  42e90c:	ldur	x8, [x29, #-32]
  42e910:	ldr	w9, [x8, #8]
  42e914:	and	w9, w9, #0xff
  42e918:	cmp	w9, #0x23
  42e91c:	cset	w9, eq  // eq = none
  42e920:	ldur	x5, [x29, #-56]
  42e924:	adrp	x2, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  42e928:	add	x2, x2, #0x8ca
  42e92c:	adrp	x3, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  42e930:	add	x3, x3, #0xad5
  42e934:	and	w4, w9, #0x1
  42e938:	bl	42fabc <_obstack_memory_used@@Base+0x819c>
  42e93c:	stur	x0, [x29, #-72]
  42e940:	ldur	x8, [x29, #-56]
  42e944:	ldr	w9, [x8]
  42e948:	mov	w10, #0x0                   	// #0
  42e94c:	str	w10, [sp, #16]
  42e950:	cbz	w9, 42e964 <_obstack_memory_used@@Base+0x7044>
  42e954:	ldur	x8, [x29, #-72]
  42e958:	cmp	x8, #0x0
  42e95c:	cset	w9, eq  // eq = none
  42e960:	str	w9, [sp, #16]
  42e964:	ldr	w8, [sp, #16]
  42e968:	and	w8, w8, #0x1
  42e96c:	mov	w0, w8
  42e970:	sxtw	x9, w0
  42e974:	cbz	x9, 42e984 <_obstack_memory_used@@Base+0x7064>
  42e978:	mov	x8, xzr
  42e97c:	stur	x8, [x29, #-8]
  42e980:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e984:	b	42e9ac <_obstack_memory_used@@Base+0x708c>
  42e988:	mov	x8, xzr
  42e98c:	stur	x8, [x29, #-8]
  42e990:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e994:	ldur	x8, [x29, #-56]
  42e998:	mov	w9, #0x5                   	// #5
  42e99c:	str	w9, [x8]
  42e9a0:	mov	x8, xzr
  42e9a4:	stur	x8, [x29, #-8]
  42e9a8:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42e9ac:	ldur	x0, [x29, #-32]
  42e9b0:	ldur	x1, [x29, #-16]
  42e9b4:	ldur	x2, [x29, #-40]
  42e9b8:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  42e9bc:	ldur	x8, [x29, #-32]
  42e9c0:	ldr	w9, [x8, #8]
  42e9c4:	and	w9, w9, #0xff
  42e9c8:	mov	w10, #0x1                   	// #1
  42e9cc:	cmp	w9, #0xb
  42e9d0:	str	w10, [sp, #12]
  42e9d4:	b.eq	42ea28 <_obstack_memory_used@@Base+0x7108>  // b.none
  42e9d8:	ldur	x8, [x29, #-32]
  42e9dc:	ldr	w9, [x8, #8]
  42e9e0:	and	w9, w9, #0xff
  42e9e4:	mov	w10, #0x1                   	// #1
  42e9e8:	cmp	w9, #0x12
  42e9ec:	str	w10, [sp, #12]
  42e9f0:	b.eq	42ea28 <_obstack_memory_used@@Base+0x7108>  // b.none
  42e9f4:	ldur	x8, [x29, #-32]
  42e9f8:	ldr	w9, [x8, #8]
  42e9fc:	and	w9, w9, #0xff
  42ea00:	mov	w10, #0x1                   	// #1
  42ea04:	cmp	w9, #0x13
  42ea08:	str	w10, [sp, #12]
  42ea0c:	b.eq	42ea28 <_obstack_memory_used@@Base+0x7108>  // b.none
  42ea10:	ldur	x8, [x29, #-32]
  42ea14:	ldr	w9, [x8, #8]
  42ea18:	and	w9, w9, #0xff
  42ea1c:	cmp	w9, #0x17
  42ea20:	cset	w9, eq  // eq = none
  42ea24:	str	w9, [sp, #12]
  42ea28:	ldr	w8, [sp, #12]
  42ea2c:	tbnz	w8, #0, 42ea34 <_obstack_memory_used@@Base+0x7114>
  42ea30:	b	42eb30 <_obstack_memory_used@@Base+0x7210>
  42ea34:	ldur	x0, [x29, #-72]
  42ea38:	ldur	x1, [x29, #-16]
  42ea3c:	ldur	x2, [x29, #-64]
  42ea40:	ldur	x3, [x29, #-32]
  42ea44:	ldur	x4, [x29, #-40]
  42ea48:	ldur	x5, [x29, #-56]
  42ea4c:	bl	42fe10 <_obstack_memory_used@@Base+0x84f0>
  42ea50:	str	x0, [sp, #56]
  42ea54:	ldur	x8, [x29, #-56]
  42ea58:	ldr	w9, [x8]
  42ea5c:	mov	w10, #0x0                   	// #0
  42ea60:	str	w10, [sp, #8]
  42ea64:	cbz	w9, 42ea78 <_obstack_memory_used@@Base+0x7158>
  42ea68:	ldr	x8, [sp, #56]
  42ea6c:	cmp	x8, #0x0
  42ea70:	cset	w9, eq  // eq = none
  42ea74:	str	w9, [sp, #8]
  42ea78:	ldr	w8, [sp, #8]
  42ea7c:	and	w8, w8, #0x1
  42ea80:	mov	w0, w8
  42ea84:	sxtw	x9, w0
  42ea88:	cbz	x9, 42eab8 <_obstack_memory_used@@Base+0x7198>
  42ea8c:	ldur	x8, [x29, #-72]
  42ea90:	cbz	x8, 42eaac <_obstack_memory_used@@Base+0x718c>
  42ea94:	ldur	x0, [x29, #-72]
  42ea98:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x66e0>
  42ea9c:	add	x1, x1, #0x144
  42eaa0:	mov	x8, xzr
  42eaa4:	mov	x2, x8
  42eaa8:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42eaac:	mov	x8, xzr
  42eab0:	stur	x8, [x29, #-8]
  42eab4:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42eab8:	ldr	x8, [sp, #56]
  42eabc:	stur	x8, [x29, #-72]
  42eac0:	ldur	x8, [x29, #-40]
  42eac4:	and	x8, x8, #0x1000000
  42eac8:	cbz	x8, 42eb2c <_obstack_memory_used@@Base+0x720c>
  42eacc:	ldur	x8, [x29, #-32]
  42ead0:	ldr	w9, [x8, #8]
  42ead4:	and	w9, w9, #0xff
  42ead8:	cmp	w9, #0xb
  42eadc:	b.eq	42eaf4 <_obstack_memory_used@@Base+0x71d4>  // b.none
  42eae0:	ldur	x8, [x29, #-32]
  42eae4:	ldr	w9, [x8, #8]
  42eae8:	and	w9, w9, #0xff
  42eaec:	cmp	w9, #0x17
  42eaf0:	b.ne	42eb2c <_obstack_memory_used@@Base+0x720c>  // b.any
  42eaf4:	ldur	x8, [x29, #-72]
  42eaf8:	cbz	x8, 42eb14 <_obstack_memory_used@@Base+0x71f4>
  42eafc:	ldur	x0, [x29, #-72]
  42eb00:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x66e0>
  42eb04:	add	x1, x1, #0x144
  42eb08:	mov	x8, xzr
  42eb0c:	mov	x2, x8
  42eb10:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42eb14:	ldur	x8, [x29, #-56]
  42eb18:	mov	w9, #0xd                   	// #13
  42eb1c:	str	w9, [x8]
  42eb20:	mov	x8, xzr
  42eb24:	stur	x8, [x29, #-8]
  42eb28:	b	42eb38 <_obstack_memory_used@@Base+0x7218>
  42eb2c:	b	42e9bc <_obstack_memory_used@@Base+0x709c>
  42eb30:	ldur	x8, [x29, #-72]
  42eb34:	stur	x8, [x29, #-8]
  42eb38:	ldur	x0, [x29, #-8]
  42eb3c:	ldp	x29, x30, [sp, #160]
  42eb40:	add	sp, sp, #0xb0
  42eb44:	ret
  42eb48:	sub	sp, sp, #0x50
  42eb4c:	stp	x29, x30, [sp, #64]
  42eb50:	add	x29, sp, #0x40
  42eb54:	stur	x0, [x29, #-16]
  42eb58:	stur	x1, [x29, #-24]
  42eb5c:	str	x2, [sp, #32]
  42eb60:	str	x3, [sp, #24]
  42eb64:	ldur	x8, [x29, #-16]
  42eb68:	ldrsw	x8, [x8, #128]
  42eb6c:	cmp	x8, #0xf
  42eb70:	cset	w9, eq  // eq = none
  42eb74:	and	w9, w9, #0x1
  42eb78:	mov	w0, w9
  42eb7c:	sxtw	x8, w0
  42eb80:	cbz	x8, 42ebc8 <_obstack_memory_used@@Base+0x72a8>
  42eb84:	mov	x0, #0x3c8                 	// #968
  42eb88:	bl	402450 <malloc@plt>
  42eb8c:	str	x0, [sp, #8]
  42eb90:	ldr	x8, [sp, #8]
  42eb94:	cbnz	x8, 42eba4 <_obstack_memory_used@@Base+0x7284>
  42eb98:	mov	x8, xzr
  42eb9c:	stur	x8, [x29, #-8]
  42eba0:	b	42ec98 <_obstack_memory_used@@Base+0x7378>
  42eba4:	ldur	x8, [x29, #-16]
  42eba8:	ldr	x8, [x8, #112]
  42ebac:	ldr	x9, [sp, #8]
  42ebb0:	str	x8, [x9]
  42ebb4:	ldr	x8, [sp, #8]
  42ebb8:	ldur	x9, [x29, #-16]
  42ebbc:	str	x8, [x9, #112]
  42ebc0:	ldur	x8, [x29, #-16]
  42ebc4:	str	wzr, [x8, #128]
  42ebc8:	ldur	x8, [x29, #-16]
  42ebcc:	ldr	x8, [x8, #112]
  42ebd0:	add	x8, x8, #0x8
  42ebd4:	ldur	x9, [x29, #-16]
  42ebd8:	ldrsw	x10, [x9, #128]
  42ebdc:	mov	w11, w10
  42ebe0:	add	w11, w11, #0x1
  42ebe4:	str	w11, [x9, #128]
  42ebe8:	mov	x9, #0x40                  	// #64
  42ebec:	mul	x9, x9, x10
  42ebf0:	add	x8, x8, x9
  42ebf4:	str	x8, [sp, #16]
  42ebf8:	ldr	x8, [sp, #16]
  42ebfc:	mov	x9, xzr
  42ec00:	str	x9, [x8]
  42ec04:	ldur	x8, [x29, #-24]
  42ec08:	ldr	x10, [sp, #16]
  42ec0c:	str	x8, [x10, #8]
  42ec10:	ldr	x8, [sp, #32]
  42ec14:	ldr	x10, [sp, #16]
  42ec18:	str	x8, [x10, #16]
  42ec1c:	ldr	x8, [sp, #16]
  42ec20:	ldr	x10, [sp, #24]
  42ec24:	ldr	q0, [x10]
  42ec28:	stur	q0, [x8, #40]
  42ec2c:	ldr	x8, [sp, #16]
  42ec30:	ldr	w11, [x8, #48]
  42ec34:	and	w11, w11, #0xfffbffff
  42ec38:	str	w11, [x8, #48]
  42ec3c:	ldr	x8, [sp, #16]
  42ec40:	ldr	w11, [x8, #48]
  42ec44:	and	w11, w11, #0xfff7ffff
  42ec48:	str	w11, [x8, #48]
  42ec4c:	ldr	x8, [sp, #16]
  42ec50:	str	x9, [x8, #24]
  42ec54:	ldr	x8, [sp, #16]
  42ec58:	str	x9, [x8, #32]
  42ec5c:	ldr	x8, [sp, #16]
  42ec60:	mov	x9, #0xffffffffffffffff    	// #-1
  42ec64:	str	x9, [x8, #56]
  42ec68:	ldur	x8, [x29, #-24]
  42ec6c:	cbz	x8, 42ec7c <_obstack_memory_used@@Base+0x735c>
  42ec70:	ldr	x8, [sp, #16]
  42ec74:	ldur	x9, [x29, #-24]
  42ec78:	str	x8, [x9]
  42ec7c:	ldr	x8, [sp, #32]
  42ec80:	cbz	x8, 42ec90 <_obstack_memory_used@@Base+0x7370>
  42ec84:	ldr	x8, [sp, #16]
  42ec88:	ldr	x9, [sp, #32]
  42ec8c:	str	x8, [x9]
  42ec90:	ldr	x8, [sp, #16]
  42ec94:	stur	x8, [x29, #-8]
  42ec98:	ldur	x0, [x29, #-8]
  42ec9c:	ldp	x29, x30, [sp, #64]
  42eca0:	add	sp, sp, #0x50
  42eca4:	ret
  42eca8:	sub	sp, sp, #0x70
  42ecac:	stp	x29, x30, [sp, #96]
  42ecb0:	add	x29, sp, #0x60
  42ecb4:	stur	x0, [x29, #-16]
  42ecb8:	stur	x1, [x29, #-24]
  42ecbc:	stur	x2, [x29, #-32]
  42ecc0:	stur	x3, [x29, #-40]
  42ecc4:	str	x4, [sp, #48]
  42ecc8:	str	x5, [sp, #40]
  42eccc:	ldur	x8, [x29, #-24]
  42ecd0:	ldr	x8, [x8]
  42ecd4:	str	x8, [sp, #32]
  42ecd8:	ldur	x8, [x29, #-24]
  42ecdc:	ldr	x9, [x8, #48]
  42ece0:	add	x10, x9, #0x1
  42ece4:	str	x10, [x8, #48]
  42ece8:	str	x9, [sp, #16]
  42ecec:	ldur	x0, [x29, #-32]
  42ecf0:	ldur	x1, [x29, #-16]
  42ecf4:	ldur	x8, [x29, #-40]
  42ecf8:	orr	x2, x8, #0x800000
  42ecfc:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  42ed00:	ldur	x8, [x29, #-32]
  42ed04:	ldr	w11, [x8, #8]
  42ed08:	and	w11, w11, #0xff
  42ed0c:	cmp	w11, #0x9
  42ed10:	b.ne	42ed20 <_obstack_memory_used@@Base+0x7400>  // b.any
  42ed14:	mov	x8, xzr
  42ed18:	str	x8, [sp, #24]
  42ed1c:	b	42edd8 <_obstack_memory_used@@Base+0x74b8>
  42ed20:	ldur	x0, [x29, #-16]
  42ed24:	ldur	x1, [x29, #-24]
  42ed28:	ldur	x2, [x29, #-32]
  42ed2c:	ldur	x3, [x29, #-40]
  42ed30:	ldr	x4, [sp, #48]
  42ed34:	ldr	x5, [sp, #40]
  42ed38:	bl	42cee8 <_obstack_memory_used@@Base+0x55c8>
  42ed3c:	str	x0, [sp, #24]
  42ed40:	ldr	x8, [sp, #40]
  42ed44:	ldr	w9, [x8]
  42ed48:	mov	w10, #0x0                   	// #0
  42ed4c:	str	w10, [sp, #12]
  42ed50:	cbnz	w9, 42ed6c <_obstack_memory_used@@Base+0x744c>
  42ed54:	ldur	x8, [x29, #-32]
  42ed58:	ldr	w9, [x8, #8]
  42ed5c:	and	w9, w9, #0xff
  42ed60:	cmp	w9, #0x9
  42ed64:	cset	w9, ne  // ne = any
  42ed68:	str	w9, [sp, #12]
  42ed6c:	ldr	w8, [sp, #12]
  42ed70:	and	w8, w8, #0x1
  42ed74:	mov	w0, w8
  42ed78:	sxtw	x9, w0
  42ed7c:	cbz	x9, 42edac <_obstack_memory_used@@Base+0x748c>
  42ed80:	ldr	x8, [sp, #24]
  42ed84:	cbz	x8, 42eda0 <_obstack_memory_used@@Base+0x7480>
  42ed88:	ldr	x0, [sp, #24]
  42ed8c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x66e0>
  42ed90:	add	x1, x1, #0x144
  42ed94:	mov	x8, xzr
  42ed98:	mov	x2, x8
  42ed9c:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  42eda0:	ldr	x8, [sp, #40]
  42eda4:	mov	w9, #0x8                   	// #8
  42eda8:	str	w9, [x8]
  42edac:	ldr	x8, [sp, #40]
  42edb0:	ldr	w9, [x8]
  42edb4:	cmp	w9, #0x0
  42edb8:	cset	w9, ne  // ne = any
  42edbc:	and	w9, w9, #0x1
  42edc0:	mov	w0, w9
  42edc4:	sxtw	x8, w0
  42edc8:	cbz	x8, 42edd8 <_obstack_memory_used@@Base+0x74b8>
  42edcc:	mov	x8, xzr
  42edd0:	stur	x8, [x29, #-8]
  42edd4:	b	42ee6c <_obstack_memory_used@@Base+0x754c>
  42edd8:	ldr	x8, [sp, #16]
  42eddc:	cmp	x8, #0x8
  42ede0:	b.hi	42ee08 <_obstack_memory_used@@Base+0x74e8>  // b.pmore
  42ede4:	ldr	x8, [sp, #16]
  42ede8:	mov	w9, #0x1                   	// #1
  42edec:	lsl	w8, w9, w8
  42edf0:	mov	w0, w8
  42edf4:	sxtw	x10, w0
  42edf8:	ldr	x11, [sp, #32]
  42edfc:	ldr	x12, [x11, #168]
  42ee00:	orr	x10, x12, x10
  42ee04:	str	x10, [x11, #168]
  42ee08:	ldr	x0, [sp, #32]
  42ee0c:	ldr	x1, [sp, #24]
  42ee10:	mov	x8, xzr
  42ee14:	mov	x2, x8
  42ee18:	mov	w3, #0x11                  	// #17
  42ee1c:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42ee20:	str	x0, [sp, #24]
  42ee24:	ldr	x8, [sp, #24]
  42ee28:	cmp	x8, #0x0
  42ee2c:	cset	w9, eq  // eq = none
  42ee30:	and	w9, w9, #0x1
  42ee34:	mov	w0, w9
  42ee38:	sxtw	x8, w0
  42ee3c:	cbz	x8, 42ee58 <_obstack_memory_used@@Base+0x7538>
  42ee40:	ldr	x8, [sp, #40]
  42ee44:	mov	w9, #0xc                   	// #12
  42ee48:	str	w9, [x8]
  42ee4c:	mov	x8, xzr
  42ee50:	stur	x8, [x29, #-8]
  42ee54:	b	42ee6c <_obstack_memory_used@@Base+0x754c>
  42ee58:	ldr	x8, [sp, #16]
  42ee5c:	ldr	x9, [sp, #24]
  42ee60:	str	x8, [x9, #40]
  42ee64:	ldr	x8, [sp, #24]
  42ee68:	stur	x8, [x29, #-8]
  42ee6c:	ldur	x0, [x29, #-8]
  42ee70:	ldp	x29, x30, [sp, #96]
  42ee74:	add	sp, sp, #0x70
  42ee78:	ret
  42ee7c:	sub	sp, sp, #0x190
  42ee80:	stp	x29, x30, [sp, #368]
  42ee84:	str	x28, [sp, #384]
  42ee88:	add	x29, sp, #0x170
  42ee8c:	sub	x8, x29, #0x88
  42ee90:	mov	w9, #0x0                   	// #0
  42ee94:	mov	w10, #0x1                   	// #1
  42ee98:	mov	x11, #0x20                  	// #32
  42ee9c:	mov	x12, #0x1                   	// #1
  42eea0:	mov	x13, #0x50                  	// #80
  42eea4:	str	x0, [x8, #120]
  42eea8:	str	x1, [x8, #112]
  42eeac:	str	x2, [x8, #104]
  42eeb0:	str	x3, [x8, #96]
  42eeb4:	str	x4, [x8, #88]
  42eeb8:	str	xzr, [x8, #48]
  42eebc:	str	xzr, [x8, #40]
  42eec0:	str	xzr, [x8, #32]
  42eec4:	str	xzr, [x8, #24]
  42eec8:	str	xzr, [x8, #16]
  42eecc:	sturb	w9, [x29, #-121]
  42eed0:	sturb	w10, [x29, #-141]
  42eed4:	mov	x0, x11
  42eed8:	mov	x1, x12
  42eedc:	str	x8, [sp, #64]
  42eee0:	str	x12, [sp, #56]
  42eee4:	str	x13, [sp, #48]
  42eee8:	bl	402540 <calloc@plt>
  42eeec:	ldr	x8, [sp, #64]
  42eef0:	str	x0, [x8, #64]
  42eef4:	ldr	x0, [sp, #48]
  42eef8:	ldr	x1, [sp, #56]
  42eefc:	bl	402540 <calloc@plt>
  42ef00:	ldr	x8, [sp, #64]
  42ef04:	str	x0, [x8, #56]
  42ef08:	ldr	x11, [x8, #64]
  42ef0c:	mov	w9, #0x1                   	// #1
  42ef10:	str	w9, [sp, #44]
  42ef14:	cbz	x11, 42ef2c <_obstack_memory_used@@Base+0x760c>
  42ef18:	ldr	x8, [sp, #64]
  42ef1c:	ldr	x9, [x8, #56]
  42ef20:	cmp	x9, #0x0
  42ef24:	cset	w10, eq  // eq = none
  42ef28:	str	w10, [sp, #44]
  42ef2c:	ldr	w8, [sp, #44]
  42ef30:	and	w8, w8, #0x1
  42ef34:	mov	w0, w8
  42ef38:	sxtw	x9, w0
  42ef3c:	cbz	x9, 42ef74 <_obstack_memory_used@@Base+0x7654>
  42ef40:	ldr	x8, [sp, #64]
  42ef44:	ldr	x0, [x8, #64]
  42ef48:	bl	4026c0 <free@plt>
  42ef4c:	ldr	x8, [sp, #64]
  42ef50:	ldr	x0, [x8, #56]
  42ef54:	bl	4026c0 <free@plt>
  42ef58:	ldr	x8, [sp, #64]
  42ef5c:	ldr	x9, [x8, #88]
  42ef60:	mov	w10, #0xc                   	// #12
  42ef64:	str	w10, [x9]
  42ef68:	mov	x9, xzr
  42ef6c:	str	x9, [x8, #128]
  42ef70:	b	42f8d4 <_obstack_memory_used@@Base+0x7fb4>
  42ef74:	ldr	x8, [sp, #64]
  42ef78:	ldr	x0, [x8, #104]
  42ef7c:	ldr	x1, [x8, #120]
  42ef80:	ldr	x2, [x8, #96]
  42ef84:	bl	430498 <_obstack_memory_used@@Base+0x8b78>
  42ef88:	stur	w0, [x29, #-140]
  42ef8c:	ldr	x8, [sp, #64]
  42ef90:	ldr	x9, [x8, #104]
  42ef94:	ldr	w10, [x9, #8]
  42ef98:	and	w10, w10, #0xff
  42ef9c:	cmp	w10, #0x2
  42efa0:	cset	w10, eq  // eq = none
  42efa4:	and	w10, w10, #0x1
  42efa8:	mov	w1, w10
  42efac:	sxtw	x9, w1
  42efb0:	cbz	x9, 42efc8 <_obstack_memory_used@@Base+0x76a8>
  42efb4:	ldr	x8, [sp, #64]
  42efb8:	ldr	x9, [x8, #88]
  42efbc:	mov	w10, #0x2                   	// #2
  42efc0:	str	w10, [x9]
  42efc4:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42efc8:	ldr	x8, [sp, #64]
  42efcc:	ldr	x9, [x8, #104]
  42efd0:	ldr	w10, [x9, #8]
  42efd4:	and	w10, w10, #0xff
  42efd8:	cmp	w10, #0x19
  42efdc:	b.ne	42f084 <_obstack_memory_used@@Base+0x7764>  // b.any
  42efe0:	ldr	x8, [sp, #64]
  42efe4:	ldr	x9, [x8, #56]
  42efe8:	ldrb	w10, [x9, #32]
  42efec:	and	w10, w10, #0xfffffffe
  42eff0:	orr	w10, w10, #0x1
  42eff4:	strb	w10, [x9, #32]
  42eff8:	mov	w10, #0x1                   	// #1
  42effc:	sturb	w10, [x29, #-121]
  42f000:	ldr	x9, [x8, #96]
  42f004:	and	x9, x9, #0x100
  42f008:	cbz	x9, 42f01c <_obstack_memory_used@@Base+0x76fc>
  42f00c:	ldr	x8, [sp, #64]
  42f010:	ldr	x0, [x8, #64]
  42f014:	mov	x1, #0xa                   	// #10
  42f018:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  42f01c:	ldursw	x8, [x29, #-140]
  42f020:	ldr	x9, [sp, #64]
  42f024:	ldr	x10, [x9, #120]
  42f028:	ldr	x11, [x10, #72]
  42f02c:	add	x8, x11, x8
  42f030:	str	x8, [x10, #72]
  42f034:	ldr	x0, [x9, #104]
  42f038:	ldr	x1, [x9, #120]
  42f03c:	ldr	x2, [x9, #96]
  42f040:	bl	430498 <_obstack_memory_used@@Base+0x8b78>
  42f044:	stur	w0, [x29, #-140]
  42f048:	ldr	x8, [sp, #64]
  42f04c:	ldr	x9, [x8, #104]
  42f050:	ldr	w12, [x9, #8]
  42f054:	and	w12, w12, #0xff
  42f058:	cmp	w12, #0x2
  42f05c:	cset	w12, eq  // eq = none
  42f060:	and	w12, w12, #0x1
  42f064:	mov	w1, w12
  42f068:	sxtw	x9, w1
  42f06c:	cbz	x9, 42f084 <_obstack_memory_used@@Base+0x7764>
  42f070:	ldr	x8, [sp, #64]
  42f074:	ldr	x9, [x8, #88]
  42f078:	mov	w10, #0x2                   	// #2
  42f07c:	str	w10, [x9]
  42f080:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f084:	ldr	x8, [sp, #64]
  42f088:	ldr	x9, [x8, #104]
  42f08c:	ldr	w10, [x9, #8]
  42f090:	and	w10, w10, #0xff
  42f094:	cmp	w10, #0x15
  42f098:	b.ne	42f0b4 <_obstack_memory_used@@Base+0x7794>  // b.any
  42f09c:	ldr	x8, [sp, #64]
  42f0a0:	ldr	x9, [x8, #104]
  42f0a4:	ldr	w10, [x9, #8]
  42f0a8:	and	w10, w10, #0xffffff00
  42f0ac:	orr	w10, w10, #0x1
  42f0b0:	str	w10, [x9, #8]
  42f0b4:	str	wzr, [sp, #120]
  42f0b8:	mov	w8, #0x0                   	// #0
  42f0bc:	strb	w8, [sp, #119]
  42f0c0:	sub	x9, x29, #0xa0
  42f0c4:	add	x10, sp, #0xa0
  42f0c8:	str	x10, [x9, #8]
  42f0cc:	mov	w8, #0x3                   	// #3
  42f0d0:	stur	w8, [x29, #-160]
  42f0d4:	ldr	x10, [sp, #64]
  42f0d8:	ldr	x1, [x10, #120]
  42f0dc:	ldr	x2, [x10, #104]
  42f0e0:	ldur	w3, [x29, #-140]
  42f0e4:	ldr	x4, [x10, #112]
  42f0e8:	ldr	x5, [x10, #96]
  42f0ec:	ldurb	w8, [x29, #-141]
  42f0f0:	mov	x0, x9
  42f0f4:	and	w6, w8, #0x1
  42f0f8:	bl	43082c <_obstack_memory_used@@Base+0x8f0c>
  42f0fc:	str	w0, [sp, #124]
  42f100:	ldr	w8, [sp, #124]
  42f104:	cmp	w8, #0x0
  42f108:	cset	w8, ne  // ne = any
  42f10c:	and	w8, w8, #0x1
  42f110:	mov	w1, w8
  42f114:	sxtw	x9, w1
  42f118:	cbz	x9, 42f130 <_obstack_memory_used@@Base+0x7810>
  42f11c:	ldr	w8, [sp, #124]
  42f120:	ldr	x9, [sp, #64]
  42f124:	ldr	x10, [x9, #88]
  42f128:	str	w8, [x10]
  42f12c:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f130:	mov	w8, #0x0                   	// #0
  42f134:	sturb	w8, [x29, #-141]
  42f138:	ldr	x9, [sp, #64]
  42f13c:	ldr	x0, [x9, #104]
  42f140:	ldr	x1, [x9, #120]
  42f144:	ldr	x2, [x9, #96]
  42f148:	bl	430498 <_obstack_memory_used@@Base+0x8b78>
  42f14c:	stur	w0, [x29, #-140]
  42f150:	ldur	w8, [x29, #-160]
  42f154:	cmp	w8, #0x4
  42f158:	b.eq	42f26c <_obstack_memory_used@@Base+0x794c>  // b.none
  42f15c:	ldur	w8, [x29, #-160]
  42f160:	cmp	w8, #0x2
  42f164:	b.eq	42f26c <_obstack_memory_used@@Base+0x794c>  // b.none
  42f168:	ldr	x8, [sp, #64]
  42f16c:	ldr	x9, [x8, #104]
  42f170:	ldr	w10, [x9, #8]
  42f174:	and	w10, w10, #0xff
  42f178:	cmp	w10, #0x2
  42f17c:	cset	w10, eq  // eq = none
  42f180:	and	w10, w10, #0x1
  42f184:	mov	w0, w10
  42f188:	sxtw	x9, w0
  42f18c:	cbz	x9, 42f1a4 <_obstack_memory_used@@Base+0x7884>
  42f190:	ldr	x8, [sp, #64]
  42f194:	ldr	x9, [x8, #88]
  42f198:	mov	w10, #0x7                   	// #7
  42f19c:	str	w10, [x9]
  42f1a0:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f1a4:	ldr	x8, [sp, #64]
  42f1a8:	ldr	x9, [x8, #104]
  42f1ac:	ldr	w10, [x9, #8]
  42f1b0:	and	w10, w10, #0xff
  42f1b4:	cmp	w10, #0x16
  42f1b8:	b.ne	42f26c <_obstack_memory_used@@Base+0x794c>  // b.any
  42f1bc:	ldursw	x8, [x29, #-140]
  42f1c0:	ldr	x9, [sp, #64]
  42f1c4:	ldr	x10, [x9, #120]
  42f1c8:	ldr	x11, [x10, #72]
  42f1cc:	add	x8, x11, x8
  42f1d0:	str	x8, [x10, #72]
  42f1d4:	ldr	x1, [x9, #120]
  42f1d8:	ldr	x2, [x9, #96]
  42f1dc:	add	x0, sp, #0x60
  42f1e0:	bl	430498 <_obstack_memory_used@@Base+0x8b78>
  42f1e4:	str	w0, [sp, #120]
  42f1e8:	ldr	w12, [sp, #104]
  42f1ec:	and	w12, w12, #0xff
  42f1f0:	cmp	w12, #0x2
  42f1f4:	cset	w12, eq  // eq = none
  42f1f8:	and	w12, w12, #0x1
  42f1fc:	mov	w1, w12
  42f200:	sxtw	x8, w1
  42f204:	cbz	x8, 42f21c <_obstack_memory_used@@Base+0x78fc>
  42f208:	ldr	x8, [sp, #64]
  42f20c:	ldr	x9, [x8, #88]
  42f210:	mov	w10, #0x7                   	// #7
  42f214:	str	w10, [x9]
  42f218:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f21c:	ldr	w8, [sp, #104]
  42f220:	and	w8, w8, #0xff
  42f224:	cmp	w8, #0x15
  42f228:	b.ne	42f264 <_obstack_memory_used@@Base+0x7944>  // b.any
  42f22c:	ldur	w8, [x29, #-140]
  42f230:	mov	w9, wzr
  42f234:	subs	w8, w9, w8
  42f238:	ldr	x10, [sp, #64]
  42f23c:	ldr	x11, [x10, #120]
  42f240:	ldr	x12, [x11, #72]
  42f244:	add	x12, x12, w8, sxtw
  42f248:	str	x12, [x11, #72]
  42f24c:	ldr	x11, [x10, #104]
  42f250:	ldr	w8, [x11, #8]
  42f254:	and	w8, w8, #0xffffff00
  42f258:	orr	w8, w8, #0x1
  42f25c:	str	w8, [x11, #8]
  42f260:	b	42f26c <_obstack_memory_used@@Base+0x794c>
  42f264:	mov	w8, #0x1                   	// #1
  42f268:	strb	w8, [sp, #119]
  42f26c:	ldrb	w8, [sp, #119]
  42f270:	and	w8, w8, #0x1
  42f274:	cmp	w8, #0x1
  42f278:	b.ne	42f394 <_obstack_memory_used@@Base+0x7a74>  // b.any
  42f27c:	sub	x8, x29, #0xb0
  42f280:	add	x9, sp, #0x80
  42f284:	str	x9, [x8, #8]
  42f288:	mov	w10, #0x3                   	// #3
  42f28c:	stur	w10, [x29, #-176]
  42f290:	ldr	x9, [sp, #64]
  42f294:	ldr	x1, [x9, #120]
  42f298:	ldr	w3, [sp, #120]
  42f29c:	ldr	x4, [x9, #112]
  42f2a0:	ldr	x5, [x9, #96]
  42f2a4:	mov	x0, x8
  42f2a8:	add	x2, sp, #0x60
  42f2ac:	mov	w10, #0x1                   	// #1
  42f2b0:	and	w6, w10, #0x1
  42f2b4:	bl	43082c <_obstack_memory_used@@Base+0x8f0c>
  42f2b8:	str	w0, [sp, #124]
  42f2bc:	ldr	w10, [sp, #124]
  42f2c0:	cmp	w10, #0x0
  42f2c4:	cset	w10, ne  // ne = any
  42f2c8:	and	w10, w10, #0x1
  42f2cc:	mov	w1, w10
  42f2d0:	sxtw	x8, w1
  42f2d4:	cbz	x8, 42f2ec <_obstack_memory_used@@Base+0x79cc>
  42f2d8:	ldr	w8, [sp, #124]
  42f2dc:	ldr	x9, [sp, #64]
  42f2e0:	ldr	x10, [x9, #88]
  42f2e4:	str	w8, [x10]
  42f2e8:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f2ec:	ldr	x8, [sp, #64]
  42f2f0:	ldr	x0, [x8, #104]
  42f2f4:	ldr	x1, [x8, #120]
  42f2f8:	ldr	x2, [x8, #96]
  42f2fc:	bl	430498 <_obstack_memory_used@@Base+0x8b78>
  42f300:	stur	w0, [x29, #-140]
  42f304:	ldr	x8, [sp, #64]
  42f308:	ldr	x0, [x8, #96]
  42f30c:	ldr	x1, [x8, #64]
  42f310:	ldr	x9, [x8, #112]
  42f314:	ldr	w10, [x9, #180]
  42f318:	cmp	w10, #0x1
  42f31c:	str	x0, [sp, #32]
  42f320:	str	x1, [sp, #24]
  42f324:	b.le	42f338 <_obstack_memory_used@@Base+0x7a18>
  42f328:	ldr	x8, [sp, #64]
  42f32c:	ldr	x9, [x8, #56]
  42f330:	str	x9, [sp, #16]
  42f334:	b	42f340 <_obstack_memory_used@@Base+0x7a20>
  42f338:	mov	x8, xzr
  42f33c:	str	x8, [sp, #16]
  42f340:	ldr	x8, [sp, #16]
  42f344:	ldr	x0, [sp, #32]
  42f348:	ldr	x1, [sp, #24]
  42f34c:	mov	x2, x8
  42f350:	sub	x3, x29, #0x60
  42f354:	sub	x4, x29, #0xa0
  42f358:	sub	x5, x29, #0xb0
  42f35c:	bl	4309a8 <_obstack_memory_used@@Base+0x9088>
  42f360:	ldr	x8, [sp, #64]
  42f364:	ldr	x9, [x8, #88]
  42f368:	str	w0, [x9]
  42f36c:	ldr	x9, [x8, #88]
  42f370:	ldr	w10, [x9]
  42f374:	cmp	w10, #0x0
  42f378:	cset	w10, ne  // ne = any
  42f37c:	and	w10, w10, #0x1
  42f380:	mov	w1, w10
  42f384:	sxtw	x9, w1
  42f388:	cbz	x9, 42f390 <_obstack_memory_used@@Base+0x7a70>
  42f38c:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f390:	b	42f58c <_obstack_memory_used@@Base+0x7c6c>
  42f394:	ldur	w8, [x29, #-160]
  42f398:	subs	w8, w8, #0x0
  42f39c:	mov	w9, w8
  42f3a0:	ubfx	x9, x9, #0, #32
  42f3a4:	str	x9, [sp, #8]
  42f3a8:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  42f3ac:	add	x8, x8, #0x888
  42f3b0:	ldr	x11, [sp, #8]
  42f3b4:	ldrsw	x10, [x8, x11, lsl #2]
  42f3b8:	add	x9, x8, x10
  42f3bc:	br	x9
  42f3c0:	ldr	x8, [sp, #64]
  42f3c4:	ldr	x0, [x8, #64]
  42f3c8:	ldurb	w9, [x29, #-152]
  42f3cc:	mov	w1, w9
  42f3d0:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  42f3d4:	b	42f58c <_obstack_memory_used@@Base+0x7c6c>
  42f3d8:	ldr	x8, [sp, #64]
  42f3dc:	ldr	x9, [x8, #32]
  42f3e0:	ldr	x10, [x8, #56]
  42f3e4:	ldr	x10, [x10, #40]
  42f3e8:	cmp	x9, x10
  42f3ec:	cset	w11, eq  // eq = none
  42f3f0:	and	w11, w11, #0x1
  42f3f4:	mov	w0, w11
  42f3f8:	sxtw	x9, w0
  42f3fc:	cbz	x9, 42f468 <_obstack_memory_used@@Base+0x7b48>
  42f400:	ldr	x8, [sp, #64]
  42f404:	ldr	x9, [x8, #56]
  42f408:	ldr	x9, [x9, #40]
  42f40c:	mov	x10, #0x2                   	// #2
  42f410:	mul	x9, x10, x9
  42f414:	add	x9, x9, #0x1
  42f418:	str	x9, [x8, #32]
  42f41c:	ldr	x9, [x8, #56]
  42f420:	ldr	x0, [x9]
  42f424:	ldr	x9, [x8, #32]
  42f428:	mov	x10, #0x4                   	// #4
  42f42c:	mul	x1, x9, x10
  42f430:	bl	402570 <realloc@plt>
  42f434:	str	x0, [sp, #88]
  42f438:	ldr	x8, [sp, #88]
  42f43c:	cmp	x8, #0x0
  42f440:	cset	w11, eq  // eq = none
  42f444:	and	w11, w11, #0x1
  42f448:	mov	w0, w11
  42f44c:	sxtw	x8, w0
  42f450:	cbz	x8, 42f458 <_obstack_memory_used@@Base+0x7b38>
  42f454:	b	42f8a0 <_obstack_memory_used@@Base+0x7f80>
  42f458:	ldr	x8, [sp, #88]
  42f45c:	ldr	x9, [sp, #64]
  42f460:	ldr	x10, [x9, #56]
  42f464:	str	x8, [x10]
  42f468:	ldur	w8, [x29, #-152]
  42f46c:	ldr	x9, [sp, #64]
  42f470:	ldr	x10, [x9, #56]
  42f474:	ldr	x10, [x10]
  42f478:	ldr	x11, [x9, #56]
  42f47c:	ldr	x12, [x11, #40]
  42f480:	add	x13, x12, #0x1
  42f484:	str	x13, [x11, #40]
  42f488:	str	w8, [x10, x12, lsl #2]
  42f48c:	b	42f58c <_obstack_memory_used@@Base+0x7c6c>
  42f490:	ldr	x8, [sp, #64]
  42f494:	ldr	x0, [x8, #64]
  42f498:	ldr	x1, [x8, #56]
  42f49c:	sub	x9, x29, #0xa0
  42f4a0:	ldr	x3, [x9, #8]
  42f4a4:	sub	x2, x29, #0x70
  42f4a8:	bl	430e14 <_obstack_memory_used@@Base+0x94f4>
  42f4ac:	ldr	x8, [sp, #64]
  42f4b0:	ldr	x9, [x8, #88]
  42f4b4:	str	w0, [x9]
  42f4b8:	ldr	x9, [x8, #88]
  42f4bc:	ldr	w10, [x9]
  42f4c0:	cmp	w10, #0x0
  42f4c4:	cset	w10, ne  // ne = any
  42f4c8:	and	w10, w10, #0x1
  42f4cc:	mov	w1, w10
  42f4d0:	sxtw	x9, w1
  42f4d4:	cbz	x9, 42f4dc <_obstack_memory_used@@Base+0x7bbc>
  42f4d8:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f4dc:	b	42f58c <_obstack_memory_used@@Base+0x7c6c>
  42f4e0:	ldr	x8, [sp, #64]
  42f4e4:	ldr	x0, [x8, #64]
  42f4e8:	ldr	x1, [x8, #56]
  42f4ec:	sub	x9, x29, #0xa0
  42f4f0:	ldr	x3, [x9, #8]
  42f4f4:	sub	x2, x29, #0x58
  42f4f8:	bl	430e84 <_obstack_memory_used@@Base+0x9564>
  42f4fc:	ldr	x8, [sp, #64]
  42f500:	ldr	x9, [x8, #88]
  42f504:	str	w0, [x9]
  42f508:	ldr	x9, [x8, #88]
  42f50c:	ldr	w10, [x9]
  42f510:	cmp	w10, #0x0
  42f514:	cset	w10, ne  // ne = any
  42f518:	and	w10, w10, #0x1
  42f51c:	mov	w1, w10
  42f520:	sxtw	x9, w1
  42f524:	cbz	x9, 42f52c <_obstack_memory_used@@Base+0x7c0c>
  42f528:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f52c:	b	42f58c <_obstack_memory_used@@Base+0x7c6c>
  42f530:	ldr	x8, [sp, #64]
  42f534:	ldr	x9, [x8, #120]
  42f538:	ldr	x0, [x9, #120]
  42f53c:	ldr	x1, [x8, #64]
  42f540:	ldr	x2, [x8, #56]
  42f544:	sub	x9, x29, #0xa0
  42f548:	ldr	x4, [x9, #8]
  42f54c:	ldr	x5, [x8, #96]
  42f550:	sub	x3, x29, #0x78
  42f554:	bl	430efc <_obstack_memory_used@@Base+0x95dc>
  42f558:	ldr	x8, [sp, #64]
  42f55c:	ldr	x9, [x8, #88]
  42f560:	str	w0, [x9]
  42f564:	ldr	x9, [x8, #88]
  42f568:	ldr	w10, [x9]
  42f56c:	cmp	w10, #0x0
  42f570:	cset	w10, ne  // ne = any
  42f574:	and	w10, w10, #0x1
  42f578:	mov	w1, w10
  42f57c:	sxtw	x9, w1
  42f580:	cbz	x9, 42f588 <_obstack_memory_used@@Base+0x7c68>
  42f584:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f588:	b	42f58c <_obstack_memory_used@@Base+0x7c6c>
  42f58c:	ldr	x8, [sp, #64]
  42f590:	ldr	x9, [x8, #104]
  42f594:	ldr	w10, [x9, #8]
  42f598:	and	w10, w10, #0xff
  42f59c:	cmp	w10, #0x2
  42f5a0:	cset	w10, eq  // eq = none
  42f5a4:	and	w10, w10, #0x1
  42f5a8:	mov	w0, w10
  42f5ac:	sxtw	x9, w0
  42f5b0:	cbz	x9, 42f5c8 <_obstack_memory_used@@Base+0x7ca8>
  42f5b4:	ldr	x8, [sp, #64]
  42f5b8:	ldr	x9, [x8, #88]
  42f5bc:	mov	w10, #0x7                   	// #7
  42f5c0:	str	w10, [x9]
  42f5c4:	b	42f8b0 <_obstack_memory_used@@Base+0x7f90>
  42f5c8:	ldr	x8, [sp, #64]
  42f5cc:	ldr	x9, [x8, #104]
  42f5d0:	ldr	w10, [x9, #8]
  42f5d4:	and	w10, w10, #0xff
  42f5d8:	cmp	w10, #0x15
  42f5dc:	b.ne	42f5e4 <_obstack_memory_used@@Base+0x7cc4>  // b.any
  42f5e0:	b	42f5e8 <_obstack_memory_used@@Base+0x7cc8>
  42f5e4:	b	42f0b4 <_obstack_memory_used@@Base+0x7794>
  42f5e8:	ldursw	x8, [x29, #-140]
  42f5ec:	ldr	x9, [sp, #64]
  42f5f0:	ldr	x10, [x9, #120]
  42f5f4:	ldr	x11, [x10, #72]
  42f5f8:	add	x8, x11, x8
  42f5fc:	str	x8, [x10, #72]
  42f600:	ldurb	w12, [x29, #-121]
  42f604:	tbnz	w12, #0, 42f60c <_obstack_memory_used@@Base+0x7cec>
  42f608:	b	42f618 <_obstack_memory_used@@Base+0x7cf8>
  42f60c:	ldr	x8, [sp, #64]
  42f610:	ldr	x0, [x8, #64]
  42f614:	bl	4319d8 <_obstack_memory_used@@Base+0xa0b8>
  42f618:	ldr	x8, [sp, #64]
  42f61c:	ldr	x9, [x8, #112]
  42f620:	ldr	w10, [x9, #180]
  42f624:	cmp	w10, #0x1
  42f628:	b.le	42f640 <_obstack_memory_used@@Base+0x7d20>
  42f62c:	ldr	x8, [sp, #64]
  42f630:	ldr	x0, [x8, #64]
  42f634:	ldr	x9, [x8, #112]
  42f638:	ldr	x1, [x9, #120]
  42f63c:	bl	431a24 <_obstack_memory_used@@Base+0xa104>
  42f640:	ldr	x8, [sp, #64]
  42f644:	ldr	x9, [x8, #56]
  42f648:	ldr	x9, [x9, #40]
  42f64c:	cbnz	x9, 42f6bc <_obstack_memory_used@@Base+0x7d9c>
  42f650:	ldr	x8, [sp, #64]
  42f654:	ldr	x9, [x8, #56]
  42f658:	ldr	x9, [x9, #48]
  42f65c:	cbnz	x9, 42f6bc <_obstack_memory_used@@Base+0x7d9c>
  42f660:	ldr	x8, [sp, #64]
  42f664:	ldr	x9, [x8, #56]
  42f668:	ldr	x9, [x9, #56]
  42f66c:	cbnz	x9, 42f6bc <_obstack_memory_used@@Base+0x7d9c>
  42f670:	ldr	x8, [sp, #64]
  42f674:	ldr	x9, [x8, #56]
  42f678:	ldr	x9, [x9, #64]
  42f67c:	cbnz	x9, 42f6bc <_obstack_memory_used@@Base+0x7d9c>
  42f680:	ldr	x8, [sp, #64]
  42f684:	ldr	x9, [x8, #112]
  42f688:	ldr	w10, [x9, #180]
  42f68c:	cmp	w10, #0x1
  42f690:	b.le	42f828 <_obstack_memory_used@@Base+0x7f08>
  42f694:	ldr	x8, [sp, #64]
  42f698:	ldr	x9, [x8, #56]
  42f69c:	ldr	x9, [x9, #72]
  42f6a0:	cbnz	x9, 42f6bc <_obstack_memory_used@@Base+0x7d9c>
  42f6a4:	ldr	x8, [sp, #64]
  42f6a8:	ldr	x9, [x8, #56]
  42f6ac:	ldrb	w10, [x9, #32]
  42f6b0:	and	w10, w10, #0x1
  42f6b4:	and	w10, w10, #0xff
  42f6b8:	cbz	w10, 42f828 <_obstack_memory_used@@Base+0x7f08>
  42f6bc:	ldr	x8, [sp, #64]
  42f6c0:	ldr	x9, [x8, #112]
  42f6c4:	ldrb	w10, [x9, #176]
  42f6c8:	and	w10, w10, #0xfffffffd
  42f6cc:	orr	w10, w10, #0x2
  42f6d0:	strb	w10, [x9, #176]
  42f6d4:	sub	x3, x29, #0x40
  42f6d8:	ldur	w10, [x29, #-56]
  42f6dc:	and	w10, w10, #0xffffff00
  42f6e0:	orr	w10, w10, #0x6
  42f6e4:	stur	w10, [x29, #-56]
  42f6e8:	ldr	x9, [x8, #56]
  42f6ec:	str	x9, [x8, #72]
  42f6f0:	ldr	x0, [x8, #112]
  42f6f4:	mov	x9, xzr
  42f6f8:	mov	x1, x9
  42f6fc:	mov	x2, x9
  42f700:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42f704:	str	x0, [sp, #80]
  42f708:	ldr	x8, [sp, #80]
  42f70c:	cmp	x8, #0x0
  42f710:	cset	w10, eq  // eq = none
  42f714:	and	w10, w10, #0x1
  42f718:	mov	w0, w10
  42f71c:	sxtw	x8, w0
  42f720:	cbz	x8, 42f728 <_obstack_memory_used@@Base+0x7e08>
  42f724:	b	42f8a0 <_obstack_memory_used@@Base+0x7f80>
  42f728:	str	wzr, [sp, #76]
  42f72c:	ldr	w8, [sp, #76]
  42f730:	cmp	w8, #0x4
  42f734:	b.ge	42f760 <_obstack_memory_used@@Base+0x7e40>  // b.tcont
  42f738:	ldr	x8, [sp, #64]
  42f73c:	ldr	x9, [x8, #64]
  42f740:	ldrsw	x10, [sp, #76]
  42f744:	ldr	x9, [x9, x10, lsl #3]
  42f748:	cbz	x9, 42f750 <_obstack_memory_used@@Base+0x7e30>
  42f74c:	b	42f760 <_obstack_memory_used@@Base+0x7e40>
  42f750:	ldr	w8, [sp, #76]
  42f754:	add	w8, w8, #0x1
  42f758:	str	w8, [sp, #76]
  42f75c:	b	42f72c <_obstack_memory_used@@Base+0x7e0c>
  42f760:	ldr	w8, [sp, #76]
  42f764:	cmp	w8, #0x4
  42f768:	b.ge	42f80c <_obstack_memory_used@@Base+0x7eec>  // b.tcont
  42f76c:	sub	x3, x29, #0x40
  42f770:	ldur	w8, [x29, #-56]
  42f774:	and	w8, w8, #0xffffff00
  42f778:	orr	w8, w8, #0x3
  42f77c:	stur	w8, [x29, #-56]
  42f780:	ldr	x9, [sp, #64]
  42f784:	ldr	x10, [x9, #64]
  42f788:	str	x10, [x9, #72]
  42f78c:	ldr	x0, [x9, #112]
  42f790:	mov	x10, xzr
  42f794:	mov	x1, x10
  42f798:	mov	x2, x10
  42f79c:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42f7a0:	ldr	x9, [sp, #64]
  42f7a4:	str	x0, [x9]
  42f7a8:	ldr	x10, [x9]
  42f7ac:	cmp	x10, #0x0
  42f7b0:	cset	w8, eq  // eq = none
  42f7b4:	and	w8, w8, #0x1
  42f7b8:	mov	w0, w8
  42f7bc:	sxtw	x10, w0
  42f7c0:	cbz	x10, 42f7c8 <_obstack_memory_used@@Base+0x7ea8>
  42f7c4:	b	42f8a0 <_obstack_memory_used@@Base+0x7f80>
  42f7c8:	ldr	x8, [sp, #64]
  42f7cc:	ldr	x0, [x8, #112]
  42f7d0:	ldr	x1, [x8]
  42f7d4:	ldr	x2, [sp, #80]
  42f7d8:	mov	w3, #0xa                   	// #10
  42f7dc:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42f7e0:	ldr	x8, [sp, #64]
  42f7e4:	str	x0, [x8]
  42f7e8:	ldr	x9, [x8]
  42f7ec:	cmp	x9, #0x0
  42f7f0:	cset	w10, eq  // eq = none
  42f7f4:	and	w10, w10, #0x1
  42f7f8:	mov	w0, w10
  42f7fc:	sxtw	x9, w0
  42f800:	cbz	x9, 42f808 <_obstack_memory_used@@Base+0x7ee8>
  42f804:	b	42f8a0 <_obstack_memory_used@@Base+0x7f80>
  42f808:	b	42f824 <_obstack_memory_used@@Base+0x7f04>
  42f80c:	ldr	x8, [sp, #64]
  42f810:	ldr	x0, [x8, #64]
  42f814:	bl	4026c0 <free@plt>
  42f818:	ldr	x8, [sp, #80]
  42f81c:	ldr	x9, [sp, #64]
  42f820:	str	x8, [x9]
  42f824:	b	42f890 <_obstack_memory_used@@Base+0x7f70>
  42f828:	ldr	x8, [sp, #64]
  42f82c:	ldr	x0, [x8, #56]
  42f830:	bl	42a5fc <_obstack_memory_used@@Base+0x2cdc>
  42f834:	sub	x3, x29, #0x40
  42f838:	ldur	w9, [x29, #-56]
  42f83c:	and	w9, w9, #0xffffff00
  42f840:	orr	w9, w9, #0x3
  42f844:	stur	w9, [x29, #-56]
  42f848:	ldr	x8, [sp, #64]
  42f84c:	ldr	x10, [x8, #64]
  42f850:	str	x10, [x8, #72]
  42f854:	ldr	x0, [x8, #112]
  42f858:	mov	x10, xzr
  42f85c:	mov	x1, x10
  42f860:	mov	x2, x10
  42f864:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42f868:	ldr	x8, [sp, #64]
  42f86c:	str	x0, [x8]
  42f870:	ldr	x10, [x8]
  42f874:	cmp	x10, #0x0
  42f878:	cset	w9, eq  // eq = none
  42f87c:	and	w9, w9, #0x1
  42f880:	mov	w0, w9
  42f884:	sxtw	x10, w0
  42f888:	cbz	x10, 42f890 <_obstack_memory_used@@Base+0x7f70>
  42f88c:	b	42f8a0 <_obstack_memory_used@@Base+0x7f80>
  42f890:	ldr	x8, [sp, #64]
  42f894:	ldr	x9, [x8]
  42f898:	str	x9, [x8, #128]
  42f89c:	b	42f8d4 <_obstack_memory_used@@Base+0x7fb4>
  42f8a0:	ldr	x8, [sp, #64]
  42f8a4:	ldr	x9, [x8, #88]
  42f8a8:	mov	w10, #0xc                   	// #12
  42f8ac:	str	w10, [x9]
  42f8b0:	ldr	x8, [sp, #64]
  42f8b4:	ldr	x0, [x8, #64]
  42f8b8:	bl	4026c0 <free@plt>
  42f8bc:	ldr	x8, [sp, #64]
  42f8c0:	ldr	x0, [x8, #56]
  42f8c4:	bl	42a5fc <_obstack_memory_used@@Base+0x2cdc>
  42f8c8:	mov	x8, xzr
  42f8cc:	ldr	x9, [sp, #64]
  42f8d0:	str	x8, [x9, #128]
  42f8d4:	ldr	x8, [sp, #64]
  42f8d8:	ldr	x0, [x8, #128]
  42f8dc:	ldr	x28, [sp, #384]
  42f8e0:	ldp	x29, x30, [sp, #368]
  42f8e4:	add	sp, sp, #0x190
  42f8e8:	ret
  42f8ec:	sub	sp, sp, #0x50
  42f8f0:	stp	x29, x30, [sp, #64]
  42f8f4:	add	x29, sp, #0x40
  42f8f8:	mov	w8, #0x1                   	// #1
  42f8fc:	stur	x0, [x29, #-8]
  42f900:	stur	wzr, [x29, #-12]
  42f904:	stur	wzr, [x29, #-20]
  42f908:	ldur	x9, [x29, #-8]
  42f90c:	ldrb	w10, [x9, #176]
  42f910:	and	w10, w10, #0xffffffef
  42f914:	orr	w10, w10, #0x10
  42f918:	strb	w10, [x9, #176]
  42f91c:	ldur	x9, [x29, #-8]
  42f920:	ldrb	w10, [x9, #176]
  42f924:	mov	w11, #0x3                   	// #3
  42f928:	lsr	w10, w10, w11
  42f92c:	and	w8, w10, w8
  42f930:	tst	w8, #0xff
  42f934:	cset	w8, eq  // eq = none
  42f938:	and	w8, w8, #0x1
  42f93c:	mov	w0, w8
  42f940:	sxtw	x9, w0
  42f944:	cbz	x9, 42fa10 <_obstack_memory_used@@Base+0x80f0>
  42f948:	str	xzr, [sp, #32]
  42f94c:	mov	x8, #0x3ff0000             	// #67043328
  42f950:	str	x8, [sp, #24]
  42f954:	mov	x8, #0xfffe                	// #65534
  42f958:	movk	x8, #0x87ff, lsl #16
  42f95c:	str	x8, [sp, #16]
  42f960:	mov	x8, #0x7fffffe             	// #134217726
  42f964:	str	x8, [sp, #8]
  42f968:	ldr	x8, [sp, #24]
  42f96c:	lsl	x8, x8, #31
  42f970:	ldr	x9, [sp, #32]
  42f974:	orr	x8, x9, x8, lsl #1
  42f978:	ldur	x9, [x29, #-8]
  42f97c:	str	x8, [x9, #184]
  42f980:	ldr	x8, [sp, #8]
  42f984:	lsl	x8, x8, #31
  42f988:	ldr	x9, [sp, #16]
  42f98c:	orr	x8, x9, x8, lsl #1
  42f990:	ldur	x9, [x29, #-8]
  42f994:	str	x8, [x9, #192]
  42f998:	mov	w10, #0x2                   	// #2
  42f99c:	stur	w10, [x29, #-12]
  42f9a0:	mov	w10, #0x80                  	// #128
  42f9a4:	stur	w10, [x29, #-20]
  42f9a8:	ldur	x8, [x29, #-8]
  42f9ac:	ldrb	w10, [x8, #176]
  42f9b0:	mov	w11, #0x2                   	// #2
  42f9b4:	lsr	w10, w10, w11
  42f9b8:	and	w10, w10, #0x1
  42f9bc:	and	w10, w10, #0xff
  42f9c0:	mov	w8, w10
  42f9c4:	ubfx	x8, x8, #0, #32
  42f9c8:	cbz	x8, 42fa10 <_obstack_memory_used@@Base+0x80f0>
  42f9cc:	ldur	x8, [x29, #-8]
  42f9d0:	add	x8, x8, #0xb8
  42f9d4:	ldursw	x9, [x29, #-12]
  42f9d8:	mov	x10, #0x8                   	// #8
  42f9dc:	mul	x9, x10, x9
  42f9e0:	add	x0, x8, x9
  42f9e4:	ldur	w11, [x29, #-20]
  42f9e8:	mov	w12, #0x100                 	// #256
  42f9ec:	subs	w11, w12, w11
  42f9f0:	mov	w12, #0x8                   	// #8
  42f9f4:	sdiv	w11, w11, w12
  42f9f8:	mov	w1, w11
  42f9fc:	sxtw	x2, w1
  42fa00:	mov	w11, wzr
  42fa04:	mov	w1, w11
  42fa08:	bl	402520 <memset@plt>
  42fa0c:	b	42fab0 <_obstack_memory_used@@Base+0x8190>
  42fa10:	ldur	w8, [x29, #-12]
  42fa14:	cmp	w8, #0x4
  42fa18:	b.ge	42fab0 <_obstack_memory_used@@Base+0x8190>  // b.tcont
  42fa1c:	stur	wzr, [x29, #-16]
  42fa20:	ldur	w8, [x29, #-16]
  42fa24:	cmp	w8, #0x40
  42fa28:	b.ge	42faa0 <_obstack_memory_used@@Base+0x8180>  // b.tcont
  42fa2c:	bl	4026b0 <__ctype_b_loc@plt>
  42fa30:	ldr	x8, [x0]
  42fa34:	ldursw	x9, [x29, #-20]
  42fa38:	ldrh	w10, [x8, x9, lsl #1]
  42fa3c:	and	w10, w10, #0x8
  42fa40:	cbnz	w10, 42fa50 <_obstack_memory_used@@Base+0x8130>
  42fa44:	ldur	w8, [x29, #-20]
  42fa48:	cmp	w8, #0x5f
  42fa4c:	b.ne	42fa84 <_obstack_memory_used@@Base+0x8164>  // b.any
  42fa50:	ldur	w8, [x29, #-16]
  42fa54:	mov	w9, w8
  42fa58:	mov	x10, #0x1                   	// #1
  42fa5c:	lsl	x9, x10, x9
  42fa60:	ldur	x10, [x29, #-8]
  42fa64:	add	x10, x10, #0xb8
  42fa68:	ldursw	x11, [x29, #-12]
  42fa6c:	mov	x12, #0x8                   	// #8
  42fa70:	mul	x11, x12, x11
  42fa74:	add	x10, x10, x11
  42fa78:	ldr	x11, [x10]
  42fa7c:	orr	x9, x11, x9
  42fa80:	str	x9, [x10]
  42fa84:	ldur	w8, [x29, #-16]
  42fa88:	add	w8, w8, #0x1
  42fa8c:	stur	w8, [x29, #-16]
  42fa90:	ldur	w8, [x29, #-20]
  42fa94:	add	w8, w8, #0x1
  42fa98:	stur	w8, [x29, #-20]
  42fa9c:	b	42fa20 <_obstack_memory_used@@Base+0x8100>
  42faa0:	ldur	w8, [x29, #-12]
  42faa4:	add	w8, w8, #0x1
  42faa8:	stur	w8, [x29, #-12]
  42faac:	b	42fa10 <_obstack_memory_used@@Base+0x80f0>
  42fab0:	ldp	x29, x30, [sp, #64]
  42fab4:	add	sp, sp, #0x50
  42fab8:	ret
  42fabc:	sub	sp, sp, #0x90
  42fac0:	stp	x29, x30, [sp, #128]
  42fac4:	add	x29, sp, #0x80
  42fac8:	mov	x8, #0x20                  	// #32
  42facc:	mov	x9, #0x1                   	// #1
  42fad0:	mov	w10, #0x1                   	// #1
  42fad4:	stur	x0, [x29, #-16]
  42fad8:	stur	x1, [x29, #-24]
  42fadc:	stur	x2, [x29, #-32]
  42fae0:	stur	x3, [x29, #-40]
  42fae4:	and	w10, w4, w10
  42fae8:	sturb	w10, [x29, #-41]
  42faec:	stur	x5, [x29, #-56]
  42faf0:	str	xzr, [sp, #48]
  42faf4:	mov	x0, x8
  42faf8:	mov	x1, x9
  42fafc:	bl	402540 <calloc@plt>
  42fb00:	str	x0, [sp, #64]
  42fb04:	ldr	x8, [sp, #64]
  42fb08:	cmp	x8, #0x0
  42fb0c:	cset	w10, eq  // eq = none
  42fb10:	and	w10, w10, #0x1
  42fb14:	mov	w0, w10
  42fb18:	sxtw	x8, w0
  42fb1c:	cbz	x8, 42fb38 <_obstack_memory_used@@Base+0x8218>
  42fb20:	ldur	x8, [x29, #-56]
  42fb24:	mov	w9, #0xc                   	// #12
  42fb28:	str	w9, [x8]
  42fb2c:	mov	x8, xzr
  42fb30:	stur	x8, [x29, #-8]
  42fb34:	b	42fe00 <_obstack_memory_used@@Base+0x84e0>
  42fb38:	mov	x0, #0x50                  	// #80
  42fb3c:	mov	x1, #0x1                   	// #1
  42fb40:	bl	402540 <calloc@plt>
  42fb44:	str	x0, [sp, #56]
  42fb48:	ldr	x8, [sp, #56]
  42fb4c:	cmp	x8, #0x0
  42fb50:	cset	w9, eq  // eq = none
  42fb54:	and	w9, w9, #0x1
  42fb58:	mov	w0, w9
  42fb5c:	sxtw	x8, w0
  42fb60:	cbz	x8, 42fb84 <_obstack_memory_used@@Base+0x8264>
  42fb64:	ldr	x0, [sp, #64]
  42fb68:	bl	4026c0 <free@plt>
  42fb6c:	ldur	x8, [x29, #-56]
  42fb70:	mov	w9, #0xc                   	// #12
  42fb74:	str	w9, [x8]
  42fb78:	mov	x8, xzr
  42fb7c:	stur	x8, [x29, #-8]
  42fb80:	b	42fe00 <_obstack_memory_used@@Base+0x84e0>
  42fb84:	ldurb	w8, [x29, #-41]
  42fb88:	and	w8, w8, #0x1
  42fb8c:	ldr	x9, [sp, #56]
  42fb90:	ldrb	w10, [x9, #32]
  42fb94:	and	w8, w8, #0x1
  42fb98:	and	w10, w10, #0xfffffffe
  42fb9c:	orr	w8, w10, w8
  42fba0:	strb	w8, [x9, #32]
  42fba4:	ldur	x0, [x29, #-24]
  42fba8:	ldr	x1, [sp, #64]
  42fbac:	ldr	x2, [sp, #56]
  42fbb0:	ldur	x4, [x29, #-32]
  42fbb4:	add	x3, sp, #0x30
  42fbb8:	mov	x9, xzr
  42fbbc:	mov	x5, x9
  42fbc0:	bl	430efc <_obstack_memory_used@@Base+0x95dc>
  42fbc4:	str	w0, [sp, #44]
  42fbc8:	ldr	w8, [sp, #44]
  42fbcc:	cmp	w8, #0x0
  42fbd0:	cset	w8, ne  // ne = any
  42fbd4:	and	w8, w8, #0x1
  42fbd8:	mov	w1, w8
  42fbdc:	sxtw	x9, w1
  42fbe0:	cbz	x9, 42fc0c <_obstack_memory_used@@Base+0x82ec>
  42fbe4:	ldr	x0, [sp, #64]
  42fbe8:	bl	4026c0 <free@plt>
  42fbec:	ldr	x0, [sp, #56]
  42fbf0:	bl	42a5fc <_obstack_memory_used@@Base+0x2cdc>
  42fbf4:	ldr	w8, [sp, #44]
  42fbf8:	ldur	x9, [x29, #-56]
  42fbfc:	str	w8, [x9]
  42fc00:	mov	x9, xzr
  42fc04:	stur	x9, [x29, #-8]
  42fc08:	b	42fe00 <_obstack_memory_used@@Base+0x84e0>
  42fc0c:	ldur	x8, [x29, #-40]
  42fc10:	ldrb	w9, [x8]
  42fc14:	cbz	w9, 42fc3c <_obstack_memory_used@@Base+0x831c>
  42fc18:	ldr	x0, [sp, #64]
  42fc1c:	ldur	x8, [x29, #-40]
  42fc20:	ldrb	w9, [x8]
  42fc24:	mov	w1, w9
  42fc28:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  42fc2c:	ldur	x8, [x29, #-40]
  42fc30:	add	x8, x8, #0x1
  42fc34:	stur	x8, [x29, #-40]
  42fc38:	b	42fc0c <_obstack_memory_used@@Base+0x82ec>
  42fc3c:	ldurb	w8, [x29, #-41]
  42fc40:	tbnz	w8, #0, 42fc48 <_obstack_memory_used@@Base+0x8328>
  42fc44:	b	42fc50 <_obstack_memory_used@@Base+0x8330>
  42fc48:	ldr	x0, [sp, #64]
  42fc4c:	bl	4319d8 <_obstack_memory_used@@Base+0xa0b8>
  42fc50:	ldur	x8, [x29, #-16]
  42fc54:	ldr	w9, [x8, #180]
  42fc58:	cmp	w9, #0x1
  42fc5c:	b.le	42fc70 <_obstack_memory_used@@Base+0x8350>
  42fc60:	ldr	x0, [sp, #64]
  42fc64:	ldur	x8, [x29, #-16]
  42fc68:	ldr	x1, [x8, #120]
  42fc6c:	bl	431a24 <_obstack_memory_used@@Base+0xa104>
  42fc70:	ldr	x8, [sp, #64]
  42fc74:	add	x3, sp, #0x10
  42fc78:	str	x8, [sp, #16]
  42fc7c:	ldr	w9, [sp, #24]
  42fc80:	and	w9, w9, #0xffffff00
  42fc84:	orr	w9, w9, #0x3
  42fc88:	str	w9, [sp, #24]
  42fc8c:	ldr	w9, [sp, #24]
  42fc90:	and	w9, w9, #0xfffc00ff
  42fc94:	str	w9, [sp, #24]
  42fc98:	ldr	w9, [sp, #24]
  42fc9c:	and	w9, w9, #0xfffbffff
  42fca0:	str	w9, [sp, #24]
  42fca4:	ldr	w9, [sp, #24]
  42fca8:	and	w9, w9, #0xfff7ffff
  42fcac:	str	w9, [sp, #24]
  42fcb0:	ldr	w9, [sp, #24]
  42fcb4:	and	w9, w9, #0xffefffff
  42fcb8:	str	w9, [sp, #24]
  42fcbc:	ldr	w9, [sp, #24]
  42fcc0:	and	w9, w9, #0xffdfffff
  42fcc4:	str	w9, [sp, #24]
  42fcc8:	ldr	w9, [sp, #24]
  42fccc:	and	w9, w9, #0xffbfffff
  42fcd0:	str	w9, [sp, #24]
  42fcd4:	ldur	x0, [x29, #-16]
  42fcd8:	mov	x8, xzr
  42fcdc:	mov	x1, x8
  42fce0:	mov	x2, x8
  42fce4:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42fce8:	str	x0, [sp, #32]
  42fcec:	ldr	x8, [sp, #32]
  42fcf0:	cmp	x8, #0x0
  42fcf4:	cset	w9, eq  // eq = none
  42fcf8:	and	w9, w9, #0x1
  42fcfc:	mov	w0, w9
  42fd00:	sxtw	x8, w0
  42fd04:	cbz	x8, 42fd0c <_obstack_memory_used@@Base+0x83ec>
  42fd08:	b	42fddc <_obstack_memory_used@@Base+0x84bc>
  42fd0c:	ldur	x8, [x29, #-16]
  42fd10:	ldr	w9, [x8, #180]
  42fd14:	cmp	w9, #0x1
  42fd18:	b.le	42fdc8 <_obstack_memory_used@@Base+0x84a8>
  42fd1c:	add	x3, sp, #0x10
  42fd20:	ldr	w8, [sp, #24]
  42fd24:	and	w8, w8, #0xffffff00
  42fd28:	orr	w8, w8, #0x6
  42fd2c:	str	w8, [sp, #24]
  42fd30:	ldr	x9, [sp, #56]
  42fd34:	str	x9, [sp, #16]
  42fd38:	ldur	x9, [x29, #-16]
  42fd3c:	ldrb	w8, [x9, #176]
  42fd40:	and	w8, w8, #0xfffffffd
  42fd44:	orr	w8, w8, #0x2
  42fd48:	strb	w8, [x9, #176]
  42fd4c:	ldur	x0, [x29, #-16]
  42fd50:	mov	x9, xzr
  42fd54:	mov	x1, x9
  42fd58:	mov	x2, x9
  42fd5c:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  42fd60:	str	x0, [sp, #8]
  42fd64:	ldr	x9, [sp, #8]
  42fd68:	cmp	x9, #0x0
  42fd6c:	cset	w8, eq  // eq = none
  42fd70:	and	w8, w8, #0x1
  42fd74:	mov	w0, w8
  42fd78:	sxtw	x9, w0
  42fd7c:	cbz	x9, 42fd84 <_obstack_memory_used@@Base+0x8464>
  42fd80:	b	42fddc <_obstack_memory_used@@Base+0x84bc>
  42fd84:	ldur	x0, [x29, #-16]
  42fd88:	ldr	x1, [sp, #32]
  42fd8c:	ldr	x2, [sp, #8]
  42fd90:	mov	w3, #0xa                   	// #10
  42fd94:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  42fd98:	str	x0, [sp, #32]
  42fd9c:	ldr	x8, [sp, #8]
  42fda0:	cmp	x8, #0x0
  42fda4:	cset	w9, ne  // ne = any
  42fda8:	and	w9, w9, #0x1
  42fdac:	mov	w0, w9
  42fdb0:	sxtw	x8, w0
  42fdb4:	cbz	x8, 42fdc4 <_obstack_memory_used@@Base+0x84a4>
  42fdb8:	ldr	x8, [sp, #32]
  42fdbc:	stur	x8, [x29, #-8]
  42fdc0:	b	42fe00 <_obstack_memory_used@@Base+0x84e0>
  42fdc4:	b	42fddc <_obstack_memory_used@@Base+0x84bc>
  42fdc8:	ldr	x0, [sp, #56]
  42fdcc:	bl	42a5fc <_obstack_memory_used@@Base+0x2cdc>
  42fdd0:	ldr	x8, [sp, #32]
  42fdd4:	stur	x8, [x29, #-8]
  42fdd8:	b	42fe00 <_obstack_memory_used@@Base+0x84e0>
  42fddc:	ldr	x0, [sp, #64]
  42fde0:	bl	4026c0 <free@plt>
  42fde4:	ldr	x0, [sp, #56]
  42fde8:	bl	42a5fc <_obstack_memory_used@@Base+0x2cdc>
  42fdec:	ldur	x8, [x29, #-56]
  42fdf0:	mov	w9, #0xc                   	// #12
  42fdf4:	str	w9, [x8]
  42fdf8:	mov	x8, xzr
  42fdfc:	stur	x8, [x29, #-8]
  42fe00:	ldur	x0, [x29, #-8]
  42fe04:	ldp	x29, x30, [sp, #128]
  42fe08:	add	sp, sp, #0x90
  42fe0c:	ret
  42fe10:	sub	sp, sp, #0xd0
  42fe14:	stp	x29, x30, [sp, #192]
  42fe18:	add	x29, sp, #0xc0
  42fe1c:	mov	x8, xzr
  42fe20:	stur	x0, [x29, #-16]
  42fe24:	stur	x1, [x29, #-24]
  42fe28:	stur	x2, [x29, #-32]
  42fe2c:	stur	x3, [x29, #-40]
  42fe30:	stur	x4, [x29, #-48]
  42fe34:	stur	x5, [x29, #-56]
  42fe38:	stur	x8, [x29, #-64]
  42fe3c:	stur	x8, [x29, #-72]
  42fe40:	ldur	x8, [x29, #-24]
  42fe44:	ldr	x8, [x8, #72]
  42fe48:	str	x8, [sp, #88]
  42fe4c:	ldur	x8, [x29, #-40]
  42fe50:	ldr	q0, [x8]
  42fe54:	str	q0, [sp, #64]
  42fe58:	ldur	x8, [x29, #-40]
  42fe5c:	ldr	w9, [x8, #8]
  42fe60:	and	w9, w9, #0xff
  42fe64:	cmp	w9, #0x17
  42fe68:	b.ne	43010c <_obstack_memory_used@@Base+0x87ec>  // b.any
  42fe6c:	str	xzr, [sp, #96]
  42fe70:	ldur	x0, [x29, #-24]
  42fe74:	ldur	x1, [x29, #-40]
  42fe78:	ldur	x2, [x29, #-48]
  42fe7c:	bl	431ed8 <_obstack_memory_used@@Base+0xa5b8>
  42fe80:	stur	x0, [x29, #-88]
  42fe84:	ldur	x8, [x29, #-88]
  42fe88:	mov	x9, #0xffffffffffffffff    	// #-1
  42fe8c:	cmp	x8, x9
  42fe90:	b.ne	42fed8 <_obstack_memory_used@@Base+0x85b8>  // b.any
  42fe94:	ldur	x8, [x29, #-40]
  42fe98:	ldr	w9, [x8, #8]
  42fe9c:	and	w9, w9, #0xff
  42fea0:	cmp	w9, #0x1
  42fea4:	b.ne	42fec0 <_obstack_memory_used@@Base+0x85a0>  // b.any
  42fea8:	ldur	x8, [x29, #-40]
  42feac:	ldrb	w9, [x8]
  42feb0:	cmp	w9, #0x2c
  42feb4:	b.ne	42fec0 <_obstack_memory_used@@Base+0x85a0>  // b.any
  42feb8:	stur	xzr, [x29, #-88]
  42febc:	b	42fed8 <_obstack_memory_used@@Base+0x85b8>
  42fec0:	ldur	x8, [x29, #-56]
  42fec4:	mov	w9, #0xa                   	// #10
  42fec8:	str	w9, [x8]
  42fecc:	mov	x8, xzr
  42fed0:	stur	x8, [x29, #-8]
  42fed4:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  42fed8:	ldur	x8, [x29, #-88]
  42fedc:	mov	x9, #0xfffffffffffffffe    	// #-2
  42fee0:	cmp	x8, x9
  42fee4:	cset	w10, ne  // ne = any
  42fee8:	and	w10, w10, #0x1
  42feec:	mov	w0, w10
  42fef0:	sxtw	x8, w0
  42fef4:	cbz	x8, 42ff6c <_obstack_memory_used@@Base+0x864c>
  42fef8:	ldur	x8, [x29, #-40]
  42fefc:	ldr	w9, [x8, #8]
  42ff00:	and	w9, w9, #0xff
  42ff04:	cmp	w9, #0x18
  42ff08:	b.ne	42ff18 <_obstack_memory_used@@Base+0x85f8>  // b.any
  42ff0c:	ldur	x8, [x29, #-88]
  42ff10:	str	x8, [sp, #48]
  42ff14:	b	42ff64 <_obstack_memory_used@@Base+0x8644>
  42ff18:	ldur	x8, [x29, #-40]
  42ff1c:	ldr	w9, [x8, #8]
  42ff20:	and	w9, w9, #0xff
  42ff24:	cmp	w9, #0x1
  42ff28:	b.ne	42ff54 <_obstack_memory_used@@Base+0x8634>  // b.any
  42ff2c:	ldur	x8, [x29, #-40]
  42ff30:	ldrb	w9, [x8]
  42ff34:	cmp	w9, #0x2c
  42ff38:	b.ne	42ff54 <_obstack_memory_used@@Base+0x8634>  // b.any
  42ff3c:	ldur	x0, [x29, #-24]
  42ff40:	ldur	x1, [x29, #-40]
  42ff44:	ldur	x2, [x29, #-48]
  42ff48:	bl	431ed8 <_obstack_memory_used@@Base+0xa5b8>
  42ff4c:	str	x0, [sp, #40]
  42ff50:	b	42ff5c <_obstack_memory_used@@Base+0x863c>
  42ff54:	mov	x8, #0xfffffffffffffffe    	// #-2
  42ff58:	str	x8, [sp, #40]
  42ff5c:	ldr	x8, [sp, #40]
  42ff60:	str	x8, [sp, #48]
  42ff64:	ldr	x8, [sp, #48]
  42ff68:	str	x8, [sp, #96]
  42ff6c:	ldur	x8, [x29, #-88]
  42ff70:	mov	x9, #0xfffffffffffffffe    	// #-2
  42ff74:	mov	w10, #0x1                   	// #1
  42ff78:	cmp	x8, x9
  42ff7c:	str	w10, [sp, #36]
  42ff80:	b.eq	42ff98 <_obstack_memory_used@@Base+0x8678>  // b.none
  42ff84:	ldr	x8, [sp, #96]
  42ff88:	mov	x9, #0xfffffffffffffffe    	// #-2
  42ff8c:	cmp	x8, x9
  42ff90:	cset	w10, eq  // eq = none
  42ff94:	str	w10, [sp, #36]
  42ff98:	ldr	w8, [sp, #36]
  42ff9c:	and	w8, w8, #0x1
  42ffa0:	mov	w0, w8
  42ffa4:	sxtw	x9, w0
  42ffa8:	cbz	x9, 430040 <_obstack_memory_used@@Base+0x8720>
  42ffac:	ldur	x8, [x29, #-48]
  42ffb0:	tst	x8, #0x200000
  42ffb4:	cset	w9, ne  // ne = any
  42ffb8:	eor	w9, w9, #0x1
  42ffbc:	and	w9, w9, #0x1
  42ffc0:	mov	w0, w9
  42ffc4:	sxtw	x8, w0
  42ffc8:	cbz	x8, 430008 <_obstack_memory_used@@Base+0x86e8>
  42ffcc:	ldur	x8, [x29, #-40]
  42ffd0:	ldr	w9, [x8, #8]
  42ffd4:	and	w9, w9, #0xff
  42ffd8:	cmp	w9, #0x2
  42ffdc:	b.ne	42fff0 <_obstack_memory_used@@Base+0x86d0>  // b.any
  42ffe0:	ldur	x8, [x29, #-56]
  42ffe4:	mov	w9, #0x9                   	// #9
  42ffe8:	str	w9, [x8]
  42ffec:	b	42fffc <_obstack_memory_used@@Base+0x86dc>
  42fff0:	ldur	x8, [x29, #-56]
  42fff4:	mov	w9, #0xa                   	// #10
  42fff8:	str	w9, [x8]
  42fffc:	mov	x8, xzr
  430000:	stur	x8, [x29, #-8]
  430004:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  430008:	ldr	x8, [sp, #88]
  43000c:	ldur	x9, [x29, #-24]
  430010:	str	x8, [x9, #72]
  430014:	ldur	x8, [x29, #-40]
  430018:	ldr	q0, [sp, #64]
  43001c:	str	q0, [x8]
  430020:	ldur	x8, [x29, #-40]
  430024:	ldr	w10, [x8, #8]
  430028:	and	w10, w10, #0xffffff00
  43002c:	orr	w10, w10, #0x1
  430030:	str	w10, [x8, #8]
  430034:	ldur	x8, [x29, #-16]
  430038:	stur	x8, [x29, #-8]
  43003c:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  430040:	ldr	x8, [sp, #96]
  430044:	mov	x9, #0xffffffffffffffff    	// #-1
  430048:	cmp	x8, x9
  43004c:	b.eq	430068 <_obstack_memory_used@@Base+0x8748>  // b.none
  430050:	ldur	x8, [x29, #-88]
  430054:	ldr	x9, [sp, #96]
  430058:	mov	w10, #0x1                   	// #1
  43005c:	cmp	x8, x9
  430060:	str	w10, [sp, #32]
  430064:	b.gt	430080 <_obstack_memory_used@@Base+0x8760>
  430068:	ldur	x8, [x29, #-40]
  43006c:	ldr	w9, [x8, #8]
  430070:	and	w9, w9, #0xff
  430074:	cmp	w9, #0x18
  430078:	cset	w9, ne  // ne = any
  43007c:	str	w9, [sp, #32]
  430080:	ldr	w8, [sp, #32]
  430084:	and	w8, w8, #0x1
  430088:	mov	w0, w8
  43008c:	sxtw	x9, w0
  430090:	cbz	x9, 4300ac <_obstack_memory_used@@Base+0x878c>
  430094:	ldur	x8, [x29, #-56]
  430098:	mov	w9, #0xa                   	// #10
  43009c:	str	w9, [x8]
  4300a0:	mov	x8, xzr
  4300a4:	stur	x8, [x29, #-8]
  4300a8:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  4300ac:	ldr	x8, [sp, #96]
  4300b0:	mov	x9, #0xffffffffffffffff    	// #-1
  4300b4:	cmp	x8, x9
  4300b8:	b.ne	4300c8 <_obstack_memory_used@@Base+0x87a8>  // b.any
  4300bc:	ldur	x8, [x29, #-88]
  4300c0:	str	x8, [sp, #24]
  4300c4:	b	4300d0 <_obstack_memory_used@@Base+0x87b0>
  4300c8:	ldr	x8, [sp, #96]
  4300cc:	str	x8, [sp, #24]
  4300d0:	ldr	x8, [sp, #24]
  4300d4:	mov	x9, #0x7fff                	// #32767
  4300d8:	cmp	x9, x8
  4300dc:	cset	w10, lt  // lt = tstop
  4300e0:	and	w10, w10, #0x1
  4300e4:	mov	w0, w10
  4300e8:	sxtw	x8, w0
  4300ec:	cbz	x8, 430108 <_obstack_memory_used@@Base+0x87e8>
  4300f0:	ldur	x8, [x29, #-56]
  4300f4:	mov	w9, #0xf                   	// #15
  4300f8:	str	w9, [x8]
  4300fc:	mov	x8, xzr
  430100:	stur	x8, [x29, #-8]
  430104:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  430108:	b	430158 <_obstack_memory_used@@Base+0x8838>
  43010c:	ldur	x8, [x29, #-40]
  430110:	ldr	w9, [x8, #8]
  430114:	and	w9, w9, #0xff
  430118:	mov	w10, wzr
  43011c:	mov	w11, #0x1                   	// #1
  430120:	cmp	w9, #0x12
  430124:	csel	w9, w11, w10, eq  // eq = none
  430128:	mov	w0, w9
  43012c:	sxtw	x8, w0
  430130:	stur	x8, [x29, #-88]
  430134:	ldur	x8, [x29, #-40]
  430138:	ldr	w9, [x8, #8]
  43013c:	and	w9, w9, #0xff
  430140:	mov	w10, #0xffffffff            	// #-1
  430144:	cmp	w9, #0x13
  430148:	csel	w9, w11, w10, eq  // eq = none
  43014c:	mov	w0, w9
  430150:	sxtw	x8, w0
  430154:	str	x8, [sp, #96]
  430158:	ldur	x0, [x29, #-40]
  43015c:	ldur	x1, [x29, #-24]
  430160:	ldur	x2, [x29, #-48]
  430164:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  430168:	ldur	x8, [x29, #-16]
  43016c:	cmp	x8, #0x0
  430170:	cset	w9, eq  // eq = none
  430174:	and	w9, w9, #0x1
  430178:	mov	w0, w9
  43017c:	sxtw	x8, w0
  430180:	cbz	x8, 430190 <_obstack_memory_used@@Base+0x8870>
  430184:	mov	x8, xzr
  430188:	stur	x8, [x29, #-8]
  43018c:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  430190:	ldur	x8, [x29, #-88]
  430194:	mov	w9, #0x0                   	// #0
  430198:	str	w9, [sp, #20]
  43019c:	cbnz	x8, 4301b0 <_obstack_memory_used@@Base+0x8890>
  4301a0:	ldr	x8, [sp, #96]
  4301a4:	cmp	x8, #0x0
  4301a8:	cset	w9, eq  // eq = none
  4301ac:	str	w9, [sp, #20]
  4301b0:	ldr	w8, [sp, #20]
  4301b4:	and	w8, w8, #0x1
  4301b8:	mov	w0, w8
  4301bc:	sxtw	x9, w0
  4301c0:	cbz	x9, 4301ec <_obstack_memory_used@@Base+0x88cc>
  4301c4:	ldur	x0, [x29, #-16]
  4301c8:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x66e0>
  4301cc:	add	x1, x1, #0x144
  4301d0:	mov	x8, xzr
  4301d4:	mov	x2, x8
  4301d8:	str	x8, [sp, #8]
  4301dc:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  4301e0:	ldr	x8, [sp, #8]
  4301e4:	stur	x8, [x29, #-8]
  4301e8:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  4301ec:	ldur	x8, [x29, #-88]
  4301f0:	cmp	x8, #0x0
  4301f4:	cset	w9, gt
  4301f8:	and	w9, w9, #0x1
  4301fc:	mov	w0, w9
  430200:	sxtw	x8, w0
  430204:	cbz	x8, 4302f0 <_obstack_memory_used@@Base+0x89d0>
  430208:	ldur	x8, [x29, #-16]
  43020c:	stur	x8, [x29, #-64]
  430210:	mov	x8, #0x2                   	// #2
  430214:	stur	x8, [x29, #-80]
  430218:	ldur	x8, [x29, #-80]
  43021c:	ldur	x9, [x29, #-88]
  430220:	cmp	x8, x9
  430224:	b.gt	430298 <_obstack_memory_used@@Base+0x8978>
  430228:	ldur	x0, [x29, #-16]
  43022c:	ldur	x1, [x29, #-32]
  430230:	bl	432064 <_obstack_memory_used@@Base+0xa744>
  430234:	stur	x0, [x29, #-16]
  430238:	ldur	x0, [x29, #-32]
  43023c:	ldur	x1, [x29, #-64]
  430240:	ldur	x2, [x29, #-16]
  430244:	mov	w3, #0x10                  	// #16
  430248:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  43024c:	stur	x0, [x29, #-64]
  430250:	ldur	x8, [x29, #-16]
  430254:	mov	w9, #0x1                   	// #1
  430258:	str	w9, [sp, #4]
  43025c:	cbz	x8, 430270 <_obstack_memory_used@@Base+0x8950>
  430260:	ldur	x8, [x29, #-64]
  430264:	cmp	x8, #0x0
  430268:	cset	w9, eq  // eq = none
  43026c:	str	w9, [sp, #4]
  430270:	ldr	w8, [sp, #4]
  430274:	and	w8, w8, #0x1
  430278:	mov	w0, w8
  43027c:	sxtw	x9, w0
  430280:	cbz	x9, 430288 <_obstack_memory_used@@Base+0x8968>
  430284:	b	430474 <_obstack_memory_used@@Base+0x8b54>
  430288:	ldur	x8, [x29, #-80]
  43028c:	add	x8, x8, #0x1
  430290:	stur	x8, [x29, #-80]
  430294:	b	430218 <_obstack_memory_used@@Base+0x88f8>
  430298:	ldur	x8, [x29, #-88]
  43029c:	ldr	x9, [sp, #96]
  4302a0:	cmp	x8, x9
  4302a4:	b.ne	4302b4 <_obstack_memory_used@@Base+0x8994>  // b.any
  4302a8:	ldur	x8, [x29, #-64]
  4302ac:	stur	x8, [x29, #-8]
  4302b0:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  4302b4:	ldur	x0, [x29, #-16]
  4302b8:	ldur	x1, [x29, #-32]
  4302bc:	bl	432064 <_obstack_memory_used@@Base+0xa744>
  4302c0:	stur	x0, [x29, #-16]
  4302c4:	ldur	x8, [x29, #-16]
  4302c8:	cmp	x8, #0x0
  4302cc:	cset	w9, eq  // eq = none
  4302d0:	and	w9, w9, #0x1
  4302d4:	mov	w0, w9
  4302d8:	sxtw	x8, w0
  4302dc:	cbz	x8, 4302e4 <_obstack_memory_used@@Base+0x89c4>
  4302e0:	b	430474 <_obstack_memory_used@@Base+0x8b54>
  4302e4:	ldur	x8, [x29, #-64]
  4302e8:	stur	x8, [x29, #-72]
  4302ec:	b	4302f8 <_obstack_memory_used@@Base+0x89d8>
  4302f0:	mov	x8, xzr
  4302f4:	stur	x8, [x29, #-72]
  4302f8:	ldur	x8, [x29, #-16]
  4302fc:	ldr	w9, [x8, #48]
  430300:	and	w9, w9, #0xff
  430304:	cmp	w9, #0x11
  430308:	b.ne	430330 <_obstack_memory_used@@Base+0x8a10>  // b.any
  43030c:	ldur	x8, [x29, #-16]
  430310:	ldr	x8, [x8, #40]
  430314:	str	x8, [sp, #56]
  430318:	ldur	x0, [x29, #-16]
  43031c:	ldr	x8, [sp, #56]
  430320:	adrp	x1, 432000 <_obstack_memory_used@@Base+0xa6e0>
  430324:	add	x1, x1, #0x1d4
  430328:	mov	x2, x8
  43032c:	bl	42e008 <_obstack_memory_used@@Base+0x66e8>
  430330:	ldur	x0, [x29, #-32]
  430334:	ldur	x1, [x29, #-16]
  430338:	ldr	x8, [sp, #96]
  43033c:	mov	x9, #0xffffffffffffffff    	// #-1
  430340:	mov	w10, #0xb                   	// #11
  430344:	mov	w11, #0xa                   	// #10
  430348:	cmp	x8, x9
  43034c:	csel	w3, w10, w11, eq  // eq = none
  430350:	mov	x8, xzr
  430354:	mov	x2, x8
  430358:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  43035c:	stur	x0, [x29, #-64]
  430360:	ldur	x8, [x29, #-64]
  430364:	cmp	x8, #0x0
  430368:	cset	w10, eq  // eq = none
  43036c:	and	w10, w10, #0x1
  430370:	mov	w0, w10
  430374:	sxtw	x8, w0
  430378:	cbz	x8, 430380 <_obstack_memory_used@@Base+0x8a60>
  43037c:	b	430474 <_obstack_memory_used@@Base+0x8b54>
  430380:	ldur	x8, [x29, #-88]
  430384:	add	x8, x8, #0x2
  430388:	stur	x8, [x29, #-80]
  43038c:	ldur	x8, [x29, #-80]
  430390:	ldr	x9, [sp, #96]
  430394:	cmp	x8, x9
  430398:	b.gt	430448 <_obstack_memory_used@@Base+0x8b28>
  43039c:	ldur	x0, [x29, #-16]
  4303a0:	ldur	x1, [x29, #-32]
  4303a4:	bl	432064 <_obstack_memory_used@@Base+0xa744>
  4303a8:	stur	x0, [x29, #-16]
  4303ac:	ldur	x0, [x29, #-32]
  4303b0:	ldur	x1, [x29, #-64]
  4303b4:	ldur	x2, [x29, #-16]
  4303b8:	mov	w3, #0x10                  	// #16
  4303bc:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  4303c0:	stur	x0, [x29, #-64]
  4303c4:	ldur	x8, [x29, #-16]
  4303c8:	mov	w9, #0x1                   	// #1
  4303cc:	str	w9, [sp]
  4303d0:	cbz	x8, 4303e4 <_obstack_memory_used@@Base+0x8ac4>
  4303d4:	ldur	x8, [x29, #-64]
  4303d8:	cmp	x8, #0x0
  4303dc:	cset	w9, eq  // eq = none
  4303e0:	str	w9, [sp]
  4303e4:	ldr	w8, [sp]
  4303e8:	and	w8, w8, #0x1
  4303ec:	mov	w0, w8
  4303f0:	sxtw	x9, w0
  4303f4:	cbz	x9, 4303fc <_obstack_memory_used@@Base+0x8adc>
  4303f8:	b	430474 <_obstack_memory_used@@Base+0x8b54>
  4303fc:	ldur	x0, [x29, #-32]
  430400:	ldur	x1, [x29, #-64]
  430404:	mov	x8, xzr
  430408:	mov	x2, x8
  43040c:	mov	w3, #0xa                   	// #10
  430410:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  430414:	stur	x0, [x29, #-64]
  430418:	ldur	x8, [x29, #-64]
  43041c:	cmp	x8, #0x0
  430420:	cset	w9, eq  // eq = none
  430424:	and	w9, w9, #0x1
  430428:	mov	w0, w9
  43042c:	sxtw	x8, w0
  430430:	cbz	x8, 430438 <_obstack_memory_used@@Base+0x8b18>
  430434:	b	430474 <_obstack_memory_used@@Base+0x8b54>
  430438:	ldur	x8, [x29, #-80]
  43043c:	add	x8, x8, #0x1
  430440:	stur	x8, [x29, #-80]
  430444:	b	43038c <_obstack_memory_used@@Base+0x8a6c>
  430448:	ldur	x8, [x29, #-72]
  43044c:	cbz	x8, 430468 <_obstack_memory_used@@Base+0x8b48>
  430450:	ldur	x0, [x29, #-32]
  430454:	ldur	x1, [x29, #-72]
  430458:	ldur	x2, [x29, #-64]
  43045c:	mov	w3, #0x10                  	// #16
  430460:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  430464:	stur	x0, [x29, #-64]
  430468:	ldur	x8, [x29, #-64]
  43046c:	stur	x8, [x29, #-8]
  430470:	b	430488 <_obstack_memory_used@@Base+0x8b68>
  430474:	ldur	x8, [x29, #-56]
  430478:	mov	w9, #0xc                   	// #12
  43047c:	str	w9, [x8]
  430480:	mov	x8, xzr
  430484:	stur	x8, [x29, #-8]
  430488:	ldur	x0, [x29, #-8]
  43048c:	ldp	x29, x30, [sp, #192]
  430490:	add	sp, sp, #0xd0
  430494:	ret
  430498:	sub	sp, sp, #0x30
  43049c:	str	x0, [sp, #32]
  4304a0:	str	x1, [sp, #24]
  4304a4:	str	x2, [sp, #16]
  4304a8:	ldr	x8, [sp, #24]
  4304ac:	ldr	x8, [x8, #104]
  4304b0:	ldr	x9, [sp, #24]
  4304b4:	ldr	x9, [x9, #72]
  4304b8:	cmp	x8, x9
  4304bc:	b.gt	4304dc <_obstack_memory_used@@Base+0x8bbc>
  4304c0:	ldr	x8, [sp, #32]
  4304c4:	ldr	w9, [x8, #8]
  4304c8:	and	w9, w9, #0xffffff00
  4304cc:	orr	w9, w9, #0x2
  4304d0:	str	w9, [x8, #8]
  4304d4:	str	wzr, [sp, #44]
  4304d8:	b	4307cc <_obstack_memory_used@@Base+0x8eac>
  4304dc:	ldr	x8, [sp, #24]
  4304e0:	ldr	x8, [x8, #8]
  4304e4:	ldr	x9, [sp, #24]
  4304e8:	ldr	x9, [x9, #72]
  4304ec:	add	x9, x9, #0x0
  4304f0:	add	x8, x8, x9
  4304f4:	ldrb	w10, [x8]
  4304f8:	strb	w10, [sp, #15]
  4304fc:	ldrb	w10, [sp, #15]
  430500:	ldr	x8, [sp, #32]
  430504:	strb	w10, [x8]
  430508:	ldr	x8, [sp, #24]
  43050c:	ldr	w10, [x8, #144]
  430510:	cmp	w10, #0x1
  430514:	b.le	430570 <_obstack_memory_used@@Base+0x8c50>
  430518:	ldr	x8, [sp, #24]
  43051c:	ldr	x8, [x8, #72]
  430520:	ldr	x9, [sp, #24]
  430524:	ldr	x9, [x9, #48]
  430528:	cmp	x8, x9
  43052c:	b.eq	430570 <_obstack_memory_used@@Base+0x8c50>  // b.none
  430530:	ldr	x8, [sp, #24]
  430534:	ldr	x8, [x8, #16]
  430538:	ldr	x9, [sp, #24]
  43053c:	ldr	x9, [x9, #72]
  430540:	ldr	w10, [x8, x9, lsl #2]
  430544:	mov	w11, #0xffffffff            	// #-1
  430548:	cmp	w10, w11
  43054c:	b.ne	430570 <_obstack_memory_used@@Base+0x8c50>  // b.any
  430550:	ldr	x8, [sp, #32]
  430554:	ldr	w9, [x8, #8]
  430558:	and	w9, w9, #0xffffff00
  43055c:	mov	w10, #0x1                   	// #1
  430560:	orr	w9, w9, #0x1
  430564:	str	w9, [x8, #8]
  430568:	str	w10, [sp, #44]
  43056c:	b	4307cc <_obstack_memory_used@@Base+0x8eac>
  430570:	ldrb	w8, [sp, #15]
  430574:	cmp	w8, #0x5c
  430578:	b.ne	430600 <_obstack_memory_used@@Base+0x8ce0>  // b.any
  43057c:	ldr	x8, [sp, #16]
  430580:	and	x8, x8, #0x1
  430584:	cbz	x8, 430600 <_obstack_memory_used@@Base+0x8ce0>
  430588:	ldr	x8, [sp, #24]
  43058c:	ldr	x8, [x8, #72]
  430590:	add	x8, x8, #0x1
  430594:	ldr	x9, [sp, #24]
  430598:	ldr	x9, [x9, #88]
  43059c:	cmp	x8, x9
  4305a0:	b.ge	430600 <_obstack_memory_used@@Base+0x8ce0>  // b.tcont
  4305a4:	ldr	x8, [sp, #24]
  4305a8:	ldr	x9, [x8, #72]
  4305ac:	add	x9, x9, #0x1
  4305b0:	str	x9, [x8, #72]
  4305b4:	ldr	x8, [sp, #24]
  4305b8:	ldr	x8, [x8, #8]
  4305bc:	ldr	x9, [sp, #24]
  4305c0:	ldr	x9, [x9, #72]
  4305c4:	add	x9, x9, #0x0
  4305c8:	add	x8, x8, x9
  4305cc:	ldrb	w10, [x8]
  4305d0:	strb	w10, [sp, #14]
  4305d4:	ldrb	w10, [sp, #14]
  4305d8:	ldr	x8, [sp, #32]
  4305dc:	strb	w10, [x8]
  4305e0:	ldr	x8, [sp, #32]
  4305e4:	ldr	w10, [x8, #8]
  4305e8:	and	w10, w10, #0xffffff00
  4305ec:	mov	w11, #0x1                   	// #1
  4305f0:	orr	w10, w10, #0x1
  4305f4:	str	w10, [x8, #8]
  4305f8:	str	w11, [sp, #44]
  4305fc:	b	4307cc <_obstack_memory_used@@Base+0x8eac>
  430600:	ldrb	w8, [sp, #15]
  430604:	cmp	w8, #0x5b
  430608:	b.ne	430728 <_obstack_memory_used@@Base+0x8e08>  // b.any
  43060c:	ldr	x8, [sp, #24]
  430610:	ldr	x8, [x8, #72]
  430614:	add	x8, x8, #0x1
  430618:	ldr	x9, [sp, #24]
  43061c:	ldr	x9, [x9, #88]
  430620:	cmp	x8, x9
  430624:	b.ge	43064c <_obstack_memory_used@@Base+0x8d2c>  // b.tcont
  430628:	ldr	x8, [sp, #24]
  43062c:	ldr	x8, [x8, #8]
  430630:	ldr	x9, [sp, #24]
  430634:	ldr	x9, [x9, #72]
  430638:	add	x9, x9, #0x1
  43063c:	add	x8, x8, x9
  430640:	ldrb	w10, [x8]
  430644:	strb	w10, [sp, #13]
  430648:	b	430654 <_obstack_memory_used@@Base+0x8d34>
  43064c:	mov	w8, #0x0                   	// #0
  430650:	strb	w8, [sp, #13]
  430654:	ldrb	w8, [sp, #13]
  430658:	ldr	x9, [sp, #32]
  43065c:	strb	w8, [x9]
  430660:	mov	w8, #0x2                   	// #2
  430664:	str	w8, [sp, #8]
  430668:	ldrb	w8, [sp, #13]
  43066c:	cmp	w8, #0x2e
  430670:	str	w8, [sp, #4]
  430674:	b.eq	43069c <_obstack_memory_used@@Base+0x8d7c>  // b.none
  430678:	b	43067c <_obstack_memory_used@@Base+0x8d5c>
  43067c:	ldr	w8, [sp, #4]
  430680:	cmp	w8, #0x3a
  430684:	b.eq	4306d0 <_obstack_memory_used@@Base+0x8db0>  // b.none
  430688:	b	43068c <_obstack_memory_used@@Base+0x8d6c>
  43068c:	ldr	w8, [sp, #4]
  430690:	cmp	w8, #0x3d
  430694:	b.eq	4306b8 <_obstack_memory_used@@Base+0x8d98>  // b.none
  430698:	b	4306f4 <_obstack_memory_used@@Base+0x8dd4>
  43069c:	ldr	x8, [sp, #32]
  4306a0:	ldr	w9, [x8, #8]
  4306a4:	and	w9, w9, #0xffffff00
  4306a8:	mov	w10, #0x1a                  	// #26
  4306ac:	orr	w9, w9, w10
  4306b0:	str	w9, [x8, #8]
  4306b4:	b	43071c <_obstack_memory_used@@Base+0x8dfc>
  4306b8:	ldr	x8, [sp, #32]
  4306bc:	ldr	w9, [x8, #8]
  4306c0:	and	w9, w9, #0xffffff00
  4306c4:	orr	w9, w9, #0x1c
  4306c8:	str	w9, [x8, #8]
  4306cc:	b	43071c <_obstack_memory_used@@Base+0x8dfc>
  4306d0:	ldr	x8, [sp, #16]
  4306d4:	and	x8, x8, #0x4
  4306d8:	cbz	x8, 4306f4 <_obstack_memory_used@@Base+0x8dd4>
  4306dc:	ldr	x8, [sp, #32]
  4306e0:	ldr	w9, [x8, #8]
  4306e4:	and	w9, w9, #0xffffff00
  4306e8:	orr	w9, w9, #0x1e
  4306ec:	str	w9, [x8, #8]
  4306f0:	b	43071c <_obstack_memory_used@@Base+0x8dfc>
  4306f4:	ldr	x8, [sp, #32]
  4306f8:	ldr	w9, [x8, #8]
  4306fc:	and	w9, w9, #0xffffff00
  430700:	mov	w10, #0x1                   	// #1
  430704:	orr	w9, w9, #0x1
  430708:	str	w9, [x8, #8]
  43070c:	ldrb	w9, [sp, #15]
  430710:	ldr	x8, [sp, #32]
  430714:	strb	w9, [x8]
  430718:	str	w10, [sp, #8]
  43071c:	ldr	w8, [sp, #8]
  430720:	str	w8, [sp, #44]
  430724:	b	4307cc <_obstack_memory_used@@Base+0x8eac>
  430728:	ldrb	w8, [sp, #15]
  43072c:	cmp	w8, #0x2d
  430730:	str	w8, [sp]
  430734:	b.eq	43075c <_obstack_memory_used@@Base+0x8e3c>  // b.none
  430738:	b	43073c <_obstack_memory_used@@Base+0x8e1c>
  43073c:	ldr	w8, [sp]
  430740:	cmp	w8, #0x5d
  430744:	b.eq	430778 <_obstack_memory_used@@Base+0x8e58>  // b.none
  430748:	b	43074c <_obstack_memory_used@@Base+0x8e2c>
  43074c:	ldr	w8, [sp]
  430750:	cmp	w8, #0x5e
  430754:	b.eq	430794 <_obstack_memory_used@@Base+0x8e74>  // b.none
  430758:	b	4307b0 <_obstack_memory_used@@Base+0x8e90>
  43075c:	ldr	x8, [sp, #32]
  430760:	ldr	w9, [x8, #8]
  430764:	and	w9, w9, #0xffffff00
  430768:	mov	w10, #0x16                  	// #22
  43076c:	orr	w9, w9, w10
  430770:	str	w9, [x8, #8]
  430774:	b	4307c4 <_obstack_memory_used@@Base+0x8ea4>
  430778:	ldr	x8, [sp, #32]
  43077c:	ldr	w9, [x8, #8]
  430780:	and	w9, w9, #0xffffff00
  430784:	mov	w10, #0x15                  	// #21
  430788:	orr	w9, w9, w10
  43078c:	str	w9, [x8, #8]
  430790:	b	4307c4 <_obstack_memory_used@@Base+0x8ea4>
  430794:	ldr	x8, [sp, #32]
  430798:	ldr	w9, [x8, #8]
  43079c:	and	w9, w9, #0xffffff00
  4307a0:	mov	w10, #0x19                  	// #25
  4307a4:	orr	w9, w9, w10
  4307a8:	str	w9, [x8, #8]
  4307ac:	b	4307c4 <_obstack_memory_used@@Base+0x8ea4>
  4307b0:	ldr	x8, [sp, #32]
  4307b4:	ldr	w9, [x8, #8]
  4307b8:	and	w9, w9, #0xffffff00
  4307bc:	orr	w9, w9, #0x1
  4307c0:	str	w9, [x8, #8]
  4307c4:	mov	w8, #0x1                   	// #1
  4307c8:	str	w8, [sp, #44]
  4307cc:	ldr	w0, [sp, #44]
  4307d0:	add	sp, sp, #0x30
  4307d4:	ret
  4307d8:	sub	sp, sp, #0x10
  4307dc:	mov	x8, #0x40                  	// #64
  4307e0:	mov	x9, #0x1                   	// #1
  4307e4:	str	x0, [sp, #8]
  4307e8:	str	x1, [sp]
  4307ec:	ldr	x10, [sp]
  4307f0:	sdiv	x11, x10, x8
  4307f4:	mul	x11, x11, x8
  4307f8:	subs	x10, x10, x11
  4307fc:	lsl	x9, x9, x10
  430800:	ldr	x10, [sp, #8]
  430804:	ldr	x11, [sp]
  430808:	sdiv	x8, x11, x8
  43080c:	mov	x11, #0x8                   	// #8
  430810:	mul	x8, x11, x8
  430814:	add	x8, x10, x8
  430818:	ldr	x10, [x8]
  43081c:	orr	x9, x10, x9
  430820:	str	x9, [x8]
  430824:	add	sp, sp, #0x10
  430828:	ret
  43082c:	sub	sp, sp, #0x60
  430830:	stp	x29, x30, [sp, #80]
  430834:	add	x29, sp, #0x50
  430838:	mov	w8, #0x1                   	// #1
  43083c:	stur	x0, [x29, #-16]
  430840:	stur	x1, [x29, #-24]
  430844:	stur	x2, [x29, #-32]
  430848:	stur	w3, [x29, #-36]
  43084c:	str	x4, [sp, #32]
  430850:	str	x5, [sp, #24]
  430854:	and	w8, w6, w8
  430858:	strb	w8, [sp, #23]
  43085c:	ldur	x0, [x29, #-24]
  430860:	ldur	x9, [x29, #-24]
  430864:	ldr	x1, [x9, #72]
  430868:	bl	431a84 <_obstack_memory_used@@Base+0xa164>
  43086c:	str	w0, [sp, #16]
  430870:	ldr	w8, [sp, #16]
  430874:	cmp	w8, #0x1
  430878:	b.le	4308bc <_obstack_memory_used@@Base+0x8f9c>
  43087c:	ldur	x8, [x29, #-16]
  430880:	mov	w9, #0x1                   	// #1
  430884:	str	w9, [x8]
  430888:	ldur	x0, [x29, #-24]
  43088c:	ldur	x8, [x29, #-24]
  430890:	ldr	x1, [x8, #72]
  430894:	bl	42dd70 <_obstack_memory_used@@Base+0x6450>
  430898:	ldur	x8, [x29, #-16]
  43089c:	str	w0, [x8, #8]
  4308a0:	ldrsw	x8, [sp, #16]
  4308a4:	ldur	x10, [x29, #-24]
  4308a8:	ldr	x11, [x10, #72]
  4308ac:	add	x8, x11, x8
  4308b0:	str	x8, [x10, #72]
  4308b4:	stur	wzr, [x29, #-4]
  4308b8:	b	430998 <_obstack_memory_used@@Base+0x9078>
  4308bc:	ldursw	x8, [x29, #-36]
  4308c0:	ldur	x9, [x29, #-24]
  4308c4:	ldr	x10, [x9, #72]
  4308c8:	add	x8, x10, x8
  4308cc:	str	x8, [x9, #72]
  4308d0:	ldur	x8, [x29, #-32]
  4308d4:	ldr	w11, [x8, #8]
  4308d8:	and	w11, w11, #0xff
  4308dc:	cmp	w11, #0x1a
  4308e0:	b.eq	43090c <_obstack_memory_used@@Base+0x8fec>  // b.none
  4308e4:	ldur	x8, [x29, #-32]
  4308e8:	ldr	w9, [x8, #8]
  4308ec:	and	w9, w9, #0xff
  4308f0:	cmp	w9, #0x1e
  4308f4:	b.eq	43090c <_obstack_memory_used@@Base+0x8fec>  // b.none
  4308f8:	ldur	x8, [x29, #-32]
  4308fc:	ldr	w9, [x8, #8]
  430900:	and	w9, w9, #0xff
  430904:	cmp	w9, #0x1c
  430908:	b.ne	430924 <_obstack_memory_used@@Base+0x9004>  // b.any
  43090c:	ldur	x0, [x29, #-16]
  430910:	ldur	x1, [x29, #-24]
  430914:	ldur	x2, [x29, #-32]
  430918:	bl	431b1c <_obstack_memory_used@@Base+0xa1fc>
  43091c:	stur	w0, [x29, #-4]
  430920:	b	430998 <_obstack_memory_used@@Base+0x9078>
  430924:	ldur	x8, [x29, #-32]
  430928:	ldr	w9, [x8, #8]
  43092c:	and	w9, w9, #0xff
  430930:	cmp	w9, #0x16
  430934:	cset	w9, eq  // eq = none
  430938:	and	w9, w9, #0x1
  43093c:	mov	w0, w9
  430940:	sxtw	x8, w0
  430944:	cbz	x8, 43097c <_obstack_memory_used@@Base+0x905c>
  430948:	ldrb	w8, [sp, #23]
  43094c:	tbnz	w8, #0, 43097c <_obstack_memory_used@@Base+0x905c>
  430950:	ldur	x1, [x29, #-24]
  430954:	ldr	x2, [sp, #24]
  430958:	mov	x0, sp
  43095c:	bl	430498 <_obstack_memory_used@@Base+0x8b78>
  430960:	ldr	w8, [sp, #8]
  430964:	and	w8, w8, #0xff
  430968:	cmp	w8, #0x15
  43096c:	b.eq	43097c <_obstack_memory_used@@Base+0x905c>  // b.none
  430970:	mov	w8, #0xb                   	// #11
  430974:	stur	w8, [x29, #-4]
  430978:	b	430998 <_obstack_memory_used@@Base+0x9078>
  43097c:	ldur	x8, [x29, #-16]
  430980:	str	wzr, [x8]
  430984:	ldur	x8, [x29, #-32]
  430988:	ldrb	w9, [x8]
  43098c:	ldur	x8, [x29, #-16]
  430990:	strb	w9, [x8, #8]
  430994:	stur	wzr, [x29, #-4]
  430998:	ldur	w0, [x29, #-4]
  43099c:	ldp	x29, x30, [sp, #80]
  4309a0:	add	sp, sp, #0x60
  4309a4:	ret
  4309a8:	sub	sp, sp, #0xb0
  4309ac:	stp	x29, x30, [sp, #160]
  4309b0:	add	x29, sp, #0xa0
  4309b4:	stur	x0, [x29, #-16]
  4309b8:	stur	x1, [x29, #-24]
  4309bc:	stur	x2, [x29, #-32]
  4309c0:	stur	x3, [x29, #-40]
  4309c4:	stur	x4, [x29, #-48]
  4309c8:	stur	x5, [x29, #-56]
  4309cc:	ldur	x8, [x29, #-48]
  4309d0:	ldr	w9, [x8]
  4309d4:	mov	w10, #0x1                   	// #1
  4309d8:	cmp	w9, #0x2
  4309dc:	str	w10, [sp, #52]
  4309e0:	b.eq	430a28 <_obstack_memory_used@@Base+0x9108>  // b.none
  4309e4:	ldur	x8, [x29, #-48]
  4309e8:	ldr	w9, [x8]
  4309ec:	mov	w10, #0x1                   	// #1
  4309f0:	cmp	w9, #0x4
  4309f4:	str	w10, [sp, #52]
  4309f8:	b.eq	430a28 <_obstack_memory_used@@Base+0x9108>  // b.none
  4309fc:	ldur	x8, [x29, #-56]
  430a00:	ldr	w9, [x8]
  430a04:	mov	w10, #0x1                   	// #1
  430a08:	cmp	w9, #0x2
  430a0c:	str	w10, [sp, #52]
  430a10:	b.eq	430a28 <_obstack_memory_used@@Base+0x9108>  // b.none
  430a14:	ldur	x8, [x29, #-56]
  430a18:	ldr	w9, [x8]
  430a1c:	cmp	w9, #0x4
  430a20:	cset	w9, eq  // eq = none
  430a24:	str	w9, [sp, #52]
  430a28:	ldr	w8, [sp, #52]
  430a2c:	and	w8, w8, #0x1
  430a30:	mov	w0, w8
  430a34:	sxtw	x9, w0
  430a38:	cbz	x9, 430a48 <_obstack_memory_used@@Base+0x9128>
  430a3c:	mov	w8, #0xb                   	// #11
  430a40:	stur	w8, [x29, #-4]
  430a44:	b	430e04 <_obstack_memory_used@@Base+0x94e4>
  430a48:	ldur	x8, [x29, #-48]
  430a4c:	ldr	w9, [x8]
  430a50:	cmp	w9, #0x3
  430a54:	b.ne	430a74 <_obstack_memory_used@@Base+0x9154>  // b.any
  430a58:	ldur	x8, [x29, #-48]
  430a5c:	ldr	x0, [x8, #8]
  430a60:	bl	4022f0 <strlen@plt>
  430a64:	mov	w9, #0x1                   	// #1
  430a68:	cmp	x0, #0x1
  430a6c:	str	w9, [sp, #48]
  430a70:	b.hi	430aac <_obstack_memory_used@@Base+0x918c>  // b.pmore
  430a74:	ldur	x8, [x29, #-56]
  430a78:	ldr	w9, [x8]
  430a7c:	mov	w10, #0x0                   	// #0
  430a80:	cmp	w9, #0x3
  430a84:	str	w10, [sp, #44]
  430a88:	b.ne	430aa4 <_obstack_memory_used@@Base+0x9184>  // b.any
  430a8c:	ldur	x8, [x29, #-56]
  430a90:	ldr	x0, [x8, #8]
  430a94:	bl	4022f0 <strlen@plt>
  430a98:	cmp	x0, #0x1
  430a9c:	cset	w9, hi  // hi = pmore
  430aa0:	str	w9, [sp, #44]
  430aa4:	ldr	w8, [sp, #44]
  430aa8:	str	w8, [sp, #48]
  430aac:	ldr	w8, [sp, #48]
  430ab0:	and	w8, w8, #0x1
  430ab4:	mov	w0, w8
  430ab8:	sxtw	x9, w0
  430abc:	cbz	x9, 430acc <_obstack_memory_used@@Base+0x91ac>
  430ac0:	mov	w8, #0x3                   	// #3
  430ac4:	stur	w8, [x29, #-4]
  430ac8:	b	430e04 <_obstack_memory_used@@Base+0x94e4>
  430acc:	ldur	x8, [x29, #-48]
  430ad0:	ldr	w9, [x8]
  430ad4:	cbnz	w9, 430ae8 <_obstack_memory_used@@Base+0x91c8>
  430ad8:	ldur	x8, [x29, #-48]
  430adc:	ldrb	w9, [x8, #8]
  430ae0:	str	w9, [sp, #40]
  430ae4:	b	430b1c <_obstack_memory_used@@Base+0x91fc>
  430ae8:	ldur	x8, [x29, #-48]
  430aec:	ldr	w9, [x8]
  430af0:	cmp	w9, #0x3
  430af4:	b.ne	430b0c <_obstack_memory_used@@Base+0x91ec>  // b.any
  430af8:	ldur	x8, [x29, #-48]
  430afc:	ldr	x8, [x8, #8]
  430b00:	ldrb	w9, [x8]
  430b04:	str	w9, [sp, #36]
  430b08:	b	430b14 <_obstack_memory_used@@Base+0x91f4>
  430b0c:	mov	w8, wzr
  430b10:	str	w8, [sp, #36]
  430b14:	ldr	w8, [sp, #36]
  430b18:	str	w8, [sp, #40]
  430b1c:	ldr	w8, [sp, #40]
  430b20:	stur	w8, [x29, #-60]
  430b24:	ldur	x9, [x29, #-56]
  430b28:	ldr	w8, [x9]
  430b2c:	cbnz	w8, 430b40 <_obstack_memory_used@@Base+0x9220>
  430b30:	ldur	x8, [x29, #-56]
  430b34:	ldrb	w9, [x8, #8]
  430b38:	str	w9, [sp, #32]
  430b3c:	b	430b74 <_obstack_memory_used@@Base+0x9254>
  430b40:	ldur	x8, [x29, #-56]
  430b44:	ldr	w9, [x8]
  430b48:	cmp	w9, #0x3
  430b4c:	b.ne	430b64 <_obstack_memory_used@@Base+0x9244>  // b.any
  430b50:	ldur	x8, [x29, #-56]
  430b54:	ldr	x8, [x8, #8]
  430b58:	ldrb	w9, [x8]
  430b5c:	str	w9, [sp, #28]
  430b60:	b	430b6c <_obstack_memory_used@@Base+0x924c>
  430b64:	mov	w8, wzr
  430b68:	str	w8, [sp, #28]
  430b6c:	ldr	w8, [sp, #28]
  430b70:	str	w8, [sp, #32]
  430b74:	ldr	w8, [sp, #32]
  430b78:	stur	w8, [x29, #-64]
  430b7c:	ldur	x9, [x29, #-48]
  430b80:	ldr	w8, [x9]
  430b84:	cbz	w8, 430b98 <_obstack_memory_used@@Base+0x9278>
  430b88:	ldur	x8, [x29, #-48]
  430b8c:	ldr	w9, [x8]
  430b90:	cmp	w9, #0x3
  430b94:	b.ne	430bb0 <_obstack_memory_used@@Base+0x9290>  // b.any
  430b98:	ldur	w8, [x29, #-60]
  430b9c:	ldur	x1, [x29, #-32]
  430ba0:	mov	w0, w8
  430ba4:	bl	431e90 <_obstack_memory_used@@Base+0xa570>
  430ba8:	str	w0, [sp, #24]
  430bac:	b	430bbc <_obstack_memory_used@@Base+0x929c>
  430bb0:	ldur	x8, [x29, #-48]
  430bb4:	ldr	w9, [x8, #8]
  430bb8:	str	w9, [sp, #24]
  430bbc:	ldr	w8, [sp, #24]
  430bc0:	stur	w8, [x29, #-72]
  430bc4:	ldur	x9, [x29, #-56]
  430bc8:	ldr	w8, [x9]
  430bcc:	cbz	w8, 430be0 <_obstack_memory_used@@Base+0x92c0>
  430bd0:	ldur	x8, [x29, #-56]
  430bd4:	ldr	w9, [x8]
  430bd8:	cmp	w9, #0x3
  430bdc:	b.ne	430bf8 <_obstack_memory_used@@Base+0x92d8>  // b.any
  430be0:	ldur	w8, [x29, #-64]
  430be4:	ldur	x1, [x29, #-32]
  430be8:	mov	w0, w8
  430bec:	bl	431e90 <_obstack_memory_used@@Base+0xa570>
  430bf0:	str	w0, [sp, #20]
  430bf4:	b	430c04 <_obstack_memory_used@@Base+0x92e4>
  430bf8:	ldur	x8, [x29, #-56]
  430bfc:	ldr	w9, [x8, #8]
  430c00:	str	w9, [sp, #20]
  430c04:	ldr	w8, [sp, #20]
  430c08:	stur	w8, [x29, #-76]
  430c0c:	ldur	w8, [x29, #-72]
  430c10:	mov	w9, #0xffffffff            	// #-1
  430c14:	cmp	w8, w9
  430c18:	b.eq	430c2c <_obstack_memory_used@@Base+0x930c>  // b.none
  430c1c:	ldur	w8, [x29, #-76]
  430c20:	mov	w9, #0xffffffff            	// #-1
  430c24:	cmp	w8, w9
  430c28:	b.ne	430c38 <_obstack_memory_used@@Base+0x9318>  // b.any
  430c2c:	mov	w8, #0x3                   	// #3
  430c30:	stur	w8, [x29, #-4]
  430c34:	b	430e04 <_obstack_memory_used@@Base+0x94e4>
  430c38:	ldur	x8, [x29, #-16]
  430c3c:	and	x8, x8, #0x10000
  430c40:	mov	w9, #0x0                   	// #0
  430c44:	str	w9, [sp, #16]
  430c48:	cbz	x8, 430c60 <_obstack_memory_used@@Base+0x9340>
  430c4c:	ldur	w8, [x29, #-72]
  430c50:	ldur	w9, [x29, #-76]
  430c54:	cmp	w8, w9
  430c58:	cset	w8, hi  // hi = pmore
  430c5c:	str	w8, [sp, #16]
  430c60:	ldr	w8, [sp, #16]
  430c64:	and	w8, w8, #0x1
  430c68:	mov	w0, w8
  430c6c:	sxtw	x9, w0
  430c70:	cbz	x9, 430c80 <_obstack_memory_used@@Base+0x9360>
  430c74:	mov	w8, #0xb                   	// #11
  430c78:	stur	w8, [x29, #-4]
  430c7c:	b	430e04 <_obstack_memory_used@@Base+0x94e4>
  430c80:	ldur	x8, [x29, #-32]
  430c84:	cbz	x8, 430db0 <_obstack_memory_used@@Base+0x9490>
  430c88:	ldur	x8, [x29, #-40]
  430c8c:	ldr	x8, [x8]
  430c90:	ldur	x9, [x29, #-32]
  430c94:	ldr	x9, [x9, #64]
  430c98:	cmp	x8, x9
  430c9c:	cset	w10, eq  // eq = none
  430ca0:	and	w10, w10, #0x1
  430ca4:	mov	w0, w10
  430ca8:	sxtw	x8, w0
  430cac:	cbz	x8, 430d78 <_obstack_memory_used@@Base+0x9458>
  430cb0:	ldur	x8, [x29, #-32]
  430cb4:	ldr	x8, [x8, #64]
  430cb8:	mov	x9, #0x2                   	// #2
  430cbc:	mul	x8, x9, x8
  430cc0:	add	x8, x8, #0x1
  430cc4:	str	x8, [sp, #56]
  430cc8:	ldur	x8, [x29, #-32]
  430ccc:	ldr	x0, [x8, #8]
  430cd0:	ldr	x8, [sp, #56]
  430cd4:	mov	x9, #0x4                   	// #4
  430cd8:	mul	x1, x8, x9
  430cdc:	str	x9, [sp, #8]
  430ce0:	bl	402570 <realloc@plt>
  430ce4:	str	x0, [sp, #72]
  430ce8:	ldur	x8, [x29, #-32]
  430cec:	ldr	x0, [x8, #16]
  430cf0:	ldr	x8, [sp, #56]
  430cf4:	ldr	x9, [sp, #8]
  430cf8:	mul	x1, x8, x9
  430cfc:	bl	402570 <realloc@plt>
  430d00:	str	x0, [sp, #64]
  430d04:	ldr	x8, [sp, #72]
  430d08:	mov	w10, #0x1                   	// #1
  430d0c:	str	w10, [sp, #4]
  430d10:	cbz	x8, 430d24 <_obstack_memory_used@@Base+0x9404>
  430d14:	ldr	x8, [sp, #64]
  430d18:	cmp	x8, #0x0
  430d1c:	cset	w9, eq  // eq = none
  430d20:	str	w9, [sp, #4]
  430d24:	ldr	w8, [sp, #4]
  430d28:	and	w8, w8, #0x1
  430d2c:	mov	w0, w8
  430d30:	sxtw	x9, w0
  430d34:	cbz	x9, 430d54 <_obstack_memory_used@@Base+0x9434>
  430d38:	ldr	x0, [sp, #72]
  430d3c:	bl	4026c0 <free@plt>
  430d40:	ldr	x0, [sp, #64]
  430d44:	bl	4026c0 <free@plt>
  430d48:	mov	w8, #0xc                   	// #12
  430d4c:	stur	w8, [x29, #-4]
  430d50:	b	430e04 <_obstack_memory_used@@Base+0x94e4>
  430d54:	ldr	x8, [sp, #72]
  430d58:	ldur	x9, [x29, #-32]
  430d5c:	str	x8, [x9, #8]
  430d60:	ldr	x8, [sp, #64]
  430d64:	ldur	x9, [x29, #-32]
  430d68:	str	x8, [x9, #16]
  430d6c:	ldr	x8, [sp, #56]
  430d70:	ldur	x9, [x29, #-40]
  430d74:	str	x8, [x9]
  430d78:	ldur	w8, [x29, #-72]
  430d7c:	ldur	x9, [x29, #-32]
  430d80:	ldr	x9, [x9, #8]
  430d84:	ldur	x10, [x29, #-32]
  430d88:	ldr	x10, [x10, #64]
  430d8c:	str	w8, [x9, x10, lsl #2]
  430d90:	ldur	w8, [x29, #-76]
  430d94:	ldur	x9, [x29, #-32]
  430d98:	ldr	x9, [x9, #16]
  430d9c:	ldur	x10, [x29, #-32]
  430da0:	ldr	x11, [x10, #64]
  430da4:	add	x12, x11, #0x1
  430da8:	str	x12, [x10, #64]
  430dac:	str	w8, [x9, x11, lsl #2]
  430db0:	stur	wzr, [x29, #-68]
  430db4:	ldur	w8, [x29, #-68]
  430db8:	cmp	w8, #0x100
  430dbc:	b.cs	430e00 <_obstack_memory_used@@Base+0x94e0>  // b.hs, b.nlast
  430dc0:	ldur	w8, [x29, #-72]
  430dc4:	ldur	w9, [x29, #-68]
  430dc8:	cmp	w8, w9
  430dcc:	b.hi	430df0 <_obstack_memory_used@@Base+0x94d0>  // b.pmore
  430dd0:	ldur	w8, [x29, #-68]
  430dd4:	ldur	w9, [x29, #-76]
  430dd8:	cmp	w8, w9
  430ddc:	b.hi	430df0 <_obstack_memory_used@@Base+0x94d0>  // b.pmore
  430de0:	ldur	x0, [x29, #-24]
  430de4:	ldur	w8, [x29, #-68]
  430de8:	mov	w1, w8
  430dec:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  430df0:	ldur	w8, [x29, #-68]
  430df4:	add	w8, w8, #0x1
  430df8:	stur	w8, [x29, #-68]
  430dfc:	b	430db4 <_obstack_memory_used@@Base+0x9494>
  430e00:	stur	wzr, [x29, #-4]
  430e04:	ldur	w0, [x29, #-4]
  430e08:	ldp	x29, x30, [sp, #160]
  430e0c:	add	sp, sp, #0xb0
  430e10:	ret
  430e14:	sub	sp, sp, #0x40
  430e18:	stp	x29, x30, [sp, #48]
  430e1c:	add	x29, sp, #0x30
  430e20:	stur	x0, [x29, #-16]
  430e24:	str	x1, [sp, #24]
  430e28:	str	x2, [sp, #16]
  430e2c:	str	x3, [sp, #8]
  430e30:	ldr	x0, [sp, #8]
  430e34:	bl	4022f0 <strlen@plt>
  430e38:	cmp	x0, #0x1
  430e3c:	cset	w8, ne  // ne = any
  430e40:	and	w8, w8, #0x1
  430e44:	mov	w0, w8
  430e48:	sxtw	x9, w0
  430e4c:	cbz	x9, 430e5c <_obstack_memory_used@@Base+0x953c>
  430e50:	mov	w8, #0x3                   	// #3
  430e54:	stur	w8, [x29, #-4]
  430e58:	b	430e74 <_obstack_memory_used@@Base+0x9554>
  430e5c:	ldur	x0, [x29, #-16]
  430e60:	ldr	x8, [sp, #8]
  430e64:	ldrb	w9, [x8]
  430e68:	mov	w1, w9
  430e6c:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  430e70:	stur	wzr, [x29, #-4]
  430e74:	ldur	w0, [x29, #-4]
  430e78:	ldp	x29, x30, [sp, #48]
  430e7c:	add	sp, sp, #0x40
  430e80:	ret
  430e84:	sub	sp, sp, #0x40
  430e88:	stp	x29, x30, [sp, #48]
  430e8c:	add	x29, sp, #0x30
  430e90:	stur	x0, [x29, #-16]
  430e94:	str	x1, [sp, #24]
  430e98:	str	x2, [sp, #16]
  430e9c:	str	x3, [sp, #8]
  430ea0:	ldr	x0, [sp, #8]
  430ea4:	bl	4022f0 <strlen@plt>
  430ea8:	str	x0, [sp]
  430eac:	ldr	x8, [sp]
  430eb0:	cmp	x8, #0x1
  430eb4:	cset	w9, ne  // ne = any
  430eb8:	and	w9, w9, #0x1
  430ebc:	mov	w0, w9
  430ec0:	sxtw	x8, w0
  430ec4:	cbz	x8, 430ed4 <_obstack_memory_used@@Base+0x95b4>
  430ec8:	mov	w8, #0x3                   	// #3
  430ecc:	stur	w8, [x29, #-4]
  430ed0:	b	430eec <_obstack_memory_used@@Base+0x95cc>
  430ed4:	ldur	x0, [x29, #-16]
  430ed8:	ldr	x8, [sp, #8]
  430edc:	ldrb	w9, [x8]
  430ee0:	mov	w1, w9
  430ee4:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  430ee8:	stur	wzr, [x29, #-4]
  430eec:	ldur	w0, [x29, #-4]
  430ef0:	ldp	x29, x30, [sp, #48]
  430ef4:	add	sp, sp, #0x40
  430ef8:	ret
  430efc:	sub	sp, sp, #0x70
  430f00:	stp	x29, x30, [sp, #96]
  430f04:	add	x29, sp, #0x60
  430f08:	stur	x0, [x29, #-16]
  430f0c:	stur	x1, [x29, #-24]
  430f10:	stur	x2, [x29, #-32]
  430f14:	stur	x3, [x29, #-40]
  430f18:	str	x4, [sp, #48]
  430f1c:	str	x5, [sp, #40]
  430f20:	ldr	x8, [sp, #48]
  430f24:	str	x8, [sp, #24]
  430f28:	ldr	x8, [sp, #40]
  430f2c:	and	x8, x8, #0x400000
  430f30:	cbz	x8, 430f68 <_obstack_memory_used@@Base+0x9648>
  430f34:	ldr	x0, [sp, #24]
  430f38:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  430f3c:	add	x1, x1, #0x857
  430f40:	bl	4026a0 <strcmp@plt>
  430f44:	cbz	w0, 430f5c <_obstack_memory_used@@Base+0x963c>
  430f48:	ldr	x0, [sp, #24]
  430f4c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  430f50:	add	x1, x1, #0x85d
  430f54:	bl	4026a0 <strcmp@plt>
  430f58:	cbnz	w0, 430f68 <_obstack_memory_used@@Base+0x9648>
  430f5c:	adrp	x8, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  430f60:	add	x8, x8, #0x863
  430f64:	str	x8, [sp, #24]
  430f68:	ldur	x8, [x29, #-40]
  430f6c:	ldr	x8, [x8]
  430f70:	ldur	x9, [x29, #-32]
  430f74:	ldr	x9, [x9, #72]
  430f78:	cmp	x8, x9
  430f7c:	cset	w10, eq  // eq = none
  430f80:	and	w10, w10, #0x1
  430f84:	mov	w0, w10
  430f88:	sxtw	x8, w0
  430f8c:	cbz	x8, 431004 <_obstack_memory_used@@Base+0x96e4>
  430f90:	ldur	x8, [x29, #-32]
  430f94:	ldr	x8, [x8, #72]
  430f98:	mov	x9, #0x2                   	// #2
  430f9c:	mul	x8, x9, x8
  430fa0:	add	x8, x8, #0x1
  430fa4:	str	x8, [sp, #16]
  430fa8:	ldur	x8, [x29, #-32]
  430fac:	ldr	x0, [x8, #24]
  430fb0:	ldr	x8, [sp, #16]
  430fb4:	mov	x9, #0x8                   	// #8
  430fb8:	mul	x1, x8, x9
  430fbc:	bl	402570 <realloc@plt>
  430fc0:	str	x0, [sp, #8]
  430fc4:	ldr	x8, [sp, #8]
  430fc8:	cmp	x8, #0x0
  430fcc:	cset	w10, eq  // eq = none
  430fd0:	and	w10, w10, #0x1
  430fd4:	mov	w0, w10
  430fd8:	sxtw	x8, w0
  430fdc:	cbz	x8, 430fec <_obstack_memory_used@@Base+0x96cc>
  430fe0:	mov	w8, #0xc                   	// #12
  430fe4:	stur	w8, [x29, #-4]
  430fe8:	b	4319c8 <_obstack_memory_used@@Base+0xa0a8>
  430fec:	ldr	x8, [sp, #8]
  430ff0:	ldur	x9, [x29, #-32]
  430ff4:	str	x8, [x9, #24]
  430ff8:	ldr	x8, [sp, #16]
  430ffc:	ldur	x9, [x29, #-40]
  431000:	str	x8, [x9]
  431004:	ldr	x0, [sp, #24]
  431008:	bl	402360 <wctype@plt>
  43100c:	ldur	x8, [x29, #-32]
  431010:	ldr	x8, [x8, #24]
  431014:	ldur	x9, [x29, #-32]
  431018:	ldr	x10, [x9, #72]
  43101c:	add	x11, x10, #0x1
  431020:	str	x11, [x9, #72]
  431024:	str	x0, [x8, x10, lsl #3]
  431028:	ldr	x0, [sp, #24]
  43102c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  431030:	add	x1, x1, #0x8d6
  431034:	bl	4026a0 <strcmp@plt>
  431038:	cbnz	w0, 4310f4 <_obstack_memory_used@@Base+0x97d4>
  43103c:	ldur	x8, [x29, #-16]
  431040:	cmp	x8, #0x0
  431044:	cset	w9, ne  // ne = any
  431048:	and	w9, w9, #0x1
  43104c:	mov	w0, w9
  431050:	sxtw	x8, w0
  431054:	cbz	x8, 4310ac <_obstack_memory_used@@Base+0x978c>
  431058:	str	wzr, [sp, #36]
  43105c:	ldr	w8, [sp, #36]
  431060:	cmp	w8, #0x100
  431064:	b.ge	4310a8 <_obstack_memory_used@@Base+0x9788>  // b.tcont
  431068:	bl	4026b0 <__ctype_b_loc@plt>
  43106c:	ldr	x8, [x0]
  431070:	ldrsw	x9, [sp, #36]
  431074:	ldrh	w10, [x8, x9, lsl #1]
  431078:	and	w10, w10, #0x8
  43107c:	cbz	w10, 431098 <_obstack_memory_used@@Base+0x9778>
  431080:	ldur	x0, [x29, #-24]
  431084:	ldur	x8, [x29, #-16]
  431088:	ldrsw	x9, [sp, #36]
  43108c:	ldrb	w10, [x8, x9]
  431090:	mov	w1, w10
  431094:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431098:	ldr	w8, [sp, #36]
  43109c:	add	w8, w8, #0x1
  4310a0:	str	w8, [sp, #36]
  4310a4:	b	43105c <_obstack_memory_used@@Base+0x973c>
  4310a8:	b	4310f0 <_obstack_memory_used@@Base+0x97d0>
  4310ac:	str	wzr, [sp, #36]
  4310b0:	ldr	w8, [sp, #36]
  4310b4:	cmp	w8, #0x100
  4310b8:	b.ge	4310f0 <_obstack_memory_used@@Base+0x97d0>  // b.tcont
  4310bc:	bl	4026b0 <__ctype_b_loc@plt>
  4310c0:	ldr	x8, [x0]
  4310c4:	ldrsw	x9, [sp, #36]
  4310c8:	ldrh	w10, [x8, x9, lsl #1]
  4310cc:	and	w10, w10, #0x8
  4310d0:	cbz	w10, 4310e0 <_obstack_memory_used@@Base+0x97c0>
  4310d4:	ldur	x0, [x29, #-24]
  4310d8:	ldrsw	x1, [sp, #36]
  4310dc:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4310e0:	ldr	w8, [sp, #36]
  4310e4:	add	w8, w8, #0x1
  4310e8:	str	w8, [sp, #36]
  4310ec:	b	4310b0 <_obstack_memory_used@@Base+0x9790>
  4310f0:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  4310f4:	ldr	x0, [sp, #24]
  4310f8:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4310fc:	add	x1, x1, #0x8e8
  431100:	bl	4026a0 <strcmp@plt>
  431104:	cbnz	w0, 4311c0 <_obstack_memory_used@@Base+0x98a0>
  431108:	ldur	x8, [x29, #-16]
  43110c:	cmp	x8, #0x0
  431110:	cset	w9, ne  // ne = any
  431114:	and	w9, w9, #0x1
  431118:	mov	w0, w9
  43111c:	sxtw	x8, w0
  431120:	cbz	x8, 431178 <_obstack_memory_used@@Base+0x9858>
  431124:	str	wzr, [sp, #36]
  431128:	ldr	w8, [sp, #36]
  43112c:	cmp	w8, #0x100
  431130:	b.ge	431174 <_obstack_memory_used@@Base+0x9854>  // b.tcont
  431134:	bl	4026b0 <__ctype_b_loc@plt>
  431138:	ldr	x8, [x0]
  43113c:	ldrsw	x9, [sp, #36]
  431140:	ldrh	w10, [x8, x9, lsl #1]
  431144:	and	w10, w10, #0x2
  431148:	cbz	w10, 431164 <_obstack_memory_used@@Base+0x9844>
  43114c:	ldur	x0, [x29, #-24]
  431150:	ldur	x8, [x29, #-16]
  431154:	ldrsw	x9, [sp, #36]
  431158:	ldrb	w10, [x8, x9]
  43115c:	mov	w1, w10
  431160:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431164:	ldr	w8, [sp, #36]
  431168:	add	w8, w8, #0x1
  43116c:	str	w8, [sp, #36]
  431170:	b	431128 <_obstack_memory_used@@Base+0x9808>
  431174:	b	4311bc <_obstack_memory_used@@Base+0x989c>
  431178:	str	wzr, [sp, #36]
  43117c:	ldr	w8, [sp, #36]
  431180:	cmp	w8, #0x100
  431184:	b.ge	4311bc <_obstack_memory_used@@Base+0x989c>  // b.tcont
  431188:	bl	4026b0 <__ctype_b_loc@plt>
  43118c:	ldr	x8, [x0]
  431190:	ldrsw	x9, [sp, #36]
  431194:	ldrh	w10, [x8, x9, lsl #1]
  431198:	and	w10, w10, #0x2
  43119c:	cbz	w10, 4311ac <_obstack_memory_used@@Base+0x988c>
  4311a0:	ldur	x0, [x29, #-24]
  4311a4:	ldrsw	x1, [sp, #36]
  4311a8:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4311ac:	ldr	w8, [sp, #36]
  4311b0:	add	w8, w8, #0x1
  4311b4:	str	w8, [sp, #36]
  4311b8:	b	43117c <_obstack_memory_used@@Base+0x985c>
  4311bc:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  4311c0:	ldr	x0, [sp, #24]
  4311c4:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4311c8:	add	x1, x1, #0x85d
  4311cc:	bl	4026a0 <strcmp@plt>
  4311d0:	cbnz	w0, 43128c <_obstack_memory_used@@Base+0x996c>
  4311d4:	ldur	x8, [x29, #-16]
  4311d8:	cmp	x8, #0x0
  4311dc:	cset	w9, ne  // ne = any
  4311e0:	and	w9, w9, #0x1
  4311e4:	mov	w0, w9
  4311e8:	sxtw	x8, w0
  4311ec:	cbz	x8, 431244 <_obstack_memory_used@@Base+0x9924>
  4311f0:	str	wzr, [sp, #36]
  4311f4:	ldr	w8, [sp, #36]
  4311f8:	cmp	w8, #0x100
  4311fc:	b.ge	431240 <_obstack_memory_used@@Base+0x9920>  // b.tcont
  431200:	bl	4026b0 <__ctype_b_loc@plt>
  431204:	ldr	x8, [x0]
  431208:	ldrsw	x9, [sp, #36]
  43120c:	ldrh	w10, [x8, x9, lsl #1]
  431210:	and	w10, w10, #0x200
  431214:	cbz	w10, 431230 <_obstack_memory_used@@Base+0x9910>
  431218:	ldur	x0, [x29, #-24]
  43121c:	ldur	x8, [x29, #-16]
  431220:	ldrsw	x9, [sp, #36]
  431224:	ldrb	w10, [x8, x9]
  431228:	mov	w1, w10
  43122c:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431230:	ldr	w8, [sp, #36]
  431234:	add	w8, w8, #0x1
  431238:	str	w8, [sp, #36]
  43123c:	b	4311f4 <_obstack_memory_used@@Base+0x98d4>
  431240:	b	431288 <_obstack_memory_used@@Base+0x9968>
  431244:	str	wzr, [sp, #36]
  431248:	ldr	w8, [sp, #36]
  43124c:	cmp	w8, #0x100
  431250:	b.ge	431288 <_obstack_memory_used@@Base+0x9968>  // b.tcont
  431254:	bl	4026b0 <__ctype_b_loc@plt>
  431258:	ldr	x8, [x0]
  43125c:	ldrsw	x9, [sp, #36]
  431260:	ldrh	w10, [x8, x9, lsl #1]
  431264:	and	w10, w10, #0x200
  431268:	cbz	w10, 431278 <_obstack_memory_used@@Base+0x9958>
  43126c:	ldur	x0, [x29, #-24]
  431270:	ldrsw	x1, [sp, #36]
  431274:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431278:	ldr	w8, [sp, #36]
  43127c:	add	w8, w8, #0x1
  431280:	str	w8, [sp, #36]
  431284:	b	431248 <_obstack_memory_used@@Base+0x9928>
  431288:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  43128c:	ldr	x0, [sp, #24]
  431290:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  431294:	add	x1, x1, #0x8ca
  431298:	bl	4026a0 <strcmp@plt>
  43129c:	cbnz	w0, 431358 <_obstack_memory_used@@Base+0x9a38>
  4312a0:	ldur	x8, [x29, #-16]
  4312a4:	cmp	x8, #0x0
  4312a8:	cset	w9, ne  // ne = any
  4312ac:	and	w9, w9, #0x1
  4312b0:	mov	w0, w9
  4312b4:	sxtw	x8, w0
  4312b8:	cbz	x8, 431310 <_obstack_memory_used@@Base+0x99f0>
  4312bc:	str	wzr, [sp, #36]
  4312c0:	ldr	w8, [sp, #36]
  4312c4:	cmp	w8, #0x100
  4312c8:	b.ge	43130c <_obstack_memory_used@@Base+0x99ec>  // b.tcont
  4312cc:	bl	4026b0 <__ctype_b_loc@plt>
  4312d0:	ldr	x8, [x0]
  4312d4:	ldrsw	x9, [sp, #36]
  4312d8:	ldrh	w10, [x8, x9, lsl #1]
  4312dc:	and	w10, w10, #0x2000
  4312e0:	cbz	w10, 4312fc <_obstack_memory_used@@Base+0x99dc>
  4312e4:	ldur	x0, [x29, #-24]
  4312e8:	ldur	x8, [x29, #-16]
  4312ec:	ldrsw	x9, [sp, #36]
  4312f0:	ldrb	w10, [x8, x9]
  4312f4:	mov	w1, w10
  4312f8:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4312fc:	ldr	w8, [sp, #36]
  431300:	add	w8, w8, #0x1
  431304:	str	w8, [sp, #36]
  431308:	b	4312c0 <_obstack_memory_used@@Base+0x99a0>
  43130c:	b	431354 <_obstack_memory_used@@Base+0x9a34>
  431310:	str	wzr, [sp, #36]
  431314:	ldr	w8, [sp, #36]
  431318:	cmp	w8, #0x100
  43131c:	b.ge	431354 <_obstack_memory_used@@Base+0x9a34>  // b.tcont
  431320:	bl	4026b0 <__ctype_b_loc@plt>
  431324:	ldr	x8, [x0]
  431328:	ldrsw	x9, [sp, #36]
  43132c:	ldrh	w10, [x8, x9, lsl #1]
  431330:	and	w10, w10, #0x2000
  431334:	cbz	w10, 431344 <_obstack_memory_used@@Base+0x9a24>
  431338:	ldur	x0, [x29, #-24]
  43133c:	ldrsw	x1, [sp, #36]
  431340:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431344:	ldr	w8, [sp, #36]
  431348:	add	w8, w8, #0x1
  43134c:	str	w8, [sp, #36]
  431350:	b	431314 <_obstack_memory_used@@Base+0x99f4>
  431354:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  431358:	ldr	x0, [sp, #24]
  43135c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  431360:	add	x1, x1, #0x863
  431364:	bl	4026a0 <strcmp@plt>
  431368:	cbnz	w0, 431424 <_obstack_memory_used@@Base+0x9b04>
  43136c:	ldur	x8, [x29, #-16]
  431370:	cmp	x8, #0x0
  431374:	cset	w9, ne  // ne = any
  431378:	and	w9, w9, #0x1
  43137c:	mov	w0, w9
  431380:	sxtw	x8, w0
  431384:	cbz	x8, 4313dc <_obstack_memory_used@@Base+0x9abc>
  431388:	str	wzr, [sp, #36]
  43138c:	ldr	w8, [sp, #36]
  431390:	cmp	w8, #0x100
  431394:	b.ge	4313d8 <_obstack_memory_used@@Base+0x9ab8>  // b.tcont
  431398:	bl	4026b0 <__ctype_b_loc@plt>
  43139c:	ldr	x8, [x0]
  4313a0:	ldrsw	x9, [sp, #36]
  4313a4:	ldrh	w10, [x8, x9, lsl #1]
  4313a8:	and	w10, w10, #0x400
  4313ac:	cbz	w10, 4313c8 <_obstack_memory_used@@Base+0x9aa8>
  4313b0:	ldur	x0, [x29, #-24]
  4313b4:	ldur	x8, [x29, #-16]
  4313b8:	ldrsw	x9, [sp, #36]
  4313bc:	ldrb	w10, [x8, x9]
  4313c0:	mov	w1, w10
  4313c4:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4313c8:	ldr	w8, [sp, #36]
  4313cc:	add	w8, w8, #0x1
  4313d0:	str	w8, [sp, #36]
  4313d4:	b	43138c <_obstack_memory_used@@Base+0x9a6c>
  4313d8:	b	431420 <_obstack_memory_used@@Base+0x9b00>
  4313dc:	str	wzr, [sp, #36]
  4313e0:	ldr	w8, [sp, #36]
  4313e4:	cmp	w8, #0x100
  4313e8:	b.ge	431420 <_obstack_memory_used@@Base+0x9b00>  // b.tcont
  4313ec:	bl	4026b0 <__ctype_b_loc@plt>
  4313f0:	ldr	x8, [x0]
  4313f4:	ldrsw	x9, [sp, #36]
  4313f8:	ldrh	w10, [x8, x9, lsl #1]
  4313fc:	and	w10, w10, #0x400
  431400:	cbz	w10, 431410 <_obstack_memory_used@@Base+0x9af0>
  431404:	ldur	x0, [x29, #-24]
  431408:	ldrsw	x1, [sp, #36]
  43140c:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431410:	ldr	w8, [sp, #36]
  431414:	add	w8, w8, #0x1
  431418:	str	w8, [sp, #36]
  43141c:	b	4313e0 <_obstack_memory_used@@Base+0x9ac0>
  431420:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  431424:	ldr	x0, [sp, #24]
  431428:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  43142c:	add	x1, x1, #0x8c4
  431430:	bl	4026a0 <strcmp@plt>
  431434:	cbnz	w0, 4314f0 <_obstack_memory_used@@Base+0x9bd0>
  431438:	ldur	x8, [x29, #-16]
  43143c:	cmp	x8, #0x0
  431440:	cset	w9, ne  // ne = any
  431444:	and	w9, w9, #0x1
  431448:	mov	w0, w9
  43144c:	sxtw	x8, w0
  431450:	cbz	x8, 4314a8 <_obstack_memory_used@@Base+0x9b88>
  431454:	str	wzr, [sp, #36]
  431458:	ldr	w8, [sp, #36]
  43145c:	cmp	w8, #0x100
  431460:	b.ge	4314a4 <_obstack_memory_used@@Base+0x9b84>  // b.tcont
  431464:	bl	4026b0 <__ctype_b_loc@plt>
  431468:	ldr	x8, [x0]
  43146c:	ldrsw	x9, [sp, #36]
  431470:	ldrh	w10, [x8, x9, lsl #1]
  431474:	and	w10, w10, #0x800
  431478:	cbz	w10, 431494 <_obstack_memory_used@@Base+0x9b74>
  43147c:	ldur	x0, [x29, #-24]
  431480:	ldur	x8, [x29, #-16]
  431484:	ldrsw	x9, [sp, #36]
  431488:	ldrb	w10, [x8, x9]
  43148c:	mov	w1, w10
  431490:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431494:	ldr	w8, [sp, #36]
  431498:	add	w8, w8, #0x1
  43149c:	str	w8, [sp, #36]
  4314a0:	b	431458 <_obstack_memory_used@@Base+0x9b38>
  4314a4:	b	4314ec <_obstack_memory_used@@Base+0x9bcc>
  4314a8:	str	wzr, [sp, #36]
  4314ac:	ldr	w8, [sp, #36]
  4314b0:	cmp	w8, #0x100
  4314b4:	b.ge	4314ec <_obstack_memory_used@@Base+0x9bcc>  // b.tcont
  4314b8:	bl	4026b0 <__ctype_b_loc@plt>
  4314bc:	ldr	x8, [x0]
  4314c0:	ldrsw	x9, [sp, #36]
  4314c4:	ldrh	w10, [x8, x9, lsl #1]
  4314c8:	and	w10, w10, #0x800
  4314cc:	cbz	w10, 4314dc <_obstack_memory_used@@Base+0x9bbc>
  4314d0:	ldur	x0, [x29, #-24]
  4314d4:	ldrsw	x1, [sp, #36]
  4314d8:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4314dc:	ldr	w8, [sp, #36]
  4314e0:	add	w8, w8, #0x1
  4314e4:	str	w8, [sp, #36]
  4314e8:	b	4314ac <_obstack_memory_used@@Base+0x9b8c>
  4314ec:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  4314f0:	ldr	x0, [sp, #24]
  4314f4:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4314f8:	add	x1, x1, #0x8dc
  4314fc:	bl	4026a0 <strcmp@plt>
  431500:	cbnz	w0, 4315bc <_obstack_memory_used@@Base+0x9c9c>
  431504:	ldur	x8, [x29, #-16]
  431508:	cmp	x8, #0x0
  43150c:	cset	w9, ne  // ne = any
  431510:	and	w9, w9, #0x1
  431514:	mov	w0, w9
  431518:	sxtw	x8, w0
  43151c:	cbz	x8, 431574 <_obstack_memory_used@@Base+0x9c54>
  431520:	str	wzr, [sp, #36]
  431524:	ldr	w8, [sp, #36]
  431528:	cmp	w8, #0x100
  43152c:	b.ge	431570 <_obstack_memory_used@@Base+0x9c50>  // b.tcont
  431530:	bl	4026b0 <__ctype_b_loc@plt>
  431534:	ldr	x8, [x0]
  431538:	ldrsw	x9, [sp, #36]
  43153c:	ldrh	w10, [x8, x9, lsl #1]
  431540:	and	w10, w10, #0x4000
  431544:	cbz	w10, 431560 <_obstack_memory_used@@Base+0x9c40>
  431548:	ldur	x0, [x29, #-24]
  43154c:	ldur	x8, [x29, #-16]
  431550:	ldrsw	x9, [sp, #36]
  431554:	ldrb	w10, [x8, x9]
  431558:	mov	w1, w10
  43155c:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431560:	ldr	w8, [sp, #36]
  431564:	add	w8, w8, #0x1
  431568:	str	w8, [sp, #36]
  43156c:	b	431524 <_obstack_memory_used@@Base+0x9c04>
  431570:	b	4315b8 <_obstack_memory_used@@Base+0x9c98>
  431574:	str	wzr, [sp, #36]
  431578:	ldr	w8, [sp, #36]
  43157c:	cmp	w8, #0x100
  431580:	b.ge	4315b8 <_obstack_memory_used@@Base+0x9c98>  // b.tcont
  431584:	bl	4026b0 <__ctype_b_loc@plt>
  431588:	ldr	x8, [x0]
  43158c:	ldrsw	x9, [sp, #36]
  431590:	ldrh	w10, [x8, x9, lsl #1]
  431594:	and	w10, w10, #0x4000
  431598:	cbz	w10, 4315a8 <_obstack_memory_used@@Base+0x9c88>
  43159c:	ldur	x0, [x29, #-24]
  4315a0:	ldrsw	x1, [sp, #36]
  4315a4:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4315a8:	ldr	w8, [sp, #36]
  4315ac:	add	w8, w8, #0x1
  4315b0:	str	w8, [sp, #36]
  4315b4:	b	431578 <_obstack_memory_used@@Base+0x9c58>
  4315b8:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  4315bc:	ldr	x0, [sp, #24]
  4315c0:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4315c4:	add	x1, x1, #0x857
  4315c8:	bl	4026a0 <strcmp@plt>
  4315cc:	cbnz	w0, 431688 <_obstack_memory_used@@Base+0x9d68>
  4315d0:	ldur	x8, [x29, #-16]
  4315d4:	cmp	x8, #0x0
  4315d8:	cset	w9, ne  // ne = any
  4315dc:	and	w9, w9, #0x1
  4315e0:	mov	w0, w9
  4315e4:	sxtw	x8, w0
  4315e8:	cbz	x8, 431640 <_obstack_memory_used@@Base+0x9d20>
  4315ec:	str	wzr, [sp, #36]
  4315f0:	ldr	w8, [sp, #36]
  4315f4:	cmp	w8, #0x100
  4315f8:	b.ge	43163c <_obstack_memory_used@@Base+0x9d1c>  // b.tcont
  4315fc:	bl	4026b0 <__ctype_b_loc@plt>
  431600:	ldr	x8, [x0]
  431604:	ldrsw	x9, [sp, #36]
  431608:	ldrh	w10, [x8, x9, lsl #1]
  43160c:	and	w10, w10, #0x100
  431610:	cbz	w10, 43162c <_obstack_memory_used@@Base+0x9d0c>
  431614:	ldur	x0, [x29, #-24]
  431618:	ldur	x8, [x29, #-16]
  43161c:	ldrsw	x9, [sp, #36]
  431620:	ldrb	w10, [x8, x9]
  431624:	mov	w1, w10
  431628:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  43162c:	ldr	w8, [sp, #36]
  431630:	add	w8, w8, #0x1
  431634:	str	w8, [sp, #36]
  431638:	b	4315f0 <_obstack_memory_used@@Base+0x9cd0>
  43163c:	b	431684 <_obstack_memory_used@@Base+0x9d64>
  431640:	str	wzr, [sp, #36]
  431644:	ldr	w8, [sp, #36]
  431648:	cmp	w8, #0x100
  43164c:	b.ge	431684 <_obstack_memory_used@@Base+0x9d64>  // b.tcont
  431650:	bl	4026b0 <__ctype_b_loc@plt>
  431654:	ldr	x8, [x0]
  431658:	ldrsw	x9, [sp, #36]
  43165c:	ldrh	w10, [x8, x9, lsl #1]
  431660:	and	w10, w10, #0x100
  431664:	cbz	w10, 431674 <_obstack_memory_used@@Base+0x9d54>
  431668:	ldur	x0, [x29, #-24]
  43166c:	ldrsw	x1, [sp, #36]
  431670:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431674:	ldr	w8, [sp, #36]
  431678:	add	w8, w8, #0x1
  43167c:	str	w8, [sp, #36]
  431680:	b	431644 <_obstack_memory_used@@Base+0x9d24>
  431684:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  431688:	ldr	x0, [sp, #24]
  43168c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  431690:	add	x1, x1, #0x8ee
  431694:	bl	4026a0 <strcmp@plt>
  431698:	cbnz	w0, 431754 <_obstack_memory_used@@Base+0x9e34>
  43169c:	ldur	x8, [x29, #-16]
  4316a0:	cmp	x8, #0x0
  4316a4:	cset	w9, ne  // ne = any
  4316a8:	and	w9, w9, #0x1
  4316ac:	mov	w0, w9
  4316b0:	sxtw	x8, w0
  4316b4:	cbz	x8, 43170c <_obstack_memory_used@@Base+0x9dec>
  4316b8:	str	wzr, [sp, #36]
  4316bc:	ldr	w8, [sp, #36]
  4316c0:	cmp	w8, #0x100
  4316c4:	b.ge	431708 <_obstack_memory_used@@Base+0x9de8>  // b.tcont
  4316c8:	bl	4026b0 <__ctype_b_loc@plt>
  4316cc:	ldr	x8, [x0]
  4316d0:	ldrsw	x9, [sp, #36]
  4316d4:	ldrh	w10, [x8, x9, lsl #1]
  4316d8:	and	w10, w10, #0x1
  4316dc:	cbz	w10, 4316f8 <_obstack_memory_used@@Base+0x9dd8>
  4316e0:	ldur	x0, [x29, #-24]
  4316e4:	ldur	x8, [x29, #-16]
  4316e8:	ldrsw	x9, [sp, #36]
  4316ec:	ldrb	w10, [x8, x9]
  4316f0:	mov	w1, w10
  4316f4:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4316f8:	ldr	w8, [sp, #36]
  4316fc:	add	w8, w8, #0x1
  431700:	str	w8, [sp, #36]
  431704:	b	4316bc <_obstack_memory_used@@Base+0x9d9c>
  431708:	b	431750 <_obstack_memory_used@@Base+0x9e30>
  43170c:	str	wzr, [sp, #36]
  431710:	ldr	w8, [sp, #36]
  431714:	cmp	w8, #0x100
  431718:	b.ge	431750 <_obstack_memory_used@@Base+0x9e30>  // b.tcont
  43171c:	bl	4026b0 <__ctype_b_loc@plt>
  431720:	ldr	x8, [x0]
  431724:	ldrsw	x9, [sp, #36]
  431728:	ldrh	w10, [x8, x9, lsl #1]
  43172c:	and	w10, w10, #0x1
  431730:	cbz	w10, 431740 <_obstack_memory_used@@Base+0x9e20>
  431734:	ldur	x0, [x29, #-24]
  431738:	ldrsw	x1, [sp, #36]
  43173c:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431740:	ldr	w8, [sp, #36]
  431744:	add	w8, w8, #0x1
  431748:	str	w8, [sp, #36]
  43174c:	b	431710 <_obstack_memory_used@@Base+0x9df0>
  431750:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  431754:	ldr	x0, [sp, #24]
  431758:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  43175c:	add	x1, x1, #0x8e2
  431760:	bl	4026a0 <strcmp@plt>
  431764:	cbnz	w0, 431820 <_obstack_memory_used@@Base+0x9f00>
  431768:	ldur	x8, [x29, #-16]
  43176c:	cmp	x8, #0x0
  431770:	cset	w9, ne  // ne = any
  431774:	and	w9, w9, #0x1
  431778:	mov	w0, w9
  43177c:	sxtw	x8, w0
  431780:	cbz	x8, 4317d8 <_obstack_memory_used@@Base+0x9eb8>
  431784:	str	wzr, [sp, #36]
  431788:	ldr	w8, [sp, #36]
  43178c:	cmp	w8, #0x100
  431790:	b.ge	4317d4 <_obstack_memory_used@@Base+0x9eb4>  // b.tcont
  431794:	bl	4026b0 <__ctype_b_loc@plt>
  431798:	ldr	x8, [x0]
  43179c:	ldrsw	x9, [sp, #36]
  4317a0:	ldrh	w10, [x8, x9, lsl #1]
  4317a4:	and	w10, w10, #0x8000
  4317a8:	cbz	w10, 4317c4 <_obstack_memory_used@@Base+0x9ea4>
  4317ac:	ldur	x0, [x29, #-24]
  4317b0:	ldur	x8, [x29, #-16]
  4317b4:	ldrsw	x9, [sp, #36]
  4317b8:	ldrb	w10, [x8, x9]
  4317bc:	mov	w1, w10
  4317c0:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4317c4:	ldr	w8, [sp, #36]
  4317c8:	add	w8, w8, #0x1
  4317cc:	str	w8, [sp, #36]
  4317d0:	b	431788 <_obstack_memory_used@@Base+0x9e68>
  4317d4:	b	43181c <_obstack_memory_used@@Base+0x9efc>
  4317d8:	str	wzr, [sp, #36]
  4317dc:	ldr	w8, [sp, #36]
  4317e0:	cmp	w8, #0x100
  4317e4:	b.ge	43181c <_obstack_memory_used@@Base+0x9efc>  // b.tcont
  4317e8:	bl	4026b0 <__ctype_b_loc@plt>
  4317ec:	ldr	x8, [x0]
  4317f0:	ldrsw	x9, [sp, #36]
  4317f4:	ldrh	w10, [x8, x9, lsl #1]
  4317f8:	and	w10, w10, #0x8000
  4317fc:	cbz	w10, 43180c <_obstack_memory_used@@Base+0x9eec>
  431800:	ldur	x0, [x29, #-24]
  431804:	ldrsw	x1, [sp, #36]
  431808:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  43180c:	ldr	w8, [sp, #36]
  431810:	add	w8, w8, #0x1
  431814:	str	w8, [sp, #36]
  431818:	b	4317dc <_obstack_memory_used@@Base+0x9ebc>
  43181c:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  431820:	ldr	x0, [sp, #24]
  431824:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  431828:	add	x1, x1, #0x8d0
  43182c:	bl	4026a0 <strcmp@plt>
  431830:	cbnz	w0, 4318ec <_obstack_memory_used@@Base+0x9fcc>
  431834:	ldur	x8, [x29, #-16]
  431838:	cmp	x8, #0x0
  43183c:	cset	w9, ne  // ne = any
  431840:	and	w9, w9, #0x1
  431844:	mov	w0, w9
  431848:	sxtw	x8, w0
  43184c:	cbz	x8, 4318a4 <_obstack_memory_used@@Base+0x9f84>
  431850:	str	wzr, [sp, #36]
  431854:	ldr	w8, [sp, #36]
  431858:	cmp	w8, #0x100
  43185c:	b.ge	4318a0 <_obstack_memory_used@@Base+0x9f80>  // b.tcont
  431860:	bl	4026b0 <__ctype_b_loc@plt>
  431864:	ldr	x8, [x0]
  431868:	ldrsw	x9, [sp, #36]
  43186c:	ldrh	w10, [x8, x9, lsl #1]
  431870:	and	w10, w10, #0x4
  431874:	cbz	w10, 431890 <_obstack_memory_used@@Base+0x9f70>
  431878:	ldur	x0, [x29, #-24]
  43187c:	ldur	x8, [x29, #-16]
  431880:	ldrsw	x9, [sp, #36]
  431884:	ldrb	w10, [x8, x9]
  431888:	mov	w1, w10
  43188c:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  431890:	ldr	w8, [sp, #36]
  431894:	add	w8, w8, #0x1
  431898:	str	w8, [sp, #36]
  43189c:	b	431854 <_obstack_memory_used@@Base+0x9f34>
  4318a0:	b	4318e8 <_obstack_memory_used@@Base+0x9fc8>
  4318a4:	str	wzr, [sp, #36]
  4318a8:	ldr	w8, [sp, #36]
  4318ac:	cmp	w8, #0x100
  4318b0:	b.ge	4318e8 <_obstack_memory_used@@Base+0x9fc8>  // b.tcont
  4318b4:	bl	4026b0 <__ctype_b_loc@plt>
  4318b8:	ldr	x8, [x0]
  4318bc:	ldrsw	x9, [sp, #36]
  4318c0:	ldrh	w10, [x8, x9, lsl #1]
  4318c4:	and	w10, w10, #0x4
  4318c8:	cbz	w10, 4318d8 <_obstack_memory_used@@Base+0x9fb8>
  4318cc:	ldur	x0, [x29, #-24]
  4318d0:	ldrsw	x1, [sp, #36]
  4318d4:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4318d8:	ldr	w8, [sp, #36]
  4318dc:	add	w8, w8, #0x1
  4318e0:	str	w8, [sp, #36]
  4318e4:	b	4318a8 <_obstack_memory_used@@Base+0x9f88>
  4318e8:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  4318ec:	ldr	x0, [sp, #24]
  4318f0:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x1b6e0>
  4318f4:	add	x1, x1, #0x8c3
  4318f8:	bl	4026a0 <strcmp@plt>
  4318fc:	cbnz	w0, 4319b8 <_obstack_memory_used@@Base+0xa098>
  431900:	ldur	x8, [x29, #-16]
  431904:	cmp	x8, #0x0
  431908:	cset	w9, ne  // ne = any
  43190c:	and	w9, w9, #0x1
  431910:	mov	w0, w9
  431914:	sxtw	x8, w0
  431918:	cbz	x8, 431970 <_obstack_memory_used@@Base+0xa050>
  43191c:	str	wzr, [sp, #36]
  431920:	ldr	w8, [sp, #36]
  431924:	cmp	w8, #0x100
  431928:	b.ge	43196c <_obstack_memory_used@@Base+0xa04c>  // b.tcont
  43192c:	bl	4026b0 <__ctype_b_loc@plt>
  431930:	ldr	x8, [x0]
  431934:	ldrsw	x9, [sp, #36]
  431938:	ldrh	w10, [x8, x9, lsl #1]
  43193c:	and	w10, w10, #0x1000
  431940:	cbz	w10, 43195c <_obstack_memory_used@@Base+0xa03c>
  431944:	ldur	x0, [x29, #-24]
  431948:	ldur	x8, [x29, #-16]
  43194c:	ldrsw	x9, [sp, #36]
  431950:	ldrb	w10, [x8, x9]
  431954:	mov	w1, w10
  431958:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  43195c:	ldr	w8, [sp, #36]
  431960:	add	w8, w8, #0x1
  431964:	str	w8, [sp, #36]
  431968:	b	431920 <_obstack_memory_used@@Base+0xa000>
  43196c:	b	4319b4 <_obstack_memory_used@@Base+0xa094>
  431970:	str	wzr, [sp, #36]
  431974:	ldr	w8, [sp, #36]
  431978:	cmp	w8, #0x100
  43197c:	b.ge	4319b4 <_obstack_memory_used@@Base+0xa094>  // b.tcont
  431980:	bl	4026b0 <__ctype_b_loc@plt>
  431984:	ldr	x8, [x0]
  431988:	ldrsw	x9, [sp, #36]
  43198c:	ldrh	w10, [x8, x9, lsl #1]
  431990:	and	w10, w10, #0x1000
  431994:	cbz	w10, 4319a4 <_obstack_memory_used@@Base+0xa084>
  431998:	ldur	x0, [x29, #-24]
  43199c:	ldrsw	x1, [sp, #36]
  4319a0:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  4319a4:	ldr	w8, [sp, #36]
  4319a8:	add	w8, w8, #0x1
  4319ac:	str	w8, [sp, #36]
  4319b0:	b	431974 <_obstack_memory_used@@Base+0xa054>
  4319b4:	b	4319c4 <_obstack_memory_used@@Base+0xa0a4>
  4319b8:	mov	w8, #0x4                   	// #4
  4319bc:	stur	w8, [x29, #-4]
  4319c0:	b	4319c8 <_obstack_memory_used@@Base+0xa0a8>
  4319c4:	stur	wzr, [x29, #-4]
  4319c8:	ldur	w0, [x29, #-4]
  4319cc:	ldp	x29, x30, [sp, #96]
  4319d0:	add	sp, sp, #0x70
  4319d4:	ret
  4319d8:	sub	sp, sp, #0x10
  4319dc:	str	x0, [sp, #8]
  4319e0:	str	wzr, [sp, #4]
  4319e4:	ldr	w8, [sp, #4]
  4319e8:	cmp	w8, #0x4
  4319ec:	b.ge	431a1c <_obstack_memory_used@@Base+0xa0fc>  // b.tcont
  4319f0:	ldr	x8, [sp, #8]
  4319f4:	ldrsw	x9, [sp, #4]
  4319f8:	ldr	x8, [x8, x9, lsl #3]
  4319fc:	mvn	x8, x8
  431a00:	ldr	x9, [sp, #8]
  431a04:	ldrsw	x10, [sp, #4]
  431a08:	str	x8, [x9, x10, lsl #3]
  431a0c:	ldr	w8, [sp, #4]
  431a10:	add	w8, w8, #0x1
  431a14:	str	w8, [sp, #4]
  431a18:	b	4319e4 <_obstack_memory_used@@Base+0xa0c4>
  431a1c:	add	sp, sp, #0x10
  431a20:	ret
  431a24:	sub	sp, sp, #0x20
  431a28:	str	x0, [sp, #24]
  431a2c:	str	x1, [sp, #16]
  431a30:	str	wzr, [sp, #12]
  431a34:	ldr	w8, [sp, #12]
  431a38:	cmp	w8, #0x4
  431a3c:	b.ge	431a7c <_obstack_memory_used@@Base+0xa15c>  // b.tcont
  431a40:	ldr	x8, [sp, #16]
  431a44:	ldrsw	x9, [sp, #12]
  431a48:	mov	x10, #0x8                   	// #8
  431a4c:	ldr	x8, [x8, x9, lsl #3]
  431a50:	ldr	x9, [sp, #24]
  431a54:	ldrsw	x11, [sp, #12]
  431a58:	mul	x10, x10, x11
  431a5c:	add	x9, x9, x10
  431a60:	ldr	x10, [x9]
  431a64:	and	x8, x10, x8
  431a68:	str	x8, [x9]
  431a6c:	ldr	w8, [sp, #12]
  431a70:	add	w8, w8, #0x1
  431a74:	str	w8, [sp, #12]
  431a78:	b	431a34 <_obstack_memory_used@@Base+0xa114>
  431a7c:	add	sp, sp, #0x20
  431a80:	ret
  431a84:	sub	sp, sp, #0x20
  431a88:	str	x0, [sp, #16]
  431a8c:	str	x1, [sp, #8]
  431a90:	ldr	x8, [sp, #16]
  431a94:	ldr	w9, [x8, #144]
  431a98:	cmp	w9, #0x1
  431a9c:	b.ne	431aac <_obstack_memory_used@@Base+0xa18c>  // b.any
  431aa0:	mov	w8, #0x1                   	// #1
  431aa4:	str	w8, [sp, #28]
  431aa8:	b	431b10 <_obstack_memory_used@@Base+0xa1f0>
  431aac:	mov	w8, #0x1                   	// #1
  431ab0:	str	w8, [sp, #4]
  431ab4:	ldr	x8, [sp, #8]
  431ab8:	ldrsw	x9, [sp, #4]
  431abc:	add	x8, x8, x9
  431ac0:	ldr	x9, [sp, #16]
  431ac4:	ldr	x9, [x9, #48]
  431ac8:	cmp	x8, x9
  431acc:	b.ge	431b08 <_obstack_memory_used@@Base+0xa1e8>  // b.tcont
  431ad0:	ldr	x8, [sp, #16]
  431ad4:	ldr	x8, [x8, #16]
  431ad8:	ldr	x9, [sp, #8]
  431adc:	ldrsw	x10, [sp, #4]
  431ae0:	add	x9, x9, x10
  431ae4:	ldr	w11, [x8, x9, lsl #2]
  431ae8:	mov	w12, #0xffffffff            	// #-1
  431aec:	cmp	w11, w12
  431af0:	b.eq	431af8 <_obstack_memory_used@@Base+0xa1d8>  // b.none
  431af4:	b	431b08 <_obstack_memory_used@@Base+0xa1e8>
  431af8:	ldr	w8, [sp, #4]
  431afc:	add	w8, w8, #0x1
  431b00:	str	w8, [sp, #4]
  431b04:	b	431ab4 <_obstack_memory_used@@Base+0xa194>
  431b08:	ldr	w8, [sp, #4]
  431b0c:	str	w8, [sp, #28]
  431b10:	ldr	w0, [sp, #28]
  431b14:	add	sp, sp, #0x20
  431b18:	ret
  431b1c:	sub	sp, sp, #0x40
  431b20:	stp	x29, x30, [sp, #48]
  431b24:	add	x29, sp, #0x30
  431b28:	stur	x0, [x29, #-16]
  431b2c:	str	x1, [sp, #24]
  431b30:	str	x2, [sp, #16]
  431b34:	ldr	x8, [sp, #16]
  431b38:	ldrb	w9, [x8]
  431b3c:	strb	w9, [sp, #14]
  431b40:	str	wzr, [sp, #8]
  431b44:	ldr	x8, [sp, #24]
  431b48:	ldr	x8, [x8, #104]
  431b4c:	ldr	x10, [sp, #24]
  431b50:	ldr	x10, [x10, #72]
  431b54:	cmp	x8, x10
  431b58:	b.gt	431b68 <_obstack_memory_used@@Base+0xa248>
  431b5c:	mov	w8, #0x7                   	// #7
  431b60:	stur	w8, [x29, #-4]
  431b64:	b	431ce0 <_obstack_memory_used@@Base+0xa3c0>
  431b68:	ldr	w8, [sp, #8]
  431b6c:	cmp	w8, #0x20
  431b70:	b.lt	431b80 <_obstack_memory_used@@Base+0xa260>  // b.tstop
  431b74:	mov	w8, #0x7                   	// #7
  431b78:	stur	w8, [x29, #-4]
  431b7c:	b	431ce0 <_obstack_memory_used@@Base+0xa3c0>
  431b80:	ldr	x8, [sp, #16]
  431b84:	ldr	w9, [x8, #8]
  431b88:	and	w9, w9, #0xff
  431b8c:	cmp	w9, #0x1e
  431b90:	b.ne	431ba4 <_obstack_memory_used@@Base+0xa284>  // b.any
  431b94:	ldr	x0, [sp, #24]
  431b98:	bl	431cf0 <_obstack_memory_used@@Base+0xa3d0>
  431b9c:	strb	w0, [sp, #15]
  431ba0:	b	431bc8 <_obstack_memory_used@@Base+0xa2a8>
  431ba4:	ldr	x8, [sp, #24]
  431ba8:	ldr	x8, [x8, #8]
  431bac:	ldr	x9, [sp, #24]
  431bb0:	ldr	x10, [x9, #72]
  431bb4:	add	x11, x10, #0x1
  431bb8:	str	x11, [x9, #72]
  431bbc:	add	x8, x8, x10
  431bc0:	ldrb	w12, [x8]
  431bc4:	strb	w12, [sp, #15]
  431bc8:	ldr	x8, [sp, #24]
  431bcc:	ldr	x8, [x8, #104]
  431bd0:	ldr	x9, [sp, #24]
  431bd4:	ldr	x9, [x9, #72]
  431bd8:	cmp	x8, x9
  431bdc:	b.gt	431bec <_obstack_memory_used@@Base+0xa2cc>
  431be0:	mov	w8, #0x7                   	// #7
  431be4:	stur	w8, [x29, #-4]
  431be8:	b	431ce0 <_obstack_memory_used@@Base+0xa3c0>
  431bec:	ldrb	w8, [sp, #15]
  431bf0:	ldrb	w9, [sp, #14]
  431bf4:	cmp	w8, w9
  431bf8:	b.ne	431c20 <_obstack_memory_used@@Base+0xa300>  // b.any
  431bfc:	ldr	x8, [sp, #24]
  431c00:	ldr	x8, [x8, #8]
  431c04:	ldr	x9, [sp, #24]
  431c08:	ldr	x9, [x9, #72]
  431c0c:	add	x9, x9, #0x0
  431c10:	ldrb	w10, [x8, x9]
  431c14:	cmp	w10, #0x5d
  431c18:	b.ne	431c20 <_obstack_memory_used@@Base+0xa300>  // b.any
  431c1c:	b	431c48 <_obstack_memory_used@@Base+0xa328>
  431c20:	ldrb	w8, [sp, #15]
  431c24:	ldur	x9, [x29, #-16]
  431c28:	ldr	x9, [x9, #8]
  431c2c:	ldrsw	x10, [sp, #8]
  431c30:	add	x9, x9, x10
  431c34:	strb	w8, [x9]
  431c38:	ldr	w8, [sp, #8]
  431c3c:	add	w8, w8, #0x1
  431c40:	str	w8, [sp, #8]
  431c44:	b	431b68 <_obstack_memory_used@@Base+0xa248>
  431c48:	ldr	x8, [sp, #24]
  431c4c:	ldr	x9, [x8, #72]
  431c50:	add	x9, x9, #0x1
  431c54:	str	x9, [x8, #72]
  431c58:	ldur	x8, [x29, #-16]
  431c5c:	ldr	x8, [x8, #8]
  431c60:	ldrsw	x9, [sp, #8]
  431c64:	add	x8, x8, x9
  431c68:	mov	w10, #0x0                   	// #0
  431c6c:	strb	w10, [x8]
  431c70:	ldr	x8, [sp, #16]
  431c74:	ldr	w10, [x8, #8]
  431c78:	and	w10, w10, #0xff
  431c7c:	cmp	w10, #0x1a
  431c80:	str	w10, [sp, #4]
  431c84:	b.eq	431cac <_obstack_memory_used@@Base+0xa38c>  // b.none
  431c88:	b	431c8c <_obstack_memory_used@@Base+0xa36c>
  431c8c:	ldr	w8, [sp, #4]
  431c90:	cmp	w8, #0x1c
  431c94:	b.eq	431cbc <_obstack_memory_used@@Base+0xa39c>  // b.none
  431c98:	b	431c9c <_obstack_memory_used@@Base+0xa37c>
  431c9c:	ldr	w8, [sp, #4]
  431ca0:	cmp	w8, #0x1e
  431ca4:	b.eq	431ccc <_obstack_memory_used@@Base+0xa3ac>  // b.none
  431ca8:	b	431cdc <_obstack_memory_used@@Base+0xa3bc>
  431cac:	ldur	x8, [x29, #-16]
  431cb0:	mov	w9, #0x3                   	// #3
  431cb4:	str	w9, [x8]
  431cb8:	b	431cdc <_obstack_memory_used@@Base+0xa3bc>
  431cbc:	ldur	x8, [x29, #-16]
  431cc0:	mov	w9, #0x2                   	// #2
  431cc4:	str	w9, [x8]
  431cc8:	b	431cdc <_obstack_memory_used@@Base+0xa3bc>
  431ccc:	ldur	x8, [x29, #-16]
  431cd0:	mov	w9, #0x4                   	// #4
  431cd4:	str	w9, [x8]
  431cd8:	b	431cdc <_obstack_memory_used@@Base+0xa3bc>
  431cdc:	stur	wzr, [x29, #-4]
  431ce0:	ldur	w0, [x29, #-4]
  431ce4:	ldp	x29, x30, [sp, #48]
  431ce8:	add	sp, sp, #0x40
  431cec:	ret
  431cf0:	sub	sp, sp, #0x30
  431cf4:	stp	x29, x30, [sp, #32]
  431cf8:	add	x29, sp, #0x20
  431cfc:	str	x0, [sp, #16]
  431d00:	ldr	x8, [sp, #16]
  431d04:	ldrb	w9, [x8, #139]
  431d08:	cmp	w9, #0x0
  431d0c:	cset	w9, ne  // ne = any
  431d10:	eor	w9, w9, #0x1
  431d14:	and	w9, w9, #0x1
  431d18:	mov	w0, w9
  431d1c:	sxtw	x8, w0
  431d20:	cbz	x8, 431d4c <_obstack_memory_used@@Base+0xa42c>
  431d24:	ldr	x8, [sp, #16]
  431d28:	ldr	x8, [x8, #8]
  431d2c:	ldr	x9, [sp, #16]
  431d30:	ldr	x10, [x9, #72]
  431d34:	add	x11, x10, #0x1
  431d38:	str	x11, [x9, #72]
  431d3c:	add	x8, x8, x10
  431d40:	ldrb	w12, [x8]
  431d44:	sturb	w12, [x29, #-1]
  431d48:	b	431e80 <_obstack_memory_used@@Base+0xa560>
  431d4c:	ldr	x8, [sp, #16]
  431d50:	ldrb	w9, [x8, #140]
  431d54:	cbz	w9, 431e50 <_obstack_memory_used@@Base+0xa530>
  431d58:	ldr	x8, [sp, #16]
  431d5c:	ldr	x8, [x8, #72]
  431d60:	ldr	x9, [sp, #16]
  431d64:	ldr	x9, [x9, #48]
  431d68:	cmp	x8, x9
  431d6c:	b.eq	431db8 <_obstack_memory_used@@Base+0xa498>  // b.none
  431d70:	ldr	x8, [sp, #16]
  431d74:	ldr	x8, [x8, #16]
  431d78:	ldr	x9, [sp, #16]
  431d7c:	ldr	x9, [x9, #72]
  431d80:	ldr	w10, [x8, x9, lsl #2]
  431d84:	mov	w11, #0xffffffff            	// #-1
  431d88:	cmp	w10, w11
  431d8c:	b.ne	431db8 <_obstack_memory_used@@Base+0xa498>  // b.any
  431d90:	ldr	x8, [sp, #16]
  431d94:	ldr	x8, [x8, #8]
  431d98:	ldr	x9, [sp, #16]
  431d9c:	ldr	x10, [x9, #72]
  431da0:	add	x11, x10, #0x1
  431da4:	str	x11, [x9, #72]
  431da8:	add	x8, x8, x10
  431dac:	ldrb	w12, [x8]
  431db0:	sturb	w12, [x29, #-1]
  431db4:	b	431e80 <_obstack_memory_used@@Base+0xa560>
  431db8:	ldr	x8, [sp, #16]
  431dbc:	ldr	x8, [x8, #24]
  431dc0:	ldr	x9, [sp, #16]
  431dc4:	ldr	x9, [x9, #72]
  431dc8:	ldr	x8, [x8, x9, lsl #3]
  431dcc:	str	x8, [sp, #8]
  431dd0:	ldr	x8, [sp, #16]
  431dd4:	ldr	x8, [x8]
  431dd8:	ldr	x9, [sp, #16]
  431ddc:	ldr	x9, [x9, #40]
  431de0:	ldr	x10, [sp, #8]
  431de4:	add	x9, x9, x10
  431de8:	ldrb	w11, [x8, x9]
  431dec:	str	w11, [sp, #4]
  431df0:	ldr	w11, [sp, #4]
  431df4:	and	w11, w11, #0xffffff80
  431df8:	cbz	w11, 431e24 <_obstack_memory_used@@Base+0xa504>
  431dfc:	ldr	x8, [sp, #16]
  431e00:	ldr	x8, [x8, #8]
  431e04:	ldr	x9, [sp, #16]
  431e08:	ldr	x10, [x9, #72]
  431e0c:	add	x11, x10, #0x1
  431e10:	str	x11, [x9, #72]
  431e14:	add	x8, x8, x10
  431e18:	ldrb	w12, [x8]
  431e1c:	sturb	w12, [x29, #-1]
  431e20:	b	431e80 <_obstack_memory_used@@Base+0xa560>
  431e24:	ldr	x0, [sp, #16]
  431e28:	ldr	x8, [sp, #16]
  431e2c:	ldr	x1, [x8, #72]
  431e30:	bl	431a84 <_obstack_memory_used@@Base+0xa164>
  431e34:	ldr	x8, [sp, #16]
  431e38:	ldr	x9, [x8, #72]
  431e3c:	add	x9, x9, w0, sxtw
  431e40:	str	x9, [x8, #72]
  431e44:	ldr	w10, [sp, #4]
  431e48:	sturb	w10, [x29, #-1]
  431e4c:	b	431e80 <_obstack_memory_used@@Base+0xa560>
  431e50:	ldr	x8, [sp, #16]
  431e54:	ldr	x8, [x8]
  431e58:	ldr	x9, [sp, #16]
  431e5c:	ldr	x9, [x9, #40]
  431e60:	ldr	x10, [sp, #16]
  431e64:	ldr	x11, [x10, #72]
  431e68:	add	x12, x11, #0x1
  431e6c:	str	x12, [x10, #72]
  431e70:	add	x9, x9, x11
  431e74:	add	x8, x8, x9
  431e78:	ldrb	w13, [x8]
  431e7c:	sturb	w13, [x29, #-1]
  431e80:	ldurb	w0, [x29, #-1]
  431e84:	ldp	x29, x30, [sp, #32]
  431e88:	add	sp, sp, #0x30
  431e8c:	ret
  431e90:	sub	sp, sp, #0x30
  431e94:	stp	x29, x30, [sp, #32]
  431e98:	add	x29, sp, #0x20
  431e9c:	sturb	w0, [x29, #-1]
  431ea0:	str	x1, [sp, #16]
  431ea4:	ldr	x8, [sp, #16]
  431ea8:	cbnz	x8, 431eb8 <_obstack_memory_used@@Base+0xa598>
  431eac:	ldurb	w8, [x29, #-1]
  431eb0:	str	w8, [sp, #12]
  431eb4:	b	431ec4 <_obstack_memory_used@@Base+0xa5a4>
  431eb8:	ldurb	w0, [x29, #-1]
  431ebc:	bl	402600 <btowc@plt>
  431ec0:	str	w0, [sp, #12]
  431ec4:	ldr	w8, [sp, #12]
  431ec8:	mov	w0, w8
  431ecc:	ldp	x29, x30, [sp, #32]
  431ed0:	add	sp, sp, #0x30
  431ed4:	ret
  431ed8:	sub	sp, sp, #0x60
  431edc:	stp	x29, x30, [sp, #80]
  431ee0:	add	x29, sp, #0x50
  431ee4:	mov	x8, #0xffffffffffffffff    	// #-1
  431ee8:	stur	x0, [x29, #-16]
  431eec:	stur	x1, [x29, #-24]
  431ef0:	stur	x2, [x29, #-32]
  431ef4:	str	x8, [sp, #40]
  431ef8:	ldur	x0, [x29, #-24]
  431efc:	ldur	x1, [x29, #-16]
  431f00:	ldur	x2, [x29, #-32]
  431f04:	bl	42cea4 <_obstack_memory_used@@Base+0x5584>
  431f08:	ldur	x8, [x29, #-24]
  431f0c:	ldrb	w9, [x8]
  431f10:	strb	w9, [sp, #39]
  431f14:	ldur	x8, [x29, #-24]
  431f18:	ldr	w9, [x8, #8]
  431f1c:	and	w9, w9, #0xff
  431f20:	cmp	w9, #0x2
  431f24:	cset	w9, eq  // eq = none
  431f28:	and	w9, w9, #0x1
  431f2c:	mov	w0, w9
  431f30:	sxtw	x8, w0
  431f34:	cbz	x8, 431f44 <_obstack_memory_used@@Base+0xa624>
  431f38:	mov	x8, #0xfffffffffffffffe    	// #-2
  431f3c:	stur	x8, [x29, #-8]
  431f40:	b	432054 <_obstack_memory_used@@Base+0xa734>
  431f44:	ldur	x8, [x29, #-24]
  431f48:	ldr	w9, [x8, #8]
  431f4c:	and	w9, w9, #0xff
  431f50:	cmp	w9, #0x18
  431f54:	b.eq	431f64 <_obstack_memory_used@@Base+0xa644>  // b.none
  431f58:	ldrb	w8, [sp, #39]
  431f5c:	cmp	w8, #0x2c
  431f60:	b.ne	431f68 <_obstack_memory_used@@Base+0xa648>  // b.any
  431f64:	b	43204c <_obstack_memory_used@@Base+0xa72c>
  431f68:	ldur	x8, [x29, #-24]
  431f6c:	ldr	w9, [x8, #8]
  431f70:	and	w9, w9, #0xff
  431f74:	cmp	w9, #0x1
  431f78:	b.ne	431fa8 <_obstack_memory_used@@Base+0xa688>  // b.any
  431f7c:	ldrb	w8, [sp, #39]
  431f80:	cmp	w8, #0x30
  431f84:	b.lt	431fa8 <_obstack_memory_used@@Base+0xa688>  // b.tstop
  431f88:	ldrb	w8, [sp, #39]
  431f8c:	mov	w9, #0x39                  	// #57
  431f90:	cmp	w9, w8
  431f94:	b.lt	431fa8 <_obstack_memory_used@@Base+0xa688>  // b.tstop
  431f98:	ldr	x8, [sp, #40]
  431f9c:	mov	x9, #0xfffffffffffffffe    	// #-2
  431fa0:	cmp	x8, x9
  431fa4:	b.ne	431fb4 <_obstack_memory_used@@Base+0xa694>  // b.any
  431fa8:	mov	x8, #0xfffffffffffffffe    	// #-2
  431fac:	str	x8, [sp, #24]
  431fb0:	b	432040 <_obstack_memory_used@@Base+0xa720>
  431fb4:	ldr	x8, [sp, #40]
  431fb8:	mov	x9, #0xffffffffffffffff    	// #-1
  431fbc:	cmp	x8, x9
  431fc0:	b.ne	431fdc <_obstack_memory_used@@Base+0xa6bc>  // b.any
  431fc4:	ldrb	w8, [sp, #39]
  431fc8:	subs	w8, w8, #0x30
  431fcc:	mov	w0, w8
  431fd0:	sxtw	x9, w0
  431fd4:	str	x9, [sp, #16]
  431fd8:	b	432038 <_obstack_memory_used@@Base+0xa718>
  431fdc:	ldr	x8, [sp, #40]
  431fe0:	mov	x9, #0xa                   	// #10
  431fe4:	mul	x8, x8, x9
  431fe8:	ldrb	w10, [sp, #39]
  431fec:	mov	w9, w10
  431ff0:	add	x8, x8, x9
  431ff4:	subs	x8, x8, #0x30
  431ff8:	mov	x9, #0x8000                	// #32768
  431ffc:	cmp	x9, x8
  432000:	b.ge	432010 <_obstack_memory_used@@Base+0xa6f0>  // b.tcont
  432004:	mov	x8, #0x8000                	// #32768
  432008:	str	x8, [sp, #8]
  43200c:	b	432030 <_obstack_memory_used@@Base+0xa710>
  432010:	ldr	x8, [sp, #40]
  432014:	mov	x9, #0xa                   	// #10
  432018:	mul	x8, x8, x9
  43201c:	ldrb	w10, [sp, #39]
  432020:	mov	w9, w10
  432024:	add	x8, x8, x9
  432028:	subs	x8, x8, #0x30
  43202c:	str	x8, [sp, #8]
  432030:	ldr	x8, [sp, #8]
  432034:	str	x8, [sp, #16]
  432038:	ldr	x8, [sp, #16]
  43203c:	str	x8, [sp, #24]
  432040:	ldr	x8, [sp, #24]
  432044:	str	x8, [sp, #40]
  432048:	b	431ef8 <_obstack_memory_used@@Base+0xa5d8>
  43204c:	ldr	x8, [sp, #40]
  432050:	stur	x8, [x29, #-8]
  432054:	ldur	x0, [x29, #-8]
  432058:	ldp	x29, x30, [sp, #80]
  43205c:	add	sp, sp, #0x60
  432060:	ret
  432064:	sub	sp, sp, #0x60
  432068:	stp	x29, x30, [sp, #80]
  43206c:	add	x29, sp, #0x50
  432070:	add	x8, sp, #0x28
  432074:	stur	x0, [x29, #-16]
  432078:	stur	x1, [x29, #-24]
  43207c:	str	x8, [sp, #32]
  432080:	ldur	x8, [x29, #-16]
  432084:	ldr	x8, [x8]
  432088:	str	x8, [sp, #24]
  43208c:	ldur	x8, [x29, #-16]
  432090:	stur	x8, [x29, #-32]
  432094:	ldur	x0, [x29, #-24]
  432098:	ldur	x8, [x29, #-32]
  43209c:	add	x3, x8, #0x28
  4320a0:	mov	x8, xzr
  4320a4:	mov	x1, x8
  4320a8:	mov	x2, x8
  4320ac:	bl	42eb48 <_obstack_memory_used@@Base+0x7228>
  4320b0:	ldr	x8, [sp, #32]
  4320b4:	str	x0, [x8]
  4320b8:	ldr	x8, [sp, #32]
  4320bc:	ldr	x8, [x8]
  4320c0:	cbnz	x8, 4320d0 <_obstack_memory_used@@Base+0xa7b0>
  4320c4:	mov	x8, xzr
  4320c8:	stur	x8, [x29, #-8]
  4320cc:	b	4321c4 <_obstack_memory_used@@Base+0xa8a4>
  4320d0:	ldr	x8, [sp, #24]
  4320d4:	ldr	x9, [sp, #32]
  4320d8:	ldr	x9, [x9]
  4320dc:	str	x8, [x9]
  4320e0:	ldr	x8, [sp, #32]
  4320e4:	ldr	x8, [x8]
  4320e8:	ldr	w10, [x8, #48]
  4320ec:	and	w10, w10, #0xfffbffff
  4320f0:	orr	w10, w10, #0x40000
  4320f4:	str	w10, [x8, #48]
  4320f8:	ldr	x8, [sp, #32]
  4320fc:	ldr	x8, [x8]
  432100:	str	x8, [sp, #24]
  432104:	ldur	x8, [x29, #-32]
  432108:	ldr	x8, [x8, #8]
  43210c:	cbz	x8, 43212c <_obstack_memory_used@@Base+0xa80c>
  432110:	ldur	x8, [x29, #-32]
  432114:	ldr	x8, [x8, #8]
  432118:	stur	x8, [x29, #-32]
  43211c:	ldr	x8, [sp, #24]
  432120:	add	x8, x8, #0x8
  432124:	str	x8, [sp, #32]
  432128:	b	4321c0 <_obstack_memory_used@@Base+0xa8a0>
  43212c:	mov	x8, xzr
  432130:	str	x8, [sp, #16]
  432134:	ldur	x8, [x29, #-32]
  432138:	ldr	x8, [x8, #16]
  43213c:	ldr	x9, [sp, #16]
  432140:	mov	w10, #0x1                   	// #1
  432144:	cmp	x8, x9
  432148:	str	w10, [sp, #12]
  43214c:	b.eq	432164 <_obstack_memory_used@@Base+0xa844>  // b.none
  432150:	ldur	x8, [x29, #-32]
  432154:	ldr	x8, [x8, #16]
  432158:	cmp	x8, #0x0
  43215c:	cset	w9, eq  // eq = none
  432160:	str	w9, [sp, #12]
  432164:	ldr	w8, [sp, #12]
  432168:	tbnz	w8, #0, 432170 <_obstack_memory_used@@Base+0xa850>
  43216c:	b	4321a8 <_obstack_memory_used@@Base+0xa888>
  432170:	ldur	x8, [x29, #-32]
  432174:	str	x8, [sp, #16]
  432178:	ldur	x8, [x29, #-32]
  43217c:	ldr	x8, [x8]
  432180:	stur	x8, [x29, #-32]
  432184:	ldr	x8, [sp, #24]
  432188:	ldr	x8, [x8]
  43218c:	str	x8, [sp, #24]
  432190:	ldur	x8, [x29, #-32]
  432194:	cbnz	x8, 4321a4 <_obstack_memory_used@@Base+0xa884>
  432198:	ldr	x8, [sp, #40]
  43219c:	stur	x8, [x29, #-8]
  4321a0:	b	4321c4 <_obstack_memory_used@@Base+0xa8a4>
  4321a4:	b	432134 <_obstack_memory_used@@Base+0xa814>
  4321a8:	ldur	x8, [x29, #-32]
  4321ac:	ldr	x8, [x8, #16]
  4321b0:	stur	x8, [x29, #-32]
  4321b4:	ldr	x8, [sp, #24]
  4321b8:	add	x8, x8, #0x10
  4321bc:	str	x8, [sp, #32]
  4321c0:	b	432094 <_obstack_memory_used@@Base+0xa774>
  4321c4:	ldur	x0, [x29, #-8]
  4321c8:	ldp	x29, x30, [sp, #80]
  4321cc:	add	sp, sp, #0x60
  4321d0:	ret
  4321d4:	sub	sp, sp, #0x20
  4321d8:	str	x0, [sp, #24]
  4321dc:	str	x1, [sp, #16]
  4321e0:	ldr	x8, [sp, #24]
  4321e4:	str	x8, [sp, #8]
  4321e8:	ldr	x8, [sp, #16]
  4321ec:	ldr	w9, [x8, #48]
  4321f0:	and	w9, w9, #0xff
  4321f4:	cmp	w9, #0x11
  4321f8:	b.ne	432224 <_obstack_memory_used@@Base+0xa904>  // b.any
  4321fc:	ldr	x8, [sp, #16]
  432200:	ldr	x8, [x8, #40]
  432204:	ldr	x9, [sp, #8]
  432208:	cmp	x8, x9
  43220c:	b.ne	432224 <_obstack_memory_used@@Base+0xa904>  // b.any
  432210:	ldr	x8, [sp, #16]
  432214:	ldr	w9, [x8, #48]
  432218:	and	w9, w9, #0xfff7ffff
  43221c:	orr	w9, w9, #0x80000
  432220:	str	w9, [x8, #48]
  432224:	mov	w8, wzr
  432228:	mov	w0, w8
  43222c:	add	sp, sp, #0x20
  432230:	ret
  432234:	sub	sp, sp, #0x50
  432238:	stp	x29, x30, [sp, #64]
  43223c:	add	x29, sp, #0x40
  432240:	stur	x0, [x29, #-16]
  432244:	stur	x1, [x29, #-24]
  432248:	str	x2, [sp, #32]
  43224c:	ldur	x8, [x29, #-16]
  432250:	str	x8, [sp, #24]
  432254:	ldur	x8, [x29, #-24]
  432258:	ldr	x0, [sp, #32]
  43225c:	ldr	x1, [sp, #24]
  432260:	blr	x8
  432264:	str	w0, [sp, #20]
  432268:	ldr	w9, [sp, #20]
  43226c:	cmp	w9, #0x0
  432270:	cset	w9, ne  // ne = any
  432274:	and	w9, w9, #0x1
  432278:	mov	w1, w9
  43227c:	sxtw	x8, w1
  432280:	cbz	x8, 432290 <_obstack_memory_used@@Base+0xa970>
  432284:	ldr	w8, [sp, #20]
  432288:	stur	w8, [x29, #-4]
  43228c:	b	432328 <_obstack_memory_used@@Base+0xaa08>
  432290:	ldr	x8, [sp, #24]
  432294:	ldr	x8, [x8, #8]
  432298:	cbz	x8, 4322ac <_obstack_memory_used@@Base+0xa98c>
  43229c:	ldr	x8, [sp, #24]
  4322a0:	ldr	x8, [x8, #8]
  4322a4:	str	x8, [sp, #24]
  4322a8:	b	432324 <_obstack_memory_used@@Base+0xaa04>
  4322ac:	mov	x8, xzr
  4322b0:	str	x8, [sp, #8]
  4322b4:	ldr	x8, [sp, #24]
  4322b8:	ldr	x8, [x8, #16]
  4322bc:	ldr	x9, [sp, #8]
  4322c0:	mov	w10, #0x1                   	// #1
  4322c4:	cmp	x8, x9
  4322c8:	str	w10, [sp, #4]
  4322cc:	b.eq	4322e4 <_obstack_memory_used@@Base+0xa9c4>  // b.none
  4322d0:	ldr	x8, [sp, #24]
  4322d4:	ldr	x8, [x8, #16]
  4322d8:	cmp	x8, #0x0
  4322dc:	cset	w9, eq  // eq = none
  4322e0:	str	w9, [sp, #4]
  4322e4:	ldr	w8, [sp, #4]
  4322e8:	tbnz	w8, #0, 4322f0 <_obstack_memory_used@@Base+0xa9d0>
  4322ec:	b	432318 <_obstack_memory_used@@Base+0xa9f8>
  4322f0:	ldr	x8, [sp, #24]
  4322f4:	str	x8, [sp, #8]
  4322f8:	ldr	x8, [sp, #24]
  4322fc:	ldr	x8, [x8]
  432300:	str	x8, [sp, #24]
  432304:	ldr	x8, [sp, #24]
  432308:	cbnz	x8, 432314 <_obstack_memory_used@@Base+0xa9f4>
  43230c:	stur	wzr, [x29, #-4]
  432310:	b	432328 <_obstack_memory_used@@Base+0xaa08>
  432314:	b	4322b4 <_obstack_memory_used@@Base+0xa994>
  432318:	ldr	x8, [sp, #24]
  43231c:	ldr	x8, [x8, #16]
  432320:	str	x8, [sp, #24]
  432324:	b	432254 <_obstack_memory_used@@Base+0xa934>
  432328:	ldur	w0, [x29, #-4]
  43232c:	ldp	x29, x30, [sp, #64]
  432330:	add	sp, sp, #0x50
  432334:	ret
  432338:	sub	sp, sp, #0x30
  43233c:	str	x0, [sp, #40]
  432340:	str	x1, [sp, #32]
  432344:	ldr	x8, [sp, #40]
  432348:	str	x8, [sp, #24]
  43234c:	ldr	x8, [sp, #32]
  432350:	ldr	w9, [x8, #48]
  432354:	and	w9, w9, #0xff
  432358:	cmp	w9, #0x4
  43235c:	b.ne	4323bc <_obstack_memory_used@@Base+0xaa9c>  // b.any
  432360:	ldr	x8, [sp, #24]
  432364:	ldr	x8, [x8, #224]
  432368:	cbz	x8, 4323bc <_obstack_memory_used@@Base+0xaa9c>
  43236c:	ldr	x8, [sp, #32]
  432370:	ldr	x8, [x8, #40]
  432374:	str	w8, [sp, #20]
  432378:	ldr	x9, [sp, #24]
  43237c:	ldr	x9, [x9, #224]
  432380:	ldrsw	x10, [sp, #20]
  432384:	ldr	x9, [x9, x10, lsl #3]
  432388:	ldr	x10, [sp, #32]
  43238c:	str	x9, [x10, #40]
  432390:	ldr	x9, [sp, #32]
  432394:	ldr	x9, [x9, #40]
  432398:	mov	w8, #0x1                   	// #1
  43239c:	lsl	w8, w8, w9
  4323a0:	mov	w0, w8
  4323a4:	sxtw	x10, w0
  4323a8:	ldr	x11, [sp, #24]
  4323ac:	ldr	x12, [x11, #160]
  4323b0:	orr	x10, x12, x10
  4323b4:	str	x10, [x11, #160]
  4323b8:	b	432480 <_obstack_memory_used@@Base+0xab60>
  4323bc:	ldr	x8, [sp, #32]
  4323c0:	ldr	w9, [x8, #48]
  4323c4:	and	w9, w9, #0xff
  4323c8:	cmp	w9, #0x11
  4323cc:	b.ne	432480 <_obstack_memory_used@@Base+0xab60>  // b.any
  4323d0:	ldr	x8, [sp, #32]
  4323d4:	ldr	x8, [x8, #8]
  4323d8:	cbz	x8, 432480 <_obstack_memory_used@@Base+0xab60>
  4323dc:	ldr	x8, [sp, #32]
  4323e0:	ldr	x8, [x8, #8]
  4323e4:	ldr	w9, [x8, #48]
  4323e8:	and	w9, w9, #0xff
  4323ec:	cmp	w9, #0x11
  4323f0:	b.ne	432480 <_obstack_memory_used@@Base+0xab60>  // b.any
  4323f4:	ldr	x8, [sp, #32]
  4323f8:	ldr	x8, [x8, #8]
  4323fc:	ldr	x8, [x8, #40]
  432400:	str	x8, [sp, #8]
  432404:	ldr	x8, [sp, #32]
  432408:	ldr	x8, [x8, #8]
  43240c:	ldr	x8, [x8, #8]
  432410:	ldr	x9, [sp, #32]
  432414:	str	x8, [x9, #8]
  432418:	ldr	x8, [sp, #32]
  43241c:	ldr	x8, [x8, #8]
  432420:	cbz	x8, 432434 <_obstack_memory_used@@Base+0xab14>
  432424:	ldr	x8, [sp, #32]
  432428:	ldr	x9, [sp, #32]
  43242c:	ldr	x9, [x9, #8]
  432430:	str	x8, [x9]
  432434:	ldr	x8, [sp, #24]
  432438:	ldr	x8, [x8, #224]
  43243c:	ldr	x9, [sp, #32]
  432440:	ldr	x9, [x9, #40]
  432444:	ldr	x8, [x8, x9, lsl #3]
  432448:	ldr	x9, [sp, #24]
  43244c:	ldr	x9, [x9, #224]
  432450:	ldr	x10, [sp, #8]
  432454:	str	x8, [x9, x10, lsl #3]
  432458:	ldr	x8, [sp, #8]
  43245c:	cmp	x8, #0x40
  432460:	b.ge	432480 <_obstack_memory_used@@Base+0xab60>  // b.tcont
  432464:	ldr	x8, [sp, #8]
  432468:	mov	x9, #0x1                   	// #1
  43246c:	lsl	x8, x9, x8
  432470:	ldr	x9, [sp, #24]
  432474:	ldr	x10, [x9, #160]
  432478:	bic	x8, x10, x8
  43247c:	str	x8, [x9, #160]
  432480:	mov	w8, wzr
  432484:	mov	w0, w8
  432488:	add	sp, sp, #0x30
  43248c:	ret
  432490:	sub	sp, sp, #0x30
  432494:	stp	x29, x30, [sp, #32]
  432498:	add	x29, sp, #0x20
  43249c:	stur	x0, [x29, #-8]
  4324a0:	str	x1, [sp, #16]
  4324a4:	ldur	x8, [x29, #-8]
  4324a8:	str	x8, [sp, #8]
  4324ac:	str	wzr, [sp, #4]
  4324b0:	ldr	x8, [sp, #16]
  4324b4:	ldr	x8, [x8, #8]
  4324b8:	cbz	x8, 43250c <_obstack_memory_used@@Base+0xabec>
  4324bc:	ldr	x8, [sp, #16]
  4324c0:	ldr	x8, [x8, #8]
  4324c4:	ldr	w9, [x8, #48]
  4324c8:	and	w9, w9, #0xff
  4324cc:	cmp	w9, #0x11
  4324d0:	b.ne	43250c <_obstack_memory_used@@Base+0xabec>  // b.any
  4324d4:	ldr	x1, [sp, #8]
  4324d8:	ldr	x8, [sp, #16]
  4324dc:	ldr	x2, [x8, #8]
  4324e0:	add	x0, sp, #0x4
  4324e4:	bl	432c18 <_obstack_memory_used@@Base+0xb2f8>
  4324e8:	ldr	x8, [sp, #16]
  4324ec:	str	x0, [x8, #8]
  4324f0:	ldr	x8, [sp, #16]
  4324f4:	ldr	x8, [x8, #8]
  4324f8:	cbz	x8, 43250c <_obstack_memory_used@@Base+0xabec>
  4324fc:	ldr	x8, [sp, #16]
  432500:	ldr	x9, [sp, #16]
  432504:	ldr	x9, [x9, #8]
  432508:	str	x8, [x9]
  43250c:	ldr	x8, [sp, #16]
  432510:	ldr	x8, [x8, #16]
  432514:	cbz	x8, 432568 <_obstack_memory_used@@Base+0xac48>
  432518:	ldr	x8, [sp, #16]
  43251c:	ldr	x8, [x8, #16]
  432520:	ldr	w9, [x8, #48]
  432524:	and	w9, w9, #0xff
  432528:	cmp	w9, #0x11
  43252c:	b.ne	432568 <_obstack_memory_used@@Base+0xac48>  // b.any
  432530:	ldr	x1, [sp, #8]
  432534:	ldr	x8, [sp, #16]
  432538:	ldr	x2, [x8, #16]
  43253c:	add	x0, sp, #0x4
  432540:	bl	432c18 <_obstack_memory_used@@Base+0xb2f8>
  432544:	ldr	x8, [sp, #16]
  432548:	str	x0, [x8, #16]
  43254c:	ldr	x8, [sp, #16]
  432550:	ldr	x8, [x8, #16]
  432554:	cbz	x8, 432568 <_obstack_memory_used@@Base+0xac48>
  432558:	ldr	x8, [sp, #16]
  43255c:	ldr	x9, [sp, #16]
  432560:	ldr	x9, [x9, #16]
  432564:	str	x8, [x9]
  432568:	ldr	w0, [sp, #4]
  43256c:	ldp	x29, x30, [sp, #32]
  432570:	add	sp, sp, #0x30
  432574:	ret
  432578:	sub	sp, sp, #0x30
  43257c:	stp	x29, x30, [sp, #32]
  432580:	add	x29, sp, #0x20
  432584:	str	x0, [sp, #16]
  432588:	str	x1, [sp, #8]
  43258c:	ldr	x8, [sp, #16]
  432590:	str	x8, [sp]
  432594:	ldr	x8, [sp, #8]
  432598:	ldr	w9, [x8, #48]
  43259c:	and	w9, w9, #0xff
  4325a0:	cmp	w9, #0x10
  4325a4:	b.ne	4325d4 <_obstack_memory_used@@Base+0xacb4>  // b.any
  4325a8:	ldr	x8, [sp, #8]
  4325ac:	ldr	x8, [x8, #8]
  4325b0:	ldr	x8, [x8, #24]
  4325b4:	ldr	x9, [sp, #8]
  4325b8:	str	x8, [x9, #24]
  4325bc:	ldr	x8, [sp, #8]
  4325c0:	ldr	x8, [x8, #8]
  4325c4:	ldr	x8, [x8, #56]
  4325c8:	ldr	x9, [sp, #8]
  4325cc:	str	x8, [x9, #56]
  4325d0:	b	432678 <_obstack_memory_used@@Base+0xad58>
  4325d4:	ldr	x8, [sp, #8]
  4325d8:	ldr	x9, [sp, #8]
  4325dc:	str	x8, [x9, #24]
  4325e0:	ldr	x0, [sp]
  4325e4:	ldr	x8, [sp, #8]
  4325e8:	ldr	x1, [x8, #40]
  4325ec:	ldr	x2, [x8, #48]
  4325f0:	bl	432e14 <_obstack_memory_used@@Base+0xb4f4>
  4325f4:	ldr	x8, [sp, #8]
  4325f8:	str	x0, [x8, #56]
  4325fc:	ldr	x8, [sp, #8]
  432600:	ldr	x8, [x8, #56]
  432604:	mov	x9, #0xffffffffffffffff    	// #-1
  432608:	cmp	x8, x9
  43260c:	cset	w10, eq  // eq = none
  432610:	and	w10, w10, #0x1
  432614:	mov	w0, w10
  432618:	sxtw	x8, w0
  43261c:	cbz	x8, 43262c <_obstack_memory_used@@Base+0xad0c>
  432620:	mov	w8, #0xc                   	// #12
  432624:	stur	w8, [x29, #-4]
  432628:	b	43267c <_obstack_memory_used@@Base+0xad5c>
  43262c:	ldr	x8, [sp, #8]
  432630:	ldr	w9, [x8, #48]
  432634:	and	w9, w9, #0xff
  432638:	cmp	w9, #0xc
  43263c:	b.ne	432678 <_obstack_memory_used@@Base+0xad58>  // b.any
  432640:	ldr	x8, [sp, #8]
  432644:	ldr	w9, [x8, #40]
  432648:	ldr	x8, [sp]
  43264c:	ldr	x8, [x8]
  432650:	ldr	x10, [sp, #8]
  432654:	ldr	x10, [x10, #56]
  432658:	mov	x11, #0x10                  	// #16
  43265c:	mul	x10, x11, x10
  432660:	add	x8, x8, x10
  432664:	ldr	w12, [x8, #8]
  432668:	and	w9, w9, #0x3ff
  43266c:	and	w12, w12, #0xfffc00ff
  432670:	orr	w9, w12, w9, lsl #8
  432674:	str	w9, [x8, #8]
  432678:	stur	wzr, [x29, #-4]
  43267c:	ldur	w0, [x29, #-4]
  432680:	ldp	x29, x30, [sp, #32]
  432684:	add	sp, sp, #0x30
  432688:	ret
  43268c:	sub	sp, sp, #0x20
  432690:	str	x0, [sp, #24]
  432694:	str	x1, [sp, #16]
  432698:	ldr	x8, [sp, #16]
  43269c:	ldr	w9, [x8, #48]
  4326a0:	and	w9, w9, #0xff
  4326a4:	cmp	w9, #0xb
  4326a8:	str	w9, [sp, #12]
  4326ac:	b.eq	4326c4 <_obstack_memory_used@@Base+0xada4>  // b.none
  4326b0:	b	4326b4 <_obstack_memory_used@@Base+0xad94>
  4326b4:	ldr	w8, [sp, #12]
  4326b8:	cmp	w8, #0x10
  4326bc:	b.eq	4326d8 <_obstack_memory_used@@Base+0xadb8>  // b.none
  4326c0:	b	432708 <_obstack_memory_used@@Base+0xade8>
  4326c4:	ldr	x8, [sp, #16]
  4326c8:	ldr	x9, [sp, #16]
  4326cc:	ldr	x9, [x9, #8]
  4326d0:	str	x8, [x9, #32]
  4326d4:	b	432748 <_obstack_memory_used@@Base+0xae28>
  4326d8:	ldr	x8, [sp, #16]
  4326dc:	ldr	x8, [x8, #16]
  4326e0:	ldr	x8, [x8, #24]
  4326e4:	ldr	x9, [sp, #16]
  4326e8:	ldr	x9, [x9, #8]
  4326ec:	str	x8, [x9, #32]
  4326f0:	ldr	x8, [sp, #16]
  4326f4:	ldr	x8, [x8, #32]
  4326f8:	ldr	x9, [sp, #16]
  4326fc:	ldr	x9, [x9, #16]
  432700:	str	x8, [x9, #32]
  432704:	b	432748 <_obstack_memory_used@@Base+0xae28>
  432708:	ldr	x8, [sp, #16]
  43270c:	ldr	x8, [x8, #8]
  432710:	cbz	x8, 432728 <_obstack_memory_used@@Base+0xae08>
  432714:	ldr	x8, [sp, #16]
  432718:	ldr	x8, [x8, #32]
  43271c:	ldr	x9, [sp, #16]
  432720:	ldr	x9, [x9, #8]
  432724:	str	x8, [x9, #32]
  432728:	ldr	x8, [sp, #16]
  43272c:	ldr	x8, [x8, #16]
  432730:	cbz	x8, 432748 <_obstack_memory_used@@Base+0xae28>
  432734:	ldr	x8, [sp, #16]
  432738:	ldr	x8, [x8, #32]
  43273c:	ldr	x9, [sp, #16]
  432740:	ldr	x9, [x9, #16]
  432744:	str	x8, [x9, #32]
  432748:	mov	w8, wzr
  43274c:	mov	w0, w8
  432750:	add	sp, sp, #0x20
  432754:	ret
  432758:	sub	sp, sp, #0x50
  43275c:	stp	x29, x30, [sp, #64]
  432760:	add	x29, sp, #0x40
  432764:	stur	x0, [x29, #-8]
  432768:	stur	x1, [x29, #-16]
  43276c:	ldur	x8, [x29, #-8]
  432770:	stur	x8, [x29, #-24]
  432774:	ldur	x8, [x29, #-16]
  432778:	ldr	x8, [x8, #56]
  43277c:	str	x8, [sp, #32]
  432780:	str	wzr, [sp, #28]
  432784:	ldur	x8, [x29, #-16]
  432788:	ldr	w9, [x8, #48]
  43278c:	and	w9, w9, #0xff
  432790:	subs	w9, w9, #0x2
  432794:	mov	w8, w9
  432798:	ubfx	x8, x8, #0, #32
  43279c:	cmp	x8, #0xe
  4327a0:	str	x8, [sp]
  4327a4:	b.hi	43293c <_obstack_memory_used@@Base+0xb01c>  // b.pmore
  4327a8:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4327ac:	add	x8, x8, #0x89c
  4327b0:	ldr	x11, [sp]
  4327b4:	ldrsw	x10, [x8, x11, lsl #2]
  4327b8:	add	x9, x8, x10
  4327bc:	br	x9
  4327c0:	b	432970 <_obstack_memory_used@@Base+0xb050>
  4327c4:	ldur	x8, [x29, #-16]
  4327c8:	ldr	x8, [x8, #32]
  4327cc:	cbnz	x8, 4327d4 <_obstack_memory_used@@Base+0xaeb4>
  4327d0:	b	4327d4 <_obstack_memory_used@@Base+0xaeb4>
  4327d4:	b	432970 <_obstack_memory_used@@Base+0xb050>
  4327d8:	ldur	x8, [x29, #-24]
  4327dc:	ldrb	w9, [x8, #176]
  4327e0:	and	w9, w9, #0xfffffffe
  4327e4:	orr	w9, w9, #0x1
  4327e8:	strb	w9, [x8, #176]
  4327ec:	ldur	x8, [x29, #-16]
  4327f0:	ldr	x8, [x8, #8]
  4327f4:	cbz	x8, 432810 <_obstack_memory_used@@Base+0xaef0>
  4327f8:	ldur	x8, [x29, #-16]
  4327fc:	ldr	x8, [x8, #8]
  432800:	ldr	x8, [x8, #24]
  432804:	ldr	x8, [x8, #56]
  432808:	str	x8, [sp, #16]
  43280c:	b	432820 <_obstack_memory_used@@Base+0xaf00>
  432810:	ldur	x8, [x29, #-16]
  432814:	ldr	x8, [x8, #32]
  432818:	ldr	x8, [x8, #56]
  43281c:	str	x8, [sp, #16]
  432820:	ldur	x8, [x29, #-16]
  432824:	ldr	x8, [x8, #16]
  432828:	cbz	x8, 432844 <_obstack_memory_used@@Base+0xaf24>
  43282c:	ldur	x8, [x29, #-16]
  432830:	ldr	x8, [x8, #16]
  432834:	ldr	x8, [x8, #24]
  432838:	ldr	x8, [x8, #56]
  43283c:	str	x8, [sp, #8]
  432840:	b	432854 <_obstack_memory_used@@Base+0xaf34>
  432844:	ldur	x8, [x29, #-16]
  432848:	ldr	x8, [x8, #32]
  43284c:	ldr	x8, [x8, #56]
  432850:	str	x8, [sp, #8]
  432854:	ldr	x8, [sp, #16]
  432858:	mov	x9, #0xffffffffffffffff    	// #-1
  43285c:	cmp	x8, x9
  432860:	b.le	432868 <_obstack_memory_used@@Base+0xaf48>
  432864:	b	432868 <_obstack_memory_used@@Base+0xaf48>
  432868:	ldr	x8, [sp, #8]
  43286c:	mov	x9, #0xffffffffffffffff    	// #-1
  432870:	cmp	x8, x9
  432874:	b.le	43287c <_obstack_memory_used@@Base+0xaf5c>
  432878:	b	43287c <_obstack_memory_used@@Base+0xaf5c>
  43287c:	ldur	x8, [x29, #-24]
  432880:	ldr	x8, [x8, #40]
  432884:	ldr	x9, [sp, #32]
  432888:	mov	x10, #0x18                  	// #24
  43288c:	mul	x9, x10, x9
  432890:	add	x0, x8, x9
  432894:	ldr	x1, [sp, #16]
  432898:	ldr	x2, [sp, #8]
  43289c:	bl	433160 <_obstack_memory_used@@Base+0xb840>
  4328a0:	str	w0, [sp, #28]
  4328a4:	b	432970 <_obstack_memory_used@@Base+0xb050>
  4328a8:	ldur	x8, [x29, #-24]
  4328ac:	ldr	x8, [x8, #40]
  4328b0:	ldr	x9, [sp, #32]
  4328b4:	mov	x10, #0x18                  	// #24
  4328b8:	mul	x9, x10, x9
  4328bc:	add	x0, x8, x9
  4328c0:	ldur	x8, [x29, #-16]
  4328c4:	ldr	x8, [x8, #32]
  4328c8:	ldr	x1, [x8, #56]
  4328cc:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  4328d0:	str	w0, [sp, #28]
  4328d4:	b	432970 <_obstack_memory_used@@Base+0xb050>
  4328d8:	ldur	x8, [x29, #-16]
  4328dc:	ldr	x8, [x8, #32]
  4328e0:	ldr	x8, [x8, #56]
  4328e4:	ldur	x9, [x29, #-24]
  4328e8:	ldr	x9, [x9, #24]
  4328ec:	ldr	x10, [sp, #32]
  4328f0:	str	x8, [x9, x10, lsl #3]
  4328f4:	ldur	x8, [x29, #-16]
  4328f8:	ldr	w11, [x8, #48]
  4328fc:	and	w11, w11, #0xff
  432900:	cmp	w11, #0x4
  432904:	b.ne	432938 <_obstack_memory_used@@Base+0xb018>  // b.any
  432908:	ldur	x8, [x29, #-24]
  43290c:	ldr	x8, [x8, #40]
  432910:	ldr	x9, [sp, #32]
  432914:	mov	x10, #0x18                  	// #24
  432918:	mul	x9, x10, x9
  43291c:	add	x0, x8, x9
  432920:	ldur	x8, [x29, #-24]
  432924:	ldr	x8, [x8, #24]
  432928:	ldr	x9, [sp, #32]
  43292c:	ldr	x1, [x8, x9, lsl #3]
  432930:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  432934:	str	w0, [sp, #28]
  432938:	b	432970 <_obstack_memory_used@@Base+0xb050>
  43293c:	ldur	x8, [x29, #-16]
  432940:	ldr	w9, [x8, #48]
  432944:	and	w9, w9, #0xff
  432948:	and	w9, w9, #0x8
  43294c:	cbnz	w9, 432954 <_obstack_memory_used@@Base+0xb034>
  432950:	b	432954 <_obstack_memory_used@@Base+0xb034>
  432954:	ldur	x8, [x29, #-16]
  432958:	ldr	x8, [x8, #32]
  43295c:	ldr	x8, [x8, #56]
  432960:	ldur	x9, [x29, #-24]
  432964:	ldr	x9, [x9, #24]
  432968:	ldr	x10, [sp, #32]
  43296c:	str	x8, [x9, x10, lsl #3]
  432970:	ldr	w0, [sp, #28]
  432974:	ldp	x29, x30, [sp, #64]
  432978:	add	sp, sp, #0x50
  43297c:	ret
  432980:	sub	sp, sp, #0x50
  432984:	stp	x29, x30, [sp, #64]
  432988:	add	x29, sp, #0x40
  43298c:	stur	x0, [x29, #-16]
  432990:	ldur	x8, [x29, #-16]
  432994:	ldr	x8, [x8, #16]
  432998:	cmp	x8, #0x0
  43299c:	cset	w9, ls  // ls = plast
  4329a0:	tbnz	w9, #0, 4329a8 <_obstack_memory_used@@Base+0xb088>
  4329a4:	b	4329a8 <_obstack_memory_used@@Base+0xb088>
  4329a8:	mov	w8, #0x0                   	// #0
  4329ac:	sturb	w8, [x29, #-25]
  4329b0:	stur	xzr, [x29, #-24]
  4329b4:	ldur	x8, [x29, #-24]
  4329b8:	ldur	x9, [x29, #-16]
  4329bc:	ldr	x9, [x9, #16]
  4329c0:	cmp	x8, x9
  4329c4:	b.ne	4329e0 <_obstack_memory_used@@Base+0xb0c0>  // b.any
  4329c8:	ldurb	w8, [x29, #-25]
  4329cc:	tbnz	w8, #0, 4329d4 <_obstack_memory_used@@Base+0xb0b4>
  4329d0:	b	432ab8 <_obstack_memory_used@@Base+0xb198>
  4329d4:	mov	w8, #0x0                   	// #0
  4329d8:	sturb	w8, [x29, #-25]
  4329dc:	stur	xzr, [x29, #-24]
  4329e0:	ldur	x8, [x29, #-16]
  4329e4:	ldr	x8, [x8, #48]
  4329e8:	ldur	x9, [x29, #-24]
  4329ec:	mov	x10, #0x18                  	// #24
  4329f0:	mul	x9, x10, x9
  4329f4:	add	x8, x8, x9
  4329f8:	ldr	x8, [x8, #8]
  4329fc:	mov	x9, #0xffffffffffffffff    	// #-1
  432a00:	cmp	x8, x9
  432a04:	b.eq	432a0c <_obstack_memory_used@@Base+0xb0ec>  // b.none
  432a08:	b	432a0c <_obstack_memory_used@@Base+0xb0ec>
  432a0c:	ldur	x8, [x29, #-16]
  432a10:	ldr	x8, [x8, #48]
  432a14:	ldur	x9, [x29, #-24]
  432a18:	mov	x10, #0x18                  	// #24
  432a1c:	mul	x9, x10, x9
  432a20:	add	x8, x8, x9
  432a24:	ldr	x8, [x8, #8]
  432a28:	cbz	x8, 432a30 <_obstack_memory_used@@Base+0xb110>
  432a2c:	b	432aa8 <_obstack_memory_used@@Base+0xb188>
  432a30:	ldur	x1, [x29, #-16]
  432a34:	ldur	x2, [x29, #-24]
  432a38:	add	x0, sp, #0x8
  432a3c:	mov	w8, #0x1                   	// #1
  432a40:	and	w3, w8, #0x1
  432a44:	bl	433304 <_obstack_memory_used@@Base+0xb9e4>
  432a48:	str	w0, [sp, #32]
  432a4c:	ldr	w8, [sp, #32]
  432a50:	cmp	w8, #0x0
  432a54:	cset	w8, ne  // ne = any
  432a58:	and	w8, w8, #0x1
  432a5c:	mov	w1, w8
  432a60:	sxtw	x9, w1
  432a64:	cbz	x9, 432a74 <_obstack_memory_used@@Base+0xb154>
  432a68:	ldr	w8, [sp, #32]
  432a6c:	stur	w8, [x29, #-4]
  432a70:	b	432abc <_obstack_memory_used@@Base+0xb19c>
  432a74:	ldur	x8, [x29, #-16]
  432a78:	ldr	x8, [x8, #48]
  432a7c:	ldur	x9, [x29, #-24]
  432a80:	mov	x10, #0x18                  	// #24
  432a84:	mul	x9, x10, x9
  432a88:	add	x8, x8, x9
  432a8c:	ldr	x8, [x8, #8]
  432a90:	cbnz	x8, 432aa8 <_obstack_memory_used@@Base+0xb188>
  432a94:	mov	w8, #0x1                   	// #1
  432a98:	sturb	w8, [x29, #-25]
  432a9c:	add	x9, sp, #0x8
  432aa0:	ldr	x0, [x9, #16]
  432aa4:	bl	4026c0 <free@plt>
  432aa8:	ldur	x8, [x29, #-24]
  432aac:	add	x8, x8, #0x1
  432ab0:	stur	x8, [x29, #-24]
  432ab4:	b	4329b4 <_obstack_memory_used@@Base+0xb094>
  432ab8:	stur	wzr, [x29, #-4]
  432abc:	ldur	w0, [x29, #-4]
  432ac0:	ldp	x29, x30, [sp, #64]
  432ac4:	add	sp, sp, #0x50
  432ac8:	ret
  432acc:	sub	sp, sp, #0x40
  432ad0:	stp	x29, x30, [sp, #48]
  432ad4:	add	x29, sp, #0x30
  432ad8:	stur	x0, [x29, #-16]
  432adc:	str	xzr, [sp, #16]
  432ae0:	ldr	x8, [sp, #16]
  432ae4:	ldur	x9, [x29, #-16]
  432ae8:	ldr	x9, [x9, #16]
  432aec:	cmp	x8, x9
  432af0:	b.cs	432b28 <_obstack_memory_used@@Base+0xb208>  // b.hs, b.nlast
  432af4:	ldur	x8, [x29, #-16]
  432af8:	ldr	x8, [x8, #56]
  432afc:	ldr	x9, [sp, #16]
  432b00:	mov	x10, #0x18                  	// #24
  432b04:	mul	x9, x10, x9
  432b08:	add	x8, x8, x9
  432b0c:	str	xzr, [x8]
  432b10:	str	xzr, [x8, #8]
  432b14:	str	xzr, [x8, #16]
  432b18:	ldr	x8, [sp, #16]
  432b1c:	add	x8, x8, #0x1
  432b20:	str	x8, [sp, #16]
  432b24:	b	432ae0 <_obstack_memory_used@@Base+0xb1c0>
  432b28:	str	xzr, [sp, #24]
  432b2c:	ldr	x8, [sp, #24]
  432b30:	ldur	x9, [x29, #-16]
  432b34:	ldr	x9, [x9, #16]
  432b38:	cmp	x8, x9
  432b3c:	b.cs	432c04 <_obstack_memory_used@@Base+0xb2e4>  // b.hs, b.nlast
  432b40:	ldur	x8, [x29, #-16]
  432b44:	ldr	x8, [x8, #48]
  432b48:	ldr	x9, [sp, #24]
  432b4c:	mov	x10, #0x18                  	// #24
  432b50:	mul	x9, x10, x9
  432b54:	add	x8, x8, x9
  432b58:	ldr	x8, [x8, #16]
  432b5c:	str	x8, [sp]
  432b60:	str	xzr, [sp, #16]
  432b64:	ldr	x8, [sp, #16]
  432b68:	ldur	x9, [x29, #-16]
  432b6c:	ldr	x9, [x9, #48]
  432b70:	ldr	x10, [sp, #24]
  432b74:	mov	x11, #0x18                  	// #24
  432b78:	mul	x10, x11, x10
  432b7c:	add	x9, x9, x10
  432b80:	ldr	x9, [x9, #8]
  432b84:	cmp	x8, x9
  432b88:	b.ge	432bf4 <_obstack_memory_used@@Base+0xb2d4>  // b.tcont
  432b8c:	ldur	x8, [x29, #-16]
  432b90:	ldr	x8, [x8, #56]
  432b94:	ldr	x9, [sp]
  432b98:	ldr	x10, [sp, #16]
  432b9c:	ldr	x9, [x9, x10, lsl #3]
  432ba0:	mov	x10, #0x18                  	// #24
  432ba4:	mul	x9, x10, x9
  432ba8:	add	x0, x8, x9
  432bac:	ldr	x1, [sp, #24]
  432bb0:	bl	434594 <_obstack_memory_used@@Base+0xcc74>
  432bb4:	mov	w11, #0x1                   	// #1
  432bb8:	and	w11, w0, w11
  432bbc:	strb	w11, [sp, #15]
  432bc0:	ldrb	w11, [sp, #15]
  432bc4:	eor	w11, w11, #0x1
  432bc8:	and	w11, w11, #0x1
  432bcc:	mov	w1, w11
  432bd0:	sxtw	x8, w1
  432bd4:	cbz	x8, 432be4 <_obstack_memory_used@@Base+0xb2c4>
  432bd8:	mov	w8, #0xc                   	// #12
  432bdc:	stur	w8, [x29, #-4]
  432be0:	b	432c08 <_obstack_memory_used@@Base+0xb2e8>
  432be4:	ldr	x8, [sp, #16]
  432be8:	add	x8, x8, #0x1
  432bec:	str	x8, [sp, #16]
  432bf0:	b	432b64 <_obstack_memory_used@@Base+0xb244>
  432bf4:	ldr	x8, [sp, #24]
  432bf8:	add	x8, x8, #0x1
  432bfc:	str	x8, [sp, #24]
  432c00:	b	432b2c <_obstack_memory_used@@Base+0xb20c>
  432c04:	stur	wzr, [x29, #-4]
  432c08:	ldur	w0, [x29, #-4]
  432c0c:	ldp	x29, x30, [sp, #48]
  432c10:	add	sp, sp, #0x40
  432c14:	ret
  432c18:	sub	sp, sp, #0x80
  432c1c:	stp	x29, x30, [sp, #112]
  432c20:	add	x29, sp, #0x70
  432c24:	mov	w8, #0x1                   	// #1
  432c28:	stur	x0, [x29, #-16]
  432c2c:	stur	x1, [x29, #-24]
  432c30:	stur	x2, [x29, #-32]
  432c34:	ldur	x9, [x29, #-24]
  432c38:	ldr	x9, [x9]
  432c3c:	stur	x9, [x29, #-40]
  432c40:	ldur	x9, [x29, #-32]
  432c44:	ldr	x9, [x9, #8]
  432c48:	stur	x9, [x29, #-48]
  432c4c:	ldur	x9, [x29, #-24]
  432c50:	ldrb	w10, [x9, #56]
  432c54:	mov	w11, #0x4                   	// #4
  432c58:	lsr	w10, w10, w11
  432c5c:	and	w8, w10, w8
  432c60:	and	w8, w8, #0xff
  432c64:	cbz	w8, 432cb4 <_obstack_memory_used@@Base+0xb394>
  432c68:	ldur	x8, [x29, #-32]
  432c6c:	ldr	x8, [x8, #8]
  432c70:	cbz	x8, 432cb4 <_obstack_memory_used@@Base+0xb394>
  432c74:	ldur	x8, [x29, #-32]
  432c78:	ldr	x8, [x8, #40]
  432c7c:	cmp	x8, #0x40
  432c80:	b.ge	432ca4 <_obstack_memory_used@@Base+0xb384>  // b.tcont
  432c84:	ldur	x8, [x29, #-40]
  432c88:	ldr	x8, [x8, #160]
  432c8c:	ldur	x9, [x29, #-32]
  432c90:	ldr	x9, [x9, #40]
  432c94:	mov	x10, #0x1                   	// #1
  432c98:	lsl	x9, x10, x9
  432c9c:	and	x8, x8, x9
  432ca0:	cbnz	x8, 432cb4 <_obstack_memory_used@@Base+0xb394>
  432ca4:	ldur	x8, [x29, #-32]
  432ca8:	ldr	x8, [x8, #8]
  432cac:	stur	x8, [x29, #-8]
  432cb0:	b	432e04 <_obstack_memory_used@@Base+0xb4e4>
  432cb4:	ldur	x0, [x29, #-40]
  432cb8:	mov	x8, xzr
  432cbc:	mov	x1, x8
  432cc0:	mov	x2, x8
  432cc4:	mov	w3, #0x8                   	// #8
  432cc8:	str	x8, [sp, #24]
  432ccc:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  432cd0:	str	x0, [sp, #56]
  432cd4:	ldur	x0, [x29, #-40]
  432cd8:	ldr	x1, [sp, #24]
  432cdc:	ldr	x2, [sp, #24]
  432ce0:	mov	w3, #0x9                   	// #9
  432ce4:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  432ce8:	str	x0, [sp, #48]
  432cec:	ldur	x8, [x29, #-48]
  432cf0:	cbz	x8, 432d10 <_obstack_memory_used@@Base+0xb3f0>
  432cf4:	ldur	x0, [x29, #-40]
  432cf8:	ldur	x1, [x29, #-48]
  432cfc:	ldr	x2, [sp, #48]
  432d00:	mov	w3, #0x10                  	// #16
  432d04:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  432d08:	str	x0, [sp, #16]
  432d0c:	b	432d18 <_obstack_memory_used@@Base+0xb3f8>
  432d10:	ldr	x8, [sp, #48]
  432d14:	str	x8, [sp, #16]
  432d18:	ldr	x8, [sp, #16]
  432d1c:	str	x8, [sp, #40]
  432d20:	ldur	x0, [x29, #-40]
  432d24:	ldr	x1, [sp, #56]
  432d28:	ldr	x2, [sp, #40]
  432d2c:	mov	w3, #0x10                  	// #16
  432d30:	bl	42d120 <_obstack_memory_used@@Base+0x5800>
  432d34:	str	x0, [sp, #32]
  432d38:	ldr	x8, [sp, #32]
  432d3c:	mov	w9, #0x1                   	// #1
  432d40:	str	w9, [sp, #12]
  432d44:	cbz	x8, 432d78 <_obstack_memory_used@@Base+0xb458>
  432d48:	ldr	x8, [sp, #40]
  432d4c:	mov	w9, #0x1                   	// #1
  432d50:	str	w9, [sp, #12]
  432d54:	cbz	x8, 432d78 <_obstack_memory_used@@Base+0xb458>
  432d58:	ldr	x8, [sp, #56]
  432d5c:	mov	w9, #0x1                   	// #1
  432d60:	str	w9, [sp, #12]
  432d64:	cbz	x8, 432d78 <_obstack_memory_used@@Base+0xb458>
  432d68:	ldr	x8, [sp, #48]
  432d6c:	cmp	x8, #0x0
  432d70:	cset	w9, eq  // eq = none
  432d74:	str	w9, [sp, #12]
  432d78:	ldr	w8, [sp, #12]
  432d7c:	and	w8, w8, #0x1
  432d80:	mov	w0, w8
  432d84:	sxtw	x9, w0
  432d88:	cbz	x9, 432da4 <_obstack_memory_used@@Base+0xb484>
  432d8c:	ldur	x8, [x29, #-16]
  432d90:	mov	w9, #0xc                   	// #12
  432d94:	str	w9, [x8]
  432d98:	mov	x8, xzr
  432d9c:	stur	x8, [x29, #-8]
  432da0:	b	432e04 <_obstack_memory_used@@Base+0xb4e4>
  432da4:	ldur	x8, [x29, #-32]
  432da8:	ldr	x8, [x8, #40]
  432dac:	ldr	x9, [sp, #48]
  432db0:	str	x8, [x9, #40]
  432db4:	ldr	x9, [sp, #56]
  432db8:	str	x8, [x9, #40]
  432dbc:	ldur	x8, [x29, #-32]
  432dc0:	ldr	w10, [x8, #48]
  432dc4:	lsr	w10, w10, #19
  432dc8:	and	w10, w10, #0x1
  432dcc:	ldr	x8, [sp, #48]
  432dd0:	ldr	w11, [x8, #48]
  432dd4:	and	w10, w10, #0x1
  432dd8:	and	w11, w11, #0xfff7ffff
  432ddc:	orr	w11, w11, w10, lsl #19
  432de0:	str	w11, [x8, #48]
  432de4:	ldr	x8, [sp, #56]
  432de8:	ldr	w11, [x8, #48]
  432dec:	and	w10, w10, #0x1
  432df0:	and	w11, w11, #0xfff7ffff
  432df4:	orr	w10, w11, w10, lsl #19
  432df8:	str	w10, [x8, #48]
  432dfc:	ldr	x8, [sp, #32]
  432e00:	stur	x8, [x29, #-8]
  432e04:	ldur	x0, [x29, #-8]
  432e08:	ldp	x29, x30, [sp, #112]
  432e0c:	add	sp, sp, #0x80
  432e10:	ret
  432e14:	sub	sp, sp, #0x80
  432e18:	stp	x29, x30, [sp, #112]
  432e1c:	add	x29, sp, #0x70
  432e20:	stur	x1, [x29, #-24]
  432e24:	stur	x2, [x29, #-16]
  432e28:	stur	x0, [x29, #-32]
  432e2c:	ldur	x8, [x29, #-32]
  432e30:	ldr	x8, [x8, #16]
  432e34:	ldur	x9, [x29, #-32]
  432e38:	ldr	x9, [x9, #8]
  432e3c:	cmp	x8, x9
  432e40:	cset	w10, cs  // cs = hs, nlast
  432e44:	and	w10, w10, #0x1
  432e48:	mov	w0, w10
  432e4c:	sxtw	x8, w0
  432e50:	cbz	x8, 433024 <_obstack_memory_used@@Base+0xb704>
  432e54:	ldur	x8, [x29, #-32]
  432e58:	ldr	x8, [x8, #8]
  432e5c:	mov	x9, #0x2                   	// #2
  432e60:	mul	x8, x8, x9
  432e64:	stur	x8, [x29, #-40]
  432e68:	mov	x8, #0x18                  	// #24
  432e6c:	str	x8, [sp, #24]
  432e70:	ldur	x8, [x29, #-40]
  432e74:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  432e78:	movk	x9, #0xaaa, lsl #48
  432e7c:	cmp	x9, x8
  432e80:	cset	w10, cc  // cc = lo, ul, last
  432e84:	and	w10, w10, #0x1
  432e88:	mov	w0, w10
  432e8c:	sxtw	x8, w0
  432e90:	cbz	x8, 432ea0 <_obstack_memory_used@@Base+0xb580>
  432e94:	mov	x8, #0xffffffffffffffff    	// #-1
  432e98:	stur	x8, [x29, #-8]
  432e9c:	b	433150 <_obstack_memory_used@@Base+0xb830>
  432ea0:	ldur	x8, [x29, #-32]
  432ea4:	ldr	x0, [x8]
  432ea8:	ldur	x8, [x29, #-40]
  432eac:	mov	x9, #0x10                  	// #16
  432eb0:	mul	x1, x8, x9
  432eb4:	bl	402570 <realloc@plt>
  432eb8:	str	x0, [sp, #32]
  432ebc:	ldr	x8, [sp, #32]
  432ec0:	cmp	x8, #0x0
  432ec4:	cset	w10, eq  // eq = none
  432ec8:	and	w10, w10, #0x1
  432ecc:	mov	w0, w10
  432ed0:	sxtw	x8, w0
  432ed4:	cbz	x8, 432ee4 <_obstack_memory_used@@Base+0xb5c4>
  432ed8:	mov	x8, #0xffffffffffffffff    	// #-1
  432edc:	stur	x8, [x29, #-8]
  432ee0:	b	433150 <_obstack_memory_used@@Base+0xb830>
  432ee4:	ldr	x8, [sp, #32]
  432ee8:	ldur	x9, [x29, #-32]
  432eec:	str	x8, [x9]
  432ef0:	ldur	x8, [x29, #-32]
  432ef4:	ldr	x0, [x8, #24]
  432ef8:	ldur	x8, [x29, #-40]
  432efc:	mov	x9, #0x8                   	// #8
  432f00:	mul	x1, x8, x9
  432f04:	str	x9, [sp, #16]
  432f08:	bl	402570 <realloc@plt>
  432f0c:	stur	x0, [x29, #-48]
  432f10:	ldur	x8, [x29, #-32]
  432f14:	ldr	x0, [x8, #32]
  432f18:	ldur	x8, [x29, #-40]
  432f1c:	ldr	x9, [sp, #16]
  432f20:	mul	x1, x8, x9
  432f24:	bl	402570 <realloc@plt>
  432f28:	str	x0, [sp, #56]
  432f2c:	ldur	x8, [x29, #-32]
  432f30:	ldr	x0, [x8, #40]
  432f34:	ldur	x8, [x29, #-40]
  432f38:	mov	x9, #0x18                  	// #24
  432f3c:	mul	x1, x8, x9
  432f40:	str	x9, [sp, #8]
  432f44:	bl	402570 <realloc@plt>
  432f48:	str	x0, [sp, #48]
  432f4c:	ldur	x8, [x29, #-32]
  432f50:	ldr	x0, [x8, #48]
  432f54:	ldur	x8, [x29, #-40]
  432f58:	ldr	x9, [sp, #8]
  432f5c:	mul	x1, x8, x9
  432f60:	bl	402570 <realloc@plt>
  432f64:	str	x0, [sp, #40]
  432f68:	ldur	x8, [x29, #-48]
  432f6c:	mov	w10, #0x1                   	// #1
  432f70:	str	w10, [sp, #4]
  432f74:	cbz	x8, 432fa8 <_obstack_memory_used@@Base+0xb688>
  432f78:	ldr	x8, [sp, #56]
  432f7c:	mov	w9, #0x1                   	// #1
  432f80:	str	w9, [sp, #4]
  432f84:	cbz	x8, 432fa8 <_obstack_memory_used@@Base+0xb688>
  432f88:	ldr	x8, [sp, #48]
  432f8c:	mov	w9, #0x1                   	// #1
  432f90:	str	w9, [sp, #4]
  432f94:	cbz	x8, 432fa8 <_obstack_memory_used@@Base+0xb688>
  432f98:	ldr	x8, [sp, #40]
  432f9c:	cmp	x8, #0x0
  432fa0:	cset	w9, eq  // eq = none
  432fa4:	str	w9, [sp, #4]
  432fa8:	ldr	w8, [sp, #4]
  432fac:	and	w8, w8, #0x1
  432fb0:	mov	w0, w8
  432fb4:	sxtw	x9, w0
  432fb8:	cbz	x9, 432fe8 <_obstack_memory_used@@Base+0xb6c8>
  432fbc:	ldur	x0, [x29, #-48]
  432fc0:	bl	4026c0 <free@plt>
  432fc4:	ldr	x0, [sp, #56]
  432fc8:	bl	4026c0 <free@plt>
  432fcc:	ldr	x0, [sp, #48]
  432fd0:	bl	4026c0 <free@plt>
  432fd4:	ldr	x0, [sp, #40]
  432fd8:	bl	4026c0 <free@plt>
  432fdc:	mov	x8, #0xffffffffffffffff    	// #-1
  432fe0:	stur	x8, [x29, #-8]
  432fe4:	b	433150 <_obstack_memory_used@@Base+0xb830>
  432fe8:	ldur	x8, [x29, #-48]
  432fec:	ldur	x9, [x29, #-32]
  432ff0:	str	x8, [x9, #24]
  432ff4:	ldr	x8, [sp, #56]
  432ff8:	ldur	x9, [x29, #-32]
  432ffc:	str	x8, [x9, #32]
  433000:	ldr	x8, [sp, #48]
  433004:	ldur	x9, [x29, #-32]
  433008:	str	x8, [x9, #40]
  43300c:	ldr	x8, [sp, #40]
  433010:	ldur	x9, [x29, #-32]
  433014:	str	x8, [x9, #48]
  433018:	ldur	x8, [x29, #-40]
  43301c:	ldur	x9, [x29, #-32]
  433020:	str	x8, [x9, #8]
  433024:	ldur	x8, [x29, #-32]
  433028:	ldr	x8, [x8]
  43302c:	ldur	x9, [x29, #-32]
  433030:	mov	x10, #0x10                  	// #16
  433034:	ldr	x9, [x9, #16]
  433038:	ldur	q0, [x29, #-24]
  43303c:	str	q0, [x8, x9, lsl #4]
  433040:	ldur	x8, [x29, #-32]
  433044:	ldr	x8, [x8]
  433048:	ldur	x9, [x29, #-32]
  43304c:	ldr	x9, [x9, #16]
  433050:	mul	x9, x10, x9
  433054:	add	x8, x8, x9
  433058:	ldr	w11, [x8, #8]
  43305c:	and	w11, w11, #0xfffc00ff
  433060:	str	w11, [x8, #8]
  433064:	ldur	w11, [x29, #-16]
  433068:	and	w11, w11, #0xff
  43306c:	cmp	w11, #0x5
  433070:	b.ne	43308c <_obstack_memory_used@@Base+0xb76c>  // b.any
  433074:	ldur	x8, [x29, #-32]
  433078:	ldr	w9, [x8, #180]
  43307c:	mov	w10, #0x1                   	// #1
  433080:	cmp	w9, #0x1
  433084:	str	w10, [sp]
  433088:	b.gt	4330a0 <_obstack_memory_used@@Base+0xb780>
  43308c:	ldur	w8, [x29, #-16]
  433090:	and	w8, w8, #0xff
  433094:	cmp	w8, #0x6
  433098:	cset	w8, eq  // eq = none
  43309c:	str	w8, [sp]
  4330a0:	ldr	w8, [sp]
  4330a4:	and	w8, w8, #0x1
  4330a8:	ldur	x9, [x29, #-32]
  4330ac:	ldr	x9, [x9]
  4330b0:	ldur	x10, [x29, #-32]
  4330b4:	mov	x11, #0x10                  	// #16
  4330b8:	ldr	x10, [x10, #16]
  4330bc:	mul	x10, x11, x10
  4330c0:	add	x9, x9, x10
  4330c4:	ldr	w12, [x9, #8]
  4330c8:	and	w8, w8, #0x1
  4330cc:	and	w12, w12, #0xffefffff
  4330d0:	orr	w8, w12, w8, lsl #20
  4330d4:	str	w8, [x9, #8]
  4330d8:	ldur	x9, [x29, #-32]
  4330dc:	mov	x10, #0x18                  	// #24
  4330e0:	ldr	x9, [x9, #24]
  4330e4:	ldur	x11, [x29, #-32]
  4330e8:	ldr	x11, [x11, #16]
  4330ec:	mov	x13, #0xffffffffffffffff    	// #-1
  4330f0:	str	x13, [x9, x11, lsl #3]
  4330f4:	ldur	x9, [x29, #-32]
  4330f8:	ldr	x9, [x9, #40]
  4330fc:	ldur	x11, [x29, #-32]
  433100:	ldr	x11, [x11, #16]
  433104:	mul	x11, x10, x11
  433108:	add	x9, x9, x11
  43310c:	str	xzr, [x9]
  433110:	str	xzr, [x9, #8]
  433114:	str	xzr, [x9, #16]
  433118:	ldur	x9, [x29, #-32]
  43311c:	ldr	x9, [x9, #48]
  433120:	ldur	x11, [x29, #-32]
  433124:	ldr	x11, [x11, #16]
  433128:	mul	x10, x10, x11
  43312c:	add	x9, x9, x10
  433130:	str	xzr, [x9]
  433134:	str	xzr, [x9, #8]
  433138:	str	xzr, [x9, #16]
  43313c:	ldur	x9, [x29, #-32]
  433140:	ldr	x10, [x9, #16]
  433144:	add	x11, x10, #0x1
  433148:	str	x11, [x9, #16]
  43314c:	stur	x10, [x29, #-8]
  433150:	ldur	x0, [x29, #-8]
  433154:	ldp	x29, x30, [sp, #112]
  433158:	add	sp, sp, #0x80
  43315c:	ret
  433160:	sub	sp, sp, #0x30
  433164:	stp	x29, x30, [sp, #32]
  433168:	add	x29, sp, #0x20
  43316c:	mov	x8, #0x2                   	// #2
  433170:	mov	x9, #0x10                  	// #16
  433174:	str	x0, [sp, #16]
  433178:	str	x1, [sp, #8]
  43317c:	str	x2, [sp]
  433180:	ldr	x10, [sp, #16]
  433184:	str	x8, [x10]
  433188:	mov	x0, x9
  43318c:	bl	402450 <malloc@plt>
  433190:	ldr	x8, [sp, #16]
  433194:	str	x0, [x8, #16]
  433198:	ldr	x8, [sp, #16]
  43319c:	ldr	x8, [x8, #16]
  4331a0:	cmp	x8, #0x0
  4331a4:	cset	w11, eq  // eq = none
  4331a8:	and	w11, w11, #0x1
  4331ac:	mov	w0, w11
  4331b0:	sxtw	x8, w0
  4331b4:	cbz	x8, 4331c4 <_obstack_memory_used@@Base+0xb8a4>
  4331b8:	mov	w8, #0xc                   	// #12
  4331bc:	stur	w8, [x29, #-4]
  4331c0:	b	433258 <_obstack_memory_used@@Base+0xb938>
  4331c4:	ldr	x8, [sp, #8]
  4331c8:	ldr	x9, [sp]
  4331cc:	cmp	x8, x9
  4331d0:	b.ne	4331f4 <_obstack_memory_used@@Base+0xb8d4>  // b.any
  4331d4:	ldr	x8, [sp, #16]
  4331d8:	mov	x9, #0x1                   	// #1
  4331dc:	str	x9, [x8, #8]
  4331e0:	ldr	x8, [sp, #8]
  4331e4:	ldr	x9, [sp, #16]
  4331e8:	ldr	x9, [x9, #16]
  4331ec:	str	x8, [x9]
  4331f0:	b	433254 <_obstack_memory_used@@Base+0xb934>
  4331f4:	ldr	x8, [sp, #16]
  4331f8:	mov	x9, #0x2                   	// #2
  4331fc:	str	x9, [x8, #8]
  433200:	ldr	x8, [sp, #8]
  433204:	ldr	x9, [sp]
  433208:	cmp	x8, x9
  43320c:	b.ge	433234 <_obstack_memory_used@@Base+0xb914>  // b.tcont
  433210:	ldr	x8, [sp, #8]
  433214:	ldr	x9, [sp, #16]
  433218:	ldr	x9, [x9, #16]
  43321c:	str	x8, [x9]
  433220:	ldr	x8, [sp]
  433224:	ldr	x9, [sp, #16]
  433228:	ldr	x9, [x9, #16]
  43322c:	str	x8, [x9, #8]
  433230:	b	433254 <_obstack_memory_used@@Base+0xb934>
  433234:	ldr	x8, [sp]
  433238:	ldr	x9, [sp, #16]
  43323c:	ldr	x9, [x9, #16]
  433240:	str	x8, [x9]
  433244:	ldr	x8, [sp, #8]
  433248:	ldr	x9, [sp, #16]
  43324c:	ldr	x9, [x9, #16]
  433250:	str	x8, [x9, #8]
  433254:	stur	wzr, [x29, #-4]
  433258:	ldur	w0, [x29, #-4]
  43325c:	ldp	x29, x30, [sp, #32]
  433260:	add	sp, sp, #0x30
  433264:	ret
  433268:	sub	sp, sp, #0x30
  43326c:	stp	x29, x30, [sp, #32]
  433270:	add	x29, sp, #0x20
  433274:	mov	x8, #0x1                   	// #1
  433278:	mov	x9, #0x8                   	// #8
  43327c:	str	x0, [sp, #16]
  433280:	str	x1, [sp, #8]
  433284:	ldr	x10, [sp, #16]
  433288:	str	x8, [x10]
  43328c:	ldr	x10, [sp, #16]
  433290:	str	x8, [x10, #8]
  433294:	mov	x0, x9
  433298:	bl	402450 <malloc@plt>
  43329c:	ldr	x8, [sp, #16]
  4332a0:	str	x0, [x8, #16]
  4332a4:	ldr	x8, [sp, #16]
  4332a8:	ldr	x8, [x8, #16]
  4332ac:	cmp	x8, #0x0
  4332b0:	cset	w11, eq  // eq = none
  4332b4:	and	w11, w11, #0x1
  4332b8:	mov	w0, w11
  4332bc:	sxtw	x8, w0
  4332c0:	cbz	x8, 4332e0 <_obstack_memory_used@@Base+0xb9c0>
  4332c4:	ldr	x8, [sp, #16]
  4332c8:	str	xzr, [x8, #8]
  4332cc:	ldr	x8, [sp, #16]
  4332d0:	str	xzr, [x8]
  4332d4:	mov	w9, #0xc                   	// #12
  4332d8:	stur	w9, [x29, #-4]
  4332dc:	b	4332f4 <_obstack_memory_used@@Base+0xb9d4>
  4332e0:	ldr	x8, [sp, #8]
  4332e4:	ldr	x9, [sp, #16]
  4332e8:	ldr	x9, [x9, #16]
  4332ec:	str	x8, [x9]
  4332f0:	stur	wzr, [x29, #-4]
  4332f4:	ldur	w0, [x29, #-4]
  4332f8:	ldp	x29, x30, [sp, #32]
  4332fc:	add	sp, sp, #0x30
  433300:	ret
  433304:	sub	sp, sp, #0x90
  433308:	stp	x29, x30, [sp, #128]
  43330c:	add	x29, sp, #0x80
  433310:	mov	w8, #0x0                   	// #0
  433314:	mov	w9, #0x1                   	// #1
  433318:	add	x10, sp, #0x38
  43331c:	stur	x0, [x29, #-16]
  433320:	stur	x1, [x29, #-24]
  433324:	stur	x2, [x29, #-32]
  433328:	and	w9, w3, w9
  43332c:	sturb	w9, [x29, #-33]
  433330:	strb	w8, [sp, #54]
  433334:	ldur	x11, [x29, #-24]
  433338:	ldr	x11, [x11, #40]
  43333c:	ldur	x12, [x29, #-32]
  433340:	mov	x13, #0x18                  	// #24
  433344:	mul	x12, x13, x12
  433348:	add	x11, x11, x12
  43334c:	ldr	x11, [x11, #8]
  433350:	add	x1, x11, #0x1
  433354:	mov	x0, x10
  433358:	bl	433718 <_obstack_memory_used@@Base+0xbdf8>
  43335c:	stur	w0, [x29, #-40]
  433360:	ldur	w8, [x29, #-40]
  433364:	cmp	w8, #0x0
  433368:	cset	w8, ne  // ne = any
  43336c:	and	w8, w8, #0x1
  433370:	mov	w1, w8
  433374:	sxtw	x10, w1
  433378:	cbz	x10, 433388 <_obstack_memory_used@@Base+0xba68>
  43337c:	ldur	w8, [x29, #-40]
  433380:	stur	w8, [x29, #-4]
  433384:	b	433708 <_obstack_memory_used@@Base+0xbde8>
  433388:	ldur	x8, [x29, #-24]
  43338c:	ldr	x8, [x8, #48]
  433390:	ldur	x9, [x29, #-32]
  433394:	mov	x10, #0x18                  	// #24
  433398:	mul	x9, x10, x9
  43339c:	add	x8, x8, x9
  4333a0:	mov	x9, #0x8                   	// #8
  4333a4:	mov	x10, #0xffffffffffffffff    	// #-1
  4333a8:	str	x10, [x8, #8]
  4333ac:	ldur	x8, [x29, #-24]
  4333b0:	ldr	x8, [x8]
  4333b4:	ldur	x10, [x29, #-32]
  4333b8:	mov	x11, #0x10                  	// #16
  4333bc:	mul	x10, x11, x10
  4333c0:	add	x8, x8, x10
  4333c4:	ldr	w12, [x8, #8]
  4333c8:	lsr	w9, w12, w9
  4333cc:	and	w9, w9, #0x3ff
  4333d0:	cbz	w9, 4334a0 <_obstack_memory_used@@Base+0xbb80>
  4333d4:	ldur	x8, [x29, #-24]
  4333d8:	ldr	x8, [x8, #40]
  4333dc:	ldur	x9, [x29, #-32]
  4333e0:	mov	x10, #0x18                  	// #24
  4333e4:	mul	x9, x10, x9
  4333e8:	add	x8, x8, x9
  4333ec:	ldr	x8, [x8, #8]
  4333f0:	cbz	x8, 4334a0 <_obstack_memory_used@@Base+0xbb80>
  4333f4:	ldur	x8, [x29, #-24]
  4333f8:	ldr	x8, [x8]
  4333fc:	ldur	x9, [x29, #-24]
  433400:	ldr	x9, [x9, #40]
  433404:	ldur	x10, [x29, #-32]
  433408:	mov	x11, #0x18                  	// #24
  43340c:	mul	x10, x11, x10
  433410:	add	x9, x9, x10
  433414:	mov	x10, #0x10                  	// #16
  433418:	ldr	x9, [x9, #16]
  43341c:	ldr	x9, [x9]
  433420:	mul	x9, x10, x9
  433424:	add	x8, x8, x9
  433428:	ldr	w12, [x8, #8]
  43342c:	lsr	w12, w12, #18
  433430:	and	w12, w12, #0x1
  433434:	cbnz	w12, 4334a0 <_obstack_memory_used@@Base+0xbb80>
  433438:	ldur	x0, [x29, #-24]
  43343c:	ldur	x1, [x29, #-32]
  433440:	ldur	x2, [x29, #-32]
  433444:	ldur	x3, [x29, #-32]
  433448:	ldur	x8, [x29, #-24]
  43344c:	ldr	x8, [x8]
  433450:	ldur	x9, [x29, #-32]
  433454:	mov	x10, #0x10                  	// #16
  433458:	mul	x9, x10, x9
  43345c:	add	x8, x8, x9
  433460:	mov	x9, #0x8                   	// #8
  433464:	ldr	w11, [x8, #8]
  433468:	lsr	w9, w11, w9
  43346c:	and	w4, w9, #0x3ff
  433470:	bl	433798 <_obstack_memory_used@@Base+0xbe78>
  433474:	stur	w0, [x29, #-40]
  433478:	ldur	w9, [x29, #-40]
  43347c:	cmp	w9, #0x0
  433480:	cset	w9, ne  // ne = any
  433484:	and	w9, w9, #0x1
  433488:	mov	w1, w9
  43348c:	sxtw	x8, w1
  433490:	cbz	x8, 4334a0 <_obstack_memory_used@@Base+0xbb80>
  433494:	ldur	w8, [x29, #-40]
  433498:	stur	w8, [x29, #-4]
  43349c:	b	433708 <_obstack_memory_used@@Base+0xbde8>
  4334a0:	ldur	x8, [x29, #-24]
  4334a4:	ldr	x8, [x8]
  4334a8:	ldur	x9, [x29, #-32]
  4334ac:	mov	x10, #0x10                  	// #16
  4334b0:	mul	x9, x10, x9
  4334b4:	add	x8, x8, x9
  4334b8:	ldr	w11, [x8, #8]
  4334bc:	and	w11, w11, #0xff
  4334c0:	and	w11, w11, #0x8
  4334c4:	cbz	w11, 433658 <_obstack_memory_used@@Base+0xbd38>
  4334c8:	stur	xzr, [x29, #-48]
  4334cc:	ldur	x8, [x29, #-48]
  4334d0:	ldur	x9, [x29, #-24]
  4334d4:	ldr	x9, [x9, #40]
  4334d8:	ldur	x10, [x29, #-32]
  4334dc:	mov	x11, #0x18                  	// #24
  4334e0:	mul	x10, x11, x10
  4334e4:	add	x9, x9, x10
  4334e8:	ldr	x9, [x9, #8]
  4334ec:	cmp	x8, x9
  4334f0:	b.ge	433658 <_obstack_memory_used@@Base+0xbd38>  // b.tcont
  4334f4:	ldur	x8, [x29, #-24]
  4334f8:	ldr	x8, [x8, #40]
  4334fc:	ldur	x9, [x29, #-32]
  433500:	mov	x10, #0x18                  	// #24
  433504:	mul	x9, x10, x9
  433508:	add	x8, x8, x9
  43350c:	ldr	x8, [x8, #16]
  433510:	ldur	x9, [x29, #-48]
  433514:	ldr	x8, [x8, x9, lsl #3]
  433518:	str	x8, [sp, #8]
  43351c:	ldur	x8, [x29, #-24]
  433520:	ldr	x8, [x8, #48]
  433524:	ldr	x9, [sp, #8]
  433528:	mul	x9, x10, x9
  43352c:	add	x8, x8, x9
  433530:	ldr	x8, [x8, #8]
  433534:	mov	x9, #0xffffffffffffffff    	// #-1
  433538:	cmp	x8, x9
  43353c:	b.ne	43354c <_obstack_memory_used@@Base+0xbc2c>  // b.any
  433540:	mov	w8, #0x1                   	// #1
  433544:	strb	w8, [sp, #54]
  433548:	b	433648 <_obstack_memory_used@@Base+0xbd28>
  43354c:	ldur	x8, [x29, #-24]
  433550:	ldr	x8, [x8, #48]
  433554:	ldr	x9, [sp, #8]
  433558:	mov	x10, #0x18                  	// #24
  43355c:	mul	x9, x10, x9
  433560:	add	x8, x8, x9
  433564:	ldr	x8, [x8, #8]
  433568:	cbnz	x8, 4335b4 <_obstack_memory_used@@Base+0xbc94>
  43356c:	ldur	x1, [x29, #-24]
  433570:	ldr	x2, [sp, #8]
  433574:	add	x0, sp, #0x10
  433578:	mov	w8, wzr
  43357c:	and	w3, w8, #0x1
  433580:	bl	433304 <_obstack_memory_used@@Base+0xb9e4>
  433584:	stur	w0, [x29, #-40]
  433588:	ldur	w8, [x29, #-40]
  43358c:	cmp	w8, #0x0
  433590:	cset	w8, ne  // ne = any
  433594:	and	w8, w8, #0x1
  433598:	mov	w1, w8
  43359c:	sxtw	x9, w1
  4335a0:	cbz	x9, 4335b0 <_obstack_memory_used@@Base+0xbc90>
  4335a4:	ldur	w8, [x29, #-40]
  4335a8:	stur	w8, [x29, #-4]
  4335ac:	b	433708 <_obstack_memory_used@@Base+0xbde8>
  4335b0:	b	4335dc <_obstack_memory_used@@Base+0xbcbc>
  4335b4:	ldur	x8, [x29, #-24]
  4335b8:	ldr	x8, [x8, #48]
  4335bc:	ldr	x9, [sp, #8]
  4335c0:	mov	x10, #0x18                  	// #24
  4335c4:	mul	x9, x10, x9
  4335c8:	add	x8, x8, x9
  4335cc:	ldr	q0, [x8]
  4335d0:	str	q0, [sp, #16]
  4335d4:	ldr	x8, [x8, #16]
  4335d8:	str	x8, [sp, #32]
  4335dc:	add	x0, sp, #0x38
  4335e0:	add	x1, sp, #0x10
  4335e4:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  4335e8:	stur	w0, [x29, #-40]
  4335ec:	ldur	w8, [x29, #-40]
  4335f0:	cmp	w8, #0x0
  4335f4:	cset	w8, ne  // ne = any
  4335f8:	and	w8, w8, #0x1
  4335fc:	mov	w1, w8
  433600:	sxtw	x9, w1
  433604:	cbz	x9, 433614 <_obstack_memory_used@@Base+0xbcf4>
  433608:	ldur	w8, [x29, #-40]
  43360c:	stur	w8, [x29, #-4]
  433610:	b	433708 <_obstack_memory_used@@Base+0xbde8>
  433614:	ldur	x8, [x29, #-24]
  433618:	ldr	x8, [x8, #48]
  43361c:	ldr	x9, [sp, #8]
  433620:	mov	x10, #0x18                  	// #24
  433624:	mul	x9, x10, x9
  433628:	add	x8, x8, x9
  43362c:	ldr	x8, [x8, #8]
  433630:	cbnz	x8, 433648 <_obstack_memory_used@@Base+0xbd28>
  433634:	mov	w8, #0x1                   	// #1
  433638:	strb	w8, [sp, #54]
  43363c:	add	x9, sp, #0x10
  433640:	ldr	x0, [x9, #16]
  433644:	bl	4026c0 <free@plt>
  433648:	ldur	x8, [x29, #-48]
  43364c:	add	x8, x8, #0x1
  433650:	stur	x8, [x29, #-48]
  433654:	b	4334cc <_obstack_memory_used@@Base+0xbbac>
  433658:	ldur	x1, [x29, #-32]
  43365c:	add	x0, sp, #0x38
  433660:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  433664:	mov	w8, #0x1                   	// #1
  433668:	and	w8, w0, w8
  43366c:	strb	w8, [sp, #55]
  433670:	ldrb	w8, [sp, #55]
  433674:	eor	w8, w8, #0x1
  433678:	and	w8, w8, #0x1
  43367c:	mov	w1, w8
  433680:	sxtw	x9, w1
  433684:	cbz	x9, 433694 <_obstack_memory_used@@Base+0xbd74>
  433688:	mov	w8, #0xc                   	// #12
  43368c:	stur	w8, [x29, #-4]
  433690:	b	433708 <_obstack_memory_used@@Base+0xbde8>
  433694:	ldrb	w8, [sp, #54]
  433698:	tbnz	w8, #0, 4336a0 <_obstack_memory_used@@Base+0xbd80>
  43369c:	b	4336c8 <_obstack_memory_used@@Base+0xbda8>
  4336a0:	ldurb	w8, [x29, #-33]
  4336a4:	tbnz	w8, #0, 4336c8 <_obstack_memory_used@@Base+0xbda8>
  4336a8:	ldur	x8, [x29, #-24]
  4336ac:	ldr	x8, [x8, #48]
  4336b0:	ldur	x9, [x29, #-32]
  4336b4:	mov	x10, #0x18                  	// #24
  4336b8:	mul	x9, x10, x9
  4336bc:	add	x8, x8, x9
  4336c0:	str	xzr, [x8, #8]
  4336c4:	b	4336f0 <_obstack_memory_used@@Base+0xbdd0>
  4336c8:	ldur	x8, [x29, #-24]
  4336cc:	ldr	x8, [x8, #48]
  4336d0:	ldur	x9, [x29, #-32]
  4336d4:	mov	x10, #0x18                  	// #24
  4336d8:	mul	x9, x10, x9
  4336dc:	add	x8, x8, x9
  4336e0:	ldur	q0, [sp, #56]
  4336e4:	str	q0, [x8]
  4336e8:	ldr	x9, [sp, #72]
  4336ec:	str	x9, [x8, #16]
  4336f0:	ldur	x8, [x29, #-16]
  4336f4:	ldur	q0, [sp, #56]
  4336f8:	str	q0, [x8]
  4336fc:	ldr	x9, [sp, #72]
  433700:	str	x9, [x8, #16]
  433704:	stur	wzr, [x29, #-4]
  433708:	ldur	w0, [x29, #-4]
  43370c:	ldp	x29, x30, [sp, #128]
  433710:	add	sp, sp, #0x90
  433714:	ret
  433718:	sub	sp, sp, #0x30
  43371c:	stp	x29, x30, [sp, #32]
  433720:	add	x29, sp, #0x20
  433724:	mov	x8, #0x8                   	// #8
  433728:	str	x0, [sp, #16]
  43372c:	str	x1, [sp, #8]
  433730:	ldr	x9, [sp, #8]
  433734:	ldr	x10, [sp, #16]
  433738:	str	x9, [x10]
  43373c:	ldr	x9, [sp, #16]
  433740:	str	xzr, [x9, #8]
  433744:	ldr	x9, [sp, #8]
  433748:	mul	x0, x9, x8
  43374c:	bl	402450 <malloc@plt>
  433750:	ldr	x8, [sp, #16]
  433754:	str	x0, [x8, #16]
  433758:	ldr	x8, [sp, #16]
  43375c:	ldr	x8, [x8, #16]
  433760:	cmp	x8, #0x0
  433764:	cset	w11, eq  // eq = none
  433768:	and	w11, w11, #0x1
  43376c:	mov	w0, w11
  433770:	sxtw	x8, w0
  433774:	cbz	x8, 433784 <_obstack_memory_used@@Base+0xbe64>
  433778:	mov	w8, #0xc                   	// #12
  43377c:	stur	w8, [x29, #-4]
  433780:	b	433788 <_obstack_memory_used@@Base+0xbe68>
  433784:	stur	wzr, [x29, #-4]
  433788:	ldur	w0, [x29, #-4]
  43378c:	ldp	x29, x30, [sp, #32]
  433790:	add	sp, sp, #0x30
  433794:	ret
  433798:	sub	sp, sp, #0x70
  43379c:	stp	x29, x30, [sp, #96]
  4337a0:	add	x29, sp, #0x60
  4337a4:	stur	x0, [x29, #-16]
  4337a8:	stur	x1, [x29, #-24]
  4337ac:	stur	x2, [x29, #-32]
  4337b0:	stur	x3, [x29, #-40]
  4337b4:	stur	w4, [x29, #-44]
  4337b8:	ldur	w8, [x29, #-44]
  4337bc:	str	w8, [sp, #24]
  4337c0:	ldur	x9, [x29, #-24]
  4337c4:	str	x9, [sp, #40]
  4337c8:	ldur	x9, [x29, #-32]
  4337cc:	str	x9, [sp, #32]
  4337d0:	ldur	x8, [x29, #-16]
  4337d4:	ldr	x8, [x8]
  4337d8:	ldr	x9, [sp, #40]
  4337dc:	mov	x10, #0x10                  	// #16
  4337e0:	mul	x9, x10, x9
  4337e4:	add	x8, x8, x9
  4337e8:	ldr	w11, [x8, #8]
  4337ec:	and	w11, w11, #0xff
  4337f0:	cmp	w11, #0x4
  4337f4:	b.ne	4338dc <_obstack_memory_used@@Base+0xbfbc>  // b.any
  4337f8:	ldur	x8, [x29, #-16]
  4337fc:	mov	x9, #0x18                  	// #24
  433800:	ldr	x8, [x8, #24]
  433804:	ldr	x10, [sp, #40]
  433808:	ldr	x8, [x8, x10, lsl #3]
  43380c:	str	x8, [sp, #16]
  433810:	ldur	x8, [x29, #-16]
  433814:	ldr	x8, [x8, #40]
  433818:	ldr	x10, [sp, #32]
  43381c:	mul	x9, x9, x10
  433820:	add	x8, x8, x9
  433824:	str	xzr, [x8, #8]
  433828:	ldur	x0, [x29, #-16]
  43382c:	ldr	x1, [sp, #16]
  433830:	ldr	w2, [sp, #24]
  433834:	bl	434364 <_obstack_memory_used@@Base+0xca44>
  433838:	str	x0, [sp, #8]
  43383c:	ldr	x8, [sp, #8]
  433840:	mov	x9, #0xffffffffffffffff    	// #-1
  433844:	cmp	x8, x9
  433848:	cset	w11, eq  // eq = none
  43384c:	and	w11, w11, #0x1
  433850:	mov	w0, w11
  433854:	sxtw	x8, w0
  433858:	cbz	x8, 433868 <_obstack_memory_used@@Base+0xbf48>
  43385c:	mov	w8, #0xc                   	// #12
  433860:	stur	w8, [x29, #-4]
  433864:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433868:	ldur	x8, [x29, #-16]
  43386c:	mov	x9, #0x18                  	// #24
  433870:	ldr	x8, [x8, #24]
  433874:	ldr	x10, [sp, #40]
  433878:	ldr	x8, [x8, x10, lsl #3]
  43387c:	ldur	x10, [x29, #-16]
  433880:	ldr	x10, [x10, #24]
  433884:	ldr	x11, [sp, #32]
  433888:	str	x8, [x10, x11, lsl #3]
  43388c:	ldur	x8, [x29, #-16]
  433890:	ldr	x8, [x8, #40]
  433894:	ldr	x10, [sp, #32]
  433898:	mul	x9, x9, x10
  43389c:	add	x0, x8, x9
  4338a0:	ldr	x1, [sp, #8]
  4338a4:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  4338a8:	mov	w12, #0x1                   	// #1
  4338ac:	and	w12, w0, w12
  4338b0:	strb	w12, [sp, #31]
  4338b4:	ldrb	w12, [sp, #31]
  4338b8:	eor	w12, w12, #0x1
  4338bc:	and	w12, w12, #0x1
  4338c0:	mov	w1, w12
  4338c4:	sxtw	x8, w1
  4338c8:	cbz	x8, 4338d8 <_obstack_memory_used@@Base+0xbfb8>
  4338cc:	mov	w8, #0xc                   	// #12
  4338d0:	stur	w8, [x29, #-4]
  4338d4:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  4338d8:	b	433cf8 <_obstack_memory_used@@Base+0xc3d8>
  4338dc:	ldur	x8, [x29, #-16]
  4338e0:	ldr	x8, [x8, #40]
  4338e4:	ldr	x9, [sp, #40]
  4338e8:	mov	x10, #0x18                  	// #24
  4338ec:	mul	x9, x10, x9
  4338f0:	add	x8, x8, x9
  4338f4:	ldr	x8, [x8, #8]
  4338f8:	cbnz	x8, 433920 <_obstack_memory_used@@Base+0xc000>
  4338fc:	ldur	x8, [x29, #-16]
  433900:	ldr	x8, [x8, #24]
  433904:	ldr	x9, [sp, #40]
  433908:	ldr	x8, [x8, x9, lsl #3]
  43390c:	ldur	x9, [x29, #-16]
  433910:	ldr	x9, [x9, #24]
  433914:	ldr	x10, [sp, #32]
  433918:	str	x8, [x9, x10, lsl #3]
  43391c:	b	433d0c <_obstack_memory_used@@Base+0xc3ec>
  433920:	ldur	x8, [x29, #-16]
  433924:	ldr	x8, [x8, #40]
  433928:	ldr	x9, [sp, #40]
  43392c:	mov	x10, #0x18                  	// #24
  433930:	mul	x9, x10, x9
  433934:	add	x8, x8, x9
  433938:	ldr	x8, [x8, #8]
  43393c:	cmp	x8, #0x1
  433940:	b.ne	433abc <_obstack_memory_used@@Base+0xc19c>  // b.any
  433944:	ldur	x8, [x29, #-16]
  433948:	ldr	x8, [x8, #40]
  43394c:	ldr	x9, [sp, #40]
  433950:	mov	x10, #0x18                  	// #24
  433954:	mul	x9, x10, x9
  433958:	add	x8, x8, x9
  43395c:	ldr	x8, [x8, #16]
  433960:	ldr	x8, [x8]
  433964:	str	x8, [sp, #16]
  433968:	ldur	x8, [x29, #-16]
  43396c:	ldr	x8, [x8, #40]
  433970:	ldr	x9, [sp, #32]
  433974:	mul	x9, x10, x9
  433978:	add	x8, x8, x9
  43397c:	str	xzr, [x8, #8]
  433980:	ldr	x8, [sp, #40]
  433984:	ldur	x9, [x29, #-40]
  433988:	cmp	x8, x9
  43398c:	b.ne	4339f4 <_obstack_memory_used@@Base+0xc0d4>  // b.any
  433990:	ldr	x8, [sp, #32]
  433994:	ldr	x9, [sp, #40]
  433998:	cmp	x8, x9
  43399c:	b.eq	4339f4 <_obstack_memory_used@@Base+0xc0d4>  // b.none
  4339a0:	ldur	x8, [x29, #-16]
  4339a4:	ldr	x8, [x8, #40]
  4339a8:	ldr	x9, [sp, #32]
  4339ac:	mov	x10, #0x18                  	// #24
  4339b0:	mul	x9, x10, x9
  4339b4:	add	x0, x8, x9
  4339b8:	ldr	x1, [sp, #16]
  4339bc:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  4339c0:	mov	w11, #0x1                   	// #1
  4339c4:	and	w11, w0, w11
  4339c8:	strb	w11, [sp, #31]
  4339cc:	ldrb	w11, [sp, #31]
  4339d0:	eor	w11, w11, #0x1
  4339d4:	and	w11, w11, #0x1
  4339d8:	mov	w1, w11
  4339dc:	sxtw	x8, w1
  4339e0:	cbz	x8, 4339f0 <_obstack_memory_used@@Base+0xc0d0>
  4339e4:	mov	w8, #0xc                   	// #12
  4339e8:	stur	w8, [x29, #-4]
  4339ec:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  4339f0:	b	433d0c <_obstack_memory_used@@Base+0xc3ec>
  4339f4:	ldur	x8, [x29, #-16]
  4339f8:	ldr	x8, [x8]
  4339fc:	ldr	x9, [sp, #40]
  433a00:	mov	x10, #0x10                  	// #16
  433a04:	mul	x9, x10, x9
  433a08:	add	x8, x8, x9
  433a0c:	mov	x9, #0x8                   	// #8
  433a10:	ldr	w11, [x8, #8]
  433a14:	lsr	w9, w11, w9
  433a18:	and	w9, w9, #0x3ff
  433a1c:	ldr	w11, [sp, #24]
  433a20:	orr	w9, w11, w9
  433a24:	str	w9, [sp, #24]
  433a28:	ldur	x0, [x29, #-16]
  433a2c:	ldr	x1, [sp, #16]
  433a30:	ldr	w2, [sp, #24]
  433a34:	bl	434364 <_obstack_memory_used@@Base+0xca44>
  433a38:	str	x0, [sp, #8]
  433a3c:	ldr	x8, [sp, #8]
  433a40:	mov	x10, #0xffffffffffffffff    	// #-1
  433a44:	cmp	x8, x10
  433a48:	cset	w9, eq  // eq = none
  433a4c:	and	w9, w9, #0x1
  433a50:	mov	w0, w9
  433a54:	sxtw	x8, w0
  433a58:	cbz	x8, 433a68 <_obstack_memory_used@@Base+0xc148>
  433a5c:	mov	w8, #0xc                   	// #12
  433a60:	stur	w8, [x29, #-4]
  433a64:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433a68:	ldur	x8, [x29, #-16]
  433a6c:	ldr	x8, [x8, #40]
  433a70:	ldr	x9, [sp, #32]
  433a74:	mov	x10, #0x18                  	// #24
  433a78:	mul	x9, x10, x9
  433a7c:	add	x0, x8, x9
  433a80:	ldr	x1, [sp, #8]
  433a84:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  433a88:	mov	w11, #0x1                   	// #1
  433a8c:	and	w11, w0, w11
  433a90:	strb	w11, [sp, #31]
  433a94:	ldrb	w11, [sp, #31]
  433a98:	eor	w11, w11, #0x1
  433a9c:	and	w11, w11, #0x1
  433aa0:	mov	w1, w11
  433aa4:	sxtw	x8, w1
  433aa8:	cbz	x8, 433ab8 <_obstack_memory_used@@Base+0xc198>
  433aac:	mov	w8, #0xc                   	// #12
  433ab0:	stur	w8, [x29, #-4]
  433ab4:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433ab8:	b	433cf8 <_obstack_memory_used@@Base+0xc3d8>
  433abc:	ldur	x8, [x29, #-16]
  433ac0:	ldr	x8, [x8, #40]
  433ac4:	ldr	x9, [sp, #40]
  433ac8:	mov	x10, #0x18                  	// #24
  433acc:	mul	x9, x10, x9
  433ad0:	add	x8, x8, x9
  433ad4:	ldr	x8, [x8, #16]
  433ad8:	ldr	x8, [x8]
  433adc:	str	x8, [sp, #16]
  433ae0:	ldur	x8, [x29, #-16]
  433ae4:	ldr	x8, [x8, #40]
  433ae8:	ldr	x9, [sp, #32]
  433aec:	mul	x9, x10, x9
  433af0:	add	x8, x8, x9
  433af4:	str	xzr, [x8, #8]
  433af8:	ldur	x0, [x29, #-16]
  433afc:	ldr	x1, [sp, #16]
  433b00:	ldr	w2, [sp, #24]
  433b04:	bl	4344a8 <_obstack_memory_used@@Base+0xcb88>
  433b08:	str	x0, [sp, #8]
  433b0c:	ldr	x8, [sp, #8]
  433b10:	mov	x9, #0xffffffffffffffff    	// #-1
  433b14:	cmp	x8, x9
  433b18:	b.ne	433bf4 <_obstack_memory_used@@Base+0xc2d4>  // b.any
  433b1c:	ldur	x0, [x29, #-16]
  433b20:	ldr	x1, [sp, #16]
  433b24:	ldr	w2, [sp, #24]
  433b28:	bl	434364 <_obstack_memory_used@@Base+0xca44>
  433b2c:	str	x0, [sp, #8]
  433b30:	ldr	x8, [sp, #8]
  433b34:	mov	x9, #0xffffffffffffffff    	// #-1
  433b38:	cmp	x8, x9
  433b3c:	cset	w10, eq  // eq = none
  433b40:	and	w10, w10, #0x1
  433b44:	mov	w0, w10
  433b48:	sxtw	x8, w0
  433b4c:	cbz	x8, 433b5c <_obstack_memory_used@@Base+0xc23c>
  433b50:	mov	w8, #0xc                   	// #12
  433b54:	stur	w8, [x29, #-4]
  433b58:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433b5c:	ldur	x8, [x29, #-16]
  433b60:	ldr	x8, [x8, #40]
  433b64:	ldr	x9, [sp, #32]
  433b68:	mov	x10, #0x18                  	// #24
  433b6c:	mul	x9, x10, x9
  433b70:	add	x0, x8, x9
  433b74:	ldr	x1, [sp, #8]
  433b78:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  433b7c:	mov	w11, #0x1                   	// #1
  433b80:	and	w11, w0, w11
  433b84:	strb	w11, [sp, #31]
  433b88:	ldrb	w11, [sp, #31]
  433b8c:	eor	w11, w11, #0x1
  433b90:	and	w11, w11, #0x1
  433b94:	mov	w1, w11
  433b98:	sxtw	x8, w1
  433b9c:	cbz	x8, 433bac <_obstack_memory_used@@Base+0xc28c>
  433ba0:	mov	w8, #0xc                   	// #12
  433ba4:	stur	w8, [x29, #-4]
  433ba8:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433bac:	ldur	x0, [x29, #-16]
  433bb0:	ldr	x1, [sp, #16]
  433bb4:	ldr	x2, [sp, #8]
  433bb8:	ldur	x3, [x29, #-40]
  433bbc:	ldr	w4, [sp, #24]
  433bc0:	bl	433798 <_obstack_memory_used@@Base+0xbe78>
  433bc4:	str	w0, [sp, #4]
  433bc8:	ldr	w8, [sp, #4]
  433bcc:	cmp	w8, #0x0
  433bd0:	cset	w8, ne  // ne = any
  433bd4:	and	w8, w8, #0x1
  433bd8:	mov	w1, w8
  433bdc:	sxtw	x9, w1
  433be0:	cbz	x9, 433bf0 <_obstack_memory_used@@Base+0xc2d0>
  433be4:	ldr	w8, [sp, #4]
  433be8:	stur	w8, [x29, #-4]
  433bec:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433bf0:	b	433c44 <_obstack_memory_used@@Base+0xc324>
  433bf4:	ldur	x8, [x29, #-16]
  433bf8:	ldr	x8, [x8, #40]
  433bfc:	ldr	x9, [sp, #32]
  433c00:	mov	x10, #0x18                  	// #24
  433c04:	mul	x9, x10, x9
  433c08:	add	x0, x8, x9
  433c0c:	ldr	x1, [sp, #8]
  433c10:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  433c14:	mov	w11, #0x1                   	// #1
  433c18:	and	w11, w0, w11
  433c1c:	strb	w11, [sp, #31]
  433c20:	ldrb	w11, [sp, #31]
  433c24:	eor	w11, w11, #0x1
  433c28:	and	w11, w11, #0x1
  433c2c:	mov	w1, w11
  433c30:	sxtw	x8, w1
  433c34:	cbz	x8, 433c44 <_obstack_memory_used@@Base+0xc324>
  433c38:	mov	w8, #0xc                   	// #12
  433c3c:	stur	w8, [x29, #-4]
  433c40:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433c44:	ldur	x8, [x29, #-16]
  433c48:	ldr	x8, [x8, #40]
  433c4c:	ldr	x9, [sp, #40]
  433c50:	mov	x10, #0x18                  	// #24
  433c54:	mul	x9, x10, x9
  433c58:	add	x8, x8, x9
  433c5c:	ldr	x8, [x8, #16]
  433c60:	ldr	x8, [x8, #8]
  433c64:	str	x8, [sp, #16]
  433c68:	ldur	x0, [x29, #-16]
  433c6c:	ldr	x1, [sp, #16]
  433c70:	ldr	w2, [sp, #24]
  433c74:	bl	434364 <_obstack_memory_used@@Base+0xca44>
  433c78:	str	x0, [sp, #8]
  433c7c:	ldr	x8, [sp, #8]
  433c80:	mov	x9, #0xffffffffffffffff    	// #-1
  433c84:	cmp	x8, x9
  433c88:	cset	w11, eq  // eq = none
  433c8c:	and	w11, w11, #0x1
  433c90:	mov	w0, w11
  433c94:	sxtw	x8, w0
  433c98:	cbz	x8, 433ca8 <_obstack_memory_used@@Base+0xc388>
  433c9c:	mov	w8, #0xc                   	// #12
  433ca0:	stur	w8, [x29, #-4]
  433ca4:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433ca8:	ldur	x8, [x29, #-16]
  433cac:	ldr	x8, [x8, #40]
  433cb0:	ldr	x9, [sp, #32]
  433cb4:	mov	x10, #0x18                  	// #24
  433cb8:	mul	x9, x10, x9
  433cbc:	add	x0, x8, x9
  433cc0:	ldr	x1, [sp, #8]
  433cc4:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  433cc8:	mov	w11, #0x1                   	// #1
  433ccc:	and	w11, w0, w11
  433cd0:	strb	w11, [sp, #31]
  433cd4:	ldrb	w11, [sp, #31]
  433cd8:	eor	w11, w11, #0x1
  433cdc:	and	w11, w11, #0x1
  433ce0:	mov	w1, w11
  433ce4:	sxtw	x8, w1
  433ce8:	cbz	x8, 433cf8 <_obstack_memory_used@@Base+0xc3d8>
  433cec:	mov	w8, #0xc                   	// #12
  433cf0:	stur	w8, [x29, #-4]
  433cf4:	b	433d10 <_obstack_memory_used@@Base+0xc3f0>
  433cf8:	ldr	x8, [sp, #16]
  433cfc:	str	x8, [sp, #40]
  433d00:	ldr	x8, [sp, #8]
  433d04:	str	x8, [sp, #32]
  433d08:	b	4337d0 <_obstack_memory_used@@Base+0xbeb0>
  433d0c:	stur	wzr, [x29, #-4]
  433d10:	ldur	w0, [x29, #-4]
  433d14:	ldp	x29, x30, [sp, #96]
  433d18:	add	sp, sp, #0x70
  433d1c:	ret
  433d20:	sub	sp, sp, #0x60
  433d24:	stp	x29, x30, [sp, #80]
  433d28:	add	x29, sp, #0x50
  433d2c:	stur	x0, [x29, #-16]
  433d30:	stur	x1, [x29, #-24]
  433d34:	ldur	x8, [x29, #-24]
  433d38:	cbz	x8, 433d48 <_obstack_memory_used@@Base+0xc428>
  433d3c:	ldur	x8, [x29, #-24]
  433d40:	ldr	x8, [x8, #8]
  433d44:	cbnz	x8, 433d50 <_obstack_memory_used@@Base+0xc430>
  433d48:	stur	wzr, [x29, #-4]
  433d4c:	b	434128 <_obstack_memory_used@@Base+0xc808>
  433d50:	ldur	x8, [x29, #-16]
  433d54:	ldr	x8, [x8]
  433d58:	ldur	x9, [x29, #-24]
  433d5c:	ldr	x9, [x9, #8]
  433d60:	mov	x10, #0x2                   	// #2
  433d64:	mul	x9, x10, x9
  433d68:	ldur	x10, [x29, #-16]
  433d6c:	ldr	x10, [x10, #8]
  433d70:	add	x9, x9, x10
  433d74:	cmp	x8, x9
  433d78:	b.ge	433df8 <_obstack_memory_used@@Base+0xc4d8>  // b.tcont
  433d7c:	ldur	x8, [x29, #-24]
  433d80:	ldr	x8, [x8, #8]
  433d84:	ldur	x9, [x29, #-16]
  433d88:	ldr	x9, [x9]
  433d8c:	add	x8, x8, x9
  433d90:	mov	x9, #0x2                   	// #2
  433d94:	mul	x8, x9, x8
  433d98:	str	x8, [sp, #16]
  433d9c:	ldur	x8, [x29, #-16]
  433da0:	ldr	x0, [x8, #16]
  433da4:	ldr	x8, [sp, #16]
  433da8:	mov	x9, #0x8                   	// #8
  433dac:	mul	x1, x8, x9
  433db0:	bl	402570 <realloc@plt>
  433db4:	str	x0, [sp, #8]
  433db8:	ldr	x8, [sp, #8]
  433dbc:	cmp	x8, #0x0
  433dc0:	cset	w10, eq  // eq = none
  433dc4:	and	w10, w10, #0x1
  433dc8:	mov	w0, w10
  433dcc:	sxtw	x8, w0
  433dd0:	cbz	x8, 433de0 <_obstack_memory_used@@Base+0xc4c0>
  433dd4:	mov	w8, #0xc                   	// #12
  433dd8:	stur	w8, [x29, #-4]
  433ddc:	b	434128 <_obstack_memory_used@@Base+0xc808>
  433de0:	ldr	x8, [sp, #8]
  433de4:	ldur	x9, [x29, #-16]
  433de8:	str	x8, [x9, #16]
  433dec:	ldr	x8, [sp, #16]
  433df0:	ldur	x9, [x29, #-16]
  433df4:	str	x8, [x9]
  433df8:	ldur	x8, [x29, #-16]
  433dfc:	ldr	x8, [x8, #8]
  433e00:	cmp	x8, #0x0
  433e04:	cset	w9, eq  // eq = none
  433e08:	and	w9, w9, #0x1
  433e0c:	mov	w0, w9
  433e10:	sxtw	x8, w0
  433e14:	cbz	x8, 433e54 <_obstack_memory_used@@Base+0xc534>
  433e18:	ldur	x8, [x29, #-24]
  433e1c:	ldr	x8, [x8, #8]
  433e20:	ldur	x9, [x29, #-16]
  433e24:	str	x8, [x9, #8]
  433e28:	ldur	x8, [x29, #-16]
  433e2c:	ldr	x0, [x8, #16]
  433e30:	ldur	x8, [x29, #-24]
  433e34:	ldr	x1, [x8, #16]
  433e38:	ldur	x8, [x29, #-24]
  433e3c:	ldr	x8, [x8, #8]
  433e40:	mov	x9, #0x8                   	// #8
  433e44:	mul	x2, x8, x9
  433e48:	bl	402290 <memcpy@plt>
  433e4c:	stur	wzr, [x29, #-4]
  433e50:	b	434128 <_obstack_memory_used@@Base+0xc808>
  433e54:	ldur	x8, [x29, #-16]
  433e58:	ldr	x8, [x8, #8]
  433e5c:	ldur	x9, [x29, #-24]
  433e60:	ldr	x9, [x9, #8]
  433e64:	mov	x10, #0x2                   	// #2
  433e68:	mul	x9, x10, x9
  433e6c:	add	x8, x8, x9
  433e70:	str	x8, [sp, #32]
  433e74:	ldur	x8, [x29, #-24]
  433e78:	ldr	x8, [x8, #8]
  433e7c:	subs	x8, x8, #0x1
  433e80:	stur	x8, [x29, #-32]
  433e84:	ldur	x8, [x29, #-16]
  433e88:	ldr	x8, [x8, #8]
  433e8c:	subs	x8, x8, #0x1
  433e90:	str	x8, [sp, #40]
  433e94:	ldur	x8, [x29, #-32]
  433e98:	cmp	x8, #0x0
  433e9c:	cset	w9, lt  // lt = tstop
  433ea0:	mov	w10, #0x0                   	// #0
  433ea4:	str	w10, [sp, #4]
  433ea8:	tbnz	w9, #0, 433ebc <_obstack_memory_used@@Base+0xc59c>
  433eac:	ldr	x8, [sp, #40]
  433eb0:	cmp	x8, #0x0
  433eb4:	cset	w9, ge  // ge = tcont
  433eb8:	str	w9, [sp, #4]
  433ebc:	ldr	w8, [sp, #4]
  433ec0:	tbnz	w8, #0, 433ec8 <_obstack_memory_used@@Base+0xc5a8>
  433ec4:	b	433f78 <_obstack_memory_used@@Base+0xc658>
  433ec8:	ldur	x8, [x29, #-16]
  433ecc:	ldr	x8, [x8, #16]
  433ed0:	ldr	x9, [sp, #40]
  433ed4:	ldr	x8, [x8, x9, lsl #3]
  433ed8:	ldur	x9, [x29, #-24]
  433edc:	ldr	x9, [x9, #16]
  433ee0:	ldur	x10, [x29, #-32]
  433ee4:	ldr	x9, [x9, x10, lsl #3]
  433ee8:	cmp	x8, x9
  433eec:	b.ne	433f0c <_obstack_memory_used@@Base+0xc5ec>  // b.any
  433ef0:	ldur	x8, [x29, #-32]
  433ef4:	subs	x8, x8, #0x1
  433ef8:	stur	x8, [x29, #-32]
  433efc:	ldr	x8, [sp, #40]
  433f00:	subs	x8, x8, #0x1
  433f04:	str	x8, [sp, #40]
  433f08:	b	433f74 <_obstack_memory_used@@Base+0xc654>
  433f0c:	ldur	x8, [x29, #-16]
  433f10:	ldr	x8, [x8, #16]
  433f14:	ldr	x9, [sp, #40]
  433f18:	ldr	x8, [x8, x9, lsl #3]
  433f1c:	ldur	x9, [x29, #-24]
  433f20:	ldr	x9, [x9, #16]
  433f24:	ldur	x10, [x29, #-32]
  433f28:	ldr	x9, [x9, x10, lsl #3]
  433f2c:	cmp	x8, x9
  433f30:	b.ge	433f68 <_obstack_memory_used@@Base+0xc648>  // b.tcont
  433f34:	ldur	x8, [x29, #-24]
  433f38:	ldr	x8, [x8, #16]
  433f3c:	ldur	x9, [x29, #-32]
  433f40:	subs	x10, x9, #0x1
  433f44:	stur	x10, [x29, #-32]
  433f48:	ldr	x8, [x8, x9, lsl #3]
  433f4c:	ldur	x9, [x29, #-16]
  433f50:	ldr	x9, [x9, #16]
  433f54:	ldr	x10, [sp, #32]
  433f58:	subs	x10, x10, #0x1
  433f5c:	str	x10, [sp, #32]
  433f60:	str	x8, [x9, x10, lsl #3]
  433f64:	b	433f74 <_obstack_memory_used@@Base+0xc654>
  433f68:	ldr	x8, [sp, #40]
  433f6c:	subs	x8, x8, #0x1
  433f70:	str	x8, [sp, #40]
  433f74:	b	433e94 <_obstack_memory_used@@Base+0xc574>
  433f78:	ldur	x8, [x29, #-32]
  433f7c:	cmp	x8, #0x0
  433f80:	cset	w9, lt  // lt = tstop
  433f84:	tbnz	w9, #0, 433fd0 <_obstack_memory_used@@Base+0xc6b0>
  433f88:	ldur	x8, [x29, #-32]
  433f8c:	add	x8, x8, #0x1
  433f90:	ldr	x9, [sp, #32]
  433f94:	subs	x8, x9, x8
  433f98:	str	x8, [sp, #32]
  433f9c:	ldur	x8, [x29, #-16]
  433fa0:	ldr	x8, [x8, #16]
  433fa4:	ldr	x9, [sp, #32]
  433fa8:	mov	x10, #0x8                   	// #8
  433fac:	mul	x9, x10, x9
  433fb0:	add	x0, x8, x9
  433fb4:	ldur	x8, [x29, #-24]
  433fb8:	ldr	x1, [x8, #16]
  433fbc:	ldur	x8, [x29, #-32]
  433fc0:	add	x8, x8, #0x1
  433fc4:	mov	x9, #0x8                   	// #8
  433fc8:	mul	x2, x8, x9
  433fcc:	bl	402290 <memcpy@plt>
  433fd0:	ldur	x8, [x29, #-16]
  433fd4:	ldr	x8, [x8, #8]
  433fd8:	subs	x8, x8, #0x1
  433fdc:	str	x8, [sp, #40]
  433fe0:	ldur	x8, [x29, #-16]
  433fe4:	ldr	x8, [x8, #8]
  433fe8:	ldur	x9, [x29, #-24]
  433fec:	ldr	x9, [x9, #8]
  433ff0:	mov	x10, #0x2                   	// #2
  433ff4:	mul	x9, x10, x9
  433ff8:	add	x8, x8, x9
  433ffc:	subs	x8, x8, #0x1
  434000:	stur	x8, [x29, #-32]
  434004:	ldur	x8, [x29, #-32]
  434008:	ldr	x9, [sp, #32]
  43400c:	subs	x8, x8, x9
  434010:	add	x8, x8, #0x1
  434014:	str	x8, [sp, #24]
  434018:	ldr	x8, [sp, #24]
  43401c:	cbnz	x8, 434028 <_obstack_memory_used@@Base+0xc708>
  434020:	stur	wzr, [x29, #-4]
  434024:	b	434128 <_obstack_memory_used@@Base+0xc808>
  434028:	ldr	x8, [sp, #24]
  43402c:	ldur	x9, [x29, #-16]
  434030:	ldr	x10, [x9, #8]
  434034:	add	x8, x10, x8
  434038:	str	x8, [x9, #8]
  43403c:	ldur	x8, [x29, #-16]
  434040:	ldr	x8, [x8, #16]
  434044:	ldur	x9, [x29, #-32]
  434048:	ldr	x8, [x8, x9, lsl #3]
  43404c:	ldur	x9, [x29, #-16]
  434050:	ldr	x9, [x9, #16]
  434054:	ldr	x10, [sp, #40]
  434058:	ldr	x9, [x9, x10, lsl #3]
  43405c:	cmp	x8, x9
  434060:	b.le	4340ac <_obstack_memory_used@@Base+0xc78c>
  434064:	ldur	x8, [x29, #-16]
  434068:	ldr	x8, [x8, #16]
  43406c:	ldur	x9, [x29, #-32]
  434070:	subs	x10, x9, #0x1
  434074:	stur	x10, [x29, #-32]
  434078:	ldr	x8, [x8, x9, lsl #3]
  43407c:	ldur	x9, [x29, #-16]
  434080:	ldr	x9, [x9, #16]
  434084:	ldr	x10, [sp, #40]
  434088:	ldr	x11, [sp, #24]
  43408c:	subs	x12, x11, #0x1
  434090:	str	x12, [sp, #24]
  434094:	add	x10, x10, x11
  434098:	str	x8, [x9, x10, lsl #3]
  43409c:	ldr	x8, [sp, #24]
  4340a0:	cbnz	x8, 4340a8 <_obstack_memory_used@@Base+0xc788>
  4340a4:	b	434124 <_obstack_memory_used@@Base+0xc804>
  4340a8:	b	434120 <_obstack_memory_used@@Base+0xc800>
  4340ac:	ldur	x8, [x29, #-16]
  4340b0:	ldr	x8, [x8, #16]
  4340b4:	ldr	x9, [sp, #40]
  4340b8:	ldr	x8, [x8, x9, lsl #3]
  4340bc:	ldur	x9, [x29, #-16]
  4340c0:	ldr	x9, [x9, #16]
  4340c4:	ldr	x10, [sp, #40]
  4340c8:	ldr	x11, [sp, #24]
  4340cc:	add	x10, x10, x11
  4340d0:	str	x8, [x9, x10, lsl #3]
  4340d4:	ldr	x8, [sp, #40]
  4340d8:	subs	x8, x8, #0x1
  4340dc:	str	x8, [sp, #40]
  4340e0:	cmp	x8, #0x0
  4340e4:	cset	w12, ge  // ge = tcont
  4340e8:	tbnz	w12, #0, 434120 <_obstack_memory_used@@Base+0xc800>
  4340ec:	ldur	x8, [x29, #-16]
  4340f0:	ldr	x0, [x8, #16]
  4340f4:	ldur	x8, [x29, #-16]
  4340f8:	ldr	x8, [x8, #16]
  4340fc:	ldr	x9, [sp, #32]
  434100:	mov	x10, #0x8                   	// #8
  434104:	mul	x9, x10, x9
  434108:	add	x1, x8, x9
  43410c:	ldr	x8, [sp, #24]
  434110:	mov	x9, #0x8                   	// #8
  434114:	mul	x2, x8, x9
  434118:	bl	402290 <memcpy@plt>
  43411c:	b	434124 <_obstack_memory_used@@Base+0xc804>
  434120:	b	43403c <_obstack_memory_used@@Base+0xc71c>
  434124:	stur	wzr, [x29, #-4]
  434128:	ldur	w0, [x29, #-4]
  43412c:	ldp	x29, x30, [sp, #80]
  434130:	add	sp, sp, #0x60
  434134:	ret
  434138:	sub	sp, sp, #0x40
  43413c:	stp	x29, x30, [sp, #48]
  434140:	add	x29, sp, #0x30
  434144:	stur	x0, [x29, #-16]
  434148:	str	x1, [sp, #24]
  43414c:	ldur	x8, [x29, #-16]
  434150:	ldr	x8, [x8]
  434154:	cbnz	x8, 434190 <_obstack_memory_used@@Base+0xc870>
  434158:	ldur	x0, [x29, #-16]
  43415c:	ldr	x1, [sp, #24]
  434160:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  434164:	cmp	w0, #0x0
  434168:	cset	w8, eq  // eq = none
  43416c:	mov	w9, #0x1                   	// #1
  434170:	and	w8, w8, #0x1
  434174:	mov	w1, w8
  434178:	sxtw	x10, w1
  43417c:	cmp	x10, #0x0
  434180:	cset	w8, ne  // ne = any
  434184:	and	w8, w8, w9
  434188:	sturb	w8, [x29, #-1]
  43418c:	b	434350 <_obstack_memory_used@@Base+0xca30>
  434190:	ldur	x8, [x29, #-16]
  434194:	ldr	x8, [x8, #8]
  434198:	cbnz	x8, 4341cc <_obstack_memory_used@@Base+0xc8ac>
  43419c:	ldr	x8, [sp, #24]
  4341a0:	ldur	x9, [x29, #-16]
  4341a4:	ldr	x9, [x9, #16]
  4341a8:	str	x8, [x9]
  4341ac:	ldur	x8, [x29, #-16]
  4341b0:	ldr	x9, [x8, #8]
  4341b4:	add	x9, x9, #0x1
  4341b8:	str	x9, [x8, #8]
  4341bc:	mov	w10, #0x1                   	// #1
  4341c0:	and	w10, w10, #0x1
  4341c4:	sturb	w10, [x29, #-1]
  4341c8:	b	434350 <_obstack_memory_used@@Base+0xca30>
  4341cc:	ldur	x8, [x29, #-16]
  4341d0:	ldr	x8, [x8]
  4341d4:	ldur	x9, [x29, #-16]
  4341d8:	ldr	x9, [x9, #8]
  4341dc:	cmp	x8, x9
  4341e0:	b.ne	434254 <_obstack_memory_used@@Base+0xc934>  // b.any
  4341e4:	ldur	x8, [x29, #-16]
  4341e8:	ldr	x8, [x8]
  4341ec:	mov	x9, #0x2                   	// #2
  4341f0:	mul	x8, x8, x9
  4341f4:	ldur	x9, [x29, #-16]
  4341f8:	str	x8, [x9]
  4341fc:	ldur	x8, [x29, #-16]
  434200:	ldr	x0, [x8, #16]
  434204:	ldur	x8, [x29, #-16]
  434208:	ldr	x8, [x8]
  43420c:	mov	x9, #0x8                   	// #8
  434210:	mul	x1, x8, x9
  434214:	bl	402570 <realloc@plt>
  434218:	str	x0, [sp, #8]
  43421c:	ldr	x8, [sp, #8]
  434220:	cmp	x8, #0x0
  434224:	cset	w10, eq  // eq = none
  434228:	and	w10, w10, #0x1
  43422c:	mov	w0, w10
  434230:	sxtw	x8, w0
  434234:	cbz	x8, 434248 <_obstack_memory_used@@Base+0xc928>
  434238:	mov	w8, wzr
  43423c:	and	w8, w8, #0x1
  434240:	sturb	w8, [x29, #-1]
  434244:	b	434350 <_obstack_memory_used@@Base+0xca30>
  434248:	ldr	x8, [sp, #8]
  43424c:	ldur	x9, [x29, #-16]
  434250:	str	x8, [x9, #16]
  434254:	ldr	x8, [sp, #24]
  434258:	ldur	x9, [x29, #-16]
  43425c:	ldr	x9, [x9, #16]
  434260:	ldr	x9, [x9]
  434264:	cmp	x8, x9
  434268:	b.ge	4342c0 <_obstack_memory_used@@Base+0xc9a0>  // b.tcont
  43426c:	ldur	x8, [x29, #-16]
  434270:	ldr	x8, [x8, #8]
  434274:	str	x8, [sp, #16]
  434278:	ldr	x8, [sp, #16]
  43427c:	cmp	x8, #0x0
  434280:	cset	w9, le
  434284:	tbnz	w9, #0, 4342bc <_obstack_memory_used@@Base+0xc99c>
  434288:	ldur	x8, [x29, #-16]
  43428c:	ldr	x8, [x8, #16]
  434290:	ldr	x9, [sp, #16]
  434294:	subs	x9, x9, #0x1
  434298:	ldr	x8, [x8, x9, lsl #3]
  43429c:	ldur	x9, [x29, #-16]
  4342a0:	ldr	x9, [x9, #16]
  4342a4:	ldr	x10, [sp, #16]
  4342a8:	str	x8, [x9, x10, lsl #3]
  4342ac:	ldr	x8, [sp, #16]
  4342b0:	subs	x8, x8, #0x1
  4342b4:	str	x8, [sp, #16]
  4342b8:	b	434278 <_obstack_memory_used@@Base+0xc958>
  4342bc:	b	434320 <_obstack_memory_used@@Base+0xca00>
  4342c0:	ldur	x8, [x29, #-16]
  4342c4:	ldr	x8, [x8, #8]
  4342c8:	str	x8, [sp, #16]
  4342cc:	ldur	x8, [x29, #-16]
  4342d0:	ldr	x8, [x8, #16]
  4342d4:	ldr	x9, [sp, #16]
  4342d8:	subs	x9, x9, #0x1
  4342dc:	ldr	x8, [x8, x9, lsl #3]
  4342e0:	ldr	x9, [sp, #24]
  4342e4:	cmp	x8, x9
  4342e8:	b.le	434320 <_obstack_memory_used@@Base+0xca00>
  4342ec:	ldur	x8, [x29, #-16]
  4342f0:	ldr	x8, [x8, #16]
  4342f4:	ldr	x9, [sp, #16]
  4342f8:	subs	x9, x9, #0x1
  4342fc:	ldr	x8, [x8, x9, lsl #3]
  434300:	ldur	x9, [x29, #-16]
  434304:	ldr	x9, [x9, #16]
  434308:	ldr	x10, [sp, #16]
  43430c:	str	x8, [x9, x10, lsl #3]
  434310:	ldr	x8, [sp, #16]
  434314:	subs	x8, x8, #0x1
  434318:	str	x8, [sp, #16]
  43431c:	b	4342cc <_obstack_memory_used@@Base+0xc9ac>
  434320:	ldr	x8, [sp, #24]
  434324:	ldur	x9, [x29, #-16]
  434328:	ldr	x9, [x9, #16]
  43432c:	ldr	x10, [sp, #16]
  434330:	str	x8, [x9, x10, lsl #3]
  434334:	ldur	x8, [x29, #-16]
  434338:	ldr	x9, [x8, #8]
  43433c:	add	x9, x9, #0x1
  434340:	str	x9, [x8, #8]
  434344:	mov	w11, #0x1                   	// #1
  434348:	and	w11, w11, #0x1
  43434c:	sturb	w11, [x29, #-1]
  434350:	ldurb	w8, [x29, #-1]
  434354:	and	w0, w8, #0x1
  434358:	ldp	x29, x30, [sp, #48]
  43435c:	add	sp, sp, #0x40
  434360:	ret
  434364:	sub	sp, sp, #0x40
  434368:	stp	x29, x30, [sp, #48]
  43436c:	add	x29, sp, #0x30
  434370:	mov	x8, #0xffffffffffffffff    	// #-1
  434374:	stur	x0, [x29, #-8]
  434378:	stur	x1, [x29, #-16]
  43437c:	stur	w2, [x29, #-20]
  434380:	ldur	x0, [x29, #-8]
  434384:	ldur	x9, [x29, #-8]
  434388:	ldr	x9, [x9]
  43438c:	ldur	x10, [x29, #-16]
  434390:	mov	x11, #0x10                  	// #16
  434394:	mul	x10, x11, x10
  434398:	add	x9, x9, x10
  43439c:	ldr	x1, [x9]
  4343a0:	ldr	x2, [x9, #8]
  4343a4:	str	x8, [sp, #8]
  4343a8:	bl	432e14 <_obstack_memory_used@@Base+0xb4f4>
  4343ac:	str	x0, [sp, #16]
  4343b0:	ldr	x8, [sp, #16]
  4343b4:	ldr	x9, [sp, #8]
  4343b8:	cmp	x8, x9
  4343bc:	cset	w12, ne  // ne = any
  4343c0:	and	w12, w12, #0x1
  4343c4:	mov	w0, w12
  4343c8:	sxtw	x8, w0
  4343cc:	cbz	x8, 434498 <_obstack_memory_used@@Base+0xcb78>
  4343d0:	ldur	w8, [x29, #-20]
  4343d4:	ldur	x9, [x29, #-8]
  4343d8:	ldr	x9, [x9]
  4343dc:	ldr	x10, [sp, #16]
  4343e0:	mov	x11, #0x10                  	// #16
  4343e4:	mul	x10, x11, x10
  4343e8:	add	x9, x9, x10
  4343ec:	mov	x10, #0x8                   	// #8
  4343f0:	ldr	w12, [x9, #8]
  4343f4:	and	w8, w8, #0x3ff
  4343f8:	and	w12, w12, #0xfffc00ff
  4343fc:	orr	w8, w12, w8, lsl #8
  434400:	str	w8, [x9, #8]
  434404:	ldur	x9, [x29, #-8]
  434408:	ldr	x9, [x9]
  43440c:	ldur	x13, [x29, #-16]
  434410:	mul	x13, x11, x13
  434414:	add	x9, x9, x13
  434418:	ldr	w8, [x9, #8]
  43441c:	mov	x0, x10
  434420:	lsr	w8, w8, w0
  434424:	and	w8, w8, #0x3ff
  434428:	ldur	x9, [x29, #-8]
  43442c:	ldr	x9, [x9]
  434430:	ldr	x13, [sp, #16]
  434434:	mul	x13, x11, x13
  434438:	add	x9, x9, x13
  43443c:	ldr	w12, [x9, #8]
  434440:	lsr	w10, w12, w10
  434444:	and	w10, w10, #0x3ff
  434448:	orr	w8, w10, w8
  43444c:	ldr	w10, [x9, #8]
  434450:	and	w8, w8, #0x3ff
  434454:	and	w10, w10, #0xfffc00ff
  434458:	orr	w8, w10, w8, lsl #8
  43445c:	str	w8, [x9, #8]
  434460:	ldur	x9, [x29, #-8]
  434464:	ldr	x9, [x9]
  434468:	ldr	x13, [sp, #16]
  43446c:	mul	x11, x11, x13
  434470:	add	x9, x9, x11
  434474:	ldr	w8, [x9, #8]
  434478:	and	w8, w8, #0xfffbffff
  43447c:	orr	w8, w8, #0x40000
  434480:	str	w8, [x9, #8]
  434484:	ldur	x9, [x29, #-16]
  434488:	ldur	x11, [x29, #-8]
  43448c:	ldr	x11, [x11, #32]
  434490:	ldr	x13, [sp, #16]
  434494:	str	x9, [x11, x13, lsl #3]
  434498:	ldr	x0, [sp, #16]
  43449c:	ldp	x29, x30, [sp, #48]
  4344a0:	add	sp, sp, #0x40
  4344a4:	ret
  4344a8:	sub	sp, sp, #0x30
  4344ac:	str	x0, [sp, #32]
  4344b0:	str	x1, [sp, #24]
  4344b4:	str	w2, [sp, #20]
  4344b8:	ldr	x8, [sp, #32]
  4344bc:	ldr	x8, [x8, #16]
  4344c0:	subs	x8, x8, #0x1
  4344c4:	str	x8, [sp, #8]
  4344c8:	ldr	x8, [sp, #32]
  4344cc:	ldr	x8, [x8]
  4344d0:	ldr	x9, [sp, #8]
  4344d4:	mov	x10, #0x10                  	// #16
  4344d8:	mul	x9, x10, x9
  4344dc:	add	x8, x8, x9
  4344e0:	ldr	w11, [x8, #8]
  4344e4:	lsr	w11, w11, #18
  4344e8:	and	w11, w11, #0x1
  4344ec:	mov	w12, #0x0                   	// #0
  4344f0:	str	w12, [sp, #4]
  4344f4:	cbz	w11, 434508 <_obstack_memory_used@@Base+0xcbe8>
  4344f8:	ldr	x8, [sp, #8]
  4344fc:	cmp	x8, #0x0
  434500:	cset	w9, gt
  434504:	str	w9, [sp, #4]
  434508:	ldr	w8, [sp, #4]
  43450c:	tbnz	w8, #0, 434514 <_obstack_memory_used@@Base+0xcbf4>
  434510:	b	434580 <_obstack_memory_used@@Base+0xcc60>
  434514:	ldr	x8, [sp, #24]
  434518:	ldr	x9, [sp, #32]
  43451c:	ldr	x9, [x9, #32]
  434520:	ldr	x10, [sp, #8]
  434524:	ldr	x9, [x9, x10, lsl #3]
  434528:	cmp	x8, x9
  43452c:	b.ne	434570 <_obstack_memory_used@@Base+0xcc50>  // b.any
  434530:	ldr	w8, [sp, #20]
  434534:	ldr	x9, [sp, #32]
  434538:	ldr	x9, [x9]
  43453c:	ldr	x10, [sp, #8]
  434540:	mov	x11, #0x10                  	// #16
  434544:	mul	x10, x11, x10
  434548:	add	x9, x9, x10
  43454c:	mov	x10, #0x8                   	// #8
  434550:	ldr	w12, [x9, #8]
  434554:	lsr	w10, w12, w10
  434558:	and	w10, w10, #0x3ff
  43455c:	cmp	w8, w10
  434560:	b.ne	434570 <_obstack_memory_used@@Base+0xcc50>  // b.any
  434564:	ldr	x8, [sp, #8]
  434568:	str	x8, [sp, #40]
  43456c:	b	434588 <_obstack_memory_used@@Base+0xcc68>
  434570:	ldr	x8, [sp, #8]
  434574:	subs	x8, x8, #0x1
  434578:	str	x8, [sp, #8]
  43457c:	b	4344c8 <_obstack_memory_used@@Base+0xcba8>
  434580:	mov	x8, #0xffffffffffffffff    	// #-1
  434584:	str	x8, [sp, #40]
  434588:	ldr	x0, [sp, #40]
  43458c:	add	sp, sp, #0x30
  434590:	ret
  434594:	sub	sp, sp, #0x30
  434598:	stp	x29, x30, [sp, #32]
  43459c:	add	x29, sp, #0x20
  4345a0:	str	x0, [sp, #16]
  4345a4:	str	x1, [sp, #8]
  4345a8:	ldr	x8, [sp, #16]
  4345ac:	ldr	x8, [x8]
  4345b0:	ldr	x9, [sp, #16]
  4345b4:	ldr	x9, [x9, #8]
  4345b8:	cmp	x8, x9
  4345bc:	b.ne	434634 <_obstack_memory_used@@Base+0xcd14>  // b.any
  4345c0:	ldr	x8, [sp, #16]
  4345c4:	ldr	x8, [x8]
  4345c8:	add	x8, x8, #0x1
  4345cc:	mov	x9, #0x2                   	// #2
  4345d0:	mul	x8, x8, x9
  4345d4:	ldr	x9, [sp, #16]
  4345d8:	str	x8, [x9]
  4345dc:	ldr	x8, [sp, #16]
  4345e0:	ldr	x0, [x8, #16]
  4345e4:	ldr	x8, [sp, #16]
  4345e8:	ldr	x8, [x8]
  4345ec:	mov	x9, #0x8                   	// #8
  4345f0:	mul	x1, x8, x9
  4345f4:	bl	402570 <realloc@plt>
  4345f8:	str	x0, [sp]
  4345fc:	ldr	x8, [sp]
  434600:	cmp	x8, #0x0
  434604:	cset	w10, eq  // eq = none
  434608:	and	w10, w10, #0x1
  43460c:	mov	w0, w10
  434610:	sxtw	x8, w0
  434614:	cbz	x8, 434628 <_obstack_memory_used@@Base+0xcd08>
  434618:	mov	w8, wzr
  43461c:	and	w8, w8, #0x1
  434620:	sturb	w8, [x29, #-1]
  434624:	b	434660 <_obstack_memory_used@@Base+0xcd40>
  434628:	ldr	x8, [sp]
  43462c:	ldr	x9, [sp, #16]
  434630:	str	x8, [x9, #16]
  434634:	ldr	x8, [sp, #8]
  434638:	ldr	x9, [sp, #16]
  43463c:	ldr	x9, [x9, #16]
  434640:	ldr	x10, [sp, #16]
  434644:	ldr	x11, [x10, #8]
  434648:	add	x12, x11, #0x1
  43464c:	str	x12, [x10, #8]
  434650:	str	x8, [x9, x11, lsl #3]
  434654:	mov	w13, #0x1                   	// #1
  434658:	and	w13, w13, #0x1
  43465c:	sturb	w13, [x29, #-1]
  434660:	ldurb	w8, [x29, #-1]
  434664:	and	w0, w8, #0x1
  434668:	ldp	x29, x30, [sp, #32]
  43466c:	add	sp, sp, #0x30
  434670:	ret
  434674:	sub	sp, sp, #0x30
  434678:	stp	x29, x30, [sp, #32]
  43467c:	add	x29, sp, #0x20
  434680:	str	x0, [sp, #16]
  434684:	str	x1, [sp, #8]
  434688:	ldr	x8, [sp, #8]
  43468c:	ldr	x8, [x8, #8]
  434690:	ldr	x9, [sp, #16]
  434694:	str	x8, [x9, #8]
  434698:	ldr	x8, [sp, #8]
  43469c:	ldr	x8, [x8, #8]
  4346a0:	cmp	x8, #0x0
  4346a4:	cset	w10, le
  4346a8:	tbnz	w10, #0, 43473c <_obstack_memory_used@@Base+0xce1c>
  4346ac:	ldr	x8, [sp, #16]
  4346b0:	ldr	x8, [x8, #8]
  4346b4:	ldr	x9, [sp, #16]
  4346b8:	str	x8, [x9]
  4346bc:	ldr	x8, [sp, #16]
  4346c0:	ldr	x8, [x8]
  4346c4:	mov	x9, #0x8                   	// #8
  4346c8:	mul	x0, x8, x9
  4346cc:	bl	402450 <malloc@plt>
  4346d0:	ldr	x8, [sp, #16]
  4346d4:	str	x0, [x8, #16]
  4346d8:	ldr	x8, [sp, #16]
  4346dc:	ldr	x8, [x8, #16]
  4346e0:	cmp	x8, #0x0
  4346e4:	cset	w10, eq  // eq = none
  4346e8:	and	w10, w10, #0x1
  4346ec:	mov	w0, w10
  4346f0:	sxtw	x8, w0
  4346f4:	cbz	x8, 434714 <_obstack_memory_used@@Base+0xcdf4>
  4346f8:	ldr	x8, [sp, #16]
  4346fc:	str	xzr, [x8, #8]
  434700:	ldr	x8, [sp, #16]
  434704:	str	xzr, [x8]
  434708:	mov	w9, #0xc                   	// #12
  43470c:	stur	w9, [x29, #-4]
  434710:	b	434750 <_obstack_memory_used@@Base+0xce30>
  434714:	ldr	x8, [sp, #16]
  434718:	ldr	x0, [x8, #16]
  43471c:	ldr	x8, [sp, #8]
  434720:	ldr	x1, [x8, #16]
  434724:	ldr	x8, [sp, #8]
  434728:	ldr	x8, [x8, #8]
  43472c:	mov	x9, #0x8                   	// #8
  434730:	mul	x2, x8, x9
  434734:	bl	402290 <memcpy@plt>
  434738:	b	43474c <_obstack_memory_used@@Base+0xce2c>
  43473c:	ldr	x8, [sp, #16]
  434740:	str	xzr, [x8]
  434744:	str	xzr, [x8, #8]
  434748:	str	xzr, [x8, #16]
  43474c:	stur	wzr, [x29, #-4]
  434750:	ldur	w0, [x29, #-4]
  434754:	ldp	x29, x30, [sp, #32]
  434758:	add	sp, sp, #0x30
  43475c:	ret
  434760:	sub	sp, sp, #0x40
  434764:	str	x0, [sp, #48]
  434768:	str	x1, [sp, #40]
  43476c:	ldr	x8, [sp, #48]
  434770:	ldr	x8, [x8, #8]
  434774:	cmp	x8, #0x0
  434778:	cset	w9, gt
  43477c:	tbnz	w9, #0, 434788 <_obstack_memory_used@@Base+0xce68>
  434780:	str	xzr, [sp, #56]
  434784:	b	434838 <_obstack_memory_used@@Base+0xcf18>
  434788:	str	xzr, [sp, #32]
  43478c:	ldr	x8, [sp, #48]
  434790:	ldr	x8, [x8, #8]
  434794:	subs	x8, x8, #0x1
  434798:	str	x8, [sp, #24]
  43479c:	ldr	x8, [sp, #32]
  4347a0:	ldr	x9, [sp, #24]
  4347a4:	cmp	x8, x9
  4347a8:	b.cs	4347fc <_obstack_memory_used@@Base+0xcedc>  // b.hs, b.nlast
  4347ac:	ldr	x8, [sp, #32]
  4347b0:	ldr	x9, [sp, #24]
  4347b4:	add	x8, x8, x9
  4347b8:	mov	x9, #0x2                   	// #2
  4347bc:	udiv	x8, x8, x9
  4347c0:	str	x8, [sp, #16]
  4347c4:	ldr	x8, [sp, #48]
  4347c8:	ldr	x8, [x8, #16]
  4347cc:	ldr	x9, [sp, #16]
  4347d0:	ldr	x8, [x8, x9, lsl #3]
  4347d4:	ldr	x9, [sp, #40]
  4347d8:	cmp	x8, x9
  4347dc:	b.ge	4347f0 <_obstack_memory_used@@Base+0xced0>  // b.tcont
  4347e0:	ldr	x8, [sp, #16]
  4347e4:	add	x8, x8, #0x1
  4347e8:	str	x8, [sp, #32]
  4347ec:	b	4347f8 <_obstack_memory_used@@Base+0xced8>
  4347f0:	ldr	x8, [sp, #16]
  4347f4:	str	x8, [sp, #24]
  4347f8:	b	43479c <_obstack_memory_used@@Base+0xce7c>
  4347fc:	ldr	x8, [sp, #48]
  434800:	ldr	x8, [x8, #16]
  434804:	ldr	x9, [sp, #32]
  434808:	ldr	x8, [x8, x9, lsl #3]
  43480c:	ldr	x9, [sp, #40]
  434810:	cmp	x8, x9
  434814:	b.ne	434828 <_obstack_memory_used@@Base+0xcf08>  // b.any
  434818:	ldr	x8, [sp, #32]
  43481c:	add	x8, x8, #0x1
  434820:	str	x8, [sp, #8]
  434824:	b	434830 <_obstack_memory_used@@Base+0xcf10>
  434828:	mov	x8, xzr
  43482c:	str	x8, [sp, #8]
  434830:	ldr	x8, [sp, #8]
  434834:	str	x8, [sp, #56]
  434838:	ldr	x0, [sp, #56]
  43483c:	add	sp, sp, #0x40
  434840:	ret
  434844:	sub	sp, sp, #0x60
  434848:	stp	x29, x30, [sp, #80]
  43484c:	add	x29, sp, #0x50
  434850:	stur	x0, [x29, #-16]
  434854:	stur	x1, [x29, #-24]
  434858:	stur	x2, [x29, #-32]
  43485c:	stur	w3, [x29, #-36]
  434860:	ldur	x8, [x29, #-32]
  434864:	ldr	x8, [x8, #8]
  434868:	cbnz	x8, 434880 <_obstack_memory_used@@Base+0xcf60>
  43486c:	ldur	x8, [x29, #-16]
  434870:	str	wzr, [x8]
  434874:	mov	x8, xzr
  434878:	stur	x8, [x29, #-8]
  43487c:	b	43499c <_obstack_memory_used@@Base+0xd07c>
  434880:	ldur	x0, [x29, #-32]
  434884:	ldur	w1, [x29, #-36]
  434888:	bl	4349ac <_obstack_memory_used@@Base+0xd08c>
  43488c:	str	x0, [sp, #32]
  434890:	ldur	x8, [x29, #-24]
  434894:	ldr	x8, [x8, #64]
  434898:	ldr	x9, [sp, #32]
  43489c:	ldur	x10, [x29, #-24]
  4348a0:	ldr	x10, [x10, #136]
  4348a4:	and	x9, x9, x10
  4348a8:	mov	x10, #0x18                  	// #24
  4348ac:	mul	x9, x10, x9
  4348b0:	add	x8, x8, x9
  4348b4:	str	x8, [sp, #16]
  4348b8:	str	xzr, [sp, #8]
  4348bc:	ldr	x8, [sp, #8]
  4348c0:	ldr	x9, [sp, #16]
  4348c4:	ldr	x9, [x9]
  4348c8:	cmp	x8, x9
  4348cc:	b.ge	434954 <_obstack_memory_used@@Base+0xd034>  // b.tcont
  4348d0:	ldr	x8, [sp, #16]
  4348d4:	ldr	x8, [x8, #16]
  4348d8:	ldr	x9, [sp, #8]
  4348dc:	mov	x10, #0x8                   	// #8
  4348e0:	mul	x9, x10, x9
  4348e4:	add	x8, x8, x9
  4348e8:	ldr	x8, [x8]
  4348ec:	str	x8, [sp]
  4348f0:	ldr	x8, [sp]
  4348f4:	ldr	x8, [x8]
  4348f8:	ldr	x9, [sp, #32]
  4348fc:	cmp	x8, x9
  434900:	b.ne	434944 <_obstack_memory_used@@Base+0xd024>  // b.any
  434904:	ldr	x8, [sp]
  434908:	ldrb	w9, [x8, #104]
  43490c:	and	w9, w9, #0xf
  434910:	and	w9, w9, #0xff
  434914:	ldur	w10, [x29, #-36]
  434918:	cmp	w9, w10
  43491c:	b.ne	434944 <_obstack_memory_used@@Base+0xd024>  // b.any
  434920:	ldr	x8, [sp]
  434924:	ldr	x0, [x8, #80]
  434928:	ldur	x1, [x29, #-32]
  43492c:	bl	434a20 <_obstack_memory_used@@Base+0xd100>
  434930:	tbnz	w0, #0, 434938 <_obstack_memory_used@@Base+0xd018>
  434934:	b	434944 <_obstack_memory_used@@Base+0xd024>
  434938:	ldr	x8, [sp]
  43493c:	stur	x8, [x29, #-8]
  434940:	b	43499c <_obstack_memory_used@@Base+0xd07c>
  434944:	ldr	x8, [sp, #8]
  434948:	add	x8, x8, #0x1
  43494c:	str	x8, [sp, #8]
  434950:	b	4348bc <_obstack_memory_used@@Base+0xcf9c>
  434954:	ldur	x0, [x29, #-24]
  434958:	ldur	x1, [x29, #-32]
  43495c:	ldur	w2, [x29, #-36]
  434960:	ldr	x3, [sp, #32]
  434964:	bl	434ae0 <_obstack_memory_used@@Base+0xd1c0>
  434968:	str	x0, [sp, #24]
  43496c:	ldr	x8, [sp, #24]
  434970:	cmp	x8, #0x0
  434974:	cset	w9, eq  // eq = none
  434978:	and	w9, w9, #0x1
  43497c:	mov	w0, w9
  434980:	sxtw	x8, w0
  434984:	cbz	x8, 434994 <_obstack_memory_used@@Base+0xd074>
  434988:	ldur	x8, [x29, #-16]
  43498c:	mov	w9, #0xc                   	// #12
  434990:	str	w9, [x8]
  434994:	ldr	x8, [sp, #24]
  434998:	stur	x8, [x29, #-8]
  43499c:	ldur	x0, [x29, #-8]
  4349a0:	ldp	x29, x30, [sp, #80]
  4349a4:	add	sp, sp, #0x60
  4349a8:	ret
  4349ac:	sub	sp, sp, #0x20
  4349b0:	str	x0, [sp, #24]
  4349b4:	str	w1, [sp, #20]
  4349b8:	ldr	x8, [sp, #24]
  4349bc:	ldr	x8, [x8, #8]
  4349c0:	ldr	w9, [sp, #20]
  4349c4:	mov	w10, w9
  4349c8:	add	x8, x8, x10
  4349cc:	str	x8, [sp, #8]
  4349d0:	str	xzr, [sp]
  4349d4:	ldr	x8, [sp]
  4349d8:	ldr	x9, [sp, #24]
  4349dc:	ldr	x9, [x9, #8]
  4349e0:	cmp	x8, x9
  4349e4:	b.ge	434a14 <_obstack_memory_used@@Base+0xd0f4>  // b.tcont
  4349e8:	ldr	x8, [sp, #24]
  4349ec:	ldr	x8, [x8, #16]
  4349f0:	ldr	x9, [sp]
  4349f4:	ldr	x8, [x8, x9, lsl #3]
  4349f8:	ldr	x9, [sp, #8]
  4349fc:	add	x8, x9, x8
  434a00:	str	x8, [sp, #8]
  434a04:	ldr	x8, [sp]
  434a08:	add	x8, x8, #0x1
  434a0c:	str	x8, [sp]
  434a10:	b	4349d4 <_obstack_memory_used@@Base+0xd0b4>
  434a14:	ldr	x0, [sp, #8]
  434a18:	add	sp, sp, #0x20
  434a1c:	ret
  434a20:	sub	sp, sp, #0x20
  434a24:	str	x0, [sp, #16]
  434a28:	str	x1, [sp, #8]
  434a2c:	ldr	x8, [sp, #16]
  434a30:	cbz	x8, 434a54 <_obstack_memory_used@@Base+0xd134>
  434a34:	ldr	x8, [sp, #8]
  434a38:	cbz	x8, 434a54 <_obstack_memory_used@@Base+0xd134>
  434a3c:	ldr	x8, [sp, #16]
  434a40:	ldr	x8, [x8, #8]
  434a44:	ldr	x9, [sp, #8]
  434a48:	ldr	x9, [x9, #8]
  434a4c:	cmp	x8, x9
  434a50:	b.eq	434a64 <_obstack_memory_used@@Base+0xd144>  // b.none
  434a54:	mov	w8, wzr
  434a58:	and	w8, w8, #0x1
  434a5c:	strb	w8, [sp, #31]
  434a60:	b	434ad0 <_obstack_memory_used@@Base+0xd1b0>
  434a64:	ldr	x8, [sp, #16]
  434a68:	ldr	x8, [x8, #8]
  434a6c:	str	x8, [sp]
  434a70:	ldr	x8, [sp]
  434a74:	subs	x8, x8, #0x1
  434a78:	str	x8, [sp]
  434a7c:	cmp	x8, #0x0
  434a80:	cset	w9, lt  // lt = tstop
  434a84:	tbnz	w9, #0, 434ac4 <_obstack_memory_used@@Base+0xd1a4>
  434a88:	ldr	x8, [sp, #16]
  434a8c:	ldr	x8, [x8, #16]
  434a90:	ldr	x9, [sp]
  434a94:	ldr	x8, [x8, x9, lsl #3]
  434a98:	ldr	x9, [sp, #8]
  434a9c:	ldr	x9, [x9, #16]
  434aa0:	ldr	x10, [sp]
  434aa4:	ldr	x9, [x9, x10, lsl #3]
  434aa8:	cmp	x8, x9
  434aac:	b.eq	434ac0 <_obstack_memory_used@@Base+0xd1a0>  // b.none
  434ab0:	mov	w8, wzr
  434ab4:	and	w8, w8, #0x1
  434ab8:	strb	w8, [sp, #31]
  434abc:	b	434ad0 <_obstack_memory_used@@Base+0xd1b0>
  434ac0:	b	434a70 <_obstack_memory_used@@Base+0xd150>
  434ac4:	mov	w8, #0x1                   	// #1
  434ac8:	and	w8, w8, #0x1
  434acc:	strb	w8, [sp, #31]
  434ad0:	ldrb	w8, [sp, #31]
  434ad4:	and	w0, w8, #0x1
  434ad8:	add	sp, sp, #0x20
  434adc:	ret
  434ae0:	sub	sp, sp, #0x70
  434ae4:	stp	x29, x30, [sp, #96]
  434ae8:	add	x29, sp, #0x60
  434aec:	mov	x8, #0x70                  	// #112
  434af0:	mov	x9, #0x1                   	// #1
  434af4:	stur	x0, [x29, #-16]
  434af8:	stur	x1, [x29, #-24]
  434afc:	stur	w2, [x29, #-28]
  434b00:	stur	x3, [x29, #-40]
  434b04:	str	xzr, [sp, #40]
  434b08:	mov	x0, x8
  434b0c:	mov	x1, x9
  434b10:	bl	402540 <calloc@plt>
  434b14:	str	x0, [sp, #24]
  434b18:	ldr	x8, [sp, #24]
  434b1c:	cmp	x8, #0x0
  434b20:	cset	w10, eq  // eq = none
  434b24:	and	w10, w10, #0x1
  434b28:	mov	w0, w10
  434b2c:	sxtw	x8, w0
  434b30:	cbz	x8, 434b40 <_obstack_memory_used@@Base+0xd220>
  434b34:	mov	x8, xzr
  434b38:	stur	x8, [x29, #-8]
  434b3c:	b	434e40 <_obstack_memory_used@@Base+0xd520>
  434b40:	ldr	x8, [sp, #24]
  434b44:	add	x0, x8, #0x8
  434b48:	ldur	x1, [x29, #-24]
  434b4c:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  434b50:	str	w0, [sp, #36]
  434b54:	ldr	w9, [sp, #36]
  434b58:	cmp	w9, #0x0
  434b5c:	cset	w9, ne  // ne = any
  434b60:	and	w9, w9, #0x1
  434b64:	mov	w1, w9
  434b68:	sxtw	x8, w1
  434b6c:	cbz	x8, 434b84 <_obstack_memory_used@@Base+0xd264>
  434b70:	ldr	x0, [sp, #24]
  434b74:	bl	4026c0 <free@plt>
  434b78:	mov	x8, xzr
  434b7c:	stur	x8, [x29, #-8]
  434b80:	b	434e40 <_obstack_memory_used@@Base+0xd520>
  434b84:	ldur	w8, [x29, #-28]
  434b88:	ldr	x9, [sp, #24]
  434b8c:	ldrb	w10, [x9, #104]
  434b90:	and	w8, w8, #0xf
  434b94:	and	w10, w10, #0xfffffff0
  434b98:	orr	w8, w10, w8
  434b9c:	strb	w8, [x9, #104]
  434ba0:	ldr	x9, [sp, #24]
  434ba4:	add	x9, x9, #0x8
  434ba8:	ldr	x11, [sp, #24]
  434bac:	str	x9, [x11, #80]
  434bb0:	str	xzr, [sp, #48]
  434bb4:	ldr	x8, [sp, #48]
  434bb8:	ldur	x9, [x29, #-24]
  434bbc:	ldr	x9, [x9, #8]
  434bc0:	cmp	x8, x9
  434bc4:	b.ge	434df8 <_obstack_memory_used@@Base+0xd4d8>  // b.tcont
  434bc8:	ldur	x8, [x29, #-16]
  434bcc:	ldr	x8, [x8]
  434bd0:	ldur	x9, [x29, #-24]
  434bd4:	mov	x10, #0x10                  	// #16
  434bd8:	ldr	x9, [x9, #16]
  434bdc:	ldr	x11, [sp, #48]
  434be0:	mov	x12, #0x8                   	// #8
  434be4:	ldr	x9, [x9, x11, lsl #3]
  434be8:	mul	x9, x10, x9
  434bec:	add	x8, x8, x9
  434bf0:	str	x8, [sp, #16]
  434bf4:	ldr	x8, [sp, #16]
  434bf8:	ldr	w13, [x8, #8]
  434bfc:	and	w13, w13, #0xff
  434c00:	str	w13, [sp, #12]
  434c04:	ldr	x8, [sp, #16]
  434c08:	ldr	w13, [x8, #8]
  434c0c:	lsr	w12, w13, w12
  434c10:	and	w12, w12, #0x3ff
  434c14:	str	w12, [sp, #8]
  434c18:	ldr	w12, [sp, #12]
  434c1c:	cmp	w12, #0x1
  434c20:	b.ne	434c30 <_obstack_memory_used@@Base+0xd310>  // b.any
  434c24:	ldr	w8, [sp, #8]
  434c28:	cbnz	w8, 434c30 <_obstack_memory_used@@Base+0xd310>
  434c2c:	b	434de8 <_obstack_memory_used@@Base+0xd4c8>
  434c30:	ldr	x8, [sp, #16]
  434c34:	ldr	w9, [x8, #8]
  434c38:	lsr	w9, w9, #20
  434c3c:	and	w9, w9, #0x1
  434c40:	ldr	x8, [sp, #24]
  434c44:	ldrb	w10, [x8, #104]
  434c48:	mov	w11, #0x5                   	// #5
  434c4c:	lsr	w10, w10, w11
  434c50:	mov	w12, #0x1                   	// #1
  434c54:	and	w10, w10, #0x1
  434c58:	and	w10, w10, #0xff
  434c5c:	orr	w9, w10, w9
  434c60:	ldrb	w10, [x8, #104]
  434c64:	and	w9, w9, w12
  434c68:	lsl	w9, w9, w11
  434c6c:	and	w10, w10, #0xffffffdf
  434c70:	orr	w9, w10, w9
  434c74:	strb	w9, [x8, #104]
  434c78:	ldr	w9, [sp, #12]
  434c7c:	cmp	w9, #0x2
  434c80:	b.ne	434c9c <_obstack_memory_used@@Base+0xd37c>  // b.any
  434c84:	ldr	x8, [sp, #24]
  434c88:	ldrb	w9, [x8, #104]
  434c8c:	and	w9, w9, #0xffffffef
  434c90:	orr	w9, w9, #0x10
  434c94:	strb	w9, [x8, #104]
  434c98:	b	434cbc <_obstack_memory_used@@Base+0xd39c>
  434c9c:	ldr	w8, [sp, #12]
  434ca0:	cmp	w8, #0x4
  434ca4:	b.ne	434cbc <_obstack_memory_used@@Base+0xd39c>  // b.any
  434ca8:	ldr	x8, [sp, #24]
  434cac:	ldrb	w9, [x8, #104]
  434cb0:	and	w9, w9, #0xffffffbf
  434cb4:	orr	w9, w9, #0x40
  434cb8:	strb	w9, [x8, #104]
  434cbc:	ldr	w8, [sp, #8]
  434cc0:	cbz	w8, 434de8 <_obstack_memory_used@@Base+0xd4c8>
  434cc4:	ldr	x8, [sp, #24]
  434cc8:	ldr	x8, [x8, #80]
  434ccc:	ldr	x9, [sp, #24]
  434cd0:	add	x9, x9, #0x8
  434cd4:	cmp	x8, x9
  434cd8:	b.ne	434d64 <_obstack_memory_used@@Base+0xd444>  // b.any
  434cdc:	mov	x0, #0x18                  	// #24
  434ce0:	bl	402450 <malloc@plt>
  434ce4:	str	x0, [sp]
  434ce8:	ldr	x8, [sp]
  434cec:	cmp	x8, #0x0
  434cf0:	cset	w9, eq  // eq = none
  434cf4:	and	w9, w9, #0x1
  434cf8:	mov	w0, w9
  434cfc:	sxtw	x8, w0
  434d00:	cbz	x8, 434d18 <_obstack_memory_used@@Base+0xd3f8>
  434d04:	ldr	x0, [sp, #24]
  434d08:	bl	42a568 <_obstack_memory_used@@Base+0x2c48>
  434d0c:	mov	x8, xzr
  434d10:	stur	x8, [x29, #-8]
  434d14:	b	434e40 <_obstack_memory_used@@Base+0xd520>
  434d18:	ldr	x8, [sp]
  434d1c:	ldr	x9, [sp, #24]
  434d20:	str	x8, [x9, #80]
  434d24:	ldr	x8, [sp, #24]
  434d28:	ldr	x0, [x8, #80]
  434d2c:	ldur	x1, [x29, #-24]
  434d30:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  434d34:	cbz	w0, 434d4c <_obstack_memory_used@@Base+0xd42c>
  434d38:	ldr	x0, [sp, #24]
  434d3c:	bl	42a568 <_obstack_memory_used@@Base+0x2c48>
  434d40:	mov	x8, xzr
  434d44:	stur	x8, [x29, #-8]
  434d48:	b	434e40 <_obstack_memory_used@@Base+0xd520>
  434d4c:	str	xzr, [sp, #40]
  434d50:	ldr	x8, [sp, #24]
  434d54:	ldrb	w9, [x8, #104]
  434d58:	and	w9, w9, #0x7f
  434d5c:	orr	w9, w9, #0xffffff80
  434d60:	strb	w9, [x8, #104]
  434d64:	ldr	w8, [sp, #8]
  434d68:	and	w8, w8, #0x1
  434d6c:	cbz	w8, 434d7c <_obstack_memory_used@@Base+0xd45c>
  434d70:	ldur	w8, [x29, #-28]
  434d74:	and	w8, w8, #0x1
  434d78:	cbz	w8, 434dc4 <_obstack_memory_used@@Base+0xd4a4>
  434d7c:	ldr	w8, [sp, #8]
  434d80:	and	w8, w8, #0x2
  434d84:	cbz	w8, 434d94 <_obstack_memory_used@@Base+0xd474>
  434d88:	ldur	w8, [x29, #-28]
  434d8c:	and	w8, w8, #0x1
  434d90:	cbnz	w8, 434dc4 <_obstack_memory_used@@Base+0xd4a4>
  434d94:	ldr	w8, [sp, #8]
  434d98:	and	w8, w8, #0x10
  434d9c:	cbz	w8, 434dac <_obstack_memory_used@@Base+0xd48c>
  434da0:	ldur	w8, [x29, #-28]
  434da4:	and	w8, w8, #0x2
  434da8:	cbz	w8, 434dc4 <_obstack_memory_used@@Base+0xd4a4>
  434dac:	ldr	w8, [sp, #8]
  434db0:	and	w8, w8, #0x40
  434db4:	cbz	w8, 434de8 <_obstack_memory_used@@Base+0xd4c8>
  434db8:	ldur	w8, [x29, #-28]
  434dbc:	and	w8, w8, #0x4
  434dc0:	cbnz	w8, 434de8 <_obstack_memory_used@@Base+0xd4c8>
  434dc4:	ldr	x8, [sp, #24]
  434dc8:	add	x0, x8, #0x8
  434dcc:	ldr	x8, [sp, #48]
  434dd0:	ldr	x9, [sp, #40]
  434dd4:	subs	x1, x8, x9
  434dd8:	bl	434e50 <_obstack_memory_used@@Base+0xd530>
  434ddc:	ldr	x8, [sp, #40]
  434de0:	add	x8, x8, #0x1
  434de4:	str	x8, [sp, #40]
  434de8:	ldr	x8, [sp, #48]
  434dec:	add	x8, x8, #0x1
  434df0:	str	x8, [sp, #48]
  434df4:	b	434bb4 <_obstack_memory_used@@Base+0xd294>
  434df8:	ldur	x0, [x29, #-16]
  434dfc:	ldr	x1, [sp, #24]
  434e00:	ldur	x2, [x29, #-40]
  434e04:	bl	434ee4 <_obstack_memory_used@@Base+0xd5c4>
  434e08:	str	w0, [sp, #36]
  434e0c:	ldr	w8, [sp, #36]
  434e10:	cmp	w8, #0x0
  434e14:	cset	w8, ne  // ne = any
  434e18:	and	w8, w8, #0x1
  434e1c:	mov	w1, w8
  434e20:	sxtw	x9, w1
  434e24:	cbz	x9, 434e38 <_obstack_memory_used@@Base+0xd518>
  434e28:	ldr	x0, [sp, #24]
  434e2c:	bl	42a568 <_obstack_memory_used@@Base+0x2c48>
  434e30:	mov	x8, xzr
  434e34:	str	x8, [sp, #24]
  434e38:	ldr	x8, [sp, #24]
  434e3c:	stur	x8, [x29, #-8]
  434e40:	ldur	x0, [x29, #-8]
  434e44:	ldp	x29, x30, [sp, #96]
  434e48:	add	sp, sp, #0x70
  434e4c:	ret
  434e50:	sub	sp, sp, #0x10
  434e54:	str	x0, [sp, #8]
  434e58:	str	x1, [sp]
  434e5c:	ldr	x8, [sp]
  434e60:	cmp	x8, #0x0
  434e64:	cset	w9, lt  // lt = tstop
  434e68:	tbnz	w9, #0, 434e80 <_obstack_memory_used@@Base+0xd560>
  434e6c:	ldr	x8, [sp]
  434e70:	ldr	x9, [sp, #8]
  434e74:	ldr	x9, [x9, #8]
  434e78:	cmp	x8, x9
  434e7c:	b.lt	434e84 <_obstack_memory_used@@Base+0xd564>  // b.tstop
  434e80:	b	434edc <_obstack_memory_used@@Base+0xd5bc>
  434e84:	ldr	x8, [sp, #8]
  434e88:	ldr	x9, [x8, #8]
  434e8c:	subs	x9, x9, #0x1
  434e90:	str	x9, [x8, #8]
  434e94:	ldr	x8, [sp]
  434e98:	ldr	x9, [sp, #8]
  434e9c:	ldr	x9, [x9, #8]
  434ea0:	cmp	x8, x9
  434ea4:	b.ge	434edc <_obstack_memory_used@@Base+0xd5bc>  // b.tcont
  434ea8:	ldr	x8, [sp, #8]
  434eac:	ldr	x8, [x8, #16]
  434eb0:	ldr	x9, [sp]
  434eb4:	add	x9, x9, #0x1
  434eb8:	ldr	x8, [x8, x9, lsl #3]
  434ebc:	ldr	x9, [sp, #8]
  434ec0:	ldr	x9, [x9, #16]
  434ec4:	ldr	x10, [sp]
  434ec8:	str	x8, [x9, x10, lsl #3]
  434ecc:	ldr	x8, [sp]
  434ed0:	add	x8, x8, #0x1
  434ed4:	str	x8, [sp]
  434ed8:	b	434e94 <_obstack_memory_used@@Base+0xd574>
  434edc:	add	sp, sp, #0x10
  434ee0:	ret
  434ee4:	sub	sp, sp, #0x60
  434ee8:	stp	x29, x30, [sp, #80]
  434eec:	add	x29, sp, #0x50
  434ef0:	stur	x0, [x29, #-16]
  434ef4:	stur	x1, [x29, #-24]
  434ef8:	stur	x2, [x29, #-32]
  434efc:	ldur	x8, [x29, #-32]
  434f00:	ldur	x9, [x29, #-24]
  434f04:	str	x8, [x9]
  434f08:	ldur	x8, [x29, #-24]
  434f0c:	add	x0, x8, #0x20
  434f10:	ldur	x8, [x29, #-24]
  434f14:	ldr	x1, [x8, #16]
  434f18:	bl	433718 <_obstack_memory_used@@Base+0xbdf8>
  434f1c:	str	w0, [sp, #36]
  434f20:	ldr	w10, [sp, #36]
  434f24:	cmp	w10, #0x0
  434f28:	cset	w10, ne  // ne = any
  434f2c:	and	w10, w10, #0x1
  434f30:	mov	w1, w10
  434f34:	sxtw	x8, w1
  434f38:	cbz	x8, 434f48 <_obstack_memory_used@@Base+0xd628>
  434f3c:	mov	w8, #0xc                   	// #12
  434f40:	stur	w8, [x29, #-4]
  434f44:	b	4350c0 <_obstack_memory_used@@Base+0xd7a0>
  434f48:	str	xzr, [sp, #24]
  434f4c:	ldr	x8, [sp, #24]
  434f50:	ldur	x9, [x29, #-24]
  434f54:	ldr	x9, [x9, #16]
  434f58:	cmp	x8, x9
  434f5c:	b.ge	434fcc <_obstack_memory_used@@Base+0xd6ac>  // b.tcont
  434f60:	ldur	x8, [x29, #-24]
  434f64:	mov	x9, #0x10                  	// #16
  434f68:	ldr	x8, [x8, #24]
  434f6c:	ldr	x10, [sp, #24]
  434f70:	ldr	x8, [x8, x10, lsl #3]
  434f74:	str	x8, [sp, #16]
  434f78:	ldur	x8, [x29, #-16]
  434f7c:	ldr	x8, [x8]
  434f80:	ldr	x10, [sp, #16]
  434f84:	mul	x9, x9, x10
  434f88:	add	x8, x8, x9
  434f8c:	ldr	w11, [x8, #8]
  434f90:	and	w11, w11, #0xff
  434f94:	and	w11, w11, #0x8
  434f98:	cbnz	w11, 434fbc <_obstack_memory_used@@Base+0xd69c>
  434f9c:	ldur	x8, [x29, #-24]
  434fa0:	add	x0, x8, #0x20
  434fa4:	ldr	x1, [sp, #16]
  434fa8:	bl	434594 <_obstack_memory_used@@Base+0xcc74>
  434fac:	tbnz	w0, #0, 434fbc <_obstack_memory_used@@Base+0xd69c>
  434fb0:	mov	w8, #0xc                   	// #12
  434fb4:	stur	w8, [x29, #-4]
  434fb8:	b	4350c0 <_obstack_memory_used@@Base+0xd7a0>
  434fbc:	ldr	x8, [sp, #24]
  434fc0:	add	x8, x8, #0x1
  434fc4:	str	x8, [sp, #24]
  434fc8:	b	434f4c <_obstack_memory_used@@Base+0xd62c>
  434fcc:	ldur	x8, [x29, #-16]
  434fd0:	ldr	x8, [x8, #64]
  434fd4:	ldur	x9, [x29, #-32]
  434fd8:	ldur	x10, [x29, #-16]
  434fdc:	ldr	x10, [x10, #136]
  434fe0:	and	x9, x9, x10
  434fe4:	mov	x10, #0x18                  	// #24
  434fe8:	mul	x9, x10, x9
  434fec:	add	x8, x8, x9
  434ff0:	str	x8, [sp, #40]
  434ff4:	ldr	x8, [sp, #40]
  434ff8:	ldr	x8, [x8, #8]
  434ffc:	ldr	x9, [sp, #40]
  435000:	ldr	x9, [x9]
  435004:	cmp	x8, x9
  435008:	cset	w11, le
  43500c:	and	w11, w11, #0x1
  435010:	mov	w0, w11
  435014:	sxtw	x8, w0
  435018:	cbz	x8, 435090 <_obstack_memory_used@@Base+0xd770>
  43501c:	ldr	x8, [sp, #40]
  435020:	ldr	x8, [x8]
  435024:	mov	x9, #0x2                   	// #2
  435028:	mul	x8, x9, x8
  43502c:	add	x8, x8, #0x2
  435030:	str	x8, [sp, #8]
  435034:	ldr	x8, [sp, #40]
  435038:	ldr	x0, [x8, #16]
  43503c:	ldr	x8, [sp, #8]
  435040:	mov	x9, #0x8                   	// #8
  435044:	mul	x1, x8, x9
  435048:	bl	402570 <realloc@plt>
  43504c:	str	x0, [sp]
  435050:	ldr	x8, [sp]
  435054:	cmp	x8, #0x0
  435058:	cset	w10, eq  // eq = none
  43505c:	and	w10, w10, #0x1
  435060:	mov	w0, w10
  435064:	sxtw	x8, w0
  435068:	cbz	x8, 435078 <_obstack_memory_used@@Base+0xd758>
  43506c:	mov	w8, #0xc                   	// #12
  435070:	stur	w8, [x29, #-4]
  435074:	b	4350c0 <_obstack_memory_used@@Base+0xd7a0>
  435078:	ldr	x8, [sp]
  43507c:	ldr	x9, [sp, #40]
  435080:	str	x8, [x9, #16]
  435084:	ldr	x8, [sp, #8]
  435088:	ldr	x9, [sp, #40]
  43508c:	str	x8, [x9, #8]
  435090:	ldur	x8, [x29, #-24]
  435094:	ldr	x9, [sp, #40]
  435098:	ldr	x9, [x9, #16]
  43509c:	ldr	x10, [sp, #40]
  4350a0:	ldr	x11, [x10]
  4350a4:	add	x12, x11, #0x1
  4350a8:	str	x12, [x10]
  4350ac:	mov	x10, #0x8                   	// #8
  4350b0:	mul	x10, x10, x11
  4350b4:	add	x9, x9, x10
  4350b8:	str	x8, [x9]
  4350bc:	stur	wzr, [x29, #-4]
  4350c0:	ldur	w0, [x29, #-4]
  4350c4:	ldp	x29, x30, [sp, #80]
  4350c8:	add	sp, sp, #0x60
  4350cc:	ret
  4350d0:	sub	sp, sp, #0x60
  4350d4:	stp	x29, x30, [sp, #80]
  4350d8:	add	x29, sp, #0x50
  4350dc:	mov	w8, #0x1                   	// #1
  4350e0:	stur	x0, [x29, #-16]
  4350e4:	stur	x1, [x29, #-24]
  4350e8:	stur	x2, [x29, #-32]
  4350ec:	stur	w3, [x29, #-36]
  4350f0:	str	w8, [sp, #40]
  4350f4:	ldur	x9, [x29, #-32]
  4350f8:	add	x9, x9, #0x1
  4350fc:	str	x9, [sp, #24]
  435100:	ldur	w8, [x29, #-36]
  435104:	cbnz	w8, 4351a4 <_obstack_memory_used@@Base+0xd884>
  435108:	ldr	x8, [sp, #24]
  43510c:	mov	x9, #0x8                   	// #8
  435110:	mul	x0, x8, x9
  435114:	bl	402450 <malloc@plt>
  435118:	ldur	x8, [x29, #-16]
  43511c:	str	x0, [x8, #8]
  435120:	ldur	x8, [x29, #-16]
  435124:	ldr	x8, [x8, #8]
  435128:	cmp	x8, #0x0
  43512c:	cset	w10, eq  // eq = none
  435130:	and	w10, w10, #0x1
  435134:	mov	w0, w10
  435138:	sxtw	x8, w0
  43513c:	cbz	x8, 435148 <_obstack_memory_used@@Base+0xd828>
  435140:	stur	wzr, [x29, #-4]
  435144:	b	435370 <_obstack_memory_used@@Base+0xda50>
  435148:	ldr	x8, [sp, #24]
  43514c:	mov	x9, #0x8                   	// #8
  435150:	mul	x0, x8, x9
  435154:	bl	402450 <malloc@plt>
  435158:	ldur	x8, [x29, #-16]
  43515c:	str	x0, [x8, #16]
  435160:	ldur	x8, [x29, #-16]
  435164:	ldr	x8, [x8, #16]
  435168:	cmp	x8, #0x0
  43516c:	cset	w10, eq  // eq = none
  435170:	and	w10, w10, #0x1
  435174:	mov	w0, w10
  435178:	sxtw	x8, w0
  43517c:	cbz	x8, 435194 <_obstack_memory_used@@Base+0xd874>
  435180:	ldur	x8, [x29, #-16]
  435184:	ldr	x0, [x8, #8]
  435188:	bl	4026c0 <free@plt>
  43518c:	stur	wzr, [x29, #-4]
  435190:	b	435370 <_obstack_memory_used@@Base+0xda50>
  435194:	ldr	x8, [sp, #24]
  435198:	ldur	x9, [x29, #-16]
  43519c:	str	x8, [x9]
  4351a0:	b	4352b4 <_obstack_memory_used@@Base+0xd994>
  4351a4:	ldur	w8, [x29, #-36]
  4351a8:	cmp	w8, #0x1
  4351ac:	b.ne	435284 <_obstack_memory_used@@Base+0xd964>  // b.any
  4351b0:	ldr	x8, [sp, #24]
  4351b4:	ldur	x9, [x29, #-16]
  4351b8:	ldr	x9, [x9]
  4351bc:	cmp	x8, x9
  4351c0:	cset	w10, hi  // hi = pmore
  4351c4:	and	w10, w10, #0x1
  4351c8:	mov	w0, w10
  4351cc:	sxtw	x8, w0
  4351d0:	cbz	x8, 435280 <_obstack_memory_used@@Base+0xd960>
  4351d4:	ldur	x8, [x29, #-16]
  4351d8:	ldr	x0, [x8, #8]
  4351dc:	ldr	x8, [sp, #24]
  4351e0:	mov	x9, #0x8                   	// #8
  4351e4:	mul	x1, x8, x9
  4351e8:	bl	402570 <realloc@plt>
  4351ec:	str	x0, [sp, #16]
  4351f0:	ldr	x8, [sp, #16]
  4351f4:	cmp	x8, #0x0
  4351f8:	cset	w10, eq  // eq = none
  4351fc:	and	w10, w10, #0x1
  435200:	mov	w0, w10
  435204:	sxtw	x8, w0
  435208:	cbz	x8, 435214 <_obstack_memory_used@@Base+0xd8f4>
  43520c:	stur	wzr, [x29, #-4]
  435210:	b	435370 <_obstack_memory_used@@Base+0xda50>
  435214:	ldur	x8, [x29, #-16]
  435218:	ldr	x0, [x8, #16]
  43521c:	ldr	x8, [sp, #24]
  435220:	mov	x9, #0x8                   	// #8
  435224:	mul	x1, x8, x9
  435228:	bl	402570 <realloc@plt>
  43522c:	str	x0, [sp, #8]
  435230:	ldr	x8, [sp, #8]
  435234:	cmp	x8, #0x0
  435238:	cset	w10, eq  // eq = none
  43523c:	and	w10, w10, #0x1
  435240:	mov	w0, w10
  435244:	sxtw	x8, w0
  435248:	cbz	x8, 43525c <_obstack_memory_used@@Base+0xd93c>
  43524c:	ldr	x0, [sp, #16]
  435250:	bl	4026c0 <free@plt>
  435254:	stur	wzr, [x29, #-4]
  435258:	b	435370 <_obstack_memory_used@@Base+0xda50>
  43525c:	ldr	x8, [sp, #16]
  435260:	ldur	x9, [x29, #-16]
  435264:	str	x8, [x9, #8]
  435268:	ldr	x8, [sp, #8]
  43526c:	ldur	x9, [x29, #-16]
  435270:	str	x8, [x9, #16]
  435274:	ldr	x8, [sp, #24]
  435278:	ldur	x9, [x29, #-16]
  43527c:	str	x8, [x9]
  435280:	b	4352b4 <_obstack_memory_used@@Base+0xd994>
  435284:	ldur	w8, [x29, #-36]
  435288:	cmp	w8, #0x2
  43528c:	b.ne	435294 <_obstack_memory_used@@Base+0xd974>  // b.any
  435290:	b	435294 <_obstack_memory_used@@Base+0xd974>
  435294:	ldur	x8, [x29, #-32]
  435298:	ldur	x9, [x29, #-16]
  43529c:	ldr	x9, [x9]
  4352a0:	cmp	x8, x9
  4352a4:	b.hi	4352ac <_obstack_memory_used@@Base+0xd98c>  // b.pmore
  4352a8:	b	4352ac <_obstack_memory_used@@Base+0xd98c>
  4352ac:	mov	w8, #0x2                   	// #2
  4352b0:	str	w8, [sp, #40]
  4352b4:	str	xzr, [sp, #32]
  4352b8:	ldr	x8, [sp, #32]
  4352bc:	ldur	x9, [x29, #-32]
  4352c0:	cmp	x8, x9
  4352c4:	b.ge	435320 <_obstack_memory_used@@Base+0xda00>  // b.tcont
  4352c8:	ldur	x8, [x29, #-24]
  4352cc:	ldr	x9, [sp, #32]
  4352d0:	mov	x10, #0x10                  	// #16
  4352d4:	mul	x9, x10, x9
  4352d8:	ldr	x8, [x8, x9]
  4352dc:	ldur	x9, [x29, #-16]
  4352e0:	ldr	x9, [x9, #8]
  4352e4:	ldr	x11, [sp, #32]
  4352e8:	str	x8, [x9, x11, lsl #3]
  4352ec:	ldur	x8, [x29, #-24]
  4352f0:	ldr	x9, [sp, #32]
  4352f4:	mul	x9, x10, x9
  4352f8:	add	x8, x8, x9
  4352fc:	ldr	x8, [x8, #8]
  435300:	ldur	x9, [x29, #-16]
  435304:	ldr	x9, [x9, #16]
  435308:	ldr	x10, [sp, #32]
  43530c:	str	x8, [x9, x10, lsl #3]
  435310:	ldr	x8, [sp, #32]
  435314:	add	x8, x8, #0x1
  435318:	str	x8, [sp, #32]
  43531c:	b	4352b8 <_obstack_memory_used@@Base+0xd998>
  435320:	ldr	x8, [sp, #32]
  435324:	ldur	x9, [x29, #-16]
  435328:	ldr	x9, [x9]
  43532c:	cmp	x8, x9
  435330:	b.cs	435368 <_obstack_memory_used@@Base+0xda48>  // b.hs, b.nlast
  435334:	ldur	x8, [x29, #-16]
  435338:	ldr	x8, [x8, #16]
  43533c:	ldr	x9, [sp, #32]
  435340:	mov	x10, #0xffffffffffffffff    	// #-1
  435344:	str	x10, [x8, x9, lsl #3]
  435348:	ldur	x8, [x29, #-16]
  43534c:	ldr	x8, [x8, #8]
  435350:	ldr	x9, [sp, #32]
  435354:	str	x10, [x8, x9, lsl #3]
  435358:	ldr	x8, [sp, #32]
  43535c:	add	x8, x8, #0x1
  435360:	str	x8, [sp, #32]
  435364:	b	435320 <_obstack_memory_used@@Base+0xda00>
  435368:	ldr	w8, [sp, #40]
  43536c:	stur	w8, [x29, #-4]
  435370:	ldur	w0, [x29, #-4]
  435374:	ldp	x29, x30, [sp, #80]
  435378:	add	sp, sp, #0x60
  43537c:	ret
  435380:	sub	sp, sp, #0x80
  435384:	stp	x29, x30, [sp, #112]
  435388:	add	x29, sp, #0x70
  43538c:	mov	w8, #0x1                   	// #1
  435390:	stur	x0, [x29, #-16]
  435394:	stur	x1, [x29, #-24]
  435398:	stur	x2, [x29, #-32]
  43539c:	stur	x3, [x29, #-40]
  4353a0:	stur	x4, [x29, #-48]
  4353a4:	and	w8, w5, w8
  4353a8:	sturb	w8, [x29, #-49]
  4353ac:	str	x6, [sp, #48]
  4353b0:	ldur	x9, [x29, #-40]
  4353b4:	ldr	x10, [sp, #48]
  4353b8:	ldrsw	x10, [x10, #180]
  4353bc:	cmp	x9, x10
  4353c0:	b.ge	4353d0 <_obstack_memory_used@@Base+0xdab0>  // b.tcont
  4353c4:	ldr	x8, [sp, #48]
  4353c8:	ldrsw	x8, [x8, #180]
  4353cc:	stur	x8, [x29, #-40]
  4353d0:	ldur	x8, [x29, #-32]
  4353d4:	add	x8, x8, #0x1
  4353d8:	ldur	x9, [x29, #-40]
  4353dc:	cmp	x8, x9
  4353e0:	b.ge	4353f4 <_obstack_memory_used@@Base+0xdad4>  // b.tcont
  4353e4:	ldur	x8, [x29, #-32]
  4353e8:	add	x8, x8, #0x1
  4353ec:	str	x8, [sp, #24]
  4353f0:	b	4353fc <_obstack_memory_used@@Base+0xdadc>
  4353f4:	ldur	x8, [x29, #-40]
  4353f8:	str	x8, [sp, #24]
  4353fc:	ldr	x8, [sp, #24]
  435400:	str	x8, [sp, #32]
  435404:	ldur	x0, [x29, #-24]
  435408:	ldur	x1, [x29, #-32]
  43540c:	ldur	x2, [x29, #-16]
  435410:	ldur	x3, [x29, #-48]
  435414:	ldurb	w9, [x29, #-49]
  435418:	ldr	x5, [sp, #48]
  43541c:	and	w4, w9, #0x1
  435420:	bl	42bb08 <_obstack_memory_used@@Base+0x41e8>
  435424:	ldur	x0, [x29, #-16]
  435428:	ldr	x1, [sp, #32]
  43542c:	bl	42bc10 <_obstack_memory_used@@Base+0x42f0>
  435430:	str	w0, [sp, #44]
  435434:	ldr	w9, [sp, #44]
  435438:	cmp	w9, #0x0
  43543c:	cset	w9, ne  // ne = any
  435440:	and	w9, w9, #0x1
  435444:	mov	w1, w9
  435448:	sxtw	x8, w1
  43544c:	cbz	x8, 43545c <_obstack_memory_used@@Base+0xdb3c>
  435450:	ldr	w8, [sp, #44]
  435454:	stur	w8, [x29, #-4]
  435458:	b	43550c <_obstack_memory_used@@Base+0xdbec>
  43545c:	ldr	x8, [sp, #48]
  435460:	add	x8, x8, #0xb8
  435464:	ldur	x9, [x29, #-16]
  435468:	str	x8, [x9, #128]
  43546c:	ldr	x8, [sp, #48]
  435470:	ldrb	w10, [x8, #176]
  435474:	mov	w11, #0x4                   	// #4
  435478:	lsr	w10, w10, w11
  43547c:	and	w10, w10, #0x1
  435480:	and	w10, w10, #0xff
  435484:	ldur	x8, [x29, #-16]
  435488:	strb	w10, [x8, #142]
  43548c:	ldur	x8, [x29, #-16]
  435490:	ldrb	w10, [x8, #139]
  435494:	cbz	w10, 4354a8 <_obstack_memory_used@@Base+0xdb88>
  435498:	ldur	x8, [x29, #-16]
  43549c:	ldr	x8, [x8, #8]
  4354a0:	str	x8, [sp, #16]
  4354a4:	b	4354b0 <_obstack_memory_used@@Base+0xdb90>
  4354a8:	ldur	x8, [x29, #-24]
  4354ac:	str	x8, [sp, #16]
  4354b0:	ldr	x8, [sp, #16]
  4354b4:	ldur	x9, [x29, #-16]
  4354b8:	str	x8, [x9, #8]
  4354bc:	ldur	x8, [x29, #-16]
  4354c0:	ldrb	w10, [x8, #139]
  4354c4:	cbnz	w10, 4354d8 <_obstack_memory_used@@Base+0xdbb8>
  4354c8:	ldr	x8, [sp, #48]
  4354cc:	ldr	w9, [x8, #180]
  4354d0:	cmp	w9, #0x1
  4354d4:	b.le	4354e4 <_obstack_memory_used@@Base+0xdbc4>
  4354d8:	mov	x8, xzr
  4354dc:	str	x8, [sp, #8]
  4354e0:	b	4354ec <_obstack_memory_used@@Base+0xdbcc>
  4354e4:	ldur	x8, [x29, #-32]
  4354e8:	str	x8, [sp, #8]
  4354ec:	ldr	x8, [sp, #8]
  4354f0:	ldur	x9, [x29, #-16]
  4354f4:	str	x8, [x9, #48]
  4354f8:	ldur	x8, [x29, #-16]
  4354fc:	ldr	x8, [x8, #48]
  435500:	ldur	x9, [x29, #-16]
  435504:	str	x8, [x9, #56]
  435508:	stur	wzr, [x29, #-4]
  43550c:	ldur	w0, [x29, #-4]
  435510:	ldp	x29, x30, [sp, #112]
  435514:	add	sp, sp, #0x80
  435518:	ret
  43551c:	sub	sp, sp, #0x50
  435520:	stp	x29, x30, [sp, #64]
  435524:	add	x29, sp, #0x40
  435528:	mov	x8, #0xffffffffffffffff    	// #-1
  43552c:	stur	x0, [x29, #-16]
  435530:	stur	w1, [x29, #-20]
  435534:	str	x2, [sp, #32]
  435538:	ldur	w9, [x29, #-20]
  43553c:	ldur	x10, [x29, #-16]
  435540:	str	w9, [x10, #160]
  435544:	ldur	x10, [x29, #-16]
  435548:	str	x8, [x10, #168]
  43554c:	ldr	x8, [sp, #32]
  435550:	cmp	x8, #0x0
  435554:	cset	w9, le
  435558:	tbnz	w9, #0, 43563c <_obstack_memory_used@@Base+0xdd1c>
  43555c:	mov	x8, #0x28                  	// #40
  435560:	str	x8, [sp, #24]
  435564:	ldr	x8, [sp, #24]
  435568:	mov	x9, #0xffffffffffffffff    	// #-1
  43556c:	udiv	x8, x9, x8
  435570:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  435574:	cmp	x9, x8
  435578:	b.cs	435588 <_obstack_memory_used@@Base+0xdc68>  // b.hs, b.nlast
  43557c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  435580:	str	x8, [sp, #16]
  435584:	b	435598 <_obstack_memory_used@@Base+0xdc78>
  435588:	ldr	x8, [sp, #24]
  43558c:	mov	x9, #0xffffffffffffffff    	// #-1
  435590:	udiv	x8, x9, x8
  435594:	str	x8, [sp, #16]
  435598:	ldr	x8, [sp, #16]
  43559c:	ldr	x9, [sp, #32]
  4355a0:	cmp	x8, x9
  4355a4:	cset	w10, cc  // cc = lo, ul, last
  4355a8:	and	w10, w10, #0x1
  4355ac:	mov	w0, w10
  4355b0:	sxtw	x8, w0
  4355b4:	cbz	x8, 4355c4 <_obstack_memory_used@@Base+0xdca4>
  4355b8:	mov	w8, #0xc                   	// #12
  4355bc:	stur	w8, [x29, #-4]
  4355c0:	b	435664 <_obstack_memory_used@@Base+0xdd44>
  4355c4:	ldr	x8, [sp, #32]
  4355c8:	mov	x9, #0x28                  	// #40
  4355cc:	mul	x0, x8, x9
  4355d0:	bl	402450 <malloc@plt>
  4355d4:	ldur	x8, [x29, #-16]
  4355d8:	str	x0, [x8, #216]
  4355dc:	ldr	x8, [sp, #32]
  4355e0:	mov	x9, #0x8                   	// #8
  4355e4:	mul	x0, x8, x9
  4355e8:	bl	402450 <malloc@plt>
  4355ec:	ldur	x8, [x29, #-16]
  4355f0:	str	x0, [x8, #248]
  4355f4:	ldur	x8, [x29, #-16]
  4355f8:	ldr	x8, [x8, #216]
  4355fc:	mov	w10, #0x1                   	// #1
  435600:	str	w10, [sp, #12]
  435604:	cbz	x8, 43561c <_obstack_memory_used@@Base+0xdcfc>
  435608:	ldur	x8, [x29, #-16]
  43560c:	ldr	x8, [x8, #248]
  435610:	cmp	x8, #0x0
  435614:	cset	w9, eq  // eq = none
  435618:	str	w9, [sp, #12]
  43561c:	ldr	w8, [sp, #12]
  435620:	and	w8, w8, #0x1
  435624:	mov	w0, w8
  435628:	sxtw	x9, w0
  43562c:	cbz	x9, 43563c <_obstack_memory_used@@Base+0xdd1c>
  435630:	mov	w8, #0xc                   	// #12
  435634:	stur	w8, [x29, #-4]
  435638:	b	435664 <_obstack_memory_used@@Base+0xdd44>
  43563c:	ldr	x8, [sp, #32]
  435640:	ldur	x9, [x29, #-16]
  435644:	str	x8, [x9, #208]
  435648:	ldur	x8, [x29, #-16]
  43564c:	mov	w10, #0x1                   	// #1
  435650:	str	w10, [x8, #224]
  435654:	ldr	x8, [sp, #32]
  435658:	ldur	x9, [x29, #-16]
  43565c:	str	x8, [x9, #240]
  435660:	stur	wzr, [x29, #-4]
  435664:	ldur	w0, [x29, #-4]
  435668:	ldp	x29, x30, [sp, #64]
  43566c:	add	sp, sp, #0x50
  435670:	ret
  435674:	sub	sp, sp, #0xf0
  435678:	stp	x29, x30, [sp, #224]
  43567c:	add	x29, sp, #0xe0
  435680:	sub	x8, x29, #0x28
  435684:	str	x0, [x8, #24]
  435688:	str	x1, [x8, #16]
  43568c:	stur	w2, [x29, #-28]
  435690:	ldr	x9, [x8, #24]
  435694:	ldr	x9, [x9, #40]
  435698:	ldr	x10, [x8, #16]
  43569c:	cmp	x9, x10
  4356a0:	cset	w11, le
  4356a4:	and	w11, w11, #0x1
  4356a8:	mov	w0, w11
  4356ac:	sxtw	x9, w0
  4356b0:	str	x8, [sp, #40]
  4356b4:	cbz	x9, 4356d4 <_obstack_memory_used@@Base+0xddb4>
  4356b8:	ldr	x8, [sp, #40]
  4356bc:	ldr	x9, [x8, #16]
  4356c0:	ldr	x10, [x8, #24]
  4356c4:	ldr	x10, [x10, #40]
  4356c8:	subs	x9, x9, x10
  4356cc:	str	x9, [x8]
  4356d0:	b	435784 <_obstack_memory_used@@Base+0xde64>
  4356d4:	ldr	x8, [sp, #40]
  4356d8:	ldr	x9, [x8, #24]
  4356dc:	ldr	w10, [x9, #144]
  4356e0:	cmp	w10, #0x1
  4356e4:	b.le	4356f4 <_obstack_memory_used@@Base+0xddd4>
  4356e8:	ldr	x8, [sp, #40]
  4356ec:	ldr	x9, [x8, #24]
  4356f0:	str	xzr, [x9, #32]
  4356f4:	ldr	x8, [sp, #40]
  4356f8:	ldr	x9, [x8, #24]
  4356fc:	ldr	x9, [x9, #80]
  435700:	ldr	x10, [x8, #24]
  435704:	str	x9, [x10, #88]
  435708:	ldr	x9, [x8, #24]
  43570c:	ldr	x9, [x9, #96]
  435710:	ldr	x10, [x8, #24]
  435714:	str	x9, [x10, #104]
  435718:	ldr	x9, [x8, #24]
  43571c:	str	xzr, [x9, #48]
  435720:	ldr	x9, [x8, #24]
  435724:	str	xzr, [x9, #40]
  435728:	ldr	x9, [x8, #24]
  43572c:	str	xzr, [x9, #56]
  435730:	ldr	x9, [x8, #24]
  435734:	mov	w11, #0x0                   	// #0
  435738:	strb	w11, [x9, #140]
  43573c:	ldur	w11, [x29, #-28]
  435740:	mov	w12, #0x6                   	// #6
  435744:	mov	w13, #0x4                   	// #4
  435748:	tst	w11, #0x1
  43574c:	csel	w11, w13, w12, ne  // ne = any
  435750:	ldr	x9, [x8, #24]
  435754:	str	w11, [x9, #112]
  435758:	ldr	x9, [x8, #24]
  43575c:	ldrb	w11, [x9, #139]
  435760:	cbnz	w11, 435778 <_obstack_memory_used@@Base+0xde58>
  435764:	ldr	x8, [sp, #40]
  435768:	ldr	x9, [x8, #24]
  43576c:	ldr	x9, [x9]
  435770:	ldr	x10, [x8, #24]
  435774:	str	x9, [x10, #8]
  435778:	ldr	x8, [sp, #40]
  43577c:	ldr	x9, [x8, #16]
  435780:	str	x9, [x8]
  435784:	ldr	x8, [sp, #40]
  435788:	ldr	x9, [x8]
  43578c:	cmp	x9, #0x0
  435790:	cset	w10, ne  // ne = any
  435794:	and	w10, w10, #0x1
  435798:	mov	w0, w10
  43579c:	sxtw	x9, w0
  4357a0:	cbz	x9, 436224 <_obstack_memory_used@@Base+0xe904>
  4357a4:	ldr	x8, [sp, #40]
  4357a8:	ldr	x9, [x8]
  4357ac:	ldr	x10, [x8, #24]
  4357b0:	ldr	x10, [x10, #56]
  4357b4:	cmp	x9, x10
  4357b8:	cset	w11, lt  // lt = tstop
  4357bc:	and	w11, w11, #0x1
  4357c0:	mov	w0, w11
  4357c4:	sxtw	x9, w0
  4357c8:	cbz	x9, 435cdc <_obstack_memory_used@@Base+0xe3bc>
  4357cc:	ldr	x8, [sp, #40]
  4357d0:	ldr	x9, [x8, #24]
  4357d4:	ldrb	w10, [x9, #140]
  4357d8:	mov	w9, w10
  4357dc:	cbz	x9, 435bdc <_obstack_memory_used@@Base+0xe2bc>
  4357e0:	stur	xzr, [x29, #-48]
  4357e4:	ldr	x8, [sp, #40]
  4357e8:	ldr	x9, [x8, #24]
  4357ec:	ldr	x9, [x9, #48]
  4357f0:	stur	x9, [x29, #-56]
  4357f4:	ldur	x8, [x29, #-56]
  4357f8:	ldur	x9, [x29, #-48]
  4357fc:	add	x8, x8, x9
  435800:	mov	x9, #0x2                   	// #2
  435804:	sdiv	x8, x8, x9
  435808:	stur	x8, [x29, #-64]
  43580c:	ldr	x8, [sp, #40]
  435810:	ldr	x9, [x8, #24]
  435814:	ldr	x9, [x9, #24]
  435818:	ldur	x10, [x29, #-64]
  43581c:	ldr	x9, [x9, x10, lsl #3]
  435820:	ldr	x10, [x8]
  435824:	cmp	x9, x10
  435828:	b.le	435838 <_obstack_memory_used@@Base+0xdf18>
  43582c:	ldur	x8, [x29, #-64]
  435830:	stur	x8, [x29, #-56]
  435834:	b	43586c <_obstack_memory_used@@Base+0xdf4c>
  435838:	ldr	x8, [sp, #40]
  43583c:	ldr	x9, [x8, #24]
  435840:	ldr	x9, [x9, #24]
  435844:	ldur	x10, [x29, #-64]
  435848:	ldr	x9, [x9, x10, lsl #3]
  43584c:	ldr	x10, [x8]
  435850:	cmp	x9, x10
  435854:	b.ge	435868 <_obstack_memory_used@@Base+0xdf48>  // b.tcont
  435858:	ldur	x8, [x29, #-64]
  43585c:	add	x8, x8, #0x1
  435860:	stur	x8, [x29, #-48]
  435864:	b	43586c <_obstack_memory_used@@Base+0xdf4c>
  435868:	b	43587c <_obstack_memory_used@@Base+0xdf5c>
  43586c:	ldur	x8, [x29, #-48]
  435870:	ldur	x9, [x29, #-56]
  435874:	cmp	x8, x9
  435878:	b.lt	4357f4 <_obstack_memory_used@@Base+0xded4>  // b.tstop
  43587c:	ldr	x8, [sp, #40]
  435880:	ldr	x9, [x8, #24]
  435884:	ldr	x9, [x9, #24]
  435888:	ldur	x10, [x29, #-64]
  43588c:	ldr	x9, [x9, x10, lsl #3]
  435890:	ldr	x10, [x8]
  435894:	cmp	x9, x10
  435898:	b.ge	4358a8 <_obstack_memory_used@@Base+0xdf88>  // b.tcont
  43589c:	ldur	x8, [x29, #-64]
  4358a0:	add	x8, x8, #0x1
  4358a4:	stur	x8, [x29, #-64]
  4358a8:	ldr	x8, [sp, #40]
  4358ac:	ldr	x0, [x8, #24]
  4358b0:	ldur	x9, [x29, #-64]
  4358b4:	subs	x1, x9, #0x1
  4358b8:	ldur	w2, [x29, #-28]
  4358bc:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  4358c0:	ldr	x8, [sp, #40]
  4358c4:	ldr	x9, [x8, #24]
  4358c8:	str	w0, [x9, #112]
  4358cc:	ldr	x9, [x8, #24]
  4358d0:	ldr	x9, [x9, #48]
  4358d4:	ldr	x10, [x8]
  4358d8:	cmp	x9, x10
  4358dc:	b.le	435a14 <_obstack_memory_used@@Base+0xe0f4>
  4358e0:	ldur	x8, [x29, #-64]
  4358e4:	ldr	x9, [sp, #40]
  4358e8:	ldr	x10, [x9]
  4358ec:	cmp	x8, x10
  4358f0:	b.ne	435a14 <_obstack_memory_used@@Base+0xe0f4>  // b.any
  4358f4:	ldr	x8, [sp, #40]
  4358f8:	ldr	x9, [x8, #24]
  4358fc:	ldr	x9, [x9, #24]
  435900:	ldur	x10, [x29, #-64]
  435904:	ldr	x9, [x9, x10, lsl #3]
  435908:	ldr	x10, [x8]
  43590c:	cmp	x9, x10
  435910:	b.ne	435a14 <_obstack_memory_used@@Base+0xe0f4>  // b.any
  435914:	ldr	x8, [sp, #40]
  435918:	ldr	x9, [x8, #24]
  43591c:	ldr	x0, [x9, #16]
  435920:	ldr	x9, [x8, #24]
  435924:	ldr	x9, [x9, #16]
  435928:	ldr	x10, [x8]
  43592c:	mov	x11, #0x4                   	// #4
  435930:	mul	x10, x11, x10
  435934:	add	x1, x9, x10
  435938:	ldr	x9, [x8, #24]
  43593c:	ldr	x9, [x9, #48]
  435940:	ldr	x10, [x8]
  435944:	subs	x9, x9, x10
  435948:	mov	x10, #0x4                   	// #4
  43594c:	mul	x2, x9, x10
  435950:	bl	4022b0 <memmove@plt>
  435954:	ldr	x8, [sp, #40]
  435958:	ldr	x9, [x8, #24]
  43595c:	ldr	x0, [x9, #8]
  435960:	ldr	x9, [x8, #24]
  435964:	ldr	x9, [x9, #8]
  435968:	ldr	x10, [x8]
  43596c:	add	x1, x9, x10
  435970:	ldr	x9, [x8, #24]
  435974:	ldr	x9, [x9, #48]
  435978:	ldr	x10, [x8]
  43597c:	subs	x2, x9, x10
  435980:	bl	4022b0 <memmove@plt>
  435984:	ldr	x8, [sp, #40]
  435988:	ldr	x9, [x8]
  43598c:	ldr	x10, [x8, #24]
  435990:	ldr	x11, [x10, #48]
  435994:	subs	x9, x11, x9
  435998:	str	x9, [x10, #48]
  43599c:	ldr	x9, [x8]
  4359a0:	ldr	x10, [x8, #24]
  4359a4:	ldr	x11, [x10, #56]
  4359a8:	subs	x9, x11, x9
  4359ac:	str	x9, [x10, #56]
  4359b0:	stur	xzr, [x29, #-48]
  4359b4:	ldur	x8, [x29, #-48]
  4359b8:	ldr	x9, [sp, #40]
  4359bc:	ldr	x10, [x9, #24]
  4359c0:	ldr	x10, [x10, #48]
  4359c4:	cmp	x8, x10
  4359c8:	b.ge	435a10 <_obstack_memory_used@@Base+0xe0f0>  // b.tcont
  4359cc:	ldr	x8, [sp, #40]
  4359d0:	ldr	x9, [x8, #24]
  4359d4:	ldr	x9, [x9, #24]
  4359d8:	ldur	x10, [x29, #-48]
  4359dc:	ldr	x11, [x8]
  4359e0:	add	x10, x10, x11
  4359e4:	ldr	x9, [x9, x10, lsl #3]
  4359e8:	ldr	x10, [x8]
  4359ec:	subs	x9, x9, x10
  4359f0:	ldr	x10, [x8, #24]
  4359f4:	ldr	x10, [x10, #24]
  4359f8:	ldur	x11, [x29, #-48]
  4359fc:	str	x9, [x10, x11, lsl #3]
  435a00:	ldur	x8, [x29, #-48]
  435a04:	add	x8, x8, #0x1
  435a08:	stur	x8, [x29, #-48]
  435a0c:	b	4359b4 <_obstack_memory_used@@Base+0xe094>
  435a10:	b	435bd8 <_obstack_memory_used@@Base+0xe2b8>
  435a14:	ldr	x8, [sp, #40]
  435a18:	ldr	x9, [x8, #24]
  435a1c:	ldr	x9, [x9, #80]
  435a20:	ldr	x10, [x8, #16]
  435a24:	subs	x9, x9, x10
  435a28:	ldr	x10, [x8]
  435a2c:	add	x9, x9, x10
  435a30:	ldr	x10, [x8, #24]
  435a34:	str	x9, [x10, #88]
  435a38:	ldr	x9, [x8, #24]
  435a3c:	ldr	x9, [x9, #96]
  435a40:	ldr	x10, [x8, #16]
  435a44:	subs	x9, x9, x10
  435a48:	ldr	x10, [x8]
  435a4c:	add	x9, x9, x10
  435a50:	ldr	x10, [x8, #24]
  435a54:	str	x9, [x10, #104]
  435a58:	ldr	x9, [x8, #24]
  435a5c:	mov	w11, #0x0                   	// #0
  435a60:	strb	w11, [x9, #140]
  435a64:	ldur	x8, [x29, #-64]
  435a68:	cmp	x8, #0x0
  435a6c:	cset	w9, le
  435a70:	mov	w10, #0x0                   	// #0
  435a74:	str	w10, [sp, #36]
  435a78:	tbnz	w9, #0, 435aa4 <_obstack_memory_used@@Base+0xe184>
  435a7c:	ldr	x8, [sp, #40]
  435a80:	ldr	x9, [x8, #24]
  435a84:	ldr	x9, [x9, #24]
  435a88:	ldur	x10, [x29, #-64]
  435a8c:	subs	x10, x10, #0x1
  435a90:	ldr	x9, [x9, x10, lsl #3]
  435a94:	ldr	x10, [x8]
  435a98:	cmp	x9, x10
  435a9c:	cset	w11, eq  // eq = none
  435aa0:	str	w11, [sp, #36]
  435aa4:	ldr	w8, [sp, #36]
  435aa8:	tbnz	w8, #0, 435ab0 <_obstack_memory_used@@Base+0xe190>
  435aac:	b	435ac0 <_obstack_memory_used@@Base+0xe1a0>
  435ab0:	ldur	x8, [x29, #-64]
  435ab4:	subs	x8, x8, #0x1
  435ab8:	stur	x8, [x29, #-64]
  435abc:	b	435a64 <_obstack_memory_used@@Base+0xe144>
  435ac0:	ldur	x8, [x29, #-64]
  435ac4:	ldr	x9, [sp, #40]
  435ac8:	ldr	x10, [x9, #24]
  435acc:	ldr	x10, [x10, #48]
  435ad0:	cmp	x8, x10
  435ad4:	b.ge	435b0c <_obstack_memory_used@@Base+0xe1ec>  // b.tcont
  435ad8:	ldr	x8, [sp, #40]
  435adc:	ldr	x9, [x8, #24]
  435ae0:	ldr	x9, [x9, #16]
  435ae4:	ldur	x10, [x29, #-64]
  435ae8:	ldr	w11, [x9, x10, lsl #2]
  435aec:	mov	w12, #0xffffffff            	// #-1
  435af0:	cmp	w11, w12
  435af4:	b.eq	435afc <_obstack_memory_used@@Base+0xe1dc>  // b.none
  435af8:	b	435b0c <_obstack_memory_used@@Base+0xe1ec>
  435afc:	ldur	x8, [x29, #-64]
  435b00:	add	x8, x8, #0x1
  435b04:	stur	x8, [x29, #-64]
  435b08:	b	435ac0 <_obstack_memory_used@@Base+0xe1a0>
  435b0c:	ldur	x8, [x29, #-64]
  435b10:	ldr	x9, [sp, #40]
  435b14:	ldr	x10, [x9, #24]
  435b18:	ldr	x10, [x10, #48]
  435b1c:	cmp	x8, x10
  435b20:	b.ne	435b34 <_obstack_memory_used@@Base+0xe214>  // b.any
  435b24:	ldr	x8, [sp, #40]
  435b28:	ldr	x9, [x8, #24]
  435b2c:	str	xzr, [x9, #48]
  435b30:	b	435bc4 <_obstack_memory_used@@Base+0xe2a4>
  435b34:	ldr	x8, [sp, #40]
  435b38:	ldr	x9, [x8, #24]
  435b3c:	ldr	x9, [x9, #24]
  435b40:	ldur	x10, [x29, #-64]
  435b44:	ldr	x9, [x9, x10, lsl #3]
  435b48:	ldr	x10, [x8]
  435b4c:	subs	x9, x9, x10
  435b50:	ldr	x10, [x8, #24]
  435b54:	str	x9, [x10, #48]
  435b58:	ldr	x9, [x8, #24]
  435b5c:	ldr	x9, [x9, #48]
  435b60:	cbz	x9, 435bc4 <_obstack_memory_used@@Base+0xe2a4>
  435b64:	stur	xzr, [x29, #-48]
  435b68:	ldur	x8, [x29, #-48]
  435b6c:	ldr	x9, [sp, #40]
  435b70:	ldr	x10, [x9, #24]
  435b74:	ldr	x10, [x10, #48]
  435b78:	cmp	x8, x10
  435b7c:	b.ge	435ba8 <_obstack_memory_used@@Base+0xe288>  // b.tcont
  435b80:	ldr	x8, [sp, #40]
  435b84:	ldr	x9, [x8, #24]
  435b88:	ldr	x9, [x9, #16]
  435b8c:	ldur	x10, [x29, #-48]
  435b90:	mov	w11, #0xffffffff            	// #-1
  435b94:	str	w11, [x9, x10, lsl #2]
  435b98:	ldur	x8, [x29, #-48]
  435b9c:	add	x8, x8, #0x1
  435ba0:	stur	x8, [x29, #-48]
  435ba4:	b	435b68 <_obstack_memory_used@@Base+0xe248>
  435ba8:	ldr	x8, [sp, #40]
  435bac:	ldr	x9, [x8, #24]
  435bb0:	ldr	x0, [x9, #8]
  435bb4:	ldr	x9, [x8, #24]
  435bb8:	ldr	x2, [x9, #48]
  435bbc:	mov	w1, #0xffffffff            	// #-1
  435bc0:	bl	402520 <memset@plt>
  435bc4:	ldr	x8, [sp, #40]
  435bc8:	ldr	x9, [x8, #24]
  435bcc:	ldr	x9, [x9, #48]
  435bd0:	ldr	x10, [x8, #24]
  435bd4:	str	x9, [x10, #56]
  435bd8:	b	435cd8 <_obstack_memory_used@@Base+0xe3b8>
  435bdc:	ldr	x8, [sp, #40]
  435be0:	ldr	x0, [x8, #24]
  435be4:	ldr	x9, [x8]
  435be8:	subs	x1, x9, #0x1
  435bec:	ldur	w2, [x29, #-28]
  435bf0:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  435bf4:	ldr	x8, [sp, #40]
  435bf8:	ldr	x9, [x8, #24]
  435bfc:	str	w0, [x9, #112]
  435c00:	ldr	x9, [x8, #24]
  435c04:	ldr	w10, [x9, #144]
  435c08:	cmp	w10, #0x1
  435c0c:	b.le	435c50 <_obstack_memory_used@@Base+0xe330>
  435c10:	ldr	x8, [sp, #40]
  435c14:	ldr	x9, [x8, #24]
  435c18:	ldr	x0, [x9, #16]
  435c1c:	ldr	x9, [x8, #24]
  435c20:	ldr	x9, [x9, #16]
  435c24:	ldr	x10, [x8]
  435c28:	mov	x11, #0x4                   	// #4
  435c2c:	mul	x10, x11, x10
  435c30:	add	x1, x9, x10
  435c34:	ldr	x9, [x8, #24]
  435c38:	ldr	x9, [x9, #48]
  435c3c:	ldr	x10, [x8]
  435c40:	subs	x9, x9, x10
  435c44:	mov	x10, #0x4                   	// #4
  435c48:	mul	x2, x9, x10
  435c4c:	bl	4022b0 <memmove@plt>
  435c50:	ldr	x8, [sp, #40]
  435c54:	ldr	x9, [x8, #24]
  435c58:	ldrb	w10, [x9, #139]
  435c5c:	mov	w9, w10
  435c60:	cbz	x9, 435c94 <_obstack_memory_used@@Base+0xe374>
  435c64:	ldr	x8, [sp, #40]
  435c68:	ldr	x9, [x8, #24]
  435c6c:	ldr	x0, [x9, #8]
  435c70:	ldr	x9, [x8, #24]
  435c74:	ldr	x9, [x9, #8]
  435c78:	ldr	x10, [x8]
  435c7c:	add	x1, x9, x10
  435c80:	ldr	x9, [x8, #24]
  435c84:	ldr	x9, [x9, #48]
  435c88:	ldr	x10, [x8]
  435c8c:	subs	x2, x9, x10
  435c90:	bl	4022b0 <memmove@plt>
  435c94:	ldr	x8, [sp, #40]
  435c98:	ldr	x9, [x8]
  435c9c:	ldr	x10, [x8, #24]
  435ca0:	ldr	x11, [x10, #48]
  435ca4:	subs	x9, x11, x9
  435ca8:	str	x9, [x10, #48]
  435cac:	ldr	x9, [x8]
  435cb0:	ldr	x10, [x8, #24]
  435cb4:	ldr	x11, [x10, #56]
  435cb8:	subs	x9, x11, x9
  435cbc:	str	x9, [x10, #56]
  435cc0:	ldr	x9, [x8, #24]
  435cc4:	ldr	x9, [x9, #48]
  435cc8:	cmp	x9, #0x0
  435ccc:	cset	w12, le
  435cd0:	tbnz	w12, #0, 435cd8 <_obstack_memory_used@@Base+0xe3b8>
  435cd4:	b	435cd8 <_obstack_memory_used@@Base+0xe3b8>
  435cd8:	b	4361f8 <_obstack_memory_used@@Base+0xe8d8>
  435cdc:	ldr	x8, [sp, #40]
  435ce0:	ldr	x9, [x8, #24]
  435ce4:	ldr	x9, [x9, #48]
  435ce8:	stur	x9, [x29, #-72]
  435cec:	ldr	x9, [x8, #24]
  435cf0:	ldrb	w10, [x9, #140]
  435cf4:	mov	w9, w10
  435cf8:	cbz	x9, 435d4c <_obstack_memory_used@@Base+0xe42c>
  435cfc:	ldr	x8, [sp, #40]
  435d00:	ldr	x9, [x8, #24]
  435d04:	ldr	x9, [x9, #80]
  435d08:	ldr	x10, [x8, #16]
  435d0c:	subs	x9, x9, x10
  435d10:	ldr	x10, [x8]
  435d14:	add	x9, x9, x10
  435d18:	ldr	x10, [x8, #24]
  435d1c:	str	x9, [x10, #88]
  435d20:	ldr	x9, [x8, #24]
  435d24:	ldr	x9, [x9, #96]
  435d28:	ldr	x10, [x8, #16]
  435d2c:	subs	x9, x9, x10
  435d30:	ldr	x10, [x8]
  435d34:	add	x9, x9, x10
  435d38:	ldr	x10, [x8, #24]
  435d3c:	str	x9, [x10, #104]
  435d40:	ldr	x9, [x8, #24]
  435d44:	mov	w11, #0x0                   	// #0
  435d48:	strb	w11, [x9, #140]
  435d4c:	ldr	x8, [sp, #40]
  435d50:	ldr	x9, [x8, #24]
  435d54:	str	xzr, [x9, #48]
  435d58:	ldr	x9, [x8, #24]
  435d5c:	ldr	w10, [x9, #144]
  435d60:	cmp	w10, #0x1
  435d64:	b.le	436128 <_obstack_memory_used@@Base+0xe808>
  435d68:	mov	w8, #0xffffffff            	// #-1
  435d6c:	stur	w8, [x29, #-84]
  435d70:	ldr	x9, [sp, #40]
  435d74:	ldr	x10, [x9, #24]
  435d78:	ldrb	w8, [x10, #137]
  435d7c:	cbz	w8, 435f84 <_obstack_memory_used@@Base+0xe664>
  435d80:	ldr	x8, [sp, #40]
  435d84:	ldr	x9, [x8, #24]
  435d88:	ldr	x9, [x9]
  435d8c:	ldr	x10, [x8, #24]
  435d90:	ldr	x10, [x10, #40]
  435d94:	add	x9, x9, x10
  435d98:	stur	x9, [x29, #-96]
  435d9c:	ldur	x9, [x29, #-96]
  435da0:	ldr	x10, [x8]
  435da4:	ldr	x11, [x8, #24]
  435da8:	ldrsw	x11, [x11, #144]
  435dac:	subs	x10, x10, x11
  435db0:	add	x9, x9, x10
  435db4:	str	x9, [sp, #112]
  435db8:	ldr	x9, [sp, #112]
  435dbc:	ldr	x10, [x8, #24]
  435dc0:	ldr	x10, [x10]
  435dc4:	cmp	x9, x10
  435dc8:	b.cs	435ddc <_obstack_memory_used@@Base+0xe4bc>  // b.hs, b.nlast
  435dcc:	ldr	x8, [sp, #40]
  435dd0:	ldr	x9, [x8, #24]
  435dd4:	ldr	x9, [x9]
  435dd8:	str	x9, [sp, #112]
  435ddc:	ldur	x8, [x29, #-96]
  435de0:	ldr	x9, [sp, #40]
  435de4:	ldr	x10, [x9]
  435de8:	add	x8, x8, x10
  435dec:	mov	x10, #0xffffffffffffffff    	// #-1
  435df0:	add	x8, x8, x10
  435df4:	stur	x8, [x29, #-104]
  435df8:	ldur	x8, [x29, #-104]
  435dfc:	ldr	x9, [sp, #112]
  435e00:	cmp	x8, x9
  435e04:	b.cc	435f84 <_obstack_memory_used@@Base+0xe664>  // b.lo, b.ul, b.last
  435e08:	ldur	x8, [x29, #-104]
  435e0c:	ldrb	w9, [x8]
  435e10:	and	w9, w9, #0xc0
  435e14:	cmp	w9, #0x80
  435e18:	b.eq	435f70 <_obstack_memory_used@@Base+0xe650>  // b.none
  435e1c:	ldur	x8, [x29, #-96]
  435e20:	ldr	x9, [sp, #40]
  435e24:	ldr	x10, [x9, #24]
  435e28:	ldr	x10, [x10, #88]
  435e2c:	add	x8, x8, x10
  435e30:	ldur	x10, [x29, #-104]
  435e34:	subs	x8, x8, x10
  435e38:	str	x8, [sp, #88]
  435e3c:	ldur	x8, [x29, #-104]
  435e40:	str	x8, [sp, #64]
  435e44:	ldr	x8, [x9, #24]
  435e48:	ldr	x8, [x8, #120]
  435e4c:	cmp	x8, #0x0
  435e50:	cset	w11, ne  // ne = any
  435e54:	and	w11, w11, #0x1
  435e58:	mov	w0, w11
  435e5c:	sxtw	x8, w0
  435e60:	cbz	x8, 435ee4 <_obstack_memory_used@@Base+0xe5c4>
  435e64:	ldr	x8, [sp, #88]
  435e68:	cmp	x8, #0x6
  435e6c:	b.ge	435e7c <_obstack_memory_used@@Base+0xe55c>  // b.tcont
  435e70:	ldr	x8, [sp, #88]
  435e74:	str	x8, [sp, #24]
  435e78:	b	435e84 <_obstack_memory_used@@Base+0xe564>
  435e7c:	mov	x8, #0x6                   	// #6
  435e80:	str	x8, [sp, #24]
  435e84:	ldr	x8, [sp, #24]
  435e88:	str	w8, [sp, #60]
  435e8c:	ldr	w8, [sp, #60]
  435e90:	subs	w8, w8, #0x1
  435e94:	str	w8, [sp, #60]
  435e98:	cmp	w8, #0x0
  435e9c:	cset	w8, lt  // lt = tstop
  435ea0:	tbnz	w8, #0, 435edc <_obstack_memory_used@@Base+0xe5bc>
  435ea4:	ldr	x8, [sp, #40]
  435ea8:	ldr	x9, [x8, #24]
  435eac:	ldr	x9, [x9, #120]
  435eb0:	ldur	x10, [x29, #-104]
  435eb4:	ldrsw	x11, [sp, #60]
  435eb8:	ldrb	w12, [x10, x11]
  435ebc:	mov	w10, w12
  435ec0:	add	x9, x9, x10
  435ec4:	ldrb	w12, [x9]
  435ec8:	ldrsw	x9, [sp, #60]
  435ecc:	add	x10, sp, #0x52
  435ed0:	add	x9, x10, x9
  435ed4:	strb	w12, [x9]
  435ed8:	b	435e8c <_obstack_memory_used@@Base+0xe56c>
  435edc:	add	x8, sp, #0x52
  435ee0:	str	x8, [sp, #64]
  435ee4:	add	x3, sp, #0x68
  435ee8:	str	xzr, [sp, #104]
  435eec:	ldr	x1, [sp, #64]
  435ef0:	ldr	x2, [sp, #88]
  435ef4:	add	x0, sp, #0x64
  435ef8:	bl	4271dc <wcrtomb@plt+0x248cc>
  435efc:	str	x0, [sp, #72]
  435f00:	ldur	x8, [x29, #-96]
  435f04:	ldr	x9, [sp, #40]
  435f08:	ldr	x10, [x9]
  435f0c:	add	x8, x8, x10
  435f10:	ldur	x10, [x29, #-104]
  435f14:	subs	x8, x8, x10
  435f18:	ldr	x10, [sp, #72]
  435f1c:	cmp	x8, x10
  435f20:	b.hi	435f6c <_obstack_memory_used@@Base+0xe64c>  // b.pmore
  435f24:	ldr	x8, [sp, #72]
  435f28:	mov	x9, #0xfffffffffffffffe    	// #-2
  435f2c:	cmp	x8, x9
  435f30:	b.cs	435f6c <_obstack_memory_used@@Base+0xe64c>  // b.hs, b.nlast
  435f34:	ldr	x8, [sp, #40]
  435f38:	ldr	x9, [x8, #24]
  435f3c:	str	xzr, [x9, #32]
  435f40:	ldr	x9, [sp, #72]
  435f44:	ldur	x10, [x29, #-96]
  435f48:	ldr	x11, [x8]
  435f4c:	add	x10, x10, x11
  435f50:	ldur	x11, [x29, #-104]
  435f54:	subs	x10, x10, x11
  435f58:	subs	x9, x9, x10
  435f5c:	ldr	x10, [x8, #24]
  435f60:	str	x9, [x10, #48]
  435f64:	ldr	w12, [sp, #100]
  435f68:	stur	w12, [x29, #-84]
  435f6c:	b	435f84 <_obstack_memory_used@@Base+0xe664>
  435f70:	ldur	x8, [x29, #-104]
  435f74:	mov	x9, #0xffffffffffffffff    	// #-1
  435f78:	add	x8, x8, x9
  435f7c:	stur	x8, [x29, #-104]
  435f80:	b	435df8 <_obstack_memory_used@@Base+0xe4d8>
  435f84:	ldur	w8, [x29, #-84]
  435f88:	mov	w9, #0xffffffff            	// #-1
  435f8c:	cmp	w8, w9
  435f90:	b.ne	435fbc <_obstack_memory_used@@Base+0xe69c>  // b.any
  435f94:	ldr	x8, [sp, #40]
  435f98:	ldr	x0, [x8, #24]
  435f9c:	ldr	x1, [x8, #16]
  435fa0:	sub	x2, x29, #0x54
  435fa4:	bl	43749c <_obstack_memory_used@@Base+0xfb7c>
  435fa8:	ldr	x8, [sp, #40]
  435fac:	ldr	x9, [x8, #16]
  435fb0:	subs	x9, x0, x9
  435fb4:	ldr	x10, [x8, #24]
  435fb8:	str	x9, [x10, #48]
  435fbc:	ldur	w8, [x29, #-84]
  435fc0:	mov	w9, #0xffffffff            	// #-1
  435fc4:	cmp	w8, w9
  435fc8:	b.ne	435ff4 <_obstack_memory_used@@Base+0xe6d4>  // b.any
  435fcc:	ldr	x8, [sp, #40]
  435fd0:	ldr	x0, [x8, #24]
  435fd4:	ldur	x9, [x29, #-72]
  435fd8:	subs	x1, x9, #0x1
  435fdc:	ldur	w2, [x29, #-28]
  435fe0:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  435fe4:	ldr	x8, [sp, #40]
  435fe8:	ldr	x9, [x8, #24]
  435fec:	str	w0, [x9, #112]
  435ff0:	b	436090 <_obstack_memory_used@@Base+0xe770>
  435ff4:	ldr	x8, [sp, #40]
  435ff8:	ldr	x9, [x8, #24]
  435ffc:	ldrb	w10, [x9, #142]
  436000:	cmp	w10, #0x0
  436004:	cset	w10, ne  // ne = any
  436008:	and	w10, w10, #0x1
  43600c:	mov	w0, w10
  436010:	sxtw	x9, w0
  436014:	cbz	x9, 43603c <_obstack_memory_used@@Base+0xe71c>
  436018:	ldur	w0, [x29, #-84]
  43601c:	bl	4027b0 <iswalnum@plt>
  436020:	cbnz	w0, 436030 <_obstack_memory_used@@Base+0xe710>
  436024:	ldur	w8, [x29, #-84]
  436028:	cmp	w8, #0x5f
  43602c:	b.ne	43603c <_obstack_memory_used@@Base+0xe71c>  // b.any
  436030:	mov	w8, #0x1                   	// #1
  436034:	str	w8, [sp, #20]
  436038:	b	436080 <_obstack_memory_used@@Base+0xe760>
  43603c:	ldur	w8, [x29, #-84]
  436040:	mov	w9, #0x0                   	// #0
  436044:	cmp	w8, #0xa
  436048:	str	w9, [sp, #16]
  43604c:	b.ne	436068 <_obstack_memory_used@@Base+0xe748>  // b.any
  436050:	ldr	x8, [sp, #40]
  436054:	ldr	x9, [x8, #24]
  436058:	ldrb	w10, [x9, #141]
  43605c:	cmp	w10, #0x0
  436060:	cset	w10, ne  // ne = any
  436064:	str	w10, [sp, #16]
  436068:	ldr	w8, [sp, #16]
  43606c:	mov	w9, #0x2                   	// #2
  436070:	mov	w10, wzr
  436074:	tst	w8, #0x1
  436078:	csel	w8, w9, w10, ne  // ne = any
  43607c:	str	w8, [sp, #20]
  436080:	ldr	w8, [sp, #20]
  436084:	ldr	x9, [sp, #40]
  436088:	ldr	x10, [x9, #24]
  43608c:	str	w8, [x10, #112]
  436090:	ldr	x8, [sp, #40]
  436094:	ldr	x9, [x8, #24]
  436098:	ldr	x9, [x9, #48]
  43609c:	cbz	x9, 436110 <_obstack_memory_used@@Base+0xe7f0>
  4360a0:	stur	xzr, [x29, #-80]
  4360a4:	ldur	x8, [x29, #-80]
  4360a8:	ldr	x9, [sp, #40]
  4360ac:	ldr	x10, [x9, #24]
  4360b0:	ldr	x10, [x10, #48]
  4360b4:	cmp	x8, x10
  4360b8:	b.ge	4360e4 <_obstack_memory_used@@Base+0xe7c4>  // b.tcont
  4360bc:	ldr	x8, [sp, #40]
  4360c0:	ldr	x9, [x8, #24]
  4360c4:	ldr	x9, [x9, #16]
  4360c8:	ldur	x10, [x29, #-80]
  4360cc:	mov	w11, #0xffffffff            	// #-1
  4360d0:	str	w11, [x9, x10, lsl #2]
  4360d4:	ldur	x8, [x29, #-80]
  4360d8:	add	x8, x8, #0x1
  4360dc:	stur	x8, [x29, #-80]
  4360e0:	b	4360a4 <_obstack_memory_used@@Base+0xe784>
  4360e4:	ldr	x8, [sp, #40]
  4360e8:	ldr	x9, [x8, #24]
  4360ec:	ldrb	w10, [x9, #139]
  4360f0:	cbz	w10, 436110 <_obstack_memory_used@@Base+0xe7f0>
  4360f4:	ldr	x8, [sp, #40]
  4360f8:	ldr	x9, [x8, #24]
  4360fc:	ldr	x0, [x9, #8]
  436100:	ldr	x9, [x8, #24]
  436104:	ldr	x2, [x9, #48]
  436108:	mov	w1, #0xffffffff            	// #-1
  43610c:	bl	402520 <memset@plt>
  436110:	ldr	x8, [sp, #40]
  436114:	ldr	x9, [x8, #24]
  436118:	ldr	x9, [x9, #48]
  43611c:	ldr	x10, [x8, #24]
  436120:	str	x9, [x10, #56]
  436124:	b	4361f8 <_obstack_memory_used@@Base+0xe8d8>
  436128:	ldr	x8, [sp, #40]
  43612c:	ldr	x9, [x8, #24]
  436130:	ldr	x9, [x9]
  436134:	ldr	x10, [x8, #24]
  436138:	ldr	x10, [x10, #40]
  43613c:	ldr	x11, [x8]
  436140:	add	x10, x10, x11
  436144:	subs	x10, x10, #0x1
  436148:	ldrb	w12, [x9, x10]
  43614c:	str	w12, [sp, #56]
  436150:	ldr	x9, [x8, #24]
  436154:	str	xzr, [x9, #56]
  436158:	ldr	x9, [x8, #24]
  43615c:	ldr	x9, [x9, #120]
  436160:	cbz	x9, 43617c <_obstack_memory_used@@Base+0xe85c>
  436164:	ldr	x8, [sp, #40]
  436168:	ldr	x9, [x8, #24]
  43616c:	ldr	x9, [x9, #120]
  436170:	ldrsw	x10, [sp, #56]
  436174:	ldrb	w11, [x9, x10]
  436178:	str	w11, [sp, #56]
  43617c:	ldr	x8, [sp, #40]
  436180:	ldr	x9, [x8, #24]
  436184:	ldr	x0, [x9, #128]
  436188:	ldrsw	x1, [sp, #56]
  43618c:	bl	4375fc <_obstack_memory_used@@Base+0xfcdc>
  436190:	tbnz	w0, #0, 436198 <_obstack_memory_used@@Base+0xe878>
  436194:	b	4361a4 <_obstack_memory_used@@Base+0xe884>
  436198:	mov	w8, #0x1                   	// #1
  43619c:	str	w8, [sp, #12]
  4361a0:	b	4361e8 <_obstack_memory_used@@Base+0xe8c8>
  4361a4:	ldr	w8, [sp, #56]
  4361a8:	mov	w9, #0x0                   	// #0
  4361ac:	cmp	w8, #0xa
  4361b0:	str	w9, [sp, #8]
  4361b4:	b.ne	4361d0 <_obstack_memory_used@@Base+0xe8b0>  // b.any
  4361b8:	ldr	x8, [sp, #40]
  4361bc:	ldr	x9, [x8, #24]
  4361c0:	ldrb	w10, [x9, #141]
  4361c4:	cmp	w10, #0x0
  4361c8:	cset	w10, ne  // ne = any
  4361cc:	str	w10, [sp, #8]
  4361d0:	ldr	w8, [sp, #8]
  4361d4:	mov	w9, #0x2                   	// #2
  4361d8:	mov	w10, wzr
  4361dc:	tst	w8, #0x1
  4361e0:	csel	w8, w9, w10, ne  // ne = any
  4361e4:	str	w8, [sp, #12]
  4361e8:	ldr	w8, [sp, #12]
  4361ec:	ldr	x9, [sp, #40]
  4361f0:	ldr	x10, [x9, #24]
  4361f4:	str	w8, [x10, #112]
  4361f8:	ldr	x8, [sp, #40]
  4361fc:	ldr	x9, [x8, #24]
  436200:	ldrb	w10, [x9, #139]
  436204:	mov	w9, w10
  436208:	cbnz	x9, 436224 <_obstack_memory_used@@Base+0xe904>
  43620c:	ldr	x8, [sp, #40]
  436210:	ldr	x9, [x8]
  436214:	ldr	x10, [x8, #24]
  436218:	ldr	x11, [x10, #8]
  43621c:	add	x9, x11, x9
  436220:	str	x9, [x10, #8]
  436224:	ldr	x8, [sp, #40]
  436228:	ldr	x9, [x8, #16]
  43622c:	ldr	x10, [x8, #24]
  436230:	str	x9, [x10, #40]
  436234:	ldr	x9, [x8]
  436238:	ldr	x10, [x8, #24]
  43623c:	ldr	x11, [x10, #88]
  436240:	subs	x9, x11, x9
  436244:	str	x9, [x10, #88]
  436248:	ldr	x9, [x8]
  43624c:	ldr	x10, [x8, #24]
  436250:	ldr	x11, [x10, #104]
  436254:	subs	x9, x11, x9
  436258:	str	x9, [x10, #104]
  43625c:	ldr	x9, [x8, #24]
  436260:	ldr	w12, [x9, #144]
  436264:	cmp	w12, #0x1
  436268:	b.le	4362c8 <_obstack_memory_used@@Base+0xe9a8>
  43626c:	ldr	x8, [sp, #40]
  436270:	ldr	x9, [x8, #24]
  436274:	ldrb	w10, [x9, #136]
  436278:	cbz	w10, 4362b8 <_obstack_memory_used@@Base+0xe998>
  43627c:	ldr	x8, [sp, #40]
  436280:	ldr	x0, [x8, #24]
  436284:	bl	42bd90 <_obstack_memory_used@@Base+0x4470>
  436288:	str	w0, [sp, #52]
  43628c:	ldr	w9, [sp, #52]
  436290:	cmp	w9, #0x0
  436294:	cset	w9, ne  // ne = any
  436298:	and	w9, w9, #0x1
  43629c:	mov	w1, w9
  4362a0:	sxtw	x8, w1
  4362a4:	cbz	x8, 4362b4 <_obstack_memory_used@@Base+0xe994>
  4362a8:	ldr	w8, [sp, #52]
  4362ac:	stur	w8, [x29, #-4]
  4362b0:	b	436340 <_obstack_memory_used@@Base+0xea20>
  4362b4:	b	4362c4 <_obstack_memory_used@@Base+0xe9a4>
  4362b8:	ldr	x8, [sp, #40]
  4362bc:	ldr	x0, [x8, #24]
  4362c0:	bl	42ca88 <_obstack_memory_used@@Base+0x5168>
  4362c4:	b	436330 <_obstack_memory_used@@Base+0xea10>
  4362c8:	ldr	x8, [sp, #40]
  4362cc:	ldr	x9, [x8, #24]
  4362d0:	ldrb	w10, [x9, #139]
  4362d4:	mov	w9, w10
  4362d8:	cbz	x9, 43631c <_obstack_memory_used@@Base+0xe9fc>
  4362dc:	ldr	x8, [sp, #40]
  4362e0:	ldr	x9, [x8, #24]
  4362e4:	ldrb	w10, [x9, #136]
  4362e8:	cbz	w10, 4362fc <_obstack_memory_used@@Base+0xe9dc>
  4362ec:	ldr	x8, [sp, #40]
  4362f0:	ldr	x0, [x8, #24]
  4362f4:	bl	42c97c <_obstack_memory_used@@Base+0x505c>
  4362f8:	b	436318 <_obstack_memory_used@@Base+0xe9f8>
  4362fc:	ldr	x8, [sp, #40]
  436300:	ldr	x9, [x8, #24]
  436304:	ldr	x9, [x9, #120]
  436308:	cbz	x9, 436318 <_obstack_memory_used@@Base+0xe9f8>
  43630c:	ldr	x8, [sp, #40]
  436310:	ldr	x0, [x8, #24]
  436314:	bl	42cdcc <_obstack_memory_used@@Base+0x54ac>
  436318:	b	436330 <_obstack_memory_used@@Base+0xea10>
  43631c:	ldr	x8, [sp, #40]
  436320:	ldr	x9, [x8, #24]
  436324:	ldr	x9, [x9, #88]
  436328:	ldr	x10, [x8, #24]
  43632c:	str	x9, [x10, #48]
  436330:	ldr	x8, [sp, #40]
  436334:	ldr	x9, [x8, #24]
  436338:	str	xzr, [x9, #72]
  43633c:	stur	wzr, [x29, #-4]
  436340:	ldur	w0, [x29, #-4]
  436344:	ldp	x29, x30, [sp, #224]
  436348:	add	sp, sp, #0xf0
  43634c:	ret
  436350:	sub	sp, sp, #0xb0
  436354:	stp	x29, x30, [sp, #160]
  436358:	add	x29, sp, #0xa0
  43635c:	mov	x8, #0xffffffffffffffff    	// #-1
  436360:	mov	w9, #0x1                   	// #1
  436364:	add	x10, sp, #0x44
  436368:	stur	x0, [x29, #-64]
  43636c:	and	w11, w1, w9
  436370:	sturb	w11, [x29, #-65]
  436374:	str	x2, [sp, #80]
  436378:	ldur	x12, [x29, #-64]
  43637c:	ldr	x12, [x12, #152]
  436380:	str	x12, [sp, #72]
  436384:	str	xzr, [sp, #56]
  436388:	str	x8, [sp, #48]
  43638c:	ldur	x8, [x29, #-64]
  436390:	ldr	x8, [x8, #72]
  436394:	str	x8, [sp, #40]
  436398:	ldr	x8, [sp, #80]
  43639c:	cmp	x8, #0x0
  4363a0:	cset	w11, ne  // ne = any
  4363a4:	and	w9, w11, w9
  4363a8:	strb	w9, [sp, #31]
  4363ac:	ldr	x8, [sp, #40]
  4363b0:	str	x8, [sp, #16]
  4363b4:	str	wzr, [sp, #68]
  4363b8:	ldur	x8, [x29, #-64]
  4363bc:	ldr	x12, [sp, #40]
  4363c0:	stur	x10, [x29, #-16]
  4363c4:	stur	x8, [x29, #-24]
  4363c8:	stur	x12, [x29, #-32]
  4363cc:	ldur	x8, [x29, #-24]
  4363d0:	ldr	x8, [x8, #152]
  4363d4:	stur	x8, [x29, #-40]
  4363d8:	ldur	x8, [x29, #-40]
  4363dc:	ldr	x8, [x8, #72]
  4363e0:	ldrb	w9, [x8, #104]
  4363e4:	mov	w11, #0x7                   	// #7
  4363e8:	lsr	w9, w9, w11
  4363ec:	and	w9, w9, #0xff
  4363f0:	cbz	w9, 4364c8 <_obstack_memory_used@@Base+0xeba8>
  4363f4:	ldur	x0, [x29, #-24]
  4363f8:	ldur	x8, [x29, #-32]
  4363fc:	subs	x1, x8, #0x1
  436400:	ldur	x8, [x29, #-24]
  436404:	ldr	w2, [x8, #160]
  436408:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  43640c:	stur	w0, [x29, #-44]
  436410:	ldur	w9, [x29, #-44]
  436414:	and	w9, w9, #0x1
  436418:	cbz	w9, 43642c <_obstack_memory_used@@Base+0xeb0c>
  43641c:	ldur	x8, [x29, #-40]
  436420:	ldr	x8, [x8, #80]
  436424:	stur	x8, [x29, #-8]
  436428:	b	4364d4 <_obstack_memory_used@@Base+0xebb4>
  43642c:	ldur	w8, [x29, #-44]
  436430:	cbnz	w8, 436444 <_obstack_memory_used@@Base+0xeb24>
  436434:	ldur	x8, [x29, #-40]
  436438:	ldr	x8, [x8, #72]
  43643c:	stur	x8, [x29, #-8]
  436440:	b	4364d4 <_obstack_memory_used@@Base+0xebb4>
  436444:	ldur	w8, [x29, #-44]
  436448:	and	w8, w8, #0x4
  43644c:	cbz	w8, 43646c <_obstack_memory_used@@Base+0xeb4c>
  436450:	ldur	w8, [x29, #-44]
  436454:	and	w8, w8, #0x2
  436458:	cbz	w8, 43646c <_obstack_memory_used@@Base+0xeb4c>
  43645c:	ldur	x8, [x29, #-40]
  436460:	ldr	x8, [x8, #96]
  436464:	stur	x8, [x29, #-8]
  436468:	b	4364d4 <_obstack_memory_used@@Base+0xebb4>
  43646c:	ldur	w8, [x29, #-44]
  436470:	and	w8, w8, #0x2
  436474:	cbz	w8, 436488 <_obstack_memory_used@@Base+0xeb68>
  436478:	ldur	x8, [x29, #-40]
  43647c:	ldr	x8, [x8, #88]
  436480:	stur	x8, [x29, #-8]
  436484:	b	4364d4 <_obstack_memory_used@@Base+0xebb4>
  436488:	ldur	w8, [x29, #-44]
  43648c:	and	w8, w8, #0x4
  436490:	cbz	w8, 4364b8 <_obstack_memory_used@@Base+0xeb98>
  436494:	ldur	x0, [x29, #-16]
  436498:	ldur	x1, [x29, #-40]
  43649c:	ldur	x8, [x29, #-40]
  4364a0:	ldr	x8, [x8, #72]
  4364a4:	ldr	x2, [x8, #80]
  4364a8:	ldur	w3, [x29, #-44]
  4364ac:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  4364b0:	stur	x0, [x29, #-8]
  4364b4:	b	4364d4 <_obstack_memory_used@@Base+0xebb4>
  4364b8:	ldur	x8, [x29, #-40]
  4364bc:	ldr	x8, [x8, #72]
  4364c0:	stur	x8, [x29, #-8]
  4364c4:	b	4364d4 <_obstack_memory_used@@Base+0xebb4>
  4364c8:	ldur	x8, [x29, #-40]
  4364cc:	ldr	x8, [x8, #72]
  4364d0:	stur	x8, [x29, #-8]
  4364d4:	ldur	x8, [x29, #-8]
  4364d8:	str	x8, [sp, #32]
  4364dc:	ldr	x8, [sp, #32]
  4364e0:	cmp	x8, #0x0
  4364e4:	cset	w9, eq  // eq = none
  4364e8:	and	w9, w9, #0x1
  4364ec:	mov	w0, w9
  4364f0:	sxtw	x8, w0
  4364f4:	cbz	x8, 436514 <_obstack_memory_used@@Base+0xebf4>
  4364f8:	ldr	w8, [sp, #68]
  4364fc:	cmp	w8, #0xc
  436500:	b.ne	436508 <_obstack_memory_used@@Base+0xebe8>  // b.any
  436504:	b	436508 <_obstack_memory_used@@Base+0xebe8>
  436508:	mov	x8, #0xfffffffffffffffe    	// #-2
  43650c:	stur	x8, [x29, #-56]
  436510:	b	4368d0 <_obstack_memory_used@@Base+0xefb0>
  436514:	ldur	x8, [x29, #-64]
  436518:	ldr	x8, [x8, #184]
  43651c:	cbz	x8, 4365f0 <_obstack_memory_used@@Base+0xecd0>
  436520:	ldr	x8, [sp, #32]
  436524:	ldur	x9, [x29, #-64]
  436528:	ldr	x9, [x9, #184]
  43652c:	ldr	x10, [sp, #40]
  436530:	mov	x11, #0x8                   	// #8
  436534:	mul	x10, x11, x10
  436538:	add	x9, x9, x10
  43653c:	str	x8, [x9]
  436540:	ldr	x8, [sp, #72]
  436544:	ldr	x8, [x8, #152]
  436548:	cbz	x8, 4365f0 <_obstack_memory_used@@Base+0xecd0>
  43654c:	mov	w8, #0x0                   	// #0
  436550:	strb	w8, [sp, #31]
  436554:	ldur	x0, [x29, #-64]
  436558:	ldr	x9, [sp, #32]
  43655c:	add	x1, x9, #0x8
  436560:	mov	x9, xzr
  436564:	mov	x2, x9
  436568:	bl	437644 <_obstack_memory_used@@Base+0xfd24>
  43656c:	str	w0, [sp, #68]
  436570:	ldr	w8, [sp, #68]
  436574:	cmp	w8, #0x0
  436578:	cset	w8, ne  // ne = any
  43657c:	and	w8, w8, #0x1
  436580:	mov	w1, w8
  436584:	sxtw	x9, w1
  436588:	cbz	x9, 436598 <_obstack_memory_used@@Base+0xec78>
  43658c:	ldrsw	x8, [sp, #68]
  436590:	stur	x8, [x29, #-56]
  436594:	b	4368d0 <_obstack_memory_used@@Base+0xefb0>
  436598:	ldr	x8, [sp, #32]
  43659c:	ldrb	w9, [x8, #104]
  4365a0:	mov	w10, #0x6                   	// #6
  4365a4:	lsr	w9, w9, w10
  4365a8:	and	w9, w9, #0x1
  4365ac:	and	w9, w9, #0xff
  4365b0:	cbz	w9, 4365f0 <_obstack_memory_used@@Base+0xecd0>
  4365b4:	ldur	x0, [x29, #-64]
  4365b8:	ldr	x8, [sp, #32]
  4365bc:	add	x1, x8, #0x8
  4365c0:	bl	43776c <_obstack_memory_used@@Base+0xfe4c>
  4365c4:	str	w0, [sp, #68]
  4365c8:	ldr	w9, [sp, #68]
  4365cc:	cmp	w9, #0x0
  4365d0:	cset	w9, ne  // ne = any
  4365d4:	and	w9, w9, #0x1
  4365d8:	mov	w1, w9
  4365dc:	sxtw	x8, w1
  4365e0:	cbz	x8, 4365f0 <_obstack_memory_used@@Base+0xecd0>
  4365e4:	ldrsw	x8, [sp, #68]
  4365e8:	stur	x8, [x29, #-56]
  4365ec:	b	4368d0 <_obstack_memory_used@@Base+0xefb0>
  4365f0:	ldr	x8, [sp, #32]
  4365f4:	ldrb	w9, [x8, #104]
  4365f8:	mov	w10, #0x4                   	// #4
  4365fc:	lsr	w9, w9, w10
  436600:	and	w9, w9, #0x1
  436604:	and	w9, w9, #0xff
  436608:	mov	w8, w9
  43660c:	ubfx	x8, x8, #0, #32
  436610:	cbz	x8, 436664 <_obstack_memory_used@@Base+0xed44>
  436614:	ldr	x8, [sp, #32]
  436618:	ldrb	w9, [x8, #104]
  43661c:	mov	w10, #0x7                   	// #7
  436620:	lsr	w9, w9, w10
  436624:	and	w9, w9, #0xff
  436628:	cbz	w9, 436640 <_obstack_memory_used@@Base+0xed20>
  43662c:	ldur	x0, [x29, #-64]
  436630:	ldr	x1, [sp, #32]
  436634:	ldr	x2, [sp, #40]
  436638:	bl	4368e0 <_obstack_memory_used@@Base+0xefc0>
  43663c:	cbz	x0, 436664 <_obstack_memory_used@@Base+0xed44>
  436640:	ldurb	w8, [x29, #-65]
  436644:	tbnz	w8, #0, 436654 <_obstack_memory_used@@Base+0xed34>
  436648:	ldr	x8, [sp, #40]
  43664c:	stur	x8, [x29, #-56]
  436650:	b	4368d0 <_obstack_memory_used@@Base+0xefb0>
  436654:	ldr	x8, [sp, #40]
  436658:	str	x8, [sp, #48]
  43665c:	mov	x8, #0x1                   	// #1
  436660:	str	x8, [sp, #56]
  436664:	ldur	x8, [x29, #-64]
  436668:	ldr	x8, [x8, #104]
  43666c:	ldur	x9, [x29, #-64]
  436670:	ldr	x9, [x9, #72]
  436674:	cmp	x8, x9
  436678:	cset	w10, le
  43667c:	eor	w10, w10, #0x1
  436680:	tbnz	w10, #0, 436688 <_obstack_memory_used@@Base+0xed68>
  436684:	b	4368ac <_obstack_memory_used@@Base+0xef8c>
  436688:	ldr	x8, [sp, #32]
  43668c:	str	x8, [sp, #8]
  436690:	ldur	x8, [x29, #-64]
  436694:	ldr	x8, [x8, #72]
  436698:	add	x8, x8, #0x1
  43669c:	str	x8, [sp]
  4366a0:	ldr	x8, [sp]
  4366a4:	ldur	x9, [x29, #-64]
  4366a8:	ldr	x9, [x9, #64]
  4366ac:	cmp	x8, x9
  4366b0:	cset	w10, ge  // ge = tcont
  4366b4:	and	w10, w10, #0x1
  4366b8:	mov	w0, w10
  4366bc:	sxtw	x8, w0
  4366c0:	cbz	x8, 4366dc <_obstack_memory_used@@Base+0xedbc>
  4366c4:	ldur	x8, [x29, #-64]
  4366c8:	ldr	x8, [x8, #64]
  4366cc:	ldur	x9, [x29, #-64]
  4366d0:	ldr	x9, [x9, #88]
  4366d4:	cmp	x8, x9
  4366d8:	b.lt	436718 <_obstack_memory_used@@Base+0xedf8>  // b.tstop
  4366dc:	ldr	x8, [sp]
  4366e0:	ldur	x9, [x29, #-64]
  4366e4:	ldr	x9, [x9, #48]
  4366e8:	cmp	x8, x9
  4366ec:	cset	w10, ge  // ge = tcont
  4366f0:	and	w10, w10, #0x1
  4366f4:	mov	w0, w10
  4366f8:	sxtw	x8, w0
  4366fc:	cbz	x8, 436768 <_obstack_memory_used@@Base+0xee48>
  436700:	ldur	x8, [x29, #-64]
  436704:	ldr	x8, [x8, #48]
  436708:	ldur	x9, [x29, #-64]
  43670c:	ldr	x9, [x9, #88]
  436710:	cmp	x8, x9
  436714:	b.ge	436768 <_obstack_memory_used@@Base+0xee48>  // b.tcont
  436718:	ldur	x0, [x29, #-64]
  43671c:	ldr	x8, [sp]
  436720:	add	x8, x8, #0x1
  436724:	mov	w1, w8
  436728:	bl	437cf0 <_obstack_memory_used@@Base+0x103d0>
  43672c:	str	w0, [sp, #68]
  436730:	ldr	w8, [sp, #68]
  436734:	cmp	w8, #0x0
  436738:	cset	w8, ne  // ne = any
  43673c:	and	w8, w8, #0x1
  436740:	mov	w2, w8
  436744:	sxtw	x9, w2
  436748:	cbz	x9, 436768 <_obstack_memory_used@@Base+0xee48>
  43674c:	ldr	w8, [sp, #68]
  436750:	cmp	w8, #0xc
  436754:	b.ne	43675c <_obstack_memory_used@@Base+0xee3c>  // b.any
  436758:	b	43675c <_obstack_memory_used@@Base+0xee3c>
  43675c:	mov	x8, #0xfffffffffffffffe    	// #-2
  436760:	stur	x8, [x29, #-56]
  436764:	b	4368d0 <_obstack_memory_used@@Base+0xefb0>
  436768:	ldur	x1, [x29, #-64]
  43676c:	ldr	x2, [sp, #32]
  436770:	add	x0, sp, #0x44
  436774:	bl	437f3c <_obstack_memory_used@@Base+0x1061c>
  436778:	str	x0, [sp, #32]
  43677c:	ldur	x8, [x29, #-64]
  436780:	ldr	x8, [x8, #184]
  436784:	cbz	x8, 43679c <_obstack_memory_used@@Base+0xee7c>
  436788:	ldur	x1, [x29, #-64]
  43678c:	ldr	x2, [sp, #32]
  436790:	add	x0, sp, #0x44
  436794:	bl	438110 <_obstack_memory_used@@Base+0x107f0>
  436798:	str	x0, [sp, #32]
  43679c:	ldr	x8, [sp, #32]
  4367a0:	cbnz	x8, 436804 <_obstack_memory_used@@Base+0xeee4>
  4367a4:	ldr	w8, [sp, #68]
  4367a8:	cmp	w8, #0x0
  4367ac:	cset	w8, ne  // ne = any
  4367b0:	and	w8, w8, #0x1
  4367b4:	mov	w0, w8
  4367b8:	sxtw	x9, w0
  4367bc:	cbz	x9, 4367cc <_obstack_memory_used@@Base+0xeeac>
  4367c0:	mov	x8, #0xfffffffffffffffe    	// #-2
  4367c4:	stur	x8, [x29, #-56]
  4367c8:	b	4368d0 <_obstack_memory_used@@Base+0xefb0>
  4367cc:	ldur	x8, [x29, #-64]
  4367d0:	ldr	x8, [x8, #184]
  4367d4:	cbz	x8, 436800 <_obstack_memory_used@@Base+0xeee0>
  4367d8:	ldr	x8, [sp, #56]
  4367dc:	cbz	x8, 4367ec <_obstack_memory_used@@Base+0xeecc>
  4367e0:	ldurb	w8, [x29, #-65]
  4367e4:	tbnz	w8, #0, 4367ec <_obstack_memory_used@@Base+0xeecc>
  4367e8:	b	436800 <_obstack_memory_used@@Base+0xeee0>
  4367ec:	ldur	x1, [x29, #-64]
  4367f0:	add	x0, sp, #0x44
  4367f4:	bl	4383c8 <_obstack_memory_used@@Base+0x10aa8>
  4367f8:	str	x0, [sp, #32]
  4367fc:	cbnz	x0, 436804 <_obstack_memory_used@@Base+0xeee4>
  436800:	b	4368ac <_obstack_memory_used@@Base+0xef8c>
  436804:	ldrb	w8, [sp, #31]
  436808:	tbnz	w8, #0, 436810 <_obstack_memory_used@@Base+0xeef0>
  43680c:	b	436834 <_obstack_memory_used@@Base+0xef14>
  436810:	ldr	x8, [sp, #8]
  436814:	ldr	x9, [sp, #32]
  436818:	cmp	x8, x9
  43681c:	b.ne	43682c <_obstack_memory_used@@Base+0xef0c>  // b.any
  436820:	ldr	x8, [sp]
  436824:	str	x8, [sp, #16]
  436828:	b	436834 <_obstack_memory_used@@Base+0xef14>
  43682c:	mov	w8, #0x0                   	// #0
  436830:	strb	w8, [sp, #31]
  436834:	ldr	x8, [sp, #32]
  436838:	ldrb	w9, [x8, #104]
  43683c:	mov	w10, #0x4                   	// #4
  436840:	lsr	w9, w9, w10
  436844:	and	w9, w9, #0x1
  436848:	and	w9, w9, #0xff
  43684c:	cbz	w9, 4368a8 <_obstack_memory_used@@Base+0xef88>
  436850:	ldr	x8, [sp, #32]
  436854:	ldrb	w9, [x8, #104]
  436858:	mov	w10, #0x7                   	// #7
  43685c:	lsr	w9, w9, w10
  436860:	and	w9, w9, #0xff
  436864:	cbz	w9, 436880 <_obstack_memory_used@@Base+0xef60>
  436868:	ldur	x0, [x29, #-64]
  43686c:	ldr	x1, [sp, #32]
  436870:	ldur	x8, [x29, #-64]
  436874:	ldr	x2, [x8, #72]
  436878:	bl	4368e0 <_obstack_memory_used@@Base+0xefc0>
  43687c:	cbz	x0, 4368a8 <_obstack_memory_used@@Base+0xef88>
  436880:	ldur	x8, [x29, #-64]
  436884:	ldr	x8, [x8, #72]
  436888:	str	x8, [sp, #48]
  43688c:	mov	x8, #0x1                   	// #1
  436890:	str	x8, [sp, #56]
  436894:	mov	x8, xzr
  436898:	str	x8, [sp, #80]
  43689c:	ldurb	w9, [x29, #-65]
  4368a0:	tbnz	w9, #0, 4368a8 <_obstack_memory_used@@Base+0xef88>
  4368a4:	b	4368ac <_obstack_memory_used@@Base+0xef8c>
  4368a8:	b	436664 <_obstack_memory_used@@Base+0xed44>
  4368ac:	ldr	x8, [sp, #80]
  4368b0:	cbz	x8, 4368c8 <_obstack_memory_used@@Base+0xefa8>
  4368b4:	ldr	x8, [sp, #16]
  4368b8:	ldr	x9, [sp, #80]
  4368bc:	ldr	x10, [x9]
  4368c0:	add	x8, x10, x8
  4368c4:	str	x8, [x9]
  4368c8:	ldr	x8, [sp, #48]
  4368cc:	stur	x8, [x29, #-56]
  4368d0:	ldur	x0, [x29, #-56]
  4368d4:	ldp	x29, x30, [sp, #160]
  4368d8:	add	sp, sp, #0xb0
  4368dc:	ret
  4368e0:	sub	sp, sp, #0x40
  4368e4:	stp	x29, x30, [sp, #48]
  4368e8:	add	x29, sp, #0x30
  4368ec:	stur	x0, [x29, #-16]
  4368f0:	str	x1, [sp, #24]
  4368f4:	str	x2, [sp, #16]
  4368f8:	ldr	x8, [sp, #24]
  4368fc:	ldrb	w9, [x8, #104]
  436900:	mov	w10, #0x4                   	// #4
  436904:	lsr	w9, w9, w10
  436908:	and	w9, w9, #0x1
  43690c:	and	w9, w9, #0xff
  436910:	cbz	w9, 436918 <_obstack_memory_used@@Base+0xeff8>
  436914:	b	436918 <_obstack_memory_used@@Base+0xeff8>
  436918:	ldur	x0, [x29, #-16]
  43691c:	ldr	x1, [sp, #16]
  436920:	ldur	x8, [x29, #-16]
  436924:	ldr	w2, [x8, #160]
  436928:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  43692c:	str	w0, [sp, #4]
  436930:	str	xzr, [sp, #8]
  436934:	ldr	x8, [sp, #8]
  436938:	ldr	x9, [sp, #24]
  43693c:	ldr	x9, [x9, #16]
  436940:	cmp	x8, x9
  436944:	b.ge	436998 <_obstack_memory_used@@Base+0xf078>  // b.tcont
  436948:	ldur	x8, [x29, #-16]
  43694c:	ldr	x0, [x8, #152]
  436950:	ldr	x8, [sp, #24]
  436954:	ldr	x8, [x8, #24]
  436958:	ldr	x9, [sp, #8]
  43695c:	ldr	x1, [x8, x9, lsl #3]
  436960:	ldr	w2, [sp, #4]
  436964:	bl	43ccd4 <_obstack_memory_used@@Base+0x153b4>
  436968:	tbnz	w0, #0, 436970 <_obstack_memory_used@@Base+0xf050>
  43696c:	b	436988 <_obstack_memory_used@@Base+0xf068>
  436970:	ldr	x8, [sp, #24]
  436974:	ldr	x8, [x8, #24]
  436978:	ldr	x9, [sp, #8]
  43697c:	ldr	x8, [x8, x9, lsl #3]
  436980:	stur	x8, [x29, #-8]
  436984:	b	43699c <_obstack_memory_used@@Base+0xf07c>
  436988:	ldr	x8, [sp, #8]
  43698c:	add	x8, x8, #0x1
  436990:	str	x8, [sp, #8]
  436994:	b	436934 <_obstack_memory_used@@Base+0xf014>
  436998:	stur	xzr, [x29, #-8]
  43699c:	ldur	x0, [x29, #-8]
  4369a0:	ldp	x29, x30, [sp, #48]
  4369a4:	add	sp, sp, #0x40
  4369a8:	ret
  4369ac:	sub	sp, sp, #0xa0
  4369b0:	stp	x29, x30, [sp, #144]
  4369b4:	add	x29, sp, #0x90
  4369b8:	mov	x8, xzr
  4369bc:	stur	x0, [x29, #-16]
  4369c0:	ldur	x9, [x29, #-16]
  4369c4:	ldr	x9, [x9, #152]
  4369c8:	stur	x9, [x29, #-24]
  4369cc:	stur	x8, [x29, #-64]
  4369d0:	ldur	x8, [x29, #-16]
  4369d4:	ldr	x8, [x8, #184]
  4369d8:	cbz	x8, 4369e0 <_obstack_memory_used@@Base+0xf0c0>
  4369dc:	b	4369e0 <_obstack_memory_used@@Base+0xf0c0>
  4369e0:	ldur	x8, [x29, #-16]
  4369e4:	ldr	x8, [x8, #168]
  4369e8:	stur	x8, [x29, #-40]
  4369ec:	ldur	x8, [x29, #-16]
  4369f0:	ldr	x8, [x8, #176]
  4369f4:	stur	x8, [x29, #-32]
  4369f8:	ldur	x8, [x29, #-40]
  4369fc:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  436a00:	cmp	x9, x8
  436a04:	cset	w10, ls  // ls = plast
  436a08:	and	w10, w10, #0x1
  436a0c:	mov	w0, w10
  436a10:	sxtw	x8, w0
  436a14:	cbz	x8, 436a24 <_obstack_memory_used@@Base+0xf104>
  436a18:	mov	w8, #0xc                   	// #12
  436a1c:	stur	w8, [x29, #-4]
  436a20:	b	436d28 <_obstack_memory_used@@Base+0xf408>
  436a24:	ldur	x8, [x29, #-40]
  436a28:	add	x8, x8, #0x1
  436a2c:	mov	x9, #0x8                   	// #8
  436a30:	mul	x0, x8, x9
  436a34:	bl	402450 <malloc@plt>
  436a38:	stur	x0, [x29, #-56]
  436a3c:	ldur	x8, [x29, #-56]
  436a40:	cmp	x8, #0x0
  436a44:	cset	w10, eq  // eq = none
  436a48:	and	w10, w10, #0x1
  436a4c:	mov	w0, w10
  436a50:	sxtw	x8, w0
  436a54:	cbz	x8, 436a64 <_obstack_memory_used@@Base+0xf144>
  436a58:	mov	w8, #0xc                   	// #12
  436a5c:	stur	w8, [x29, #-44]
  436a60:	b	436d10 <_obstack_memory_used@@Base+0xf3f0>
  436a64:	ldur	x8, [x29, #-24]
  436a68:	ldr	x8, [x8, #152]
  436a6c:	cbz	x8, 436c60 <_obstack_memory_used@@Base+0xf340>
  436a70:	ldur	x8, [x29, #-40]
  436a74:	add	x8, x8, #0x1
  436a78:	mov	x9, #0x8                   	// #8
  436a7c:	mul	x0, x8, x9
  436a80:	bl	402450 <malloc@plt>
  436a84:	stur	x0, [x29, #-64]
  436a88:	ldur	x8, [x29, #-64]
  436a8c:	cmp	x8, #0x0
  436a90:	cset	w10, eq  // eq = none
  436a94:	and	w10, w10, #0x1
  436a98:	mov	w0, w10
  436a9c:	sxtw	x8, w0
  436aa0:	cbz	x8, 436ab0 <_obstack_memory_used@@Base+0xf190>
  436aa4:	mov	w8, #0xc                   	// #12
  436aa8:	stur	w8, [x29, #-44]
  436aac:	b	436d10 <_obstack_memory_used@@Base+0xf3f0>
  436ab0:	ldur	x0, [x29, #-64]
  436ab4:	ldur	x8, [x29, #-40]
  436ab8:	add	x8, x8, #0x1
  436abc:	mov	x9, #0x8                   	// #8
  436ac0:	mul	x2, x9, x8
  436ac4:	mov	w10, wzr
  436ac8:	mov	w1, w10
  436acc:	bl	402520 <memset@plt>
  436ad0:	ldur	x1, [x29, #-56]
  436ad4:	ldur	x2, [x29, #-64]
  436ad8:	ldur	x3, [x29, #-32]
  436adc:	ldur	x4, [x29, #-40]
  436ae0:	add	x8, sp, #0x18
  436ae4:	mov	x0, x8
  436ae8:	str	x8, [sp, #16]
  436aec:	bl	43cdf0 <_obstack_memory_used@@Base+0x154d0>
  436af0:	ldur	x0, [x29, #-16]
  436af4:	ldr	x1, [sp, #16]
  436af8:	bl	43ce50 <_obstack_memory_used@@Base+0x15530>
  436afc:	stur	w0, [x29, #-44]
  436b00:	ldr	x8, [sp, #16]
  436b04:	ldr	x0, [x8, #48]
  436b08:	bl	4026c0 <free@plt>
  436b0c:	ldur	w10, [x29, #-44]
  436b10:	cmp	w10, #0x0
  436b14:	cset	w10, ne  // ne = any
  436b18:	and	w10, w10, #0x1
  436b1c:	mov	w0, w10
  436b20:	sxtw	x8, w0
  436b24:	cbz	x8, 436b2c <_obstack_memory_used@@Base+0xf20c>
  436b28:	b	436d10 <_obstack_memory_used@@Base+0xf3f0>
  436b2c:	ldur	x8, [x29, #-56]
  436b30:	ldr	x8, [x8]
  436b34:	cbnz	x8, 436b44 <_obstack_memory_used@@Base+0xf224>
  436b38:	ldur	x8, [x29, #-64]
  436b3c:	ldr	x8, [x8]
  436b40:	cbz	x8, 436b48 <_obstack_memory_used@@Base+0xf228>
  436b44:	b	436c10 <_obstack_memory_used@@Base+0xf2f0>
  436b48:	ldur	x8, [x29, #-40]
  436b4c:	subs	x8, x8, #0x1
  436b50:	stur	x8, [x29, #-40]
  436b54:	ldur	x8, [x29, #-40]
  436b58:	cmp	x8, #0x0
  436b5c:	cset	w9, ge  // ge = tcont
  436b60:	tbnz	w9, #0, 436b70 <_obstack_memory_used@@Base+0xf250>
  436b64:	mov	w8, #0x1                   	// #1
  436b68:	stur	w8, [x29, #-44]
  436b6c:	b	436d10 <_obstack_memory_used@@Base+0xf3f0>
  436b70:	ldur	x8, [x29, #-16]
  436b74:	ldr	x8, [x8, #184]
  436b78:	ldur	x9, [x29, #-40]
  436b7c:	mov	x10, #0x8                   	// #8
  436b80:	mul	x9, x10, x9
  436b84:	add	x8, x8, x9
  436b88:	ldr	x8, [x8]
  436b8c:	mov	w11, #0x1                   	// #1
  436b90:	str	w11, [sp, #12]
  436b94:	cbz	x8, 436bd8 <_obstack_memory_used@@Base+0xf2b8>
  436b98:	ldur	x8, [x29, #-16]
  436b9c:	ldr	x8, [x8, #184]
  436ba0:	ldur	x9, [x29, #-40]
  436ba4:	mov	x10, #0x8                   	// #8
  436ba8:	mul	x9, x10, x9
  436bac:	add	x8, x8, x9
  436bb0:	ldr	x8, [x8]
  436bb4:	ldrb	w11, [x8, #104]
  436bb8:	mov	w12, #0x4                   	// #4
  436bbc:	lsr	w11, w11, w12
  436bc0:	mov	w12, #0x1                   	// #1
  436bc4:	and	w11, w11, #0x1
  436bc8:	tst	w11, #0xff
  436bcc:	cset	w11, ne  // ne = any
  436bd0:	eor	w11, w11, w12
  436bd4:	str	w11, [sp, #12]
  436bd8:	ldr	w8, [sp, #12]
  436bdc:	tbnz	w8, #0, 436b48 <_obstack_memory_used@@Base+0xf228>
  436be0:	ldur	x0, [x29, #-16]
  436be4:	ldur	x8, [x29, #-16]
  436be8:	ldr	x8, [x8, #184]
  436bec:	ldur	x9, [x29, #-40]
  436bf0:	mov	x10, #0x8                   	// #8
  436bf4:	mul	x9, x10, x9
  436bf8:	add	x8, x8, x9
  436bfc:	ldr	x1, [x8]
  436c00:	ldur	x2, [x29, #-40]
  436c04:	bl	4368e0 <_obstack_memory_used@@Base+0xefc0>
  436c08:	stur	x0, [x29, #-32]
  436c0c:	b	436ab0 <_obstack_memory_used@@Base+0xf190>
  436c10:	ldur	x0, [x29, #-24]
  436c14:	ldur	x1, [x29, #-56]
  436c18:	ldur	x2, [x29, #-64]
  436c1c:	ldur	x8, [x29, #-40]
  436c20:	add	x3, x8, #0x1
  436c24:	bl	43d07c <_obstack_memory_used@@Base+0x1575c>
  436c28:	stur	w0, [x29, #-44]
  436c2c:	ldur	x0, [x29, #-64]
  436c30:	bl	4026c0 <free@plt>
  436c34:	mov	x8, xzr
  436c38:	stur	x8, [x29, #-64]
  436c3c:	ldur	w9, [x29, #-44]
  436c40:	cmp	w9, #0x0
  436c44:	cset	w9, ne  // ne = any
  436c48:	and	w9, w9, #0x1
  436c4c:	mov	w0, w9
  436c50:	sxtw	x8, w0
  436c54:	cbz	x8, 436c5c <_obstack_memory_used@@Base+0xf33c>
  436c58:	b	436d10 <_obstack_memory_used@@Base+0xf3f0>
  436c5c:	b	436cd4 <_obstack_memory_used@@Base+0xf3b4>
  436c60:	ldur	x1, [x29, #-56]
  436c64:	ldur	x2, [x29, #-64]
  436c68:	ldur	x3, [x29, #-32]
  436c6c:	ldur	x4, [x29, #-40]
  436c70:	add	x8, sp, #0x18
  436c74:	mov	x0, x8
  436c78:	str	x8, [sp]
  436c7c:	bl	43cdf0 <_obstack_memory_used@@Base+0x154d0>
  436c80:	ldur	x0, [x29, #-16]
  436c84:	ldr	x1, [sp]
  436c88:	bl	43ce50 <_obstack_memory_used@@Base+0x15530>
  436c8c:	stur	w0, [x29, #-44]
  436c90:	ldr	x8, [sp]
  436c94:	ldr	x0, [x8, #48]
  436c98:	bl	4026c0 <free@plt>
  436c9c:	ldur	w9, [x29, #-44]
  436ca0:	cmp	w9, #0x0
  436ca4:	cset	w9, ne  // ne = any
  436ca8:	and	w9, w9, #0x1
  436cac:	mov	w0, w9
  436cb0:	sxtw	x8, w0
  436cb4:	cbz	x8, 436cbc <_obstack_memory_used@@Base+0xf39c>
  436cb8:	b	436d10 <_obstack_memory_used@@Base+0xf3f0>
  436cbc:	ldur	x8, [x29, #-56]
  436cc0:	ldr	x8, [x8]
  436cc4:	cbnz	x8, 436cd4 <_obstack_memory_used@@Base+0xf3b4>
  436cc8:	mov	w8, #0x1                   	// #1
  436ccc:	stur	w8, [x29, #-44]
  436cd0:	b	436d10 <_obstack_memory_used@@Base+0xf3f0>
  436cd4:	ldur	x8, [x29, #-16]
  436cd8:	ldr	x0, [x8, #184]
  436cdc:	bl	4026c0 <free@plt>
  436ce0:	ldur	x8, [x29, #-56]
  436ce4:	ldur	x9, [x29, #-16]
  436ce8:	str	x8, [x9, #184]
  436cec:	mov	x8, xzr
  436cf0:	stur	x8, [x29, #-56]
  436cf4:	ldur	x8, [x29, #-32]
  436cf8:	ldur	x9, [x29, #-16]
  436cfc:	str	x8, [x9, #176]
  436d00:	ldur	x8, [x29, #-40]
  436d04:	ldur	x9, [x29, #-16]
  436d08:	str	x8, [x9, #168]
  436d0c:	stur	wzr, [x29, #-44]
  436d10:	ldur	x0, [x29, #-56]
  436d14:	bl	4026c0 <free@plt>
  436d18:	ldur	x0, [x29, #-64]
  436d1c:	bl	4026c0 <free@plt>
  436d20:	ldur	w8, [x29, #-44]
  436d24:	stur	w8, [x29, #-4]
  436d28:	ldur	w0, [x29, #-4]
  436d2c:	ldp	x29, x30, [sp, #144]
  436d30:	add	sp, sp, #0xa0
  436d34:	ret
  436d38:	sub	sp, sp, #0x40
  436d3c:	stp	x29, x30, [sp, #48]
  436d40:	add	x29, sp, #0x30
  436d44:	stur	x0, [x29, #-8]
  436d48:	stur	xzr, [x29, #-16]
  436d4c:	ldur	x8, [x29, #-16]
  436d50:	ldur	x9, [x29, #-8]
  436d54:	ldr	x9, [x9, #232]
  436d58:	cmp	x8, x9
  436d5c:	b.ge	436e28 <_obstack_memory_used@@Base+0xf508>  // b.tcont
  436d60:	ldur	x8, [x29, #-8]
  436d64:	ldr	x8, [x8, #248]
  436d68:	ldur	x9, [x29, #-16]
  436d6c:	mov	x10, #0x8                   	// #8
  436d70:	mul	x9, x10, x9
  436d74:	add	x8, x8, x9
  436d78:	ldr	x8, [x8]
  436d7c:	str	x8, [sp, #16]
  436d80:	str	xzr, [sp, #24]
  436d84:	ldr	x8, [sp, #24]
  436d88:	ldr	x9, [sp, #16]
  436d8c:	ldr	x9, [x9, #32]
  436d90:	cmp	x8, x9
  436d94:	b.ge	436ddc <_obstack_memory_used@@Base+0xf4bc>  // b.tcont
  436d98:	ldr	x8, [sp, #16]
  436d9c:	ldr	x8, [x8, #40]
  436da0:	ldr	x9, [sp, #24]
  436da4:	mov	x10, #0x8                   	// #8
  436da8:	mul	x9, x10, x9
  436dac:	add	x8, x8, x9
  436db0:	ldr	x8, [x8]
  436db4:	str	x8, [sp, #8]
  436db8:	ldr	x8, [sp, #8]
  436dbc:	ldr	x0, [x8, #32]
  436dc0:	bl	4026c0 <free@plt>
  436dc4:	ldr	x0, [sp, #8]
  436dc8:	bl	4026c0 <free@plt>
  436dcc:	ldr	x8, [sp, #24]
  436dd0:	add	x8, x8, #0x1
  436dd4:	str	x8, [sp, #24]
  436dd8:	b	436d84 <_obstack_memory_used@@Base+0xf464>
  436ddc:	ldr	x8, [sp, #16]
  436de0:	ldr	x0, [x8, #40]
  436de4:	bl	4026c0 <free@plt>
  436de8:	ldr	x8, [sp, #16]
  436dec:	ldr	x8, [x8, #16]
  436df0:	cbz	x8, 436e10 <_obstack_memory_used@@Base+0xf4f0>
  436df4:	ldr	x8, [sp, #16]
  436df8:	ldr	x8, [x8, #16]
  436dfc:	ldr	x0, [x8, #16]
  436e00:	bl	4026c0 <free@plt>
  436e04:	ldr	x8, [sp, #16]
  436e08:	ldr	x0, [x8, #16]
  436e0c:	bl	4026c0 <free@plt>
  436e10:	ldr	x0, [sp, #16]
  436e14:	bl	4026c0 <free@plt>
  436e18:	ldur	x8, [x29, #-16]
  436e1c:	add	x8, x8, #0x1
  436e20:	stur	x8, [x29, #-16]
  436e24:	b	436d4c <_obstack_memory_used@@Base+0xf42c>
  436e28:	ldur	x8, [x29, #-8]
  436e2c:	str	xzr, [x8, #232]
  436e30:	ldur	x8, [x29, #-8]
  436e34:	str	xzr, [x8, #200]
  436e38:	ldp	x29, x30, [sp, #48]
  436e3c:	add	sp, sp, #0x40
  436e40:	ret
  436e44:	stp	x29, x30, [sp, #-16]!
  436e48:	mov	x29, sp
  436e4c:	sub	sp, sp, #0xa0
  436e50:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  436e54:	add	x8, x8, #0xb20
  436e58:	mov	w9, #0x0                   	// #0
  436e5c:	mov	w10, #0x1                   	// #1
  436e60:	stur	x0, [x29, #-16]
  436e64:	stur	x1, [x29, #-24]
  436e68:	stur	x2, [x29, #-32]
  436e6c:	stur	x3, [x29, #-40]
  436e70:	and	w10, w4, w10
  436e74:	sturb	w10, [x29, #-41]
  436e78:	ldur	x11, [x29, #-16]
  436e7c:	ldr	x11, [x11]
  436e80:	stur	x11, [x29, #-56]
  436e84:	ldr	q0, [x8]
  436e88:	stur	q0, [x29, #-128]
  436e8c:	ldr	x8, [x8, #16]
  436e90:	stur	x8, [x29, #-112]
  436e94:	sturb	w9, [x29, #-137]
  436e98:	ldur	x8, [x29, #-32]
  436e9c:	cmp	x8, #0x1
  436ea0:	b.ls	436ea8 <_obstack_memory_used@@Base+0xf588>  // b.plast
  436ea4:	b	436ea8 <_obstack_memory_used@@Base+0xf588>
  436ea8:	ldur	x8, [x29, #-24]
  436eac:	ldr	x8, [x8, #184]
  436eb0:	cbz	x8, 436eb8 <_obstack_memory_used@@Base+0xf598>
  436eb4:	b	436eb8 <_obstack_memory_used@@Base+0xf598>
  436eb8:	ldurb	w8, [x29, #-41]
  436ebc:	tbnz	w8, #0, 436ec4 <_obstack_memory_used@@Base+0xf5a4>
  436ec0:	b	436f04 <_obstack_memory_used@@Base+0xf5e4>
  436ec4:	sub	x8, x29, #0x80
  436ec8:	stur	x8, [x29, #-104]
  436ecc:	ldur	x8, [x29, #-104]
  436ed0:	ldr	x8, [x8, #8]
  436ed4:	mov	x9, #0x30                  	// #48
  436ed8:	mul	x0, x8, x9
  436edc:	bl	402450 <malloc@plt>
  436ee0:	ldur	x8, [x29, #-104]
  436ee4:	str	x0, [x8, #16]
  436ee8:	ldur	x8, [x29, #-104]
  436eec:	ldr	x8, [x8, #16]
  436ef0:	cbnz	x8, 436f00 <_obstack_memory_used@@Base+0xf5e0>
  436ef4:	mov	w8, #0xc                   	// #12
  436ef8:	stur	w8, [x29, #-4]
  436efc:	b	437230 <_obstack_memory_used@@Base+0xf910>
  436f00:	b	436f0c <_obstack_memory_used@@Base+0xf5ec>
  436f04:	mov	x8, xzr
  436f08:	stur	x8, [x29, #-104]
  436f0c:	ldur	x8, [x29, #-56]
  436f10:	ldr	x8, [x8, #144]
  436f14:	stur	x8, [x29, #-72]
  436f18:	stur	xzr, [x29, #-96]
  436f1c:	stur	xzr, [x29, #-88]
  436f20:	stur	xzr, [x29, #-80]
  436f24:	ldur	x8, [x29, #-32]
  436f28:	mov	x9, #0x10                  	// #16
  436f2c:	mul	x8, x8, x9
  436f30:	cmp	x8, #0xfc0
  436f34:	b.cs	436f68 <_obstack_memory_used@@Base+0xf648>  // b.hs, b.nlast
  436f38:	ldur	x8, [x29, #-32]
  436f3c:	mov	x9, #0x10                  	// #16
  436f40:	mul	x8, x8, x9
  436f44:	mov	x9, #0x1                   	// #1
  436f48:	mul	x8, x8, x9
  436f4c:	add	x8, x8, #0xf
  436f50:	and	x8, x8, #0xfffffffffffffff0
  436f54:	mov	x9, sp
  436f58:	subs	x8, x9, x8
  436f5c:	mov	sp, x8
  436f60:	stur	x8, [x29, #-136]
  436f64:	b	436fa0 <_obstack_memory_used@@Base+0xf680>
  436f68:	ldur	x8, [x29, #-32]
  436f6c:	mov	x9, #0x10                  	// #16
  436f70:	mul	x0, x8, x9
  436f74:	bl	402450 <malloc@plt>
  436f78:	stur	x0, [x29, #-136]
  436f7c:	ldur	x8, [x29, #-136]
  436f80:	cbnz	x8, 436f98 <_obstack_memory_used@@Base+0xf678>
  436f84:	ldur	x0, [x29, #-104]
  436f88:	bl	43ed08 <_obstack_memory_used@@Base+0x173e8>
  436f8c:	mov	w8, #0xc                   	// #12
  436f90:	stur	w8, [x29, #-4]
  436f94:	b	437230 <_obstack_memory_used@@Base+0xf910>
  436f98:	mov	w8, #0x1                   	// #1
  436f9c:	sturb	w8, [x29, #-137]
  436fa0:	ldur	x0, [x29, #-136]
  436fa4:	ldur	x1, [x29, #-40]
  436fa8:	ldur	x8, [x29, #-32]
  436fac:	mov	x9, #0x10                  	// #16
  436fb0:	mul	x2, x9, x8
  436fb4:	bl	402290 <memcpy@plt>
  436fb8:	ldur	x8, [x29, #-40]
  436fbc:	ldr	x8, [x8]
  436fc0:	stur	x8, [x29, #-64]
  436fc4:	ldur	x8, [x29, #-64]
  436fc8:	ldur	x9, [x29, #-40]
  436fcc:	ldr	x9, [x9, #8]
  436fd0:	cmp	x8, x9
  436fd4:	b.gt	437204 <_obstack_memory_used@@Base+0xf8e4>
  436fd8:	ldur	x0, [x29, #-56]
  436fdc:	ldur	x1, [x29, #-40]
  436fe0:	ldur	x2, [x29, #-136]
  436fe4:	ldur	x3, [x29, #-72]
  436fe8:	ldur	x4, [x29, #-64]
  436fec:	ldur	x5, [x29, #-32]
  436ff0:	bl	43edac <_obstack_memory_used@@Base+0x1748c>
  436ff4:	ldur	x8, [x29, #-64]
  436ff8:	ldur	x9, [x29, #-40]
  436ffc:	ldr	x9, [x9, #8]
  437000:	cmp	x8, x9
  437004:	b.ne	437118 <_obstack_memory_used@@Base+0xf7f8>  // b.any
  437008:	ldur	x8, [x29, #-72]
  43700c:	ldur	x9, [x29, #-24]
  437010:	ldr	x9, [x9, #176]
  437014:	cmp	x8, x9
  437018:	b.ne	437118 <_obstack_memory_used@@Base+0xf7f8>  // b.any
  43701c:	ldur	x8, [x29, #-104]
  437020:	cbz	x8, 4370f0 <_obstack_memory_used@@Base+0xf7d0>
  437024:	stur	xzr, [x29, #-152]
  437028:	ldur	x8, [x29, #-152]
  43702c:	ldur	x9, [x29, #-32]
  437030:	cmp	x8, x9
  437034:	b.cs	437090 <_obstack_memory_used@@Base+0xf770>  // b.hs, b.nlast
  437038:	ldur	x8, [x29, #-40]
  43703c:	ldur	x9, [x29, #-152]
  437040:	mov	x10, #0x10                  	// #16
  437044:	mul	x9, x10, x9
  437048:	ldr	x8, [x8, x9]
  43704c:	mov	x9, #0xffffffffffffffff    	// #-1
  437050:	cmp	x8, x9
  437054:	b.le	437080 <_obstack_memory_used@@Base+0xf760>
  437058:	ldur	x8, [x29, #-40]
  43705c:	ldur	x9, [x29, #-152]
  437060:	mov	x10, #0x10                  	// #16
  437064:	mul	x9, x10, x9
  437068:	add	x8, x8, x9
  43706c:	ldr	x8, [x8, #8]
  437070:	mov	x9, #0xffffffffffffffff    	// #-1
  437074:	cmp	x8, x9
  437078:	b.ne	437080 <_obstack_memory_used@@Base+0xf760>  // b.any
  43707c:	b	437090 <_obstack_memory_used@@Base+0xf770>
  437080:	ldur	x8, [x29, #-152]
  437084:	add	x8, x8, #0x1
  437088:	stur	x8, [x29, #-152]
  43708c:	b	437028 <_obstack_memory_used@@Base+0xf708>
  437090:	ldur	x8, [x29, #-152]
  437094:	ldur	x9, [x29, #-32]
  437098:	cmp	x8, x9
  43709c:	b.ne	4370d0 <_obstack_memory_used@@Base+0xf7b0>  // b.any
  4370a0:	sub	x8, x29, #0x60
  4370a4:	ldr	x0, [x8, #16]
  4370a8:	bl	4026c0 <free@plt>
  4370ac:	ldurb	w9, [x29, #-137]
  4370b0:	tbnz	w9, #0, 4370b8 <_obstack_memory_used@@Base+0xf798>
  4370b4:	b	4370c0 <_obstack_memory_used@@Base+0xf7a0>
  4370b8:	ldur	x0, [x29, #-136]
  4370bc:	bl	4026c0 <free@plt>
  4370c0:	ldur	x0, [x29, #-104]
  4370c4:	bl	43ed08 <_obstack_memory_used@@Base+0x173e8>
  4370c8:	stur	w0, [x29, #-4]
  4370cc:	b	437230 <_obstack_memory_used@@Base+0xf910>
  4370d0:	ldur	x0, [x29, #-104]
  4370d4:	ldur	x2, [x29, #-32]
  4370d8:	ldur	x3, [x29, #-40]
  4370dc:	sub	x1, x29, #0x40
  4370e0:	sub	x4, x29, #0x60
  4370e4:	bl	43ef84 <_obstack_memory_used@@Base+0x17664>
  4370e8:	stur	x0, [x29, #-72]
  4370ec:	b	437118 <_obstack_memory_used@@Base+0xf7f8>
  4370f0:	sub	x8, x29, #0x60
  4370f4:	ldr	x0, [x8, #16]
  4370f8:	bl	4026c0 <free@plt>
  4370fc:	ldurb	w9, [x29, #-137]
  437100:	tbnz	w9, #0, 437108 <_obstack_memory_used@@Base+0xf7e8>
  437104:	b	437110 <_obstack_memory_used@@Base+0xf7f0>
  437108:	ldur	x0, [x29, #-136]
  43710c:	bl	4026c0 <free@plt>
  437110:	stur	wzr, [x29, #-4]
  437114:	b	437230 <_obstack_memory_used@@Base+0xf910>
  437118:	ldur	x0, [x29, #-24]
  43711c:	ldur	x1, [x29, #-32]
  437120:	ldur	x2, [x29, #-40]
  437124:	ldur	x4, [x29, #-72]
  437128:	ldur	x6, [x29, #-104]
  43712c:	sub	x3, x29, #0x40
  437130:	sub	x5, x29, #0x60
  437134:	bl	43f098 <_obstack_memory_used@@Base+0x17778>
  437138:	stur	x0, [x29, #-72]
  43713c:	ldur	x8, [x29, #-72]
  437140:	cmp	x8, #0x0
  437144:	cset	w9, lt  // lt = tstop
  437148:	and	w9, w9, #0x1
  43714c:	mov	w0, w9
  437150:	sxtw	x8, w0
  437154:	cbz	x8, 437200 <_obstack_memory_used@@Base+0xf8e0>
  437158:	ldur	x8, [x29, #-72]
  43715c:	mov	x9, #0xfffffffffffffffe    	// #-2
  437160:	cmp	x8, x9
  437164:	cset	w10, eq  // eq = none
  437168:	and	w10, w10, #0x1
  43716c:	mov	w0, w10
  437170:	sxtw	x8, w0
  437174:	cbz	x8, 4371ac <_obstack_memory_used@@Base+0xf88c>
  437178:	sub	x8, x29, #0x60
  43717c:	ldr	x0, [x8, #16]
  437180:	bl	4026c0 <free@plt>
  437184:	ldurb	w9, [x29, #-137]
  437188:	tbnz	w9, #0, 437190 <_obstack_memory_used@@Base+0xf870>
  43718c:	b	437198 <_obstack_memory_used@@Base+0xf878>
  437190:	ldur	x0, [x29, #-136]
  437194:	bl	4026c0 <free@plt>
  437198:	ldur	x0, [x29, #-104]
  43719c:	bl	43ed08 <_obstack_memory_used@@Base+0x173e8>
  4371a0:	mov	w8, #0xc                   	// #12
  4371a4:	stur	w8, [x29, #-4]
  4371a8:	b	437230 <_obstack_memory_used@@Base+0xf910>
  4371ac:	ldur	x8, [x29, #-104]
  4371b0:	cbz	x8, 4371d4 <_obstack_memory_used@@Base+0xf8b4>
  4371b4:	ldur	x0, [x29, #-104]
  4371b8:	ldur	x2, [x29, #-32]
  4371bc:	ldur	x3, [x29, #-40]
  4371c0:	sub	x1, x29, #0x40
  4371c4:	sub	x4, x29, #0x60
  4371c8:	bl	43ef84 <_obstack_memory_used@@Base+0x17664>
  4371cc:	stur	x0, [x29, #-72]
  4371d0:	b	437200 <_obstack_memory_used@@Base+0xf8e0>
  4371d4:	sub	x8, x29, #0x60
  4371d8:	ldr	x0, [x8, #16]
  4371dc:	bl	4026c0 <free@plt>
  4371e0:	ldurb	w9, [x29, #-137]
  4371e4:	tbnz	w9, #0, 4371ec <_obstack_memory_used@@Base+0xf8cc>
  4371e8:	b	4371f4 <_obstack_memory_used@@Base+0xf8d4>
  4371ec:	ldur	x0, [x29, #-136]
  4371f0:	bl	4026c0 <free@plt>
  4371f4:	mov	w8, #0x1                   	// #1
  4371f8:	stur	w8, [x29, #-4]
  4371fc:	b	437230 <_obstack_memory_used@@Base+0xf910>
  437200:	b	436fc4 <_obstack_memory_used@@Base+0xf6a4>
  437204:	sub	x8, x29, #0x60
  437208:	ldr	x0, [x8, #16]
  43720c:	bl	4026c0 <free@plt>
  437210:	ldurb	w9, [x29, #-137]
  437214:	tbnz	w9, #0, 43721c <_obstack_memory_used@@Base+0xf8fc>
  437218:	b	437224 <_obstack_memory_used@@Base+0xf904>
  43721c:	ldur	x0, [x29, #-136]
  437220:	bl	4026c0 <free@plt>
  437224:	ldur	x0, [x29, #-104]
  437228:	bl	43ed08 <_obstack_memory_used@@Base+0x173e8>
  43722c:	stur	w0, [x29, #-4]
  437230:	ldur	w0, [x29, #-4]
  437234:	mov	sp, x29
  437238:	ldp	x29, x30, [sp], #16
  43723c:	ret
  437240:	sub	sp, sp, #0x20
  437244:	stp	x29, x30, [sp, #16]
  437248:	add	x29, sp, #0x10
  43724c:	str	x0, [sp, #8]
  437250:	ldr	x0, [sp, #8]
  437254:	bl	436d38 <_obstack_memory_used@@Base+0xf418>
  437258:	ldr	x8, [sp, #8]
  43725c:	ldr	x0, [x8, #248]
  437260:	bl	4026c0 <free@plt>
  437264:	ldr	x8, [sp, #8]
  437268:	ldr	x0, [x8, #216]
  43726c:	bl	4026c0 <free@plt>
  437270:	ldp	x29, x30, [sp, #16]
  437274:	add	sp, sp, #0x20
  437278:	ret
  43727c:	sub	sp, sp, #0x50
  437280:	stp	x29, x30, [sp, #64]
  437284:	add	x29, sp, #0x40
  437288:	stur	x0, [x29, #-16]
  43728c:	stur	x1, [x29, #-24]
  437290:	stur	w2, [x29, #-28]
  437294:	ldur	x8, [x29, #-24]
  437298:	cmp	x8, #0x0
  43729c:	cset	w9, lt  // lt = tstop
  4372a0:	and	w9, w9, #0x1
  4372a4:	mov	w0, w9
  4372a8:	sxtw	x8, w0
  4372ac:	cbz	x8, 4372c0 <_obstack_memory_used@@Base+0xf9a0>
  4372b0:	ldur	x8, [x29, #-16]
  4372b4:	ldr	w9, [x8, #112]
  4372b8:	stur	w9, [x29, #-4]
  4372bc:	b	43748c <_obstack_memory_used@@Base+0xfb6c>
  4372c0:	ldur	x8, [x29, #-24]
  4372c4:	ldur	x9, [x29, #-16]
  4372c8:	ldr	x9, [x9, #88]
  4372cc:	cmp	x8, x9
  4372d0:	cset	w10, eq  // eq = none
  4372d4:	and	w10, w10, #0x1
  4372d8:	mov	w0, w10
  4372dc:	sxtw	x8, w0
  4372e0:	cbz	x8, 437300 <_obstack_memory_used@@Base+0xf9e0>
  4372e4:	ldur	w8, [x29, #-28]
  4372e8:	mov	w9, #0x8                   	// #8
  4372ec:	mov	w10, #0xa                   	// #10
  4372f0:	tst	w8, #0x2
  4372f4:	csel	w8, w9, w10, ne  // ne = any
  4372f8:	stur	w8, [x29, #-4]
  4372fc:	b	43748c <_obstack_memory_used@@Base+0xfb6c>
  437300:	ldur	x8, [x29, #-16]
  437304:	ldr	w9, [x8, #144]
  437308:	cmp	w9, #0x1
  43730c:	b.le	437414 <_obstack_memory_used@@Base+0xfaf4>
  437310:	ldur	x8, [x29, #-24]
  437314:	str	x8, [sp, #16]
  437318:	ldur	x8, [x29, #-16]
  43731c:	ldr	x8, [x8, #16]
  437320:	ldr	x9, [sp, #16]
  437324:	ldr	w10, [x8, x9, lsl #2]
  437328:	mov	w11, #0xffffffff            	// #-1
  43732c:	cmp	w10, w11
  437330:	b.ne	437378 <_obstack_memory_used@@Base+0xfa58>  // b.any
  437334:	ldr	x8, [sp, #16]
  437338:	cmp	x8, #0x0
  43733c:	cset	w9, lt  // lt = tstop
  437340:	tbnz	w9, #0, 437348 <_obstack_memory_used@@Base+0xfa28>
  437344:	b	437348 <_obstack_memory_used@@Base+0xfa28>
  437348:	ldr	x8, [sp, #16]
  43734c:	subs	x8, x8, #0x1
  437350:	str	x8, [sp, #16]
  437354:	ldr	x8, [sp, #16]
  437358:	cmp	x8, #0x0
  43735c:	cset	w9, ge  // ge = tcont
  437360:	tbnz	w9, #0, 437374 <_obstack_memory_used@@Base+0xfa54>
  437364:	ldur	x8, [x29, #-16]
  437368:	ldr	w9, [x8, #112]
  43736c:	stur	w9, [x29, #-4]
  437370:	b	43748c <_obstack_memory_used@@Base+0xfb6c>
  437374:	b	437318 <_obstack_memory_used@@Base+0xf9f8>
  437378:	ldur	x8, [x29, #-16]
  43737c:	ldr	x8, [x8, #16]
  437380:	ldr	x9, [sp, #16]
  437384:	ldr	w10, [x8, x9, lsl #2]
  437388:	str	w10, [sp, #28]
  43738c:	ldur	x8, [x29, #-16]
  437390:	ldrb	w10, [x8, #142]
  437394:	cmp	w10, #0x0
  437398:	cset	w10, ne  // ne = any
  43739c:	and	w10, w10, #0x1
  4373a0:	mov	w0, w10
  4373a4:	sxtw	x8, w0
  4373a8:	cbz	x8, 4373d0 <_obstack_memory_used@@Base+0xfab0>
  4373ac:	ldr	w0, [sp, #28]
  4373b0:	bl	4027b0 <iswalnum@plt>
  4373b4:	cbnz	w0, 4373c4 <_obstack_memory_used@@Base+0xfaa4>
  4373b8:	ldr	w8, [sp, #28]
  4373bc:	cmp	w8, #0x5f
  4373c0:	b.ne	4373d0 <_obstack_memory_used@@Base+0xfab0>  // b.any
  4373c4:	mov	w8, #0x1                   	// #1
  4373c8:	stur	w8, [x29, #-4]
  4373cc:	b	43748c <_obstack_memory_used@@Base+0xfb6c>
  4373d0:	ldr	w8, [sp, #28]
  4373d4:	mov	w9, #0x0                   	// #0
  4373d8:	cmp	w8, #0xa
  4373dc:	str	w9, [sp, #12]
  4373e0:	b.ne	4373f8 <_obstack_memory_used@@Base+0xfad8>  // b.any
  4373e4:	ldur	x8, [x29, #-16]
  4373e8:	ldrb	w9, [x8, #141]
  4373ec:	cmp	w9, #0x0
  4373f0:	cset	w9, ne  // ne = any
  4373f4:	str	w9, [sp, #12]
  4373f8:	ldr	w8, [sp, #12]
  4373fc:	mov	w9, #0x2                   	// #2
  437400:	mov	w10, wzr
  437404:	tst	w8, #0x1
  437408:	csel	w8, w9, w10, ne  // ne = any
  43740c:	stur	w8, [x29, #-4]
  437410:	b	43748c <_obstack_memory_used@@Base+0xfb6c>
  437414:	ldur	x8, [x29, #-16]
  437418:	ldr	x8, [x8, #8]
  43741c:	ldur	x9, [x29, #-24]
  437420:	ldrb	w10, [x8, x9]
  437424:	str	w10, [sp, #32]
  437428:	ldur	x8, [x29, #-16]
  43742c:	ldr	x0, [x8, #128]
  437430:	ldrsw	x1, [sp, #32]
  437434:	bl	4375fc <_obstack_memory_used@@Base+0xfcdc>
  437438:	tbnz	w0, #0, 437440 <_obstack_memory_used@@Base+0xfb20>
  43743c:	b	43744c <_obstack_memory_used@@Base+0xfb2c>
  437440:	mov	w8, #0x1                   	// #1
  437444:	stur	w8, [x29, #-4]
  437448:	b	43748c <_obstack_memory_used@@Base+0xfb6c>
  43744c:	ldr	w8, [sp, #32]
  437450:	mov	w9, #0x0                   	// #0
  437454:	cmp	w8, #0xa
  437458:	str	w9, [sp, #8]
  43745c:	b.ne	437474 <_obstack_memory_used@@Base+0xfb54>  // b.any
  437460:	ldur	x8, [x29, #-16]
  437464:	ldrb	w9, [x8, #141]
  437468:	cmp	w9, #0x0
  43746c:	cset	w9, ne  // ne = any
  437470:	str	w9, [sp, #8]
  437474:	ldr	w8, [sp, #8]
  437478:	mov	w9, #0x2                   	// #2
  43747c:	mov	w10, wzr
  437480:	tst	w8, #0x1
  437484:	csel	w8, w9, w10, ne  // ne = any
  437488:	stur	w8, [x29, #-4]
  43748c:	ldur	w0, [x29, #-4]
  437490:	ldp	x29, x30, [sp, #64]
  437494:	add	sp, sp, #0x50
  437498:	ret
  43749c:	sub	sp, sp, #0x60
  4374a0:	stp	x29, x30, [sp, #80]
  4374a4:	add	x29, sp, #0x50
  4374a8:	mov	w8, #0xffffffff            	// #-1
  4374ac:	stur	x0, [x29, #-8]
  4374b0:	stur	x1, [x29, #-16]
  4374b4:	stur	x2, [x29, #-24]
  4374b8:	str	w8, [sp, #28]
  4374bc:	ldur	x9, [x29, #-8]
  4374c0:	ldr	x9, [x9, #40]
  4374c4:	ldur	x10, [x29, #-8]
  4374c8:	ldr	x10, [x10, #56]
  4374cc:	add	x9, x9, x10
  4374d0:	str	x9, [sp, #40]
  4374d4:	ldr	x8, [sp, #40]
  4374d8:	ldur	x9, [x29, #-16]
  4374dc:	cmp	x8, x9
  4374e0:	b.ge	4375e0 <_obstack_memory_used@@Base+0xfcc0>  // b.tcont
  4374e4:	ldur	x8, [x29, #-8]
  4374e8:	ldr	x8, [x8, #80]
  4374ec:	ldr	x9, [sp, #40]
  4374f0:	subs	x8, x8, x9
  4374f4:	str	x8, [sp, #16]
  4374f8:	ldur	x8, [x29, #-8]
  4374fc:	ldr	x8, [x8, #32]
  437500:	stur	x8, [x29, #-32]
  437504:	ldur	x8, [x29, #-8]
  437508:	ldr	x8, [x8]
  43750c:	ldr	x9, [sp, #40]
  437510:	add	x1, x8, x9
  437514:	ldr	x2, [sp, #16]
  437518:	ldur	x8, [x29, #-8]
  43751c:	add	x3, x8, #0x20
  437520:	add	x0, sp, #0x18
  437524:	bl	4271dc <wcrtomb@plt+0x248cc>
  437528:	str	x0, [sp, #32]
  43752c:	ldr	x8, [sp, #32]
  437530:	mov	x9, #0xfffffffffffffffe    	// #-2
  437534:	mov	w10, #0x1                   	// #1
  437538:	cmp	x8, x9
  43753c:	str	w10, [sp, #12]
  437540:	b.eq	43756c <_obstack_memory_used@@Base+0xfc4c>  // b.none
  437544:	ldr	x8, [sp, #32]
  437548:	mov	x9, #0xffffffffffffffff    	// #-1
  43754c:	mov	w10, #0x1                   	// #1
  437550:	cmp	x8, x9
  437554:	str	w10, [sp, #12]
  437558:	b.eq	43756c <_obstack_memory_used@@Base+0xfc4c>  // b.none
  43755c:	ldr	x8, [sp, #32]
  437560:	cmp	x8, #0x0
  437564:	cset	w9, eq  // eq = none
  437568:	str	w9, [sp, #12]
  43756c:	ldr	w8, [sp, #12]
  437570:	and	w8, w8, #0x1
  437574:	mov	w0, w8
  437578:	sxtw	x9, w0
  43757c:	cbz	x9, 4375c4 <_obstack_memory_used@@Base+0xfca4>
  437580:	ldr	x8, [sp, #32]
  437584:	cbz	x8, 437590 <_obstack_memory_used@@Base+0xfc70>
  437588:	ldr	x8, [sp, #16]
  43758c:	cbnz	x8, 437598 <_obstack_memory_used@@Base+0xfc78>
  437590:	str	wzr, [sp, #28]
  437594:	b	4375ac <_obstack_memory_used@@Base+0xfc8c>
  437598:	ldur	x8, [x29, #-8]
  43759c:	ldr	x8, [x8]
  4375a0:	ldr	x9, [sp, #40]
  4375a4:	ldrb	w10, [x8, x9]
  4375a8:	str	w10, [sp, #28]
  4375ac:	mov	x8, #0x1                   	// #1
  4375b0:	str	x8, [sp, #32]
  4375b4:	ldur	x8, [x29, #-8]
  4375b8:	ldur	x9, [x29, #-32]
  4375bc:	str	x9, [x8, #32]
  4375c0:	b	4375cc <_obstack_memory_used@@Base+0xfcac>
  4375c4:	ldr	w8, [sp, #24]
  4375c8:	str	w8, [sp, #28]
  4375cc:	ldr	x8, [sp, #32]
  4375d0:	ldr	x9, [sp, #40]
  4375d4:	add	x8, x9, x8
  4375d8:	str	x8, [sp, #40]
  4375dc:	b	4374d4 <_obstack_memory_used@@Base+0xfbb4>
  4375e0:	ldr	w8, [sp, #28]
  4375e4:	ldur	x9, [x29, #-24]
  4375e8:	str	w8, [x9]
  4375ec:	ldr	x0, [sp, #40]
  4375f0:	ldp	x29, x30, [sp, #80]
  4375f4:	add	sp, sp, #0x60
  4375f8:	ret
  4375fc:	sub	sp, sp, #0x10
  437600:	mov	x8, #0x40                  	// #64
  437604:	str	x0, [sp, #8]
  437608:	str	x1, [sp]
  43760c:	ldr	x9, [sp, #8]
  437610:	ldr	x10, [sp]
  437614:	sdiv	x10, x10, x8
  437618:	ldr	x9, [x9, x10, lsl #3]
  43761c:	ldr	x10, [sp]
  437620:	sdiv	x11, x10, x8
  437624:	mul	x8, x11, x8
  437628:	subs	x8, x10, x8
  43762c:	lsr	x8, x9, x8
  437630:	tst	x8, #0x1
  437634:	cset	w12, ne  // ne = any
  437638:	and	w0, w12, #0x1
  43763c:	add	sp, sp, #0x10
  437640:	ret
  437644:	sub	sp, sp, #0x50
  437648:	stp	x29, x30, [sp, #64]
  43764c:	add	x29, sp, #0x40
  437650:	stur	x0, [x29, #-16]
  437654:	stur	x1, [x29, #-24]
  437658:	str	x2, [sp, #32]
  43765c:	ldur	x8, [x29, #-16]
  437660:	ldr	x8, [x8, #152]
  437664:	str	x8, [sp, #24]
  437668:	str	xzr, [sp, #16]
  43766c:	ldr	x8, [sp, #16]
  437670:	ldur	x9, [x29, #-24]
  437674:	ldr	x9, [x9, #8]
  437678:	cmp	x8, x9
  43767c:	b.ge	437758 <_obstack_memory_used@@Base+0xfe38>  // b.tcont
  437680:	ldur	x8, [x29, #-24]
  437684:	mov	x9, #0x10                  	// #16
  437688:	ldr	x8, [x8, #16]
  43768c:	ldr	x10, [sp, #16]
  437690:	ldr	x8, [x8, x10, lsl #3]
  437694:	str	x8, [sp]
  437698:	ldr	x8, [sp, #24]
  43769c:	ldr	x8, [x8]
  4376a0:	ldr	x10, [sp]
  4376a4:	mul	x9, x9, x10
  4376a8:	add	x8, x8, x9
  4376ac:	ldr	w11, [x8, #8]
  4376b0:	and	w11, w11, #0xff
  4376b4:	cmp	w11, #0x8
  4376b8:	b.ne	437748 <_obstack_memory_used@@Base+0xfe28>  // b.any
  4376bc:	ldr	x8, [sp, #24]
  4376c0:	ldr	x8, [x8]
  4376c4:	ldr	x9, [sp]
  4376c8:	mov	x10, #0x10                  	// #16
  4376cc:	mul	x9, x10, x9
  4376d0:	ldr	x8, [x8, x9]
  4376d4:	cmp	x8, #0x40
  4376d8:	b.ge	437748 <_obstack_memory_used@@Base+0xfe28>  // b.tcont
  4376dc:	ldr	x8, [sp, #24]
  4376e0:	ldr	x8, [x8, #160]
  4376e4:	ldr	x9, [sp, #24]
  4376e8:	ldr	x9, [x9]
  4376ec:	ldr	x10, [sp]
  4376f0:	mov	x11, #0x10                  	// #16
  4376f4:	mul	x10, x11, x10
  4376f8:	ldr	x9, [x9, x10]
  4376fc:	mov	x10, #0x1                   	// #1
  437700:	lsl	x9, x10, x9
  437704:	and	x8, x8, x9
  437708:	cbz	x8, 437748 <_obstack_memory_used@@Base+0xfe28>
  43770c:	ldur	x0, [x29, #-16]
  437710:	ldr	x1, [sp]
  437714:	ldr	x2, [sp, #32]
  437718:	bl	4384a4 <_obstack_memory_used@@Base+0x10b84>
  43771c:	str	w0, [sp, #12]
  437720:	ldr	w8, [sp, #12]
  437724:	cmp	w8, #0x0
  437728:	cset	w8, ne  // ne = any
  43772c:	and	w8, w8, #0x1
  437730:	mov	w1, w8
  437734:	sxtw	x9, w1
  437738:	cbz	x9, 437748 <_obstack_memory_used@@Base+0xfe28>
  43773c:	ldr	w8, [sp, #12]
  437740:	stur	w8, [x29, #-4]
  437744:	b	43775c <_obstack_memory_used@@Base+0xfe3c>
  437748:	ldr	x8, [sp, #16]
  43774c:	add	x8, x8, #0x1
  437750:	str	x8, [sp, #16]
  437754:	b	43766c <_obstack_memory_used@@Base+0xfd4c>
  437758:	stur	wzr, [x29, #-4]
  43775c:	ldur	w0, [x29, #-4]
  437760:	ldp	x29, x30, [sp, #64]
  437764:	add	sp, sp, #0x50
  437768:	ret
  43776c:	sub	sp, sp, #0xe0
  437770:	stp	x29, x30, [sp, #208]
  437774:	add	x29, sp, #0xd0
  437778:	stur	x0, [x29, #-8]
  43777c:	stur	x1, [x29, #-16]
  437780:	ldur	x8, [x29, #-8]
  437784:	ldr	x8, [x8, #152]
  437788:	stur	x8, [x29, #-24]
  43778c:	ldur	x8, [x29, #-8]
  437790:	ldr	x8, [x8, #72]
  437794:	stur	x8, [x29, #-48]
  437798:	stur	xzr, [x29, #-40]
  43779c:	ldur	x8, [x29, #-40]
  4377a0:	ldur	x9, [x29, #-16]
  4377a4:	ldr	x9, [x9, #8]
  4377a8:	cmp	x8, x9
  4377ac:	b.ge	437cdc <_obstack_memory_used@@Base+0x103bc>  // b.tcont
  4377b0:	ldur	x8, [x29, #-16]
  4377b4:	mov	x9, #0x10                  	// #16
  4377b8:	ldr	x8, [x8, #16]
  4377bc:	ldur	x10, [x29, #-40]
  4377c0:	ldr	x8, [x8, x10, lsl #3]
  4377c4:	stur	x8, [x29, #-80]
  4377c8:	ldur	x8, [x29, #-24]
  4377cc:	ldr	x8, [x8]
  4377d0:	ldur	x10, [x29, #-80]
  4377d4:	mul	x9, x9, x10
  4377d8:	add	x8, x8, x9
  4377dc:	stur	x8, [x29, #-96]
  4377e0:	ldur	x8, [x29, #-96]
  4377e4:	ldr	w11, [x8, #8]
  4377e8:	and	w11, w11, #0xff
  4377ec:	cmp	w11, #0x4
  4377f0:	b.eq	4377f8 <_obstack_memory_used@@Base+0xfed8>  // b.none
  4377f4:	b	437ccc <_obstack_memory_used@@Base+0x103ac>
  4377f8:	ldur	x8, [x29, #-96]
  4377fc:	mov	x9, #0x8                   	// #8
  437800:	ldr	w10, [x8, #8]
  437804:	lsr	w9, w10, w9
  437808:	and	w9, w9, #0x3ff
  43780c:	cbz	w9, 4378cc <_obstack_memory_used@@Base+0xffac>
  437810:	ldur	x0, [x29, #-8]
  437814:	ldur	x1, [x29, #-48]
  437818:	ldur	x8, [x29, #-8]
  43781c:	ldr	w2, [x8, #160]
  437820:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  437824:	stur	w0, [x29, #-84]
  437828:	ldur	x8, [x29, #-96]
  43782c:	mov	x9, #0x8                   	// #8
  437830:	ldr	w10, [x8, #8]
  437834:	lsr	w9, w10, w9
  437838:	and	w9, w9, #0x3ff
  43783c:	and	w9, w9, #0x4
  437840:	cbz	w9, 437850 <_obstack_memory_used@@Base+0xff30>
  437844:	ldur	w8, [x29, #-84]
  437848:	and	w8, w8, #0x1
  43784c:	cbz	w8, 4378c8 <_obstack_memory_used@@Base+0xffa8>
  437850:	ldur	x8, [x29, #-96]
  437854:	mov	x9, #0x8                   	// #8
  437858:	ldr	w10, [x8, #8]
  43785c:	lsr	w9, w10, w9
  437860:	and	w9, w9, #0x3ff
  437864:	and	w9, w9, #0x8
  437868:	cbz	w9, 437878 <_obstack_memory_used@@Base+0xff58>
  43786c:	ldur	w8, [x29, #-84]
  437870:	and	w8, w8, #0x1
  437874:	cbnz	w8, 4378c8 <_obstack_memory_used@@Base+0xffa8>
  437878:	ldur	x8, [x29, #-96]
  43787c:	mov	x9, #0x8                   	// #8
  437880:	ldr	w10, [x8, #8]
  437884:	lsr	w9, w10, w9
  437888:	and	w9, w9, #0x3ff
  43788c:	and	w9, w9, #0x20
  437890:	cbz	w9, 4378a0 <_obstack_memory_used@@Base+0xff80>
  437894:	ldur	w8, [x29, #-84]
  437898:	and	w8, w8, #0x2
  43789c:	cbz	w8, 4378c8 <_obstack_memory_used@@Base+0xffa8>
  4378a0:	ldur	x8, [x29, #-96]
  4378a4:	mov	x9, #0x8                   	// #8
  4378a8:	ldr	w10, [x8, #8]
  4378ac:	lsr	w9, w10, w9
  4378b0:	and	w9, w9, #0x3ff
  4378b4:	and	w9, w9, #0x80
  4378b8:	cbz	w9, 4378cc <_obstack_memory_used@@Base+0xffac>
  4378bc:	ldur	w8, [x29, #-84]
  4378c0:	and	w8, w8, #0x8
  4378c4:	cbnz	w8, 4378cc <_obstack_memory_used@@Base+0xffac>
  4378c8:	b	437ccc <_obstack_memory_used@@Base+0x103ac>
  4378cc:	ldur	x8, [x29, #-8]
  4378d0:	ldr	x8, [x8, #200]
  4378d4:	stur	x8, [x29, #-72]
  4378d8:	ldur	x0, [x29, #-8]
  4378dc:	ldur	x1, [x29, #-80]
  4378e0:	ldur	x2, [x29, #-48]
  4378e4:	bl	438650 <_obstack_memory_used@@Base+0x10d30>
  4378e8:	stur	w0, [x29, #-28]
  4378ec:	ldur	w9, [x29, #-28]
  4378f0:	cmp	w9, #0x0
  4378f4:	cset	w9, ne  // ne = any
  4378f8:	and	w9, w9, #0x1
  4378fc:	mov	w1, w9
  437900:	sxtw	x8, w1
  437904:	cbz	x8, 43790c <_obstack_memory_used@@Base+0xffec>
  437908:	b	437ce0 <_obstack_memory_used@@Base+0x103c0>
  43790c:	ldur	x8, [x29, #-24]
  437910:	ldr	x8, [x8, #24]
  437914:	ldur	x9, [x29, #-80]
  437918:	ldr	x8, [x8, x9, lsl #3]
  43791c:	mov	x9, #0xffffffffffffffff    	// #-1
  437920:	cmp	x8, x9
  437924:	b.eq	43792c <_obstack_memory_used@@Base+0x1000c>  // b.none
  437928:	b	43792c <_obstack_memory_used@@Base+0x1000c>
  43792c:	ldur	x8, [x29, #-72]
  437930:	ldur	x9, [x29, #-8]
  437934:	ldr	x9, [x9, #200]
  437938:	cmp	x8, x9
  43793c:	b.ge	437ccc <_obstack_memory_used@@Base+0x103ac>  // b.tcont
  437940:	ldur	x8, [x29, #-8]
  437944:	ldr	x8, [x8, #216]
  437948:	ldur	x9, [x29, #-72]
  43794c:	mov	x10, #0x28                  	// #40
  437950:	mul	x9, x10, x9
  437954:	add	x8, x8, x9
  437958:	str	x8, [sp, #80]
  43795c:	ldr	x8, [sp, #80]
  437960:	ldr	x8, [x8]
  437964:	ldur	x9, [x29, #-80]
  437968:	cmp	x8, x9
  43796c:	b.ne	437984 <_obstack_memory_used@@Base+0x10064>  // b.any
  437970:	ldr	x8, [sp, #80]
  437974:	ldr	x8, [x8, #8]
  437978:	ldur	x9, [x29, #-48]
  43797c:	cmp	x8, x9
  437980:	b.eq	437988 <_obstack_memory_used@@Base+0x10068>  // b.none
  437984:	b	437cbc <_obstack_memory_used@@Base+0x1039c>
  437988:	ldr	x8, [sp, #80]
  43798c:	ldr	x8, [x8, #24]
  437990:	ldr	x9, [sp, #80]
  437994:	ldr	x9, [x9, #16]
  437998:	subs	x8, x8, x9
  43799c:	str	x8, [sp, #96]
  4379a0:	ldr	x8, [sp, #96]
  4379a4:	cbnz	x8, 4379e0 <_obstack_memory_used@@Base+0x100c0>
  4379a8:	ldur	x8, [x29, #-24]
  4379ac:	ldr	x8, [x8, #48]
  4379b0:	ldur	x9, [x29, #-24]
  4379b4:	ldr	x9, [x9, #40]
  4379b8:	ldur	x10, [x29, #-80]
  4379bc:	mov	x11, #0x18                  	// #24
  4379c0:	mul	x10, x11, x10
  4379c4:	add	x9, x9, x10
  4379c8:	ldr	x9, [x9, #16]
  4379cc:	ldr	x9, [x9]
  4379d0:	mul	x9, x11, x9
  4379d4:	add	x8, x8, x9
  4379d8:	str	x8, [sp, #48]
  4379dc:	b	437a08 <_obstack_memory_used@@Base+0x100e8>
  4379e0:	ldur	x8, [x29, #-24]
  4379e4:	ldr	x8, [x8, #48]
  4379e8:	ldur	x9, [x29, #-24]
  4379ec:	mov	x10, #0x18                  	// #24
  4379f0:	ldr	x9, [x9, #24]
  4379f4:	ldur	x11, [x29, #-80]
  4379f8:	ldr	x9, [x9, x11, lsl #3]
  4379fc:	mul	x9, x10, x9
  437a00:	add	x8, x8, x9
  437a04:	str	x8, [sp, #48]
  437a08:	ldr	x8, [sp, #48]
  437a0c:	str	x8, [sp, #104]
  437a10:	ldur	x8, [x29, #-48]
  437a14:	ldr	x9, [sp, #80]
  437a18:	ldr	x9, [x9, #24]
  437a1c:	add	x8, x8, x9
  437a20:	ldr	x9, [sp, #80]
  437a24:	ldr	x9, [x9, #16]
  437a28:	subs	x8, x8, x9
  437a2c:	stur	x8, [x29, #-56]
  437a30:	ldur	x0, [x29, #-8]
  437a34:	ldur	x8, [x29, #-56]
  437a38:	subs	x1, x8, #0x1
  437a3c:	ldur	x8, [x29, #-8]
  437a40:	ldr	w2, [x8, #160]
  437a44:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  437a48:	stur	w0, [x29, #-84]
  437a4c:	ldur	x8, [x29, #-8]
  437a50:	ldr	x8, [x8, #184]
  437a54:	ldur	x9, [x29, #-56]
  437a58:	mov	x10, #0x8                   	// #8
  437a5c:	mul	x9, x10, x9
  437a60:	add	x8, x8, x9
  437a64:	ldr	x8, [x8]
  437a68:	str	x8, [sp, #88]
  437a6c:	ldur	x8, [x29, #-8]
  437a70:	ldr	x8, [x8, #184]
  437a74:	ldur	x9, [x29, #-48]
  437a78:	mul	x9, x10, x9
  437a7c:	add	x8, x8, x9
  437a80:	ldr	x8, [x8]
  437a84:	cbnz	x8, 437a94 <_obstack_memory_used@@Base+0x10174>
  437a88:	mov	x8, xzr
  437a8c:	str	x8, [sp, #40]
  437a90:	b	437ab8 <_obstack_memory_used@@Base+0x10198>
  437a94:	ldur	x8, [x29, #-8]
  437a98:	ldr	x8, [x8, #184]
  437a9c:	ldur	x9, [x29, #-48]
  437aa0:	mov	x10, #0x8                   	// #8
  437aa4:	mul	x9, x10, x9
  437aa8:	add	x8, x8, x9
  437aac:	ldr	x8, [x8]
  437ab0:	ldr	x8, [x8, #16]
  437ab4:	str	x8, [sp, #40]
  437ab8:	ldr	x8, [sp, #40]
  437abc:	stur	x8, [x29, #-64]
  437ac0:	ldr	x8, [sp, #88]
  437ac4:	cbnz	x8, 437b48 <_obstack_memory_used@@Base+0x10228>
  437ac8:	ldur	x1, [x29, #-24]
  437acc:	ldr	x2, [sp, #104]
  437ad0:	ldur	w3, [x29, #-84]
  437ad4:	sub	x0, x29, #0x1c
  437ad8:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  437adc:	ldur	x8, [x29, #-8]
  437ae0:	ldr	x8, [x8, #184]
  437ae4:	ldur	x9, [x29, #-56]
  437ae8:	mov	x10, #0x8                   	// #8
  437aec:	mul	x9, x10, x9
  437af0:	add	x8, x8, x9
  437af4:	str	x0, [x8]
  437af8:	ldur	x8, [x29, #-8]
  437afc:	ldr	x8, [x8, #184]
  437b00:	ldur	x9, [x29, #-56]
  437b04:	mul	x9, x10, x9
  437b08:	add	x8, x8, x9
  437b0c:	ldr	x8, [x8]
  437b10:	mov	w11, #0x0                   	// #0
  437b14:	str	w11, [sp, #36]
  437b18:	cbnz	x8, 437b2c <_obstack_memory_used@@Base+0x1020c>
  437b1c:	ldur	w8, [x29, #-28]
  437b20:	cmp	w8, #0x0
  437b24:	cset	w8, ne  // ne = any
  437b28:	str	w8, [sp, #36]
  437b2c:	ldr	w8, [sp, #36]
  437b30:	and	w8, w8, #0x1
  437b34:	mov	w0, w8
  437b38:	sxtw	x9, w0
  437b3c:	cbz	x9, 437b44 <_obstack_memory_used@@Base+0x10224>
  437b40:	b	437ce0 <_obstack_memory_used@@Base+0x103c0>
  437b44:	b	437c24 <_obstack_memory_used@@Base+0x10304>
  437b48:	ldr	x8, [sp, #88]
  437b4c:	ldr	x1, [x8, #80]
  437b50:	ldr	x2, [sp, #104]
  437b54:	add	x0, sp, #0x38
  437b58:	bl	438c48 <_obstack_memory_used@@Base+0x11328>
  437b5c:	stur	w0, [x29, #-28]
  437b60:	ldur	w9, [x29, #-28]
  437b64:	cmp	w9, #0x0
  437b68:	cset	w9, ne  // ne = any
  437b6c:	and	w9, w9, #0x1
  437b70:	mov	w1, w9
  437b74:	sxtw	x8, w1
  437b78:	cbz	x8, 437b8c <_obstack_memory_used@@Base+0x1026c>
  437b7c:	add	x8, sp, #0x38
  437b80:	ldr	x0, [x8, #16]
  437b84:	bl	4026c0 <free@plt>
  437b88:	b	437ce0 <_obstack_memory_used@@Base+0x103c0>
  437b8c:	ldur	x1, [x29, #-24]
  437b90:	ldur	w3, [x29, #-84]
  437b94:	sub	x0, x29, #0x1c
  437b98:	add	x8, sp, #0x38
  437b9c:	mov	x2, x8
  437ba0:	str	x8, [sp, #24]
  437ba4:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  437ba8:	ldur	x8, [x29, #-8]
  437bac:	ldr	x8, [x8, #184]
  437bb0:	ldur	x9, [x29, #-56]
  437bb4:	mov	x10, #0x8                   	// #8
  437bb8:	mul	x9, x10, x9
  437bbc:	add	x8, x8, x9
  437bc0:	str	x0, [x8]
  437bc4:	ldr	x8, [sp, #24]
  437bc8:	ldr	x0, [x8, #16]
  437bcc:	str	x10, [sp, #16]
  437bd0:	bl	4026c0 <free@plt>
  437bd4:	ldur	x8, [x29, #-8]
  437bd8:	ldr	x8, [x8, #184]
  437bdc:	ldur	x9, [x29, #-56]
  437be0:	ldr	x10, [sp, #16]
  437be4:	mul	x9, x10, x9
  437be8:	add	x8, x8, x9
  437bec:	ldr	x8, [x8]
  437bf0:	mov	w11, #0x0                   	// #0
  437bf4:	str	w11, [sp, #12]
  437bf8:	cbnz	x8, 437c0c <_obstack_memory_used@@Base+0x102ec>
  437bfc:	ldur	w8, [x29, #-28]
  437c00:	cmp	w8, #0x0
  437c04:	cset	w8, ne  // ne = any
  437c08:	str	w8, [sp, #12]
  437c0c:	ldr	w8, [sp, #12]
  437c10:	and	w8, w8, #0x1
  437c14:	mov	w0, w8
  437c18:	sxtw	x9, w0
  437c1c:	cbz	x9, 437c24 <_obstack_memory_used@@Base+0x10304>
  437c20:	b	437ce0 <_obstack_memory_used@@Base+0x103c0>
  437c24:	ldr	x8, [sp, #96]
  437c28:	cbnz	x8, 437cbc <_obstack_memory_used@@Base+0x1039c>
  437c2c:	ldur	x8, [x29, #-8]
  437c30:	ldr	x8, [x8, #184]
  437c34:	ldur	x9, [x29, #-48]
  437c38:	mov	x10, #0x8                   	// #8
  437c3c:	mul	x9, x10, x9
  437c40:	add	x8, x8, x9
  437c44:	ldr	x8, [x8]
  437c48:	ldr	x8, [x8, #16]
  437c4c:	ldur	x9, [x29, #-64]
  437c50:	cmp	x8, x9
  437c54:	b.le	437cbc <_obstack_memory_used@@Base+0x1039c>
  437c58:	ldur	x0, [x29, #-8]
  437c5c:	ldr	x1, [sp, #104]
  437c60:	ldur	x2, [x29, #-48]
  437c64:	bl	437644 <_obstack_memory_used@@Base+0xfd24>
  437c68:	stur	w0, [x29, #-28]
  437c6c:	ldur	w8, [x29, #-28]
  437c70:	cmp	w8, #0x0
  437c74:	cset	w8, ne  // ne = any
  437c78:	and	w8, w8, #0x1
  437c7c:	mov	w1, w8
  437c80:	sxtw	x9, w1
  437c84:	cbz	x9, 437c8c <_obstack_memory_used@@Base+0x1036c>
  437c88:	b	437ce0 <_obstack_memory_used@@Base+0x103c0>
  437c8c:	ldur	x0, [x29, #-8]
  437c90:	ldr	x1, [sp, #104]
  437c94:	bl	43776c <_obstack_memory_used@@Base+0xfe4c>
  437c98:	stur	w0, [x29, #-28]
  437c9c:	ldur	w8, [x29, #-28]
  437ca0:	cmp	w8, #0x0
  437ca4:	cset	w8, ne  // ne = any
  437ca8:	and	w8, w8, #0x1
  437cac:	mov	w1, w8
  437cb0:	sxtw	x9, w1
  437cb4:	cbz	x9, 437cbc <_obstack_memory_used@@Base+0x1039c>
  437cb8:	b	437ce0 <_obstack_memory_used@@Base+0x103c0>
  437cbc:	ldur	x8, [x29, #-72]
  437cc0:	add	x8, x8, #0x1
  437cc4:	stur	x8, [x29, #-72]
  437cc8:	b	43792c <_obstack_memory_used@@Base+0x1000c>
  437ccc:	ldur	x8, [x29, #-40]
  437cd0:	add	x8, x8, #0x1
  437cd4:	stur	x8, [x29, #-40]
  437cd8:	b	43779c <_obstack_memory_used@@Base+0xfe7c>
  437cdc:	stur	wzr, [x29, #-28]
  437ce0:	ldur	w0, [x29, #-28]
  437ce4:	ldp	x29, x30, [sp, #208]
  437ce8:	add	sp, sp, #0xe0
  437cec:	ret
  437cf0:	sub	sp, sp, #0x60
  437cf4:	stp	x29, x30, [sp, #80]
  437cf8:	add	x29, sp, #0x50
  437cfc:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  437d00:	stur	x0, [x29, #-16]
  437d04:	stur	w1, [x29, #-20]
  437d08:	ldur	x9, [x29, #-16]
  437d0c:	stur	x9, [x29, #-32]
  437d10:	ldur	x9, [x29, #-32]
  437d14:	ldr	x9, [x9, #64]
  437d18:	cmp	x8, x9
  437d1c:	cset	w10, ls  // ls = plast
  437d20:	and	w10, w10, #0x1
  437d24:	mov	w0, w10
  437d28:	sxtw	x8, w0
  437d2c:	cbz	x8, 437d3c <_obstack_memory_used@@Base+0x1041c>
  437d30:	mov	w8, #0xc                   	// #12
  437d34:	stur	w8, [x29, #-4]
  437d38:	b	437f2c <_obstack_memory_used@@Base+0x1060c>
  437d3c:	ldur	x0, [x29, #-32]
  437d40:	ldursw	x8, [x29, #-20]
  437d44:	ldur	x9, [x29, #-32]
  437d48:	ldr	x9, [x9, #88]
  437d4c:	ldur	x10, [x29, #-32]
  437d50:	ldr	x10, [x10, #64]
  437d54:	mov	x11, #0x2                   	// #2
  437d58:	mul	x10, x10, x11
  437d5c:	cmp	x9, x10
  437d60:	str	x0, [sp, #32]
  437d64:	str	x8, [sp, #24]
  437d68:	b.ge	437d7c <_obstack_memory_used@@Base+0x1045c>  // b.tcont
  437d6c:	ldur	x8, [x29, #-32]
  437d70:	ldr	x8, [x8, #88]
  437d74:	str	x8, [sp, #16]
  437d78:	b	437d90 <_obstack_memory_used@@Base+0x10470>
  437d7c:	ldur	x8, [x29, #-32]
  437d80:	ldr	x8, [x8, #64]
  437d84:	mov	x9, #0x2                   	// #2
  437d88:	mul	x8, x8, x9
  437d8c:	str	x8, [sp, #16]
  437d90:	ldr	x8, [sp, #16]
  437d94:	ldr	x9, [sp, #24]
  437d98:	cmp	x9, x8
  437d9c:	b.ge	437df0 <_obstack_memory_used@@Base+0x104d0>  // b.tcont
  437da0:	ldur	x8, [x29, #-32]
  437da4:	ldr	x8, [x8, #88]
  437da8:	ldur	x9, [x29, #-32]
  437dac:	ldr	x9, [x9, #64]
  437db0:	mov	x10, #0x2                   	// #2
  437db4:	mul	x9, x9, x10
  437db8:	cmp	x8, x9
  437dbc:	b.ge	437dd0 <_obstack_memory_used@@Base+0x104b0>  // b.tcont
  437dc0:	ldur	x8, [x29, #-32]
  437dc4:	ldr	x8, [x8, #88]
  437dc8:	str	x8, [sp, #8]
  437dcc:	b	437de4 <_obstack_memory_used@@Base+0x104c4>
  437dd0:	ldur	x8, [x29, #-32]
  437dd4:	ldr	x8, [x8, #64]
  437dd8:	mov	x9, #0x2                   	// #2
  437ddc:	mul	x8, x8, x9
  437de0:	str	x8, [sp, #8]
  437de4:	ldr	x8, [sp, #8]
  437de8:	str	x8, [sp]
  437dec:	b	437df8 <_obstack_memory_used@@Base+0x104d8>
  437df0:	ldursw	x8, [x29, #-20]
  437df4:	str	x8, [sp]
  437df8:	ldr	x8, [sp]
  437dfc:	ldr	x0, [sp, #32]
  437e00:	mov	x1, x8
  437e04:	bl	42bc10 <_obstack_memory_used@@Base+0x42f0>
  437e08:	stur	w0, [x29, #-24]
  437e0c:	ldur	w9, [x29, #-24]
  437e10:	cmp	w9, #0x0
  437e14:	cset	w9, ne  // ne = any
  437e18:	and	w9, w9, #0x1
  437e1c:	mov	w1, w9
  437e20:	sxtw	x8, w1
  437e24:	cbz	x8, 437e34 <_obstack_memory_used@@Base+0x10514>
  437e28:	ldur	w8, [x29, #-24]
  437e2c:	stur	w8, [x29, #-4]
  437e30:	b	437f2c <_obstack_memory_used@@Base+0x1060c>
  437e34:	ldur	x8, [x29, #-16]
  437e38:	ldr	x8, [x8, #184]
  437e3c:	cbz	x8, 437e98 <_obstack_memory_used@@Base+0x10578>
  437e40:	ldur	x8, [x29, #-16]
  437e44:	ldr	x0, [x8, #184]
  437e48:	ldur	x8, [x29, #-32]
  437e4c:	ldr	x8, [x8, #64]
  437e50:	add	x8, x8, #0x1
  437e54:	mov	x9, #0x8                   	// #8
  437e58:	mul	x1, x8, x9
  437e5c:	bl	402570 <realloc@plt>
  437e60:	str	x0, [sp, #40]
  437e64:	ldr	x8, [sp, #40]
  437e68:	cmp	x8, #0x0
  437e6c:	cset	w10, eq  // eq = none
  437e70:	and	w10, w10, #0x1
  437e74:	mov	w0, w10
  437e78:	sxtw	x8, w0
  437e7c:	cbz	x8, 437e8c <_obstack_memory_used@@Base+0x1056c>
  437e80:	mov	w8, #0xc                   	// #12
  437e84:	stur	w8, [x29, #-4]
  437e88:	b	437f2c <_obstack_memory_used@@Base+0x1060c>
  437e8c:	ldr	x8, [sp, #40]
  437e90:	ldur	x9, [x29, #-16]
  437e94:	str	x8, [x9, #184]
  437e98:	ldur	x8, [x29, #-32]
  437e9c:	ldrb	w9, [x8, #136]
  437ea0:	cbz	w9, 437ef8 <_obstack_memory_used@@Base+0x105d8>
  437ea4:	ldur	x8, [x29, #-32]
  437ea8:	ldr	w9, [x8, #144]
  437eac:	cmp	w9, #0x1
  437eb0:	b.le	437eec <_obstack_memory_used@@Base+0x105cc>
  437eb4:	ldur	x0, [x29, #-32]
  437eb8:	bl	42bd90 <_obstack_memory_used@@Base+0x4470>
  437ebc:	stur	w0, [x29, #-24]
  437ec0:	ldur	w8, [x29, #-24]
  437ec4:	cmp	w8, #0x0
  437ec8:	cset	w8, ne  // ne = any
  437ecc:	and	w8, w8, #0x1
  437ed0:	mov	w1, w8
  437ed4:	sxtw	x9, w1
  437ed8:	cbz	x9, 437ee8 <_obstack_memory_used@@Base+0x105c8>
  437edc:	ldur	w8, [x29, #-24]
  437ee0:	stur	w8, [x29, #-4]
  437ee4:	b	437f2c <_obstack_memory_used@@Base+0x1060c>
  437ee8:	b	437ef4 <_obstack_memory_used@@Base+0x105d4>
  437eec:	ldur	x0, [x29, #-32]
  437ef0:	bl	42c97c <_obstack_memory_used@@Base+0x505c>
  437ef4:	b	437f28 <_obstack_memory_used@@Base+0x10608>
  437ef8:	ldur	x8, [x29, #-32]
  437efc:	ldr	w9, [x8, #144]
  437f00:	cmp	w9, #0x1
  437f04:	b.le	437f14 <_obstack_memory_used@@Base+0x105f4>
  437f08:	ldur	x0, [x29, #-32]
  437f0c:	bl	42ca88 <_obstack_memory_used@@Base+0x5168>
  437f10:	b	437f28 <_obstack_memory_used@@Base+0x10608>
  437f14:	ldur	x8, [x29, #-32]
  437f18:	ldr	x8, [x8, #120]
  437f1c:	cbz	x8, 437f28 <_obstack_memory_used@@Base+0x10608>
  437f20:	ldur	x0, [x29, #-32]
  437f24:	bl	42cdcc <_obstack_memory_used@@Base+0x54ac>
  437f28:	stur	wzr, [x29, #-4]
  437f2c:	ldur	w0, [x29, #-4]
  437f30:	ldp	x29, x30, [sp, #80]
  437f34:	add	sp, sp, #0x60
  437f38:	ret
  437f3c:	sub	sp, sp, #0x40
  437f40:	stp	x29, x30, [sp, #48]
  437f44:	add	x29, sp, #0x30
  437f48:	mov	w8, #0x1                   	// #1
  437f4c:	stur	x0, [x29, #-16]
  437f50:	str	x1, [sp, #24]
  437f54:	str	x2, [sp, #16]
  437f58:	ldr	x9, [sp, #16]
  437f5c:	ldrb	w10, [x9, #104]
  437f60:	mov	w11, #0x5                   	// #5
  437f64:	lsr	w10, w10, w11
  437f68:	and	w8, w10, w8
  437f6c:	and	w8, w8, #0xff
  437f70:	mov	w9, w8
  437f74:	ubfx	x9, x9, #0, #32
  437f78:	cbz	x9, 437fbc <_obstack_memory_used@@Base+0x1069c>
  437f7c:	ldr	x0, [sp, #24]
  437f80:	ldr	x1, [sp, #16]
  437f84:	bl	43b548 <_obstack_memory_used@@Base+0x13c28>
  437f88:	ldur	x8, [x29, #-16]
  437f8c:	str	w0, [x8]
  437f90:	ldur	x8, [x29, #-16]
  437f94:	ldr	w9, [x8]
  437f98:	cmp	w9, #0x0
  437f9c:	cset	w9, ne  // ne = any
  437fa0:	and	w9, w9, #0x1
  437fa4:	mov	w1, w9
  437fa8:	sxtw	x8, w1
  437fac:	cbz	x8, 437fbc <_obstack_memory_used@@Base+0x1069c>
  437fb0:	mov	x8, xzr
  437fb4:	stur	x8, [x29, #-8]
  437fb8:	b	438100 <_obstack_memory_used@@Base+0x107e0>
  437fbc:	ldr	x8, [sp, #24]
  437fc0:	ldr	x8, [x8, #8]
  437fc4:	ldr	x9, [sp, #24]
  437fc8:	ldr	x10, [x9, #72]
  437fcc:	add	x11, x10, #0x1
  437fd0:	str	x11, [x9, #72]
  437fd4:	add	x8, x8, x10
  437fd8:	ldrb	w12, [x8]
  437fdc:	strb	w12, [sp, #7]
  437fe0:	ldr	x8, [sp, #16]
  437fe4:	ldr	x8, [x8, #88]
  437fe8:	str	x8, [sp, #8]
  437fec:	ldr	x8, [sp, #8]
  437ff0:	cmp	x8, #0x0
  437ff4:	cset	w9, ne  // ne = any
  437ff8:	and	w9, w9, #0x1
  437ffc:	mov	w0, w9
  438000:	sxtw	x8, w0
  438004:	cbz	x8, 43802c <_obstack_memory_used@@Base+0x1070c>
  438008:	ldr	x8, [sp, #8]
  43800c:	ldrb	w9, [sp, #7]
  438010:	mov	w10, w9
  438014:	mov	x11, #0x8                   	// #8
  438018:	mul	x10, x11, x10
  43801c:	add	x8, x8, x10
  438020:	ldr	x8, [x8]
  438024:	stur	x8, [x29, #-8]
  438028:	b	438100 <_obstack_memory_used@@Base+0x107e0>
  43802c:	ldr	x8, [sp, #16]
  438030:	ldr	x8, [x8, #96]
  438034:	str	x8, [sp, #8]
  438038:	ldr	x8, [sp, #8]
  43803c:	cmp	x8, #0x0
  438040:	cset	w9, ne  // ne = any
  438044:	and	w9, w9, #0x1
  438048:	mov	w0, w9
  43804c:	sxtw	x8, w0
  438050:	cbz	x8, 4380d0 <_obstack_memory_used@@Base+0x107b0>
  438054:	ldr	x0, [sp, #24]
  438058:	ldr	x8, [sp, #24]
  43805c:	ldr	x8, [x8, #72]
  438060:	subs	x1, x8, #0x1
  438064:	ldr	x8, [sp, #24]
  438068:	ldr	w2, [x8, #160]
  43806c:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  438070:	str	w0, [sp]
  438074:	ldr	w9, [sp]
  438078:	and	w9, w9, #0x1
  43807c:	cbz	w9, 4380ac <_obstack_memory_used@@Base+0x1078c>
  438080:	ldr	x8, [sp, #8]
  438084:	ldrb	w9, [sp, #7]
  438088:	add	w9, w9, #0x100
  43808c:	mov	w0, w9
  438090:	sxtw	x10, w0
  438094:	mov	x11, #0x8                   	// #8
  438098:	mul	x10, x11, x10
  43809c:	add	x8, x8, x10
  4380a0:	ldr	x8, [x8]
  4380a4:	stur	x8, [x29, #-8]
  4380a8:	b	438100 <_obstack_memory_used@@Base+0x107e0>
  4380ac:	ldr	x8, [sp, #8]
  4380b0:	ldrb	w9, [sp, #7]
  4380b4:	mov	w10, w9
  4380b8:	mov	x11, #0x8                   	// #8
  4380bc:	mul	x10, x11, x10
  4380c0:	add	x8, x8, x10
  4380c4:	ldr	x8, [x8]
  4380c8:	stur	x8, [x29, #-8]
  4380cc:	b	438100 <_obstack_memory_used@@Base+0x107e0>
  4380d0:	ldr	x8, [sp, #24]
  4380d4:	ldr	x0, [x8, #152]
  4380d8:	ldr	x1, [sp, #16]
  4380dc:	bl	43b94c <_obstack_memory_used@@Base+0x1402c>
  4380e0:	tbnz	w0, #0, 4380fc <_obstack_memory_used@@Base+0x107dc>
  4380e4:	ldur	x8, [x29, #-16]
  4380e8:	mov	w9, #0xc                   	// #12
  4380ec:	str	w9, [x8]
  4380f0:	mov	x8, xzr
  4380f4:	stur	x8, [x29, #-8]
  4380f8:	b	438100 <_obstack_memory_used@@Base+0x107e0>
  4380fc:	b	437fe0 <_obstack_memory_used@@Base+0x106c0>
  438100:	ldur	x0, [x29, #-8]
  438104:	ldp	x29, x30, [sp, #48]
  438108:	add	sp, sp, #0x40
  43810c:	ret
  438110:	sub	sp, sp, #0x80
  438114:	stp	x29, x30, [sp, #112]
  438118:	add	x29, sp, #0x70
  43811c:	stur	x0, [x29, #-16]
  438120:	stur	x1, [x29, #-24]
  438124:	stur	x2, [x29, #-32]
  438128:	ldur	x8, [x29, #-24]
  43812c:	ldr	x8, [x8, #152]
  438130:	stur	x8, [x29, #-40]
  438134:	ldur	x8, [x29, #-24]
  438138:	ldr	x8, [x8, #72]
  43813c:	stur	x8, [x29, #-48]
  438140:	ldur	x8, [x29, #-48]
  438144:	ldur	x9, [x29, #-24]
  438148:	ldr	x9, [x9, #192]
  43814c:	cmp	x8, x9
  438150:	b.le	438184 <_obstack_memory_used@@Base+0x10864>
  438154:	ldur	x8, [x29, #-32]
  438158:	ldur	x9, [x29, #-24]
  43815c:	ldr	x9, [x9, #184]
  438160:	ldur	x10, [x29, #-48]
  438164:	mov	x11, #0x8                   	// #8
  438168:	mul	x10, x11, x10
  43816c:	add	x9, x9, x10
  438170:	str	x8, [x9]
  438174:	ldur	x8, [x29, #-48]
  438178:	ldur	x9, [x29, #-24]
  43817c:	str	x8, [x9, #192]
  438180:	b	4382d4 <_obstack_memory_used@@Base+0x109b4>
  438184:	ldur	x8, [x29, #-24]
  438188:	ldr	x8, [x8, #184]
  43818c:	ldur	x9, [x29, #-48]
  438190:	mov	x10, #0x8                   	// #8
  438194:	mul	x9, x10, x9
  438198:	add	x8, x8, x9
  43819c:	ldr	x8, [x8]
  4381a0:	cbnz	x8, 4381c8 <_obstack_memory_used@@Base+0x108a8>
  4381a4:	ldur	x8, [x29, #-32]
  4381a8:	ldur	x9, [x29, #-24]
  4381ac:	ldr	x9, [x9, #184]
  4381b0:	ldur	x10, [x29, #-48]
  4381b4:	mov	x11, #0x8                   	// #8
  4381b8:	mul	x10, x11, x10
  4381bc:	add	x9, x9, x10
  4381c0:	str	x8, [x9]
  4381c4:	b	4382d4 <_obstack_memory_used@@Base+0x109b4>
  4381c8:	mov	x8, xzr
  4381cc:	str	x8, [sp]
  4381d0:	ldur	x8, [x29, #-24]
  4381d4:	ldr	x8, [x8, #184]
  4381d8:	ldur	x9, [x29, #-48]
  4381dc:	mov	x10, #0x8                   	// #8
  4381e0:	mul	x9, x10, x9
  4381e4:	add	x8, x8, x9
  4381e8:	ldr	x8, [x8]
  4381ec:	str	x8, [sp, #56]
  4381f0:	ldr	x8, [sp, #56]
  4381f4:	ldr	x8, [x8, #80]
  4381f8:	str	x8, [sp, #8]
  4381fc:	ldur	x8, [x29, #-32]
  438200:	cbz	x8, 438258 <_obstack_memory_used@@Base+0x10938>
  438204:	ldur	x8, [x29, #-32]
  438208:	ldr	x8, [x8, #80]
  43820c:	str	x8, [sp]
  438210:	ldr	x1, [sp]
  438214:	ldr	x2, [sp, #8]
  438218:	add	x0, sp, #0x10
  43821c:	bl	438c48 <_obstack_memory_used@@Base+0x11328>
  438220:	ldur	x8, [x29, #-16]
  438224:	str	w0, [x8]
  438228:	ldur	x8, [x29, #-16]
  43822c:	ldr	w9, [x8]
  438230:	cmp	w9, #0x0
  438234:	cset	w9, ne  // ne = any
  438238:	and	w9, w9, #0x1
  43823c:	mov	w1, w9
  438240:	sxtw	x8, w1
  438244:	cbz	x8, 438254 <_obstack_memory_used@@Base+0x10934>
  438248:	mov	x8, xzr
  43824c:	stur	x8, [x29, #-8]
  438250:	b	4383b8 <_obstack_memory_used@@Base+0x10a98>
  438254:	b	43826c <_obstack_memory_used@@Base+0x1094c>
  438258:	ldr	x8, [sp, #8]
  43825c:	ldr	q0, [x8]
  438260:	str	q0, [sp, #16]
  438264:	ldr	x8, [x8, #16]
  438268:	str	x8, [sp, #32]
  43826c:	ldur	x0, [x29, #-24]
  438270:	ldur	x8, [x29, #-24]
  438274:	ldr	x8, [x8, #72]
  438278:	subs	x1, x8, #0x1
  43827c:	ldur	x8, [x29, #-24]
  438280:	ldr	w2, [x8, #160]
  438284:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  438288:	str	w0, [sp, #52]
  43828c:	ldur	x0, [x29, #-16]
  438290:	ldur	x1, [x29, #-40]
  438294:	ldr	w3, [sp, #52]
  438298:	add	x2, sp, #0x10
  43829c:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  4382a0:	ldur	x8, [x29, #-24]
  4382a4:	ldr	x8, [x8, #184]
  4382a8:	ldur	x9, [x29, #-48]
  4382ac:	mov	x10, #0x8                   	// #8
  4382b0:	mul	x9, x10, x9
  4382b4:	add	x8, x8, x9
  4382b8:	str	x0, [x8]
  4382bc:	stur	x0, [x29, #-32]
  4382c0:	ldr	x8, [sp]
  4382c4:	cbz	x8, 4382d4 <_obstack_memory_used@@Base+0x109b4>
  4382c8:	add	x8, sp, #0x10
  4382cc:	ldr	x0, [x8, #16]
  4382d0:	bl	4026c0 <free@plt>
  4382d4:	ldur	x8, [x29, #-40]
  4382d8:	ldr	x8, [x8, #152]
  4382dc:	cbz	x8, 4383b0 <_obstack_memory_used@@Base+0x10a90>
  4382e0:	ldur	x8, [x29, #-32]
  4382e4:	cbz	x8, 4383b0 <_obstack_memory_used@@Base+0x10a90>
  4382e8:	ldur	x0, [x29, #-24]
  4382ec:	ldur	x8, [x29, #-32]
  4382f0:	add	x1, x8, #0x8
  4382f4:	ldur	x2, [x29, #-48]
  4382f8:	bl	437644 <_obstack_memory_used@@Base+0xfd24>
  4382fc:	ldur	x8, [x29, #-16]
  438300:	str	w0, [x8]
  438304:	ldur	x8, [x29, #-16]
  438308:	ldr	w9, [x8]
  43830c:	cmp	w9, #0x0
  438310:	cset	w9, ne  // ne = any
  438314:	and	w9, w9, #0x1
  438318:	mov	w1, w9
  43831c:	sxtw	x8, w1
  438320:	cbz	x8, 438330 <_obstack_memory_used@@Base+0x10a10>
  438324:	mov	x8, xzr
  438328:	stur	x8, [x29, #-8]
  43832c:	b	4383b8 <_obstack_memory_used@@Base+0x10a98>
  438330:	ldur	x8, [x29, #-32]
  438334:	ldrb	w9, [x8, #104]
  438338:	mov	w10, #0x6                   	// #6
  43833c:	lsr	w9, w9, w10
  438340:	and	w9, w9, #0x1
  438344:	and	w9, w9, #0xff
  438348:	cbz	w9, 4383b0 <_obstack_memory_used@@Base+0x10a90>
  43834c:	ldur	x0, [x29, #-24]
  438350:	ldur	x8, [x29, #-32]
  438354:	add	x1, x8, #0x8
  438358:	bl	43776c <_obstack_memory_used@@Base+0xfe4c>
  43835c:	ldur	x8, [x29, #-16]
  438360:	str	w0, [x8]
  438364:	ldur	x8, [x29, #-16]
  438368:	ldr	w9, [x8]
  43836c:	cmp	w9, #0x0
  438370:	cset	w9, ne  // ne = any
  438374:	and	w9, w9, #0x1
  438378:	mov	w1, w9
  43837c:	sxtw	x8, w1
  438380:	cbz	x8, 438390 <_obstack_memory_used@@Base+0x10a70>
  438384:	mov	x8, xzr
  438388:	stur	x8, [x29, #-8]
  43838c:	b	4383b8 <_obstack_memory_used@@Base+0x10a98>
  438390:	ldur	x8, [x29, #-24]
  438394:	ldr	x8, [x8, #184]
  438398:	ldur	x9, [x29, #-48]
  43839c:	mov	x10, #0x8                   	// #8
  4383a0:	mul	x9, x10, x9
  4383a4:	add	x8, x8, x9
  4383a8:	ldr	x8, [x8]
  4383ac:	stur	x8, [x29, #-32]
  4383b0:	ldur	x8, [x29, #-32]
  4383b4:	stur	x8, [x29, #-8]
  4383b8:	ldur	x0, [x29, #-8]
  4383bc:	ldp	x29, x30, [sp, #112]
  4383c0:	add	sp, sp, #0x80
  4383c4:	ret
  4383c8:	sub	sp, sp, #0x50
  4383cc:	stp	x29, x30, [sp, #64]
  4383d0:	add	x29, sp, #0x40
  4383d4:	stur	x0, [x29, #-16]
  4383d8:	stur	x1, [x29, #-24]
  4383dc:	ldur	x8, [x29, #-24]
  4383e0:	ldr	x8, [x8, #192]
  4383e4:	str	x8, [sp, #24]
  4383e8:	ldur	x8, [x29, #-24]
  4383ec:	ldr	x8, [x8, #72]
  4383f0:	str	x8, [sp, #16]
  4383f4:	ldr	x8, [sp, #16]
  4383f8:	add	x8, x8, #0x1
  4383fc:	str	x8, [sp, #16]
  438400:	ldr	x9, [sp, #24]
  438404:	cmp	x8, x9
  438408:	b.le	438418 <_obstack_memory_used@@Base+0x10af8>
  43840c:	mov	x8, xzr
  438410:	stur	x8, [x29, #-8]
  438414:	b	438494 <_obstack_memory_used@@Base+0x10b74>
  438418:	ldur	x8, [x29, #-24]
  43841c:	ldr	x9, [x8, #72]
  438420:	add	x9, x9, #0x1
  438424:	str	x9, [x8, #72]
  438428:	ldur	x8, [x29, #-24]
  43842c:	ldr	x8, [x8, #184]
  438430:	ldr	x9, [sp, #16]
  438434:	mov	x10, #0x8                   	// #8
  438438:	mul	x9, x10, x9
  43843c:	add	x8, x8, x9
  438440:	ldr	x8, [x8]
  438444:	cbz	x8, 4383f4 <_obstack_memory_used@@Base+0x10ad4>
  438448:	ldur	x0, [x29, #-16]
  43844c:	ldur	x1, [x29, #-24]
  438450:	mov	x8, xzr
  438454:	mov	x2, x8
  438458:	bl	438110 <_obstack_memory_used@@Base+0x107f0>
  43845c:	str	x0, [sp, #32]
  438460:	ldur	x8, [x29, #-16]
  438464:	ldr	w9, [x8]
  438468:	mov	w10, #0x0                   	// #0
  43846c:	str	w10, [sp, #12]
  438470:	cbnz	w9, 438484 <_obstack_memory_used@@Base+0x10b64>
  438474:	ldr	x8, [sp, #32]
  438478:	cmp	x8, #0x0
  43847c:	cset	w9, eq  // eq = none
  438480:	str	w9, [sp, #12]
  438484:	ldr	w8, [sp, #12]
  438488:	tbnz	w8, #0, 4383dc <_obstack_memory_used@@Base+0x10abc>
  43848c:	ldr	x8, [sp, #32]
  438490:	stur	x8, [x29, #-8]
  438494:	ldur	x0, [x29, #-8]
  438498:	ldp	x29, x30, [sp, #64]
  43849c:	add	sp, sp, #0x50
  4384a0:	ret
  4384a4:	sub	sp, sp, #0x40
  4384a8:	stp	x29, x30, [sp, #48]
  4384ac:	add	x29, sp, #0x30
  4384b0:	stur	x0, [x29, #-16]
  4384b4:	str	x1, [sp, #24]
  4384b8:	str	x2, [sp, #16]
  4384bc:	ldur	x8, [x29, #-16]
  4384c0:	ldr	x8, [x8, #248]
  4384c4:	cbz	x8, 4384cc <_obstack_memory_used@@Base+0x10bac>
  4384c8:	b	4384cc <_obstack_memory_used@@Base+0x10bac>
  4384cc:	ldur	x8, [x29, #-16]
  4384d0:	ldr	x8, [x8, #240]
  4384d4:	cmp	x8, #0x0
  4384d8:	cset	w9, le
  4384dc:	tbnz	w9, #0, 4384e4 <_obstack_memory_used@@Base+0x10bc4>
  4384e0:	b	4384e4 <_obstack_memory_used@@Base+0x10bc4>
  4384e4:	ldur	x8, [x29, #-16]
  4384e8:	ldr	x8, [x8, #232]
  4384ec:	ldur	x9, [x29, #-16]
  4384f0:	ldr	x9, [x9, #240]
  4384f4:	cmp	x8, x9
  4384f8:	cset	w10, eq  // eq = none
  4384fc:	and	w10, w10, #0x1
  438500:	mov	w0, w10
  438504:	sxtw	x8, w0
  438508:	cbz	x8, 43857c <_obstack_memory_used@@Base+0x10c5c>
  43850c:	ldur	x8, [x29, #-16]
  438510:	ldr	x8, [x8, #240]
  438514:	mov	x9, #0x2                   	// #2
  438518:	mul	x8, x8, x9
  43851c:	str	x8, [sp, #8]
  438520:	ldur	x8, [x29, #-16]
  438524:	ldr	x0, [x8, #248]
  438528:	ldr	x8, [sp, #8]
  43852c:	mov	x9, #0x8                   	// #8
  438530:	mul	x1, x8, x9
  438534:	bl	402570 <realloc@plt>
  438538:	str	x0, [sp]
  43853c:	ldr	x8, [sp]
  438540:	cmp	x8, #0x0
  438544:	cset	w10, eq  // eq = none
  438548:	and	w10, w10, #0x1
  43854c:	mov	w0, w10
  438550:	sxtw	x8, w0
  438554:	cbz	x8, 438564 <_obstack_memory_used@@Base+0x10c44>
  438558:	mov	w8, #0xc                   	// #12
  43855c:	stur	w8, [x29, #-4]
  438560:	b	438640 <_obstack_memory_used@@Base+0x10d20>
  438564:	ldr	x8, [sp]
  438568:	ldur	x9, [x29, #-16]
  43856c:	str	x8, [x9, #248]
  438570:	ldr	x8, [sp, #8]
  438574:	ldur	x9, [x29, #-16]
  438578:	str	x8, [x9, #240]
  43857c:	mov	x0, #0x1                   	// #1
  438580:	mov	x1, #0x30                  	// #48
  438584:	bl	402540 <calloc@plt>
  438588:	ldur	x8, [x29, #-16]
  43858c:	ldr	x8, [x8, #248]
  438590:	ldur	x9, [x29, #-16]
  438594:	ldr	x9, [x9, #232]
  438598:	mov	x10, #0x8                   	// #8
  43859c:	mul	x9, x10, x9
  4385a0:	add	x8, x8, x9
  4385a4:	str	x0, [x8]
  4385a8:	ldur	x8, [x29, #-16]
  4385ac:	ldr	x8, [x8, #248]
  4385b0:	ldur	x9, [x29, #-16]
  4385b4:	ldr	x9, [x9, #232]
  4385b8:	mul	x9, x10, x9
  4385bc:	add	x8, x8, x9
  4385c0:	ldr	x8, [x8]
  4385c4:	cmp	x8, #0x0
  4385c8:	cset	w11, eq  // eq = none
  4385cc:	and	w11, w11, #0x1
  4385d0:	mov	w0, w11
  4385d4:	sxtw	x8, w0
  4385d8:	cbz	x8, 4385e8 <_obstack_memory_used@@Base+0x10cc8>
  4385dc:	mov	w8, #0xc                   	// #12
  4385e0:	stur	w8, [x29, #-4]
  4385e4:	b	438640 <_obstack_memory_used@@Base+0x10d20>
  4385e8:	ldr	x8, [sp, #24]
  4385ec:	ldur	x9, [x29, #-16]
  4385f0:	ldr	x9, [x9, #248]
  4385f4:	ldur	x10, [x29, #-16]
  4385f8:	ldr	x10, [x10, #232]
  4385fc:	mov	x11, #0x8                   	// #8
  438600:	mul	x10, x11, x10
  438604:	add	x9, x9, x10
  438608:	ldr	x9, [x9]
  43860c:	str	x8, [x9, #8]
  438610:	ldr	x8, [sp, #16]
  438614:	ldur	x9, [x29, #-16]
  438618:	ldr	x9, [x9, #248]
  43861c:	ldur	x10, [x29, #-16]
  438620:	ldr	x12, [x10, #232]
  438624:	add	x13, x12, #0x1
  438628:	str	x13, [x10, #232]
  43862c:	mul	x10, x11, x12
  438630:	add	x9, x9, x10
  438634:	ldr	x9, [x9]
  438638:	str	x8, [x9]
  43863c:	stur	wzr, [x29, #-4]
  438640:	ldur	w0, [x29, #-4]
  438644:	ldp	x29, x30, [sp, #48]
  438648:	add	sp, sp, #0x40
  43864c:	ret
  438650:	sub	sp, sp, #0xc0
  438654:	stp	x29, x30, [sp, #176]
  438658:	add	x29, sp, #0xb0
  43865c:	mov	x8, #0xffffffffffffffff    	// #-1
  438660:	stur	x0, [x29, #-16]
  438664:	stur	x1, [x29, #-24]
  438668:	stur	x2, [x29, #-32]
  43866c:	ldur	x9, [x29, #-16]
  438670:	ldr	x9, [x9, #152]
  438674:	stur	x9, [x29, #-40]
  438678:	ldur	x9, [x29, #-16]
  43867c:	ldr	x9, [x9, #8]
  438680:	stur	x9, [x29, #-64]
  438684:	ldur	x0, [x29, #-16]
  438688:	ldur	x1, [x29, #-32]
  43868c:	str	x8, [sp, #8]
  438690:	bl	438f9c <_obstack_memory_used@@Base+0x1167c>
  438694:	stur	x0, [x29, #-72]
  438698:	ldur	x8, [x29, #-72]
  43869c:	ldr	x9, [sp, #8]
  4386a0:	cmp	x8, x9
  4386a4:	b.eq	4386f4 <_obstack_memory_used@@Base+0x10dd4>  // b.none
  4386a8:	ldur	x8, [x29, #-16]
  4386ac:	ldr	x8, [x8, #216]
  4386b0:	ldur	x9, [x29, #-72]
  4386b4:	mov	x10, #0x28                  	// #40
  4386b8:	mul	x9, x10, x9
  4386bc:	add	x8, x8, x9
  4386c0:	stur	x8, [x29, #-80]
  4386c4:	ldur	x8, [x29, #-80]
  4386c8:	ldr	x8, [x8]
  4386cc:	ldur	x9, [x29, #-24]
  4386d0:	cmp	x8, x9
  4386d4:	b.ne	4386e0 <_obstack_memory_used@@Base+0x10dc0>  // b.any
  4386d8:	stur	wzr, [x29, #-4]
  4386dc:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  4386e0:	ldur	x8, [x29, #-80]
  4386e4:	add	x9, x8, #0x28
  4386e8:	stur	x9, [x29, #-80]
  4386ec:	ldrb	w10, [x8, #32]
  4386f0:	cbnz	w10, 4386c4 <_obstack_memory_used@@Base+0x10da4>
  4386f4:	ldur	x8, [x29, #-40]
  4386f8:	ldr	x8, [x8]
  4386fc:	ldur	x9, [x29, #-24]
  438700:	mov	x10, #0x10                  	// #16
  438704:	mul	x9, x10, x9
  438708:	ldr	x8, [x8, x9]
  43870c:	stur	x8, [x29, #-48]
  438710:	stur	xzr, [x29, #-56]
  438714:	ldur	x8, [x29, #-56]
  438718:	ldur	x9, [x29, #-16]
  43871c:	ldr	x9, [x9, #232]
  438720:	cmp	x8, x9
  438724:	b.ge	438c34 <_obstack_memory_used@@Base+0x11314>  // b.tcont
  438728:	ldur	x8, [x29, #-16]
  43872c:	ldr	x8, [x8, #248]
  438730:	ldur	x9, [x29, #-56]
  438734:	mov	x10, #0x8                   	// #8
  438738:	mul	x9, x10, x9
  43873c:	add	x8, x8, x9
  438740:	ldr	x8, [x8]
  438744:	str	x8, [sp, #80]
  438748:	ldur	x8, [x29, #-40]
  43874c:	ldr	x8, [x8]
  438750:	ldr	x9, [sp, #80]
  438754:	ldr	x9, [x9, #8]
  438758:	mov	x10, #0x10                  	// #16
  43875c:	mul	x9, x10, x9
  438760:	ldr	x8, [x8, x9]
  438764:	ldur	x9, [x29, #-48]
  438768:	cmp	x8, x9
  43876c:	b.eq	438774 <_obstack_memory_used@@Base+0x10e54>  // b.none
  438770:	b	438c24 <_obstack_memory_used@@Base+0x11304>
  438774:	ldr	x8, [sp, #80]
  438778:	ldr	x8, [x8]
  43877c:	str	x8, [sp, #56]
  438780:	ldur	x8, [x29, #-32]
  438784:	str	x8, [sp, #48]
  438788:	str	xzr, [sp, #64]
  43878c:	ldr	x8, [sp, #64]
  438790:	ldr	x9, [sp, #80]
  438794:	ldr	x9, [x9, #32]
  438798:	cmp	x8, x9
  43879c:	b.ge	438934 <_obstack_memory_used@@Base+0x11014>  // b.tcont
  4387a0:	ldr	x8, [sp, #80]
  4387a4:	ldr	x8, [x8, #40]
  4387a8:	ldr	x9, [sp, #64]
  4387ac:	mov	x10, #0x8                   	// #8
  4387b0:	mul	x9, x10, x9
  4387b4:	add	x8, x8, x9
  4387b8:	ldr	x8, [x8]
  4387bc:	str	x8, [sp, #72]
  4387c0:	ldr	x8, [sp, #72]
  4387c4:	ldr	x8, [x8, #8]
  4387c8:	ldr	x9, [sp, #56]
  4387cc:	subs	x8, x8, x9
  4387d0:	str	x8, [sp, #40]
  4387d4:	ldr	x8, [sp, #40]
  4387d8:	cmp	x8, #0x0
  4387dc:	cset	w11, le
  4387e0:	tbnz	w11, #0, 4388a4 <_obstack_memory_used@@Base+0x10f84>
  4387e4:	ldr	x8, [sp, #48]
  4387e8:	ldr	x9, [sp, #40]
  4387ec:	add	x8, x8, x9
  4387f0:	ldur	x9, [x29, #-16]
  4387f4:	ldr	x9, [x9, #48]
  4387f8:	cmp	x8, x9
  4387fc:	cset	w10, gt
  438800:	and	w10, w10, #0x1
  438804:	mov	w0, w10
  438808:	sxtw	x8, w0
  43880c:	cbz	x8, 43887c <_obstack_memory_used@@Base+0x10f5c>
  438810:	ldr	x8, [sp, #48]
  438814:	ldr	x9, [sp, #40]
  438818:	add	x8, x8, x9
  43881c:	ldur	x9, [x29, #-16]
  438820:	ldr	x9, [x9, #88]
  438824:	cmp	x8, x9
  438828:	b.le	438830 <_obstack_memory_used@@Base+0x10f10>
  43882c:	b	438934 <_obstack_memory_used@@Base+0x11014>
  438830:	ldur	x0, [x29, #-16]
  438834:	ldr	x8, [sp, #48]
  438838:	ldr	x9, [sp, #40]
  43883c:	add	x1, x8, x9
  438840:	bl	439080 <_obstack_memory_used@@Base+0x11760>
  438844:	stur	w0, [x29, #-84]
  438848:	ldur	w10, [x29, #-84]
  43884c:	cmp	w10, #0x0
  438850:	cset	w10, ne  // ne = any
  438854:	and	w10, w10, #0x1
  438858:	mov	w1, w10
  43885c:	sxtw	x8, w1
  438860:	cbz	x8, 438870 <_obstack_memory_used@@Base+0x10f50>
  438864:	ldur	w8, [x29, #-84]
  438868:	stur	w8, [x29, #-4]
  43886c:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  438870:	ldur	x8, [x29, #-16]
  438874:	ldr	x8, [x8, #8]
  438878:	stur	x8, [x29, #-64]
  43887c:	ldur	x8, [x29, #-64]
  438880:	ldr	x9, [sp, #48]
  438884:	add	x0, x8, x9
  438888:	ldur	x8, [x29, #-64]
  43888c:	ldr	x9, [sp, #56]
  438890:	add	x1, x8, x9
  438894:	ldr	x2, [sp, #40]
  438898:	bl	402670 <memcmp@plt>
  43889c:	cbz	w0, 4388a4 <_obstack_memory_used@@Base+0x10f84>
  4388a0:	b	438934 <_obstack_memory_used@@Base+0x11014>
  4388a4:	ldr	x8, [sp, #40]
  4388a8:	ldr	x9, [sp, #48]
  4388ac:	add	x8, x9, x8
  4388b0:	str	x8, [sp, #48]
  4388b4:	ldr	x8, [sp, #40]
  4388b8:	ldr	x9, [sp, #56]
  4388bc:	add	x8, x9, x8
  4388c0:	str	x8, [sp, #56]
  4388c4:	ldur	x0, [x29, #-16]
  4388c8:	ldr	x1, [sp, #80]
  4388cc:	ldr	x2, [sp, #72]
  4388d0:	ldur	x3, [x29, #-24]
  4388d4:	ldur	x4, [x29, #-32]
  4388d8:	bl	4391a4 <_obstack_memory_used@@Base+0x11884>
  4388dc:	stur	w0, [x29, #-84]
  4388e0:	ldur	x8, [x29, #-16]
  4388e4:	ldr	x8, [x8, #8]
  4388e8:	stur	x8, [x29, #-64]
  4388ec:	ldur	w10, [x29, #-84]
  4388f0:	cmp	w10, #0x1
  4388f4:	b.ne	4388fc <_obstack_memory_used@@Base+0x10fdc>  // b.any
  4388f8:	b	438924 <_obstack_memory_used@@Base+0x11004>
  4388fc:	ldur	w8, [x29, #-84]
  438900:	cmp	w8, #0x0
  438904:	cset	w8, ne  // ne = any
  438908:	and	w8, w8, #0x1
  43890c:	mov	w0, w8
  438910:	sxtw	x9, w0
  438914:	cbz	x9, 438924 <_obstack_memory_used@@Base+0x11004>
  438918:	ldur	w8, [x29, #-84]
  43891c:	stur	w8, [x29, #-4]
  438920:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  438924:	ldr	x8, [sp, #64]
  438928:	add	x8, x8, #0x1
  43892c:	str	x8, [sp, #64]
  438930:	b	43878c <_obstack_memory_used@@Base+0x10e6c>
  438934:	ldr	x8, [sp, #64]
  438938:	ldr	x9, [sp, #80]
  43893c:	ldr	x9, [x9, #32]
  438940:	cmp	x8, x9
  438944:	b.ge	43894c <_obstack_memory_used@@Base+0x1102c>  // b.tcont
  438948:	b	438c24 <_obstack_memory_used@@Base+0x11304>
  43894c:	ldr	x8, [sp, #64]
  438950:	cmp	x8, #0x0
  438954:	cset	w9, le
  438958:	tbnz	w9, #0, 438968 <_obstack_memory_used@@Base+0x11048>
  43895c:	ldr	x8, [sp, #56]
  438960:	add	x8, x8, #0x1
  438964:	str	x8, [sp, #56]
  438968:	ldr	x8, [sp, #56]
  43896c:	ldur	x9, [x29, #-32]
  438970:	cmp	x8, x9
  438974:	b.gt	438c24 <_obstack_memory_used@@Base+0x11304>
  438978:	ldr	x8, [sp, #56]
  43897c:	ldr	x9, [sp, #80]
  438980:	ldr	x9, [x9]
  438984:	subs	x8, x8, x9
  438988:	str	x8, [sp, #24]
  43898c:	ldr	x8, [sp, #24]
  438990:	cmp	x8, #0x0
  438994:	cset	w10, le
  438998:	tbnz	w10, #0, 438a54 <_obstack_memory_used@@Base+0x11134>
  43899c:	ldr	x8, [sp, #48]
  4389a0:	ldur	x9, [x29, #-16]
  4389a4:	ldr	x9, [x9, #48]
  4389a8:	cmp	x8, x9
  4389ac:	cset	w10, ge  // ge = tcont
  4389b0:	and	w10, w10, #0x1
  4389b4:	mov	w0, w10
  4389b8:	sxtw	x8, w0
  4389bc:	cbz	x8, 438a24 <_obstack_memory_used@@Base+0x11104>
  4389c0:	ldr	x8, [sp, #48]
  4389c4:	ldur	x9, [x29, #-16]
  4389c8:	ldr	x9, [x9, #88]
  4389cc:	cmp	x8, x9
  4389d0:	b.lt	4389d8 <_obstack_memory_used@@Base+0x110b8>  // b.tstop
  4389d4:	b	438c24 <_obstack_memory_used@@Base+0x11304>
  4389d8:	ldur	x0, [x29, #-16]
  4389dc:	ldr	x8, [sp, #48]
  4389e0:	add	x8, x8, #0x1
  4389e4:	mov	w1, w8
  4389e8:	bl	437cf0 <_obstack_memory_used@@Base+0x103d0>
  4389ec:	stur	w0, [x29, #-84]
  4389f0:	ldur	w8, [x29, #-84]
  4389f4:	cmp	w8, #0x0
  4389f8:	cset	w8, ne  // ne = any
  4389fc:	and	w8, w8, #0x1
  438a00:	mov	w2, w8
  438a04:	sxtw	x9, w2
  438a08:	cbz	x9, 438a18 <_obstack_memory_used@@Base+0x110f8>
  438a0c:	ldur	w8, [x29, #-84]
  438a10:	stur	w8, [x29, #-4]
  438a14:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  438a18:	ldur	x8, [x29, #-16]
  438a1c:	ldr	x8, [x8, #8]
  438a20:	stur	x8, [x29, #-64]
  438a24:	ldur	x8, [x29, #-64]
  438a28:	ldr	x9, [sp, #48]
  438a2c:	add	x10, x9, #0x1
  438a30:	str	x10, [sp, #48]
  438a34:	ldrb	w11, [x8, x9]
  438a38:	ldur	x8, [x29, #-64]
  438a3c:	ldr	x9, [sp, #56]
  438a40:	subs	x9, x9, #0x1
  438a44:	ldrb	w12, [x8, x9]
  438a48:	cmp	w11, w12
  438a4c:	b.eq	438a54 <_obstack_memory_used@@Base+0x11134>  // b.none
  438a50:	b	438c24 <_obstack_memory_used@@Base+0x11304>
  438a54:	ldur	x8, [x29, #-16]
  438a58:	ldr	x8, [x8, #184]
  438a5c:	ldr	x9, [sp, #56]
  438a60:	mov	x10, #0x8                   	// #8
  438a64:	mul	x9, x10, x9
  438a68:	add	x8, x8, x9
  438a6c:	ldr	x8, [x8]
  438a70:	cbnz	x8, 438a78 <_obstack_memory_used@@Base+0x11158>
  438a74:	b	438c14 <_obstack_memory_used@@Base+0x112f4>
  438a78:	ldur	x8, [x29, #-16]
  438a7c:	ldr	x8, [x8, #184]
  438a80:	ldr	x9, [sp, #56]
  438a84:	mov	x10, #0x8                   	// #8
  438a88:	mul	x9, x10, x9
  438a8c:	add	x8, x8, x9
  438a90:	ldr	x8, [x8]
  438a94:	add	x8, x8, #0x8
  438a98:	str	x8, [sp, #16]
  438a9c:	ldur	x0, [x29, #-40]
  438aa0:	ldr	x1, [sp, #16]
  438aa4:	ldur	x2, [x29, #-48]
  438aa8:	mov	w3, #0x9                   	// #9
  438aac:	bl	439294 <_obstack_memory_used@@Base+0x11974>
  438ab0:	str	x0, [sp, #32]
  438ab4:	ldr	x8, [sp, #32]
  438ab8:	mov	x9, #0xffffffffffffffff    	// #-1
  438abc:	cmp	x8, x9
  438ac0:	b.ne	438ac8 <_obstack_memory_used@@Base+0x111a8>  // b.any
  438ac4:	b	438c14 <_obstack_memory_used@@Base+0x112f4>
  438ac8:	ldr	x8, [sp, #80]
  438acc:	ldr	x8, [x8, #16]
  438ad0:	cbnz	x8, 438b10 <_obstack_memory_used@@Base+0x111f0>
  438ad4:	ldr	x8, [sp, #56]
  438ad8:	ldr	x9, [sp, #80]
  438adc:	ldr	x9, [x9]
  438ae0:	subs	x8, x8, x9
  438ae4:	add	x1, x8, #0x1
  438ae8:	mov	x0, #0x18                  	// #24
  438aec:	bl	402540 <calloc@plt>
  438af0:	ldr	x8, [sp, #80]
  438af4:	str	x0, [x8, #16]
  438af8:	ldr	x8, [sp, #80]
  438afc:	ldr	x8, [x8, #16]
  438b00:	cbnz	x8, 438b10 <_obstack_memory_used@@Base+0x111f0>
  438b04:	mov	w8, #0xc                   	// #12
  438b08:	stur	w8, [x29, #-4]
  438b0c:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  438b10:	ldur	x0, [x29, #-16]
  438b14:	ldr	x8, [sp, #80]
  438b18:	ldr	x1, [x8, #16]
  438b1c:	ldr	x8, [sp, #80]
  438b20:	ldr	x2, [x8, #8]
  438b24:	ldr	x8, [sp, #80]
  438b28:	ldr	x3, [x8]
  438b2c:	ldr	x4, [sp, #32]
  438b30:	ldr	x5, [sp, #56]
  438b34:	mov	w6, #0x9                   	// #9
  438b38:	bl	43934c <_obstack_memory_used@@Base+0x11a2c>
  438b3c:	stur	w0, [x29, #-84]
  438b40:	ldur	w9, [x29, #-84]
  438b44:	cmp	w9, #0x1
  438b48:	b.ne	438b50 <_obstack_memory_used@@Base+0x11230>  // b.any
  438b4c:	b	438c14 <_obstack_memory_used@@Base+0x112f4>
  438b50:	ldur	w8, [x29, #-84]
  438b54:	cmp	w8, #0x0
  438b58:	cset	w8, ne  // ne = any
  438b5c:	and	w8, w8, #0x1
  438b60:	mov	w0, w8
  438b64:	sxtw	x9, w0
  438b68:	cbz	x9, 438b78 <_obstack_memory_used@@Base+0x11258>
  438b6c:	ldur	w8, [x29, #-84]
  438b70:	stur	w8, [x29, #-4]
  438b74:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  438b78:	ldr	x0, [sp, #80]
  438b7c:	ldr	x1, [sp, #32]
  438b80:	ldr	x2, [sp, #56]
  438b84:	bl	439b18 <_obstack_memory_used@@Base+0x121f8>
  438b88:	str	x0, [sp, #72]
  438b8c:	ldr	x8, [sp, #72]
  438b90:	cmp	x8, #0x0
  438b94:	cset	w9, eq  // eq = none
  438b98:	and	w9, w9, #0x1
  438b9c:	mov	w0, w9
  438ba0:	sxtw	x8, w0
  438ba4:	cbz	x8, 438bb4 <_obstack_memory_used@@Base+0x11294>
  438ba8:	mov	w8, #0xc                   	// #12
  438bac:	stur	w8, [x29, #-4]
  438bb0:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  438bb4:	ldur	x0, [x29, #-16]
  438bb8:	ldr	x1, [sp, #80]
  438bbc:	ldr	x2, [sp, #72]
  438bc0:	ldur	x3, [x29, #-24]
  438bc4:	ldur	x4, [x29, #-32]
  438bc8:	bl	4391a4 <_obstack_memory_used@@Base+0x11884>
  438bcc:	stur	w0, [x29, #-84]
  438bd0:	ldur	x8, [x29, #-16]
  438bd4:	ldr	x8, [x8, #8]
  438bd8:	stur	x8, [x29, #-64]
  438bdc:	ldur	w9, [x29, #-84]
  438be0:	cmp	w9, #0x1
  438be4:	b.ne	438bec <_obstack_memory_used@@Base+0x112cc>  // b.any
  438be8:	b	438c14 <_obstack_memory_used@@Base+0x112f4>
  438bec:	ldur	w8, [x29, #-84]
  438bf0:	cmp	w8, #0x0
  438bf4:	cset	w8, ne  // ne = any
  438bf8:	and	w8, w8, #0x1
  438bfc:	mov	w0, w8
  438c00:	sxtw	x9, w0
  438c04:	cbz	x9, 438c14 <_obstack_memory_used@@Base+0x112f4>
  438c08:	ldur	w8, [x29, #-84]
  438c0c:	stur	w8, [x29, #-4]
  438c10:	b	438c38 <_obstack_memory_used@@Base+0x11318>
  438c14:	ldr	x8, [sp, #56]
  438c18:	add	x8, x8, #0x1
  438c1c:	str	x8, [sp, #56]
  438c20:	b	438968 <_obstack_memory_used@@Base+0x11048>
  438c24:	ldur	x8, [x29, #-56]
  438c28:	add	x8, x8, #0x1
  438c2c:	stur	x8, [x29, #-56]
  438c30:	b	438714 <_obstack_memory_used@@Base+0x10df4>
  438c34:	stur	wzr, [x29, #-4]
  438c38:	ldur	w0, [x29, #-4]
  438c3c:	ldp	x29, x30, [sp, #176]
  438c40:	add	sp, sp, #0xc0
  438c44:	ret
  438c48:	sub	sp, sp, #0x50
  438c4c:	stp	x29, x30, [sp, #64]
  438c50:	add	x29, sp, #0x40
  438c54:	stur	x0, [x29, #-16]
  438c58:	stur	x1, [x29, #-24]
  438c5c:	str	x2, [sp, #32]
  438c60:	ldur	x8, [x29, #-24]
  438c64:	cbz	x8, 438d00 <_obstack_memory_used@@Base+0x113e0>
  438c68:	ldur	x8, [x29, #-24]
  438c6c:	ldr	x8, [x8, #8]
  438c70:	cmp	x8, #0x0
  438c74:	cset	w9, le
  438c78:	tbnz	w9, #0, 438d00 <_obstack_memory_used@@Base+0x113e0>
  438c7c:	ldr	x8, [sp, #32]
  438c80:	cbz	x8, 438d00 <_obstack_memory_used@@Base+0x113e0>
  438c84:	ldr	x8, [sp, #32]
  438c88:	ldr	x8, [x8, #8]
  438c8c:	cmp	x8, #0x0
  438c90:	cset	w9, le
  438c94:	tbnz	w9, #0, 438d00 <_obstack_memory_used@@Base+0x113e0>
  438c98:	ldur	x8, [x29, #-24]
  438c9c:	ldr	x8, [x8, #8]
  438ca0:	ldr	x9, [sp, #32]
  438ca4:	ldr	x9, [x9, #8]
  438ca8:	add	x8, x8, x9
  438cac:	ldur	x9, [x29, #-16]
  438cb0:	str	x8, [x9]
  438cb4:	ldur	x8, [x29, #-16]
  438cb8:	ldr	x8, [x8]
  438cbc:	mov	x9, #0x8                   	// #8
  438cc0:	mul	x0, x8, x9
  438cc4:	bl	402450 <malloc@plt>
  438cc8:	ldur	x8, [x29, #-16]
  438ccc:	str	x0, [x8, #16]
  438cd0:	ldur	x8, [x29, #-16]
  438cd4:	ldr	x8, [x8, #16]
  438cd8:	cmp	x8, #0x0
  438cdc:	cset	w10, eq  // eq = none
  438ce0:	and	w10, w10, #0x1
  438ce4:	mov	w0, w10
  438ce8:	sxtw	x8, w0
  438cec:	cbz	x8, 438cfc <_obstack_memory_used@@Base+0x113dc>
  438cf0:	mov	w8, #0xc                   	// #12
  438cf4:	stur	w8, [x29, #-4]
  438cf8:	b	438f8c <_obstack_memory_used@@Base+0x1166c>
  438cfc:	b	438d78 <_obstack_memory_used@@Base+0x11458>
  438d00:	ldur	x8, [x29, #-24]
  438d04:	cbz	x8, 438d30 <_obstack_memory_used@@Base+0x11410>
  438d08:	ldur	x8, [x29, #-24]
  438d0c:	ldr	x8, [x8, #8]
  438d10:	cmp	x8, #0x0
  438d14:	cset	w9, le
  438d18:	tbnz	w9, #0, 438d30 <_obstack_memory_used@@Base+0x11410>
  438d1c:	ldur	x0, [x29, #-16]
  438d20:	ldur	x1, [x29, #-24]
  438d24:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  438d28:	stur	w0, [x29, #-4]
  438d2c:	b	438f8c <_obstack_memory_used@@Base+0x1166c>
  438d30:	ldr	x8, [sp, #32]
  438d34:	cbz	x8, 438d60 <_obstack_memory_used@@Base+0x11440>
  438d38:	ldr	x8, [sp, #32]
  438d3c:	ldr	x8, [x8, #8]
  438d40:	cmp	x8, #0x0
  438d44:	cset	w9, le
  438d48:	tbnz	w9, #0, 438d60 <_obstack_memory_used@@Base+0x11440>
  438d4c:	ldur	x0, [x29, #-16]
  438d50:	ldr	x1, [sp, #32]
  438d54:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  438d58:	stur	w0, [x29, #-4]
  438d5c:	b	438f8c <_obstack_memory_used@@Base+0x1166c>
  438d60:	ldur	x8, [x29, #-16]
  438d64:	str	xzr, [x8]
  438d68:	str	xzr, [x8, #8]
  438d6c:	str	xzr, [x8, #16]
  438d70:	stur	wzr, [x29, #-4]
  438d74:	b	438f8c <_obstack_memory_used@@Base+0x1166c>
  438d78:	str	xzr, [sp, #8]
  438d7c:	str	xzr, [sp, #16]
  438d80:	str	xzr, [sp, #24]
  438d84:	ldr	x8, [sp, #24]
  438d88:	ldur	x9, [x29, #-24]
  438d8c:	ldr	x9, [x9, #8]
  438d90:	mov	w10, #0x0                   	// #0
  438d94:	cmp	x8, x9
  438d98:	str	w10, [sp, #4]
  438d9c:	b.ge	438db8 <_obstack_memory_used@@Base+0x11498>  // b.tcont
  438da0:	ldr	x8, [sp, #16]
  438da4:	ldr	x9, [sp, #32]
  438da8:	ldr	x9, [x9, #8]
  438dac:	cmp	x8, x9
  438db0:	cset	w10, lt  // lt = tstop
  438db4:	str	w10, [sp, #4]
  438db8:	ldr	w8, [sp, #4]
  438dbc:	tbnz	w8, #0, 438dc4 <_obstack_memory_used@@Base+0x114a4>
  438dc0:	b	438e88 <_obstack_memory_used@@Base+0x11568>
  438dc4:	ldur	x8, [x29, #-24]
  438dc8:	ldr	x8, [x8, #16]
  438dcc:	ldr	x9, [sp, #24]
  438dd0:	ldr	x8, [x8, x9, lsl #3]
  438dd4:	ldr	x9, [sp, #32]
  438dd8:	ldr	x9, [x9, #16]
  438ddc:	ldr	x10, [sp, #16]
  438de0:	ldr	x9, [x9, x10, lsl #3]
  438de4:	cmp	x8, x9
  438de8:	b.le	438e20 <_obstack_memory_used@@Base+0x11500>
  438dec:	ldr	x8, [sp, #32]
  438df0:	ldr	x8, [x8, #16]
  438df4:	ldr	x9, [sp, #16]
  438df8:	add	x10, x9, #0x1
  438dfc:	str	x10, [sp, #16]
  438e00:	ldr	x8, [x8, x9, lsl #3]
  438e04:	ldur	x9, [x29, #-16]
  438e08:	ldr	x9, [x9, #16]
  438e0c:	ldr	x10, [sp, #8]
  438e10:	add	x11, x10, #0x1
  438e14:	str	x11, [sp, #8]
  438e18:	str	x8, [x9, x10, lsl #3]
  438e1c:	b	438d84 <_obstack_memory_used@@Base+0x11464>
  438e20:	ldur	x8, [x29, #-24]
  438e24:	ldr	x8, [x8, #16]
  438e28:	ldr	x9, [sp, #24]
  438e2c:	ldr	x8, [x8, x9, lsl #3]
  438e30:	ldr	x9, [sp, #32]
  438e34:	ldr	x9, [x9, #16]
  438e38:	ldr	x10, [sp, #16]
  438e3c:	ldr	x9, [x9, x10, lsl #3]
  438e40:	cmp	x8, x9
  438e44:	b.ne	438e54 <_obstack_memory_used@@Base+0x11534>  // b.any
  438e48:	ldr	x8, [sp, #16]
  438e4c:	add	x8, x8, #0x1
  438e50:	str	x8, [sp, #16]
  438e54:	ldur	x8, [x29, #-24]
  438e58:	ldr	x8, [x8, #16]
  438e5c:	ldr	x9, [sp, #24]
  438e60:	add	x10, x9, #0x1
  438e64:	str	x10, [sp, #24]
  438e68:	ldr	x8, [x8, x9, lsl #3]
  438e6c:	ldur	x9, [x29, #-16]
  438e70:	ldr	x9, [x9, #16]
  438e74:	ldr	x10, [sp, #8]
  438e78:	add	x11, x10, #0x1
  438e7c:	str	x11, [sp, #8]
  438e80:	str	x8, [x9, x10, lsl #3]
  438e84:	b	438d84 <_obstack_memory_used@@Base+0x11464>
  438e88:	ldr	x8, [sp, #24]
  438e8c:	ldur	x9, [x29, #-24]
  438e90:	ldr	x9, [x9, #8]
  438e94:	cmp	x8, x9
  438e98:	b.ge	438f04 <_obstack_memory_used@@Base+0x115e4>  // b.tcont
  438e9c:	ldur	x8, [x29, #-16]
  438ea0:	ldr	x8, [x8, #16]
  438ea4:	ldr	x9, [sp, #8]
  438ea8:	mov	x10, #0x8                   	// #8
  438eac:	mul	x9, x10, x9
  438eb0:	add	x0, x8, x9
  438eb4:	ldur	x8, [x29, #-24]
  438eb8:	ldr	x8, [x8, #16]
  438ebc:	ldr	x9, [sp, #24]
  438ec0:	mul	x9, x10, x9
  438ec4:	add	x1, x8, x9
  438ec8:	ldur	x8, [x29, #-24]
  438ecc:	ldr	x8, [x8, #8]
  438ed0:	ldr	x9, [sp, #24]
  438ed4:	subs	x8, x8, x9
  438ed8:	mov	x9, #0x8                   	// #8
  438edc:	mul	x2, x8, x9
  438ee0:	bl	402290 <memcpy@plt>
  438ee4:	ldur	x8, [x29, #-24]
  438ee8:	ldr	x8, [x8, #8]
  438eec:	ldr	x9, [sp, #24]
  438ef0:	subs	x8, x8, x9
  438ef4:	ldr	x9, [sp, #8]
  438ef8:	add	x8, x9, x8
  438efc:	str	x8, [sp, #8]
  438f00:	b	438f7c <_obstack_memory_used@@Base+0x1165c>
  438f04:	ldr	x8, [sp, #16]
  438f08:	ldr	x9, [sp, #32]
  438f0c:	ldr	x9, [x9, #8]
  438f10:	cmp	x8, x9
  438f14:	b.ge	438f7c <_obstack_memory_used@@Base+0x1165c>  // b.tcont
  438f18:	ldur	x8, [x29, #-16]
  438f1c:	ldr	x8, [x8, #16]
  438f20:	ldr	x9, [sp, #8]
  438f24:	mov	x10, #0x8                   	// #8
  438f28:	mul	x9, x10, x9
  438f2c:	add	x0, x8, x9
  438f30:	ldr	x8, [sp, #32]
  438f34:	ldr	x8, [x8, #16]
  438f38:	ldr	x9, [sp, #16]
  438f3c:	mul	x9, x10, x9
  438f40:	add	x1, x8, x9
  438f44:	ldr	x8, [sp, #32]
  438f48:	ldr	x8, [x8, #8]
  438f4c:	ldr	x9, [sp, #16]
  438f50:	subs	x8, x8, x9
  438f54:	mov	x9, #0x8                   	// #8
  438f58:	mul	x2, x8, x9
  438f5c:	bl	402290 <memcpy@plt>
  438f60:	ldr	x8, [sp, #32]
  438f64:	ldr	x8, [x8, #8]
  438f68:	ldr	x9, [sp, #16]
  438f6c:	subs	x8, x8, x9
  438f70:	ldr	x9, [sp, #8]
  438f74:	add	x8, x9, x8
  438f78:	str	x8, [sp, #8]
  438f7c:	ldr	x8, [sp, #8]
  438f80:	ldur	x9, [x29, #-16]
  438f84:	str	x8, [x9, #8]
  438f88:	stur	wzr, [x29, #-4]
  438f8c:	ldur	w0, [x29, #-4]
  438f90:	ldp	x29, x30, [sp, #64]
  438f94:	add	sp, sp, #0x50
  438f98:	ret
  438f9c:	sub	sp, sp, #0x40
  438fa0:	str	x0, [sp, #48]
  438fa4:	str	x1, [sp, #40]
  438fa8:	ldr	x8, [sp, #48]
  438fac:	ldr	x8, [x8, #200]
  438fb0:	str	x8, [sp, #24]
  438fb4:	str	x8, [sp, #8]
  438fb8:	str	xzr, [sp, #32]
  438fbc:	ldr	x8, [sp, #32]
  438fc0:	ldr	x9, [sp, #24]
  438fc4:	cmp	x8, x9
  438fc8:	b.ge	439028 <_obstack_memory_used@@Base+0x11708>  // b.tcont
  438fcc:	ldr	x8, [sp, #32]
  438fd0:	ldr	x9, [sp, #24]
  438fd4:	add	x8, x8, x9
  438fd8:	mov	x9, #0x2                   	// #2
  438fdc:	sdiv	x8, x8, x9
  438fe0:	str	x8, [sp, #16]
  438fe4:	ldr	x8, [sp, #48]
  438fe8:	ldr	x8, [x8, #216]
  438fec:	ldr	x9, [sp, #16]
  438ff0:	mov	x10, #0x28                  	// #40
  438ff4:	mul	x9, x10, x9
  438ff8:	add	x8, x8, x9
  438ffc:	ldr	x8, [x8, #8]
  439000:	ldr	x9, [sp, #40]
  439004:	cmp	x8, x9
  439008:	b.ge	43901c <_obstack_memory_used@@Base+0x116fc>  // b.tcont
  43900c:	ldr	x8, [sp, #16]
  439010:	add	x8, x8, #0x1
  439014:	str	x8, [sp, #32]
  439018:	b	439024 <_obstack_memory_used@@Base+0x11704>
  43901c:	ldr	x8, [sp, #16]
  439020:	str	x8, [sp, #24]
  439024:	b	438fbc <_obstack_memory_used@@Base+0x1169c>
  439028:	ldr	x8, [sp, #32]
  43902c:	ldr	x9, [sp, #8]
  439030:	cmp	x8, x9
  439034:	b.ge	43906c <_obstack_memory_used@@Base+0x1174c>  // b.tcont
  439038:	ldr	x8, [sp, #48]
  43903c:	ldr	x8, [x8, #216]
  439040:	ldr	x9, [sp, #32]
  439044:	mov	x10, #0x28                  	// #40
  439048:	mul	x9, x10, x9
  43904c:	add	x8, x8, x9
  439050:	ldr	x8, [x8, #8]
  439054:	ldr	x9, [sp, #40]
  439058:	cmp	x8, x9
  43905c:	b.ne	43906c <_obstack_memory_used@@Base+0x1174c>  // b.any
  439060:	ldr	x8, [sp, #32]
  439064:	str	x8, [sp, #56]
  439068:	b	439074 <_obstack_memory_used@@Base+0x11754>
  43906c:	mov	x8, #0xffffffffffffffff    	// #-1
  439070:	str	x8, [sp, #56]
  439074:	ldr	x0, [sp, #56]
  439078:	add	sp, sp, #0x40
  43907c:	ret
  439080:	sub	sp, sp, #0x40
  439084:	stp	x29, x30, [sp, #48]
  439088:	add	x29, sp, #0x30
  43908c:	stur	x0, [x29, #-16]
  439090:	str	x1, [sp, #24]
  439094:	ldur	x8, [x29, #-16]
  439098:	ldr	x8, [x8, #192]
  43909c:	str	x8, [sp, #16]
  4390a0:	ldr	x8, [sp, #24]
  4390a4:	ldur	x9, [x29, #-16]
  4390a8:	ldr	x9, [x9, #64]
  4390ac:	cmp	x8, x9
  4390b0:	b.lt	4390cc <_obstack_memory_used@@Base+0x117ac>  // b.tstop
  4390b4:	ldur	x8, [x29, #-16]
  4390b8:	ldr	x8, [x8, #64]
  4390bc:	ldur	x9, [x29, #-16]
  4390c0:	ldr	x9, [x9, #88]
  4390c4:	cmp	x8, x9
  4390c8:	b.lt	4390f8 <_obstack_memory_used@@Base+0x117d8>  // b.tstop
  4390cc:	ldr	x8, [sp, #24]
  4390d0:	ldur	x9, [x29, #-16]
  4390d4:	ldr	x9, [x9, #48]
  4390d8:	cmp	x8, x9
  4390dc:	b.lt	439138 <_obstack_memory_used@@Base+0x11818>  // b.tstop
  4390e0:	ldur	x8, [x29, #-16]
  4390e4:	ldr	x8, [x8, #48]
  4390e8:	ldur	x9, [x29, #-16]
  4390ec:	ldr	x9, [x9, #88]
  4390f0:	cmp	x8, x9
  4390f4:	b.ge	439138 <_obstack_memory_used@@Base+0x11818>  // b.tcont
  4390f8:	ldur	x0, [x29, #-16]
  4390fc:	ldr	x8, [sp, #24]
  439100:	add	x8, x8, #0x1
  439104:	mov	w1, w8
  439108:	bl	437cf0 <_obstack_memory_used@@Base+0x103d0>
  43910c:	str	w0, [sp, #12]
  439110:	ldr	w8, [sp, #12]
  439114:	cmp	w8, #0x0
  439118:	cset	w8, ne  // ne = any
  43911c:	and	w8, w8, #0x1
  439120:	mov	w2, w8
  439124:	sxtw	x9, w2
  439128:	cbz	x9, 439138 <_obstack_memory_used@@Base+0x11818>
  43912c:	ldr	w8, [sp, #12]
  439130:	stur	w8, [x29, #-4]
  439134:	b	439194 <_obstack_memory_used@@Base+0x11874>
  439138:	ldr	x8, [sp, #16]
  43913c:	ldr	x9, [sp, #24]
  439140:	cmp	x8, x9
  439144:	b.ge	439190 <_obstack_memory_used@@Base+0x11870>  // b.tcont
  439148:	ldur	x8, [x29, #-16]
  43914c:	ldr	x8, [x8, #184]
  439150:	ldr	x9, [sp, #16]
  439154:	mov	x10, #0x8                   	// #8
  439158:	mul	x9, x10, x9
  43915c:	add	x8, x8, x9
  439160:	add	x0, x8, #0x8
  439164:	ldr	x8, [sp, #24]
  439168:	ldr	x9, [sp, #16]
  43916c:	subs	x8, x8, x9
  439170:	mov	x9, #0x8                   	// #8
  439174:	mul	x2, x9, x8
  439178:	mov	w11, wzr
  43917c:	mov	w1, w11
  439180:	bl	402520 <memset@plt>
  439184:	ldr	x8, [sp, #24]
  439188:	ldur	x9, [x29, #-16]
  43918c:	str	x8, [x9, #192]
  439190:	stur	wzr, [x29, #-4]
  439194:	ldur	w0, [x29, #-4]
  439198:	ldp	x29, x30, [sp, #48]
  43919c:	add	sp, sp, #0x40
  4391a0:	ret
  4391a4:	sub	sp, sp, #0x50
  4391a8:	stp	x29, x30, [sp, #64]
  4391ac:	add	x29, sp, #0x40
  4391b0:	mov	w6, #0x8                   	// #8
  4391b4:	stur	x0, [x29, #-16]
  4391b8:	stur	x1, [x29, #-24]
  4391bc:	str	x2, [sp, #32]
  4391c0:	str	x3, [sp, #24]
  4391c4:	str	x4, [sp, #16]
  4391c8:	ldur	x0, [x29, #-16]
  4391cc:	ldr	x8, [sp, #32]
  4391d0:	add	x1, x8, #0x10
  4391d4:	ldr	x8, [sp, #32]
  4391d8:	ldr	x2, [x8]
  4391dc:	ldr	x8, [sp, #32]
  4391e0:	ldr	x3, [x8, #8]
  4391e4:	ldr	x4, [sp, #24]
  4391e8:	ldr	x5, [sp, #16]
  4391ec:	bl	43934c <_obstack_memory_used@@Base+0x11a2c>
  4391f0:	str	w0, [sp, #12]
  4391f4:	ldr	w9, [sp, #12]
  4391f8:	cbz	w9, 439208 <_obstack_memory_used@@Base+0x118e8>
  4391fc:	ldr	w8, [sp, #12]
  439200:	stur	w8, [x29, #-4]
  439204:	b	439284 <_obstack_memory_used@@Base+0x11964>
  439208:	ldur	x0, [x29, #-16]
  43920c:	ldr	x1, [sp, #24]
  439210:	ldr	x2, [sp, #16]
  439214:	ldur	x8, [x29, #-24]
  439218:	ldr	x3, [x8]
  43921c:	ldr	x8, [sp, #32]
  439220:	ldr	x4, [x8, #8]
  439224:	bl	439c5c <_obstack_memory_used@@Base+0x1233c>
  439228:	str	w0, [sp, #12]
  43922c:	ldr	w9, [sp, #12]
  439230:	cmp	w9, #0x0
  439234:	cset	w9, ne  // ne = any
  439238:	and	w9, w9, #0x1
  43923c:	mov	w1, w9
  439240:	sxtw	x8, w1
  439244:	cbz	x8, 439254 <_obstack_memory_used@@Base+0x11934>
  439248:	ldr	w8, [sp, #12]
  43924c:	stur	w8, [x29, #-4]
  439250:	b	439284 <_obstack_memory_used@@Base+0x11964>
  439254:	ldr	x8, [sp, #16]
  439258:	ldr	x9, [sp, #32]
  43925c:	ldr	x9, [x9, #8]
  439260:	add	x8, x8, x9
  439264:	ldur	x9, [x29, #-24]
  439268:	ldr	x9, [x9]
  43926c:	subs	x8, x8, x9
  439270:	str	x8, [sp]
  439274:	ldur	x0, [x29, #-16]
  439278:	ldr	x1, [sp]
  43927c:	bl	439080 <_obstack_memory_used@@Base+0x11760>
  439280:	stur	w0, [x29, #-4]
  439284:	ldur	w0, [x29, #-4]
  439288:	ldp	x29, x30, [sp, #64]
  43928c:	add	sp, sp, #0x50
  439290:	ret
  439294:	sub	sp, sp, #0x40
  439298:	str	x0, [sp, #48]
  43929c:	str	x1, [sp, #40]
  4392a0:	str	x2, [sp, #32]
  4392a4:	str	w3, [sp, #28]
  4392a8:	str	xzr, [sp, #16]
  4392ac:	ldr	x8, [sp, #16]
  4392b0:	ldr	x9, [sp, #40]
  4392b4:	ldr	x9, [x9, #8]
  4392b8:	cmp	x8, x9
  4392bc:	b.ge	439338 <_obstack_memory_used@@Base+0x11a18>  // b.tcont
  4392c0:	ldr	x8, [sp, #40]
  4392c4:	mov	x9, #0x10                  	// #16
  4392c8:	ldr	x8, [x8, #16]
  4392cc:	ldr	x10, [sp, #16]
  4392d0:	ldr	x8, [x8, x10, lsl #3]
  4392d4:	str	x8, [sp, #8]
  4392d8:	ldr	x8, [sp, #48]
  4392dc:	ldr	x8, [x8]
  4392e0:	ldr	x10, [sp, #8]
  4392e4:	mul	x9, x9, x10
  4392e8:	add	x8, x8, x9
  4392ec:	str	x8, [sp]
  4392f0:	ldr	x8, [sp]
  4392f4:	ldr	w11, [x8, #8]
  4392f8:	and	w11, w11, #0xff
  4392fc:	ldr	w12, [sp, #28]
  439300:	cmp	w11, w12
  439304:	b.ne	439328 <_obstack_memory_used@@Base+0x11a08>  // b.any
  439308:	ldr	x8, [sp]
  43930c:	ldr	x8, [x8]
  439310:	ldr	x9, [sp, #32]
  439314:	cmp	x8, x9
  439318:	b.ne	439328 <_obstack_memory_used@@Base+0x11a08>  // b.any
  43931c:	ldr	x8, [sp, #8]
  439320:	str	x8, [sp, #56]
  439324:	b	439340 <_obstack_memory_used@@Base+0x11a20>
  439328:	ldr	x8, [sp, #16]
  43932c:	add	x8, x8, #0x1
  439330:	str	x8, [sp, #16]
  439334:	b	4392ac <_obstack_memory_used@@Base+0x1198c>
  439338:	mov	x8, #0xffffffffffffffff    	// #-1
  43933c:	str	x8, [sp, #56]
  439340:	ldr	x0, [sp, #56]
  439344:	add	sp, sp, #0x40
  439348:	ret
  43934c:	sub	sp, sp, #0x100
  439350:	stp	x29, x30, [sp, #240]
  439354:	add	x29, sp, #0xf0
  439358:	mov	x8, xzr
  43935c:	stur	x0, [x29, #-16]
  439360:	stur	x1, [x29, #-24]
  439364:	stur	x2, [x29, #-32]
  439368:	stur	x3, [x29, #-40]
  43936c:	stur	x4, [x29, #-48]
  439370:	stur	x5, [x29, #-56]
  439374:	stur	w6, [x29, #-60]
  439378:	ldur	x9, [x29, #-16]
  43937c:	ldr	x9, [x9, #152]
  439380:	stur	x9, [x29, #-72]
  439384:	stur	wzr, [x29, #-76]
  439388:	str	x8, [sp, #120]
  43938c:	ldur	x8, [x29, #-72]
  439390:	ldr	x8, [x8]
  439394:	ldur	x9, [x29, #-32]
  439398:	mov	x10, #0x10                  	// #16
  43939c:	mul	x9, x10, x9
  4393a0:	ldr	x8, [x8, x9]
  4393a4:	stur	x8, [x29, #-88]
  4393a8:	ldur	x8, [x29, #-24]
  4393ac:	ldr	x8, [x8, #8]
  4393b0:	ldur	x9, [x29, #-56]
  4393b4:	ldur	x10, [x29, #-16]
  4393b8:	ldrsw	x10, [x10, #224]
  4393bc:	add	x9, x9, x10
  4393c0:	add	x9, x9, #0x1
  4393c4:	cmp	x8, x9
  4393c8:	cset	w11, lt  // lt = tstop
  4393cc:	and	w11, w11, #0x1
  4393d0:	mov	w0, w11
  4393d4:	sxtw	x8, w0
  4393d8:	cbz	x8, 439504 <_obstack_memory_used@@Base+0x11be4>
  4393dc:	ldur	x8, [x29, #-24]
  4393e0:	ldr	x8, [x8, #8]
  4393e4:	str	x8, [sp, #56]
  4393e8:	ldur	x8, [x29, #-56]
  4393ec:	ldur	x9, [x29, #-16]
  4393f0:	ldrsw	x9, [x9, #224]
  4393f4:	add	x8, x8, x9
  4393f8:	add	x8, x8, #0x1
  4393fc:	str	x8, [sp, #48]
  439400:	ldr	x8, [sp, #56]
  439404:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  439408:	subs	x8, x9, x8
  43940c:	ldr	x9, [sp, #48]
  439410:	cmp	x8, x9
  439414:	cset	w10, lt  // lt = tstop
  439418:	and	w10, w10, #0x1
  43941c:	mov	w0, w10
  439420:	sxtw	x8, w0
  439424:	cbz	x8, 439434 <_obstack_memory_used@@Base+0x11b14>
  439428:	mov	w8, #0xc                   	// #12
  43942c:	stur	w8, [x29, #-4]
  439430:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439434:	ldr	x8, [sp, #56]
  439438:	ldr	x9, [sp, #48]
  43943c:	add	x8, x8, x9
  439440:	str	x8, [sp, #40]
  439444:	ldr	x8, [sp, #40]
  439448:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  43944c:	cmp	x9, x8
  439450:	cset	w10, cc  // cc = lo, ul, last
  439454:	and	w10, w10, #0x1
  439458:	mov	w0, w10
  43945c:	sxtw	x8, w0
  439460:	cbz	x8, 439470 <_obstack_memory_used@@Base+0x11b50>
  439464:	mov	w8, #0xc                   	// #12
  439468:	stur	w8, [x29, #-4]
  43946c:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439470:	ldur	x8, [x29, #-24]
  439474:	ldr	x0, [x8, #16]
  439478:	ldr	x8, [sp, #40]
  43947c:	mov	x9, #0x8                   	// #8
  439480:	mul	x1, x8, x9
  439484:	bl	402570 <realloc@plt>
  439488:	str	x0, [sp, #64]
  43948c:	ldr	x8, [sp, #64]
  439490:	cmp	x8, #0x0
  439494:	cset	w10, eq  // eq = none
  439498:	and	w10, w10, #0x1
  43949c:	mov	w0, w10
  4394a0:	sxtw	x8, w0
  4394a4:	cbz	x8, 4394b4 <_obstack_memory_used@@Base+0x11b94>
  4394a8:	mov	w8, #0xc                   	// #12
  4394ac:	stur	w8, [x29, #-4]
  4394b0:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  4394b4:	ldr	x8, [sp, #64]
  4394b8:	ldur	x9, [x29, #-24]
  4394bc:	str	x8, [x9, #16]
  4394c0:	ldr	x8, [sp, #40]
  4394c4:	ldur	x9, [x29, #-24]
  4394c8:	mov	x10, #0x8                   	// #8
  4394cc:	str	x8, [x9, #8]
  4394d0:	ldr	x8, [sp, #64]
  4394d4:	ldr	x9, [sp, #56]
  4394d8:	mul	x9, x10, x9
  4394dc:	add	x0, x8, x9
  4394e0:	ldur	x8, [x29, #-24]
  4394e4:	ldr	x8, [x8, #8]
  4394e8:	ldr	x9, [sp, #56]
  4394ec:	subs	x8, x8, x9
  4394f0:	mov	x9, #0x8                   	// #8
  4394f4:	mul	x2, x9, x8
  4394f8:	mov	w11, wzr
  4394fc:	mov	w1, w11
  439500:	bl	402520 <memset@plt>
  439504:	ldur	x8, [x29, #-24]
  439508:	ldr	x8, [x8]
  43950c:	cbz	x8, 439520 <_obstack_memory_used@@Base+0x11c00>
  439510:	ldur	x8, [x29, #-24]
  439514:	ldr	x8, [x8]
  439518:	str	x8, [sp, #32]
  43951c:	b	439528 <_obstack_memory_used@@Base+0x11c08>
  439520:	ldur	x8, [x29, #-40]
  439524:	str	x8, [sp, #32]
  439528:	ldr	x8, [sp, #32]
  43952c:	stur	x8, [x29, #-104]
  439530:	ldur	x8, [x29, #-16]
  439534:	ldr	x8, [x8, #184]
  439538:	str	x8, [sp, #80]
  43953c:	ldur	x8, [x29, #-16]
  439540:	ldr	x8, [x8, #72]
  439544:	stur	x8, [x29, #-96]
  439548:	ldur	x8, [x29, #-24]
  43954c:	ldr	x8, [x8, #16]
  439550:	ldur	x9, [x29, #-16]
  439554:	str	x8, [x9, #184]
  439558:	ldur	x8, [x29, #-104]
  43955c:	ldur	x9, [x29, #-16]
  439560:	str	x8, [x9, #72]
  439564:	ldur	x0, [x29, #-16]
  439568:	ldur	x8, [x29, #-104]
  43956c:	subs	x1, x8, #0x1
  439570:	ldur	x8, [x29, #-16]
  439574:	ldr	w2, [x8, #160]
  439578:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  43957c:	str	w0, [sp, #76]
  439580:	ldur	x8, [x29, #-104]
  439584:	ldur	x9, [x29, #-40]
  439588:	cmp	x8, x9
  43958c:	b.ne	439618 <_obstack_memory_used@@Base+0x11cf8>  // b.any
  439590:	ldur	x1, [x29, #-32]
  439594:	add	x0, sp, #0x58
  439598:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  43959c:	stur	w0, [x29, #-76]
  4395a0:	ldur	w8, [x29, #-76]
  4395a4:	cmp	w8, #0x0
  4395a8:	cset	w8, ne  // ne = any
  4395ac:	and	w8, w8, #0x1
  4395b0:	mov	w1, w8
  4395b4:	sxtw	x9, w1
  4395b8:	cbz	x9, 4395c8 <_obstack_memory_used@@Base+0x11ca8>
  4395bc:	ldur	w8, [x29, #-76]
  4395c0:	stur	w8, [x29, #-4]
  4395c4:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  4395c8:	ldur	x0, [x29, #-72]
  4395cc:	ldur	x2, [x29, #-88]
  4395d0:	ldur	w3, [x29, #-60]
  4395d4:	add	x1, sp, #0x58
  4395d8:	bl	439ed4 <_obstack_memory_used@@Base+0x125b4>
  4395dc:	stur	w0, [x29, #-76]
  4395e0:	ldur	w8, [x29, #-76]
  4395e4:	cmp	w8, #0x0
  4395e8:	cset	w8, ne  // ne = any
  4395ec:	and	w8, w8, #0x1
  4395f0:	mov	w1, w8
  4395f4:	sxtw	x9, w1
  4395f8:	cbz	x9, 439614 <_obstack_memory_used@@Base+0x11cf4>
  4395fc:	add	x8, sp, #0x58
  439600:	ldr	x0, [x8, #16]
  439604:	bl	4026c0 <free@plt>
  439608:	ldur	w9, [x29, #-76]
  43960c:	stur	w9, [x29, #-4]
  439610:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439614:	b	4396a8 <_obstack_memory_used@@Base+0x11d88>
  439618:	ldur	x8, [x29, #-16]
  43961c:	ldr	x8, [x8, #184]
  439620:	ldur	x9, [x29, #-104]
  439624:	mov	x10, #0x8                   	// #8
  439628:	mul	x9, x10, x9
  43962c:	add	x8, x8, x9
  439630:	ldr	x8, [x8]
  439634:	str	x8, [sp, #120]
  439638:	ldr	x8, [sp, #120]
  43963c:	cbz	x8, 43969c <_obstack_memory_used@@Base+0x11d7c>
  439640:	ldr	x8, [sp, #120]
  439644:	ldrb	w9, [x8, #104]
  439648:	mov	w10, #0x6                   	// #6
  43964c:	lsr	w9, w9, w10
  439650:	and	w9, w9, #0x1
  439654:	and	w9, w9, #0xff
  439658:	cbz	w9, 43969c <_obstack_memory_used@@Base+0x11d7c>
  43965c:	ldr	x8, [sp, #120]
  439660:	add	x1, x8, #0x8
  439664:	add	x0, sp, #0x58
  439668:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  43966c:	stur	w0, [x29, #-76]
  439670:	ldur	w9, [x29, #-76]
  439674:	cmp	w9, #0x0
  439678:	cset	w9, ne  // ne = any
  43967c:	and	w9, w9, #0x1
  439680:	mov	w1, w9
  439684:	sxtw	x8, w1
  439688:	cbz	x8, 439698 <_obstack_memory_used@@Base+0x11d78>
  43968c:	ldur	w8, [x29, #-76]
  439690:	stur	w8, [x29, #-4]
  439694:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439698:	b	4396a8 <_obstack_memory_used@@Base+0x11d88>
  43969c:	str	xzr, [sp, #88]
  4396a0:	str	xzr, [sp, #96]
  4396a4:	str	xzr, [sp, #104]
  4396a8:	ldur	x8, [x29, #-104]
  4396ac:	ldur	x9, [x29, #-40]
  4396b0:	cmp	x8, x9
  4396b4:	b.eq	4396dc <_obstack_memory_used@@Base+0x11dbc>  // b.none
  4396b8:	ldr	x8, [sp, #120]
  4396bc:	cbz	x8, 4397b8 <_obstack_memory_used@@Base+0x11e98>
  4396c0:	ldr	x8, [sp, #120]
  4396c4:	ldrb	w9, [x8, #104]
  4396c8:	mov	w10, #0x6                   	// #6
  4396cc:	lsr	w9, w9, w10
  4396d0:	and	w9, w9, #0x1
  4396d4:	and	w9, w9, #0xff
  4396d8:	cbz	w9, 4397b8 <_obstack_memory_used@@Base+0x11e98>
  4396dc:	ldr	x8, [sp, #96]
  4396e0:	cbz	x8, 439734 <_obstack_memory_used@@Base+0x11e14>
  4396e4:	ldur	x0, [x29, #-16]
  4396e8:	ldur	x2, [x29, #-104]
  4396ec:	ldur	x3, [x29, #-88]
  4396f0:	ldur	w4, [x29, #-60]
  4396f4:	add	x1, sp, #0x58
  4396f8:	bl	43a088 <_obstack_memory_used@@Base+0x12768>
  4396fc:	stur	w0, [x29, #-76]
  439700:	ldur	w8, [x29, #-76]
  439704:	cmp	w8, #0x0
  439708:	cset	w8, ne  // ne = any
  43970c:	and	w8, w8, #0x1
  439710:	mov	w1, w8
  439714:	sxtw	x9, w1
  439718:	cbz	x9, 439734 <_obstack_memory_used@@Base+0x11e14>
  43971c:	add	x8, sp, #0x58
  439720:	ldr	x0, [x8, #16]
  439724:	bl	4026c0 <free@plt>
  439728:	ldur	w9, [x29, #-76]
  43972c:	stur	w9, [x29, #-4]
  439730:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439734:	ldur	x1, [x29, #-72]
  439738:	ldr	w3, [sp, #76]
  43973c:	sub	x0, x29, #0x4c
  439740:	add	x2, sp, #0x58
  439744:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  439748:	str	x0, [sp, #120]
  43974c:	ldr	x8, [sp, #120]
  439750:	mov	w9, #0x0                   	// #0
  439754:	str	w9, [sp, #28]
  439758:	cbnz	x8, 43976c <_obstack_memory_used@@Base+0x11e4c>
  43975c:	ldur	w8, [x29, #-76]
  439760:	cmp	w8, #0x0
  439764:	cset	w8, ne  // ne = any
  439768:	str	w8, [sp, #28]
  43976c:	ldr	w8, [sp, #28]
  439770:	and	w8, w8, #0x1
  439774:	mov	w0, w8
  439778:	sxtw	x9, w0
  43977c:	cbz	x9, 439798 <_obstack_memory_used@@Base+0x11e78>
  439780:	add	x8, sp, #0x58
  439784:	ldr	x0, [x8, #16]
  439788:	bl	4026c0 <free@plt>
  43978c:	ldur	w9, [x29, #-76]
  439790:	stur	w9, [x29, #-4]
  439794:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439798:	ldr	x8, [sp, #120]
  43979c:	ldur	x9, [x29, #-16]
  4397a0:	ldr	x9, [x9, #184]
  4397a4:	ldur	x10, [x29, #-104]
  4397a8:	mov	x11, #0x8                   	// #8
  4397ac:	mul	x10, x11, x10
  4397b0:	add	x9, x9, x10
  4397b4:	str	x8, [x9]
  4397b8:	stur	xzr, [x29, #-112]
  4397bc:	ldur	x8, [x29, #-104]
  4397c0:	ldur	x9, [x29, #-56]
  4397c4:	mov	w10, #0x0                   	// #0
  4397c8:	cmp	x8, x9
  4397cc:	str	w10, [sp, #24]
  4397d0:	b.ge	4397ec <_obstack_memory_used@@Base+0x11ecc>  // b.tcont
  4397d4:	ldur	x8, [x29, #-112]
  4397d8:	ldur	x9, [x29, #-16]
  4397dc:	ldrsw	x9, [x9, #224]
  4397e0:	cmp	x8, x9
  4397e4:	cset	w10, le
  4397e8:	str	w10, [sp, #24]
  4397ec:	ldr	w8, [sp, #24]
  4397f0:	tbnz	w8, #0, 4397f8 <_obstack_memory_used@@Base+0x11ed8>
  4397f4:	b	439a58 <_obstack_memory_used@@Base+0x12138>
  4397f8:	mov	x8, #0x8                   	// #8
  4397fc:	str	xzr, [sp, #96]
  439800:	ldur	x9, [x29, #-16]
  439804:	ldr	x9, [x9, #184]
  439808:	ldur	x10, [x29, #-104]
  43980c:	add	x10, x10, #0x1
  439810:	mul	x8, x8, x10
  439814:	add	x8, x9, x8
  439818:	ldr	x8, [x8]
  43981c:	cbz	x8, 439884 <_obstack_memory_used@@Base+0x11f64>
  439820:	ldur	x8, [x29, #-16]
  439824:	ldr	x8, [x8, #184]
  439828:	ldur	x9, [x29, #-104]
  43982c:	add	x9, x9, #0x1
  439830:	mov	x10, #0x8                   	// #8
  439834:	mul	x9, x10, x9
  439838:	add	x8, x8, x9
  43983c:	ldr	x8, [x8]
  439840:	add	x1, x8, #0x8
  439844:	add	x0, sp, #0x58
  439848:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  43984c:	stur	w0, [x29, #-76]
  439850:	ldur	w11, [x29, #-76]
  439854:	cmp	w11, #0x0
  439858:	cset	w11, ne  // ne = any
  43985c:	and	w11, w11, #0x1
  439860:	mov	w1, w11
  439864:	sxtw	x8, w1
  439868:	cbz	x8, 439884 <_obstack_memory_used@@Base+0x11f64>
  43986c:	add	x8, sp, #0x58
  439870:	ldr	x0, [x8, #16]
  439874:	bl	4026c0 <free@plt>
  439878:	ldur	w9, [x29, #-76]
  43987c:	stur	w9, [x29, #-4]
  439880:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439884:	ldr	x8, [sp, #120]
  439888:	cbz	x8, 4398dc <_obstack_memory_used@@Base+0x11fbc>
  43988c:	ldur	x0, [x29, #-16]
  439890:	ldur	x1, [x29, #-104]
  439894:	ldr	x8, [sp, #120]
  439898:	add	x2, x8, #0x20
  43989c:	add	x3, sp, #0x58
  4398a0:	bl	43a4c8 <_obstack_memory_used@@Base+0x12ba8>
  4398a4:	stur	w0, [x29, #-76]
  4398a8:	ldur	w9, [x29, #-76]
  4398ac:	cmp	w9, #0x0
  4398b0:	cset	w9, ne  // ne = any
  4398b4:	and	w9, w9, #0x1
  4398b8:	mov	w1, w9
  4398bc:	sxtw	x8, w1
  4398c0:	cbz	x8, 4398dc <_obstack_memory_used@@Base+0x11fbc>
  4398c4:	add	x8, sp, #0x58
  4398c8:	ldr	x0, [x8, #16]
  4398cc:	bl	4026c0 <free@plt>
  4398d0:	ldur	w9, [x29, #-76]
  4398d4:	stur	w9, [x29, #-4]
  4398d8:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  4398dc:	ldur	x8, [x29, #-104]
  4398e0:	add	x8, x8, #0x1
  4398e4:	stur	x8, [x29, #-104]
  4398e8:	ldr	x8, [sp, #96]
  4398ec:	cbz	x8, 43998c <_obstack_memory_used@@Base+0x1206c>
  4398f0:	ldur	x0, [x29, #-72]
  4398f4:	ldur	x2, [x29, #-88]
  4398f8:	ldur	w3, [x29, #-60]
  4398fc:	add	x1, sp, #0x58
  439900:	bl	439ed4 <_obstack_memory_used@@Base+0x125b4>
  439904:	stur	w0, [x29, #-76]
  439908:	ldur	w8, [x29, #-76]
  43990c:	cmp	w8, #0x0
  439910:	cset	w8, ne  // ne = any
  439914:	and	w8, w8, #0x1
  439918:	mov	w1, w8
  43991c:	sxtw	x9, w1
  439920:	cbz	x9, 43993c <_obstack_memory_used@@Base+0x1201c>
  439924:	add	x8, sp, #0x58
  439928:	ldr	x0, [x8, #16]
  43992c:	bl	4026c0 <free@plt>
  439930:	ldur	w9, [x29, #-76]
  439934:	stur	w9, [x29, #-4]
  439938:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  43993c:	ldur	x0, [x29, #-16]
  439940:	ldur	x2, [x29, #-104]
  439944:	ldur	x3, [x29, #-88]
  439948:	ldur	w4, [x29, #-60]
  43994c:	add	x1, sp, #0x58
  439950:	bl	43a088 <_obstack_memory_used@@Base+0x12768>
  439954:	stur	w0, [x29, #-76]
  439958:	ldur	w8, [x29, #-76]
  43995c:	cmp	w8, #0x0
  439960:	cset	w8, ne  // ne = any
  439964:	and	w8, w8, #0x1
  439968:	mov	w1, w8
  43996c:	sxtw	x9, w1
  439970:	cbz	x9, 43998c <_obstack_memory_used@@Base+0x1206c>
  439974:	add	x8, sp, #0x58
  439978:	ldr	x0, [x8, #16]
  43997c:	bl	4026c0 <free@plt>
  439980:	ldur	w9, [x29, #-76]
  439984:	stur	w9, [x29, #-4]
  439988:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  43998c:	ldur	x0, [x29, #-16]
  439990:	ldur	x8, [x29, #-104]
  439994:	subs	x1, x8, #0x1
  439998:	ldur	x8, [x29, #-16]
  43999c:	ldr	w2, [x8, #160]
  4399a0:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  4399a4:	str	w0, [sp, #76]
  4399a8:	ldur	x1, [x29, #-72]
  4399ac:	ldr	w3, [sp, #76]
  4399b0:	sub	x0, x29, #0x4c
  4399b4:	add	x2, sp, #0x58
  4399b8:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  4399bc:	str	x0, [sp, #120]
  4399c0:	ldr	x8, [sp, #120]
  4399c4:	mov	w9, #0x0                   	// #0
  4399c8:	str	w9, [sp, #20]
  4399cc:	cbnz	x8, 4399e0 <_obstack_memory_used@@Base+0x120c0>
  4399d0:	ldur	w8, [x29, #-76]
  4399d4:	cmp	w8, #0x0
  4399d8:	cset	w8, ne  // ne = any
  4399dc:	str	w8, [sp, #20]
  4399e0:	ldr	w8, [sp, #20]
  4399e4:	and	w8, w8, #0x1
  4399e8:	mov	w0, w8
  4399ec:	sxtw	x9, w0
  4399f0:	cbz	x9, 439a0c <_obstack_memory_used@@Base+0x120ec>
  4399f4:	add	x8, sp, #0x58
  4399f8:	ldr	x0, [x8, #16]
  4399fc:	bl	4026c0 <free@plt>
  439a00:	ldur	w9, [x29, #-76]
  439a04:	stur	w9, [x29, #-4]
  439a08:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439a0c:	ldr	x8, [sp, #120]
  439a10:	ldur	x9, [x29, #-16]
  439a14:	ldr	x9, [x9, #184]
  439a18:	ldur	x10, [x29, #-104]
  439a1c:	mov	x11, #0x8                   	// #8
  439a20:	mul	x10, x11, x10
  439a24:	add	x9, x9, x10
  439a28:	str	x8, [x9]
  439a2c:	ldr	x8, [sp, #120]
  439a30:	cbnz	x8, 439a44 <_obstack_memory_used@@Base+0x12124>
  439a34:	ldur	x8, [x29, #-112]
  439a38:	add	x8, x8, #0x1
  439a3c:	str	x8, [sp, #8]
  439a40:	b	439a4c <_obstack_memory_used@@Base+0x1212c>
  439a44:	mov	x8, xzr
  439a48:	str	x8, [sp, #8]
  439a4c:	ldr	x8, [sp, #8]
  439a50:	stur	x8, [x29, #-112]
  439a54:	b	4397bc <_obstack_memory_used@@Base+0x11e9c>
  439a58:	add	x8, sp, #0x58
  439a5c:	ldr	x0, [x8, #16]
  439a60:	bl	4026c0 <free@plt>
  439a64:	ldur	x8, [x29, #-16]
  439a68:	ldr	x8, [x8, #184]
  439a6c:	ldur	x9, [x29, #-56]
  439a70:	mov	x10, #0x8                   	// #8
  439a74:	mul	x9, x10, x9
  439a78:	add	x8, x8, x9
  439a7c:	ldr	x8, [x8]
  439a80:	cbnz	x8, 439a90 <_obstack_memory_used@@Base+0x12170>
  439a84:	mov	x8, xzr
  439a88:	str	x8, [sp]
  439a8c:	b	439ab4 <_obstack_memory_used@@Base+0x12194>
  439a90:	ldur	x8, [x29, #-16]
  439a94:	ldr	x8, [x8, #184]
  439a98:	ldur	x9, [x29, #-56]
  439a9c:	mov	x10, #0x8                   	// #8
  439aa0:	mul	x9, x10, x9
  439aa4:	add	x8, x8, x9
  439aa8:	ldr	x8, [x8]
  439aac:	add	x8, x8, #0x8
  439ab0:	str	x8, [sp]
  439ab4:	ldr	x8, [sp]
  439ab8:	str	x8, [sp, #112]
  439abc:	ldur	x8, [x29, #-104]
  439ac0:	ldur	x9, [x29, #-24]
  439ac4:	str	x8, [x9]
  439ac8:	ldr	x8, [sp, #80]
  439acc:	ldur	x9, [x29, #-16]
  439ad0:	str	x8, [x9, #184]
  439ad4:	ldur	x8, [x29, #-96]
  439ad8:	ldur	x9, [x29, #-16]
  439adc:	str	x8, [x9, #72]
  439ae0:	ldr	x8, [sp, #112]
  439ae4:	cbz	x8, 439b00 <_obstack_memory_used@@Base+0x121e0>
  439ae8:	ldr	x0, [sp, #112]
  439aec:	ldur	x1, [x29, #-48]
  439af0:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  439af4:	cbz	x0, 439b00 <_obstack_memory_used@@Base+0x121e0>
  439af8:	stur	wzr, [x29, #-4]
  439afc:	b	439b08 <_obstack_memory_used@@Base+0x121e8>
  439b00:	mov	w8, #0x1                   	// #1
  439b04:	stur	w8, [x29, #-4]
  439b08:	ldur	w0, [x29, #-4]
  439b0c:	ldp	x29, x30, [sp, #240]
  439b10:	add	sp, sp, #0x100
  439b14:	ret
  439b18:	sub	sp, sp, #0x50
  439b1c:	stp	x29, x30, [sp, #64]
  439b20:	add	x29, sp, #0x40
  439b24:	stur	x0, [x29, #-16]
  439b28:	stur	x1, [x29, #-24]
  439b2c:	str	x2, [sp, #32]
  439b30:	ldur	x8, [x29, #-16]
  439b34:	ldr	x8, [x8, #32]
  439b38:	ldur	x9, [x29, #-16]
  439b3c:	ldr	x9, [x9, #24]
  439b40:	cmp	x8, x9
  439b44:	cset	w10, eq  // eq = none
  439b48:	and	w10, w10, #0x1
  439b4c:	mov	w0, w10
  439b50:	sxtw	x8, w0
  439b54:	cbz	x8, 439bcc <_obstack_memory_used@@Base+0x122ac>
  439b58:	ldur	x8, [x29, #-16]
  439b5c:	ldr	x8, [x8, #24]
  439b60:	mov	x9, #0x2                   	// #2
  439b64:	mul	x8, x9, x8
  439b68:	add	x8, x8, #0x1
  439b6c:	str	x8, [sp, #16]
  439b70:	ldur	x8, [x29, #-16]
  439b74:	ldr	x0, [x8, #40]
  439b78:	ldr	x8, [sp, #16]
  439b7c:	mov	x9, #0x8                   	// #8
  439b80:	mul	x1, x8, x9
  439b84:	bl	402570 <realloc@plt>
  439b88:	str	x0, [sp, #8]
  439b8c:	ldr	x8, [sp, #8]
  439b90:	cmp	x8, #0x0
  439b94:	cset	w10, eq  // eq = none
  439b98:	and	w10, w10, #0x1
  439b9c:	mov	w0, w10
  439ba0:	sxtw	x8, w0
  439ba4:	cbz	x8, 439bb4 <_obstack_memory_used@@Base+0x12294>
  439ba8:	mov	x8, xzr
  439bac:	stur	x8, [x29, #-8]
  439bb0:	b	439c4c <_obstack_memory_used@@Base+0x1232c>
  439bb4:	ldr	x8, [sp, #8]
  439bb8:	ldur	x9, [x29, #-16]
  439bbc:	str	x8, [x9, #40]
  439bc0:	ldr	x8, [sp, #16]
  439bc4:	ldur	x9, [x29, #-16]
  439bc8:	str	x8, [x9, #24]
  439bcc:	mov	x0, #0x1                   	// #1
  439bd0:	mov	x1, #0x28                  	// #40
  439bd4:	bl	402540 <calloc@plt>
  439bd8:	str	x0, [sp, #24]
  439bdc:	ldr	x8, [sp, #24]
  439be0:	cmp	x8, #0x0
  439be4:	cset	w9, ne  // ne = any
  439be8:	and	w9, w9, #0x1
  439bec:	mov	w0, w9
  439bf0:	sxtw	x8, w0
  439bf4:	cbz	x8, 439c44 <_obstack_memory_used@@Base+0x12324>
  439bf8:	ldr	x8, [sp, #24]
  439bfc:	ldur	x9, [x29, #-16]
  439c00:	ldr	x9, [x9, #40]
  439c04:	ldur	x10, [x29, #-16]
  439c08:	ldr	x10, [x10, #32]
  439c0c:	mov	x11, #0x8                   	// #8
  439c10:	mul	x10, x11, x10
  439c14:	add	x9, x9, x10
  439c18:	str	x8, [x9]
  439c1c:	ldur	x8, [x29, #-24]
  439c20:	ldr	x9, [sp, #24]
  439c24:	str	x8, [x9]
  439c28:	ldr	x8, [sp, #32]
  439c2c:	ldr	x9, [sp, #24]
  439c30:	str	x8, [x9, #8]
  439c34:	ldur	x8, [x29, #-16]
  439c38:	ldr	x9, [x8, #32]
  439c3c:	add	x9, x9, #0x1
  439c40:	str	x9, [x8, #32]
  439c44:	ldr	x8, [sp, #24]
  439c48:	stur	x8, [x29, #-8]
  439c4c:	ldur	x0, [x29, #-8]
  439c50:	ldp	x29, x30, [sp, #64]
  439c54:	add	sp, sp, #0x50
  439c58:	ret
  439c5c:	sub	sp, sp, #0x50
  439c60:	stp	x29, x30, [sp, #64]
  439c64:	add	x29, sp, #0x40
  439c68:	stur	x0, [x29, #-16]
  439c6c:	stur	x1, [x29, #-24]
  439c70:	str	x2, [sp, #32]
  439c74:	str	x3, [sp, #24]
  439c78:	str	x4, [sp, #16]
  439c7c:	ldur	x8, [x29, #-16]
  439c80:	ldr	x8, [x8, #200]
  439c84:	ldur	x9, [x29, #-16]
  439c88:	ldr	x9, [x9, #208]
  439c8c:	cmp	x8, x9
  439c90:	b.lt	439d48 <_obstack_memory_used@@Base+0x12428>  // b.tstop
  439c94:	ldur	x8, [x29, #-16]
  439c98:	ldr	x0, [x8, #216]
  439c9c:	ldur	x8, [x29, #-16]
  439ca0:	ldr	x8, [x8, #208]
  439ca4:	mov	x9, #0x2                   	// #2
  439ca8:	mul	x8, x8, x9
  439cac:	mov	x9, #0x28                  	// #40
  439cb0:	mul	x1, x8, x9
  439cb4:	bl	402570 <realloc@plt>
  439cb8:	str	x0, [sp, #8]
  439cbc:	ldr	x8, [sp, #8]
  439cc0:	cmp	x8, #0x0
  439cc4:	cset	w10, eq  // eq = none
  439cc8:	and	w10, w10, #0x1
  439ccc:	mov	w0, w10
  439cd0:	sxtw	x8, w0
  439cd4:	cbz	x8, 439cf0 <_obstack_memory_used@@Base+0x123d0>
  439cd8:	ldur	x8, [x29, #-16]
  439cdc:	ldr	x0, [x8, #216]
  439ce0:	bl	4026c0 <free@plt>
  439ce4:	mov	w9, #0xc                   	// #12
  439ce8:	stur	w9, [x29, #-4]
  439cec:	b	439ec4 <_obstack_memory_used@@Base+0x125a4>
  439cf0:	ldr	x8, [sp, #8]
  439cf4:	ldur	x9, [x29, #-16]
  439cf8:	str	x8, [x9, #216]
  439cfc:	ldur	x8, [x29, #-16]
  439d00:	ldr	x8, [x8, #216]
  439d04:	ldur	x9, [x29, #-16]
  439d08:	ldr	x9, [x9, #200]
  439d0c:	mov	x10, #0x28                  	// #40
  439d10:	mul	x9, x10, x9
  439d14:	add	x0, x8, x9
  439d18:	ldur	x8, [x29, #-16]
  439d1c:	ldr	x8, [x8, #208]
  439d20:	mov	x9, #0x28                  	// #40
  439d24:	mul	x2, x9, x8
  439d28:	mov	w11, wzr
  439d2c:	mov	w1, w11
  439d30:	bl	402520 <memset@plt>
  439d34:	ldur	x8, [x29, #-16]
  439d38:	ldr	x9, [x8, #208]
  439d3c:	mov	x10, #0x2                   	// #2
  439d40:	mul	x9, x9, x10
  439d44:	str	x9, [x8, #208]
  439d48:	ldur	x8, [x29, #-16]
  439d4c:	ldr	x8, [x8, #200]
  439d50:	cmp	x8, #0x0
  439d54:	cset	w9, le
  439d58:	tbnz	w9, #0, 439db4 <_obstack_memory_used@@Base+0x12494>
  439d5c:	ldur	x8, [x29, #-16]
  439d60:	ldr	x8, [x8, #216]
  439d64:	ldur	x9, [x29, #-16]
  439d68:	ldr	x9, [x9, #200]
  439d6c:	subs	x9, x9, #0x1
  439d70:	mov	x10, #0x28                  	// #40
  439d74:	mul	x9, x10, x9
  439d78:	add	x8, x8, x9
  439d7c:	ldr	x8, [x8, #8]
  439d80:	ldr	x9, [sp, #32]
  439d84:	cmp	x8, x9
  439d88:	b.ne	439db4 <_obstack_memory_used@@Base+0x12494>  // b.any
  439d8c:	ldur	x8, [x29, #-16]
  439d90:	ldr	x8, [x8, #216]
  439d94:	ldur	x9, [x29, #-16]
  439d98:	ldr	x9, [x9, #200]
  439d9c:	subs	x9, x9, #0x1
  439da0:	mov	x10, #0x28                  	// #40
  439da4:	mul	x9, x10, x9
  439da8:	add	x8, x8, x9
  439dac:	mov	w11, #0x1                   	// #1
  439db0:	strb	w11, [x8, #32]
  439db4:	ldur	x8, [x29, #-24]
  439db8:	ldur	x9, [x29, #-16]
  439dbc:	ldr	x9, [x9, #216]
  439dc0:	ldur	x10, [x29, #-16]
  439dc4:	ldr	x10, [x10, #200]
  439dc8:	mov	x11, #0x28                  	// #40
  439dcc:	mul	x10, x11, x10
  439dd0:	str	x8, [x9, x10]
  439dd4:	ldr	x8, [sp, #32]
  439dd8:	ldur	x9, [x29, #-16]
  439ddc:	ldr	x9, [x9, #216]
  439de0:	ldur	x10, [x29, #-16]
  439de4:	ldr	x10, [x10, #200]
  439de8:	mul	x10, x11, x10
  439dec:	add	x9, x9, x10
  439df0:	str	x8, [x9, #8]
  439df4:	ldr	x8, [sp, #24]
  439df8:	ldur	x9, [x29, #-16]
  439dfc:	ldr	x9, [x9, #216]
  439e00:	ldur	x10, [x29, #-16]
  439e04:	ldr	x10, [x10, #200]
  439e08:	mul	x10, x11, x10
  439e0c:	add	x9, x9, x10
  439e10:	str	x8, [x9, #16]
  439e14:	ldr	x8, [sp, #16]
  439e18:	ldur	x9, [x29, #-16]
  439e1c:	ldr	x9, [x9, #216]
  439e20:	ldur	x10, [x29, #-16]
  439e24:	ldr	x10, [x10, #200]
  439e28:	mul	x10, x11, x10
  439e2c:	add	x9, x9, x10
  439e30:	str	x8, [x9, #24]
  439e34:	ldr	x8, [sp, #24]
  439e38:	ldr	x9, [sp, #16]
  439e3c:	mov	w12, wzr
  439e40:	mov	w13, #0xffffffff            	// #-1
  439e44:	cmp	x8, x9
  439e48:	csel	w12, w13, w12, eq  // eq = none
  439e4c:	ldur	x8, [x29, #-16]
  439e50:	ldr	x8, [x8, #216]
  439e54:	ldur	x9, [x29, #-16]
  439e58:	ldr	x9, [x9, #200]
  439e5c:	mul	x9, x11, x9
  439e60:	add	x8, x8, x9
  439e64:	strh	w12, [x8, #34]
  439e68:	ldur	x8, [x29, #-16]
  439e6c:	ldr	x8, [x8, #216]
  439e70:	ldur	x9, [x29, #-16]
  439e74:	ldr	x10, [x9, #200]
  439e78:	add	x14, x10, #0x1
  439e7c:	str	x14, [x9, #200]
  439e80:	mul	x9, x11, x10
  439e84:	add	x8, x8, x9
  439e88:	mov	w12, #0x0                   	// #0
  439e8c:	strb	w12, [x8, #32]
  439e90:	ldur	x8, [x29, #-16]
  439e94:	ldrsw	x8, [x8, #224]
  439e98:	ldr	x9, [sp, #16]
  439e9c:	ldr	x10, [sp, #24]
  439ea0:	subs	x9, x9, x10
  439ea4:	cmp	x8, x9
  439ea8:	b.ge	439ec0 <_obstack_memory_used@@Base+0x125a0>  // b.tcont
  439eac:	ldr	x8, [sp, #16]
  439eb0:	ldr	x9, [sp, #24]
  439eb4:	subs	x8, x8, x9
  439eb8:	ldur	x9, [x29, #-16]
  439ebc:	str	w8, [x9, #224]
  439ec0:	stur	wzr, [x29, #-4]
  439ec4:	ldur	w0, [x29, #-4]
  439ec8:	ldp	x29, x30, [sp, #64]
  439ecc:	add	sp, sp, #0x50
  439ed0:	ret
  439ed4:	sub	sp, sp, #0x70
  439ed8:	stp	x29, x30, [sp, #96]
  439edc:	add	x29, sp, #0x60
  439ee0:	stur	x0, [x29, #-16]
  439ee4:	stur	x1, [x29, #-24]
  439ee8:	stur	x2, [x29, #-32]
  439eec:	stur	w3, [x29, #-36]
  439ef0:	ldur	x8, [x29, #-24]
  439ef4:	ldr	x8, [x8, #8]
  439ef8:	cbz	x8, 439f00 <_obstack_memory_used@@Base+0x125e0>
  439efc:	b	439f00 <_obstack_memory_used@@Base+0x125e0>
  439f00:	ldur	x8, [x29, #-24]
  439f04:	ldr	x1, [x8, #8]
  439f08:	add	x0, sp, #0x10
  439f0c:	bl	433718 <_obstack_memory_used@@Base+0xbdf8>
  439f10:	stur	w0, [x29, #-40]
  439f14:	ldur	w9, [x29, #-40]
  439f18:	cmp	w9, #0x0
  439f1c:	cset	w9, ne  // ne = any
  439f20:	and	w9, w9, #0x1
  439f24:	mov	w1, w9
  439f28:	sxtw	x8, w1
  439f2c:	cbz	x8, 439f3c <_obstack_memory_used@@Base+0x1261c>
  439f30:	ldur	w8, [x29, #-40]
  439f34:	stur	w8, [x29, #-4]
  439f38:	b	43a078 <_obstack_memory_used@@Base+0x12758>
  439f3c:	str	xzr, [sp, #48]
  439f40:	ldr	x8, [sp, #48]
  439f44:	ldur	x9, [x29, #-24]
  439f48:	ldr	x9, [x9, #8]
  439f4c:	cmp	x8, x9
  439f50:	b.ge	43a054 <_obstack_memory_used@@Base+0x12734>  // b.tcont
  439f54:	ldur	x8, [x29, #-24]
  439f58:	ldr	x8, [x8, #16]
  439f5c:	ldr	x9, [sp, #48]
  439f60:	ldr	x8, [x8, x9, lsl #3]
  439f64:	str	x8, [sp, #8]
  439f68:	ldur	x8, [x29, #-16]
  439f6c:	ldr	x8, [x8, #48]
  439f70:	ldr	x9, [sp, #8]
  439f74:	mov	x10, #0x18                  	// #24
  439f78:	mul	x9, x10, x9
  439f7c:	add	x8, x8, x9
  439f80:	str	x8, [sp]
  439f84:	ldur	x0, [x29, #-16]
  439f88:	ldr	x1, [sp]
  439f8c:	ldur	x2, [x29, #-32]
  439f90:	ldur	w3, [x29, #-36]
  439f94:	bl	439294 <_obstack_memory_used@@Base+0x11974>
  439f98:	str	x0, [sp, #40]
  439f9c:	ldr	x8, [sp, #40]
  439fa0:	mov	x9, #0xffffffffffffffff    	// #-1
  439fa4:	cmp	x8, x9
  439fa8:	b.ne	439ff4 <_obstack_memory_used@@Base+0x126d4>  // b.any
  439fac:	ldr	x1, [sp]
  439fb0:	add	x0, sp, #0x10
  439fb4:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  439fb8:	stur	w0, [x29, #-40]
  439fbc:	ldur	w8, [x29, #-40]
  439fc0:	cmp	w8, #0x0
  439fc4:	cset	w8, ne  // ne = any
  439fc8:	and	w8, w8, #0x1
  439fcc:	mov	w1, w8
  439fd0:	sxtw	x9, w1
  439fd4:	cbz	x9, 439ff0 <_obstack_memory_used@@Base+0x126d0>
  439fd8:	add	x8, sp, #0x10
  439fdc:	ldr	x0, [x8, #16]
  439fe0:	bl	4026c0 <free@plt>
  439fe4:	ldur	w9, [x29, #-40]
  439fe8:	stur	w9, [x29, #-4]
  439fec:	b	43a078 <_obstack_memory_used@@Base+0x12758>
  439ff0:	b	43a044 <_obstack_memory_used@@Base+0x12724>
  439ff4:	ldur	x0, [x29, #-16]
  439ff8:	ldr	x2, [sp, #8]
  439ffc:	ldur	x3, [x29, #-32]
  43a000:	ldur	w4, [x29, #-36]
  43a004:	add	x1, sp, #0x10
  43a008:	bl	43a7cc <_obstack_memory_used@@Base+0x12eac>
  43a00c:	stur	w0, [x29, #-40]
  43a010:	ldur	w8, [x29, #-40]
  43a014:	cmp	w8, #0x0
  43a018:	cset	w8, ne  // ne = any
  43a01c:	and	w8, w8, #0x1
  43a020:	mov	w1, w8
  43a024:	sxtw	x9, w1
  43a028:	cbz	x9, 43a044 <_obstack_memory_used@@Base+0x12724>
  43a02c:	add	x8, sp, #0x10
  43a030:	ldr	x0, [x8, #16]
  43a034:	bl	4026c0 <free@plt>
  43a038:	ldur	w9, [x29, #-40]
  43a03c:	stur	w9, [x29, #-4]
  43a040:	b	43a078 <_obstack_memory_used@@Base+0x12758>
  43a044:	ldr	x8, [sp, #48]
  43a048:	add	x8, x8, #0x1
  43a04c:	str	x8, [sp, #48]
  43a050:	b	439f40 <_obstack_memory_used@@Base+0x12620>
  43a054:	ldur	x8, [x29, #-24]
  43a058:	ldr	x0, [x8, #16]
  43a05c:	bl	4026c0 <free@plt>
  43a060:	ldur	x8, [x29, #-24]
  43a064:	ldr	q0, [sp, #16]
  43a068:	str	q0, [x8]
  43a06c:	ldr	x9, [sp, #32]
  43a070:	str	x9, [x8, #16]
  43a074:	stur	wzr, [x29, #-4]
  43a078:	ldur	w0, [x29, #-4]
  43a07c:	ldp	x29, x30, [sp, #96]
  43a080:	add	sp, sp, #0x70
  43a084:	ret
  43a088:	sub	sp, sp, #0x100
  43a08c:	stp	x29, x30, [sp, #240]
  43a090:	add	x29, sp, #0xf0
  43a094:	sub	x8, x29, #0x18
  43a098:	mov	x9, #0xffffffffffffffff    	// #-1
  43a09c:	str	x0, [x8, #8]
  43a0a0:	str	x1, [x8]
  43a0a4:	stur	x2, [x29, #-32]
  43a0a8:	stur	x3, [x29, #-40]
  43a0ac:	stur	w4, [x29, #-44]
  43a0b0:	ldr	x10, [x8, #8]
  43a0b4:	ldr	x10, [x10, #152]
  43a0b8:	stur	x10, [x29, #-56]
  43a0bc:	ldr	x0, [x8, #8]
  43a0c0:	ldur	x1, [x29, #-32]
  43a0c4:	str	x8, [sp, #72]
  43a0c8:	str	x9, [sp, #64]
  43a0cc:	bl	438f9c <_obstack_memory_used@@Base+0x1167c>
  43a0d0:	stur	x0, [x29, #-72]
  43a0d4:	ldur	x8, [x29, #-72]
  43a0d8:	ldr	x9, [sp, #64]
  43a0dc:	cmp	x8, x9
  43a0e0:	b.ne	43a0f0 <_obstack_memory_used@@Base+0x127d0>  // b.any
  43a0e4:	ldr	x8, [sp, #72]
  43a0e8:	str	wzr, [x8, #20]
  43a0ec:	b	43a4b4 <_obstack_memory_used@@Base+0x12b94>
  43a0f0:	ldr	x8, [sp, #72]
  43a0f4:	ldr	x9, [x8, #8]
  43a0f8:	ldr	x9, [x9, #216]
  43a0fc:	ldur	x10, [x29, #-72]
  43a100:	mov	x11, #0x28                  	// #40
  43a104:	mul	x10, x11, x10
  43a108:	add	x9, x9, x10
  43a10c:	stur	x9, [x29, #-80]
  43a110:	ldr	x8, [sp, #72]
  43a114:	ldr	x0, [x8]
  43a118:	ldur	x9, [x29, #-80]
  43a11c:	ldr	x1, [x9]
  43a120:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43a124:	cbnz	x0, 43a12c <_obstack_memory_used@@Base+0x1280c>
  43a128:	b	43a498 <_obstack_memory_used@@Base+0x12b78>
  43a12c:	ldur	x8, [x29, #-32]
  43a130:	ldur	x9, [x29, #-80]
  43a134:	ldr	x9, [x9, #24]
  43a138:	add	x8, x8, x9
  43a13c:	ldur	x9, [x29, #-80]
  43a140:	ldr	x9, [x9, #16]
  43a144:	subs	x8, x8, x9
  43a148:	stur	x8, [x29, #-88]
  43a14c:	ldur	x8, [x29, #-88]
  43a150:	ldur	x9, [x29, #-32]
  43a154:	cmp	x8, x9
  43a158:	b.ne	43a284 <_obstack_memory_used@@Base+0x12964>  // b.any
  43a15c:	ldur	x8, [x29, #-56]
  43a160:	ldr	x8, [x8, #40]
  43a164:	ldur	x9, [x29, #-80]
  43a168:	ldr	x9, [x9]
  43a16c:	mov	x10, #0x18                  	// #24
  43a170:	mul	x9, x10, x9
  43a174:	add	x8, x8, x9
  43a178:	ldr	x8, [x8, #16]
  43a17c:	ldr	x8, [x8]
  43a180:	stur	x8, [x29, #-96]
  43a184:	ldr	x8, [sp, #72]
  43a188:	ldr	x0, [x8]
  43a18c:	ldur	x1, [x29, #-96]
  43a190:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43a194:	cbz	x0, 43a19c <_obstack_memory_used@@Base+0x1287c>
  43a198:	b	43a498 <_obstack_memory_used@@Base+0x12b78>
  43a19c:	ldur	x1, [x29, #-96]
  43a1a0:	add	x8, sp, #0x78
  43a1a4:	mov	x0, x8
  43a1a8:	str	x8, [sp, #56]
  43a1ac:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  43a1b0:	stur	w0, [x29, #-60]
  43a1b4:	ldur	x0, [x29, #-56]
  43a1b8:	ldur	x2, [x29, #-40]
  43a1bc:	ldur	w3, [x29, #-44]
  43a1c0:	ldr	x1, [sp, #56]
  43a1c4:	bl	439ed4 <_obstack_memory_used@@Base+0x125b4>
  43a1c8:	str	w0, [sp, #116]
  43a1cc:	ldr	x8, [sp, #72]
  43a1d0:	ldr	x0, [x8]
  43a1d4:	ldr	x1, [sp, #56]
  43a1d8:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  43a1dc:	str	w0, [sp, #112]
  43a1e0:	ldr	x8, [sp, #56]
  43a1e4:	ldr	x0, [x8, #16]
  43a1e8:	bl	4026c0 <free@plt>
  43a1ec:	ldur	w9, [x29, #-60]
  43a1f0:	mov	w10, #0x1                   	// #1
  43a1f4:	str	w10, [sp, #52]
  43a1f8:	cbnz	w9, 43a21c <_obstack_memory_used@@Base+0x128fc>
  43a1fc:	ldr	w8, [sp, #116]
  43a200:	mov	w9, #0x1                   	// #1
  43a204:	str	w9, [sp, #52]
  43a208:	cbnz	w8, 43a21c <_obstack_memory_used@@Base+0x128fc>
  43a20c:	ldr	w8, [sp, #112]
  43a210:	cmp	w8, #0x0
  43a214:	cset	w8, ne  // ne = any
  43a218:	str	w8, [sp, #52]
  43a21c:	ldr	w8, [sp, #52]
  43a220:	and	w8, w8, #0x1
  43a224:	mov	w0, w8
  43a228:	sxtw	x9, w0
  43a22c:	cbz	x9, 43a280 <_obstack_memory_used@@Base+0x12960>
  43a230:	ldur	w8, [x29, #-60]
  43a234:	cbz	w8, 43a244 <_obstack_memory_used@@Base+0x12924>
  43a238:	ldur	w8, [x29, #-60]
  43a23c:	str	w8, [sp, #48]
  43a240:	b	43a268 <_obstack_memory_used@@Base+0x12948>
  43a244:	ldr	w8, [sp, #116]
  43a248:	cbz	w8, 43a258 <_obstack_memory_used@@Base+0x12938>
  43a24c:	ldr	w8, [sp, #116]
  43a250:	str	w8, [sp, #44]
  43a254:	b	43a260 <_obstack_memory_used@@Base+0x12940>
  43a258:	ldr	w8, [sp, #112]
  43a25c:	str	w8, [sp, #44]
  43a260:	ldr	w8, [sp, #44]
  43a264:	str	w8, [sp, #48]
  43a268:	ldr	w8, [sp, #48]
  43a26c:	stur	w8, [x29, #-60]
  43a270:	ldur	w8, [x29, #-60]
  43a274:	ldr	x9, [sp, #72]
  43a278:	str	w8, [x9, #20]
  43a27c:	b	43a4b4 <_obstack_memory_used@@Base+0x12b94>
  43a280:	b	43a0f0 <_obstack_memory_used@@Base+0x127d0>
  43a284:	ldur	x8, [x29, #-56]
  43a288:	ldr	x8, [x8, #24]
  43a28c:	ldur	x9, [x29, #-80]
  43a290:	ldr	x9, [x9]
  43a294:	mov	x10, #0x8                   	// #8
  43a298:	ldr	x8, [x8, x9, lsl #3]
  43a29c:	stur	x8, [x29, #-96]
  43a2a0:	ldr	x8, [sp, #72]
  43a2a4:	ldr	x9, [x8, #8]
  43a2a8:	ldr	x9, [x9, #184]
  43a2ac:	ldur	x11, [x29, #-88]
  43a2b0:	mul	x10, x10, x11
  43a2b4:	add	x9, x9, x10
  43a2b8:	ldr	x9, [x9]
  43a2bc:	cbz	x9, 43a3b4 <_obstack_memory_used@@Base+0x12a94>
  43a2c0:	ldr	x8, [sp, #72]
  43a2c4:	ldr	x9, [x8, #8]
  43a2c8:	ldr	x9, [x9, #184]
  43a2cc:	ldur	x10, [x29, #-88]
  43a2d0:	mov	x11, #0x8                   	// #8
  43a2d4:	mul	x10, x11, x10
  43a2d8:	add	x9, x9, x10
  43a2dc:	ldr	x9, [x9]
  43a2e0:	add	x0, x9, #0x8
  43a2e4:	ldur	x1, [x29, #-96]
  43a2e8:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43a2ec:	cbz	x0, 43a2f4 <_obstack_memory_used@@Base+0x129d4>
  43a2f0:	b	43a498 <_obstack_memory_used@@Base+0x12b78>
  43a2f4:	ldr	x8, [sp, #72]
  43a2f8:	ldr	x9, [x8, #8]
  43a2fc:	ldr	x9, [x9, #184]
  43a300:	ldur	x10, [x29, #-88]
  43a304:	mov	x11, #0x8                   	// #8
  43a308:	mul	x10, x11, x10
  43a30c:	add	x9, x9, x10
  43a310:	ldr	x9, [x9]
  43a314:	add	x1, x9, #0x8
  43a318:	add	x9, sp, #0x58
  43a31c:	mov	x0, x9
  43a320:	str	x9, [sp, #32]
  43a324:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  43a328:	stur	w0, [x29, #-60]
  43a32c:	ldur	x1, [x29, #-96]
  43a330:	ldr	x0, [sp, #32]
  43a334:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43a338:	and	w12, w0, #0x1
  43a33c:	strb	w12, [sp, #87]
  43a340:	ldur	w12, [x29, #-60]
  43a344:	mov	w13, #0x1                   	// #1
  43a348:	str	w13, [sp, #28]
  43a34c:	cbnz	w12, 43a35c <_obstack_memory_used@@Base+0x12a3c>
  43a350:	ldrb	w8, [sp, #87]
  43a354:	eor	w8, w8, #0x1
  43a358:	str	w8, [sp, #28]
  43a35c:	ldr	w8, [sp, #28]
  43a360:	and	w8, w8, #0x1
  43a364:	mov	w0, w8
  43a368:	sxtw	x9, w0
  43a36c:	cbz	x9, 43a3b0 <_obstack_memory_used@@Base+0x12a90>
  43a370:	add	x8, sp, #0x58
  43a374:	ldr	x0, [x8, #16]
  43a378:	bl	4026c0 <free@plt>
  43a37c:	ldur	w9, [x29, #-60]
  43a380:	cbz	w9, 43a390 <_obstack_memory_used@@Base+0x12a70>
  43a384:	ldur	w8, [x29, #-60]
  43a388:	str	w8, [sp, #24]
  43a38c:	b	43a398 <_obstack_memory_used@@Base+0x12a78>
  43a390:	mov	w8, #0xc                   	// #12
  43a394:	str	w8, [sp, #24]
  43a398:	ldr	w8, [sp, #24]
  43a39c:	stur	w8, [x29, #-60]
  43a3a0:	ldur	w8, [x29, #-60]
  43a3a4:	ldr	x9, [sp, #72]
  43a3a8:	str	w8, [x9, #20]
  43a3ac:	b	43a4b4 <_obstack_memory_used@@Base+0x12b94>
  43a3b0:	b	43a3f0 <_obstack_memory_used@@Base+0x12ad0>
  43a3b4:	ldur	x1, [x29, #-96]
  43a3b8:	add	x0, sp, #0x58
  43a3bc:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  43a3c0:	stur	w0, [x29, #-60]
  43a3c4:	ldur	w8, [x29, #-60]
  43a3c8:	cmp	w8, #0x0
  43a3cc:	cset	w8, ne  // ne = any
  43a3d0:	and	w8, w8, #0x1
  43a3d4:	mov	w1, w8
  43a3d8:	sxtw	x9, w1
  43a3dc:	cbz	x9, 43a3f0 <_obstack_memory_used@@Base+0x12ad0>
  43a3e0:	ldur	w8, [x29, #-60]
  43a3e4:	ldr	x9, [sp, #72]
  43a3e8:	str	w8, [x9, #20]
  43a3ec:	b	43a4b4 <_obstack_memory_used@@Base+0x12b94>
  43a3f0:	ldur	x1, [x29, #-56]
  43a3f4:	sub	x0, x29, #0x3c
  43a3f8:	add	x8, sp, #0x58
  43a3fc:	mov	x2, x8
  43a400:	str	x8, [sp, #16]
  43a404:	bl	43a9d0 <_obstack_memory_used@@Base+0x130b0>
  43a408:	ldr	x8, [sp, #72]
  43a40c:	ldr	x9, [x8, #8]
  43a410:	ldr	x9, [x9, #184]
  43a414:	ldur	x10, [x29, #-88]
  43a418:	mov	x11, #0x8                   	// #8
  43a41c:	mul	x10, x11, x10
  43a420:	add	x9, x9, x10
  43a424:	str	x0, [x9]
  43a428:	ldr	x9, [sp, #16]
  43a42c:	ldr	x0, [x9, #16]
  43a430:	str	x11, [sp, #8]
  43a434:	bl	4026c0 <free@plt>
  43a438:	ldr	x8, [sp, #72]
  43a43c:	ldr	x9, [x8, #8]
  43a440:	ldr	x9, [x9, #184]
  43a444:	ldur	x10, [x29, #-88]
  43a448:	ldr	x11, [sp, #8]
  43a44c:	mul	x10, x11, x10
  43a450:	add	x9, x9, x10
  43a454:	ldr	x9, [x9]
  43a458:	mov	w12, #0x0                   	// #0
  43a45c:	str	w12, [sp, #4]
  43a460:	cbnz	x9, 43a474 <_obstack_memory_used@@Base+0x12b54>
  43a464:	ldur	w8, [x29, #-60]
  43a468:	cmp	w8, #0x0
  43a46c:	cset	w8, ne  // ne = any
  43a470:	str	w8, [sp, #4]
  43a474:	ldr	w8, [sp, #4]
  43a478:	and	w8, w8, #0x1
  43a47c:	mov	w0, w8
  43a480:	sxtw	x9, w0
  43a484:	cbz	x9, 43a498 <_obstack_memory_used@@Base+0x12b78>
  43a488:	ldur	w8, [x29, #-60]
  43a48c:	ldr	x9, [sp, #72]
  43a490:	str	w8, [x9, #20]
  43a494:	b	43a4b4 <_obstack_memory_used@@Base+0x12b94>
  43a498:	ldur	x8, [x29, #-80]
  43a49c:	add	x9, x8, #0x28
  43a4a0:	stur	x9, [x29, #-80]
  43a4a4:	ldrb	w10, [x8, #32]
  43a4a8:	cbnz	w10, 43a110 <_obstack_memory_used@@Base+0x127f0>
  43a4ac:	ldr	x8, [sp, #72]
  43a4b0:	str	wzr, [x8, #20]
  43a4b4:	ldr	x8, [sp, #72]
  43a4b8:	ldr	w0, [x8, #20]
  43a4bc:	ldp	x29, x30, [sp, #240]
  43a4c0:	add	sp, sp, #0x100
  43a4c4:	ret
  43a4c8:	sub	sp, sp, #0xa0
  43a4cc:	stp	x29, x30, [sp, #144]
  43a4d0:	add	x29, sp, #0x90
  43a4d4:	stur	x0, [x29, #-16]
  43a4d8:	stur	x1, [x29, #-24]
  43a4dc:	stur	x2, [x29, #-32]
  43a4e0:	stur	x3, [x29, #-40]
  43a4e4:	ldur	x8, [x29, #-16]
  43a4e8:	ldr	x8, [x8, #152]
  43a4ec:	stur	x8, [x29, #-48]
  43a4f0:	stur	wzr, [x29, #-68]
  43a4f4:	str	xzr, [sp, #48]
  43a4f8:	str	xzr, [sp, #56]
  43a4fc:	str	xzr, [sp, #64]
  43a500:	stur	xzr, [x29, #-64]
  43a504:	ldur	x8, [x29, #-64]
  43a508:	ldur	x9, [x29, #-32]
  43a50c:	ldr	x9, [x9, #8]
  43a510:	cmp	x8, x9
  43a514:	b.ge	43a7ac <_obstack_memory_used@@Base+0x12e8c>  // b.tcont
  43a518:	str	wzr, [sp, #44]
  43a51c:	ldur	x8, [x29, #-32]
  43a520:	mov	x9, #0x10                  	// #16
  43a524:	ldr	x8, [x8, #16]
  43a528:	ldur	x10, [x29, #-64]
  43a52c:	ldr	x8, [x8, x10, lsl #3]
  43a530:	str	x8, [sp, #32]
  43a534:	ldur	x8, [x29, #-48]
  43a538:	ldr	x8, [x8]
  43a53c:	ldr	x10, [sp, #32]
  43a540:	mul	x9, x9, x10
  43a544:	add	x8, x8, x9
  43a548:	ldr	w11, [x8, #8]
  43a54c:	and	w11, w11, #0xff
  43a550:	and	w11, w11, #0x8
  43a554:	cbnz	w11, 43a55c <_obstack_memory_used@@Base+0x12c3c>
  43a558:	b	43a55c <_obstack_memory_used@@Base+0x12c3c>
  43a55c:	ldur	x8, [x29, #-48]
  43a560:	ldr	x8, [x8]
  43a564:	ldr	x9, [sp, #32]
  43a568:	mov	x10, #0x10                  	// #16
  43a56c:	mul	x9, x10, x9
  43a570:	add	x8, x8, x9
  43a574:	ldr	w11, [x8, #8]
  43a578:	lsr	w11, w11, #20
  43a57c:	and	w11, w11, #0x1
  43a580:	cbz	w11, 43a714 <_obstack_memory_used@@Base+0x12df4>
  43a584:	ldur	x0, [x29, #-48]
  43a588:	ldr	x1, [sp, #32]
  43a58c:	ldur	x2, [x29, #-16]
  43a590:	ldur	x3, [x29, #-24]
  43a594:	bl	43ad84 <_obstack_memory_used@@Base+0x13464>
  43a598:	str	w0, [sp, #44]
  43a59c:	ldr	w8, [sp, #44]
  43a5a0:	cmp	w8, #0x1
  43a5a4:	b.le	43a714 <_obstack_memory_used@@Base+0x12df4>
  43a5a8:	ldur	x8, [x29, #-48]
  43a5ac:	ldr	x8, [x8, #24]
  43a5b0:	ldr	x9, [sp, #32]
  43a5b4:	mov	x10, #0x8                   	// #8
  43a5b8:	ldr	x8, [x8, x9, lsl #3]
  43a5bc:	str	x8, [sp, #16]
  43a5c0:	ldur	x8, [x29, #-24]
  43a5c4:	ldrsw	x9, [sp, #44]
  43a5c8:	add	x8, x8, x9
  43a5cc:	str	x8, [sp, #8]
  43a5d0:	ldur	x8, [x29, #-16]
  43a5d4:	ldr	x8, [x8, #184]
  43a5d8:	ldr	x9, [sp, #8]
  43a5dc:	mul	x9, x10, x9
  43a5e0:	add	x8, x8, x9
  43a5e4:	ldr	x8, [x8]
  43a5e8:	str	x8, [sp, #24]
  43a5ec:	str	xzr, [sp, #56]
  43a5f0:	ldr	x8, [sp, #24]
  43a5f4:	cbz	x8, 43a640 <_obstack_memory_used@@Base+0x12d20>
  43a5f8:	ldr	x8, [sp, #24]
  43a5fc:	add	x1, x8, #0x8
  43a600:	add	x0, sp, #0x30
  43a604:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  43a608:	stur	w0, [x29, #-68]
  43a60c:	ldur	w9, [x29, #-68]
  43a610:	cmp	w9, #0x0
  43a614:	cset	w9, ne  // ne = any
  43a618:	and	w9, w9, #0x1
  43a61c:	mov	w1, w9
  43a620:	sxtw	x8, w1
  43a624:	cbz	x8, 43a640 <_obstack_memory_used@@Base+0x12d20>
  43a628:	add	x8, sp, #0x30
  43a62c:	ldr	x0, [x8, #16]
  43a630:	bl	4026c0 <free@plt>
  43a634:	ldur	w9, [x29, #-68]
  43a638:	stur	w9, [x29, #-4]
  43a63c:	b	43a7bc <_obstack_memory_used@@Base+0x12e9c>
  43a640:	ldr	x1, [sp, #16]
  43a644:	add	x0, sp, #0x30
  43a648:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43a64c:	mov	w8, #0x1                   	// #1
  43a650:	and	w8, w0, w8
  43a654:	sturb	w8, [x29, #-49]
  43a658:	ldurb	w8, [x29, #-49]
  43a65c:	eor	w8, w8, #0x1
  43a660:	and	w8, w8, #0x1
  43a664:	mov	w1, w8
  43a668:	sxtw	x9, w1
  43a66c:	cbz	x9, 43a688 <_obstack_memory_used@@Base+0x12d68>
  43a670:	add	x8, sp, #0x30
  43a674:	ldr	x0, [x8, #16]
  43a678:	bl	4026c0 <free@plt>
  43a67c:	mov	w9, #0xc                   	// #12
  43a680:	stur	w9, [x29, #-4]
  43a684:	b	43a7bc <_obstack_memory_used@@Base+0x12e9c>
  43a688:	ldur	x1, [x29, #-48]
  43a68c:	sub	x0, x29, #0x44
  43a690:	add	x2, sp, #0x30
  43a694:	bl	43a9d0 <_obstack_memory_used@@Base+0x130b0>
  43a698:	ldur	x8, [x29, #-16]
  43a69c:	ldr	x8, [x8, #184]
  43a6a0:	ldr	x9, [sp, #8]
  43a6a4:	mov	x10, #0x8                   	// #8
  43a6a8:	mul	x9, x10, x9
  43a6ac:	add	x8, x8, x9
  43a6b0:	str	x0, [x8]
  43a6b4:	ldur	x8, [x29, #-16]
  43a6b8:	ldr	x8, [x8, #184]
  43a6bc:	ldr	x9, [sp, #8]
  43a6c0:	mul	x9, x10, x9
  43a6c4:	add	x8, x8, x9
  43a6c8:	ldr	x8, [x8]
  43a6cc:	mov	w11, #0x0                   	// #0
  43a6d0:	str	w11, [sp, #4]
  43a6d4:	cbnz	x8, 43a6e8 <_obstack_memory_used@@Base+0x12dc8>
  43a6d8:	ldur	w8, [x29, #-68]
  43a6dc:	cmp	w8, #0x0
  43a6e0:	cset	w8, ne  // ne = any
  43a6e4:	str	w8, [sp, #4]
  43a6e8:	ldr	w8, [sp, #4]
  43a6ec:	and	w8, w8, #0x1
  43a6f0:	mov	w0, w8
  43a6f4:	sxtw	x9, w0
  43a6f8:	cbz	x9, 43a714 <_obstack_memory_used@@Base+0x12df4>
  43a6fc:	add	x8, sp, #0x30
  43a700:	ldr	x0, [x8, #16]
  43a704:	bl	4026c0 <free@plt>
  43a708:	ldur	w9, [x29, #-68]
  43a70c:	stur	w9, [x29, #-4]
  43a710:	b	43a7bc <_obstack_memory_used@@Base+0x12e9c>
  43a714:	ldr	w8, [sp, #44]
  43a718:	cbnz	w8, 43a748 <_obstack_memory_used@@Base+0x12e28>
  43a71c:	ldur	x0, [x29, #-16]
  43a720:	ldur	x8, [x29, #-48]
  43a724:	ldr	x8, [x8]
  43a728:	ldr	x9, [sp, #32]
  43a72c:	mov	x10, #0x10                  	// #16
  43a730:	mul	x9, x10, x9
  43a734:	add	x1, x8, x9
  43a738:	ldur	x2, [x29, #-24]
  43a73c:	bl	43b2f0 <_obstack_memory_used@@Base+0x139d0>
  43a740:	tbnz	w0, #0, 43a748 <_obstack_memory_used@@Base+0x12e28>
  43a744:	b	43a79c <_obstack_memory_used@@Base+0x12e7c>
  43a748:	ldur	x0, [x29, #-40]
  43a74c:	ldur	x8, [x29, #-48]
  43a750:	ldr	x8, [x8, #24]
  43a754:	ldr	x9, [sp, #32]
  43a758:	ldr	x1, [x8, x9, lsl #3]
  43a75c:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43a760:	mov	w10, #0x1                   	// #1
  43a764:	and	w10, w0, w10
  43a768:	sturb	w10, [x29, #-49]
  43a76c:	ldurb	w10, [x29, #-49]
  43a770:	eor	w10, w10, #0x1
  43a774:	and	w10, w10, #0x1
  43a778:	mov	w1, w10
  43a77c:	sxtw	x8, w1
  43a780:	cbz	x8, 43a79c <_obstack_memory_used@@Base+0x12e7c>
  43a784:	add	x8, sp, #0x30
  43a788:	ldr	x0, [x8, #16]
  43a78c:	bl	4026c0 <free@plt>
  43a790:	mov	w9, #0xc                   	// #12
  43a794:	stur	w9, [x29, #-4]
  43a798:	b	43a7bc <_obstack_memory_used@@Base+0x12e9c>
  43a79c:	ldur	x8, [x29, #-64]
  43a7a0:	add	x8, x8, #0x1
  43a7a4:	stur	x8, [x29, #-64]
  43a7a8:	b	43a504 <_obstack_memory_used@@Base+0x12be4>
  43a7ac:	add	x8, sp, #0x30
  43a7b0:	ldr	x0, [x8, #16]
  43a7b4:	bl	4026c0 <free@plt>
  43a7b8:	stur	wzr, [x29, #-4]
  43a7bc:	ldur	w0, [x29, #-4]
  43a7c0:	ldp	x29, x30, [sp, #144]
  43a7c4:	add	sp, sp, #0xa0
  43a7c8:	ret
  43a7cc:	sub	sp, sp, #0x50
  43a7d0:	stp	x29, x30, [sp, #64]
  43a7d4:	add	x29, sp, #0x40
  43a7d8:	stur	x0, [x29, #-16]
  43a7dc:	stur	x1, [x29, #-24]
  43a7e0:	str	x2, [sp, #32]
  43a7e4:	str	x3, [sp, #24]
  43a7e8:	str	w4, [sp, #20]
  43a7ec:	ldr	x8, [sp, #32]
  43a7f0:	str	x8, [sp, #8]
  43a7f4:	ldur	x0, [x29, #-24]
  43a7f8:	ldr	x1, [sp, #8]
  43a7fc:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43a800:	cmp	x0, #0x0
  43a804:	cset	w8, ne  // ne = any
  43a808:	eor	w8, w8, #0x1
  43a80c:	tbnz	w8, #0, 43a814 <_obstack_memory_used@@Base+0x12ef4>
  43a810:	b	43a9bc <_obstack_memory_used@@Base+0x1309c>
  43a814:	ldur	x8, [x29, #-16]
  43a818:	ldr	x8, [x8]
  43a81c:	ldr	x9, [sp, #8]
  43a820:	mov	x10, #0x10                  	// #16
  43a824:	mul	x9, x10, x9
  43a828:	add	x8, x8, x9
  43a82c:	ldr	w11, [x8, #8]
  43a830:	and	w11, w11, #0xff
  43a834:	ldr	w12, [sp, #20]
  43a838:	cmp	w11, w12
  43a83c:	b.ne	43a8b0 <_obstack_memory_used@@Base+0x12f90>  // b.any
  43a840:	ldur	x8, [x29, #-16]
  43a844:	ldr	x8, [x8]
  43a848:	ldr	x9, [sp, #8]
  43a84c:	mov	x10, #0x10                  	// #16
  43a850:	mul	x9, x10, x9
  43a854:	ldr	x8, [x8, x9]
  43a858:	ldr	x9, [sp, #24]
  43a85c:	cmp	x8, x9
  43a860:	b.ne	43a8b0 <_obstack_memory_used@@Base+0x12f90>  // b.any
  43a864:	ldr	w8, [sp, #20]
  43a868:	cmp	w8, #0x9
  43a86c:	b.ne	43a8ac <_obstack_memory_used@@Base+0x12f8c>  // b.any
  43a870:	ldur	x0, [x29, #-24]
  43a874:	ldr	x1, [sp, #8]
  43a878:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43a87c:	mov	w8, #0x1                   	// #1
  43a880:	and	w8, w0, w8
  43a884:	strb	w8, [sp, #7]
  43a888:	ldrb	w8, [sp, #7]
  43a88c:	eor	w8, w8, #0x1
  43a890:	and	w8, w8, #0x1
  43a894:	mov	w1, w8
  43a898:	sxtw	x9, w1
  43a89c:	cbz	x9, 43a8ac <_obstack_memory_used@@Base+0x12f8c>
  43a8a0:	mov	w8, #0xc                   	// #12
  43a8a4:	stur	w8, [x29, #-4]
  43a8a8:	b	43a9c0 <_obstack_memory_used@@Base+0x130a0>
  43a8ac:	b	43a9bc <_obstack_memory_used@@Base+0x1309c>
  43a8b0:	ldur	x0, [x29, #-24]
  43a8b4:	ldr	x1, [sp, #8]
  43a8b8:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43a8bc:	mov	w8, #0x1                   	// #1
  43a8c0:	and	w8, w0, w8
  43a8c4:	strb	w8, [sp, #7]
  43a8c8:	ldrb	w8, [sp, #7]
  43a8cc:	eor	w8, w8, #0x1
  43a8d0:	and	w8, w8, #0x1
  43a8d4:	mov	w1, w8
  43a8d8:	sxtw	x9, w1
  43a8dc:	cbz	x9, 43a8ec <_obstack_memory_used@@Base+0x12fcc>
  43a8e0:	mov	w8, #0xc                   	// #12
  43a8e4:	stur	w8, [x29, #-4]
  43a8e8:	b	43a9c0 <_obstack_memory_used@@Base+0x130a0>
  43a8ec:	ldur	x8, [x29, #-16]
  43a8f0:	ldr	x8, [x8, #40]
  43a8f4:	ldr	x9, [sp, #8]
  43a8f8:	mov	x10, #0x18                  	// #24
  43a8fc:	mul	x9, x10, x9
  43a900:	add	x8, x8, x9
  43a904:	ldr	x8, [x8, #8]
  43a908:	cbnz	x8, 43a910 <_obstack_memory_used@@Base+0x12ff0>
  43a90c:	b	43a9bc <_obstack_memory_used@@Base+0x1309c>
  43a910:	ldur	x8, [x29, #-16]
  43a914:	ldr	x8, [x8, #40]
  43a918:	ldr	x9, [sp, #8]
  43a91c:	mov	x10, #0x18                  	// #24
  43a920:	mul	x9, x10, x9
  43a924:	add	x8, x8, x9
  43a928:	ldr	x8, [x8, #8]
  43a92c:	cmp	x8, #0x2
  43a930:	b.ne	43a994 <_obstack_memory_used@@Base+0x13074>  // b.any
  43a934:	ldur	x0, [x29, #-16]
  43a938:	ldur	x1, [x29, #-24]
  43a93c:	ldur	x8, [x29, #-16]
  43a940:	ldr	x8, [x8, #40]
  43a944:	ldr	x9, [sp, #8]
  43a948:	mov	x10, #0x18                  	// #24
  43a94c:	mul	x9, x10, x9
  43a950:	add	x8, x8, x9
  43a954:	ldr	x8, [x8, #16]
  43a958:	ldr	x2, [x8, #8]
  43a95c:	ldr	x3, [sp, #24]
  43a960:	ldr	w4, [sp, #20]
  43a964:	bl	43a7cc <_obstack_memory_used@@Base+0x12eac>
  43a968:	str	w0, [sp]
  43a96c:	ldr	w11, [sp]
  43a970:	cmp	w11, #0x0
  43a974:	cset	w11, ne  // ne = any
  43a978:	and	w11, w11, #0x1
  43a97c:	mov	w1, w11
  43a980:	sxtw	x8, w1
  43a984:	cbz	x8, 43a994 <_obstack_memory_used@@Base+0x13074>
  43a988:	ldr	w8, [sp]
  43a98c:	stur	w8, [x29, #-4]
  43a990:	b	43a9c0 <_obstack_memory_used@@Base+0x130a0>
  43a994:	ldur	x8, [x29, #-16]
  43a998:	ldr	x8, [x8, #40]
  43a99c:	ldr	x9, [sp, #8]
  43a9a0:	mov	x10, #0x18                  	// #24
  43a9a4:	mul	x9, x10, x9
  43a9a8:	add	x8, x8, x9
  43a9ac:	ldr	x8, [x8, #16]
  43a9b0:	ldr	x8, [x8]
  43a9b4:	str	x8, [sp, #8]
  43a9b8:	b	43a7f4 <_obstack_memory_used@@Base+0x12ed4>
  43a9bc:	stur	wzr, [x29, #-4]
  43a9c0:	ldur	w0, [x29, #-4]
  43a9c4:	ldp	x29, x30, [sp, #64]
  43a9c8:	add	sp, sp, #0x50
  43a9cc:	ret
  43a9d0:	sub	sp, sp, #0x60
  43a9d4:	stp	x29, x30, [sp, #80]
  43a9d8:	add	x29, sp, #0x50
  43a9dc:	stur	x0, [x29, #-16]
  43a9e0:	stur	x1, [x29, #-24]
  43a9e4:	stur	x2, [x29, #-32]
  43a9e8:	ldur	x8, [x29, #-32]
  43a9ec:	ldr	x8, [x8, #8]
  43a9f0:	cmp	x8, #0x0
  43a9f4:	cset	w9, eq  // eq = none
  43a9f8:	and	w9, w9, #0x1
  43a9fc:	mov	w0, w9
  43aa00:	sxtw	x8, w0
  43aa04:	cbz	x8, 43aa1c <_obstack_memory_used@@Base+0x130fc>
  43aa08:	ldur	x8, [x29, #-16]
  43aa0c:	str	wzr, [x8]
  43aa10:	mov	x8, xzr
  43aa14:	stur	x8, [x29, #-8]
  43aa18:	b	43ab20 <_obstack_memory_used@@Base+0x13200>
  43aa1c:	ldur	x0, [x29, #-32]
  43aa20:	mov	w8, wzr
  43aa24:	mov	w1, w8
  43aa28:	bl	4349ac <_obstack_memory_used@@Base+0xd08c>
  43aa2c:	str	x0, [sp, #40]
  43aa30:	ldur	x9, [x29, #-24]
  43aa34:	ldr	x9, [x9, #64]
  43aa38:	ldr	x10, [sp, #40]
  43aa3c:	ldur	x11, [x29, #-24]
  43aa40:	ldr	x11, [x11, #136]
  43aa44:	and	x10, x10, x11
  43aa48:	mov	x11, #0x18                  	// #24
  43aa4c:	mul	x10, x11, x10
  43aa50:	add	x9, x9, x10
  43aa54:	str	x9, [sp, #24]
  43aa58:	str	xzr, [sp, #16]
  43aa5c:	ldr	x8, [sp, #16]
  43aa60:	ldr	x9, [sp, #24]
  43aa64:	ldr	x9, [x9]
  43aa68:	cmp	x8, x9
  43aa6c:	b.ge	43aadc <_obstack_memory_used@@Base+0x131bc>  // b.tcont
  43aa70:	ldr	x8, [sp, #24]
  43aa74:	ldr	x8, [x8, #16]
  43aa78:	ldr	x9, [sp, #16]
  43aa7c:	mov	x10, #0x8                   	// #8
  43aa80:	mul	x9, x10, x9
  43aa84:	add	x8, x8, x9
  43aa88:	ldr	x8, [x8]
  43aa8c:	str	x8, [sp, #8]
  43aa90:	ldr	x8, [sp, #40]
  43aa94:	ldr	x9, [sp, #8]
  43aa98:	ldr	x9, [x9]
  43aa9c:	cmp	x8, x9
  43aaa0:	b.eq	43aaa8 <_obstack_memory_used@@Base+0x13188>  // b.none
  43aaa4:	b	43aacc <_obstack_memory_used@@Base+0x131ac>
  43aaa8:	ldr	x8, [sp, #8]
  43aaac:	add	x0, x8, #0x8
  43aab0:	ldur	x1, [x29, #-32]
  43aab4:	bl	434a20 <_obstack_memory_used@@Base+0xd100>
  43aab8:	tbnz	w0, #0, 43aac0 <_obstack_memory_used@@Base+0x131a0>
  43aabc:	b	43aacc <_obstack_memory_used@@Base+0x131ac>
  43aac0:	ldr	x8, [sp, #8]
  43aac4:	stur	x8, [x29, #-8]
  43aac8:	b	43ab20 <_obstack_memory_used@@Base+0x13200>
  43aacc:	ldr	x8, [sp, #16]
  43aad0:	add	x8, x8, #0x1
  43aad4:	str	x8, [sp, #16]
  43aad8:	b	43aa5c <_obstack_memory_used@@Base+0x1313c>
  43aadc:	ldur	x0, [x29, #-24]
  43aae0:	ldur	x1, [x29, #-32]
  43aae4:	ldr	x2, [sp, #40]
  43aae8:	bl	43ab30 <_obstack_memory_used@@Base+0x13210>
  43aaec:	str	x0, [sp, #32]
  43aaf0:	ldr	x8, [sp, #32]
  43aaf4:	cmp	x8, #0x0
  43aaf8:	cset	w9, eq  // eq = none
  43aafc:	and	w9, w9, #0x1
  43ab00:	mov	w0, w9
  43ab04:	sxtw	x8, w0
  43ab08:	cbz	x8, 43ab18 <_obstack_memory_used@@Base+0x131f8>
  43ab0c:	ldur	x8, [x29, #-16]
  43ab10:	mov	w9, #0xc                   	// #12
  43ab14:	str	w9, [x8]
  43ab18:	ldr	x8, [sp, #32]
  43ab1c:	stur	x8, [x29, #-8]
  43ab20:	ldur	x0, [x29, #-8]
  43ab24:	ldp	x29, x30, [sp, #80]
  43ab28:	add	sp, sp, #0x60
  43ab2c:	ret
  43ab30:	sub	sp, sp, #0x60
  43ab34:	stp	x29, x30, [sp, #80]
  43ab38:	add	x29, sp, #0x50
  43ab3c:	mov	x8, #0x70                  	// #112
  43ab40:	mov	x9, #0x1                   	// #1
  43ab44:	stur	x0, [x29, #-16]
  43ab48:	stur	x1, [x29, #-24]
  43ab4c:	stur	x2, [x29, #-32]
  43ab50:	mov	x0, x8
  43ab54:	mov	x1, x9
  43ab58:	bl	402540 <calloc@plt>
  43ab5c:	str	x0, [sp, #24]
  43ab60:	ldr	x8, [sp, #24]
  43ab64:	cmp	x8, #0x0
  43ab68:	cset	w10, eq  // eq = none
  43ab6c:	and	w10, w10, #0x1
  43ab70:	mov	w0, w10
  43ab74:	sxtw	x8, w0
  43ab78:	cbz	x8, 43ab88 <_obstack_memory_used@@Base+0x13268>
  43ab7c:	mov	x8, xzr
  43ab80:	stur	x8, [x29, #-8]
  43ab84:	b	43ad74 <_obstack_memory_used@@Base+0x13454>
  43ab88:	ldr	x8, [sp, #24]
  43ab8c:	add	x0, x8, #0x8
  43ab90:	ldur	x1, [x29, #-24]
  43ab94:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  43ab98:	str	w0, [sp, #36]
  43ab9c:	ldr	w9, [sp, #36]
  43aba0:	cmp	w9, #0x0
  43aba4:	cset	w9, ne  // ne = any
  43aba8:	and	w9, w9, #0x1
  43abac:	mov	w1, w9
  43abb0:	sxtw	x8, w1
  43abb4:	cbz	x8, 43abcc <_obstack_memory_used@@Base+0x132ac>
  43abb8:	ldr	x0, [sp, #24]
  43abbc:	bl	4026c0 <free@plt>
  43abc0:	mov	x8, xzr
  43abc4:	stur	x8, [x29, #-8]
  43abc8:	b	43ad74 <_obstack_memory_used@@Base+0x13454>
  43abcc:	ldr	x8, [sp, #24]
  43abd0:	add	x8, x8, #0x8
  43abd4:	ldr	x9, [sp, #24]
  43abd8:	str	x8, [x9, #80]
  43abdc:	str	xzr, [sp, #40]
  43abe0:	ldr	x8, [sp, #40]
  43abe4:	ldur	x9, [x29, #-24]
  43abe8:	ldr	x9, [x9, #8]
  43abec:	cmp	x8, x9
  43abf0:	b.ge	43ad2c <_obstack_memory_used@@Base+0x1340c>  // b.tcont
  43abf4:	ldur	x8, [x29, #-16]
  43abf8:	ldr	x8, [x8]
  43abfc:	ldur	x9, [x29, #-24]
  43ac00:	mov	x10, #0x10                  	// #16
  43ac04:	ldr	x9, [x9, #16]
  43ac08:	ldr	x11, [sp, #40]
  43ac0c:	ldr	x9, [x9, x11, lsl #3]
  43ac10:	mul	x9, x10, x9
  43ac14:	add	x8, x8, x9
  43ac18:	str	x8, [sp, #16]
  43ac1c:	ldr	x8, [sp, #16]
  43ac20:	ldr	w12, [x8, #8]
  43ac24:	and	w12, w12, #0xff
  43ac28:	str	w12, [sp, #12]
  43ac2c:	ldr	w12, [sp, #12]
  43ac30:	cmp	w12, #0x1
  43ac34:	b.ne	43ac54 <_obstack_memory_used@@Base+0x13334>  // b.any
  43ac38:	ldr	x8, [sp, #16]
  43ac3c:	mov	x9, #0x8                   	// #8
  43ac40:	ldr	w10, [x8, #8]
  43ac44:	lsr	w9, w10, w9
  43ac48:	and	w9, w9, #0x3ff
  43ac4c:	cbnz	w9, 43ac54 <_obstack_memory_used@@Base+0x13334>
  43ac50:	b	43ad1c <_obstack_memory_used@@Base+0x133fc>
  43ac54:	ldr	x8, [sp, #16]
  43ac58:	ldr	w9, [x8, #8]
  43ac5c:	lsr	w9, w9, #20
  43ac60:	and	w9, w9, #0x1
  43ac64:	ldr	x8, [sp, #24]
  43ac68:	ldrb	w10, [x8, #104]
  43ac6c:	mov	w11, #0x5                   	// #5
  43ac70:	lsr	w10, w10, w11
  43ac74:	mov	w12, #0x1                   	// #1
  43ac78:	and	w10, w10, #0x1
  43ac7c:	and	w10, w10, #0xff
  43ac80:	orr	w9, w10, w9
  43ac84:	ldrb	w10, [x8, #104]
  43ac88:	and	w9, w9, w12
  43ac8c:	lsl	w9, w9, w11
  43ac90:	and	w10, w10, #0xffffffdf
  43ac94:	orr	w9, w10, w9
  43ac98:	strb	w9, [x8, #104]
  43ac9c:	ldr	w9, [sp, #12]
  43aca0:	cmp	w9, #0x2
  43aca4:	b.ne	43acc0 <_obstack_memory_used@@Base+0x133a0>  // b.any
  43aca8:	ldr	x8, [sp, #24]
  43acac:	ldrb	w9, [x8, #104]
  43acb0:	and	w9, w9, #0xffffffef
  43acb4:	orr	w9, w9, #0x10
  43acb8:	strb	w9, [x8, #104]
  43acbc:	b	43ad1c <_obstack_memory_used@@Base+0x133fc>
  43acc0:	ldr	w8, [sp, #12]
  43acc4:	cmp	w8, #0x4
  43acc8:	b.ne	43ace4 <_obstack_memory_used@@Base+0x133c4>  // b.any
  43accc:	ldr	x8, [sp, #24]
  43acd0:	ldrb	w9, [x8, #104]
  43acd4:	and	w9, w9, #0xffffffbf
  43acd8:	orr	w9, w9, #0x40
  43acdc:	strb	w9, [x8, #104]
  43ace0:	b	43ad1c <_obstack_memory_used@@Base+0x133fc>
  43ace4:	ldr	w8, [sp, #12]
  43ace8:	cmp	w8, #0xc
  43acec:	b.eq	43ad08 <_obstack_memory_used@@Base+0x133e8>  // b.none
  43acf0:	ldr	x8, [sp, #16]
  43acf4:	mov	x9, #0x8                   	// #8
  43acf8:	ldr	w10, [x8, #8]
  43acfc:	lsr	w9, w10, w9
  43ad00:	and	w9, w9, #0x3ff
  43ad04:	cbz	w9, 43ad1c <_obstack_memory_used@@Base+0x133fc>
  43ad08:	ldr	x8, [sp, #24]
  43ad0c:	ldrb	w9, [x8, #104]
  43ad10:	and	w9, w9, #0x7f
  43ad14:	orr	w9, w9, #0xffffff80
  43ad18:	strb	w9, [x8, #104]
  43ad1c:	ldr	x8, [sp, #40]
  43ad20:	add	x8, x8, #0x1
  43ad24:	str	x8, [sp, #40]
  43ad28:	b	43abe0 <_obstack_memory_used@@Base+0x132c0>
  43ad2c:	ldur	x0, [x29, #-16]
  43ad30:	ldr	x1, [sp, #24]
  43ad34:	ldur	x2, [x29, #-32]
  43ad38:	bl	434ee4 <_obstack_memory_used@@Base+0xd5c4>
  43ad3c:	str	w0, [sp, #36]
  43ad40:	ldr	w8, [sp, #36]
  43ad44:	cmp	w8, #0x0
  43ad48:	cset	w8, ne  // ne = any
  43ad4c:	and	w8, w8, #0x1
  43ad50:	mov	w1, w8
  43ad54:	sxtw	x9, w1
  43ad58:	cbz	x9, 43ad6c <_obstack_memory_used@@Base+0x1344c>
  43ad5c:	ldr	x0, [sp, #24]
  43ad60:	bl	42a568 <_obstack_memory_used@@Base+0x2c48>
  43ad64:	mov	x8, xzr
  43ad68:	str	x8, [sp, #24]
  43ad6c:	ldr	x8, [sp, #24]
  43ad70:	stur	x8, [x29, #-8]
  43ad74:	ldur	x0, [x29, #-8]
  43ad78:	ldp	x29, x30, [sp, #80]
  43ad7c:	add	sp, sp, #0x60
  43ad80:	ret
  43ad84:	sub	sp, sp, #0x80
  43ad88:	stp	x29, x30, [sp, #112]
  43ad8c:	add	x29, sp, #0x70
  43ad90:	stur	x0, [x29, #-16]
  43ad94:	stur	x1, [x29, #-24]
  43ad98:	stur	x2, [x29, #-32]
  43ad9c:	stur	x3, [x29, #-40]
  43ada0:	ldur	x8, [x29, #-16]
  43ada4:	ldr	x8, [x8]
  43ada8:	ldur	x9, [x29, #-24]
  43adac:	mov	x10, #0x10                  	// #16
  43adb0:	mul	x9, x10, x9
  43adb4:	add	x8, x8, x9
  43adb8:	stur	x8, [x29, #-48]
  43adbc:	ldur	x8, [x29, #-48]
  43adc0:	ldr	w11, [x8, #8]
  43adc4:	and	w11, w11, #0xff
  43adc8:	cmp	w11, #0x7
  43adcc:	cset	w11, eq  // eq = none
  43add0:	and	w11, w11, #0x1
  43add4:	mov	w0, w11
  43add8:	sxtw	x8, w0
  43addc:	cbz	x8, 43b024 <_obstack_memory_used@@Base+0x13704>
  43ade0:	ldur	x8, [x29, #-32]
  43ade4:	ldr	x8, [x8, #8]
  43ade8:	ldur	x9, [x29, #-40]
  43adec:	add	x8, x8, x9
  43adf0:	ldrb	w10, [x8]
  43adf4:	strb	w10, [sp, #47]
  43adf8:	ldrb	w10, [sp, #47]
  43adfc:	cmp	w10, #0xc2
  43ae00:	cset	w10, lt  // lt = tstop
  43ae04:	and	w10, w10, #0x1
  43ae08:	mov	w0, w10
  43ae0c:	sxtw	x8, w0
  43ae10:	cbz	x8, 43ae1c <_obstack_memory_used@@Base+0x134fc>
  43ae14:	stur	wzr, [x29, #-4]
  43ae18:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43ae1c:	ldur	x8, [x29, #-40]
  43ae20:	add	x8, x8, #0x2
  43ae24:	ldur	x9, [x29, #-32]
  43ae28:	ldr	x9, [x9, #88]
  43ae2c:	cmp	x8, x9
  43ae30:	b.le	43ae3c <_obstack_memory_used@@Base+0x1351c>
  43ae34:	stur	wzr, [x29, #-4]
  43ae38:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43ae3c:	ldur	x8, [x29, #-32]
  43ae40:	ldr	x8, [x8, #8]
  43ae44:	ldur	x9, [x29, #-40]
  43ae48:	add	x9, x9, #0x1
  43ae4c:	add	x8, x8, x9
  43ae50:	ldrb	w10, [x8]
  43ae54:	strb	w10, [sp, #46]
  43ae58:	ldrb	w10, [sp, #47]
  43ae5c:	cmp	w10, #0xe0
  43ae60:	b.ge	43aea4 <_obstack_memory_used@@Base+0x13584>  // b.tcont
  43ae64:	ldrb	w8, [sp, #46]
  43ae68:	mov	w9, #0x1                   	// #1
  43ae6c:	cmp	w8, #0x80
  43ae70:	str	w9, [sp, #12]
  43ae74:	b.lt	43ae88 <_obstack_memory_used@@Base+0x13568>  // b.tstop
  43ae78:	ldrb	w8, [sp, #46]
  43ae7c:	cmp	w8, #0xbf
  43ae80:	cset	w8, gt
  43ae84:	str	w8, [sp, #12]
  43ae88:	ldr	w8, [sp, #12]
  43ae8c:	mov	w9, #0x2                   	// #2
  43ae90:	mov	w10, wzr
  43ae94:	tst	w8, #0x1
  43ae98:	csel	w8, w10, w9, ne  // ne = any
  43ae9c:	stur	w8, [x29, #-4]
  43aea0:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43aea4:	ldrb	w8, [sp, #47]
  43aea8:	cmp	w8, #0xf0
  43aeac:	b.ge	43aedc <_obstack_memory_used@@Base+0x135bc>  // b.tcont
  43aeb0:	mov	w8, #0x3                   	// #3
  43aeb4:	stur	w8, [x29, #-52]
  43aeb8:	ldrb	w8, [sp, #47]
  43aebc:	cmp	w8, #0xe0
  43aec0:	b.ne	43aed8 <_obstack_memory_used@@Base+0x135b8>  // b.any
  43aec4:	ldrb	w8, [sp, #46]
  43aec8:	cmp	w8, #0xa0
  43aecc:	b.ge	43aed8 <_obstack_memory_used@@Base+0x135b8>  // b.tcont
  43aed0:	stur	wzr, [x29, #-4]
  43aed4:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43aed8:	b	43af8c <_obstack_memory_used@@Base+0x1366c>
  43aedc:	ldrb	w8, [sp, #47]
  43aee0:	cmp	w8, #0xf8
  43aee4:	b.ge	43af14 <_obstack_memory_used@@Base+0x135f4>  // b.tcont
  43aee8:	mov	w8, #0x4                   	// #4
  43aeec:	stur	w8, [x29, #-52]
  43aef0:	ldrb	w8, [sp, #47]
  43aef4:	cmp	w8, #0xf0
  43aef8:	b.ne	43af10 <_obstack_memory_used@@Base+0x135f0>  // b.any
  43aefc:	ldrb	w8, [sp, #46]
  43af00:	cmp	w8, #0x90
  43af04:	b.ge	43af10 <_obstack_memory_used@@Base+0x135f0>  // b.tcont
  43af08:	stur	wzr, [x29, #-4]
  43af0c:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43af10:	b	43af8c <_obstack_memory_used@@Base+0x1366c>
  43af14:	ldrb	w8, [sp, #47]
  43af18:	cmp	w8, #0xfc
  43af1c:	b.ge	43af4c <_obstack_memory_used@@Base+0x1362c>  // b.tcont
  43af20:	mov	w8, #0x5                   	// #5
  43af24:	stur	w8, [x29, #-52]
  43af28:	ldrb	w8, [sp, #47]
  43af2c:	cmp	w8, #0xf8
  43af30:	b.ne	43af48 <_obstack_memory_used@@Base+0x13628>  // b.any
  43af34:	ldrb	w8, [sp, #46]
  43af38:	cmp	w8, #0x88
  43af3c:	b.ge	43af48 <_obstack_memory_used@@Base+0x13628>  // b.tcont
  43af40:	stur	wzr, [x29, #-4]
  43af44:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43af48:	b	43af8c <_obstack_memory_used@@Base+0x1366c>
  43af4c:	ldrb	w8, [sp, #47]
  43af50:	cmp	w8, #0xfe
  43af54:	b.ge	43af84 <_obstack_memory_used@@Base+0x13664>  // b.tcont
  43af58:	mov	w8, #0x6                   	// #6
  43af5c:	stur	w8, [x29, #-52]
  43af60:	ldrb	w8, [sp, #47]
  43af64:	cmp	w8, #0xfc
  43af68:	b.ne	43af80 <_obstack_memory_used@@Base+0x13660>  // b.any
  43af6c:	ldrb	w8, [sp, #46]
  43af70:	cmp	w8, #0x84
  43af74:	b.ge	43af80 <_obstack_memory_used@@Base+0x13660>  // b.tcont
  43af78:	stur	wzr, [x29, #-4]
  43af7c:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43af80:	b	43af8c <_obstack_memory_used@@Base+0x1366c>
  43af84:	stur	wzr, [x29, #-4]
  43af88:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43af8c:	ldur	x8, [x29, #-40]
  43af90:	ldursw	x9, [x29, #-52]
  43af94:	add	x8, x8, x9
  43af98:	ldur	x9, [x29, #-32]
  43af9c:	ldr	x9, [x9, #88]
  43afa0:	cmp	x8, x9
  43afa4:	b.le	43afb0 <_obstack_memory_used@@Base+0x13690>
  43afa8:	stur	wzr, [x29, #-4]
  43afac:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43afb0:	mov	x8, #0x1                   	// #1
  43afb4:	str	x8, [sp, #48]
  43afb8:	ldr	x8, [sp, #48]
  43afbc:	ldursw	x9, [x29, #-52]
  43afc0:	cmp	x8, x9
  43afc4:	b.ge	43b018 <_obstack_memory_used@@Base+0x136f8>  // b.tcont
  43afc8:	ldur	x8, [x29, #-32]
  43afcc:	ldr	x8, [x8, #8]
  43afd0:	ldur	x9, [x29, #-40]
  43afd4:	ldr	x10, [sp, #48]
  43afd8:	add	x9, x9, x10
  43afdc:	add	x8, x8, x9
  43afe0:	ldrb	w11, [x8]
  43afe4:	strb	w11, [sp, #46]
  43afe8:	ldrb	w11, [sp, #46]
  43afec:	cmp	w11, #0x80
  43aff0:	b.lt	43b000 <_obstack_memory_used@@Base+0x136e0>  // b.tstop
  43aff4:	ldrb	w8, [sp, #46]
  43aff8:	cmp	w8, #0xbf
  43affc:	b.le	43b008 <_obstack_memory_used@@Base+0x136e8>
  43b000:	stur	wzr, [x29, #-4]
  43b004:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b008:	ldr	x8, [sp, #48]
  43b00c:	add	x8, x8, #0x1
  43b010:	str	x8, [sp, #48]
  43b014:	b	43afb8 <_obstack_memory_used@@Base+0x13698>
  43b018:	ldur	w8, [x29, #-52]
  43b01c:	stur	w8, [x29, #-4]
  43b020:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b024:	ldur	x0, [x29, #-32]
  43b028:	ldur	x1, [x29, #-40]
  43b02c:	bl	431a84 <_obstack_memory_used@@Base+0xa164>
  43b030:	stur	w0, [x29, #-52]
  43b034:	ldur	x8, [x29, #-48]
  43b038:	ldr	w9, [x8, #8]
  43b03c:	and	w9, w9, #0xff
  43b040:	cmp	w9, #0x5
  43b044:	b.ne	43b0bc <_obstack_memory_used@@Base+0x1379c>  // b.any
  43b048:	ldur	w8, [x29, #-52]
  43b04c:	cmp	w8, #0x1
  43b050:	b.gt	43b05c <_obstack_memory_used@@Base+0x1373c>
  43b054:	stur	wzr, [x29, #-4]
  43b058:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b05c:	ldur	x8, [x29, #-16]
  43b060:	ldr	x8, [x8, #216]
  43b064:	and	x8, x8, #0x40
  43b068:	cbnz	x8, 43b084 <_obstack_memory_used@@Base+0x13764>
  43b06c:	ldur	x8, [x29, #-32]
  43b070:	ldr	x8, [x8, #8]
  43b074:	ldur	x9, [x29, #-40]
  43b078:	ldrb	w10, [x8, x9]
  43b07c:	cmp	w10, #0xa
  43b080:	b.eq	43b0a8 <_obstack_memory_used@@Base+0x13788>  // b.none
  43b084:	ldur	x8, [x29, #-16]
  43b088:	ldr	x8, [x8, #216]
  43b08c:	and	x8, x8, #0x80
  43b090:	cbz	x8, 43b0b0 <_obstack_memory_used@@Base+0x13790>
  43b094:	ldur	x8, [x29, #-32]
  43b098:	ldr	x8, [x8, #8]
  43b09c:	ldur	x9, [x29, #-40]
  43b0a0:	ldrb	w10, [x8, x9]
  43b0a4:	cbnz	w10, 43b0b0 <_obstack_memory_used@@Base+0x13790>
  43b0a8:	stur	wzr, [x29, #-4]
  43b0ac:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b0b0:	ldur	w8, [x29, #-52]
  43b0b4:	stur	w8, [x29, #-4]
  43b0b8:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b0bc:	ldur	x0, [x29, #-32]
  43b0c0:	ldur	x1, [x29, #-40]
  43b0c4:	bl	43b52c <_obstack_memory_used@@Base+0x13c0c>
  43b0c8:	str	w0, [sp, #56]
  43b0cc:	ldr	w8, [sp, #56]
  43b0d0:	cmp	w8, #0x1
  43b0d4:	b.gt	43b0e4 <_obstack_memory_used@@Base+0x137c4>
  43b0d8:	ldur	w8, [x29, #-52]
  43b0dc:	cmp	w8, #0x1
  43b0e0:	b.le	43b0ec <_obstack_memory_used@@Base+0x137cc>
  43b0e4:	ldur	w8, [x29, #-52]
  43b0e8:	cbnz	w8, 43b0f4 <_obstack_memory_used@@Base+0x137d4>
  43b0ec:	stur	wzr, [x29, #-4]
  43b0f0:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b0f4:	ldur	x8, [x29, #-48]
  43b0f8:	ldr	w9, [x8, #8]
  43b0fc:	and	w9, w9, #0xff
  43b100:	cmp	w9, #0x6
  43b104:	b.ne	43b2dc <_obstack_memory_used@@Base+0x139bc>  // b.any
  43b108:	ldur	x8, [x29, #-48]
  43b10c:	ldr	x8, [x8]
  43b110:	str	x8, [sp, #32]
  43b114:	str	wzr, [sp, #28]
  43b118:	ldr	x8, [sp, #32]
  43b11c:	ldr	x8, [x8, #64]
  43b120:	cbnz	x8, 43b13c <_obstack_memory_used@@Base+0x1381c>
  43b124:	ldr	x8, [sp, #32]
  43b128:	ldr	x8, [x8, #72]
  43b12c:	cbnz	x8, 43b13c <_obstack_memory_used@@Base+0x1381c>
  43b130:	ldr	x8, [sp, #32]
  43b134:	ldr	x8, [x8, #40]
  43b138:	cbz	x8, 43b150 <_obstack_memory_used@@Base+0x13830>
  43b13c:	ldur	x0, [x29, #-32]
  43b140:	ldur	x1, [x29, #-40]
  43b144:	bl	42dd70 <_obstack_memory_used@@Base+0x6450>
  43b148:	str	w0, [sp, #8]
  43b14c:	b	43b158 <_obstack_memory_used@@Base+0x13838>
  43b150:	mov	w8, wzr
  43b154:	str	w8, [sp, #8]
  43b158:	ldr	w8, [sp, #8]
  43b15c:	str	w8, [sp, #24]
  43b160:	str	xzr, [sp, #48]
  43b164:	ldr	x8, [sp, #48]
  43b168:	ldr	x9, [sp, #32]
  43b16c:	ldr	x9, [x9, #40]
  43b170:	cmp	x8, x9
  43b174:	b.ge	43b1b0 <_obstack_memory_used@@Base+0x13890>  // b.tcont
  43b178:	ldr	w8, [sp, #24]
  43b17c:	ldr	x9, [sp, #32]
  43b180:	ldr	x9, [x9]
  43b184:	ldr	x10, [sp, #48]
  43b188:	ldr	w11, [x9, x10, lsl #2]
  43b18c:	cmp	w8, w11
  43b190:	b.ne	43b1a0 <_obstack_memory_used@@Base+0x13880>  // b.any
  43b194:	ldur	w8, [x29, #-52]
  43b198:	str	w8, [sp, #28]
  43b19c:	b	43b274 <_obstack_memory_used@@Base+0x13954>
  43b1a0:	ldr	x8, [sp, #48]
  43b1a4:	add	x8, x8, #0x1
  43b1a8:	str	x8, [sp, #48]
  43b1ac:	b	43b164 <_obstack_memory_used@@Base+0x13844>
  43b1b0:	str	xzr, [sp, #48]
  43b1b4:	ldr	x8, [sp, #48]
  43b1b8:	ldr	x9, [sp, #32]
  43b1bc:	ldr	x9, [x9, #72]
  43b1c0:	cmp	x8, x9
  43b1c4:	b.ge	43b208 <_obstack_memory_used@@Base+0x138e8>  // b.tcont
  43b1c8:	ldr	x8, [sp, #32]
  43b1cc:	ldr	x8, [x8, #24]
  43b1d0:	ldr	x9, [sp, #48]
  43b1d4:	ldr	x8, [x8, x9, lsl #3]
  43b1d8:	str	x8, [sp, #16]
  43b1dc:	ldr	w0, [sp, #24]
  43b1e0:	ldr	x1, [sp, #16]
  43b1e4:	bl	402440 <iswctype@plt>
  43b1e8:	cbz	w0, 43b1f8 <_obstack_memory_used@@Base+0x138d8>
  43b1ec:	ldur	w8, [x29, #-52]
  43b1f0:	str	w8, [sp, #28]
  43b1f4:	b	43b274 <_obstack_memory_used@@Base+0x13954>
  43b1f8:	ldr	x8, [sp, #48]
  43b1fc:	add	x8, x8, #0x1
  43b200:	str	x8, [sp, #48]
  43b204:	b	43b1b4 <_obstack_memory_used@@Base+0x13894>
  43b208:	str	xzr, [sp, #48]
  43b20c:	ldr	x8, [sp, #48]
  43b210:	ldr	x9, [sp, #32]
  43b214:	ldr	x9, [x9, #64]
  43b218:	cmp	x8, x9
  43b21c:	b.ge	43b274 <_obstack_memory_used@@Base+0x13954>  // b.tcont
  43b220:	ldr	x8, [sp, #32]
  43b224:	ldr	x8, [x8, #8]
  43b228:	ldr	x9, [sp, #48]
  43b22c:	ldr	w10, [x8, x9, lsl #2]
  43b230:	ldr	w11, [sp, #24]
  43b234:	cmp	w10, w11
  43b238:	b.hi	43b264 <_obstack_memory_used@@Base+0x13944>  // b.pmore
  43b23c:	ldr	w8, [sp, #24]
  43b240:	ldr	x9, [sp, #32]
  43b244:	ldr	x9, [x9, #16]
  43b248:	ldr	x10, [sp, #48]
  43b24c:	ldr	w11, [x9, x10, lsl #2]
  43b250:	cmp	w8, w11
  43b254:	b.hi	43b264 <_obstack_memory_used@@Base+0x13944>  // b.pmore
  43b258:	ldur	w8, [x29, #-52]
  43b25c:	str	w8, [sp, #28]
  43b260:	b	43b274 <_obstack_memory_used@@Base+0x13954>
  43b264:	ldr	x8, [sp, #48]
  43b268:	add	x8, x8, #0x1
  43b26c:	str	x8, [sp, #48]
  43b270:	b	43b20c <_obstack_memory_used@@Base+0x138ec>
  43b274:	ldr	x8, [sp, #32]
  43b278:	ldrb	w9, [x8, #32]
  43b27c:	and	w9, w9, #0x1
  43b280:	and	w9, w9, #0xff
  43b284:	cbnz	w9, 43b294 <_obstack_memory_used@@Base+0x13974>
  43b288:	ldr	w8, [sp, #28]
  43b28c:	stur	w8, [x29, #-4]
  43b290:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b294:	ldr	w8, [sp, #28]
  43b298:	cmp	w8, #0x0
  43b29c:	cset	w8, le
  43b2a0:	tbnz	w8, #0, 43b2ac <_obstack_memory_used@@Base+0x1398c>
  43b2a4:	stur	wzr, [x29, #-4]
  43b2a8:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b2ac:	ldr	w8, [sp, #56]
  43b2b0:	ldur	w9, [x29, #-52]
  43b2b4:	cmp	w8, w9
  43b2b8:	b.le	43b2c8 <_obstack_memory_used@@Base+0x139a8>
  43b2bc:	ldr	w8, [sp, #56]
  43b2c0:	str	w8, [sp, #4]
  43b2c4:	b	43b2d0 <_obstack_memory_used@@Base+0x139b0>
  43b2c8:	ldur	w8, [x29, #-52]
  43b2cc:	str	w8, [sp, #4]
  43b2d0:	ldr	w8, [sp, #4]
  43b2d4:	stur	w8, [x29, #-4]
  43b2d8:	b	43b2e0 <_obstack_memory_used@@Base+0x139c0>
  43b2dc:	stur	wzr, [x29, #-4]
  43b2e0:	ldur	w0, [x29, #-4]
  43b2e4:	ldp	x29, x30, [sp, #112]
  43b2e8:	add	sp, sp, #0x80
  43b2ec:	ret
  43b2f0:	sub	sp, sp, #0x40
  43b2f4:	stp	x29, x30, [sp, #48]
  43b2f8:	add	x29, sp, #0x30
  43b2fc:	stur	x0, [x29, #-16]
  43b300:	str	x1, [sp, #24]
  43b304:	str	x2, [sp, #16]
  43b308:	ldur	x8, [x29, #-16]
  43b30c:	ldr	x8, [x8, #8]
  43b310:	ldr	x9, [sp, #16]
  43b314:	add	x8, x8, x9
  43b318:	ldrb	w10, [x8]
  43b31c:	strb	w10, [sp, #15]
  43b320:	ldr	x8, [sp, #24]
  43b324:	ldr	w10, [x8, #8]
  43b328:	and	w10, w10, #0xff
  43b32c:	subs	w10, w10, #0x1
  43b330:	mov	w8, w10
  43b334:	ubfx	x8, x8, #0, #32
  43b338:	cmp	x8, #0x6
  43b33c:	str	x8, [sp]
  43b340:	b.hi	43b41c <_obstack_memory_used@@Base+0x13afc>  // b.pmore
  43b344:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  43b348:	add	x8, x8, #0x8d8
  43b34c:	ldr	x11, [sp]
  43b350:	ldrsw	x10, [x8, x11, lsl #2]
  43b354:	add	x9, x8, x10
  43b358:	br	x9
  43b35c:	ldr	x8, [sp, #24]
  43b360:	ldrb	w9, [x8]
  43b364:	ldrb	w10, [sp, #15]
  43b368:	cmp	w9, w10
  43b36c:	b.eq	43b380 <_obstack_memory_used@@Base+0x13a60>  // b.none
  43b370:	mov	w8, wzr
  43b374:	and	w8, w8, #0x1
  43b378:	sturb	w8, [x29, #-1]
  43b37c:	b	43b518 <_obstack_memory_used@@Base+0x13bf8>
  43b380:	b	43b42c <_obstack_memory_used@@Base+0x13b0c>
  43b384:	ldr	x8, [sp, #24]
  43b388:	ldr	x0, [x8]
  43b38c:	ldrb	w9, [sp, #15]
  43b390:	mov	w1, w9
  43b394:	bl	4375fc <_obstack_memory_used@@Base+0xfcdc>
  43b398:	tbnz	w0, #0, 43b3ac <_obstack_memory_used@@Base+0x13a8c>
  43b39c:	mov	w8, wzr
  43b3a0:	and	w8, w8, #0x1
  43b3a4:	sturb	w8, [x29, #-1]
  43b3a8:	b	43b518 <_obstack_memory_used@@Base+0x13bf8>
  43b3ac:	b	43b42c <_obstack_memory_used@@Base+0x13b0c>
  43b3b0:	ldrb	w8, [sp, #15]
  43b3b4:	cmp	w8, #0x80
  43b3b8:	b.lt	43b3cc <_obstack_memory_used@@Base+0x13aac>  // b.tstop
  43b3bc:	mov	w8, wzr
  43b3c0:	and	w8, w8, #0x1
  43b3c4:	sturb	w8, [x29, #-1]
  43b3c8:	b	43b518 <_obstack_memory_used@@Base+0x13bf8>
  43b3cc:	ldrb	w8, [sp, #15]
  43b3d0:	cmp	w8, #0xa
  43b3d4:	b.ne	43b3ec <_obstack_memory_used@@Base+0x13acc>  // b.any
  43b3d8:	ldur	x8, [x29, #-16]
  43b3dc:	ldr	x8, [x8, #152]
  43b3e0:	ldr	x8, [x8, #216]
  43b3e4:	and	x8, x8, #0x40
  43b3e8:	cbz	x8, 43b408 <_obstack_memory_used@@Base+0x13ae8>
  43b3ec:	ldrb	w8, [sp, #15]
  43b3f0:	cbnz	w8, 43b418 <_obstack_memory_used@@Base+0x13af8>
  43b3f4:	ldur	x8, [x29, #-16]
  43b3f8:	ldr	x8, [x8, #152]
  43b3fc:	ldr	x8, [x8, #216]
  43b400:	and	x8, x8, #0x80
  43b404:	cbz	x8, 43b418 <_obstack_memory_used@@Base+0x13af8>
  43b408:	mov	w8, wzr
  43b40c:	and	w8, w8, #0x1
  43b410:	sturb	w8, [x29, #-1]
  43b414:	b	43b518 <_obstack_memory_used@@Base+0x13bf8>
  43b418:	b	43b42c <_obstack_memory_used@@Base+0x13b0c>
  43b41c:	mov	w8, wzr
  43b420:	and	w8, w8, #0x1
  43b424:	sturb	w8, [x29, #-1]
  43b428:	b	43b518 <_obstack_memory_used@@Base+0x13bf8>
  43b42c:	ldr	x8, [sp, #24]
  43b430:	mov	x9, #0x8                   	// #8
  43b434:	ldr	w10, [x8, #8]
  43b438:	lsr	w9, w10, w9
  43b43c:	and	w9, w9, #0x3ff
  43b440:	cbz	w9, 43b50c <_obstack_memory_used@@Base+0x13bec>
  43b444:	ldur	x0, [x29, #-16]
  43b448:	ldr	x1, [sp, #16]
  43b44c:	ldur	x8, [x29, #-16]
  43b450:	ldr	w2, [x8, #160]
  43b454:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  43b458:	str	w0, [sp, #8]
  43b45c:	ldr	x8, [sp, #24]
  43b460:	mov	x9, #0x8                   	// #8
  43b464:	ldr	w10, [x8, #8]
  43b468:	lsr	w9, w10, w9
  43b46c:	and	w9, w9, #0x3ff
  43b470:	and	w9, w9, #0x4
  43b474:	cbz	w9, 43b484 <_obstack_memory_used@@Base+0x13b64>
  43b478:	ldr	w8, [sp, #8]
  43b47c:	and	w8, w8, #0x1
  43b480:	cbz	w8, 43b4fc <_obstack_memory_used@@Base+0x13bdc>
  43b484:	ldr	x8, [sp, #24]
  43b488:	mov	x9, #0x8                   	// #8
  43b48c:	ldr	w10, [x8, #8]
  43b490:	lsr	w9, w10, w9
  43b494:	and	w9, w9, #0x3ff
  43b498:	and	w9, w9, #0x8
  43b49c:	cbz	w9, 43b4ac <_obstack_memory_used@@Base+0x13b8c>
  43b4a0:	ldr	w8, [sp, #8]
  43b4a4:	and	w8, w8, #0x1
  43b4a8:	cbnz	w8, 43b4fc <_obstack_memory_used@@Base+0x13bdc>
  43b4ac:	ldr	x8, [sp, #24]
  43b4b0:	mov	x9, #0x8                   	// #8
  43b4b4:	ldr	w10, [x8, #8]
  43b4b8:	lsr	w9, w10, w9
  43b4bc:	and	w9, w9, #0x3ff
  43b4c0:	and	w9, w9, #0x20
  43b4c4:	cbz	w9, 43b4d4 <_obstack_memory_used@@Base+0x13bb4>
  43b4c8:	ldr	w8, [sp, #8]
  43b4cc:	and	w8, w8, #0x2
  43b4d0:	cbz	w8, 43b4fc <_obstack_memory_used@@Base+0x13bdc>
  43b4d4:	ldr	x8, [sp, #24]
  43b4d8:	mov	x9, #0x8                   	// #8
  43b4dc:	ldr	w10, [x8, #8]
  43b4e0:	lsr	w9, w10, w9
  43b4e4:	and	w9, w9, #0x3ff
  43b4e8:	and	w9, w9, #0x80
  43b4ec:	cbz	w9, 43b50c <_obstack_memory_used@@Base+0x13bec>
  43b4f0:	ldr	w8, [sp, #8]
  43b4f4:	and	w8, w8, #0x8
  43b4f8:	cbnz	w8, 43b50c <_obstack_memory_used@@Base+0x13bec>
  43b4fc:	mov	w8, wzr
  43b500:	and	w8, w8, #0x1
  43b504:	sturb	w8, [x29, #-1]
  43b508:	b	43b518 <_obstack_memory_used@@Base+0x13bf8>
  43b50c:	mov	w8, #0x1                   	// #1
  43b510:	and	w8, w8, #0x1
  43b514:	sturb	w8, [x29, #-1]
  43b518:	ldurb	w8, [x29, #-1]
  43b51c:	and	w0, w8, #0x1
  43b520:	ldp	x29, x30, [sp, #48]
  43b524:	add	sp, sp, #0x40
  43b528:	ret
  43b52c:	sub	sp, sp, #0x10
  43b530:	mov	w8, #0x1                   	// #1
  43b534:	str	x0, [sp, #8]
  43b538:	str	x1, [sp]
  43b53c:	mov	w0, w8
  43b540:	add	sp, sp, #0x10
  43b544:	ret
  43b548:	sub	sp, sp, #0xa0
  43b54c:	stp	x29, x30, [sp, #144]
  43b550:	add	x29, sp, #0x90
  43b554:	stur	x0, [x29, #-16]
  43b558:	stur	x1, [x29, #-24]
  43b55c:	ldur	x8, [x29, #-16]
  43b560:	ldr	x8, [x8, #152]
  43b564:	stur	x8, [x29, #-32]
  43b568:	stur	xzr, [x29, #-48]
  43b56c:	ldur	x8, [x29, #-48]
  43b570:	ldur	x9, [x29, #-24]
  43b574:	ldr	x9, [x9, #16]
  43b578:	cmp	x8, x9
  43b57c:	b.ge	43b938 <_obstack_memory_used@@Base+0x14018>  // b.tcont
  43b580:	ldur	x8, [x29, #-24]
  43b584:	mov	x9, #0x10                  	// #16
  43b588:	ldr	x8, [x8, #24]
  43b58c:	ldur	x10, [x29, #-48]
  43b590:	ldr	x8, [x8, x10, lsl #3]
  43b594:	str	x8, [sp, #48]
  43b598:	ldur	x8, [x29, #-32]
  43b59c:	ldr	x8, [x8]
  43b5a0:	ldr	x10, [sp, #48]
  43b5a4:	mul	x9, x9, x10
  43b5a8:	add	x8, x8, x9
  43b5ac:	ldr	w11, [x8, #8]
  43b5b0:	lsr	w11, w11, #20
  43b5b4:	and	w11, w11, #0x1
  43b5b8:	cbnz	w11, 43b5c0 <_obstack_memory_used@@Base+0x13ca0>
  43b5bc:	b	43b928 <_obstack_memory_used@@Base+0x14008>
  43b5c0:	ldur	x8, [x29, #-32]
  43b5c4:	ldr	x8, [x8]
  43b5c8:	ldr	x9, [sp, #48]
  43b5cc:	mov	x10, #0x10                  	// #16
  43b5d0:	mul	x9, x10, x9
  43b5d4:	add	x8, x8, x9
  43b5d8:	mov	x9, #0x8                   	// #8
  43b5dc:	ldr	w11, [x8, #8]
  43b5e0:	lsr	w9, w11, w9
  43b5e4:	and	w9, w9, #0x3ff
  43b5e8:	cbz	w9, 43b6fc <_obstack_memory_used@@Base+0x13ddc>
  43b5ec:	ldur	x0, [x29, #-16]
  43b5f0:	ldur	x8, [x29, #-16]
  43b5f4:	ldr	x1, [x8, #72]
  43b5f8:	ldur	x8, [x29, #-16]
  43b5fc:	ldr	w2, [x8, #160]
  43b600:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  43b604:	str	w0, [sp, #28]
  43b608:	ldur	x8, [x29, #-32]
  43b60c:	ldr	x8, [x8]
  43b610:	ldr	x9, [sp, #48]
  43b614:	mov	x10, #0x10                  	// #16
  43b618:	mul	x9, x10, x9
  43b61c:	add	x8, x8, x9
  43b620:	mov	x9, #0x8                   	// #8
  43b624:	ldr	w11, [x8, #8]
  43b628:	lsr	w9, w11, w9
  43b62c:	and	w9, w9, #0x3ff
  43b630:	and	w9, w9, #0x4
  43b634:	cbz	w9, 43b644 <_obstack_memory_used@@Base+0x13d24>
  43b638:	ldr	w8, [sp, #28]
  43b63c:	and	w8, w8, #0x1
  43b640:	cbz	w8, 43b6f8 <_obstack_memory_used@@Base+0x13dd8>
  43b644:	ldur	x8, [x29, #-32]
  43b648:	ldr	x8, [x8]
  43b64c:	ldr	x9, [sp, #48]
  43b650:	mov	x10, #0x10                  	// #16
  43b654:	mul	x9, x10, x9
  43b658:	add	x8, x8, x9
  43b65c:	mov	x9, #0x8                   	// #8
  43b660:	ldr	w11, [x8, #8]
  43b664:	lsr	w9, w11, w9
  43b668:	and	w9, w9, #0x3ff
  43b66c:	and	w9, w9, #0x8
  43b670:	cbz	w9, 43b680 <_obstack_memory_used@@Base+0x13d60>
  43b674:	ldr	w8, [sp, #28]
  43b678:	and	w8, w8, #0x1
  43b67c:	cbnz	w8, 43b6f8 <_obstack_memory_used@@Base+0x13dd8>
  43b680:	ldur	x8, [x29, #-32]
  43b684:	ldr	x8, [x8]
  43b688:	ldr	x9, [sp, #48]
  43b68c:	mov	x10, #0x10                  	// #16
  43b690:	mul	x9, x10, x9
  43b694:	add	x8, x8, x9
  43b698:	mov	x9, #0x8                   	// #8
  43b69c:	ldr	w11, [x8, #8]
  43b6a0:	lsr	w9, w11, w9
  43b6a4:	and	w9, w9, #0x3ff
  43b6a8:	and	w9, w9, #0x20
  43b6ac:	cbz	w9, 43b6bc <_obstack_memory_used@@Base+0x13d9c>
  43b6b0:	ldr	w8, [sp, #28]
  43b6b4:	and	w8, w8, #0x2
  43b6b8:	cbz	w8, 43b6f8 <_obstack_memory_used@@Base+0x13dd8>
  43b6bc:	ldur	x8, [x29, #-32]
  43b6c0:	ldr	x8, [x8]
  43b6c4:	ldr	x9, [sp, #48]
  43b6c8:	mov	x10, #0x10                  	// #16
  43b6cc:	mul	x9, x10, x9
  43b6d0:	add	x8, x8, x9
  43b6d4:	mov	x9, #0x8                   	// #8
  43b6d8:	ldr	w11, [x8, #8]
  43b6dc:	lsr	w9, w11, w9
  43b6e0:	and	w9, w9, #0x3ff
  43b6e4:	and	w9, w9, #0x80
  43b6e8:	cbz	w9, 43b6fc <_obstack_memory_used@@Base+0x13ddc>
  43b6ec:	ldr	w8, [sp, #28]
  43b6f0:	and	w8, w8, #0x8
  43b6f4:	cbnz	w8, 43b6fc <_obstack_memory_used@@Base+0x13ddc>
  43b6f8:	b	43b928 <_obstack_memory_used@@Base+0x14008>
  43b6fc:	ldur	x0, [x29, #-32]
  43b700:	ldr	x1, [sp, #48]
  43b704:	ldur	x2, [x29, #-16]
  43b708:	ldur	x8, [x29, #-16]
  43b70c:	ldr	x3, [x8, #72]
  43b710:	bl	43ad84 <_obstack_memory_used@@Base+0x13464>
  43b714:	str	w0, [sp, #44]
  43b718:	ldr	w9, [sp, #44]
  43b71c:	cbnz	w9, 43b724 <_obstack_memory_used@@Base+0x13e04>
  43b720:	b	43b928 <_obstack_memory_used@@Base+0x14008>
  43b724:	ldur	x8, [x29, #-16]
  43b728:	ldr	x8, [x8, #72]
  43b72c:	ldrsw	x9, [sp, #44]
  43b730:	add	x8, x8, x9
  43b734:	str	x8, [sp, #32]
  43b738:	ldur	x8, [x29, #-16]
  43b73c:	ldr	w10, [x8, #224]
  43b740:	ldr	w11, [sp, #44]
  43b744:	cmp	w10, w11
  43b748:	b.ge	43b758 <_obstack_memory_used@@Base+0x13e38>  // b.tcont
  43b74c:	ldr	w8, [sp, #44]
  43b750:	str	w8, [sp, #12]
  43b754:	b	43b764 <_obstack_memory_used@@Base+0x13e44>
  43b758:	ldur	x8, [x29, #-16]
  43b75c:	ldr	w9, [x8, #224]
  43b760:	str	w9, [sp, #12]
  43b764:	ldr	w8, [sp, #12]
  43b768:	ldur	x9, [x29, #-16]
  43b76c:	str	w8, [x9, #224]
  43b770:	ldur	x0, [x29, #-16]
  43b774:	ldr	x1, [sp, #32]
  43b778:	bl	439080 <_obstack_memory_used@@Base+0x11760>
  43b77c:	stur	w0, [x29, #-36]
  43b780:	ldur	w8, [x29, #-36]
  43b784:	cmp	w8, #0x0
  43b788:	cset	w8, ne  // ne = any
  43b78c:	and	w8, w8, #0x1
  43b790:	mov	w1, w8
  43b794:	sxtw	x9, w1
  43b798:	cbz	x9, 43b7a8 <_obstack_memory_used@@Base+0x13e88>
  43b79c:	ldur	w8, [x29, #-36]
  43b7a0:	stur	w8, [x29, #-4]
  43b7a4:	b	43b93c <_obstack_memory_used@@Base+0x1401c>
  43b7a8:	ldur	x8, [x29, #-32]
  43b7ac:	ldr	x8, [x8, #24]
  43b7b0:	ldr	x9, [sp, #48]
  43b7b4:	ldr	x8, [x8, x9, lsl #3]
  43b7b8:	mov	x9, #0xffffffffffffffff    	// #-1
  43b7bc:	cmp	x8, x9
  43b7c0:	b.eq	43b7c8 <_obstack_memory_used@@Base+0x13ea8>  // b.none
  43b7c4:	b	43b7c8 <_obstack_memory_used@@Base+0x13ea8>
  43b7c8:	ldur	x8, [x29, #-32]
  43b7cc:	ldr	x8, [x8, #48]
  43b7d0:	ldur	x9, [x29, #-32]
  43b7d4:	mov	x10, #0x18                  	// #24
  43b7d8:	ldr	x9, [x9, #24]
  43b7dc:	ldr	x11, [sp, #48]
  43b7e0:	mov	x12, #0x8                   	// #8
  43b7e4:	ldr	x9, [x9, x11, lsl #3]
  43b7e8:	mul	x9, x10, x9
  43b7ec:	add	x8, x8, x9
  43b7f0:	str	x8, [sp, #56]
  43b7f4:	ldur	x8, [x29, #-16]
  43b7f8:	ldr	x8, [x8, #184]
  43b7fc:	ldr	x9, [sp, #32]
  43b800:	mul	x9, x12, x9
  43b804:	add	x8, x8, x9
  43b808:	ldr	x8, [x8]
  43b80c:	str	x8, [sp, #16]
  43b810:	ldr	x8, [sp, #16]
  43b814:	cbnz	x8, 43b830 <_obstack_memory_used@@Base+0x13f10>
  43b818:	ldr	x8, [sp, #56]
  43b81c:	ldr	q0, [x8]
  43b820:	str	q0, [sp, #64]
  43b824:	ldr	x8, [x8, #16]
  43b828:	str	x8, [sp, #80]
  43b82c:	b	43b870 <_obstack_memory_used@@Base+0x13f50>
  43b830:	ldr	x8, [sp, #16]
  43b834:	ldr	x1, [x8, #80]
  43b838:	ldr	x2, [sp, #56]
  43b83c:	add	x0, sp, #0x40
  43b840:	bl	438c48 <_obstack_memory_used@@Base+0x11328>
  43b844:	stur	w0, [x29, #-36]
  43b848:	ldur	w9, [x29, #-36]
  43b84c:	cmp	w9, #0x0
  43b850:	cset	w9, ne  // ne = any
  43b854:	and	w9, w9, #0x1
  43b858:	mov	w1, w9
  43b85c:	sxtw	x8, w1
  43b860:	cbz	x8, 43b870 <_obstack_memory_used@@Base+0x13f50>
  43b864:	ldur	w8, [x29, #-36]
  43b868:	stur	w8, [x29, #-4]
  43b86c:	b	43b93c <_obstack_memory_used@@Base+0x1401c>
  43b870:	ldur	x0, [x29, #-16]
  43b874:	ldr	x8, [sp, #32]
  43b878:	subs	x1, x8, #0x1
  43b87c:	ldur	x8, [x29, #-16]
  43b880:	ldr	w2, [x8, #160]
  43b884:	bl	43727c <_obstack_memory_used@@Base+0xf95c>
  43b888:	str	w0, [sp, #28]
  43b88c:	ldur	x1, [x29, #-32]
  43b890:	ldr	w3, [sp, #28]
  43b894:	sub	x0, x29, #0x24
  43b898:	add	x2, sp, #0x40
  43b89c:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  43b8a0:	ldur	x8, [x29, #-16]
  43b8a4:	ldr	x8, [x8, #184]
  43b8a8:	ldr	x9, [sp, #32]
  43b8ac:	mov	x10, #0x8                   	// #8
  43b8b0:	mul	x9, x10, x9
  43b8b4:	add	x8, x8, x9
  43b8b8:	str	x0, [x8]
  43b8bc:	ldr	x8, [sp, #16]
  43b8c0:	cbz	x8, 43b8d0 <_obstack_memory_used@@Base+0x13fb0>
  43b8c4:	add	x8, sp, #0x40
  43b8c8:	ldr	x0, [x8, #16]
  43b8cc:	bl	4026c0 <free@plt>
  43b8d0:	ldur	x8, [x29, #-16]
  43b8d4:	ldr	x8, [x8, #184]
  43b8d8:	ldr	x9, [sp, #32]
  43b8dc:	mov	x10, #0x8                   	// #8
  43b8e0:	mul	x9, x10, x9
  43b8e4:	add	x8, x8, x9
  43b8e8:	ldr	x8, [x8]
  43b8ec:	mov	w11, #0x0                   	// #0
  43b8f0:	str	w11, [sp, #8]
  43b8f4:	cbnz	x8, 43b908 <_obstack_memory_used@@Base+0x13fe8>
  43b8f8:	ldur	w8, [x29, #-36]
  43b8fc:	cmp	w8, #0x0
  43b900:	cset	w8, ne  // ne = any
  43b904:	str	w8, [sp, #8]
  43b908:	ldr	w8, [sp, #8]
  43b90c:	and	w8, w8, #0x1
  43b910:	mov	w0, w8
  43b914:	sxtw	x9, w0
  43b918:	cbz	x9, 43b928 <_obstack_memory_used@@Base+0x14008>
  43b91c:	ldur	w8, [x29, #-36]
  43b920:	stur	w8, [x29, #-4]
  43b924:	b	43b93c <_obstack_memory_used@@Base+0x1401c>
  43b928:	ldur	x8, [x29, #-48]
  43b92c:	add	x8, x8, #0x1
  43b930:	stur	x8, [x29, #-48]
  43b934:	b	43b56c <_obstack_memory_used@@Base+0x13c4c>
  43b938:	stur	wzr, [x29, #-4]
  43b93c:	ldur	w0, [x29, #-4]
  43b940:	ldp	x29, x30, [sp, #144]
  43b944:	add	sp, sp, #0xa0
  43b948:	ret
  43b94c:	stp	x29, x30, [sp, #-16]!
  43b950:	mov	x29, sp
  43b954:	sub	sp, sp, #0xf0
  43b958:	mov	w8, #0x0                   	// #0
  43b95c:	mov	x9, xzr
  43b960:	mov	x10, #0x3800                	// #14336
  43b964:	stur	x0, [x29, #-16]
  43b968:	stur	x1, [x29, #-24]
  43b96c:	sturb	w8, [x29, #-53]
  43b970:	sturb	w8, [x29, #-73]
  43b974:	sturb	w8, [x29, #-74]
  43b978:	stur	x9, [x29, #-104]
  43b97c:	mov	x0, x10
  43b980:	bl	402450 <malloc@plt>
  43b984:	stur	x0, [x29, #-200]
  43b988:	ldur	x9, [x29, #-200]
  43b98c:	cmp	x9, #0x0
  43b990:	cset	w8, eq  // eq = none
  43b994:	and	w8, w8, #0x1
  43b998:	mov	w0, w8
  43b99c:	sxtw	x9, w0
  43b9a0:	cbz	x9, 43b9b4 <_obstack_memory_used@@Base+0x14094>
  43b9a4:	mov	w8, wzr
  43b9a8:	and	w8, w8, #0x1
  43b9ac:	sturb	w8, [x29, #-1]
  43b9b0:	b	43c388 <_obstack_memory_used@@Base+0x14a68>
  43b9b4:	mov	w8, #0x1                   	// #1
  43b9b8:	sturb	w8, [x29, #-73]
  43b9bc:	ldur	x9, [x29, #-200]
  43b9c0:	stur	x9, [x29, #-152]
  43b9c4:	ldur	x9, [x29, #-200]
  43b9c8:	mov	x10, #0x1800                	// #6144
  43b9cc:	add	x9, x9, x10
  43b9d0:	stur	x9, [x29, #-160]
  43b9d4:	ldur	x9, [x29, #-24]
  43b9d8:	mov	x10, xzr
  43b9dc:	str	x10, [x9, #88]
  43b9e0:	ldur	x9, [x29, #-24]
  43b9e4:	str	x10, [x9, #96]
  43b9e8:	ldur	x0, [x29, #-16]
  43b9ec:	ldur	x1, [x29, #-24]
  43b9f0:	ldur	x2, [x29, #-152]
  43b9f4:	ldur	x3, [x29, #-160]
  43b9f8:	bl	43c39c <_obstack_memory_used@@Base+0x14a7c>
  43b9fc:	stur	x0, [x29, #-88]
  43ba00:	ldur	x9, [x29, #-88]
  43ba04:	cmp	x9, #0x0
  43ba08:	cset	w8, le
  43ba0c:	and	w8, w8, #0x1
  43ba10:	mov	w0, w8
  43ba14:	sxtw	x9, w0
  43ba18:	cbz	x9, 43ba9c <_obstack_memory_used@@Base+0x1417c>
  43ba1c:	ldurb	w8, [x29, #-73]
  43ba20:	tbnz	w8, #0, 43ba28 <_obstack_memory_used@@Base+0x14108>
  43ba24:	b	43ba30 <_obstack_memory_used@@Base+0x14110>
  43ba28:	ldur	x0, [x29, #-200]
  43ba2c:	bl	4026c0 <free@plt>
  43ba30:	ldur	x8, [x29, #-88]
  43ba34:	cbnz	x8, 43ba8c <_obstack_memory_used@@Base+0x1416c>
  43ba38:	mov	x0, #0x8                   	// #8
  43ba3c:	mov	x1, #0x100                 	// #256
  43ba40:	bl	402540 <calloc@plt>
  43ba44:	ldur	x8, [x29, #-24]
  43ba48:	str	x0, [x8, #88]
  43ba4c:	ldur	x8, [x29, #-24]
  43ba50:	ldr	x8, [x8, #88]
  43ba54:	cmp	x8, #0x0
  43ba58:	cset	w9, eq  // eq = none
  43ba5c:	and	w9, w9, #0x1
  43ba60:	mov	w0, w9
  43ba64:	sxtw	x8, w0
  43ba68:	cbz	x8, 43ba7c <_obstack_memory_used@@Base+0x1415c>
  43ba6c:	mov	w8, wzr
  43ba70:	and	w8, w8, #0x1
  43ba74:	sturb	w8, [x29, #-1]
  43ba78:	b	43c388 <_obstack_memory_used@@Base+0x14a68>
  43ba7c:	mov	w8, #0x1                   	// #1
  43ba80:	and	w8, w8, #0x1
  43ba84:	sturb	w8, [x29, #-1]
  43ba88:	b	43c388 <_obstack_memory_used@@Base+0x14a68>
  43ba8c:	mov	w8, wzr
  43ba90:	and	w8, w8, #0x1
  43ba94:	sturb	w8, [x29, #-1]
  43ba98:	b	43c388 <_obstack_memory_used@@Base+0x14a68>
  43ba9c:	ldur	x8, [x29, #-88]
  43baa0:	add	x1, x8, #0x1
  43baa4:	sub	x0, x29, #0x90
  43baa8:	bl	433718 <_obstack_memory_used@@Base+0xbdf8>
  43baac:	stur	w0, [x29, #-28]
  43bab0:	ldur	w9, [x29, #-28]
  43bab4:	cmp	w9, #0x0
  43bab8:	cset	w9, ne  // ne = any
  43babc:	and	w9, w9, #0x1
  43bac0:	mov	w1, w9
  43bac4:	sxtw	x8, w1
  43bac8:	cbz	x8, 43bad0 <_obstack_memory_used@@Base+0x141b0>
  43bacc:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43bad0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43bad4:	movk	x8, #0xa855
  43bad8:	movk	x8, #0xaaa, lsl #48
  43badc:	stur	x8, [x29, #-208]
  43bae0:	ldur	x8, [x29, #-208]
  43bae4:	ldur	x9, [x29, #-88]
  43bae8:	cmp	x8, x9
  43baec:	cset	w10, cc  // cc = lo, ul, last
  43baf0:	and	w10, w10, #0x1
  43baf4:	mov	w0, w10
  43baf8:	sxtw	x8, w0
  43bafc:	cbz	x8, 43bb04 <_obstack_memory_used@@Base+0x141e4>
  43bb00:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43bb04:	ldur	x8, [x29, #-88]
  43bb08:	mov	x9, #0x3                   	// #3
  43bb0c:	mul	x8, x8, x9
  43bb10:	mov	x9, #0x8                   	// #8
  43bb14:	mul	x8, x8, x9
  43bb18:	mov	x9, #0x3800                	// #14336
  43bb1c:	add	x8, x9, x8
  43bb20:	cmp	x8, #0xfc0
  43bb24:	b.cs	43bb60 <_obstack_memory_used@@Base+0x14240>  // b.hs, b.nlast
  43bb28:	ldur	x8, [x29, #-88]
  43bb2c:	mov	x9, #0x3                   	// #3
  43bb30:	mul	x8, x8, x9
  43bb34:	mov	x9, #0x8                   	// #8
  43bb38:	mul	x8, x8, x9
  43bb3c:	mov	x9, #0x1                   	// #1
  43bb40:	mul	x8, x8, x9
  43bb44:	add	x8, x8, #0xf
  43bb48:	and	x8, x8, #0xfffffffffffffff0
  43bb4c:	mov	x9, sp
  43bb50:	subs	x8, x9, x8
  43bb54:	mov	sp, x8
  43bb58:	stur	x8, [x29, #-104]
  43bb5c:	b	43bc24 <_obstack_memory_used@@Base+0x14304>
  43bb60:	ldur	x8, [x29, #-88]
  43bb64:	mov	x9, #0x3                   	// #3
  43bb68:	mul	x8, x8, x9
  43bb6c:	mov	x9, #0x8                   	// #8
  43bb70:	mul	x0, x8, x9
  43bb74:	bl	402450 <malloc@plt>
  43bb78:	stur	x0, [x29, #-104]
  43bb7c:	ldur	x8, [x29, #-104]
  43bb80:	cmp	x8, #0x0
  43bb84:	cset	w10, eq  // eq = none
  43bb88:	and	w10, w10, #0x1
  43bb8c:	mov	w0, w10
  43bb90:	sxtw	x8, w0
  43bb94:	cbz	x8, 43bc1c <_obstack_memory_used@@Base+0x142fc>
  43bb98:	ldurb	w8, [x29, #-74]
  43bb9c:	tbnz	w8, #0, 43bba4 <_obstack_memory_used@@Base+0x14284>
  43bba0:	b	43bbac <_obstack_memory_used@@Base+0x1428c>
  43bba4:	ldur	x0, [x29, #-104]
  43bba8:	bl	4026c0 <free@plt>
  43bbac:	sub	x8, x29, #0x90
  43bbb0:	ldr	x0, [x8, #16]
  43bbb4:	bl	4026c0 <free@plt>
  43bbb8:	stur	xzr, [x29, #-40]
  43bbbc:	ldur	x8, [x29, #-40]
  43bbc0:	ldur	x9, [x29, #-88]
  43bbc4:	cmp	x8, x9
  43bbc8:	b.ge	43bbf8 <_obstack_memory_used@@Base+0x142d8>  // b.tcont
  43bbcc:	ldur	x8, [x29, #-152]
  43bbd0:	ldur	x9, [x29, #-40]
  43bbd4:	mov	x10, #0x18                  	// #24
  43bbd8:	mul	x9, x10, x9
  43bbdc:	add	x8, x8, x9
  43bbe0:	ldr	x0, [x8, #16]
  43bbe4:	bl	4026c0 <free@plt>
  43bbe8:	ldur	x8, [x29, #-40]
  43bbec:	add	x8, x8, #0x1
  43bbf0:	stur	x8, [x29, #-40]
  43bbf4:	b	43bbbc <_obstack_memory_used@@Base+0x1429c>
  43bbf8:	ldurb	w8, [x29, #-73]
  43bbfc:	tbnz	w8, #0, 43bc04 <_obstack_memory_used@@Base+0x142e4>
  43bc00:	b	43bc0c <_obstack_memory_used@@Base+0x142ec>
  43bc04:	ldur	x0, [x29, #-200]
  43bc08:	bl	4026c0 <free@plt>
  43bc0c:	mov	w8, wzr
  43bc10:	and	w8, w8, #0x1
  43bc14:	sturb	w8, [x29, #-1]
  43bc18:	b	43c388 <_obstack_memory_used@@Base+0x14a68>
  43bc1c:	mov	w8, #0x1                   	// #1
  43bc20:	sturb	w8, [x29, #-74]
  43bc24:	ldur	x8, [x29, #-104]
  43bc28:	ldur	x9, [x29, #-88]
  43bc2c:	mov	x10, #0x8                   	// #8
  43bc30:	mul	x9, x10, x9
  43bc34:	add	x8, x8, x9
  43bc38:	stur	x8, [x29, #-112]
  43bc3c:	ldur	x8, [x29, #-112]
  43bc40:	ldur	x9, [x29, #-88]
  43bc44:	mul	x9, x10, x9
  43bc48:	add	x8, x8, x9
  43bc4c:	stur	x8, [x29, #-120]
  43bc50:	sub	x0, x29, #0xc0
  43bc54:	bl	43cb98 <_obstack_memory_used@@Base+0x15278>
  43bc58:	stur	xzr, [x29, #-40]
  43bc5c:	ldur	x8, [x29, #-40]
  43bc60:	ldur	x9, [x29, #-88]
  43bc64:	cmp	x8, x9
  43bc68:	b.ge	43bf88 <_obstack_memory_used@@Base+0x14668>  // b.tcont
  43bc6c:	stur	xzr, [x29, #-136]
  43bc70:	stur	xzr, [x29, #-48]
  43bc74:	ldur	x8, [x29, #-48]
  43bc78:	ldur	x9, [x29, #-152]
  43bc7c:	ldur	x10, [x29, #-40]
  43bc80:	mov	x11, #0x18                  	// #24
  43bc84:	mul	x10, x11, x10
  43bc88:	add	x9, x9, x10
  43bc8c:	ldr	x9, [x9, #8]
  43bc90:	cmp	x8, x9
  43bc94:	b.ge	43bd2c <_obstack_memory_used@@Base+0x1440c>  // b.tcont
  43bc98:	ldur	x8, [x29, #-16]
  43bc9c:	mov	x9, #0x18                  	// #24
  43bca0:	ldr	x8, [x8, #24]
  43bca4:	ldur	x10, [x29, #-152]
  43bca8:	ldur	x11, [x29, #-40]
  43bcac:	mul	x9, x9, x11
  43bcb0:	add	x9, x10, x9
  43bcb4:	ldr	x9, [x9, #16]
  43bcb8:	ldur	x10, [x29, #-48]
  43bcbc:	ldr	x9, [x9, x10, lsl #3]
  43bcc0:	ldr	x8, [x8, x9, lsl #3]
  43bcc4:	stur	x8, [x29, #-216]
  43bcc8:	ldur	x8, [x29, #-216]
  43bccc:	mov	x9, #0xffffffffffffffff    	// #-1
  43bcd0:	cmp	x8, x9
  43bcd4:	b.eq	43bd1c <_obstack_memory_used@@Base+0x143fc>  // b.none
  43bcd8:	ldur	x8, [x29, #-16]
  43bcdc:	ldr	x8, [x8, #48]
  43bce0:	ldur	x9, [x29, #-216]
  43bce4:	mov	x10, #0x18                  	// #24
  43bce8:	mul	x9, x10, x9
  43bcec:	add	x1, x8, x9
  43bcf0:	sub	x0, x29, #0x90
  43bcf4:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  43bcf8:	stur	w0, [x29, #-28]
  43bcfc:	ldur	w11, [x29, #-28]
  43bd00:	cmp	w11, #0x0
  43bd04:	cset	w11, ne  // ne = any
  43bd08:	and	w11, w11, #0x1
  43bd0c:	mov	w1, w11
  43bd10:	sxtw	x8, w1
  43bd14:	cbz	x8, 43bd1c <_obstack_memory_used@@Base+0x143fc>
  43bd18:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43bd1c:	ldur	x8, [x29, #-48]
  43bd20:	add	x8, x8, #0x1
  43bd24:	stur	x8, [x29, #-48]
  43bd28:	b	43bc74 <_obstack_memory_used@@Base+0x14354>
  43bd2c:	ldur	x1, [x29, #-16]
  43bd30:	sub	x0, x29, #0x1c
  43bd34:	sub	x2, x29, #0x90
  43bd38:	mov	w8, wzr
  43bd3c:	mov	w3, w8
  43bd40:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  43bd44:	ldur	x9, [x29, #-104]
  43bd48:	ldur	x10, [x29, #-40]
  43bd4c:	mov	x11, #0x8                   	// #8
  43bd50:	mul	x10, x11, x10
  43bd54:	add	x9, x9, x10
  43bd58:	str	x0, [x9]
  43bd5c:	ldur	x9, [x29, #-104]
  43bd60:	ldur	x10, [x29, #-40]
  43bd64:	mul	x10, x11, x10
  43bd68:	add	x9, x9, x10
  43bd6c:	ldr	x9, [x9]
  43bd70:	mov	w8, #0x0                   	// #0
  43bd74:	stur	w8, [x29, #-220]
  43bd78:	cbnz	x9, 43bd8c <_obstack_memory_used@@Base+0x1446c>
  43bd7c:	ldur	w8, [x29, #-28]
  43bd80:	cmp	w8, #0x0
  43bd84:	cset	w8, ne  // ne = any
  43bd88:	stur	w8, [x29, #-220]
  43bd8c:	ldur	w8, [x29, #-220]
  43bd90:	and	w8, w8, #0x1
  43bd94:	mov	w0, w8
  43bd98:	sxtw	x9, w0
  43bd9c:	cbz	x9, 43bda4 <_obstack_memory_used@@Base+0x14484>
  43bda0:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43bda4:	ldur	x8, [x29, #-104]
  43bda8:	ldur	x9, [x29, #-40]
  43bdac:	mov	x10, #0x8                   	// #8
  43bdb0:	mul	x9, x10, x9
  43bdb4:	add	x8, x8, x9
  43bdb8:	ldr	x8, [x8]
  43bdbc:	ldrb	w11, [x8, #104]
  43bdc0:	mov	w12, #0x7                   	// #7
  43bdc4:	lsr	w11, w11, w12
  43bdc8:	and	w11, w11, #0xff
  43bdcc:	cbz	w11, 43bf08 <_obstack_memory_used@@Base+0x145e8>
  43bdd0:	ldur	x1, [x29, #-16]
  43bdd4:	sub	x0, x29, #0x1c
  43bdd8:	sub	x2, x29, #0x90
  43bddc:	mov	w3, #0x1                   	// #1
  43bde0:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  43bde4:	ldur	x8, [x29, #-112]
  43bde8:	ldur	x9, [x29, #-40]
  43bdec:	mov	x10, #0x8                   	// #8
  43bdf0:	mul	x9, x10, x9
  43bdf4:	add	x8, x8, x9
  43bdf8:	str	x0, [x8]
  43bdfc:	ldur	x8, [x29, #-112]
  43be00:	ldur	x9, [x29, #-40]
  43be04:	mul	x9, x10, x9
  43be08:	add	x8, x8, x9
  43be0c:	ldr	x8, [x8]
  43be10:	mov	w11, #0x0                   	// #0
  43be14:	stur	w11, [x29, #-224]
  43be18:	cbnz	x8, 43be2c <_obstack_memory_used@@Base+0x1450c>
  43be1c:	ldur	w8, [x29, #-28]
  43be20:	cmp	w8, #0x0
  43be24:	cset	w8, ne  // ne = any
  43be28:	stur	w8, [x29, #-224]
  43be2c:	ldur	w8, [x29, #-224]
  43be30:	and	w8, w8, #0x1
  43be34:	mov	w0, w8
  43be38:	sxtw	x9, w0
  43be3c:	cbz	x9, 43be44 <_obstack_memory_used@@Base+0x14524>
  43be40:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43be44:	ldur	x8, [x29, #-104]
  43be48:	ldur	x9, [x29, #-40]
  43be4c:	mov	x10, #0x8                   	// #8
  43be50:	mul	x9, x10, x9
  43be54:	add	x8, x8, x9
  43be58:	ldr	x8, [x8]
  43be5c:	ldur	x9, [x29, #-112]
  43be60:	ldur	x11, [x29, #-40]
  43be64:	mul	x10, x10, x11
  43be68:	add	x9, x9, x10
  43be6c:	ldr	x9, [x9]
  43be70:	cmp	x8, x9
  43be74:	b.eq	43be90 <_obstack_memory_used@@Base+0x14570>  // b.none
  43be78:	ldur	x8, [x29, #-16]
  43be7c:	ldr	w9, [x8, #180]
  43be80:	cmp	w9, #0x1
  43be84:	b.le	43be90 <_obstack_memory_used@@Base+0x14570>
  43be88:	mov	w8, #0x1                   	// #1
  43be8c:	sturb	w8, [x29, #-53]
  43be90:	ldur	x1, [x29, #-16]
  43be94:	sub	x0, x29, #0x1c
  43be98:	sub	x2, x29, #0x90
  43be9c:	mov	w3, #0x2                   	// #2
  43bea0:	bl	434844 <_obstack_memory_used@@Base+0xcf24>
  43bea4:	ldur	x8, [x29, #-120]
  43bea8:	ldur	x9, [x29, #-40]
  43beac:	mov	x10, #0x8                   	// #8
  43beb0:	mul	x9, x10, x9
  43beb4:	add	x8, x8, x9
  43beb8:	str	x0, [x8]
  43bebc:	ldur	x8, [x29, #-120]
  43bec0:	ldur	x9, [x29, #-40]
  43bec4:	mul	x9, x10, x9
  43bec8:	add	x8, x8, x9
  43becc:	ldr	x8, [x8]
  43bed0:	mov	w11, #0x0                   	// #0
  43bed4:	stur	w11, [x29, #-228]
  43bed8:	cbnz	x8, 43beec <_obstack_memory_used@@Base+0x145cc>
  43bedc:	ldur	w8, [x29, #-28]
  43bee0:	cmp	w8, #0x0
  43bee4:	cset	w8, ne  // ne = any
  43bee8:	stur	w8, [x29, #-228]
  43beec:	ldur	w8, [x29, #-228]
  43bef0:	and	w8, w8, #0x1
  43bef4:	mov	w0, w8
  43bef8:	sxtw	x9, w0
  43befc:	cbz	x9, 43bf04 <_obstack_memory_used@@Base+0x145e4>
  43bf00:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43bf04:	b	43bf5c <_obstack_memory_used@@Base+0x1463c>
  43bf08:	ldur	x8, [x29, #-104]
  43bf0c:	ldur	x9, [x29, #-40]
  43bf10:	mov	x10, #0x8                   	// #8
  43bf14:	mul	x9, x10, x9
  43bf18:	add	x8, x8, x9
  43bf1c:	ldr	x8, [x8]
  43bf20:	ldur	x9, [x29, #-112]
  43bf24:	ldur	x11, [x29, #-40]
  43bf28:	mul	x11, x10, x11
  43bf2c:	add	x9, x9, x11
  43bf30:	str	x8, [x9]
  43bf34:	ldur	x8, [x29, #-104]
  43bf38:	ldur	x9, [x29, #-40]
  43bf3c:	mul	x9, x10, x9
  43bf40:	add	x8, x8, x9
  43bf44:	ldr	x8, [x8]
  43bf48:	ldur	x9, [x29, #-120]
  43bf4c:	ldur	x11, [x29, #-40]
  43bf50:	mul	x10, x10, x11
  43bf54:	add	x9, x9, x10
  43bf58:	str	x8, [x9]
  43bf5c:	ldur	x8, [x29, #-160]
  43bf60:	ldur	x9, [x29, #-40]
  43bf64:	mov	x10, #0x20                  	// #32
  43bf68:	mul	x9, x10, x9
  43bf6c:	add	x1, x8, x9
  43bf70:	sub	x0, x29, #0xc0
  43bf74:	bl	43cbc8 <_obstack_memory_used@@Base+0x152a8>
  43bf78:	ldur	x8, [x29, #-40]
  43bf7c:	add	x8, x8, #0x1
  43bf80:	stur	x8, [x29, #-40]
  43bf84:	b	43bc5c <_obstack_memory_used@@Base+0x1433c>
  43bf88:	ldurb	w8, [x29, #-53]
  43bf8c:	tbnz	w8, #0, 43c104 <_obstack_memory_used@@Base+0x147e4>
  43bf90:	mov	x0, #0x8                   	// #8
  43bf94:	mov	x1, #0x100                 	// #256
  43bf98:	bl	402540 <calloc@plt>
  43bf9c:	ldur	x8, [x29, #-24]
  43bfa0:	str	x0, [x8, #88]
  43bfa4:	stur	x0, [x29, #-96]
  43bfa8:	ldur	x8, [x29, #-96]
  43bfac:	cmp	x8, #0x0
  43bfb0:	cset	w9, eq  // eq = none
  43bfb4:	and	w9, w9, #0x1
  43bfb8:	mov	w0, w9
  43bfbc:	sxtw	x8, w0
  43bfc0:	cbz	x8, 43bfc8 <_obstack_memory_used@@Base+0x146a8>
  43bfc4:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43bfc8:	stur	xzr, [x29, #-40]
  43bfcc:	ldur	x8, [x29, #-40]
  43bfd0:	cmp	x8, #0x4
  43bfd4:	b.ge	43c100 <_obstack_memory_used@@Base+0x147e0>  // b.tcont
  43bfd8:	ldur	x8, [x29, #-40]
  43bfdc:	mov	x9, #0x40                  	// #64
  43bfe0:	mul	x8, x8, x9
  43bfe4:	stur	w8, [x29, #-52]
  43bfe8:	ldur	x9, [x29, #-40]
  43bfec:	sub	x10, x29, #0xc0
  43bff0:	ldr	x9, [x10, x9, lsl #3]
  43bff4:	stur	x9, [x29, #-64]
  43bff8:	mov	x9, #0x1                   	// #1
  43bffc:	stur	x9, [x29, #-72]
  43c000:	ldur	x8, [x29, #-64]
  43c004:	cbz	x8, 43c0f0 <_obstack_memory_used@@Base+0x147d0>
  43c008:	ldur	x8, [x29, #-64]
  43c00c:	and	x8, x8, #0x1
  43c010:	cbz	x8, 43c0c8 <_obstack_memory_used@@Base+0x147a8>
  43c014:	stur	xzr, [x29, #-48]
  43c018:	ldur	x8, [x29, #-160]
  43c01c:	ldur	x9, [x29, #-48]
  43c020:	mov	x10, #0x20                  	// #32
  43c024:	mul	x9, x10, x9
  43c028:	add	x8, x8, x9
  43c02c:	ldur	x9, [x29, #-40]
  43c030:	ldr	x8, [x8, x9, lsl #3]
  43c034:	ldur	x9, [x29, #-72]
  43c038:	and	x8, x8, x9
  43c03c:	cbnz	x8, 43c050 <_obstack_memory_used@@Base+0x14730>
  43c040:	ldur	x8, [x29, #-48]
  43c044:	add	x8, x8, #0x1
  43c048:	stur	x8, [x29, #-48]
  43c04c:	b	43c018 <_obstack_memory_used@@Base+0x146f8>
  43c050:	ldur	x8, [x29, #-16]
  43c054:	add	x8, x8, #0xb8
  43c058:	ldur	x9, [x29, #-40]
  43c05c:	ldr	x8, [x8, x9, lsl #3]
  43c060:	ldur	x9, [x29, #-72]
  43c064:	and	x8, x8, x9
  43c068:	cbz	x8, 43c09c <_obstack_memory_used@@Base+0x1477c>
  43c06c:	ldur	x8, [x29, #-112]
  43c070:	ldur	x9, [x29, #-48]
  43c074:	mov	x10, #0x8                   	// #8
  43c078:	mul	x9, x10, x9
  43c07c:	add	x8, x8, x9
  43c080:	ldr	x8, [x8]
  43c084:	ldur	x9, [x29, #-96]
  43c088:	ldursw	x11, [x29, #-52]
  43c08c:	mul	x10, x10, x11
  43c090:	add	x9, x9, x10
  43c094:	str	x8, [x9]
  43c098:	b	43c0c8 <_obstack_memory_used@@Base+0x147a8>
  43c09c:	ldur	x8, [x29, #-104]
  43c0a0:	ldur	x9, [x29, #-48]
  43c0a4:	mov	x10, #0x8                   	// #8
  43c0a8:	mul	x9, x10, x9
  43c0ac:	add	x8, x8, x9
  43c0b0:	ldr	x8, [x8]
  43c0b4:	ldur	x9, [x29, #-96]
  43c0b8:	ldursw	x11, [x29, #-52]
  43c0bc:	mul	x10, x10, x11
  43c0c0:	add	x9, x9, x10
  43c0c4:	str	x8, [x9]
  43c0c8:	ldur	x8, [x29, #-72]
  43c0cc:	lsl	x8, x8, #1
  43c0d0:	stur	x8, [x29, #-72]
  43c0d4:	ldur	x8, [x29, #-64]
  43c0d8:	lsr	x8, x8, #1
  43c0dc:	stur	x8, [x29, #-64]
  43c0e0:	ldur	w9, [x29, #-52]
  43c0e4:	add	w9, w9, #0x1
  43c0e8:	stur	w9, [x29, #-52]
  43c0ec:	b	43c000 <_obstack_memory_used@@Base+0x146e0>
  43c0f0:	ldur	x8, [x29, #-40]
  43c0f4:	add	x8, x8, #0x1
  43c0f8:	stur	x8, [x29, #-40]
  43c0fc:	b	43bfcc <_obstack_memory_used@@Base+0x146ac>
  43c100:	b	43c25c <_obstack_memory_used@@Base+0x1493c>
  43c104:	mov	x0, #0x8                   	// #8
  43c108:	mov	x1, #0x200                 	// #512
  43c10c:	bl	402540 <calloc@plt>
  43c110:	ldur	x8, [x29, #-24]
  43c114:	str	x0, [x8, #96]
  43c118:	stur	x0, [x29, #-96]
  43c11c:	ldur	x8, [x29, #-96]
  43c120:	cmp	x8, #0x0
  43c124:	cset	w9, eq  // eq = none
  43c128:	and	w9, w9, #0x1
  43c12c:	mov	w0, w9
  43c130:	sxtw	x8, w0
  43c134:	cbz	x8, 43c13c <_obstack_memory_used@@Base+0x1481c>
  43c138:	b	43bb98 <_obstack_memory_used@@Base+0x14278>
  43c13c:	stur	xzr, [x29, #-40]
  43c140:	ldur	x8, [x29, #-40]
  43c144:	cmp	x8, #0x4
  43c148:	b.ge	43c25c <_obstack_memory_used@@Base+0x1493c>  // b.tcont
  43c14c:	ldur	x8, [x29, #-40]
  43c150:	mov	x9, #0x40                  	// #64
  43c154:	mul	x8, x8, x9
  43c158:	stur	w8, [x29, #-52]
  43c15c:	ldur	x9, [x29, #-40]
  43c160:	sub	x10, x29, #0xc0
  43c164:	ldr	x9, [x10, x9, lsl #3]
  43c168:	stur	x9, [x29, #-64]
  43c16c:	mov	x9, #0x1                   	// #1
  43c170:	stur	x9, [x29, #-72]
  43c174:	ldur	x8, [x29, #-64]
  43c178:	cbz	x8, 43c24c <_obstack_memory_used@@Base+0x1492c>
  43c17c:	ldur	x8, [x29, #-64]
  43c180:	and	x8, x8, #0x1
  43c184:	cbz	x8, 43c224 <_obstack_memory_used@@Base+0x14904>
  43c188:	stur	xzr, [x29, #-48]
  43c18c:	ldur	x8, [x29, #-160]
  43c190:	ldur	x9, [x29, #-48]
  43c194:	mov	x10, #0x20                  	// #32
  43c198:	mul	x9, x10, x9
  43c19c:	add	x8, x8, x9
  43c1a0:	ldur	x9, [x29, #-40]
  43c1a4:	ldr	x8, [x8, x9, lsl #3]
  43c1a8:	ldur	x9, [x29, #-72]
  43c1ac:	and	x8, x8, x9
  43c1b0:	cbnz	x8, 43c1c4 <_obstack_memory_used@@Base+0x148a4>
  43c1b4:	ldur	x8, [x29, #-48]
  43c1b8:	add	x8, x8, #0x1
  43c1bc:	stur	x8, [x29, #-48]
  43c1c0:	b	43c18c <_obstack_memory_used@@Base+0x1486c>
  43c1c4:	ldur	x8, [x29, #-104]
  43c1c8:	ldur	x9, [x29, #-48]
  43c1cc:	mov	x10, #0x8                   	// #8
  43c1d0:	mul	x9, x10, x9
  43c1d4:	add	x8, x8, x9
  43c1d8:	ldr	x8, [x8]
  43c1dc:	ldur	x9, [x29, #-96]
  43c1e0:	ldursw	x11, [x29, #-52]
  43c1e4:	mul	x11, x10, x11
  43c1e8:	add	x9, x9, x11
  43c1ec:	str	x8, [x9]
  43c1f0:	ldur	x8, [x29, #-112]
  43c1f4:	ldur	x9, [x29, #-48]
  43c1f8:	mul	x9, x10, x9
  43c1fc:	add	x8, x8, x9
  43c200:	ldr	x8, [x8]
  43c204:	ldur	x9, [x29, #-96]
  43c208:	ldur	w12, [x29, #-52]
  43c20c:	add	w12, w12, #0x100
  43c210:	mov	w0, w12
  43c214:	sxtw	x11, w0
  43c218:	mul	x10, x10, x11
  43c21c:	add	x9, x9, x10
  43c220:	str	x8, [x9]
  43c224:	ldur	x8, [x29, #-72]
  43c228:	lsl	x8, x8, #1
  43c22c:	stur	x8, [x29, #-72]
  43c230:	ldur	x8, [x29, #-64]
  43c234:	lsr	x8, x8, #1
  43c238:	stur	x8, [x29, #-64]
  43c23c:	ldur	w9, [x29, #-52]
  43c240:	add	w9, w9, #0x1
  43c244:	stur	w9, [x29, #-52]
  43c248:	b	43c174 <_obstack_memory_used@@Base+0x14854>
  43c24c:	ldur	x8, [x29, #-40]
  43c250:	add	x8, x8, #0x1
  43c254:	stur	x8, [x29, #-40]
  43c258:	b	43c140 <_obstack_memory_used@@Base+0x14820>
  43c25c:	sub	x0, x29, #0xc0
  43c260:	mov	x1, #0xa                   	// #10
  43c264:	bl	4375fc <_obstack_memory_used@@Base+0xfcdc>
  43c268:	tbnz	w0, #0, 43c270 <_obstack_memory_used@@Base+0x14950>
  43c26c:	b	43c308 <_obstack_memory_used@@Base+0x149e8>
  43c270:	stur	xzr, [x29, #-48]
  43c274:	ldur	x8, [x29, #-48]
  43c278:	ldur	x9, [x29, #-88]
  43c27c:	cmp	x8, x9
  43c280:	b.ge	43c308 <_obstack_memory_used@@Base+0x149e8>  // b.tcont
  43c284:	ldur	x8, [x29, #-160]
  43c288:	ldur	x9, [x29, #-48]
  43c28c:	mov	x10, #0x20                  	// #32
  43c290:	mul	x9, x10, x9
  43c294:	add	x0, x8, x9
  43c298:	mov	x1, #0xa                   	// #10
  43c29c:	bl	4375fc <_obstack_memory_used@@Base+0xfcdc>
  43c2a0:	tbnz	w0, #0, 43c2a8 <_obstack_memory_used@@Base+0x14988>
  43c2a4:	b	43c2f8 <_obstack_memory_used@@Base+0x149d8>
  43c2a8:	ldur	x8, [x29, #-120]
  43c2ac:	ldur	x9, [x29, #-48]
  43c2b0:	mov	x10, #0x8                   	// #8
  43c2b4:	mul	x9, x10, x9
  43c2b8:	add	x8, x8, x9
  43c2bc:	ldr	x8, [x8]
  43c2c0:	ldur	x9, [x29, #-96]
  43c2c4:	str	x8, [x9, #80]
  43c2c8:	ldurb	w11, [x29, #-53]
  43c2cc:	tbnz	w11, #0, 43c2d4 <_obstack_memory_used@@Base+0x149b4>
  43c2d0:	b	43c2f4 <_obstack_memory_used@@Base+0x149d4>
  43c2d4:	ldur	x8, [x29, #-120]
  43c2d8:	ldur	x9, [x29, #-48]
  43c2dc:	mov	x10, #0x8                   	// #8
  43c2e0:	mul	x9, x10, x9
  43c2e4:	add	x8, x8, x9
  43c2e8:	ldr	x8, [x8]
  43c2ec:	ldur	x9, [x29, #-96]
  43c2f0:	str	x8, [x9, #2128]
  43c2f4:	b	43c308 <_obstack_memory_used@@Base+0x149e8>
  43c2f8:	ldur	x8, [x29, #-48]
  43c2fc:	add	x8, x8, #0x1
  43c300:	stur	x8, [x29, #-48]
  43c304:	b	43c274 <_obstack_memory_used@@Base+0x14954>
  43c308:	ldurb	w8, [x29, #-74]
  43c30c:	tbnz	w8, #0, 43c314 <_obstack_memory_used@@Base+0x149f4>
  43c310:	b	43c31c <_obstack_memory_used@@Base+0x149fc>
  43c314:	ldur	x0, [x29, #-104]
  43c318:	bl	4026c0 <free@plt>
  43c31c:	sub	x8, x29, #0x90
  43c320:	ldr	x0, [x8, #16]
  43c324:	bl	4026c0 <free@plt>
  43c328:	stur	xzr, [x29, #-40]
  43c32c:	ldur	x8, [x29, #-40]
  43c330:	ldur	x9, [x29, #-88]
  43c334:	cmp	x8, x9
  43c338:	b.ge	43c368 <_obstack_memory_used@@Base+0x14a48>  // b.tcont
  43c33c:	ldur	x8, [x29, #-152]
  43c340:	ldur	x9, [x29, #-40]
  43c344:	mov	x10, #0x18                  	// #24
  43c348:	mul	x9, x10, x9
  43c34c:	add	x8, x8, x9
  43c350:	ldr	x0, [x8, #16]
  43c354:	bl	4026c0 <free@plt>
  43c358:	ldur	x8, [x29, #-40]
  43c35c:	add	x8, x8, #0x1
  43c360:	stur	x8, [x29, #-40]
  43c364:	b	43c32c <_obstack_memory_used@@Base+0x14a0c>
  43c368:	ldurb	w8, [x29, #-73]
  43c36c:	tbnz	w8, #0, 43c374 <_obstack_memory_used@@Base+0x14a54>
  43c370:	b	43c37c <_obstack_memory_used@@Base+0x14a5c>
  43c374:	ldur	x0, [x29, #-200]
  43c378:	bl	4026c0 <free@plt>
  43c37c:	mov	w8, #0x1                   	// #1
  43c380:	and	w8, w8, #0x1
  43c384:	sturb	w8, [x29, #-1]
  43c388:	ldurb	w8, [x29, #-1]
  43c38c:	and	w0, w8, #0x1
  43c390:	mov	sp, x29
  43c394:	ldp	x29, x30, [sp], #16
  43c398:	ret
  43c39c:	sub	sp, sp, #0x130
  43c3a0:	stp	x29, x30, [sp, #272]
  43c3a4:	str	x28, [sp, #288]
  43c3a8:	add	x29, sp, #0x110
  43c3ac:	sub	x8, x29, #0x70
  43c3b0:	stur	x0, [x29, #-16]
  43c3b4:	stur	x1, [x29, #-24]
  43c3b8:	stur	x2, [x29, #-32]
  43c3bc:	stur	x3, [x29, #-40]
  43c3c0:	ldur	x9, [x29, #-24]
  43c3c4:	add	x9, x9, #0x8
  43c3c8:	stur	x9, [x29, #-120]
  43c3cc:	mov	x0, x8
  43c3d0:	bl	43cb98 <_obstack_memory_used@@Base+0x15278>
  43c3d4:	stur	xzr, [x29, #-80]
  43c3d8:	stur	xzr, [x29, #-56]
  43c3dc:	ldur	x8, [x29, #-56]
  43c3e0:	ldur	x9, [x29, #-120]
  43c3e4:	ldr	x9, [x9, #8]
  43c3e8:	cmp	x8, x9
  43c3ec:	b.ge	43cb20 <_obstack_memory_used@@Base+0x15200>  // b.tcont
  43c3f0:	ldur	x8, [x29, #-16]
  43c3f4:	ldr	x8, [x8]
  43c3f8:	ldur	x9, [x29, #-120]
  43c3fc:	mov	x10, #0x10                  	// #16
  43c400:	ldr	x9, [x9, #16]
  43c404:	ldur	x11, [x29, #-56]
  43c408:	mov	x12, #0x8                   	// #8
  43c40c:	ldr	x9, [x9, x11, lsl #3]
  43c410:	mul	x9, x10, x9
  43c414:	add	x8, x8, x9
  43c418:	stur	x8, [x29, #-128]
  43c41c:	ldur	x8, [x29, #-128]
  43c420:	ldr	w13, [x8, #8]
  43c424:	and	w13, w13, #0xff
  43c428:	stur	w13, [x29, #-132]
  43c42c:	ldur	x8, [x29, #-128]
  43c430:	ldr	w13, [x8, #8]
  43c434:	lsr	w12, w13, w12
  43c438:	and	w12, w12, #0x3ff
  43c43c:	str	w12, [sp, #136]
  43c440:	ldur	w12, [x29, #-132]
  43c444:	cmp	w12, #0x1
  43c448:	b.ne	43c464 <_obstack_memory_used@@Base+0x14b44>  // b.any
  43c44c:	ldur	x8, [x29, #-128]
  43c450:	ldrb	w9, [x8]
  43c454:	mov	w1, w9
  43c458:	sub	x0, x29, #0x70
  43c45c:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  43c460:	b	43c558 <_obstack_memory_used@@Base+0x14c38>
  43c464:	ldur	w8, [x29, #-132]
  43c468:	cmp	w8, #0x3
  43c46c:	b.ne	43c484 <_obstack_memory_used@@Base+0x14b64>  // b.any
  43c470:	ldur	x8, [x29, #-128]
  43c474:	ldr	x1, [x8]
  43c478:	sub	x0, x29, #0x70
  43c47c:	bl	43cbc8 <_obstack_memory_used@@Base+0x152a8>
  43c480:	b	43c558 <_obstack_memory_used@@Base+0x14c38>
  43c484:	ldur	w8, [x29, #-132]
  43c488:	cmp	w8, #0x5
  43c48c:	b.ne	43c4fc <_obstack_memory_used@@Base+0x14bdc>  // b.any
  43c490:	ldur	x8, [x29, #-16]
  43c494:	ldr	w9, [x8, #180]
  43c498:	cmp	w9, #0x1
  43c49c:	b.le	43c4b4 <_obstack_memory_used@@Base+0x14b94>
  43c4a0:	ldur	x8, [x29, #-16]
  43c4a4:	ldr	x1, [x8, #120]
  43c4a8:	sub	x0, x29, #0x70
  43c4ac:	bl	43cbc8 <_obstack_memory_used@@Base+0x152a8>
  43c4b0:	b	43c4bc <_obstack_memory_used@@Base+0x14b9c>
  43c4b4:	sub	x0, x29, #0x70
  43c4b8:	bl	43cc28 <_obstack_memory_used@@Base+0x15308>
  43c4bc:	ldur	x8, [x29, #-16]
  43c4c0:	ldr	x8, [x8, #216]
  43c4c4:	and	x8, x8, #0x40
  43c4c8:	cbnz	x8, 43c4d8 <_obstack_memory_used@@Base+0x14bb8>
  43c4cc:	sub	x0, x29, #0x70
  43c4d0:	mov	x1, #0xa                   	// #10
  43c4d4:	bl	43cc54 <_obstack_memory_used@@Base+0x15334>
  43c4d8:	ldur	x8, [x29, #-16]
  43c4dc:	ldr	x8, [x8, #216]
  43c4e0:	and	x8, x8, #0x80
  43c4e4:	cbz	x8, 43c4f8 <_obstack_memory_used@@Base+0x14bd8>
  43c4e8:	sub	x0, x29, #0x70
  43c4ec:	mov	x8, xzr
  43c4f0:	mov	x1, x8
  43c4f4:	bl	43cc54 <_obstack_memory_used@@Base+0x15334>
  43c4f8:	b	43c558 <_obstack_memory_used@@Base+0x14c38>
  43c4fc:	ldur	w8, [x29, #-132]
  43c500:	cmp	w8, #0x7
  43c504:	b.ne	43c554 <_obstack_memory_used@@Base+0x14c34>  // b.any
  43c508:	mov	x8, #0xffffffffffffffff    	// #-1
  43c50c:	stur	x8, [x29, #-112]
  43c510:	stur	x8, [x29, #-104]
  43c514:	ldur	x8, [x29, #-16]
  43c518:	ldr	x8, [x8, #216]
  43c51c:	and	x8, x8, #0x40
  43c520:	cbnz	x8, 43c530 <_obstack_memory_used@@Base+0x14c10>
  43c524:	sub	x0, x29, #0x70
  43c528:	mov	x1, #0xa                   	// #10
  43c52c:	bl	43cc54 <_obstack_memory_used@@Base+0x15334>
  43c530:	ldur	x8, [x29, #-16]
  43c534:	ldr	x8, [x8, #216]
  43c538:	and	x8, x8, #0x80
  43c53c:	cbz	x8, 43c550 <_obstack_memory_used@@Base+0x14c30>
  43c540:	sub	x0, x29, #0x70
  43c544:	mov	x8, xzr
  43c548:	mov	x1, x8
  43c54c:	bl	43cc54 <_obstack_memory_used@@Base+0x15334>
  43c550:	b	43c558 <_obstack_memory_used@@Base+0x14c38>
  43c554:	b	43cb10 <_obstack_memory_used@@Base+0x151f0>
  43c558:	ldr	w8, [sp, #136]
  43c55c:	cbz	w8, 43c818 <_obstack_memory_used@@Base+0x14ef8>
  43c560:	ldr	w8, [sp, #136]
  43c564:	and	w8, w8, #0x20
  43c568:	cbz	w8, 43c5b0 <_obstack_memory_used@@Base+0x14c90>
  43c56c:	sub	x8, x29, #0x70
  43c570:	mov	x0, x8
  43c574:	mov	x1, #0xa                   	// #10
  43c578:	str	x8, [sp, #16]
  43c57c:	bl	4375fc <_obstack_memory_used@@Base+0xfcdc>
  43c580:	and	w9, w0, #0x1
  43c584:	strb	w9, [sp, #135]
  43c588:	ldr	x0, [sp, #16]
  43c58c:	bl	43cb98 <_obstack_memory_used@@Base+0x15278>
  43c590:	ldrb	w9, [sp, #135]
  43c594:	tbnz	w9, #0, 43c59c <_obstack_memory_used@@Base+0x14c7c>
  43c598:	b	43c5ac <_obstack_memory_used@@Base+0x14c8c>
  43c59c:	sub	x0, x29, #0x70
  43c5a0:	mov	x1, #0xa                   	// #10
  43c5a4:	bl	4307d8 <_obstack_memory_used@@Base+0x8eb8>
  43c5a8:	b	43c5b0 <_obstack_memory_used@@Base+0x14c90>
  43c5ac:	b	43cb10 <_obstack_memory_used@@Base+0x151f0>
  43c5b0:	ldr	w8, [sp, #136]
  43c5b4:	and	w8, w8, #0x80
  43c5b8:	cbz	w8, 43c5c8 <_obstack_memory_used@@Base+0x14ca8>
  43c5bc:	sub	x0, x29, #0x70
  43c5c0:	bl	43cb98 <_obstack_memory_used@@Base+0x15278>
  43c5c4:	b	43cb10 <_obstack_memory_used@@Base+0x151f0>
  43c5c8:	ldr	w8, [sp, #136]
  43c5cc:	and	w8, w8, #0x4
  43c5d0:	cbz	w8, 43c6f0 <_obstack_memory_used@@Base+0x14dd0>
  43c5d4:	str	xzr, [sp, #120]
  43c5d8:	ldur	w8, [x29, #-132]
  43c5dc:	cmp	w8, #0x1
  43c5e0:	b.ne	43c604 <_obstack_memory_used@@Base+0x14ce4>  // b.any
  43c5e4:	ldur	x8, [x29, #-128]
  43c5e8:	ldr	w9, [x8, #8]
  43c5ec:	lsr	w9, w9, #22
  43c5f0:	and	w9, w9, #0x1
  43c5f4:	cbnz	w9, 43c604 <_obstack_memory_used@@Base+0x14ce4>
  43c5f8:	sub	x0, x29, #0x70
  43c5fc:	bl	43cb98 <_obstack_memory_used@@Base+0x15278>
  43c600:	b	43cb10 <_obstack_memory_used@@Base+0x151f0>
  43c604:	ldur	x8, [x29, #-16]
  43c608:	ldr	w9, [x8, #180]
  43c60c:	cmp	w9, #0x1
  43c610:	b.le	43c688 <_obstack_memory_used@@Base+0x14d68>
  43c614:	stur	xzr, [x29, #-64]
  43c618:	ldur	x8, [x29, #-64]
  43c61c:	cmp	x8, #0x4
  43c620:	b.ge	43c684 <_obstack_memory_used@@Base+0x14d64>  // b.tcont
  43c624:	ldur	x8, [x29, #-16]
  43c628:	add	x8, x8, #0xb8
  43c62c:	ldur	x9, [x29, #-64]
  43c630:	mov	x10, #0x8                   	// #8
  43c634:	ldr	x8, [x8, x9, lsl #3]
  43c638:	ldur	x9, [x29, #-16]
  43c63c:	ldr	x9, [x9, #120]
  43c640:	ldur	x11, [x29, #-64]
  43c644:	ldr	x9, [x9, x11, lsl #3]
  43c648:	orn	x8, x8, x9
  43c64c:	ldur	x9, [x29, #-64]
  43c650:	mul	x9, x10, x9
  43c654:	sub	x10, x29, #0x70
  43c658:	add	x9, x10, x9
  43c65c:	ldr	x10, [x9]
  43c660:	and	x8, x10, x8
  43c664:	str	x8, [x9]
  43c668:	ldr	x9, [sp, #120]
  43c66c:	orr	x8, x9, x8
  43c670:	str	x8, [sp, #120]
  43c674:	ldur	x8, [x29, #-64]
  43c678:	add	x8, x8, #0x1
  43c67c:	stur	x8, [x29, #-64]
  43c680:	b	43c618 <_obstack_memory_used@@Base+0x14cf8>
  43c684:	b	43c6e4 <_obstack_memory_used@@Base+0x14dc4>
  43c688:	stur	xzr, [x29, #-64]
  43c68c:	ldur	x8, [x29, #-64]
  43c690:	cmp	x8, #0x4
  43c694:	b.ge	43c6e4 <_obstack_memory_used@@Base+0x14dc4>  // b.tcont
  43c698:	ldur	x8, [x29, #-16]
  43c69c:	add	x8, x8, #0xb8
  43c6a0:	ldur	x9, [x29, #-64]
  43c6a4:	mov	x10, #0x8                   	// #8
  43c6a8:	ldr	x8, [x8, x9, lsl #3]
  43c6ac:	ldur	x9, [x29, #-64]
  43c6b0:	mul	x9, x10, x9
  43c6b4:	sub	x10, x29, #0x70
  43c6b8:	add	x9, x10, x9
  43c6bc:	ldr	x10, [x9]
  43c6c0:	and	x8, x10, x8
  43c6c4:	str	x8, [x9]
  43c6c8:	ldr	x9, [sp, #120]
  43c6cc:	orr	x8, x9, x8
  43c6d0:	str	x8, [sp, #120]
  43c6d4:	ldur	x8, [x29, #-64]
  43c6d8:	add	x8, x8, #0x1
  43c6dc:	stur	x8, [x29, #-64]
  43c6e0:	b	43c68c <_obstack_memory_used@@Base+0x14d6c>
  43c6e4:	ldr	x8, [sp, #120]
  43c6e8:	cbnz	x8, 43c6f0 <_obstack_memory_used@@Base+0x14dd0>
  43c6ec:	b	43cb10 <_obstack_memory_used@@Base+0x151f0>
  43c6f0:	ldr	w8, [sp, #136]
  43c6f4:	and	w8, w8, #0x8
  43c6f8:	cbz	w8, 43c818 <_obstack_memory_used@@Base+0x14ef8>
  43c6fc:	str	xzr, [sp, #112]
  43c700:	ldur	w8, [x29, #-132]
  43c704:	cmp	w8, #0x1
  43c708:	b.ne	43c72c <_obstack_memory_used@@Base+0x14e0c>  // b.any
  43c70c:	ldur	x8, [x29, #-128]
  43c710:	ldr	w9, [x8, #8]
  43c714:	lsr	w9, w9, #22
  43c718:	and	w9, w9, #0x1
  43c71c:	cbz	w9, 43c72c <_obstack_memory_used@@Base+0x14e0c>
  43c720:	sub	x0, x29, #0x70
  43c724:	bl	43cb98 <_obstack_memory_used@@Base+0x15278>
  43c728:	b	43cb10 <_obstack_memory_used@@Base+0x151f0>
  43c72c:	ldur	x8, [x29, #-16]
  43c730:	ldr	w9, [x8, #180]
  43c734:	cmp	w9, #0x1
  43c738:	b.le	43c7b0 <_obstack_memory_used@@Base+0x14e90>
  43c73c:	stur	xzr, [x29, #-64]
  43c740:	ldur	x8, [x29, #-64]
  43c744:	cmp	x8, #0x4
  43c748:	b.ge	43c7ac <_obstack_memory_used@@Base+0x14e8c>  // b.tcont
  43c74c:	ldur	x8, [x29, #-16]
  43c750:	add	x8, x8, #0xb8
  43c754:	ldur	x9, [x29, #-64]
  43c758:	mov	x10, #0x8                   	// #8
  43c75c:	ldr	x8, [x8, x9, lsl #3]
  43c760:	ldur	x9, [x29, #-16]
  43c764:	ldr	x9, [x9, #120]
  43c768:	ldur	x11, [x29, #-64]
  43c76c:	ldr	x9, [x9, x11, lsl #3]
  43c770:	and	x8, x8, x9
  43c774:	ldur	x9, [x29, #-64]
  43c778:	mul	x9, x10, x9
  43c77c:	sub	x10, x29, #0x70
  43c780:	add	x9, x10, x9
  43c784:	ldr	x10, [x9]
  43c788:	bic	x8, x10, x8
  43c78c:	str	x8, [x9]
  43c790:	ldr	x9, [sp, #112]
  43c794:	orr	x8, x9, x8
  43c798:	str	x8, [sp, #112]
  43c79c:	ldur	x8, [x29, #-64]
  43c7a0:	add	x8, x8, #0x1
  43c7a4:	stur	x8, [x29, #-64]
  43c7a8:	b	43c740 <_obstack_memory_used@@Base+0x14e20>
  43c7ac:	b	43c80c <_obstack_memory_used@@Base+0x14eec>
  43c7b0:	stur	xzr, [x29, #-64]
  43c7b4:	ldur	x8, [x29, #-64]
  43c7b8:	cmp	x8, #0x4
  43c7bc:	b.ge	43c80c <_obstack_memory_used@@Base+0x14eec>  // b.tcont
  43c7c0:	ldur	x8, [x29, #-16]
  43c7c4:	add	x8, x8, #0xb8
  43c7c8:	ldur	x9, [x29, #-64]
  43c7cc:	mov	x10, #0x8                   	// #8
  43c7d0:	ldr	x8, [x8, x9, lsl #3]
  43c7d4:	ldur	x9, [x29, #-64]
  43c7d8:	mul	x9, x10, x9
  43c7dc:	sub	x10, x29, #0x70
  43c7e0:	add	x9, x10, x9
  43c7e4:	ldr	x10, [x9]
  43c7e8:	bic	x8, x10, x8
  43c7ec:	str	x8, [x9]
  43c7f0:	ldr	x9, [sp, #112]
  43c7f4:	orr	x8, x9, x8
  43c7f8:	str	x8, [sp, #112]
  43c7fc:	ldur	x8, [x29, #-64]
  43c800:	add	x8, x8, #0x1
  43c804:	stur	x8, [x29, #-64]
  43c808:	b	43c7b4 <_obstack_memory_used@@Base+0x14e94>
  43c80c:	ldr	x8, [sp, #112]
  43c810:	cbnz	x8, 43c818 <_obstack_memory_used@@Base+0x14ef8>
  43c814:	b	43cb10 <_obstack_memory_used@@Base+0x151f0>
  43c818:	stur	xzr, [x29, #-64]
  43c81c:	ldur	x8, [x29, #-64]
  43c820:	ldur	x9, [x29, #-80]
  43c824:	cmp	x8, x9
  43c828:	b.ge	43ca84 <_obstack_memory_used@@Base+0x15164>  // b.tcont
  43c82c:	ldur	w8, [x29, #-132]
  43c830:	cmp	w8, #0x1
  43c834:	b.ne	43c864 <_obstack_memory_used@@Base+0x14f44>  // b.any
  43c838:	ldur	x8, [x29, #-40]
  43c83c:	ldur	x9, [x29, #-64]
  43c840:	mov	x10, #0x20                  	// #32
  43c844:	mul	x9, x10, x9
  43c848:	add	x0, x8, x9
  43c84c:	ldur	x8, [x29, #-128]
  43c850:	ldrb	w11, [x8]
  43c854:	mov	w1, w11
  43c858:	bl	4375fc <_obstack_memory_used@@Base+0xfcdc>
  43c85c:	tbnz	w0, #0, 43c864 <_obstack_memory_used@@Base+0x14f44>
  43c860:	b	43ca74 <_obstack_memory_used@@Base+0x15154>
  43c864:	str	xzr, [sp, #40]
  43c868:	stur	xzr, [x29, #-72]
  43c86c:	ldur	x8, [x29, #-72]
  43c870:	cmp	x8, #0x4
  43c874:	b.ge	43c8cc <_obstack_memory_used@@Base+0x14fac>  // b.tcont
  43c878:	ldur	x8, [x29, #-72]
  43c87c:	sub	x9, x29, #0x70
  43c880:	ldr	x8, [x9, x8, lsl #3]
  43c884:	ldur	x9, [x29, #-40]
  43c888:	ldur	x10, [x29, #-64]
  43c88c:	mov	x11, #0x20                  	// #32
  43c890:	mul	x10, x11, x10
  43c894:	add	x9, x9, x10
  43c898:	ldur	x10, [x29, #-72]
  43c89c:	ldr	x9, [x9, x10, lsl #3]
  43c8a0:	and	x8, x8, x9
  43c8a4:	ldur	x9, [x29, #-72]
  43c8a8:	add	x10, sp, #0x50
  43c8ac:	str	x8, [x10, x9, lsl #3]
  43c8b0:	ldr	x9, [sp, #40]
  43c8b4:	orr	x8, x9, x8
  43c8b8:	str	x8, [sp, #40]
  43c8bc:	ldur	x8, [x29, #-72]
  43c8c0:	add	x8, x8, #0x1
  43c8c4:	stur	x8, [x29, #-72]
  43c8c8:	b	43c86c <_obstack_memory_used@@Base+0x14f4c>
  43c8cc:	ldr	x8, [sp, #40]
  43c8d0:	cbnz	x8, 43c8d8 <_obstack_memory_used@@Base+0x14fb8>
  43c8d4:	b	43ca74 <_obstack_memory_used@@Base+0x15154>
  43c8d8:	str	xzr, [sp, #24]
  43c8dc:	str	xzr, [sp, #32]
  43c8e0:	stur	xzr, [x29, #-72]
  43c8e4:	ldur	x8, [x29, #-72]
  43c8e8:	cmp	x8, #0x4
  43c8ec:	b.ge	43c97c <_obstack_memory_used@@Base+0x1505c>  // b.tcont
  43c8f0:	ldur	x8, [x29, #-72]
  43c8f4:	sub	x9, x29, #0x70
  43c8f8:	ldr	x8, [x9, x8, lsl #3]
  43c8fc:	ldur	x10, [x29, #-40]
  43c900:	ldur	x11, [x29, #-64]
  43c904:	mov	x12, #0x20                  	// #32
  43c908:	mul	x11, x12, x11
  43c90c:	add	x10, x10, x11
  43c910:	ldur	x11, [x29, #-72]
  43c914:	ldr	x10, [x10, x11, lsl #3]
  43c918:	bic	x8, x10, x8
  43c91c:	ldur	x10, [x29, #-72]
  43c920:	add	x11, sp, #0x30
  43c924:	str	x8, [x11, x10, lsl #3]
  43c928:	ldr	x10, [sp, #32]
  43c92c:	orr	x8, x10, x8
  43c930:	str	x8, [sp, #32]
  43c934:	ldur	x8, [x29, #-72]
  43c938:	ldr	x8, [x9, x8, lsl #3]
  43c93c:	ldur	x10, [x29, #-40]
  43c940:	ldur	x11, [x29, #-64]
  43c944:	mul	x11, x12, x11
  43c948:	add	x10, x10, x11
  43c94c:	ldur	x11, [x29, #-72]
  43c950:	ldr	x10, [x10, x11, lsl #3]
  43c954:	bic	x8, x8, x10
  43c958:	ldur	x10, [x29, #-72]
  43c95c:	str	x8, [x9, x10, lsl #3]
  43c960:	ldr	x9, [sp, #24]
  43c964:	orr	x8, x9, x8
  43c968:	str	x8, [sp, #24]
  43c96c:	ldur	x8, [x29, #-72]
  43c970:	add	x8, x8, #0x1
  43c974:	stur	x8, [x29, #-72]
  43c978:	b	43c8e4 <_obstack_memory_used@@Base+0x14fc4>
  43c97c:	ldr	x8, [sp, #32]
  43c980:	cbz	x8, 43ca18 <_obstack_memory_used@@Base+0x150f8>
  43c984:	ldur	x8, [x29, #-40]
  43c988:	ldur	x9, [x29, #-80]
  43c98c:	mov	x10, #0x20                  	// #32
  43c990:	mul	x9, x10, x9
  43c994:	add	x0, x8, x9
  43c998:	add	x1, sp, #0x30
  43c99c:	str	x10, [sp, #8]
  43c9a0:	bl	43cca8 <_obstack_memory_used@@Base+0x15388>
  43c9a4:	ldur	x8, [x29, #-40]
  43c9a8:	ldur	x9, [x29, #-64]
  43c9ac:	ldr	x10, [sp, #8]
  43c9b0:	mul	x9, x10, x9
  43c9b4:	add	x0, x8, x9
  43c9b8:	add	x1, sp, #0x50
  43c9bc:	bl	43cca8 <_obstack_memory_used@@Base+0x15388>
  43c9c0:	ldur	x8, [x29, #-32]
  43c9c4:	ldur	x9, [x29, #-80]
  43c9c8:	mov	x10, #0x18                  	// #24
  43c9cc:	mul	x9, x10, x9
  43c9d0:	add	x0, x8, x9
  43c9d4:	ldur	x8, [x29, #-32]
  43c9d8:	ldur	x9, [x29, #-64]
  43c9dc:	mul	x9, x10, x9
  43c9e0:	add	x1, x8, x9
  43c9e4:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  43c9e8:	stur	w0, [x29, #-44]
  43c9ec:	ldur	w11, [x29, #-44]
  43c9f0:	cmp	w11, #0x0
  43c9f4:	cset	w11, ne  // ne = any
  43c9f8:	and	w11, w11, #0x1
  43c9fc:	mov	w1, w11
  43ca00:	sxtw	x8, w1
  43ca04:	cbz	x8, 43ca0c <_obstack_memory_used@@Base+0x150ec>
  43ca08:	b	43cb3c <_obstack_memory_used@@Base+0x1521c>
  43ca0c:	ldur	x8, [x29, #-80]
  43ca10:	add	x8, x8, #0x1
  43ca14:	stur	x8, [x29, #-80]
  43ca18:	ldur	x8, [x29, #-32]
  43ca1c:	ldur	x9, [x29, #-64]
  43ca20:	mov	x10, #0x18                  	// #24
  43ca24:	mul	x9, x10, x9
  43ca28:	add	x0, x8, x9
  43ca2c:	ldur	x8, [x29, #-120]
  43ca30:	ldr	x8, [x8, #16]
  43ca34:	ldur	x9, [x29, #-56]
  43ca38:	ldr	x1, [x8, x9, lsl #3]
  43ca3c:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43ca40:	mov	w11, #0x1                   	// #1
  43ca44:	and	w11, w0, w11
  43ca48:	sturb	w11, [x29, #-45]
  43ca4c:	ldurb	w11, [x29, #-45]
  43ca50:	eor	w11, w11, #0x1
  43ca54:	and	w11, w11, #0x1
  43ca58:	mov	w1, w11
  43ca5c:	sxtw	x8, w1
  43ca60:	cbz	x8, 43ca68 <_obstack_memory_used@@Base+0x15148>
  43ca64:	b	43cb3c <_obstack_memory_used@@Base+0x1521c>
  43ca68:	ldr	x8, [sp, #24]
  43ca6c:	cbnz	x8, 43ca74 <_obstack_memory_used@@Base+0x15154>
  43ca70:	b	43ca84 <_obstack_memory_used@@Base+0x15164>
  43ca74:	ldur	x8, [x29, #-64]
  43ca78:	add	x8, x8, #0x1
  43ca7c:	stur	x8, [x29, #-64]
  43ca80:	b	43c81c <_obstack_memory_used@@Base+0x14efc>
  43ca84:	ldur	x8, [x29, #-64]
  43ca88:	ldur	x9, [x29, #-80]
  43ca8c:	cmp	x8, x9
  43ca90:	b.ne	43cb10 <_obstack_memory_used@@Base+0x151f0>  // b.any
  43ca94:	ldur	x8, [x29, #-40]
  43ca98:	ldur	x9, [x29, #-80]
  43ca9c:	mov	x10, #0x20                  	// #32
  43caa0:	mul	x9, x10, x9
  43caa4:	add	x0, x8, x9
  43caa8:	sub	x1, x29, #0x70
  43caac:	bl	43cca8 <_obstack_memory_used@@Base+0x15388>
  43cab0:	ldur	x8, [x29, #-32]
  43cab4:	ldur	x9, [x29, #-80]
  43cab8:	mov	x10, #0x18                  	// #24
  43cabc:	mul	x9, x10, x9
  43cac0:	add	x0, x8, x9
  43cac4:	ldur	x8, [x29, #-120]
  43cac8:	ldr	x8, [x8, #16]
  43cacc:	ldur	x9, [x29, #-56]
  43cad0:	ldr	x1, [x8, x9, lsl #3]
  43cad4:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  43cad8:	stur	w0, [x29, #-44]
  43cadc:	ldur	w11, [x29, #-44]
  43cae0:	cmp	w11, #0x0
  43cae4:	cset	w11, ne  // ne = any
  43cae8:	and	w11, w11, #0x1
  43caec:	mov	w1, w11
  43caf0:	sxtw	x8, w1
  43caf4:	cbz	x8, 43cafc <_obstack_memory_used@@Base+0x151dc>
  43caf8:	b	43cb3c <_obstack_memory_used@@Base+0x1521c>
  43cafc:	ldur	x8, [x29, #-80]
  43cb00:	add	x8, x8, #0x1
  43cb04:	stur	x8, [x29, #-80]
  43cb08:	sub	x0, x29, #0x70
  43cb0c:	bl	43cb98 <_obstack_memory_used@@Base+0x15278>
  43cb10:	ldur	x8, [x29, #-56]
  43cb14:	add	x8, x8, #0x1
  43cb18:	stur	x8, [x29, #-56]
  43cb1c:	b	43c3dc <_obstack_memory_used@@Base+0x14abc>
  43cb20:	ldur	x8, [x29, #-80]
  43cb24:	cmp	x8, #0x100
  43cb28:	b.gt	43cb30 <_obstack_memory_used@@Base+0x15210>
  43cb2c:	b	43cb30 <_obstack_memory_used@@Base+0x15210>
  43cb30:	ldur	x8, [x29, #-80]
  43cb34:	stur	x8, [x29, #-8]
  43cb38:	b	43cb84 <_obstack_memory_used@@Base+0x15264>
  43cb3c:	stur	xzr, [x29, #-64]
  43cb40:	ldur	x8, [x29, #-64]
  43cb44:	ldur	x9, [x29, #-80]
  43cb48:	cmp	x8, x9
  43cb4c:	b.ge	43cb7c <_obstack_memory_used@@Base+0x1525c>  // b.tcont
  43cb50:	ldur	x8, [x29, #-32]
  43cb54:	ldur	x9, [x29, #-64]
  43cb58:	mov	x10, #0x18                  	// #24
  43cb5c:	mul	x9, x10, x9
  43cb60:	add	x8, x8, x9
  43cb64:	ldr	x0, [x8, #16]
  43cb68:	bl	4026c0 <free@plt>
  43cb6c:	ldur	x8, [x29, #-64]
  43cb70:	add	x8, x8, #0x1
  43cb74:	stur	x8, [x29, #-64]
  43cb78:	b	43cb40 <_obstack_memory_used@@Base+0x15220>
  43cb7c:	mov	x8, #0xffffffffffffffff    	// #-1
  43cb80:	stur	x8, [x29, #-8]
  43cb84:	ldur	x0, [x29, #-8]
  43cb88:	ldr	x28, [sp, #288]
  43cb8c:	ldp	x29, x30, [sp, #272]
  43cb90:	add	sp, sp, #0x130
  43cb94:	ret
  43cb98:	sub	sp, sp, #0x20
  43cb9c:	stp	x29, x30, [sp, #16]
  43cba0:	add	x29, sp, #0x10
  43cba4:	mov	x2, #0x20                  	// #32
  43cba8:	str	x0, [sp, #8]
  43cbac:	ldr	x0, [sp, #8]
  43cbb0:	mov	w8, wzr
  43cbb4:	mov	w1, w8
  43cbb8:	bl	402520 <memset@plt>
  43cbbc:	ldp	x29, x30, [sp, #16]
  43cbc0:	add	sp, sp, #0x20
  43cbc4:	ret
  43cbc8:	sub	sp, sp, #0x20
  43cbcc:	str	x0, [sp, #24]
  43cbd0:	str	x1, [sp, #16]
  43cbd4:	str	wzr, [sp, #12]
  43cbd8:	ldr	w8, [sp, #12]
  43cbdc:	cmp	w8, #0x4
  43cbe0:	b.ge	43cc20 <_obstack_memory_used@@Base+0x15300>  // b.tcont
  43cbe4:	ldr	x8, [sp, #16]
  43cbe8:	ldrsw	x9, [sp, #12]
  43cbec:	mov	x10, #0x8                   	// #8
  43cbf0:	ldr	x8, [x8, x9, lsl #3]
  43cbf4:	ldr	x9, [sp, #24]
  43cbf8:	ldrsw	x11, [sp, #12]
  43cbfc:	mul	x10, x10, x11
  43cc00:	add	x9, x9, x10
  43cc04:	ldr	x10, [x9]
  43cc08:	orr	x8, x10, x8
  43cc0c:	str	x8, [x9]
  43cc10:	ldr	w8, [sp, #12]
  43cc14:	add	w8, w8, #0x1
  43cc18:	str	w8, [sp, #12]
  43cc1c:	b	43cbd8 <_obstack_memory_used@@Base+0x152b8>
  43cc20:	add	sp, sp, #0x20
  43cc24:	ret
  43cc28:	sub	sp, sp, #0x20
  43cc2c:	stp	x29, x30, [sp, #16]
  43cc30:	add	x29, sp, #0x10
  43cc34:	mov	x2, #0x20                  	// #32
  43cc38:	str	x0, [sp, #8]
  43cc3c:	ldr	x0, [sp, #8]
  43cc40:	mov	w1, #0xffffffff            	// #-1
  43cc44:	bl	402520 <memset@plt>
  43cc48:	ldp	x29, x30, [sp, #16]
  43cc4c:	add	sp, sp, #0x20
  43cc50:	ret
  43cc54:	sub	sp, sp, #0x10
  43cc58:	mov	x8, #0x40                  	// #64
  43cc5c:	mov	x9, #0x1                   	// #1
  43cc60:	str	x0, [sp, #8]
  43cc64:	str	x1, [sp]
  43cc68:	ldr	x10, [sp]
  43cc6c:	sdiv	x11, x10, x8
  43cc70:	mul	x11, x11, x8
  43cc74:	subs	x10, x10, x11
  43cc78:	lsl	x9, x9, x10
  43cc7c:	ldr	x10, [sp, #8]
  43cc80:	ldr	x11, [sp]
  43cc84:	sdiv	x8, x11, x8
  43cc88:	mov	x11, #0x8                   	// #8
  43cc8c:	mul	x8, x11, x8
  43cc90:	add	x8, x10, x8
  43cc94:	ldr	x10, [x8]
  43cc98:	bic	x9, x10, x9
  43cc9c:	str	x9, [x8]
  43cca0:	add	sp, sp, #0x10
  43cca4:	ret
  43cca8:	sub	sp, sp, #0x10
  43ccac:	str	x0, [sp, #8]
  43ccb0:	str	x1, [sp]
  43ccb4:	ldr	x8, [sp, #8]
  43ccb8:	ldr	x9, [sp]
  43ccbc:	ldr	q0, [x9]
  43ccc0:	str	q0, [x8]
  43ccc4:	ldr	q0, [x9, #16]
  43ccc8:	str	q0, [x8, #16]
  43cccc:	add	sp, sp, #0x10
  43ccd0:	ret
  43ccd4:	sub	sp, sp, #0x30
  43ccd8:	str	x0, [sp, #32]
  43ccdc:	str	x1, [sp, #24]
  43cce0:	str	w2, [sp, #20]
  43cce4:	ldr	x8, [sp, #32]
  43cce8:	ldr	x8, [x8]
  43ccec:	ldr	x9, [sp, #24]
  43ccf0:	mov	x10, #0x10                  	// #16
  43ccf4:	mul	x9, x10, x9
  43ccf8:	add	x8, x8, x9
  43ccfc:	mov	x9, #0x8                   	// #8
  43cd00:	ldr	w11, [x8, #8]
  43cd04:	and	w11, w11, #0xff
  43cd08:	str	w11, [sp, #16]
  43cd0c:	ldr	x8, [sp, #32]
  43cd10:	ldr	x8, [x8]
  43cd14:	ldr	x12, [sp, #24]
  43cd18:	mul	x10, x10, x12
  43cd1c:	add	x8, x8, x10
  43cd20:	ldr	w11, [x8, #8]
  43cd24:	lsr	w9, w11, w9
  43cd28:	and	w9, w9, #0x3ff
  43cd2c:	str	w9, [sp, #12]
  43cd30:	ldr	w9, [sp, #16]
  43cd34:	cmp	w9, #0x2
  43cd38:	b.eq	43cd4c <_obstack_memory_used@@Base+0x1542c>  // b.none
  43cd3c:	mov	w8, wzr
  43cd40:	and	w8, w8, #0x1
  43cd44:	strb	w8, [sp, #47]
  43cd48:	b	43cde0 <_obstack_memory_used@@Base+0x154c0>
  43cd4c:	ldr	w8, [sp, #12]
  43cd50:	cbnz	w8, 43cd64 <_obstack_memory_used@@Base+0x15444>
  43cd54:	mov	w8, #0x1                   	// #1
  43cd58:	and	w8, w8, #0x1
  43cd5c:	strb	w8, [sp, #47]
  43cd60:	b	43cde0 <_obstack_memory_used@@Base+0x154c0>
  43cd64:	ldr	w8, [sp, #12]
  43cd68:	and	w8, w8, #0x4
  43cd6c:	cbz	w8, 43cd7c <_obstack_memory_used@@Base+0x1545c>
  43cd70:	ldr	w8, [sp, #20]
  43cd74:	and	w8, w8, #0x1
  43cd78:	cbz	w8, 43cdc4 <_obstack_memory_used@@Base+0x154a4>
  43cd7c:	ldr	w8, [sp, #12]
  43cd80:	and	w8, w8, #0x8
  43cd84:	cbz	w8, 43cd94 <_obstack_memory_used@@Base+0x15474>
  43cd88:	ldr	w8, [sp, #20]
  43cd8c:	and	w8, w8, #0x1
  43cd90:	cbnz	w8, 43cdc4 <_obstack_memory_used@@Base+0x154a4>
  43cd94:	ldr	w8, [sp, #12]
  43cd98:	and	w8, w8, #0x20
  43cd9c:	cbz	w8, 43cdac <_obstack_memory_used@@Base+0x1548c>
  43cda0:	ldr	w8, [sp, #20]
  43cda4:	and	w8, w8, #0x2
  43cda8:	cbz	w8, 43cdc4 <_obstack_memory_used@@Base+0x154a4>
  43cdac:	ldr	w8, [sp, #12]
  43cdb0:	and	w8, w8, #0x80
  43cdb4:	cbz	w8, 43cdd4 <_obstack_memory_used@@Base+0x154b4>
  43cdb8:	ldr	w8, [sp, #20]
  43cdbc:	and	w8, w8, #0x8
  43cdc0:	cbnz	w8, 43cdd4 <_obstack_memory_used@@Base+0x154b4>
  43cdc4:	mov	w8, wzr
  43cdc8:	and	w8, w8, #0x1
  43cdcc:	strb	w8, [sp, #47]
  43cdd0:	b	43cde0 <_obstack_memory_used@@Base+0x154c0>
  43cdd4:	mov	w8, #0x1                   	// #1
  43cdd8:	and	w8, w8, #0x1
  43cddc:	strb	w8, [sp, #47]
  43cde0:	ldrb	w8, [sp, #47]
  43cde4:	and	w0, w8, #0x1
  43cde8:	add	sp, sp, #0x30
  43cdec:	ret
  43cdf0:	sub	sp, sp, #0x30
  43cdf4:	str	x0, [sp, #40]
  43cdf8:	str	x1, [sp, #32]
  43cdfc:	str	x2, [sp, #24]
  43ce00:	str	x3, [sp, #16]
  43ce04:	str	x4, [sp, #8]
  43ce08:	ldr	x8, [sp, #32]
  43ce0c:	ldr	x9, [sp, #40]
  43ce10:	str	x8, [x9]
  43ce14:	ldr	x8, [sp, #24]
  43ce18:	ldr	x9, [sp, #40]
  43ce1c:	str	x8, [x9, #8]
  43ce20:	ldr	x8, [sp, #16]
  43ce24:	ldr	x9, [sp, #40]
  43ce28:	str	x8, [x9, #16]
  43ce2c:	ldr	x8, [sp, #8]
  43ce30:	ldr	x9, [sp, #40]
  43ce34:	str	x8, [x9, #24]
  43ce38:	ldr	x8, [sp, #40]
  43ce3c:	str	xzr, [x8, #32]
  43ce40:	str	xzr, [x8, #40]
  43ce44:	str	xzr, [x8, #48]
  43ce48:	add	sp, sp, #0x30
  43ce4c:	ret
  43ce50:	sub	sp, sp, #0x60
  43ce54:	stp	x29, x30, [sp, #80]
  43ce58:	add	x29, sp, #0x50
  43ce5c:	stur	x0, [x29, #-16]
  43ce60:	stur	x1, [x29, #-24]
  43ce64:	stur	wzr, [x29, #-32]
  43ce68:	ldur	x8, [x29, #-24]
  43ce6c:	ldr	x8, [x8, #24]
  43ce70:	str	x8, [sp, #40]
  43ce74:	ldur	x8, [x29, #-16]
  43ce78:	ldr	x8, [x8, #184]
  43ce7c:	cbz	x8, 43cea4 <_obstack_memory_used@@Base+0x15584>
  43ce80:	ldur	x8, [x29, #-16]
  43ce84:	ldr	x8, [x8, #184]
  43ce88:	ldr	x9, [sp, #40]
  43ce8c:	mov	x10, #0x8                   	// #8
  43ce90:	mul	x9, x10, x9
  43ce94:	add	x8, x8, x9
  43ce98:	ldr	x8, [x8]
  43ce9c:	cbz	x8, 43cea4 <_obstack_memory_used@@Base+0x15584>
  43cea0:	b	43cea4 <_obstack_memory_used@@Base+0x15584>
  43cea4:	ldur	x8, [x29, #-24]
  43cea8:	ldr	x1, [x8, #16]
  43ceac:	add	x0, sp, #0x10
  43ceb0:	bl	433268 <_obstack_memory_used@@Base+0xb948>
  43ceb4:	stur	w0, [x29, #-28]
  43ceb8:	ldur	w9, [x29, #-28]
  43cebc:	cmp	w9, #0x0
  43cec0:	cset	w9, ne  // ne = any
  43cec4:	and	w9, w9, #0x1
  43cec8:	mov	w1, w9
  43cecc:	sxtw	x8, w1
  43ced0:	cbz	x8, 43cee0 <_obstack_memory_used@@Base+0x155c0>
  43ced4:	ldur	w8, [x29, #-28]
  43ced8:	stur	w8, [x29, #-4]
  43cedc:	b	43d06c <_obstack_memory_used@@Base+0x1574c>
  43cee0:	ldur	x0, [x29, #-16]
  43cee4:	ldur	x1, [x29, #-24]
  43cee8:	ldr	x2, [sp, #40]
  43ceec:	add	x3, sp, #0x10
  43cef0:	bl	43d204 <_obstack_memory_used@@Base+0x158e4>
  43cef4:	stur	w0, [x29, #-28]
  43cef8:	ldur	w8, [x29, #-28]
  43cefc:	cmp	w8, #0x0
  43cf00:	cset	w8, ne  // ne = any
  43cf04:	and	w8, w8, #0x1
  43cf08:	mov	w1, w8
  43cf0c:	sxtw	x9, w1
  43cf10:	cbz	x9, 43cf18 <_obstack_memory_used@@Base+0x155f8>
  43cf14:	b	43d058 <_obstack_memory_used@@Base+0x15738>
  43cf18:	ldr	x8, [sp, #40]
  43cf1c:	cmp	x8, #0x0
  43cf20:	cset	w9, le
  43cf24:	tbnz	w9, #0, 43d054 <_obstack_memory_used@@Base+0x15734>
  43cf28:	ldur	x8, [x29, #-24]
  43cf2c:	ldr	x8, [x8]
  43cf30:	ldr	x9, [sp, #40]
  43cf34:	mov	x10, #0x8                   	// #8
  43cf38:	mul	x9, x10, x9
  43cf3c:	add	x8, x8, x9
  43cf40:	ldr	x8, [x8]
  43cf44:	cbnz	x8, 43cf58 <_obstack_memory_used@@Base+0x15638>
  43cf48:	ldur	w8, [x29, #-32]
  43cf4c:	add	w8, w8, #0x1
  43cf50:	str	w8, [sp, #12]
  43cf54:	b	43cf60 <_obstack_memory_used@@Base+0x15640>
  43cf58:	mov	w8, wzr
  43cf5c:	str	w8, [sp, #12]
  43cf60:	ldr	w8, [sp, #12]
  43cf64:	stur	w8, [x29, #-32]
  43cf68:	ldur	w8, [x29, #-32]
  43cf6c:	ldur	x9, [x29, #-16]
  43cf70:	ldr	w10, [x9, #224]
  43cf74:	cmp	w8, w10
  43cf78:	b.le	43cfb0 <_obstack_memory_used@@Base+0x15690>
  43cf7c:	ldur	x8, [x29, #-24]
  43cf80:	ldr	x0, [x8]
  43cf84:	ldr	x8, [sp, #40]
  43cf88:	mov	x9, #0x8                   	// #8
  43cf8c:	mul	x2, x9, x8
  43cf90:	mov	w10, wzr
  43cf94:	mov	w1, w10
  43cf98:	bl	402520 <memset@plt>
  43cf9c:	add	x8, sp, #0x10
  43cfa0:	ldr	x0, [x8, #16]
  43cfa4:	bl	4026c0 <free@plt>
  43cfa8:	stur	wzr, [x29, #-4]
  43cfac:	b	43d06c <_obstack_memory_used@@Base+0x1574c>
  43cfb0:	mov	x8, #0x8                   	// #8
  43cfb4:	str	xzr, [sp, #24]
  43cfb8:	ldr	x9, [sp, #40]
  43cfbc:	subs	x9, x9, #0x1
  43cfc0:	str	x9, [sp, #40]
  43cfc4:	ldur	x9, [x29, #-16]
  43cfc8:	ldr	x9, [x9, #184]
  43cfcc:	ldr	x10, [sp, #40]
  43cfd0:	mul	x8, x8, x10
  43cfd4:	add	x8, x9, x8
  43cfd8:	ldr	x8, [x8]
  43cfdc:	cbz	x8, 43d018 <_obstack_memory_used@@Base+0x156f8>
  43cfe0:	ldur	x0, [x29, #-16]
  43cfe4:	ldur	x1, [x29, #-24]
  43cfe8:	ldr	x2, [sp, #40]
  43cfec:	add	x3, sp, #0x10
  43cff0:	bl	43d43c <_obstack_memory_used@@Base+0x15b1c>
  43cff4:	stur	w0, [x29, #-28]
  43cff8:	ldur	w8, [x29, #-28]
  43cffc:	cmp	w8, #0x0
  43d000:	cset	w8, ne  // ne = any
  43d004:	and	w8, w8, #0x1
  43d008:	mov	w1, w8
  43d00c:	sxtw	x9, w1
  43d010:	cbz	x9, 43d018 <_obstack_memory_used@@Base+0x156f8>
  43d014:	b	43d058 <_obstack_memory_used@@Base+0x15738>
  43d018:	ldur	x0, [x29, #-16]
  43d01c:	ldur	x1, [x29, #-24]
  43d020:	ldr	x2, [sp, #40]
  43d024:	add	x3, sp, #0x10
  43d028:	bl	43d204 <_obstack_memory_used@@Base+0x158e4>
  43d02c:	stur	w0, [x29, #-28]
  43d030:	ldur	w8, [x29, #-28]
  43d034:	cmp	w8, #0x0
  43d038:	cset	w8, ne  // ne = any
  43d03c:	and	w8, w8, #0x1
  43d040:	mov	w1, w8
  43d044:	sxtw	x9, w1
  43d048:	cbz	x9, 43d050 <_obstack_memory_used@@Base+0x15730>
  43d04c:	b	43d058 <_obstack_memory_used@@Base+0x15738>
  43d050:	b	43cf18 <_obstack_memory_used@@Base+0x155f8>
  43d054:	stur	wzr, [x29, #-28]
  43d058:	add	x8, sp, #0x10
  43d05c:	ldr	x0, [x8, #16]
  43d060:	bl	4026c0 <free@plt>
  43d064:	ldur	w9, [x29, #-28]
  43d068:	stur	w9, [x29, #-4]
  43d06c:	ldur	w0, [x29, #-4]
  43d070:	ldp	x29, x30, [sp, #80]
  43d074:	add	sp, sp, #0x60
  43d078:	ret
  43d07c:	sub	sp, sp, #0x70
  43d080:	stp	x29, x30, [sp, #96]
  43d084:	add	x29, sp, #0x60
  43d088:	stur	x0, [x29, #-16]
  43d08c:	stur	x1, [x29, #-24]
  43d090:	stur	x2, [x29, #-32]
  43d094:	stur	x3, [x29, #-40]
  43d098:	str	xzr, [sp, #48]
  43d09c:	ldr	x8, [sp, #48]
  43d0a0:	ldur	x9, [x29, #-40]
  43d0a4:	cmp	x8, x9
  43d0a8:	b.ge	43d1f0 <_obstack_memory_used@@Base+0x158d0>  // b.tcont
  43d0ac:	ldur	x8, [x29, #-24]
  43d0b0:	ldr	x9, [sp, #48]
  43d0b4:	mov	x10, #0x8                   	// #8
  43d0b8:	mul	x9, x10, x9
  43d0bc:	add	x8, x8, x9
  43d0c0:	ldr	x8, [x8]
  43d0c4:	cbnz	x8, 43d0f8 <_obstack_memory_used@@Base+0x157d8>
  43d0c8:	ldur	x8, [x29, #-32]
  43d0cc:	ldr	x9, [sp, #48]
  43d0d0:	mov	x10, #0x8                   	// #8
  43d0d4:	mul	x9, x10, x9
  43d0d8:	add	x8, x8, x9
  43d0dc:	ldr	x8, [x8]
  43d0e0:	ldur	x9, [x29, #-24]
  43d0e4:	ldr	x11, [sp, #48]
  43d0e8:	mul	x10, x10, x11
  43d0ec:	add	x9, x9, x10
  43d0f0:	str	x8, [x9]
  43d0f4:	b	43d1e0 <_obstack_memory_used@@Base+0x158c0>
  43d0f8:	ldur	x8, [x29, #-32]
  43d0fc:	ldr	x9, [sp, #48]
  43d100:	mov	x10, #0x8                   	// #8
  43d104:	mul	x9, x10, x9
  43d108:	add	x8, x8, x9
  43d10c:	ldr	x8, [x8]
  43d110:	cbz	x8, 43d1e0 <_obstack_memory_used@@Base+0x158c0>
  43d114:	ldur	x8, [x29, #-24]
  43d118:	ldr	x9, [sp, #48]
  43d11c:	mov	x10, #0x8                   	// #8
  43d120:	mul	x9, x10, x9
  43d124:	add	x8, x8, x9
  43d128:	ldr	x8, [x8]
  43d12c:	add	x1, x8, #0x8
  43d130:	ldur	x8, [x29, #-32]
  43d134:	ldr	x9, [sp, #48]
  43d138:	mul	x9, x10, x9
  43d13c:	add	x8, x8, x9
  43d140:	ldr	x8, [x8]
  43d144:	add	x2, x8, #0x8
  43d148:	add	x0, sp, #0x10
  43d14c:	bl	438c48 <_obstack_memory_used@@Base+0x11328>
  43d150:	str	w0, [sp, #44]
  43d154:	ldr	w11, [sp, #44]
  43d158:	cmp	w11, #0x0
  43d15c:	cset	w11, ne  // ne = any
  43d160:	and	w11, w11, #0x1
  43d164:	mov	w1, w11
  43d168:	sxtw	x8, w1
  43d16c:	cbz	x8, 43d17c <_obstack_memory_used@@Base+0x1585c>
  43d170:	ldr	w8, [sp, #44]
  43d174:	stur	w8, [x29, #-4]
  43d178:	b	43d1f4 <_obstack_memory_used@@Base+0x158d4>
  43d17c:	ldur	x1, [x29, #-16]
  43d180:	add	x0, sp, #0x2c
  43d184:	add	x8, sp, #0x10
  43d188:	mov	x2, x8
  43d18c:	str	x8, [sp, #8]
  43d190:	bl	43a9d0 <_obstack_memory_used@@Base+0x130b0>
  43d194:	ldur	x8, [x29, #-24]
  43d198:	ldr	x9, [sp, #48]
  43d19c:	mov	x10, #0x8                   	// #8
  43d1a0:	mul	x9, x10, x9
  43d1a4:	add	x8, x8, x9
  43d1a8:	str	x0, [x8]
  43d1ac:	ldr	x8, [sp, #8]
  43d1b0:	ldr	x0, [x8, #16]
  43d1b4:	bl	4026c0 <free@plt>
  43d1b8:	ldr	w11, [sp, #44]
  43d1bc:	cmp	w11, #0x0
  43d1c0:	cset	w11, ne  // ne = any
  43d1c4:	and	w11, w11, #0x1
  43d1c8:	mov	w0, w11
  43d1cc:	sxtw	x8, w0
  43d1d0:	cbz	x8, 43d1e0 <_obstack_memory_used@@Base+0x158c0>
  43d1d4:	ldr	w8, [sp, #44]
  43d1d8:	stur	w8, [x29, #-4]
  43d1dc:	b	43d1f4 <_obstack_memory_used@@Base+0x158d4>
  43d1e0:	ldr	x8, [sp, #48]
  43d1e4:	add	x8, x8, #0x1
  43d1e8:	str	x8, [sp, #48]
  43d1ec:	b	43d09c <_obstack_memory_used@@Base+0x1577c>
  43d1f0:	stur	wzr, [x29, #-4]
  43d1f4:	ldur	w0, [x29, #-4]
  43d1f8:	ldp	x29, x30, [sp, #96]
  43d1fc:	add	sp, sp, #0x70
  43d200:	ret
  43d204:	sub	sp, sp, #0x60
  43d208:	stp	x29, x30, [sp, #80]
  43d20c:	add	x29, sp, #0x50
  43d210:	stur	x0, [x29, #-16]
  43d214:	stur	x1, [x29, #-24]
  43d218:	stur	x2, [x29, #-32]
  43d21c:	str	x3, [sp, #40]
  43d220:	ldur	x8, [x29, #-16]
  43d224:	ldr	x8, [x8, #152]
  43d228:	str	x8, [sp, #32]
  43d22c:	str	wzr, [sp, #28]
  43d230:	ldur	x8, [x29, #-16]
  43d234:	ldr	x8, [x8, #184]
  43d238:	ldur	x9, [x29, #-32]
  43d23c:	mov	x10, #0x8                   	// #8
  43d240:	mul	x9, x10, x9
  43d244:	add	x8, x8, x9
  43d248:	ldr	x8, [x8]
  43d24c:	cbnz	x8, 43d25c <_obstack_memory_used@@Base+0x1593c>
  43d250:	mov	x8, xzr
  43d254:	str	x8, [sp, #8]
  43d258:	b	43d280 <_obstack_memory_used@@Base+0x15960>
  43d25c:	ldur	x8, [x29, #-16]
  43d260:	ldr	x8, [x8, #184]
  43d264:	ldur	x9, [x29, #-32]
  43d268:	mov	x10, #0x8                   	// #8
  43d26c:	mul	x9, x10, x9
  43d270:	add	x8, x8, x9
  43d274:	ldr	x8, [x8]
  43d278:	add	x8, x8, #0x8
  43d27c:	str	x8, [sp, #8]
  43d280:	ldr	x8, [sp, #8]
  43d284:	str	x8, [sp, #16]
  43d288:	ldr	x8, [sp, #40]
  43d28c:	ldr	x8, [x8, #8]
  43d290:	cbnz	x8, 43d2b8 <_obstack_memory_used@@Base+0x15998>
  43d294:	ldur	x8, [x29, #-24]
  43d298:	ldr	x8, [x8]
  43d29c:	ldur	x9, [x29, #-32]
  43d2a0:	mov	x10, #0x8                   	// #8
  43d2a4:	mul	x9, x10, x9
  43d2a8:	add	x8, x8, x9
  43d2ac:	mov	x9, xzr
  43d2b0:	str	x9, [x8]
  43d2b4:	b	43d3ac <_obstack_memory_used@@Base+0x15a8c>
  43d2b8:	ldr	x8, [sp, #16]
  43d2bc:	cbz	x8, 43d358 <_obstack_memory_used@@Base+0x15a38>
  43d2c0:	ldr	x0, [sp, #32]
  43d2c4:	ldr	x1, [sp, #40]
  43d2c8:	ldr	x2, [sp, #16]
  43d2cc:	bl	43d688 <_obstack_memory_used@@Base+0x15d68>
  43d2d0:	str	w0, [sp, #28]
  43d2d4:	ldr	w8, [sp, #28]
  43d2d8:	cmp	w8, #0x0
  43d2dc:	cset	w8, ne  // ne = any
  43d2e0:	and	w8, w8, #0x1
  43d2e4:	mov	w1, w8
  43d2e8:	sxtw	x9, w1
  43d2ec:	cbz	x9, 43d2fc <_obstack_memory_used@@Base+0x159dc>
  43d2f0:	ldr	w8, [sp, #28]
  43d2f4:	stur	w8, [x29, #-4]
  43d2f8:	b	43d42c <_obstack_memory_used@@Base+0x15b0c>
  43d2fc:	ldur	x8, [x29, #-24]
  43d300:	ldr	x8, [x8, #40]
  43d304:	cbz	x8, 43d358 <_obstack_memory_used@@Base+0x15a38>
  43d308:	ldr	x0, [sp, #32]
  43d30c:	ldr	x1, [sp, #40]
  43d310:	ldr	x2, [sp, #16]
  43d314:	ldur	x8, [x29, #-24]
  43d318:	add	x3, x8, #0x20
  43d31c:	ldur	x8, [x29, #-16]
  43d320:	ldr	x4, [x8, #216]
  43d324:	ldur	x5, [x29, #-32]
  43d328:	bl	43d7dc <_obstack_memory_used@@Base+0x15ebc>
  43d32c:	str	w0, [sp, #28]
  43d330:	ldr	w9, [sp, #28]
  43d334:	cmp	w9, #0x0
  43d338:	cset	w9, ne  // ne = any
  43d33c:	and	w9, w9, #0x1
  43d340:	mov	w1, w9
  43d344:	sxtw	x8, w1
  43d348:	cbz	x8, 43d358 <_obstack_memory_used@@Base+0x15a38>
  43d34c:	ldr	w8, [sp, #28]
  43d350:	stur	w8, [x29, #-4]
  43d354:	b	43d42c <_obstack_memory_used@@Base+0x15b0c>
  43d358:	ldr	x1, [sp, #32]
  43d35c:	ldr	x2, [sp, #40]
  43d360:	add	x0, sp, #0x1c
  43d364:	bl	43a9d0 <_obstack_memory_used@@Base+0x130b0>
  43d368:	ldur	x8, [x29, #-24]
  43d36c:	ldr	x8, [x8]
  43d370:	ldur	x9, [x29, #-32]
  43d374:	mov	x10, #0x8                   	// #8
  43d378:	mul	x9, x10, x9
  43d37c:	add	x8, x8, x9
  43d380:	str	x0, [x8]
  43d384:	ldr	w11, [sp, #28]
  43d388:	cmp	w11, #0x0
  43d38c:	cset	w11, ne  // ne = any
  43d390:	and	w11, w11, #0x1
  43d394:	mov	w0, w11
  43d398:	sxtw	x8, w0
  43d39c:	cbz	x8, 43d3ac <_obstack_memory_used@@Base+0x15a8c>
  43d3a0:	ldr	w8, [sp, #28]
  43d3a4:	stur	w8, [x29, #-4]
  43d3a8:	b	43d42c <_obstack_memory_used@@Base+0x15b0c>
  43d3ac:	ldr	x8, [sp, #16]
  43d3b0:	cbz	x8, 43d428 <_obstack_memory_used@@Base+0x15b08>
  43d3b4:	ldur	x8, [x29, #-16]
  43d3b8:	ldr	x8, [x8, #184]
  43d3bc:	ldur	x9, [x29, #-32]
  43d3c0:	mov	x10, #0x8                   	// #8
  43d3c4:	mul	x9, x10, x9
  43d3c8:	add	x8, x8, x9
  43d3cc:	ldr	x8, [x8]
  43d3d0:	ldrb	w11, [x8, #104]
  43d3d4:	mov	w12, #0x6                   	// #6
  43d3d8:	lsr	w11, w11, w12
  43d3dc:	and	w11, w11, #0x1
  43d3e0:	and	w11, w11, #0xff
  43d3e4:	cbz	w11, 43d428 <_obstack_memory_used@@Base+0x15b08>
  43d3e8:	ldur	x0, [x29, #-16]
  43d3ec:	ldur	x1, [x29, #-24]
  43d3f0:	ldur	x2, [x29, #-32]
  43d3f4:	ldr	x3, [sp, #16]
  43d3f8:	bl	43dbe8 <_obstack_memory_used@@Base+0x162c8>
  43d3fc:	str	w0, [sp, #28]
  43d400:	ldr	w8, [sp, #28]
  43d404:	cmp	w8, #0x0
  43d408:	cset	w8, ne  // ne = any
  43d40c:	and	w8, w8, #0x1
  43d410:	mov	w1, w8
  43d414:	sxtw	x9, w1
  43d418:	cbz	x9, 43d428 <_obstack_memory_used@@Base+0x15b08>
  43d41c:	ldr	w8, [sp, #28]
  43d420:	stur	w8, [x29, #-4]
  43d424:	b	43d42c <_obstack_memory_used@@Base+0x15b0c>
  43d428:	stur	wzr, [x29, #-4]
  43d42c:	ldur	w0, [x29, #-4]
  43d430:	ldp	x29, x30, [sp, #80]
  43d434:	add	sp, sp, #0x60
  43d438:	ret
  43d43c:	sub	sp, sp, #0x70
  43d440:	stp	x29, x30, [sp, #96]
  43d444:	add	x29, sp, #0x60
  43d448:	stur	x0, [x29, #-16]
  43d44c:	stur	x1, [x29, #-24]
  43d450:	stur	x2, [x29, #-32]
  43d454:	stur	x3, [x29, #-40]
  43d458:	ldur	x8, [x29, #-16]
  43d45c:	ldr	x8, [x8, #152]
  43d460:	str	x8, [sp, #48]
  43d464:	ldur	x8, [x29, #-16]
  43d468:	ldr	x8, [x8, #184]
  43d46c:	ldur	x9, [x29, #-32]
  43d470:	mov	x10, #0x8                   	// #8
  43d474:	mul	x9, x10, x9
  43d478:	add	x8, x8, x9
  43d47c:	ldr	x8, [x8]
  43d480:	add	x8, x8, #0x20
  43d484:	str	x8, [sp, #40]
  43d488:	str	xzr, [sp, #32]
  43d48c:	ldr	x8, [sp, #32]
  43d490:	ldr	x9, [sp, #40]
  43d494:	ldr	x9, [x9, #8]
  43d498:	cmp	x8, x9
  43d49c:	b.ge	43d674 <_obstack_memory_used@@Base+0x15d54>  // b.tcont
  43d4a0:	ldr	x8, [sp, #40]
  43d4a4:	mov	x9, #0x10                  	// #16
  43d4a8:	ldr	x8, [x8, #16]
  43d4ac:	ldr	x10, [sp, #32]
  43d4b0:	ldr	x8, [x8, x10, lsl #3]
  43d4b4:	str	x8, [sp, #24]
  43d4b8:	str	wzr, [sp, #20]
  43d4bc:	ldr	x8, [sp, #48]
  43d4c0:	ldr	x8, [x8]
  43d4c4:	ldr	x10, [sp, #24]
  43d4c8:	mul	x9, x9, x10
  43d4cc:	add	x8, x8, x9
  43d4d0:	ldr	w11, [x8, #8]
  43d4d4:	and	w11, w11, #0xff
  43d4d8:	and	w11, w11, #0x8
  43d4dc:	cbnz	w11, 43d4e4 <_obstack_memory_used@@Base+0x15bc4>
  43d4e0:	b	43d4e4 <_obstack_memory_used@@Base+0x15bc4>
  43d4e4:	ldr	x8, [sp, #48]
  43d4e8:	ldr	x8, [x8]
  43d4ec:	ldr	x9, [sp, #24]
  43d4f0:	mov	x10, #0x10                  	// #16
  43d4f4:	mul	x9, x10, x9
  43d4f8:	add	x8, x8, x9
  43d4fc:	ldr	w11, [x8, #8]
  43d500:	lsr	w11, w11, #20
  43d504:	and	w11, w11, #0x1
  43d508:	cbz	w11, 43d52c <_obstack_memory_used@@Base+0x15c0c>
  43d50c:	ldur	x0, [x29, #-16]
  43d510:	ldur	x1, [x29, #-24]
  43d514:	ldr	x2, [sp, #24]
  43d518:	ldur	x3, [x29, #-32]
  43d51c:	ldur	x8, [x29, #-24]
  43d520:	ldr	x4, [x8, #24]
  43d524:	bl	43ec20 <_obstack_memory_used@@Base+0x17300>
  43d528:	str	w0, [sp, #20]
  43d52c:	ldr	w8, [sp, #20]
  43d530:	cbnz	w8, 43d5c8 <_obstack_memory_used@@Base+0x15ca8>
  43d534:	ldur	x0, [x29, #-16]
  43d538:	ldr	x8, [sp, #48]
  43d53c:	ldr	x8, [x8]
  43d540:	ldr	x9, [sp, #24]
  43d544:	mov	x10, #0x10                  	// #16
  43d548:	mul	x9, x10, x9
  43d54c:	add	x1, x8, x9
  43d550:	ldur	x2, [x29, #-32]
  43d554:	bl	43b2f0 <_obstack_memory_used@@Base+0x139d0>
  43d558:	tbnz	w0, #0, 43d560 <_obstack_memory_used@@Base+0x15c40>
  43d55c:	b	43d5c8 <_obstack_memory_used@@Base+0x15ca8>
  43d560:	ldur	x8, [x29, #-24]
  43d564:	ldr	x8, [x8]
  43d568:	ldur	x9, [x29, #-32]
  43d56c:	add	x9, x9, #0x1
  43d570:	mov	x10, #0x8                   	// #8
  43d574:	mul	x9, x10, x9
  43d578:	add	x8, x8, x9
  43d57c:	ldr	x8, [x8]
  43d580:	cbz	x8, 43d5c8 <_obstack_memory_used@@Base+0x15ca8>
  43d584:	ldur	x8, [x29, #-24]
  43d588:	ldr	x8, [x8]
  43d58c:	ldur	x9, [x29, #-32]
  43d590:	add	x9, x9, #0x1
  43d594:	mov	x10, #0x8                   	// #8
  43d598:	mul	x9, x10, x9
  43d59c:	add	x8, x8, x9
  43d5a0:	ldr	x8, [x8]
  43d5a4:	add	x0, x8, #0x8
  43d5a8:	ldr	x8, [sp, #48]
  43d5ac:	ldr	x8, [x8, #24]
  43d5b0:	ldr	x9, [sp, #24]
  43d5b4:	ldr	x1, [x8, x9, lsl #3]
  43d5b8:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43d5bc:	cbz	x0, 43d5c8 <_obstack_memory_used@@Base+0x15ca8>
  43d5c0:	mov	w8, #0x1                   	// #1
  43d5c4:	str	w8, [sp, #20]
  43d5c8:	ldr	w8, [sp, #20]
  43d5cc:	cbnz	w8, 43d5d4 <_obstack_memory_used@@Base+0x15cb4>
  43d5d0:	b	43d664 <_obstack_memory_used@@Base+0x15d44>
  43d5d4:	ldur	x8, [x29, #-24]
  43d5d8:	ldr	x8, [x8, #40]
  43d5dc:	cbz	x8, 43d628 <_obstack_memory_used@@Base+0x15d08>
  43d5e0:	ldur	x8, [x29, #-32]
  43d5e4:	ldrsw	x9, [sp, #20]
  43d5e8:	add	x8, x8, x9
  43d5ec:	str	x8, [sp, #8]
  43d5f0:	ldur	x0, [x29, #-16]
  43d5f4:	ldur	x8, [x29, #-24]
  43d5f8:	add	x1, x8, #0x20
  43d5fc:	ldr	x8, [sp, #48]
  43d600:	ldr	x8, [x8, #24]
  43d604:	ldr	x9, [sp, #24]
  43d608:	ldr	x2, [x8, x9, lsl #3]
  43d60c:	ldr	x3, [sp, #8]
  43d610:	ldr	x4, [sp, #24]
  43d614:	ldur	x5, [x29, #-32]
  43d618:	bl	43e6e0 <_obstack_memory_used@@Base+0x16dc0>
  43d61c:	tbnz	w0, #0, 43d624 <_obstack_memory_used@@Base+0x15d04>
  43d620:	b	43d628 <_obstack_memory_used@@Base+0x15d08>
  43d624:	b	43d664 <_obstack_memory_used@@Base+0x15d44>
  43d628:	ldur	x0, [x29, #-40]
  43d62c:	ldr	x1, [sp, #24]
  43d630:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43d634:	mov	w8, #0x1                   	// #1
  43d638:	and	w8, w0, w8
  43d63c:	strb	w8, [sp, #19]
  43d640:	ldrb	w8, [sp, #19]
  43d644:	eor	w8, w8, #0x1
  43d648:	and	w8, w8, #0x1
  43d64c:	mov	w1, w8
  43d650:	sxtw	x9, w1
  43d654:	cbz	x9, 43d664 <_obstack_memory_used@@Base+0x15d44>
  43d658:	mov	w8, #0xc                   	// #12
  43d65c:	stur	w8, [x29, #-4]
  43d660:	b	43d678 <_obstack_memory_used@@Base+0x15d58>
  43d664:	ldr	x8, [sp, #32]
  43d668:	add	x8, x8, #0x1
  43d66c:	str	x8, [sp, #32]
  43d670:	b	43d48c <_obstack_memory_used@@Base+0x15b6c>
  43d674:	stur	wzr, [x29, #-4]
  43d678:	ldur	w0, [x29, #-4]
  43d67c:	ldp	x29, x30, [sp, #96]
  43d680:	add	sp, sp, #0x70
  43d684:	ret
  43d688:	sub	sp, sp, #0x50
  43d68c:	stp	x29, x30, [sp, #64]
  43d690:	add	x29, sp, #0x40
  43d694:	add	x8, sp, #0x1c
  43d698:	stur	x0, [x29, #-16]
  43d69c:	stur	x1, [x29, #-24]
  43d6a0:	str	x2, [sp, #32]
  43d6a4:	str	wzr, [sp, #28]
  43d6a8:	ldur	x1, [x29, #-16]
  43d6ac:	ldur	x2, [x29, #-24]
  43d6b0:	mov	x0, x8
  43d6b4:	bl	43a9d0 <_obstack_memory_used@@Base+0x130b0>
  43d6b8:	str	x0, [sp, #8]
  43d6bc:	ldr	w9, [sp, #28]
  43d6c0:	cmp	w9, #0x0
  43d6c4:	cset	w9, ne  // ne = any
  43d6c8:	and	w9, w9, #0x1
  43d6cc:	mov	w0, w9
  43d6d0:	sxtw	x8, w0
  43d6d4:	cbz	x8, 43d6e4 <_obstack_memory_used@@Base+0x15dc4>
  43d6d8:	ldr	w8, [sp, #28]
  43d6dc:	stur	w8, [x29, #-4]
  43d6e0:	b	43d7cc <_obstack_memory_used@@Base+0x15eac>
  43d6e4:	ldr	x8, [sp, #8]
  43d6e8:	ldr	x8, [x8, #56]
  43d6ec:	cbnz	x8, 43d7b4 <_obstack_memory_used@@Base+0x15e94>
  43d6f0:	ldr	x8, [sp, #8]
  43d6f4:	add	x0, x8, #0x38
  43d6f8:	ldur	x8, [x29, #-24]
  43d6fc:	ldr	x1, [x8, #8]
  43d700:	bl	433718 <_obstack_memory_used@@Base+0xbdf8>
  43d704:	str	w0, [sp, #28]
  43d708:	ldr	w9, [sp, #28]
  43d70c:	cmp	w9, #0x0
  43d710:	cset	w9, ne  // ne = any
  43d714:	and	w9, w9, #0x1
  43d718:	mov	w1, w9
  43d71c:	sxtw	x8, w1
  43d720:	cbz	x8, 43d730 <_obstack_memory_used@@Base+0x15e10>
  43d724:	mov	w8, #0xc                   	// #12
  43d728:	stur	w8, [x29, #-4]
  43d72c:	b	43d7cc <_obstack_memory_used@@Base+0x15eac>
  43d730:	str	xzr, [sp, #16]
  43d734:	ldr	x8, [sp, #16]
  43d738:	ldur	x9, [x29, #-24]
  43d73c:	ldr	x9, [x9, #8]
  43d740:	cmp	x8, x9
  43d744:	b.ge	43d7b4 <_obstack_memory_used@@Base+0x15e94>  // b.tcont
  43d748:	ldr	x8, [sp, #8]
  43d74c:	add	x0, x8, #0x38
  43d750:	ldur	x8, [x29, #-16]
  43d754:	ldr	x8, [x8, #56]
  43d758:	ldur	x9, [x29, #-24]
  43d75c:	ldr	x9, [x9, #16]
  43d760:	ldr	x10, [sp, #16]
  43d764:	ldr	x9, [x9, x10, lsl #3]
  43d768:	mov	x10, #0x18                  	// #24
  43d76c:	mul	x9, x10, x9
  43d770:	add	x1, x8, x9
  43d774:	bl	433d20 <_obstack_memory_used@@Base+0xc400>
  43d778:	str	w0, [sp, #28]
  43d77c:	ldr	w11, [sp, #28]
  43d780:	cmp	w11, #0x0
  43d784:	cset	w11, ne  // ne = any
  43d788:	and	w11, w11, #0x1
  43d78c:	mov	w1, w11
  43d790:	sxtw	x8, w1
  43d794:	cbz	x8, 43d7a4 <_obstack_memory_used@@Base+0x15e84>
  43d798:	mov	w8, #0xc                   	// #12
  43d79c:	stur	w8, [x29, #-4]
  43d7a0:	b	43d7cc <_obstack_memory_used@@Base+0x15eac>
  43d7a4:	ldr	x8, [sp, #16]
  43d7a8:	add	x8, x8, #0x1
  43d7ac:	str	x8, [sp, #16]
  43d7b0:	b	43d734 <_obstack_memory_used@@Base+0x15e14>
  43d7b4:	ldur	x0, [x29, #-24]
  43d7b8:	ldr	x1, [sp, #32]
  43d7bc:	ldr	x8, [sp, #8]
  43d7c0:	add	x2, x8, #0x38
  43d7c4:	bl	43e030 <_obstack_memory_used@@Base+0x16710>
  43d7c8:	stur	w0, [x29, #-4]
  43d7cc:	ldur	w0, [x29, #-4]
  43d7d0:	ldp	x29, x30, [sp, #64]
  43d7d4:	add	sp, sp, #0x50
  43d7d8:	ret
  43d7dc:	sub	sp, sp, #0xb0
  43d7e0:	stp	x29, x30, [sp, #160]
  43d7e4:	add	x29, sp, #0xa0
  43d7e8:	sub	x8, x29, #0x10
  43d7ec:	str	x0, [x8]
  43d7f0:	stur	x1, [x29, #-24]
  43d7f4:	stur	x2, [x29, #-32]
  43d7f8:	stur	x3, [x29, #-40]
  43d7fc:	stur	x4, [x29, #-48]
  43d800:	stur	x5, [x29, #-56]
  43d804:	str	xzr, [sp, #80]
  43d808:	str	x8, [sp]
  43d80c:	ldr	x8, [sp, #80]
  43d810:	ldur	x9, [x29, #-40]
  43d814:	ldr	x9, [x9, #8]
  43d818:	cmp	x8, x9
  43d81c:	b.ge	43dbd4 <_obstack_memory_used@@Base+0x162b4>  // b.tcont
  43d820:	ldur	x8, [x29, #-48]
  43d824:	ldur	x9, [x29, #-40]
  43d828:	ldr	x9, [x9, #16]
  43d82c:	ldr	x10, [sp, #80]
  43d830:	ldr	x9, [x9, x10, lsl #3]
  43d834:	mov	x10, #0x28                  	// #40
  43d838:	mul	x9, x10, x9
  43d83c:	add	x8, x8, x9
  43d840:	str	x8, [sp, #64]
  43d844:	ldur	x8, [x29, #-56]
  43d848:	ldr	x9, [sp, #64]
  43d84c:	ldr	x9, [x9, #16]
  43d850:	cmp	x8, x9
  43d854:	b.le	43d86c <_obstack_memory_used@@Base+0x15f4c>
  43d858:	ldr	x8, [sp, #64]
  43d85c:	ldr	x8, [x8, #8]
  43d860:	ldur	x9, [x29, #-56]
  43d864:	cmp	x8, x9
  43d868:	b.ge	43d870 <_obstack_memory_used@@Base+0x15f50>  // b.tcont
  43d86c:	b	43dbc4 <_obstack_memory_used@@Base+0x162a4>
  43d870:	ldr	x8, [sp]
  43d874:	ldr	x9, [x8]
  43d878:	ldr	x9, [x9]
  43d87c:	ldr	x10, [sp, #64]
  43d880:	ldr	x10, [x10]
  43d884:	mov	x11, #0x10                  	// #16
  43d888:	mul	x10, x11, x10
  43d88c:	ldr	x9, [x9, x10]
  43d890:	str	x9, [sp, #72]
  43d894:	ldr	x9, [sp, #64]
  43d898:	ldr	x9, [x9, #24]
  43d89c:	ldur	x10, [x29, #-56]
  43d8a0:	cmp	x9, x10
  43d8a4:	b.ne	43dad8 <_obstack_memory_used@@Base+0x161b8>  // b.any
  43d8a8:	mov	x8, #0xffffffffffffffff    	// #-1
  43d8ac:	str	x8, [sp, #56]
  43d8b0:	str	x8, [sp, #48]
  43d8b4:	stur	xzr, [x29, #-72]
  43d8b8:	ldur	x8, [x29, #-72]
  43d8bc:	ldur	x9, [x29, #-24]
  43d8c0:	ldr	x9, [x9, #8]
  43d8c4:	cmp	x8, x9
  43d8c8:	b.ge	43d994 <_obstack_memory_used@@Base+0x16074>  // b.tcont
  43d8cc:	ldur	x8, [x29, #-24]
  43d8d0:	mov	x9, #0x10                  	// #16
  43d8d4:	ldr	x8, [x8, #16]
  43d8d8:	ldur	x10, [x29, #-72]
  43d8dc:	ldr	x8, [x8, x10, lsl #3]
  43d8e0:	str	x8, [sp, #40]
  43d8e4:	ldr	x8, [sp]
  43d8e8:	ldr	x10, [x8]
  43d8ec:	ldr	x10, [x10]
  43d8f0:	ldr	x11, [sp, #40]
  43d8f4:	mul	x9, x9, x11
  43d8f8:	add	x9, x10, x9
  43d8fc:	ldr	w12, [x9, #8]
  43d900:	and	w12, w12, #0xff
  43d904:	str	w12, [sp, #36]
  43d908:	ldr	w12, [sp, #36]
  43d90c:	cmp	w12, #0x8
  43d910:	b.ne	43d948 <_obstack_memory_used@@Base+0x16028>  // b.any
  43d914:	ldr	x8, [sp, #72]
  43d918:	ldr	x9, [sp]
  43d91c:	ldr	x10, [x9]
  43d920:	ldr	x10, [x10]
  43d924:	ldr	x11, [sp, #40]
  43d928:	mov	x12, #0x10                  	// #16
  43d92c:	mul	x11, x12, x11
  43d930:	ldr	x10, [x10, x11]
  43d934:	cmp	x8, x10
  43d938:	b.ne	43d948 <_obstack_memory_used@@Base+0x16028>  // b.any
  43d93c:	ldr	x8, [sp, #40]
  43d940:	str	x8, [sp, #56]
  43d944:	b	43d984 <_obstack_memory_used@@Base+0x16064>
  43d948:	ldr	w8, [sp, #36]
  43d94c:	cmp	w8, #0x9
  43d950:	b.ne	43d984 <_obstack_memory_used@@Base+0x16064>  // b.any
  43d954:	ldr	x8, [sp, #72]
  43d958:	ldr	x9, [sp]
  43d95c:	ldr	x10, [x9]
  43d960:	ldr	x10, [x10]
  43d964:	ldr	x11, [sp, #40]
  43d968:	mov	x12, #0x10                  	// #16
  43d96c:	mul	x11, x12, x11
  43d970:	ldr	x10, [x10, x11]
  43d974:	cmp	x8, x10
  43d978:	b.ne	43d984 <_obstack_memory_used@@Base+0x16064>  // b.any
  43d97c:	ldr	x8, [sp, #40]
  43d980:	str	x8, [sp, #48]
  43d984:	ldur	x8, [x29, #-72]
  43d988:	add	x8, x8, #0x1
  43d98c:	stur	x8, [x29, #-72]
  43d990:	b	43d8b8 <_obstack_memory_used@@Base+0x15f98>
  43d994:	ldr	x8, [sp, #56]
  43d998:	cmp	x8, #0x0
  43d99c:	cset	w9, lt  // lt = tstop
  43d9a0:	tbnz	w9, #0, 43d9e8 <_obstack_memory_used@@Base+0x160c8>
  43d9a4:	ldr	x8, [sp]
  43d9a8:	ldr	x0, [x8]
  43d9ac:	ldr	x1, [sp, #56]
  43d9b0:	ldur	x2, [x29, #-24]
  43d9b4:	ldur	x3, [x29, #-32]
  43d9b8:	bl	43e470 <_obstack_memory_used@@Base+0x16b50>
  43d9bc:	stur	w0, [x29, #-60]
  43d9c0:	ldur	w9, [x29, #-60]
  43d9c4:	cmp	w9, #0x0
  43d9c8:	cset	w9, ne  // ne = any
  43d9cc:	and	w9, w9, #0x1
  43d9d0:	mov	w1, w9
  43d9d4:	sxtw	x8, w1
  43d9d8:	cbz	x8, 43d9e8 <_obstack_memory_used@@Base+0x160c8>
  43d9dc:	ldur	w8, [x29, #-60]
  43d9e0:	stur	w8, [x29, #-4]
  43d9e4:	b	43dbd8 <_obstack_memory_used@@Base+0x162b8>
  43d9e8:	ldr	x8, [sp, #48]
  43d9ec:	cmp	x8, #0x0
  43d9f0:	cset	w9, lt  // lt = tstop
  43d9f4:	tbnz	w9, #0, 43dad4 <_obstack_memory_used@@Base+0x161b4>
  43d9f8:	stur	xzr, [x29, #-72]
  43d9fc:	ldur	x8, [x29, #-72]
  43da00:	ldur	x9, [x29, #-24]
  43da04:	ldr	x9, [x9, #8]
  43da08:	cmp	x8, x9
  43da0c:	b.ge	43dad4 <_obstack_memory_used@@Base+0x161b4>  // b.tcont
  43da10:	ldur	x8, [x29, #-24]
  43da14:	ldr	x8, [x8, #16]
  43da18:	ldur	x9, [x29, #-72]
  43da1c:	ldr	x8, [x8, x9, lsl #3]
  43da20:	str	x8, [sp, #24]
  43da24:	ldr	x8, [sp]
  43da28:	ldr	x9, [x8]
  43da2c:	ldr	x9, [x9, #56]
  43da30:	ldr	x10, [sp, #24]
  43da34:	mov	x11, #0x18                  	// #24
  43da38:	mul	x10, x11, x10
  43da3c:	add	x0, x9, x10
  43da40:	ldr	x1, [sp, #48]
  43da44:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43da48:	cbnz	x0, 43dac4 <_obstack_memory_used@@Base+0x161a4>
  43da4c:	ldr	x8, [sp]
  43da50:	ldr	x9, [x8]
  43da54:	ldr	x9, [x9, #48]
  43da58:	ldr	x10, [sp, #24]
  43da5c:	mov	x11, #0x18                  	// #24
  43da60:	mul	x10, x11, x10
  43da64:	add	x0, x9, x10
  43da68:	ldr	x1, [sp, #48]
  43da6c:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43da70:	cbnz	x0, 43dac4 <_obstack_memory_used@@Base+0x161a4>
  43da74:	ldr	x8, [sp]
  43da78:	ldr	x0, [x8]
  43da7c:	ldr	x1, [sp, #24]
  43da80:	ldur	x2, [x29, #-24]
  43da84:	ldur	x3, [x29, #-32]
  43da88:	bl	43e470 <_obstack_memory_used@@Base+0x16b50>
  43da8c:	stur	w0, [x29, #-60]
  43da90:	ldur	w9, [x29, #-60]
  43da94:	cmp	w9, #0x0
  43da98:	cset	w9, ne  // ne = any
  43da9c:	and	w9, w9, #0x1
  43daa0:	mov	w1, w9
  43daa4:	sxtw	x8, w1
  43daa8:	cbz	x8, 43dab8 <_obstack_memory_used@@Base+0x16198>
  43daac:	ldur	w8, [x29, #-60]
  43dab0:	stur	w8, [x29, #-4]
  43dab4:	b	43dbd8 <_obstack_memory_used@@Base+0x162b8>
  43dab8:	ldur	x8, [x29, #-72]
  43dabc:	subs	x8, x8, #0x1
  43dac0:	stur	x8, [x29, #-72]
  43dac4:	ldur	x8, [x29, #-72]
  43dac8:	add	x8, x8, #0x1
  43dacc:	stur	x8, [x29, #-72]
  43dad0:	b	43d9fc <_obstack_memory_used@@Base+0x160dc>
  43dad4:	b	43dbc4 <_obstack_memory_used@@Base+0x162a4>
  43dad8:	stur	xzr, [x29, #-72]
  43dadc:	ldur	x8, [x29, #-72]
  43dae0:	ldur	x9, [x29, #-24]
  43dae4:	ldr	x9, [x9, #8]
  43dae8:	cmp	x8, x9
  43daec:	b.ge	43dbc4 <_obstack_memory_used@@Base+0x162a4>  // b.tcont
  43daf0:	ldur	x8, [x29, #-24]
  43daf4:	mov	x9, #0x10                  	// #16
  43daf8:	ldr	x8, [x8, #16]
  43dafc:	ldur	x10, [x29, #-72]
  43db00:	ldr	x8, [x8, x10, lsl #3]
  43db04:	str	x8, [sp, #16]
  43db08:	ldr	x8, [sp]
  43db0c:	ldr	x10, [x8]
  43db10:	ldr	x10, [x10]
  43db14:	ldr	x11, [sp, #16]
  43db18:	mul	x9, x9, x11
  43db1c:	add	x9, x10, x9
  43db20:	ldr	w12, [x9, #8]
  43db24:	and	w12, w12, #0xff
  43db28:	str	w12, [sp, #12]
  43db2c:	ldr	w12, [sp, #12]
  43db30:	cmp	w12, #0x9
  43db34:	b.eq	43db44 <_obstack_memory_used@@Base+0x16224>  // b.none
  43db38:	ldr	w8, [sp, #12]
  43db3c:	cmp	w8, #0x8
  43db40:	b.ne	43dbb4 <_obstack_memory_used@@Base+0x16294>  // b.any
  43db44:	ldr	x8, [sp, #72]
  43db48:	ldr	x9, [sp]
  43db4c:	ldr	x10, [x9]
  43db50:	ldr	x10, [x10]
  43db54:	ldr	x11, [sp, #16]
  43db58:	mov	x12, #0x10                  	// #16
  43db5c:	mul	x11, x12, x11
  43db60:	ldr	x10, [x10, x11]
  43db64:	cmp	x8, x10
  43db68:	b.eq	43db70 <_obstack_memory_used@@Base+0x16250>  // b.none
  43db6c:	b	43dbb4 <_obstack_memory_used@@Base+0x16294>
  43db70:	ldr	x8, [sp]
  43db74:	ldr	x0, [x8]
  43db78:	ldr	x1, [sp, #16]
  43db7c:	ldur	x2, [x29, #-24]
  43db80:	ldur	x3, [x29, #-32]
  43db84:	bl	43e470 <_obstack_memory_used@@Base+0x16b50>
  43db88:	stur	w0, [x29, #-60]
  43db8c:	ldur	w9, [x29, #-60]
  43db90:	cmp	w9, #0x0
  43db94:	cset	w9, ne  // ne = any
  43db98:	and	w9, w9, #0x1
  43db9c:	mov	w1, w9
  43dba0:	sxtw	x8, w1
  43dba4:	cbz	x8, 43dbb4 <_obstack_memory_used@@Base+0x16294>
  43dba8:	ldur	w8, [x29, #-60]
  43dbac:	stur	w8, [x29, #-4]
  43dbb0:	b	43dbd8 <_obstack_memory_used@@Base+0x162b8>
  43dbb4:	ldur	x8, [x29, #-72]
  43dbb8:	add	x8, x8, #0x1
  43dbbc:	stur	x8, [x29, #-72]
  43dbc0:	b	43dadc <_obstack_memory_used@@Base+0x161bc>
  43dbc4:	ldr	x8, [sp, #80]
  43dbc8:	add	x8, x8, #0x1
  43dbcc:	str	x8, [sp, #80]
  43dbd0:	b	43d80c <_obstack_memory_used@@Base+0x15eec>
  43dbd4:	stur	wzr, [x29, #-4]
  43dbd8:	ldur	w0, [x29, #-4]
  43dbdc:	ldp	x29, x30, [sp, #160]
  43dbe0:	add	sp, sp, #0xb0
  43dbe4:	ret
  43dbe8:	sub	sp, sp, #0x100
  43dbec:	stp	x29, x30, [sp, #240]
  43dbf0:	add	x29, sp, #0xf0
  43dbf4:	mov	x8, #0xffffffffffffffff    	// #-1
  43dbf8:	stur	x0, [x29, #-16]
  43dbfc:	stur	x1, [x29, #-24]
  43dc00:	stur	x2, [x29, #-32]
  43dc04:	stur	x3, [x29, #-40]
  43dc08:	ldur	x9, [x29, #-16]
  43dc0c:	ldr	x9, [x9, #152]
  43dc10:	stur	x9, [x29, #-48]
  43dc14:	ldur	x0, [x29, #-16]
  43dc18:	ldur	x1, [x29, #-32]
  43dc1c:	str	x8, [sp, #32]
  43dc20:	bl	438f9c <_obstack_memory_used@@Base+0x1167c>
  43dc24:	str	x0, [sp, #104]
  43dc28:	ldr	x8, [sp, #104]
  43dc2c:	ldr	x9, [sp, #32]
  43dc30:	cmp	x8, x9
  43dc34:	b.ne	43dc40 <_obstack_memory_used@@Base+0x16320>  // b.any
  43dc38:	stur	wzr, [x29, #-4]
  43dc3c:	b	43e020 <_obstack_memory_used@@Base+0x16700>
  43dc40:	mov	x8, xzr
  43dc44:	str	x8, [sp, #112]
  43dc48:	stur	xzr, [x29, #-64]
  43dc4c:	ldur	x8, [x29, #-64]
  43dc50:	ldur	x9, [x29, #-40]
  43dc54:	ldr	x9, [x9, #8]
  43dc58:	cmp	x8, x9
  43dc5c:	b.ge	43e000 <_obstack_memory_used@@Base+0x166e0>  // b.tcont
  43dc60:	ldur	x8, [x29, #-40]
  43dc64:	mov	x9, #0x10                  	// #16
  43dc68:	ldr	x8, [x8, #16]
  43dc6c:	ldur	x10, [x29, #-64]
  43dc70:	ldr	x8, [x8, x10, lsl #3]
  43dc74:	stur	x8, [x29, #-72]
  43dc78:	ldur	x8, [x29, #-48]
  43dc7c:	ldr	x8, [x8]
  43dc80:	ldur	x10, [x29, #-72]
  43dc84:	mul	x9, x9, x10
  43dc88:	add	x8, x8, x9
  43dc8c:	ldr	w11, [x8, #8]
  43dc90:	and	w11, w11, #0xff
  43dc94:	str	w11, [sp, #92]
  43dc98:	ldur	x8, [x29, #-72]
  43dc9c:	ldur	x9, [x29, #-24]
  43dca0:	ldr	x9, [x9, #16]
  43dca4:	cmp	x8, x9
  43dca8:	b.ne	43dcc4 <_obstack_memory_used@@Base+0x163a4>  // b.any
  43dcac:	ldur	x8, [x29, #-32]
  43dcb0:	ldur	x9, [x29, #-24]
  43dcb4:	ldr	x9, [x9, #24]
  43dcb8:	cmp	x8, x9
  43dcbc:	b.ne	43dcc4 <_obstack_memory_used@@Base+0x163a4>  // b.any
  43dcc0:	b	43dff0 <_obstack_memory_used@@Base+0x166d0>
  43dcc4:	ldr	w8, [sp, #92]
  43dcc8:	cmp	w8, #0x4
  43dccc:	b.eq	43dcd4 <_obstack_memory_used@@Base+0x163b4>  // b.none
  43dcd0:	b	43dff0 <_obstack_memory_used@@Base+0x166d0>
  43dcd4:	ldur	x8, [x29, #-16]
  43dcd8:	ldr	x8, [x8, #216]
  43dcdc:	ldr	x9, [sp, #104]
  43dce0:	mov	x10, #0x28                  	// #40
  43dce4:	mul	x9, x10, x9
  43dce8:	add	x8, x8, x9
  43dcec:	str	x8, [sp, #80]
  43dcf0:	ldr	x8, [sp, #104]
  43dcf4:	str	x8, [sp, #96]
  43dcf8:	ldr	x8, [sp, #80]
  43dcfc:	ldr	x8, [x8]
  43dd00:	ldur	x9, [x29, #-72]
  43dd04:	cmp	x8, x9
  43dd08:	b.eq	43dd10 <_obstack_memory_used@@Base+0x163f0>  // b.none
  43dd0c:	b	43dfd0 <_obstack_memory_used@@Base+0x166b0>
  43dd10:	ldr	x8, [sp, #80]
  43dd14:	ldr	x8, [x8, #24]
  43dd18:	ldr	x9, [sp, #80]
  43dd1c:	ldr	x9, [x9, #16]
  43dd20:	subs	x8, x8, x9
  43dd24:	str	x8, [sp, #72]
  43dd28:	ldur	x8, [x29, #-32]
  43dd2c:	ldr	x9, [sp, #72]
  43dd30:	add	x8, x8, x9
  43dd34:	str	x8, [sp, #64]
  43dd38:	ldr	x8, [sp, #72]
  43dd3c:	cbz	x8, 43dd58 <_obstack_memory_used@@Base+0x16438>
  43dd40:	ldur	x8, [x29, #-48]
  43dd44:	ldr	x8, [x8, #24]
  43dd48:	ldur	x9, [x29, #-72]
  43dd4c:	ldr	x8, [x8, x9, lsl #3]
  43dd50:	str	x8, [sp, #24]
  43dd54:	b	43dd7c <_obstack_memory_used@@Base+0x1645c>
  43dd58:	ldur	x8, [x29, #-48]
  43dd5c:	ldr	x8, [x8, #40]
  43dd60:	ldur	x9, [x29, #-72]
  43dd64:	mov	x10, #0x18                  	// #24
  43dd68:	mul	x9, x10, x9
  43dd6c:	add	x8, x8, x9
  43dd70:	ldr	x8, [x8, #16]
  43dd74:	ldr	x8, [x8]
  43dd78:	str	x8, [sp, #24]
  43dd7c:	ldr	x8, [sp, #24]
  43dd80:	str	x8, [sp, #56]
  43dd84:	ldr	x8, [sp, #64]
  43dd88:	ldur	x9, [x29, #-24]
  43dd8c:	ldr	x9, [x9, #24]
  43dd90:	cmp	x8, x9
  43dd94:	b.gt	43de2c <_obstack_memory_used@@Base+0x1650c>
  43dd98:	ldur	x8, [x29, #-24]
  43dd9c:	ldr	x8, [x8]
  43dda0:	ldr	x9, [sp, #64]
  43dda4:	mov	x10, #0x8                   	// #8
  43dda8:	mul	x9, x10, x9
  43ddac:	add	x8, x8, x9
  43ddb0:	ldr	x8, [x8]
  43ddb4:	cbz	x8, 43de2c <_obstack_memory_used@@Base+0x1650c>
  43ddb8:	ldur	x8, [x29, #-24]
  43ddbc:	ldr	x8, [x8]
  43ddc0:	ldr	x9, [sp, #64]
  43ddc4:	mov	x10, #0x8                   	// #8
  43ddc8:	mul	x9, x10, x9
  43ddcc:	add	x8, x8, x9
  43ddd0:	ldr	x8, [x8]
  43ddd4:	cbz	x8, 43de2c <_obstack_memory_used@@Base+0x1650c>
  43ddd8:	ldur	x8, [x29, #-24]
  43dddc:	ldr	x8, [x8]
  43dde0:	ldr	x9, [sp, #64]
  43dde4:	mov	x10, #0x8                   	// #8
  43dde8:	mul	x9, x10, x9
  43ddec:	add	x8, x8, x9
  43ddf0:	ldr	x8, [x8]
  43ddf4:	add	x0, x8, #0x8
  43ddf8:	ldr	x1, [sp, #56]
  43ddfc:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43de00:	cbz	x0, 43de2c <_obstack_memory_used@@Base+0x1650c>
  43de04:	ldur	x0, [x29, #-16]
  43de08:	ldur	x8, [x29, #-24]
  43de0c:	add	x1, x8, #0x20
  43de10:	ldur	x2, [x29, #-72]
  43de14:	ldur	x3, [x29, #-32]
  43de18:	ldr	x4, [sp, #56]
  43de1c:	ldr	x5, [sp, #64]
  43de20:	bl	43e6e0 <_obstack_memory_used@@Base+0x16dc0>
  43de24:	tbnz	w0, #0, 43de2c <_obstack_memory_used@@Base+0x1650c>
  43de28:	b	43de30 <_obstack_memory_used@@Base+0x16510>
  43de2c:	b	43dfd0 <_obstack_memory_used@@Base+0x166b0>
  43de30:	ldr	x8, [sp, #112]
  43de34:	cbnz	x8, 43de88 <_obstack_memory_used@@Base+0x16568>
  43de38:	ldur	x1, [x29, #-24]
  43de3c:	add	x8, sp, #0x70
  43de40:	mov	x0, x8
  43de44:	mov	x2, #0x38                  	// #56
  43de48:	str	x8, [sp, #16]
  43de4c:	bl	402290 <memcpy@plt>
  43de50:	ldr	x8, [sp, #16]
  43de54:	add	x0, x8, #0x20
  43de58:	ldur	x9, [x29, #-24]
  43de5c:	add	x1, x9, #0x20
  43de60:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  43de64:	stur	w0, [x29, #-52]
  43de68:	ldur	w10, [x29, #-52]
  43de6c:	cmp	w10, #0x0
  43de70:	cset	w10, ne  // ne = any
  43de74:	and	w10, w10, #0x1
  43de78:	mov	w1, w10
  43de7c:	sxtw	x8, w1
  43de80:	cbz	x8, 43de88 <_obstack_memory_used@@Base+0x16568>
  43de84:	b	43e004 <_obstack_memory_used@@Base+0x166e4>
  43de88:	ldur	x8, [x29, #-72]
  43de8c:	add	x9, sp, #0x70
  43de90:	str	x8, [sp, #128]
  43de94:	ldur	x8, [x29, #-32]
  43de98:	str	x8, [sp, #136]
  43de9c:	add	x0, x9, #0x20
  43dea0:	ldr	x1, [sp, #96]
  43dea4:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43dea8:	mov	w10, #0x1                   	// #1
  43deac:	and	w10, w0, w10
  43deb0:	strb	w10, [sp, #55]
  43deb4:	ldrb	w10, [sp, #55]
  43deb8:	eor	w10, w10, #0x1
  43debc:	and	w10, w10, #0x1
  43dec0:	mov	w1, w10
  43dec4:	sxtw	x8, w1
  43dec8:	cbz	x8, 43ded8 <_obstack_memory_used@@Base+0x165b8>
  43decc:	mov	w8, #0xc                   	// #12
  43ded0:	stur	w8, [x29, #-52]
  43ded4:	b	43e004 <_obstack_memory_used@@Base+0x166e4>
  43ded8:	add	x1, sp, #0x70
  43dedc:	ldr	x8, [sp, #112]
  43dee0:	ldur	x9, [x29, #-32]
  43dee4:	mov	x10, #0x8                   	// #8
  43dee8:	mul	x9, x10, x9
  43deec:	add	x8, x8, x9
  43def0:	ldr	x8, [x8]
  43def4:	str	x8, [sp, #40]
  43def8:	ldur	x0, [x29, #-16]
  43defc:	bl	43ce50 <_obstack_memory_used@@Base+0x15530>
  43df00:	stur	w0, [x29, #-52]
  43df04:	ldur	w11, [x29, #-52]
  43df08:	cmp	w11, #0x0
  43df0c:	cset	w11, ne  // ne = any
  43df10:	and	w11, w11, #0x1
  43df14:	mov	w1, w11
  43df18:	sxtw	x8, w1
  43df1c:	cbz	x8, 43df24 <_obstack_memory_used@@Base+0x16604>
  43df20:	b	43e004 <_obstack_memory_used@@Base+0x166e4>
  43df24:	ldur	x8, [x29, #-24]
  43df28:	ldr	x8, [x8, #8]
  43df2c:	cbz	x8, 43df70 <_obstack_memory_used@@Base+0x16650>
  43df30:	ldur	x0, [x29, #-48]
  43df34:	ldur	x8, [x29, #-24]
  43df38:	ldr	x1, [x8, #8]
  43df3c:	ldr	x2, [sp, #112]
  43df40:	ldur	x8, [x29, #-32]
  43df44:	add	x3, x8, #0x1
  43df48:	bl	43d07c <_obstack_memory_used@@Base+0x1575c>
  43df4c:	stur	w0, [x29, #-52]
  43df50:	ldur	w9, [x29, #-52]
  43df54:	cmp	w9, #0x0
  43df58:	cset	w9, ne  // ne = any
  43df5c:	and	w9, w9, #0x1
  43df60:	mov	w1, w9
  43df64:	sxtw	x8, w1
  43df68:	cbz	x8, 43df70 <_obstack_memory_used@@Base+0x16650>
  43df6c:	b	43e004 <_obstack_memory_used@@Base+0x166e4>
  43df70:	ldr	x8, [sp, #40]
  43df74:	add	x9, sp, #0x70
  43df78:	ldr	x10, [sp, #112]
  43df7c:	ldur	x11, [x29, #-32]
  43df80:	mov	x12, #0x8                   	// #8
  43df84:	mul	x11, x12, x11
  43df88:	add	x10, x10, x11
  43df8c:	str	x8, [x10]
  43df90:	add	x0, x9, #0x20
  43df94:	add	x8, x9, #0x20
  43df98:	ldr	x1, [sp, #96]
  43df9c:	str	x0, [sp, #8]
  43dfa0:	mov	x0, x8
  43dfa4:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43dfa8:	subs	x1, x0, #0x1
  43dfac:	ldr	x0, [sp, #8]
  43dfb0:	bl	434e50 <_obstack_memory_used@@Base+0xd530>
  43dfb4:	ldur	x8, [x29, #-16]
  43dfb8:	ldr	x8, [x8, #216]
  43dfbc:	ldr	x9, [sp, #96]
  43dfc0:	mov	x10, #0x28                  	// #40
  43dfc4:	mul	x9, x10, x9
  43dfc8:	add	x8, x8, x9
  43dfcc:	str	x8, [sp, #80]
  43dfd0:	ldr	x8, [sp, #96]
  43dfd4:	add	x8, x8, #0x1
  43dfd8:	str	x8, [sp, #96]
  43dfdc:	ldr	x8, [sp, #80]
  43dfe0:	add	x9, x8, #0x28
  43dfe4:	str	x9, [sp, #80]
  43dfe8:	ldrb	w10, [x8, #32]
  43dfec:	cbnz	w10, 43dcf8 <_obstack_memory_used@@Base+0x163d8>
  43dff0:	ldur	x8, [x29, #-64]
  43dff4:	add	x8, x8, #0x1
  43dff8:	stur	x8, [x29, #-64]
  43dffc:	b	43dc4c <_obstack_memory_used@@Base+0x1632c>
  43e000:	stur	wzr, [x29, #-52]
  43e004:	ldr	x8, [sp, #112]
  43e008:	cbz	x8, 43e018 <_obstack_memory_used@@Base+0x166f8>
  43e00c:	add	x8, sp, #0x70
  43e010:	ldr	x0, [x8, #48]
  43e014:	bl	4026c0 <free@plt>
  43e018:	ldur	w8, [x29, #-52]
  43e01c:	stur	w8, [x29, #-4]
  43e020:	ldur	w0, [x29, #-4]
  43e024:	ldp	x29, x30, [sp, #240]
  43e028:	add	sp, sp, #0x100
  43e02c:	ret
  43e030:	sub	sp, sp, #0x80
  43e034:	stp	x29, x30, [sp, #112]
  43e038:	add	x29, sp, #0x70
  43e03c:	stur	x0, [x29, #-16]
  43e040:	stur	x1, [x29, #-24]
  43e044:	stur	x2, [x29, #-32]
  43e048:	ldur	x8, [x29, #-24]
  43e04c:	ldr	x8, [x8, #8]
  43e050:	cbz	x8, 43e060 <_obstack_memory_used@@Base+0x16740>
  43e054:	ldur	x8, [x29, #-32]
  43e058:	ldr	x8, [x8, #8]
  43e05c:	cbnz	x8, 43e068 <_obstack_memory_used@@Base+0x16748>
  43e060:	stur	wzr, [x29, #-4]
  43e064:	b	43e460 <_obstack_memory_used@@Base+0x16b40>
  43e068:	ldur	x8, [x29, #-24]
  43e06c:	ldr	x8, [x8, #8]
  43e070:	ldur	x9, [x29, #-32]
  43e074:	ldr	x9, [x9, #8]
  43e078:	add	x8, x8, x9
  43e07c:	ldur	x9, [x29, #-16]
  43e080:	ldr	x9, [x9, #8]
  43e084:	add	x8, x8, x9
  43e088:	ldur	x9, [x29, #-16]
  43e08c:	ldr	x9, [x9]
  43e090:	cmp	x8, x9
  43e094:	b.le	43e118 <_obstack_memory_used@@Base+0x167f8>
  43e098:	ldur	x8, [x29, #-24]
  43e09c:	ldr	x8, [x8, #8]
  43e0a0:	ldur	x9, [x29, #-32]
  43e0a4:	ldr	x9, [x9, #8]
  43e0a8:	add	x8, x8, x9
  43e0ac:	ldur	x9, [x29, #-16]
  43e0b0:	ldr	x9, [x9]
  43e0b4:	add	x8, x8, x9
  43e0b8:	str	x8, [sp, #24]
  43e0bc:	ldur	x8, [x29, #-16]
  43e0c0:	ldr	x0, [x8, #16]
  43e0c4:	ldr	x8, [sp, #24]
  43e0c8:	mov	x9, #0x8                   	// #8
  43e0cc:	mul	x1, x8, x9
  43e0d0:	bl	402570 <realloc@plt>
  43e0d4:	str	x0, [sp, #16]
  43e0d8:	ldr	x8, [sp, #16]
  43e0dc:	cmp	x8, #0x0
  43e0e0:	cset	w10, eq  // eq = none
  43e0e4:	and	w10, w10, #0x1
  43e0e8:	mov	w0, w10
  43e0ec:	sxtw	x8, w0
  43e0f0:	cbz	x8, 43e100 <_obstack_memory_used@@Base+0x167e0>
  43e0f4:	mov	w8, #0xc                   	// #12
  43e0f8:	stur	w8, [x29, #-4]
  43e0fc:	b	43e460 <_obstack_memory_used@@Base+0x16b40>
  43e100:	ldr	x8, [sp, #16]
  43e104:	ldur	x9, [x29, #-16]
  43e108:	str	x8, [x9, #16]
  43e10c:	ldr	x8, [sp, #24]
  43e110:	ldur	x9, [x29, #-16]
  43e114:	str	x8, [x9]
  43e118:	ldur	x8, [x29, #-16]
  43e11c:	ldr	x8, [x8, #8]
  43e120:	ldur	x9, [x29, #-24]
  43e124:	ldr	x9, [x9, #8]
  43e128:	add	x8, x8, x9
  43e12c:	ldur	x9, [x29, #-32]
  43e130:	ldr	x9, [x9, #8]
  43e134:	add	x8, x8, x9
  43e138:	str	x8, [sp, #32]
  43e13c:	ldur	x8, [x29, #-24]
  43e140:	ldr	x8, [x8, #8]
  43e144:	subs	x8, x8, #0x1
  43e148:	stur	x8, [x29, #-40]
  43e14c:	ldur	x8, [x29, #-32]
  43e150:	ldr	x8, [x8, #8]
  43e154:	subs	x8, x8, #0x1
  43e158:	stur	x8, [x29, #-48]
  43e15c:	ldur	x8, [x29, #-16]
  43e160:	ldr	x8, [x8, #8]
  43e164:	subs	x8, x8, #0x1
  43e168:	str	x8, [sp, #48]
  43e16c:	ldur	x8, [x29, #-24]
  43e170:	ldr	x8, [x8, #16]
  43e174:	ldur	x9, [x29, #-40]
  43e178:	ldr	x8, [x8, x9, lsl #3]
  43e17c:	ldur	x9, [x29, #-32]
  43e180:	ldr	x9, [x9, #16]
  43e184:	ldur	x10, [x29, #-48]
  43e188:	ldr	x9, [x9, x10, lsl #3]
  43e18c:	cmp	x8, x9
  43e190:	b.ne	43e28c <_obstack_memory_used@@Base+0x1696c>  // b.any
  43e194:	ldr	x8, [sp, #48]
  43e198:	cmp	x8, #0x0
  43e19c:	cset	w9, lt  // lt = tstop
  43e1a0:	mov	w10, #0x0                   	// #0
  43e1a4:	str	w10, [sp, #12]
  43e1a8:	tbnz	w9, #0, 43e1d8 <_obstack_memory_used@@Base+0x168b8>
  43e1ac:	ldur	x8, [x29, #-16]
  43e1b0:	ldr	x8, [x8, #16]
  43e1b4:	ldr	x9, [sp, #48]
  43e1b8:	ldr	x8, [x8, x9, lsl #3]
  43e1bc:	ldur	x9, [x29, #-24]
  43e1c0:	ldr	x9, [x9, #16]
  43e1c4:	ldur	x10, [x29, #-40]
  43e1c8:	ldr	x9, [x9, x10, lsl #3]
  43e1cc:	cmp	x8, x9
  43e1d0:	cset	w11, gt
  43e1d4:	str	w11, [sp, #12]
  43e1d8:	ldr	w8, [sp, #12]
  43e1dc:	tbnz	w8, #0, 43e1e4 <_obstack_memory_used@@Base+0x168c4>
  43e1e0:	b	43e1f4 <_obstack_memory_used@@Base+0x168d4>
  43e1e4:	ldr	x8, [sp, #48]
  43e1e8:	subs	x8, x8, #0x1
  43e1ec:	str	x8, [sp, #48]
  43e1f0:	b	43e194 <_obstack_memory_used@@Base+0x16874>
  43e1f4:	ldr	x8, [sp, #48]
  43e1f8:	cmp	x8, #0x0
  43e1fc:	cset	w9, lt  // lt = tstop
  43e200:	tbnz	w9, #0, 43e22c <_obstack_memory_used@@Base+0x1690c>
  43e204:	ldur	x8, [x29, #-16]
  43e208:	ldr	x8, [x8, #16]
  43e20c:	ldr	x9, [sp, #48]
  43e210:	ldr	x8, [x8, x9, lsl #3]
  43e214:	ldur	x9, [x29, #-24]
  43e218:	ldr	x9, [x9, #16]
  43e21c:	ldur	x10, [x29, #-40]
  43e220:	ldr	x9, [x9, x10, lsl #3]
  43e224:	cmp	x8, x9
  43e228:	b.eq	43e254 <_obstack_memory_used@@Base+0x16934>  // b.none
  43e22c:	ldur	x8, [x29, #-24]
  43e230:	ldr	x8, [x8, #16]
  43e234:	ldur	x9, [x29, #-40]
  43e238:	ldr	x8, [x8, x9, lsl #3]
  43e23c:	ldur	x9, [x29, #-16]
  43e240:	ldr	x9, [x9, #16]
  43e244:	ldr	x10, [sp, #32]
  43e248:	subs	x10, x10, #0x1
  43e24c:	str	x10, [sp, #32]
  43e250:	str	x8, [x9, x10, lsl #3]
  43e254:	ldur	x8, [x29, #-40]
  43e258:	subs	x8, x8, #0x1
  43e25c:	stur	x8, [x29, #-40]
  43e260:	cmp	x8, #0x0
  43e264:	cset	w9, lt  // lt = tstop
  43e268:	tbnz	w9, #0, 43e284 <_obstack_memory_used@@Base+0x16964>
  43e26c:	ldur	x8, [x29, #-48]
  43e270:	subs	x8, x8, #0x1
  43e274:	stur	x8, [x29, #-48]
  43e278:	cmp	x8, #0x0
  43e27c:	cset	w9, ge  // ge = tcont
  43e280:	tbnz	w9, #0, 43e288 <_obstack_memory_used@@Base+0x16968>
  43e284:	b	43e2f4 <_obstack_memory_used@@Base+0x169d4>
  43e288:	b	43e2f0 <_obstack_memory_used@@Base+0x169d0>
  43e28c:	ldur	x8, [x29, #-24]
  43e290:	ldr	x8, [x8, #16]
  43e294:	ldur	x9, [x29, #-40]
  43e298:	ldr	x8, [x8, x9, lsl #3]
  43e29c:	ldur	x9, [x29, #-32]
  43e2a0:	ldr	x9, [x9, #16]
  43e2a4:	ldur	x10, [x29, #-48]
  43e2a8:	ldr	x9, [x9, x10, lsl #3]
  43e2ac:	cmp	x8, x9
  43e2b0:	b.ge	43e2d4 <_obstack_memory_used@@Base+0x169b4>  // b.tcont
  43e2b4:	ldur	x8, [x29, #-48]
  43e2b8:	subs	x8, x8, #0x1
  43e2bc:	stur	x8, [x29, #-48]
  43e2c0:	cmp	x8, #0x0
  43e2c4:	cset	w9, ge  // ge = tcont
  43e2c8:	tbnz	w9, #0, 43e2d0 <_obstack_memory_used@@Base+0x169b0>
  43e2cc:	b	43e2f4 <_obstack_memory_used@@Base+0x169d4>
  43e2d0:	b	43e2f0 <_obstack_memory_used@@Base+0x169d0>
  43e2d4:	ldur	x8, [x29, #-40]
  43e2d8:	subs	x8, x8, #0x1
  43e2dc:	stur	x8, [x29, #-40]
  43e2e0:	cmp	x8, #0x0
  43e2e4:	cset	w9, ge  // ge = tcont
  43e2e8:	tbnz	w9, #0, 43e2f0 <_obstack_memory_used@@Base+0x169d0>
  43e2ec:	b	43e2f4 <_obstack_memory_used@@Base+0x169d4>
  43e2f0:	b	43e16c <_obstack_memory_used@@Base+0x1684c>
  43e2f4:	ldur	x8, [x29, #-16]
  43e2f8:	ldr	x8, [x8, #8]
  43e2fc:	subs	x8, x8, #0x1
  43e300:	str	x8, [sp, #48]
  43e304:	ldur	x8, [x29, #-16]
  43e308:	ldr	x8, [x8, #8]
  43e30c:	ldur	x9, [x29, #-24]
  43e310:	ldr	x9, [x9, #8]
  43e314:	add	x8, x8, x9
  43e318:	ldur	x9, [x29, #-32]
  43e31c:	ldr	x9, [x9, #8]
  43e320:	add	x8, x8, x9
  43e324:	subs	x8, x8, #0x1
  43e328:	str	x8, [sp, #56]
  43e32c:	ldr	x8, [sp, #56]
  43e330:	ldr	x9, [sp, #32]
  43e334:	subs	x8, x8, x9
  43e338:	add	x8, x8, #0x1
  43e33c:	str	x8, [sp, #40]
  43e340:	ldr	x8, [sp, #40]
  43e344:	ldur	x9, [x29, #-16]
  43e348:	ldr	x10, [x9, #8]
  43e34c:	add	x8, x10, x8
  43e350:	str	x8, [x9, #8]
  43e354:	ldr	x8, [sp, #40]
  43e358:	cmp	x8, #0x0
  43e35c:	cset	w11, le
  43e360:	tbnz	w11, #0, 43e42c <_obstack_memory_used@@Base+0x16b0c>
  43e364:	ldr	x8, [sp, #48]
  43e368:	cmp	x8, #0x0
  43e36c:	cset	w9, lt  // lt = tstop
  43e370:	tbnz	w9, #0, 43e42c <_obstack_memory_used@@Base+0x16b0c>
  43e374:	ldur	x8, [x29, #-16]
  43e378:	ldr	x8, [x8, #16]
  43e37c:	ldr	x9, [sp, #56]
  43e380:	ldr	x8, [x8, x9, lsl #3]
  43e384:	ldur	x9, [x29, #-16]
  43e388:	ldr	x9, [x9, #16]
  43e38c:	ldr	x10, [sp, #48]
  43e390:	ldr	x9, [x9, x10, lsl #3]
  43e394:	cmp	x8, x9
  43e398:	b.le	43e3e4 <_obstack_memory_used@@Base+0x16ac4>
  43e39c:	ldur	x8, [x29, #-16]
  43e3a0:	ldr	x8, [x8, #16]
  43e3a4:	ldr	x9, [sp, #56]
  43e3a8:	subs	x10, x9, #0x1
  43e3ac:	str	x10, [sp, #56]
  43e3b0:	ldr	x8, [x8, x9, lsl #3]
  43e3b4:	ldur	x9, [x29, #-16]
  43e3b8:	ldr	x9, [x9, #16]
  43e3bc:	ldr	x10, [sp, #48]
  43e3c0:	ldr	x11, [sp, #40]
  43e3c4:	subs	x12, x11, #0x1
  43e3c8:	str	x12, [sp, #40]
  43e3cc:	add	x10, x10, x11
  43e3d0:	str	x8, [x9, x10, lsl #3]
  43e3d4:	ldr	x8, [sp, #40]
  43e3d8:	cbnz	x8, 43e3e0 <_obstack_memory_used@@Base+0x16ac0>
  43e3dc:	b	43e42c <_obstack_memory_used@@Base+0x16b0c>
  43e3e0:	b	43e428 <_obstack_memory_used@@Base+0x16b08>
  43e3e4:	ldur	x8, [x29, #-16]
  43e3e8:	ldr	x8, [x8, #16]
  43e3ec:	ldr	x9, [sp, #48]
  43e3f0:	ldr	x8, [x8, x9, lsl #3]
  43e3f4:	ldur	x9, [x29, #-16]
  43e3f8:	ldr	x9, [x9, #16]
  43e3fc:	ldr	x10, [sp, #48]
  43e400:	ldr	x11, [sp, #40]
  43e404:	add	x10, x10, x11
  43e408:	str	x8, [x9, x10, lsl #3]
  43e40c:	ldr	x8, [sp, #48]
  43e410:	subs	x8, x8, #0x1
  43e414:	str	x8, [sp, #48]
  43e418:	cmp	x8, #0x0
  43e41c:	cset	w12, ge  // ge = tcont
  43e420:	tbnz	w12, #0, 43e428 <_obstack_memory_used@@Base+0x16b08>
  43e424:	b	43e42c <_obstack_memory_used@@Base+0x16b0c>
  43e428:	b	43e374 <_obstack_memory_used@@Base+0x16a54>
  43e42c:	ldur	x8, [x29, #-16]
  43e430:	ldr	x0, [x8, #16]
  43e434:	ldur	x8, [x29, #-16]
  43e438:	ldr	x8, [x8, #16]
  43e43c:	ldr	x9, [sp, #32]
  43e440:	mov	x10, #0x8                   	// #8
  43e444:	mul	x9, x10, x9
  43e448:	add	x1, x8, x9
  43e44c:	ldr	x8, [sp, #40]
  43e450:	mov	x9, #0x8                   	// #8
  43e454:	mul	x2, x8, x9
  43e458:	bl	402290 <memcpy@plt>
  43e45c:	stur	wzr, [x29, #-4]
  43e460:	ldur	w0, [x29, #-4]
  43e464:	ldp	x29, x30, [sp, #112]
  43e468:	add	sp, sp, #0x80
  43e46c:	ret
  43e470:	sub	sp, sp, #0xa0
  43e474:	stp	x29, x30, [sp, #144]
  43e478:	add	x29, sp, #0x90
  43e47c:	stur	x0, [x29, #-16]
  43e480:	stur	x1, [x29, #-24]
  43e484:	stur	x2, [x29, #-32]
  43e488:	stur	x3, [x29, #-40]
  43e48c:	ldur	x8, [x29, #-16]
  43e490:	ldr	x8, [x8, #56]
  43e494:	ldur	x9, [x29, #-24]
  43e498:	mov	x10, #0x18                  	// #24
  43e49c:	mul	x9, x10, x9
  43e4a0:	add	x8, x8, x9
  43e4a4:	stur	x8, [x29, #-64]
  43e4a8:	str	xzr, [sp, #56]
  43e4ac:	str	xzr, [sp, #64]
  43e4b0:	str	xzr, [sp, #72]
  43e4b4:	stur	xzr, [x29, #-48]
  43e4b8:	ldur	x8, [x29, #-48]
  43e4bc:	ldur	x9, [x29, #-64]
  43e4c0:	ldr	x9, [x9, #8]
  43e4c4:	cmp	x8, x9
  43e4c8:	b.ge	43e654 <_obstack_memory_used@@Base+0x16d34>  // b.tcont
  43e4cc:	ldur	x8, [x29, #-64]
  43e4d0:	ldr	x8, [x8, #16]
  43e4d4:	ldur	x9, [x29, #-48]
  43e4d8:	ldr	x8, [x8, x9, lsl #3]
  43e4dc:	str	x8, [sp, #48]
  43e4e0:	ldr	x8, [sp, #48]
  43e4e4:	ldur	x9, [x29, #-24]
  43e4e8:	cmp	x8, x9
  43e4ec:	b.ne	43e4f4 <_obstack_memory_used@@Base+0x16bd4>  // b.any
  43e4f0:	b	43e644 <_obstack_memory_used@@Base+0x16d24>
  43e4f4:	ldur	x8, [x29, #-16]
  43e4f8:	ldr	x8, [x8]
  43e4fc:	ldr	x9, [sp, #48]
  43e500:	mov	x10, #0x10                  	// #16
  43e504:	mul	x9, x10, x9
  43e508:	add	x8, x8, x9
  43e50c:	ldr	w11, [x8, #8]
  43e510:	and	w11, w11, #0xff
  43e514:	and	w11, w11, #0x8
  43e518:	cbz	w11, 43e644 <_obstack_memory_used@@Base+0x16d24>
  43e51c:	ldur	x8, [x29, #-16]
  43e520:	ldr	x8, [x8, #40]
  43e524:	ldr	x9, [sp, #48]
  43e528:	mov	x10, #0x18                  	// #24
  43e52c:	mul	x9, x10, x9
  43e530:	add	x8, x8, x9
  43e534:	ldr	x8, [x8, #16]
  43e538:	ldr	x8, [x8]
  43e53c:	str	x8, [sp, #40]
  43e540:	ldur	x8, [x29, #-16]
  43e544:	ldr	x8, [x8, #40]
  43e548:	ldr	x9, [sp, #48]
  43e54c:	mul	x9, x10, x9
  43e550:	add	x8, x8, x9
  43e554:	ldr	x8, [x8, #8]
  43e558:	cmp	x8, #0x1
  43e55c:	b.le	43e588 <_obstack_memory_used@@Base+0x16c68>
  43e560:	ldur	x8, [x29, #-16]
  43e564:	ldr	x8, [x8, #40]
  43e568:	ldr	x9, [sp, #48]
  43e56c:	mov	x10, #0x18                  	// #24
  43e570:	mul	x9, x10, x9
  43e574:	add	x8, x8, x9
  43e578:	ldr	x8, [x8, #16]
  43e57c:	ldr	x8, [x8, #8]
  43e580:	str	x8, [sp, #8]
  43e584:	b	43e590 <_obstack_memory_used@@Base+0x16c70>
  43e588:	mov	x8, #0xffffffffffffffff    	// #-1
  43e58c:	str	x8, [sp, #8]
  43e590:	ldr	x8, [sp, #8]
  43e594:	str	x8, [sp, #32]
  43e598:	ldur	x0, [x29, #-64]
  43e59c:	ldr	x1, [sp, #40]
  43e5a0:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43e5a4:	cbnz	x0, 43e5b8 <_obstack_memory_used@@Base+0x16c98>
  43e5a8:	ldur	x0, [x29, #-32]
  43e5ac:	ldr	x1, [sp, #40]
  43e5b0:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43e5b4:	cbnz	x0, 43e5e8 <_obstack_memory_used@@Base+0x16cc8>
  43e5b8:	ldr	x8, [sp, #32]
  43e5bc:	cmp	x8, #0x0
  43e5c0:	cset	w9, le
  43e5c4:	tbnz	w9, #0, 43e644 <_obstack_memory_used@@Base+0x16d24>
  43e5c8:	ldur	x0, [x29, #-64]
  43e5cc:	ldr	x1, [sp, #32]
  43e5d0:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43e5d4:	cbnz	x0, 43e644 <_obstack_memory_used@@Base+0x16d24>
  43e5d8:	ldur	x0, [x29, #-32]
  43e5dc:	ldr	x1, [sp, #32]
  43e5e0:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43e5e4:	cbz	x0, 43e644 <_obstack_memory_used@@Base+0x16d24>
  43e5e8:	ldur	x1, [x29, #-40]
  43e5ec:	ldur	x8, [x29, #-16]
  43e5f0:	ldr	x8, [x8, #56]
  43e5f4:	ldr	x9, [sp, #48]
  43e5f8:	mov	x10, #0x18                  	// #24
  43e5fc:	mul	x9, x10, x9
  43e600:	add	x2, x8, x9
  43e604:	add	x0, sp, #0x38
  43e608:	bl	43e030 <_obstack_memory_used@@Base+0x16710>
  43e60c:	stur	w0, [x29, #-52]
  43e610:	ldur	w11, [x29, #-52]
  43e614:	cmp	w11, #0x0
  43e618:	cset	w11, ne  // ne = any
  43e61c:	and	w11, w11, #0x1
  43e620:	mov	w1, w11
  43e624:	sxtw	x8, w1
  43e628:	cbz	x8, 43e644 <_obstack_memory_used@@Base+0x16d24>
  43e62c:	add	x8, sp, #0x38
  43e630:	ldr	x0, [x8, #16]
  43e634:	bl	4026c0 <free@plt>
  43e638:	ldur	w9, [x29, #-52]
  43e63c:	stur	w9, [x29, #-4]
  43e640:	b	43e6d0 <_obstack_memory_used@@Base+0x16db0>
  43e644:	ldur	x8, [x29, #-48]
  43e648:	add	x8, x8, #0x1
  43e64c:	stur	x8, [x29, #-48]
  43e650:	b	43e4b8 <_obstack_memory_used@@Base+0x16b98>
  43e654:	stur	xzr, [x29, #-48]
  43e658:	ldur	x8, [x29, #-48]
  43e65c:	ldur	x9, [x29, #-64]
  43e660:	ldr	x9, [x9, #8]
  43e664:	cmp	x8, x9
  43e668:	b.ge	43e6c0 <_obstack_memory_used@@Base+0x16da0>  // b.tcont
  43e66c:	ldur	x8, [x29, #-64]
  43e670:	ldr	x8, [x8, #16]
  43e674:	ldur	x9, [x29, #-48]
  43e678:	ldr	x8, [x8, x9, lsl #3]
  43e67c:	str	x8, [sp, #24]
  43e680:	ldr	x1, [sp, #24]
  43e684:	add	x0, sp, #0x38
  43e688:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43e68c:	cbnz	x0, 43e6b0 <_obstack_memory_used@@Base+0x16d90>
  43e690:	ldur	x0, [x29, #-32]
  43e694:	ldr	x1, [sp, #24]
  43e698:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43e69c:	subs	x8, x0, #0x1
  43e6a0:	str	x8, [sp, #16]
  43e6a4:	ldur	x0, [x29, #-32]
  43e6a8:	ldr	x1, [sp, #16]
  43e6ac:	bl	434e50 <_obstack_memory_used@@Base+0xd530>
  43e6b0:	ldur	x8, [x29, #-48]
  43e6b4:	add	x8, x8, #0x1
  43e6b8:	stur	x8, [x29, #-48]
  43e6bc:	b	43e658 <_obstack_memory_used@@Base+0x16d38>
  43e6c0:	add	x8, sp, #0x38
  43e6c4:	ldr	x0, [x8, #16]
  43e6c8:	bl	4026c0 <free@plt>
  43e6cc:	stur	wzr, [x29, #-4]
  43e6d0:	ldur	w0, [x29, #-4]
  43e6d4:	ldp	x29, x30, [sp, #144]
  43e6d8:	add	sp, sp, #0xa0
  43e6dc:	ret
  43e6e0:	sub	sp, sp, #0x90
  43e6e4:	stp	x29, x30, [sp, #128]
  43e6e8:	add	x29, sp, #0x80
  43e6ec:	stur	x0, [x29, #-16]
  43e6f0:	stur	x1, [x29, #-24]
  43e6f4:	stur	x2, [x29, #-32]
  43e6f8:	stur	x3, [x29, #-40]
  43e6fc:	stur	x4, [x29, #-48]
  43e700:	stur	x5, [x29, #-56]
  43e704:	ldur	x8, [x29, #-16]
  43e708:	ldr	x8, [x8, #152]
  43e70c:	str	x8, [sp, #64]
  43e710:	ldur	x0, [x29, #-16]
  43e714:	ldur	x1, [x29, #-40]
  43e718:	bl	438f9c <_obstack_memory_used@@Base+0x1167c>
  43e71c:	str	x0, [sp, #32]
  43e720:	ldur	x0, [x29, #-16]
  43e724:	ldur	x1, [x29, #-56]
  43e728:	bl	438f9c <_obstack_memory_used@@Base+0x1167c>
  43e72c:	str	x0, [sp, #24]
  43e730:	str	xzr, [sp, #56]
  43e734:	ldr	x8, [sp, #56]
  43e738:	ldur	x9, [x29, #-24]
  43e73c:	ldr	x9, [x9, #8]
  43e740:	cmp	x8, x9
  43e744:	b.ge	43e82c <_obstack_memory_used@@Base+0x16f0c>  // b.tcont
  43e748:	ldur	x8, [x29, #-16]
  43e74c:	ldr	x8, [x8, #216]
  43e750:	ldur	x9, [x29, #-24]
  43e754:	mov	x10, #0x10                  	// #16
  43e758:	ldr	x9, [x9, #16]
  43e75c:	ldr	x11, [sp, #56]
  43e760:	ldr	x9, [x9, x11, lsl #3]
  43e764:	mov	x11, #0x28                  	// #40
  43e768:	mul	x9, x11, x9
  43e76c:	add	x8, x8, x9
  43e770:	str	x8, [sp, #8]
  43e774:	ldr	x8, [sp, #64]
  43e778:	ldr	x8, [x8]
  43e77c:	ldr	x9, [sp, #8]
  43e780:	ldr	x9, [x9]
  43e784:	mul	x9, x10, x9
  43e788:	ldr	x8, [x8, x9]
  43e78c:	str	x8, [sp, #16]
  43e790:	ldur	x0, [x29, #-16]
  43e794:	ldur	x8, [x29, #-24]
  43e798:	ldr	x8, [x8, #16]
  43e79c:	ldr	x9, [sp, #56]
  43e7a0:	ldr	x1, [x8, x9, lsl #3]
  43e7a4:	ldr	x2, [sp, #16]
  43e7a8:	ldur	x3, [x29, #-32]
  43e7ac:	ldur	x4, [x29, #-40]
  43e7b0:	ldr	x5, [sp, #32]
  43e7b4:	bl	43e84c <_obstack_memory_used@@Base+0x16f2c>
  43e7b8:	mov	w1, w0
  43e7bc:	sxtw	x8, w1
  43e7c0:	str	x8, [sp, #40]
  43e7c4:	ldur	x0, [x29, #-16]
  43e7c8:	ldur	x8, [x29, #-24]
  43e7cc:	ldr	x8, [x8, #16]
  43e7d0:	ldr	x9, [sp, #56]
  43e7d4:	ldr	x1, [x8, x9, lsl #3]
  43e7d8:	ldr	x2, [sp, #16]
  43e7dc:	ldur	x3, [x29, #-48]
  43e7e0:	ldur	x4, [x29, #-56]
  43e7e4:	ldr	x5, [sp, #24]
  43e7e8:	bl	43e84c <_obstack_memory_used@@Base+0x16f2c>
  43e7ec:	mov	w1, w0
  43e7f0:	sxtw	x8, w1
  43e7f4:	str	x8, [sp, #48]
  43e7f8:	ldr	x8, [sp, #48]
  43e7fc:	ldr	x9, [sp, #40]
  43e800:	cmp	x8, x9
  43e804:	b.ne	43e80c <_obstack_memory_used@@Base+0x16eec>  // b.any
  43e808:	b	43e81c <_obstack_memory_used@@Base+0x16efc>
  43e80c:	mov	w8, #0x1                   	// #1
  43e810:	and	w8, w8, #0x1
  43e814:	sturb	w8, [x29, #-1]
  43e818:	b	43e838 <_obstack_memory_used@@Base+0x16f18>
  43e81c:	ldr	x8, [sp, #56]
  43e820:	add	x8, x8, #0x1
  43e824:	str	x8, [sp, #56]
  43e828:	b	43e734 <_obstack_memory_used@@Base+0x16e14>
  43e82c:	mov	w8, wzr
  43e830:	and	w8, w8, #0x1
  43e834:	sturb	w8, [x29, #-1]
  43e838:	ldurb	w8, [x29, #-1]
  43e83c:	and	w0, w8, #0x1
  43e840:	ldp	x29, x30, [sp, #128]
  43e844:	add	sp, sp, #0x90
  43e848:	ret
  43e84c:	sub	sp, sp, #0x60
  43e850:	stp	x29, x30, [sp, #80]
  43e854:	add	x29, sp, #0x50
  43e858:	stur	x0, [x29, #-16]
  43e85c:	stur	x1, [x29, #-24]
  43e860:	stur	x2, [x29, #-32]
  43e864:	str	x3, [sp, #40]
  43e868:	str	x4, [sp, #32]
  43e86c:	str	x5, [sp, #24]
  43e870:	ldur	x8, [x29, #-16]
  43e874:	ldr	x8, [x8, #216]
  43e878:	ldur	x9, [x29, #-24]
  43e87c:	mov	x10, #0x28                  	// #40
  43e880:	mul	x9, x10, x9
  43e884:	add	x8, x8, x9
  43e888:	str	x8, [sp, #16]
  43e88c:	ldr	x8, [sp, #32]
  43e890:	ldr	x9, [sp, #16]
  43e894:	ldr	x9, [x9, #16]
  43e898:	cmp	x8, x9
  43e89c:	b.ge	43e8ac <_obstack_memory_used@@Base+0x16f8c>  // b.tcont
  43e8a0:	mov	w8, #0xffffffff            	// #-1
  43e8a4:	stur	w8, [x29, #-4]
  43e8a8:	b	43e938 <_obstack_memory_used@@Base+0x17018>
  43e8ac:	ldr	x8, [sp, #16]
  43e8b0:	ldr	x8, [x8, #24]
  43e8b4:	ldr	x9, [sp, #32]
  43e8b8:	cmp	x8, x9
  43e8bc:	b.ge	43e8cc <_obstack_memory_used@@Base+0x16fac>  // b.tcont
  43e8c0:	mov	w8, #0x1                   	// #1
  43e8c4:	stur	w8, [x29, #-4]
  43e8c8:	b	43e938 <_obstack_memory_used@@Base+0x17018>
  43e8cc:	ldr	x8, [sp, #32]
  43e8d0:	ldr	x9, [sp, #16]
  43e8d4:	ldr	x9, [x9, #16]
  43e8d8:	cmp	x8, x9
  43e8dc:	cset	w10, eq  // eq = none
  43e8e0:	and	w10, w10, #0x1
  43e8e4:	str	w10, [sp, #12]
  43e8e8:	ldr	x8, [sp, #32]
  43e8ec:	ldr	x9, [sp, #16]
  43e8f0:	ldr	x9, [x9, #24]
  43e8f4:	cmp	x8, x9
  43e8f8:	cset	w10, eq  // eq = none
  43e8fc:	and	w10, w10, #0x1
  43e900:	ldr	w11, [sp, #12]
  43e904:	orr	w10, w11, w10, lsl #1
  43e908:	str	w10, [sp, #12]
  43e90c:	ldr	w10, [sp, #12]
  43e910:	cbnz	w10, 43e91c <_obstack_memory_used@@Base+0x16ffc>
  43e914:	stur	wzr, [x29, #-4]
  43e918:	b	43e938 <_obstack_memory_used@@Base+0x17018>
  43e91c:	ldur	x0, [x29, #-16]
  43e920:	ldr	w1, [sp, #12]
  43e924:	ldur	x2, [x29, #-32]
  43e928:	ldr	x3, [sp, #40]
  43e92c:	ldr	x4, [sp, #24]
  43e930:	bl	43e948 <_obstack_memory_used@@Base+0x17028>
  43e934:	stur	w0, [x29, #-4]
  43e938:	ldur	w0, [x29, #-4]
  43e93c:	ldp	x29, x30, [sp, #80]
  43e940:	add	sp, sp, #0x60
  43e944:	ret
  43e948:	sub	sp, sp, #0x80
  43e94c:	stp	x29, x30, [sp, #112]
  43e950:	add	x29, sp, #0x70
  43e954:	stur	x0, [x29, #-16]
  43e958:	stur	w1, [x29, #-20]
  43e95c:	stur	x2, [x29, #-32]
  43e960:	stur	x3, [x29, #-40]
  43e964:	stur	x4, [x29, #-48]
  43e968:	ldur	x8, [x29, #-16]
  43e96c:	ldr	x8, [x8, #152]
  43e970:	str	x8, [sp, #56]
  43e974:	ldr	x8, [sp, #56]
  43e978:	ldr	x8, [x8, #48]
  43e97c:	ldur	x9, [x29, #-40]
  43e980:	mov	x10, #0x18                  	// #24
  43e984:	mul	x9, x10, x9
  43e988:	add	x8, x8, x9
  43e98c:	str	x8, [sp, #48]
  43e990:	str	xzr, [sp, #40]
  43e994:	ldr	x8, [sp, #40]
  43e998:	ldr	x9, [sp, #48]
  43e99c:	ldr	x9, [x9, #8]
  43e9a0:	cmp	x8, x9
  43e9a4:	b.ge	43ebf8 <_obstack_memory_used@@Base+0x172d8>  // b.tcont
  43e9a8:	ldr	x8, [sp, #48]
  43e9ac:	mov	x9, #0x10                  	// #16
  43e9b0:	ldr	x8, [x8, #16]
  43e9b4:	ldr	x10, [sp, #40]
  43e9b8:	ldr	x8, [x8, x10, lsl #3]
  43e9bc:	str	x8, [sp, #32]
  43e9c0:	ldr	x8, [sp, #56]
  43e9c4:	ldr	x8, [x8]
  43e9c8:	ldr	x10, [sp, #32]
  43e9cc:	mul	x9, x9, x10
  43e9d0:	add	x8, x8, x9
  43e9d4:	ldr	w11, [x8, #8]
  43e9d8:	and	w11, w11, #0xff
  43e9dc:	cmp	w11, #0x4
  43e9e0:	str	w11, [sp, #8]
  43e9e4:	b.eq	43ea0c <_obstack_memory_used@@Base+0x170ec>  // b.none
  43e9e8:	b	43e9ec <_obstack_memory_used@@Base+0x170cc>
  43e9ec:	ldr	w8, [sp, #8]
  43e9f0:	cmp	w8, #0x8
  43e9f4:	b.eq	43eb6c <_obstack_memory_used@@Base+0x1724c>  // b.none
  43e9f8:	b	43e9fc <_obstack_memory_used@@Base+0x170dc>
  43e9fc:	ldr	w8, [sp, #8]
  43ea00:	cmp	w8, #0x9
  43ea04:	b.eq	43ebac <_obstack_memory_used@@Base+0x1728c>  // b.none
  43ea08:	b	43ebe8 <_obstack_memory_used@@Base+0x172c8>
  43ea0c:	ldur	x8, [x29, #-48]
  43ea10:	mov	x9, #0xffffffffffffffff    	// #-1
  43ea14:	cmp	x8, x9
  43ea18:	b.eq	43eb68 <_obstack_memory_used@@Base+0x17248>  // b.none
  43ea1c:	ldur	x8, [x29, #-16]
  43ea20:	ldr	x8, [x8, #216]
  43ea24:	ldur	x9, [x29, #-48]
  43ea28:	mov	x10, #0x28                  	// #40
  43ea2c:	mul	x9, x10, x9
  43ea30:	add	x8, x8, x9
  43ea34:	str	x8, [sp, #24]
  43ea38:	ldr	x8, [sp, #24]
  43ea3c:	ldr	x8, [x8]
  43ea40:	ldr	x9, [sp, #32]
  43ea44:	cmp	x8, x9
  43ea48:	b.eq	43ea50 <_obstack_memory_used@@Base+0x17130>  // b.none
  43ea4c:	b	43eb54 <_obstack_memory_used@@Base+0x17234>
  43ea50:	ldur	x8, [x29, #-32]
  43ea54:	cmp	x8, #0x40
  43ea58:	b.ge	43ea80 <_obstack_memory_used@@Base+0x17160>  // b.tcont
  43ea5c:	ldr	x8, [sp, #24]
  43ea60:	ldrh	w9, [x8, #34]
  43ea64:	mov	w8, w9
  43ea68:	ldur	x10, [x29, #-32]
  43ea6c:	mov	x11, #0x1                   	// #1
  43ea70:	lsl	x10, x11, x10
  43ea74:	and	x8, x8, x10
  43ea78:	cbnz	x8, 43ea80 <_obstack_memory_used@@Base+0x17160>
  43ea7c:	b	43eb54 <_obstack_memory_used@@Base+0x17234>
  43ea80:	ldr	x8, [sp, #56]
  43ea84:	ldr	x8, [x8, #40]
  43ea88:	ldr	x9, [sp, #32]
  43ea8c:	mov	x10, #0x18                  	// #24
  43ea90:	mul	x9, x10, x9
  43ea94:	add	x8, x8, x9
  43ea98:	ldr	x8, [x8, #16]
  43ea9c:	ldr	x8, [x8]
  43eaa0:	str	x8, [sp, #16]
  43eaa4:	ldr	x8, [sp, #16]
  43eaa8:	ldur	x9, [x29, #-40]
  43eaac:	cmp	x8, x9
  43eab0:	b.ne	43ead4 <_obstack_memory_used@@Base+0x171b4>  // b.any
  43eab4:	ldur	w8, [x29, #-20]
  43eab8:	and	w8, w8, #0x1
  43eabc:	cbz	w8, 43eacc <_obstack_memory_used@@Base+0x171ac>
  43eac0:	mov	w8, #0xffffffff            	// #-1
  43eac4:	stur	w8, [x29, #-4]
  43eac8:	b	43ec10 <_obstack_memory_used@@Base+0x172f0>
  43eacc:	stur	wzr, [x29, #-4]
  43ead0:	b	43ec10 <_obstack_memory_used@@Base+0x172f0>
  43ead4:	ldur	x0, [x29, #-16]
  43ead8:	ldur	w1, [x29, #-20]
  43eadc:	ldur	x2, [x29, #-32]
  43eae0:	ldr	x3, [sp, #16]
  43eae4:	ldur	x4, [x29, #-48]
  43eae8:	bl	43e948 <_obstack_memory_used@@Base+0x17028>
  43eaec:	str	w0, [sp, #12]
  43eaf0:	ldr	w8, [sp, #12]
  43eaf4:	mov	w9, #0xffffffff            	// #-1
  43eaf8:	cmp	w8, w9
  43eafc:	b.ne	43eb0c <_obstack_memory_used@@Base+0x171ec>  // b.any
  43eb00:	mov	w8, #0xffffffff            	// #-1
  43eb04:	stur	w8, [x29, #-4]
  43eb08:	b	43ec10 <_obstack_memory_used@@Base+0x172f0>
  43eb0c:	ldr	w8, [sp, #12]
  43eb10:	cbnz	w8, 43eb28 <_obstack_memory_used@@Base+0x17208>
  43eb14:	ldur	w8, [x29, #-20]
  43eb18:	and	w8, w8, #0x2
  43eb1c:	cbz	w8, 43eb28 <_obstack_memory_used@@Base+0x17208>
  43eb20:	stur	wzr, [x29, #-4]
  43eb24:	b	43ec10 <_obstack_memory_used@@Base+0x172f0>
  43eb28:	ldur	x8, [x29, #-32]
  43eb2c:	cmp	x8, #0x40
  43eb30:	b.ge	43eb54 <_obstack_memory_used@@Base+0x17234>  // b.tcont
  43eb34:	ldur	x8, [x29, #-32]
  43eb38:	mov	x9, #0x1                   	// #1
  43eb3c:	lsl	x8, x9, x8
  43eb40:	ldr	x9, [sp, #24]
  43eb44:	ldrh	w10, [x9, #34]
  43eb48:	mov	w11, w10
  43eb4c:	bic	x8, x11, x8
  43eb50:	strh	w8, [x9, #34]
  43eb54:	ldr	x8, [sp, #24]
  43eb58:	add	x9, x8, #0x28
  43eb5c:	str	x9, [sp, #24]
  43eb60:	ldrb	w10, [x8, #32]
  43eb64:	cbnz	w10, 43ea38 <_obstack_memory_used@@Base+0x17118>
  43eb68:	b	43ebe8 <_obstack_memory_used@@Base+0x172c8>
  43eb6c:	ldur	w8, [x29, #-20]
  43eb70:	and	w8, w8, #0x1
  43eb74:	cbz	w8, 43eba8 <_obstack_memory_used@@Base+0x17288>
  43eb78:	ldur	x8, [x29, #-32]
  43eb7c:	ldr	x9, [sp, #56]
  43eb80:	ldr	x9, [x9]
  43eb84:	ldr	x10, [sp, #32]
  43eb88:	mov	x11, #0x10                  	// #16
  43eb8c:	mul	x10, x11, x10
  43eb90:	ldr	x9, [x9, x10]
  43eb94:	cmp	x8, x9
  43eb98:	b.ne	43eba8 <_obstack_memory_used@@Base+0x17288>  // b.any
  43eb9c:	mov	w8, #0xffffffff            	// #-1
  43eba0:	stur	w8, [x29, #-4]
  43eba4:	b	43ec10 <_obstack_memory_used@@Base+0x172f0>
  43eba8:	b	43ebe8 <_obstack_memory_used@@Base+0x172c8>
  43ebac:	ldur	w8, [x29, #-20]
  43ebb0:	and	w8, w8, #0x2
  43ebb4:	cbz	w8, 43ebe4 <_obstack_memory_used@@Base+0x172c4>
  43ebb8:	ldur	x8, [x29, #-32]
  43ebbc:	ldr	x9, [sp, #56]
  43ebc0:	ldr	x9, [x9]
  43ebc4:	ldr	x10, [sp, #32]
  43ebc8:	mov	x11, #0x10                  	// #16
  43ebcc:	mul	x10, x11, x10
  43ebd0:	ldr	x9, [x9, x10]
  43ebd4:	cmp	x8, x9
  43ebd8:	b.ne	43ebe4 <_obstack_memory_used@@Base+0x172c4>  // b.any
  43ebdc:	stur	wzr, [x29, #-4]
  43ebe0:	b	43ec10 <_obstack_memory_used@@Base+0x172f0>
  43ebe4:	b	43ebe8 <_obstack_memory_used@@Base+0x172c8>
  43ebe8:	ldr	x8, [sp, #40]
  43ebec:	add	x8, x8, #0x1
  43ebf0:	str	x8, [sp, #40]
  43ebf4:	b	43e994 <_obstack_memory_used@@Base+0x17074>
  43ebf8:	ldur	w8, [x29, #-20]
  43ebfc:	mov	w9, wzr
  43ec00:	mov	w10, #0x1                   	// #1
  43ec04:	tst	w8, #0x2
  43ec08:	csel	w8, w10, w9, ne  // ne = any
  43ec0c:	stur	w8, [x29, #-4]
  43ec10:	ldur	w0, [x29, #-4]
  43ec14:	ldp	x29, x30, [sp, #112]
  43ec18:	add	sp, sp, #0x80
  43ec1c:	ret
  43ec20:	sub	sp, sp, #0x50
  43ec24:	stp	x29, x30, [sp, #64]
  43ec28:	add	x29, sp, #0x40
  43ec2c:	stur	x0, [x29, #-8]
  43ec30:	stur	x1, [x29, #-16]
  43ec34:	stur	x2, [x29, #-24]
  43ec38:	str	x3, [sp, #32]
  43ec3c:	str	x4, [sp, #24]
  43ec40:	ldur	x8, [x29, #-8]
  43ec44:	ldr	x8, [x8, #152]
  43ec48:	str	x8, [sp, #16]
  43ec4c:	ldr	x0, [sp, #16]
  43ec50:	ldur	x1, [x29, #-24]
  43ec54:	ldur	x2, [x29, #-8]
  43ec58:	ldr	x3, [sp, #32]
  43ec5c:	bl	43ad84 <_obstack_memory_used@@Base+0x13464>
  43ec60:	str	w0, [sp, #12]
  43ec64:	ldr	w9, [sp, #12]
  43ec68:	cmp	w9, #0x0
  43ec6c:	cset	w9, le
  43ec70:	tbnz	w9, #0, 43ecf8 <_obstack_memory_used@@Base+0x173d8>
  43ec74:	ldr	x8, [sp, #32]
  43ec78:	ldrsw	x9, [sp, #12]
  43ec7c:	add	x8, x8, x9
  43ec80:	ldr	x9, [sp, #24]
  43ec84:	cmp	x8, x9
  43ec88:	b.gt	43ecf8 <_obstack_memory_used@@Base+0x173d8>
  43ec8c:	ldur	x8, [x29, #-16]
  43ec90:	ldr	x8, [x8]
  43ec94:	ldr	x9, [sp, #32]
  43ec98:	ldrsw	x10, [sp, #12]
  43ec9c:	add	x9, x9, x10
  43eca0:	mov	x10, #0x8                   	// #8
  43eca4:	mul	x9, x10, x9
  43eca8:	add	x8, x8, x9
  43ecac:	ldr	x8, [x8]
  43ecb0:	cbz	x8, 43ecf4 <_obstack_memory_used@@Base+0x173d4>
  43ecb4:	ldur	x8, [x29, #-16]
  43ecb8:	ldr	x8, [x8]
  43ecbc:	ldr	x9, [sp, #32]
  43ecc0:	ldrsw	x10, [sp, #12]
  43ecc4:	add	x9, x9, x10
  43ecc8:	mov	x10, #0x8                   	// #8
  43eccc:	mul	x9, x10, x9
  43ecd0:	add	x8, x8, x9
  43ecd4:	ldr	x8, [x8]
  43ecd8:	add	x0, x8, #0x8
  43ecdc:	ldr	x8, [sp, #16]
  43ece0:	ldr	x8, [x8, #24]
  43ece4:	ldur	x9, [x29, #-24]
  43ece8:	ldr	x1, [x8, x9, lsl #3]
  43ecec:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43ecf0:	cbnz	x0, 43ecf8 <_obstack_memory_used@@Base+0x173d8>
  43ecf4:	str	wzr, [sp, #12]
  43ecf8:	ldr	w0, [sp, #12]
  43ecfc:	ldp	x29, x30, [sp, #64]
  43ed00:	add	sp, sp, #0x50
  43ed04:	ret
  43ed08:	sub	sp, sp, #0x30
  43ed0c:	stp	x29, x30, [sp, #32]
  43ed10:	add	x29, sp, #0x20
  43ed14:	stur	x0, [x29, #-8]
  43ed18:	ldur	x8, [x29, #-8]
  43ed1c:	cbz	x8, 43ed98 <_obstack_memory_used@@Base+0x17478>
  43ed20:	str	xzr, [sp, #16]
  43ed24:	ldr	x8, [sp, #16]
  43ed28:	ldur	x9, [x29, #-8]
  43ed2c:	ldr	x9, [x9]
  43ed30:	cmp	x8, x9
  43ed34:	b.ge	43ed8c <_obstack_memory_used@@Base+0x1746c>  // b.tcont
  43ed38:	ldur	x8, [x29, #-8]
  43ed3c:	ldr	x8, [x8, #16]
  43ed40:	ldr	x9, [sp, #16]
  43ed44:	mov	x10, #0x30                  	// #48
  43ed48:	mul	x9, x10, x9
  43ed4c:	add	x8, x8, x9
  43ed50:	ldr	x0, [x8, #40]
  43ed54:	str	x10, [sp, #8]
  43ed58:	bl	4026c0 <free@plt>
  43ed5c:	ldur	x8, [x29, #-8]
  43ed60:	ldr	x8, [x8, #16]
  43ed64:	ldr	x9, [sp, #16]
  43ed68:	ldr	x10, [sp, #8]
  43ed6c:	mul	x9, x10, x9
  43ed70:	add	x8, x8, x9
  43ed74:	ldr	x0, [x8, #16]
  43ed78:	bl	4026c0 <free@plt>
  43ed7c:	ldr	x8, [sp, #16]
  43ed80:	add	x8, x8, #0x1
  43ed84:	str	x8, [sp, #16]
  43ed88:	b	43ed24 <_obstack_memory_used@@Base+0x17404>
  43ed8c:	ldur	x8, [x29, #-8]
  43ed90:	ldr	x0, [x8, #16]
  43ed94:	bl	4026c0 <free@plt>
  43ed98:	mov	w8, wzr
  43ed9c:	mov	w0, w8
  43eda0:	ldp	x29, x30, [sp, #32]
  43eda4:	add	sp, sp, #0x30
  43eda8:	ret
  43edac:	sub	sp, sp, #0x60
  43edb0:	stp	x29, x30, [sp, #80]
  43edb4:	add	x29, sp, #0x50
  43edb8:	stur	x0, [x29, #-8]
  43edbc:	stur	x1, [x29, #-16]
  43edc0:	stur	x2, [x29, #-24]
  43edc4:	stur	x3, [x29, #-32]
  43edc8:	str	x4, [sp, #40]
  43edcc:	str	x5, [sp, #32]
  43edd0:	ldur	x8, [x29, #-8]
  43edd4:	ldr	x8, [x8]
  43edd8:	ldur	x9, [x29, #-32]
  43eddc:	mov	x10, #0x10                  	// #16
  43ede0:	mul	x9, x10, x9
  43ede4:	add	x8, x8, x9
  43ede8:	ldr	w11, [x8, #8]
  43edec:	and	w11, w11, #0xff
  43edf0:	str	w11, [sp, #28]
  43edf4:	ldr	w11, [sp, #28]
  43edf8:	cmp	w11, #0x8
  43edfc:	b.ne	43ee64 <_obstack_memory_used@@Base+0x17544>  // b.any
  43ee00:	ldur	x8, [x29, #-8]
  43ee04:	ldr	x8, [x8]
  43ee08:	ldur	x9, [x29, #-32]
  43ee0c:	mov	x10, #0x10                  	// #16
  43ee10:	mul	x9, x10, x9
  43ee14:	ldr	x8, [x8, x9]
  43ee18:	add	x8, x8, #0x1
  43ee1c:	str	x8, [sp, #16]
  43ee20:	ldr	x8, [sp, #16]
  43ee24:	ldr	x9, [sp, #32]
  43ee28:	cmp	x8, x9
  43ee2c:	b.ge	43ee60 <_obstack_memory_used@@Base+0x17540>  // b.tcont
  43ee30:	ldr	x8, [sp, #40]
  43ee34:	ldur	x9, [x29, #-16]
  43ee38:	ldr	x10, [sp, #16]
  43ee3c:	mov	x11, #0x10                  	// #16
  43ee40:	mul	x10, x11, x10
  43ee44:	str	x8, [x9, x10]
  43ee48:	ldur	x8, [x29, #-16]
  43ee4c:	ldr	x9, [sp, #16]
  43ee50:	mul	x9, x11, x9
  43ee54:	add	x8, x8, x9
  43ee58:	mov	x9, #0xffffffffffffffff    	// #-1
  43ee5c:	str	x9, [x8, #8]
  43ee60:	b	43ef78 <_obstack_memory_used@@Base+0x17658>
  43ee64:	ldr	w8, [sp, #28]
  43ee68:	cmp	w8, #0x9
  43ee6c:	b.ne	43ef78 <_obstack_memory_used@@Base+0x17658>  // b.any
  43ee70:	ldur	x8, [x29, #-8]
  43ee74:	ldr	x8, [x8]
  43ee78:	ldur	x9, [x29, #-32]
  43ee7c:	mov	x10, #0x10                  	// #16
  43ee80:	mul	x9, x10, x9
  43ee84:	ldr	x8, [x8, x9]
  43ee88:	add	x8, x8, #0x1
  43ee8c:	str	x8, [sp, #8]
  43ee90:	ldr	x8, [sp, #8]
  43ee94:	ldr	x9, [sp, #32]
  43ee98:	cmp	x8, x9
  43ee9c:	b.ge	43ef78 <_obstack_memory_used@@Base+0x17658>  // b.tcont
  43eea0:	ldur	x8, [x29, #-16]
  43eea4:	ldr	x9, [sp, #8]
  43eea8:	mov	x10, #0x10                  	// #16
  43eeac:	mul	x9, x10, x9
  43eeb0:	ldr	x8, [x8, x9]
  43eeb4:	ldr	x9, [sp, #40]
  43eeb8:	cmp	x8, x9
  43eebc:	b.ge	43eef8 <_obstack_memory_used@@Base+0x175d8>  // b.tcont
  43eec0:	ldr	x8, [sp, #40]
  43eec4:	ldur	x9, [x29, #-16]
  43eec8:	ldr	x10, [sp, #8]
  43eecc:	mov	x11, #0x10                  	// #16
  43eed0:	mul	x10, x11, x10
  43eed4:	add	x9, x9, x10
  43eed8:	str	x8, [x9, #8]
  43eedc:	ldur	x0, [x29, #-24]
  43eee0:	ldur	x1, [x29, #-16]
  43eee4:	ldr	x8, [sp, #32]
  43eee8:	mov	x9, #0x10                  	// #16
  43eeec:	mul	x2, x9, x8
  43eef0:	bl	402290 <memcpy@plt>
  43eef4:	b	43ef78 <_obstack_memory_used@@Base+0x17658>
  43eef8:	ldur	x8, [x29, #-8]
  43eefc:	ldr	x8, [x8]
  43ef00:	ldur	x9, [x29, #-32]
  43ef04:	mov	x10, #0x10                  	// #16
  43ef08:	mul	x9, x10, x9
  43ef0c:	add	x8, x8, x9
  43ef10:	ldr	w11, [x8, #8]
  43ef14:	lsr	w11, w11, #19
  43ef18:	and	w11, w11, #0x1
  43ef1c:	cbz	w11, 43ef5c <_obstack_memory_used@@Base+0x1763c>
  43ef20:	ldur	x8, [x29, #-24]
  43ef24:	ldr	x9, [sp, #8]
  43ef28:	mov	x10, #0x10                  	// #16
  43ef2c:	mul	x9, x10, x9
  43ef30:	ldr	x8, [x8, x9]
  43ef34:	mov	x9, #0xffffffffffffffff    	// #-1
  43ef38:	cmp	x8, x9
  43ef3c:	b.eq	43ef5c <_obstack_memory_used@@Base+0x1763c>  // b.none
  43ef40:	ldur	x0, [x29, #-16]
  43ef44:	ldur	x1, [x29, #-24]
  43ef48:	ldr	x8, [sp, #32]
  43ef4c:	mov	x9, #0x10                  	// #16
  43ef50:	mul	x2, x9, x8
  43ef54:	bl	402290 <memcpy@plt>
  43ef58:	b	43ef78 <_obstack_memory_used@@Base+0x17658>
  43ef5c:	ldr	x8, [sp, #40]
  43ef60:	ldur	x9, [x29, #-16]
  43ef64:	ldr	x10, [sp, #8]
  43ef68:	mov	x11, #0x10                  	// #16
  43ef6c:	mul	x10, x11, x10
  43ef70:	add	x9, x9, x10
  43ef74:	str	x8, [x9, #8]
  43ef78:	ldp	x29, x30, [sp, #80]
  43ef7c:	add	sp, sp, #0x60
  43ef80:	ret
  43ef84:	sub	sp, sp, #0x50
  43ef88:	stp	x29, x30, [sp, #64]
  43ef8c:	add	x29, sp, #0x40
  43ef90:	stur	x0, [x29, #-8]
  43ef94:	stur	x1, [x29, #-16]
  43ef98:	stur	x2, [x29, #-24]
  43ef9c:	str	x3, [sp, #32]
  43efa0:	str	x4, [sp, #24]
  43efa4:	ldur	x8, [x29, #-8]
  43efa8:	ldr	x9, [x8]
  43efac:	subs	x9, x9, #0x1
  43efb0:	str	x9, [x8]
  43efb4:	str	x9, [sp, #16]
  43efb8:	ldr	x8, [sp, #16]
  43efbc:	cmp	x8, #0x0
  43efc0:	cset	w10, lt  // lt = tstop
  43efc4:	tbnz	w10, #0, 43efcc <_obstack_memory_used@@Base+0x176ac>
  43efc8:	b	43efcc <_obstack_memory_used@@Base+0x176ac>
  43efcc:	ldur	x8, [x29, #-8]
  43efd0:	ldr	x8, [x8, #16]
  43efd4:	ldr	x9, [sp, #16]
  43efd8:	mov	x10, #0x30                  	// #48
  43efdc:	mul	x9, x10, x9
  43efe0:	ldr	x8, [x8, x9]
  43efe4:	ldur	x9, [x29, #-16]
  43efe8:	str	x8, [x9]
  43efec:	ldr	x0, [sp, #32]
  43eff0:	ldur	x8, [x29, #-8]
  43eff4:	ldr	x8, [x8, #16]
  43eff8:	ldr	x9, [sp, #16]
  43effc:	mul	x9, x10, x9
  43f000:	add	x8, x8, x9
  43f004:	ldr	x1, [x8, #16]
  43f008:	ldur	x8, [x29, #-24]
  43f00c:	mov	x9, #0x10                  	// #16
  43f010:	mul	x2, x9, x8
  43f014:	str	x10, [sp, #8]
  43f018:	bl	402290 <memcpy@plt>
  43f01c:	ldr	x8, [sp, #24]
  43f020:	ldr	x0, [x8, #16]
  43f024:	bl	4026c0 <free@plt>
  43f028:	ldur	x8, [x29, #-8]
  43f02c:	ldr	x8, [x8, #16]
  43f030:	ldr	x9, [sp, #16]
  43f034:	ldr	x10, [sp, #8]
  43f038:	mul	x9, x10, x9
  43f03c:	add	x8, x8, x9
  43f040:	ldr	x0, [x8, #16]
  43f044:	bl	4026c0 <free@plt>
  43f048:	ldr	x8, [sp, #24]
  43f04c:	ldur	x9, [x29, #-8]
  43f050:	ldr	x9, [x9, #16]
  43f054:	ldr	x10, [sp, #16]
  43f058:	ldr	x11, [sp, #8]
  43f05c:	mul	x10, x11, x10
  43f060:	add	x9, x9, x10
  43f064:	ldur	q0, [x9, #24]
  43f068:	str	q0, [x8]
  43f06c:	ldr	x9, [x9, #40]
  43f070:	str	x9, [x8, #16]
  43f074:	ldur	x8, [x29, #-8]
  43f078:	ldr	x8, [x8, #16]
  43f07c:	ldr	x9, [sp, #16]
  43f080:	mul	x9, x11, x9
  43f084:	add	x8, x8, x9
  43f088:	ldr	x0, [x8, #8]
  43f08c:	ldp	x29, x30, [sp, #64]
  43f090:	add	sp, sp, #0x50
  43f094:	ret
  43f098:	sub	sp, sp, #0xc0
  43f09c:	stp	x29, x30, [sp, #176]
  43f0a0:	add	x29, sp, #0xb0
  43f0a4:	stur	x0, [x29, #-16]
  43f0a8:	stur	x1, [x29, #-24]
  43f0ac:	stur	x2, [x29, #-32]
  43f0b0:	stur	x3, [x29, #-40]
  43f0b4:	stur	x4, [x29, #-48]
  43f0b8:	stur	x5, [x29, #-56]
  43f0bc:	stur	x6, [x29, #-64]
  43f0c0:	ldur	x8, [x29, #-16]
  43f0c4:	ldr	x8, [x8, #152]
  43f0c8:	stur	x8, [x29, #-72]
  43f0cc:	ldur	x8, [x29, #-72]
  43f0d0:	ldr	x8, [x8]
  43f0d4:	ldur	x9, [x29, #-48]
  43f0d8:	mov	x10, #0x10                  	// #16
  43f0dc:	mul	x9, x10, x9
  43f0e0:	add	x8, x8, x9
  43f0e4:	ldr	w11, [x8, #8]
  43f0e8:	and	w11, w11, #0xff
  43f0ec:	and	w11, w11, #0x8
  43f0f0:	cbz	w11, 43f24c <_obstack_memory_used@@Base+0x1792c>
  43f0f4:	ldur	x8, [x29, #-16]
  43f0f8:	ldr	x8, [x8, #184]
  43f0fc:	ldur	x9, [x29, #-40]
  43f100:	ldr	x9, [x9]
  43f104:	mov	x10, #0x8                   	// #8
  43f108:	mul	x9, x10, x9
  43f10c:	add	x8, x8, x9
  43f110:	ldr	x8, [x8]
  43f114:	add	x8, x8, #0x8
  43f118:	str	x8, [sp, #80]
  43f11c:	ldur	x8, [x29, #-72]
  43f120:	ldr	x8, [x8, #40]
  43f124:	ldur	x9, [x29, #-48]
  43f128:	mov	x10, #0x18                  	// #24
  43f12c:	mul	x9, x10, x9
  43f130:	add	x8, x8, x9
  43f134:	str	x8, [sp, #72]
  43f138:	ldur	x0, [x29, #-56]
  43f13c:	ldur	x1, [x29, #-48]
  43f140:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43f144:	mov	w11, #0x1                   	// #1
  43f148:	and	w11, w0, w11
  43f14c:	sturb	w11, [x29, #-81]
  43f150:	ldurb	w11, [x29, #-81]
  43f154:	eor	w11, w11, #0x1
  43f158:	and	w11, w11, #0x1
  43f15c:	mov	w1, w11
  43f160:	sxtw	x8, w1
  43f164:	cbz	x8, 43f174 <_obstack_memory_used@@Base+0x17854>
  43f168:	mov	x8, #0xfffffffffffffffe    	// #-2
  43f16c:	stur	x8, [x29, #-8]
  43f170:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f174:	mov	x8, #0xffffffffffffffff    	// #-1
  43f178:	str	x8, [sp, #64]
  43f17c:	stur	xzr, [x29, #-80]
  43f180:	ldur	x8, [x29, #-80]
  43f184:	ldr	x9, [sp, #72]
  43f188:	ldr	x9, [x9, #8]
  43f18c:	cmp	x8, x9
  43f190:	b.ge	43f240 <_obstack_memory_used@@Base+0x17920>  // b.tcont
  43f194:	ldr	x8, [sp, #72]
  43f198:	ldr	x8, [x8, #16]
  43f19c:	ldur	x9, [x29, #-80]
  43f1a0:	ldr	x8, [x8, x9, lsl #3]
  43f1a4:	str	x8, [sp, #56]
  43f1a8:	ldr	x0, [sp, #80]
  43f1ac:	ldr	x1, [sp, #56]
  43f1b0:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43f1b4:	cbnz	x0, 43f1bc <_obstack_memory_used@@Base+0x1789c>
  43f1b8:	b	43f230 <_obstack_memory_used@@Base+0x17910>
  43f1bc:	ldr	x8, [sp, #64]
  43f1c0:	mov	x9, #0xffffffffffffffff    	// #-1
  43f1c4:	cmp	x8, x9
  43f1c8:	b.ne	43f1d8 <_obstack_memory_used@@Base+0x178b8>  // b.any
  43f1cc:	ldr	x8, [sp, #56]
  43f1d0:	str	x8, [sp, #64]
  43f1d4:	b	43f230 <_obstack_memory_used@@Base+0x17910>
  43f1d8:	ldur	x0, [x29, #-56]
  43f1dc:	ldr	x1, [sp, #64]
  43f1e0:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43f1e4:	cbz	x0, 43f1f4 <_obstack_memory_used@@Base+0x178d4>
  43f1e8:	ldr	x8, [sp, #56]
  43f1ec:	stur	x8, [x29, #-8]
  43f1f0:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f1f4:	ldur	x8, [x29, #-64]
  43f1f8:	cbz	x8, 43f22c <_obstack_memory_used@@Base+0x1790c>
  43f1fc:	ldur	x0, [x29, #-64]
  43f200:	ldur	x8, [x29, #-40]
  43f204:	ldr	x1, [x8]
  43f208:	ldr	x2, [sp, #56]
  43f20c:	ldur	x3, [x29, #-24]
  43f210:	ldur	x4, [x29, #-32]
  43f214:	ldur	x5, [x29, #-56]
  43f218:	bl	43f5e4 <_obstack_memory_used@@Base+0x17cc4>
  43f21c:	cbz	w0, 43f22c <_obstack_memory_used@@Base+0x1790c>
  43f220:	mov	x8, #0xfffffffffffffffe    	// #-2
  43f224:	stur	x8, [x29, #-8]
  43f228:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f22c:	b	43f240 <_obstack_memory_used@@Base+0x17920>
  43f230:	ldur	x8, [x29, #-80]
  43f234:	add	x8, x8, #0x1
  43f238:	stur	x8, [x29, #-80]
  43f23c:	b	43f180 <_obstack_memory_used@@Base+0x17860>
  43f240:	ldr	x8, [sp, #64]
  43f244:	stur	x8, [x29, #-8]
  43f248:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f24c:	str	xzr, [sp, #48]
  43f250:	ldur	x8, [x29, #-72]
  43f254:	ldr	x8, [x8]
  43f258:	ldur	x9, [x29, #-48]
  43f25c:	mov	x10, #0x10                  	// #16
  43f260:	mul	x9, x10, x9
  43f264:	add	x8, x8, x9
  43f268:	ldr	w11, [x8, #8]
  43f26c:	and	w11, w11, #0xff
  43f270:	str	w11, [sp, #44]
  43f274:	ldur	x8, [x29, #-72]
  43f278:	ldr	x8, [x8]
  43f27c:	ldur	x9, [x29, #-48]
  43f280:	mul	x9, x10, x9
  43f284:	add	x8, x8, x9
  43f288:	ldr	w11, [x8, #8]
  43f28c:	lsr	w11, w11, #20
  43f290:	and	w11, w11, #0x1
  43f294:	cbz	w11, 43f2c0 <_obstack_memory_used@@Base+0x179a0>
  43f298:	ldur	x0, [x29, #-72]
  43f29c:	ldur	x1, [x29, #-48]
  43f2a0:	ldur	x2, [x29, #-16]
  43f2a4:	ldur	x8, [x29, #-40]
  43f2a8:	ldr	x3, [x8]
  43f2ac:	bl	43ad84 <_obstack_memory_used@@Base+0x13464>
  43f2b0:	mov	w1, w0
  43f2b4:	sxtw	x8, w1
  43f2b8:	str	x8, [sp, #48]
  43f2bc:	b	43f4b0 <_obstack_memory_used@@Base+0x17b90>
  43f2c0:	ldr	w8, [sp, #44]
  43f2c4:	cmp	w8, #0x4
  43f2c8:	b.ne	43f4b0 <_obstack_memory_used@@Base+0x17b90>  // b.any
  43f2cc:	ldur	x8, [x29, #-72]
  43f2d0:	ldr	x8, [x8]
  43f2d4:	ldur	x9, [x29, #-48]
  43f2d8:	mov	x10, #0x10                  	// #16
  43f2dc:	mul	x9, x10, x9
  43f2e0:	ldr	x8, [x8, x9]
  43f2e4:	add	x8, x8, #0x1
  43f2e8:	str	x8, [sp, #32]
  43f2ec:	ldr	x8, [sp, #32]
  43f2f0:	ldur	x9, [x29, #-24]
  43f2f4:	cmp	x8, x9
  43f2f8:	b.ge	43f32c <_obstack_memory_used@@Base+0x17a0c>  // b.tcont
  43f2fc:	ldur	x8, [x29, #-32]
  43f300:	ldr	x9, [sp, #32]
  43f304:	mov	x10, #0x10                  	// #16
  43f308:	mul	x9, x10, x9
  43f30c:	add	x8, x8, x9
  43f310:	ldr	x8, [x8, #8]
  43f314:	ldur	x9, [x29, #-32]
  43f318:	ldr	x11, [sp, #32]
  43f31c:	mul	x10, x10, x11
  43f320:	ldr	x9, [x9, x10]
  43f324:	subs	x8, x8, x9
  43f328:	str	x8, [sp, #48]
  43f32c:	ldur	x8, [x29, #-64]
  43f330:	cbz	x8, 43f40c <_obstack_memory_used@@Base+0x17aec>
  43f334:	ldr	x8, [sp, #32]
  43f338:	ldur	x9, [x29, #-24]
  43f33c:	cmp	x8, x9
  43f340:	b.ge	43f388 <_obstack_memory_used@@Base+0x17a68>  // b.tcont
  43f344:	ldur	x8, [x29, #-32]
  43f348:	ldr	x9, [sp, #32]
  43f34c:	mov	x10, #0x10                  	// #16
  43f350:	mul	x9, x10, x9
  43f354:	ldr	x8, [x8, x9]
  43f358:	mov	x9, #0xffffffffffffffff    	// #-1
  43f35c:	cmp	x8, x9
  43f360:	b.eq	43f388 <_obstack_memory_used@@Base+0x17a68>  // b.none
  43f364:	ldur	x8, [x29, #-32]
  43f368:	ldr	x9, [sp, #32]
  43f36c:	mov	x10, #0x10                  	// #16
  43f370:	mul	x9, x10, x9
  43f374:	add	x8, x8, x9
  43f378:	ldr	x8, [x8, #8]
  43f37c:	mov	x9, #0xffffffffffffffff    	// #-1
  43f380:	cmp	x8, x9
  43f384:	b.ne	43f394 <_obstack_memory_used@@Base+0x17a74>  // b.any
  43f388:	mov	x8, #0xffffffffffffffff    	// #-1
  43f38c:	stur	x8, [x29, #-8]
  43f390:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f394:	ldr	x8, [sp, #48]
  43f398:	cbz	x8, 43f40c <_obstack_memory_used@@Base+0x17aec>
  43f39c:	ldur	x8, [x29, #-16]
  43f3a0:	ldr	x8, [x8, #8]
  43f3a4:	str	x8, [sp, #24]
  43f3a8:	ldur	x8, [x29, #-16]
  43f3ac:	ldr	x8, [x8, #48]
  43f3b0:	ldur	x9, [x29, #-40]
  43f3b4:	ldr	x9, [x9]
  43f3b8:	subs	x8, x8, x9
  43f3bc:	ldr	x9, [sp, #48]
  43f3c0:	cmp	x8, x9
  43f3c4:	b.lt	43f400 <_obstack_memory_used@@Base+0x17ae0>  // b.tstop
  43f3c8:	ldr	x8, [sp, #24]
  43f3cc:	ldur	x9, [x29, #-32]
  43f3d0:	ldr	x10, [sp, #32]
  43f3d4:	mov	x11, #0x10                  	// #16
  43f3d8:	mul	x10, x11, x10
  43f3dc:	ldr	x9, [x9, x10]
  43f3e0:	add	x0, x8, x9
  43f3e4:	ldr	x8, [sp, #24]
  43f3e8:	ldur	x9, [x29, #-40]
  43f3ec:	ldr	x9, [x9]
  43f3f0:	add	x1, x8, x9
  43f3f4:	ldr	x2, [sp, #48]
  43f3f8:	bl	402670 <memcmp@plt>
  43f3fc:	cbz	w0, 43f40c <_obstack_memory_used@@Base+0x17aec>
  43f400:	mov	x8, #0xffffffffffffffff    	// #-1
  43f404:	stur	x8, [x29, #-8]
  43f408:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f40c:	ldr	x8, [sp, #48]
  43f410:	cbnz	x8, 43f4b0 <_obstack_memory_used@@Base+0x17b90>
  43f414:	ldur	x0, [x29, #-56]
  43f418:	ldur	x1, [x29, #-48]
  43f41c:	bl	434138 <_obstack_memory_used@@Base+0xc818>
  43f420:	mov	w8, #0x1                   	// #1
  43f424:	and	w8, w0, w8
  43f428:	sturb	w8, [x29, #-81]
  43f42c:	ldurb	w8, [x29, #-81]
  43f430:	eor	w8, w8, #0x1
  43f434:	and	w8, w8, #0x1
  43f438:	mov	w1, w8
  43f43c:	sxtw	x9, w1
  43f440:	cbz	x9, 43f450 <_obstack_memory_used@@Base+0x17b30>
  43f444:	mov	x8, #0xfffffffffffffffe    	// #-2
  43f448:	stur	x8, [x29, #-8]
  43f44c:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f450:	ldur	x8, [x29, #-72]
  43f454:	ldr	x8, [x8, #40]
  43f458:	ldur	x9, [x29, #-48]
  43f45c:	mov	x10, #0x18                  	// #24
  43f460:	mul	x9, x10, x9
  43f464:	add	x8, x8, x9
  43f468:	ldr	x8, [x8, #16]
  43f46c:	ldr	x8, [x8]
  43f470:	str	x8, [sp, #16]
  43f474:	ldur	x8, [x29, #-16]
  43f478:	ldr	x8, [x8, #184]
  43f47c:	ldur	x9, [x29, #-40]
  43f480:	ldr	x9, [x9]
  43f484:	mov	x10, #0x8                   	// #8
  43f488:	mul	x9, x10, x9
  43f48c:	add	x8, x8, x9
  43f490:	ldr	x8, [x8]
  43f494:	add	x0, x8, #0x8
  43f498:	ldr	x1, [sp, #16]
  43f49c:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43f4a0:	cbz	x0, 43f4b0 <_obstack_memory_used@@Base+0x17b90>
  43f4a4:	ldr	x8, [sp, #16]
  43f4a8:	stur	x8, [x29, #-8]
  43f4ac:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f4b0:	ldr	x8, [sp, #48]
  43f4b4:	cbnz	x8, 43f4e8 <_obstack_memory_used@@Base+0x17bc8>
  43f4b8:	ldur	x0, [x29, #-16]
  43f4bc:	ldur	x8, [x29, #-72]
  43f4c0:	ldr	x8, [x8]
  43f4c4:	ldur	x9, [x29, #-48]
  43f4c8:	mov	x10, #0x10                  	// #16
  43f4cc:	mul	x9, x10, x9
  43f4d0:	add	x1, x8, x9
  43f4d4:	ldur	x8, [x29, #-40]
  43f4d8:	ldr	x2, [x8]
  43f4dc:	bl	43b2f0 <_obstack_memory_used@@Base+0x139d0>
  43f4e0:	tbnz	w0, #0, 43f4e8 <_obstack_memory_used@@Base+0x17bc8>
  43f4e4:	b	43f5cc <_obstack_memory_used@@Base+0x17cac>
  43f4e8:	ldur	x8, [x29, #-72]
  43f4ec:	ldr	x8, [x8, #24]
  43f4f0:	ldur	x9, [x29, #-48]
  43f4f4:	ldr	x8, [x8, x9, lsl #3]
  43f4f8:	str	x8, [sp, #8]
  43f4fc:	ldr	x8, [sp, #48]
  43f500:	cbnz	x8, 43f518 <_obstack_memory_used@@Base+0x17bf8>
  43f504:	ldur	x8, [x29, #-40]
  43f508:	ldr	x8, [x8]
  43f50c:	add	x8, x8, #0x1
  43f510:	str	x8, [sp]
  43f514:	b	43f52c <_obstack_memory_used@@Base+0x17c0c>
  43f518:	ldur	x8, [x29, #-40]
  43f51c:	ldr	x8, [x8]
  43f520:	ldr	x9, [sp, #48]
  43f524:	add	x8, x8, x9
  43f528:	str	x8, [sp]
  43f52c:	ldr	x8, [sp]
  43f530:	ldur	x9, [x29, #-40]
  43f534:	str	x8, [x9]
  43f538:	ldur	x8, [x29, #-64]
  43f53c:	cbz	x8, 43f5b8 <_obstack_memory_used@@Base+0x17c98>
  43f540:	ldur	x8, [x29, #-40]
  43f544:	ldr	x8, [x8]
  43f548:	ldur	x9, [x29, #-16]
  43f54c:	ldr	x9, [x9, #168]
  43f550:	cmp	x8, x9
  43f554:	b.gt	43f5ac <_obstack_memory_used@@Base+0x17c8c>
  43f558:	ldur	x8, [x29, #-16]
  43f55c:	ldr	x8, [x8, #184]
  43f560:	ldur	x9, [x29, #-40]
  43f564:	ldr	x9, [x9]
  43f568:	mov	x10, #0x8                   	// #8
  43f56c:	mul	x9, x10, x9
  43f570:	add	x8, x8, x9
  43f574:	ldr	x8, [x8]
  43f578:	cbz	x8, 43f5ac <_obstack_memory_used@@Base+0x17c8c>
  43f57c:	ldur	x8, [x29, #-16]
  43f580:	ldr	x8, [x8, #184]
  43f584:	ldur	x9, [x29, #-40]
  43f588:	ldr	x9, [x9]
  43f58c:	mov	x10, #0x8                   	// #8
  43f590:	mul	x9, x10, x9
  43f594:	add	x8, x8, x9
  43f598:	ldr	x8, [x8]
  43f59c:	add	x0, x8, #0x8
  43f5a0:	ldr	x1, [sp, #8]
  43f5a4:	bl	434760 <_obstack_memory_used@@Base+0xce40>
  43f5a8:	cbnz	x0, 43f5b8 <_obstack_memory_used@@Base+0x17c98>
  43f5ac:	mov	x8, #0xffffffffffffffff    	// #-1
  43f5b0:	stur	x8, [x29, #-8]
  43f5b4:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f5b8:	ldur	x8, [x29, #-56]
  43f5bc:	str	xzr, [x8, #8]
  43f5c0:	ldr	x8, [sp, #8]
  43f5c4:	stur	x8, [x29, #-8]
  43f5c8:	b	43f5d4 <_obstack_memory_used@@Base+0x17cb4>
  43f5cc:	mov	x8, #0xffffffffffffffff    	// #-1
  43f5d0:	stur	x8, [x29, #-8]
  43f5d4:	ldur	x0, [x29, #-8]
  43f5d8:	ldp	x29, x30, [sp, #176]
  43f5dc:	add	sp, sp, #0xc0
  43f5e0:	ret
  43f5e4:	sub	sp, sp, #0x70
  43f5e8:	stp	x29, x30, [sp, #96]
  43f5ec:	add	x29, sp, #0x60
  43f5f0:	stur	x0, [x29, #-16]
  43f5f4:	stur	x1, [x29, #-24]
  43f5f8:	stur	x2, [x29, #-32]
  43f5fc:	stur	x3, [x29, #-40]
  43f600:	str	x4, [sp, #48]
  43f604:	str	x5, [sp, #40]
  43f608:	ldur	x8, [x29, #-16]
  43f60c:	ldr	x9, [x8]
  43f610:	add	x10, x9, #0x1
  43f614:	str	x10, [x8]
  43f618:	str	x9, [sp, #24]
  43f61c:	ldur	x8, [x29, #-16]
  43f620:	ldr	x8, [x8]
  43f624:	ldur	x9, [x29, #-16]
  43f628:	ldr	x9, [x9, #8]
  43f62c:	cmp	x8, x9
  43f630:	b.ne	43f690 <_obstack_memory_used@@Base+0x17d70>  // b.any
  43f634:	ldur	x8, [x29, #-16]
  43f638:	ldr	x0, [x8, #16]
  43f63c:	ldur	x8, [x29, #-16]
  43f640:	ldr	x8, [x8, #8]
  43f644:	mov	x9, #0x2                   	// #2
  43f648:	mul	x8, x8, x9
  43f64c:	mov	x9, #0x30                  	// #48
  43f650:	mul	x1, x8, x9
  43f654:	bl	402570 <realloc@plt>
  43f658:	str	x0, [sp, #16]
  43f65c:	ldr	x8, [sp, #16]
  43f660:	cbnz	x8, 43f670 <_obstack_memory_used@@Base+0x17d50>
  43f664:	mov	w8, #0xc                   	// #12
  43f668:	stur	w8, [x29, #-4]
  43f66c:	b	43f784 <_obstack_memory_used@@Base+0x17e64>
  43f670:	ldur	x8, [x29, #-16]
  43f674:	ldr	x9, [x8, #8]
  43f678:	mov	x10, #0x2                   	// #2
  43f67c:	mul	x9, x9, x10
  43f680:	str	x9, [x8, #8]
  43f684:	ldr	x8, [sp, #16]
  43f688:	ldur	x9, [x29, #-16]
  43f68c:	str	x8, [x9, #16]
  43f690:	ldur	x8, [x29, #-24]
  43f694:	ldur	x9, [x29, #-16]
  43f698:	ldr	x9, [x9, #16]
  43f69c:	ldr	x10, [sp, #24]
  43f6a0:	mov	x11, #0x30                  	// #48
  43f6a4:	mul	x10, x11, x10
  43f6a8:	str	x8, [x9, x10]
  43f6ac:	ldur	x8, [x29, #-32]
  43f6b0:	ldur	x9, [x29, #-16]
  43f6b4:	ldr	x9, [x9, #16]
  43f6b8:	ldr	x10, [sp, #24]
  43f6bc:	mul	x10, x11, x10
  43f6c0:	add	x9, x9, x10
  43f6c4:	str	x8, [x9, #8]
  43f6c8:	ldur	x8, [x29, #-40]
  43f6cc:	mov	x9, #0x10                  	// #16
  43f6d0:	mul	x0, x8, x9
  43f6d4:	str	x11, [sp, #8]
  43f6d8:	bl	402450 <malloc@plt>
  43f6dc:	ldur	x8, [x29, #-16]
  43f6e0:	ldr	x8, [x8, #16]
  43f6e4:	ldr	x9, [sp, #24]
  43f6e8:	ldr	x10, [sp, #8]
  43f6ec:	mul	x9, x10, x9
  43f6f0:	add	x8, x8, x9
  43f6f4:	str	x0, [x8, #16]
  43f6f8:	ldur	x8, [x29, #-16]
  43f6fc:	ldr	x8, [x8, #16]
  43f700:	ldr	x9, [sp, #24]
  43f704:	mul	x9, x10, x9
  43f708:	add	x8, x8, x9
  43f70c:	ldr	x8, [x8, #16]
  43f710:	cbnz	x8, 43f720 <_obstack_memory_used@@Base+0x17e00>
  43f714:	mov	w8, #0xc                   	// #12
  43f718:	stur	w8, [x29, #-4]
  43f71c:	b	43f784 <_obstack_memory_used@@Base+0x17e64>
  43f720:	ldur	x8, [x29, #-16]
  43f724:	ldr	x8, [x8, #16]
  43f728:	ldr	x9, [sp, #24]
  43f72c:	mov	x10, #0x30                  	// #48
  43f730:	mul	x9, x10, x9
  43f734:	add	x8, x8, x9
  43f738:	ldr	x0, [x8, #16]
  43f73c:	ldr	x1, [sp, #48]
  43f740:	ldur	x8, [x29, #-40]
  43f744:	mov	x9, #0x10                  	// #16
  43f748:	mul	x2, x9, x8
  43f74c:	str	x10, [sp]
  43f750:	bl	402290 <memcpy@plt>
  43f754:	ldur	x8, [x29, #-16]
  43f758:	ldr	x8, [x8, #16]
  43f75c:	ldr	x9, [sp, #24]
  43f760:	ldr	x10, [sp]
  43f764:	mul	x9, x10, x9
  43f768:	add	x8, x8, x9
  43f76c:	add	x0, x8, #0x18
  43f770:	ldr	x1, [sp, #40]
  43f774:	bl	434674 <_obstack_memory_used@@Base+0xcd54>
  43f778:	str	w0, [sp, #36]
  43f77c:	ldr	w11, [sp, #36]
  43f780:	stur	w11, [x29, #-4]
  43f784:	ldur	w0, [x29, #-4]
  43f788:	ldp	x29, x30, [sp, #96]
  43f78c:	add	sp, sp, #0x70
  43f790:	ret
  43f794:	sub	sp, sp, #0x10
  43f798:	mov	w8, wzr
  43f79c:	str	w0, [sp, #12]
  43f7a0:	str	w1, [sp, #8]
  43f7a4:	mov	w0, w8
  43f7a8:	add	sp, sp, #0x10
  43f7ac:	ret
  43f7b0:	sub	sp, sp, #0x20
  43f7b4:	stp	x29, x30, [sp, #16]
  43f7b8:	add	x29, sp, #0x10
  43f7bc:	stur	w0, [x29, #-4]
  43f7c0:	str	w1, [sp, #8]
  43f7c4:	ldur	w0, [x29, #-4]
  43f7c8:	ldr	w1, [sp, #8]
  43f7cc:	bl	43f794 <_obstack_memory_used@@Base+0x17e74>
  43f7d0:	ldp	x29, x30, [sp, #16]
  43f7d4:	add	sp, sp, #0x20
  43f7d8:	ret
  43f7dc:	sub	sp, sp, #0x10
  43f7e0:	mov	w8, #0x40                  	// #64
  43f7e4:	str	x0, [sp, #8]
  43f7e8:	str	w1, [sp, #4]
  43f7ec:	ldr	x9, [sp, #8]
  43f7f0:	ldr	w10, [sp, #4]
  43f7f4:	mov	w11, w10
  43f7f8:	lsl	x9, x9, x11
  43f7fc:	ldr	x11, [sp, #8]
  43f800:	ldr	w10, [sp, #4]
  43f804:	subs	w8, w8, w10
  43f808:	mov	w12, w8
  43f80c:	lsr	x11, x11, x12
  43f810:	orr	x0, x9, x11
  43f814:	add	sp, sp, #0x10
  43f818:	ret
  43f81c:	sub	sp, sp, #0x10
  43f820:	mov	w8, #0x40                  	// #64
  43f824:	str	x0, [sp, #8]
  43f828:	str	w1, [sp, #4]
  43f82c:	ldr	x9, [sp, #8]
  43f830:	ldr	w10, [sp, #4]
  43f834:	mov	w11, w10
  43f838:	lsr	x9, x9, x11
  43f83c:	ldr	x11, [sp, #8]
  43f840:	ldr	w10, [sp, #4]
  43f844:	subs	w8, w8, w10
  43f848:	mov	w12, w8
  43f84c:	lsl	x11, x11, x12
  43f850:	orr	x0, x9, x11
  43f854:	add	sp, sp, #0x10
  43f858:	ret
  43f85c:	sub	sp, sp, #0x10
  43f860:	mov	w8, #0x20                  	// #32
  43f864:	str	w0, [sp, #12]
  43f868:	str	w1, [sp, #8]
  43f86c:	ldr	w9, [sp, #12]
  43f870:	ldr	w10, [sp, #8]
  43f874:	lsl	w9, w9, w10
  43f878:	ldr	w10, [sp, #12]
  43f87c:	ldr	w11, [sp, #8]
  43f880:	subs	w8, w8, w11
  43f884:	lsr	w8, w10, w8
  43f888:	orr	w0, w9, w8
  43f88c:	add	sp, sp, #0x10
  43f890:	ret
  43f894:	sub	sp, sp, #0x10
  43f898:	mov	w8, #0x20                  	// #32
  43f89c:	str	w0, [sp, #12]
  43f8a0:	str	w1, [sp, #8]
  43f8a4:	ldr	w9, [sp, #12]
  43f8a8:	ldr	w10, [sp, #8]
  43f8ac:	lsr	w9, w9, w10
  43f8b0:	ldr	w10, [sp, #12]
  43f8b4:	ldr	w11, [sp, #8]
  43f8b8:	subs	w8, w8, w11
  43f8bc:	lsl	w8, w10, w8
  43f8c0:	orr	w0, w9, w8
  43f8c4:	add	sp, sp, #0x10
  43f8c8:	ret
  43f8cc:	sub	sp, sp, #0x10
  43f8d0:	mov	x8, #0x40                  	// #64
  43f8d4:	str	x0, [sp, #8]
  43f8d8:	str	w1, [sp, #4]
  43f8dc:	ldr	x9, [sp, #8]
  43f8e0:	ldr	w10, [sp, #4]
  43f8e4:	mov	w11, w10
  43f8e8:	lsl	x9, x9, x11
  43f8ec:	ldr	x11, [sp, #8]
  43f8f0:	ldrsw	x12, [sp, #4]
  43f8f4:	subs	x8, x8, x12
  43f8f8:	lsr	x8, x11, x8
  43f8fc:	orr	x0, x9, x8
  43f900:	add	sp, sp, #0x10
  43f904:	ret
  43f908:	sub	sp, sp, #0x10
  43f90c:	mov	x8, #0x40                  	// #64
  43f910:	str	x0, [sp, #8]
  43f914:	str	w1, [sp, #4]
  43f918:	ldr	x9, [sp, #8]
  43f91c:	ldr	w10, [sp, #4]
  43f920:	mov	w11, w10
  43f924:	lsr	x9, x9, x11
  43f928:	ldr	x11, [sp, #8]
  43f92c:	ldrsw	x12, [sp, #4]
  43f930:	subs	x8, x8, x12
  43f934:	lsl	x8, x11, x8
  43f938:	orr	x0, x9, x8
  43f93c:	add	sp, sp, #0x10
  43f940:	ret
  43f944:	sub	sp, sp, #0x10
  43f948:	mov	w8, #0x10                  	// #16
  43f94c:	strh	w0, [sp, #14]
  43f950:	str	w1, [sp, #8]
  43f954:	ldrh	w9, [sp, #14]
  43f958:	ldr	w10, [sp, #8]
  43f95c:	lsl	w9, w9, w10
  43f960:	ldrh	w10, [sp, #14]
  43f964:	ldr	w11, [sp, #8]
  43f968:	subs	w8, w8, w11
  43f96c:	lsr	w8, w10, w8
  43f970:	orr	w8, w9, w8
  43f974:	and	w8, w8, #0xffff
  43f978:	mov	w0, w8
  43f97c:	add	sp, sp, #0x10
  43f980:	ret
  43f984:	sub	sp, sp, #0x10
  43f988:	mov	w8, #0x10                  	// #16
  43f98c:	strh	w0, [sp, #14]
  43f990:	str	w1, [sp, #8]
  43f994:	ldrh	w9, [sp, #14]
  43f998:	ldr	w10, [sp, #8]
  43f99c:	lsr	w9, w9, w10
  43f9a0:	ldrh	w10, [sp, #14]
  43f9a4:	ldr	w11, [sp, #8]
  43f9a8:	subs	w8, w8, w11
  43f9ac:	lsl	w8, w10, w8
  43f9b0:	orr	w8, w9, w8
  43f9b4:	and	w8, w8, #0xffff
  43f9b8:	mov	w0, w8
  43f9bc:	add	sp, sp, #0x10
  43f9c0:	ret
  43f9c4:	sub	sp, sp, #0x10
  43f9c8:	mov	w8, #0x8                   	// #8
  43f9cc:	strb	w0, [sp, #15]
  43f9d0:	str	w1, [sp, #8]
  43f9d4:	ldrb	w9, [sp, #15]
  43f9d8:	ldr	w10, [sp, #8]
  43f9dc:	lsl	w9, w9, w10
  43f9e0:	ldrb	w10, [sp, #15]
  43f9e4:	ldr	w11, [sp, #8]
  43f9e8:	subs	w8, w8, w11
  43f9ec:	lsr	w8, w10, w8
  43f9f0:	orr	w8, w9, w8
  43f9f4:	and	w8, w8, #0xff
  43f9f8:	mov	w0, w8
  43f9fc:	add	sp, sp, #0x10
  43fa00:	ret
  43fa04:	sub	sp, sp, #0x10
  43fa08:	mov	w8, #0x8                   	// #8
  43fa0c:	strb	w0, [sp, #15]
  43fa10:	str	w1, [sp, #8]
  43fa14:	ldrb	w9, [sp, #15]
  43fa18:	ldr	w10, [sp, #8]
  43fa1c:	lsr	w9, w9, w10
  43fa20:	ldrb	w10, [sp, #15]
  43fa24:	ldr	w11, [sp, #8]
  43fa28:	subs	w8, w8, w11
  43fa2c:	lsl	w8, w10, w8
  43fa30:	orr	w8, w9, w8
  43fa34:	and	w8, w8, #0xff
  43fa38:	mov	w0, w8
  43fa3c:	add	sp, sp, #0x10
  43fa40:	ret
  43fa44:	sub	sp, sp, #0x30
  43fa48:	stp	x29, x30, [sp, #32]
  43fa4c:	add	x29, sp, #0x20
  43fa50:	str	x0, [sp, #16]
  43fa54:	ldr	x0, [sp, #16]
  43fa58:	bl	4023d0 <__fpending@plt>
  43fa5c:	cmp	x0, #0x0
  43fa60:	cset	w8, ne  // ne = any
  43fa64:	mov	w9, #0x1                   	// #1
  43fa68:	and	w8, w8, w9
  43fa6c:	strb	w8, [sp, #15]
  43fa70:	ldr	x0, [sp, #16]
  43fa74:	str	w9, [sp, #8]
  43fa78:	bl	402370 <ferror_unlocked@plt>
  43fa7c:	cmp	w0, #0x0
  43fa80:	cset	w8, ne  // ne = any
  43fa84:	ldr	w9, [sp, #8]
  43fa88:	and	w8, w8, w9
  43fa8c:	strb	w8, [sp, #14]
  43fa90:	ldr	x0, [sp, #16]
  43fa94:	bl	4023f0 <fclose@plt>
  43fa98:	cmp	w0, #0x0
  43fa9c:	cset	w8, ne  // ne = any
  43faa0:	and	w8, w8, #0x1
  43faa4:	strb	w8, [sp, #13]
  43faa8:	ldrb	w8, [sp, #14]
  43faac:	tbnz	w8, #0, 43fad4 <_obstack_memory_used@@Base+0x181b4>
  43fab0:	ldrb	w8, [sp, #13]
  43fab4:	tbnz	w8, #0, 43fabc <_obstack_memory_used@@Base+0x1819c>
  43fab8:	b	43faf0 <_obstack_memory_used@@Base+0x181d0>
  43fabc:	ldrb	w8, [sp, #15]
  43fac0:	tbnz	w8, #0, 43fad4 <_obstack_memory_used@@Base+0x181b4>
  43fac4:	bl	402870 <__errno_location@plt>
  43fac8:	ldr	w8, [x0]
  43facc:	cmp	w8, #0x9
  43fad0:	b.eq	43faf0 <_obstack_memory_used@@Base+0x181d0>  // b.none
  43fad4:	ldrb	w8, [sp, #13]
  43fad8:	tbnz	w8, #0, 43fae4 <_obstack_memory_used@@Base+0x181c4>
  43fadc:	bl	402870 <__errno_location@plt>
  43fae0:	str	wzr, [x0]
  43fae4:	mov	w8, #0xffffffff            	// #-1
  43fae8:	stur	w8, [x29, #-4]
  43faec:	b	43faf4 <_obstack_memory_used@@Base+0x181d4>
  43faf0:	stur	wzr, [x29, #-4]
  43faf4:	ldur	w0, [x29, #-4]
  43faf8:	ldp	x29, x30, [sp, #32]
  43fafc:	add	sp, sp, #0x30
  43fb00:	ret
  43fb04:	sub	sp, sp, #0x10
  43fb08:	mov	w8, #0xf616                	// #62998
  43fb0c:	movk	w8, #0x95, lsl #16
  43fb10:	str	x0, [sp, #8]
  43fb14:	ldr	x9, [sp, #8]
  43fb18:	str	xzr, [x9, #16]
  43fb1c:	ldr	x9, [sp, #8]
  43fb20:	str	w8, [x9, #24]
  43fb24:	add	sp, sp, #0x10
  43fb28:	ret
  43fb2c:	sub	sp, sp, #0x30
  43fb30:	stp	x29, x30, [sp, #32]
  43fb34:	add	x29, sp, #0x20
  43fb38:	mov	w8, #0xf616                	// #62998
  43fb3c:	movk	w8, #0x95, lsl #16
  43fb40:	str	x0, [sp, #16]
  43fb44:	str	x1, [sp, #8]
  43fb48:	ldr	x9, [sp, #16]
  43fb4c:	ldr	w10, [x9, #24]
  43fb50:	cmp	w10, w8
  43fb54:	b.ne	43fb5c <_obstack_memory_used@@Base+0x1823c>  // b.any
  43fb58:	b	43fb7c <_obstack_memory_used@@Base+0x1825c>
  43fb5c:	adrp	x0, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  43fb60:	add	x0, x0, #0xb3a
  43fb64:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  43fb68:	add	x1, x1, #0xb52
  43fb6c:	mov	w2, #0x3c                  	// #60
  43fb70:	adrp	x3, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  43fb74:	add	x3, x3, #0xb60
  43fb78:	bl	402860 <__assert_fail@plt>
  43fb7c:	ldr	x8, [sp, #16]
  43fb80:	ldr	x8, [x8, #16]
  43fb84:	cbz	x8, 43fbc8 <_obstack_memory_used@@Base+0x182a8>
  43fb88:	ldr	x8, [sp, #8]
  43fb8c:	ldr	x8, [x8, #8]
  43fb90:	ldr	x9, [sp, #16]
  43fb94:	ldr	x9, [x9]
  43fb98:	cmp	x8, x9
  43fb9c:	b.ne	43fbc8 <_obstack_memory_used@@Base+0x182a8>  // b.any
  43fba0:	ldr	x8, [sp, #8]
  43fba4:	ldr	x8, [x8]
  43fba8:	ldr	x9, [sp, #16]
  43fbac:	ldr	x9, [x9, #8]
  43fbb0:	cmp	x8, x9
  43fbb4:	b.ne	43fbc8 <_obstack_memory_used@@Base+0x182a8>  // b.any
  43fbb8:	mov	w8, #0x1                   	// #1
  43fbbc:	and	w8, w8, #0x1
  43fbc0:	sturb	w8, [x29, #-1]
  43fbc4:	b	43fc30 <_obstack_memory_used@@Base+0x18310>
  43fbc8:	ldr	x8, [sp, #16]
  43fbcc:	ldr	x9, [x8, #16]
  43fbd0:	add	x9, x9, #0x1
  43fbd4:	str	x9, [x8, #16]
  43fbd8:	mov	x0, x9
  43fbdc:	bl	43fc44 <_obstack_memory_used@@Base+0x18324>
  43fbe0:	tbnz	w0, #0, 43fbe8 <_obstack_memory_used@@Base+0x182c8>
  43fbe4:	b	43fc24 <_obstack_memory_used@@Base+0x18304>
  43fbe8:	ldr	x8, [sp, #16]
  43fbec:	ldr	x8, [x8, #16]
  43fbf0:	cbnz	x8, 43fc04 <_obstack_memory_used@@Base+0x182e4>
  43fbf4:	mov	w8, #0x1                   	// #1
  43fbf8:	and	w8, w8, #0x1
  43fbfc:	sturb	w8, [x29, #-1]
  43fc00:	b	43fc30 <_obstack_memory_used@@Base+0x18310>
  43fc04:	ldr	x8, [sp, #8]
  43fc08:	ldr	x8, [x8]
  43fc0c:	ldr	x9, [sp, #16]
  43fc10:	str	x8, [x9, #8]
  43fc14:	ldr	x8, [sp, #8]
  43fc18:	ldr	x8, [x8, #8]
  43fc1c:	ldr	x9, [sp, #16]
  43fc20:	str	x8, [x9]
  43fc24:	mov	w8, wzr
  43fc28:	and	w8, w8, #0x1
  43fc2c:	sturb	w8, [x29, #-1]
  43fc30:	ldurb	w8, [x29, #-1]
  43fc34:	and	w0, w8, #0x1
  43fc38:	ldp	x29, x30, [sp, #32]
  43fc3c:	add	sp, sp, #0x30
  43fc40:	ret
  43fc44:	sub	sp, sp, #0x10
  43fc48:	str	x0, [sp, #8]
  43fc4c:	ldr	x8, [sp, #8]
  43fc50:	ldr	x9, [sp, #8]
  43fc54:	subs	x9, x9, #0x1
  43fc58:	tst	x8, x9
  43fc5c:	cset	w10, eq  // eq = none
  43fc60:	and	w0, w10, #0x1
  43fc64:	add	sp, sp, #0x10
  43fc68:	ret
  43fc6c:	sub	sp, sp, #0x20
  43fc70:	mov	w8, #0x0                   	// #0
  43fc74:	str	x0, [sp, #24]
  43fc78:	ldr	x9, [sp, #24]
  43fc7c:	str	x9, [sp, #16]
  43fc80:	strb	w8, [sp, #7]
  43fc84:	ldr	x8, [sp, #16]
  43fc88:	ldrb	w9, [x8]
  43fc8c:	cmp	w9, #0x2f
  43fc90:	b.ne	43fca4 <_obstack_memory_used@@Base+0x18384>  // b.any
  43fc94:	ldr	x8, [sp, #16]
  43fc98:	add	x8, x8, #0x1
  43fc9c:	str	x8, [sp, #16]
  43fca0:	b	43fc84 <_obstack_memory_used@@Base+0x18364>
  43fca4:	ldr	x8, [sp, #16]
  43fca8:	str	x8, [sp, #8]
  43fcac:	ldr	x8, [sp, #8]
  43fcb0:	ldrb	w9, [x8]
  43fcb4:	cbz	w9, 43fd00 <_obstack_memory_used@@Base+0x183e0>
  43fcb8:	ldr	x8, [sp, #8]
  43fcbc:	ldrb	w9, [x8]
  43fcc0:	cmp	w9, #0x2f
  43fcc4:	b.ne	43fcd4 <_obstack_memory_used@@Base+0x183b4>  // b.any
  43fcc8:	mov	w8, #0x1                   	// #1
  43fccc:	strb	w8, [sp, #7]
  43fcd0:	b	43fcf0 <_obstack_memory_used@@Base+0x183d0>
  43fcd4:	ldrb	w8, [sp, #7]
  43fcd8:	tbnz	w8, #0, 43fce0 <_obstack_memory_used@@Base+0x183c0>
  43fcdc:	b	43fcf0 <_obstack_memory_used@@Base+0x183d0>
  43fce0:	ldr	x8, [sp, #8]
  43fce4:	str	x8, [sp, #16]
  43fce8:	mov	w9, #0x0                   	// #0
  43fcec:	strb	w9, [sp, #7]
  43fcf0:	ldr	x8, [sp, #8]
  43fcf4:	add	x8, x8, #0x1
  43fcf8:	str	x8, [sp, #8]
  43fcfc:	b	43fcac <_obstack_memory_used@@Base+0x1838c>
  43fd00:	ldr	x0, [sp, #16]
  43fd04:	add	sp, sp, #0x20
  43fd08:	ret
  43fd0c:	sub	sp, sp, #0x30
  43fd10:	stp	x29, x30, [sp, #32]
  43fd14:	add	x29, sp, #0x20
  43fd18:	stur	x0, [x29, #-8]
  43fd1c:	str	xzr, [sp, #8]
  43fd20:	ldur	x0, [x29, #-8]
  43fd24:	bl	4022f0 <strlen@plt>
  43fd28:	str	x0, [sp, #16]
  43fd2c:	ldr	x8, [sp, #16]
  43fd30:	mov	x9, #0x1                   	// #1
  43fd34:	mov	w10, #0x0                   	// #0
  43fd38:	cmp	x9, x8
  43fd3c:	str	w10, [sp, #4]
  43fd40:	b.cs	43fd60 <_obstack_memory_used@@Base+0x18440>  // b.hs, b.nlast
  43fd44:	ldur	x8, [x29, #-8]
  43fd48:	ldr	x9, [sp, #16]
  43fd4c:	subs	x9, x9, #0x1
  43fd50:	ldrb	w10, [x8, x9]
  43fd54:	cmp	w10, #0x2f
  43fd58:	cset	w10, eq  // eq = none
  43fd5c:	str	w10, [sp, #4]
  43fd60:	ldr	w8, [sp, #4]
  43fd64:	tbnz	w8, #0, 43fd6c <_obstack_memory_used@@Base+0x1844c>
  43fd68:	b	43fd7c <_obstack_memory_used@@Base+0x1845c>
  43fd6c:	ldr	x8, [sp, #16]
  43fd70:	subs	x8, x8, #0x1
  43fd74:	str	x8, [sp, #16]
  43fd78:	b	43fd2c <_obstack_memory_used@@Base+0x1840c>
  43fd7c:	ldr	x0, [sp, #16]
  43fd80:	ldp	x29, x30, [sp, #32]
  43fd84:	add	sp, sp, #0x30
  43fd88:	ret
  43fd8c:	sub	sp, sp, #0x120
  43fd90:	stp	x29, x30, [sp, #256]
  43fd94:	str	x28, [sp, #272]
  43fd98:	add	x29, sp, #0x100
  43fd9c:	str	q7, [sp, #144]
  43fda0:	str	q6, [sp, #128]
  43fda4:	str	q5, [sp, #112]
  43fda8:	str	q4, [sp, #96]
  43fdac:	str	q3, [sp, #80]
  43fdb0:	str	q2, [sp, #64]
  43fdb4:	str	q1, [sp, #48]
  43fdb8:	str	q0, [sp, #32]
  43fdbc:	stur	x7, [x29, #-56]
  43fdc0:	stur	x6, [x29, #-64]
  43fdc4:	stur	x5, [x29, #-72]
  43fdc8:	stur	x4, [x29, #-80]
  43fdcc:	stur	x3, [x29, #-88]
  43fdd0:	stur	x2, [x29, #-96]
  43fdd4:	stur	x0, [x29, #-8]
  43fdd8:	stur	w1, [x29, #-12]
  43fddc:	mov	w8, wzr
  43fde0:	stur	w8, [x29, #-16]
  43fde4:	ldurb	w8, [x29, #-12]
  43fde8:	tbz	w8, #6, 43fe94 <_obstack_memory_used@@Base+0x18574>
  43fdec:	b	43fdf0 <_obstack_memory_used@@Base+0x184d0>
  43fdf0:	mov	w8, #0xffffff80            	// #-128
  43fdf4:	stur	w8, [x29, #-20]
  43fdf8:	mov	w8, #0xffffffd0            	// #-48
  43fdfc:	stur	w8, [x29, #-24]
  43fe00:	add	x9, x29, #0x20
  43fe04:	stur	x9, [x29, #-48]
  43fe08:	add	x9, sp, #0x20
  43fe0c:	add	x9, x9, #0x80
  43fe10:	stur	x9, [x29, #-32]
  43fe14:	sub	x9, x29, #0x60
  43fe18:	add	x9, x9, #0x30
  43fe1c:	stur	x9, [x29, #-40]
  43fe20:	sub	x9, x29, #0x30
  43fe24:	add	x9, x9, #0x18
  43fe28:	ldur	w8, [x29, #-24]
  43fe2c:	mov	w10, w8
  43fe30:	str	x9, [sp, #24]
  43fe34:	str	w10, [sp, #20]
  43fe38:	tbz	w8, #31, 43fe70 <_obstack_memory_used@@Base+0x18550>
  43fe3c:	b	43fe40 <_obstack_memory_used@@Base+0x18520>
  43fe40:	ldr	w8, [sp, #20]
  43fe44:	add	w9, w8, #0x8
  43fe48:	ldr	x10, [sp, #24]
  43fe4c:	str	w9, [x10]
  43fe50:	subs	w9, w9, #0x0
  43fe54:	b.gt	43fe70 <_obstack_memory_used@@Base+0x18550>
  43fe58:	b	43fe5c <_obstack_memory_used@@Base+0x1853c>
  43fe5c:	ldur	x8, [x29, #-40]
  43fe60:	ldr	w9, [sp, #20]
  43fe64:	add	x8, x8, w9, sxtw
  43fe68:	str	x8, [sp, #8]
  43fe6c:	b	43fe84 <_obstack_memory_used@@Base+0x18564>
  43fe70:	ldur	x8, [x29, #-48]
  43fe74:	add	x9, x8, #0x8
  43fe78:	stur	x9, [x29, #-48]
  43fe7c:	str	x8, [sp, #8]
  43fe80:	b	43fe84 <_obstack_memory_used@@Base+0x18564>
  43fe84:	ldr	x8, [sp, #8]
  43fe88:	ldr	w9, [x8]
  43fe8c:	stur	w9, [x29, #-16]
  43fe90:	b	43fe94 <_obstack_memory_used@@Base+0x18574>
  43fe94:	ldur	x0, [x29, #-8]
  43fe98:	ldur	w1, [x29, #-12]
  43fe9c:	ldur	w2, [x29, #-16]
  43fea0:	bl	402480 <open@plt>
  43fea4:	bl	42277c <wcrtomb@plt+0x1fe6c>
  43fea8:	ldr	x28, [sp, #272]
  43feac:	ldp	x29, x30, [sp, #256]
  43feb0:	add	sp, sp, #0x120
  43feb4:	ret
  43feb8:	sub	sp, sp, #0x130
  43febc:	stp	x29, x30, [sp, #272]
  43fec0:	str	x28, [sp, #288]
  43fec4:	add	x29, sp, #0x110
  43fec8:	sub	x8, x29, #0x8
  43fecc:	mov	x2, #0x101                 	// #257
  43fed0:	add	x1, sp, #0x7
  43fed4:	str	w0, [x8]
  43fed8:	ldr	w0, [x8]
  43fedc:	bl	4403dc <_obstack_memory_used@@Base+0x18abc>
  43fee0:	cbz	w0, 43fef4 <_obstack_memory_used@@Base+0x185d4>
  43fee4:	mov	w8, wzr
  43fee8:	and	w8, w8, #0x1
  43feec:	sturb	w8, [x29, #-1]
  43fef0:	b	43ff40 <_obstack_memory_used@@Base+0x18620>
  43fef4:	add	x0, sp, #0x7
  43fef8:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  43fefc:	add	x1, x1, #0xba3
  43ff00:	bl	4026a0 <strcmp@plt>
  43ff04:	mov	w8, #0x1                   	// #1
  43ff08:	str	w8, [sp]
  43ff0c:	cbz	w0, 43ff2c <_obstack_memory_used@@Base+0x1860c>
  43ff10:	add	x0, sp, #0x7
  43ff14:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  43ff18:	add	x1, x1, #0xba5
  43ff1c:	bl	4026a0 <strcmp@plt>
  43ff20:	cmp	w0, #0x0
  43ff24:	cset	w8, eq  // eq = none
  43ff28:	str	w8, [sp]
  43ff2c:	ldr	w8, [sp]
  43ff30:	mov	w9, #0x1                   	// #1
  43ff34:	eor	w8, w8, #0x1
  43ff38:	and	w8, w8, w9
  43ff3c:	sturb	w8, [x29, #-1]
  43ff40:	ldurb	w8, [x29, #-1]
  43ff44:	and	w0, w8, #0x1
  43ff48:	ldr	x28, [sp, #288]
  43ff4c:	ldp	x29, x30, [sp, #272]
  43ff50:	add	sp, sp, #0x130
  43ff54:	ret
  43ff58:	sub	sp, sp, #0x10
  43ff5c:	mov	w8, #0x1                   	// #1
  43ff60:	str	x0, [sp, #8]
  43ff64:	str	w1, [sp, #4]
  43ff68:	ldr	x9, [sp, #8]
  43ff6c:	strb	w8, [x9, #28]
  43ff70:	ldr	x9, [sp, #8]
  43ff74:	str	wzr, [x9, #20]
  43ff78:	ldr	x9, [sp, #8]
  43ff7c:	str	wzr, [x9, #24]
  43ff80:	str	wzr, [sp]
  43ff84:	ldr	w8, [sp]
  43ff88:	cmp	w8, #0x4
  43ff8c:	b.ge	43ffb0 <_obstack_memory_used@@Base+0x18690>  // b.tcont
  43ff90:	ldr	w8, [sp, #4]
  43ff94:	ldr	x9, [sp, #8]
  43ff98:	ldrsw	x10, [sp]
  43ff9c:	str	w8, [x9, x10, lsl #2]
  43ffa0:	ldr	w8, [sp]
  43ffa4:	add	w8, w8, #0x1
  43ffa8:	str	w8, [sp]
  43ffac:	b	43ff84 <_obstack_memory_used@@Base+0x18664>
  43ffb0:	ldr	w8, [sp, #4]
  43ffb4:	ldr	x9, [sp, #8]
  43ffb8:	str	w8, [x9, #16]
  43ffbc:	add	sp, sp, #0x10
  43ffc0:	ret
  43ffc4:	sub	sp, sp, #0x10
  43ffc8:	str	x0, [sp, #8]
  43ffcc:	ldr	x8, [sp, #8]
  43ffd0:	ldrb	w9, [x8, #28]
  43ffd4:	and	w0, w9, #0x1
  43ffd8:	add	sp, sp, #0x10
  43ffdc:	ret
  43ffe0:	sub	sp, sp, #0x20
  43ffe4:	mov	w8, #0x4                   	// #4
  43ffe8:	str	x0, [sp, #24]
  43ffec:	str	w1, [sp, #20]
  43fff0:	ldr	x9, [sp, #24]
  43fff4:	ldr	w10, [x9, #20]
  43fff8:	ldr	x9, [sp, #24]
  43fffc:	ldrb	w11, [x9, #28]
  440000:	eor	w11, w11, #0x1
  440004:	and	w11, w11, #0x1
  440008:	add	w10, w10, w11
  44000c:	udiv	w11, w10, w8
  440010:	mul	w8, w11, w8
  440014:	subs	w8, w10, w8
  440018:	str	w8, [sp, #16]
  44001c:	ldr	x9, [sp, #24]
  440020:	ldr	w8, [sp, #16]
  440024:	mov	w12, w8
  440028:	ldr	w8, [x9, x12, lsl #2]
  44002c:	str	w8, [sp, #12]
  440030:	ldr	w8, [sp, #20]
  440034:	ldr	x9, [sp, #24]
  440038:	ldr	w10, [sp, #16]
  44003c:	mov	w12, w10
  440040:	str	w8, [x9, x12, lsl #2]
  440044:	ldr	w8, [sp, #16]
  440048:	ldr	x9, [sp, #24]
  44004c:	str	w8, [x9, #20]
  440050:	ldr	w8, [sp, #16]
  440054:	ldr	x9, [sp, #24]
  440058:	ldr	w10, [x9, #24]
  44005c:	cmp	w8, w10
  440060:	b.ne	440098 <_obstack_memory_used@@Base+0x18778>  // b.any
  440064:	ldr	x8, [sp, #24]
  440068:	ldr	w9, [x8, #24]
  44006c:	ldr	x8, [sp, #24]
  440070:	ldrb	w10, [x8, #28]
  440074:	eor	w10, w10, #0x1
  440078:	and	w10, w10, #0x1
  44007c:	add	w9, w9, w10
  440080:	mov	w10, #0x4                   	// #4
  440084:	udiv	w11, w9, w10
  440088:	mul	w10, w11, w10
  44008c:	subs	w9, w9, w10
  440090:	ldr	x8, [sp, #24]
  440094:	str	w9, [x8, #24]
  440098:	ldr	x8, [sp, #24]
  44009c:	mov	w9, #0x0                   	// #0
  4400a0:	strb	w9, [x8, #28]
  4400a4:	ldr	w0, [sp, #12]
  4400a8:	add	sp, sp, #0x20
  4400ac:	ret
  4400b0:	sub	sp, sp, #0x20
  4400b4:	stp	x29, x30, [sp, #16]
  4400b8:	add	x29, sp, #0x10
  4400bc:	str	x0, [sp, #8]
  4400c0:	ldr	x0, [sp, #8]
  4400c4:	bl	43ffc4 <_obstack_memory_used@@Base+0x186a4>
  4400c8:	tbnz	w0, #0, 4400d0 <_obstack_memory_used@@Base+0x187b0>
  4400cc:	b	4400d4 <_obstack_memory_used@@Base+0x187b4>
  4400d0:	bl	402610 <abort@plt>
  4400d4:	ldr	x8, [sp, #8]
  4400d8:	ldr	x9, [sp, #8]
  4400dc:	ldr	w10, [x9, #20]
  4400e0:	mov	w9, w10
  4400e4:	ldr	w10, [x8, x9, lsl #2]
  4400e8:	str	w10, [sp, #4]
  4400ec:	ldr	x8, [sp, #8]
  4400f0:	ldr	w10, [x8, #16]
  4400f4:	ldr	x8, [sp, #8]
  4400f8:	ldr	x9, [sp, #8]
  4400fc:	ldr	w11, [x9, #20]
  440100:	mov	w9, w11
  440104:	str	w10, [x8, x9, lsl #2]
  440108:	ldr	x8, [sp, #8]
  44010c:	ldr	w10, [x8, #20]
  440110:	ldr	x8, [sp, #8]
  440114:	ldr	w11, [x8, #24]
  440118:	cmp	w10, w11
  44011c:	b.ne	440130 <_obstack_memory_used@@Base+0x18810>  // b.any
  440120:	ldr	x8, [sp, #8]
  440124:	mov	w9, #0x1                   	// #1
  440128:	strb	w9, [x8, #28]
  44012c:	b	440158 <_obstack_memory_used@@Base+0x18838>
  440130:	ldr	x8, [sp, #8]
  440134:	ldr	w9, [x8, #20]
  440138:	mov	w10, #0x4                   	// #4
  44013c:	add	w9, w9, #0x4
  440140:	subs	w9, w9, #0x1
  440144:	udiv	w11, w9, w10
  440148:	mul	w10, w11, w10
  44014c:	subs	w9, w9, w10
  440150:	ldr	x8, [sp, #8]
  440154:	str	w9, [x8, #20]
  440158:	ldr	w0, [sp, #4]
  44015c:	ldp	x29, x30, [sp, #16]
  440160:	add	sp, sp, #0x20
  440164:	ret
  440168:	sub	sp, sp, #0x20
  44016c:	stp	x29, x30, [sp, #16]
  440170:	add	x29, sp, #0x10
  440174:	mov	w0, #0xe                   	// #14
  440178:	bl	402410 <nl_langinfo@plt>
  44017c:	str	x0, [sp, #8]
  440180:	ldr	x8, [sp, #8]
  440184:	cbnz	x8, 440194 <_obstack_memory_used@@Base+0x18874>
  440188:	adrp	x8, 442000 <_obstack_memory_used@@Base+0x1a6e0>
  44018c:	add	x8, x8, #0xad5
  440190:	str	x8, [sp, #8]
  440194:	ldr	x8, [sp, #8]
  440198:	ldrb	w9, [x8]
  44019c:	cbnz	w9, 4401ac <_obstack_memory_used@@Base+0x1888c>
  4401a0:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4401a4:	add	x8, x8, #0xbab
  4401a8:	str	x8, [sp, #8]
  4401ac:	ldr	x0, [sp, #8]
  4401b0:	ldp	x29, x30, [sp, #16]
  4401b4:	add	sp, sp, #0x20
  4401b8:	ret
  4401bc:	sub	sp, sp, #0x20
  4401c0:	stp	x29, x30, [sp, #16]
  4401c4:	add	x29, sp, #0x10
  4401c8:	stur	w0, [x29, #-4]
  4401cc:	ldur	w0, [x29, #-4]
  4401d0:	bl	402470 <wcwidth@plt>
  4401d4:	str	w0, [sp, #8]
  4401d8:	ldr	w8, [sp, #8]
  4401dc:	cmp	w8, #0x0
  4401e0:	cset	w8, lt  // lt = tstop
  4401e4:	tbnz	w8, #0, 4401f4 <_obstack_memory_used@@Base+0x188d4>
  4401e8:	ldr	w8, [sp, #8]
  4401ec:	str	w8, [sp, #4]
  4401f0:	b	440210 <_obstack_memory_used@@Base+0x188f0>
  4401f4:	ldur	w0, [x29, #-4]
  4401f8:	bl	402390 <iswcntrl@plt>
  4401fc:	mov	w8, wzr
  440200:	mov	w9, #0x1                   	// #1
  440204:	cmp	w0, #0x0
  440208:	csel	w8, w8, w9, ne  // ne = any
  44020c:	str	w8, [sp, #4]
  440210:	ldr	w8, [sp, #4]
  440214:	mov	w0, w8
  440218:	ldp	x29, x30, [sp, #16]
  44021c:	add	sp, sp, #0x20
  440220:	ret
  440224:	sub	sp, sp, #0x20
  440228:	stp	x29, x30, [sp, #16]
  44022c:	add	x29, sp, #0x10
  440230:	str	x0, [sp, #8]
  440234:	str	x1, [sp]
  440238:	ldr	x8, [sp]
  44023c:	ldr	x8, [x8]
  440240:	ldr	x9, [sp]
  440244:	add	x9, x9, #0x18
  440248:	cmp	x8, x9
  44024c:	b.ne	440280 <_obstack_memory_used@@Base+0x18960>  // b.any
  440250:	ldr	x8, [sp, #8]
  440254:	add	x0, x8, #0x18
  440258:	ldr	x8, [sp]
  44025c:	add	x1, x8, #0x18
  440260:	ldr	x8, [sp]
  440264:	ldr	x2, [x8, #8]
  440268:	bl	402290 <memcpy@plt>
  44026c:	ldr	x8, [sp, #8]
  440270:	add	x8, x8, #0x18
  440274:	ldr	x9, [sp, #8]
  440278:	str	x8, [x9]
  44027c:	b	440290 <_obstack_memory_used@@Base+0x18970>
  440280:	ldr	x8, [sp]
  440284:	ldr	x8, [x8]
  440288:	ldr	x9, [sp, #8]
  44028c:	str	x8, [x9]
  440290:	ldr	x8, [sp]
  440294:	ldr	x8, [x8, #8]
  440298:	ldr	x9, [sp, #8]
  44029c:	str	x8, [x9, #8]
  4402a0:	ldr	x8, [sp]
  4402a4:	ldrb	w10, [x8, #16]
  4402a8:	ldr	x8, [sp, #8]
  4402ac:	mov	w0, w10
  4402b0:	and	w11, w0, #0x1
  4402b4:	strb	w11, [x8, #16]
  4402b8:	tbnz	w10, #0, 4402c0 <_obstack_memory_used@@Base+0x189a0>
  4402bc:	b	4402d0 <_obstack_memory_used@@Base+0x189b0>
  4402c0:	ldr	x8, [sp]
  4402c4:	ldr	w9, [x8, #20]
  4402c8:	ldr	x8, [sp, #8]
  4402cc:	str	w9, [x8, #20]
  4402d0:	ldp	x29, x30, [sp, #16]
  4402d4:	add	sp, sp, #0x20
  4402d8:	ret
  4402dc:	sub	sp, sp, #0x10
  4402e0:	adrp	x8, 444000 <_obstack_memory_used@@Base+0x1c6e0>
  4402e4:	add	x8, x8, #0xbb4
  4402e8:	strb	w0, [sp, #15]
  4402ec:	ldrb	w9, [sp, #15]
  4402f0:	asr	w9, w9, #5
  4402f4:	ldr	w9, [x8, w9, sxtw #2]
  4402f8:	ldrb	w10, [sp, #15]
  4402fc:	and	w10, w10, #0x1f
  440300:	lsr	w9, w9, w10
  440304:	tst	w9, #0x1
  440308:	cset	w9, ne  // ne = any
  44030c:	and	w0, w9, #0x1
  440310:	add	sp, sp, #0x10
  440314:	ret
  440318:	sub	sp, sp, #0x50
  44031c:	stp	x29, x30, [sp, #64]
  440320:	add	x29, sp, #0x40
  440324:	mov	w8, #0x4900                	// #18688
  440328:	movk	w8, #0x8, lsl #16
  44032c:	stur	w0, [x29, #-12]
  440330:	stur	x1, [x29, #-24]
  440334:	stur	w2, [x29, #-28]
  440338:	str	x3, [sp, #24]
  44033c:	ldur	w9, [x29, #-28]
  440340:	orr	w8, w8, w9
  440344:	str	w8, [sp, #20]
  440348:	ldur	w0, [x29, #-12]
  44034c:	ldur	x1, [x29, #-24]
  440350:	ldr	w2, [sp, #20]
  440354:	bl	42034c <wcrtomb@plt+0x1da3c>
  440358:	str	w0, [sp, #16]
  44035c:	ldr	w8, [sp, #16]
  440360:	cmp	w8, #0x0
  440364:	cset	w8, ge  // ge = tcont
  440368:	tbnz	w8, #0, 440378 <_obstack_memory_used@@Base+0x18a58>
  44036c:	mov	x8, xzr
  440370:	stur	x8, [x29, #-8]
  440374:	b	4403cc <_obstack_memory_used@@Base+0x18aac>
  440378:	ldr	w0, [sp, #16]
  44037c:	bl	4025e0 <fdopendir@plt>
  440380:	str	x0, [sp, #8]
  440384:	ldr	x8, [sp, #8]
  440388:	cbz	x8, 44039c <_obstack_memory_used@@Base+0x18a7c>
  44038c:	ldr	w8, [sp, #16]
  440390:	ldr	x9, [sp, #24]
  440394:	str	w8, [x9]
  440398:	b	4403c4 <_obstack_memory_used@@Base+0x18aa4>
  44039c:	bl	402870 <__errno_location@plt>
  4403a0:	ldr	w8, [x0]
  4403a4:	str	w8, [sp, #4]
  4403a8:	ldr	w0, [sp, #16]
  4403ac:	bl	4025a0 <close@plt>
  4403b0:	ldr	w8, [sp, #4]
  4403b4:	str	w8, [sp]
  4403b8:	bl	402870 <__errno_location@plt>
  4403bc:	ldr	w8, [sp]
  4403c0:	str	w8, [x0]
  4403c4:	ldr	x8, [sp, #8]
  4403c8:	stur	x8, [x29, #-8]
  4403cc:	ldur	x0, [x29, #-8]
  4403d0:	ldp	x29, x30, [sp, #64]
  4403d4:	add	sp, sp, #0x50
  4403d8:	ret
  4403dc:	sub	sp, sp, #0x30
  4403e0:	stp	x29, x30, [sp, #32]
  4403e4:	add	x29, sp, #0x20
  4403e8:	stur	w0, [x29, #-4]
  4403ec:	str	x1, [sp, #16]
  4403f0:	str	x2, [sp, #8]
  4403f4:	ldur	w0, [x29, #-4]
  4403f8:	ldr	x1, [sp, #16]
  4403fc:	ldr	x2, [sp, #8]
  440400:	bl	440410 <_obstack_memory_used@@Base+0x18af0>
  440404:	ldp	x29, x30, [sp, #32]
  440408:	add	sp, sp, #0x30
  44040c:	ret
  440410:	sub	sp, sp, #0x40
  440414:	stp	x29, x30, [sp, #48]
  440418:	add	x29, sp, #0x30
  44041c:	stur	w0, [x29, #-8]
  440420:	stur	x1, [x29, #-16]
  440424:	str	x2, [sp, #24]
  440428:	ldur	w0, [x29, #-8]
  44042c:	bl	440514 <_obstack_memory_used@@Base+0x18bf4>
  440430:	str	x0, [sp, #16]
  440434:	ldr	x8, [sp, #16]
  440438:	cbnz	x8, 440464 <_obstack_memory_used@@Base+0x18b44>
  44043c:	ldr	x8, [sp, #24]
  440440:	cmp	x8, #0x0
  440444:	cset	w9, ls  // ls = plast
  440448:	tbnz	w9, #0, 440458 <_obstack_memory_used@@Base+0x18b38>
  44044c:	ldur	x8, [x29, #-16]
  440450:	mov	w9, #0x0                   	// #0
  440454:	strb	w9, [x8]
  440458:	mov	w8, #0x16                  	// #22
  44045c:	stur	w8, [x29, #-4]
  440460:	b	4404e0 <_obstack_memory_used@@Base+0x18bc0>
  440464:	ldr	x0, [sp, #16]
  440468:	bl	4022f0 <strlen@plt>
  44046c:	str	x0, [sp, #8]
  440470:	ldr	x8, [sp, #8]
  440474:	ldr	x9, [sp, #24]
  440478:	cmp	x8, x9
  44047c:	b.cs	44049c <_obstack_memory_used@@Base+0x18b7c>  // b.hs, b.nlast
  440480:	ldur	x0, [x29, #-16]
  440484:	ldr	x1, [sp, #16]
  440488:	ldr	x8, [sp, #8]
  44048c:	add	x2, x8, #0x1
  440490:	bl	402290 <memcpy@plt>
  440494:	stur	wzr, [x29, #-4]
  440498:	b	4404e0 <_obstack_memory_used@@Base+0x18bc0>
  44049c:	ldr	x8, [sp, #24]
  4404a0:	cmp	x8, #0x0
  4404a4:	cset	w9, ls  // ls = plast
  4404a8:	tbnz	w9, #0, 4404d8 <_obstack_memory_used@@Base+0x18bb8>
  4404ac:	ldur	x0, [x29, #-16]
  4404b0:	ldr	x1, [sp, #16]
  4404b4:	ldr	x8, [sp, #24]
  4404b8:	subs	x2, x8, #0x1
  4404bc:	bl	402290 <memcpy@plt>
  4404c0:	ldur	x8, [x29, #-16]
  4404c4:	ldr	x9, [sp, #24]
  4404c8:	subs	x9, x9, #0x1
  4404cc:	add	x8, x8, x9
  4404d0:	mov	w10, #0x0                   	// #0
  4404d4:	strb	w10, [x8]
  4404d8:	mov	w8, #0x22                  	// #34
  4404dc:	stur	w8, [x29, #-4]
  4404e0:	ldur	w0, [x29, #-4]
  4404e4:	ldp	x29, x30, [sp, #48]
  4404e8:	add	sp, sp, #0x40
  4404ec:	ret
  4404f0:	sub	sp, sp, #0x20
  4404f4:	stp	x29, x30, [sp, #16]
  4404f8:	add	x29, sp, #0x10
  4404fc:	stur	w0, [x29, #-4]
  440500:	ldur	w0, [x29, #-4]
  440504:	bl	440514 <_obstack_memory_used@@Base+0x18bf4>
  440508:	ldp	x29, x30, [sp, #16]
  44050c:	add	sp, sp, #0x20
  440510:	ret
  440514:	sub	sp, sp, #0x20
  440518:	stp	x29, x30, [sp, #16]
  44051c:	add	x29, sp, #0x10
  440520:	mov	x8, xzr
  440524:	stur	w0, [x29, #-4]
  440528:	ldur	w0, [x29, #-4]
  44052c:	mov	x1, x8
  440530:	bl	4028f0 <setlocale@plt>
  440534:	str	x0, [sp]
  440538:	ldr	x0, [sp]
  44053c:	ldp	x29, x30, [sp, #16]
  440540:	add	sp, sp, #0x20
  440544:	ret
  440548:	sub	sp, sp, #0x20
  44054c:	stp	x29, x30, [sp, #16]
  440550:	add	x29, sp, #0x10
  440554:	mov	w8, wzr
  440558:	mov	w2, #0x3                   	// #3
  44055c:	stur	w0, [x29, #-4]
  440560:	ldur	w0, [x29, #-4]
  440564:	mov	w1, w8
  440568:	bl	440578 <_obstack_memory_used@@Base+0x18c58>
  44056c:	ldp	x29, x30, [sp, #16]
  440570:	add	sp, sp, #0x20
  440574:	ret
  440578:	sub	sp, sp, #0x180
  44057c:	stp	x29, x30, [sp, #352]
  440580:	str	x28, [sp, #368]
  440584:	add	x29, sp, #0x160
  440588:	str	q7, [sp, #224]
  44058c:	str	q6, [sp, #208]
  440590:	str	q5, [sp, #192]
  440594:	str	q4, [sp, #176]
  440598:	str	q3, [sp, #160]
  44059c:	str	q2, [sp, #144]
  4405a0:	str	q1, [sp, #128]
  4405a4:	str	q0, [sp, #112]
  4405a8:	stur	x7, [x29, #-72]
  4405ac:	stur	x6, [x29, #-80]
  4405b0:	stur	x5, [x29, #-88]
  4405b4:	stur	x4, [x29, #-96]
  4405b8:	stur	x3, [x29, #-104]
  4405bc:	stur	x2, [x29, #-112]
  4405c0:	stur	w0, [x29, #-4]
  4405c4:	stur	w1, [x29, #-8]
  4405c8:	mov	w8, #0xffffffff            	// #-1
  4405cc:	stur	w8, [x29, #-44]
  4405d0:	mov	w8, #0xffffff80            	// #-128
  4405d4:	stur	w8, [x29, #-12]
  4405d8:	mov	w8, #0xffffffd0            	// #-48
  4405dc:	stur	w8, [x29, #-16]
  4405e0:	add	x9, sp, #0x70
  4405e4:	add	x9, x9, #0x80
  4405e8:	stur	x9, [x29, #-24]
  4405ec:	sub	x9, x29, #0x70
  4405f0:	add	x9, x9, #0x30
  4405f4:	stur	x9, [x29, #-32]
  4405f8:	add	x9, x29, #0x20
  4405fc:	stur	x9, [x29, #-40]
  440600:	ldur	w8, [x29, #-8]
  440604:	mov	w10, w8
  440608:	str	w10, [sp, #108]
  44060c:	cbz	w8, 440624 <_obstack_memory_used@@Base+0x18d04>
  440610:	b	440614 <_obstack_memory_used@@Base+0x18cf4>
  440614:	ldr	w8, [sp, #108]
  440618:	subs	w9, w8, #0x406
  44061c:	b.eq	4406a8 <_obstack_memory_used@@Base+0x18d88>  // b.none
  440620:	b	44072c <_obstack_memory_used@@Base+0x18e0c>
  440624:	sub	x8, x29, #0x28
  440628:	add	x8, x8, #0x18
  44062c:	ldur	w9, [x29, #-16]
  440630:	mov	w10, w9
  440634:	str	x8, [sp, #96]
  440638:	str	w10, [sp, #92]
  44063c:	tbz	w9, #31, 440674 <_obstack_memory_used@@Base+0x18d54>
  440640:	b	440644 <_obstack_memory_used@@Base+0x18d24>
  440644:	ldr	w8, [sp, #92]
  440648:	add	w9, w8, #0x8
  44064c:	ldr	x10, [sp, #96]
  440650:	str	w9, [x10]
  440654:	subs	w9, w9, #0x0
  440658:	b.gt	440674 <_obstack_memory_used@@Base+0x18d54>
  44065c:	b	440660 <_obstack_memory_used@@Base+0x18d40>
  440660:	ldur	x8, [x29, #-32]
  440664:	ldr	w9, [sp, #92]
  440668:	add	x8, x8, w9, sxtw
  44066c:	str	x8, [sp, #80]
  440670:	b	440688 <_obstack_memory_used@@Base+0x18d68>
  440674:	ldur	x8, [x29, #-40]
  440678:	add	x9, x8, #0x8
  44067c:	stur	x9, [x29, #-40]
  440680:	str	x8, [sp, #80]
  440684:	b	440688 <_obstack_memory_used@@Base+0x18d68>
  440688:	ldr	x8, [sp, #80]
  44068c:	ldr	w9, [x8]
  440690:	stur	w9, [x29, #-48]
  440694:	ldur	w0, [x29, #-4]
  440698:	ldur	w1, [x29, #-48]
  44069c:	bl	440970 <_obstack_memory_used@@Base+0x19050>
  4406a0:	stur	w0, [x29, #-44]
  4406a4:	b	44095c <_obstack_memory_used@@Base+0x1903c>
  4406a8:	sub	x8, x29, #0x28
  4406ac:	add	x8, x8, #0x18
  4406b0:	ldur	w9, [x29, #-16]
  4406b4:	mov	w10, w9
  4406b8:	str	x8, [sp, #72]
  4406bc:	str	w10, [sp, #68]
  4406c0:	tbz	w9, #31, 4406f8 <_obstack_memory_used@@Base+0x18dd8>
  4406c4:	b	4406c8 <_obstack_memory_used@@Base+0x18da8>
  4406c8:	ldr	w8, [sp, #68]
  4406cc:	add	w9, w8, #0x8
  4406d0:	ldr	x10, [sp, #72]
  4406d4:	str	w9, [x10]
  4406d8:	subs	w9, w9, #0x0
  4406dc:	b.gt	4406f8 <_obstack_memory_used@@Base+0x18dd8>
  4406e0:	b	4406e4 <_obstack_memory_used@@Base+0x18dc4>
  4406e4:	ldur	x8, [x29, #-32]
  4406e8:	ldr	w9, [sp, #68]
  4406ec:	add	x8, x8, w9, sxtw
  4406f0:	str	x8, [sp, #56]
  4406f4:	b	44070c <_obstack_memory_used@@Base+0x18dec>
  4406f8:	ldur	x8, [x29, #-40]
  4406fc:	add	x9, x8, #0x8
  440700:	stur	x9, [x29, #-40]
  440704:	str	x8, [sp, #56]
  440708:	b	44070c <_obstack_memory_used@@Base+0x18dec>
  44070c:	ldr	x8, [sp, #56]
  440710:	ldr	w9, [x8]
  440714:	stur	w9, [x29, #-52]
  440718:	ldur	w0, [x29, #-4]
  44071c:	ldur	w1, [x29, #-52]
  440720:	bl	4409ac <_obstack_memory_used@@Base+0x1908c>
  440724:	stur	w0, [x29, #-44]
  440728:	b	44095c <_obstack_memory_used@@Base+0x1903c>
  44072c:	ldur	w8, [x29, #-8]
  440730:	mov	w9, w8
  440734:	str	w9, [sp, #52]
  440738:	cbz	w8, 440848 <_obstack_memory_used@@Base+0x18f28>
  44073c:	b	440740 <_obstack_memory_used@@Base+0x18e20>
  440740:	ldr	w8, [sp, #52]
  440744:	subs	w9, w8, #0x1
  440748:	b.eq	440834 <_obstack_memory_used@@Base+0x18f14>  // b.none
  44074c:	b	440750 <_obstack_memory_used@@Base+0x18e30>
  440750:	ldr	w8, [sp, #52]
  440754:	subs	w9, w8, #0x2
  440758:	b.eq	440848 <_obstack_memory_used@@Base+0x18f28>  // b.none
  44075c:	b	440760 <_obstack_memory_used@@Base+0x18e40>
  440760:	ldr	w8, [sp, #52]
  440764:	subs	w9, w8, #0x3
  440768:	b.eq	440834 <_obstack_memory_used@@Base+0x18f14>  // b.none
  44076c:	b	440770 <_obstack_memory_used@@Base+0x18e50>
  440770:	ldr	w8, [sp, #52]
  440774:	subs	w9, w8, #0x4
  440778:	b.eq	440848 <_obstack_memory_used@@Base+0x18f28>  // b.none
  44077c:	b	440780 <_obstack_memory_used@@Base+0x18e60>
  440780:	ldr	w8, [sp, #52]
  440784:	subs	w9, w8, #0x8
  440788:	b.eq	440848 <_obstack_memory_used@@Base+0x18f28>  // b.none
  44078c:	b	440790 <_obstack_memory_used@@Base+0x18e70>
  440790:	ldr	w8, [sp, #52]
  440794:	subs	w9, w8, #0x9
  440798:	b.eq	440834 <_obstack_memory_used@@Base+0x18f14>  // b.none
  44079c:	b	4407a0 <_obstack_memory_used@@Base+0x18e80>
  4407a0:	ldr	w8, [sp, #52]
  4407a4:	subs	w9, w8, #0xa
  4407a8:	b.eq	440848 <_obstack_memory_used@@Base+0x18f28>  // b.none
  4407ac:	b	4407b0 <_obstack_memory_used@@Base+0x18e90>
  4407b0:	ldr	w8, [sp, #52]
  4407b4:	subs	w9, w8, #0xb
  4407b8:	b.eq	440834 <_obstack_memory_used@@Base+0x18f14>  // b.none
  4407bc:	b	4407c0 <_obstack_memory_used@@Base+0x18ea0>
  4407c0:	ldr	w8, [sp, #52]
  4407c4:	subs	w9, w8, #0x400
  4407c8:	b.eq	440848 <_obstack_memory_used@@Base+0x18f28>  // b.none
  4407cc:	b	4407d0 <_obstack_memory_used@@Base+0x18eb0>
  4407d0:	ldr	w8, [sp, #52]
  4407d4:	subs	w9, w8, #0x401
  4407d8:	b.eq	440834 <_obstack_memory_used@@Base+0x18f14>  // b.none
  4407dc:	b	4407e0 <_obstack_memory_used@@Base+0x18ec0>
  4407e0:	ldr	w8, [sp, #52]
  4407e4:	subs	w9, w8, #0x402
  4407e8:	b.eq	440848 <_obstack_memory_used@@Base+0x18f28>  // b.none
  4407ec:	b	4407f0 <_obstack_memory_used@@Base+0x18ed0>
  4407f0:	ldr	w8, [sp, #52]
  4407f4:	subs	w9, w8, #0x406
  4407f8:	subs	w9, w9, #0x2
  4407fc:	b.cc	440848 <_obstack_memory_used@@Base+0x18f28>  // b.lo, b.ul, b.last
  440800:	b	440804 <_obstack_memory_used@@Base+0x18ee4>
  440804:	ldr	w8, [sp, #52]
  440808:	subs	w9, w8, #0x408
  44080c:	b.eq	440834 <_obstack_memory_used@@Base+0x18f14>  // b.none
  440810:	b	440814 <_obstack_memory_used@@Base+0x18ef4>
  440814:	ldr	w8, [sp, #52]
  440818:	subs	w9, w8, #0x409
  44081c:	b.eq	440848 <_obstack_memory_used@@Base+0x18f28>  // b.none
  440820:	b	440824 <_obstack_memory_used@@Base+0x18f04>
  440824:	ldr	w8, [sp, #52]
  440828:	subs	w9, w8, #0x40a
  44082c:	b.ne	4408d0 <_obstack_memory_used@@Base+0x18fb0>  // b.any
  440830:	b	440834 <_obstack_memory_used@@Base+0x18f14>
  440834:	ldur	w0, [x29, #-4]
  440838:	ldur	w1, [x29, #-8]
  44083c:	bl	402720 <fcntl@plt>
  440840:	stur	w0, [x29, #-44]
  440844:	b	440958 <_obstack_memory_used@@Base+0x19038>
  440848:	sub	x8, x29, #0x28
  44084c:	add	x8, x8, #0x18
  440850:	ldur	w9, [x29, #-16]
  440854:	mov	w10, w9
  440858:	str	x8, [sp, #40]
  44085c:	str	w10, [sp, #36]
  440860:	tbz	w9, #31, 440898 <_obstack_memory_used@@Base+0x18f78>
  440864:	b	440868 <_obstack_memory_used@@Base+0x18f48>
  440868:	ldr	w8, [sp, #36]
  44086c:	add	w9, w8, #0x8
  440870:	ldr	x10, [sp, #40]
  440874:	str	w9, [x10]
  440878:	subs	w9, w9, #0x0
  44087c:	b.gt	440898 <_obstack_memory_used@@Base+0x18f78>
  440880:	b	440884 <_obstack_memory_used@@Base+0x18f64>
  440884:	ldur	x8, [x29, #-32]
  440888:	ldr	w9, [sp, #36]
  44088c:	add	x8, x8, w9, sxtw
  440890:	str	x8, [sp, #24]
  440894:	b	4408ac <_obstack_memory_used@@Base+0x18f8c>
  440898:	ldur	x8, [x29, #-40]
  44089c:	add	x9, x8, #0x8
  4408a0:	stur	x9, [x29, #-40]
  4408a4:	str	x8, [sp, #24]
  4408a8:	b	4408ac <_obstack_memory_used@@Base+0x18f8c>
  4408ac:	ldr	x8, [sp, #24]
  4408b0:	ldr	w9, [x8]
  4408b4:	stur	w9, [x29, #-56]
  4408b8:	ldur	w0, [x29, #-4]
  4408bc:	ldur	w1, [x29, #-8]
  4408c0:	ldur	w2, [x29, #-56]
  4408c4:	bl	402720 <fcntl@plt>
  4408c8:	stur	w0, [x29, #-44]
  4408cc:	b	440958 <_obstack_memory_used@@Base+0x19038>
  4408d0:	sub	x8, x29, #0x28
  4408d4:	add	x8, x8, #0x18
  4408d8:	ldur	w9, [x29, #-16]
  4408dc:	mov	w10, w9
  4408e0:	str	x8, [sp, #16]
  4408e4:	str	w10, [sp, #12]
  4408e8:	tbz	w9, #31, 440920 <_obstack_memory_used@@Base+0x19000>
  4408ec:	b	4408f0 <_obstack_memory_used@@Base+0x18fd0>
  4408f0:	ldr	w8, [sp, #12]
  4408f4:	add	w9, w8, #0x8
  4408f8:	ldr	x10, [sp, #16]
  4408fc:	str	w9, [x10]
  440900:	subs	w9, w9, #0x0
  440904:	b.gt	440920 <_obstack_memory_used@@Base+0x19000>
  440908:	b	44090c <_obstack_memory_used@@Base+0x18fec>
  44090c:	ldur	x8, [x29, #-32]
  440910:	ldr	w9, [sp, #12]
  440914:	add	x8, x8, w9, sxtw
  440918:	str	x8, [sp]
  44091c:	b	440934 <_obstack_memory_used@@Base+0x19014>
  440920:	ldur	x8, [x29, #-40]
  440924:	add	x9, x8, #0x8
  440928:	stur	x9, [x29, #-40]
  44092c:	str	x8, [sp]
  440930:	b	440934 <_obstack_memory_used@@Base+0x19014>
  440934:	ldr	x8, [sp]
  440938:	ldr	x8, [x8]
  44093c:	stur	x8, [x29, #-64]
  440940:	ldur	w0, [x29, #-4]
  440944:	ldur	w1, [x29, #-8]
  440948:	ldur	x2, [x29, #-64]
  44094c:	bl	402720 <fcntl@plt>
  440950:	stur	w0, [x29, #-44]
  440954:	b	440958 <_obstack_memory_used@@Base+0x19038>
  440958:	b	44095c <_obstack_memory_used@@Base+0x1903c>
  44095c:	ldur	w0, [x29, #-44]
  440960:	ldr	x28, [sp, #368]
  440964:	ldp	x29, x30, [sp, #352]
  440968:	add	sp, sp, #0x180
  44096c:	ret
  440970:	sub	sp, sp, #0x20
  440974:	stp	x29, x30, [sp, #16]
  440978:	add	x29, sp, #0x10
  44097c:	mov	w8, wzr
  440980:	stur	w0, [x29, #-4]
  440984:	str	w1, [sp, #8]
  440988:	ldur	w0, [x29, #-4]
  44098c:	ldr	w2, [sp, #8]
  440990:	mov	w1, w8
  440994:	bl	402720 <fcntl@plt>
  440998:	str	w0, [sp, #4]
  44099c:	ldr	w0, [sp, #4]
  4409a0:	ldp	x29, x30, [sp, #16]
  4409a4:	add	sp, sp, #0x20
  4409a8:	ret
  4409ac:	sub	sp, sp, #0x40
  4409b0:	stp	x29, x30, [sp, #48]
  4409b4:	add	x29, sp, #0x30
  4409b8:	adrp	x8, 459000 <__progname@@GLIBC_2.17+0x3b98>
  4409bc:	add	x8, x8, #0x8c0
  4409c0:	mov	w9, wzr
  4409c4:	stur	w0, [x29, #-4]
  4409c8:	stur	w1, [x29, #-8]
  4409cc:	ldr	w10, [x8]
  4409d0:	cmp	w9, w10
  4409d4:	cset	w9, gt
  4409d8:	str	x8, [sp, #16]
  4409dc:	tbnz	w9, #0, 440a58 <_obstack_memory_used@@Base+0x19138>
  4409e0:	ldur	w0, [x29, #-4]
  4409e4:	ldur	w2, [x29, #-8]
  4409e8:	mov	w1, #0x406                 	// #1030
  4409ec:	bl	402720 <fcntl@plt>
  4409f0:	stur	w0, [x29, #-12]
  4409f4:	ldur	w8, [x29, #-12]
  4409f8:	mov	w9, wzr
  4409fc:	cmp	w9, w8
  440a00:	cset	w8, le
  440a04:	tbnz	w8, #0, 440a18 <_obstack_memory_used@@Base+0x190f8>
  440a08:	bl	402870 <__errno_location@plt>
  440a0c:	ldr	w8, [x0]
  440a10:	cmp	w8, #0x16
  440a14:	b.eq	440a28 <_obstack_memory_used@@Base+0x19108>  // b.none
  440a18:	mov	w8, #0x1                   	// #1
  440a1c:	ldr	x9, [sp, #16]
  440a20:	str	w8, [x9]
  440a24:	b	440a54 <_obstack_memory_used@@Base+0x19134>
  440a28:	ldur	w0, [x29, #-4]
  440a2c:	ldur	w1, [x29, #-8]
  440a30:	bl	440970 <_obstack_memory_used@@Base+0x19050>
  440a34:	stur	w0, [x29, #-12]
  440a38:	ldur	w8, [x29, #-12]
  440a3c:	cmp	w8, #0x0
  440a40:	cset	w8, lt  // lt = tstop
  440a44:	tbnz	w8, #0, 440a54 <_obstack_memory_used@@Base+0x19134>
  440a48:	mov	w8, #0xffffffff            	// #-1
  440a4c:	ldr	x9, [sp, #16]
  440a50:	str	w8, [x9]
  440a54:	b	440a68 <_obstack_memory_used@@Base+0x19148>
  440a58:	ldur	w0, [x29, #-4]
  440a5c:	ldur	w1, [x29, #-8]
  440a60:	bl	440970 <_obstack_memory_used@@Base+0x19050>
  440a64:	stur	w0, [x29, #-12]
  440a68:	ldur	w8, [x29, #-12]
  440a6c:	mov	w9, wzr
  440a70:	cmp	w9, w8
  440a74:	cset	w8, gt
  440a78:	tbnz	w8, #0, 440b00 <_obstack_memory_used@@Base+0x191e0>
  440a7c:	ldr	x8, [sp, #16]
  440a80:	ldr	w9, [x8]
  440a84:	mov	w10, #0xffffffff            	// #-1
  440a88:	cmp	w9, w10
  440a8c:	b.ne	440b00 <_obstack_memory_used@@Base+0x191e0>  // b.any
  440a90:	ldur	w0, [x29, #-12]
  440a94:	mov	w1, #0x1                   	// #1
  440a98:	bl	402720 <fcntl@plt>
  440a9c:	stur	w0, [x29, #-16]
  440aa0:	ldur	w8, [x29, #-16]
  440aa4:	cmp	w8, #0x0
  440aa8:	cset	w8, lt  // lt = tstop
  440aac:	tbnz	w8, #0, 440ad0 <_obstack_memory_used@@Base+0x191b0>
  440ab0:	ldur	w0, [x29, #-12]
  440ab4:	ldur	w8, [x29, #-16]
  440ab8:	orr	w2, w8, #0x1
  440abc:	mov	w1, #0x2                   	// #2
  440ac0:	bl	402720 <fcntl@plt>
  440ac4:	mov	w8, #0xffffffff            	// #-1
  440ac8:	cmp	w0, w8
  440acc:	b.ne	440b00 <_obstack_memory_used@@Base+0x191e0>  // b.any
  440ad0:	bl	402870 <__errno_location@plt>
  440ad4:	ldr	w8, [x0]
  440ad8:	stur	w8, [x29, #-20]
  440adc:	ldur	w0, [x29, #-12]
  440ae0:	bl	4025a0 <close@plt>
  440ae4:	ldur	w8, [x29, #-20]
  440ae8:	str	w8, [sp, #12]
  440aec:	bl	402870 <__errno_location@plt>
  440af0:	ldr	w8, [sp, #12]
  440af4:	str	w8, [x0]
  440af8:	mov	w9, #0xffffffff            	// #-1
  440afc:	stur	w9, [x29, #-12]
  440b00:	ldur	w0, [x29, #-12]
  440b04:	ldp	x29, x30, [sp, #48]
  440b08:	add	sp, sp, #0x40
  440b0c:	ret
  440b10:	stp	x29, x30, [sp, #-64]!
  440b14:	mov	x29, sp
  440b18:	stp	x19, x20, [sp, #16]
  440b1c:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x2c6e0>
  440b20:	add	x20, x20, #0xdf0
  440b24:	stp	x21, x22, [sp, #32]
  440b28:	adrp	x21, 454000 <_obstack_memory_used@@Base+0x2c6e0>
  440b2c:	add	x21, x21, #0xde8
  440b30:	sub	x20, x20, x21
  440b34:	mov	w22, w0
  440b38:	stp	x23, x24, [sp, #48]
  440b3c:	mov	x23, x1
  440b40:	mov	x24, x2
  440b44:	bl	402240 <mbrtowc@plt-0x40>
  440b48:	cmp	xzr, x20, asr #3
  440b4c:	b.eq	440b78 <_obstack_memory_used@@Base+0x19258>  // b.none
  440b50:	asr	x20, x20, #3
  440b54:	mov	x19, #0x0                   	// #0
  440b58:	ldr	x3, [x21, x19, lsl #3]
  440b5c:	mov	x2, x24
  440b60:	add	x19, x19, #0x1
  440b64:	mov	x1, x23
  440b68:	mov	w0, w22
  440b6c:	blr	x3
  440b70:	cmp	x20, x19
  440b74:	b.ne	440b58 <_obstack_memory_used@@Base+0x19238>  // b.any
  440b78:	ldp	x19, x20, [sp, #16]
  440b7c:	ldp	x21, x22, [sp, #32]
  440b80:	ldp	x23, x24, [sp, #48]
  440b84:	ldp	x29, x30, [sp], #64
  440b88:	ret
  440b8c:	nop
  440b90:	ret
  440b94:	nop
  440b98:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x2d6e0>
  440b9c:	mov	x1, #0x0                   	// #0
  440ba0:	ldr	x2, [x2, #856]
  440ba4:	b	402380 <__cxa_atexit@plt>
  440ba8:	mov	x2, x1
  440bac:	mov	x1, x0
  440bb0:	mov	w0, #0x0                   	// #0
  440bb4:	b	4028a0 <__xstat@plt>
  440bb8:	mov	x2, x1
  440bbc:	mov	w1, w0
  440bc0:	mov	w0, #0x0                   	// #0
  440bc4:	b	4027c0 <__fxstat@plt>
  440bc8:	mov	x2, x1
  440bcc:	mov	x1, x0
  440bd0:	mov	w0, #0x0                   	// #0
  440bd4:	b	402750 <__lxstat@plt>
  440bd8:	mov	x4, x1
  440bdc:	mov	x5, x2
  440be0:	mov	w1, w0
  440be4:	mov	x2, x4
  440be8:	mov	w0, #0x0                   	// #0
  440bec:	mov	w4, w3
  440bf0:	mov	x3, x5
  440bf4:	b	402900 <__fxstatat@plt>

Disassembly of section .fini:

0000000000440bf8 <.fini>:
  440bf8:	stp	x29, x30, [sp, #-16]!
  440bfc:	mov	x29, sp
  440c00:	ldp	x29, x30, [sp], #16
  440c04:	ret
