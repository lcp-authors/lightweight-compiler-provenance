
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Call.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <_init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	10e0 <call_weak_fn>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <.plt>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 12000 <__FRAME_END__+0xf4c4>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <Perl_save_sptr@plt>:
     ea0:	adrp	x16, 13000 <Perl_save_sptr>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <Perl_sv_2iv_flags@plt>:
     eb0:	adrp	x16, 13000 <Perl_save_sptr>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <Perl_stack_grow@plt>:
     ec0:	adrp	x16, 13000 <Perl_save_sptr>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <Perl_sv_catpvn_flags@plt>:
     ed0:	adrp	x16, 13000 <Perl_save_sptr>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <Perl_call_method@plt>:
     ee0:	adrp	x16, 13000 <Perl_save_sptr>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 13000 <Perl_save_sptr>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <Perl_pop_scope@plt>:
     f00:	adrp	x16, 13000 <Perl_save_sptr>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <Perl_my_cxt_init@plt>:
     f10:	adrp	x16, 13000 <Perl_save_sptr>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <Perl_warn_nocontext@plt>:
     f20:	adrp	x16, 13000 <Perl_save_sptr>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <Perl_newSV@plt>:
     f30:	adrp	x16, 13000 <Perl_save_sptr>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <Perl_sv_setiv_mg@plt>:
     f40:	adrp	x16, 13000 <Perl_save_sptr>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <Perl_sv_2pv_flags@plt>:
     f50:	adrp	x16, 13000 <Perl_save_sptr>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <Perl_xs_boot_epilog@plt>:
     f60:	adrp	x16, 13000 <Perl_save_sptr>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <Perl_filter_del@plt>:
     f70:	adrp	x16, 13000 <Perl_save_sptr>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <memmem@plt>:
     f80:	adrp	x16, 13000 <Perl_save_sptr>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <__gmon_start__@plt>:
     f90:	adrp	x16, 13000 <Perl_save_sptr>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <Perl_croak_xs_usage@plt>:
     fa0:	adrp	x16, 13000 <Perl_save_sptr>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <Perl_savetmps@plt>:
     fb0:	adrp	x16, 13000 <Perl_save_sptr>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <Perl_filter_read@plt>:
     fc0:	adrp	x16, 13000 <Perl_save_sptr>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <Perl_mg_size@plt>:
     fd0:	adrp	x16, 13000 <Perl_save_sptr>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <Perl_newSVpv@plt>:
     fe0:	adrp	x16, 13000 <Perl_save_sptr>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <Perl_croak_nocontext@plt>:
     ff0:	adrp	x16, 13000 <Perl_save_sptr>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <Perl_newXS_flags@plt>:
    1000:	adrp	x16, 13000 <Perl_save_sptr>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <Perl_sv_2mortal@plt>:
    1010:	adrp	x16, 13000 <Perl_save_sptr>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <Perl_xs_handshake@plt>:
    1020:	adrp	x16, 13000 <Perl_save_sptr>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <Perl_filter_add@plt>:
    1030:	adrp	x16, 13000 <Perl_save_sptr>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <Perl_free_tmps@plt>:
    1040:	adrp	x16, 13000 <Perl_save_sptr>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

0000000000001050 <Perl_markstack_grow@plt>:
    1050:	adrp	x16, 13000 <Perl_save_sptr>
    1054:	ldr	x17, [x16, #216]
    1058:	add	x16, x16, #0xd8
    105c:	br	x17

0000000000001060 <Perl_sv_setpvn@plt>:
    1060:	adrp	x16, 13000 <Perl_save_sptr>
    1064:	ldr	x17, [x16, #224]
    1068:	add	x16, x16, #0xe0
    106c:	br	x17

0000000000001070 <Perl_call_sv@plt>:
    1070:	adrp	x16, 13000 <Perl_save_sptr>
    1074:	ldr	x17, [x16, #232]
    1078:	add	x16, x16, #0xe8
    107c:	br	x17

0000000000001080 <Perl_push_scope@plt>:
    1080:	adrp	x16, 13000 <Perl_save_sptr>
    1084:	ldr	x17, [x16, #240]
    1088:	add	x16, x16, #0xf0
    108c:	br	x17

0000000000001090 <Perl_gv_add_by_type@plt>:
    1090:	adrp	x16, 13000 <Perl_save_sptr>
    1094:	ldr	x17, [x16, #248]
    1098:	add	x16, x16, #0xf8
    109c:	br	x17

00000000000010a0 <Perl_newSVsv_flags@plt>:
    10a0:	adrp	x16, 13000 <Perl_save_sptr>
    10a4:	ldr	x17, [x16, #256]
    10a8:	add	x16, x16, #0x100
    10ac:	br	x17

00000000000010b0 <Perl_savepv@plt>:
    10b0:	adrp	x16, 13000 <Perl_save_sptr>
    10b4:	ldr	x17, [x16, #264]
    10b8:	add	x16, x16, #0x108
    10bc:	br	x17

00000000000010c0 <Perl_sv_newmortal@plt>:
    10c0:	adrp	x16, 13000 <Perl_save_sptr>
    10c4:	ldr	x17, [x16, #272]
    10c8:	add	x16, x16, #0x110
    10cc:	br	x17

00000000000010d0 <Perl_save_int@plt>:
    10d0:	adrp	x16, 13000 <Perl_save_sptr>
    10d4:	ldr	x17, [x16, #280]
    10d8:	add	x16, x16, #0x118
    10dc:	br	x17

Disassembly of section .text:

00000000000010e0 <call_weak_fn>:
    10e0:	adrp	x0, 12000 <__FRAME_END__+0xf4c4>
    10e4:	ldr	x0, [x0, #4048]
    10e8:	cbz	x0, 10f0 <call_weak_fn+0x10>
    10ec:	b	f90 <__gmon_start__@plt>
    10f0:	ret

00000000000010f4 <deregister_tm_clones>:
    10f4:	stp	x29, x30, [sp, #-32]!
    10f8:	mov	x29, sp
    10fc:	adrp	x0, 13000 <Perl_save_sptr>
    1100:	add	x0, x0, #0x130
    1104:	str	x0, [sp, #24]
    1108:	ldr	x0, [sp, #24]
    110c:	str	x0, [sp, #24]
    1110:	ldr	x1, [sp, #24]
    1114:	adrp	x0, 13000 <Perl_save_sptr>
    1118:	add	x0, x0, #0x130
    111c:	cmp	x1, x0
    1120:	b.eq	1158 <deregister_tm_clones+0x64>  // b.none
    1124:	adrp	x0, 12000 <__FRAME_END__+0xf4c4>
    1128:	ldr	x0, [x0, #4032]
    112c:	str	x0, [sp, #16]
    1130:	ldr	x0, [sp, #16]
    1134:	str	x0, [sp, #16]
    1138:	ldr	x0, [sp, #16]
    113c:	cmp	x0, #0x0
    1140:	b.eq	115c <deregister_tm_clones+0x68>  // b.none
    1144:	ldr	x1, [sp, #16]
    1148:	adrp	x0, 13000 <Perl_save_sptr>
    114c:	add	x0, x0, #0x130
    1150:	blr	x1
    1154:	b	115c <deregister_tm_clones+0x68>
    1158:	nop
    115c:	ldp	x29, x30, [sp], #32
    1160:	ret

0000000000001164 <register_tm_clones>:
    1164:	stp	x29, x30, [sp, #-48]!
    1168:	mov	x29, sp
    116c:	adrp	x0, 13000 <Perl_save_sptr>
    1170:	add	x0, x0, #0x130
    1174:	str	x0, [sp, #40]
    1178:	ldr	x0, [sp, #40]
    117c:	str	x0, [sp, #40]
    1180:	ldr	x1, [sp, #40]
    1184:	adrp	x0, 13000 <Perl_save_sptr>
    1188:	add	x0, x0, #0x130
    118c:	sub	x0, x1, x0
    1190:	asr	x0, x0, #3
    1194:	lsr	x1, x0, #63
    1198:	add	x0, x1, x0
    119c:	asr	x0, x0, #1
    11a0:	str	x0, [sp, #32]
    11a4:	ldr	x0, [sp, #32]
    11a8:	cmp	x0, #0x0
    11ac:	b.eq	11e8 <register_tm_clones+0x84>  // b.none
    11b0:	adrp	x0, 12000 <__FRAME_END__+0xf4c4>
    11b4:	ldr	x0, [x0, #4064]
    11b8:	str	x0, [sp, #24]
    11bc:	ldr	x0, [sp, #24]
    11c0:	str	x0, [sp, #24]
    11c4:	ldr	x0, [sp, #24]
    11c8:	cmp	x0, #0x0
    11cc:	b.eq	11ec <register_tm_clones+0x88>  // b.none
    11d0:	ldr	x2, [sp, #24]
    11d4:	ldr	x1, [sp, #32]
    11d8:	adrp	x0, 13000 <Perl_save_sptr>
    11dc:	add	x0, x0, #0x130
    11e0:	blr	x2
    11e4:	b	11ec <register_tm_clones+0x88>
    11e8:	nop
    11ec:	ldp	x29, x30, [sp], #48
    11f0:	ret

00000000000011f4 <__do_global_dtors_aux>:
    11f4:	stp	x29, x30, [sp, #-16]!
    11f8:	mov	x29, sp
    11fc:	adrp	x0, 13000 <Perl_save_sptr>
    1200:	add	x0, x0, #0x12c
    1204:	ldrb	w0, [x0]
    1208:	and	x0, x0, #0xff
    120c:	cmp	x0, #0x0
    1210:	b.ne	124c <__do_global_dtors_aux+0x58>  // b.any
    1214:	adrp	x0, 12000 <__FRAME_END__+0xf4c4>
    1218:	ldr	x0, [x0, #4040]
    121c:	cmp	x0, #0x0
    1220:	b.eq	1234 <__do_global_dtors_aux+0x40>  // b.none
    1224:	adrp	x0, 13000 <Perl_save_sptr>
    1228:	add	x0, x0, #0x120
    122c:	ldr	x0, [x0]
    1230:	bl	ef0 <__cxa_finalize@plt>
    1234:	bl	10f4 <deregister_tm_clones>
    1238:	adrp	x0, 13000 <Perl_save_sptr>
    123c:	add	x0, x0, #0x12c
    1240:	mov	w1, #0x1                   	// #1
    1244:	strb	w1, [x0]
    1248:	b	1250 <__do_global_dtors_aux+0x5c>
    124c:	nop
    1250:	ldp	x29, x30, [sp], #16
    1254:	ret

0000000000001258 <frame_dummy>:
    1258:	stp	x29, x30, [sp, #-16]!
    125c:	mov	x29, sp
    1260:	bl	1164 <register_tm_clones>
    1264:	nop
    1268:	ldp	x29, x30, [sp], #16
    126c:	ret

0000000000001270 <S_av_top_index>:
    1270:	stp	x29, x30, [sp, #-48]!
    1274:	mov	x29, sp
    1278:	str	x0, [sp, #24]
    127c:	str	x1, [sp, #16]
    1280:	ldr	x0, [sp, #16]
    1284:	ldr	w0, [x0, #12]
    1288:	and	w0, w0, #0x800000
    128c:	cmp	w0, #0x0
    1290:	b.eq	12b4 <S_av_top_index+0x44>  // b.none
    1294:	ldr	x0, [sp, #16]
    1298:	str	x0, [sp, #40]
    129c:	ldr	x0, [sp, #40]
    12a0:	mov	x1, x0
    12a4:	ldr	x0, [sp, #24]
    12a8:	bl	fd0 <Perl_mg_size@plt>
    12ac:	sxtw	x0, w0
    12b0:	b	12c0 <S_av_top_index+0x50>
    12b4:	ldr	x0, [sp, #16]
    12b8:	ldr	x0, [x0]
    12bc:	ldr	x0, [x0, #16]
    12c0:	ldp	x29, x30, [sp], #48
    12c4:	ret

00000000000012c8 <S_POPMARK>:
    12c8:	sub	sp, sp, #0x10
    12cc:	str	x0, [sp, #8]
    12d0:	ldr	x0, [sp, #8]
    12d4:	ldr	x0, [x0, #120]
    12d8:	sub	x2, x0, #0x4
    12dc:	ldr	x1, [sp, #8]
    12e0:	str	x2, [x1, #120]
    12e4:	ldr	w0, [x0]
    12e8:	add	sp, sp, #0x10
    12ec:	ret

00000000000012f0 <S_croak_memory_wrap>:
    12f0:	stp	x29, x30, [sp, #-16]!
    12f4:	mov	x29, sp
    12f8:	adrp	x0, 12000 <__FRAME_END__+0xf4c4>
    12fc:	ldr	x1, [x0, #4056]
    1300:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1304:	add	x0, x0, #0x698
    1308:	bl	ff0 <Perl_croak_nocontext@plt>

000000000000130c <filter_call>:
    130c:	stp	x29, x30, [sp, #-144]!
    1310:	mov	x29, sp
    1314:	str	x19, [sp, #16]
    1318:	str	x0, [sp, #56]
    131c:	str	w1, [sp, #52]
    1320:	str	x2, [sp, #40]
    1324:	str	w3, [sp, #48]
    1328:	ldr	x0, [sp, #56]
    132c:	ldr	x1, [x0, #3032]
    1330:	adrp	x0, 13000 <Perl_save_sptr>
    1334:	add	x0, x0, #0x128
    1338:	ldr	w0, [x0]
    133c:	sxtw	x0, w0
    1340:	lsl	x0, x0, #3
    1344:	add	x0, x1, x0
    1348:	ldr	x0, [x0]
    134c:	str	x0, [sp, #88]
    1350:	ldr	x0, [sp, #56]
    1354:	ldr	x0, [x0, #512]
    1358:	cmp	x0, #0x0
    135c:	b.eq	1384 <filter_call+0x78>  // b.none
    1360:	ldr	x0, [sp, #56]
    1364:	ldr	x0, [x0, #512]
    1368:	ldr	x0, [x0, #288]
    136c:	ldr	x1, [x0, #16]
    1370:	ldrsw	x0, [sp, #52]
    1374:	lsl	x0, x0, #3
    1378:	add	x0, x1, x0
    137c:	ldr	x0, [x0]
    1380:	b	1388 <filter_call+0x7c>
    1384:	mov	x0, #0x0                   	// #0
    1388:	str	x0, [sp, #96]
    138c:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1390:	add	x0, x0, #0x6a0
    1394:	str	x0, [sp, #104]
    1398:	ldr	x0, [sp, #88]
    139c:	ldr	w0, [x0]
    13a0:	cmp	w0, #0x0
    13a4:	b.eq	13f0 <filter_call+0xe4>  // b.none
    13a8:	ldr	x0, [sp, #40]
    13ac:	ldr	x0, [x0]
    13b0:	ldr	x0, [x0, #16]
    13b4:	mov	x1, x0
    13b8:	ldr	x0, [sp, #96]
    13bc:	ldr	x0, [x0]
    13c0:	ldr	x0, [x0, #16]
    13c4:	mov	x2, x0
    13c8:	ldr	x0, [sp, #96]
    13cc:	ldr	x0, [x0, #16]
    13d0:	mov	x5, x0
    13d4:	mov	x4, x2
    13d8:	ldr	w3, [sp, #52]
    13dc:	mov	x2, x1
    13e0:	ldr	w1, [sp, #48]
    13e4:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    13e8:	add	x0, x0, #0x6a8
    13ec:	bl	f20 <Perl_warn_nocontext@plt>
    13f0:	ldr	x0, [sp, #96]
    13f4:	ldr	x0, [x0]
    13f8:	ldr	x0, [x0, #16]
    13fc:	str	w0, [sp, #64]
    1400:	ldr	w0, [sp, #64]
    1404:	cmp	w0, #0x0
    1408:	b.eq	162c <filter_call+0x320>  // b.none
    140c:	ldr	x0, [sp, #96]
    1410:	ldr	x0, [x0, #16]
    1414:	ldr	x1, [sp, #96]
    1418:	ldr	x1, [x1]
    141c:	ldr	x1, [x1, #64]
    1420:	add	x0, x0, x1
    1424:	str	x0, [sp, #112]
    1428:	ldr	w0, [sp, #48]
    142c:	cmp	w0, #0x0
    1430:	b.eq	1510 <filter_call+0x204>  // b.none
    1434:	ldr	x0, [sp, #88]
    1438:	ldr	w0, [x0]
    143c:	cmp	w0, #0x0
    1440:	b.eq	145c <filter_call+0x150>  // b.none
    1444:	ldr	w3, [sp, #48]
    1448:	ldr	w2, [sp, #64]
    144c:	ldr	w1, [sp, #52]
    1450:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1454:	add	x0, x0, #0x6f8
    1458:	bl	f20 <Perl_warn_nocontext@plt>
    145c:	ldr	w0, [sp, #64]
    1460:	ldr	w2, [sp, #48]
    1464:	ldr	w1, [sp, #48]
    1468:	cmp	w2, w0
    146c:	csel	w0, w1, w0, le
    1470:	sxtw	x0, w0
    1474:	mov	w4, #0x2                   	// #2
    1478:	mov	x3, x0
    147c:	ldr	x2, [sp, #112]
    1480:	ldr	x1, [sp, #40]
    1484:	ldr	x0, [sp, #56]
    1488:	bl	ed0 <Perl_sv_catpvn_flags@plt>
    148c:	ldr	w1, [sp, #64]
    1490:	ldr	w0, [sp, #48]
    1494:	cmp	w1, w0
    1498:	b.gt	14c4 <filter_call+0x1b8>
    149c:	ldr	x0, [sp, #96]
    14a0:	ldr	x0, [x0]
    14a4:	str	xzr, [x0, #64]
    14a8:	ldr	x0, [sp, #96]
    14ac:	ldr	x0, [x0, #16]
    14b0:	strb	wzr, [x0]
    14b4:	ldr	x0, [sp, #96]
    14b8:	ldr	x0, [x0]
    14bc:	str	xzr, [x0, #16]
    14c0:	b	1500 <filter_call+0x1f4>
    14c4:	ldr	x0, [sp, #96]
    14c8:	ldr	x0, [x0]
    14cc:	ldr	x2, [x0, #64]
    14d0:	ldrsw	x1, [sp, #48]
    14d4:	ldr	x0, [sp, #96]
    14d8:	ldr	x0, [x0]
    14dc:	add	x1, x2, x1
    14e0:	str	x1, [x0, #64]
    14e4:	ldr	w1, [sp, #64]
    14e8:	ldr	w0, [sp, #48]
    14ec:	sub	w1, w1, w0
    14f0:	ldr	x0, [sp, #96]
    14f4:	ldr	x0, [x0]
    14f8:	sxtw	x1, w1
    14fc:	str	x1, [x0, #16]
    1500:	ldr	x0, [sp, #40]
    1504:	ldr	x0, [x0]
    1508:	ldr	x0, [x0, #16]
    150c:	b	1bec <filter_call+0x8e0>
    1510:	ldrsw	x0, [sp, #64]
    1514:	mov	x3, #0x1                   	// #1
    1518:	ldr	x2, [sp, #104]
    151c:	mov	x1, x0
    1520:	ldr	x0, [sp, #112]
    1524:	bl	f80 <memmem@plt>
    1528:	str	x0, [sp, #120]
    152c:	ldr	x0, [sp, #120]
    1530:	cmp	x0, #0x0
    1534:	b.eq	1610 <filter_call+0x304>  // b.none
    1538:	ldr	x1, [sp, #120]
    153c:	ldr	x0, [sp, #112]
    1540:	sub	x0, x1, x0
    1544:	add	x0, x0, #0x1
    1548:	mov	w4, #0x2                   	// #2
    154c:	mov	x3, x0
    1550:	ldr	x2, [sp, #112]
    1554:	ldr	x1, [sp, #40]
    1558:	ldr	x0, [sp, #56]
    155c:	bl	ed0 <Perl_sv_catpvn_flags@plt>
    1560:	ldr	x1, [sp, #120]
    1564:	ldr	x0, [sp, #112]
    1568:	sub	x0, x1, x0
    156c:	mov	w1, w0
    1570:	ldr	w0, [sp, #64]
    1574:	sub	w0, w0, w1
    1578:	sub	w0, w0, #0x1
    157c:	str	w0, [sp, #64]
    1580:	ldr	x0, [sp, #96]
    1584:	ldr	x0, [x0]
    1588:	ldr	x1, [x0, #64]
    158c:	ldr	x2, [sp, #120]
    1590:	ldr	x0, [sp, #112]
    1594:	sub	x0, x2, x0
    1598:	add	x1, x1, x0
    159c:	ldr	x0, [sp, #96]
    15a0:	ldr	x0, [x0]
    15a4:	add	x1, x1, #0x1
    15a8:	str	x1, [x0, #64]
    15ac:	ldr	x0, [sp, #96]
    15b0:	ldr	x0, [x0]
    15b4:	ldrsw	x1, [sp, #64]
    15b8:	str	x1, [x0, #16]
    15bc:	ldr	x0, [sp, #88]
    15c0:	ldr	w0, [x0]
    15c4:	cmp	w0, #0x0
    15c8:	b.eq	1600 <filter_call+0x2f4>  // b.none
    15cc:	ldr	x0, [sp, #40]
    15d0:	ldr	x0, [x0]
    15d4:	ldr	x0, [x0, #16]
    15d8:	mov	x1, x0
    15dc:	ldr	x0, [sp, #40]
    15e0:	ldr	x0, [x0, #16]
    15e4:	mov	x4, x0
    15e8:	mov	x3, x1
    15ec:	ldr	w2, [sp, #64]
    15f0:	ldr	w1, [sp, #52]
    15f4:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    15f8:	add	x0, x0, #0x720
    15fc:	bl	f20 <Perl_warn_nocontext@plt>
    1600:	ldr	x0, [sp, #40]
    1604:	ldr	x0, [x0]
    1608:	ldr	x0, [x0, #16]
    160c:	b	1bec <filter_call+0x8e0>
    1610:	ldrsw	x0, [sp, #64]
    1614:	mov	w4, #0x2                   	// #2
    1618:	mov	x3, x0
    161c:	ldr	x2, [sp, #112]
    1620:	ldr	x1, [sp, #40]
    1624:	ldr	x0, [sp, #56]
    1628:	bl	ed0 <Perl_sv_catpvn_flags@plt>
    162c:	ldr	x0, [sp, #96]
    1630:	ldr	x0, [x0, #16]
    1634:	strb	wzr, [x0]
    1638:	ldr	x0, [sp, #96]
    163c:	ldr	x0, [x0]
    1640:	str	xzr, [x0, #16]
    1644:	ldr	x0, [sp, #96]
    1648:	ldr	x0, [x0]
    164c:	str	xzr, [x0, #64]
    1650:	ldr	x0, [sp, #96]
    1654:	ldr	x0, [x0]
    1658:	ldr	x0, [x0, #32]
    165c:	cmp	x0, #0x0
    1660:	b.eq	1b24 <filter_call+0x818>  // b.none
    1664:	ldr	x0, [sp, #56]
    1668:	ldr	x0, [x0]
    166c:	str	x0, [sp, #72]
    1670:	ldr	x0, [sp, #88]
    1674:	ldr	w0, [x0]
    1678:	cmp	w0, #0x0
    167c:	b.eq	169c <filter_call+0x390>  // b.none
    1680:	ldr	x0, [sp, #96]
    1684:	ldr	x0, [x0]
    1688:	ldr	x0, [x0, #112]
    168c:	mov	x1, x0
    1690:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1694:	add	x0, x0, #0x750
    1698:	bl	f20 <Perl_warn_nocontext@plt>
    169c:	ldr	x0, [sp, #56]
    16a0:	bl	1080 <Perl_push_scope@plt>
    16a4:	ldr	x0, [sp, #56]
    16a8:	bl	fb0 <Perl_savetmps@plt>
    16ac:	ldr	x0, [sp, #88]
    16b0:	add	x0, x0, #0x4
    16b4:	mov	x1, x0
    16b8:	ldr	x0, [sp, #56]
    16bc:	bl	10d0 <Perl_save_int@plt>
    16c0:	ldr	x0, [sp, #88]
    16c4:	ldr	w1, [sp, #52]
    16c8:	str	w1, [x0, #4]
    16cc:	ldr	x0, [sp, #56]
    16d0:	ldr	x0, [x0, #192]
    16d4:	ldr	x0, [x0, #16]
    16d8:	mov	x1, x0
    16dc:	ldr	x0, [sp, #56]
    16e0:	bl	ea0 <Perl_save_sptr@plt>
    16e4:	ldr	x0, [sp, #56]
    16e8:	ldr	x0, [x0, #192]
    16ec:	ldr	x19, [x0, #16]
    16f0:	mov	x2, #0x0                   	// #0
    16f4:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    16f8:	add	x1, x0, #0x768
    16fc:	ldr	x0, [sp, #56]
    1700:	bl	fe0 <Perl_newSVpv@plt>
    1704:	str	x0, [x19]
    1708:	ldr	x0, [sp, #56]
    170c:	ldr	x0, [x0, #120]
    1710:	add	x1, x0, #0x4
    1714:	ldr	x0, [sp, #56]
    1718:	str	x1, [x0, #120]
    171c:	ldr	x0, [sp, #56]
    1720:	ldr	x0, [x0, #120]
    1724:	str	x0, [sp, #80]
    1728:	ldr	x0, [sp, #56]
    172c:	ldr	x0, [x0, #128]
    1730:	ldr	x1, [sp, #80]
    1734:	cmp	x1, x0
    1738:	cset	w0, eq  // eq = none
    173c:	and	w0, w0, #0xff
    1740:	and	x0, x0, #0xff
    1744:	cmp	x0, #0x0
    1748:	b.eq	1758 <filter_call+0x44c>  // b.none
    174c:	ldr	x0, [sp, #56]
    1750:	bl	1050 <Perl_markstack_grow@plt>
    1754:	str	x0, [sp, #80]
    1758:	ldr	x0, [sp, #56]
    175c:	ldr	x0, [x0, #24]
    1760:	ldr	x1, [sp, #72]
    1764:	sub	x0, x1, x0
    1768:	asr	x0, x0, #3
    176c:	mov	w1, w0
    1770:	ldr	x0, [sp, #80]
    1774:	str	w1, [x0]
    1778:	ldr	x0, [sp, #96]
    177c:	ldr	x0, [x0]
    1780:	ldr	x0, [x0, #56]
    1784:	cmp	x0, #0x0
    1788:	b.eq	17b0 <filter_call+0x4a4>  // b.none
    178c:	ldr	x0, [sp, #96]
    1790:	ldr	x0, [x0]
    1794:	ldr	x0, [x0, #88]
    1798:	mov	w2, #0x2                   	// #2
    179c:	mov	x1, x0
    17a0:	ldr	x0, [sp, #56]
    17a4:	bl	1070 <Perl_call_sv@plt>
    17a8:	str	w0, [sp, #68]
    17ac:	b	1834 <filter_call+0x528>
    17b0:	ldr	x0, [sp, #56]
    17b4:	ldr	x1, [x0, #32]
    17b8:	ldr	x0, [sp, #72]
    17bc:	sub	x0, x1, x0
    17c0:	cmp	x0, #0x0
    17c4:	cset	w0, le
    17c8:	and	w0, w0, #0xff
    17cc:	and	x0, x0, #0xff
    17d0:	cmp	x0, #0x0
    17d4:	b.eq	17f0 <filter_call+0x4e4>  // b.none
    17d8:	mov	x3, #0x1                   	// #1
    17dc:	ldr	x2, [sp, #72]
    17e0:	ldr	x1, [sp, #72]
    17e4:	ldr	x0, [sp, #56]
    17e8:	bl	ec0 <Perl_stack_grow@plt>
    17ec:	str	x0, [sp, #72]
    17f0:	ldr	x0, [sp, #96]
    17f4:	ldr	x0, [x0]
    17f8:	ldr	x1, [sp, #72]
    17fc:	add	x1, x1, #0x8
    1800:	str	x1, [sp, #72]
    1804:	ldr	x1, [x0, #88]
    1808:	ldr	x0, [sp, #72]
    180c:	str	x1, [x0]
    1810:	ldr	x0, [sp, #56]
    1814:	ldr	x1, [sp, #72]
    1818:	str	x1, [x0]
    181c:	mov	w2, #0x2                   	// #2
    1820:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1824:	add	x1, x0, #0x770
    1828:	ldr	x0, [sp, #56]
    182c:	bl	ee0 <Perl_call_method@plt>
    1830:	str	w0, [sp, #68]
    1834:	ldr	x0, [sp, #56]
    1838:	ldr	x0, [x0]
    183c:	str	x0, [sp, #72]
    1840:	ldr	w0, [sp, #68]
    1844:	cmp	w0, #0x1
    1848:	b.eq	186c <filter_call+0x560>  // b.none
    184c:	ldr	x0, [sp, #96]
    1850:	ldr	x0, [x0]
    1854:	ldr	x0, [x0, #112]
    1858:	ldr	w2, [sp, #68]
    185c:	mov	x1, x0
    1860:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1864:	add	x0, x0, #0x778
    1868:	bl	ff0 <Perl_croak_nocontext@plt>
    186c:	ldr	x0, [sp, #72]
    1870:	sub	x1, x0, #0x8
    1874:	str	x1, [sp, #72]
    1878:	ldr	x0, [x0]
    187c:	str	x0, [sp, #128]
    1880:	ldr	x0, [sp, #128]
    1884:	str	x0, [sp, #136]
    1888:	ldr	x0, [sp, #136]
    188c:	ldr	w1, [x0, #12]
    1890:	mov	w0, #0x100                 	// #256
    1894:	movk	w0, #0x20, lsl #16
    1898:	and	w0, w1, w0
    189c:	cmp	w0, #0x100
    18a0:	b.ne	18b4 <filter_call+0x5a8>  // b.any
    18a4:	ldr	x0, [sp, #136]
    18a8:	ldr	x0, [x0]
    18ac:	ldr	x0, [x0, #32]
    18b0:	b	18c4 <filter_call+0x5b8>
    18b4:	mov	w2, #0x2                   	// #2
    18b8:	ldr	x1, [sp, #136]
    18bc:	ldr	x0, [sp, #56]
    18c0:	bl	eb0 <Perl_sv_2iv_flags@plt>
    18c4:	str	w0, [sp, #64]
    18c8:	ldr	x0, [sp, #88]
    18cc:	ldr	w0, [x0]
    18d0:	cmp	w0, #0x0
    18d4:	b.eq	1990 <filter_call+0x684>  // b.none
    18d8:	ldr	x0, [sp, #56]
    18dc:	ldr	x0, [x0, #192]
    18e0:	ldr	x0, [x0, #16]
    18e4:	ldr	x0, [x0]
    18e8:	cmp	x0, #0x0
    18ec:	b.eq	1900 <filter_call+0x5f4>  // b.none
    18f0:	ldr	x0, [sp, #56]
    18f4:	ldr	x0, [x0, #192]
    18f8:	ldr	x0, [x0, #16]
    18fc:	b	191c <filter_call+0x610>
    1900:	ldr	x0, [sp, #56]
    1904:	ldr	x0, [x0, #192]
    1908:	mov	w2, #0x0                   	// #0
    190c:	mov	x1, x0
    1910:	ldr	x0, [sp, #56]
    1914:	bl	1090 <Perl_gv_add_by_type@plt>
    1918:	ldr	x0, [x0, #16]
    191c:	ldr	x0, [x0]
    1920:	ldr	x0, [x0]
    1924:	ldr	x0, [x0, #16]
    1928:	mov	x19, x0
    192c:	ldr	x0, [sp, #56]
    1930:	ldr	x0, [x0, #192]
    1934:	ldr	x0, [x0, #16]
    1938:	ldr	x0, [x0]
    193c:	cmp	x0, #0x0
    1940:	b.eq	1954 <filter_call+0x648>  // b.none
    1944:	ldr	x0, [sp, #56]
    1948:	ldr	x0, [x0, #192]
    194c:	ldr	x0, [x0, #16]
    1950:	b	1970 <filter_call+0x664>
    1954:	ldr	x0, [sp, #56]
    1958:	ldr	x0, [x0, #192]
    195c:	mov	w2, #0x0                   	// #0
    1960:	mov	x1, x0
    1964:	ldr	x0, [sp, #56]
    1968:	bl	1090 <Perl_gv_add_by_type@plt>
    196c:	ldr	x0, [x0, #16]
    1970:	ldr	x0, [x0]
    1974:	ldr	x0, [x0, #16]
    1978:	mov	x3, x0
    197c:	mov	x2, x19
    1980:	ldr	w1, [sp, #64]
    1984:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1988:	add	x0, x0, #0x7c0
    198c:	bl	f20 <Perl_warn_nocontext@plt>
    1990:	ldr	x0, [sp, #56]
    1994:	ldr	x0, [x0, #192]
    1998:	ldr	x0, [x0, #16]
    199c:	ldr	x0, [x0]
    19a0:	cmp	x0, #0x0
    19a4:	b.eq	19b8 <filter_call+0x6ac>  // b.none
    19a8:	ldr	x0, [sp, #56]
    19ac:	ldr	x0, [x0, #192]
    19b0:	ldr	x0, [x0, #16]
    19b4:	b	19d4 <filter_call+0x6c8>
    19b8:	ldr	x0, [sp, #56]
    19bc:	ldr	x0, [x0, #192]
    19c0:	mov	w2, #0x0                   	// #0
    19c4:	mov	x1, x0
    19c8:	ldr	x0, [sp, #56]
    19cc:	bl	1090 <Perl_gv_add_by_type@plt>
    19d0:	ldr	x0, [x0, #16]
    19d4:	ldr	x0, [x0]
    19d8:	ldr	x0, [x0]
    19dc:	ldr	x0, [x0, #16]
    19e0:	cmp	x0, #0x0
    19e4:	b.eq	1a98 <filter_call+0x78c>  // b.none
    19e8:	ldr	x0, [sp, #56]
    19ec:	ldr	x0, [x0, #192]
    19f0:	ldr	x0, [x0, #16]
    19f4:	ldr	x0, [x0]
    19f8:	cmp	x0, #0x0
    19fc:	b.eq	1a10 <filter_call+0x704>  // b.none
    1a00:	ldr	x0, [sp, #56]
    1a04:	ldr	x0, [x0, #192]
    1a08:	ldr	x0, [x0, #16]
    1a0c:	b	1a2c <filter_call+0x720>
    1a10:	ldr	x0, [sp, #56]
    1a14:	ldr	x0, [x0, #192]
    1a18:	mov	w2, #0x0                   	// #0
    1a1c:	mov	x1, x0
    1a20:	ldr	x0, [sp, #56]
    1a24:	bl	1090 <Perl_gv_add_by_type@plt>
    1a28:	ldr	x0, [x0, #16]
    1a2c:	ldr	x0, [x0]
    1a30:	ldr	x19, [x0, #16]
    1a34:	ldr	x0, [sp, #56]
    1a38:	ldr	x0, [x0, #192]
    1a3c:	ldr	x0, [x0, #16]
    1a40:	ldr	x0, [x0]
    1a44:	cmp	x0, #0x0
    1a48:	b.eq	1a5c <filter_call+0x750>  // b.none
    1a4c:	ldr	x0, [sp, #56]
    1a50:	ldr	x0, [x0, #192]
    1a54:	ldr	x0, [x0, #16]
    1a58:	b	1a78 <filter_call+0x76c>
    1a5c:	ldr	x0, [sp, #56]
    1a60:	ldr	x0, [x0, #192]
    1a64:	mov	w2, #0x0                   	// #0
    1a68:	mov	x1, x0
    1a6c:	ldr	x0, [sp, #56]
    1a70:	bl	1090 <Perl_gv_add_by_type@plt>
    1a74:	ldr	x0, [x0, #16]
    1a78:	ldr	x0, [x0]
    1a7c:	ldr	x0, [x0]
    1a80:	ldr	x0, [x0, #16]
    1a84:	mov	x3, x0
    1a88:	mov	x2, x19
    1a8c:	ldr	x1, [sp, #96]
    1a90:	ldr	x0, [sp, #56]
    1a94:	bl	1060 <Perl_sv_setpvn@plt>
    1a98:	ldr	x0, [sp, #56]
    1a9c:	ldr	x0, [x0, #192]
    1aa0:	ldr	x0, [x0, #16]
    1aa4:	ldr	x0, [x0]
    1aa8:	cmp	x0, #0x0
    1aac:	b.eq	1ac0 <filter_call+0x7b4>  // b.none
    1ab0:	ldr	x0, [sp, #56]
    1ab4:	ldr	x0, [x0, #192]
    1ab8:	ldr	x0, [x0, #16]
    1abc:	b	1adc <filter_call+0x7d0>
    1ac0:	ldr	x0, [sp, #56]
    1ac4:	ldr	x0, [x0, #192]
    1ac8:	mov	w2, #0x0                   	// #0
    1acc:	mov	x1, x0
    1ad0:	ldr	x0, [sp, #56]
    1ad4:	bl	1090 <Perl_gv_add_by_type@plt>
    1ad8:	ldr	x0, [x0, #16]
    1adc:	ldr	x0, [x0]
    1ae0:	mov	x1, x0
    1ae4:	ldr	x0, [sp, #56]
    1ae8:	bl	1010 <Perl_sv_2mortal@plt>
    1aec:	ldr	x0, [sp, #56]
    1af0:	ldr	x1, [sp, #72]
    1af4:	str	x1, [x0]
    1af8:	ldr	x0, [sp, #56]
    1afc:	ldr	x1, [x0, #80]
    1b00:	ldr	x0, [sp, #56]
    1b04:	ldr	x0, [x0, #88]
    1b08:	cmp	x1, x0
    1b0c:	b.le	1b18 <filter_call+0x80c>
    1b10:	ldr	x0, [sp, #56]
    1b14:	bl	1040 <Perl_free_tmps@plt>
    1b18:	ldr	x0, [sp, #56]
    1b1c:	bl	f00 <Perl_pop_scope@plt>
    1b20:	b	1b44 <filter_call+0x838>
    1b24:	ldr	w0, [sp, #52]
    1b28:	add	w0, w0, #0x1
    1b2c:	ldr	w3, [sp, #48]
    1b30:	ldr	x2, [sp, #96]
    1b34:	mov	w1, w0
    1b38:	ldr	x0, [sp, #56]
    1b3c:	bl	fc0 <Perl_filter_read@plt>
    1b40:	str	w0, [sp, #64]
    1b44:	ldr	w0, [sp, #64]
    1b48:	cmp	w0, #0x0
    1b4c:	b.gt	13f0 <filter_call+0xe4>
    1b50:	ldr	x0, [sp, #88]
    1b54:	ldr	w0, [x0]
    1b58:	cmp	w0, #0x0
    1b5c:	b.eq	1ba0 <filter_call+0x894>  // b.none
    1b60:	ldr	x0, [sp, #40]
    1b64:	ldr	x0, [x0]
    1b68:	ldr	x0, [x0, #16]
    1b6c:	cmp	x0, #0x0
    1b70:	b.eq	1b84 <filter_call+0x878>  // b.none
    1b74:	ldr	x0, [sp, #40]
    1b78:	ldr	x0, [x0]
    1b7c:	ldr	x0, [x0, #16]
    1b80:	b	1b88 <filter_call+0x87c>
    1b84:	ldrsw	x0, [sp, #64]
    1b88:	mov	x3, x0
    1b8c:	ldr	w2, [sp, #64]
    1b90:	ldr	w1, [sp, #52]
    1b94:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1b98:	add	x0, x0, #0x7e8
    1b9c:	bl	f20 <Perl_warn_nocontext@plt>
    1ba0:	adrp	x0, 1000 <Perl_newXS_flags@plt>
    1ba4:	add	x1, x0, #0x30c
    1ba8:	ldr	x0, [sp, #56]
    1bac:	bl	f70 <Perl_filter_del@plt>
    1bb0:	ldr	w0, [sp, #64]
    1bb4:	cmp	w0, #0x0
    1bb8:	b.ge	1bc4 <filter_call+0x8b8>  // b.tcont
    1bbc:	ldr	w0, [sp, #64]
    1bc0:	b	1bec <filter_call+0x8e0>
    1bc4:	ldr	x0, [sp, #40]
    1bc8:	ldr	x0, [x0]
    1bcc:	ldr	x0, [x0, #16]
    1bd0:	cmp	x0, #0x0
    1bd4:	b.eq	1be8 <filter_call+0x8dc>  // b.none
    1bd8:	ldr	x0, [sp, #40]
    1bdc:	ldr	x0, [x0]
    1be0:	ldr	x0, [x0, #16]
    1be4:	b	1bec <filter_call+0x8e0>
    1be8:	ldr	w0, [sp, #64]
    1bec:	ldr	x19, [sp, #16]
    1bf0:	ldp	x29, x30, [sp], #144
    1bf4:	ret

0000000000001bf8 <XS_Filter__Util__Call_filter_read>:
    1bf8:	stp	x29, x30, [sp, #-112]!
    1bfc:	mov	x29, sp
    1c00:	str	x0, [sp, #24]
    1c04:	str	x1, [sp, #16]
    1c08:	ldr	x0, [sp, #24]
    1c0c:	ldr	x0, [x0]
    1c10:	str	x0, [sp, #56]
    1c14:	ldr	x0, [sp, #24]
    1c18:	bl	12c8 <S_POPMARK>
    1c1c:	str	w0, [sp, #44]
    1c20:	ldr	x0, [sp, #24]
    1c24:	ldr	x1, [x0, #24]
    1c28:	ldr	w0, [sp, #44]
    1c2c:	add	w2, w0, #0x1
    1c30:	str	w2, [sp, #44]
    1c34:	sxtw	x0, w0
    1c38:	lsl	x0, x0, #3
    1c3c:	add	x0, x1, x0
    1c40:	str	x0, [sp, #64]
    1c44:	ldr	x1, [sp, #56]
    1c48:	ldr	x0, [sp, #64]
    1c4c:	sub	x0, x1, x0
    1c50:	asr	x0, x0, #3
    1c54:	str	w0, [sp, #48]
    1c58:	ldr	w0, [sp, #48]
    1c5c:	cmp	w0, #0x0
    1c60:	b.lt	1c70 <XS_Filter__Util__Call_filter_read+0x78>  // b.tstop
    1c64:	ldr	w0, [sp, #48]
    1c68:	cmp	w0, #0x1
    1c6c:	b.le	1c80 <XS_Filter__Util__Call_filter_read+0x88>
    1c70:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1c74:	add	x1, x0, #0x818
    1c78:	ldr	x0, [sp, #16]
    1c7c:	bl	fa0 <Perl_croak_xs_usage@plt>
    1c80:	ldr	x0, [sp, #24]
    1c84:	ldr	x0, [x0, #8]
    1c88:	ldrb	w0, [x0, #35]
    1c8c:	and	w0, w0, #0x4
    1c90:	cmp	w0, #0x0
    1c94:	b.eq	1cbc <XS_Filter__Util__Call_filter_read+0xc4>  // b.none
    1c98:	ldr	x0, [sp, #24]
    1c9c:	ldr	x1, [x0, #16]
    1ca0:	ldr	x0, [sp, #24]
    1ca4:	ldr	x0, [x0, #8]
    1ca8:	ldr	x0, [x0, #24]
    1cac:	lsl	x0, x0, #3
    1cb0:	add	x0, x1, x0
    1cb4:	ldr	x0, [x0]
    1cb8:	b	1cc4 <XS_Filter__Util__Call_filter_read+0xcc>
    1cbc:	ldr	x0, [sp, #24]
    1cc0:	bl	10c0 <Perl_sv_newmortal@plt>
    1cc4:	str	x0, [sp, #72]
    1cc8:	ldr	w0, [sp, #48]
    1ccc:	cmp	w0, #0x0
    1cd0:	b.gt	1cdc <XS_Filter__Util__Call_filter_read+0xe4>
    1cd4:	str	wzr, [sp, #40]
    1cd8:	b	1d5c <XS_Filter__Util__Call_filter_read+0x164>
    1cdc:	ldr	x0, [sp, #24]
    1ce0:	ldr	x1, [x0, #24]
    1ce4:	ldrsw	x0, [sp, #44]
    1ce8:	lsl	x0, x0, #3
    1cec:	add	x0, x1, x0
    1cf0:	ldr	x0, [x0]
    1cf4:	ldr	w1, [x0, #12]
    1cf8:	mov	w0, #0x100                 	// #256
    1cfc:	movk	w0, #0x20, lsl #16
    1d00:	and	w0, w1, w0
    1d04:	cmp	w0, #0x100
    1d08:	b.ne	1d30 <XS_Filter__Util__Call_filter_read+0x138>  // b.any
    1d0c:	ldr	x0, [sp, #24]
    1d10:	ldr	x1, [x0, #24]
    1d14:	ldrsw	x0, [sp, #44]
    1d18:	lsl	x0, x0, #3
    1d1c:	add	x0, x1, x0
    1d20:	ldr	x0, [x0]
    1d24:	ldr	x0, [x0]
    1d28:	ldr	x0, [x0, #32]
    1d2c:	b	1d58 <XS_Filter__Util__Call_filter_read+0x160>
    1d30:	ldr	x0, [sp, #24]
    1d34:	ldr	x1, [x0, #24]
    1d38:	ldrsw	x0, [sp, #44]
    1d3c:	lsl	x0, x0, #3
    1d40:	add	x0, x1, x0
    1d44:	ldr	x0, [x0]
    1d48:	mov	w2, #0x2                   	// #2
    1d4c:	mov	x1, x0
    1d50:	ldr	x0, [sp, #24]
    1d54:	bl	eb0 <Perl_sv_2iv_flags@plt>
    1d58:	str	w0, [sp, #40]
    1d5c:	ldr	x0, [sp, #24]
    1d60:	ldr	x1, [x0, #3032]
    1d64:	adrp	x0, 13000 <Perl_save_sptr>
    1d68:	add	x0, x0, #0x128
    1d6c:	ldr	w0, [x0]
    1d70:	sxtw	x0, w0
    1d74:	lsl	x0, x0, #3
    1d78:	add	x0, x1, x0
    1d7c:	ldr	x0, [x0]
    1d80:	str	x0, [sp, #80]
    1d84:	ldr	x0, [sp, #24]
    1d88:	ldr	x0, [x0, #192]
    1d8c:	ldr	x0, [x0, #16]
    1d90:	ldr	x0, [x0]
    1d94:	cmp	x0, #0x0
    1d98:	b.eq	1dac <XS_Filter__Util__Call_filter_read+0x1b4>  // b.none
    1d9c:	ldr	x0, [sp, #24]
    1da0:	ldr	x0, [x0, #192]
    1da4:	ldr	x0, [x0, #16]
    1da8:	b	1dc8 <XS_Filter__Util__Call_filter_read+0x1d0>
    1dac:	ldr	x0, [sp, #24]
    1db0:	ldr	x0, [x0, #192]
    1db4:	mov	w2, #0x0                   	// #0
    1db8:	mov	x1, x0
    1dbc:	ldr	x0, [sp, #24]
    1dc0:	bl	1090 <Perl_gv_add_by_type@plt>
    1dc4:	ldr	x0, [x0, #16]
    1dc8:	ldr	x0, [x0]
    1dcc:	str	x0, [sp, #88]
    1dd0:	ldr	x0, [sp, #80]
    1dd4:	ldr	w0, [x0, #4]
    1dd8:	add	w0, w0, #0x1
    1ddc:	ldr	w3, [sp, #40]
    1de0:	ldr	x2, [sp, #88]
    1de4:	mov	w1, w0
    1de8:	ldr	x0, [sp, #24]
    1dec:	bl	fc0 <Perl_filter_read@plt>
    1df0:	str	w0, [sp, #52]
    1df4:	ldr	x0, [sp, #24]
    1df8:	ldr	x1, [x0, #24]
    1dfc:	ldrsw	x0, [sp, #44]
    1e00:	lsl	x0, x0, #3
    1e04:	sub	x0, x0, #0x8
    1e08:	add	x0, x1, x0
    1e0c:	str	x0, [sp, #56]
    1e10:	ldrsw	x0, [sp, #52]
    1e14:	str	x0, [sp, #96]
    1e18:	ldr	x0, [sp, #72]
    1e1c:	ldr	w1, [x0, #12]
    1e20:	mov	w0, #0x8ff                 	// #2303
    1e24:	movk	w0, #0x9981, lsl #16
    1e28:	and	w0, w1, w0
    1e2c:	cmp	w0, #0x1
    1e30:	cset	w0, eq  // eq = none
    1e34:	and	w0, w0, #0xff
    1e38:	mov	w1, w0
    1e3c:	ldr	x0, [sp, #24]
    1e40:	ldrb	w0, [x0, #185]
    1e44:	eor	w0, w0, #0x1
    1e48:	and	w0, w0, #0xff
    1e4c:	and	w0, w1, w0
    1e50:	cmp	w0, #0x0
    1e54:	cset	w0, ne  // ne = any
    1e58:	and	w0, w0, #0xff
    1e5c:	and	x0, x0, #0xff
    1e60:	cmp	x0, #0x0
    1e64:	b.eq	1e90 <XS_Filter__Util__Call_filter_read+0x298>  // b.none
    1e68:	ldr	x0, [sp, #72]
    1e6c:	ldr	w1, [x0, #12]
    1e70:	mov	w0, #0x1100                	// #4352
    1e74:	orr	w1, w1, w0
    1e78:	ldr	x0, [sp, #72]
    1e7c:	str	w1, [x0, #12]
    1e80:	ldr	x0, [sp, #72]
    1e84:	ldr	x1, [sp, #96]
    1e88:	str	x1, [x0, #16]
    1e8c:	b	1ea0 <XS_Filter__Util__Call_filter_read+0x2a8>
    1e90:	ldr	x2, [sp, #96]
    1e94:	ldr	x1, [sp, #72]
    1e98:	ldr	x0, [sp, #24]
    1e9c:	bl	f40 <Perl_sv_setiv_mg@plt>
    1ea0:	ldr	x0, [sp, #56]
    1ea4:	add	x0, x0, #0x8
    1ea8:	str	x0, [sp, #56]
    1eac:	ldr	x0, [sp, #56]
    1eb0:	ldr	x1, [sp, #72]
    1eb4:	str	x1, [x0]
    1eb8:	mov	x0, #0x1                   	// #1
    1ebc:	str	x0, [sp, #104]
    1ec0:	ldr	x0, [sp, #24]
    1ec4:	ldr	x1, [x0, #24]
    1ec8:	ldrsw	x2, [sp, #44]
    1ecc:	ldr	x0, [sp, #104]
    1ed0:	add	x0, x2, x0
    1ed4:	lsl	x0, x0, #3
    1ed8:	sub	x0, x0, #0x8
    1edc:	add	x1, x1, x0
    1ee0:	ldr	x0, [sp, #24]
    1ee4:	str	x1, [x0]
    1ee8:	nop
    1eec:	ldp	x29, x30, [sp], #112
    1ef0:	ret

0000000000001ef4 <XS_Filter__Util__Call_real_import>:
    1ef4:	stp	x29, x30, [sp, #-112]!
    1ef8:	mov	x29, sp
    1efc:	str	x19, [sp, #16]
    1f00:	str	x0, [sp, #40]
    1f04:	str	x1, [sp, #32]
    1f08:	ldr	x0, [sp, #40]
    1f0c:	ldr	x0, [x0]
    1f10:	str	x0, [sp, #64]
    1f14:	ldr	x0, [sp, #40]
    1f18:	bl	12c8 <S_POPMARK>
    1f1c:	str	w0, [sp, #56]
    1f20:	ldr	x0, [sp, #40]
    1f24:	ldr	x1, [x0, #24]
    1f28:	ldr	w0, [sp, #56]
    1f2c:	add	w2, w0, #0x1
    1f30:	str	w2, [sp, #56]
    1f34:	sxtw	x0, w0
    1f38:	lsl	x0, x0, #3
    1f3c:	add	x0, x1, x0
    1f40:	str	x0, [sp, #72]
    1f44:	ldr	x1, [sp, #64]
    1f48:	ldr	x0, [sp, #72]
    1f4c:	sub	x0, x1, x0
    1f50:	asr	x0, x0, #3
    1f54:	str	w0, [sp, #60]
    1f58:	ldr	w0, [sp, #60]
    1f5c:	cmp	w0, #0x3
    1f60:	b.eq	1f74 <XS_Filter__Util__Call_real_import+0x80>  // b.none
    1f64:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    1f68:	add	x1, x0, #0x820
    1f6c:	ldr	x0, [sp, #32]
    1f70:	bl	fa0 <Perl_croak_xs_usage@plt>
    1f74:	ldrsw	x0, [sp, #60]
    1f78:	lsl	x0, x0, #3
    1f7c:	neg	x0, x0
    1f80:	ldr	x1, [sp, #64]
    1f84:	add	x0, x1, x0
    1f88:	str	x0, [sp, #64]
    1f8c:	ldr	x0, [sp, #40]
    1f90:	ldr	x1, [x0, #24]
    1f94:	ldrsw	x0, [sp, #56]
    1f98:	lsl	x0, x0, #3
    1f9c:	add	x0, x1, x0
    1fa0:	ldr	x0, [x0]
    1fa4:	str	x0, [sp, #80]
    1fa8:	ldr	x0, [sp, #40]
    1fac:	ldr	x1, [x0, #24]
    1fb0:	ldrsw	x0, [sp, #56]
    1fb4:	add	x0, x0, #0x1
    1fb8:	lsl	x0, x0, #3
    1fbc:	add	x0, x1, x0
    1fc0:	ldr	x0, [x0]
    1fc4:	ldr	w1, [x0, #12]
    1fc8:	mov	w0, #0x400                 	// #1024
    1fcc:	movk	w0, #0x20, lsl #16
    1fd0:	and	w0, w1, w0
    1fd4:	cmp	w0, #0x400
    1fd8:	b.ne	2000 <XS_Filter__Util__Call_real_import+0x10c>  // b.any
    1fdc:	ldr	x0, [sp, #40]
    1fe0:	ldr	x1, [x0, #24]
    1fe4:	ldrsw	x0, [sp, #56]
    1fe8:	add	x0, x0, #0x1
    1fec:	lsl	x0, x0, #3
    1ff0:	add	x0, x1, x0
    1ff4:	ldr	x0, [x0]
    1ff8:	ldr	x0, [x0, #16]
    1ffc:	b	2030 <XS_Filter__Util__Call_real_import+0x13c>
    2000:	ldr	x0, [sp, #40]
    2004:	ldr	x1, [x0, #24]
    2008:	ldrsw	x0, [sp, #56]
    200c:	add	x0, x0, #0x1
    2010:	lsl	x0, x0, #3
    2014:	add	x0, x1, x0
    2018:	ldr	x0, [x0]
    201c:	mov	w3, #0x2                   	// #2
    2020:	mov	x2, #0x0                   	// #0
    2024:	mov	x1, x0
    2028:	ldr	x0, [sp, #40]
    202c:	bl	f50 <Perl_sv_2pv_flags@plt>
    2030:	str	x0, [sp, #88]
    2034:	ldr	x0, [sp, #40]
    2038:	ldr	x1, [x0, #24]
    203c:	ldrsw	x0, [sp, #56]
    2040:	add	x0, x0, #0x2
    2044:	lsl	x0, x0, #3
    2048:	add	x0, x1, x0
    204c:	ldr	x0, [x0]
    2050:	ldr	w1, [x0, #12]
    2054:	mov	w0, #0x100                 	// #256
    2058:	movk	w0, #0x20, lsl #16
    205c:	and	w0, w1, w0
    2060:	cmp	w0, #0x100
    2064:	b.ne	2090 <XS_Filter__Util__Call_real_import+0x19c>  // b.any
    2068:	ldr	x0, [sp, #40]
    206c:	ldr	x1, [x0, #24]
    2070:	ldrsw	x0, [sp, #56]
    2074:	add	x0, x0, #0x2
    2078:	lsl	x0, x0, #3
    207c:	add	x0, x1, x0
    2080:	ldr	x0, [x0]
    2084:	ldr	x0, [x0]
    2088:	ldr	x0, [x0, #32]
    208c:	b	20bc <XS_Filter__Util__Call_real_import+0x1c8>
    2090:	ldr	x0, [sp, #40]
    2094:	ldr	x1, [x0, #24]
    2098:	ldrsw	x0, [sp, #56]
    209c:	add	x0, x0, #0x2
    20a0:	lsl	x0, x0, #3
    20a4:	add	x0, x1, x0
    20a8:	ldr	x0, [x0]
    20ac:	mov	w2, #0x2                   	// #2
    20b0:	mov	x1, x0
    20b4:	ldr	x0, [sp, #40]
    20b8:	bl	eb0 <Perl_sv_2iv_flags@plt>
    20bc:	str	x0, [sp, #96]
    20c0:	mov	x1, #0x1                   	// #1
    20c4:	ldr	x0, [sp, #40]
    20c8:	bl	f30 <Perl_newSV@plt>
    20cc:	str	x0, [sp, #104]
    20d0:	ldr	x0, [sp, #104]
    20d4:	ldr	w1, [x0, #12]
    20d8:	mov	w0, #0xff                  	// #255
    20dc:	movk	w0, #0x5fff, lsl #16
    20e0:	and	w1, w1, w0
    20e4:	ldr	x0, [sp, #104]
    20e8:	str	w1, [x0, #12]
    20ec:	ldr	x0, [sp, #104]
    20f0:	ldr	w1, [x0, #12]
    20f4:	mov	w0, #0x4400                	// #17408
    20f8:	orr	w1, w1, w0
    20fc:	ldr	x0, [sp, #104]
    2100:	str	w1, [x0, #12]
    2104:	ldr	x2, [sp, #104]
    2108:	adrp	x0, 1000 <Perl_newXS_flags@plt>
    210c:	add	x1, x0, #0x30c
    2110:	ldr	x0, [sp, #40]
    2114:	bl	1030 <Perl_filter_add@plt>
    2118:	ldr	x0, [sp, #104]
    211c:	ldr	x19, [x0]
    2120:	ldr	x1, [sp, #88]
    2124:	ldr	x0, [sp, #40]
    2128:	bl	10b0 <Perl_savepv@plt>
    212c:	str	x0, [x19, #112]
    2130:	ldr	x0, [sp, #104]
    2134:	ldr	x19, [x0]
    2138:	mov	w2, #0x12                  	// #18
    213c:	ldr	x1, [sp, #80]
    2140:	ldr	x0, [sp, #40]
    2144:	bl	10a0 <Perl_newSVsv_flags@plt>
    2148:	str	x0, [x19, #88]
    214c:	ldr	x0, [sp, #104]
    2150:	ldr	x0, [x0]
    2154:	mov	x1, #0x1                   	// #1
    2158:	str	x1, [x0, #32]
    215c:	ldr	x0, [sp, #104]
    2160:	ldr	x0, [x0]
    2164:	str	xzr, [x0, #64]
    2168:	ldr	x0, [sp, #104]
    216c:	ldr	x0, [x0]
    2170:	ldr	x1, [sp, #96]
    2174:	str	x1, [x0, #56]
    2178:	ldr	x0, [sp, #104]
    217c:	ldr	x0, [x0]
    2180:	str	xzr, [x0, #16]
    2184:	ldr	x0, [sp, #40]
    2188:	ldr	x1, [sp, #64]
    218c:	str	x1, [x0]
    2190:	nop
    2194:	ldr	x19, [sp, #16]
    2198:	ldp	x29, x30, [sp], #112
    219c:	ret

00000000000021a0 <XS_Filter__Util__Call_filter_del>:
    21a0:	stp	x29, x30, [sp, #-96]!
    21a4:	mov	x29, sp
    21a8:	str	x19, [sp, #16]
    21ac:	str	x0, [sp, #40]
    21b0:	str	x1, [sp, #32]
    21b4:	ldr	x0, [sp, #40]
    21b8:	ldr	x0, [x0]
    21bc:	str	x0, [sp, #64]
    21c0:	ldr	x0, [sp, #40]
    21c4:	bl	12c8 <S_POPMARK>
    21c8:	str	w0, [sp, #56]
    21cc:	ldr	x0, [sp, #40]
    21d0:	ldr	x1, [x0, #24]
    21d4:	ldr	w0, [sp, #56]
    21d8:	add	w2, w0, #0x1
    21dc:	str	w2, [sp, #56]
    21e0:	sxtw	x0, w0
    21e4:	lsl	x0, x0, #3
    21e8:	add	x0, x1, x0
    21ec:	str	x0, [sp, #72]
    21f0:	ldr	x1, [sp, #64]
    21f4:	ldr	x0, [sp, #72]
    21f8:	sub	x0, x1, x0
    21fc:	asr	x0, x0, #3
    2200:	str	w0, [sp, #60]
    2204:	ldr	w0, [sp, #60]
    2208:	cmp	w0, #0x0
    220c:	b.eq	2220 <XS_Filter__Util__Call_filter_del+0x80>  // b.none
    2210:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2214:	add	x1, x0, #0x768
    2218:	ldr	x0, [sp, #32]
    221c:	bl	fa0 <Perl_croak_xs_usage@plt>
    2220:	ldr	x0, [sp, #40]
    2224:	ldr	x1, [x0, #3032]
    2228:	adrp	x0, 13000 <Perl_save_sptr>
    222c:	add	x0, x0, #0x128
    2230:	ldr	w0, [x0]
    2234:	sxtw	x0, w0
    2238:	lsl	x0, x0, #3
    223c:	add	x0, x1, x0
    2240:	ldr	x0, [x0]
    2244:	str	x0, [sp, #80]
    2248:	ldr	x0, [sp, #40]
    224c:	ldr	x0, [x0, #512]
    2250:	cmp	x0, #0x0
    2254:	b.eq	2370 <XS_Filter__Util__Call_filter_del+0x1d0>  // b.none
    2258:	ldr	x0, [sp, #40]
    225c:	ldr	x0, [x0, #512]
    2260:	ldr	x0, [x0, #288]
    2264:	cmp	x0, #0x0
    2268:	b.eq	2370 <XS_Filter__Util__Call_filter_del+0x1d0>  // b.none
    226c:	ldr	x0, [sp, #80]
    2270:	ldr	w0, [x0, #4]
    2274:	sxtw	x19, w0
    2278:	ldr	x0, [sp, #40]
    227c:	ldr	x0, [x0, #512]
    2280:	ldr	x0, [x0, #288]
    2284:	mov	x1, x0
    2288:	ldr	x0, [sp, #40]
    228c:	bl	1270 <S_av_top_index>
    2290:	cmp	x19, x0
    2294:	b.gt	2370 <XS_Filter__Util__Call_filter_del+0x1d0>
    2298:	ldr	x0, [sp, #40]
    229c:	ldr	x0, [x0, #512]
    22a0:	cmp	x0, #0x0
    22a4:	b.eq	2370 <XS_Filter__Util__Call_filter_del+0x1d0>  // b.none
    22a8:	ldr	x0, [sp, #40]
    22ac:	ldr	x0, [x0, #512]
    22b0:	ldr	x0, [x0, #288]
    22b4:	ldr	x1, [x0, #16]
    22b8:	ldr	x0, [sp, #80]
    22bc:	ldr	w0, [x0, #4]
    22c0:	sxtw	x0, w0
    22c4:	lsl	x0, x0, #3
    22c8:	add	x0, x1, x0
    22cc:	ldr	x0, [x0]
    22d0:	cmp	x0, #0x0
    22d4:	b.eq	2370 <XS_Filter__Util__Call_filter_del+0x1d0>  // b.none
    22d8:	ldr	x0, [sp, #40]
    22dc:	ldr	x0, [x0, #512]
    22e0:	cmp	x0, #0x0
    22e4:	b.eq	2314 <XS_Filter__Util__Call_filter_del+0x174>  // b.none
    22e8:	ldr	x0, [sp, #40]
    22ec:	ldr	x0, [x0, #512]
    22f0:	ldr	x0, [x0, #288]
    22f4:	ldr	x1, [x0, #16]
    22f8:	ldr	x0, [sp, #80]
    22fc:	ldr	w0, [x0, #4]
    2300:	sxtw	x0, w0
    2304:	lsl	x0, x0, #3
    2308:	add	x0, x1, x0
    230c:	ldr	x0, [x0]
    2310:	b	2318 <XS_Filter__Util__Call_filter_del+0x178>
    2314:	mov	x0, #0x0                   	// #0
    2318:	ldr	x0, [x0]
    231c:	ldr	x0, [x0, #32]
    2320:	cmp	x0, #0x0
    2324:	b.eq	2370 <XS_Filter__Util__Call_filter_del+0x1d0>  // b.none
    2328:	ldr	x0, [sp, #40]
    232c:	ldr	x0, [x0, #512]
    2330:	cmp	x0, #0x0
    2334:	b.eq	2364 <XS_Filter__Util__Call_filter_del+0x1c4>  // b.none
    2338:	ldr	x0, [sp, #40]
    233c:	ldr	x0, [x0, #512]
    2340:	ldr	x0, [x0, #288]
    2344:	ldr	x1, [x0, #16]
    2348:	ldr	x0, [sp, #80]
    234c:	ldr	w0, [x0, #4]
    2350:	sxtw	x0, w0
    2354:	lsl	x0, x0, #3
    2358:	add	x0, x1, x0
    235c:	ldr	x0, [x0]
    2360:	b	2368 <XS_Filter__Util__Call_filter_del+0x1c8>
    2364:	mov	x0, #0x0                   	// #0
    2368:	ldr	x0, [x0]
    236c:	str	xzr, [x0, #32]
    2370:	str	xzr, [sp, #88]
    2374:	ldr	x0, [sp, #40]
    2378:	ldr	x1, [x0, #24]
    237c:	ldrsw	x2, [sp, #56]
    2380:	ldr	x0, [sp, #88]
    2384:	add	x0, x2, x0
    2388:	lsl	x0, x0, #3
    238c:	sub	x0, x0, #0x8
    2390:	add	x1, x1, x0
    2394:	ldr	x0, [sp, #40]
    2398:	str	x1, [x0]
    239c:	nop
    23a0:	ldr	x19, [sp, #16]
    23a4:	ldp	x29, x30, [sp], #96
    23a8:	ret

00000000000023ac <XS_Filter__Util__Call_unimport>:
    23ac:	stp	x29, x30, [sp, #-64]!
    23b0:	mov	x29, sp
    23b4:	str	x0, [sp, #24]
    23b8:	str	x1, [sp, #16]
    23bc:	ldr	x0, [sp, #24]
    23c0:	ldr	x0, [x0]
    23c4:	str	x0, [sp, #40]
    23c8:	ldr	x0, [sp, #24]
    23cc:	bl	12c8 <S_POPMARK>
    23d0:	str	w0, [sp, #32]
    23d4:	ldr	x0, [sp, #24]
    23d8:	ldr	x1, [x0, #24]
    23dc:	ldr	w0, [sp, #32]
    23e0:	add	w2, w0, #0x1
    23e4:	str	w2, [sp, #32]
    23e8:	sxtw	x0, w0
    23ec:	lsl	x0, x0, #3
    23f0:	add	x0, x1, x0
    23f4:	str	x0, [sp, #48]
    23f8:	ldr	x1, [sp, #40]
    23fc:	ldr	x0, [sp, #48]
    2400:	sub	x0, x1, x0
    2404:	asr	x0, x0, #3
    2408:	str	w0, [sp, #36]
    240c:	ldrsw	x0, [sp, #36]
    2410:	lsl	x0, x0, #3
    2414:	neg	x0, x0
    2418:	ldr	x1, [sp, #40]
    241c:	add	x0, x1, x0
    2420:	str	x0, [sp, #40]
    2424:	ldr	w0, [sp, #36]
    2428:	cmp	w0, #0x0
    242c:	b.gt	2440 <XS_Filter__Util__Call_unimport+0x94>
    2430:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2434:	add	x0, x0, #0x840
    2438:	str	x0, [sp, #56]
    243c:	b	24c0 <XS_Filter__Util__Call_unimport+0x114>
    2440:	ldr	x0, [sp, #24]
    2444:	ldr	x1, [x0, #24]
    2448:	ldrsw	x0, [sp, #32]
    244c:	lsl	x0, x0, #3
    2450:	add	x0, x1, x0
    2454:	ldr	x0, [x0]
    2458:	ldr	w1, [x0, #12]
    245c:	mov	w0, #0x400                 	// #1024
    2460:	movk	w0, #0x20, lsl #16
    2464:	and	w0, w1, w0
    2468:	cmp	w0, #0x400
    246c:	b.ne	2490 <XS_Filter__Util__Call_unimport+0xe4>  // b.any
    2470:	ldr	x0, [sp, #24]
    2474:	ldr	x1, [x0, #24]
    2478:	ldrsw	x0, [sp, #32]
    247c:	lsl	x0, x0, #3
    2480:	add	x0, x1, x0
    2484:	ldr	x0, [x0]
    2488:	ldr	x0, [x0, #16]
    248c:	b	24bc <XS_Filter__Util__Call_unimport+0x110>
    2490:	ldr	x0, [sp, #24]
    2494:	ldr	x1, [x0, #24]
    2498:	ldrsw	x0, [sp, #32]
    249c:	lsl	x0, x0, #3
    24a0:	add	x0, x1, x0
    24a4:	ldr	x0, [x0]
    24a8:	mov	w3, #0x2                   	// #2
    24ac:	mov	x2, #0x0                   	// #0
    24b0:	mov	x1, x0
    24b4:	ldr	x0, [sp, #24]
    24b8:	bl	f50 <Perl_sv_2pv_flags@plt>
    24bc:	str	x0, [sp, #56]
    24c0:	adrp	x0, 1000 <Perl_newXS_flags@plt>
    24c4:	add	x1, x0, #0x30c
    24c8:	ldr	x0, [sp, #24]
    24cc:	bl	f70 <Perl_filter_del@plt>
    24d0:	ldr	x0, [sp, #24]
    24d4:	ldr	x1, [sp, #40]
    24d8:	str	x1, [x0]
    24dc:	nop
    24e0:	ldp	x29, x30, [sp], #64
    24e4:	ret

00000000000024e8 <boot_Filter__Util__Call>:
    24e8:	stp	x29, x30, [sp, #-80]!
    24ec:	mov	x29, sp
    24f0:	str	x0, [sp, #24]
    24f4:	str	x1, [sp, #16]
    24f8:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    24fc:	add	x4, x0, #0x858
    2500:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2504:	add	x3, x0, #0x860
    2508:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    250c:	add	x2, x0, #0x868
    2510:	ldr	x1, [sp, #24]
    2514:	mov	w0, #0x4e7                 	// #1255
    2518:	movk	w0, #0xd30, lsl #16
    251c:	bl	1020 <Perl_xs_handshake@plt>
    2520:	str	w0, [sp, #40]
    2524:	ldr	x0, [sp, #24]
    2528:	ldr	x1, [x0, #24]
    252c:	ldrsw	x0, [sp, #40]
    2530:	lsl	x0, x0, #3
    2534:	add	x0, x1, x0
    2538:	str	x0, [sp, #48]
    253c:	ldr	x0, [sp, #24]
    2540:	ldr	x0, [x0]
    2544:	str	x0, [sp, #56]
    2548:	ldr	x1, [sp, #56]
    254c:	ldr	x0, [sp, #48]
    2550:	sub	x0, x1, x0
    2554:	asr	x0, x0, #3
    2558:	str	w0, [sp, #44]
    255c:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2560:	add	x0, x0, #0x868
    2564:	str	x0, [sp, #64]
    2568:	mov	w5, #0x0                   	// #0
    256c:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2570:	add	x4, x0, #0x870
    2574:	ldr	x3, [sp, #64]
    2578:	adrp	x0, 1000 <Perl_newXS_flags@plt>
    257c:	add	x2, x0, #0xbf8
    2580:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2584:	add	x1, x0, #0x878
    2588:	ldr	x0, [sp, #24]
    258c:	bl	1000 <Perl_newXS_flags@plt>
    2590:	mov	w5, #0x0                   	// #0
    2594:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2598:	add	x4, x0, #0x898
    259c:	ldr	x3, [sp, #64]
    25a0:	adrp	x0, 1000 <Perl_newXS_flags@plt>
    25a4:	add	x2, x0, #0xef4
    25a8:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    25ac:	add	x1, x0, #0x8a0
    25b0:	ldr	x0, [sp, #24]
    25b4:	bl	1000 <Perl_newXS_flags@plt>
    25b8:	mov	w5, #0x0                   	// #0
    25bc:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    25c0:	add	x4, x0, #0x768
    25c4:	ldr	x3, [sp, #64]
    25c8:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    25cc:	add	x2, x0, #0x1a0
    25d0:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    25d4:	add	x1, x0, #0x8c0
    25d8:	ldr	x0, [sp, #24]
    25dc:	bl	1000 <Perl_newXS_flags@plt>
    25e0:	mov	w5, #0x0                   	// #0
    25e4:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    25e8:	add	x4, x0, #0x8e0
    25ec:	ldr	x3, [sp, #64]
    25f0:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    25f4:	add	x2, x0, #0x3ac
    25f8:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    25fc:	add	x1, x0, #0x8e8
    2600:	ldr	x0, [sp, #24]
    2604:	bl	1000 <Perl_newXS_flags@plt>
    2608:	mov	x2, #0x8                   	// #8
    260c:	adrp	x0, 13000 <Perl_save_sptr>
    2610:	add	x1, x0, #0x128
    2614:	ldr	x0, [sp, #24]
    2618:	bl	f10 <Perl_my_cxt_init@plt>
    261c:	str	x0, [sp, #72]
    2620:	ldr	x0, [sp, #72]
    2624:	str	wzr, [x0]
    2628:	ldr	x0, [sp, #72]
    262c:	ldr	w0, [x0]
    2630:	cmp	w0, #0x0
    2634:	b.eq	266c <boot_Filter__Util__Call+0x184>  // b.none
    2638:	ldr	x0, [sp, #72]
    263c:	ldr	w0, [x0]
    2640:	cmp	w0, #0x0
    2644:	b.eq	2654 <boot_Filter__Util__Call+0x16c>  // b.none
    2648:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    264c:	add	x0, x0, #0x908
    2650:	b	265c <boot_Filter__Util__Call+0x174>
    2654:	adrp	x0, 2000 <XS_Filter__Util__Call_real_import+0x10c>
    2658:	add	x0, x0, #0x910
    265c:	mov	x2, x0
    2660:	mov	x1, #0x0                   	// #0
    2664:	ldr	x0, [sp, #24]
    2668:	bl	1030 <Perl_filter_add@plt>
    266c:	ldr	w1, [sp, #40]
    2670:	ldr	x0, [sp, #24]
    2674:	bl	f60 <Perl_xs_boot_epilog@plt>
    2678:	nop
    267c:	ldp	x29, x30, [sp], #80
    2680:	ret

Disassembly of section .fini:

0000000000002684 <_fini>:
    2684:	stp	x29, x30, [sp, #-16]!
    2688:	mov	x29, sp
    268c:	ldp	x29, x30, [sp], #16
    2690:	ret
