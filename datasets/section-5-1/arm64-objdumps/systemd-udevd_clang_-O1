
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-udevd_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000229140 <_start>:
  229140:	mov	x29, #0x0                   	// #0
  229144:	mov	x30, #0x0                   	// #0
  229148:	mov	x5, x0
  22914c:	ldr	x1, [sp]
  229150:	add	x2, sp, #0x8
  229154:	mov	x6, sp
  229158:	movz	x0, #0x0, lsl #48
  22915c:	movk	x0, #0x0, lsl #32
  229160:	movk	x0, #0x22, lsl #16
  229164:	movk	x0, #0x9290
  229168:	movz	x3, #0x0, lsl #48
  22916c:	movk	x3, #0x0, lsl #32
  229170:	movk	x3, #0x25, lsl #16
  229174:	movk	x3, #0x33f0
  229178:	movz	x4, #0x0, lsl #48
  22917c:	movk	x4, #0x0, lsl #32
  229180:	movk	x4, #0x25, lsl #16
  229184:	movk	x4, #0x3470
  229188:	bl	2534f0 <__libc_start_main@plt>
  22918c:	bl	253500 <abort@plt>

0000000000229190 <call_weak_fn>:
  229190:	adrp	x0, 27d000 <builtin_blkid.options+0x50>
  229194:	ldr	x0, [x0, #704]
  229198:	cbz	x0, 2291a0 <call_weak_fn+0x10>
  22919c:	b	253510 <__gmon_start__@plt>
  2291a0:	ret

00000000002291a4 <deregister_tm_clones>:
  2291a4:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  2291a8:	add	x0, x0, #0x1e8
  2291ac:	adrp	x1, 28e000 <string_hash_ops+0xfe38>
  2291b0:	add	x1, x1, #0x1e8
  2291b4:	cmp	x0, x1
  2291b8:	b.eq	2291ec <deregister_tm_clones+0x48>  // b.none
  2291bc:	stp	x29, x30, [sp, #-32]!
  2291c0:	mov	x29, sp
  2291c4:	adrp	x0, 20a000 <parse_argv.options-0x3f0>
  2291c8:	ldr	x0, [x0, #920]
  2291cc:	str	x0, [sp, #24]
  2291d0:	mov	x1, x0
  2291d4:	cbz	x1, 2291e4 <deregister_tm_clones+0x40>
  2291d8:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  2291dc:	add	x0, x0, #0x1e8
  2291e0:	blr	x1
  2291e4:	ldp	x29, x30, [sp], #32
  2291e8:	ret
  2291ec:	ret

00000000002291f0 <register_tm_clones>:
  2291f0:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  2291f4:	add	x0, x0, #0x1e8
  2291f8:	adrp	x1, 28e000 <string_hash_ops+0xfe38>
  2291fc:	add	x1, x1, #0x1e8
  229200:	sub	x0, x0, x1
  229204:	lsr	x1, x0, #63
  229208:	add	x0, x1, x0, asr #3
  22920c:	cmp	xzr, x0, asr #1
  229210:	b.eq	229248 <register_tm_clones+0x58>  // b.none
  229214:	stp	x29, x30, [sp, #-32]!
  229218:	mov	x29, sp
  22921c:	asr	x1, x0, #1
  229220:	adrp	x0, 20a000 <parse_argv.options-0x3f0>
  229224:	ldr	x0, [x0, #928]
  229228:	str	x0, [sp, #24]
  22922c:	mov	x2, x0
  229230:	cbz	x2, 229240 <register_tm_clones+0x50>
  229234:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  229238:	add	x0, x0, #0x1e8
  22923c:	blr	x2
  229240:	ldp	x29, x30, [sp], #32
  229244:	ret
  229248:	ret

000000000022924c <__do_global_dtors_aux>:
  22924c:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  229250:	ldrb	w0, [x0, #504]
  229254:	cbnz	w0, 229278 <__do_global_dtors_aux+0x2c>
  229258:	stp	x29, x30, [sp, #-16]!
  22925c:	mov	x29, sp
  229260:	bl	2291a4 <deregister_tm_clones>
  229264:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  229268:	mov	w1, #0x1                   	// #1
  22926c:	strb	w1, [x0, #504]
  229270:	ldp	x29, x30, [sp], #16
  229274:	ret
  229278:	ret

000000000022927c <frame_dummy>:
  22927c:	stp	x29, x30, [sp, #-16]!
  229280:	mov	x29, sp
  229284:	bl	2291f0 <register_tm_clones>
  229288:	ldp	x29, x30, [sp], #16
  22928c:	ret

0000000000229290 <main>:
  229290:	stp	x29, x30, [sp, #-32]!
  229294:	stp	x20, x19, [sp, #16]
  229298:	mov	x29, sp
  22929c:	mov	x19, x1
  2292a0:	mov	w20, w0
  2292a4:	bl	2292dc <save_argc_argv>
  2292a8:	mov	w0, w20
  2292ac:	mov	x1, x19
  2292b0:	bl	2292f0 <run>
  2292b4:	mov	w19, w0
  2292b8:	bl	253520 <ask_password_agent_close@plt>
  2292bc:	bl	253530 <polkit_agent_close@plt>
  2292c0:	bl	253540 <pager_close@plt>
  2292c4:	bl	253550 <mac_selinux_finish@plt>
  2292c8:	bl	2298ac <static_destruct>
  2292cc:	lsr	w0, w19, #31
  2292d0:	ldp	x20, x19, [sp, #16]
  2292d4:	ldp	x29, x30, [sp], #32
  2292d8:	ret

00000000002292dc <save_argc_argv>:
  2292dc:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  2292e0:	adrp	x9, 28e000 <string_hash_ops+0xfe38>
  2292e4:	str	w0, [x8, #568]
  2292e8:	str	x1, [x9, #576]
  2292ec:	ret

00000000002292f0 <run>:
  2292f0:	sub	sp, sp, #0xc0
  2292f4:	stp	x29, x30, [sp, #160]
  2292f8:	stp	x20, x19, [sp, #176]
  2292fc:	add	x29, sp, #0xa0
  229300:	mov	w20, w0
  229304:	mov	w8, #0xffffffff            	// #-1
  229308:	mov	w0, #0x7                   	// #7
  22930c:	mov	x19, x1
  229310:	stp	xzr, xzr, [x29, #-16]
  229314:	stp	w8, w8, [x29, #-24]
  229318:	bl	253560 <log_set_target@plt>
  22931c:	bl	253570 <log_open@plt>
  229320:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  229324:	adrp	x1, 28e000 <string_hash_ops+0xfe38>
  229328:	adrp	x2, 28e000 <string_hash_ops+0xfe38>
  22932c:	adrp	x3, 28e000 <string_hash_ops+0xfe38>
  229330:	add	x0, x0, #0x200
  229334:	add	x1, x1, #0x208
  229338:	add	x2, x2, #0x1e8
  22933c:	add	x3, x3, #0x1f0
  229340:	bl	253580 <udev_parse_config_full@plt>
  229344:	mov	w0, #0x1                   	// #1
  229348:	bl	253590 <log_parse_environment_realm@plt>
  22934c:	bl	253570 <log_open@plt>
  229350:	mov	w0, w20
  229354:	mov	x1, x19
  229358:	bl	229940 <parse_argv>
  22935c:	cmp	w0, #0x1
  229360:	b.lt	2297b0 <run+0x4c0>  // b.tstop
  229364:	adrp	x0, 229000 <__FRAME_END__+0x10000>
  229368:	add	x0, x0, #0xc0c
  22936c:	mov	w2, #0x1                   	// #1
  229370:	mov	x1, xzr
  229374:	bl	2535a0 <proc_cmdline_parse@plt>
  229378:	tbz	w0, #31, 2293b8 <run+0xc8>
  22937c:	mov	w19, w0
  229380:	mov	w0, #0x1                   	// #1
  229384:	bl	2535b0 <log_get_max_level_realm@plt>
  229388:	cmp	w0, #0x4
  22938c:	b.lt	2293b8 <run+0xc8>  // b.tstop
  229390:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229394:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229398:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  22939c:	add	x2, x2, #0x55b
  2293a0:	add	x4, x4, #0xff7
  2293a4:	add	x5, x5, #0x56c
  2293a8:	mov	w0, #0x404                 	// #1028
  2293ac:	mov	w3, #0x6b9                 	// #1721
  2293b0:	mov	w1, w19
  2293b4:	bl	2535c0 <log_internal_realm@plt>
  2293b8:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  2293bc:	ldrb	w8, [x8, #528]
  2293c0:	cmp	w8, #0x1
  2293c4:	b.ne	2293dc <run+0xec>  // b.any
  2293c8:	mov	w0, wzr
  2293cc:	bl	253560 <log_set_target@plt>
  2293d0:	mov	w0, #0x1                   	// #1
  2293d4:	mov	w1, #0x7                   	// #7
  2293d8:	bl	2535d0 <log_set_max_level_realm@plt>
  2293dc:	mov	w0, #0x1                   	// #1
  2293e0:	bl	2535b0 <log_get_max_level_realm@plt>
  2293e4:	mov	w1, w0
  2293e8:	mov	w0, wzr
  2293ec:	bl	2535d0 <log_set_max_level_realm@plt>
  2293f0:	bl	2535e0 <must_be_root@plt>
  2293f4:	tbnz	w0, #31, 2297b0 <run+0x4c0>
  2293f8:	adrp	x20, 28e000 <string_hash_ops+0xfe38>
  2293fc:	ldr	w8, [x20, #512]
  229400:	cbnz	w8, 2294a0 <run+0x1b0>
  229404:	add	x2, sp, #0x8
  229408:	mov	w1, #0x80                  	// #128
  22940c:	mov	w0, wzr
  229410:	bl	2535f0 <sched_getaffinity@plt>
  229414:	cbz	w0, 229420 <run+0x130>
  229418:	mov	w8, #0x1                   	// #1
  22941c:	b	229430 <run+0x140>
  229420:	add	x1, sp, #0x8
  229424:	mov	w0, #0x80                  	// #128
  229428:	bl	253600 <__sched_cpucount@plt>
  22942c:	sxtw	x8, w0
  229430:	lsl	x8, x8, #1
  229434:	add	x19, x8, #0x10
  229438:	bl	253610 <physical_memory@plt>
  22943c:	lsr	x8, x0, #27
  229440:	mov	w9, #0xa                   	// #10
  229444:	cmp	x8, #0xa
  229448:	csel	x8, x8, x9, hi  // hi = pmore
  22944c:	cmp	x19, x8
  229450:	csel	w8, w19, w8, cc  // cc = lo, ul, last
  229454:	cmp	w8, #0x800
  229458:	mov	w9, #0x800                 	// #2048
  22945c:	csel	w19, w8, w9, cc  // cc = lo, ul, last
  229460:	mov	w0, #0x1                   	// #1
  229464:	str	w19, [x20, #512]
  229468:	bl	2535b0 <log_get_max_level_realm@plt>
  22946c:	cmp	w0, #0x7
  229470:	b.lt	2294a0 <run+0x1b0>  // b.tstop
  229474:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229478:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22947c:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  229480:	add	x2, x2, #0x55b
  229484:	add	x4, x4, #0xff7
  229488:	add	x5, x5, #0x184
  22948c:	mov	w0, #0x407                 	// #1031
  229490:	mov	w3, #0x6d4                 	// #1748
  229494:	mov	w1, wzr
  229498:	mov	w6, w19
  22949c:	bl	2535c0 <log_internal_realm@plt>
  2294a0:	adrp	x0, 20b000 <worker_hash_op+0xad0>
  2294a4:	add	x0, x0, #0x9d
  2294a8:	bl	253620 <chdir@plt>
  2294ac:	tbnz	w0, #31, 229514 <run+0x224>
  2294b0:	mov	w0, #0x12                  	// #18
  2294b4:	bl	253630 <umask@plt>
  2294b8:	bl	253640 <mac_selinux_init@plt>
  2294bc:	tbnz	w0, #31, 229550 <run+0x260>
  2294c0:	adrp	x0, 20e000 <worker_hash_op+0x3ad0>
  2294c4:	add	x0, x0, #0x95
  2294c8:	mov	w1, #0x1ed                 	// #493
  2294cc:	bl	253650 <mkdir_errno_wrapper@plt>
  2294d0:	tbz	w0, #31, 229588 <run+0x298>
  2294d4:	mov	w19, w0
  2294d8:	cmn	w0, #0x11
  2294dc:	b.eq	229588 <run+0x298>  // b.none
  2294e0:	mov	w0, #0x1                   	// #1
  2294e4:	bl	2535b0 <log_get_max_level_realm@plt>
  2294e8:	cmp	w0, #0x3
  2294ec:	b.lt	2297d8 <run+0x4e8>  // b.tstop
  2294f0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2294f4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2294f8:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  2294fc:	add	x2, x2, #0x55b
  229500:	add	x4, x4, #0xff7
  229504:	add	x5, x5, #0x65b
  229508:	mov	w0, #0x403                 	// #1027
  22950c:	mov	w3, #0x6e4                 	// #1764
  229510:	b	2297a8 <run+0x4b8>
  229514:	bl	253660 <__errno_location@plt>
  229518:	ldr	w19, [x0]
  22951c:	mov	w0, #0x1                   	// #1
  229520:	bl	2535b0 <log_get_max_level_realm@plt>
  229524:	cmp	w0, #0x3
  229528:	b.lt	2295e4 <run+0x2f4>  // b.tstop
  22952c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229530:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229534:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  229538:	add	x2, x2, #0x55b
  22953c:	add	x4, x4, #0xff7
  229540:	add	x5, x5, #0x75
  229544:	mov	w0, #0x403                 	// #1027
  229548:	mov	w3, #0x6da                 	// #1754
  22954c:	b	2297a8 <run+0x4b8>
  229550:	mov	w19, w0
  229554:	mov	w0, #0x1                   	// #1
  229558:	bl	2535b0 <log_get_max_level_realm@plt>
  22955c:	cmp	w0, #0x3
  229560:	b.lt	2297d8 <run+0x4e8>  // b.tstop
  229564:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229568:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22956c:	adrp	x5, 20a000 <parse_argv.options-0x3f0>
  229570:	add	x2, x2, #0x55b
  229574:	add	x4, x4, #0xff7
  229578:	add	x5, x5, #0xa3b
  22957c:	mov	w0, #0x403                 	// #1027
  229580:	mov	w3, #0x6e0                 	// #1760
  229584:	b	2297a8 <run+0x4b8>
  229588:	mov	w1, #0xffffffff            	// #-1
  22958c:	mov	w2, #0xffffffff            	// #-1
  229590:	mov	x0, xzr
  229594:	bl	253670 <dev_setup@plt>
  229598:	bl	253680 <getppid@plt>
  22959c:	cmp	w0, #0x1
  2295a0:	b.ne	229664 <run+0x374>  // b.any
  2295a4:	bl	253690 <sd_booted@plt>
  2295a8:	cmp	w0, #0x1
  2295ac:	b.lt	229664 <run+0x374>  // b.tstop
  2295b0:	adrp	x0, 20c000 <worker_hash_op+0x1ad0>
  2295b4:	add	x0, x0, #0xc33
  2295b8:	sub	x2, x29, #0x8
  2295bc:	mov	w1, wzr
  2295c0:	bl	2536a0 <cg_pid_get_path@plt>
  2295c4:	tbz	w0, #31, 229664 <run+0x374>
  2295c8:	mov	w19, w0
  2295cc:	cmn	w0, #0x2
  2295d0:	b.eq	2295dc <run+0x2ec>  // b.none
  2295d4:	cmn	w19, #0x7b
  2295d8:	b.ne	2295f8 <run+0x308>  // b.any
  2295dc:	mov	w20, #0x1                   	// #1
  2295e0:	b	2295fc <run+0x30c>
  2295e4:	cmp	w19, #0x0
  2295e8:	mov	w8, wzr
  2295ec:	cneg	w9, w19, mi  // mi = first
  2295f0:	sub	w19, w8, w9, uxtb
  2295f4:	b	2297b4 <run+0x4c4>
  2295f8:	mov	w20, wzr
  2295fc:	mov	w0, #0x1                   	// #1
  229600:	bl	2535b0 <log_get_max_level_realm@plt>
  229604:	cbz	w20, 229634 <run+0x344>
  229608:	cmp	w0, #0x7
  22960c:	b.lt	229664 <run+0x374>  // b.tstop
  229610:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229614:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229618:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22961c:	add	x2, x2, #0x55b
  229620:	add	x4, x4, #0xff7
  229624:	add	x5, x5, #0xe83
  229628:	mov	w0, #0x407                 	// #1031
  22962c:	mov	w3, #0x6ef                 	// #1775
  229630:	b	22965c <run+0x36c>
  229634:	cmp	w0, #0x4
  229638:	b.lt	229664 <run+0x374>  // b.tstop
  22963c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229640:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229644:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  229648:	add	x2, x2, #0x55b
  22964c:	add	x4, x4, #0xff7
  229650:	add	x5, x5, #0xfb7
  229654:	mov	w0, #0x404                 	// #1028
  229658:	mov	w3, #0x6f1                 	// #1777
  22965c:	mov	w1, w19
  229660:	bl	2535c0 <log_internal_realm@plt>
  229664:	sub	x0, x29, #0x14
  229668:	sub	x1, x29, #0x18
  22966c:	bl	229de8 <listen_fds>
  229670:	tbnz	w0, #31, 22973c <run+0x44c>
  229674:	ldp	w2, w1, [x29, #-24]
  229678:	ldur	x3, [x29, #-8]
  22967c:	sub	x0, x29, #0x10
  229680:	bl	229f28 <manager_new>
  229684:	tbnz	w0, #31, 229774 <run+0x484>
  229688:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22968c:	ldrb	w8, [x8, #532]
  229690:	cmp	w8, #0x1
  229694:	b.ne	2298a0 <run+0x5b0>  // b.any
  229698:	mov	w0, #0x1                   	// #1
  22969c:	bl	2535b0 <log_get_max_level_realm@plt>
  2296a0:	cmp	w0, #0x6
  2296a4:	b.lt	2296d0 <run+0x3e0>  // b.tstop
  2296a8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2296ac:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2296b0:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  2296b4:	add	x2, x2, #0x55b
  2296b8:	add	x4, x4, #0xff7
  2296bc:	add	x5, x5, #0x45b
  2296c0:	mov	w0, #0x406                 	// #1030
  2296c4:	mov	w3, #0x700                 	// #1792
  2296c8:	mov	w1, wzr
  2296cc:	bl	2535c0 <log_internal_realm@plt>
  2296d0:	mov	w0, #0x1                   	// #1
  2296d4:	bl	2535b0 <log_get_max_level_realm@plt>
  2296d8:	cmp	w0, #0x6
  2296dc:	b.gt	229724 <run+0x434>
  2296e0:	bl	22a170 <make_null_stdio>
  2296e4:	tbz	w0, #31, 229724 <run+0x434>
  2296e8:	mov	w19, w0
  2296ec:	mov	w0, #0x1                   	// #1
  2296f0:	bl	2535b0 <log_get_max_level_realm@plt>
  2296f4:	cmp	w0, #0x4
  2296f8:	b.lt	229724 <run+0x434>  // b.tstop
  2296fc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229700:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229704:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  229708:	add	x2, x2, #0x55b
  22970c:	add	x4, x4, #0xff7
  229710:	add	x5, x5, #0x9f
  229714:	mov	w0, #0x404                 	// #1028
  229718:	mov	w3, #0x706                 	// #1798
  22971c:	mov	w1, w19
  229720:	bl	2535c0 <log_internal_realm@plt>
  229724:	bl	2536b0 <fork@plt>
  229728:	tbnz	w0, #31, 2297e8 <run+0x4f8>
  22972c:	cbz	w0, 229834 <run+0x544>
  229730:	mov	w20, wzr
  229734:	mov	w19, wzr
  229738:	b	22989c <run+0x5ac>
  22973c:	mov	w19, w0
  229740:	mov	w0, #0x1                   	// #1
  229744:	bl	2535b0 <log_get_max_level_realm@plt>
  229748:	cmp	w0, #0x3
  22974c:	b.lt	2297d8 <run+0x4e8>  // b.tstop
  229750:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229754:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229758:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  22975c:	add	x2, x2, #0x55b
  229760:	add	x4, x4, #0xff7
  229764:	add	x5, x5, #0xcb7
  229768:	mov	w0, #0x403                 	// #1027
  22976c:	mov	w3, #0x6f7                 	// #1783
  229770:	b	2297a8 <run+0x4b8>
  229774:	mov	w19, w0
  229778:	mov	w0, #0x1                   	// #1
  22977c:	bl	2535b0 <log_get_max_level_realm@plt>
  229780:	cmp	w0, #0x3
  229784:	b.lt	2297d8 <run+0x4e8>  // b.tstop
  229788:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22978c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229790:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  229794:	add	x2, x2, #0x55b
  229798:	add	x4, x4, #0xff7
  22979c:	add	x5, x5, #0xea2
  2297a0:	mov	w0, #0x403                 	// #1027
  2297a4:	mov	w3, #0x6fb                 	// #1787
  2297a8:	mov	w1, w19
  2297ac:	bl	2535c0 <log_internal_realm@plt>
  2297b0:	mov	w19, w0
  2297b4:	sub	x0, x29, #0x10
  2297b8:	bl	229924 <manager_freep>
  2297bc:	sub	x0, x29, #0x8
  2297c0:	bl	22990c <freep>
  2297c4:	mov	w0, w19
  2297c8:	ldp	x20, x19, [sp, #176]
  2297cc:	ldp	x29, x30, [sp, #160]
  2297d0:	add	sp, sp, #0xc0
  2297d4:	ret
  2297d8:	mov	w8, wzr
  2297dc:	neg	w9, w19
  2297e0:	sub	w19, w8, w9, uxtb
  2297e4:	b	2297b4 <run+0x4c4>
  2297e8:	bl	253660 <__errno_location@plt>
  2297ec:	ldr	w19, [x0]
  2297f0:	mov	w0, #0x1                   	// #1
  2297f4:	bl	2535b0 <log_get_max_level_realm@plt>
  2297f8:	cmp	w0, #0x3
  2297fc:	b.lt	22988c <run+0x59c>  // b.tstop
  229800:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229804:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229808:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22980c:	add	x2, x2, #0x55b
  229810:	add	x4, x4, #0xff7
  229814:	add	x5, x5, #0xdeb
  229818:	mov	w0, #0x403                 	// #1027
  22981c:	mov	w3, #0x70b                 	// #1803
  229820:	mov	w1, w19
  229824:	bl	2535c0 <log_internal_realm@plt>
  229828:	mov	w19, w0
  22982c:	mov	w20, wzr
  229830:	b	22989c <run+0x5ac>
  229834:	bl	2536c0 <setsid@plt>
  229838:	mov	w0, #0xfffffc18            	// #-1000
  22983c:	bl	2536d0 <set_oom_score_adjust@plt>
  229840:	tbz	w0, #31, 229884 <run+0x594>
  229844:	mov	w19, w0
  229848:	mov	w0, #0x1                   	// #1
  22984c:	mov	w20, #0x1                   	// #1
  229850:	bl	2535b0 <log_get_max_level_realm@plt>
  229854:	cmp	w0, #0x7
  229858:	b.lt	229888 <run+0x598>  // b.tstop
  22985c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229860:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  229864:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  229868:	add	x2, x2, #0x55b
  22986c:	add	x4, x4, #0xff7
  229870:	add	x5, x5, #0x75a
  229874:	mov	w0, #0x407                 	// #1031
  229878:	mov	w3, #0x715                 	// #1813
  22987c:	mov	w1, w19
  229880:	bl	2535c0 <log_internal_realm@plt>
  229884:	mov	w20, #0x1                   	// #1
  229888:	b	22989c <run+0x5ac>
  22988c:	cmp	w19, #0x0
  229890:	mov	w20, wzr
  229894:	cneg	w8, w19, mi  // mi = first
  229898:	sub	w19, w20, w8, uxtb
  22989c:	cbz	w20, 2297b4 <run+0x4c4>
  2298a0:	ldur	x0, [x29, #-16]
  2298a4:	bl	22a190 <main_loop>
  2298a8:	b	2297b0 <run+0x4c0>

00000000002298ac <static_destruct>:
  2298ac:	stp	x29, x30, [sp, #-32]!
  2298b0:	stp	x20, x19, [sp, #16]
  2298b4:	adrp	x8, 27d000 <builtin_blkid.options+0x50>
  2298b8:	ldr	x8, [x8, #712]
  2298bc:	mov	x29, sp
  2298c0:	cbz	x8, 229900 <static_destruct+0x54>
  2298c4:	adrp	x0, 27d000 <builtin_blkid.options+0x50>
  2298c8:	ldr	x0, [x0, #712]
  2298cc:	bl	22e6e4 <ALIGN_TO>
  2298d0:	adrp	x20, 27d000 <builtin_blkid.options+0x50>
  2298d4:	ldr	x20, [x20, #720]
  2298d8:	cmp	x0, x20
  2298dc:	b.cs	229900 <static_destruct+0x54>  // b.hs, b.nlast
  2298e0:	mov	x19, x0
  2298e4:	ldp	x0, x8, [x19]
  2298e8:	blr	x8
  2298ec:	add	x0, x19, #0x10
  2298f0:	bl	22e6e4 <ALIGN_TO>
  2298f4:	mov	x19, x0
  2298f8:	cmp	x0, x20
  2298fc:	b.cc	2298e4 <static_destruct+0x38>  // b.lo, b.ul, b.last
  229900:	ldp	x20, x19, [sp, #16]
  229904:	ldp	x29, x30, [sp], #32
  229908:	ret

000000000022990c <freep>:
  22990c:	stp	x29, x30, [sp, #-16]!
  229910:	ldr	x0, [x0]
  229914:	mov	x29, sp
  229918:	bl	2536e0 <free@plt>
  22991c:	ldp	x29, x30, [sp], #16
  229920:	ret

0000000000229924 <manager_freep>:
  229924:	stp	x29, x30, [sp, #-16]!
  229928:	ldr	x0, [x0]
  22992c:	mov	x29, sp
  229930:	cbz	x0, 229938 <manager_freep+0x14>
  229934:	bl	22a8e0 <manager_free>
  229938:	ldp	x29, x30, [sp], #16
  22993c:	ret

0000000000229940 <parse_argv>:
  229940:	stp	x29, x30, [sp, #-96]!
  229944:	stp	x28, x27, [sp, #16]
  229948:	stp	x26, x25, [sp, #32]
  22994c:	stp	x24, x23, [sp, #48]
  229950:	stp	x22, x21, [sp, #64]
  229954:	stp	x20, x19, [sp, #80]
  229958:	mov	x29, sp
  22995c:	tbnz	w0, #31, 229bc4 <parse_argv+0x284>
  229960:	mov	x19, x1
  229964:	cbz	x1, 229be8 <parse_argv+0x2a8>
  229968:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  22996c:	adrp	x3, 20a000 <parse_argv.options-0x3f0>
  229970:	add	x2, x2, #0x788
  229974:	add	x3, x3, #0x3f0
  229978:	mov	x1, x19
  22997c:	mov	x4, xzr
  229980:	mov	w20, w0
  229984:	bl	2536f0 <getopt_long@plt>
  229988:	mov	w26, #0x1                   	// #1
  22998c:	tbnz	w0, #31, 229b64 <parse_argv+0x224>
  229990:	adrp	x23, 20a000 <parse_argv.options-0x3f0>
  229994:	adrp	x21, 20e000 <worker_hash_op+0x3ad0>
  229998:	adrp	x22, 20a000 <parse_argv.options-0x3f0>
  22999c:	adrp	x27, 28e000 <string_hash_ops+0xfe38>
  2299a0:	adrp	x25, 28e000 <string_hash_ops+0xfe38>
  2299a4:	add	x23, x23, #0x3a8
  2299a8:	add	x21, x21, #0x788
  2299ac:	add	x22, x22, #0x3f0
  2299b0:	adrp	x24, 28e000 <string_hash_ops+0xfe38>
  2299b4:	add	x27, x27, #0x208
  2299b8:	add	x25, x25, #0x1e8
  2299bc:	b	2299e4 <parse_argv+0xa4>
  2299c0:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  2299c4:	strb	w26, [x8, #528]
  2299c8:	mov	w0, w20
  2299cc:	mov	x1, x19
  2299d0:	mov	x2, x21
  2299d4:	mov	x3, x22
  2299d8:	mov	x4, xzr
  2299dc:	bl	2536f0 <getopt_long@plt>
  2299e0:	tbnz	w0, #31, 229b64 <parse_argv+0x224>
  2299e4:	sub	w8, w0, #0x3f
  2299e8:	cmp	w8, #0x35
  2299ec:	b.hi	229ba0 <parse_argv+0x260>  // b.pmore
  2299f0:	adr	x9, 2299c0 <parse_argv+0x80>
  2299f4:	ldrb	w10, [x23, x8]
  2299f8:	add	x9, x9, x10, lsl #2
  2299fc:	mov	w0, #0xffffffea            	// #-22
  229a00:	br	x9
  229a04:	ldr	x28, [x24, #584]
  229a08:	mov	x0, x28
  229a0c:	bl	253700 <resolve_name_timing_from_string@plt>
  229a10:	tbnz	w0, #31, 229b24 <parse_argv+0x1e4>
  229a14:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  229a18:	str	w0, [x8, #496]
  229a1c:	b	2299c8 <parse_argv+0x88>
  229a20:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  229a24:	strb	w26, [x8, #532]
  229a28:	b	2299c8 <parse_argv+0x88>
  229a2c:	ldr	x0, [x24, #584]
  229a30:	bl	22abdc <safe_atou>
  229a34:	tbz	w0, #31, 2299c8 <parse_argv+0x88>
  229a38:	mov	w28, w0
  229a3c:	mov	w0, #0x1                   	// #1
  229a40:	bl	2535b0 <log_get_max_level_realm@plt>
  229a44:	cmp	w0, #0x4
  229a48:	b.lt	2299c8 <parse_argv+0x88>  // b.tstop
  229a4c:	ldr	x6, [x24, #584]
  229a50:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229a54:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  229a58:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  229a5c:	mov	w0, #0x404                 	// #1028
  229a60:	mov	w3, #0x5e7                 	// #1511
  229a64:	mov	w1, w28
  229a68:	add	x2, x2, #0x55b
  229a6c:	add	x4, x4, #0x3fb
  229a70:	add	x5, x5, #0x848
  229a74:	bl	2535c0 <log_internal_realm@plt>
  229a78:	b	2299c8 <parse_argv+0x88>
  229a7c:	ldr	x0, [x24, #584]
  229a80:	mov	x1, x27
  229a84:	bl	253710 <parse_sec@plt>
  229a88:	tbz	w0, #31, 2299c8 <parse_argv+0x88>
  229a8c:	mov	w28, w0
  229a90:	mov	w0, #0x1                   	// #1
  229a94:	bl	2535b0 <log_get_max_level_realm@plt>
  229a98:	cmp	w0, #0x4
  229a9c:	b.lt	2299c8 <parse_argv+0x88>  // b.tstop
  229aa0:	ldr	x6, [x24, #584]
  229aa4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229aa8:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  229aac:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  229ab0:	mov	w0, #0x404                 	// #1028
  229ab4:	mov	w3, #0x5ec                 	// #1516
  229ab8:	mov	w1, w28
  229abc:	add	x2, x2, #0x55b
  229ac0:	add	x4, x4, #0x3fb
  229ac4:	add	x5, x5, #0xcd3
  229ac8:	bl	2535c0 <log_internal_realm@plt>
  229acc:	b	2299c8 <parse_argv+0x88>
  229ad0:	ldr	x0, [x24, #584]
  229ad4:	mov	x1, x25
  229ad8:	bl	253710 <parse_sec@plt>
  229adc:	tbz	w0, #31, 2299c8 <parse_argv+0x88>
  229ae0:	mov	w28, w0
  229ae4:	mov	w0, #0x1                   	// #1
  229ae8:	bl	2535b0 <log_get_max_level_realm@plt>
  229aec:	cmp	w0, #0x4
  229af0:	b.lt	2299c8 <parse_argv+0x88>  // b.tstop
  229af4:	ldr	x6, [x24, #584]
  229af8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229afc:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  229b00:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  229b04:	mov	w0, #0x404                 	// #1028
  229b08:	mov	w3, #0x5f1                 	// #1521
  229b0c:	mov	w1, w28
  229b10:	add	x2, x2, #0x55b
  229b14:	add	x4, x4, #0x3fb
  229b18:	add	x5, x5, #0xb8a
  229b1c:	bl	2535c0 <log_internal_realm@plt>
  229b20:	b	2299c8 <parse_argv+0x88>
  229b24:	mov	w0, #0x1                   	// #1
  229b28:	bl	2535b0 <log_get_max_level_realm@plt>
  229b2c:	cmp	w0, #0x4
  229b30:	b.lt	2299c8 <parse_argv+0x88>  // b.tstop
  229b34:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229b38:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  229b3c:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  229b40:	mov	w0, #0x404                 	// #1028
  229b44:	mov	w3, #0x5fb                 	// #1531
  229b48:	mov	w1, wzr
  229b4c:	add	x2, x2, #0x55b
  229b50:	add	x4, x4, #0x3fb
  229b54:	add	x5, x5, #0x795
  229b58:	mov	x6, x28
  229b5c:	bl	2535c0 <log_internal_realm@plt>
  229b60:	b	2299c8 <parse_argv+0x88>
  229b64:	mov	w0, #0x1                   	// #1
  229b68:	b	229b84 <parse_argv+0x244>
  229b6c:	adrp	x0, 20a000 <parse_argv.options-0x3f0>
  229b70:	add	x0, x0, #0xaa2
  229b74:	bl	253720 <puts@plt>
  229b78:	mov	w0, wzr
  229b7c:	b	229b84 <parse_argv+0x244>
  229b80:	bl	22abfc <help>
  229b84:	ldp	x20, x19, [sp, #80]
  229b88:	ldp	x22, x21, [sp, #64]
  229b8c:	ldp	x24, x23, [sp, #48]
  229b90:	ldp	x26, x25, [sp, #32]
  229b94:	ldp	x28, x27, [sp, #16]
  229b98:	ldp	x29, x30, [sp], #96
  229b9c:	ret
  229ba0:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  229ba4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229ba8:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  229bac:	add	x1, x1, #0xff5
  229bb0:	add	x2, x2, #0x55b
  229bb4:	add	x4, x4, #0x4a9
  229bb8:	mov	w0, #0x1                   	// #1
  229bbc:	mov	w3, #0x608                 	// #1544
  229bc0:	bl	253730 <log_assert_failed_unreachable_realm@plt>
  229bc4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  229bc8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229bcc:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  229bd0:	add	x1, x1, #0x995
  229bd4:	add	x2, x2, #0x55b
  229bd8:	add	x4, x4, #0x4a9
  229bdc:	mov	w0, #0x1                   	// #1
  229be0:	mov	w3, #0x5db                 	// #1499
  229be4:	bl	253740 <log_assert_failed_realm@plt>
  229be8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  229bec:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229bf0:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  229bf4:	add	x1, x1, #0x783
  229bf8:	add	x2, x2, #0x55b
  229bfc:	add	x4, x4, #0x4a9
  229c00:	mov	w0, #0x1                   	// #1
  229c04:	mov	w3, #0x5dc                 	// #1500
  229c08:	bl	253740 <log_assert_failed_realm@plt>

0000000000229c0c <parse_proc_cmdline_item>:
  229c0c:	stp	x29, x30, [sp, #-48]!
  229c10:	str	x21, [sp, #16]
  229c14:	stp	x20, x19, [sp, #32]
  229c18:	mov	x29, sp
  229c1c:	cbz	x0, 229dc4 <parse_proc_cmdline_item+0x1b8>
  229c20:	mov	x19, x1
  229c24:	cbz	x1, 229db0 <parse_proc_cmdline_item+0x1a4>
  229c28:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  229c2c:	add	x1, x1, #0x2c9
  229c30:	mov	x20, x0
  229c34:	bl	253750 <proc_cmdline_key_streq@plt>
  229c38:	tbz	w0, #0, 229c70 <parse_proc_cmdline_item+0x64>
  229c3c:	mov	x0, x20
  229c40:	mov	x1, x19
  229c44:	bl	22ac80 <proc_cmdline_value_missing>
  229c48:	tbnz	w0, #0, 229db0 <parse_proc_cmdline_item+0x1a4>
  229c4c:	mov	x0, x19
  229c50:	bl	253760 <log_level_from_string@plt>
  229c54:	mov	w21, w0
  229c58:	tbnz	w0, #31, 229ce0 <parse_proc_cmdline_item+0xd4>
  229c5c:	mov	w0, #0x1                   	// #1
  229c60:	mov	w1, w21
  229c64:	bl	2535d0 <log_set_max_level_realm@plt>
  229c68:	tbz	w21, #31, 229db0 <parse_proc_cmdline_item+0x1a4>
  229c6c:	b	229ce4 <parse_proc_cmdline_item+0xd8>
  229c70:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  229c74:	add	x1, x1, #0x8e1
  229c78:	mov	x0, x20
  229c7c:	bl	253750 <proc_cmdline_key_streq@plt>
  229c80:	tbz	w0, #0, 229cb0 <parse_proc_cmdline_item+0xa4>
  229c84:	mov	x0, x20
  229c88:	mov	x1, x19
  229c8c:	bl	22ac80 <proc_cmdline_value_missing>
  229c90:	tbnz	w0, #0, 229db0 <parse_proc_cmdline_item+0x1a4>
  229c94:	adrp	x1, 28e000 <string_hash_ops+0xfe38>
  229c98:	add	x1, x1, #0x1e8
  229c9c:	mov	x0, x19
  229ca0:	bl	253710 <parse_sec@plt>
  229ca4:	mov	w21, w0
  229ca8:	tbz	w21, #31, 229db0 <parse_proc_cmdline_item+0x1a4>
  229cac:	b	229ce4 <parse_proc_cmdline_item+0xd8>
  229cb0:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  229cb4:	add	x1, x1, #0x19b
  229cb8:	mov	x0, x20
  229cbc:	bl	253750 <proc_cmdline_key_streq@plt>
  229cc0:	tbz	w0, #0, 229d28 <parse_proc_cmdline_item+0x11c>
  229cc4:	mov	x0, x20
  229cc8:	mov	x1, x19
  229ccc:	bl	22ac80 <proc_cmdline_value_missing>
  229cd0:	tbnz	w0, #0, 229db0 <parse_proc_cmdline_item+0x1a4>
  229cd4:	mov	x0, x19
  229cd8:	bl	22abdc <safe_atou>
  229cdc:	mov	w21, w0
  229ce0:	tbz	w21, #31, 229db0 <parse_proc_cmdline_item+0x1a4>
  229ce4:	mov	w0, #0x1                   	// #1
  229ce8:	bl	2535b0 <log_get_max_level_realm@plt>
  229cec:	cmp	w0, #0x4
  229cf0:	b.lt	229db0 <parse_proc_cmdline_item+0x1a4>  // b.tstop
  229cf4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229cf8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  229cfc:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  229d00:	add	x2, x2, #0x55b
  229d04:	add	x4, x4, #0x2db
  229d08:	add	x5, x5, #0x470
  229d0c:	mov	w0, #0x404                 	// #1028
  229d10:	mov	w3, #0x5ac                 	// #1452
  229d14:	mov	w1, w21
  229d18:	mov	x6, x20
  229d1c:	mov	x7, x19
  229d20:	bl	2535c0 <log_internal_realm@plt>
  229d24:	b	229db0 <parse_proc_cmdline_item+0x1a4>
  229d28:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  229d2c:	add	x1, x1, #0xe2
  229d30:	mov	x0, x20
  229d34:	bl	253750 <proc_cmdline_key_streq@plt>
  229d38:	tbz	w0, #0, 229d58 <parse_proc_cmdline_item+0x14c>
  229d3c:	mov	x0, x20
  229d40:	mov	x1, x19
  229d44:	bl	22ac80 <proc_cmdline_value_missing>
  229d48:	tbnz	w0, #0, 229db0 <parse_proc_cmdline_item+0x1a4>
  229d4c:	adrp	x1, 28e000 <string_hash_ops+0xfe38>
  229d50:	add	x1, x1, #0x208
  229d54:	b	229c9c <parse_proc_cmdline_item+0x90>
  229d58:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  229d5c:	add	x1, x1, #0x205
  229d60:	mov	x0, x20
  229d64:	bl	22acf0 <startswith>
  229d68:	cbz	x0, 229da8 <parse_proc_cmdline_item+0x19c>
  229d6c:	mov	w0, #0x1                   	// #1
  229d70:	bl	2535b0 <log_get_max_level_realm@plt>
  229d74:	cmp	w0, #0x4
  229d78:	b.lt	229da8 <parse_proc_cmdline_item+0x19c>  // b.tstop
  229d7c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229d80:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  229d84:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  229d88:	add	x2, x2, #0x55b
  229d8c:	add	x4, x4, #0x2db
  229d90:	add	x5, x5, #0x881
  229d94:	mov	w0, #0x404                 	// #1028
  229d98:	mov	w3, #0x5a9                 	// #1449
  229d9c:	mov	w1, wzr
  229da0:	mov	x6, x20
  229da4:	bl	2535c0 <log_internal_realm@plt>
  229da8:	mov	w21, wzr
  229dac:	tbnz	w21, #31, 229ce4 <parse_proc_cmdline_item+0xd8>
  229db0:	ldp	x20, x19, [sp, #32]
  229db4:	ldr	x21, [sp, #16]
  229db8:	mov	w0, wzr
  229dbc:	ldp	x29, x30, [sp], #48
  229dc0:	ret
  229dc4:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  229dc8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229dcc:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  229dd0:	add	x1, x1, #0xc4b
  229dd4:	add	x2, x2, #0x55b
  229dd8:	add	x4, x4, #0xd00
  229ddc:	mov	w0, #0x1                   	// #1
  229de0:	mov	w3, #0x585                 	// #1413
  229de4:	bl	253740 <log_assert_failed_realm@plt>

0000000000229de8 <listen_fds>:
  229de8:	stp	x29, x30, [sp, #-80]!
  229dec:	str	x25, [sp, #16]
  229df0:	stp	x24, x23, [sp, #32]
  229df4:	stp	x22, x21, [sp, #48]
  229df8:	stp	x20, x19, [sp, #64]
  229dfc:	mov	x29, sp
  229e00:	cbz	x0, 229ee0 <listen_fds+0xf8>
  229e04:	mov	x19, x1
  229e08:	cbz	x1, 229f04 <listen_fds+0x11c>
  229e0c:	mov	x20, x0
  229e10:	mov	w0, #0x1                   	// #1
  229e14:	bl	253770 <sd_listen_fds@plt>
  229e18:	mov	w21, w0
  229e1c:	tbnz	w0, #31, 229ea4 <listen_fds+0xbc>
  229e20:	cbz	w21, 229eac <listen_fds+0xc4>
  229e24:	mov	w23, #0xffffffff            	// #-1
  229e28:	mov	w24, #0x2                   	// #2
  229e2c:	mov	w25, #0xffffffff            	// #-1
  229e30:	b	229e50 <listen_fds+0x68>
  229e34:	mov	w8, w22
  229e38:	tbz	w25, #31, 229ec4 <listen_fds+0xdc>
  229e3c:	add	w9, w21, #0x2
  229e40:	add	w24, w24, #0x1
  229e44:	cmp	w24, w9
  229e48:	mov	w25, w8
  229e4c:	b.ge	229eb4 <listen_fds+0xcc>  // b.tcont
  229e50:	add	w22, w24, #0x1
  229e54:	mov	w1, #0x1                   	// #1
  229e58:	mov	w2, #0x5                   	// #5
  229e5c:	mov	w3, #0xffffffff            	// #-1
  229e60:	mov	w0, w22
  229e64:	bl	253780 <sd_is_socket@plt>
  229e68:	cmp	w0, #0x1
  229e6c:	b.ge	229e34 <listen_fds+0x4c>  // b.tcont
  229e70:	mov	w1, #0x10                  	// #16
  229e74:	mov	w2, #0x3                   	// #3
  229e78:	mov	w3, #0xffffffff            	// #-1
  229e7c:	mov	w0, w22
  229e80:	bl	253780 <sd_is_socket@plt>
  229e84:	mov	w8, w0
  229e88:	mov	w0, #0xffffffea            	// #-22
  229e8c:	tbz	w23, #31, 229ec8 <listen_fds+0xe0>
  229e90:	cmp	w8, #0x1
  229e94:	mov	w8, w25
  229e98:	mov	w23, w22
  229e9c:	b.ge	229e3c <listen_fds+0x54>  // b.tcont
  229ea0:	b	229ec8 <listen_fds+0xe0>
  229ea4:	mov	w0, w21
  229ea8:	b	229ec8 <listen_fds+0xe0>
  229eac:	mov	w8, #0xffffffff            	// #-1
  229eb0:	mov	w23, #0xffffffff            	// #-1
  229eb4:	mov	w0, wzr
  229eb8:	str	w8, [x20]
  229ebc:	str	w23, [x19]
  229ec0:	b	229ec8 <listen_fds+0xe0>
  229ec4:	mov	w0, #0xffffffea            	// #-22
  229ec8:	ldp	x20, x19, [sp, #64]
  229ecc:	ldp	x22, x21, [sp, #48]
  229ed0:	ldp	x24, x23, [sp, #32]
  229ed4:	ldr	x25, [sp, #16]
  229ed8:	ldp	x29, x30, [sp], #80
  229edc:	ret
  229ee0:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  229ee4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229ee8:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  229eec:	add	x1, x1, #0x340
  229ef0:	add	x2, x2, #0x55b
  229ef4:	add	x4, x4, #0x99f
  229ef8:	mov	w0, #0x1                   	// #1
  229efc:	mov	w3, #0x55c                 	// #1372
  229f00:	bl	253740 <log_assert_failed_realm@plt>
  229f04:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  229f08:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  229f0c:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  229f10:	add	x1, x1, #0xaa6
  229f14:	add	x2, x2, #0x55b
  229f18:	add	x4, x4, #0x99f
  229f1c:	mov	w0, #0x1                   	// #1
  229f20:	mov	w3, #0x55d                 	// #1373
  229f24:	bl	253740 <log_assert_failed_realm@plt>

0000000000229f28 <manager_new>:
  229f28:	stp	x29, x30, [sp, #-64]!
  229f2c:	mov	x29, sp
  229f30:	str	x23, [sp, #16]
  229f34:	stp	x22, x21, [sp, #32]
  229f38:	stp	x20, x19, [sp, #48]
  229f3c:	str	xzr, [x29, #24]
  229f40:	cbz	x0, 22a14c <manager_new+0x224>
  229f44:	mov	x19, x0
  229f48:	mov	w0, #0x80                  	// #128
  229f4c:	mov	x22, x3
  229f50:	mov	w20, w2
  229f54:	mov	w21, w1
  229f58:	bl	22ad40 <malloc_multiply>
  229f5c:	str	x0, [x29, #24]
  229f60:	cbz	x0, 229ffc <manager_new+0xd4>
  229f64:	ldr	x23, [x29, #24]
  229f68:	mov	x8, #0xffffffffffffffff    	// #-1
  229f6c:	stp	xzr, x22, [x0, #16]
  229f70:	movi	v0.2d, #0x0
  229f74:	str	x8, [x0, #80]
  229f78:	mov	w8, #0xffffffff            	// #-1
  229f7c:	add	x22, x23, #0x48
  229f80:	stp	xzr, xzr, [x0]
  229f84:	str	w8, [x0, #88]
  229f88:	stp	q0, q0, [x0, #32]
  229f8c:	str	q0, [x0, #64]
  229f90:	stur	q0, [x0, #92]
  229f94:	stur	q0, [x0, #108]
  229f98:	str	wzr, [x0, #124]
  229f9c:	mov	x0, x22
  229fa0:	mov	w1, w21
  229fa4:	bl	22e6f0 <udev_ctrl_new_from_fd>
  229fa8:	tbnz	w0, #31, 22a020 <manager_new+0xf8>
  229fac:	ldr	x0, [x22]
  229fb0:	bl	22e9b0 <udev_ctrl_enable_receiving>
  229fb4:	tbnz	w0, #31, 22a058 <manager_new+0x130>
  229fb8:	add	x21, x23, #0x40
  229fbc:	mov	w1, #0x1                   	// #1
  229fc0:	mov	x0, x21
  229fc4:	mov	w2, w20
  229fc8:	bl	253790 <device_monitor_new_full@plt>
  229fcc:	tbnz	w0, #31, 22a0a8 <manager_new+0x180>
  229fd0:	ldr	x0, [x21]
  229fd4:	mov	w1, #0x8000000             	// #134217728
  229fd8:	bl	2537a0 <sd_device_monitor_set_receive_buffer_size@plt>
  229fdc:	ldr	x0, [x21]
  229fe0:	bl	2537b0 <device_monitor_enable_receiving@plt>
  229fe4:	tbnz	w0, #31, 22a0e4 <manager_new+0x1bc>
  229fe8:	ldr	x8, [x29, #24]
  229fec:	mov	w20, wzr
  229ff0:	str	xzr, [x29, #24]
  229ff4:	str	x8, [x19]
  229ff8:	b	22a12c <manager_new+0x204>
  229ffc:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22a000:	adrp	x3, 218000 <worker_hash_op+0xdad0>
  22a004:	add	x1, x1, #0x55b
  22a008:	add	x3, x3, #0x20b
  22a00c:	mov	w0, #0x1                   	// #1
  22a010:	mov	w2, #0x618                 	// #1560
  22a014:	bl	2537c0 <log_oom_internal@plt>
  22a018:	mov	w20, w0
  22a01c:	b	22a12c <manager_new+0x204>
  22a020:	mov	w21, w0
  22a024:	mov	w0, #0x1                   	// #1
  22a028:	bl	2535b0 <log_get_max_level_realm@plt>
  22a02c:	cmp	w0, #0x3
  22a030:	b.lt	22a09c <manager_new+0x174>  // b.tstop
  22a034:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a038:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  22a03c:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22a040:	add	x2, x2, #0x55b
  22a044:	add	x4, x4, #0x20b
  22a048:	add	x5, x5, #0x496
  22a04c:	mov	w0, #0x403                 	// #1027
  22a050:	mov	w3, #0x622                 	// #1570
  22a054:	b	22a08c <manager_new+0x164>
  22a058:	mov	w21, w0
  22a05c:	mov	w0, #0x1                   	// #1
  22a060:	bl	2535b0 <log_get_max_level_realm@plt>
  22a064:	cmp	w0, #0x3
  22a068:	b.lt	22a09c <manager_new+0x174>  // b.tstop
  22a06c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a070:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  22a074:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22a078:	add	x2, x2, #0x55b
  22a07c:	add	x4, x4, #0x20b
  22a080:	add	x5, x5, #0x7de
  22a084:	mov	w0, #0x403                 	// #1027
  22a088:	mov	w3, #0x626                 	// #1574
  22a08c:	mov	w1, w21
  22a090:	bl	2535c0 <log_internal_realm@plt>
  22a094:	mov	w20, w0
  22a098:	b	22a12c <manager_new+0x204>
  22a09c:	mov	w8, wzr
  22a0a0:	neg	w9, w21
  22a0a4:	b	22a128 <manager_new+0x200>
  22a0a8:	mov	w20, w0
  22a0ac:	mov	w0, #0x1                   	// #1
  22a0b0:	bl	2535b0 <log_get_max_level_realm@plt>
  22a0b4:	cmp	w0, #0x3
  22a0b8:	b.lt	22a120 <manager_new+0x1f8>  // b.tstop
  22a0bc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a0c0:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  22a0c4:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22a0c8:	add	x2, x2, #0x55b
  22a0cc:	add	x4, x4, #0x20b
  22a0d0:	add	x5, x5, #0x4c3
  22a0d4:	mov	w0, #0x403                 	// #1027
  22a0d8:	mov	w3, #0x62a                 	// #1578
  22a0dc:	mov	w1, w20
  22a0e0:	b	22a090 <manager_new+0x168>
  22a0e4:	mov	w20, w0
  22a0e8:	mov	w0, #0x1                   	// #1
  22a0ec:	bl	2535b0 <log_get_max_level_realm@plt>
  22a0f0:	cmp	w0, #0x3
  22a0f4:	b.lt	22a120 <manager_new+0x1f8>  // b.tstop
  22a0f8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a0fc:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  22a100:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22a104:	add	x2, x2, #0x55b
  22a108:	add	x4, x4, #0x20b
  22a10c:	add	x5, x5, #0xe25
  22a110:	mov	w0, #0x403                 	// #1027
  22a114:	mov	w3, #0x630                 	// #1584
  22a118:	mov	w1, w20
  22a11c:	b	22a090 <manager_new+0x168>
  22a120:	mov	w8, wzr
  22a124:	neg	w9, w20
  22a128:	sub	w20, w8, w9, uxtb
  22a12c:	add	x0, x29, #0x18
  22a130:	bl	229924 <manager_freep>
  22a134:	mov	w0, w20
  22a138:	ldp	x20, x19, [sp, #48]
  22a13c:	ldp	x22, x21, [sp, #32]
  22a140:	ldr	x23, [sp, #16]
  22a144:	ldp	x29, x30, [sp], #64
  22a148:	ret
  22a14c:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  22a150:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a154:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22a158:	add	x1, x1, #0xb2b
  22a15c:	add	x2, x2, #0x55b
  22a160:	add	x4, x4, #0xaf
  22a164:	mov	w0, #0x1                   	// #1
  22a168:	mov	w3, #0x614                 	// #1556
  22a16c:	bl	253740 <log_assert_failed_realm@plt>

000000000022a170 <make_null_stdio>:
  22a170:	stp	x29, x30, [sp, #-16]!
  22a174:	mov	w0, #0xffffffff            	// #-1
  22a178:	mov	w1, #0xffffffff            	// #-1
  22a17c:	mov	w2, #0xffffffff            	// #-1
  22a180:	mov	x29, sp
  22a184:	bl	2537d0 <rearrange_stdio@plt>
  22a188:	ldp	x29, x30, [sp], #16
  22a18c:	ret

000000000022a190 <main_loop>:
  22a190:	stp	x29, x30, [sp, #-48]!
  22a194:	str	x21, [sp, #16]
  22a198:	stp	x20, x19, [sp, #32]
  22a19c:	mov	x29, sp
  22a1a0:	mov	x19, x0
  22a1a4:	bl	2537e0 <getpid_cached@plt>
  22a1a8:	add	x20, x19, #0x54
  22a1ac:	mov	w1, #0x2                   	// #2
  22a1b0:	str	w0, [x19, #32]
  22a1b4:	mov	w0, #0x1                   	// #1
  22a1b8:	movk	w1, #0x8, lsl #16
  22a1bc:	mov	w2, wzr
  22a1c0:	mov	x3, x20
  22a1c4:	bl	2537f0 <socketpair@plt>
  22a1c8:	tbnz	w0, #31, 22a464 <main_loop+0x2d4>
  22a1cc:	ldr	w20, [x20]
  22a1d0:	mov	w0, w20
  22a1d4:	bl	22ad8c <setsockopt_int>
  22a1d8:	tbnz	w0, #31, 22a4a4 <main_loop+0x314>
  22a1dc:	bl	23e41c <udev_watch_init>
  22a1e0:	mov	w21, w0
  22a1e4:	tbnz	w0, #31, 22a4ec <main_loop+0x35c>
  22a1e8:	str	w21, [x19, #80]
  22a1ec:	bl	23e454 <udev_watch_restore>
  22a1f0:	mov	w2, #0xf                   	// #15
  22a1f4:	mov	w3, #0x2                   	// #2
  22a1f8:	mov	w4, #0x1                   	// #1
  22a1fc:	mov	w5, #0x11                  	// #17
  22a200:	mov	w6, #0xffffffff            	// #-1
  22a204:	mov	w0, wzr
  22a208:	mov	x1, xzr
  22a20c:	bl	253800 <sigprocmask_many@plt>
  22a210:	tbnz	w0, #31, 22a8bc <main_loop+0x72c>
  22a214:	mov	x0, x19
  22a218:	bl	253810 <sd_event_default@plt>
  22a21c:	tbnz	w0, #31, 22a520 <main_loop+0x390>
  22a220:	ldr	x0, [x19]
  22a224:	adrp	x3, 22a000 <manager_new+0xd8>
  22a228:	add	x3, x3, #0xdd8
  22a22c:	mov	w2, #0x2                   	// #2
  22a230:	mov	x1, xzr
  22a234:	mov	x4, x19
  22a238:	bl	253820 <sd_event_add_signal@plt>
  22a23c:	tbnz	w0, #31, 22a558 <main_loop+0x3c8>
  22a240:	ldr	x0, [x19]
  22a244:	adrp	x3, 22a000 <manager_new+0xd8>
  22a248:	add	x3, x3, #0xdd8
  22a24c:	mov	w2, #0xf                   	// #15
  22a250:	mov	x1, xzr
  22a254:	mov	x4, x19
  22a258:	bl	253820 <sd_event_add_signal@plt>
  22a25c:	tbnz	w0, #31, 22a590 <main_loop+0x400>
  22a260:	ldr	x0, [x19]
  22a264:	adrp	x3, 22a000 <manager_new+0xd8>
  22a268:	add	x3, x3, #0xe1c
  22a26c:	mov	w2, #0x1                   	// #1
  22a270:	mov	x1, xzr
  22a274:	mov	x4, x19
  22a278:	bl	253820 <sd_event_add_signal@plt>
  22a27c:	tbnz	w0, #31, 22a5c8 <main_loop+0x438>
  22a280:	ldr	x0, [x19]
  22a284:	adrp	x3, 22a000 <manager_new+0xd8>
  22a288:	add	x3, x3, #0xe60
  22a28c:	mov	w2, #0x11                  	// #17
  22a290:	mov	x1, xzr
  22a294:	mov	x4, x19
  22a298:	bl	253820 <sd_event_add_signal@plt>
  22a29c:	tbnz	w0, #31, 22a600 <main_loop+0x470>
  22a2a0:	ldr	x0, [x19]
  22a2a4:	mov	w1, #0x1                   	// #1
  22a2a8:	bl	253830 <sd_event_set_watchdog@plt>
  22a2ac:	tbnz	w0, #31, 22a638 <main_loop+0x4a8>
  22a2b0:	ldr	x0, [x19, #72]
  22a2b4:	ldr	x1, [x19]
  22a2b8:	bl	22ec38 <udev_ctrl_attach_event>
  22a2bc:	tbnz	w0, #31, 22a670 <main_loop+0x4e0>
  22a2c0:	ldr	x0, [x19, #72]
  22a2c4:	adrp	x1, 22b000 <on_sigchld+0x1a0>
  22a2c8:	add	x1, x1, #0x274
  22a2cc:	mov	x2, x19
  22a2d0:	bl	22ed18 <udev_ctrl_start>
  22a2d4:	tbnz	w0, #31, 22a6a8 <main_loop+0x518>
  22a2d8:	ldr	x0, [x19, #72]
  22a2dc:	bl	22ecdc <udev_ctrl_get_event_source>
  22a2e0:	mov	w1, #0x64                  	// #100
  22a2e4:	bl	253840 <sd_event_source_set_priority@plt>
  22a2e8:	tbnz	w0, #31, 22a6e0 <main_loop+0x550>
  22a2ec:	ldr	x0, [x19]
  22a2f0:	ldr	w2, [x19, #80]
  22a2f4:	adrp	x4, 22b000 <on_sigchld+0x1a0>
  22a2f8:	add	x1, x19, #0x60
  22a2fc:	add	x4, x4, #0x81c
  22a300:	mov	w3, #0x1                   	// #1
  22a304:	mov	x5, x19
  22a308:	bl	253850 <sd_event_add_io@plt>
  22a30c:	tbnz	w0, #31, 22a718 <main_loop+0x588>
  22a310:	ldr	x0, [x19, #64]
  22a314:	ldr	x1, [x19]
  22a318:	bl	253860 <sd_device_monitor_attach_event@plt>
  22a31c:	tbnz	w0, #31, 22a750 <main_loop+0x5c0>
  22a320:	ldr	x0, [x19, #64]
  22a324:	adrp	x1, 22b000 <on_sigchld+0x1a0>
  22a328:	add	x1, x1, #0xa4c
  22a32c:	mov	x2, x19
  22a330:	bl	253870 <sd_device_monitor_start@plt>
  22a334:	tbnz	w0, #31, 22a788 <main_loop+0x5f8>
  22a338:	ldr	x0, [x19, #64]
  22a33c:	bl	253880 <sd_device_monitor_get_event_source@plt>
  22a340:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  22a344:	add	x1, x1, #0xd40
  22a348:	bl	253890 <sd_event_source_set_description@plt>
  22a34c:	ldr	x0, [x19]
  22a350:	adrp	x4, 22b000 <on_sigchld+0x1a0>
  22a354:	add	x4, x4, #0xb40
  22a358:	mov	w3, #0x1                   	// #1
  22a35c:	mov	x1, xzr
  22a360:	mov	w2, w20
  22a364:	mov	x5, x19
  22a368:	bl	253850 <sd_event_add_io@plt>
  22a36c:	tbnz	w0, #31, 22a7ec <main_loop+0x65c>
  22a370:	ldr	x0, [x19]
  22a374:	adrp	x2, 22b000 <on_sigchld+0x1a0>
  22a378:	add	x2, x2, #0xe28
  22a37c:	mov	x1, xzr
  22a380:	mov	x3, x19
  22a384:	bl	2538a0 <sd_event_add_post@plt>
  22a388:	tbnz	w0, #31, 22a828 <main_loop+0x698>
  22a38c:	bl	23ef4c <udev_builtin_init>
  22a390:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22a394:	ldr	w1, [x8, #496]
  22a398:	add	x0, x19, #0x28
  22a39c:	bl	23480c <udev_rules_new>
  22a3a0:	ldr	x8, [x19, #40]
  22a3a4:	cbz	x8, 22a870 <main_loop+0x6e0>
  22a3a8:	mov	x0, x8
  22a3ac:	bl	23501c <udev_rules_apply_static_dev_perms>
  22a3b0:	tbz	w0, #31, 22a3f0 <main_loop+0x260>
  22a3b4:	mov	w20, w0
  22a3b8:	mov	w0, #0x1                   	// #1
  22a3bc:	bl	2535b0 <log_get_max_level_realm@plt>
  22a3c0:	cmp	w0, #0x3
  22a3c4:	b.lt	22a3f0 <main_loop+0x260>  // b.tstop
  22a3c8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a3cc:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a3d0:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22a3d4:	add	x2, x2, #0x55b
  22a3d8:	add	x4, x4, #0x74e
  22a3dc:	add	x5, x5, #0x832
  22a3e0:	mov	w0, #0x403                 	// #1027
  22a3e4:	mov	w3, #0x697                 	// #1687
  22a3e8:	mov	w1, w20
  22a3ec:	bl	2535c0 <log_internal_realm@plt>
  22a3f0:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22a3f4:	ldr	w2, [x8, #512]
  22a3f8:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  22a3fc:	add	x1, x1, #0xab2
  22a400:	mov	w0, wzr
  22a404:	bl	2538b0 <sd_notifyf@plt>
  22a408:	ldr	x0, [x19]
  22a40c:	bl	2538c0 <sd_event_loop@plt>
  22a410:	mov	w19, w0
  22a414:	tbz	w0, #31, 22a450 <main_loop+0x2c0>
  22a418:	mov	w0, #0x1                   	// #1
  22a41c:	bl	2535b0 <log_get_max_level_realm@plt>
  22a420:	cmp	w0, #0x3
  22a424:	b.lt	22a450 <main_loop+0x2c0>  // b.tstop
  22a428:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a42c:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a430:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22a434:	add	x2, x2, #0x55b
  22a438:	add	x4, x4, #0x74e
  22a43c:	add	x5, x5, #0xe47
  22a440:	mov	w0, #0x403                 	// #1027
  22a444:	mov	w3, #0x69f                 	// #1695
  22a448:	mov	w1, w19
  22a44c:	bl	2535c0 <log_internal_realm@plt>
  22a450:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22a454:	add	x1, x1, #0x10e
  22a458:	mov	w0, wzr
  22a45c:	bl	2538d0 <sd_notify@plt>
  22a460:	b	22a7d8 <main_loop+0x648>
  22a464:	bl	253660 <__errno_location@plt>
  22a468:	ldr	w19, [x0]
  22a46c:	mov	w0, #0x1                   	// #1
  22a470:	bl	2535b0 <log_get_max_level_realm@plt>
  22a474:	cmp	w0, #0x3
  22a478:	b.lt	22a4dc <main_loop+0x34c>  // b.tstop
  22a47c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a480:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a484:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22a488:	add	x2, x2, #0x55b
  22a48c:	add	x4, x4, #0x74e
  22a490:	add	x5, x5, #0x758
  22a494:	mov	w0, #0x403                 	// #1027
  22a498:	mov	w3, #0x63f                 	// #1599
  22a49c:	mov	w1, w19
  22a4a0:	b	22a7c0 <main_loop+0x630>
  22a4a4:	mov	w21, w0
  22a4a8:	mov	w0, #0x1                   	// #1
  22a4ac:	bl	2535b0 <log_get_max_level_realm@plt>
  22a4b0:	cmp	w0, #0x3
  22a4b4:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a4b8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a4bc:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a4c0:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22a4c4:	add	x2, x2, #0x55b
  22a4c8:	add	x4, x4, #0x74e
  22a4cc:	add	x5, x5, #0xb2f
  22a4d0:	mov	w0, #0x403                 	// #1027
  22a4d4:	mov	w3, #0x645                 	// #1605
  22a4d8:	b	22a7bc <main_loop+0x62c>
  22a4dc:	cmp	w19, #0x0
  22a4e0:	mov	w8, wzr
  22a4e4:	cneg	w9, w19, mi  // mi = first
  22a4e8:	b	22a7d4 <main_loop+0x644>
  22a4ec:	mov	w0, #0x1                   	// #1
  22a4f0:	bl	2535b0 <log_get_max_level_realm@plt>
  22a4f4:	cmp	w0, #0x3
  22a4f8:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a4fc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a500:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a504:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22a508:	add	x2, x2, #0x55b
  22a50c:	add	x4, x4, #0x74e
  22a510:	add	x5, x5, #0x1e
  22a514:	mov	w0, #0x403                 	// #1027
  22a518:	mov	w3, #0x649                 	// #1609
  22a51c:	b	22a7bc <main_loop+0x62c>
  22a520:	mov	w21, w0
  22a524:	mov	w0, #0x1                   	// #1
  22a528:	bl	2535b0 <log_get_max_level_realm@plt>
  22a52c:	cmp	w0, #0x3
  22a530:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a534:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a538:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a53c:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  22a540:	add	x2, x2, #0x55b
  22a544:	add	x4, x4, #0x74e
  22a548:	add	x5, x5, #0x59e
  22a54c:	mov	w0, #0x403                 	// #1027
  22a550:	mov	w3, #0x653                 	// #1619
  22a554:	b	22a7bc <main_loop+0x62c>
  22a558:	mov	w21, w0
  22a55c:	mov	w0, #0x1                   	// #1
  22a560:	bl	2535b0 <log_get_max_level_realm@plt>
  22a564:	cmp	w0, #0x3
  22a568:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a56c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a570:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a574:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22a578:	add	x2, x2, #0x55b
  22a57c:	add	x4, x4, #0x74e
  22a580:	add	x5, x5, #0x46
  22a584:	mov	w0, #0x403                 	// #1027
  22a588:	mov	w3, #0x657                 	// #1623
  22a58c:	b	22a7bc <main_loop+0x62c>
  22a590:	mov	w21, w0
  22a594:	mov	w0, #0x1                   	// #1
  22a598:	bl	2535b0 <log_get_max_level_realm@plt>
  22a59c:	cmp	w0, #0x3
  22a5a0:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a5a4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a5a8:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a5ac:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  22a5b0:	add	x2, x2, #0x55b
  22a5b4:	add	x4, x4, #0x74e
  22a5b8:	add	x5, x5, #0x9bc
  22a5bc:	mov	w0, #0x403                 	// #1027
  22a5c0:	mov	w3, #0x65b                 	// #1627
  22a5c4:	b	22a7bc <main_loop+0x62c>
  22a5c8:	mov	w21, w0
  22a5cc:	mov	w0, #0x1                   	// #1
  22a5d0:	bl	2535b0 <log_get_max_level_realm@plt>
  22a5d4:	cmp	w0, #0x3
  22a5d8:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a5dc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a5e0:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a5e4:	adrp	x5, 20a000 <parse_argv.options-0x3f0>
  22a5e8:	add	x2, x2, #0x55b
  22a5ec:	add	x4, x4, #0x74e
  22a5f0:	add	x5, x5, #0x550
  22a5f4:	mov	w0, #0x403                 	// #1027
  22a5f8:	mov	w3, #0x65f                 	// #1631
  22a5fc:	b	22a7bc <main_loop+0x62c>
  22a600:	mov	w21, w0
  22a604:	mov	w0, #0x1                   	// #1
  22a608:	bl	2535b0 <log_get_max_level_realm@plt>
  22a60c:	cmp	w0, #0x3
  22a610:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a614:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a618:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a61c:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22a620:	add	x2, x2, #0x55b
  22a624:	add	x4, x4, #0x74e
  22a628:	add	x5, x5, #0x797
  22a62c:	mov	w0, #0x403                 	// #1027
  22a630:	mov	w3, #0x663                 	// #1635
  22a634:	b	22a7bc <main_loop+0x62c>
  22a638:	mov	w21, w0
  22a63c:	mov	w0, #0x1                   	// #1
  22a640:	bl	2535b0 <log_get_max_level_realm@plt>
  22a644:	cmp	w0, #0x3
  22a648:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a64c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a650:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a654:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22a658:	add	x2, x2, #0x55b
  22a65c:	add	x4, x4, #0x74e
  22a660:	add	x5, x5, #0x7c4
  22a664:	mov	w0, #0x403                 	// #1027
  22a668:	mov	w3, #0x667                 	// #1639
  22a66c:	b	22a7bc <main_loop+0x62c>
  22a670:	mov	w21, w0
  22a674:	mov	w0, #0x1                   	// #1
  22a678:	bl	2535b0 <log_get_max_level_realm@plt>
  22a67c:	cmp	w0, #0x3
  22a680:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a684:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a688:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a68c:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22a690:	add	x2, x2, #0x55b
  22a694:	add	x4, x4, #0x74e
  22a698:	add	x5, x5, #0xe3
  22a69c:	mov	w0, #0x403                 	// #1027
  22a6a0:	mov	w3, #0x66b                 	// #1643
  22a6a4:	b	22a7bc <main_loop+0x62c>
  22a6a8:	mov	w21, w0
  22a6ac:	mov	w0, #0x1                   	// #1
  22a6b0:	bl	2535b0 <log_get_max_level_realm@plt>
  22a6b4:	cmp	w0, #0x3
  22a6b8:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a6bc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a6c0:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a6c4:	adrp	x5, 20a000 <parse_argv.options-0x3f0>
  22a6c8:	add	x2, x2, #0x55b
  22a6cc:	add	x4, x4, #0x74e
  22a6d0:	add	x5, x5, #0x579
  22a6d4:	mov	w0, #0x403                 	// #1027
  22a6d8:	mov	w3, #0x66f                 	// #1647
  22a6dc:	b	22a7bc <main_loop+0x62c>
  22a6e0:	mov	w21, w0
  22a6e4:	mov	w0, #0x1                   	// #1
  22a6e8:	bl	2535b0 <log_get_max_level_realm@plt>
  22a6ec:	cmp	w0, #0x3
  22a6f0:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a6f4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a6f8:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a6fc:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  22a700:	add	x2, x2, #0x55b
  22a704:	add	x4, x4, #0x74e
  22a708:	add	x5, x5, #0x349
  22a70c:	mov	w0, #0x403                 	// #1027
  22a710:	mov	w3, #0x677                 	// #1655
  22a714:	b	22a7bc <main_loop+0x62c>
  22a718:	mov	w21, w0
  22a71c:	mov	w0, #0x1                   	// #1
  22a720:	bl	2535b0 <log_get_max_level_realm@plt>
  22a724:	cmp	w0, #0x3
  22a728:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a72c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a730:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a734:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  22a738:	add	x2, x2, #0x55b
  22a73c:	add	x4, x4, #0x74e
  22a740:	add	x5, x5, #0x5c0
  22a744:	mov	w0, #0x403                 	// #1027
  22a748:	mov	w3, #0x67b                 	// #1659
  22a74c:	b	22a7bc <main_loop+0x62c>
  22a750:	mov	w21, w0
  22a754:	mov	w0, #0x1                   	// #1
  22a758:	bl	2535b0 <log_get_max_level_realm@plt>
  22a75c:	cmp	w0, #0x3
  22a760:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a764:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a768:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a76c:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22a770:	add	x2, x2, #0x55b
  22a774:	add	x4, x4, #0x74e
  22a778:	add	x5, x5, #0x805
  22a77c:	mov	w0, #0x403                 	// #1027
  22a780:	mov	w3, #0x67f                 	// #1663
  22a784:	b	22a7bc <main_loop+0x62c>
  22a788:	mov	w21, w0
  22a78c:	mov	w0, #0x1                   	// #1
  22a790:	bl	2535b0 <log_get_max_level_realm@plt>
  22a794:	cmp	w0, #0x3
  22a798:	b.lt	22a7cc <main_loop+0x63c>  // b.tstop
  22a79c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a7a0:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a7a4:	adrp	x5, 20a000 <parse_argv.options-0x3f0>
  22a7a8:	add	x2, x2, #0x55b
  22a7ac:	add	x4, x4, #0x74e
  22a7b0:	add	x5, x5, #0x579
  22a7b4:	mov	w0, #0x403                 	// #1027
  22a7b8:	mov	w3, #0x683                 	// #1667
  22a7bc:	mov	w1, w21
  22a7c0:	bl	2535c0 <log_internal_realm@plt>
  22a7c4:	mov	w19, w0
  22a7c8:	b	22a7d8 <main_loop+0x648>
  22a7cc:	mov	w8, wzr
  22a7d0:	neg	w9, w21
  22a7d4:	sub	w19, w8, w9, uxtb
  22a7d8:	mov	w0, w19
  22a7dc:	ldp	x20, x19, [sp, #32]
  22a7e0:	ldr	x21, [sp, #16]
  22a7e4:	ldp	x29, x30, [sp], #48
  22a7e8:	ret
  22a7ec:	mov	w20, w0
  22a7f0:	mov	w0, #0x1                   	// #1
  22a7f4:	bl	2535b0 <log_get_max_level_realm@plt>
  22a7f8:	cmp	w0, #0x3
  22a7fc:	b.lt	22a864 <main_loop+0x6d4>  // b.tstop
  22a800:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a804:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a808:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  22a80c:	add	x2, x2, #0x55b
  22a810:	add	x4, x4, #0x74e
  22a814:	add	x5, x5, #0xbc4
  22a818:	mov	w0, #0x403                 	// #1027
  22a81c:	mov	w3, #0x689                 	// #1673
  22a820:	mov	w1, w20
  22a824:	b	22a7c0 <main_loop+0x630>
  22a828:	mov	w20, w0
  22a82c:	mov	w0, #0x1                   	// #1
  22a830:	bl	2535b0 <log_get_max_level_realm@plt>
  22a834:	cmp	w0, #0x3
  22a838:	b.lt	22a864 <main_loop+0x6d4>  // b.tstop
  22a83c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a840:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a844:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22a848:	add	x2, x2, #0x55b
  22a84c:	add	x4, x4, #0x74e
  22a850:	add	x5, x5, #0x7c1
  22a854:	mov	w0, #0x403                 	// #1027
  22a858:	mov	w3, #0x68d                 	// #1677
  22a85c:	mov	w1, w20
  22a860:	b	22a7c0 <main_loop+0x630>
  22a864:	mov	w8, wzr
  22a868:	neg	w9, w20
  22a86c:	b	22a7d4 <main_loop+0x644>
  22a870:	mov	w20, w0
  22a874:	mov	w0, #0x1                   	// #1
  22a878:	bl	2535b0 <log_get_max_level_realm@plt>
  22a87c:	cmp	w0, #0x3
  22a880:	b.lt	22a8ac <main_loop+0x71c>  // b.tstop
  22a884:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a888:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22a88c:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22a890:	add	x2, x2, #0x55b
  22a894:	add	x4, x4, #0x74e
  22a898:	add	x5, x5, #0x504
  22a89c:	mov	w0, #0x403                 	// #1027
  22a8a0:	mov	w3, #0x693                 	// #1683
  22a8a4:	mov	w1, w20
  22a8a8:	b	22a7c0 <main_loop+0x630>
  22a8ac:	cmp	w20, #0x0
  22a8b0:	mov	w8, wzr
  22a8b4:	cneg	w9, w20, mi  // mi = first
  22a8b8:	b	22a7d4 <main_loop+0x644>
  22a8bc:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  22a8c0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a8c4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  22a8c8:	add	x1, x1, #0xebf
  22a8cc:	add	x2, x2, #0x55b
  22a8d0:	add	x4, x4, #0x4eb
  22a8d4:	mov	w0, #0x1                   	// #1
  22a8d8:	mov	w3, #0x64f                 	// #1615
  22a8dc:	bl	253740 <log_assert_failed_realm@plt>

000000000022a8e0 <manager_free>:
  22a8e0:	cbz	x0, 22a950 <manager_free+0x70>
  22a8e4:	stp	x29, x30, [sp, #-32]!
  22a8e8:	stp	x20, x19, [sp, #16]
  22a8ec:	mov	x29, sp
  22a8f0:	mov	x19, x0
  22a8f4:	bl	23efb0 <udev_builtin_exit>
  22a8f8:	ldr	w20, [x19, #32]
  22a8fc:	bl	2537e0 <getpid_cached@plt>
  22a900:	cmp	w20, w0
  22a904:	b.ne	22a910 <manager_free+0x30>  // b.any
  22a908:	ldr	x0, [x19, #72]
  22a90c:	bl	22ec10 <udev_ctrl_cleanup>
  22a910:	mov	x0, x19
  22a914:	bl	22a954 <manager_clear_for_worker>
  22a918:	ldr	x0, [x19, #56]
  22a91c:	bl	2538e0 <sd_netlink_unref@plt>
  22a920:	ldr	x0, [x19, #48]
  22a924:	bl	22aa0c <hashmap_free_free_free>
  22a928:	ldr	x0, [x19, #40]
  22a92c:	bl	23473c <udev_rules_free>
  22a930:	ldr	w0, [x19, #80]
  22a934:	bl	2538f0 <safe_close@plt>
  22a938:	add	x0, x19, #0x54
  22a93c:	bl	253900 <safe_close_pair@plt>
  22a940:	mov	x0, x19
  22a944:	bl	2536e0 <free@plt>
  22a948:	ldp	x20, x19, [sp, #16]
  22a94c:	ldp	x29, x30, [sp], #32
  22a950:	ret

000000000022a954 <manager_clear_for_worker>:
  22a954:	stp	x29, x30, [sp, #-32]!
  22a958:	str	x19, [sp, #16]
  22a95c:	mov	x29, sp
  22a960:	cbz	x0, 22a9e8 <manager_clear_for_worker+0x94>
  22a964:	mov	x19, x0
  22a968:	ldr	x0, [x0, #96]
  22a96c:	bl	253910 <sd_event_source_unref@plt>
  22a970:	ldr	x8, [x19, #104]
  22a974:	str	x0, [x19, #96]
  22a978:	mov	x0, x8
  22a97c:	bl	253910 <sd_event_source_unref@plt>
  22a980:	ldr	x8, [x19]
  22a984:	str	x0, [x19, #104]
  22a988:	mov	x0, x8
  22a98c:	bl	253920 <sd_event_unref@plt>
  22a990:	ldr	x8, [x19, #8]
  22a994:	str	x0, [x19]
  22a998:	mov	x0, x8
  22a99c:	bl	22aa2c <hashmap_free>
  22a9a0:	str	x0, [x19, #8]
  22a9a4:	mov	x0, x19
  22a9a8:	mov	w1, wzr
  22a9ac:	bl	22aa48 <event_queue_cleanup>
  22a9b0:	ldr	x0, [x19, #64]
  22a9b4:	bl	253930 <sd_device_monitor_unref@plt>
  22a9b8:	ldr	x8, [x19, #72]
  22a9bc:	str	x0, [x19, #64]
  22a9c0:	mov	x0, x8
  22a9c4:	bl	22eb54 <udev_ctrl_unref>
  22a9c8:	ldr	w8, [x19, #84]
  22a9cc:	str	x0, [x19, #72]
  22a9d0:	mov	w0, w8
  22a9d4:	bl	2538f0 <safe_close@plt>
  22a9d8:	str	w0, [x19, #84]
  22a9dc:	ldr	x19, [sp, #16]
  22a9e0:	ldp	x29, x30, [sp], #32
  22a9e4:	ret
  22a9e8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22a9ec:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22a9f0:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  22a9f4:	add	x1, x1, #0xffb
  22a9f8:	add	x2, x2, #0x55b
  22a9fc:	add	x4, x4, #0xa5e
  22aa00:	mov	w0, #0x1                   	// #1
  22aa04:	mov	w3, #0x114                 	// #276
  22aa08:	bl	253740 <log_assert_failed_realm@plt>

000000000022aa0c <hashmap_free_free_free>:
  22aa0c:	stp	x29, x30, [sp, #-16]!
  22aa10:	adrp	x1, 253000 <unhexmem+0x20>
  22aa14:	add	x1, x1, #0x6e0
  22aa18:	mov	x2, x1
  22aa1c:	mov	x29, sp
  22aa20:	bl	253940 <internal_hashmap_free@plt>
  22aa24:	ldp	x29, x30, [sp], #16
  22aa28:	ret

000000000022aa2c <hashmap_free>:
  22aa2c:	stp	x29, x30, [sp, #-16]!
  22aa30:	mov	x1, xzr
  22aa34:	mov	x2, xzr
  22aa38:	mov	x29, sp
  22aa3c:	bl	253940 <internal_hashmap_free@plt>
  22aa40:	ldp	x29, x30, [sp], #16
  22aa44:	ret

000000000022aa48 <event_queue_cleanup>:
  22aa48:	stp	x29, x30, [sp, #-32]!
  22aa4c:	stp	x20, x19, [sp, #16]
  22aa50:	ldr	x0, [x0, #16]
  22aa54:	mov	x29, sp
  22aa58:	cbz	x0, 22aa88 <event_queue_cleanup+0x40>
  22aa5c:	mov	w19, w1
  22aa60:	b	22aa70 <event_queue_cleanup+0x28>
  22aa64:	bl	22aa94 <event_free>
  22aa68:	mov	x0, x20
  22aa6c:	cbz	x20, 22aa88 <event_queue_cleanup+0x40>
  22aa70:	ldr	x20, [x0, #72]
  22aa74:	cbz	w19, 22aa64 <event_queue_cleanup+0x1c>
  22aa78:	ldr	w8, [x0, #16]
  22aa7c:	cmp	w8, w19
  22aa80:	b.eq	22aa64 <event_queue_cleanup+0x1c>  // b.none
  22aa84:	b	22aa68 <event_queue_cleanup+0x20>
  22aa88:	ldp	x20, x19, [sp, #16]
  22aa8c:	ldp	x29, x30, [sp], #32
  22aa90:	ret

000000000022aa94 <event_free>:
  22aa94:	stp	x29, x30, [sp, #-32]!
  22aa98:	stp	x20, x19, [sp, #16]
  22aa9c:	mov	x29, sp
  22aaa0:	cbz	x0, 22ab88 <event_free+0xf4>
  22aaa4:	ldr	x9, [x0]
  22aaa8:	mov	x19, x0
  22aaac:	cbz	x9, 22ab94 <event_free+0x100>
  22aab0:	mov	x8, x19
  22aab4:	ldr	x10, [x8, #72]!
  22aab8:	cbz	x10, 22aac4 <event_free+0x30>
  22aabc:	ldr	x11, [x19, #80]
  22aac0:	str	x11, [x10, #80]
  22aac4:	ldr	x10, [x19, #80]
  22aac8:	cbz	x10, 22aad4 <event_free+0x40>
  22aacc:	add	x9, x10, #0x48
  22aad0:	b	22aae0 <event_free+0x4c>
  22aad4:	ldr	x10, [x9, #16]!
  22aad8:	cmp	x10, x19
  22aadc:	b.ne	22abb8 <event_free+0x124>  // b.any
  22aae0:	ldr	x10, [x19, #72]
  22aae4:	str	x10, [x9]
  22aae8:	stp	xzr, xzr, [x8]
  22aaec:	ldr	x0, [x19, #24]
  22aaf0:	bl	253950 <sd_device_unref@plt>
  22aaf4:	ldr	x0, [x19, #32]
  22aaf8:	bl	253950 <sd_device_unref@plt>
  22aafc:	ldr	x0, [x19, #56]
  22ab00:	bl	253910 <sd_event_source_unref@plt>
  22ab04:	ldr	x0, [x19, #64]
  22ab08:	bl	253910 <sd_event_source_unref@plt>
  22ab0c:	ldr	x8, [x19, #8]
  22ab10:	cbz	x8, 22ab18 <event_free+0x84>
  22ab14:	str	xzr, [x8, #32]
  22ab18:	ldr	x8, [x19]
  22ab1c:	ldr	x9, [x8, #16]
  22ab20:	cbnz	x9, 22ab80 <event_free+0xec>
  22ab24:	ldr	w20, [x8, #32]
  22ab28:	bl	2537e0 <getpid_cached@plt>
  22ab2c:	cmp	w20, w0
  22ab30:	b.ne	22ab80 <event_free+0xec>  // b.any
  22ab34:	adrp	x0, 20e000 <worker_hash_op+0x3ad0>
  22ab38:	add	x0, x0, #0x9f
  22ab3c:	bl	253960 <unlink@plt>
  22ab40:	tbz	w0, #31, 22ab80 <event_free+0xec>
  22ab44:	mov	w0, #0x1                   	// #1
  22ab48:	bl	2535b0 <log_get_max_level_realm@plt>
  22ab4c:	cmp	w0, #0x4
  22ab50:	b.lt	22ab80 <event_free+0xec>  // b.tstop
  22ab54:	bl	253660 <__errno_location@plt>
  22ab58:	ldr	w1, [x0]
  22ab5c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ab60:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  22ab64:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22ab68:	add	x2, x2, #0x55b
  22ab6c:	add	x4, x4, #0x83d
  22ab70:	add	x5, x5, #0xfd0
  22ab74:	mov	w0, #0x404                 	// #1028
  22ab78:	mov	w3, #0xa8                  	// #168
  22ab7c:	bl	2535c0 <log_internal_realm@plt>
  22ab80:	mov	x0, x19
  22ab84:	bl	2536e0 <free@plt>
  22ab88:	ldp	x20, x19, [sp, #16]
  22ab8c:	ldp	x29, x30, [sp], #32
  22ab90:	ret
  22ab94:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22ab98:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ab9c:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  22aba0:	add	x1, x1, #0xc3c
  22aba4:	add	x2, x2, #0x55b
  22aba8:	add	x4, x4, #0xe05
  22abac:	mov	w0, #0x1                   	// #1
  22abb0:	mov	w3, #0x98                  	// #152
  22abb4:	bl	253740 <log_assert_failed_realm@plt>
  22abb8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22abbc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22abc0:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  22abc4:	add	x1, x1, #0xd67
  22abc8:	add	x2, x2, #0x55b
  22abcc:	add	x4, x4, #0xe05
  22abd0:	mov	w0, #0x1                   	// #1
  22abd4:	mov	w3, #0x9a                  	// #154
  22abd8:	bl	253740 <log_assert_failed_realm@plt>

000000000022abdc <safe_atou>:
  22abdc:	stp	x29, x30, [sp, #-16]!
  22abe0:	adrp	x2, 28e000 <string_hash_ops+0xfe38>
  22abe4:	add	x2, x2, #0x200
  22abe8:	mov	w1, wzr
  22abec:	mov	x29, sp
  22abf0:	bl	253970 <safe_atou_full@plt>
  22abf4:	ldp	x29, x30, [sp], #16
  22abf8:	ret

000000000022abfc <help>:
  22abfc:	stp	x29, x30, [sp, #-32]!
  22ac00:	mov	x29, sp
  22ac04:	adrp	x0, 20e000 <worker_hash_op+0x3ad0>
  22ac08:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  22ac0c:	add	x0, x0, #0xd7f
  22ac10:	add	x1, x1, #0xcfe
  22ac14:	add	x2, x29, #0x18
  22ac18:	str	x19, [sp, #16]
  22ac1c:	str	xzr, [x29, #24]
  22ac20:	bl	253980 <terminal_urlify_man@plt>
  22ac24:	tbnz	w0, #31, 22ac48 <help+0x4c>
  22ac28:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22ac2c:	ldr	x1, [x8, #592]
  22ac30:	ldr	x2, [x29, #24]
  22ac34:	adrp	x0, 214000 <worker_hash_op+0x9ad0>
  22ac38:	add	x0, x0, #0x67a
  22ac3c:	bl	253990 <printf@plt>
  22ac40:	mov	w19, wzr
  22ac44:	b	22ac68 <help+0x6c>
  22ac48:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22ac4c:	adrp	x3, 215000 <worker_hash_op+0xaad0>
  22ac50:	add	x1, x1, #0x55b
  22ac54:	add	x3, x3, #0x749
  22ac58:	mov	w0, #0x1                   	// #1
  22ac5c:	mov	w2, #0x5b7                 	// #1463
  22ac60:	bl	2537c0 <log_oom_internal@plt>
  22ac64:	mov	w19, w0
  22ac68:	add	x0, x29, #0x18
  22ac6c:	bl	22990c <freep>
  22ac70:	mov	w0, w19
  22ac74:	ldr	x19, [sp, #16]
  22ac78:	ldp	x29, x30, [sp], #32
  22ac7c:	ret

000000000022ac80 <proc_cmdline_value_missing>:
  22ac80:	stp	x29, x30, [sp, #-32]!
  22ac84:	stp	x20, x19, [sp, #16]
  22ac88:	mov	x29, sp
  22ac8c:	cbz	x1, 22ac98 <proc_cmdline_value_missing+0x18>
  22ac90:	mov	w20, wzr
  22ac94:	b	22ace0 <proc_cmdline_value_missing+0x60>
  22ac98:	mov	x19, x0
  22ac9c:	mov	w0, #0x1                   	// #1
  22aca0:	mov	w20, #0x1                   	// #1
  22aca4:	bl	2535b0 <log_get_max_level_realm@plt>
  22aca8:	cmp	w0, #0x4
  22acac:	b.lt	22ace0 <proc_cmdline_value_missing+0x60>  // b.tstop
  22acb0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22acb4:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22acb8:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  22acbc:	add	x2, x2, #0x6d1
  22acc0:	add	x4, x4, #0x3
  22acc4:	add	x5, x5, #0x8f4
  22acc8:	mov	w0, #0x404                 	// #1028
  22accc:	mov	w3, #0x21                  	// #33
  22acd0:	mov	w1, wzr
  22acd4:	mov	x6, x19
  22acd8:	bl	2535c0 <log_internal_realm@plt>
  22acdc:	mov	w20, #0x1                   	// #1
  22ace0:	mov	w0, w20
  22ace4:	ldp	x20, x19, [sp, #16]
  22ace8:	ldp	x29, x30, [sp], #32
  22acec:	ret

000000000022acf0 <startswith>:
  22acf0:	stp	x29, x30, [sp, #-48]!
  22acf4:	stp	x20, x19, [sp, #32]
  22acf8:	mov	x20, x0
  22acfc:	mov	x0, x1
  22ad00:	str	x21, [sp, #16]
  22ad04:	mov	x29, sp
  22ad08:	mov	x19, x1
  22ad0c:	bl	2539a0 <strlen@plt>
  22ad10:	mov	x21, x0
  22ad14:	mov	x0, x20
  22ad18:	mov	x1, x19
  22ad1c:	mov	x2, x21
  22ad20:	bl	2539b0 <strncmp@plt>
  22ad24:	add	x8, x20, x21
  22ad28:	ldp	x20, x19, [sp, #32]
  22ad2c:	ldr	x21, [sp, #16]
  22ad30:	cmp	w0, #0x0
  22ad34:	csel	x0, x8, xzr, eq  // eq = none
  22ad38:	ldp	x29, x30, [sp], #48
  22ad3c:	ret

000000000022ad40 <malloc_multiply>:
  22ad40:	stp	x29, x30, [sp, #-32]!
  22ad44:	mov	w1, #0x1                   	// #1
  22ad48:	str	x19, [sp, #16]
  22ad4c:	mov	x29, sp
  22ad50:	mov	x19, x0
  22ad54:	bl	22ad7c <size_multiply_overflow>
  22ad58:	tbz	w0, #0, 22ad64 <malloc_multiply+0x24>
  22ad5c:	mov	x0, xzr
  22ad60:	b	22ad70 <malloc_multiply+0x30>
  22ad64:	cmp	x19, #0x0
  22ad68:	csinc	x0, x19, xzr, ne  // ne = any
  22ad6c:	bl	2539c0 <malloc@plt>
  22ad70:	ldr	x19, [sp, #16]
  22ad74:	ldp	x29, x30, [sp], #32
  22ad78:	ret

000000000022ad7c <size_multiply_overflow>:
  22ad7c:	umulh	x8, x1, x0
  22ad80:	cmp	xzr, x8
  22ad84:	cset	w0, ne  // ne = any
  22ad88:	ret

000000000022ad8c <setsockopt_int>:
  22ad8c:	sub	sp, sp, #0x20
  22ad90:	stp	x29, x30, [sp, #16]
  22ad94:	add	x29, sp, #0x10
  22ad98:	mov	w8, #0x1                   	// #1
  22ad9c:	sub	x3, x29, #0x4
  22ada0:	mov	w1, #0x1                   	// #1
  22ada4:	mov	w2, #0x10                  	// #16
  22ada8:	mov	w4, #0x4                   	// #4
  22adac:	stur	w8, [x29, #-4]
  22adb0:	bl	2539d0 <setsockopt@plt>
  22adb4:	tbnz	w0, #31, 22adc0 <setsockopt_int+0x34>
  22adb8:	mov	w0, wzr
  22adbc:	b	22adcc <setsockopt_int+0x40>
  22adc0:	bl	253660 <__errno_location@plt>
  22adc4:	ldr	w8, [x0]
  22adc8:	neg	w0, w8
  22adcc:	ldp	x29, x30, [sp, #16]
  22add0:	add	sp, sp, #0x20
  22add4:	ret

000000000022add8 <on_sigterm>:
  22add8:	stp	x29, x30, [sp, #-16]!
  22addc:	mov	x29, sp
  22ade0:	cbz	x2, 22adf8 <on_sigterm+0x20>
  22ade4:	mov	x0, x2
  22ade8:	bl	22bf3c <manager_exit>
  22adec:	mov	w0, #0x1                   	// #1
  22adf0:	ldp	x29, x30, [sp], #16
  22adf4:	ret
  22adf8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22adfc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ae00:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22ae04:	add	x1, x1, #0xffb
  22ae08:	add	x2, x2, #0x55b
  22ae0c:	add	x4, x4, #0xd95
  22ae10:	mov	w0, #0x1                   	// #1
  22ae14:	mov	w3, #0x4e5                 	// #1253
  22ae18:	bl	253740 <log_assert_failed_realm@plt>

000000000022ae1c <on_sighup>:
  22ae1c:	stp	x29, x30, [sp, #-16]!
  22ae20:	mov	x29, sp
  22ae24:	cbz	x2, 22ae3c <on_sighup+0x20>
  22ae28:	mov	x0, x2
  22ae2c:	bl	22c0b4 <manager_reload>
  22ae30:	mov	w0, #0x1                   	// #1
  22ae34:	ldp	x29, x30, [sp], #16
  22ae38:	ret
  22ae3c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22ae40:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ae44:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  22ae48:	add	x1, x1, #0xffb
  22ae4c:	add	x2, x2, #0x55b
  22ae50:	add	x4, x4, #0xd0a
  22ae54:	mov	w0, #0x1                   	// #1
  22ae58:	mov	w3, #0x4ef                 	// #1263
  22ae5c:	bl	253740 <log_assert_failed_realm@plt>

000000000022ae60 <on_sigchld>:
  22ae60:	sub	sp, sp, #0x90
  22ae64:	stp	x29, x30, [sp, #48]
  22ae68:	stp	x28, x27, [sp, #64]
  22ae6c:	stp	x26, x25, [sp, #80]
  22ae70:	stp	x24, x23, [sp, #96]
  22ae74:	stp	x22, x21, [sp, #112]
  22ae78:	stp	x20, x19, [sp, #128]
  22ae7c:	add	x29, sp, #0x30
  22ae80:	cbz	x2, 22b250 <on_sigchld+0x3f0>
  22ae84:	mov	x19, x2
  22ae88:	sub	x1, x29, #0x4
  22ae8c:	mov	w0, #0xffffffff            	// #-1
  22ae90:	mov	w2, #0x1                   	// #1
  22ae94:	bl	2539e0 <waitpid@plt>
  22ae98:	cmp	w0, #0x1
  22ae9c:	b.lt	22b1d0 <on_sigchld+0x370>  // b.tstop
  22aea0:	adrp	x20, 20c000 <worker_hash_op+0x1ad0>
  22aea4:	adrp	x21, 215000 <worker_hash_op+0xaad0>
  22aea8:	adrp	x24, 211000 <worker_hash_op+0x6ad0>
  22aeac:	mov	w27, w0
  22aeb0:	add	x20, x20, #0x55b
  22aeb4:	add	x21, x21, #0x6f
  22aeb8:	add	x24, x24, #0xb64
  22aebc:	mov	w22, #0x1000000             	// #16777216
  22aec0:	mov	w25, #0x2000000             	// #33554432
  22aec4:	b	22af20 <on_sigchld+0xc0>
  22aec8:	ldur	x6, [x29, #-16]
  22aecc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22aed0:	add	x8, x8, #0x549
  22aed4:	mov	w0, #0x3                   	// #3
  22aed8:	cmp	x6, #0x0
  22aedc:	csel	x5, xzr, x24, eq  // eq = none
  22aee0:	mov	w3, #0x526                 	// #1318
  22aee4:	mov	w1, w27
  22aee8:	mov	x2, x20
  22aeec:	mov	x4, x21
  22aef0:	mov	x7, xzr
  22aef4:	stp	xzr, x8, [sp]
  22aef8:	bl	2539f0 <log_object_internal@plt>
  22aefc:	mov	x0, x28
  22af00:	bl	22c154 <worker_free>
  22af04:	sub	x1, x29, #0x4
  22af08:	mov	w0, #0xffffffff            	// #-1
  22af0c:	mov	w2, #0x1                   	// #1
  22af10:	bl	2539e0 <waitpid@plt>
  22af14:	mov	w27, w0
  22af18:	cmp	w0, #0x1
  22af1c:	b.lt	22b1d0 <on_sigchld+0x370>  // b.tstop
  22af20:	ldr	x23, [x19, #8]
  22af24:	mov	w0, w27
  22af28:	bl	22c14c <PID_TO_PTR>
  22af2c:	mov	x1, x0
  22af30:	mov	x0, x23
  22af34:	bl	22c138 <hashmap_get>
  22af38:	cbz	x0, 22afa0 <on_sigchld+0x140>
  22af3c:	ldur	w23, [x29, #-4]
  22af40:	mov	x28, x0
  22af44:	ands	w26, w23, #0x7f
  22af48:	b.eq	22afd0 <on_sigchld+0x170>  // b.none
  22af4c:	add	w8, w22, w26, lsl #24
  22af50:	cmp	w8, w25
  22af54:	b.lt	22b008 <on_sigchld+0x1a8>  // b.tstop
  22af58:	mov	w0, #0x1                   	// #1
  22af5c:	bl	2535b0 <log_get_max_level_realm@plt>
  22af60:	cmp	w0, #0x4
  22af64:	b.lt	22b0e4 <on_sigchld+0x284>  // b.tstop
  22af68:	mov	w0, w26
  22af6c:	bl	253a00 <signal_to_string@plt>
  22af70:	mov	x8, x0
  22af74:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  22af78:	mov	w0, #0x404                 	// #1028
  22af7c:	mov	w3, #0x511                 	// #1297
  22af80:	str	x8, [sp]
  22af84:	mov	w1, wzr
  22af88:	mov	x2, x20
  22af8c:	mov	x4, x21
  22af90:	add	x5, x5, #0xd98
  22af94:	mov	w6, w27
  22af98:	mov	w7, w26
  22af9c:	b	22b0e0 <on_sigchld+0x280>
  22afa0:	mov	w0, #0x1                   	// #1
  22afa4:	bl	2535b0 <log_get_max_level_realm@plt>
  22afa8:	cmp	w0, #0x4
  22afac:	b.lt	22af04 <on_sigchld+0xa4>  // b.tstop
  22afb0:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22afb4:	mov	w0, #0x404                 	// #1028
  22afb8:	mov	w3, #0x507                 	// #1287
  22afbc:	mov	w1, wzr
  22afc0:	mov	x2, x20
  22afc4:	mov	x4, x21
  22afc8:	add	x5, x5, #0x8b8
  22afcc:	b	22b078 <on_sigchld+0x218>
  22afd0:	mov	w0, #0x1                   	// #1
  22afd4:	ubfx	w23, w23, #8, #8
  22afd8:	bl	2535b0 <log_get_max_level_realm@plt>
  22afdc:	cbz	w23, 22b084 <on_sigchld+0x224>
  22afe0:	cmp	w0, #0x4
  22afe4:	b.lt	22b0e4 <on_sigchld+0x284>  // b.tstop
  22afe8:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22afec:	mov	w0, #0x404                 	// #1028
  22aff0:	mov	w3, #0x50f                 	// #1295
  22aff4:	mov	w1, wzr
  22aff8:	mov	x2, x20
  22affc:	mov	x4, x21
  22b000:	add	x5, x5, #0x522
  22b004:	b	22b0d8 <on_sigchld+0x278>
  22b008:	and	w8, w23, #0xff
  22b00c:	mov	w0, #0x1                   	// #1
  22b010:	cmp	w8, #0x7f
  22b014:	b.ne	22b044 <on_sigchld+0x1e4>  // b.any
  22b018:	bl	2535b0 <log_get_max_level_realm@plt>
  22b01c:	cmp	w0, #0x6
  22b020:	b.lt	22af04 <on_sigchld+0xa4>  // b.tstop
  22b024:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22b028:	mov	w0, #0x406                 	// #1030
  22b02c:	mov	w3, #0x513                 	// #1299
  22b030:	mov	w1, wzr
  22b034:	mov	x2, x20
  22b038:	mov	x4, x21
  22b03c:	add	x5, x5, #0xb50
  22b040:	b	22b078 <on_sigchld+0x218>
  22b044:	bl	2535b0 <log_get_max_level_realm@plt>
  22b048:	mov	w8, #0xffff                	// #65535
  22b04c:	cmp	w23, w8
  22b050:	b.ne	22b0b4 <on_sigchld+0x254>  // b.any
  22b054:	cmp	w0, #0x6
  22b058:	b.lt	22af04 <on_sigchld+0xa4>  // b.tstop
  22b05c:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22b060:	mov	w0, #0x406                 	// #1030
  22b064:	mov	w3, #0x516                 	// #1302
  22b068:	mov	w1, wzr
  22b06c:	mov	x2, x20
  22b070:	mov	x4, x21
  22b074:	add	x5, x5, #0x1da
  22b078:	mov	w6, w27
  22b07c:	bl	2535c0 <log_internal_realm@plt>
  22b080:	b	22af04 <on_sigchld+0xa4>
  22b084:	cmp	w0, #0x7
  22b088:	b.lt	22b0e4 <on_sigchld+0x284>  // b.tstop
  22b08c:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  22b090:	mov	w0, #0x407                 	// #1031
  22b094:	mov	w3, #0x50d                 	// #1293
  22b098:	mov	w1, wzr
  22b09c:	mov	x2, x20
  22b0a0:	mov	x4, x21
  22b0a4:	add	x5, x5, #0x6
  22b0a8:	mov	w6, w27
  22b0ac:	bl	2535c0 <log_internal_realm@plt>
  22b0b0:	b	22b0e4 <on_sigchld+0x284>
  22b0b4:	cmp	w0, #0x4
  22b0b8:	b.lt	22b0e4 <on_sigchld+0x284>  // b.tstop
  22b0bc:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  22b0c0:	mov	w0, #0x404                 	// #1028
  22b0c4:	mov	w3, #0x519                 	// #1305
  22b0c8:	mov	w1, wzr
  22b0cc:	mov	x2, x20
  22b0d0:	mov	x4, x21
  22b0d4:	add	x5, x5, #0x2f3
  22b0d8:	mov	w6, w27
  22b0dc:	mov	w7, w23
  22b0e0:	bl	2535c0 <log_internal_realm@plt>
  22b0e4:	ldurh	w8, [x29, #-4]
  22b0e8:	tst	w8, #0xffffff7f
  22b0ec:	b.eq	22aefc <on_sigchld+0x9c>  // b.none
  22b0f0:	ldr	x8, [x28, #32]
  22b0f4:	cbz	x8, 22aefc <on_sigchld+0x9c>
  22b0f8:	stur	xzr, [x29, #-16]
  22b0fc:	ldr	x8, [x28, #32]
  22b100:	ldr	x23, [x8, #24]
  22b104:	cbz	x23, 22b118 <on_sigchld+0x2b8>
  22b108:	mov	w0, #0x1                   	// #1
  22b10c:	bl	2535b0 <log_get_max_level_realm@plt>
  22b110:	cmp	w0, #0x3
  22b114:	b.ge	22b1c0 <on_sigchld+0x360>  // b.tcont
  22b118:	ldur	x6, [x29, #-16]
  22b11c:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  22b120:	add	x8, x8, #0x869
  22b124:	mov	w0, #0x3                   	// #3
  22b128:	cmp	x6, #0x0
  22b12c:	csel	x5, xzr, x24, eq  // eq = none
  22b130:	mov	w3, #0x51c                 	// #1308
  22b134:	mov	w1, wzr
  22b138:	mov	x2, x20
  22b13c:	mov	x4, x21
  22b140:	mov	x7, xzr
  22b144:	str	w27, [sp, #16]
  22b148:	stp	xzr, x8, [sp]
  22b14c:	bl	2539f0 <log_object_internal@plt>
  22b150:	ldr	x8, [x28, #32]
  22b154:	ldr	x0, [x8, #24]
  22b158:	bl	253a10 <device_delete_db@plt>
  22b15c:	ldr	x8, [x28, #32]
  22b160:	mov	x1, xzr
  22b164:	mov	w2, wzr
  22b168:	ldr	x0, [x8, #24]
  22b16c:	bl	253a20 <device_tag_index@plt>
  22b170:	ldr	x0, [x19, #64]
  22b174:	cbz	x0, 22aefc <on_sigchld+0x9c>
  22b178:	ldr	x8, [x28, #32]
  22b17c:	mov	x1, xzr
  22b180:	ldr	x2, [x8, #32]
  22b184:	bl	253a30 <device_monitor_send_device@plt>
  22b188:	tbz	w0, #31, 22aefc <on_sigchld+0x9c>
  22b18c:	stur	xzr, [x29, #-16]
  22b190:	ldr	x8, [x28, #32]
  22b194:	mov	w27, w0
  22b198:	ldr	x23, [x8, #32]
  22b19c:	cbz	x23, 22aec8 <on_sigchld+0x68>
  22b1a0:	mov	w0, #0x1                   	// #1
  22b1a4:	bl	2535b0 <log_get_max_level_realm@plt>
  22b1a8:	cmp	w0, #0x3
  22b1ac:	b.lt	22aec8 <on_sigchld+0x68>  // b.tstop
  22b1b0:	sub	x1, x29, #0x10
  22b1b4:	mov	x0, x23
  22b1b8:	bl	253a40 <sd_device_get_sysname@plt>
  22b1bc:	b	22aec8 <on_sigchld+0x68>
  22b1c0:	sub	x1, x29, #0x10
  22b1c4:	mov	x0, x23
  22b1c8:	bl	253a40 <sd_device_get_sysname@plt>
  22b1cc:	b	22b118 <on_sigchld+0x2b8>
  22b1d0:	mov	x0, x19
  22b1d4:	bl	22c1d0 <event_queue_start>
  22b1d8:	ldr	x0, [x19, #8]
  22b1dc:	bl	22c394 <hashmap_isempty>
  22b1e0:	tbz	w0, #0, 22b22c <on_sigchld+0x3cc>
  22b1e4:	ldr	x0, [x19, #104]
  22b1e8:	bl	253a50 <event_source_disable@plt>
  22b1ec:	tbz	w0, #31, 22b22c <on_sigchld+0x3cc>
  22b1f0:	mov	w19, w0
  22b1f4:	mov	w0, #0x1                   	// #1
  22b1f8:	bl	2535b0 <log_get_max_level_realm@plt>
  22b1fc:	cmp	w0, #0x4
  22b200:	b.lt	22b22c <on_sigchld+0x3cc>  // b.tstop
  22b204:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b208:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22b20c:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22b210:	add	x2, x2, #0x55b
  22b214:	add	x4, x4, #0x6f
  22b218:	add	x5, x5, #0x8d9
  22b21c:	mov	w0, #0x404                 	// #1028
  22b220:	mov	w3, #0x534                 	// #1332
  22b224:	mov	w1, w19
  22b228:	bl	2535c0 <log_internal_realm@plt>
  22b22c:	ldp	x20, x19, [sp, #128]
  22b230:	ldp	x22, x21, [sp, #112]
  22b234:	ldp	x24, x23, [sp, #96]
  22b238:	ldp	x26, x25, [sp, #80]
  22b23c:	ldp	x28, x27, [sp, #64]
  22b240:	ldp	x29, x30, [sp, #48]
  22b244:	mov	w0, #0x1                   	// #1
  22b248:	add	sp, sp, #0x90
  22b24c:	ret
  22b250:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22b254:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b258:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  22b25c:	add	x1, x1, #0xffb
  22b260:	add	x2, x2, #0x55b
  22b264:	add	x4, x4, #0x217
  22b268:	mov	w0, #0x1                   	// #1
  22b26c:	mov	w3, #0x4fa                 	// #1274
  22b270:	bl	253740 <log_assert_failed_realm@plt>

000000000022b274 <on_ctrl_msg>:
  22b274:	sub	sp, sp, #0x50
  22b278:	stp	x29, x30, [sp, #32]
  22b27c:	stp	x22, x21, [sp, #48]
  22b280:	stp	x20, x19, [sp, #64]
  22b284:	add	x29, sp, #0x20
  22b288:	cbz	x2, 22b7d4 <on_ctrl_msg+0x560>
  22b28c:	mov	x19, x3
  22b290:	cbz	x3, 22b7f8 <on_ctrl_msg+0x584>
  22b294:	sub	w8, w1, #0x1
  22b298:	cmp	w8, #0x7
  22b29c:	b.hi	22b5c0 <on_ctrl_msg+0x34c>  // b.pmore
  22b2a0:	adrp	x9, 20a000 <parse_argv.options-0x3f0>
  22b2a4:	add	x9, x9, #0x3de
  22b2a8:	adr	x10, 22b2bc <on_ctrl_msg+0x48>
  22b2ac:	ldrb	w11, [x9, x8]
  22b2b0:	add	x10, x10, x11, lsl #2
  22b2b4:	mov	x20, x2
  22b2b8:	br	x10
  22b2bc:	mov	w0, #0x1                   	// #1
  22b2c0:	bl	2535b0 <log_get_max_level_realm@plt>
  22b2c4:	cmp	w0, #0x7
  22b2c8:	b.lt	22b2f8 <on_ctrl_msg+0x84>  // b.tstop
  22b2cc:	ldr	w6, [x20]
  22b2d0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b2d4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b2d8:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22b2dc:	add	x2, x2, #0x55b
  22b2e0:	add	x4, x4, #0x925
  22b2e4:	add	x5, x5, #0xbb4
  22b2e8:	mov	w0, #0x407                 	// #1031
  22b2ec:	mov	w3, #0x3dc                 	// #988
  22b2f0:	mov	w1, wzr
  22b2f4:	bl	2535c0 <log_internal_realm@plt>
  22b2f8:	ldr	w1, [x20]
  22b2fc:	mov	w0, #0x1                   	// #1
  22b300:	mov	w21, #0x1                   	// #1
  22b304:	bl	2535d0 <log_set_max_level_realm@plt>
  22b308:	ldr	w1, [x20]
  22b30c:	mov	w0, wzr
  22b310:	bl	2535d0 <log_set_max_level_realm@plt>
  22b314:	mov	x0, x19
  22b318:	bl	22bfec <manager_kill_workers>
  22b31c:	b	22b784 <on_ctrl_msg+0x510>
  22b320:	mov	w1, #0x3d                  	// #61
  22b324:	mov	x0, x20
  22b328:	stur	xzr, [x29, #-8]
  22b32c:	stp	xzr, xzr, [sp, #8]
  22b330:	str	xzr, [sp]
  22b334:	bl	253a60 <strchr@plt>
  22b338:	cbz	x0, 22b600 <on_ctrl_msg+0x38c>
  22b33c:	mov	x22, x0
  22b340:	sub	x1, x0, x20
  22b344:	mov	x0, x20
  22b348:	bl	253a70 <strndup@plt>
  22b34c:	stur	x0, [x29, #-8]
  22b350:	cbz	x0, 22b67c <on_ctrl_msg+0x408>
  22b354:	mov	x21, x19
  22b358:	mov	x20, x0
  22b35c:	ldr	x0, [x21, #48]!
  22b360:	add	x2, sp, #0x8
  22b364:	mov	x1, x20
  22b368:	bl	253a80 <hashmap_remove2@plt>
  22b36c:	adrp	x1, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  22b370:	str	x0, [sp]
  22b374:	add	x1, x1, #0x1c8
  22b378:	mov	x0, x21
  22b37c:	bl	253a90 <internal_hashmap_ensure_allocated@plt>
  22b380:	tbnz	w0, #31, 22b6a4 <on_ctrl_msg+0x430>
  22b384:	add	x22, x22, #0x1
  22b388:	mov	x0, x22
  22b38c:	bl	22df34 <isempty>
  22b390:	tbz	w0, #0, 22b6e8 <on_ctrl_msg+0x474>
  22b394:	mov	w0, #0x1                   	// #1
  22b398:	bl	2535b0 <log_get_max_level_realm@plt>
  22b39c:	cmp	w0, #0x7
  22b3a0:	b.lt	22b3d0 <on_ctrl_msg+0x15c>  // b.tstop
  22b3a4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b3a8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b3ac:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22b3b0:	add	x2, x2, #0x55b
  22b3b4:	add	x4, x4, #0x925
  22b3b8:	add	x5, x5, #0x119
  22b3bc:	mov	w0, #0x407                 	// #1031
  22b3c0:	mov	w3, #0x408                 	// #1032
  22b3c4:	mov	w1, wzr
  22b3c8:	mov	x6, x20
  22b3cc:	bl	2535c0 <log_internal_realm@plt>
  22b3d0:	ldr	x0, [x21]
  22b3d4:	mov	x1, x20
  22b3d8:	mov	x2, xzr
  22b3dc:	bl	253aa0 <hashmap_put@plt>
  22b3e0:	tbz	w0, #31, 22b750 <on_ctrl_msg+0x4dc>
  22b3e4:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22b3e8:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  22b3ec:	add	x1, x1, #0x55b
  22b3f0:	add	x3, x3, #0x925
  22b3f4:	mov	w0, #0x1                   	// #1
  22b3f8:	mov	w2, #0x40c                 	// #1036
  22b3fc:	b	22b6bc <on_ctrl_msg+0x448>
  22b400:	mov	w0, #0x1                   	// #1
  22b404:	bl	2535b0 <log_get_max_level_realm@plt>
  22b408:	cmp	w0, #0x7
  22b40c:	b.lt	22b438 <on_ctrl_msg+0x1c4>  // b.tstop
  22b410:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b414:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b418:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22b41c:	add	x2, x2, #0x55b
  22b420:	add	x4, x4, #0x925
  22b424:	add	x5, x5, #0x86c
  22b428:	mov	w0, #0x407                 	// #1031
  22b42c:	mov	w3, #0x3e6                 	// #998
  22b430:	mov	w1, wzr
  22b434:	bl	2535c0 <log_internal_realm@plt>
  22b438:	ldrb	w8, [x19, #120]
  22b43c:	mov	x0, x19
  22b440:	and	w8, w8, #0xfe
  22b444:	strb	w8, [x19, #120]
  22b448:	bl	22c1d0 <event_queue_start>
  22b44c:	b	22b780 <on_ctrl_msg+0x50c>
  22b450:	mov	w0, #0x1                   	// #1
  22b454:	bl	2535b0 <log_get_max_level_realm@plt>
  22b458:	cmp	w0, #0x7
  22b45c:	b.lt	22b488 <on_ctrl_msg+0x214>  // b.tstop
  22b460:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b464:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b468:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  22b46c:	add	x2, x2, #0x55b
  22b470:	add	x4, x4, #0x925
  22b474:	add	x5, x5, #0x516
  22b478:	mov	w0, #0x407                 	// #1031
  22b47c:	mov	w3, #0x3eb                 	// #1003
  22b480:	mov	w1, wzr
  22b484:	bl	2535c0 <log_internal_realm@plt>
  22b488:	mov	x0, x19
  22b48c:	bl	22c0b4 <manager_reload>
  22b490:	b	22b780 <on_ctrl_msg+0x50c>
  22b494:	mov	w0, #0x1                   	// #1
  22b498:	bl	2535b0 <log_get_max_level_realm@plt>
  22b49c:	cmp	w0, #0x7
  22b4a0:	b.lt	22b4cc <on_ctrl_msg+0x258>  // b.tstop
  22b4a4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b4a8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b4ac:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22b4b0:	add	x2, x2, #0x55b
  22b4b4:	add	x4, x4, #0x925
  22b4b8:	add	x5, x5, #0xfd1
  22b4bc:	mov	w0, #0x407                 	// #1031
  22b4c0:	mov	w3, #0x3e2                 	// #994
  22b4c4:	mov	w1, wzr
  22b4c8:	bl	2535c0 <log_internal_realm@plt>
  22b4cc:	ldrb	w8, [x19, #120]
  22b4d0:	orr	w8, w8, #0x1
  22b4d4:	strb	w8, [x19, #120]
  22b4d8:	b	22b780 <on_ctrl_msg+0x50c>
  22b4dc:	mov	w0, #0x1                   	// #1
  22b4e0:	bl	2535b0 <log_get_max_level_realm@plt>
  22b4e4:	cmp	w0, #0x7
  22b4e8:	b.lt	22b514 <on_ctrl_msg+0x2a0>  // b.tstop
  22b4ec:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b4f0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b4f4:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22b4f8:	add	x2, x2, #0x55b
  22b4fc:	add	x4, x4, #0x925
  22b500:	add	x5, x5, #0x13d
  22b504:	mov	w0, #0x407                 	// #1031
  22b508:	mov	w3, #0x434                 	// #1076
  22b50c:	mov	w1, wzr
  22b510:	bl	2535c0 <log_internal_realm@plt>
  22b514:	mov	x0, x19
  22b518:	bl	22bf3c <manager_exit>
  22b51c:	b	22b780 <on_ctrl_msg+0x50c>
  22b520:	ldr	w19, [x20]
  22b524:	mov	w0, #0x1                   	// #1
  22b528:	bl	2535b0 <log_get_max_level_realm@plt>
  22b52c:	cmp	w19, #0x0
  22b530:	b.le	22b640 <on_ctrl_msg+0x3cc>
  22b534:	cmp	w0, #0x7
  22b538:	b.lt	22b568 <on_ctrl_msg+0x2f4>  // b.tstop
  22b53c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b540:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b544:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  22b548:	add	x2, x2, #0x55b
  22b54c:	add	x4, x4, #0x925
  22b550:	add	x5, x5, #0x44e
  22b554:	mov	w0, #0x407                 	// #1031
  22b558:	mov	w3, #0x429                 	// #1065
  22b55c:	mov	w1, wzr
  22b560:	mov	w6, w19
  22b564:	bl	2535c0 <log_internal_realm@plt>
  22b568:	ldr	w2, [x20]
  22b56c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  22b570:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22b574:	add	x1, x1, #0xab2
  22b578:	mov	w0, wzr
  22b57c:	str	w2, [x8, #512]
  22b580:	bl	2538b0 <sd_notifyf@plt>
  22b584:	b	22b780 <on_ctrl_msg+0x50c>
  22b588:	mov	w0, #0x1                   	// #1
  22b58c:	mov	w21, #0x1                   	// #1
  22b590:	bl	2535b0 <log_get_max_level_realm@plt>
  22b594:	cmp	w0, #0x7
  22b598:	b.lt	22b784 <on_ctrl_msg+0x510>  // b.tstop
  22b59c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b5a0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b5a4:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  22b5a8:	add	x2, x2, #0x55b
  22b5ac:	add	x4, x4, #0x925
  22b5b0:	add	x5, x5, #0x53d
  22b5b4:	mov	w0, #0x407                 	// #1031
  22b5b8:	mov	w3, #0x431                 	// #1073
  22b5bc:	b	22b5f4 <on_ctrl_msg+0x380>
  22b5c0:	mov	w0, #0x1                   	// #1
  22b5c4:	mov	w21, #0x1                   	// #1
  22b5c8:	bl	2535b0 <log_get_max_level_realm@plt>
  22b5cc:	cmp	w0, #0x7
  22b5d0:	b.lt	22b784 <on_ctrl_msg+0x510>  // b.tstop
  22b5d4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b5d8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b5dc:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22b5e0:	add	x2, x2, #0x55b
  22b5e4:	add	x4, x4, #0x925
  22b5e8:	add	x5, x5, #0xe48
  22b5ec:	mov	w0, #0x407                 	// #1031
  22b5f0:	mov	w3, #0x438                 	// #1080
  22b5f4:	mov	w1, wzr
  22b5f8:	bl	2535c0 <log_internal_realm@plt>
  22b5fc:	b	22b780 <on_ctrl_msg+0x50c>
  22b600:	mov	w0, #0x1                   	// #1
  22b604:	bl	2535b0 <log_get_max_level_realm@plt>
  22b608:	cmp	w0, #0x3
  22b60c:	b.lt	22b760 <on_ctrl_msg+0x4ec>  // b.tstop
  22b610:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b614:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b618:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  22b61c:	add	x2, x2, #0x55b
  22b620:	add	x4, x4, #0x925
  22b624:	add	x5, x5, #0x9ea
  22b628:	mov	w0, #0x403                 	// #1027
  22b62c:	mov	w3, #0x3f4                 	// #1012
  22b630:	mov	w1, wzr
  22b634:	mov	x6, x20
  22b638:	bl	2535c0 <log_internal_realm@plt>
  22b63c:	b	22b760 <on_ctrl_msg+0x4ec>
  22b640:	cmp	w0, #0x7
  22b644:	b.lt	22b69c <on_ctrl_msg+0x428>  // b.tstop
  22b648:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b64c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b650:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  22b654:	add	x2, x2, #0x55b
  22b658:	add	x4, x4, #0x925
  22b65c:	add	x5, x5, #0x406
  22b660:	mov	w0, #0x407                 	// #1031
  22b664:	mov	w3, #0x425                 	// #1061
  22b668:	mov	w1, wzr
  22b66c:	mov	w6, w19
  22b670:	bl	2535c0 <log_internal_realm@plt>
  22b674:	mov	w21, wzr
  22b678:	b	22b784 <on_ctrl_msg+0x510>
  22b67c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22b680:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  22b684:	add	x1, x1, #0x55b
  22b688:	add	x3, x3, #0x925
  22b68c:	mov	w0, #0x1                   	// #1
  22b690:	mov	w2, #0x3fa                 	// #1018
  22b694:	bl	2537c0 <log_oom_internal@plt>
  22b698:	b	22b760 <on_ctrl_msg+0x4ec>
  22b69c:	mov	w21, wzr
  22b6a0:	b	22b784 <on_ctrl_msg+0x510>
  22b6a4:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22b6a8:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  22b6ac:	add	x1, x1, #0x55b
  22b6b0:	add	x3, x3, #0x925
  22b6b4:	mov	w0, #0x1                   	// #1
  22b6b8:	mov	w2, #0x402                 	// #1026
  22b6bc:	mov	w21, #0x1                   	// #1
  22b6c0:	bl	2537c0 <log_oom_internal@plt>
  22b6c4:	mov	x0, sp
  22b6c8:	bl	22990c <freep>
  22b6cc:	add	x0, sp, #0x8
  22b6d0:	bl	22990c <freep>
  22b6d4:	add	x0, sp, #0x10
  22b6d8:	bl	22990c <freep>
  22b6dc:	sub	x0, x29, #0x8
  22b6e0:	bl	22990c <freep>
  22b6e4:	b	22b784 <on_ctrl_msg+0x510>
  22b6e8:	mov	x0, x22
  22b6ec:	bl	253ab0 <strdup@plt>
  22b6f0:	str	x0, [sp, #16]
  22b6f4:	cbz	x0, 22b79c <on_ctrl_msg+0x528>
  22b6f8:	mov	x22, x0
  22b6fc:	mov	w0, #0x1                   	// #1
  22b700:	bl	2535b0 <log_get_max_level_realm@plt>
  22b704:	cmp	w0, #0x7
  22b708:	b.lt	22b73c <on_ctrl_msg+0x4c8>  // b.tstop
  22b70c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b710:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22b714:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22b718:	add	x2, x2, #0x55b
  22b71c:	add	x4, x4, #0x925
  22b720:	add	x5, x5, #0xe13
  22b724:	mov	w0, #0x407                 	// #1031
  22b728:	mov	w3, #0x416                 	// #1046
  22b72c:	mov	w1, wzr
  22b730:	mov	x6, x20
  22b734:	mov	x7, x22
  22b738:	bl	2535c0 <log_internal_realm@plt>
  22b73c:	ldr	x0, [x21]
  22b740:	mov	x1, x20
  22b744:	mov	x2, x22
  22b748:	bl	253aa0 <hashmap_put@plt>
  22b74c:	tbnz	w0, #31, 22b7b8 <on_ctrl_msg+0x544>
  22b750:	mov	x0, x19
  22b754:	str	xzr, [sp, #16]
  22b758:	stur	xzr, [x29, #-8]
  22b75c:	bl	22bfec <manager_kill_workers>
  22b760:	mov	x0, sp
  22b764:	bl	22990c <freep>
  22b768:	add	x0, sp, #0x8
  22b76c:	bl	22990c <freep>
  22b770:	add	x0, sp, #0x10
  22b774:	bl	22990c <freep>
  22b778:	sub	x0, x29, #0x8
  22b77c:	bl	22990c <freep>
  22b780:	mov	w21, #0x1                   	// #1
  22b784:	mov	w0, w21
  22b788:	ldp	x20, x19, [sp, #64]
  22b78c:	ldp	x22, x21, [sp, #48]
  22b790:	ldp	x29, x30, [sp, #32]
  22b794:	add	sp, sp, #0x50
  22b798:	ret
  22b79c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22b7a0:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  22b7a4:	add	x1, x1, #0x55b
  22b7a8:	add	x3, x3, #0x925
  22b7ac:	mov	w0, #0x1                   	// #1
  22b7b0:	mov	w2, #0x412                 	// #1042
  22b7b4:	b	22b694 <on_ctrl_msg+0x420>
  22b7b8:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22b7bc:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  22b7c0:	add	x1, x1, #0x55b
  22b7c4:	add	x3, x3, #0x925
  22b7c8:	mov	w0, #0x1                   	// #1
  22b7cc:	mov	w2, #0x41a                 	// #1050
  22b7d0:	b	22b694 <on_ctrl_msg+0x420>
  22b7d4:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  22b7d8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b7dc:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22b7e0:	add	x1, x1, #0xb91
  22b7e4:	add	x2, x2, #0x55b
  22b7e8:	add	x4, x4, #0xe89
  22b7ec:	mov	w0, #0x1                   	// #1
  22b7f0:	mov	w3, #0x3d7                 	// #983
  22b7f4:	bl	253740 <log_assert_failed_realm@plt>
  22b7f8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22b7fc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b800:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22b804:	add	x1, x1, #0xffb
  22b808:	add	x2, x2, #0x55b
  22b80c:	add	x4, x4, #0xe89
  22b810:	mov	w0, #0x1                   	// #1
  22b814:	mov	w3, #0x3d8                 	// #984
  22b818:	bl	253740 <log_assert_failed_realm@plt>

000000000022b81c <on_inotify>:
  22b81c:	sub	sp, sp, #0x1a0
  22b820:	stp	x29, x30, [sp, #336]
  22b824:	stp	x28, x25, [sp, #352]
  22b828:	stp	x24, x23, [sp, #368]
  22b82c:	stp	x22, x21, [sp, #384]
  22b830:	stp	x20, x19, [sp, #400]
  22b834:	add	x29, sp, #0x150
  22b838:	cbz	x3, 22ba28 <on_inotify+0x20c>
  22b83c:	ldr	x0, [x3, #104]
  22b840:	mov	w19, w1
  22b844:	bl	253a50 <event_source_disable@plt>
  22b848:	tbz	w0, #31, 22b888 <on_inotify+0x6c>
  22b84c:	mov	w20, w0
  22b850:	mov	w0, #0x1                   	// #1
  22b854:	bl	2535b0 <log_get_max_level_realm@plt>
  22b858:	cmp	w0, #0x4
  22b85c:	b.lt	22b888 <on_inotify+0x6c>  // b.tstop
  22b860:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b864:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22b868:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22b86c:	add	x2, x2, #0x55b
  22b870:	add	x4, x4, #0xe78
  22b874:	add	x5, x5, #0x8d9
  22b878:	mov	w0, #0x404                 	// #1028
  22b87c:	mov	w3, #0x4c4                 	// #1220
  22b880:	mov	w1, w20
  22b884:	bl	2535c0 <log_internal_realm@plt>
  22b888:	add	x1, sp, #0x40
  22b88c:	mov	w2, #0x110                 	// #272
  22b890:	mov	w0, w19
  22b894:	add	x20, sp, #0x40
  22b898:	bl	253ac0 <read@plt>
  22b89c:	tbnz	x0, #63, 22b9bc <on_inotify+0x1a0>
  22b8a0:	add	x22, x20, x0
  22b8a4:	cmp	x22, x20
  22b8a8:	b.ls	22b99c <on_inotify+0x180>  // b.plast
  22b8ac:	adrp	x24, 211000 <worker_hash_op+0x6ad0>
  22b8b0:	adrp	x25, 20b000 <worker_hash_op+0xad0>
  22b8b4:	adrp	x19, 20c000 <worker_hash_op+0x1ad0>
  22b8b8:	adrp	x20, 20e000 <worker_hash_op+0x3ad0>
  22b8bc:	add	x23, sp, #0x40
  22b8c0:	add	x24, x24, #0xb64
  22b8c4:	add	x25, x25, #0x14d
  22b8c8:	add	x19, x19, #0x55b
  22b8cc:	add	x20, x20, #0xe78
  22b8d0:	b	22b8f8 <on_inotify+0xdc>
  22b8d4:	ldr	x0, [sp, #56]
  22b8d8:	bl	22df50 <synthesize_change>
  22b8dc:	add	x0, sp, #0x38
  22b8e0:	bl	22d424 <sd_device_unrefp>
  22b8e4:	ldr	w8, [x23, #12]
  22b8e8:	add	x8, x23, x8
  22b8ec:	add	x23, x8, #0x10
  22b8f0:	cmp	x22, x23
  22b8f4:	b.ls	22b99c <on_inotify+0x180>  // b.plast
  22b8f8:	ldr	w0, [x23]
  22b8fc:	add	x1, sp, #0x38
  22b900:	str	xzr, [sp, #56]
  22b904:	bl	23ed34 <udev_watch_lookup>
  22b908:	cmp	w0, #0x1
  22b90c:	b.lt	22b8dc <on_inotify+0xc0>  // b.tstop
  22b910:	ldr	x0, [sp, #56]
  22b914:	add	x1, sp, #0x30
  22b918:	bl	253ad0 <sd_device_get_devname@plt>
  22b91c:	tbnz	w0, #31, 22b8dc <on_inotify+0xc0>
  22b920:	ldr	x21, [sp, #56]
  22b924:	str	xzr, [sp, #40]
  22b928:	cbz	x21, 22b93c <on_inotify+0x120>
  22b92c:	mov	w0, #0x1                   	// #1
  22b930:	bl	2535b0 <log_get_max_level_realm@plt>
  22b934:	cmp	w0, #0x7
  22b938:	b.ge	22b98c <on_inotify+0x170>  // b.tcont
  22b93c:	ldp	x6, x9, [sp, #40]
  22b940:	ldr	w8, [x23, #4]
  22b944:	mov	w0, #0x7                   	// #7
  22b948:	mov	w3, #0x4d8                 	// #1240
  22b94c:	cmp	x6, #0x0
  22b950:	csel	x5, xzr, x24, eq  // eq = none
  22b954:	mov	w1, wzr
  22b958:	mov	x2, x19
  22b95c:	mov	x4, x20
  22b960:	mov	x7, xzr
  22b964:	str	x9, [sp, #24]
  22b968:	str	w8, [sp, #16]
  22b96c:	stp	xzr, x25, [sp]
  22b970:	bl	2539f0 <log_object_internal@plt>
  22b974:	ldr	w8, [x23, #4]
  22b978:	tbnz	w8, #3, 22b8d4 <on_inotify+0xb8>
  22b97c:	tbz	w8, #15, 22b8dc <on_inotify+0xc0>
  22b980:	ldr	x0, [sp, #56]
  22b984:	bl	23eb58 <udev_watch_end>
  22b988:	b	22b8dc <on_inotify+0xc0>
  22b98c:	add	x1, sp, #0x28
  22b990:	mov	x0, x21
  22b994:	bl	253a40 <sd_device_get_sysname@plt>
  22b998:	b	22b93c <on_inotify+0x120>
  22b99c:	mov	w0, #0x1                   	// #1
  22b9a0:	ldp	x20, x19, [sp, #400]
  22b9a4:	ldp	x22, x21, [sp, #384]
  22b9a8:	ldp	x24, x23, [sp, #368]
  22b9ac:	ldp	x28, x25, [sp, #352]
  22b9b0:	ldp	x29, x30, [sp, #336]
  22b9b4:	add	sp, sp, #0x1a0
  22b9b8:	ret
  22b9bc:	bl	253660 <__errno_location@plt>
  22b9c0:	ldr	w19, [x0]
  22b9c4:	mov	w0, #0x1                   	// #1
  22b9c8:	cmp	w19, #0x4
  22b9cc:	b.eq	22b9a0 <on_inotify+0x184>  // b.none
  22b9d0:	cmp	w19, #0xb
  22b9d4:	b.eq	22b9a0 <on_inotify+0x184>  // b.none
  22b9d8:	mov	w0, #0x1                   	// #1
  22b9dc:	bl	2535b0 <log_get_max_level_realm@plt>
  22b9e0:	cmp	w0, #0x3
  22b9e4:	b.lt	22ba14 <on_inotify+0x1f8>  // b.tstop
  22b9e8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22b9ec:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22b9f0:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  22b9f4:	add	x2, x2, #0x55b
  22b9f8:	add	x4, x4, #0xe78
  22b9fc:	add	x5, x5, #0x1
  22ba00:	mov	w0, #0x403                 	// #1027
  22ba04:	mov	w3, #0x4cb                 	// #1227
  22ba08:	mov	w1, w19
  22ba0c:	bl	2535c0 <log_internal_realm@plt>
  22ba10:	b	22b9a0 <on_inotify+0x184>
  22ba14:	cmp	w19, #0x0
  22ba18:	mov	w8, wzr
  22ba1c:	cneg	w9, w19, mi  // mi = first
  22ba20:	sub	w0, w8, w9, uxtb
  22ba24:	b	22b9a0 <on_inotify+0x184>
  22ba28:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22ba2c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ba30:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  22ba34:	add	x1, x1, #0xffb
  22ba38:	add	x2, x2, #0x55b
  22ba3c:	add	x4, x4, #0xe5d
  22ba40:	mov	w0, #0x1                   	// #1
  22ba44:	mov	w3, #0x4c0                 	// #1216
  22ba48:	bl	253740 <log_assert_failed_realm@plt>

000000000022ba4c <on_uevent>:
  22ba4c:	sub	sp, sp, #0x40
  22ba50:	stp	x29, x30, [sp, #16]
  22ba54:	str	x21, [sp, #32]
  22ba58:	stp	x20, x19, [sp, #48]
  22ba5c:	add	x29, sp, #0x10
  22ba60:	cbz	x2, 22bb1c <on_uevent+0xd0>
  22ba64:	mov	x20, x1
  22ba68:	mov	x0, x1
  22ba6c:	mov	x1, xzr
  22ba70:	mov	x21, x2
  22ba74:	bl	253ae0 <device_ensure_usec_initialized@plt>
  22ba78:	mov	x0, x21
  22ba7c:	mov	x1, x20
  22ba80:	bl	22e3dc <event_queue_insert>
  22ba84:	tbnz	w0, #31, 22ba94 <on_uevent+0x48>
  22ba88:	mov	x0, x21
  22ba8c:	bl	22c1d0 <event_queue_start>
  22ba90:	b	22baf4 <on_uevent+0xa8>
  22ba94:	mov	w19, w0
  22ba98:	str	xzr, [x29, #24]
  22ba9c:	cbz	x20, 22bab0 <on_uevent+0x64>
  22baa0:	mov	w0, #0x1                   	// #1
  22baa4:	bl	2535b0 <log_get_max_level_realm@plt>
  22baa8:	cmp	w0, #0x3
  22baac:	b.ge	22bb0c <on_uevent+0xc0>  // b.tcont
  22bab0:	ldr	x6, [x29, #24]
  22bab4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22bab8:	add	x8, x8, #0xb64
  22babc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22bac0:	cmp	x6, #0x0
  22bac4:	csel	x5, xzr, x8, eq  // eq = none
  22bac8:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  22bacc:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22bad0:	add	x8, x8, #0xe83
  22bad4:	add	x2, x2, #0x55b
  22bad8:	add	x4, x4, #0xa3
  22badc:	mov	w0, #0x3                   	// #3
  22bae0:	mov	w3, #0x3c8                 	// #968
  22bae4:	mov	w1, w19
  22bae8:	mov	x7, xzr
  22baec:	stp	xzr, x8, [sp]
  22baf0:	bl	2539f0 <log_object_internal@plt>
  22baf4:	ldp	x20, x19, [sp, #48]
  22baf8:	ldr	x21, [sp, #32]
  22bafc:	ldp	x29, x30, [sp, #16]
  22bb00:	mov	w0, #0x1                   	// #1
  22bb04:	add	sp, sp, #0x40
  22bb08:	ret
  22bb0c:	add	x1, x29, #0x18
  22bb10:	mov	x0, x20
  22bb14:	bl	253a40 <sd_device_get_sysname@plt>
  22bb18:	b	22bab0 <on_uevent+0x64>
  22bb1c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22bb20:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22bb24:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22bb28:	add	x1, x1, #0xffb
  22bb2c:	add	x2, x2, #0x55b
  22bb30:	add	x4, x4, #0xa02
  22bb34:	mov	w0, #0x1                   	// #1
  22bb38:	mov	w3, #0x3c2                 	// #962
  22bb3c:	bl	253740 <log_assert_failed_realm@plt>

000000000022bb40 <on_worker>:
  22bb40:	sub	sp, sp, #0xf0
  22bb44:	stp	x29, x30, [sp, #144]
  22bb48:	stp	x28, x27, [sp, #160]
  22bb4c:	stp	x26, x25, [sp, #176]
  22bb50:	stp	x24, x23, [sp, #192]
  22bb54:	stp	x22, x21, [sp, #208]
  22bb58:	stp	x20, x19, [sp, #224]
  22bb5c:	add	x29, sp, #0x90
  22bb60:	str	x3, [sp, #8]
  22bb64:	cbz	x3, 22be04 <on_worker+0x2c4>
  22bb68:	adrp	x21, 20c000 <worker_hash_op+0x1ad0>
  22bb6c:	adrp	x22, 20a000 <parse_argv.options-0x3f0>
  22bb70:	mov	w20, w1
  22bb74:	sub	x25, x29, #0x8
  22bb78:	sub	x23, x29, #0x18
  22bb7c:	mov	w24, #0x1                   	// #1
  22bb80:	sub	x26, x29, #0x40
  22bb84:	mov	w19, #0x20                  	// #32
  22bb88:	add	x21, x21, #0x55b
  22bb8c:	add	x22, x22, #0x59c
  22bb90:	b	22bba4 <on_worker+0x64>
  22bb94:	mov	w8, #0x5                   	// #5
  22bb98:	cbz	w8, 22bba4 <on_worker+0x64>
  22bb9c:	cmp	w8, #0x5
  22bba0:	b.ne	22bdc8 <on_worker+0x288>  // b.any
  22bba4:	movi	v0.2d, #0x0
  22bba8:	add	x1, sp, #0x18
  22bbac:	mov	w2, #0x40                  	// #64
  22bbb0:	mov	w0, w20
  22bbb4:	stp	x25, xzr, [x29, #-24]
  22bbb8:	stp	q0, q0, [x29, #-64]
  22bbbc:	str	xzr, [sp, #24]
  22bbc0:	str	wzr, [sp, #32]
  22bbc4:	stp	x23, x24, [sp, #40]
  22bbc8:	stp	x26, x19, [sp, #56]
  22bbcc:	str	wzr, [sp, #72]
  22bbd0:	bl	253af0 <recvmsg@plt>
  22bbd4:	tbnz	x0, #63, 22bc20 <on_worker+0xe0>
  22bbd8:	mov	x28, x0
  22bbdc:	cbz	x0, 22bc44 <on_worker+0x104>
  22bbe0:	mov	w0, #0x1                   	// #1
  22bbe4:	bl	2535b0 <log_get_max_level_realm@plt>
  22bbe8:	cmp	w0, #0x4
  22bbec:	b.lt	22bb94 <on_worker+0x54>  // b.tstop
  22bbf0:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  22bbf4:	mov	w0, #0x404                 	// #1028
  22bbf8:	mov	w3, #0x39b                 	// #923
  22bbfc:	mov	w1, wzr
  22bc00:	mov	x2, x21
  22bc04:	mov	x4, x22
  22bc08:	add	x5, x5, #0x99a
  22bc0c:	mov	x6, x28
  22bc10:	bl	2535c0 <log_internal_realm@plt>
  22bc14:	mov	w8, #0x5                   	// #5
  22bc18:	cbnz	w8, 22bb9c <on_worker+0x5c>
  22bc1c:	b	22bba4 <on_worker+0x64>
  22bc20:	bl	253660 <__errno_location@plt>
  22bc24:	ldr	w28, [x0]
  22bc28:	cmp	w28, #0x4
  22bc2c:	b.eq	22bb94 <on_worker+0x54>  // b.none
  22bc30:	cmp	w28, #0xb
  22bc34:	b.ne	22bd30 <on_worker+0x1f0>  // b.any
  22bc38:	mov	w8, #0x4                   	// #4
  22bc3c:	cbnz	w8, 22bb9c <on_worker+0x5c>
  22bc40:	b	22bba4 <on_worker+0x64>
  22bc44:	ldr	x1, [sp, #56]
  22bc48:	mov	x27, xzr
  22bc4c:	cbz	x1, 22bca0 <on_worker+0x160>
  22bc50:	ldr	x8, [sp, #64]
  22bc54:	cmp	x8, #0x10
  22bc58:	b.cc	22bca0 <on_worker+0x160>  // b.lo, b.ul, b.last
  22bc5c:	mov	x27, xzr
  22bc60:	b	22bc74 <on_worker+0x134>
  22bc64:	add	x0, sp, #0x18
  22bc68:	bl	253b00 <__cmsg_nxthdr@plt>
  22bc6c:	mov	x1, x0
  22bc70:	cbz	x0, 22bca0 <on_worker+0x160>
  22bc74:	ldr	w8, [x1, #8]
  22bc78:	cmp	w8, #0x1
  22bc7c:	b.ne	22bc64 <on_worker+0x124>  // b.any
  22bc80:	ldr	w8, [x1, #12]
  22bc84:	cmp	w8, #0x2
  22bc88:	b.ne	22bc64 <on_worker+0x124>  // b.any
  22bc8c:	ldr	x8, [x1]
  22bc90:	cmp	x8, #0x1c
  22bc94:	b.ne	22bc64 <on_worker+0x124>  // b.any
  22bc98:	add	x27, x1, #0x10
  22bc9c:	b	22bc64 <on_worker+0x124>
  22bca0:	cbz	x27, 22bcf4 <on_worker+0x1b4>
  22bca4:	ldr	w0, [x27]
  22bca8:	cmp	w0, #0x0
  22bcac:	b.le	22bcf4 <on_worker+0x1b4>
  22bcb0:	ldr	x8, [sp, #8]
  22bcb4:	ldr	x28, [x8, #8]
  22bcb8:	bl	22c14c <PID_TO_PTR>
  22bcbc:	mov	x1, x0
  22bcc0:	mov	x0, x28
  22bcc4:	bl	22c138 <hashmap_get>
  22bcc8:	cbz	x0, 22bd90 <on_worker+0x250>
  22bccc:	ldr	w8, [x0, #24]
  22bcd0:	cmp	w8, #0x3
  22bcd4:	b.eq	22bce0 <on_worker+0x1a0>  // b.none
  22bcd8:	mov	w8, #0x2                   	// #2
  22bcdc:	str	w8, [x0, #24]
  22bce0:	ldr	x0, [x0, #32]
  22bce4:	bl	22aa94 <event_free>
  22bce8:	mov	w8, wzr
  22bcec:	cbnz	w8, 22bb9c <on_worker+0x5c>
  22bcf0:	b	22bba4 <on_worker+0x64>
  22bcf4:	mov	w0, #0x1                   	// #1
  22bcf8:	bl	2535b0 <log_get_max_level_realm@plt>
  22bcfc:	cmp	w0, #0x4
  22bd00:	b.lt	22bb94 <on_worker+0x54>  // b.tstop
  22bd04:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  22bd08:	mov	w0, #0x404                 	// #1028
  22bd0c:	mov	w3, #0x3a6                 	// #934
  22bd10:	mov	w1, wzr
  22bd14:	mov	x2, x21
  22bd18:	mov	x4, x22
  22bd1c:	add	x5, x5, #0x4c3
  22bd20:	bl	2535c0 <log_internal_realm@plt>
  22bd24:	mov	w8, #0x5                   	// #5
  22bd28:	cbnz	w8, 22bb9c <on_worker+0x5c>
  22bd2c:	b	22bba4 <on_worker+0x64>
  22bd30:	mov	w0, #0x1                   	// #1
  22bd34:	bl	2535b0 <log_get_max_level_realm@plt>
  22bd38:	cmp	w0, #0x3
  22bd3c:	b.lt	22bd70 <on_worker+0x230>  // b.tstop
  22bd40:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  22bd44:	mov	w0, #0x403                 	// #1027
  22bd48:	mov	w3, #0x399                 	// #921
  22bd4c:	mov	w1, w28
  22bd50:	mov	x2, x21
  22bd54:	mov	x4, x22
  22bd58:	add	x5, x5, #0x4d
  22bd5c:	bl	2535c0 <log_internal_realm@plt>
  22bd60:	str	w0, [sp, #20]
  22bd64:	mov	w8, #0x1                   	// #1
  22bd68:	cbnz	w8, 22bb9c <on_worker+0x5c>
  22bd6c:	b	22bba4 <on_worker+0x64>
  22bd70:	cmp	w28, #0x0
  22bd74:	mov	w8, wzr
  22bd78:	cneg	w9, w28, mi  // mi = first
  22bd7c:	sub	w8, w8, w9, uxtb
  22bd80:	str	w8, [sp, #20]
  22bd84:	mov	w8, #0x1                   	// #1
  22bd88:	cbnz	w8, 22bb9c <on_worker+0x5c>
  22bd8c:	b	22bba4 <on_worker+0x64>
  22bd90:	mov	w0, #0x1                   	// #1
  22bd94:	bl	2535b0 <log_get_max_level_realm@plt>
  22bd98:	cmp	w0, #0x7
  22bd9c:	b.lt	22bb94 <on_worker+0x54>  // b.tstop
  22bda0:	ldr	w6, [x27]
  22bda4:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  22bda8:	mov	w0, #0x407                 	// #1031
  22bdac:	mov	w3, #0x3ad                 	// #941
  22bdb0:	mov	w1, wzr
  22bdb4:	mov	x2, x21
  22bdb8:	mov	x4, x22
  22bdbc:	add	x5, x5, #0x931
  22bdc0:	bl	2535c0 <log_internal_realm@plt>
  22bdc4:	b	22bb94 <on_worker+0x54>
  22bdc8:	cmp	w8, #0x4
  22bdcc:	b.ne	22bde0 <on_worker+0x2a0>  // b.any
  22bdd0:	ldr	x0, [sp, #8]
  22bdd4:	bl	22c1d0 <event_queue_start>
  22bdd8:	mov	w0, #0x1                   	// #1
  22bddc:	b	22bde4 <on_worker+0x2a4>
  22bde0:	ldr	w0, [sp, #20]
  22bde4:	ldp	x20, x19, [sp, #224]
  22bde8:	ldp	x22, x21, [sp, #208]
  22bdec:	ldp	x24, x23, [sp, #192]
  22bdf0:	ldp	x26, x25, [sp, #176]
  22bdf4:	ldp	x28, x27, [sp, #160]
  22bdf8:	ldp	x29, x30, [sp, #144]
  22bdfc:	add	sp, sp, #0xf0
  22be00:	ret
  22be04:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22be08:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22be0c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22be10:	add	x1, x1, #0xffb
  22be14:	add	x2, x2, #0x55b
  22be18:	add	x4, x4, #0x962
  22be1c:	mov	w0, #0x1                   	// #1
  22be20:	mov	w3, #0x37a                 	// #890
  22be24:	bl	253740 <log_assert_failed_realm@plt>

000000000022be28 <on_post>:
  22be28:	sub	sp, sp, #0x40
  22be2c:	stp	x29, x30, [sp, #16]
  22be30:	stp	x22, x21, [sp, #32]
  22be34:	stp	x20, x19, [sp, #48]
  22be38:	add	x29, sp, #0x10
  22be3c:	cbz	x1, 22bf18 <on_post+0xf0>
  22be40:	ldr	x8, [x1, #16]
  22be44:	mov	x19, x1
  22be48:	cbz	x8, 22be54 <on_post+0x2c>
  22be4c:	mov	w20, #0x1                   	// #1
  22be50:	b	22bf00 <on_post+0xd8>
  22be54:	ldr	x0, [x19, #8]
  22be58:	bl	22c394 <hashmap_isempty>
  22be5c:	tbz	w0, #0, 22be94 <on_post+0x6c>
  22be60:	ldrb	w8, [x19, #120]
  22be64:	tbnz	w8, #1, 22bef0 <on_post+0xc8>
  22be68:	ldr	x1, [x19, #24]
  22be6c:	cbz	x1, 22be4c <on_post+0x24>
  22be70:	adrp	x0, 20c000 <worker_hash_op+0x1ad0>
  22be74:	add	x0, x0, #0xc33
  22be78:	mov	w2, #0x9                   	// #9
  22be7c:	mov	w3, #0x2                   	// #2
  22be80:	mov	x4, xzr
  22be84:	mov	x5, xzr
  22be88:	mov	x6, xzr
  22be8c:	bl	253b10 <cg_kill@plt>
  22be90:	b	22be4c <on_post+0x24>
  22be94:	mov	x21, x19
  22be98:	ldr	x22, [x21], #104
  22be9c:	mov	w0, #0x1                   	// #1
  22bea0:	mov	w20, #0x1                   	// #1
  22bea4:	bl	253b20 <now@plt>
  22bea8:	mov	w8, #0xc6c0                	// #50880
  22beac:	movk	w8, #0x2d, lsl #16
  22beb0:	add	x3, x0, x8
  22beb4:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  22beb8:	adrp	x5, 22e000 <synthesize_change+0xb0>
  22bebc:	mov	w4, #0x4240                	// #16960
  22bec0:	add	x8, x8, #0x2ea
  22bec4:	add	x5, x5, #0x65c
  22bec8:	mov	w2, #0x1                   	// #1
  22becc:	movk	w4, #0xf, lsl #16
  22bed0:	mov	x0, x22
  22bed4:	mov	x1, x21
  22bed8:	mov	x6, x19
  22bedc:	mov	x7, xzr
  22bee0:	strb	wzr, [sp, #8]
  22bee4:	str	x8, [sp]
  22bee8:	bl	253b30 <event_reset_time@plt>
  22beec:	b	22bf00 <on_post+0xd8>
  22bef0:	ldr	x0, [x19]
  22bef4:	mov	w1, wzr
  22bef8:	bl	253b40 <sd_event_exit@plt>
  22befc:	mov	w20, w0
  22bf00:	mov	w0, w20
  22bf04:	ldp	x20, x19, [sp, #48]
  22bf08:	ldp	x22, x21, [sp, #32]
  22bf0c:	ldp	x29, x30, [sp, #16]
  22bf10:	add	sp, sp, #0x40
  22bf14:	ret
  22bf18:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22bf1c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22bf20:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  22bf24:	add	x1, x1, #0xffb
  22bf28:	add	x2, x2, #0x55b
  22bf2c:	add	x4, x4, #0x663
  22bf30:	mov	w0, #0x1                   	// #1
  22bf34:	mov	w3, #0x53d                 	// #1341
  22bf38:	bl	253740 <log_assert_failed_realm@plt>

000000000022bf3c <manager_exit>:
  22bf3c:	stp	x29, x30, [sp, #-32]!
  22bf40:	str	x19, [sp, #16]
  22bf44:	mov	x29, sp
  22bf48:	cbz	x0, 22bfc8 <manager_exit+0x8c>
  22bf4c:	ldrb	w8, [x0, #120]
  22bf50:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22bf54:	mov	x19, x0
  22bf58:	add	x1, x1, #0x5ea
  22bf5c:	orr	w8, w8, #0x2
  22bf60:	strb	w8, [x0, #120]
  22bf64:	mov	w0, wzr
  22bf68:	bl	2538d0 <sd_notify@plt>
  22bf6c:	ldr	x0, [x19, #72]
  22bf70:	bl	22eb54 <udev_ctrl_unref>
  22bf74:	ldr	x8, [x19, #96]
  22bf78:	str	x0, [x19, #72]
  22bf7c:	mov	x0, x8
  22bf80:	bl	253910 <sd_event_source_unref@plt>
  22bf84:	ldr	w8, [x19, #80]
  22bf88:	str	x0, [x19, #96]
  22bf8c:	mov	w0, w8
  22bf90:	bl	2538f0 <safe_close@plt>
  22bf94:	ldr	x8, [x19, #64]
  22bf98:	str	w0, [x19, #80]
  22bf9c:	mov	x0, x8
  22bfa0:	bl	253930 <sd_device_monitor_unref@plt>
  22bfa4:	str	x0, [x19, #64]
  22bfa8:	mov	w1, #0x1                   	// #1
  22bfac:	mov	x0, x19
  22bfb0:	bl	22aa48 <event_queue_cleanup>
  22bfb4:	mov	x0, x19
  22bfb8:	bl	22bfec <manager_kill_workers>
  22bfbc:	ldr	x19, [sp, #16]
  22bfc0:	ldp	x29, x30, [sp], #32
  22bfc4:	ret
  22bfc8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22bfcc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22bfd0:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  22bfd4:	add	x1, x1, #0xffb
  22bfd8:	add	x2, x2, #0x55b
  22bfdc:	add	x4, x4, #0xd4f
  22bfe0:	mov	w0, #0x1                   	// #1
  22bfe4:	mov	w3, #0x30a                 	// #778
  22bfe8:	bl	253740 <log_assert_failed_realm@plt>

000000000022bfec <manager_kill_workers>:
  22bfec:	sub	sp, sp, #0x40
  22bff0:	stp	x29, x30, [sp, #32]
  22bff4:	stp	x20, x19, [sp, #48]
  22bff8:	add	x29, sp, #0x20
  22bffc:	cbz	x0, 22c074 <manager_kill_workers+0x88>
  22c000:	mov	w8, #0xfffffffe            	// #-2
  22c004:	str	w8, [sp, #8]
  22c008:	str	xzr, [sp, #16]
  22c00c:	mov	x19, x0
  22c010:	ldr	x0, [x0, #8]
  22c014:	add	x1, sp, #0x8
  22c018:	sub	x2, x29, #0x8
  22c01c:	bl	22c098 <hashmap_iterate>
  22c020:	tbz	w0, #0, 22c064 <manager_kill_workers+0x78>
  22c024:	mov	w20, #0x3                   	// #3
  22c028:	b	22c040 <manager_kill_workers+0x54>
  22c02c:	ldr	x0, [x19, #8]
  22c030:	add	x1, sp, #0x8
  22c034:	sub	x2, x29, #0x8
  22c038:	bl	22c098 <hashmap_iterate>
  22c03c:	tbz	w0, #0, 22c064 <manager_kill_workers+0x78>
  22c040:	ldur	x8, [x29, #-8]
  22c044:	ldr	w9, [x8, #24]
  22c048:	cmp	w9, #0x3
  22c04c:	b.eq	22c02c <manager_kill_workers+0x40>  // b.none
  22c050:	ldr	w0, [x8, #8]
  22c054:	mov	w1, #0xf                   	// #15
  22c058:	str	w20, [x8, #24]
  22c05c:	bl	253b50 <kill@plt>
  22c060:	b	22c02c <manager_kill_workers+0x40>
  22c064:	ldp	x20, x19, [sp, #48]
  22c068:	ldp	x29, x30, [sp, #32]
  22c06c:	add	sp, sp, #0x40
  22c070:	ret
  22c074:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22c078:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c07c:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22c080:	add	x1, x1, #0xffb
  22c084:	add	x2, x2, #0x55b
  22c088:	add	x4, x4, #0x7e8
  22c08c:	mov	w0, #0x1                   	// #1
  22c090:	mov	w3, #0x292                 	// #658
  22c094:	bl	253740 <log_assert_failed_realm@plt>

000000000022c098 <hashmap_iterate>:
  22c098:	stp	x29, x30, [sp, #-16]!
  22c09c:	mov	x3, xzr
  22c0a0:	mov	x29, sp
  22c0a4:	bl	253b60 <internal_hashmap_iterate@plt>
  22c0a8:	and	w0, w0, #0x1
  22c0ac:	ldp	x29, x30, [sp], #16
  22c0b0:	ret

000000000022c0b4 <manager_reload>:
  22c0b4:	stp	x29, x30, [sp, #-32]!
  22c0b8:	str	x19, [sp, #16]
  22c0bc:	mov	x29, sp
  22c0c0:	cbz	x0, 22c114 <manager_reload+0x60>
  22c0c4:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  22c0c8:	mov	x19, x0
  22c0cc:	add	x1, x1, #0x1ad
  22c0d0:	mov	w0, wzr
  22c0d4:	bl	2538d0 <sd_notify@plt>
  22c0d8:	mov	x0, x19
  22c0dc:	bl	22bfec <manager_kill_workers>
  22c0e0:	ldr	x0, [x19, #40]
  22c0e4:	bl	23473c <udev_rules_free>
  22c0e8:	str	x0, [x19, #40]
  22c0ec:	bl	23efb0 <udev_builtin_exit>
  22c0f0:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22c0f4:	ldr	w2, [x8, #512]
  22c0f8:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  22c0fc:	add	x1, x1, #0xab2
  22c100:	mov	w0, wzr
  22c104:	bl	2538b0 <sd_notifyf@plt>
  22c108:	ldr	x19, [sp, #16]
  22c10c:	ldp	x29, x30, [sp], #32
  22c110:	ret
  22c114:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22c118:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c11c:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22c120:	add	x1, x1, #0xffb
  22c124:	add	x2, x2, #0x55b
  22c128:	add	x4, x4, #0xf0c
  22c12c:	mov	w0, #0x1                   	// #1
  22c130:	mov	w3, #0x322                 	// #802
  22c134:	bl	253740 <log_assert_failed_realm@plt>

000000000022c138 <hashmap_get>:
  22c138:	stp	x29, x30, [sp, #-16]!
  22c13c:	mov	x29, sp
  22c140:	bl	253b70 <internal_hashmap_get@plt>
  22c144:	ldp	x29, x30, [sp], #16
  22c148:	ret

000000000022c14c <PID_TO_PTR>:
  22c14c:	sxtw	x0, w0
  22c150:	ret

000000000022c154 <worker_free>:
  22c154:	stp	x29, x30, [sp, #-32]!
  22c158:	stp	x20, x19, [sp, #16]
  22c15c:	mov	x29, sp
  22c160:	cbz	x0, 22c1a0 <worker_free+0x4c>
  22c164:	ldr	x8, [x0]
  22c168:	mov	x19, x0
  22c16c:	cbz	x8, 22c1ac <worker_free+0x58>
  22c170:	ldr	w0, [x19, #8]
  22c174:	ldr	x20, [x8, #8]
  22c178:	bl	22c14c <PID_TO_PTR>
  22c17c:	mov	x1, x0
  22c180:	mov	x0, x20
  22c184:	bl	22c3b0 <hashmap_remove>
  22c188:	ldr	x0, [x19, #16]
  22c18c:	bl	253930 <sd_device_monitor_unref@plt>
  22c190:	ldr	x0, [x19, #32]
  22c194:	bl	22aa94 <event_free>
  22c198:	mov	x0, x19
  22c19c:	bl	2536e0 <free@plt>
  22c1a0:	ldp	x20, x19, [sp, #16]
  22c1a4:	ldp	x29, x30, [sp], #32
  22c1a8:	ret
  22c1ac:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22c1b0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c1b4:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22c1b8:	add	x1, x1, #0xde0
  22c1bc:	add	x2, x2, #0x55b
  22c1c0:	add	x4, x4, #0x933
  22c1c4:	mov	w0, #0x1                   	// #1
  22c1c8:	mov	w3, #0xb1                  	// #177
  22c1cc:	bl	253740 <log_assert_failed_realm@plt>

000000000022c1d0 <event_queue_start>:
  22c1d0:	sub	sp, sp, #0x30
  22c1d4:	stp	x29, x30, [sp, #16]
  22c1d8:	stp	x20, x19, [sp, #32]
  22c1dc:	add	x29, sp, #0x10
  22c1e0:	cbz	x0, 22c34c <event_queue_start+0x17c>
  22c1e4:	ldr	x8, [x0, #16]
  22c1e8:	mov	x19, x0
  22c1ec:	cbz	x8, 22c1fc <event_queue_start+0x2c>
  22c1f0:	ldrb	w8, [x19, #120]
  22c1f4:	tst	w8, #0x3
  22c1f8:	b.eq	22c20c <event_queue_start+0x3c>  // b.none
  22c1fc:	ldp	x20, x19, [sp, #32]
  22c200:	ldp	x29, x30, [sp, #16]
  22c204:	add	sp, sp, #0x30
  22c208:	ret
  22c20c:	ldr	x0, [x19]
  22c210:	add	x2, sp, #0x8
  22c214:	mov	w1, #0x1                   	// #1
  22c218:	bl	253b80 <sd_event_now@plt>
  22c21c:	tbnz	w0, #31, 22c370 <event_queue_start+0x1a0>
  22c220:	ldr	x8, [x19, #112]
  22c224:	cbz	x8, 22c240 <event_queue_start+0x70>
  22c228:	ldr	x9, [sp, #8]
  22c22c:	sub	x8, x9, x8
  22c230:	mov	w9, #0xc6c1                	// #50881
  22c234:	movk	w9, #0x2d, lsl #16
  22c238:	cmp	x8, x9
  22c23c:	b.cc	22c264 <event_queue_start+0x94>  // b.lo, b.ul, b.last
  22c240:	ldr	x0, [x19, #40]
  22c244:	bl	2349f0 <udev_rules_check_timestamp>
  22c248:	tbnz	w0, #0, 22c254 <event_queue_start+0x84>
  22c24c:	bl	23f014 <udev_builtin_validate>
  22c250:	tbz	w0, #0, 22c25c <event_queue_start+0x8c>
  22c254:	mov	x0, x19
  22c258:	bl	22c0b4 <manager_reload>
  22c25c:	ldr	x8, [sp, #8]
  22c260:	str	x8, [x19, #112]
  22c264:	ldr	x0, [x19, #104]
  22c268:	bl	253a50 <event_source_disable@plt>
  22c26c:	tbz	w0, #31, 22c2ac <event_queue_start+0xdc>
  22c270:	mov	w20, w0
  22c274:	mov	w0, #0x1                   	// #1
  22c278:	bl	2535b0 <log_get_max_level_realm@plt>
  22c27c:	cmp	w0, #0x4
  22c280:	b.lt	22c2ac <event_queue_start+0xdc>  // b.tstop
  22c284:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c288:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  22c28c:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22c290:	add	x2, x2, #0x55b
  22c294:	add	x4, x4, #0xb6c
  22c298:	add	x5, x5, #0x8d9
  22c29c:	mov	w0, #0x404                 	// #1028
  22c2a0:	mov	w3, #0x354                 	// #852
  22c2a4:	mov	w1, w20
  22c2a8:	bl	2535c0 <log_internal_realm@plt>
  22c2ac:	bl	23ef4c <udev_builtin_init>
  22c2b0:	mov	x0, x19
  22c2b4:	ldr	x8, [x0, #40]!
  22c2b8:	cbnz	x8, 22c2cc <event_queue_start+0xfc>
  22c2bc:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22c2c0:	ldr	w1, [x8, #496]
  22c2c4:	bl	23480c <udev_rules_new>
  22c2c8:	tbnz	w0, #31, 22c30c <event_queue_start+0x13c>
  22c2cc:	ldr	x20, [x19, #16]
  22c2d0:	cbnz	x20, 22c2e0 <event_queue_start+0x110>
  22c2d4:	b	22c1fc <event_queue_start+0x2c>
  22c2d8:	ldr	x20, [x20, #72]
  22c2dc:	cbz	x20, 22c1fc <event_queue_start+0x2c>
  22c2e0:	ldr	w8, [x20, #16]
  22c2e4:	cmp	w8, #0x1
  22c2e8:	b.ne	22c2d8 <event_queue_start+0x108>  // b.any
  22c2ec:	mov	x0, x19
  22c2f0:	mov	x1, x20
  22c2f4:	bl	22c3c4 <is_device_busy>
  22c2f8:	cbnz	w0, 22c2d8 <event_queue_start+0x108>
  22c2fc:	mov	x0, x19
  22c300:	mov	x1, x20
  22c304:	bl	22c6a0 <event_run>
  22c308:	b	22c2d8 <event_queue_start+0x108>
  22c30c:	mov	w20, w0
  22c310:	mov	w0, #0x1                   	// #1
  22c314:	bl	2535b0 <log_get_max_level_realm@plt>
  22c318:	cmp	w0, #0x4
  22c31c:	b.lt	22c1fc <event_queue_start+0x2c>  // b.tstop
  22c320:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c324:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  22c328:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22c32c:	add	x2, x2, #0x55b
  22c330:	add	x4, x4, #0xb6c
  22c334:	add	x5, x5, #0x504
  22c338:	mov	w0, #0x404                 	// #1028
  22c33c:	mov	w3, #0x35b                 	// #859
  22c340:	mov	w1, w20
  22c344:	bl	2535c0 <log_internal_realm@plt>
  22c348:	b	22c1fc <event_queue_start+0x2c>
  22c34c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22c350:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c354:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22c358:	add	x1, x1, #0xffb
  22c35c:	add	x2, x2, #0x55b
  22c360:	add	x4, x4, #0xdc1
  22c364:	mov	w0, #0x1                   	// #1
  22c368:	mov	w3, #0x341                 	// #833
  22c36c:	bl	253740 <log_assert_failed_realm@plt>
  22c370:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  22c374:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c378:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22c37c:	add	x1, x1, #0xde3
  22c380:	add	x2, x2, #0x55b
  22c384:	add	x4, x4, #0xdc1
  22c388:	mov	w0, #0x1                   	// #1
  22c38c:	mov	w3, #0x347                 	// #839
  22c390:	bl	253740 <log_assert_failed_realm@plt>

000000000022c394 <hashmap_isempty>:
  22c394:	stp	x29, x30, [sp, #-16]!
  22c398:	mov	x29, sp
  22c39c:	bl	22ca94 <hashmap_size>
  22c3a0:	cmp	w0, #0x0
  22c3a4:	cset	w0, eq  // eq = none
  22c3a8:	ldp	x29, x30, [sp], #16
  22c3ac:	ret

000000000022c3b0 <hashmap_remove>:
  22c3b0:	stp	x29, x30, [sp, #-16]!
  22c3b4:	mov	x29, sp
  22c3b8:	bl	253b90 <internal_hashmap_remove@plt>
  22c3bc:	ldp	x29, x30, [sp], #16
  22c3c0:	ret

000000000022c3c4 <is_device_busy>:
  22c3c4:	sub	sp, sp, #0xa0
  22c3c8:	stp	x29, x30, [sp, #64]
  22c3cc:	stp	x22, x21, [sp, #128]
  22c3d0:	stp	x20, x19, [sp, #144]
  22c3d4:	add	x29, sp, #0x40
  22c3d8:	mov	x19, x1
  22c3dc:	mov	x22, x0
  22c3e0:	mov	w0, wzr
  22c3e4:	mov	w1, wzr
  22c3e8:	stp	x28, x27, [sp, #80]
  22c3ec:	stp	x26, x25, [sp, #96]
  22c3f0:	stp	x24, x23, [sp, #112]
  22c3f4:	stur	xzr, [x29, #-24]
  22c3f8:	bl	253ba0 <gnu_dev_makedev@plt>
  22c3fc:	str	x0, [sp, #32]
  22c400:	str	wzr, [sp, #28]
  22c404:	ldr	x0, [x19, #24]
  22c408:	sub	x1, x29, #0x8
  22c40c:	bl	253bb0 <sd_device_get_subsystem@plt>
  22c410:	tbnz	w0, #31, 22c680 <is_device_busy+0x2bc>
  22c414:	ldur	x0, [x29, #-8]
  22c418:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  22c41c:	add	x1, x1, #0x64e
  22c420:	bl	253bc0 <strcmp@plt>
  22c424:	ldr	x8, [x19, #24]
  22c428:	mov	w20, w0
  22c42c:	sub	x1, x29, #0x10
  22c430:	mov	x0, x8
  22c434:	bl	253bd0 <sd_device_get_devpath@plt>
  22c438:	tbnz	w0, #31, 22c680 <is_device_busy+0x2bc>
  22c43c:	ldur	x0, [x29, #-16]
  22c440:	bl	2539a0 <strlen@plt>
  22c444:	ldr	x8, [x19, #24]
  22c448:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22c44c:	mov	x21, x0
  22c450:	add	x1, x1, #0x131
  22c454:	sub	x2, x29, #0x18
  22c458:	mov	x0, x8
  22c45c:	bl	253be0 <sd_device_get_property_value@plt>
  22c460:	tbz	w0, #31, 22c46c <is_device_busy+0xa8>
  22c464:	cmn	w0, #0x2
  22c468:	b.ne	22c680 <is_device_busy+0x2bc>  // b.any
  22c46c:	ldr	x0, [x19, #24]
  22c470:	add	x1, sp, #0x20
  22c474:	bl	253bf0 <sd_device_get_devnum@plt>
  22c478:	tbz	w0, #31, 22c484 <is_device_busy+0xc0>
  22c47c:	cmn	w0, #0x2
  22c480:	b.ne	22c680 <is_device_busy+0x2bc>  // b.any
  22c484:	ldr	x0, [x19, #24]
  22c488:	add	x1, sp, #0x1c
  22c48c:	bl	253c00 <sd_device_get_ifindex@plt>
  22c490:	tbz	w0, #31, 22c49c <is_device_busy+0xd8>
  22c494:	cmn	w0, #0x2
  22c498:	b.ne	22c680 <is_device_busy+0x2bc>  // b.any
  22c49c:	ldr	x27, [x22, #16]
  22c4a0:	cbz	x27, 22c66c <is_device_busy+0x2a8>
  22c4a4:	adrp	x28, 20a000 <parse_argv.options-0x3f0>
  22c4a8:	adrp	x22, 216000 <worker_hash_op+0xbad0>
  22c4ac:	add	x28, x28, #0x3e6
  22c4b0:	add	x22, x22, #0x64e
  22c4b4:	ldr	x8, [x27, #40]
  22c4b8:	ldr	x9, [x19, #48]
  22c4bc:	cmp	x8, x9
  22c4c0:	b.cs	22c4d4 <is_device_busy+0x110>  // b.hs, b.nlast
  22c4c4:	mov	w8, #0x4                   	// #4
  22c4c8:	cmp	w8, #0x5
  22c4cc:	b.ls	22c630 <is_device_busy+0x26c>  // b.plast
  22c4d0:	b	22c67c <is_device_busy+0x2b8>
  22c4d4:	b.ne	22c4e8 <is_device_busy+0x124>  // b.any
  22c4d8:	mov	w8, #0x1                   	// #1
  22c4dc:	cmp	w8, #0x5
  22c4e0:	b.ls	22c630 <is_device_busy+0x26c>  // b.plast
  22c4e4:	b	22c67c <is_device_busy+0x2b8>
  22c4e8:	ldr	x9, [x19, #40]
  22c4ec:	cmp	x8, x9
  22c4f0:	b.cs	22c55c <is_device_busy+0x198>  // b.hs, b.nlast
  22c4f4:	ldr	x0, [sp, #32]
  22c4f8:	bl	253c10 <gnu_dev_major@plt>
  22c4fc:	cbz	w0, 22c57c <is_device_busy+0x1b8>
  22c500:	ldr	x0, [x27, #24]
  22c504:	add	x1, sp, #0x10
  22c508:	bl	253bb0 <sd_device_get_subsystem@plt>
  22c50c:	tbnz	w0, #31, 22c574 <is_device_busy+0x1b0>
  22c510:	ldr	x0, [x27, #24]
  22c514:	add	x1, sp, #0x8
  22c518:	bl	253bf0 <sd_device_get_devnum@plt>
  22c51c:	tbnz	w0, #31, 22c56c <is_device_busy+0x1a8>
  22c520:	ldr	x8, [sp, #32]
  22c524:	ldr	x9, [sp, #8]
  22c528:	cmp	x8, x9
  22c52c:	b.ne	22c56c <is_device_busy+0x1a8>  // b.any
  22c530:	ldr	x0, [sp, #16]
  22c534:	cmp	w20, #0x0
  22c538:	mov	x1, x22
  22c53c:	cset	w23, ne  // ne = any
  22c540:	bl	253bc0 <strcmp@plt>
  22c544:	cmp	w0, #0x0
  22c548:	cset	w8, eq  // eq = none
  22c54c:	eor	w8, w23, w8
  22c550:	tbz	w8, #0, 22c56c <is_device_busy+0x1a8>
  22c554:	mov	w8, #0x5                   	// #5
  22c558:	b	22c578 <is_device_busy+0x1b4>
  22c55c:	mov	w8, #0x2                   	// #2
  22c560:	cmp	w8, #0x5
  22c564:	b.ls	22c630 <is_device_busy+0x26c>  // b.plast
  22c568:	b	22c67c <is_device_busy+0x2b8>
  22c56c:	mov	w8, wzr
  22c570:	b	22c578 <is_device_busy+0x1b4>
  22c574:	mov	w8, #0x4                   	// #4
  22c578:	cbnz	w8, 22c628 <is_device_busy+0x264>
  22c57c:	ldr	w8, [sp, #28]
  22c580:	cmp	w8, #0x1
  22c584:	b.lt	22c5b8 <is_device_busy+0x1f4>  // b.tstop
  22c588:	ldr	x0, [x27, #24]
  22c58c:	add	x1, sp, #0x10
  22c590:	bl	253c00 <sd_device_get_ifindex@plt>
  22c594:	tbnz	w0, #31, 22c5b0 <is_device_busy+0x1ec>
  22c598:	ldr	w8, [sp, #28]
  22c59c:	ldr	w9, [sp, #16]
  22c5a0:	cmp	w8, w9
  22c5a4:	b.ne	22c5b0 <is_device_busy+0x1ec>  // b.any
  22c5a8:	mov	w8, #0x5                   	// #5
  22c5ac:	b	22c5b4 <is_device_busy+0x1f0>
  22c5b0:	mov	w8, wzr
  22c5b4:	cbnz	w8, 22c628 <is_device_busy+0x264>
  22c5b8:	ldr	x0, [x27, #24]
  22c5bc:	add	x1, sp, #0x10
  22c5c0:	bl	253bd0 <sd_device_get_devpath@plt>
  22c5c4:	tbnz	w0, #31, 22c4c4 <is_device_busy+0x100>
  22c5c8:	ldur	x0, [x29, #-24]
  22c5cc:	cbz	x0, 22c5dc <is_device_busy+0x218>
  22c5d0:	ldr	x1, [sp, #16]
  22c5d4:	bl	253bc0 <strcmp@plt>
  22c5d8:	cbz	w0, 22c624 <is_device_busy+0x260>
  22c5dc:	ldr	x23, [sp, #16]
  22c5e0:	mov	x0, x23
  22c5e4:	bl	2539a0 <strlen@plt>
  22c5e8:	ldur	x25, [x29, #-16]
  22c5ec:	cmp	x21, x0
  22c5f0:	csel	x24, x21, x0, cc  // cc = lo, ul, last
  22c5f4:	mov	x26, x0
  22c5f8:	mov	x0, x25
  22c5fc:	mov	x1, x23
  22c600:	mov	x2, x24
  22c604:	bl	2539b0 <strncmp@plt>
  22c608:	cbnz	w0, 22c4c4 <is_device_busy+0x100>
  22c60c:	cmp	x21, x26
  22c610:	b.eq	22c624 <is_device_busy+0x260>  // b.none
  22c614:	ldrb	w8, [x25, x24]
  22c618:	mov	w9, #0x5                   	// #5
  22c61c:	cmp	w8, #0x2f
  22c620:	b.ne	22c654 <is_device_busy+0x290>  // b.any
  22c624:	mov	w8, #0x5                   	// #5
  22c628:	cmp	w8, #0x5
  22c62c:	b.hi	22c67c <is_device_busy+0x2b8>  // b.pmore
  22c630:	adr	x9, 22c644 <is_device_busy+0x280>
  22c634:	ldrb	w10, [x28, x8]
  22c638:	add	x9, x9, x10, lsl #2
  22c63c:	mov	w0, wzr
  22c640:	br	x9
  22c644:	ldr	x27, [x27, #72]
  22c648:	mov	w0, wzr
  22c64c:	cbnz	x27, 22c4b4 <is_device_busy+0xf0>
  22c650:	b	22c680 <is_device_busy+0x2bc>
  22c654:	ldrb	w8, [x23, x24]
  22c658:	cmp	w8, #0x2f
  22c65c:	csel	w8, w9, wzr, eq  // eq = none
  22c660:	cmp	w8, #0x5
  22c664:	b.ls	22c630 <is_device_busy+0x26c>  // b.plast
  22c668:	b	22c67c <is_device_busy+0x2b8>
  22c66c:	mov	w0, wzr
  22c670:	b	22c680 <is_device_busy+0x2bc>
  22c674:	ldr	x8, [x27, #40]
  22c678:	str	x8, [x19, #48]
  22c67c:	mov	w0, #0x1                   	// #1
  22c680:	ldp	x20, x19, [sp, #144]
  22c684:	ldp	x22, x21, [sp, #128]
  22c688:	ldp	x24, x23, [sp, #112]
  22c68c:	ldp	x26, x25, [sp, #96]
  22c690:	ldp	x28, x27, [sp, #80]
  22c694:	ldp	x29, x30, [sp, #64]
  22c698:	add	sp, sp, #0xa0
  22c69c:	ret

000000000022c6a0 <event_run>:
  22c6a0:	sub	sp, sp, #0x90
  22c6a4:	stp	x29, x30, [sp, #48]
  22c6a8:	str	x27, [sp, #64]
  22c6ac:	stp	x26, x25, [sp, #80]
  22c6b0:	stp	x24, x23, [sp, #96]
  22c6b4:	stp	x22, x21, [sp, #112]
  22c6b8:	stp	x20, x19, [sp, #128]
  22c6bc:	add	x29, sp, #0x30
  22c6c0:	cbz	x0, 22c88c <event_run+0x1ec>
  22c6c4:	mov	x19, x1
  22c6c8:	cbz	x1, 22c8b0 <event_run+0x210>
  22c6cc:	mov	w8, #0xfffffffe            	// #-2
  22c6d0:	stur	w8, [x29, #-16]
  22c6d4:	stur	xzr, [x29, #-8]
  22c6d8:	mov	x20, x0
  22c6dc:	ldr	x0, [x0, #8]
  22c6e0:	sub	x1, x29, #0x10
  22c6e4:	add	x2, x29, #0x18
  22c6e8:	bl	22c098 <hashmap_iterate>
  22c6ec:	tbz	w0, #0, 22c7d0 <event_run+0x130>
  22c6f0:	adrp	x25, 211000 <worker_hash_op+0x6ad0>
  22c6f4:	adrp	x26, 218000 <worker_hash_op+0xdad0>
  22c6f8:	adrp	x21, 20c000 <worker_hash_op+0x1ad0>
  22c6fc:	adrp	x22, 20c000 <worker_hash_op+0x1ad0>
  22c700:	add	x25, x25, #0xb64
  22c704:	add	x26, x26, #0x262
  22c708:	add	x21, x21, #0x55b
  22c70c:	add	x22, x22, #0xc55
  22c710:	mov	w27, #0x3                   	// #3
  22c714:	b	22c77c <event_run+0xdc>
  22c718:	ldr	x8, [x29, #24]
  22c71c:	ldr	x6, [sp, #24]
  22c720:	mov	w0, #0x3                   	// #3
  22c724:	mov	w3, #0x239                 	// #569
  22c728:	ldr	w8, [x8, #8]
  22c72c:	cmp	x6, #0x0
  22c730:	csel	x5, xzr, x25, eq  // eq = none
  22c734:	mov	w1, w23
  22c738:	mov	x2, x21
  22c73c:	mov	x4, x22
  22c740:	mov	x7, xzr
  22c744:	str	w8, [sp, #16]
  22c748:	stp	xzr, x26, [sp]
  22c74c:	bl	2539f0 <log_object_internal@plt>
  22c750:	ldr	x8, [x29, #24]
  22c754:	mov	w1, #0x9                   	// #9
  22c758:	ldr	w0, [x8, #8]
  22c75c:	bl	253b50 <kill@plt>
  22c760:	ldr	x8, [x29, #24]
  22c764:	str	w27, [x8, #24]
  22c768:	ldr	x0, [x20, #8]
  22c76c:	sub	x1, x29, #0x10
  22c770:	add	x2, x29, #0x18
  22c774:	bl	22c098 <hashmap_iterate>
  22c778:	tbz	w0, #0, 22c7d0 <event_run+0x130>
  22c77c:	ldr	x8, [x29, #24]
  22c780:	ldr	w9, [x8, #24]
  22c784:	cmp	w9, #0x2
  22c788:	b.ne	22c768 <event_run+0xc8>  // b.any
  22c78c:	ldr	x0, [x20, #64]
  22c790:	ldr	x1, [x8, #16]
  22c794:	ldr	x2, [x19, #24]
  22c798:	bl	253a30 <device_monitor_send_device@plt>
  22c79c:	tbz	w0, #31, 22c860 <event_run+0x1c0>
  22c7a0:	str	xzr, [sp, #24]
  22c7a4:	ldr	x24, [x19, #24]
  22c7a8:	mov	w23, w0
  22c7ac:	cbz	x24, 22c718 <event_run+0x78>
  22c7b0:	mov	w0, #0x1                   	// #1
  22c7b4:	bl	2535b0 <log_get_max_level_realm@plt>
  22c7b8:	cmp	w0, #0x3
  22c7bc:	b.lt	22c718 <event_run+0x78>  // b.tstop
  22c7c0:	add	x1, sp, #0x18
  22c7c4:	mov	x0, x24
  22c7c8:	bl	253a40 <sd_device_get_sysname@plt>
  22c7cc:	b	22c718 <event_run+0x78>
  22c7d0:	ldr	x0, [x20, #8]
  22c7d4:	bl	22ca94 <hashmap_size>
  22c7d8:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22c7dc:	ldr	w8, [x8, #512]
  22c7e0:	cmp	w0, w8
  22c7e4:	b.cs	22c800 <event_run+0x160>  // b.hs, b.nlast
  22c7e8:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22c7ec:	mov	x0, x20
  22c7f0:	mov	x1, x19
  22c7f4:	strb	wzr, [x8, #533]
  22c7f8:	bl	22caa8 <worker_spawn>
  22c7fc:	b	22c86c <event_run+0x1cc>
  22c800:	cmp	w8, #0x2
  22c804:	b.cc	22c86c <event_run+0x1cc>  // b.lo, b.ul, b.last
  22c808:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  22c80c:	ldrb	w8, [x19, #533]
  22c810:	cbnz	w8, 22c86c <event_run+0x1cc>
  22c814:	mov	w21, w0
  22c818:	mov	w0, #0x1                   	// #1
  22c81c:	mov	w20, #0x1                   	// #1
  22c820:	bl	2535b0 <log_get_max_level_realm@plt>
  22c824:	cmp	w0, #0x7
  22c828:	b.lt	22c858 <event_run+0x1b8>  // b.tstop
  22c82c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c830:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22c834:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22c838:	add	x2, x2, #0x55b
  22c83c:	add	x4, x4, #0xc55
  22c840:	add	x5, x5, #0x7a
  22c844:	mov	w0, #0x407                 	// #1031
  22c848:	mov	w3, #0x247                 	// #583
  22c84c:	mov	w1, wzr
  22c850:	mov	w6, w21
  22c854:	bl	2535c0 <log_internal_realm@plt>
  22c858:	strb	w20, [x19, #533]
  22c85c:	b	22c86c <event_run+0x1cc>
  22c860:	ldr	x0, [x29, #24]
  22c864:	mov	x1, x19
  22c868:	bl	22c8d4 <worker_attach_event>
  22c86c:	ldp	x20, x19, [sp, #128]
  22c870:	ldp	x22, x21, [sp, #112]
  22c874:	ldp	x24, x23, [sp, #96]
  22c878:	ldp	x26, x25, [sp, #80]
  22c87c:	ldr	x27, [sp, #64]
  22c880:	ldp	x29, x30, [sp, #48]
  22c884:	add	sp, sp, #0x90
  22c888:	ret
  22c88c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22c890:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c894:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22c898:	add	x1, x1, #0xffb
  22c89c:	add	x2, x2, #0x55b
  22c8a0:	add	x4, x4, #0x317
  22c8a4:	mov	w0, #0x1                   	// #1
  22c8a8:	mov	w3, #0x22f                 	// #559
  22c8ac:	bl	253740 <log_assert_failed_realm@plt>
  22c8b0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22c8b4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c8b8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22c8bc:	add	x1, x1, #0xc4f
  22c8c0:	add	x2, x2, #0x55b
  22c8c4:	add	x4, x4, #0x317
  22c8c8:	mov	w0, #0x1                   	// #1
  22c8cc:	mov	w3, #0x230                 	// #560
  22c8d0:	bl	253740 <log_assert_failed_realm@plt>

000000000022c8d4 <worker_attach_event>:
  22c8d4:	stp	x29, x30, [sp, #-64]!
  22c8d8:	str	x23, [sp, #16]
  22c8dc:	stp	x22, x21, [sp, #32]
  22c8e0:	stp	x20, x19, [sp, #48]
  22c8e4:	mov	x29, sp
  22c8e8:	cbz	x0, 22c9bc <worker_attach_event+0xe8>
  22c8ec:	ldr	x8, [x0]
  22c8f0:	cbz	x8, 22c9e0 <worker_attach_event+0x10c>
  22c8f4:	mov	x19, x1
  22c8f8:	cbz	x1, 22ca04 <worker_attach_event+0x130>
  22c8fc:	ldr	x9, [x19, #8]
  22c900:	cbnz	x9, 22ca28 <worker_attach_event+0x154>
  22c904:	ldr	x9, [x0, #32]
  22c908:	cbnz	x9, 22ca4c <worker_attach_event+0x178>
  22c90c:	mov	w9, #0x1                   	// #1
  22c910:	mov	w10, #0x2                   	// #2
  22c914:	str	x19, [x0, #32]
  22c918:	str	w9, [x0, #24]
  22c91c:	str	w10, [x19, #16]
  22c920:	str	x0, [x19, #8]
  22c924:	ldr	x20, [x8]
  22c928:	add	x2, x29, #0x18
  22c92c:	mov	w1, #0x1                   	// #1
  22c930:	mov	x0, x20
  22c934:	bl	253b80 <sd_event_now@plt>
  22c938:	tbnz	w0, #31, 22ca70 <worker_attach_event+0x19c>
  22c93c:	adrp	x23, 28e000 <string_hash_ops+0xfe38>
  22c940:	ldr	x0, [x23, #488]
  22c944:	ldr	x22, [x29, #24]
  22c948:	add	x21, x19, #0x38
  22c94c:	bl	22cce8 <udev_warn_timeout>
  22c950:	adrp	x5, 22c000 <manager_kill_workers+0x14>
  22c954:	mov	w4, #0x4240                	// #16960
  22c958:	add	x3, x0, x22
  22c95c:	add	x5, x5, #0xd08
  22c960:	mov	w2, #0x1                   	// #1
  22c964:	movk	w4, #0xf, lsl #16
  22c968:	mov	x0, x20
  22c96c:	mov	x1, x21
  22c970:	mov	x6, x19
  22c974:	bl	253c20 <sd_event_add_time@plt>
  22c978:	ldr	x8, [x29, #24]
  22c97c:	ldr	x9, [x23, #488]
  22c980:	adrp	x5, 22c000 <manager_kill_workers+0x14>
  22c984:	mov	w4, #0x4240                	// #16960
  22c988:	add	x1, x19, #0x40
  22c98c:	add	x3, x9, x8
  22c990:	add	x5, x5, #0xe08
  22c994:	mov	w2, #0x1                   	// #1
  22c998:	movk	w4, #0xf, lsl #16
  22c99c:	mov	x0, x20
  22c9a0:	mov	x6, x19
  22c9a4:	bl	253c20 <sd_event_add_time@plt>
  22c9a8:	ldp	x20, x19, [sp, #48]
  22c9ac:	ldp	x22, x21, [sp, #32]
  22c9b0:	ldr	x23, [sp, #16]
  22c9b4:	ldp	x29, x30, [sp], #64
  22c9b8:	ret
  22c9bc:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  22c9c0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c9c4:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22c9c8:	add	x1, x1, #0xbed
  22c9cc:	add	x2, x2, #0x55b
  22c9d0:	add	x4, x4, #0xe1d
  22c9d4:	mov	w0, #0x1                   	// #1
  22c9d8:	mov	w3, #0xfd                  	// #253
  22c9dc:	bl	253740 <log_assert_failed_realm@plt>
  22c9e0:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22c9e4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22c9e8:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22c9ec:	add	x1, x1, #0xde0
  22c9f0:	add	x2, x2, #0x55b
  22c9f4:	add	x4, x4, #0xe1d
  22c9f8:	mov	w0, #0x1                   	// #1
  22c9fc:	mov	w3, #0xfe                  	// #254
  22ca00:	bl	253740 <log_assert_failed_realm@plt>
  22ca04:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22ca08:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ca0c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22ca10:	add	x1, x1, #0xc4f
  22ca14:	add	x2, x2, #0x55b
  22ca18:	add	x4, x4, #0xe1d
  22ca1c:	mov	w0, #0x1                   	// #1
  22ca20:	mov	w3, #0xff                  	// #255
  22ca24:	bl	253740 <log_assert_failed_realm@plt>
  22ca28:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22ca2c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ca30:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22ca34:	add	x1, x1, #0x87c
  22ca38:	add	x2, x2, #0x55b
  22ca3c:	add	x4, x4, #0xe1d
  22ca40:	mov	w0, #0x1                   	// #1
  22ca44:	mov	w3, #0x100                 	// #256
  22ca48:	bl	253740 <log_assert_failed_realm@plt>
  22ca4c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22ca50:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ca54:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22ca58:	add	x1, x1, #0x88b
  22ca5c:	add	x2, x2, #0x55b
  22ca60:	add	x4, x4, #0xe1d
  22ca64:	mov	w0, #0x1                   	// #1
  22ca68:	mov	w3, #0x101                 	// #257
  22ca6c:	bl	253740 <log_assert_failed_realm@plt>
  22ca70:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  22ca74:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ca78:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22ca7c:	add	x1, x1, #0xf2b
  22ca80:	add	x2, x2, #0x55b
  22ca84:	add	x4, x4, #0xe1d
  22ca88:	mov	w0, #0x1                   	// #1
  22ca8c:	mov	w3, #0x10a                 	// #266
  22ca90:	bl	253740 <log_assert_failed_realm@plt>

000000000022ca94 <hashmap_size>:
  22ca94:	stp	x29, x30, [sp, #-16]!
  22ca98:	mov	x29, sp
  22ca9c:	bl	253c30 <internal_hashmap_size@plt>
  22caa0:	ldp	x29, x30, [sp], #16
  22caa4:	ret

000000000022caa8 <worker_spawn>:
  22caa8:	sub	sp, sp, #0x70
  22caac:	stp	x29, x30, [sp, #64]
  22cab0:	add	x29, sp, #0x40
  22cab4:	stp	x20, x19, [sp, #96]
  22cab8:	mov	x19, x1
  22cabc:	mov	x20, x0
  22cac0:	add	x0, x29, #0x18
  22cac4:	mov	w2, #0xffffffff            	// #-1
  22cac8:	mov	w1, wzr
  22cacc:	str	x21, [sp, #80]
  22cad0:	str	xzr, [x29, #24]
  22cad4:	bl	253790 <device_monitor_new_full@plt>
  22cad8:	tbnz	w0, #31, 22cc54 <worker_spawn+0x1ac>
  22cadc:	ldr	x0, [x29, #24]
  22cae0:	ldr	x1, [x20, #64]
  22cae4:	bl	253c40 <device_monitor_allow_unicast_sender@plt>
  22cae8:	tbnz	w0, #31, 22cba4 <worker_spawn+0xfc>
  22caec:	ldr	x0, [x29, #24]
  22caf0:	bl	2537b0 <device_monitor_enable_receiving@plt>
  22caf4:	tbnz	w0, #31, 22cbdc <worker_spawn+0x134>
  22caf8:	sub	x0, x29, #0xc
  22cafc:	bl	22cf3c <safe_fork>
  22cb00:	mov	w21, w0
  22cb04:	tbnz	w0, #31, 22cc14 <worker_spawn+0x16c>
  22cb08:	ldr	x2, [x29, #24]
  22cb0c:	cbz	w21, 22ccbc <worker_spawn+0x214>
  22cb10:	ldur	w3, [x29, #-12]
  22cb14:	sub	x0, x29, #0x8
  22cb18:	mov	x1, x20
  22cb1c:	bl	22d2a8 <worker_new>
  22cb20:	tbnz	w0, #31, 22cc70 <worker_spawn+0x1c8>
  22cb24:	ldur	x0, [x29, #-8]
  22cb28:	mov	x1, x19
  22cb2c:	bl	22c8d4 <worker_attach_event>
  22cb30:	stur	xzr, [x29, #-24]
  22cb34:	ldr	x20, [x19, #24]
  22cb38:	cbz	x20, 22cb4c <worker_spawn+0xa4>
  22cb3c:	mov	w0, #0x1                   	// #1
  22cb40:	bl	2535b0 <log_get_max_level_realm@plt>
  22cb44:	cmp	w0, #0x7
  22cb48:	b.ge	22ccac <worker_spawn+0x204>  // b.tcont
  22cb4c:	ldur	x6, [x29, #-24]
  22cb50:	ldur	w8, [x29, #-12]
  22cb54:	ldr	x9, [x19, #40]
  22cb58:	adrp	x10, 211000 <worker_hash_op+0x6ad0>
  22cb5c:	add	x10, x10, #0xb64
  22cb60:	cmp	x6, #0x0
  22cb64:	str	w8, [sp, #16]
  22cb68:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  22cb6c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cb70:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22cb74:	csel	x5, xzr, x10, eq  // eq = none
  22cb78:	add	x8, x8, #0x89a
  22cb7c:	add	x2, x2, #0x55b
  22cb80:	add	x4, x4, #0x955
  22cb84:	mov	w0, #0x7                   	// #7
  22cb88:	mov	w3, #0x225                 	// #549
  22cb8c:	mov	w1, wzr
  22cb90:	mov	x7, xzr
  22cb94:	str	x9, [sp, #24]
  22cb98:	stp	xzr, x8, [sp]
  22cb9c:	bl	2539f0 <log_object_internal@plt>
  22cba0:	b	22cc54 <worker_spawn+0x1ac>
  22cba4:	mov	w21, w0
  22cba8:	mov	w0, #0x1                   	// #1
  22cbac:	bl	2535b0 <log_get_max_level_realm@plt>
  22cbb0:	cmp	w0, #0x3
  22cbb4:	b.lt	22cc54 <worker_spawn+0x1ac>  // b.tstop
  22cbb8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cbbc:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22cbc0:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  22cbc4:	add	x2, x2, #0x55b
  22cbc8:	add	x4, x4, #0x955
  22cbcc:	add	x5, x5, #0xbf4
  22cbd0:	mov	w0, #0x403                 	// #1027
  22cbd4:	mov	w3, #0x20d                 	// #525
  22cbd8:	b	22cc4c <worker_spawn+0x1a4>
  22cbdc:	mov	w21, w0
  22cbe0:	mov	w0, #0x1                   	// #1
  22cbe4:	bl	2535b0 <log_get_max_level_realm@plt>
  22cbe8:	cmp	w0, #0x3
  22cbec:	b.lt	22cc54 <worker_spawn+0x1ac>  // b.tstop
  22cbf0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cbf4:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22cbf8:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  22cbfc:	add	x2, x2, #0x55b
  22cc00:	add	x4, x4, #0x955
  22cc04:	add	x5, x5, #0x8c3
  22cc08:	mov	w0, #0x403                 	// #1027
  22cc0c:	mov	w3, #0x211                 	// #529
  22cc10:	b	22cc4c <worker_spawn+0x1a4>
  22cc14:	mov	w8, #0x1                   	// #1
  22cc18:	mov	w0, #0x1                   	// #1
  22cc1c:	str	w8, [x19, #16]
  22cc20:	bl	2535b0 <log_get_max_level_realm@plt>
  22cc24:	cmp	w0, #0x3
  22cc28:	b.lt	22cc54 <worker_spawn+0x1ac>  // b.tstop
  22cc2c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cc30:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22cc34:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  22cc38:	add	x2, x2, #0x55b
  22cc3c:	add	x4, x4, #0x955
  22cc40:	add	x5, x5, #0x341
  22cc44:	mov	w0, #0x403                 	// #1027
  22cc48:	mov	w3, #0x216                 	// #534
  22cc4c:	mov	w1, w21
  22cc50:	bl	2535c0 <log_internal_realm@plt>
  22cc54:	add	x0, x29, #0x18
  22cc58:	bl	22cf20 <sd_device_monitor_unrefp>
  22cc5c:	ldp	x20, x19, [sp, #96]
  22cc60:	ldr	x21, [sp, #80]
  22cc64:	ldp	x29, x30, [sp, #64]
  22cc68:	add	sp, sp, #0x70
  22cc6c:	ret
  22cc70:	mov	w20, w0
  22cc74:	mov	w0, #0x1                   	// #1
  22cc78:	bl	2535b0 <log_get_max_level_realm@plt>
  22cc7c:	cmp	w0, #0x3
  22cc80:	b.lt	22cc54 <worker_spawn+0x1ac>  // b.tstop
  22cc84:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cc88:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22cc8c:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22cc90:	add	x2, x2, #0x55b
  22cc94:	add	x4, x4, #0x955
  22cc98:	add	x5, x5, #0xdf0
  22cc9c:	mov	w0, #0x403                 	// #1027
  22cca0:	mov	w3, #0x221                 	// #545
  22cca4:	mov	w1, w20
  22cca8:	b	22cc50 <worker_spawn+0x1a8>
  22ccac:	sub	x1, x29, #0x18
  22ccb0:	mov	x0, x20
  22ccb4:	bl	253a40 <sd_device_get_sysname@plt>
  22ccb8:	b	22cb4c <worker_spawn+0xa4>
  22ccbc:	ldr	x0, [x19, #24]
  22ccc0:	mov	x19, x2
  22ccc4:	bl	253c50 <sd_device_ref@plt>
  22ccc8:	mov	x2, x0
  22cccc:	mov	x0, x20
  22ccd0:	mov	x1, x19
  22ccd4:	bl	22cf64 <worker_main>
  22ccd8:	mov	w19, w0
  22ccdc:	bl	253c60 <log_close@plt>
  22cce0:	lsr	w0, w19, #31
  22cce4:	bl	253c70 <_exit@plt>

000000000022cce8 <udev_warn_timeout>:
  22cce8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  22ccec:	movk	x8, #0xaaab
  22ccf0:	umulh	x8, x0, x8
  22ccf4:	lsr	x8, x8, #1
  22ccf8:	add	x9, x8, x8, lsl #1
  22ccfc:	cmp	x0, x9
  22cd00:	cinc	x0, x8, ne  // ne = any
  22cd04:	ret

000000000022cd08 <on_event_timeout_warning>:
  22cd08:	sub	sp, sp, #0x50
  22cd0c:	stp	x29, x30, [sp, #48]
  22cd10:	stp	x20, x19, [sp, #64]
  22cd14:	add	x29, sp, #0x30
  22cd18:	cbz	x2, 22cdc0 <on_event_timeout_warning+0xb8>
  22cd1c:	ldr	x8, [x2, #8]
  22cd20:	mov	x19, x2
  22cd24:	cbz	x8, 22cde4 <on_event_timeout_warning+0xdc>
  22cd28:	stur	xzr, [x29, #-8]
  22cd2c:	ldr	x20, [x19, #24]
  22cd30:	cbz	x20, 22cd44 <on_event_timeout_warning+0x3c>
  22cd34:	mov	w0, #0x1                   	// #1
  22cd38:	bl	2535b0 <log_get_max_level_realm@plt>
  22cd3c:	cmp	w0, #0x4
  22cd40:	b.ge	22cdb0 <on_event_timeout_warning+0xa8>  // b.tcont
  22cd44:	ldr	x8, [x19, #8]
  22cd48:	ldur	x6, [x29, #-8]
  22cd4c:	ldr	x9, [x19, #40]
  22cd50:	adrp	x10, 211000 <worker_hash_op+0x6ad0>
  22cd54:	ldr	w8, [x8, #8]
  22cd58:	add	x10, x10, #0xb64
  22cd5c:	cmp	x6, #0x0
  22cd60:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cd64:	str	w8, [sp, #16]
  22cd68:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22cd6c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  22cd70:	csel	x5, xzr, x10, eq  // eq = none
  22cd74:	add	x8, x8, #0x572
  22cd78:	add	x2, x2, #0x55b
  22cd7c:	add	x4, x4, #0x6ea
  22cd80:	mov	w0, #0x4                   	// #4
  22cd84:	mov	w3, #0xf4                  	// #244
  22cd88:	mov	w1, wzr
  22cd8c:	mov	x7, xzr
  22cd90:	str	x9, [sp, #24]
  22cd94:	stp	xzr, x8, [sp]
  22cd98:	bl	2539f0 <log_object_internal@plt>
  22cd9c:	ldp	x20, x19, [sp, #64]
  22cda0:	ldp	x29, x30, [sp, #48]
  22cda4:	mov	w0, #0x1                   	// #1
  22cda8:	add	sp, sp, #0x50
  22cdac:	ret
  22cdb0:	sub	x1, x29, #0x8
  22cdb4:	mov	x0, x20
  22cdb8:	bl	253a40 <sd_device_get_sysname@plt>
  22cdbc:	b	22cd44 <on_event_timeout_warning+0x3c>
  22cdc0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22cdc4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cdc8:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  22cdcc:	add	x1, x1, #0xc4f
  22cdd0:	add	x2, x2, #0x55b
  22cdd4:	add	x4, x4, #0x923
  22cdd8:	mov	w0, #0x1                   	// #1
  22cddc:	mov	w3, #0xf1                  	// #241
  22cde0:	bl	253740 <log_assert_failed_realm@plt>
  22cde4:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22cde8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cdec:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  22cdf0:	add	x1, x1, #0xf2
  22cdf4:	add	x2, x2, #0x55b
  22cdf8:	add	x4, x4, #0x923
  22cdfc:	mov	w0, #0x1                   	// #1
  22ce00:	mov	w3, #0xf2                  	// #242
  22ce04:	bl	253740 <log_assert_failed_realm@plt>

000000000022ce08 <on_event_timeout>:
  22ce08:	sub	sp, sp, #0x50
  22ce0c:	stp	x29, x30, [sp, #48]
  22ce10:	stp	x20, x19, [sp, #64]
  22ce14:	add	x29, sp, #0x30
  22ce18:	cbz	x2, 22ced8 <on_event_timeout+0xd0>
  22ce1c:	ldr	x8, [x2, #8]
  22ce20:	mov	x19, x2
  22ce24:	cbz	x8, 22cefc <on_event_timeout+0xf4>
  22ce28:	ldr	w0, [x8, #8]
  22ce2c:	mov	w1, #0x9                   	// #9
  22ce30:	bl	253c80 <kill_and_sigcont@plt>
  22ce34:	ldr	x8, [x19, #8]
  22ce38:	mov	w9, #0x3                   	// #3
  22ce3c:	str	w9, [x8, #24]
  22ce40:	stur	xzr, [x29, #-8]
  22ce44:	ldr	x20, [x19, #24]
  22ce48:	cbz	x20, 22ce5c <on_event_timeout+0x54>
  22ce4c:	mov	w0, #0x1                   	// #1
  22ce50:	bl	2535b0 <log_get_max_level_realm@plt>
  22ce54:	cmp	w0, #0x3
  22ce58:	b.ge	22cec8 <on_event_timeout+0xc0>  // b.tcont
  22ce5c:	ldr	x8, [x19, #8]
  22ce60:	ldur	x6, [x29, #-8]
  22ce64:	ldr	x9, [x19, #40]
  22ce68:	adrp	x10, 211000 <worker_hash_op+0x6ad0>
  22ce6c:	ldr	w8, [x8, #8]
  22ce70:	add	x10, x10, #0xb64
  22ce74:	cmp	x6, #0x0
  22ce78:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ce7c:	str	w8, [sp, #16]
  22ce80:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  22ce84:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22ce88:	csel	x5, xzr, x10, eq  // eq = none
  22ce8c:	add	x8, x8, #0xc5f
  22ce90:	add	x2, x2, #0x55b
  22ce94:	add	x4, x4, #0x80d
  22ce98:	mov	w0, #0x3                   	// #3
  22ce9c:	mov	w3, #0xe9                  	// #233
  22cea0:	mov	w1, wzr
  22cea4:	mov	x7, xzr
  22cea8:	str	x9, [sp, #24]
  22ceac:	stp	xzr, x8, [sp]
  22ceb0:	bl	2539f0 <log_object_internal@plt>
  22ceb4:	ldp	x20, x19, [sp, #64]
  22ceb8:	ldp	x29, x30, [sp, #48]
  22cebc:	mov	w0, #0x1                   	// #1
  22cec0:	add	sp, sp, #0x50
  22cec4:	ret
  22cec8:	sub	x1, x29, #0x8
  22cecc:	mov	x0, x20
  22ced0:	bl	253a40 <sd_device_get_sysname@plt>
  22ced4:	b	22ce5c <on_event_timeout+0x54>
  22ced8:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22cedc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cee0:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  22cee4:	add	x1, x1, #0xc4f
  22cee8:	add	x2, x2, #0x55b
  22ceec:	add	x4, x4, #0x1f0
  22cef0:	mov	w0, #0x1                   	// #1
  22cef4:	mov	w3, #0xe3                  	// #227
  22cef8:	bl	253740 <log_assert_failed_realm@plt>
  22cefc:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22cf00:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cf04:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  22cf08:	add	x1, x1, #0xf2
  22cf0c:	add	x2, x2, #0x55b
  22cf10:	add	x4, x4, #0x1f0
  22cf14:	mov	w0, #0x1                   	// #1
  22cf18:	mov	w3, #0xe4                  	// #228
  22cf1c:	bl	253740 <log_assert_failed_realm@plt>

000000000022cf20 <sd_device_monitor_unrefp>:
  22cf20:	stp	x29, x30, [sp, #-16]!
  22cf24:	ldr	x0, [x0]
  22cf28:	mov	x29, sp
  22cf2c:	cbz	x0, 22cf34 <sd_device_monitor_unrefp+0x14>
  22cf30:	bl	253930 <sd_device_monitor_unref@plt>
  22cf34:	ldp	x29, x30, [sp], #16
  22cf38:	ret

000000000022cf3c <safe_fork>:
  22cf3c:	stp	x29, x30, [sp, #-16]!
  22cf40:	mov	x4, x0
  22cf44:	mov	w3, #0x4                   	// #4
  22cf48:	mov	x0, xzr
  22cf4c:	mov	x1, xzr
  22cf50:	mov	x2, xzr
  22cf54:	mov	x29, sp
  22cf58:	bl	253c90 <safe_fork_full@plt>
  22cf5c:	ldp	x29, x30, [sp], #16
  22cf60:	ret

000000000022cf64 <worker_main>:
  22cf64:	sub	sp, sp, #0x50
  22cf68:	stp	x29, x30, [sp, #16]
  22cf6c:	add	x29, sp, #0x10
  22cf70:	str	x23, [sp, #32]
  22cf74:	stp	x22, x21, [sp, #48]
  22cf78:	stp	x20, x19, [sp, #64]
  22cf7c:	str	x2, [x29, #24]
  22cf80:	str	x0, [sp, #8]
  22cf84:	cbz	x0, 22d218 <worker_main+0x2b4>
  22cf88:	mov	x21, x1
  22cf8c:	cbz	x1, 22d23c <worker_main+0x2d8>
  22cf90:	mov	x20, x2
  22cf94:	cbz	x2, 22d260 <worker_main+0x2fc>
  22cf98:	mov	x19, x0
  22cf9c:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  22cfa0:	add	x0, x0, #0xd6c
  22cfa4:	bl	253ca0 <unsetenv@plt>
  22cfa8:	mov	w2, #0xf                   	// #15
  22cfac:	mov	w3, #0xffffffff            	// #-1
  22cfb0:	mov	w0, wzr
  22cfb4:	mov	x1, xzr
  22cfb8:	bl	253800 <sigprocmask_many@plt>
  22cfbc:	tbnz	w0, #31, 22d284 <worker_main+0x320>
  22cfc0:	mov	w0, wzr
  22cfc4:	bl	2536d0 <set_oom_score_adjust@plt>
  22cfc8:	tbz	w0, #31, 22d008 <worker_main+0xa4>
  22cfcc:	mov	w22, w0
  22cfd0:	mov	w0, #0x1                   	// #1
  22cfd4:	bl	2535b0 <log_get_max_level_realm@plt>
  22cfd8:	cmp	w0, #0x7
  22cfdc:	b.lt	22d008 <worker_main+0xa4>  // b.tstop
  22cfe0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22cfe4:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22cfe8:	adrp	x5, 218000 <worker_hash_op+0xdad0>
  22cfec:	add	x2, x2, #0x55b
  22cff0:	add	x4, x4, #0xc1d
  22cff4:	add	x5, x5, #0x29d
  22cff8:	mov	w0, #0x407                 	// #1031
  22cffc:	mov	w3, #0x1de                 	// #478
  22d000:	mov	w1, w22
  22d004:	bl	2535c0 <log_internal_realm@plt>
  22d008:	mov	x0, x19
  22d00c:	bl	22a954 <manager_clear_for_worker>
  22d010:	mov	x0, x19
  22d014:	bl	253cb0 <sd_event_new@plt>
  22d018:	tbnz	w0, #31, 22d09c <worker_main+0x138>
  22d01c:	ldr	x0, [x19]
  22d020:	mov	w2, #0xf                   	// #15
  22d024:	mov	x1, xzr
  22d028:	mov	x3, xzr
  22d02c:	mov	x4, xzr
  22d030:	bl	253820 <sd_event_add_signal@plt>
  22d034:	tbnz	w0, #31, 22d0d4 <worker_main+0x170>
  22d038:	ldr	x1, [x19]
  22d03c:	mov	x0, x21
  22d040:	bl	253860 <sd_device_monitor_attach_event@plt>
  22d044:	tbnz	w0, #31, 22d10c <worker_main+0x1a8>
  22d048:	ldr	x22, [sp, #8]
  22d04c:	adrp	x1, 22d000 <worker_main+0x9c>
  22d050:	add	x1, x1, #0x440
  22d054:	mov	x0, x21
  22d058:	mov	x2, x22
  22d05c:	bl	253870 <sd_device_monitor_start@plt>
  22d060:	tbnz	w0, #31, 22d188 <worker_main+0x224>
  22d064:	mov	x0, x21
  22d068:	bl	253880 <sd_device_monitor_get_event_source@plt>
  22d06c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  22d070:	add	x1, x1, #0xd54
  22d074:	bl	253890 <sd_event_source_set_description@plt>
  22d078:	mov	x0, x21
  22d07c:	mov	x1, x20
  22d080:	mov	x2, x22
  22d084:	bl	22d440 <worker_device_monitor_handler>
  22d088:	ldr	x0, [x19]
  22d08c:	bl	2538c0 <sd_event_loop@plt>
  22d090:	tbnz	w0, #31, 22d1c4 <worker_main+0x260>
  22d094:	mov	w19, wzr
  22d098:	b	22d15c <worker_main+0x1f8>
  22d09c:	mov	w22, w0
  22d0a0:	mov	w0, #0x1                   	// #1
  22d0a4:	bl	2535b0 <log_get_max_level_realm@plt>
  22d0a8:	cmp	w0, #0x3
  22d0ac:	b.lt	22d150 <worker_main+0x1ec>  // b.tstop
  22d0b0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d0b4:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22d0b8:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  22d0bc:	add	x2, x2, #0x55b
  22d0c0:	add	x4, x4, #0xc1d
  22d0c4:	add	x5, x5, #0x59e
  22d0c8:	mov	w0, #0x403                 	// #1027
  22d0cc:	mov	w3, #0x1e5                 	// #485
  22d0d0:	b	22d140 <worker_main+0x1dc>
  22d0d4:	mov	w22, w0
  22d0d8:	mov	w0, #0x1                   	// #1
  22d0dc:	bl	2535b0 <log_get_max_level_realm@plt>
  22d0e0:	cmp	w0, #0x3
  22d0e4:	b.lt	22d150 <worker_main+0x1ec>  // b.tstop
  22d0e8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d0ec:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22d0f0:	adrp	x5, 218000 <worker_hash_op+0xdad0>
  22d0f4:	add	x2, x2, #0x55b
  22d0f8:	add	x4, x4, #0xc1d
  22d0fc:	add	x5, x5, #0x2c5
  22d100:	mov	w0, #0x403                 	// #1027
  22d104:	mov	w3, #0x1e9                 	// #489
  22d108:	b	22d140 <worker_main+0x1dc>
  22d10c:	mov	w22, w0
  22d110:	mov	w0, #0x1                   	// #1
  22d114:	bl	2535b0 <log_get_max_level_realm@plt>
  22d118:	cmp	w0, #0x3
  22d11c:	b.lt	22d150 <worker_main+0x1ec>  // b.tstop
  22d120:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d124:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22d128:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  22d12c:	add	x2, x2, #0x55b
  22d130:	add	x4, x4, #0xc1d
  22d134:	add	x5, x5, #0x4c6
  22d138:	mov	w0, #0x403                 	// #1027
  22d13c:	mov	w3, #0x1ed                 	// #493
  22d140:	mov	w1, w22
  22d144:	bl	2535c0 <log_internal_realm@plt>
  22d148:	mov	w19, w0
  22d14c:	b	22d15c <worker_main+0x1f8>
  22d150:	mov	w8, wzr
  22d154:	neg	w9, w22
  22d158:	sub	w19, w8, w9, uxtb
  22d15c:	add	x0, sp, #0x8
  22d160:	bl	229924 <manager_freep>
  22d164:	add	x0, x29, #0x18
  22d168:	bl	22d424 <sd_device_unrefp>
  22d16c:	mov	w0, w19
  22d170:	ldp	x20, x19, [sp, #64]
  22d174:	ldp	x22, x21, [sp, #48]
  22d178:	ldr	x23, [sp, #32]
  22d17c:	ldp	x29, x30, [sp, #16]
  22d180:	add	sp, sp, #0x50
  22d184:	ret
  22d188:	mov	w23, w0
  22d18c:	mov	w0, #0x1                   	// #1
  22d190:	bl	2535b0 <log_get_max_level_realm@plt>
  22d194:	cmp	w0, #0x3
  22d198:	b.lt	22d200 <worker_main+0x29c>  // b.tstop
  22d19c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d1a0:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22d1a4:	adrp	x5, 20a000 <parse_argv.options-0x3f0>
  22d1a8:	add	x2, x2, #0x55b
  22d1ac:	add	x4, x4, #0xc1d
  22d1b0:	add	x5, x5, #0x579
  22d1b4:	mov	w0, #0x403                 	// #1027
  22d1b8:	mov	w3, #0x1f1                 	// #497
  22d1bc:	mov	w1, w23
  22d1c0:	b	22d144 <worker_main+0x1e0>
  22d1c4:	mov	w19, w0
  22d1c8:	mov	w0, #0x1                   	// #1
  22d1cc:	bl	2535b0 <log_get_max_level_realm@plt>
  22d1d0:	cmp	w0, #0x3
  22d1d4:	b.lt	22d20c <worker_main+0x2a8>  // b.tstop
  22d1d8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d1dc:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22d1e0:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22d1e4:	add	x2, x2, #0x55b
  22d1e8:	add	x4, x4, #0xc1d
  22d1ec:	add	x5, x5, #0xe47
  22d1f0:	mov	w0, #0x403                 	// #1027
  22d1f4:	mov	w3, #0x1fa                 	// #506
  22d1f8:	mov	w1, w19
  22d1fc:	b	22d144 <worker_main+0x1e0>
  22d200:	mov	w8, wzr
  22d204:	neg	w9, w23
  22d208:	b	22d158 <worker_main+0x1f4>
  22d20c:	mov	w8, wzr
  22d210:	neg	w9, w19
  22d214:	b	22d158 <worker_main+0x1f4>
  22d218:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22d21c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d220:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  22d224:	add	x1, x1, #0xffb
  22d228:	add	x2, x2, #0x55b
  22d22c:	add	x4, x4, #0xae4
  22d230:	mov	w0, #0x1                   	// #1
  22d234:	mov	w3, #0x1d3                 	// #467
  22d238:	bl	253740 <log_assert_failed_realm@plt>
  22d23c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  22d240:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d244:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  22d248:	add	x1, x1, #0x35d
  22d24c:	add	x2, x2, #0x55b
  22d250:	add	x4, x4, #0xae4
  22d254:	mov	w0, #0x1                   	// #1
  22d258:	mov	w3, #0x1d4                 	// #468
  22d25c:	bl	253740 <log_assert_failed_realm@plt>
  22d260:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  22d264:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d268:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  22d26c:	add	x1, x1, #0x9e6
  22d270:	add	x2, x2, #0x55b
  22d274:	add	x4, x4, #0xae4
  22d278:	mov	w0, #0x1                   	// #1
  22d27c:	mov	w3, #0x1d5                 	// #469
  22d280:	bl	253740 <log_assert_failed_realm@plt>
  22d284:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  22d288:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d28c:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  22d290:	add	x1, x1, #0xb21
  22d294:	add	x2, x2, #0x55b
  22d298:	add	x4, x4, #0xae4
  22d29c:	mov	w0, #0x1                   	// #1
  22d2a0:	mov	w3, #0x1d9                 	// #473
  22d2a4:	bl	253740 <log_assert_failed_realm@plt>

000000000022d2a8 <worker_new>:
  22d2a8:	stp	x29, x30, [sp, #-64]!
  22d2ac:	mov	x29, sp
  22d2b0:	str	x23, [sp, #16]
  22d2b4:	stp	x22, x21, [sp, #32]
  22d2b8:	stp	x20, x19, [sp, #48]
  22d2bc:	str	xzr, [x29, #24]
  22d2c0:	cbz	x0, 22d394 <worker_new+0xec>
  22d2c4:	mov	x21, x1
  22d2c8:	cbz	x1, 22d3b8 <worker_new+0x110>
  22d2cc:	mov	x23, x2
  22d2d0:	cbz	x2, 22d3dc <worker_new+0x134>
  22d2d4:	mov	w20, w3
  22d2d8:	cmp	w3, #0x1
  22d2dc:	b.le	22d400 <worker_new+0x158>
  22d2e0:	mov	x19, x0
  22d2e4:	mov	x0, x23
  22d2e8:	bl	253cc0 <device_monitor_disconnect@plt>
  22d2ec:	mov	w0, #0x28                  	// #40
  22d2f0:	bl	22ad40 <malloc_multiply>
  22d2f4:	str	x0, [x29, #24]
  22d2f8:	cbz	x0, 22d370 <worker_new+0xc8>
  22d2fc:	mov	x22, x0
  22d300:	mov	x0, x23
  22d304:	bl	253cd0 <sd_device_monitor_ref@plt>
  22d308:	add	x23, x21, #0x8
  22d30c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  22d310:	str	x0, [x22, #16]
  22d314:	add	x1, x1, #0x530
  22d318:	mov	x0, x23
  22d31c:	str	x21, [x22]
  22d320:	str	w20, [x22, #8]
  22d324:	str	wzr, [x22, #24]
  22d328:	str	xzr, [x22, #32]
  22d32c:	bl	253a90 <internal_hashmap_ensure_allocated@plt>
  22d330:	tbnz	w0, #31, 22d368 <worker_new+0xc0>
  22d334:	ldr	x21, [x23]
  22d338:	mov	w0, w20
  22d33c:	bl	22c14c <PID_TO_PTR>
  22d340:	mov	x1, x0
  22d344:	mov	x0, x21
  22d348:	mov	x2, x22
  22d34c:	bl	253aa0 <hashmap_put@plt>
  22d350:	tbnz	w0, #31, 22d368 <worker_new+0xc0>
  22d354:	ldr	x8, [x29, #24]
  22d358:	mov	w21, wzr
  22d35c:	str	xzr, [x29, #24]
  22d360:	str	x8, [x19]
  22d364:	b	22d374 <worker_new+0xcc>
  22d368:	mov	w21, w0
  22d36c:	b	22d374 <worker_new+0xcc>
  22d370:	mov	w21, #0xfffffff4            	// #-12
  22d374:	add	x0, x29, #0x18
  22d378:	bl	22df04 <worker_freep>
  22d37c:	mov	w0, w21
  22d380:	ldp	x20, x19, [sp, #48]
  22d384:	ldp	x22, x21, [sp, #32]
  22d388:	ldr	x23, [sp, #16]
  22d38c:	ldp	x29, x30, [sp], #64
  22d390:	ret
  22d394:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  22d398:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d39c:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22d3a0:	add	x1, x1, #0xb2b
  22d3a4:	add	x2, x2, #0x55b
  22d3a8:	add	x4, x4, #0x3c5
  22d3ac:	mov	w0, #0x1                   	// #1
  22d3b0:	mov	w3, #0xc1                  	// #193
  22d3b4:	bl	253740 <log_assert_failed_realm@plt>
  22d3b8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22d3bc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d3c0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22d3c4:	add	x1, x1, #0xffb
  22d3c8:	add	x2, x2, #0x55b
  22d3cc:	add	x4, x4, #0x3c5
  22d3d0:	mov	w0, #0x1                   	// #1
  22d3d4:	mov	w3, #0xc2                  	// #194
  22d3d8:	bl	253740 <log_assert_failed_realm@plt>
  22d3dc:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  22d3e0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d3e4:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22d3e8:	add	x1, x1, #0xba5
  22d3ec:	add	x2, x2, #0x55b
  22d3f0:	add	x4, x4, #0x3c5
  22d3f4:	mov	w0, #0x1                   	// #1
  22d3f8:	mov	w3, #0xc3                  	// #195
  22d3fc:	bl	253740 <log_assert_failed_realm@plt>
  22d400:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  22d404:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d408:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22d40c:	add	x1, x1, #0xfc9
  22d410:	add	x2, x2, #0x55b
  22d414:	add	x4, x4, #0x3c5
  22d418:	mov	w0, #0x1                   	// #1
  22d41c:	mov	w3, #0xc4                  	// #196
  22d420:	bl	253740 <log_assert_failed_realm@plt>

000000000022d424 <sd_device_unrefp>:
  22d424:	stp	x29, x30, [sp, #-16]!
  22d428:	ldr	x0, [x0]
  22d42c:	mov	x29, sp
  22d430:	cbz	x0, 22d438 <sd_device_unrefp+0x14>
  22d434:	bl	253950 <sd_device_unref@plt>
  22d438:	ldp	x29, x30, [sp], #16
  22d43c:	ret

000000000022d440 <worker_device_monitor_handler>:
  22d440:	sub	sp, sp, #0x50
  22d444:	stp	x29, x30, [sp, #32]
  22d448:	stp	x22, x21, [sp, #48]
  22d44c:	stp	x20, x19, [sp, #64]
  22d450:	add	x29, sp, #0x20
  22d454:	cbz	x1, 22d5f0 <worker_device_monitor_handler+0x1b0>
  22d458:	mov	x20, x2
  22d45c:	cbz	x2, 22d614 <worker_device_monitor_handler+0x1d4>
  22d460:	mov	x21, x0
  22d464:	mov	x0, x20
  22d468:	mov	x19, x1
  22d46c:	bl	22d638 <worker_process_device>
  22d470:	tbz	w0, #31, 22d4d0 <worker_device_monitor_handler+0x90>
  22d474:	mov	w22, w0
  22d478:	mov	w0, #0x1                   	// #1
  22d47c:	stur	xzr, [x29, #-8]
  22d480:	bl	2535b0 <log_get_max_level_realm@plt>
  22d484:	cmp	w0, #0x4
  22d488:	b.ge	22d5c0 <worker_device_monitor_handler+0x180>  // b.tcont
  22d48c:	ldur	x6, [x29, #-8]
  22d490:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22d494:	add	x8, x8, #0xb64
  22d498:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d49c:	cmp	x6, #0x0
  22d4a0:	csel	x5, xzr, x8, eq  // eq = none
  22d4a4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22d4a8:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22d4ac:	add	x8, x8, #0xb7e
  22d4b0:	add	x2, x2, #0x55b
  22d4b4:	add	x4, x4, #0x38d
  22d4b8:	mov	w0, #0x4                   	// #4
  22d4bc:	mov	w3, #0x1bf                 	// #447
  22d4c0:	mov	w1, w22
  22d4c4:	mov	x7, xzr
  22d4c8:	stp	xzr, x8, [sp]
  22d4cc:	bl	2539f0 <log_object_internal@plt>
  22d4d0:	mov	x0, x21
  22d4d4:	mov	x1, xzr
  22d4d8:	mov	x2, x19
  22d4dc:	bl	253a30 <device_monitor_send_device@plt>
  22d4e0:	tbz	w0, #31, 22d540 <worker_device_monitor_handler+0x100>
  22d4e4:	mov	w21, w0
  22d4e8:	mov	w0, #0x1                   	// #1
  22d4ec:	stur	xzr, [x29, #-8]
  22d4f0:	bl	2535b0 <log_get_max_level_realm@plt>
  22d4f4:	cmp	w0, #0x4
  22d4f8:	b.ge	22d5d0 <worker_device_monitor_handler+0x190>  // b.tcont
  22d4fc:	ldur	x6, [x29, #-8]
  22d500:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22d504:	add	x8, x8, #0xb64
  22d508:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d50c:	cmp	x6, #0x0
  22d510:	csel	x5, xzr, x8, eq  // eq = none
  22d514:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  22d518:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22d51c:	add	x8, x8, #0x81e
  22d520:	add	x2, x2, #0x55b
  22d524:	add	x4, x4, #0x38d
  22d528:	mov	w0, #0x4                   	// #4
  22d52c:	mov	w3, #0x1c4                 	// #452
  22d530:	mov	w1, w21
  22d534:	mov	x7, xzr
  22d538:	stp	xzr, x8, [sp]
  22d53c:	bl	2539f0 <log_object_internal@plt>
  22d540:	ldr	w0, [x20, #88]
  22d544:	bl	22d9d0 <worker_send_message>
  22d548:	tbz	w0, #31, 22d5a8 <worker_device_monitor_handler+0x168>
  22d54c:	mov	w20, w0
  22d550:	mov	w0, #0x1                   	// #1
  22d554:	stur	xzr, [x29, #-8]
  22d558:	bl	2535b0 <log_get_max_level_realm@plt>
  22d55c:	cmp	w0, #0x4
  22d560:	b.ge	22d5e0 <worker_device_monitor_handler+0x1a0>  // b.tcont
  22d564:	ldur	x6, [x29, #-8]
  22d568:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22d56c:	add	x8, x8, #0xb64
  22d570:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d574:	cmp	x6, #0x0
  22d578:	csel	x5, xzr, x8, eq  // eq = none
  22d57c:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  22d580:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22d584:	add	x8, x8, #0xf58
  22d588:	add	x2, x2, #0x55b
  22d58c:	add	x4, x4, #0x38d
  22d590:	mov	w0, #0x4                   	// #4
  22d594:	mov	w3, #0x1c9                 	// #457
  22d598:	mov	w1, w20
  22d59c:	mov	x7, xzr
  22d5a0:	stp	xzr, x8, [sp]
  22d5a4:	bl	2539f0 <log_object_internal@plt>
  22d5a8:	ldp	x20, x19, [sp, #64]
  22d5ac:	ldp	x22, x21, [sp, #48]
  22d5b0:	ldp	x29, x30, [sp, #32]
  22d5b4:	mov	w0, #0x1                   	// #1
  22d5b8:	add	sp, sp, #0x50
  22d5bc:	ret
  22d5c0:	sub	x1, x29, #0x8
  22d5c4:	mov	x0, x19
  22d5c8:	bl	253a40 <sd_device_get_sysname@plt>
  22d5cc:	b	22d48c <worker_device_monitor_handler+0x4c>
  22d5d0:	sub	x1, x29, #0x8
  22d5d4:	mov	x0, x19
  22d5d8:	bl	253a40 <sd_device_get_sysname@plt>
  22d5dc:	b	22d4fc <worker_device_monitor_handler+0xbc>
  22d5e0:	sub	x1, x29, #0x8
  22d5e4:	mov	x0, x19
  22d5e8:	bl	253a40 <sd_device_get_sysname@plt>
  22d5ec:	b	22d564 <worker_device_monitor_handler+0x124>
  22d5f0:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  22d5f4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d5f8:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  22d5fc:	add	x1, x1, #0x9e6
  22d600:	add	x2, x2, #0x55b
  22d604:	add	x4, x4, #0xd7a
  22d608:	mov	w0, #0x1                   	// #1
  22d60c:	mov	w3, #0x1ba                 	// #442
  22d610:	bl	253740 <log_assert_failed_realm@plt>
  22d614:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22d618:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d61c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  22d620:	add	x1, x1, #0xffb
  22d624:	add	x2, x2, #0x55b
  22d628:	add	x4, x4, #0xd7a
  22d62c:	mov	w0, #0x1                   	// #1
  22d630:	mov	w3, #0x1bb                 	// #443
  22d634:	bl	253740 <log_assert_failed_realm@plt>

000000000022d638 <worker_process_device>:
  22d638:	sub	sp, sp, #0x80
  22d63c:	stp	x29, x30, [sp, #64]
  22d640:	add	x29, sp, #0x40
  22d644:	mov	w8, #0xffffffff            	// #-1
  22d648:	stp	x24, x23, [sp, #80]
  22d64c:	stp	x22, x21, [sp, #96]
  22d650:	stp	x20, x19, [sp, #112]
  22d654:	stur	xzr, [x29, #-8]
  22d658:	stur	w8, [x29, #-12]
  22d65c:	cbz	x0, 22d988 <worker_process_device+0x350>
  22d660:	mov	x19, x1
  22d664:	cbz	x1, 22d9ac <worker_process_device+0x374>
  22d668:	mov	x20, x0
  22d66c:	sub	x1, x29, #0x18
  22d670:	mov	x0, x19
  22d674:	bl	253ce0 <device_get_seqnum@plt>
  22d678:	tbnz	w0, #31, 22d764 <worker_process_device+0x12c>
  22d67c:	sub	x1, x29, #0x10
  22d680:	mov	x0, x19
  22d684:	bl	253cf0 <device_get_action@plt>
  22d688:	tbnz	w0, #31, 22d7b8 <worker_process_device+0x180>
  22d68c:	mov	w0, #0x1                   	// #1
  22d690:	str	xzr, [sp, #32]
  22d694:	bl	2535b0 <log_get_max_level_realm@plt>
  22d698:	cmp	w0, #0x7
  22d69c:	b.ge	22d938 <worker_process_device+0x300>  // b.tcont
  22d6a0:	ldr	x21, [sp, #32]
  22d6a4:	ldur	w0, [x29, #-16]
  22d6a8:	ldur	x24, [x29, #-24]
  22d6ac:	adrp	x23, 211000 <worker_hash_op+0x6ad0>
  22d6b0:	add	x23, x23, #0xb64
  22d6b4:	cmp	x21, #0x0
  22d6b8:	csel	x22, xzr, x23, eq  // eq = none
  22d6bc:	bl	253d00 <device_action_to_string@plt>
  22d6c0:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  22d6c4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d6c8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22d6cc:	stp	x24, x0, [sp, #16]
  22d6d0:	add	x8, x8, #0x842
  22d6d4:	add	x2, x2, #0x55b
  22d6d8:	add	x4, x4, #0x365
  22d6dc:	mov	w0, #0x7                   	// #7
  22d6e0:	mov	w3, #0x193                 	// #403
  22d6e4:	mov	w1, wzr
  22d6e8:	mov	x5, x22
  22d6ec:	mov	x6, x21
  22d6f0:	mov	x7, xzr
  22d6f4:	stp	xzr, x8, [sp]
  22d6f8:	bl	2539f0 <log_object_internal@plt>
  22d6fc:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  22d700:	ldr	x1, [x8, #520]
  22d704:	ldr	x2, [x20, #56]
  22d708:	mov	x0, x19
  22d70c:	bl	22f6c8 <udev_event_new>
  22d710:	stur	x0, [x29, #-8]
  22d714:	cbz	x0, 22d848 <worker_process_device+0x210>
  22d718:	mov	x21, x0
  22d71c:	sub	x1, x29, #0xc
  22d720:	mov	x0, x19
  22d724:	bl	22da2c <worker_lock_block_device>
  22d728:	tbnz	w0, #31, 22d818 <worker_process_device+0x1e0>
  22d72c:	adrp	x24, 28e000 <string_hash_ops+0xfe38>
  22d730:	ldr	x1, [x24, #488]
  22d734:	ldp	x3, x2, [x20, #40]
  22d738:	mov	x0, x21
  22d73c:	bl	230edc <udev_event_execute_rules>
  22d740:	tbnz	w0, #31, 22d818 <worker_process_device+0x1e0>
  22d744:	ldr	x1, [x24, #488]
  22d748:	mov	x0, x21
  22d74c:	bl	231d44 <udev_event_execute_run>
  22d750:	ldr	x8, [x20, #56]
  22d754:	cbz	x8, 22d850 <worker_process_device+0x218>
  22d758:	ldrb	w8, [x21, #105]
  22d75c:	tbnz	w8, #0, 22d864 <worker_process_device+0x22c>
  22d760:	b	22d878 <worker_process_device+0x240>
  22d764:	mov	w21, w0
  22d768:	mov	w0, #0x1                   	// #1
  22d76c:	str	xzr, [sp, #32]
  22d770:	bl	2535b0 <log_get_max_level_realm@plt>
  22d774:	cmp	w0, #0x7
  22d778:	b.ge	22d948 <worker_process_device+0x310>  // b.tcont
  22d77c:	ldr	x6, [sp, #32]
  22d780:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22d784:	add	x8, x8, #0xb64
  22d788:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d78c:	cmp	x6, #0x0
  22d790:	csel	x5, xzr, x8, eq  // eq = none
  22d794:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  22d798:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22d79c:	add	x8, x8, #0x100
  22d7a0:	add	x2, x2, #0x55b
  22d7a4:	add	x4, x4, #0x365
  22d7a8:	mov	w0, #0x7                   	// #7
  22d7ac:	mov	w3, #0x18c                 	// #396
  22d7b0:	str	x8, [sp, #8]
  22d7b4:	b	22d808 <worker_process_device+0x1d0>
  22d7b8:	mov	w21, w0
  22d7bc:	mov	w0, #0x1                   	// #1
  22d7c0:	str	xzr, [sp, #32]
  22d7c4:	bl	2535b0 <log_get_max_level_realm@plt>
  22d7c8:	cmp	w0, #0x7
  22d7cc:	b.ge	22d958 <worker_process_device+0x320>  // b.tcont
  22d7d0:	ldr	x6, [sp, #32]
  22d7d4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22d7d8:	add	x8, x8, #0xb64
  22d7dc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d7e0:	cmp	x6, #0x0
  22d7e4:	csel	x5, xzr, x8, eq  // eq = none
  22d7e8:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  22d7ec:	add	x8, x8, #0xd6a
  22d7f0:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22d7f4:	add	x2, x2, #0x55b
  22d7f8:	add	x4, x4, #0x365
  22d7fc:	str	x8, [sp, #8]
  22d800:	mov	w0, #0x7                   	// #7
  22d804:	mov	w3, #0x190                 	// #400
  22d808:	mov	w1, w21
  22d80c:	str	xzr, [sp]
  22d810:	mov	x7, xzr
  22d814:	bl	2539f0 <log_object_internal@plt>
  22d818:	mov	w22, w0
  22d81c:	sub	x0, x29, #0xc
  22d820:	bl	22da14 <closep>
  22d824:	sub	x0, x29, #0x8
  22d828:	bl	22d9f8 <udev_event_freep>
  22d82c:	mov	w0, w22
  22d830:	ldp	x20, x19, [sp, #112]
  22d834:	ldp	x22, x21, [sp, #96]
  22d838:	ldp	x24, x23, [sp, #80]
  22d83c:	ldp	x29, x30, [sp, #64]
  22d840:	add	sp, sp, #0x80
  22d844:	ret
  22d848:	mov	w22, #0xfffffff4            	// #-12
  22d84c:	b	22d81c <worker_process_device+0x1e4>
  22d850:	ldr	x0, [x21, #88]
  22d854:	bl	253d10 <sd_netlink_ref@plt>
  22d858:	str	x0, [x20, #56]
  22d85c:	ldrb	w8, [x21, #105]
  22d860:	tbz	w8, #0, 22d878 <worker_process_device+0x240>
  22d864:	mov	x0, x19
  22d868:	bl	23e78c <udev_watch_begin>
  22d86c:	mov	x0, x19
  22d870:	bl	253d20 <device_update_db@plt>
  22d874:	tbnz	w0, #31, 22d8e8 <worker_process_device+0x2b0>
  22d878:	mov	w0, #0x1                   	// #1
  22d87c:	str	xzr, [sp, #32]
  22d880:	bl	2535b0 <log_get_max_level_realm@plt>
  22d884:	cmp	w0, #0x7
  22d888:	b.ge	22d968 <worker_process_device+0x330>  // b.tcont
  22d88c:	ldr	x19, [sp, #32]
  22d890:	ldur	w0, [x29, #-16]
  22d894:	ldur	x21, [x29, #-24]
  22d898:	cmp	x19, #0x0
  22d89c:	csel	x20, xzr, x23, eq  // eq = none
  22d8a0:	bl	253d00 <device_action_to_string@plt>
  22d8a4:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  22d8a8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d8ac:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22d8b0:	stp	x21, x0, [sp, #16]
  22d8b4:	add	x8, x8, #0xc88
  22d8b8:	add	x2, x2, #0x55b
  22d8bc:	add	x4, x4, #0x365
  22d8c0:	mov	w0, #0x7                   	// #7
  22d8c4:	mov	w3, #0x1b1                 	// #433
  22d8c8:	mov	w1, wzr
  22d8cc:	mov	x5, x20
  22d8d0:	mov	x6, x19
  22d8d4:	mov	x7, xzr
  22d8d8:	stp	xzr, x8, [sp]
  22d8dc:	bl	2539f0 <log_object_internal@plt>
  22d8e0:	mov	w22, wzr
  22d8e4:	b	22d81c <worker_process_device+0x1e4>
  22d8e8:	mov	w20, w0
  22d8ec:	mov	w0, #0x1                   	// #1
  22d8f0:	str	xzr, [sp, #32]
  22d8f4:	bl	2535b0 <log_get_max_level_realm@plt>
  22d8f8:	cmp	w0, #0x7
  22d8fc:	b.ge	22d978 <worker_process_device+0x340>  // b.tcont
  22d900:	ldr	x6, [sp, #32]
  22d904:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  22d908:	add	x8, x8, #0xf8b
  22d90c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d910:	cmp	x6, #0x0
  22d914:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22d918:	csel	x5, xzr, x23, eq  // eq = none
  22d91c:	add	x2, x2, #0x55b
  22d920:	add	x4, x4, #0x365
  22d924:	stp	xzr, x8, [sp]
  22d928:	mov	w0, #0x7                   	// #7
  22d92c:	mov	w3, #0x1ad                 	// #429
  22d930:	mov	w1, w20
  22d934:	b	22d810 <worker_process_device+0x1d8>
  22d938:	add	x1, sp, #0x20
  22d93c:	mov	x0, x19
  22d940:	bl	253a40 <sd_device_get_sysname@plt>
  22d944:	b	22d6a0 <worker_process_device+0x68>
  22d948:	add	x1, sp, #0x20
  22d94c:	mov	x0, x19
  22d950:	bl	253a40 <sd_device_get_sysname@plt>
  22d954:	b	22d77c <worker_process_device+0x144>
  22d958:	add	x1, sp, #0x20
  22d95c:	mov	x0, x19
  22d960:	bl	253a40 <sd_device_get_sysname@plt>
  22d964:	b	22d7d0 <worker_process_device+0x198>
  22d968:	add	x1, sp, #0x20
  22d96c:	mov	x0, x19
  22d970:	bl	253a40 <sd_device_get_sysname@plt>
  22d974:	b	22d88c <worker_process_device+0x254>
  22d978:	add	x1, sp, #0x20
  22d97c:	mov	x0, x19
  22d980:	bl	253a40 <sd_device_get_sysname@plt>
  22d984:	b	22d900 <worker_process_device+0x2c8>
  22d988:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22d98c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d990:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22d994:	add	x1, x1, #0xffb
  22d998:	add	x2, x2, #0x55b
  22d99c:	add	x4, x4, #0xe57
  22d9a0:	mov	w0, #0x1                   	// #1
  22d9a4:	mov	w3, #0x187                 	// #391
  22d9a8:	bl	253740 <log_assert_failed_realm@plt>
  22d9ac:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  22d9b0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22d9b4:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  22d9b8:	add	x1, x1, #0x9e6
  22d9bc:	add	x2, x2, #0x55b
  22d9c0:	add	x4, x4, #0xe57
  22d9c4:	mov	w0, #0x1                   	// #1
  22d9c8:	mov	w3, #0x188                 	// #392
  22d9cc:	bl	253740 <log_assert_failed_realm@plt>

000000000022d9d0 <worker_send_message>:
  22d9d0:	sub	sp, sp, #0x20
  22d9d4:	add	x1, sp, #0x8
  22d9d8:	mov	x2, xzr
  22d9dc:	mov	w3, wzr
  22d9e0:	stp	x29, x30, [sp, #16]
  22d9e4:	add	x29, sp, #0x10
  22d9e8:	bl	253d30 <loop_write@plt>
  22d9ec:	ldp	x29, x30, [sp, #16]
  22d9f0:	add	sp, sp, #0x20
  22d9f4:	ret

000000000022d9f8 <udev_event_freep>:
  22d9f8:	stp	x29, x30, [sp, #-16]!
  22d9fc:	ldr	x0, [x0]
  22da00:	mov	x29, sp
  22da04:	cbz	x0, 22da0c <udev_event_freep+0x14>
  22da08:	bl	22f7ac <udev_event_free>
  22da0c:	ldp	x29, x30, [sp], #16
  22da10:	ret

000000000022da14 <closep>:
  22da14:	stp	x29, x30, [sp, #-16]!
  22da18:	ldr	w0, [x0]
  22da1c:	mov	x29, sp
  22da20:	bl	2538f0 <safe_close@plt>
  22da24:	ldp	x29, x30, [sp], #16
  22da28:	ret

000000000022da2c <worker_lock_block_device>:
  22da2c:	sub	sp, sp, #0x90
  22da30:	stp	x29, x30, [sp, #96]
  22da34:	add	x29, sp, #0x60
  22da38:	mov	w8, #0xffffffff            	// #-1
  22da3c:	str	x21, [sp, #112]
  22da40:	stp	x20, x19, [sp, #128]
  22da44:	str	x0, [x29, #24]
  22da48:	stur	w8, [x29, #-4]
  22da4c:	cbz	x0, 22debc <worker_lock_block_device+0x490>
  22da50:	mov	x19, x1
  22da54:	cbz	x1, 22dee0 <worker_lock_block_device+0x4b4>
  22da58:	mov	w1, #0x1                   	// #1
  22da5c:	bl	253d40 <device_for_action@plt>
  22da60:	tbnz	w0, #0, 22da88 <worker_lock_block_device+0x5c>
  22da64:	ldr	x0, [x29, #24]
  22da68:	sub	x1, x29, #0x10
  22da6c:	bl	253bb0 <sd_device_get_subsystem@plt>
  22da70:	tbnz	w0, #31, 22da90 <worker_lock_block_device+0x64>
  22da74:	ldur	x0, [x29, #-16]
  22da78:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  22da7c:	add	x1, x1, #0x64e
  22da80:	bl	253bc0 <strcmp@plt>
  22da84:	cbz	w0, 22db1c <worker_lock_block_device+0xf0>
  22da88:	mov	w19, wzr
  22da8c:	b	22dafc <worker_lock_block_device+0xd0>
  22da90:	ldr	x19, [x29, #24]
  22da94:	mov	w20, w0
  22da98:	stur	xzr, [x29, #-24]
  22da9c:	cbz	x19, 22dab0 <worker_lock_block_device+0x84>
  22daa0:	mov	w0, #0x1                   	// #1
  22daa4:	bl	2535b0 <log_get_max_level_realm@plt>
  22daa8:	cmp	w0, #0x7
  22daac:	b.ge	22de4c <worker_lock_block_device+0x420>  // b.tcont
  22dab0:	ldur	x6, [x29, #-24]
  22dab4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22dab8:	add	x8, x8, #0xb64
  22dabc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22dac0:	cmp	x6, #0x0
  22dac4:	csel	x5, xzr, x8, eq  // eq = none
  22dac8:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  22dacc:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22dad0:	add	x8, x8, #0xb55
  22dad4:	add	x2, x2, #0x55b
  22dad8:	add	x4, x4, #0x611
  22dadc:	mov	w0, #0x7                   	// #7
  22dae0:	mov	w3, #0x158                 	// #344
  22dae4:	str	x8, [sp, #8]
  22dae8:	mov	w1, w20
  22daec:	str	xzr, [sp]
  22daf0:	mov	x7, xzr
  22daf4:	bl	2539f0 <log_object_internal@plt>
  22daf8:	mov	w19, w0
  22dafc:	sub	x0, x29, #0x4
  22db00:	bl	22da14 <closep>
  22db04:	mov	w0, w19
  22db08:	ldp	x20, x19, [sp, #128]
  22db0c:	ldr	x21, [sp, #112]
  22db10:	ldp	x29, x30, [sp, #96]
  22db14:	add	sp, sp, #0x90
  22db18:	ret
  22db1c:	ldr	x0, [x29, #24]
  22db20:	sub	x1, x29, #0x10
  22db24:	bl	253a40 <sd_device_get_sysname@plt>
  22db28:	tbnz	w0, #31, 22dbe0 <worker_lock_block_device+0x1b4>
  22db2c:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  22db30:	add	x8, x8, #0x510
  22db34:	ldp	q0, q1, [x8]
  22db38:	ldur	x20, [x29, #-16]
  22db3c:	stp	q0, q1, [sp, #32]
  22db40:	ldr	x1, [sp, #32]
  22db44:	cbz	x1, 22db64 <worker_lock_block_device+0x138>
  22db48:	add	x8, sp, #0x20
  22db4c:	orr	x21, x8, #0x8
  22db50:	mov	x0, x20
  22db54:	bl	22acf0 <startswith>
  22db58:	cbnz	x0, 22db68 <worker_lock_block_device+0x13c>
  22db5c:	ldr	x1, [x21], #8
  22db60:	cbnz	x1, 22db50 <worker_lock_block_device+0x124>
  22db64:	mov	x0, xzr
  22db68:	cbnz	x0, 22da88 <worker_lock_block_device+0x5c>
  22db6c:	ldr	x0, [x29, #24]
  22db70:	sub	x1, x29, #0x10
  22db74:	bl	253d50 <sd_device_get_devtype@plt>
  22db78:	mov	w20, w0
  22db7c:	tbz	w0, #31, 22dc3c <worker_lock_block_device+0x210>
  22db80:	cmn	w20, #0x2
  22db84:	b.eq	22dc3c <worker_lock_block_device+0x210>  // b.none
  22db88:	ldr	x19, [x29, #24]
  22db8c:	stur	xzr, [x29, #-24]
  22db90:	cbz	x19, 22dba4 <worker_lock_block_device+0x178>
  22db94:	mov	w0, #0x1                   	// #1
  22db98:	bl	2535b0 <log_get_max_level_realm@plt>
  22db9c:	cmp	w0, #0x7
  22dba0:	b.ge	22de6c <worker_lock_block_device+0x440>  // b.tcont
  22dba4:	ldur	x6, [x29, #-24]
  22dba8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22dbac:	add	x8, x8, #0xb64
  22dbb0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22dbb4:	cmp	x6, #0x0
  22dbb8:	csel	x5, xzr, x8, eq  // eq = none
  22dbbc:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  22dbc0:	add	x8, x8, #0x4fc
  22dbc4:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22dbc8:	add	x2, x2, #0x55b
  22dbcc:	add	x4, x4, #0x611
  22dbd0:	str	x8, [sp, #8]
  22dbd4:	mov	w0, #0x7                   	// #7
  22dbd8:	mov	w3, #0x166                 	// #358
  22dbdc:	b	22dae8 <worker_lock_block_device+0xbc>
  22dbe0:	ldr	x19, [x29, #24]
  22dbe4:	mov	w20, w0
  22dbe8:	stur	xzr, [x29, #-24]
  22dbec:	cbz	x19, 22dc00 <worker_lock_block_device+0x1d4>
  22dbf0:	mov	w0, #0x1                   	// #1
  22dbf4:	bl	2535b0 <log_get_max_level_realm@plt>
  22dbf8:	cmp	w0, #0x7
  22dbfc:	b.ge	22de5c <worker_lock_block_device+0x430>  // b.tcont
  22dc00:	ldur	x6, [x29, #-24]
  22dc04:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22dc08:	add	x8, x8, #0xb64
  22dc0c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22dc10:	cmp	x6, #0x0
  22dc14:	csel	x5, xzr, x8, eq  // eq = none
  22dc18:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  22dc1c:	add	x8, x8, #0x37b
  22dc20:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22dc24:	add	x2, x2, #0x55b
  22dc28:	add	x4, x4, #0x611
  22dc2c:	str	x8, [sp, #8]
  22dc30:	mov	w0, #0x7                   	// #7
  22dc34:	mov	w3, #0x15f                 	// #351
  22dc38:	b	22dae8 <worker_lock_block_device+0xbc>
  22dc3c:	tbnz	w20, #31, 22dc64 <worker_lock_block_device+0x238>
  22dc40:	ldur	x0, [x29, #-16]
  22dc44:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  22dc48:	add	x1, x1, #0xfbf
  22dc4c:	bl	253bc0 <strcmp@plt>
  22dc50:	cbnz	w0, 22dc64 <worker_lock_block_device+0x238>
  22dc54:	ldr	x0, [x29, #24]
  22dc58:	add	x1, x29, #0x18
  22dc5c:	bl	253d60 <sd_device_get_parent@plt>
  22dc60:	tbnz	w0, #31, 22dd88 <worker_lock_block_device+0x35c>
  22dc64:	ldr	x0, [x29, #24]
  22dc68:	sub	x1, x29, #0x10
  22dc6c:	bl	253ad0 <sd_device_get_devname@plt>
  22dc70:	cmn	w0, #0x2
  22dc74:	b.eq	22da88 <worker_lock_block_device+0x5c>  // b.none
  22dc78:	mov	w20, w0
  22dc7c:	tbnz	w0, #31, 22dcbc <worker_lock_block_device+0x290>
  22dc80:	ldur	x0, [x29, #-16]
  22dc84:	mov	w1, #0x8800                	// #34816
  22dc88:	movk	w1, #0x8, lsl #16
  22dc8c:	bl	253d70 <open64@plt>
  22dc90:	stur	w0, [x29, #-4]
  22dc94:	tbnz	w0, #31, 22dd14 <worker_lock_block_device+0x2e8>
  22dc98:	mov	w1, #0x5                   	// #5
  22dc9c:	mov	w20, w0
  22dca0:	bl	253d80 <flock@plt>
  22dca4:	tbnz	w0, #31, 22dde4 <worker_lock_block_device+0x3b8>
  22dca8:	mov	w8, #0xffffffff            	// #-1
  22dcac:	stur	w8, [x29, #-4]
  22dcb0:	str	w20, [x19]
  22dcb4:	mov	w19, #0x1                   	// #1
  22dcb8:	b	22dafc <worker_lock_block_device+0xd0>
  22dcbc:	ldr	x19, [x29, #24]
  22dcc0:	stur	xzr, [x29, #-24]
  22dcc4:	cbz	x19, 22dcd8 <worker_lock_block_device+0x2ac>
  22dcc8:	mov	w0, #0x1                   	// #1
  22dccc:	bl	2535b0 <log_get_max_level_realm@plt>
  22dcd0:	cmp	w0, #0x7
  22dcd4:	b.ge	22de7c <worker_lock_block_device+0x450>  // b.tcont
  22dcd8:	ldur	x6, [x29, #-24]
  22dcdc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22dce0:	add	x8, x8, #0xb64
  22dce4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22dce8:	cmp	x6, #0x0
  22dcec:	csel	x5, xzr, x8, eq  // eq = none
  22dcf0:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  22dcf4:	add	x8, x8, #0x3ab
  22dcf8:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22dcfc:	add	x2, x2, #0x55b
  22dd00:	add	x4, x4, #0x611
  22dd04:	str	x8, [sp, #8]
  22dd08:	mov	w0, #0x7                   	// #7
  22dd0c:	mov	w3, #0x171                 	// #369
  22dd10:	b	22dae8 <worker_lock_block_device+0xbc>
  22dd14:	ldr	x20, [x29, #24]
  22dd18:	stur	xzr, [x29, #-24]
  22dd1c:	bl	253660 <__errno_location@plt>
  22dd20:	ldr	w19, [x0]
  22dd24:	cbz	x20, 22dd38 <worker_lock_block_device+0x30c>
  22dd28:	mov	w0, #0x1                   	// #1
  22dd2c:	bl	2535b0 <log_get_max_level_realm@plt>
  22dd30:	cmp	w0, #0x7
  22dd34:	b.ge	22de8c <worker_lock_block_device+0x460>  // b.tcont
  22dd38:	ldp	x6, x8, [x29, #-24]
  22dd3c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  22dd40:	add	x9, x9, #0xb64
  22dd44:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22dd48:	cmp	x6, #0x0
  22dd4c:	str	x8, [sp, #16]
  22dd50:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  22dd54:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22dd58:	csel	x5, xzr, x9, eq  // eq = none
  22dd5c:	add	x8, x8, #0x7ef
  22dd60:	add	x2, x2, #0x55b
  22dd64:	add	x4, x4, #0x611
  22dd68:	mov	w0, #0x7                   	// #7
  22dd6c:	mov	w3, #0x175                 	// #373
  22dd70:	mov	w1, w19
  22dd74:	mov	x7, xzr
  22dd78:	stp	xzr, x8, [sp]
  22dd7c:	bl	2539f0 <log_object_internal@plt>
  22dd80:	mov	w19, wzr
  22dd84:	b	22dafc <worker_lock_block_device+0xd0>
  22dd88:	ldr	x19, [x29, #24]
  22dd8c:	mov	w20, w0
  22dd90:	stur	xzr, [x29, #-24]
  22dd94:	cbz	x19, 22dda8 <worker_lock_block_device+0x37c>
  22dd98:	mov	w0, #0x1                   	// #1
  22dd9c:	bl	2535b0 <log_get_max_level_realm@plt>
  22dda0:	cmp	w0, #0x7
  22dda4:	b.ge	22de9c <worker_lock_block_device+0x470>  // b.tcont
  22dda8:	ldur	x6, [x29, #-24]
  22ddac:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22ddb0:	add	x8, x8, #0xb64
  22ddb4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22ddb8:	cmp	x6, #0x0
  22ddbc:	csel	x5, xzr, x8, eq  // eq = none
  22ddc0:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  22ddc4:	add	x8, x8, #0xb71
  22ddc8:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22ddcc:	add	x2, x2, #0x55b
  22ddd0:	add	x4, x4, #0x611
  22ddd4:	str	x8, [sp, #8]
  22ddd8:	mov	w0, #0x7                   	// #7
  22dddc:	mov	w3, #0x16a                 	// #362
  22dde0:	b	22dae8 <worker_lock_block_device+0xbc>
  22dde4:	ldr	x20, [x29, #24]
  22dde8:	stur	xzr, [x29, #-24]
  22ddec:	bl	253660 <__errno_location@plt>
  22ddf0:	ldr	w19, [x0]
  22ddf4:	cbz	x20, 22de08 <worker_lock_block_device+0x3dc>
  22ddf8:	mov	w0, #0x1                   	// #1
  22ddfc:	bl	2535b0 <log_get_max_level_realm@plt>
  22de00:	cmp	w0, #0x7
  22de04:	b.ge	22deac <worker_lock_block_device+0x480>  // b.tcont
  22de08:	ldp	x6, x8, [x29, #-24]
  22de0c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  22de10:	add	x9, x9, #0xb64
  22de14:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22de18:	str	x8, [sp, #16]
  22de1c:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  22de20:	cmp	x6, #0x0
  22de24:	add	x8, x8, #0x395
  22de28:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22de2c:	csel	x5, xzr, x9, eq  // eq = none
  22de30:	add	x2, x2, #0x55b
  22de34:	add	x4, x4, #0x611
  22de38:	stp	xzr, x8, [sp]
  22de3c:	mov	w0, #0x7                   	// #7
  22de40:	mov	w3, #0x17a                 	// #378
  22de44:	mov	w1, w19
  22de48:	b	22daf0 <worker_lock_block_device+0xc4>
  22de4c:	sub	x1, x29, #0x18
  22de50:	mov	x0, x19
  22de54:	bl	253a40 <sd_device_get_sysname@plt>
  22de58:	b	22dab0 <worker_lock_block_device+0x84>
  22de5c:	sub	x1, x29, #0x18
  22de60:	mov	x0, x19
  22de64:	bl	253a40 <sd_device_get_sysname@plt>
  22de68:	b	22dc00 <worker_lock_block_device+0x1d4>
  22de6c:	sub	x1, x29, #0x18
  22de70:	mov	x0, x19
  22de74:	bl	253a40 <sd_device_get_sysname@plt>
  22de78:	b	22dba4 <worker_lock_block_device+0x178>
  22de7c:	sub	x1, x29, #0x18
  22de80:	mov	x0, x19
  22de84:	bl	253a40 <sd_device_get_sysname@plt>
  22de88:	b	22dcd8 <worker_lock_block_device+0x2ac>
  22de8c:	sub	x1, x29, #0x18
  22de90:	mov	x0, x20
  22de94:	bl	253a40 <sd_device_get_sysname@plt>
  22de98:	b	22dd38 <worker_lock_block_device+0x30c>
  22de9c:	sub	x1, x29, #0x18
  22dea0:	mov	x0, x19
  22dea4:	bl	253a40 <sd_device_get_sysname@plt>
  22dea8:	b	22dda8 <worker_lock_block_device+0x37c>
  22deac:	sub	x1, x29, #0x18
  22deb0:	mov	x0, x20
  22deb4:	bl	253a40 <sd_device_get_sysname@plt>
  22deb8:	b	22de08 <worker_lock_block_device+0x3dc>
  22debc:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  22dec0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22dec4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22dec8:	add	x1, x1, #0x9e6
  22decc:	add	x2, x2, #0x55b
  22ded0:	add	x4, x4, #0x8f4
  22ded4:	mov	w0, #0x1                   	// #1
  22ded8:	mov	w3, #0x147                 	// #327
  22dedc:	bl	253740 <log_assert_failed_realm@plt>
  22dee0:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  22dee4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22dee8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22deec:	add	x1, x1, #0x654
  22def0:	add	x2, x2, #0x55b
  22def4:	add	x4, x4, #0x8f4
  22def8:	mov	w0, #0x1                   	// #1
  22defc:	mov	w3, #0x148                 	// #328
  22df00:	bl	253740 <log_assert_failed_realm@plt>

000000000022df04 <worker_freep>:
  22df04:	stp	x29, x30, [sp, #-16]!
  22df08:	ldr	x0, [x0]
  22df0c:	mov	x29, sp
  22df10:	cbz	x0, 22df18 <worker_freep+0x14>
  22df14:	bl	22c154 <worker_free>
  22df18:	ldp	x29, x30, [sp], #16
  22df1c:	ret

000000000022df20 <__unique_prefix_static_free_wrapper4>:
  22df20:	stp	x29, x30, [sp, #-16]!
  22df24:	mov	x29, sp
  22df28:	bl	22c154 <worker_free>
  22df2c:	ldp	x29, x30, [sp], #16
  22df30:	ret

000000000022df34 <isempty>:
  22df34:	cbz	x0, 22df48 <isempty+0x14>
  22df38:	ldrb	w8, [x0]
  22df3c:	cmp	w8, #0x0
  22df40:	cset	w0, eq  // eq = none
  22df44:	ret
  22df48:	mov	w0, #0x1                   	// #1
  22df4c:	ret

000000000022df50 <synthesize_change>:
  22df50:	sub	sp, sp, #0x80
  22df54:	stp	x29, x30, [sp, #80]
  22df58:	add	x29, sp, #0x50
  22df5c:	sub	x1, x29, #0x8
  22df60:	stp	x22, x21, [sp, #96]
  22df64:	stp	x20, x19, [sp, #112]
  22df68:	mov	x19, x0
  22df6c:	bl	253bb0 <sd_device_get_subsystem@plt>
  22df70:	tbnz	w0, #31, 22dffc <synthesize_change+0xac>
  22df74:	sub	x1, x29, #0x10
  22df78:	mov	x0, x19
  22df7c:	bl	253a40 <sd_device_get_sysname@plt>
  22df80:	tbnz	w0, #31, 22dffc <synthesize_change+0xac>
  22df84:	sub	x1, x29, #0x18
  22df88:	mov	x0, x19
  22df8c:	bl	253ad0 <sd_device_get_devname@plt>
  22df90:	tbnz	w0, #31, 22dffc <synthesize_change+0xac>
  22df94:	sub	x1, x29, #0x20
  22df98:	mov	x0, x19
  22df9c:	bl	253d90 <sd_device_get_syspath@plt>
  22dfa0:	tbnz	w0, #31, 22dffc <synthesize_change+0xac>
  22dfa4:	add	x1, sp, #0x28
  22dfa8:	mov	x0, x19
  22dfac:	bl	253d50 <sd_device_get_devtype@plt>
  22dfb0:	tbnz	w0, #31, 22dffc <synthesize_change+0xac>
  22dfb4:	ldur	x1, [x29, #-8]
  22dfb8:	adrp	x0, 216000 <worker_hash_op+0xbad0>
  22dfbc:	add	x0, x0, #0x64e
  22dfc0:	bl	22e194 <streq_ptr>
  22dfc4:	tbz	w0, #0, 22dff0 <synthesize_change+0xa0>
  22dfc8:	ldr	x1, [sp, #40]
  22dfcc:	adrp	x0, 218000 <worker_hash_op+0xdad0>
  22dfd0:	add	x0, x0, #0x2e5
  22dfd4:	bl	22e194 <streq_ptr>
  22dfd8:	tbz	w0, #0, 22dff0 <synthesize_change+0xa0>
  22dfdc:	ldur	x0, [x29, #-16]
  22dfe0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  22dfe4:	add	x1, x1, #0x4f8
  22dfe8:	bl	22acf0 <startswith>
  22dfec:	cbz	x0, 22e010 <synthesize_change+0xc0>
  22dff0:	ldur	x1, [x29, #-32]
  22dff4:	mov	x0, x19
  22dff8:	bl	22e1cc <synthesize_change_one>
  22dffc:	ldp	x20, x19, [sp, #112]
  22e000:	ldp	x22, x21, [sp, #96]
  22e004:	ldp	x29, x30, [sp, #80]
  22e008:	add	sp, sp, #0x80
  22e00c:	ret
  22e010:	ldur	x0, [x29, #-24]
  22e014:	mov	w1, #0x8800                	// #34816
  22e018:	movk	w1, #0x8, lsl #16
  22e01c:	str	xzr, [sp, #32]
  22e020:	bl	253d70 <open64@plt>
  22e024:	tbnz	w0, #31, 22e05c <synthesize_change+0x10c>
  22e028:	mov	w1, #0x6                   	// #6
  22e02c:	mov	w20, w0
  22e030:	bl	253d80 <flock@plt>
  22e034:	tbnz	w0, #31, 22e048 <synthesize_change+0xf8>
  22e038:	mov	w1, #0x125f                	// #4703
  22e03c:	mov	w0, w20
  22e040:	mov	w2, wzr
  22e044:	bl	253da0 <ioctl@plt>
  22e048:	mov	w21, w0
  22e04c:	mov	w0, w20
  22e050:	bl	253db0 <close@plt>
  22e054:	lsr	w21, w21, #31
  22e058:	b	22e060 <synthesize_change+0x110>
  22e05c:	mov	w21, #0x1                   	// #1
  22e060:	add	x0, sp, #0x20
  22e064:	bl	253dc0 <sd_device_enumerator_new@plt>
  22e068:	tbnz	w0, #31, 22e188 <synthesize_change+0x238>
  22e06c:	ldr	x0, [sp, #32]
  22e070:	bl	253dd0 <sd_device_enumerator_allow_uninitialized@plt>
  22e074:	tbnz	w0, #31, 22e188 <synthesize_change+0x238>
  22e078:	ldr	x0, [sp, #32]
  22e07c:	mov	x1, x19
  22e080:	bl	253de0 <sd_device_enumerator_add_match_parent@plt>
  22e084:	tbnz	w0, #31, 22e188 <synthesize_change+0x238>
  22e088:	ldr	x0, [sp, #32]
  22e08c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  22e090:	add	x1, x1, #0x64e
  22e094:	mov	w2, #0x1                   	// #1
  22e098:	bl	253df0 <sd_device_enumerator_add_match_subsystem@plt>
  22e09c:	tbnz	w0, #31, 22e188 <synthesize_change+0x238>
  22e0a0:	ldr	x0, [sp, #32]
  22e0a4:	bl	253e00 <sd_device_enumerator_get_device_first@plt>
  22e0a8:	mov	w22, wzr
  22e0ac:	cbz	x0, 22e0f8 <synthesize_change+0x1a8>
  22e0b0:	adrp	x20, 215000 <worker_hash_op+0xaad0>
  22e0b4:	add	x20, x20, #0xfbf
  22e0b8:	add	x1, sp, #0x18
  22e0bc:	bl	253d50 <sd_device_get_devtype@plt>
  22e0c0:	tbnz	w0, #31, 22e0e4 <synthesize_change+0x194>
  22e0c4:	ldr	x1, [sp, #24]
  22e0c8:	mov	x0, x20
  22e0cc:	bl	253bc0 <strcmp@plt>
  22e0d0:	cmp	w0, #0x0
  22e0d4:	cset	w9, eq  // eq = none
  22e0d8:	cset	w8, ne  // ne = any
  22e0dc:	orr	w22, w22, w9
  22e0e0:	b	22e0e8 <synthesize_change+0x198>
  22e0e4:	mov	w8, #0x1                   	// #1
  22e0e8:	cbz	w8, 22e0f8 <synthesize_change+0x1a8>
  22e0ec:	ldr	x0, [sp, #32]
  22e0f0:	bl	253e10 <sd_device_enumerator_get_device_next@plt>
  22e0f4:	cbnz	x0, 22e0b8 <synthesize_change+0x168>
  22e0f8:	orn	w8, w21, w22
  22e0fc:	tbz	w8, #0, 22e188 <synthesize_change+0x238>
  22e100:	ldur	x1, [x29, #-32]
  22e104:	mov	x0, x19
  22e108:	bl	22e1cc <synthesize_change_one>
  22e10c:	ldr	x0, [sp, #32]
  22e110:	bl	253e00 <sd_device_enumerator_get_device_first@plt>
  22e114:	cbz	x0, 22e188 <synthesize_change+0x238>
  22e118:	adrp	x20, 215000 <worker_hash_op+0xaad0>
  22e11c:	mov	x21, x0
  22e120:	add	x20, x20, #0xfbf
  22e124:	b	22e138 <synthesize_change+0x1e8>
  22e128:	ldr	x0, [sp, #32]
  22e12c:	bl	253e10 <sd_device_enumerator_get_device_next@plt>
  22e130:	mov	x21, x0
  22e134:	cbz	x0, 22e188 <synthesize_change+0x238>
  22e138:	add	x1, sp, #0x18
  22e13c:	mov	x0, x21
  22e140:	bl	253d50 <sd_device_get_devtype@plt>
  22e144:	tbnz	w0, #31, 22e128 <synthesize_change+0x1d8>
  22e148:	ldr	x1, [sp, #24]
  22e14c:	mov	x0, x20
  22e150:	bl	253bc0 <strcmp@plt>
  22e154:	cbnz	w0, 22e128 <synthesize_change+0x1d8>
  22e158:	add	x1, sp, #0x10
  22e15c:	mov	x0, x21
  22e160:	bl	253ad0 <sd_device_get_devname@plt>
  22e164:	tbnz	w0, #31, 22e128 <synthesize_change+0x1d8>
  22e168:	add	x1, sp, #0x8
  22e16c:	mov	x0, x21
  22e170:	bl	253d90 <sd_device_get_syspath@plt>
  22e174:	tbnz	w0, #31, 22e128 <synthesize_change+0x1d8>
  22e178:	ldr	x1, [sp, #8]
  22e17c:	mov	x0, x19
  22e180:	bl	22e1cc <synthesize_change_one>
  22e184:	b	22e128 <synthesize_change+0x1d8>
  22e188:	add	x0, sp, #0x20
  22e18c:	bl	22e1b0 <sd_device_enumerator_unrefp>
  22e190:	b	22dffc <synthesize_change+0xac>

000000000022e194 <streq_ptr>:
  22e194:	stp	x29, x30, [sp, #-16]!
  22e198:	mov	x29, sp
  22e19c:	bl	253e20 <strcmp_ptr@plt>
  22e1a0:	cmp	w0, #0x0
  22e1a4:	cset	w0, eq  // eq = none
  22e1a8:	ldp	x29, x30, [sp], #16
  22e1ac:	ret

000000000022e1b0 <sd_device_enumerator_unrefp>:
  22e1b0:	stp	x29, x30, [sp, #-16]!
  22e1b4:	ldr	x0, [x0]
  22e1b8:	mov	x29, sp
  22e1bc:	cbz	x0, 22e1c4 <sd_device_enumerator_unrefp+0x14>
  22e1c0:	bl	253e30 <sd_device_enumerator_unref@plt>
  22e1c4:	ldp	x29, x30, [sp], #16
  22e1c8:	ret

000000000022e1cc <synthesize_change_one>:
  22e1cc:	stp	x29, x30, [sp, #-64]!
  22e1d0:	str	x23, [sp, #16]
  22e1d4:	stp	x22, x21, [sp, #32]
  22e1d8:	stp	x20, x19, [sp, #48]
  22e1dc:	mov	x29, sp
  22e1e0:	sub	sp, sp, #0x10
  22e1e4:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  22e1e8:	mov	x20, x1
  22e1ec:	mov	x19, x0
  22e1f0:	mov	x22, xzr
  22e1f4:	mov	x21, xzr
  22e1f8:	add	x8, x8, #0x65b
  22e1fc:	sub	x23, x29, #0x10
  22e200:	stp	x1, x8, [x29, #-16]
  22e204:	ldr	x0, [x23, x22]
  22e208:	cbz	x0, 22e220 <synthesize_change_one+0x54>
  22e20c:	bl	2539a0 <strlen@plt>
  22e210:	add	x22, x22, #0x8
  22e214:	cmp	x22, #0x10
  22e218:	add	x21, x0, x21
  22e21c:	b.ne	22e204 <synthesize_change_one+0x38>  // b.any
  22e220:	add	x21, x21, #0x1
  22e224:	mov	w0, #0x1                   	// #1
  22e228:	mov	x1, x21
  22e22c:	bl	22ad7c <size_multiply_overflow>
  22e230:	tbnz	w0, #0, 22e388 <synthesize_change_one+0x1bc>
  22e234:	cmp	x21, #0x400, lsl #12
  22e238:	b.hi	22e394 <synthesize_change_one+0x1c8>  // b.pmore
  22e23c:	add	x9, x21, #0xf
  22e240:	mov	x8, sp
  22e244:	and	x9, x9, #0xfffffffffffffff0
  22e248:	sub	x21, x8, x9
  22e24c:	mov	sp, x21
  22e250:	mov	x22, xzr
  22e254:	sub	x23, x29, #0x10
  22e258:	mov	x0, x21
  22e25c:	ldr	x1, [x23, x22]
  22e260:	cbz	x1, 22e274 <synthesize_change_one+0xa8>
  22e264:	bl	253e40 <stpcpy@plt>
  22e268:	add	x22, x22, #0x8
  22e26c:	cmp	x22, #0x10
  22e270:	b.ne	22e25c <synthesize_change_one+0x90>  // b.any
  22e274:	strb	wzr, [x0]
  22e278:	stur	xzr, [x29, #-16]
  22e27c:	cbz	x19, 22e290 <synthesize_change_one+0xc4>
  22e280:	mov	w0, #0x1                   	// #1
  22e284:	bl	2535b0 <log_get_max_level_realm@plt>
  22e288:	cmp	w0, #0x7
  22e28c:	b.ge	22e368 <synthesize_change_one+0x19c>  // b.tcont
  22e290:	ldur	x6, [x29, #-16]
  22e294:	adrp	x22, 211000 <worker_hash_op+0x6ad0>
  22e298:	add	x22, x22, #0xb64
  22e29c:	cmp	x6, #0x0
  22e2a0:	csel	x5, xzr, x22, eq  // eq = none
  22e2a4:	sub	sp, sp, #0x20
  22e2a8:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  22e2ac:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e2b0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22e2b4:	add	x8, x8, #0x1f
  22e2b8:	add	x2, x2, #0x55b
  22e2bc:	add	x4, x4, #0x19
  22e2c0:	mov	w0, #0x7                   	// #7
  22e2c4:	mov	w3, #0x443                 	// #1091
  22e2c8:	mov	w1, wzr
  22e2cc:	mov	x7, xzr
  22e2d0:	stp	x8, x20, [sp, #8]
  22e2d4:	str	xzr, [sp]
  22e2d8:	bl	2539f0 <log_object_internal@plt>
  22e2dc:	add	sp, sp, #0x20
  22e2e0:	mov	x0, x21
  22e2e4:	bl	22e3b8 <write_string_file>
  22e2e8:	tbz	w0, #31, 22e350 <synthesize_change_one+0x184>
  22e2ec:	mov	w20, w0
  22e2f0:	stur	xzr, [x29, #-16]
  22e2f4:	cbz	x19, 22e308 <synthesize_change_one+0x13c>
  22e2f8:	mov	w0, #0x1                   	// #1
  22e2fc:	bl	2535b0 <log_get_max_level_realm@plt>
  22e300:	cmp	w0, #0x7
  22e304:	b.ge	22e378 <synthesize_change_one+0x1ac>  // b.tcont
  22e308:	ldur	x6, [x29, #-16]
  22e30c:	cmp	x6, #0x0
  22e310:	csel	x5, xzr, x22, eq  // eq = none
  22e314:	sub	sp, sp, #0x20
  22e318:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  22e31c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e320:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22e324:	add	x8, x8, #0xc2c
  22e328:	add	x2, x2, #0x55b
  22e32c:	add	x4, x4, #0x19
  22e330:	mov	w0, #0x7                   	// #7
  22e334:	mov	w3, #0x446                 	// #1094
  22e338:	mov	w1, w20
  22e33c:	mov	x7, xzr
  22e340:	stp	x8, x21, [sp, #8]
  22e344:	str	xzr, [sp]
  22e348:	bl	2539f0 <log_object_internal@plt>
  22e34c:	add	sp, sp, #0x20
  22e350:	mov	sp, x29
  22e354:	ldp	x20, x19, [sp, #48]
  22e358:	ldp	x22, x21, [sp, #32]
  22e35c:	ldr	x23, [sp, #16]
  22e360:	ldp	x29, x30, [sp], #64
  22e364:	ret
  22e368:	sub	x1, x29, #0x10
  22e36c:	mov	x0, x19
  22e370:	bl	253a40 <sd_device_get_sysname@plt>
  22e374:	b	22e290 <synthesize_change_one+0xc4>
  22e378:	sub	x1, x29, #0x10
  22e37c:	mov	x0, x19
  22e380:	bl	253a40 <sd_device_get_sysname@plt>
  22e384:	b	22e308 <synthesize_change_one+0x13c>
  22e388:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  22e38c:	add	x1, x1, #0x498
  22e390:	b	22e39c <synthesize_change_one+0x1d0>
  22e394:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22e398:	add	x1, x1, #0x166
  22e39c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e3a0:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22e3a4:	add	x2, x2, #0x55b
  22e3a8:	add	x4, x4, #0xcb1
  22e3ac:	mov	w0, #0x1                   	// #1
  22e3b0:	mov	w3, #0x442                 	// #1090
  22e3b4:	bl	253740 <log_assert_failed_realm@plt>

000000000022e3b8 <write_string_file>:
  22e3b8:	stp	x29, x30, [sp, #-16]!
  22e3bc:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  22e3c0:	add	x1, x1, #0xb97
  22e3c4:	mov	w2, #0x20                  	// #32
  22e3c8:	mov	x3, xzr
  22e3cc:	mov	x29, sp
  22e3d0:	bl	253e50 <write_string_file_ts@plt>
  22e3d4:	ldp	x29, x30, [sp], #16
  22e3d8:	ret

000000000022e3dc <event_queue_insert>:
  22e3dc:	sub	sp, sp, #0x70
  22e3e0:	stp	x29, x30, [sp, #64]
  22e3e4:	add	x29, sp, #0x40
  22e3e8:	stp	x22, x21, [sp, #80]
  22e3ec:	stp	x20, x19, [sp, #96]
  22e3f0:	stur	xzr, [x29, #-8]
  22e3f4:	cbz	x0, 22e5f0 <event_queue_insert+0x214>
  22e3f8:	mov	x19, x1
  22e3fc:	cbz	x1, 22e614 <event_queue_insert+0x238>
  22e400:	ldr	w21, [x0, #32]
  22e404:	mov	x20, x0
  22e408:	bl	2537e0 <getpid_cached@plt>
  22e40c:	cmp	w21, w0
  22e410:	b.ne	22e638 <event_queue_insert+0x25c>  // b.any
  22e414:	sub	x1, x29, #0x18
  22e418:	mov	x0, x19
  22e41c:	bl	253ce0 <device_get_seqnum@plt>
  22e420:	tbnz	w0, #31, 22e59c <event_queue_insert+0x1c0>
  22e424:	sub	x1, x29, #0xc
  22e428:	mov	x0, x19
  22e42c:	bl	253cf0 <device_get_action@plt>
  22e430:	tbnz	w0, #31, 22e59c <event_queue_insert+0x1c0>
  22e434:	sub	x1, x29, #0x8
  22e438:	mov	x0, x19
  22e43c:	bl	253e60 <device_shallow_clone@plt>
  22e440:	tbnz	w0, #31, 22e59c <event_queue_insert+0x1c0>
  22e444:	ldur	x0, [x29, #-8]
  22e448:	mov	x1, x19
  22e44c:	bl	253e70 <device_copy_properties@plt>
  22e450:	tbnz	w0, #31, 22e59c <event_queue_insert+0x1c0>
  22e454:	mov	w0, #0x58                  	// #88
  22e458:	bl	22ad40 <malloc_multiply>
  22e45c:	cbz	x0, 22e5c0 <event_queue_insert+0x1e4>
  22e460:	mov	x21, x0
  22e464:	mov	x0, x19
  22e468:	bl	253c50 <sd_device_ref@plt>
  22e46c:	ldur	x8, [x29, #-8]
  22e470:	ldur	x9, [x29, #-24]
  22e474:	mov	w10, #0x1                   	// #1
  22e478:	movi	v0.2d, #0x0
  22e47c:	stur	xzr, [x29, #-8]
  22e480:	stp	x20, xzr, [x21]
  22e484:	str	w10, [x21, #16]
  22e488:	stp	q0, q0, [x21, #48]
  22e48c:	stp	x0, x8, [x21, #24]
  22e490:	str	x9, [x21, #40]
  22e494:	str	xzr, [x21, #80]
  22e498:	ldr	x8, [x20, #16]!
  22e49c:	cbnz	x8, 22e4ec <event_queue_insert+0x110>
  22e4a0:	adrp	x0, 20e000 <worker_hash_op+0x3ad0>
  22e4a4:	add	x0, x0, #0x9f
  22e4a8:	bl	253e80 <touch@plt>
  22e4ac:	tbz	w0, #31, 22e4ec <event_queue_insert+0x110>
  22e4b0:	mov	w22, w0
  22e4b4:	mov	w0, #0x1                   	// #1
  22e4b8:	bl	2535b0 <log_get_max_level_realm@plt>
  22e4bc:	cmp	w0, #0x4
  22e4c0:	b.lt	22e4ec <event_queue_insert+0x110>  // b.tstop
  22e4c4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e4c8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22e4cc:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22e4d0:	add	x2, x2, #0x55b
  22e4d4:	add	x4, x4, #0x840
  22e4d8:	add	x5, x5, #0x965
  22e4dc:	mov	w0, #0x404                 	// #1028
  22e4e0:	mov	w3, #0x283                 	// #643
  22e4e4:	mov	w1, w22
  22e4e8:	bl	2535c0 <log_internal_realm@plt>
  22e4ec:	ldr	x9, [x20]
  22e4f0:	cbz	x9, 22e5c8 <event_queue_insert+0x1ec>
  22e4f4:	mov	x10, x9
  22e4f8:	mov	x8, x10
  22e4fc:	ldr	x10, [x10, #72]
  22e500:	cbnz	x10, 22e4f8 <event_queue_insert+0x11c>
  22e504:	cbz	x8, 22e5d0 <event_queue_insert+0x1f4>
  22e508:	mov	x20, x8
  22e50c:	ldr	x9, [x20, #72]!
  22e510:	str	x9, [x21, #72]
  22e514:	cbz	x9, 22e51c <event_queue_insert+0x140>
  22e518:	str	x21, [x9, #80]
  22e51c:	mov	w0, #0x1                   	// #1
  22e520:	str	x8, [x21, #80]
  22e524:	str	x21, [x20]
  22e528:	str	xzr, [sp, #32]
  22e52c:	bl	2535b0 <log_get_max_level_realm@plt>
  22e530:	cmp	w0, #0x7
  22e534:	b.ge	22e5e0 <event_queue_insert+0x204>  // b.tcont
  22e538:	ldr	x19, [sp, #32]
  22e53c:	ldur	w0, [x29, #-12]
  22e540:	ldur	x21, [x29, #-24]
  22e544:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  22e548:	add	x8, x8, #0xb64
  22e54c:	cmp	x19, #0x0
  22e550:	csel	x20, xzr, x8, eq  // eq = none
  22e554:	bl	253d00 <device_action_to_string@plt>
  22e558:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  22e55c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e560:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22e564:	stp	x21, x0, [sp, #16]
  22e568:	add	x8, x8, #0xa3a
  22e56c:	add	x2, x2, #0x55b
  22e570:	add	x4, x4, #0x840
  22e574:	mov	w0, #0x7                   	// #7
  22e578:	mov	w3, #0x289                 	// #649
  22e57c:	mov	w1, wzr
  22e580:	mov	x5, x20
  22e584:	mov	x6, x19
  22e588:	mov	x7, xzr
  22e58c:	stp	xzr, x8, [sp]
  22e590:	bl	2539f0 <log_object_internal@plt>
  22e594:	mov	w21, wzr
  22e598:	b	22e5a0 <event_queue_insert+0x1c4>
  22e59c:	mov	w21, w0
  22e5a0:	sub	x0, x29, #0x8
  22e5a4:	bl	22d424 <sd_device_unrefp>
  22e5a8:	mov	w0, w21
  22e5ac:	ldp	x20, x19, [sp, #96]
  22e5b0:	ldp	x22, x21, [sp, #80]
  22e5b4:	ldp	x29, x30, [sp, #64]
  22e5b8:	add	sp, sp, #0x70
  22e5bc:	ret
  22e5c0:	mov	w21, #0xfffffff4            	// #-12
  22e5c4:	b	22e5a0 <event_queue_insert+0x1c4>
  22e5c8:	mov	x8, xzr
  22e5cc:	cbnz	x8, 22e508 <event_queue_insert+0x12c>
  22e5d0:	mov	x8, xzr
  22e5d4:	str	x9, [x21, #72]
  22e5d8:	cbnz	x9, 22e518 <event_queue_insert+0x13c>
  22e5dc:	b	22e51c <event_queue_insert+0x140>
  22e5e0:	add	x1, sp, #0x20
  22e5e4:	mov	x0, x19
  22e5e8:	bl	253a40 <sd_device_get_sysname@plt>
  22e5ec:	b	22e538 <event_queue_insert+0x15c>
  22e5f0:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22e5f4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e5f8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22e5fc:	add	x1, x1, #0xffb
  22e600:	add	x2, x2, #0x55b
  22e604:	add	x4, x4, #0x811
  22e608:	mov	w0, #0x1                   	// #1
  22e60c:	mov	w3, #0x25b                 	// #603
  22e610:	bl	253740 <log_assert_failed_realm@plt>
  22e614:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  22e618:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e61c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22e620:	add	x1, x1, #0x9e6
  22e624:	add	x2, x2, #0x55b
  22e628:	add	x4, x4, #0x811
  22e62c:	mov	w0, #0x1                   	// #1
  22e630:	mov	w3, #0x25c                 	// #604
  22e634:	bl	253740 <log_assert_failed_realm@plt>
  22e638:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  22e63c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e640:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22e644:	add	x1, x1, #0x22a
  22e648:	add	x2, x2, #0x55b
  22e64c:	add	x4, x4, #0x811
  22e650:	mov	w0, #0x1                   	// #1
  22e654:	mov	w3, #0x25f                 	// #607
  22e658:	bl	253740 <log_assert_failed_realm@plt>

000000000022e65c <on_kill_workers_event>:
  22e65c:	stp	x29, x30, [sp, #-32]!
  22e660:	str	x19, [sp, #16]
  22e664:	mov	x29, sp
  22e668:	cbz	x2, 22e6c0 <on_kill_workers_event+0x64>
  22e66c:	mov	w0, #0x1                   	// #1
  22e670:	mov	x19, x2
  22e674:	bl	2535b0 <log_get_max_level_realm@plt>
  22e678:	cmp	w0, #0x7
  22e67c:	b.lt	22e6a8 <on_kill_workers_event+0x4c>  // b.tstop
  22e680:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e684:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22e688:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  22e68c:	add	x2, x2, #0x55b
  22e690:	add	x4, x4, #0x162
  22e694:	add	x5, x5, #0x960
  22e698:	mov	w0, #0x407                 	// #1031
  22e69c:	mov	w3, #0x336                 	// #822
  22e6a0:	mov	w1, wzr
  22e6a4:	bl	2535c0 <log_internal_realm@plt>
  22e6a8:	mov	x0, x19
  22e6ac:	bl	22bfec <manager_kill_workers>
  22e6b0:	ldr	x19, [sp, #16]
  22e6b4:	mov	w0, #0x1                   	// #1
  22e6b8:	ldp	x29, x30, [sp], #32
  22e6bc:	ret
  22e6c0:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22e6c4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22e6c8:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  22e6cc:	add	x1, x1, #0xffb
  22e6d0:	add	x2, x2, #0x55b
  22e6d4:	add	x4, x4, #0x185
  22e6d8:	mov	w0, #0x1                   	// #1
  22e6dc:	mov	w3, #0x334                 	// #820
  22e6e0:	bl	253740 <log_assert_failed_realm@plt>

000000000022e6e4 <ALIGN_TO>:
  22e6e4:	add	x8, x0, #0x7
  22e6e8:	and	x0, x8, #0xfffffffffffffff8
  22e6ec:	ret

000000000022e6f0 <udev_ctrl_new_from_fd>:
  22e6f0:	sub	sp, sp, #0xf0
  22e6f4:	stp	x29, x30, [sp, #192]
  22e6f8:	add	x29, sp, #0xc0
  22e6fc:	mov	w8, #0xffffffff            	// #-1
  22e700:	stp	x22, x21, [sp, #208]
  22e704:	stp	x20, x19, [sp, #224]
  22e708:	stur	w8, [x29, #-4]
  22e70c:	cbz	x0, 22e910 <udev_ctrl_new_from_fd+0x220>
  22e710:	mov	w21, w1
  22e714:	mov	x19, x0
  22e718:	tbz	w1, #31, 22e738 <udev_ctrl_new_from_fd+0x48>
  22e71c:	mov	w1, #0x805                 	// #2053
  22e720:	mov	w0, #0x1                   	// #1
  22e724:	movk	w1, #0x8, lsl #16
  22e728:	mov	w2, wzr
  22e72c:	bl	253eb0 <socket@plt>
  22e730:	stur	w0, [x29, #-4]
  22e734:	tbnz	w0, #31, 22e8b4 <udev_ctrl_new_from_fd+0x1c4>
  22e738:	bl	22e94c <malloc_multiply>
  22e73c:	cbz	x0, 22e870 <udev_ctrl_new_from_fd+0x180>
  22e740:	mov	x20, x0
  22e744:	movi	v0.2d, #0x0
  22e748:	mov	w0, w21
  22e74c:	str	xzr, [sp, #176]
  22e750:	stp	q0, q0, [sp, #144]
  22e754:	stp	q0, q0, [sp, #112]
  22e758:	stp	q0, q0, [sp, #80]
  22e75c:	stp	q0, q0, [sp, #48]
  22e760:	stp	q0, q0, [sp]
  22e764:	stur	q0, [sp, #27]
  22e768:	tbz	w21, #31, 22e778 <udev_ctrl_new_from_fd+0x88>
  22e76c:	ldur	w0, [x29, #-4]
  22e770:	mov	w8, #0xffffffff            	// #-1
  22e774:	stur	w8, [x29, #-4]
  22e778:	ldp	q0, q2, [sp, #48]
  22e77c:	ldp	q1, q3, [sp, #112]
  22e780:	mov	w9, #0xffffffff            	// #-1
  22e784:	stp	w0, w9, [x20, #4]
  22e788:	stur	q0, [x20, #12]
  22e78c:	stur	q1, [x20, #76]
  22e790:	ldp	q0, q1, [sp, #80]
  22e794:	ldr	x9, [sp, #176]
  22e798:	stur	q2, [x20, #28]
  22e79c:	mvn	w8, w21
  22e7a0:	stur	q1, [x20, #60]
  22e7a4:	stur	q0, [x20, #44]
  22e7a8:	ldp	q0, q1, [sp, #144]
  22e7ac:	mov	w22, #0x1                   	// #1
  22e7b0:	lsr	w8, w8, #31
  22e7b4:	str	w22, [x20]
  22e7b8:	stur	q1, [x20, #124]
  22e7bc:	ldp	q1, q2, [sp]
  22e7c0:	stur	q0, [x20, #108]
  22e7c4:	ldur	q0, [sp, #27]
  22e7c8:	strb	w8, [x20, #148]
  22e7cc:	stur	x9, [x20, #140]
  22e7d0:	stur	q3, [x20, #92]
  22e7d4:	str	q0, [x20, #176]
  22e7d8:	stur	q2, [x20, #165]
  22e7dc:	stur	q1, [x20, #149]
  22e7e0:	bl	22e964 <setsockopt_int>
  22e7e4:	tbz	w0, #31, 22e824 <udev_ctrl_new_from_fd+0x134>
  22e7e8:	mov	w21, w0
  22e7ec:	mov	w0, #0x1                   	// #1
  22e7f0:	bl	2535b0 <log_get_max_level_realm@plt>
  22e7f4:	cmp	w0, #0x4
  22e7f8:	b.lt	22e824 <udev_ctrl_new_from_fd+0x134>  // b.tstop
  22e7fc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22e800:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22e804:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22e808:	add	x2, x2, #0x706
  22e80c:	add	x4, x4, #0x40d
  22e810:	add	x5, x5, #0xeb0
  22e814:	mov	w0, #0x404                 	// #1028
  22e818:	mov	w3, #0x58                  	// #88
  22e81c:	mov	w1, w21
  22e820:	bl	2535c0 <log_internal_realm@plt>
  22e824:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  22e828:	add	x8, x8, #0x94c
  22e82c:	ldp	q0, q1, [x8]
  22e830:	ldp	q2, q3, [x8, #32]
  22e834:	strh	w22, [x20, #16]
  22e838:	stur	q0, [x20, #18]
  22e83c:	ldur	q0, [x8, #92]
  22e840:	stur	q2, [x20, #50]
  22e844:	stur	q1, [x20, #34]
  22e848:	ldp	q1, q2, [x8, #64]
  22e84c:	ldrb	w8, [x20, #18]
  22e850:	stur	q0, [x20, #110]
  22e854:	stur	q3, [x20, #66]
  22e858:	stur	q2, [x20, #98]
  22e85c:	stur	q1, [x20, #82]
  22e860:	cbz	w8, 22e878 <udev_ctrl_new_from_fd+0x188>
  22e864:	add	x0, x20, #0x12
  22e868:	mov	w1, #0x6c                  	// #108
  22e86c:	b	22e880 <udev_ctrl_new_from_fd+0x190>
  22e870:	mov	w21, #0xfffffff4            	// #-12
  22e874:	b	22e894 <udev_ctrl_new_from_fd+0x1a4>
  22e878:	add	x0, x20, #0x13
  22e87c:	mov	w1, #0x6b                  	// #107
  22e880:	bl	253ec0 <strnlen@plt>
  22e884:	mov	w21, wzr
  22e888:	add	w8, w0, #0x3
  22e88c:	str	w8, [x20, #144]
  22e890:	str	x20, [x19]
  22e894:	sub	x0, x29, #0x4
  22e898:	bl	22e934 <closep>
  22e89c:	mov	w0, w21
  22e8a0:	ldp	x20, x19, [sp, #224]
  22e8a4:	ldp	x22, x21, [sp, #208]
  22e8a8:	ldp	x29, x30, [sp, #192]
  22e8ac:	add	sp, sp, #0xf0
  22e8b0:	ret
  22e8b4:	bl	253660 <__errno_location@plt>
  22e8b8:	ldr	w19, [x0]
  22e8bc:	mov	w0, #0x1                   	// #1
  22e8c0:	bl	2535b0 <log_get_max_level_realm@plt>
  22e8c4:	cmp	w0, #0x3
  22e8c8:	b.lt	22e8fc <udev_ctrl_new_from_fd+0x20c>  // b.tstop
  22e8cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22e8d0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  22e8d4:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  22e8d8:	add	x2, x2, #0x706
  22e8dc:	add	x4, x4, #0x40d
  22e8e0:	add	x5, x5, #0xef1
  22e8e4:	mov	w0, #0x403                 	// #1027
  22e8e8:	mov	w3, #0x44                  	// #68
  22e8ec:	mov	w1, w19
  22e8f0:	bl	2535c0 <log_internal_realm@plt>
  22e8f4:	mov	w21, w0
  22e8f8:	b	22e894 <udev_ctrl_new_from_fd+0x1a4>
  22e8fc:	cmp	w19, #0x0
  22e900:	mov	w8, wzr
  22e904:	cneg	w9, w19, mi  // mi = first
  22e908:	sub	w21, w8, w9, uxtb
  22e90c:	b	22e894 <udev_ctrl_new_from_fd+0x1a4>
  22e910:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  22e914:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22e918:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22e91c:	add	x1, x1, #0xb2b
  22e920:	add	x2, x2, #0x706
  22e924:	add	x4, x4, #0x62a
  22e928:	mov	w0, #0x1                   	// #1
  22e92c:	mov	w3, #0x3f                  	// #63
  22e930:	bl	253740 <log_assert_failed_realm@plt>

000000000022e934 <closep>:
  22e934:	stp	x29, x30, [sp, #-16]!
  22e938:	ldr	w0, [x0]
  22e93c:	mov	x29, sp
  22e940:	bl	2538f0 <safe_close@plt>
  22e944:	ldp	x29, x30, [sp], #16
  22e948:	ret

000000000022e94c <malloc_multiply>:
  22e94c:	stp	x29, x30, [sp, #-16]!
  22e950:	mov	w0, #0xc0                  	// #192
  22e954:	mov	x29, sp
  22e958:	bl	2539c0 <malloc@plt>
  22e95c:	ldp	x29, x30, [sp], #16
  22e960:	ret

000000000022e964 <setsockopt_int>:
  22e964:	sub	sp, sp, #0x20
  22e968:	stp	x29, x30, [sp, #16]
  22e96c:	add	x29, sp, #0x10
  22e970:	mov	w8, #0x1                   	// #1
  22e974:	sub	x3, x29, #0x4
  22e978:	mov	w1, #0x1                   	// #1
  22e97c:	mov	w2, #0x10                  	// #16
  22e980:	mov	w4, #0x4                   	// #4
  22e984:	stur	w8, [x29, #-4]
  22e988:	bl	2539d0 <setsockopt@plt>
  22e98c:	tbnz	w0, #31, 22e998 <setsockopt_int+0x34>
  22e990:	mov	w0, wzr
  22e994:	b	22e9a4 <setsockopt_int+0x40>
  22e998:	bl	253660 <__errno_location@plt>
  22e99c:	ldr	w8, [x0]
  22e9a0:	neg	w0, w8
  22e9a4:	ldp	x29, x30, [sp, #16]
  22e9a8:	add	sp, sp, #0x20
  22e9ac:	ret

000000000022e9b0 <udev_ctrl_enable_receiving>:
  22e9b0:	stp	x29, x30, [sp, #-48]!
  22e9b4:	str	x21, [sp, #16]
  22e9b8:	stp	x20, x19, [sp, #32]
  22e9bc:	mov	x29, sp
  22e9c0:	cbz	x0, 22eae8 <udev_ctrl_enable_receiving+0x138>
  22e9c4:	ldrb	w8, [x0, #148]
  22e9c8:	mov	x19, x0
  22e9cc:	tbnz	w8, #0, 22ea40 <udev_ctrl_enable_receiving+0x90>
  22e9d0:	ldr	w0, [x19, #4]
  22e9d4:	ldr	w2, [x19, #144]
  22e9d8:	add	x20, x19, #0x10
  22e9dc:	mov	x1, x20
  22e9e0:	bl	253ed0 <bind@plt>
  22e9e4:	mov	w21, w0
  22e9e8:	tbz	w0, #31, 22ea18 <udev_ctrl_enable_receiving+0x68>
  22e9ec:	bl	253660 <__errno_location@plt>
  22e9f0:	ldr	w8, [x0]
  22e9f4:	cmp	w8, #0x62
  22e9f8:	b.ne	22ea18 <udev_ctrl_enable_receiving+0x68>  // b.any
  22e9fc:	mov	x0, x20
  22ea00:	bl	253ee0 <sockaddr_un_unlink@plt>
  22ea04:	ldr	w0, [x19, #4]
  22ea08:	ldr	w2, [x19, #144]
  22ea0c:	mov	x1, x20
  22ea10:	bl	253ed0 <bind@plt>
  22ea14:	mov	w21, w0
  22ea18:	tbnz	w21, #31, 22ea48 <udev_ctrl_enable_receiving+0x98>
  22ea1c:	ldr	w0, [x19, #4]
  22ea20:	mov	w1, wzr
  22ea24:	bl	253ef0 <listen@plt>
  22ea28:	tbnz	w0, #31, 22ea84 <udev_ctrl_enable_receiving+0xd4>
  22ea2c:	ldrb	w8, [x19, #148]
  22ea30:	mov	w0, wzr
  22ea34:	orr	w8, w8, #0x3
  22ea38:	strb	w8, [x19, #148]
  22ea3c:	b	22ead8 <udev_ctrl_enable_receiving+0x128>
  22ea40:	mov	w0, wzr
  22ea44:	b	22ead8 <udev_ctrl_enable_receiving+0x128>
  22ea48:	bl	253660 <__errno_location@plt>
  22ea4c:	ldr	w19, [x0]
  22ea50:	mov	w0, #0x1                   	// #1
  22ea54:	bl	2535b0 <log_get_max_level_realm@plt>
  22ea58:	cmp	w0, #0x3
  22ea5c:	b.lt	22eac8 <udev_ctrl_enable_receiving+0x118>  // b.tstop
  22ea60:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ea64:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  22ea68:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  22ea6c:	add	x2, x2, #0x706
  22ea70:	add	x4, x4, #0x68a
  22ea74:	add	x5, x5, #0x7de
  22ea78:	mov	w0, #0x403                 	// #1027
  22ea7c:	mov	w3, #0x74                  	// #116
  22ea80:	b	22eabc <udev_ctrl_enable_receiving+0x10c>
  22ea84:	bl	253660 <__errno_location@plt>
  22ea88:	ldr	w19, [x0]
  22ea8c:	mov	w0, #0x1                   	// #1
  22ea90:	bl	2535b0 <log_get_max_level_realm@plt>
  22ea94:	cmp	w0, #0x3
  22ea98:	b.lt	22eac8 <udev_ctrl_enable_receiving+0x118>  // b.tstop
  22ea9c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22eaa0:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  22eaa4:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22eaa8:	add	x2, x2, #0x706
  22eaac:	add	x4, x4, #0x68a
  22eab0:	add	x5, x5, #0xbfb
  22eab4:	mov	w0, #0x403                 	// #1027
  22eab8:	mov	w3, #0x77                  	// #119
  22eabc:	mov	w1, w19
  22eac0:	bl	2535c0 <log_internal_realm@plt>
  22eac4:	b	22ead8 <udev_ctrl_enable_receiving+0x128>
  22eac8:	cmp	w19, #0x0
  22eacc:	mov	w8, wzr
  22ead0:	cneg	w9, w19, mi  // mi = first
  22ead4:	sub	w0, w8, w9, uxtb
  22ead8:	ldp	x20, x19, [sp, #32]
  22eadc:	ldr	x21, [sp, #16]
  22eae0:	ldp	x29, x30, [sp], #48
  22eae4:	ret
  22eae8:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22eaec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22eaf0:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  22eaf4:	add	x1, x1, #0xe96
  22eaf8:	add	x2, x2, #0x706
  22eafc:	add	x4, x4, #0x6b
  22eb00:	mov	w0, #0x1                   	// #1
  22eb04:	mov	w3, #0x68                  	// #104
  22eb08:	bl	253740 <log_assert_failed_realm@plt>

000000000022eb0c <udev_ctrl_ref>:
  22eb0c:	stp	x29, x30, [sp, #-16]!
  22eb10:	mov	x29, sp
  22eb14:	cbz	x0, 22eb28 <udev_ctrl_ref+0x1c>
  22eb18:	ldr	w8, [x0]
  22eb1c:	cbz	w8, 22eb30 <udev_ctrl_ref+0x24>
  22eb20:	add	w8, w8, #0x1
  22eb24:	str	w8, [x0]
  22eb28:	ldp	x29, x30, [sp], #16
  22eb2c:	ret
  22eb30:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  22eb34:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22eb38:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22eb3c:	add	x1, x1, #0x9ce
  22eb40:	add	x2, x2, #0x706
  22eb44:	add	x4, x4, #0xce6
  22eb48:	mov	w0, #0x1                   	// #1
  22eb4c:	mov	w3, #0x93                  	// #147
  22eb50:	bl	253740 <log_assert_failed_realm@plt>

000000000022eb54 <udev_ctrl_unref>:
  22eb54:	stp	x29, x30, [sp, #-16]!
  22eb58:	mov	x29, sp
  22eb5c:	cbz	x0, 22eb78 <udev_ctrl_unref+0x24>
  22eb60:	ldr	w8, [x0]
  22eb64:	cbz	w8, 22eb84 <udev_ctrl_unref+0x30>
  22eb68:	subs	w8, w8, #0x1
  22eb6c:	str	w8, [x0]
  22eb70:	b.ne	22eb78 <udev_ctrl_unref+0x24>  // b.any
  22eb74:	bl	22eba8 <udev_ctrl_free>
  22eb78:	mov	x0, xzr
  22eb7c:	ldp	x29, x30, [sp], #16
  22eb80:	ret
  22eb84:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  22eb88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22eb8c:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  22eb90:	add	x1, x1, #0x9ce
  22eb94:	add	x2, x2, #0x706
  22eb98:	add	x4, x4, #0xd83
  22eb9c:	mov	w0, #0x1                   	// #1
  22eba0:	mov	w3, #0x93                  	// #147
  22eba4:	bl	253740 <log_assert_failed_realm@plt>

000000000022eba8 <udev_ctrl_free>:
  22eba8:	stp	x29, x30, [sp, #-32]!
  22ebac:	str	x19, [sp, #16]
  22ebb0:	mov	x29, sp
  22ebb4:	cbz	x0, 22ebec <udev_ctrl_free+0x44>
  22ebb8:	mov	x19, x0
  22ebbc:	bl	22f2f8 <udev_ctrl_disconnect>
  22ebc0:	ldr	x0, [x19, #160]
  22ebc4:	bl	253910 <sd_event_source_unref@plt>
  22ebc8:	ldr	w0, [x19, #4]
  22ebcc:	bl	2538f0 <safe_close@plt>
  22ebd0:	ldr	x0, [x19, #152]
  22ebd4:	bl	253920 <sd_event_unref@plt>
  22ebd8:	mov	x0, x19
  22ebdc:	bl	22f334 <mfree>
  22ebe0:	ldr	x19, [sp, #16]
  22ebe4:	ldp	x29, x30, [sp], #32
  22ebe8:	ret
  22ebec:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22ebf0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ebf4:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  22ebf8:	add	x1, x1, #0xe96
  22ebfc:	add	x2, x2, #0x706
  22ec00:	add	x4, x4, #0x24a
  22ec04:	mov	w0, #0x1                   	// #1
  22ec08:	mov	w3, #0x88                  	// #136
  22ec0c:	bl	253740 <log_assert_failed_realm@plt>

000000000022ec10 <udev_ctrl_cleanup>:
  22ec10:	stp	x29, x30, [sp, #-16]!
  22ec14:	mov	x29, sp
  22ec18:	cbz	x0, 22ec2c <udev_ctrl_cleanup+0x1c>
  22ec1c:	ldrb	w8, [x0, #148]
  22ec20:	tbz	w8, #1, 22ec2c <udev_ctrl_cleanup+0x1c>
  22ec24:	add	x0, x0, #0x10
  22ec28:	bl	253ee0 <sockaddr_un_unlink@plt>
  22ec2c:	mov	w0, wzr
  22ec30:	ldp	x29, x30, [sp], #16
  22ec34:	ret

000000000022ec38 <udev_ctrl_attach_event>:
  22ec38:	stp	x29, x30, [sp, #-32]!
  22ec3c:	str	x19, [sp, #16]
  22ec40:	mov	x29, sp
  22ec44:	cbz	x0, 22ec84 <udev_ctrl_attach_event+0x4c>
  22ec48:	mov	x19, x0
  22ec4c:	ldr	x8, [x19, #152]!
  22ec50:	cbnz	x8, 22ecb0 <udev_ctrl_attach_event+0x78>
  22ec54:	cbz	x1, 22ec68 <udev_ctrl_attach_event+0x30>
  22ec58:	mov	x0, x1
  22ec5c:	bl	253f00 <sd_event_ref@plt>
  22ec60:	str	x0, [x19]
  22ec64:	b	22ec74 <udev_ctrl_attach_event+0x3c>
  22ec68:	mov	x0, x19
  22ec6c:	bl	253810 <sd_event_default@plt>
  22ec70:	tbnz	w0, #31, 22ec78 <udev_ctrl_attach_event+0x40>
  22ec74:	mov	w0, wzr
  22ec78:	ldr	x19, [sp, #16]
  22ec7c:	ldp	x29, x30, [sp], #32
  22ec80:	ret
  22ec84:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22ec88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ec8c:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22ec90:	add	x1, x1, #0xe96
  22ec94:	add	x2, x2, #0x706
  22ec98:	add	x4, x4, #0xad
  22ec9c:	mov	w0, #0x1                   	// #1
  22eca0:	mov	w3, #0xa0                  	// #160
  22eca4:	bl	253f10 <log_assert_failed_return_realm@plt>
  22eca8:	mov	w0, #0xffffffea            	// #-22
  22ecac:	b	22ec78 <udev_ctrl_attach_event+0x40>
  22ecb0:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  22ecb4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ecb8:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22ecbc:	add	x1, x1, #0xdb9
  22ecc0:	add	x2, x2, #0x706
  22ecc4:	add	x4, x4, #0xad
  22ecc8:	mov	w0, #0x1                   	// #1
  22eccc:	mov	w3, #0xa1                  	// #161
  22ecd0:	bl	253f10 <log_assert_failed_return_realm@plt>
  22ecd4:	mov	w0, #0xfffffff0            	// #-16
  22ecd8:	b	22ec78 <udev_ctrl_attach_event+0x40>

000000000022ecdc <udev_ctrl_get_event_source>:
  22ecdc:	stp	x29, x30, [sp, #-16]!
  22ece0:	mov	x29, sp
  22ece4:	cbz	x0, 22ecf4 <udev_ctrl_get_event_source+0x18>
  22ece8:	ldr	x0, [x0, #160]
  22ecec:	ldp	x29, x30, [sp], #16
  22ecf0:	ret
  22ecf4:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22ecf8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ecfc:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  22ed00:	add	x1, x1, #0xe96
  22ed04:	add	x2, x2, #0x706
  22ed08:	add	x4, x4, #0x1c4
  22ed0c:	mov	w0, #0x1                   	// #1
  22ed10:	mov	w3, #0xaf                  	// #175
  22ed14:	bl	253740 <log_assert_failed_realm@plt>

000000000022ed18 <udev_ctrl_start>:
  22ed18:	stp	x29, x30, [sp, #-48]!
  22ed1c:	str	x21, [sp, #16]
  22ed20:	stp	x20, x19, [sp, #32]
  22ed24:	mov	x29, sp
  22ed28:	cbz	x0, 22edac <udev_ctrl_start+0x94>
  22ed2c:	ldr	x8, [x0, #152]
  22ed30:	mov	x20, x2
  22ed34:	mov	x21, x1
  22ed38:	mov	x19, x0
  22ed3c:	cbnz	x8, 22ed50 <udev_ctrl_start+0x38>
  22ed40:	mov	x0, x19
  22ed44:	mov	x1, xzr
  22ed48:	bl	22ec38 <udev_ctrl_attach_event>
  22ed4c:	tbnz	w0, #31, 22ed9c <udev_ctrl_start+0x84>
  22ed50:	mov	x0, x19
  22ed54:	bl	22e9b0 <udev_ctrl_enable_receiving>
  22ed58:	tbnz	w0, #31, 22ed9c <udev_ctrl_start+0x84>
  22ed5c:	ldr	x0, [x19, #152]
  22ed60:	ldr	w2, [x19, #4]
  22ed64:	stp	x21, x20, [x19, #176]
  22ed68:	add	x20, x19, #0xa0
  22ed6c:	adrp	x4, 22e000 <synthesize_change+0xb0>
  22ed70:	add	x4, x4, #0xdd0
  22ed74:	mov	w3, #0x1                   	// #1
  22ed78:	mov	x1, x20
  22ed7c:	mov	x5, x19
  22ed80:	bl	253850 <sd_event_add_io@plt>
  22ed84:	tbnz	w0, #31, 22ed9c <udev_ctrl_start+0x84>
  22ed88:	ldr	x0, [x20]
  22ed8c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22ed90:	add	x1, x1, #0x204
  22ed94:	bl	253890 <sd_event_source_set_description@plt>
  22ed98:	mov	w0, wzr
  22ed9c:	ldp	x20, x19, [sp, #32]
  22eda0:	ldr	x21, [sp, #16]
  22eda4:	ldp	x29, x30, [sp], #48
  22eda8:	ret
  22edac:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22edb0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22edb4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  22edb8:	add	x1, x1, #0xe96
  22edbc:	add	x2, x2, #0x706
  22edc0:	add	x4, x4, #0x5aa
  22edc4:	mov	w0, #0x1                   	// #1
  22edc8:	mov	w3, #0x132                 	// #306
  22edcc:	bl	253740 <log_assert_failed_realm@plt>

000000000022edd0 <udev_ctrl_event_handler>:
  22edd0:	sub	sp, sp, #0x40
  22edd4:	stp	x29, x30, [sp, #16]
  22edd8:	add	x29, sp, #0x10
  22eddc:	mov	w8, #0xffffffff            	// #-1
  22ede0:	str	x21, [sp, #32]
  22ede4:	stp	x20, x19, [sp, #48]
  22ede8:	str	w8, [x29, #28]
  22edec:	cbz	x3, 22f008 <udev_ctrl_event_handler+0x238>
  22edf0:	mov	x19, x3
  22edf4:	mov	w3, #0x800                 	// #2048
  22edf8:	mov	w0, w1
  22edfc:	movk	w3, #0x8, lsl #16
  22ee00:	mov	x1, xzr
  22ee04:	mov	x2, xzr
  22ee08:	bl	253f20 <accept4@plt>
  22ee0c:	str	w0, [x29, #28]
  22ee10:	tbnz	w0, #31, 22ee6c <udev_ctrl_event_handler+0x9c>
  22ee14:	mov	x1, sp
  22ee18:	mov	w20, w0
  22ee1c:	bl	253f30 <getpeercred@plt>
  22ee20:	tbnz	w0, #31, 22eec0 <udev_ctrl_event_handler+0xf0>
  22ee24:	ldr	w21, [sp, #4]
  22ee28:	cbz	w21, 22ef20 <udev_ctrl_event_handler+0x150>
  22ee2c:	mov	w0, #0x1                   	// #1
  22ee30:	bl	2535b0 <log_get_max_level_realm@plt>
  22ee34:	cmp	w0, #0x3
  22ee38:	b.lt	22eefc <udev_ctrl_event_handler+0x12c>  // b.tstop
  22ee3c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ee40:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22ee44:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  22ee48:	add	x2, x2, #0x706
  22ee4c:	add	x4, x4, #0x853
  22ee50:	add	x5, x5, #0xdc7
  22ee54:	mov	w0, #0x403                 	// #1027
  22ee58:	mov	w3, #0x117                 	// #279
  22ee5c:	mov	w1, wzr
  22ee60:	mov	w6, w21
  22ee64:	bl	2535c0 <log_internal_realm@plt>
  22ee68:	b	22eefc <udev_ctrl_event_handler+0x12c>
  22ee6c:	bl	253660 <__errno_location@plt>
  22ee70:	ldr	w19, [x0]
  22ee74:	mov	w0, w19
  22ee78:	bl	22f348 <ERRNO_IS_ACCEPT_AGAIN>
  22ee7c:	tbnz	w0, #0, 22eefc <udev_ctrl_event_handler+0x12c>
  22ee80:	mov	w0, #0x1                   	// #1
  22ee84:	bl	2535b0 <log_get_max_level_realm@plt>
  22ee88:	cmp	w0, #0x3
  22ee8c:	b.lt	22efbc <udev_ctrl_event_handler+0x1ec>  // b.tstop
  22ee90:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ee94:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22ee98:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22ee9c:	add	x2, x2, #0x706
  22eea0:	add	x4, x4, #0x853
  22eea4:	add	x5, x5, #0x5ef
  22eea8:	mov	w0, #0x403                 	// #1027
  22eeac:	mov	w3, #0x10c                 	// #268
  22eeb0:	mov	w1, w19
  22eeb4:	bl	2535c0 <log_internal_realm@plt>
  22eeb8:	mov	w21, w0
  22eebc:	b	22ef00 <udev_ctrl_event_handler+0x130>
  22eec0:	mov	w21, w0
  22eec4:	mov	w0, #0x1                   	// #1
  22eec8:	bl	2535b0 <log_get_max_level_realm@plt>
  22eecc:	cmp	w0, #0x3
  22eed0:	b.lt	22eefc <udev_ctrl_event_handler+0x12c>  // b.tstop
  22eed4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22eed8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22eedc:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  22eee0:	add	x2, x2, #0x706
  22eee4:	add	x4, x4, #0x853
  22eee8:	add	x5, x5, #0x6a5
  22eeec:	mov	w0, #0x403                 	// #1027
  22eef0:	mov	w3, #0x112                 	// #274
  22eef4:	mov	w1, w21
  22eef8:	bl	2535c0 <log_internal_realm@plt>
  22eefc:	mov	w21, wzr
  22ef00:	add	x0, x29, #0x1c
  22ef04:	bl	22e934 <closep>
  22ef08:	mov	w0, w21
  22ef0c:	ldp	x20, x19, [sp, #48]
  22ef10:	ldr	x21, [sp, #32]
  22ef14:	ldp	x29, x30, [sp, #16]
  22ef18:	add	sp, sp, #0x40
  22ef1c:	ret
  22ef20:	mov	w0, w20
  22ef24:	bl	22e964 <setsockopt_int>
  22ef28:	tbz	w0, #31, 22ef68 <udev_ctrl_event_handler+0x198>
  22ef2c:	mov	w21, w0
  22ef30:	mov	w0, #0x1                   	// #1
  22ef34:	bl	2535b0 <log_get_max_level_realm@plt>
  22ef38:	cmp	w0, #0x4
  22ef3c:	b.lt	22ef68 <udev_ctrl_event_handler+0x198>  // b.tstop
  22ef40:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22ef44:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22ef48:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  22ef4c:	add	x2, x2, #0x706
  22ef50:	add	x4, x4, #0x853
  22ef54:	add	x5, x5, #0xece
  22ef58:	mov	w0, #0x404                 	// #1028
  22ef5c:	mov	w3, #0x11e                 	// #286
  22ef60:	mov	w1, w21
  22ef64:	bl	2535c0 <log_internal_realm@plt>
  22ef68:	ldr	x0, [x19, #152]
  22ef6c:	adrp	x4, 22f000 <udev_ctrl_event_handler+0x230>
  22ef70:	add	x1, x19, #0xa8
  22ef74:	add	x4, x4, #0x398
  22ef78:	mov	w3, #0x1                   	// #1
  22ef7c:	mov	w2, w20
  22ef80:	mov	x5, x19
  22ef84:	bl	253850 <sd_event_add_io@plt>
  22ef88:	tbnz	w0, #31, 22efd0 <udev_ctrl_event_handler+0x200>
  22ef8c:	ldr	x0, [x19, #168]
  22ef90:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  22ef94:	add	x1, x1, #0x6da
  22ef98:	bl	253890 <sd_event_source_set_description@plt>
  22ef9c:	ldr	x0, [x19, #160]
  22efa0:	mov	w1, wzr
  22efa4:	bl	253f40 <sd_event_source_set_enabled@plt>
  22efa8:	mov	w21, wzr
  22efac:	mov	w8, #0xffffffff            	// #-1
  22efb0:	str	w8, [x29, #28]
  22efb4:	str	w20, [x19, #8]
  22efb8:	b	22ef00 <udev_ctrl_event_handler+0x130>
  22efbc:	cmp	w19, #0x0
  22efc0:	mov	w8, wzr
  22efc4:	cneg	w9, w19, mi  // mi = first
  22efc8:	sub	w21, w8, w9, uxtb
  22efcc:	b	22ef00 <udev_ctrl_event_handler+0x130>
  22efd0:	mov	w21, w0
  22efd4:	mov	w0, #0x1                   	// #1
  22efd8:	bl	2535b0 <log_get_max_level_realm@plt>
  22efdc:	cmp	w0, #0x3
  22efe0:	b.lt	22eefc <udev_ctrl_event_handler+0x12c>  // b.tstop
  22efe4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22efe8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  22efec:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  22eff0:	add	x2, x2, #0x706
  22eff4:	add	x4, x4, #0x853
  22eff8:	add	x5, x5, #0x27f
  22effc:	mov	w0, #0x403                 	// #1027
  22f000:	mov	w3, #0x122                 	// #290
  22f004:	b	22eef4 <udev_ctrl_event_handler+0x124>
  22f008:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22f00c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f010:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  22f014:	add	x1, x1, #0xe96
  22f018:	add	x2, x2, #0x706
  22f01c:	add	x4, x4, #0x989
  22f020:	mov	w0, #0x1                   	// #1
  22f024:	mov	w3, #0x105                 	// #261
  22f028:	bl	253740 <log_assert_failed_realm@plt>

000000000022f02c <udev_ctrl_send>:
  22f02c:	sub	sp, sp, #0x150
  22f030:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  22f034:	add	x8, x8, #0x9b8
  22f038:	ldr	q1, [x8]
  22f03c:	mov	w8, #0x1dea                	// #7658
  22f040:	movi	v0.2d, #0x0
  22f044:	movk	w8, #0xdead, lsl #16
  22f048:	stp	x29, x30, [sp, #288]
  22f04c:	stp	x20, x19, [sp, #320]
  22f050:	str	xzr, [sp, #272]
  22f054:	stp	q0, q0, [sp, #240]
  22f058:	stp	q0, q0, [sp, #208]
  22f05c:	stp	q0, q0, [sp, #176]
  22f060:	stp	q0, q0, [sp, #144]
  22f064:	stp	q0, q0, [sp, #112]
  22f068:	stp	q0, q0, [sp, #80]
  22f06c:	stp	q0, q0, [sp, #48]
  22f070:	stp	q0, q0, [sp, #16]
  22f074:	str	q1, [sp]
  22f078:	stp	w8, w1, [sp, #16]
  22f07c:	ldrb	w8, [x0, #148]
  22f080:	str	x28, [sp, #304]
  22f084:	add	x29, sp, #0x120
  22f088:	tbnz	w8, #3, 22f0b8 <udev_ctrl_send+0x8c>
  22f08c:	mov	w20, w1
  22f090:	mov	x19, x0
  22f094:	cbz	x3, 22f0c0 <udev_ctrl_send+0x94>
  22f098:	mov	x8, sp
  22f09c:	add	x0, x8, #0x18
  22f0a0:	mov	w1, #0x100                 	// #256
  22f0a4:	mov	x2, x3
  22f0a8:	bl	253f50 <strscpy@plt>
  22f0ac:	ldrb	w8, [x19, #148]
  22f0b0:	tbz	w8, #2, 22f0cc <udev_ctrl_send+0xa0>
  22f0b4:	b	22f0ec <udev_ctrl_send+0xc0>
  22f0b8:	mov	w0, #0xffffffc9            	// #-55
  22f0bc:	b	22f134 <udev_ctrl_send+0x108>
  22f0c0:	str	w2, [sp, #24]
  22f0c4:	ldrb	w8, [x19, #148]
  22f0c8:	tbnz	w8, #2, 22f0ec <udev_ctrl_send+0xc0>
  22f0cc:	ldr	w0, [x19, #4]
  22f0d0:	ldr	w2, [x19, #144]
  22f0d4:	add	x1, x19, #0x10
  22f0d8:	bl	253f60 <connect@plt>
  22f0dc:	tbnz	w0, #31, 22f120 <udev_ctrl_send+0xf4>
  22f0e0:	ldrb	w8, [x19, #148]
  22f0e4:	orr	w8, w8, #0x4
  22f0e8:	strb	w8, [x19, #148]
  22f0ec:	ldr	w0, [x19, #4]
  22f0f0:	mov	x1, sp
  22f0f4:	mov	w2, #0x118                 	// #280
  22f0f8:	mov	w3, wzr
  22f0fc:	bl	253f70 <send@plt>
  22f100:	tbnz	x0, #63, 22f120 <udev_ctrl_send+0xf4>
  22f104:	cmp	w20, #0x8
  22f108:	b.ne	22f130 <udev_ctrl_send+0x104>  // b.any
  22f10c:	ldrb	w8, [x19, #148]
  22f110:	mov	w0, wzr
  22f114:	orr	w8, w8, #0x8
  22f118:	strb	w8, [x19, #148]
  22f11c:	b	22f134 <udev_ctrl_send+0x108>
  22f120:	bl	253660 <__errno_location@plt>
  22f124:	ldr	w8, [x0]
  22f128:	neg	w0, w8
  22f12c:	b	22f134 <udev_ctrl_send+0x108>
  22f130:	mov	w0, wzr
  22f134:	ldp	x20, x19, [sp, #320]
  22f138:	ldr	x28, [sp, #304]
  22f13c:	ldp	x29, x30, [sp, #288]
  22f140:	add	sp, sp, #0x150
  22f144:	ret

000000000022f148 <udev_ctrl_wait>:
  22f148:	sub	sp, sp, #0x40
  22f14c:	stp	x29, x30, [sp, #16]
  22f150:	stp	x22, x21, [sp, #32]
  22f154:	stp	x20, x19, [sp, #48]
  22f158:	add	x29, sp, #0x10
  22f15c:	stp	xzr, xzr, [sp]
  22f160:	cbz	x0, 22f27c <udev_ctrl_wait+0x134>
  22f164:	ldr	w8, [x0, #4]
  22f168:	mov	x19, x0
  22f16c:	tbnz	w8, #31, 22f250 <udev_ctrl_wait+0x108>
  22f170:	ldrb	w8, [x19, #148]
  22f174:	tbz	w8, #2, 22f250 <udev_ctrl_wait+0x108>
  22f178:	mov	x20, x1
  22f17c:	tbnz	w8, #3, 22f198 <udev_ctrl_wait+0x50>
  22f180:	mov	x0, x19
  22f184:	mov	w1, wzr
  22f188:	mov	w2, wzr
  22f18c:	mov	x3, xzr
  22f190:	bl	22f02c <udev_ctrl_send>
  22f194:	tbnz	w0, #31, 22f248 <udev_ctrl_wait+0x100>
  22f198:	cbz	x20, 22f250 <udev_ctrl_wait+0x108>
  22f19c:	ldr	x8, [x19, #152]
  22f1a0:	cbnz	x8, 22f1b4 <udev_ctrl_wait+0x6c>
  22f1a4:	mov	x0, x19
  22f1a8:	mov	x1, xzr
  22f1ac:	bl	22ec38 <udev_ctrl_attach_event>
  22f1b0:	tbnz	w0, #31, 22f248 <udev_ctrl_wait+0x100>
  22f1b4:	ldr	x0, [x19, #152]
  22f1b8:	ldr	w2, [x19, #4]
  22f1bc:	adrp	x4, 22f000 <udev_ctrl_event_handler+0x230>
  22f1c0:	add	x4, x4, #0x2bc
  22f1c4:	add	x1, sp, #0x8
  22f1c8:	mov	w3, #0x1                   	// #1
  22f1cc:	mov	x5, xzr
  22f1d0:	bl	253850 <sd_event_add_io@plt>
  22f1d4:	tbnz	w0, #31, 22f248 <udev_ctrl_wait+0x100>
  22f1d8:	ldr	x0, [sp, #8]
  22f1dc:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22f1e0:	add	x1, x1, #0xd1a
  22f1e4:	bl	253890 <sd_event_source_set_description@plt>
  22f1e8:	cmn	x20, #0x1
  22f1ec:	b.eq	22f240 <udev_ctrl_wait+0xf8>  // b.none
  22f1f0:	ldr	x21, [x19, #152]
  22f1f4:	bl	253f80 <clock_boottime_or_monotonic@plt>
  22f1f8:	mov	w22, w0
  22f1fc:	bl	253f80 <clock_boottime_or_monotonic@plt>
  22f200:	bl	253b20 <now@plt>
  22f204:	mov	x1, x20
  22f208:	bl	22f2d8 <usec_add>
  22f20c:	mov	x3, x0
  22f210:	mov	x1, sp
  22f214:	mov	x6, #0xffffffffffffff92    	// #-110
  22f218:	mov	x0, x21
  22f21c:	mov	w2, w22
  22f220:	mov	x4, xzr
  22f224:	mov	x5, xzr
  22f228:	bl	253c20 <sd_event_add_time@plt>
  22f22c:	tbnz	w0, #31, 22f248 <udev_ctrl_wait+0x100>
  22f230:	ldr	x0, [sp]
  22f234:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22f238:	add	x1, x1, #0x20e
  22f23c:	bl	253890 <sd_event_source_set_description@plt>
  22f240:	ldr	x0, [x19, #152]
  22f244:	bl	2538c0 <sd_event_loop@plt>
  22f248:	mov	w21, w0
  22f24c:	b	22f254 <udev_ctrl_wait+0x10c>
  22f250:	mov	w21, wzr
  22f254:	mov	x0, sp
  22f258:	bl	22f2a0 <sd_event_source_unrefp>
  22f25c:	add	x0, sp, #0x8
  22f260:	bl	22f2a0 <sd_event_source_unrefp>
  22f264:	mov	w0, w21
  22f268:	ldp	x20, x19, [sp, #48]
  22f26c:	ldp	x22, x21, [sp, #32]
  22f270:	ldp	x29, x30, [sp, #16]
  22f274:	add	sp, sp, #0x40
  22f278:	ret
  22f27c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22f280:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f284:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  22f288:	add	x1, x1, #0xe96
  22f28c:	add	x2, x2, #0x706
  22f290:	add	x4, x4, #0x2fd
  22f294:	mov	w0, #0x1                   	// #1
  22f298:	mov	w3, #0x170                 	// #368
  22f29c:	bl	253740 <log_assert_failed_realm@plt>

000000000022f2a0 <sd_event_source_unrefp>:
  22f2a0:	stp	x29, x30, [sp, #-16]!
  22f2a4:	ldr	x0, [x0]
  22f2a8:	mov	x29, sp
  22f2ac:	cbz	x0, 22f2b4 <sd_event_source_unrefp+0x14>
  22f2b0:	bl	253910 <sd_event_source_unref@plt>
  22f2b4:	ldp	x29, x30, [sp], #16
  22f2b8:	ret

000000000022f2bc <udev_ctrl_wait_io_handler>:
  22f2bc:	stp	x29, x30, [sp, #-16]!
  22f2c0:	mov	x29, sp
  22f2c4:	bl	253f90 <sd_event_source_get_event@plt>
  22f2c8:	mov	w1, wzr
  22f2cc:	bl	253b40 <sd_event_exit@plt>
  22f2d0:	ldp	x29, x30, [sp], #16
  22f2d4:	ret

000000000022f2d8 <usec_add>:
  22f2d8:	adds	x8, x1, x0
  22f2dc:	cset	w9, cs  // cs = hs, nlast
  22f2e0:	cmp	x8, x1
  22f2e4:	cset	w10, cc  // cc = lo, ul, last
  22f2e8:	orr	w9, w9, w10
  22f2ec:	cmp	w9, #0x0
  22f2f0:	csinv	x0, x8, xzr, eq  // eq = none
  22f2f4:	ret

000000000022f2f8 <udev_ctrl_disconnect>:
  22f2f8:	cbz	x0, 22f330 <udev_ctrl_disconnect+0x38>
  22f2fc:	stp	x29, x30, [sp, #-32]!
  22f300:	str	x19, [sp, #16]
  22f304:	mov	x19, x0
  22f308:	ldr	x0, [x0, #168]
  22f30c:	mov	x29, sp
  22f310:	bl	253910 <sd_event_source_unref@plt>
  22f314:	ldr	w8, [x19, #8]
  22f318:	str	x0, [x19, #168]
  22f31c:	mov	w0, w8
  22f320:	bl	2538f0 <safe_close@plt>
  22f324:	str	w0, [x19, #8]
  22f328:	ldr	x19, [sp, #16]
  22f32c:	ldp	x29, x30, [sp], #32
  22f330:	ret

000000000022f334 <mfree>:
  22f334:	stp	x29, x30, [sp, #-16]!
  22f338:	mov	x29, sp
  22f33c:	bl	2536e0 <free@plt>
  22f340:	ldp	x29, x30, [sp], #16
  22f344:	ret

000000000022f348 <ERRNO_IS_ACCEPT_AGAIN>:
  22f348:	stp	x29, x30, [sp, #-32]!
  22f34c:	str	x19, [sp, #16]
  22f350:	mov	x29, sp
  22f354:	mov	w19, w0
  22f358:	bl	22f640 <ERRNO_IS_DISCONNECT>
  22f35c:	tbnz	w0, #0, 22f380 <ERRNO_IS_ACCEPT_AGAIN+0x38>
  22f360:	cmp	w19, #0x0
  22f364:	cneg	w8, w19, mi  // mi = first
  22f368:	cmp	w8, #0x4
  22f36c:	b.eq	22f380 <ERRNO_IS_ACCEPT_AGAIN+0x38>  // b.none
  22f370:	cmp	w8, #0x5f
  22f374:	b.eq	22f380 <ERRNO_IS_ACCEPT_AGAIN+0x38>  // b.none
  22f378:	cmp	w8, #0xb
  22f37c:	b.ne	22f390 <ERRNO_IS_ACCEPT_AGAIN+0x48>  // b.any
  22f380:	mov	w0, #0x1                   	// #1
  22f384:	ldr	x19, [sp, #16]
  22f388:	ldp	x29, x30, [sp], #32
  22f38c:	ret
  22f390:	mov	w0, wzr
  22f394:	b	22f384 <ERRNO_IS_ACCEPT_AGAIN+0x3c>

000000000022f398 <udev_ctrl_connection_event_handler>:
  22f398:	sub	sp, sp, #0x1c0
  22f39c:	add	x8, sp, #0x70
  22f3a0:	mov	w9, #0x118                 	// #280
  22f3a4:	stp	x29, x30, [sp, #400]
  22f3a8:	add	x29, sp, #0x190
  22f3ac:	add	x10, sp, #0x60
  22f3b0:	mov	w11, #0x1                   	// #1
  22f3b4:	stp	x8, x9, [sp, #96]
  22f3b8:	add	x8, sp, #0x40
  22f3bc:	mov	w9, #0x20                  	// #32
  22f3c0:	stp	x28, x21, [sp, #416]
  22f3c4:	stp	x20, x19, [sp, #432]
  22f3c8:	stur	xzr, [x29, #-8]
  22f3cc:	str	xzr, [sp, #8]
  22f3d0:	str	wzr, [sp, #16]
  22f3d4:	stp	x10, x11, [sp, #24]
  22f3d8:	stp	x8, x9, [sp, #40]
  22f3dc:	str	wzr, [sp, #56]
  22f3e0:	cbz	x3, 22f61c <udev_ctrl_connection_event_handler+0x284>
  22f3e4:	mov	x0, x3
  22f3e8:	mov	w20, w1
  22f3ec:	bl	22eb0c <udev_ctrl_ref>
  22f3f0:	mov	x19, x0
  22f3f4:	stur	x0, [x29, #-8]
  22f3f8:	mov	w0, w20
  22f3fc:	bl	253fa0 <next_datagram_size_fd@plt>
  22f400:	mov	x21, x0
  22f404:	tbnz	x0, #63, 22f484 <udev_ctrl_connection_event_handler+0xec>
  22f408:	cbz	x21, 22f5f8 <udev_ctrl_connection_event_handler+0x260>
  22f40c:	add	x1, sp, #0x8
  22f410:	mov	w0, w20
  22f414:	mov	w2, wzr
  22f418:	bl	253af0 <recvmsg@plt>
  22f41c:	tbnz	x0, #63, 22f514 <udev_ctrl_connection_event_handler+0x17c>
  22f420:	add	x0, sp, #0x8
  22f424:	bl	253fb0 <cmsg_close_all@plt>
  22f428:	ldr	x8, [sp, #48]
  22f42c:	cmp	x8, #0x10
  22f430:	b.cc	22f4d8 <udev_ctrl_connection_event_handler+0x140>  // b.lo, b.ul, b.last
  22f434:	ldr	x8, [sp, #40]
  22f438:	cbz	x8, 22f4d8 <udev_ctrl_connection_event_handler+0x140>
  22f43c:	ldr	w9, [x8, #12]
  22f440:	cmp	w9, #0x2
  22f444:	b.ne	22f4d8 <udev_ctrl_connection_event_handler+0x140>  // b.any
  22f448:	ldr	w20, [x8, #20]
  22f44c:	cbz	w20, 22f570 <udev_ctrl_connection_event_handler+0x1d8>
  22f450:	mov	w0, #0x1                   	// #1
  22f454:	bl	2535b0 <log_get_max_level_realm@plt>
  22f458:	cmp	w0, #0x3
  22f45c:	b.lt	22f5f8 <udev_ctrl_connection_event_handler+0x260>  // b.tstop
  22f460:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f464:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22f468:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  22f46c:	add	x2, x2, #0x706
  22f470:	add	x4, x4, #0xe8
  22f474:	add	x5, x5, #0x614
  22f478:	mov	w0, #0x403                 	// #1027
  22f47c:	mov	w3, #0xeb                  	// #235
  22f480:	b	22f5ec <udev_ctrl_connection_event_handler+0x254>
  22f484:	mov	w0, #0x1                   	// #1
  22f488:	bl	2535b0 <log_get_max_level_realm@plt>
  22f48c:	cmp	w0, #0x3
  22f490:	b.lt	22f4c4 <udev_ctrl_connection_event_handler+0x12c>  // b.tstop
  22f494:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f498:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22f49c:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  22f4a0:	add	x2, x2, #0x706
  22f4a4:	add	x4, x4, #0xe8
  22f4a8:	add	x5, x5, #0x3ad
  22f4ac:	mov	w0, #0x403                 	// #1027
  22f4b0:	mov	w3, #0xd3                  	// #211
  22f4b4:	mov	w1, w21
  22f4b8:	bl	2535c0 <log_internal_realm@plt>
  22f4bc:	mov	w19, w0
  22f4c0:	b	22f5fc <udev_ctrl_connection_event_handler+0x264>
  22f4c4:	cmp	w21, #0x0
  22f4c8:	mov	w8, wzr
  22f4cc:	cneg	w9, w21, mi  // mi = first
  22f4d0:	sub	w19, w8, w9, uxtb
  22f4d4:	b	22f5fc <udev_ctrl_connection_event_handler+0x264>
  22f4d8:	mov	w0, #0x1                   	// #1
  22f4dc:	bl	2535b0 <log_get_max_level_realm@plt>
  22f4e0:	cmp	w0, #0x3
  22f4e4:	b.lt	22f5f8 <udev_ctrl_connection_event_handler+0x260>  // b.tstop
  22f4e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f4ec:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22f4f0:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  22f4f4:	add	x2, x2, #0x706
  22f4f8:	add	x4, x4, #0xe8
  22f4fc:	add	x5, x5, #0xf0d
  22f500:	mov	w0, #0x403                 	// #1027
  22f504:	mov	w3, #0xe4                  	// #228
  22f508:	mov	w1, wzr
  22f50c:	bl	2535c0 <log_internal_realm@plt>
  22f510:	b	22f5f8 <udev_ctrl_connection_event_handler+0x260>
  22f514:	bl	253660 <__errno_location@plt>
  22f518:	ldr	w19, [x0]
  22f51c:	cmp	w19, #0x4
  22f520:	b.eq	22f5f8 <udev_ctrl_connection_event_handler+0x260>  // b.none
  22f524:	mov	w0, #0x1                   	// #1
  22f528:	bl	2535b0 <log_get_max_level_realm@plt>
  22f52c:	cmp	w0, #0x3
  22f530:	b.lt	22f55c <udev_ctrl_connection_event_handler+0x1c4>  // b.tstop
  22f534:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f538:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22f53c:	adrp	x5, 210000 <worker_hash_op+0x5ad0>
  22f540:	add	x2, x2, #0x706
  22f544:	add	x4, x4, #0xe8
  22f548:	add	x5, x5, #0xdc6
  22f54c:	mov	w0, #0x403                 	// #1027
  22f550:	mov	w3, #0xda                  	// #218
  22f554:	mov	w1, w19
  22f558:	b	22f4b8 <udev_ctrl_connection_event_handler+0x120>
  22f55c:	cmp	w19, #0x0
  22f560:	mov	w8, wzr
  22f564:	cneg	w9, w19, mi  // mi = first
  22f568:	sub	w19, w8, w9, uxtb
  22f56c:	b	22f5fc <udev_ctrl_connection_event_handler+0x264>
  22f570:	ldr	w20, [sp, #128]
  22f574:	mov	w8, #0x1dea                	// #7658
  22f578:	movk	w8, #0xdead, lsl #16
  22f57c:	cmp	w20, w8
  22f580:	b.ne	22f5bc <udev_ctrl_connection_event_handler+0x224>  // b.any
  22f584:	ldr	w1, [sp, #132]
  22f588:	cbz	w1, 22f5f8 <udev_ctrl_connection_event_handler+0x260>
  22f58c:	ldr	x8, [x19, #176]
  22f590:	cbz	x8, 22f5a8 <udev_ctrl_connection_event_handler+0x210>
  22f594:	ldr	x3, [x19, #184]
  22f598:	add	x9, sp, #0x70
  22f59c:	add	x2, x9, #0x18
  22f5a0:	mov	x0, x19
  22f5a4:	blr	x8
  22f5a8:	mov	x0, x19
  22f5ac:	bl	22eb54 <udev_ctrl_unref>
  22f5b0:	mov	w19, wzr
  22f5b4:	stur	xzr, [x29, #-8]
  22f5b8:	b	22f5fc <udev_ctrl_connection_event_handler+0x264>
  22f5bc:	mov	w0, #0x1                   	// #1
  22f5c0:	bl	2535b0 <log_get_max_level_realm@plt>
  22f5c4:	cmp	w0, #0x3
  22f5c8:	b.lt	22f5f8 <udev_ctrl_connection_event_handler+0x260>  // b.tstop
  22f5cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f5d0:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  22f5d4:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  22f5d8:	add	x2, x2, #0x706
  22f5dc:	add	x4, x4, #0xe8
  22f5e0:	add	x5, x5, #0x89d
  22f5e4:	mov	w0, #0x403                 	// #1027
  22f5e8:	mov	w3, #0xf0                  	// #240
  22f5ec:	mov	w1, wzr
  22f5f0:	mov	w6, w20
  22f5f4:	bl	2535c0 <log_internal_realm@plt>
  22f5f8:	mov	w19, wzr
  22f5fc:	sub	x0, x29, #0x8
  22f600:	bl	22f678 <udev_ctrl_disconnect_and_listen_againp>
  22f604:	mov	w0, w19
  22f608:	ldp	x20, x19, [sp, #432]
  22f60c:	ldp	x28, x21, [sp, #416]
  22f610:	ldp	x29, x30, [sp, #400]
  22f614:	add	sp, sp, #0x1c0
  22f618:	ret
  22f61c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  22f620:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  22f624:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  22f628:	add	x1, x1, #0x423
  22f62c:	add	x2, x2, #0x706
  22f630:	add	x4, x4, #0x9db
  22f634:	mov	w0, #0x1                   	// #1
  22f638:	mov	w3, #0xcb                  	// #203
  22f63c:	bl	253740 <log_assert_failed_realm@plt>

000000000022f640 <ERRNO_IS_DISCONNECT>:
  22f640:	cmp	w0, #0x0
  22f644:	cneg	w8, w0, mi  // mi = first
  22f648:	sub	w8, w8, #0x20
  22f64c:	cmp	w8, #0x51
  22f650:	mov	w0, wzr
  22f654:	b.hi	22f674 <ERRNO_IS_DISCONNECT+0x34>  // b.pmore
  22f658:	adrp	x9, 218000 <worker_hash_op+0xdad0>
  22f65c:	add	x9, x9, #0x8fa
  22f660:	adr	x10, 22f670 <ERRNO_IS_DISCONNECT+0x30>
  22f664:	ldrb	w11, [x9, x8]
  22f668:	add	x10, x10, x11, lsl #2
  22f66c:	br	x10
  22f670:	mov	w0, #0x1                   	// #1
  22f674:	ret

000000000022f678 <udev_ctrl_disconnect_and_listen_againp>:
  22f678:	stp	x29, x30, [sp, #-16]!
  22f67c:	ldr	x0, [x0]
  22f680:	mov	x29, sp
  22f684:	cbz	x0, 22f68c <udev_ctrl_disconnect_and_listen_againp+0x14>
  22f688:	bl	22f694 <udev_ctrl_disconnect_and_listen_again>
  22f68c:	ldp	x29, x30, [sp], #16
  22f690:	ret

000000000022f694 <udev_ctrl_disconnect_and_listen_again>:
  22f694:	stp	x29, x30, [sp, #-32]!
  22f698:	str	x19, [sp, #16]
  22f69c:	mov	x29, sp
  22f6a0:	mov	x19, x0
  22f6a4:	bl	22f2f8 <udev_ctrl_disconnect>
  22f6a8:	mov	x0, x19
  22f6ac:	bl	22eb54 <udev_ctrl_unref>
  22f6b0:	ldr	x0, [x19, #160]
  22f6b4:	mov	w1, #0x1                   	// #1
  22f6b8:	bl	253f40 <sd_event_source_set_enabled@plt>
  22f6bc:	ldr	x19, [sp, #16]
  22f6c0:	ldp	x29, x30, [sp], #32
  22f6c4:	ret

000000000022f6c8 <udev_event_new>:
  22f6c8:	stp	x29, x30, [sp, #-64]!
  22f6cc:	str	x23, [sp, #16]
  22f6d0:	stp	x22, x21, [sp, #32]
  22f6d4:	stp	x20, x19, [sp, #48]
  22f6d8:	mov	x29, sp
  22f6dc:	cbz	x0, 22f770 <udev_event_new+0xa8>
  22f6e0:	mov	x21, x2
  22f6e4:	mov	x20, x1
  22f6e8:	mov	x22, x0
  22f6ec:	bl	22f794 <malloc_multiply>
  22f6f0:	mov	x19, x0
  22f6f4:	cbz	x0, 22f758 <udev_event_new+0x90>
  22f6f8:	mov	x0, x22
  22f6fc:	bl	253c50 <sd_device_ref@plt>
  22f700:	mov	x22, x0
  22f704:	mov	w0, #0x1                   	// #1
  22f708:	bl	253b20 <now@plt>
  22f70c:	mov	x23, x0
  22f710:	mov	x0, x21
  22f714:	bl	253d10 <sd_netlink_ref@plt>
  22f718:	ldrh	w10, [x29, #28]
  22f71c:	ldr	w11, [x29, #24]
  22f720:	movi	v0.2d, #0x0
  22f724:	mov	x8, #0xffffffffffffffff    	// #-1
  22f728:	mov	w9, #0xffffffff            	// #-1
  22f72c:	str	x22, [x19]
  22f730:	stp	xzr, xzr, [x19, #56]
  22f734:	stp	x20, x23, [x19, #72]
  22f738:	stp	x0, xzr, [x19, #88]
  22f73c:	strh	wzr, [x19, #104]
  22f740:	stur	q0, [x19, #8]
  22f744:	stur	q0, [x19, #24]
  22f748:	str	x8, [x19, #40]
  22f74c:	str	w9, [x19, #48]
  22f750:	stur	w11, [x19, #106]
  22f754:	strh	w10, [x19, #110]
  22f758:	mov	x0, x19
  22f75c:	ldp	x20, x19, [sp, #48]
  22f760:	ldp	x22, x21, [sp, #32]
  22f764:	ldr	x23, [sp, #16]
  22f768:	ldp	x29, x30, [sp], #64
  22f76c:	ret
  22f770:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  22f774:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22f778:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  22f77c:	add	x1, x1, #0x9e6
  22f780:	add	x2, x2, #0x661
  22f784:	add	x4, x4, #0xc24
  22f788:	mov	w0, #0x1                   	// #1
  22f78c:	mov	w3, #0x38                  	// #56
  22f790:	bl	253740 <log_assert_failed_realm@plt>

000000000022f794 <malloc_multiply>:
  22f794:	stp	x29, x30, [sp, #-16]!
  22f798:	mov	w0, #0x70                  	// #112
  22f79c:	mov	x29, sp
  22f7a0:	bl	2539c0 <malloc@plt>
  22f7a4:	ldp	x29, x30, [sp], #16
  22f7a8:	ret

000000000022f7ac <udev_event_free>:
  22f7ac:	cbz	x0, 22f808 <udev_event_free+0x5c>
  22f7b0:	stp	x29, x30, [sp, #-32]!
  22f7b4:	str	x19, [sp, #16]
  22f7b8:	mov	x19, x0
  22f7bc:	ldr	x0, [x0]
  22f7c0:	mov	x29, sp
  22f7c4:	bl	253950 <sd_device_unref@plt>
  22f7c8:	ldr	x0, [x19, #16]
  22f7cc:	bl	253950 <sd_device_unref@plt>
  22f7d0:	ldr	x0, [x19, #88]
  22f7d4:	bl	2538e0 <sd_netlink_unref@plt>
  22f7d8:	ldr	x0, [x19, #64]
  22f7dc:	bl	22f810 <ordered_hashmap_free_free_key>
  22f7e0:	ldr	x0, [x19, #56]
  22f7e4:	bl	22f830 <ordered_hashmap_free_free_free>
  22f7e8:	ldr	x0, [x19, #32]
  22f7ec:	bl	2536e0 <free@plt>
  22f7f0:	ldr	x0, [x19, #24]
  22f7f4:	bl	2536e0 <free@plt>
  22f7f8:	mov	x0, x19
  22f7fc:	bl	22f850 <mfree>
  22f800:	ldr	x19, [sp, #16]
  22f804:	ldp	x29, x30, [sp], #32
  22f808:	mov	x0, xzr
  22f80c:	ret

000000000022f810 <ordered_hashmap_free_free_key>:
  22f810:	stp	x29, x30, [sp, #-16]!
  22f814:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  22f818:	ldr	x1, [x1, #728]
  22f81c:	mov	x2, xzr
  22f820:	mov	x29, sp
  22f824:	bl	253940 <internal_hashmap_free@plt>
  22f828:	ldp	x29, x30, [sp], #16
  22f82c:	ret

000000000022f830 <ordered_hashmap_free_free_free>:
  22f830:	stp	x29, x30, [sp, #-16]!
  22f834:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  22f838:	ldr	x1, [x1, #728]
  22f83c:	mov	x29, sp
  22f840:	mov	x2, x1
  22f844:	bl	253940 <internal_hashmap_free@plt>
  22f848:	ldp	x29, x30, [sp], #16
  22f84c:	ret

000000000022f850 <mfree>:
  22f850:	stp	x29, x30, [sp, #-16]!
  22f854:	mov	x29, sp
  22f858:	bl	2536e0 <free@plt>
  22f85c:	ldp	x29, x30, [sp], #16
  22f860:	ret

000000000022f864 <udev_event_apply_format>:
  22f864:	stp	x29, x30, [sp, #-96]!
  22f868:	stp	x28, x27, [sp, #16]
  22f86c:	stp	x26, x25, [sp, #32]
  22f870:	stp	x24, x23, [sp, #48]
  22f874:	stp	x22, x21, [sp, #64]
  22f878:	stp	x20, x19, [sp, #80]
  22f87c:	mov	x29, sp
  22f880:	sub	sp, sp, #0x450
  22f884:	str	w4, [sp, #44]
  22f888:	stur	x1, [x29, #-16]
  22f88c:	cbz	x0, 22fb00 <udev_event_apply_format+0x29c>
  22f890:	ldr	x8, [x0]
  22f894:	mov	x23, x0
  22f898:	cbz	x8, 22fb24 <udev_event_apply_format+0x2c0>
  22f89c:	mov	x22, x1
  22f8a0:	cbz	x1, 22fb48 <udev_event_apply_format+0x2e4>
  22f8a4:	mov	x20, x2
  22f8a8:	cbz	x2, 22fb6c <udev_event_apply_format+0x308>
  22f8ac:	mov	x19, x3
  22f8b0:	cbz	x3, 22fb90 <udev_event_apply_format+0x32c>
  22f8b4:	ldur	x8, [x29, #-16]
  22f8b8:	ldrb	w8, [x8]
  22f8bc:	cbz	w8, 22facc <udev_event_apply_format+0x268>
  22f8c0:	adrp	x24, 211000 <worker_hash_op+0x6ad0>
  22f8c4:	adrp	x25, 215000 <worker_hash_op+0xaad0>
  22f8c8:	adrp	x28, 20c000 <worker_hash_op+0x1ad0>
  22f8cc:	add	x24, x24, #0xb64
  22f8d0:	add	x25, x25, #0x10b
  22f8d4:	add	x28, x28, #0x661
  22f8d8:	str	x22, [sp, #32]
  22f8dc:	b	22f914 <udev_event_apply_format+0xb0>
  22f8e0:	ldur	x8, [x29, #-16]
  22f8e4:	sub	x19, x19, #0x1
  22f8e8:	add	x9, x8, #0x1
  22f8ec:	stur	x9, [x29, #-16]
  22f8f0:	ldrb	w8, [x8]
  22f8f4:	strb	w8, [x20], #1
  22f8f8:	mov	w8, #0xc                   	// #12
  22f8fc:	cbz	w8, 22f908 <udev_event_apply_format+0xa4>
  22f900:	cmp	w8, #0xc
  22f904:	b.ne	22fac4 <udev_event_apply_format+0x260>  // b.any
  22f908:	ldur	x8, [x29, #-16]
  22f90c:	ldrb	w8, [x8]
  22f910:	cbz	w8, 22facc <udev_event_apply_format+0x268>
  22f914:	sub	x0, x29, #0x10
  22f918:	sub	x2, x29, #0x14
  22f91c:	add	x3, sp, #0x3c
  22f920:	mov	w1, wzr
  22f924:	bl	22fbd8 <get_subst_type>
  22f928:	mov	w26, w0
  22f92c:	tbnz	w0, #31, 22f990 <udev_event_apply_format+0x12c>
  22f930:	cbz	w26, 22f9e4 <udev_event_apply_format+0x180>
  22f934:	ldur	w1, [x29, #-20]
  22f938:	add	x2, sp, #0x3c
  22f93c:	mov	x0, x23
  22f940:	mov	x3, x20
  22f944:	mov	x4, x19
  22f948:	bl	22fdc4 <udev_event_subst_format>
  22f94c:	mov	x26, x0
  22f950:	tbnz	x0, #63, 22f9f8 <udev_event_apply_format+0x194>
  22f954:	ldur	w8, [x29, #-20]
  22f958:	cmp	w8, #0xa
  22f95c:	b.eq	22f97c <udev_event_apply_format+0x118>  // b.none
  22f960:	ldr	w8, [sp, #44]
  22f964:	tbz	w8, #0, 22f97c <udev_event_apply_format+0x118>
  22f968:	mov	x0, x20
  22f96c:	mov	x1, x20
  22f970:	mov	x2, x26
  22f974:	bl	253fc0 <util_replace_whitespace@plt>
  22f978:	mov	x26, x0
  22f97c:	mov	w8, wzr
  22f980:	add	x20, x20, x26
  22f984:	sub	x19, x19, x26
  22f988:	cbnz	w8, 22f900 <udev_event_apply_format+0x9c>
  22f98c:	b	22f908 <udev_event_apply_format+0xa4>
  22f990:	str	xzr, [sp, #48]
  22f994:	ldr	x27, [x23]
  22f998:	cbz	x27, 22f9ac <udev_event_apply_format+0x148>
  22f99c:	mov	w0, #0x1                   	// #1
  22f9a0:	bl	2535b0 <log_get_max_level_realm@plt>
  22f9a4:	cmp	w0, #0x4
  22f9a8:	b.ge	22faa4 <udev_event_apply_format+0x240>  // b.tcont
  22f9ac:	ldr	x6, [sp, #48]
  22f9b0:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22f9b4:	mov	w0, #0x4                   	// #4
  22f9b8:	mov	w3, #0x1ca                 	// #458
  22f9bc:	cmp	x6, #0x0
  22f9c0:	csel	x5, xzr, x24, eq  // eq = none
  22f9c4:	mov	w1, w26
  22f9c8:	mov	x2, x28
  22f9cc:	add	x4, x4, #0x562
  22f9d0:	mov	x7, xzr
  22f9d4:	stp	x25, x22, [sp, #8]
  22f9d8:	str	xzr, [sp]
  22f9dc:	bl	2539f0 <log_object_internal@plt>
  22f9e0:	b	22fa94 <udev_event_apply_format+0x230>
  22f9e4:	cmp	x19, #0x2
  22f9e8:	b.cs	22f8e0 <udev_event_apply_format+0x7c>  // b.hs, b.nlast
  22f9ec:	mov	w8, #0xd                   	// #13
  22f9f0:	cbnz	w8, 22f900 <udev_event_apply_format+0x9c>
  22f9f4:	b	22f908 <udev_event_apply_format+0xa4>
  22f9f8:	str	xzr, [sp, #48]
  22f9fc:	ldr	x27, [x23]
  22fa00:	mov	x22, x25
  22fa04:	cbz	x27, 22fa18 <udev_event_apply_format+0x1b4>
  22fa08:	mov	w0, #0x1                   	// #1
  22fa0c:	bl	2535b0 <log_get_max_level_realm@plt>
  22fa10:	cmp	w0, #0x4
  22fa14:	b.ge	22fab4 <udev_event_apply_format+0x250>  // b.tcont
  22fa18:	ldr	x27, [sp, #48]
  22fa1c:	ldur	w28, [x29, #-20]
  22fa20:	cmp	x27, #0x0
  22fa24:	mov	w0, w28
  22fa28:	csel	x21, xzr, x24, eq  // eq = none
  22fa2c:	bl	2303e4 <format_type_to_string>
  22fa30:	mov	x25, x24
  22fa34:	mov	x24, x0
  22fa38:	mov	w0, w28
  22fa3c:	bl	23041c <format_type_to_char>
  22fa40:	and	w8, w0, #0xff
  22fa44:	adrp	x28, 20c000 <worker_hash_op+0x1ad0>
  22fa48:	str	w8, [sp, #24]
  22fa4c:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  22fa50:	add	x28, x28, #0x661
  22fa54:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  22fa58:	add	x8, x8, #0x8d0
  22fa5c:	mov	w0, #0x4                   	// #4
  22fa60:	mov	w3, #0x1d7                 	// #471
  22fa64:	mov	w1, w26
  22fa68:	mov	x2, x28
  22fa6c:	add	x4, x4, #0x562
  22fa70:	mov	x5, x21
  22fa74:	mov	x6, x27
  22fa78:	mov	x7, xzr
  22fa7c:	str	x24, [sp, #16]
  22fa80:	mov	x24, x25
  22fa84:	stp	xzr, x8, [sp]
  22fa88:	bl	2539f0 <log_object_internal@plt>
  22fa8c:	mov	x25, x22
  22fa90:	ldr	x22, [sp, #32]
  22fa94:	sxtw	x21, w0
  22fa98:	mov	w8, #0x1                   	// #1
  22fa9c:	cbnz	w8, 22f900 <udev_event_apply_format+0x9c>
  22faa0:	b	22f908 <udev_event_apply_format+0xa4>
  22faa4:	add	x1, sp, #0x30
  22faa8:	mov	x0, x27
  22faac:	bl	253a40 <sd_device_get_sysname@plt>
  22fab0:	b	22f9ac <udev_event_apply_format+0x148>
  22fab4:	add	x1, sp, #0x30
  22fab8:	mov	x0, x27
  22fabc:	bl	253a40 <sd_device_get_sysname@plt>
  22fac0:	b	22fa18 <udev_event_apply_format+0x1b4>
  22fac4:	cmp	w8, #0xd
  22fac8:	b.ne	22faf8 <udev_event_apply_format+0x294>  // b.any
  22facc:	cbz	x19, 22fbb4 <udev_event_apply_format+0x350>
  22fad0:	strb	wzr, [x20]
  22fad4:	mov	x0, x19
  22fad8:	add	sp, sp, #0x450
  22fadc:	ldp	x20, x19, [sp, #80]
  22fae0:	ldp	x22, x21, [sp, #64]
  22fae4:	ldp	x24, x23, [sp, #48]
  22fae8:	ldp	x26, x25, [sp, #32]
  22faec:	ldp	x28, x27, [sp, #16]
  22faf0:	ldp	x29, x30, [sp], #96
  22faf4:	ret
  22faf8:	mov	x19, x21
  22fafc:	b	22fad4 <udev_event_apply_format+0x270>
  22fb00:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  22fb04:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fb08:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22fb0c:	add	x1, x1, #0xc4f
  22fb10:	add	x2, x2, #0x661
  22fb14:	add	x4, x4, #0x2f
  22fb18:	mov	w0, #0x1                   	// #1
  22fb1c:	mov	w3, #0x1bd                 	// #445
  22fb20:	bl	253740 <log_assert_failed_realm@plt>
  22fb24:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22fb28:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fb2c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22fb30:	add	x1, x1, #0x86b
  22fb34:	add	x2, x2, #0x661
  22fb38:	add	x4, x4, #0x2f
  22fb3c:	mov	w0, #0x1                   	// #1
  22fb40:	mov	w3, #0x1be                 	// #446
  22fb44:	bl	253740 <log_assert_failed_realm@plt>
  22fb48:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22fb4c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fb50:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22fb54:	add	x1, x1, #0x876
  22fb58:	add	x2, x2, #0x661
  22fb5c:	add	x4, x4, #0x2f
  22fb60:	mov	w0, #0x1                   	// #1
  22fb64:	mov	w3, #0x1bf                 	// #447
  22fb68:	bl	253740 <log_assert_failed_realm@plt>
  22fb6c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  22fb70:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fb74:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22fb78:	add	x1, x1, #0x225
  22fb7c:	add	x2, x2, #0x661
  22fb80:	add	x4, x4, #0x2f
  22fb84:	mov	w0, #0x1                   	// #1
  22fb88:	mov	w3, #0x1c0                 	// #448
  22fb8c:	bl	253740 <log_assert_failed_realm@plt>
  22fb90:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  22fb94:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fb98:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22fb9c:	add	x1, x1, #0x975
  22fba0:	add	x2, x2, #0x661
  22fba4:	add	x4, x4, #0x2f
  22fba8:	mov	w0, #0x1                   	// #1
  22fbac:	mov	w3, #0x1c1                 	// #449
  22fbb0:	bl	253740 <log_assert_failed_realm@plt>
  22fbb4:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  22fbb8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fbbc:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  22fbc0:	add	x1, x1, #0xde9
  22fbc4:	add	x2, x2, #0x661
  22fbc8:	add	x4, x4, #0x2f
  22fbcc:	mov	w0, #0x1                   	// #1
  22fbd0:	mov	w3, #0x1e3                 	// #483
  22fbd4:	bl	253740 <log_assert_failed_realm@plt>

000000000022fbd8 <get_subst_type>:
  22fbd8:	stp	x29, x30, [sp, #-80]!
  22fbdc:	stp	x26, x25, [sp, #16]
  22fbe0:	stp	x24, x23, [sp, #32]
  22fbe4:	stp	x22, x21, [sp, #48]
  22fbe8:	stp	x20, x19, [sp, #64]
  22fbec:	ldr	x23, [x0]
  22fbf0:	mov	x29, sp
  22fbf4:	cbz	x23, 22fd7c <get_subst_type+0x1a4>
  22fbf8:	mov	x20, x2
  22fbfc:	cbz	x2, 22fda0 <get_subst_type+0x1c8>
  22fc00:	ldrb	w8, [x23]
  22fc04:	mov	x21, x3
  22fc08:	mov	x19, x0
  22fc0c:	mov	w22, w1
  22fc10:	cmp	w8, #0x25
  22fc14:	b.eq	22fc38 <get_subst_type+0x60>  // b.none
  22fc18:	cmp	w8, #0x24
  22fc1c:	b.ne	22fc54 <get_subst_type+0x7c>  // b.any
  22fc20:	ldrb	w8, [x23, #1]!
  22fc24:	cmp	w8, #0x24
  22fc28:	b.ne	22fc5c <get_subst_type+0x84>  // b.any
  22fc2c:	mov	w0, wzr
  22fc30:	str	x23, [x19]
  22fc34:	b	22fd64 <get_subst_type+0x18c>
  22fc38:	mov	x9, x23
  22fc3c:	ldrb	w8, [x9, #1]!
  22fc40:	cmp	w8, #0x25
  22fc44:	b.ne	22fc8c <get_subst_type+0xb4>  // b.any
  22fc48:	mov	w0, wzr
  22fc4c:	str	x9, [x19]
  22fc50:	b	22fd64 <get_subst_type+0x18c>
  22fc54:	mov	w0, wzr
  22fc58:	b	22fd64 <get_subst_type+0x18c>
  22fc5c:	adrp	x26, 265000 <__lxstat64@plt+0xfe00>
  22fc60:	mov	x25, xzr
  22fc64:	add	x26, x26, #0x220
  22fc68:	ldr	x1, [x26]
  22fc6c:	mov	x0, x23
  22fc70:	bl	2320d4 <startswith>
  22fc74:	cbnz	x0, 22fd20 <get_subst_type+0x148>
  22fc78:	add	x25, x25, #0x1
  22fc7c:	cmp	x25, #0x12
  22fc80:	add	x26, x26, #0x10
  22fc84:	b.ne	22fc68 <get_subst_type+0x90>  // b.any
  22fc88:	b	22fcb4 <get_subst_type+0xdc>
  22fc8c:	adrp	x9, 265000 <__lxstat64@plt+0xfe00>
  22fc90:	mov	x25, xzr
  22fc94:	add	x9, x9, #0x228
  22fc98:	ldrb	w10, [x9]
  22fc9c:	cmp	w8, w10
  22fca0:	b.eq	22fd2c <get_subst_type+0x154>  // b.none
  22fca4:	add	x25, x25, #0x1
  22fca8:	cmp	x25, #0x12
  22fcac:	add	x9, x9, #0x10
  22fcb0:	b.ne	22fc98 <get_subst_type+0xc0>  // b.any
  22fcb4:	mov	x24, xzr
  22fcb8:	cbz	x24, 22fd34 <get_subst_type+0x15c>
  22fcbc:	ldrb	w8, [x24]
  22fcc0:	cmp	w8, #0x7b
  22fcc4:	b.ne	22fcfc <get_subst_type+0x124>  // b.any
  22fcc8:	add	x22, x24, #0x1
  22fccc:	mov	w1, #0x7d                  	// #125
  22fcd0:	mov	x0, x22
  22fcd4:	bl	253a60 <strchr@plt>
  22fcd8:	cbz	x0, 22fcf0 <get_subst_type+0x118>
  22fcdc:	sub	x3, x0, x22
  22fce0:	sub	x8, x3, #0x1
  22fce4:	mov	x23, x0
  22fce8:	cmp	x8, #0x3fe
  22fcec:	b.ls	22fd44 <get_subst_type+0x16c>  // b.plast
  22fcf0:	mov	w8, wzr
  22fcf4:	tbnz	w8, #0, 22fd00 <get_subst_type+0x128>
  22fcf8:	b	22fd60 <get_subst_type+0x188>
  22fcfc:	strb	wzr, [x21]
  22fd00:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  22fd04:	add	x8, x8, #0x220
  22fd08:	add	x8, x8, x25, lsl #4
  22fd0c:	ldr	w8, [x8, #12]
  22fd10:	mov	w0, #0x1                   	// #1
  22fd14:	str	x24, [x19]
  22fd18:	str	w8, [x20]
  22fd1c:	b	22fd64 <get_subst_type+0x18c>
  22fd20:	mov	x24, x0
  22fd24:	cbnz	x24, 22fcbc <get_subst_type+0xe4>
  22fd28:	b	22fd34 <get_subst_type+0x15c>
  22fd2c:	add	x24, x23, #0x2
  22fd30:	cbnz	x24, 22fcbc <get_subst_type+0xe4>
  22fd34:	tst	w22, #0x1
  22fd38:	mov	w8, #0xffffffea            	// #-22
  22fd3c:	csel	w0, w8, wzr, ne  // ne = any
  22fd40:	b	22fd64 <get_subst_type+0x18c>
  22fd44:	mov	w1, #0x400                 	// #1024
  22fd48:	mov	x0, x21
  22fd4c:	mov	x2, x22
  22fd50:	bl	253fd0 <strnscpy@plt>
  22fd54:	add	x24, x23, #0x1
  22fd58:	mov	w8, #0x1                   	// #1
  22fd5c:	tbnz	w8, #0, 22fd00 <get_subst_type+0x128>
  22fd60:	mov	w0, #0xffffffea            	// #-22
  22fd64:	ldp	x20, x19, [sp, #64]
  22fd68:	ldp	x22, x21, [sp, #48]
  22fd6c:	ldp	x24, x23, [sp, #32]
  22fd70:	ldp	x26, x25, [sp, #16]
  22fd74:	ldp	x29, x30, [sp], #80
  22fd78:	ret
  22fd7c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  22fd80:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fd84:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22fd88:	add	x1, x1, #0xef6
  22fd8c:	add	x2, x2, #0x661
  22fd90:	add	x4, x4, #0x677
  22fd94:	mov	w0, #0x1                   	// #1
  22fd98:	mov	w3, #0x9d                  	// #157
  22fd9c:	bl	253740 <log_assert_failed_realm@plt>
  22fda0:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  22fda4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  22fda8:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  22fdac:	add	x1, x1, #0x71b
  22fdb0:	add	x2, x2, #0x661
  22fdb4:	add	x4, x4, #0x677
  22fdb8:	mov	w0, #0x1                   	// #1
  22fdbc:	mov	w3, #0x9e                  	// #158
  22fdc0:	bl	253740 <log_assert_failed_realm@plt>

000000000022fdc4 <udev_event_subst_format>:
  22fdc4:	stp	x29, x30, [sp, #-96]!
  22fdc8:	str	x28, [sp, #16]
  22fdcc:	stp	x26, x25, [sp, #32]
  22fdd0:	stp	x24, x23, [sp, #48]
  22fdd4:	stp	x22, x21, [sp, #64]
  22fdd8:	stp	x20, x19, [sp, #80]
  22fddc:	mov	x29, sp
  22fde0:	sub	sp, sp, #0x230
  22fde4:	ldr	x21, [x0]
  22fde8:	cmp	w1, #0xf
  22fdec:	str	xzr, [x29, #24]
  22fdf0:	stur	x3, [x29, #-8]
  22fdf4:	b.hi	2303c0 <udev_event_subst_format+0x5fc>  // b.pmore
  22fdf8:	adrp	x9, 218000 <worker_hash_op+0xdad0>
  22fdfc:	mov	w8, w1
  22fe00:	add	x9, x9, #0x9d8
  22fe04:	adr	x10, 22fe28 <udev_event_subst_format+0x64>
  22fe08:	ldrb	w11, [x9, x8]
  22fe0c:	add	x10, x10, x11, lsl #2
  22fe10:	mov	x20, x4
  22fe14:	mov	x19, x3
  22fe18:	mov	x22, x2
  22fe1c:	mov	w24, w1
  22fe20:	mov	x23, x0
  22fe24:	br	x10
  22fe28:	add	x1, sp, #0x28
  22fe2c:	mov	x0, x21
  22fe30:	bl	253bf0 <sd_device_get_devnum@plt>
  22fe34:	tbz	w0, #31, 22fed8 <udev_event_subst_format+0x114>
  22fe38:	cmn	w0, #0x2
  22fe3c:	b.eq	22fed8 <udev_event_subst_format+0x114>  // b.none
  22fe40:	tbz	wzr, #0, 230028 <udev_event_subst_format+0x264>
  22fe44:	b	23000c <udev_event_subst_format+0x248>
  22fe48:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  22fe4c:	add	x2, x2, #0x667
  22fe50:	b	230000 <udev_event_subst_format+0x23c>
  22fe54:	add	x1, sp, #0x28
  22fe58:	mov	x0, x21
  22fe5c:	bl	253d60 <sd_device_get_parent@plt>
  22fe60:	cmn	w0, #0x13
  22fe64:	b.eq	230374 <udev_event_subst_format+0x5b0>  // b.none
  22fe68:	tbnz	w0, #31, 230028 <udev_event_subst_format+0x264>
  22fe6c:	ldr	x0, [sp, #40]
  22fe70:	add	x1, x29, #0x18
  22fe74:	bl	253ad0 <sd_device_get_devname@plt>
  22fe78:	cmn	w0, #0x2
  22fe7c:	b.eq	230374 <udev_event_subst_format+0x5b0>  // b.none
  22fe80:	tbz	w0, #31, 22feb8 <udev_event_subst_format+0xf4>
  22fe84:	b	230028 <udev_event_subst_format+0x264>
  22fe88:	add	x1, x29, #0x18
  22fe8c:	mov	x0, x21
  22fe90:	bl	253fe0 <sd_device_get_sysnum@plt>
  22fe94:	cmn	w0, #0x2
  22fe98:	b.eq	230374 <udev_event_subst_format+0x5b0>  // b.none
  22fe9c:	b	22fff8 <udev_event_subst_format+0x234>
  22fea0:	ldr	x2, [x23, #24]
  22fea4:	cbnz	x2, 230000 <udev_event_subst_format+0x23c>
  22fea8:	add	x1, x29, #0x18
  22feac:	mov	x0, x21
  22feb0:	bl	253ad0 <sd_device_get_devname@plt>
  22feb4:	tbnz	w0, #31, 22fec4 <udev_event_subst_format+0x100>
  22feb8:	ldr	x8, [x29, #24]
  22febc:	add	x2, x8, #0x5
  22fec0:	b	230000 <udev_event_subst_format+0x23c>
  22fec4:	add	x1, x29, #0x18
  22fec8:	mov	x0, x21
  22fecc:	bl	253a40 <sd_device_get_sysname@plt>
  22fed0:	tbz	w0, #31, 22fffc <udev_event_subst_format+0x238>
  22fed4:	b	230028 <udev_event_subst_format+0x264>
  22fed8:	tbnz	w0, #31, 2300b8 <udev_event_subst_format+0x2f4>
  22fedc:	ldr	x0, [sp, #40]
  22fee0:	cmp	w24, #0x8
  22fee4:	b.ne	2300c8 <udev_event_subst_format+0x304>  // b.any
  22fee8:	bl	253c10 <gnu_dev_major@plt>
  22feec:	b	2300cc <udev_event_subst_format+0x308>
  22fef0:	mov	x0, x22
  22fef4:	bl	2305b8 <isempty>
  22fef8:	tbnz	w0, #0, 230214 <udev_event_subst_format+0x450>
  22fefc:	add	x2, x29, #0x18
  22ff00:	mov	x0, x21
  22ff04:	mov	x1, x22
  22ff08:	bl	253be0 <sd_device_get_property_value@plt>
  22ff0c:	cmn	w0, #0x2
  22ff10:	b.eq	230374 <udev_event_subst_format+0x5b0>  // b.none
  22ff14:	b	22fff8 <udev_event_subst_format+0x234>
  22ff18:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  22ff1c:	add	x2, x2, #0x33f
  22ff20:	b	230000 <udev_event_subst_format+0x23c>
  22ff24:	add	x1, x29, #0x18
  22ff28:	mov	x0, x21
  22ff2c:	bl	253ad0 <sd_device_get_devname@plt>
  22ff30:	cmn	w0, #0x2
  22ff34:	b.eq	230374 <udev_event_subst_format+0x5b0>  // b.none
  22ff38:	b	22fff8 <udev_event_subst_format+0x234>
  22ff3c:	mov	x0, x22
  22ff40:	bl	2305b8 <isempty>
  22ff44:	tbz	w0, #0, 230088 <udev_event_subst_format+0x2c4>
  22ff48:	mov	w8, #0x1                   	// #1
  22ff4c:	b	230204 <udev_event_subst_format+0x440>
  22ff50:	ldr	x0, [x23, #8]
  22ff54:	cbz	x0, 230374 <udev_event_subst_format+0x5b0>
  22ff58:	add	x1, x29, #0x18
  22ff5c:	bl	253a40 <sd_device_get_sysname@plt>
  22ff60:	tbz	w0, #31, 22fffc <udev_event_subst_format+0x238>
  22ff64:	b	230028 <udev_event_subst_format+0x264>
  22ff68:	mov	x0, x21
  22ff6c:	bl	253ff0 <sd_device_get_devlink_first@plt>
  22ff70:	ldur	x8, [x29, #-8]
  22ff74:	str	x0, [x29, #24]
  22ff78:	cmp	x8, x19
  22ff7c:	cset	w8, eq  // eq = none
  22ff80:	cbz	x0, 22ffd8 <udev_event_subst_format+0x214>
  22ff84:	adrp	x22, 20c000 <worker_hash_op+0x1ad0>
  22ff88:	add	x22, x22, #0x6c2
  22ff8c:	b	22ffbc <udev_event_subst_format+0x1f8>
  22ff90:	mov	x2, x22
  22ff94:	mov	x4, xzr
  22ff98:	bl	254000 <strpcpyl@plt>
  22ff9c:	mov	x20, x0
  22ffa0:	mov	x0, x21
  22ffa4:	bl	254010 <sd_device_get_devlink_next@plt>
  22ffa8:	ldur	x8, [x29, #-8]
  22ffac:	str	x0, [x29, #24]
  22ffb0:	cmp	x8, x19
  22ffb4:	cset	w8, eq  // eq = none
  22ffb8:	cbz	x0, 22ffd8 <udev_event_subst_format+0x214>
  22ffbc:	add	x3, x0, #0x5
  22ffc0:	sub	x0, x29, #0x8
  22ffc4:	mov	x1, x20
  22ffc8:	tbz	w8, #0, 22ff90 <udev_event_subst_format+0x1cc>
  22ffcc:	mov	x2, x3
  22ffd0:	bl	254020 <strpcpy@plt>
  22ffd4:	b	22ff9c <udev_event_subst_format+0x1d8>
  22ffd8:	tbz	w8, #0, 23000c <udev_event_subst_format+0x248>
  22ffdc:	b	230374 <udev_event_subst_format+0x5b0>
  22ffe0:	ldr	x0, [x23, #8]
  22ffe4:	cbz	x0, 230374 <udev_event_subst_format+0x5b0>
  22ffe8:	add	x1, x29, #0x18
  22ffec:	bl	254030 <sd_device_get_driver@plt>
  22fff0:	cmn	w0, #0x2
  22fff4:	b.eq	230374 <udev_event_subst_format+0x5b0>  // b.none
  22fff8:	tbnz	w0, #31, 230028 <udev_event_subst_format+0x264>
  22fffc:	ldr	x2, [x29, #24]
  230000:	sub	x0, x29, #0x8
  230004:	mov	x1, x20
  230008:	bl	254020 <strpcpy@plt>
  23000c:	ldur	x8, [x29, #-8]
  230010:	sub	x0, x8, x19
  230014:	b	230380 <udev_event_subst_format+0x5bc>
  230018:	add	x1, x29, #0x18
  23001c:	mov	x0, x21
  230020:	bl	253bd0 <sd_device_get_devpath@plt>
  230024:	tbz	w0, #31, 22fffc <udev_event_subst_format+0x238>
  230028:	sxtw	x0, w0
  23002c:	b	230380 <udev_event_subst_format+0x5bc>
  230030:	str	wzr, [sp, #32]
  230034:	ldr	x8, [x23, #32]
  230038:	cbz	x8, 2300c0 <udev_event_subst_format+0x2fc>
  23003c:	mov	x0, x22
  230040:	bl	2305b8 <isempty>
  230044:	tbnz	w0, #0, 230060 <udev_event_subst_format+0x29c>
  230048:	add	x1, sp, #0x20
  23004c:	mov	x0, x22
  230050:	bl	2305d4 <safe_atou_optional_plus>
  230054:	tbnz	w0, #31, 2302fc <udev_event_subst_format+0x538>
  230058:	cmp	w0, #0x0
  23005c:	cset	w24, ne  // ne = any
  230060:	ldr	w22, [sp, #32]
  230064:	ldr	x2, [x23, #32]
  230068:	cbz	w22, 2300f0 <udev_event_subst_format+0x32c>
  23006c:	mov	x0, x2
  230070:	bl	232124 <skip_leading_chars>
  230074:	cmp	w22, #0x1
  230078:	mov	x2, x0
  23007c:	b.ne	23021c <udev_event_subst_format+0x458>  // b.any
  230080:	mov	w23, #0x1                   	// #1
  230084:	b	23027c <udev_event_subst_format+0x4b8>
  230088:	add	x1, sp, #0x28
  23008c:	mov	w2, #0x200                 	// #512
  230090:	mov	w3, #0x1                   	// #1
  230094:	mov	x0, x22
  230098:	add	x24, sp, #0x28
  23009c:	bl	254040 <util_resolve_subsys_kernel@plt>
  2300a0:	cbz	w0, 230100 <udev_event_subst_format+0x33c>
  2300a4:	ldr	x8, [x29, #24]
  2300a8:	cbz	x8, 23010c <udev_event_subst_format+0x348>
  2300ac:	ldr	x8, [x29, #24]
  2300b0:	cbnz	x8, 230140 <udev_event_subst_format+0x37c>
  2300b4:	b	230124 <udev_event_subst_format+0x360>
  2300b8:	mov	w3, wzr
  2300bc:	b	2300d0 <udev_event_subst_format+0x30c>
  2300c0:	mov	w8, #0x3                   	// #3
  2300c4:	b	230364 <udev_event_subst_format+0x5a0>
  2300c8:	bl	254050 <gnu_dev_minor@plt>
  2300cc:	mov	w3, w0
  2300d0:	adrp	x2, 20b000 <worker_hash_op+0xad0>
  2300d4:	add	x2, x2, #0x93c
  2300d8:	sub	x0, x29, #0x8
  2300dc:	mov	x1, x20
  2300e0:	bl	254060 <strpcpyf@plt>
  2300e4:	mov	w8, #0x1                   	// #1
  2300e8:	tbnz	w8, #0, 23000c <udev_event_subst_format+0x248>
  2300ec:	b	230380 <udev_event_subst_format+0x5bc>
  2300f0:	sub	x0, x29, #0x8
  2300f4:	mov	x1, x20
  2300f8:	bl	254020 <strpcpy@plt>
  2300fc:	b	230360 <udev_event_subst_format+0x59c>
  230100:	str	x24, [x29, #24]
  230104:	ldr	x8, [x29, #24]
  230108:	cbnz	x8, 2300ac <udev_event_subst_format+0x2e8>
  23010c:	add	x2, x29, #0x18
  230110:	mov	x0, x21
  230114:	mov	x1, x22
  230118:	bl	254070 <sd_device_get_sysattr_value@plt>
  23011c:	ldr	x8, [x29, #24]
  230120:	cbnz	x8, 230140 <udev_event_subst_format+0x37c>
  230124:	ldr	x0, [x23, #8]
  230128:	cbz	x0, 230140 <udev_event_subst_format+0x37c>
  23012c:	cmp	x0, x21
  230130:	b.eq	230140 <udev_event_subst_format+0x37c>  // b.none
  230134:	add	x2, x29, #0x18
  230138:	mov	x1, x22
  23013c:	bl	254070 <sd_device_get_sysattr_value@plt>
  230140:	ldr	x2, [x29, #24]
  230144:	cbz	x2, 230200 <udev_event_subst_format+0x43c>
  230148:	add	x8, sp, #0x28
  23014c:	cmp	x2, x8
  230150:	b.eq	230160 <udev_event_subst_format+0x39c>  // b.none
  230154:	add	x0, sp, #0x28
  230158:	mov	w1, #0x200                 	// #512
  23015c:	bl	253f50 <strscpy@plt>
  230160:	add	x0, sp, #0x28
  230164:	mov	x1, xzr
  230168:	bl	254080 <delete_trailing_chars@plt>
  23016c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  230170:	add	x1, x1, #0xa56
  230174:	add	x0, sp, #0x28
  230178:	bl	254090 <util_replace_chars@plt>
  23017c:	mov	x22, x0
  230180:	cmp	w22, #0x1
  230184:	b.lt	2301e8 <udev_event_subst_format+0x424>  // b.tstop
  230188:	str	xzr, [sp, #32]
  23018c:	cbz	x21, 2301a0 <udev_event_subst_format+0x3dc>
  230190:	mov	w0, #0x1                   	// #1
  230194:	bl	2535b0 <log_get_max_level_realm@plt>
  230198:	cmp	w0, #0x7
  23019c:	b.ge	2303a0 <udev_event_subst_format+0x5dc>  // b.tcont
  2301a0:	ldr	x6, [sp, #32]
  2301a4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2301a8:	add	x8, x8, #0xb64
  2301ac:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2301b0:	cmp	x6, #0x0
  2301b4:	csel	x5, xzr, x8, eq  // eq = none
  2301b8:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  2301bc:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  2301c0:	add	x8, x8, #0x984
  2301c4:	add	x2, x2, #0x661
  2301c8:	add	x4, x4, #0x102
  2301cc:	mov	w0, #0x7                   	// #7
  2301d0:	mov	w3, #0x16e                 	// #366
  2301d4:	mov	w1, wzr
  2301d8:	mov	x7, xzr
  2301dc:	str	w22, [sp, #16]
  2301e0:	stp	xzr, x8, [sp]
  2301e4:	bl	2539f0 <log_object_internal@plt>
  2301e8:	sub	x0, x29, #0x8
  2301ec:	add	x2, sp, #0x28
  2301f0:	mov	x1, x20
  2301f4:	bl	254020 <strpcpy@plt>
  2301f8:	mov	w8, #0x2                   	// #2
  2301fc:	b	230204 <udev_event_subst_format+0x440>
  230200:	mov	w8, #0x3                   	// #3
  230204:	cmp	w8, #0x2
  230208:	b.eq	23000c <udev_event_subst_format+0x248>  // b.none
  23020c:	cmp	w8, #0x3
  230210:	b.eq	230374 <udev_event_subst_format+0x5b0>  // b.none
  230214:	mov	x0, #0xffffffffffffffea    	// #-22
  230218:	b	230380 <udev_event_subst_format+0x5bc>
  23021c:	mov	x26, #0x2601                	// #9729
  230220:	mov	w25, #0x1                   	// #1
  230224:	movk	x26, #0x1, lsl #32
  230228:	mov	w23, #0x1                   	// #1
  23022c:	ldrb	w8, [x2]
  230230:	cbnz	w8, 230240 <udev_event_subst_format+0x47c>
  230234:	b	230258 <udev_event_subst_format+0x494>
  230238:	ldrb	w8, [x2, #1]!
  23023c:	cbz	w8, 230258 <udev_event_subst_format+0x494>
  230240:	and	w9, w8, #0xff
  230244:	cmp	w9, #0x3f
  230248:	b.hi	230238 <udev_event_subst_format+0x474>  // b.pmore
  23024c:	lsl	x8, x25, x8
  230250:	and	x8, x8, x26
  230254:	cbz	x8, 230238 <udev_event_subst_format+0x474>
  230258:	mov	x0, x2
  23025c:	bl	232124 <skip_leading_chars>
  230260:	ldrb	w8, [x0]
  230264:	mov	x2, x0
  230268:	cbz	w8, 23027c <udev_event_subst_format+0x4b8>
  23026c:	add	w23, w23, #0x1
  230270:	cmp	w23, w22
  230274:	b.ne	23022c <udev_event_subst_format+0x468>  // b.any
  230278:	mov	w23, w22
  23027c:	cmp	w23, w22
  230280:	b.ne	230298 <udev_event_subst_format+0x4d4>  // b.any
  230284:	tbz	w24, #0, 230308 <udev_event_subst_format+0x544>
  230288:	sub	x0, x29, #0x8
  23028c:	mov	x1, x20
  230290:	bl	254020 <strpcpy@plt>
  230294:	b	230358 <udev_event_subst_format+0x594>
  230298:	str	xzr, [sp, #40]
  23029c:	cbz	x21, 2302b0 <udev_event_subst_format+0x4ec>
  2302a0:	mov	w0, #0x1                   	// #1
  2302a4:	bl	2535b0 <log_get_max_level_realm@plt>
  2302a8:	cmp	w0, #0x7
  2302ac:	b.ge	2303b0 <udev_event_subst_format+0x5ec>  // b.tcont
  2302b0:	ldr	x6, [sp, #40]
  2302b4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2302b8:	add	x8, x8, #0xb64
  2302bc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2302c0:	cmp	x6, #0x0
  2302c4:	csel	x5, xzr, x8, eq  // eq = none
  2302c8:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  2302cc:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  2302d0:	add	x8, x8, #0x170
  2302d4:	add	x2, x2, #0x661
  2302d8:	add	x4, x4, #0x102
  2302dc:	mov	w0, #0x7                   	// #7
  2302e0:	mov	w3, #0x142                 	// #322
  2302e4:	mov	w1, wzr
  2302e8:	mov	x7, xzr
  2302ec:	stp	xzr, x8, [sp]
  2302f0:	bl	2539f0 <log_object_internal@plt>
  2302f4:	mov	w8, #0x3                   	// #3
  2302f8:	b	23035c <udev_event_subst_format+0x598>
  2302fc:	sxtw	x0, w0
  230300:	mov	w8, #0x1                   	// #1
  230304:	b	230364 <udev_event_subst_format+0x5a0>
  230308:	ldrb	w9, [x2]
  23030c:	mov	x8, x2
  230310:	cbz	w9, 230348 <udev_event_subst_format+0x584>
  230314:	mov	x10, #0x2601                	// #9729
  230318:	movk	x10, #0x1, lsl #32
  23031c:	mov	w11, #0x1                   	// #1
  230320:	mov	x8, x2
  230324:	b	230330 <udev_event_subst_format+0x56c>
  230328:	ldrb	w9, [x8, #1]!
  23032c:	cbz	w9, 230348 <udev_event_subst_format+0x584>
  230330:	and	w12, w9, #0xff
  230334:	cmp	w12, #0x3f
  230338:	b.hi	230328 <udev_event_subst_format+0x564>  // b.pmore
  23033c:	lsl	x9, x11, x9
  230340:	and	x9, x9, x10
  230344:	cbz	x9, 230328 <udev_event_subst_format+0x564>
  230348:	sub	x3, x8, x2
  23034c:	sub	x0, x29, #0x8
  230350:	mov	x1, x20
  230354:	bl	2540a0 <strnpcpy@plt>
  230358:	mov	w8, wzr
  23035c:	cbnz	w8, 230364 <udev_event_subst_format+0x5a0>
  230360:	mov	w8, #0x2                   	// #2
  230364:	cmp	w8, #0x2
  230368:	b.eq	23000c <udev_event_subst_format+0x248>  // b.none
  23036c:	cmp	w8, #0x3
  230370:	b.ne	230380 <udev_event_subst_format+0x5bc>  // b.any
  230374:	ldur	x8, [x29, #-8]
  230378:	mov	x0, xzr
  23037c:	strb	wzr, [x8]
  230380:	add	sp, sp, #0x230
  230384:	ldp	x20, x19, [sp, #80]
  230388:	ldp	x22, x21, [sp, #64]
  23038c:	ldp	x24, x23, [sp, #48]
  230390:	ldp	x26, x25, [sp, #32]
  230394:	ldr	x28, [sp, #16]
  230398:	ldp	x29, x30, [sp], #96
  23039c:	ret
  2303a0:	add	x1, sp, #0x20
  2303a4:	mov	x0, x21
  2303a8:	bl	253a40 <sd_device_get_sysname@plt>
  2303ac:	b	2301a0 <udev_event_subst_format+0x3dc>
  2303b0:	add	x1, sp, #0x28
  2303b4:	mov	x0, x21
  2303b8:	bl	253a40 <sd_device_get_sysname@plt>
  2303bc:	b	2302b0 <udev_event_subst_format+0x4ec>
  2303c0:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2303c4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2303c8:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  2303cc:	add	x1, x1, #0xf00
  2303d0:	add	x2, x2, #0x661
  2303d4:	add	x4, x4, #0xa8f
  2303d8:	mov	w0, #0x1                   	// #1
  2303dc:	mov	w3, #0x1ad                 	// #429
  2303e0:	bl	253730 <log_assert_failed_unreachable_realm@plt>

00000000002303e4 <format_type_to_string>:
  2303e4:	adrp	x9, 265000 <__lxstat64@plt+0xfe00>
  2303e8:	mov	x8, xzr
  2303ec:	add	x9, x9, #0x220
  2303f0:	add	x10, x9, x8
  2303f4:	ldr	w10, [x10, #12]
  2303f8:	cmp	w10, w0
  2303fc:	b.eq	230414 <format_type_to_string+0x30>  // b.none
  230400:	add	x8, x8, #0x10
  230404:	cmp	x8, #0x120
  230408:	b.ne	2303f0 <format_type_to_string+0xc>  // b.any
  23040c:	mov	x0, xzr
  230410:	ret
  230414:	ldr	x0, [x9, x8]
  230418:	ret

000000000023041c <format_type_to_char>:
  23041c:	adrp	x9, 265000 <__lxstat64@plt+0xfe00>
  230420:	mov	x8, xzr
  230424:	add	x9, x9, #0x220
  230428:	add	x10, x9, x8
  23042c:	ldr	w11, [x10, #12]
  230430:	cmp	w11, w0
  230434:	b.eq	23044c <format_type_to_char+0x30>  // b.none
  230438:	add	x8, x8, #0x10
  23043c:	cmp	x8, #0x120
  230440:	b.ne	230428 <format_type_to_char+0xc>  // b.any
  230444:	mov	w0, wzr
  230448:	ret
  23044c:	ldrb	w0, [x10, #8]
  230450:	ret

0000000000230454 <udev_check_format>:
  230454:	stp	x29, x30, [sp, #-80]!
  230458:	stp	x28, x25, [sp, #16]
  23045c:	stp	x24, x23, [sp, #32]
  230460:	stp	x22, x21, [sp, #48]
  230464:	stp	x20, x19, [sp, #64]
  230468:	mov	x29, sp
  23046c:	sub	sp, sp, #0x420
  230470:	sub	x22, x29, #0x10
  230474:	str	x0, [x22]
  230478:	ldrb	w8, [x0]
  23047c:	cbz	w8, 23054c <udev_check_format+0xf8>
  230480:	adrp	x23, 20a000 <parse_argv.options-0x3f0>
  230484:	mov	x19, x2
  230488:	mov	x20, x0
  23048c:	mov	x21, x1
  230490:	add	x23, x23, #0x5a6
  230494:	sub	x0, x29, #0x10
  230498:	sub	x2, x29, #0x4
  23049c:	add	x3, sp, #0x10
  2304a0:	mov	w1, #0x1                   	// #1
  2304a4:	bl	22fbd8 <get_subst_type>
  2304a8:	tbnz	w0, #31, 230554 <udev_check_format+0x100>
  2304ac:	cbnz	w0, 2304c8 <udev_check_format+0x74>
  2304b0:	ldr	x8, [x22]
  2304b4:	add	x9, x8, #0x1
  2304b8:	str	x9, [x22]
  2304bc:	ldrb	w8, [x8, #1]
  2304c0:	cbnz	w8, 230494 <udev_check_format+0x40>
  2304c4:	b	23054c <udev_check_format+0xf8>
  2304c8:	ldur	w25, [x29, #-4]
  2304cc:	sub	w8, w25, #0x1
  2304d0:	cmp	w8, #0x1
  2304d4:	b.hi	2304e4 <udev_check_format+0x90>  // b.pmore
  2304d8:	add	x0, sp, #0x10
  2304dc:	bl	2305b8 <isempty>
  2304e0:	tbnz	w0, #0, 230590 <udev_check_format+0x13c>
  2304e4:	cmp	w25, #0xa
  2304e8:	b.ne	230538 <udev_check_format+0xe4>  // b.any
  2304ec:	add	x0, sp, #0x10
  2304f0:	bl	2305b8 <isempty>
  2304f4:	tbnz	w0, #0, 230538 <udev_check_format+0xe4>
  2304f8:	add	x0, sp, #0x10
  2304fc:	add	x1, sp, #0xc
  230500:	bl	2305d4 <safe_atou_optional_plus>
  230504:	tbnz	w0, #31, 230510 <udev_check_format+0xbc>
  230508:	mov	w8, #0x1                   	// #1
  23050c:	b	230530 <udev_check_format+0xdc>
  230510:	cbz	x21, 230520 <udev_check_format+0xcc>
  230514:	ldr	x8, [x22]
  230518:	sub	x8, x8, x20
  23051c:	str	x8, [x21]
  230520:	mov	w8, wzr
  230524:	cbz	x19, 23052c <udev_check_format+0xd8>
  230528:	str	x23, [x19]
  23052c:	mov	w24, w0
  230530:	mov	w0, w24
  230534:	cbz	w8, 230574 <udev_check_format+0x120>
  230538:	ldr	x8, [x22]
  23053c:	mov	w0, wzr
  230540:	ldrb	w8, [x8]
  230544:	cbnz	w8, 230494 <udev_check_format+0x40>
  230548:	b	230574 <udev_check_format+0x120>
  23054c:	mov	w0, wzr
  230550:	b	230574 <udev_check_format+0x120>
  230554:	cbz	x21, 230564 <udev_check_format+0x110>
  230558:	ldr	x8, [x22]
  23055c:	sub	x8, x8, x20
  230560:	str	x8, [x21]
  230564:	cbz	x19, 230574 <udev_check_format+0x120>
  230568:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23056c:	add	x8, x8, #0x22a
  230570:	str	x8, [x19]
  230574:	add	sp, sp, #0x420
  230578:	ldp	x20, x19, [sp, #64]
  23057c:	ldp	x22, x21, [sp, #48]
  230580:	ldp	x24, x23, [sp, #32]
  230584:	ldp	x28, x25, [sp, #16]
  230588:	ldp	x29, x30, [sp], #80
  23058c:	ret
  230590:	cbz	x21, 2305a0 <udev_check_format+0x14c>
  230594:	ldr	x8, [x22]
  230598:	sub	x8, x8, x20
  23059c:	str	x8, [x21]
  2305a0:	cbz	x19, 2305b0 <udev_check_format+0x15c>
  2305a4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2305a8:	add	x8, x8, #0xc61
  2305ac:	str	x8, [x19]
  2305b0:	mov	w0, #0xffffffea            	// #-22
  2305b4:	b	230574 <udev_check_format+0x120>

00000000002305b8 <isempty>:
  2305b8:	cbz	x0, 2305cc <isempty+0x14>
  2305bc:	ldrb	w8, [x0]
  2305c0:	cmp	w8, #0x0
  2305c4:	cset	w0, eq  // eq = none
  2305c8:	ret
  2305cc:	mov	w0, #0x1                   	// #1
  2305d0:	ret

00000000002305d4 <safe_atou_optional_plus>:
  2305d4:	stp	x29, x30, [sp, #-48]!
  2305d8:	stp	x22, x21, [sp, #16]
  2305dc:	stp	x20, x19, [sp, #32]
  2305e0:	mov	x29, sp
  2305e4:	cbz	x0, 230670 <safe_atou_optional_plus+0x9c>
  2305e8:	mov	x19, x1
  2305ec:	cbz	x1, 230694 <safe_atou_optional_plus+0xc0>
  2305f0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2305f4:	add	x1, x1, #0x3fb
  2305f8:	mov	x20, x0
  2305fc:	bl	2540b0 <endswith@plt>
  230600:	mov	x21, x0
  230604:	cbz	x0, 230640 <safe_atou_optional_plus+0x6c>
  230608:	sub	x1, x21, x20
  23060c:	mov	x0, x20
  230610:	bl	253ec0 <strnlen@plt>
  230614:	add	x8, x0, #0x10
  230618:	and	x8, x8, #0xfffffffffffffff0
  23061c:	mov	x9, sp
  230620:	sub	x22, x9, x8
  230624:	mov	x2, x0
  230628:	mov	sp, x22
  23062c:	strb	wzr, [x22, x0]
  230630:	mov	x0, x22
  230634:	mov	x1, x20
  230638:	bl	2540c0 <memcpy@plt>
  23063c:	mov	x20, x22
  230640:	cmp	x21, #0x0
  230644:	mov	x0, x20
  230648:	mov	x1, x19
  23064c:	cset	w21, ne  // ne = any
  230650:	bl	232154 <safe_atou>
  230654:	cmp	w0, #0x0
  230658:	csel	w0, w0, w21, lt  // lt = tstop
  23065c:	mov	sp, x29
  230660:	ldp	x20, x19, [sp, #32]
  230664:	ldp	x22, x21, [sp, #16]
  230668:	ldp	x29, x30, [sp], #48
  23066c:	ret
  230670:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  230674:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230678:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  23067c:	add	x1, x1, #0x42c
  230680:	add	x2, x2, #0x661
  230684:	add	x4, x4, #0x11a
  230688:	mov	w0, #0x1                   	// #1
  23068c:	mov	w3, #0xd7                  	// #215
  230690:	bl	253740 <log_assert_failed_realm@plt>
  230694:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  230698:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23069c:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  2306a0:	add	x1, x1, #0xb2b
  2306a4:	add	x2, x2, #0x661
  2306a8:	add	x4, x4, #0x11a
  2306ac:	mov	w0, #0x1                   	// #1
  2306b0:	mov	w3, #0xd8                  	// #216
  2306b4:	bl	253740 <log_assert_failed_realm@plt>

00000000002306b8 <udev_event_spawn>:
  2306b8:	sub	sp, sp, #0x100
  2306bc:	stp	x29, x30, [sp, #160]
  2306c0:	add	x29, sp, #0xa0
  2306c4:	mov	x8, #0xffffffffffffffff    	// #-1
  2306c8:	str	x27, [sp, #176]
  2306cc:	stp	x26, x25, [sp, #192]
  2306d0:	stp	x24, x23, [sp, #208]
  2306d4:	stp	x22, x21, [sp, #224]
  2306d8:	stp	x20, x19, [sp, #240]
  2306dc:	stp	xzr, x8, [x29, #-16]
  2306e0:	str	x8, [x29, #24]
  2306e4:	stur	xzr, [x29, #-24]
  2306e8:	cbz	x0, 230c0c <udev_event_spawn+0x554>
  2306ec:	ldr	x8, [x0]
  2306f0:	mov	x20, x0
  2306f4:	cbz	x8, 230c30 <udev_event_spawn+0x578>
  2306f8:	mov	x22, x5
  2306fc:	mov	x21, x4
  230700:	mov	x19, x3
  230704:	mov	w24, w2
  230708:	mov	x23, x1
  23070c:	cbnz	x4, 230714 <udev_event_spawn+0x5c>
  230710:	cbnz	x22, 230c54 <udev_event_spawn+0x59c>
  230714:	cbnz	x21, 230728 <udev_event_spawn+0x70>
  230718:	mov	w0, #0x1                   	// #1
  23071c:	bl	2535b0 <log_get_max_level_realm@plt>
  230720:	cmp	w0, #0x6
  230724:	b.lt	23079c <udev_event_spawn+0xe4>  // b.tstop
  230728:	mov	w1, #0x800                 	// #2048
  23072c:	add	x0, x29, #0x18
  230730:	movk	w1, #0x8, lsl #16
  230734:	bl	2540d0 <pipe2@plt>
  230738:	cbz	w0, 23079c <udev_event_spawn+0xe4>
  23073c:	str	xzr, [sp, #48]
  230740:	ldr	x21, [x20]
  230744:	bl	253660 <__errno_location@plt>
  230748:	ldr	w20, [x0]
  23074c:	cbz	x21, 230760 <udev_event_spawn+0xa8>
  230750:	mov	w0, #0x1                   	// #1
  230754:	bl	2535b0 <log_get_max_level_realm@plt>
  230758:	cmp	w0, #0x3
  23075c:	b.ge	230b9c <udev_event_spawn+0x4e4>  // b.tcont
  230760:	ldr	x6, [sp, #48]
  230764:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  230768:	add	x8, x8, #0xb64
  23076c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230770:	cmp	x6, #0x0
  230774:	csel	x5, xzr, x8, eq  // eq = none
  230778:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  23077c:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  230780:	add	x8, x8, #0xc4f
  230784:	add	x2, x2, #0x661
  230788:	add	x4, x4, #0x12f
  23078c:	mov	w0, #0x3                   	// #3
  230790:	mov	w3, #0x2c7                 	// #711
  230794:	stp	x8, x19, [sp, #8]
  230798:	b	23081c <udev_event_spawn+0x164>
  23079c:	mov	w0, #0x1                   	// #1
  2307a0:	bl	2535b0 <log_get_max_level_realm@plt>
  2307a4:	cmp	w0, #0x6
  2307a8:	b.lt	23086c <udev_event_spawn+0x1b4>  // b.tstop
  2307ac:	mov	w1, #0x800                 	// #2048
  2307b0:	sub	x0, x29, #0x8
  2307b4:	movk	w1, #0x8, lsl #16
  2307b8:	bl	2540d0 <pipe2@plt>
  2307bc:	cbz	w0, 23086c <udev_event_spawn+0x1b4>
  2307c0:	str	xzr, [sp, #48]
  2307c4:	ldr	x21, [x20]
  2307c8:	bl	253660 <__errno_location@plt>
  2307cc:	ldr	w20, [x0]
  2307d0:	cbz	x21, 2307e4 <udev_event_spawn+0x12c>
  2307d4:	mov	w0, #0x1                   	// #1
  2307d8:	bl	2535b0 <log_get_max_level_realm@plt>
  2307dc:	cmp	w0, #0x3
  2307e0:	b.ge	230bac <udev_event_spawn+0x4f4>  // b.tcont
  2307e4:	ldr	x6, [sp, #48]
  2307e8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2307ec:	add	x8, x8, #0xb64
  2307f0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2307f4:	cmp	x6, #0x0
  2307f8:	csel	x5, xzr, x8, eq  // eq = none
  2307fc:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  230800:	add	x8, x8, #0xc4f
  230804:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  230808:	add	x2, x2, #0x661
  23080c:	add	x4, x4, #0x12f
  230810:	stp	x8, x19, [sp, #8]
  230814:	mov	w0, #0x3                   	// #3
  230818:	mov	w3, #0x2cc                 	// #716
  23081c:	mov	w1, w20
  230820:	str	xzr, [sp]
  230824:	mov	x7, xzr
  230828:	bl	2539f0 <log_object_internal@plt>
  23082c:	mov	w26, w0
  230830:	sub	x0, x29, #0x10
  230834:	bl	230ccc <strv_freep>
  230838:	sub	x0, x29, #0x8
  23083c:	bl	230cb8 <close_pairp>
  230840:	add	x0, x29, #0x18
  230844:	bl	230cb8 <close_pairp>
  230848:	mov	w0, w26
  23084c:	ldp	x20, x19, [sp, #240]
  230850:	ldp	x22, x21, [sp, #224]
  230854:	ldp	x24, x23, [sp, #208]
  230858:	ldp	x26, x25, [sp, #192]
  23085c:	ldr	x27, [sp, #176]
  230860:	ldp	x29, x30, [sp, #160]
  230864:	add	sp, sp, #0x100
  230868:	ret
  23086c:	mov	w2, #0x3                   	// #3
  230870:	mov	x0, x19
  230874:	mov	x1, xzr
  230878:	bl	2540e0 <strv_split_full@plt>
  23087c:	stur	x0, [x29, #-16]
  230880:	cbz	x0, 2308f8 <udev_event_spawn+0x240>
  230884:	ldr	x26, [x0]
  230888:	mov	x25, x0
  23088c:	mov	x0, x26
  230890:	bl	2305b8 <isempty>
  230894:	tbz	w0, #0, 230918 <udev_event_spawn+0x260>
  230898:	str	xzr, [sp, #48]
  23089c:	ldr	x20, [x20]
  2308a0:	cbz	x20, 2308b4 <udev_event_spawn+0x1fc>
  2308a4:	mov	w0, #0x1                   	// #1
  2308a8:	bl	2535b0 <log_get_max_level_realm@plt>
  2308ac:	cmp	w0, #0x3
  2308b0:	b.ge	230bbc <udev_event_spawn+0x504>  // b.tcont
  2308b4:	ldr	x6, [sp, #48]
  2308b8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2308bc:	add	x8, x8, #0xb64
  2308c0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2308c4:	cmp	x6, #0x0
  2308c8:	csel	x5, xzr, x8, eq  // eq = none
  2308cc:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  2308d0:	add	x8, x8, #0xa63
  2308d4:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  2308d8:	mov	w1, #0x16                  	// #22
  2308dc:	add	x2, x2, #0x661
  2308e0:	add	x4, x4, #0x12f
  2308e4:	stp	x8, x19, [sp, #8]
  2308e8:	mov	w0, #0x3                   	// #3
  2308ec:	movk	w1, #0x4000, lsl #16
  2308f0:	mov	w3, #0x2d4                 	// #724
  2308f4:	b	230820 <udev_event_spawn+0x168>
  2308f8:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  2308fc:	adrp	x3, 215000 <worker_hash_op+0xaad0>
  230900:	add	x1, x1, #0x661
  230904:	add	x3, x3, #0x12f
  230908:	mov	w0, #0x1                   	// #1
  23090c:	mov	w2, #0x2d0                 	// #720
  230910:	bl	2537c0 <log_oom_internal@plt>
  230914:	b	23082c <udev_event_spawn+0x174>
  230918:	mov	x0, x26
  23091c:	bl	2540f0 <path_is_absolute@plt>
  230920:	tbnz	w0, #0, 230980 <udev_event_spawn+0x2c8>
  230924:	adrp	x0, 212000 <worker_hash_op+0x7ad0>
  230928:	add	x0, x0, #0xa2c
  23092c:	mov	x2, #0xffffffffffffffff    	// #-1
  230930:	mov	x1, x26
  230934:	bl	254100 <path_join_internal@plt>
  230938:	cbz	x0, 230958 <udev_event_spawn+0x2a0>
  23093c:	mov	x26, x0
  230940:	ldr	x0, [x25]
  230944:	bl	2536e0 <free@plt>
  230948:	mov	w8, #0x1                   	// #1
  23094c:	str	x26, [x25]
  230950:	cbz	w8, 230830 <udev_event_spawn+0x178>
  230954:	b	230980 <udev_event_spawn+0x2c8>
  230958:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  23095c:	adrp	x3, 215000 <worker_hash_op+0xaad0>
  230960:	add	x1, x1, #0x661
  230964:	add	x3, x3, #0x12f
  230968:	mov	w0, #0x1                   	// #1
  23096c:	mov	w2, #0x2dc                 	// #732
  230970:	bl	2537c0 <log_oom_internal@plt>
  230974:	mov	w26, w0
  230978:	mov	w8, wzr
  23097c:	cbz	w8, 230830 <udev_event_spawn+0x178>
  230980:	ldr	x0, [x20]
  230984:	sub	x1, x29, #0x18
  230988:	bl	254110 <device_get_properties_strv@plt>
  23098c:	tbnz	w0, #31, 230a98 <udev_event_spawn+0x3e0>
  230990:	str	xzr, [sp, #48]
  230994:	ldr	x26, [x20]
  230998:	cbz	x26, 2309ac <udev_event_spawn+0x2f4>
  23099c:	mov	w0, #0x1                   	// #1
  2309a0:	bl	2535b0 <log_get_max_level_realm@plt>
  2309a4:	cmp	w0, #0x7
  2309a8:	b.ge	230bcc <udev_event_spawn+0x514>  // b.tcont
  2309ac:	ldr	x6, [sp, #48]
  2309b0:	adrp	x27, 211000 <worker_hash_op+0x6ad0>
  2309b4:	add	x27, x27, #0xb64
  2309b8:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  2309bc:	cmp	x6, #0x0
  2309c0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2309c4:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  2309c8:	csel	x5, xzr, x27, eq  // eq = none
  2309cc:	add	x8, x8, #0x32c
  2309d0:	add	x2, x2, #0x661
  2309d4:	add	x4, x4, #0x12f
  2309d8:	mov	w0, #0x7                   	// #7
  2309dc:	mov	w3, #0x2e5                 	// #741
  2309e0:	mov	w1, wzr
  2309e4:	mov	x7, xzr
  2309e8:	stp	x8, x19, [sp, #8]
  2309ec:	str	xzr, [sp]
  2309f0:	bl	2539f0 <log_object_internal@plt>
  2309f4:	add	x0, sp, #0x2c
  2309f8:	bl	230ce8 <safe_fork>
  2309fc:	mov	w26, w0
  230a00:	tbnz	w0, #31, 230af4 <udev_event_spawn+0x43c>
  230a04:	ldr	w1, [x29, #28]
  230a08:	cbz	w26, 230c78 <udev_event_spawn+0x5c0>
  230a0c:	mov	w0, w1
  230a10:	and	w24, w24, #0x1
  230a14:	bl	2538f0 <safe_close@plt>
  230a18:	ldur	w8, [x29, #-4]
  230a1c:	str	w0, [x29, #28]
  230a20:	mov	w0, w8
  230a24:	bl	2538f0 <safe_close@plt>
  230a28:	stur	w0, [x29, #-4]
  230a2c:	ldr	x25, [x20]
  230a30:	ldr	w26, [sp, #44]
  230a34:	mov	x0, x23
  230a38:	bl	230d14 <udev_warn_timeout>
  230a3c:	ldr	x8, [x20, #80]
  230a40:	ldr	w9, [x29, #24]
  230a44:	ldur	w10, [x29, #-8]
  230a48:	ldrb	w11, [sp, #42]
  230a4c:	ldrh	w12, [sp, #40]
  230a50:	stp	x0, x23, [sp, #72]
  230a54:	add	x0, sp, #0x30
  230a58:	stp	x25, x19, [sp, #48]
  230a5c:	str	w26, [sp, #64]
  230a60:	strb	w24, [sp, #96]
  230a64:	stp	x21, x22, [sp, #112]
  230a68:	str	x8, [sp, #88]
  230a6c:	strb	w11, [sp, #99]
  230a70:	sturh	w12, [sp, #97]
  230a74:	stp	w9, w10, [sp, #100]
  230a78:	str	xzr, [sp, #128]
  230a7c:	bl	230d34 <spawn_wait>
  230a80:	mov	w26, w0
  230a84:	tbnz	w0, #31, 230b44 <udev_event_spawn+0x48c>
  230a88:	cbz	x21, 230830 <udev_event_spawn+0x178>
  230a8c:	ldr	x8, [sp, #128]
  230a90:	strb	wzr, [x21, x8]
  230a94:	b	230830 <udev_event_spawn+0x178>
  230a98:	str	xzr, [sp, #48]
  230a9c:	ldr	x19, [x20]
  230aa0:	mov	w26, w0
  230aa4:	cbz	x19, 230ab8 <udev_event_spawn+0x400>
  230aa8:	mov	w0, #0x1                   	// #1
  230aac:	bl	2535b0 <log_get_max_level_realm@plt>
  230ab0:	cmp	w0, #0x3
  230ab4:	b.ge	230bdc <udev_event_spawn+0x524>  // b.tcont
  230ab8:	ldr	x6, [sp, #48]
  230abc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  230ac0:	add	x8, x8, #0xb64
  230ac4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230ac8:	cmp	x6, #0x0
  230acc:	csel	x5, xzr, x8, eq  // eq = none
  230ad0:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  230ad4:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  230ad8:	add	x8, x8, #0xa36
  230adc:	add	x2, x2, #0x661
  230ae0:	add	x4, x4, #0x12f
  230ae4:	mov	w0, #0x3                   	// #3
  230ae8:	mov	w3, #0x2e3                 	// #739
  230aec:	str	x8, [sp, #8]
  230af0:	b	230b90 <udev_event_spawn+0x4d8>
  230af4:	str	xzr, [sp, #48]
  230af8:	ldr	x20, [x20]
  230afc:	cbz	x20, 230b10 <udev_event_spawn+0x458>
  230b00:	mov	w0, #0x1                   	// #1
  230b04:	bl	2535b0 <log_get_max_level_realm@plt>
  230b08:	cmp	w0, #0x3
  230b0c:	b.ge	230bec <udev_event_spawn+0x534>  // b.tcont
  230b10:	ldr	x6, [sp, #48]
  230b14:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  230b18:	add	x8, x8, #0xa6
  230b1c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230b20:	cmp	x6, #0x0
  230b24:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  230b28:	csel	x5, xzr, x27, eq  // eq = none
  230b2c:	add	x2, x2, #0x661
  230b30:	add	x4, x4, #0x12f
  230b34:	stp	x8, x19, [sp, #8]
  230b38:	mov	w0, #0x3                   	// #3
  230b3c:	mov	w3, #0x2ea                 	// #746
  230b40:	b	230b90 <udev_event_spawn+0x4d8>
  230b44:	str	xzr, [sp, #32]
  230b48:	ldr	x20, [x20]
  230b4c:	cbz	x20, 230b60 <udev_event_spawn+0x4a8>
  230b50:	mov	w0, #0x1                   	// #1
  230b54:	bl	2535b0 <log_get_max_level_realm@plt>
  230b58:	cmp	w0, #0x3
  230b5c:	b.ge	230bfc <udev_event_spawn+0x544>  // b.tcont
  230b60:	ldr	x6, [sp, #32]
  230b64:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  230b68:	add	x8, x8, #0x3cf
  230b6c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230b70:	cmp	x6, #0x0
  230b74:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  230b78:	csel	x5, xzr, x27, eq  // eq = none
  230b7c:	add	x2, x2, #0x661
  230b80:	add	x4, x4, #0x12f
  230b84:	stp	x8, x19, [sp, #8]
  230b88:	mov	w0, #0x3                   	// #3
  230b8c:	mov	w3, #0x30a                 	// #778
  230b90:	str	xzr, [sp]
  230b94:	mov	w1, w26
  230b98:	b	230824 <udev_event_spawn+0x16c>
  230b9c:	add	x1, sp, #0x30
  230ba0:	mov	x0, x21
  230ba4:	bl	253a40 <sd_device_get_sysname@plt>
  230ba8:	b	230760 <udev_event_spawn+0xa8>
  230bac:	add	x1, sp, #0x30
  230bb0:	mov	x0, x21
  230bb4:	bl	253a40 <sd_device_get_sysname@plt>
  230bb8:	b	2307e4 <udev_event_spawn+0x12c>
  230bbc:	add	x1, sp, #0x30
  230bc0:	mov	x0, x20
  230bc4:	bl	253a40 <sd_device_get_sysname@plt>
  230bc8:	b	2308b4 <udev_event_spawn+0x1fc>
  230bcc:	add	x1, sp, #0x30
  230bd0:	mov	x0, x26
  230bd4:	bl	253a40 <sd_device_get_sysname@plt>
  230bd8:	b	2309ac <udev_event_spawn+0x2f4>
  230bdc:	add	x1, sp, #0x30
  230be0:	mov	x0, x19
  230be4:	bl	253a40 <sd_device_get_sysname@plt>
  230be8:	b	230ab8 <udev_event_spawn+0x400>
  230bec:	add	x1, sp, #0x30
  230bf0:	mov	x0, x20
  230bf4:	bl	253a40 <sd_device_get_sysname@plt>
  230bf8:	b	230b10 <udev_event_spawn+0x458>
  230bfc:	add	x1, sp, #0x20
  230c00:	mov	x0, x20
  230c04:	bl	253a40 <sd_device_get_sysname@plt>
  230c08:	b	230b60 <udev_event_spawn+0x4a8>
  230c0c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  230c10:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230c14:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  230c18:	add	x1, x1, #0xc4f
  230c1c:	add	x2, x2, #0x661
  230c20:	add	x4, x4, #0xf3e
  230c24:	mov	w0, #0x1                   	// #1
  230c28:	mov	w3, #0x2bf                 	// #703
  230c2c:	bl	253740 <log_assert_failed_realm@plt>
  230c30:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  230c34:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230c38:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  230c3c:	add	x1, x1, #0x86b
  230c40:	add	x2, x2, #0x661
  230c44:	add	x4, x4, #0xf3e
  230c48:	mov	w0, #0x1                   	// #1
  230c4c:	mov	w3, #0x2c0                 	// #704
  230c50:	bl	253740 <log_assert_failed_realm@plt>
  230c54:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  230c58:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230c5c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  230c60:	add	x1, x1, #0xe9c
  230c64:	add	x2, x2, #0x661
  230c68:	add	x4, x4, #0xf3e
  230c6c:	mov	w0, #0x1                   	// #1
  230c70:	mov	w3, #0x2c1                 	// #705
  230c74:	bl	253740 <log_assert_failed_realm@plt>
  230c78:	ldur	w2, [x29, #-4]
  230c7c:	mov	w0, #0xffffffff            	// #-1
  230c80:	bl	2537d0 <rearrange_stdio@plt>
  230c84:	tbz	w0, #31, 230c90 <udev_event_spawn+0x5d8>
  230c88:	mov	w0, #0x1                   	// #1
  230c8c:	bl	253c70 <_exit@plt>
  230c90:	mov	x0, xzr
  230c94:	mov	x1, xzr
  230c98:	bl	254120 <close_all_fds@plt>
  230c9c:	bl	254130 <rlimit_nofile_safe@plt>
  230ca0:	ldr	x0, [x25]
  230ca4:	ldur	x2, [x29, #-24]
  230ca8:	mov	x1, x25
  230cac:	bl	254140 <execve@plt>
  230cb0:	mov	w0, #0x1                   	// #1
  230cb4:	bl	253c70 <_exit@plt>

0000000000230cb8 <close_pairp>:
  230cb8:	stp	x29, x30, [sp, #-16]!
  230cbc:	mov	x29, sp
  230cc0:	bl	253900 <safe_close_pair@plt>
  230cc4:	ldp	x29, x30, [sp], #16
  230cc8:	ret

0000000000230ccc <strv_freep>:
  230ccc:	stp	x29, x30, [sp, #-16]!
  230cd0:	ldr	x0, [x0]
  230cd4:	mov	x29, sp
  230cd8:	cbz	x0, 230ce0 <strv_freep+0x14>
  230cdc:	bl	254150 <strv_free@plt>
  230ce0:	ldp	x29, x30, [sp], #16
  230ce4:	ret

0000000000230ce8 <safe_fork>:
  230ce8:	stp	x29, x30, [sp, #-16]!
  230cec:	mov	x4, x0
  230cf0:	adrp	x0, 216000 <worker_hash_op+0xbad0>
  230cf4:	add	x0, x0, #0x9e
  230cf8:	mov	w3, #0x25                  	// #37
  230cfc:	mov	x1, xzr
  230d00:	mov	x2, xzr
  230d04:	mov	x29, sp
  230d08:	bl	253c90 <safe_fork_full@plt>
  230d0c:	ldp	x29, x30, [sp], #16
  230d10:	ret

0000000000230d14 <udev_warn_timeout>:
  230d14:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  230d18:	movk	x8, #0xaaab
  230d1c:	umulh	x8, x0, x8
  230d20:	lsr	x8, x8, #1
  230d24:	add	x9, x8, x8, lsl #1
  230d28:	cmp	x0, x9
  230d2c:	cinc	x0, x8, ne  // ne = any
  230d30:	ret

0000000000230d34 <spawn_wait>:
  230d34:	sub	sp, sp, #0x40
  230d38:	stp	x29, x30, [sp, #16]
  230d3c:	stp	x22, x21, [sp, #32]
  230d40:	stp	x20, x19, [sp, #48]
  230d44:	add	x29, sp, #0x10
  230d48:	str	xzr, [sp, #8]
  230d4c:	cbz	x0, 230eb8 <spawn_wait+0x184>
  230d50:	mov	x19, x0
  230d54:	add	x0, sp, #0x8
  230d58:	bl	253cb0 <sd_event_new@plt>
  230d5c:	tbnz	w0, #31, 230e94 <spawn_wait+0x160>
  230d60:	ldr	x8, [x19, #32]
  230d64:	cbz	x8, 230e18 <spawn_wait+0xe4>
  230d68:	mov	w0, #0x1                   	// #1
  230d6c:	bl	253b20 <now@plt>
  230d70:	ldp	x8, x9, [x19, #32]
  230d74:	sub	x22, x0, x9
  230d78:	cmp	x22, x8
  230d7c:	b.cs	230e00 <spawn_wait+0xcc>  // b.hs, b.nlast
  230d80:	ldr	x10, [x19, #24]
  230d84:	mov	x21, x0
  230d88:	subs	x9, x10, x22
  230d8c:	b.ls	230dc8 <spawn_wait+0x94>  // b.plast
  230d90:	cmp	x10, x8
  230d94:	b.cs	230dc8 <spawn_wait+0x94>  // b.hs, b.nlast
  230d98:	str	x9, [x19, #24]
  230d9c:	ldr	x0, [sp, #8]
  230da0:	adrp	x5, 232000 <udev_event_execute_run+0x2bc>
  230da4:	mov	w4, #0x4240                	// #16960
  230da8:	add	x3, x9, x21
  230dac:	add	x5, x5, #0x18c
  230db0:	mov	w2, #0x1                   	// #1
  230db4:	movk	w4, #0xf, lsl #16
  230db8:	mov	x1, xzr
  230dbc:	mov	x6, x19
  230dc0:	bl	253c20 <sd_event_add_time@plt>
  230dc4:	tbnz	w0, #31, 230e0c <spawn_wait+0xd8>
  230dc8:	ldr	x8, [x19, #32]
  230dcc:	adrp	x5, 232000 <udev_event_execute_run+0x2bc>
  230dd0:	mov	w4, #0x4240                	// #16960
  230dd4:	add	x5, x5, #0x288
  230dd8:	sub	x8, x8, x22
  230ddc:	str	x8, [x19, #32]
  230de0:	ldr	x0, [sp, #8]
  230de4:	add	x3, x8, x21
  230de8:	mov	w2, #0x1                   	// #1
  230dec:	movk	w4, #0xf, lsl #16
  230df0:	mov	x1, xzr
  230df4:	mov	x6, x19
  230df8:	bl	253c20 <sd_event_add_time@plt>
  230dfc:	tbnz	w0, #31, 230e0c <spawn_wait+0xd8>
  230e00:	mov	w8, #0x1                   	// #1
  230e04:	cbnz	w8, 230e18 <spawn_wait+0xe4>
  230e08:	b	230e98 <spawn_wait+0x164>
  230e0c:	mov	w20, w0
  230e10:	mov	w8, wzr
  230e14:	cbz	w8, 230e98 <spawn_wait+0x164>
  230e18:	ldr	w2, [x19, #52]
  230e1c:	tbnz	w2, #31, 230e40 <spawn_wait+0x10c>
  230e20:	ldr	x0, [sp, #8]
  230e24:	adrp	x4, 232000 <udev_event_execute_run+0x2bc>
  230e28:	add	x4, x4, #0x390
  230e2c:	mov	w3, #0x1                   	// #1
  230e30:	mov	x1, xzr
  230e34:	mov	x5, x19
  230e38:	bl	253850 <sd_event_add_io@plt>
  230e3c:	tbnz	w0, #31, 230e94 <spawn_wait+0x160>
  230e40:	ldr	w2, [x19, #56]
  230e44:	tbnz	w2, #31, 230e68 <spawn_wait+0x134>
  230e48:	ldr	x0, [sp, #8]
  230e4c:	adrp	x4, 232000 <udev_event_execute_run+0x2bc>
  230e50:	add	x4, x4, #0x390
  230e54:	mov	w3, #0x1                   	// #1
  230e58:	mov	x1, xzr
  230e5c:	mov	x5, x19
  230e60:	bl	253850 <sd_event_add_io@plt>
  230e64:	tbnz	w0, #31, 230e94 <spawn_wait+0x160>
  230e68:	ldr	x0, [sp, #8]
  230e6c:	ldr	w2, [x19, #16]
  230e70:	adrp	x4, 232000 <udev_event_execute_run+0x2bc>
  230e74:	add	x4, x4, #0x650
  230e78:	mov	w3, #0x4                   	// #4
  230e7c:	mov	x1, xzr
  230e80:	mov	x5, x19
  230e84:	bl	254160 <sd_event_add_child@plt>
  230e88:	tbnz	w0, #31, 230e94 <spawn_wait+0x160>
  230e8c:	ldr	x0, [sp, #8]
  230e90:	bl	2538c0 <sd_event_loop@plt>
  230e94:	mov	w20, w0
  230e98:	add	x0, sp, #0x8
  230e9c:	bl	232170 <sd_event_unrefp>
  230ea0:	mov	w0, w20
  230ea4:	ldp	x20, x19, [sp, #48]
  230ea8:	ldp	x22, x21, [sp, #32]
  230eac:	ldp	x29, x30, [sp, #16]
  230eb0:	add	sp, sp, #0x40
  230eb4:	ret
  230eb8:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  230ebc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230ec0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  230ec4:	add	x1, x1, #0x583
  230ec8:	add	x2, x2, #0x661
  230ecc:	add	x4, x4, #0x19a
  230ed0:	mov	w0, #0x1                   	// #1
  230ed4:	mov	w3, #0x27f                 	// #639
  230ed8:	bl	253740 <log_assert_failed_realm@plt>

0000000000230edc <udev_event_execute_rules>:
  230edc:	sub	sp, sp, #0x70
  230ee0:	stp	x29, x30, [sp, #32]
  230ee4:	str	x25, [sp, #48]
  230ee8:	stp	x24, x23, [sp, #64]
  230eec:	stp	x22, x21, [sp, #80]
  230ef0:	stp	x20, x19, [sp, #96]
  230ef4:	add	x29, sp, #0x20
  230ef8:	cbz	x0, 231338 <udev_event_execute_rules+0x45c>
  230efc:	mov	x23, x3
  230f00:	cbz	x3, 23135c <udev_event_execute_rules+0x480>
  230f04:	ldr	x19, [x0]
  230f08:	mov	x24, x1
  230f0c:	mov	x21, x0
  230f10:	add	x1, x29, #0x18
  230f14:	mov	x0, x19
  230f18:	mov	x22, x2
  230f1c:	bl	253bb0 <sd_device_get_subsystem@plt>
  230f20:	tbnz	w0, #31, 230f5c <udev_event_execute_rules+0x80>
  230f24:	sub	x1, x29, #0x4
  230f28:	mov	x0, x19
  230f2c:	bl	253cf0 <device_get_action@plt>
  230f30:	tbnz	w0, #31, 230fb4 <udev_event_execute_rules+0xd8>
  230f34:	ldur	w8, [x29, #-4]
  230f38:	cmp	w8, #0x1
  230f3c:	b.ne	231034 <udev_event_execute_rules+0x158>  // b.any
  230f40:	mov	x0, x21
  230f44:	mov	x1, x24
  230f48:	mov	x2, x22
  230f4c:	mov	x3, x23
  230f50:	bl	231380 <event_execute_rules_on_remove>
  230f54:	mov	w0, wzr
  230f58:	b	231018 <udev_event_execute_rules+0x13c>
  230f5c:	mov	w20, w0
  230f60:	str	xzr, [sp, #16]
  230f64:	cbz	x19, 230f78 <udev_event_execute_rules+0x9c>
  230f68:	mov	w0, #0x1                   	// #1
  230f6c:	bl	2535b0 <log_get_max_level_realm@plt>
  230f70:	cmp	w0, #0x3
  230f74:	b.ge	2312c8 <udev_event_execute_rules+0x3ec>  // b.tcont
  230f78:	ldr	x6, [sp, #16]
  230f7c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  230f80:	add	x8, x8, #0xb64
  230f84:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230f88:	cmp	x6, #0x0
  230f8c:	csel	x5, xzr, x8, eq  // eq = none
  230f90:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  230f94:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  230f98:	add	x8, x8, #0xb55
  230f9c:	add	x2, x2, #0x661
  230fa0:	add	x4, x4, #0xf8d
  230fa4:	mov	w0, #0x3                   	// #3
  230fa8:	mov	w3, #0x3a6                 	// #934
  230fac:	str	x8, [sp, #8]
  230fb0:	b	231008 <udev_event_execute_rules+0x12c>
  230fb4:	mov	w20, w0
  230fb8:	str	xzr, [sp, #16]
  230fbc:	cbz	x19, 230fd0 <udev_event_execute_rules+0xf4>
  230fc0:	mov	w0, #0x1                   	// #1
  230fc4:	bl	2535b0 <log_get_max_level_realm@plt>
  230fc8:	cmp	w0, #0x3
  230fcc:	b.ge	2312d8 <udev_event_execute_rules+0x3fc>  // b.tcont
  230fd0:	ldr	x6, [sp, #16]
  230fd4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  230fd8:	add	x8, x8, #0xb64
  230fdc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  230fe0:	cmp	x6, #0x0
  230fe4:	csel	x5, xzr, x8, eq  // eq = none
  230fe8:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  230fec:	add	x8, x8, #0xd6a
  230ff0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  230ff4:	add	x2, x2, #0x661
  230ff8:	add	x4, x4, #0xf8d
  230ffc:	str	x8, [sp, #8]
  231000:	mov	w0, #0x3                   	// #3
  231004:	mov	w3, #0x3aa                 	// #938
  231008:	mov	w1, w20
  23100c:	str	xzr, [sp]
  231010:	mov	x7, xzr
  231014:	bl	2539f0 <log_object_internal@plt>
  231018:	ldp	x20, x19, [sp, #96]
  23101c:	ldp	x22, x21, [sp, #80]
  231020:	ldp	x24, x23, [sp, #64]
  231024:	ldr	x25, [sp, #48]
  231028:	ldp	x29, x30, [sp, #32]
  23102c:	add	sp, sp, #0x70
  231030:	ret
  231034:	add	x20, x21, #0x10
  231038:	mov	x0, x19
  23103c:	mov	x1, x20
  231040:	bl	254170 <device_clone_with_db@plt>
  231044:	tbnz	w0, #31, 231100 <udev_event_execute_rules+0x224>
  231048:	ldr	x8, [x20]
  23104c:	cbz	x8, 231068 <udev_event_execute_rules+0x18c>
  231050:	mov	x0, x19
  231054:	mov	x1, xzr
  231058:	bl	253bf0 <sd_device_get_devnum@plt>
  23105c:	tbnz	w0, #31, 231068 <udev_event_execute_rules+0x18c>
  231060:	ldr	x0, [x20]
  231064:	bl	23eb58 <udev_watch_end>
  231068:	ldur	w8, [x29, #-4]
  23106c:	cmp	w8, #0x3
  231070:	b.ne	231080 <udev_event_execute_rules+0x1a4>  // b.any
  231074:	mov	x0, x21
  231078:	bl	231588 <udev_event_on_move>
  23107c:	tbnz	w0, #31, 231018 <udev_event_execute_rules+0x13c>
  231080:	mov	x0, x23
  231084:	mov	x1, x21
  231088:	mov	x2, x24
  23108c:	mov	x3, x22
  231090:	bl	234dfc <udev_rules_apply_to_event>
  231094:	tbnz	w0, #31, 23115c <udev_event_execute_rules+0x280>
  231098:	mov	x0, x21
  23109c:	bl	2316d8 <rename_netif>
  2310a0:	tbnz	w0, #31, 231018 <udev_event_execute_rules+0x13c>
  2310a4:	mov	x0, x21
  2310a8:	bl	231a60 <update_devnode>
  2310ac:	tbnz	w0, #31, 231018 <udev_event_execute_rules+0x13c>
  2310b0:	ldr	x1, [x20]
  2310b4:	mov	x0, x19
  2310b8:	bl	253ae0 <device_ensure_usec_initialized@plt>
  2310bc:	tbnz	w0, #31, 2311b8 <udev_event_execute_rules+0x2dc>
  2310c0:	ldr	x1, [x20]
  2310c4:	mov	w2, #0x1                   	// #1
  2310c8:	mov	x0, x19
  2310cc:	bl	253a20 <device_tag_index@plt>
  2310d0:	tbnz	w0, #31, 231210 <udev_event_execute_rules+0x334>
  2310d4:	mov	x0, x19
  2310d8:	bl	253d20 <device_update_db@plt>
  2310dc:	tbnz	w0, #31, 231268 <udev_event_execute_rules+0x38c>
  2310e0:	mov	x0, x19
  2310e4:	bl	254180 <device_set_is_initialized@plt>
  2310e8:	ldr	x0, [x20]
  2310ec:	bl	253950 <sd_device_unref@plt>
  2310f0:	mov	x8, x0
  2310f4:	mov	w0, wzr
  2310f8:	str	x8, [x20]
  2310fc:	b	231018 <udev_event_execute_rules+0x13c>
  231100:	mov	w25, w0
  231104:	str	xzr, [sp, #16]
  231108:	cbz	x19, 23111c <udev_event_execute_rules+0x240>
  23110c:	mov	w0, #0x1                   	// #1
  231110:	bl	2535b0 <log_get_max_level_realm@plt>
  231114:	cmp	w0, #0x7
  231118:	b.ge	2312e8 <udev_event_execute_rules+0x40c>  // b.tcont
  23111c:	ldr	x6, [sp, #16]
  231120:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231124:	add	x8, x8, #0xb64
  231128:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23112c:	cmp	x6, #0x0
  231130:	csel	x5, xzr, x8, eq  // eq = none
  231134:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  231138:	add	x8, x8, #0x140
  23113c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  231140:	add	x2, x2, #0x661
  231144:	add	x4, x4, #0xf8d
  231148:	stp	xzr, x8, [sp]
  23114c:	mov	w0, #0x7                   	// #7
  231150:	mov	w3, #0x3b3                 	// #947
  231154:	mov	w1, w25
  231158:	b	231010 <udev_event_execute_rules+0x134>
  23115c:	mov	w22, w0
  231160:	str	xzr, [sp, #16]
  231164:	cbz	x19, 231178 <udev_event_execute_rules+0x29c>
  231168:	mov	w0, #0x1                   	// #1
  23116c:	bl	2535b0 <log_get_max_level_realm@plt>
  231170:	cmp	w0, #0x7
  231174:	b.ge	2312f8 <udev_event_execute_rules+0x41c>  // b.tcont
  231178:	ldr	x6, [sp, #16]
  23117c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231180:	add	x8, x8, #0xb64
  231184:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231188:	cmp	x6, #0x0
  23118c:	csel	x5, xzr, x8, eq  // eq = none
  231190:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  231194:	add	x8, x8, #0x178
  231198:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23119c:	add	x2, x2, #0x661
  2311a0:	add	x4, x4, #0xf8d
  2311a4:	stp	xzr, x8, [sp]
  2311a8:	mov	w0, #0x7                   	// #7
  2311ac:	mov	w3, #0x3c1                 	// #961
  2311b0:	mov	w1, w22
  2311b4:	b	231010 <udev_event_execute_rules+0x134>
  2311b8:	mov	w21, w0
  2311bc:	str	xzr, [sp, #16]
  2311c0:	cbz	x19, 2311d4 <udev_event_execute_rules+0x2f8>
  2311c4:	mov	w0, #0x1                   	// #1
  2311c8:	bl	2535b0 <log_get_max_level_realm@plt>
  2311cc:	cmp	w0, #0x7
  2311d0:	b.ge	231308 <udev_event_execute_rules+0x42c>  // b.tcont
  2311d4:	ldr	x6, [sp, #16]
  2311d8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2311dc:	add	x8, x8, #0xb64
  2311e0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2311e4:	cmp	x6, #0x0
  2311e8:	csel	x5, xzr, x8, eq  // eq = none
  2311ec:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  2311f0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2311f4:	add	x8, x8, #0xcc4
  2311f8:	add	x2, x2, #0x661
  2311fc:	add	x4, x4, #0xf8d
  231200:	mov	w0, #0x7                   	// #7
  231204:	mov	w3, #0x3ce                 	// #974
  231208:	str	x8, [sp, #8]
  23120c:	b	2312bc <udev_event_execute_rules+0x3e0>
  231210:	mov	w21, w0
  231214:	str	xzr, [sp, #16]
  231218:	cbz	x19, 23122c <udev_event_execute_rules+0x350>
  23121c:	mov	w0, #0x1                   	// #1
  231220:	bl	2535b0 <log_get_max_level_realm@plt>
  231224:	cmp	w0, #0x7
  231228:	b.ge	231318 <udev_event_execute_rules+0x43c>  // b.tcont
  23122c:	ldr	x6, [sp, #16]
  231230:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231234:	add	x8, x8, #0xb64
  231238:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23123c:	cmp	x6, #0x0
  231240:	csel	x5, xzr, x8, eq  // eq = none
  231244:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  231248:	add	x8, x8, #0xd3
  23124c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  231250:	add	x2, x2, #0x661
  231254:	add	x4, x4, #0xf8d
  231258:	str	x8, [sp, #8]
  23125c:	mov	w0, #0x7                   	// #7
  231260:	mov	w3, #0x3d3                 	// #979
  231264:	b	2312bc <udev_event_execute_rules+0x3e0>
  231268:	mov	w21, w0
  23126c:	str	xzr, [sp, #16]
  231270:	cbz	x19, 231284 <udev_event_execute_rules+0x3a8>
  231274:	mov	w0, #0x1                   	// #1
  231278:	bl	2535b0 <log_get_max_level_realm@plt>
  23127c:	cmp	w0, #0x7
  231280:	b.ge	231328 <udev_event_execute_rules+0x44c>  // b.tcont
  231284:	ldr	x6, [sp, #16]
  231288:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23128c:	add	x8, x8, #0xb64
  231290:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231294:	cmp	x6, #0x0
  231298:	csel	x5, xzr, x8, eq  // eq = none
  23129c:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  2312a0:	add	x8, x8, #0xf8b
  2312a4:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2312a8:	add	x2, x2, #0x661
  2312ac:	add	x4, x4, #0xf8d
  2312b0:	str	x8, [sp, #8]
  2312b4:	mov	w0, #0x7                   	// #7
  2312b8:	mov	w3, #0x3d7                 	// #983
  2312bc:	str	xzr, [sp]
  2312c0:	mov	w1, w21
  2312c4:	b	231010 <udev_event_execute_rules+0x134>
  2312c8:	add	x1, sp, #0x10
  2312cc:	mov	x0, x19
  2312d0:	bl	253a40 <sd_device_get_sysname@plt>
  2312d4:	b	230f78 <udev_event_execute_rules+0x9c>
  2312d8:	add	x1, sp, #0x10
  2312dc:	mov	x0, x19
  2312e0:	bl	253a40 <sd_device_get_sysname@plt>
  2312e4:	b	230fd0 <udev_event_execute_rules+0xf4>
  2312e8:	add	x1, sp, #0x10
  2312ec:	mov	x0, x19
  2312f0:	bl	253a40 <sd_device_get_sysname@plt>
  2312f4:	b	23111c <udev_event_execute_rules+0x240>
  2312f8:	add	x1, sp, #0x10
  2312fc:	mov	x0, x19
  231300:	bl	253a40 <sd_device_get_sysname@plt>
  231304:	b	231178 <udev_event_execute_rules+0x29c>
  231308:	add	x1, sp, #0x10
  23130c:	mov	x0, x19
  231310:	bl	253a40 <sd_device_get_sysname@plt>
  231314:	b	2311d4 <udev_event_execute_rules+0x2f8>
  231318:	add	x1, sp, #0x10
  23131c:	mov	x0, x19
  231320:	bl	253a40 <sd_device_get_sysname@plt>
  231324:	b	23122c <udev_event_execute_rules+0x350>
  231328:	add	x1, sp, #0x10
  23132c:	mov	x0, x19
  231330:	bl	253a40 <sd_device_get_sysname@plt>
  231334:	b	231284 <udev_event_execute_rules+0x3a8>
  231338:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  23133c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231340:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  231344:	add	x1, x1, #0xc4f
  231348:	add	x2, x2, #0x661
  23134c:	add	x4, x4, #0xc7a
  231350:	mov	w0, #0x1                   	// #1
  231354:	mov	w3, #0x39f                 	// #927
  231358:	bl	253740 <log_assert_failed_realm@plt>
  23135c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  231360:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231364:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  231368:	add	x1, x1, #0x5c9
  23136c:	add	x2, x2, #0x661
  231370:	add	x4, x4, #0xc7a
  231374:	mov	w0, #0x1                   	// #1
  231378:	mov	w3, #0x3a0                 	// #928
  23137c:	bl	253740 <log_assert_failed_realm@plt>

0000000000231380 <event_execute_rules_on_remove>:
  231380:	sub	sp, sp, #0x60
  231384:	stp	x29, x30, [sp, #32]
  231388:	stp	x24, x23, [sp, #48]
  23138c:	stp	x22, x21, [sp, #64]
  231390:	stp	x20, x19, [sp, #80]
  231394:	ldr	x19, [x0]
  231398:	mov	x22, x0
  23139c:	mov	x23, x1
  2313a0:	mov	w1, #0x1                   	// #1
  2313a4:	mov	x0, x19
  2313a8:	add	x29, sp, #0x20
  2313ac:	mov	x21, x3
  2313b0:	mov	x20, x2
  2313b4:	bl	254190 <device_read_db_internal@plt>
  2313b8:	tbz	w0, #31, 23141c <event_execute_rules_on_remove+0x9c>
  2313bc:	mov	w24, w0
  2313c0:	stur	xzr, [x29, #-8]
  2313c4:	cbz	x19, 2313d8 <event_execute_rules_on_remove+0x58>
  2313c8:	mov	w0, #0x1                   	// #1
  2313cc:	bl	2535b0 <log_get_max_level_realm@plt>
  2313d0:	cmp	w0, #0x7
  2313d4:	b.ge	231558 <event_execute_rules_on_remove+0x1d8>  // b.tcont
  2313d8:	ldur	x6, [x29, #-8]
  2313dc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2313e0:	add	x8, x8, #0xb64
  2313e4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2313e8:	cmp	x6, #0x0
  2313ec:	csel	x5, xzr, x8, eq  // eq = none
  2313f0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2313f4:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  2313f8:	add	x8, x8, #0x66c
  2313fc:	add	x2, x2, #0x661
  231400:	add	x4, x4, #0x2bd
  231404:	mov	w0, #0x7                   	// #7
  231408:	mov	w3, #0x370                 	// #880
  23140c:	mov	w1, w24
  231410:	mov	x7, xzr
  231414:	stp	xzr, x8, [sp]
  231418:	bl	2539f0 <log_object_internal@plt>
  23141c:	mov	x0, x19
  231420:	mov	x1, xzr
  231424:	mov	w2, wzr
  231428:	bl	253a20 <device_tag_index@plt>
  23142c:	tbz	w0, #31, 231490 <event_execute_rules_on_remove+0x110>
  231430:	mov	w24, w0
  231434:	stur	xzr, [x29, #-8]
  231438:	cbz	x19, 23144c <event_execute_rules_on_remove+0xcc>
  23143c:	mov	w0, #0x1                   	// #1
  231440:	bl	2535b0 <log_get_max_level_realm@plt>
  231444:	cmp	w0, #0x7
  231448:	b.ge	231568 <event_execute_rules_on_remove+0x1e8>  // b.tcont
  23144c:	ldur	x6, [x29, #-8]
  231450:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231454:	add	x8, x8, #0xb64
  231458:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23145c:	cmp	x6, #0x0
  231460:	csel	x5, xzr, x8, eq  // eq = none
  231464:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  231468:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  23146c:	add	x8, x8, #0xa1c
  231470:	add	x2, x2, #0x661
  231474:	add	x4, x4, #0x2bd
  231478:	mov	w0, #0x7                   	// #7
  23147c:	mov	w3, #0x374                 	// #884
  231480:	mov	w1, w24
  231484:	mov	x7, xzr
  231488:	stp	xzr, x8, [sp]
  23148c:	bl	2539f0 <log_object_internal@plt>
  231490:	mov	x0, x19
  231494:	bl	253a10 <device_delete_db@plt>
  231498:	tbz	w0, #31, 2314fc <event_execute_rules_on_remove+0x17c>
  23149c:	mov	w24, w0
  2314a0:	stur	xzr, [x29, #-8]
  2314a4:	cbz	x19, 2314b8 <event_execute_rules_on_remove+0x138>
  2314a8:	mov	w0, #0x1                   	// #1
  2314ac:	bl	2535b0 <log_get_max_level_realm@plt>
  2314b0:	cmp	w0, #0x7
  2314b4:	b.ge	231578 <event_execute_rules_on_remove+0x1f8>  // b.tcont
  2314b8:	ldur	x6, [x29, #-8]
  2314bc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2314c0:	add	x8, x8, #0xb64
  2314c4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2314c8:	cmp	x6, #0x0
  2314cc:	csel	x5, xzr, x8, eq  // eq = none
  2314d0:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  2314d4:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  2314d8:	add	x8, x8, #0xd44
  2314dc:	add	x2, x2, #0x661
  2314e0:	add	x4, x4, #0x2bd
  2314e4:	mov	w0, #0x7                   	// #7
  2314e8:	mov	w3, #0x378                 	// #888
  2314ec:	mov	w1, w24
  2314f0:	mov	x7, xzr
  2314f4:	stp	xzr, x8, [sp]
  2314f8:	bl	2539f0 <log_object_internal@plt>
  2314fc:	mov	x0, x19
  231500:	mov	x1, xzr
  231504:	bl	253bf0 <sd_device_get_devnum@plt>
  231508:	tbnz	w0, #31, 231514 <event_execute_rules_on_remove+0x194>
  23150c:	mov	x0, x19
  231510:	bl	23eb58 <udev_watch_end>
  231514:	mov	x0, x21
  231518:	mov	x1, x22
  23151c:	mov	x2, x23
  231520:	mov	x3, x20
  231524:	bl	234dfc <udev_rules_apply_to_event>
  231528:	mov	x0, x19
  23152c:	mov	x1, xzr
  231530:	bl	253bf0 <sd_device_get_devnum@plt>
  231534:	tbnz	w0, #31, 231540 <event_execute_rules_on_remove+0x1c0>
  231538:	mov	x0, x19
  23153c:	bl	234234 <udev_node_remove>
  231540:	ldp	x20, x19, [sp, #80]
  231544:	ldp	x22, x21, [sp, #64]
  231548:	ldp	x24, x23, [sp, #48]
  23154c:	ldp	x29, x30, [sp, #32]
  231550:	add	sp, sp, #0x60
  231554:	ret
  231558:	sub	x1, x29, #0x8
  23155c:	mov	x0, x19
  231560:	bl	253a40 <sd_device_get_sysname@plt>
  231564:	b	2313d8 <event_execute_rules_on_remove+0x58>
  231568:	sub	x1, x29, #0x8
  23156c:	mov	x0, x19
  231570:	bl	253a40 <sd_device_get_sysname@plt>
  231574:	b	23144c <event_execute_rules_on_remove+0xcc>
  231578:	sub	x1, x29, #0x8
  23157c:	mov	x0, x19
  231580:	bl	253a40 <sd_device_get_sysname@plt>
  231584:	b	2314b8 <event_execute_rules_on_remove+0x138>

0000000000231588 <udev_event_on_move>:
  231588:	sub	sp, sp, #0x40
  23158c:	stp	x29, x30, [sp, #32]
  231590:	stp	x20, x19, [sp, #48]
  231594:	ldr	x8, [x0, #16]
  231598:	ldr	x19, [x0]
  23159c:	add	x29, sp, #0x20
  2315a0:	cbz	x8, 231628 <udev_event_on_move+0xa0>
  2315a4:	mov	x20, x0
  2315a8:	mov	x0, x19
  2315ac:	mov	x1, xzr
  2315b0:	bl	253bf0 <sd_device_get_devnum@plt>
  2315b4:	tbz	w0, #31, 231628 <udev_event_on_move+0xa0>
  2315b8:	ldr	x1, [x20, #16]
  2315bc:	mov	x0, x19
  2315c0:	bl	253e70 <device_copy_properties@plt>
  2315c4:	tbz	w0, #31, 231628 <udev_event_on_move+0xa0>
  2315c8:	mov	w20, w0
  2315cc:	stur	xzr, [x29, #-8]
  2315d0:	cbz	x19, 2315e4 <udev_event_on_move+0x5c>
  2315d4:	mov	w0, #0x1                   	// #1
  2315d8:	bl	2535b0 <log_get_max_level_realm@plt>
  2315dc:	cmp	w0, #0x7
  2315e0:	b.ge	2316c8 <udev_event_on_move+0x140>  // b.tcont
  2315e4:	ldur	x6, [x29, #-8]
  2315e8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2315ec:	add	x8, x8, #0xb64
  2315f0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2315f4:	cmp	x6, #0x0
  2315f8:	csel	x5, xzr, x8, eq  // eq = none
  2315fc:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  231600:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  231604:	add	x8, x8, #0xe25
  231608:	add	x2, x2, #0x661
  23160c:	add	x4, x4, #0x19a
  231610:	mov	w0, #0x7                   	// #7
  231614:	mov	w3, #0x38b                 	// #907
  231618:	mov	w1, w20
  23161c:	mov	x7, xzr
  231620:	stp	xzr, x8, [sp]
  231624:	bl	2539f0 <log_object_internal@plt>
  231628:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  23162c:	add	x1, x1, #0xd82
  231630:	mov	x0, x19
  231634:	mov	x2, xzr
  231638:	bl	2541a0 <device_add_property@plt>
  23163c:	tbnz	w0, #31, 231648 <udev_event_on_move+0xc0>
  231640:	mov	w0, wzr
  231644:	b	2316a8 <udev_event_on_move+0x120>
  231648:	mov	w20, w0
  23164c:	stur	xzr, [x29, #-8]
  231650:	cbz	x19, 231664 <udev_event_on_move+0xdc>
  231654:	mov	w0, #0x1                   	// #1
  231658:	bl	2535b0 <log_get_max_level_realm@plt>
  23165c:	cmp	w0, #0x7
  231660:	b.ge	2316b8 <udev_event_on_move+0x130>  // b.tcont
  231664:	ldur	x6, [x29, #-8]
  231668:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23166c:	add	x8, x8, #0xb64
  231670:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231674:	cmp	x6, #0x0
  231678:	csel	x5, xzr, x8, eq  // eq = none
  23167c:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  231680:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  231684:	add	x8, x8, #0x42e
  231688:	add	x2, x2, #0x661
  23168c:	add	x4, x4, #0x19a
  231690:	mov	w0, #0x7                   	// #7
  231694:	mov	w3, #0x391                 	// #913
  231698:	mov	w1, w20
  23169c:	mov	x7, xzr
  2316a0:	stp	xzr, x8, [sp]
  2316a4:	bl	2539f0 <log_object_internal@plt>
  2316a8:	ldp	x20, x19, [sp, #48]
  2316ac:	ldp	x29, x30, [sp, #32]
  2316b0:	add	sp, sp, #0x40
  2316b4:	ret
  2316b8:	sub	x1, x29, #0x8
  2316bc:	mov	x0, x19
  2316c0:	bl	253a40 <sd_device_get_sysname@plt>
  2316c4:	b	231664 <udev_event_on_move+0xdc>
  2316c8:	sub	x1, x29, #0x8
  2316cc:	mov	x0, x19
  2316d0:	bl	253a40 <sd_device_get_sysname@plt>
  2316d4:	b	2315e4 <udev_event_on_move+0x5c>

00000000002316d8 <rename_netif>:
  2316d8:	sub	sp, sp, #0x70
  2316dc:	stp	x29, x30, [sp, #64]
  2316e0:	stp	x20, x19, [sp, #96]
  2316e4:	ldr	x8, [x0, #24]
  2316e8:	str	x21, [sp, #80]
  2316ec:	add	x29, sp, #0x40
  2316f0:	cbz	x8, 231748 <rename_netif+0x70>
  2316f4:	ldr	x19, [x0]
  2316f8:	mov	x20, x0
  2316fc:	add	x1, x29, #0x18
  231700:	mov	x0, x19
  231704:	bl	253a40 <sd_device_get_sysname@plt>
  231708:	tbnz	w0, #31, 231750 <rename_netif+0x78>
  23170c:	ldr	x0, [x20, #24]
  231710:	ldr	x1, [x29, #24]
  231714:	bl	253bc0 <strcmp@plt>
  231718:	cbz	w0, 2317b4 <rename_netif+0xdc>
  23171c:	mov	x0, x19
  231720:	mov	w1, wzr
  231724:	bl	253d40 <device_for_action@plt>
  231728:	mov	w8, w0
  23172c:	mov	w0, wzr
  231730:	tbz	w8, #0, 2317b4 <rename_netif+0xdc>
  231734:	sub	x1, x29, #0x4
  231738:	mov	x0, x19
  23173c:	bl	253c00 <sd_device_get_ifindex@plt>
  231740:	cmn	w0, #0x2
  231744:	b.ne	2317c8 <rename_netif+0xf0>  // b.any
  231748:	mov	w0, wzr
  23174c:	b	2317b4 <rename_netif+0xdc>
  231750:	mov	w21, w0
  231754:	stur	xzr, [x29, #-16]
  231758:	cbz	x19, 23176c <rename_netif+0x94>
  23175c:	mov	w0, #0x1                   	// #1
  231760:	bl	2535b0 <log_get_max_level_realm@plt>
  231764:	cmp	w0, #0x3
  231768:	b.ge	231a00 <rename_netif+0x328>  // b.tcont
  23176c:	ldur	x6, [x29, #-16]
  231770:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231774:	add	x8, x8, #0xb64
  231778:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23177c:	cmp	x6, #0x0
  231780:	csel	x5, xzr, x8, eq  // eq = none
  231784:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  231788:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  23178c:	add	x8, x8, #0x37b
  231790:	add	x2, x2, #0x661
  231794:	add	x4, x4, #0xaf2
  231798:	mov	w0, #0x3                   	// #3
  23179c:	mov	w3, #0x31c                 	// #796
  2317a0:	str	x8, [sp, #8]
  2317a4:	mov	w1, w21
  2317a8:	mov	x7, xzr
  2317ac:	str	xzr, [sp]
  2317b0:	bl	2539f0 <log_object_internal@plt>
  2317b4:	ldp	x20, x19, [sp, #96]
  2317b8:	ldr	x21, [sp, #80]
  2317bc:	ldp	x29, x30, [sp, #64]
  2317c0:	add	sp, sp, #0x70
  2317c4:	ret
  2317c8:	mov	w21, w0
  2317cc:	tbnz	w0, #31, 231888 <rename_netif+0x1b0>
  2317d0:	ldur	w1, [x29, #-4]
  2317d4:	ldr	x2, [x20, #24]
  2317d8:	add	x0, x20, #0x58
  2317dc:	bl	2541b0 <rtnl_set_link_name@plt>
  2317e0:	tbnz	w0, #31, 2318dc <rename_netif+0x204>
  2317e4:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  2317e8:	adrp	x2, 213000 <worker_hash_op+0x8ad0>
  2317ec:	add	x1, x1, #0xd82
  2317f0:	add	x2, x2, #0xa68
  2317f4:	mov	x0, x19
  2317f8:	bl	2541a0 <device_add_property@plt>
  2317fc:	tbnz	w0, #31, 231948 <rename_netif+0x270>
  231800:	ldr	x1, [x20, #24]
  231804:	mov	x0, x19
  231808:	bl	2541c0 <device_rename@plt>
  23180c:	tbnz	w0, #31, 2319a0 <rename_netif+0x2c8>
  231810:	stur	xzr, [x29, #-16]
  231814:	cbz	x19, 231828 <rename_netif+0x150>
  231818:	mov	w0, #0x1                   	// #1
  23181c:	bl	2535b0 <log_get_max_level_realm@plt>
  231820:	cmp	w0, #0x7
  231824:	b.ge	231a30 <rename_netif+0x358>  // b.tcont
  231828:	ldur	x6, [x29, #-16]
  23182c:	ldur	w8, [x29, #-4]
  231830:	ldr	x9, [x29, #24]
  231834:	ldr	x10, [x20, #24]
  231838:	adrp	x11, 211000 <worker_hash_op+0x6ad0>
  23183c:	add	x11, x11, #0xb64
  231840:	cmp	x6, #0x0
  231844:	str	w8, [sp, #16]
  231848:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  23184c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231850:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  231854:	csel	x5, xzr, x11, eq  // eq = none
  231858:	add	x8, x8, #0x344
  23185c:	add	x2, x2, #0x661
  231860:	add	x4, x4, #0xaf2
  231864:	mov	w0, #0x7                   	// #7
  231868:	mov	w3, #0x338                 	// #824
  23186c:	mov	w1, wzr
  231870:	mov	x7, xzr
  231874:	stp	x9, x10, [sp, #24]
  231878:	stp	xzr, x8, [sp]
  23187c:	bl	2539f0 <log_object_internal@plt>
  231880:	mov	w0, #0x1                   	// #1
  231884:	b	2317b4 <rename_netif+0xdc>
  231888:	stur	xzr, [x29, #-16]
  23188c:	cbz	x19, 2318a0 <rename_netif+0x1c8>
  231890:	mov	w0, #0x1                   	// #1
  231894:	bl	2535b0 <log_get_max_level_realm@plt>
  231898:	cmp	w0, #0x3
  23189c:	b.ge	231a10 <rename_netif+0x338>  // b.tcont
  2318a0:	ldur	x6, [x29, #-16]
  2318a4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2318a8:	add	x8, x8, #0xb64
  2318ac:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2318b0:	cmp	x6, #0x0
  2318b4:	csel	x5, xzr, x8, eq  // eq = none
  2318b8:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  2318bc:	add	x8, x8, #0x777
  2318c0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  2318c4:	add	x2, x2, #0x661
  2318c8:	add	x4, x4, #0xaf2
  2318cc:	str	x8, [sp, #8]
  2318d0:	mov	w0, #0x3                   	// #3
  2318d4:	mov	w3, #0x328                 	// #808
  2318d8:	b	2317a4 <rename_netif+0xcc>
  2318dc:	mov	w21, w0
  2318e0:	stur	xzr, [x29, #-16]
  2318e4:	cbz	x19, 2318f8 <rename_netif+0x220>
  2318e8:	mov	w0, #0x1                   	// #1
  2318ec:	bl	2535b0 <log_get_max_level_realm@plt>
  2318f0:	cmp	w0, #0x3
  2318f4:	b.ge	231a20 <rename_netif+0x348>  // b.tcont
  2318f8:	ldur	w8, [x29, #-4]
  2318fc:	ldur	x6, [x29, #-16]
  231900:	ldr	x9, [x29, #24]
  231904:	ldr	x10, [x20, #24]
  231908:	adrp	x11, 211000 <worker_hash_op+0x6ad0>
  23190c:	str	w8, [sp, #16]
  231910:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231914:	add	x11, x11, #0xb64
  231918:	cmp	x6, #0x0
  23191c:	add	x8, x8, #0x69e
  231920:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231924:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  231928:	csel	x5, xzr, x11, eq  // eq = none
  23192c:	stp	x9, x10, [sp, #24]
  231930:	add	x2, x2, #0x661
  231934:	add	x4, x4, #0xaf2
  231938:	str	x8, [sp, #8]
  23193c:	mov	w0, #0x3                   	// #3
  231940:	mov	w3, #0x32d                 	// #813
  231944:	b	2317a4 <rename_netif+0xcc>
  231948:	mov	w21, w0
  23194c:	stur	xzr, [x29, #-16]
  231950:	cbz	x19, 231964 <rename_netif+0x28c>
  231954:	mov	w0, #0x1                   	// #1
  231958:	bl	2535b0 <log_get_max_level_realm@plt>
  23195c:	cmp	w0, #0x4
  231960:	b.ge	231a40 <rename_netif+0x368>  // b.tcont
  231964:	ldur	x6, [x29, #-16]
  231968:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23196c:	add	x8, x8, #0xb64
  231970:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231974:	cmp	x6, #0x0
  231978:	csel	x5, xzr, x8, eq  // eq = none
  23197c:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  231980:	add	x8, x8, #0x5e0
  231984:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  231988:	add	x2, x2, #0x661
  23198c:	add	x4, x4, #0xaf2
  231990:	str	x8, [sp, #8]
  231994:	mov	w0, #0x4                   	// #4
  231998:	mov	w3, #0x332                 	// #818
  23199c:	b	2317a4 <rename_netif+0xcc>
  2319a0:	mov	w21, w0
  2319a4:	stur	xzr, [x29, #-16]
  2319a8:	cbz	x19, 2319bc <rename_netif+0x2e4>
  2319ac:	mov	w0, #0x1                   	// #1
  2319b0:	bl	2535b0 <log_get_max_level_realm@plt>
  2319b4:	cmp	w0, #0x4
  2319b8:	b.ge	231a50 <rename_netif+0x378>  // b.tcont
  2319bc:	ldr	x8, [x20, #24]
  2319c0:	ldur	x6, [x29, #-16]
  2319c4:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  2319c8:	add	x9, x9, #0xb64
  2319cc:	str	x8, [sp, #16]
  2319d0:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  2319d4:	cmp	x6, #0x0
  2319d8:	add	x8, x8, #0x81
  2319dc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2319e0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  2319e4:	csel	x5, xzr, x9, eq  // eq = none
  2319e8:	add	x2, x2, #0x661
  2319ec:	add	x4, x4, #0xaf2
  2319f0:	str	x8, [sp, #8]
  2319f4:	mov	w0, #0x4                   	// #4
  2319f8:	mov	w3, #0x336                 	// #822
  2319fc:	b	2317a4 <rename_netif+0xcc>
  231a00:	sub	x1, x29, #0x10
  231a04:	mov	x0, x19
  231a08:	bl	253a40 <sd_device_get_sysname@plt>
  231a0c:	b	23176c <rename_netif+0x94>
  231a10:	sub	x1, x29, #0x10
  231a14:	mov	x0, x19
  231a18:	bl	253a40 <sd_device_get_sysname@plt>
  231a1c:	b	2318a0 <rename_netif+0x1c8>
  231a20:	sub	x1, x29, #0x10
  231a24:	mov	x0, x19
  231a28:	bl	253a40 <sd_device_get_sysname@plt>
  231a2c:	b	2318f8 <rename_netif+0x220>
  231a30:	sub	x1, x29, #0x10
  231a34:	mov	x0, x19
  231a38:	bl	253a40 <sd_device_get_sysname@plt>
  231a3c:	b	231828 <rename_netif+0x150>
  231a40:	sub	x1, x29, #0x10
  231a44:	mov	x0, x19
  231a48:	bl	253a40 <sd_device_get_sysname@plt>
  231a4c:	b	231964 <rename_netif+0x28c>
  231a50:	sub	x1, x29, #0x10
  231a54:	mov	x0, x19
  231a58:	bl	253a40 <sd_device_get_sysname@plt>
  231a5c:	b	2319bc <rename_netif+0x2e4>

0000000000231a60 <update_devnode>:
  231a60:	sub	sp, sp, #0x50
  231a64:	stp	x29, x30, [sp, #16]
  231a68:	stp	x22, x21, [sp, #48]
  231a6c:	stp	x20, x19, [sp, #64]
  231a70:	ldr	x19, [x0]
  231a74:	mov	x20, x0
  231a78:	mov	x1, xzr
  231a7c:	str	x23, [sp, #32]
  231a80:	mov	x0, x19
  231a84:	add	x29, sp, #0x10
  231a88:	bl	253bf0 <sd_device_get_devnum@plt>
  231a8c:	cmn	w0, #0x2
  231a90:	b.ne	231a9c <update_devnode+0x3c>  // b.any
  231a94:	mov	w0, wzr
  231a98:	b	231cec <update_devnode+0x28c>
  231a9c:	mov	w21, w0
  231aa0:	tbnz	w0, #31, 231b34 <update_devnode+0xd4>
  231aa4:	ldr	x1, [x20, #16]
  231aa8:	cbz	x1, 231ab4 <update_devnode+0x54>
  231aac:	mov	x0, x19
  231ab0:	bl	23290c <udev_node_update_old_links>
  231ab4:	mov	x21, x20
  231ab8:	ldr	w0, [x21, #44]!
  231abc:	bl	2541d0 <uid_is_valid@plt>
  231ac0:	tbz	w0, #0, 231b88 <update_devnode+0x128>
  231ac4:	mov	x21, x20
  231ac8:	ldr	w0, [x21, #48]!
  231acc:	bl	2328f4 <gid_is_valid>
  231ad0:	tbz	w0, #0, 231c00 <update_devnode+0x1a0>
  231ad4:	mov	x23, x20
  231ad8:	ldr	w8, [x23, #40]!
  231adc:	cmn	w8, #0x1
  231ae0:	b.eq	231c70 <update_devnode+0x210>  // b.none
  231ae4:	ldr	w8, [x23]
  231ae8:	cmn	w8, #0x1
  231aec:	b.ne	231b0c <update_devnode+0xac>  // b.any
  231af0:	ldr	w0, [x21]
  231af4:	bl	2328f4 <gid_is_valid>
  231af8:	tbz	w0, #0, 231b0c <update_devnode+0xac>
  231afc:	ldr	w8, [x21]
  231b00:	cbz	w8, 231b0c <update_devnode+0xac>
  231b04:	mov	w8, #0x1b0                 	// #432
  231b08:	str	w8, [x23]
  231b0c:	mov	x0, x19
  231b10:	mov	w1, wzr
  231b14:	bl	253d40 <device_for_action@plt>
  231b18:	ldp	w2, w3, [x20, #40]
  231b1c:	ldr	w4, [x20, #48]
  231b20:	ldr	x5, [x20, #56]
  231b24:	and	w1, w0, #0x1
  231b28:	mov	x0, x19
  231b2c:	bl	232de4 <udev_node_add>
  231b30:	b	231cec <update_devnode+0x28c>
  231b34:	str	xzr, [x29, #24]
  231b38:	cbz	x19, 231b4c <update_devnode+0xec>
  231b3c:	mov	w0, #0x1                   	// #1
  231b40:	bl	2535b0 <log_get_max_level_realm@plt>
  231b44:	cmp	w0, #0x3
  231b48:	b.ge	231d04 <update_devnode+0x2a4>  // b.tcont
  231b4c:	ldr	x6, [x29, #24]
  231b50:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231b54:	add	x8, x8, #0xb64
  231b58:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231b5c:	cmp	x6, #0x0
  231b60:	csel	x5, xzr, x8, eq  // eq = none
  231b64:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231b68:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  231b6c:	add	x8, x8, #0xcde
  231b70:	add	x2, x2, #0x661
  231b74:	add	x4, x4, #0x1b2
  231b78:	mov	w0, #0x3                   	// #3
  231b7c:	mov	w3, #0x345                 	// #837
  231b80:	str	x8, [sp, #8]
  231b84:	b	231bf4 <update_devnode+0x194>
  231b88:	mov	x0, x19
  231b8c:	mov	x1, x21
  231b90:	bl	2541e0 <device_get_devnode_uid@plt>
  231b94:	tbz	w0, #31, 231ac4 <update_devnode+0x64>
  231b98:	mov	w21, w0
  231b9c:	cmn	w0, #0x2
  231ba0:	b.eq	231ac4 <update_devnode+0x64>  // b.none
  231ba4:	str	xzr, [x29, #24]
  231ba8:	cbz	x19, 231bbc <update_devnode+0x15c>
  231bac:	mov	w0, #0x1                   	// #1
  231bb0:	bl	2535b0 <log_get_max_level_realm@plt>
  231bb4:	cmp	w0, #0x3
  231bb8:	b.ge	231d14 <update_devnode+0x2b4>  // b.tcont
  231bbc:	ldr	x6, [x29, #24]
  231bc0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231bc4:	add	x8, x8, #0xb64
  231bc8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231bcc:	cmp	x6, #0x0
  231bd0:	csel	x5, xzr, x8, eq  // eq = none
  231bd4:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  231bd8:	add	x8, x8, #0xe6a
  231bdc:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  231be0:	add	x2, x2, #0x661
  231be4:	add	x4, x4, #0x1b2
  231be8:	str	x8, [sp, #8]
  231bec:	mov	w0, #0x3                   	// #3
  231bf0:	mov	w3, #0x34e                 	// #846
  231bf4:	mov	w1, w21
  231bf8:	str	xzr, [sp]
  231bfc:	b	231ce4 <update_devnode+0x284>
  231c00:	mov	x0, x19
  231c04:	mov	x1, x21
  231c08:	bl	2541f0 <device_get_devnode_gid@plt>
  231c0c:	tbz	w0, #31, 231ad4 <update_devnode+0x74>
  231c10:	mov	w22, w0
  231c14:	cmn	w0, #0x2
  231c18:	b.eq	231ad4 <update_devnode+0x74>  // b.none
  231c1c:	str	xzr, [x29, #24]
  231c20:	cbz	x19, 231c34 <update_devnode+0x1d4>
  231c24:	mov	w0, #0x1                   	// #1
  231c28:	bl	2535b0 <log_get_max_level_realm@plt>
  231c2c:	cmp	w0, #0x3
  231c30:	b.ge	231d24 <update_devnode+0x2c4>  // b.tcont
  231c34:	ldr	x6, [x29, #24]
  231c38:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231c3c:	add	x8, x8, #0xb64
  231c40:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231c44:	cmp	x6, #0x0
  231c48:	csel	x5, xzr, x8, eq  // eq = none
  231c4c:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  231c50:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  231c54:	add	x8, x8, #0x154
  231c58:	add	x2, x2, #0x661
  231c5c:	add	x4, x4, #0x1b2
  231c60:	mov	w0, #0x3                   	// #3
  231c64:	mov	w3, #0x354                 	// #852
  231c68:	str	x8, [sp, #8]
  231c6c:	b	231cdc <update_devnode+0x27c>
  231c70:	mov	x0, x19
  231c74:	mov	x1, x23
  231c78:	bl	254200 <device_get_devnode_mode@plt>
  231c7c:	tbz	w0, #31, 231ae4 <update_devnode+0x84>
  231c80:	mov	w22, w0
  231c84:	cmn	w0, #0x2
  231c88:	b.eq	231ae4 <update_devnode+0x84>  // b.none
  231c8c:	str	xzr, [x29, #24]
  231c90:	cbz	x19, 231ca4 <update_devnode+0x244>
  231c94:	mov	w0, #0x1                   	// #1
  231c98:	bl	2535b0 <log_get_max_level_realm@plt>
  231c9c:	cmp	w0, #0x3
  231ca0:	b.ge	231d34 <update_devnode+0x2d4>  // b.tcont
  231ca4:	ldr	x6, [x29, #24]
  231ca8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231cac:	add	x8, x8, #0xb64
  231cb0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  231cb4:	cmp	x6, #0x0
  231cb8:	csel	x5, xzr, x8, eq  // eq = none
  231cbc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  231cc0:	add	x8, x8, #0x6da
  231cc4:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  231cc8:	add	x2, x2, #0x661
  231ccc:	add	x4, x4, #0x1b2
  231cd0:	str	x8, [sp, #8]
  231cd4:	mov	w0, #0x3                   	// #3
  231cd8:	mov	w3, #0x35a                 	// #858
  231cdc:	str	xzr, [sp]
  231ce0:	mov	w1, w22
  231ce4:	mov	x7, xzr
  231ce8:	bl	2539f0 <log_object_internal@plt>
  231cec:	ldp	x20, x19, [sp, #64]
  231cf0:	ldp	x22, x21, [sp, #48]
  231cf4:	ldr	x23, [sp, #32]
  231cf8:	ldp	x29, x30, [sp, #16]
  231cfc:	add	sp, sp, #0x50
  231d00:	ret
  231d04:	add	x1, x29, #0x18
  231d08:	mov	x0, x19
  231d0c:	bl	253a40 <sd_device_get_sysname@plt>
  231d10:	b	231b4c <update_devnode+0xec>
  231d14:	add	x1, x29, #0x18
  231d18:	mov	x0, x19
  231d1c:	bl	253a40 <sd_device_get_sysname@plt>
  231d20:	b	231bbc <update_devnode+0x15c>
  231d24:	add	x1, x29, #0x18
  231d28:	mov	x0, x19
  231d2c:	bl	253a40 <sd_device_get_sysname@plt>
  231d30:	b	231c34 <update_devnode+0x1d4>
  231d34:	add	x1, x29, #0x18
  231d38:	mov	x0, x19
  231d3c:	bl	253a40 <sd_device_get_sysname@plt>
  231d40:	b	231ca4 <update_devnode+0x244>

0000000000231d44 <udev_event_execute_run>:
  231d44:	sub	sp, sp, #0xf0
  231d48:	stp	x29, x30, [sp, #144]
  231d4c:	add	x29, sp, #0x90
  231d50:	mov	w8, #0xfffffffe            	// #-2
  231d54:	stp	x28, x27, [sp, #160]
  231d58:	stp	x26, x25, [sp, #176]
  231d5c:	stp	x24, x23, [sp, #192]
  231d60:	stp	x22, x21, [sp, #208]
  231d64:	stp	x20, x19, [sp, #224]
  231d68:	stur	w8, [x29, #-32]
  231d6c:	stur	xzr, [x29, #-24]
  231d70:	mov	x19, x0
  231d74:	ldr	x0, [x0, #64]
  231d78:	mov	x20, x1
  231d7c:	sub	x1, x29, #0x20
  231d80:	sub	x2, x29, #0x10
  231d84:	sub	x3, x29, #0x8
  231d88:	bl	2320bc <ordered_hashmap_iterate>
  231d8c:	tbz	w0, #0, 23209c <udev_event_execute_run+0x358>
  231d90:	adrp	x25, 211000 <worker_hash_op+0x6ad0>
  231d94:	adrp	x26, 211000 <worker_hash_op+0x6ad0>
  231d98:	adrp	x21, 20c000 <worker_hash_op+0x1ad0>
  231d9c:	adrp	x22, 20d000 <worker_hash_op+0x2ad0>
  231da0:	adrp	x28, 20f000 <worker_hash_op+0x4ad0>
  231da4:	add	x25, x25, #0xb64
  231da8:	add	x26, x26, #0xc79
  231dac:	add	x21, x21, #0x661
  231db0:	add	x22, x22, #0xa78
  231db4:	add	x28, x28, #0x4ed
  231db8:	b	231e14 <udev_event_execute_run+0xd0>
  231dbc:	ldr	x6, [sp, #48]
  231dc0:	ldur	x8, [x29, #-8]
  231dc4:	mov	w0, #0x7                   	// #7
  231dc8:	mov	w3, #0x3ed                 	// #1005
  231dcc:	cmp	x6, #0x0
  231dd0:	str	x8, [sp, #16]
  231dd4:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  231dd8:	csel	x5, xzr, x25, eq  // eq = none
  231ddc:	add	x8, x8, #0xdf3
  231de0:	str	x8, [sp, #8]
  231de4:	str	xzr, [sp]
  231de8:	mov	w1, w23
  231dec:	mov	x2, x21
  231df0:	mov	x4, x22
  231df4:	mov	x7, xzr
  231df8:	bl	2539f0 <log_object_internal@plt>
  231dfc:	ldr	x0, [x19, #64]
  231e00:	sub	x1, x29, #0x20
  231e04:	sub	x2, x29, #0x10
  231e08:	sub	x3, x29, #0x8
  231e0c:	bl	2320bc <ordered_hashmap_iterate>
  231e10:	tbz	w0, #0, 23209c <udev_event_execute_run+0x358>
  231e14:	ldur	w8, [x29, #-16]
  231e18:	cbz	w8, 231eb8 <udev_event_execute_run+0x174>
  231e1c:	str	xzr, [sp, #48]
  231e20:	ldr	x24, [x19]
  231e24:	sub	w23, w8, #0x1
  231e28:	cbz	x24, 231e3c <udev_event_execute_run+0xf8>
  231e2c:	mov	w0, #0x1                   	// #1
  231e30:	bl	2535b0 <log_get_max_level_realm@plt>
  231e34:	cmp	w0, #0x7
  231e38:	b.ge	23204c <udev_event_execute_run+0x308>  // b.tcont
  231e3c:	ldr	x6, [sp, #48]
  231e40:	ldur	x8, [x29, #-8]
  231e44:	mov	w0, #0x7                   	// #7
  231e48:	mov	w3, #0x3ea                 	// #1002
  231e4c:	cmp	x6, #0x0
  231e50:	csel	x5, xzr, x25, eq  // eq = none
  231e54:	mov	w1, wzr
  231e58:	mov	x2, x21
  231e5c:	mov	x4, x22
  231e60:	mov	x7, xzr
  231e64:	stp	x28, x8, [sp, #8]
  231e68:	str	xzr, [sp]
  231e6c:	bl	2539f0 <log_object_internal@plt>
  231e70:	ldr	x0, [x19]
  231e74:	ldur	x2, [x29, #-8]
  231e78:	mov	w1, w23
  231e7c:	mov	w3, wzr
  231e80:	bl	23f208 <udev_builtin_run>
  231e84:	tbz	w0, #31, 231dfc <udev_event_execute_run+0xb8>
  231e88:	str	xzr, [sp, #48]
  231e8c:	ldr	x24, [x19]
  231e90:	mov	w23, w0
  231e94:	cbz	x24, 231dbc <udev_event_execute_run+0x78>
  231e98:	mov	w0, #0x1                   	// #1
  231e9c:	bl	2535b0 <log_get_max_level_realm@plt>
  231ea0:	cmp	w0, #0x7
  231ea4:	b.lt	231dbc <udev_event_execute_run+0x78>  // b.tstop
  231ea8:	add	x1, sp, #0x30
  231eac:	mov	x0, x24
  231eb0:	bl	253a40 <sd_device_get_sysname@plt>
  231eb4:	b	231dbc <udev_event_execute_run+0x78>
  231eb8:	ldr	x8, [x19, #72]
  231ebc:	cbz	x8, 231f40 <udev_event_execute_run+0x1fc>
  231ec0:	str	xzr, [sp, #40]
  231ec4:	ldr	x23, [x19]
  231ec8:	cbz	x23, 231edc <udev_event_execute_run+0x198>
  231ecc:	mov	w0, #0x1                   	// #1
  231ed0:	bl	2535b0 <log_get_max_level_realm@plt>
  231ed4:	cmp	w0, #0x7
  231ed8:	b.ge	23206c <udev_event_execute_run+0x328>  // b.tcont
  231edc:	ldr	x23, [sp, #40]
  231ee0:	ldr	x2, [x19, #72]
  231ee4:	ldur	x27, [x29, #-8]
  231ee8:	mov	w3, #0x4240                	// #16960
  231eec:	cmp	x23, #0x0
  231ef0:	add	x0, sp, #0x30
  231ef4:	mov	w1, #0x40                  	// #64
  231ef8:	movk	w3, #0xf, lsl #16
  231efc:	csel	x24, xzr, x25, eq  // eq = none
  231f00:	bl	254210 <format_timespan@plt>
  231f04:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  231f08:	stp	x27, x0, [sp, #16]
  231f0c:	add	x8, x8, #0x919
  231f10:	mov	w0, #0x7                   	// #7
  231f14:	mov	w3, #0x3f3                 	// #1011
  231f18:	mov	w1, wzr
  231f1c:	mov	x2, x21
  231f20:	mov	x4, x22
  231f24:	mov	x5, x24
  231f28:	mov	x6, x23
  231f2c:	mov	x7, xzr
  231f30:	stp	xzr, x8, [sp]
  231f34:	bl	2539f0 <log_object_internal@plt>
  231f38:	ldr	w0, [x19, #72]
  231f3c:	bl	254220 <usleep@plt>
  231f40:	str	xzr, [sp, #48]
  231f44:	ldr	x23, [x19]
  231f48:	cbz	x23, 231f5c <udev_event_execute_run+0x218>
  231f4c:	mov	w0, #0x1                   	// #1
  231f50:	bl	2535b0 <log_get_max_level_realm@plt>
  231f54:	cmp	w0, #0x7
  231f58:	b.ge	23205c <udev_event_execute_run+0x318>  // b.tcont
  231f5c:	ldr	x6, [sp, #48]
  231f60:	ldur	x8, [x29, #-8]
  231f64:	mov	w0, #0x7                   	// #7
  231f68:	mov	w3, #0x3f7                 	// #1015
  231f6c:	cmp	x6, #0x0
  231f70:	csel	x5, xzr, x25, eq  // eq = none
  231f74:	mov	w1, wzr
  231f78:	mov	x2, x21
  231f7c:	mov	x4, x22
  231f80:	mov	x7, xzr
  231f84:	stp	x26, x8, [sp, #8]
  231f88:	str	xzr, [sp]
  231f8c:	bl	2539f0 <log_object_internal@plt>
  231f90:	ldur	x3, [x29, #-8]
  231f94:	mov	x0, x19
  231f98:	mov	x1, x20
  231f9c:	mov	w2, wzr
  231fa0:	mov	x4, xzr
  231fa4:	mov	x5, xzr
  231fa8:	bl	2306b8 <udev_event_spawn>
  231fac:	mov	w23, w0
  231fb0:	tbnz	w0, #31, 232008 <udev_event_execute_run+0x2c4>
  231fb4:	cbz	w23, 231dfc <udev_event_execute_run+0xb8>
  231fb8:	str	xzr, [sp, #48]
  231fbc:	ldr	x24, [x19]
  231fc0:	cbz	x24, 231fd4 <udev_event_execute_run+0x290>
  231fc4:	mov	w0, #0x1                   	// #1
  231fc8:	bl	2535b0 <log_get_max_level_realm@plt>
  231fcc:	cmp	w0, #0x7
  231fd0:	b.ge	23207c <udev_event_execute_run+0x338>  // b.tcont
  231fd4:	ldr	x6, [sp, #48]
  231fd8:	ldur	x8, [x29, #-8]
  231fdc:	mov	w0, #0x7                   	// #7
  231fe0:	mov	w3, #0x3fc                 	// #1020
  231fe4:	cmp	x6, #0x0
  231fe8:	str	x8, [sp, #16]
  231fec:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  231ff0:	csel	x5, xzr, x25, eq  // eq = none
  231ff4:	add	x8, x8, #0x50b
  231ff8:	mov	w1, wzr
  231ffc:	str	w23, [sp, #24]
  232000:	stp	xzr, x8, [sp]
  232004:	b	231dec <udev_event_execute_run+0xa8>
  232008:	str	xzr, [sp, #48]
  23200c:	ldr	x24, [x19]
  232010:	cbz	x24, 232024 <udev_event_execute_run+0x2e0>
  232014:	mov	w0, #0x1                   	// #1
  232018:	bl	2535b0 <log_get_max_level_realm@plt>
  23201c:	cmp	w0, #0x4
  232020:	b.ge	23208c <udev_event_execute_run+0x348>  // b.tcont
  232024:	ldur	x8, [x29, #-8]
  232028:	ldr	x6, [sp, #48]
  23202c:	mov	w0, #0x4                   	// #4
  232030:	mov	w3, #0x3fa                 	// #1018
  232034:	str	x8, [sp, #16]
  232038:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23203c:	cmp	x6, #0x0
  232040:	add	x8, x8, #0x63c
  232044:	csel	x5, xzr, x25, eq  // eq = none
  232048:	b	231de0 <udev_event_execute_run+0x9c>
  23204c:	add	x1, sp, #0x30
  232050:	mov	x0, x24
  232054:	bl	253a40 <sd_device_get_sysname@plt>
  232058:	b	231e3c <udev_event_execute_run+0xf8>
  23205c:	add	x1, sp, #0x30
  232060:	mov	x0, x23
  232064:	bl	253a40 <sd_device_get_sysname@plt>
  232068:	b	231f5c <udev_event_execute_run+0x218>
  23206c:	add	x1, sp, #0x28
  232070:	mov	x0, x23
  232074:	bl	253a40 <sd_device_get_sysname@plt>
  232078:	b	231edc <udev_event_execute_run+0x198>
  23207c:	add	x1, sp, #0x30
  232080:	mov	x0, x24
  232084:	bl	253a40 <sd_device_get_sysname@plt>
  232088:	b	231fd4 <udev_event_execute_run+0x290>
  23208c:	add	x1, sp, #0x30
  232090:	mov	x0, x24
  232094:	bl	253a40 <sd_device_get_sysname@plt>
  232098:	b	232024 <udev_event_execute_run+0x2e0>
  23209c:	ldp	x20, x19, [sp, #224]
  2320a0:	ldp	x22, x21, [sp, #208]
  2320a4:	ldp	x24, x23, [sp, #192]
  2320a8:	ldp	x26, x25, [sp, #176]
  2320ac:	ldp	x28, x27, [sp, #160]
  2320b0:	ldp	x29, x30, [sp, #144]
  2320b4:	add	sp, sp, #0xf0
  2320b8:	ret

00000000002320bc <ordered_hashmap_iterate>:
  2320bc:	stp	x29, x30, [sp, #-16]!
  2320c0:	mov	x29, sp
  2320c4:	bl	253b60 <internal_hashmap_iterate@plt>
  2320c8:	and	w0, w0, #0x1
  2320cc:	ldp	x29, x30, [sp], #16
  2320d0:	ret

00000000002320d4 <startswith>:
  2320d4:	stp	x29, x30, [sp, #-48]!
  2320d8:	stp	x20, x19, [sp, #32]
  2320dc:	mov	x20, x0
  2320e0:	mov	x0, x1
  2320e4:	str	x21, [sp, #16]
  2320e8:	mov	x29, sp
  2320ec:	mov	x19, x1
  2320f0:	bl	2539a0 <strlen@plt>
  2320f4:	mov	x21, x0
  2320f8:	mov	x0, x20
  2320fc:	mov	x1, x19
  232100:	mov	x2, x21
  232104:	bl	2539b0 <strncmp@plt>
  232108:	add	x8, x20, x21
  23210c:	ldp	x20, x19, [sp, #32]
  232110:	ldr	x21, [sp, #16]
  232114:	cmp	w0, #0x0
  232118:	csel	x0, x8, xzr, eq  // eq = none
  23211c:	ldp	x29, x30, [sp], #48
  232120:	ret

0000000000232124 <skip_leading_chars>:
  232124:	cbz	x0, 232150 <skip_leading_chars+0x2c>
  232128:	stp	x29, x30, [sp, #-32]!
  23212c:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  232130:	add	x1, x1, #0x33a
  232134:	str	x19, [sp, #16]
  232138:	mov	x29, sp
  23213c:	mov	x19, x0
  232140:	bl	254230 <strspn@plt>
  232144:	add	x0, x19, x0
  232148:	ldr	x19, [sp, #16]
  23214c:	ldp	x29, x30, [sp], #32
  232150:	ret

0000000000232154 <safe_atou>:
  232154:	stp	x29, x30, [sp, #-16]!
  232158:	mov	x2, x1
  23215c:	mov	w1, wzr
  232160:	mov	x29, sp
  232164:	bl	253970 <safe_atou_full@plt>
  232168:	ldp	x29, x30, [sp], #16
  23216c:	ret

0000000000232170 <sd_event_unrefp>:
  232170:	stp	x29, x30, [sp, #-16]!
  232174:	ldr	x0, [x0]
  232178:	mov	x29, sp
  23217c:	cbz	x0, 232184 <sd_event_unrefp+0x14>
  232180:	bl	253920 <sd_event_unref@plt>
  232184:	ldp	x29, x30, [sp], #16
  232188:	ret

000000000023218c <on_spawn_timeout_warning>:
  23218c:	sub	sp, sp, #0xa0
  232190:	stp	x29, x30, [sp, #112]
  232194:	stp	x22, x21, [sp, #128]
  232198:	stp	x20, x19, [sp, #144]
  23219c:	add	x29, sp, #0x70
  2321a0:	cbz	x2, 232264 <on_spawn_timeout_warning+0xd8>
  2321a4:	str	xzr, [sp, #40]
  2321a8:	ldr	x20, [x2]
  2321ac:	mov	x19, x2
  2321b0:	cbz	x20, 2321c4 <on_spawn_timeout_warning+0x38>
  2321b4:	mov	w0, #0x1                   	// #1
  2321b8:	bl	2535b0 <log_get_max_level_realm@plt>
  2321bc:	cmp	w0, #0x4
  2321c0:	b.ge	232254 <on_spawn_timeout_warning+0xc8>  // b.tcont
  2321c4:	ldr	x20, [sp, #40]
  2321c8:	ldr	x2, [x19, #24]
  2321cc:	ldr	x21, [x19, #8]
  2321d0:	ldr	w22, [x19, #16]
  2321d4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2321d8:	mov	w3, #0x4240                	// #16960
  2321dc:	add	x8, x8, #0xb64
  2321e0:	cmp	x20, #0x0
  2321e4:	add	x0, sp, #0x30
  2321e8:	mov	w1, #0x40                  	// #64
  2321ec:	movk	w3, #0xf, lsl #16
  2321f0:	csel	x19, xzr, x8, eq  // eq = none
  2321f4:	bl	254210 <format_timespan@plt>
  2321f8:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  2321fc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232200:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  232204:	str	x0, [sp, #32]
  232208:	add	x8, x8, #0xeb3
  23220c:	add	x2, x2, #0x661
  232210:	add	x4, x4, #0x589
  232214:	mov	w0, #0x4                   	// #4
  232218:	mov	w3, #0x25b                 	// #603
  23221c:	mov	w1, wzr
  232220:	mov	x5, x19
  232224:	mov	x6, x20
  232228:	mov	x7, xzr
  23222c:	str	w22, [sp, #24]
  232230:	stp	x8, x21, [sp, #8]
  232234:	str	xzr, [sp]
  232238:	bl	2539f0 <log_object_internal@plt>
  23223c:	ldp	x20, x19, [sp, #144]
  232240:	ldp	x22, x21, [sp, #128]
  232244:	ldp	x29, x30, [sp, #112]
  232248:	mov	w0, #0x1                   	// #1
  23224c:	add	sp, sp, #0xa0
  232250:	ret
  232254:	add	x1, sp, #0x28
  232258:	mov	x0, x20
  23225c:	bl	253a40 <sd_device_get_sysname@plt>
  232260:	b	2321c4 <on_spawn_timeout_warning+0x38>
  232264:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  232268:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23226c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  232270:	add	x1, x1, #0x583
  232274:	add	x2, x2, #0x661
  232278:	add	x4, x4, #0x3fd
  23227c:	mov	w0, #0x1                   	// #1
  232280:	mov	w3, #0x257                 	// #599
  232284:	bl	253740 <log_assert_failed_realm@plt>

0000000000232288 <on_spawn_timeout>:
  232288:	sub	sp, sp, #0xa0
  23228c:	stp	x29, x30, [sp, #112]
  232290:	stp	x22, x21, [sp, #128]
  232294:	stp	x20, x19, [sp, #144]
  232298:	add	x29, sp, #0x70
  23229c:	cbz	x2, 23236c <on_spawn_timeout+0xe4>
  2322a0:	ldr	w0, [x2, #16]
  2322a4:	mov	w1, #0x9                   	// #9
  2322a8:	mov	x19, x2
  2322ac:	bl	253c80 <kill_and_sigcont@plt>
  2322b0:	str	xzr, [sp, #40]
  2322b4:	ldr	x20, [x19]
  2322b8:	cbz	x20, 2322cc <on_spawn_timeout+0x44>
  2322bc:	mov	w0, #0x1                   	// #1
  2322c0:	bl	2535b0 <log_get_max_level_realm@plt>
  2322c4:	cmp	w0, #0x3
  2322c8:	b.ge	23235c <on_spawn_timeout+0xd4>  // b.tcont
  2322cc:	ldr	x20, [sp, #40]
  2322d0:	ldr	x2, [x19, #32]
  2322d4:	ldr	x21, [x19, #8]
  2322d8:	ldr	w22, [x19, #16]
  2322dc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2322e0:	mov	w3, #0x4240                	// #16960
  2322e4:	add	x8, x8, #0xb64
  2322e8:	cmp	x20, #0x0
  2322ec:	add	x0, sp, #0x30
  2322f0:	mov	w1, #0x40                  	// #64
  2322f4:	movk	w3, #0xf, lsl #16
  2322f8:	csel	x19, xzr, x8, eq  // eq = none
  2322fc:	bl	254210 <format_timespan@plt>
  232300:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  232304:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232308:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23230c:	str	x0, [sp, #32]
  232310:	add	x8, x8, #0xef2
  232314:	add	x2, x2, #0x661
  232318:	add	x4, x4, #0x72c
  23231c:	mov	w0, #0x3                   	// #3
  232320:	mov	w3, #0x24e                 	// #590
  232324:	mov	w1, wzr
  232328:	mov	x5, x19
  23232c:	mov	x6, x20
  232330:	mov	x7, xzr
  232334:	str	w22, [sp, #24]
  232338:	stp	x8, x21, [sp, #8]
  23233c:	str	xzr, [sp]
  232340:	bl	2539f0 <log_object_internal@plt>
  232344:	ldp	x20, x19, [sp, #144]
  232348:	ldp	x22, x21, [sp, #128]
  23234c:	ldp	x29, x30, [sp, #112]
  232350:	mov	w0, #0x1                   	// #1
  232354:	add	sp, sp, #0xa0
  232358:	ret
  23235c:	add	x1, sp, #0x28
  232360:	mov	x0, x20
  232364:	bl	253a40 <sd_device_get_sysname@plt>
  232368:	b	2322cc <on_spawn_timeout+0x44>
  23236c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  232370:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232374:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  232378:	add	x1, x1, #0x583
  23237c:	add	x2, x2, #0x661
  232380:	add	x4, x4, #0xc96
  232384:	mov	w0, #0x1                   	// #1
  232388:	mov	w3, #0x248                 	// #584
  23238c:	bl	253740 <log_assert_failed_realm@plt>

0000000000232390 <on_spawn_io>:
  232390:	stp	x29, x30, [sp, #-96]!
  232394:	stp	x28, x27, [sp, #16]
  232398:	stp	x26, x25, [sp, #32]
  23239c:	stp	x24, x23, [sp, #48]
  2323a0:	stp	x22, x21, [sp, #64]
  2323a4:	stp	x20, x19, [sp, #80]
  2323a8:	mov	x29, sp
  2323ac:	sub	sp, sp, #0x1, lsl #12
  2323b0:	sub	sp, sp, #0x40
  2323b4:	cbz	x3, 2325e4 <on_spawn_io+0x254>
  2323b8:	ldr	w8, [x3, #52]
  2323bc:	mov	x19, x3
  2323c0:	mov	w20, w1
  2323c4:	cmp	w8, w1
  2323c8:	b.eq	2323d8 <on_spawn_io+0x48>  // b.none
  2323cc:	ldr	w9, [x19, #56]
  2323d0:	cmp	w9, w20
  2323d4:	b.ne	23262c <on_spawn_io+0x29c>  // b.any
  2323d8:	ldr	x9, [x19, #64]
  2323dc:	cbz	x9, 2323ec <on_spawn_io+0x5c>
  2323e0:	ldp	x11, x10, [x19, #72]
  2323e4:	cmp	x10, x11
  2323e8:	b.cs	232608 <on_spawn_io+0x278>  // b.hs, b.nlast
  2323ec:	add	x21, sp, #0x38
  2323f0:	mov	w2, #0xfff                 	// #4095
  2323f4:	cbz	x9, 232410 <on_spawn_io+0x80>
  2323f8:	cmp	w8, w20
  2323fc:	b.ne	232410 <on_spawn_io+0x80>  // b.any
  232400:	ldp	x10, x8, [x19, #72]
  232404:	add	x21, x9, x8
  232408:	mvn	x8, x8
  23240c:	add	x2, x10, x8
  232410:	mov	w0, w20
  232414:	mov	x1, x21
  232418:	bl	253ac0 <read@plt>
  23241c:	tbnz	x0, #63, 232524 <on_spawn_io+0x194>
  232420:	strb	wzr, [x21, x0]
  232424:	ldr	w8, [x19, #52]
  232428:	cmp	w8, w20
  23242c:	b.ne	232444 <on_spawn_io+0xb4>  // b.any
  232430:	ldr	x8, [x19, #64]
  232434:	cbz	x8, 232444 <on_spawn_io+0xb4>
  232438:	ldr	x8, [x19, #80]
  23243c:	add	x8, x8, x0
  232440:	str	x8, [x19, #80]
  232444:	cmp	x0, #0x1
  232448:	b.lt	2325ac <on_spawn_io+0x21c>  // b.tstop
  23244c:	ldr	w8, [x19, #56]
  232450:	tbnz	w8, #31, 2325ac <on_spawn_io+0x21c>
  232454:	mov	x0, x21
  232458:	str	xzr, [sp, #48]
  23245c:	bl	254240 <strv_split_newlines@plt>
  232460:	str	x0, [sp, #48]
  232464:	cbz	x0, 2325a4 <on_spawn_io+0x214>
  232468:	ldr	x8, [x0]
  23246c:	cbz	x8, 2325a4 <on_spawn_io+0x214>
  232470:	adrp	x25, 211000 <worker_hash_op+0x6ad0>
  232474:	adrp	x26, 20a000 <parse_argv.options-0x3f0>
  232478:	adrp	x27, 20b000 <worker_hash_op+0xad0>
  23247c:	adrp	x28, 211000 <worker_hash_op+0x6ad0>
  232480:	adrp	x21, 20c000 <worker_hash_op+0x1ad0>
  232484:	adrp	x22, 217000 <worker_hash_op+0xcad0>
  232488:	add	x24, x0, #0x8
  23248c:	add	x25, x25, #0xb64
  232490:	add	x26, x26, #0xbac
  232494:	add	x27, x27, #0x93f
  232498:	add	x28, x28, #0xcd0
  23249c:	add	x21, x21, #0x661
  2324a0:	add	x22, x22, #0x5a2
  2324a4:	b	2324f8 <on_spawn_io+0x168>
  2324a8:	ldr	x6, [sp, #40]
  2324ac:	ldr	w9, [x19, #52]
  2324b0:	ldr	x8, [x19, #8]
  2324b4:	ldur	x10, [x24, #-8]
  2324b8:	cmp	x6, #0x0
  2324bc:	csel	x5, xzr, x25, eq  // eq = none
  2324c0:	cmp	w9, w20
  2324c4:	csel	x9, x27, x26, eq  // eq = none
  2324c8:	mov	w0, #0x7                   	// #7
  2324cc:	mov	w3, #0x23e                 	// #574
  2324d0:	mov	w1, wzr
  2324d4:	mov	x2, x21
  2324d8:	mov	x4, x22
  2324dc:	mov	x7, xzr
  2324e0:	stp	x9, x10, [sp, #24]
  2324e4:	stp	x28, x8, [sp, #8]
  2324e8:	str	xzr, [sp]
  2324ec:	bl	2539f0 <log_object_internal@plt>
  2324f0:	ldr	x8, [x24], #8
  2324f4:	cbz	x8, 2325a4 <on_spawn_io+0x214>
  2324f8:	str	xzr, [sp, #40]
  2324fc:	ldr	x23, [x19]
  232500:	cbz	x23, 2324a8 <on_spawn_io+0x118>
  232504:	mov	w0, #0x1                   	// #1
  232508:	bl	2535b0 <log_get_max_level_realm@plt>
  23250c:	cmp	w0, #0x7
  232510:	b.lt	2324a8 <on_spawn_io+0x118>  // b.tstop
  232514:	add	x1, sp, #0x28
  232518:	mov	x0, x23
  23251c:	bl	253a40 <sd_device_get_sysname@plt>
  232520:	b	2324a8 <on_spawn_io+0x118>
  232524:	bl	253660 <__errno_location@plt>
  232528:	ldr	w8, [x0]
  23252c:	cmp	w8, #0xb
  232530:	b.eq	2325ac <on_spawn_io+0x21c>  // b.none
  232534:	str	xzr, [sp, #48]
  232538:	ldr	x21, [x19]
  23253c:	ldr	w20, [x0]
  232540:	cbz	x21, 232554 <on_spawn_io+0x1c4>
  232544:	mov	w0, #0x1                   	// #1
  232548:	bl	2535b0 <log_get_max_level_realm@plt>
  23254c:	cmp	w0, #0x3
  232550:	b.ge	2325d4 <on_spawn_io+0x244>  // b.tcont
  232554:	ldr	x6, [sp, #48]
  232558:	ldr	x8, [x19, #8]
  23255c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  232560:	add	x9, x9, #0xb64
  232564:	cmp	x6, #0x0
  232568:	str	x8, [sp, #16]
  23256c:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  232570:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232574:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  232578:	csel	x5, xzr, x9, eq  // eq = none
  23257c:	add	x8, x8, #0xa96
  232580:	add	x2, x2, #0x661
  232584:	add	x4, x4, #0x5a2
  232588:	mov	w0, #0x3                   	// #3
  23258c:	mov	w3, #0x22a                 	// #554
  232590:	mov	w1, w20
  232594:	mov	x7, xzr
  232598:	stp	xzr, x8, [sp]
  23259c:	bl	2539f0 <log_object_internal@plt>
  2325a0:	b	2325ac <on_spawn_io+0x21c>
  2325a4:	add	x0, sp, #0x30
  2325a8:	bl	230ccc <strv_freep>
  2325ac:	mov	w0, wzr
  2325b0:	add	sp, sp, #0x1, lsl #12
  2325b4:	add	sp, sp, #0x40
  2325b8:	ldp	x20, x19, [sp, #80]
  2325bc:	ldp	x22, x21, [sp, #64]
  2325c0:	ldp	x24, x23, [sp, #48]
  2325c4:	ldp	x26, x25, [sp, #32]
  2325c8:	ldp	x28, x27, [sp, #16]
  2325cc:	ldp	x29, x30, [sp], #96
  2325d0:	ret
  2325d4:	add	x1, sp, #0x30
  2325d8:	mov	x0, x21
  2325dc:	bl	253a40 <sd_device_get_sysname@plt>
  2325e0:	b	232554 <on_spawn_io+0x1c4>
  2325e4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2325e8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2325ec:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  2325f0:	add	x1, x1, #0x583
  2325f4:	add	x2, x2, #0x661
  2325f8:	add	x4, x4, #0x73d
  2325fc:	mov	w0, #0x1                   	// #1
  232600:	mov	w3, #0x21a                 	// #538
  232604:	bl	253740 <log_assert_failed_realm@plt>
  232608:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23260c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232610:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  232614:	add	x1, x1, #0xa5d
  232618:	add	x2, x2, #0x661
  23261c:	add	x4, x4, #0x73d
  232620:	mov	w0, #0x1                   	// #1
  232624:	mov	w3, #0x21c                 	// #540
  232628:	bl	253740 <log_assert_failed_realm@plt>
  23262c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  232630:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232634:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  232638:	add	x1, x1, #0xfac
  23263c:	add	x2, x2, #0x661
  232640:	add	x4, x4, #0x73d
  232644:	mov	w0, #0x1                   	// #1
  232648:	mov	w3, #0x21b                 	// #539
  23264c:	bl	253740 <log_assert_failed_realm@plt>

0000000000232650 <on_spawn_sigchld>:
  232650:	sub	sp, sp, #0x60
  232654:	stp	x29, x30, [sp, #32]
  232658:	str	x23, [sp, #48]
  23265c:	stp	x22, x21, [sp, #64]
  232660:	stp	x20, x19, [sp, #80]
  232664:	add	x29, sp, #0x20
  232668:	cbz	x2, 2328d0 <on_spawn_sigchld+0x280>
  23266c:	ldr	w8, [x1, #8]
  232670:	mov	x21, x2
  232674:	mov	x20, x1
  232678:	mov	x19, x0
  23267c:	sub	w9, w8, #0x2
  232680:	cmp	w9, #0x2
  232684:	b.cs	2326fc <on_spawn_sigchld+0xac>  // b.hs, b.nlast
  232688:	str	xzr, [x29, #24]
  23268c:	ldr	x22, [x21]
  232690:	cbz	x22, 2326a4 <on_spawn_sigchld+0x54>
  232694:	mov	w0, #0x1                   	// #1
  232698:	bl	2535b0 <log_get_max_level_realm@plt>
  23269c:	cmp	w0, #0x3
  2326a0:	b.ge	232890 <on_spawn_sigchld+0x240>  // b.tcont
  2326a4:	ldr	x22, [x29, #24]
  2326a8:	ldr	w0, [x20, #24]
  2326ac:	ldr	x21, [x21, #8]
  2326b0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2326b4:	add	x8, x8, #0xb64
  2326b8:	cmp	x22, #0x0
  2326bc:	csel	x20, xzr, x8, eq  // eq = none
  2326c0:	bl	253a00 <signal_to_string@plt>
  2326c4:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  2326c8:	add	x8, x8, #0xab8
  2326cc:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2326d0:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2326d4:	stp	x21, x0, [sp, #16]
  2326d8:	add	x2, x2, #0x661
  2326dc:	add	x4, x4, #0x5cf
  2326e0:	stp	xzr, x8, [sp]
  2326e4:	mov	w0, #0x3                   	// #3
  2326e8:	mov	w3, #0x271                 	// #625
  2326ec:	mov	w1, wzr
  2326f0:	mov	x5, x20
  2326f4:	mov	x6, x22
  2326f8:	b	2327e8 <on_spawn_sigchld+0x198>
  2326fc:	cmp	w8, #0x1
  232700:	b.ne	232788 <on_spawn_sigchld+0x138>  // b.any
  232704:	ldr	w8, [x20, #24]
  232708:	cbz	w8, 2327f8 <on_spawn_sigchld+0x1a8>
  23270c:	str	xzr, [x29, #24]
  232710:	ldrb	w8, [x21, #48]
  232714:	ldr	x23, [x21]
  232718:	mov	w9, #0x7                   	// #7
  23271c:	cmp	w8, #0x0
  232720:	mov	w8, #0x4                   	// #4
  232724:	csel	w22, w8, w9, eq  // eq = none
  232728:	cbz	x23, 23273c <on_spawn_sigchld+0xec>
  23272c:	mov	w0, #0x1                   	// #1
  232730:	bl	2535b0 <log_get_max_level_realm@plt>
  232734:	cmp	w0, w22
  232738:	b.ge	2328b0 <on_spawn_sigchld+0x260>  // b.tcont
  23273c:	ldr	x6, [x29, #24]
  232740:	ldr	x8, [x21, #8]
  232744:	ldr	w9, [x20, #24]
  232748:	adrp	x10, 211000 <worker_hash_op+0x6ad0>
  23274c:	add	x10, x10, #0xb64
  232750:	cmp	x6, #0x0
  232754:	str	x8, [sp, #16]
  232758:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  23275c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232760:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  232764:	csel	x5, xzr, x10, eq  // eq = none
  232768:	add	x8, x8, #0x537
  23276c:	add	x2, x2, #0x661
  232770:	add	x4, x4, #0x5cf
  232774:	mov	w3, #0x26c                 	// #620
  232778:	mov	w0, w22
  23277c:	str	w9, [sp, #24]
  232780:	stp	xzr, x8, [sp]
  232784:	b	232854 <on_spawn_sigchld+0x204>
  232788:	str	xzr, [x29, #24]
  23278c:	ldr	x20, [x21]
  232790:	cbz	x20, 2327a4 <on_spawn_sigchld+0x154>
  232794:	mov	w0, #0x1                   	// #1
  232798:	bl	2535b0 <log_get_max_level_realm@plt>
  23279c:	cmp	w0, #0x3
  2327a0:	b.ge	2328a0 <on_spawn_sigchld+0x250>  // b.tcont
  2327a4:	ldr	x6, [x29, #24]
  2327a8:	ldr	x8, [x21, #8]
  2327ac:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  2327b0:	add	x9, x9, #0xb64
  2327b4:	cmp	x6, #0x0
  2327b8:	str	x8, [sp, #16]
  2327bc:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  2327c0:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2327c4:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2327c8:	csel	x5, xzr, x9, eq  // eq = none
  2327cc:	add	x8, x8, #0xf28
  2327d0:	add	x2, x2, #0x661
  2327d4:	add	x4, x4, #0x5cf
  2327d8:	mov	w0, #0x3                   	// #3
  2327dc:	mov	w3, #0x274                 	// #628
  2327e0:	mov	w1, wzr
  2327e4:	stp	xzr, x8, [sp]
  2327e8:	mov	x7, xzr
  2327ec:	bl	2539f0 <log_object_internal@plt>
  2327f0:	mov	w20, #0xfffffffb            	// #-5
  2327f4:	b	232864 <on_spawn_sigchld+0x214>
  2327f8:	str	xzr, [x29, #24]
  2327fc:	ldr	x22, [x21]
  232800:	cbz	x22, 232814 <on_spawn_sigchld+0x1c4>
  232804:	mov	w0, #0x1                   	// #1
  232808:	bl	2535b0 <log_get_max_level_realm@plt>
  23280c:	cmp	w0, #0x7
  232810:	b.ge	2328c0 <on_spawn_sigchld+0x270>  // b.tcont
  232814:	ldr	x8, [x21, #8]
  232818:	ldr	x6, [x29, #24]
  23281c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  232820:	add	x9, x9, #0xb64
  232824:	str	x8, [sp, #16]
  232828:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23282c:	cmp	x6, #0x0
  232830:	add	x8, x8, #0xd2c
  232834:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  232838:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  23283c:	csel	x5, xzr, x9, eq  // eq = none
  232840:	add	x2, x2, #0x661
  232844:	add	x4, x4, #0x5cf
  232848:	stp	xzr, x8, [sp]
  23284c:	mov	w0, #0x7                   	// #7
  232850:	mov	w3, #0x269                 	// #617
  232854:	mov	w1, wzr
  232858:	mov	x7, xzr
  23285c:	bl	2539f0 <log_object_internal@plt>
  232860:	ldr	w20, [x20, #24]
  232864:	mov	x0, x19
  232868:	bl	253f90 <sd_event_source_get_event@plt>
  23286c:	mov	w1, w20
  232870:	bl	253b40 <sd_event_exit@plt>
  232874:	ldp	x20, x19, [sp, #80]
  232878:	ldp	x22, x21, [sp, #64]
  23287c:	ldr	x23, [sp, #48]
  232880:	ldp	x29, x30, [sp, #32]
  232884:	mov	w0, #0x1                   	// #1
  232888:	add	sp, sp, #0x60
  23288c:	ret
  232890:	add	x1, x29, #0x18
  232894:	mov	x0, x22
  232898:	bl	253a40 <sd_device_get_sysname@plt>
  23289c:	b	2326a4 <on_spawn_sigchld+0x54>
  2328a0:	add	x1, x29, #0x18
  2328a4:	mov	x0, x20
  2328a8:	bl	253a40 <sd_device_get_sysname@plt>
  2328ac:	b	2327a4 <on_spawn_sigchld+0x154>
  2328b0:	add	x1, x29, #0x18
  2328b4:	mov	x0, x23
  2328b8:	bl	253a40 <sd_device_get_sysname@plt>
  2328bc:	b	23273c <on_spawn_sigchld+0xec>
  2328c0:	add	x1, x29, #0x18
  2328c4:	mov	x0, x22
  2328c8:	bl	253a40 <sd_device_get_sysname@plt>
  2328cc:	b	232814 <on_spawn_sigchld+0x1c4>
  2328d0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2328d4:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  2328d8:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  2328dc:	add	x1, x1, #0x583
  2328e0:	add	x2, x2, #0x661
  2328e4:	add	x4, x4, #0x9d9
  2328e8:	mov	w0, #0x1                   	// #1
  2328ec:	mov	w3, #0x264                 	// #612
  2328f0:	bl	253740 <log_assert_failed_realm@plt>

00000000002328f4 <gid_is_valid>:
  2328f4:	stp	x29, x30, [sp, #-16]!
  2328f8:	mov	x29, sp
  2328fc:	bl	2541d0 <uid_is_valid@plt>
  232900:	and	w0, w0, #0x1
  232904:	ldp	x29, x30, [sp], #16
  232908:	ret

000000000023290c <udev_node_update_old_links>:
  23290c:	sub	sp, sp, #0x80
  232910:	stp	x29, x30, [sp, #48]
  232914:	str	x25, [sp, #64]
  232918:	stp	x24, x23, [sp, #80]
  23291c:	stp	x22, x21, [sp, #96]
  232920:	stp	x20, x19, [sp, #112]
  232924:	add	x29, sp, #0x30
  232928:	cbz	x0, 232aa8 <udev_node_update_old_links+0x19c>
  23292c:	mov	x20, x1
  232930:	cbz	x1, 232acc <udev_node_update_old_links+0x1c0>
  232934:	add	x1, x29, #0x18
  232938:	mov	x19, x0
  23293c:	bl	253bd0 <sd_device_get_devpath@plt>
  232940:	tbnz	w0, #31, 232a20 <udev_node_update_old_links+0x114>
  232944:	mov	x0, x20
  232948:	bl	253ff0 <sd_device_get_devlink_first@plt>
  23294c:	cbz	x0, 232a7c <udev_node_update_old_links+0x170>
  232950:	adrp	x24, 211000 <worker_hash_op+0x6ad0>
  232954:	adrp	x25, 210000 <worker_hash_op+0x5ad0>
  232958:	adrp	x21, 217000 <worker_hash_op+0xcad0>
  23295c:	adrp	x22, 20b000 <worker_hash_op+0xad0>
  232960:	mov	x23, x0
  232964:	add	x24, x24, #0xb64
  232968:	add	x25, x25, #0x791
  23296c:	add	x21, x21, #0x5b1
  232970:	add	x22, x22, #0x24b
  232974:	b	2329e0 <udev_node_update_old_links+0xd4>
  232978:	mov	w0, #0x1                   	// #1
  23297c:	stur	xzr, [x29, #-8]
  232980:	bl	2535b0 <log_get_max_level_realm@plt>
  232984:	cmp	w0, #0x7
  232988:	b.ge	232a10 <udev_node_update_old_links+0x104>  // b.tcont
  23298c:	ldur	x6, [x29, #-8]
  232990:	ldr	x8, [x29, #24]
  232994:	mov	w0, #0x7                   	// #7
  232998:	mov	w3, #0x109                 	// #265
  23299c:	cmp	x6, #0x0
  2329a0:	csel	x5, xzr, x24, eq  // eq = none
  2329a4:	mov	w1, wzr
  2329a8:	mov	x2, x21
  2329ac:	mov	x4, x22
  2329b0:	mov	x7, xzr
  2329b4:	stp	x23, x8, [sp, #16]
  2329b8:	stp	xzr, x25, [sp]
  2329bc:	bl	2539f0 <log_object_internal@plt>
  2329c0:	mov	x0, x19
  2329c4:	mov	x1, x23
  2329c8:	mov	w2, wzr
  2329cc:	bl	232af0 <link_update>
  2329d0:	mov	x0, x20
  2329d4:	bl	254010 <sd_device_get_devlink_next@plt>
  2329d8:	mov	x23, x0
  2329dc:	cbz	x0, 232a7c <udev_node_update_old_links+0x170>
  2329e0:	mov	x0, x19
  2329e4:	bl	253ff0 <sd_device_get_devlink_first@plt>
  2329e8:	cbz	x0, 232978 <udev_node_update_old_links+0x6c>
  2329ec:	mov	x1, x0
  2329f0:	mov	x0, x23
  2329f4:	bl	253bc0 <strcmp@plt>
  2329f8:	cbz	w0, 2329d0 <udev_node_update_old_links+0xc4>
  2329fc:	mov	x0, x19
  232a00:	bl	254010 <sd_device_get_devlink_next@plt>
  232a04:	mov	x1, x0
  232a08:	cbnz	x0, 2329f0 <udev_node_update_old_links+0xe4>
  232a0c:	b	232978 <udev_node_update_old_links+0x6c>
  232a10:	sub	x1, x29, #0x8
  232a14:	mov	x0, x19
  232a18:	bl	253a40 <sd_device_get_sysname@plt>
  232a1c:	b	23298c <udev_node_update_old_links+0x80>
  232a20:	mov	w21, w0
  232a24:	mov	w0, #0x1                   	// #1
  232a28:	stur	xzr, [x29, #-8]
  232a2c:	bl	2535b0 <log_get_max_level_realm@plt>
  232a30:	cmp	w0, #0x7
  232a34:	b.ge	232a98 <udev_node_update_old_links+0x18c>  // b.tcont
  232a38:	ldur	x6, [x29, #-8]
  232a3c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  232a40:	add	x8, x8, #0xb64
  232a44:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232a48:	cmp	x6, #0x0
  232a4c:	csel	x5, xzr, x8, eq  // eq = none
  232a50:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  232a54:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  232a58:	add	x8, x8, #0xdfe
  232a5c:	add	x2, x2, #0x5b1
  232a60:	add	x4, x4, #0x24b
  232a64:	mov	w0, #0x7                   	// #7
  232a68:	mov	w3, #0xf7                  	// #247
  232a6c:	mov	w1, w21
  232a70:	mov	x7, xzr
  232a74:	stp	xzr, x8, [sp]
  232a78:	bl	2539f0 <log_object_internal@plt>
  232a7c:	ldp	x20, x19, [sp, #112]
  232a80:	ldp	x22, x21, [sp, #96]
  232a84:	ldp	x24, x23, [sp, #80]
  232a88:	ldr	x25, [sp, #64]
  232a8c:	ldp	x29, x30, [sp, #48]
  232a90:	add	sp, sp, #0x80
  232a94:	ret
  232a98:	sub	x1, x29, #0x8
  232a9c:	mov	x0, x19
  232aa0:	bl	253a40 <sd_device_get_sysname@plt>
  232aa4:	b	232a38 <udev_node_update_old_links+0x12c>
  232aa8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  232aac:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232ab0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  232ab4:	add	x1, x1, #0x9e6
  232ab8:	add	x2, x2, #0x5b1
  232abc:	add	x4, x4, #0xb4
  232ac0:	mov	w0, #0x1                   	// #1
  232ac4:	mov	w3, #0xf2                  	// #242
  232ac8:	bl	253740 <log_assert_failed_realm@plt>
  232acc:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  232ad0:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232ad4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  232ad8:	add	x1, x1, #0xa6a
  232adc:	add	x2, x2, #0x5b1
  232ae0:	add	x4, x4, #0xb4
  232ae4:	mov	w0, #0x1                   	// #1
  232ae8:	mov	w3, #0xf3                  	// #243
  232aec:	bl	253740 <log_assert_failed_realm@plt>

0000000000232af0 <link_update>:
  232af0:	stp	x29, x30, [sp, #-64]!
  232af4:	stp	x28, x23, [sp, #16]
  232af8:	stp	x22, x21, [sp, #32]
  232afc:	stp	x20, x19, [sp, #48]
  232b00:	mov	x29, sp
  232b04:	sub	sp, sp, #0x1, lsl #12
  232b08:	sub	sp, sp, #0x40
  232b0c:	stp	xzr, xzr, [x29, #-16]
  232b10:	stur	xzr, [x29, #-24]
  232b14:	cbz	x0, 232d9c <link_update+0x2ac>
  232b18:	mov	x21, x1
  232b1c:	cbz	x1, 232dc0 <link_update+0x2d0>
  232b20:	add	x1, sp, #0x20
  232b24:	mov	w20, w2
  232b28:	mov	x22, x0
  232b2c:	bl	254250 <device_get_id_filename@plt>
  232b30:	tbnz	w0, #31, 232bc0 <link_update+0xd0>
  232b34:	add	x0, x21, #0x4
  232b38:	add	x1, sp, #0x28
  232b3c:	mov	w2, #0x1000                	// #4096
  232b40:	bl	254260 <util_path_encode@plt>
  232b44:	adrp	x0, 215000 <worker_hash_op+0xaad0>
  232b48:	add	x0, x0, #0x8d2
  232b4c:	add	x1, sp, #0x28
  232b50:	mov	x2, #0xffffffffffffffff    	// #-1
  232b54:	bl	254100 <path_join_internal@plt>
  232b58:	stur	x0, [x29, #-24]
  232b5c:	cbz	x0, 232c20 <link_update+0x130>
  232b60:	ldr	x1, [sp, #32]
  232b64:	mov	x2, #0xffffffffffffffff    	// #-1
  232b68:	mov	x23, x0
  232b6c:	bl	254100 <path_join_internal@plt>
  232b70:	stur	x0, [x29, #-16]
  232b74:	cbz	x0, 232c40 <link_update+0x150>
  232b78:	mov	x19, x0
  232b7c:	tbnz	w20, #0, 232b94 <link_update+0xa4>
  232b80:	mov	x0, x19
  232b84:	bl	253960 <unlink@plt>
  232b88:	cbnz	w0, 232b94 <link_update+0xa4>
  232b8c:	mov	x0, x23
  232b90:	bl	254270 <rmdir@plt>
  232b94:	and	w1, w20, #0x1
  232b98:	sub	x3, x29, #0x8
  232b9c:	mov	x0, x22
  232ba0:	mov	x2, x23
  232ba4:	bl	234348 <link_find_prioritized>
  232ba8:	tbnz	w0, #31, 232c60 <link_update+0x170>
  232bac:	ldur	x1, [x29, #-8]
  232bb0:	mov	x0, x22
  232bb4:	mov	x2, x21
  232bb8:	bl	233b08 <node_symlink>
  232bbc:	b	232cd8 <link_update+0x1e8>
  232bc0:	mov	w19, w0
  232bc4:	mov	w0, #0x1                   	// #1
  232bc8:	str	xzr, [sp, #40]
  232bcc:	bl	2535b0 <log_get_max_level_realm@plt>
  232bd0:	cmp	w0, #0x7
  232bd4:	b.ge	232d7c <link_update+0x28c>  // b.tcont
  232bd8:	ldr	x6, [sp, #40]
  232bdc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  232be0:	add	x8, x8, #0xb64
  232be4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232be8:	cmp	x6, #0x0
  232bec:	csel	x5, xzr, x8, eq  // eq = none
  232bf0:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  232bf4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  232bf8:	add	x8, x8, #0xe18
  232bfc:	add	x2, x2, #0x5b1
  232c00:	add	x4, x4, #0x99d
  232c04:	mov	w0, #0x7                   	// #7
  232c08:	mov	w3, #0xca                  	// #202
  232c0c:	mov	w1, w19
  232c10:	mov	x7, xzr
  232c14:	stp	xzr, x8, [sp]
  232c18:	bl	2539f0 <log_object_internal@plt>
  232c1c:	b	232d48 <link_update+0x258>
  232c20:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  232c24:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  232c28:	add	x1, x1, #0x5b1
  232c2c:	add	x3, x3, #0x99d
  232c30:	mov	w0, #0x1                   	// #1
  232c34:	mov	w2, #0xcf                  	// #207
  232c38:	bl	2537c0 <log_oom_internal@plt>
  232c3c:	b	232d48 <link_update+0x258>
  232c40:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  232c44:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  232c48:	add	x1, x1, #0x5b1
  232c4c:	add	x3, x3, #0x99d
  232c50:	mov	w0, #0x1                   	// #1
  232c54:	mov	w2, #0xd2                  	// #210
  232c58:	bl	2537c0 <log_oom_internal@plt>
  232c5c:	b	232d48 <link_update+0x258>
  232c60:	mov	w0, #0x1                   	// #1
  232c64:	str	xzr, [sp, #24]
  232c68:	bl	2535b0 <log_get_max_level_realm@plt>
  232c6c:	cmp	w0, #0x7
  232c70:	b.ge	232d8c <link_update+0x29c>  // b.tcont
  232c74:	ldr	x6, [sp, #24]
  232c78:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  232c7c:	add	x8, x8, #0xb64
  232c80:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232c84:	cmp	x6, #0x0
  232c88:	csel	x5, xzr, x8, eq  // eq = none
  232c8c:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  232c90:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  232c94:	add	x8, x8, #0xe88
  232c98:	add	x2, x2, #0x5b1
  232c9c:	add	x4, x4, #0x99d
  232ca0:	mov	w0, #0x7                   	// #7
  232ca4:	mov	w3, #0xd9                  	// #217
  232ca8:	mov	w1, wzr
  232cac:	mov	x7, xzr
  232cb0:	stp	x8, x21, [sp, #8]
  232cb4:	str	xzr, [sp]
  232cb8:	bl	2539f0 <log_object_internal@plt>
  232cbc:	mov	x0, x21
  232cc0:	bl	253960 <unlink@plt>
  232cc4:	cbnz	w0, 232cd8 <link_update+0x1e8>
  232cc8:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  232ccc:	add	x1, x1, #0x9d
  232cd0:	mov	x0, x21
  232cd4:	bl	254280 <rmdir_parents@plt>
  232cd8:	tbz	w20, #0, 232d48 <link_update+0x258>
  232cdc:	mov	w21, #0xffffffff            	// #-1
  232ce0:	mov	w1, #0x1ed                 	// #493
  232ce4:	mov	x0, x19
  232ce8:	str	w21, [sp, #24]
  232cec:	bl	254290 <mkdir_parents@plt>
  232cf0:	mov	w20, w0
  232cf4:	cbz	w0, 232d00 <link_update+0x210>
  232cf8:	cmn	w20, #0x2
  232cfc:	b.ne	232d30 <link_update+0x240>  // b.any
  232d00:	mov	w1, #0x8241                	// #33345
  232d04:	movk	w1, #0x8, lsl #16
  232d08:	mov	w2, #0x124                 	// #292
  232d0c:	mov	x0, x19
  232d10:	bl	253d70 <open64@plt>
  232d14:	str	w0, [sp, #24]
  232d18:	tbz	w0, #31, 232d28 <link_update+0x238>
  232d1c:	bl	253660 <__errno_location@plt>
  232d20:	ldr	w8, [x0]
  232d24:	neg	w20, w8
  232d28:	mov	w22, #0x1                   	// #1
  232d2c:	b	232d34 <link_update+0x244>
  232d30:	mov	w22, wzr
  232d34:	add	x0, sp, #0x18
  232d38:	bl	2346b4 <closep>
  232d3c:	cbz	w22, 232d48 <link_update+0x258>
  232d40:	cmn	w20, #0x2
  232d44:	b.eq	232ce0 <link_update+0x1f0>  // b.none
  232d48:	sub	x0, x29, #0x18
  232d4c:	bl	23306c <freep>
  232d50:	sub	x0, x29, #0x10
  232d54:	bl	23306c <freep>
  232d58:	sub	x0, x29, #0x8
  232d5c:	bl	23306c <freep>
  232d60:	add	sp, sp, #0x1, lsl #12
  232d64:	add	sp, sp, #0x40
  232d68:	ldp	x20, x19, [sp, #48]
  232d6c:	ldp	x22, x21, [sp, #32]
  232d70:	ldp	x28, x23, [sp, #16]
  232d74:	ldp	x29, x30, [sp], #64
  232d78:	ret
  232d7c:	add	x1, sp, #0x28
  232d80:	mov	x0, x22
  232d84:	bl	253a40 <sd_device_get_sysname@plt>
  232d88:	b	232bd8 <link_update+0xe8>
  232d8c:	add	x1, sp, #0x18
  232d90:	mov	x0, x22
  232d94:	bl	253a40 <sd_device_get_sysname@plt>
  232d98:	b	232c74 <link_update+0x184>
  232d9c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  232da0:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232da4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  232da8:	add	x1, x1, #0x9e6
  232dac:	add	x2, x2, #0x5b1
  232db0:	add	x4, x4, #0xcf7
  232db4:	mov	w0, #0x1                   	// #1
  232db8:	mov	w3, #0xc5                  	// #197
  232dbc:	bl	253740 <log_assert_failed_realm@plt>
  232dc0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  232dc4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232dc8:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  232dcc:	add	x1, x1, #0xd8e
  232dd0:	add	x2, x2, #0x5b1
  232dd4:	add	x4, x4, #0xcf7
  232dd8:	mov	w0, #0x1                   	// #1
  232ddc:	mov	w3, #0xc6                  	// #198
  232de0:	bl	253740 <log_assert_failed_realm@plt>

0000000000232de4 <udev_node_add>:
  232de4:	sub	sp, sp, #0xa0
  232de8:	stp	x29, x30, [sp, #64]
  232dec:	add	x29, sp, #0x40
  232df0:	str	x27, [sp, #80]
  232df4:	stp	x26, x25, [sp, #96]
  232df8:	stp	x24, x23, [sp, #112]
  232dfc:	stp	x22, x21, [sp, #128]
  232e00:	stp	x20, x19, [sp, #144]
  232e04:	stur	xzr, [x29, #-8]
  232e08:	cbz	x0, 233048 <udev_node_add+0x264>
  232e0c:	mov	w24, w1
  232e10:	add	x1, x29, #0x18
  232e14:	mov	x20, x5
  232e18:	mov	w21, w4
  232e1c:	mov	w22, w3
  232e20:	mov	w23, w2
  232e24:	mov	x19, x0
  232e28:	bl	253ad0 <sd_device_get_devname@plt>
  232e2c:	tbnz	w0, #31, 232eb4 <udev_node_add+0xd0>
  232e30:	mov	w0, #0x1                   	// #1
  232e34:	bl	2535b0 <log_get_max_level_realm@plt>
  232e38:	cmp	w0, #0x7
  232e3c:	b.ge	232f98 <udev_node_add+0x1b4>  // b.tcont
  232e40:	and	w1, w24, #0x1
  232e44:	mov	x0, x19
  232e48:	mov	w2, w23
  232e4c:	mov	w3, w22
  232e50:	mov	w4, w21
  232e54:	mov	x5, x20
  232e58:	bl	233098 <node_permissions_apply>
  232e5c:	tbnz	w0, #31, 232f68 <udev_node_add+0x184>
  232e60:	sub	x1, x29, #0x8
  232e64:	mov	x0, x19
  232e68:	bl	2339ec <xsprintf_dev_num_path_from_sd_device>
  232e6c:	tbnz	w0, #31, 232f0c <udev_node_add+0x128>
  232e70:	ldr	x1, [x29, #24]
  232e74:	ldur	x2, [x29, #-8]
  232e78:	mov	x0, x19
  232e7c:	bl	233b08 <node_symlink>
  232e80:	mov	x0, x19
  232e84:	bl	253ff0 <sd_device_get_devlink_first@plt>
  232e88:	cbz	x0, 232eac <udev_node_add+0xc8>
  232e8c:	mov	x1, x0
  232e90:	mov	w2, #0x1                   	// #1
  232e94:	mov	x0, x19
  232e98:	bl	232af0 <link_update>
  232e9c:	mov	x0, x19
  232ea0:	bl	254010 <sd_device_get_devlink_next@plt>
  232ea4:	mov	x1, x0
  232ea8:	cbnz	x0, 232e90 <udev_node_add+0xac>
  232eac:	mov	w20, wzr
  232eb0:	b	232f6c <udev_node_add+0x188>
  232eb4:	mov	w25, w0
  232eb8:	mov	w0, #0x1                   	// #1
  232ebc:	stur	xzr, [x29, #-16]
  232ec0:	bl	2535b0 <log_get_max_level_realm@plt>
  232ec4:	cmp	w0, #0x7
  232ec8:	b.ge	233018 <udev_node_add+0x234>  // b.tcont
  232ecc:	ldur	x6, [x29, #-16]
  232ed0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  232ed4:	add	x8, x8, #0xb64
  232ed8:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232edc:	cmp	x6, #0x0
  232ee0:	csel	x5, xzr, x8, eq  // eq = none
  232ee4:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  232ee8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  232eec:	add	x8, x8, #0x376
  232ef0:	add	x2, x2, #0x5b1
  232ef4:	add	x4, x4, #0x87e
  232ef8:	mov	w0, #0x7                   	// #7
  232efc:	mov	w3, #0x1a6                 	// #422
  232f00:	mov	w1, w25
  232f04:	stp	xzr, x8, [sp]
  232f08:	b	232f60 <udev_node_add+0x17c>
  232f0c:	mov	w20, w0
  232f10:	mov	w0, #0x1                   	// #1
  232f14:	stur	xzr, [x29, #-16]
  232f18:	bl	2535b0 <log_get_max_level_realm@plt>
  232f1c:	cmp	w0, #0x7
  232f20:	b.ge	233028 <udev_node_add+0x244>  // b.tcont
  232f24:	ldur	x6, [x29, #-16]
  232f28:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  232f2c:	add	x8, x8, #0xb64
  232f30:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232f34:	cmp	x6, #0x0
  232f38:	csel	x5, xzr, x8, eq  // eq = none
  232f3c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  232f40:	add	x8, x8, #0x2db
  232f44:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  232f48:	add	x2, x2, #0x5b1
  232f4c:	add	x4, x4, #0x87e
  232f50:	stp	xzr, x8, [sp]
  232f54:	mov	w0, #0x7                   	// #7
  232f58:	mov	w3, #0x1b5                 	// #437
  232f5c:	mov	w1, w20
  232f60:	mov	x7, xzr
  232f64:	bl	2539f0 <log_object_internal@plt>
  232f68:	mov	w20, w0
  232f6c:	sub	x0, x29, #0x8
  232f70:	bl	23306c <freep>
  232f74:	mov	w0, w20
  232f78:	ldp	x20, x19, [sp, #144]
  232f7c:	ldp	x22, x21, [sp, #128]
  232f80:	ldp	x24, x23, [sp, #112]
  232f84:	ldp	x26, x25, [sp, #96]
  232f88:	ldr	x27, [sp, #80]
  232f8c:	ldp	x29, x30, [sp, #64]
  232f90:	add	sp, sp, #0xa0
  232f94:	ret
  232f98:	sub	x1, x29, #0x10
  232f9c:	mov	x0, x19
  232fa0:	stur	xzr, [x29, #-16]
  232fa4:	bl	254250 <device_get_id_filename@plt>
  232fa8:	mov	w0, #0x1                   	// #1
  232fac:	stur	xzr, [x29, #-24]
  232fb0:	bl	2535b0 <log_get_max_level_realm@plt>
  232fb4:	cmp	w0, #0x7
  232fb8:	b.ge	233038 <udev_node_add+0x254>  // b.tcont
  232fbc:	ldp	x25, x0, [x29, #-24]
  232fc0:	ldr	x27, [x29, #24]
  232fc4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  232fc8:	add	x8, x8, #0xb64
  232fcc:	cmp	x25, #0x0
  232fd0:	csel	x26, xzr, x8, eq  // eq = none
  232fd4:	bl	233084 <strnull>
  232fd8:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  232fdc:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  232fe0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  232fe4:	stp	x27, x0, [sp, #16]
  232fe8:	add	x8, x8, #0x1ad
  232fec:	add	x2, x2, #0x5b1
  232ff0:	add	x4, x4, #0x87e
  232ff4:	mov	w0, #0x7                   	// #7
  232ff8:	mov	w3, #0x1ac                 	// #428
  232ffc:	mov	w1, wzr
  233000:	mov	x5, x26
  233004:	mov	x6, x25
  233008:	mov	x7, xzr
  23300c:	stp	xzr, x8, [sp]
  233010:	bl	2539f0 <log_object_internal@plt>
  233014:	b	232e40 <udev_node_add+0x5c>
  233018:	sub	x1, x29, #0x10
  23301c:	mov	x0, x19
  233020:	bl	253a40 <sd_device_get_sysname@plt>
  233024:	b	232ecc <udev_node_add+0xe8>
  233028:	sub	x1, x29, #0x10
  23302c:	mov	x0, x19
  233030:	bl	253a40 <sd_device_get_sysname@plt>
  233034:	b	232f24 <udev_node_add+0x140>
  233038:	sub	x1, x29, #0x18
  23303c:	mov	x0, x19
  233040:	bl	253a40 <sd_device_get_sysname@plt>
  233044:	b	232fbc <udev_node_add+0x1d8>
  233048:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23304c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233050:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  233054:	add	x1, x1, #0x9e6
  233058:	add	x2, x2, #0x5b1
  23305c:	add	x4, x4, #0x7c5
  233060:	mov	w0, #0x1                   	// #1
  233064:	mov	w3, #0x1a2                 	// #418
  233068:	bl	253740 <log_assert_failed_realm@plt>

000000000023306c <freep>:
  23306c:	stp	x29, x30, [sp, #-16]!
  233070:	ldr	x0, [x0]
  233074:	mov	x29, sp
  233078:	bl	2536e0 <free@plt>
  23307c:	ldp	x29, x30, [sp], #16
  233080:	ret

0000000000233084 <strnull>:
  233084:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  233088:	add	x8, x8, #0x1d2
  23308c:	cmp	x0, #0x0
  233090:	csel	x0, x8, x0, eq  // eq = none
  233094:	ret

0000000000233098 <node_permissions_apply>:
  233098:	sub	sp, sp, #0x170
  23309c:	stp	x29, x30, [sp, #272]
  2330a0:	add	x29, sp, #0x110
  2330a4:	stp	x28, x27, [sp, #288]
  2330a8:	stp	x26, x25, [sp, #304]
  2330ac:	stp	x24, x23, [sp, #320]
  2330b0:	stp	x22, x21, [sp, #336]
  2330b4:	stp	x20, x19, [sp, #352]
  2330b8:	stur	xzr, [x29, #-32]
  2330bc:	cbz	x0, 2339c8 <node_permissions_apply+0x930>
  2330c0:	mov	w26, w1
  2330c4:	sub	x1, x29, #0x10
  2330c8:	mov	x20, x5
  2330cc:	mov	w22, w4
  2330d0:	mov	w23, w3
  2330d4:	mov	w25, w2
  2330d8:	mov	x19, x0
  2330dc:	bl	253ad0 <sd_device_get_devname@plt>
  2330e0:	tbnz	w0, #31, 233354 <node_permissions_apply+0x2bc>
  2330e4:	sub	x1, x29, #0x18
  2330e8:	mov	x0, x19
  2330ec:	bl	253bb0 <sd_device_get_subsystem@plt>
  2330f0:	tbnz	w0, #31, 2333a8 <node_permissions_apply+0x310>
  2330f4:	add	x1, sp, #0x68
  2330f8:	mov	x0, x19
  2330fc:	bl	253bf0 <sd_device_get_devnum@plt>
  233100:	mov	w21, w0
  233104:	tbnz	w0, #31, 2333fc <node_permissions_apply+0x364>
  233108:	sub	x1, x29, #0x20
  23310c:	mov	x0, x19
  233110:	bl	254250 <device_get_id_filename@plt>
  233114:	ldur	x0, [x29, #-24]
  233118:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  23311c:	add	x1, x1, #0x64e
  233120:	bl	253bc0 <strcmp@plt>
  233124:	cmp	w0, #0x0
  233128:	ldur	x0, [x29, #-16]
  23312c:	mov	w8, #0x2000                	// #8192
  233130:	mov	w9, #0x6000                	// #24576
  233134:	add	x1, sp, #0x70
  233138:	csel	w24, w9, w8, eq  // eq = none
  23313c:	bl	253498 <lstat64>
  233140:	tbnz	w0, #31, 2334e4 <node_permissions_apply+0x44c>
  233144:	orr	w24, w24, w25
  233148:	cmn	w24, #0x1
  23314c:	b.eq	233160 <node_permissions_apply+0xc8>  // b.none
  233150:	ldr	w8, [sp, #128]
  233154:	eor	w8, w8, w24
  233158:	tst	w8, #0xf000
  23315c:	b.ne	233480 <node_permissions_apply+0x3e8>  // b.any
  233160:	ldr	x8, [sp, #144]
  233164:	ldr	x9, [sp, #104]
  233168:	cmp	x8, x9
  23316c:	b.ne	233480 <node_permissions_apply+0x3e8>  // b.any
  233170:	ldr	w8, [sp, #128]
  233174:	cmn	w24, #0x1
  233178:	cset	w9, ne  // ne = any
  23317c:	mov	w0, w23
  233180:	eor	w8, w8, w25
  233184:	tst	w8, #0x1ff
  233188:	cset	w8, ne  // ne = any
  23318c:	and	w27, w9, w8
  233190:	bl	2541d0 <uid_is_valid@plt>
  233194:	ldr	w8, [sp, #136]
  233198:	cmp	w8, w23
  23319c:	cset	w8, ne  // ne = any
  2331a0:	and	w28, w0, w8
  2331a4:	mov	w0, w22
  2331a8:	bl	234704 <gid_is_valid>
  2331ac:	ldr	w8, [sp, #140]
  2331b0:	orr	w9, w27, w28
  2331b4:	cmp	w8, w22
  2331b8:	cset	w8, ne  // ne = any
  2331bc:	and	w8, w0, w8
  2331c0:	orr	w8, w9, w8
  2331c4:	tbnz	w8, #0, 2331cc <node_permissions_apply+0x134>
  2331c8:	tbz	w26, #0, 233930 <node_permissions_apply+0x898>
  2331cc:	cbz	w8, 23355c <node_permissions_apply+0x4c4>
  2331d0:	mov	w0, #0x1                   	// #1
  2331d4:	str	xzr, [sp, #72]
  2331d8:	bl	2535b0 <log_get_max_level_realm@plt>
  2331dc:	cmp	w0, #0x7
  2331e0:	b.ge	233998 <node_permissions_apply+0x900>  // b.tcont
  2331e4:	ldr	x21, [sp, #72]
  2331e8:	ldur	x27, [x29, #-16]
  2331ec:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2331f0:	add	x8, x8, #0xb64
  2331f4:	cmp	x21, #0x0
  2331f8:	mov	w0, w23
  2331fc:	csel	x26, xzr, x8, eq  // eq = none
  233200:	bl	2541d0 <uid_is_valid@plt>
  233204:	ldr	w8, [sp, #136]
  233208:	tst	w0, #0x1
  23320c:	mov	w0, w22
  233210:	csel	w28, w23, w8, ne  // ne = any
  233214:	bl	234704 <gid_is_valid>
  233218:	ldr	w8, [sp, #140]
  23321c:	ldr	w9, [sp, #128]
  233220:	tst	w0, #0x1
  233224:	and	w25, w25, #0x1ff
  233228:	csel	w8, w22, w8, ne  // ne = any
  23322c:	and	w9, w9, #0x1ff
  233230:	cmn	w24, #0x1
  233234:	str	w8, [sp, #32]
  233238:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23323c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233240:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  233244:	csel	w9, w25, w9, ne  // ne = any
  233248:	add	x8, x8, #0xed
  23324c:	add	x2, x2, #0x5b1
  233250:	add	x4, x4, #0x1d9
  233254:	mov	w0, #0x7                   	// #7
  233258:	mov	w3, #0x144                 	// #324
  23325c:	mov	w1, wzr
  233260:	mov	x5, x26
  233264:	mov	x6, x21
  233268:	mov	x7, xzr
  23326c:	str	w9, [sp, #40]
  233270:	str	w28, [sp, #24]
  233274:	stp	x8, x27, [sp, #8]
  233278:	str	xzr, [sp]
  23327c:	mov	w27, #0x7                   	// #7
  233280:	bl	2539f0 <log_object_internal@plt>
  233284:	ldur	x0, [x29, #-16]
  233288:	mov	w1, w24
  23328c:	mov	w2, w23
  233290:	mov	w3, w22
  233294:	bl	2542a0 <chmod_and_chown@plt>
  233298:	mov	w21, w0
  23329c:	tbz	w0, #31, 233608 <node_permissions_apply+0x570>
  2332a0:	cmn	w21, #0x2
  2332a4:	mov	w8, #0x3                   	// #3
  2332a8:	mov	w0, #0x1                   	// #1
  2332ac:	str	xzr, [sp, #72]
  2332b0:	csel	w28, w27, w8, eq  // eq = none
  2332b4:	bl	2535b0 <log_get_max_level_realm@plt>
  2332b8:	cmp	w0, w28
  2332bc:	b.ge	2339b8 <node_permissions_apply+0x920>  // b.tcont
  2332c0:	ldr	x26, [sp, #72]
  2332c4:	ldur	x27, [x29, #-16]
  2332c8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2332cc:	add	x8, x8, #0xb64
  2332d0:	cmp	x26, #0x0
  2332d4:	csel	x8, xzr, x8, eq  // eq = none
  2332d8:	mov	w0, w23
  2332dc:	str	x8, [sp, #56]
  2332e0:	bl	2541d0 <uid_is_valid@plt>
  2332e4:	ldr	w8, [sp, #136]
  2332e8:	tst	w0, #0x1
  2332ec:	mov	w0, w22
  2332f0:	csel	w23, w23, w8, ne  // ne = any
  2332f4:	bl	234704 <gid_is_valid>
  2332f8:	ldr	w8, [sp, #140]
  2332fc:	ldr	w9, [sp, #128]
  233300:	tst	w0, #0x1
  233304:	ldr	x5, [sp, #56]
  233308:	csel	w8, w22, w8, ne  // ne = any
  23330c:	and	w9, w9, #0x1ff
  233310:	cmn	w24, #0x1
  233314:	str	w8, [sp, #32]
  233318:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  23331c:	csel	w9, w25, w9, ne  // ne = any
  233320:	add	x8, x8, #0xfdd
  233324:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233328:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  23332c:	str	w9, [sp, #40]
  233330:	str	w23, [sp, #24]
  233334:	add	x2, x2, #0x5b1
  233338:	add	x4, x4, #0x1d9
  23333c:	stp	x8, x27, [sp, #8]
  233340:	mov	w3, #0x14e                 	// #334
  233344:	str	xzr, [sp]
  233348:	mov	w0, w28
  23334c:	mov	w1, w21
  233350:	b	2335fc <node_permissions_apply+0x564>
  233354:	mov	w21, w0
  233358:	mov	w0, #0x1                   	// #1
  23335c:	str	xzr, [sp, #112]
  233360:	bl	2535b0 <log_get_max_level_realm@plt>
  233364:	cmp	w0, #0x7
  233368:	b.ge	233948 <node_permissions_apply+0x8b0>  // b.tcont
  23336c:	ldr	x6, [sp, #112]
  233370:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  233374:	add	x8, x8, #0xb64
  233378:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  23337c:	cmp	x6, #0x0
  233380:	csel	x5, xzr, x8, eq  // eq = none
  233384:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  233388:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  23338c:	add	x8, x8, #0x3ab
  233390:	add	x2, x2, #0x5b1
  233394:	add	x4, x4, #0x1d9
  233398:	mov	w0, #0x7                   	// #7
  23339c:	mov	w3, #0x11d                 	// #285
  2333a0:	str	x8, [sp, #8]
  2333a4:	b	233448 <node_permissions_apply+0x3b0>
  2333a8:	mov	w21, w0
  2333ac:	mov	w0, #0x1                   	// #1
  2333b0:	str	xzr, [sp, #112]
  2333b4:	bl	2535b0 <log_get_max_level_realm@plt>
  2333b8:	cmp	w0, #0x7
  2333bc:	b.ge	233958 <node_permissions_apply+0x8c0>  // b.tcont
  2333c0:	ldr	x6, [sp, #112]
  2333c4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2333c8:	add	x8, x8, #0xb64
  2333cc:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2333d0:	cmp	x6, #0x0
  2333d4:	csel	x5, xzr, x8, eq  // eq = none
  2333d8:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  2333dc:	add	x8, x8, #0xb55
  2333e0:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  2333e4:	add	x2, x2, #0x5b1
  2333e8:	add	x4, x4, #0x1d9
  2333ec:	str	x8, [sp, #8]
  2333f0:	mov	w0, #0x7                   	// #7
  2333f4:	mov	w3, #0x120                 	// #288
  2333f8:	b	233448 <node_permissions_apply+0x3b0>
  2333fc:	mov	w0, #0x1                   	// #1
  233400:	str	xzr, [sp, #112]
  233404:	bl	2535b0 <log_get_max_level_realm@plt>
  233408:	cmp	w0, #0x7
  23340c:	b.ge	233968 <node_permissions_apply+0x8d0>  // b.tcont
  233410:	ldr	x6, [sp, #112]
  233414:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  233418:	add	x8, x8, #0xb64
  23341c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233420:	cmp	x6, #0x0
  233424:	csel	x5, xzr, x8, eq  // eq = none
  233428:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23342c:	add	x8, x8, #0xcde
  233430:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  233434:	add	x2, x2, #0x5b1
  233438:	add	x4, x4, #0x1d9
  23343c:	str	x8, [sp, #8]
  233440:	mov	w0, #0x7                   	// #7
  233444:	mov	w3, #0x123                 	// #291
  233448:	mov	w1, w21
  23344c:	str	xzr, [sp]
  233450:	mov	x7, xzr
  233454:	bl	2539f0 <log_object_internal@plt>
  233458:	mov	w21, w0
  23345c:	mov	w0, w21
  233460:	ldp	x20, x19, [sp, #352]
  233464:	ldp	x22, x21, [sp, #336]
  233468:	ldp	x24, x23, [sp, #320]
  23346c:	ldp	x26, x25, [sp, #304]
  233470:	ldp	x28, x27, [sp, #288]
  233474:	ldp	x29, x30, [sp, #272]
  233478:	add	sp, sp, #0x170
  23347c:	ret
  233480:	mov	w0, #0x1                   	// #1
  233484:	str	xzr, [sp, #72]
  233488:	bl	2535b0 <log_get_max_level_realm@plt>
  23348c:	cmp	w0, #0x7
  233490:	b.ge	233978 <node_permissions_apply+0x8e0>  // b.tcont
  233494:	ldur	x8, [x29, #-16]
  233498:	ldur	x9, [x29, #-32]
  23349c:	ldr	x6, [sp, #72]
  2334a0:	adrp	x10, 211000 <worker_hash_op+0x6ad0>
  2334a4:	add	x10, x10, #0xb64
  2334a8:	stp	x8, x9, [sp, #16]
  2334ac:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  2334b0:	cmp	x6, #0x0
  2334b4:	add	x8, x8, #0x2c1
  2334b8:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2334bc:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  2334c0:	mov	w1, #0x11                  	// #17
  2334c4:	csel	x5, xzr, x10, eq  // eq = none
  2334c8:	add	x2, x2, #0x5b1
  2334cc:	add	x4, x4, #0x1d9
  2334d0:	stp	xzr, x8, [sp]
  2334d4:	mov	w0, #0x7                   	// #7
  2334d8:	movk	w1, #0x4000, lsl #16
  2334dc:	mov	w3, #0x134                 	// #308
  2334e0:	b	233450 <node_permissions_apply+0x3b8>
  2334e4:	bl	253660 <__errno_location@plt>
  2334e8:	ldr	w8, [x0]
  2334ec:	cmp	w8, #0x2
  2334f0:	b.ne	2334fc <node_permissions_apply+0x464>  // b.any
  2334f4:	mov	w21, wzr
  2334f8:	b	23345c <node_permissions_apply+0x3c4>
  2334fc:	str	xzr, [sp, #72]
  233500:	ldr	w20, [x0]
  233504:	mov	w0, #0x1                   	// #1
  233508:	bl	2535b0 <log_get_max_level_realm@plt>
  23350c:	cmp	w0, #0x7
  233510:	b.ge	233988 <node_permissions_apply+0x8f0>  // b.tcont
  233514:	ldur	x8, [x29, #-16]
  233518:	ldr	x6, [sp, #72]
  23351c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  233520:	add	x9, x9, #0xb64
  233524:	str	x8, [sp, #16]
  233528:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  23352c:	cmp	x6, #0x0
  233530:	add	x8, x8, #0x45a
  233534:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233538:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  23353c:	csel	x5, xzr, x9, eq  // eq = none
  233540:	add	x2, x2, #0x5b1
  233544:	add	x4, x4, #0x1d9
  233548:	stp	xzr, x8, [sp]
  23354c:	mov	w0, #0x7                   	// #7
  233550:	mov	w3, #0x12e                 	// #302
  233554:	mov	w1, w20
  233558:	b	233450 <node_permissions_apply+0x3b8>
  23355c:	mov	w0, #0x1                   	// #1
  233560:	str	xzr, [sp, #72]
  233564:	bl	2535b0 <log_get_max_level_realm@plt>
  233568:	cmp	w0, #0x7
  23356c:	b.ge	2339a8 <node_permissions_apply+0x910>  // b.tcont
  233570:	ldr	x26, [sp, #72]
  233574:	ldur	x28, [x29, #-16]
  233578:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23357c:	add	x8, x8, #0xb64
  233580:	cmp	x26, #0x0
  233584:	mov	w0, w23
  233588:	csel	x27, xzr, x8, eq  // eq = none
  23358c:	bl	2541d0 <uid_is_valid@plt>
  233590:	ldr	w8, [sp, #136]
  233594:	tst	w0, #0x1
  233598:	mov	w0, w22
  23359c:	csel	w23, w23, w8, ne  // ne = any
  2335a0:	bl	234704 <gid_is_valid>
  2335a4:	ldr	w8, [sp, #140]
  2335a8:	ldr	w9, [sp, #128]
  2335ac:	tst	w0, #0x1
  2335b0:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2335b4:	csel	w8, w22, w8, ne  // ne = any
  2335b8:	cmn	w24, #0x1
  2335bc:	csel	w9, w25, w9, ne  // ne = any
  2335c0:	str	w8, [sp, #32]
  2335c4:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  2335c8:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  2335cc:	and	w9, w9, #0x1ff
  2335d0:	add	x8, x8, #0x55e
  2335d4:	add	x2, x2, #0x5b1
  2335d8:	add	x4, x4, #0x1d9
  2335dc:	mov	w0, #0x7                   	// #7
  2335e0:	mov	w3, #0x154                 	// #340
  2335e4:	mov	w1, wzr
  2335e8:	mov	x5, x27
  2335ec:	str	w9, [sp, #40]
  2335f0:	str	w23, [sp, #24]
  2335f4:	stp	x8, x28, [sp, #8]
  2335f8:	str	xzr, [sp]
  2335fc:	mov	x6, x26
  233600:	mov	x7, xzr
  233604:	bl	2539f0 <log_object_internal@plt>
  233608:	mov	w8, #0xfffffffe            	// #-2
  23360c:	add	x1, sp, #0x48
  233610:	add	x2, sp, #0x58
  233614:	add	x3, sp, #0x60
  233618:	mov	x0, x20
  23361c:	str	w8, [sp, #72]
  233620:	str	xzr, [sp, #80]
  233624:	bl	23471c <ordered_hashmap_iterate>
  233628:	tbz	w0, #0, 233900 <node_permissions_apply+0x868>
  23362c:	adrp	x22, 20f000 <worker_hash_op+0x4ad0>
  233630:	adrp	x28, 211000 <worker_hash_op+0x6ad0>
  233634:	adrp	x23, 217000 <worker_hash_op+0xcad0>
  233638:	adrp	x24, 215000 <worker_hash_op+0xaad0>
  23363c:	adrp	x27, 215000 <worker_hash_op+0xaad0>
  233640:	mov	w25, wzr
  233644:	add	x22, x22, #0x593
  233648:	add	x28, x28, #0xb64
  23364c:	add	x23, x23, #0x5b1
  233650:	add	x24, x24, #0x1d9
  233654:	add	x27, x27, #0x1f0
  233658:	str	wzr, [sp, #56]
  23365c:	b	2336c8 <node_permissions_apply+0x630>
  233660:	mov	w0, #0x1                   	// #1
  233664:	str	xzr, [sp, #64]
  233668:	bl	2535b0 <log_get_max_level_realm@plt>
  23366c:	cmp	w0, #0x3
  233670:	b.ge	2338b0 <node_permissions_apply+0x818>  // b.tcont
  233674:	ldr	x6, [sp, #64]
  233678:	ldp	x9, x8, [sp, #88]
  23367c:	mov	w0, #0x3                   	// #3
  233680:	mov	w3, #0x16f                 	// #367
  233684:	cmp	x6, #0x0
  233688:	stp	x8, x9, [sp, #16]
  23368c:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  233690:	csel	x5, xzr, x28, eq  // eq = none
  233694:	add	x8, x8, #0x912
  233698:	mov	w1, wzr
  23369c:	mov	x2, x23
  2336a0:	mov	x4, x24
  2336a4:	mov	x7, xzr
  2336a8:	stp	xzr, x8, [sp]
  2336ac:	bl	2539f0 <log_object_internal@plt>
  2336b0:	add	x1, sp, #0x48
  2336b4:	add	x2, sp, #0x58
  2336b8:	add	x3, sp, #0x60
  2336bc:	mov	x0, x20
  2336c0:	bl	23471c <ordered_hashmap_iterate>
  2336c4:	tbz	w0, #0, 233908 <node_permissions_apply+0x870>
  2336c8:	ldr	x26, [sp, #96]
  2336cc:	mov	x1, x22
  2336d0:	mov	x0, x26
  2336d4:	bl	253bc0 <strcmp@plt>
  2336d8:	cbz	w0, 23375c <node_permissions_apply+0x6c4>
  2336dc:	mov	x0, x26
  2336e0:	mov	x1, x27
  2336e4:	bl	253bc0 <strcmp@plt>
  2336e8:	cbnz	w0, 233660 <node_permissions_apply+0x5c8>
  2336ec:	ldur	x0, [x29, #-16]
  2336f0:	ldr	x2, [sp, #88]
  2336f4:	mov	w1, wzr
  2336f8:	bl	2542b0 <mac_smack_apply@plt>
  2336fc:	tbnz	w0, #31, 233838 <node_permissions_apply+0x7a0>
  233700:	mov	w0, #0x1                   	// #1
  233704:	str	xzr, [sp, #64]
  233708:	bl	2535b0 <log_get_max_level_realm@plt>
  23370c:	cmp	w0, #0x7
  233710:	b.ge	2338d0 <node_permissions_apply+0x838>  // b.tcont
  233714:	ldr	x6, [sp, #64]
  233718:	ldr	x8, [sp, #88]
  23371c:	mov	w0, #0x7                   	// #7
  233720:	mov	w3, #0x16c                 	// #364
  233724:	cmp	x6, #0x0
  233728:	str	x8, [sp, #16]
  23372c:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  233730:	csel	x5, xzr, x28, eq  // eq = none
  233734:	add	x8, x8, #0xf53
  233738:	mov	w1, wzr
  23373c:	mov	x2, x23
  233740:	mov	x4, x24
  233744:	mov	x7, xzr
  233748:	stp	xzr, x8, [sp]
  23374c:	bl	2539f0 <log_object_internal@plt>
  233750:	mov	w8, #0x1                   	// #1
  233754:	str	w8, [sp, #56]
  233758:	b	2336b0 <node_permissions_apply+0x618>
  23375c:	ldur	x0, [x29, #-16]
  233760:	ldr	x1, [sp, #88]
  233764:	bl	2542c0 <mac_selinux_apply@plt>
  233768:	tbnz	w0, #31, 2337c4 <node_permissions_apply+0x72c>
  23376c:	mov	w0, #0x1                   	// #1
  233770:	str	xzr, [sp, #64]
  233774:	bl	2535b0 <log_get_max_level_realm@plt>
  233778:	cmp	w0, #0x7
  23377c:	b.ge	2338c0 <node_permissions_apply+0x828>  // b.tcont
  233780:	ldr	x6, [sp, #64]
  233784:	ldr	x8, [sp, #88]
  233788:	mov	w0, #0x7                   	// #7
  23378c:	mov	w3, #0x162                 	// #354
  233790:	cmp	x6, #0x0
  233794:	str	x8, [sp, #16]
  233798:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23379c:	csel	x5, xzr, x28, eq  // eq = none
  2337a0:	add	x8, x8, #0xa72
  2337a4:	mov	w1, wzr
  2337a8:	mov	x2, x23
  2337ac:	mov	x4, x24
  2337b0:	mov	x7, xzr
  2337b4:	stp	xzr, x8, [sp]
  2337b8:	bl	2539f0 <log_object_internal@plt>
  2337bc:	mov	w25, #0x1                   	// #1
  2337c0:	b	2336b0 <node_permissions_apply+0x618>
  2337c4:	mov	w26, w0
  2337c8:	cmn	w0, #0x2
  2337cc:	mov	w8, #0x3                   	// #3
  2337d0:	mov	w9, #0x7                   	// #7
  2337d4:	mov	w0, #0x1                   	// #1
  2337d8:	str	xzr, [sp, #64]
  2337dc:	csel	w27, w9, w8, eq  // eq = none
  2337e0:	bl	2535b0 <log_get_max_level_realm@plt>
  2337e4:	cmp	w0, w27
  2337e8:	b.ge	2338e0 <node_permissions_apply+0x848>  // b.tcont
  2337ec:	ldr	x6, [sp, #64]
  2337f0:	ldr	x8, [sp, #88]
  2337f4:	mov	w3, #0x160                 	// #352
  2337f8:	mov	w0, w27
  2337fc:	cmp	x6, #0x0
  233800:	str	x8, [sp, #16]
  233804:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  233808:	csel	x5, xzr, x28, eq  // eq = none
  23380c:	add	x8, x8, #0x8e3
  233810:	mov	w1, w26
  233814:	mov	x2, x23
  233818:	mov	x4, x24
  23381c:	mov	x7, xzr
  233820:	stp	xzr, x8, [sp]
  233824:	bl	2539f0 <log_object_internal@plt>
  233828:	adrp	x27, 215000 <worker_hash_op+0xaad0>
  23382c:	mov	w25, #0x1                   	// #1
  233830:	add	x27, x27, #0x1f0
  233834:	b	2336b0 <node_permissions_apply+0x618>
  233838:	mov	w26, w0
  23383c:	cmn	w0, #0x2
  233840:	mov	w8, #0x3                   	// #3
  233844:	mov	w9, #0x7                   	// #7
  233848:	mov	w0, #0x1                   	// #1
  23384c:	str	xzr, [sp, #64]
  233850:	csel	w27, w9, w8, eq  // eq = none
  233854:	bl	2535b0 <log_get_max_level_realm@plt>
  233858:	cmp	w0, w27
  23385c:	b.ge	2338f0 <node_permissions_apply+0x858>  // b.tcont
  233860:	ldr	x6, [sp, #64]
  233864:	ldr	x8, [sp, #88]
  233868:	mov	w3, #0x16a                 	// #362
  23386c:	mov	w0, w27
  233870:	cmp	x6, #0x0
  233874:	str	x8, [sp, #16]
  233878:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23387c:	csel	x5, xzr, x28, eq  // eq = none
  233880:	add	x8, x8, #0xd94
  233884:	mov	w1, w26
  233888:	mov	x2, x23
  23388c:	mov	x4, x24
  233890:	mov	x7, xzr
  233894:	stp	xzr, x8, [sp]
  233898:	bl	2539f0 <log_object_internal@plt>
  23389c:	mov	w8, #0x1                   	// #1
  2338a0:	adrp	x27, 215000 <worker_hash_op+0xaad0>
  2338a4:	str	w8, [sp, #56]
  2338a8:	add	x27, x27, #0x1f0
  2338ac:	b	2336b0 <node_permissions_apply+0x618>
  2338b0:	add	x1, sp, #0x40
  2338b4:	mov	x0, x19
  2338b8:	bl	253a40 <sd_device_get_sysname@plt>
  2338bc:	b	233674 <node_permissions_apply+0x5dc>
  2338c0:	add	x1, sp, #0x40
  2338c4:	mov	x0, x19
  2338c8:	bl	253a40 <sd_device_get_sysname@plt>
  2338cc:	b	233780 <node_permissions_apply+0x6e8>
  2338d0:	add	x1, sp, #0x40
  2338d4:	mov	x0, x19
  2338d8:	bl	253a40 <sd_device_get_sysname@plt>
  2338dc:	b	233714 <node_permissions_apply+0x67c>
  2338e0:	add	x1, sp, #0x40
  2338e4:	mov	x0, x19
  2338e8:	bl	253a40 <sd_device_get_sysname@plt>
  2338ec:	b	2337ec <node_permissions_apply+0x754>
  2338f0:	add	x1, sp, #0x40
  2338f4:	mov	x0, x19
  2338f8:	bl	253a40 <sd_device_get_sysname@plt>
  2338fc:	b	233860 <node_permissions_apply+0x7c8>
  233900:	str	wzr, [sp, #56]
  233904:	mov	w25, wzr
  233908:	tbnz	w25, #0, 233918 <node_permissions_apply+0x880>
  23390c:	ldur	x0, [x29, #-16]
  233910:	mov	w1, #0x1                   	// #1
  233914:	bl	2542d0 <mac_selinux_fix@plt>
  233918:	ldr	w8, [sp, #56]
  23391c:	tbnz	w8, #0, 233930 <node_permissions_apply+0x898>
  233920:	ldur	x0, [x29, #-16]
  233924:	mov	w1, wzr
  233928:	mov	x2, xzr
  23392c:	bl	2542b0 <mac_smack_apply@plt>
  233930:	ldur	x1, [x29, #-16]
  233934:	mov	w0, #0xffffff9c            	// #-100
  233938:	mov	x2, xzr
  23393c:	mov	w3, wzr
  233940:	bl	2542e0 <utimensat@plt>
  233944:	b	23345c <node_permissions_apply+0x3c4>
  233948:	add	x1, sp, #0x70
  23394c:	mov	x0, x19
  233950:	bl	253a40 <sd_device_get_sysname@plt>
  233954:	b	23336c <node_permissions_apply+0x2d4>
  233958:	add	x1, sp, #0x70
  23395c:	mov	x0, x19
  233960:	bl	253a40 <sd_device_get_sysname@plt>
  233964:	b	2333c0 <node_permissions_apply+0x328>
  233968:	add	x1, sp, #0x70
  23396c:	mov	x0, x19
  233970:	bl	253a40 <sd_device_get_sysname@plt>
  233974:	b	233410 <node_permissions_apply+0x378>
  233978:	add	x1, sp, #0x48
  23397c:	mov	x0, x19
  233980:	bl	253a40 <sd_device_get_sysname@plt>
  233984:	b	233494 <node_permissions_apply+0x3fc>
  233988:	add	x1, sp, #0x48
  23398c:	mov	x0, x19
  233990:	bl	253a40 <sd_device_get_sysname@plt>
  233994:	b	233514 <node_permissions_apply+0x47c>
  233998:	add	x1, sp, #0x48
  23399c:	mov	x0, x19
  2339a0:	bl	253a40 <sd_device_get_sysname@plt>
  2339a4:	b	2331e4 <node_permissions_apply+0x14c>
  2339a8:	add	x1, sp, #0x48
  2339ac:	mov	x0, x19
  2339b0:	bl	253a40 <sd_device_get_sysname@plt>
  2339b4:	b	233570 <node_permissions_apply+0x4d8>
  2339b8:	add	x1, sp, #0x48
  2339bc:	mov	x0, x19
  2339c0:	bl	253a40 <sd_device_get_sysname@plt>
  2339c4:	b	2332c0 <node_permissions_apply+0x228>
  2339c8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  2339cc:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2339d0:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2339d4:	add	x1, x1, #0x9e6
  2339d8:	add	x2, x2, #0x5b1
  2339dc:	add	x4, x4, #0xbb0
  2339e0:	mov	w0, #0x1                   	// #1
  2339e4:	mov	w3, #0x119                 	// #281
  2339e8:	bl	253740 <log_assert_failed_realm@plt>

00000000002339ec <xsprintf_dev_num_path_from_sd_device>:
  2339ec:	sub	sp, sp, #0x80
  2339f0:	stp	x29, x30, [sp, #80]
  2339f4:	stp	x22, x21, [sp, #96]
  2339f8:	stp	x20, x19, [sp, #112]
  2339fc:	add	x29, sp, #0x50
  233a00:	cbz	x1, 233ac0 <xsprintf_dev_num_path_from_sd_device+0xd4>
  233a04:	mov	x19, x1
  233a08:	add	x1, sp, #0x10
  233a0c:	mov	x20, x0
  233a10:	bl	253bb0 <sd_device_get_subsystem@plt>
  233a14:	tbnz	w0, #31, 233aac <xsprintf_dev_num_path_from_sd_device+0xc0>
  233a18:	add	x1, sp, #0x8
  233a1c:	mov	x0, x20
  233a20:	bl	253bf0 <sd_device_get_devnum@plt>
  233a24:	tbnz	w0, #31, 233aac <xsprintf_dev_num_path_from_sd_device+0xc0>
  233a28:	ldr	x0, [sp, #16]
  233a2c:	adrp	x20, 216000 <worker_hash_op+0xbad0>
  233a30:	add	x20, x20, #0x64e
  233a34:	mov	x1, x20
  233a38:	bl	253bc0 <strcmp@plt>
  233a3c:	ldr	x21, [sp, #8]
  233a40:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  233a44:	add	x8, x8, #0x5b
  233a48:	cmp	w0, #0x0
  233a4c:	mov	x0, x21
  233a50:	csel	x20, x20, x8, eq  // eq = none
  233a54:	bl	253c10 <gnu_dev_major@plt>
  233a58:	mov	w22, w0
  233a5c:	mov	x0, x21
  233a60:	bl	254050 <gnu_dev_minor@plt>
  233a64:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  233a68:	mov	w5, w0
  233a6c:	add	x2, x2, #0x813
  233a70:	add	x0, sp, #0x18
  233a74:	mov	w1, #0x38                  	// #56
  233a78:	mov	x3, x20
  233a7c:	mov	w4, w22
  233a80:	bl	2542f0 <snprintf@plt>
  233a84:	cmp	w0, #0x38
  233a88:	b.cs	233ae4 <xsprintf_dev_num_path_from_sd_device+0xf8>  // b.hs, b.nlast
  233a8c:	add	x0, sp, #0x18
  233a90:	bl	253ab0 <strdup@plt>
  233a94:	cbz	x0, 233aa8 <xsprintf_dev_num_path_from_sd_device+0xbc>
  233a98:	mov	x8, x0
  233a9c:	mov	w0, wzr
  233aa0:	str	x8, [x19]
  233aa4:	b	233aac <xsprintf_dev_num_path_from_sd_device+0xc0>
  233aa8:	mov	w0, #0xfffffff4            	// #-12
  233aac:	ldp	x20, x19, [sp, #112]
  233ab0:	ldp	x22, x21, [sp, #96]
  233ab4:	ldp	x29, x30, [sp, #80]
  233ab8:	add	sp, sp, #0x80
  233abc:	ret
  233ac0:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  233ac4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233ac8:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  233acc:	add	x1, x1, #0xb2b
  233ad0:	add	x2, x2, #0x5b1
  233ad4:	add	x4, x4, #0x1c
  233ad8:	mov	w0, #0x1                   	// #1
  233adc:	mov	w3, #0x185                 	// #389
  233ae0:	bl	253740 <log_assert_failed_realm@plt>
  233ae4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  233ae8:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233aec:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  233af0:	add	x1, x1, #0x43f
  233af4:	add	x2, x2, #0x5b1
  233af8:	add	x4, x4, #0x1c
  233afc:	mov	w0, #0x1                   	// #1
  233b00:	mov	w3, #0x191                 	// #401
  233b04:	bl	253740 <log_assert_failed_realm@plt>

0000000000233b08 <node_symlink>:
  233b08:	stp	x29, x30, [sp, #-64]!
  233b0c:	stp	x24, x23, [sp, #16]
  233b10:	stp	x22, x21, [sp, #32]
  233b14:	stp	x20, x19, [sp, #48]
  233b18:	mov	x29, sp
  233b1c:	sub	sp, sp, #0xb0
  233b20:	stp	xzr, xzr, [x29, #-16]
  233b24:	cbz	x0, 234198 <node_symlink+0x690>
  233b28:	mov	x21, x1
  233b2c:	cbz	x1, 2341bc <node_symlink+0x6b4>
  233b30:	mov	x19, x2
  233b34:	cbz	x2, 2341e0 <node_symlink+0x6d8>
  233b38:	mov	x20, x0
  233b3c:	mov	x0, x19
  233b40:	bl	254300 <dirname_malloc@plt>
  233b44:	stur	x0, [x29, #-8]
  233b48:	cbz	x0, 233c2c <node_symlink+0x124>
  233b4c:	sub	x2, x29, #0x10
  233b50:	mov	x1, x21
  233b54:	bl	254310 <path_make_relative@plt>
  233b58:	tbnz	w0, #31, 233cbc <node_symlink+0x1b4>
  233b5c:	sub	x1, x29, #0x98
  233b60:	mov	x0, x19
  233b64:	bl	253498 <lstat64>
  233b68:	adrp	x23, 211000 <worker_hash_op+0x6ad0>
  233b6c:	add	x23, x23, #0xb64
  233b70:	cbz	w0, 233d20 <node_symlink+0x218>
  233b74:	mov	w0, #0x1                   	// #1
  233b78:	stur	xzr, [x29, #-176]
  233b7c:	bl	2535b0 <log_get_max_level_realm@plt>
  233b80:	cmp	w0, #0x7
  233b84:	b.ge	234108 <node_symlink+0x600>  // b.tcont
  233b88:	ldur	x6, [x29, #-176]
  233b8c:	ldur	x8, [x29, #-16]
  233b90:	cmp	x6, #0x0
  233b94:	csel	x5, xzr, x23, eq  // eq = none
  233b98:	sub	sp, sp, #0x20
  233b9c:	stp	x19, x8, [sp, #16]
  233ba0:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  233ba4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233ba8:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  233bac:	add	x8, x8, #0xaff
  233bb0:	add	x2, x2, #0x5b1
  233bb4:	add	x4, x4, #0xf72
  233bb8:	mov	w0, #0x7                   	// #7
  233bbc:	mov	w3, #0x41                  	// #65
  233bc0:	mov	w1, wzr
  233bc4:	mov	x7, xzr
  233bc8:	stp	xzr, x8, [sp]
  233bcc:	bl	2539f0 <log_object_internal@plt>
  233bd0:	add	sp, sp, #0x20
  233bd4:	b	233be4 <node_symlink+0xdc>
  233bd8:	bl	254320 <mac_selinux_create_file_clear@plt>
  233bdc:	cmn	w21, #0x2
  233be0:	b.ne	233c4c <node_symlink+0x144>  // b.any
  233be4:	mov	w1, #0x1ed                 	// #493
  233be8:	mov	x0, x19
  233bec:	bl	254330 <mkdir_parents_label@plt>
  233bf0:	mov	w21, w0
  233bf4:	cbz	w0, 233c00 <node_symlink+0xf8>
  233bf8:	cmn	w21, #0x2
  233bfc:	b.ne	233c4c <node_symlink+0x144>  // b.any
  233c00:	mov	w1, #0xa000                	// #40960
  233c04:	mov	x0, x19
  233c08:	bl	254340 <mac_selinux_create_file_prepare@plt>
  233c0c:	ldur	x0, [x29, #-16]
  233c10:	mov	x1, x19
  233c14:	bl	254350 <symlink@plt>
  233c18:	tbz	w0, #31, 233bd8 <node_symlink+0xd0>
  233c1c:	bl	253660 <__errno_location@plt>
  233c20:	ldr	w8, [x0]
  233c24:	neg	w21, w8
  233c28:	b	233bd8 <node_symlink+0xd0>
  233c2c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  233c30:	adrp	x3, 20b000 <worker_hash_op+0xad0>
  233c34:	add	x1, x1, #0x5b1
  233c38:	add	x3, x3, #0xf72
  233c3c:	mov	w0, #0x1                   	// #1
  233c40:	mov	w2, #0x29                  	// #41
  233c44:	bl	2537c0 <log_oom_internal@plt>
  233c48:	b	233d9c <node_symlink+0x294>
  233c4c:	cbz	w21, 233d9c <node_symlink+0x294>
  233c50:	tbz	w21, #31, 233df0 <node_symlink+0x2e8>
  233c54:	mov	w0, #0x1                   	// #1
  233c58:	stur	xzr, [x29, #-176]
  233c5c:	bl	2535b0 <log_get_max_level_realm@plt>
  233c60:	cmp	w0, #0x7
  233c64:	b.ge	234158 <node_symlink+0x650>  // b.tcont
  233c68:	ldur	x6, [x29, #-176]
  233c6c:	ldur	x8, [x29, #-16]
  233c70:	cmp	x6, #0x0
  233c74:	csel	x5, xzr, x23, eq  // eq = none
  233c78:	sub	sp, sp, #0x30
  233c7c:	stp	x8, x19, [sp, #24]
  233c80:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  233c84:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233c88:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  233c8c:	add	x8, x8, #0x467
  233c90:	add	x2, x2, #0x5b1
  233c94:	add	x4, x4, #0xf72
  233c98:	mov	w0, #0x7                   	// #7
  233c9c:	mov	w3, #0x4e                  	// #78
  233ca0:	mov	w1, w21
  233ca4:	mov	x7, xzr
  233ca8:	stp	x8, x19, [sp, #8]
  233cac:	str	xzr, [sp]
  233cb0:	bl	2539f0 <log_object_internal@plt>
  233cb4:	add	sp, sp, #0x30
  233cb8:	b	233df0 <node_symlink+0x2e8>
  233cbc:	mov	w22, w0
  233cc0:	mov	w0, #0x1                   	// #1
  233cc4:	stur	xzr, [x29, #-152]
  233cc8:	bl	2535b0 <log_get_max_level_realm@plt>
  233ccc:	cmp	w0, #0x3
  233cd0:	b.ge	234118 <node_symlink+0x610>  // b.tcont
  233cd4:	ldur	x6, [x29, #-152]
  233cd8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  233cdc:	add	x8, x8, #0xb64
  233ce0:	cmp	x6, #0x0
  233ce4:	csel	x5, xzr, x8, eq  // eq = none
  233ce8:	sub	sp, sp, #0x20
  233cec:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  233cf0:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233cf4:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  233cf8:	add	x8, x8, #0x1f6
  233cfc:	add	x2, x2, #0x5b1
  233d00:	add	x4, x4, #0xf72
  233d04:	mov	w0, #0x3                   	// #3
  233d08:	mov	w3, #0x2e                  	// #46
  233d0c:	stp	x19, x21, [sp, #16]
  233d10:	str	x8, [sp, #8]
  233d14:	mov	w1, w22
  233d18:	str	xzr, [sp]
  233d1c:	b	233d90 <node_symlink+0x288>
  233d20:	ldur	w8, [x29, #-136]
  233d24:	and	w8, w8, #0xf000
  233d28:	cmp	w8, #0x2, lsl #12
  233d2c:	b.eq	233d40 <node_symlink+0x238>  // b.none
  233d30:	cmp	w8, #0xa, lsl #12
  233d34:	b.eq	233dc4 <node_symlink+0x2bc>  // b.none
  233d38:	cmp	w8, #0x6, lsl #12
  233d3c:	b.ne	233df0 <node_symlink+0x2e8>  // b.any
  233d40:	mov	w0, #0x1                   	// #1
  233d44:	stur	xzr, [x29, #-176]
  233d48:	bl	2535b0 <log_get_max_level_realm@plt>
  233d4c:	cmp	w0, #0x3
  233d50:	b.ge	234148 <node_symlink+0x640>  // b.tcont
  233d54:	ldur	x6, [x29, #-176]
  233d58:	cmp	x6, #0x0
  233d5c:	csel	x5, xzr, x23, eq  // eq = none
  233d60:	sub	sp, sp, #0x20
  233d64:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  233d68:	add	x8, x8, #0x302
  233d6c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233d70:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  233d74:	stp	x19, x21, [sp, #16]
  233d78:	add	x2, x2, #0x5b1
  233d7c:	add	x4, x4, #0xf72
  233d80:	stp	xzr, x8, [sp]
  233d84:	mov	w0, #0x3                   	// #3
  233d88:	mov	w3, #0x33                  	// #51
  233d8c:	mov	w1, wzr
  233d90:	mov	x7, xzr
  233d94:	bl	2539f0 <log_object_internal@plt>
  233d98:	add	sp, sp, #0x20
  233d9c:	sub	x0, x29, #0x10
  233da0:	bl	23306c <freep>
  233da4:	sub	x0, x29, #0x8
  233da8:	bl	23306c <freep>
  233dac:	mov	sp, x29
  233db0:	ldp	x20, x19, [sp, #48]
  233db4:	ldp	x22, x21, [sp, #32]
  233db8:	ldp	x24, x23, [sp, #16]
  233dbc:	ldp	x29, x30, [sp], #64
  233dc0:	ret
  233dc4:	sub	x1, x29, #0xb0
  233dc8:	mov	x0, x19
  233dcc:	stur	xzr, [x29, #-176]
  233dd0:	bl	254360 <readlink_malloc@plt>
  233dd4:	tbnz	w0, #31, 233de8 <node_symlink+0x2e0>
  233dd8:	ldur	x0, [x29, #-16]
  233ddc:	ldur	x1, [x29, #-176]
  233de0:	bl	253bc0 <strcmp@plt>
  233de4:	cbz	w0, 234080 <node_symlink+0x578>
  233de8:	sub	x0, x29, #0xb0
  233dec:	bl	23306c <freep>
  233df0:	mov	w0, #0x1                   	// #1
  233df4:	stur	xzr, [x29, #-176]
  233df8:	bl	2535b0 <log_get_max_level_realm@plt>
  233dfc:	cmp	w0, #0x7
  233e00:	b.ge	234128 <node_symlink+0x620>  // b.tcont
  233e04:	ldur	x6, [x29, #-176]
  233e08:	cmp	x6, #0x0
  233e0c:	csel	x5, xzr, x23, eq  // eq = none
  233e10:	sub	sp, sp, #0x20
  233e14:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  233e18:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233e1c:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  233e20:	add	x8, x8, #0xa93
  233e24:	add	x2, x2, #0x5b1
  233e28:	add	x4, x4, #0xf72
  233e2c:	mov	w0, #0x7                   	// #7
  233e30:	mov	w3, #0x51                  	// #81
  233e34:	mov	w1, wzr
  233e38:	mov	x7, xzr
  233e3c:	stp	x8, x19, [sp, #8]
  233e40:	str	xzr, [sp]
  233e44:	bl	2539f0 <log_object_internal@plt>
  233e48:	add	sp, sp, #0x20
  233e4c:	sub	x1, x29, #0x18
  233e50:	mov	x0, x20
  233e54:	bl	254250 <device_get_id_filename@plt>
  233e58:	tbnz	w0, #31, 233fd0 <node_symlink+0x4c8>
  233e5c:	ldur	x8, [x29, #-24]
  233e60:	adrp	x9, 213000 <worker_hash_op+0x8ad0>
  233e64:	mov	x22, xzr
  233e68:	mov	x21, xzr
  233e6c:	add	x9, x9, #0x348
  233e70:	sub	x24, x29, #0xb0
  233e74:	stp	x19, x9, [x29, #-176]
  233e78:	stur	x8, [x29, #-160]
  233e7c:	ldr	x0, [x24, x22]
  233e80:	cbz	x0, 233e98 <node_symlink+0x390>
  233e84:	bl	2539a0 <strlen@plt>
  233e88:	add	x22, x22, #0x8
  233e8c:	cmp	x22, #0x18
  233e90:	add	x21, x0, x21
  233e94:	b.ne	233e7c <node_symlink+0x374>  // b.any
  233e98:	add	x21, x21, #0x1
  233e9c:	mov	x0, x21
  233ea0:	bl	234734 <size_multiply_overflow>
  233ea4:	tbnz	w0, #0, 234204 <node_symlink+0x6fc>
  233ea8:	cmp	x21, #0x400, lsl #12
  233eac:	b.hi	234210 <node_symlink+0x708>  // b.pmore
  233eb0:	add	x9, x21, #0xf
  233eb4:	mov	x8, sp
  233eb8:	and	x9, x9, #0xfffffffffffffff0
  233ebc:	sub	x21, x8, x9
  233ec0:	mov	sp, x21
  233ec4:	mov	x22, xzr
  233ec8:	sub	x24, x29, #0xb0
  233ecc:	mov	x0, x21
  233ed0:	ldr	x1, [x24, x22]
  233ed4:	cbz	x1, 233ee8 <node_symlink+0x3e0>
  233ed8:	bl	253e40 <stpcpy@plt>
  233edc:	add	x22, x22, #0x8
  233ee0:	cmp	x22, #0x18
  233ee4:	b.ne	233ed0 <node_symlink+0x3c8>  // b.any
  233ee8:	strb	wzr, [x0]
  233eec:	mov	x0, x21
  233ef0:	bl	253960 <unlink@plt>
  233ef4:	b	233f04 <node_symlink+0x3fc>
  233ef8:	bl	254320 <mac_selinux_create_file_clear@plt>
  233efc:	cmn	w22, #0x2
  233f00:	b.ne	233f4c <node_symlink+0x444>  // b.any
  233f04:	mov	w1, #0x1ed                 	// #493
  233f08:	mov	x0, x21
  233f0c:	bl	254330 <mkdir_parents_label@plt>
  233f10:	mov	w22, w0
  233f14:	cbz	w0, 233f20 <node_symlink+0x418>
  233f18:	cmn	w22, #0x2
  233f1c:	b.ne	233f4c <node_symlink+0x444>  // b.any
  233f20:	mov	w1, #0xa000                	// #40960
  233f24:	mov	x0, x21
  233f28:	bl	254340 <mac_selinux_create_file_prepare@plt>
  233f2c:	ldur	x0, [x29, #-16]
  233f30:	mov	x1, x21
  233f34:	bl	254350 <symlink@plt>
  233f38:	tbz	w0, #31, 233ef8 <node_symlink+0x3f0>
  233f3c:	bl	253660 <__errno_location@plt>
  233f40:	ldr	w8, [x0]
  233f44:	neg	w22, w8
  233f48:	b	233ef8 <node_symlink+0x3f0>
  233f4c:	tbnz	w22, #31, 23402c <node_symlink+0x524>
  233f50:	mov	x0, x21
  233f54:	mov	x1, x19
  233f58:	bl	254370 <rename@plt>
  233f5c:	tbz	w0, #31, 233d9c <node_symlink+0x294>
  233f60:	stur	xzr, [x29, #-176]
  233f64:	bl	253660 <__errno_location@plt>
  233f68:	ldr	w22, [x0]
  233f6c:	mov	w0, #0x1                   	// #1
  233f70:	bl	2535b0 <log_get_max_level_realm@plt>
  233f74:	cmp	w0, #0x3
  233f78:	b.ge	234178 <node_symlink+0x670>  // b.tcont
  233f7c:	ldur	x6, [x29, #-176]
  233f80:	cmp	x6, #0x0
  233f84:	csel	x5, xzr, x23, eq  // eq = none
  233f88:	sub	sp, sp, #0x20
  233f8c:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  233f90:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233f94:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  233f98:	add	x8, x8, #0x826
  233f9c:	add	x2, x2, #0x5b1
  233fa0:	add	x4, x4, #0xf72
  233fa4:	mov	w0, #0x3                   	// #3
  233fa8:	mov	w3, #0x64                  	// #100
  233fac:	mov	w1, w22
  233fb0:	mov	x7, xzr
  233fb4:	stp	x21, x19, [sp, #16]
  233fb8:	stp	xzr, x8, [sp]
  233fbc:	bl	2539f0 <log_object_internal@plt>
  233fc0:	add	sp, sp, #0x20
  233fc4:	mov	x0, x21
  233fc8:	bl	253960 <unlink@plt>
  233fcc:	b	233d9c <node_symlink+0x294>
  233fd0:	mov	w21, w0
  233fd4:	mov	w0, #0x1                   	// #1
  233fd8:	stur	xzr, [x29, #-176]
  233fdc:	bl	2535b0 <log_get_max_level_realm@plt>
  233fe0:	cmp	w0, #0x3
  233fe4:	b.ge	234138 <node_symlink+0x630>  // b.tcont
  233fe8:	ldur	x6, [x29, #-176]
  233fec:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  233ff0:	add	x8, x8, #0xe18
  233ff4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  233ff8:	cmp	x6, #0x0
  233ffc:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  234000:	csel	x5, xzr, x23, eq  // eq = none
  234004:	add	x2, x2, #0x5b1
  234008:	add	x4, x4, #0xf72
  23400c:	stp	xzr, x8, [sp, #-16]!
  234010:	mov	w0, #0x3                   	// #3
  234014:	mov	w3, #0x54                  	// #84
  234018:	mov	w1, w21
  23401c:	mov	x7, xzr
  234020:	bl	2539f0 <log_object_internal@plt>
  234024:	add	sp, sp, #0x10
  234028:	b	233d9c <node_symlink+0x294>
  23402c:	mov	w0, #0x1                   	// #1
  234030:	stur	xzr, [x29, #-176]
  234034:	bl	2535b0 <log_get_max_level_realm@plt>
  234038:	cmp	w0, #0x3
  23403c:	b.ge	234168 <node_symlink+0x660>  // b.tcont
  234040:	ldur	x6, [x29, #-176]
  234044:	ldur	x8, [x29, #-16]
  234048:	cmp	x6, #0x0
  23404c:	csel	x5, xzr, x23, eq  // eq = none
  234050:	sub	sp, sp, #0x20
  234054:	stp	x21, x8, [sp, #16]
  234058:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  23405c:	add	x8, x8, #0xb1d
  234060:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  234064:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  234068:	add	x2, x2, #0x5b1
  23406c:	add	x4, x4, #0xf72
  234070:	str	x8, [sp, #8]
  234074:	mov	w0, #0x3                   	// #3
  234078:	mov	w3, #0x61                  	// #97
  23407c:	b	233d14 <node_symlink+0x20c>
  234080:	mov	w0, #0x1                   	// #1
  234084:	stur	xzr, [x29, #-24]
  234088:	bl	2535b0 <log_get_max_level_realm@plt>
  23408c:	cmp	w0, #0x7
  234090:	b.ge	234188 <node_symlink+0x680>  // b.tcont
  234094:	ldp	x6, x8, [x29, #-24]
  234098:	cmp	x6, #0x0
  23409c:	csel	x5, xzr, x23, eq  // eq = none
  2340a0:	sub	sp, sp, #0x20
  2340a4:	stp	x19, x8, [sp, #16]
  2340a8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2340ac:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2340b0:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  2340b4:	add	x8, x8, #0x6f9
  2340b8:	add	x2, x2, #0x5b1
  2340bc:	add	x4, x4, #0xf72
  2340c0:	mov	w0, #0x7                   	// #7
  2340c4:	mov	w3, #0x3a                  	// #58
  2340c8:	mov	w1, wzr
  2340cc:	mov	x7, xzr
  2340d0:	stp	xzr, x8, [sp]
  2340d4:	bl	2539f0 <log_object_internal@plt>
  2340d8:	add	sp, sp, #0x20
  2340dc:	mov	w1, #0x1                   	// #1
  2340e0:	mov	x0, x19
  2340e4:	bl	254380 <label_fix@plt>
  2340e8:	mov	w0, #0xffffff9c            	// #-100
  2340ec:	mov	w3, #0x100                 	// #256
  2340f0:	mov	x1, x19
  2340f4:	mov	x2, xzr
  2340f8:	bl	2542e0 <utimensat@plt>
  2340fc:	sub	x0, x29, #0xb0
  234100:	bl	23306c <freep>
  234104:	b	233d9c <node_symlink+0x294>
  234108:	sub	x1, x29, #0xb0
  23410c:	mov	x0, x20
  234110:	bl	253a40 <sd_device_get_sysname@plt>
  234114:	b	233b88 <node_symlink+0x80>
  234118:	sub	x1, x29, #0x98
  23411c:	mov	x0, x20
  234120:	bl	253a40 <sd_device_get_sysname@plt>
  234124:	b	233cd4 <node_symlink+0x1cc>
  234128:	sub	x1, x29, #0xb0
  23412c:	mov	x0, x20
  234130:	bl	253a40 <sd_device_get_sysname@plt>
  234134:	b	233e04 <node_symlink+0x2fc>
  234138:	sub	x1, x29, #0xb0
  23413c:	mov	x0, x20
  234140:	bl	253a40 <sd_device_get_sysname@plt>
  234144:	b	233fe8 <node_symlink+0x4e0>
  234148:	sub	x1, x29, #0xb0
  23414c:	mov	x0, x20
  234150:	bl	253a40 <sd_device_get_sysname@plt>
  234154:	b	233d54 <node_symlink+0x24c>
  234158:	sub	x1, x29, #0xb0
  23415c:	mov	x0, x20
  234160:	bl	253a40 <sd_device_get_sysname@plt>
  234164:	b	233c68 <node_symlink+0x160>
  234168:	sub	x1, x29, #0xb0
  23416c:	mov	x0, x20
  234170:	bl	253a40 <sd_device_get_sysname@plt>
  234174:	b	234040 <node_symlink+0x538>
  234178:	sub	x1, x29, #0xb0
  23417c:	mov	x0, x20
  234180:	bl	253a40 <sd_device_get_sysname@plt>
  234184:	b	233f7c <node_symlink+0x474>
  234188:	sub	x1, x29, #0x18
  23418c:	mov	x0, x20
  234190:	bl	253a40 <sd_device_get_sysname@plt>
  234194:	b	234094 <node_symlink+0x58c>
  234198:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23419c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2341a0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2341a4:	add	x1, x1, #0x9e6
  2341a8:	add	x2, x2, #0x5b1
  2341ac:	add	x4, x4, #0x59b
  2341b0:	mov	w0, #0x1                   	// #1
  2341b4:	mov	w3, #0x23                  	// #35
  2341b8:	bl	253740 <log_assert_failed_realm@plt>
  2341bc:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2341c0:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2341c4:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2341c8:	add	x1, x1, #0x821
  2341cc:	add	x2, x2, #0x5b1
  2341d0:	add	x4, x4, #0x59b
  2341d4:	mov	w0, #0x1                   	// #1
  2341d8:	mov	w3, #0x24                  	// #36
  2341dc:	bl	253740 <log_assert_failed_realm@plt>
  2341e0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  2341e4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2341e8:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2341ec:	add	x1, x1, #0xd8e
  2341f0:	add	x2, x2, #0x5b1
  2341f4:	add	x4, x4, #0x59b
  2341f8:	mov	w0, #0x1                   	// #1
  2341fc:	mov	w3, #0x25                  	// #37
  234200:	bl	253740 <log_assert_failed_realm@plt>
  234204:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  234208:	add	x1, x1, #0x498
  23420c:	b	234218 <node_symlink+0x710>
  234210:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  234214:	add	x1, x1, #0x166
  234218:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  23421c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  234220:	add	x2, x2, #0x5b1
  234224:	add	x4, x4, #0x59b
  234228:	mov	w0, #0x1                   	// #1
  23422c:	mov	w3, #0x55                  	// #85
  234230:	bl	253740 <log_assert_failed_realm@plt>

0000000000234234 <udev_node_remove>:
  234234:	sub	sp, sp, #0x40
  234238:	stp	x29, x30, [sp, #32]
  23423c:	add	x29, sp, #0x20
  234240:	stp	x20, x19, [sp, #48]
  234244:	stur	xzr, [x29, #-8]
  234248:	cbz	x0, 234324 <udev_node_remove+0xf0>
  23424c:	mov	x19, x0
  234250:	bl	253ff0 <sd_device_get_devlink_first@plt>
  234254:	cbz	x0, 234278 <udev_node_remove+0x44>
  234258:	mov	x1, x0
  23425c:	mov	x0, x19
  234260:	mov	w2, wzr
  234264:	bl	232af0 <link_update>
  234268:	mov	x0, x19
  23426c:	bl	254010 <sd_device_get_devlink_next@plt>
  234270:	mov	x1, x0
  234274:	cbnz	x0, 23425c <udev_node_remove+0x28>
  234278:	sub	x1, x29, #0x8
  23427c:	mov	x0, x19
  234280:	bl	2339ec <xsprintf_dev_num_path_from_sd_device>
  234284:	tbnz	w0, #31, 234298 <udev_node_remove+0x64>
  234288:	ldur	x0, [x29, #-8]
  23428c:	bl	253960 <unlink@plt>
  234290:	mov	w19, wzr
  234294:	b	2342f8 <udev_node_remove+0xc4>
  234298:	mov	w20, w0
  23429c:	mov	w0, #0x1                   	// #1
  2342a0:	str	xzr, [sp, #16]
  2342a4:	bl	2535b0 <log_get_max_level_realm@plt>
  2342a8:	cmp	w0, #0x7
  2342ac:	b.ge	234314 <udev_node_remove+0xe0>  // b.tcont
  2342b0:	ldr	x6, [sp, #16]
  2342b4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2342b8:	add	x8, x8, #0xb64
  2342bc:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2342c0:	cmp	x6, #0x0
  2342c4:	csel	x5, xzr, x8, eq  // eq = none
  2342c8:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2342cc:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  2342d0:	add	x8, x8, #0x2db
  2342d4:	add	x2, x2, #0x5b1
  2342d8:	add	x4, x4, #0xf21
  2342dc:	mov	w0, #0x7                   	// #7
  2342e0:	mov	w3, #0x1ce                 	// #462
  2342e4:	mov	w1, w20
  2342e8:	mov	x7, xzr
  2342ec:	stp	xzr, x8, [sp]
  2342f0:	bl	2539f0 <log_object_internal@plt>
  2342f4:	mov	w19, w0
  2342f8:	sub	x0, x29, #0x8
  2342fc:	bl	23306c <freep>
  234300:	mov	w0, w19
  234304:	ldp	x20, x19, [sp, #48]
  234308:	ldp	x29, x30, [sp, #32]
  23430c:	add	sp, sp, #0x40
  234310:	ret
  234314:	add	x1, sp, #0x10
  234318:	mov	x0, x19
  23431c:	bl	253a40 <sd_device_get_sysname@plt>
  234320:	b	2342b0 <udev_node_remove+0x7c>
  234324:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  234328:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  23432c:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  234330:	add	x1, x1, #0x9e6
  234334:	add	x2, x2, #0x5b1
  234338:	add	x4, x4, #0x6c4
  23433c:	mov	w0, #0x1                   	// #1
  234340:	mov	w3, #0x1c6                 	// #454
  234344:	bl	253740 <log_assert_failed_realm@plt>

0000000000234348 <link_find_prioritized>:
  234348:	sub	sp, sp, #0xc0
  23434c:	stp	x29, x30, [sp, #96]
  234350:	stp	x22, x21, [sp, #160]
  234354:	stp	x20, x19, [sp, #176]
  234358:	add	x29, sp, #0x60
  23435c:	mov	x19, x3
  234360:	mov	x20, x2
  234364:	mov	x21, x0
  234368:	stp	x28, x27, [sp, #112]
  23436c:	stp	x26, x25, [sp, #128]
  234370:	stp	x24, x23, [sp, #144]
  234374:	stp	xzr, xzr, [x29, #-16]
  234378:	stur	wzr, [x29, #-20]
  23437c:	cbnz	x0, 234384 <link_find_prioritized+0x3c>
  234380:	tbnz	w1, #0, 234648 <link_find_prioritized+0x300>
  234384:	cbz	x20, 23466c <link_find_prioritized+0x324>
  234388:	cbz	x19, 234690 <link_find_prioritized+0x348>
  23438c:	tbz	w1, #0, 2343dc <link_find_prioritized+0x94>
  234390:	sub	x1, x29, #0x14
  234394:	mov	x0, x21
  234398:	bl	254390 <device_get_devlink_priority@plt>
  23439c:	tbnz	w0, #31, 2343d0 <link_find_prioritized+0x88>
  2343a0:	sub	x1, x29, #0x20
  2343a4:	mov	x0, x21
  2343a8:	bl	253ad0 <sd_device_get_devname@plt>
  2343ac:	tbnz	w0, #31, 2343d0 <link_find_prioritized+0x88>
  2343b0:	ldur	x0, [x29, #-32]
  2343b4:	bl	253ab0 <strdup@plt>
  2343b8:	cmp	x0, #0x0
  2343bc:	cset	w8, ne  // ne = any
  2343c0:	mov	w22, #0xfffffff4            	// #-12
  2343c4:	stur	x0, [x29, #-16]
  2343c8:	cbnz	w8, 2343dc <link_find_prioritized+0x94>
  2343cc:	b	234614 <link_find_prioritized+0x2cc>
  2343d0:	mov	w22, w0
  2343d4:	mov	w8, wzr
  2343d8:	cbz	w8, 234614 <link_find_prioritized+0x2cc>
  2343dc:	mov	x0, x20
  2343e0:	bl	2543a0 <opendir@plt>
  2343e4:	stur	x0, [x29, #-8]
  2343e8:	cbz	x0, 2345d8 <link_find_prioritized+0x290>
  2343ec:	mov	x23, x0
  2343f0:	bl	253660 <__errno_location@plt>
  2343f4:	mov	x24, x0
  2343f8:	str	wzr, [x0]
  2343fc:	mov	x0, x23
  234400:	bl	2543b0 <readdir64@plt>
  234404:	cbz	x0, 2345f8 <link_find_prioritized+0x2b0>
  234408:	adrp	x28, 211000 <worker_hash_op+0x6ad0>
  23440c:	adrp	x25, 217000 <worker_hash_op+0xcad0>
  234410:	adrp	x26, 20b000 <worker_hash_op+0xad0>
  234414:	mov	x27, x0
  234418:	add	x28, x28, #0xb64
  23441c:	add	x25, x25, #0x5b1
  234420:	add	x26, x26, #0x2ab
  234424:	b	23443c <link_find_prioritized+0xf4>
  234428:	mov	x0, x23
  23442c:	str	wzr, [x24]
  234430:	bl	2543b0 <readdir64@plt>
  234434:	mov	x27, x0
  234438:	cbz	x0, 2345f8 <link_find_prioritized+0x2b0>
  23443c:	stur	xzr, [x29, #-32]
  234440:	str	wzr, [sp, #44]
  234444:	ldrb	w8, [x27, #19]!
  234448:	cbz	w8, 234590 <link_find_prioritized+0x248>
  23444c:	cmp	w8, #0x2e
  234450:	b.eq	234588 <link_find_prioritized+0x240>  // b.none
  234454:	stur	xzr, [x29, #-40]
  234458:	cbz	x21, 23446c <link_find_prioritized+0x124>
  23445c:	mov	w0, #0x1                   	// #1
  234460:	bl	2535b0 <log_get_max_level_realm@plt>
  234464:	cmp	w0, #0x7
  234468:	b.ge	2345b8 <link_find_prioritized+0x270>  // b.tcont
  23446c:	ldur	x6, [x29, #-40]
  234470:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  234474:	add	x8, x8, #0xd29
  234478:	mov	w0, #0x7                   	// #7
  23447c:	cmp	x6, #0x0
  234480:	csel	x5, xzr, x28, eq  // eq = none
  234484:	mov	w3, #0x9a                  	// #154
  234488:	mov	w1, wzr
  23448c:	mov	x2, x25
  234490:	mov	x4, x26
  234494:	mov	x7, xzr
  234498:	stp	x27, x20, [sp, #16]
  23449c:	stp	xzr, x8, [sp]
  2344a0:	bl	2539f0 <log_object_internal@plt>
  2344a4:	add	x1, sp, #0x30
  2344a8:	mov	x0, x21
  2344ac:	bl	254250 <device_get_id_filename@plt>
  2344b0:	tbnz	w0, #31, 234588 <link_find_prioritized+0x240>
  2344b4:	ldr	x1, [sp, #48]
  2344b8:	mov	x0, x27
  2344bc:	bl	253bc0 <strcmp@plt>
  2344c0:	cbz	w0, 234588 <link_find_prioritized+0x240>
  2344c4:	sub	x0, x29, #0x20
  2344c8:	mov	x1, x27
  2344cc:	bl	2543c0 <sd_device_new_from_device_id@plt>
  2344d0:	tbnz	w0, #31, 234588 <link_find_prioritized+0x240>
  2344d4:	ldur	x0, [x29, #-32]
  2344d8:	sub	x1, x29, #0x28
  2344dc:	bl	253ad0 <sd_device_get_devname@plt>
  2344e0:	tbnz	w0, #31, 234588 <link_find_prioritized+0x240>
  2344e4:	ldur	x0, [x29, #-32]
  2344e8:	add	x1, sp, #0x2c
  2344ec:	bl	254390 <device_get_devlink_priority@plt>
  2344f0:	tbnz	w0, #31, 234588 <link_find_prioritized+0x240>
  2344f4:	ldur	x8, [x29, #-16]
  2344f8:	cbz	x8, 23450c <link_find_prioritized+0x1c4>
  2344fc:	ldr	w8, [sp, #44]
  234500:	ldur	w9, [x29, #-20]
  234504:	cmp	w8, w9
  234508:	b.le	234588 <link_find_prioritized+0x240>
  23450c:	ldur	x27, [x29, #-32]
  234510:	str	xzr, [sp, #32]
  234514:	cbz	x27, 234528 <link_find_prioritized+0x1e0>
  234518:	mov	w0, #0x1                   	// #1
  23451c:	bl	2535b0 <log_get_max_level_realm@plt>
  234520:	cmp	w0, #0x7
  234524:	b.ge	2345c8 <link_find_prioritized+0x280>  // b.tcont
  234528:	ldr	x6, [sp, #32]
  23452c:	ldr	w8, [sp, #44]
  234530:	mov	w0, #0x7                   	// #7
  234534:	mov	w3, #0xaf                  	// #175
  234538:	cmp	x6, #0x0
  23453c:	str	w8, [sp, #16]
  234540:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  234544:	csel	x5, xzr, x28, eq  // eq = none
  234548:	add	x8, x8, #0x9a9
  23454c:	mov	w1, wzr
  234550:	mov	x2, x25
  234554:	mov	x4, x26
  234558:	mov	x7, xzr
  23455c:	str	x20, [sp, #24]
  234560:	stp	xzr, x8, [sp]
  234564:	bl	2539f0 <log_object_internal@plt>
  234568:	ldur	x1, [x29, #-40]
  23456c:	sub	x0, x29, #0x10
  234570:	bl	2543d0 <free_and_strdup@plt>
  234574:	tbnz	w0, #31, 2345ac <link_find_prioritized+0x264>
  234578:	ldr	w8, [sp, #44]
  23457c:	mov	w27, wzr
  234580:	stur	w8, [x29, #-20]
  234584:	b	234594 <link_find_prioritized+0x24c>
  234588:	mov	w27, #0xa                   	// #10
  23458c:	b	234594 <link_find_prioritized+0x24c>
  234590:	mov	w27, #0x8                   	// #8
  234594:	sub	x0, x29, #0x20
  234598:	bl	2346e8 <sd_device_unrefp>
  23459c:	cbz	w27, 234428 <link_find_prioritized+0xe0>
  2345a0:	cmp	w27, #0xa
  2345a4:	b.eq	234428 <link_find_prioritized+0xe0>  // b.none
  2345a8:	b	2345f0 <link_find_prioritized+0x2a8>
  2345ac:	mov	w27, #0x1                   	// #1
  2345b0:	mov	w22, w0
  2345b4:	b	234594 <link_find_prioritized+0x24c>
  2345b8:	sub	x1, x29, #0x28
  2345bc:	mov	x0, x21
  2345c0:	bl	253a40 <sd_device_get_sysname@plt>
  2345c4:	b	23446c <link_find_prioritized+0x124>
  2345c8:	add	x1, sp, #0x20
  2345cc:	mov	x0, x27
  2345d0:	bl	253a40 <sd_device_get_sysname@plt>
  2345d4:	b	234528 <link_find_prioritized+0x1e0>
  2345d8:	ldur	x8, [x29, #-16]
  2345dc:	cbnz	x8, 234600 <link_find_prioritized+0x2b8>
  2345e0:	bl	253660 <__errno_location@plt>
  2345e4:	ldr	w8, [x0]
  2345e8:	neg	w22, w8
  2345ec:	b	234614 <link_find_prioritized+0x2cc>
  2345f0:	cmp	w27, #0x8
  2345f4:	b.ne	234614 <link_find_prioritized+0x2cc>  // b.any
  2345f8:	ldur	x8, [x29, #-16]
  2345fc:	cbz	x8, 234610 <link_find_prioritized+0x2c8>
  234600:	mov	w22, wzr
  234604:	stur	xzr, [x29, #-16]
  234608:	str	x8, [x19]
  23460c:	b	234614 <link_find_prioritized+0x2cc>
  234610:	mov	w22, #0xfffffffe            	// #-2
  234614:	sub	x0, x29, #0x10
  234618:	bl	23306c <freep>
  23461c:	sub	x0, x29, #0x8
  234620:	bl	2346cc <closedirp>
  234624:	mov	w0, w22
  234628:	ldp	x20, x19, [sp, #176]
  23462c:	ldp	x22, x21, [sp, #160]
  234630:	ldp	x24, x23, [sp, #144]
  234634:	ldp	x26, x25, [sp, #128]
  234638:	ldp	x28, x27, [sp, #112]
  23463c:	ldp	x29, x30, [sp, #96]
  234640:	add	sp, sp, #0xc0
  234644:	ret
  234648:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  23464c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  234650:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  234654:	add	x1, x1, #0x390
  234658:	add	x2, x2, #0x5b1
  23465c:	add	x4, x4, #0x266
  234660:	mov	w0, #0x1                   	// #1
  234664:	mov	w3, #0x72                  	// #114
  234668:	bl	253740 <log_assert_failed_realm@plt>
  23466c:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  234670:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  234674:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  234678:	add	x1, x1, #0x2f9
  23467c:	add	x2, x2, #0x5b1
  234680:	add	x4, x4, #0x266
  234684:	mov	w0, #0x1                   	// #1
  234688:	mov	w3, #0x73                  	// #115
  23468c:	bl	253740 <log_assert_failed_realm@plt>
  234690:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  234694:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  234698:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  23469c:	add	x1, x1, #0xb2b
  2346a0:	add	x2, x2, #0x5b1
  2346a4:	add	x4, x4, #0x266
  2346a8:	mov	w0, #0x1                   	// #1
  2346ac:	mov	w3, #0x74                  	// #116
  2346b0:	bl	253740 <log_assert_failed_realm@plt>

00000000002346b4 <closep>:
  2346b4:	stp	x29, x30, [sp, #-16]!
  2346b8:	ldr	w0, [x0]
  2346bc:	mov	x29, sp
  2346c0:	bl	2538f0 <safe_close@plt>
  2346c4:	ldp	x29, x30, [sp], #16
  2346c8:	ret

00000000002346cc <closedirp>:
  2346cc:	stp	x29, x30, [sp, #-16]!
  2346d0:	ldr	x0, [x0]
  2346d4:	mov	x29, sp
  2346d8:	cbz	x0, 2346e0 <closedirp+0x14>
  2346dc:	bl	2543e0 <closedir@plt>
  2346e0:	ldp	x29, x30, [sp], #16
  2346e4:	ret

00000000002346e8 <sd_device_unrefp>:
  2346e8:	stp	x29, x30, [sp, #-16]!
  2346ec:	ldr	x0, [x0]
  2346f0:	mov	x29, sp
  2346f4:	cbz	x0, 2346fc <sd_device_unrefp+0x14>
  2346f8:	bl	253950 <sd_device_unref@plt>
  2346fc:	ldp	x29, x30, [sp], #16
  234700:	ret

0000000000234704 <gid_is_valid>:
  234704:	stp	x29, x30, [sp, #-16]!
  234708:	mov	x29, sp
  23470c:	bl	2541d0 <uid_is_valid@plt>
  234710:	and	w0, w0, #0x1
  234714:	ldp	x29, x30, [sp], #16
  234718:	ret

000000000023471c <ordered_hashmap_iterate>:
  23471c:	stp	x29, x30, [sp, #-16]!
  234720:	mov	x29, sp
  234724:	bl	253b60 <internal_hashmap_iterate@plt>
  234728:	and	w0, w0, #0x1
  23472c:	ldp	x29, x30, [sp], #16
  234730:	ret

0000000000234734 <size_multiply_overflow>:
  234734:	mov	w0, wzr
  234738:	ret

000000000023473c <udev_rules_free>:
  23473c:	cbz	x0, 234788 <udev_rules_free+0x4c>
  234740:	stp	x29, x30, [sp, #-32]!
  234744:	stp	x20, x19, [sp, #16]
  234748:	mov	x19, x0
  23474c:	ldr	x0, [x0, #40]
  234750:	mov	x29, sp
  234754:	cbz	x0, 234768 <udev_rules_free+0x2c>
  234758:	ldr	x20, [x0, #24]
  23475c:	bl	234790 <udev_rule_file_free>
  234760:	mov	x0, x20
  234764:	cbnz	x20, 234758 <udev_rules_free+0x1c>
  234768:	ldr	x0, [x19, #16]
  23476c:	bl	2347d8 <hashmap_free_free_key>
  234770:	ldr	x0, [x19, #24]
  234774:	bl	2347d8 <hashmap_free_free_key>
  234778:	mov	x0, x19
  23477c:	bl	2347f8 <mfree>
  234780:	ldp	x20, x19, [sp, #16]
  234784:	ldp	x29, x30, [sp], #32
  234788:	mov	x0, xzr
  23478c:	ret

0000000000234790 <udev_rule_file_free>:
  234790:	cbz	x0, 2347d4 <udev_rule_file_free+0x44>
  234794:	stp	x29, x30, [sp, #-32]!
  234798:	stp	x20, x19, [sp, #16]
  23479c:	mov	x19, x0
  2347a0:	ldr	x0, [x0, #16]
  2347a4:	mov	x29, sp
  2347a8:	cbz	x0, 2347bc <udev_rule_file_free+0x2c>
  2347ac:	ldr	x20, [x0, #64]
  2347b0:	bl	2351cc <udev_rule_line_free>
  2347b4:	mov	x0, x20
  2347b8:	cbnz	x20, 2347ac <udev_rule_file_free+0x1c>
  2347bc:	ldr	x0, [x19]
  2347c0:	bl	2536e0 <free@plt>
  2347c4:	mov	x0, x19
  2347c8:	bl	2536e0 <free@plt>
  2347cc:	ldp	x20, x19, [sp, #16]
  2347d0:	ldp	x29, x30, [sp], #32
  2347d4:	ret

00000000002347d8 <hashmap_free_free_key>:
  2347d8:	stp	x29, x30, [sp, #-16]!
  2347dc:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  2347e0:	ldr	x1, [x1, #728]
  2347e4:	mov	x2, xzr
  2347e8:	mov	x29, sp
  2347ec:	bl	253940 <internal_hashmap_free@plt>
  2347f0:	ldp	x29, x30, [sp], #16
  2347f4:	ret

00000000002347f8 <mfree>:
  2347f8:	stp	x29, x30, [sp, #-16]!
  2347fc:	mov	x29, sp
  234800:	bl	2536e0 <free@plt>
  234804:	ldp	x29, x30, [sp], #16
  234808:	ret

000000000023480c <udev_rules_new>:
  23480c:	sub	sp, sp, #0x70
  234810:	stp	x29, x30, [sp, #64]
  234814:	add	x29, sp, #0x40
  234818:	cmp	w1, #0x3
  23481c:	str	x21, [sp, #80]
  234820:	stp	x20, x19, [sp, #96]
  234824:	str	xzr, [x29, #24]
  234828:	stur	xzr, [x29, #-8]
  23482c:	b.cs	23495c <udev_rules_new+0x150>  // b.hs, b.nlast
  234830:	mov	x19, x0
  234834:	mov	w0, #0x30                  	// #48
  234838:	mov	w20, w1
  23483c:	bl	2349b8 <malloc_multiply>
  234840:	str	x0, [x29, #24]
  234844:	cbz	x0, 2348dc <udev_rules_new+0xd0>
  234848:	str	w20, [x0, #8]
  23484c:	ldr	x20, [x29, #24]
  234850:	movi	v0.2d, #0x0
  234854:	str	xzr, [x0]
  234858:	stur	q0, [x0, #12]
  23485c:	stur	q0, [x0, #28]
  234860:	str	wzr, [x0, #44]
  234864:	mov	x0, x20
  234868:	bl	2349f0 <udev_rules_check_timestamp>
  23486c:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  234870:	add	x8, x8, #0x340
  234874:	ldp	q0, q1, [x8]
  234878:	ldr	q2, [x8, #32]
  23487c:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  234880:	add	x1, x1, #0x942
  234884:	sub	x0, x29, #0x8
  234888:	mov	x4, sp
  23488c:	mov	x2, xzr
  234890:	mov	w3, wzr
  234894:	stp	q0, q1, [sp]
  234898:	str	q2, [sp, #32]
  23489c:	bl	2543f0 <conf_files_list_strv@plt>
  2348a0:	tbnz	w0, #31, 2348e4 <udev_rules_new+0xd8>
  2348a4:	ldur	x8, [x29, #-8]
  2348a8:	cbz	x8, 2348c8 <udev_rules_new+0xbc>
  2348ac:	ldr	x1, [x8]
  2348b0:	cbz	x1, 2348c8 <udev_rules_new+0xbc>
  2348b4:	add	x21, x8, #0x8
  2348b8:	mov	x0, x20
  2348bc:	bl	234a38 <parse_file>
  2348c0:	ldr	x1, [x21], #8
  2348c4:	cbnz	x1, 2348b8 <udev_rules_new+0xac>
  2348c8:	ldr	x8, [x29, #24]
  2348cc:	mov	w20, wzr
  2348d0:	str	xzr, [x29, #24]
  2348d4:	str	x8, [x19]
  2348d8:	b	234934 <udev_rules_new+0x128>
  2348dc:	mov	w20, #0xfffffff4            	// #-12
  2348e0:	b	234934 <udev_rules_new+0x128>
  2348e4:	mov	w21, w0
  2348e8:	mov	w0, #0x1                   	// #1
  2348ec:	bl	2535b0 <log_get_max_level_realm@plt>
  2348f0:	cmp	w0, #0x3
  2348f4:	b.lt	234928 <udev_rules_new+0x11c>  // b.tstop
  2348f8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2348fc:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  234900:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  234904:	add	x2, x2, #0x63
  234908:	add	x4, x4, #0x949
  23490c:	add	x5, x5, #0xb7b
  234910:	mov	w0, #0x403                 	// #1027
  234914:	mov	w3, #0x513                 	// #1299
  234918:	mov	w1, w21
  23491c:	bl	2535c0 <log_internal_realm@plt>
  234920:	mov	w20, w0
  234924:	b	234934 <udev_rules_new+0x128>
  234928:	mov	w8, wzr
  23492c:	neg	w9, w21
  234930:	sub	w20, w8, w9, uxtb
  234934:	sub	x0, x29, #0x8
  234938:	bl	23499c <strv_freep>
  23493c:	add	x0, x29, #0x18
  234940:	bl	234980 <udev_rules_freep>
  234944:	mov	w0, w20
  234948:	ldp	x20, x19, [sp, #96]
  23494c:	ldr	x21, [sp, #80]
  234950:	ldp	x29, x30, [sp, #64]
  234954:	add	sp, sp, #0x70
  234958:	ret
  23495c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  234960:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  234964:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  234968:	add	x1, x1, #0xcef
  23496c:	add	x2, x2, #0x63
  234970:	add	x4, x4, #0xb47
  234974:	mov	w0, #0x1                   	// #1
  234978:	mov	w3, #0x505                 	// #1285
  23497c:	bl	253740 <log_assert_failed_realm@plt>

0000000000234980 <udev_rules_freep>:
  234980:	stp	x29, x30, [sp, #-16]!
  234984:	ldr	x0, [x0]
  234988:	mov	x29, sp
  23498c:	cbz	x0, 234994 <udev_rules_freep+0x14>
  234990:	bl	23473c <udev_rules_free>
  234994:	ldp	x29, x30, [sp], #16
  234998:	ret

000000000023499c <strv_freep>:
  23499c:	stp	x29, x30, [sp, #-16]!
  2349a0:	ldr	x0, [x0]
  2349a4:	mov	x29, sp
  2349a8:	cbz	x0, 2349b0 <strv_freep+0x14>
  2349ac:	bl	254150 <strv_free@plt>
  2349b0:	ldp	x29, x30, [sp], #16
  2349b4:	ret

00000000002349b8 <malloc_multiply>:
  2349b8:	stp	x29, x30, [sp, #-32]!
  2349bc:	str	x19, [sp, #16]
  2349c0:	mov	x29, sp
  2349c4:	mov	x19, x0
  2349c8:	bl	2352f0 <size_multiply_overflow>
  2349cc:	tbz	w0, #0, 2349d8 <malloc_multiply+0x20>
  2349d0:	mov	x0, xzr
  2349d4:	b	2349e4 <malloc_multiply+0x2c>
  2349d8:	cmp	x19, #0x0
  2349dc:	csinc	x0, x19, xzr, ne  // ne = any
  2349e0:	bl	2539c0 <malloc@plt>
  2349e4:	ldr	x19, [sp, #16]
  2349e8:	ldp	x29, x30, [sp], #32
  2349ec:	ret

00000000002349f0 <udev_rules_check_timestamp>:
  2349f0:	cbz	x0, 234a30 <udev_rules_check_timestamp+0x40>
  2349f4:	sub	sp, sp, #0x40
  2349f8:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  2349fc:	add	x8, x8, #0x370
  234a00:	ldp	q0, q1, [x8]
  234a04:	ldr	q2, [x8, #32]
  234a08:	mov	x1, x0
  234a0c:	mov	x0, sp
  234a10:	mov	w2, #0x1                   	// #1
  234a14:	stp	x29, x30, [sp, #48]
  234a18:	add	x29, sp, #0x30
  234a1c:	stp	q0, q1, [sp]
  234a20:	str	q2, [sp, #32]
  234a24:	bl	254400 <paths_check_timestamp@plt>
  234a28:	ldp	x29, x30, [sp, #48]
  234a2c:	add	sp, sp, #0x40
  234a30:	and	w0, w0, #0x1
  234a34:	ret

0000000000234a38 <parse_file>:
  234a38:	sub	sp, sp, #0x80
  234a3c:	stp	x20, x19, [sp, #112]
  234a40:	mov	x19, x1
  234a44:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  234a48:	stp	x29, x30, [sp, #32]
  234a4c:	add	x29, sp, #0x20
  234a50:	mov	x20, x0
  234a54:	add	x1, x1, #0x2fc
  234a58:	mov	x0, x19
  234a5c:	stp	x28, x27, [sp, #48]
  234a60:	stp	x26, x25, [sp, #64]
  234a64:	stp	x24, x23, [sp, #80]
  234a68:	stp	x22, x21, [sp, #96]
  234a6c:	stur	xzr, [x29, #-8]
  234a70:	stp	xzr, xzr, [sp, #8]
  234a74:	bl	254410 <fopen64@plt>
  234a78:	str	x0, [sp, #8]
  234a7c:	cbz	x0, 234db4 <parse_file+0x37c>
  234a80:	mov	x21, x0
  234a84:	bl	254420 <fileno@plt>
  234a88:	mov	w1, w0
  234a8c:	mov	x0, x19
  234a90:	bl	254430 <fd_warn_permissions@plt>
  234a94:	mov	x0, x21
  234a98:	bl	254420 <fileno@plt>
  234a9c:	bl	254440 <null_or_empty_fd@plt>
  234aa0:	mov	w22, w0
  234aa4:	mov	w0, #0x1                   	// #1
  234aa8:	bl	2535b0 <log_get_max_level_realm@plt>
  234aac:	cmp	w0, #0x7
  234ab0:	cbz	w22, 234ae8 <parse_file+0xb0>
  234ab4:	b.lt	234db4 <parse_file+0x37c>  // b.tstop
  234ab8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  234abc:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  234ac0:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  234ac4:	add	x2, x2, #0x63
  234ac8:	add	x4, x4, #0x4a9
  234acc:	add	x5, x5, #0x4b4
  234ad0:	mov	w0, #0x407                 	// #1031
  234ad4:	mov	w3, #0x4ab                 	// #1195
  234ad8:	mov	w1, wzr
  234adc:	mov	x6, x19
  234ae0:	bl	2535c0 <log_internal_realm@plt>
  234ae4:	b	234db4 <parse_file+0x37c>
  234ae8:	b.lt	234b18 <parse_file+0xe0>  // b.tstop
  234aec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  234af0:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  234af4:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  234af8:	add	x2, x2, #0x63
  234afc:	add	x4, x4, #0x4a9
  234b00:	add	x5, x5, #0x88c
  234b04:	mov	w0, #0x407                 	// #1031
  234b08:	mov	w3, #0x4af                 	// #1199
  234b0c:	mov	w1, wzr
  234b10:	mov	x6, x19
  234b14:	bl	2535c0 <log_internal_realm@plt>
  234b18:	mov	x0, x19
  234b1c:	bl	253ab0 <strdup@plt>
  234b20:	str	x0, [sp, #16]
  234b24:	cbz	x0, 234b70 <parse_file+0x138>
  234b28:	mov	w0, #0x28                  	// #40
  234b2c:	bl	2349b8 <malloc_multiply>
  234b30:	cbz	x0, 234b90 <parse_file+0x158>
  234b34:	ldr	x8, [sp, #16]
  234b38:	movi	v0.2d, #0x0
  234b3c:	str	xzr, [sp, #16]
  234b40:	stur	q0, [x0, #8]
  234b44:	str	x8, [x0]
  234b48:	stur	q0, [x0, #24]
  234b4c:	ldr	x10, [x20, #32]
  234b50:	mov	x22, x0
  234b54:	cbz	x10, 234bb0 <parse_file+0x178>
  234b58:	mov	x9, x10
  234b5c:	ldr	x10, [x10, #24]
  234b60:	cbnz	x10, 234b58 <parse_file+0x120>
  234b64:	add	x8, x9, #0x18
  234b68:	str	x10, [x22, #24]
  234b6c:	b	234bec <parse_file+0x1b4>
  234b70:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  234b74:	adrp	x3, 212000 <worker_hash_op+0x7ad0>
  234b78:	add	x1, x1, #0x63
  234b7c:	add	x3, x3, #0x4a9
  234b80:	mov	w0, #0x1                   	// #1
  234b84:	mov	w2, #0x4b3                 	// #1203
  234b88:	bl	2537c0 <log_oom_internal@plt>
  234b8c:	b	234db4 <parse_file+0x37c>
  234b90:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  234b94:	adrp	x3, 212000 <worker_hash_op+0x7ad0>
  234b98:	add	x1, x1, #0x63
  234b9c:	add	x3, x3, #0x4a9
  234ba0:	mov	w0, #0x1                   	// #1
  234ba4:	mov	w2, #0x4b7                 	// #1207
  234ba8:	bl	2537c0 <log_oom_internal@plt>
  234bac:	b	234db4 <parse_file+0x37c>
  234bb0:	mov	x8, x20
  234bb4:	ldr	x10, [x8, #40]!
  234bb8:	cbz	x10, 234bd0 <parse_file+0x198>
  234bbc:	mov	x11, x10
  234bc0:	mov	x9, x11
  234bc4:	ldr	x11, [x11, #24]
  234bc8:	cbnz	x11, 234bc0 <parse_file+0x188>
  234bcc:	b	234bd4 <parse_file+0x19c>
  234bd0:	mov	x9, xzr
  234bd4:	cbz	x9, 234dec <parse_file+0x3b4>
  234bd8:	mov	x8, x9
  234bdc:	ldr	x10, [x8, #24]!
  234be0:	str	x10, [x22, #24]
  234be4:	cbz	x10, 234bec <parse_file+0x1b4>
  234be8:	str	x22, [x10, #32]
  234bec:	adrp	x24, 210000 <worker_hash_op+0x5ad0>
  234bf0:	adrp	x25, 212000 <worker_hash_op+0x7ad0>
  234bf4:	mov	w23, wzr
  234bf8:	mov	w26, wzr
  234bfc:	add	x24, x24, #0x63
  234c00:	add	x25, x25, #0x4a9
  234c04:	str	x9, [x22, #32]
  234c08:	str	x22, [x8]
  234c0c:	str	x22, [x20, #32]
  234c10:	mov	x2, sp
  234c14:	mov	w1, #0x4000                	// #16384
  234c18:	mov	x0, x21
  234c1c:	str	xzr, [sp]
  234c20:	bl	235328 <read_line>
  234c24:	tbnz	w0, #31, 234c50 <parse_file+0x218>
  234c28:	cbz	w0, 234c58 <parse_file+0x220>
  234c2c:	ldr	x0, [sp]
  234c30:	mov	x1, xzr
  234c34:	add	w23, w23, #0x1
  234c38:	bl	235344 <skip_leading_chars>
  234c3c:	ldrb	w8, [x0]
  234c40:	cmp	w8, #0x23
  234c44:	b.ne	234c60 <parse_file+0x228>  // b.any
  234c48:	mov	w27, #0x17                  	// #23
  234c4c:	b	234d90 <parse_file+0x358>
  234c50:	mov	w27, #0x1                   	// #1
  234c54:	b	234d90 <parse_file+0x358>
  234c58:	mov	w27, #0x16                  	// #22
  234c5c:	b	234d90 <parse_file+0x358>
  234c60:	mov	x27, x0
  234c64:	bl	2539a0 <strlen@plt>
  234c68:	ldur	x8, [x29, #-8]
  234c6c:	mov	x28, x0
  234c70:	cmp	x8, #0x0
  234c74:	cset	w9, eq  // eq = none
  234c78:	orr	w9, w26, w9
  234c7c:	tbnz	w9, #0, 234ccc <parse_file+0x294>
  234c80:	mov	x0, x8
  234c84:	bl	2539a0 <strlen@plt>
  234c88:	add	x8, x0, x28
  234c8c:	lsr	x8, x8, #14
  234c90:	cmp	x8, #0x0
  234c94:	cset	w8, ne  // ne = any
  234c98:	sub	x0, x29, #0x8
  234c9c:	mov	x1, xzr
  234ca0:	mov	x2, x27
  234ca4:	mov	x3, xzr
  234ca8:	orr	w26, w26, w8
  234cac:	bl	254450 <strextend_with_separator@plt>
  234cb0:	cbz	x0, 234d78 <parse_file+0x340>
  234cb4:	tbnz	w26, #0, 234ccc <parse_file+0x294>
  234cb8:	ldur	x27, [x29, #-8]
  234cbc:	mov	x0, x27
  234cc0:	bl	2539a0 <strlen@plt>
  234cc4:	mov	x28, x0
  234cc8:	mov	w26, wzr
  234ccc:	cbz	x28, 234d0c <parse_file+0x2d4>
  234cd0:	sub	x8, x28, #0x1
  234cd4:	ldrb	w9, [x27, x8]
  234cd8:	cmp	w9, #0x5c
  234cdc:	b.ne	234d0c <parse_file+0x2d4>  // b.any
  234ce0:	tbnz	w26, #0, 234c48 <parse_file+0x210>
  234ce4:	strb	wzr, [x27, x8]
  234ce8:	ldur	x8, [x29, #-8]
  234cec:	cbnz	x8, 234c48 <parse_file+0x210>
  234cf0:	mov	x0, x27
  234cf4:	bl	253ab0 <strdup@plt>
  234cf8:	stur	x0, [x29, #-8]
  234cfc:	cbnz	x0, 234c48 <parse_file+0x210>
  234d00:	mov	w0, #0x1                   	// #1
  234d04:	mov	w2, #0x4ec                 	// #1260
  234d08:	b	234d80 <parse_file+0x348>
  234d0c:	tbz	w26, #0, 234d4c <parse_file+0x314>
  234d10:	mov	w0, #0x1                   	// #1
  234d14:	bl	2535b0 <log_get_max_level_realm@plt>
  234d18:	cmp	w0, #0x3
  234d1c:	b.lt	234d60 <parse_file+0x328>  // b.tstop
  234d20:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  234d24:	mov	w0, #0x403                 	// #1027
  234d28:	mov	w3, #0x4f3                 	// #1267
  234d2c:	mov	w1, wzr
  234d30:	mov	x2, x24
  234d34:	mov	x4, x25
  234d38:	add	x5, x5, #0x142
  234d3c:	mov	x6, x19
  234d40:	mov	w7, w23
  234d44:	bl	2535c0 <log_internal_realm@plt>
  234d48:	b	234d60 <parse_file+0x328>
  234d4c:	cbz	x28, 234d60 <parse_file+0x328>
  234d50:	mov	x0, x20
  234d54:	mov	x1, x27
  234d58:	mov	w2, w23
  234d5c:	bl	23537c <rule_add_line>
  234d60:	ldur	x0, [x29, #-8]
  234d64:	bl	2347f8 <mfree>
  234d68:	mov	w27, wzr
  234d6c:	mov	w26, wzr
  234d70:	stur	xzr, [x29, #-8]
  234d74:	b	234d90 <parse_file+0x358>
  234d78:	mov	w0, #0x1                   	// #1
  234d7c:	mov	w2, #0x4dc                 	// #1244
  234d80:	mov	x1, x24
  234d84:	mov	x3, x25
  234d88:	mov	w27, #0x1                   	// #1
  234d8c:	bl	2537c0 <log_oom_internal@plt>
  234d90:	mov	x0, sp
  234d94:	bl	2352f8 <freep>
  234d98:	cbz	w27, 234c10 <parse_file+0x1d8>
  234d9c:	cmp	w27, #0x17
  234da0:	b.eq	234c10 <parse_file+0x1d8>  // b.none
  234da4:	cmp	w27, #0x16
  234da8:	b.ne	234db4 <parse_file+0x37c>  // b.any
  234dac:	mov	x0, x22
  234db0:	bl	235738 <rule_resolve_goto>
  234db4:	add	x0, sp, #0x8
  234db8:	bl	235310 <fclosep>
  234dbc:	add	x0, sp, #0x10
  234dc0:	bl	2352f8 <freep>
  234dc4:	sub	x0, x29, #0x8
  234dc8:	bl	2352f8 <freep>
  234dcc:	ldp	x20, x19, [sp, #112]
  234dd0:	ldp	x22, x21, [sp, #96]
  234dd4:	ldp	x24, x23, [sp, #80]
  234dd8:	ldp	x26, x25, [sp, #64]
  234ddc:	ldp	x28, x27, [sp, #48]
  234de0:	ldp	x29, x30, [sp, #32]
  234de4:	add	sp, sp, #0x80
  234de8:	ret
  234dec:	mov	x9, xzr
  234df0:	str	x10, [x22, #24]
  234df4:	cbnz	x10, 234be8 <parse_file+0x1b0>
  234df8:	b	234bec <parse_file+0x1b4>

0000000000234dfc <udev_rules_apply_to_event>:
  234dfc:	sub	sp, sp, #0x50
  234e00:	stp	x29, x30, [sp, #16]
  234e04:	stp	x24, x23, [sp, #32]
  234e08:	stp	x22, x21, [sp, #48]
  234e0c:	stp	x20, x19, [sp, #64]
  234e10:	add	x29, sp, #0x10
  234e14:	cbz	x0, 234e98 <udev_rules_apply_to_event+0x9c>
  234e18:	mov	x21, x1
  234e1c:	cbz	x1, 234ebc <udev_rules_apply_to_event+0xc0>
  234e20:	ldr	x23, [x0, #40]
  234e24:	mov	x22, x0
  234e28:	cbz	x23, 234e7c <udev_rules_apply_to_event+0x80>
  234e2c:	mov	x19, x3
  234e30:	mov	x20, x2
  234e34:	add	x24, x23, #0x10
  234e38:	str	x23, [x22, #32]
  234e3c:	ldr	x8, [x24]
  234e40:	str	x8, [x23, #8]
  234e44:	cbz	x8, 234e74 <udev_rules_apply_to_event+0x78>
  234e48:	ldr	x8, [x8, #64]
  234e4c:	add	x4, sp, #0x8
  234e50:	mov	x0, x22
  234e54:	mov	x1, x21
  234e58:	mov	x2, x20
  234e5c:	mov	x3, x19
  234e60:	add	x24, sp, #0x8
  234e64:	str	x8, [sp, #8]
  234e68:	bl	234ee0 <udev_rule_apply_line_to_event>
  234e6c:	tbz	w0, #31, 234e3c <udev_rules_apply_to_event+0x40>
  234e70:	b	234e80 <udev_rules_apply_to_event+0x84>
  234e74:	ldr	x23, [x23, #24]
  234e78:	cbnz	x23, 234e34 <udev_rules_apply_to_event+0x38>
  234e7c:	mov	w0, wzr
  234e80:	ldp	x20, x19, [sp, #64]
  234e84:	ldp	x22, x21, [sp, #48]
  234e88:	ldp	x24, x23, [sp, #32]
  234e8c:	ldp	x29, x30, [sp, #16]
  234e90:	add	sp, sp, #0x50
  234e94:	ret
  234e98:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  234e9c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  234ea0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  234ea4:	add	x1, x1, #0x5c9
  234ea8:	add	x2, x2, #0x63
  234eac:	add	x4, x4, #0x1c1
  234eb0:	mov	w0, #0x1                   	// #1
  234eb4:	mov	w3, #0x8d7                 	// #2263
  234eb8:	bl	253740 <log_assert_failed_realm@plt>
  234ebc:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  234ec0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  234ec4:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  234ec8:	add	x1, x1, #0xc4f
  234ecc:	add	x2, x2, #0x63
  234ed0:	add	x4, x4, #0x1c1
  234ed4:	mov	w0, #0x1                   	// #1
  234ed8:	mov	w3, #0x8d8                 	// #2264
  234edc:	bl	253740 <log_assert_failed_realm@plt>

0000000000234ee0 <udev_rule_apply_line_to_event>:
  234ee0:	sub	sp, sp, #0x60
  234ee4:	stp	x29, x30, [sp, #16]
  234ee8:	stp	x26, x25, [sp, #32]
  234eec:	stp	x24, x23, [sp, #48]
  234ef0:	stp	x22, x21, [sp, #64]
  234ef4:	stp	x20, x19, [sp, #80]
  234ef8:	ldr	x8, [x0, #32]
  234efc:	mov	x22, x0
  234f00:	ldr	x0, [x1]
  234f04:	add	x29, sp, #0x10
  234f08:	ldr	x24, [x8, #8]
  234f0c:	mov	x21, x1
  234f10:	sub	x1, x29, #0x4
  234f14:	mov	x19, x4
  234f18:	mov	x20, x3
  234f1c:	mov	x23, x2
  234f20:	bl	253cf0 <device_get_action@plt>
  234f24:	tbnz	w0, #31, 235000 <udev_rule_apply_line_to_event+0x120>
  234f28:	ldur	w8, [x29, #-4]
  234f2c:	mov	w25, #0x28                  	// #40
  234f30:	cmp	w8, #0x1
  234f34:	b.eq	234f68 <udev_rule_apply_line_to_event+0x88>  // b.none
  234f38:	ldr	x0, [x21]
  234f3c:	mov	x1, xzr
  234f40:	bl	253bf0 <sd_device_get_devnum@plt>
  234f44:	ldr	x8, [x21]
  234f48:	cmp	w0, #0x0
  234f4c:	mov	w9, #0x2a                  	// #42
  234f50:	mov	x1, xzr
  234f54:	mov	x0, x8
  234f58:	csel	w25, w9, w25, ge  // ge = tcont
  234f5c:	bl	253c00 <sd_device_get_ifindex@plt>
  234f60:	bfxil	w25, w0, #31, #1
  234f64:	eor	w25, w25, #0x1
  234f68:	ldr	w8, [x24, #12]
  234f6c:	tst	w8, w25
  234f70:	b.eq	234ffc <udev_rule_apply_line_to_event+0x11c>  // b.none
  234f74:	ldrb	w8, [x21, #105]
  234f78:	lsl	w8, w8, #8
  234f7c:	strh	w8, [x21, #104]
  234f80:	ldr	x25, [x24, #56]
  234f84:	cbz	x25, 234fe8 <udev_rule_apply_line_to_event+0x108>
  234f88:	mov	w26, wzr
  234f8c:	b	234fb4 <udev_rule_apply_line_to_event+0xd4>
  234f90:	ldr	x1, [x21]
  234f94:	mov	x0, x22
  234f98:	mov	x2, x21
  234f9c:	mov	x3, x23
  234fa0:	mov	x4, x20
  234fa4:	bl	239ee8 <udev_rule_apply_token_to_event>
  234fa8:	cmp	w0, #0x1
  234fac:	b.lt	235000 <udev_rule_apply_line_to_event+0x120>  // b.tstop
  234fb0:	cbz	x25, 234fe8 <udev_rule_apply_line_to_event+0x108>
  234fb4:	mov	x0, x25
  234fb8:	ldr	x25, [x25, #24]
  234fbc:	str	x0, [x24, #48]
  234fc0:	bl	239e18 <token_is_for_parents>
  234fc4:	tbz	w0, #0, 234f90 <udev_rule_apply_line_to_event+0xb0>
  234fc8:	tbnz	w26, #0, 234fb0 <udev_rule_apply_line_to_event+0xd0>
  234fcc:	mov	x0, x22
  234fd0:	mov	x1, x21
  234fd4:	bl	239e34 <udev_rule_apply_parent_token_to_event>
  234fd8:	cmp	w0, #0x1
  234fdc:	b.lt	235000 <udev_rule_apply_line_to_event+0x120>  // b.tstop
  234fe0:	mov	w26, #0x1                   	// #1
  234fe4:	b	234fb0 <udev_rule_apply_line_to_event+0xd0>
  234fe8:	ldr	x8, [x24, #32]
  234fec:	cbz	x8, 234ffc <udev_rule_apply_line_to_event+0x11c>
  234ff0:	mov	w0, wzr
  234ff4:	str	x8, [x19]
  234ff8:	b	235000 <udev_rule_apply_line_to_event+0x120>
  234ffc:	mov	w0, wzr
  235000:	ldp	x20, x19, [sp, #80]
  235004:	ldp	x22, x21, [sp, #64]
  235008:	ldp	x24, x23, [sp, #48]
  23500c:	ldp	x26, x25, [sp, #32]
  235010:	ldp	x29, x30, [sp, #16]
  235014:	add	sp, sp, #0x60
  235018:	ret

000000000023501c <udev_rules_apply_static_dev_perms>:
  23501c:	stp	x29, x30, [sp, #-32]!
  235020:	stp	x20, x19, [sp, #16]
  235024:	mov	x29, sp
  235028:	cbz	x0, 23506c <udev_rules_apply_static_dev_perms+0x50>
  23502c:	ldr	x20, [x0, #40]
  235030:	cbnz	x20, 23504c <udev_rules_apply_static_dev_perms+0x30>
  235034:	mov	w0, wzr
  235038:	ldp	x20, x19, [sp, #16]
  23503c:	ldp	x29, x30, [sp], #32
  235040:	ret
  235044:	ldr	x20, [x20, #24]
  235048:	cbz	x20, 235034 <udev_rules_apply_static_dev_perms+0x18>
  23504c:	ldr	x19, [x20, #16]
  235050:	cbz	x19, 235044 <udev_rules_apply_static_dev_perms+0x28>
  235054:	mov	x0, x19
  235058:	bl	235090 <udev_rule_line_apply_static_dev_perms>
  23505c:	tbnz	w0, #31, 235038 <udev_rules_apply_static_dev_perms+0x1c>
  235060:	ldr	x19, [x19, #64]
  235064:	cbnz	x19, 235054 <udev_rules_apply_static_dev_perms+0x38>
  235068:	b	235044 <udev_rules_apply_static_dev_perms+0x28>
  23506c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  235070:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235074:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  235078:	add	x1, x1, #0x5c9
  23507c:	add	x2, x2, #0x63
  235080:	add	x4, x4, #0x6ef
  235084:	mov	w0, #0x1                   	// #1
  235088:	mov	w3, #0x94f                 	// #2383
  23508c:	bl	253740 <log_assert_failed_realm@plt>

0000000000235090 <udev_rule_line_apply_static_dev_perms>:
  235090:	stp	x29, x30, [sp, #-80]!
  235094:	mov	x29, sp
  235098:	str	x25, [sp, #16]
  23509c:	stp	x24, x23, [sp, #32]
  2350a0:	stp	x22, x21, [sp, #48]
  2350a4:	stp	x20, x19, [sp, #64]
  2350a8:	str	xzr, [x29, #24]
  2350ac:	cbz	x0, 2351a8 <udev_rule_line_apply_static_dev_perms+0x118>
  2350b0:	ldrb	w8, [x0, #12]
  2350b4:	tbz	w8, #2, 23515c <udev_rule_line_apply_static_dev_perms+0xcc>
  2350b8:	ldr	x23, [x0, #56]
  2350bc:	cbz	x23, 23515c <udev_rule_line_apply_static_dev_perms+0xcc>
  2350c0:	adrp	x25, 218000 <worker_hash_op+0xdad0>
  2350c4:	mov	w19, #0xffffffff            	// #-1
  2350c8:	mov	w24, #0xde000000            	// #-570425344
  2350cc:	add	x25, x25, #0x9e8
  2350d0:	mov	w20, #0xffffffff            	// #-1
  2350d4:	mov	w21, #0xffffffff            	// #-1
  2350d8:	b	2350ec <udev_rule_line_apply_static_dev_perms+0x5c>
  2350dc:	ldr	w8, [x23, #16]
  2350e0:	sub	w19, w8, #0x1
  2350e4:	ldr	x23, [x23, #24]
  2350e8:	cbz	x23, 23515c <udev_rule_line_apply_static_dev_perms+0xcc>
  2350ec:	ldr	w8, [x23]
  2350f0:	add	w8, w24, w8, lsl #24
  2350f4:	lsr	w8, w8, #24
  2350f8:	cmp	w8, #0x4
  2350fc:	b.hi	2350e4 <udev_rule_line_apply_static_dev_perms+0x54>  // b.pmore
  235100:	adr	x9, 2350dc <udev_rule_line_apply_static_dev_perms+0x4c>
  235104:	ldrb	w10, [x25, x8]
  235108:	add	x9, x9, x10, lsl #2
  23510c:	br	x9
  235110:	ldr	w8, [x23, #16]
  235114:	sub	w21, w8, #0x1
  235118:	b	2350e4 <udev_rule_line_apply_static_dev_perms+0x54>
  23511c:	ldr	x0, [x23, #8]
  235120:	ldr	x4, [x29, #24]
  235124:	mov	w1, w21
  235128:	mov	w2, w20
  23512c:	mov	w3, w19
  235130:	bl	23df98 <apply_static_dev_perms>
  235134:	tbz	w0, #31, 2350e4 <udev_rule_line_apply_static_dev_perms+0x54>
  235138:	b	2351a0 <udev_rule_line_apply_static_dev_perms+0x110>
  23513c:	ldr	x1, [x23, #8]
  235140:	add	x0, x29, #0x18
  235144:	bl	254460 <strv_extend@plt>
  235148:	tbz	w0, #31, 2350e4 <udev_rule_line_apply_static_dev_perms+0x54>
  23514c:	b	235184 <udev_rule_line_apply_static_dev_perms+0xf4>
  235150:	ldr	w8, [x23, #16]
  235154:	sub	w20, w8, #0x1
  235158:	b	2350e4 <udev_rule_line_apply_static_dev_perms+0x54>
  23515c:	mov	w22, wzr
  235160:	add	x0, x29, #0x18
  235164:	bl	23499c <strv_freep>
  235168:	mov	w0, w22
  23516c:	ldp	x20, x19, [sp, #64]
  235170:	ldp	x22, x21, [sp, #48]
  235174:	ldp	x24, x23, [sp, #32]
  235178:	ldr	x25, [sp, #16]
  23517c:	ldp	x29, x30, [sp], #80
  235180:	ret
  235184:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  235188:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  23518c:	add	x1, x1, #0x63
  235190:	add	x3, x3, #0xbed
  235194:	mov	w0, #0x1                   	// #1
  235198:	mov	w2, #0x940                 	// #2368
  23519c:	bl	2537c0 <log_oom_internal@plt>
  2351a0:	mov	w22, w0
  2351a4:	b	235160 <udev_rule_line_apply_static_dev_perms+0xd0>
  2351a8:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2351ac:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2351b0:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2351b4:	add	x1, x1, #0x84e
  2351b8:	add	x2, x2, #0x63
  2351bc:	add	x4, x4, #0x6c9
  2351c0:	mov	w0, #0x1                   	// #1
  2351c4:	mov	w3, #0x931                 	// #2353
  2351c8:	bl	253740 <log_assert_failed_realm@plt>

00000000002351cc <udev_rule_line_free>:
  2351cc:	stp	x29, x30, [sp, #-32]!
  2351d0:	str	x19, [sp, #16]
  2351d4:	mov	x29, sp
  2351d8:	cbz	x0, 23524c <udev_rule_line_free+0x80>
  2351dc:	mov	x19, x0
  2351e0:	bl	23527c <udev_rule_line_clear_tokens>
  2351e4:	ldr	x9, [x19, #40]
  2351e8:	cbz	x9, 23523c <udev_rule_line_free+0x70>
  2351ec:	ldr	x8, [x9, #8]
  2351f0:	cmp	x8, x19
  2351f4:	b.ne	235200 <udev_rule_line_free+0x34>  // b.any
  2351f8:	ldr	x8, [x19, #72]
  2351fc:	str	x8, [x9, #8]
  235200:	mov	x8, x19
  235204:	ldr	x10, [x8, #64]!
  235208:	cbz	x10, 235214 <udev_rule_line_free+0x48>
  23520c:	ldr	x11, [x19, #72]
  235210:	str	x11, [x10, #72]
  235214:	ldr	x10, [x19, #72]
  235218:	cbz	x10, 235224 <udev_rule_line_free+0x58>
  23521c:	add	x9, x10, #0x40
  235220:	b	235230 <udev_rule_line_free+0x64>
  235224:	ldr	x10, [x9, #16]!
  235228:	cmp	x10, x19
  23522c:	b.ne	235258 <udev_rule_line_free+0x8c>  // b.any
  235230:	ldr	x10, [x8]
  235234:	str	x10, [x9]
  235238:	stp	xzr, xzr, [x8]
  23523c:	ldr	x0, [x19]
  235240:	bl	2536e0 <free@plt>
  235244:	mov	x0, x19
  235248:	bl	2536e0 <free@plt>
  23524c:	ldr	x19, [sp, #16]
  235250:	ldp	x29, x30, [sp], #32
  235254:	ret
  235258:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  23525c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235260:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  235264:	add	x1, x1, #0xd67
  235268:	add	x2, x2, #0x63
  23526c:	add	x4, x4, #0x5d5
  235270:	mov	w0, #0x1                   	// #1
  235274:	mov	w3, #0x111                 	// #273
  235278:	bl	253740 <log_assert_failed_realm@plt>

000000000023527c <udev_rule_line_clear_tokens>:
  23527c:	stp	x29, x30, [sp, #-32]!
  235280:	stp	x20, x19, [sp, #16]
  235284:	mov	x29, sp
  235288:	cbz	x0, 2352b8 <udev_rule_line_clear_tokens+0x3c>
  23528c:	mov	x19, x0
  235290:	ldr	x0, [x0, #56]
  235294:	cbz	x0, 2352a8 <udev_rule_line_clear_tokens+0x2c>
  235298:	ldr	x20, [x0, #24]
  23529c:	bl	2352dc <udev_rule_token_free>
  2352a0:	mov	x0, x20
  2352a4:	cbnz	x20, 235298 <udev_rule_line_clear_tokens+0x1c>
  2352a8:	str	xzr, [x19, #56]
  2352ac:	ldp	x20, x19, [sp, #16]
  2352b0:	ldp	x29, x30, [sp], #32
  2352b4:	ret
  2352b8:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2352bc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2352c0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  2352c4:	add	x1, x1, #0x84e
  2352c8:	add	x2, x2, #0x63
  2352cc:	add	x4, x4, #0xb9f
  2352d0:	mov	w0, #0x1                   	// #1
  2352d4:	mov	w3, #0xff                  	// #255
  2352d8:	bl	253740 <log_assert_failed_realm@plt>

00000000002352dc <udev_rule_token_free>:
  2352dc:	stp	x29, x30, [sp, #-16]!
  2352e0:	mov	x29, sp
  2352e4:	bl	2536e0 <free@plt>
  2352e8:	ldp	x29, x30, [sp], #16
  2352ec:	ret

00000000002352f0 <size_multiply_overflow>:
  2352f0:	mov	w0, wzr
  2352f4:	ret

00000000002352f8 <freep>:
  2352f8:	stp	x29, x30, [sp, #-16]!
  2352fc:	ldr	x0, [x0]
  235300:	mov	x29, sp
  235304:	bl	2536e0 <free@plt>
  235308:	ldp	x29, x30, [sp], #16
  23530c:	ret

0000000000235310 <fclosep>:
  235310:	stp	x29, x30, [sp, #-16]!
  235314:	ldr	x0, [x0]
  235318:	mov	x29, sp
  23531c:	bl	254470 <safe_fclose@plt>
  235320:	ldp	x29, x30, [sp], #16
  235324:	ret

0000000000235328 <read_line>:
  235328:	stp	x29, x30, [sp, #-16]!
  23532c:	mov	x3, x2
  235330:	mov	w2, wzr
  235334:	mov	x29, sp
  235338:	bl	254480 <read_line_full@plt>
  23533c:	ldp	x29, x30, [sp], #16
  235340:	ret

0000000000235344 <skip_leading_chars>:
  235344:	cbz	x0, 235378 <skip_leading_chars+0x34>
  235348:	stp	x29, x30, [sp, #-32]!
  23534c:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  235350:	add	x8, x8, #0x33a
  235354:	cmp	x1, #0x0
  235358:	csel	x1, x8, x1, eq  // eq = none
  23535c:	str	x19, [sp, #16]
  235360:	mov	x29, sp
  235364:	mov	x19, x0
  235368:	bl	254230 <strspn@plt>
  23536c:	add	x0, x19, x0
  235370:	ldr	x19, [sp, #16]
  235374:	ldp	x29, x30, [sp], #32
  235378:	ret

000000000023537c <rule_add_line>:
  23537c:	sub	sp, sp, #0xa0
  235380:	stp	x29, x30, [sp, #96]
  235384:	add	x29, sp, #0x60
  235388:	stp	x24, x23, [sp, #112]
  23538c:	stp	x22, x21, [sp, #128]
  235390:	stp	x20, x19, [sp, #144]
  235394:	stp	xzr, xzr, [x29, #-16]
  235398:	cbz	x0, 235684 <rule_add_line+0x308>
  23539c:	ldr	x22, [x0, #32]
  2353a0:	mov	x19, x0
  2353a4:	cbz	x22, 2356a8 <rule_add_line+0x32c>
  2353a8:	mov	x21, x1
  2353ac:	cbz	x1, 2356cc <rule_add_line+0x350>
  2353b0:	mov	x0, x21
  2353b4:	mov	w20, w2
  2353b8:	bl	2358dc <isempty>
  2353bc:	tbnz	w0, #0, 23565c <rule_add_line+0x2e0>
  2353c0:	mov	x0, x21
  2353c4:	bl	253ab0 <strdup@plt>
  2353c8:	stur	x0, [x29, #-16]
  2353cc:	cbz	x0, 235528 <rule_add_line+0x1ac>
  2353d0:	mov	w0, #0x50                  	// #80
  2353d4:	bl	2349b8 <malloc_multiply>
  2353d8:	stur	x0, [x29, #-8]
  2353dc:	cbz	x0, 235548 <rule_add_line+0x1cc>
  2353e0:	ldur	x8, [x29, #-16]
  2353e4:	movi	v0.2d, #0x0
  2353e8:	stur	xzr, [x29, #-16]
  2353ec:	str	w20, [x0, #8]
  2353f0:	stur	xzr, [x0, #12]
  2353f4:	stur	xzr, [x0, #28]
  2353f8:	stur	xzr, [x0, #20]
  2353fc:	str	wzr, [x0, #36]
  235400:	str	x22, [x0, #40]
  235404:	str	x8, [x0]
  235408:	stp	q0, q0, [x0, #48]
  23540c:	ldr	x8, [x22, #8]
  235410:	cbz	x8, 235588 <rule_add_line+0x20c>
  235414:	mov	x9, x8
  235418:	ldr	x8, [x8, #64]
  23541c:	cbnz	x8, 235414 <rule_add_line+0x98>
  235420:	ldur	x10, [x29, #-8]
  235424:	cbz	x10, 2356f0 <rule_add_line+0x374>
  235428:	str	x8, [x10, #64]
  23542c:	str	x9, [x10, #72]
  235430:	str	x10, [x9, #64]
  235434:	ldur	x8, [x29, #-8]
  235438:	adrp	x23, 20e000 <worker_hash_op+0x3ad0>
  23543c:	adrp	x20, 210000 <worker_hash_op+0x5ad0>
  235440:	adrp	x21, 20c000 <worker_hash_op+0x1ad0>
  235444:	str	x8, [x22, #8]
  235448:	ldr	x8, [x8]
  23544c:	add	x23, x23, #0x20c
  235450:	add	x20, x20, #0x63
  235454:	add	x21, x21, #0x6e6
  235458:	stur	x8, [x29, #-24]
  23545c:	b	23547c <rule_add_line+0x100>
  235460:	ldp	x2, x1, [x29, #-40]
  235464:	ldr	w3, [sp, #44]
  235468:	ldr	x4, [sp, #48]
  23546c:	mov	x0, x19
  235470:	bl	235b94 <parse_token>
  235474:	lsr	w8, w0, #31
  235478:	cbnz	w8, 235568 <rule_add_line+0x1ec>
  23547c:	ldur	x0, [x29, #-24]
  235480:	bl	2358dc <isempty>
  235484:	tbnz	w0, #0, 235570 <rule_add_line+0x1f4>
  235488:	sub	x0, x29, #0x18
  23548c:	sub	x1, x29, #0x20
  235490:	sub	x2, x29, #0x28
  235494:	add	x3, sp, #0x2c
  235498:	add	x4, sp, #0x30
  23549c:	bl	2358f8 <parse_line>
  2354a0:	mov	w22, w0
  2354a4:	tbnz	w0, #31, 2354b4 <rule_add_line+0x138>
  2354a8:	cbnz	w22, 235460 <rule_add_line+0xe4>
  2354ac:	mov	w8, #0x1c                  	// #28
  2354b0:	b	235478 <rule_add_line+0xfc>
  2354b4:	ldr	x8, [x19, #32]
  2354b8:	cbz	x8, 2354d8 <rule_add_line+0x15c>
  2354bc:	ldr	x24, [x8, #8]
  2354c0:	cbz	x8, 2354e0 <rule_add_line+0x164>
  2354c4:	ldr	x0, [x8]
  2354c8:	bl	235b80 <strna>
  2354cc:	cbz	x24, 2354ec <rule_add_line+0x170>
  2354d0:	ldr	w8, [x24, #8]
  2354d4:	b	2354f0 <rule_add_line+0x174>
  2354d8:	mov	x24, xzr
  2354dc:	cbnz	x8, 2354c4 <rule_add_line+0x148>
  2354e0:	mov	x0, xzr
  2354e4:	bl	235b80 <strna>
  2354e8:	cbnz	x24, 2354d0 <rule_add_line+0x154>
  2354ec:	mov	w8, wzr
  2354f0:	stp	x23, x0, [sp, #8]
  2354f4:	mov	w0, #0x3                   	// #3
  2354f8:	mov	w3, #0x462                 	// #1122
  2354fc:	mov	w1, w22
  235500:	mov	x2, x20
  235504:	mov	x4, x21
  235508:	mov	x5, xzr
  23550c:	mov	x6, xzr
  235510:	mov	x7, xzr
  235514:	str	w8, [sp, #24]
  235518:	str	xzr, [sp]
  23551c:	bl	2539f0 <log_object_internal@plt>
  235520:	mov	w8, #0x1                   	// #1
  235524:	b	235478 <rule_add_line+0xfc>
  235528:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23552c:	adrp	x3, 20c000 <worker_hash_op+0x1ad0>
  235530:	add	x1, x1, #0x63
  235534:	add	x3, x3, #0x6e6
  235538:	mov	w0, #0x1                   	// #1
  23553c:	mov	w2, #0x449                 	// #1097
  235540:	bl	2537c0 <log_oom_internal@plt>
  235544:	b	23565c <rule_add_line+0x2e0>
  235548:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23554c:	adrp	x3, 20c000 <worker_hash_op+0x1ad0>
  235550:	add	x1, x1, #0x63
  235554:	add	x3, x3, #0x6e6
  235558:	mov	w0, #0x1                   	// #1
  23555c:	mov	w2, #0x44d                 	// #1101
  235560:	bl	2537c0 <log_oom_internal@plt>
  235564:	b	23565c <rule_add_line+0x2e0>
  235568:	cmp	w8, #0x1c
  23556c:	b.ne	23565c <rule_add_line+0x2e0>  // b.any
  235570:	ldur	x0, [x29, #-8]
  235574:	ldr	w8, [x0, #12]
  235578:	cbz	w8, 2355a4 <rule_add_line+0x228>
  23557c:	bl	238eb4 <sort_tokens>
  235580:	stur	xzr, [x29, #-8]
  235584:	b	23565c <rule_add_line+0x2e0>
  235588:	ldr	x8, [x22, #16]
  23558c:	cbz	x8, 2355c8 <rule_add_line+0x24c>
  235590:	mov	x10, x8
  235594:	mov	x9, x10
  235598:	ldr	x10, [x10, #64]
  23559c:	cbnz	x10, 235594 <rule_add_line+0x218>
  2355a0:	b	2355cc <rule_add_line+0x250>
  2355a4:	ldr	x8, [x19, #32]
  2355a8:	cbz	x8, 235604 <rule_add_line+0x288>
  2355ac:	ldr	x19, [x8, #8]
  2355b0:	cbz	x8, 23560c <rule_add_line+0x290>
  2355b4:	ldr	x0, [x8]
  2355b8:	bl	235b80 <strna>
  2355bc:	cbz	x19, 235618 <rule_add_line+0x29c>
  2355c0:	ldr	w8, [x19, #8]
  2355c4:	b	23561c <rule_add_line+0x2a0>
  2355c8:	mov	x9, xzr
  2355cc:	ldur	x10, [x29, #-8]
  2355d0:	cbz	x10, 235714 <rule_add_line+0x398>
  2355d4:	cbz	x9, 2355ec <rule_add_line+0x270>
  2355d8:	ldr	x8, [x9, #64]
  2355dc:	str	x8, [x10, #64]
  2355e0:	cbz	x8, 23542c <rule_add_line+0xb0>
  2355e4:	str	x10, [x8, #72]
  2355e8:	b	23542c <rule_add_line+0xb0>
  2355ec:	str	x8, [x10, #64]
  2355f0:	cbz	x8, 2355f8 <rule_add_line+0x27c>
  2355f4:	str	x10, [x8, #72]
  2355f8:	str	xzr, [x10, #72]
  2355fc:	str	x10, [x22, #16]
  235600:	b	235434 <rule_add_line+0xb8>
  235604:	mov	x19, xzr
  235608:	cbnz	x8, 2355b4 <rule_add_line+0x238>
  23560c:	mov	x0, xzr
  235610:	bl	235b80 <strna>
  235614:	cbnz	x19, 2355c0 <rule_add_line+0x244>
  235618:	mov	w8, wzr
  23561c:	str	w8, [sp, #24]
  235620:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  235624:	add	x8, x8, #0x958
  235628:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23562c:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  235630:	add	x2, x2, #0x63
  235634:	add	x4, x4, #0x6e6
  235638:	stp	x8, x0, [sp, #8]
  23563c:	mov	w0, #0x4                   	// #4
  235640:	mov	w3, #0x46c                 	// #1132
  235644:	mov	w1, wzr
  235648:	mov	x5, xzr
  23564c:	mov	x6, xzr
  235650:	mov	x7, xzr
  235654:	str	xzr, [sp]
  235658:	bl	2539f0 <log_object_internal@plt>
  23565c:	sub	x0, x29, #0x10
  235660:	bl	2352f8 <freep>
  235664:	sub	x0, x29, #0x8
  235668:	bl	2358c0 <udev_rule_line_freep>
  23566c:	ldp	x20, x19, [sp, #144]
  235670:	ldp	x22, x21, [sp, #128]
  235674:	ldp	x24, x23, [sp, #112]
  235678:	ldp	x29, x30, [sp, #96]
  23567c:	add	sp, sp, #0xa0
  235680:	ret
  235684:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  235688:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23568c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  235690:	add	x1, x1, #0x5c9
  235694:	add	x2, x2, #0x63
  235698:	add	x4, x4, #0x8a3
  23569c:	mov	w0, #0x1                   	// #1
  2356a0:	mov	w3, #0x43e                 	// #1086
  2356a4:	bl	253740 <log_assert_failed_realm@plt>
  2356a8:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  2356ac:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2356b0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  2356b4:	add	x1, x1, #0xf7f
  2356b8:	add	x2, x2, #0x63
  2356bc:	add	x4, x4, #0x8a3
  2356c0:	mov	w0, #0x1                   	// #1
  2356c4:	mov	w3, #0x43f                 	// #1087
  2356c8:	bl	253740 <log_assert_failed_realm@plt>
  2356cc:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2356d0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2356d4:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  2356d8:	add	x1, x1, #0xea9
  2356dc:	add	x2, x2, #0x63
  2356e0:	add	x4, x4, #0x8a3
  2356e4:	mov	w0, #0x1                   	// #1
  2356e8:	mov	w3, #0x440                 	// #1088
  2356ec:	bl	253740 <log_assert_failed_realm@plt>
  2356f0:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  2356f4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2356f8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  2356fc:	add	x1, x1, #0xaab
  235700:	add	x2, x2, #0x63
  235704:	add	x4, x4, #0x8a3
  235708:	mov	w0, #0x1                   	// #1
  23570c:	mov	w3, #0x456                 	// #1110
  235710:	bl	253740 <log_assert_failed_realm@plt>
  235714:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  235718:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23571c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  235720:	add	x1, x1, #0xaab
  235724:	add	x2, x2, #0x63
  235728:	add	x4, x4, #0x8a3
  23572c:	mov	w0, #0x1                   	// #1
  235730:	mov	w3, #0x458                 	// #1112
  235734:	bl	253740 <log_assert_failed_realm@plt>

0000000000235738 <rule_resolve_goto>:
  235738:	sub	sp, sp, #0x70
  23573c:	stp	x29, x30, [sp, #16]
  235740:	str	x27, [sp, #32]
  235744:	stp	x26, x25, [sp, #48]
  235748:	stp	x24, x23, [sp, #64]
  23574c:	stp	x22, x21, [sp, #80]
  235750:	stp	x20, x19, [sp, #96]
  235754:	add	x29, sp, #0x10
  235758:	cbz	x0, 23589c <rule_resolve_goto+0x164>
  23575c:	ldr	x26, [x0, #16]
  235760:	mov	x19, x0
  235764:	cbz	x26, 23587c <rule_resolve_goto+0x144>
  235768:	adrp	x20, 210000 <worker_hash_op+0x5ad0>
  23576c:	adrp	x21, 20f000 <worker_hash_op+0x4ad0>
  235770:	adrp	x22, 212000 <worker_hash_op+0x7ad0>
  235774:	adrp	x23, 20f000 <worker_hash_op+0x4ad0>
  235778:	add	x20, x20, #0x63
  23577c:	add	x21, x21, #0x683
  235780:	add	x22, x22, #0xb17
  235784:	add	x23, x23, #0x695
  235788:	b	23579c <rule_resolve_goto+0x64>
  23578c:	str	x27, [x24, #32]
  235790:	ldr	x8, [x24, #32]
  235794:	cbz	x8, 2357d4 <rule_resolve_goto+0x9c>
  235798:	cbz	x26, 23587c <rule_resolve_goto+0x144>
  23579c:	mov	x24, x26
  2357a0:	ldrb	w8, [x26, #12]
  2357a4:	ldr	x26, [x26, #64]
  2357a8:	tbz	w8, #3, 235798 <rule_resolve_goto+0x60>
  2357ac:	cbz	x26, 235790 <rule_resolve_goto+0x58>
  2357b0:	ldr	x25, [x24, #24]
  2357b4:	mov	x27, x26
  2357b8:	ldr	x0, [x27, #16]
  2357bc:	mov	x1, x25
  2357c0:	bl	239dfc <streq_ptr>
  2357c4:	tbnz	w0, #0, 23578c <rule_resolve_goto+0x54>
  2357c8:	ldr	x27, [x27, #64]
  2357cc:	cbnz	x27, 2357b8 <rule_resolve_goto+0x80>
  2357d0:	b	235790 <rule_resolve_goto+0x58>
  2357d4:	mov	w0, #0x1                   	// #1
  2357d8:	bl	2535b0 <log_get_max_level_realm@plt>
  2357dc:	cmp	w0, #0x3
  2357e0:	b.lt	235810 <rule_resolve_goto+0xd8>  // b.tstop
  2357e4:	ldr	x6, [x19]
  2357e8:	ldr	w7, [x24, #8]
  2357ec:	ldr	x8, [x24, #24]
  2357f0:	mov	w0, #0x403                 	// #1027
  2357f4:	mov	w3, #0x487                 	// #1159
  2357f8:	mov	w1, wzr
  2357fc:	mov	x2, x20
  235800:	mov	x4, x21
  235804:	mov	x5, x22
  235808:	str	x8, [sp]
  23580c:	bl	2535c0 <log_internal_realm@plt>
  235810:	ldr	w8, [x24, #12]
  235814:	str	xzr, [x24, #24]
  235818:	and	w9, w8, #0xfffffff7
  23581c:	tst	w8, #0xffffffe7
  235820:	str	w9, [x24, #12]
  235824:	b.ne	235798 <rule_resolve_goto+0x60>  // b.any
  235828:	mov	w0, #0x1                   	// #1
  23582c:	bl	2535b0 <log_get_max_level_realm@plt>
  235830:	cmp	w0, #0x5
  235834:	b.lt	23585c <rule_resolve_goto+0x124>  // b.tstop
  235838:	ldr	x6, [x19]
  23583c:	ldr	w7, [x24, #8]
  235840:	mov	w0, #0x405                 	// #1029
  235844:	mov	w3, #0x48e                 	// #1166
  235848:	mov	w1, wzr
  23584c:	mov	x2, x20
  235850:	mov	x4, x21
  235854:	mov	x5, x23
  235858:	bl	2535c0 <log_internal_realm@plt>
  23585c:	ldr	w8, [x24, #12]
  235860:	mov	x0, x24
  235864:	cmp	w8, #0x10
  235868:	b.ne	235874 <rule_resolve_goto+0x13c>  // b.any
  23586c:	bl	23527c <udev_rule_line_clear_tokens>
  235870:	b	235798 <rule_resolve_goto+0x60>
  235874:	bl	2351cc <udev_rule_line_free>
  235878:	b	235798 <rule_resolve_goto+0x60>
  23587c:	ldp	x20, x19, [sp, #96]
  235880:	ldp	x22, x21, [sp, #80]
  235884:	ldp	x24, x23, [sp, #64]
  235888:	ldp	x26, x25, [sp, #48]
  23588c:	ldr	x27, [sp, #32]
  235890:	ldp	x29, x30, [sp, #16]
  235894:	add	sp, sp, #0x70
  235898:	ret
  23589c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2358a0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2358a4:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  2358a8:	add	x1, x1, #0xd69
  2358ac:	add	x2, x2, #0x63
  2358b0:	add	x4, x4, #0x656
  2358b4:	mov	w0, #0x1                   	// #1
  2358b8:	mov	w3, #0x478                 	// #1144
  2358bc:	bl	253740 <log_assert_failed_realm@plt>

00000000002358c0 <udev_rule_line_freep>:
  2358c0:	stp	x29, x30, [sp, #-16]!
  2358c4:	ldr	x0, [x0]
  2358c8:	mov	x29, sp
  2358cc:	cbz	x0, 2358d4 <udev_rule_line_freep+0x14>
  2358d0:	bl	2351cc <udev_rule_line_free>
  2358d4:	ldp	x29, x30, [sp], #16
  2358d8:	ret

00000000002358dc <isempty>:
  2358dc:	cbz	x0, 2358f0 <isempty+0x14>
  2358e0:	ldrb	w8, [x0]
  2358e4:	cmp	w8, #0x0
  2358e8:	cset	w0, eq  // eq = none
  2358ec:	ret
  2358f0:	mov	w0, #0x1                   	// #1
  2358f4:	ret

00000000002358f8 <parse_line>:
  2358f8:	sub	sp, sp, #0x70
  2358fc:	stp	x29, x30, [sp, #16]
  235900:	stp	x28, x27, [sp, #32]
  235904:	stp	x26, x25, [sp, #48]
  235908:	stp	x24, x23, [sp, #64]
  23590c:	stp	x22, x21, [sp, #80]
  235910:	stp	x20, x19, [sp, #96]
  235914:	add	x29, sp, #0x10
  235918:	cbz	x0, 235acc <parse_line+0x1d4>
  23591c:	mov	x23, x0
  235920:	ldr	x0, [x0]
  235924:	cbz	x0, 235af0 <parse_line+0x1f8>
  235928:	mov	x22, x1
  23592c:	cbz	x1, 235b14 <parse_line+0x21c>
  235930:	mov	x20, x3
  235934:	cbz	x3, 235b38 <parse_line+0x240>
  235938:	mov	x19, x4
  23593c:	cbz	x4, 235b5c <parse_line+0x264>
  235940:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  235944:	add	x1, x1, #0x34e
  235948:	mov	x25, x2
  23594c:	bl	235344 <skip_leading_chars>
  235950:	mov	x24, x0
  235954:	bl	2358dc <isempty>
  235958:	tbz	w0, #0, 235964 <parse_line+0x6c>
  23595c:	mov	w0, wzr
  235960:	b	235aac <parse_line+0x1b4>
  235964:	ldrb	w21, [x24]
  235968:	cbz	w21, 235aa8 <parse_line+0x1b0>
  23596c:	stp	x25, x19, [sp]
  235970:	mov	x19, #0x1                   	// #1
  235974:	adrp	x26, 211000 <worker_hash_op+0x6ad0>
  235978:	movk	x19, #0x2802, lsl #32
  23597c:	add	x25, x24, #0x1
  235980:	add	x26, x26, #0x728
  235984:	mov	w28, #0x1                   	// #1
  235988:	movk	x19, #0x400, lsl #48
  23598c:	b	235998 <parse_line+0xa0>
  235990:	ldrb	w21, [x25], #1
  235994:	cbz	w21, 235aa8 <parse_line+0x1b0>
  235998:	and	w27, w21, #0xff
  23599c:	mov	w2, #0x7                   	// #7
  2359a0:	mov	x0, x26
  2359a4:	mov	w1, w27
  2359a8:	bl	254490 <memchr@plt>
  2359ac:	cbnz	x0, 2359d0 <parse_line+0xd8>
  2359b0:	cmp	w27, #0x3f
  2359b4:	b.hi	235990 <parse_line+0x98>  // b.pmore
  2359b8:	lsl	x8, x28, x21
  2359bc:	and	x8, x8, x19
  2359c0:	cbz	x8, 235990 <parse_line+0x98>
  2359c4:	ldrb	w8, [x25]
  2359c8:	cmp	w8, #0x3d
  2359cc:	b.ne	235990 <parse_line+0x98>  // b.any
  2359d0:	cmp	w27, #0x7b
  2359d4:	sub	x28, x25, #0x1
  2359d8:	b.ne	2359f4 <parse_line+0xfc>  // b.any
  2359dc:	mov	w1, #0x7d                  	// #125
  2359e0:	mov	x0, x25
  2359e4:	bl	253a60 <strchr@plt>
  2359e8:	cbz	x0, 235aa8 <parse_line+0x1b0>
  2359ec:	strb	wzr, [x0], #1
  2359f0:	b	2359fc <parse_line+0x104>
  2359f4:	mov	x25, xzr
  2359f8:	mov	x0, x28
  2359fc:	mov	x1, xzr
  235a00:	bl	235344 <skip_leading_chars>
  235a04:	mov	x27, x0
  235a08:	bl	238fc0 <parse_operator>
  235a0c:	tbnz	w0, #31, 235aa8 <parse_line+0x1b0>
  235a10:	cmp	w0, #0x4
  235a14:	mov	w8, #0x1                   	// #1
  235a18:	cinc	x8, x8, ne  // ne = any
  235a1c:	mov	w26, w0
  235a20:	add	x0, x27, x8
  235a24:	mov	x1, xzr
  235a28:	strb	wzr, [x28]
  235a2c:	bl	235344 <skip_leading_chars>
  235a30:	ldrb	w8, [x0]
  235a34:	cmp	w8, #0x22
  235a38:	b.ne	235aa8 <parse_line+0x1b0>  // b.any
  235a3c:	add	x8, x0, #0x1
  235a40:	mov	x9, x8
  235a44:	mov	x10, x8
  235a48:	b	235a64 <parse_line+0x16c>
  235a4c:	mov	x11, x9
  235a50:	ldrb	w12, [x11, #1]!
  235a54:	cmp	w12, #0x22
  235a58:	csel	x9, x11, x9, eq  // eq = none
  235a5c:	ldrb	w11, [x9], #1
  235a60:	strb	w11, [x10], #1
  235a64:	ldrb	w11, [x9]
  235a68:	cmp	w11, #0x5c
  235a6c:	b.eq	235a4c <parse_line+0x154>  // b.none
  235a70:	cbz	w11, 235aa8 <parse_line+0x1b0>
  235a74:	cmp	w11, #0x22
  235a78:	b.ne	235a5c <parse_line+0x164>  // b.any
  235a7c:	add	x9, x9, #0x1
  235a80:	strb	wzr, [x10]
  235a84:	str	x9, [x23]
  235a88:	ldr	x9, [sp]
  235a8c:	str	x24, [x22]
  235a90:	mov	w0, #0x1                   	// #1
  235a94:	str	x25, [x9]
  235a98:	ldr	x9, [sp, #8]
  235a9c:	str	w26, [x20]
  235aa0:	str	x8, [x9]
  235aa4:	b	235aac <parse_line+0x1b4>
  235aa8:	mov	w0, #0xffffffea            	// #-22
  235aac:	ldp	x20, x19, [sp, #96]
  235ab0:	ldp	x22, x21, [sp, #80]
  235ab4:	ldp	x24, x23, [sp, #64]
  235ab8:	ldp	x26, x25, [sp, #48]
  235abc:	ldp	x28, x27, [sp, #32]
  235ac0:	ldp	x29, x30, [sp, #16]
  235ac4:	add	sp, sp, #0x70
  235ac8:	ret
  235acc:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  235ad0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235ad4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  235ad8:	add	x1, x1, #0x5fe
  235adc:	add	x2, x2, #0x63
  235ae0:	add	x4, x4, #0x9cc
  235ae4:	mov	w0, #0x1                   	// #1
  235ae8:	mov	w3, #0x3e2                 	// #994
  235aec:	bl	253740 <log_assert_failed_realm@plt>
  235af0:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  235af4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235af8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  235afc:	add	x1, x1, #0xd42
  235b00:	add	x2, x2, #0x63
  235b04:	add	x4, x4, #0x9cc
  235b08:	mov	w0, #0x1                   	// #1
  235b0c:	mov	w3, #0x3e3                 	// #995
  235b10:	bl	253740 <log_assert_failed_realm@plt>
  235b14:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  235b18:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235b1c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  235b20:	add	x1, x1, #0x4cc
  235b24:	add	x2, x2, #0x63
  235b28:	add	x4, x4, #0x9cc
  235b2c:	mov	w0, #0x1                   	// #1
  235b30:	mov	w3, #0x3e4                 	// #996
  235b34:	bl	253740 <log_assert_failed_realm@plt>
  235b38:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  235b3c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235b40:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  235b44:	add	x1, x1, #0x609
  235b48:	add	x2, x2, #0x63
  235b4c:	add	x4, x4, #0x9cc
  235b50:	mov	w0, #0x1                   	// #1
  235b54:	mov	w3, #0x3e5                 	// #997
  235b58:	bl	253740 <log_assert_failed_realm@plt>
  235b5c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  235b60:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235b64:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  235b68:	add	x1, x1, #0xbd0
  235b6c:	add	x2, x2, #0x63
  235b70:	add	x4, x4, #0x9cc
  235b74:	mov	w0, #0x1                   	// #1
  235b78:	mov	w3, #0x3e6                 	// #998
  235b7c:	bl	253740 <log_assert_failed_realm@plt>

0000000000235b80 <strna>:
  235b80:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  235b84:	add	x8, x8, #0x354
  235b88:	cmp	x0, #0x0
  235b8c:	csel	x0, x8, x0, eq  // eq = none
  235b90:	ret

0000000000235b94 <parse_token>:
  235b94:	sub	sp, sp, #0x150
  235b98:	stp	x29, x30, [sp, #240]
  235b9c:	stp	x28, x27, [sp, #256]
  235ba0:	stp	x26, x25, [sp, #272]
  235ba4:	stp	x24, x23, [sp, #288]
  235ba8:	stp	x22, x21, [sp, #304]
  235bac:	stp	x20, x19, [sp, #320]
  235bb0:	add	x29, sp, #0xf0
  235bb4:	cbz	x0, 238e00 <parse_token+0x326c>
  235bb8:	mov	x26, x0
  235bbc:	ldr	x27, [x26, #32]!
  235bc0:	mov	x23, x0
  235bc4:	cbz	x27, 238e24 <parse_token+0x3290>
  235bc8:	ldr	x21, [x27, #8]
  235bcc:	cbz	x21, 238e48 <parse_token+0x32b4>
  235bd0:	mov	x19, x1
  235bd4:	cbz	x1, 238e6c <parse_token+0x32d8>
  235bd8:	mov	x20, x4
  235bdc:	cbz	x4, 238e90 <parse_token+0x32fc>
  235be0:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  235be4:	add	x1, x1, #0xbda
  235be8:	mov	x0, x19
  235bec:	mov	w22, w3
  235bf0:	mov	x24, x2
  235bf4:	bl	253bc0 <strcmp@plt>
  235bf8:	cbz	w0, 235e40 <parse_token+0x2ac>
  235bfc:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  235c00:	add	x1, x1, #0xade
  235c04:	mov	x0, x19
  235c08:	bl	253bc0 <strcmp@plt>
  235c0c:	cbz	w0, 235e64 <parse_token+0x2d0>
  235c10:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  235c14:	add	x1, x1, #0xdd0
  235c18:	mov	x0, x19
  235c1c:	bl	253bc0 <strcmp@plt>
  235c20:	cbz	w0, 235e88 <parse_token+0x2f4>
  235c24:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  235c28:	add	x1, x1, #0xeb2
  235c2c:	mov	x0, x19
  235c30:	bl	253bc0 <strcmp@plt>
  235c34:	cbz	w0, 235ec0 <parse_token+0x32c>
  235c38:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  235c3c:	add	x1, x1, #0x982
  235c40:	mov	x0, x19
  235c44:	bl	253bc0 <strcmp@plt>
  235c48:	cbz	w0, 235f64 <parse_token+0x3d0>
  235c4c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  235c50:	add	x1, x1, #0xfd5
  235c54:	mov	x0, x19
  235c58:	bl	253bc0 <strcmp@plt>
  235c5c:	cbz	w0, 235ffc <parse_token+0x468>
  235c60:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  235c64:	add	x1, x1, #0x178
  235c68:	mov	x0, x19
  235c6c:	bl	253bc0 <strcmp@plt>
  235c70:	cbz	w0, 2360e4 <parse_token+0x550>
  235c74:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  235c78:	add	x1, x1, #0x506
  235c7c:	mov	x0, x19
  235c80:	bl	253bc0 <strcmp@plt>
  235c84:	cbz	w0, 236234 <parse_token+0x6a0>
  235c88:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  235c8c:	add	x1, x1, #0x486
  235c90:	mov	x0, x19
  235c94:	bl	253bc0 <strcmp@plt>
  235c98:	cbz	w0, 2362fc <parse_token+0x768>
  235c9c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  235ca0:	add	x1, x1, #0xc07
  235ca4:	mov	x0, x19
  235ca8:	bl	253bc0 <strcmp@plt>
  235cac:	cbz	w0, 2364b8 <parse_token+0x924>
  235cb0:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  235cb4:	add	x1, x1, #0xe36
  235cb8:	mov	x0, x19
  235cbc:	bl	253bc0 <strcmp@plt>
  235cc0:	cbz	w0, 2364fc <parse_token+0x968>
  235cc4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  235cc8:	add	x1, x1, #0xbe6
  235ccc:	mov	x0, x19
  235cd0:	bl	253bc0 <strcmp@plt>
  235cd4:	cbz	w0, 236850 <parse_token+0xcbc>
  235cd8:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  235cdc:	add	x1, x1, #0xc0e
  235ce0:	mov	x0, x19
  235ce4:	bl	253bc0 <strcmp@plt>
  235ce8:	cbz	w0, 23696c <parse_token+0xdd8>
  235cec:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  235cf0:	add	x1, x1, #0x62c
  235cf4:	mov	x0, x19
  235cf8:	bl	253bc0 <strcmp@plt>
  235cfc:	cbz	w0, 236bb4 <parse_token+0x1020>
  235d00:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  235d04:	add	x1, x1, #0x371
  235d08:	mov	x0, x19
  235d0c:	bl	253bc0 <strcmp@plt>
  235d10:	cbz	w0, 236c34 <parse_token+0x10a0>
  235d14:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  235d18:	add	x1, x1, #0x725
  235d1c:	mov	x0, x19
  235d20:	bl	253bc0 <strcmp@plt>
  235d24:	cbz	w0, 236dc4 <parse_token+0x1230>
  235d28:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  235d2c:	add	x1, x1, #0xbe1
  235d30:	mov	x0, x19
  235d34:	bl	253bc0 <strcmp@plt>
  235d38:	cbz	w0, 236f2c <parse_token+0x1398>
  235d3c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  235d40:	add	x1, x1, #0x5f6
  235d44:	mov	x0, x19
  235d48:	bl	253bc0 <strcmp@plt>
  235d4c:	cbz	w0, 237028 <parse_token+0x1494>
  235d50:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  235d54:	add	x1, x1, #0xd4
  235d58:	mov	x0, x19
  235d5c:	bl	253bc0 <strcmp@plt>
  235d60:	cbz	w0, 2371d4 <parse_token+0x1640>
  235d64:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  235d68:	add	x1, x1, #0x737
  235d6c:	mov	x0, x19
  235d70:	bl	253bc0 <strcmp@plt>
  235d74:	cbz	w0, 237264 <parse_token+0x16d0>
  235d78:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  235d7c:	add	x1, x1, #0xaed
  235d80:	mov	x0, x19
  235d84:	bl	253bc0 <strcmp@plt>
  235d88:	cbz	w0, 2373a8 <parse_token+0x1814>
  235d8c:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  235d90:	add	x1, x1, #0xdc
  235d94:	mov	x0, x19
  235d98:	bl	253bc0 <strcmp@plt>
  235d9c:	cbz	w0, 237524 <parse_token+0x1990>
  235da0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  235da4:	add	x1, x1, #0x77c
  235da8:	mov	x0, x19
  235dac:	bl	253bc0 <strcmp@plt>
  235db0:	cbz	w0, 2376a0 <parse_token+0x1b0c>
  235db4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  235db8:	add	x1, x1, #0xf6b
  235dbc:	mov	x0, x19
  235dc0:	bl	253bc0 <strcmp@plt>
  235dc4:	cbz	w0, 2377a0 <parse_token+0x1c0c>
  235dc8:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  235dcc:	add	x1, x1, #0x9ab
  235dd0:	mov	x0, x19
  235dd4:	bl	253bc0 <strcmp@plt>
  235dd8:	cbz	w0, 2378ac <parse_token+0x1d18>
  235ddc:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  235de0:	add	x1, x1, #0x625
  235de4:	mov	x0, x19
  235de8:	bl	253bc0 <strcmp@plt>
  235dec:	cbz	w0, 23799c <parse_token+0x1e08>
  235df0:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  235df4:	add	x1, x1, #0x77b
  235df8:	mov	x0, x19
  235dfc:	bl	253bc0 <strcmp@plt>
  235e00:	cbz	w0, 237c2c <parse_token+0x2098>
  235e04:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  235e08:	add	x1, x1, #0xc24
  235e0c:	mov	x0, x19
  235e10:	bl	253bc0 <strcmp@plt>
  235e14:	cbz	w0, 237db8 <parse_token+0x2224>
  235e18:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  235e1c:	add	x1, x1, #0xd5d
  235e20:	mov	x0, x19
  235e24:	bl	253bc0 <strcmp@plt>
  235e28:	cbz	w0, 237ebc <parse_token+0x2328>
  235e2c:	cmp	x27, #0x0
  235e30:	csel	x20, x21, xzr, ne  // ne = any
  235e34:	cbz	x27, 2381f4 <parse_token+0x2660>
  235e38:	ldr	x0, [x27]
  235e3c:	b	2381f8 <parse_token+0x2664>
  235e40:	cbz	x24, 235eac <parse_token+0x318>
  235e44:	cmp	x27, #0x0
  235e48:	csel	x20, x21, xzr, ne  // ne = any
  235e4c:	cbz	x27, 235ee4 <parse_token+0x350>
  235e50:	ldr	x0, [x27]
  235e54:	bl	235b80 <strna>
  235e58:	cbz	x20, 235ef0 <parse_token+0x35c>
  235e5c:	ldr	w8, [x20, #8]
  235e60:	b	235ef4 <parse_token+0x360>
  235e64:	cbz	x24, 235f34 <parse_token+0x3a0>
  235e68:	cmp	x27, #0x0
  235e6c:	csel	x20, x21, xzr, ne  // ne = any
  235e70:	cbz	x27, 235f7c <parse_token+0x3e8>
  235e74:	ldr	x0, [x27]
  235e78:	bl	235b80 <strna>
  235e7c:	cbz	x20, 235f88 <parse_token+0x3f4>
  235e80:	ldr	w8, [x20, #8]
  235e84:	b	235f8c <parse_token+0x3f8>
  235e88:	cbz	x24, 235fcc <parse_token+0x438>
  235e8c:	cmp	x27, #0x0
  235e90:	csel	x20, x21, xzr, ne  // ne = any
  235e94:	cbz	x27, 236014 <parse_token+0x480>
  235e98:	ldr	x0, [x27]
  235e9c:	bl	235b80 <strna>
  235ea0:	cbz	x20, 236020 <parse_token+0x48c>
  235ea4:	ldr	w8, [x20, #8]
  235ea8:	b	236024 <parse_token+0x490>
  235eac:	cmp	w22, #0x2
  235eb0:	b.cs	235f44 <parse_token+0x3b0>  // b.hs, b.nlast
  235eb4:	mov	x0, x21
  235eb8:	mov	w1, wzr
  235ebc:	b	236330 <parse_token+0x79c>
  235ec0:	cbz	x24, 236064 <parse_token+0x4d0>
  235ec4:	cmp	x27, #0x0
  235ec8:	csel	x20, x21, xzr, ne  // ne = any
  235ecc:	cbz	x27, 236130 <parse_token+0x59c>
  235ed0:	ldr	x0, [x27]
  235ed4:	bl	235b80 <strna>
  235ed8:	cbz	x20, 23613c <parse_token+0x5a8>
  235edc:	ldr	w8, [x20, #8]
  235ee0:	b	236140 <parse_token+0x5ac>
  235ee4:	mov	x0, xzr
  235ee8:	bl	235b80 <strna>
  235eec:	cbnz	x20, 235e5c <parse_token+0x2c8>
  235ef0:	mov	w8, wzr
  235ef4:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  235ef8:	str	w8, [sp, #24]
  235efc:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  235f00:	add	x9, x9, #0x79
  235f04:	add	x8, x8, #0x358
  235f08:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235f0c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  235f10:	mov	w1, #0x16                  	// #22
  235f14:	add	x2, x2, #0x63
  235f18:	add	x4, x4, #0x166
  235f1c:	stp	x9, x19, [sp, #32]
  235f20:	stp	x8, x0, [sp, #8]
  235f24:	mov	w0, #0x3                   	// #3
  235f28:	movk	w1, #0x4000, lsl #16
  235f2c:	mov	w3, #0x226                 	// #550
  235f30:	b	238b30 <parse_token+0x2f9c>
  235f34:	cmp	w22, #0x2
  235f38:	b.cs	235fdc <parse_token+0x448>  // b.hs, b.nlast
  235f3c:	mov	w1, #0x1                   	// #1
  235f40:	b	23632c <parse_token+0x798>
  235f44:	cmp	x27, #0x0
  235f48:	csel	x20, x21, xzr, ne  // ne = any
  235f4c:	cbz	x27, 236094 <parse_token+0x500>
  235f50:	ldr	x0, [x27]
  235f54:	bl	235b80 <strna>
  235f58:	cbz	x20, 2360a0 <parse_token+0x50c>
  235f5c:	ldr	w8, [x20, #8]
  235f60:	b	2360a4 <parse_token+0x510>
  235f64:	cbz	x24, 236180 <parse_token+0x5ec>
  235f68:	cmp	x27, #0x0
  235f6c:	csel	x20, x21, xzr, ne  // ne = any
  235f70:	cbz	x27, 23624c <parse_token+0x6b8>
  235f74:	ldr	x0, [x27]
  235f78:	b	236250 <parse_token+0x6bc>
  235f7c:	mov	x0, xzr
  235f80:	bl	235b80 <strna>
  235f84:	cbnz	x20, 235e80 <parse_token+0x2ec>
  235f88:	mov	w8, wzr
  235f8c:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  235f90:	str	w8, [sp, #24]
  235f94:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  235f98:	add	x9, x9, #0x79
  235f9c:	add	x8, x8, #0x358
  235fa0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  235fa4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  235fa8:	mov	w1, #0x16                  	// #22
  235fac:	add	x2, x2, #0x63
  235fb0:	add	x4, x4, #0x166
  235fb4:	stp	x9, x19, [sp, #32]
  235fb8:	stp	x8, x0, [sp, #8]
  235fbc:	mov	w0, #0x3                   	// #3
  235fc0:	movk	w1, #0x4000, lsl #16
  235fc4:	mov	w3, #0x22d                 	// #557
  235fc8:	b	238b30 <parse_token+0x2f9c>
  235fcc:	cmp	w22, #0x2
  235fd0:	b.cs	236080 <parse_token+0x4ec>  // b.hs, b.nlast
  235fd4:	mov	w1, #0x2                   	// #2
  235fd8:	b	23632c <parse_token+0x798>
  235fdc:	cmp	x27, #0x0
  235fe0:	csel	x20, x21, xzr, ne  // ne = any
  235fe4:	cbz	x27, 2361d8 <parse_token+0x644>
  235fe8:	ldr	x0, [x27]
  235fec:	bl	235b80 <strna>
  235ff0:	cbz	x20, 2361e4 <parse_token+0x650>
  235ff4:	ldr	w8, [x20, #8]
  235ff8:	b	2361e8 <parse_token+0x654>
  235ffc:	mov	x0, x24
  236000:	bl	2358dc <isempty>
  236004:	tbz	w0, #0, 2361a8 <parse_token+0x614>
  236008:	cbz	x27, 236384 <parse_token+0x7f0>
  23600c:	ldr	x20, [x27, #8]
  236010:	b	236388 <parse_token+0x7f4>
  236014:	mov	x0, xzr
  236018:	bl	235b80 <strna>
  23601c:	cbnz	x20, 235ea4 <parse_token+0x310>
  236020:	mov	w8, wzr
  236024:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  236028:	str	w8, [sp, #24]
  23602c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236030:	add	x9, x9, #0x79
  236034:	add	x8, x8, #0x358
  236038:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23603c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236040:	mov	w1, #0x16                  	// #22
  236044:	add	x2, x2, #0x63
  236048:	add	x4, x4, #0x166
  23604c:	stp	x9, x19, [sp, #32]
  236050:	stp	x8, x0, [sp, #8]
  236054:	mov	w0, #0x3                   	// #3
  236058:	movk	w1, #0x4000, lsl #16
  23605c:	mov	w3, #0x234                 	// #564
  236060:	b	238b30 <parse_token+0x2f9c>
  236064:	cmp	w22, #0x3
  236068:	b.ne	2361c8 <parse_token+0x634>  // b.any
  23606c:	cmp	x27, #0x0
  236070:	csel	x20, x21, xzr, ne  // ne = any
  236074:	cbz	x27, 2363ec <parse_token+0x858>
  236078:	ldr	x0, [x27]
  23607c:	b	2363f0 <parse_token+0x85c>
  236080:	cmp	x27, #0x0
  236084:	csel	x20, x21, xzr, ne  // ne = any
  236088:	cbz	x27, 2362a4 <parse_token+0x710>
  23608c:	ldr	x0, [x27]
  236090:	b	2362a8 <parse_token+0x714>
  236094:	mov	x0, xzr
  236098:	bl	235b80 <strna>
  23609c:	cbnz	x20, 235f5c <parse_token+0x3c8>
  2360a0:	mov	w8, wzr
  2360a4:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2360a8:	str	w8, [sp, #24]
  2360ac:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2360b0:	add	x9, x9, #0xdc7
  2360b4:	add	x8, x8, #0x358
  2360b8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2360bc:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2360c0:	mov	w1, #0x16                  	// #22
  2360c4:	add	x2, x2, #0x63
  2360c8:	add	x4, x4, #0x166
  2360cc:	stp	x9, x19, [sp, #32]
  2360d0:	stp	x8, x0, [sp, #8]
  2360d4:	mov	w0, #0x3                   	// #3
  2360d8:	movk	w1, #0x4000, lsl #16
  2360dc:	mov	w3, #0x228                 	// #552
  2360e0:	b	238b30 <parse_token+0x2f9c>
  2360e4:	mov	x0, x24
  2360e8:	bl	2358dc <isempty>
  2360ec:	tbnz	w0, #0, 236228 <parse_token+0x694>
  2360f0:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  2360f4:	add	x8, x8, #0x408
  2360f8:	ldr	q0, [x8]
  2360fc:	ldr	x8, [x8, #16]
  236100:	add	x0, sp, #0x60
  236104:	mov	x1, x24
  236108:	str	q0, [sp, #96]
  23610c:	str	x8, [sp, #112]
  236110:	bl	2544a0 <strv_find@plt>
  236114:	cbz	x0, 236228 <parse_token+0x694>
  236118:	cmp	w22, #0x2
  23611c:	b.cs	2364f0 <parse_token+0x95c>  // b.hs, b.nlast
  236120:	mov	w1, #0x6                   	// #6
  236124:	mov	x0, x21
  236128:	mov	w2, w22
  23612c:	b	236f20 <parse_token+0x138c>
  236130:	mov	x0, xzr
  236134:	bl	235b80 <strna>
  236138:	cbnz	x20, 235edc <parse_token+0x348>
  23613c:	mov	w8, wzr
  236140:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  236144:	str	w8, [sp, #24]
  236148:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23614c:	add	x9, x9, #0x79
  236150:	add	x8, x8, #0x358
  236154:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236158:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23615c:	mov	w1, #0x16                  	// #22
  236160:	add	x2, x2, #0x63
  236164:	add	x4, x4, #0x166
  236168:	stp	x9, x19, [sp, #32]
  23616c:	stp	x8, x0, [sp, #8]
  236170:	mov	w0, #0x3                   	// #3
  236174:	movk	w1, #0x4000, lsl #16
  236178:	mov	w3, #0x23b                 	// #571
  23617c:	b	238b30 <parse_token+0x2f9c>
  236180:	cmp	w22, #0x2
  236184:	b.eq	236370 <parse_token+0x7dc>  // b.none
  236188:	cmp	w22, #0x3
  23618c:	mov	w24, w22
  236190:	b.ne	236688 <parse_token+0xaf4>  // b.any
  236194:	cmp	x27, #0x0
  236198:	csel	x20, x21, xzr, ne  // ne = any
  23619c:	cbz	x27, 2365d0 <parse_token+0xa3c>
  2361a0:	ldr	x0, [x27]
  2361a4:	b	2365d4 <parse_token+0xa40>
  2361a8:	cmp	w22, #0x5
  2361ac:	b.eq	236444 <parse_token+0x8b0>  // b.none
  2361b0:	cmp	w22, #0x3
  2361b4:	mov	w25, w22
  2361b8:	b.ne	2367cc <parse_token+0xc38>  // b.any
  2361bc:	cbz	x27, 2366d8 <parse_token+0xb44>
  2361c0:	ldr	x20, [x27, #8]
  2361c4:	b	2366dc <parse_token+0xb48>
  2361c8:	cmp	w22, #0x2
  2361cc:	b.cs	236314 <parse_token+0x780>  // b.hs, b.nlast
  2361d0:	mov	w1, #0x3                   	// #3
  2361d4:	b	23632c <parse_token+0x798>
  2361d8:	mov	x0, xzr
  2361dc:	bl	235b80 <strna>
  2361e0:	cbnz	x20, 235ff4 <parse_token+0x460>
  2361e4:	mov	w8, wzr
  2361e8:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2361ec:	str	w8, [sp, #24]
  2361f0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2361f4:	add	x9, x9, #0xdc7
  2361f8:	add	x8, x8, #0x358
  2361fc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236200:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236204:	mov	w1, #0x16                  	// #22
  236208:	add	x2, x2, #0x63
  23620c:	add	x4, x4, #0x166
  236210:	stp	x9, x19, [sp, #32]
  236214:	stp	x8, x0, [sp, #8]
  236218:	mov	w0, #0x3                   	// #3
  23621c:	movk	w1, #0x4000, lsl #16
  236220:	mov	w3, #0x22f                 	// #559
  236224:	b	238b30 <parse_token+0x2f9c>
  236228:	cbz	x27, 236450 <parse_token+0x8bc>
  23622c:	ldr	x20, [x27, #8]
  236230:	b	236454 <parse_token+0x8c0>
  236234:	cbz	x24, 2364d0 <parse_token+0x93c>
  236238:	cmp	x27, #0x0
  23623c:	csel	x20, x21, xzr, ne  // ne = any
  236240:	cbz	x27, 23653c <parse_token+0x9a8>
  236244:	ldr	x0, [x27]
  236248:	b	236540 <parse_token+0x9ac>
  23624c:	mov	x0, xzr
  236250:	bl	235b80 <strna>
  236254:	cbz	x20, 236260 <parse_token+0x6cc>
  236258:	ldr	w8, [x20, #8]
  23625c:	b	236264 <parse_token+0x6d0>
  236260:	mov	w8, wzr
  236264:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  236268:	str	w8, [sp, #24]
  23626c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236270:	add	x9, x9, #0x79
  236274:	add	x8, x8, #0x358
  236278:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23627c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236280:	mov	w1, #0x16                  	// #22
  236284:	add	x2, x2, #0x63
  236288:	add	x4, x4, #0x166
  23628c:	stp	x9, x19, [sp, #32]
  236290:	stp	x8, x0, [sp, #8]
  236294:	mov	w0, #0x3                   	// #3
  236298:	movk	w1, #0x4000, lsl #16
  23629c:	mov	w3, #0x246                 	// #582
  2362a0:	b	238b30 <parse_token+0x2f9c>
  2362a4:	mov	x0, xzr
  2362a8:	bl	235b80 <strna>
  2362ac:	cbz	x20, 2362b8 <parse_token+0x724>
  2362b0:	ldr	w8, [x20, #8]
  2362b4:	b	2362bc <parse_token+0x728>
  2362b8:	mov	w8, wzr
  2362bc:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2362c0:	str	w8, [sp, #24]
  2362c4:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2362c8:	add	x9, x9, #0xdc7
  2362cc:	add	x8, x8, #0x358
  2362d0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2362d4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2362d8:	mov	w1, #0x16                  	// #22
  2362dc:	add	x2, x2, #0x63
  2362e0:	add	x4, x4, #0x166
  2362e4:	stp	x9, x19, [sp, #32]
  2362e8:	stp	x8, x0, [sp, #8]
  2362ec:	mov	w0, #0x3                   	// #3
  2362f0:	movk	w1, #0x4000, lsl #16
  2362f4:	mov	w3, #0x236                 	// #566
  2362f8:	b	238b30 <parse_token+0x2f9c>
  2362fc:	cbz	x24, 236550 <parse_token+0x9bc>
  236300:	cmp	x27, #0x0
  236304:	csel	x20, x21, xzr, ne  // ne = any
  236308:	cbz	x27, 236890 <parse_token+0xcfc>
  23630c:	ldr	x0, [x27]
  236310:	b	236894 <parse_token+0xd00>
  236314:	mov	x0, x23
  236318:	mov	x1, x19
  23631c:	mov	x2, x20
  236320:	mov	w3, wzr
  236324:	bl	2394a4 <check_value_format_and_warn>
  236328:	mov	w1, #0x2a                  	// #42
  23632c:	mov	x0, x21
  236330:	mov	w2, w22
  236334:	mov	x3, x20
  236338:	mov	x4, xzr
  23633c:	bl	2390f8 <rule_line_add_token>
  236340:	mov	w19, w0
  236344:	tbnz	w19, #31, 236350 <parse_token+0x7bc>
  236348:	mov	w0, #0x1                   	// #1
  23634c:	b	238b44 <parse_token+0x2fb0>
  236350:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  236354:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  236358:	add	x1, x1, #0x63
  23635c:	add	x3, x3, #0x166
  236360:	mov	w0, #0x1                   	// #1
  236364:	mov	w2, #0x3c6                 	// #966
  236368:	bl	2537c0 <log_oom_internal@plt>
  23636c:	b	238b44 <parse_token+0x2fb0>
  236370:	cmp	x27, #0x0
  236374:	csel	x24, x21, xzr, ne  // ne = any
  236378:	cbz	x27, 236628 <parse_token+0xa94>
  23637c:	ldr	x0, [x27]
  236380:	b	23662c <parse_token+0xa98>
  236384:	mov	x20, xzr
  236388:	cbz	x27, 236394 <parse_token+0x800>
  23638c:	ldr	x0, [x27]
  236390:	b	236398 <parse_token+0x804>
  236394:	mov	x0, xzr
  236398:	bl	235b80 <strna>
  23639c:	cbz	x20, 2363a8 <parse_token+0x814>
  2363a0:	ldr	w8, [x20, #8]
  2363a4:	b	2363ac <parse_token+0x818>
  2363a8:	mov	w8, wzr
  2363ac:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2363b0:	str	w8, [sp, #24]
  2363b4:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2363b8:	add	x9, x9, #0x79
  2363bc:	add	x8, x8, #0x358
  2363c0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2363c4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2363c8:	mov	w1, #0x16                  	// #22
  2363cc:	add	x2, x2, #0x63
  2363d0:	add	x4, x4, #0x166
  2363d4:	stp	x9, x19, [sp, #32]
  2363d8:	stp	x8, x0, [sp, #8]
  2363dc:	mov	w0, #0x3                   	// #3
  2363e0:	movk	w1, #0x4000, lsl #16
  2363e4:	mov	w3, #0x25c                 	// #604
  2363e8:	b	238b30 <parse_token+0x2f9c>
  2363ec:	mov	x0, xzr
  2363f0:	bl	235b80 <strna>
  2363f4:	cbz	x20, 236400 <parse_token+0x86c>
  2363f8:	ldr	w8, [x20, #8]
  2363fc:	b	236404 <parse_token+0x870>
  236400:	mov	w8, wzr
  236404:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  236408:	str	w8, [sp, #24]
  23640c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236410:	add	x9, x9, #0xdc7
  236414:	add	x8, x8, #0x358
  236418:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23641c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236420:	mov	w1, #0x16                  	// #22
  236424:	add	x2, x2, #0x63
  236428:	add	x4, x4, #0x166
  23642c:	stp	x9, x19, [sp, #32]
  236430:	stp	x8, x0, [sp, #8]
  236434:	mov	w0, #0x3                   	// #3
  236438:	movk	w1, #0x4000, lsl #16
  23643c:	mov	w3, #0x23d                 	// #573
  236440:	b	238b30 <parse_token+0x2f9c>
  236444:	cbz	x27, 236740 <parse_token+0xbac>
  236448:	ldr	x25, [x27, #8]
  23644c:	b	236744 <parse_token+0xbb0>
  236450:	mov	x20, xzr
  236454:	cbz	x27, 236460 <parse_token+0x8cc>
  236458:	ldr	x0, [x27]
  23645c:	b	236464 <parse_token+0x8d0>
  236460:	mov	x0, xzr
  236464:	bl	235b80 <strna>
  236468:	cbz	x20, 236474 <parse_token+0x8e0>
  23646c:	ldr	w8, [x20, #8]
  236470:	b	236478 <parse_token+0x8e4>
  236474:	mov	w8, wzr
  236478:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  23647c:	str	w8, [sp, #24]
  236480:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236484:	add	x9, x9, #0x79
  236488:	add	x8, x8, #0x358
  23648c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236490:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236494:	mov	w1, #0x16                  	// #22
  236498:	add	x2, x2, #0x63
  23649c:	add	x4, x4, #0x166
  2364a0:	stp	x9, x19, [sp, #32]
  2364a4:	stp	x8, x0, [sp, #8]
  2364a8:	mov	w0, #0x3                   	// #3
  2364ac:	movk	w1, #0x4000, lsl #16
  2364b0:	mov	w3, #0x272                 	// #626
  2364b4:	b	238b30 <parse_token+0x2f9c>
  2364b8:	cbz	x24, 2368a4 <parse_token+0xd10>
  2364bc:	cmp	x27, #0x0
  2364c0:	csel	x20, x21, xzr, ne  // ne = any
  2364c4:	cbz	x27, 2369ec <parse_token+0xe58>
  2364c8:	ldr	x0, [x27]
  2364cc:	b	2369f0 <parse_token+0xe5c>
  2364d0:	cmp	w22, #0x5
  2364d4:	mov	w24, w22
  2364d8:	b.ne	236b24 <parse_token+0xf90>  // b.any
  2364dc:	cmp	x27, #0x0
  2364e0:	csel	x24, x21, xzr, ne  // ne = any
  2364e4:	cbz	x27, 236ac4 <parse_token+0xf30>
  2364e8:	ldr	x0, [x27]
  2364ec:	b	236ac8 <parse_token+0xf34>
  2364f0:	cbz	x27, 236984 <parse_token+0xdf0>
  2364f4:	ldr	x20, [x27, #8]
  2364f8:	b	236988 <parse_token+0xdf4>
  2364fc:	mov	x0, x23
  236500:	mov	x1, x19
  236504:	mov	x2, x24
  236508:	bl	239628 <check_attr_format_and_warn>
  23650c:	tbnz	w0, #31, 238b44 <parse_token+0x2fb0>
  236510:	cmp	w22, #0x2
  236514:	b.eq	236a44 <parse_token+0xeb0>  // b.none
  236518:	cmp	w22, #0x5
  23651c:	b.eq	236a44 <parse_token+0xeb0>  // b.none
  236520:	cmp	w22, #0x3
  236524:	mov	w25, w22
  236528:	b.ne	236ccc <parse_token+0x1138>  // b.any
  23652c:	ldr	x8, [x26]
  236530:	cbz	x8, 236f44 <parse_token+0x13b0>
  236534:	ldr	x20, [x8, #8]
  236538:	b	236f48 <parse_token+0x13b4>
  23653c:	mov	x0, xzr
  236540:	bl	235b80 <strna>
  236544:	cbz	x20, 23658c <parse_token+0x9f8>
  236548:	ldr	w8, [x20, #8]
  23654c:	b	236590 <parse_token+0x9fc>
  236550:	cmp	w22, #0x2
  236554:	b.cs	2368f8 <parse_token+0xd64>  // b.hs, b.nlast
  236558:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  23655c:	add	x8, x8, #0x420
  236560:	ldr	q0, [x8]
  236564:	ldr	x8, [x8, #16]
  236568:	add	x0, sp, #0x40
  23656c:	mov	x1, x20
  236570:	str	q0, [sp, #64]
  236574:	str	x8, [sp, #80]
  236578:	bl	2544a0 <strv_find@plt>
  23657c:	cbz	x0, 236dbc <parse_token+0x1228>
  236580:	cbz	x27, 236cf8 <parse_token+0x1164>
  236584:	ldr	x19, [x27, #8]
  236588:	b	236cfc <parse_token+0x1168>
  23658c:	mov	w8, wzr
  236590:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  236594:	str	w8, [sp, #24]
  236598:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23659c:	add	x9, x9, #0x79
  2365a0:	add	x8, x8, #0x358
  2365a4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2365a8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2365ac:	mov	w1, #0x16                  	// #22
  2365b0:	add	x2, x2, #0x63
  2365b4:	add	x4, x4, #0x166
  2365b8:	stp	x9, x19, [sp, #32]
  2365bc:	stp	x8, x0, [sp, #8]
  2365c0:	mov	w0, #0x3                   	// #3
  2365c4:	movk	w1, #0x4000, lsl #16
  2365c8:	mov	w3, #0x278                 	// #632
  2365cc:	b	238b30 <parse_token+0x2f9c>
  2365d0:	mov	x0, xzr
  2365d4:	bl	235b80 <strna>
  2365d8:	cbz	x20, 2365e4 <parse_token+0xa50>
  2365dc:	ldr	w8, [x20, #8]
  2365e0:	b	2365e8 <parse_token+0xa54>
  2365e4:	mov	w8, wzr
  2365e8:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2365ec:	str	w8, [sp, #24]
  2365f0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2365f4:	add	x9, x9, #0xdc7
  2365f8:	add	x8, x8, #0x358
  2365fc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236600:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236604:	mov	w1, #0x16                  	// #22
  236608:	add	x2, x2, #0x63
  23660c:	add	x4, x4, #0x166
  236610:	stp	x9, x19, [sp, #32]
  236614:	stp	x8, x0, [sp, #8]
  236618:	mov	w0, #0x3                   	// #3
  23661c:	movk	w1, #0x4000, lsl #16
  236620:	mov	w3, #0x248                 	// #584
  236624:	b	238b30 <parse_token+0x2f9c>
  236628:	mov	x0, xzr
  23662c:	bl	235b80 <strna>
  236630:	cbz	x24, 23663c <parse_token+0xaa8>
  236634:	ldr	w8, [x24, #8]
  236638:	b	236640 <parse_token+0xaac>
  23663c:	mov	w8, wzr
  236640:	str	w8, [sp, #24]
  236644:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  236648:	add	x8, x8, #0xdd7
  23664c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236650:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236654:	add	x2, x2, #0x63
  236658:	add	x4, x4, #0x166
  23665c:	stp	x8, x0, [sp, #8]
  236660:	mov	w0, #0x4                   	// #4
  236664:	mov	w3, #0x24a                 	// #586
  236668:	mov	w1, wzr
  23666c:	mov	x5, xzr
  236670:	mov	x6, xzr
  236674:	mov	x7, xzr
  236678:	str	x19, [sp, #32]
  23667c:	str	xzr, [sp]
  236680:	mov	w24, #0x4                   	// #4
  236684:	bl	2539f0 <log_object_internal@plt>
  236688:	cmp	w22, #0x2
  23668c:	b.cs	236698 <parse_token+0xb04>  // b.hs, b.nlast
  236690:	mov	w1, #0x4                   	// #4
  236694:	b	236b4c <parse_token+0xfb8>
  236698:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23669c:	add	x1, x1, #0xae6
  2366a0:	mov	x0, x20
  2366a4:	bl	253bc0 <strcmp@plt>
  2366a8:	cbz	w0, 2366c8 <parse_token+0xb34>
  2366ac:	mov	x0, x20
  2366b0:	bl	2358dc <isempty>
  2366b4:	tbz	w0, #0, 236750 <parse_token+0xbbc>
  2366b8:	ldr	x8, [x26]
  2366bc:	cbz	x8, 236b58 <parse_token+0xfc4>
  2366c0:	ldr	x19, [x8, #8]
  2366c4:	b	236b5c <parse_token+0xfc8>
  2366c8:	ldr	x8, [x26]
  2366cc:	cbz	x8, 236a68 <parse_token+0xed4>
  2366d0:	ldr	x19, [x8, #8]
  2366d4:	b	236a6c <parse_token+0xed8>
  2366d8:	mov	x20, xzr
  2366dc:	cbz	x27, 2366e8 <parse_token+0xb54>
  2366e0:	ldr	x0, [x27]
  2366e4:	b	2366ec <parse_token+0xb58>
  2366e8:	mov	x0, xzr
  2366ec:	bl	235b80 <strna>
  2366f0:	cbz	x20, 2366fc <parse_token+0xb68>
  2366f4:	ldr	w8, [x20, #8]
  2366f8:	b	236700 <parse_token+0xb6c>
  2366fc:	mov	w8, wzr
  236700:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  236704:	str	w8, [sp, #24]
  236708:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23670c:	add	x9, x9, #0xdc7
  236710:	add	x8, x8, #0x358
  236714:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236718:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23671c:	mov	w1, #0x16                  	// #22
  236720:	add	x2, x2, #0x63
  236724:	add	x4, x4, #0x166
  236728:	stp	x9, x19, [sp, #32]
  23672c:	stp	x8, x0, [sp, #8]
  236730:	mov	w0, #0x3                   	// #3
  236734:	movk	w1, #0x4000, lsl #16
  236738:	mov	w3, #0x25e                 	// #606
  23673c:	b	238b30 <parse_token+0x2f9c>
  236740:	mov	x25, xzr
  236744:	cbz	x27, 23676c <parse_token+0xbd8>
  236748:	ldr	x0, [x27]
  23674c:	b	236770 <parse_token+0xbdc>
  236750:	mov	x0, x23
  236754:	mov	x1, x19
  236758:	mov	x2, x20
  23675c:	mov	w3, wzr
  236760:	bl	2394a4 <check_value_format_and_warn>
  236764:	mov	w1, #0x29                  	// #41
  236768:	b	236b4c <parse_token+0xfb8>
  23676c:	mov	x0, xzr
  236770:	bl	235b80 <strna>
  236774:	cbz	x25, 236780 <parse_token+0xbec>
  236778:	ldr	w8, [x25, #8]
  23677c:	b	236784 <parse_token+0xbf0>
  236780:	mov	w8, wzr
  236784:	str	w8, [sp, #24]
  236788:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23678c:	add	x8, x8, #0x6f4
  236790:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236794:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236798:	add	x2, x2, #0x63
  23679c:	add	x4, x4, #0x166
  2367a0:	stp	x8, x0, [sp, #8]
  2367a4:	mov	w0, #0x4                   	// #4
  2367a8:	mov	w3, #0x260                 	// #608
  2367ac:	mov	w1, wzr
  2367b0:	mov	x5, xzr
  2367b4:	mov	x6, xzr
  2367b8:	mov	x7, xzr
  2367bc:	str	x19, [sp, #32]
  2367c0:	str	xzr, [sp]
  2367c4:	mov	w25, #0x4                   	// #4
  2367c8:	bl	2539f0 <log_object_internal@plt>
  2367cc:	cmp	w22, #0x2
  2367d0:	b.cs	2367dc <parse_token+0xc48>  // b.hs, b.nlast
  2367d4:	mov	w1, #0x5                   	// #5
  2367d8:	b	236f18 <parse_token+0x1384>
  2367dc:	adrp	x9, 265000 <__lxstat64@plt+0xfe00>
  2367e0:	add	x9, x9, #0x3a0
  2367e4:	ldp	q0, q1, [x9, #48]
  2367e8:	sub	x8, x29, #0x70
  2367ec:	ldr	q2, [x9, #80]
  2367f0:	ldr	x10, [x9, #96]
  2367f4:	stur	q0, [x29, #-64]
  2367f8:	ldr	q0, [x9]
  2367fc:	str	q1, [x8, #64]
  236800:	ldp	q1, q3, [x9, #16]
  236804:	sub	x0, x29, #0x70
  236808:	mov	x1, x24
  23680c:	str	q2, [x8, #80]
  236810:	stp	q0, q1, [x29, #-112]
  236814:	str	x10, [x8, #96]
  236818:	stur	q3, [x29, #-80]
  23681c:	bl	2544a0 <strv_find@plt>
  236820:	cbz	x0, 236834 <parse_token+0xca0>
  236824:	ldr	x8, [x26]
  236828:	cbz	x8, 23690c <parse_token+0xd78>
  23682c:	ldr	x19, [x8, #8]
  236830:	b	236910 <parse_token+0xd7c>
  236834:	mov	x0, x23
  236838:	mov	x1, x19
  23683c:	mov	x2, x20
  236840:	mov	w3, wzr
  236844:	bl	2394a4 <check_value_format_and_warn>
  236848:	mov	w1, #0x28                  	// #40
  23684c:	b	236f18 <parse_token+0x1384>
  236850:	mov	x0, x23
  236854:	mov	x1, x19
  236858:	mov	x2, x24
  23685c:	bl	239628 <check_attr_format_and_warn>
  236860:	tbnz	w0, #31, 238b44 <parse_token+0x2fb0>
  236864:	cmp	w22, #0x2
  236868:	b.eq	236bcc <parse_token+0x1038>  // b.none
  23686c:	cmp	w22, #0x5
  236870:	b.eq	236bcc <parse_token+0x1038>  // b.none
  236874:	cmp	w22, #0x3
  236878:	mov	w25, w22
  23687c:	b.ne	236ef0 <parse_token+0x135c>  // b.any
  236880:	ldr	x8, [x26]
  236884:	cbz	x8, 237098 <parse_token+0x1504>
  236888:	ldr	x20, [x8, #8]
  23688c:	b	23709c <parse_token+0x1508>
  236890:	mov	x0, xzr
  236894:	bl	235b80 <strna>
  236898:	cbz	x20, 2368b4 <parse_token+0xd20>
  23689c:	ldr	w8, [x20, #8]
  2368a0:	b	2368b8 <parse_token+0xd24>
  2368a4:	cmp	w22, #0x2
  2368a8:	b.cs	236a54 <parse_token+0xec0>  // b.hs, b.nlast
  2368ac:	mov	w1, #0x9                   	// #9
  2368b0:	b	23632c <parse_token+0x798>
  2368b4:	mov	w8, wzr
  2368b8:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2368bc:	str	w8, [sp, #24]
  2368c0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2368c4:	add	x9, x9, #0x79
  2368c8:	add	x8, x8, #0x358
  2368cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2368d0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2368d4:	mov	w1, #0x16                  	// #22
  2368d8:	add	x2, x2, #0x63
  2368dc:	add	x4, x4, #0x166
  2368e0:	stp	x9, x19, [sp, #32]
  2368e4:	stp	x8, x0, [sp, #8]
  2368e8:	mov	w0, #0x3                   	// #3
  2368ec:	movk	w1, #0x4000, lsl #16
  2368f0:	mov	w3, #0x286                 	// #646
  2368f4:	b	238b30 <parse_token+0x2f9c>
  2368f8:	cmp	x27, #0x0
  2368fc:	csel	x20, x21, xzr, ne  // ne = any
  236900:	cbz	x27, 236bdc <parse_token+0x1048>
  236904:	ldr	x0, [x27]
  236908:	b	236be0 <parse_token+0x104c>
  23690c:	mov	x19, xzr
  236910:	cbz	x8, 23691c <parse_token+0xd88>
  236914:	ldr	x0, [x8]
  236918:	b	236920 <parse_token+0xd8c>
  23691c:	mov	x0, xzr
  236920:	bl	235b80 <strna>
  236924:	cbz	x19, 236930 <parse_token+0xd9c>
  236928:	ldr	w8, [x19, #8]
  23692c:	b	236934 <parse_token+0xda0>
  236930:	mov	w8, wzr
  236934:	str	w8, [sp, #24]
  236938:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23693c:	add	x8, x8, #0x74b
  236940:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236944:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236948:	mov	w1, #0x16                  	// #22
  23694c:	str	x24, [sp, #32]
  236950:	add	x2, x2, #0x63
  236954:	add	x4, x4, #0x166
  236958:	stp	x8, x0, [sp, #8]
  23695c:	mov	w0, #0x3                   	// #3
  236960:	movk	w1, #0x4000, lsl #16
  236964:	mov	w3, #0x269                 	// #617
  236968:	b	238b30 <parse_token+0x2f9c>
  23696c:	cbz	x24, 236c4c <parse_token+0x10b8>
  236970:	cmp	x27, #0x0
  236974:	csel	x20, x21, xzr, ne  // ne = any
  236978:	cbz	x27, 236e04 <parse_token+0x1270>
  23697c:	ldr	x0, [x27]
  236980:	b	236e08 <parse_token+0x1274>
  236984:	mov	x20, xzr
  236988:	cbz	x27, 236994 <parse_token+0xe00>
  23698c:	ldr	x0, [x27]
  236990:	b	236998 <parse_token+0xe04>
  236994:	mov	x0, xzr
  236998:	bl	235b80 <strna>
  23699c:	cbz	x20, 2369a8 <parse_token+0xe14>
  2369a0:	ldr	w8, [x20, #8]
  2369a4:	b	2369ac <parse_token+0xe18>
  2369a8:	mov	w8, wzr
  2369ac:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2369b0:	str	w8, [sp, #24]
  2369b4:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2369b8:	add	x9, x9, #0xdc7
  2369bc:	add	x8, x8, #0x358
  2369c0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2369c4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2369c8:	mov	w1, #0x16                  	// #22
  2369cc:	add	x2, x2, #0x63
  2369d0:	add	x4, x4, #0x166
  2369d4:	stp	x9, x19, [sp, #32]
  2369d8:	stp	x8, x0, [sp, #8]
  2369dc:	mov	w0, #0x3                   	// #3
  2369e0:	movk	w1, #0x4000, lsl #16
  2369e4:	mov	w3, #0x274                 	// #628
  2369e8:	b	238b30 <parse_token+0x2f9c>
  2369ec:	mov	x0, xzr
  2369f0:	bl	235b80 <strna>
  2369f4:	cbz	x20, 236a00 <parse_token+0xe6c>
  2369f8:	ldr	w8, [x20, #8]
  2369fc:	b	236a04 <parse_token+0xe70>
  236a00:	mov	w8, wzr
  236a04:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  236a08:	str	w8, [sp, #24]
  236a0c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236a10:	add	x9, x9, #0x79
  236a14:	add	x8, x8, #0x358
  236a18:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236a1c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236a20:	mov	w1, #0x16                  	// #22
  236a24:	add	x2, x2, #0x63
  236a28:	add	x4, x4, #0x166
  236a2c:	stp	x9, x19, [sp, #32]
  236a30:	stp	x8, x0, [sp, #8]
  236a34:	mov	w0, #0x3                   	// #3
  236a38:	movk	w1, #0x4000, lsl #16
  236a3c:	mov	w3, #0x290                 	// #656
  236a40:	b	238b30 <parse_token+0x2f9c>
  236a44:	ldr	x8, [x26]
  236a48:	cbz	x8, 236c5c <parse_token+0x10c8>
  236a4c:	ldr	x25, [x8, #8]
  236a50:	b	236c60 <parse_token+0x10cc>
  236a54:	cmp	x27, #0x0
  236a58:	csel	x20, x21, xzr, ne  // ne = any
  236a5c:	cbz	x27, 236d08 <parse_token+0x1174>
  236a60:	ldr	x0, [x27]
  236a64:	b	236d0c <parse_token+0x1178>
  236a68:	mov	x19, xzr
  236a6c:	cbz	x8, 236a78 <parse_token+0xee4>
  236a70:	ldr	x0, [x8]
  236a74:	b	236a7c <parse_token+0xee8>
  236a78:	mov	x0, xzr
  236a7c:	bl	235b80 <strna>
  236a80:	cbz	x19, 236a8c <parse_token+0xef8>
  236a84:	ldr	w8, [x19, #8]
  236a88:	b	236a90 <parse_token+0xefc>
  236a8c:	mov	w8, wzr
  236a90:	str	w8, [sp, #24]
  236a94:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  236a98:	add	x8, x8, #0xa17
  236a9c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236aa0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236aa4:	mov	w1, #0x16                  	// #22
  236aa8:	add	x2, x2, #0x63
  236aac:	add	x4, x4, #0x166
  236ab0:	stp	x8, x0, [sp, #8]
  236ab4:	mov	w0, #0x3                   	// #3
  236ab8:	movk	w1, #0x4000, lsl #16
  236abc:	mov	w3, #0x251                 	// #593
  236ac0:	b	238b30 <parse_token+0x2f9c>
  236ac4:	mov	x0, xzr
  236ac8:	bl	235b80 <strna>
  236acc:	cbz	x24, 236ad8 <parse_token+0xf44>
  236ad0:	ldr	w8, [x24, #8]
  236ad4:	b	236adc <parse_token+0xf48>
  236ad8:	mov	w8, wzr
  236adc:	str	w8, [sp, #24]
  236ae0:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  236ae4:	add	x8, x8, #0x6f4
  236ae8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236aec:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236af0:	add	x2, x2, #0x63
  236af4:	add	x4, x4, #0x166
  236af8:	stp	x8, x0, [sp, #8]
  236afc:	mov	w0, #0x4                   	// #4
  236b00:	mov	w3, #0x27a                 	// #634
  236b04:	mov	w1, wzr
  236b08:	mov	x5, xzr
  236b0c:	mov	x6, xzr
  236b10:	mov	x7, xzr
  236b14:	str	x19, [sp, #32]
  236b18:	str	xzr, [sp]
  236b1c:	mov	w24, #0x4                   	// #4
  236b20:	bl	2539f0 <log_object_internal@plt>
  236b24:	cmp	w22, #0x2
  236b28:	b.cs	236b34 <parse_token+0xfa0>  // b.hs, b.nlast
  236b2c:	mov	w1, #0x7                   	// #7
  236b30:	b	236b4c <parse_token+0xfb8>
  236b34:	mov	w3, #0x1                   	// #1
  236b38:	mov	x0, x23
  236b3c:	mov	x1, x19
  236b40:	mov	x2, x20
  236b44:	bl	2394a4 <check_value_format_and_warn>
  236b48:	mov	w1, #0x25                  	// #37
  236b4c:	mov	x0, x21
  236b50:	mov	w2, w24
  236b54:	b	236334 <parse_token+0x7a0>
  236b58:	mov	x19, xzr
  236b5c:	cbz	x8, 236b68 <parse_token+0xfd4>
  236b60:	ldr	x0, [x8]
  236b64:	b	236b6c <parse_token+0xfd8>
  236b68:	mov	x0, xzr
  236b6c:	bl	235b80 <strna>
  236b70:	cbz	x19, 236b7c <parse_token+0xfe8>
  236b74:	ldr	w8, [x19, #8]
  236b78:	b	236b80 <parse_token+0xfec>
  236b7c:	mov	w8, wzr
  236b80:	str	w8, [sp, #24]
  236b84:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  236b88:	add	x8, x8, #0xf93
  236b8c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236b90:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236b94:	mov	w1, #0x16                  	// #22
  236b98:	add	x2, x2, #0x63
  236b9c:	add	x4, x4, #0x166
  236ba0:	stp	x8, x0, [sp, #8]
  236ba4:	mov	w0, #0x3                   	// #3
  236ba8:	movk	w1, #0x4000, lsl #16
  236bac:	mov	w3, #0x254                 	// #596
  236bb0:	b	238b30 <parse_token+0x2f9c>
  236bb4:	cbz	x24, 236e18 <parse_token+0x1284>
  236bb8:	cmp	x27, #0x0
  236bbc:	csel	x20, x21, xzr, ne  // ne = any
  236bc0:	cbz	x27, 236fac <parse_token+0x1418>
  236bc4:	ldr	x0, [x27]
  236bc8:	b	236fb0 <parse_token+0x141c>
  236bcc:	ldr	x8, [x26]
  236bd0:	cbz	x8, 236e6c <parse_token+0x12d8>
  236bd4:	ldr	x25, [x8, #8]
  236bd8:	b	236e70 <parse_token+0x12dc>
  236bdc:	mov	x0, xzr
  236be0:	bl	235b80 <strna>
  236be4:	cbz	x20, 236bf0 <parse_token+0x105c>
  236be8:	ldr	w8, [x20, #8]
  236bec:	b	236bf4 <parse_token+0x1060>
  236bf0:	mov	w8, wzr
  236bf4:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  236bf8:	str	w8, [sp, #24]
  236bfc:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236c00:	add	x9, x9, #0xdc7
  236c04:	add	x8, x8, #0x358
  236c08:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236c0c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236c10:	mov	w1, #0x16                  	// #22
  236c14:	add	x2, x2, #0x63
  236c18:	add	x4, x4, #0x166
  236c1c:	stp	x9, x19, [sp, #32]
  236c20:	stp	x8, x0, [sp, #8]
  236c24:	mov	w0, #0x3                   	// #3
  236c28:	movk	w1, #0x4000, lsl #16
  236c2c:	mov	w3, #0x288                 	// #648
  236c30:	b	238b30 <parse_token+0x2f9c>
  236c34:	cbz	x24, 236fc0 <parse_token+0x142c>
  236c38:	cmp	x27, #0x0
  236c3c:	csel	x20, x21, xzr, ne  // ne = any
  236c40:	cbz	x27, 237100 <parse_token+0x156c>
  236c44:	ldr	x0, [x27]
  236c48:	b	237104 <parse_token+0x1570>
  236c4c:	cmp	w22, #0x2
  236c50:	b.cs	236e7c <parse_token+0x12e8>  // b.hs, b.nlast
  236c54:	mov	w1, #0xc                   	// #12
  236c58:	b	23632c <parse_token+0x798>
  236c5c:	mov	x25, xzr
  236c60:	cbz	x8, 236c6c <parse_token+0x10d8>
  236c64:	ldr	x0, [x8]
  236c68:	b	236c70 <parse_token+0x10dc>
  236c6c:	mov	x0, xzr
  236c70:	bl	235b80 <strna>
  236c74:	cbz	x25, 236c80 <parse_token+0x10ec>
  236c78:	ldr	w8, [x25, #8]
  236c7c:	b	236c84 <parse_token+0x10f0>
  236c80:	mov	w8, wzr
  236c84:	str	w8, [sp, #24]
  236c88:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  236c8c:	add	x8, x8, #0x83
  236c90:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236c94:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236c98:	add	x2, x2, #0x63
  236c9c:	add	x4, x4, #0x166
  236ca0:	stp	x8, x0, [sp, #8]
  236ca4:	mov	w0, #0x4                   	// #4
  236ca8:	mov	w3, #0x29c                 	// #668
  236cac:	mov	w1, wzr
  236cb0:	mov	x5, xzr
  236cb4:	mov	x6, xzr
  236cb8:	mov	x7, xzr
  236cbc:	str	x19, [sp, #32]
  236cc0:	str	xzr, [sp]
  236cc4:	mov	w25, #0x4                   	// #4
  236cc8:	bl	2539f0 <log_object_internal@plt>
  236ccc:	cmp	w22, #0x2
  236cd0:	b.cs	236cdc <parse_token+0x1148>  // b.hs, b.nlast
  236cd4:	mov	w1, #0xa                   	// #10
  236cd8:	b	236f18 <parse_token+0x1384>
  236cdc:	mov	x0, x23
  236ce0:	mov	x1, x19
  236ce4:	mov	x2, x20
  236ce8:	mov	w3, wzr
  236cec:	bl	2394a4 <check_value_format_and_warn>
  236cf0:	mov	w1, #0x2b                  	// #43
  236cf4:	b	236f18 <parse_token+0x1384>
  236cf8:	mov	x19, xzr
  236cfc:	cbz	x27, 236d1c <parse_token+0x1188>
  236d00:	ldr	x0, [x27]
  236d04:	b	236d20 <parse_token+0x118c>
  236d08:	mov	x0, xzr
  236d0c:	bl	235b80 <strna>
  236d10:	cbz	x20, 236d30 <parse_token+0x119c>
  236d14:	ldr	w8, [x20, #8]
  236d18:	b	236d34 <parse_token+0x11a0>
  236d1c:	mov	x0, xzr
  236d20:	bl	235b80 <strna>
  236d24:	cbz	x19, 236d74 <parse_token+0x11e0>
  236d28:	ldr	w8, [x19, #8]
  236d2c:	b	236d78 <parse_token+0x11e4>
  236d30:	mov	w8, wzr
  236d34:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  236d38:	str	w8, [sp, #24]
  236d3c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236d40:	add	x9, x9, #0xdc7
  236d44:	add	x8, x8, #0x358
  236d48:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236d4c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236d50:	mov	w1, #0x16                  	// #22
  236d54:	add	x2, x2, #0x63
  236d58:	add	x4, x4, #0x166
  236d5c:	stp	x9, x19, [sp, #32]
  236d60:	stp	x8, x0, [sp, #8]
  236d64:	mov	w0, #0x3                   	// #3
  236d68:	movk	w1, #0x4000, lsl #16
  236d6c:	mov	w3, #0x292                 	// #658
  236d70:	b	238b30 <parse_token+0x2f9c>
  236d74:	mov	w8, wzr
  236d78:	str	w8, [sp, #24]
  236d7c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236d80:	add	x8, x8, #0xab2
  236d84:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236d88:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236d8c:	add	x2, x2, #0x63
  236d90:	add	x4, x4, #0x166
  236d94:	stp	x8, x0, [sp, #8]
  236d98:	mov	w0, #0x4                   	// #4
  236d9c:	mov	w3, #0x28b                 	// #651
  236da0:	mov	w1, wzr
  236da4:	mov	x5, xzr
  236da8:	mov	x6, xzr
  236dac:	mov	x7, xzr
  236db0:	str	x20, [sp, #32]
  236db4:	str	xzr, [sp]
  236db8:	bl	2539f0 <log_object_internal@plt>
  236dbc:	mov	w1, #0x8                   	// #8
  236dc0:	b	23632c <parse_token+0x798>
  236dc4:	mov	x0, x23
  236dc8:	mov	x1, x19
  236dcc:	mov	x2, x24
  236dd0:	bl	239628 <check_attr_format_and_warn>
  236dd4:	tbnz	w0, #31, 238b44 <parse_token+0x2fb0>
  236dd8:	cmp	w22, #0x2
  236ddc:	b.cs	237158 <parse_token+0x15c4>  // b.hs, b.nlast
  236de0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  236de4:	add	x1, x1, #0xd50
  236de8:	mov	x0, x24
  236dec:	bl	2390a8 <startswith>
  236df0:	cbz	x0, 237490 <parse_token+0x18fc>
  236df4:	ldr	x8, [x26]
  236df8:	cbz	x8, 237418 <parse_token+0x1884>
  236dfc:	ldr	x19, [x8, #8]
  236e00:	b	23741c <parse_token+0x1888>
  236e04:	mov	x0, xzr
  236e08:	bl	235b80 <strna>
  236e0c:	cbz	x20, 236e28 <parse_token+0x1294>
  236e10:	ldr	w8, [x20, #8]
  236e14:	b	236e2c <parse_token+0x1298>
  236e18:	cmp	w22, #0x2
  236e1c:	b.cs	237014 <parse_token+0x1480>  // b.hs, b.nlast
  236e20:	mov	w1, #0xd                   	// #13
  236e24:	b	23632c <parse_token+0x798>
  236e28:	mov	w8, wzr
  236e2c:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  236e30:	str	w8, [sp, #24]
  236e34:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236e38:	add	x9, x9, #0x79
  236e3c:	add	x8, x8, #0x358
  236e40:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236e44:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236e48:	mov	w1, #0x16                  	// #22
  236e4c:	add	x2, x2, #0x63
  236e50:	add	x4, x4, #0x166
  236e54:	stp	x9, x19, [sp, #32]
  236e58:	stp	x8, x0, [sp, #8]
  236e5c:	mov	w0, #0x3                   	// #3
  236e60:	movk	w1, #0x4000, lsl #16
  236e64:	mov	w3, #0x2b7                 	// #695
  236e68:	b	238b30 <parse_token+0x2f9c>
  236e6c:	mov	x25, xzr
  236e70:	cbz	x8, 236e90 <parse_token+0x12fc>
  236e74:	ldr	x0, [x8]
  236e78:	b	236e94 <parse_token+0x1300>
  236e7c:	cmp	x27, #0x0
  236e80:	csel	x20, x21, xzr, ne  // ne = any
  236e84:	cbz	x27, 23717c <parse_token+0x15e8>
  236e88:	ldr	x0, [x27]
  236e8c:	b	237180 <parse_token+0x15ec>
  236e90:	mov	x0, xzr
  236e94:	bl	235b80 <strna>
  236e98:	cbz	x25, 236ea4 <parse_token+0x1310>
  236e9c:	ldr	w8, [x25, #8]
  236ea0:	b	236ea8 <parse_token+0x1314>
  236ea4:	mov	w8, wzr
  236ea8:	str	w8, [sp, #24]
  236eac:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  236eb0:	add	x8, x8, #0x83
  236eb4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236eb8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236ebc:	add	x2, x2, #0x63
  236ec0:	add	x4, x4, #0x166
  236ec4:	stp	x8, x0, [sp, #8]
  236ec8:	mov	w0, #0x4                   	// #4
  236ecc:	mov	w3, #0x2ac                 	// #684
  236ed0:	mov	w1, wzr
  236ed4:	mov	x5, xzr
  236ed8:	mov	x6, xzr
  236edc:	mov	x7, xzr
  236ee0:	str	x19, [sp, #32]
  236ee4:	str	xzr, [sp]
  236ee8:	mov	w25, #0x4                   	// #4
  236eec:	bl	2539f0 <log_object_internal@plt>
  236ef0:	cmp	w22, #0x2
  236ef4:	b.cs	236f00 <parse_token+0x136c>  // b.hs, b.nlast
  236ef8:	mov	w1, #0xb                   	// #11
  236efc:	b	236f18 <parse_token+0x1384>
  236f00:	mov	x0, x23
  236f04:	mov	x1, x19
  236f08:	mov	x2, x20
  236f0c:	mov	w3, wzr
  236f10:	bl	2394a4 <check_value_format_and_warn>
  236f14:	mov	w1, #0x2c                  	// #44
  236f18:	mov	x0, x21
  236f1c:	mov	w2, w25
  236f20:	mov	x3, x20
  236f24:	mov	x4, x24
  236f28:	b	23633c <parse_token+0x7a8>
  236f2c:	cbz	x24, 2371ec <parse_token+0x1658>
  236f30:	cmp	x27, #0x0
  236f34:	csel	x20, x21, xzr, ne  // ne = any
  236f38:	cbz	x27, 23727c <parse_token+0x16e8>
  236f3c:	ldr	x0, [x27]
  236f40:	b	237280 <parse_token+0x16ec>
  236f44:	mov	x20, xzr
  236f48:	cbz	x8, 236f54 <parse_token+0x13c0>
  236f4c:	ldr	x0, [x8]
  236f50:	b	236f58 <parse_token+0x13c4>
  236f54:	mov	x0, xzr
  236f58:	bl	235b80 <strna>
  236f5c:	cbz	x20, 236f68 <parse_token+0x13d4>
  236f60:	ldr	w8, [x20, #8]
  236f64:	b	236f6c <parse_token+0x13d8>
  236f68:	mov	w8, wzr
  236f6c:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  236f70:	str	w8, [sp, #24]
  236f74:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236f78:	add	x9, x9, #0xdc7
  236f7c:	add	x8, x8, #0x358
  236f80:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236f84:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236f88:	mov	w1, #0x16                  	// #22
  236f8c:	add	x2, x2, #0x63
  236f90:	add	x4, x4, #0x166
  236f94:	stp	x9, x19, [sp, #32]
  236f98:	stp	x8, x0, [sp, #8]
  236f9c:	mov	w0, #0x3                   	// #3
  236fa0:	movk	w1, #0x4000, lsl #16
  236fa4:	mov	w3, #0x29a                 	// #666
  236fa8:	b	238b30 <parse_token+0x2f9c>
  236fac:	mov	x0, xzr
  236fb0:	bl	235b80 <strna>
  236fb4:	cbz	x20, 236fd0 <parse_token+0x143c>
  236fb8:	ldr	w8, [x20, #8]
  236fbc:	b	236fd4 <parse_token+0x1440>
  236fc0:	cmp	w22, #0x2
  236fc4:	b.cs	237168 <parse_token+0x15d4>  // b.hs, b.nlast
  236fc8:	mov	w1, #0xe                   	// #14
  236fcc:	b	23632c <parse_token+0x798>
  236fd0:	mov	w8, wzr
  236fd4:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  236fd8:	str	w8, [sp, #24]
  236fdc:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  236fe0:	add	x9, x9, #0x79
  236fe4:	add	x8, x8, #0x358
  236fe8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  236fec:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  236ff0:	mov	w1, #0x16                  	// #22
  236ff4:	add	x2, x2, #0x63
  236ff8:	add	x4, x4, #0x166
  236ffc:	stp	x9, x19, [sp, #32]
  237000:	stp	x8, x0, [sp, #8]
  237004:	mov	w0, #0x3                   	// #3
  237008:	movk	w1, #0x4000, lsl #16
  23700c:	mov	w3, #0x2be                 	// #702
  237010:	b	238b30 <parse_token+0x2f9c>
  237014:	cmp	x27, #0x0
  237018:	csel	x20, x21, xzr, ne  // ne = any
  23701c:	cbz	x27, 2371fc <parse_token+0x1668>
  237020:	ldr	x0, [x27]
  237024:	b	237200 <parse_token+0x166c>
  237028:	mov	w8, #0xffffffff            	// #-1
  23702c:	mov	x0, x24
  237030:	str	w8, [sp, #60]
  237034:	bl	2358dc <isempty>
  237038:	tbnz	w0, #0, 237050 <parse_token+0x14bc>
  23703c:	add	x1, sp, #0x3c
  237040:	mov	x0, x24
  237044:	bl	2544b0 <parse_mode@plt>
  237048:	mov	w25, w0
  23704c:	tbnz	w0, #31, 237428 <parse_token+0x1894>
  237050:	mov	w3, #0x1                   	// #1
  237054:	mov	x0, x23
  237058:	mov	x1, x19
  23705c:	mov	x2, x20
  237060:	bl	2394a4 <check_value_format_and_warn>
  237064:	cmp	w22, #0x2
  237068:	b.cs	237254 <parse_token+0x16c0>  // b.hs, b.nlast
  23706c:	ldr	w8, [sp, #60]
  237070:	mov	w1, #0x11                  	// #17
  237074:	add	x4, x8, #0x1
  237078:	mov	x0, x21
  23707c:	mov	w2, w22
  237080:	mov	x3, x20
  237084:	bl	2390f8 <rule_line_add_token>
  237088:	mov	w19, w0
  23708c:	mov	w9, #0x1                   	// #1
  237090:	tbnz	w9, #0, 236344 <parse_token+0x7b0>
  237094:	b	238b44 <parse_token+0x2fb0>
  237098:	mov	x20, xzr
  23709c:	cbz	x8, 2370a8 <parse_token+0x1514>
  2370a0:	ldr	x0, [x8]
  2370a4:	b	2370ac <parse_token+0x1518>
  2370a8:	mov	x0, xzr
  2370ac:	bl	235b80 <strna>
  2370b0:	cbz	x20, 2370bc <parse_token+0x1528>
  2370b4:	ldr	w8, [x20, #8]
  2370b8:	b	2370c0 <parse_token+0x152c>
  2370bc:	mov	w8, wzr
  2370c0:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2370c4:	str	w8, [sp, #24]
  2370c8:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2370cc:	add	x9, x9, #0xdc7
  2370d0:	add	x8, x8, #0x358
  2370d4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2370d8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2370dc:	mov	w1, #0x16                  	// #22
  2370e0:	add	x2, x2, #0x63
  2370e4:	add	x4, x4, #0x166
  2370e8:	stp	x9, x19, [sp, #32]
  2370ec:	stp	x8, x0, [sp, #8]
  2370f0:	mov	w0, #0x3                   	// #3
  2370f4:	movk	w1, #0x4000, lsl #16
  2370f8:	mov	w3, #0x2aa                 	// #682
  2370fc:	b	238b30 <parse_token+0x2f9c>
  237100:	mov	x0, xzr
  237104:	bl	235b80 <strna>
  237108:	cbz	x20, 237114 <parse_token+0x1580>
  23710c:	ldr	w8, [x20, #8]
  237110:	b	237118 <parse_token+0x1584>
  237114:	mov	w8, wzr
  237118:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  23711c:	str	w8, [sp, #24]
  237120:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237124:	add	x9, x9, #0x79
  237128:	add	x8, x8, #0x358
  23712c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237130:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237134:	mov	w1, #0x16                  	// #22
  237138:	add	x2, x2, #0x63
  23713c:	add	x4, x4, #0x166
  237140:	stp	x9, x19, [sp, #32]
  237144:	stp	x8, x0, [sp, #8]
  237148:	mov	w0, #0x3                   	// #3
  23714c:	movk	w1, #0x4000, lsl #16
  237150:	mov	w3, #0x2c5                 	// #709
  237154:	b	238b30 <parse_token+0x2f9c>
  237158:	ldr	x8, [x26]
  23715c:	cbz	x8, 2372d4 <parse_token+0x1740>
  237160:	ldr	x20, [x8, #8]
  237164:	b	2372d8 <parse_token+0x1744>
  237168:	cmp	x27, #0x0
  23716c:	csel	x20, x21, xzr, ne  // ne = any
  237170:	cbz	x27, 237350 <parse_token+0x17bc>
  237174:	ldr	x0, [x27]
  237178:	b	237354 <parse_token+0x17c0>
  23717c:	mov	x0, xzr
  237180:	bl	235b80 <strna>
  237184:	cbz	x20, 237190 <parse_token+0x15fc>
  237188:	ldr	w8, [x20, #8]
  23718c:	b	237194 <parse_token+0x1600>
  237190:	mov	w8, wzr
  237194:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237198:	str	w8, [sp, #24]
  23719c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2371a0:	add	x9, x9, #0xdc7
  2371a4:	add	x8, x8, #0x358
  2371a8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2371ac:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2371b0:	mov	w1, #0x16                  	// #22
  2371b4:	add	x2, x2, #0x63
  2371b8:	add	x4, x4, #0x166
  2371bc:	stp	x9, x19, [sp, #32]
  2371c0:	stp	x8, x0, [sp, #8]
  2371c4:	mov	w0, #0x3                   	// #3
  2371c8:	movk	w1, #0x4000, lsl #16
  2371cc:	mov	w3, #0x2b9                 	// #697
  2371d0:	b	238b30 <parse_token+0x2f9c>
  2371d4:	cbz	x24, 2373c0 <parse_token+0x182c>
  2371d8:	cmp	x27, #0x0
  2371dc:	csel	x20, x21, xzr, ne  // ne = any
  2371e0:	cbz	x27, 2375c0 <parse_token+0x1a2c>
  2371e4:	ldr	x0, [x27]
  2371e8:	b	2375c4 <parse_token+0x1a30>
  2371ec:	cmp	w22, #0x2
  2371f0:	b.cs	2372e4 <parse_token+0x1750>  // b.hs, b.nlast
  2371f4:	mov	w1, #0x10                  	// #16
  2371f8:	b	23632c <parse_token+0x798>
  2371fc:	mov	x0, xzr
  237200:	bl	235b80 <strna>
  237204:	cbz	x20, 237210 <parse_token+0x167c>
  237208:	ldr	w8, [x20, #8]
  23720c:	b	237214 <parse_token+0x1680>
  237210:	mov	w8, wzr
  237214:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237218:	str	w8, [sp, #24]
  23721c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237220:	add	x9, x9, #0xdc7
  237224:	add	x8, x8, #0x358
  237228:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23722c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237230:	mov	w1, #0x16                  	// #22
  237234:	add	x2, x2, #0x63
  237238:	add	x4, x4, #0x166
  23723c:	stp	x9, x19, [sp, #32]
  237240:	stp	x8, x0, [sp, #8]
  237244:	mov	w0, #0x3                   	// #3
  237248:	movk	w1, #0x4000, lsl #16
  23724c:	mov	w3, #0x2c0                 	// #704
  237250:	b	238b30 <parse_token+0x2f9c>
  237254:	ldr	x8, [x26]
  237258:	cbz	x8, 23753c <parse_token+0x19a8>
  23725c:	ldr	x20, [x8, #8]
  237260:	b	237540 <parse_token+0x19ac>
  237264:	mov	x0, x24
  237268:	bl	2358dc <isempty>
  23726c:	tbz	w0, #0, 2373ec <parse_token+0x1858>
  237270:	cbz	x27, 2376c0 <parse_token+0x1b2c>
  237274:	ldr	x20, [x27, #8]
  237278:	b	2376c4 <parse_token+0x1b30>
  23727c:	mov	x0, xzr
  237280:	bl	235b80 <strna>
  237284:	cbz	x20, 237290 <parse_token+0x16fc>
  237288:	ldr	w8, [x20, #8]
  23728c:	b	237294 <parse_token+0x1700>
  237290:	mov	w8, wzr
  237294:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  237298:	str	w8, [sp, #24]
  23729c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2372a0:	add	x9, x9, #0x79
  2372a4:	add	x8, x8, #0x358
  2372a8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2372ac:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2372b0:	mov	w1, #0x16                  	// #22
  2372b4:	add	x2, x2, #0x63
  2372b8:	add	x4, x4, #0x166
  2372bc:	stp	x9, x19, [sp, #32]
  2372c0:	stp	x8, x0, [sp, #8]
  2372c4:	mov	w0, #0x3                   	// #3
  2372c8:	movk	w1, #0x4000, lsl #16
  2372cc:	mov	w3, #0x2d9                 	// #729
  2372d0:	b	238b30 <parse_token+0x2f9c>
  2372d4:	mov	x20, xzr
  2372d8:	cbz	x8, 2372f8 <parse_token+0x1764>
  2372dc:	ldr	x0, [x8]
  2372e0:	b	2372fc <parse_token+0x1768>
  2372e4:	cmp	x27, #0x0
  2372e8:	csel	x20, x21, xzr, ne  // ne = any
  2372ec:	cbz	x27, 237630 <parse_token+0x1a9c>
  2372f0:	ldr	x0, [x27]
  2372f4:	b	237634 <parse_token+0x1aa0>
  2372f8:	mov	x0, xzr
  2372fc:	bl	235b80 <strna>
  237300:	cbz	x20, 23730c <parse_token+0x1778>
  237304:	ldr	w8, [x20, #8]
  237308:	b	237310 <parse_token+0x177c>
  23730c:	mov	w8, wzr
  237310:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237314:	str	w8, [sp, #24]
  237318:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23731c:	add	x9, x9, #0xdc7
  237320:	add	x8, x8, #0x358
  237324:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237328:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23732c:	mov	w1, #0x16                  	// #22
  237330:	add	x2, x2, #0x63
  237334:	add	x4, x4, #0x166
  237338:	stp	x9, x19, [sp, #32]
  23733c:	stp	x8, x0, [sp, #8]
  237340:	mov	w0, #0x3                   	// #3
  237344:	movk	w1, #0x4000, lsl #16
  237348:	mov	w3, #0x2cf                 	// #719
  23734c:	b	238b30 <parse_token+0x2f9c>
  237350:	mov	x0, xzr
  237354:	bl	235b80 <strna>
  237358:	cbz	x20, 237364 <parse_token+0x17d0>
  23735c:	ldr	w8, [x20, #8]
  237360:	b	237368 <parse_token+0x17d4>
  237364:	mov	w8, wzr
  237368:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  23736c:	str	w8, [sp, #24]
  237370:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237374:	add	x9, x9, #0xdc7
  237378:	add	x8, x8, #0x358
  23737c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237380:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237384:	mov	w1, #0x16                  	// #22
  237388:	add	x2, x2, #0x63
  23738c:	add	x4, x4, #0x166
  237390:	stp	x9, x19, [sp, #32]
  237394:	stp	x8, x0, [sp, #8]
  237398:	mov	w0, #0x3                   	// #3
  23739c:	movk	w1, #0x4000, lsl #16
  2373a0:	mov	w3, #0x2c7                 	// #711
  2373a4:	b	238b30 <parse_token+0x2f9c>
  2373a8:	cbz	x24, 2376b0 <parse_token+0x1b1c>
  2373ac:	cmp	x27, #0x0
  2373b0:	csel	x20, x21, xzr, ne  // ne = any
  2373b4:	cbz	x27, 2377b0 <parse_token+0x1c1c>
  2373b8:	ldr	x0, [x27]
  2373bc:	b	2377b4 <parse_token+0x1c20>
  2373c0:	mov	w3, #0x1                   	// #1
  2373c4:	mov	x0, x23
  2373c8:	mov	x1, x19
  2373cc:	mov	x2, x20
  2373d0:	bl	2394a4 <check_value_format_and_warn>
  2373d4:	cmp	w22, #0x3
  2373d8:	b.ne	237618 <parse_token+0x1a84>  // b.any
  2373dc:	ldr	x8, [x26]
  2373e0:	cbz	x8, 237844 <parse_token+0x1cb0>
  2373e4:	ldr	x20, [x8, #8]
  2373e8:	b	237848 <parse_token+0x1cb4>
  2373ec:	mov	w3, #0x1                   	// #1
  2373f0:	mov	x0, x23
  2373f4:	mov	x1, x19
  2373f8:	mov	x2, x20
  2373fc:	bl	2394a4 <check_value_format_and_warn>
  237400:	cmp	w22, #0x3
  237404:	b.ne	237688 <parse_token+0x1af4>  // b.any
  237408:	ldr	x8, [x26]
  23740c:	cbz	x8, 2378bc <parse_token+0x1d28>
  237410:	ldr	x20, [x8, #8]
  237414:	b	2378c0 <parse_token+0x1d2c>
  237418:	mov	x19, xzr
  23741c:	cbz	x8, 237438 <parse_token+0x18a4>
  237420:	ldr	x0, [x8]
  237424:	b	23743c <parse_token+0x18a8>
  237428:	ldr	x8, [x26]
  23742c:	cbz	x8, 237728 <parse_token+0x1b94>
  237430:	ldr	x19, [x8, #8]
  237434:	b	23772c <parse_token+0x1b98>
  237438:	mov	x0, xzr
  23743c:	bl	235b80 <strna>
  237440:	cbz	x19, 23744c <parse_token+0x18b8>
  237444:	ldr	w8, [x19, #8]
  237448:	b	237450 <parse_token+0x18bc>
  23744c:	mov	w8, wzr
  237450:	str	w8, [sp, #24]
  237454:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  237458:	add	x8, x8, #0x17e
  23745c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237460:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237464:	add	x2, x2, #0x63
  237468:	add	x4, x4, #0x166
  23746c:	stp	x8, x0, [sp, #8]
  237470:	mov	w0, #0x4                   	// #4
  237474:	mov	w3, #0x2d2                 	// #722
  237478:	mov	w1, wzr
  23747c:	mov	x5, xzr
  237480:	mov	x6, xzr
  237484:	mov	x7, xzr
  237488:	str	xzr, [sp]
  23748c:	bl	2539f0 <log_object_internal@plt>
  237490:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  237494:	add	x1, x1, #0x637
  237498:	mov	x0, x24
  23749c:	bl	2544c0 <strstr@plt>
  2374a0:	cbz	x0, 23751c <parse_token+0x1988>
  2374a4:	ldr	x8, [x26]
  2374a8:	cbz	x8, 2374b4 <parse_token+0x1920>
  2374ac:	ldr	x19, [x8, #8]
  2374b0:	b	2374b8 <parse_token+0x1924>
  2374b4:	mov	x19, xzr
  2374b8:	cbz	x8, 2374c4 <parse_token+0x1930>
  2374bc:	ldr	x0, [x8]
  2374c0:	b	2374c8 <parse_token+0x1934>
  2374c4:	mov	x0, xzr
  2374c8:	bl	235b80 <strna>
  2374cc:	cbz	x19, 2374d8 <parse_token+0x1944>
  2374d0:	ldr	w8, [x19, #8]
  2374d4:	b	2374dc <parse_token+0x1948>
  2374d8:	mov	w8, wzr
  2374dc:	str	w8, [sp, #24]
  2374e0:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  2374e4:	add	x8, x8, #0x8de
  2374e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2374ec:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2374f0:	add	x2, x2, #0x63
  2374f4:	add	x4, x4, #0x166
  2374f8:	stp	x8, x0, [sp, #8]
  2374fc:	mov	w0, #0x4                   	// #4
  237500:	mov	w3, #0x2d4                 	// #724
  237504:	mov	w1, wzr
  237508:	mov	x5, xzr
  23750c:	mov	x6, xzr
  237510:	mov	x7, xzr
  237514:	str	xzr, [sp]
  237518:	bl	2539f0 <log_object_internal@plt>
  23751c:	mov	w1, #0xf                   	// #15
  237520:	b	236124 <parse_token+0x590>
  237524:	cbz	x24, 2377c4 <parse_token+0x1c30>
  237528:	cmp	x27, #0x0
  23752c:	csel	x20, x21, xzr, ne  // ne = any
  237530:	cbz	x27, 237924 <parse_token+0x1d90>
  237534:	ldr	x0, [x27]
  237538:	b	237928 <parse_token+0x1d94>
  23753c:	mov	x20, xzr
  237540:	cbz	x8, 23754c <parse_token+0x19b8>
  237544:	ldr	x0, [x8]
  237548:	b	237550 <parse_token+0x19bc>
  23754c:	mov	x0, xzr
  237550:	bl	235b80 <strna>
  237554:	cbz	x20, 237560 <parse_token+0x19cc>
  237558:	ldr	w8, [x20, #8]
  23755c:	b	237564 <parse_token+0x19d0>
  237560:	mov	w8, wzr
  237564:	str	w8, [sp, #24]
  237568:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23756c:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237570:	add	x8, x8, #0x358
  237574:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237578:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23757c:	mov	w1, #0x16                  	// #22
  237580:	add	x9, x9, #0xdc7
  237584:	add	x2, x2, #0x63
  237588:	add	x4, x4, #0x166
  23758c:	stp	x8, x0, [sp, #8]
  237590:	mov	w0, #0x3                   	// #3
  237594:	movk	w1, #0x4000, lsl #16
  237598:	mov	w3, #0x2e8                 	// #744
  23759c:	mov	x5, xzr
  2375a0:	mov	x6, xzr
  2375a4:	mov	x7, xzr
  2375a8:	stp	x9, x19, [sp, #32]
  2375ac:	str	xzr, [sp]
  2375b0:	bl	2539f0 <log_object_internal@plt>
  2375b4:	mov	w19, w25
  2375b8:	tbnz	wzr, #0, 236344 <parse_token+0x7b0>
  2375bc:	b	238b44 <parse_token+0x2fb0>
  2375c0:	mov	x0, xzr
  2375c4:	bl	235b80 <strna>
  2375c8:	cbz	x20, 2375d4 <parse_token+0x1a40>
  2375cc:	ldr	w8, [x20, #8]
  2375d0:	b	2375d8 <parse_token+0x1a44>
  2375d4:	mov	w8, wzr
  2375d8:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2375dc:	str	w8, [sp, #24]
  2375e0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2375e4:	add	x9, x9, #0x79
  2375e8:	add	x8, x8, #0x358
  2375ec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2375f0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2375f4:	mov	w1, #0x16                  	// #22
  2375f8:	add	x2, x2, #0x63
  2375fc:	add	x4, x4, #0x166
  237600:	stp	x9, x19, [sp, #32]
  237604:	stp	x8, x0, [sp, #8]
  237608:	mov	w0, #0x3                   	// #3
  23760c:	movk	w1, #0x4000, lsl #16
  237610:	mov	w3, #0x2ed                 	// #749
  237614:	b	238b30 <parse_token+0x2f9c>
  237618:	cmp	w22, #0x2
  23761c:	b.cc	237aac <parse_token+0x1f18>  // b.lo, b.ul, b.last
  237620:	ldr	x8, [x26]
  237624:	cbz	x8, 237a3c <parse_token+0x1ea8>
  237628:	ldr	x22, [x8, #8]
  23762c:	b	237a40 <parse_token+0x1eac>
  237630:	mov	x0, xzr
  237634:	bl	235b80 <strna>
  237638:	cbz	x20, 237644 <parse_token+0x1ab0>
  23763c:	ldr	w8, [x20, #8]
  237640:	b	237648 <parse_token+0x1ab4>
  237644:	mov	w8, wzr
  237648:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  23764c:	str	w8, [sp, #24]
  237650:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237654:	add	x9, x9, #0xdc7
  237658:	add	x8, x8, #0x358
  23765c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237660:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237664:	mov	w1, #0x16                  	// #22
  237668:	add	x2, x2, #0x63
  23766c:	add	x4, x4, #0x166
  237670:	stp	x9, x19, [sp, #32]
  237674:	stp	x8, x0, [sp, #8]
  237678:	mov	w0, #0x3                   	// #3
  23767c:	movk	w1, #0x4000, lsl #16
  237680:	mov	w3, #0x2db                 	// #731
  237684:	b	238b30 <parse_token+0x2f9c>
  237688:	cmp	w22, #0x2
  23768c:	b.cc	237b24 <parse_token+0x1f90>  // b.lo, b.ul, b.last
  237690:	ldr	x8, [x26]
  237694:	cbz	x8, 237ab4 <parse_token+0x1f20>
  237698:	ldr	x22, [x8, #8]
  23769c:	b	237ab8 <parse_token+0x1f24>
  2376a0:	cbz	x24, 237938 <parse_token+0x1da4>
  2376a4:	cbz	x27, 2379b4 <parse_token+0x1e20>
  2376a8:	ldr	x20, [x27, #8]
  2376ac:	b	2379b8 <parse_token+0x1e24>
  2376b0:	cmp	w22, #0x2
  2376b4:	b.cs	237830 <parse_token+0x1c9c>  // b.hs, b.nlast
  2376b8:	mov	w1, #0x19                  	// #25
  2376bc:	b	23632c <parse_token+0x798>
  2376c0:	mov	x20, xzr
  2376c4:	cbz	x27, 2376d0 <parse_token+0x1b3c>
  2376c8:	ldr	x0, [x27]
  2376cc:	b	2376d4 <parse_token+0x1b40>
  2376d0:	mov	x0, xzr
  2376d4:	bl	235b80 <strna>
  2376d8:	cbz	x20, 2376e4 <parse_token+0x1b50>
  2376dc:	ldr	w8, [x20, #8]
  2376e0:	b	2376e8 <parse_token+0x1b54>
  2376e4:	mov	w8, wzr
  2376e8:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2376ec:	str	w8, [sp, #24]
  2376f0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2376f4:	add	x9, x9, #0x79
  2376f8:	add	x8, x8, #0x358
  2376fc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237700:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237704:	mov	w1, #0x16                  	// #22
  237708:	add	x2, x2, #0x63
  23770c:	add	x4, x4, #0x166
  237710:	stp	x9, x19, [sp, #32]
  237714:	stp	x8, x0, [sp, #8]
  237718:	mov	w0, #0x3                   	// #3
  23771c:	movk	w1, #0x4000, lsl #16
  237720:	mov	w3, #0x2f9                 	// #761
  237724:	b	238b30 <parse_token+0x2f9c>
  237728:	mov	x19, xzr
  23772c:	cbz	x8, 237738 <parse_token+0x1ba4>
  237730:	ldr	x0, [x8]
  237734:	b	23773c <parse_token+0x1ba8>
  237738:	mov	x0, xzr
  23773c:	bl	235b80 <strna>
  237740:	cbz	x19, 23774c <parse_token+0x1bb8>
  237744:	ldr	w8, [x19, #8]
  237748:	b	237750 <parse_token+0x1bbc>
  23774c:	mov	w8, wzr
  237750:	str	w8, [sp, #24]
  237754:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  237758:	add	x8, x8, #0x987
  23775c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237760:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237764:	str	x24, [sp, #32]
  237768:	add	x2, x2, #0x63
  23776c:	add	x4, x4, #0x166
  237770:	stp	x8, x0, [sp, #8]
  237774:	mov	w0, #0x3                   	// #3
  237778:	mov	w3, #0x2e4                 	// #740
  23777c:	str	xzr, [sp]
  237780:	mov	w19, w25
  237784:	mov	w1, w25
  237788:	mov	x5, xzr
  23778c:	mov	x6, xzr
  237790:	mov	x7, xzr
  237794:	bl	2539f0 <log_object_internal@plt>
  237798:	tbnz	wzr, #0, 236344 <parse_token+0x7b0>
  23779c:	b	238b44 <parse_token+0x2fb0>
  2377a0:	cbz	x24, 2379c4 <parse_token+0x1e30>
  2377a4:	cbz	x27, 237c6c <parse_token+0x20d8>
  2377a8:	ldr	x20, [x27, #8]
  2377ac:	b	237c70 <parse_token+0x20dc>
  2377b0:	mov	x0, xzr
  2377b4:	bl	235b80 <strna>
  2377b8:	cbz	x20, 2377ec <parse_token+0x1c58>
  2377bc:	ldr	w8, [x20, #8]
  2377c0:	b	2377f0 <parse_token+0x1c5c>
  2377c4:	cmp	w22, #0x2
  2377c8:	b.cc	2377d8 <parse_token+0x1c44>  // b.lo, b.ul, b.last
  2377cc:	b.eq	237da4 <parse_token+0x2210>  // b.none
  2377d0:	cmp	w22, #0x3
  2377d4:	b.ne	2380b0 <parse_token+0x251c>  // b.any
  2377d8:	cmp	x27, #0x0
  2377dc:	csel	x20, x21, xzr, ne  // ne = any
  2377e0:	cbz	x27, 237cf4 <parse_token+0x2160>
  2377e4:	ldr	x0, [x27]
  2377e8:	b	237cf8 <parse_token+0x2164>
  2377ec:	mov	w8, wzr
  2377f0:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2377f4:	str	w8, [sp, #24]
  2377f8:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2377fc:	add	x9, x9, #0x79
  237800:	add	x8, x8, #0x358
  237804:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237808:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23780c:	mov	w1, #0x16                  	// #22
  237810:	add	x2, x2, #0x63
  237814:	add	x4, x4, #0x166
  237818:	stp	x9, x19, [sp, #32]
  23781c:	stp	x8, x0, [sp, #8]
  237820:	mov	w0, #0x3                   	// #3
  237824:	movk	w1, #0x4000, lsl #16
  237828:	mov	w3, #0x31f                 	// #799
  23782c:	b	238b30 <parse_token+0x2f9c>
  237830:	cmp	x27, #0x0
  237834:	csel	x20, x21, xzr, ne  // ne = any
  237838:	cbz	x27, 237bd4 <parse_token+0x2040>
  23783c:	ldr	x0, [x27]
  237840:	b	237bd8 <parse_token+0x2044>
  237844:	mov	x20, xzr
  237848:	cbz	x8, 237854 <parse_token+0x1cc0>
  23784c:	ldr	x0, [x8]
  237850:	b	237858 <parse_token+0x1cc4>
  237854:	mov	x0, xzr
  237858:	bl	235b80 <strna>
  23785c:	cbz	x20, 237868 <parse_token+0x1cd4>
  237860:	ldr	w8, [x20, #8]
  237864:	b	23786c <parse_token+0x1cd8>
  237868:	mov	w8, wzr
  23786c:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237870:	str	w8, [sp, #24]
  237874:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237878:	add	x9, x9, #0xdc7
  23787c:	add	x8, x8, #0x358
  237880:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237884:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237888:	mov	w1, #0x16                  	// #22
  23788c:	add	x2, x2, #0x63
  237890:	add	x4, x4, #0x166
  237894:	stp	x9, x19, [sp, #32]
  237898:	stp	x8, x0, [sp, #8]
  23789c:	mov	w0, #0x3                   	// #3
  2378a0:	movk	w1, #0x4000, lsl #16
  2378a4:	mov	w3, #0x2f0                 	// #752
  2378a8:	b	238b30 <parse_token+0x2f9c>
  2378ac:	cbz	x24, 237c7c <parse_token+0x20e8>
  2378b0:	cbz	x27, 237dd8 <parse_token+0x2244>
  2378b4:	ldr	x20, [x27, #8]
  2378b8:	b	237ddc <parse_token+0x2248>
  2378bc:	mov	x20, xzr
  2378c0:	cbz	x8, 2378cc <parse_token+0x1d38>
  2378c4:	ldr	x0, [x8]
  2378c8:	b	2378d0 <parse_token+0x1d3c>
  2378cc:	mov	x0, xzr
  2378d0:	bl	235b80 <strna>
  2378d4:	cbz	x20, 2378e0 <parse_token+0x1d4c>
  2378d8:	ldr	w8, [x20, #8]
  2378dc:	b	2378e4 <parse_token+0x1d50>
  2378e0:	mov	w8, wzr
  2378e4:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2378e8:	str	w8, [sp, #24]
  2378ec:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2378f0:	add	x9, x9, #0xdc7
  2378f4:	add	x8, x8, #0x358
  2378f8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2378fc:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237900:	mov	w1, #0x16                  	// #22
  237904:	add	x2, x2, #0x63
  237908:	add	x4, x4, #0x166
  23790c:	stp	x9, x19, [sp, #32]
  237910:	stp	x8, x0, [sp, #8]
  237914:	mov	w0, #0x3                   	// #3
  237918:	movk	w1, #0x4000, lsl #16
  23791c:	mov	w3, #0x2fc                 	// #764
  237920:	b	238b30 <parse_token+0x2f9c>
  237924:	mov	x0, xzr
  237928:	bl	235b80 <strna>
  23792c:	cbz	x20, 237958 <parse_token+0x1dc4>
  237930:	ldr	w8, [x20, #8]
  237934:	b	23795c <parse_token+0x1dc8>
  237938:	cmp	w22, #0x2
  23793c:	b.cc	23794c <parse_token+0x1db8>  // b.lo, b.ul, b.last
  237940:	b.eq	237eb0 <parse_token+0x231c>  // b.none
  237944:	cmp	w22, #0x3
  237948:	b.ne	238354 <parse_token+0x27c0>  // b.any
  23794c:	cbz	x27, 237e48 <parse_token+0x22b4>
  237950:	ldr	x20, [x27, #8]
  237954:	b	237e4c <parse_token+0x22b8>
  237958:	mov	w8, wzr
  23795c:	str	w8, [sp, #24]
  237960:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237964:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  237968:	add	x8, x8, #0x358
  23796c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237970:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237974:	mov	w1, #0x16                  	// #22
  237978:	add	x9, x9, #0x79
  23797c:	add	x2, x2, #0x63
  237980:	add	x4, x4, #0x166
  237984:	stp	x8, x0, [sp, #8]
  237988:	mov	w0, #0x3                   	// #3
  23798c:	movk	w1, #0x4000, lsl #16
  237990:	mov	w3, #0x328                 	// #808
  237994:	stp	x9, x19, [sp, #32]
  237998:	b	237d48 <parse_token+0x21b4>
  23799c:	mov	x0, x24
  2379a0:	bl	2358dc <isempty>
  2379a4:	tbz	w0, #0, 237d68 <parse_token+0x21d4>
  2379a8:	cbz	x27, 237fe8 <parse_token+0x2454>
  2379ac:	ldr	x20, [x27, #8]
  2379b0:	b	237fec <parse_token+0x2458>
  2379b4:	mov	x20, xzr
  2379b8:	cbz	x27, 2379e4 <parse_token+0x1e50>
  2379bc:	ldr	x0, [x27]
  2379c0:	b	2379e8 <parse_token+0x1e54>
  2379c4:	cmp	w22, #0x2
  2379c8:	b.cc	2379d8 <parse_token+0x1e44>  // b.lo, b.ul, b.last
  2379cc:	b.eq	237fdc <parse_token+0x2448>  // b.none
  2379d0:	cmp	w22, #0x3
  2379d4:	b.ne	238624 <parse_token+0x2a90>  // b.any
  2379d8:	cbz	x27, 237f74 <parse_token+0x23e0>
  2379dc:	ldr	x20, [x27, #8]
  2379e0:	b	237f78 <parse_token+0x23e4>
  2379e4:	mov	x0, xzr
  2379e8:	bl	235b80 <strna>
  2379ec:	cbz	x20, 2379f8 <parse_token+0x1e64>
  2379f0:	ldr	w8, [x20, #8]
  2379f4:	b	2379fc <parse_token+0x1e68>
  2379f8:	mov	w8, wzr
  2379fc:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  237a00:	str	w8, [sp, #24]
  237a04:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237a08:	add	x9, x9, #0x79
  237a0c:	add	x8, x8, #0x358
  237a10:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237a14:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237a18:	mov	w1, #0x16                  	// #22
  237a1c:	add	x2, x2, #0x63
  237a20:	add	x4, x4, #0x166
  237a24:	stp	x9, x19, [sp, #32]
  237a28:	stp	x8, x0, [sp, #8]
  237a2c:	mov	w0, #0x3                   	// #3
  237a30:	movk	w1, #0x4000, lsl #16
  237a34:	mov	w3, #0x34b                 	// #843
  237a38:	b	238584 <parse_token+0x29f0>
  237a3c:	mov	x22, xzr
  237a40:	cbz	x8, 237a4c <parse_token+0x1eb8>
  237a44:	ldr	x0, [x8]
  237a48:	b	237a50 <parse_token+0x1ebc>
  237a4c:	mov	x0, xzr
  237a50:	bl	235b80 <strna>
  237a54:	cbz	x22, 237a60 <parse_token+0x1ecc>
  237a58:	ldr	w8, [x22, #8]
  237a5c:	b	237a64 <parse_token+0x1ed0>
  237a60:	mov	w8, wzr
  237a64:	str	w8, [sp, #24]
  237a68:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  237a6c:	add	x8, x8, #0xf32
  237a70:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237a74:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237a78:	add	x2, x2, #0x63
  237a7c:	add	x4, x4, #0x166
  237a80:	stp	x8, x0, [sp, #8]
  237a84:	mov	w0, #0x7                   	// #7
  237a88:	mov	w3, #0x2f2                 	// #754
  237a8c:	mov	w1, wzr
  237a90:	mov	x5, xzr
  237a94:	mov	x6, xzr
  237a98:	mov	x7, xzr
  237a9c:	str	x19, [sp, #32]
  237aa0:	str	xzr, [sp]
  237aa4:	bl	2539f0 <log_object_internal@plt>
  237aa8:	mov	w22, wzr
  237aac:	mov	w1, #0x12                  	// #18
  237ab0:	b	23632c <parse_token+0x798>
  237ab4:	mov	x22, xzr
  237ab8:	cbz	x8, 237ac4 <parse_token+0x1f30>
  237abc:	ldr	x0, [x8]
  237ac0:	b	237ac8 <parse_token+0x1f34>
  237ac4:	mov	x0, xzr
  237ac8:	bl	235b80 <strna>
  237acc:	cbz	x22, 237ad8 <parse_token+0x1f44>
  237ad0:	ldr	w8, [x22, #8]
  237ad4:	b	237adc <parse_token+0x1f48>
  237ad8:	mov	w8, wzr
  237adc:	str	w8, [sp, #24]
  237ae0:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  237ae4:	add	x8, x8, #0xf32
  237ae8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237aec:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237af0:	add	x2, x2, #0x63
  237af4:	add	x4, x4, #0x166
  237af8:	stp	x8, x0, [sp, #8]
  237afc:	mov	w0, #0x7                   	// #7
  237b00:	mov	w3, #0x2fe                 	// #766
  237b04:	mov	w1, wzr
  237b08:	mov	x5, xzr
  237b0c:	mov	x6, xzr
  237b10:	mov	x7, xzr
  237b14:	str	x19, [sp, #32]
  237b18:	str	xzr, [sp]
  237b1c:	bl	2539f0 <log_object_internal@plt>
  237b20:	mov	w22, wzr
  237b24:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  237b28:	add	x1, x1, #0xd58
  237b2c:	mov	x0, x24
  237b30:	bl	253bc0 <strcmp@plt>
  237b34:	cbz	w0, 237bac <parse_token+0x2018>
  237b38:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  237b3c:	add	x1, x1, #0x379
  237b40:	mov	x0, x24
  237b44:	bl	253bc0 <strcmp@plt>
  237b48:	cbz	w0, 237bb4 <parse_token+0x2020>
  237b4c:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  237b50:	add	x1, x1, #0x39c
  237b54:	mov	x0, x24
  237b58:	bl	253bc0 <strcmp@plt>
  237b5c:	cbz	w0, 237c50 <parse_token+0x20bc>
  237b60:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  237b64:	add	x1, x1, #0x73e
  237b68:	mov	x0, x24
  237b6c:	bl	253bc0 <strcmp@plt>
  237b70:	cbz	w0, 237dd0 <parse_token+0x223c>
  237b74:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  237b78:	add	x1, x1, #0x279
  237b7c:	mov	x0, x24
  237b80:	bl	253bc0 <strcmp@plt>
  237b84:	cbz	w0, 237ed4 <parse_token+0x2340>
  237b88:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  237b8c:	add	x1, x1, #0x244
  237b90:	mov	x0, x24
  237b94:	bl	253bc0 <strcmp@plt>
  237b98:	cbz	w0, 238244 <parse_token+0x26b0>
  237b9c:	ldr	x8, [x26]
  237ba0:	cbz	x8, 238430 <parse_token+0x289c>
  237ba4:	ldr	x20, [x8, #8]
  237ba8:	b	238434 <parse_token+0x28a0>
  237bac:	mov	w1, #0x13                  	// #19
  237bb0:	b	23632c <parse_token+0x798>
  237bb4:	mov	x0, x20
  237bb8:	bl	23f160 <udev_builtin_lookup>
  237bbc:	tbnz	w0, #31, 237e40 <parse_token+0x22ac>
  237bc0:	ldr	x8, [x26]
  237bc4:	mov	w23, w0
  237bc8:	cbz	x8, 237edc <parse_token+0x2348>
  237bcc:	ldr	x24, [x8, #8]
  237bd0:	b	237ee0 <parse_token+0x234c>
  237bd4:	mov	x0, xzr
  237bd8:	bl	235b80 <strna>
  237bdc:	cbz	x20, 237be8 <parse_token+0x2054>
  237be0:	ldr	w8, [x20, #8]
  237be4:	b	237bec <parse_token+0x2058>
  237be8:	mov	w8, wzr
  237bec:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237bf0:	str	w8, [sp, #24]
  237bf4:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237bf8:	add	x9, x9, #0xdc7
  237bfc:	add	x8, x8, #0x358
  237c00:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237c04:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237c08:	mov	w1, #0x16                  	// #22
  237c0c:	add	x2, x2, #0x63
  237c10:	add	x4, x4, #0x166
  237c14:	stp	x9, x19, [sp, #32]
  237c18:	stp	x8, x0, [sp, #8]
  237c1c:	mov	w0, #0x3                   	// #3
  237c20:	movk	w1, #0x4000, lsl #16
  237c24:	mov	w3, #0x321                 	// #801
  237c28:	b	238b30 <parse_token+0x2f9c>
  237c2c:	cmp	w22, #0x3
  237c30:	b.hi	2381a4 <parse_token+0x2610>  // b.pmore
  237c34:	cmp	w22, #0x2
  237c38:	b.eq	2381a4 <parse_token+0x2610>  // b.none
  237c3c:	cmp	x27, #0x0
  237c40:	csel	x20, x21, xzr, ne  // ne = any
  237c44:	cbz	x27, 23814c <parse_token+0x25b8>
  237c48:	ldr	x0, [x27]
  237c4c:	b	238150 <parse_token+0x25bc>
  237c50:	mov	x0, x20
  237c54:	bl	23f160 <udev_builtin_lookup>
  237c58:	tbnz	w0, #31, 237eec <parse_token+0x2358>
  237c5c:	sxtw	x8, w0
  237c60:	add	x4, x8, #0x1
  237c64:	mov	w1, #0x15                  	// #21
  237c68:	b	237078 <parse_token+0x14e4>
  237c6c:	mov	x20, xzr
  237c70:	cbz	x27, 237c9c <parse_token+0x2108>
  237c74:	ldr	x0, [x27]
  237c78:	b	237ca0 <parse_token+0x210c>
  237c7c:	cmp	w22, #0x2
  237c80:	b.cc	237c90 <parse_token+0x20fc>  // b.lo, b.ul, b.last
  237c84:	b.eq	2382d8 <parse_token+0x2744>  // b.none
  237c88:	cmp	w22, #0x3
  237c8c:	b.ne	238790 <parse_token+0x2bfc>  // b.any
  237c90:	cbz	x27, 238270 <parse_token+0x26dc>
  237c94:	ldr	x20, [x27, #8]
  237c98:	b	238274 <parse_token+0x26e0>
  237c9c:	mov	x0, xzr
  237ca0:	bl	235b80 <strna>
  237ca4:	cbz	x20, 237cb0 <parse_token+0x211c>
  237ca8:	ldr	w8, [x20, #8]
  237cac:	b	237cb4 <parse_token+0x2120>
  237cb0:	mov	w8, wzr
  237cb4:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  237cb8:	str	w8, [sp, #24]
  237cbc:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237cc0:	add	x9, x9, #0x79
  237cc4:	add	x8, x8, #0x358
  237cc8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237ccc:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237cd0:	mov	w1, #0x16                  	// #22
  237cd4:	add	x2, x2, #0x63
  237cd8:	add	x4, x4, #0x166
  237cdc:	stp	x9, x19, [sp, #32]
  237ce0:	stp	x8, x0, [sp, #8]
  237ce4:	mov	w0, #0x3                   	// #3
  237ce8:	movk	w1, #0x4000, lsl #16
  237cec:	mov	w3, #0x367                 	// #871
  237cf0:	b	238584 <parse_token+0x29f0>
  237cf4:	mov	x0, xzr
  237cf8:	bl	235b80 <strna>
  237cfc:	cbz	x20, 237d08 <parse_token+0x2174>
  237d00:	ldr	w8, [x20, #8]
  237d04:	b	237d0c <parse_token+0x2178>
  237d08:	mov	w8, wzr
  237d0c:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237d10:	str	w8, [sp, #24]
  237d14:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237d18:	add	x9, x9, #0xdc7
  237d1c:	add	x8, x8, #0x358
  237d20:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237d24:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237d28:	mov	w1, #0x16                  	// #22
  237d2c:	add	x2, x2, #0x63
  237d30:	add	x4, x4, #0x166
  237d34:	stp	x9, x19, [sp, #32]
  237d38:	stp	x8, x0, [sp, #8]
  237d3c:	mov	w0, #0x3                   	// #3
  237d40:	movk	w1, #0x4000, lsl #16
  237d44:	mov	w3, #0x32a                 	// #810
  237d48:	mov	x5, xzr
  237d4c:	mov	x6, xzr
  237d50:	mov	x7, xzr
  237d54:	str	xzr, [sp]
  237d58:	bl	2539f0 <log_object_internal@plt>
  237d5c:	mov	w9, #0x1                   	// #1
  237d60:	cbnz	w9, 238b44 <parse_token+0x2fb0>
  237d64:	b	236344 <parse_token+0x7b0>
  237d68:	mov	w3, #0x1                   	// #1
  237d6c:	mov	x0, x23
  237d70:	mov	x1, x19
  237d74:	mov	x2, x20
  237d78:	bl	2394a4 <check_value_format_and_warn>
  237d7c:	cmp	w22, #0x2
  237d80:	b.cc	237d94 <parse_token+0x2200>  // b.lo, b.ul, b.last
  237d84:	cmp	w22, #0x5
  237d88:	b.eq	238418 <parse_token+0x2884>  // b.none
  237d8c:	cmp	w22, #0x3
  237d90:	b.ne	2388a0 <parse_token+0x2d0c>  // b.any
  237d94:	ldr	x8, [x26]
  237d98:	cbz	x8, 2383b0 <parse_token+0x281c>
  237d9c:	ldr	x20, [x8, #8]
  237da0:	b	2383b4 <parse_token+0x2820>
  237da4:	cmp	x27, #0x0
  237da8:	csel	x22, x21, xzr, ne  // ne = any
  237dac:	cbz	x27, 238050 <parse_token+0x24bc>
  237db0:	ldr	x0, [x27]
  237db4:	b	238054 <parse_token+0x24c0>
  237db8:	cbz	x24, 23824c <parse_token+0x26b8>
  237dbc:	cmp	x27, #0x0
  237dc0:	csel	x20, x21, xzr, ne  // ne = any
  237dc4:	cbz	x27, 238498 <parse_token+0x2904>
  237dc8:	ldr	x0, [x27]
  237dcc:	b	23849c <parse_token+0x2908>
  237dd0:	mov	w1, #0x16                  	// #22
  237dd4:	b	23632c <parse_token+0x798>
  237dd8:	mov	x20, xzr
  237ddc:	cbz	x27, 237de8 <parse_token+0x2254>
  237de0:	ldr	x0, [x27]
  237de4:	b	237dec <parse_token+0x2258>
  237de8:	mov	x0, xzr
  237dec:	bl	235b80 <strna>
  237df0:	cbz	x20, 237dfc <parse_token+0x2268>
  237df4:	ldr	w8, [x20, #8]
  237df8:	b	237e00 <parse_token+0x226c>
  237dfc:	mov	w8, wzr
  237e00:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  237e04:	str	w8, [sp, #24]
  237e08:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237e0c:	add	x9, x9, #0x79
  237e10:	add	x8, x8, #0x358
  237e14:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237e18:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237e1c:	mov	w1, #0x16                  	// #22
  237e20:	add	x2, x2, #0x63
  237e24:	add	x4, x4, #0x166
  237e28:	stp	x9, x19, [sp, #32]
  237e2c:	stp	x8, x0, [sp, #8]
  237e30:	mov	w0, #0x3                   	// #3
  237e34:	movk	w1, #0x4000, lsl #16
  237e38:	mov	w3, #0x383                 	// #899
  237e3c:	b	238584 <parse_token+0x29f0>
  237e40:	mov	w1, #0x14                  	// #20
  237e44:	b	23632c <parse_token+0x798>
  237e48:	mov	x20, xzr
  237e4c:	cbz	x27, 237e58 <parse_token+0x22c4>
  237e50:	ldr	x0, [x27]
  237e54:	b	237e5c <parse_token+0x22c8>
  237e58:	mov	x0, xzr
  237e5c:	bl	235b80 <strna>
  237e60:	cbz	x20, 237e6c <parse_token+0x22d8>
  237e64:	ldr	w8, [x20, #8]
  237e68:	b	237e70 <parse_token+0x22dc>
  237e6c:	mov	w8, wzr
  237e70:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237e74:	str	w8, [sp, #24]
  237e78:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237e7c:	add	x9, x9, #0xdc7
  237e80:	add	x8, x8, #0x358
  237e84:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237e88:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237e8c:	mov	w1, #0x16                  	// #22
  237e90:	add	x2, x2, #0x63
  237e94:	add	x4, x4, #0x166
  237e98:	stp	x9, x19, [sp, #32]
  237e9c:	stp	x8, x0, [sp, #8]
  237ea0:	mov	w0, #0x3                   	// #3
  237ea4:	movk	w1, #0x4000, lsl #16
  237ea8:	mov	w3, #0x34d                 	// #845
  237eac:	b	238584 <parse_token+0x29f0>
  237eb0:	cbz	x27, 2382e4 <parse_token+0x2750>
  237eb4:	ldr	x22, [x27, #8]
  237eb8:	b	2382e8 <parse_token+0x2754>
  237ebc:	cbz	x24, 2384ac <parse_token+0x2918>
  237ec0:	cmp	x27, #0x0
  237ec4:	csel	x20, x21, xzr, ne  // ne = any
  237ec8:	cbz	x27, 238690 <parse_token+0x2afc>
  237ecc:	ldr	x0, [x27]
  237ed0:	b	238694 <parse_token+0x2b00>
  237ed4:	mov	w1, #0x17                  	// #23
  237ed8:	b	23632c <parse_token+0x798>
  237edc:	mov	x24, xzr
  237ee0:	cbz	x8, 237efc <parse_token+0x2368>
  237ee4:	ldr	x0, [x8]
  237ee8:	b	237f00 <parse_token+0x236c>
  237eec:	ldr	x8, [x26]
  237ef0:	cbz	x8, 238528 <parse_token+0x2994>
  237ef4:	ldr	x19, [x8, #8]
  237ef8:	b	23852c <parse_token+0x2998>
  237efc:	mov	x0, xzr
  237f00:	bl	235b80 <strna>
  237f04:	cbz	x24, 237f10 <parse_token+0x237c>
  237f08:	ldr	w8, [x24, #8]
  237f0c:	b	237f14 <parse_token+0x2380>
  237f10:	mov	w8, wzr
  237f14:	str	w8, [sp, #24]
  237f18:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  237f1c:	add	x8, x8, #0x490
  237f20:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237f24:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237f28:	add	x2, x2, #0x63
  237f2c:	add	x4, x4, #0x166
  237f30:	stp	x8, x0, [sp, #8]
  237f34:	mov	w0, #0x7                   	// #7
  237f38:	mov	w3, #0x309                 	// #777
  237f3c:	mov	w1, wzr
  237f40:	mov	x5, xzr
  237f44:	mov	x6, xzr
  237f48:	mov	x7, xzr
  237f4c:	stp	x20, x19, [sp, #32]
  237f50:	str	xzr, [sp]
  237f54:	bl	2539f0 <log_object_internal@plt>
  237f58:	sxtw	x8, w23
  237f5c:	add	x4, x8, #0x1
  237f60:	mov	w1, #0x15                  	// #21
  237f64:	mov	x0, x21
  237f68:	mov	w2, w22
  237f6c:	mov	x3, x20
  237f70:	b	23633c <parse_token+0x7a8>
  237f74:	mov	x20, xzr
  237f78:	cbz	x27, 237f84 <parse_token+0x23f0>
  237f7c:	ldr	x0, [x27]
  237f80:	b	237f88 <parse_token+0x23f4>
  237f84:	mov	x0, xzr
  237f88:	bl	235b80 <strna>
  237f8c:	cbz	x20, 237f98 <parse_token+0x2404>
  237f90:	ldr	w8, [x20, #8]
  237f94:	b	237f9c <parse_token+0x2408>
  237f98:	mov	w8, wzr
  237f9c:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  237fa0:	str	w8, [sp, #24]
  237fa4:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  237fa8:	add	x9, x9, #0xdc7
  237fac:	add	x8, x8, #0x358
  237fb0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  237fb4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  237fb8:	mov	w1, #0x16                  	// #22
  237fbc:	add	x2, x2, #0x63
  237fc0:	add	x4, x4, #0x166
  237fc4:	stp	x9, x19, [sp, #32]
  237fc8:	stp	x8, x0, [sp, #8]
  237fcc:	mov	w0, #0x3                   	// #3
  237fd0:	movk	w1, #0x4000, lsl #16
  237fd4:	mov	w3, #0x369                 	// #873
  237fd8:	b	238584 <parse_token+0x29f0>
  237fdc:	cbz	x27, 2385b4 <parse_token+0x2a20>
  237fe0:	ldr	x22, [x27, #8]
  237fe4:	b	2385b8 <parse_token+0x2a24>
  237fe8:	mov	x20, xzr
  237fec:	cbz	x27, 237ff8 <parse_token+0x2464>
  237ff0:	ldr	x0, [x27]
  237ff4:	b	237ffc <parse_token+0x2468>
  237ff8:	mov	x0, xzr
  237ffc:	bl	235b80 <strna>
  238000:	cbz	x20, 23800c <parse_token+0x2478>
  238004:	ldr	w8, [x20, #8]
  238008:	b	238010 <parse_token+0x247c>
  23800c:	mov	w8, wzr
  238010:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  238014:	str	w8, [sp, #24]
  238018:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23801c:	add	x9, x9, #0x79
  238020:	add	x8, x8, #0x358
  238024:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238028:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23802c:	mov	w1, #0x16                  	// #22
  238030:	add	x2, x2, #0x63
  238034:	add	x4, x4, #0x166
  238038:	stp	x9, x19, [sp, #32]
  23803c:	stp	x8, x0, [sp, #8]
  238040:	mov	w0, #0x3                   	// #3
  238044:	movk	w1, #0x4000, lsl #16
  238048:	mov	w3, #0x393                 	// #915
  23804c:	b	238b30 <parse_token+0x2f9c>
  238050:	mov	x0, xzr
  238054:	bl	235b80 <strna>
  238058:	cbz	x22, 238064 <parse_token+0x24d0>
  23805c:	ldr	w8, [x22, #8]
  238060:	b	238068 <parse_token+0x24d4>
  238064:	mov	w8, wzr
  238068:	str	w8, [sp, #24]
  23806c:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  238070:	add	x8, x8, #0x72b
  238074:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238078:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23807c:	add	x2, x2, #0x63
  238080:	add	x4, x4, #0x166
  238084:	stp	x8, x0, [sp, #8]
  238088:	mov	w0, #0x7                   	// #7
  23808c:	mov	w3, #0x32c                 	// #812
  238090:	mov	w1, wzr
  238094:	mov	x5, xzr
  238098:	mov	x6, xzr
  23809c:	mov	x7, xzr
  2380a0:	str	x19, [sp, #32]
  2380a4:	str	xzr, [sp]
  2380a8:	bl	2539f0 <log_object_internal@plt>
  2380ac:	mov	w22, #0x4                   	// #4
  2380b0:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2380b4:	add	x1, x1, #0x23d
  2380b8:	mov	x0, x20
  2380bc:	bl	253bc0 <strcmp@plt>
  2380c0:	cbz	w0, 23813c <parse_token+0x25a8>
  2380c4:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  2380c8:	add	x1, x1, #0x765
  2380cc:	mov	x0, x20
  2380d0:	bl	253bc0 <strcmp@plt>
  2380d4:	cbz	w0, 238144 <parse_token+0x25b0>
  2380d8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2380dc:	add	x1, x1, #0x93c
  2380e0:	mov	x0, x20
  2380e4:	bl	253bc0 <strcmp@plt>
  2380e8:	cbz	w0, 238268 <parse_token+0x26d4>
  2380ec:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2380f0:	add	x1, x1, #0x250
  2380f4:	mov	x0, x20
  2380f8:	bl	253bc0 <strcmp@plt>
  2380fc:	cbz	w0, 238510 <parse_token+0x297c>
  238100:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  238104:	add	x1, x1, #0x610
  238108:	mov	x0, x20
  23810c:	bl	253bc0 <strcmp@plt>
  238110:	cbz	w0, 2386e8 <parse_token+0x2b54>
  238114:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  238118:	add	x1, x1, #0x618
  23811c:	mov	x0, x20
  238120:	bl	2390a8 <startswith>
  238124:	cbz	x0, 2388bc <parse_token+0x2d28>
  238128:	mov	x3, x0
  23812c:	mov	w1, #0x26                  	// #38
  238130:	mov	x0, x21
  238134:	mov	w2, w22
  238138:	b	2386f8 <parse_token+0x2b64>
  23813c:	mov	w1, #0x1a                  	// #26
  238140:	b	2386ec <parse_token+0x2b58>
  238144:	mov	w1, #0x1b                  	// #27
  238148:	b	2386ec <parse_token+0x2b58>
  23814c:	mov	x0, xzr
  238150:	bl	235b80 <strna>
  238154:	cbz	x20, 238160 <parse_token+0x25cc>
  238158:	ldr	w8, [x20, #8]
  23815c:	b	238164 <parse_token+0x25d0>
  238160:	mov	w8, wzr
  238164:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  238168:	str	w8, [sp, #24]
  23816c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  238170:	add	x9, x9, #0xdc7
  238174:	add	x8, x8, #0x358
  238178:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23817c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238180:	mov	w1, #0x16                  	// #22
  238184:	add	x2, x2, #0x63
  238188:	add	x4, x4, #0x166
  23818c:	stp	x9, x19, [sp, #32]
  238190:	stp	x8, x0, [sp, #8]
  238194:	mov	w0, #0x3                   	// #3
  238198:	movk	w1, #0x4000, lsl #16
  23819c:	mov	w3, #0x39f                 	// #927
  2381a0:	b	238b30 <parse_token+0x2f9c>
  2381a4:	mov	w3, #0x1                   	// #1
  2381a8:	mov	x0, x23
  2381ac:	mov	x1, x19
  2381b0:	mov	x2, x20
  2381b4:	bl	2394a4 <check_value_format_and_warn>
  2381b8:	cbz	x24, 238428 <parse_token+0x2894>
  2381bc:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  2381c0:	add	x1, x1, #0x379
  2381c4:	mov	x0, x24
  2381c8:	bl	253bc0 <strcmp@plt>
  2381cc:	cbz	w0, 238428 <parse_token+0x2894>
  2381d0:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  2381d4:	add	x1, x1, #0x39c
  2381d8:	mov	x0, x24
  2381dc:	bl	253bc0 <strcmp@plt>
  2381e0:	cbz	w0, 2389e0 <parse_token+0x2e4c>
  2381e4:	ldr	x8, [x26]
  2381e8:	cbz	x8, 238acc <parse_token+0x2f38>
  2381ec:	ldr	x20, [x8, #8]
  2381f0:	b	238ad0 <parse_token+0x2f3c>
  2381f4:	mov	x0, xzr
  2381f8:	bl	235b80 <strna>
  2381fc:	cbz	x20, 238208 <parse_token+0x2674>
  238200:	ldr	w8, [x20, #8]
  238204:	b	23820c <parse_token+0x2678>
  238208:	mov	w8, wzr
  23820c:	str	w8, [sp, #24]
  238210:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  238214:	add	x8, x8, #0xc16
  238218:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23821c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238220:	mov	w1, #0x16                  	// #22
  238224:	str	x19, [sp, #32]
  238228:	add	x2, x2, #0x63
  23822c:	add	x4, x4, #0x166
  238230:	stp	x8, x0, [sp, #8]
  238234:	mov	w0, #0x3                   	// #3
  238238:	movk	w1, #0x4000, lsl #16
  23823c:	mov	w3, #0x3c4                 	// #964
  238240:	b	238b30 <parse_token+0x2f9c>
  238244:	mov	w1, #0x18                  	// #24
  238248:	b	23632c <parse_token+0x798>
  23824c:	cmp	w22, #0x4
  238250:	b.ne	2385a0 <parse_token+0x2a0c>  // b.any
  238254:	ldr	w8, [x21, #12]
  238258:	tbnz	w8, #3, 2388a8 <parse_token+0x2d14>
  23825c:	orr	w8, w8, #0x8
  238260:	str	x20, [x21, #24]
  238264:	b	2384c0 <parse_token+0x292c>
  238268:	mov	w1, #0x1c                  	// #28
  23826c:	b	2386ec <parse_token+0x2b58>
  238270:	mov	x20, xzr
  238274:	cbz	x27, 238280 <parse_token+0x26ec>
  238278:	ldr	x0, [x27]
  23827c:	b	238284 <parse_token+0x26f0>
  238280:	mov	x0, xzr
  238284:	bl	235b80 <strna>
  238288:	cbz	x20, 238294 <parse_token+0x2700>
  23828c:	ldr	w8, [x20, #8]
  238290:	b	238298 <parse_token+0x2704>
  238294:	mov	w8, wzr
  238298:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  23829c:	str	w8, [sp, #24]
  2382a0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2382a4:	add	x9, x9, #0xdc7
  2382a8:	add	x8, x8, #0x358
  2382ac:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2382b0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2382b4:	mov	w1, #0x16                  	// #22
  2382b8:	add	x2, x2, #0x63
  2382bc:	add	x4, x4, #0x166
  2382c0:	stp	x9, x19, [sp, #32]
  2382c4:	stp	x8, x0, [sp, #8]
  2382c8:	mov	w0, #0x3                   	// #3
  2382cc:	movk	w1, #0x4000, lsl #16
  2382d0:	mov	w3, #0x385                 	// #901
  2382d4:	b	238584 <parse_token+0x29f0>
  2382d8:	cbz	x27, 238720 <parse_token+0x2b8c>
  2382dc:	ldr	x22, [x27, #8]
  2382e0:	b	238724 <parse_token+0x2b90>
  2382e4:	mov	x22, xzr
  2382e8:	cbz	x27, 2382f4 <parse_token+0x2760>
  2382ec:	ldr	x0, [x27]
  2382f0:	b	2382f8 <parse_token+0x2764>
  2382f4:	mov	x0, xzr
  2382f8:	bl	235b80 <strna>
  2382fc:	cbz	x22, 238308 <parse_token+0x2774>
  238300:	ldr	w8, [x22, #8]
  238304:	b	23830c <parse_token+0x2778>
  238308:	mov	w8, wzr
  23830c:	str	w8, [sp, #24]
  238310:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  238314:	add	x8, x8, #0x4cd
  238318:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23831c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238320:	add	x2, x2, #0x63
  238324:	add	x4, x4, #0x166
  238328:	stp	x8, x0, [sp, #8]
  23832c:	mov	w0, #0x4                   	// #4
  238330:	mov	w3, #0x34f                 	// #847
  238334:	mov	w1, wzr
  238338:	mov	x5, xzr
  23833c:	mov	x6, xzr
  238340:	mov	x7, xzr
  238344:	str	x19, [sp, #32]
  238348:	str	xzr, [sp]
  23834c:	mov	w22, #0x4                   	// #4
  238350:	bl	2539f0 <log_object_internal@plt>
  238354:	add	x1, sp, #0x3c
  238358:	mov	x0, x20
  23835c:	bl	2544d0 <parse_uid@plt>
  238360:	tbnz	w0, #31, 238370 <parse_token+0x27dc>
  238364:	ldr	w8, [sp, #60]
  238368:	mov	w1, #0x22                  	// #34
  23836c:	b	2387a8 <parse_token+0x2c14>
  238370:	ldr	w8, [x23, #8]
  238374:	cmp	w8, #0x2
  238378:	b.ne	238388 <parse_token+0x27f4>  // b.any
  23837c:	mov	x0, x20
  238380:	bl	2397bc <rule_get_substitution_type>
  238384:	cbz	w0, 238808 <parse_token+0x2c74>
  238388:	ldr	w8, [x23, #8]
  23838c:	cbz	w8, 238680 <parse_token+0x2aec>
  238390:	mov	w3, #0x1                   	// #1
  238394:	mov	x0, x23
  238398:	mov	x1, x19
  23839c:	mov	x2, x20
  2383a0:	mov	w24, #0x1                   	// #1
  2383a4:	bl	2394a4 <check_value_format_and_warn>
  2383a8:	mov	w1, #0x1f                  	// #31
  2383ac:	b	2387d8 <parse_token+0x2c44>
  2383b0:	mov	x20, xzr
  2383b4:	cbz	x8, 2383c0 <parse_token+0x282c>
  2383b8:	ldr	x0, [x8]
  2383bc:	b	2383c4 <parse_token+0x2830>
  2383c0:	mov	x0, xzr
  2383c4:	bl	235b80 <strna>
  2383c8:	cbz	x20, 2383d4 <parse_token+0x2840>
  2383cc:	ldr	w8, [x20, #8]
  2383d0:	b	2383d8 <parse_token+0x2844>
  2383d4:	mov	w8, wzr
  2383d8:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2383dc:	str	w8, [sp, #24]
  2383e0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2383e4:	add	x9, x9, #0xdc7
  2383e8:	add	x8, x8, #0x358
  2383ec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2383f0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2383f4:	mov	w1, #0x16                  	// #22
  2383f8:	add	x2, x2, #0x63
  2383fc:	add	x4, x4, #0x166
  238400:	stp	x9, x19, [sp, #32]
  238404:	stp	x8, x0, [sp, #8]
  238408:	mov	w0, #0x3                   	// #3
  23840c:	movk	w1, #0x4000, lsl #16
  238410:	mov	w3, #0x396                 	// #918
  238414:	b	238b30 <parse_token+0x2f9c>
  238418:	ldr	x8, [x26]
  23841c:	cbz	x8, 238830 <parse_token+0x2c9c>
  238420:	ldr	x22, [x8, #8]
  238424:	b	238834 <parse_token+0x2ca0>
  238428:	mov	w1, #0x2e                  	// #46
  23842c:	b	23632c <parse_token+0x798>
  238430:	mov	x20, xzr
  238434:	cbz	x8, 238440 <parse_token+0x28ac>
  238438:	ldr	x0, [x8]
  23843c:	b	238444 <parse_token+0x28b0>
  238440:	mov	x0, xzr
  238444:	bl	235b80 <strna>
  238448:	cbz	x20, 238454 <parse_token+0x28c0>
  23844c:	ldr	w8, [x20, #8]
  238450:	b	238458 <parse_token+0x28c4>
  238454:	mov	w8, wzr
  238458:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  23845c:	str	w8, [sp, #24]
  238460:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  238464:	add	x9, x9, #0x79
  238468:	add	x8, x8, #0x358
  23846c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238470:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238474:	mov	w1, #0x16                  	// #22
  238478:	add	x2, x2, #0x63
  23847c:	add	x4, x4, #0x166
  238480:	stp	x9, x19, [sp, #32]
  238484:	stp	x8, x0, [sp, #8]
  238488:	mov	w0, #0x3                   	// #3
  23848c:	movk	w1, #0x4000, lsl #16
  238490:	mov	w3, #0x31c                 	// #796
  238494:	b	238b30 <parse_token+0x2f9c>
  238498:	mov	x0, xzr
  23849c:	bl	235b80 <strna>
  2384a0:	cbz	x20, 2384cc <parse_token+0x2938>
  2384a4:	ldr	w8, [x20, #8]
  2384a8:	b	2384d0 <parse_token+0x293c>
  2384ac:	cmp	w22, #0x4
  2384b0:	b.ne	23870c <parse_token+0x2b78>  // b.any
  2384b4:	ldr	w8, [x21, #12]
  2384b8:	str	x20, [x21, #16]
  2384bc:	orr	w8, w8, #0x10
  2384c0:	str	w8, [x21, #12]
  2384c4:	mov	w0, #0x1                   	// #1
  2384c8:	b	238b44 <parse_token+0x2fb0>
  2384cc:	mov	w8, wzr
  2384d0:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2384d4:	str	w8, [sp, #24]
  2384d8:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2384dc:	add	x9, x9, #0x79
  2384e0:	add	x8, x8, #0x358
  2384e4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2384e8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2384ec:	mov	w1, #0x16                  	// #22
  2384f0:	add	x2, x2, #0x63
  2384f4:	add	x4, x4, #0x166
  2384f8:	stp	x9, x19, [sp, #32]
  2384fc:	stp	x8, x0, [sp, #8]
  238500:	mov	w0, #0x3                   	// #3
  238504:	movk	w1, #0x4000, lsl #16
  238508:	mov	w3, #0x3af                 	// #943
  23850c:	b	238b30 <parse_token+0x2f9c>
  238510:	mov	w1, #0x1d                  	// #29
  238514:	mov	w4, #0x1                   	// #1
  238518:	mov	x0, x21
  23851c:	mov	w2, w22
  238520:	mov	x3, xzr
  238524:	b	2386fc <parse_token+0x2b68>
  238528:	mov	x19, xzr
  23852c:	cbz	x8, 238538 <parse_token+0x29a4>
  238530:	ldr	x0, [x8]
  238534:	b	23853c <parse_token+0x29a8>
  238538:	mov	x0, xzr
  23853c:	bl	235b80 <strna>
  238540:	cbz	x19, 23854c <parse_token+0x29b8>
  238544:	ldr	w8, [x19, #8]
  238548:	b	238550 <parse_token+0x29bc>
  23854c:	mov	w8, wzr
  238550:	str	w8, [sp, #24]
  238554:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  238558:	add	x8, x8, #0xfe1
  23855c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238560:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238564:	mov	w1, #0x16                  	// #22
  238568:	add	x2, x2, #0x63
  23856c:	add	x4, x4, #0x166
  238570:	stp	x8, x0, [sp, #8]
  238574:	mov	w0, #0x3                   	// #3
  238578:	movk	w1, #0x4000, lsl #16
  23857c:	mov	w3, #0x313                 	// #787
  238580:	str	x20, [sp, #32]
  238584:	mov	x5, xzr
  238588:	mov	x6, xzr
  23858c:	mov	x7, xzr
  238590:	str	xzr, [sp]
  238594:	bl	2539f0 <log_object_internal@plt>
  238598:	tbnz	wzr, #0, 236344 <parse_token+0x7b0>
  23859c:	b	238b44 <parse_token+0x2fb0>
  2385a0:	cmp	x27, #0x0
  2385a4:	csel	x20, x21, xzr, ne  // ne = any
  2385a8:	cbz	x27, 238908 <parse_token+0x2d74>
  2385ac:	ldr	x0, [x27]
  2385b0:	b	23890c <parse_token+0x2d78>
  2385b4:	mov	x22, xzr
  2385b8:	cbz	x27, 2385c4 <parse_token+0x2a30>
  2385bc:	ldr	x0, [x27]
  2385c0:	b	2385c8 <parse_token+0x2a34>
  2385c4:	mov	x0, xzr
  2385c8:	bl	235b80 <strna>
  2385cc:	cbz	x22, 2385d8 <parse_token+0x2a44>
  2385d0:	ldr	w8, [x22, #8]
  2385d4:	b	2385dc <parse_token+0x2a48>
  2385d8:	mov	w8, wzr
  2385dc:	str	w8, [sp, #24]
  2385e0:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  2385e4:	add	x8, x8, #0x4cd
  2385e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2385ec:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2385f0:	add	x2, x2, #0x63
  2385f4:	add	x4, x4, #0x166
  2385f8:	stp	x8, x0, [sp, #8]
  2385fc:	mov	w0, #0x4                   	// #4
  238600:	mov	w3, #0x36b                 	// #875
  238604:	mov	w1, wzr
  238608:	mov	x5, xzr
  23860c:	mov	x6, xzr
  238610:	mov	x7, xzr
  238614:	str	x19, [sp, #32]
  238618:	str	xzr, [sp]
  23861c:	mov	w22, #0x4                   	// #4
  238620:	bl	2539f0 <log_object_internal@plt>
  238624:	add	x1, sp, #0x3c
  238628:	mov	x0, x20
  23862c:	bl	239998 <parse_gid>
  238630:	tbnz	w0, #31, 238640 <parse_token+0x2aac>
  238634:	ldr	w8, [sp, #60]
  238638:	mov	w1, #0x23                  	// #35
  23863c:	b	2387a8 <parse_token+0x2c14>
  238640:	ldr	w8, [x23, #8]
  238644:	cmp	w8, #0x2
  238648:	b.ne	238658 <parse_token+0x2ac4>  // b.any
  23864c:	mov	x0, x20
  238650:	bl	2397bc <rule_get_substitution_type>
  238654:	cbz	w0, 238960 <parse_token+0x2dcc>
  238658:	ldr	w8, [x23, #8]
  23865c:	cbz	w8, 2387f8 <parse_token+0x2c64>
  238660:	mov	w3, #0x1                   	// #1
  238664:	mov	x0, x23
  238668:	mov	x1, x19
  23866c:	mov	x2, x20
  238670:	mov	w24, #0x1                   	// #1
  238674:	bl	2394a4 <check_value_format_and_warn>
  238678:	mov	w1, #0x20                  	// #32
  23867c:	b	2387d8 <parse_token+0x2c44>
  238680:	ldr	x8, [x26]
  238684:	cbz	x8, 238988 <parse_token+0x2df4>
  238688:	ldr	x21, [x8, #8]
  23868c:	b	23898c <parse_token+0x2df8>
  238690:	mov	x0, xzr
  238694:	bl	235b80 <strna>
  238698:	cbz	x20, 2386a4 <parse_token+0x2b10>
  23869c:	ldr	w8, [x20, #8]
  2386a0:	b	2386a8 <parse_token+0x2b14>
  2386a4:	mov	w8, wzr
  2386a8:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2386ac:	str	w8, [sp, #24]
  2386b0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2386b4:	add	x9, x9, #0x79
  2386b8:	add	x8, x8, #0x358
  2386bc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2386c0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2386c4:	mov	w1, #0x16                  	// #22
  2386c8:	add	x2, x2, #0x63
  2386cc:	add	x4, x4, #0x166
  2386d0:	stp	x9, x19, [sp, #32]
  2386d4:	stp	x8, x0, [sp, #8]
  2386d8:	mov	w0, #0x3                   	// #3
  2386dc:	movk	w1, #0x4000, lsl #16
  2386e0:	mov	w3, #0x3bc                 	// #956
  2386e4:	b	238b30 <parse_token+0x2f9c>
  2386e8:	mov	w1, #0x1d                  	// #29
  2386ec:	mov	x0, x21
  2386f0:	mov	w2, w22
  2386f4:	mov	x3, xzr
  2386f8:	mov	x4, xzr
  2386fc:	bl	2390f8 <rule_line_add_token>
  238700:	mov	w19, w0
  238704:	mov	w9, wzr
  238708:	b	237d60 <parse_token+0x21cc>
  23870c:	cmp	x27, #0x0
  238710:	csel	x20, x21, xzr, ne  // ne = any
  238714:	cbz	x27, 2389fc <parse_token+0x2e68>
  238718:	ldr	x0, [x27]
  23871c:	b	238a00 <parse_token+0x2e6c>
  238720:	mov	x22, xzr
  238724:	cbz	x27, 238730 <parse_token+0x2b9c>
  238728:	ldr	x0, [x27]
  23872c:	b	238734 <parse_token+0x2ba0>
  238730:	mov	x0, xzr
  238734:	bl	235b80 <strna>
  238738:	cbz	x22, 238744 <parse_token+0x2bb0>
  23873c:	ldr	w8, [x22, #8]
  238740:	b	238748 <parse_token+0x2bb4>
  238744:	mov	w8, wzr
  238748:	str	w8, [sp, #24]
  23874c:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  238750:	add	x8, x8, #0x4cd
  238754:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238758:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23875c:	add	x2, x2, #0x63
  238760:	add	x4, x4, #0x166
  238764:	stp	x8, x0, [sp, #8]
  238768:	mov	w0, #0x4                   	// #4
  23876c:	mov	w3, #0x387                 	// #903
  238770:	mov	w1, wzr
  238774:	mov	x5, xzr
  238778:	mov	x6, xzr
  23877c:	mov	x7, xzr
  238780:	str	x19, [sp, #32]
  238784:	str	xzr, [sp]
  238788:	mov	w22, #0x4                   	// #4
  23878c:	bl	2539f0 <log_object_internal@plt>
  238790:	add	x1, sp, #0x3c
  238794:	mov	x0, x20
  238798:	bl	2544b0 <parse_mode@plt>
  23879c:	tbnz	w0, #31, 2387bc <parse_token+0x2c28>
  2387a0:	ldr	w8, [sp, #60]
  2387a4:	mov	w1, #0x24                  	// #36
  2387a8:	add	x4, x8, #0x1
  2387ac:	mov	x0, x21
  2387b0:	mov	w2, w22
  2387b4:	mov	x3, xzr
  2387b8:	b	237084 <parse_token+0x14f0>
  2387bc:	mov	w3, #0x1                   	// #1
  2387c0:	mov	x0, x23
  2387c4:	mov	x1, x19
  2387c8:	mov	x2, x20
  2387cc:	mov	w24, #0x1                   	// #1
  2387d0:	bl	2394a4 <check_value_format_and_warn>
  2387d4:	mov	w1, #0x21                  	// #33
  2387d8:	mov	x0, x21
  2387dc:	mov	w2, w22
  2387e0:	mov	x3, x20
  2387e4:	mov	x4, xzr
  2387e8:	bl	2390f8 <rule_line_add_token>
  2387ec:	mov	w19, w0
  2387f0:	tbnz	w24, #0, 236344 <parse_token+0x7b0>
  2387f4:	b	238b44 <parse_token+0x2fb0>
  2387f8:	ldr	x8, [x26]
  2387fc:	cbz	x8, 238a54 <parse_token+0x2ec0>
  238800:	ldr	x21, [x8, #8]
  238804:	b	238a58 <parse_token+0x2ec4>
  238808:	add	x2, sp, #0x3c
  23880c:	mov	x0, x23
  238810:	mov	x1, x20
  238814:	bl	239840 <rule_resolve_user>
  238818:	tbz	w0, #31, 238364 <parse_token+0x27d0>
  23881c:	ldr	x8, [x26]
  238820:	mov	w19, w0
  238824:	cbz	x8, 238bfc <parse_token+0x3068>
  238828:	ldr	x21, [x8, #8]
  23882c:	b	238c00 <parse_token+0x306c>
  238830:	mov	x22, xzr
  238834:	cbz	x8, 238840 <parse_token+0x2cac>
  238838:	ldr	x0, [x8]
  23883c:	b	238844 <parse_token+0x2cb0>
  238840:	mov	x0, xzr
  238844:	bl	235b80 <strna>
  238848:	cbz	x22, 238854 <parse_token+0x2cc0>
  23884c:	ldr	w8, [x22, #8]
  238850:	b	238858 <parse_token+0x2cc4>
  238854:	mov	w8, wzr
  238858:	str	w8, [sp, #24]
  23885c:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  238860:	add	x8, x8, #0xe9c
  238864:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238868:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23886c:	add	x2, x2, #0x63
  238870:	add	x4, x4, #0x166
  238874:	stp	x8, x0, [sp, #8]
  238878:	mov	w0, #0x4                   	// #4
  23887c:	mov	w3, #0x398                 	// #920
  238880:	mov	w1, wzr
  238884:	mov	x5, xzr
  238888:	mov	x6, xzr
  23888c:	mov	x7, xzr
  238890:	str	x19, [sp, #32]
  238894:	str	xzr, [sp]
  238898:	mov	w22, #0x4                   	// #4
  23889c:	bl	2539f0 <log_object_internal@plt>
  2388a0:	mov	w1, #0x27                  	// #39
  2388a4:	b	23632c <parse_token+0x798>
  2388a8:	cmp	x27, #0x0
  2388ac:	csel	x19, x21, xzr, ne  // ne = any
  2388b0:	cbz	x27, 238b64 <parse_token+0x2fd0>
  2388b4:	ldr	x0, [x27]
  2388b8:	b	238b68 <parse_token+0x2fd4>
  2388bc:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  2388c0:	add	x1, x1, #0xd4a
  2388c4:	mov	x0, x20
  2388c8:	bl	2390a8 <startswith>
  2388cc:	cbz	x0, 238bc8 <parse_token+0x3034>
  2388d0:	add	x1, sp, #0x3c
  2388d4:	mov	x23, x0
  2388d8:	bl	2544e0 <safe_atoi@plt>
  2388dc:	tbnz	w0, #31, 238be8 <parse_token+0x3054>
  2388e0:	ldrsw	x4, [sp, #60]
  2388e4:	mov	w1, #0x1e                  	// #30
  2388e8:	mov	x0, x21
  2388ec:	mov	w2, w22
  2388f0:	mov	x3, xzr
  2388f4:	bl	2390f8 <rule_line_add_token>
  2388f8:	mov	w19, w0
  2388fc:	mov	w9, wzr
  238900:	cbnz	wzr, 237d60 <parse_token+0x21cc>
  238904:	b	238704 <parse_token+0x2b70>
  238908:	mov	x0, xzr
  23890c:	bl	235b80 <strna>
  238910:	cbz	x20, 23891c <parse_token+0x2d88>
  238914:	ldr	w8, [x20, #8]
  238918:	b	238920 <parse_token+0x2d8c>
  23891c:	mov	w8, wzr
  238920:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  238924:	str	w8, [sp, #24]
  238928:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23892c:	add	x9, x9, #0xdc7
  238930:	add	x8, x8, #0x358
  238934:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238938:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23893c:	mov	w1, #0x16                  	// #22
  238940:	add	x2, x2, #0x63
  238944:	add	x4, x4, #0x166
  238948:	stp	x9, x19, [sp, #32]
  23894c:	stp	x8, x0, [sp, #8]
  238950:	mov	w0, #0x3                   	// #3
  238954:	movk	w1, #0x4000, lsl #16
  238958:	mov	w3, #0x3b1                 	// #945
  23895c:	b	238b30 <parse_token+0x2f9c>
  238960:	add	x2, sp, #0x3c
  238964:	mov	x0, x23
  238968:	mov	x1, x20
  23896c:	bl	2399ac <rule_resolve_group>
  238970:	tbz	w0, #31, 238634 <parse_token+0x2aa0>
  238974:	ldr	x8, [x26]
  238978:	mov	w19, w0
  23897c:	cbz	x8, 238cc8 <parse_token+0x3134>
  238980:	ldr	x21, [x8, #8]
  238984:	b	238ccc <parse_token+0x3138>
  238988:	mov	x21, xzr
  23898c:	cbz	x8, 238998 <parse_token+0x2e04>
  238990:	ldr	x0, [x8]
  238994:	b	23899c <parse_token+0x2e08>
  238998:	mov	x0, xzr
  23899c:	bl	235b80 <strna>
  2389a0:	cbz	x21, 2389ac <parse_token+0x2e18>
  2389a4:	ldr	w8, [x21, #8]
  2389a8:	b	2389b0 <parse_token+0x2e1c>
  2389ac:	mov	w8, wzr
  2389b0:	str	w8, [sp, #24]
  2389b4:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2389b8:	add	x8, x8, #0xaf4
  2389bc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2389c0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2389c4:	add	x2, x2, #0x63
  2389c8:	add	x4, x4, #0x166
  2389cc:	stp	x8, x0, [sp, #8]
  2389d0:	mov	w0, #0x7                   	// #7
  2389d4:	mov	w3, #0x360                 	// #864
  2389d8:	stp	x19, x20, [sp, #32]
  2389dc:	b	238aa8 <parse_token+0x2f14>
  2389e0:	mov	x0, x20
  2389e4:	bl	23f160 <udev_builtin_lookup>
  2389e8:	tbnz	w0, #31, 238bd8 <parse_token+0x3044>
  2389ec:	sxtw	x8, w0
  2389f0:	add	x4, x8, #0x1
  2389f4:	mov	w1, #0x2d                  	// #45
  2389f8:	b	237078 <parse_token+0x14e4>
  2389fc:	mov	x0, xzr
  238a00:	bl	235b80 <strna>
  238a04:	cbz	x20, 238a10 <parse_token+0x2e7c>
  238a08:	ldr	w8, [x20, #8]
  238a0c:	b	238a14 <parse_token+0x2e80>
  238a10:	mov	w8, wzr
  238a14:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  238a18:	str	w8, [sp, #24]
  238a1c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  238a20:	add	x9, x9, #0xdc7
  238a24:	add	x8, x8, #0x358
  238a28:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238a2c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238a30:	mov	w1, #0x16                  	// #22
  238a34:	add	x2, x2, #0x63
  238a38:	add	x4, x4, #0x166
  238a3c:	stp	x9, x19, [sp, #32]
  238a40:	stp	x8, x0, [sp, #8]
  238a44:	mov	w0, #0x3                   	// #3
  238a48:	movk	w1, #0x4000, lsl #16
  238a4c:	mov	w3, #0x3be                 	// #958
  238a50:	b	238b30 <parse_token+0x2f9c>
  238a54:	mov	x21, xzr
  238a58:	cbz	x8, 238a64 <parse_token+0x2ed0>
  238a5c:	ldr	x0, [x8]
  238a60:	b	238a68 <parse_token+0x2ed4>
  238a64:	mov	x0, xzr
  238a68:	bl	235b80 <strna>
  238a6c:	cbz	x21, 238a78 <parse_token+0x2ee4>
  238a70:	ldr	w8, [x21, #8]
  238a74:	b	238a7c <parse_token+0x2ee8>
  238a78:	mov	w8, wzr
  238a7c:	str	w8, [sp, #24]
  238a80:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  238a84:	add	x8, x8, #0xbed
  238a88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238a8c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238a90:	stp	x19, x20, [sp, #32]
  238a94:	add	x2, x2, #0x63
  238a98:	add	x4, x4, #0x166
  238a9c:	stp	x8, x0, [sp, #8]
  238aa0:	mov	w0, #0x7                   	// #7
  238aa4:	mov	w3, #0x37c                 	// #892
  238aa8:	mov	w1, wzr
  238aac:	mov	x5, xzr
  238ab0:	mov	x6, xzr
  238ab4:	mov	x7, xzr
  238ab8:	str	xzr, [sp]
  238abc:	bl	2539f0 <log_object_internal@plt>
  238ac0:	mov	w0, wzr
  238ac4:	tbnz	wzr, #0, 236344 <parse_token+0x7b0>
  238ac8:	b	238b44 <parse_token+0x2fb0>
  238acc:	mov	x20, xzr
  238ad0:	cbz	x8, 238adc <parse_token+0x2f48>
  238ad4:	ldr	x0, [x8]
  238ad8:	b	238ae0 <parse_token+0x2f4c>
  238adc:	mov	x0, xzr
  238ae0:	bl	235b80 <strna>
  238ae4:	cbz	x20, 238af0 <parse_token+0x2f5c>
  238ae8:	ldr	w8, [x20, #8]
  238aec:	b	238af4 <parse_token+0x2f60>
  238af0:	mov	w8, wzr
  238af4:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  238af8:	str	w8, [sp, #24]
  238afc:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  238b00:	add	x9, x9, #0x79
  238b04:	add	x8, x8, #0x358
  238b08:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238b0c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238b10:	mov	w1, #0x16                  	// #22
  238b14:	add	x2, x2, #0x63
  238b18:	add	x4, x4, #0x166
  238b1c:	stp	x9, x19, [sp, #32]
  238b20:	stp	x8, x0, [sp, #8]
  238b24:	mov	w0, #0x3                   	// #3
  238b28:	movk	w1, #0x4000, lsl #16
  238b2c:	mov	w3, #0x3ac                 	// #940
  238b30:	mov	x5, xzr
  238b34:	mov	x6, xzr
  238b38:	mov	x7, xzr
  238b3c:	str	xzr, [sp]
  238b40:	bl	2539f0 <log_object_internal@plt>
  238b44:	ldp	x20, x19, [sp, #320]
  238b48:	ldp	x22, x21, [sp, #304]
  238b4c:	ldp	x24, x23, [sp, #288]
  238b50:	ldp	x26, x25, [sp, #272]
  238b54:	ldp	x28, x27, [sp, #256]
  238b58:	ldp	x29, x30, [sp, #240]
  238b5c:	add	sp, sp, #0x150
  238b60:	ret
  238b64:	mov	x0, xzr
  238b68:	bl	235b80 <strna>
  238b6c:	cbz	x19, 238b78 <parse_token+0x2fe4>
  238b70:	ldr	w8, [x19, #8]
  238b74:	b	238b7c <parse_token+0x2fe8>
  238b78:	mov	w8, wzr
  238b7c:	str	w8, [sp, #24]
  238b80:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  238b84:	add	x8, x8, #0xb2a
  238b88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238b8c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238b90:	add	x2, x2, #0x63
  238b94:	add	x4, x4, #0x166
  238b98:	stp	x8, x0, [sp, #8]
  238b9c:	mov	w0, #0x4                   	// #4
  238ba0:	mov	w3, #0x3b3                 	// #947
  238ba4:	mov	w1, wzr
  238ba8:	mov	x5, xzr
  238bac:	mov	x6, xzr
  238bb0:	mov	x7, xzr
  238bb4:	str	x20, [sp, #32]
  238bb8:	str	xzr, [sp]
  238bbc:	bl	2539f0 <log_object_internal@plt>
  238bc0:	mov	w0, wzr
  238bc4:	b	238b44 <parse_token+0x2fb0>
  238bc8:	ldr	x8, [x26]
  238bcc:	cbz	x8, 238c54 <parse_token+0x30c0>
  238bd0:	ldr	x19, [x8, #8]
  238bd4:	b	238c58 <parse_token+0x30c4>
  238bd8:	ldr	x8, [x26]
  238bdc:	cbz	x8, 238d28 <parse_token+0x3194>
  238be0:	ldr	x19, [x8, #8]
  238be4:	b	238d2c <parse_token+0x3198>
  238be8:	ldr	x8, [x26]
  238bec:	mov	w19, w0
  238bf0:	cbz	x8, 238d88 <parse_token+0x31f4>
  238bf4:	ldr	x20, [x8, #8]
  238bf8:	b	238d8c <parse_token+0x31f8>
  238bfc:	mov	x21, xzr
  238c00:	cbz	x8, 238c0c <parse_token+0x3078>
  238c04:	ldr	x0, [x8]
  238c08:	b	238c10 <parse_token+0x307c>
  238c0c:	mov	x0, xzr
  238c10:	bl	235b80 <strna>
  238c14:	cbz	x21, 238c20 <parse_token+0x308c>
  238c18:	ldr	w8, [x21, #8]
  238c1c:	b	238c24 <parse_token+0x3090>
  238c20:	mov	w8, wzr
  238c24:	str	w8, [sp, #24]
  238c28:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  238c2c:	add	x8, x8, #0x943
  238c30:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238c34:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238c38:	add	x2, x2, #0x63
  238c3c:	add	x4, x4, #0x166
  238c40:	stp	x8, x0, [sp, #8]
  238c44:	mov	w0, #0x3                   	// #3
  238c48:	mov	w3, #0x359                 	// #857
  238c4c:	str	x20, [sp, #32]
  238c50:	b	238d1c <parse_token+0x3188>
  238c54:	mov	x19, xzr
  238c58:	cbz	x8, 238c64 <parse_token+0x30d0>
  238c5c:	ldr	x0, [x8]
  238c60:	b	238c68 <parse_token+0x30d4>
  238c64:	mov	x0, xzr
  238c68:	bl	235b80 <strna>
  238c6c:	cbz	x19, 238c78 <parse_token+0x30e4>
  238c70:	ldr	w8, [x19, #8]
  238c74:	b	238c7c <parse_token+0x30e8>
  238c78:	mov	w8, wzr
  238c7c:	str	w8, [sp, #24]
  238c80:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  238c84:	add	x8, x8, #0xe68
  238c88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238c8c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238c90:	add	x2, x2, #0x63
  238c94:	add	x4, x4, #0x166
  238c98:	stp	x8, x0, [sp, #8]
  238c9c:	mov	w0, #0x4                   	// #4
  238ca0:	mov	w3, #0x344                 	// #836
  238ca4:	mov	w1, wzr
  238ca8:	mov	x5, xzr
  238cac:	mov	x6, xzr
  238cb0:	mov	x7, xzr
  238cb4:	str	x20, [sp, #32]
  238cb8:	str	xzr, [sp]
  238cbc:	bl	2539f0 <log_object_internal@plt>
  238cc0:	mov	w0, wzr
  238cc4:	b	237d5c <parse_token+0x21c8>
  238cc8:	mov	x21, xzr
  238ccc:	cbz	x8, 238cd8 <parse_token+0x3144>
  238cd0:	ldr	x0, [x8]
  238cd4:	b	238cdc <parse_token+0x3148>
  238cd8:	mov	x0, xzr
  238cdc:	bl	235b80 <strna>
  238ce0:	cbz	x21, 238cec <parse_token+0x3158>
  238ce4:	ldr	w8, [x21, #8]
  238ce8:	b	238cf0 <parse_token+0x315c>
  238cec:	mov	w8, wzr
  238cf0:	str	w8, [sp, #24]
  238cf4:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  238cf8:	add	x8, x8, #0x96e
  238cfc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238d00:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238d04:	str	x20, [sp, #32]
  238d08:	add	x2, x2, #0x63
  238d0c:	add	x4, x4, #0x166
  238d10:	stp	x8, x0, [sp, #8]
  238d14:	mov	w0, #0x3                   	// #3
  238d18:	mov	w3, #0x375                 	// #885
  238d1c:	mov	w1, w19
  238d20:	str	xzr, [sp]
  238d24:	b	237788 <parse_token+0x1bf4>
  238d28:	mov	x19, xzr
  238d2c:	cbz	x8, 238d38 <parse_token+0x31a4>
  238d30:	ldr	x0, [x8]
  238d34:	b	238d3c <parse_token+0x31a8>
  238d38:	mov	x0, xzr
  238d3c:	bl	235b80 <strna>
  238d40:	cbz	x19, 238d4c <parse_token+0x31b8>
  238d44:	ldr	w8, [x19, #8]
  238d48:	b	238d50 <parse_token+0x31bc>
  238d4c:	mov	w8, wzr
  238d50:	str	w8, [sp, #24]
  238d54:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  238d58:	add	x8, x8, #0x63b
  238d5c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238d60:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238d64:	mov	w1, #0x16                  	// #22
  238d68:	str	x20, [sp, #32]
  238d6c:	add	x2, x2, #0x63
  238d70:	add	x4, x4, #0x166
  238d74:	stp	x8, x0, [sp, #8]
  238d78:	mov	w0, #0x3                   	// #3
  238d7c:	movk	w1, #0x4000, lsl #16
  238d80:	mov	w3, #0x3a9                 	// #937
  238d84:	b	238584 <parse_token+0x29f0>
  238d88:	mov	x20, xzr
  238d8c:	cbz	x8, 238d98 <parse_token+0x3204>
  238d90:	ldr	x0, [x8]
  238d94:	b	238d9c <parse_token+0x3208>
  238d98:	mov	x0, xzr
  238d9c:	bl	235b80 <strna>
  238da0:	cbz	x20, 238dac <parse_token+0x3218>
  238da4:	ldr	w8, [x20, #8]
  238da8:	b	238db0 <parse_token+0x321c>
  238dac:	mov	w8, wzr
  238db0:	str	w8, [sp, #24]
  238db4:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  238db8:	add	x8, x8, #0xe3b
  238dbc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238dc0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  238dc4:	add	x2, x2, #0x63
  238dc8:	add	x4, x4, #0x166
  238dcc:	stp	x8, x0, [sp, #8]
  238dd0:	mov	w0, #0x3                   	// #3
  238dd4:	mov	w3, #0x341                 	// #833
  238dd8:	mov	w1, w19
  238ddc:	mov	x5, xzr
  238de0:	mov	x6, xzr
  238de4:	mov	x7, xzr
  238de8:	str	x23, [sp, #32]
  238dec:	str	xzr, [sp]
  238df0:	bl	2539f0 <log_object_internal@plt>
  238df4:	mov	w9, #0x1                   	// #1
  238df8:	cbnz	w9, 237d60 <parse_token+0x21cc>
  238dfc:	b	238704 <parse_token+0x2b70>
  238e00:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  238e04:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238e08:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  238e0c:	add	x1, x1, #0x5c9
  238e10:	add	x2, x2, #0x63
  238e14:	add	x4, x4, #0x228
  238e18:	mov	w0, #0x1                   	// #1
  238e1c:	mov	w3, #0x21c                 	// #540
  238e20:	bl	253740 <log_assert_failed_realm@plt>
  238e24:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  238e28:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238e2c:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  238e30:	add	x1, x1, #0xf7f
  238e34:	add	x2, x2, #0x63
  238e38:	add	x4, x4, #0x228
  238e3c:	mov	w0, #0x1                   	// #1
  238e40:	mov	w3, #0x21d                 	// #541
  238e44:	bl	253740 <log_assert_failed_realm@plt>
  238e48:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  238e4c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238e50:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  238e54:	add	x1, x1, #0x603
  238e58:	add	x2, x2, #0x63
  238e5c:	add	x4, x4, #0x228
  238e60:	mov	w0, #0x1                   	// #1
  238e64:	mov	w3, #0x21e                 	// #542
  238e68:	bl	253740 <log_assert_failed_realm@plt>
  238e6c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  238e70:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238e74:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  238e78:	add	x1, x1, #0xc4b
  238e7c:	add	x2, x2, #0x63
  238e80:	add	x4, x4, #0x228
  238e84:	mov	w0, #0x1                   	// #1
  238e88:	mov	w3, #0x21f                 	// #543
  238e8c:	bl	253740 <log_assert_failed_realm@plt>
  238e90:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  238e94:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238e98:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  238e9c:	add	x1, x1, #0xb91
  238ea0:	add	x2, x2, #0x63
  238ea4:	add	x4, x4, #0x228
  238ea8:	mov	w0, #0x1                   	// #1
  238eac:	mov	w3, #0x220                 	// #544
  238eb0:	bl	253740 <log_assert_failed_realm@plt>

0000000000238eb4 <sort_tokens>:
  238eb4:	stp	x29, x30, [sp, #-32]!
  238eb8:	stp	x20, x19, [sp, #16]
  238ebc:	mov	x29, sp
  238ec0:	cbz	x0, 238f9c <sort_tokens+0xe8>
  238ec4:	ldr	x8, [x0, #56]
  238ec8:	mov	x19, x0
  238ecc:	stp	xzr, xzr, [x0, #48]
  238ed0:	cbnz	x8, 238f00 <sort_tokens+0x4c>
  238ed4:	ldp	x20, x19, [sp, #16]
  238ed8:	ldp	x29, x30, [sp], #32
  238edc:	ret
  238ee0:	ldr	x11, [x9]
  238ee4:	mov	x20, x8
  238ee8:	str	x11, [x10, #24]
  238eec:	mov	x0, x19
  238ef0:	stp	xzr, xzr, [x9]
  238ef4:	bl	239b1c <rule_line_append_token>
  238ef8:	mov	x8, x20
  238efc:	cbz	x20, 238ed4 <sort_tokens+0x20>
  238f00:	mov	x1, xzr
  238f04:	mov	w10, #0x1                   	// #1
  238f08:	cbz	x8, 238f44 <sort_tokens+0x90>
  238f0c:	mov	x9, x8
  238f10:	b	238f28 <sort_tokens+0x74>
  238f14:	mov	x1, x9
  238f18:	ldr	x9, [x9, #24]
  238f1c:	cmp	x1, #0x0
  238f20:	cset	w10, eq  // eq = none
  238f24:	cbz	x9, 238f44 <sort_tokens+0x90>
  238f28:	tbnz	w10, #0, 238f14 <sort_tokens+0x60>
  238f2c:	ldr	w10, [x1]
  238f30:	ldr	w11, [x9]
  238f34:	lsl	w10, w10, #24
  238f38:	cmp	w10, w11, lsl #24
  238f3c:	b.gt	238f14 <sort_tokens+0x60>
  238f40:	b	238f18 <sort_tokens+0x64>
  238f44:	cbnz	w10, 238f78 <sort_tokens+0xc4>
  238f48:	mov	x9, x1
  238f4c:	ldr	x20, [x9, #24]!
  238f50:	cbz	x20, 238f5c <sort_tokens+0xa8>
  238f54:	ldr	x10, [x1, #32]
  238f58:	str	x10, [x20, #32]
  238f5c:	ldr	x10, [x1, #32]
  238f60:	cbnz	x10, 238ee0 <sort_tokens+0x2c>
  238f64:	cmp	x8, x1
  238f68:	b.eq	238eec <sort_tokens+0x38>  // b.none
  238f6c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  238f70:	add	x1, x1, #0xd67
  238f74:	b	238f80 <sort_tokens+0xcc>
  238f78:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  238f7c:	add	x1, x1, #0x848
  238f80:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238f84:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  238f88:	add	x2, x2, #0x63
  238f8c:	add	x4, x4, #0x172
  238f90:	mov	w0, #0x1                   	// #1
  238f94:	mov	w3, #0x432                 	// #1074
  238f98:	bl	253740 <log_assert_failed_realm@plt>
  238f9c:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  238fa0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  238fa4:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  238fa8:	add	x1, x1, #0x84e
  238fac:	add	x2, x2, #0x63
  238fb0:	add	x4, x4, #0x172
  238fb4:	mov	w0, #0x1                   	// #1
  238fb8:	mov	w3, #0x426                 	// #1062
  238fbc:	bl	253740 <log_assert_failed_realm@plt>

0000000000238fc0 <parse_operator>:
  238fc0:	stp	x29, x30, [sp, #-32]!
  238fc4:	str	x19, [sp, #16]
  238fc8:	mov	x29, sp
  238fcc:	cbz	x0, 239084 <parse_operator+0xc4>
  238fd0:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  238fd4:	add	x1, x1, #0x858
  238fd8:	mov	x19, x0
  238fdc:	bl	2390a8 <startswith>
  238fe0:	cbz	x0, 238fec <parse_operator+0x2c>
  238fe4:	mov	w0, wzr
  238fe8:	b	239078 <parse_operator+0xb8>
  238fec:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  238ff0:	add	x1, x1, #0x163
  238ff4:	mov	x0, x19
  238ff8:	bl	2390a8 <startswith>
  238ffc:	cbz	x0, 239008 <parse_operator+0x48>
  239000:	mov	w0, #0x1                   	// #1
  239004:	b	239078 <parse_operator+0xb8>
  239008:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  23900c:	add	x1, x1, #0x72f
  239010:	mov	x0, x19
  239014:	bl	2390a8 <startswith>
  239018:	cbz	x0, 239024 <parse_operator+0x64>
  23901c:	mov	w0, #0x2                   	// #2
  239020:	b	239078 <parse_operator+0xb8>
  239024:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  239028:	add	x1, x1, #0xdc4
  23902c:	mov	x0, x19
  239030:	bl	2390a8 <startswith>
  239034:	cbz	x0, 239040 <parse_operator+0x80>
  239038:	mov	w0, #0x3                   	// #3
  23903c:	b	239078 <parse_operator+0xb8>
  239040:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  239044:	add	x1, x1, #0xd48
  239048:	mov	x0, x19
  23904c:	bl	2390a8 <startswith>
  239050:	cbz	x0, 23905c <parse_operator+0x9c>
  239054:	mov	w0, #0x4                   	// #4
  239058:	b	239078 <parse_operator+0xb8>
  23905c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  239060:	add	x1, x1, #0x722
  239064:	mov	x0, x19
  239068:	bl	2390a8 <startswith>
  23906c:	cmp	x0, #0x0
  239070:	mov	w8, #0x5                   	// #5
  239074:	csinv	w0, w8, wzr, ne  // ne = any
  239078:	ldr	x19, [sp, #16]
  23907c:	ldp	x29, x30, [sp], #32
  239080:	ret
  239084:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  239088:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23908c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  239090:	add	x1, x1, #0xdc1
  239094:	add	x2, x2, #0x63
  239098:	add	x4, x4, #0x4d4
  23909c:	mov	w0, #0x1                   	// #1
  2390a0:	mov	w3, #0x3cc                 	// #972
  2390a4:	bl	253740 <log_assert_failed_realm@plt>

00000000002390a8 <startswith>:
  2390a8:	stp	x29, x30, [sp, #-48]!
  2390ac:	stp	x20, x19, [sp, #32]
  2390b0:	mov	x20, x0
  2390b4:	mov	x0, x1
  2390b8:	str	x21, [sp, #16]
  2390bc:	mov	x29, sp
  2390c0:	mov	x19, x1
  2390c4:	bl	2539a0 <strlen@plt>
  2390c8:	mov	x21, x0
  2390cc:	mov	x0, x20
  2390d0:	mov	x1, x19
  2390d4:	mov	x2, x21
  2390d8:	bl	2539b0 <strncmp@plt>
  2390dc:	add	x8, x20, x21
  2390e0:	ldp	x20, x19, [sp, #32]
  2390e4:	ldr	x21, [sp, #16]
  2390e8:	cmp	w0, #0x0
  2390ec:	csel	x0, x8, xzr, eq  // eq = none
  2390f0:	ldp	x29, x30, [sp], #48
  2390f4:	ret

00000000002390f8 <rule_line_add_token>:
  2390f8:	sub	sp, sp, #0x80
  2390fc:	stp	x29, x30, [sp, #32]
  239100:	str	x27, [sp, #48]
  239104:	stp	x26, x25, [sp, #64]
  239108:	stp	x24, x23, [sp, #80]
  23910c:	stp	x22, x21, [sp, #96]
  239110:	stp	x20, x19, [sp, #112]
  239114:	add	x29, sp, #0x20
  239118:	cbz	x0, 2393cc <rule_line_add_token+0x2d4>
  23911c:	mov	w21, w2
  239120:	cmp	w2, #0x6
  239124:	b.cs	2393f0 <rule_line_add_token+0x2f8>  // b.hs, b.nlast
  239128:	mov	x20, x4
  23912c:	mov	x22, x3
  239130:	mov	w23, w1
  239134:	mov	x19, x0
  239138:	cmp	w1, #0x19
  23913c:	b.gt	239184 <rule_line_add_token+0x8c>
  239140:	cbz	x22, 23945c <rule_line_add_token+0x364>
  239144:	cmp	w21, #0x2
  239148:	b.cs	239480 <rule_line_add_token+0x388>  // b.hs, b.nlast
  23914c:	cmp	w23, #0x8
  239150:	b.ne	23918c <rule_line_add_token+0x94>  // b.any
  239154:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  239158:	add	x8, x8, #0x438
  23915c:	ldp	q0, q1, [x8]
  239160:	mov	x0, sp
  239164:	mov	x1, x22
  239168:	stp	q0, q1, [sp]
  23916c:	bl	2544a0 <strv_find@plt>
  239170:	cbz	x0, 23918c <rule_line_add_token+0x94>
  239174:	mov	w25, #0x5                   	// #5
  239178:	cmp	w23, #0x11
  23917c:	b.ge	2391f0 <rule_line_add_token+0xf8>  // b.tcont
  239180:	b	2391f8 <rule_line_add_token+0x100>
  239184:	mov	w25, #0xffffffff            	// #-1
  239188:	b	239268 <rule_line_add_token+0x170>
  23918c:	mov	x0, x22
  239190:	bl	2358dc <isempty>
  239194:	tbz	w0, #0, 2391a8 <rule_line_add_token+0xb0>
  239198:	mov	w25, wzr
  23919c:	cmp	w23, #0x11
  2391a0:	b.ge	2391f0 <rule_line_add_token+0xf8>  // b.tcont
  2391a4:	b	2391f8 <rule_line_add_token+0x100>
  2391a8:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2391ac:	add	x1, x1, #0x145
  2391b0:	mov	x0, x22
  2391b4:	bl	253bc0 <strcmp@plt>
  2391b8:	cbz	w0, 2391dc <rule_line_add_token+0xe4>
  2391bc:	mov	x0, x22
  2391c0:	bl	239af8 <string_is_glob>
  2391c4:	tst	w0, #0x1
  2391c8:	mov	w8, #0x3                   	// #3
  2391cc:	csinc	w25, w8, wzr, ne  // ne = any
  2391d0:	cmp	w23, #0x11
  2391d4:	b.ge	2391f0 <rule_line_add_token+0xf8>  // b.tcont
  2391d8:	b	2391f8 <rule_line_add_token+0x100>
  2391dc:	cmp	w21, #0x0
  2391e0:	mov	w25, wzr
  2391e4:	cset	w21, eq  // eq = none
  2391e8:	cmp	w23, #0x11
  2391ec:	b.lt	2391f8 <rule_line_add_token+0x100>  // b.tstop
  2391f0:	cmp	w23, #0x19
  2391f4:	b.ne	239268 <rule_line_add_token+0x170>  // b.any
  2391f8:	mov	w8, wzr
  2391fc:	mov	w12, #0x1                   	// #1
  239200:	mov	x9, x22
  239204:	mov	x10, x22
  239208:	b	23921c <rule_line_add_token+0x124>
  23920c:	mov	w13, wzr
  239210:	strb	w13, [x9], #1
  239214:	add	x10, x10, #0x1
  239218:	mov	w12, w11
  23921c:	ldrb	w13, [x10]
  239220:	cmp	w13, #0x7c
  239224:	b.eq	239234 <rule_line_add_token+0x13c>  // b.none
  239228:	cbz	w13, 239244 <rule_line_add_token+0x14c>
  23922c:	mov	w11, wzr
  239230:	b	239210 <rule_line_add_token+0x118>
  239234:	mov	w11, #0x1                   	// #1
  239238:	tbz	w12, #0, 23920c <rule_line_add_token+0x114>
  23923c:	mov	w8, #0x1                   	// #1
  239240:	b	239214 <rule_line_add_token+0x11c>
  239244:	orr	w8, w8, w12
  239248:	strb	wzr, [x9]
  23924c:	tbz	w8, #0, 239268 <rule_line_add_token+0x170>
  239250:	cmp	w25, #0x3
  239254:	mov	w8, #0x4                   	// #4
  239258:	csel	w8, w8, w25, eq  // eq = none
  23925c:	cmp	w8, #0x1
  239260:	mov	w9, #0x2                   	// #2
  239264:	csel	w25, w9, w8, eq  // eq = none
  239268:	cmp	w23, #0xf
  23926c:	b.eq	239278 <rule_line_add_token+0x180>  // b.none
  239270:	cmp	w23, #0xa
  239274:	b.ne	2392b4 <rule_line_add_token+0x1bc>  // b.any
  239278:	cbz	x22, 239414 <rule_line_add_token+0x31c>
  23927c:	cbz	x20, 239438 <rule_line_add_token+0x340>
  239280:	mov	x0, x22
  239284:	bl	2539a0 <strlen@plt>
  239288:	cbz	x0, 2392c0 <rule_line_add_token+0x1c8>
  23928c:	mov	x24, x0
  239290:	bl	2544f0 <__ctype_b_loc@plt>
  239294:	add	x9, x24, x22
  239298:	ldr	x8, [x0]
  23929c:	ldurb	w9, [x9, #-1]
  2392a0:	ldrh	w8, [x8, x9, lsl #1]
  2392a4:	and	w8, w8, #0x2000
  2392a8:	lsl	w8, w8, #18
  2392ac:	eor	w26, w8, #0x80000000
  2392b0:	b	2392c4 <rule_line_add_token+0x1cc>
  2392b4:	mov	w26, wzr
  2392b8:	mov	w27, #0x7f000000            	// #2130706432
  2392bc:	b	2392d0 <rule_line_add_token+0x1d8>
  2392c0:	mov	w26, wzr
  2392c4:	mov	x0, x20
  2392c8:	bl	2397bc <rule_get_substitution_type>
  2392cc:	ubfiz	w27, w0, #24, #7
  2392d0:	mov	w0, #0x28                  	// #40
  2392d4:	bl	2349b8 <malloc_multiply>
  2392d8:	cbz	x0, 239330 <rule_line_add_token+0x238>
  2392dc:	and	w8, w23, #0xff
  2392e0:	bfi	w8, w25, #16, #8
  2392e4:	bfi	w8, w21, #8, #8
  2392e8:	orr	w8, w8, w26
  2392ec:	mov	x24, x0
  2392f0:	orr	w8, w8, w27
  2392f4:	stp	x22, x20, [x0, #8]
  2392f8:	str	w8, [x0]
  2392fc:	stp	xzr, xzr, [x0, #24]
  239300:	mov	x0, x19
  239304:	mov	x1, x24
  239308:	bl	239b1c <rule_line_append_token>
  23930c:	ldr	w8, [x24]
  239310:	mov	w9, #0x29000000            	// #687865856
  239314:	lsl	w8, w8, #24
  239318:	cmp	w8, w9
  23931c:	b.ne	239338 <rule_line_add_token+0x240>  // b.any
  239320:	ldr	w8, [x19, #12]
  239324:	mov	w0, wzr
  239328:	orr	w8, w8, #0x1
  23932c:	b	239354 <rule_line_add_token+0x25c>
  239330:	mov	w0, #0xfffffff4            	// #-12
  239334:	b	239358 <rule_line_add_token+0x260>
  239338:	asr	w9, w8, #24
  23933c:	sub	w10, w9, #0x1f
  239340:	cmp	w10, #0x6
  239344:	b.cs	239378 <rule_line_add_token+0x280>  // b.hs, b.nlast
  239348:	ldr	w8, [x19, #12]
  23934c:	mov	w0, wzr
  239350:	orr	w8, w8, #0x2
  239354:	str	w8, [x19, #12]
  239358:	ldp	x20, x19, [sp, #112]
  23935c:	ldp	x22, x21, [sp, #96]
  239360:	ldp	x24, x23, [sp, #80]
  239364:	ldp	x26, x25, [sp, #64]
  239368:	ldr	x27, [sp, #48]
  23936c:	ldp	x29, x30, [sp, #32]
  239370:	add	sp, sp, #0x80
  239374:	ret
  239378:	cmp	w9, #0x2a
  23937c:	b.eq	239348 <rule_line_add_token+0x250>  // b.none
  239380:	mov	w10, #0x26000000            	// #637534208
  239384:	cmp	w8, w10
  239388:	b.ne	23939c <rule_line_add_token+0x2a4>  // b.any
  23938c:	ldr	w8, [x19, #12]
  239390:	mov	w0, wzr
  239394:	orr	w8, w8, #0x4
  239398:	b	239354 <rule_line_add_token+0x25c>
  23939c:	mov	w10, #0x19000000            	// #419430400
  2393a0:	cmp	w8, w10
  2393a4:	b.gt	2393bc <rule_line_add_token+0x2c4>
  2393a8:	sub	w8, w9, #0x12
  2393ac:	cmp	w8, #0x6
  2393b0:	b.ls	2393bc <rule_line_add_token+0x2c4>  // b.plast
  2393b4:	mov	w0, wzr
  2393b8:	b	239358 <rule_line_add_token+0x260>
  2393bc:	ldr	w8, [x19, #12]
  2393c0:	mov	w0, wzr
  2393c4:	orr	w8, w8, #0x20
  2393c8:	b	239354 <rule_line_add_token+0x25c>
  2393cc:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2393d0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2393d4:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  2393d8:	add	x1, x1, #0x84e
  2393dc:	add	x2, x2, #0x63
  2393e0:	add	x4, x4, #0xe4
  2393e4:	mov	w0, #0x1                   	// #1
  2393e8:	mov	w3, #0x1a0                 	// #416
  2393ec:	bl	253740 <log_assert_failed_realm@plt>
  2393f0:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  2393f4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2393f8:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  2393fc:	add	x1, x1, #0xd59
  239400:	add	x2, x2, #0x63
  239404:	add	x4, x4, #0xe4
  239408:	mov	w0, #0x1                   	// #1
  23940c:	mov	w3, #0x1a2                 	// #418
  239410:	bl	253740 <log_assert_failed_realm@plt>
  239414:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  239418:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23941c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  239420:	add	x1, x1, #0xb91
  239424:	add	x2, x2, #0x63
  239428:	add	x4, x4, #0xe4
  23942c:	mov	w0, #0x1                   	// #1
  239430:	mov	w3, #0x1d4                 	// #468
  239434:	bl	253740 <log_assert_failed_realm@plt>
  239438:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  23943c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239440:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  239444:	add	x1, x1, #0x1ea
  239448:	add	x2, x2, #0x63
  23944c:	add	x4, x4, #0xe4
  239450:	mov	w0, #0x1                   	// #1
  239454:	mov	w3, #0x1d5                 	// #469
  239458:	bl	253740 <log_assert_failed_realm@plt>
  23945c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  239460:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239464:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  239468:	add	x1, x1, #0xb91
  23946c:	add	x2, x2, #0x63
  239470:	add	x4, x4, #0xe4
  239474:	mov	w0, #0x1                   	// #1
  239478:	mov	w3, #0x1a5                 	// #421
  23947c:	bl	253740 <log_assert_failed_realm@plt>
  239480:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  239484:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239488:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23948c:	add	x1, x1, #0x1c9
  239490:	add	x2, x2, #0x63
  239494:	add	x4, x4, #0xe4
  239498:	mov	w0, #0x1                   	// #1
  23949c:	mov	w3, #0x1a6                 	// #422
  2394a0:	bl	253740 <log_assert_failed_realm@plt>

00000000002394a4 <check_value_format_and_warn>:
  2394a4:	sub	sp, sp, #0x80
  2394a8:	str	x21, [sp, #96]
  2394ac:	stp	x20, x19, [sp, #112]
  2394b0:	mov	x19, x2
  2394b4:	mov	x20, x1
  2394b8:	mov	x21, x0
  2394bc:	stp	x29, x30, [sp, #80]
  2394c0:	add	x29, sp, #0x50
  2394c4:	tbz	w3, #0, 2394fc <check_value_format_and_warn+0x58>
  2394c8:	mov	x0, x19
  2394cc:	bl	2358dc <isempty>
  2394d0:	tbz	w0, #0, 2394fc <check_value_format_and_warn+0x58>
  2394d4:	cbz	x21, 2395a0 <check_value_format_and_warn+0xfc>
  2394d8:	ldr	x8, [x21, #32]
  2394dc:	cbz	x8, 2395a8 <check_value_format_and_warn+0x104>
  2394e0:	ldr	x21, [x8, #8]
  2394e4:	cbz	x8, 2395b0 <check_value_format_and_warn+0x10c>
  2394e8:	ldr	x0, [x8]
  2394ec:	bl	235b80 <strna>
  2394f0:	cbz	x21, 2395bc <check_value_format_and_warn+0x118>
  2394f4:	ldr	w8, [x21, #8]
  2394f8:	b	2395c0 <check_value_format_and_warn+0x11c>
  2394fc:	add	x1, x29, #0x18
  239500:	sub	x2, x29, #0x8
  239504:	mov	x0, x19
  239508:	bl	230454 <udev_check_format>
  23950c:	tbz	w0, #31, 239614 <check_value_format_and_warn+0x170>
  239510:	cbz	x21, 239538 <check_value_format_and_warn+0x94>
  239514:	ldr	x8, [x21, #32]
  239518:	cbz	x8, 239540 <check_value_format_and_warn+0x9c>
  23951c:	ldr	x21, [x8, #8]
  239520:	cbz	x8, 239548 <check_value_format_and_warn+0xa4>
  239524:	ldr	x0, [x8]
  239528:	bl	235b80 <strna>
  23952c:	cbz	x21, 239554 <check_value_format_and_warn+0xb0>
  239530:	ldr	w8, [x21, #8]
  239534:	b	239558 <check_value_format_and_warn+0xb4>
  239538:	mov	x8, xzr
  23953c:	cbnz	x8, 23951c <check_value_format_and_warn+0x78>
  239540:	mov	x21, xzr
  239544:	cbnz	x8, 239524 <check_value_format_and_warn+0x80>
  239548:	mov	x0, xzr
  23954c:	bl	235b80 <strna>
  239550:	cbnz	x21, 239530 <check_value_format_and_warn+0x8c>
  239554:	mov	w8, wzr
  239558:	ldr	x9, [x29, #24]
  23955c:	ldur	x10, [x29, #-8]
  239560:	str	w8, [sp, #24]
  239564:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  239568:	add	x8, x8, #0x609
  23956c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239570:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  239574:	mov	w1, #0x16                  	// #22
  239578:	add	x9, x9, #0x1
  23957c:	add	x2, x2, #0x63
  239580:	add	x4, x4, #0xb60
  239584:	stp	x8, x0, [sp, #8]
  239588:	mov	w0, #0x3                   	// #3
  23958c:	movk	w1, #0x4000, lsl #16
  239590:	mov	w3, #0x209                 	// #521
  239594:	stp	x9, x10, [sp, #48]
  239598:	stp	x19, x20, [sp, #32]
  23959c:	b	239600 <check_value_format_and_warn+0x15c>
  2395a0:	mov	x8, xzr
  2395a4:	cbnz	x8, 2394e0 <check_value_format_and_warn+0x3c>
  2395a8:	mov	x21, xzr
  2395ac:	cbnz	x8, 2394e8 <check_value_format_and_warn+0x44>
  2395b0:	mov	x0, xzr
  2395b4:	bl	235b80 <strna>
  2395b8:	cbnz	x21, 2394f4 <check_value_format_and_warn+0x50>
  2395bc:	mov	w8, wzr
  2395c0:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2395c4:	str	w8, [sp, #24]
  2395c8:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  2395cc:	add	x9, x9, #0x863
  2395d0:	add	x8, x8, #0x609
  2395d4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2395d8:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  2395dc:	mov	w1, #0x16                  	// #22
  2395e0:	stp	x19, x20, [sp, #32]
  2395e4:	add	x2, x2, #0x63
  2395e8:	add	x4, x4, #0xb60
  2395ec:	stp	xzr, x9, [sp, #48]
  2395f0:	stp	x8, x0, [sp, #8]
  2395f4:	mov	w0, #0x3                   	// #3
  2395f8:	movk	w1, #0x4000, lsl #16
  2395fc:	mov	w3, #0x207                 	// #519
  239600:	mov	x5, xzr
  239604:	mov	x6, xzr
  239608:	mov	x7, xzr
  23960c:	str	xzr, [sp]
  239610:	bl	2539f0 <log_object_internal@plt>
  239614:	ldp	x20, x19, [sp, #112]
  239618:	ldr	x21, [sp, #96]
  23961c:	ldp	x29, x30, [sp, #80]
  239620:	add	sp, sp, #0x80
  239624:	ret

0000000000239628 <check_attr_format_and_warn>:
  239628:	sub	sp, sp, #0x80
  23962c:	str	x21, [sp, #96]
  239630:	mov	x21, x0
  239634:	mov	x0, x2
  239638:	stp	x29, x30, [sp, #80]
  23963c:	stp	x20, x19, [sp, #112]
  239640:	add	x29, sp, #0x50
  239644:	mov	x20, x2
  239648:	mov	x19, x1
  23964c:	bl	2358dc <isempty>
  239650:	tbz	w0, #0, 23967c <check_attr_format_and_warn+0x54>
  239654:	cbz	x21, 2396b8 <check_attr_format_and_warn+0x90>
  239658:	ldr	x8, [x21, #32]
  23965c:	cbz	x8, 2396c0 <check_attr_format_and_warn+0x98>
  239660:	ldr	x20, [x8, #8]
  239664:	cbz	x8, 2396c8 <check_attr_format_and_warn+0xa0>
  239668:	ldr	x0, [x8]
  23966c:	bl	235b80 <strna>
  239670:	cbz	x20, 2396d4 <check_attr_format_and_warn+0xac>
  239674:	ldr	w8, [x20, #8]
  239678:	b	2396d8 <check_attr_format_and_warn+0xb0>
  23967c:	add	x1, x29, #0x18
  239680:	sub	x2, x29, #0x8
  239684:	mov	x0, x20
  239688:	bl	230454 <udev_check_format>
  23968c:	tbz	w0, #31, 2397a4 <check_attr_format_and_warn+0x17c>
  239690:	cbz	x21, 23972c <check_attr_format_and_warn+0x104>
  239694:	ldr	x8, [x21, #32]
  239698:	cbz	x8, 239734 <check_attr_format_and_warn+0x10c>
  23969c:	ldr	x21, [x8, #8]
  2396a0:	cbz	x8, 23973c <check_attr_format_and_warn+0x114>
  2396a4:	ldr	x0, [x8]
  2396a8:	bl	235b80 <strna>
  2396ac:	cbz	x21, 239748 <check_attr_format_and_warn+0x120>
  2396b0:	ldr	w8, [x21, #8]
  2396b4:	b	23974c <check_attr_format_and_warn+0x124>
  2396b8:	mov	x8, xzr
  2396bc:	cbnz	x8, 239660 <check_attr_format_and_warn+0x38>
  2396c0:	mov	x20, xzr
  2396c4:	cbnz	x8, 239668 <check_attr_format_and_warn+0x40>
  2396c8:	mov	x0, xzr
  2396cc:	bl	235b80 <strna>
  2396d0:	cbnz	x20, 239674 <check_attr_format_and_warn+0x4c>
  2396d4:	mov	w8, wzr
  2396d8:	str	w8, [sp, #24]
  2396dc:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2396e0:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  2396e4:	add	x8, x8, #0x358
  2396e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2396ec:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2396f0:	mov	w1, #0x16                  	// #22
  2396f4:	add	x9, x9, #0x79
  2396f8:	add	x2, x2, #0x63
  2396fc:	add	x4, x4, #0x668
  239700:	stp	x8, x0, [sp, #8]
  239704:	mov	w0, #0x3                   	// #3
  239708:	movk	w1, #0x4000, lsl #16
  23970c:	mov	w3, #0x211                 	// #529
  239710:	mov	x5, xzr
  239714:	mov	x6, xzr
  239718:	mov	x7, xzr
  23971c:	stp	x9, x19, [sp, #32]
  239720:	str	xzr, [sp]
  239724:	bl	2539f0 <log_object_internal@plt>
  239728:	b	2397a8 <check_attr_format_and_warn+0x180>
  23972c:	mov	x8, xzr
  239730:	cbnz	x8, 23969c <check_attr_format_and_warn+0x74>
  239734:	mov	x21, xzr
  239738:	cbnz	x8, 2396a4 <check_attr_format_and_warn+0x7c>
  23973c:	mov	x0, xzr
  239740:	bl	235b80 <strna>
  239744:	cbnz	x21, 2396b0 <check_attr_format_and_warn+0x88>
  239748:	mov	w8, wzr
  23974c:	ldr	x9, [x29, #24]
  239750:	ldur	x10, [x29, #-8]
  239754:	str	w8, [sp, #24]
  239758:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23975c:	add	x8, x8, #0x2ff
  239760:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239764:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  239768:	mov	w1, #0x16                  	// #22
  23976c:	add	x9, x9, #0x1
  239770:	add	x2, x2, #0x63
  239774:	add	x4, x4, #0x668
  239778:	stp	x8, x0, [sp, #8]
  23977c:	mov	w0, #0x3                   	// #3
  239780:	movk	w1, #0x4000, lsl #16
  239784:	mov	w3, #0x213                 	// #531
  239788:	mov	x5, xzr
  23978c:	mov	x6, xzr
  239790:	mov	x7, xzr
  239794:	stp	x9, x10, [sp, #48]
  239798:	stp	x20, x19, [sp, #32]
  23979c:	str	xzr, [sp]
  2397a0:	bl	2539f0 <log_object_internal@plt>
  2397a4:	mov	w0, wzr
  2397a8:	ldp	x20, x19, [sp, #112]
  2397ac:	ldr	x21, [sp, #96]
  2397b0:	ldp	x29, x30, [sp, #80]
  2397b4:	add	sp, sp, #0x80
  2397b8:	ret

00000000002397bc <rule_get_substitution_type>:
  2397bc:	stp	x29, x30, [sp, #-32]!
  2397c0:	str	x19, [sp, #16]
  2397c4:	mov	x29, sp
  2397c8:	cbz	x0, 23981c <rule_get_substitution_type+0x60>
  2397cc:	ldrb	w8, [x0]
  2397d0:	mov	x19, x0
  2397d4:	cmp	w8, #0x5b
  2397d8:	b.ne	2397e4 <rule_get_substitution_type+0x28>  // b.any
  2397dc:	mov	w0, #0x2                   	// #2
  2397e0:	b	239810 <rule_get_substitution_type+0x54>
  2397e4:	mov	w1, #0x25                  	// #37
  2397e8:	mov	x0, x19
  2397ec:	bl	253a60 <strchr@plt>
  2397f0:	cbz	x0, 2397fc <rule_get_substitution_type+0x40>
  2397f4:	mov	w0, #0x1                   	// #1
  2397f8:	b	239810 <rule_get_substitution_type+0x54>
  2397fc:	mov	w1, #0x24                  	// #36
  239800:	mov	x0, x19
  239804:	bl	253a60 <strchr@plt>
  239808:	cmp	x0, #0x0
  23980c:	cset	w0, ne  // ne = any
  239810:	ldr	x19, [sp, #16]
  239814:	ldp	x29, x30, [sp], #32
  239818:	ret
  23981c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  239820:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239824:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  239828:	add	x1, x1, #0x50a
  23982c:	add	x2, x2, #0x63
  239830:	add	x4, x4, #0x62e
  239834:	mov	w0, #0x1                   	// #1
  239838:	mov	w3, #0x184                 	// #388
  23983c:	bl	253740 <log_assert_failed_realm@plt>

0000000000239840 <rule_resolve_user>:
  239840:	sub	sp, sp, #0x50
  239844:	stp	x29, x30, [sp, #32]
  239848:	add	x29, sp, #0x20
  23984c:	stp	x22, x21, [sp, #48]
  239850:	stp	x20, x19, [sp, #64]
  239854:	stur	x1, [x29, #-8]
  239858:	str	xzr, [sp, #16]
  23985c:	cbz	x0, 239950 <rule_resolve_user+0x110>
  239860:	cbz	x1, 239974 <rule_resolve_user+0x134>
  239864:	mov	x20, x0
  239868:	mov	x21, x0
  23986c:	ldr	x0, [x20, #16]!
  239870:	mov	x19, x2
  239874:	bl	239bf4 <hashmap_get>
  239878:	cbz	x0, 2398a8 <rule_resolve_user+0x68>
  23987c:	mov	w21, wzr
  239880:	sub	w8, w0, #0x1
  239884:	str	w8, [x19]
  239888:	add	x0, sp, #0x10
  23988c:	bl	2352f8 <freep>
  239890:	mov	w0, w21
  239894:	ldp	x20, x19, [sp, #64]
  239898:	ldp	x22, x21, [sp, #48]
  23989c:	ldp	x29, x30, [sp, #32]
  2398a0:	add	sp, sp, #0x50
  2398a4:	ret
  2398a8:	sub	x0, x29, #0x8
  2398ac:	add	x1, sp, #0xc
  2398b0:	mov	w5, #0x2                   	// #2
  2398b4:	mov	x2, xzr
  2398b8:	mov	x3, xzr
  2398bc:	mov	x4, xzr
  2398c0:	bl	254500 <get_user_creds@plt>
  2398c4:	ldur	x4, [x29, #-8]
  2398c8:	tbnz	w0, #31, 23991c <rule_resolve_user+0xdc>
  2398cc:	mov	x0, x4
  2398d0:	bl	253ab0 <strdup@plt>
  2398d4:	str	x0, [sp, #16]
  2398d8:	cbz	x0, 239948 <rule_resolve_user+0x108>
  2398dc:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  2398e0:	ldr	x1, [x1, #736]
  2398e4:	mov	x22, x0
  2398e8:	mov	x0, x20
  2398ec:	bl	253a90 <internal_hashmap_ensure_allocated@plt>
  2398f0:	tbnz	w0, #31, 239940 <rule_resolve_user+0x100>
  2398f4:	ldr	w8, [sp, #12]
  2398f8:	ldr	x0, [x20]
  2398fc:	mov	x1, x22
  239900:	add	x2, x8, #0x1
  239904:	bl	253aa0 <hashmap_put@plt>
  239908:	tbnz	w0, #31, 239940 <rule_resolve_user+0x100>
  23990c:	ldr	w8, [sp, #12]
  239910:	mov	w21, wzr
  239914:	str	xzr, [sp, #16]
  239918:	b	239884 <rule_resolve_user+0x44>
  23991c:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  239920:	mov	w2, w0
  239924:	add	x3, x3, #0xb7c
  239928:	mov	x0, xzr
  23992c:	mov	x1, x21
  239930:	bl	239c08 <log_unknown_owner>
  239934:	mov	w21, wzr
  239938:	mov	w8, #0xffffffff            	// #-1
  23993c:	b	239884 <rule_resolve_user+0x44>
  239940:	mov	w21, w0
  239944:	b	239888 <rule_resolve_user+0x48>
  239948:	mov	w21, #0xfffffff4            	// #-12
  23994c:	b	239888 <rule_resolve_user+0x48>
  239950:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  239954:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239958:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  23995c:	add	x1, x1, #0x5c9
  239960:	add	x2, x2, #0x63
  239964:	add	x4, x4, #0x381
  239968:	mov	w0, #0x1                   	// #1
  23996c:	mov	w3, #0x13b                 	// #315
  239970:	bl	253740 <log_assert_failed_realm@plt>
  239974:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  239978:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23997c:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  239980:	add	x1, x1, #0xefb
  239984:	add	x2, x2, #0x63
  239988:	add	x4, x4, #0x381
  23998c:	mov	w0, #0x1                   	// #1
  239990:	mov	w3, #0x13c                 	// #316
  239994:	bl	253740 <log_assert_failed_realm@plt>

0000000000239998 <parse_gid>:
  239998:	stp	x29, x30, [sp, #-16]!
  23999c:	mov	x29, sp
  2399a0:	bl	2544d0 <parse_uid@plt>
  2399a4:	ldp	x29, x30, [sp], #16
  2399a8:	ret

00000000002399ac <rule_resolve_group>:
  2399ac:	sub	sp, sp, #0x50
  2399b0:	stp	x29, x30, [sp, #32]
  2399b4:	add	x29, sp, #0x20
  2399b8:	stp	x22, x21, [sp, #48]
  2399bc:	stp	x20, x19, [sp, #64]
  2399c0:	stur	x1, [x29, #-8]
  2399c4:	str	xzr, [sp, #16]
  2399c8:	cbz	x0, 239ab0 <rule_resolve_group+0x104>
  2399cc:	cbz	x1, 239ad4 <rule_resolve_group+0x128>
  2399d0:	mov	x20, x0
  2399d4:	mov	x21, x0
  2399d8:	ldr	x0, [x20, #24]!
  2399dc:	mov	x19, x2
  2399e0:	bl	239bf4 <hashmap_get>
  2399e4:	cbz	x0, 239a14 <rule_resolve_group+0x68>
  2399e8:	mov	w21, wzr
  2399ec:	sub	w8, w0, #0x1
  2399f0:	str	w8, [x19]
  2399f4:	add	x0, sp, #0x10
  2399f8:	bl	2352f8 <freep>
  2399fc:	mov	w0, w21
  239a00:	ldp	x20, x19, [sp, #64]
  239a04:	ldp	x22, x21, [sp, #48]
  239a08:	ldp	x29, x30, [sp, #32]
  239a0c:	add	sp, sp, #0x50
  239a10:	ret
  239a14:	sub	x0, x29, #0x8
  239a18:	add	x1, sp, #0xc
  239a1c:	mov	w2, #0x2                   	// #2
  239a20:	bl	254510 <get_group_creds@plt>
  239a24:	ldur	x4, [x29, #-8]
  239a28:	tbnz	w0, #31, 239a7c <rule_resolve_group+0xd0>
  239a2c:	mov	x0, x4
  239a30:	bl	253ab0 <strdup@plt>
  239a34:	str	x0, [sp, #16]
  239a38:	cbz	x0, 239aa8 <rule_resolve_group+0xfc>
  239a3c:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  239a40:	ldr	x1, [x1, #736]
  239a44:	mov	x22, x0
  239a48:	mov	x0, x20
  239a4c:	bl	253a90 <internal_hashmap_ensure_allocated@plt>
  239a50:	tbnz	w0, #31, 239aa0 <rule_resolve_group+0xf4>
  239a54:	ldr	w8, [sp, #12]
  239a58:	ldr	x0, [x20]
  239a5c:	mov	x1, x22
  239a60:	add	x2, x8, #0x1
  239a64:	bl	253aa0 <hashmap_put@plt>
  239a68:	tbnz	w0, #31, 239aa0 <rule_resolve_group+0xf4>
  239a6c:	ldr	w8, [sp, #12]
  239a70:	mov	w21, wzr
  239a74:	str	xzr, [sp, #16]
  239a78:	b	2399f0 <rule_resolve_group+0x44>
  239a7c:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  239a80:	mov	w2, w0
  239a84:	add	x3, x3, #0x1ef
  239a88:	mov	x0, xzr
  239a8c:	mov	x1, x21
  239a90:	bl	239c08 <log_unknown_owner>
  239a94:	mov	w21, wzr
  239a98:	mov	w8, #0xffffffff            	// #-1
  239a9c:	b	2399f0 <rule_resolve_group+0x44>
  239aa0:	mov	w21, w0
  239aa4:	b	2399f4 <rule_resolve_group+0x48>
  239aa8:	mov	w21, #0xfffffff4            	// #-12
  239aac:	b	2399f4 <rule_resolve_group+0x48>
  239ab0:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  239ab4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239ab8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  239abc:	add	x1, x1, #0x5c9
  239ac0:	add	x2, x2, #0x63
  239ac4:	add	x4, x4, #0xf71
  239ac8:	mov	w0, #0x1                   	// #1
  239acc:	mov	w3, #0x162                 	// #354
  239ad0:	bl	253740 <log_assert_failed_realm@plt>
  239ad4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  239ad8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239adc:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  239ae0:	add	x1, x1, #0xefb
  239ae4:	add	x2, x2, #0x63
  239ae8:	add	x4, x4, #0xf71
  239aec:	mov	w0, #0x1                   	// #1
  239af0:	mov	w3, #0x163                 	// #355
  239af4:	bl	253740 <log_assert_failed_realm@plt>

0000000000239af8 <string_is_glob>:
  239af8:	stp	x29, x30, [sp, #-16]!
  239afc:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  239b00:	add	x1, x1, #0x605
  239b04:	mov	x29, sp
  239b08:	bl	254520 <strpbrk@plt>
  239b0c:	cmp	x0, #0x0
  239b10:	cset	w0, ne  // ne = any
  239b14:	ldp	x29, x30, [sp], #16
  239b18:	ret

0000000000239b1c <rule_line_append_token>:
  239b1c:	stp	x29, x30, [sp, #-16]!
  239b20:	mov	x29, sp
  239b24:	cbz	x0, 239bac <rule_line_append_token+0x90>
  239b28:	cbz	x1, 239bd0 <rule_line_append_token+0xb4>
  239b2c:	ldr	x10, [x0, #48]
  239b30:	cbz	x10, 239b4c <rule_line_append_token+0x30>
  239b34:	mov	x9, x10
  239b38:	ldr	x10, [x10, #24]
  239b3c:	cbnz	x10, 239b34 <rule_line_append_token+0x18>
  239b40:	add	x8, x9, #0x18
  239b44:	str	x10, [x1, #24]
  239b48:	b	239b80 <rule_line_append_token+0x64>
  239b4c:	mov	x8, x0
  239b50:	ldr	x10, [x8, #56]!
  239b54:	cbz	x10, 239b94 <rule_line_append_token+0x78>
  239b58:	mov	x11, x10
  239b5c:	mov	x9, x11
  239b60:	ldr	x11, [x11, #24]
  239b64:	cbnz	x11, 239b5c <rule_line_append_token+0x40>
  239b68:	cbz	x9, 239b9c <rule_line_append_token+0x80>
  239b6c:	mov	x8, x9
  239b70:	ldr	x10, [x8, #24]!
  239b74:	str	x10, [x1, #24]
  239b78:	cbz	x10, 239b80 <rule_line_append_token+0x64>
  239b7c:	str	x1, [x10, #32]
  239b80:	str	x9, [x1, #32]
  239b84:	str	x1, [x8]
  239b88:	str	x1, [x0, #48]
  239b8c:	ldp	x29, x30, [sp], #16
  239b90:	ret
  239b94:	mov	x9, xzr
  239b98:	cbnz	x9, 239b6c <rule_line_append_token+0x50>
  239b9c:	mov	x9, xzr
  239ba0:	str	x10, [x1, #24]
  239ba4:	cbnz	x10, 239b7c <rule_line_append_token+0x60>
  239ba8:	b	239b80 <rule_line_append_token+0x64>
  239bac:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  239bb0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239bb4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  239bb8:	add	x1, x1, #0x84e
  239bbc:	add	x2, x2, #0x63
  239bc0:	add	x4, x4, #0xd76
  239bc4:	mov	w0, #0x1                   	// #1
  239bc8:	mov	w3, #0x18e                 	// #398
  239bcc:	bl	253740 <log_assert_failed_realm@plt>
  239bd0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  239bd4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239bd8:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  239bdc:	add	x1, x1, #0xd63
  239be0:	add	x2, x2, #0x63
  239be4:	add	x4, x4, #0xd76
  239be8:	mov	w0, #0x1                   	// #1
  239bec:	mov	w3, #0x18f                 	// #399
  239bf0:	bl	253740 <log_assert_failed_realm@plt>

0000000000239bf4 <hashmap_get>:
  239bf4:	stp	x29, x30, [sp, #-16]!
  239bf8:	mov	x29, sp
  239bfc:	bl	253b70 <internal_hashmap_get@plt>
  239c00:	ldp	x29, x30, [sp], #16
  239c04:	ret

0000000000239c08 <log_unknown_owner>:
  239c08:	sub	sp, sp, #0x80
  239c0c:	cmp	w2, #0x0
  239c10:	cneg	w8, w2, mi  // mi = first
  239c14:	and	w8, w8, #0xfffffffe
  239c18:	stp	x22, x21, [sp, #96]
  239c1c:	stp	x20, x19, [sp, #112]
  239c20:	mov	x20, x4
  239c24:	mov	x19, x3
  239c28:	cmp	w8, #0x2
  239c2c:	mov	x21, x0
  239c30:	stp	x29, x30, [sp, #48]
  239c34:	str	x25, [sp, #64]
  239c38:	stp	x24, x23, [sp, #80]
  239c3c:	add	x29, sp, #0x30
  239c40:	b.ne	239c68 <log_unknown_owner+0x60>  // b.any
  239c44:	cbz	x1, 239c90 <log_unknown_owner+0x88>
  239c48:	ldr	x8, [x1, #32]
  239c4c:	cbz	x8, 239c98 <log_unknown_owner+0x90>
  239c50:	ldr	x24, [x8, #8]
  239c54:	cbz	x8, 239ca0 <log_unknown_owner+0x98>
  239c58:	ldr	x23, [x8]
  239c5c:	str	xzr, [x29, #24]
  239c60:	cbnz	x21, 239cac <log_unknown_owner+0xa4>
  239c64:	b	239cbc <log_unknown_owner+0xb4>
  239c68:	mov	w22, w2
  239c6c:	cbz	x1, 239ce4 <log_unknown_owner+0xdc>
  239c70:	ldr	x8, [x1, #32]
  239c74:	cbz	x8, 239cec <log_unknown_owner+0xe4>
  239c78:	ldr	x25, [x8, #8]
  239c7c:	cbz	x8, 239cf4 <log_unknown_owner+0xec>
  239c80:	ldr	x24, [x8]
  239c84:	str	xzr, [x29, #24]
  239c88:	cbnz	x21, 239d00 <log_unknown_owner+0xf8>
  239c8c:	b	239d10 <log_unknown_owner+0x108>
  239c90:	mov	x8, xzr
  239c94:	cbnz	x8, 239c50 <log_unknown_owner+0x48>
  239c98:	mov	x24, xzr
  239c9c:	cbnz	x8, 239c58 <log_unknown_owner+0x50>
  239ca0:	mov	x23, xzr
  239ca4:	str	xzr, [x29, #24]
  239ca8:	cbz	x21, 239cbc <log_unknown_owner+0xb4>
  239cac:	mov	w0, #0x1                   	// #1
  239cb0:	bl	2535b0 <log_get_max_level_realm@plt>
  239cb4:	cmp	w0, #0x3
  239cb8:	b.ge	239ddc <log_unknown_owner+0x1d4>  // b.tcont
  239cbc:	ldr	x21, [x29, #24]
  239cc0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  239cc4:	add	x8, x8, #0xb64
  239cc8:	mov	x0, x23
  239ccc:	cmp	x21, #0x0
  239cd0:	csel	x22, xzr, x8, eq  // eq = none
  239cd4:	bl	235b80 <strna>
  239cd8:	cbz	x24, 239d38 <log_unknown_owner+0x130>
  239cdc:	ldr	w8, [x24, #8]
  239ce0:	b	239d3c <log_unknown_owner+0x134>
  239ce4:	mov	x8, xzr
  239ce8:	cbnz	x8, 239c78 <log_unknown_owner+0x70>
  239cec:	mov	x25, xzr
  239cf0:	cbnz	x8, 239c80 <log_unknown_owner+0x78>
  239cf4:	mov	x24, xzr
  239cf8:	str	xzr, [x29, #24]
  239cfc:	cbz	x21, 239d10 <log_unknown_owner+0x108>
  239d00:	mov	w0, #0x1                   	// #1
  239d04:	bl	2535b0 <log_get_max_level_realm@plt>
  239d08:	cmp	w0, #0x3
  239d0c:	b.ge	239dec <log_unknown_owner+0x1e4>  // b.tcont
  239d10:	ldr	x21, [x29, #24]
  239d14:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  239d18:	add	x8, x8, #0xb64
  239d1c:	mov	x0, x24
  239d20:	cmp	x21, #0x0
  239d24:	csel	x23, xzr, x8, eq  // eq = none
  239d28:	bl	235b80 <strna>
  239d2c:	cbz	x25, 239d78 <log_unknown_owner+0x170>
  239d30:	ldr	w8, [x25, #8]
  239d34:	b	239d7c <log_unknown_owner+0x174>
  239d38:	mov	w8, wzr
  239d3c:	str	w8, [sp, #24]
  239d40:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  239d44:	add	x8, x8, #0x9b0
  239d48:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239d4c:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  239d50:	stp	x19, x20, [sp, #32]
  239d54:	add	x2, x2, #0x63
  239d58:	add	x4, x4, #0xee6
  239d5c:	stp	x8, x0, [sp, #8]
  239d60:	mov	w0, #0x3                   	// #3
  239d64:	mov	w3, #0xf1                  	// #241
  239d68:	str	xzr, [sp]
  239d6c:	mov	w1, wzr
  239d70:	mov	x5, x22
  239d74:	b	239db4 <log_unknown_owner+0x1ac>
  239d78:	mov	w8, wzr
  239d7c:	str	w8, [sp, #24]
  239d80:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  239d84:	add	x8, x8, #0xae9
  239d88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  239d8c:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  239d90:	add	x2, x2, #0x63
  239d94:	add	x4, x4, #0xee6
  239d98:	stp	x8, x0, [sp, #8]
  239d9c:	mov	w0, #0x3                   	// #3
  239da0:	mov	w3, #0xf3                  	// #243
  239da4:	mov	w1, w22
  239da8:	mov	x5, x23
  239dac:	stp	x19, x20, [sp, #32]
  239db0:	str	xzr, [sp]
  239db4:	mov	x6, x21
  239db8:	mov	x7, xzr
  239dbc:	bl	2539f0 <log_object_internal@plt>
  239dc0:	ldp	x20, x19, [sp, #112]
  239dc4:	ldp	x22, x21, [sp, #96]
  239dc8:	ldp	x24, x23, [sp, #80]
  239dcc:	ldr	x25, [sp, #64]
  239dd0:	ldp	x29, x30, [sp, #48]
  239dd4:	add	sp, sp, #0x80
  239dd8:	ret
  239ddc:	add	x1, x29, #0x18
  239de0:	mov	x0, x21
  239de4:	bl	253a40 <sd_device_get_sysname@plt>
  239de8:	b	239cbc <log_unknown_owner+0xb4>
  239dec:	add	x1, x29, #0x18
  239df0:	mov	x0, x21
  239df4:	bl	253a40 <sd_device_get_sysname@plt>
  239df8:	b	239d10 <log_unknown_owner+0x108>

0000000000239dfc <streq_ptr>:
  239dfc:	stp	x29, x30, [sp, #-16]!
  239e00:	mov	x29, sp
  239e04:	bl	253e20 <strcmp_ptr@plt>
  239e08:	cmp	w0, #0x0
  239e0c:	cset	w0, eq  // eq = none
  239e10:	ldp	x29, x30, [sp], #16
  239e14:	ret

0000000000239e18 <token_is_for_parents>:
  239e18:	ldr	w8, [x0]
  239e1c:	mov	w9, #0xf4ffffff            	// #-184549377
  239e20:	add	w8, w9, w8, lsl #24
  239e24:	mov	w9, #0x5ffffff             	// #100663295
  239e28:	cmp	w8, w9
  239e2c:	cset	w0, cc  // cc = lo, ul, last
  239e30:	ret

0000000000239e34 <udev_rule_apply_parent_token_to_event>:
  239e34:	stp	x29, x30, [sp, #-64]!
  239e38:	stp	x22, x21, [sp, #32]
  239e3c:	stp	x20, x19, [sp, #48]
  239e40:	ldr	x8, [x0, #32]
  239e44:	str	x23, [sp, #16]
  239e48:	mov	x21, x1
  239e4c:	mov	x19, x0
  239e50:	ldr	x22, [x8, #8]
  239e54:	ldr	x8, [x1]
  239e58:	mov	x20, x1
  239e5c:	mov	x29, sp
  239e60:	ldr	x23, [x22, #48]
  239e64:	str	x8, [x21, #8]!
  239e68:	str	x23, [x22, #48]
  239e6c:	cbz	x23, 239eac <udev_rule_apply_parent_token_to_event+0x78>
  239e70:	mov	x0, x23
  239e74:	bl	239e18 <token_is_for_parents>
  239e78:	tbz	w0, #0, 239ed0 <udev_rule_apply_parent_token_to_event+0x9c>
  239e7c:	ldr	x1, [x20, #8]
  239e80:	mov	x0, x19
  239e84:	mov	x2, x20
  239e88:	mov	x3, xzr
  239e8c:	mov	x4, xzr
  239e90:	bl	239ee8 <udev_rule_apply_token_to_event>
  239e94:	tbnz	w0, #31, 239ed4 <udev_rule_apply_parent_token_to_event+0xa0>
  239e98:	cbz	w0, 239eac <udev_rule_apply_parent_token_to_event+0x78>
  239e9c:	ldr	x8, [x22, #48]
  239ea0:	ldr	x0, [x8, #24]
  239ea4:	str	x0, [x22, #48]
  239ea8:	cbnz	x0, 239e74 <udev_rule_apply_parent_token_to_event+0x40>
  239eac:	ldr	x8, [x22, #48]
  239eb0:	cbz	x8, 239ed0 <udev_rule_apply_parent_token_to_event+0x9c>
  239eb4:	ldr	x0, [x21]
  239eb8:	mov	x1, x21
  239ebc:	bl	253d60 <sd_device_get_parent@plt>
  239ec0:	tbz	w0, #31, 239e68 <udev_rule_apply_parent_token_to_event+0x34>
  239ec4:	mov	w0, wzr
  239ec8:	str	xzr, [x21]
  239ecc:	b	239ed4 <udev_rule_apply_parent_token_to_event+0xa0>
  239ed0:	mov	w0, #0x1                   	// #1
  239ed4:	ldp	x20, x19, [sp, #48]
  239ed8:	ldp	x22, x21, [sp, #32]
  239edc:	ldr	x23, [sp, #16]
  239ee0:	ldp	x29, x30, [sp], #64
  239ee4:	ret

0000000000239ee8 <udev_rule_apply_token_to_event>:
  239ee8:	stp	x29, x30, [sp, #-96]!
  239eec:	stp	x28, x27, [sp, #16]
  239ef0:	stp	x26, x25, [sp, #32]
  239ef4:	stp	x24, x23, [sp, #48]
  239ef8:	stp	x22, x21, [sp, #64]
  239efc:	stp	x20, x19, [sp, #80]
  239f00:	mov	x29, sp
  239f04:	sub	sp, sp, #0x4, lsl #12
  239f08:	sub	sp, sp, #0x460
  239f0c:	cbz	x0, 23d748 <udev_rule_apply_token_to_event+0x3860>
  239f10:	mov	x28, x1
  239f14:	cbz	x1, 23d76c <udev_rule_apply_token_to_event+0x3884>
  239f18:	mov	x21, x2
  239f1c:	cbz	x2, 23d790 <udev_rule_apply_token_to_event+0x38a8>
  239f20:	mov	x19, x0
  239f24:	ldr	x8, [x19, #32]!
  239f28:	mov	x23, x0
  239f2c:	ldr	x8, [x8, #8]
  239f30:	ldr	x20, [x8, #48]
  239f34:	ldr	w8, [x20]
  239f38:	sxtb	w9, w8
  239f3c:	cmp	w9, #0x2e
  239f40:	b.hi	23d7b4 <udev_rule_apply_token_to_event+0x38cc>  // b.pmore
  239f44:	adrp	x10, 218000 <worker_hash_op+0xdad0>
  239f48:	add	x10, x10, #0x9ee
  239f4c:	adr	x11, 239f60 <udev_rule_apply_token_to_event+0x78>
  239f50:	ldrh	w12, [x10, x9, lsl #1]
  239f54:	add	x11, x11, x12, lsl #2
  239f58:	mov	x22, x3
  239f5c:	br	x11
  239f60:	add	x1, sp, #0x4, lsl #12
  239f64:	add	x1, x1, #0x50
  239f68:	mov	x0, x28
  239f6c:	bl	253a40 <sd_device_get_sysname@plt>
  239f70:	tbz	w0, #31, 23a708 <udev_rule_apply_token_to_event+0x820>
  239f74:	ldr	x8, [x19]
  239f78:	mov	w21, w0
  239f7c:	cbz	x8, 23b2bc <udev_rule_apply_token_to_event+0x13d4>
  239f80:	ldr	x23, [x8, #8]
  239f84:	b	23b2c0 <udev_rule_apply_token_to_event+0x13d8>
  239f88:	str	xzr, [sp, #80]
  239f8c:	ldrsh	w9, [x21, #104]
  239f90:	tbnz	w9, #31, 23c37c <udev_rule_apply_token_to_event+0x2494>
  239f94:	and	w8, w8, #0xff00
  239f98:	cmp	w8, #0x500
  239f9c:	b.ne	239fa8 <udev_rule_apply_token_to_event+0xc0>  // b.any
  239fa0:	orr	w8, w9, #0x8000
  239fa4:	strh	w8, [x21, #104]
  239fa8:	ldr	w8, [x20]
  239fac:	sbfx	w8, w8, #8, #8
  239fb0:	and	w8, w8, #0xfffffffe
  239fb4:	cmp	w8, #0x4
  239fb8:	b.ne	239fc4 <udev_rule_apply_token_to_event+0xdc>  // b.any
  239fbc:	ldr	x0, [x21, #64]
  239fc0:	bl	23df5c <ordered_hashmap_clear_free_key>
  239fc4:	add	x22, x21, #0x40
  239fc8:	mov	x0, x22
  239fcc:	mov	x1, xzr
  239fd0:	bl	254530 <internal_ordered_hashmap_ensure_allocated@plt>
  239fd4:	tbnz	w0, #31, 23aa7c <udev_rule_apply_token_to_event+0xb94>
  239fd8:	ldr	x1, [x20, #8]
  239fdc:	add	x2, sp, #0x4, lsl #12
  239fe0:	add	x2, x2, #0x58
  239fe4:	mov	w3, #0x400                 	// #1024
  239fe8:	mov	x0, x21
  239fec:	mov	w4, wzr
  239ff0:	bl	22f864 <udev_event_apply_format>
  239ff4:	add	x0, sp, #0x4, lsl #12
  239ff8:	add	x0, x0, #0x58
  239ffc:	bl	253ab0 <strdup@plt>
  23a000:	str	x0, [sp, #80]
  23a004:	cbz	x0, 23b2a0 <udev_rule_apply_token_to_event+0x13b8>
  23a008:	mov	x1, x0
  23a00c:	ldr	x0, [x22]
  23a010:	ldr	x2, [x20, #16]
  23a014:	bl	23df2c <ordered_hashmap_put>
  23a018:	tbnz	w0, #31, 23b918 <udev_rule_apply_token_to_event+0x1a30>
  23a01c:	str	xzr, [sp, #80]
  23a020:	ldr	x8, [x19]
  23a024:	cbz	x8, 23c2e0 <udev_rule_apply_token_to_event+0x23f8>
  23a028:	ldr	x23, [x8, #8]
  23a02c:	b	23c2e4 <udev_rule_apply_token_to_event+0x23fc>
  23a030:	add	x1, sp, #0x4, lsl #12
  23a034:	add	x1, x1, #0x50
  23a038:	mov	x0, x28
  23a03c:	bl	254030 <sd_device_get_driver@plt>
  23a040:	cmn	w0, #0x2
  23a044:	b.eq	23a0c8 <udev_rule_apply_token_to_event+0x1e0>  // b.none
  23a048:	mov	w21, w0
  23a04c:	tbz	w0, #31, 23a708 <udev_rule_apply_token_to_event+0x820>
  23a050:	ldr	x8, [x19]
  23a054:	cbz	x8, 23ba9c <udev_rule_apply_token_to_event+0x1bb4>
  23a058:	ldr	x23, [x8, #8]
  23a05c:	b	23baa0 <udev_rule_apply_token_to_event+0x1bb8>
  23a060:	mov	x0, x20
  23a064:	mov	x1, x28
  23a068:	mov	x2, x21
  23a06c:	bl	23d9e8 <token_match_attr>
  23a070:	and	w21, w0, #0x1
  23a074:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23a078:	mov	x0, x28
  23a07c:	bl	254540 <sd_device_get_tag_first@plt>
  23a080:	str	x0, [sp, #16464]
  23a084:	cbz	x0, 23d2e8 <udev_rule_apply_token_to_event+0x3400>
  23a088:	mov	x1, x0
  23a08c:	mov	x0, x20
  23a090:	bl	23d7fc <token_match_string>
  23a094:	tbnz	w0, #0, 23d344 <udev_rule_apply_token_to_event+0x345c>
  23a098:	mov	x0, x28
  23a09c:	bl	254550 <sd_device_get_tag_next@plt>
  23a0a0:	mov	x1, x0
  23a0a4:	str	x0, [sp, #16464]
  23a0a8:	cbnz	x0, 23a08c <udev_rule_apply_token_to_event+0x1a4>
  23a0ac:	b	23d2e8 <udev_rule_apply_token_to_event+0x3400>
  23a0b0:	add	x1, sp, #0x4, lsl #12
  23a0b4:	add	x1, x1, #0x50
  23a0b8:	mov	x0, x28
  23a0bc:	bl	253bb0 <sd_device_get_subsystem@plt>
  23a0c0:	cmn	w0, #0x2
  23a0c4:	b.ne	23a0d0 <udev_rule_apply_token_to_event+0x1e8>  // b.any
  23a0c8:	str	xzr, [sp, #16464]
  23a0cc:	b	23a708 <udev_rule_apply_token_to_event+0x820>
  23a0d0:	mov	w21, w0
  23a0d4:	tbz	w0, #31, 23a708 <udev_rule_apply_token_to_event+0x820>
  23a0d8:	ldr	x8, [x19]
  23a0dc:	cbz	x8, 23bb1c <udev_rule_apply_token_to_event+0x1c34>
  23a0e0:	ldr	x23, [x8, #8]
  23a0e4:	b	23bb20 <udev_rule_apply_token_to_event+0x1c38>
  23a0e8:	add	x8, sp, #0x50
  23a0ec:	str	x8, [sp, #16472]
  23a0f0:	ldrh	w8, [x21, #104]
  23a0f4:	tbnz	w8, #10, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a0f8:	ldrb	w9, [x20, #1]
  23a0fc:	lsl	w9, w9, #8
  23a100:	cmp	w9, #0x500
  23a104:	b.ne	23a110 <udev_rule_apply_token_to_event+0x228>  // b.any
  23a108:	orr	w8, w8, #0x400
  23a10c:	strh	w8, [x21, #104]
  23a110:	ldr	x1, [x20, #8]
  23a114:	add	x2, sp, #0x50
  23a118:	mov	w3, #0x200                 	// #512
  23a11c:	mov	x0, x21
  23a120:	mov	w4, wzr
  23a124:	bl	22f864 <udev_event_apply_format>
  23a128:	add	x20, x21, #0x30
  23a12c:	add	x0, sp, #0x4, lsl #12
  23a130:	add	x0, x0, #0x58
  23a134:	mov	w2, #0x2                   	// #2
  23a138:	mov	x1, x20
  23a13c:	bl	254510 <get_group_creds@plt>
  23a140:	tbnz	w0, #31, 23b4dc <udev_rule_apply_token_to_event+0x15f4>
  23a144:	ldr	x8, [x19]
  23a148:	cbz	x8, 23becc <udev_rule_apply_token_to_event+0x1fe4>
  23a14c:	ldr	x23, [x8, #8]
  23a150:	b	23bed0 <udev_rule_apply_token_to_event+0x1fe8>
  23a154:	ldr	x1, [x21, #32]
  23a158:	b	23a70c <udev_rule_apply_token_to_event+0x824>
  23a15c:	ldr	x1, [x20, #16]
  23a160:	add	x2, sp, #0x4, lsl #12
  23a164:	add	x2, x2, #0x58
  23a168:	mov	w3, #0x400                 	// #1024
  23a16c:	mov	x0, x21
  23a170:	mov	w4, wzr
  23a174:	bl	22f864 <udev_event_apply_format>
  23a178:	ldr	x1, [x20, #8]
  23a17c:	add	x2, sp, #0x50
  23a180:	mov	w3, #0x200                 	// #512
  23a184:	mov	x0, x21
  23a188:	mov	w4, wzr
  23a18c:	bl	22f864 <udev_event_apply_format>
  23a190:	add	x0, sp, #0x4, lsl #12
  23a194:	add	x0, x0, #0x58
  23a198:	bl	254560 <sysctl_normalize@plt>
  23a19c:	ldr	x8, [x19]
  23a1a0:	cbz	x8, 23aa98 <udev_rule_apply_token_to_event+0xbb0>
  23a1a4:	ldr	x24, [x8, #8]
  23a1a8:	b	23aa9c <udev_rule_apply_token_to_event+0xbb4>
  23a1ac:	ldr	x1, [x20, #8]
  23a1b0:	add	x2, sp, #0x4, lsl #12
  23a1b4:	add	x2, x2, #0x58
  23a1b8:	mov	w3, #0x400                 	// #1024
  23a1bc:	mov	x0, x21
  23a1c0:	mov	w4, wzr
  23a1c4:	bl	22f864 <udev_event_apply_format>
  23a1c8:	add	x1, sp, #0x4, lsl #12
  23a1cc:	add	x1, x1, #0x58
  23a1d0:	mov	x0, x28
  23a1d4:	bl	23de14 <import_parent_into_properties>
  23a1d8:	mov	w21, w0
  23a1dc:	tbnz	w0, #31, 23aaa8 <udev_rule_apply_token_to_event+0xbc0>
  23a1e0:	ldr	w8, [x20]
  23a1e4:	cmp	w21, #0x0
  23a1e8:	cset	w9, eq  // eq = none
  23a1ec:	lsl	w8, w8, #16
  23a1f0:	b	23c00c <udev_rule_apply_token_to_event+0x2124>
  23a1f4:	ldr	x1, [x20, #8]
  23a1f8:	add	x2, sp, #0x4, lsl #12
  23a1fc:	add	x2, x2, #0x58
  23a200:	mov	w3, #0x400                 	// #1024
  23a204:	mov	x0, x21
  23a208:	mov	w4, wzr
  23a20c:	bl	22f864 <udev_event_apply_format>
  23a210:	ldr	x8, [x19]
  23a214:	cbz	x8, 23ab74 <udev_rule_apply_token_to_event+0xc8c>
  23a218:	ldr	x26, [x8, #8]
  23a21c:	b	23ab78 <udev_rule_apply_token_to_event+0xc90>
  23a220:	ldr	w8, [x20, #16]
  23a224:	sub	w22, w8, #0x1
  23a228:	mov	w8, #0x1                   	// #1
  23a22c:	mov	w0, w22
  23a230:	lsl	w26, w8, w22
  23a234:	bl	23f114 <udev_builtin_run_once>
  23a238:	tbz	w0, #0, 23b70c <udev_rule_apply_token_to_event+0x1824>
  23a23c:	ldr	w8, [x21, #96]
  23a240:	tst	w8, w26
  23a244:	b.eq	23b704 <udev_rule_apply_token_to_event+0x181c>  // b.none
  23a248:	ldr	x8, [x19]
  23a24c:	cbz	x8, 23bf5c <udev_rule_apply_token_to_event+0x2074>
  23a250:	ldr	x25, [x8, #8]
  23a254:	b	23bf60 <udev_rule_apply_token_to_event+0x2078>
  23a258:	ldr	w1, [x20, #16]
  23a25c:	mov	x0, x28
  23a260:	bl	254570 <device_set_devlink_priority@plt>
  23a264:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a268:	ldr	x0, [x21, #32]
  23a26c:	bl	2347f8 <mfree>
  23a270:	str	xzr, [x21, #32]
  23a274:	ldr	x1, [x20, #8]
  23a278:	add	x2, sp, #0x4, lsl #12
  23a27c:	add	x2, x2, #0x58
  23a280:	mov	w3, #0x400                 	// #1024
  23a284:	mov	x0, x21
  23a288:	mov	w4, wzr
  23a28c:	bl	22f864 <udev_event_apply_format>
  23a290:	ldr	x8, [x19]
  23a294:	cbz	x8, 23ac64 <udev_rule_apply_token_to_event+0xd7c>
  23a298:	ldr	x27, [x8, #8]
  23a29c:	b	23ac68 <udev_rule_apply_token_to_event+0xd80>
  23a2a0:	ldp	x0, x22, [x20, #8]
  23a2a4:	add	x8, sp, #0x50
  23a2a8:	str	x8, [sp, #16472]
  23a2ac:	bl	2358dc <isempty>
  23a2b0:	ldrb	w8, [x20, #1]
  23a2b4:	lsl	w8, w8, #8
  23a2b8:	cmp	w8, #0x200
  23a2bc:	tbz	w0, #0, 23aa1c <udev_rule_apply_token_to_event+0xb34>
  23a2c0:	b.eq	23b230 <udev_rule_apply_token_to_event+0x1348>  // b.none
  23a2c4:	mov	x0, x28
  23a2c8:	mov	x1, x22
  23a2cc:	mov	x2, xzr
  23a2d0:	bl	2541a0 <device_add_property@plt>
  23a2d4:	tbz	w0, #31, 23b230 <udev_rule_apply_token_to_event+0x1348>
  23a2d8:	ldr	x8, [x19]
  23a2dc:	mov	w20, w0
  23a2e0:	cbz	x8, 23d05c <udev_rule_apply_token_to_event+0x3174>
  23a2e4:	ldr	x24, [x8, #8]
  23a2e8:	b	23d060 <udev_rule_apply_token_to_event+0x3178>
  23a2ec:	ldrh	w9, [x21, #104]
  23a2f0:	tbnz	w9, #9, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a2f4:	and	w8, w8, #0xff00
  23a2f8:	cmp	w8, #0x500
  23a2fc:	b.ne	23a308 <udev_rule_apply_token_to_event+0x420>  // b.any
  23a300:	orr	w8, w9, #0x200
  23a304:	strh	w8, [x21, #104]
  23a308:	ldr	x8, [x20, #16]
  23a30c:	ldrh	w9, [x21, #104]
  23a310:	cmp	x8, #0x0
  23a314:	cset	w8, ne  // ne = any
  23a318:	and	w9, w9, #0xfffffeff
  23a31c:	orr	w8, w9, w8, lsl #8
  23a320:	strh	w8, [x21, #104]
  23a324:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a328:	add	x8, sp, #0x50
  23a32c:	str	x8, [sp, #16472]
  23a330:	ldrh	w8, [x21, #104]
  23a334:	tbnz	w8, #11, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a338:	ldrb	w9, [x20, #1]
  23a33c:	lsl	w9, w9, #8
  23a340:	cmp	w9, #0x500
  23a344:	b.ne	23a350 <udev_rule_apply_token_to_event+0x468>  // b.any
  23a348:	orr	w8, w8, #0x800
  23a34c:	strh	w8, [x21, #104]
  23a350:	ldr	x1, [x20, #8]
  23a354:	add	x2, sp, #0x50
  23a358:	mov	w3, #0x200                 	// #512
  23a35c:	mov	x0, x21
  23a360:	mov	w4, wzr
  23a364:	bl	22f864 <udev_event_apply_format>
  23a368:	add	x20, x21, #0x2c
  23a36c:	add	x0, sp, #0x4, lsl #12
  23a370:	add	x0, x0, #0x58
  23a374:	mov	w5, #0x2                   	// #2
  23a378:	mov	x1, x20
  23a37c:	mov	x2, xzr
  23a380:	mov	x3, xzr
  23a384:	mov	x4, xzr
  23a388:	bl	254500 <get_user_creds@plt>
  23a38c:	tbnz	w0, #31, 23b820 <udev_rule_apply_token_to_event+0x1938>
  23a390:	ldr	x8, [x19]
  23a394:	cbz	x8, 23c018 <udev_rule_apply_token_to_event+0x2130>
  23a398:	ldr	x23, [x8, #8]
  23a39c:	b	23c01c <udev_rule_apply_token_to_event+0x2134>
  23a3a0:	ldr	x0, [x21, #16]
  23a3a4:	cbz	x0, 23ad78 <udev_rule_apply_token_to_event+0xe90>
  23a3a8:	ldr	x1, [x20, #8]
  23a3ac:	add	x2, sp, #0x4, lsl #12
  23a3b0:	add	x2, x2, #0x50
  23a3b4:	bl	253be0 <sd_device_get_property_value@plt>
  23a3b8:	cmn	w0, #0x2
  23a3bc:	b.eq	23d2e8 <udev_rule_apply_token_to_event+0x3400>  // b.none
  23a3c0:	mov	w21, w0
  23a3c4:	tbnz	w0, #31, 23c0a4 <udev_rule_apply_token_to_event+0x21bc>
  23a3c8:	ldr	x1, [x20, #8]
  23a3cc:	ldr	x2, [sp, #16464]
  23a3d0:	mov	x0, x28
  23a3d4:	bl	2541a0 <device_add_property@plt>
  23a3d8:	tbz	w0, #31, 23d344 <udev_rule_apply_token_to_event+0x345c>
  23a3dc:	ldr	x8, [x19]
  23a3e0:	mov	w21, w0
  23a3e4:	cbz	x8, 23d104 <udev_rule_apply_token_to_event+0x321c>
  23a3e8:	ldr	x24, [x8, #8]
  23a3ec:	b	23d108 <udev_rule_apply_token_to_event+0x3220>
  23a3f0:	ldrh	w9, [x21, #104]
  23a3f4:	tbnz	w9, #13, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a3f8:	and	w8, w8, #0xff00
  23a3fc:	cmp	w8, #0x500
  23a400:	b.ne	23a40c <udev_rule_apply_token_to_event+0x524>  // b.any
  23a404:	orr	w8, w9, #0x2000
  23a408:	strh	w8, [x21, #104]
  23a40c:	ldr	x1, [x20, #8]
  23a410:	add	x2, sp, #0x4, lsl #12
  23a414:	add	x2, x2, #0x58
  23a418:	mov	w3, #0x400                 	// #1024
  23a41c:	mov	x0, x21
  23a420:	mov	w4, wzr
  23a424:	bl	22f864 <udev_event_apply_format>
  23a428:	ldrsb	w8, [x21, #104]
  23a42c:	orr	w8, w8, #0x2
  23a430:	cmp	w8, #0x2
  23a434:	b.ne	23c7d8 <udev_rule_apply_token_to_event+0x28f0>  // b.any
  23a438:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  23a43c:	add	x0, sp, #0x4, lsl #12
  23a440:	add	x1, x1, #0x9d
  23a444:	add	x0, x0, #0x58
  23a448:	bl	254090 <util_replace_chars@plt>
  23a44c:	cbz	x0, 23c7d8 <udev_rule_apply_token_to_event+0x28f0>
  23a450:	ldr	x8, [x19]
  23a454:	mov	x22, x0
  23a458:	cbz	x8, 23c73c <udev_rule_apply_token_to_event+0x2854>
  23a45c:	ldr	x26, [x8, #8]
  23a460:	b	23c740 <udev_rule_apply_token_to_event+0x2858>
  23a464:	str	xzr, [sp, #80]
  23a468:	ldr	x1, [x20, #16]
  23a46c:	add	x2, sp, #0x4, lsl #12
  23a470:	add	x2, x2, #0x58
  23a474:	mov	w3, #0x400                 	// #1024
  23a478:	mov	x0, x21
  23a47c:	mov	w4, wzr
  23a480:	bl	22f864 <udev_event_apply_format>
  23a484:	add	x0, sp, #0x4, lsl #12
  23a488:	add	x0, x0, #0x58
  23a48c:	bl	254560 <sysctl_normalize@plt>
  23a490:	add	x1, sp, #0x50
  23a494:	bl	254580 <sysctl_read@plt>
  23a498:	tbz	w0, #31, 23aa60 <udev_rule_apply_token_to_event+0xb78>
  23a49c:	mov	w21, w0
  23a4a0:	cmn	w0, #0x2
  23a4a4:	b.eq	23aa60 <udev_rule_apply_token_to_event+0xb78>  // b.none
  23a4a8:	ldr	x8, [x19]
  23a4ac:	cbz	x8, 23b840 <udev_rule_apply_token_to_event+0x1958>
  23a4b0:	ldr	x23, [x8, #8]
  23a4b4:	b	23b844 <udev_rule_apply_token_to_event+0x195c>
  23a4b8:	str	xzr, [sp, #80]
  23a4bc:	ldr	x1, [x20, #8]
  23a4c0:	add	x2, sp, #0x4, lsl #12
  23a4c4:	add	x2, x2, #0x58
  23a4c8:	mov	w3, #0x400                 	// #1024
  23a4cc:	mov	x0, x21
  23a4d0:	mov	w4, wzr
  23a4d4:	bl	22f864 <udev_event_apply_format>
  23a4d8:	ldr	x8, [x19]
  23a4dc:	cbz	x8, 23ad80 <udev_rule_apply_token_to_event+0xe98>
  23a4e0:	ldr	x24, [x8, #8]
  23a4e4:	b	23ad84 <udev_rule_apply_token_to_event+0xe9c>
  23a4e8:	str	xzr, [sp, #80]
  23a4ec:	ldr	x0, [x20, #8]
  23a4f0:	add	x2, sp, #0x50
  23a4f4:	mov	w1, #0x2                   	// #2
  23a4f8:	bl	254590 <proc_cmdline_get_key@plt>
  23a4fc:	mov	w21, w0
  23a500:	tbnz	w0, #31, 23b178 <udev_rule_apply_token_to_event+0x1290>
  23a504:	cbz	w21, 23b354 <udev_rule_apply_token_to_event+0x146c>
  23a508:	ldr	x8, [sp, #80]
  23a50c:	ldr	x1, [x20, #8]
  23a510:	adrp	x24, 213000 <worker_hash_op+0x8ad0>
  23a514:	add	x24, x24, #0xa68
  23a518:	cmp	x8, #0x0
  23a51c:	csel	x2, x24, x8, eq  // eq = none
  23a520:	mov	x0, x28
  23a524:	bl	2541a0 <device_add_property@plt>
  23a528:	tbnz	w0, #31, 23ba6c <udev_rule_apply_token_to_event+0x1b84>
  23a52c:	ldrb	w8, [x20, #1]
  23a530:	cmp	w8, #0x0
  23a534:	cset	w21, eq  // eq = none
  23a538:	b	23cfc8 <udev_rule_apply_token_to_event+0x30e0>
  23a53c:	mov	x0, x28
  23a540:	bl	253ff0 <sd_device_get_devlink_first@plt>
  23a544:	str	x0, [sp, #16464]
  23a548:	cbz	x0, 23d2e8 <udev_rule_apply_token_to_event+0x3400>
  23a54c:	adrp	x21, 20e000 <worker_hash_op+0x3ad0>
  23a550:	add	x21, x21, #0x947
  23a554:	mov	x1, x21
  23a558:	bl	2390a8 <startswith>
  23a55c:	bl	23d9d4 <strempty>
  23a560:	mov	x1, x0
  23a564:	mov	x0, x20
  23a568:	bl	23d7fc <token_match_string>
  23a56c:	tbnz	w0, #0, 23d344 <udev_rule_apply_token_to_event+0x345c>
  23a570:	mov	x0, x28
  23a574:	bl	254010 <sd_device_get_devlink_next@plt>
  23a578:	str	x0, [sp, #16464]
  23a57c:	cbnz	x0, 23a554 <udev_rule_apply_token_to_event+0x66c>
  23a580:	b	23d2e8 <udev_rule_apply_token_to_event+0x3400>
  23a584:	mov	w8, #0x2                   	// #2
  23a588:	b	23a7c0 <udev_rule_apply_token_to_event+0x8d8>
  23a58c:	mov	x0, x28
  23a590:	bl	2545a0 <device_set_db_persist@plt>
  23a594:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a598:	ldr	x1, [x21, #24]
  23a59c:	b	23a70c <udev_rule_apply_token_to_event+0x824>
  23a5a0:	add	x1, sp, #0x4, lsl #12
  23a5a4:	add	x1, x1, #0x58
  23a5a8:	mov	x0, x28
  23a5ac:	bl	253cf0 <device_get_action@plt>
  23a5b0:	tbnz	w0, #31, 23b188 <udev_rule_apply_token_to_event+0x12a0>
  23a5b4:	add	x8, sp, #0x5c
  23a5b8:	ldr	w0, [x8, #16380]
  23a5bc:	bl	253d00 <device_action_to_string@plt>
  23a5c0:	mov	x1, x0
  23a5c4:	b	23a70c <udev_rule_apply_token_to_event+0x824>
  23a5c8:	add	x1, sp, #0x4, lsl #12
  23a5cc:	add	x1, x1, #0x50
  23a5d0:	mov	x0, x28
  23a5d4:	bl	253bd0 <sd_device_get_devpath@plt>
  23a5d8:	tbz	w0, #31, 23a708 <udev_rule_apply_token_to_event+0x820>
  23a5dc:	ldr	x8, [x19]
  23a5e0:	mov	w21, w0
  23a5e4:	cbz	x8, 23bd38 <udev_rule_apply_token_to_event+0x1e50>
  23a5e8:	ldr	x23, [x8, #8]
  23a5ec:	b	23bd3c <udev_rule_apply_token_to_event+0x1e54>
  23a5f0:	add	x0, sp, #0x50
  23a5f4:	mov	w2, #0x4000                	// #16384
  23a5f8:	mov	w1, wzr
  23a5fc:	str	xzr, [sp, #16472]
  23a600:	str	xzr, [sp, #16464]
  23a604:	bl	2545b0 <memset@plt>
  23a608:	ldr	x0, [x20, #16]
  23a60c:	bl	253ab0 <strdup@plt>
  23a610:	str	x0, [sp, #16472]
  23a614:	cbz	x0, 23b19c <udev_rule_apply_token_to_event+0x12b4>
  23a618:	ldr	x1, [x20, #8]
  23a61c:	mov	x22, x0
  23a620:	add	x2, sp, #0x50
  23a624:	mov	w3, #0x4000                	// #16384
  23a628:	mov	x0, x21
  23a62c:	mov	w4, wzr
  23a630:	bl	22f864 <udev_event_apply_format>
  23a634:	add	x0, sp, #0x50
  23a638:	bl	2358dc <isempty>
  23a63c:	tbz	w0, #0, 23b23c <udev_rule_apply_token_to_event+0x1354>
  23a640:	ldr	x0, [x20, #8]
  23a644:	b	23b240 <udev_rule_apply_token_to_event+0x1358>
  23a648:	ldrb	w8, [x21, #105]
  23a64c:	tbnz	w8, #6, 23aa0c <udev_rule_apply_token_to_event+0xb24>
  23a650:	mov	x0, x28
  23a654:	mov	x1, xzr
  23a658:	bl	253bf0 <sd_device_get_devnum@plt>
  23a65c:	tbnz	w0, #31, 23aa0c <udev_rule_apply_token_to_event+0xb24>
  23a660:	ldrb	w8, [x20, #1]
  23a664:	lsl	w8, w8, #8
  23a668:	cmp	w8, #0x500
  23a66c:	b.ne	23a67c <udev_rule_apply_token_to_event+0x794>  // b.any
  23a670:	ldrh	w8, [x21, #104]
  23a674:	orr	w8, w8, #0x4000
  23a678:	strh	w8, [x21, #104]
  23a67c:	ldr	w8, [x20]
  23a680:	sbfx	w8, w8, #8, #8
  23a684:	and	w8, w8, #0xfffffffe
  23a688:	cmp	w8, #0x4
  23a68c:	b.ne	23a698 <udev_rule_apply_token_to_event+0x7b0>  // b.any
  23a690:	mov	x0, x28
  23a694:	bl	2545c0 <device_cleanup_devlinks@plt>
  23a698:	ldrb	w8, [x21, #104]
  23a69c:	ldr	x1, [x20, #8]
  23a6a0:	add	x2, sp, #0x4, lsl #12
  23a6a4:	add	x2, x2, #0x58
  23a6a8:	cmp	w8, #0x1
  23a6ac:	cset	w4, ne  // ne = any
  23a6b0:	mov	w3, #0x400                 	// #1024
  23a6b4:	mov	x0, x21
  23a6b8:	bl	22f864 <udev_event_apply_format>
  23a6bc:	ldrh	w8, [x21, #104]
  23a6c0:	ubfiz	w8, w8, #8, #8
  23a6c4:	cbz	w8, 23c390 <udev_rule_apply_token_to_event+0x24a8>
  23a6c8:	cmp	w8, #0x200
  23a6cc:	b.ne	23c3ac <udev_rule_apply_token_to_event+0x24c4>  // b.any
  23a6d0:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  23a6d4:	add	x1, x1, #0x9d
  23a6d8:	b	23c398 <udev_rule_apply_token_to_event+0x24b0>
  23a6dc:	ldr	x1, [x20, #16]
  23a6e0:	add	x2, sp, #0x4, lsl #12
  23a6e4:	add	x2, x2, #0x50
  23a6e8:	mov	x0, x28
  23a6ec:	mov	x24, x4
  23a6f0:	bl	253be0 <sd_device_get_property_value@plt>
  23a6f4:	tbz	w0, #31, 23a708 <udev_rule_apply_token_to_event+0x820>
  23a6f8:	ldr	x1, [x20, #16]
  23a6fc:	mov	x0, x24
  23a700:	bl	239bf4 <hashmap_get>
  23a704:	str	x0, [sp, #16464]
  23a708:	ldr	x1, [sp, #16464]
  23a70c:	mov	x0, x20
  23a710:	bl	23d7fc <token_match_string>
  23a714:	and	w21, w0, #0x1
  23a718:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23a71c:	ldr	x19, [x20, #16]
  23a720:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  23a724:	add	x1, x1, #0xe2e
  23a728:	mov	x0, x19
  23a72c:	bl	253bc0 <strcmp@plt>
  23a730:	cbz	w0, 23b1b8 <udev_rule_apply_token_to_event+0x12d0>
  23a734:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  23a738:	add	x1, x1, #0x732
  23a73c:	mov	x0, x19
  23a740:	bl	253bc0 <strcmp@plt>
  23a744:	cbnz	w0, 23d7d8 <udev_rule_apply_token_to_event+0x38f0>
  23a748:	bl	2545d0 <detect_virtualization@plt>
  23a74c:	bl	2545e0 <virtualization_to_string@plt>
  23a750:	b	23b1c0 <udev_rule_apply_token_to_event+0x12d8>
  23a754:	ldr	x1, [x20, #8]
  23a758:	add	x2, sp, #0x4, lsl #12
  23a75c:	add	x2, x2, #0x58
  23a760:	mov	w3, #0x400                 	// #1024
  23a764:	add	x22, sp, #0x4, lsl #12
  23a768:	mov	x0, x21
  23a76c:	mov	w4, wzr
  23a770:	add	x22, x22, #0x58
  23a774:	bl	22f864 <udev_event_apply_format>
  23a778:	ldrb	w8, [x20, #1]
  23a77c:	lsl	w8, w8, #8
  23a780:	cmp	w8, #0x400
  23a784:	b.ne	23a790 <udev_rule_apply_token_to_event+0x8a8>  // b.any
  23a788:	mov	x0, x28
  23a78c:	bl	2545f0 <device_cleanup_tags@plt>
  23a790:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  23a794:	add	x0, sp, #0x4, lsl #12
  23a798:	add	x1, x1, #0x405
  23a79c:	add	x0, x0, #0x58
  23a7a0:	bl	254230 <strspn@plt>
  23a7a4:	ldrb	w8, [x22, x0]
  23a7a8:	cbz	w8, 23b1cc <udev_rule_apply_token_to_event+0x12e4>
  23a7ac:	ldr	x8, [x19]
  23a7b0:	cbz	x8, 23b384 <udev_rule_apply_token_to_event+0x149c>
  23a7b4:	ldr	x22, [x8, #8]
  23a7b8:	b	23b388 <udev_rule_apply_token_to_event+0x14a0>
  23a7bc:	mov	w8, #0x1                   	// #1
  23a7c0:	strb	w8, [x21, #104]
  23a7c4:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a7c8:	ldr	x1, [x20, #8]
  23a7cc:	ldr	w25, [x20, #16]
  23a7d0:	add	x2, sp, #0x4, lsl #12
  23a7d4:	add	x2, x2, #0x58
  23a7d8:	mov	w3, #0x400                 	// #1024
  23a7dc:	mov	x0, x21
  23a7e0:	mov	w4, wzr
  23a7e4:	bl	22f864 <udev_event_apply_format>
  23a7e8:	add	x0, sp, #0x4, lsl #12
  23a7ec:	add	x0, x0, #0x58
  23a7f0:	bl	2540f0 <path_is_absolute@plt>
  23a7f4:	tbnz	w0, #0, 23d2d4 <udev_rule_apply_token_to_event+0x33ec>
  23a7f8:	add	x0, sp, #0x4, lsl #12
  23a7fc:	add	x1, sp, #0x4, lsl #12
  23a800:	add	x0, x0, #0x58
  23a804:	add	x1, x1, #0x58
  23a808:	mov	w2, #0x400                 	// #1024
  23a80c:	mov	w3, wzr
  23a810:	bl	254040 <util_resolve_subsys_kernel@plt>
  23a814:	tbz	w0, #31, 23d2d4 <udev_rule_apply_token_to_event+0x33ec>
  23a818:	add	x1, sp, #0x4, lsl #12
  23a81c:	add	x1, x1, #0x50
  23a820:	mov	x0, x28
  23a824:	bl	253d90 <sd_device_get_syspath@plt>
  23a828:	tbnz	w0, #31, 23cd04 <udev_rule_apply_token_to_event+0x2e1c>
  23a82c:	add	x2, sp, #0x4, lsl #12
  23a830:	add	x0, sp, #0x50
  23a834:	add	x2, x2, #0x58
  23a838:	mov	w1, #0x400                 	// #1024
  23a83c:	bl	253f50 <strscpy@plt>
  23a840:	ldr	x2, [sp, #16464]
  23a844:	adrp	x3, 20b000 <worker_hash_op+0xad0>
  23a848:	add	x0, sp, #0x4, lsl #12
  23a84c:	add	x3, x3, #0x9d
  23a850:	add	x0, x0, #0x58
  23a854:	add	x4, sp, #0x50
  23a858:	mov	w1, #0x400                 	// #1024
  23a85c:	mov	x5, xzr
  23a860:	bl	254600 <strscpyl@plt>
  23a864:	mov	w8, #0x1                   	// #1
  23a868:	b	23d2d0 <udev_rule_apply_token_to_event+0x33e8>
  23a86c:	ldrh	w9, [x21, #104]
  23a870:	tbnz	w9, #11, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a874:	and	w8, w8, #0xff00
  23a878:	cmp	w8, #0x500
  23a87c:	b.ne	23a888 <udev_rule_apply_token_to_event+0x9a0>  // b.any
  23a880:	orr	w8, w9, #0x800
  23a884:	strh	w8, [x21, #104]
  23a888:	ldr	x8, [x20, #16]
  23a88c:	cbz	x8, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a890:	sub	w8, w8, #0x1
  23a894:	str	w8, [x21, #44]
  23a898:	ldr	x8, [x19]
  23a89c:	cbz	x8, 23c0b4 <udev_rule_apply_token_to_event+0x21cc>
  23a8a0:	ldr	x23, [x8, #8]
  23a8a4:	b	23c0b8 <udev_rule_apply_token_to_event+0x21d0>
  23a8a8:	ldrh	w8, [x21, #104]
  23a8ac:	tbnz	w8, #12, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a8b0:	ldrb	w9, [x20, #1]
  23a8b4:	lsl	w9, w9, #8
  23a8b8:	cmp	w9, #0x500
  23a8bc:	b.ne	23a8c8 <udev_rule_apply_token_to_event+0x9e0>  // b.any
  23a8c0:	orr	w8, w8, #0x1000
  23a8c4:	strh	w8, [x21, #104]
  23a8c8:	ldr	x1, [x20, #8]
  23a8cc:	add	x2, sp, #0x50
  23a8d0:	mov	w3, #0x200                 	// #512
  23a8d4:	mov	x0, x21
  23a8d8:	mov	w4, wzr
  23a8dc:	bl	22f864 <udev_event_apply_format>
  23a8e0:	add	x21, x21, #0x28
  23a8e4:	add	x0, sp, #0x50
  23a8e8:	mov	x1, x21
  23a8ec:	bl	2544b0 <parse_mode@plt>
  23a8f0:	ldr	x8, [x19]
  23a8f4:	tbnz	w0, #31, 23b908 <udev_rule_apply_token_to_event+0x1a20>
  23a8f8:	cbz	x8, 23c13c <udev_rule_apply_token_to_event+0x2254>
  23a8fc:	ldr	x23, [x8, #8]
  23a900:	b	23c140 <udev_rule_apply_token_to_event+0x2258>
  23a904:	ldrh	w9, [x21, #104]
  23a908:	tbnz	w9, #10, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a90c:	and	w8, w8, #0xff00
  23a910:	cmp	w8, #0x500
  23a914:	b.ne	23a920 <udev_rule_apply_token_to_event+0xa38>  // b.any
  23a918:	orr	w8, w9, #0x400
  23a91c:	strh	w8, [x21, #104]
  23a920:	ldr	x8, [x20, #16]
  23a924:	cbz	x8, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a928:	sub	w8, w8, #0x1
  23a92c:	str	w8, [x21, #48]
  23a930:	ldr	x8, [x19]
  23a934:	cbz	x8, 23c14c <udev_rule_apply_token_to_event+0x2264>
  23a938:	ldr	x23, [x8, #8]
  23a93c:	b	23c150 <udev_rule_apply_token_to_event+0x2268>
  23a940:	ldrh	w9, [x21, #104]
  23a944:	tbnz	w9, #12, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a948:	and	w8, w8, #0xff00
  23a94c:	cmp	w8, #0x500
  23a950:	b.ne	23a95c <udev_rule_apply_token_to_event+0xa74>  // b.any
  23a954:	orr	w8, w9, #0x1000
  23a958:	strh	w8, [x21, #104]
  23a95c:	ldr	x8, [x20, #16]
  23a960:	cbz	x8, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23a964:	sub	w8, w8, #0x1
  23a968:	str	w8, [x21, #40]
  23a96c:	ldr	x8, [x19]
  23a970:	cbz	x8, 23c24c <udev_rule_apply_token_to_event+0x2364>
  23a974:	ldr	x23, [x8, #8]
  23a978:	b	23c250 <udev_rule_apply_token_to_event+0x2368>
  23a97c:	ldr	x22, [x20, #16]
  23a980:	add	x1, sp, #0x4, lsl #12
  23a984:	add	x1, x1, #0x58
  23a988:	mov	w2, #0x400                 	// #1024
  23a98c:	mov	x0, x22
  23a990:	mov	w3, wzr
  23a994:	bl	254040 <util_resolve_subsys_kernel@plt>
  23a998:	tbz	w0, #31, 23a9d4 <udev_rule_apply_token_to_event+0xaec>
  23a99c:	add	x1, sp, #0x4, lsl #12
  23a9a0:	add	x1, x1, #0x50
  23a9a4:	mov	x0, x28
  23a9a8:	bl	253d90 <sd_device_get_syspath@plt>
  23a9ac:	tbnz	w0, #31, 23a9d4 <udev_rule_apply_token_to_event+0xaec>
  23a9b0:	ldr	x2, [sp, #16464]
  23a9b4:	adrp	x3, 20b000 <worker_hash_op+0xad0>
  23a9b8:	add	x0, sp, #0x4, lsl #12
  23a9bc:	add	x3, x3, #0x9d
  23a9c0:	add	x0, x0, #0x58
  23a9c4:	mov	w1, #0x400                 	// #1024
  23a9c8:	mov	x4, x22
  23a9cc:	mov	x5, xzr
  23a9d0:	bl	254600 <strscpyl@plt>
  23a9d4:	add	x0, sp, #0x4, lsl #12
  23a9d8:	add	x0, x0, #0x58
  23a9dc:	bl	23db80 <attr_subst_subdir>
  23a9e0:	tbnz	w0, #31, 23b1f0 <udev_rule_apply_token_to_event+0x1308>
  23a9e4:	ldr	x1, [x20, #8]
  23a9e8:	add	x2, sp, #0x50
  23a9ec:	mov	w3, #0x200                 	// #512
  23a9f0:	mov	x0, x21
  23a9f4:	mov	w4, wzr
  23a9f8:	bl	22f864 <udev_event_apply_format>
  23a9fc:	ldr	x8, [x19]
  23aa00:	cbz	x8, 23b410 <udev_rule_apply_token_to_event+0x1528>
  23aa04:	ldr	x24, [x8, #8]
  23aa08:	b	23b414 <udev_rule_apply_token_to_event+0x152c>
  23aa0c:	mov	w8, #0x8                   	// #8
  23aa10:	cmp	w8, #0x8
  23aa14:	b.eq	23ce48 <udev_rule_apply_token_to_event+0x2f60>  // b.none
  23aa18:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23aa1c:	b.ne	23b204 <udev_rule_apply_token_to_event+0x131c>  // b.any
  23aa20:	add	x2, sp, #0x4, lsl #12
  23aa24:	add	x2, x2, #0x50
  23aa28:	mov	x0, x28
  23aa2c:	mov	x1, x22
  23aa30:	bl	253be0 <sd_device_get_property_value@plt>
  23aa34:	tbnz	w0, #31, 23b204 <udev_rule_apply_token_to_event+0x131c>
  23aa38:	ldr	x2, [sp, #16464]
  23aa3c:	adrp	x3, 20c000 <worker_hash_op+0x1ad0>
  23aa40:	add	x0, sp, #0x4, lsl #12
  23aa44:	add	x3, x3, #0x6c2
  23aa48:	add	x0, x0, #0x58
  23aa4c:	mov	w1, #0x200                 	// #512
  23aa50:	mov	x4, xzr
  23aa54:	bl	254000 <strpcpyl@plt>
  23aa58:	mov	x3, x0
  23aa5c:	b	23b208 <udev_rule_apply_token_to_event+0x1320>
  23aa60:	ldr	x0, [sp, #80]
  23aa64:	bl	254610 <strstrip@plt>
  23aa68:	mov	x1, x0
  23aa6c:	mov	x0, x20
  23aa70:	bl	23d7fc <token_match_string>
  23aa74:	and	w21, w0, #0x1
  23aa78:	b	23cfc8 <udev_rule_apply_token_to_event+0x30e0>
  23aa7c:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23aa80:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23aa84:	add	x1, x1, #0x63
  23aa88:	add	x3, x3, #0x86f
  23aa8c:	mov	w0, #0x1                   	// #1
  23aa90:	mov	w2, #0x856                 	// #2134
  23aa94:	b	23b930 <udev_rule_apply_token_to_event+0x1a48>
  23aa98:	mov	x24, xzr
  23aa9c:	cbz	x8, 23aab8 <udev_rule_apply_token_to_event+0xbd0>
  23aaa0:	ldr	x22, [x8]
  23aaa4:	b	23aabc <udev_rule_apply_token_to_event+0xbd4>
  23aaa8:	ldr	x8, [x19]
  23aaac:	cbz	x8, 23bb9c <udev_rule_apply_token_to_event+0x1cb4>
  23aab0:	ldr	x23, [x8, #8]
  23aab4:	b	23bba0 <udev_rule_apply_token_to_event+0x1cb8>
  23aab8:	mov	x22, xzr
  23aabc:	mov	w0, #0x1                   	// #1
  23aac0:	str	xzr, [sp, #16464]
  23aac4:	bl	2535b0 <log_get_max_level_realm@plt>
  23aac8:	cmp	w0, #0x7
  23aacc:	b.ge	23d40c <udev_rule_apply_token_to_event+0x3524>  // b.tcont
  23aad0:	ldr	x20, [sp, #16464]
  23aad4:	adrp	x23, 211000 <worker_hash_op+0x6ad0>
  23aad8:	add	x23, x23, #0xb64
  23aadc:	mov	x0, x22
  23aae0:	cmp	x20, #0x0
  23aae4:	csel	x21, xzr, x23, eq  // eq = none
  23aae8:	bl	235b80 <strna>
  23aaec:	cbz	x24, 23aaf8 <udev_rule_apply_token_to_event+0xc10>
  23aaf0:	ldr	w8, [x24, #8]
  23aaf4:	b	23aafc <udev_rule_apply_token_to_event+0xc14>
  23aaf8:	mov	w8, wzr
  23aafc:	str	w8, [sp, #24]
  23ab00:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23ab04:	add	x10, sp, #0x4, lsl #12
  23ab08:	add	x8, x8, #0x9bc
  23ab0c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ab10:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23ab14:	add	x9, sp, #0x50
  23ab18:	add	x10, x10, #0x58
  23ab1c:	add	x2, x2, #0x63
  23ab20:	add	x4, x4, #0x86f
  23ab24:	stp	x8, x0, [sp, #8]
  23ab28:	mov	w0, #0x7                   	// #7
  23ab2c:	mov	w3, #0x842                 	// #2114
  23ab30:	mov	w1, wzr
  23ab34:	mov	x5, x21
  23ab38:	mov	x6, x20
  23ab3c:	mov	x7, xzr
  23ab40:	stp	x10, x9, [sp, #32]
  23ab44:	str	xzr, [sp]
  23ab48:	bl	2539f0 <log_object_internal@plt>
  23ab4c:	add	x0, sp, #0x4, lsl #12
  23ab50:	add	x0, x0, #0x58
  23ab54:	add	x1, sp, #0x50
  23ab58:	bl	254620 <sysctl_write@plt>
  23ab5c:	tbz	w0, #31, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23ab60:	ldr	x8, [x19]
  23ab64:	mov	w20, w0
  23ab68:	cbz	x8, 23bbac <udev_rule_apply_token_to_event+0x1cc4>
  23ab6c:	ldr	x24, [x8, #8]
  23ab70:	b	23bbb0 <udev_rule_apply_token_to_event+0x1cc8>
  23ab74:	mov	x26, xzr
  23ab78:	cbz	x8, 23ab84 <udev_rule_apply_token_to_event+0xc9c>
  23ab7c:	ldr	x25, [x8]
  23ab80:	b	23ab88 <udev_rule_apply_token_to_event+0xca0>
  23ab84:	mov	x25, xzr
  23ab88:	mov	w0, #0x1                   	// #1
  23ab8c:	str	xzr, [sp, #16464]
  23ab90:	bl	2535b0 <log_get_max_level_realm@plt>
  23ab94:	cmp	w0, #0x7
  23ab98:	b.ge	23d420 <udev_rule_apply_token_to_event+0x3538>  // b.tcont
  23ab9c:	ldr	x23, [sp, #16464]
  23aba0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23aba4:	add	x8, x8, #0xb64
  23aba8:	mov	x0, x25
  23abac:	cmp	x23, #0x0
  23abb0:	csel	x24, xzr, x8, eq  // eq = none
  23abb4:	bl	235b80 <strna>
  23abb8:	cbz	x26, 23abc4 <udev_rule_apply_token_to_event+0xcdc>
  23abbc:	ldr	w8, [x26, #8]
  23abc0:	b	23abc8 <udev_rule_apply_token_to_event+0xce0>
  23abc4:	mov	w8, wzr
  23abc8:	str	w8, [sp, #24]
  23abcc:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23abd0:	add	x9, sp, #0x4, lsl #12
  23abd4:	add	x8, x8, #0x77f
  23abd8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23abdc:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23abe0:	add	x9, x9, #0x58
  23abe4:	add	x2, x2, #0x63
  23abe8:	add	x4, x4, #0x86f
  23abec:	stp	x8, x0, [sp, #8]
  23abf0:	mov	w0, #0x7                   	// #7
  23abf4:	mov	w3, #0x6c7                 	// #1735
  23abf8:	mov	w1, wzr
  23abfc:	mov	x5, x24
  23ac00:	mov	x6, x23
  23ac04:	mov	x7, xzr
  23ac08:	str	x9, [sp, #32]
  23ac0c:	str	xzr, [sp]
  23ac10:	bl	2539f0 <log_object_internal@plt>
  23ac14:	add	x3, sp, #0x4, lsl #12
  23ac18:	add	x3, x3, #0x58
  23ac1c:	add	x4, sp, #0x50
  23ac20:	mov	w2, #0x1                   	// #1
  23ac24:	mov	w5, #0x4000                	// #16384
  23ac28:	mov	x0, x21
  23ac2c:	mov	x1, x22
  23ac30:	bl	2306b8 <udev_event_spawn>
  23ac34:	cbz	w0, 23ac50 <udev_rule_apply_token_to_event+0xd68>
  23ac38:	ldr	x8, [x19]
  23ac3c:	mov	w21, w0
  23ac40:	tbnz	w0, #31, 23b33c <udev_rule_apply_token_to_event+0x1454>
  23ac44:	cbz	x8, 23b940 <udev_rule_apply_token_to_event+0x1a58>
  23ac48:	ldr	x24, [x8, #8]
  23ac4c:	b	23b944 <udev_rule_apply_token_to_event+0x1a5c>
  23ac50:	add	x0, sp, #0x50
  23ac54:	bl	2358dc <isempty>
  23ac58:	tbz	w0, #0, 23b4ec <udev_rule_apply_token_to_event+0x1604>
  23ac5c:	mov	w8, wzr
  23ac60:	b	23c6a8 <udev_rule_apply_token_to_event+0x27c0>
  23ac64:	mov	x27, xzr
  23ac68:	cbz	x8, 23ac74 <udev_rule_apply_token_to_event+0xd8c>
  23ac6c:	ldr	x25, [x8]
  23ac70:	b	23ac78 <udev_rule_apply_token_to_event+0xd90>
  23ac74:	mov	x25, xzr
  23ac78:	mov	w0, #0x1                   	// #1
  23ac7c:	str	xzr, [sp, #80]
  23ac80:	bl	2535b0 <log_get_max_level_realm@plt>
  23ac84:	cmp	w0, #0x7
  23ac88:	b.ge	23d434 <udev_rule_apply_token_to_event+0x354c>  // b.tcont
  23ac8c:	ldr	x23, [sp, #80]
  23ac90:	adrp	x26, 211000 <worker_hash_op+0x6ad0>
  23ac94:	add	x26, x26, #0xb64
  23ac98:	mov	x0, x25
  23ac9c:	cmp	x23, #0x0
  23aca0:	csel	x24, xzr, x26, eq  // eq = none
  23aca4:	bl	235b80 <strna>
  23aca8:	cbz	x27, 23acb4 <udev_rule_apply_token_to_event+0xdcc>
  23acac:	ldr	w8, [x27, #8]
  23acb0:	b	23acb8 <udev_rule_apply_token_to_event+0xdd0>
  23acb4:	mov	w8, wzr
  23acb8:	str	w8, [sp, #24]
  23acbc:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  23acc0:	add	x9, sp, #0x4, lsl #12
  23acc4:	add	x8, x8, #0x537
  23acc8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23accc:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23acd0:	add	x9, x9, #0x58
  23acd4:	add	x2, x2, #0x63
  23acd8:	add	x4, x4, #0x86f
  23acdc:	stp	x8, x0, [sp, #8]
  23ace0:	mov	w0, #0x7                   	// #7
  23ace4:	mov	w3, #0x681                 	// #1665
  23ace8:	mov	w1, wzr
  23acec:	mov	x5, x24
  23acf0:	mov	x6, x23
  23acf4:	mov	x7, xzr
  23acf8:	str	x9, [sp, #32]
  23acfc:	str	xzr, [sp]
  23ad00:	bl	2539f0 <log_object_internal@plt>
  23ad04:	add	x3, sp, #0x4, lsl #12
  23ad08:	add	x3, x3, #0x58
  23ad0c:	add	x4, sp, #0x50
  23ad10:	mov	w2, #0x1                   	// #1
  23ad14:	mov	w5, #0x4000                	// #16384
  23ad18:	mov	x0, x21
  23ad1c:	mov	x1, x22
  23ad20:	bl	2306b8 <udev_event_spawn>
  23ad24:	cbz	w0, 23ad40 <udev_rule_apply_token_to_event+0xe58>
  23ad28:	ldr	x8, [x19]
  23ad2c:	mov	w22, w0
  23ad30:	tbnz	w0, #31, 23b348 <udev_rule_apply_token_to_event+0x1460>
  23ad34:	cbz	x8, 23b9dc <udev_rule_apply_token_to_event+0x1af4>
  23ad38:	ldr	x24, [x8, #8]
  23ad3c:	b	23b9e0 <udev_rule_apply_token_to_event+0x1af8>
  23ad40:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  23ad44:	add	x1, x1, #0x226
  23ad48:	add	x0, sp, #0x50
  23ad4c:	bl	254080 <delete_trailing_chars@plt>
  23ad50:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23ad54:	add	x1, x1, #0xa56
  23ad58:	add	x0, sp, #0x50
  23ad5c:	bl	254090 <util_replace_chars@plt>
  23ad60:	cbz	x0, 23c640 <udev_rule_apply_token_to_event+0x2758>
  23ad64:	ldr	x8, [x19]
  23ad68:	mov	x22, x0
  23ad6c:	cbz	x8, 23c560 <udev_rule_apply_token_to_event+0x2678>
  23ad70:	ldr	x25, [x8, #8]
  23ad74:	b	23c564 <udev_rule_apply_token_to_event+0x267c>
  23ad78:	and	w8, w8, #0xff00
  23ad7c:	b	23d2f0 <udev_rule_apply_token_to_event+0x3408>
  23ad80:	mov	x24, xzr
  23ad84:	cbz	x8, 23ad90 <udev_rule_apply_token_to_event+0xea8>
  23ad88:	ldr	x23, [x8]
  23ad8c:	b	23ad94 <udev_rule_apply_token_to_event+0xeac>
  23ad90:	mov	x23, xzr
  23ad94:	mov	w0, #0x1                   	// #1
  23ad98:	str	xzr, [sp, #16464]
  23ad9c:	bl	2535b0 <log_get_max_level_realm@plt>
  23ada0:	cmp	w0, #0x7
  23ada4:	b.ge	23d444 <udev_rule_apply_token_to_event+0x355c>  // b.tcont
  23ada8:	ldr	x21, [sp, #16464]
  23adac:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23adb0:	add	x8, x8, #0xb64
  23adb4:	mov	x0, x23
  23adb8:	cmp	x21, #0x0
  23adbc:	csel	x22, xzr, x8, eq  // eq = none
  23adc0:	bl	235b80 <strna>
  23adc4:	cbz	x24, 23add0 <udev_rule_apply_token_to_event+0xee8>
  23adc8:	ldr	w8, [x24, #8]
  23adcc:	b	23add4 <udev_rule_apply_token_to_event+0xeec>
  23add0:	mov	w8, wzr
  23add4:	str	w8, [sp, #24]
  23add8:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  23addc:	add	x24, sp, #0x4, lsl #12
  23ade0:	add	x8, x8, #0x6c8
  23ade4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ade8:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23adec:	add	x24, x24, #0x58
  23adf0:	add	x2, x2, #0x63
  23adf4:	add	x4, x4, #0x86f
  23adf8:	stp	x8, x0, [sp, #8]
  23adfc:	mov	w0, #0x7                   	// #7
  23ae00:	mov	w3, #0x699                 	// #1689
  23ae04:	mov	w1, wzr
  23ae08:	mov	x5, x22
  23ae0c:	mov	x6, x21
  23ae10:	mov	x7, xzr
  23ae14:	str	x24, [sp, #32]
  23ae18:	str	xzr, [sp]
  23ae1c:	bl	2539f0 <log_object_internal@plt>
  23ae20:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  23ae24:	add	x0, sp, #0x4, lsl #12
  23ae28:	add	x1, x1, #0x2fc
  23ae2c:	add	x0, x0, #0x58
  23ae30:	bl	254410 <fopen64@plt>
  23ae34:	str	x0, [sp, #80]
  23ae38:	cbz	x0, 23b154 <udev_rule_apply_token_to_event+0x126c>
  23ae3c:	mov	x22, x0
  23ae40:	add	x2, sp, #0x4, lsl #12
  23ae44:	add	x2, x2, #0x50
  23ae48:	mov	w1, #0x100000              	// #1048576
  23ae4c:	mov	x0, x22
  23ae50:	str	xzr, [sp, #16464]
  23ae54:	bl	235328 <read_line>
  23ae58:	mov	w25, w0
  23ae5c:	tbnz	w0, #31, 23ae98 <udev_rule_apply_token_to_event+0xfb0>
  23ae60:	cbz	w25, 23aeb4 <udev_rule_apply_token_to_event+0xfcc>
  23ae64:	ldr	x0, [sp, #16464]
  23ae68:	add	x1, sp, #0x48
  23ae6c:	add	x2, sp, #0x40
  23ae70:	bl	23dcb8 <get_property_from_string>
  23ae74:	mov	w25, w0
  23ae78:	tbnz	w0, #31, 23aebc <udev_rule_apply_token_to_event+0xfd4>
  23ae7c:	cbz	w25, 23af84 <udev_rule_apply_token_to_event+0x109c>
  23ae80:	ldp	x2, x1, [sp, #64]
  23ae84:	mov	x0, x28
  23ae88:	bl	2541a0 <device_add_property@plt>
  23ae8c:	tbnz	w0, #31, 23af8c <udev_rule_apply_token_to_event+0x10a4>
  23ae90:	mov	w23, wzr
  23ae94:	b	23b04c <udev_rule_apply_token_to_event+0x1164>
  23ae98:	ldr	x8, [x19]
  23ae9c:	mov	x23, x28
  23aea0:	cbz	x8, 23aed8 <udev_rule_apply_token_to_event+0xff0>
  23aea4:	ldr	x28, [x8, #8]
  23aea8:	cbz	x8, 23aee0 <udev_rule_apply_token_to_event+0xff8>
  23aeac:	ldr	x27, [x8]
  23aeb0:	b	23aee4 <udev_rule_apply_token_to_event+0xffc>
  23aeb4:	mov	w23, #0xf                   	// #15
  23aeb8:	b	23b04c <udev_rule_apply_token_to_event+0x1164>
  23aebc:	ldr	x8, [x19]
  23aec0:	cbz	x8, 23afa4 <udev_rule_apply_token_to_event+0x10bc>
  23aec4:	ldr	x23, [x8, #8]
  23aec8:	mov	x24, x28
  23aecc:	cbz	x8, 23afb0 <udev_rule_apply_token_to_event+0x10c8>
  23aed0:	ldr	x28, [x8]
  23aed4:	b	23afb4 <udev_rule_apply_token_to_event+0x10cc>
  23aed8:	mov	x28, xzr
  23aedc:	cbnz	x8, 23aeac <udev_rule_apply_token_to_event+0xfc4>
  23aee0:	mov	x27, xzr
  23aee4:	mov	w0, #0x1                   	// #1
  23aee8:	str	xzr, [sp, #72]
  23aeec:	bl	2535b0 <log_get_max_level_realm@plt>
  23aef0:	cmp	w0, #0x7
  23aef4:	b.ge	23b110 <udev_rule_apply_token_to_event+0x1228>  // b.tcont
  23aef8:	ldr	x21, [sp, #72]
  23aefc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23af00:	add	x8, x8, #0xb64
  23af04:	mov	x0, x27
  23af08:	cmp	x21, #0x0
  23af0c:	csel	x26, xzr, x8, eq  // eq = none
  23af10:	bl	235b80 <strna>
  23af14:	cbz	x28, 23af20 <udev_rule_apply_token_to_event+0x1038>
  23af18:	ldr	w8, [x28, #8]
  23af1c:	b	23af24 <udev_rule_apply_token_to_event+0x103c>
  23af20:	mov	w8, wzr
  23af24:	str	w8, [sp, #24]
  23af28:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23af2c:	add	x8, x8, #0xb81
  23af30:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23af34:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23af38:	stp	x8, x0, [sp, #8]
  23af3c:	mov	w0, #0x7                   	// #7
  23af40:	mov	w3, #0x6aa                 	// #1706
  23af44:	mov	w1, w25
  23af48:	add	x2, x2, #0x63
  23af4c:	add	x4, x4, #0x86f
  23af50:	mov	x5, x26
  23af54:	mov	x6, x21
  23af58:	mov	x7, xzr
  23af5c:	mov	x28, x23
  23af60:	str	x24, [sp, #32]
  23af64:	str	xzr, [sp]
  23af68:	bl	2539f0 <log_object_internal@plt>
  23af6c:	ldrb	w8, [x20, #1]
  23af70:	lsl	w8, w8, #8
  23af74:	cmp	w8, #0x100
  23af78:	cset	w21, eq  // eq = none
  23af7c:	mov	w23, #0x1                   	// #1
  23af80:	b	23b04c <udev_rule_apply_token_to_event+0x1164>
  23af84:	mov	w23, #0x10                  	// #16
  23af88:	b	23b04c <udev_rule_apply_token_to_event+0x1164>
  23af8c:	ldr	x8, [x19]
  23af90:	mov	w25, w0
  23af94:	mov	x23, x28
  23af98:	cbz	x8, 23b068 <udev_rule_apply_token_to_event+0x1180>
  23af9c:	ldr	x28, [x8, #8]
  23afa0:	b	23b06c <udev_rule_apply_token_to_event+0x1184>
  23afa4:	mov	x23, xzr
  23afa8:	mov	x24, x28
  23afac:	cbnz	x8, 23aed0 <udev_rule_apply_token_to_event+0xfe8>
  23afb0:	mov	x28, xzr
  23afb4:	mov	w0, #0x1                   	// #1
  23afb8:	str	xzr, [sp, #56]
  23afbc:	bl	2535b0 <log_get_max_level_realm@plt>
  23afc0:	cmp	w0, #0x7
  23afc4:	b.ge	23b120 <udev_rule_apply_token_to_event+0x1238>  // b.tcont
  23afc8:	ldr	x26, [sp, #56]
  23afcc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23afd0:	add	x8, x8, #0xb64
  23afd4:	mov	x0, x28
  23afd8:	cmp	x26, #0x0
  23afdc:	csel	x27, xzr, x8, eq  // eq = none
  23afe0:	bl	235b80 <strna>
  23afe4:	cbz	x23, 23aff0 <udev_rule_apply_token_to_event+0x1108>
  23afe8:	ldr	w8, [x23, #8]
  23afec:	b	23aff4 <udev_rule_apply_token_to_event+0x110c>
  23aff0:	mov	w8, wzr
  23aff4:	ldr	x9, [sp, #16464]
  23aff8:	str	w8, [sp, #24]
  23affc:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  23b000:	add	x8, x8, #0x3c9
  23b004:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b008:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b00c:	stp	x8, x0, [sp, #8]
  23b010:	mov	w0, #0x7                   	// #7
  23b014:	mov	w3, #0x6b4                 	// #1716
  23b018:	mov	w1, w25
  23b01c:	add	x2, x2, #0x63
  23b020:	add	x4, x4, #0x86f
  23b024:	mov	x5, x27
  23b028:	mov	x6, x26
  23b02c:	mov	x7, xzr
  23b030:	mov	x28, x24
  23b034:	str	x9, [sp, #32]
  23b038:	str	xzr, [sp]
  23b03c:	bl	2539f0 <log_object_internal@plt>
  23b040:	add	x24, sp, #0x4, lsl #12
  23b044:	mov	w23, #0x10                  	// #16
  23b048:	add	x24, x24, #0x58
  23b04c:	add	x0, sp, #0x4, lsl #12
  23b050:	add	x0, x0, #0x50
  23b054:	bl	2352f8 <freep>
  23b058:	cbz	w23, 23ae40 <udev_rule_apply_token_to_event+0xf58>
  23b05c:	cmp	w23, #0x10
  23b060:	b.eq	23ae40 <udev_rule_apply_token_to_event+0xf58>  // b.none
  23b064:	b	23b140 <udev_rule_apply_token_to_event+0x1258>
  23b068:	mov	x28, xzr
  23b06c:	cbz	x8, 23b078 <udev_rule_apply_token_to_event+0x1190>
  23b070:	ldr	x27, [x8]
  23b074:	b	23b07c <udev_rule_apply_token_to_event+0x1194>
  23b078:	mov	x27, xzr
  23b07c:	mov	w0, #0x1                   	// #1
  23b080:	str	xzr, [sp, #56]
  23b084:	bl	2535b0 <log_get_max_level_realm@plt>
  23b088:	cmp	w0, #0x3
  23b08c:	b.ge	23b130 <udev_rule_apply_token_to_event+0x1248>  // b.tcont
  23b090:	ldr	x21, [sp, #56]
  23b094:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b098:	add	x8, x8, #0xb64
  23b09c:	mov	x0, x27
  23b0a0:	cmp	x21, #0x0
  23b0a4:	csel	x26, xzr, x8, eq  // eq = none
  23b0a8:	bl	235b80 <strna>
  23b0ac:	cbz	x28, 23b0b8 <udev_rule_apply_token_to_event+0x11d0>
  23b0b0:	ldr	w8, [x28, #8]
  23b0b4:	b	23b0bc <udev_rule_apply_token_to_event+0x11d4>
  23b0b8:	mov	w8, wzr
  23b0bc:	ldp	x10, x9, [sp, #64]
  23b0c0:	str	w8, [sp, #24]
  23b0c4:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23b0c8:	add	x8, x8, #0xa80
  23b0cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b0d0:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b0d4:	stp	x8, x0, [sp, #8]
  23b0d8:	mov	w0, #0x3                   	// #3
  23b0dc:	mov	w3, #0x6be                 	// #1726
  23b0e0:	mov	w1, w25
  23b0e4:	add	x2, x2, #0x63
  23b0e8:	add	x4, x4, #0x86f
  23b0ec:	mov	x5, x26
  23b0f0:	mov	x6, x21
  23b0f4:	mov	x7, xzr
  23b0f8:	mov	x28, x23
  23b0fc:	stp	x9, x10, [sp, #32]
  23b100:	str	xzr, [sp]
  23b104:	bl	2539f0 <log_object_internal@plt>
  23b108:	mov	w21, w0
  23b10c:	b	23af7c <udev_rule_apply_token_to_event+0x1094>
  23b110:	add	x1, sp, #0x48
  23b114:	mov	x0, x23
  23b118:	bl	253a40 <sd_device_get_sysname@plt>
  23b11c:	b	23aef8 <udev_rule_apply_token_to_event+0x1010>
  23b120:	add	x1, sp, #0x38
  23b124:	mov	x0, x24
  23b128:	bl	253a40 <sd_device_get_sysname@plt>
  23b12c:	b	23afc8 <udev_rule_apply_token_to_event+0x10e0>
  23b130:	add	x1, sp, #0x38
  23b134:	mov	x0, x23
  23b138:	bl	253a40 <sd_device_get_sysname@plt>
  23b13c:	b	23b090 <udev_rule_apply_token_to_event+0x11a8>
  23b140:	cmp	w23, #0xf
  23b144:	b.ne	23ccf8 <udev_rule_apply_token_to_event+0x2e10>  // b.any
  23b148:	ldrb	w8, [x20, #1]
  23b14c:	cmp	w8, #0x0
  23b150:	b	23b170 <udev_rule_apply_token_to_event+0x1288>
  23b154:	bl	253660 <__errno_location@plt>
  23b158:	ldr	w8, [x0]
  23b15c:	cmp	w8, #0x2
  23b160:	b.ne	23b850 <udev_rule_apply_token_to_event+0x1968>  // b.any
  23b164:	ldrb	w8, [x20, #1]
  23b168:	lsl	w8, w8, #8
  23b16c:	cmp	w8, #0x100
  23b170:	cset	w21, eq  // eq = none
  23b174:	b	23ccf8 <udev_rule_apply_token_to_event+0x2e10>
  23b178:	ldr	x8, [x19]
  23b17c:	cbz	x8, 23bcb0 <udev_rule_apply_token_to_event+0x1dc8>
  23b180:	ldr	x24, [x8, #8]
  23b184:	b	23bcb4 <udev_rule_apply_token_to_event+0x1dcc>
  23b188:	ldr	x8, [x19]
  23b18c:	mov	w21, w0
  23b190:	cbz	x8, 23bd48 <udev_rule_apply_token_to_event+0x1e60>
  23b194:	ldr	x23, [x8, #8]
  23b198:	b	23bd4c <udev_rule_apply_token_to_event+0x1e64>
  23b19c:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23b1a0:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23b1a4:	add	x1, x1, #0x63
  23b1a8:	add	x3, x3, #0x86f
  23b1ac:	mov	w0, #0x1                   	// #1
  23b1b0:	mov	w2, #0x79e                 	// #1950
  23b1b4:	b	23c49c <udev_rule_apply_token_to_event+0x25b4>
  23b1b8:	bl	254630 <uname_architecture@plt>
  23b1bc:	bl	254640 <architecture_to_string@plt>
  23b1c0:	mov	x1, x0
  23b1c4:	str	x0, [sp, #16464]
  23b1c8:	b	23a70c <udev_rule_apply_token_to_event+0x824>
  23b1cc:	ldrb	w8, [x20, #1]
  23b1d0:	add	x1, sp, #0x4, lsl #12
  23b1d4:	add	x1, x1, #0x58
  23b1d8:	lsl	w8, w8, #8
  23b1dc:	cmp	w8, #0x300
  23b1e0:	b.ne	23b8e8 <udev_rule_apply_token_to_event+0x1a00>  // b.any
  23b1e4:	mov	x0, x28
  23b1e8:	bl	254650 <device_remove_tag@plt>
  23b1ec:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23b1f0:	ldr	x8, [x19]
  23b1f4:	mov	w22, w0
  23b1f8:	cbz	x8, 23be38 <udev_rule_apply_token_to_event+0x1f50>
  23b1fc:	ldr	x23, [x8, #8]
  23b200:	b	23be3c <udev_rule_apply_token_to_event+0x1f54>
  23b204:	mov	w3, #0x200                 	// #512
  23b208:	ldr	x1, [x20, #8]
  23b20c:	ldr	x2, [sp, #16472]
  23b210:	mov	x0, x21
  23b214:	mov	w4, wzr
  23b218:	bl	22f864 <udev_event_apply_format>
  23b21c:	add	x2, sp, #0x50
  23b220:	mov	x0, x28
  23b224:	mov	x1, x22
  23b228:	bl	2541a0 <device_add_property@plt>
  23b22c:	tbnz	w0, #31, 23b80c <udev_rule_apply_token_to_event+0x1924>
  23b230:	mov	w8, #0x1                   	// #1
  23b234:	tbnz	w8, #0, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23b238:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23b23c:	add	x0, sp, #0x50
  23b240:	bl	253ab0 <strdup@plt>
  23b244:	mov	x23, x0
  23b248:	str	x0, [sp, #16464]
  23b24c:	cbz	x0, 23b368 <udev_rule_apply_token_to_event+0x1480>
  23b250:	ldrb	w8, [x20, #1]
  23b254:	lsl	w8, w8, #8
  23b258:	cmp	w8, #0x400
  23b25c:	b.ne	23b268 <udev_rule_apply_token_to_event+0x1380>  // b.any
  23b260:	ldr	x0, [x21, #56]
  23b264:	bl	23df0c <ordered_hashmap_clear_free_free>
  23b268:	add	x20, x21, #0x38
  23b26c:	mov	x0, x20
  23b270:	mov	x1, xzr
  23b274:	bl	254530 <internal_ordered_hashmap_ensure_allocated@plt>
  23b278:	tbnz	w0, #31, 23ba80 <udev_rule_apply_token_to_event+0x1b98>
  23b27c:	ldr	x0, [x20]
  23b280:	mov	x1, x22
  23b284:	mov	x2, x23
  23b288:	bl	23df2c <ordered_hashmap_put>
  23b28c:	tbnz	w0, #31, 23c484 <udev_rule_apply_token_to_event+0x259c>
  23b290:	ldr	x8, [x19]
  23b294:	cbz	x8, 23ce74 <udev_rule_apply_token_to_event+0x2f8c>
  23b298:	ldr	x24, [x8, #8]
  23b29c:	b	23ce78 <udev_rule_apply_token_to_event+0x2f90>
  23b2a0:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23b2a4:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23b2a8:	add	x1, x1, #0x63
  23b2ac:	add	x3, x3, #0x86f
  23b2b0:	mov	w0, #0x1                   	// #1
  23b2b4:	mov	w2, #0x85c                 	// #2140
  23b2b8:	b	23b930 <udev_rule_apply_token_to_event+0x1a48>
  23b2bc:	mov	x23, xzr
  23b2c0:	cbz	x8, 23b2cc <udev_rule_apply_token_to_event+0x13e4>
  23b2c4:	ldr	x22, [x8]
  23b2c8:	b	23b2d0 <udev_rule_apply_token_to_event+0x13e8>
  23b2cc:	mov	x22, xzr
  23b2d0:	mov	w0, #0x1                   	// #1
  23b2d4:	str	xzr, [sp, #80]
  23b2d8:	bl	2535b0 <log_get_max_level_realm@plt>
  23b2dc:	cmp	w0, #0x3
  23b2e0:	b.ge	23d458 <udev_rule_apply_token_to_event+0x3570>  // b.tcont
  23b2e4:	ldr	x19, [sp, #80]
  23b2e8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b2ec:	add	x8, x8, #0xb64
  23b2f0:	mov	x0, x22
  23b2f4:	cmp	x19, #0x0
  23b2f8:	csel	x20, xzr, x8, eq  // eq = none
  23b2fc:	bl	235b80 <strna>
  23b300:	cbz	x23, 23b30c <udev_rule_apply_token_to_event+0x1424>
  23b304:	ldr	w8, [x23, #8]
  23b308:	b	23b310 <udev_rule_apply_token_to_event+0x1428>
  23b30c:	mov	w8, wzr
  23b310:	str	w8, [sp, #24]
  23b314:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23b318:	add	x8, x8, #0x3bb
  23b31c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b320:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b324:	add	x2, x2, #0x63
  23b328:	add	x4, x4, #0x86f
  23b32c:	stp	x8, x0, [sp, #8]
  23b330:	mov	w0, #0x3                   	// #3
  23b334:	mov	w3, #0x61d                 	// #1565
  23b338:	b	23d3ec <udev_rule_apply_token_to_event+0x3504>
  23b33c:	cbz	x8, 23c4c8 <udev_rule_apply_token_to_event+0x25e0>
  23b340:	ldr	x24, [x8, #8]
  23b344:	b	23c4cc <udev_rule_apply_token_to_event+0x25e4>
  23b348:	cbz	x8, 23c570 <udev_rule_apply_token_to_event+0x2688>
  23b34c:	ldr	x24, [x8, #8]
  23b350:	b	23c574 <udev_rule_apply_token_to_event+0x268c>
  23b354:	ldrb	w8, [x20, #1]
  23b358:	lsl	w8, w8, #8
  23b35c:	cmp	w8, #0x100
  23b360:	cset	w21, eq  // eq = none
  23b364:	b	23cfc8 <udev_rule_apply_token_to_event+0x30e0>
  23b368:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23b36c:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23b370:	add	x1, x1, #0x63
  23b374:	add	x3, x3, #0x86f
  23b378:	mov	w0, #0x1                   	// #1
  23b37c:	mov	w2, #0x7a6                 	// #1958
  23b380:	b	23c49c <udev_rule_apply_token_to_event+0x25b4>
  23b384:	mov	x22, xzr
  23b388:	cbz	x8, 23b394 <udev_rule_apply_token_to_event+0x14ac>
  23b38c:	ldr	x21, [x8]
  23b390:	b	23b398 <udev_rule_apply_token_to_event+0x14b0>
  23b394:	mov	x21, xzr
  23b398:	mov	w0, #0x1                   	// #1
  23b39c:	str	xzr, [sp, #80]
  23b3a0:	bl	2535b0 <log_get_max_level_realm@plt>
  23b3a4:	cmp	w0, #0x3
  23b3a8:	b.ge	23d478 <udev_rule_apply_token_to_event+0x3590>  // b.tcont
  23b3ac:	ldr	x19, [sp, #80]
  23b3b0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b3b4:	add	x8, x8, #0xb64
  23b3b8:	mov	x0, x21
  23b3bc:	cmp	x19, #0x0
  23b3c0:	csel	x20, xzr, x8, eq  // eq = none
  23b3c4:	bl	235b80 <strna>
  23b3c8:	cbz	x22, 23b3d4 <udev_rule_apply_token_to_event+0x14ec>
  23b3cc:	ldr	w8, [x22, #8]
  23b3d0:	b	23b3d8 <udev_rule_apply_token_to_event+0x14f0>
  23b3d4:	mov	w8, wzr
  23b3d8:	add	x9, sp, #0x4, lsl #12
  23b3dc:	str	w8, [sp, #24]
  23b3e0:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23b3e4:	add	x9, x9, #0x58
  23b3e8:	add	x8, x8, #0x7af
  23b3ec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b3f0:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b3f4:	add	x2, x2, #0x63
  23b3f8:	add	x4, x4, #0x86f
  23b3fc:	str	x9, [sp, #32]
  23b400:	stp	x8, x0, [sp, #8]
  23b404:	mov	w0, #0x3                   	// #3
  23b408:	mov	w3, #0x7d5                 	// #2005
  23b40c:	b	23c2d0 <udev_rule_apply_token_to_event+0x23e8>
  23b410:	mov	x24, xzr
  23b414:	cbz	x8, 23b420 <udev_rule_apply_token_to_event+0x1538>
  23b418:	ldr	x22, [x8]
  23b41c:	b	23b424 <udev_rule_apply_token_to_event+0x153c>
  23b420:	mov	x22, xzr
  23b424:	mov	w0, #0x1                   	// #1
  23b428:	str	xzr, [sp, #72]
  23b42c:	bl	2535b0 <log_get_max_level_realm@plt>
  23b430:	cmp	w0, #0x7
  23b434:	b.ge	23d488 <udev_rule_apply_token_to_event+0x35a0>  // b.tcont
  23b438:	ldr	x20, [sp, #72]
  23b43c:	adrp	x23, 211000 <worker_hash_op+0x6ad0>
  23b440:	add	x23, x23, #0xb64
  23b444:	mov	x0, x22
  23b448:	cmp	x20, #0x0
  23b44c:	csel	x21, xzr, x23, eq  // eq = none
  23b450:	bl	235b80 <strna>
  23b454:	cbz	x24, 23b460 <udev_rule_apply_token_to_event+0x1578>
  23b458:	ldr	w8, [x24, #8]
  23b45c:	b	23b464 <udev_rule_apply_token_to_event+0x157c>
  23b460:	mov	w8, wzr
  23b464:	str	w8, [sp, #24]
  23b468:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23b46c:	add	x10, sp, #0x4, lsl #12
  23b470:	add	x8, x8, #0x8d5
  23b474:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b478:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b47c:	add	x9, sp, #0x50
  23b480:	add	x10, x10, #0x58
  23b484:	add	x2, x2, #0x63
  23b488:	add	x4, x4, #0x86f
  23b48c:	stp	x8, x0, [sp, #8]
  23b490:	mov	w0, #0x7                   	// #7
  23b494:	mov	w3, #0x836                 	// #2102
  23b498:	mov	w1, wzr
  23b49c:	mov	x5, x21
  23b4a0:	mov	x6, x20
  23b4a4:	mov	x7, xzr
  23b4a8:	stp	x10, x9, [sp, #32]
  23b4ac:	str	xzr, [sp]
  23b4b0:	bl	2539f0 <log_object_internal@plt>
  23b4b4:	add	x0, sp, #0x4, lsl #12
  23b4b8:	add	x0, x0, #0x58
  23b4bc:	add	x1, sp, #0x50
  23b4c0:	bl	23df40 <write_string_file>
  23b4c4:	tbz	w0, #31, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23b4c8:	ldr	x8, [x19]
  23b4cc:	mov	w20, w0
  23b4d0:	cbz	x8, 23c6b8 <udev_rule_apply_token_to_event+0x27d0>
  23b4d4:	ldr	x24, [x8, #8]
  23b4d8:	b	23c6bc <udev_rule_apply_token_to_event+0x27d4>
  23b4dc:	adrp	x3, 214000 <worker_hash_op+0x9ad0>
  23b4e0:	mov	w2, w0
  23b4e4:	add	x3, x3, #0x1ef
  23b4e8:	b	23b82c <udev_rule_apply_token_to_event+0x1944>
  23b4ec:	add	x25, sp, #0x50
  23b4f0:	str	x28, [sp, #48]
  23b4f4:	b	23b508 <udev_rule_apply_token_to_event+0x1620>
  23b4f8:	mov	x0, x24
  23b4fc:	bl	2358dc <isempty>
  23b500:	mov	x25, x24
  23b504:	tbnz	w0, #0, 23ac5c <udev_rule_apply_token_to_event+0xd74>
  23b508:	mov	w1, #0xa                   	// #10
  23b50c:	mov	x0, x25
  23b510:	bl	253a60 <strchr@plt>
  23b514:	mov	x24, x0
  23b518:	cbz	x0, 23b520 <udev_rule_apply_token_to_event+0x1638>
  23b51c:	strb	wzr, [x24], #1
  23b520:	add	x1, sp, #0x4, lsl #12
  23b524:	add	x1, x1, #0x50
  23b528:	add	x2, sp, #0x48
  23b52c:	mov	x0, x25
  23b530:	bl	23dcb8 <get_property_from_string>
  23b534:	mov	w26, w0
  23b538:	tbnz	w0, #31, 23b55c <udev_rule_apply_token_to_event+0x1674>
  23b53c:	cbz	w26, 23b56c <udev_rule_apply_token_to_event+0x1684>
  23b540:	ldr	x1, [sp, #16464]
  23b544:	ldr	x2, [sp, #72]
  23b548:	mov	x0, x28
  23b54c:	bl	2541a0 <device_add_property@plt>
  23b550:	tbnz	w0, #31, 23b574 <udev_rule_apply_token_to_event+0x168c>
  23b554:	mov	w8, wzr
  23b558:	b	23b6d4 <udev_rule_apply_token_to_event+0x17ec>
  23b55c:	ldr	x8, [x19]
  23b560:	cbz	x8, 23b588 <udev_rule_apply_token_to_event+0x16a0>
  23b564:	ldr	x23, [x8, #8]
  23b568:	b	23b58c <udev_rule_apply_token_to_event+0x16a4>
  23b56c:	mov	w8, #0x13                  	// #19
  23b570:	b	23b6d4 <udev_rule_apply_token_to_event+0x17ec>
  23b574:	ldr	x8, [x19]
  23b578:	mov	w25, w0
  23b57c:	cbz	x8, 23b62c <udev_rule_apply_token_to_event+0x1744>
  23b580:	ldr	x22, [x8, #8]
  23b584:	b	23b630 <udev_rule_apply_token_to_event+0x1748>
  23b588:	mov	x23, xzr
  23b58c:	cbz	x8, 23b598 <udev_rule_apply_token_to_event+0x16b0>
  23b590:	ldr	x22, [x8]
  23b594:	b	23b59c <udev_rule_apply_token_to_event+0x16b4>
  23b598:	mov	x22, xzr
  23b59c:	mov	w0, #0x1                   	// #1
  23b5a0:	str	xzr, [sp, #64]
  23b5a4:	bl	2535b0 <log_get_max_level_realm@plt>
  23b5a8:	cmp	w0, #0x7
  23b5ac:	b.ge	23b6e4 <udev_rule_apply_token_to_event+0x17fc>  // b.tcont
  23b5b0:	ldr	x27, [sp, #64]
  23b5b4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b5b8:	add	x8, x8, #0xb64
  23b5bc:	mov	x0, x22
  23b5c0:	cmp	x27, #0x0
  23b5c4:	csel	x28, xzr, x8, eq  // eq = none
  23b5c8:	bl	235b80 <strna>
  23b5cc:	cbz	x23, 23b5d8 <udev_rule_apply_token_to_event+0x16f0>
  23b5d0:	ldr	w8, [x23, #8]
  23b5d4:	b	23b5dc <udev_rule_apply_token_to_event+0x16f4>
  23b5d8:	mov	w8, wzr
  23b5dc:	str	w8, [sp, #24]
  23b5e0:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  23b5e4:	add	x8, x8, #0x3c9
  23b5e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b5ec:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b5f0:	stp	x8, x0, [sp, #8]
  23b5f4:	mov	w0, #0x7                   	// #7
  23b5f8:	mov	w3, #0x6dd                 	// #1757
  23b5fc:	mov	w1, w26
  23b600:	add	x2, x2, #0x63
  23b604:	add	x4, x4, #0x86f
  23b608:	mov	x5, x28
  23b60c:	mov	x6, x27
  23b610:	mov	x7, xzr
  23b614:	str	x25, [sp, #32]
  23b618:	str	xzr, [sp]
  23b61c:	bl	2539f0 <log_object_internal@plt>
  23b620:	ldr	x28, [sp, #48]
  23b624:	mov	w8, #0x13                  	// #19
  23b628:	b	23b6d4 <udev_rule_apply_token_to_event+0x17ec>
  23b62c:	mov	x22, xzr
  23b630:	cbz	x8, 23b63c <udev_rule_apply_token_to_event+0x1754>
  23b634:	ldr	x27, [x8]
  23b638:	b	23b640 <udev_rule_apply_token_to_event+0x1758>
  23b63c:	mov	x27, xzr
  23b640:	mov	w0, #0x1                   	// #1
  23b644:	str	xzr, [sp, #64]
  23b648:	bl	2535b0 <log_get_max_level_realm@plt>
  23b64c:	cmp	w0, #0x3
  23b650:	b.ge	23b6f4 <udev_rule_apply_token_to_event+0x180c>  // b.tcont
  23b654:	ldr	x21, [sp, #64]
  23b658:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b65c:	add	x8, x8, #0xb64
  23b660:	mov	x0, x27
  23b664:	cmp	x21, #0x0
  23b668:	csel	x26, xzr, x8, eq  // eq = none
  23b66c:	bl	235b80 <strna>
  23b670:	cbz	x22, 23b67c <udev_rule_apply_token_to_event+0x1794>
  23b674:	ldr	w8, [x22, #8]
  23b678:	b	23b680 <udev_rule_apply_token_to_event+0x1798>
  23b67c:	mov	w8, wzr
  23b680:	ldr	x9, [sp, #16464]
  23b684:	ldr	x10, [sp, #72]
  23b688:	str	w8, [sp, #24]
  23b68c:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23b690:	add	x8, x8, #0xa80
  23b694:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b698:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b69c:	stp	x8, x0, [sp, #8]
  23b6a0:	mov	w0, #0x3                   	// #3
  23b6a4:	mov	w3, #0x6e7                 	// #1767
  23b6a8:	mov	w1, w25
  23b6ac:	add	x2, x2, #0x63
  23b6b0:	add	x4, x4, #0x86f
  23b6b4:	mov	x5, x26
  23b6b8:	mov	x6, x21
  23b6bc:	mov	x7, xzr
  23b6c0:	stp	x9, x10, [sp, #32]
  23b6c4:	str	xzr, [sp]
  23b6c8:	bl	2539f0 <log_object_internal@plt>
  23b6cc:	mov	w21, w0
  23b6d0:	mov	w8, #0x1                   	// #1
  23b6d4:	cmp	w8, #0x13
  23b6d8:	b.eq	23b4f8 <udev_rule_apply_token_to_event+0x1610>  // b.none
  23b6dc:	cbz	w8, 23b4f8 <udev_rule_apply_token_to_event+0x1610>
  23b6e0:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23b6e4:	ldr	x0, [sp, #48]
  23b6e8:	add	x1, sp, #0x40
  23b6ec:	bl	253a40 <sd_device_get_sysname@plt>
  23b6f0:	b	23b5b0 <udev_rule_apply_token_to_event+0x16c8>
  23b6f4:	add	x1, sp, #0x40
  23b6f8:	mov	x0, x28
  23b6fc:	bl	253a40 <sd_device_get_sysname@plt>
  23b700:	b	23b654 <udev_rule_apply_token_to_event+0x176c>
  23b704:	orr	w8, w8, w26
  23b708:	str	w8, [x21, #96]
  23b70c:	ldr	x1, [x20, #8]
  23b710:	add	x2, sp, #0x4, lsl #12
  23b714:	add	x2, x2, #0x58
  23b718:	mov	w3, #0x400                 	// #1024
  23b71c:	mov	x0, x21
  23b720:	mov	w4, wzr
  23b724:	mov	x27, x28
  23b728:	bl	22f864 <udev_event_apply_format>
  23b72c:	ldr	x8, [x19]
  23b730:	cbz	x8, 23b73c <udev_rule_apply_token_to_event+0x1854>
  23b734:	ldr	x28, [x8, #8]
  23b738:	b	23b740 <udev_rule_apply_token_to_event+0x1858>
  23b73c:	mov	x28, xzr
  23b740:	cbz	x8, 23b74c <udev_rule_apply_token_to_event+0x1864>
  23b744:	ldr	x25, [x8]
  23b748:	b	23b750 <udev_rule_apply_token_to_event+0x1868>
  23b74c:	mov	x25, xzr
  23b750:	mov	w0, #0x1                   	// #1
  23b754:	str	xzr, [sp, #80]
  23b758:	bl	2535b0 <log_get_max_level_realm@plt>
  23b75c:	cmp	w0, #0x7
  23b760:	b.ge	23d468 <udev_rule_apply_token_to_event+0x3580>  // b.tcont
  23b764:	ldr	x23, [sp, #80]
  23b768:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b76c:	add	x8, x8, #0xb64
  23b770:	mov	x0, x25
  23b774:	cmp	x23, #0x0
  23b778:	csel	x24, xzr, x8, eq  // eq = none
  23b77c:	bl	235b80 <strna>
  23b780:	cbz	x28, 23b78c <udev_rule_apply_token_to_event+0x18a4>
  23b784:	ldr	w8, [x28, #8]
  23b788:	b	23b790 <udev_rule_apply_token_to_event+0x18a8>
  23b78c:	mov	w8, wzr
  23b790:	str	w8, [sp, #24]
  23b794:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23b798:	add	x9, sp, #0x4, lsl #12
  23b79c:	add	x8, x8, #0xaa7
  23b7a0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b7a4:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b7a8:	add	x9, x9, #0x58
  23b7ac:	add	x2, x2, #0x63
  23b7b0:	add	x4, x4, #0x86f
  23b7b4:	stp	x8, x0, [sp, #8]
  23b7b8:	mov	w0, #0x7                   	// #7
  23b7bc:	mov	w3, #0x6fd                 	// #1789
  23b7c0:	mov	w1, wzr
  23b7c4:	mov	x5, x24
  23b7c8:	mov	x6, x23
  23b7cc:	mov	x7, xzr
  23b7d0:	str	x9, [sp, #32]
  23b7d4:	str	xzr, [sp]
  23b7d8:	bl	2539f0 <log_object_internal@plt>
  23b7dc:	add	x2, sp, #0x4, lsl #12
  23b7e0:	add	x2, x2, #0x58
  23b7e4:	mov	x0, x27
  23b7e8:	mov	w1, w22
  23b7ec:	mov	w3, wzr
  23b7f0:	bl	23f208 <udev_builtin_run>
  23b7f4:	mov	w22, w0
  23b7f8:	tbz	w0, #31, 23c470 <udev_rule_apply_token_to_event+0x2588>
  23b7fc:	ldr	x8, [x19]
  23b800:	cbz	x8, 23c3c4 <udev_rule_apply_token_to_event+0x24dc>
  23b804:	ldr	x25, [x8, #8]
  23b808:	b	23c3c8 <udev_rule_apply_token_to_event+0x24e0>
  23b80c:	ldr	x8, [x19]
  23b810:	mov	w20, w0
  23b814:	cbz	x8, 23cbc8 <udev_rule_apply_token_to_event+0x2ce0>
  23b818:	ldr	x24, [x8, #8]
  23b81c:	b	23cbcc <udev_rule_apply_token_to_event+0x2ce4>
  23b820:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  23b824:	mov	w2, w0
  23b828:	add	x3, x3, #0xb7c
  23b82c:	add	x4, sp, #0x50
  23b830:	mov	x0, x28
  23b834:	mov	x1, x23
  23b838:	bl	239c08 <log_unknown_owner>
  23b83c:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23b840:	mov	x23, xzr
  23b844:	cbz	x8, 23b860 <udev_rule_apply_token_to_event+0x1978>
  23b848:	ldr	x22, [x8]
  23b84c:	b	23b864 <udev_rule_apply_token_to_event+0x197c>
  23b850:	ldr	x8, [x19]
  23b854:	cbz	x8, 23cc50 <udev_rule_apply_token_to_event+0x2d68>
  23b858:	ldr	x23, [x8, #8]
  23b85c:	b	23cc54 <udev_rule_apply_token_to_event+0x2d6c>
  23b860:	mov	x22, xzr
  23b864:	mov	w0, #0x1                   	// #1
  23b868:	str	xzr, [sp, #16464]
  23b86c:	bl	2535b0 <log_get_max_level_realm@plt>
  23b870:	cmp	w0, #0x3
  23b874:	b.ge	23d498 <udev_rule_apply_token_to_event+0x35b0>  // b.tcont
  23b878:	ldr	x19, [sp, #16464]
  23b87c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b880:	add	x8, x8, #0xb64
  23b884:	mov	x0, x22
  23b888:	cmp	x19, #0x0
  23b88c:	csel	x20, xzr, x8, eq  // eq = none
  23b890:	bl	235b80 <strna>
  23b894:	cbz	x23, 23b8a0 <udev_rule_apply_token_to_event+0x19b8>
  23b898:	ldr	w8, [x23, #8]
  23b89c:	b	23b8a4 <udev_rule_apply_token_to_event+0x19bc>
  23b8a0:	mov	w8, wzr
  23b8a4:	add	x9, sp, #0x4, lsl #12
  23b8a8:	str	w8, [sp, #24]
  23b8ac:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  23b8b0:	add	x9, x9, #0x58
  23b8b4:	add	x8, x8, #0x3a4
  23b8b8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b8bc:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b8c0:	add	x2, x2, #0x63
  23b8c4:	add	x4, x4, #0x86f
  23b8c8:	str	x9, [sp, #32]
  23b8cc:	stp	x8, x0, [sp, #8]
  23b8d0:	mov	w0, #0x3                   	// #3
  23b8d4:	mov	w3, #0x658                 	// #1624
  23b8d8:	str	xzr, [sp]
  23b8dc:	mov	w1, w21
  23b8e0:	mov	x5, x20
  23b8e4:	b	23cfb8 <udev_rule_apply_token_to_event+0x30d0>
  23b8e8:	mov	x0, x28
  23b8ec:	bl	254660 <device_add_tag@plt>
  23b8f0:	tbz	w0, #31, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23b8f4:	ldr	x8, [x19]
  23b8f8:	mov	w20, w0
  23b8fc:	cbz	x8, 23d19c <udev_rule_apply_token_to_event+0x32b4>
  23b900:	ldr	x23, [x8, #8]
  23b904:	b	23d1a0 <udev_rule_apply_token_to_event+0x32b8>
  23b908:	mov	w20, w0
  23b90c:	cbz	x8, 23cd18 <udev_rule_apply_token_to_event+0x2e30>
  23b910:	ldr	x23, [x8, #8]
  23b914:	b	23cd1c <udev_rule_apply_token_to_event+0x2e34>
  23b918:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23b91c:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23b920:	add	x1, x1, #0x63
  23b924:	add	x3, x3, #0x86f
  23b928:	mov	w0, #0x1                   	// #1
  23b92c:	mov	w2, #0x860                 	// #2144
  23b930:	bl	2537c0 <log_oom_internal@plt>
  23b934:	mov	w21, w0
  23b938:	mov	w19, wzr
  23b93c:	b	23c380 <udev_rule_apply_token_to_event+0x2498>
  23b940:	mov	x24, xzr
  23b944:	cbz	x8, 23b950 <udev_rule_apply_token_to_event+0x1a68>
  23b948:	ldr	x23, [x8]
  23b94c:	b	23b954 <udev_rule_apply_token_to_event+0x1a6c>
  23b950:	mov	x23, xzr
  23b954:	mov	w0, #0x1                   	// #1
  23b958:	str	xzr, [sp, #16464]
  23b95c:	bl	2535b0 <log_get_max_level_realm@plt>
  23b960:	cmp	w0, #0x7
  23b964:	b.ge	23d4ac <udev_rule_apply_token_to_event+0x35c4>  // b.tcont
  23b968:	ldr	x19, [sp, #16464]
  23b96c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23b970:	add	x8, x8, #0xb64
  23b974:	mov	x0, x23
  23b978:	cmp	x19, #0x0
  23b97c:	csel	x22, xzr, x8, eq  // eq = none
  23b980:	bl	235b80 <strna>
  23b984:	cbz	x24, 23b990 <udev_rule_apply_token_to_event+0x1aa8>
  23b988:	ldr	w8, [x24, #8]
  23b98c:	b	23b994 <udev_rule_apply_token_to_event+0x1aac>
  23b990:	mov	w8, wzr
  23b994:	add	x9, sp, #0x4, lsl #12
  23b998:	str	w8, [sp, #24]
  23b99c:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23b9a0:	add	x9, x9, #0x58
  23b9a4:	add	x8, x8, #0x1f5
  23b9a8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23b9ac:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23b9b0:	str	w21, [sp, #40]
  23b9b4:	add	x2, x2, #0x63
  23b9b8:	add	x4, x4, #0x86f
  23b9bc:	str	x9, [sp, #32]
  23b9c0:	stp	x8, x0, [sp, #8]
  23b9c4:	mov	w0, #0x7                   	// #7
  23b9c8:	mov	w3, #0x6ce                 	// #1742
  23b9cc:	str	xzr, [sp]
  23b9d0:	mov	w1, wzr
  23b9d4:	mov	x5, x22
  23b9d8:	b	23c698 <udev_rule_apply_token_to_event+0x27b0>
  23b9dc:	mov	x24, xzr
  23b9e0:	cbz	x8, 23b9ec <udev_rule_apply_token_to_event+0x1b04>
  23b9e4:	ldr	x23, [x8]
  23b9e8:	b	23b9f0 <udev_rule_apply_token_to_event+0x1b08>
  23b9ec:	mov	x23, xzr
  23b9f0:	mov	w0, #0x1                   	// #1
  23b9f4:	str	xzr, [sp, #16464]
  23b9f8:	bl	2535b0 <log_get_max_level_realm@plt>
  23b9fc:	cmp	w0, #0x7
  23ba00:	b.ge	23d4c0 <udev_rule_apply_token_to_event+0x35d8>  // b.tcont
  23ba04:	ldr	x19, [sp, #16464]
  23ba08:	mov	x0, x23
  23ba0c:	cmp	x19, #0x0
  23ba10:	csel	x21, xzr, x26, eq  // eq = none
  23ba14:	bl	235b80 <strna>
  23ba18:	cbz	x24, 23ba24 <udev_rule_apply_token_to_event+0x1b3c>
  23ba1c:	ldr	w8, [x24, #8]
  23ba20:	b	23ba28 <udev_rule_apply_token_to_event+0x1b40>
  23ba24:	mov	w8, wzr
  23ba28:	add	x9, sp, #0x4, lsl #12
  23ba2c:	str	w8, [sp, #24]
  23ba30:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23ba34:	add	x9, x9, #0x58
  23ba38:	add	x8, x8, #0x1f5
  23ba3c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ba40:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23ba44:	str	w22, [sp, #40]
  23ba48:	add	x2, x2, #0x63
  23ba4c:	add	x4, x4, #0x86f
  23ba50:	str	x9, [sp, #32]
  23ba54:	stp	x8, x0, [sp, #8]
  23ba58:	mov	w0, #0x7                   	// #7
  23ba5c:	mov	w3, #0x688                 	// #1672
  23ba60:	str	xzr, [sp]
  23ba64:	mov	w1, wzr
  23ba68:	b	23c694 <udev_rule_apply_token_to_event+0x27ac>
  23ba6c:	ldr	x8, [x19]
  23ba70:	mov	w21, w0
  23ba74:	cbz	x8, 23cf1c <udev_rule_apply_token_to_event+0x3034>
  23ba78:	ldr	x25, [x8, #8]
  23ba7c:	b	23cf20 <udev_rule_apply_token_to_event+0x3038>
  23ba80:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23ba84:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23ba88:	add	x1, x1, #0x63
  23ba8c:	add	x3, x3, #0x86f
  23ba90:	mov	w0, #0x1                   	// #1
  23ba94:	mov	w2, #0x7ad                 	// #1965
  23ba98:	b	23c49c <udev_rule_apply_token_to_event+0x25b4>
  23ba9c:	mov	x23, xzr
  23baa0:	cbz	x8, 23baac <udev_rule_apply_token_to_event+0x1bc4>
  23baa4:	ldr	x22, [x8]
  23baa8:	b	23bab0 <udev_rule_apply_token_to_event+0x1bc8>
  23baac:	mov	x22, xzr
  23bab0:	mov	w0, #0x1                   	// #1
  23bab4:	str	xzr, [sp, #80]
  23bab8:	bl	2535b0 <log_get_max_level_realm@plt>
  23babc:	cmp	w0, #0x3
  23bac0:	b.ge	23d4d4 <udev_rule_apply_token_to_event+0x35ec>  // b.tcont
  23bac4:	ldr	x19, [sp, #80]
  23bac8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bacc:	add	x8, x8, #0xb64
  23bad0:	mov	x0, x22
  23bad4:	cmp	x19, #0x0
  23bad8:	csel	x20, xzr, x8, eq  // eq = none
  23badc:	bl	235b80 <strna>
  23bae0:	cbz	x23, 23baec <udev_rule_apply_token_to_event+0x1c04>
  23bae4:	ldr	w8, [x23, #8]
  23bae8:	b	23baf0 <udev_rule_apply_token_to_event+0x1c08>
  23baec:	mov	w8, wzr
  23baf0:	str	w8, [sp, #24]
  23baf4:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23baf8:	add	x8, x8, #0xa61
  23bafc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bb00:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bb04:	add	x2, x2, #0x63
  23bb08:	add	x4, x4, #0x86f
  23bb0c:	stp	x8, x0, [sp, #8]
  23bb10:	mov	w0, #0x3                   	// #3
  23bb14:	mov	w3, #0x64c                 	// #1612
  23bb18:	b	23d3ec <udev_rule_apply_token_to_event+0x3504>
  23bb1c:	mov	x23, xzr
  23bb20:	cbz	x8, 23bb2c <udev_rule_apply_token_to_event+0x1c44>
  23bb24:	ldr	x22, [x8]
  23bb28:	b	23bb30 <udev_rule_apply_token_to_event+0x1c48>
  23bb2c:	mov	x22, xzr
  23bb30:	mov	w0, #0x1                   	// #1
  23bb34:	str	xzr, [sp, #80]
  23bb38:	bl	2535b0 <log_get_max_level_realm@plt>
  23bb3c:	cmp	w0, #0x3
  23bb40:	b.ge	23d4e4 <udev_rule_apply_token_to_event+0x35fc>  // b.tcont
  23bb44:	ldr	x19, [sp, #80]
  23bb48:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bb4c:	add	x8, x8, #0xb64
  23bb50:	mov	x0, x22
  23bb54:	cmp	x19, #0x0
  23bb58:	csel	x20, xzr, x8, eq  // eq = none
  23bb5c:	bl	235b80 <strna>
  23bb60:	cbz	x23, 23bb6c <udev_rule_apply_token_to_event+0x1c84>
  23bb64:	ldr	w8, [x23, #8]
  23bb68:	b	23bb70 <udev_rule_apply_token_to_event+0x1c88>
  23bb6c:	mov	w8, wzr
  23bb70:	str	w8, [sp, #24]
  23bb74:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23bb78:	add	x8, x8, #0x99a
  23bb7c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bb80:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bb84:	add	x2, x2, #0x63
  23bb88:	add	x4, x4, #0x86f
  23bb8c:	stp	x8, x0, [sp, #8]
  23bb90:	mov	w0, #0x3                   	// #3
  23bb94:	mov	w3, #0x643                 	// #1603
  23bb98:	b	23d3ec <udev_rule_apply_token_to_event+0x3504>
  23bb9c:	mov	x23, xzr
  23bba0:	cbz	x8, 23bbbc <udev_rule_apply_token_to_event+0x1cd4>
  23bba4:	ldr	x22, [x8]
  23bba8:	b	23bbc0 <udev_rule_apply_token_to_event+0x1cd8>
  23bbac:	mov	x24, xzr
  23bbb0:	cbz	x8, 23bbfc <udev_rule_apply_token_to_event+0x1d14>
  23bbb4:	ldr	x22, [x8]
  23bbb8:	b	23bc00 <udev_rule_apply_token_to_event+0x1d18>
  23bbbc:	mov	x22, xzr
  23bbc0:	mov	w0, #0x1                   	// #1
  23bbc4:	str	xzr, [sp, #80]
  23bbc8:	bl	2535b0 <log_get_max_level_realm@plt>
  23bbcc:	cmp	w0, #0x3
  23bbd0:	b.ge	23d4f4 <udev_rule_apply_token_to_event+0x360c>  // b.tcont
  23bbd4:	ldr	x19, [sp, #80]
  23bbd8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bbdc:	add	x8, x8, #0xb64
  23bbe0:	mov	x0, x22
  23bbe4:	cmp	x19, #0x0
  23bbe8:	csel	x20, xzr, x8, eq  // eq = none
  23bbec:	bl	235b80 <strna>
  23bbf0:	cbz	x23, 23bc34 <udev_rule_apply_token_to_event+0x1d4c>
  23bbf4:	ldr	w8, [x23, #8]
  23bbf8:	b	23bc38 <udev_rule_apply_token_to_event+0x1d50>
  23bbfc:	mov	x22, xzr
  23bc00:	mov	w0, #0x1                   	// #1
  23bc04:	str	xzr, [sp, #16464]
  23bc08:	bl	2535b0 <log_get_max_level_realm@plt>
  23bc0c:	cmp	w0, #0x3
  23bc10:	b.ge	23d504 <udev_rule_apply_token_to_event+0x361c>  // b.tcont
  23bc14:	ldr	x19, [sp, #16464]
  23bc18:	mov	x0, x22
  23bc1c:	cmp	x19, #0x0
  23bc20:	csel	x21, xzr, x23, eq  // eq = none
  23bc24:	bl	235b80 <strna>
  23bc28:	cbz	x24, 23bc70 <udev_rule_apply_token_to_event+0x1d88>
  23bc2c:	ldr	w8, [x24, #8]
  23bc30:	b	23bc74 <udev_rule_apply_token_to_event+0x1d8c>
  23bc34:	mov	w8, wzr
  23bc38:	add	x9, sp, #0x4, lsl #12
  23bc3c:	str	w8, [sp, #24]
  23bc40:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23bc44:	add	x9, x9, #0x58
  23bc48:	add	x8, x8, #0x3aa
  23bc4c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bc50:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bc54:	add	x2, x2, #0x63
  23bc58:	add	x4, x4, #0x86f
  23bc5c:	str	x9, [sp, #32]
  23bc60:	stp	x8, x0, [sp, #8]
  23bc64:	mov	w0, #0x3                   	// #3
  23bc68:	mov	w3, #0x72f                 	// #1839
  23bc6c:	b	23d3ec <udev_rule_apply_token_to_event+0x3504>
  23bc70:	mov	w8, wzr
  23bc74:	add	x10, sp, #0x4, lsl #12
  23bc78:	str	w8, [sp, #24]
  23bc7c:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  23bc80:	add	x9, sp, #0x50
  23bc84:	add	x10, x10, #0x58
  23bc88:	add	x8, x8, #0x446
  23bc8c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bc90:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bc94:	add	x2, x2, #0x63
  23bc98:	add	x4, x4, #0x86f
  23bc9c:	stp	x10, x9, [sp, #32]
  23bca0:	stp	x8, x0, [sp, #8]
  23bca4:	mov	w0, #0x3                   	// #3
  23bca8:	mov	w3, #0x845                 	// #2117
  23bcac:	b	23cd9c <udev_rule_apply_token_to_event+0x2eb4>
  23bcb0:	mov	x24, xzr
  23bcb4:	cbz	x8, 23bcc0 <udev_rule_apply_token_to_event+0x1dd8>
  23bcb8:	ldr	x23, [x8]
  23bcbc:	b	23bcc4 <udev_rule_apply_token_to_event+0x1ddc>
  23bcc0:	mov	x23, xzr
  23bcc4:	mov	w0, #0x1                   	// #1
  23bcc8:	str	xzr, [sp, #16472]
  23bccc:	bl	2535b0 <log_get_max_level_realm@plt>
  23bcd0:	cmp	w0, #0x3
  23bcd4:	b.ge	23d518 <udev_rule_apply_token_to_event+0x3630>  // b.tcont
  23bcd8:	ldr	x19, [sp, #16472]
  23bcdc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bce0:	add	x8, x8, #0xb64
  23bce4:	mov	x0, x23
  23bce8:	cmp	x19, #0x0
  23bcec:	csel	x22, xzr, x8, eq  // eq = none
  23bcf0:	bl	235b80 <strna>
  23bcf4:	cbz	x24, 23bd00 <udev_rule_apply_token_to_event+0x1e18>
  23bcf8:	ldr	w8, [x24, #8]
  23bcfc:	b	23bd04 <udev_rule_apply_token_to_event+0x1e1c>
  23bd00:	mov	w8, wzr
  23bd04:	ldr	x9, [x20, #8]
  23bd08:	str	w8, [sp, #24]
  23bd0c:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23bd10:	add	x8, x8, #0xae7
  23bd14:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bd18:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bd1c:	add	x2, x2, #0x63
  23bd20:	add	x4, x4, #0x86f
  23bd24:	stp	x8, x0, [sp, #8]
  23bd28:	mov	w0, #0x3                   	// #3
  23bd2c:	mov	w3, #0x71f                 	// #1823
  23bd30:	str	x9, [sp, #32]
  23bd34:	b	23cfac <udev_rule_apply_token_to_event+0x30c4>
  23bd38:	mov	x23, xzr
  23bd3c:	cbz	x8, 23bd58 <udev_rule_apply_token_to_event+0x1e70>
  23bd40:	ldr	x22, [x8]
  23bd44:	b	23bd5c <udev_rule_apply_token_to_event+0x1e74>
  23bd48:	mov	x23, xzr
  23bd4c:	cbz	x8, 23bd98 <udev_rule_apply_token_to_event+0x1eb0>
  23bd50:	ldr	x22, [x8]
  23bd54:	b	23bd9c <udev_rule_apply_token_to_event+0x1eb4>
  23bd58:	mov	x22, xzr
  23bd5c:	mov	w0, #0x1                   	// #1
  23bd60:	str	xzr, [sp, #80]
  23bd64:	bl	2535b0 <log_get_max_level_realm@plt>
  23bd68:	cmp	w0, #0x3
  23bd6c:	b.ge	23d52c <udev_rule_apply_token_to_event+0x3644>  // b.tcont
  23bd70:	ldr	x19, [sp, #80]
  23bd74:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bd78:	add	x8, x8, #0xb64
  23bd7c:	mov	x0, x22
  23bd80:	cmp	x19, #0x0
  23bd84:	csel	x20, xzr, x8, eq  // eq = none
  23bd88:	bl	235b80 <strna>
  23bd8c:	cbz	x23, 23bdd8 <udev_rule_apply_token_to_event+0x1ef0>
  23bd90:	ldr	w8, [x23, #8]
  23bd94:	b	23bddc <udev_rule_apply_token_to_event+0x1ef4>
  23bd98:	mov	x22, xzr
  23bd9c:	mov	w0, #0x1                   	// #1
  23bda0:	str	xzr, [sp, #80]
  23bda4:	bl	2535b0 <log_get_max_level_realm@plt>
  23bda8:	cmp	w0, #0x3
  23bdac:	b.ge	23d53c <udev_rule_apply_token_to_event+0x3654>  // b.tcont
  23bdb0:	ldr	x19, [sp, #80]
  23bdb4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bdb8:	add	x8, x8, #0xb64
  23bdbc:	mov	x0, x22
  23bdc0:	cmp	x19, #0x0
  23bdc4:	csel	x20, xzr, x8, eq  // eq = none
  23bdc8:	bl	235b80 <strna>
  23bdcc:	cbz	x23, 23be08 <udev_rule_apply_token_to_event+0x1f20>
  23bdd0:	ldr	w8, [x23, #8]
  23bdd4:	b	23be0c <udev_rule_apply_token_to_event+0x1f24>
  23bdd8:	mov	w8, wzr
  23bddc:	str	w8, [sp, #24]
  23bde0:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  23bde4:	add	x8, x8, #0x517
  23bde8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bdec:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bdf0:	add	x2, x2, #0x63
  23bdf4:	add	x4, x4, #0x86f
  23bdf8:	stp	x8, x0, [sp, #8]
  23bdfc:	mov	w0, #0x3                   	// #3
  23be00:	mov	w3, #0x616                 	// #1558
  23be04:	b	23d3ec <udev_rule_apply_token_to_event+0x3504>
  23be08:	mov	w8, wzr
  23be0c:	str	w8, [sp, #24]
  23be10:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  23be14:	add	x8, x8, #0xd73
  23be18:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23be1c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23be20:	add	x2, x2, #0x63
  23be24:	add	x4, x4, #0x86f
  23be28:	stp	x8, x0, [sp, #8]
  23be2c:	mov	w0, #0x3                   	// #3
  23be30:	mov	w3, #0x60f                 	// #1551
  23be34:	b	23d3ec <udev_rule_apply_token_to_event+0x3504>
  23be38:	mov	x23, xzr
  23be3c:	cbz	x8, 23be48 <udev_rule_apply_token_to_event+0x1f60>
  23be40:	ldr	x21, [x8]
  23be44:	b	23be4c <udev_rule_apply_token_to_event+0x1f64>
  23be48:	mov	x21, xzr
  23be4c:	mov	w0, #0x1                   	// #1
  23be50:	str	xzr, [sp, #80]
  23be54:	bl	2535b0 <log_get_max_level_realm@plt>
  23be58:	cmp	w0, #0x3
  23be5c:	b.ge	23d54c <udev_rule_apply_token_to_event+0x3664>  // b.tcont
  23be60:	ldr	x19, [sp, #80]
  23be64:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23be68:	add	x8, x8, #0xb64
  23be6c:	mov	x0, x21
  23be70:	cmp	x19, #0x0
  23be74:	csel	x20, xzr, x8, eq  // eq = none
  23be78:	bl	235b80 <strna>
  23be7c:	cbz	x23, 23be88 <udev_rule_apply_token_to_event+0x1fa0>
  23be80:	ldr	w8, [x23, #8]
  23be84:	b	23be8c <udev_rule_apply_token_to_event+0x1fa4>
  23be88:	mov	w8, wzr
  23be8c:	add	x9, sp, #0x4, lsl #12
  23be90:	str	w8, [sp, #24]
  23be94:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23be98:	add	x9, x9, #0x58
  23be9c:	add	x8, x8, #0x22
  23bea0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bea4:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bea8:	add	x2, x2, #0x63
  23beac:	add	x4, x4, #0x86f
  23beb0:	str	x9, [sp, #32]
  23beb4:	stp	x8, x0, [sp, #8]
  23beb8:	mov	w0, #0x3                   	// #3
  23bebc:	mov	w3, #0x831                 	// #2097
  23bec0:	str	xzr, [sp]
  23bec4:	mov	w1, w22
  23bec8:	b	23c2d8 <udev_rule_apply_token_to_event+0x23f0>
  23becc:	mov	x23, xzr
  23bed0:	cbz	x8, 23bedc <udev_rule_apply_token_to_event+0x1ff4>
  23bed4:	ldr	x22, [x8]
  23bed8:	b	23bee0 <udev_rule_apply_token_to_event+0x1ff8>
  23bedc:	mov	x22, xzr
  23bee0:	mov	w0, #0x1                   	// #1
  23bee4:	str	xzr, [sp, #16464]
  23bee8:	bl	2535b0 <log_get_max_level_realm@plt>
  23beec:	cmp	w0, #0x7
  23bef0:	b.ge	23d55c <udev_rule_apply_token_to_event+0x3674>  // b.tcont
  23bef4:	ldr	x19, [sp, #16464]
  23bef8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23befc:	add	x8, x8, #0xb64
  23bf00:	mov	x0, x22
  23bf04:	cmp	x19, #0x0
  23bf08:	csel	x21, xzr, x8, eq  // eq = none
  23bf0c:	bl	235b80 <strna>
  23bf10:	cbz	x23, 23bf1c <udev_rule_apply_token_to_event+0x2034>
  23bf14:	ldr	w8, [x23, #8]
  23bf18:	b	23bf20 <udev_rule_apply_token_to_event+0x2038>
  23bf1c:	mov	w8, wzr
  23bf20:	ldr	w9, [x20]
  23bf24:	str	w8, [sp, #24]
  23bf28:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23bf2c:	add	x8, x8, #0x8c2
  23bf30:	str	w9, [sp, #40]
  23bf34:	add	x9, sp, #0x50
  23bf38:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bf3c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bf40:	add	x2, x2, #0x63
  23bf44:	add	x4, x4, #0x86f
  23bf48:	str	x9, [sp, #32]
  23bf4c:	stp	x8, x0, [sp, #8]
  23bf50:	mov	w0, #0x7                   	// #7
  23bf54:	mov	w3, #0x767                 	// #1895
  23bf58:	b	23ce30 <udev_rule_apply_token_to_event+0x2f48>
  23bf5c:	mov	x25, xzr
  23bf60:	cbz	x8, 23bf6c <udev_rule_apply_token_to_event+0x2084>
  23bf64:	ldr	x24, [x8]
  23bf68:	b	23bf70 <udev_rule_apply_token_to_event+0x2088>
  23bf6c:	mov	x24, xzr
  23bf70:	mov	w0, #0x1                   	// #1
  23bf74:	str	xzr, [sp, #80]
  23bf78:	bl	2535b0 <log_get_max_level_realm@plt>
  23bf7c:	cmp	w0, #0x7
  23bf80:	b.ge	23d570 <udev_rule_apply_token_to_event+0x3688>  // b.tcont
  23bf84:	ldr	x19, [sp, #80]
  23bf88:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bf8c:	add	x8, x8, #0xb64
  23bf90:	mov	x0, x24
  23bf94:	cmp	x19, #0x0
  23bf98:	csel	x23, xzr, x8, eq  // eq = none
  23bf9c:	bl	235b80 <strna>
  23bfa0:	mov	x24, x0
  23bfa4:	cbz	x25, 23bfac <udev_rule_apply_token_to_event+0x20c4>
  23bfa8:	ldr	w25, [x25, #8]
  23bfac:	mov	w0, w22
  23bfb0:	bl	23f0c8 <udev_builtin_name>
  23bfb4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23bfb8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23bfbc:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23bfc0:	str	x0, [sp, #32]
  23bfc4:	add	x8, x8, #0xdb3
  23bfc8:	add	x2, x2, #0x63
  23bfcc:	add	x4, x4, #0x86f
  23bfd0:	mov	w0, #0x7                   	// #7
  23bfd4:	mov	w3, #0x6f4                 	// #1780
  23bfd8:	mov	w1, wzr
  23bfdc:	mov	x5, x23
  23bfe0:	mov	x6, x19
  23bfe4:	mov	x7, xzr
  23bfe8:	str	w25, [sp, #24]
  23bfec:	stp	x8, x24, [sp, #8]
  23bff0:	str	xzr, [sp]
  23bff4:	bl	2539f0 <log_object_internal@plt>
  23bff8:	ldr	w9, [x21, #100]
  23bffc:	ldr	w8, [x20]
  23c000:	tst	w9, w26
  23c004:	lsl	w8, w8, #16
  23c008:	cset	w9, ne  // ne = any
  23c00c:	cmp	w9, w8, asr #24
  23c010:	cset	w21, eq  // eq = none
  23c014:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23c018:	mov	x23, xzr
  23c01c:	cbz	x8, 23c028 <udev_rule_apply_token_to_event+0x2140>
  23c020:	ldr	x22, [x8]
  23c024:	b	23c02c <udev_rule_apply_token_to_event+0x2144>
  23c028:	mov	x22, xzr
  23c02c:	mov	w0, #0x1                   	// #1
  23c030:	str	xzr, [sp, #16464]
  23c034:	bl	2535b0 <log_get_max_level_realm@plt>
  23c038:	cmp	w0, #0x7
  23c03c:	b.ge	23d580 <udev_rule_apply_token_to_event+0x3698>  // b.tcont
  23c040:	ldr	x19, [sp, #16464]
  23c044:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c048:	add	x8, x8, #0xb64
  23c04c:	mov	x0, x22
  23c050:	cmp	x19, #0x0
  23c054:	csel	x21, xzr, x8, eq  // eq = none
  23c058:	bl	235b80 <strna>
  23c05c:	cbz	x23, 23c068 <udev_rule_apply_token_to_event+0x2180>
  23c060:	ldr	w8, [x23, #8]
  23c064:	b	23c06c <udev_rule_apply_token_to_event+0x2184>
  23c068:	mov	w8, wzr
  23c06c:	ldr	w9, [x20]
  23c070:	str	w8, [sp, #24]
  23c074:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  23c078:	add	x8, x8, #0x50e
  23c07c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c080:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c084:	str	w9, [sp, #40]
  23c088:	add	x9, sp, #0x50
  23c08c:	add	x2, x2, #0x63
  23c090:	add	x4, x4, #0x86f
  23c094:	stp	x8, x0, [sp, #8]
  23c098:	mov	w0, #0x7                   	// #7
  23c09c:	mov	w3, #0x756                 	// #1878
  23c0a0:	b	23c8fc <udev_rule_apply_token_to_event+0x2a14>
  23c0a4:	ldr	x8, [x19]
  23c0a8:	cbz	x8, 23cfd4 <udev_rule_apply_token_to_event+0x30ec>
  23c0ac:	ldr	x24, [x8, #8]
  23c0b0:	b	23cfd8 <udev_rule_apply_token_to_event+0x30f0>
  23c0b4:	mov	x23, xzr
  23c0b8:	cbz	x8, 23c0c4 <udev_rule_apply_token_to_event+0x21dc>
  23c0bc:	ldr	x22, [x8]
  23c0c0:	b	23c0c8 <udev_rule_apply_token_to_event+0x21e0>
  23c0c4:	mov	x22, xzr
  23c0c8:	mov	w0, #0x1                   	// #1
  23c0cc:	str	xzr, [sp, #80]
  23c0d0:	bl	2535b0 <log_get_max_level_realm@plt>
  23c0d4:	cmp	w0, #0x7
  23c0d8:	b.ge	23d594 <udev_rule_apply_token_to_event+0x36ac>  // b.tcont
  23c0dc:	ldr	x19, [sp, #80]
  23c0e0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c0e4:	add	x8, x8, #0xb64
  23c0e8:	mov	x0, x22
  23c0ec:	cmp	x19, #0x0
  23c0f0:	csel	x20, xzr, x8, eq  // eq = none
  23c0f4:	bl	235b80 <strna>
  23c0f8:	cbz	x23, 23c104 <udev_rule_apply_token_to_event+0x221c>
  23c0fc:	ldr	w8, [x23, #8]
  23c100:	b	23c108 <udev_rule_apply_token_to_event+0x2220>
  23c104:	mov	w8, wzr
  23c108:	ldr	w9, [x21, #44]
  23c10c:	str	w8, [sp, #24]
  23c110:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23c114:	add	x8, x8, #0x228
  23c118:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c11c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c120:	str	w9, [sp, #32]
  23c124:	add	x2, x2, #0x63
  23c128:	add	x4, x4, #0x86f
  23c12c:	stp	x8, x0, [sp, #8]
  23c130:	mov	w0, #0x7                   	// #7
  23c134:	mov	w3, #0x782                 	// #1922
  23c138:	b	23c2d0 <udev_rule_apply_token_to_event+0x23e8>
  23c13c:	mov	x23, xzr
  23c140:	cbz	x8, 23c15c <udev_rule_apply_token_to_event+0x2274>
  23c144:	ldr	x22, [x8]
  23c148:	b	23c160 <udev_rule_apply_token_to_event+0x2278>
  23c14c:	mov	x23, xzr
  23c150:	cbz	x8, 23c19c <udev_rule_apply_token_to_event+0x22b4>
  23c154:	ldr	x22, [x8]
  23c158:	b	23c1a0 <udev_rule_apply_token_to_event+0x22b8>
  23c15c:	mov	x22, xzr
  23c160:	mov	w0, #0x1                   	// #1
  23c164:	str	xzr, [sp, #16472]
  23c168:	bl	2535b0 <log_get_max_level_realm@plt>
  23c16c:	cmp	w0, #0x7
  23c170:	b.ge	23d5a4 <udev_rule_apply_token_to_event+0x36bc>  // b.tcont
  23c174:	ldr	x19, [sp, #16472]
  23c178:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c17c:	add	x8, x8, #0xb64
  23c180:	mov	x0, x22
  23c184:	cmp	x19, #0x0
  23c188:	csel	x20, xzr, x8, eq  // eq = none
  23c18c:	bl	235b80 <strna>
  23c190:	cbz	x23, 23c1dc <udev_rule_apply_token_to_event+0x22f4>
  23c194:	ldr	w8, [x23, #8]
  23c198:	b	23c1e0 <udev_rule_apply_token_to_event+0x22f8>
  23c19c:	mov	x22, xzr
  23c1a0:	mov	w0, #0x1                   	// #1
  23c1a4:	str	xzr, [sp, #80]
  23c1a8:	bl	2535b0 <log_get_max_level_realm@plt>
  23c1ac:	cmp	w0, #0x7
  23c1b0:	b.ge	23d5b8 <udev_rule_apply_token_to_event+0x36d0>  // b.tcont
  23c1b4:	ldr	x19, [sp, #80]
  23c1b8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c1bc:	add	x8, x8, #0xb64
  23c1c0:	mov	x0, x22
  23c1c4:	cmp	x19, #0x0
  23c1c8:	csel	x20, xzr, x8, eq  // eq = none
  23c1cc:	bl	235b80 <strna>
  23c1d0:	cbz	x23, 23c214 <udev_rule_apply_token_to_event+0x232c>
  23c1d4:	ldr	w8, [x23, #8]
  23c1d8:	b	23c218 <udev_rule_apply_token_to_event+0x2330>
  23c1dc:	mov	w8, wzr
  23c1e0:	ldr	w9, [x21]
  23c1e4:	str	w8, [sp, #24]
  23c1e8:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23c1ec:	add	x8, x8, #0x3
  23c1f0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c1f4:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c1f8:	add	x2, x2, #0x63
  23c1fc:	add	x4, x4, #0x86f
  23c200:	stp	x8, x0, [sp, #8]
  23c204:	mov	w0, #0x7                   	// #7
  23c208:	mov	w3, #0x777                 	// #1911
  23c20c:	str	w9, [sp, #32]
  23c210:	b	23c2d0 <udev_rule_apply_token_to_event+0x23e8>
  23c214:	mov	w8, wzr
  23c218:	ldr	w9, [x21, #48]
  23c21c:	str	w8, [sp, #24]
  23c220:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23c224:	add	x8, x8, #0x193
  23c228:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c22c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c230:	str	w9, [sp, #32]
  23c234:	add	x2, x2, #0x63
  23c238:	add	x4, x4, #0x86f
  23c23c:	stp	x8, x0, [sp, #8]
  23c240:	mov	w0, #0x7                   	// #7
  23c244:	mov	w3, #0x78c                 	// #1932
  23c248:	b	23c2d0 <udev_rule_apply_token_to_event+0x23e8>
  23c24c:	mov	x23, xzr
  23c250:	cbz	x8, 23c25c <udev_rule_apply_token_to_event+0x2374>
  23c254:	ldr	x22, [x8]
  23c258:	b	23c260 <udev_rule_apply_token_to_event+0x2378>
  23c25c:	mov	x22, xzr
  23c260:	mov	w0, #0x1                   	// #1
  23c264:	str	xzr, [sp, #80]
  23c268:	bl	2535b0 <log_get_max_level_realm@plt>
  23c26c:	cmp	w0, #0x7
  23c270:	b.ge	23d5c8 <udev_rule_apply_token_to_event+0x36e0>  // b.tcont
  23c274:	ldr	x19, [sp, #80]
  23c278:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c27c:	add	x8, x8, #0xb64
  23c280:	mov	x0, x22
  23c284:	cmp	x19, #0x0
  23c288:	csel	x20, xzr, x8, eq  // eq = none
  23c28c:	bl	235b80 <strna>
  23c290:	cbz	x23, 23c29c <udev_rule_apply_token_to_event+0x23b4>
  23c294:	ldr	w8, [x23, #8]
  23c298:	b	23c2a0 <udev_rule_apply_token_to_event+0x23b8>
  23c29c:	mov	w8, wzr
  23c2a0:	ldr	w9, [x21, #40]
  23c2a4:	str	w8, [sp, #24]
  23c2a8:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23c2ac:	add	x8, x8, #0x3
  23c2b0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c2b4:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c2b8:	str	w9, [sp, #32]
  23c2bc:	add	x2, x2, #0x63
  23c2c0:	add	x4, x4, #0x86f
  23c2c4:	stp	x8, x0, [sp, #8]
  23c2c8:	mov	w0, #0x7                   	// #7
  23c2cc:	mov	w3, #0x796                 	// #1942
  23c2d0:	mov	w1, wzr
  23c2d4:	str	xzr, [sp]
  23c2d8:	mov	x5, x20
  23c2dc:	b	23ce3c <udev_rule_apply_token_to_event+0x2f54>
  23c2e0:	mov	x23, xzr
  23c2e4:	cbz	x8, 23c2f0 <udev_rule_apply_token_to_event+0x2408>
  23c2e8:	ldr	x22, [x8]
  23c2ec:	b	23c2f4 <udev_rule_apply_token_to_event+0x240c>
  23c2f0:	mov	x22, xzr
  23c2f4:	mov	w0, #0x1                   	// #1
  23c2f8:	str	xzr, [sp, #16464]
  23c2fc:	bl	2535b0 <log_get_max_level_realm@plt>
  23c300:	cmp	w0, #0x7
  23c304:	b.ge	23d5d8 <udev_rule_apply_token_to_event+0x36f0>  // b.tcont
  23c308:	ldr	x19, [sp, #16464]
  23c30c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c310:	add	x8, x8, #0xb64
  23c314:	mov	x0, x22
  23c318:	cmp	x19, #0x0
  23c31c:	csel	x21, xzr, x8, eq  // eq = none
  23c320:	bl	235b80 <strna>
  23c324:	cbz	x23, 23c330 <udev_rule_apply_token_to_event+0x2448>
  23c328:	ldr	w8, [x23, #8]
  23c32c:	b	23c334 <udev_rule_apply_token_to_event+0x244c>
  23c330:	mov	w8, wzr
  23c334:	ldr	x9, [x20, #8]
  23c338:	str	w8, [sp, #24]
  23c33c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c340:	add	x8, x8, #0x741
  23c344:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c348:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c34c:	add	x2, x2, #0x63
  23c350:	add	x4, x4, #0x86f
  23c354:	stp	x8, x0, [sp, #8]
  23c358:	mov	w0, #0x7                   	// #7
  23c35c:	mov	w3, #0x864                 	// #2148
  23c360:	mov	w1, wzr
  23c364:	mov	x5, x21
  23c368:	mov	x6, x19
  23c36c:	mov	x7, xzr
  23c370:	str	x9, [sp, #32]
  23c374:	str	xzr, [sp]
  23c378:	bl	2539f0 <log_object_internal@plt>
  23c37c:	mov	w19, #0x1                   	// #1
  23c380:	add	x0, sp, #0x50
  23c384:	bl	2352f8 <freep>
  23c388:	tbz	w19, #0, 23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23c38c:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23c390:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  23c394:	add	x1, x1, #0xbd2
  23c398:	add	x0, sp, #0x4, lsl #12
  23c39c:	add	x0, x0, #0x58
  23c3a0:	bl	254090 <util_replace_chars@plt>
  23c3a4:	mov	x20, x0
  23c3a8:	b	23c3b0 <udev_rule_apply_token_to_event+0x24c8>
  23c3ac:	mov	x20, xzr
  23c3b0:	cbz	x20, 23c99c <udev_rule_apply_token_to_event+0x2ab4>
  23c3b4:	ldr	x8, [x19]
  23c3b8:	cbz	x8, 23c904 <udev_rule_apply_token_to_event+0x2a1c>
  23c3bc:	ldr	x24, [x8, #8]
  23c3c0:	b	23c908 <udev_rule_apply_token_to_event+0x2a20>
  23c3c4:	mov	x25, xzr
  23c3c8:	adrp	x23, 211000 <worker_hash_op+0x6ad0>
  23c3cc:	add	x23, x23, #0xb64
  23c3d0:	cbz	x8, 23c3dc <udev_rule_apply_token_to_event+0x24f4>
  23c3d4:	ldr	x24, [x8]
  23c3d8:	b	23c3e0 <udev_rule_apply_token_to_event+0x24f8>
  23c3dc:	mov	x24, xzr
  23c3e0:	mov	w0, #0x1                   	// #1
  23c3e4:	str	xzr, [sp, #80]
  23c3e8:	bl	2535b0 <log_get_max_level_realm@plt>
  23c3ec:	cmp	w0, #0x7
  23c3f0:	b.ge	23d5ec <udev_rule_apply_token_to_event+0x3704>  // b.tcont
  23c3f4:	ldr	x19, [sp, #80]
  23c3f8:	mov	x0, x24
  23c3fc:	cmp	x19, #0x0
  23c400:	csel	x23, xzr, x23, eq  // eq = none
  23c404:	bl	235b80 <strna>
  23c408:	cbz	x25, 23c414 <udev_rule_apply_token_to_event+0x252c>
  23c40c:	ldr	w8, [x25, #8]
  23c410:	b	23c418 <udev_rule_apply_token_to_event+0x2530>
  23c414:	mov	w8, wzr
  23c418:	str	w8, [sp, #24]
  23c41c:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23c420:	add	x9, sp, #0x4, lsl #12
  23c424:	add	x8, x8, #0xeba
  23c428:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c42c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c430:	add	x9, x9, #0x58
  23c434:	add	x2, x2, #0x63
  23c438:	add	x4, x4, #0x86f
  23c43c:	stp	x8, x0, [sp, #8]
  23c440:	mov	w0, #0x7                   	// #7
  23c444:	mov	w3, #0x702                 	// #1794
  23c448:	mov	w1, w22
  23c44c:	mov	x5, x23
  23c450:	mov	x6, x19
  23c454:	mov	x7, xzr
  23c458:	str	x9, [sp, #32]
  23c45c:	str	xzr, [sp]
  23c460:	bl	2539f0 <log_object_internal@plt>
  23c464:	ldr	w8, [x21, #100]
  23c468:	orr	w8, w8, w26
  23c46c:	str	w8, [x21, #100]
  23c470:	ldr	w8, [x20]
  23c474:	sbfx	w8, w8, #8, #8
  23c478:	cmp	w8, w22, lsr #31
  23c47c:	cset	w21, eq  // eq = none
  23c480:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23c484:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23c488:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23c48c:	add	x1, x1, #0x63
  23c490:	add	x3, x3, #0x86f
  23c494:	mov	w0, #0x1                   	// #1
  23c498:	mov	w2, #0x7b1                 	// #1969
  23c49c:	bl	2537c0 <log_oom_internal@plt>
  23c4a0:	mov	w21, w0
  23c4a4:	mov	w19, wzr
  23c4a8:	add	x0, sp, #0x4, lsl #12
  23c4ac:	add	x0, x0, #0x50
  23c4b0:	bl	2352f8 <freep>
  23c4b4:	add	x0, sp, #0x4, lsl #12
  23c4b8:	add	x0, x0, #0x58
  23c4bc:	bl	2352f8 <freep>
  23c4c0:	tbz	w19, #0, 23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23c4c4:	b	23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23c4c8:	mov	x24, xzr
  23c4cc:	cbz	x8, 23c4d8 <udev_rule_apply_token_to_event+0x25f0>
  23c4d0:	ldr	x23, [x8]
  23c4d4:	b	23c4dc <udev_rule_apply_token_to_event+0x25f4>
  23c4d8:	mov	x23, xzr
  23c4dc:	mov	w0, #0x1                   	// #1
  23c4e0:	str	xzr, [sp, #16464]
  23c4e4:	bl	2535b0 <log_get_max_level_realm@plt>
  23c4e8:	cmp	w0, #0x4
  23c4ec:	b.ge	23d5fc <udev_rule_apply_token_to_event+0x3714>  // b.tcont
  23c4f0:	ldr	x19, [sp, #16464]
  23c4f4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c4f8:	add	x8, x8, #0xb64
  23c4fc:	mov	x0, x23
  23c500:	cmp	x19, #0x0
  23c504:	csel	x22, xzr, x8, eq  // eq = none
  23c508:	bl	235b80 <strna>
  23c50c:	cbz	x24, 23c518 <udev_rule_apply_token_to_event+0x2630>
  23c510:	ldr	w8, [x24, #8]
  23c514:	b	23c51c <udev_rule_apply_token_to_event+0x2634>
  23c518:	mov	w8, wzr
  23c51c:	add	x9, sp, #0x4, lsl #12
  23c520:	str	w8, [sp, #24]
  23c524:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23c528:	add	x9, x9, #0x58
  23c52c:	add	x8, x8, #0x37f
  23c530:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c534:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c538:	add	x2, x2, #0x63
  23c53c:	add	x4, x4, #0x86f
  23c540:	str	x9, [sp, #32]
  23c544:	stp	x8, x0, [sp, #8]
  23c548:	mov	w0, #0x4                   	// #4
  23c54c:	mov	w3, #0x6cc                 	// #1740
  23c550:	str	xzr, [sp]
  23c554:	mov	w1, w21
  23c558:	mov	x5, x22
  23c55c:	b	23c698 <udev_rule_apply_token_to_event+0x27b0>
  23c560:	mov	x25, xzr
  23c564:	cbz	x8, 23c580 <udev_rule_apply_token_to_event+0x2698>
  23c568:	ldr	x24, [x8]
  23c56c:	b	23c584 <udev_rule_apply_token_to_event+0x269c>
  23c570:	mov	x24, xzr
  23c574:	cbz	x8, 23c5b8 <udev_rule_apply_token_to_event+0x26d0>
  23c578:	ldr	x23, [x8]
  23c57c:	b	23c5bc <udev_rule_apply_token_to_event+0x26d4>
  23c580:	mov	x24, xzr
  23c584:	mov	w0, #0x1                   	// #1
  23c588:	str	xzr, [sp, #16464]
  23c58c:	bl	2535b0 <log_get_max_level_realm@plt>
  23c590:	cmp	w0, #0x7
  23c594:	b.ge	23d610 <udev_rule_apply_token_to_event+0x3728>  // b.tcont
  23c598:	ldr	x19, [sp, #16464]
  23c59c:	mov	x0, x24
  23c5a0:	cmp	x19, #0x0
  23c5a4:	csel	x23, xzr, x26, eq  // eq = none
  23c5a8:	bl	235b80 <strna>
  23c5ac:	cbz	x25, 23c5f0 <udev_rule_apply_token_to_event+0x2708>
  23c5b0:	ldr	w8, [x25, #8]
  23c5b4:	b	23c5f4 <udev_rule_apply_token_to_event+0x270c>
  23c5b8:	mov	x23, xzr
  23c5bc:	mov	w0, #0x1                   	// #1
  23c5c0:	str	xzr, [sp, #16464]
  23c5c4:	bl	2535b0 <log_get_max_level_realm@plt>
  23c5c8:	cmp	w0, #0x4
  23c5cc:	b.ge	23d624 <udev_rule_apply_token_to_event+0x373c>  // b.tcont
  23c5d0:	ldr	x19, [sp, #16464]
  23c5d4:	mov	x0, x23
  23c5d8:	cmp	x19, #0x0
  23c5dc:	csel	x21, xzr, x26, eq  // eq = none
  23c5e0:	bl	235b80 <strna>
  23c5e4:	cbz	x24, 23c654 <udev_rule_apply_token_to_event+0x276c>
  23c5e8:	ldr	w8, [x24, #8]
  23c5ec:	b	23c658 <udev_rule_apply_token_to_event+0x2770>
  23c5f0:	mov	w8, wzr
  23c5f4:	str	w8, [sp, #24]
  23c5f8:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23c5fc:	add	x9, sp, #0x4, lsl #12
  23c600:	add	x8, x8, #0x88e
  23c604:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c608:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c60c:	add	x9, x9, #0x58
  23c610:	add	x2, x2, #0x63
  23c614:	add	x4, x4, #0x86f
  23c618:	stp	x8, x0, [sp, #8]
  23c61c:	mov	w0, #0x7                   	// #7
  23c620:	mov	w3, #0x690                 	// #1680
  23c624:	mov	w1, wzr
  23c628:	mov	x5, x23
  23c62c:	mov	x6, x19
  23c630:	mov	x7, xzr
  23c634:	stp	x22, x9, [sp, #32]
  23c638:	str	xzr, [sp]
  23c63c:	bl	2539f0 <log_object_internal@plt>
  23c640:	add	x0, sp, #0x50
  23c644:	bl	253ab0 <strdup@plt>
  23c648:	mov	w8, wzr
  23c64c:	str	x0, [x21, #32]
  23c650:	b	23c6a8 <udev_rule_apply_token_to_event+0x27c0>
  23c654:	mov	w8, wzr
  23c658:	str	w8, [sp, #24]
  23c65c:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23c660:	add	x9, sp, #0x4, lsl #12
  23c664:	add	x8, x8, #0x37f
  23c668:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c66c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c670:	add	x9, x9, #0x58
  23c674:	add	x2, x2, #0x63
  23c678:	add	x4, x4, #0x86f
  23c67c:	stp	x8, x0, [sp, #8]
  23c680:	mov	w0, #0x4                   	// #4
  23c684:	mov	w3, #0x686                 	// #1670
  23c688:	mov	w1, w22
  23c68c:	str	x9, [sp, #32]
  23c690:	str	xzr, [sp]
  23c694:	mov	x5, x21
  23c698:	mov	x6, x19
  23c69c:	mov	x7, xzr
  23c6a0:	bl	2539f0 <log_object_internal@plt>
  23c6a4:	mov	w8, #0x100                 	// #256
  23c6a8:	ldrb	w9, [x20, #1]
  23c6ac:	cmp	w8, w9, lsl #8
  23c6b0:	cset	w21, eq  // eq = none
  23c6b4:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23c6b8:	mov	x24, xzr
  23c6bc:	cbz	x8, 23c6c8 <udev_rule_apply_token_to_event+0x27e0>
  23c6c0:	ldr	x22, [x8]
  23c6c4:	b	23c6cc <udev_rule_apply_token_to_event+0x27e4>
  23c6c8:	mov	x22, xzr
  23c6cc:	mov	w0, #0x1                   	// #1
  23c6d0:	str	xzr, [sp, #72]
  23c6d4:	bl	2535b0 <log_get_max_level_realm@plt>
  23c6d8:	cmp	w0, #0x3
  23c6dc:	b.ge	23d638 <udev_rule_apply_token_to_event+0x3750>  // b.tcont
  23c6e0:	ldr	x19, [sp, #72]
  23c6e4:	mov	x0, x22
  23c6e8:	cmp	x19, #0x0
  23c6ec:	csel	x21, xzr, x23, eq  // eq = none
  23c6f0:	bl	235b80 <strna>
  23c6f4:	cbz	x24, 23c700 <udev_rule_apply_token_to_event+0x2818>
  23c6f8:	ldr	w8, [x24, #8]
  23c6fc:	b	23c704 <udev_rule_apply_token_to_event+0x281c>
  23c700:	mov	w8, wzr
  23c704:	add	x9, sp, #0x4, lsl #12
  23c708:	str	w8, [sp, #24]
  23c70c:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  23c710:	add	x9, x9, #0x58
  23c714:	add	x8, x8, #0x69c
  23c718:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c71c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c720:	add	x2, x2, #0x63
  23c724:	add	x4, x4, #0x86f
  23c728:	str	x9, [sp, #32]
  23c72c:	stp	x8, x0, [sp, #8]
  23c730:	mov	w0, #0x3                   	// #3
  23c734:	mov	w3, #0x839                 	// #2105
  23c738:	b	23cd9c <udev_rule_apply_token_to_event+0x2eb4>
  23c73c:	mov	x26, xzr
  23c740:	cbz	x8, 23c74c <udev_rule_apply_token_to_event+0x2864>
  23c744:	ldr	x25, [x8]
  23c748:	b	23c750 <udev_rule_apply_token_to_event+0x2868>
  23c74c:	mov	x25, xzr
  23c750:	mov	w0, #0x1                   	// #1
  23c754:	str	xzr, [sp, #80]
  23c758:	bl	2535b0 <log_get_max_level_realm@plt>
  23c75c:	cmp	w0, #0x7
  23c760:	b.ge	23d658 <udev_rule_apply_token_to_event+0x3770>  // b.tcont
  23c764:	ldr	x23, [sp, #80]
  23c768:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c76c:	add	x8, x8, #0xb64
  23c770:	mov	x0, x25
  23c774:	cmp	x23, #0x0
  23c778:	csel	x24, xzr, x8, eq  // eq = none
  23c77c:	bl	235b80 <strna>
  23c780:	cbz	x26, 23c78c <udev_rule_apply_token_to_event+0x28a4>
  23c784:	ldr	w8, [x26, #8]
  23c788:	b	23c790 <udev_rule_apply_token_to_event+0x28a8>
  23c78c:	mov	w8, wzr
  23c790:	ldr	x9, [x20, #8]
  23c794:	str	w8, [sp, #24]
  23c798:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  23c79c:	add	x8, x8, #0x6ed
  23c7a0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c7a4:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c7a8:	add	x2, x2, #0x63
  23c7ac:	add	x4, x4, #0x86f
  23c7b0:	stp	x8, x0, [sp, #8]
  23c7b4:	mov	w0, #0x7                   	// #7
  23c7b8:	mov	w3, #0x7ec                 	// #2028
  23c7bc:	mov	w1, wzr
  23c7c0:	mov	x5, x24
  23c7c4:	mov	x6, x23
  23c7c8:	mov	x7, xzr
  23c7cc:	stp	x22, x9, [sp, #32]
  23c7d0:	str	xzr, [sp]
  23c7d4:	bl	2539f0 <log_object_internal@plt>
  23c7d8:	mov	x0, x28
  23c7dc:	mov	x1, xzr
  23c7e0:	bl	253bf0 <sd_device_get_devnum@plt>
  23c7e4:	tbnz	w0, #31, 23c820 <udev_rule_apply_token_to_event+0x2938>
  23c7e8:	add	x1, sp, #0x4, lsl #12
  23c7ec:	add	x1, x1, #0x50
  23c7f0:	mov	x0, x28
  23c7f4:	bl	253ad0 <sd_device_get_devname@plt>
  23c7f8:	tbnz	w0, #31, 23c848 <udev_rule_apply_token_to_event+0x2960>
  23c7fc:	ldr	x0, [sp, #16464]
  23c800:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  23c804:	add	x1, x1, #0x947
  23c808:	bl	2390a8 <startswith>
  23c80c:	mov	x1, x0
  23c810:	add	x0, sp, #0x4, lsl #12
  23c814:	add	x0, x0, #0x58
  23c818:	bl	239dfc <streq_ptr>
  23c81c:	tbz	w0, #0, 23c848 <udev_rule_apply_token_to_event+0x2960>
  23c820:	add	x20, x21, #0x18
  23c824:	add	x1, sp, #0x4, lsl #12
  23c828:	add	x1, x1, #0x58
  23c82c:	mov	x0, x20
  23c830:	bl	2543d0 <free_and_strdup@plt>
  23c834:	tbnz	w0, #31, 23c858 <udev_rule_apply_token_to_event+0x2970>
  23c838:	ldr	x8, [x19]
  23c83c:	cbz	x8, 23cdac <udev_rule_apply_token_to_event+0x2ec4>
  23c840:	ldr	x23, [x8, #8]
  23c844:	b	23cdb0 <udev_rule_apply_token_to_event+0x2ec8>
  23c848:	ldr	x8, [x19]
  23c84c:	cbz	x8, 23c87c <udev_rule_apply_token_to_event+0x2994>
  23c850:	ldr	x23, [x8, #8]
  23c854:	b	23c880 <udev_rule_apply_token_to_event+0x2998>
  23c858:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23c85c:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  23c860:	add	x1, x1, #0x63
  23c864:	add	x3, x3, #0x86f
  23c868:	mov	w0, #0x1                   	// #1
  23c86c:	mov	w2, #0x7f7                 	// #2039
  23c870:	bl	2537c0 <log_oom_internal@plt>
  23c874:	mov	w21, w0
  23c878:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23c87c:	mov	x23, xzr
  23c880:	cbz	x8, 23c88c <udev_rule_apply_token_to_event+0x29a4>
  23c884:	ldr	x22, [x8]
  23c888:	b	23c890 <udev_rule_apply_token_to_event+0x29a8>
  23c88c:	mov	x22, xzr
  23c890:	mov	w0, #0x1                   	// #1
  23c894:	str	xzr, [sp, #80]
  23c898:	bl	2535b0 <log_get_max_level_realm@plt>
  23c89c:	cmp	w0, #0x3
  23c8a0:	b.ge	23d648 <udev_rule_apply_token_to_event+0x3760>  // b.tcont
  23c8a4:	ldr	x19, [sp, #80]
  23c8a8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c8ac:	add	x8, x8, #0xb64
  23c8b0:	mov	x0, x22
  23c8b4:	cmp	x19, #0x0
  23c8b8:	csel	x21, xzr, x8, eq  // eq = none
  23c8bc:	bl	235b80 <strna>
  23c8c0:	cbz	x23, 23c8cc <udev_rule_apply_token_to_event+0x29e4>
  23c8c4:	ldr	w8, [x23, #8]
  23c8c8:	b	23c8d0 <udev_rule_apply_token_to_event+0x29e8>
  23c8cc:	mov	w8, wzr
  23c8d0:	ldr	x9, [x20, #8]
  23c8d4:	str	w8, [sp, #24]
  23c8d8:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23c8dc:	add	x8, x8, #0x171
  23c8e0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c8e4:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c8e8:	add	x2, x2, #0x63
  23c8ec:	add	x4, x4, #0x86f
  23c8f0:	stp	x8, x0, [sp, #8]
  23c8f4:	mov	w0, #0x3                   	// #3
  23c8f8:	mov	w3, #0x7f3                 	// #2035
  23c8fc:	str	x9, [sp, #32]
  23c900:	b	23ce30 <udev_rule_apply_token_to_event+0x2f48>
  23c904:	mov	x24, xzr
  23c908:	cbz	x8, 23c914 <udev_rule_apply_token_to_event+0x2a2c>
  23c90c:	ldr	x23, [x8]
  23c910:	b	23c918 <udev_rule_apply_token_to_event+0x2a30>
  23c914:	mov	x23, xzr
  23c918:	mov	w0, #0x1                   	// #1
  23c91c:	str	xzr, [sp, #80]
  23c920:	bl	2535b0 <log_get_max_level_realm@plt>
  23c924:	cmp	w0, #0x7
  23c928:	b.ge	23d668 <udev_rule_apply_token_to_event+0x3780>  // b.tcont
  23c92c:	ldr	x21, [sp, #80]
  23c930:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c934:	add	x8, x8, #0xb64
  23c938:	mov	x0, x23
  23c93c:	cmp	x21, #0x0
  23c940:	csel	x22, xzr, x8, eq  // eq = none
  23c944:	bl	235b80 <strna>
  23c948:	cbz	x24, 23c954 <udev_rule_apply_token_to_event+0x2a6c>
  23c94c:	ldr	w8, [x24, #8]
  23c950:	b	23c958 <udev_rule_apply_token_to_event+0x2a70>
  23c954:	mov	w8, wzr
  23c958:	str	w8, [sp, #24]
  23c95c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23c960:	add	x8, x8, #0xddd
  23c964:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c968:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23c96c:	add	x2, x2, #0x63
  23c970:	add	x4, x4, #0x86f
  23c974:	stp	x8, x0, [sp, #8]
  23c978:	mov	w0, #0x7                   	// #7
  23c97c:	mov	w3, #0x811                 	// #2065
  23c980:	mov	w1, wzr
  23c984:	mov	x5, x22
  23c988:	mov	x6, x21
  23c98c:	mov	x7, xzr
  23c990:	str	x20, [sp, #32]
  23c994:	str	xzr, [sp]
  23c998:	bl	2539f0 <log_object_internal@plt>
  23c99c:	add	x0, sp, #0x4, lsl #12
  23c9a0:	add	x0, x0, #0x58
  23c9a4:	mov	x1, xzr
  23c9a8:	bl	235344 <skip_leading_chars>
  23c9ac:	adrp	x23, 210000 <worker_hash_op+0x5ad0>
  23c9b0:	mov	x24, x0
  23c9b4:	add	x23, x23, #0x86f
  23c9b8:	b	23ca10 <udev_rule_apply_token_to_event+0x2b28>
  23c9bc:	ldr	w8, [x20, #8]
  23c9c0:	str	w8, [sp, #24]
  23c9c4:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23c9c8:	add	x8, x8, #0x12
  23c9cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23c9d0:	stp	x8, x0, [sp, #8]
  23c9d4:	mov	w0, #0x7                   	// #7
  23c9d8:	mov	w3, #0x822                 	// #2082
  23c9dc:	mov	w1, wzr
  23c9e0:	add	x2, x2, #0x63
  23c9e4:	mov	x4, x23
  23c9e8:	mov	x5, x27
  23c9ec:	mov	x6, x26
  23c9f0:	mov	x7, xzr
  23c9f4:	mov	x28, x22
  23c9f8:	str	x24, [sp, #32]
  23c9fc:	str	xzr, [sp]
  23ca00:	bl	2539f0 <log_object_internal@plt>
  23ca04:	mov	w8, wzr
  23ca08:	mov	x24, x25
  23ca0c:	cbnz	w8, 23aa10 <udev_rule_apply_token_to_event+0xb28>
  23ca10:	mov	x0, x24
  23ca14:	bl	2358dc <isempty>
  23ca18:	tbnz	w0, #0, 23cbc0 <udev_rule_apply_token_to_event+0x2cd8>
  23ca1c:	mov	w1, #0x20                  	// #32
  23ca20:	mov	x0, x24
  23ca24:	bl	253a60 <strchr@plt>
  23ca28:	cbz	x0, 23ca40 <udev_rule_apply_token_to_event+0x2b58>
  23ca2c:	strb	wzr, [x0], #1
  23ca30:	mov	x1, xzr
  23ca34:	bl	235344 <skip_leading_chars>
  23ca38:	mov	x25, x0
  23ca3c:	b	23ca44 <udev_rule_apply_token_to_event+0x2b5c>
  23ca40:	mov	x25, xzr
  23ca44:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23ca48:	add	x0, sp, #0x50
  23ca4c:	mov	w1, #0x400                 	// #1024
  23ca50:	add	x2, x2, #0x947
  23ca54:	mov	x3, x24
  23ca58:	mov	x4, xzr
  23ca5c:	bl	254600 <strscpyl@plt>
  23ca60:	add	x1, sp, #0x50
  23ca64:	mov	x0, x28
  23ca68:	bl	254670 <device_add_devlink@plt>
  23ca6c:	ldr	x8, [x19]
  23ca70:	tbnz	w0, #31, 23ca8c <udev_rule_apply_token_to_event+0x2ba4>
  23ca74:	cbz	x8, 23caa8 <udev_rule_apply_token_to_event+0x2bc0>
  23ca78:	ldr	x20, [x8, #8]
  23ca7c:	mov	x22, x28
  23ca80:	cbz	x8, 23cab4 <udev_rule_apply_token_to_event+0x2bcc>
  23ca84:	ldr	x28, [x8]
  23ca88:	b	23cab8 <udev_rule_apply_token_to_event+0x2bd0>
  23ca8c:	mov	w26, w0
  23ca90:	mov	x20, x28
  23ca94:	cbz	x8, 23caf4 <udev_rule_apply_token_to_event+0x2c0c>
  23ca98:	ldr	x28, [x8, #8]
  23ca9c:	cbz	x8, 23cafc <udev_rule_apply_token_to_event+0x2c14>
  23caa0:	ldr	x27, [x8]
  23caa4:	b	23cb00 <udev_rule_apply_token_to_event+0x2c18>
  23caa8:	mov	x20, xzr
  23caac:	mov	x22, x28
  23cab0:	cbnz	x8, 23ca84 <udev_rule_apply_token_to_event+0x2b9c>
  23cab4:	mov	x28, xzr
  23cab8:	mov	w0, #0x1                   	// #1
  23cabc:	str	xzr, [sp, #16464]
  23cac0:	bl	2535b0 <log_get_max_level_realm@plt>
  23cac4:	cmp	w0, #0x7
  23cac8:	b.ge	23cb98 <udev_rule_apply_token_to_event+0x2cb0>  // b.tcont
  23cacc:	ldr	x26, [sp, #16464]
  23cad0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cad4:	add	x8, x8, #0xb64
  23cad8:	mov	x0, x28
  23cadc:	cmp	x26, #0x0
  23cae0:	csel	x27, xzr, x8, eq  // eq = none
  23cae4:	bl	235b80 <strna>
  23cae8:	cbnz	x20, 23c9bc <udev_rule_apply_token_to_event+0x2ad4>
  23caec:	mov	w8, wzr
  23caf0:	b	23c9c0 <udev_rule_apply_token_to_event+0x2ad8>
  23caf4:	mov	x28, xzr
  23caf8:	cbnz	x8, 23caa0 <udev_rule_apply_token_to_event+0x2bb8>
  23cafc:	mov	x27, xzr
  23cb00:	mov	w0, #0x1                   	// #1
  23cb04:	str	xzr, [sp, #16464]
  23cb08:	bl	2535b0 <log_get_max_level_realm@plt>
  23cb0c:	cmp	w0, #0x3
  23cb10:	b.ge	23cbac <udev_rule_apply_token_to_event+0x2cc4>  // b.tcont
  23cb14:	ldr	x21, [sp, #16464]
  23cb18:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cb1c:	add	x8, x8, #0xb64
  23cb20:	mov	x0, x27
  23cb24:	cmp	x21, #0x0
  23cb28:	csel	x25, xzr, x8, eq  // eq = none
  23cb2c:	bl	235b80 <strna>
  23cb30:	cbz	x28, 23cb3c <udev_rule_apply_token_to_event+0x2c54>
  23cb34:	ldr	w8, [x28, #8]
  23cb38:	b	23cb40 <udev_rule_apply_token_to_event+0x2c58>
  23cb3c:	mov	w8, wzr
  23cb40:	str	w8, [sp, #24]
  23cb44:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23cb48:	add	x8, x8, #0x7d5
  23cb4c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23cb50:	add	x9, sp, #0x50
  23cb54:	stp	x8, x0, [sp, #8]
  23cb58:	mov	w0, #0x3                   	// #3
  23cb5c:	mov	w3, #0x820                 	// #2080
  23cb60:	mov	w1, w26
  23cb64:	add	x2, x2, #0x63
  23cb68:	mov	x4, x23
  23cb6c:	mov	x5, x25
  23cb70:	mov	x6, x21
  23cb74:	mov	x7, xzr
  23cb78:	mov	x28, x20
  23cb7c:	str	x9, [sp, #32]
  23cb80:	str	xzr, [sp]
  23cb84:	bl	2539f0 <log_object_internal@plt>
  23cb88:	mov	w21, w0
  23cb8c:	mov	w8, #0x1                   	// #1
  23cb90:	cbz	w8, 23ca10 <udev_rule_apply_token_to_event+0x2b28>
  23cb94:	b	23aa10 <udev_rule_apply_token_to_event+0xb28>
  23cb98:	add	x1, sp, #0x4, lsl #12
  23cb9c:	add	x1, x1, #0x50
  23cba0:	mov	x0, x22
  23cba4:	bl	253a40 <sd_device_get_sysname@plt>
  23cba8:	b	23cacc <udev_rule_apply_token_to_event+0x2be4>
  23cbac:	add	x1, sp, #0x4, lsl #12
  23cbb0:	add	x1, x1, #0x50
  23cbb4:	mov	x0, x20
  23cbb8:	bl	253a40 <sd_device_get_sysname@plt>
  23cbbc:	b	23cb14 <udev_rule_apply_token_to_event+0x2c2c>
  23cbc0:	mov	w8, #0x8                   	// #8
  23cbc4:	b	23aa10 <udev_rule_apply_token_to_event+0xb28>
  23cbc8:	mov	x24, xzr
  23cbcc:	cbz	x8, 23cbd8 <udev_rule_apply_token_to_event+0x2cf0>
  23cbd0:	ldr	x23, [x8]
  23cbd4:	b	23cbdc <udev_rule_apply_token_to_event+0x2cf4>
  23cbd8:	mov	x23, xzr
  23cbdc:	mov	w0, #0x1                   	// #1
  23cbe0:	str	xzr, [sp, #72]
  23cbe4:	bl	2535b0 <log_get_max_level_realm@plt>
  23cbe8:	cmp	w0, #0x3
  23cbec:	b.ge	23d678 <udev_rule_apply_token_to_event+0x3790>  // b.tcont
  23cbf0:	ldr	x19, [sp, #72]
  23cbf4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cbf8:	add	x8, x8, #0xb64
  23cbfc:	mov	x0, x23
  23cc00:	cmp	x19, #0x0
  23cc04:	csel	x21, xzr, x8, eq  // eq = none
  23cc08:	bl	235b80 <strna>
  23cc0c:	cbz	x24, 23cc18 <udev_rule_apply_token_to_event+0x2d30>
  23cc10:	ldr	w8, [x24, #8]
  23cc14:	b	23cc1c <udev_rule_apply_token_to_event+0x2d34>
  23cc18:	mov	w8, wzr
  23cc1c:	str	w8, [sp, #24]
  23cc20:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23cc24:	add	x8, x8, #0x148
  23cc28:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23cc2c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23cc30:	add	x9, sp, #0x50
  23cc34:	add	x2, x2, #0x63
  23cc38:	add	x4, x4, #0x86f
  23cc3c:	stp	x8, x0, [sp, #8]
  23cc40:	mov	w0, #0x3                   	// #3
  23cc44:	mov	w3, #0x7cc                 	// #1996
  23cc48:	stp	x22, x9, [sp, #32]
  23cc4c:	b	23d0dc <udev_rule_apply_token_to_event+0x31f4>
  23cc50:	mov	x23, xzr
  23cc54:	cbz	x8, 23cc60 <udev_rule_apply_token_to_event+0x2d78>
  23cc58:	ldr	x22, [x8]
  23cc5c:	b	23cc64 <udev_rule_apply_token_to_event+0x2d7c>
  23cc60:	mov	x22, xzr
  23cc64:	str	xzr, [sp, #16464]
  23cc68:	ldr	w20, [x0]
  23cc6c:	mov	w0, #0x1                   	// #1
  23cc70:	bl	2535b0 <log_get_max_level_realm@plt>
  23cc74:	cmp	w0, #0x3
  23cc78:	b.ge	23d688 <udev_rule_apply_token_to_event+0x37a0>  // b.tcont
  23cc7c:	ldr	x19, [sp, #16464]
  23cc80:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cc84:	add	x8, x8, #0xb64
  23cc88:	mov	x0, x22
  23cc8c:	cmp	x19, #0x0
  23cc90:	csel	x21, xzr, x8, eq  // eq = none
  23cc94:	bl	235b80 <strna>
  23cc98:	cbz	x23, 23cca4 <udev_rule_apply_token_to_event+0x2dbc>
  23cc9c:	ldr	w8, [x23, #8]
  23cca0:	b	23cca8 <udev_rule_apply_token_to_event+0x2dc0>
  23cca4:	mov	w8, wzr
  23cca8:	str	w8, [sp, #24]
  23ccac:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  23ccb0:	add	x9, sp, #0x4, lsl #12
  23ccb4:	add	x8, x8, #0xc2d
  23ccb8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ccbc:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23ccc0:	add	x9, x9, #0x58
  23ccc4:	add	x2, x2, #0x63
  23ccc8:	add	x4, x4, #0x86f
  23cccc:	stp	x8, x0, [sp, #8]
  23ccd0:	mov	w0, #0x3                   	// #3
  23ccd4:	mov	w3, #0x69f                 	// #1695
  23ccd8:	mov	w1, w20
  23ccdc:	mov	x5, x21
  23cce0:	mov	x6, x19
  23cce4:	mov	x7, xzr
  23cce8:	str	x9, [sp, #32]
  23ccec:	str	xzr, [sp]
  23ccf0:	bl	2539f0 <log_object_internal@plt>
  23ccf4:	mov	w21, w0
  23ccf8:	add	x0, sp, #0x50
  23ccfc:	bl	235310 <fclosep>
  23cd00:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23cd04:	ldr	x8, [x19]
  23cd08:	mov	w21, w0
  23cd0c:	cbz	x8, 23d234 <udev_rule_apply_token_to_event+0x334c>
  23cd10:	ldr	x26, [x8, #8]
  23cd14:	b	23d238 <udev_rule_apply_token_to_event+0x3350>
  23cd18:	mov	x23, xzr
  23cd1c:	cbz	x8, 23cd28 <udev_rule_apply_token_to_event+0x2e40>
  23cd20:	ldr	x22, [x8]
  23cd24:	b	23cd2c <udev_rule_apply_token_to_event+0x2e44>
  23cd28:	mov	x22, xzr
  23cd2c:	mov	w0, #0x1                   	// #1
  23cd30:	str	xzr, [sp, #16472]
  23cd34:	bl	2535b0 <log_get_max_level_realm@plt>
  23cd38:	cmp	w0, #0x3
  23cd3c:	b.ge	23d69c <udev_rule_apply_token_to_event+0x37b4>  // b.tcont
  23cd40:	ldr	x19, [sp, #16472]
  23cd44:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cd48:	add	x8, x8, #0xb64
  23cd4c:	mov	x0, x22
  23cd50:	cmp	x19, #0x0
  23cd54:	csel	x21, xzr, x8, eq  // eq = none
  23cd58:	bl	235b80 <strna>
  23cd5c:	cbz	x23, 23cd68 <udev_rule_apply_token_to_event+0x2e80>
  23cd60:	ldr	w8, [x23, #8]
  23cd64:	b	23cd6c <udev_rule_apply_token_to_event+0x2e84>
  23cd68:	mov	w8, wzr
  23cd6c:	str	w8, [sp, #24]
  23cd70:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  23cd74:	add	x8, x8, #0x66e
  23cd78:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23cd7c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23cd80:	add	x9, sp, #0x50
  23cd84:	add	x2, x2, #0x63
  23cd88:	add	x4, x4, #0x86f
  23cd8c:	stp	x8, x0, [sp, #8]
  23cd90:	mov	w0, #0x3                   	// #3
  23cd94:	mov	w3, #0x775                 	// #1909
  23cd98:	str	x9, [sp, #32]
  23cd9c:	str	xzr, [sp]
  23cda0:	mov	w1, w20
  23cda4:	mov	x5, x21
  23cda8:	b	23ce3c <udev_rule_apply_token_to_event+0x2f54>
  23cdac:	mov	x23, xzr
  23cdb0:	cbz	x8, 23cdbc <udev_rule_apply_token_to_event+0x2ed4>
  23cdb4:	ldr	x22, [x8]
  23cdb8:	b	23cdc0 <udev_rule_apply_token_to_event+0x2ed8>
  23cdbc:	mov	x22, xzr
  23cdc0:	mov	w0, #0x1                   	// #1
  23cdc4:	str	xzr, [sp, #80]
  23cdc8:	bl	2535b0 <log_get_max_level_realm@plt>
  23cdcc:	cmp	w0, #0x7
  23cdd0:	b.ge	23d6b0 <udev_rule_apply_token_to_event+0x37c8>  // b.tcont
  23cdd4:	ldr	x19, [sp, #80]
  23cdd8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cddc:	add	x8, x8, #0xb64
  23cde0:	mov	x0, x22
  23cde4:	cmp	x19, #0x0
  23cde8:	csel	x21, xzr, x8, eq  // eq = none
  23cdec:	bl	235b80 <strna>
  23cdf0:	cbz	x23, 23cdfc <udev_rule_apply_token_to_event+0x2f14>
  23cdf4:	ldr	w8, [x23, #8]
  23cdf8:	b	23ce00 <udev_rule_apply_token_to_event+0x2f18>
  23cdfc:	mov	w8, wzr
  23ce00:	ldr	x9, [x20]
  23ce04:	str	w8, [sp, #24]
  23ce08:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  23ce0c:	add	x8, x8, #0x9
  23ce10:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ce14:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23ce18:	str	x9, [sp, #32]
  23ce1c:	add	x2, x2, #0x63
  23ce20:	add	x4, x4, #0x86f
  23ce24:	stp	x8, x0, [sp, #8]
  23ce28:	mov	w0, #0x7                   	// #7
  23ce2c:	mov	w3, #0x7f9                 	// #2041
  23ce30:	str	xzr, [sp]
  23ce34:	mov	w1, wzr
  23ce38:	mov	x5, x21
  23ce3c:	mov	x6, x19
  23ce40:	mov	x7, xzr
  23ce44:	bl	2539f0 <log_object_internal@plt>
  23ce48:	mov	w21, #0x1                   	// #1
  23ce4c:	mov	w0, w21
  23ce50:	add	sp, sp, #0x4, lsl #12
  23ce54:	add	sp, sp, #0x460
  23ce58:	ldp	x20, x19, [sp, #80]
  23ce5c:	ldp	x22, x21, [sp, #64]
  23ce60:	ldp	x24, x23, [sp, #48]
  23ce64:	ldp	x26, x25, [sp, #32]
  23ce68:	ldp	x28, x27, [sp, #16]
  23ce6c:	ldp	x29, x30, [sp], #96
  23ce70:	ret
  23ce74:	mov	x24, xzr
  23ce78:	cbz	x8, 23ce84 <udev_rule_apply_token_to_event+0x2f9c>
  23ce7c:	ldr	x21, [x8]
  23ce80:	b	23ce88 <udev_rule_apply_token_to_event+0x2fa0>
  23ce84:	mov	x21, xzr
  23ce88:	mov	w0, #0x1                   	// #1
  23ce8c:	str	xzr, [sp, #72]
  23ce90:	bl	2535b0 <log_get_max_level_realm@plt>
  23ce94:	cmp	w0, #0x7
  23ce98:	b.ge	23d6d0 <udev_rule_apply_token_to_event+0x37e8>  // b.tcont
  23ce9c:	ldr	x19, [sp, #72]
  23cea0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cea4:	add	x8, x8, #0xb64
  23cea8:	mov	x0, x21
  23ceac:	cmp	x19, #0x0
  23ceb0:	csel	x20, xzr, x8, eq  // eq = none
  23ceb4:	bl	235b80 <strna>
  23ceb8:	cbz	x24, 23cec4 <udev_rule_apply_token_to_event+0x2fdc>
  23cebc:	ldr	w8, [x24, #8]
  23cec0:	b	23cec8 <udev_rule_apply_token_to_event+0x2fe0>
  23cec4:	mov	w8, wzr
  23cec8:	str	w8, [sp, #24]
  23cecc:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  23ced0:	add	x8, x8, #0x552
  23ced4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ced8:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23cedc:	add	x2, x2, #0x63
  23cee0:	add	x4, x4, #0x86f
  23cee4:	stp	x8, x0, [sp, #8]
  23cee8:	mov	w0, #0x7                   	// #7
  23ceec:	mov	w3, #0x7b2                 	// #1970
  23cef0:	mov	w1, wzr
  23cef4:	mov	x5, x20
  23cef8:	mov	x6, x19
  23cefc:	mov	x7, xzr
  23cf00:	stp	x22, x23, [sp, #32]
  23cf04:	str	xzr, [sp]
  23cf08:	bl	2539f0 <log_object_internal@plt>
  23cf0c:	mov	w19, #0x1                   	// #1
  23cf10:	str	xzr, [sp, #16464]
  23cf14:	str	xzr, [sp, #16472]
  23cf18:	b	23c4a8 <udev_rule_apply_token_to_event+0x25c0>
  23cf1c:	mov	x25, xzr
  23cf20:	cbz	x8, 23cf2c <udev_rule_apply_token_to_event+0x3044>
  23cf24:	ldr	x23, [x8]
  23cf28:	b	23cf30 <udev_rule_apply_token_to_event+0x3048>
  23cf2c:	mov	x23, xzr
  23cf30:	mov	w0, #0x1                   	// #1
  23cf34:	str	xzr, [sp, #16472]
  23cf38:	bl	2535b0 <log_get_max_level_realm@plt>
  23cf3c:	cmp	w0, #0x3
  23cf40:	b.ge	23d6e0 <udev_rule_apply_token_to_event+0x37f8>  // b.tcont
  23cf44:	ldr	x19, [sp, #16472]
  23cf48:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23cf4c:	add	x8, x8, #0xb64
  23cf50:	mov	x0, x23
  23cf54:	cmp	x19, #0x0
  23cf58:	csel	x22, xzr, x8, eq  // eq = none
  23cf5c:	bl	235b80 <strna>
  23cf60:	cbz	x25, 23cf6c <udev_rule_apply_token_to_event+0x3084>
  23cf64:	ldr	w8, [x25, #8]
  23cf68:	b	23cf70 <udev_rule_apply_token_to_event+0x3088>
  23cf6c:	mov	w8, wzr
  23cf70:	ldr	x9, [sp, #80]
  23cf74:	ldr	x10, [x20, #8]
  23cf78:	str	w8, [sp, #24]
  23cf7c:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23cf80:	cmp	x9, #0x0
  23cf84:	csel	x9, x24, x9, eq  // eq = none
  23cf88:	add	x8, x8, #0x148
  23cf8c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23cf90:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23cf94:	stp	x10, x9, [sp, #32]
  23cf98:	add	x2, x2, #0x63
  23cf9c:	add	x4, x4, #0x86f
  23cfa0:	stp	x8, x0, [sp, #8]
  23cfa4:	mov	w0, #0x3                   	// #3
  23cfa8:	mov	w3, #0x726                 	// #1830
  23cfac:	mov	w1, w21
  23cfb0:	mov	x5, x22
  23cfb4:	str	xzr, [sp]
  23cfb8:	mov	x6, x19
  23cfbc:	mov	x7, xzr
  23cfc0:	bl	2539f0 <log_object_internal@plt>
  23cfc4:	mov	w21, w0
  23cfc8:	add	x0, sp, #0x50
  23cfcc:	bl	2352f8 <freep>
  23cfd0:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23cfd4:	mov	x24, xzr
  23cfd8:	cbz	x8, 23cfe4 <udev_rule_apply_token_to_event+0x30fc>
  23cfdc:	ldr	x23, [x8]
  23cfe0:	b	23cfe8 <udev_rule_apply_token_to_event+0x3100>
  23cfe4:	mov	x23, xzr
  23cfe8:	mov	w0, #0x1                   	// #1
  23cfec:	str	xzr, [sp, #80]
  23cff0:	bl	2535b0 <log_get_max_level_realm@plt>
  23cff4:	cmp	w0, #0x3
  23cff8:	b.ge	23d6f4 <udev_rule_apply_token_to_event+0x380c>  // b.tcont
  23cffc:	ldr	x19, [sp, #80]
  23d000:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23d004:	add	x8, x8, #0xb64
  23d008:	mov	x0, x23
  23d00c:	cmp	x19, #0x0
  23d010:	csel	x22, xzr, x8, eq  // eq = none
  23d014:	bl	235b80 <strna>
  23d018:	cbz	x24, 23d024 <udev_rule_apply_token_to_event+0x313c>
  23d01c:	ldr	w8, [x24, #8]
  23d020:	b	23d028 <udev_rule_apply_token_to_event+0x3140>
  23d024:	mov	w8, wzr
  23d028:	ldr	x9, [x20, #8]
  23d02c:	str	w8, [sp, #24]
  23d030:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  23d034:	add	x8, x8, #0xd9e
  23d038:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d03c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23d040:	add	x2, x2, #0x63
  23d044:	add	x4, x4, #0x86f
  23d048:	stp	x8, x0, [sp, #8]
  23d04c:	mov	w0, #0x3                   	// #3
  23d050:	mov	w3, #0x710                 	// #1808
  23d054:	str	x9, [sp, #32]
  23d058:	b	23d18c <udev_rule_apply_token_to_event+0x32a4>
  23d05c:	mov	x24, xzr
  23d060:	cbz	x8, 23d06c <udev_rule_apply_token_to_event+0x3184>
  23d064:	ldr	x23, [x8]
  23d068:	b	23d070 <udev_rule_apply_token_to_event+0x3188>
  23d06c:	mov	x23, xzr
  23d070:	mov	w0, #0x1                   	// #1
  23d074:	str	xzr, [sp, #16464]
  23d078:	bl	2535b0 <log_get_max_level_realm@plt>
  23d07c:	cmp	w0, #0x3
  23d080:	b.ge	23d704 <udev_rule_apply_token_to_event+0x381c>  // b.tcont
  23d084:	ldr	x19, [sp, #16464]
  23d088:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23d08c:	add	x8, x8, #0xb64
  23d090:	mov	x0, x23
  23d094:	cmp	x19, #0x0
  23d098:	csel	x21, xzr, x8, eq  // eq = none
  23d09c:	bl	235b80 <strna>
  23d0a0:	cbz	x24, 23d0ac <udev_rule_apply_token_to_event+0x31c4>
  23d0a4:	ldr	w8, [x24, #8]
  23d0a8:	b	23d0b0 <udev_rule_apply_token_to_event+0x31c8>
  23d0ac:	mov	w8, wzr
  23d0b0:	str	w8, [sp, #24]
  23d0b4:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  23d0b8:	add	x8, x8, #0xba9
  23d0bc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d0c0:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23d0c4:	str	x22, [sp, #32]
  23d0c8:	add	x2, x2, #0x63
  23d0cc:	add	x4, x4, #0x86f
  23d0d0:	stp	x8, x0, [sp, #8]
  23d0d4:	mov	w0, #0x3                   	// #3
  23d0d8:	mov	w3, #0x7c0                 	// #1984
  23d0dc:	mov	w1, w20
  23d0e0:	mov	x5, x21
  23d0e4:	mov	x6, x19
  23d0e8:	mov	x7, xzr
  23d0ec:	str	xzr, [sp]
  23d0f0:	bl	2539f0 <log_object_internal@plt>
  23d0f4:	mov	w21, w0
  23d0f8:	mov	w8, wzr
  23d0fc:	tbnz	wzr, #0, 23ce48 <udev_rule_apply_token_to_event+0x2f60>
  23d100:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23d104:	mov	x24, xzr
  23d108:	cbz	x8, 23d114 <udev_rule_apply_token_to_event+0x322c>
  23d10c:	ldr	x23, [x8]
  23d110:	b	23d118 <udev_rule_apply_token_to_event+0x3230>
  23d114:	mov	x23, xzr
  23d118:	mov	w0, #0x1                   	// #1
  23d11c:	str	xzr, [sp, #80]
  23d120:	bl	2535b0 <log_get_max_level_realm@plt>
  23d124:	cmp	w0, #0x3
  23d128:	b.ge	23d718 <udev_rule_apply_token_to_event+0x3830>  // b.tcont
  23d12c:	ldr	x19, [sp, #80]
  23d130:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23d134:	add	x8, x8, #0xb64
  23d138:	mov	x0, x23
  23d13c:	cmp	x19, #0x0
  23d140:	csel	x22, xzr, x8, eq  // eq = none
  23d144:	bl	235b80 <strna>
  23d148:	cbz	x24, 23d154 <udev_rule_apply_token_to_event+0x326c>
  23d14c:	ldr	w8, [x24, #8]
  23d150:	b	23d158 <udev_rule_apply_token_to_event+0x3270>
  23d154:	mov	w8, wzr
  23d158:	ldr	x9, [x20, #8]
  23d15c:	ldr	x10, [sp, #16464]
  23d160:	str	w8, [sp, #24]
  23d164:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23d168:	add	x8, x8, #0x148
  23d16c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d170:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23d174:	stp	x9, x10, [sp, #32]
  23d178:	add	x2, x2, #0x63
  23d17c:	add	x4, x4, #0x86f
  23d180:	stp	x8, x0, [sp, #8]
  23d184:	mov	w0, #0x3                   	// #3
  23d188:	mov	w3, #0x715                 	// #1813
  23d18c:	str	xzr, [sp]
  23d190:	mov	w1, w21
  23d194:	mov	x5, x22
  23d198:	b	23d3f8 <udev_rule_apply_token_to_event+0x3510>
  23d19c:	mov	x23, xzr
  23d1a0:	cbz	x8, 23d1ac <udev_rule_apply_token_to_event+0x32c4>
  23d1a4:	ldr	x22, [x8]
  23d1a8:	b	23d1b0 <udev_rule_apply_token_to_event+0x32c8>
  23d1ac:	mov	x22, xzr
  23d1b0:	mov	w0, #0x1                   	// #1
  23d1b4:	str	xzr, [sp, #80]
  23d1b8:	bl	2535b0 <log_get_max_level_realm@plt>
  23d1bc:	cmp	w0, #0x3
  23d1c0:	b.ge	23d728 <udev_rule_apply_token_to_event+0x3840>  // b.tcont
  23d1c4:	ldr	x19, [sp, #80]
  23d1c8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23d1cc:	add	x8, x8, #0xb64
  23d1d0:	mov	x0, x22
  23d1d4:	cmp	x19, #0x0
  23d1d8:	csel	x21, xzr, x8, eq  // eq = none
  23d1dc:	bl	235b80 <strna>
  23d1e0:	cbz	x23, 23d1ec <udev_rule_apply_token_to_event+0x3304>
  23d1e4:	ldr	w8, [x23, #8]
  23d1e8:	b	23d1f0 <udev_rule_apply_token_to_event+0x3308>
  23d1ec:	mov	w8, wzr
  23d1f0:	add	x9, sp, #0x4, lsl #12
  23d1f4:	str	w8, [sp, #24]
  23d1f8:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23d1fc:	add	x9, x9, #0x58
  23d200:	add	x8, x8, #0x1a2
  23d204:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d208:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23d20c:	add	x2, x2, #0x63
  23d210:	add	x4, x4, #0x86f
  23d214:	str	x9, [sp, #32]
  23d218:	stp	x8, x0, [sp, #8]
  23d21c:	mov	w0, #0x3                   	// #3
  23d220:	mov	w3, #0x7dd                 	// #2013
  23d224:	str	xzr, [sp]
  23d228:	mov	w1, w20
  23d22c:	mov	x5, x21
  23d230:	b	23d3f8 <udev_rule_apply_token_to_event+0x3510>
  23d234:	mov	x26, xzr
  23d238:	cbz	x8, 23d244 <udev_rule_apply_token_to_event+0x335c>
  23d23c:	ldr	x24, [x8]
  23d240:	b	23d248 <udev_rule_apply_token_to_event+0x3360>
  23d244:	mov	x24, xzr
  23d248:	mov	w0, #0x1                   	// #1
  23d24c:	str	xzr, [sp, #80]
  23d250:	bl	2535b0 <log_get_max_level_realm@plt>
  23d254:	cmp	w0, #0x3
  23d258:	b.ge	23d738 <udev_rule_apply_token_to_event+0x3850>  // b.tcont
  23d25c:	ldr	x22, [sp, #80]
  23d260:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23d264:	add	x8, x8, #0xb64
  23d268:	mov	x0, x24
  23d26c:	cmp	x22, #0x0
  23d270:	csel	x23, xzr, x8, eq  // eq = none
  23d274:	bl	235b80 <strna>
  23d278:	cbz	x26, 23d284 <udev_rule_apply_token_to_event+0x339c>
  23d27c:	ldr	w8, [x26, #8]
  23d280:	b	23d288 <udev_rule_apply_token_to_event+0x33a0>
  23d284:	mov	w8, wzr
  23d288:	str	w8, [sp, #24]
  23d28c:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  23d290:	add	x8, x8, #0x67d
  23d294:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d298:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23d29c:	add	x2, x2, #0x63
  23d2a0:	add	x4, x4, #0x86f
  23d2a4:	stp	x8, x0, [sp, #8]
  23d2a8:	mov	w0, #0x3                   	// #3
  23d2ac:	mov	w3, #0x667                 	// #1639
  23d2b0:	mov	w1, w21
  23d2b4:	mov	x5, x23
  23d2b8:	mov	x6, x22
  23d2bc:	mov	x7, xzr
  23d2c0:	str	xzr, [sp]
  23d2c4:	bl	2539f0 <log_object_internal@plt>
  23d2c8:	mov	w21, w0
  23d2cc:	mov	w8, wzr
  23d2d0:	cbz	w8, 23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23d2d4:	add	x0, sp, #0x4, lsl #12
  23d2d8:	add	x0, x0, #0x58
  23d2dc:	bl	23db80 <attr_subst_subdir>
  23d2e0:	cmn	w0, #0x2
  23d2e4:	b.ne	23d2fc <udev_rule_apply_token_to_event+0x3414>  // b.any
  23d2e8:	ldrb	w8, [x20, #1]
  23d2ec:	lsl	w8, w8, #8
  23d2f0:	cmp	w8, #0x100
  23d2f4:	cset	w21, eq  // eq = none
  23d2f8:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23d2fc:	mov	w21, w0
  23d300:	tbnz	w0, #31, 23d354 <udev_rule_apply_token_to_event+0x346c>
  23d304:	add	x0, sp, #0x4, lsl #12
  23d308:	add	x0, x0, #0x58
  23d30c:	add	x1, sp, #0x50
  23d310:	bl	253478 <stat64>
  23d314:	tbnz	w0, #31, 23d2e8 <udev_rule_apply_token_to_event+0x3400>
  23d318:	cbz	w25, 23d344 <udev_rule_apply_token_to_event+0x345c>
  23d31c:	ldr	w8, [sp, #96]
  23d320:	ldr	w10, [x20]
  23d324:	add	w9, w25, #0xfff
  23d328:	eor	w8, w8, w9
  23d32c:	tst	w8, #0xfff
  23d330:	cset	w8, ne  // ne = any
  23d334:	lsl	w9, w10, #16
  23d338:	cmp	w8, w9, asr #24
  23d33c:	cset	w21, eq  // eq = none
  23d340:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23d344:	ldrb	w8, [x20, #1]
  23d348:	cmp	w8, #0x0
  23d34c:	cset	w21, eq  // eq = none
  23d350:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23d354:	ldr	x8, [x19]
  23d358:	cbz	x8, 23d364 <udev_rule_apply_token_to_event+0x347c>
  23d35c:	ldr	x23, [x8, #8]
  23d360:	b	23d368 <udev_rule_apply_token_to_event+0x3480>
  23d364:	mov	x23, xzr
  23d368:	cbz	x8, 23d374 <udev_rule_apply_token_to_event+0x348c>
  23d36c:	ldr	x22, [x8]
  23d370:	b	23d378 <udev_rule_apply_token_to_event+0x3490>
  23d374:	mov	x22, xzr
  23d378:	mov	w0, #0x1                   	// #1
  23d37c:	str	xzr, [sp, #80]
  23d380:	bl	2535b0 <log_get_max_level_realm@plt>
  23d384:	cmp	w0, #0x3
  23d388:	b.ge	23d6c0 <udev_rule_apply_token_to_event+0x37d8>  // b.tcont
  23d38c:	ldr	x19, [sp, #80]
  23d390:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23d394:	add	x8, x8, #0xb64
  23d398:	mov	x0, x22
  23d39c:	cmp	x19, #0x0
  23d3a0:	csel	x20, xzr, x8, eq  // eq = none
  23d3a4:	bl	235b80 <strna>
  23d3a8:	cbz	x23, 23d3b4 <udev_rule_apply_token_to_event+0x34cc>
  23d3ac:	ldr	w8, [x23, #8]
  23d3b0:	b	23d3b8 <udev_rule_apply_token_to_event+0x34d0>
  23d3b4:	mov	w8, wzr
  23d3b8:	add	x9, sp, #0x4, lsl #12
  23d3bc:	str	w8, [sp, #24]
  23d3c0:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  23d3c4:	add	x9, x9, #0x58
  23d3c8:	add	x8, x8, #0x350
  23d3cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d3d0:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23d3d4:	add	x2, x2, #0x63
  23d3d8:	add	x4, x4, #0x86f
  23d3dc:	str	x9, [sp, #32]
  23d3e0:	stp	x8, x0, [sp, #8]
  23d3e4:	mov	w0, #0x3                   	// #3
  23d3e8:	mov	w3, #0x671                 	// #1649
  23d3ec:	mov	w1, w21
  23d3f0:	mov	x5, x20
  23d3f4:	str	xzr, [sp]
  23d3f8:	mov	x6, x19
  23d3fc:	mov	x7, xzr
  23d400:	bl	2539f0 <log_object_internal@plt>
  23d404:	mov	w21, w0
  23d408:	b	23ce4c <udev_rule_apply_token_to_event+0x2f64>
  23d40c:	add	x1, sp, #0x4, lsl #12
  23d410:	add	x1, x1, #0x50
  23d414:	mov	x0, x28
  23d418:	bl	253a40 <sd_device_get_sysname@plt>
  23d41c:	b	23aad0 <udev_rule_apply_token_to_event+0xbe8>
  23d420:	add	x1, sp, #0x4, lsl #12
  23d424:	add	x1, x1, #0x50
  23d428:	mov	x0, x28
  23d42c:	bl	253a40 <sd_device_get_sysname@plt>
  23d430:	b	23ab9c <udev_rule_apply_token_to_event+0xcb4>
  23d434:	add	x1, sp, #0x50
  23d438:	mov	x0, x28
  23d43c:	bl	253a40 <sd_device_get_sysname@plt>
  23d440:	b	23ac8c <udev_rule_apply_token_to_event+0xda4>
  23d444:	add	x1, sp, #0x4, lsl #12
  23d448:	add	x1, x1, #0x50
  23d44c:	mov	x0, x28
  23d450:	bl	253a40 <sd_device_get_sysname@plt>
  23d454:	b	23ada8 <udev_rule_apply_token_to_event+0xec0>
  23d458:	add	x1, sp, #0x50
  23d45c:	mov	x0, x28
  23d460:	bl	253a40 <sd_device_get_sysname@plt>
  23d464:	b	23b2e4 <udev_rule_apply_token_to_event+0x13fc>
  23d468:	add	x1, sp, #0x50
  23d46c:	mov	x0, x27
  23d470:	bl	253a40 <sd_device_get_sysname@plt>
  23d474:	b	23b764 <udev_rule_apply_token_to_event+0x187c>
  23d478:	add	x1, sp, #0x50
  23d47c:	mov	x0, x28
  23d480:	bl	253a40 <sd_device_get_sysname@plt>
  23d484:	b	23b3ac <udev_rule_apply_token_to_event+0x14c4>
  23d488:	add	x1, sp, #0x48
  23d48c:	mov	x0, x28
  23d490:	bl	253a40 <sd_device_get_sysname@plt>
  23d494:	b	23b438 <udev_rule_apply_token_to_event+0x1550>
  23d498:	add	x1, sp, #0x4, lsl #12
  23d49c:	add	x1, x1, #0x50
  23d4a0:	mov	x0, x28
  23d4a4:	bl	253a40 <sd_device_get_sysname@plt>
  23d4a8:	b	23b878 <udev_rule_apply_token_to_event+0x1990>
  23d4ac:	add	x1, sp, #0x4, lsl #12
  23d4b0:	add	x1, x1, #0x50
  23d4b4:	mov	x0, x28
  23d4b8:	bl	253a40 <sd_device_get_sysname@plt>
  23d4bc:	b	23b968 <udev_rule_apply_token_to_event+0x1a80>
  23d4c0:	add	x1, sp, #0x4, lsl #12
  23d4c4:	add	x1, x1, #0x50
  23d4c8:	mov	x0, x28
  23d4cc:	bl	253a40 <sd_device_get_sysname@plt>
  23d4d0:	b	23ba04 <udev_rule_apply_token_to_event+0x1b1c>
  23d4d4:	add	x1, sp, #0x50
  23d4d8:	mov	x0, x28
  23d4dc:	bl	253a40 <sd_device_get_sysname@plt>
  23d4e0:	b	23bac4 <udev_rule_apply_token_to_event+0x1bdc>
  23d4e4:	add	x1, sp, #0x50
  23d4e8:	mov	x0, x28
  23d4ec:	bl	253a40 <sd_device_get_sysname@plt>
  23d4f0:	b	23bb44 <udev_rule_apply_token_to_event+0x1c5c>
  23d4f4:	add	x1, sp, #0x50
  23d4f8:	mov	x0, x28
  23d4fc:	bl	253a40 <sd_device_get_sysname@plt>
  23d500:	b	23bbd4 <udev_rule_apply_token_to_event+0x1cec>
  23d504:	add	x1, sp, #0x4, lsl #12
  23d508:	add	x1, x1, #0x50
  23d50c:	mov	x0, x28
  23d510:	bl	253a40 <sd_device_get_sysname@plt>
  23d514:	b	23bc14 <udev_rule_apply_token_to_event+0x1d2c>
  23d518:	add	x1, sp, #0x4, lsl #12
  23d51c:	add	x1, x1, #0x58
  23d520:	mov	x0, x28
  23d524:	bl	253a40 <sd_device_get_sysname@plt>
  23d528:	b	23bcd8 <udev_rule_apply_token_to_event+0x1df0>
  23d52c:	add	x1, sp, #0x50
  23d530:	mov	x0, x28
  23d534:	bl	253a40 <sd_device_get_sysname@plt>
  23d538:	b	23bd70 <udev_rule_apply_token_to_event+0x1e88>
  23d53c:	add	x1, sp, #0x50
  23d540:	mov	x0, x28
  23d544:	bl	253a40 <sd_device_get_sysname@plt>
  23d548:	b	23bdb0 <udev_rule_apply_token_to_event+0x1ec8>
  23d54c:	add	x1, sp, #0x50
  23d550:	mov	x0, x28
  23d554:	bl	253a40 <sd_device_get_sysname@plt>
  23d558:	b	23be60 <udev_rule_apply_token_to_event+0x1f78>
  23d55c:	add	x1, sp, #0x4, lsl #12
  23d560:	add	x1, x1, #0x50
  23d564:	mov	x0, x28
  23d568:	bl	253a40 <sd_device_get_sysname@plt>
  23d56c:	b	23bef4 <udev_rule_apply_token_to_event+0x200c>
  23d570:	add	x1, sp, #0x50
  23d574:	mov	x0, x28
  23d578:	bl	253a40 <sd_device_get_sysname@plt>
  23d57c:	b	23bf84 <udev_rule_apply_token_to_event+0x209c>
  23d580:	add	x1, sp, #0x4, lsl #12
  23d584:	add	x1, x1, #0x50
  23d588:	mov	x0, x28
  23d58c:	bl	253a40 <sd_device_get_sysname@plt>
  23d590:	b	23c040 <udev_rule_apply_token_to_event+0x2158>
  23d594:	add	x1, sp, #0x50
  23d598:	mov	x0, x28
  23d59c:	bl	253a40 <sd_device_get_sysname@plt>
  23d5a0:	b	23c0dc <udev_rule_apply_token_to_event+0x21f4>
  23d5a4:	add	x1, sp, #0x4, lsl #12
  23d5a8:	add	x1, x1, #0x58
  23d5ac:	mov	x0, x28
  23d5b0:	bl	253a40 <sd_device_get_sysname@plt>
  23d5b4:	b	23c174 <udev_rule_apply_token_to_event+0x228c>
  23d5b8:	add	x1, sp, #0x50
  23d5bc:	mov	x0, x28
  23d5c0:	bl	253a40 <sd_device_get_sysname@plt>
  23d5c4:	b	23c1b4 <udev_rule_apply_token_to_event+0x22cc>
  23d5c8:	add	x1, sp, #0x50
  23d5cc:	mov	x0, x28
  23d5d0:	bl	253a40 <sd_device_get_sysname@plt>
  23d5d4:	b	23c274 <udev_rule_apply_token_to_event+0x238c>
  23d5d8:	add	x1, sp, #0x4, lsl #12
  23d5dc:	add	x1, x1, #0x50
  23d5e0:	mov	x0, x28
  23d5e4:	bl	253a40 <sd_device_get_sysname@plt>
  23d5e8:	b	23c308 <udev_rule_apply_token_to_event+0x2420>
  23d5ec:	add	x1, sp, #0x50
  23d5f0:	mov	x0, x27
  23d5f4:	bl	253a40 <sd_device_get_sysname@plt>
  23d5f8:	b	23c3f4 <udev_rule_apply_token_to_event+0x250c>
  23d5fc:	add	x1, sp, #0x4, lsl #12
  23d600:	add	x1, x1, #0x50
  23d604:	mov	x0, x28
  23d608:	bl	253a40 <sd_device_get_sysname@plt>
  23d60c:	b	23c4f0 <udev_rule_apply_token_to_event+0x2608>
  23d610:	add	x1, sp, #0x4, lsl #12
  23d614:	add	x1, x1, #0x50
  23d618:	mov	x0, x28
  23d61c:	bl	253a40 <sd_device_get_sysname@plt>
  23d620:	b	23c598 <udev_rule_apply_token_to_event+0x26b0>
  23d624:	add	x1, sp, #0x4, lsl #12
  23d628:	add	x1, x1, #0x50
  23d62c:	mov	x0, x28
  23d630:	bl	253a40 <sd_device_get_sysname@plt>
  23d634:	b	23c5d0 <udev_rule_apply_token_to_event+0x26e8>
  23d638:	add	x1, sp, #0x48
  23d63c:	mov	x0, x28
  23d640:	bl	253a40 <sd_device_get_sysname@plt>
  23d644:	b	23c6e0 <udev_rule_apply_token_to_event+0x27f8>
  23d648:	add	x1, sp, #0x50
  23d64c:	mov	x0, x28
  23d650:	bl	253a40 <sd_device_get_sysname@plt>
  23d654:	b	23c8a4 <udev_rule_apply_token_to_event+0x29bc>
  23d658:	add	x1, sp, #0x50
  23d65c:	mov	x0, x28
  23d660:	bl	253a40 <sd_device_get_sysname@plt>
  23d664:	b	23c764 <udev_rule_apply_token_to_event+0x287c>
  23d668:	add	x1, sp, #0x50
  23d66c:	mov	x0, x28
  23d670:	bl	253a40 <sd_device_get_sysname@plt>
  23d674:	b	23c92c <udev_rule_apply_token_to_event+0x2a44>
  23d678:	add	x1, sp, #0x48
  23d67c:	mov	x0, x28
  23d680:	bl	253a40 <sd_device_get_sysname@plt>
  23d684:	b	23cbf0 <udev_rule_apply_token_to_event+0x2d08>
  23d688:	add	x1, sp, #0x4, lsl #12
  23d68c:	add	x1, x1, #0x50
  23d690:	mov	x0, x28
  23d694:	bl	253a40 <sd_device_get_sysname@plt>
  23d698:	b	23cc7c <udev_rule_apply_token_to_event+0x2d94>
  23d69c:	add	x1, sp, #0x4, lsl #12
  23d6a0:	add	x1, x1, #0x58
  23d6a4:	mov	x0, x28
  23d6a8:	bl	253a40 <sd_device_get_sysname@plt>
  23d6ac:	b	23cd40 <udev_rule_apply_token_to_event+0x2e58>
  23d6b0:	add	x1, sp, #0x50
  23d6b4:	mov	x0, x28
  23d6b8:	bl	253a40 <sd_device_get_sysname@plt>
  23d6bc:	b	23cdd4 <udev_rule_apply_token_to_event+0x2eec>
  23d6c0:	add	x1, sp, #0x50
  23d6c4:	mov	x0, x28
  23d6c8:	bl	253a40 <sd_device_get_sysname@plt>
  23d6cc:	b	23d38c <udev_rule_apply_token_to_event+0x34a4>
  23d6d0:	add	x1, sp, #0x48
  23d6d4:	mov	x0, x28
  23d6d8:	bl	253a40 <sd_device_get_sysname@plt>
  23d6dc:	b	23ce9c <udev_rule_apply_token_to_event+0x2fb4>
  23d6e0:	add	x1, sp, #0x4, lsl #12
  23d6e4:	add	x1, x1, #0x58
  23d6e8:	mov	x0, x28
  23d6ec:	bl	253a40 <sd_device_get_sysname@plt>
  23d6f0:	b	23cf44 <udev_rule_apply_token_to_event+0x305c>
  23d6f4:	add	x1, sp, #0x50
  23d6f8:	mov	x0, x28
  23d6fc:	bl	253a40 <sd_device_get_sysname@plt>
  23d700:	b	23cffc <udev_rule_apply_token_to_event+0x3114>
  23d704:	add	x1, sp, #0x4, lsl #12
  23d708:	add	x1, x1, #0x50
  23d70c:	mov	x0, x28
  23d710:	bl	253a40 <sd_device_get_sysname@plt>
  23d714:	b	23d084 <udev_rule_apply_token_to_event+0x319c>
  23d718:	add	x1, sp, #0x50
  23d71c:	mov	x0, x28
  23d720:	bl	253a40 <sd_device_get_sysname@plt>
  23d724:	b	23d12c <udev_rule_apply_token_to_event+0x3244>
  23d728:	add	x1, sp, #0x50
  23d72c:	mov	x0, x28
  23d730:	bl	253a40 <sd_device_get_sysname@plt>
  23d734:	b	23d1c4 <udev_rule_apply_token_to_event+0x32dc>
  23d738:	add	x1, sp, #0x50
  23d73c:	mov	x0, x28
  23d740:	bl	253a40 <sd_device_get_sysname@plt>
  23d744:	b	23d25c <udev_rule_apply_token_to_event+0x3374>
  23d748:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  23d74c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d750:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23d754:	add	x1, x1, #0x5c9
  23d758:	add	x2, x2, #0x63
  23d75c:	add	x4, x4, #0xfac
  23d760:	mov	w0, #0x1                   	// #1
  23d764:	mov	w3, #0x5fe                 	// #1534
  23d768:	bl	253740 <log_assert_failed_realm@plt>
  23d76c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23d770:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d774:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23d778:	add	x1, x1, #0x9e6
  23d77c:	add	x2, x2, #0x63
  23d780:	add	x4, x4, #0xfac
  23d784:	mov	w0, #0x1                   	// #1
  23d788:	mov	w3, #0x5ff                 	// #1535
  23d78c:	bl	253740 <log_assert_failed_realm@plt>
  23d790:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  23d794:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d798:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23d79c:	add	x1, x1, #0xc4f
  23d7a0:	add	x2, x2, #0x63
  23d7a4:	add	x4, x4, #0xfac
  23d7a8:	mov	w0, #0x1                   	// #1
  23d7ac:	mov	w3, #0x600                 	// #1536
  23d7b0:	bl	253740 <log_assert_failed_realm@plt>
  23d7b4:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23d7b8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d7bc:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23d7c0:	add	x1, x1, #0x1c1
  23d7c4:	add	x2, x2, #0x63
  23d7c8:	add	x4, x4, #0xfac
  23d7cc:	mov	w0, #0x1                   	// #1
  23d7d0:	mov	w3, #0x86b                 	// #2155
  23d7d4:	bl	253730 <log_assert_failed_unreachable_realm@plt>
  23d7d8:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  23d7dc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d7e0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23d7e4:	add	x1, x1, #0x281
  23d7e8:	add	x2, x2, #0x63
  23d7ec:	add	x4, x4, #0xfac
  23d7f0:	mov	w0, #0x1                   	// #1
  23d7f4:	mov	w3, #0x634                 	// #1588
  23d7f8:	bl	253730 <log_assert_failed_unreachable_realm@plt>

000000000023d7fc <token_match_string>:
  23d7fc:	stp	x29, x30, [sp, #-48]!
  23d800:	str	x21, [sp, #16]
  23d804:	stp	x20, x19, [sp, #32]
  23d808:	mov	x29, sp
  23d80c:	cbz	x0, 23d944 <token_match_string+0x148>
  23d810:	ldr	x21, [x0, #8]
  23d814:	mov	x19, x0
  23d818:	cbz	x21, 23d968 <token_match_string+0x16c>
  23d81c:	ldr	w20, [x19]
  23d820:	mov	w8, #0x1a000000            	// #436207616
  23d824:	cmp	w8, w20, lsl #24
  23d828:	b.le	23d98c <token_match_string+0x190>
  23d82c:	mov	x0, x1
  23d830:	bl	23d9d4 <strempty>
  23d834:	sbfx	w8, w20, #16, #8
  23d838:	cmp	w8, #0x5
  23d83c:	b.hi	23d9b0 <token_match_string+0x1b4>  // b.pmore
  23d840:	adrp	x9, 218000 <worker_hash_op+0xdad0>
  23d844:	add	x9, x9, #0xa4c
  23d848:	adr	x10, 23d85c <token_match_string+0x60>
  23d84c:	ldrb	w11, [x9, x8]
  23d850:	add	x10, x10, x11, lsl #2
  23d854:	mov	x20, x0
  23d858:	br	x10
  23d85c:	mov	x0, x20
  23d860:	bl	2358dc <isempty>
  23d864:	mvn	w8, w0
  23d868:	and	w8, w8, #0x1
  23d86c:	b	23d924 <token_match_string+0x128>
  23d870:	mov	x0, x20
  23d874:	bl	2358dc <isempty>
  23d878:	tbnz	w0, #0, 23d8bc <token_match_string+0xc0>
  23d87c:	ldrb	w8, [x21]
  23d880:	cbz	w8, 23d920 <token_match_string+0x124>
  23d884:	mov	x0, x21
  23d888:	mov	x1, x20
  23d88c:	mov	w2, wzr
  23d890:	bl	254680 <fnmatch@plt>
  23d894:	cbz	w0, 23d8bc <token_match_string+0xc0>
  23d898:	mov	x0, x21
  23d89c:	bl	2539a0 <strlen@plt>
  23d8a0:	adds	x8, x21, #0x1
  23d8a4:	add	x21, x8, x0
  23d8a8:	b.ne	23d87c <token_match_string+0x80>  // b.any
  23d8ac:	b	23d920 <token_match_string+0x124>
  23d8b0:	mov	x0, x20
  23d8b4:	bl	2358dc <isempty>
  23d8b8:	tbz	w0, #0, 23d8c4 <token_match_string+0xc8>
  23d8bc:	mov	w8, wzr
  23d8c0:	b	23d924 <token_match_string+0x128>
  23d8c4:	ldrb	w8, [x21]
  23d8c8:	cbz	w8, 23d920 <token_match_string+0x124>
  23d8cc:	mov	x0, x21
  23d8d0:	mov	x1, x20
  23d8d4:	bl	253bc0 <strcmp@plt>
  23d8d8:	cbz	w0, 23d8bc <token_match_string+0xc0>
  23d8dc:	mov	x0, x21
  23d8e0:	bl	2539a0 <strlen@plt>
  23d8e4:	adds	x8, x21, #0x1
  23d8e8:	add	x21, x8, x0
  23d8ec:	b.ne	23d8c4 <token_match_string+0xc8>  // b.any
  23d8f0:	b	23d920 <token_match_string+0x124>
  23d8f4:	adrp	x21, 218000 <worker_hash_op+0xdad0>
  23d8f8:	add	x21, x21, #0xa52
  23d8fc:	mov	x0, x21
  23d900:	mov	x1, x20
  23d904:	bl	253bc0 <strcmp@plt>
  23d908:	cbz	w0, 23d8bc <token_match_string+0xc0>
  23d90c:	mov	x0, x21
  23d910:	bl	2539a0 <strlen@plt>
  23d914:	add	x21, x21, x0
  23d918:	ldrb	w8, [x21, #1]!
  23d91c:	cbnz	w8, 23d8fc <token_match_string+0x100>
  23d920:	mov	w8, #0x1                   	// #1
  23d924:	ldr	w9, [x19]
  23d928:	ldp	x20, x19, [sp, #32]
  23d92c:	ldr	x21, [sp, #16]
  23d930:	lsl	w9, w9, #16
  23d934:	cmp	w8, w9, asr #24
  23d938:	cset	w0, eq  // eq = none
  23d93c:	ldp	x29, x30, [sp], #48
  23d940:	ret
  23d944:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  23d948:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d94c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23d950:	add	x1, x1, #0xd63
  23d954:	add	x2, x2, #0x63
  23d958:	add	x4, x4, #0x726
  23d95c:	mov	w0, #0x1                   	// #1
  23d960:	mov	w3, #0x527                 	// #1319
  23d964:	bl	253740 <log_assert_failed_realm@plt>
  23d968:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  23d96c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d970:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23d974:	add	x1, x1, #0x256
  23d978:	add	x2, x2, #0x63
  23d97c:	add	x4, x4, #0x726
  23d980:	mov	w0, #0x1                   	// #1
  23d984:	mov	w3, #0x528                 	// #1320
  23d988:	bl	253740 <log_assert_failed_realm@plt>
  23d98c:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  23d990:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d994:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23d998:	add	x1, x1, #0xbd5
  23d99c:	add	x2, x2, #0x63
  23d9a0:	add	x4, x4, #0x726
  23d9a4:	mov	w0, #0x1                   	// #1
  23d9a8:	mov	w3, #0x529                 	// #1321
  23d9ac:	bl	253740 <log_assert_failed_realm@plt>
  23d9b0:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  23d9b4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23d9b8:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23d9bc:	add	x1, x1, #0x75e
  23d9c0:	add	x2, x2, #0x63
  23d9c4:	add	x4, x4, #0x726
  23d9c8:	mov	w0, #0x1                   	// #1
  23d9cc:	mov	w3, #0x554                 	// #1364
  23d9d0:	bl	253730 <log_assert_failed_unreachable_realm@plt>

000000000023d9d4 <strempty>:
  23d9d4:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23d9d8:	add	x8, x8, #0x7fa
  23d9dc:	cmp	x0, #0x0
  23d9e0:	csel	x0, x8, x0, eq  // eq = none
  23d9e4:	ret

000000000023d9e8 <token_match_attr>:
  23d9e8:	stp	x29, x30, [sp, #-48]!
  23d9ec:	str	x28, [sp, #16]
  23d9f0:	stp	x20, x19, [sp, #32]
  23d9f4:	mov	x29, sp
  23d9f8:	sub	sp, sp, #0x400
  23d9fc:	cbz	x0, 23daf0 <token_match_attr+0x108>
  23da00:	mov	x20, x1
  23da04:	cbz	x1, 23db14 <token_match_attr+0x12c>
  23da08:	mov	x9, x2
  23da0c:	cbz	x2, 23db38 <token_match_attr+0x150>
  23da10:	ldr	w10, [x0]
  23da14:	ldr	x8, [x0, #16]
  23da18:	mov	x19, x0
  23da1c:	sbfx	w10, w10, #24, #7
  23da20:	cbz	w10, 23da50 <token_match_attr+0x68>
  23da24:	cmp	w10, #0x2
  23da28:	b.eq	23da70 <token_match_attr+0x88>  // b.none
  23da2c:	cmp	w10, #0x1
  23da30:	b.ne	23db5c <token_match_attr+0x174>  // b.any
  23da34:	add	x2, sp, #0x200
  23da38:	mov	w3, #0x200                 	// #512
  23da3c:	mov	x0, x9
  23da40:	mov	x1, x8
  23da44:	mov	w4, wzr
  23da48:	bl	22f864 <udev_event_apply_format>
  23da4c:	add	x8, sp, #0x200
  23da50:	add	x2, x29, #0x18
  23da54:	mov	x0, x20
  23da58:	mov	x1, x8
  23da5c:	bl	254070 <sd_device_get_sysattr_value@plt>
  23da60:	tbnz	w0, #31, 23dad4 <token_match_attr+0xec>
  23da64:	ldr	w8, [x19]
  23da68:	tbz	w8, #31, 23dac4 <token_match_attr+0xdc>
  23da6c:	b	23da98 <token_match_attr+0xb0>
  23da70:	mov	x1, sp
  23da74:	mov	w2, #0x200                 	// #512
  23da78:	mov	w3, #0x1                   	// #1
  23da7c:	mov	x0, x8
  23da80:	mov	x20, sp
  23da84:	bl	254040 <util_resolve_subsys_kernel@plt>
  23da88:	tbnz	w0, #31, 23dad4 <token_match_attr+0xec>
  23da8c:	str	x20, [x29, #24]
  23da90:	ldr	w8, [x19]
  23da94:	tbz	w8, #31, 23dac4 <token_match_attr+0xdc>
  23da98:	ldr	x2, [x29, #24]
  23da9c:	mov	x20, sp
  23daa0:	cmp	x2, x20
  23daa4:	b.eq	23dab8 <token_match_attr+0xd0>  // b.none
  23daa8:	mov	x0, sp
  23daac:	mov	w1, #0x200                 	// #512
  23dab0:	bl	253f50 <strscpy@plt>
  23dab4:	str	x20, [x29, #24]
  23dab8:	mov	x0, sp
  23dabc:	mov	x1, xzr
  23dac0:	bl	254080 <delete_trailing_chars@plt>
  23dac4:	ldr	x1, [x29, #24]
  23dac8:	mov	x0, x19
  23dacc:	bl	23d7fc <token_match_string>
  23dad0:	b	23dad8 <token_match_attr+0xf0>
  23dad4:	mov	w0, wzr
  23dad8:	and	w0, w0, #0x1
  23dadc:	add	sp, sp, #0x400
  23dae0:	ldp	x20, x19, [sp, #32]
  23dae4:	ldr	x28, [sp, #16]
  23dae8:	ldp	x29, x30, [sp], #48
  23daec:	ret
  23daf0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  23daf4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23daf8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23dafc:	add	x1, x1, #0xd63
  23db00:	add	x2, x2, #0x63
  23db04:	add	x4, x4, #0x94d
  23db08:	mov	w0, #0x1                   	// #1
  23db0c:	mov	w3, #0x55e                 	// #1374
  23db10:	bl	253740 <log_assert_failed_realm@plt>
  23db14:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23db18:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23db1c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23db20:	add	x1, x1, #0x9e6
  23db24:	add	x2, x2, #0x63
  23db28:	add	x4, x4, #0x94d
  23db2c:	mov	w0, #0x1                   	// #1
  23db30:	mov	w3, #0x55f                 	// #1375
  23db34:	bl	253740 <log_assert_failed_realm@plt>
  23db38:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  23db3c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23db40:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23db44:	add	x1, x1, #0xc4f
  23db48:	add	x2, x2, #0x63
  23db4c:	add	x4, x4, #0x94d
  23db50:	mov	w0, #0x1                   	// #1
  23db54:	mov	w3, #0x560                 	// #1376
  23db58:	bl	253740 <log_assert_failed_realm@plt>
  23db5c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  23db60:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23db64:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23db68:	add	x1, x1, #0x263
  23db6c:	add	x2, x2, #0x63
  23db70:	add	x4, x4, #0x94d
  23db74:	mov	w0, #0x1                   	// #1
  23db78:	mov	w3, #0x573                 	// #1395
  23db7c:	bl	253730 <log_assert_failed_unreachable_realm@plt>

000000000023db80 <attr_subst_subdir>:
  23db80:	stp	x29, x30, [sp, #-80]!
  23db84:	str	x28, [sp, #16]
  23db88:	stp	x24, x23, [sp, #32]
  23db8c:	stp	x22, x21, [sp, #48]
  23db90:	stp	x20, x19, [sp, #64]
  23db94:	mov	x29, sp
  23db98:	sub	sp, sp, #0x410
  23db9c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  23dba0:	add	x1, x1, #0x3e1
  23dba4:	mov	x19, x0
  23dba8:	str	xzr, [x29, #24]
  23dbac:	bl	2544c0 <strstr@plt>
  23dbb0:	cbz	x0, 23dc78 <attr_subst_subdir+0xf8>
  23dbb4:	sub	x8, x0, x19
  23dbb8:	mov	x22, x0
  23dbbc:	add	x9, sp, #0x10
  23dbc0:	add	x3, x8, #0x1
  23dbc4:	add	x0, sp, #0x8
  23dbc8:	mov	w1, #0x400                 	// #1024
  23dbcc:	mov	x2, x19
  23dbd0:	str	x9, [sp, #8]
  23dbd4:	mov	w24, #0x400                 	// #1024
  23dbd8:	bl	2540a0 <strnpcpy@plt>
  23dbdc:	mov	x23, x0
  23dbe0:	add	x0, sp, #0x10
  23dbe4:	bl	2543a0 <opendir@plt>
  23dbe8:	mov	x20, x0
  23dbec:	str	x0, [x29, #24]
  23dbf0:	bl	253660 <__errno_location@plt>
  23dbf4:	mov	x21, x0
  23dbf8:	cbz	x20, 23dc88 <attr_subst_subdir+0x108>
  23dbfc:	mov	x0, x20
  23dc00:	str	wzr, [x21]
  23dc04:	bl	2543b0 <readdir64@plt>
  23dc08:	cbz	x0, 23dc80 <attr_subst_subdir+0x100>
  23dc0c:	mov	x2, x0
  23dc10:	add	x22, x22, #0x2
  23dc14:	sub	x23, x24, x23
  23dc18:	b	23dc30 <attr_subst_subdir+0xb0>
  23dc1c:	mov	x0, x20
  23dc20:	str	wzr, [x21]
  23dc24:	bl	2543b0 <readdir64@plt>
  23dc28:	mov	x2, x0
  23dc2c:	cbz	x0, 23dc80 <attr_subst_subdir+0x100>
  23dc30:	ldrb	w8, [x2, #19]!
  23dc34:	cmp	w8, #0x2e
  23dc38:	b.eq	23dc1c <attr_subst_subdir+0x9c>  // b.none
  23dc3c:	ldr	x0, [sp, #8]
  23dc40:	mov	x1, x23
  23dc44:	mov	x3, x22
  23dc48:	mov	x4, xzr
  23dc4c:	bl	254600 <strscpyl@plt>
  23dc50:	mov	x0, x20
  23dc54:	bl	254690 <dirfd@plt>
  23dc58:	ldr	x1, [sp, #8]
  23dc5c:	mov	w2, wzr
  23dc60:	mov	w3, wzr
  23dc64:	bl	2546a0 <faccessat@plt>
  23dc68:	tbnz	w0, #31, 23dc1c <attr_subst_subdir+0x9c>
  23dc6c:	add	x1, sp, #0x10
  23dc70:	mov	x0, x19
  23dc74:	bl	2546b0 <strcpy@plt>
  23dc78:	mov	w19, wzr
  23dc7c:	b	23dc90 <attr_subst_subdir+0x110>
  23dc80:	mov	w19, #0xfffffffe            	// #-2
  23dc84:	b	23dc90 <attr_subst_subdir+0x110>
  23dc88:	ldr	w8, [x21]
  23dc8c:	neg	w19, w8
  23dc90:	add	x0, x29, #0x18
  23dc94:	bl	23df7c <closedirp>
  23dc98:	mov	w0, w19
  23dc9c:	add	sp, sp, #0x410
  23dca0:	ldp	x20, x19, [sp, #64]
  23dca4:	ldp	x22, x21, [sp, #48]
  23dca8:	ldp	x24, x23, [sp, #32]
  23dcac:	ldr	x28, [sp, #16]
  23dcb0:	ldp	x29, x30, [sp], #80
  23dcb4:	ret

000000000023dcb8 <get_property_from_string>:
  23dcb8:	stp	x29, x30, [sp, #-64]!
  23dcbc:	str	x23, [sp, #16]
  23dcc0:	stp	x22, x21, [sp, #32]
  23dcc4:	stp	x20, x19, [sp, #48]
  23dcc8:	mov	x29, sp
  23dccc:	cbz	x0, 23dda8 <get_property_from_string+0xf0>
  23dcd0:	mov	x20, x1
  23dcd4:	cbz	x1, 23ddcc <get_property_from_string+0x114>
  23dcd8:	mov	x19, x2
  23dcdc:	cbz	x2, 23ddf0 <get_property_from_string+0x138>
  23dce0:	mov	x1, xzr
  23dce4:	bl	235344 <skip_leading_chars>
  23dce8:	ldrb	w8, [x0]
  23dcec:	cmp	w8, #0x23
  23dcf0:	b.eq	23dcf8 <get_property_from_string+0x40>  // b.none
  23dcf4:	cbnz	w8, 23dd08 <get_property_from_string+0x50>
  23dcf8:	mov	w0, wzr
  23dcfc:	str	xzr, [x19]
  23dd00:	str	xzr, [x20]
  23dd04:	b	23dd94 <get_property_from_string+0xdc>
  23dd08:	mov	w1, #0x3d                  	// #61
  23dd0c:	mov	x21, x0
  23dd10:	bl	253a60 <strchr@plt>
  23dd14:	cbz	x0, 23dd90 <get_property_from_string+0xd8>
  23dd18:	mov	x22, x0
  23dd1c:	strb	wzr, [x0]
  23dd20:	mov	x0, x21
  23dd24:	bl	254610 <strstrip@plt>
  23dd28:	mov	x21, x0
  23dd2c:	bl	2358dc <isempty>
  23dd30:	tbnz	w0, #0, 23dd90 <get_property_from_string+0xd8>
  23dd34:	add	x0, x22, #0x1
  23dd38:	bl	254610 <strstrip@plt>
  23dd3c:	mov	x22, x0
  23dd40:	bl	2358dc <isempty>
  23dd44:	tbnz	w0, #0, 23dd90 <get_property_from_string+0xd8>
  23dd48:	ldrb	w23, [x22]
  23dd4c:	cmp	w23, #0x27
  23dd50:	b.eq	23dd5c <get_property_from_string+0xa4>  // b.none
  23dd54:	cmp	w23, #0x22
  23dd58:	b.ne	23dd80 <get_property_from_string+0xc8>  // b.any
  23dd5c:	mov	x0, x22
  23dd60:	bl	2539a0 <strlen@plt>
  23dd64:	subs	x8, x0, #0x1
  23dd68:	b.eq	23dd90 <get_property_from_string+0xd8>  // b.none
  23dd6c:	ldrb	w9, [x22, x8]
  23dd70:	cmp	w9, w23
  23dd74:	b.ne	23dd90 <get_property_from_string+0xd8>  // b.any
  23dd78:	strb	wzr, [x22, x8]
  23dd7c:	add	x22, x22, #0x1
  23dd80:	mov	w0, #0x1                   	// #1
  23dd84:	str	x21, [x20]
  23dd88:	str	x22, [x19]
  23dd8c:	b	23dd94 <get_property_from_string+0xdc>
  23dd90:	mov	w0, #0xffffffea            	// #-22
  23dd94:	ldp	x20, x19, [sp, #48]
  23dd98:	ldp	x22, x21, [sp, #32]
  23dd9c:	ldr	x23, [sp, #16]
  23dda0:	ldp	x29, x30, [sp], #64
  23dda4:	ret
  23dda8:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  23ddac:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ddb0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23ddb4:	add	x1, x1, #0x5fe
  23ddb8:	add	x2, x2, #0x63
  23ddbc:	add	x4, x4, #0x287
  23ddc0:	mov	w0, #0x1                   	// #1
  23ddc4:	mov	w3, #0x587                 	// #1415
  23ddc8:	bl	253740 <log_assert_failed_realm@plt>
  23ddcc:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23ddd0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ddd4:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23ddd8:	add	x1, x1, #0x4cc
  23dddc:	add	x2, x2, #0x63
  23dde0:	add	x4, x4, #0x287
  23dde4:	mov	w0, #0x1                   	// #1
  23dde8:	mov	w3, #0x588                 	// #1416
  23ddec:	bl	253740 <log_assert_failed_realm@plt>
  23ddf0:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23ddf4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23ddf8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23ddfc:	add	x1, x1, #0xbd0
  23de00:	add	x2, x2, #0x63
  23de04:	add	x4, x4, #0x287
  23de08:	mov	w0, #0x1                   	// #1
  23de0c:	mov	w3, #0x589                 	// #1417
  23de10:	bl	253740 <log_assert_failed_realm@plt>

000000000023de14 <import_parent_into_properties>:
  23de14:	sub	sp, sp, #0x40
  23de18:	stp	x29, x30, [sp, #16]
  23de1c:	str	x21, [sp, #32]
  23de20:	stp	x20, x19, [sp, #48]
  23de24:	add	x29, sp, #0x10
  23de28:	cbz	x0, 23dec4 <import_parent_into_properties+0xb0>
  23de2c:	mov	x19, x1
  23de30:	cbz	x1, 23dee8 <import_parent_into_properties+0xd4>
  23de34:	add	x1, sp, #0x8
  23de38:	mov	x20, x0
  23de3c:	bl	253d60 <sd_device_get_parent@plt>
  23de40:	cmn	w0, #0x2
  23de44:	b.ne	23de50 <import_parent_into_properties+0x3c>  // b.any
  23de48:	mov	w0, wzr
  23de4c:	b	23deb0 <import_parent_into_properties+0x9c>
  23de50:	tbnz	w0, #31, 23deb0 <import_parent_into_properties+0x9c>
  23de54:	ldr	x0, [sp, #8]
  23de58:	add	x1, x29, #0x18
  23de5c:	bl	2546c0 <sd_device_get_property_first@plt>
  23de60:	cbz	x0, 23deac <import_parent_into_properties+0x98>
  23de64:	mov	x21, x0
  23de68:	b	23de80 <import_parent_into_properties+0x6c>
  23de6c:	ldr	x0, [sp, #8]
  23de70:	add	x1, x29, #0x18
  23de74:	bl	2546d0 <sd_device_get_property_next@plt>
  23de78:	mov	x21, x0
  23de7c:	cbz	x0, 23deac <import_parent_into_properties+0x98>
  23de80:	mov	x0, x19
  23de84:	mov	x1, x21
  23de88:	mov	w2, wzr
  23de8c:	bl	254680 <fnmatch@plt>
  23de90:	cbnz	w0, 23de6c <import_parent_into_properties+0x58>
  23de94:	ldr	x2, [x29, #24]
  23de98:	mov	x0, x20
  23de9c:	mov	x1, x21
  23dea0:	bl	2541a0 <device_add_property@plt>
  23dea4:	tbz	w0, #31, 23de6c <import_parent_into_properties+0x58>
  23dea8:	b	23deb0 <import_parent_into_properties+0x9c>
  23deac:	mov	w0, #0x1                   	// #1
  23deb0:	ldp	x20, x19, [sp, #48]
  23deb4:	ldr	x21, [sp, #32]
  23deb8:	ldp	x29, x30, [sp, #16]
  23debc:	add	sp, sp, #0x40
  23dec0:	ret
  23dec4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23dec8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23decc:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23ded0:	add	x1, x1, #0x9e6
  23ded4:	add	x2, x2, #0x63
  23ded8:	add	x4, x4, #0x2be
  23dedc:	mov	w0, #0x1                   	// #1
  23dee0:	mov	w3, #0x5b5                 	// #1461
  23dee4:	bl	253740 <log_assert_failed_realm@plt>
  23dee8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  23deec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23def0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23def4:	add	x1, x1, #0x2fb
  23def8:	add	x2, x2, #0x63
  23defc:	add	x4, x4, #0x2be
  23df00:	mov	w0, #0x1                   	// #1
  23df04:	mov	w3, #0x5b6                 	// #1462
  23df08:	bl	253740 <log_assert_failed_realm@plt>

000000000023df0c <ordered_hashmap_clear_free_free>:
  23df0c:	stp	x29, x30, [sp, #-16]!
  23df10:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  23df14:	ldr	x1, [x1, #728]
  23df18:	mov	x29, sp
  23df1c:	mov	x2, x1
  23df20:	bl	2546e0 <internal_hashmap_clear@plt>
  23df24:	ldp	x29, x30, [sp], #16
  23df28:	ret

000000000023df2c <ordered_hashmap_put>:
  23df2c:	stp	x29, x30, [sp, #-16]!
  23df30:	mov	x29, sp
  23df34:	bl	253aa0 <hashmap_put@plt>
  23df38:	ldp	x29, x30, [sp], #16
  23df3c:	ret

000000000023df40 <write_string_file>:
  23df40:	stp	x29, x30, [sp, #-16]!
  23df44:	mov	w2, #0x2c                  	// #44
  23df48:	mov	x3, xzr
  23df4c:	mov	x29, sp
  23df50:	bl	253e50 <write_string_file_ts@plt>
  23df54:	ldp	x29, x30, [sp], #16
  23df58:	ret

000000000023df5c <ordered_hashmap_clear_free_key>:
  23df5c:	stp	x29, x30, [sp, #-16]!
  23df60:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  23df64:	ldr	x1, [x1, #728]
  23df68:	mov	x2, xzr
  23df6c:	mov	x29, sp
  23df70:	bl	2546e0 <internal_hashmap_clear@plt>
  23df74:	ldp	x29, x30, [sp], #16
  23df78:	ret

000000000023df7c <closedirp>:
  23df7c:	stp	x29, x30, [sp, #-16]!
  23df80:	ldr	x0, [x0]
  23df84:	mov	x29, sp
  23df88:	cbz	x0, 23df90 <closedirp+0x14>
  23df8c:	bl	2543e0 <closedir@plt>
  23df90:	ldp	x29, x30, [sp], #16
  23df94:	ret

000000000023df98 <apply_static_dev_perms>:
  23df98:	stp	x29, x30, [sp, #-96]!
  23df9c:	stp	x28, x27, [sp, #16]
  23dfa0:	stp	x26, x25, [sp, #32]
  23dfa4:	stp	x24, x23, [sp, #48]
  23dfa8:	stp	x22, x21, [sp, #64]
  23dfac:	stp	x20, x19, [sp, #80]
  23dfb0:	mov	x29, sp
  23dfb4:	sub	sp, sp, #0xca0
  23dfb8:	str	xzr, [sp, #152]
  23dfbc:	cbz	x0, 23e3a0 <apply_static_dev_perms+0x408>
  23dfc0:	and	w8, w2, w1
  23dfc4:	and	w8, w8, w3
  23dfc8:	cmn	w8, #0x1
  23dfcc:	mov	x22, x4
  23dfd0:	mov	w19, w3
  23dfd4:	mov	w20, w2
  23dfd8:	mov	w21, w1
  23dfdc:	mov	x23, x0
  23dfe0:	cset	w26, eq  // eq = none
  23dfe4:	cbnz	x4, 23e01c <apply_static_dev_perms+0x84>
  23dfe8:	cbz	w26, 23e01c <apply_static_dev_perms+0x84>
  23dfec:	mov	w22, wzr
  23dff0:	add	x0, sp, #0x98
  23dff4:	bl	2352f8 <freep>
  23dff8:	mov	w0, w22
  23dffc:	add	sp, sp, #0xca0
  23e000:	ldp	x20, x19, [sp, #80]
  23e004:	ldp	x22, x21, [sp, #64]
  23e008:	ldp	x24, x23, [sp, #48]
  23e00c:	ldp	x26, x25, [sp, #32]
  23e010:	ldp	x28, x27, [sp, #16]
  23e014:	ldp	x29, x30, [sp], #96
  23e018:	ret
  23e01c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23e020:	add	x2, x2, #0x947
  23e024:	add	x0, sp, #0x8a0
  23e028:	mov	w1, #0x400                 	// #1024
  23e02c:	mov	x3, x23
  23e030:	mov	x4, xzr
  23e034:	bl	254600 <strscpyl@plt>
  23e038:	add	x0, sp, #0x8a0
  23e03c:	add	x1, sp, #0x18
  23e040:	bl	253478 <stat64>
  23e044:	tbnz	w0, #31, 23e150 <apply_static_dev_perms+0x1b8>
  23e048:	ldr	w8, [sp, #40]
  23e04c:	and	w8, w8, #0xf000
  23e050:	orr	w8, w8, #0x4000
  23e054:	cmp	w8, #0x6, lsl #12
  23e058:	b.ne	23e268 <apply_static_dev_perms+0x2d0>  // b.any
  23e05c:	mov	x0, x22
  23e060:	bl	23e3c4 <strv_isempty>
  23e064:	tbnz	w0, #0, 23e078 <apply_static_dev_perms+0xe0>
  23e068:	mov	x0, x23
  23e06c:	bl	23e3e0 <xescape>
  23e070:	str	x0, [sp, #152]
  23e074:	cbz	x0, 23e2bc <apply_static_dev_perms+0x324>
  23e078:	cbz	x22, 23e19c <apply_static_dev_perms+0x204>
  23e07c:	ldr	x3, [x22]
  23e080:	cbz	x3, 23e19c <apply_static_dev_perms+0x204>
  23e084:	ldr	x23, [sp, #152]
  23e088:	add	x27, x22, #0x8
  23e08c:	adrp	x22, 214000 <worker_hash_op+0x9ad0>
  23e090:	adrp	x24, 20b000 <worker_hash_op+0xad0>
  23e094:	add	x22, x22, #0xb1f
  23e098:	add	x24, x24, #0x9d
  23e09c:	b	23e0a8 <apply_static_dev_perms+0x110>
  23e0a0:	ldr	x3, [x27], #8
  23e0a4:	cbz	x3, 23e19c <apply_static_dev_perms+0x204>
  23e0a8:	add	x0, sp, #0x4a0
  23e0ac:	mov	w1, #0x400                 	// #1024
  23e0b0:	mov	x2, x22
  23e0b4:	mov	x4, x24
  23e0b8:	mov	x5, xzr
  23e0bc:	bl	254600 <strscpyl@plt>
  23e0c0:	add	x0, sp, #0x4a0
  23e0c4:	mov	w1, #0x1ed                 	// #493
  23e0c8:	bl	2546f0 <mkdir_p@plt>
  23e0cc:	tbnz	w0, #31, 23e2e0 <apply_static_dev_perms+0x348>
  23e0d0:	add	x0, sp, #0xa0
  23e0d4:	add	x2, sp, #0x4a0
  23e0d8:	mov	w1, #0x400                 	// #1024
  23e0dc:	mov	x3, x23
  23e0e0:	mov	x4, xzr
  23e0e4:	bl	254600 <strscpyl@plt>
  23e0e8:	add	x0, sp, #0x8a0
  23e0ec:	add	x1, sp, #0xa0
  23e0f0:	bl	254350 <symlink@plt>
  23e0f4:	tbz	w0, #31, 23e0a0 <apply_static_dev_perms+0x108>
  23e0f8:	bl	253660 <__errno_location@plt>
  23e0fc:	ldr	w25, [x0]
  23e100:	cmp	w25, #0x11
  23e104:	b.eq	23e0a0 <apply_static_dev_perms+0x108>  // b.none
  23e108:	mov	w0, #0x1                   	// #1
  23e10c:	bl	2535b0 <log_get_max_level_realm@plt>
  23e110:	cmp	w0, #0x3
  23e114:	b.lt	23e38c <apply_static_dev_perms+0x3f4>  // b.tstop
  23e118:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23e11c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23e120:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  23e124:	add	x2, x2, #0x63
  23e128:	add	x4, x4, #0x521
  23e12c:	add	x5, x5, #0xe33
  23e130:	add	x6, sp, #0xa0
  23e134:	add	x7, sp, #0x8a0
  23e138:	mov	w0, #0x403                 	// #1027
  23e13c:	mov	w3, #0x90f                 	// #2319
  23e140:	mov	w1, w25
  23e144:	bl	2535c0 <log_internal_realm@plt>
  23e148:	mov	w22, w0
  23e14c:	b	23dff0 <apply_static_dev_perms+0x58>
  23e150:	bl	253660 <__errno_location@plt>
  23e154:	ldr	w19, [x0]
  23e158:	cmp	w19, #0x2
  23e15c:	b.eq	23dfec <apply_static_dev_perms+0x54>  // b.none
  23e160:	mov	w0, #0x1                   	// #1
  23e164:	bl	2535b0 <log_get_max_level_realm@plt>
  23e168:	cmp	w0, #0x3
  23e16c:	b.lt	23e2a8 <apply_static_dev_perms+0x310>  // b.tstop
  23e170:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23e174:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23e178:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  23e17c:	add	x2, x2, #0x63
  23e180:	add	x4, x4, #0x521
  23e184:	add	x5, x5, #0xe11
  23e188:	add	x6, sp, #0x8a0
  23e18c:	mov	w0, #0x403                 	// #1027
  23e190:	mov	w3, #0x8f5                 	// #2293
  23e194:	mov	w1, w19
  23e198:	b	23e31c <apply_static_dev_perms+0x384>
  23e19c:	tbnz	w26, #0, 23dfec <apply_static_dev_perms+0x54>
  23e1a0:	cmn	w19, #0x1
  23e1a4:	b.ne	23e1c0 <apply_static_dev_perms+0x228>  // b.any
  23e1a8:	mov	w0, w20
  23e1ac:	bl	23e404 <gid_is_valid>
  23e1b0:	tst	w0, #0x1
  23e1b4:	mov	w8, #0x180                 	// #384
  23e1b8:	mov	w9, #0x1b0                 	// #432
  23e1bc:	csel	w19, w9, w8, ne  // ne = any
  23e1c0:	mov	w0, w21
  23e1c4:	bl	2541d0 <uid_is_valid@plt>
  23e1c8:	tst	w0, #0x1
  23e1cc:	mov	w0, w20
  23e1d0:	csel	w21, w21, wzr, ne  // ne = any
  23e1d4:	bl	23e404 <gid_is_valid>
  23e1d8:	tst	w0, #0x1
  23e1dc:	csel	w20, w20, wzr, ne  // ne = any
  23e1e0:	add	x0, sp, #0x8a0
  23e1e4:	mov	w1, w19
  23e1e8:	mov	w2, w21
  23e1ec:	mov	w3, w20
  23e1f0:	bl	2542a0 <chmod_and_chown@plt>
  23e1f4:	cmn	w0, #0x2
  23e1f8:	mov	w22, wzr
  23e1fc:	b.eq	23dff0 <apply_static_dev_perms+0x58>  // b.none
  23e200:	mov	w23, w0
  23e204:	mov	w0, #0x1                   	// #1
  23e208:	bl	2535b0 <log_get_max_level_realm@plt>
  23e20c:	tbnz	w23, #31, 23e338 <apply_static_dev_perms+0x3a0>
  23e210:	cmp	w0, #0x7
  23e214:	b.lt	23e250 <apply_static_dev_perms+0x2b8>  // b.tstop
  23e218:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23e21c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23e220:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  23e224:	add	x2, x2, #0x63
  23e228:	add	x4, x4, #0x521
  23e22c:	add	x5, x5, #0x98f
  23e230:	add	x6, sp, #0x8a0
  23e234:	mov	w0, #0x407                 	// #1031
  23e238:	mov	w3, #0x923                 	// #2339
  23e23c:	mov	w1, wzr
  23e240:	mov	w7, w21
  23e244:	str	w19, [sp, #8]
  23e248:	str	w20, [sp]
  23e24c:	bl	2535c0 <log_internal_realm@plt>
  23e250:	add	x1, sp, #0x8a0
  23e254:	mov	w0, #0xffffff9c            	// #-100
  23e258:	mov	x2, xzr
  23e25c:	mov	w3, wzr
  23e260:	bl	2542e0 <utimensat@plt>
  23e264:	b	23dfec <apply_static_dev_perms+0x54>
  23e268:	mov	w0, #0x1                   	// #1
  23e26c:	bl	2535b0 <log_get_max_level_realm@plt>
  23e270:	cmp	w0, #0x4
  23e274:	b.lt	23dfec <apply_static_dev_perms+0x54>  // b.tstop
  23e278:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23e27c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23e280:	adrp	x5, 210000 <worker_hash_op+0x5ad0>
  23e284:	add	x2, x2, #0x63
  23e288:	add	x4, x4, #0x521
  23e28c:	add	x5, x5, #0x8f2
  23e290:	add	x6, sp, #0x8a0
  23e294:	mov	w0, #0x404                 	// #1028
  23e298:	mov	w3, #0x8fa                 	// #2298
  23e29c:	mov	w1, wzr
  23e2a0:	bl	2535c0 <log_internal_realm@plt>
  23e2a4:	b	23dfec <apply_static_dev_perms+0x54>
  23e2a8:	cmp	w19, #0x0
  23e2ac:	mov	w8, wzr
  23e2b0:	cneg	w9, w19, mi  // mi = first
  23e2b4:	sub	w22, w8, w9, uxtb
  23e2b8:	b	23dff0 <apply_static_dev_perms+0x58>
  23e2bc:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23e2c0:	adrp	x3, 212000 <worker_hash_op+0x7ad0>
  23e2c4:	add	x1, x1, #0x63
  23e2c8:	add	x3, x3, #0x521
  23e2cc:	mov	w0, #0x1                   	// #1
  23e2d0:	mov	w2, #0x901                 	// #2305
  23e2d4:	bl	2537c0 <log_oom_internal@plt>
  23e2d8:	mov	w22, w0
  23e2dc:	b	23dff0 <apply_static_dev_perms+0x58>
  23e2e0:	mov	w25, w0
  23e2e4:	mov	w0, #0x1                   	// #1
  23e2e8:	bl	2535b0 <log_get_max_level_realm@plt>
  23e2ec:	cmp	w0, #0x3
  23e2f0:	b.lt	23e328 <apply_static_dev_perms+0x390>  // b.tstop
  23e2f4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23e2f8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23e2fc:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  23e300:	add	x2, x2, #0x63
  23e304:	add	x4, x4, #0x521
  23e308:	add	x5, x5, #0x3db
  23e30c:	add	x6, sp, #0x4a0
  23e310:	mov	w0, #0x403                 	// #1027
  23e314:	mov	w3, #0x909                 	// #2313
  23e318:	mov	w1, w25
  23e31c:	bl	2535c0 <log_internal_realm@plt>
  23e320:	mov	w22, w0
  23e324:	b	23dff0 <apply_static_dev_perms+0x58>
  23e328:	mov	w8, wzr
  23e32c:	neg	w9, w25
  23e330:	sub	w22, w8, w9, uxtb
  23e334:	b	23dff0 <apply_static_dev_perms+0x58>
  23e338:	cmp	w0, #0x3
  23e33c:	b.lt	23e37c <apply_static_dev_perms+0x3e4>  // b.tstop
  23e340:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23e344:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23e348:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  23e34c:	add	x2, x2, #0x63
  23e350:	add	x4, x4, #0x521
  23e354:	add	x5, x5, #0xdd2
  23e358:	add	x6, sp, #0x8a0
  23e35c:	mov	w0, #0x403                 	// #1027
  23e360:	mov	w3, #0x921                 	// #2337
  23e364:	mov	w1, w23
  23e368:	mov	w7, w21
  23e36c:	str	w20, [sp]
  23e370:	bl	2535c0 <log_internal_realm@plt>
  23e374:	mov	w22, w0
  23e378:	b	23dff0 <apply_static_dev_perms+0x58>
  23e37c:	mov	w8, wzr
  23e380:	neg	w9, w23
  23e384:	sub	w22, w8, w9, uxtb
  23e388:	b	23dff0 <apply_static_dev_perms+0x58>
  23e38c:	cmp	w25, #0x0
  23e390:	mov	w8, wzr
  23e394:	cneg	w9, w25, mi  // mi = first
  23e398:	sub	w22, w8, w9, uxtb
  23e39c:	b	23dff0 <apply_static_dev_perms+0x58>
  23e3a0:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  23e3a4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  23e3a8:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  23e3ac:	add	x1, x1, #0x724
  23e3b0:	add	x2, x2, #0x63
  23e3b4:	add	x4, x4, #0xef8
  23e3b8:	mov	w0, #0x1                   	// #1
  23e3bc:	mov	w3, #0x8ed                 	// #2285
  23e3c0:	bl	253740 <log_assert_failed_realm@plt>

000000000023e3c4 <strv_isempty>:
  23e3c4:	cbz	x0, 23e3d8 <strv_isempty+0x14>
  23e3c8:	ldr	x8, [x0]
  23e3cc:	cmp	x8, #0x0
  23e3d0:	cset	w0, eq  // eq = none
  23e3d4:	ret
  23e3d8:	mov	w0, #0x1                   	// #1
  23e3dc:	ret

000000000023e3e0 <xescape>:
  23e3e0:	stp	x29, x30, [sp, #-16]!
  23e3e4:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  23e3e8:	add	x1, x1, #0x19
  23e3ec:	mov	x2, #0xffffffffffffffff    	// #-1
  23e3f0:	mov	w3, wzr
  23e3f4:	mov	x29, sp
  23e3f8:	bl	254700 <xescape_full@plt>
  23e3fc:	ldp	x29, x30, [sp], #16
  23e400:	ret

000000000023e404 <gid_is_valid>:
  23e404:	stp	x29, x30, [sp, #-16]!
  23e408:	mov	x29, sp
  23e40c:	bl	2541d0 <uid_is_valid@plt>
  23e410:	and	w0, w0, #0x1
  23e414:	ldp	x29, x30, [sp], #16
  23e418:	ret

000000000023e41c <udev_watch_init>:
  23e41c:	stp	x29, x30, [sp, #-16]!
  23e420:	mov	w0, #0x80000               	// #524288
  23e424:	mov	x29, sp
  23e428:	bl	254710 <inotify_init1@plt>
  23e42c:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  23e430:	str	w0, [x8, #500]
  23e434:	tbnz	w0, #31, 23e440 <udev_watch_init+0x24>
  23e438:	ldp	x29, x30, [sp], #16
  23e43c:	ret
  23e440:	bl	253660 <__errno_location@plt>
  23e444:	ldr	w8, [x0]
  23e448:	neg	w0, w8
  23e44c:	ldp	x29, x30, [sp], #16
  23e450:	ret

000000000023e454 <udev_watch_restore>:
  23e454:	sub	sp, sp, #0x90
  23e458:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  23e45c:	ldr	w8, [x8, #500]
  23e460:	stp	x29, x30, [sp, #48]
  23e464:	stp	x28, x27, [sp, #64]
  23e468:	stp	x26, x25, [sp, #80]
  23e46c:	stp	x24, x23, [sp, #96]
  23e470:	stp	x22, x21, [sp, #112]
  23e474:	stp	x20, x19, [sp, #128]
  23e478:	add	x29, sp, #0x30
  23e47c:	tbnz	w8, #31, 23e63c <udev_watch_restore+0x1e8>
  23e480:	adrp	x0, 215000 <worker_hash_op+0xaad0>
  23e484:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  23e488:	add	x0, x0, #0x9d0
  23e48c:	add	x1, x1, #0x48d
  23e490:	bl	254370 <rename@plt>
  23e494:	tbnz	w0, #31, 23e694 <udev_watch_restore+0x240>
  23e498:	adrp	x0, 218000 <worker_hash_op+0xdad0>
  23e49c:	add	x0, x0, #0x48d
  23e4a0:	bl	2543a0 <opendir@plt>
  23e4a4:	mov	x19, x0
  23e4a8:	bl	253660 <__errno_location@plt>
  23e4ac:	mov	x20, x0
  23e4b0:	cbz	x19, 23e6b4 <udev_watch_restore+0x260>
  23e4b4:	mov	x0, x19
  23e4b8:	str	wzr, [x20]
  23e4bc:	bl	2543b0 <readdir64@plt>
  23e4c0:	cbz	x0, 23e67c <udev_watch_restore+0x228>
  23e4c4:	adrp	x21, 216000 <worker_hash_op+0xbad0>
  23e4c8:	adrp	x22, 218000 <worker_hash_op+0xdad0>
  23e4cc:	adrp	x23, 20a000 <parse_argv.options-0x3f0>
  23e4d0:	adrp	x24, 214000 <worker_hash_op+0x9ad0>
  23e4d4:	adrp	x27, 211000 <worker_hash_op+0x6ad0>
  23e4d8:	adrp	x28, 215000 <worker_hash_op+0xaad0>
  23e4dc:	mov	x25, x0
  23e4e0:	add	x21, x21, #0x1c6
  23e4e4:	add	x22, x22, #0x47a
  23e4e8:	add	x23, x23, #0x703
  23e4ec:	add	x24, x24, #0x237
  23e4f0:	add	x27, x27, #0xb64
  23e4f4:	add	x28, x28, #0x293
  23e4f8:	b	23e568 <udev_watch_restore+0x114>
  23e4fc:	ldr	x6, [sp, #24]
  23e500:	mov	w0, #0x7                   	// #7
  23e504:	mov	w3, #0x48                  	// #72
  23e508:	mov	w1, wzr
  23e50c:	cmp	x6, #0x0
  23e510:	csel	x5, xzr, x27, eq  // eq = none
  23e514:	mov	x2, x21
  23e518:	mov	x4, x22
  23e51c:	mov	x7, xzr
  23e520:	stp	xzr, x28, [sp]
  23e524:	bl	2539f0 <log_object_internal@plt>
  23e528:	ldur	x0, [x29, #-8]
  23e52c:	bl	23e78c <udev_watch_begin>
  23e530:	mov	x0, x19
  23e534:	bl	254690 <dirfd@plt>
  23e538:	mov	x1, x25
  23e53c:	mov	w2, wzr
  23e540:	bl	254720 <unlinkat@plt>
  23e544:	sub	x0, x29, #0x10
  23e548:	bl	23e774 <freep>
  23e54c:	sub	x0, x29, #0x8
  23e550:	bl	23e758 <sd_device_unrefp>
  23e554:	mov	x0, x19
  23e558:	str	wzr, [x20]
  23e55c:	bl	2543b0 <readdir64@plt>
  23e560:	mov	x25, x0
  23e564:	cbz	x0, 23e67c <udev_watch_restore+0x228>
  23e568:	stp	xzr, xzr, [x29, #-16]
  23e56c:	ldrb	w8, [x25, #19]!
  23e570:	cmp	w8, #0x2e
  23e574:	b.eq	23e544 <udev_watch_restore+0xf0>  // b.none
  23e578:	mov	x0, x19
  23e57c:	bl	254690 <dirfd@plt>
  23e580:	sub	x2, x29, #0x10
  23e584:	mov	x1, x25
  23e588:	bl	254730 <readlinkat_malloc@plt>
  23e58c:	tbnz	w0, #31, 23e5cc <udev_watch_restore+0x178>
  23e590:	ldur	x1, [x29, #-16]
  23e594:	sub	x0, x29, #0x8
  23e598:	bl	2543c0 <sd_device_new_from_device_id@plt>
  23e59c:	tbnz	w0, #31, 23e604 <udev_watch_restore+0x1b0>
  23e5a0:	ldur	x26, [x29, #-8]
  23e5a4:	str	xzr, [sp, #24]
  23e5a8:	cbz	x26, 23e4fc <udev_watch_restore+0xa8>
  23e5ac:	mov	w0, #0x1                   	// #1
  23e5b0:	bl	2535b0 <log_get_max_level_realm@plt>
  23e5b4:	cmp	w0, #0x7
  23e5b8:	b.lt	23e4fc <udev_watch_restore+0xa8>  // b.tstop
  23e5bc:	add	x1, sp, #0x18
  23e5c0:	mov	x0, x26
  23e5c4:	bl	253a40 <sd_device_get_sysname@plt>
  23e5c8:	b	23e4fc <udev_watch_restore+0xa8>
  23e5cc:	mov	w26, w0
  23e5d0:	mov	w0, #0x1                   	// #1
  23e5d4:	bl	2535b0 <log_get_max_level_realm@plt>
  23e5d8:	cmp	w0, #0x7
  23e5dc:	b.lt	23e530 <udev_watch_restore+0xdc>  // b.tstop
  23e5e0:	mov	w0, #0x407                 	// #1031
  23e5e4:	mov	w3, #0x3e                  	// #62
  23e5e8:	mov	w1, w26
  23e5ec:	mov	x2, x21
  23e5f0:	mov	x4, x22
  23e5f4:	mov	x5, x23
  23e5f8:	mov	x6, x25
  23e5fc:	bl	2535c0 <log_internal_realm@plt>
  23e600:	b	23e530 <udev_watch_restore+0xdc>
  23e604:	mov	w26, w0
  23e608:	mov	w0, #0x1                   	// #1
  23e60c:	bl	2535b0 <log_get_max_level_realm@plt>
  23e610:	cmp	w0, #0x7
  23e614:	b.lt	23e530 <udev_watch_restore+0xdc>  // b.tstop
  23e618:	ldur	x6, [x29, #-16]
  23e61c:	mov	w0, #0x407                 	// #1031
  23e620:	mov	w3, #0x44                  	// #68
  23e624:	mov	w1, w26
  23e628:	mov	x2, x21
  23e62c:	mov	x4, x22
  23e630:	mov	x5, x24
  23e634:	bl	2535c0 <log_internal_realm@plt>
  23e638:	b	23e530 <udev_watch_restore+0xdc>
  23e63c:	mov	w0, #0x1                   	// #1
  23e640:	bl	2535b0 <log_get_max_level_realm@plt>
  23e644:	cmp	w0, #0x7
  23e648:	b.lt	23e6ac <udev_watch_restore+0x258>  // b.tstop
  23e64c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e650:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  23e654:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  23e658:	mov	w1, #0x16                  	// #22
  23e65c:	add	x2, x2, #0x1c6
  23e660:	add	x4, x4, #0x47a
  23e664:	add	x5, x5, #0x1c
  23e668:	mov	w0, #0x407                 	// #1031
  23e66c:	movk	w1, #0x4000, lsl #16
  23e670:	mov	w3, #0x28                  	// #40
  23e674:	bl	2535c0 <log_internal_realm@plt>
  23e678:	b	23e738 <udev_watch_restore+0x2e4>
  23e67c:	mov	x0, x19
  23e680:	bl	2543e0 <closedir@plt>
  23e684:	adrp	x0, 218000 <worker_hash_op+0xdad0>
  23e688:	add	x0, x0, #0x48d
  23e68c:	bl	254270 <rmdir@plt>
  23e690:	b	23e6a4 <udev_watch_restore+0x250>
  23e694:	bl	253660 <__errno_location@plt>
  23e698:	ldr	w19, [x0]
  23e69c:	cmp	w19, #0x2
  23e6a0:	b.ne	23e6ec <udev_watch_restore+0x298>  // b.any
  23e6a4:	mov	w0, wzr
  23e6a8:	b	23e738 <udev_watch_restore+0x2e4>
  23e6ac:	mov	w0, #0xffffffea            	// #-22
  23e6b0:	b	23e738 <udev_watch_restore+0x2e4>
  23e6b4:	ldr	w19, [x20]
  23e6b8:	mov	w0, #0x1                   	// #1
  23e6bc:	bl	2535b0 <log_get_max_level_realm@plt>
  23e6c0:	cmp	w0, #0x4
  23e6c4:	b.lt	23e728 <udev_watch_restore+0x2d4>  // b.tstop
  23e6c8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e6cc:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  23e6d0:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  23e6d4:	add	x2, x2, #0x1c6
  23e6d8:	add	x4, x4, #0x47a
  23e6dc:	add	x5, x5, #0xb48
  23e6e0:	mov	w0, #0x404                 	// #1028
  23e6e4:	mov	w3, #0x33                  	// #51
  23e6e8:	b	23e71c <udev_watch_restore+0x2c8>
  23e6ec:	mov	w0, #0x1                   	// #1
  23e6f0:	bl	2535b0 <log_get_max_level_realm@plt>
  23e6f4:	cmp	w0, #0x4
  23e6f8:	b.lt	23e728 <udev_watch_restore+0x2d4>  // b.tstop
  23e6fc:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e700:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  23e704:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  23e708:	add	x2, x2, #0x1c6
  23e70c:	add	x4, x4, #0x47a
  23e710:	add	x5, x5, #0x9e0
  23e714:	mov	w0, #0x404                 	// #1028
  23e718:	mov	w3, #0x2c                  	// #44
  23e71c:	mov	w1, w19
  23e720:	bl	2535c0 <log_internal_realm@plt>
  23e724:	b	23e738 <udev_watch_restore+0x2e4>
  23e728:	cmp	w19, #0x0
  23e72c:	mov	w8, wzr
  23e730:	cneg	w9, w19, mi  // mi = first
  23e734:	sub	w0, w8, w9, uxtb
  23e738:	ldp	x20, x19, [sp, #128]
  23e73c:	ldp	x22, x21, [sp, #112]
  23e740:	ldp	x24, x23, [sp, #96]
  23e744:	ldp	x26, x25, [sp, #80]
  23e748:	ldp	x28, x27, [sp, #64]
  23e74c:	ldp	x29, x30, [sp, #48]
  23e750:	add	sp, sp, #0x90
  23e754:	ret

000000000023e758 <sd_device_unrefp>:
  23e758:	stp	x29, x30, [sp, #-16]!
  23e75c:	ldr	x0, [x0]
  23e760:	mov	x29, sp
  23e764:	cbz	x0, 23e76c <sd_device_unrefp+0x14>
  23e768:	bl	253950 <sd_device_unref@plt>
  23e76c:	ldp	x29, x30, [sp], #16
  23e770:	ret

000000000023e774 <freep>:
  23e774:	stp	x29, x30, [sp, #-16]!
  23e778:	ldr	x0, [x0]
  23e77c:	mov	x29, sp
  23e780:	bl	2536e0 <free@plt>
  23e784:	ldp	x29, x30, [sp], #16
  23e788:	ret

000000000023e78c <udev_watch_begin>:
  23e78c:	sub	sp, sp, #0x90
  23e790:	stp	x22, x21, [sp, #112]
  23e794:	adrp	x21, 28e000 <string_hash_ops+0xfe38>
  23e798:	ldr	w8, [x21, #500]
  23e79c:	stp	x29, x30, [sp, #80]
  23e7a0:	str	x23, [sp, #96]
  23e7a4:	stp	x20, x19, [sp, #128]
  23e7a8:	add	x29, sp, #0x50
  23e7ac:	tbnz	w8, #31, 23e8ac <udev_watch_begin+0x120>
  23e7b0:	add	x1, x29, #0x18
  23e7b4:	mov	x19, x0
  23e7b8:	bl	253ad0 <sd_device_get_devname@plt>
  23e7bc:	tbnz	w0, #31, 23e8ec <udev_watch_begin+0x160>
  23e7c0:	stur	xzr, [x29, #-32]
  23e7c4:	cbz	x19, 23e7d8 <udev_watch_begin+0x4c>
  23e7c8:	mov	w0, #0x1                   	// #1
  23e7cc:	bl	2535b0 <log_get_max_level_realm@plt>
  23e7d0:	cmp	w0, #0x7
  23e7d4:	b.ge	23ead4 <udev_watch_begin+0x348>  // b.tcont
  23e7d8:	ldur	x6, [x29, #-32]
  23e7dc:	ldr	x8, [x29, #24]
  23e7e0:	adrp	x22, 211000 <worker_hash_op+0x6ad0>
  23e7e4:	add	x22, x22, #0xb64
  23e7e8:	cmp	x6, #0x0
  23e7ec:	str	x8, [sp, #16]
  23e7f0:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  23e7f4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e7f8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23e7fc:	csel	x5, xzr, x22, eq  // eq = none
  23e800:	add	x8, x8, #0x4a1
  23e804:	add	x2, x2, #0x1c6
  23e808:	add	x4, x4, #0x302
  23e80c:	mov	w0, #0x7                   	// #7
  23e810:	mov	w3, #0x61                  	// #97
  23e814:	mov	w1, wzr
  23e818:	mov	x7, xzr
  23e81c:	stp	xzr, x8, [sp]
  23e820:	mov	w23, #0x7                   	// #7
  23e824:	bl	2539f0 <log_object_internal@plt>
  23e828:	ldr	w0, [x21, #500]
  23e82c:	ldr	x1, [x29, #24]
  23e830:	mov	w2, #0x8                   	// #8
  23e834:	bl	254740 <inotify_add_watch@plt>
  23e838:	tbnz	w0, #31, 23e94c <udev_watch_begin+0x1c0>
  23e83c:	mov	w20, w0
  23e840:	mov	x0, x19
  23e844:	mov	w1, w20
  23e848:	bl	254750 <device_set_watch_handle@plt>
  23e84c:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  23e850:	add	x2, x2, #0x750
  23e854:	sub	x0, x29, #0x20
  23e858:	mov	w1, #0x1c                  	// #28
  23e85c:	mov	w3, w20
  23e860:	bl	2542f0 <snprintf@plt>
  23e864:	cmp	w0, #0x1c
  23e868:	b.cs	23eb34 <udev_watch_begin+0x3a8>  // b.hs, b.nlast
  23e86c:	sub	x0, x29, #0x20
  23e870:	mov	w1, #0x1ed                 	// #493
  23e874:	bl	254290 <mkdir_parents@plt>
  23e878:	tbnz	w0, #31, 23e9b4 <udev_watch_begin+0x228>
  23e87c:	sub	x0, x29, #0x20
  23e880:	bl	253960 <unlink@plt>
  23e884:	add	x1, sp, #0x28
  23e888:	mov	x0, x19
  23e88c:	bl	254250 <device_get_id_filename@plt>
  23e890:	tbnz	w0, #31, 23ea08 <udev_watch_begin+0x27c>
  23e894:	ldr	x0, [sp, #40]
  23e898:	sub	x1, x29, #0x20
  23e89c:	bl	254350 <symlink@plt>
  23e8a0:	tbnz	w0, #31, 23ea58 <udev_watch_begin+0x2cc>
  23e8a4:	mov	w0, wzr
  23e8a8:	b	23eabc <udev_watch_begin+0x330>
  23e8ac:	mov	w0, #0x1                   	// #1
  23e8b0:	bl	2535b0 <log_get_max_level_realm@plt>
  23e8b4:	cmp	w0, #0x7
  23e8b8:	b.lt	23e944 <udev_watch_begin+0x1b8>  // b.tstop
  23e8bc:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e8c0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23e8c4:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  23e8c8:	mov	w1, #0x16                  	// #22
  23e8cc:	add	x2, x2, #0x1c6
  23e8d0:	add	x4, x4, #0x302
  23e8d4:	add	x5, x5, #0x1c
  23e8d8:	mov	w0, #0x407                 	// #1031
  23e8dc:	movk	w1, #0x4000, lsl #16
  23e8e0:	mov	w3, #0x5b                  	// #91
  23e8e4:	bl	2535c0 <log_internal_realm@plt>
  23e8e8:	b	23eabc <udev_watch_begin+0x330>
  23e8ec:	mov	w20, w0
  23e8f0:	stur	xzr, [x29, #-32]
  23e8f4:	cbz	x19, 23e908 <udev_watch_begin+0x17c>
  23e8f8:	mov	w0, #0x1                   	// #1
  23e8fc:	bl	2535b0 <log_get_max_level_realm@plt>
  23e900:	cmp	w0, #0x3
  23e904:	b.ge	23eae4 <udev_watch_begin+0x358>  // b.tcont
  23e908:	ldur	x6, [x29, #-32]
  23e90c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23e910:	add	x8, x8, #0xb64
  23e914:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e918:	cmp	x6, #0x0
  23e91c:	csel	x5, xzr, x8, eq  // eq = none
  23e920:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23e924:	add	x8, x8, #0x7fb
  23e928:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23e92c:	add	x2, x2, #0x1c6
  23e930:	add	x4, x4, #0x302
  23e934:	str	x8, [sp, #8]
  23e938:	mov	w0, #0x3                   	// #3
  23e93c:	mov	w3, #0x5f                  	// #95
  23e940:	b	23eaac <udev_watch_begin+0x320>
  23e944:	mov	w0, #0xffffffea            	// #-22
  23e948:	b	23eabc <udev_watch_begin+0x330>
  23e94c:	stur	xzr, [x29, #-32]
  23e950:	bl	253660 <__errno_location@plt>
  23e954:	ldr	w20, [x0]
  23e958:	mov	w8, #0x3                   	// #3
  23e95c:	cmp	w20, #0x2
  23e960:	csel	w21, w23, w8, eq  // eq = none
  23e964:	cbz	x19, 23e978 <udev_watch_begin+0x1ec>
  23e968:	mov	w0, #0x1                   	// #1
  23e96c:	bl	2535b0 <log_get_max_level_realm@plt>
  23e970:	cmp	w0, w21
  23e974:	b.ge	23eaf4 <udev_watch_begin+0x368>  // b.tcont
  23e978:	ldr	x8, [x29, #24]
  23e97c:	ldur	x6, [x29, #-32]
  23e980:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e984:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23e988:	str	x8, [sp, #16]
  23e98c:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  23e990:	cmp	x6, #0x0
  23e994:	add	x8, x8, #0xb3b
  23e998:	csel	x5, xzr, x22, eq  // eq = none
  23e99c:	add	x2, x2, #0x1c6
  23e9a0:	add	x4, x4, #0x302
  23e9a4:	stp	xzr, x8, [sp]
  23e9a8:	mov	w3, #0x67                  	// #103
  23e9ac:	mov	w0, w21
  23e9b0:	b	23eab0 <udev_watch_begin+0x324>
  23e9b4:	mov	w20, w0
  23e9b8:	str	xzr, [sp, #40]
  23e9bc:	cbz	x19, 23e9d0 <udev_watch_begin+0x244>
  23e9c0:	mov	w0, #0x1                   	// #1
  23e9c4:	bl	2535b0 <log_get_max_level_realm@plt>
  23e9c8:	cmp	w0, #0x3
  23e9cc:	b.ge	23eb04 <udev_watch_begin+0x378>  // b.tcont
  23e9d0:	ldr	x6, [sp, #40]
  23e9d4:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  23e9d8:	sub	x8, x29, #0x20
  23e9dc:	add	x9, x9, #0xe27
  23e9e0:	cmp	x6, #0x0
  23e9e4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23e9e8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23e9ec:	csel	x5, xzr, x22, eq  // eq = none
  23e9f0:	add	x2, x2, #0x1c6
  23e9f4:	add	x4, x4, #0x302
  23e9f8:	stp	x9, x8, [sp, #8]
  23e9fc:	mov	w0, #0x3                   	// #3
  23ea00:	mov	w3, #0x6e                  	// #110
  23ea04:	b	23eaac <udev_watch_begin+0x320>
  23ea08:	mov	w20, w0
  23ea0c:	str	xzr, [sp, #32]
  23ea10:	cbz	x19, 23ea24 <udev_watch_begin+0x298>
  23ea14:	mov	w0, #0x1                   	// #1
  23ea18:	bl	2535b0 <log_get_max_level_realm@plt>
  23ea1c:	cmp	w0, #0x3
  23ea20:	b.ge	23eb14 <udev_watch_begin+0x388>  // b.tcont
  23ea24:	ldr	x6, [sp, #32]
  23ea28:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  23ea2c:	add	x8, x8, #0x313
  23ea30:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ea34:	cmp	x6, #0x0
  23ea38:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23ea3c:	csel	x5, xzr, x22, eq  // eq = none
  23ea40:	add	x2, x2, #0x1c6
  23ea44:	add	x4, x4, #0x302
  23ea48:	str	x8, [sp, #8]
  23ea4c:	mov	w0, #0x3                   	// #3
  23ea50:	mov	w3, #0x73                  	// #115
  23ea54:	b	23eaac <udev_watch_begin+0x320>
  23ea58:	str	xzr, [sp, #32]
  23ea5c:	bl	253660 <__errno_location@plt>
  23ea60:	ldr	w20, [x0]
  23ea64:	cbz	x19, 23ea78 <udev_watch_begin+0x2ec>
  23ea68:	mov	w0, #0x1                   	// #1
  23ea6c:	bl	2535b0 <log_get_max_level_realm@plt>
  23ea70:	cmp	w0, #0x3
  23ea74:	b.ge	23eb24 <udev_watch_begin+0x398>  // b.tcont
  23ea78:	ldr	x6, [sp, #32]
  23ea7c:	adrp	x9, 213000 <worker_hash_op+0x8ad0>
  23ea80:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ea84:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  23ea88:	cmp	x6, #0x0
  23ea8c:	csel	x5, xzr, x22, eq  // eq = none
  23ea90:	sub	x8, x29, #0x20
  23ea94:	add	x9, x9, #0x3f3
  23ea98:	add	x2, x2, #0x1c6
  23ea9c:	add	x4, x4, #0x302
  23eaa0:	mov	w0, #0x3                   	// #3
  23eaa4:	mov	w3, #0x76                  	// #118
  23eaa8:	stp	x9, x8, [sp, #8]
  23eaac:	str	xzr, [sp]
  23eab0:	mov	w1, w20
  23eab4:	mov	x7, xzr
  23eab8:	bl	2539f0 <log_object_internal@plt>
  23eabc:	ldp	x20, x19, [sp, #128]
  23eac0:	ldp	x22, x21, [sp, #112]
  23eac4:	ldr	x23, [sp, #96]
  23eac8:	ldp	x29, x30, [sp, #80]
  23eacc:	add	sp, sp, #0x90
  23ead0:	ret
  23ead4:	sub	x1, x29, #0x20
  23ead8:	mov	x0, x19
  23eadc:	bl	253a40 <sd_device_get_sysname@plt>
  23eae0:	b	23e7d8 <udev_watch_begin+0x4c>
  23eae4:	sub	x1, x29, #0x20
  23eae8:	mov	x0, x19
  23eaec:	bl	253a40 <sd_device_get_sysname@plt>
  23eaf0:	b	23e908 <udev_watch_begin+0x17c>
  23eaf4:	sub	x1, x29, #0x20
  23eaf8:	mov	x0, x19
  23eafc:	bl	253a40 <sd_device_get_sysname@plt>
  23eb00:	b	23e978 <udev_watch_begin+0x1ec>
  23eb04:	add	x1, sp, #0x28
  23eb08:	mov	x0, x19
  23eb0c:	bl	253a40 <sd_device_get_sysname@plt>
  23eb10:	b	23e9d0 <udev_watch_begin+0x244>
  23eb14:	add	x1, sp, #0x20
  23eb18:	mov	x0, x19
  23eb1c:	bl	253a40 <sd_device_get_sysname@plt>
  23eb20:	b	23ea24 <udev_watch_begin+0x298>
  23eb24:	add	x1, sp, #0x20
  23eb28:	mov	x0, x19
  23eb2c:	bl	253a40 <sd_device_get_sysname@plt>
  23eb30:	b	23ea78 <udev_watch_begin+0x2ec>
  23eb34:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23eb38:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23eb3c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  23eb40:	add	x1, x1, #0x43f
  23eb44:	add	x2, x2, #0x1c6
  23eb48:	add	x4, x4, #0xdf1
  23eb4c:	mov	w0, #0x1                   	// #1
  23eb50:	mov	w3, #0x6b                  	// #107
  23eb54:	bl	253740 <log_assert_failed_realm@plt>

000000000023eb58 <udev_watch_end>:
  23eb58:	sub	sp, sp, #0x60
  23eb5c:	str	x21, [sp, #64]
  23eb60:	adrp	x21, 28e000 <string_hash_ops+0xfe38>
  23eb64:	ldr	w8, [x21, #500]
  23eb68:	stp	x29, x30, [sp, #48]
  23eb6c:	stp	x20, x19, [sp, #80]
  23eb70:	add	x29, sp, #0x30
  23eb74:	tbnz	w8, #31, 23ec38 <udev_watch_end+0xe0>
  23eb78:	add	x1, x29, #0x1c
  23eb7c:	mov	x19, x0
  23eb80:	bl	254760 <device_get_watch_handle@plt>
  23eb84:	cmn	w0, #0x2
  23eb88:	b.eq	23ec30 <udev_watch_end+0xd8>  // b.none
  23eb8c:	mov	w20, w0
  23eb90:	tbnz	w0, #31, 23ec80 <udev_watch_end+0x128>
  23eb94:	str	xzr, [sp, #16]
  23eb98:	cbz	x19, 23ebac <udev_watch_end+0x54>
  23eb9c:	mov	w0, #0x1                   	// #1
  23eba0:	bl	2535b0 <log_get_max_level_realm@plt>
  23eba4:	cmp	w0, #0x7
  23eba8:	b.ge	23ecf0 <udev_watch_end+0x198>  // b.tcont
  23ebac:	ldr	x6, [sp, #16]
  23ebb0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23ebb4:	add	x8, x8, #0xb64
  23ebb8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ebbc:	cmp	x6, #0x0
  23ebc0:	csel	x5, xzr, x8, eq  // eq = none
  23ebc4:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23ebc8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23ebcc:	add	x8, x8, #0x819
  23ebd0:	add	x2, x2, #0x1c6
  23ebd4:	add	x4, x4, #0x538
  23ebd8:	mov	w0, #0x7                   	// #7
  23ebdc:	mov	w3, #0x89                  	// #137
  23ebe0:	mov	w1, wzr
  23ebe4:	mov	x7, xzr
  23ebe8:	stp	xzr, x8, [sp]
  23ebec:	bl	2539f0 <log_object_internal@plt>
  23ebf0:	ldr	w0, [x21, #500]
  23ebf4:	ldr	w1, [x29, #28]
  23ebf8:	bl	254770 <inotify_rm_watch@plt>
  23ebfc:	ldr	w3, [x29, #28]
  23ec00:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  23ec04:	add	x2, x2, #0x750
  23ec08:	add	x0, sp, #0x10
  23ec0c:	mov	w1, #0x1c                  	// #28
  23ec10:	bl	2542f0 <snprintf@plt>
  23ec14:	cmp	w0, #0x1c
  23ec18:	b.cs	23ed10 <udev_watch_end+0x1b8>  // b.hs, b.nlast
  23ec1c:	add	x0, sp, #0x10
  23ec20:	bl	253960 <unlink@plt>
  23ec24:	mov	w1, #0xffffffff            	// #-1
  23ec28:	mov	x0, x19
  23ec2c:	bl	254750 <device_set_watch_handle@plt>
  23ec30:	mov	w0, wzr
  23ec34:	b	23ecdc <udev_watch_end+0x184>
  23ec38:	mov	w0, #0x1                   	// #1
  23ec3c:	bl	2535b0 <log_get_max_level_realm@plt>
  23ec40:	cmp	w0, #0x7
  23ec44:	b.lt	23ec78 <udev_watch_end+0x120>  // b.tstop
  23ec48:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ec4c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23ec50:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  23ec54:	mov	w1, #0x16                  	// #22
  23ec58:	add	x2, x2, #0x1c6
  23ec5c:	add	x4, x4, #0x538
  23ec60:	add	x5, x5, #0x1c
  23ec64:	mov	w0, #0x407                 	// #1031
  23ec68:	movk	w1, #0x4000, lsl #16
  23ec6c:	mov	w3, #0x81                  	// #129
  23ec70:	bl	2535c0 <log_internal_realm@plt>
  23ec74:	b	23ecdc <udev_watch_end+0x184>
  23ec78:	mov	w0, #0xffffffea            	// #-22
  23ec7c:	b	23ecdc <udev_watch_end+0x184>
  23ec80:	str	xzr, [sp, #16]
  23ec84:	cbz	x19, 23ec98 <udev_watch_end+0x140>
  23ec88:	mov	w0, #0x1                   	// #1
  23ec8c:	bl	2535b0 <log_get_max_level_realm@plt>
  23ec90:	cmp	w0, #0x7
  23ec94:	b.ge	23ed00 <udev_watch_end+0x1a8>  // b.tcont
  23ec98:	ldr	x6, [sp, #16]
  23ec9c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23eca0:	add	x8, x8, #0xb64
  23eca4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23eca8:	cmp	x6, #0x0
  23ecac:	csel	x5, xzr, x8, eq  // eq = none
  23ecb0:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  23ecb4:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23ecb8:	add	x8, x8, #0x38
  23ecbc:	add	x2, x2, #0x1c6
  23ecc0:	add	x4, x4, #0x538
  23ecc4:	mov	w0, #0x7                   	// #7
  23ecc8:	mov	w3, #0x87                  	// #135
  23eccc:	mov	w1, w20
  23ecd0:	mov	x7, xzr
  23ecd4:	stp	xzr, x8, [sp]
  23ecd8:	bl	2539f0 <log_object_internal@plt>
  23ecdc:	ldp	x20, x19, [sp, #80]
  23ece0:	ldr	x21, [sp, #64]
  23ece4:	ldp	x29, x30, [sp, #48]
  23ece8:	add	sp, sp, #0x60
  23ecec:	ret
  23ecf0:	add	x1, sp, #0x10
  23ecf4:	mov	x0, x19
  23ecf8:	bl	253a40 <sd_device_get_sysname@plt>
  23ecfc:	b	23ebac <udev_watch_end+0x54>
  23ed00:	add	x1, sp, #0x10
  23ed04:	mov	x0, x19
  23ed08:	bl	253a40 <sd_device_get_sysname@plt>
  23ed0c:	b	23ec98 <udev_watch_end+0x140>
  23ed10:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23ed14:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ed18:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23ed1c:	add	x1, x1, #0x43f
  23ed20:	add	x2, x2, #0x1c6
  23ed24:	add	x4, x4, #0x1d4
  23ed28:	mov	w0, #0x1                   	// #1
  23ed2c:	mov	w3, #0x8c                  	// #140
  23ed30:	bl	253740 <log_assert_failed_realm@plt>

000000000023ed34 <udev_watch_lookup>:
  23ed34:	sub	sp, sp, #0x50
  23ed38:	stp	x29, x30, [sp, #48]
  23ed3c:	stp	x20, x19, [sp, #64]
  23ed40:	add	x29, sp, #0x30
  23ed44:	str	xzr, [sp, #8]
  23ed48:	cbz	x1, 23ef04 <udev_watch_lookup+0x1d0>
  23ed4c:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  23ed50:	ldr	w8, [x8, #500]
  23ed54:	tbnz	w8, #31, 23edb8 <udev_watch_lookup+0x84>
  23ed58:	mov	w3, w0
  23ed5c:	tbnz	w0, #31, 23edf4 <udev_watch_lookup+0xc0>
  23ed60:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  23ed64:	mov	x19, x1
  23ed68:	add	x2, x2, #0x750
  23ed6c:	add	x0, sp, #0x14
  23ed70:	mov	w1, #0x1c                  	// #28
  23ed74:	bl	2542f0 <snprintf@plt>
  23ed78:	cmp	w0, #0x1c
  23ed7c:	b.cs	23ef28 <udev_watch_lookup+0x1f4>  // b.hs, b.nlast
  23ed80:	add	x0, sp, #0x14
  23ed84:	add	x1, sp, #0x8
  23ed88:	bl	254360 <readlink_malloc@plt>
  23ed8c:	cmn	w0, #0x2
  23ed90:	b.eq	23edb0 <udev_watch_lookup+0x7c>  // b.none
  23ed94:	mov	w20, w0
  23ed98:	tbnz	w0, #31, 23ee58 <udev_watch_lookup+0x124>
  23ed9c:	ldr	x1, [sp, #8]
  23eda0:	mov	x0, x19
  23eda4:	bl	2543c0 <sd_device_new_from_device_id@plt>
  23eda8:	cmn	w0, #0x13
  23edac:	b.ne	23ee94 <udev_watch_lookup+0x160>  // b.any
  23edb0:	mov	w19, wzr
  23edb4:	b	23ee3c <udev_watch_lookup+0x108>
  23edb8:	mov	w0, #0x1                   	// #1
  23edbc:	bl	2535b0 <log_get_max_level_realm@plt>
  23edc0:	cmp	w0, #0x7
  23edc4:	b.lt	23ee38 <udev_watch_lookup+0x104>  // b.tstop
  23edc8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23edcc:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23edd0:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  23edd4:	mov	w1, #0x16                  	// #22
  23edd8:	add	x2, x2, #0x1c6
  23eddc:	add	x4, x4, #0x1f4
  23ede0:	add	x5, x5, #0x1c
  23ede4:	mov	w0, #0x407                 	// #1031
  23ede8:	movk	w1, #0x4000, lsl #16
  23edec:	mov	w3, #0x9d                  	// #157
  23edf0:	b	23ee2c <udev_watch_lookup+0xf8>
  23edf4:	mov	w0, #0x1                   	// #1
  23edf8:	bl	2535b0 <log_get_max_level_realm@plt>
  23edfc:	cmp	w0, #0x7
  23ee00:	b.lt	23ee38 <udev_watch_lookup+0x104>  // b.tstop
  23ee04:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ee08:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23ee0c:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  23ee10:	mov	w1, #0x16                  	// #22
  23ee14:	add	x2, x2, #0x1c6
  23ee18:	add	x4, x4, #0x1f4
  23ee1c:	add	x5, x5, #0x56a
  23ee20:	mov	w0, #0x407                 	// #1031
  23ee24:	movk	w1, #0x4000, lsl #16
  23ee28:	mov	w3, #0xa1                  	// #161
  23ee2c:	bl	2535c0 <log_internal_realm@plt>
  23ee30:	mov	w19, w0
  23ee34:	b	23ee3c <udev_watch_lookup+0x108>
  23ee38:	mov	w19, #0xffffffea            	// #-22
  23ee3c:	add	x0, sp, #0x8
  23ee40:	bl	23e774 <freep>
  23ee44:	mov	w0, w19
  23ee48:	ldp	x20, x19, [sp, #64]
  23ee4c:	ldp	x29, x30, [sp, #48]
  23ee50:	add	sp, sp, #0x50
  23ee54:	ret
  23ee58:	mov	w0, #0x1                   	// #1
  23ee5c:	bl	2535b0 <log_get_max_level_realm@plt>
  23ee60:	cmp	w0, #0x7
  23ee64:	b.lt	23eea4 <udev_watch_lookup+0x170>  // b.tstop
  23ee68:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ee6c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23ee70:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  23ee74:	add	x2, x2, #0x1c6
  23ee78:	add	x4, x4, #0x1f4
  23ee7c:	add	x5, x5, #0x79a
  23ee80:	add	x6, sp, #0x14
  23ee84:	mov	w0, #0x407                 	// #1031
  23ee88:	mov	w3, #0xa8                  	// #168
  23ee8c:	mov	w1, w20
  23ee90:	b	23eee8 <udev_watch_lookup+0x1b4>
  23ee94:	mov	w19, w0
  23ee98:	tbnz	w0, #31, 23eeb0 <udev_watch_lookup+0x17c>
  23ee9c:	mov	w19, #0x1                   	// #1
  23eea0:	b	23ee3c <udev_watch_lookup+0x108>
  23eea4:	mov	w8, wzr
  23eea8:	neg	w9, w20
  23eeac:	b	23eefc <udev_watch_lookup+0x1c8>
  23eeb0:	mov	w0, #0x1                   	// #1
  23eeb4:	bl	2535b0 <log_get_max_level_realm@plt>
  23eeb8:	cmp	w0, #0x7
  23eebc:	b.lt	23eef4 <udev_watch_lookup+0x1c0>  // b.tstop
  23eec0:	ldr	x6, [sp, #8]
  23eec4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23eec8:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  23eecc:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  23eed0:	add	x2, x2, #0x1c6
  23eed4:	add	x4, x4, #0x1f4
  23eed8:	add	x5, x5, #0x270
  23eedc:	mov	w0, #0x407                 	// #1031
  23eee0:	mov	w3, #0xae                  	// #174
  23eee4:	mov	w1, w19
  23eee8:	bl	2535c0 <log_internal_realm@plt>
  23eeec:	mov	w19, w0
  23eef0:	b	23ee3c <udev_watch_lookup+0x108>
  23eef4:	mov	w8, wzr
  23eef8:	neg	w9, w19
  23eefc:	sub	w19, w8, w9, uxtb
  23ef00:	b	23ee3c <udev_watch_lookup+0x108>
  23ef04:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  23ef08:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ef0c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23ef10:	add	x1, x1, #0xb2b
  23ef14:	add	x2, x2, #0x1c6
  23ef18:	add	x4, x4, #0x771
  23ef1c:	mov	w0, #0x1                   	// #1
  23ef20:	mov	w3, #0x99                  	// #153
  23ef24:	bl	253740 <log_assert_failed_realm@plt>
  23ef28:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23ef2c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  23ef30:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23ef34:	add	x1, x1, #0x43f
  23ef38:	add	x2, x2, #0x1c6
  23ef3c:	add	x4, x4, #0x771
  23ef40:	mov	w0, #0x1                   	// #1
  23ef44:	mov	w3, #0xa3                  	// #163
  23ef48:	bl	253740 <log_assert_failed_realm@plt>

000000000023ef4c <udev_builtin_init>:
  23ef4c:	stp	x29, x30, [sp, #-48]!
  23ef50:	stp	x20, x19, [sp, #32]
  23ef54:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  23ef58:	ldrb	w8, [x19, #534]
  23ef5c:	str	x21, [sp, #16]
  23ef60:	mov	x29, sp
  23ef64:	tbnz	w8, #0, 23efa0 <udev_builtin_init+0x54>
  23ef68:	adrp	x21, 265000 <__lxstat64@plt+0xfe00>
  23ef6c:	mov	x20, xzr
  23ef70:	add	x21, x21, #0x458
  23ef74:	b	23ef84 <udev_builtin_init+0x38>
  23ef78:	add	x20, x20, #0x8
  23ef7c:	cmp	x20, #0x58
  23ef80:	b.eq	23ef98 <udev_builtin_init+0x4c>  // b.none
  23ef84:	ldr	x8, [x21, x20]
  23ef88:	ldr	x8, [x8, #24]
  23ef8c:	cbz	x8, 23ef78 <udev_builtin_init+0x2c>
  23ef90:	blr	x8
  23ef94:	b	23ef78 <udev_builtin_init+0x2c>
  23ef98:	mov	w8, #0x1                   	// #1
  23ef9c:	strb	w8, [x19, #534]
  23efa0:	ldp	x20, x19, [sp, #32]
  23efa4:	ldr	x21, [sp, #16]
  23efa8:	ldp	x29, x30, [sp], #48
  23efac:	ret

000000000023efb0 <udev_builtin_exit>:
  23efb0:	stp	x29, x30, [sp, #-48]!
  23efb4:	stp	x20, x19, [sp, #32]
  23efb8:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  23efbc:	ldrb	w8, [x19, #534]
  23efc0:	str	x21, [sp, #16]
  23efc4:	mov	x29, sp
  23efc8:	cmp	w8, #0x1
  23efcc:	b.ne	23f004 <udev_builtin_exit+0x54>  // b.any
  23efd0:	adrp	x21, 265000 <__lxstat64@plt+0xfe00>
  23efd4:	mov	x20, xzr
  23efd8:	add	x21, x21, #0x458
  23efdc:	b	23efec <udev_builtin_exit+0x3c>
  23efe0:	add	x20, x20, #0x8
  23efe4:	cmp	x20, #0x58
  23efe8:	b.eq	23f000 <udev_builtin_exit+0x50>  // b.none
  23efec:	ldr	x8, [x21, x20]
  23eff0:	ldr	x8, [x8, #32]
  23eff4:	cbz	x8, 23efe0 <udev_builtin_exit+0x30>
  23eff8:	blr	x8
  23effc:	b	23efe0 <udev_builtin_exit+0x30>
  23f000:	strb	wzr, [x19, #534]
  23f004:	ldp	x20, x19, [sp, #32]
  23f008:	ldr	x21, [sp, #16]
  23f00c:	ldp	x29, x30, [sp], #48
  23f010:	ret

000000000023f014 <udev_builtin_validate>:
  23f014:	stp	x29, x30, [sp, #-32]!
  23f018:	stp	x20, x19, [sp, #16]
  23f01c:	adrp	x20, 265000 <__lxstat64@plt+0xfe00>
  23f020:	mov	x19, xzr
  23f024:	add	x20, x20, #0x458
  23f028:	mov	x29, sp
  23f02c:	b	23f03c <udev_builtin_validate+0x28>
  23f030:	add	x19, x19, #0x8
  23f034:	cmp	x19, #0x58
  23f038:	b.eq	23f058 <udev_builtin_validate+0x44>  // b.none
  23f03c:	ldr	x8, [x20, x19]
  23f040:	ldr	x8, [x8, #40]
  23f044:	cbz	x8, 23f030 <udev_builtin_validate+0x1c>
  23f048:	blr	x8
  23f04c:	tbz	w0, #0, 23f030 <udev_builtin_validate+0x1c>
  23f050:	mov	w0, #0x1                   	// #1
  23f054:	b	23f05c <udev_builtin_validate+0x48>
  23f058:	mov	w0, wzr
  23f05c:	ldp	x20, x19, [sp, #16]
  23f060:	ldp	x29, x30, [sp], #32
  23f064:	ret

000000000023f068 <udev_builtin_list>:
  23f068:	stp	x29, x30, [sp, #-48]!
  23f06c:	stp	x22, x21, [sp, #16]
  23f070:	stp	x20, x19, [sp, #32]
  23f074:	adrp	x22, 27d000 <builtin_blkid.options+0x50>
  23f078:	ldr	x22, [x22, #744]
  23f07c:	adrp	x21, 265000 <__lxstat64@plt+0xfe00>
  23f080:	adrp	x19, 20e000 <worker_hash_op+0x3ad0>
  23f084:	mov	x20, xzr
  23f088:	add	x21, x21, #0x458
  23f08c:	add	x19, x19, #0x9ae
  23f090:	mov	x29, sp
  23f094:	ldr	x8, [x21, x20]
  23f098:	ldr	x0, [x22]
  23f09c:	mov	x1, x19
  23f0a0:	ldr	x2, [x8]
  23f0a4:	ldr	x3, [x8, #16]
  23f0a8:	bl	254780 <fprintf@plt>
  23f0ac:	add	x20, x20, #0x8
  23f0b0:	cmp	x20, #0x58
  23f0b4:	b.ne	23f094 <udev_builtin_list+0x2c>  // b.any
  23f0b8:	ldp	x20, x19, [sp, #32]
  23f0bc:	ldp	x22, x21, [sp, #16]
  23f0c0:	ldp	x29, x30, [sp], #48
  23f0c4:	ret

000000000023f0c8 <udev_builtin_name>:
  23f0c8:	stp	x29, x30, [sp, #-16]!
  23f0cc:	cmp	w0, #0xb
  23f0d0:	mov	x29, sp
  23f0d4:	b.cs	23f0f0 <udev_builtin_name+0x28>  // b.hs, b.nlast
  23f0d8:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  23f0dc:	add	x8, x8, #0x458
  23f0e0:	ldr	x8, [x8, w0, sxtw #3]
  23f0e4:	ldr	x0, [x8]
  23f0e8:	ldp	x29, x30, [sp], #16
  23f0ec:	ret
  23f0f0:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  23f0f4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f0f8:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  23f0fc:	add	x1, x1, #0xa37
  23f100:	add	x2, x2, #0x33b
  23f104:	add	x4, x4, #0xc4b
  23f108:	mov	w0, #0x1                   	// #1
  23f10c:	mov	w3, #0x4e                  	// #78
  23f110:	bl	253740 <log_assert_failed_realm@plt>

000000000023f114 <udev_builtin_run_once>:
  23f114:	stp	x29, x30, [sp, #-16]!
  23f118:	cmp	w0, #0xb
  23f11c:	mov	x29, sp
  23f120:	b.cs	23f13c <udev_builtin_run_once+0x28>  // b.hs, b.nlast
  23f124:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  23f128:	add	x8, x8, #0x458
  23f12c:	ldr	x8, [x8, w0, sxtw #3]
  23f130:	ldrb	w0, [x8, #48]
  23f134:	ldp	x29, x30, [sp], #16
  23f138:	ret
  23f13c:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  23f140:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f144:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  23f148:	add	x1, x1, #0xa37
  23f14c:	add	x2, x2, #0x33b
  23f150:	add	x4, x4, #0x9db
  23f154:	mov	w0, #0x1                   	// #1
  23f158:	mov	w3, #0x57                  	// #87
  23f15c:	bl	253740 <log_assert_failed_realm@plt>

000000000023f160 <udev_builtin_lookup>:
  23f160:	stp	x29, x30, [sp, #-48]!
  23f164:	stp	x22, x21, [sp, #16]
  23f168:	stp	x20, x19, [sp, #32]
  23f16c:	mov	x29, sp
  23f170:	cbz	x0, 23f1e4 <udev_builtin_lookup+0x84>
  23f174:	adrp	x21, 218000 <worker_hash_op+0xdad0>
  23f178:	add	x21, x21, #0x33a
  23f17c:	mov	x1, x21
  23f180:	mov	x19, x0
  23f184:	bl	254230 <strspn@plt>
  23f188:	add	x20, x19, x0
  23f18c:	mov	x0, x20
  23f190:	mov	x1, x21
  23f194:	bl	254790 <strcspn@plt>
  23f198:	adrp	x22, 265000 <__lxstat64@plt+0xfe00>
  23f19c:	mov	x21, x0
  23f1a0:	mov	x19, xzr
  23f1a4:	add	x22, x22, #0x458
  23f1a8:	ldr	x8, [x22, x19, lsl #3]
  23f1ac:	mov	x1, x20
  23f1b0:	mov	x2, x21
  23f1b4:	ldr	x0, [x8]
  23f1b8:	bl	2539b0 <strncmp@plt>
  23f1bc:	cbz	w0, 23f1d0 <udev_builtin_lookup+0x70>
  23f1c0:	add	x19, x19, #0x1
  23f1c4:	cmp	x19, #0xb
  23f1c8:	b.ne	23f1a8 <udev_builtin_lookup+0x48>  // b.any
  23f1cc:	mov	w19, #0xffffffff            	// #-1
  23f1d0:	mov	w0, w19
  23f1d4:	ldp	x20, x19, [sp, #32]
  23f1d8:	ldp	x22, x21, [sp, #16]
  23f1dc:	ldp	x29, x30, [sp], #48
  23f1e0:	ret
  23f1e4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  23f1e8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f1ec:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  23f1f0:	add	x1, x1, #0x69d
  23f1f4:	add	x2, x2, #0x33b
  23f1f8:	add	x4, x4, #0xa5b
  23f1fc:	mov	w0, #0x1                   	// #1
  23f200:	mov	w3, #0x63                  	// #99
  23f204:	bl	253740 <log_assert_failed_realm@plt>

000000000023f208 <udev_builtin_run>:
  23f208:	sub	sp, sp, #0x40
  23f20c:	stp	x29, x30, [sp, #16]
  23f210:	stp	x22, x21, [sp, #32]
  23f214:	stp	x20, x19, [sp, #48]
  23f218:	add	x29, sp, #0x10
  23f21c:	str	xzr, [sp, #8]
  23f220:	cbz	x0, 23f2bc <udev_builtin_run+0xb4>
  23f224:	mov	w21, w1
  23f228:	cmp	w1, #0xb
  23f22c:	b.cs	23f2e0 <udev_builtin_run+0xd8>  // b.hs, b.nlast
  23f230:	mov	x8, x2
  23f234:	cbz	x2, 23f304 <udev_builtin_run+0xfc>
  23f238:	mov	x20, x0
  23f23c:	mov	w2, #0x3                   	// #3
  23f240:	mov	x0, x8
  23f244:	mov	x1, xzr
  23f248:	mov	w19, w3
  23f24c:	bl	2540e0 <strv_split_full@plt>
  23f250:	str	x0, [sp, #8]
  23f254:	cbz	x0, 23f298 <udev_builtin_run+0x90>
  23f258:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  23f25c:	adrp	x9, 27d000 <builtin_blkid.options+0x50>
  23f260:	add	x8, x8, #0x458
  23f264:	ldr	x9, [x9, #752]
  23f268:	ldr	x8, [x8, w21, sxtw #3]
  23f26c:	mov	x22, x0
  23f270:	str	wzr, [x9]
  23f274:	ldr	x21, [x8, #8]
  23f278:	bl	2547a0 <strv_length@plt>
  23f27c:	mov	x1, x0
  23f280:	and	w3, w19, #0x1
  23f284:	mov	x0, x20
  23f288:	mov	x2, x22
  23f28c:	blr	x21
  23f290:	mov	w19, w0
  23f294:	b	23f29c <udev_builtin_run+0x94>
  23f298:	mov	w19, #0xfffffff4            	// #-12
  23f29c:	add	x0, sp, #0x8
  23f2a0:	bl	23f328 <strv_freep>
  23f2a4:	mov	w0, w19
  23f2a8:	ldp	x20, x19, [sp, #48]
  23f2ac:	ldp	x22, x21, [sp, #32]
  23f2b0:	ldp	x29, x30, [sp, #16]
  23f2b4:	add	sp, sp, #0x40
  23f2b8:	ret
  23f2bc:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23f2c0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f2c4:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23f2c8:	add	x1, x1, #0x9e6
  23f2cc:	add	x2, x2, #0x33b
  23f2d0:	add	x4, x4, #0x7b7
  23f2d4:	mov	w0, #0x1                   	// #1
  23f2d8:	mov	w3, #0x71                  	// #113
  23f2dc:	bl	253740 <log_assert_failed_realm@plt>
  23f2e0:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  23f2e4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f2e8:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23f2ec:	add	x1, x1, #0xa37
  23f2f0:	add	x2, x2, #0x33b
  23f2f4:	add	x4, x4, #0x7b7
  23f2f8:	mov	w0, #0x1                   	// #1
  23f2fc:	mov	w3, #0x72                  	// #114
  23f300:	bl	253740 <log_assert_failed_realm@plt>
  23f304:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  23f308:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f30c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  23f310:	add	x1, x1, #0x69d
  23f314:	add	x2, x2, #0x33b
  23f318:	add	x4, x4, #0x7b7
  23f31c:	mov	w0, #0x1                   	// #1
  23f320:	mov	w3, #0x73                  	// #115
  23f324:	bl	253740 <log_assert_failed_realm@plt>

000000000023f328 <strv_freep>:
  23f328:	stp	x29, x30, [sp, #-16]!
  23f32c:	ldr	x0, [x0]
  23f330:	mov	x29, sp
  23f334:	cbz	x0, 23f33c <strv_freep+0x14>
  23f338:	bl	254150 <strv_free@plt>
  23f33c:	ldp	x29, x30, [sp], #16
  23f340:	ret

000000000023f344 <udev_builtin_add_property>:
  23f344:	sub	sp, sp, #0x70
  23f348:	stp	x29, x30, [sp, #48]
  23f34c:	stp	x24, x23, [sp, #64]
  23f350:	stp	x22, x21, [sp, #80]
  23f354:	stp	x20, x19, [sp, #96]
  23f358:	add	x29, sp, #0x30
  23f35c:	cbz	x0, 23f460 <udev_builtin_add_property+0x11c>
  23f360:	mov	x19, x2
  23f364:	cbz	x2, 23f484 <udev_builtin_add_property+0x140>
  23f368:	mov	w23, w1
  23f36c:	mov	x1, x19
  23f370:	mov	x2, x3
  23f374:	mov	x20, x3
  23f378:	mov	x22, x0
  23f37c:	bl	2541a0 <device_add_property@plt>
  23f380:	tbnz	w0, #31, 23f3ac <udev_builtin_add_property+0x68>
  23f384:	tbz	w23, #0, 23f3a4 <udev_builtin_add_property+0x60>
  23f388:	mov	x0, x20
  23f38c:	bl	23f4a8 <strempty>
  23f390:	mov	x2, x0
  23f394:	adrp	x0, 215000 <worker_hash_op+0xaad0>
  23f398:	add	x0, x0, #0x2c1
  23f39c:	mov	x1, x19
  23f3a0:	bl	253990 <printf@plt>
  23f3a4:	mov	w0, wzr
  23f3a8:	b	23f438 <udev_builtin_add_property+0xf4>
  23f3ac:	mov	w21, w0
  23f3b0:	mov	w0, #0x1                   	// #1
  23f3b4:	stur	xzr, [x29, #-8]
  23f3b8:	bl	2535b0 <log_get_max_level_realm@plt>
  23f3bc:	cmp	w0, #0x7
  23f3c0:	b.ge	23f450 <udev_builtin_add_property+0x10c>  // b.tcont
  23f3c4:	ldur	x22, [x29, #-8]
  23f3c8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23f3cc:	add	x8, x8, #0xb64
  23f3d0:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  23f3d4:	adrp	x10, 216000 <worker_hash_op+0xbad0>
  23f3d8:	cmp	x22, #0x0
  23f3dc:	add	x9, x9, #0xd48
  23f3e0:	add	x10, x10, #0x7fa
  23f3e4:	csel	x23, xzr, x8, eq  // eq = none
  23f3e8:	cmp	x20, #0x0
  23f3ec:	mov	x0, x20
  23f3f0:	csel	x24, x10, x9, eq  // eq = none
  23f3f4:	bl	23f4a8 <strempty>
  23f3f8:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23f3fc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f400:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  23f404:	stp	x24, x0, [sp, #24]
  23f408:	add	x8, x8, #0x1dc
  23f40c:	add	x2, x2, #0x33b
  23f410:	add	x4, x4, #0x2a7
  23f414:	mov	w0, #0x7                   	// #7
  23f418:	mov	w3, #0x8a                  	// #138
  23f41c:	mov	w1, w21
  23f420:	mov	x5, x23
  23f424:	mov	x6, x22
  23f428:	mov	x7, xzr
  23f42c:	stp	x8, x19, [sp, #8]
  23f430:	str	xzr, [sp]
  23f434:	bl	2539f0 <log_object_internal@plt>
  23f438:	ldp	x20, x19, [sp, #96]
  23f43c:	ldp	x22, x21, [sp, #80]
  23f440:	ldp	x24, x23, [sp, #64]
  23f444:	ldp	x29, x30, [sp, #48]
  23f448:	add	sp, sp, #0x70
  23f44c:	ret
  23f450:	sub	x1, x29, #0x8
  23f454:	mov	x0, x22
  23f458:	bl	253a40 <sd_device_get_sysname@plt>
  23f45c:	b	23f3c4 <udev_builtin_add_property+0x80>
  23f460:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23f464:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f468:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23f46c:	add	x1, x1, #0x9e6
  23f470:	add	x2, x2, #0x33b
  23f474:	add	x4, x4, #0x29f
  23f478:	mov	w0, #0x1                   	// #1
  23f47c:	mov	w3, #0x84                  	// #132
  23f480:	bl	253740 <log_assert_failed_realm@plt>
  23f484:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  23f488:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  23f48c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  23f490:	add	x1, x1, #0xc4b
  23f494:	add	x2, x2, #0x33b
  23f498:	add	x4, x4, #0x29f
  23f49c:	mov	w0, #0x1                   	// #1
  23f4a0:	mov	w3, #0x85                  	// #133
  23f4a4:	bl	253740 <log_assert_failed_realm@plt>

000000000023f4a8 <strempty>:
  23f4a8:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23f4ac:	add	x8, x8, #0x7fa
  23f4b0:	cmp	x0, #0x0
  23f4b4:	csel	x0, x8, x0, eq  // eq = none
  23f4b8:	ret

000000000023f4bc <builtin_btrfs>:
  23f4bc:	stp	x29, x30, [sp, #-64]!
  23f4c0:	str	x28, [sp, #16]
  23f4c4:	stp	x22, x21, [sp, #32]
  23f4c8:	stp	x20, x19, [sp, #48]
  23f4cc:	mov	x29, sp
  23f4d0:	sub	sp, sp, #0x1, lsl #12
  23f4d4:	sub	sp, sp, #0x20
  23f4d8:	mov	x21, x2
  23f4dc:	mov	w22, w1
  23f4e0:	mov	x19, x0
  23f4e4:	add	x0, sp, #0x20
  23f4e8:	mov	w2, #0x1000                	// #4096
  23f4ec:	mov	w1, wzr
  23f4f0:	mov	w20, w3
  23f4f4:	bl	2545b0 <memset@plt>
  23f4f8:	mov	w8, #0xffffffff            	// #-1
  23f4fc:	cmp	w22, #0x3
  23f500:	str	w8, [x29, #28]
  23f504:	b.ne	23f51c <builtin_btrfs+0x60>  // b.any
  23f508:	ldr	x0, [x21, #8]
  23f50c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23f510:	add	x1, x1, #0x55f
  23f514:	bl	253bc0 <strcmp@plt>
  23f518:	cbz	w0, 23f5a8 <builtin_btrfs+0xec>
  23f51c:	str	xzr, [sp, #24]
  23f520:	cbz	x19, 23f534 <builtin_btrfs+0x78>
  23f524:	mov	w0, #0x1                   	// #1
  23f528:	bl	2535b0 <log_get_max_level_realm@plt>
  23f52c:	cmp	w0, #0x3
  23f530:	b.ge	23f6e0 <builtin_btrfs+0x224>  // b.tcont
  23f534:	ldr	x6, [sp, #24]
  23f538:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23f53c:	add	x8, x8, #0xb64
  23f540:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23f544:	cmp	x6, #0x0
  23f548:	csel	x5, xzr, x8, eq  // eq = none
  23f54c:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  23f550:	add	x8, x8, #0xba7
  23f554:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  23f558:	mov	w1, #0x16                  	// #22
  23f55c:	add	x2, x2, #0x785
  23f560:	add	x4, x4, #0x828
  23f564:	stp	xzr, x8, [sp]
  23f568:	mov	w0, #0x3                   	// #3
  23f56c:	movk	w1, #0x4000, lsl #16
  23f570:	mov	w3, #0x15                  	// #21
  23f574:	mov	x7, xzr
  23f578:	bl	2539f0 <log_object_internal@plt>
  23f57c:	mov	w19, w0
  23f580:	add	x0, x29, #0x1c
  23f584:	bl	23f710 <closep>
  23f588:	mov	w0, w19
  23f58c:	add	sp, sp, #0x1, lsl #12
  23f590:	add	sp, sp, #0x20
  23f594:	ldp	x20, x19, [sp, #48]
  23f598:	ldp	x22, x21, [sp, #32]
  23f59c:	ldr	x28, [sp, #16]
  23f5a0:	ldp	x29, x30, [sp], #64
  23f5a4:	ret
  23f5a8:	adrp	x0, 20e000 <worker_hash_op+0x3ad0>
  23f5ac:	mov	w1, #0x2                   	// #2
  23f5b0:	add	x0, x0, #0x353
  23f5b4:	movk	w1, #0x8, lsl #16
  23f5b8:	bl	253d70 <open64@plt>
  23f5bc:	str	w0, [x29, #28]
  23f5c0:	tbnz	w0, #31, 23f620 <builtin_btrfs+0x164>
  23f5c4:	ldr	x2, [x21, #16]
  23f5c8:	add	x8, sp, #0x20
  23f5cc:	mov	w22, w0
  23f5d0:	add	x0, x8, #0x8
  23f5d4:	mov	w1, #0xff8                 	// #4088
  23f5d8:	bl	253f50 <strscpy@plt>
  23f5dc:	mov	w1, #0x9427                	// #37927
  23f5e0:	add	x2, sp, #0x20
  23f5e4:	movk	w1, #0x9000, lsl #16
  23f5e8:	mov	w0, w22
  23f5ec:	bl	253da0 <ioctl@plt>
  23f5f0:	tbnz	w0, #31, 23f67c <builtin_btrfs+0x1c0>
  23f5f4:	cmp	w0, #0x0
  23f5f8:	cset	w0, eq  // eq = none
  23f5fc:	bl	23f728 <one_zero>
  23f600:	adrp	x2, 213000 <worker_hash_op+0x8ad0>
  23f604:	mov	x3, x0
  23f608:	and	w1, w20, #0x1
  23f60c:	add	x2, x2, #0x413
  23f610:	mov	x0, x19
  23f614:	bl	23f344 <udev_builtin_add_property>
  23f618:	mov	w19, wzr
  23f61c:	b	23f580 <builtin_btrfs+0xc4>
  23f620:	str	xzr, [sp, #24]
  23f624:	bl	253660 <__errno_location@plt>
  23f628:	ldr	w20, [x0]
  23f62c:	cbz	x19, 23f640 <builtin_btrfs+0x184>
  23f630:	mov	w0, #0x1                   	// #1
  23f634:	bl	2535b0 <log_get_max_level_realm@plt>
  23f638:	cmp	w0, #0x7
  23f63c:	b.ge	23f6f0 <builtin_btrfs+0x234>  // b.tcont
  23f640:	ldr	x6, [sp, #24]
  23f644:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23f648:	add	x8, x8, #0xb64
  23f64c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23f650:	cmp	x6, #0x0
  23f654:	csel	x5, xzr, x8, eq  // eq = none
  23f658:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23f65c:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  23f660:	add	x8, x8, #0xedf
  23f664:	add	x2, x2, #0x785
  23f668:	add	x4, x4, #0x828
  23f66c:	mov	w0, #0x7                   	// #7
  23f670:	mov	w3, #0x19                  	// #25
  23f674:	str	x8, [sp, #8]
  23f678:	b	23f6d4 <builtin_btrfs+0x218>
  23f67c:	str	xzr, [sp, #24]
  23f680:	bl	253660 <__errno_location@plt>
  23f684:	ldr	w20, [x0]
  23f688:	cbz	x19, 23f69c <builtin_btrfs+0x1e0>
  23f68c:	mov	w0, #0x1                   	// #1
  23f690:	bl	2535b0 <log_get_max_level_realm@plt>
  23f694:	cmp	w0, #0x7
  23f698:	b.ge	23f700 <builtin_btrfs+0x244>  // b.tcont
  23f69c:	ldr	x6, [sp, #24]
  23f6a0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23f6a4:	add	x8, x8, #0xb64
  23f6a8:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23f6ac:	cmp	x6, #0x0
  23f6b0:	csel	x5, xzr, x8, eq  // eq = none
  23f6b4:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  23f6b8:	add	x8, x8, #0x1fc
  23f6bc:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  23f6c0:	add	x2, x2, #0x785
  23f6c4:	add	x4, x4, #0x828
  23f6c8:	str	x8, [sp, #8]
  23f6cc:	mov	w0, #0x7                   	// #7
  23f6d0:	mov	w3, #0x1e                  	// #30
  23f6d4:	mov	w1, w20
  23f6d8:	str	xzr, [sp]
  23f6dc:	b	23f574 <builtin_btrfs+0xb8>
  23f6e0:	add	x1, sp, #0x18
  23f6e4:	mov	x0, x19
  23f6e8:	bl	253a40 <sd_device_get_sysname@plt>
  23f6ec:	b	23f534 <builtin_btrfs+0x78>
  23f6f0:	add	x1, sp, #0x18
  23f6f4:	mov	x0, x19
  23f6f8:	bl	253a40 <sd_device_get_sysname@plt>
  23f6fc:	b	23f640 <builtin_btrfs+0x184>
  23f700:	add	x1, sp, #0x18
  23f704:	mov	x0, x19
  23f708:	bl	253a40 <sd_device_get_sysname@plt>
  23f70c:	b	23f69c <builtin_btrfs+0x1e0>

000000000023f710 <closep>:
  23f710:	stp	x29, x30, [sp, #-16]!
  23f714:	ldr	w0, [x0]
  23f718:	mov	x29, sp
  23f71c:	bl	2538f0 <safe_close@plt>
  23f720:	ldp	x29, x30, [sp], #16
  23f724:	ret

000000000023f728 <one_zero>:
  23f728:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23f72c:	adrp	x9, 213000 <worker_hash_op+0x8ad0>
  23f730:	add	x8, x8, #0x206
  23f734:	add	x9, x9, #0xa68
  23f738:	tst	w0, #0x1
  23f73c:	csel	x0, x9, x8, ne  // ne = any
  23f740:	ret

000000000023f744 <udev_builtin_hwdb_lookup>:
  23f744:	sub	sp, sp, #0x50
  23f748:	str	x23, [sp, #32]
  23f74c:	adrp	x23, 28e000 <string_hash_ops+0xfe38>
  23f750:	ldr	x8, [x23, #536]
  23f754:	stp	x29, x30, [sp, #16]
  23f758:	add	x29, sp, #0x10
  23f75c:	stp	x22, x21, [sp, #48]
  23f760:	stp	x20, x19, [sp, #64]
  23f764:	str	xzr, [x29, #24]
  23f768:	cbz	x8, 23f7fc <udev_builtin_hwdb_lookup+0xb8>
  23f76c:	mov	w22, w4
  23f770:	mov	x19, x3
  23f774:	mov	x20, x0
  23f778:	cbz	x1, 23f798 <udev_builtin_hwdb_lookup+0x54>
  23f77c:	mov	x0, x1
  23f780:	mov	x1, x2
  23f784:	mov	x2, xzr
  23f788:	bl	2547b0 <strjoin_real@plt>
  23f78c:	mov	x2, x0
  23f790:	str	x0, [x29, #24]
  23f794:	cbz	x0, 23f804 <udev_builtin_hwdb_lookup+0xc0>
  23f798:	ldr	x0, [x23, #536]
  23f79c:	mov	x1, x2
  23f7a0:	bl	2547c0 <sd_hwdb_seek@plt>
  23f7a4:	mov	w21, wzr
  23f7a8:	tbnz	w0, #31, 23f808 <udev_builtin_hwdb_lookup+0xc4>
  23f7ac:	and	w22, w22, #0x1
  23f7b0:	ldr	x0, [x23, #536]
  23f7b4:	add	x1, sp, #0x8
  23f7b8:	mov	x2, sp
  23f7bc:	bl	2547d0 <sd_hwdb_enumerate@plt>
  23f7c0:	cmp	w0, #0x1
  23f7c4:	b.lt	23f808 <udev_builtin_hwdb_lookup+0xc4>  // b.tstop
  23f7c8:	cbz	x19, 23f7e0 <udev_builtin_hwdb_lookup+0x9c>
  23f7cc:	ldr	x1, [sp, #8]
  23f7d0:	mov	w2, #0x2                   	// #2
  23f7d4:	mov	x0, x19
  23f7d8:	bl	254680 <fnmatch@plt>
  23f7dc:	cbnz	w0, 23f7b0 <udev_builtin_hwdb_lookup+0x6c>
  23f7e0:	ldp	x3, x2, [sp]
  23f7e4:	mov	x0, x20
  23f7e8:	mov	w1, w22
  23f7ec:	bl	23f344 <udev_builtin_add_property>
  23f7f0:	tbnz	w0, #31, 23f82c <udev_builtin_hwdb_lookup+0xe8>
  23f7f4:	add	w21, w21, #0x1
  23f7f8:	b	23f7b0 <udev_builtin_hwdb_lookup+0x6c>
  23f7fc:	mov	w21, #0xfffffffe            	// #-2
  23f800:	b	23f808 <udev_builtin_hwdb_lookup+0xc4>
  23f804:	mov	w21, #0xfffffff4            	// #-12
  23f808:	add	x0, x29, #0x18
  23f80c:	bl	23f834 <freep>
  23f810:	mov	w0, w21
  23f814:	ldp	x20, x19, [sp, #64]
  23f818:	ldp	x22, x21, [sp, #48]
  23f81c:	ldr	x23, [sp, #32]
  23f820:	ldp	x29, x30, [sp, #16]
  23f824:	add	sp, sp, #0x50
  23f828:	ret
  23f82c:	mov	w21, w0
  23f830:	b	23f808 <udev_builtin_hwdb_lookup+0xc4>

000000000023f834 <freep>:
  23f834:	stp	x29, x30, [sp, #-16]!
  23f838:	ldr	x0, [x0]
  23f83c:	mov	x29, sp
  23f840:	bl	2536e0 <free@plt>
  23f844:	ldp	x29, x30, [sp], #16
  23f848:	ret

000000000023f84c <builtin_hwdb>:
  23f84c:	sub	sp, sp, #0xa0
  23f850:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  23f854:	ldr	x8, [x8, #536]
  23f858:	stp	x29, x30, [sp, #64]
  23f85c:	add	x29, sp, #0x40
  23f860:	stp	x28, x27, [sp, #80]
  23f864:	stp	x26, x25, [sp, #96]
  23f868:	stp	x24, x23, [sp, #112]
  23f86c:	stp	x22, x21, [sp, #128]
  23f870:	stp	x20, x19, [sp, #144]
  23f874:	stur	xzr, [x29, #-8]
  23f878:	cbz	x8, 23f9d8 <builtin_hwdb+0x18c>
  23f87c:	stur	w3, [x29, #-28]
  23f880:	stur	x0, [x29, #-24]
  23f884:	adrp	x21, 27d000 <builtin_blkid.options+0x50>
  23f888:	ldr	x21, [x21, #760]
  23f88c:	adrp	x27, 20c000 <worker_hash_op+0x1ad0>
  23f890:	adrp	x28, 265000 <__lxstat64@plt+0xfe00>
  23f894:	adrp	x19, 218000 <worker_hash_op+0xdad0>
  23f898:	mov	x25, x2
  23f89c:	mov	w26, w1
  23f8a0:	mov	x23, xzr
  23f8a4:	mov	x24, xzr
  23f8a8:	mov	x20, xzr
  23f8ac:	mov	x22, xzr
  23f8b0:	add	x27, x27, #0xe5f
  23f8b4:	add	x28, x28, #0x520
  23f8b8:	add	x19, x19, #0xa67
  23f8bc:	b	23f8cc <builtin_hwdb+0x80>
  23f8c0:	ldr	x23, [x21]
  23f8c4:	mov	w8, #0x1                   	// #1
  23f8c8:	tbz	w8, #0, 23f940 <builtin_hwdb+0xf4>
  23f8cc:	mov	w0, w26
  23f8d0:	mov	x1, x25
  23f8d4:	mov	x2, x27
  23f8d8:	mov	x3, x28
  23f8dc:	mov	x4, xzr
  23f8e0:	bl	2536f0 <getopt_long@plt>
  23f8e4:	sub	w8, w0, #0x64
  23f8e8:	cmp	w8, #0xf
  23f8ec:	b.hi	23f910 <builtin_hwdb+0xc4>  // b.pmore
  23f8f0:	adr	x9, 23f8c0 <builtin_hwdb+0x74>
  23f8f4:	ldrb	w10, [x19, x8]
  23f8f8:	add	x9, x9, x10, lsl #2
  23f8fc:	br	x9
  23f900:	ldr	x20, [x21]
  23f904:	mov	w8, #0x1                   	// #1
  23f908:	tbnz	w8, #0, 23f8cc <builtin_hwdb+0x80>
  23f90c:	b	23f940 <builtin_hwdb+0xf4>
  23f910:	cmn	w0, #0x1
  23f914:	b.ne	23f8c4 <builtin_hwdb+0x78>  // b.any
  23f918:	mov	w8, wzr
  23f91c:	tbnz	w8, #0, 23f8cc <builtin_hwdb+0x80>
  23f920:	b	23f940 <builtin_hwdb+0xf4>
  23f924:	ldr	x22, [x21]
  23f928:	mov	w8, #0x1                   	// #1
  23f92c:	tbnz	w8, #0, 23f8cc <builtin_hwdb+0x80>
  23f930:	b	23f940 <builtin_hwdb+0xf4>
  23f934:	ldr	x24, [x21]
  23f938:	mov	w8, #0x1                   	// #1
  23f93c:	tbnz	w8, #0, 23f8cc <builtin_hwdb+0x80>
  23f940:	adrp	x8, 27d000 <builtin_blkid.options+0x50>
  23f944:	ldr	x8, [x8, #752]
  23f948:	ldrsw	x8, [x8]
  23f94c:	ldr	x2, [x25, x8, lsl #3]
  23f950:	cbz	x2, 23f9e0 <builtin_hwdb+0x194>
  23f954:	ldur	w8, [x29, #-28]
  23f958:	ldur	x19, [x29, #-24]
  23f95c:	mov	x1, x23
  23f960:	mov	x3, x22
  23f964:	and	w4, w8, #0x1
  23f968:	mov	x0, x19
  23f96c:	bl	23f744 <udev_builtin_hwdb_lookup>
  23f970:	mov	w20, w0
  23f974:	tbnz	w0, #31, 23fa84 <builtin_hwdb+0x238>
  23f978:	cbnz	w20, 23fb9c <builtin_hwdb+0x350>
  23f97c:	stur	xzr, [x29, #-16]
  23f980:	cbz	x19, 23f994 <builtin_hwdb+0x148>
  23f984:	mov	w0, #0x1                   	// #1
  23f988:	bl	2535b0 <log_get_max_level_realm@plt>
  23f98c:	cmp	w0, #0x7
  23f990:	b.ge	23fbd8 <builtin_hwdb+0x38c>  // b.tcont
  23f994:	ldur	x6, [x29, #-16]
  23f998:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23f99c:	add	x8, x8, #0xb64
  23f9a0:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  23f9a4:	cmp	x6, #0x0
  23f9a8:	csel	x5, xzr, x8, eq  // eq = none
  23f9ac:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23f9b0:	add	x8, x8, #0x57
  23f9b4:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23f9b8:	mov	w1, #0x3d                  	// #61
  23f9bc:	add	x2, x2, #0xbbc
  23f9c0:	add	x4, x4, #0xbd9
  23f9c4:	str	x8, [sp, #8]
  23f9c8:	mov	w0, #0x7                   	// #7
  23f9cc:	movk	w1, #0x4000, lsl #16
  23f9d0:	mov	w3, #0xa8                  	// #168
  23f9d4:	b	23fa7c <builtin_hwdb+0x230>
  23f9d8:	mov	w20, #0xffffffea            	// #-22
  23f9dc:	b	23fb9c <builtin_hwdb+0x350>
  23f9e0:	ldur	x19, [x29, #-24]
  23f9e4:	cbz	x20, 23f9f8 <builtin_hwdb+0x1ac>
  23f9e8:	sub	x0, x29, #0x8
  23f9ec:	mov	x1, x20
  23f9f0:	bl	2543c0 <sd_device_new_from_device_id@plt>
  23f9f4:	tbnz	w0, #31, 23fb34 <builtin_hwdb+0x2e8>
  23f9f8:	ldur	w8, [x29, #-28]
  23f9fc:	ldur	x1, [x29, #-8]
  23fa00:	mov	x0, x19
  23fa04:	mov	x2, x24
  23fa08:	and	w5, w8, #0x1
  23fa0c:	mov	x3, x23
  23fa10:	mov	x4, x22
  23fa14:	bl	23fcb4 <udev_builtin_hwdb_search>
  23fa18:	mov	w20, w0
  23fa1c:	tbnz	w0, #31, 23fad8 <builtin_hwdb+0x28c>
  23fa20:	cbnz	w20, 23fb9c <builtin_hwdb+0x350>
  23fa24:	stur	xzr, [x29, #-16]
  23fa28:	cbz	x19, 23fa3c <builtin_hwdb+0x1f0>
  23fa2c:	mov	w0, #0x1                   	// #1
  23fa30:	bl	2535b0 <log_get_max_level_realm@plt>
  23fa34:	cmp	w0, #0x7
  23fa38:	b.ge	23fc08 <builtin_hwdb+0x3bc>  // b.tcont
  23fa3c:	ldur	x6, [x29, #-16]
  23fa40:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23fa44:	add	x8, x8, #0xb64
  23fa48:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  23fa4c:	cmp	x6, #0x0
  23fa50:	csel	x5, xzr, x8, eq  // eq = none
  23fa54:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23fa58:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23fa5c:	mov	w1, #0x3d                  	// #61
  23fa60:	add	x8, x8, #0x57
  23fa64:	add	x2, x2, #0xbbc
  23fa68:	add	x4, x4, #0xbd9
  23fa6c:	mov	w0, #0x7                   	// #7
  23fa70:	movk	w1, #0x4000, lsl #16
  23fa74:	mov	w3, #0xb7                  	// #183
  23fa78:	str	x8, [sp, #8]
  23fa7c:	str	xzr, [sp]
  23fa80:	b	23fb90 <builtin_hwdb+0x344>
  23fa84:	stur	xzr, [x29, #-16]
  23fa88:	cbz	x19, 23fa9c <builtin_hwdb+0x250>
  23fa8c:	mov	w0, #0x1                   	// #1
  23fa90:	bl	2535b0 <log_get_max_level_realm@plt>
  23fa94:	cmp	w0, #0x7
  23fa98:	b.ge	23fbc8 <builtin_hwdb+0x37c>  // b.tcont
  23fa9c:	ldur	x6, [x29, #-16]
  23faa0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23faa4:	add	x8, x8, #0xb64
  23faa8:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  23faac:	cmp	x6, #0x0
  23fab0:	csel	x5, xzr, x8, eq  // eq = none
  23fab4:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23fab8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23fabc:	add	x8, x8, #0xe68
  23fac0:	add	x2, x2, #0xbbc
  23fac4:	add	x4, x4, #0xbd9
  23fac8:	mov	w0, #0x7                   	// #7
  23facc:	mov	w3, #0xa6                  	// #166
  23fad0:	str	x8, [sp, #8]
  23fad4:	b	23fb28 <builtin_hwdb+0x2dc>
  23fad8:	stur	xzr, [x29, #-16]
  23fadc:	cbz	x19, 23faf0 <builtin_hwdb+0x2a4>
  23fae0:	mov	w0, #0x1                   	// #1
  23fae4:	bl	2535b0 <log_get_max_level_realm@plt>
  23fae8:	cmp	w0, #0x7
  23faec:	b.ge	23fbe8 <builtin_hwdb+0x39c>  // b.tcont
  23faf0:	ldur	x6, [x29, #-16]
  23faf4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23faf8:	add	x8, x8, #0xb64
  23fafc:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  23fb00:	cmp	x6, #0x0
  23fb04:	csel	x5, xzr, x8, eq  // eq = none
  23fb08:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  23fb0c:	add	x8, x8, #0xe68
  23fb10:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23fb14:	add	x2, x2, #0xbbc
  23fb18:	add	x4, x4, #0xbd9
  23fb1c:	str	x8, [sp, #8]
  23fb20:	mov	w0, #0x7                   	// #7
  23fb24:	mov	w3, #0xb5                  	// #181
  23fb28:	str	xzr, [sp]
  23fb2c:	mov	w1, w20
  23fb30:	b	23fb90 <builtin_hwdb+0x344>
  23fb34:	mov	w25, w0
  23fb38:	stur	xzr, [x29, #-16]
  23fb3c:	cbz	x19, 23fb50 <builtin_hwdb+0x304>
  23fb40:	mov	w0, #0x1                   	// #1
  23fb44:	bl	2535b0 <log_get_max_level_realm@plt>
  23fb48:	cmp	w0, #0x7
  23fb4c:	b.ge	23fbf8 <builtin_hwdb+0x3ac>  // b.tcont
  23fb50:	ldur	x6, [x29, #-16]
  23fb54:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  23fb58:	add	x8, x8, #0xb64
  23fb5c:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  23fb60:	cmp	x6, #0x0
  23fb64:	csel	x5, xzr, x8, eq  // eq = none
  23fb68:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  23fb6c:	add	x8, x8, #0xf05
  23fb70:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  23fb74:	add	x2, x2, #0xbbc
  23fb78:	add	x4, x4, #0xbd9
  23fb7c:	stp	x8, x20, [sp, #8]
  23fb80:	mov	w0, #0x7                   	// #7
  23fb84:	mov	w3, #0xb0                  	// #176
  23fb88:	str	xzr, [sp]
  23fb8c:	mov	w1, w25
  23fb90:	mov	x7, xzr
  23fb94:	bl	2539f0 <log_object_internal@plt>
  23fb98:	mov	w20, w0
  23fb9c:	sub	x0, x29, #0x8
  23fba0:	bl	23fc98 <sd_device_unrefp>
  23fba4:	mov	w0, w20
  23fba8:	ldp	x20, x19, [sp, #144]
  23fbac:	ldp	x22, x21, [sp, #128]
  23fbb0:	ldp	x24, x23, [sp, #112]
  23fbb4:	ldp	x26, x25, [sp, #96]
  23fbb8:	ldp	x28, x27, [sp, #80]
  23fbbc:	ldp	x29, x30, [sp, #64]
  23fbc0:	add	sp, sp, #0xa0
  23fbc4:	ret
  23fbc8:	sub	x1, x29, #0x10
  23fbcc:	mov	x0, x19
  23fbd0:	bl	253a40 <sd_device_get_sysname@plt>
  23fbd4:	b	23fa9c <builtin_hwdb+0x250>
  23fbd8:	sub	x1, x29, #0x10
  23fbdc:	mov	x0, x19
  23fbe0:	bl	253a40 <sd_device_get_sysname@plt>
  23fbe4:	b	23f994 <builtin_hwdb+0x148>
  23fbe8:	sub	x1, x29, #0x10
  23fbec:	mov	x0, x19
  23fbf0:	bl	253a40 <sd_device_get_sysname@plt>
  23fbf4:	b	23faf0 <builtin_hwdb+0x2a4>
  23fbf8:	sub	x1, x29, #0x10
  23fbfc:	mov	x0, x19
  23fc00:	bl	253a40 <sd_device_get_sysname@plt>
  23fc04:	b	23fb50 <builtin_hwdb+0x304>
  23fc08:	sub	x1, x29, #0x10
  23fc0c:	mov	x0, x19
  23fc10:	bl	253a40 <sd_device_get_sysname@plt>
  23fc14:	b	23fa3c <builtin_hwdb+0x1f0>

000000000023fc18 <builtin_hwdb_init>:
  23fc18:	stp	x29, x30, [sp, #-16]!
  23fc1c:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  23fc20:	ldr	x8, [x8, #536]
  23fc24:	mov	x29, sp
  23fc28:	cbz	x8, 23fc38 <builtin_hwdb_init+0x20>
  23fc2c:	mov	w0, wzr
  23fc30:	ldp	x29, x30, [sp], #16
  23fc34:	ret
  23fc38:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  23fc3c:	add	x0, x0, #0x218
  23fc40:	bl	2547e0 <sd_hwdb_new@plt>
  23fc44:	and	w0, w0, w0, asr #31
  23fc48:	ldp	x29, x30, [sp], #16
  23fc4c:	ret

000000000023fc50 <builtin_hwdb_exit>:
  23fc50:	stp	x29, x30, [sp, #-32]!
  23fc54:	str	x19, [sp, #16]
  23fc58:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  23fc5c:	ldr	x0, [x19, #536]
  23fc60:	mov	x29, sp
  23fc64:	bl	2547f0 <sd_hwdb_unref@plt>
  23fc68:	str	x0, [x19, #536]
  23fc6c:	ldr	x19, [sp, #16]
  23fc70:	ldp	x29, x30, [sp], #32
  23fc74:	ret

000000000023fc78 <builtin_hwdb_validate>:
  23fc78:	stp	x29, x30, [sp, #-16]!
  23fc7c:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  23fc80:	ldr	x0, [x8, #536]
  23fc84:	mov	x29, sp
  23fc88:	bl	254800 <hwdb_validate@plt>
  23fc8c:	and	w0, w0, #0x1
  23fc90:	ldp	x29, x30, [sp], #16
  23fc94:	ret

000000000023fc98 <sd_device_unrefp>:
  23fc98:	stp	x29, x30, [sp, #-16]!
  23fc9c:	ldr	x0, [x0]
  23fca0:	mov	x29, sp
  23fca4:	cbz	x0, 23fcac <sd_device_unrefp+0x14>
  23fca8:	bl	253950 <sd_device_unref@plt>
  23fcac:	ldp	x29, x30, [sp], #16
  23fcb0:	ret

000000000023fcb4 <udev_builtin_hwdb_search>:
  23fcb4:	sub	sp, sp, #0x90
  23fcb8:	stp	x29, x30, [sp, #48]
  23fcbc:	stp	x28, x27, [sp, #64]
  23fcc0:	stp	x26, x25, [sp, #80]
  23fcc4:	stp	x24, x23, [sp, #96]
  23fcc8:	stp	x22, x21, [sp, #112]
  23fccc:	stp	x20, x19, [sp, #128]
  23fcd0:	add	x29, sp, #0x30
  23fcd4:	cbz	x0, 23fe20 <udev_builtin_hwdb_search+0x16c>
  23fcd8:	cmp	x1, #0x0
  23fcdc:	adrp	x24, 218000 <worker_hash_op+0xdad0>
  23fce0:	adrp	x25, 217000 <worker_hash_op+0xcad0>
  23fce4:	adrp	x26, 212000 <worker_hash_op+0x7ad0>
  23fce8:	mov	x19, x4
  23fcec:	mov	x20, x3
  23fcf0:	mov	x21, x2
  23fcf4:	mov	x22, x0
  23fcf8:	mov	w28, wzr
  23fcfc:	mov	w23, wzr
  23fd00:	add	x24, x24, #0x4b6
  23fd04:	add	x25, x25, #0x6c5
  23fd08:	add	x26, x26, #0x565
  23fd0c:	csel	x8, x0, x1, eq  // eq = none
  23fd10:	and	w27, w5, #0x1
  23fd14:	stur	x8, [x29, #-8]
  23fd18:	ldur	x0, [x29, #-8]
  23fd1c:	cbz	x0, 23fdfc <udev_builtin_hwdb_search+0x148>
  23fd20:	add	x1, sp, #0x10
  23fd24:	str	xzr, [sp]
  23fd28:	bl	253bb0 <sd_device_get_subsystem@plt>
  23fd2c:	tbnz	w0, #31, 23fda0 <udev_builtin_hwdb_search+0xec>
  23fd30:	cbz	x21, 23fd44 <udev_builtin_hwdb_search+0x90>
  23fd34:	ldr	x0, [sp, #16]
  23fd38:	mov	x1, x21
  23fd3c:	bl	253bc0 <strcmp@plt>
  23fd40:	cbnz	w0, 23fda0 <udev_builtin_hwdb_search+0xec>
  23fd44:	ldur	x0, [x29, #-8]
  23fd48:	mov	x2, sp
  23fd4c:	mov	x1, x24
  23fd50:	bl	253be0 <sd_device_get_property_value@plt>
  23fd54:	ldr	x0, [sp, #16]
  23fd58:	mov	x1, x25
  23fd5c:	bl	253bc0 <strcmp@plt>
  23fd60:	cbz	w0, 23fdbc <udev_builtin_hwdb_search+0x108>
  23fd64:	ldr	x2, [sp]
  23fd68:	cbz	x2, 23fda0 <udev_builtin_hwdb_search+0xec>
  23fd6c:	mov	x0, x22
  23fd70:	mov	x1, x20
  23fd74:	mov	x3, x19
  23fd78:	mov	w4, w27
  23fd7c:	bl	23f744 <udev_builtin_hwdb_lookup>
  23fd80:	cmp	w0, #0x0
  23fd84:	cset	w8, gt
  23fd88:	mov	w23, w0
  23fd8c:	orr	w8, w28, w8
  23fd90:	tbz	w8, #0, 23fda0 <udev_builtin_hwdb_search+0xec>
  23fd94:	mov	w8, wzr
  23fd98:	tbnz	w8, #0, 23fd18 <udev_builtin_hwdb_search+0x64>
  23fd9c:	b	23fdfc <udev_builtin_hwdb_search+0x148>
  23fda0:	ldur	x0, [x29, #-8]
  23fda4:	sub	x1, x29, #0x8
  23fda8:	bl	253d60 <sd_device_get_parent@plt>
  23fdac:	mvn	w8, w0
  23fdb0:	lsr	w8, w8, #31
  23fdb4:	tbnz	w8, #0, 23fd18 <udev_builtin_hwdb_search+0x64>
  23fdb8:	b	23fdfc <udev_builtin_hwdb_search+0x148>
  23fdbc:	ldur	x0, [x29, #-8]
  23fdc0:	add	x1, sp, #0x8
  23fdc4:	bl	253d50 <sd_device_get_devtype@plt>
  23fdc8:	tbnz	w0, #31, 23fd64 <udev_builtin_hwdb_search+0xb0>
  23fdcc:	ldr	x0, [sp, #8]
  23fdd0:	mov	x1, x26
  23fdd4:	bl	253bc0 <strcmp@plt>
  23fdd8:	cbnz	w0, 23fd64 <udev_builtin_hwdb_search+0xb0>
  23fddc:	ldr	x8, [sp]
  23fde0:	cbnz	x8, 23fdf4 <udev_builtin_hwdb_search+0x140>
  23fde4:	ldur	x0, [x29, #-8]
  23fde8:	add	x1, sp, #0x18
  23fdec:	bl	23fe44 <modalias_usb>
  23fdf0:	str	x0, [sp]
  23fdf4:	mov	w28, #0x1                   	// #1
  23fdf8:	b	23fd64 <udev_builtin_hwdb_search+0xb0>
  23fdfc:	mov	w0, w23
  23fe00:	ldp	x20, x19, [sp, #128]
  23fe04:	ldp	x22, x21, [sp, #112]
  23fe08:	ldp	x24, x23, [sp, #96]
  23fe0c:	ldp	x26, x25, [sp, #80]
  23fe10:	ldp	x28, x27, [sp, #64]
  23fe14:	ldp	x29, x30, [sp, #48]
  23fe18:	add	sp, sp, #0x90
  23fe1c:	ret
  23fe20:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23fe24:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  23fe28:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  23fe2c:	add	x1, x1, #0x9e6
  23fe30:	add	x2, x2, #0xbbc
  23fe34:	add	x4, x4, #0x71
  23fe38:	mov	w0, #0x1                   	// #1
  23fe3c:	mov	w3, #0x49                  	// #73
  23fe40:	bl	253740 <log_assert_failed_realm@plt>

000000000023fe44 <modalias_usb>:
  23fe44:	sub	sp, sp, #0x40
  23fe48:	stp	x29, x30, [sp, #32]
  23fe4c:	stp	x20, x19, [sp, #48]
  23fe50:	add	x29, sp, #0x20
  23fe54:	mov	x19, x1
  23fe58:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23fe5c:	add	x1, x1, #0x570
  23fe60:	sub	x2, x29, #0x8
  23fe64:	mov	x20, x0
  23fe68:	bl	254070 <sd_device_get_sysattr_value@plt>
  23fe6c:	tbnz	w0, #31, 23fec8 <modalias_usb+0x84>
  23fe70:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  23fe74:	add	x1, x1, #0xbe6
  23fe78:	add	x2, sp, #0x10
  23fe7c:	mov	x0, x20
  23fe80:	bl	254070 <sd_device_get_sysattr_value@plt>
  23fe84:	tbnz	w0, #31, 23fec8 <modalias_usb+0x84>
  23fe88:	ldur	x0, [x29, #-8]
  23fe8c:	add	x1, sp, #0xc
  23fe90:	bl	23fee0 <safe_atoux16>
  23fe94:	tbnz	w0, #31, 23fec8 <modalias_usb+0x84>
  23fe98:	ldr	x0, [sp, #16]
  23fe9c:	add	x1, sp, #0x8
  23fea0:	bl	23fee0 <safe_atoux16>
  23fea4:	tbnz	w0, #31, 23fec8 <modalias_usb+0x84>
  23fea8:	ldrh	w3, [sp, #12]
  23feac:	ldrh	w4, [sp, #8]
  23feb0:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  23feb4:	add	x2, x2, #0x580
  23feb8:	mov	w1, #0x10                  	// #16
  23febc:	mov	x0, x19
  23fec0:	bl	2542f0 <snprintf@plt>
  23fec4:	b	23fecc <modalias_usb+0x88>
  23fec8:	mov	x19, xzr
  23fecc:	mov	x0, x19
  23fed0:	ldp	x20, x19, [sp, #48]
  23fed4:	ldp	x29, x30, [sp, #32]
  23fed8:	add	sp, sp, #0x40
  23fedc:	ret

000000000023fee0 <safe_atoux16>:
  23fee0:	stp	x29, x30, [sp, #-16]!
  23fee4:	mov	x2, x1
  23fee8:	mov	w1, #0x10                  	// #16
  23feec:	mov	x29, sp
  23fef0:	bl	254810 <safe_atou16_full@plt>
  23fef4:	ldp	x29, x30, [sp], #16
  23fef8:	ret

000000000023fefc <builtin_input_id>:
  23fefc:	sub	sp, sp, #0xd0
  23ff00:	stp	x29, x30, [sp, #160]
  23ff04:	stp	x22, x21, [sp, #176]
  23ff08:	stp	x20, x19, [sp, #192]
  23ff0c:	add	x29, sp, #0xa0
  23ff10:	cbz	x0, 240110 <builtin_input_id+0x214>
  23ff14:	adrp	x21, 20e000 <worker_hash_op+0x3ad0>
  23ff18:	adrp	x22, 213000 <worker_hash_op+0x8ad0>
  23ff1c:	mov	w20, w3
  23ff20:	mov	x19, x0
  23ff24:	add	x21, x21, #0x366
  23ff28:	add	x22, x22, #0xc13
  23ff2c:	stur	x0, [x29, #-8]
  23ff30:	add	x2, sp, #0x28
  23ff34:	mov	x1, x21
  23ff38:	bl	254070 <sd_device_get_sysattr_value@plt>
  23ff3c:	tbz	w0, #31, 23ff60 <builtin_input_id+0x64>
  23ff40:	ldur	x0, [x29, #-8]
  23ff44:	sub	x3, x29, #0x8
  23ff48:	mov	x1, x22
  23ff4c:	mov	x2, xzr
  23ff50:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  23ff54:	tbnz	w0, #31, 23ff6c <builtin_input_id+0x70>
  23ff58:	ldur	x0, [x29, #-8]
  23ff5c:	cbnz	x0, 23ff30 <builtin_input_id+0x34>
  23ff60:	ldur	x8, [x29, #-8]
  23ff64:	cbnz	x8, 23ff78 <builtin_input_id+0x7c>
  23ff68:	b	2400bc <builtin_input_id+0x1c0>
  23ff6c:	stur	xzr, [x29, #-8]
  23ff70:	ldur	x8, [x29, #-8]
  23ff74:	cbz	x8, 2400bc <builtin_input_id+0x1c0>
  23ff78:	and	w21, w20, #0x1
  23ff7c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  23ff80:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  23ff84:	add	x2, x2, #0x7ac
  23ff88:	add	x3, x3, #0xa68
  23ff8c:	mov	x0, x19
  23ff90:	mov	w1, w21
  23ff94:	bl	23f344 <udev_builtin_add_property>
  23ff98:	ldur	x0, [x29, #-8]
  23ff9c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  23ffa0:	add	x1, x1, #0x366
  23ffa4:	sub	x2, x29, #0x10
  23ffa8:	mov	w3, #0x8                   	// #8
  23ffac:	mov	w4, w21
  23ffb0:	bl	240134 <get_cap_mask>
  23ffb4:	ldur	x0, [x29, #-8]
  23ffb8:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  23ffbc:	add	x1, x1, #0x763
  23ffc0:	sub	x2, x29, #0x18
  23ffc4:	mov	w3, #0x8                   	// #8
  23ffc8:	mov	w4, w21
  23ffcc:	bl	240134 <get_cap_mask>
  23ffd0:	ldur	x0, [x29, #-8]
  23ffd4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  23ffd8:	add	x1, x1, #0x5c7
  23ffdc:	add	x2, sp, #0x20
  23ffe0:	mov	w3, #0x8                   	// #8
  23ffe4:	mov	w4, w21
  23ffe8:	bl	240134 <get_cap_mask>
  23ffec:	ldur	x0, [x29, #-8]
  23fff0:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  23fff4:	add	x1, x1, #0xc7d
  23fff8:	add	x2, sp, #0x28
  23fffc:	mov	w3, #0x60                  	// #96
  240000:	mov	w4, w21
  240004:	bl	240134 <get_cap_mask>
  240008:	ldur	x0, [x29, #-8]
  24000c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  240010:	add	x1, x1, #0x836
  240014:	add	x2, sp, #0x18
  240018:	mov	w3, #0x8                   	// #8
  24001c:	mov	w4, w21
  240020:	bl	240134 <get_cap_mask>
  240024:	sub	x1, x29, #0x10
  240028:	sub	x2, x29, #0x18
  24002c:	add	x3, sp, #0x28
  240030:	add	x4, sp, #0x20
  240034:	add	x5, sp, #0x18
  240038:	mov	x0, x19
  24003c:	mov	w6, w21
  240040:	bl	240558 <test_pointers>
  240044:	mov	w22, w0
  240048:	sub	x1, x29, #0x10
  24004c:	add	x2, sp, #0x28
  240050:	mov	x0, x19
  240054:	mov	w3, w21
  240058:	bl	240960 <test_key>
  24005c:	tbnz	w22, #0, 240098 <builtin_input_id+0x19c>
  240060:	tbnz	w0, #0, 240098 <builtin_input_id+0x19c>
  240064:	ldurb	w8, [x29, #-16]
  240068:	tbz	w8, #2, 240098 <builtin_input_id+0x19c>
  24006c:	ldrh	w8, [sp, #32]
  240070:	mov	w9, #0x140                 	// #320
  240074:	tst	w8, w9
  240078:	b.eq	240098 <builtin_input_id+0x19c>  // b.none
  24007c:	adrp	x2, 20b000 <worker_hash_op+0xad0>
  240080:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  240084:	and	w1, w20, #0x1
  240088:	add	x2, x2, #0xa0b
  24008c:	add	x3, x3, #0xa68
  240090:	mov	x0, x19
  240094:	bl	23f344 <udev_builtin_add_property>
  240098:	ldurb	w8, [x29, #-16]
  24009c:	tbz	w8, #5, 2400bc <builtin_input_id+0x1c0>
  2400a0:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  2400a4:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  2400a8:	and	w1, w20, #0x1
  2400ac:	add	x2, x2, #0xbf0
  2400b0:	add	x3, x3, #0xa68
  2400b4:	mov	x0, x19
  2400b8:	bl	23f344 <udev_builtin_add_property>
  2400bc:	add	x1, sp, #0x8
  2400c0:	mov	x0, x19
  2400c4:	bl	253ad0 <sd_device_get_devname@plt>
  2400c8:	tbnz	w0, #31, 2400f8 <builtin_input_id+0x1fc>
  2400cc:	add	x1, sp, #0x10
  2400d0:	mov	x0, x19
  2400d4:	bl	253a40 <sd_device_get_sysname@plt>
  2400d8:	tbnz	w0, #31, 2400f8 <builtin_input_id+0x1fc>
  2400dc:	ldr	x0, [sp, #16]
  2400e0:	bl	240c0c <startswith>
  2400e4:	cbz	x0, 2400f8 <builtin_input_id+0x1fc>
  2400e8:	ldr	x1, [sp, #8]
  2400ec:	and	w2, w20, #0x1
  2400f0:	mov	x0, x19
  2400f4:	bl	240c44 <extract_info>
  2400f8:	ldp	x20, x19, [sp, #192]
  2400fc:	ldp	x22, x21, [sp, #176]
  240100:	ldp	x29, x30, [sp, #160]
  240104:	mov	w0, wzr
  240108:	add	sp, sp, #0xd0
  24010c:	ret
  240110:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  240114:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  240118:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24011c:	add	x1, x1, #0x9e6
  240120:	add	x2, x2, #0xb65
  240124:	add	x4, x4, #0x590
  240128:	mov	w0, #0x1                   	// #1
  24012c:	mov	w3, #0x137                 	// #311
  240130:	bl	253740 <log_assert_failed_realm@plt>

0000000000240134 <get_cap_mask>:
  240134:	stp	x29, x30, [sp, #-96]!
  240138:	stp	x28, x27, [sp, #16]
  24013c:	stp	x26, x25, [sp, #32]
  240140:	stp	x24, x23, [sp, #48]
  240144:	stp	x22, x21, [sp, #64]
  240148:	stp	x20, x19, [sp, #80]
  24014c:	mov	x29, sp
  240150:	sub	sp, sp, #0x1, lsl #12
  240154:	sub	sp, sp, #0x40
  240158:	mov	x19, x2
  24015c:	sub	x2, x29, #0x10
  240160:	mov	w25, w4
  240164:	mov	x23, x3
  240168:	mov	x21, x1
  24016c:	mov	x20, x0
  240170:	bl	254070 <sd_device_get_sysattr_value@plt>
  240174:	tbz	w0, #31, 240184 <get_cap_mask+0x50>
  240178:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  24017c:	add	x8, x8, #0x7fa
  240180:	stur	x8, [x29, #-16]
  240184:	ldur	x3, [x29, #-16]
  240188:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  24018c:	add	x2, x2, #0x7b5
  240190:	add	x0, sp, #0x30
  240194:	mov	w1, #0x1000                	// #4096
  240198:	bl	2542f0 <snprintf@plt>
  24019c:	cmp	w0, #0x1, lsl #12
  2401a0:	b.cs	240510 <get_cap_mask+0x3dc>  // b.hs, b.nlast
  2401a4:	str	xzr, [sp, #40]
  2401a8:	cbz	x20, 2401bc <get_cap_mask+0x88>
  2401ac:	mov	w0, #0x1                   	// #1
  2401b0:	bl	2535b0 <log_get_max_level_realm@plt>
  2401b4:	cmp	w0, #0x7
  2401b8:	b.ge	2404e0 <get_cap_mask+0x3ac>  // b.tcont
  2401bc:	ldr	x6, [sp, #40]
  2401c0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2401c4:	add	x8, x8, #0xb64
  2401c8:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2401cc:	cmp	x6, #0x0
  2401d0:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  2401d4:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  2401d8:	csel	x5, xzr, x8, eq  // eq = none
  2401dc:	add	x8, sp, #0x30
  2401e0:	add	x9, x9, #0xd9
  2401e4:	add	x2, x2, #0xb65
  2401e8:	add	x4, x4, #0xe13
  2401ec:	mov	w0, #0x7                   	// #7
  2401f0:	mov	w3, #0x5a                  	// #90
  2401f4:	mov	w1, wzr
  2401f8:	mov	x7, xzr
  2401fc:	stp	x21, x8, [sp, #16]
  240200:	stp	xzr, x9, [sp]
  240204:	bl	2539f0 <log_object_internal@plt>
  240208:	mov	x0, x19
  24020c:	mov	w1, wzr
  240210:	mov	x2, x23
  240214:	bl	2545b0 <memset@plt>
  240218:	add	x0, sp, #0x30
  24021c:	mov	w1, #0x20                  	// #32
  240220:	bl	254830 <strrchr@plt>
  240224:	adrp	x22, 212000 <worker_hash_op+0x7ad0>
  240228:	mov	x24, x0
  24022c:	lsr	x28, x23, #3
  240230:	add	x22, x22, #0xc00
  240234:	cbz	x0, 240300 <get_cap_mask+0x1cc>
  240238:	str	w25, [sp, #36]
  24023c:	adrp	x23, 214000 <worker_hash_op+0x9ad0>
  240240:	adrp	x25, 217000 <worker_hash_op+0xcad0>
  240244:	mov	w26, wzr
  240248:	add	x23, x23, #0xb65
  24024c:	add	x25, x25, #0xe13
  240250:	b	240274 <get_cap_mask+0x140>
  240254:	str	x26, [x19, x27, lsl #3]
  240258:	add	x0, sp, #0x30
  24025c:	mov	w1, #0x20                  	// #32
  240260:	strb	wzr, [x24]
  240264:	add	w26, w27, #0x1
  240268:	bl	254830 <strrchr@plt>
  24026c:	mov	x24, x0
  240270:	cbz	x0, 2402f8 <get_cap_mask+0x1c4>
  240274:	add	x0, x24, #0x1
  240278:	mov	w2, #0x10                  	// #16
  24027c:	mov	x1, xzr
  240280:	bl	254840 <strtoul@plt>
  240284:	mov	w27, w26
  240288:	cmp	x28, x27
  24028c:	mov	x26, x0
  240290:	b.hi	240254 <get_cap_mask+0x120>  // b.pmore
  240294:	str	xzr, [sp, #40]
  240298:	cbz	x20, 2402ac <get_cap_mask+0x178>
  24029c:	mov	w0, #0x1                   	// #1
  2402a0:	bl	2535b0 <log_get_max_level_realm@plt>
  2402a4:	cmp	w0, #0x7
  2402a8:	b.ge	2402e8 <get_cap_mask+0x1b4>  // b.tcont
  2402ac:	ldr	x6, [sp, #40]
  2402b0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2402b4:	add	x8, x8, #0xb64
  2402b8:	mov	w0, #0x7                   	// #7
  2402bc:	cmp	x6, #0x0
  2402c0:	csel	x5, xzr, x8, eq  // eq = none
  2402c4:	mov	w3, #0x63                  	// #99
  2402c8:	mov	w1, wzr
  2402cc:	mov	x2, x23
  2402d0:	mov	x4, x25
  2402d4:	mov	x7, xzr
  2402d8:	stp	x21, x26, [sp, #16]
  2402dc:	stp	xzr, x22, [sp]
  2402e0:	bl	2539f0 <log_object_internal@plt>
  2402e4:	b	240258 <get_cap_mask+0x124>
  2402e8:	add	x1, sp, #0x28
  2402ec:	mov	x0, x20
  2402f0:	bl	253a40 <sd_device_get_sysname@plt>
  2402f4:	b	2402ac <get_cap_mask+0x178>
  2402f8:	ldr	w25, [sp, #36]
  2402fc:	mov	w24, w26
  240300:	add	x0, sp, #0x30
  240304:	mov	w2, #0x10                  	// #16
  240308:	mov	x1, xzr
  24030c:	bl	254840 <strtoul@plt>
  240310:	cmp	x28, x24
  240314:	mov	x23, x0
  240318:	b.ls	240328 <get_cap_mask+0x1f4>  // b.plast
  24031c:	str	x23, [x19, x24, lsl #3]
  240320:	tbnz	w25, #0, 240384 <get_cap_mask+0x250>
  240324:	b	240424 <get_cap_mask+0x2f0>
  240328:	str	xzr, [sp, #40]
  24032c:	cbz	x20, 240340 <get_cap_mask+0x20c>
  240330:	mov	w0, #0x1                   	// #1
  240334:	bl	2535b0 <log_get_max_level_realm@plt>
  240338:	cmp	w0, #0x7
  24033c:	b.ge	2404f0 <get_cap_mask+0x3bc>  // b.tcont
  240340:	ldr	x6, [sp, #40]
  240344:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  240348:	add	x8, x8, #0xb64
  24034c:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  240350:	cmp	x6, #0x0
  240354:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  240358:	csel	x5, xzr, x8, eq  // eq = none
  24035c:	add	x2, x2, #0xb65
  240360:	add	x4, x4, #0xe13
  240364:	mov	w0, #0x7                   	// #7
  240368:	mov	w3, #0x6b                  	// #107
  24036c:	mov	w1, wzr
  240370:	mov	x7, xzr
  240374:	stp	x21, x23, [sp, #16]
  240378:	stp	xzr, x22, [sp]
  24037c:	bl	2539f0 <log_object_internal@plt>
  240380:	tbz	w25, #0, 240424 <get_cap_mask+0x2f0>
  240384:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  240388:	add	x2, x2, #0xb86
  24038c:	add	x0, sp, #0x30
  240390:	mov	w1, #0x1000                	// #4096
  240394:	mov	w3, #0x10                  	// #16
  240398:	bl	2542f0 <snprintf@plt>
  24039c:	cmp	w0, #0x1, lsl #12
  2403a0:	b.cs	240534 <get_cap_mask+0x400>  // b.hs, b.nlast
  2403a4:	str	xzr, [sp, #40]
  2403a8:	cbz	x20, 2403bc <get_cap_mask+0x288>
  2403ac:	mov	w0, #0x1                   	// #1
  2403b0:	bl	2535b0 <log_get_max_level_realm@plt>
  2403b4:	cmp	w0, #0x7
  2403b8:	b.ge	240500 <get_cap_mask+0x3cc>  // b.tcont
  2403bc:	ldr	x6, [sp, #40]
  2403c0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2403c4:	add	x8, x8, #0xb64
  2403c8:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  2403cc:	cmp	x6, #0x0
  2403d0:	csel	x5, xzr, x8, eq  // eq = none
  2403d4:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  2403d8:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  2403dc:	add	x8, x8, #0x6ed
  2403e0:	add	x2, x2, #0xb65
  2403e4:	add	x4, x4, #0xe13
  2403e8:	mov	w0, #0x7                   	// #7
  2403ec:	mov	w3, #0x71                  	// #113
  2403f0:	mov	w1, wzr
  2403f4:	mov	x7, xzr
  2403f8:	stp	x8, x21, [sp, #8]
  2403fc:	str	xzr, [sp]
  240400:	bl	2539f0 <log_object_internal@plt>
  240404:	sub	x8, x19, #0x8
  240408:	subs	x9, x28, #0x1
  24040c:	b.cc	24041c <get_cap_mask+0x2e8>  // b.lo, b.ul, b.last
  240410:	ldr	x10, [x8, x28, lsl #3]
  240414:	mov	x28, x9
  240418:	cbz	x10, 240408 <get_cap_mask+0x2d4>
  24041c:	adds	x23, x9, #0x1
  240420:	b.cc	240448 <get_cap_mask+0x314>  // b.lo, b.ul, b.last
  240424:	add	sp, sp, #0x1, lsl #12
  240428:	add	sp, sp, #0x40
  24042c:	ldp	x20, x19, [sp, #80]
  240430:	ldp	x22, x21, [sp, #64]
  240434:	ldp	x24, x23, [sp, #48]
  240438:	ldp	x26, x25, [sp, #32]
  24043c:	ldp	x28, x27, [sp, #16]
  240440:	ldp	x29, x30, [sp], #96
  240444:	ret
  240448:	adrp	x21, 214000 <worker_hash_op+0x9ad0>
  24044c:	adrp	x22, 217000 <worker_hash_op+0xcad0>
  240450:	mov	x26, xzr
  240454:	mov	w24, #0x1                   	// #1
  240458:	add	x25, sp, #0x30
  24045c:	add	x21, x21, #0xb65
  240460:	add	x22, x22, #0xe13
  240464:	b	2404b8 <get_cap_mask+0x384>
  240468:	ldr	x6, [sp, #40]
  24046c:	ldr	x8, [x19, x26, lsl #3]
  240470:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  240474:	add	x9, x9, #0xb64
  240478:	cmp	x6, #0x0
  24047c:	csel	x5, xzr, x9, eq  // eq = none
  240480:	lsl	x9, x26, #6
  240484:	mov	w0, #0x7                   	// #7
  240488:	mov	w3, #0x78                  	// #120
  24048c:	mov	w1, wzr
  240490:	mov	x2, x21
  240494:	mov	x4, x22
  240498:	mov	x7, xzr
  24049c:	stp	x9, x8, [sp, #16]
  2404a0:	stp	xzr, x25, [sp]
  2404a4:	bl	2539f0 <log_object_internal@plt>
  2404a8:	mov	w26, w24
  2404ac:	cmp	x23, x26
  2404b0:	add	w24, w24, #0x1
  2404b4:	b.ls	240424 <get_cap_mask+0x2f0>  // b.plast
  2404b8:	str	xzr, [sp, #40]
  2404bc:	cbz	x20, 240468 <get_cap_mask+0x334>
  2404c0:	mov	w0, #0x1                   	// #1
  2404c4:	bl	2535b0 <log_get_max_level_realm@plt>
  2404c8:	cmp	w0, #0x7
  2404cc:	b.lt	240468 <get_cap_mask+0x334>  // b.tstop
  2404d0:	add	x1, sp, #0x28
  2404d4:	mov	x0, x20
  2404d8:	bl	253a40 <sd_device_get_sysname@plt>
  2404dc:	b	240468 <get_cap_mask+0x334>
  2404e0:	add	x1, sp, #0x28
  2404e4:	mov	x0, x20
  2404e8:	bl	253a40 <sd_device_get_sysname@plt>
  2404ec:	b	2401bc <get_cap_mask+0x88>
  2404f0:	add	x1, sp, #0x28
  2404f4:	mov	x0, x20
  2404f8:	bl	253a40 <sd_device_get_sysname@plt>
  2404fc:	b	240340 <get_cap_mask+0x20c>
  240500:	add	x1, sp, #0x28
  240504:	mov	x0, x20
  240508:	bl	253a40 <sd_device_get_sysname@plt>
  24050c:	b	2403bc <get_cap_mask+0x288>
  240510:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  240514:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  240518:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24051c:	add	x1, x1, #0x6c9
  240520:	add	x2, x2, #0xb65
  240524:	add	x4, x4, #0x841
  240528:	mov	w0, #0x1                   	// #1
  24052c:	mov	w3, #0x59                  	// #89
  240530:	bl	253740 <log_assert_failed_realm@plt>
  240534:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  240538:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  24053c:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  240540:	add	x1, x1, #0x6c9
  240544:	add	x2, x2, #0xb65
  240548:	add	x4, x4, #0x841
  24054c:	mov	w0, #0x1                   	// #1
  240550:	mov	w3, #0x70                  	// #112
  240554:	bl	253740 <log_assert_failed_realm@plt>

0000000000240558 <test_pointers>:
  240558:	stp	x29, x30, [sp, #-80]!
  24055c:	stp	x26, x25, [sp, #16]
  240560:	stp	x24, x23, [sp, #32]
  240564:	stp	x22, x21, [sp, #48]
  240568:	stp	x20, x19, [sp, #64]
  24056c:	ldr	x14, [x2]
  240570:	ldr	x10, [x1]
  240574:	ldr	x21, [x5]
  240578:	mov	w20, w6
  24057c:	mvn	w9, w14
  240580:	and	x8, x10, #0x2
  240584:	and	x9, x9, #0x7
  240588:	orr	x8, x8, x9
  24058c:	cmp	x8, #0x0
  240590:	mov	x19, x0
  240594:	cset	w8, eq  // eq = none
  240598:	mov	x29, sp
  24059c:	tbnz	w21, #6, 2405fc <test_pointers+0xa4>
  2405a0:	cbnz	w8, 2405fc <test_pointers+0xa4>
  2405a4:	ldr	x15, [x3, #40]
  2405a8:	mov	w9, #0x801                 	// #2049
  2405ac:	mov	w11, #0x21                  	// #33
  2405b0:	and	x8, x14, #0x3
  2405b4:	mov	w13, #0x110                 	// #272
  2405b8:	and	x12, x15, x9
  2405bc:	and	x11, x15, x11
  2405c0:	mov	w16, #0x1                   	// #1
  2405c4:	lsr	x9, x13, #3
  2405c8:	and	x9, x9, #0x1ffffffffffffff8
  2405cc:	ldr	x9, [x3, x9]
  2405d0:	lsl	x17, x16, x13
  2405d4:	cmp	x13, #0x11e
  2405d8:	and	x9, x9, x17
  2405dc:	b.hi	2405e8 <test_pointers+0x90>  // b.pmore
  2405e0:	add	x13, x13, #0x1
  2405e4:	cbz	x9, 2405c4 <test_pointers+0x6c>
  2405e8:	tbz	w10, #2, 2405f4 <test_pointers+0x9c>
  2405ec:	ldr	x10, [x4]
  2405f0:	tbnz	w10, #0, 240620 <test_pointers+0xc8>
  2405f4:	mov	w10, wzr
  2405f8:	b	240624 <test_pointers+0xcc>
  2405fc:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  240600:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  240604:	and	w1, w20, #0x1
  240608:	add	x2, x2, #0x73e
  24060c:	add	x3, x3, #0xa68
  240610:	mov	x0, x19
  240614:	bl	23f344 <udev_builtin_add_property>
  240618:	mov	w0, #0x1                   	// #1
  24061c:	b	2408e4 <test_pointers+0x38c>
  240620:	ubfx	x10, x10, #1, #1
  240624:	and	x13, x14, #0x60000000000000
  240628:	mov	x16, #0x60000000000000      	// #27021597764222976
  24062c:	ldr	w18, [x3, #32]
  240630:	and	x14, x14, #0xc00000000000
  240634:	cmp	x13, x16
  240638:	mov	x17, #0xc00000000000        	// #211106232532992
  24063c:	cset	w16, eq  // eq = none
  240640:	cmp	x14, x17
  240644:	cset	w17, ne  // ne = any
  240648:	tbnz	w18, #31, 2406f4 <test_pointers+0x19c>
  24064c:	mov	w18, #0x120                 	// #288
  240650:	mov	w0, #0x1                   	// #1
  240654:	lsr	x1, x18, #3
  240658:	and	x1, x1, #0x1ffffffffffffff8
  24065c:	ldr	x1, [x3, x1]
  240660:	lsl	x4, x0, x18
  240664:	tst	x1, x4
  240668:	cset	w22, ne  // ne = any
  24066c:	cmp	x18, #0x13e
  240670:	and	x1, x1, x4
  240674:	b.hi	240680 <test_pointers+0x128>  // b.pmore
  240678:	add	x18, x18, #0x1
  24067c:	cbz	x1, 240654 <test_pointers+0xfc>
  240680:	cbnz	x1, 2406b8 <test_pointers+0x160>
  240684:	mov	w18, #0x2c0                 	// #704
  240688:	mov	w0, #0x1                   	// #1
  24068c:	lsr	x1, x18, #3
  240690:	and	x1, x1, #0x1ffffffffffffff8
  240694:	ldr	x1, [x3, x1]
  240698:	lsl	x4, x0, x18
  24069c:	tst	x1, x4
  2406a0:	cset	w22, ne  // ne = any
  2406a4:	cmp	x18, #0x2e6
  2406a8:	b.hi	2406b8 <test_pointers+0x160>  // b.pmore
  2406ac:	and	x1, x1, x4
  2406b0:	add	x18, x18, #0x1
  2406b4:	cbz	x1, 24068c <test_pointers+0x134>
  2406b8:	tbnz	w22, #0, 2406f8 <test_pointers+0x1a0>
  2406bc:	mov	w18, #0x220                 	// #544
  2406c0:	mov	w0, #0x1                   	// #1
  2406c4:	lsr	x1, x18, #3
  2406c8:	and	x1, x1, #0x1ffffffffffffff8
  2406cc:	ldr	x1, [x3, x1]
  2406d0:	lsl	x4, x0, x18
  2406d4:	tst	x1, x4
  2406d8:	cset	w22, ne  // ne = any
  2406dc:	cmp	x18, #0x222
  2406e0:	b.hi	2406f8 <test_pointers+0x1a0>  // b.pmore
  2406e4:	and	x1, x1, x4
  2406e8:	add	x18, x18, #0x1
  2406ec:	cbz	x1, 2406c4 <test_pointers+0x16c>
  2406f0:	b	2406f8 <test_pointers+0x1a0>
  2406f4:	mov	w22, wzr
  2406f8:	and	x18, x21, #0x2
  2406fc:	tbnz	w22, #0, 240734 <test_pointers+0x1dc>
  240700:	mov	w0, #0x3                   	// #3
  240704:	mov	w1, #0x1                   	// #1
  240708:	lsr	x3, x0, #3
  24070c:	and	x3, x3, #0x1ffffffffffffff8
  240710:	ldr	x3, [x2, x3]
  240714:	lsl	x4, x1, x0
  240718:	tst	x3, x4
  24071c:	cset	w22, ne  // ne = any
  240720:	cmp	x0, #0x16
  240724:	b.hi	240734 <test_pointers+0x1dc>  // b.pmore
  240728:	and	x3, x3, x4
  24072c:	add	x0, x0, #0x1
  240730:	cbz	x3, 240708 <test_pointers+0x1b0>
  240734:	and	w17, w16, w17
  240738:	cmp	x8, #0x3
  24073c:	and	x16, x15, #0x400
  240740:	b.ne	240760 <test_pointers+0x208>  // b.any
  240744:	cbz	x12, 2408fc <test_pointers+0x3a4>
  240748:	mov	w15, wzr
  24074c:	mov	w24, wzr
  240750:	mov	w23, wzr
  240754:	mov	w22, wzr
  240758:	mov	w25, #0x1                   	// #1
  24075c:	b	240770 <test_pointers+0x218>
  240760:	mov	w15, wzr
  240764:	mov	w24, wzr
  240768:	mov	w23, wzr
  24076c:	mov	w25, wzr
  240770:	orr	w17, w17, w25
  240774:	cbnz	x12, 2407a4 <test_pointers+0x24c>
  240778:	mov	x12, #0x60000000000000      	// #27021597764222976
  24077c:	cmp	x13, x12
  240780:	b.ne	2407a4 <test_pointers+0x24c>  // b.any
  240784:	mov	x12, #0xc00000000000        	// #211106232532992
  240788:	cmp	x14, x12
  24078c:	b.eq	2407a4 <test_pointers+0x24c>  // b.none
  240790:	cbnz	x18, 2407ac <test_pointers+0x254>
  240794:	cmp	x11, #0x20
  240798:	b.ne	2407ac <test_pointers+0x254>  // b.any
  24079c:	mov	w24, #0x1                   	// #1
  2407a0:	b	2407bc <test_pointers+0x264>
  2407a4:	mov	w25, w17
  2407a8:	b	2407bc <test_pointers+0x264>
  2407ac:	orr	x11, x16, x18
  2407b0:	cmp	x11, #0x0
  2407b4:	cset	w11, ne  // ne = any
  2407b8:	orr	w23, w11, w23
  2407bc:	cmp	x9, #0x0
  2407c0:	orr	w9, w24, w25
  2407c4:	cset	w11, ne  // ne = any
  2407c8:	cmp	x8, #0x3
  2407cc:	orr	w8, w22, w9
  2407d0:	cset	w9, ne  // ne = any
  2407d4:	eor	w8, w8, #0x1
  2407d8:	and	w8, w11, w8
  2407dc:	orr	w9, w10, w9
  2407e0:	and	w8, w9, w8
  2407e4:	orr	w26, w15, w8
  2407e8:	tbz	w21, #5, 240864 <test_pointers+0x30c>
  2407ec:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  2407f0:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  2407f4:	and	w1, w20, #0x1
  2407f8:	add	x2, x2, #0x579
  2407fc:	add	x3, x3, #0xa68
  240800:	mov	x0, x19
  240804:	bl	23f344 <udev_builtin_add_property>
  240808:	cbnz	w26, 240868 <test_pointers+0x310>
  24080c:	cbz	w24, 240888 <test_pointers+0x330>
  240810:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  240814:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  240818:	and	w1, w20, #0x1
  24081c:	add	x2, x2, #0xe82
  240820:	add	x3, x3, #0xa68
  240824:	mov	x0, x19
  240828:	bl	23f344 <udev_builtin_add_property>
  24082c:	cbnz	w23, 24088c <test_pointers+0x334>
  240830:	cbz	w22, 2408ac <test_pointers+0x354>
  240834:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  240838:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  24083c:	and	w1, w20, #0x1
  240840:	add	x2, x2, #0xc38
  240844:	add	x3, x3, #0xa68
  240848:	mov	x0, x19
  24084c:	bl	23f344 <udev_builtin_add_property>
  240850:	cbnz	w25, 2408b0 <test_pointers+0x358>
  240854:	orr	w8, w24, w26
  240858:	orr	w8, w23, w8
  24085c:	tbz	w8, #0, 2408dc <test_pointers+0x384>
  240860:	b	240618 <test_pointers+0xc0>
  240864:	cbz	w26, 24080c <test_pointers+0x2b4>
  240868:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  24086c:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  240870:	and	w1, w20, #0x1
  240874:	add	x2, x2, #0xe55
  240878:	add	x3, x3, #0xa68
  24087c:	mov	x0, x19
  240880:	bl	23f344 <udev_builtin_add_property>
  240884:	cbnz	w24, 240810 <test_pointers+0x2b8>
  240888:	cbz	w23, 240830 <test_pointers+0x2d8>
  24088c:	adrp	x2, 215000 <worker_hash_op+0xaad0>
  240890:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  240894:	and	w1, w20, #0x1
  240898:	add	x2, x2, #0xa90
  24089c:	add	x3, x3, #0xa68
  2408a0:	mov	x0, x19
  2408a4:	bl	23f344 <udev_builtin_add_property>
  2408a8:	cbnz	w22, 240834 <test_pointers+0x2dc>
  2408ac:	cbz	w25, 240854 <test_pointers+0x2fc>
  2408b0:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  2408b4:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  2408b8:	and	w1, w20, #0x1
  2408bc:	add	x2, x2, #0x4bf
  2408c0:	add	x3, x3, #0xa68
  2408c4:	mov	x0, x19
  2408c8:	bl	23f344 <udev_builtin_add_property>
  2408cc:	orr	w8, w25, w26
  2408d0:	orr	w8, w24, w8
  2408d4:	orr	w8, w23, w8
  2408d8:	tbnz	w8, #0, 240618 <test_pointers+0xc0>
  2408dc:	ubfx	x8, x21, #5, #1
  2408e0:	orr	w0, w8, w22
  2408e4:	ldp	x20, x19, [sp, #64]
  2408e8:	ldp	x22, x21, [sp, #48]
  2408ec:	ldp	x24, x23, [sp, #32]
  2408f0:	ldp	x26, x25, [sp, #16]
  2408f4:	ldp	x29, x30, [sp], #80
  2408f8:	ret
  2408fc:	cbnz	x18, 240920 <test_pointers+0x3c8>
  240900:	cmp	x11, #0x20
  240904:	b.ne	240920 <test_pointers+0x3c8>  // b.any
  240908:	mov	w15, wzr
  24090c:	mov	w23, wzr
  240910:	mov	w25, wzr
  240914:	mov	w22, wzr
  240918:	mov	w24, #0x1                   	// #1
  24091c:	b	240770 <test_pointers+0x218>
  240920:	cbz	x9, 24093c <test_pointers+0x3e4>
  240924:	mov	w24, wzr
  240928:	mov	w23, wzr
  24092c:	mov	w25, wzr
  240930:	mov	w22, wzr
  240934:	mov	w15, #0x1                   	// #1
  240938:	b	240770 <test_pointers+0x218>
  24093c:	orr	x0, x16, x18
  240940:	cmp	x0, #0x0
  240944:	cset	w0, eq  // eq = none
  240948:	mov	w15, wzr
  24094c:	mov	w24, wzr
  240950:	mov	w25, wzr
  240954:	cset	w23, ne  // ne = any
  240958:	and	w22, w22, w0
  24095c:	b	240770 <test_pointers+0x218>

0000000000240960 <test_key>:
  240960:	sub	sp, sp, #0x90
  240964:	stp	x29, x30, [sp, #48]
  240968:	stp	x28, x27, [sp, #64]
  24096c:	stp	x26, x25, [sp, #80]
  240970:	stp	x24, x23, [sp, #96]
  240974:	stp	x22, x21, [sp, #112]
  240978:	stp	x20, x19, [sp, #128]
  24097c:	ldrb	w8, [x1]
  240980:	mov	x19, x0
  240984:	add	x29, sp, #0x30
  240988:	tbnz	w8, #1, 2409f0 <test_key+0x90>
  24098c:	stur	xzr, [x29, #-8]
  240990:	cbz	x19, 2409a4 <test_key+0x44>
  240994:	mov	w0, #0x1                   	// #1
  240998:	bl	2535b0 <log_get_max_level_realm@plt>
  24099c:	cmp	w0, #0x7
  2409a0:	b.ge	240bfc <test_key+0x29c>  // b.tcont
  2409a4:	ldur	x6, [x29, #-8]
  2409a8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2409ac:	add	x8, x8, #0xb64
  2409b0:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  2409b4:	cmp	x6, #0x0
  2409b8:	csel	x5, xzr, x8, eq  // eq = none
  2409bc:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  2409c0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2409c4:	add	x8, x8, #0xf5
  2409c8:	add	x2, x2, #0xb65
  2409cc:	add	x4, x4, #0x802
  2409d0:	mov	w0, #0x7                   	// #7
  2409d4:	mov	w3, #0x104                 	// #260
  2409d8:	mov	w1, wzr
  2409dc:	mov	x7, xzr
  2409e0:	stp	xzr, x8, [sp]
  2409e4:	bl	2539f0 <log_object_internal@plt>
  2409e8:	mov	w0, wzr
  2409ec:	b	240bdc <test_key+0x27c>
  2409f0:	adrp	x24, 211000 <worker_hash_op+0x6ad0>
  2409f4:	adrp	x28, 20d000 <worker_hash_op+0x2ad0>
  2409f8:	adrp	x22, 214000 <worker_hash_op+0x9ad0>
  2409fc:	adrp	x23, 20f000 <worker_hash_op+0x4ad0>
  240a00:	mov	w20, w3
  240a04:	mov	x21, x2
  240a08:	mov	x26, xzr
  240a0c:	mov	x27, xzr
  240a10:	mov	x25, xzr
  240a14:	add	x24, x24, #0xb64
  240a18:	add	x28, x28, #0x5d8
  240a1c:	add	x22, x22, #0xb65
  240a20:	add	x23, x23, #0x802
  240a24:	b	240a74 <test_key+0x114>
  240a28:	ldur	x6, [x29, #-8]
  240a2c:	mov	w0, #0x7                   	// #7
  240a30:	mov	w3, #0x10c                 	// #268
  240a34:	mov	w1, wzr
  240a38:	cmp	x6, #0x0
  240a3c:	csel	x5, xzr, x24, eq  // eq = none
  240a40:	cmp	x25, #0x0
  240a44:	cset	w8, ne  // ne = any
  240a48:	mov	x2, x22
  240a4c:	mov	x4, x23
  240a50:	mov	x7, xzr
  240a54:	str	w8, [sp, #24]
  240a58:	stp	x28, x27, [sp, #8]
  240a5c:	str	xzr, [sp]
  240a60:	bl	2539f0 <log_object_internal@plt>
  240a64:	add	x26, x26, #0x8
  240a68:	cmp	x26, #0x20
  240a6c:	add	x27, x27, #0x40
  240a70:	b.eq	240aa4 <test_key+0x144>  // b.none
  240a74:	ldr	x8, [x21, x26]
  240a78:	stur	xzr, [x29, #-8]
  240a7c:	orr	x25, x8, x25
  240a80:	cbz	x19, 240a28 <test_key+0xc8>
  240a84:	mov	w0, #0x1                   	// #1
  240a88:	bl	2535b0 <log_get_max_level_realm@plt>
  240a8c:	cmp	w0, #0x7
  240a90:	b.lt	240a28 <test_key+0xc8>  // b.tstop
  240a94:	sub	x1, x29, #0x8
  240a98:	mov	x0, x19
  240a9c:	bl	253a40 <sd_device_get_sysname@plt>
  240aa0:	b	240a28 <test_key+0xc8>
  240aa4:	mov	w28, w20
  240aa8:	cbz	x25, 240ad4 <test_key+0x174>
  240aac:	cbz	x25, 240ba8 <test_key+0x248>
  240ab0:	adrp	x2, 20b000 <worker_hash_op+0xad0>
  240ab4:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  240ab8:	and	w1, w28, #0x1
  240abc:	add	x2, x2, #0xa0b
  240ac0:	add	x3, x3, #0xa68
  240ac4:	mov	x0, x19
  240ac8:	bl	23f344 <udev_builtin_add_property>
  240acc:	mov	w0, #0x1                   	// #1
  240ad0:	b	240bac <test_key+0x24c>
  240ad4:	adrp	x27, 218000 <worker_hash_op+0xdad0>
  240ad8:	adrp	x22, 214000 <worker_hash_op+0x9ad0>
  240adc:	adrp	x23, 20f000 <worker_hash_op+0x4ad0>
  240ae0:	mov	x26, xzr
  240ae4:	add	x27, x27, #0x9c8
  240ae8:	add	x22, x22, #0xb65
  240aec:	add	x23, x23, #0x802
  240af0:	b	240b3c <test_key+0x1dc>
  240af4:	ldur	x6, [x29, #-8]
  240af8:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  240afc:	add	x8, x8, #0xc29
  240b00:	mov	w0, #0x7                   	// #7
  240b04:	cmp	x6, #0x0
  240b08:	csel	x5, xzr, x24, eq  // eq = none
  240b0c:	mov	w3, #0x114                 	// #276
  240b10:	mov	w1, wzr
  240b14:	mov	x2, x22
  240b18:	mov	x4, x23
  240b1c:	mov	x7, xzr
  240b20:	str	w20, [sp, #16]
  240b24:	stp	xzr, x8, [sp]
  240b28:	bl	2539f0 <log_object_internal@plt>
  240b2c:	mov	w25, #0x1                   	// #1
  240b30:	add	x26, x26, #0x1
  240b34:	cmp	x26, #0x2
  240b38:	b.eq	240aac <test_key+0x14c>  // b.none
  240b3c:	lsl	x9, x26, #3
  240b40:	add	x8, x27, x9
  240b44:	ldr	w20, [x27, x9]
  240b48:	ldr	w9, [x8, #4]!
  240b4c:	cmp	w20, w9
  240b50:	b.cs	240b30 <test_key+0x1d0>  // b.hs, b.nlast
  240b54:	mov	w9, w20
  240b58:	lsr	x10, x9, #3
  240b5c:	and	x10, x10, #0x1ffffff8
  240b60:	ldr	x10, [x21, x10]
  240b64:	lsr	x9, x10, x9
  240b68:	tbnz	w9, #0, 240b80 <test_key+0x220>
  240b6c:	ldr	w9, [x8]
  240b70:	add	w20, w20, #0x1
  240b74:	cmp	w20, w9
  240b78:	b.cc	240b54 <test_key+0x1f4>  // b.lo, b.ul, b.last
  240b7c:	b	240b30 <test_key+0x1d0>
  240b80:	stur	xzr, [x29, #-8]
  240b84:	cbz	x19, 240af4 <test_key+0x194>
  240b88:	mov	w0, #0x1                   	// #1
  240b8c:	bl	2535b0 <log_get_max_level_realm@plt>
  240b90:	cmp	w0, #0x7
  240b94:	b.lt	240af4 <test_key+0x194>  // b.tstop
  240b98:	sub	x1, x29, #0x8
  240b9c:	mov	x0, x19
  240ba0:	bl	253a40 <sd_device_get_sysname@plt>
  240ba4:	b	240af4 <test_key+0x194>
  240ba8:	mov	w0, wzr
  240bac:	ldr	w8, [x21]
  240bb0:	mvn	w8, w8
  240bb4:	tst	x8, #0xfffffffe
  240bb8:	b.ne	240bdc <test_key+0x27c>  // b.any
  240bbc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  240bc0:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  240bc4:	and	w1, w28, #0x1
  240bc8:	add	x2, x2, #0x208
  240bcc:	add	x3, x3, #0xa68
  240bd0:	mov	x0, x19
  240bd4:	bl	23f344 <udev_builtin_add_property>
  240bd8:	mov	w0, #0x1                   	// #1
  240bdc:	ldp	x20, x19, [sp, #128]
  240be0:	ldp	x22, x21, [sp, #112]
  240be4:	ldp	x24, x23, [sp, #96]
  240be8:	ldp	x26, x25, [sp, #80]
  240bec:	ldp	x28, x27, [sp, #64]
  240bf0:	ldp	x29, x30, [sp, #48]
  240bf4:	add	sp, sp, #0x90
  240bf8:	ret
  240bfc:	sub	x1, x29, #0x8
  240c00:	mov	x0, x19
  240c04:	bl	253a40 <sd_device_get_sysname@plt>
  240c08:	b	2409a4 <test_key+0x44>

0000000000240c0c <startswith>:
  240c0c:	stp	x29, x30, [sp, #-32]!
  240c10:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  240c14:	add	x1, x1, #0xc4f
  240c18:	mov	w2, #0x5                   	// #5
  240c1c:	str	x19, [sp, #16]
  240c20:	mov	x29, sp
  240c24:	mov	x19, x0
  240c28:	bl	2539b0 <strncmp@plt>
  240c2c:	add	x8, x19, #0x5
  240c30:	ldr	x19, [sp, #16]
  240c34:	cmp	w0, #0x0
  240c38:	csel	x0, x8, xzr, eq  // eq = none
  240c3c:	ldp	x29, x30, [sp], #32
  240c40:	ret

0000000000240c44 <extract_info>:
  240c44:	sub	sp, sp, #0x80
  240c48:	mov	x8, x1
  240c4c:	stp	x20, x19, [sp, #112]
  240c50:	mov	x19, x0
  240c54:	mov	w9, #0xffffffff            	// #-1
  240c58:	mov	w1, #0x80000               	// #524288
  240c5c:	mov	x0, x8
  240c60:	stp	x29, x30, [sp, #80]
  240c64:	stp	x22, x21, [sp, #96]
  240c68:	add	x29, sp, #0x50
  240c6c:	mov	w20, w2
  240c70:	stp	xzr, xzr, [sp, #32]
  240c74:	str	xzr, [sp, #48]
  240c78:	stp	xzr, xzr, [sp, #8]
  240c7c:	str	xzr, [sp, #24]
  240c80:	str	w9, [sp, #4]
  240c84:	bl	253d70 <open64@plt>
  240c88:	str	w0, [sp, #4]
  240c8c:	tbnz	w0, #31, 240d60 <extract_info+0x11c>
  240c90:	mov	w1, #0x4540                	// #17728
  240c94:	mov	w22, #0x4540                	// #17728
  240c98:	add	x2, sp, #0x20
  240c9c:	movk	w1, #0x8018, lsl #16
  240ca0:	mov	w21, w0
  240ca4:	movk	w22, #0x8018, lsl #16
  240ca8:	bl	253da0 <ioctl@plt>
  240cac:	tbnz	w0, #31, 240d60 <extract_info+0x11c>
  240cb0:	add	x1, x22, #0x1
  240cb4:	add	x2, sp, #0x8
  240cb8:	mov	w0, w21
  240cbc:	bl	253da0 <ioctl@plt>
  240cc0:	tbnz	w0, #31, 240d60 <extract_info+0x11c>
  240cc4:	ldr	w8, [sp, #52]
  240cc8:	cmp	w8, #0x1
  240ccc:	b.lt	240d60 <extract_info+0x11c>  // b.tstop
  240cd0:	ldr	w8, [sp, #28]
  240cd4:	cmp	w8, #0x1
  240cd8:	b.lt	240d60 <extract_info+0x11c>  // b.tstop
  240cdc:	add	x0, sp, #0x20
  240ce0:	bl	240ddc <abs_size_mm>
  240ce4:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  240ce8:	mov	w3, w0
  240cec:	add	x2, x2, #0x755
  240cf0:	sub	x0, x29, #0xc
  240cf4:	mov	w1, #0xc                   	// #12
  240cf8:	bl	2542f0 <snprintf@plt>
  240cfc:	cmp	w0, #0xc
  240d00:	b.cs	240d7c <extract_info+0x138>  // b.hs, b.nlast
  240d04:	add	x0, sp, #0x8
  240d08:	bl	240ddc <abs_size_mm>
  240d0c:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  240d10:	mov	w3, w0
  240d14:	add	x2, x2, #0x755
  240d18:	sub	x0, x29, #0x18
  240d1c:	mov	w1, #0xc                   	// #12
  240d20:	bl	2542f0 <snprintf@plt>
  240d24:	cmp	w0, #0xc
  240d28:	b.cs	240da0 <extract_info+0x15c>  // b.hs, b.nlast
  240d2c:	and	w20, w20, #0x1
  240d30:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  240d34:	add	x2, x2, #0x9c0
  240d38:	sub	x3, x29, #0xc
  240d3c:	mov	x0, x19
  240d40:	mov	w1, w20
  240d44:	bl	23f344 <udev_builtin_add_property>
  240d48:	adrp	x2, 215000 <worker_hash_op+0xaad0>
  240d4c:	add	x2, x2, #0x2c8
  240d50:	sub	x3, x29, #0x18
  240d54:	mov	x0, x19
  240d58:	mov	w1, w20
  240d5c:	bl	23f344 <udev_builtin_add_property>
  240d60:	add	x0, sp, #0x4
  240d64:	bl	240dc4 <closep>
  240d68:	ldp	x20, x19, [sp, #112]
  240d6c:	ldp	x22, x21, [sp, #96]
  240d70:	ldp	x29, x30, [sp, #80]
  240d74:	add	sp, sp, #0x80
  240d78:	ret
  240d7c:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  240d80:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  240d84:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  240d88:	add	x1, x1, #0x21a
  240d8c:	add	x2, x2, #0xb65
  240d90:	add	x4, x4, #0xc4e
  240d94:	mov	w0, #0x1                   	// #1
  240d98:	mov	w3, #0x40                  	// #64
  240d9c:	bl	253740 <log_assert_failed_realm@plt>
  240da0:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  240da4:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  240da8:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  240dac:	add	x1, x1, #0x23f
  240db0:	add	x2, x2, #0xb65
  240db4:	add	x4, x4, #0xc4e
  240db8:	mov	w0, #0x1                   	// #1
  240dbc:	mov	w3, #0x41                  	// #65
  240dc0:	bl	253740 <log_assert_failed_realm@plt>

0000000000240dc4 <closep>:
  240dc4:	stp	x29, x30, [sp, #-16]!
  240dc8:	ldr	w0, [x0]
  240dcc:	mov	x29, sp
  240dd0:	bl	2538f0 <safe_close@plt>
  240dd4:	ldp	x29, x30, [sp], #16
  240dd8:	ret

0000000000240ddc <abs_size_mm>:
  240ddc:	ldp	w9, w8, [x0, #4]
  240de0:	ldr	w10, [x0, #20]
  240de4:	sub	w8, w8, w9
  240de8:	sdiv	w0, w8, w10
  240dec:	ret

0000000000240df0 <builtin_keyboard>:
  240df0:	stp	x29, x30, [sp, #-96]!
  240df4:	stp	x28, x27, [sp, #16]
  240df8:	stp	x26, x25, [sp, #32]
  240dfc:	stp	x24, x23, [sp, #48]
  240e00:	stp	x22, x21, [sp, #64]
  240e04:	stp	x20, x19, [sp, #80]
  240e08:	mov	x29, sp
  240e0c:	sub	sp, sp, #0x1, lsl #12
  240e10:	sub	sp, sp, #0x60
  240e14:	mov	w8, #0xffffffff            	// #-1
  240e18:	add	x1, sp, #0x48
  240e1c:	mov	x19, x0
  240e20:	str	w8, [sp, #84]
  240e24:	bl	253ad0 <sd_device_get_devname@plt>
  240e28:	tbnz	w0, #31, 2412a8 <builtin_keyboard+0x4b8>
  240e2c:	add	x1, sp, #0x40
  240e30:	mov	x0, x19
  240e34:	bl	2546c0 <sd_device_get_property_first@plt>
  240e38:	cbz	x0, 241310 <builtin_keyboard+0x520>
  240e3c:	ldr	w26, [sp, #84]
  240e40:	adrp	x21, 20b000 <worker_hash_op+0xad0>
  240e44:	adrp	x24, 20f000 <worker_hash_op+0x4ad0>
  240e48:	adrp	x25, 20c000 <worker_hash_op+0x1ad0>
  240e4c:	mov	x23, x0
  240e50:	mov	w20, wzr
  240e54:	mov	w8, #0xffffffff            	// #-1
  240e58:	add	x21, x21, #0xa18
  240e5c:	add	x24, x24, #0x64
  240e60:	add	x25, x25, #0x7b8
  240e64:	str	x8, [sp, #32]
  240e68:	mov	x0, x23
  240e6c:	mov	x1, x21
  240e70:	bl	241398 <startswith>
  240e74:	cbz	x0, 240ed8 <builtin_keyboard+0xe8>
  240e78:	ldr	x28, [sp, #64]
  240e7c:	add	x0, x23, #0xd
  240e80:	add	x1, sp, #0x38
  240e84:	mov	w2, #0x10                  	// #16
  240e88:	bl	254840 <strtoul@plt>
  240e8c:	ldr	x8, [sp, #56]
  240e90:	ldrb	w8, [x8]
  240e94:	cbz	w8, 240f6c <builtin_keyboard+0x17c>
  240e98:	str	xzr, [sp, #48]
  240e9c:	cbz	x19, 240eb0 <builtin_keyboard+0xc0>
  240ea0:	mov	w0, #0x1                   	// #1
  240ea4:	bl	2535b0 <log_get_max_level_realm@plt>
  240ea8:	cmp	w0, #0x4
  240eac:	b.ge	241248 <builtin_keyboard+0x458>  // b.tcont
  240eb0:	ldr	x6, [sp, #48]
  240eb4:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  240eb8:	add	x8, x8, #0xb64
  240ebc:	mov	w0, #0x4                   	// #4
  240ec0:	cmp	x6, #0x0
  240ec4:	csel	x5, xzr, x8, eq  // eq = none
  240ec8:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  240ecc:	add	x8, x8, #0x701
  240ed0:	mov	w3, #0xb9                  	// #185
  240ed4:	b	240f44 <builtin_keyboard+0x154>
  240ed8:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  240edc:	mov	x0, x23
  240ee0:	add	x1, x1, #0x590
  240ee4:	bl	241398 <startswith>
  240ee8:	cbz	x0, 240fd0 <builtin_keyboard+0x1e0>
  240eec:	add	x0, x23, #0xa
  240ef0:	add	x1, sp, #0x38
  240ef4:	mov	w2, #0x10                  	// #16
  240ef8:	bl	254840 <strtoul@plt>
  240efc:	ldr	x8, [sp, #56]
  240f00:	ldrb	w8, [x8]
  240f04:	cbz	w8, 240ff4 <builtin_keyboard+0x204>
  240f08:	str	xzr, [sp, #48]
  240f0c:	cbz	x19, 240f20 <builtin_keyboard+0x130>
  240f10:	mov	w0, #0x1                   	// #1
  240f14:	bl	2535b0 <log_get_max_level_realm@plt>
  240f18:	cmp	w0, #0x4
  240f1c:	b.ge	241258 <builtin_keyboard+0x468>  // b.tcont
  240f20:	ldr	x6, [sp, #48]
  240f24:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  240f28:	add	x8, x8, #0xb64
  240f2c:	mov	w0, #0x4                   	// #4
  240f30:	cmp	x6, #0x0
  240f34:	csel	x5, xzr, x8, eq  // eq = none
  240f38:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  240f3c:	add	x8, x8, #0x80b
  240f40:	mov	w3, #0xd6                  	// #214
  240f44:	mov	w1, wzr
  240f48:	mov	x2, x24
  240f4c:	mov	x4, x25
  240f50:	mov	x7, xzr
  240f54:	stp	x8, x23, [sp, #8]
  240f58:	str	xzr, [sp]
  240f5c:	mov	w22, #0x4                   	// #4
  240f60:	bl	2539f0 <log_object_internal@plt>
  240f64:	cbnz	w22, 241224 <builtin_keyboard+0x434>
  240f68:	b	241220 <builtin_keyboard+0x430>
  240f6c:	ldrb	w8, [x28]
  240f70:	mov	x22, x0
  240f74:	cmp	w8, #0x21
  240f78:	b.ne	240f94 <builtin_keyboard+0x1a4>  // b.any
  240f7c:	add	x8, sp, #0x58
  240f80:	str	w22, [x8, w20, uxtw #2]
  240f84:	ldrb	w8, [x28, #1]!
  240f88:	cmp	w20, #0x3ff
  240f8c:	cinc	w20, w20, cc  // cc = lo, ul, last
  240f90:	cbz	w8, 241044 <builtin_keyboard+0x254>
  240f94:	tbz	w26, #31, 240fb0 <builtin_keyboard+0x1c0>
  240f98:	ldr	x0, [sp, #72]
  240f9c:	mov	w1, #0x902                 	// #2306
  240fa0:	movk	w1, #0x8, lsl #16
  240fa4:	bl	253d70 <open64@plt>
  240fa8:	mov	w26, w0
  240fac:	tbnz	w0, #31, 2410d8 <builtin_keyboard+0x2e8>
  240fb0:	mov	x0, x19
  240fb4:	mov	w1, w26
  240fb8:	mov	w2, w22
  240fbc:	mov	x3, x28
  240fc0:	bl	2413e8 <map_keycode>
  240fc4:	mov	w22, wzr
  240fc8:	cbnz	wzr, 241224 <builtin_keyboard+0x434>
  240fcc:	b	241220 <builtin_keyboard+0x430>
  240fd0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  240fd4:	mov	x0, x23
  240fd8:	add	x1, x1, #0xe20
  240fdc:	bl	253bc0 <strcmp@plt>
  240fe0:	cbnz	w0, 241220 <builtin_keyboard+0x430>
  240fe4:	ldr	x1, [sp, #64]
  240fe8:	mov	x0, x19
  240fec:	bl	241868 <set_trackpoint_sensitivity>
  240ff0:	b	241220 <builtin_keyboard+0x430>
  240ff4:	mov	x28, x0
  240ff8:	tbz	w26, #31, 241014 <builtin_keyboard+0x224>
  240ffc:	ldr	x0, [sp, #72]
  241000:	mov	w1, #0x902                 	// #2306
  241004:	movk	w1, #0x8, lsl #16
  241008:	bl	253d70 <open64@plt>
  24100c:	mov	w26, w0
  241010:	tbnz	w0, #31, 241138 <builtin_keyboard+0x348>
  241014:	ldr	x8, [sp, #32]
  241018:	cmn	w8, #0x1
  24101c:	b.eq	241050 <builtin_keyboard+0x260>  // b.none
  241020:	ldr	x8, [sp, #32]
  241024:	cbz	w8, 241128 <builtin_keyboard+0x338>
  241028:	ldr	x3, [sp, #64]
  24102c:	mov	x0, x19
  241030:	mov	w1, w26
  241034:	mov	w2, w28
  241038:	bl	2415dc <override_abs>
  24103c:	mov	w22, wzr
  241040:	b	24121c <builtin_keyboard+0x42c>
  241044:	mov	w22, #0x4                   	// #4
  241048:	cbnz	w22, 241224 <builtin_keyboard+0x434>
  24104c:	b	241220 <builtin_keyboard+0x430>
  241050:	mov	w1, #0x4520                	// #17696
  241054:	add	x2, sp, #0x30
  241058:	movk	w1, #0x8008, lsl #16
  24105c:	mov	w0, w26
  241060:	bl	253da0 <ioctl@plt>
  241064:	tbnz	w0, #31, 2411ac <builtin_keyboard+0x3bc>
  241068:	ldr	x8, [sp, #48]
  24106c:	ubfx	x9, x8, #3, #1
  241070:	str	x9, [sp, #32]
  241074:	tbnz	w8, #3, 2410cc <builtin_keyboard+0x2dc>
  241078:	str	xzr, [sp, #40]
  24107c:	cbz	x19, 241090 <builtin_keyboard+0x2a0>
  241080:	mov	w0, #0x1                   	// #1
  241084:	bl	2535b0 <log_get_max_level_realm@plt>
  241088:	cmp	w0, #0x4
  24108c:	b.ge	241298 <builtin_keyboard+0x4a8>  // b.tcont
  241090:	ldr	x6, [sp, #40]
  241094:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241098:	add	x8, x8, #0xb64
  24109c:	mov	w0, #0x4                   	// #4
  2410a0:	cmp	x6, #0x0
  2410a4:	csel	x5, xzr, x8, eq  // eq = none
  2410a8:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  2410ac:	add	x8, x8, #0x92f
  2410b0:	mov	w3, #0xea                  	// #234
  2410b4:	mov	w1, wzr
  2410b8:	mov	x2, x24
  2410bc:	mov	x4, x25
  2410c0:	mov	x7, xzr
  2410c4:	stp	xzr, x8, [sp]
  2410c8:	bl	2539f0 <log_object_internal@plt>
  2410cc:	mov	w22, wzr
  2410d0:	cbnz	w22, 24121c <builtin_keyboard+0x42c>
  2410d4:	b	241020 <builtin_keyboard+0x230>
  2410d8:	str	xzr, [sp, #48]
  2410dc:	bl	253660 <__errno_location@plt>
  2410e0:	ldr	w22, [x0]
  2410e4:	cbz	x19, 2410f8 <builtin_keyboard+0x308>
  2410e8:	mov	w0, #0x1                   	// #1
  2410ec:	bl	2535b0 <log_get_max_level_realm@plt>
  2410f0:	cmp	w0, #0x3
  2410f4:	b.ge	241268 <builtin_keyboard+0x478>  // b.tcont
  2410f8:	ldr	x6, [sp, #48]
  2410fc:	ldr	x8, [sp, #72]
  241100:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  241104:	add	x9, x9, #0xb64
  241108:	cmp	x6, #0x0
  24110c:	str	x8, [sp, #16]
  241110:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  241114:	csel	x5, xzr, x9, eq  // eq = none
  241118:	add	x8, x8, #0x758
  24111c:	mov	w0, #0x3                   	// #3
  241120:	mov	w3, #0xcc                  	// #204
  241124:	b	241184 <builtin_keyboard+0x394>
  241128:	mov	w22, #0x4                   	// #4
  24112c:	str	xzr, [sp, #32]
  241130:	cbnz	w22, 241224 <builtin_keyboard+0x434>
  241134:	b	241220 <builtin_keyboard+0x430>
  241138:	str	xzr, [sp, #48]
  24113c:	bl	253660 <__errno_location@plt>
  241140:	ldr	w22, [x0]
  241144:	cbz	x19, 241158 <builtin_keyboard+0x368>
  241148:	mov	w0, #0x1                   	// #1
  24114c:	bl	2535b0 <log_get_max_level_realm@plt>
  241150:	cmp	w0, #0x3
  241154:	b.ge	241278 <builtin_keyboard+0x488>  // b.tcont
  241158:	ldr	x6, [sp, #48]
  24115c:	ldr	x8, [sp, #72]
  241160:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  241164:	add	x9, x9, #0xb64
  241168:	cmp	x6, #0x0
  24116c:	str	x8, [sp, #16]
  241170:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  241174:	csel	x5, xzr, x9, eq  // eq = none
  241178:	add	x8, x8, #0x758
  24117c:	mov	w0, #0x3                   	// #3
  241180:	mov	w3, #0xdd                  	// #221
  241184:	mov	w1, w22
  241188:	mov	x2, x24
  24118c:	mov	x4, x25
  241190:	mov	x7, xzr
  241194:	stp	xzr, x8, [sp]
  241198:	bl	2539f0 <log_object_internal@plt>
  24119c:	mov	w27, w0
  2411a0:	mov	w22, #0x1                   	// #1
  2411a4:	cbnz	w22, 241224 <builtin_keyboard+0x434>
  2411a8:	b	241220 <builtin_keyboard+0x430>
  2411ac:	str	xzr, [sp, #40]
  2411b0:	bl	253660 <__errno_location@plt>
  2411b4:	ldr	w22, [x0]
  2411b8:	cbz	x19, 2411cc <builtin_keyboard+0x3dc>
  2411bc:	mov	w0, #0x1                   	// #1
  2411c0:	bl	2535b0 <log_get_max_level_realm@plt>
  2411c4:	cmp	w0, #0x3
  2411c8:	b.ge	241288 <builtin_keyboard+0x498>  // b.tcont
  2411cc:	ldr	x6, [sp, #40]
  2411d0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2411d4:	add	x8, x8, #0xb64
  2411d8:	mov	w0, #0x3                   	// #3
  2411dc:	cmp	x6, #0x0
  2411e0:	csel	x5, xzr, x8, eq  // eq = none
  2411e4:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  2411e8:	add	x8, x8, #0x265
  2411ec:	mov	w3, #0xe6                  	// #230
  2411f0:	mov	w1, w22
  2411f4:	mov	x2, x24
  2411f8:	mov	x4, x25
  2411fc:	mov	x7, xzr
  241200:	stp	xzr, x8, [sp]
  241204:	bl	2539f0 <log_object_internal@plt>
  241208:	mov	w8, #0xffffffff            	// #-1
  24120c:	mov	w27, w0
  241210:	str	x8, [sp, #32]
  241214:	mov	w22, #0x1                   	// #1
  241218:	cbz	w22, 241020 <builtin_keyboard+0x230>
  24121c:	cbnz	w22, 241224 <builtin_keyboard+0x434>
  241220:	mov	w22, wzr
  241224:	orr	w8, w22, #0x4
  241228:	cmp	w8, #0x4
  24122c:	b.ne	241330 <builtin_keyboard+0x540>  // b.any
  241230:	add	x1, sp, #0x40
  241234:	mov	x0, x19
  241238:	bl	2546d0 <sd_device_get_property_next@plt>
  24123c:	mov	x23, x0
  241240:	cbnz	x0, 240e68 <builtin_keyboard+0x78>
  241244:	b	241364 <builtin_keyboard+0x574>
  241248:	add	x1, sp, #0x30
  24124c:	mov	x0, x19
  241250:	bl	253a40 <sd_device_get_sysname@plt>
  241254:	b	240eb0 <builtin_keyboard+0xc0>
  241258:	add	x1, sp, #0x30
  24125c:	mov	x0, x19
  241260:	bl	253a40 <sd_device_get_sysname@plt>
  241264:	b	240f20 <builtin_keyboard+0x130>
  241268:	add	x1, sp, #0x30
  24126c:	mov	x0, x19
  241270:	bl	253a40 <sd_device_get_sysname@plt>
  241274:	b	2410f8 <builtin_keyboard+0x308>
  241278:	add	x1, sp, #0x30
  24127c:	mov	x0, x19
  241280:	bl	253a40 <sd_device_get_sysname@plt>
  241284:	b	241158 <builtin_keyboard+0x368>
  241288:	add	x1, sp, #0x28
  24128c:	mov	x0, x19
  241290:	bl	253a40 <sd_device_get_sysname@plt>
  241294:	b	2411cc <builtin_keyboard+0x3dc>
  241298:	add	x1, sp, #0x28
  24129c:	mov	x0, x19
  2412a0:	bl	253a40 <sd_device_get_sysname@plt>
  2412a4:	b	241090 <builtin_keyboard+0x2a0>
  2412a8:	mov	w20, w0
  2412ac:	str	xzr, [sp, #88]
  2412b0:	cbz	x19, 2412c4 <builtin_keyboard+0x4d4>
  2412b4:	mov	w0, #0x1                   	// #1
  2412b8:	bl	2535b0 <log_get_max_level_realm@plt>
  2412bc:	cmp	w0, #0x3
  2412c0:	b.ge	241370 <builtin_keyboard+0x580>  // b.tcont
  2412c4:	ldr	x6, [sp, #88]
  2412c8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2412cc:	add	x8, x8, #0xb64
  2412d0:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2412d4:	cmp	x6, #0x0
  2412d8:	csel	x5, xzr, x8, eq  // eq = none
  2412dc:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  2412e0:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  2412e4:	add	x8, x8, #0x7fb
  2412e8:	add	x2, x2, #0x64
  2412ec:	add	x4, x4, #0x7b8
  2412f0:	mov	w0, #0x3                   	// #3
  2412f4:	mov	w3, #0xad                  	// #173
  2412f8:	mov	w1, w20
  2412fc:	mov	x7, xzr
  241300:	stp	xzr, x8, [sp]
  241304:	bl	2539f0 <log_object_internal@plt>
  241308:	mov	w27, w0
  24130c:	b	241334 <builtin_keyboard+0x544>
  241310:	mov	w20, wzr
  241314:	cbz	w20, 241328 <builtin_keyboard+0x538>
  241318:	add	x1, sp, #0x58
  24131c:	mov	x0, x19
  241320:	mov	w2, w20
  241324:	bl	241b20 <install_force_release>
  241328:	mov	w27, wzr
  24132c:	b	241334 <builtin_keyboard+0x544>
  241330:	str	w26, [sp, #84]
  241334:	add	x0, sp, #0x54
  241338:	bl	241380 <closep>
  24133c:	mov	w0, w27
  241340:	add	sp, sp, #0x1, lsl #12
  241344:	add	sp, sp, #0x60
  241348:	ldp	x20, x19, [sp, #80]
  24134c:	ldp	x22, x21, [sp, #64]
  241350:	ldp	x24, x23, [sp, #48]
  241354:	ldp	x26, x25, [sp, #32]
  241358:	ldp	x28, x27, [sp, #16]
  24135c:	ldp	x29, x30, [sp], #96
  241360:	ret
  241364:	str	w26, [sp, #84]
  241368:	cbnz	w20, 241318 <builtin_keyboard+0x528>
  24136c:	b	241328 <builtin_keyboard+0x538>
  241370:	add	x1, sp, #0x58
  241374:	mov	x0, x19
  241378:	bl	253a40 <sd_device_get_sysname@plt>
  24137c:	b	2412c4 <builtin_keyboard+0x4d4>

0000000000241380 <closep>:
  241380:	stp	x29, x30, [sp, #-16]!
  241384:	ldr	w0, [x0]
  241388:	mov	x29, sp
  24138c:	bl	2538f0 <safe_close@plt>
  241390:	ldp	x29, x30, [sp], #16
  241394:	ret

0000000000241398 <startswith>:
  241398:	stp	x29, x30, [sp, #-48]!
  24139c:	stp	x20, x19, [sp, #32]
  2413a0:	mov	x20, x0
  2413a4:	mov	x0, x1
  2413a8:	str	x21, [sp, #16]
  2413ac:	mov	x29, sp
  2413b0:	mov	x19, x1
  2413b4:	bl	2539a0 <strlen@plt>
  2413b8:	mov	x21, x0
  2413bc:	mov	x0, x20
  2413c0:	mov	x1, x19
  2413c4:	mov	x2, x21
  2413c8:	bl	2539b0 <strncmp@plt>
  2413cc:	add	x8, x20, x21
  2413d0:	ldp	x20, x19, [sp, #32]
  2413d4:	ldr	x21, [sp, #16]
  2413d8:	cmp	w0, #0x0
  2413dc:	csel	x0, x8, xzr, eq  // eq = none
  2413e0:	ldp	x29, x30, [sp], #48
  2413e4:	ret

00000000002413e8 <map_keycode>:
  2413e8:	sub	sp, sp, #0x80
  2413ec:	stp	x20, x19, [sp, #112]
  2413f0:	mov	x19, x0
  2413f4:	mov	x0, x3
  2413f8:	stp	x29, x30, [sp, #80]
  2413fc:	stp	x22, x21, [sp, #96]
  241400:	add	x29, sp, #0x50
  241404:	mov	x21, x3
  241408:	mov	w22, w2
  24140c:	mov	w20, w1
  241410:	bl	2539a0 <strlen@plt>
  241414:	mov	x1, x0
  241418:	mov	x0, x21
  24141c:	bl	241e00 <keyboard_lookup_key>
  241420:	cbz	x0, 241518 <map_keycode+0x130>
  241424:	ldrh	w0, [x0, #8]
  241428:	stp	w22, w0, [x29, #-8]
  24142c:	stur	xzr, [x29, #-24]
  241430:	cbz	x19, 241444 <map_keycode+0x5c>
  241434:	mov	w0, #0x1                   	// #1
  241438:	bl	2535b0 <log_get_max_level_realm@plt>
  24143c:	cmp	w0, #0x7
  241440:	b.ge	2415ac <map_keycode+0x1c4>  // b.tcont
  241444:	ldur	x6, [x29, #-24]
  241448:	ldp	w8, w9, [x29, #-8]
  24144c:	adrp	x21, 211000 <worker_hash_op+0x6ad0>
  241450:	add	x21, x21, #0xb64
  241454:	cmp	x6, #0x0
  241458:	str	w8, [sp, #24]
  24145c:	str	w8, [sp, #16]
  241460:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  241464:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241468:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24146c:	csel	x5, xzr, x21, eq  // eq = none
  241470:	add	x8, x8, #0x114
  241474:	add	x2, x2, #0x64
  241478:	add	x4, x4, #0x610
  24147c:	mov	w0, #0x7                   	// #7
  241480:	mov	w3, #0x52                  	// #82
  241484:	mov	w1, wzr
  241488:	mov	x7, xzr
  24148c:	str	w9, [sp, #40]
  241490:	str	w9, [sp, #32]
  241494:	stp	xzr, x8, [sp]
  241498:	bl	2539f0 <log_object_internal@plt>
  24149c:	mov	w1, #0x4504                	// #17668
  2414a0:	sub	x2, x29, #0x8
  2414a4:	movk	w1, #0x4008, lsl #16
  2414a8:	mov	w0, w20
  2414ac:	bl	253da0 <ioctl@plt>
  2414b0:	tbz	w0, #31, 241598 <map_keycode+0x1b0>
  2414b4:	stur	xzr, [x29, #-24]
  2414b8:	bl	253660 <__errno_location@plt>
  2414bc:	ldr	w20, [x0]
  2414c0:	cbz	x19, 2414d4 <map_keycode+0xec>
  2414c4:	mov	w0, #0x1                   	// #1
  2414c8:	bl	2535b0 <log_get_max_level_realm@plt>
  2414cc:	cmp	w0, #0x3
  2414d0:	b.ge	2415bc <map_keycode+0x1d4>  // b.tcont
  2414d4:	ldp	w8, w9, [x29, #-8]
  2414d8:	ldur	x6, [x29, #-24]
  2414dc:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2414e0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  2414e4:	str	w8, [sp, #16]
  2414e8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2414ec:	cmp	x6, #0x0
  2414f0:	add	x8, x8, #0xe64
  2414f4:	csel	x5, xzr, x21, eq  // eq = none
  2414f8:	str	w9, [sp, #24]
  2414fc:	add	x2, x2, #0x64
  241500:	add	x4, x4, #0x610
  241504:	stp	xzr, x8, [sp]
  241508:	mov	w0, #0x3                   	// #3
  24150c:	mov	w3, #0x55                  	// #85
  241510:	mov	w1, w20
  241514:	b	241590 <map_keycode+0x1a8>
  241518:	sub	x1, x29, #0x10
  24151c:	mov	x0, x21
  241520:	mov	w2, wzr
  241524:	bl	254840 <strtoul@plt>
  241528:	ldur	x8, [x29, #-16]
  24152c:	ldrb	w8, [x8]
  241530:	cbz	w8, 241428 <map_keycode+0x40>
  241534:	stur	xzr, [x29, #-8]
  241538:	cbz	x19, 24154c <map_keycode+0x164>
  24153c:	mov	w0, #0x1                   	// #1
  241540:	bl	2535b0 <log_get_max_level_realm@plt>
  241544:	cmp	w0, #0x3
  241548:	b.ge	2415cc <map_keycode+0x1e4>  // b.tcont
  24154c:	ldur	x6, [x29, #-8]
  241550:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241554:	add	x8, x8, #0xb64
  241558:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24155c:	cmp	x6, #0x0
  241560:	csel	x5, xzr, x8, eq  // eq = none
  241564:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  241568:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24156c:	mov	w1, #0x16                  	// #22
  241570:	add	x8, x8, #0xe94
  241574:	add	x2, x2, #0x64
  241578:	add	x4, x4, #0x610
  24157c:	mov	w0, #0x3                   	// #3
  241580:	movk	w1, #0x4000, lsl #16
  241584:	mov	w3, #0x4b                  	// #75
  241588:	stp	x8, x21, [sp, #8]
  24158c:	str	xzr, [sp]
  241590:	mov	x7, xzr
  241594:	bl	2539f0 <log_object_internal@plt>
  241598:	ldp	x20, x19, [sp, #112]
  24159c:	ldp	x22, x21, [sp, #96]
  2415a0:	ldp	x29, x30, [sp, #80]
  2415a4:	add	sp, sp, #0x80
  2415a8:	ret
  2415ac:	sub	x1, x29, #0x18
  2415b0:	mov	x0, x19
  2415b4:	bl	253a40 <sd_device_get_sysname@plt>
  2415b8:	b	241444 <map_keycode+0x5c>
  2415bc:	sub	x1, x29, #0x18
  2415c0:	mov	x0, x19
  2415c4:	bl	253a40 <sd_device_get_sysname@plt>
  2415c8:	b	2414d4 <map_keycode+0xec>
  2415cc:	sub	x1, x29, #0x8
  2415d0:	mov	x0, x19
  2415d4:	bl	253a40 <sd_device_get_sysname@plt>
  2415d8:	b	24154c <map_keycode+0x164>

00000000002415dc <override_abs>:
  2415dc:	sub	sp, sp, #0xa0
  2415e0:	mov	w9, #0x4500                	// #17664
  2415e4:	stp	x29, x30, [sp, #96]
  2415e8:	stp	x20, x19, [sp, #144]
  2415ec:	add	x29, sp, #0x60
  2415f0:	mov	w20, w1
  2415f4:	add	w8, w2, #0x40
  2415f8:	movk	w9, #0x8018, lsl #16
  2415fc:	stp	x22, x21, [sp, #128]
  241600:	mov	w21, w2
  241604:	mov	x19, x0
  241608:	orr	w1, w8, w9
  24160c:	sub	x2, x29, #0x18
  241610:	mov	w0, w20
  241614:	str	x23, [sp, #112]
  241618:	mov	x22, x3
  24161c:	sub	x23, x29, #0x18
  241620:	bl	253da0 <ioctl@plt>
  241624:	tbnz	w0, #31, 24174c <override_abs+0x170>
  241628:	orr	x1, x23, #0x4
  24162c:	mov	x0, x22
  241630:	bl	241f68 <parse_token>
  241634:	add	x1, x23, #0x8
  241638:	bl	241f68 <parse_token>
  24163c:	add	x1, x23, #0x14
  241640:	bl	241f68 <parse_token>
  241644:	add	x1, x23, #0xc
  241648:	bl	241f68 <parse_token>
  24164c:	add	x1, x23, #0x10
  241650:	bl	241f68 <parse_token>
  241654:	cbz	x0, 2417b0 <override_abs+0x1d4>
  241658:	str	xzr, [x29, #24]
  24165c:	cbz	x19, 241670 <override_abs+0x94>
  241660:	mov	w0, #0x1                   	// #1
  241664:	bl	2535b0 <log_get_max_level_realm@plt>
  241668:	cmp	w0, #0x7
  24166c:	b.ge	241828 <override_abs+0x24c>  // b.tcont
  241670:	ldr	x6, [x29, #24]
  241674:	ldp	w8, w9, [x29, #-20]
  241678:	ldp	w12, w10, [x29, #-8]
  24167c:	ldur	w11, [x29, #-12]
  241680:	adrp	x22, 211000 <worker_hash_op+0x6ad0>
  241684:	add	x22, x22, #0xb64
  241688:	cmp	x6, #0x0
  24168c:	str	w8, [sp, #24]
  241690:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  241694:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241698:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24169c:	csel	x5, xzr, x22, eq  // eq = none
  2416a0:	add	x8, x8, #0x486
  2416a4:	add	x2, x2, #0x64
  2416a8:	add	x4, x4, #0x87b
  2416ac:	mov	w0, #0x7                   	// #7
  2416b0:	mov	w3, #0x80                  	// #128
  2416b4:	mov	w1, wzr
  2416b8:	mov	x7, xzr
  2416bc:	str	w12, [sp, #56]
  2416c0:	str	w11, [sp, #48]
  2416c4:	str	w10, [sp, #40]
  2416c8:	str	w9, [sp, #32]
  2416cc:	str	w21, [sp, #16]
  2416d0:	stp	xzr, x8, [sp]
  2416d4:	bl	2539f0 <log_object_internal@plt>
  2416d8:	mov	w9, #0x4500                	// #17664
  2416dc:	add	w8, w21, #0xc0
  2416e0:	movk	w9, #0x4018, lsl #16
  2416e4:	orr	w1, w8, w9
  2416e8:	sub	x2, x29, #0x18
  2416ec:	mov	w0, w20
  2416f0:	bl	253da0 <ioctl@plt>
  2416f4:	tbz	w0, #31, 241810 <override_abs+0x234>
  2416f8:	str	xzr, [x29, #24]
  2416fc:	bl	253660 <__errno_location@plt>
  241700:	ldr	w20, [x0]
  241704:	cbz	x19, 241718 <override_abs+0x13c>
  241708:	mov	w0, #0x1                   	// #1
  24170c:	bl	2535b0 <log_get_max_level_realm@plt>
  241710:	cmp	w0, #0x3
  241714:	b.ge	241858 <override_abs+0x27c>  // b.tcont
  241718:	ldr	x6, [x29, #24]
  24171c:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  241720:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241724:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  241728:	cmp	x6, #0x0
  24172c:	csel	x5, xzr, x22, eq  // eq = none
  241730:	add	x8, x8, #0x75a
  241734:	add	x2, x2, #0x64
  241738:	add	x4, x4, #0x87b
  24173c:	mov	w0, #0x3                   	// #3
  241740:	mov	w3, #0x83                  	// #131
  241744:	str	x8, [sp, #8]
  241748:	b	2417a4 <override_abs+0x1c8>
  24174c:	str	xzr, [x29, #24]
  241750:	bl	253660 <__errno_location@plt>
  241754:	ldr	w20, [x0]
  241758:	cbz	x19, 24176c <override_abs+0x190>
  24175c:	mov	w0, #0x1                   	// #1
  241760:	bl	2535b0 <log_get_max_level_realm@plt>
  241764:	cmp	w0, #0x3
  241768:	b.ge	241838 <override_abs+0x25c>  // b.tcont
  24176c:	ldr	x6, [x29, #24]
  241770:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241774:	add	x8, x8, #0xb64
  241778:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24177c:	cmp	x6, #0x0
  241780:	csel	x5, xzr, x8, eq  // eq = none
  241784:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  241788:	add	x8, x8, #0xb61
  24178c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  241790:	add	x2, x2, #0x64
  241794:	add	x4, x4, #0x87b
  241798:	str	x8, [sp, #8]
  24179c:	mov	w0, #0x3                   	// #3
  2417a0:	mov	w3, #0x75                  	// #117
  2417a4:	mov	w1, w20
  2417a8:	str	xzr, [sp]
  2417ac:	b	241808 <override_abs+0x22c>
  2417b0:	str	xzr, [x29, #24]
  2417b4:	cbz	x19, 2417c8 <override_abs+0x1ec>
  2417b8:	mov	w0, #0x1                   	// #1
  2417bc:	bl	2535b0 <log_get_max_level_realm@plt>
  2417c0:	cmp	w0, #0x3
  2417c4:	b.ge	241848 <override_abs+0x26c>  // b.tcont
  2417c8:	ldr	x6, [x29, #24]
  2417cc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2417d0:	add	x8, x8, #0xb64
  2417d4:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2417d8:	cmp	x6, #0x0
  2417dc:	csel	x5, xzr, x8, eq  // eq = none
  2417e0:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  2417e4:	add	x8, x8, #0x92
  2417e8:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  2417ec:	add	x2, x2, #0x64
  2417f0:	add	x4, x4, #0x87b
  2417f4:	stp	x8, x22, [sp, #8]
  2417f8:	mov	w0, #0x3                   	// #3
  2417fc:	mov	w3, #0x7d                  	// #125
  241800:	str	xzr, [sp]
  241804:	mov	w1, wzr
  241808:	mov	x7, xzr
  24180c:	bl	2539f0 <log_object_internal@plt>
  241810:	ldp	x20, x19, [sp, #144]
  241814:	ldp	x22, x21, [sp, #128]
  241818:	ldr	x23, [sp, #112]
  24181c:	ldp	x29, x30, [sp, #96]
  241820:	add	sp, sp, #0xa0
  241824:	ret
  241828:	add	x1, x29, #0x18
  24182c:	mov	x0, x19
  241830:	bl	253a40 <sd_device_get_sysname@plt>
  241834:	b	241670 <override_abs+0x94>
  241838:	add	x1, x29, #0x18
  24183c:	mov	x0, x19
  241840:	bl	253a40 <sd_device_get_sysname@plt>
  241844:	b	24176c <override_abs+0x190>
  241848:	add	x1, x29, #0x18
  24184c:	mov	x0, x19
  241850:	bl	253a40 <sd_device_get_sysname@plt>
  241854:	b	2417c8 <override_abs+0x1ec>
  241858:	add	x1, x29, #0x18
  24185c:	mov	x0, x19
  241860:	bl	253a40 <sd_device_get_sysname@plt>
  241864:	b	241718 <override_abs+0x13c>

0000000000241868 <set_trackpoint_sensitivity>:
  241868:	sub	sp, sp, #0x70
  24186c:	stp	x29, x30, [sp, #64]
  241870:	str	x21, [sp, #80]
  241874:	stp	x20, x19, [sp, #96]
  241878:	add	x29, sp, #0x40
  24187c:	cbz	x0, 241ab4 <set_trackpoint_sensitivity+0x24c>
  241880:	mov	x20, x1
  241884:	cbz	x1, 241ad8 <set_trackpoint_sensitivity+0x270>
  241888:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24188c:	add	x1, x1, #0x4b
  241890:	add	x3, x29, #0x18
  241894:	mov	x2, xzr
  241898:	mov	x19, x0
  24189c:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  2418a0:	tbnz	w0, #31, 241920 <set_trackpoint_sensitivity+0xb8>
  2418a4:	sub	x1, x29, #0x14
  2418a8:	mov	x0, x20
  2418ac:	bl	2544e0 <safe_atoi@plt>
  2418b0:	tbnz	w0, #31, 241974 <set_trackpoint_sensitivity+0x10c>
  2418b4:	ldur	w3, [x29, #-20]
  2418b8:	cmp	w3, #0x100
  2418bc:	b.cc	2419e8 <set_trackpoint_sensitivity+0x180>  // b.lo, b.ul, b.last
  2418c0:	mov	w0, #0x1                   	// #1
  2418c4:	stur	xzr, [x29, #-16]
  2418c8:	bl	2535b0 <log_get_max_level_realm@plt>
  2418cc:	cmp	w0, #0x3
  2418d0:	b.ge	241a94 <set_trackpoint_sensitivity+0x22c>  // b.tcont
  2418d4:	ldur	w8, [x29, #-20]
  2418d8:	ldur	x6, [x29, #-16]
  2418dc:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  2418e0:	add	x9, x9, #0xb64
  2418e4:	str	w8, [sp, #16]
  2418e8:	adrp	x8, 20f000 <worker_hash_op+0x4ad0>
  2418ec:	cmp	x6, #0x0
  2418f0:	add	x8, x8, #0x1e6
  2418f4:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2418f8:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2418fc:	mov	w1, #0x22                  	// #34
  241900:	csel	x5, xzr, x9, eq  // eq = none
  241904:	add	x2, x2, #0x64
  241908:	add	x4, x4, #0xa01
  24190c:	stp	xzr, x8, [sp]
  241910:	mov	w0, #0x3                   	// #3
  241914:	movk	w1, #0x4000, lsl #16
  241918:	mov	w3, #0x99                  	// #153
  24191c:	b	2419cc <set_trackpoint_sensitivity+0x164>
  241920:	mov	w21, w0
  241924:	mov	w0, #0x1                   	// #1
  241928:	stur	xzr, [x29, #-16]
  24192c:	bl	2535b0 <log_get_max_level_realm@plt>
  241930:	cmp	w0, #0x3
  241934:	b.ge	241a74 <set_trackpoint_sensitivity+0x20c>  // b.tcont
  241938:	ldur	x6, [x29, #-16]
  24193c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241940:	add	x8, x8, #0xb64
  241944:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241948:	cmp	x6, #0x0
  24194c:	csel	x5, xzr, x8, eq  // eq = none
  241950:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  241954:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  241958:	add	x8, x8, #0x8e9
  24195c:	add	x2, x2, #0x64
  241960:	add	x4, x4, #0xa01
  241964:	mov	w0, #0x3                   	// #3
  241968:	mov	w3, #0x93                  	// #147
  24196c:	str	x8, [sp, #8]
  241970:	b	2419c4 <set_trackpoint_sensitivity+0x15c>
  241974:	mov	w21, w0
  241978:	mov	w0, #0x1                   	// #1
  24197c:	stur	xzr, [x29, #-16]
  241980:	bl	2535b0 <log_get_max_level_realm@plt>
  241984:	cmp	w0, #0x3
  241988:	b.ge	241a84 <set_trackpoint_sensitivity+0x21c>  // b.tcont
  24198c:	ldur	x6, [x29, #-16]
  241990:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241994:	add	x8, x8, #0xb64
  241998:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24199c:	cmp	x6, #0x0
  2419a0:	csel	x5, xzr, x8, eq  // eq = none
  2419a4:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  2419a8:	add	x8, x8, #0xbee
  2419ac:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2419b0:	add	x2, x2, #0x64
  2419b4:	add	x4, x4, #0xa01
  2419b8:	stp	x8, x20, [sp, #8]
  2419bc:	mov	w0, #0x3                   	// #3
  2419c0:	mov	w3, #0x97                  	// #151
  2419c4:	str	xzr, [sp]
  2419c8:	mov	w1, w21
  2419cc:	mov	x7, xzr
  2419d0:	bl	2539f0 <log_object_internal@plt>
  2419d4:	ldp	x20, x19, [sp, #96]
  2419d8:	ldr	x21, [sp, #80]
  2419dc:	ldp	x29, x30, [sp, #64]
  2419e0:	add	sp, sp, #0x70
  2419e4:	ret
  2419e8:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  2419ec:	add	x2, x2, #0x755
  2419f0:	sub	x0, x29, #0x10
  2419f4:	mov	w1, #0xc                   	// #12
  2419f8:	bl	2542f0 <snprintf@plt>
  2419fc:	cmp	w0, #0xc
  241a00:	b.cs	241afc <set_trackpoint_sensitivity+0x294>  // b.hs, b.nlast
  241a04:	ldr	x0, [x29, #24]
  241a08:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  241a0c:	add	x1, x1, #0xdb2
  241a10:	sub	x2, x29, #0x10
  241a14:	bl	254850 <sd_device_set_sysattr_value@plt>
  241a18:	tbz	w0, #31, 2419d4 <set_trackpoint_sensitivity+0x16c>
  241a1c:	mov	w20, w0
  241a20:	mov	w0, #0x1                   	// #1
  241a24:	str	xzr, [sp, #32]
  241a28:	bl	2535b0 <log_get_max_level_realm@plt>
  241a2c:	cmp	w0, #0x3
  241a30:	b.ge	241aa4 <set_trackpoint_sensitivity+0x23c>  // b.tcont
  241a34:	ldr	x6, [sp, #32]
  241a38:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241a3c:	add	x8, x8, #0xb64
  241a40:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241a44:	cmp	x6, #0x0
  241a48:	csel	x5, xzr, x8, eq  // eq = none
  241a4c:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  241a50:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  241a54:	add	x8, x8, #0xdbe
  241a58:	add	x2, x2, #0x64
  241a5c:	add	x4, x4, #0xa01
  241a60:	mov	w0, #0x3                   	// #3
  241a64:	mov	w3, #0x9f                  	// #159
  241a68:	mov	w1, w20
  241a6c:	stp	xzr, x8, [sp]
  241a70:	b	2419cc <set_trackpoint_sensitivity+0x164>
  241a74:	sub	x1, x29, #0x10
  241a78:	mov	x0, x19
  241a7c:	bl	253a40 <sd_device_get_sysname@plt>
  241a80:	b	241938 <set_trackpoint_sensitivity+0xd0>
  241a84:	sub	x1, x29, #0x10
  241a88:	mov	x0, x19
  241a8c:	bl	253a40 <sd_device_get_sysname@plt>
  241a90:	b	24198c <set_trackpoint_sensitivity+0x124>
  241a94:	sub	x1, x29, #0x10
  241a98:	mov	x0, x19
  241a9c:	bl	253a40 <sd_device_get_sysname@plt>
  241aa0:	b	2418d4 <set_trackpoint_sensitivity+0x6c>
  241aa4:	add	x1, sp, #0x20
  241aa8:	mov	x0, x19
  241aac:	bl	253a40 <sd_device_get_sysname@plt>
  241ab0:	b	241a34 <set_trackpoint_sensitivity+0x1cc>
  241ab4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  241ab8:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241abc:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  241ac0:	add	x1, x1, #0x9e6
  241ac4:	add	x2, x2, #0x64
  241ac8:	add	x4, x4, #0xcca
  241acc:	mov	w0, #0x1                   	// #1
  241ad0:	mov	w3, #0x8d                  	// #141
  241ad4:	bl	253740 <log_assert_failed_realm@plt>
  241ad8:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  241adc:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241ae0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  241ae4:	add	x1, x1, #0xb91
  241ae8:	add	x2, x2, #0x64
  241aec:	add	x4, x4, #0xcca
  241af0:	mov	w0, #0x1                   	// #1
  241af4:	mov	w3, #0x8e                  	// #142
  241af8:	bl	253740 <log_assert_failed_realm@plt>
  241afc:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  241b00:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241b04:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  241b08:	add	x1, x1, #0x126
  241b0c:	add	x2, x2, #0x64
  241b10:	add	x4, x4, #0xcca
  241b14:	mov	w0, #0x1                   	// #1
  241b18:	mov	w3, #0x9b                  	// #155
  241b1c:	bl	253740 <log_assert_failed_realm@plt>

0000000000241b20 <install_force_release>:
  241b20:	stp	x29, x30, [sp, #-64]!
  241b24:	str	x28, [sp, #16]
  241b28:	stp	x22, x21, [sp, #32]
  241b2c:	stp	x20, x19, [sp, #48]
  241b30:	mov	x29, sp
  241b34:	sub	sp, sp, #0x1, lsl #12
  241b38:	sub	sp, sp, #0x30
  241b3c:	cbz	x0, 241db8 <install_force_release+0x298>
  241b40:	mov	x19, x1
  241b44:	cbz	x1, 241ddc <install_force_release+0x2bc>
  241b48:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  241b4c:	mov	w20, w2
  241b50:	add	x1, x1, #0x4b
  241b54:	add	x3, x29, #0x18
  241b58:	mov	x2, xzr
  241b5c:	mov	x22, x0
  241b60:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  241b64:	tbnz	w0, #31, 241ca0 <install_force_release+0x180>
  241b68:	ldr	x0, [x29, #24]
  241b6c:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  241b70:	add	x1, x1, #0xd6f
  241b74:	sub	x2, x29, #0x8
  241b78:	bl	254070 <sd_device_get_sysattr_value@plt>
  241b7c:	tbnz	w0, #31, 241cf4 <install_force_release+0x1d4>
  241b80:	ldur	x2, [x29, #-8]
  241b84:	add	x8, sp, #0x28
  241b88:	add	x0, sp, #0x20
  241b8c:	mov	w1, #0x1000                	// #4096
  241b90:	str	x8, [sp, #32]
  241b94:	bl	254020 <strpcpy@plt>
  241b98:	cbz	w20, 241bc8 <install_force_release+0xa8>
  241b9c:	mov	w21, w20
  241ba0:	adrp	x20, 215000 <worker_hash_op+0xaad0>
  241ba4:	mov	x1, x0
  241ba8:	add	x20, x20, #0x4b2
  241bac:	ldr	w3, [x19], #4
  241bb0:	add	x0, sp, #0x20
  241bb4:	mov	x2, x20
  241bb8:	bl	254060 <strpcpyf@plt>
  241bbc:	subs	x21, x21, #0x1
  241bc0:	mov	x1, x0
  241bc4:	b.ne	241bac <install_force_release+0x8c>  // b.any
  241bc8:	ldr	x19, [x29, #24]
  241bcc:	str	xzr, [sp, #24]
  241bd0:	cbz	x19, 241be4 <install_force_release+0xc4>
  241bd4:	mov	w0, #0x1                   	// #1
  241bd8:	bl	2535b0 <log_get_max_level_realm@plt>
  241bdc:	cmp	w0, #0x7
  241be0:	b.ge	241d88 <install_force_release+0x268>  // b.tcont
  241be4:	ldr	x6, [sp, #24]
  241be8:	adrp	x21, 211000 <worker_hash_op+0x6ad0>
  241bec:	add	x21, x21, #0xb64
  241bf0:	adrp	x9, 217000 <worker_hash_op+0xcad0>
  241bf4:	cmp	x6, #0x0
  241bf8:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241bfc:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  241c00:	csel	x5, xzr, x21, eq  // eq = none
  241c04:	add	x8, sp, #0x28
  241c08:	add	x9, x9, #0x102
  241c0c:	add	x2, x2, #0x64
  241c10:	add	x4, x4, #0xe1b
  241c14:	mov	w0, #0x7                   	// #7
  241c18:	mov	w3, #0x32                  	// #50
  241c1c:	mov	w1, wzr
  241c20:	mov	x7, xzr
  241c24:	stp	x9, x8, [sp, #8]
  241c28:	str	xzr, [sp]
  241c2c:	bl	2539f0 <log_object_internal@plt>
  241c30:	ldr	x0, [x29, #24]
  241c34:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  241c38:	add	x1, x1, #0xd6f
  241c3c:	add	x2, sp, #0x28
  241c40:	bl	254850 <sd_device_set_sysattr_value@plt>
  241c44:	tbz	w0, #31, 241d5c <install_force_release+0x23c>
  241c48:	ldr	x20, [x29, #24]
  241c4c:	mov	w19, w0
  241c50:	str	xzr, [sp, #24]
  241c54:	cbz	x20, 241c68 <install_force_release+0x148>
  241c58:	mov	w0, #0x1                   	// #1
  241c5c:	bl	2535b0 <log_get_max_level_realm@plt>
  241c60:	cmp	w0, #0x3
  241c64:	b.ge	241da8 <install_force_release+0x288>  // b.tcont
  241c68:	ldr	x6, [sp, #24]
  241c6c:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  241c70:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241c74:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  241c78:	cmp	x6, #0x0
  241c7c:	csel	x5, xzr, x21, eq  // eq = none
  241c80:	add	x8, x8, #0x4b6
  241c84:	add	x2, x2, #0x64
  241c88:	add	x4, x4, #0xe1b
  241c8c:	mov	w0, #0x3                   	// #3
  241c90:	mov	w3, #0x35                  	// #53
  241c94:	mov	w1, w19
  241c98:	stp	xzr, x8, [sp]
  241c9c:	b	241d54 <install_force_release+0x234>
  241ca0:	mov	w21, w0
  241ca4:	mov	w0, #0x1                   	// #1
  241ca8:	str	xzr, [sp, #40]
  241cac:	bl	2535b0 <log_get_max_level_realm@plt>
  241cb0:	cmp	w0, #0x3
  241cb4:	b.ge	241d78 <install_force_release+0x258>  // b.tcont
  241cb8:	ldr	x6, [sp, #40]
  241cbc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241cc0:	add	x8, x8, #0xb64
  241cc4:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241cc8:	cmp	x6, #0x0
  241ccc:	csel	x5, xzr, x8, eq  // eq = none
  241cd0:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  241cd4:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  241cd8:	add	x8, x8, #0x8e9
  241cdc:	add	x2, x2, #0x64
  241ce0:	add	x4, x4, #0xe1b
  241ce4:	mov	w0, #0x3                   	// #3
  241ce8:	mov	w3, #0x22                  	// #34
  241cec:	str	x8, [sp, #8]
  241cf0:	b	241d4c <install_force_release+0x22c>
  241cf4:	ldr	x19, [x29, #24]
  241cf8:	mov	w21, w0
  241cfc:	str	xzr, [sp, #40]
  241d00:	cbz	x19, 241d14 <install_force_release+0x1f4>
  241d04:	mov	w0, #0x1                   	// #1
  241d08:	bl	2535b0 <log_get_max_level_realm@plt>
  241d0c:	cmp	w0, #0x3
  241d10:	b.ge	241d98 <install_force_release+0x278>  // b.tcont
  241d14:	ldr	x6, [sp, #40]
  241d18:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  241d1c:	add	x8, x8, #0xb64
  241d20:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241d24:	cmp	x6, #0x0
  241d28:	csel	x5, xzr, x8, eq  // eq = none
  241d2c:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  241d30:	add	x8, x8, #0xd04
  241d34:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  241d38:	add	x2, x2, #0x64
  241d3c:	add	x4, x4, #0xe1b
  241d40:	str	x8, [sp, #8]
  241d44:	mov	w0, #0x3                   	// #3
  241d48:	mov	w3, #0x26                  	// #38
  241d4c:	str	xzr, [sp]
  241d50:	mov	w1, w21
  241d54:	mov	x7, xzr
  241d58:	bl	2539f0 <log_object_internal@plt>
  241d5c:	add	sp, sp, #0x1, lsl #12
  241d60:	add	sp, sp, #0x30
  241d64:	ldp	x20, x19, [sp, #48]
  241d68:	ldp	x22, x21, [sp, #32]
  241d6c:	ldr	x28, [sp, #16]
  241d70:	ldp	x29, x30, [sp], #64
  241d74:	ret
  241d78:	add	x1, sp, #0x28
  241d7c:	mov	x0, x22
  241d80:	bl	253a40 <sd_device_get_sysname@plt>
  241d84:	b	241cb8 <install_force_release+0x198>
  241d88:	add	x1, sp, #0x18
  241d8c:	mov	x0, x19
  241d90:	bl	253a40 <sd_device_get_sysname@plt>
  241d94:	b	241be4 <install_force_release+0xc4>
  241d98:	add	x1, sp, #0x28
  241d9c:	mov	x0, x19
  241da0:	bl	253a40 <sd_device_get_sysname@plt>
  241da4:	b	241d14 <install_force_release+0x1f4>
  241da8:	add	x1, sp, #0x18
  241dac:	mov	x0, x20
  241db0:	bl	253a40 <sd_device_get_sysname@plt>
  241db4:	b	241c68 <install_force_release+0x148>
  241db8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  241dbc:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241dc0:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  241dc4:	add	x1, x1, #0x9e6
  241dc8:	add	x2, x2, #0x64
  241dcc:	add	x4, x4, #0xb7
  241dd0:	mov	w0, #0x1                   	// #1
  241dd4:	mov	w3, #0x1d                  	// #29
  241dd8:	bl	253740 <log_assert_failed_realm@plt>
  241ddc:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  241de0:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  241de4:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  241de8:	add	x1, x1, #0xb7a
  241dec:	add	x2, x2, #0x64
  241df0:	add	x4, x4, #0xb7
  241df4:	mov	w0, #0x1                   	// #1
  241df8:	mov	w3, #0x1e                  	// #30
  241dfc:	bl	253740 <log_assert_failed_realm@plt>

0000000000241e00 <keyboard_lookup_key>:
  241e00:	stp	x29, x30, [sp, #-32]!
  241e04:	sub	x8, x1, #0x1
  241e08:	cmp	x8, #0x1b
  241e0c:	stp	x20, x19, [sp, #16]
  241e10:	mov	x29, sp
  241e14:	b.hi	241e70 <keyboard_lookup_key+0x70>  // b.pmore
  241e18:	mov	x20, x0
  241e1c:	bl	241e90 <hash_key_name>
  241e20:	mov	w8, #0x16ea                	// #5866
  241e24:	cmp	w0, w8
  241e28:	b.hi	241e68 <keyboard_lookup_key+0x68>  // b.pmore
  241e2c:	adrp	x8, 265000 <__lxstat64@plt+0xfe00>
  241e30:	add	x8, x8, #0x630
  241e34:	add	x19, x8, w0, uxtw #4
  241e38:	ldr	x8, [x19]
  241e3c:	cbz	x8, 241e60 <keyboard_lookup_key+0x60>
  241e40:	ldrb	w9, [x20]
  241e44:	ldrb	w10, [x8]
  241e48:	cmp	w9, w10
  241e4c:	b.ne	241e60 <keyboard_lookup_key+0x60>  // b.any
  241e50:	add	x0, x20, #0x1
  241e54:	add	x1, x8, #0x1
  241e58:	bl	253bc0 <strcmp@plt>
  241e5c:	cbz	w0, 241e84 <keyboard_lookup_key+0x84>
  241e60:	mov	w8, wzr
  241e64:	cbnz	w8, 241e6c <keyboard_lookup_key+0x6c>
  241e68:	mov	w8, wzr
  241e6c:	cbnz	w8, 241e74 <keyboard_lookup_key+0x74>
  241e70:	mov	x19, xzr
  241e74:	mov	x0, x19
  241e78:	ldp	x20, x19, [sp, #16]
  241e7c:	ldp	x29, x30, [sp], #32
  241e80:	ret
  241e84:	mov	w8, #0x1                   	// #1
  241e88:	cbnz	w8, 241e6c <keyboard_lookup_key+0x6c>
  241e8c:	b	241e68 <keyboard_lookup_key+0x68>

0000000000241e90 <hash_key_name>:
  241e90:	sub	w10, w1, #0x1
  241e94:	adrp	x9, 218000 <worker_hash_op+0xdad0>
  241e98:	mov	w8, w1
  241e9c:	cmp	w10, #0x12
  241ea0:	add	x9, x9, #0xa8c
  241ea4:	b.hi	241ec0 <hash_key_name+0x30>  // b.pmore
  241ea8:	adrp	x11, 218000 <worker_hash_op+0xdad0>
  241eac:	add	x11, x11, #0xa78
  241eb0:	adr	x12, 241ecc <hash_key_name+0x3c>
  241eb4:	ldrb	w13, [x11, x10]
  241eb8:	add	x12, x12, x13, lsl #2
  241ebc:	br	x12
  241ec0:	ldrb	w10, [x0, #19]
  241ec4:	ldrh	w10, [x9, x10, lsl #1]
  241ec8:	add	w8, w10, w8
  241ecc:	ldrb	w10, [x0, #17]
  241ed0:	add	x10, x9, x10, lsl #1
  241ed4:	ldrh	w10, [x10, #16]
  241ed8:	add	w8, w8, w10
  241edc:	ldrb	w10, [x0, #14]
  241ee0:	ldrh	w10, [x9, x10, lsl #1]
  241ee4:	add	w8, w8, w10
  241ee8:	ldrb	w10, [x0, #11]
  241eec:	ldrh	w10, [x9, x10, lsl #1]
  241ef0:	add	w8, w8, w10
  241ef4:	ldrb	w10, [x0, #9]
  241ef8:	add	x10, x9, x10, lsl #1
  241efc:	ldrh	w10, [x10, #16]
  241f00:	add	w8, w8, w10
  241f04:	ldrb	w10, [x0, #6]
  241f08:	ldrh	w10, [x9, x10, lsl #1]
  241f0c:	add	w8, w8, w10
  241f10:	ldrb	w10, [x0, #5]
  241f14:	add	x10, x9, x10, lsl #1
  241f18:	ldrh	w10, [x10, #2]
  241f1c:	add	w8, w8, w10
  241f20:	ldrb	w10, [x0, #4]
  241f24:	ldrh	w10, [x9, x10, lsl #1]
  241f28:	add	w8, w8, w10
  241f2c:	ldrb	w10, [x0, #2]
  241f30:	add	x10, x9, x10, lsl #1
  241f34:	ldrh	w10, [x10, #2]
  241f38:	add	w8, w8, w10
  241f3c:	ldrb	w10, [x0, #1]
  241f40:	ldrh	w10, [x9, x10, lsl #1]
  241f44:	add	w8, w8, w10
  241f48:	ldrb	w10, [x0]
  241f4c:	add	x11, x1, x0
  241f50:	ldurb	w11, [x11, #-1]
  241f54:	ldrh	w10, [x9, x10, lsl #1]
  241f58:	ldrh	w9, [x9, x11, lsl #1]
  241f5c:	add	w8, w8, w10
  241f60:	add	w0, w8, w9
  241f64:	ret

0000000000241f68 <parse_token>:
  241f68:	sub	sp, sp, #0x30
  241f6c:	stp	x29, x30, [sp, #16]
  241f70:	stp	x20, x19, [sp, #32]
  241f74:	add	x29, sp, #0x10
  241f78:	cbz	x0, 241fcc <parse_token+0x64>
  241f7c:	mov	x19, x1
  241f80:	add	x1, sp, #0x8
  241f84:	mov	w2, wzr
  241f88:	mov	x20, x0
  241f8c:	bl	254860 <strtol@plt>
  241f90:	ldr	x8, [sp, #8]
  241f94:	ldrb	w9, [x8]
  241f98:	cmp	w9, #0x3a
  241f9c:	b.eq	241fa4 <parse_token+0x3c>  // b.none
  241fa0:	cbnz	w9, 241fc8 <parse_token+0x60>
  241fa4:	cmp	x8, x20
  241fa8:	b.eq	241fb0 <parse_token+0x48>  // b.none
  241fac:	str	w0, [x19]
  241fb0:	ldrb	w9, [x8]
  241fb4:	cbz	w9, 241fc0 <parse_token+0x58>
  241fb8:	add	x8, x8, #0x1
  241fbc:	str	x8, [sp, #8]
  241fc0:	ldr	x0, [sp, #8]
  241fc4:	b	241fcc <parse_token+0x64>
  241fc8:	mov	x0, xzr
  241fcc:	ldp	x20, x19, [sp, #32]
  241fd0:	ldp	x29, x30, [sp, #16]
  241fd4:	add	sp, sp, #0x30
  241fd8:	ret

0000000000241fdc <builtin_net_id>:
  241fdc:	sub	sp, sp, #0x120
  241fe0:	stp	x29, x30, [sp, #224]
  241fe4:	add	x29, sp, #0xe0
  241fe8:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  241fec:	movi	v0.2d, #0x0
  241ff0:	add	x1, x1, #0x132
  241ff4:	add	x2, x29, #0x18
  241ff8:	str	x28, [sp, #240]
  241ffc:	stp	x22, x21, [sp, #256]
  242000:	stp	x20, x19, [sp, #272]
  242004:	mov	w20, w3
  242008:	mov	x19, x0
  24200c:	stp	q0, q0, [sp, #176]
  242010:	stp	q0, q0, [sp, #144]
  242014:	stp	q0, q0, [sp, #112]
  242018:	stp	q0, q0, [sp, #80]
  24201c:	stp	q0, q0, [sp, #48]
  242020:	str	q0, [sp, #32]
  242024:	bl	254070 <sd_device_get_sysattr_value@plt>
  242028:	tbnz	w0, #31, 2422bc <builtin_net_id+0x2e0>
  24202c:	ldr	x0, [x29, #24]
  242030:	mov	x1, xzr
  242034:	mov	w2, wzr
  242038:	bl	254840 <strtoul@plt>
  24203c:	cmp	x0, #0x1
  242040:	b.eq	24207c <builtin_net_id+0xa0>  // b.none
  242044:	cmp	x0, #0x100
  242048:	b.eq	242070 <builtin_net_id+0x94>  // b.none
  24204c:	cmp	x0, #0x20
  242050:	mov	w0, wzr
  242054:	b.ne	2422bc <builtin_net_id+0x2e0>  // b.any
  242058:	mov	w0, #0x4                   	// #4
  24205c:	bl	242548 <naming_scheme_has>
  242060:	tbz	w0, #0, 2422b8 <builtin_net_id+0x2dc>
  242064:	adrp	x21, 20f000 <worker_hash_op+0x4ad0>
  242068:	add	x21, x21, #0x21a
  24206c:	b	242084 <builtin_net_id+0xa8>
  242070:	adrp	x21, 20b000 <worker_hash_op+0xad0>
  242074:	add	x21, x21, #0xb53
  242078:	b	242084 <builtin_net_id+0xa8>
  24207c:	adrp	x21, 216000 <worker_hash_op+0xbad0>
  242080:	add	x21, x21, #0x36c
  242084:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  242088:	add	x1, x1, #0x582
  24208c:	add	x2, x29, #0x18
  242090:	mov	x0, x19
  242094:	bl	254070 <sd_device_get_sysattr_value@plt>
  242098:	tbnz	w0, #31, 2422bc <builtin_net_id+0x2e0>
  24209c:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  2420a0:	add	x1, x1, #0x644
  2420a4:	sub	x2, x29, #0x8
  2420a8:	mov	x0, x19
  2420ac:	bl	254070 <sd_device_get_sysattr_value@plt>
  2420b0:	tbnz	w0, #31, 2422bc <builtin_net_id+0x2e0>
  2420b4:	ldr	x0, [x29, #24]
  2420b8:	ldur	x1, [x29, #-8]
  2420bc:	bl	253bc0 <strcmp@plt>
  2420c0:	cbnz	w0, 2422b8 <builtin_net_id+0x2dc>
  2420c4:	sub	x1, x29, #0x10
  2420c8:	mov	x0, x19
  2420cc:	bl	253d50 <sd_device_get_devtype@plt>
  2420d0:	tbnz	w0, #31, 242118 <builtin_net_id+0x13c>
  2420d4:	ldur	x22, [x29, #-16]
  2420d8:	adrp	x0, 20a000 <parse_argv.options-0x3f0>
  2420dc:	add	x0, x0, #0x7dc
  2420e0:	mov	x1, x22
  2420e4:	bl	253bc0 <strcmp@plt>
  2420e8:	cbz	w0, 242110 <builtin_net_id+0x134>
  2420ec:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  2420f0:	add	x0, x0, #0x386
  2420f4:	mov	x1, x22
  2420f8:	bl	253bc0 <strcmp@plt>
  2420fc:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  242100:	add	x8, x8, #0x773
  242104:	cmp	w0, #0x0
  242108:	csel	x21, x8, x21, eq  // eq = none
  24210c:	b	242118 <builtin_net_id+0x13c>
  242110:	adrp	x21, 210000 <worker_hash_op+0x5ad0>
  242114:	add	x21, x21, #0xaac
  242118:	bl	248efc <naming_scheme>
  24211c:	ldr	x3, [x0]
  242120:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  242124:	and	w1, w20, #0x1
  242128:	add	x2, x2, #0xdea
  24212c:	mov	x0, x19
  242130:	bl	23f344 <udev_builtin_add_property>
  242134:	add	x1, sp, #0x20
  242138:	mov	x0, x19
  24213c:	bl	242574 <names_mac>
  242140:	tbnz	w0, #31, 2421b8 <builtin_net_id+0x1dc>
  242144:	ldrb	w8, [sp, #42]
  242148:	cbz	w8, 2421b8 <builtin_net_id+0x1dc>
  24214c:	ldrb	w4, [sp, #36]
  242150:	ldrb	w5, [sp, #37]
  242154:	ldrb	w6, [sp, #38]
  242158:	ldrb	w7, [sp, #39]
  24215c:	ldrb	w8, [sp, #40]
  242160:	ldrb	w9, [sp, #41]
  242164:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  242168:	add	x2, x2, #0x64b
  24216c:	add	x0, sp, #0x10
  242170:	mov	w1, #0x10                  	// #16
  242174:	mov	x3, x21
  242178:	str	w9, [sp, #8]
  24217c:	str	w8, [sp]
  242180:	bl	2542f0 <snprintf@plt>
  242184:	cmp	w0, #0x10
  242188:	b.cs	242524 <builtin_net_id+0x548>  // b.hs, b.nlast
  24218c:	and	w22, w20, #0x1
  242190:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  242194:	add	x2, x2, #0x888
  242198:	add	x3, sp, #0x10
  24219c:	mov	x0, x19
  2421a0:	mov	w1, w22
  2421a4:	bl	23f344 <udev_builtin_add_property>
  2421a8:	add	x1, sp, #0x20
  2421ac:	mov	x0, x19
  2421b0:	mov	w2, w22
  2421b4:	bl	24269c <ieee_oui>
  2421b8:	add	x1, sp, #0x20
  2421bc:	mov	x0, x19
  2421c0:	bl	242754 <names_ccw>
  2421c4:	tbnz	w0, #31, 2421e0 <builtin_net_id+0x204>
  2421c8:	ldr	w8, [sp, #32]
  2421cc:	cmp	w8, #0x5
  2421d0:	b.ne	2421e0 <builtin_net_id+0x204>  // b.any
  2421d4:	add	x8, sp, #0x20
  2421d8:	add	x4, x8, #0x70
  2421dc:	b	242280 <builtin_net_id+0x2a4>
  2421e0:	add	x1, sp, #0x20
  2421e4:	mov	x0, x19
  2421e8:	bl	2428b0 <names_vio>
  2421ec:	tbnz	w0, #31, 242234 <builtin_net_id+0x258>
  2421f0:	ldr	w8, [sp, #32]
  2421f4:	cmp	w8, #0x6
  2421f8:	b.ne	242234 <builtin_net_id+0x258>  // b.any
  2421fc:	add	x8, sp, #0x20
  242200:	add	x4, x8, #0x80
  242204:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  242208:	add	x2, x2, #0x137
  24220c:	add	x0, sp, #0x10
  242210:	mov	w1, #0x10                  	// #16
  242214:	mov	x3, x21
  242218:	bl	2542f0 <snprintf@plt>
  24221c:	cmp	w0, #0xf
  242220:	b.hi	2422b8 <builtin_net_id+0x2dc>  // b.pmore
  242224:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  242228:	and	w1, w20, #0x1
  24222c:	add	x2, x2, #0x776
  242230:	b	2422ac <builtin_net_id+0x2d0>
  242234:	add	x1, sp, #0x20
  242238:	mov	x0, x19
  24223c:	bl	24299c <names_platform>
  242240:	tbnz	w0, #31, 24225c <builtin_net_id+0x280>
  242244:	ldr	w8, [sp, #32]
  242248:	cmp	w8, #0x7
  24224c:	b.ne	24225c <builtin_net_id+0x280>  // b.any
  242250:	add	x8, sp, #0x20
  242254:	add	x4, x8, #0x90
  242258:	b	242280 <builtin_net_id+0x2a4>
  24225c:	add	x1, sp, #0x20
  242260:	mov	x0, x19
  242264:	bl	242aec <names_netdevsim>
  242268:	tbnz	w0, #31, 2422d4 <builtin_net_id+0x2f8>
  24226c:	ldr	w8, [sp, #32]
  242270:	cmp	w8, #0x8
  242274:	b.ne	2422d4 <builtin_net_id+0x2f8>  // b.any
  242278:	add	x8, sp, #0x20
  24227c:	add	x4, x8, #0xa0
  242280:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  242284:	add	x2, x2, #0x137
  242288:	add	x0, sp, #0x10
  24228c:	mov	w1, #0x10                  	// #16
  242290:	mov	x3, x21
  242294:	bl	2542f0 <snprintf@plt>
  242298:	cmp	w0, #0xf
  24229c:	b.hi	2422b8 <builtin_net_id+0x2dc>  // b.pmore
  2422a0:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  2422a4:	and	w1, w20, #0x1
  2422a8:	add	x2, x2, #0xe31
  2422ac:	add	x3, sp, #0x10
  2422b0:	mov	x0, x19
  2422b4:	bl	23f344 <udev_builtin_add_property>
  2422b8:	mov	w0, wzr
  2422bc:	ldp	x20, x19, [sp, #272]
  2422c0:	ldp	x22, x21, [sp, #256]
  2422c4:	ldr	x28, [sp, #240]
  2422c8:	ldp	x29, x30, [sp, #224]
  2422cc:	add	sp, sp, #0x120
  2422d0:	ret
  2422d4:	add	x1, sp, #0x20
  2422d8:	mov	x0, x19
  2422dc:	bl	242c1c <names_pci>
  2422e0:	tbnz	w0, #31, 2422b8 <builtin_net_id+0x2dc>
  2422e4:	ldr	w8, [sp, #32]
  2422e8:	cmp	w8, #0x1
  2422ec:	b.ne	2423e8 <builtin_net_id+0x40c>  // b.any
  2422f0:	ldrb	w8, [sp, #88]
  2422f4:	cbz	w8, 242338 <builtin_net_id+0x35c>
  2422f8:	add	x8, sp, #0x20
  2422fc:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  242300:	add	x4, x8, #0x38
  242304:	add	x2, x2, #0x137
  242308:	add	x0, sp, #0x10
  24230c:	mov	w1, #0x10                  	// #16
  242310:	mov	x3, x21
  242314:	bl	2542f0 <snprintf@plt>
  242318:	cmp	w0, #0xf
  24231c:	b.hi	242338 <builtin_net_id+0x35c>  // b.pmore
  242320:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  242324:	and	w1, w20, #0x1
  242328:	add	x2, x2, #0x19
  24232c:	add	x3, sp, #0x10
  242330:	mov	x0, x19
  242334:	bl	23f344 <udev_builtin_add_property>
  242338:	ldr	x8, [sp, #104]
  24233c:	cbz	x8, 242390 <builtin_net_id+0x3b4>
  242340:	mov	w0, #0x80                  	// #128
  242344:	bl	242548 <naming_scheme_has>
  242348:	ldr	x4, [sp, #104]
  24234c:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  242350:	add	x8, x8, #0x7fa
  242354:	tst	w0, #0x1
  242358:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  24235c:	csel	x3, x8, x21, ne  // ne = any
  242360:	add	x2, x2, #0x137
  242364:	add	x0, sp, #0x10
  242368:	mov	w1, #0x10                  	// #16
  24236c:	bl	2542f0 <snprintf@plt>
  242370:	cmp	w0, #0xf
  242374:	b.hi	242390 <builtin_net_id+0x3b4>  // b.pmore
  242378:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  24237c:	and	w1, w20, #0x1
  242380:	add	x2, x2, #0x898
  242384:	add	x3, sp, #0x10
  242388:	mov	x0, x19
  24238c:	bl	23f344 <udev_builtin_add_property>
  242390:	ldrb	w8, [sp, #72]
  242394:	add	x22, sp, #0x20
  242398:	cbz	w8, 2423d8 <builtin_net_id+0x3fc>
  24239c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2423a0:	add	x4, x22, #0x28
  2423a4:	add	x2, x2, #0x137
  2423a8:	add	x0, sp, #0x10
  2423ac:	mov	w1, #0x10                  	// #16
  2423b0:	mov	x3, x21
  2423b4:	bl	2542f0 <snprintf@plt>
  2423b8:	cmp	w0, #0xf
  2423bc:	b.hi	2423d8 <builtin_net_id+0x3fc>  // b.pmore
  2423c0:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  2423c4:	and	w1, w20, #0x1
  2423c8:	add	x2, x2, #0xe31
  2423cc:	add	x3, sp, #0x10
  2423d0:	mov	x0, x19
  2423d4:	bl	23f344 <udev_builtin_add_property>
  2423d8:	ldrb	w8, [sp, #56]
  2423dc:	cbz	w8, 2422b8 <builtin_net_id+0x2dc>
  2423e0:	add	x4, x22, #0x18
  2423e4:	b	242204 <builtin_net_id+0x228>
  2423e8:	add	x1, sp, #0x20
  2423ec:	mov	x0, x19
  2423f0:	bl	242e90 <names_usb>
  2423f4:	tbnz	w0, #31, 242480 <builtin_net_id+0x4a4>
  2423f8:	ldr	w8, [sp, #32]
  2423fc:	cmp	w8, #0x2
  242400:	b.ne	242480 <builtin_net_id+0x4a4>  // b.any
  242404:	ldrb	w8, [sp, #72]
  242408:	add	x22, sp, #0x20
  24240c:	cbz	w8, 242450 <builtin_net_id+0x474>
  242410:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  242414:	add	x4, x22, #0x28
  242418:	add	x5, x22, #0x50
  24241c:	add	x2, x2, #0x89c
  242420:	add	x0, sp, #0x10
  242424:	mov	w1, #0x10                  	// #16
  242428:	mov	x3, x21
  24242c:	bl	2542f0 <snprintf@plt>
  242430:	cmp	w0, #0xf
  242434:	b.hi	242450 <builtin_net_id+0x474>  // b.pmore
  242438:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  24243c:	and	w1, w20, #0x1
  242440:	add	x2, x2, #0xe31
  242444:	add	x3, sp, #0x10
  242448:	mov	x0, x19
  24244c:	bl	23f344 <udev_builtin_add_property>
  242450:	ldrb	w8, [sp, #56]
  242454:	cbz	w8, 2422b8 <builtin_net_id+0x2dc>
  242458:	add	x8, sp, #0x20
  24245c:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  242460:	add	x4, x22, #0x18
  242464:	add	x5, x8, #0x50
  242468:	add	x2, x2, #0x89c
  24246c:	add	x0, sp, #0x10
  242470:	mov	w1, #0x10                  	// #16
  242474:	mov	x3, x21
  242478:	bl	2542f0 <snprintf@plt>
  24247c:	b	24221c <builtin_net_id+0x240>
  242480:	add	x1, sp, #0x20
  242484:	mov	x0, x19
  242488:	bl	24308c <names_bcma>
  24248c:	mov	w8, w0
  242490:	mov	w0, wzr
  242494:	tbnz	w8, #31, 2422bc <builtin_net_id+0x2e0>
  242498:	ldr	w8, [sp, #32]
  24249c:	cmp	w8, #0x3
  2424a0:	b.ne	2422bc <builtin_net_id+0x2e0>  // b.any
  2424a4:	ldrb	w8, [sp, #72]
  2424a8:	add	x22, sp, #0x20
  2424ac:	cbz	w8, 2424f0 <builtin_net_id+0x514>
  2424b0:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  2424b4:	add	x4, x22, #0x28
  2424b8:	add	x5, x22, #0x60
  2424bc:	add	x2, x2, #0x89c
  2424c0:	add	x0, sp, #0x10
  2424c4:	mov	w1, #0x10                  	// #16
  2424c8:	mov	x3, x21
  2424cc:	bl	2542f0 <snprintf@plt>
  2424d0:	cmp	w0, #0xf
  2424d4:	b.hi	2424f0 <builtin_net_id+0x514>  // b.pmore
  2424d8:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  2424dc:	and	w1, w20, #0x1
  2424e0:	add	x2, x2, #0xe31
  2424e4:	add	x3, sp, #0x10
  2424e8:	mov	x0, x19
  2424ec:	bl	23f344 <udev_builtin_add_property>
  2424f0:	ldrb	w8, [sp, #56]
  2424f4:	cbz	w8, 2422b8 <builtin_net_id+0x2dc>
  2424f8:	add	x8, sp, #0x20
  2424fc:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  242500:	add	x4, x22, #0x18
  242504:	add	x5, x8, #0x60
  242508:	add	x2, x2, #0x89c
  24250c:	add	x0, sp, #0x10
  242510:	mov	w1, #0x10                  	// #16
  242514:	mov	x3, x21
  242518:	bl	2542f0 <snprintf@plt>
  24251c:	cbnz	w0, 242224 <builtin_net_id+0x248>
  242520:	b	2422b8 <builtin_net_id+0x2dc>
  242524:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  242528:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24252c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  242530:	add	x1, x1, #0xdff
  242534:	add	x2, x2, #0xa1f
  242538:	add	x4, x4, #0x3f5
  24253c:	mov	w0, #0x1                   	// #1
  242540:	mov	w3, #0x33a                 	// #826
  242544:	bl	253740 <log_assert_failed_realm@plt>

0000000000242548 <naming_scheme_has>:
  242548:	stp	x29, x30, [sp, #-32]!
  24254c:	str	x19, [sp, #16]
  242550:	mov	x29, sp
  242554:	mov	w19, w0
  242558:	bl	248efc <naming_scheme>
  24255c:	ldr	w8, [x0, #8]
  242560:	bics	wzr, w19, w8
  242564:	ldr	x19, [sp, #16]
  242568:	cset	w0, eq  // eq = none
  24256c:	ldp	x29, x30, [sp], #32
  242570:	ret

0000000000242574 <names_mac>:
  242574:	sub	sp, sp, #0x40
  242578:	stp	x29, x30, [sp, #32]
  24257c:	stp	x20, x19, [sp, #48]
  242580:	add	x29, sp, #0x20
  242584:	mov	x19, x1
  242588:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24258c:	add	x1, x1, #0x132
  242590:	sub	x2, x29, #0x8
  242594:	mov	x20, x0
  242598:	bl	254070 <sd_device_get_sysattr_value@plt>
  24259c:	tbnz	w0, #31, 2425f4 <names_mac+0x80>
  2425a0:	ldur	x0, [x29, #-8]
  2425a4:	mov	x1, xzr
  2425a8:	mov	w2, wzr
  2425ac:	bl	254840 <strtoul@plt>
  2425b0:	cmp	x0, #0x20
  2425b4:	b.ne	2425c0 <names_mac+0x4c>  // b.any
  2425b8:	mov	w0, #0xffffffea            	// #-22
  2425bc:	b	2425f4 <names_mac+0x80>
  2425c0:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  2425c4:	add	x1, x1, #0xdb7
  2425c8:	sub	x2, x29, #0x8
  2425cc:	mov	x0, x20
  2425d0:	bl	254070 <sd_device_get_sysattr_value@plt>
  2425d4:	tbnz	w0, #31, 2425f4 <names_mac+0x80>
  2425d8:	ldur	x0, [x29, #-8]
  2425dc:	mov	x1, xzr
  2425e0:	mov	w2, wzr
  2425e4:	bl	254840 <strtoul@plt>
  2425e8:	mov	x8, x0
  2425ec:	mov	w0, wzr
  2425f0:	cbz	x8, 242604 <names_mac+0x90>
  2425f4:	ldp	x20, x19, [sp, #48]
  2425f8:	ldp	x29, x30, [sp, #32]
  2425fc:	add	sp, sp, #0x40
  242600:	ret
  242604:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  242608:	add	x1, x1, #0x4e0
  24260c:	sub	x2, x29, #0x8
  242610:	mov	x0, x20
  242614:	bl	254070 <sd_device_get_sysattr_value@plt>
  242618:	tbnz	w0, #31, 2425f4 <names_mac+0x80>
  24261c:	ldur	x0, [x29, #-8]
  242620:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  242624:	add	x1, x1, #0x264
  242628:	sub	x2, x29, #0xc
  24262c:	add	x3, sp, #0x10
  242630:	add	x4, sp, #0xc
  242634:	add	x5, sp, #0x8
  242638:	add	x6, sp, #0x4
  24263c:	mov	x7, sp
  242640:	bl	254870 <__isoc99_sscanf@plt>
  242644:	cmp	w0, #0x6
  242648:	b.ne	2425b8 <names_mac+0x44>  // b.any
  24264c:	ldur	w8, [x29, #-12]
  242650:	ldp	w10, w9, [sp, #12]
  242654:	ldp	w12, w11, [sp, #4]
  242658:	ldr	w13, [sp]
  24265c:	add	w14, w9, w8
  242660:	add	w14, w14, w10
  242664:	add	w14, w14, w11
  242668:	add	w14, w14, w12
  24266c:	cmn	w14, w13
  242670:	b.eq	2425b8 <names_mac+0x44>  // b.none
  242674:	mov	w0, wzr
  242678:	strb	w8, [x19, #4]
  24267c:	mov	w8, #0x1                   	// #1
  242680:	strb	w9, [x19, #5]
  242684:	strb	w10, [x19, #6]
  242688:	strb	w11, [x19, #7]
  24268c:	strb	w12, [x19, #8]
  242690:	strb	w13, [x19, #9]
  242694:	strb	w8, [x19, #10]
  242698:	b	2425f4 <names_mac+0x80>

000000000024269c <ieee_oui>:
  24269c:	sub	sp, sp, #0x50
  2426a0:	stp	x29, x30, [sp, #48]
  2426a4:	stp	x20, x19, [sp, #64]
  2426a8:	ldrb	w8, [x1, #10]
  2426ac:	add	x29, sp, #0x30
  2426b0:	cbz	w8, 242720 <ieee_oui+0x84>
  2426b4:	ldrh	w8, [x1, #4]
  2426b8:	ldrb	w9, [x1, #6]
  2426bc:	orr	w8, w8, w9
  2426c0:	tst	w8, #0xffff
  2426c4:	b.eq	242720 <ieee_oui+0x84>  // b.none
  2426c8:	ldrb	w3, [x1, #4]
  2426cc:	ldrb	w4, [x1, #5]
  2426d0:	ldrb	w5, [x1, #6]
  2426d4:	ldrb	w6, [x1, #7]
  2426d8:	ldrb	w7, [x1, #8]
  2426dc:	ldrb	w8, [x1, #9]
  2426e0:	mov	w20, w2
  2426e4:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2426e8:	mov	x19, x0
  2426ec:	add	x2, x2, #0xa3e
  2426f0:	add	x0, sp, #0x10
  2426f4:	mov	w1, #0x20                  	// #32
  2426f8:	str	w8, [sp]
  2426fc:	bl	2542f0 <snprintf@plt>
  242700:	cmp	w0, #0x20
  242704:	b.cs	242730 <ieee_oui+0x94>  // b.hs, b.nlast
  242708:	and	w4, w20, #0x1
  24270c:	add	x2, sp, #0x10
  242710:	mov	x0, x19
  242714:	mov	x1, xzr
  242718:	mov	x3, xzr
  24271c:	bl	23f744 <udev_builtin_hwdb_lookup>
  242720:	ldp	x20, x19, [sp, #64]
  242724:	ldp	x29, x30, [sp, #48]
  242728:	add	sp, sp, #0x50
  24272c:	ret
  242730:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  242734:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242738:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24273c:	add	x1, x1, #0xdff
  242740:	add	x2, x2, #0xa1f
  242744:	add	x4, x4, #0xa5b
  242748:	mov	w0, #0x1                   	// #1
  24274c:	mov	w3, #0x2ff                 	// #767
  242750:	bl	253740 <log_assert_failed_realm@plt>

0000000000242754 <names_ccw>:
  242754:	sub	sp, sp, #0x60
  242758:	stp	x29, x30, [sp, #48]
  24275c:	str	x21, [sp, #64]
  242760:	stp	x20, x19, [sp, #80]
  242764:	add	x29, sp, #0x30
  242768:	cbz	x0, 242868 <names_ccw+0x114>
  24276c:	mov	x19, x1
  242770:	cbz	x1, 24288c <names_ccw+0x138>
  242774:	add	x1, x29, #0x18
  242778:	bl	253d60 <sd_device_get_parent@plt>
  24277c:	tbnz	w0, #31, 242844 <names_ccw+0xf0>
  242780:	ldr	x0, [x29, #24]
  242784:	bl	2431a0 <skip_virtio>
  242788:	str	x0, [x29, #24]
  24278c:	cbz	x0, 242840 <names_ccw+0xec>
  242790:	sub	x1, x29, #0x10
  242794:	bl	253bb0 <sd_device_get_subsystem@plt>
  242798:	tbnz	w0, #31, 242844 <names_ccw+0xf0>
  24279c:	adrp	x8, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  2427a0:	add	x8, x8, #0x518
  2427a4:	ldr	q0, [x8]
  2427a8:	ldr	x8, [x8, #16]
  2427ac:	ldur	x1, [x29, #-16]
  2427b0:	mov	x0, sp
  2427b4:	str	q0, [sp]
  2427b8:	str	x8, [sp, #16]
  2427bc:	bl	2544a0 <strv_find@plt>
  2427c0:	cbz	x0, 242840 <names_ccw+0xec>
  2427c4:	ldr	x0, [x29, #24]
  2427c8:	sub	x1, x29, #0x8
  2427cc:	bl	253a40 <sd_device_get_sysname@plt>
  2427d0:	tbnz	w0, #31, 242844 <names_ccw+0xf0>
  2427d4:	ldur	x20, [x29, #-8]
  2427d8:	mov	x0, x20
  2427dc:	bl	2539a0 <strlen@plt>
  2427e0:	and	x8, x0, #0xfffffffffffffffe
  2427e4:	cmp	x8, #0x8
  2427e8:	b.ne	242858 <names_ccw+0x104>  // b.any
  2427ec:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2427f0:	mov	x21, x0
  2427f4:	add	x1, x1, #0x42a
  2427f8:	mov	x0, x20
  2427fc:	bl	254230 <strspn@plt>
  242800:	sub	x8, x21, #0x1
  242804:	cmp	x0, x21
  242808:	csel	x8, x0, x8, cc  // cc = lo, ul, last
  24280c:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  242810:	add	x3, x20, x8
  242814:	add	x0, x19, #0x70
  242818:	add	x2, x2, #0x2d
  24281c:	mov	w1, #0x10                  	// #16
  242820:	stur	x3, [x29, #-8]
  242824:	bl	2542f0 <snprintf@plt>
  242828:	cmp	w0, #0xf
  24282c:	b.hi	242860 <names_ccw+0x10c>  // b.pmore
  242830:	mov	w0, wzr
  242834:	mov	w8, #0x5                   	// #5
  242838:	str	w8, [x19]
  24283c:	b	242844 <names_ccw+0xf0>
  242840:	mov	w0, #0xfffffffe            	// #-2
  242844:	ldp	x20, x19, [sp, #80]
  242848:	ldr	x21, [sp, #64]
  24284c:	ldp	x29, x30, [sp, #48]
  242850:	add	sp, sp, #0x60
  242854:	ret
  242858:	mov	w0, #0xffffffea            	// #-22
  24285c:	b	242844 <names_ccw+0xf0>
  242860:	mov	w0, wzr
  242864:	b	242844 <names_ccw+0xf0>
  242868:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24286c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242870:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  242874:	add	x1, x1, #0x9e6
  242878:	add	x2, x2, #0xa1f
  24287c:	add	x4, x4, #0x787
  242880:	mov	w0, #0x1                   	// #1
  242884:	mov	w3, #0x268                 	// #616
  242888:	bl	253740 <log_assert_failed_realm@plt>
  24288c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  242890:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242894:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  242898:	add	x1, x1, #0x7b5
  24289c:	add	x2, x2, #0xa1f
  2428a0:	add	x4, x4, #0x787
  2428a4:	mov	w0, #0x1                   	// #1
  2428a8:	mov	w3, #0x269                 	// #617
  2428ac:	bl	253740 <log_assert_failed_realm@plt>

00000000002428b0 <names_vio>:
  2428b0:	sub	sp, sp, #0x50
  2428b4:	stp	x29, x30, [sp, #48]
  2428b8:	add	x29, sp, #0x30
  2428bc:	stp	x20, x19, [sp, #64]
  2428c0:	mov	x19, x1
  2428c4:	sub	x1, x29, #0x8
  2428c8:	mov	x20, x0
  2428cc:	bl	253d60 <sd_device_get_parent@plt>
  2428d0:	tbnz	w0, #31, 2428fc <names_vio+0x4c>
  2428d4:	ldur	x0, [x29, #-8]
  2428d8:	add	x1, sp, #0x8
  2428dc:	bl	253bb0 <sd_device_get_subsystem@plt>
  2428e0:	tbnz	w0, #31, 2428fc <names_vio+0x4c>
  2428e4:	ldr	x1, [sp, #8]
  2428e8:	adrp	x0, 20f000 <worker_hash_op+0x4ad0>
  2428ec:	add	x0, x0, #0x21d
  2428f0:	bl	253bc0 <strcmp@plt>
  2428f4:	cbz	w0, 24290c <names_vio+0x5c>
  2428f8:	mov	w0, #0xfffffffe            	// #-2
  2428fc:	ldp	x20, x19, [sp, #64]
  242900:	ldp	x29, x30, [sp, #48]
  242904:	add	sp, sp, #0x50
  242908:	ret
  24290c:	add	x1, sp, #0x10
  242910:	mov	x0, x20
  242914:	bl	253d90 <sd_device_get_syspath@plt>
  242918:	tbnz	w0, #31, 2428fc <names_vio+0x4c>
  24291c:	ldr	x0, [sp, #16]
  242920:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  242924:	add	x1, x1, #0x55
  242928:	sub	x2, x29, #0xc
  24292c:	sub	x3, x29, #0x10
  242930:	sub	x4, x29, #0x14
  242934:	bl	254870 <__isoc99_sscanf@plt>
  242938:	cmp	w0, #0x3
  24293c:	b.ne	242970 <names_vio+0xc0>  // b.any
  242940:	ldur	w3, [x29, #-16]
  242944:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  242948:	add	x0, x19, #0x80
  24294c:	add	x2, x2, #0x13c
  242950:	mov	w1, #0x10                  	// #16
  242954:	bl	2542f0 <snprintf@plt>
  242958:	cmp	w0, #0x10
  24295c:	b.cs	242978 <names_vio+0xc8>  // b.hs, b.nlast
  242960:	mov	w0, wzr
  242964:	mov	w8, #0x6                   	// #6
  242968:	str	w8, [x19]
  24296c:	b	2428fc <names_vio+0x4c>
  242970:	mov	w0, #0xffffffea            	// #-22
  242974:	b	2428fc <names_vio+0x4c>
  242978:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24297c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242980:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  242984:	add	x1, x1, #0xb5f
  242988:	add	x2, x2, #0xa1f
  24298c:	add	x4, x4, #0x276
  242990:	mov	w0, #0x1                   	// #1
  242994:	mov	w3, #0x190                 	// #400
  242998:	bl	253740 <log_assert_failed_realm@plt>

000000000024299c <names_platform>:
  24299c:	sub	sp, sp, #0x60
  2429a0:	stp	x29, x30, [sp, #48]
  2429a4:	add	x29, sp, #0x30
  2429a8:	stp	x20, x19, [sp, #80]
  2429ac:	mov	x19, x1
  2429b0:	add	x1, x29, #0x18
  2429b4:	str	x21, [sp, #64]
  2429b8:	mov	x20, x0
  2429bc:	bl	253d60 <sd_device_get_parent@plt>
  2429c0:	tbnz	w0, #31, 242ab4 <names_platform+0x118>
  2429c4:	ldr	x0, [x29, #24]
  2429c8:	add	x1, sp, #0x8
  2429cc:	bl	253bb0 <sd_device_get_subsystem@plt>
  2429d0:	tbnz	w0, #31, 242ab4 <names_platform+0x118>
  2429d4:	ldr	x1, [sp, #8]
  2429d8:	adrp	x0, 20d000 <worker_hash_op+0x2ad0>
  2429dc:	add	x0, x0, #0x31
  2429e0:	bl	253bc0 <strcmp@plt>
  2429e4:	cbz	w0, 2429f0 <names_platform+0x54>
  2429e8:	mov	w0, #0xfffffffe            	// #-2
  2429ec:	b	242ab4 <names_platform+0x118>
  2429f0:	add	x1, sp, #0x10
  2429f4:	mov	x0, x20
  2429f8:	bl	253d90 <sd_device_get_syspath@plt>
  2429fc:	tbnz	w0, #31, 242ab4 <names_platform+0x118>
  242a00:	ldr	x20, [sp, #16]
  242a04:	mov	x0, x20
  242a08:	bl	2539a0 <strlen@plt>
  242a0c:	cmp	x0, #0x1f
  242a10:	b.cc	242ab0 <names_platform+0x114>  // b.lo, b.ul, b.last
  242a14:	ldrb	w21, [x20, #30]
  242a18:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  242a1c:	adrp	x9, 210000 <worker_hash_op+0x5ad0>
  242a20:	add	x8, x8, #0x8a3
  242a24:	add	x9, x9, #0xaaf
  242a28:	cmp	w21, #0x3a
  242a2c:	csel	x1, x9, x8, eq  // eq = none
  242a30:	sub	x2, x29, #0x8
  242a34:	sub	x3, x29, #0xc
  242a38:	sub	x4, x29, #0x10
  242a3c:	sub	x5, x29, #0x14
  242a40:	mov	x0, x20
  242a44:	bl	254870 <__isoc99_sscanf@plt>
  242a48:	cmp	w0, #0x4
  242a4c:	b.ne	242ab0 <names_platform+0x114>  // b.any
  242a50:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  242a54:	adrp	x9, 20b000 <worker_hash_op+0xad0>
  242a58:	add	x8, x8, #0x8ad
  242a5c:	add	x9, x9, #0x58a
  242a60:	cmp	w21, #0x3a
  242a64:	csel	x1, x9, x8, eq  // eq = none
  242a68:	sub	x0, x29, #0x8
  242a6c:	bl	243224 <in_charset>
  242a70:	tbz	w0, #0, 2429e8 <names_platform+0x4c>
  242a74:	sub	x0, x29, #0x8
  242a78:	bl	254880 <ascii_strlower@plt>
  242a7c:	ldp	w5, w4, [x29, #-16]
  242a80:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  242a84:	add	x0, x19, #0x90
  242a88:	add	x2, x2, #0xd2e
  242a8c:	sub	x3, x29, #0x8
  242a90:	mov	w1, #0x10                  	// #16
  242a94:	bl	2542f0 <snprintf@plt>
  242a98:	cmp	w0, #0x10
  242a9c:	b.cs	242ac8 <names_platform+0x12c>  // b.hs, b.nlast
  242aa0:	mov	w0, wzr
  242aa4:	mov	w8, #0x7                   	// #7
  242aa8:	str	w8, [x19]
  242aac:	b	242ab4 <names_platform+0x118>
  242ab0:	mov	w0, #0xffffffea            	// #-22
  242ab4:	ldp	x20, x19, [sp, #80]
  242ab8:	ldr	x21, [sp, #64]
  242abc:	ldp	x29, x30, [sp, #48]
  242ac0:	add	sp, sp, #0x60
  242ac4:	ret
  242ac8:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  242acc:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242ad0:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  242ad4:	add	x1, x1, #0x6b8
  242ad8:	add	x2, x2, #0xa1f
  242adc:	add	x4, x4, #0x140
  242ae0:	mov	w0, #0x1                   	// #1
  242ae4:	mov	w3, #0x1cd                 	// #461
  242ae8:	bl	253740 <log_assert_failed_realm@plt>

0000000000242aec <names_netdevsim>:
  242aec:	sub	sp, sp, #0x40
  242af0:	stp	x20, x19, [sp, #48]
  242af4:	mov	x20, x0
  242af8:	mov	w0, #0x40                  	// #64
  242afc:	stp	x29, x30, [sp, #32]
  242b00:	add	x29, sp, #0x20
  242b04:	mov	x19, x1
  242b08:	str	xzr, [sp]
  242b0c:	bl	242548 <naming_scheme_has>
  242b10:	tbz	w0, #0, 242bb0 <names_netdevsim+0xc4>
  242b14:	cbz	x20, 242bd4 <names_netdevsim+0xe8>
  242b18:	cbz	x19, 242bf8 <names_netdevsim+0x10c>
  242b1c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  242b20:	add	x1, x1, #0xa8f
  242b24:	sub	x3, x29, #0x8
  242b28:	mov	x0, x20
  242b2c:	mov	x2, xzr
  242b30:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  242b34:	tbnz	w0, #31, 242bb4 <names_netdevsim+0xc8>
  242b38:	ldur	x0, [x29, #-8]
  242b3c:	add	x1, sp, #0x10
  242b40:	bl	253a40 <sd_device_get_sysname@plt>
  242b44:	tbnz	w0, #31, 242bb4 <names_netdevsim+0xc8>
  242b48:	ldr	x0, [sp, #16]
  242b4c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  242b50:	add	x1, x1, #0xb8e
  242b54:	add	x2, sp, #0xc
  242b58:	bl	254870 <__isoc99_sscanf@plt>
  242b5c:	cmp	w0, #0x1
  242b60:	b.ne	242bc4 <names_netdevsim+0xd8>  // b.any
  242b64:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  242b68:	add	x1, x1, #0xdc8
  242b6c:	mov	x2, sp
  242b70:	mov	x0, x20
  242b74:	bl	254070 <sd_device_get_sysattr_value@plt>
  242b78:	tbnz	w0, #31, 242bb4 <names_netdevsim+0xc8>
  242b7c:	ldr	w3, [sp, #12]
  242b80:	ldr	x4, [sp]
  242b84:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  242b88:	add	x0, x19, #0xa0
  242b8c:	add	x2, x2, #0x908
  242b90:	mov	w1, #0x10                  	// #16
  242b94:	bl	2542f0 <snprintf@plt>
  242b98:	cmp	w0, #0xf
  242b9c:	b.hi	242bcc <names_netdevsim+0xe0>  // b.pmore
  242ba0:	mov	w0, wzr
  242ba4:	mov	w8, #0x8                   	// #8
  242ba8:	str	w8, [x19]
  242bac:	b	242bb4 <names_netdevsim+0xc8>
  242bb0:	mov	w0, wzr
  242bb4:	ldp	x20, x19, [sp, #48]
  242bb8:	ldp	x29, x30, [sp, #32]
  242bbc:	add	sp, sp, #0x40
  242bc0:	ret
  242bc4:	mov	w0, #0xffffffea            	// #-22
  242bc8:	b	242bb4 <names_netdevsim+0xc8>
  242bcc:	mov	w0, #0xffffff97            	// #-105
  242bd0:	b	242bb4 <names_netdevsim+0xc8>
  242bd4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  242bd8:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242bdc:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  242be0:	add	x1, x1, #0x9e6
  242be4:	add	x2, x2, #0xa1f
  242be8:	add	x4, x4, #0x5cd
  242bec:	mov	w0, #0x1                   	// #1
  242bf0:	mov	w3, #0x2da                 	// #730
  242bf4:	bl	253740 <log_assert_failed_realm@plt>
  242bf8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  242bfc:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242c00:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  242c04:	add	x1, x1, #0x7b5
  242c08:	add	x2, x2, #0xa1f
  242c0c:	add	x4, x4, #0x5cd
  242c10:	mov	w0, #0x1                   	// #1
  242c14:	mov	w3, #0x2db                 	// #731
  242c18:	bl	253740 <log_assert_failed_realm@plt>

0000000000242c1c <names_pci>:
  242c1c:	sub	sp, sp, #0x120
  242c20:	movi	v0.2d, #0x0
  242c24:	stp	x29, x30, [sp, #224]
  242c28:	stp	x28, x23, [sp, #240]
  242c2c:	stp	x22, x21, [sp, #256]
  242c30:	stp	x20, x19, [sp, #272]
  242c34:	add	x29, sp, #0xe0
  242c38:	stp	xzr, xzr, [sp, #8]
  242c3c:	stp	q0, q0, [sp, #176]
  242c40:	stp	q0, q0, [sp, #144]
  242c44:	stp	q0, q0, [sp, #112]
  242c48:	stp	q0, q0, [sp, #80]
  242c4c:	stp	q0, q0, [sp, #48]
  242c50:	str	q0, [sp, #32]
  242c54:	str	xzr, [sp, #24]
  242c58:	cbz	x0, 242e48 <names_pci+0x22c>
  242c5c:	mov	x19, x1
  242c60:	cbz	x1, 242e6c <names_pci+0x250>
  242c64:	sub	x1, x29, #0x8
  242c68:	mov	x20, x0
  242c6c:	bl	253d60 <sd_device_get_parent@plt>
  242c70:	tbnz	w0, #31, 242e30 <names_pci+0x214>
  242c74:	ldur	x0, [x29, #-8]
  242c78:	bl	2431a0 <skip_virtio>
  242c7c:	stur	x0, [x29, #-8]
  242c80:	cbz	x0, 242cc4 <names_pci+0xa8>
  242c84:	mov	x1, sp
  242c88:	bl	253bb0 <sd_device_get_subsystem@plt>
  242c8c:	tbnz	w0, #31, 242ca4 <names_pci+0x88>
  242c90:	ldr	x1, [sp]
  242c94:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  242c98:	add	x0, x0, #0x42d
  242c9c:	bl	253bc0 <strcmp@plt>
  242ca0:	cbz	w0, 242ccc <names_pci+0xb0>
  242ca4:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  242ca8:	add	x3, x19, #0x10
  242cac:	add	x1, x1, #0x42d
  242cb0:	mov	x0, x20
  242cb4:	mov	x2, xzr
  242cb8:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  242cbc:	tbz	w0, #31, 242cdc <names_pci+0xc0>
  242cc0:	b	242e30 <names_pci+0x214>
  242cc4:	mov	w0, #0xfffffffe            	// #-2
  242cc8:	b	242e30 <names_pci+0x214>
  242ccc:	mov	w8, #0x1                   	// #1
  242cd0:	str	w8, [x19]
  242cd4:	ldur	x8, [x29, #-8]
  242cd8:	str	x8, [x19, #16]
  242cdc:	mov	w0, #0x1                   	// #1
  242ce0:	bl	242548 <naming_scheme_has>
  242ce4:	tbz	w0, #0, 242e14 <names_pci+0x1f8>
  242ce8:	add	x2, sp, #0x8
  242cec:	mov	x0, x20
  242cf0:	mov	x1, x19
  242cf4:	bl	2432a0 <get_virtfn_info>
  242cf8:	tbnz	w0, #31, 242e14 <names_pci+0x1f8>
  242cfc:	ldr	x8, [sp, #8]
  242d00:	add	x1, sp, #0x20
  242d04:	mov	x0, x20
  242d08:	add	x23, sp, #0x20
  242d0c:	str	x8, [sp, #48]
  242d10:	bl	2435dc <dev_pci_onboard>
  242d14:	add	x1, sp, #0x20
  242d18:	mov	x0, x20
  242d1c:	bl	24373c <dev_pci_slot>
  242d20:	ldrb	w8, [sp, #88]
  242d24:	cbz	w8, 242d6c <names_pci+0x150>
  242d28:	add	x20, x23, #0x38
  242d2c:	mov	x0, x20
  242d30:	bl	2539a0 <strlen@plt>
  242d34:	add	x8, sp, #0x8
  242d38:	add	x21, x8, #0x8
  242d3c:	mov	x22, x0
  242d40:	mov	x0, x21
  242d44:	bl	2539a0 <strlen@plt>
  242d48:	add	x8, x0, x22
  242d4c:	cmp	x8, #0xf
  242d50:	b.hi	242d6c <names_pci+0x150>  // b.pmore
  242d54:	add	x0, x19, #0x38
  242d58:	mov	w1, #0x10                  	// #16
  242d5c:	mov	x2, x20
  242d60:	mov	x3, x21
  242d64:	mov	x4, xzr
  242d68:	bl	254600 <strscpyl@plt>
  242d6c:	ldrb	w8, [sp, #56]
  242d70:	cbz	w8, 242db8 <names_pci+0x19c>
  242d74:	add	x20, x23, #0x18
  242d78:	mov	x0, x20
  242d7c:	bl	2539a0 <strlen@plt>
  242d80:	add	x8, sp, #0x8
  242d84:	add	x21, x8, #0x8
  242d88:	mov	x22, x0
  242d8c:	mov	x0, x21
  242d90:	bl	2539a0 <strlen@plt>
  242d94:	add	x8, x0, x22
  242d98:	cmp	x8, #0xf
  242d9c:	b.hi	242db8 <names_pci+0x19c>  // b.pmore
  242da0:	add	x0, x19, #0x18
  242da4:	mov	w1, #0x10                  	// #16
  242da8:	mov	x2, x20
  242dac:	mov	x3, x21
  242db0:	mov	x4, xzr
  242db4:	bl	254600 <strscpyl@plt>
  242db8:	ldrb	w8, [sp, #72]
  242dbc:	cbz	w8, 242e08 <names_pci+0x1ec>
  242dc0:	add	x8, sp, #0x20
  242dc4:	add	x20, x8, #0x28
  242dc8:	mov	x0, x20
  242dcc:	bl	2539a0 <strlen@plt>
  242dd0:	add	x8, sp, #0x8
  242dd4:	add	x21, x8, #0x8
  242dd8:	mov	x22, x0
  242ddc:	mov	x0, x21
  242de0:	bl	2539a0 <strlen@plt>
  242de4:	add	x8, x0, x22
  242de8:	cmp	x8, #0xf
  242dec:	b.hi	242e08 <names_pci+0x1ec>  // b.pmore
  242df0:	add	x0, x19, #0x28
  242df4:	mov	w1, #0x10                  	// #16
  242df8:	mov	x2, x20
  242dfc:	mov	x3, x21
  242e00:	mov	x4, xzr
  242e04:	bl	254600 <strscpyl@plt>
  242e08:	ldr	x0, [sp, #8]
  242e0c:	bl	253950 <sd_device_unref@plt>
  242e10:	b	242e2c <names_pci+0x210>
  242e14:	mov	x0, x20
  242e18:	mov	x1, x19
  242e1c:	bl	2435dc <dev_pci_onboard>
  242e20:	mov	x0, x20
  242e24:	mov	x1, x19
  242e28:	bl	24373c <dev_pci_slot>
  242e2c:	mov	w0, wzr
  242e30:	ldp	x20, x19, [sp, #272]
  242e34:	ldp	x22, x21, [sp, #256]
  242e38:	ldp	x28, x23, [sp, #240]
  242e3c:	ldp	x29, x30, [sp, #224]
  242e40:	add	sp, sp, #0x120
  242e44:	ret
  242e48:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  242e4c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242e50:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  242e54:	add	x1, x1, #0x9e6
  242e58:	add	x2, x2, #0xa1f
  242e5c:	add	x4, x4, #0xd7d
  242e60:	mov	w0, #0x1                   	// #1
  242e64:	mov	w3, #0x1d9                 	// #473
  242e68:	bl	253740 <log_assert_failed_realm@plt>
  242e6c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  242e70:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  242e74:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  242e78:	add	x1, x1, #0x7b5
  242e7c:	add	x2, x2, #0xa1f
  242e80:	add	x4, x4, #0xd7d
  242e84:	mov	w0, #0x1                   	// #1
  242e88:	mov	w3, #0x1da                 	// #474
  242e8c:	bl	253740 <log_assert_failed_realm@plt>

0000000000242e90 <names_usb>:
  242e90:	sub	sp, sp, #0x160
  242e94:	stp	x29, x30, [sp, #288]
  242e98:	stp	x28, x23, [sp, #304]
  242e9c:	stp	x22, x21, [sp, #320]
  242ea0:	stp	x20, x19, [sp, #336]
  242ea4:	add	x29, sp, #0x120
  242ea8:	cbz	x0, 243044 <names_usb+0x1b4>
  242eac:	mov	x19, x1
  242eb0:	cbz	x1, 243068 <names_usb+0x1d8>
  242eb4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  242eb8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  242ebc:	add	x1, x1, #0x6c5
  242ec0:	add	x2, x2, #0xade
  242ec4:	sub	x3, x29, #0x8
  242ec8:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  242ecc:	tbnz	w0, #31, 243024 <names_usb+0x194>
  242ed0:	ldur	x0, [x29, #-8]
  242ed4:	add	x1, sp, #0x8
  242ed8:	bl	253a40 <sd_device_get_sysname@plt>
  242edc:	tbnz	w0, #31, 243024 <names_usb+0x194>
  242ee0:	ldr	x2, [sp, #8]
  242ee4:	add	x0, sp, #0x18
  242ee8:	mov	w1, #0x100                 	// #256
  242eec:	bl	253f50 <strscpy@plt>
  242ef0:	add	x0, sp, #0x18
  242ef4:	mov	w1, #0x2d                  	// #45
  242ef8:	bl	253a60 <strchr@plt>
  242efc:	str	x0, [sp, #16]
  242f00:	cbz	x0, 243020 <names_usb+0x190>
  242f04:	add	x22, x0, #0x1
  242f08:	mov	w1, #0x3a                  	// #58
  242f0c:	mov	x0, x22
  242f10:	bl	253a60 <strchr@plt>
  242f14:	str	x0, [sp, #16]
  242f18:	cbz	x0, 243020 <names_usb+0x190>
  242f1c:	strb	wzr, [x0]
  242f20:	ldr	x8, [sp, #16]
  242f24:	mov	w1, #0x2e                  	// #46
  242f28:	add	x21, x8, #0x1
  242f2c:	mov	x0, x21
  242f30:	bl	253a60 <strchr@plt>
  242f34:	str	x0, [sp, #16]
  242f38:	cbz	x0, 243020 <names_usb+0x190>
  242f3c:	strb	wzr, [x0]
  242f40:	ldr	x8, [sp, #16]
  242f44:	mov	w1, #0x2e                  	// #46
  242f48:	mov	x0, x22
  242f4c:	str	x22, [sp, #16]
  242f50:	add	x20, x8, #0x1
  242f54:	bl	253a60 <strchr@plt>
  242f58:	str	x0, [sp, #16]
  242f5c:	cbz	x0, 242f7c <names_usb+0xec>
  242f60:	mov	w23, #0x75                  	// #117
  242f64:	strb	w23, [x0]
  242f68:	ldr	x0, [sp, #16]
  242f6c:	mov	w1, #0x2e                  	// #46
  242f70:	bl	253a60 <strchr@plt>
  242f74:	str	x0, [sp, #16]
  242f78:	cbnz	x0, 242f64 <names_usb+0xd4>
  242f7c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  242f80:	add	x8, x19, #0x50
  242f84:	add	x2, x2, #0x2b3
  242f88:	add	x0, sp, #0x10
  242f8c:	mov	w1, #0x10                  	// #16
  242f90:	mov	x3, x22
  242f94:	mov	x4, xzr
  242f98:	str	x8, [sp, #16]
  242f9c:	bl	254000 <strpcpyl@plt>
  242fa0:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  242fa4:	mov	x22, x0
  242fa8:	add	x1, x1, #0xa68
  242fac:	mov	x0, x21
  242fb0:	bl	253bc0 <strcmp@plt>
  242fb4:	cbz	w0, 242fd8 <names_usb+0x148>
  242fb8:	adrp	x2, 213000 <worker_hash_op+0x8ad0>
  242fbc:	add	x2, x2, #0xc19
  242fc0:	add	x0, sp, #0x10
  242fc4:	mov	w1, #0x10                  	// #16
  242fc8:	mov	x3, x21
  242fcc:	mov	x4, xzr
  242fd0:	bl	254000 <strpcpyl@plt>
  242fd4:	mov	x22, x0
  242fd8:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  242fdc:	add	x1, x1, #0x206
  242fe0:	mov	x0, x20
  242fe4:	bl	253bc0 <strcmp@plt>
  242fe8:	cbz	w0, 24300c <names_usb+0x17c>
  242fec:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  242ff0:	add	x2, x2, #0x839
  242ff4:	add	x0, sp, #0x10
  242ff8:	mov	w1, #0x10                  	// #16
  242ffc:	mov	x3, x20
  243000:	mov	x4, xzr
  243004:	bl	254000 <strpcpyl@plt>
  243008:	mov	x22, x0
  24300c:	cbz	x22, 24303c <names_usb+0x1ac>
  243010:	mov	w0, wzr
  243014:	mov	w8, #0x2                   	// #2
  243018:	str	w8, [x19]
  24301c:	b	243024 <names_usb+0x194>
  243020:	mov	w0, #0xffffffea            	// #-22
  243024:	ldp	x20, x19, [sp, #336]
  243028:	ldp	x22, x21, [sp, #320]
  24302c:	ldp	x28, x23, [sp, #304]
  243030:	ldp	x29, x30, [sp, #288]
  243034:	add	sp, sp, #0x160
  243038:	ret
  24303c:	mov	w0, #0xffffffdc            	// #-36
  243040:	b	243024 <names_usb+0x194>
  243044:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  243048:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24304c:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  243050:	add	x1, x1, #0x9e6
  243054:	add	x2, x2, #0xa1f
  243058:	add	x4, x4, #0x601
  24305c:	mov	w0, #0x1                   	// #1
  243060:	mov	w3, #0x212                 	// #530
  243064:	bl	253740 <log_assert_failed_realm@plt>
  243068:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24306c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  243070:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  243074:	add	x1, x1, #0x7b5
  243078:	add	x2, x2, #0xa1f
  24307c:	add	x4, x4, #0x601
  243080:	mov	w0, #0x1                   	// #1
  243084:	mov	w3, #0x213                 	// #531
  243088:	bl	253740 <log_assert_failed_realm@plt>

000000000024308c <names_bcma>:
  24308c:	sub	sp, sp, #0x30
  243090:	stp	x29, x30, [sp, #16]
  243094:	str	x19, [sp, #32]
  243098:	add	x29, sp, #0x10
  24309c:	cbz	x0, 243134 <names_bcma+0xa8>
  2430a0:	mov	x19, x1
  2430a4:	cbz	x1, 243158 <names_bcma+0xcc>
  2430a8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2430ac:	add	x1, x1, #0xb88
  2430b0:	add	x3, x29, #0x18
  2430b4:	mov	x2, xzr
  2430b8:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  2430bc:	tbnz	w0, #31, 243124 <names_bcma+0x98>
  2430c0:	ldr	x0, [x29, #24]
  2430c4:	mov	x1, sp
  2430c8:	bl	253a40 <sd_device_get_sysname@plt>
  2430cc:	tbnz	w0, #31, 243124 <names_bcma+0x98>
  2430d0:	ldr	x0, [sp]
  2430d4:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  2430d8:	add	x1, x1, #0x62f
  2430dc:	sub	x2, x29, #0x4
  2430e0:	bl	254870 <__isoc99_sscanf@plt>
  2430e4:	cmp	w0, #0x1
  2430e8:	b.ne	243120 <names_bcma+0x94>  // b.any
  2430ec:	ldur	w3, [x29, #-4]
  2430f0:	cbz	w3, 243110 <names_bcma+0x84>
  2430f4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2430f8:	add	x0, x19, #0x60
  2430fc:	add	x2, x2, #0x99d
  243100:	mov	w1, #0x10                  	// #16
  243104:	bl	2542f0 <snprintf@plt>
  243108:	cmp	w0, #0x10
  24310c:	b.cs	24317c <names_bcma+0xf0>  // b.hs, b.nlast
  243110:	mov	w0, wzr
  243114:	mov	w8, #0x3                   	// #3
  243118:	str	w8, [x19]
  24311c:	b	243124 <names_bcma+0x98>
  243120:	mov	w0, #0xffffffea            	// #-22
  243124:	ldr	x19, [sp, #32]
  243128:	ldp	x29, x30, [sp, #16]
  24312c:	add	sp, sp, #0x30
  243130:	ret
  243134:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  243138:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24313c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  243140:	add	x1, x1, #0x9e6
  243144:	add	x2, x2, #0xa1f
  243148:	add	x4, x4, #0xf86
  24314c:	mov	w0, #0x1                   	// #1
  243150:	mov	w3, #0x24b                 	// #587
  243154:	bl	253740 <log_assert_failed_realm@plt>
  243158:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24315c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  243160:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  243164:	add	x1, x1, #0x7b5
  243168:	add	x2, x2, #0xa1f
  24316c:	add	x4, x4, #0xf86
  243170:	mov	w0, #0x1                   	// #1
  243174:	mov	w3, #0x24c                 	// #588
  243178:	bl	253740 <log_assert_failed_realm@plt>
  24317c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  243180:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  243184:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  243188:	add	x1, x1, #0xe31
  24318c:	add	x2, x2, #0xa1f
  243190:	add	x4, x4, #0xf86
  243194:	mov	w0, #0x1                   	// #1
  243198:	mov	w3, #0x25b                 	// #603
  24319c:	bl	253740 <log_assert_failed_realm@plt>

00000000002431a0 <skip_virtio>:
  2431a0:	sub	sp, sp, #0x30
  2431a4:	str	x19, [sp, #32]
  2431a8:	adrp	x19, 20d000 <worker_hash_op+0x2ad0>
  2431ac:	stp	x29, x30, [sp, #16]
  2431b0:	add	x29, sp, #0x10
  2431b4:	add	x19, x19, #0xe42
  2431b8:	str	x0, [x29, #24]
  2431bc:	b	2431c8 <skip_virtio+0x28>
  2431c0:	mov	w8, #0x2                   	// #2
  2431c4:	cbnz	w8, 243200 <skip_virtio+0x60>
  2431c8:	ldr	x0, [x29, #24]
  2431cc:	cbz	x0, 243208 <skip_virtio+0x68>
  2431d0:	add	x1, sp, #0x8
  2431d4:	bl	253bb0 <sd_device_get_subsystem@plt>
  2431d8:	tbnz	w0, #31, 2431c0 <skip_virtio+0x20>
  2431dc:	ldr	x0, [sp, #8]
  2431e0:	mov	x1, x19
  2431e4:	bl	253bc0 <strcmp@plt>
  2431e8:	cbnz	w0, 2431c0 <skip_virtio+0x20>
  2431ec:	ldr	x0, [x29, #24]
  2431f0:	add	x1, x29, #0x18
  2431f4:	bl	253d60 <sd_device_get_parent@plt>
  2431f8:	lsr	w8, w0, #31
  2431fc:	cbz	w8, 2431c8 <skip_virtio+0x28>
  243200:	cmp	w8, #0x2
  243204:	b.ne	243210 <skip_virtio+0x70>  // b.any
  243208:	ldr	x0, [x29, #24]
  24320c:	b	243214 <skip_virtio+0x74>
  243210:	mov	x0, xzr
  243214:	ldr	x19, [sp, #32]
  243218:	ldp	x29, x30, [sp, #16]
  24321c:	add	sp, sp, #0x30
  243220:	ret

0000000000243224 <in_charset>:
  243224:	stp	x29, x30, [sp, #-32]!
  243228:	str	x19, [sp, #16]
  24322c:	mov	x29, sp
  243230:	cbz	x0, 243258 <in_charset+0x34>
  243234:	cbz	x1, 24327c <in_charset+0x58>
  243238:	mov	x19, x0
  24323c:	bl	254230 <strspn@plt>
  243240:	ldrb	w8, [x19, x0]
  243244:	ldr	x19, [sp, #16]
  243248:	cmp	w8, #0x0
  24324c:	cset	w0, eq  // eq = none
  243250:	ldp	x29, x30, [sp], #32
  243254:	ret
  243258:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24325c:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  243260:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  243264:	add	x1, x1, #0x42c
  243268:	add	x2, x2, #0x7be
  24326c:	add	x4, x4, #0x8c8
  243270:	mov	w0, #0x1                   	// #1
  243274:	mov	w3, #0xaf                  	// #175
  243278:	bl	253740 <log_assert_failed_realm@plt>
  24327c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  243280:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  243284:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  243288:	add	x1, x1, #0x7d6
  24328c:	add	x2, x2, #0x7be
  243290:	add	x4, x4, #0x8c8
  243294:	mov	w0, #0x1                   	// #1
  243298:	mov	w3, #0xb0                  	// #176
  24329c:	bl	253740 <log_assert_failed_realm@plt>

00000000002432a0 <get_virtfn_info>:
  2432a0:	stp	x29, x30, [sp, #-96]!
  2432a4:	stp	x28, x27, [sp, #16]
  2432a8:	stp	x26, x25, [sp, #32]
  2432ac:	stp	x24, x23, [sp, #48]
  2432b0:	stp	x22, x21, [sp, #64]
  2432b4:	stp	x20, x19, [sp, #80]
  2432b8:	mov	x29, sp
  2432bc:	sub	sp, sp, #0x40
  2432c0:	stur	xzr, [x29, #-8]
  2432c4:	stp	xzr, xzr, [x29, #-32]
  2432c8:	stur	xzr, [x29, #-40]
  2432cc:	cbz	x0, 243540 <get_virtfn_info+0x2a0>
  2432d0:	cbz	x1, 243564 <get_virtfn_info+0x2c4>
  2432d4:	mov	x19, x2
  2432d8:	cbz	x2, 243588 <get_virtfn_info+0x2e8>
  2432dc:	ldr	x0, [x1, #16]
  2432e0:	sub	x1, x29, #0x10
  2432e4:	bl	253d90 <sd_device_get_syspath@plt>
  2432e8:	tbnz	w0, #31, 2434c8 <get_virtfn_info+0x228>
  2432ec:	ldur	x8, [x29, #-16]
  2432f0:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  2432f4:	mov	x21, xzr
  2432f8:	mov	x20, xzr
  2432fc:	add	x9, x9, #0x2a4
  243300:	sub	x22, x29, #0x38
  243304:	stp	x8, x9, [x29, #-56]
  243308:	ldr	x0, [x22, x21]
  24330c:	cbz	x0, 243324 <get_virtfn_info+0x84>
  243310:	bl	2539a0 <strlen@plt>
  243314:	add	x21, x21, #0x8
  243318:	cmp	x21, #0x10
  24331c:	add	x20, x0, x20
  243320:	b.ne	243308 <get_virtfn_info+0x68>  // b.any
  243324:	add	x20, x20, #0x1
  243328:	mov	x0, x20
  24332c:	bl	243c0c <size_multiply_overflow>
  243330:	tbnz	w0, #0, 2435ac <get_virtfn_info+0x30c>
  243334:	cmp	x20, #0x400, lsl #12
  243338:	b.hi	2435b8 <get_virtfn_info+0x318>  // b.pmore
  24333c:	add	x9, x20, #0xf
  243340:	mov	x8, sp
  243344:	and	x9, x9, #0xfffffffffffffff0
  243348:	sub	x20, x8, x9
  24334c:	mov	sp, x20
  243350:	mov	x21, xzr
  243354:	sub	x22, x29, #0x38
  243358:	mov	x0, x20
  24335c:	ldr	x1, [x22, x21]
  243360:	cbz	x1, 243374 <get_virtfn_info+0xd4>
  243364:	bl	253e40 <stpcpy@plt>
  243368:	add	x21, x21, #0x8
  24336c:	cmp	x21, #0x10
  243370:	b.ne	24335c <get_virtfn_info+0xbc>  // b.any
  243374:	strb	wzr, [x0]
  243378:	sub	x3, x29, #0x18
  24337c:	mov	x0, x20
  243380:	mov	x1, xzr
  243384:	mov	w2, wzr
  243388:	mov	x4, xzr
  24338c:	bl	254890 <chase_symlinks@plt>
  243390:	tbnz	w0, #31, 2434c8 <get_virtfn_info+0x228>
  243394:	ldur	x1, [x29, #-24]
  243398:	sub	x0, x29, #0x8
  24339c:	bl	2548a0 <sd_device_new_from_syspath@plt>
  2433a0:	tbnz	w0, #31, 2434c8 <get_virtfn_info+0x228>
  2433a4:	ldur	x0, [x29, #-24]
  2433a8:	bl	2543a0 <opendir@plt>
  2433ac:	mov	x21, x0
  2433b0:	stur	x0, [x29, #-40]
  2433b4:	bl	253660 <__errno_location@plt>
  2433b8:	mov	x22, x0
  2433bc:	cbz	x21, 243510 <get_virtfn_info+0x270>
  2433c0:	mov	x0, x21
  2433c4:	str	wzr, [x22]
  2433c8:	bl	2543b0 <readdir64@plt>
  2433cc:	cbz	x0, 2434b4 <get_virtfn_info+0x214>
  2433d0:	adrp	x23, 20d000 <worker_hash_op+0x2ad0>
  2433d4:	adrp	x24, 20c000 <worker_hash_op+0x1ad0>
  2433d8:	mov	x25, x0
  2433dc:	add	x23, x23, #0x3a
  2433e0:	add	x24, x24, #0x2ac
  2433e4:	mov	w27, #0x12                  	// #18
  2433e8:	mov	w28, #0xfffffffe            	// #-2
  2433ec:	b	243404 <get_virtfn_info+0x164>
  2433f0:	mov	x0, x21
  2433f4:	str	wzr, [x22]
  2433f8:	bl	2543b0 <readdir64@plt>
  2433fc:	mov	x25, x0
  243400:	cbz	x0, 2434b4 <get_virtfn_info+0x214>
  243404:	add	x26, x25, #0x13
  243408:	mov	x0, x26
  24340c:	mov	x1, x23
  243410:	stur	xzr, [x29, #-64]
  243414:	bl	243c14 <startswith>
  243418:	cbz	x0, 243464 <get_virtfn_info+0x1c4>
  24341c:	ldur	x0, [x29, #-24]
  243420:	mov	x2, #0xffffffffffffffff    	// #-1
  243424:	mov	x1, x26
  243428:	bl	254100 <path_join_internal@plt>
  24342c:	stur	x0, [x29, #-64]
  243430:	cbz	x0, 24346c <get_virtfn_info+0x1cc>
  243434:	sub	x3, x29, #0x20
  243438:	mov	x1, xzr
  24343c:	mov	w2, wzr
  243440:	mov	x4, xzr
  243444:	bl	254890 <chase_symlinks@plt>
  243448:	tbnz	w0, #31, 243464 <get_virtfn_info+0x1c4>
  24344c:	ldur	x0, [x29, #-16]
  243450:	ldur	x1, [x29, #-32]
  243454:	bl	253bc0 <strcmp@plt>
  243458:	cbz	w0, 243478 <get_virtfn_info+0x1d8>
  24345c:	mov	w25, wzr
  243460:	b	243498 <get_virtfn_info+0x1f8>
  243464:	mov	w25, #0x14                  	// #20
  243468:	b	243498 <get_virtfn_info+0x1f8>
  24346c:	mov	w20, #0xfffffff4            	// #-12
  243470:	mov	w25, #0x1                   	// #1
  243474:	b	243498 <get_virtfn_info+0x1f8>
  243478:	add	x3, x25, #0x19
  24347c:	sub	x0, x29, #0x38
  243480:	mov	w1, #0x10                  	// #16
  243484:	mov	x2, x24
  243488:	bl	2542f0 <snprintf@plt>
  24348c:	cmp	w0, #0x10
  243490:	csinc	w25, w27, wzr, cc  // cc = lo, ul, last
  243494:	csel	w20, w20, w28, cc  // cc = lo, ul, last
  243498:	sub	x0, x29, #0x40
  24349c:	bl	243bd8 <freep>
  2434a0:	cbz	w25, 2433f0 <get_virtfn_info+0x150>
  2434a4:	cmp	w25, #0x14
  2434a8:	b.eq	2433f0 <get_virtfn_info+0x150>  // b.none
  2434ac:	cmp	w25, #0x12
  2434b0:	b.ne	2434cc <get_virtfn_info+0x22c>  // b.any
  2434b4:	sub	x0, x29, #0x38
  2434b8:	bl	243c64 <isempty>
  2434bc:	tbz	w0, #0, 24351c <get_virtfn_info+0x27c>
  2434c0:	mov	w20, #0xfffffffe            	// #-2
  2434c4:	b	2434cc <get_virtfn_info+0x22c>
  2434c8:	mov	w20, w0
  2434cc:	sub	x0, x29, #0x28
  2434d0:	bl	243bf0 <closedirp>
  2434d4:	sub	x0, x29, #0x20
  2434d8:	bl	243bd8 <freep>
  2434dc:	sub	x0, x29, #0x18
  2434e0:	bl	243bd8 <freep>
  2434e4:	sub	x0, x29, #0x8
  2434e8:	bl	243bbc <sd_device_unrefp>
  2434ec:	mov	w0, w20
  2434f0:	mov	sp, x29
  2434f4:	ldp	x20, x19, [sp, #80]
  2434f8:	ldp	x22, x21, [sp, #64]
  2434fc:	ldp	x24, x23, [sp, #48]
  243500:	ldp	x26, x25, [sp, #32]
  243504:	ldp	x28, x27, [sp, #16]
  243508:	ldp	x29, x30, [sp], #96
  24350c:	ret
  243510:	ldr	w8, [x22]
  243514:	neg	w20, w8
  243518:	b	2434cc <get_virtfn_info+0x22c>
  24351c:	ldur	x8, [x29, #-8]
  243520:	stur	xzr, [x29, #-8]
  243524:	sub	x1, x29, #0x38
  243528:	mov	w2, #0x10                  	// #16
  24352c:	str	x8, [x19], #8
  243530:	mov	x0, x19
  243534:	bl	2548b0 <strncpy@plt>
  243538:	mov	w20, wzr
  24353c:	b	2434cc <get_virtfn_info+0x22c>
  243540:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  243544:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  243548:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24354c:	add	x1, x1, #0x9e6
  243550:	add	x2, x2, #0xa1f
  243554:	add	x4, x4, #0x5af
  243558:	mov	w0, #0x1                   	// #1
  24355c:	mov	w3, #0x6e                  	// #110
  243560:	bl	253740 <log_assert_failed_realm@plt>
  243564:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  243568:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24356c:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  243570:	add	x1, x1, #0x7b5
  243574:	add	x2, x2, #0xa1f
  243578:	add	x4, x4, #0x5af
  24357c:	mov	w0, #0x1                   	// #1
  243580:	mov	w3, #0x6f                  	// #111
  243584:	bl	253740 <log_assert_failed_realm@plt>
  243588:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24358c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  243590:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  243594:	add	x1, x1, #0xb2b
  243598:	add	x2, x2, #0xa1f
  24359c:	add	x4, x4, #0x5af
  2435a0:	mov	w0, #0x1                   	// #1
  2435a4:	mov	w3, #0x70                  	// #112
  2435a8:	bl	253740 <log_assert_failed_realm@plt>
  2435ac:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  2435b0:	add	x1, x1, #0x498
  2435b4:	b	2435c0 <get_virtfn_info+0x320>
  2435b8:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  2435bc:	add	x1, x1, #0x166
  2435c0:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2435c4:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  2435c8:	add	x2, x2, #0xa1f
  2435cc:	add	x4, x4, #0x5af
  2435d0:	mov	w0, #0x1                   	// #1
  2435d4:	mov	w3, #0x77                  	// #119
  2435d8:	bl	253740 <log_assert_failed_realm@plt>

00000000002435dc <dev_pci_onboard>:
  2435dc:	sub	sp, sp, #0x50
  2435e0:	stp	x29, x30, [sp, #32]
  2435e4:	stp	x20, x19, [sp, #64]
  2435e8:	str	xzr, [sp, #16]
  2435ec:	ldr	x8, [x1, #16]
  2435f0:	add	x29, sp, #0x20
  2435f4:	mov	x19, x1
  2435f8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2435fc:	mov	x20, x0
  243600:	add	x1, x1, #0x4e7
  243604:	sub	x2, x29, #0x8
  243608:	mov	x0, x8
  24360c:	str	x21, [sp, #48]
  243610:	bl	254070 <sd_device_get_sysattr_value@plt>
  243614:	tbz	w0, #31, 243630 <dev_pci_onboard+0x54>
  243618:	ldr	x0, [x19, #16]
  24361c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  243620:	add	x1, x1, #0xa99
  243624:	sub	x2, x29, #0x8
  243628:	bl	254070 <sd_device_get_sysattr_value@plt>
  24362c:	tbnz	w0, #31, 243728 <dev_pci_onboard+0x14c>
  243630:	ldur	x0, [x29, #-8]
  243634:	add	x1, x29, #0x18
  243638:	bl	243c80 <safe_atolu>
  24363c:	tbnz	w0, #31, 243728 <dev_pci_onboard+0x14c>
  243640:	ldr	x8, [x29, #24]
  243644:	cbnz	x8, 243654 <dev_pci_onboard+0x78>
  243648:	mov	w0, #0x8                   	// #8
  24364c:	bl	242548 <naming_scheme_has>
  243650:	tbz	w0, #0, 243728 <dev_pci_onboard+0x14c>
  243654:	ldr	x8, [x29, #24]
  243658:	lsr	x8, x8, #14
  24365c:	cbnz	x8, 243728 <dev_pci_onboard+0x14c>
  243660:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  243664:	add	x1, x1, #0xd37
  243668:	sub	x2, x29, #0x8
  24366c:	mov	x0, x20
  243670:	bl	254070 <sd_device_get_sysattr_value@plt>
  243674:	tbnz	w0, #31, 243690 <dev_pci_onboard+0xb4>
  243678:	ldur	x0, [x29, #-8]
  24367c:	mov	w2, #0xa                   	// #10
  243680:	mov	x1, xzr
  243684:	bl	254840 <strtoul@plt>
  243688:	mov	x21, x0
  24368c:	b	243694 <dev_pci_onboard+0xb8>
  243690:	mov	x21, xzr
  243694:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  243698:	add	x1, x1, #0xdc8
  24369c:	add	x2, sp, #0x10
  2436a0:	mov	x0, x20
  2436a4:	bl	254070 <sd_device_get_sysattr_value@plt>
  2436a8:	ldr	x3, [x29, #24]
  2436ac:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  2436b0:	add	x20, x19, #0x38
  2436b4:	add	x2, x2, #0xd40
  2436b8:	add	x0, sp, #0x8
  2436bc:	mov	w1, #0x10                  	// #16
  2436c0:	str	x20, [sp, #8]
  2436c4:	bl	254060 <strpcpyf@plt>
  2436c8:	ldr	x3, [sp, #16]
  2436cc:	mov	x1, x0
  2436d0:	cbz	x3, 2436e4 <dev_pci_onboard+0x108>
  2436d4:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  2436d8:	add	x2, x2, #0x43e
  2436dc:	add	x0, sp, #0x8
  2436e0:	b	2436f8 <dev_pci_onboard+0x11c>
  2436e4:	cbz	x21, 243700 <dev_pci_onboard+0x124>
  2436e8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2436ec:	add	x2, x2, #0x998
  2436f0:	add	x0, sp, #0x8
  2436f4:	mov	x3, x21
  2436f8:	bl	254060 <strpcpyf@plt>
  2436fc:	mov	x1, x0
  243700:	cbnz	x1, 243708 <dev_pci_onboard+0x12c>
  243704:	strb	wzr, [x20]
  243708:	ldr	x0, [x19, #16]
  24370c:	add	x19, x19, #0x48
  243710:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  243714:	add	x1, x1, #0xb82
  243718:	mov	x2, x19
  24371c:	bl	254070 <sd_device_get_sysattr_value@plt>
  243720:	tbz	w0, #31, 243728 <dev_pci_onboard+0x14c>
  243724:	str	xzr, [x19]
  243728:	ldp	x20, x19, [sp, #64]
  24372c:	ldr	x21, [sp, #48]
  243730:	ldp	x29, x30, [sp, #32]
  243734:	add	sp, sp, #0x50
  243738:	ret

000000000024373c <dev_pci_slot>:
  24373c:	stp	x29, x30, [sp, #-96]!
  243740:	stp	x28, x27, [sp, #16]
  243744:	stp	x26, x25, [sp, #32]
  243748:	stp	x24, x23, [sp, #48]
  24374c:	stp	x22, x21, [sp, #64]
  243750:	stp	x20, x19, [sp, #80]
  243754:	mov	x29, sp
  243758:	sub	sp, sp, #0x2, lsl #12
  24375c:	sub	sp, sp, #0x60
  243760:	stur	xzr, [x29, #-48]
  243764:	stur	xzr, [x29, #-64]
  243768:	str	xzr, [sp, #4112]
  24376c:	ldr	x8, [x1, #16]
  243770:	mov	x19, x1
  243774:	mov	x21, x0
  243778:	sub	x1, x29, #0x20
  24377c:	mov	x0, x8
  243780:	bl	253a40 <sd_device_get_sysname@plt>
  243784:	tbnz	w0, #31, 243b84 <dev_pci_slot+0x448>
  243788:	ldur	x0, [x29, #-32]
  24378c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  243790:	add	x1, x1, #0x77
  243794:	sub	x2, x29, #0x4
  243798:	sub	x3, x29, #0x8
  24379c:	sub	x4, x29, #0xc
  2437a0:	sub	x5, x29, #0x10
  2437a4:	bl	254870 <__isoc99_sscanf@plt>
  2437a8:	cmp	w0, #0x4
  2437ac:	b.ne	243b84 <dev_pci_slot+0x448>  // b.any
  2437b0:	mov	w0, #0x2                   	// #2
  2437b4:	bl	242548 <naming_scheme_has>
  2437b8:	tbz	w0, #0, 2437d4 <dev_pci_slot+0x98>
  2437bc:	ldr	x0, [x19, #16]
  2437c0:	bl	243c94 <is_pci_ari_enabled>
  2437c4:	tbz	w0, #0, 2437d4 <dev_pci_slot+0x98>
  2437c8:	ldp	w9, w8, [x29, #-16]
  2437cc:	add	w8, w9, w8, lsl #3
  2437d0:	stur	w8, [x29, #-16]
  2437d4:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  2437d8:	add	x1, x1, #0xd37
  2437dc:	sub	x2, x29, #0x28
  2437e0:	mov	x0, x21
  2437e4:	bl	254070 <sd_device_get_sysattr_value@plt>
  2437e8:	tbnz	w0, #31, 243868 <dev_pci_slot+0x12c>
  2437ec:	ldur	x0, [x29, #-40]
  2437f0:	mov	w2, #0xa                   	// #10
  2437f4:	mov	x1, xzr
  2437f8:	bl	254840 <strtoul@plt>
  2437fc:	mov	x20, x0
  243800:	cbnz	x0, 24386c <dev_pci_slot+0x130>
  243804:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  243808:	add	x1, x1, #0x132
  24380c:	sub	x2, x29, #0x28
  243810:	mov	x0, x21
  243814:	bl	254070 <sd_device_get_sysattr_value@plt>
  243818:	tbnz	w0, #31, 243868 <dev_pci_slot+0x12c>
  24381c:	ldur	x0, [x29, #-40]
  243820:	mov	w2, #0xa                   	// #10
  243824:	mov	x1, xzr
  243828:	bl	254840 <strtoul@plt>
  24382c:	cmp	x0, #0x20
  243830:	mov	x20, xzr
  243834:	b.ne	24386c <dev_pci_slot+0x130>  // b.any
  243838:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24383c:	add	x1, x1, #0xe22
  243840:	sub	x2, x29, #0x28
  243844:	mov	x0, x21
  243848:	bl	254070 <sd_device_get_sysattr_value@plt>
  24384c:	tbnz	w0, #31, 243868 <dev_pci_slot+0x12c>
  243850:	ldur	x0, [x29, #-40]
  243854:	mov	w2, #0x10                  	// #16
  243858:	mov	x1, xzr
  24385c:	bl	254840 <strtoul@plt>
  243860:	mov	x20, x0
  243864:	b	24386c <dev_pci_slot+0x130>
  243868:	mov	x20, xzr
  24386c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  243870:	add	x1, x1, #0xdc8
  243874:	sub	x2, x29, #0x30
  243878:	mov	x0, x21
  24387c:	bl	254070 <sd_device_get_sysattr_value@plt>
  243880:	ldur	w3, [x29, #-4]
  243884:	add	x22, x19, #0x28
  243888:	stur	x22, [x29, #-24]
  24388c:	cbz	w3, 2438ac <dev_pci_slot+0x170>
  243890:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  243894:	add	x2, x2, #0xd45
  243898:	sub	x0, x29, #0x18
  24389c:	mov	w1, #0x10                  	// #16
  2438a0:	bl	254060 <strpcpyf@plt>
  2438a4:	mov	x1, x0
  2438a8:	b	2438b0 <dev_pci_slot+0x174>
  2438ac:	mov	w1, #0x10                  	// #16
  2438b0:	ldp	w4, w3, [x29, #-12]
  2438b4:	adrp	x2, 20b000 <worker_hash_op+0xad0>
  2438b8:	add	x2, x2, #0xb9a
  2438bc:	sub	x0, x29, #0x18
  2438c0:	bl	254060 <strpcpyf@plt>
  2438c4:	ldur	w8, [x29, #-16]
  2438c8:	mov	x21, x0
  2438cc:	cbnz	w8, 2438dc <dev_pci_slot+0x1a0>
  2438d0:	ldr	x0, [x19, #16]
  2438d4:	bl	243ce0 <is_pci_multifunction>
  2438d8:	tbz	w0, #0, 2438f8 <dev_pci_slot+0x1bc>
  2438dc:	ldur	w3, [x29, #-16]
  2438e0:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  2438e4:	add	x2, x2, #0x83
  2438e8:	sub	x0, x29, #0x18
  2438ec:	mov	x1, x21
  2438f0:	bl	254060 <strpcpyf@plt>
  2438f4:	mov	x21, x0
  2438f8:	ldur	x3, [x29, #-48]
  2438fc:	cbz	x3, 243914 <dev_pci_slot+0x1d8>
  243900:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  243904:	add	x2, x2, #0x43e
  243908:	sub	x0, x29, #0x18
  24390c:	mov	x1, x21
  243910:	b	24392c <dev_pci_slot+0x1f0>
  243914:	cbz	x20, 243934 <dev_pci_slot+0x1f8>
  243918:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24391c:	add	x2, x2, #0x998
  243920:	sub	x0, x29, #0x18
  243924:	mov	x1, x21
  243928:	mov	x3, x20
  24392c:	bl	254060 <strpcpyf@plt>
  243930:	mov	x21, x0
  243934:	cbnz	x21, 24393c <dev_pci_slot+0x200>
  243938:	strb	wzr, [x22]
  24393c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  243940:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  243944:	add	x1, x1, #0x5fb
  243948:	add	x2, x2, #0x42d
  24394c:	sub	x0, x29, #0x40
  243950:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  243954:	tbnz	w0, #31, 243b84 <dev_pci_slot+0x448>
  243958:	ldur	x0, [x29, #-64]
  24395c:	sub	x1, x29, #0x38
  243960:	bl	253d90 <sd_device_get_syspath@plt>
  243964:	tbnz	w0, #31, 243b84 <dev_pci_slot+0x448>
  243968:	ldur	x3, [x29, #-56]
  24396c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  243970:	add	x0, sp, #0x1, lsl #12
  243974:	add	x2, x2, #0x2b0
  243978:	add	x0, x0, #0x18
  24397c:	mov	w1, #0x1000                	// #4096
  243980:	bl	2542f0 <snprintf@plt>
  243984:	cmp	w0, #0xfff
  243988:	b.hi	243b84 <dev_pci_slot+0x448>  // b.pmore
  24398c:	add	x0, sp, #0x1, lsl #12
  243990:	add	x0, x0, #0x18
  243994:	bl	2543a0 <opendir@plt>
  243998:	str	x0, [sp, #4112]
  24399c:	cbz	x0, 243b84 <dev_pci_slot+0x448>
  2439a0:	ldr	x8, [x19, #16]
  2439a4:	adrp	x23, 210000 <worker_hash_op+0x5ad0>
  2439a8:	adrp	x24, 215000 <worker_hash_op+0xaad0>
  2439ac:	mov	x22, x0
  2439b0:	mov	w21, wzr
  2439b4:	add	x23, x23, #0x42d
  2439b8:	add	x24, x24, #0x4e8
  2439bc:	stur	x8, [x29, #-72]
  2439c0:	ldur	x0, [x29, #-72]
  2439c4:	cbz	x0, 243ac4 <dev_pci_slot+0x388>
  2439c8:	sub	x1, x29, #0x20
  2439cc:	bl	253a40 <sd_device_get_sysname@plt>
  2439d0:	tbnz	w0, #31, 2439c0 <dev_pci_slot+0x284>
  2439d4:	bl	253660 <__errno_location@plt>
  2439d8:	mov	x25, x0
  2439dc:	str	wzr, [x0]
  2439e0:	mov	x0, x22
  2439e4:	bl	2543b0 <readdir64@plt>
  2439e8:	cbz	x0, 243a9c <dev_pci_slot+0x360>
  2439ec:	mov	x26, x0
  2439f0:	str	xzr, [sp]
  2439f4:	ldrb	w8, [x26, #19]!
  2439f8:	cmp	w8, #0x2e
  2439fc:	b.eq	243a78 <dev_pci_slot+0x33c>  // b.none
  243a00:	add	x2, sp, #0x1, lsl #12
  243a04:	add	x2, x2, #0xc
  243a08:	mov	w1, #0xa                   	// #10
  243a0c:	mov	x0, x26
  243a10:	bl	253970 <safe_atou_full@plt>
  243a14:	mov	w27, wzr
  243a18:	tbnz	w0, #31, 243a7c <dev_pci_slot+0x340>
  243a1c:	ldr	w8, [sp, #4108]
  243a20:	cbz	w8, 243a7c <dev_pci_slot+0x340>
  243a24:	add	x3, sp, #0x1, lsl #12
  243a28:	add	x0, sp, #0xc
  243a2c:	add	x3, x3, #0x18
  243a30:	mov	w1, #0x1000                	// #4096
  243a34:	mov	x2, x24
  243a38:	mov	x4, x26
  243a3c:	bl	2542f0 <snprintf@plt>
  243a40:	cmp	w0, #0xfff
  243a44:	b.hi	243a78 <dev_pci_slot+0x33c>  // b.pmore
  243a48:	add	x0, sp, #0xc
  243a4c:	mov	x1, sp
  243a50:	bl	2548d0 <read_one_line_file@plt>
  243a54:	tbnz	w0, #31, 243a78 <dev_pci_slot+0x33c>
  243a58:	ldur	x0, [x29, #-32]
  243a5c:	ldr	x1, [sp]
  243a60:	bl	243c14 <startswith>
  243a64:	ldr	w8, [sp, #4108]
  243a68:	cmp	x0, #0x0
  243a6c:	cset	w27, ne  // ne = any
  243a70:	csel	w21, w21, w8, eq  // eq = none
  243a74:	b	243a7c <dev_pci_slot+0x340>
  243a78:	mov	w27, wzr
  243a7c:	mov	x0, sp
  243a80:	bl	243bd8 <freep>
  243a84:	tbnz	w27, #0, 243a9c <dev_pci_slot+0x360>
  243a88:	mov	x0, x22
  243a8c:	str	wzr, [x25]
  243a90:	bl	2543b0 <readdir64@plt>
  243a94:	mov	x26, x0
  243a98:	cbnz	x0, 2439f0 <dev_pci_slot+0x2b4>
  243a9c:	cbnz	w21, 243ac4 <dev_pci_slot+0x388>
  243aa0:	ldur	x0, [x29, #-72]
  243aa4:	sub	x3, x29, #0x48
  243aa8:	mov	x1, x23
  243aac:	mov	x2, xzr
  243ab0:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  243ab4:	tbnz	w0, #31, 243ac4 <dev_pci_slot+0x388>
  243ab8:	mov	x0, x22
  243abc:	bl	2548e0 <rewinddir@plt>
  243ac0:	b	2439c0 <dev_pci_slot+0x284>
  243ac4:	cbz	w21, 243b84 <dev_pci_slot+0x448>
  243ac8:	ldur	w3, [x29, #-4]
  243acc:	add	x22, x19, #0x18
  243ad0:	stur	x22, [x29, #-24]
  243ad4:	cbz	w3, 243af4 <dev_pci_slot+0x3b8>
  243ad8:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  243adc:	add	x2, x2, #0xe29
  243ae0:	sub	x0, x29, #0x18
  243ae4:	mov	w1, #0x10                  	// #16
  243ae8:	bl	254060 <strpcpyf@plt>
  243aec:	mov	x1, x0
  243af0:	b	243af8 <dev_pci_slot+0x3bc>
  243af4:	mov	w1, #0x10                  	// #16
  243af8:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  243afc:	add	x2, x2, #0xe2d
  243b00:	sub	x0, x29, #0x18
  243b04:	mov	w3, w21
  243b08:	bl	254060 <strpcpyf@plt>
  243b0c:	ldur	w8, [x29, #-16]
  243b10:	mov	x21, x0
  243b14:	cbnz	w8, 243b24 <dev_pci_slot+0x3e8>
  243b18:	ldr	x0, [x19, #16]
  243b1c:	bl	243ce0 <is_pci_multifunction>
  243b20:	tbz	w0, #0, 243b40 <dev_pci_slot+0x404>
  243b24:	ldur	w3, [x29, #-16]
  243b28:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  243b2c:	add	x2, x2, #0xada
  243b30:	sub	x0, x29, #0x18
  243b34:	mov	x1, x21
  243b38:	bl	254060 <strpcpyf@plt>
  243b3c:	mov	x21, x0
  243b40:	ldur	x3, [x29, #-48]
  243b44:	cbz	x3, 243b5c <dev_pci_slot+0x420>
  243b48:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  243b4c:	add	x2, x2, #0x43e
  243b50:	sub	x0, x29, #0x18
  243b54:	mov	x1, x21
  243b58:	b	243b74 <dev_pci_slot+0x438>
  243b5c:	cbz	x20, 243b7c <dev_pci_slot+0x440>
  243b60:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  243b64:	add	x2, x2, #0x998
  243b68:	sub	x0, x29, #0x18
  243b6c:	mov	x1, x21
  243b70:	mov	x3, x20
  243b74:	bl	254060 <strpcpyf@plt>
  243b78:	mov	x21, x0
  243b7c:	cbnz	x21, 243b84 <dev_pci_slot+0x448>
  243b80:	strb	wzr, [x22]
  243b84:	add	x0, sp, #0x1, lsl #12
  243b88:	add	x0, x0, #0x10
  243b8c:	bl	243bf0 <closedirp>
  243b90:	sub	x0, x29, #0x40
  243b94:	bl	243bbc <sd_device_unrefp>
  243b98:	add	sp, sp, #0x2, lsl #12
  243b9c:	add	sp, sp, #0x60
  243ba0:	ldp	x20, x19, [sp, #80]
  243ba4:	ldp	x22, x21, [sp, #64]
  243ba8:	ldp	x24, x23, [sp, #48]
  243bac:	ldp	x26, x25, [sp, #32]
  243bb0:	ldp	x28, x27, [sp, #16]
  243bb4:	ldp	x29, x30, [sp], #96
  243bb8:	ret

0000000000243bbc <sd_device_unrefp>:
  243bbc:	stp	x29, x30, [sp, #-16]!
  243bc0:	ldr	x0, [x0]
  243bc4:	mov	x29, sp
  243bc8:	cbz	x0, 243bd0 <sd_device_unrefp+0x14>
  243bcc:	bl	253950 <sd_device_unref@plt>
  243bd0:	ldp	x29, x30, [sp], #16
  243bd4:	ret

0000000000243bd8 <freep>:
  243bd8:	stp	x29, x30, [sp, #-16]!
  243bdc:	ldr	x0, [x0]
  243be0:	mov	x29, sp
  243be4:	bl	2536e0 <free@plt>
  243be8:	ldp	x29, x30, [sp], #16
  243bec:	ret

0000000000243bf0 <closedirp>:
  243bf0:	stp	x29, x30, [sp, #-16]!
  243bf4:	ldr	x0, [x0]
  243bf8:	mov	x29, sp
  243bfc:	cbz	x0, 243c04 <closedirp+0x14>
  243c00:	bl	2543e0 <closedir@plt>
  243c04:	ldp	x29, x30, [sp], #16
  243c08:	ret

0000000000243c0c <size_multiply_overflow>:
  243c0c:	mov	w0, wzr
  243c10:	ret

0000000000243c14 <startswith>:
  243c14:	stp	x29, x30, [sp, #-48]!
  243c18:	stp	x20, x19, [sp, #32]
  243c1c:	mov	x20, x0
  243c20:	mov	x0, x1
  243c24:	str	x21, [sp, #16]
  243c28:	mov	x29, sp
  243c2c:	mov	x19, x1
  243c30:	bl	2539a0 <strlen@plt>
  243c34:	mov	x21, x0
  243c38:	mov	x0, x20
  243c3c:	mov	x1, x19
  243c40:	mov	x2, x21
  243c44:	bl	2539b0 <strncmp@plt>
  243c48:	add	x8, x20, x21
  243c4c:	ldp	x20, x19, [sp, #32]
  243c50:	ldr	x21, [sp, #16]
  243c54:	cmp	w0, #0x0
  243c58:	csel	x0, x8, xzr, eq  // eq = none
  243c5c:	ldp	x29, x30, [sp], #48
  243c60:	ret

0000000000243c64 <isempty>:
  243c64:	cbz	x0, 243c78 <isempty+0x14>
  243c68:	ldrb	w8, [x0]
  243c6c:	cmp	w8, #0x0
  243c70:	cset	w0, eq  // eq = none
  243c74:	ret
  243c78:	mov	w0, #0x1                   	// #1
  243c7c:	ret

0000000000243c80 <safe_atolu>:
  243c80:	stp	x29, x30, [sp, #-16]!
  243c84:	mov	x29, sp
  243c88:	bl	2548f0 <safe_atollu@plt>
  243c8c:	ldp	x29, x30, [sp], #16
  243c90:	ret

0000000000243c94 <is_pci_ari_enabled>:
  243c94:	sub	sp, sp, #0x20
  243c98:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  243c9c:	add	x1, x1, #0xc21
  243ca0:	add	x2, sp, #0x8
  243ca4:	stp	x29, x30, [sp, #16]
  243ca8:	add	x29, sp, #0x10
  243cac:	bl	254070 <sd_device_get_sysattr_value@plt>
  243cb0:	tbnz	w0, #31, 243cd0 <is_pci_ari_enabled+0x3c>
  243cb4:	ldr	x0, [sp, #8]
  243cb8:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  243cbc:	add	x1, x1, #0xa68
  243cc0:	bl	253bc0 <strcmp@plt>
  243cc4:	cmp	w0, #0x0
  243cc8:	cset	w0, eq  // eq = none
  243ccc:	b	243cd4 <is_pci_ari_enabled+0x40>
  243cd0:	mov	w0, wzr
  243cd4:	ldp	x29, x30, [sp, #16]
  243cd8:	add	sp, sp, #0x20
  243cdc:	ret

0000000000243ce0 <is_pci_multifunction>:
  243ce0:	stp	x29, x30, [sp, #-48]!
  243ce4:	str	x21, [sp, #16]
  243ce8:	stp	x20, x19, [sp, #32]
  243cec:	mov	x29, sp
  243cf0:	sub	sp, sp, #0x50
  243cf4:	mov	w8, #0xffffffff            	// #-1
  243cf8:	sub	x1, x29, #0x8
  243cfc:	str	w8, [x29, #28]
  243d00:	bl	253d90 <sd_device_get_syspath@plt>
  243d04:	tbnz	w0, #31, 243dcc <is_pci_multifunction+0xec>
  243d08:	ldur	x8, [x29, #-8]
  243d0c:	adrp	x9, 20b000 <worker_hash_op+0xad0>
  243d10:	mov	x20, xzr
  243d14:	mov	x19, xzr
  243d18:	add	x9, x9, #0x5f9
  243d1c:	sub	x21, x29, #0x48
  243d20:	stp	x8, x9, [x29, #-72]
  243d24:	ldr	x0, [x21, x20]
  243d28:	cbz	x0, 243d40 <is_pci_multifunction+0x60>
  243d2c:	bl	2539a0 <strlen@plt>
  243d30:	add	x20, x20, #0x8
  243d34:	cmp	x20, #0x10
  243d38:	add	x19, x0, x19
  243d3c:	b.ne	243d24 <is_pci_multifunction+0x44>  // b.any
  243d40:	add	x19, x19, #0x1
  243d44:	mov	x0, x19
  243d48:	bl	243c0c <size_multiply_overflow>
  243d4c:	tbnz	w0, #0, 243df0 <is_pci_multifunction+0x110>
  243d50:	cmp	x19, #0x400, lsl #12
  243d54:	b.hi	243dfc <is_pci_multifunction+0x11c>  // b.pmore
  243d58:	add	x9, x19, #0xf
  243d5c:	mov	x8, sp
  243d60:	and	x9, x9, #0xfffffffffffffff0
  243d64:	sub	x19, x8, x9
  243d68:	mov	sp, x19
  243d6c:	mov	x20, xzr
  243d70:	sub	x21, x29, #0x48
  243d74:	mov	x0, x19
  243d78:	ldr	x1, [x21, x20]
  243d7c:	cbz	x1, 243d90 <is_pci_multifunction+0xb0>
  243d80:	bl	253e40 <stpcpy@plt>
  243d84:	add	x20, x20, #0x8
  243d88:	cmp	x20, #0x10
  243d8c:	b.ne	243d78 <is_pci_multifunction+0x98>  // b.any
  243d90:	strb	wzr, [x0]
  243d94:	mov	w1, #0x80000               	// #524288
  243d98:	mov	x0, x19
  243d9c:	bl	253d70 <open64@plt>
  243da0:	str	w0, [x29, #28]
  243da4:	tbnz	w0, #31, 243dcc <is_pci_multifunction+0xec>
  243da8:	sub	x1, x29, #0x48
  243dac:	mov	w2, #0x40                  	// #64
  243db0:	bl	253ac0 <read@plt>
  243db4:	cmp	x0, #0x40
  243db8:	b.ne	243dcc <is_pci_multifunction+0xec>  // b.any
  243dbc:	ldursb	w8, [x29, #-58]
  243dc0:	cmp	w8, #0x0
  243dc4:	cset	w19, lt  // lt = tstop
  243dc8:	b	243dd0 <is_pci_multifunction+0xf0>
  243dcc:	mov	w19, wzr
  243dd0:	add	x0, x29, #0x1c
  243dd4:	bl	243e20 <closep>
  243dd8:	mov	w0, w19
  243ddc:	mov	sp, x29
  243de0:	ldp	x20, x19, [sp, #32]
  243de4:	ldr	x21, [sp, #16]
  243de8:	ldp	x29, x30, [sp], #48
  243dec:	ret
  243df0:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  243df4:	add	x1, x1, #0x498
  243df8:	b	243e04 <is_pci_multifunction+0x124>
  243dfc:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  243e00:	add	x1, x1, #0x166
  243e04:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  243e08:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  243e0c:	add	x2, x2, #0xa1f
  243e10:	add	x4, x4, #0xe49
  243e14:	mov	w0, #0x1                   	// #1
  243e18:	mov	w3, #0xe1                  	// #225
  243e1c:	bl	253740 <log_assert_failed_realm@plt>

0000000000243e20 <closep>:
  243e20:	stp	x29, x30, [sp, #-16]!
  243e24:	ldr	w0, [x0]
  243e28:	mov	x29, sp
  243e2c:	bl	2538f0 <safe_close@plt>
  243e30:	ldp	x29, x30, [sp], #16
  243e34:	ret

0000000000243e38 <builtin_net_setup_link>:
  243e38:	sub	sp, sp, #0x60
  243e3c:	stp	x29, x30, [sp, #48]
  243e40:	stp	x20, x19, [sp, #80]
  243e44:	add	x29, sp, #0x30
  243e48:	mov	x19, x0
  243e4c:	cmp	w1, #0x2
  243e50:	stp	x22, x21, [sp, #64]
  243e54:	stp	xzr, xzr, [x29, #-16]
  243e58:	b.lt	243ec8 <builtin_net_setup_link+0x90>  // b.tstop
  243e5c:	str	xzr, [sp, #24]
  243e60:	cbz	x19, 243e74 <builtin_net_setup_link+0x3c>
  243e64:	mov	w0, #0x1                   	// #1
  243e68:	bl	2535b0 <log_get_max_level_realm@plt>
  243e6c:	cmp	w0, #0x3
  243e70:	b.ge	2440a4 <builtin_net_setup_link+0x26c>  // b.tcont
  243e74:	ldr	x6, [sp, #24]
  243e78:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  243e7c:	add	x8, x8, #0xb64
  243e80:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  243e84:	cmp	x6, #0x0
  243e88:	csel	x5, xzr, x8, eq  // eq = none
  243e8c:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  243e90:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  243e94:	mov	w1, #0x16                  	// #22
  243e98:	add	x8, x8, #0xdd7
  243e9c:	add	x2, x2, #0x381
  243ea0:	add	x4, x4, #0x14b
  243ea4:	mov	w0, #0x3                   	// #3
  243ea8:	movk	w1, #0x4000, lsl #16
  243eac:	mov	w3, #0x13                  	// #19
  243eb0:	str	x8, [sp, #8]
  243eb4:	str	xzr, [sp]
  243eb8:	mov	x7, xzr
  243ebc:	bl	2539f0 <log_object_internal@plt>
  243ec0:	mov	w19, w0
  243ec4:	b	243fc8 <builtin_net_setup_link+0x190>
  243ec8:	adrp	x22, 28e000 <string_hash_ops+0xfe38>
  243ecc:	ldr	x0, [x22, #544]
  243ed0:	sub	x2, x29, #0x8
  243ed4:	mov	x1, x19
  243ed8:	mov	w20, w3
  243edc:	bl	248908 <link_get_driver>
  243ee0:	tbnz	w0, #31, 243efc <builtin_net_setup_link+0xc4>
  243ee4:	ldur	x3, [x29, #-8]
  243ee8:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  243eec:	and	w1, w20, #0x1
  243ef0:	add	x2, x2, #0xfb5
  243ef4:	mov	x0, x19
  243ef8:	bl	23f344 <udev_builtin_add_property>
  243efc:	ldr	x0, [x22, #544]
  243f00:	add	x2, sp, #0x18
  243f04:	mov	x1, x19
  243f08:	bl	24769c <link_config_get>
  243f0c:	tbnz	w0, #31, 243fe8 <builtin_net_setup_link+0x1b0>
  243f10:	ldr	x0, [x22, #544]
  243f14:	ldr	x1, [sp, #24]
  243f18:	sub	x3, x29, #0x10
  243f1c:	mov	x2, x19
  243f20:	bl	247b14 <link_config_apply>
  243f24:	tbz	w0, #31, 243f88 <builtin_net_setup_link+0x150>
  243f28:	mov	w21, w0
  243f2c:	str	xzr, [sp, #16]
  243f30:	cbz	x19, 243f44 <builtin_net_setup_link+0x10c>
  243f34:	mov	w0, #0x1                   	// #1
  243f38:	bl	2535b0 <log_get_max_level_realm@plt>
  243f3c:	cmp	w0, #0x4
  243f40:	b.ge	2440b4 <builtin_net_setup_link+0x27c>  // b.tcont
  243f44:	ldr	x6, [sp, #16]
  243f48:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  243f4c:	add	x8, x8, #0xb64
  243f50:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  243f54:	cmp	x6, #0x0
  243f58:	csel	x5, xzr, x8, eq  // eq = none
  243f5c:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  243f60:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  243f64:	add	x8, x8, #0xe61
  243f68:	add	x2, x2, #0x381
  243f6c:	add	x4, x4, #0x14b
  243f70:	mov	w0, #0x4                   	// #4
  243f74:	mov	w3, #0x23                  	// #35
  243f78:	mov	w1, w21
  243f7c:	mov	x7, xzr
  243f80:	stp	xzr, x8, [sp]
  243f84:	bl	2539f0 <log_object_internal@plt>
  243f88:	ldr	x8, [sp, #24]
  243f8c:	and	w20, w20, #0x1
  243f90:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  243f94:	add	x2, x2, #0x3ce
  243f98:	ldr	x3, [x8]
  243f9c:	mov	x0, x19
  243fa0:	mov	w1, w20
  243fa4:	bl	23f344 <udev_builtin_add_property>
  243fa8:	ldur	x3, [x29, #-16]
  243fac:	cbz	x3, 243fc4 <builtin_net_setup_link+0x18c>
  243fb0:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  243fb4:	add	x2, x2, #0x162
  243fb8:	mov	x0, x19
  243fbc:	mov	w1, w20
  243fc0:	bl	23f344 <udev_builtin_add_property>
  243fc4:	mov	w19, wzr
  243fc8:	sub	x0, x29, #0x8
  243fcc:	bl	244220 <freep>
  243fd0:	mov	w0, w19
  243fd4:	ldp	x20, x19, [sp, #80]
  243fd8:	ldp	x22, x21, [sp, #64]
  243fdc:	ldp	x29, x30, [sp, #48]
  243fe0:	add	sp, sp, #0x60
  243fe4:	ret
  243fe8:	mov	w21, w0
  243fec:	cmn	w0, #0x2
  243ff0:	b.ne	24404c <builtin_net_setup_link+0x214>  // b.any
  243ff4:	str	xzr, [sp, #16]
  243ff8:	cbz	x19, 24400c <builtin_net_setup_link+0x1d4>
  243ffc:	mov	w0, #0x1                   	// #1
  244000:	bl	2535b0 <log_get_max_level_realm@plt>
  244004:	cmp	w0, #0x7
  244008:	b.ge	2440c4 <builtin_net_setup_link+0x28c>  // b.tcont
  24400c:	ldr	x6, [sp, #16]
  244010:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  244014:	add	x8, x8, #0xb64
  244018:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24401c:	cmp	x6, #0x0
  244020:	csel	x5, xzr, x8, eq  // eq = none
  244024:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  244028:	add	x8, x8, #0x3a8
  24402c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  244030:	add	x2, x2, #0x381
  244034:	add	x4, x4, #0x14b
  244038:	str	x8, [sp, #8]
  24403c:	mov	w0, #0x7                   	// #7
  244040:	mov	w1, #0xfffffffe            	// #-2
  244044:	mov	w3, #0x1c                  	// #28
  244048:	b	243eb4 <builtin_net_setup_link+0x7c>
  24404c:	str	xzr, [sp, #16]
  244050:	cbz	x19, 244064 <builtin_net_setup_link+0x22c>
  244054:	mov	w0, #0x1                   	// #1
  244058:	bl	2535b0 <log_get_max_level_realm@plt>
  24405c:	cmp	w0, #0x3
  244060:	b.ge	2440d4 <builtin_net_setup_link+0x29c>  // b.tcont
  244064:	ldr	x6, [sp, #16]
  244068:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24406c:	add	x8, x8, #0xb64
  244070:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  244074:	cmp	x6, #0x0
  244078:	csel	x5, xzr, x8, eq  // eq = none
  24407c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  244080:	add	x8, x8, #0x8a8
  244084:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  244088:	add	x2, x2, #0x381
  24408c:	add	x4, x4, #0x14b
  244090:	stp	xzr, x8, [sp]
  244094:	mov	w0, #0x3                   	// #3
  244098:	mov	w3, #0x1e                  	// #30
  24409c:	mov	w1, w21
  2440a0:	b	243eb8 <builtin_net_setup_link+0x80>
  2440a4:	add	x1, sp, #0x18
  2440a8:	mov	x0, x19
  2440ac:	bl	253a40 <sd_device_get_sysname@plt>
  2440b0:	b	243e74 <builtin_net_setup_link+0x3c>
  2440b4:	add	x1, sp, #0x10
  2440b8:	mov	x0, x19
  2440bc:	bl	253a40 <sd_device_get_sysname@plt>
  2440c0:	b	243f44 <builtin_net_setup_link+0x10c>
  2440c4:	add	x1, sp, #0x10
  2440c8:	mov	x0, x19
  2440cc:	bl	253a40 <sd_device_get_sysname@plt>
  2440d0:	b	24400c <builtin_net_setup_link+0x1d4>
  2440d4:	add	x1, sp, #0x10
  2440d8:	mov	x0, x19
  2440dc:	bl	253a40 <sd_device_get_sysname@plt>
  2440e0:	b	244064 <builtin_net_setup_link+0x22c>

00000000002440e4 <builtin_net_setup_link_init>:
  2440e4:	stp	x29, x30, [sp, #-32]!
  2440e8:	str	x19, [sp, #16]
  2440ec:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  2440f0:	ldr	x8, [x19, #544]
  2440f4:	mov	x29, sp
  2440f8:	cbz	x8, 24410c <builtin_net_setup_link_init+0x28>
  2440fc:	mov	w0, wzr
  244100:	ldr	x19, [sp, #16]
  244104:	ldp	x29, x30, [sp], #32
  244108:	ret
  24410c:	adrp	x0, 28e000 <string_hash_ops+0xfe38>
  244110:	add	x0, x0, #0x220
  244114:	bl	246f88 <link_config_ctx_new>
  244118:	tbnz	w0, #31, 244100 <builtin_net_setup_link_init+0x1c>
  24411c:	ldr	x0, [x19, #544]
  244120:	bl	247418 <link_config_load>
  244124:	tbnz	w0, #31, 244100 <builtin_net_setup_link_init+0x1c>
  244128:	mov	w0, #0x1                   	// #1
  24412c:	bl	2535b0 <log_get_max_level_realm@plt>
  244130:	cmp	w0, #0x7
  244134:	b.lt	2440fc <builtin_net_setup_link_init+0x18>  // b.tstop
  244138:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24413c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  244140:	adrp	x5, 210000 <worker_hash_op+0x5ad0>
  244144:	add	x2, x2, #0x381
  244148:	add	x4, x4, #0xaec
  24414c:	add	x5, x5, #0x431
  244150:	mov	w0, #0x407                 	// #1031
  244154:	mov	w3, #0x3b                  	// #59
  244158:	mov	w1, wzr
  24415c:	bl	2535c0 <log_internal_realm@plt>
  244160:	b	2440fc <builtin_net_setup_link_init+0x18>

0000000000244164 <builtin_net_setup_link_exit>:
  244164:	stp	x29, x30, [sp, #-32]!
  244168:	str	x19, [sp, #16]
  24416c:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  244170:	ldr	x0, [x19, #544]
  244174:	mov	x29, sp
  244178:	bl	246f14 <link_config_ctx_free>
  24417c:	mov	w0, #0x1                   	// #1
  244180:	str	xzr, [x19, #544]
  244184:	bl	2535b0 <log_get_max_level_realm@plt>
  244188:	cmp	w0, #0x7
  24418c:	b.lt	2441b8 <builtin_net_setup_link_exit+0x54>  // b.tstop
  244190:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  244194:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  244198:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  24419c:	add	x2, x2, #0x381
  2441a0:	add	x4, x4, #0xdab
  2441a4:	add	x5, x5, #0x442
  2441a8:	mov	w0, #0x407                 	// #1031
  2441ac:	mov	w3, #0x42                  	// #66
  2441b0:	mov	w1, wzr
  2441b4:	bl	2535c0 <log_internal_realm@plt>
  2441b8:	ldr	x19, [sp, #16]
  2441bc:	ldp	x29, x30, [sp], #32
  2441c0:	ret

00000000002441c4 <builtin_net_setup_link_validate>:
  2441c4:	stp	x29, x30, [sp, #-16]!
  2441c8:	mov	w0, #0x1                   	// #1
  2441cc:	mov	x29, sp
  2441d0:	bl	2535b0 <log_get_max_level_realm@plt>
  2441d4:	cmp	w0, #0x7
  2441d8:	b.lt	244204 <builtin_net_setup_link_validate+0x40>  // b.tstop
  2441dc:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2441e0:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  2441e4:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  2441e8:	add	x2, x2, #0x381
  2441ec:	add	x4, x4, #0xb08
  2441f0:	add	x5, x5, #0x9b8
  2441f4:	mov	w0, #0x407                 	// #1031
  2441f8:	mov	w3, #0x46                  	// #70
  2441fc:	mov	w1, wzr
  244200:	bl	2535c0 <log_internal_realm@plt>
  244204:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  244208:	ldr	x0, [x8, #544]
  24420c:	cbz	x0, 244214 <builtin_net_setup_link_validate+0x50>
  244210:	bl	247658 <link_config_should_reload>
  244214:	and	w0, w0, #0x1
  244218:	ldp	x29, x30, [sp], #16
  24421c:	ret

0000000000244220 <freep>:
  244220:	stp	x29, x30, [sp, #-16]!
  244224:	ldr	x0, [x0]
  244228:	mov	x29, sp
  24422c:	bl	2536e0 <free@plt>
  244230:	ldp	x29, x30, [sp], #16
  244234:	ret

0000000000244238 <builtin_path_id>:
  244238:	stp	x29, x30, [sp, #-96]!
  24423c:	stp	x28, x27, [sp, #16]
  244240:	stp	x26, x25, [sp, #32]
  244244:	stp	x24, x23, [sp, #48]
  244248:	stp	x22, x21, [sp, #64]
  24424c:	stp	x20, x19, [sp, #80]
  244250:	mov	x29, sp
  244254:	sub	sp, sp, #0x250
  244258:	str	w3, [sp, #12]
  24425c:	stur	xzr, [x29, #-24]
  244260:	sturb	wzr, [x29, #-28]
  244264:	cbz	x0, 244880 <builtin_path_id+0x648>
  244268:	adrp	x25, 20c000 <worker_hash_op+0x1ad0>
  24426c:	adrp	x23, 20d000 <worker_hash_op+0x2ad0>
  244270:	adrp	x26, 210000 <worker_hash_op+0x5ad0>
  244274:	adrp	x22, 20a000 <parse_argv.options-0x3f0>
  244278:	adrp	x20, 20d000 <worker_hash_op+0x2ad0>
  24427c:	adrp	x21, 212000 <worker_hash_op+0x7ad0>
  244280:	adrp	x19, 212000 <worker_hash_op+0x7ad0>
  244284:	adrp	x24, 20b000 <worker_hash_op+0xad0>
  244288:	adrp	x28, 215000 <worker_hash_op+0xaad0>
  24428c:	add	x25, x25, #0x92e
  244290:	add	x23, x23, #0x7de
  244294:	add	x26, x26, #0x42d
  244298:	add	x22, x22, #0xdf8
  24429c:	add	x20, x20, #0xe42
  2442a0:	add	x21, x21, #0x6ec
  2442a4:	add	x19, x19, #0x51
  2442a8:	add	x24, x24, #0xb56
  2442ac:	add	x28, x28, #0xc2d
  2442b0:	str	wzr, [sp, #28]
  2442b4:	str	x0, [sp, #16]
  2442b8:	stur	x0, [x29, #-16]
  2442bc:	ldur	x0, [x29, #-16]
  2442c0:	cbz	x0, 244700 <builtin_path_id+0x4c8>
  2442c4:	add	x1, sp, #0x20
  2442c8:	bl	253bb0 <sd_device_get_subsystem@plt>
  2442cc:	tbnz	w0, #31, 2444d0 <builtin_path_id+0x298>
  2442d0:	ldur	x0, [x29, #-16]
  2442d4:	sub	x1, x29, #0x28
  2442d8:	bl	253a40 <sd_device_get_sysname@plt>
  2442dc:	tbnz	w0, #31, 2444d0 <builtin_path_id+0x298>
  2442e0:	ldr	x27, [sp, #32]
  2442e4:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  2442e8:	add	x1, x1, #0xd49
  2442ec:	mov	x0, x27
  2442f0:	bl	253bc0 <strcmp@plt>
  2442f4:	cbz	w0, 244474 <builtin_path_id+0x23c>
  2442f8:	mov	x0, x27
  2442fc:	mov	x1, x25
  244300:	bl	253bc0 <strcmp@plt>
  244304:	cbz	w0, 244484 <builtin_path_id+0x24c>
  244308:	mov	x0, x27
  24430c:	mov	x1, x23
  244310:	bl	253bc0 <strcmp@plt>
  244314:	cbz	w0, 244498 <builtin_path_id+0x260>
  244318:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24431c:	mov	x0, x27
  244320:	add	x1, x1, #0x6c5
  244324:	bl	253bc0 <strcmp@plt>
  244328:	cbz	w0, 2444a8 <builtin_path_id+0x270>
  24432c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  244330:	mov	x0, x27
  244334:	add	x1, x1, #0xb88
  244338:	bl	253bc0 <strcmp@plt>
  24433c:	cbz	w0, 2444b8 <builtin_path_id+0x280>
  244340:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  244344:	mov	x0, x27
  244348:	add	x1, x1, #0x4b
  24434c:	bl	253bc0 <strcmp@plt>
  244350:	cbz	w0, 2444e8 <builtin_path_id+0x2b0>
  244354:	mov	x0, x27
  244358:	mov	x1, x26
  24435c:	mov	x25, x26
  244360:	bl	253bc0 <strcmp@plt>
  244364:	cbz	w0, 244528 <builtin_path_id+0x2f0>
  244368:	adrp	x25, 20d000 <worker_hash_op+0x2ad0>
  24436c:	add	x25, x25, #0x31
  244370:	mov	x0, x27
  244374:	mov	x1, x25
  244378:	bl	253bc0 <strcmp@plt>
  24437c:	cbz	w0, 24455c <builtin_path_id+0x324>
  244380:	mov	x0, x27
  244384:	mov	x1, x22
  244388:	mov	x25, x22
  24438c:	bl	253bc0 <strcmp@plt>
  244390:	cbz	w0, 244594 <builtin_path_id+0x35c>
  244394:	adrp	x25, 217000 <worker_hash_op+0xcad0>
  244398:	add	x25, x25, #0x181
  24439c:	mov	x0, x27
  2443a0:	mov	x1, x25
  2443a4:	bl	253bc0 <strcmp@plt>
  2443a8:	cbz	w0, 2445d0 <builtin_path_id+0x398>
  2443ac:	mov	x0, x27
  2443b0:	mov	x1, x20
  2443b4:	mov	x23, x20
  2443b8:	bl	253bc0 <strcmp@plt>
  2443bc:	adrp	x25, 20c000 <worker_hash_op+0x1ad0>
  2443c0:	add	x25, x25, #0x92e
  2443c4:	cbz	w0, 244610 <builtin_path_id+0x3d8>
  2443c8:	mov	x0, x27
  2443cc:	mov	x1, x21
  2443d0:	bl	253bc0 <strcmp@plt>
  2443d4:	adrp	x23, 20d000 <worker_hash_op+0x2ad0>
  2443d8:	add	x23, x23, #0x7de
  2443dc:	cbz	w0, 244638 <builtin_path_id+0x400>
  2443e0:	mov	x0, x27
  2443e4:	mov	x1, x19
  2443e8:	bl	253bc0 <strcmp@plt>
  2443ec:	cbz	w0, 244660 <builtin_path_id+0x428>
  2443f0:	mov	x0, x27
  2443f4:	mov	x1, x24
  2443f8:	bl	253bc0 <strcmp@plt>
  2443fc:	cbz	w0, 244688 <builtin_path_id+0x450>
  244400:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  244404:	mov	x0, x27
  244408:	add	x1, x1, #0x8ce
  24440c:	bl	253bc0 <strcmp@plt>
  244410:	cbz	w0, 2446b0 <builtin_path_id+0x478>
  244414:	mov	x0, x27
  244418:	mov	x1, x28
  24441c:	bl	253bc0 <strcmp@plt>
  244420:	cbz	w0, 2446c0 <builtin_path_id+0x488>
  244424:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  244428:	mov	x0, x27
  24442c:	add	x1, x1, #0xb8d
  244430:	bl	253bc0 <strcmp@plt>
  244434:	cbnz	w0, 2444d0 <builtin_path_id+0x298>
  244438:	ldr	x0, [sp, #16]
  24443c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  244440:	sub	x2, x29, #0x30
  244444:	add	x1, x1, #0x6f8
  244448:	bl	254070 <sd_device_get_sysattr_value@plt>
  24444c:	tbnz	w0, #31, 2444d0 <builtin_path_id+0x298>
  244450:	ldur	x2, [x29, #-48]
  244454:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  244458:	sub	x0, x29, #0x18
  24445c:	add	x1, x1, #0x60d
  244460:	bl	244cd4 <path_prepend>
  244464:	ldur	x0, [x29, #-16]
  244468:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24446c:	add	x1, x1, #0xb8d
  244470:	b	2446e4 <builtin_path_id+0x4ac>
  244474:	ldur	x0, [x29, #-16]
  244478:	sub	x1, x29, #0x18
  24447c:	bl	2448bc <handle_scsi_tape>
  244480:	b	2444d0 <builtin_path_id+0x298>
  244484:	ldur	x0, [x29, #-16]
  244488:	sub	x1, x29, #0x18
  24448c:	sub	x2, x29, #0x1c
  244490:	bl	244984 <handle_scsi>
  244494:	b	2444c4 <builtin_path_id+0x28c>
  244498:	ldur	x0, [x29, #-16]
  24449c:	sub	x1, x29, #0x18
  2444a0:	bl	244b3c <handle_cciss>
  2444a4:	b	2444c4 <builtin_path_id+0x28c>
  2444a8:	ldur	x0, [x29, #-16]
  2444ac:	sub	x1, x29, #0x18
  2444b0:	bl	244bbc <handle_usb>
  2444b4:	b	2444c4 <builtin_path_id+0x28c>
  2444b8:	ldur	x0, [x29, #-16]
  2444bc:	sub	x1, x29, #0x18
  2444c0:	bl	244c64 <handle_bcma>
  2444c4:	mov	w8, #0x1                   	// #1
  2444c8:	stur	x0, [x29, #-16]
  2444cc:	str	w8, [sp, #28]
  2444d0:	ldur	x0, [x29, #-16]
  2444d4:	cbz	x0, 244700 <builtin_path_id+0x4c8>
  2444d8:	sub	x1, x29, #0x10
  2444dc:	bl	253d60 <sd_device_get_parent@plt>
  2444e0:	tbz	w0, #31, 2442bc <builtin_path_id+0x84>
  2444e4:	b	244700 <builtin_path_id+0x4c8>
  2444e8:	ldur	x0, [x29, #-16]
  2444ec:	sub	x1, x29, #0x30
  2444f0:	bl	253fe0 <sd_device_get_sysnum@plt>
  2444f4:	tbnz	w0, #31, 2444d0 <builtin_path_id+0x298>
  2444f8:	ldur	x2, [x29, #-48]
  2444fc:	cbz	x2, 2444d0 <builtin_path_id+0x298>
  244500:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  244504:	sub	x0, x29, #0x18
  244508:	add	x1, x1, #0xad5
  24450c:	bl	244cd4 <path_prepend>
  244510:	ldur	x0, [x29, #-16]
  244514:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  244518:	add	x1, x1, #0x4b
  24451c:	bl	244de8 <skip_subsystem>
  244520:	stur	x0, [x29, #-16]
  244524:	b	2444d0 <builtin_path_id+0x298>
  244528:	ldur	x2, [x29, #-40]
  24452c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244530:	sub	x0, x29, #0x18
  244534:	add	x1, x1, #0x17a
  244538:	bl	244cd4 <path_prepend>
  24453c:	ldur	x0, [x29, #-16]
  244540:	mov	x1, x25
  244544:	bl	244de8 <skip_subsystem>
  244548:	mov	w8, #0x1                   	// #1
  24454c:	stur	x0, [x29, #-16]
  244550:	sturb	w8, [x29, #-28]
  244554:	mov	x26, x25
  244558:	b	2445fc <builtin_path_id+0x3c4>
  24455c:	ldur	x2, [x29, #-40]
  244560:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  244564:	sub	x0, x29, #0x18
  244568:	add	x1, x1, #0x601
  24456c:	bl	244cd4 <path_prepend>
  244570:	ldur	x0, [x29, #-16]
  244574:	mov	x1, x25
  244578:	bl	244de8 <skip_subsystem>
  24457c:	mov	w9, #0x1                   	// #1
  244580:	mov	w8, #0x1                   	// #1
  244584:	stur	x0, [x29, #-16]
  244588:	str	w8, [sp, #28]
  24458c:	sturb	w9, [x29, #-28]
  244590:	b	2445fc <builtin_path_id+0x3c4>
  244594:	ldur	x2, [x29, #-40]
  244598:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24459c:	sub	x0, x29, #0x18
  2445a0:	add	x1, x1, #0x455
  2445a4:	bl	244cd4 <path_prepend>
  2445a8:	ldur	x0, [x29, #-16]
  2445ac:	mov	x1, x25
  2445b0:	bl	244de8 <skip_subsystem>
  2445b4:	mov	w8, #0x1                   	// #1
  2445b8:	adrp	x23, 20d000 <worker_hash_op+0x2ad0>
  2445bc:	mov	x22, x25
  2445c0:	adrp	x25, 20c000 <worker_hash_op+0x1ad0>
  2445c4:	stur	x0, [x29, #-16]
  2445c8:	sturb	w8, [x29, #-28]
  2445cc:	b	244604 <builtin_path_id+0x3cc>
  2445d0:	ldur	x2, [x29, #-40]
  2445d4:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  2445d8:	sub	x0, x29, #0x18
  2445dc:	add	x1, x1, #0xd53
  2445e0:	bl	244cd4 <path_prepend>
  2445e4:	ldur	x0, [x29, #-16]
  2445e8:	mov	x1, x25
  2445ec:	bl	244de8 <skip_subsystem>
  2445f0:	mov	w8, #0x1                   	// #1
  2445f4:	stur	x0, [x29, #-16]
  2445f8:	sturb	w8, [x29, #-28]
  2445fc:	adrp	x23, 20d000 <worker_hash_op+0x2ad0>
  244600:	adrp	x25, 20c000 <worker_hash_op+0x1ad0>
  244604:	add	x23, x23, #0x7de
  244608:	add	x25, x25, #0x92e
  24460c:	b	2444d0 <builtin_path_id+0x298>
  244610:	ldur	x0, [x29, #-16]
  244614:	mov	x1, x23
  244618:	bl	244de8 <skip_subsystem>
  24461c:	mov	w8, #0x1                   	// #1
  244620:	mov	x20, x23
  244624:	adrp	x23, 20d000 <worker_hash_op+0x2ad0>
  244628:	stur	x0, [x29, #-16]
  24462c:	str	w8, [sp, #28]
  244630:	add	x23, x23, #0x7de
  244634:	b	2444d0 <builtin_path_id+0x298>
  244638:	ldur	x2, [x29, #-40]
  24463c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244640:	sub	x0, x29, #0x18
  244644:	add	x1, x1, #0x8f5
  244648:	bl	244cd4 <path_prepend>
  24464c:	ldur	x0, [x29, #-16]
  244650:	adrp	x21, 212000 <worker_hash_op+0x7ad0>
  244654:	add	x21, x21, #0x6ec
  244658:	mov	x1, x21
  24465c:	b	2446e4 <builtin_path_id+0x4ac>
  244660:	ldur	x2, [x29, #-40]
  244664:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  244668:	sub	x0, x29, #0x18
  24466c:	add	x1, x1, #0x933
  244670:	bl	244cd4 <path_prepend>
  244674:	ldur	x0, [x29, #-16]
  244678:	adrp	x19, 212000 <worker_hash_op+0x7ad0>
  24467c:	add	x19, x19, #0x51
  244680:	mov	x1, x19
  244684:	b	2446e4 <builtin_path_id+0x4ac>
  244688:	ldur	x2, [x29, #-40]
  24468c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  244690:	sub	x0, x29, #0x18
  244694:	add	x1, x1, #0x221
  244698:	bl	244cd4 <path_prepend>
  24469c:	ldur	x0, [x29, #-16]
  2446a0:	adrp	x24, 20b000 <worker_hash_op+0xad0>
  2446a4:	add	x24, x24, #0xb56
  2446a8:	mov	x1, x24
  2446ac:	b	2446e4 <builtin_path_id+0x4ac>
  2446b0:	ldur	x0, [x29, #-16]
  2446b4:	sub	x1, x29, #0x18
  2446b8:	bl	244eb0 <handle_ap>
  2446bc:	b	2446e8 <builtin_path_id+0x4b0>
  2446c0:	ldur	x2, [x29, #-40]
  2446c4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2446c8:	sub	x0, x29, #0x18
  2446cc:	add	x1, x1, #0x6f0
  2446d0:	bl	244cd4 <path_prepend>
  2446d4:	ldur	x0, [x29, #-16]
  2446d8:	adrp	x28, 215000 <worker_hash_op+0xaad0>
  2446dc:	add	x28, x28, #0xc2d
  2446e0:	mov	x1, x28
  2446e4:	bl	244de8 <skip_subsystem>
  2446e8:	mov	w9, #0x1                   	// #1
  2446ec:	mov	w8, #0x1                   	// #1
  2446f0:	stur	x0, [x29, #-16]
  2446f4:	str	w8, [sp, #28]
  2446f8:	sturb	w9, [x29, #-28]
  2446fc:	b	2444d0 <builtin_path_id+0x298>
  244700:	ldur	x8, [x29, #-24]
  244704:	mov	w21, #0xfffffffe            	// #-2
  244708:	cbz	x8, 244854 <builtin_path_id+0x61c>
  24470c:	ldurb	w8, [x29, #-28]
  244710:	cbz	w8, 244854 <builtin_path_id+0x61c>
  244714:	ldr	x19, [sp, #16]
  244718:	sub	x1, x29, #0x28
  24471c:	mov	x0, x19
  244720:	bl	253bb0 <sd_device_get_subsystem@plt>
  244724:	tbnz	w0, #31, 24474c <builtin_path_id+0x514>
  244728:	ldur	x0, [x29, #-40]
  24472c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  244730:	add	x1, x1, #0x64e
  244734:	bl	253bc0 <strcmp@plt>
  244738:	ldr	w9, [sp, #28]
  24473c:	cmp	w0, #0x0
  244740:	cset	w8, eq  // eq = none
  244744:	bic	w8, w8, w9
  244748:	tbnz	w8, #0, 2447e4 <builtin_path_id+0x5ac>
  24474c:	ldur	x3, [x29, #-24]
  244750:	ldrb	w12, [x3]
  244754:	cbz	w12, 2447ec <builtin_path_id+0x5b4>
  244758:	ldr	w14, [sp, #12]
  24475c:	mov	x8, xzr
  244760:	add	x9, x3, #0x1
  244764:	add	x10, sp, #0x20
  244768:	mov	w11, #0x5f                  	// #95
  24476c:	b	244784 <builtin_path_id+0x54c>
  244770:	add	x13, x8, #0x1
  244774:	strb	w12, [x10, x8]
  244778:	mov	x8, x13
  24477c:	ldrb	w12, [x9], #1
  244780:	cbz	w12, 2447f4 <builtin_path_id+0x5bc>
  244784:	sub	w13, w12, #0x30
  244788:	and	w13, w13, #0xff
  24478c:	cmp	w13, #0xa
  244790:	b.cc	244770 <builtin_path_id+0x538>  // b.lo, b.ul, b.last
  244794:	sub	w13, w12, #0x41
  244798:	and	w13, w13, #0xff
  24479c:	cmp	w13, #0x1a
  2447a0:	b.cc	244770 <builtin_path_id+0x538>  // b.lo, b.ul, b.last
  2447a4:	and	w13, w12, #0xff
  2447a8:	cmp	w13, #0x2d
  2447ac:	b.eq	244770 <builtin_path_id+0x538>  // b.none
  2447b0:	sub	w13, w12, #0x61
  2447b4:	and	w13, w13, #0xff
  2447b8:	cmp	w13, #0x19
  2447bc:	b.ls	244770 <builtin_path_id+0x538>  // b.plast
  2447c0:	cbz	x8, 24477c <builtin_path_id+0x544>
  2447c4:	add	x12, x8, x10
  2447c8:	ldurb	w12, [x12, #-1]
  2447cc:	cmp	w12, #0x5f
  2447d0:	b.eq	24477c <builtin_path_id+0x544>  // b.none
  2447d4:	add	x12, x8, #0x1
  2447d8:	strb	w11, [x10, x8]
  2447dc:	mov	x8, x12
  2447e0:	b	24477c <builtin_path_id+0x544>
  2447e4:	mov	w21, #0xfffffffe            	// #-2
  2447e8:	b	244854 <builtin_path_id+0x61c>
  2447ec:	ldr	w14, [sp, #12]
  2447f0:	mov	x8, xzr
  2447f4:	add	x9, sp, #0x20
  2447f8:	sub	x9, x9, #0x1
  2447fc:	cbz	x8, 244818 <builtin_path_id+0x5e0>
  244800:	ldrb	w11, [x9, x8]
  244804:	sub	x10, x8, #0x1
  244808:	mov	x8, x10
  24480c:	cmp	w11, #0x5f
  244810:	b.eq	2447fc <builtin_path_id+0x5c4>  // b.none
  244814:	add	x8, x10, #0x1
  244818:	and	w20, w14, #0x1
  24481c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  244820:	add	x9, sp, #0x20
  244824:	add	x2, x2, #0xfc3
  244828:	mov	x0, x19
  24482c:	mov	w1, w20
  244830:	strb	wzr, [x9, x8]
  244834:	bl	23f344 <udev_builtin_add_property>
  244838:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24483c:	add	x2, x2, #0x45d
  244840:	add	x3, sp, #0x20
  244844:	mov	x0, x19
  244848:	mov	w1, w20
  24484c:	bl	23f344 <udev_builtin_add_property>
  244850:	mov	w21, wzr
  244854:	sub	x0, x29, #0x18
  244858:	bl	2448a4 <freep>
  24485c:	mov	w0, w21
  244860:	add	sp, sp, #0x250
  244864:	ldp	x20, x19, [sp, #80]
  244868:	ldp	x22, x21, [sp, #64]
  24486c:	ldp	x24, x23, [sp, #48]
  244870:	ldp	x26, x25, [sp, #32]
  244874:	ldp	x28, x27, [sp, #16]
  244878:	ldp	x29, x30, [sp], #96
  24487c:	ret
  244880:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  244884:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  244888:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24488c:	add	x1, x1, #0x9e6
  244890:	add	x2, x2, #0x171
  244894:	add	x4, x4, #0xa9f
  244898:	mov	w0, #0x1                   	// #1
  24489c:	mov	w3, #0x20f                 	// #527
  2448a0:	bl	253740 <log_assert_failed_realm@plt>

00000000002448a4 <freep>:
  2448a4:	stp	x29, x30, [sp, #-16]!
  2448a8:	ldr	x0, [x0]
  2448ac:	mov	x29, sp
  2448b0:	bl	2536e0 <free@plt>
  2448b4:	ldp	x29, x30, [sp], #16
  2448b8:	ret

00000000002448bc <handle_scsi_tape>:
  2448bc:	stp	x29, x30, [sp, #-48]!
  2448c0:	stp	x20, x19, [sp, #32]
  2448c4:	ldr	x8, [x1]
  2448c8:	str	x21, [sp, #16]
  2448cc:	mov	x29, sp
  2448d0:	cbz	x8, 2448e4 <handle_scsi_tape+0x28>
  2448d4:	ldp	x20, x19, [sp, #32]
  2448d8:	ldr	x21, [sp, #16]
  2448dc:	ldp	x29, x30, [sp], #48
  2448e0:	ret
  2448e4:	mov	x19, x1
  2448e8:	add	x1, x29, #0x18
  2448ec:	bl	253a40 <sd_device_get_sysname@plt>
  2448f0:	tbnz	w0, #31, 2448d4 <handle_scsi_tape+0x18>
  2448f4:	ldr	x20, [x29, #24]
  2448f8:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  2448fc:	add	x1, x1, #0x9e5
  244900:	mov	x0, x20
  244904:	bl	244fa4 <startswith>
  244908:	cbz	x0, 24493c <handle_scsi_tape+0x80>
  24490c:	ldrb	w21, [x20, #3]
  244910:	adrp	x0, 20a000 <parse_argv.options-0x3f0>
  244914:	add	x0, x0, #0x8d1
  244918:	mov	w2, #0x4                   	// #4
  24491c:	mov	w1, w21
  244920:	bl	254490 <memchr@plt>
  244924:	cbz	x0, 24493c <handle_scsi_tape+0x80>
  244928:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24492c:	add	x1, x1, #0x6fd
  244930:	mov	x0, x19
  244934:	mov	w2, w21
  244938:	b	24497c <handle_scsi_tape+0xc0>
  24493c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  244940:	add	x1, x1, #0xb92
  244944:	mov	x0, x20
  244948:	bl	244fa4 <startswith>
  24494c:	cbz	x0, 2448d4 <handle_scsi_tape+0x18>
  244950:	ldrb	w20, [x20, #2]
  244954:	adrp	x0, 20a000 <parse_argv.options-0x3f0>
  244958:	add	x0, x0, #0x8d1
  24495c:	mov	w2, #0x4                   	// #4
  244960:	mov	w1, w20
  244964:	bl	254490 <memchr@plt>
  244968:	cbz	x0, 2448d4 <handle_scsi_tape+0x18>
  24496c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  244970:	add	x1, x1, #0x8d5
  244974:	mov	x0, x19
  244978:	mov	w2, w20
  24497c:	bl	244cd4 <path_prepend>
  244980:	b	2448d4 <handle_scsi_tape+0x18>

0000000000244984 <handle_scsi>:
  244984:	sub	sp, sp, #0x50
  244988:	stp	x29, x30, [sp, #32]
  24498c:	add	x29, sp, #0x20
  244990:	stp	x20, x19, [sp, #64]
  244994:	mov	x20, x1
  244998:	sub	x1, x29, #0x8
  24499c:	stp	x22, x21, [sp, #48]
  2449a0:	mov	x21, x2
  2449a4:	mov	x19, x0
  2449a8:	bl	253d50 <sd_device_get_devtype@plt>
  2449ac:	tbnz	w0, #31, 244a0c <handle_scsi+0x88>
  2449b0:	ldur	x0, [x29, #-8]
  2449b4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2449b8:	add	x1, x1, #0x703
  2449bc:	bl	253bc0 <strcmp@plt>
  2449c0:	cbnz	w0, 244a0c <handle_scsi+0x88>
  2449c4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2449c8:	add	x1, x1, #0x4f2
  2449cc:	add	x2, sp, #0x10
  2449d0:	mov	x0, x19
  2449d4:	bl	254070 <sd_device_get_sysattr_value@plt>
  2449d8:	tbnz	w0, #31, 244a24 <handle_scsi+0xa0>
  2449dc:	ldr	x2, [sp, #16]
  2449e0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  2449e4:	add	x1, x1, #0x2b9
  2449e8:	mov	x0, x20
  2449ec:	bl	244cd4 <path_prepend>
  2449f0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  2449f4:	mov	w8, #0x1                   	// #1
  2449f8:	add	x1, x1, #0x92e
  2449fc:	mov	x0, x19
  244a00:	strb	w8, [x21]
  244a04:	bl	244de8 <skip_subsystem>
  244a08:	mov	x19, x0
  244a0c:	mov	x0, x19
  244a10:	ldp	x20, x19, [sp, #64]
  244a14:	ldp	x22, x21, [sp, #48]
  244a18:	ldp	x29, x30, [sp, #32]
  244a1c:	add	sp, sp, #0x50
  244a20:	ret
  244a24:	add	x1, sp, #0x8
  244a28:	mov	x0, x19
  244a2c:	bl	253d90 <sd_device_get_syspath@plt>
  244a30:	tbnz	w0, #31, 244a64 <handle_scsi+0xe0>
  244a34:	ldr	x22, [sp, #8]
  244a38:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  244a3c:	add	x1, x1, #0x8c6
  244a40:	mov	x0, x22
  244a44:	bl	2544c0 <strstr@plt>
  244a48:	cbz	x0, 244a6c <handle_scsi+0xe8>
  244a4c:	mov	w8, #0x1                   	// #1
  244a50:	mov	x0, x19
  244a54:	mov	x1, x20
  244a58:	strb	w8, [x21]
  244a5c:	bl	244ff4 <handle_scsi_fibre_channel>
  244a60:	b	244a08 <handle_scsi+0x84>
  244a64:	mov	x19, xzr
  244a68:	b	244a0c <handle_scsi+0x88>
  244a6c:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  244a70:	add	x1, x1, #0x4f6
  244a74:	mov	x0, x22
  244a78:	bl	2544c0 <strstr@plt>
  244a7c:	cbz	x0, 244a98 <handle_scsi+0x114>
  244a80:	mov	w8, #0x1                   	// #1
  244a84:	mov	x0, x19
  244a88:	mov	x1, x20
  244a8c:	strb	w8, [x21]
  244a90:	bl	245110 <handle_scsi_sas>
  244a94:	b	244a08 <handle_scsi+0x84>
  244a98:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  244a9c:	add	x1, x1, #0x469
  244aa0:	mov	x0, x22
  244aa4:	bl	2544c0 <strstr@plt>
  244aa8:	cbz	x0, 244ac4 <handle_scsi+0x140>
  244aac:	mov	w8, #0x1                   	// #1
  244ab0:	mov	x0, x19
  244ab4:	mov	x1, x20
  244ab8:	strb	w8, [x21]
  244abc:	bl	245340 <handle_scsi_iscsi>
  244ac0:	b	244a08 <handle_scsi+0x84>
  244ac4:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  244ac8:	add	x1, x1, #0x9e9
  244acc:	mov	x0, x22
  244ad0:	bl	2544c0 <strstr@plt>
  244ad4:	cbz	x0, 244ae8 <handle_scsi+0x164>
  244ad8:	mov	x0, x19
  244adc:	mov	x1, x20
  244ae0:	bl	2455bc <handle_scsi_ata>
  244ae4:	b	244a08 <handle_scsi+0x84>
  244ae8:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244aec:	add	x1, x1, #0x185
  244af0:	mov	x0, x22
  244af4:	bl	2544c0 <strstr@plt>
  244af8:	cbz	x0, 244b04 <handle_scsi+0x180>
  244afc:	mov	w2, #0x25                  	// #37
  244b00:	b	244b1c <handle_scsi+0x198>
  244b04:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  244b08:	add	x1, x1, #0x191
  244b0c:	mov	x0, x22
  244b10:	bl	2544c0 <strstr@plt>
  244b14:	cbz	x0, 244b2c <handle_scsi+0x1a8>
  244b18:	mov	w2, #0x26                  	// #38
  244b1c:	mov	x0, x19
  244b20:	mov	x1, x20
  244b24:	bl	2456cc <handle_scsi_hyperv>
  244b28:	b	244a08 <handle_scsi+0x84>
  244b2c:	mov	x0, x19
  244b30:	mov	x1, x20
  244b34:	bl	245850 <handle_scsi_default>
  244b38:	b	244a08 <handle_scsi+0x84>

0000000000244b3c <handle_cciss>:
  244b3c:	sub	sp, sp, #0x30
  244b40:	stp	x20, x19, [sp, #32]
  244b44:	mov	x20, x1
  244b48:	add	x1, sp, #0x8
  244b4c:	stp	x29, x30, [sp, #16]
  244b50:	add	x29, sp, #0x10
  244b54:	mov	x19, x0
  244b58:	bl	253a40 <sd_device_get_sysname@plt>
  244b5c:	tbnz	w0, #31, 244ba8 <handle_cciss+0x6c>
  244b60:	ldr	x0, [sp, #8]
  244b64:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244b68:	add	x1, x1, #0x92f
  244b6c:	add	x2, sp, #0x4
  244b70:	mov	x3, sp
  244b74:	bl	254870 <__isoc99_sscanf@plt>
  244b78:	cmp	w0, #0x2
  244b7c:	b.ne	244ba8 <handle_cciss+0x6c>  // b.any
  244b80:	ldr	w2, [sp]
  244b84:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  244b88:	add	x1, x1, #0x8e7
  244b8c:	mov	x0, x20
  244b90:	bl	244cd4 <path_prepend>
  244b94:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  244b98:	add	x1, x1, #0x7de
  244b9c:	mov	x0, x19
  244ba0:	bl	244de8 <skip_subsystem>
  244ba4:	b	244bac <handle_cciss+0x70>
  244ba8:	mov	x0, xzr
  244bac:	ldp	x20, x19, [sp, #32]
  244bb0:	ldp	x29, x30, [sp, #16]
  244bb4:	add	sp, sp, #0x30
  244bb8:	ret

0000000000244bbc <handle_usb>:
  244bbc:	sub	sp, sp, #0x50
  244bc0:	stp	x29, x30, [sp, #48]
  244bc4:	add	x29, sp, #0x30
  244bc8:	stp	x20, x19, [sp, #64]
  244bcc:	mov	x20, x1
  244bd0:	sub	x1, x29, #0x8
  244bd4:	mov	x19, x0
  244bd8:	bl	253d50 <sd_device_get_devtype@plt>
  244bdc:	tbnz	w0, #31, 244c50 <handle_usb+0x94>
  244be0:	adrp	x8, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  244be4:	add	x8, x8, #0x5a0
  244be8:	ldr	q0, [x8]
  244bec:	ldr	x8, [x8, #16]
  244bf0:	ldur	x1, [x29, #-8]
  244bf4:	mov	x0, sp
  244bf8:	str	q0, [sp]
  244bfc:	str	x8, [sp, #16]
  244c00:	bl	2544a0 <strv_find@plt>
  244c04:	cbz	x0, 244c50 <handle_usb+0x94>
  244c08:	sub	x1, x29, #0x10
  244c0c:	mov	x0, x19
  244c10:	bl	253a40 <sd_device_get_sysname@plt>
  244c14:	tbnz	w0, #31, 244c50 <handle_usb+0x94>
  244c18:	ldur	x0, [x29, #-16]
  244c1c:	mov	w1, #0x2d                  	// #45
  244c20:	bl	253a60 <strchr@plt>
  244c24:	cbz	x0, 244c50 <handle_usb+0x94>
  244c28:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244c2c:	add	x2, x0, #0x1
  244c30:	add	x1, x1, #0x1ba
  244c34:	mov	x0, x20
  244c38:	bl	244cd4 <path_prepend>
  244c3c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244c40:	add	x1, x1, #0x6c5
  244c44:	mov	x0, x19
  244c48:	bl	244de8 <skip_subsystem>
  244c4c:	mov	x19, x0
  244c50:	mov	x0, x19
  244c54:	ldp	x20, x19, [sp, #64]
  244c58:	ldp	x29, x30, [sp, #48]
  244c5c:	add	sp, sp, #0x50
  244c60:	ret

0000000000244c64 <handle_bcma>:
  244c64:	sub	sp, sp, #0x30
  244c68:	stp	x20, x19, [sp, #32]
  244c6c:	mov	x20, x1
  244c70:	add	x1, sp, #0x8
  244c74:	stp	x29, x30, [sp, #16]
  244c78:	add	x29, sp, #0x10
  244c7c:	mov	x19, x0
  244c80:	bl	253a40 <sd_device_get_sysname@plt>
  244c84:	tbnz	w0, #31, 244cbc <handle_bcma+0x58>
  244c88:	ldr	x0, [sp, #8]
  244c8c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  244c90:	add	x1, x1, #0x62f
  244c94:	add	x2, sp, #0x4
  244c98:	bl	254870 <__isoc99_sscanf@plt>
  244c9c:	cmp	w0, #0x1
  244ca0:	b.ne	244cbc <handle_bcma+0x58>  // b.any
  244ca4:	ldr	w2, [sp, #4]
  244ca8:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  244cac:	add	x1, x1, #0x2c7
  244cb0:	mov	x0, x20
  244cb4:	bl	244cd4 <path_prepend>
  244cb8:	b	244cc0 <handle_bcma+0x5c>
  244cbc:	mov	x19, xzr
  244cc0:	mov	x0, x19
  244cc4:	ldp	x20, x19, [sp, #32]
  244cc8:	ldp	x29, x30, [sp, #16]
  244ccc:	add	sp, sp, #0x30
  244cd0:	ret

0000000000244cd4 <path_prepend>:
  244cd4:	sub	sp, sp, #0x120
  244cd8:	stp	x29, x30, [sp, #240]
  244cdc:	add	x29, sp, #0xf0
  244ce0:	sub	x9, x29, #0x70
  244ce4:	mov	x10, sp
  244ce8:	mov	x11, #0xffffffffffffffd0    	// #-48
  244cec:	add	x8, x29, #0x30
  244cf0:	movk	x11, #0xff80, lsl #32
  244cf4:	add	x9, x9, #0x30
  244cf8:	add	x10, x10, #0x80
  244cfc:	stp	x8, x9, [x29, #-32]
  244d00:	stp	x10, x11, [x29, #-16]
  244d04:	stp	x2, x3, [x29, #-112]
  244d08:	stp	x4, x5, [x29, #-96]
  244d0c:	stp	x6, x7, [x29, #-80]
  244d10:	stp	q1, q2, [sp, #16]
  244d14:	str	q0, [sp]
  244d18:	ldp	q0, q1, [x29, #-32]
  244d1c:	stp	x20, x19, [sp, #272]
  244d20:	mov	x19, x0
  244d24:	add	x0, x29, #0x18
  244d28:	sub	x2, x29, #0x40
  244d2c:	str	x28, [sp, #256]
  244d30:	stp	q3, q4, [sp, #48]
  244d34:	stp	q5, q6, [sp, #80]
  244d38:	str	q7, [sp, #112]
  244d3c:	str	xzr, [x29, #24]
  244d40:	stp	q0, q1, [x29, #-64]
  244d44:	bl	254900 <vasprintf@plt>
  244d48:	tbnz	w0, #31, 244da8 <path_prepend+0xd4>
  244d4c:	ldr	x2, [x19]
  244d50:	cbz	x2, 244d80 <path_prepend+0xac>
  244d54:	ldr	x0, [x29, #24]
  244d58:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  244d5c:	add	x1, x1, #0x81f
  244d60:	mov	x3, xzr
  244d64:	bl	2547b0 <strjoin_real@plt>
  244d68:	cbz	x0, 244dc4 <path_prepend+0xf0>
  244d6c:	mov	x20, x0
  244d70:	ldr	x0, [x19]
  244d74:	bl	2536e0 <free@plt>
  244d78:	str	x20, [x19]
  244d7c:	b	244d8c <path_prepend+0xb8>
  244d80:	ldr	x8, [x29, #24]
  244d84:	str	xzr, [x29, #24]
  244d88:	str	x8, [x19]
  244d8c:	add	x0, x29, #0x18
  244d90:	bl	2448a4 <freep>
  244d94:	ldp	x20, x19, [sp, #272]
  244d98:	ldr	x28, [sp, #256]
  244d9c:	ldp	x29, x30, [sp, #240]
  244da0:	add	sp, sp, #0x120
  244da4:	ret
  244da8:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  244dac:	adrp	x3, 212000 <worker_hash_op+0x7ad0>
  244db0:	add	x1, x1, #0x171
  244db4:	add	x3, x3, #0x8c
  244db8:	mov	w0, #0x1                   	// #1
  244dbc:	mov	w2, #0x24                  	// #36
  244dc0:	b	244ddc <path_prepend+0x108>
  244dc4:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  244dc8:	adrp	x3, 212000 <worker_hash_op+0x7ad0>
  244dcc:	add	x1, x1, #0x171
  244dd0:	add	x3, x3, #0x8c
  244dd4:	mov	w0, #0x1                   	// #1
  244dd8:	mov	w2, #0x2d                  	// #45
  244ddc:	bl	2537c0 <log_oom_internal@plt>
  244de0:	mov	w0, #0x47                  	// #71
  244de4:	bl	254910 <exit@plt>

0000000000244de8 <skip_subsystem>:
  244de8:	sub	sp, sp, #0x30
  244dec:	stp	x29, x30, [sp, #16]
  244df0:	stp	x20, x19, [sp, #32]
  244df4:	add	x29, sp, #0x10
  244df8:	cbz	x0, 244e68 <skip_subsystem+0x80>
  244dfc:	mov	x19, x1
  244e00:	cbz	x1, 244e8c <skip_subsystem+0xa4>
  244e04:	mov	x20, x0
  244e08:	str	x0, [sp, #8]
  244e0c:	b	244e18 <skip_subsystem+0x30>
  244e10:	mov	w8, wzr
  244e14:	tbz	w8, #0, 244e54 <skip_subsystem+0x6c>
  244e18:	ldr	x0, [sp, #8]
  244e1c:	mov	x1, sp
  244e20:	bl	253bb0 <sd_device_get_subsystem@plt>
  244e24:	tbnz	w0, #31, 244e10 <skip_subsystem+0x28>
  244e28:	ldr	x0, [sp]
  244e2c:	mov	x1, x19
  244e30:	bl	253bc0 <strcmp@plt>
  244e34:	cbnz	w0, 244e10 <skip_subsystem+0x28>
  244e38:	ldr	x20, [sp, #8]
  244e3c:	add	x1, sp, #0x8
  244e40:	mov	x0, x20
  244e44:	bl	253d60 <sd_device_get_parent@plt>
  244e48:	mvn	w8, w0
  244e4c:	lsr	w8, w8, #31
  244e50:	tbnz	w8, #0, 244e18 <skip_subsystem+0x30>
  244e54:	mov	x0, x20
  244e58:	ldp	x20, x19, [sp, #32]
  244e5c:	ldp	x29, x30, [sp, #16]
  244e60:	add	sp, sp, #0x30
  244e64:	ret
  244e68:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  244e6c:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  244e70:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  244e74:	add	x1, x1, #0x9e6
  244e78:	add	x2, x2, #0x171
  244e7c:	add	x4, x4, #0xd62
  244e80:	mov	w0, #0x1                   	// #1
  244e84:	mov	w3, #0x53                  	// #83
  244e88:	bl	253740 <log_assert_failed_realm@plt>
  244e8c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  244e90:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  244e94:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  244e98:	add	x1, x1, #0xd97
  244e9c:	add	x2, x2, #0x171
  244ea0:	add	x4, x4, #0xd62
  244ea4:	mov	w0, #0x1                   	// #1
  244ea8:	mov	w3, #0x54                  	// #84
  244eac:	bl	253740 <log_assert_failed_realm@plt>

0000000000244eb0 <handle_ap>:
  244eb0:	sub	sp, sp, #0x40
  244eb4:	stp	x29, x30, [sp, #32]
  244eb8:	stp	x20, x19, [sp, #48]
  244ebc:	add	x29, sp, #0x20
  244ec0:	cbz	x0, 244f5c <handle_ap+0xac>
  244ec4:	mov	x20, x1
  244ec8:	cbz	x1, 244f80 <handle_ap+0xd0>
  244ecc:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244ed0:	add	x1, x1, #0x132
  244ed4:	sub	x2, x29, #0x8
  244ed8:	mov	x19, x0
  244edc:	bl	254070 <sd_device_get_sysattr_value@plt>
  244ee0:	tbnz	w0, #31, 244f18 <handle_ap+0x68>
  244ee4:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  244ee8:	add	x1, x1, #0x503
  244eec:	add	x2, sp, #0x10
  244ef0:	mov	x0, x19
  244ef4:	bl	254070 <sd_device_get_sysattr_value@plt>
  244ef8:	tbnz	w0, #31, 244f18 <handle_ap+0x68>
  244efc:	ldur	x2, [x29, #-8]
  244f00:	ldr	x3, [sp, #16]
  244f04:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  244f08:	add	x1, x1, #0x63a
  244f0c:	mov	x0, x20
  244f10:	bl	244cd4 <path_prepend>
  244f14:	b	244f3c <handle_ap+0x8c>
  244f18:	add	x1, sp, #0x8
  244f1c:	mov	x0, x19
  244f20:	bl	253a40 <sd_device_get_sysname@plt>
  244f24:	tbnz	w0, #31, 244f3c <handle_ap+0x8c>
  244f28:	ldr	x2, [sp, #8]
  244f2c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  244f30:	add	x1, x1, #0xe80
  244f34:	mov	x0, x20
  244f38:	bl	244cd4 <path_prepend>
  244f3c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  244f40:	add	x1, x1, #0x8ce
  244f44:	mov	x0, x19
  244f48:	bl	244de8 <skip_subsystem>
  244f4c:	ldp	x20, x19, [sp, #48]
  244f50:	ldp	x29, x30, [sp, #32]
  244f54:	add	sp, sp, #0x40
  244f58:	ret
  244f5c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  244f60:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  244f64:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  244f68:	add	x1, x1, #0x244
  244f6c:	add	x2, x2, #0x171
  244f70:	add	x4, x4, #0xb28
  244f74:	mov	w0, #0x1                   	// #1
  244f78:	mov	w3, #0x1f8                 	// #504
  244f7c:	bl	253740 <log_assert_failed_realm@plt>
  244f80:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  244f84:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  244f88:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  244f8c:	add	x1, x1, #0x18d
  244f90:	add	x2, x2, #0x171
  244f94:	add	x4, x4, #0xb28
  244f98:	mov	w0, #0x1                   	// #1
  244f9c:	mov	w3, #0x1f9                 	// #505
  244fa0:	bl	253740 <log_assert_failed_realm@plt>

0000000000244fa4 <startswith>:
  244fa4:	stp	x29, x30, [sp, #-48]!
  244fa8:	stp	x20, x19, [sp, #32]
  244fac:	mov	x20, x0
  244fb0:	mov	x0, x1
  244fb4:	str	x21, [sp, #16]
  244fb8:	mov	x29, sp
  244fbc:	mov	x19, x1
  244fc0:	bl	2539a0 <strlen@plt>
  244fc4:	mov	x21, x0
  244fc8:	mov	x0, x20
  244fcc:	mov	x1, x19
  244fd0:	mov	x2, x21
  244fd4:	bl	2539b0 <strncmp@plt>
  244fd8:	add	x8, x20, x21
  244fdc:	ldp	x20, x19, [sp, #32]
  244fe0:	ldr	x21, [sp, #16]
  244fe4:	cmp	w0, #0x0
  244fe8:	csel	x0, x8, xzr, eq  // eq = none
  244fec:	ldp	x29, x30, [sp], #48
  244ff0:	ret

0000000000244ff4 <handle_scsi_fibre_channel>:
  244ff4:	sub	sp, sp, #0x50
  244ff8:	stp	x29, x30, [sp, #48]
  244ffc:	add	x29, sp, #0x30
  245000:	stp	x20, x19, [sp, #64]
  245004:	stur	xzr, [x29, #-16]
  245008:	str	xzr, [sp, #8]
  24500c:	cbz	x0, 2450c8 <handle_scsi_fibre_channel+0xd4>
  245010:	mov	x20, x1
  245014:	cbz	x1, 2450ec <handle_scsi_fibre_channel+0xf8>
  245018:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24501c:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  245020:	add	x1, x1, #0x92e
  245024:	add	x2, x2, #0xe8b
  245028:	sub	x3, x29, #0x8
  24502c:	mov	x19, x0
  245030:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  245034:	tbnz	w0, #31, 2450a0 <handle_scsi_fibre_channel+0xac>
  245038:	ldur	x0, [x29, #-8]
  24503c:	add	x1, sp, #0x10
  245040:	bl	253a40 <sd_device_get_sysname@plt>
  245044:	tbnz	w0, #31, 2450a0 <handle_scsi_fibre_channel+0xac>
  245048:	ldr	x2, [sp, #16]
  24504c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245050:	add	x1, x1, #0xe97
  245054:	sub	x0, x29, #0x10
  245058:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  24505c:	tbnz	w0, #31, 2450a0 <handle_scsi_fibre_channel+0xac>
  245060:	ldur	x0, [x29, #-16]
  245064:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  245068:	add	x1, x1, #0x3df
  24506c:	add	x2, sp, #0x18
  245070:	bl	254070 <sd_device_get_sysattr_value@plt>
  245074:	tbnz	w0, #31, 2450a0 <handle_scsi_fibre_channel+0xac>
  245078:	add	x1, sp, #0x8
  24507c:	mov	x0, x19
  245080:	bl	245aa8 <format_lun_number>
  245084:	ldr	x2, [sp, #24]
  245088:	ldr	x3, [sp, #8]
  24508c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  245090:	add	x1, x1, #0xfcb
  245094:	mov	x0, x20
  245098:	bl	244cd4 <path_prepend>
  24509c:	b	2450a4 <handle_scsi_fibre_channel+0xb0>
  2450a0:	mov	x19, xzr
  2450a4:	add	x0, sp, #0x8
  2450a8:	bl	2448a4 <freep>
  2450ac:	sub	x0, x29, #0x10
  2450b0:	bl	245a8c <sd_device_unrefp>
  2450b4:	mov	x0, x19
  2450b8:	ldp	x20, x19, [sp, #64]
  2450bc:	ldp	x29, x30, [sp, #48]
  2450c0:	add	sp, sp, #0x50
  2450c4:	ret
  2450c8:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  2450cc:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  2450d0:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2450d4:	add	x1, x1, #0x244
  2450d8:	add	x2, x2, #0x171
  2450dc:	add	x4, x4, #0xdfd
  2450e0:	mov	w0, #0x1                   	// #1
  2450e4:	mov	w3, #0x6d                  	// #109
  2450e8:	bl	253740 <log_assert_failed_realm@plt>
  2450ec:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2450f0:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  2450f4:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2450f8:	add	x1, x1, #0x18d
  2450fc:	add	x2, x2, #0x171
  245100:	add	x4, x4, #0xdfd
  245104:	mov	w0, #0x1                   	// #1
  245108:	mov	w3, #0x6e                  	// #110
  24510c:	bl	253740 <log_assert_failed_realm@plt>

0000000000245110 <handle_scsi_sas>:
  245110:	sub	sp, sp, #0x80
  245114:	stp	x29, x30, [sp, #96]
  245118:	add	x29, sp, #0x60
  24511c:	stp	x20, x19, [sp, #112]
  245120:	stur	xzr, [x29, #-40]
  245124:	stp	xzr, xzr, [sp, #40]
  245128:	str	xzr, [sp, #32]
  24512c:	str	xzr, [sp]
  245130:	cbz	x0, 2452f8 <handle_scsi_sas+0x1e8>
  245134:	mov	x20, x1
  245138:	cbz	x1, 24531c <handle_scsi_sas+0x20c>
  24513c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  245140:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  245144:	add	x1, x1, #0x92e
  245148:	add	x2, x2, #0xe8b
  24514c:	sub	x3, x29, #0x8
  245150:	mov	x19, x0
  245154:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  245158:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  24515c:	ldur	x0, [x29, #-8]
  245160:	sub	x1, x29, #0x10
  245164:	bl	253d60 <sd_device_get_parent@plt>
  245168:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  24516c:	ldur	x0, [x29, #-16]
  245170:	add	x1, sp, #0x8
  245174:	bl	253a40 <sd_device_get_sysname@plt>
  245178:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  24517c:	ldr	x2, [sp, #8]
  245180:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  245184:	add	x1, x1, #0x9ee
  245188:	sub	x0, x29, #0x28
  24518c:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  245190:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  245194:	ldur	x0, [x29, #-16]
  245198:	sub	x1, x29, #0x18
  24519c:	bl	253d60 <sd_device_get_parent@plt>
  2451a0:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  2451a4:	ldur	x0, [x29, #-24]
  2451a8:	add	x1, sp, #0x8
  2451ac:	bl	253a40 <sd_device_get_sysname@plt>
  2451b0:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  2451b4:	ldr	x2, [sp, #8]
  2451b8:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2451bc:	add	x1, x1, #0x70f
  2451c0:	add	x0, sp, #0x28
  2451c4:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  2451c8:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  2451cc:	ldr	x0, [sp, #40]
  2451d0:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  2451d4:	add	x1, x1, #0x667
  2451d8:	add	x2, sp, #0x10
  2451dc:	bl	254070 <sd_device_get_sysattr_value@plt>
  2451e0:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  2451e4:	ldr	x0, [sp, #16]
  2451e8:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  2451ec:	add	x1, x1, #0xa68
  2451f0:	mov	w2, #0x2                   	// #2
  2451f4:	bl	2539b0 <strncmp@plt>
  2451f8:	cbz	w0, 245210 <handle_scsi_sas+0x100>
  2451fc:	mov	x0, x19
  245200:	mov	x1, x20
  245204:	bl	245b20 <handle_scsi_sas_wide_port>
  245208:	mov	x19, x0
  24520c:	b	2452a8 <handle_scsi_sas+0x198>
  245210:	ldur	x0, [x29, #-40]
  245214:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  245218:	add	x1, x1, #0xe71
  24521c:	add	x2, sp, #0x18
  245220:	bl	254070 <sd_device_get_sysattr_value@plt>
  245224:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  245228:	ldur	x0, [x29, #-24]
  24522c:	sub	x1, x29, #0x20
  245230:	bl	253d60 <sd_device_get_parent@plt>
  245234:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  245238:	ldur	x0, [x29, #-32]
  24523c:	add	x1, sp, #0x8
  245240:	bl	253a40 <sd_device_get_sysname@plt>
  245244:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  245248:	ldr	x2, [sp, #8]
  24524c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  245250:	add	x1, x1, #0x9ee
  245254:	add	x0, sp, #0x30
  245258:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  24525c:	tbnz	w0, #31, 245278 <handle_scsi_sas+0x168>
  245260:	ldr	x0, [sp, #48]
  245264:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245268:	add	x1, x1, #0x718
  24526c:	add	x2, sp, #0x20
  245270:	bl	254070 <sd_device_get_sysattr_value@plt>
  245274:	tbnz	w0, #31, 2452a4 <handle_scsi_sas+0x194>
  245278:	mov	x1, sp
  24527c:	mov	x0, x19
  245280:	bl	245aa8 <format_lun_number>
  245284:	ldp	x3, x2, [sp, #24]
  245288:	ldr	x4, [sp]
  24528c:	cbz	x2, 2452dc <handle_scsi_sas+0x1cc>
  245290:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  245294:	add	x1, x1, #0x192
  245298:	mov	x0, x20
  24529c:	bl	244cd4 <path_prepend>
  2452a0:	b	2452a8 <handle_scsi_sas+0x198>
  2452a4:	mov	x19, xzr
  2452a8:	mov	x0, sp
  2452ac:	bl	2448a4 <freep>
  2452b0:	add	x0, sp, #0x28
  2452b4:	bl	245a8c <sd_device_unrefp>
  2452b8:	add	x0, sp, #0x30
  2452bc:	bl	245a8c <sd_device_unrefp>
  2452c0:	sub	x0, x29, #0x28
  2452c4:	bl	245a8c <sd_device_unrefp>
  2452c8:	mov	x0, x19
  2452cc:	ldp	x20, x19, [sp, #112]
  2452d0:	ldp	x29, x30, [sp, #96]
  2452d4:	add	sp, sp, #0x80
  2452d8:	ret
  2452dc:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  2452e0:	add	x1, x1, #0x8da
  2452e4:	mov	x0, x20
  2452e8:	mov	x2, x3
  2452ec:	mov	x3, x4
  2452f0:	bl	244cd4 <path_prepend>
  2452f4:	b	2452a8 <handle_scsi_sas+0x198>
  2452f8:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  2452fc:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245300:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  245304:	add	x1, x1, #0x244
  245308:	add	x2, x2, #0x171
  24530c:	add	x4, x4, #0xfd4
  245310:	mov	w0, #0x1                   	// #1
  245314:	mov	w3, #0x9f                  	// #159
  245318:	bl	253740 <log_assert_failed_realm@plt>
  24531c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  245320:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245324:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  245328:	add	x1, x1, #0x18d
  24532c:	add	x2, x2, #0x171
  245330:	add	x4, x4, #0xfd4
  245334:	mov	w0, #0x1                   	// #1
  245338:	mov	w3, #0xa0                  	// #160
  24533c:	bl	253740 <log_assert_failed_realm@plt>

0000000000245340 <handle_scsi_iscsi>:
  245340:	stp	x29, x30, [sp, #-64]!
  245344:	str	x23, [sp, #16]
  245348:	stp	x22, x21, [sp, #32]
  24534c:	stp	x20, x19, [sp, #48]
  245350:	mov	x29, sp
  245354:	sub	sp, sp, #0x50
  245358:	stp	xzr, xzr, [x29, #-16]
  24535c:	stur	xzr, [x29, #-40]
  245360:	cbz	x0, 245544 <handle_scsi_iscsi+0x204>
  245364:	mov	x20, x1
  245368:	cbz	x1, 245568 <handle_scsi_iscsi+0x228>
  24536c:	adrp	x21, 216000 <worker_hash_op+0xbad0>
  245370:	mov	x19, x0
  245374:	add	x21, x21, #0x9f9
  245378:	str	x0, [x29, #24]
  24537c:	ldr	x0, [x29, #24]
  245380:	add	x1, x29, #0x18
  245384:	bl	253d60 <sd_device_get_parent@plt>
  245388:	tbnz	w0, #31, 24550c <handle_scsi_iscsi+0x1cc>
  24538c:	ldr	x0, [x29, #24]
  245390:	sub	x1, x29, #0x30
  245394:	bl	253a40 <sd_device_get_sysname@plt>
  245398:	tbnz	w0, #31, 24550c <handle_scsi_iscsi+0x1cc>
  24539c:	ldur	x22, [x29, #-48]
  2453a0:	mov	x1, x21
  2453a4:	mov	x0, x22
  2453a8:	bl	244fa4 <startswith>
  2453ac:	cbz	x0, 24537c <handle_scsi_iscsi+0x3c>
  2453b0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2453b4:	add	x1, x1, #0x724
  2453b8:	sub	x0, x29, #0x8
  2453bc:	mov	x2, x22
  2453c0:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  2453c4:	tbnz	w0, #31, 24550c <handle_scsi_iscsi+0x1cc>
  2453c8:	ldur	x0, [x29, #-8]
  2453cc:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  2453d0:	add	x1, x1, #0x3e9
  2453d4:	sub	x2, x29, #0x18
  2453d8:	bl	254070 <sd_device_get_sysattr_value@plt>
  2453dc:	tbnz	w0, #31, 24550c <handle_scsi_iscsi+0x1cc>
  2453e0:	ldr	x0, [x29, #24]
  2453e4:	sub	x1, x29, #0x38
  2453e8:	bl	253fe0 <sd_device_get_sysnum@plt>
  2453ec:	mov	x21, xzr
  2453f0:	tbnz	w0, #31, 245510 <handle_scsi_iscsi+0x1d0>
  2453f4:	ldur	x8, [x29, #-56]
  2453f8:	cbz	x8, 245510 <handle_scsi_iscsi+0x1d0>
  2453fc:	ldur	x9, [x29, #-56]
  245400:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  245404:	adrp	x10, 216000 <worker_hash_op+0xbad0>
  245408:	mov	x22, xzr
  24540c:	mov	x21, xzr
  245410:	add	x8, x8, #0x49
  245414:	add	x10, x10, #0xa01
  245418:	sub	x23, x29, #0x50
  24541c:	stp	x9, x10, [x29, #-72]
  245420:	stur	x8, [x29, #-80]
  245424:	ldr	x0, [x23, x22]
  245428:	cbz	x0, 245440 <handle_scsi_iscsi+0x100>
  24542c:	bl	2539a0 <strlen@plt>
  245430:	add	x22, x22, #0x8
  245434:	cmp	x22, #0x18
  245438:	add	x21, x0, x21
  24543c:	b.ne	245424 <handle_scsi_iscsi+0xe4>  // b.any
  245440:	add	x21, x21, #0x1
  245444:	mov	x0, x21
  245448:	bl	245c4c <size_multiply_overflow>
  24544c:	tbnz	w0, #0, 24558c <handle_scsi_iscsi+0x24c>
  245450:	cmp	x21, #0x400, lsl #12
  245454:	b.hi	245598 <handle_scsi_iscsi+0x258>  // b.pmore
  245458:	add	x9, x21, #0xf
  24545c:	mov	x8, sp
  245460:	and	x9, x9, #0xfffffffffffffff0
  245464:	sub	x21, x8, x9
  245468:	mov	sp, x21
  24546c:	mov	x22, xzr
  245470:	sub	x23, x29, #0x50
  245474:	mov	x0, x21
  245478:	ldr	x1, [x23, x22]
  24547c:	cbz	x1, 245490 <handle_scsi_iscsi+0x150>
  245480:	bl	253e40 <stpcpy@plt>
  245484:	add	x22, x22, #0x8
  245488:	cmp	x22, #0x18
  24548c:	b.ne	245478 <handle_scsi_iscsi+0x138>  // b.any
  245490:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245494:	strb	wzr, [x0]
  245498:	add	x1, x1, #0xea4
  24549c:	sub	x0, x29, #0x10
  2454a0:	mov	x2, x21
  2454a4:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  2454a8:	tbnz	w0, #31, 24550c <handle_scsi_iscsi+0x1cc>
  2454ac:	ldur	x0, [x29, #-16]
  2454b0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2454b4:	add	x1, x1, #0x732
  2454b8:	sub	x2, x29, #0x50
  2454bc:	bl	254070 <sd_device_get_sysattr_value@plt>
  2454c0:	tbnz	w0, #31, 24550c <handle_scsi_iscsi+0x1cc>
  2454c4:	ldur	x0, [x29, #-16]
  2454c8:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  2454cc:	add	x1, x1, #0xe38
  2454d0:	sub	x2, x29, #0x20
  2454d4:	bl	254070 <sd_device_get_sysattr_value@plt>
  2454d8:	tbnz	w0, #31, 24550c <handle_scsi_iscsi+0x1cc>
  2454dc:	sub	x1, x29, #0x28
  2454e0:	mov	x0, x19
  2454e4:	bl	245aa8 <format_lun_number>
  2454e8:	ldur	x2, [x29, #-80]
  2454ec:	ldp	x3, x4, [x29, #-32]
  2454f0:	ldur	x5, [x29, #-40]
  2454f4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2454f8:	add	x1, x1, #0x1a5
  2454fc:	mov	x0, x20
  245500:	bl	244cd4 <path_prepend>
  245504:	mov	x21, x19
  245508:	b	245510 <handle_scsi_iscsi+0x1d0>
  24550c:	mov	x21, xzr
  245510:	sub	x0, x29, #0x28
  245514:	bl	2448a4 <freep>
  245518:	sub	x0, x29, #0x10
  24551c:	bl	245a8c <sd_device_unrefp>
  245520:	sub	x0, x29, #0x8
  245524:	bl	245a8c <sd_device_unrefp>
  245528:	mov	x0, x21
  24552c:	mov	sp, x29
  245530:	ldp	x20, x19, [sp, #48]
  245534:	ldp	x22, x21, [sp, #32]
  245538:	ldr	x23, [sp, #16]
  24553c:	ldp	x29, x30, [sp], #64
  245540:	ret
  245544:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  245548:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  24554c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  245550:	add	x1, x1, #0x244
  245554:	add	x2, x2, #0x171
  245558:	add	x4, x4, #0x8fc
  24555c:	mov	w0, #0x1                   	// #1
  245560:	mov	w3, #0xdb                  	// #219
  245564:	bl	253740 <log_assert_failed_realm@plt>
  245568:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24556c:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245570:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  245574:	add	x1, x1, #0x18d
  245578:	add	x2, x2, #0x171
  24557c:	add	x4, x4, #0x8fc
  245580:	mov	w0, #0x1                   	// #1
  245584:	mov	w3, #0xdc                  	// #220
  245588:	bl	253740 <log_assert_failed_realm@plt>
  24558c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  245590:	add	x1, x1, #0x498
  245594:	b	2455a0 <handle_scsi_iscsi+0x260>
  245598:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24559c:	add	x1, x1, #0x166
  2455a0:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  2455a4:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  2455a8:	add	x2, x2, #0x171
  2455ac:	add	x4, x4, #0x8fc
  2455b0:	mov	w0, #0x1                   	// #1
  2455b4:	mov	w3, #0xf2                  	// #242
  2455b8:	bl	253740 <log_assert_failed_realm@plt>

00000000002455bc <handle_scsi_ata>:
  2455bc:	sub	sp, sp, #0x50
  2455c0:	stp	x29, x30, [sp, #48]
  2455c4:	stp	x20, x19, [sp, #64]
  2455c8:	add	x29, sp, #0x30
  2455cc:	str	xzr, [sp, #24]
  2455d0:	cbz	x0, 245684 <handle_scsi_ata+0xc8>
  2455d4:	mov	x20, x1
  2455d8:	cbz	x1, 2456a8 <handle_scsi_ata+0xec>
  2455dc:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  2455e0:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  2455e4:	add	x1, x1, #0x92e
  2455e8:	add	x2, x2, #0x198
  2455ec:	sub	x3, x29, #0x8
  2455f0:	mov	x19, x0
  2455f4:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  2455f8:	tbnz	w0, #31, 245664 <handle_scsi_ata+0xa8>
  2455fc:	ldur	x0, [x29, #-8]
  245600:	sub	x1, x29, #0x10
  245604:	bl	253d60 <sd_device_get_parent@plt>
  245608:	tbnz	w0, #31, 245664 <handle_scsi_ata+0xa8>
  24560c:	ldur	x0, [x29, #-16]
  245610:	add	x1, sp, #0x8
  245614:	bl	253a40 <sd_device_get_sysname@plt>
  245618:	tbnz	w0, #31, 245664 <handle_scsi_ata+0xa8>
  24561c:	ldr	x2, [sp, #8]
  245620:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  245624:	add	x1, x1, #0x93a
  245628:	add	x0, sp, #0x18
  24562c:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  245630:	tbnz	w0, #31, 245664 <handle_scsi_ata+0xa8>
  245634:	ldr	x0, [sp, #24]
  245638:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24563c:	add	x1, x1, #0xd5a
  245640:	add	x2, sp, #0x10
  245644:	bl	254070 <sd_device_get_sysattr_value@plt>
  245648:	tbnz	w0, #31, 245664 <handle_scsi_ata+0xa8>
  24564c:	ldr	x2, [sp, #16]
  245650:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  245654:	add	x1, x1, #0xc4b
  245658:	mov	x0, x20
  24565c:	bl	244cd4 <path_prepend>
  245660:	b	245668 <handle_scsi_ata+0xac>
  245664:	mov	x19, xzr
  245668:	add	x0, sp, #0x18
  24566c:	bl	245a8c <sd_device_unrefp>
  245670:	mov	x0, x19
  245674:	ldp	x20, x19, [sp, #64]
  245678:	ldp	x29, x30, [sp, #48]
  24567c:	add	sp, sp, #0x50
  245680:	ret
  245684:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  245688:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  24568c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  245690:	add	x1, x1, #0x244
  245694:	add	x2, x2, #0x171
  245698:	add	x4, x4, #0x4fe
  24569c:	mov	w0, #0x1                   	// #1
  2456a0:	mov	w3, #0x105                 	// #261
  2456a4:	bl	253740 <log_assert_failed_realm@plt>
  2456a8:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2456ac:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  2456b0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  2456b4:	add	x1, x1, #0x18d
  2456b8:	add	x2, x2, #0x171
  2456bc:	add	x4, x4, #0x4fe
  2456c0:	mov	w0, #0x1                   	// #1
  2456c4:	mov	w3, #0x106                 	// #262
  2456c8:	bl	253740 <log_assert_failed_realm@plt>

00000000002456cc <handle_scsi_hyperv>:
  2456cc:	sub	sp, sp, #0x80
  2456d0:	stp	x29, x30, [sp, #80]
  2456d4:	add	x29, sp, #0x50
  2456d8:	stp	x22, x21, [sp, #96]
  2456dc:	stp	x20, x19, [sp, #112]
  2456e0:	stur	xzr, [x29, #-32]
  2456e4:	cbz	x0, 245808 <handle_scsi_hyperv+0x13c>
  2456e8:	mov	x20, x1
  2456ec:	cbz	x1, 24582c <handle_scsi_hyperv+0x160>
  2456f0:	mov	x21, x2
  2456f4:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  2456f8:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  2456fc:	add	x1, x1, #0x92e
  245700:	add	x2, x2, #0x198
  245704:	sub	x3, x29, #0x8
  245708:	mov	x19, x0
  24570c:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  245710:	tbnz	w0, #31, 245788 <handle_scsi_hyperv+0xbc>
  245714:	ldur	x0, [x29, #-8]
  245718:	sub	x1, x29, #0x10
  24571c:	bl	253d60 <sd_device_get_parent@plt>
  245720:	tbnz	w0, #31, 245788 <handle_scsi_hyperv+0xbc>
  245724:	ldur	x0, [x29, #-16]
  245728:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  24572c:	add	x1, x1, #0x670
  245730:	sub	x2, x29, #0x18
  245734:	bl	254070 <sd_device_get_sysattr_value@plt>
  245738:	tbnz	w0, #31, 245788 <handle_scsi_hyperv+0xbc>
  24573c:	ldur	x22, [x29, #-24]
  245740:	mov	x0, x22
  245744:	bl	2539a0 <strlen@plt>
  245748:	cmp	x0, x21
  24574c:	b.cc	245788 <handle_scsi_hyperv+0xbc>  // b.lo, b.ul, b.last
  245750:	ldrb	w8, [x22]
  245754:	cmp	w8, #0x7b
  245758:	b.ne	245788 <handle_scsi_hyperv+0xbc>  // b.any
  24575c:	sub	x8, x21, #0x1
  245760:	ldrb	w9, [x22, x8]
  245764:	cmp	w9, #0x7d
  245768:	b.ne	245788 <handle_scsi_hyperv+0xbc>  // b.any
  24576c:	cmp	x8, #0x2
  245770:	b.cc	2457d4 <handle_scsi_hyperv+0x108>  // b.lo, b.ul, b.last
  245774:	mov	x8, xzr
  245778:	sub	x9, x21, #0x2
  24577c:	add	x10, x22, #0x1
  245780:	add	x11, sp, #0x8
  245784:	b	2457b8 <handle_scsi_hyperv+0xec>
  245788:	mov	x19, xzr
  24578c:	sub	x0, x29, #0x20
  245790:	bl	2448a4 <freep>
  245794:	mov	x0, x19
  245798:	ldp	x20, x19, [sp, #112]
  24579c:	ldp	x22, x21, [sp, #96]
  2457a0:	ldp	x29, x30, [sp, #80]
  2457a4:	add	sp, sp, #0x80
  2457a8:	ret
  2457ac:	subs	x9, x9, #0x1
  2457b0:	add	x10, x10, #0x1
  2457b4:	b.eq	2457d8 <handle_scsi_hyperv+0x10c>  // b.none
  2457b8:	ldrb	w12, [x10]
  2457bc:	cmp	w12, #0x2d
  2457c0:	b.eq	2457ac <handle_scsi_hyperv+0xe0>  // b.none
  2457c4:	add	x13, x8, #0x1
  2457c8:	strb	w12, [x11, x8]
  2457cc:	mov	x8, x13
  2457d0:	b	2457ac <handle_scsi_hyperv+0xe0>
  2457d4:	mov	x8, xzr
  2457d8:	add	x9, sp, #0x8
  2457dc:	sub	x1, x29, #0x20
  2457e0:	mov	x0, x19
  2457e4:	strb	wzr, [x9, x8]
  2457e8:	bl	245aa8 <format_lun_number>
  2457ec:	ldur	x3, [x29, #-32]
  2457f0:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  2457f4:	add	x1, x1, #0x467
  2457f8:	add	x2, sp, #0x8
  2457fc:	mov	x0, x20
  245800:	bl	244cd4 <path_prepend>
  245804:	b	24578c <handle_scsi_hyperv+0xc0>
  245808:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24580c:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245810:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  245814:	add	x1, x1, #0x244
  245818:	add	x2, x2, #0x171
  24581c:	add	x4, x4, #0x235
  245820:	mov	w0, #0x1                   	// #1
  245824:	mov	w3, #0x16f                 	// #367
  245828:	bl	253740 <log_assert_failed_realm@plt>
  24582c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  245830:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245834:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  245838:	add	x1, x1, #0x18d
  24583c:	add	x2, x2, #0x171
  245840:	add	x4, x4, #0x235
  245844:	mov	w0, #0x1                   	// #1
  245848:	mov	w3, #0x170                 	// #368
  24584c:	bl	253740 <log_assert_failed_realm@plt>

0000000000245850 <handle_scsi_default>:
  245850:	stp	x29, x30, [sp, #-80]!
  245854:	str	x25, [sp, #16]
  245858:	stp	x24, x23, [sp, #32]
  24585c:	stp	x22, x21, [sp, #48]
  245860:	stp	x20, x19, [sp, #64]
  245864:	mov	x29, sp
  245868:	sub	sp, sp, #0x30
  24586c:	stur	xzr, [x29, #-40]
  245870:	cbz	x0, 245a44 <handle_scsi_default+0x1f4>
  245874:	mov	x19, x1
  245878:	cbz	x1, 245a68 <handle_scsi_default+0x218>
  24587c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  245880:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245884:	add	x1, x1, #0x92e
  245888:	add	x2, x2, #0x198
  24588c:	add	x3, x29, #0x18
  245890:	mov	x20, x0
  245894:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  245898:	tbnz	w0, #31, 2459e4 <handle_scsi_default+0x194>
  24589c:	sub	x1, x29, #0x18
  2458a0:	mov	x0, x20
  2458a4:	bl	253a40 <sd_device_get_sysname@plt>
  2458a8:	tbnz	w0, #31, 2459e4 <handle_scsi_default+0x194>
  2458ac:	ldur	x0, [x29, #-24]
  2458b0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2458b4:	add	x1, x1, #0xeb5
  2458b8:	sub	x2, x29, #0x4
  2458bc:	sub	x3, x29, #0x8
  2458c0:	sub	x4, x29, #0xc
  2458c4:	sub	x5, x29, #0x10
  2458c8:	bl	254870 <__isoc99_sscanf@plt>
  2458cc:	cmp	w0, #0x4
  2458d0:	b.ne	2459e4 <handle_scsi_default+0x194>  // b.any
  2458d4:	ldr	x0, [x29, #24]
  2458d8:	sub	x1, x29, #0x20
  2458dc:	bl	253d90 <sd_device_get_syspath@plt>
  2458e0:	tbnz	w0, #31, 2459e4 <handle_scsi_default+0x194>
  2458e4:	ldur	x20, [x29, #-32]
  2458e8:	mov	w1, #0x2f                  	// #47
  2458ec:	mov	x0, x20
  2458f0:	bl	254830 <strrchr@plt>
  2458f4:	cbz	x0, 2459e4 <handle_scsi_default+0x194>
  2458f8:	sub	x1, x0, x20
  2458fc:	mov	x0, x20
  245900:	bl	253ec0 <strnlen@plt>
  245904:	add	x8, x0, #0x10
  245908:	and	x8, x8, #0xfffffffffffffff0
  24590c:	mov	x9, sp
  245910:	sub	x21, x9, x8
  245914:	mov	x2, x0
  245918:	mov	sp, x21
  24591c:	strb	wzr, [x21, x0]
  245920:	mov	x0, x21
  245924:	mov	x1, x20
  245928:	bl	2540c0 <memcpy@plt>
  24592c:	mov	x0, x21
  245930:	stur	x21, [x29, #-32]
  245934:	bl	2543a0 <opendir@plt>
  245938:	stur	x0, [x29, #-40]
  24593c:	cbz	x0, 2459e4 <handle_scsi_default+0x194>
  245940:	mov	x20, x0
  245944:	bl	253660 <__errno_location@plt>
  245948:	mov	x21, x0
  24594c:	str	wzr, [x0]
  245950:	mov	x0, x20
  245954:	bl	2543b0 <readdir64@plt>
  245958:	mov	w25, #0xffffffff            	// #-1
  24595c:	cbz	x0, 245a10 <handle_scsi_default+0x1c0>
  245960:	adrp	x22, 212000 <worker_hash_op+0x7ad0>
  245964:	mov	x23, x0
  245968:	add	x22, x22, #0x87
  24596c:	mov	w24, #0xffffffff            	// #-1
  245970:	b	245988 <handle_scsi_default+0x138>
  245974:	mov	x0, x20
  245978:	str	wzr, [x21]
  24597c:	bl	2543b0 <readdir64@plt>
  245980:	mov	x23, x0
  245984:	cbz	x0, 245a14 <handle_scsi_default+0x1c4>
  245988:	mov	x0, x23
  24598c:	ldrb	w8, [x0, #19]!
  245990:	cmp	w8, #0x2e
  245994:	b.eq	245974 <handle_scsi_default+0x124>  // b.none
  245998:	ldrb	w8, [x23, #18]
  24599c:	cmp	w8, #0xa
  2459a0:	b.eq	2459ac <handle_scsi_default+0x15c>  // b.none
  2459a4:	cmp	w8, #0x4
  2459a8:	b.ne	245974 <handle_scsi_default+0x124>  // b.any
  2459ac:	mov	x1, x22
  2459b0:	bl	244fa4 <startswith>
  2459b4:	cbz	x0, 245974 <handle_scsi_default+0x124>
  2459b8:	add	x0, x23, #0x17
  2459bc:	sub	x1, x29, #0x30
  2459c0:	mov	w2, #0xa                   	// #10
  2459c4:	bl	254840 <strtoul@plt>
  2459c8:	ldur	x8, [x29, #-48]
  2459cc:	ldrb	w8, [x8]
  2459d0:	cbnz	w8, 245974 <handle_scsi_default+0x124>
  2459d4:	cmp	w24, w0
  2459d8:	ccmp	w24, w25, #0x4, le
  2459dc:	csel	w24, w0, w24, eq  // eq = none
  2459e0:	b	245974 <handle_scsi_default+0x124>
  2459e4:	mov	x19, xzr
  2459e8:	sub	x0, x29, #0x28
  2459ec:	bl	245c54 <closedirp>
  2459f0:	mov	x0, x19
  2459f4:	mov	sp, x29
  2459f8:	ldp	x20, x19, [sp, #64]
  2459fc:	ldp	x22, x21, [sp, #48]
  245a00:	ldp	x24, x23, [sp, #32]
  245a04:	ldr	x25, [sp, #16]
  245a08:	ldp	x29, x30, [sp], #80
  245a0c:	ret
  245a10:	mov	w24, #0xffffffff            	// #-1
  245a14:	cmn	w24, #0x1
  245a18:	b.eq	245a3c <handle_scsi_default+0x1ec>  // b.none
  245a1c:	ldp	w3, w8, [x29, #-8]
  245a20:	ldp	w5, w4, [x29, #-16]
  245a24:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  245a28:	add	x1, x1, #0x54
  245a2c:	sub	w2, w8, w24
  245a30:	mov	x0, x19
  245a34:	stur	w2, [x29, #-4]
  245a38:	bl	244cd4 <path_prepend>
  245a3c:	ldr	x19, [x29, #24]
  245a40:	b	2459e8 <handle_scsi_default+0x198>
  245a44:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  245a48:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245a4c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  245a50:	add	x1, x1, #0x244
  245a54:	add	x2, x2, #0x171
  245a58:	add	x4, x4, #0x47c
  245a5c:	mov	w0, #0x1                   	// #1
  245a60:	mov	w3, #0x122                 	// #290
  245a64:	bl	253740 <log_assert_failed_realm@plt>
  245a68:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  245a6c:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245a70:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  245a74:	add	x1, x1, #0x18d
  245a78:	add	x2, x2, #0x171
  245a7c:	add	x4, x4, #0x47c
  245a80:	mov	w0, #0x1                   	// #1
  245a84:	mov	w3, #0x123                 	// #291
  245a88:	bl	253740 <log_assert_failed_realm@plt>

0000000000245a8c <sd_device_unrefp>:
  245a8c:	stp	x29, x30, [sp, #-16]!
  245a90:	ldr	x0, [x0]
  245a94:	mov	x29, sp
  245a98:	cbz	x0, 245aa0 <sd_device_unrefp+0x14>
  245a9c:	bl	253950 <sd_device_unref@plt>
  245aa0:	ldp	x29, x30, [sp], #16
  245aa4:	ret

0000000000245aa8 <format_lun_number>:
  245aa8:	stp	x29, x30, [sp, #-32]!
  245aac:	mov	x29, sp
  245ab0:	str	x19, [sp, #16]
  245ab4:	mov	x19, x1
  245ab8:	add	x1, x29, #0x18
  245abc:	bl	253fe0 <sd_device_get_sysnum@plt>
  245ac0:	tbnz	w0, #31, 245b14 <format_lun_number+0x6c>
  245ac4:	ldr	x0, [x29, #24]
  245ac8:	cbz	x0, 245b14 <format_lun_number+0x6c>
  245acc:	mov	w2, #0xa                   	// #10
  245ad0:	mov	x1, xzr
  245ad4:	bl	254840 <strtoul@plt>
  245ad8:	mov	x8, x0
  245adc:	cmp	x0, #0xff
  245ae0:	b.hi	245afc <format_lun_number+0x54>  // b.pmore
  245ae4:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  245ae8:	add	x1, x1, #0x22d
  245aec:	mov	x0, x19
  245af0:	mov	x2, x8
  245af4:	bl	244cd4 <path_prepend>
  245af8:	b	245b14 <format_lun_number+0x6c>
  245afc:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  245b00:	and	x2, x8, #0xffff
  245b04:	ubfx	x3, x8, #16, #16
  245b08:	add	x1, x1, #0xc32
  245b0c:	mov	x0, x19
  245b10:	bl	244cd4 <path_prepend>
  245b14:	ldr	x19, [sp, #16]
  245b18:	ldp	x29, x30, [sp], #32
  245b1c:	ret

0000000000245b20 <handle_scsi_sas_wide_port>:
  245b20:	sub	sp, sp, #0x50
  245b24:	stp	x29, x30, [sp, #48]
  245b28:	stp	x20, x19, [sp, #64]
  245b2c:	add	x29, sp, #0x30
  245b30:	str	xzr, [sp, #24]
  245b34:	str	xzr, [sp]
  245b38:	cbz	x0, 245c04 <handle_scsi_sas_wide_port+0xe4>
  245b3c:	mov	x20, x1
  245b40:	cbz	x1, 245c28 <handle_scsi_sas_wide_port+0x108>
  245b44:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  245b48:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  245b4c:	add	x1, x1, #0x92e
  245b50:	add	x2, x2, #0xe8b
  245b54:	sub	x3, x29, #0x8
  245b58:	mov	x19, x0
  245b5c:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  245b60:	tbnz	w0, #31, 245bdc <handle_scsi_sas_wide_port+0xbc>
  245b64:	ldur	x0, [x29, #-8]
  245b68:	sub	x1, x29, #0x10
  245b6c:	bl	253d60 <sd_device_get_parent@plt>
  245b70:	tbnz	w0, #31, 245bdc <handle_scsi_sas_wide_port+0xbc>
  245b74:	ldur	x0, [x29, #-16]
  245b78:	add	x1, sp, #0x8
  245b7c:	bl	253a40 <sd_device_get_sysname@plt>
  245b80:	tbnz	w0, #31, 245bdc <handle_scsi_sas_wide_port+0xbc>
  245b84:	ldr	x2, [sp, #8]
  245b88:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  245b8c:	add	x1, x1, #0x9ee
  245b90:	add	x0, sp, #0x18
  245b94:	bl	2548c0 <sd_device_new_from_subsystem_sysname@plt>
  245b98:	tbnz	w0, #31, 245bdc <handle_scsi_sas_wide_port+0xbc>
  245b9c:	ldr	x0, [sp, #24]
  245ba0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245ba4:	add	x1, x1, #0x718
  245ba8:	add	x2, sp, #0x10
  245bac:	bl	254070 <sd_device_get_sysattr_value@plt>
  245bb0:	tbnz	w0, #31, 245bdc <handle_scsi_sas_wide_port+0xbc>
  245bb4:	mov	x1, sp
  245bb8:	mov	x0, x19
  245bbc:	bl	245aa8 <format_lun_number>
  245bc0:	ldr	x2, [sp, #16]
  245bc4:	ldr	x3, [sp]
  245bc8:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  245bcc:	add	x1, x1, #0x472
  245bd0:	mov	x0, x20
  245bd4:	bl	244cd4 <path_prepend>
  245bd8:	b	245be0 <handle_scsi_sas_wide_port+0xc0>
  245bdc:	mov	x19, xzr
  245be0:	mov	x0, sp
  245be4:	bl	2448a4 <freep>
  245be8:	add	x0, sp, #0x18
  245bec:	bl	245a8c <sd_device_unrefp>
  245bf0:	mov	x0, x19
  245bf4:	ldp	x20, x19, [sp, #64]
  245bf8:	ldp	x29, x30, [sp, #48]
  245bfc:	add	sp, sp, #0x50
  245c00:	ret
  245c04:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  245c08:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245c0c:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  245c10:	add	x1, x1, #0x244
  245c14:	add	x2, x2, #0x171
  245c18:	add	x4, x4, #0x7e4
  245c1c:	mov	w0, #0x1                   	// #1
  245c20:	mov	w3, #0x84                  	// #132
  245c24:	bl	253740 <log_assert_failed_realm@plt>
  245c28:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  245c2c:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  245c30:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  245c34:	add	x1, x1, #0x18d
  245c38:	add	x2, x2, #0x171
  245c3c:	add	x4, x4, #0x7e4
  245c40:	mov	w0, #0x1                   	// #1
  245c44:	mov	w3, #0x85                  	// #133
  245c48:	bl	253740 <log_assert_failed_realm@plt>

0000000000245c4c <size_multiply_overflow>:
  245c4c:	mov	w0, wzr
  245c50:	ret

0000000000245c54 <closedirp>:
  245c54:	stp	x29, x30, [sp, #-16]!
  245c58:	ldr	x0, [x0]
  245c5c:	mov	x29, sp
  245c60:	cbz	x0, 245c68 <closedirp+0x14>
  245c64:	bl	2543e0 <closedir@plt>
  245c68:	ldp	x29, x30, [sp], #16
  245c6c:	ret

0000000000245c70 <builtin_usb_id>:
  245c70:	stp	x29, x30, [sp, #-80]!
  245c74:	str	x28, [sp, #16]
  245c78:	stp	x24, x23, [sp, #32]
  245c7c:	stp	x22, x21, [sp, #48]
  245c80:	stp	x20, x19, [sp, #64]
  245c84:	mov	x29, sp
  245c88:	sub	sp, sp, #0x8f0
  245c8c:	movi	v0.2d, #0x0
  245c90:	str	xzr, [sp, #408]
  245c94:	stp	q0, q0, [x29, #-32]
  245c98:	stp	q0, q0, [x29, #-64]
  245c9c:	str	q0, [sp, #1952]
  245ca0:	str	q0, [sp, #1936]
  245ca4:	str	q0, [sp, #1920]
  245ca8:	str	q0, [sp, #1904]
  245cac:	str	q0, [sp, #1616]
  245cb0:	str	q0, [sp, #1600]
  245cb4:	str	q0, [sp, #1584]
  245cb8:	str	q0, [sp, #1568]
  245cbc:	str	q0, [sp, #1552]
  245cc0:	str	q0, [sp, #1536]
  245cc4:	str	q0, [sp, #1520]
  245cc8:	str	q0, [sp, #1504]
  245ccc:	str	q0, [sp, #1488]
  245cd0:	str	q0, [sp, #1472]
  245cd4:	str	q0, [sp, #1456]
  245cd8:	str	q0, [sp, #1440]
  245cdc:	str	q0, [sp, #1424]
  245ce0:	str	q0, [sp, #1408]
  245ce4:	str	q0, [sp, #1392]
  245ce8:	str	q0, [sp, #1376]
  245cec:	str	q0, [sp, #1360]
  245cf0:	str	q0, [sp, #1344]
  245cf4:	str	q0, [sp, #1328]
  245cf8:	str	q0, [sp, #1312]
  245cfc:	str	q0, [sp, #1296]
  245d00:	str	q0, [sp, #1280]
  245d04:	str	q0, [sp, #1264]
  245d08:	str	q0, [sp, #1248]
  245d0c:	str	q0, [sp, #1232]
  245d10:	str	q0, [sp, #1216]
  245d14:	str	q0, [sp, #1200]
  245d18:	str	q0, [sp, #1184]
  245d1c:	str	q0, [sp, #1168]
  245d20:	str	q0, [sp, #1152]
  245d24:	str	q0, [sp, #1136]
  245d28:	str	q0, [sp, #1120]
  245d2c:	str	q0, [sp, #1104]
  245d30:	str	q0, [sp, #1088]
  245d34:	str	q0, [sp, #1072]
  245d38:	str	q0, [sp, #1056]
  245d3c:	str	q0, [sp, #1040]
  245d40:	stp	q0, q0, [sp, #1008]
  245d44:	stp	q0, q0, [sp, #976]
  245d48:	stp	q0, q0, [sp, #944]
  245d4c:	stp	q0, q0, [sp, #912]
  245d50:	stp	q0, q0, [sp, #880]
  245d54:	stp	q0, q0, [sp, #848]
  245d58:	stp	q0, q0, [sp, #816]
  245d5c:	stp	q0, q0, [sp, #784]
  245d60:	stp	q0, q0, [sp, #752]
  245d64:	stp	q0, q0, [sp, #720]
  245d68:	stp	q0, q0, [sp, #688]
  245d6c:	stp	q0, q0, [sp, #656]
  245d70:	stp	q0, q0, [sp, #624]
  245d74:	stp	q0, q0, [sp, #592]
  245d78:	stp	q0, q0, [sp, #560]
  245d7c:	stp	q0, q0, [sp, #528]
  245d80:	stp	q0, q0, [sp, #496]
  245d84:	stp	q0, q0, [sp, #464]
  245d88:	stp	q0, q0, [sp, #432]
  245d8c:	str	q0, [sp, #416]
  245d90:	str	xzr, [sp, #400]
  245d94:	cbz	x0, 246990 <builtin_usb_id+0xd20>
  245d98:	add	x1, sp, #0x60
  245d9c:	mov	w20, w3
  245da0:	mov	x19, x0
  245da4:	bl	253d90 <sd_device_get_syspath@plt>
  245da8:	tbnz	w0, #31, 2462bc <builtin_usb_id+0x64c>
  245dac:	add	x1, sp, #0x58
  245db0:	mov	x0, x19
  245db4:	bl	253a40 <sd_device_get_sysname@plt>
  245db8:	tbnz	w0, #31, 2462bc <builtin_usb_id+0x64c>
  245dbc:	add	x1, sp, #0x50
  245dc0:	mov	x0, x19
  245dc4:	bl	253d50 <sd_device_get_devtype@plt>
  245dc8:	tbnz	w0, #31, 245de0 <builtin_usb_id+0x170>
  245dcc:	ldr	x0, [sp, #80]
  245dd0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245dd4:	add	x1, x1, #0x565
  245dd8:	bl	253bc0 <strcmp@plt>
  245ddc:	cbz	w0, 245ef4 <builtin_usb_id+0x284>
  245de0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  245de4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  245de8:	add	x1, x1, #0x6c5
  245dec:	add	x2, x2, #0xade
  245df0:	add	x3, sp, #0x88
  245df4:	mov	x0, x19
  245df8:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  245dfc:	tbnz	w0, #31, 245ea0 <builtin_usb_id+0x230>
  245e00:	ldr	x0, [sp, #136]
  245e04:	add	x1, sp, #0x48
  245e08:	bl	253d90 <sd_device_get_syspath@plt>
  245e0c:	tbnz	w0, #31, 245f50 <builtin_usb_id+0x2e0>
  245e10:	ldr	x0, [sp, #136]
  245e14:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  245e18:	add	x1, x1, #0x8dd
  245e1c:	add	x2, sp, #0x198
  245e20:	bl	254070 <sd_device_get_sysattr_value@plt>
  245e24:	ldr	x0, [sp, #136]
  245e28:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  245e2c:	add	x1, x1, #0xba5
  245e30:	add	x2, sp, #0x190
  245e34:	bl	254070 <sd_device_get_sysattr_value@plt>
  245e38:	ldr	x0, [sp, #136]
  245e3c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245e40:	add	x1, x1, #0x745
  245e44:	add	x2, sp, #0x78
  245e48:	bl	254070 <sd_device_get_sysattr_value@plt>
  245e4c:	adrp	x24, 211000 <worker_hash_op+0x6ad0>
  245e50:	add	x24, x24, #0xb64
  245e54:	tbnz	w0, #31, 246008 <builtin_usb_id+0x398>
  245e58:	ldr	x0, [sp, #120]
  245e5c:	mov	w2, #0x10                  	// #16
  245e60:	mov	x1, xzr
  245e64:	bl	254840 <strtoul@plt>
  245e68:	mov	x22, x0
  245e6c:	cmp	w22, #0x8
  245e70:	b.ne	24605c <builtin_usb_id+0x3ec>  // b.any
  245e74:	ldr	x0, [sp, #136]
  245e78:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  245e7c:	add	x1, x1, #0x643
  245e80:	add	x2, sp, #0x70
  245e84:	bl	254070 <sd_device_get_sysattr_value@plt>
  245e88:	tbnz	w0, #31, 246068 <builtin_usb_id+0x3f8>
  245e8c:	ldr	x1, [sp, #112]
  245e90:	add	x0, sp, #0x1e0
  245e94:	bl	246dac <set_usb_mass_storage_ifsubtype>
  245e98:	mov	w21, w0
  245e9c:	b	24606c <builtin_usb_id+0x3fc>
  245ea0:	mov	w21, w0
  245ea4:	mov	w0, #0x1                   	// #1
  245ea8:	str	xzr, [sp, #1968]
  245eac:	bl	2535b0 <log_get_max_level_realm@plt>
  245eb0:	cmp	w0, #0x7
  245eb4:	b.ge	2468c0 <builtin_usb_id+0xc50>  // b.tcont
  245eb8:	ldr	x6, [sp, #1968]
  245ebc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  245ec0:	add	x8, x8, #0xb64
  245ec4:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  245ec8:	cmp	x6, #0x0
  245ecc:	csel	x5, xzr, x8, eq  // eq = none
  245ed0:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  245ed4:	add	x8, x8, #0x473
  245ed8:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  245edc:	add	x2, x2, #0xae1
  245ee0:	add	x4, x4, #0x8ce
  245ee4:	str	x8, [sp, #8]
  245ee8:	mov	w0, #0x7                   	// #7
  245eec:	mov	w3, #0x114                 	// #276
  245ef0:	b	2462ac <builtin_usb_id+0x63c>
  245ef4:	add	x1, sp, #0x260
  245ef8:	mov	x0, x19
  245efc:	bl	2469b4 <dev_if_packed_info>
  245f00:	str	x19, [sp, #128]
  245f04:	ldr	x0, [sp, #128]
  245f08:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245f0c:	add	x1, x1, #0x570
  245f10:	add	x2, x29, #0x18
  245f14:	bl	254070 <sd_device_get_sysattr_value@plt>
  245f18:	tbnz	w0, #31, 245fac <builtin_usb_id+0x33c>
  245f1c:	ldr	x0, [sp, #128]
  245f20:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  245f24:	add	x1, x1, #0xbe6
  245f28:	add	x2, sp, #0x668
  245f2c:	bl	254070 <sd_device_get_sysattr_value@plt>
  245f30:	tbnz	w0, #31, 246254 <builtin_usb_id+0x5e4>
  245f34:	ldurb	w8, [x29, #-64]
  245f38:	cbz	w8, 246330 <builtin_usb_id+0x6c0>
  245f3c:	ldrb	w8, [sp, #1904]
  245f40:	cbz	w8, 246384 <builtin_usb_id+0x714>
  245f44:	ldrb	w8, [sp, #544]
  245f48:	cbnz	w8, 24640c <builtin_usb_id+0x79c>
  245f4c:	b	2463d8 <builtin_usb_id+0x768>
  245f50:	ldr	x19, [sp, #136]
  245f54:	mov	w21, w0
  245f58:	str	xzr, [sp, #1968]
  245f5c:	cbz	x19, 245f70 <builtin_usb_id+0x300>
  245f60:	mov	w0, #0x1                   	// #1
  245f64:	bl	2535b0 <log_get_max_level_realm@plt>
  245f68:	cmp	w0, #0x7
  245f6c:	b.ge	2468e0 <builtin_usb_id+0xc70>  // b.tcont
  245f70:	ldr	x6, [sp, #1968]
  245f74:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  245f78:	add	x8, x8, #0xb64
  245f7c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  245f80:	cmp	x6, #0x0
  245f84:	csel	x5, xzr, x8, eq  // eq = none
  245f88:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  245f8c:	add	x8, x8, #0x5
  245f90:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  245f94:	add	x2, x2, #0xae1
  245f98:	add	x4, x4, #0x8ce
  245f9c:	str	x8, [sp, #8]
  245fa0:	mov	w0, #0x7                   	// #7
  245fa4:	mov	w3, #0x118                 	// #280
  245fa8:	b	2462ac <builtin_usb_id+0x63c>
  245fac:	ldr	x19, [sp, #128]
  245fb0:	mov	w21, w0
  245fb4:	str	xzr, [sp, #144]
  245fb8:	cbz	x19, 245fcc <builtin_usb_id+0x35c>
  245fbc:	mov	w0, #0x1                   	// #1
  245fc0:	bl	2535b0 <log_get_max_level_realm@plt>
  245fc4:	cmp	w0, #0x7
  245fc8:	b.ge	2468f0 <builtin_usb_id+0xc80>  // b.tcont
  245fcc:	ldr	x6, [sp, #144]
  245fd0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  245fd4:	add	x8, x8, #0xb64
  245fd8:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  245fdc:	cmp	x6, #0x0
  245fe0:	csel	x5, xzr, x8, eq  // eq = none
  245fe4:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  245fe8:	add	x8, x8, #0xe52
  245fec:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  245ff0:	add	x2, x2, #0xae1
  245ff4:	add	x4, x4, #0x8ce
  245ff8:	str	x8, [sp, #8]
  245ffc:	mov	w0, #0x7                   	// #7
  246000:	mov	w3, #0x171                 	// #369
  246004:	b	2462ac <builtin_usb_id+0x63c>
  246008:	ldr	x19, [sp, #136]
  24600c:	mov	w21, w0
  246010:	str	xzr, [sp, #1968]
  246014:	cbz	x19, 246028 <builtin_usb_id+0x3b8>
  246018:	mov	w0, #0x1                   	// #1
  24601c:	bl	2535b0 <log_get_max_level_realm@plt>
  246020:	cmp	w0, #0x7
  246024:	b.ge	246900 <builtin_usb_id+0xc90>  // b.tcont
  246028:	ldr	x6, [sp, #1968]
  24602c:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  246030:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246034:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  246038:	cmp	x6, #0x0
  24603c:	csel	x5, xzr, x24, eq  // eq = none
  246040:	add	x8, x8, #0x65
  246044:	add	x2, x2, #0xae1
  246048:	add	x4, x4, #0x8ce
  24604c:	mov	w0, #0x7                   	// #7
  246050:	mov	w3, #0x11e                 	// #286
  246054:	str	x8, [sp, #8]
  246058:	b	2462ac <builtin_usb_id+0x63c>
  24605c:	add	x0, sp, #0x1e0
  246060:	mov	w1, w22
  246064:	bl	246e28 <set_usb_iftype>
  246068:	mov	w21, wzr
  24606c:	ldr	x23, [sp, #136]
  246070:	str	xzr, [sp, #1968]
  246074:	cbz	x23, 246088 <builtin_usb_id+0x418>
  246078:	mov	w0, #0x1                   	// #1
  24607c:	bl	2535b0 <log_get_max_level_realm@plt>
  246080:	cmp	w0, #0x7
  246084:	b.ge	2468d0 <builtin_usb_id+0xc60>  // b.tcont
  246088:	ldr	x6, [sp, #1968]
  24608c:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  246090:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246094:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  246098:	cmp	x6, #0x0
  24609c:	csel	x5, xzr, x24, eq  // eq = none
  2460a0:	add	x8, x8, #0x304
  2460a4:	add	x2, x2, #0xae1
  2460a8:	add	x4, x4, #0x8ce
  2460ac:	mov	w0, #0x7                   	// #7
  2460b0:	mov	w3, #0x128                 	// #296
  2460b4:	mov	w1, wzr
  2460b8:	mov	x7, xzr
  2460bc:	str	w21, [sp, #24]
  2460c0:	str	w22, [sp, #16]
  2460c4:	stp	xzr, x8, [sp]
  2460c8:	bl	2539f0 <log_object_internal@plt>
  2460cc:	ldr	x0, [sp, #136]
  2460d0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2460d4:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  2460d8:	add	x1, x1, #0x6c5
  2460dc:	add	x2, x2, #0x565
  2460e0:	add	x3, sp, #0x80
  2460e4:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  2460e8:	tbnz	w0, #31, 2462d8 <builtin_usb_id+0x668>
  2460ec:	ldr	x0, [sp, #128]
  2460f0:	add	x1, sp, #0x260
  2460f4:	bl	2469b4 <dev_if_packed_info>
  2460f8:	orr	w8, w21, #0x4
  2460fc:	cmp	w8, #0x6
  246100:	b.ne	245f04 <builtin_usb_id+0x294>  // b.any
  246104:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  246108:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  24610c:	add	x1, x1, #0x92e
  246110:	add	x2, x2, #0x703
  246114:	add	x3, sp, #0x90
  246118:	mov	x0, x19
  24611c:	bl	254820 <sd_device_get_parent_with_subsystem_devtype@plt>
  246120:	tbnz	w0, #31, 246698 <builtin_usb_id+0xa28>
  246124:	ldr	x0, [sp, #144]
  246128:	add	x1, x29, #0x18
  24612c:	bl	253a40 <sd_device_get_sysname@plt>
  246130:	tbnz	w0, #31, 245f04 <builtin_usb_id+0x294>
  246134:	ldr	x0, [x29, #24]
  246138:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24613c:	add	x1, x1, #0xeb5
  246140:	add	x2, sp, #0x34
  246144:	add	x3, sp, #0x30
  246148:	add	x4, sp, #0x2c
  24614c:	add	x5, sp, #0x28
  246150:	bl	254870 <__isoc99_sscanf@plt>
  246154:	cmp	w0, #0x4
  246158:	b.ne	2466ec <builtin_usb_id+0xa7c>  // b.any
  24615c:	ldr	x0, [sp, #144]
  246160:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  246164:	add	x1, x1, #0x80f
  246168:	add	x2, sp, #0x68
  24616c:	bl	254070 <sd_device_get_sysattr_value@plt>
  246170:	tbnz	w0, #31, 246770 <builtin_usb_id+0xb00>
  246174:	ldr	x0, [sp, #104]
  246178:	add	x1, sp, #0x7b0
  24617c:	mov	w2, #0x100                 	// #256
  246180:	bl	254920 <udev_util_encode_string@plt>
  246184:	ldr	x0, [sp, #104]
  246188:	sub	x1, x29, #0x40
  24618c:	mov	w2, #0x3f                  	// #63
  246190:	bl	253fc0 <util_replace_whitespace@plt>
  246194:	sub	x0, x29, #0x40
  246198:	mov	x1, xzr
  24619c:	bl	254090 <util_replace_chars@plt>
  2461a0:	ldr	x0, [sp, #144]
  2461a4:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  2461a8:	add	x1, x1, #0x1f
  2461ac:	add	x2, sp, #0x668
  2461b0:	bl	254070 <sd_device_get_sysattr_value@plt>
  2461b4:	tbnz	w0, #31, 2467c4 <builtin_usb_id+0xb54>
  2461b8:	ldr	x0, [sp, #1640]
  2461bc:	add	x1, sp, #0x670
  2461c0:	mov	w2, #0x100                 	// #256
  2461c4:	bl	254920 <udev_util_encode_string@plt>
  2461c8:	ldr	x0, [sp, #1640]
  2461cc:	add	x1, sp, #0x770
  2461d0:	mov	w2, #0x3f                  	// #63
  2461d4:	bl	253fc0 <util_replace_whitespace@plt>
  2461d8:	add	x0, sp, #0x770
  2461dc:	mov	x1, xzr
  2461e0:	bl	254090 <util_replace_chars@plt>
  2461e4:	ldr	x0, [sp, #144]
  2461e8:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2461ec:	add	x1, x1, #0x132
  2461f0:	add	x2, sp, #0x40
  2461f4:	bl	254070 <sd_device_get_sysattr_value@plt>
  2461f8:	tbnz	w0, #31, 246818 <builtin_usb_id+0xba8>
  2461fc:	ldr	x1, [sp, #64]
  246200:	add	x0, sp, #0x1e0
  246204:	bl	246e68 <set_scsi_type>
  246208:	ldr	x0, [sp, #144]
  24620c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  246210:	add	x1, x1, #0xe48
  246214:	add	x2, sp, #0x38
  246218:	bl	254070 <sd_device_get_sysattr_value@plt>
  24621c:	tbnz	w0, #31, 24686c <builtin_usb_id+0xbfc>
  246220:	ldr	x0, [sp, #56]
  246224:	add	x1, sp, #0x220
  246228:	mov	w2, #0x3f                  	// #63
  24622c:	bl	253fc0 <util_replace_whitespace@plt>
  246230:	add	x0, sp, #0x220
  246234:	mov	x1, xzr
  246238:	bl	254090 <util_replace_chars@plt>
  24623c:	ldp	w3, w2, [sp, #40]
  246240:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  246244:	add	x1, x1, #0xe4c
  246248:	add	x0, sp, #0x1a0
  24624c:	bl	254930 <sprintf@plt>
  246250:	b	245f04 <builtin_usb_id+0x294>
  246254:	ldr	x19, [sp, #128]
  246258:	mov	w21, w0
  24625c:	str	xzr, [sp, #144]
  246260:	cbz	x19, 246274 <builtin_usb_id+0x604>
  246264:	mov	w0, #0x1                   	// #1
  246268:	bl	2535b0 <log_get_max_level_realm@plt>
  24626c:	cmp	w0, #0x7
  246270:	b.ge	246910 <builtin_usb_id+0xca0>  // b.tcont
  246274:	ldr	x6, [sp, #144]
  246278:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24627c:	add	x8, x8, #0xb64
  246280:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246284:	cmp	x6, #0x0
  246288:	csel	x5, xzr, x8, eq  // eq = none
  24628c:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  246290:	add	x8, x8, #0x91
  246294:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  246298:	add	x2, x2, #0xae1
  24629c:	add	x4, x4, #0x8ce
  2462a0:	str	x8, [sp, #8]
  2462a4:	mov	w0, #0x7                   	// #7
  2462a8:	mov	w3, #0x175                 	// #373
  2462ac:	mov	w1, w21
  2462b0:	str	xzr, [sp]
  2462b4:	mov	x7, xzr
  2462b8:	bl	2539f0 <log_object_internal@plt>
  2462bc:	add	sp, sp, #0x8f0
  2462c0:	ldp	x20, x19, [sp, #64]
  2462c4:	ldp	x22, x21, [sp, #48]
  2462c8:	ldp	x24, x23, [sp, #32]
  2462cc:	ldr	x28, [sp, #16]
  2462d0:	ldp	x29, x30, [sp], #80
  2462d4:	ret
  2462d8:	ldr	x19, [sp, #136]
  2462dc:	mov	w22, w0
  2462e0:	str	xzr, [sp, #1968]
  2462e4:	cbz	x19, 2462f8 <builtin_usb_id+0x688>
  2462e8:	mov	w0, #0x1                   	// #1
  2462ec:	bl	2535b0 <log_get_max_level_realm@plt>
  2462f0:	cmp	w0, #0x7
  2462f4:	b.ge	246920 <builtin_usb_id+0xcb0>  // b.tcont
  2462f8:	ldr	x6, [sp, #1968]
  2462fc:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  246300:	add	x8, x8, #0x496
  246304:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246308:	cmp	x6, #0x0
  24630c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  246310:	csel	x5, xzr, x24, eq  // eq = none
  246314:	add	x2, x2, #0xae1
  246318:	add	x4, x4, #0x8ce
  24631c:	stp	xzr, x8, [sp]
  246320:	mov	w0, #0x7                   	// #7
  246324:	mov	w3, #0x12d                 	// #301
  246328:	mov	w1, w22
  24632c:	b	2462b4 <builtin_usb_id+0x644>
  246330:	ldr	x0, [sp, #128]
  246334:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  246338:	add	x1, x1, #0x25
  24633c:	add	x2, sp, #0x90
  246340:	bl	254070 <sd_device_get_sysattr_value@plt>
  246344:	tbz	w0, #31, 246350 <builtin_usb_id+0x6e0>
  246348:	ldr	x8, [x29, #24]
  24634c:	str	x8, [sp, #144]
  246350:	ldr	x0, [sp, #144]
  246354:	add	x1, sp, #0x7b0
  246358:	mov	w2, #0x100                 	// #256
  24635c:	bl	254920 <udev_util_encode_string@plt>
  246360:	ldr	x0, [sp, #144]
  246364:	sub	x1, x29, #0x40
  246368:	mov	w2, #0x3f                  	// #63
  24636c:	bl	253fc0 <util_replace_whitespace@plt>
  246370:	sub	x0, x29, #0x40
  246374:	mov	x1, xzr
  246378:	bl	254090 <util_replace_chars@plt>
  24637c:	ldrb	w8, [sp, #1904]
  246380:	cbnz	w8, 245f44 <builtin_usb_id+0x2d4>
  246384:	ldr	x0, [sp, #128]
  246388:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24638c:	add	x1, x1, #0xb95
  246390:	add	x2, sp, #0x90
  246394:	bl	254070 <sd_device_get_sysattr_value@plt>
  246398:	tbz	w0, #31, 2463a4 <builtin_usb_id+0x734>
  24639c:	ldr	x8, [sp, #1640]
  2463a0:	str	x8, [sp, #144]
  2463a4:	ldr	x0, [sp, #144]
  2463a8:	add	x1, sp, #0x670
  2463ac:	mov	w2, #0x100                 	// #256
  2463b0:	bl	254920 <udev_util_encode_string@plt>
  2463b4:	ldr	x0, [sp, #144]
  2463b8:	add	x1, sp, #0x770
  2463bc:	mov	w2, #0x3f                  	// #63
  2463c0:	bl	253fc0 <util_replace_whitespace@plt>
  2463c4:	add	x0, sp, #0x770
  2463c8:	mov	x1, xzr
  2463cc:	bl	254090 <util_replace_chars@plt>
  2463d0:	ldrb	w8, [sp, #544]
  2463d4:	cbnz	w8, 24640c <builtin_usb_id+0x79c>
  2463d8:	ldr	x0, [sp, #128]
  2463dc:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  2463e0:	add	x1, x1, #0xb00
  2463e4:	add	x2, sp, #0x90
  2463e8:	bl	254070 <sd_device_get_sysattr_value@plt>
  2463ec:	tbnz	w0, #31, 24640c <builtin_usb_id+0x79c>
  2463f0:	ldr	x0, [sp, #144]
  2463f4:	add	x1, sp, #0x220
  2463f8:	mov	w2, #0x3f                  	// #63
  2463fc:	bl	253fc0 <util_replace_whitespace@plt>
  246400:	add	x0, sp, #0x220
  246404:	mov	x1, xzr
  246408:	bl	254090 <util_replace_chars@plt>
  24640c:	ldrb	w8, [sp, #1120]
  246410:	cbz	w8, 246648 <builtin_usb_id+0x9d8>
  246414:	adrp	x3, 20c000 <worker_hash_op+0x1ad0>
  246418:	add	x8, sp, #0x90
  24641c:	add	x3, x3, #0x31c
  246420:	add	x0, sp, #0x68
  246424:	sub	x2, x29, #0x40
  246428:	add	x4, sp, #0x770
  24642c:	mov	w1, #0x100                 	// #256
  246430:	mov	x5, xzr
  246434:	str	x8, [sp, #104]
  246438:	bl	254000 <strpcpyl@plt>
  24643c:	mov	x21, x0
  246440:	add	x0, sp, #0x460
  246444:	bl	246ed8 <isempty>
  246448:	tbnz	w0, #0, 24646c <builtin_usb_id+0x7fc>
  24644c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  246450:	add	x2, x2, #0x31c
  246454:	add	x0, sp, #0x68
  246458:	add	x3, sp, #0x460
  24645c:	mov	x1, x21
  246460:	mov	x4, xzr
  246464:	bl	254000 <strpcpyl@plt>
  246468:	mov	x21, x0
  24646c:	add	x0, sp, #0x1a0
  246470:	bl	246ed8 <isempty>
  246474:	tbnz	w0, #0, 246494 <builtin_usb_id+0x824>
  246478:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  24647c:	add	x2, x2, #0x81f
  246480:	add	x0, sp, #0x68
  246484:	add	x3, sp, #0x1a0
  246488:	mov	x1, x21
  24648c:	mov	x4, xzr
  246490:	bl	254000 <strpcpyl@plt>
  246494:	and	w21, w20, #0x1
  246498:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  24649c:	add	x2, x2, #0xeeb
  2464a0:	sub	x3, x29, #0x40
  2464a4:	mov	x0, x19
  2464a8:	mov	w1, w21
  2464ac:	bl	23f344 <udev_builtin_add_property>
  2464b0:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  2464b4:	add	x2, x2, #0x8f4
  2464b8:	add	x3, sp, #0x7b0
  2464bc:	mov	x0, x19
  2464c0:	mov	w1, w21
  2464c4:	bl	23f344 <udev_builtin_add_property>
  2464c8:	ldr	x3, [x29, #24]
  2464cc:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  2464d0:	add	x2, x2, #0xb7
  2464d4:	mov	x0, x19
  2464d8:	mov	w1, w21
  2464dc:	bl	23f344 <udev_builtin_add_property>
  2464e0:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  2464e4:	add	x2, x2, #0xc4
  2464e8:	add	x3, sp, #0x770
  2464ec:	mov	x0, x19
  2464f0:	mov	w1, w21
  2464f4:	bl	23f344 <udev_builtin_add_property>
  2464f8:	adrp	x2, 213000 <worker_hash_op+0x8ad0>
  2464fc:	add	x2, x2, #0x63c
  246500:	add	x3, sp, #0x670
  246504:	mov	x0, x19
  246508:	mov	w1, w21
  24650c:	bl	23f344 <udev_builtin_add_property>
  246510:	ldr	x3, [sp, #1640]
  246514:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  246518:	add	x2, x2, #0xe9a
  24651c:	mov	x0, x19
  246520:	mov	w1, w21
  246524:	bl	23f344 <udev_builtin_add_property>
  246528:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24652c:	add	x2, x2, #0x3f4
  246530:	add	x3, sp, #0x220
  246534:	mov	x0, x19
  246538:	mov	w1, w21
  24653c:	bl	23f344 <udev_builtin_add_property>
  246540:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  246544:	add	x2, x2, #0xb9d
  246548:	add	x3, sp, #0x90
  24654c:	mov	x0, x19
  246550:	mov	w1, w21
  246554:	bl	23f344 <udev_builtin_add_property>
  246558:	add	x0, sp, #0x460
  24655c:	bl	246ed8 <isempty>
  246560:	tbnz	w0, #0, 24657c <builtin_usb_id+0x90c>
  246564:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  246568:	add	x2, x2, #0xba7
  24656c:	add	x3, sp, #0x460
  246570:	mov	x0, x19
  246574:	mov	w1, w21
  246578:	bl	23f344 <udev_builtin_add_property>
  24657c:	add	x0, sp, #0x1e0
  246580:	bl	246ed8 <isempty>
  246584:	tbnz	w0, #0, 2465a0 <builtin_usb_id+0x930>
  246588:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24658c:	and	w1, w20, #0x1
  246590:	add	x2, x2, #0xbb7
  246594:	add	x3, sp, #0x1e0
  246598:	mov	x0, x19
  24659c:	bl	23f344 <udev_builtin_add_property>
  2465a0:	add	x0, sp, #0x1a0
  2465a4:	bl	246ed8 <isempty>
  2465a8:	tbnz	w0, #0, 2465c4 <builtin_usb_id+0x954>
  2465ac:	adrp	x2, 20b000 <worker_hash_op+0xad0>
  2465b0:	and	w1, w20, #0x1
  2465b4:	add	x2, x2, #0xba1
  2465b8:	add	x3, sp, #0x1a0
  2465bc:	mov	x0, x19
  2465c0:	bl	23f344 <udev_builtin_add_property>
  2465c4:	and	w21, w20, #0x1
  2465c8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2465cc:	adrp	x3, 217000 <worker_hash_op+0xcad0>
  2465d0:	add	x2, x2, #0xa1a
  2465d4:	add	x3, x3, #0x6c5
  2465d8:	mov	x0, x19
  2465dc:	mov	w1, w21
  2465e0:	bl	23f344 <udev_builtin_add_property>
  2465e4:	add	x0, sp, #0x260
  2465e8:	bl	246ed8 <isempty>
  2465ec:	tbnz	w0, #0, 246608 <builtin_usb_id+0x998>
  2465f0:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  2465f4:	add	x2, x2, #0xea6
  2465f8:	add	x3, sp, #0x260
  2465fc:	mov	x0, x19
  246600:	mov	w1, w21
  246604:	bl	23f344 <udev_builtin_add_property>
  246608:	ldr	x3, [sp, #408]
  24660c:	cbz	x3, 246624 <builtin_usb_id+0x9b4>
  246610:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  246614:	and	w1, w20, #0x1
  246618:	add	x2, x2, #0x8ee
  24661c:	mov	x0, x19
  246620:	bl	23f344 <udev_builtin_add_property>
  246624:	ldr	x3, [sp, #400]
  246628:	cbz	x3, 246640 <builtin_usb_id+0x9d0>
  24662c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  246630:	and	w1, w20, #0x1
  246634:	add	x2, x2, #0x943
  246638:	mov	x0, x19
  24663c:	bl	23f344 <udev_builtin_add_property>
  246640:	mov	w0, wzr
  246644:	b	2462bc <builtin_usb_id+0x64c>
  246648:	ldr	x0, [sp, #128]
  24664c:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  246650:	add	x1, x1, #0xc7a
  246654:	add	x2, sp, #0x90
  246658:	bl	254070 <sd_device_get_sysattr_value@plt>
  24665c:	tbnz	w0, #31, 246414 <builtin_usb_id+0x7a4>
  246660:	ldr	x8, [sp, #144]
  246664:	ldrb	w9, [x8]
  246668:	cbz	w9, 24674c <builtin_usb_id+0xadc>
  24666c:	add	x8, x8, #0x1
  246670:	and	w10, w9, #0xff
  246674:	cmp	w10, #0x2c
  246678:	b.eq	246748 <builtin_usb_id+0xad8>  // b.none
  24667c:	cmp	w10, #0x20
  246680:	b.cc	246748 <builtin_usb_id+0xad8>  // b.lo, b.ul, b.last
  246684:	sxtb	w9, w9
  246688:	tbnz	w9, #31, 246748 <builtin_usb_id+0xad8>
  24668c:	ldrb	w9, [x8], #1
  246690:	cbnz	w9, 246670 <builtin_usb_id+0xa00>
  246694:	b	24674c <builtin_usb_id+0xadc>
  246698:	mov	w21, w0
  24669c:	mov	w0, #0x1                   	// #1
  2466a0:	str	xzr, [sp, #1968]
  2466a4:	bl	2535b0 <log_get_max_level_realm@plt>
  2466a8:	cmp	w0, #0x7
  2466ac:	b.ge	246930 <builtin_usb_id+0xcc0>  // b.tcont
  2466b0:	ldr	x6, [sp, #1968]
  2466b4:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  2466b8:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2466bc:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2466c0:	cmp	x6, #0x0
  2466c4:	csel	x5, xzr, x24, eq  // eq = none
  2466c8:	add	x8, x8, #0x940
  2466cc:	add	x2, x2, #0xae1
  2466d0:	add	x4, x4, #0x8ce
  2466d4:	mov	w0, #0x7                   	// #7
  2466d8:	mov	w3, #0x13b                 	// #315
  2466dc:	str	x8, [sp, #8]
  2466e0:	mov	w1, w21
  2466e4:	str	xzr, [sp]
  2466e8:	b	24673c <builtin_usb_id+0xacc>
  2466ec:	ldr	x21, [sp, #144]
  2466f0:	str	xzr, [sp, #1968]
  2466f4:	cbz	x21, 246708 <builtin_usb_id+0xa98>
  2466f8:	mov	w0, #0x1                   	// #1
  2466fc:	bl	2535b0 <log_get_max_level_realm@plt>
  246700:	cmp	w0, #0x7
  246704:	b.ge	246940 <builtin_usb_id+0xcd0>  // b.tcont
  246708:	ldr	x6, [sp, #1968]
  24670c:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  246710:	add	x8, x8, #0xe86
  246714:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246718:	cmp	x6, #0x0
  24671c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  246720:	csel	x5, xzr, x24, eq  // eq = none
  246724:	add	x2, x2, #0xae1
  246728:	add	x4, x4, #0x8ce
  24672c:	stp	xzr, x8, [sp]
  246730:	mov	w0, #0x7                   	// #7
  246734:	mov	w3, #0x141                 	// #321
  246738:	mov	w1, wzr
  24673c:	mov	x7, xzr
  246740:	bl	2539f0 <log_object_internal@plt>
  246744:	b	245f04 <builtin_usb_id+0x294>
  246748:	str	xzr, [sp, #144]
  24674c:	ldr	x0, [sp, #144]
  246750:	cbz	x0, 246414 <builtin_usb_id+0x7a4>
  246754:	add	x1, sp, #0x460
  246758:	mov	w2, #0x1ff                 	// #511
  24675c:	bl	253fc0 <util_replace_whitespace@plt>
  246760:	add	x0, sp, #0x460
  246764:	mov	x1, xzr
  246768:	bl	254090 <util_replace_chars@plt>
  24676c:	b	246414 <builtin_usb_id+0x7a4>
  246770:	ldr	x22, [sp, #144]
  246774:	mov	w21, w0
  246778:	str	xzr, [sp, #1968]
  24677c:	cbz	x22, 246790 <builtin_usb_id+0xb20>
  246780:	mov	w0, #0x1                   	// #1
  246784:	bl	2535b0 <log_get_max_level_realm@plt>
  246788:	cmp	w0, #0x7
  24678c:	b.ge	246950 <builtin_usb_id+0xce0>  // b.tcont
  246790:	ldr	x6, [sp, #1968]
  246794:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  246798:	add	x8, x8, #0xc52
  24679c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2467a0:	cmp	x6, #0x0
  2467a4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2467a8:	csel	x5, xzr, x24, eq  // eq = none
  2467ac:	add	x2, x2, #0xae1
  2467b0:	add	x4, x4, #0x8ce
  2467b4:	str	x8, [sp, #8]
  2467b8:	mov	w0, #0x7                   	// #7
  2467bc:	mov	w3, #0x148                 	// #328
  2467c0:	b	2466e0 <builtin_usb_id+0xa70>
  2467c4:	ldr	x22, [sp, #144]
  2467c8:	mov	w21, w0
  2467cc:	str	xzr, [sp, #1648]
  2467d0:	cbz	x22, 2467e4 <builtin_usb_id+0xb74>
  2467d4:	mov	w0, #0x1                   	// #1
  2467d8:	bl	2535b0 <log_get_max_level_realm@plt>
  2467dc:	cmp	w0, #0x7
  2467e0:	b.ge	246960 <builtin_usb_id+0xcf0>  // b.tcont
  2467e4:	ldr	x6, [sp, #1648]
  2467e8:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2467ec:	add	x8, x8, #0x615
  2467f0:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  2467f4:	cmp	x6, #0x0
  2467f8:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2467fc:	csel	x5, xzr, x24, eq  // eq = none
  246800:	add	x2, x2, #0xae1
  246804:	add	x4, x4, #0x8ce
  246808:	str	x8, [sp, #8]
  24680c:	mov	w0, #0x7                   	// #7
  246810:	mov	w3, #0x151                 	// #337
  246814:	b	2466e0 <builtin_usb_id+0xa70>
  246818:	ldr	x22, [sp, #144]
  24681c:	mov	w21, w0
  246820:	str	xzr, [sp, #56]
  246824:	cbz	x22, 246838 <builtin_usb_id+0xbc8>
  246828:	mov	w0, #0x1                   	// #1
  24682c:	bl	2535b0 <log_get_max_level_realm@plt>
  246830:	cmp	w0, #0x7
  246834:	b.ge	246970 <builtin_usb_id+0xd00>  // b.tcont
  246838:	ldr	x6, [sp, #56]
  24683c:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  246840:	add	x8, x8, #0x1c3
  246844:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246848:	cmp	x6, #0x0
  24684c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  246850:	csel	x5, xzr, x24, eq  // eq = none
  246854:	add	x2, x2, #0xae1
  246858:	add	x4, x4, #0x8ce
  24685c:	str	x8, [sp, #8]
  246860:	mov	w0, #0x7                   	// #7
  246864:	mov	w3, #0x15a                 	// #346
  246868:	b	2466e0 <builtin_usb_id+0xa70>
  24686c:	ldr	x22, [sp, #144]
  246870:	mov	w21, w0
  246874:	str	xzr, [sp, #32]
  246878:	cbz	x22, 24688c <builtin_usb_id+0xc1c>
  24687c:	mov	w0, #0x1                   	// #1
  246880:	bl	2535b0 <log_get_max_level_realm@plt>
  246884:	cmp	w0, #0x7
  246888:	b.ge	246980 <builtin_usb_id+0xd10>  // b.tcont
  24688c:	ldr	x6, [sp, #32]
  246890:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  246894:	add	x8, x8, #0xec1
  246898:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  24689c:	cmp	x6, #0x0
  2468a0:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2468a4:	csel	x5, xzr, x24, eq  // eq = none
  2468a8:	add	x2, x2, #0xae1
  2468ac:	add	x4, x4, #0x8ce
  2468b0:	str	x8, [sp, #8]
  2468b4:	mov	w0, #0x7                   	// #7
  2468b8:	mov	w3, #0x161                 	// #353
  2468bc:	b	2466e0 <builtin_usb_id+0xa70>
  2468c0:	add	x1, sp, #0x7b0
  2468c4:	mov	x0, x19
  2468c8:	bl	253a40 <sd_device_get_sysname@plt>
  2468cc:	b	245eb8 <builtin_usb_id+0x248>
  2468d0:	add	x1, sp, #0x7b0
  2468d4:	mov	x0, x23
  2468d8:	bl	253a40 <sd_device_get_sysname@plt>
  2468dc:	b	246088 <builtin_usb_id+0x418>
  2468e0:	add	x1, sp, #0x7b0
  2468e4:	mov	x0, x19
  2468e8:	bl	253a40 <sd_device_get_sysname@plt>
  2468ec:	b	245f70 <builtin_usb_id+0x300>
  2468f0:	add	x1, sp, #0x90
  2468f4:	mov	x0, x19
  2468f8:	bl	253a40 <sd_device_get_sysname@plt>
  2468fc:	b	245fcc <builtin_usb_id+0x35c>
  246900:	add	x1, sp, #0x7b0
  246904:	mov	x0, x19
  246908:	bl	253a40 <sd_device_get_sysname@plt>
  24690c:	b	246028 <builtin_usb_id+0x3b8>
  246910:	add	x1, sp, #0x90
  246914:	mov	x0, x19
  246918:	bl	253a40 <sd_device_get_sysname@plt>
  24691c:	b	246274 <builtin_usb_id+0x604>
  246920:	add	x1, sp, #0x7b0
  246924:	mov	x0, x19
  246928:	bl	253a40 <sd_device_get_sysname@plt>
  24692c:	b	2462f8 <builtin_usb_id+0x688>
  246930:	add	x1, sp, #0x7b0
  246934:	mov	x0, x19
  246938:	bl	253a40 <sd_device_get_sysname@plt>
  24693c:	b	2466b0 <builtin_usb_id+0xa40>
  246940:	add	x1, sp, #0x7b0
  246944:	mov	x0, x21
  246948:	bl	253a40 <sd_device_get_sysname@plt>
  24694c:	b	246708 <builtin_usb_id+0xa98>
  246950:	add	x1, sp, #0x7b0
  246954:	mov	x0, x22
  246958:	bl	253a40 <sd_device_get_sysname@plt>
  24695c:	b	246790 <builtin_usb_id+0xb20>
  246960:	add	x1, sp, #0x670
  246964:	mov	x0, x22
  246968:	bl	253a40 <sd_device_get_sysname@plt>
  24696c:	b	2467e4 <builtin_usb_id+0xb74>
  246970:	add	x1, sp, #0x38
  246974:	mov	x0, x22
  246978:	bl	253a40 <sd_device_get_sysname@plt>
  24697c:	b	246838 <builtin_usb_id+0xbc8>
  246980:	add	x1, sp, #0x20
  246984:	mov	x0, x22
  246988:	bl	253a40 <sd_device_get_sysname@plt>
  24698c:	b	24688c <builtin_usb_id+0xc1c>
  246990:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  246994:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246998:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24699c:	add	x1, x1, #0x9e6
  2469a0:	add	x2, x2, #0xae1
  2469a4:	add	x4, x4, #0x2cf
  2469a8:	mov	w0, #0x1                   	// #1
  2469ac:	mov	w3, #0x100                 	// #256
  2469b0:	bl	253740 <log_assert_failed_realm@plt>

00000000002469b4 <dev_if_packed_info>:
  2469b4:	stp	x29, x30, [sp, #-96]!
  2469b8:	stp	x28, x27, [sp, #16]
  2469bc:	stp	x26, x25, [sp, #32]
  2469c0:	stp	x24, x23, [sp, #48]
  2469c4:	stp	x22, x21, [sp, #64]
  2469c8:	stp	x20, x19, [sp, #80]
  2469cc:	mov	x29, sp
  2469d0:	sub	sp, sp, #0x10, lsl #12
  2469d4:	sub	sp, sp, #0x30
  2469d8:	mov	x19, sp
  2469dc:	mov	x21, x1
  2469e0:	sub	x23, x29, #0xc
  2469e4:	mov	w8, #0xffffffff            	// #-1
  2469e8:	add	x1, x19, #0x8
  2469ec:	mov	x20, x0
  2469f0:	str	w8, [x23]
  2469f4:	bl	253d90 <sd_device_get_syspath@plt>
  2469f8:	tbnz	w0, #31, 246d10 <dev_if_packed_info+0x35c>
  2469fc:	ldr	x8, [x19, #8]
  246a00:	adrp	x9, 20d000 <worker_hash_op+0x2ad0>
  246a04:	mov	x24, xzr
  246a08:	mov	x22, xzr
  246a0c:	add	x9, x9, #0x821
  246a10:	add	x25, x19, #0x10
  246a14:	stp	x8, x9, [x19, #16]
  246a18:	ldr	x0, [x25, x24]
  246a1c:	cbz	x0, 246a34 <dev_if_packed_info+0x80>
  246a20:	bl	2539a0 <strlen@plt>
  246a24:	add	x24, x24, #0x8
  246a28:	cmp	x24, #0x10
  246a2c:	add	x22, x0, x22
  246a30:	b.ne	246a18 <dev_if_packed_info+0x64>  // b.any
  246a34:	add	x22, x22, #0x1
  246a38:	mov	x0, x22
  246a3c:	bl	246f0c <size_multiply_overflow>
  246a40:	tbnz	w0, #0, 246d58 <dev_if_packed_info+0x3a4>
  246a44:	cmp	x22, #0x400, lsl #12
  246a48:	b.hi	246d64 <dev_if_packed_info+0x3b0>  // b.pmore
  246a4c:	add	x9, x22, #0xf
  246a50:	mov	x8, sp
  246a54:	and	x9, x9, #0xfffffffffffffff0
  246a58:	sub	x22, x8, x9
  246a5c:	mov	sp, x22
  246a60:	mov	x24, xzr
  246a64:	add	x25, x19, #0x10
  246a68:	mov	x0, x22
  246a6c:	ldr	x1, [x25, x24]
  246a70:	cbz	x1, 246a84 <dev_if_packed_info+0xd0>
  246a74:	bl	253e40 <stpcpy@plt>
  246a78:	add	x24, x24, #0x8
  246a7c:	cmp	x24, #0x10
  246a80:	b.ne	246a6c <dev_if_packed_info+0xb8>  // b.any
  246a84:	strb	wzr, [x0]
  246a88:	mov	w1, #0x80000               	// #524288
  246a8c:	mov	x0, x22
  246a90:	bl	253d70 <open64@plt>
  246a94:	str	w0, [x23]
  246a98:	tbnz	w0, #31, 246b1c <dev_if_packed_info+0x168>
  246a9c:	mov	w2, #0x11                  	// #17
  246aa0:	mov	w24, #0x11                  	// #17
  246aa4:	add	x1, x19, #0x10
  246aa8:	movk	w2, #0x1, lsl #16
  246aac:	movk	w24, #0x1, lsl #16
  246ab0:	bl	253ac0 <read@plt>
  246ab4:	cmp	x0, #0x11
  246ab8:	b.gt	246b90 <dev_if_packed_info+0x1dc>
  246abc:	str	xzr, [x19]
  246ac0:	cbz	x20, 246ad4 <dev_if_packed_info+0x120>
  246ac4:	mov	w0, #0x1                   	// #1
  246ac8:	bl	2535b0 <log_get_max_level_realm@plt>
  246acc:	cmp	w0, #0x4
  246ad0:	b.ge	246d48 <dev_if_packed_info+0x394>  // b.tcont
  246ad4:	ldr	x6, [x19]
  246ad8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  246adc:	add	x8, x8, #0xb64
  246ae0:	cmp	x6, #0x0
  246ae4:	csel	x5, xzr, x8, eq  // eq = none
  246ae8:	sub	sp, sp, #0x20
  246aec:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  246af0:	add	x8, x8, #0x82e
  246af4:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246af8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  246afc:	mov	w1, #0x5                   	// #5
  246b00:	add	x2, x2, #0xae1
  246b04:	add	x4, x4, #0xd9e
  246b08:	stp	x8, x22, [sp, #8]
  246b0c:	mov	w0, #0x4                   	// #4
  246b10:	movk	w1, #0x4000, lsl #16
  246b14:	mov	w3, #0xab                  	// #171
  246b18:	b	246b7c <dev_if_packed_info+0x1c8>
  246b1c:	str	xzr, [x19, #16]
  246b20:	bl	253660 <__errno_location@plt>
  246b24:	ldr	w21, [x0]
  246b28:	cbz	x20, 246b3c <dev_if_packed_info+0x188>
  246b2c:	mov	w0, #0x1                   	// #1
  246b30:	bl	2535b0 <log_get_max_level_realm@plt>
  246b34:	cmp	w0, #0x7
  246b38:	b.ge	246d38 <dev_if_packed_info+0x384>  // b.tcont
  246b3c:	ldr	x6, [x19, #16]
  246b40:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  246b44:	add	x8, x8, #0xb64
  246b48:	cmp	x6, #0x0
  246b4c:	csel	x5, xzr, x8, eq  // eq = none
  246b50:	sub	sp, sp, #0x20
  246b54:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  246b58:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246b5c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  246b60:	add	x8, x8, #0x903
  246b64:	add	x2, x2, #0xae1
  246b68:	add	x4, x4, #0xd9e
  246b6c:	mov	w0, #0x7                   	// #7
  246b70:	mov	w3, #0xa6                  	// #166
  246b74:	mov	w1, w21
  246b78:	stp	x8, x22, [sp, #8]
  246b7c:	str	xzr, [sp]
  246b80:	mov	x7, xzr
  246b84:	bl	2539f0 <log_object_internal@plt>
  246b88:	add	sp, sp, #0x20
  246b8c:	b	246d10 <dev_if_packed_info+0x35c>
  246b90:	mov	x23, x0
  246b94:	cmp	x0, x24
  246b98:	b.hi	246d88 <dev_if_packed_info+0x3d4>  // b.pmore
  246b9c:	mov	w25, wzr
  246ba0:	cmp	x23, #0xa
  246ba4:	strb	wzr, [x21]
  246ba8:	b.cc	246cfc <dev_if_packed_info+0x348>  // b.lo, b.ul, b.last
  246bac:	mov	x28, xzr
  246bb0:	mov	w25, wzr
  246bb4:	sub	x26, x23, #0x9
  246bb8:	add	x24, x19, #0x10
  246bbc:	b	246bdc <dev_if_packed_info+0x228>
  246bc0:	mov	w8, #0xf                   	// #15
  246bc4:	cbz	w8, 246bd0 <dev_if_packed_info+0x21c>
  246bc8:	cmp	w8, #0xe
  246bcc:	b.ne	246cf4 <dev_if_packed_info+0x340>  // b.any
  246bd0:	add	x8, x28, #0x9
  246bd4:	cmp	x8, x23
  246bd8:	b.cs	246cfc <dev_if_packed_info+0x348>  // b.hs, b.nlast
  246bdc:	add	w27, w25, #0x7
  246be0:	cmp	w27, #0x1fd
  246be4:	b.hi	246cfc <dev_if_packed_info+0x348>  // b.pmore
  246be8:	add	x8, x24, x28
  246bec:	ldrb	w9, [x8]
  246bf0:	cmp	x9, #0x3
  246bf4:	b.cc	246bc0 <dev_if_packed_info+0x20c>  // b.lo, b.ul, b.last
  246bf8:	cmp	x26, x9
  246bfc:	b.cs	246c78 <dev_if_packed_info+0x2c4>  // b.hs, b.nlast
  246c00:	str	xzr, [x19]
  246c04:	cbz	x20, 246c18 <dev_if_packed_info+0x264>
  246c08:	mov	w0, #0x1                   	// #1
  246c0c:	bl	2535b0 <log_get_max_level_realm@plt>
  246c10:	cmp	w0, #0x7
  246c14:	b.ge	246ce4 <dev_if_packed_info+0x330>  // b.tcont
  246c18:	ldr	x6, [x19]
  246c1c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  246c20:	add	x8, x8, #0xb64
  246c24:	cmp	x6, #0x0
  246c28:	csel	x5, xzr, x8, eq  // eq = none
  246c2c:	sub	sp, sp, #0x20
  246c30:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  246c34:	mov	w1, #0x5                   	// #5
  246c38:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246c3c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  246c40:	add	x8, x8, #0x1e9
  246c44:	mov	w0, #0x7                   	// #7
  246c48:	movk	w1, #0x4000, lsl #16
  246c4c:	mov	w3, #0xba                  	// #186
  246c50:	add	x2, x2, #0xae1
  246c54:	add	x4, x4, #0xd9e
  246c58:	mov	x7, xzr
  246c5c:	stp	x8, x22, [sp, #8]
  246c60:	str	xzr, [sp]
  246c64:	bl	2539f0 <log_object_internal@plt>
  246c68:	add	sp, sp, #0x20
  246c6c:	mov	w8, #0x1                   	// #1
  246c70:	cbnz	w8, 246bc8 <dev_if_packed_info+0x214>
  246c74:	b	246bd0 <dev_if_packed_info+0x21c>
  246c78:	ldrb	w10, [x8, #1]
  246c7c:	add	x28, x28, x9
  246c80:	cmp	w10, #0x4
  246c84:	b.ne	246cc0 <dev_if_packed_info+0x30c>  // b.any
  246c88:	ldrb	w3, [x8, #5]
  246c8c:	ldrb	w4, [x8, #6]
  246c90:	ldrb	w5, [x8, #7]
  246c94:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  246c98:	add	x0, x19, #0x0
  246c9c:	mov	w1, #0x8                   	// #8
  246ca0:	add	x2, x2, #0xbbf
  246ca4:	bl	2542f0 <snprintf@plt>
  246ca8:	cmp	w0, #0x7
  246cac:	b.ne	246cc0 <dev_if_packed_info+0x30c>  // b.any
  246cb0:	add	x1, x19, #0x0
  246cb4:	mov	x0, x21
  246cb8:	bl	2544c0 <strstr@plt>
  246cbc:	cbz	x0, 246ccc <dev_if_packed_info+0x318>
  246cc0:	mov	w8, #0xe                   	// #14
  246cc4:	cbnz	w8, 246bc8 <dev_if_packed_info+0x214>
  246cc8:	b	246bd0 <dev_if_packed_info+0x21c>
  246ccc:	ldr	x9, [x19]
  246cd0:	mov	w8, wzr
  246cd4:	str	x9, [x21, w25, uxtw]
  246cd8:	mov	w25, w27
  246cdc:	cbnz	w8, 246bc8 <dev_if_packed_info+0x214>
  246ce0:	b	246bd0 <dev_if_packed_info+0x21c>
  246ce4:	add	x1, x19, #0x0
  246ce8:	mov	x0, x20
  246cec:	bl	253a40 <sd_device_get_sysname@plt>
  246cf0:	b	246c18 <dev_if_packed_info+0x264>
  246cf4:	cmp	w8, #0xf
  246cf8:	b.ne	246d10 <dev_if_packed_info+0x35c>  // b.any
  246cfc:	cbz	w25, 246d10 <dev_if_packed_info+0x35c>
  246d00:	add	w8, w25, #0x1
  246d04:	mov	w9, #0x3a                  	// #58
  246d08:	strb	w9, [x21, w25, uxtw]
  246d0c:	strb	wzr, [x21, w8, uxtw]
  246d10:	sub	x0, x29, #0xc
  246d14:	bl	246ef4 <closep>
  246d18:	mov	sp, x29
  246d1c:	ldp	x20, x19, [sp, #80]
  246d20:	ldp	x22, x21, [sp, #64]
  246d24:	ldp	x24, x23, [sp, #48]
  246d28:	ldp	x26, x25, [sp, #32]
  246d2c:	ldp	x28, x27, [sp, #16]
  246d30:	ldp	x29, x30, [sp], #96
  246d34:	ret
  246d38:	add	x1, x19, #0x10
  246d3c:	mov	x0, x20
  246d40:	bl	253a40 <sd_device_get_sysname@plt>
  246d44:	b	246b3c <dev_if_packed_info+0x188>
  246d48:	add	x1, x19, #0x0
  246d4c:	mov	x0, x20
  246d50:	bl	253a40 <sd_device_get_sysname@plt>
  246d54:	b	246ad4 <dev_if_packed_info+0x120>
  246d58:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  246d5c:	add	x1, x1, #0x498
  246d60:	b	246d6c <dev_if_packed_info+0x3b8>
  246d64:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  246d68:	add	x1, x1, #0x166
  246d6c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246d70:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  246d74:	add	x2, x2, #0xae1
  246d78:	add	x4, x4, #0x67a
  246d7c:	mov	w0, #0x1                   	// #1
  246d80:	mov	w3, #0xa3                  	// #163
  246d84:	bl	253740 <log_assert_failed_realm@plt>
  246d88:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  246d8c:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  246d90:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  246d94:	add	x1, x1, #0x31e
  246d98:	add	x2, x2, #0xae1
  246d9c:	add	x4, x4, #0x67a
  246da0:	mov	w0, #0x1                   	// #1
  246da4:	mov	w3, #0xac                  	// #172
  246da8:	bl	253740 <log_assert_failed_realm@plt>

0000000000246dac <set_usb_mass_storage_ifsubtype>:
  246dac:	sub	sp, sp, #0x30
  246db0:	stp	x20, x19, [sp, #32]
  246db4:	mov	x20, x1
  246db8:	mov	x19, x0
  246dbc:	add	x1, sp, #0x8
  246dc0:	mov	x0, x20
  246dc4:	mov	w2, wzr
  246dc8:	stp	x29, x30, [sp, #16]
  246dcc:	add	x29, sp, #0x10
  246dd0:	bl	254840 <strtoul@plt>
  246dd4:	ldr	x8, [sp, #8]
  246dd8:	cmp	x8, x20
  246ddc:	mov	x20, x0
  246de0:	b.eq	246e00 <set_usb_mass_storage_ifsubtype+0x54>  // b.none
  246de4:	sub	w8, w20, #0x1
  246de8:	cmp	w8, #0x5
  246dec:	b.hi	246e00 <set_usb_mass_storage_ifsubtype+0x54>  // b.pmore
  246df0:	adrp	x9, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  246df4:	add	x9, x9, #0x5f0
  246df8:	ldr	x2, [x9, w8, sxtw #3]
  246dfc:	b	246e08 <set_usb_mass_storage_ifsubtype+0x5c>
  246e00:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  246e04:	add	x2, x2, #0x91b
  246e08:	mov	w1, #0x3f                  	// #63
  246e0c:	mov	x0, x19
  246e10:	bl	253f50 <strscpy@plt>
  246e14:	mov	w0, w20
  246e18:	ldp	x20, x19, [sp, #32]
  246e1c:	ldp	x29, x30, [sp, #16]
  246e20:	add	sp, sp, #0x30
  246e24:	ret

0000000000246e28 <set_usb_iftype>:
  246e28:	stp	x29, x30, [sp, #-16]!
  246e2c:	sub	w8, w1, #0x1
  246e30:	cmp	w8, #0xd
  246e34:	mov	x29, sp
  246e38:	b.hi	246e4c <set_usb_iftype+0x24>  // b.pmore
  246e3c:	adrp	x9, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  246e40:	add	x9, x9, #0x620
  246e44:	ldr	x1, [x9, w8, sxtw #3]
  246e48:	b	246e54 <set_usb_iftype+0x2c>
  246e4c:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  246e50:	add	x1, x1, #0x91b
  246e54:	mov	w2, #0x3f                  	// #63
  246e58:	bl	2548b0 <strncpy@plt>
  246e5c:	strb	wzr, [x0, #62]
  246e60:	ldp	x29, x30, [sp], #16
  246e64:	ret

0000000000246e68 <set_scsi_type>:
  246e68:	sub	sp, sp, #0x30
  246e6c:	stp	x20, x19, [sp, #32]
  246e70:	mov	x20, x1
  246e74:	mov	x19, x0
  246e78:	add	x1, sp, #0x8
  246e7c:	mov	x0, x20
  246e80:	mov	w2, wzr
  246e84:	stp	x29, x30, [sp, #16]
  246e88:	add	x29, sp, #0x10
  246e8c:	bl	254840 <strtoul@plt>
  246e90:	ldr	x8, [sp, #8]
  246e94:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  246e98:	add	x2, x2, #0x91b
  246e9c:	cmp	x8, x20
  246ea0:	b.eq	246ebc <set_scsi_type+0x54>  // b.none
  246ea4:	cmp	w0, #0xf
  246ea8:	b.hi	246ebc <set_scsi_type+0x54>  // b.pmore
  246eac:	adrp	x9, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  246eb0:	sbfiz	x8, x0, #3, #32
  246eb4:	add	x9, x9, #0x690
  246eb8:	ldr	x2, [x9, x8]
  246ebc:	mov	w1, #0x3f                  	// #63
  246ec0:	mov	x0, x19
  246ec4:	bl	253f50 <strscpy@plt>
  246ec8:	ldp	x20, x19, [sp, #32]
  246ecc:	ldp	x29, x30, [sp, #16]
  246ed0:	add	sp, sp, #0x30
  246ed4:	ret

0000000000246ed8 <isempty>:
  246ed8:	cbz	x0, 246eec <isempty+0x14>
  246edc:	ldrb	w8, [x0]
  246ee0:	cmp	w8, #0x0
  246ee4:	cset	w0, eq  // eq = none
  246ee8:	ret
  246eec:	mov	w0, #0x1                   	// #1
  246ef0:	ret

0000000000246ef4 <closep>:
  246ef4:	stp	x29, x30, [sp, #-16]!
  246ef8:	ldr	w0, [x0]
  246efc:	mov	x29, sp
  246f00:	bl	2538f0 <safe_close@plt>
  246f04:	ldp	x29, x30, [sp], #16
  246f08:	ret

0000000000246f0c <size_multiply_overflow>:
  246f0c:	mov	w0, wzr
  246f10:	ret

0000000000246f14 <link_config_ctx_free>:
  246f14:	cbz	x0, 246f50 <link_config_ctx_free+0x3c>
  246f18:	stp	x29, x30, [sp, #-32]!
  246f1c:	str	x19, [sp, #16]
  246f20:	mov	x19, x0
  246f24:	ldr	w0, [x0, #8]
  246f28:	mov	x29, sp
  246f2c:	bl	2538f0 <safe_close@plt>
  246f30:	ldr	x0, [x19, #16]
  246f34:	bl	2538e0 <sd_netlink_unref@plt>
  246f38:	mov	x0, x19
  246f3c:	bl	246f54 <link_configs_free>
  246f40:	mov	x0, x19
  246f44:	bl	2536e0 <free@plt>
  246f48:	ldr	x19, [sp, #16]
  246f4c:	ldp	x29, x30, [sp], #32
  246f50:	ret

0000000000246f54 <link_configs_free>:
  246f54:	stp	x29, x30, [sp, #-32]!
  246f58:	str	x19, [sp, #16]
  246f5c:	mov	x29, sp
  246f60:	cbz	x0, 246f7c <link_configs_free+0x28>
  246f64:	ldr	x0, [x0]
  246f68:	cbz	x0, 246f7c <link_configs_free+0x28>
  246f6c:	ldr	x19, [x0, #208]
  246f70:	bl	248d50 <link_config_free>
  246f74:	mov	x0, x19
  246f78:	cbnz	x19, 246f6c <link_configs_free+0x18>
  246f7c:	ldr	x19, [sp, #16]
  246f80:	ldp	x29, x30, [sp], #32
  246f84:	ret

0000000000246f88 <link_config_ctx_new>:
  246f88:	stp	x29, x30, [sp, #-48]!
  246f8c:	mov	x29, sp
  246f90:	str	x21, [sp, #16]
  246f94:	stp	x20, x19, [sp, #32]
  246f98:	str	xzr, [x29, #24]
  246f9c:	cbz	x0, 246fe0 <link_config_ctx_new+0x58>
  246fa0:	mov	x20, x0
  246fa4:	mov	w0, #0x1                   	// #1
  246fa8:	mov	w1, #0x20                  	// #32
  246fac:	mov	w21, #0x1                   	// #1
  246fb0:	bl	254940 <calloc@plt>
  246fb4:	str	x0, [x29, #24]
  246fb8:	cbz	x0, 246fe8 <link_config_ctx_new+0x60>
  246fbc:	ldr	x8, [x29, #24]
  246fc0:	mov	w19, wzr
  246fc4:	mov	w9, #0xffffffff            	// #-1
  246fc8:	str	xzr, [x0]
  246fcc:	str	w9, [x8, #8]
  246fd0:	strb	w21, [x8, #12]
  246fd4:	str	xzr, [x29, #24]
  246fd8:	str	x8, [x20]
  246fdc:	b	246fec <link_config_ctx_new+0x64>
  246fe0:	mov	w19, #0xffffffea            	// #-22
  246fe4:	b	246fec <link_config_ctx_new+0x64>
  246fe8:	mov	w19, #0xfffffff4            	// #-12
  246fec:	add	x0, x29, #0x18
  246ff0:	bl	247008 <link_config_ctx_freep>
  246ff4:	mov	w0, w19
  246ff8:	ldp	x20, x19, [sp, #32]
  246ffc:	ldr	x21, [sp, #16]
  247000:	ldp	x29, x30, [sp], #48
  247004:	ret

0000000000247008 <link_config_ctx_freep>:
  247008:	stp	x29, x30, [sp, #-16]!
  24700c:	ldr	x0, [x0]
  247010:	mov	x29, sp
  247014:	cbz	x0, 24701c <link_config_ctx_freep+0x14>
  247018:	bl	246f14 <link_config_ctx_free>
  24701c:	ldp	x29, x30, [sp], #16
  247020:	ret

0000000000247024 <link_load_one>:
  247024:	sub	sp, sp, #0x50
  247028:	stp	x29, x30, [sp, #32]
  24702c:	add	x29, sp, #0x20
  247030:	stp	x22, x21, [sp, #48]
  247034:	stp	x20, x19, [sp, #64]
  247038:	stur	xzr, [x29, #-8]
  24703c:	stp	xzr, xzr, [sp, #8]
  247040:	cbz	x0, 247310 <link_load_one+0x2ec>
  247044:	mov	x19, x1
  247048:	cbz	x1, 247334 <link_load_one+0x310>
  24704c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  247050:	mov	x20, x0
  247054:	add	x1, x1, #0x2fc
  247058:	mov	x0, x19
  24705c:	bl	254410 <fopen64@plt>
  247060:	str	x0, [sp, #16]
  247064:	cbz	x0, 2470bc <link_load_one+0x98>
  247068:	mov	x21, x0
  24706c:	bl	254420 <fileno@plt>
  247070:	bl	254440 <null_or_empty_fd@plt>
  247074:	cbz	w0, 2470d0 <link_load_one+0xac>
  247078:	mov	w0, #0x1                   	// #1
  24707c:	bl	2535b0 <log_get_max_level_realm@plt>
  247080:	cmp	w0, #0x7
  247084:	b.lt	2470b4 <link_load_one+0x90>  // b.tstop
  247088:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24708c:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  247090:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  247094:	add	x2, x2, #0xa24
  247098:	add	x4, x4, #0xbad
  24709c:	add	x5, x5, #0x4b4
  2470a0:	mov	w0, #0x407                 	// #1031
  2470a4:	mov	w3, #0x81                  	// #129
  2470a8:	mov	w1, wzr
  2470ac:	mov	x6, x19
  2470b0:	bl	2535c0 <log_internal_realm@plt>
  2470b4:	mov	w21, wzr
  2470b8:	b	2471a4 <link_load_one+0x180>
  2470bc:	bl	253660 <__errno_location@plt>
  2470c0:	ldr	w8, [x0]
  2470c4:	cmp	w8, #0x2
  2470c8:	csneg	w21, wzr, w8, eq  // eq = none
  2470cc:	b	2471a4 <link_load_one+0x180>
  2470d0:	mov	x0, x19
  2470d4:	bl	253ab0 <strdup@plt>
  2470d8:	str	x0, [sp, #8]
  2470dc:	cbz	x0, 2471a0 <link_load_one+0x17c>
  2470e0:	bl	2473c8 <malloc_multiply>
  2470e4:	stur	x0, [x29, #-8]
  2470e8:	cbz	x0, 2471a0 <link_load_one+0x17c>
  2470ec:	ldr	x8, [sp, #8]
  2470f0:	mov	w9, #0xffffffff            	// #-1
  2470f4:	movi	v0.2d, #0x0
  2470f8:	str	w9, [x0, #80]
  2470fc:	str	x8, [x0]
  247100:	ldur	x8, [x29, #-8]
  247104:	mov	x9, #0xffffffffffffffff    	// #-1
  247108:	str	xzr, [sp, #8]
  24710c:	str	xzr, [x0, #72]
  247110:	str	wzr, [x0, #144]
  247114:	str	wzr, [x0, #220]
  247118:	stur	q0, [x0, #8]
  24711c:	stur	q0, [x0, #24]
  247120:	stur	q0, [x0, #40]
  247124:	stur	q0, [x0, #56]
  247128:	stur	q0, [x0, #84]
  24712c:	stur	q0, [x0, #100]
  247130:	str	q0, [x0, #112]
  247134:	stp	x9, xzr, [x0, #128]
  247138:	stur	x9, [x0, #148]
  24713c:	stur	q0, [x0, #156]
  247140:	stur	q0, [x0, #172]
  247144:	stur	q0, [x0, #188]
  247148:	stur	q0, [x0, #204]
  24714c:	stur	x9, [x8, #164]
  247150:	stur	x9, [x8, #156]
  247154:	str	w9, [x8, #172]
  247158:	adrp	x4, 27d000 <builtin_blkid.options+0x50>
  24715c:	adrp	x5, 27d000 <builtin_blkid.options+0x50>
  247160:	ldr	x4, [x4, #768]
  247164:	ldr	x5, [x5, #776]
  247168:	adrp	x3, 218000 <worker_hash_op+0xdad0>
  24716c:	mov	x7, x0
  247170:	add	x3, x3, #0xca4
  247174:	mov	w6, #0x4                   	// #4
  247178:	mov	x0, xzr
  24717c:	mov	x1, x19
  247180:	mov	x2, x21
  247184:	bl	254950 <config_parse@plt>
  247188:	tbnz	w0, #31, 2471d4 <link_load_one+0x1b0>
  24718c:	ldur	x22, [x29, #-8]
  247190:	ldr	w8, [x22, #124]
  247194:	cbz	w8, 2471dc <link_load_one+0x1b8>
  247198:	mov	w21, #0xffffffde            	// #-34
  24719c:	b	2471a4 <link_load_one+0x180>
  2471a0:	mov	w21, #0xfffffff4            	// #-12
  2471a4:	add	x0, sp, #0x8
  2471a8:	bl	2473b0 <freep>
  2471ac:	add	x0, sp, #0x10
  2471b0:	bl	247398 <fclosep>
  2471b4:	sub	x0, x29, #0x8
  2471b8:	bl	24737c <link_config_freep>
  2471bc:	mov	w0, w21
  2471c0:	ldp	x20, x19, [sp, #64]
  2471c4:	ldp	x22, x21, [sp, #48]
  2471c8:	ldp	x29, x30, [sp, #32]
  2471cc:	add	sp, sp, #0x50
  2471d0:	ret
  2471d4:	mov	w21, w0
  2471d8:	b	2471a4 <link_load_one+0x180>
  2471dc:	ldr	x0, [x22, #8]
  2471e0:	bl	2473e0 <set_isempty>
  2471e4:	tbz	w0, #0, 247268 <link_load_one+0x244>
  2471e8:	ldr	x0, [x22, #16]
  2471ec:	bl	2473fc <strv_isempty>
  2471f0:	tbz	w0, #0, 247268 <link_load_one+0x244>
  2471f4:	ldr	x0, [x22, #24]
  2471f8:	bl	2473fc <strv_isempty>
  2471fc:	tbz	w0, #0, 247268 <link_load_one+0x244>
  247200:	ldr	x0, [x22, #32]
  247204:	bl	2473fc <strv_isempty>
  247208:	tbz	w0, #0, 247268 <link_load_one+0x244>
  24720c:	ldr	x0, [x22, #40]
  247210:	bl	2473fc <strv_isempty>
  247214:	tbz	w0, #0, 247268 <link_load_one+0x244>
  247218:	ldr	x0, [x22, #48]
  24721c:	bl	2473fc <strv_isempty>
  247220:	tbz	w0, #0, 247268 <link_load_one+0x244>
  247224:	ldr	x8, [x22, #56]
  247228:	cbnz	x8, 247268 <link_load_one+0x244>
  24722c:	mov	w0, #0x1                   	// #1
  247230:	bl	2535b0 <log_get_max_level_realm@plt>
  247234:	cmp	w0, #0x4
  247238:	b.lt	247268 <link_load_one+0x244>  // b.tstop
  24723c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247240:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  247244:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  247248:	add	x2, x2, #0xa24
  24724c:	add	x4, x4, #0xbad
  247250:	add	x5, x5, #0xeb8
  247254:	mov	w0, #0x404                 	// #1028
  247258:	mov	w3, #0xa9                  	// #169
  24725c:	mov	w1, wzr
  247260:	mov	x6, x19
  247264:	bl	2535c0 <log_internal_realm@plt>
  247268:	ldr	x0, [x22, #56]
  24726c:	mov	x1, xzr
  247270:	mov	x2, xzr
  247274:	mov	x3, xzr
  247278:	bl	254960 <condition_test_list@plt>
  24727c:	mov	w21, w0
  247280:	mov	w0, #0x1                   	// #1
  247284:	bl	2535b0 <log_get_max_level_realm@plt>
  247288:	cmp	w0, #0x7
  24728c:	tbz	w21, #0, 2472e8 <link_load_one+0x2c4>
  247290:	b.lt	2472c0 <link_load_one+0x29c>  // b.tstop
  247294:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247298:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24729c:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  2472a0:	add	x2, x2, #0xa24
  2472a4:	add	x4, x4, #0xbad
  2472a8:	add	x5, x5, #0xc0b
  2472ac:	mov	w0, #0x407                 	// #1031
  2472b0:	mov	w3, #0xb0                  	// #176
  2472b4:	mov	w1, wzr
  2472b8:	mov	x6, x19
  2472bc:	bl	2535c0 <log_internal_realm@plt>
  2472c0:	stur	xzr, [x29, #-8]
  2472c4:	cbz	x22, 247358 <link_load_one+0x334>
  2472c8:	ldr	x8, [x20]
  2472cc:	str	x8, [x22, #208]
  2472d0:	cbz	x8, 2472d8 <link_load_one+0x2b4>
  2472d4:	str	x22, [x8, #216]
  2472d8:	mov	w21, wzr
  2472dc:	str	xzr, [x22, #216]
  2472e0:	str	x22, [x20]
  2472e4:	b	2471a4 <link_load_one+0x180>
  2472e8:	b.lt	2470b4 <link_load_one+0x90>  // b.tstop
  2472ec:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2472f0:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  2472f4:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  2472f8:	add	x2, x2, #0xa24
  2472fc:	add	x4, x4, #0xbad
  247300:	add	x5, x5, #0xbcd
  247304:	mov	w0, #0x407                 	// #1031
  247308:	mov	w3, #0xac                  	// #172
  24730c:	b	2470a8 <link_load_one+0x84>
  247310:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  247314:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247318:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  24731c:	add	x1, x1, #0x1a2
  247320:	add	x2, x2, #0xa24
  247324:	add	x4, x4, #0xb53
  247328:	mov	w0, #0x1                   	// #1
  24732c:	mov	w3, #0x79                  	// #121
  247330:	bl	253740 <log_assert_failed_realm@plt>
  247334:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  247338:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24733c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  247340:	add	x1, x1, #0x4b9
  247344:	add	x2, x2, #0xa24
  247348:	add	x4, x4, #0xb53
  24734c:	mov	w0, #0x1                   	// #1
  247350:	mov	w3, #0x7a                  	// #122
  247354:	bl	253740 <log_assert_failed_realm@plt>
  247358:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24735c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247360:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  247364:	add	x1, x1, #0x848
  247368:	add	x2, x2, #0xa24
  24736c:	add	x4, x4, #0xb53
  247370:	mov	w0, #0x1                   	// #1
  247374:	mov	w3, #0xb2                  	// #178
  247378:	bl	253740 <log_assert_failed_realm@plt>

000000000024737c <link_config_freep>:
  24737c:	stp	x29, x30, [sp, #-16]!
  247380:	ldr	x0, [x0]
  247384:	mov	x29, sp
  247388:	cbz	x0, 247390 <link_config_freep+0x14>
  24738c:	bl	248d50 <link_config_free>
  247390:	ldp	x29, x30, [sp], #16
  247394:	ret

0000000000247398 <fclosep>:
  247398:	stp	x29, x30, [sp, #-16]!
  24739c:	ldr	x0, [x0]
  2473a0:	mov	x29, sp
  2473a4:	bl	254470 <safe_fclose@plt>
  2473a8:	ldp	x29, x30, [sp], #16
  2473ac:	ret

00000000002473b0 <freep>:
  2473b0:	stp	x29, x30, [sp, #-16]!
  2473b4:	ldr	x0, [x0]
  2473b8:	mov	x29, sp
  2473bc:	bl	2536e0 <free@plt>
  2473c0:	ldp	x29, x30, [sp], #16
  2473c4:	ret

00000000002473c8 <malloc_multiply>:
  2473c8:	stp	x29, x30, [sp, #-16]!
  2473cc:	mov	w0, #0xe0                  	// #224
  2473d0:	mov	x29, sp
  2473d4:	bl	2539c0 <malloc@plt>
  2473d8:	ldp	x29, x30, [sp], #16
  2473dc:	ret

00000000002473e0 <set_isempty>:
  2473e0:	stp	x29, x30, [sp, #-16]!
  2473e4:	mov	x29, sp
  2473e8:	bl	248e18 <set_size>
  2473ec:	cmp	w0, #0x0
  2473f0:	cset	w0, eq  // eq = none
  2473f4:	ldp	x29, x30, [sp], #16
  2473f8:	ret

00000000002473fc <strv_isempty>:
  2473fc:	cbz	x0, 247410 <strv_isempty+0x14>
  247400:	ldr	x8, [x0]
  247404:	cmp	x8, #0x0
  247408:	cset	w0, eq  // eq = none
  24740c:	ret
  247410:	mov	w0, #0x1                   	// #1
  247414:	ret

0000000000247418 <link_config_load>:
  247418:	sub	sp, sp, #0xb0
  24741c:	stp	x29, x30, [sp, #112]
  247420:	stp	x24, x23, [sp, #128]
  247424:	stp	x22, x21, [sp, #144]
  247428:	stp	x20, x19, [sp, #160]
  24742c:	add	x29, sp, #0x70
  247430:	mov	x19, x0
  247434:	bl	246f54 <link_configs_free>
  247438:	bl	24761c <enable_name_policy>
  24743c:	tbnz	w0, #0, 24747c <link_config_load+0x64>
  247440:	mov	w0, #0x1                   	// #1
  247444:	strb	wzr, [x19, #12]
  247448:	bl	2535b0 <log_get_max_level_realm@plt>
  24744c:	cmp	w0, #0x6
  247450:	b.lt	24747c <link_config_load+0x64>  // b.tstop
  247454:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247458:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24745c:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  247460:	add	x2, x2, #0xa24
  247464:	add	x4, x4, #0x205
  247468:	add	x5, x5, #0x4c2
  24746c:	mov	w0, #0x406                 	// #1030
  247470:	mov	w3, #0xd5                  	// #213
  247474:	mov	w1, wzr
  247478:	bl	2535c0 <log_internal_realm@plt>
  24747c:	adrp	x8, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  247480:	add	x8, x8, #0x710
  247484:	ldp	q0, q1, [x8]
  247488:	ldr	q2, [x8, #32]
  24748c:	add	x1, x19, #0x18
  247490:	add	x0, sp, #0x30
  247494:	mov	w2, #0x1                   	// #1
  247498:	stp	q0, q1, [sp, #48]
  24749c:	str	q2, [sp, #80]
  2474a0:	bl	254400 <paths_check_timestamp@plt>
  2474a4:	adrp	x8, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  2474a8:	add	x8, x8, #0x740
  2474ac:	ldp	q0, q1, [x8]
  2474b0:	ldr	q2, [x8, #32]
  2474b4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  2474b8:	add	x1, x1, #0x843
  2474bc:	sub	x0, x29, #0x8
  2474c0:	mov	x4, sp
  2474c4:	mov	x2, xzr
  2474c8:	mov	w3, wzr
  2474cc:	stp	q0, q1, [sp]
  2474d0:	str	q2, [sp, #32]
  2474d4:	bl	2543f0 <conf_files_list_strv@plt>
  2474d8:	tbnz	w0, #31, 2474f8 <link_config_load+0xe0>
  2474dc:	ldur	x20, [x29, #-8]
  2474e0:	cbz	x20, 24753c <link_config_load+0x124>
  2474e4:	mov	x0, x20
  2474e8:	bl	2547a0 <strv_length@plt>
  2474ec:	add	x8, x20, x0, lsl #3
  2474f0:	sub	x8, x8, #0x8
  2474f4:	b	247540 <link_config_load+0x128>
  2474f8:	mov	w20, w0
  2474fc:	mov	w0, #0x1                   	// #1
  247500:	bl	2535b0 <log_get_max_level_realm@plt>
  247504:	cmp	w0, #0x3
  247508:	b.lt	2475d0 <link_config_load+0x1b8>  // b.tstop
  24750c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247510:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  247514:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  247518:	add	x2, x2, #0xa24
  24751c:	add	x4, x4, #0x205
  247520:	add	x5, x5, #0xbd4
  247524:	mov	w0, #0x403                 	// #1027
  247528:	mov	w3, #0xdd                  	// #221
  24752c:	mov	w1, w20
  247530:	bl	2535c0 <log_internal_realm@plt>
  247534:	mov	w23, w0
  247538:	b	2475dc <link_config_load+0x1c4>
  24753c:	mov	x8, xzr
  247540:	ldur	x9, [x29, #-8]
  247544:	mov	w23, wzr
  247548:	cbz	x9, 2475dc <link_config_load+0x1c4>
  24754c:	cmp	x8, x9
  247550:	b.cc	2475dc <link_config_load+0x1c4>  // b.lo, b.ul, b.last
  247554:	adrp	x20, 216000 <worker_hash_op+0xbad0>
  247558:	adrp	x21, 217000 <worker_hash_op+0xcad0>
  24755c:	adrp	x22, 20c000 <worker_hash_op+0x1ad0>
  247560:	sub	x24, x8, #0x8
  247564:	add	x20, x20, #0xa24
  247568:	add	x21, x21, #0x205
  24756c:	add	x22, x22, #0x34f
  247570:	ldr	x1, [x24, #8]
  247574:	mov	x0, x19
  247578:	bl	247024 <link_load_one>
  24757c:	tbz	w0, #31, 2475b4 <link_config_load+0x19c>
  247580:	mov	w23, w0
  247584:	mov	w0, #0x1                   	// #1
  247588:	bl	2535b0 <log_get_max_level_realm@plt>
  24758c:	cmp	w0, #0x3
  247590:	b.lt	2475b4 <link_config_load+0x19c>  // b.tstop
  247594:	ldr	x6, [x24, #8]
  247598:	mov	w0, #0x403                 	// #1027
  24759c:	mov	w3, #0xe2                  	// #226
  2475a0:	mov	w1, w23
  2475a4:	mov	x2, x20
  2475a8:	mov	x4, x21
  2475ac:	mov	x5, x22
  2475b0:	bl	2535c0 <log_internal_realm@plt>
  2475b4:	ldur	x8, [x29, #-8]
  2475b8:	mov	w23, wzr
  2475bc:	cbz	x8, 2475dc <link_config_load+0x1c4>
  2475c0:	cmp	x24, x8
  2475c4:	sub	x24, x24, #0x8
  2475c8:	b.cs	247570 <link_config_load+0x158>  // b.hs, b.nlast
  2475cc:	b	2475dc <link_config_load+0x1c4>
  2475d0:	mov	w8, wzr
  2475d4:	neg	w9, w20
  2475d8:	sub	w23, w8, w9, uxtb
  2475dc:	sub	x0, x29, #0x8
  2475e0:	bl	247600 <strv_freep>
  2475e4:	mov	w0, w23
  2475e8:	ldp	x20, x19, [sp, #160]
  2475ec:	ldp	x22, x21, [sp, #144]
  2475f0:	ldp	x24, x23, [sp, #128]
  2475f4:	ldp	x29, x30, [sp, #112]
  2475f8:	add	sp, sp, #0xb0
  2475fc:	ret

0000000000247600 <strv_freep>:
  247600:	stp	x29, x30, [sp, #-16]!
  247604:	ldr	x0, [x0]
  247608:	mov	x29, sp
  24760c:	cbz	x0, 247614 <strv_freep+0x14>
  247610:	bl	254150 <strv_free@plt>
  247614:	ldp	x29, x30, [sp], #16
  247618:	ret

000000000024761c <enable_name_policy>:
  24761c:	sub	sp, sp, #0x20
  247620:	stp	x29, x30, [sp, #16]
  247624:	add	x29, sp, #0x10
  247628:	adrp	x0, 20f000 <worker_hash_op+0x4ad0>
  24762c:	add	x0, x0, #0x27c
  247630:	sub	x1, x29, #0x4
  247634:	bl	254970 <proc_cmdline_get_bool@plt>
  247638:	ldurb	w8, [x29, #-4]
  24763c:	ldp	x29, x30, [sp, #16]
  247640:	cmp	w0, #0x1
  247644:	cset	w9, lt  // lt = tstop
  247648:	and	w8, w8, #0x1
  24764c:	orr	w0, w9, w8
  247650:	add	sp, sp, #0x20
  247654:	ret

0000000000247658 <link_config_should_reload>:
  247658:	sub	sp, sp, #0x40
  24765c:	adrp	x8, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  247660:	add	x8, x8, #0x770
  247664:	ldp	q0, q1, [x8]
  247668:	ldr	q2, [x8, #32]
  24766c:	add	x1, x0, #0x18
  247670:	mov	x0, sp
  247674:	mov	w2, wzr
  247678:	stp	x29, x30, [sp, #48]
  24767c:	add	x29, sp, #0x30
  247680:	stp	q0, q1, [sp]
  247684:	str	q2, [sp, #32]
  247688:	bl	254400 <paths_check_timestamp@plt>
  24768c:	ldp	x29, x30, [sp, #48]
  247690:	and	w0, w0, #0x1
  247694:	add	sp, sp, #0x40
  247698:	ret

000000000024769c <link_config_get>:
  24769c:	sub	sp, sp, #0xb0
  2476a0:	stp	x29, x30, [sp, #80]
  2476a4:	stp	x28, x27, [sp, #96]
  2476a8:	stp	x26, x25, [sp, #112]
  2476ac:	stp	x24, x23, [sp, #128]
  2476b0:	stp	x22, x21, [sp, #144]
  2476b4:	stp	x20, x19, [sp, #160]
  2476b8:	add	x29, sp, #0x50
  2476bc:	cbz	x0, 2478f8 <link_config_get+0x25c>
  2476c0:	mov	x20, x1
  2476c4:	cbz	x1, 24791c <link_config_get+0x280>
  2476c8:	mov	x19, x2
  2476cc:	cbz	x2, 247940 <link_config_get+0x2a4>
  2476d0:	ldr	x25, [x0]
  2476d4:	cbz	x25, 247854 <link_config_get+0x1b8>
  2476d8:	adrp	x21, 20e000 <worker_hash_op+0x3ad0>
  2476dc:	adrp	x22, 20c000 <worker_hash_op+0x1ad0>
  2476e0:	adrp	x26, 211000 <worker_hash_op+0x6ad0>
  2476e4:	adrp	x27, 211000 <worker_hash_op+0x6ad0>
  2476e8:	adrp	x23, 216000 <worker_hash_op+0xbad0>
  2476ec:	adrp	x24, 218000 <worker_hash_op+0xdad0>
  2476f0:	adrp	x28, 20e000 <worker_hash_op+0x3ad0>
  2476f4:	add	x21, x21, #0x548
  2476f8:	add	x22, x22, #0x36f
  2476fc:	add	x26, x26, #0xb64
  247700:	add	x27, x27, #0x1a6
  247704:	add	x23, x23, #0xa24
  247708:	add	x24, x24, #0x6ae
  24770c:	add	x28, x28, #0x54a
  247710:	b	247770 <link_config_get+0xd4>
  247714:	mov	w0, #0x1                   	// #1
  247718:	stur	xzr, [x29, #-16]
  24771c:	bl	2535b0 <log_get_max_level_realm@plt>
  247720:	cmp	w0, #0x4
  247724:	b.ge	247834 <link_config_get+0x198>  // b.tcont
  247728:	ldur	x6, [x29, #-16]
  24772c:	ldr	x8, [x25]
  247730:	mov	w0, #0x4                   	// #4
  247734:	mov	w3, #0x104                 	// #260
  247738:	cmp	x6, #0x0
  24773c:	csel	x5, xzr, x26, eq  // eq = none
  247740:	mov	w1, wzr
  247744:	mov	x2, x23
  247748:	mov	x4, x24
  24774c:	mov	x7, xzr
  247750:	stp	x27, x8, [sp, #8]
  247754:	str	xzr, [sp]
  247758:	bl	2539f0 <log_object_internal@plt>
  24775c:	mov	w8, #0xa                   	// #10
  247760:	cmp	w8, #0xa
  247764:	b.ne	24785c <link_config_get+0x1c0>  // b.any
  247768:	ldr	x25, [x25, #208]
  24776c:	cbz	x25, 247854 <link_config_get+0x1b8>
  247770:	ldp	x0, x1, [x25, #8]
  247774:	ldp	x2, x3, [x25, #24]
  247778:	ldp	x4, x5, [x25, #40]
  24777c:	movi	v0.2d, #0x0
  247780:	mov	x6, xzr
  247784:	mov	x7, xzr
  247788:	stur	q0, [sp, #40]
  24778c:	str	wzr, [sp, #32]
  247790:	str	q0, [sp, #16]
  247794:	stp	xzr, x20, [sp]
  247798:	bl	24d72c <net_match_config>
  24779c:	tbz	w0, #0, 247768 <link_config_get+0xcc>
  2477a0:	ldr	x0, [x25, #40]
  2477a4:	cbz	x0, 247860 <link_config_get+0x1c4>
  2477a8:	mov	x1, x21
  2477ac:	bl	2544a0 <strv_find@plt>
  2477b0:	cbnz	x0, 247860 <link_config_get+0x1c4>
  2477b4:	sub	x2, x29, #0x4
  2477b8:	mov	x0, x20
  2477bc:	mov	x1, x22
  2477c0:	stur	wzr, [x29, #-4]
  2477c4:	bl	247964 <link_unsigned_attribute>
  2477c8:	ldur	w8, [x29, #-4]
  2477cc:	cmp	w8, #0x4
  2477d0:	b.eq	247714 <link_config_get+0x78>  // b.none
  2477d4:	cmp	w8, #0x1
  2477d8:	mov	w8, wzr
  2477dc:	b.ne	247760 <link_config_get+0xc4>  // b.any
  2477e0:	mov	w0, #0x1                   	// #1
  2477e4:	stur	xzr, [x29, #-16]
  2477e8:	bl	2535b0 <log_get_max_level_realm@plt>
  2477ec:	cmp	w0, #0x4
  2477f0:	b.ge	247844 <link_config_get+0x1a8>  // b.tcont
  2477f4:	ldur	x6, [x29, #-16]
  2477f8:	ldr	x8, [x25]
  2477fc:	mov	w0, #0x4                   	// #4
  247800:	mov	w3, #0xfe                  	// #254
  247804:	cmp	x6, #0x0
  247808:	csel	x5, xzr, x26, eq  // eq = none
  24780c:	mov	w1, wzr
  247810:	mov	x2, x23
  247814:	mov	x4, x24
  247818:	mov	x7, xzr
  24781c:	stp	x28, x8, [sp, #8]
  247820:	str	xzr, [sp]
  247824:	bl	2539f0 <log_object_internal@plt>
  247828:	str	x25, [x19]
  24782c:	mov	w8, #0x1                   	// #1
  247830:	b	247760 <link_config_get+0xc4>
  247834:	sub	x1, x29, #0x10
  247838:	mov	x0, x20
  24783c:	bl	253a40 <sd_device_get_sysname@plt>
  247840:	b	247728 <link_config_get+0x8c>
  247844:	sub	x1, x29, #0x10
  247848:	mov	x0, x20
  24784c:	bl	253a40 <sd_device_get_sysname@plt>
  247850:	b	2477f4 <link_config_get+0x158>
  247854:	mov	w0, #0xfffffffe            	// #-2
  247858:	b	2478bc <link_config_get+0x220>
  24785c:	cbnz	w8, 2478e0 <link_config_get+0x244>
  247860:	mov	w0, #0x1                   	// #1
  247864:	stur	xzr, [x29, #-16]
  247868:	bl	2535b0 <log_get_max_level_realm@plt>
  24786c:	cmp	w0, #0x7
  247870:	b.ge	2478e8 <link_config_get+0x24c>  // b.tcont
  247874:	ldur	x6, [x29, #-16]
  247878:	ldr	x8, [x25]
  24787c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247880:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  247884:	cmp	x6, #0x0
  247888:	str	x8, [sp, #16]
  24788c:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  247890:	csel	x5, xzr, x26, eq  // eq = none
  247894:	add	x8, x8, #0x65e
  247898:	add	x2, x2, #0xa24
  24789c:	add	x4, x4, #0x6ae
  2478a0:	mov	w0, #0x7                   	// #7
  2478a4:	mov	w3, #0x10a                 	// #266
  2478a8:	mov	w1, wzr
  2478ac:	mov	x7, xzr
  2478b0:	stp	xzr, x8, [sp]
  2478b4:	bl	2539f0 <log_object_internal@plt>
  2478b8:	mov	w0, wzr
  2478bc:	str	x25, [x19]
  2478c0:	ldp	x20, x19, [sp, #160]
  2478c4:	ldp	x22, x21, [sp, #144]
  2478c8:	ldp	x24, x23, [sp, #128]
  2478cc:	ldp	x26, x25, [sp, #112]
  2478d0:	ldp	x28, x27, [sp, #96]
  2478d4:	ldp	x29, x30, [sp, #80]
  2478d8:	add	sp, sp, #0xb0
  2478dc:	ret
  2478e0:	mov	w0, wzr
  2478e4:	b	2478c0 <link_config_get+0x224>
  2478e8:	sub	x1, x29, #0x10
  2478ec:	mov	x0, x20
  2478f0:	bl	253a40 <sd_device_get_sysname@plt>
  2478f4:	b	247874 <link_config_get+0x1d8>
  2478f8:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  2478fc:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247900:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  247904:	add	x1, x1, #0x1a2
  247908:	add	x2, x2, #0xa24
  24790c:	add	x4, x4, #0x908
  247910:	mov	w0, #0x1                   	// #1
  247914:	mov	w3, #0xef                  	// #239
  247918:	bl	253740 <log_assert_failed_realm@plt>
  24791c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  247920:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247924:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  247928:	add	x1, x1, #0x2ed
  24792c:	add	x2, x2, #0xa24
  247930:	add	x4, x4, #0x908
  247934:	mov	w0, #0x1                   	// #1
  247938:	mov	w3, #0xf0                  	// #240
  24793c:	bl	253740 <log_assert_failed_realm@plt>
  247940:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  247944:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247948:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  24794c:	add	x1, x1, #0xb2b
  247950:	add	x2, x2, #0xa24
  247954:	add	x4, x4, #0x908
  247958:	mov	w0, #0x1                   	// #1
  24795c:	mov	w3, #0xf1                  	// #241
  247960:	bl	253740 <log_assert_failed_realm@plt>

0000000000247964 <link_unsigned_attribute>:
  247964:	sub	sp, sp, #0x60
  247968:	stp	x29, x30, [sp, #48]
  24796c:	add	x29, sp, #0x30
  247970:	stp	x22, x21, [sp, #64]
  247974:	mov	x21, x2
  247978:	sub	x2, x29, #0x8
  24797c:	stp	x20, x19, [sp, #80]
  247980:	mov	x19, x1
  247984:	mov	x20, x0
  247988:	bl	254070 <sd_device_get_sysattr_value@plt>
  24798c:	tbnz	w0, #31, 247a10 <link_unsigned_attribute+0xac>
  247990:	ldur	x0, [x29, #-8]
  247994:	mov	x1, x21
  247998:	bl	248e2c <safe_atou>
  24799c:	tbnz	w0, #31, 247a68 <link_unsigned_attribute+0x104>
  2479a0:	stur	xzr, [x29, #-16]
  2479a4:	cbz	x20, 2479b8 <link_unsigned_attribute+0x54>
  2479a8:	mov	w0, #0x1                   	// #1
  2479ac:	bl	2535b0 <log_get_max_level_realm@plt>
  2479b0:	cmp	w0, #0x7
  2479b4:	b.ge	247ae4 <link_unsigned_attribute+0x180>  // b.tcont
  2479b8:	ldur	x6, [x29, #-16]
  2479bc:	ldr	w8, [x21]
  2479c0:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  2479c4:	add	x9, x9, #0xb64
  2479c8:	cmp	x6, #0x0
  2479cc:	str	w8, [sp, #24]
  2479d0:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2479d4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2479d8:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  2479dc:	csel	x5, xzr, x9, eq  // eq = none
  2479e0:	add	x8, x8, #0xdf8
  2479e4:	add	x2, x2, #0xa24
  2479e8:	add	x4, x4, #0x443
  2479ec:	mov	w0, #0x7                   	// #7
  2479f0:	mov	w3, #0xc8                  	// #200
  2479f4:	mov	w1, wzr
  2479f8:	mov	x7, xzr
  2479fc:	stp	x8, x19, [sp, #8]
  247a00:	str	xzr, [sp]
  247a04:	bl	2539f0 <log_object_internal@plt>
  247a08:	mov	w0, wzr
  247a0c:	b	247ad0 <link_unsigned_attribute+0x16c>
  247a10:	mov	w22, w0
  247a14:	stur	xzr, [x29, #-16]
  247a18:	cbz	x20, 247a2c <link_unsigned_attribute+0xc8>
  247a1c:	mov	w0, #0x1                   	// #1
  247a20:	bl	2535b0 <log_get_max_level_realm@plt>
  247a24:	cmp	w0, #0x7
  247a28:	b.ge	247af4 <link_unsigned_attribute+0x190>  // b.tcont
  247a2c:	ldur	x6, [x29, #-16]
  247a30:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  247a34:	add	x8, x8, #0xb64
  247a38:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247a3c:	cmp	x6, #0x0
  247a40:	csel	x5, xzr, x8, eq  // eq = none
  247a44:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  247a48:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  247a4c:	add	x8, x8, #0xed3
  247a50:	add	x2, x2, #0xa24
  247a54:	add	x4, x4, #0x443
  247a58:	mov	w0, #0x7                   	// #7
  247a5c:	mov	w3, #0xc2                  	// #194
  247a60:	stp	x8, x19, [sp, #8]
  247a64:	b	247ac0 <link_unsigned_attribute+0x15c>
  247a68:	mov	w22, w0
  247a6c:	stur	xzr, [x29, #-16]
  247a70:	cbz	x20, 247a84 <link_unsigned_attribute+0x120>
  247a74:	mov	w0, #0x1                   	// #1
  247a78:	bl	2535b0 <log_get_max_level_realm@plt>
  247a7c:	cmp	w0, #0x4
  247a80:	b.ge	247b04 <link_unsigned_attribute+0x1a0>  // b.tcont
  247a84:	ldp	x6, x8, [x29, #-16]
  247a88:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  247a8c:	add	x9, x9, #0xb64
  247a90:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247a94:	stp	x19, x8, [sp, #16]
  247a98:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  247a9c:	cmp	x6, #0x0
  247aa0:	add	x8, x8, #0x755
  247aa4:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  247aa8:	csel	x5, xzr, x9, eq  // eq = none
  247aac:	add	x2, x2, #0xa24
  247ab0:	add	x4, x4, #0x443
  247ab4:	str	x8, [sp, #8]
  247ab8:	mov	w0, #0x4                   	// #4
  247abc:	mov	w3, #0xc6                  	// #198
  247ac0:	mov	w1, w22
  247ac4:	mov	x7, xzr
  247ac8:	str	xzr, [sp]
  247acc:	bl	2539f0 <log_object_internal@plt>
  247ad0:	ldp	x20, x19, [sp, #80]
  247ad4:	ldp	x22, x21, [sp, #64]
  247ad8:	ldp	x29, x30, [sp, #48]
  247adc:	add	sp, sp, #0x60
  247ae0:	ret
  247ae4:	sub	x1, x29, #0x10
  247ae8:	mov	x0, x20
  247aec:	bl	253a40 <sd_device_get_sysname@plt>
  247af0:	b	2479b8 <link_unsigned_attribute+0x54>
  247af4:	sub	x1, x29, #0x10
  247af8:	mov	x0, x20
  247afc:	bl	253a40 <sd_device_get_sysname@plt>
  247b00:	b	247a2c <link_unsigned_attribute+0xc8>
  247b04:	sub	x1, x29, #0x10
  247b08:	mov	x0, x20
  247b0c:	bl	253a40 <sd_device_get_sysname@plt>
  247b10:	b	247a84 <link_unsigned_attribute+0x120>

0000000000247b14 <link_config_apply>:
  247b14:	sub	sp, sp, #0xa0
  247b18:	stp	x29, x30, [sp, #64]
  247b1c:	add	x29, sp, #0x40
  247b20:	stp	x28, x27, [sp, #80]
  247b24:	stp	x26, x25, [sp, #96]
  247b28:	stp	x24, x23, [sp, #112]
  247b2c:	stp	x22, x21, [sp, #128]
  247b30:	stp	x20, x19, [sp, #144]
  247b34:	stur	xzr, [x29, #-8]
  247b38:	stur	wzr, [x29, #-20]
  247b3c:	cbz	x0, 2483f0 <link_config_apply+0x8dc>
  247b40:	mov	x21, x1
  247b44:	cbz	x1, 248414 <link_config_apply+0x900>
  247b48:	mov	x20, x2
  247b4c:	cbz	x2, 248438 <link_config_apply+0x924>
  247b50:	mov	x19, x3
  247b54:	cbz	x3, 24845c <link_config_apply+0x948>
  247b58:	mov	x22, x0
  247b5c:	sub	x1, x29, #0x10
  247b60:	mov	x0, x20
  247b64:	bl	253a40 <sd_device_get_sysname@plt>
  247b68:	tbnz	w0, #31, 248288 <link_config_apply+0x774>
  247b6c:	ldur	x1, [x29, #-16]
  247b70:	ldr	x4, [x21, #120]
  247b74:	ldp	w5, w2, [x21, #128]
  247b78:	ldr	w6, [x21, #152]
  247b7c:	add	x23, x22, #0x8
  247b80:	add	x25, x21, #0x88
  247b84:	mov	x0, x23
  247b88:	mov	x3, x25
  247b8c:	bl	254980 <ethtool_set_glinksettings@plt>
  247b90:	tbnz	w0, #31, 247d94 <link_config_apply+0x280>
  247b94:	ldur	x1, [x29, #-16]
  247b98:	ldr	w2, [x21, #148]
  247b9c:	mov	x0, x23
  247ba0:	bl	254990 <ethtool_set_wol@plt>
  247ba4:	tbz	w0, #31, 247bf8 <link_config_apply+0xe4>
  247ba8:	mov	w24, w0
  247bac:	mov	w0, #0x1                   	// #1
  247bb0:	bl	2535b0 <log_get_max_level_realm@plt>
  247bb4:	cmp	w0, #0x4
  247bb8:	b.lt	247bf8 <link_config_apply+0xe4>  // b.tstop
  247bbc:	ldr	w0, [x21, #148]
  247bc0:	ldur	x25, [x29, #-16]
  247bc4:	bl	2549a0 <wol_to_string@plt>
  247bc8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247bcc:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247bd0:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  247bd4:	mov	x7, x0
  247bd8:	add	x2, x2, #0xa24
  247bdc:	add	x4, x4, #0xc28
  247be0:	add	x5, x5, #0x380
  247be4:	mov	w0, #0x404                 	// #1028
  247be8:	mov	w3, #0x174                 	// #372
  247bec:	mov	w1, w24
  247bf0:	mov	x6, x25
  247bf4:	bl	2535c0 <log_internal_realm@plt>
  247bf8:	ldur	x1, [x29, #-16]
  247bfc:	add	x2, x21, #0x9c
  247c00:	mov	x0, x23
  247c04:	bl	2549b0 <ethtool_set_features@plt>
  247c08:	tbz	w0, #31, 247c4c <link_config_apply+0x138>
  247c0c:	mov	w24, w0
  247c10:	mov	w0, #0x1                   	// #1
  247c14:	bl	2535b0 <log_get_max_level_realm@plt>
  247c18:	cmp	w0, #0x4
  247c1c:	b.lt	247c4c <link_config_apply+0x138>  // b.tstop
  247c20:	ldur	x6, [x29, #-16]
  247c24:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247c28:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247c2c:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  247c30:	add	x2, x2, #0xa24
  247c34:	add	x4, x4, #0xc28
  247c38:	add	x5, x5, #0xcd
  247c3c:	mov	w0, #0x404                 	// #1028
  247c40:	mov	w3, #0x178                 	// #376
  247c44:	mov	w1, w24
  247c48:	bl	2535c0 <log_internal_realm@plt>
  247c4c:	ldrb	w8, [x21, #192]
  247c50:	cbnz	w8, 247c6c <link_config_apply+0x158>
  247c54:	ldrb	w8, [x21, #193]
  247c58:	cbnz	w8, 247c6c <link_config_apply+0x158>
  247c5c:	ldrb	w8, [x21, #194]
  247c60:	cbnz	w8, 247c6c <link_config_apply+0x158>
  247c64:	ldrb	w8, [x21, #195]
  247c68:	cbz	w8, 247cc0 <link_config_apply+0x1ac>
  247c6c:	ldur	x1, [x29, #-16]
  247c70:	add	x2, x21, #0xb0
  247c74:	mov	x0, x23
  247c78:	bl	2549c0 <ethtool_set_channels@plt>
  247c7c:	tbz	w0, #31, 247cc0 <link_config_apply+0x1ac>
  247c80:	mov	w24, w0
  247c84:	mov	w0, #0x1                   	// #1
  247c88:	bl	2535b0 <log_get_max_level_realm@plt>
  247c8c:	cmp	w0, #0x4
  247c90:	b.lt	247cc0 <link_config_apply+0x1ac>  // b.tstop
  247c94:	ldur	x6, [x29, #-16]
  247c98:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247c9c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247ca0:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  247ca4:	add	x2, x2, #0xa24
  247ca8:	add	x4, x4, #0xc28
  247cac:	add	x5, x5, #0x945
  247cb0:	mov	w0, #0x404                 	// #1028
  247cb4:	mov	w3, #0x17d                 	// #381
  247cb8:	mov	w1, w24
  247cbc:	bl	2535c0 <log_internal_realm@plt>
  247cc0:	ldrb	w8, [x21, #204]
  247cc4:	cbnz	w8, 247cd0 <link_config_apply+0x1bc>
  247cc8:	ldrb	w8, [x21, #205]
  247ccc:	cbz	w8, 247d24 <link_config_apply+0x210>
  247cd0:	ldur	x1, [x29, #-16]
  247cd4:	add	x2, x21, #0xc4
  247cd8:	mov	x0, x23
  247cdc:	bl	2549d0 <ethtool_set_nic_buffer_size@plt>
  247ce0:	tbz	w0, #31, 247d24 <link_config_apply+0x210>
  247ce4:	mov	w23, w0
  247ce8:	mov	w0, #0x1                   	// #1
  247cec:	bl	2535b0 <log_get_max_level_realm@plt>
  247cf0:	cmp	w0, #0x4
  247cf4:	b.lt	247d24 <link_config_apply+0x210>  // b.tstop
  247cf8:	ldur	x6, [x29, #-16]
  247cfc:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247d00:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247d04:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  247d08:	add	x2, x2, #0xa24
  247d0c:	add	x4, x4, #0xc28
  247d10:	add	x5, x5, #0xc81
  247d14:	mov	w0, #0x404                 	// #1028
  247d18:	mov	w3, #0x183                 	// #387
  247d1c:	mov	w1, w23
  247d20:	bl	2535c0 <log_internal_realm@plt>
  247d24:	sub	x1, x29, #0x18
  247d28:	mov	x0, x20
  247d2c:	bl	253c00 <sd_device_get_ifindex@plt>
  247d30:	tbnz	w0, #31, 247f28 <link_config_apply+0x414>
  247d34:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  247d38:	add	x1, x1, #0x36f
  247d3c:	sub	x2, x29, #0x14
  247d40:	mov	x0, x20
  247d44:	bl	247964 <link_unsigned_attribute>
  247d48:	ldur	w8, [x29, #-20]
  247d4c:	sub	w8, w8, #0x3
  247d50:	cmp	w8, #0x1
  247d54:	b.hi	247d64 <link_config_apply+0x250>  // b.pmore
  247d58:	mov	w0, #0x10                  	// #16
  247d5c:	bl	2484a4 <naming_scheme_has>
  247d60:	tbz	w0, #0, 247ffc <link_config_apply+0x4e8>
  247d64:	ldrb	w8, [x22, #12]
  247d68:	cbz	w8, 247f88 <link_config_apply+0x474>
  247d6c:	ldr	x25, [x21, #88]
  247d70:	cbz	x25, 24804c <link_config_apply+0x538>
  247d74:	ldur	x8, [x29, #-8]
  247d78:	cbz	x8, 2480b8 <link_config_apply+0x5a4>
  247d7c:	mov	w8, #0xc                   	// #12
  247d80:	cmp	w8, #0xb
  247d84:	b.eq	2481e4 <link_config_apply+0x6d0>  // b.none
  247d88:	cmp	w8, #0xc
  247d8c:	b.eq	247f88 <link_config_apply+0x474>  // b.none
  247d90:	b	248288 <link_config_apply+0x774>
  247d94:	ldr	w26, [x21, #152]
  247d98:	mov	w24, w0
  247d9c:	cmn	w26, #0x1
  247da0:	b.eq	247dec <link_config_apply+0x2d8>  // b.none
  247da4:	mov	w0, #0x1                   	// #1
  247da8:	bl	2535b0 <log_get_max_level_realm@plt>
  247dac:	cmp	w0, #0x4
  247db0:	b.lt	247dec <link_config_apply+0x2d8>  // b.tstop
  247db4:	mov	w0, w26
  247db8:	bl	2549e0 <port_to_string@plt>
  247dbc:	ldur	x7, [x29, #-16]
  247dc0:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247dc4:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247dc8:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  247dcc:	mov	x6, x0
  247dd0:	add	x2, x2, #0xa24
  247dd4:	add	x4, x4, #0xc28
  247dd8:	add	x5, x5, #0x923
  247ddc:	mov	w0, #0x404                 	// #1028
  247de0:	mov	w3, #0x15f                 	// #351
  247de4:	mov	w1, w24
  247de8:	bl	2535c0 <log_internal_realm@plt>
  247dec:	mov	w1, #0xc                   	// #12
  247df0:	mov	x0, x25
  247df4:	bl	2549f0 <memeqzero@plt>
  247df8:	tbnz	w0, #0, 247e34 <link_config_apply+0x320>
  247dfc:	mov	w0, #0x1                   	// #1
  247e00:	bl	2535b0 <log_get_max_level_realm@plt>
  247e04:	cmp	w0, #0x4
  247e08:	b.lt	247e34 <link_config_apply+0x320>  // b.tstop
  247e0c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247e10:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247e14:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  247e18:	add	x2, x2, #0xa24
  247e1c:	add	x4, x4, #0xc28
  247e20:	add	x5, x5, #0x216
  247e24:	mov	w0, #0x404                 	// #1028
  247e28:	mov	w3, #0x162                 	// #354
  247e2c:	mov	w1, w24
  247e30:	bl	2535c0 <log_internal_realm@plt>
  247e34:	ldr	x8, [x21, #120]
  247e38:	cbz	x8, 247ecc <link_config_apply+0x3b8>
  247e3c:	mov	x9, #0x34db                	// #13531
  247e40:	movk	x9, #0xd7b6, lsl #16
  247e44:	movk	x9, #0xde82, lsl #32
  247e48:	movk	x9, #0x431b, lsl #48
  247e4c:	mov	w10, #0x4240                	// #16960
  247e50:	umulh	x9, x8, x9
  247e54:	movk	w10, #0xf, lsl #16
  247e58:	lsr	x9, x9, #18
  247e5c:	msub	x8, x9, x10, x8
  247e60:	cmp	x8, #0x0
  247e64:	cinc	w25, w9, ne  // ne = any
  247e68:	cmn	w24, #0x5f
  247e6c:	b.ne	247ecc <link_config_apply+0x3b8>  // b.any
  247e70:	ldur	x1, [x29, #-16]
  247e74:	ldr	w3, [x21, #128]
  247e78:	mov	x0, x23
  247e7c:	mov	w2, w25
  247e80:	bl	254a00 <ethtool_set_speed@plt>
  247e84:	mov	w24, w0
  247e88:	tbz	w0, #31, 247ecc <link_config_apply+0x3b8>
  247e8c:	mov	w0, #0x1                   	// #1
  247e90:	bl	2535b0 <log_get_max_level_realm@plt>
  247e94:	cmp	w0, #0x4
  247e98:	b.lt	247ecc <link_config_apply+0x3b8>  // b.tstop
  247e9c:	ldur	x6, [x29, #-16]
  247ea0:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247ea4:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247ea8:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  247eac:	add	x2, x2, #0xa24
  247eb0:	add	x4, x4, #0xc28
  247eb4:	add	x5, x5, #0x99
  247eb8:	mov	w0, #0x404                 	// #1028
  247ebc:	mov	w3, #0x169                 	// #361
  247ec0:	mov	w1, w24
  247ec4:	mov	w7, w25
  247ec8:	bl	2535c0 <log_internal_realm@plt>
  247ecc:	ldr	w25, [x21, #128]
  247ed0:	cmn	w25, #0x1
  247ed4:	b.eq	247b94 <link_config_apply+0x80>  // b.none
  247ed8:	mov	w0, #0x1                   	// #1
  247edc:	bl	2535b0 <log_get_max_level_realm@plt>
  247ee0:	cmp	w0, #0x4
  247ee4:	b.lt	247b94 <link_config_apply+0x80>  // b.tstop
  247ee8:	ldur	x26, [x29, #-16]
  247eec:	mov	w0, w25
  247ef0:	bl	254a10 <duplex_to_string@plt>
  247ef4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247ef8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247efc:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  247f00:	mov	x7, x0
  247f04:	add	x2, x2, #0xa24
  247f08:	add	x4, x4, #0xc28
  247f0c:	add	x5, x5, #0x962
  247f10:	mov	w0, #0x404                 	// #1028
  247f14:	mov	w3, #0x16e                 	// #366
  247f18:	mov	w1, w24
  247f1c:	mov	x6, x26
  247f20:	bl	2535c0 <log_internal_realm@plt>
  247f24:	b	247b94 <link_config_apply+0x80>
  247f28:	mov	w23, w0
  247f2c:	mov	w0, #0x1                   	// #1
  247f30:	str	xzr, [sp, #32]
  247f34:	bl	2535b0 <log_get_max_level_realm@plt>
  247f38:	cmp	w0, #0x4
  247f3c:	b.ge	248380 <link_config_apply+0x86c>  // b.tcont
  247f40:	ldr	x6, [sp, #32]
  247f44:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  247f48:	add	x8, x8, #0xb64
  247f4c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247f50:	cmp	x6, #0x0
  247f54:	csel	x5, xzr, x8, eq  // eq = none
  247f58:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  247f5c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247f60:	add	x8, x8, #0xb86
  247f64:	add	x2, x2, #0xa24
  247f68:	add	x4, x4, #0xc28
  247f6c:	mov	w0, #0x4                   	// #4
  247f70:	mov	w3, #0x188                 	// #392
  247f74:	mov	w1, w23
  247f78:	mov	x7, xzr
  247f7c:	stp	xzr, x8, [sp]
  247f80:	bl	2539f0 <log_object_internal@plt>
  247f84:	b	248288 <link_config_apply+0x774>
  247f88:	ldur	x8, [x29, #-8]
  247f8c:	cbz	x8, 248054 <link_config_apply+0x540>
  247f90:	mov	w0, #0x1                   	// #1
  247f94:	str	xzr, [sp, #32]
  247f98:	bl	2535b0 <log_get_max_level_realm@plt>
  247f9c:	cmp	w0, #0x7
  247fa0:	b.ge	248390 <link_config_apply+0x87c>  // b.tcont
  247fa4:	ldr	x24, [sp, #32]
  247fa8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  247fac:	add	x8, x8, #0xb64
  247fb0:	mov	w0, w23
  247fb4:	cmp	x24, #0x0
  247fb8:	csel	x25, xzr, x8, eq  // eq = none
  247fbc:	bl	2484d0 <name_policy_to_string>
  247fc0:	ldur	x8, [x29, #-8]
  247fc4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  247fc8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  247fcc:	add	x2, x2, #0xa24
  247fd0:	stp	x0, x8, [sp, #16]
  247fd4:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  247fd8:	add	x8, x8, #0x3a
  247fdc:	add	x4, x4, #0xc28
  247fe0:	stp	xzr, x8, [sp]
  247fe4:	mov	w0, #0x7                   	// #7
  247fe8:	mov	w3, #0x1bb                 	// #443
  247fec:	mov	w1, wzr
  247ff0:	mov	x5, x25
  247ff4:	mov	x6, x24
  247ff8:	b	2481dc <link_config_apply+0x6c8>
  247ffc:	mov	w0, #0x1                   	// #1
  248000:	str	xzr, [sp, #32]
  248004:	bl	2535b0 <log_get_max_level_realm@plt>
  248008:	cmp	w0, #0x7
  24800c:	b.ge	2483a0 <link_config_apply+0x88c>  // b.tcont
  248010:	ldr	x6, [sp, #32]
  248014:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  248018:	add	x8, x8, #0xb64
  24801c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248020:	cmp	x6, #0x0
  248024:	csel	x5, xzr, x8, eq  // eq = none
  248028:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  24802c:	add	x8, x8, #0x59d
  248030:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  248034:	add	x2, x2, #0xa24
  248038:	add	x4, x4, #0xc28
  24803c:	str	x8, [sp, #8]
  248040:	mov	w0, #0x7                   	// #7
  248044:	mov	w3, #0x18e                 	// #398
  248048:	b	2481d4 <link_config_apply+0x6c0>
  24804c:	ldur	x8, [x29, #-8]
  248050:	cbnz	x8, 247f90 <link_config_apply+0x47c>
  248054:	ldr	x8, [x21, #96]
  248058:	cbz	x8, 248188 <link_config_apply+0x674>
  24805c:	mov	w0, #0x1                   	// #1
  248060:	stur	x8, [x29, #-8]
  248064:	str	xzr, [sp, #32]
  248068:	bl	2535b0 <log_get_max_level_realm@plt>
  24806c:	cmp	w0, #0x7
  248070:	b.ge	2483b0 <link_config_apply+0x89c>  // b.tcont
  248074:	ldur	x8, [x29, #-8]
  248078:	ldr	x6, [sp, #32]
  24807c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  248080:	add	x9, x9, #0xb64
  248084:	str	x8, [sp, #16]
  248088:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  24808c:	cmp	x6, #0x0
  248090:	add	x8, x8, #0x951
  248094:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248098:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24809c:	csel	x5, xzr, x9, eq  // eq = none
  2480a0:	add	x2, x2, #0xa24
  2480a4:	add	x4, x4, #0xc28
  2480a8:	str	x8, [sp, #8]
  2480ac:	mov	w0, #0x7                   	// #7
  2480b0:	mov	w3, #0x1be                 	// #446
  2480b4:	b	2481d4 <link_config_apply+0x6c0>
  2480b8:	adrp	x26, 218000 <worker_hash_op+0xdad0>
  2480bc:	adrp	x27, 20d000 <worker_hash_op+0x2ad0>
  2480c0:	adrp	x28, 217000 <worker_hash_op+0xcad0>
  2480c4:	add	x26, x26, #0xc9c
  2480c8:	add	x27, x27, #0xe31
  2480cc:	add	x28, x28, #0x888
  2480d0:	b	2480f4 <link_config_apply+0x5e0>
  2480d4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  2480d8:	sub	x2, x29, #0x8
  2480dc:	mov	x0, x20
  2480e0:	add	x1, x1, #0x19
  2480e4:	bl	253be0 <sd_device_get_property_value@plt>
  2480e8:	ldur	x8, [x29, #-8]
  2480ec:	add	x25, x25, #0x4
  2480f0:	cbnz	x8, 2482a8 <link_config_apply+0x794>
  2480f4:	mov	w23, w24
  2480f8:	ldr	w24, [x25]
  2480fc:	add	w8, w24, #0x1
  248100:	cmp	w8, #0x7
  248104:	b.hi	248480 <link_config_apply+0x96c>  // b.pmore
  248108:	adr	x9, 247d80 <link_config_apply+0x26c>
  24810c:	ldrb	w10, [x26, x8]
  248110:	add	x9, x9, x10, lsl #2
  248114:	mov	w8, #0xc                   	// #12
  248118:	br	x9
  24811c:	ldur	w8, [x29, #-20]
  248120:	cmp	w8, #0x2
  248124:	b.ne	2480e8 <link_config_apply+0x5d4>  // b.any
  248128:	b	248308 <link_config_apply+0x7f4>
  24812c:	ldur	w8, [x29, #-20]
  248130:	sub	w8, w8, #0x3
  248134:	cmp	w8, #0x1
  248138:	b.hi	2480e8 <link_config_apply+0x5d4>  // b.pmore
  24813c:	b	2482b0 <link_config_apply+0x79c>
  248140:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  248144:	sub	x2, x29, #0x8
  248148:	mov	x0, x20
  24814c:	add	x1, x1, #0xf57
  248150:	b	2480e4 <link_config_apply+0x5d0>
  248154:	sub	x2, x29, #0x8
  248158:	mov	x0, x20
  24815c:	mov	x1, x28
  248160:	b	2480e4 <link_config_apply+0x5d0>
  248164:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  248168:	sub	x2, x29, #0x8
  24816c:	mov	x0, x20
  248170:	add	x1, x1, #0x776
  248174:	b	2480e4 <link_config_apply+0x5d0>
  248178:	sub	x2, x29, #0x8
  24817c:	mov	x0, x20
  248180:	mov	x1, x27
  248184:	b	2480e4 <link_config_apply+0x5d0>
  248188:	mov	w0, #0x1                   	// #1
  24818c:	str	xzr, [sp, #32]
  248190:	bl	2535b0 <log_get_max_level_realm@plt>
  248194:	cmp	w0, #0x7
  248198:	b.ge	2483c0 <link_config_apply+0x8ac>  // b.tcont
  24819c:	ldr	x6, [sp, #32]
  2481a0:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2481a4:	add	x8, x8, #0xb64
  2481a8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2481ac:	cmp	x6, #0x0
  2481b0:	csel	x5, xzr, x8, eq  // eq = none
  2481b4:	adrp	x8, 214000 <worker_hash_op+0x9ad0>
  2481b8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  2481bc:	add	x8, x8, #0xdb1
  2481c0:	add	x2, x2, #0xa24
  2481c4:	add	x4, x4, #0xc28
  2481c8:	mov	w0, #0x7                   	// #7
  2481cc:	mov	w3, #0x1c0                 	// #448
  2481d0:	str	x8, [sp, #8]
  2481d4:	mov	w1, wzr
  2481d8:	str	xzr, [sp]
  2481dc:	mov	x7, xzr
  2481e0:	bl	2539f0 <log_object_internal@plt>
  2481e4:	ldr	w1, [x21, #80]
  2481e8:	cmp	w1, #0x1
  2481ec:	b.hi	24820c <link_config_apply+0x6f8>  // b.pmore
  2481f0:	add	x2, sp, #0x20
  2481f4:	mov	x0, x20
  2481f8:	add	x23, sp, #0x20
  2481fc:	bl	2484f0 <get_mac>
  248200:	cmp	w0, #0x0
  248204:	csel	x3, x23, xzr, gt
  248208:	b	248210 <link_config_apply+0x6fc>
  24820c:	ldr	x3, [x21, #72]
  248210:	ldur	w1, [x29, #-24]
  248214:	ldr	x2, [x21, #104]
  248218:	ldr	w4, [x21, #112]
  24821c:	add	x0, x22, #0x10
  248220:	bl	254a20 <rtnl_set_link_properties@plt>
  248224:	tbnz	w0, #31, 248238 <link_config_apply+0x724>
  248228:	ldur	x8, [x29, #-8]
  24822c:	mov	w0, wzr
  248230:	str	x8, [x19]
  248234:	b	248288 <link_config_apply+0x774>
  248238:	mov	w20, w0
  24823c:	mov	w0, #0x1                   	// #1
  248240:	bl	2535b0 <log_get_max_level_realm@plt>
  248244:	cmp	w0, #0x4
  248248:	b.lt	24827c <link_config_apply+0x768>  // b.tstop
  24824c:	ldur	x6, [x29, #-16]
  248250:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248254:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  248258:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  24825c:	add	x2, x2, #0xa24
  248260:	add	x4, x4, #0xc28
  248264:	add	x5, x5, #0xef5
  248268:	mov	w0, #0x404                 	// #1028
  24826c:	mov	w3, #0x1cb                 	// #459
  248270:	mov	w1, w20
  248274:	bl	2535c0 <log_internal_realm@plt>
  248278:	b	248288 <link_config_apply+0x774>
  24827c:	mov	w8, wzr
  248280:	neg	w9, w20
  248284:	sub	w0, w8, w9, uxtb
  248288:	ldp	x20, x19, [sp, #144]
  24828c:	ldp	x22, x21, [sp, #128]
  248290:	ldp	x24, x23, [sp, #112]
  248294:	ldp	x26, x25, [sp, #96]
  248298:	ldp	x28, x27, [sp, #80]
  24829c:	ldp	x29, x30, [sp, #64]
  2482a0:	add	sp, sp, #0xa0
  2482a4:	ret
  2482a8:	mov	w8, #0xc                   	// #12
  2482ac:	b	248378 <link_config_apply+0x864>
  2482b0:	mov	w0, #0x1                   	// #1
  2482b4:	str	xzr, [sp, #32]
  2482b8:	bl	2535b0 <log_get_max_level_realm@plt>
  2482bc:	cmp	w0, #0x7
  2482c0:	b.ge	2483d0 <link_config_apply+0x8bc>  // b.tcont
  2482c4:	ldr	x23, [sp, #32]
  2482c8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2482cc:	add	x8, x8, #0xb64
  2482d0:	mov	w0, w24
  2482d4:	cmp	x23, #0x0
  2482d8:	csel	x25, xzr, x8, eq  // eq = none
  2482dc:	bl	2484d0 <name_policy_to_string>
  2482e0:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  2482e4:	add	x8, x8, #0xf6
  2482e8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2482ec:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  2482f0:	add	x2, x2, #0xa24
  2482f4:	add	x4, x4, #0xc28
  2482f8:	stp	x8, x0, [sp, #8]
  2482fc:	mov	w0, #0x7                   	// #7
  248300:	mov	w3, #0x1a4                 	// #420
  248304:	b	24835c <link_config_apply+0x848>
  248308:	mov	w0, #0x1                   	// #1
  24830c:	str	xzr, [sp, #32]
  248310:	bl	2535b0 <log_get_max_level_realm@plt>
  248314:	cmp	w0, #0x7
  248318:	b.ge	2483e0 <link_config_apply+0x8cc>  // b.tcont
  24831c:	ldr	x23, [sp, #32]
  248320:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  248324:	add	x8, x8, #0xb64
  248328:	mov	w0, w24
  24832c:	cmp	x23, #0x0
  248330:	csel	x25, xzr, x8, eq  // eq = none
  248334:	bl	2484d0 <name_policy_to_string>
  248338:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  24833c:	add	x8, x8, #0x987
  248340:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248344:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  248348:	add	x2, x2, #0xa24
  24834c:	add	x4, x4, #0xc28
  248350:	stp	x8, x0, [sp, #8]
  248354:	mov	w0, #0x7                   	// #7
  248358:	mov	w3, #0x19d                 	// #413
  24835c:	mov	w1, wzr
  248360:	mov	x5, x25
  248364:	mov	x6, x23
  248368:	mov	x7, xzr
  24836c:	str	xzr, [sp]
  248370:	bl	2539f0 <log_object_internal@plt>
  248374:	mov	w8, #0xb                   	// #11
  248378:	mov	w23, w24
  24837c:	b	247d80 <link_config_apply+0x26c>
  248380:	add	x1, sp, #0x20
  248384:	mov	x0, x20
  248388:	bl	253a40 <sd_device_get_sysname@plt>
  24838c:	b	247f40 <link_config_apply+0x42c>
  248390:	add	x1, sp, #0x20
  248394:	mov	x0, x20
  248398:	bl	253a40 <sd_device_get_sysname@plt>
  24839c:	b	247fa4 <link_config_apply+0x490>
  2483a0:	add	x1, sp, #0x20
  2483a4:	mov	x0, x20
  2483a8:	bl	253a40 <sd_device_get_sysname@plt>
  2483ac:	b	248010 <link_config_apply+0x4fc>
  2483b0:	add	x1, sp, #0x20
  2483b4:	mov	x0, x20
  2483b8:	bl	253a40 <sd_device_get_sysname@plt>
  2483bc:	b	248074 <link_config_apply+0x560>
  2483c0:	add	x1, sp, #0x20
  2483c4:	mov	x0, x20
  2483c8:	bl	253a40 <sd_device_get_sysname@plt>
  2483cc:	b	24819c <link_config_apply+0x688>
  2483d0:	add	x1, sp, #0x20
  2483d4:	mov	x0, x20
  2483d8:	bl	253a40 <sd_device_get_sysname@plt>
  2483dc:	b	2482c4 <link_config_apply+0x7b0>
  2483e0:	add	x1, sp, #0x20
  2483e4:	mov	x0, x20
  2483e8:	bl	253a40 <sd_device_get_sysname@plt>
  2483ec:	b	24831c <link_config_apply+0x808>
  2483f0:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  2483f4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2483f8:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2483fc:	add	x1, x1, #0x1a2
  248400:	add	x2, x2, #0xa24
  248404:	add	x4, x4, #0xe7f
  248408:	mov	w0, #0x1                   	// #1
  24840c:	mov	w3, #0x150                 	// #336
  248410:	bl	253740 <log_assert_failed_realm@plt>
  248414:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  248418:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24841c:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  248420:	add	x1, x1, #0xad9
  248424:	add	x2, x2, #0xa24
  248428:	add	x4, x4, #0xe7f
  24842c:	mov	w0, #0x1                   	// #1
  248430:	mov	w3, #0x151                 	// #337
  248434:	bl	253740 <log_assert_failed_realm@plt>
  248438:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24843c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248440:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  248444:	add	x1, x1, #0x2ed
  248448:	add	x2, x2, #0xa24
  24844c:	add	x4, x4, #0xe7f
  248450:	mov	w0, #0x1                   	// #1
  248454:	mov	w3, #0x152                 	// #338
  248458:	bl	253740 <log_assert_failed_realm@plt>
  24845c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  248460:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248464:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  248468:	add	x1, x1, #0xefb
  24846c:	add	x2, x2, #0xa24
  248470:	add	x4, x4, #0xe7f
  248474:	mov	w0, #0x1                   	// #1
  248478:	mov	w3, #0x153                 	// #339
  24847c:	bl	253740 <log_assert_failed_realm@plt>
  248480:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  248484:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248488:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  24848c:	add	x1, x1, #0xbf7
  248490:	add	x2, x2, #0xa24
  248494:	add	x4, x4, #0xe7f
  248498:	mov	w0, #0x1                   	// #1
  24849c:	mov	w3, #0x1b6                 	// #438
  2484a0:	bl	253730 <log_assert_failed_unreachable_realm@plt>

00000000002484a4 <naming_scheme_has>:
  2484a4:	stp	x29, x30, [sp, #-32]!
  2484a8:	str	x19, [sp, #16]
  2484ac:	mov	x29, sp
  2484b0:	mov	w19, w0
  2484b4:	bl	248efc <naming_scheme>
  2484b8:	ldr	w8, [x0, #8]
  2484bc:	bics	wzr, w19, w8
  2484c0:	ldr	x19, [sp, #16]
  2484c4:	cset	w0, eq  // eq = none
  2484c8:	ldp	x29, x30, [sp], #32
  2484cc:	ret

00000000002484d0 <name_policy_to_string>:
  2484d0:	cmp	w0, #0x6
  2484d4:	b.ls	2484e0 <name_policy_to_string+0x10>  // b.plast
  2484d8:	mov	x0, xzr
  2484dc:	ret
  2484e0:	adrp	x8, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  2484e4:	add	x8, x8, #0x7b8
  2484e8:	ldr	x0, [x8, w0, sxtw #3]
  2484ec:	ret

00000000002484f0 <get_mac>:
  2484f0:	sub	sp, sp, #0x60
  2484f4:	cmp	w1, #0x2
  2484f8:	stp	x29, x30, [sp, #48]
  2484fc:	str	x21, [sp, #64]
  248500:	stp	x20, x19, [sp, #80]
  248504:	add	x29, sp, #0x30
  248508:	b.cs	2488e4 <get_mac+0x3f4>  // b.hs, b.nlast
  24850c:	mov	w21, w1
  248510:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  248514:	mov	x19, x2
  248518:	add	x1, x1, #0xdb7
  24851c:	add	x2, x29, #0x1c
  248520:	mov	x20, x0
  248524:	bl	247964 <link_unsigned_attribute>
  248528:	tbnz	w0, #31, 24874c <get_mac+0x25c>
  24852c:	ldr	w8, [x29, #28]
  248530:	cmp	w8, #0x2
  248534:	b.cc	248598 <get_mac+0xa8>  // b.lo, b.ul, b.last
  248538:	b.eq	24861c <get_mac+0x12c>  // b.none
  24853c:	cmp	w8, #0x3
  248540:	b.ne	2486e4 <get_mac+0x1f4>  // b.any
  248544:	stur	xzr, [x29, #-8]
  248548:	cbz	x20, 24855c <get_mac+0x6c>
  24854c:	mov	w0, #0x1                   	// #1
  248550:	bl	2535b0 <log_get_max_level_realm@plt>
  248554:	cmp	w0, #0x7
  248558:	b.ge	248874 <get_mac+0x384>  // b.tcont
  24855c:	ldur	x6, [x29, #-8]
  248560:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  248564:	add	x8, x8, #0xb64
  248568:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24856c:	cmp	x6, #0x0
  248570:	csel	x5, xzr, x8, eq  // eq = none
  248574:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  248578:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24857c:	add	x8, x8, #0x1f6
  248580:	add	x2, x2, #0xa24
  248584:	add	x4, x4, #0x1ee
  248588:	mov	w0, #0x7                   	// #7
  24858c:	mov	w3, #0x121                 	// #289
  248590:	str	x8, [sp, #8]
  248594:	b	24873c <get_mac+0x24c>
  248598:	cmp	w21, #0x1
  24859c:	cset	w9, eq  // eq = none
  2485a0:	cmp	w8, #0x1
  2485a4:	cset	w8, ne  // ne = any
  2485a8:	cmp	w9, w8
  2485ac:	b.eq	248670 <get_mac+0x180>  // b.none
  2485b0:	stur	xzr, [x29, #-8]
  2485b4:	cbz	x20, 2485c8 <get_mac+0xd8>
  2485b8:	mov	w0, #0x1                   	// #1
  2485bc:	bl	2535b0 <log_get_max_level_realm@plt>
  2485c0:	cmp	w0, #0x7
  2485c4:	b.ge	248884 <get_mac+0x394>  // b.tcont
  2485c8:	ldur	x19, [x29, #-8]
  2485cc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2485d0:	add	x8, x8, #0xb64
  2485d4:	mov	w0, w21
  2485d8:	cmp	x19, #0x0
  2485dc:	csel	x20, xzr, x8, eq  // eq = none
  2485e0:	bl	248968 <mac_address_policy_to_string>
  2485e4:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  2485e8:	add	x8, x8, #0x988
  2485ec:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2485f0:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2485f4:	add	x2, x2, #0xa24
  2485f8:	add	x4, x4, #0x1ee
  2485fc:	stp	x8, x0, [sp, #8]
  248600:	mov	w0, #0x7                   	// #7
  248604:	mov	w3, #0x12d                 	// #301
  248608:	str	xzr, [sp]
  24860c:	mov	w1, wzr
  248610:	mov	x5, x20
  248614:	mov	x6, x19
  248618:	b	248744 <get_mac+0x254>
  24861c:	stur	xzr, [x29, #-8]
  248620:	cbz	x20, 248634 <get_mac+0x144>
  248624:	mov	w0, #0x1                   	// #1
  248628:	bl	2535b0 <log_get_max_level_realm@plt>
  24862c:	cmp	w0, #0x7
  248630:	b.ge	248894 <get_mac+0x3a4>  // b.tcont
  248634:	ldur	x6, [x29, #-8]
  248638:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24863c:	add	x8, x8, #0xb64
  248640:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248644:	cmp	x6, #0x0
  248648:	csel	x5, xzr, x8, eq  // eq = none
  24864c:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  248650:	add	x8, x8, #0xa5f
  248654:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  248658:	add	x2, x2, #0xa24
  24865c:	add	x4, x4, #0x1ee
  248660:	str	x8, [sp, #8]
  248664:	mov	w0, #0x7                   	// #7
  248668:	mov	w3, #0x123                 	// #291
  24866c:	b	24873c <get_mac+0x24c>
  248670:	cmp	w21, #0x1
  248674:	b.ne	248760 <get_mac+0x270>  // b.any
  248678:	stur	xzr, [x29, #-8]
  24867c:	cbz	x20, 248690 <get_mac+0x1a0>
  248680:	mov	w0, #0x1                   	// #1
  248684:	bl	2535b0 <log_get_max_level_realm@plt>
  248688:	cmp	w0, #0x7
  24868c:	b.ge	2488b4 <get_mac+0x3c4>  // b.tcont
  248690:	ldur	x6, [x29, #-8]
  248694:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  248698:	add	x8, x8, #0xb64
  24869c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2486a0:	cmp	x6, #0x0
  2486a4:	csel	x5, xzr, x8, eq  // eq = none
  2486a8:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2486ac:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2486b0:	add	x8, x8, #0x66c
  2486b4:	add	x2, x2, #0xa24
  2486b8:	add	x4, x4, #0x1ee
  2486bc:	mov	w0, #0x7                   	// #7
  2486c0:	mov	w3, #0x130                 	// #304
  2486c4:	mov	w1, wzr
  2486c8:	mov	x7, xzr
  2486cc:	stp	xzr, x8, [sp]
  2486d0:	bl	2539f0 <log_object_internal@plt>
  2486d4:	mov	w1, #0x6                   	// #6
  2486d8:	mov	x0, x19
  2486dc:	bl	254a30 <random_bytes@plt>
  2486e0:	b	24885c <get_mac+0x36c>
  2486e4:	stur	xzr, [x29, #-8]
  2486e8:	cbz	x20, 2486fc <get_mac+0x20c>
  2486ec:	mov	w0, #0x1                   	// #1
  2486f0:	bl	2535b0 <log_get_max_level_realm@plt>
  2486f4:	cmp	w0, #0x4
  2486f8:	b.ge	2488a4 <get_mac+0x3b4>  // b.tcont
  2486fc:	ldr	w8, [x29, #28]
  248700:	ldur	x6, [x29, #-8]
  248704:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  248708:	add	x9, x9, #0xb64
  24870c:	str	w8, [sp, #16]
  248710:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  248714:	cmp	x6, #0x0
  248718:	add	x8, x8, #0x9b4
  24871c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248720:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  248724:	csel	x5, xzr, x9, eq  // eq = none
  248728:	add	x2, x2, #0xa24
  24872c:	add	x4, x4, #0x1ee
  248730:	str	x8, [sp, #8]
  248734:	mov	w0, #0x4                   	// #4
  248738:	mov	w3, #0x128                 	// #296
  24873c:	mov	w1, wzr
  248740:	str	xzr, [sp]
  248744:	mov	x7, xzr
  248748:	bl	2539f0 <log_object_internal@plt>
  24874c:	ldp	x20, x19, [sp, #80]
  248750:	ldr	x21, [sp, #64]
  248754:	ldp	x29, x30, [sp, #48]
  248758:	add	sp, sp, #0x60
  24875c:	ret
  248760:	mov	w0, #0x20                  	// #32
  248764:	bl	2484a4 <naming_scheme_has>
  248768:	and	w1, w0, #0x1
  24876c:	sub	x2, x29, #0x8
  248770:	mov	x0, x20
  248774:	bl	24d4e8 <net_get_unique_predictable_data>
  248778:	tbnz	w0, #31, 2487f4 <get_mac+0x304>
  24877c:	stur	xzr, [x29, #-16]
  248780:	cbz	x20, 248794 <get_mac+0x2a4>
  248784:	mov	w0, #0x1                   	// #1
  248788:	bl	2535b0 <log_get_max_level_realm@plt>
  24878c:	cmp	w0, #0x7
  248790:	b.ge	2488c4 <get_mac+0x3d4>  // b.tcont
  248794:	ldur	x6, [x29, #-16]
  248798:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24879c:	add	x8, x8, #0xb64
  2487a0:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2487a4:	cmp	x6, #0x0
  2487a8:	csel	x5, xzr, x8, eq  // eq = none
  2487ac:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2487b0:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2487b4:	add	x8, x8, #0x68f
  2487b8:	add	x2, x2, #0xa24
  2487bc:	add	x4, x4, #0x1ee
  2487c0:	mov	w0, #0x7                   	// #7
  2487c4:	mov	w3, #0x13b                 	// #315
  2487c8:	mov	w1, wzr
  2487cc:	mov	x7, xzr
  2487d0:	stp	xzr, x8, [sp]
  2487d4:	bl	2539f0 <log_object_internal@plt>
  2487d8:	ldurh	w8, [x29, #-4]
  2487dc:	ldur	w9, [x29, #-8]
  2487e0:	strh	w8, [x19, #4]
  2487e4:	mov	w8, #0x1                   	// #1
  2487e8:	str	w9, [x19]
  2487ec:	cbz	w8, 24874c <get_mac+0x25c>
  2487f0:	b	24885c <get_mac+0x36c>
  2487f4:	mov	w21, w0
  2487f8:	stur	xzr, [x29, #-16]
  2487fc:	cbz	x20, 248810 <get_mac+0x320>
  248800:	mov	w0, #0x1                   	// #1
  248804:	bl	2535b0 <log_get_max_level_realm@plt>
  248808:	cmp	w0, #0x4
  24880c:	b.ge	2488d4 <get_mac+0x3e4>  // b.tcont
  248810:	ldur	x6, [x29, #-16]
  248814:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  248818:	add	x8, x8, #0xb64
  24881c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248820:	cmp	x6, #0x0
  248824:	csel	x5, xzr, x8, eq  // eq = none
  248828:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  24882c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  248830:	add	x8, x8, #0xf71
  248834:	add	x2, x2, #0xa24
  248838:	add	x4, x4, #0x1ee
  24883c:	mov	w0, #0x4                   	// #4
  248840:	mov	w3, #0x139                 	// #313
  248844:	mov	w1, w21
  248848:	mov	x7, xzr
  24884c:	stp	xzr, x8, [sp]
  248850:	bl	2539f0 <log_object_internal@plt>
  248854:	mov	w8, wzr
  248858:	cbz	w8, 24874c <get_mac+0x25c>
  24885c:	ldrb	w8, [x19]
  248860:	mov	w0, #0x1                   	// #1
  248864:	and	w8, w8, #0xfc
  248868:	orr	w8, w8, #0x2
  24886c:	strb	w8, [x19]
  248870:	b	24874c <get_mac+0x25c>
  248874:	sub	x1, x29, #0x8
  248878:	mov	x0, x20
  24887c:	bl	253a40 <sd_device_get_sysname@plt>
  248880:	b	24855c <get_mac+0x6c>
  248884:	sub	x1, x29, #0x8
  248888:	mov	x0, x20
  24888c:	bl	253a40 <sd_device_get_sysname@plt>
  248890:	b	2485c8 <get_mac+0xd8>
  248894:	sub	x1, x29, #0x8
  248898:	mov	x0, x20
  24889c:	bl	253a40 <sd_device_get_sysname@plt>
  2488a0:	b	248634 <get_mac+0x144>
  2488a4:	sub	x1, x29, #0x8
  2488a8:	mov	x0, x20
  2488ac:	bl	253a40 <sd_device_get_sysname@plt>
  2488b0:	b	2486fc <get_mac+0x20c>
  2488b4:	sub	x1, x29, #0x8
  2488b8:	mov	x0, x20
  2488bc:	bl	253a40 <sd_device_get_sysname@plt>
  2488c0:	b	248690 <get_mac+0x1a0>
  2488c4:	sub	x1, x29, #0x10
  2488c8:	mov	x0, x20
  2488cc:	bl	253a40 <sd_device_get_sysname@plt>
  2488d0:	b	248794 <get_mac+0x2a4>
  2488d4:	sub	x1, x29, #0x10
  2488d8:	mov	x0, x20
  2488dc:	bl	253a40 <sd_device_get_sysname@plt>
  2488e0:	b	248810 <get_mac+0x320>
  2488e4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  2488e8:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2488ec:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  2488f0:	add	x1, x1, #0x237
  2488f4:	add	x2, x2, #0xa24
  2488f8:	add	x4, x4, #0xcbe
  2488fc:	mov	w0, #0x1                   	// #1
  248900:	mov	w3, #0x11a                 	// #282
  248904:	bl	253740 <log_assert_failed_realm@plt>

0000000000248908 <link_get_driver>:
  248908:	sub	sp, sp, #0x30
  24890c:	mov	x8, x1
  248910:	stp	x20, x19, [sp, #32]
  248914:	mov	x20, x0
  248918:	add	x1, sp, #0x8
  24891c:	mov	x0, x8
  248920:	stp	x29, x30, [sp, #16]
  248924:	add	x29, sp, #0x10
  248928:	mov	x19, x2
  24892c:	str	xzr, [sp]
  248930:	bl	253a40 <sd_device_get_sysname@plt>
  248934:	tbnz	w0, #31, 248958 <link_get_driver+0x50>
  248938:	ldr	x1, [sp, #8]
  24893c:	add	x0, x20, #0x8
  248940:	mov	x2, sp
  248944:	bl	254a40 <ethtool_get_driver@plt>
  248948:	tbnz	w0, #31, 248958 <link_get_driver+0x50>
  24894c:	ldr	x8, [sp]
  248950:	mov	w0, wzr
  248954:	str	x8, [x19]
  248958:	ldp	x20, x19, [sp, #32]
  24895c:	ldp	x29, x30, [sp, #16]
  248960:	add	sp, sp, #0x30
  248964:	ret

0000000000248968 <mac_address_policy_to_string>:
  248968:	cmp	w0, #0x2
  24896c:	b.ls	248978 <mac_address_policy_to_string+0x10>  // b.plast
  248970:	mov	x0, xzr
  248974:	ret
  248978:	adrp	x8, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  24897c:	add	x8, x8, #0x7a0
  248980:	ldr	x0, [x8, w0, sxtw #3]
  248984:	ret

0000000000248988 <mac_address_policy_from_string>:
  248988:	stp	x29, x30, [sp, #-16]!
  24898c:	mov	x2, x0
  248990:	adrp	x0, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  248994:	add	x0, x0, #0x7a0
  248998:	mov	w1, #0x3                   	// #3
  24899c:	mov	x29, sp
  2489a0:	bl	254a50 <string_table_lookup@plt>
  2489a4:	ldp	x29, x30, [sp], #16
  2489a8:	ret

00000000002489ac <config_parse_mac_address_policy>:
  2489ac:	sub	sp, sp, #0x50
  2489b0:	stp	x29, x30, [sp, #16]
  2489b4:	str	x23, [sp, #32]
  2489b8:	stp	x22, x21, [sp, #48]
  2489bc:	stp	x20, x19, [sp, #64]
  2489c0:	add	x29, sp, #0x10
  2489c4:	cbz	x1, 248a60 <config_parse_mac_address_policy+0xb4>
  2489c8:	cbz	x5, 248a6c <config_parse_mac_address_policy+0xc0>
  2489cc:	mov	x22, x7
  2489d0:	cbz	x7, 248a78 <config_parse_mac_address_policy+0xcc>
  2489d4:	ldr	x23, [x29, #64]
  2489d8:	cbz	x23, 248a84 <config_parse_mac_address_policy+0xd8>
  2489dc:	mov	x21, x0
  2489e0:	mov	x0, x22
  2489e4:	mov	w19, w2
  2489e8:	mov	x20, x1
  2489ec:	bl	248988 <mac_address_policy_from_string>
  2489f0:	tbnz	w0, #31, 2489fc <config_parse_mac_address_policy+0x50>
  2489f4:	str	w0, [x23]
  2489f8:	b	248a44 <config_parse_mac_address_policy+0x98>
  2489fc:	mov	w0, #0x1                   	// #1
  248a00:	bl	2535b0 <log_get_max_level_realm@plt>
  248a04:	cmp	w0, #0x3
  248a08:	b.lt	248a44 <config_parse_mac_address_policy+0x98>  // b.tstop
  248a0c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  248a10:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  248a14:	adrp	x7, 216000 <worker_hash_op+0xbad0>
  248a18:	add	x8, x8, #0xdc7
  248a1c:	add	x5, x5, #0xa24
  248a20:	add	x7, x7, #0xa3f
  248a24:	mov	w1, #0x3                   	// #3
  248a28:	mov	w6, #0x1eb                 	// #491
  248a2c:	mov	x0, x21
  248a30:	mov	x2, x20
  248a34:	mov	w3, w19
  248a38:	mov	w4, wzr
  248a3c:	stp	x8, x22, [sp]
  248a40:	bl	254a60 <log_syntax_internal@plt>
  248a44:	ldp	x20, x19, [sp, #64]
  248a48:	ldp	x22, x21, [sp, #48]
  248a4c:	ldr	x23, [sp, #32]
  248a50:	ldp	x29, x30, [sp, #16]
  248a54:	mov	w0, wzr
  248a58:	add	sp, sp, #0x50
  248a5c:	ret
  248a60:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  248a64:	add	x1, x1, #0x4b9
  248a68:	b	248a8c <config_parse_mac_address_policy+0xe0>
  248a6c:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  248a70:	add	x1, x1, #0x510
  248a74:	b	248a8c <config_parse_mac_address_policy+0xe0>
  248a78:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  248a7c:	add	x1, x1, #0x3a8
  248a80:	b	248a8c <config_parse_mac_address_policy+0xe0>
  248a84:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  248a88:	add	x1, x1, #0x1ea
  248a8c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248a90:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  248a94:	add	x2, x2, #0xa24
  248a98:	add	x4, x4, #0x4c6
  248a9c:	mov	w0, #0x1                   	// #1
  248aa0:	mov	w3, #0x1eb                 	// #491
  248aa4:	bl	253740 <log_assert_failed_realm@plt>

0000000000248aa8 <name_policy_from_string>:
  248aa8:	stp	x29, x30, [sp, #-16]!
  248aac:	mov	x2, x0
  248ab0:	adrp	x0, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  248ab4:	add	x0, x0, #0x7b8
  248ab8:	mov	w1, #0x7                   	// #7
  248abc:	mov	x29, sp
  248ac0:	bl	254a50 <string_table_lookup@plt>
  248ac4:	ldp	x29, x30, [sp], #16
  248ac8:	ret

0000000000248acc <config_parse_name_policy>:
  248acc:	sub	sp, sp, #0xa0
  248ad0:	stp	x29, x30, [sp, #64]
  248ad4:	add	x29, sp, #0x40
  248ad8:	stp	x28, x27, [sp, #80]
  248adc:	stp	x26, x25, [sp, #96]
  248ae0:	stp	x24, x23, [sp, #112]
  248ae4:	stp	x22, x21, [sp, #128]
  248ae8:	stp	x20, x19, [sp, #144]
  248aec:	stur	xzr, [x29, #-8]
  248af0:	cbz	x1, 248d08 <config_parse_name_policy+0x23c>
  248af4:	cbz	x5, 248d14 <config_parse_name_policy+0x248>
  248af8:	mov	x22, x7
  248afc:	cbz	x7, 248d20 <config_parse_name_policy+0x254>
  248b00:	ldr	x23, [x29, #96]
  248b04:	cbz	x23, 248d2c <config_parse_name_policy+0x260>
  248b08:	mov	x20, x1
  248b0c:	mov	x21, x0
  248b10:	mov	w0, #0x1                   	// #1
  248b14:	mov	w1, #0x4                   	// #4
  248b18:	mov	w19, w2
  248b1c:	bl	254940 <calloc@plt>
  248b20:	stur	x0, [x29, #-8]
  248b24:	cbz	x0, 248cb8 <config_parse_name_policy+0x1ec>
  248b28:	mov	w8, #0xffffffff            	// #-1
  248b2c:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  248b30:	str	w8, [x0]
  248b34:	add	x2, x2, #0x33a
  248b38:	sub	x0, x29, #0x10
  248b3c:	sub	x1, x29, #0x18
  248b40:	mov	w3, wzr
  248b44:	str	x23, [sp, #24]
  248b48:	stur	x22, [x29, #-16]
  248b4c:	bl	254a70 <split@plt>
  248b50:	cbz	x0, 248cc0 <config_parse_name_policy+0x1f4>
  248b54:	adrp	x27, 218000 <worker_hash_op+0xdad0>
  248b58:	adrp	x23, 216000 <worker_hash_op+0xbad0>
  248b5c:	adrp	x24, 215000 <worker_hash_op+0xaad0>
  248b60:	mov	x28, xzr
  248b64:	add	x27, x27, #0x33a
  248b68:	add	x23, x23, #0xa24
  248b6c:	add	x24, x24, #0xca5
  248b70:	b	248b8c <config_parse_name_policy+0xc0>
  248b74:	sub	x0, x29, #0x10
  248b78:	sub	x1, x29, #0x18
  248b7c:	mov	x2, x27
  248b80:	mov	w3, wzr
  248b84:	bl	254a70 <split@plt>
  248b88:	cbz	x0, 248cc0 <config_parse_name_policy+0x1f4>
  248b8c:	ldur	x1, [x29, #-24]
  248b90:	str	xzr, [sp, #32]
  248b94:	bl	253a70 <strndup@plt>
  248b98:	str	x0, [sp, #32]
  248b9c:	cbz	x0, 248ca0 <config_parse_name_policy+0x1d4>
  248ba0:	mov	x25, x0
  248ba4:	bl	248aa8 <name_policy_from_string>
  248ba8:	tbnz	w0, #31, 248c20 <config_parse_name_policy+0x154>
  248bac:	ldur	x22, [x29, #-8]
  248bb0:	mov	x26, x22
  248bb4:	b	248bc8 <config_parse_name_policy+0xfc>
  248bb8:	mov	w0, #0xffffffff            	// #-1
  248bbc:	cmn	w0, #0x1
  248bc0:	add	x26, x26, #0x4
  248bc4:	b.eq	248c68 <config_parse_name_policy+0x19c>  // b.none
  248bc8:	ldr	w8, [x26]
  248bcc:	cmn	w8, #0x1
  248bd0:	b.eq	248c70 <config_parse_name_policy+0x1a4>  // b.none
  248bd4:	cmp	w8, w0
  248bd8:	b.ne	248bbc <config_parse_name_policy+0xf0>  // b.any
  248bdc:	mov	w0, #0x1                   	// #1
  248be0:	bl	2535b0 <log_get_max_level_realm@plt>
  248be4:	cmp	w0, #0x5
  248be8:	b.lt	248bb8 <config_parse_name_policy+0xec>  // b.tstop
  248bec:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  248bf0:	mov	w1, #0x5                   	// #5
  248bf4:	mov	w6, #0x1fa                 	// #506
  248bf8:	add	x8, x8, #0x94c
  248bfc:	mov	x0, x21
  248c00:	mov	x2, x20
  248c04:	mov	w3, w19
  248c08:	mov	w4, wzr
  248c0c:	mov	x5, x23
  248c10:	mov	x7, x24
  248c14:	stp	x8, x25, [sp]
  248c18:	bl	254a60 <log_syntax_internal@plt>
  248c1c:	b	248bb8 <config_parse_name_policy+0xec>
  248c20:	mov	w0, #0x1                   	// #1
  248c24:	bl	2535b0 <log_get_max_level_realm@plt>
  248c28:	cmp	w0, #0x3
  248c2c:	b.lt	248c68 <config_parse_name_policy+0x19c>  // b.tstop
  248c30:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  248c34:	mov	w1, #0x3                   	// #3
  248c38:	mov	w6, #0x1fa                 	// #506
  248c3c:	add	x8, x8, #0x123
  248c40:	mov	x0, x21
  248c44:	mov	x2, x20
  248c48:	mov	w3, w19
  248c4c:	mov	w4, wzr
  248c50:	mov	x5, x23
  248c54:	mov	x7, x24
  248c58:	stp	x8, x25, [sp]
  248c5c:	bl	254a60 <log_syntax_internal@plt>
  248c60:	mov	w22, #0xc                   	// #12
  248c64:	b	248ca4 <config_parse_name_policy+0x1d8>
  248c68:	mov	w22, #0xc                   	// #12
  248c6c:	b	248ca4 <config_parse_name_policy+0x1d8>
  248c70:	lsl	x8, x28, #2
  248c74:	str	w0, [x22, x8]
  248c78:	ldur	x0, [x29, #-8]
  248c7c:	add	x1, x8, #0x8
  248c80:	add	x28, x28, #0x1
  248c84:	bl	254a80 <realloc@plt>
  248c88:	cbz	x0, 248ca0 <config_parse_name_policy+0x1d4>
  248c8c:	mov	w22, wzr
  248c90:	mov	w8, #0xffffffff            	// #-1
  248c94:	stur	x0, [x29, #-8]
  248c98:	str	w8, [x0, x28, lsl #2]
  248c9c:	b	248ca4 <config_parse_name_policy+0x1d8>
  248ca0:	mov	w22, #0x1                   	// #1
  248ca4:	add	x0, sp, #0x20
  248ca8:	bl	2473b0 <freep>
  248cac:	cmp	w22, #0xc
  248cb0:	b.eq	248b74 <config_parse_name_policy+0xa8>  // b.none
  248cb4:	cbz	w22, 248b74 <config_parse_name_policy+0xa8>
  248cb8:	mov	w19, #0xfffffff4            	// #-12
  248cbc:	b	248cdc <config_parse_name_policy+0x210>
  248cc0:	ldr	x20, [sp, #24]
  248cc4:	ldr	x0, [x20]
  248cc8:	bl	2536e0 <free@plt>
  248ccc:	ldur	x8, [x29, #-8]
  248cd0:	mov	w19, wzr
  248cd4:	str	x8, [x20]
  248cd8:	stur	xzr, [x29, #-8]
  248cdc:	sub	x0, x29, #0x8
  248ce0:	bl	2473b0 <freep>
  248ce4:	mov	w0, w19
  248ce8:	ldp	x20, x19, [sp, #144]
  248cec:	ldp	x22, x21, [sp, #128]
  248cf0:	ldp	x24, x23, [sp, #112]
  248cf4:	ldp	x26, x25, [sp, #96]
  248cf8:	ldp	x28, x27, [sp, #80]
  248cfc:	ldp	x29, x30, [sp, #64]
  248d00:	add	sp, sp, #0xa0
  248d04:	ret
  248d08:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  248d0c:	add	x1, x1, #0x4b9
  248d10:	b	248d34 <config_parse_name_policy+0x268>
  248d14:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  248d18:	add	x1, x1, #0x510
  248d1c:	b	248d34 <config_parse_name_policy+0x268>
  248d20:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  248d24:	add	x1, x1, #0x3a8
  248d28:	b	248d34 <config_parse_name_policy+0x268>
  248d2c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  248d30:	add	x1, x1, #0x1ea
  248d34:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  248d38:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  248d3c:	add	x2, x2, #0xa24
  248d40:	add	x4, x4, #0x3af
  248d44:	mov	w0, #0x1                   	// #1
  248d48:	mov	w3, #0x1fa                 	// #506
  248d4c:	bl	253740 <log_assert_failed_realm@plt>

0000000000248d50 <link_config_free>:
  248d50:	cbz	x0, 248ddc <link_config_free+0x8c>
  248d54:	stp	x29, x30, [sp, #-32]!
  248d58:	str	x19, [sp, #16]
  248d5c:	mov	x19, x0
  248d60:	ldr	x0, [x0]
  248d64:	mov	x29, sp
  248d68:	bl	2536e0 <free@plt>
  248d6c:	ldr	x0, [x19, #8]
  248d70:	bl	248de0 <set_free_free>
  248d74:	ldr	x0, [x19, #16]
  248d78:	bl	254150 <strv_free@plt>
  248d7c:	ldr	x0, [x19, #24]
  248d80:	bl	254150 <strv_free@plt>
  248d84:	ldr	x0, [x19, #32]
  248d88:	bl	254150 <strv_free@plt>
  248d8c:	ldr	x0, [x19, #40]
  248d90:	bl	254150 <strv_free@plt>
  248d94:	ldr	x0, [x19, #48]
  248d98:	bl	254150 <strv_free@plt>
  248d9c:	ldr	x0, [x19, #56]
  248da0:	bl	248e00 <condition_free_list>
  248da4:	ldr	x0, [x19, #64]
  248da8:	bl	2536e0 <free@plt>
  248dac:	ldr	x0, [x19, #72]
  248db0:	bl	2536e0 <free@plt>
  248db4:	ldr	x0, [x19, #88]
  248db8:	bl	2536e0 <free@plt>
  248dbc:	ldr	x0, [x19, #96]
  248dc0:	bl	2536e0 <free@plt>
  248dc4:	ldr	x0, [x19, #104]
  248dc8:	bl	2536e0 <free@plt>
  248dcc:	mov	x0, x19
  248dd0:	bl	2536e0 <free@plt>
  248dd4:	ldr	x19, [sp, #16]
  248dd8:	ldp	x29, x30, [sp], #32
  248ddc:	ret

0000000000248de0 <set_free_free>:
  248de0:	stp	x29, x30, [sp, #-16]!
  248de4:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  248de8:	ldr	x1, [x1, #728]
  248dec:	mov	x2, xzr
  248df0:	mov	x29, sp
  248df4:	bl	253940 <internal_hashmap_free@plt>
  248df8:	ldp	x29, x30, [sp], #16
  248dfc:	ret

0000000000248e00 <condition_free_list>:
  248e00:	stp	x29, x30, [sp, #-16]!
  248e04:	mov	w1, #0xffffffff            	// #-1
  248e08:	mov	x29, sp
  248e0c:	bl	254a90 <condition_free_list_type@plt>
  248e10:	ldp	x29, x30, [sp], #16
  248e14:	ret

0000000000248e18 <set_size>:
  248e18:	stp	x29, x30, [sp, #-16]!
  248e1c:	mov	x29, sp
  248e20:	bl	253c30 <internal_hashmap_size@plt>
  248e24:	ldp	x29, x30, [sp], #16
  248e28:	ret

0000000000248e2c <safe_atou>:
  248e2c:	stp	x29, x30, [sp, #-16]!
  248e30:	mov	x2, x1
  248e34:	mov	w1, wzr
  248e38:	mov	x29, sp
  248e3c:	bl	253970 <safe_atou_full@plt>
  248e40:	ldp	x29, x30, [sp], #16
  248e44:	ret

0000000000248e48 <link_config_gperf_lookup>:
  248e48:	stp	x29, x30, [sp, #-32]!
  248e4c:	sub	x8, x1, #0x9
  248e50:	cmp	x8, #0x16
  248e54:	stp	x20, x19, [sp, #16]
  248e58:	mov	x29, sp
  248e5c:	b.hi	248eb8 <link_config_gperf_lookup+0x70>  // b.pmore
  248e60:	mov	x20, x0
  248e64:	bl	248ed8 <link_config_gperf_hash>
  248e68:	cmp	w0, #0x37
  248e6c:	b.hi	248eb0 <link_config_gperf_lookup+0x68>  // b.pmore
  248e70:	adrp	x9, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  248e74:	mov	w8, w0
  248e78:	add	x9, x9, #0x7f0
  248e7c:	add	x19, x9, x8, lsl #5
  248e80:	ldr	x8, [x19]
  248e84:	cbz	x8, 248ea8 <link_config_gperf_lookup+0x60>
  248e88:	ldrb	w9, [x20]
  248e8c:	ldrb	w10, [x8]
  248e90:	cmp	w9, w10
  248e94:	b.ne	248ea8 <link_config_gperf_lookup+0x60>  // b.any
  248e98:	add	x0, x20, #0x1
  248e9c:	add	x1, x8, #0x1
  248ea0:	bl	253bc0 <strcmp@plt>
  248ea4:	cbz	w0, 248ecc <link_config_gperf_lookup+0x84>
  248ea8:	mov	w8, wzr
  248eac:	cbnz	w8, 248eb4 <link_config_gperf_lookup+0x6c>
  248eb0:	mov	w8, wzr
  248eb4:	cbnz	w8, 248ebc <link_config_gperf_lookup+0x74>
  248eb8:	mov	x19, xzr
  248ebc:	mov	x0, x19
  248ec0:	ldp	x20, x19, [sp, #16]
  248ec4:	ldp	x29, x30, [sp], #32
  248ec8:	ret
  248ecc:	mov	w8, #0x1                   	// #1
  248ed0:	cbnz	w8, 248eb4 <link_config_gperf_lookup+0x6c>
  248ed4:	b	248eb0 <link_config_gperf_lookup+0x68>

0000000000248ed8 <link_config_gperf_hash>:
  248ed8:	ldrb	w8, [x0, #6]
  248edc:	ldrb	w9, [x0, #5]
  248ee0:	adrp	x10, 218000 <worker_hash_op+0xdad0>
  248ee4:	add	x10, x10, #0xcb0
  248ee8:	ldrb	w8, [x10, x8]
  248eec:	ldrb	w9, [x10, x9]
  248ef0:	add	w8, w8, w1
  248ef4:	add	w0, w8, w9
  248ef8:	ret

0000000000248efc <naming_scheme>:
  248efc:	stp	x29, x30, [sp, #-48]!
  248f00:	str	x21, [sp, #16]
  248f04:	adrp	x21, 28e000 <string_hash_ops+0xfe38>
  248f08:	stp	x20, x19, [sp, #32]
  248f0c:	ldr	x19, [x21, #552]
  248f10:	mov	x29, sp
  248f14:	str	xzr, [x29, #24]
  248f18:	cbnz	x19, 249044 <naming_scheme+0x148>
  248f1c:	adrp	x0, 215000 <worker_hash_op+0xaad0>
  248f20:	add	x0, x0, #0x517
  248f24:	add	x2, x29, #0x18
  248f28:	mov	w1, wzr
  248f2c:	bl	254590 <proc_cmdline_get_key@plt>
  248f30:	adrp	x0, 217000 <worker_hash_op+0xcad0>
  248f34:	add	x0, x0, #0x280
  248f38:	bl	254aa0 <getenv@plt>
  248f3c:	cbz	x0, 248f64 <naming_scheme+0x68>
  248f40:	ldrb	w8, [x0]
  248f44:	mov	x19, x0
  248f48:	cmp	w8, #0x3a
  248f4c:	b.ne	248f5c <naming_scheme+0x60>  // b.any
  248f50:	ldr	x8, [x29, #24]
  248f54:	cmp	x8, #0x0
  248f58:	csinc	x19, x8, x19, ne  // ne = any
  248f5c:	cbnz	x19, 248f6c <naming_scheme+0x70>
  248f60:	b	248fec <naming_scheme+0xf0>
  248f64:	ldr	x19, [x29, #24]
  248f68:	cbz	x19, 248fec <naming_scheme+0xf0>
  248f6c:	mov	x0, x19
  248f70:	bl	24909c <naming_scheme_from_name>
  248f74:	mov	x20, x0
  248f78:	str	x0, [x21, #552]
  248f7c:	mov	w0, #0x1                   	// #1
  248f80:	bl	2535b0 <log_get_max_level_realm@plt>
  248f84:	cbz	x20, 248fb8 <naming_scheme+0xbc>
  248f88:	cmp	w0, #0x6
  248f8c:	b.lt	249040 <naming_scheme+0x144>  // b.tstop
  248f90:	ldr	x6, [x20]
  248f94:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  248f98:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  248f9c:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  248fa0:	add	x2, x2, #0xf09
  248fa4:	add	x4, x4, #0x529
  248fa8:	add	x5, x5, #0xb0a
  248fac:	mov	w0, #0x406                 	// #1030
  248fb0:	mov	w3, #0x36                  	// #54
  248fb4:	b	249038 <naming_scheme+0x13c>
  248fb8:	cmp	w0, #0x4
  248fbc:	b.lt	248fec <naming_scheme+0xf0>  // b.tstop
  248fc0:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  248fc4:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  248fc8:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  248fcc:	add	x2, x2, #0xf09
  248fd0:	add	x4, x4, #0x529
  248fd4:	add	x5, x5, #0x288
  248fd8:	mov	w0, #0x404                 	// #1028
  248fdc:	mov	w3, #0x3a                  	// #58
  248fe0:	mov	w1, wzr
  248fe4:	mov	x6, x19
  248fe8:	bl	2535c0 <log_internal_realm@plt>
  248fec:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  248ff0:	add	x0, x0, #0x561
  248ff4:	bl	24909c <naming_scheme_from_name>
  248ff8:	str	x0, [x21, #552]
  248ffc:	cbz	x0, 249060 <naming_scheme+0x164>
  249000:	mov	x19, x0
  249004:	mov	w0, #0x1                   	// #1
  249008:	bl	2535b0 <log_get_max_level_realm@plt>
  24900c:	cmp	w0, #0x6
  249010:	b.lt	249040 <naming_scheme+0x144>  // b.tstop
  249014:	ldr	x6, [x19]
  249018:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  24901c:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  249020:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  249024:	add	x2, x2, #0xf09
  249028:	add	x4, x4, #0x529
  24902c:	add	x5, x5, #0x2c2
  249030:	mov	w0, #0x406                 	// #1030
  249034:	mov	w3, #0x3f                  	// #63
  249038:	mov	w1, wzr
  24903c:	bl	2535c0 <log_internal_realm@plt>
  249040:	ldr	x19, [x21, #552]
  249044:	add	x0, x29, #0x18
  249048:	bl	249084 <freep>
  24904c:	mov	x0, x19
  249050:	ldp	x20, x19, [sp, #32]
  249054:	ldr	x21, [sp, #16]
  249058:	ldp	x29, x30, [sp], #48
  24905c:	ret
  249060:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  249064:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  249068:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24906c:	add	x1, x1, #0x221
  249070:	add	x2, x2, #0xf09
  249074:	add	x4, x4, #0x5f9
  249078:	mov	w0, #0x1                   	// #1
  24907c:	mov	w3, #0x3e                  	// #62
  249080:	bl	253740 <log_assert_failed_realm@plt>

0000000000249084 <freep>:
  249084:	stp	x29, x30, [sp, #-16]!
  249088:	ldr	x0, [x0]
  24908c:	mov	x29, sp
  249090:	bl	2536e0 <free@plt>
  249094:	ldp	x29, x30, [sp], #16
  249098:	ret

000000000024909c <naming_scheme_from_name>:
  24909c:	stp	x29, x30, [sp, #-48]!
  2490a0:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  2490a4:	add	x1, x1, #0x561
  2490a8:	str	x21, [sp, #16]
  2490ac:	stp	x20, x19, [sp, #32]
  2490b0:	mov	x29, sp
  2490b4:	mov	x19, x0
  2490b8:	bl	253bc0 <strcmp@plt>
  2490bc:	cbz	w0, 2490f0 <naming_scheme_from_name+0x54>
  2490c0:	adrp	x21, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  2490c4:	mov	x20, xzr
  2490c8:	add	x21, x21, #0xef0
  2490cc:	ldr	x0, [x21, x20]
  2490d0:	mov	x1, x19
  2490d4:	bl	253bc0 <strcmp@plt>
  2490d8:	cbz	w0, 2490fc <naming_scheme_from_name+0x60>
  2490dc:	add	x20, x20, #0x10
  2490e0:	cmp	x20, #0x50
  2490e4:	b.ne	2490cc <naming_scheme_from_name+0x30>  // b.any
  2490e8:	mov	x0, xzr
  2490ec:	b	249100 <naming_scheme_from_name+0x64>
  2490f0:	adrp	x0, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  2490f4:	add	x0, x0, #0xf30
  2490f8:	b	249100 <naming_scheme_from_name+0x64>
  2490fc:	add	x0, x21, x20
  249100:	ldp	x20, x19, [sp, #32]
  249104:	ldr	x21, [sp, #16]
  249108:	ldp	x29, x30, [sp], #48
  24910c:	ret

0000000000249110 <builtin_kmod>:
  249110:	stp	x29, x30, [sp, #-32]!
  249114:	stp	x20, x19, [sp, #16]
  249118:	adrp	x20, 28e000 <string_hash_ops+0xfe38>
  24911c:	ldr	x8, [x20, #560]
  249120:	mov	x29, sp
  249124:	cbz	x8, 2491b4 <builtin_kmod+0xa4>
  249128:	mov	x19, x2
  24912c:	cmp	w1, #0x3
  249130:	b.lt	249148 <builtin_kmod+0x38>  // b.tstop
  249134:	ldr	x0, [x19, #8]
  249138:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24913c:	add	x1, x1, #0x42e
  249140:	bl	253bc0 <strcmp@plt>
  249144:	cbz	w0, 249194 <builtin_kmod+0x84>
  249148:	mov	w0, #0x1                   	// #1
  24914c:	bl	2535b0 <log_get_max_level_realm@plt>
  249150:	cmp	w0, #0x3
  249154:	b.lt	24918c <builtin_kmod+0x7c>  // b.tstop
  249158:	ldr	x6, [x19]
  24915c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  249160:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  249164:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  249168:	mov	w1, #0x16                  	// #22
  24916c:	add	x2, x2, #0x436
  249170:	add	x4, x4, #0x621
  249174:	add	x5, x5, #0x678
  249178:	mov	w0, #0x403                 	// #1027
  24917c:	movk	w1, #0x4000, lsl #16
  249180:	mov	w3, #0x1f                  	// #31
  249184:	bl	2535c0 <log_internal_realm@plt>
  249188:	b	2491b8 <builtin_kmod+0xa8>
  24918c:	mov	w0, #0xffffffea            	// #-22
  249190:	b	2491b8 <builtin_kmod+0xa8>
  249194:	ldr	x1, [x19, #16]
  249198:	cbz	x1, 2491b4 <builtin_kmod+0xa4>
  24919c:	add	x19, x19, #0x18
  2491a0:	ldr	x0, [x20, #560]
  2491a4:	mov	w2, wzr
  2491a8:	bl	254ab0 <module_load_and_warn@plt>
  2491ac:	ldr	x1, [x19], #8
  2491b0:	cbnz	x1, 2491a0 <builtin_kmod+0x90>
  2491b4:	mov	w0, wzr
  2491b8:	ldp	x20, x19, [sp, #16]
  2491bc:	ldp	x29, x30, [sp], #32
  2491c0:	ret

00000000002491c4 <builtin_kmod_init>:
  2491c4:	stp	x29, x30, [sp, #-32]!
  2491c8:	str	x19, [sp, #16]
  2491cc:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  2491d0:	ldr	x8, [x19, #560]
  2491d4:	mov	x29, sp
  2491d8:	cbnz	x8, 249244 <builtin_kmod_init+0x80>
  2491dc:	mov	x0, xzr
  2491e0:	mov	x1, xzr
  2491e4:	bl	254ac0 <kmod_new@plt>
  2491e8:	str	x0, [x19, #560]
  2491ec:	cbz	x0, 249254 <builtin_kmod_init+0x90>
  2491f0:	mov	w0, #0x1                   	// #1
  2491f4:	bl	2535b0 <log_get_max_level_realm@plt>
  2491f8:	cmp	w0, #0x7
  2491fc:	b.lt	249228 <builtin_kmod_init+0x64>  // b.tstop
  249200:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  249204:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  249208:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  24920c:	add	x2, x2, #0x436
  249210:	add	x4, x4, #0x453
  249214:	add	x5, x5, #0x465
  249218:	mov	w0, #0x407                 	// #1031
  24921c:	mov	w3, #0x30                  	// #48
  249220:	mov	w1, wzr
  249224:	bl	2535c0 <log_internal_realm@plt>
  249228:	ldr	x0, [x19, #560]
  24922c:	adrp	x1, 249000 <naming_scheme+0x104>
  249230:	add	x1, x1, #0x31c
  249234:	mov	x2, xzr
  249238:	bl	254ad0 <kmod_set_log_fn@plt>
  24923c:	ldr	x0, [x19, #560]
  249240:	bl	254ae0 <kmod_load_resources@plt>
  249244:	mov	w0, wzr
  249248:	ldr	x19, [sp, #16]
  24924c:	ldp	x29, x30, [sp], #32
  249250:	ret
  249254:	mov	w0, #0xfffffff4            	// #-12
  249258:	b	249248 <builtin_kmod_init+0x84>

000000000024925c <builtin_kmod_exit>:
  24925c:	stp	x29, x30, [sp, #-32]!
  249260:	mov	w0, #0x1                   	// #1
  249264:	str	x19, [sp, #16]
  249268:	mov	x29, sp
  24926c:	bl	2535b0 <log_get_max_level_realm@plt>
  249270:	cmp	w0, #0x7
  249274:	b.lt	2492a0 <builtin_kmod_exit+0x44>  // b.tstop
  249278:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24927c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  249280:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  249284:	add	x2, x2, #0x436
  249288:	add	x4, x4, #0x515
  24928c:	add	x5, x5, #0x62e
  249290:	mov	w0, #0x407                 	// #1031
  249294:	mov	w3, #0x38                  	// #56
  249298:	mov	w1, wzr
  24929c:	bl	2535c0 <log_internal_realm@plt>
  2492a0:	adrp	x19, 28e000 <string_hash_ops+0xfe38>
  2492a4:	ldr	x0, [x19, #560]
  2492a8:	bl	254af0 <kmod_unref@plt>
  2492ac:	str	x0, [x19, #560]
  2492b0:	ldr	x19, [sp, #16]
  2492b4:	ldp	x29, x30, [sp], #32
  2492b8:	ret

00000000002492bc <builtin_kmod_validate>:
  2492bc:	stp	x29, x30, [sp, #-16]!
  2492c0:	mov	w0, #0x1                   	// #1
  2492c4:	mov	x29, sp
  2492c8:	bl	2535b0 <log_get_max_level_realm@plt>
  2492cc:	cmp	w0, #0x7
  2492d0:	b.lt	2492fc <builtin_kmod_validate+0x40>  // b.tstop
  2492d4:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  2492d8:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  2492dc:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  2492e0:	add	x2, x2, #0x436
  2492e4:	add	x4, x4, #0x68
  2492e8:	add	x5, x5, #0x97b
  2492ec:	mov	w0, #0x407                 	// #1031
  2492f0:	mov	w3, #0x3e                  	// #62
  2492f4:	mov	w1, wzr
  2492f8:	bl	2535c0 <log_internal_realm@plt>
  2492fc:	adrp	x8, 28e000 <string_hash_ops+0xfe38>
  249300:	ldr	x0, [x8, #560]
  249304:	cbz	x0, 249314 <builtin_kmod_validate+0x58>
  249308:	bl	254b00 <kmod_validate_resources@plt>
  24930c:	cmp	w0, #0x0
  249310:	cset	w0, ne  // ne = any
  249314:	ldp	x29, x30, [sp], #16
  249318:	ret

000000000024931c <udev_kmod_log>:
  24931c:	sub	sp, sp, #0x30
  249320:	stp	x29, x30, [sp, #32]
  249324:	ldp	q1, q0, [x6]
  249328:	orr	w0, w1, #0x400
  24932c:	mov	x6, sp
  249330:	mov	w1, wzr
  249334:	add	x29, sp, #0x20
  249338:	stp	q1, q0, [sp]
  24933c:	bl	254b10 <log_internalv_realm@plt>
  249340:	ldp	x29, x30, [sp, #32]
  249344:	add	sp, sp, #0x30
  249348:	ret

000000000024934c <builtin_blkid>:
  24934c:	sub	sp, sp, #0xd0
  249350:	stp	x29, x30, [sp, #112]
  249354:	add	x29, sp, #0x70
  249358:	stp	x28, x27, [sp, #128]
  24935c:	stp	x26, x25, [sp, #144]
  249360:	stp	x24, x23, [sp, #160]
  249364:	stp	x22, x21, [sp, #176]
  249368:	stp	x20, x19, [sp, #192]
  24936c:	str	w3, [sp, #44]
  249370:	stp	x0, xzr, [sp, #48]
  249374:	stur	xzr, [x29, #-16]
  249378:	stur	xzr, [x29, #-40]
  24937c:	adrp	x19, 27d000 <builtin_blkid.options+0x50>
  249380:	ldr	x19, [x19, #760]
  249384:	adrp	x23, 215000 <worker_hash_op+0xaad0>
  249388:	adrp	x24, 27c000 <keyboard_lookup_key.wordlist+0x169d0>
  24938c:	adrp	x25, 217000 <worker_hash_op+0xcad0>
  249390:	adrp	x26, 20b000 <worker_hash_op+0xad0>
  249394:	mov	x21, x2
  249398:	mov	w22, w1
  24939c:	mov	w20, wzr
  2493a0:	mov	w8, #0xffffffff            	// #-1
  2493a4:	add	x23, x23, #0x537
  2493a8:	add	x24, x24, #0xfb0
  2493ac:	add	x25, x25, #0x9e2
  2493b0:	add	x26, x26, #0x694
  2493b4:	stur	w8, [x29, #-44]
  2493b8:	b	2493c8 <builtin_blkid+0x7c>
  2493bc:	mov	w20, #0x1                   	// #1
  2493c0:	mov	w8, wzr
  2493c4:	cbnz	w8, 249500 <builtin_blkid+0x1b4>
  2493c8:	mov	w0, w22
  2493cc:	mov	x1, x21
  2493d0:	mov	x2, x23
  2493d4:	mov	x3, x24
  2493d8:	mov	x4, xzr
  2493dc:	bl	2536f0 <getopt_long@plt>
  2493e0:	cmn	w0, #0x1
  2493e4:	b.eq	249468 <builtin_blkid+0x11c>  // b.none
  2493e8:	cmp	w0, #0x52
  2493ec:	b.eq	2493bc <builtin_blkid+0x70>  // b.none
  2493f0:	cmp	w0, #0x6f
  2493f4:	b.ne	2493c0 <builtin_blkid+0x74>  // b.any
  2493f8:	ldr	x0, [x19]
  2493fc:	add	x1, sp, #0x38
  249400:	bl	249a6c <safe_atoi64>
  249404:	tbnz	w0, #31, 249470 <builtin_blkid+0x124>
  249408:	ldr	x8, [sp, #56]
  24940c:	tbz	x8, #63, 2493c0 <builtin_blkid+0x74>
  249410:	ldr	x27, [sp, #48]
  249414:	stur	xzr, [x29, #-8]
  249418:	cbz	x27, 24942c <builtin_blkid+0xe0>
  24941c:	mov	w0, #0x1                   	// #1
  249420:	bl	2535b0 <log_get_max_level_realm@plt>
  249424:	cmp	w0, #0x3
  249428:	b.ge	2494f0 <builtin_blkid+0x1a4>  // b.tcont
  24942c:	ldr	x8, [sp, #56]
  249430:	ldur	x6, [x29, #-8]
  249434:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  249438:	add	x9, x9, #0xb64
  24943c:	str	x8, [sp, #16]
  249440:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  249444:	cmp	x6, #0x0
  249448:	add	x8, x8, #0x227
  24944c:	mov	w1, #0x22                  	// #34
  249450:	csel	x5, xzr, x9, eq  // eq = none
  249454:	stp	xzr, x8, [sp]
  249458:	mov	w0, #0x3                   	// #3
  24945c:	movk	w1, #0x4000, lsl #16
  249460:	mov	w3, #0xf2                  	// #242
  249464:	b	2494c4 <builtin_blkid+0x178>
  249468:	mov	w8, #0x2                   	// #2
  24946c:	b	2493c4 <builtin_blkid+0x78>
  249470:	ldr	x27, [sp, #48]
  249474:	mov	w28, w0
  249478:	stur	xzr, [x29, #-8]
  24947c:	cbz	x27, 249490 <builtin_blkid+0x144>
  249480:	mov	w0, #0x1                   	// #1
  249484:	bl	2535b0 <log_get_max_level_realm@plt>
  249488:	cmp	w0, #0x3
  24948c:	b.ge	2494e0 <builtin_blkid+0x194>  // b.tcont
  249490:	ldur	x6, [x29, #-8]
  249494:	ldr	x8, [x19]
  249498:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  24949c:	add	x9, x9, #0xb64
  2494a0:	cmp	x6, #0x0
  2494a4:	str	x8, [sp, #16]
  2494a8:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  2494ac:	csel	x5, xzr, x9, eq  // eq = none
  2494b0:	add	x8, x8, #0xe18
  2494b4:	mov	w0, #0x3                   	// #3
  2494b8:	mov	w3, #0xf0                  	// #240
  2494bc:	mov	w1, w28
  2494c0:	stp	xzr, x8, [sp]
  2494c4:	mov	x2, x25
  2494c8:	mov	x4, x26
  2494cc:	mov	x7, xzr
  2494d0:	bl	2539f0 <log_object_internal@plt>
  2494d4:	mov	w27, w0
  2494d8:	mov	w8, #0x1                   	// #1
  2494dc:	b	2493c4 <builtin_blkid+0x78>
  2494e0:	sub	x1, x29, #0x8
  2494e4:	mov	x0, x27
  2494e8:	bl	253a40 <sd_device_get_sysname@plt>
  2494ec:	b	249490 <builtin_blkid+0x144>
  2494f0:	sub	x1, x29, #0x8
  2494f4:	mov	x0, x27
  2494f8:	bl	253a40 <sd_device_get_sysname@plt>
  2494fc:	b	24942c <builtin_blkid+0xe0>
  249500:	cmp	w8, #0x2
  249504:	b.ne	249994 <builtin_blkid+0x648>  // b.any
  249508:	bl	253660 <__errno_location@plt>
  24950c:	mov	x22, x0
  249510:	str	wzr, [x0]
  249514:	bl	254b20 <blkid_new_probe@plt>
  249518:	stur	x0, [x29, #-40]
  24951c:	cbz	x0, 249720 <builtin_blkid+0x3d4>
  249520:	mov	w1, #0x1ea                 	// #490
  249524:	mov	x21, x0
  249528:	bl	254b30 <blkid_probe_set_superblocks_flags@plt>
  24952c:	ldr	x27, [sp, #48]
  249530:	tbz	w20, #0, 249544 <builtin_blkid+0x1f8>
  249534:	mov	w1, #0x1                   	// #1
  249538:	mov	w2, #0x4                   	// #4
  24953c:	mov	x0, x21
  249540:	bl	254b40 <blkid_probe_filter_superblocks_usage@plt>
  249544:	sub	x1, x29, #0x8
  249548:	mov	x0, x27
  24954c:	bl	253ad0 <sd_device_get_devname@plt>
  249550:	tbnz	w0, #31, 249788 <builtin_blkid+0x43c>
  249554:	ldur	x0, [x29, #-8]
  249558:	mov	w1, #0x800                 	// #2048
  24955c:	movk	w1, #0x8, lsl #16
  249560:	bl	253d70 <open64@plt>
  249564:	stur	w0, [x29, #-44]
  249568:	tbnz	w0, #31, 2497e8 <builtin_blkid+0x49c>
  24956c:	str	wzr, [x22]
  249570:	ldr	x2, [sp, #56]
  249574:	mov	w1, w0
  249578:	mov	x0, x21
  24957c:	mov	x3, xzr
  249580:	bl	254b50 <blkid_probe_set_device@plt>
  249584:	tbnz	w0, #31, 249848 <builtin_blkid+0x4fc>
  249588:	stur	xzr, [x29, #-24]
  24958c:	cbz	x27, 2495a0 <builtin_blkid+0x254>
  249590:	mov	w0, #0x1                   	// #1
  249594:	bl	2535b0 <log_get_max_level_realm@plt>
  249598:	cmp	w0, #0x7
  24959c:	b.ge	2499e8 <builtin_blkid+0x69c>  // b.tcont
  2495a0:	ldur	x6, [x29, #-24]
  2495a4:	ldur	x8, [x29, #-8]
  2495a8:	ldr	x11, [sp, #56]
  2495ac:	adrp	x12, 211000 <worker_hash_op+0x6ad0>
  2495b0:	adrp	x9, 216000 <worker_hash_op+0xbad0>
  2495b4:	adrp	x10, 210000 <worker_hash_op+0x5ad0>
  2495b8:	cmp	x6, #0x0
  2495bc:	add	x12, x12, #0xb64
  2495c0:	add	x9, x9, #0x7fa
  2495c4:	add	x10, x10, #0x568
  2495c8:	csel	x5, xzr, x12, eq  // eq = none
  2495cc:	tst	w20, #0x1
  2495d0:	str	x8, [sp, #16]
  2495d4:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  2495d8:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2495dc:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  2495e0:	csel	x9, x10, x9, ne  // ne = any
  2495e4:	add	x8, x8, #0x783
  2495e8:	add	x2, x2, #0x9e2
  2495ec:	add	x4, x4, #0x694
  2495f0:	mov	w0, #0x7                   	// #7
  2495f4:	mov	w3, #0x114                 	// #276
  2495f8:	mov	w1, wzr
  2495fc:	mov	x7, xzr
  249600:	stp	x9, x11, [sp, #24]
  249604:	stp	xzr, x8, [sp]
  249608:	bl	2539f0 <log_object_internal@plt>
  24960c:	mov	x0, x21
  249610:	bl	249a80 <probe_superblocks>
  249614:	tbnz	w0, #31, 2498ac <builtin_blkid+0x560>
  249618:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24961c:	add	x1, x1, #0x18e
  249620:	sub	x2, x29, #0x10
  249624:	mov	x0, x27
  249628:	bl	253be0 <sd_device_get_property_value@plt>
  24962c:	mov	x0, x21
  249630:	str	wzr, [x22]
  249634:	bl	254b60 <blkid_probe_numof_values@plt>
  249638:	tbnz	w0, #31, 249920 <builtin_blkid+0x5d4>
  24963c:	mov	w23, w0
  249640:	cbz	w0, 249918 <builtin_blkid+0x5cc>
  249644:	ldr	w20, [sp, #44]
  249648:	adrp	x24, 20f000 <worker_hash_op+0x4ad0>
  24964c:	adrp	x25, 215000 <worker_hash_op+0xaad0>
  249650:	adrp	x26, 210000 <worker_hash_op+0x5ad0>
  249654:	mov	w19, wzr
  249658:	mov	w22, wzr
  24965c:	add	x24, x24, #0x2ee
  249660:	add	x25, x25, #0x565
  249664:	add	x26, x26, #0xbc7
  249668:	b	24967c <builtin_blkid+0x330>
  24966c:	ldr	x27, [sp, #48]
  249670:	add	w22, w22, #0x1
  249674:	cmp	w23, w22
  249678:	b.eq	249904 <builtin_blkid+0x5b8>  // b.none
  24967c:	sub	x2, x29, #0x20
  249680:	sub	x3, x29, #0x18
  249684:	mov	x0, x21
  249688:	mov	w1, w22
  24968c:	mov	x4, xzr
  249690:	bl	254b70 <blkid_probe_get_value@plt>
  249694:	tbnz	w0, #31, 249670 <builtin_blkid+0x324>
  249698:	ldp	x2, x3, [x29, #-32]
  24969c:	and	w1, w20, #0x1
  2496a0:	mov	x0, x27
  2496a4:	bl	249b50 <print_property>
  2496a8:	ldur	x27, [x29, #-32]
  2496ac:	mov	x1, x24
  2496b0:	mov	x0, x27
  2496b4:	bl	253bc0 <strcmp@plt>
  2496b8:	cbnz	w0, 2496d4 <builtin_blkid+0x388>
  2496bc:	ldur	x0, [x29, #-24]
  2496c0:	mov	x1, x25
  2496c4:	bl	253bc0 <strcmp@plt>
  2496c8:	cmp	w0, #0x0
  2496cc:	cset	w8, eq  // eq = none
  2496d0:	orr	w19, w19, w8
  2496d4:	ldur	x28, [x29, #-16]
  2496d8:	cbz	x28, 24966c <builtin_blkid+0x320>
  2496dc:	mov	x0, x27
  2496e0:	mov	x1, x26
  2496e4:	bl	253bc0 <strcmp@plt>
  2496e8:	cbnz	w0, 24966c <builtin_blkid+0x320>
  2496ec:	ldur	x0, [x29, #-24]
  2496f0:	mov	x1, x28
  2496f4:	bl	253bc0 <strcmp@plt>
  2496f8:	ldr	x27, [sp, #48]
  2496fc:	cbnz	w0, 249670 <builtin_blkid+0x324>
  249700:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  249704:	adrp	x3, 213000 <worker_hash_op+0x8ad0>
  249708:	and	w1, w20, #0x1
  24970c:	mov	x0, x27
  249710:	add	x2, x2, #0xf59
  249714:	add	x3, x3, #0xa68
  249718:	bl	23f344 <udev_builtin_add_property>
  24971c:	b	249670 <builtin_blkid+0x324>
  249720:	stur	xzr, [x29, #-8]
  249724:	ldr	w8, [x22]
  249728:	ldr	x19, [sp, #48]
  24972c:	mov	w9, #0xc                   	// #12
  249730:	cmp	w8, #0x0
  249734:	csel	w21, w8, w9, gt
  249738:	cbz	x19, 24974c <builtin_blkid+0x400>
  24973c:	mov	w0, #0x1                   	// #1
  249740:	bl	2535b0 <log_get_max_level_realm@plt>
  249744:	cmp	w0, #0x7
  249748:	b.ge	2499c8 <builtin_blkid+0x67c>  // b.tcont
  24974c:	ldur	x6, [x29, #-8]
  249750:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  249754:	add	x8, x8, #0xb64
  249758:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  24975c:	cmp	x6, #0x0
  249760:	csel	x5, xzr, x8, eq  // eq = none
  249764:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  249768:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24976c:	add	x8, x8, #0xb0d
  249770:	add	x2, x2, #0x9e2
  249774:	add	x4, x4, #0x694
  249778:	mov	w0, #0x7                   	// #7
  24977c:	mov	w3, #0xfd                  	// #253
  249780:	str	x8, [sp, #8]
  249784:	b	249980 <builtin_blkid+0x634>
  249788:	mov	w23, w0
  24978c:	stur	xzr, [x29, #-24]
  249790:	cbz	x27, 2497a4 <builtin_blkid+0x458>
  249794:	mov	w0, #0x1                   	// #1
  249798:	bl	2535b0 <log_get_max_level_realm@plt>
  24979c:	cmp	w0, #0x7
  2497a0:	b.ge	2499d8 <builtin_blkid+0x68c>  // b.tcont
  2497a4:	ldur	x6, [x29, #-24]
  2497a8:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2497ac:	add	x8, x8, #0xb64
  2497b0:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2497b4:	cmp	x6, #0x0
  2497b8:	csel	x5, xzr, x8, eq  // eq = none
  2497bc:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  2497c0:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  2497c4:	add	x8, x8, #0x7fb
  2497c8:	add	x2, x2, #0x9e2
  2497cc:	add	x4, x4, #0x694
  2497d0:	mov	w0, #0x7                   	// #7
  2497d4:	mov	w3, #0x109                 	// #265
  2497d8:	str	x8, [sp, #8]
  2497dc:	str	xzr, [sp]
  2497e0:	mov	w1, w23
  2497e4:	b	249988 <builtin_blkid+0x63c>
  2497e8:	stur	xzr, [x29, #-24]
  2497ec:	ldr	w21, [x22]
  2497f0:	cbz	x27, 249804 <builtin_blkid+0x4b8>
  2497f4:	mov	w0, #0x1                   	// #1
  2497f8:	bl	2535b0 <log_get_max_level_realm@plt>
  2497fc:	cmp	w0, #0x7
  249800:	b.ge	2499f8 <builtin_blkid+0x6ac>  // b.tcont
  249804:	ldur	x8, [x29, #-8]
  249808:	ldur	x6, [x29, #-24]
  24980c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  249810:	add	x9, x9, #0xb64
  249814:	str	x8, [sp, #16]
  249818:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  24981c:	cmp	x6, #0x0
  249820:	add	x8, x8, #0xf26
  249824:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  249828:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24982c:	csel	x5, xzr, x9, eq  // eq = none
  249830:	add	x2, x2, #0x9e2
  249834:	add	x4, x4, #0x694
  249838:	str	x8, [sp, #8]
  24983c:	mov	w0, #0x7                   	// #7
  249840:	mov	w3, #0x10d                 	// #269
  249844:	b	249980 <builtin_blkid+0x634>
  249848:	stur	xzr, [x29, #-24]
  24984c:	ldr	w8, [x22]
  249850:	mov	w9, #0xc                   	// #12
  249854:	cmp	w8, #0x0
  249858:	csel	w21, w8, w9, gt
  24985c:	cbz	x27, 249870 <builtin_blkid+0x524>
  249860:	mov	w0, #0x1                   	// #1
  249864:	bl	2535b0 <log_get_max_level_realm@plt>
  249868:	cmp	w0, #0x7
  24986c:	b.ge	249a08 <builtin_blkid+0x6bc>  // b.tcont
  249870:	ldur	x6, [x29, #-24]
  249874:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  249878:	add	x8, x8, #0xb64
  24987c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  249880:	cmp	x6, #0x0
  249884:	csel	x5, xzr, x8, eq  // eq = none
  249888:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  24988c:	add	x8, x8, #0xc4a
  249890:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  249894:	add	x2, x2, #0x9e2
  249898:	add	x4, x4, #0x694
  24989c:	str	x8, [sp, #8]
  2498a0:	mov	w0, #0x7                   	// #7
  2498a4:	mov	w3, #0x112                 	// #274
  2498a8:	b	249980 <builtin_blkid+0x634>
  2498ac:	mov	w23, w0
  2498b0:	stur	xzr, [x29, #-24]
  2498b4:	cbz	x27, 2498c8 <builtin_blkid+0x57c>
  2498b8:	mov	w0, #0x1                   	// #1
  2498bc:	bl	2535b0 <log_get_max_level_realm@plt>
  2498c0:	cmp	w0, #0x7
  2498c4:	b.ge	249a18 <builtin_blkid+0x6cc>  // b.tcont
  2498c8:	ldur	x6, [x29, #-24]
  2498cc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  2498d0:	add	x8, x8, #0xb64
  2498d4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  2498d8:	cmp	x6, #0x0
  2498dc:	csel	x5, xzr, x8, eq  // eq = none
  2498e0:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  2498e4:	add	x8, x8, #0xfae
  2498e8:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  2498ec:	add	x2, x2, #0x9e2
  2498f0:	add	x4, x4, #0x694
  2498f4:	str	x8, [sp, #8]
  2498f8:	mov	w0, #0x7                   	// #7
  2498fc:	mov	w3, #0x118                 	// #280
  249900:	b	2497dc <builtin_blkid+0x490>
  249904:	tbz	w19, #0, 249918 <builtin_blkid+0x5cc>
  249908:	and	w2, w20, #0x1
  24990c:	mov	x0, x27
  249910:	mov	x1, x21
  249914:	bl	249ee4 <find_gpt_root>
  249918:	mov	w27, wzr
  24991c:	b	249994 <builtin_blkid+0x648>
  249920:	stur	xzr, [x29, #-24]
  249924:	ldr	w8, [x22]
  249928:	mov	w9, #0xc                   	// #12
  24992c:	cmp	w8, #0x0
  249930:	csel	w21, w8, w9, gt
  249934:	cbz	x27, 249948 <builtin_blkid+0x5fc>
  249938:	mov	w0, #0x1                   	// #1
  24993c:	bl	2535b0 <log_get_max_level_realm@plt>
  249940:	cmp	w0, #0x7
  249944:	b.ge	249a28 <builtin_blkid+0x6dc>  // b.tcont
  249948:	ldur	x6, [x29, #-24]
  24994c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  249950:	add	x8, x8, #0xb64
  249954:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  249958:	cmp	x6, #0x0
  24995c:	csel	x5, xzr, x8, eq  // eq = none
  249960:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  249964:	add	x8, x8, #0x53b
  249968:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24996c:	add	x2, x2, #0x9e2
  249970:	add	x4, x4, #0x694
  249974:	str	x8, [sp, #8]
  249978:	mov	w0, #0x7                   	// #7
  24997c:	mov	w3, #0x120                 	// #288
  249980:	mov	w1, w21
  249984:	str	xzr, [sp]
  249988:	mov	x7, xzr
  24998c:	bl	2539f0 <log_object_internal@plt>
  249990:	mov	w27, w0
  249994:	sub	x0, x29, #0x2c
  249998:	bl	249a54 <closep>
  24999c:	sub	x0, x29, #0x28
  2499a0:	bl	249a38 <blkid_free_probep>
  2499a4:	mov	w0, w27
  2499a8:	ldp	x20, x19, [sp, #192]
  2499ac:	ldp	x22, x21, [sp, #176]
  2499b0:	ldp	x24, x23, [sp, #160]
  2499b4:	ldp	x26, x25, [sp, #144]
  2499b8:	ldp	x28, x27, [sp, #128]
  2499bc:	ldp	x29, x30, [sp, #112]
  2499c0:	add	sp, sp, #0xd0
  2499c4:	ret
  2499c8:	sub	x1, x29, #0x8
  2499cc:	mov	x0, x19
  2499d0:	bl	253a40 <sd_device_get_sysname@plt>
  2499d4:	b	24974c <builtin_blkid+0x400>
  2499d8:	sub	x1, x29, #0x18
  2499dc:	mov	x0, x27
  2499e0:	bl	253a40 <sd_device_get_sysname@plt>
  2499e4:	b	2497a4 <builtin_blkid+0x458>
  2499e8:	sub	x1, x29, #0x18
  2499ec:	mov	x0, x27
  2499f0:	bl	253a40 <sd_device_get_sysname@plt>
  2499f4:	b	2495a0 <builtin_blkid+0x254>
  2499f8:	sub	x1, x29, #0x18
  2499fc:	mov	x0, x27
  249a00:	bl	253a40 <sd_device_get_sysname@plt>
  249a04:	b	249804 <builtin_blkid+0x4b8>
  249a08:	sub	x1, x29, #0x18
  249a0c:	mov	x0, x27
  249a10:	bl	253a40 <sd_device_get_sysname@plt>
  249a14:	b	249870 <builtin_blkid+0x524>
  249a18:	sub	x1, x29, #0x18
  249a1c:	mov	x0, x27
  249a20:	bl	253a40 <sd_device_get_sysname@plt>
  249a24:	b	2498c8 <builtin_blkid+0x57c>
  249a28:	sub	x1, x29, #0x18
  249a2c:	mov	x0, x27
  249a30:	bl	253a40 <sd_device_get_sysname@plt>
  249a34:	b	249948 <builtin_blkid+0x5fc>

0000000000249a38 <blkid_free_probep>:
  249a38:	stp	x29, x30, [sp, #-16]!
  249a3c:	ldr	x0, [x0]
  249a40:	mov	x29, sp
  249a44:	cbz	x0, 249a4c <blkid_free_probep+0x14>
  249a48:	bl	254b80 <blkid_free_probe@plt>
  249a4c:	ldp	x29, x30, [sp], #16
  249a50:	ret

0000000000249a54 <closep>:
  249a54:	stp	x29, x30, [sp, #-16]!
  249a58:	ldr	w0, [x0]
  249a5c:	mov	x29, sp
  249a60:	bl	2538f0 <safe_close@plt>
  249a64:	ldp	x29, x30, [sp], #16
  249a68:	ret

0000000000249a6c <safe_atoi64>:
  249a6c:	stp	x29, x30, [sp, #-16]!
  249a70:	mov	x29, sp
  249a74:	bl	254b90 <safe_atolli@plt>
  249a78:	ldp	x29, x30, [sp], #16
  249a7c:	ret

0000000000249a80 <probe_superblocks>:
  249a80:	sub	sp, sp, #0xa0
  249a84:	stp	x29, x30, [sp, #128]
  249a88:	str	x19, [sp, #144]
  249a8c:	add	x29, sp, #0x80
  249a90:	mov	x19, x0
  249a94:	bl	254ba0 <blkid_probe_get_fd@plt>
  249a98:	mov	x1, sp
  249a9c:	bl	253488 <fstat64>
  249aa0:	cbz	w0, 249ab4 <probe_superblocks+0x34>
  249aa4:	bl	253660 <__errno_location@plt>
  249aa8:	ldr	w8, [x0]
  249aac:	neg	w0, w8
  249ab0:	b	249b40 <probe_superblocks+0xc0>
  249ab4:	mov	w1, #0x1                   	// #1
  249ab8:	mov	x0, x19
  249abc:	bl	254bb0 <blkid_probe_enable_partitions@plt>
  249ac0:	ldr	w8, [sp, #16]
  249ac4:	and	w8, w8, #0xf000
  249ac8:	cmp	w8, #0x2, lsl #12
  249acc:	b.eq	249b20 <probe_superblocks+0xa0>  // b.none
  249ad0:	mov	x0, x19
  249ad4:	bl	254bc0 <blkid_probe_get_size@plt>
  249ad8:	cmp	x0, #0x168, lsl #12
  249adc:	b.gt	249b20 <probe_superblocks+0xa0>
  249ae0:	mov	x0, x19
  249ae4:	bl	254bd0 <blkid_probe_is_wholedisk@plt>
  249ae8:	cbz	w0, 249b20 <probe_superblocks+0xa0>
  249aec:	mov	x0, x19
  249af0:	mov	w1, wzr
  249af4:	bl	254be0 <blkid_probe_enable_superblocks@plt>
  249af8:	mov	x0, x19
  249afc:	bl	254bf0 <blkid_do_fullprobe@plt>
  249b00:	tbnz	w0, #31, 249b40 <probe_superblocks+0xc0>
  249b04:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  249b08:	add	x1, x1, #0x2ee
  249b0c:	mov	x0, x19
  249b10:	mov	x2, xzr
  249b14:	mov	x3, xzr
  249b18:	bl	254c00 <blkid_probe_lookup_value@plt>
  249b1c:	cbz	w0, 249b40 <probe_superblocks+0xc0>
  249b20:	mov	w1, #0x4                   	// #4
  249b24:	mov	x0, x19
  249b28:	bl	254c10 <blkid_probe_set_partitions_flags@plt>
  249b2c:	mov	w1, #0x1                   	// #1
  249b30:	mov	x0, x19
  249b34:	bl	254be0 <blkid_probe_enable_superblocks@plt>
  249b38:	mov	x0, x19
  249b3c:	bl	254c20 <blkid_do_safeprobe@plt>
  249b40:	ldr	x19, [sp, #144]
  249b44:	ldp	x29, x30, [sp, #128]
  249b48:	add	sp, sp, #0xa0
  249b4c:	ret

0000000000249b50 <print_property>:
  249b50:	sub	sp, sp, #0x140
  249b54:	stp	x22, x21, [sp, #288]
  249b58:	mov	w21, w1
  249b5c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  249b60:	stp	x20, x19, [sp, #304]
  249b64:	mov	x19, x0
  249b68:	add	x1, x1, #0xb2f
  249b6c:	mov	x0, x2
  249b70:	stp	x29, x30, [sp, #256]
  249b74:	str	x28, [sp, #272]
  249b78:	add	x29, sp, #0x100
  249b7c:	mov	x20, x3
  249b80:	mov	x22, x2
  249b84:	strb	wzr, [sp]
  249b88:	bl	253bc0 <strcmp@plt>
  249b8c:	cbz	w0, 249c78 <print_property+0x128>
  249b90:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  249b94:	add	x1, x1, #0x86a
  249b98:	mov	x0, x22
  249b9c:	bl	253bc0 <strcmp@plt>
  249ba0:	cbz	w0, 249c88 <print_property+0x138>
  249ba4:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  249ba8:	add	x1, x1, #0x23e
  249bac:	mov	x0, x22
  249bb0:	bl	253bc0 <strcmp@plt>
  249bb4:	cbz	w0, 249c98 <print_property+0x148>
  249bb8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  249bbc:	add	x1, x1, #0xfce
  249bc0:	mov	x0, x22
  249bc4:	bl	253bc0 <strcmp@plt>
  249bc8:	cbz	w0, 249cc8 <print_property+0x178>
  249bcc:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  249bd0:	add	x1, x1, #0xd03
  249bd4:	mov	x0, x22
  249bd8:	bl	253bc0 <strcmp@plt>
  249bdc:	cbz	w0, 249d10 <print_property+0x1c0>
  249be0:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  249be4:	add	x1, x1, #0xd5d
  249be8:	mov	x0, x22
  249bec:	bl	253bc0 <strcmp@plt>
  249bf0:	cbz	w0, 249d58 <print_property+0x208>
  249bf4:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  249bf8:	add	x1, x1, #0x2ee
  249bfc:	mov	x0, x22
  249c00:	bl	253bc0 <strcmp@plt>
  249c04:	cbz	w0, 249dac <print_property+0x25c>
  249c08:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  249c0c:	add	x1, x1, #0xfd3
  249c10:	mov	x0, x22
  249c14:	bl	253bc0 <strcmp@plt>
  249c18:	cbz	w0, 249dbc <print_property+0x26c>
  249c1c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  249c20:	add	x1, x1, #0x7b6
  249c24:	mov	x0, x22
  249c28:	bl	253bc0 <strcmp@plt>
  249c2c:	cbz	w0, 249dcc <print_property+0x27c>
  249c30:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  249c34:	add	x1, x1, #0xbd7
  249c38:	mov	x0, x22
  249c3c:	bl	253bc0 <strcmp@plt>
  249c40:	cbz	w0, 249dec <print_property+0x29c>
  249c44:	mov	x0, x22
  249c48:	bl	24a120 <startswith>
  249c4c:	cbz	x0, 249e14 <print_property+0x2c4>
  249c50:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  249c54:	add	x2, x2, #0xc64
  249c58:	mov	x0, sp
  249c5c:	mov	w1, #0x100                 	// #256
  249c60:	mov	x3, x22
  249c64:	mov	x4, xzr
  249c68:	bl	254600 <strscpyl@plt>
  249c6c:	and	w1, w21, #0x1
  249c70:	mov	x2, sp
  249c74:	b	249ca4 <print_property+0x154>
  249c78:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  249c7c:	and	w1, w21, #0x1
  249c80:	add	x2, x2, #0xb43
  249c84:	b	249ca4 <print_property+0x154>
  249c88:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  249c8c:	and	w1, w21, #0x1
  249c90:	add	x2, x2, #0x473
  249c94:	b	249ca4 <print_property+0x154>
  249c98:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  249c9c:	and	w1, w21, #0x1
  249ca0:	add	x2, x2, #0x96a
  249ca4:	mov	x0, x19
  249ca8:	mov	x3, x20
  249cac:	bl	23f344 <udev_builtin_add_property>
  249cb0:	ldp	x20, x19, [sp, #304]
  249cb4:	ldp	x22, x21, [sp, #288]
  249cb8:	ldr	x28, [sp, #272]
  249cbc:	ldp	x29, x30, [sp, #256]
  249cc0:	add	sp, sp, #0x140
  249cc4:	ret
  249cc8:	mov	x1, sp
  249ccc:	mov	w2, #0x100                 	// #256
  249cd0:	mov	x0, x20
  249cd4:	bl	254c30 <blkid_safe_string@plt>
  249cd8:	and	w21, w21, #0x1
  249cdc:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  249ce0:	add	x2, x2, #0xc2
  249ce4:	mov	x3, sp
  249ce8:	mov	x0, x19
  249cec:	mov	w1, w21
  249cf0:	bl	23f344 <udev_builtin_add_property>
  249cf4:	mov	x1, sp
  249cf8:	mov	w2, #0x100                 	// #256
  249cfc:	mov	x0, x20
  249d00:	bl	254c40 <blkid_encode_string@plt>
  249d04:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  249d08:	add	x2, x2, #0xcd
  249d0c:	b	249d9c <print_property+0x24c>
  249d10:	mov	x1, sp
  249d14:	mov	w2, #0x100                 	// #256
  249d18:	mov	x0, x20
  249d1c:	bl	254c30 <blkid_safe_string@plt>
  249d20:	and	w21, w21, #0x1
  249d24:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  249d28:	add	x2, x2, #0x7a7
  249d2c:	mov	x3, sp
  249d30:	mov	x0, x19
  249d34:	mov	w1, w21
  249d38:	bl	23f344 <udev_builtin_add_property>
  249d3c:	mov	x1, sp
  249d40:	mov	w2, #0x100                 	// #256
  249d44:	mov	x0, x20
  249d48:	bl	254c40 <blkid_encode_string@plt>
  249d4c:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  249d50:	add	x2, x2, #0x292
  249d54:	b	249d9c <print_property+0x24c>
  249d58:	mov	x1, sp
  249d5c:	mov	w2, #0x100                 	// #256
  249d60:	mov	x0, x20
  249d64:	bl	254c30 <blkid_safe_string@plt>
  249d68:	and	w21, w21, #0x1
  249d6c:	adrp	x2, 20c000 <worker_hash_op+0x1ad0>
  249d70:	add	x2, x2, #0x9d8
  249d74:	mov	x3, sp
  249d78:	mov	x0, x19
  249d7c:	mov	w1, w21
  249d80:	bl	23f344 <udev_builtin_add_property>
  249d84:	mov	x1, sp
  249d88:	mov	w2, #0x100                 	// #256
  249d8c:	mov	x0, x20
  249d90:	bl	254c40 <blkid_encode_string@plt>
  249d94:	adrp	x2, 214000 <worker_hash_op+0x9ad0>
  249d98:	add	x2, x2, #0x527
  249d9c:	mov	x3, sp
  249da0:	mov	x0, x19
  249da4:	mov	w1, w21
  249da8:	b	249cac <print_property+0x15c>
  249dac:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  249db0:	and	w1, w21, #0x1
  249db4:	add	x2, x2, #0x642
  249db8:	b	249ca4 <print_property+0x154>
  249dbc:	adrp	x2, 215000 <worker_hash_op+0xaad0>
  249dc0:	and	w1, w21, #0x1
  249dc4:	add	x2, x2, #0x569
  249dc8:	b	249ca4 <print_property+0x154>
  249dcc:	mov	x1, sp
  249dd0:	mov	w2, #0x100                 	// #256
  249dd4:	mov	x0, x20
  249dd8:	bl	254c40 <blkid_encode_string@plt>
  249ddc:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  249de0:	and	w1, w21, #0x1
  249de4:	add	x2, x2, #0x7e
  249de8:	b	249e08 <print_property+0x2b8>
  249dec:	mov	x1, sp
  249df0:	mov	w2, #0x100                 	// #256
  249df4:	mov	x0, x20
  249df8:	bl	254c40 <blkid_encode_string@plt>
  249dfc:	adrp	x2, 215000 <worker_hash_op+0xaad0>
  249e00:	and	w1, w21, #0x1
  249e04:	add	x2, x2, #0xd0c
  249e08:	mov	x3, sp
  249e0c:	mov	x0, x19
  249e10:	b	249cac <print_property+0x15c>
  249e14:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  249e18:	add	x1, x1, #0xb4e
  249e1c:	mov	x0, x22
  249e20:	bl	253bc0 <strcmp@plt>
  249e24:	cbz	w0, 249e84 <print_property+0x334>
  249e28:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  249e2c:	add	x1, x1, #0x537
  249e30:	mov	x0, x22
  249e34:	bl	253bc0 <strcmp@plt>
  249e38:	cbz	w0, 249ea4 <print_property+0x354>
  249e3c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  249e40:	add	x1, x1, #0x2a5
  249e44:	mov	x0, x22
  249e48:	bl	253bc0 <strcmp@plt>
  249e4c:	cbz	w0, 249ec4 <print_property+0x374>
  249e50:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  249e54:	add	x1, x1, #0x2f5
  249e58:	mov	x0, x22
  249e5c:	bl	253bc0 <strcmp@plt>
  249e60:	cbnz	w0, 249cb0 <print_property+0x160>
  249e64:	mov	x1, sp
  249e68:	mov	w2, #0x100                 	// #256
  249e6c:	mov	x0, x20
  249e70:	bl	254c40 <blkid_encode_string@plt>
  249e74:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  249e78:	and	w1, w21, #0x1
  249e7c:	add	x2, x2, #0xf1
  249e80:	b	249e08 <print_property+0x2b8>
  249e84:	mov	x1, sp
  249e88:	mov	w2, #0x100                 	// #256
  249e8c:	mov	x0, x20
  249e90:	bl	254c40 <blkid_encode_string@plt>
  249e94:	adrp	x2, 20a000 <parse_argv.options-0x3f0>
  249e98:	and	w1, w21, #0x1
  249e9c:	add	x2, x2, #0xf49
  249ea0:	b	249e08 <print_property+0x2b8>
  249ea4:	mov	x1, sp
  249ea8:	mov	w2, #0x100                 	// #256
  249eac:	mov	x0, x20
  249eb0:	bl	254c40 <blkid_encode_string@plt>
  249eb4:	adrp	x2, 213000 <worker_hash_op+0x8ad0>
  249eb8:	and	w1, w21, #0x1
  249ebc:	add	x2, x2, #0x6d3
  249ec0:	b	249e08 <print_property+0x2b8>
  249ec4:	mov	x1, sp
  249ec8:	mov	w2, #0x100                 	// #256
  249ecc:	mov	x0, x20
  249ed0:	bl	254c40 <blkid_encode_string@plt>
  249ed4:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  249ed8:	and	w1, w21, #0x1
  249edc:	add	x2, x2, #0xdc
  249ee0:	b	249e08 <print_property+0x2b8>

0000000000249ee4 <find_gpt_root>:
  249ee4:	sub	sp, sp, #0xa0
  249ee8:	stp	x29, x30, [sp, #64]
  249eec:	add	x29, sp, #0x40
  249ef0:	stp	x28, x27, [sp, #80]
  249ef4:	stp	x26, x25, [sp, #96]
  249ef8:	stp	x24, x23, [sp, #112]
  249efc:	stp	x22, x21, [sp, #128]
  249f00:	stp	x20, x19, [sp, #144]
  249f04:	stur	xzr, [x29, #-8]
  249f08:	cbz	x1, 24a0fc <find_gpt_root+0x218>
  249f0c:	mov	w20, w2
  249f10:	mov	x21, x1
  249f14:	mov	x23, x0
  249f18:	bl	253660 <__errno_location@plt>
  249f1c:	str	wzr, [x0]
  249f20:	mov	x0, x21
  249f24:	bl	254c50 <blkid_probe_get_partitions@plt>
  249f28:	cbz	x0, 24a0d4 <find_gpt_root+0x1f0>
  249f2c:	mov	x21, x0
  249f30:	bl	254c60 <blkid_partlist_numof_partitions@plt>
  249f34:	cmp	w0, #0x1
  249f38:	b.lt	24a098 <find_gpt_root+0x1b4>  // b.tstop
  249f3c:	str	x23, [sp]
  249f40:	ldur	x23, [x29, #-8]
  249f44:	mov	w22, w0
  249f48:	mov	w19, wzr
  249f4c:	mov	w24, wzr
  249f50:	b	249f60 <find_gpt_root+0x7c>
  249f54:	add	w24, w24, #0x1
  249f58:	cmp	w22, w24
  249f5c:	b.eq	24a0ac <find_gpt_root+0x1c8>  // b.none
  249f60:	mov	x0, x21
  249f64:	mov	w1, w24
  249f68:	bl	254c70 <blkid_partlist_get_partition@plt>
  249f6c:	cbz	x0, 24a00c <find_gpt_root+0x128>
  249f70:	mov	x26, x0
  249f74:	bl	254c80 <blkid_partition_get_uuid@plt>
  249f78:	cbz	x0, 24a00c <find_gpt_root+0x128>
  249f7c:	mov	x25, x0
  249f80:	mov	x0, x26
  249f84:	bl	254c90 <blkid_partition_get_type_string@plt>
  249f88:	cbz	x0, 24a00c <find_gpt_root+0x128>
  249f8c:	sub	x1, x29, #0x18
  249f90:	bl	254ca0 <sd_id128_from_string@plt>
  249f94:	tbnz	w0, #31, 24a00c <find_gpt_root+0x128>
  249f98:	ldp	x27, x28, [x29, #-24]
  249f9c:	mov	x2, #0x2ac1                	// #10945
  249fa0:	mov	x3, #0x4bba                	// #19386
  249fa4:	movk	x2, #0x2873, lsl #16
  249fa8:	movk	x3, #0xa000, lsl #16
  249fac:	movk	x2, #0x1ff8, lsl #32
  249fb0:	movk	x3, #0x3ec9, lsl #32
  249fb4:	movk	x2, #0xd211, lsl #48
  249fb8:	movk	x3, #0x3bc9, lsl #48
  249fbc:	mov	x0, x27
  249fc0:	mov	x1, x28
  249fc4:	bl	24a170 <sd_id128_equal>
  249fc8:	cbz	w0, 24a020 <find_gpt_root+0x13c>
  249fcc:	add	x1, sp, #0x18
  249fd0:	mov	x0, x25
  249fd4:	bl	254ca0 <sd_id128_from_string@plt>
  249fd8:	tbnz	w0, #31, 24a07c <find_gpt_root+0x198>
  249fdc:	add	x0, sp, #0x8
  249fe0:	bl	254cb0 <efi_loader_get_device_part_uuid@plt>
  249fe4:	tbnz	w0, #31, 24a088 <find_gpt_root+0x1a4>
  249fe8:	ldp	x0, x1, [sp, #24]
  249fec:	ldp	x2, x3, [sp, #8]
  249ff0:	bl	24a170 <sd_id128_equal>
  249ff4:	cmp	w0, #0x0
  249ff8:	cset	w9, ne  // ne = any
  249ffc:	mov	w8, wzr
  24a000:	orr	w19, w19, w9
  24a004:	cbnz	w8, 24a010 <find_gpt_root+0x12c>
  24a008:	b	24a090 <find_gpt_root+0x1ac>
  24a00c:	mov	w8, #0x6                   	// #6
  24a010:	cmp	w8, #0x6
  24a014:	b.eq	249f54 <find_gpt_root+0x70>  // b.none
  24a018:	cbz	w8, 249f54 <find_gpt_root+0x70>
  24a01c:	b	24a0a4 <find_gpt_root+0x1c0>
  24a020:	mov	x2, #0x21b9                	// #8633
  24a024:	mov	x3, #0x44af                	// #17583
  24a028:	movk	x2, #0x45b0, lsl #16
  24a02c:	movk	x3, #0x6f4c, lsl #16
  24a030:	movk	x2, #0xf01d, lsl #32
  24a034:	movk	x3, #0xd28, lsl #32
  24a038:	movk	x2, #0xc341, lsl #48
  24a03c:	movk	x3, #0xae3f, lsl #48
  24a040:	mov	x0, x27
  24a044:	mov	x1, x28
  24a048:	bl	24a170 <sd_id128_equal>
  24a04c:	cbz	w0, 24a090 <find_gpt_root+0x1ac>
  24a050:	mov	x0, x26
  24a054:	bl	254cc0 <blkid_partition_get_flags@plt>
  24a058:	tbnz	x0, #63, 24a07c <find_gpt_root+0x198>
  24a05c:	cbnz	x23, 24a070 <find_gpt_root+0x18c>
  24a060:	mov	x0, x25
  24a064:	bl	253ab0 <strdup@plt>
  24a068:	mov	x23, x0
  24a06c:	cbz	x0, 24a088 <find_gpt_root+0x1a4>
  24a070:	mov	w8, wzr
  24a074:	cbnz	w8, 24a010 <find_gpt_root+0x12c>
  24a078:	b	24a090 <find_gpt_root+0x1ac>
  24a07c:	mov	w8, #0x6                   	// #6
  24a080:	cbnz	w8, 24a010 <find_gpt_root+0x12c>
  24a084:	b	24a090 <find_gpt_root+0x1ac>
  24a088:	mov	w8, #0x1                   	// #1
  24a08c:	cbnz	w8, 24a010 <find_gpt_root+0x12c>
  24a090:	mov	w8, wzr
  24a094:	b	24a010 <find_gpt_root+0x12c>
  24a098:	mov	w19, wzr
  24a09c:	tbnz	w19, #0, 24a0b8 <find_gpt_root+0x1d4>
  24a0a0:	b	24a0d4 <find_gpt_root+0x1f0>
  24a0a4:	stur	x23, [x29, #-8]
  24a0a8:	b	24a0d4 <find_gpt_root+0x1f0>
  24a0ac:	stur	x23, [x29, #-8]
  24a0b0:	ldr	x23, [sp]
  24a0b4:	tbz	w19, #0, 24a0d4 <find_gpt_root+0x1f0>
  24a0b8:	ldur	x3, [x29, #-8]
  24a0bc:	cbz	x3, 24a0d4 <find_gpt_root+0x1f0>
  24a0c0:	adrp	x2, 20d000 <worker_hash_op+0x2ad0>
  24a0c4:	and	w1, w20, #0x1
  24a0c8:	add	x2, x2, #0x18e
  24a0cc:	mov	x0, x23
  24a0d0:	bl	23f344 <udev_builtin_add_property>
  24a0d4:	sub	x0, x29, #0x8
  24a0d8:	bl	24a158 <freep>
  24a0dc:	ldp	x20, x19, [sp, #144]
  24a0e0:	ldp	x22, x21, [sp, #128]
  24a0e4:	ldp	x24, x23, [sp, #112]
  24a0e8:	ldp	x26, x25, [sp, #96]
  24a0ec:	ldp	x28, x27, [sp, #80]
  24a0f0:	ldp	x29, x30, [sp, #64]
  24a0f4:	add	sp, sp, #0xa0
  24a0f8:	ret
  24a0fc:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24a100:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  24a104:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24a108:	add	x1, x1, #0xc68
  24a10c:	add	x2, x2, #0x9e2
  24a110:	add	x4, x4, #0x9e4
  24a114:	mov	w0, #0x1                   	// #1
  24a118:	mov	w3, #0x6a                  	// #106
  24a11c:	bl	253740 <log_assert_failed_realm@plt>

000000000024a120 <startswith>:
  24a120:	stp	x29, x30, [sp, #-32]!
  24a124:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24a128:	add	x1, x1, #0x56b
  24a12c:	mov	w2, #0xb                   	// #11
  24a130:	str	x19, [sp, #16]
  24a134:	mov	x29, sp
  24a138:	mov	x19, x0
  24a13c:	bl	2539b0 <strncmp@plt>
  24a140:	add	x8, x19, #0xb
  24a144:	ldr	x19, [sp, #16]
  24a148:	cmp	w0, #0x0
  24a14c:	csel	x0, x8, xzr, eq  // eq = none
  24a150:	ldp	x29, x30, [sp], #32
  24a154:	ret

000000000024a158 <freep>:
  24a158:	stp	x29, x30, [sp, #-16]!
  24a15c:	ldr	x0, [x0]
  24a160:	mov	x29, sp
  24a164:	bl	2536e0 <free@plt>
  24a168:	ldp	x29, x30, [sp], #16
  24a16c:	ret

000000000024a170 <sd_id128_equal>:
  24a170:	sub	sp, sp, #0x20
  24a174:	eor	x8, x0, x2
  24a178:	eor	x9, x1, x3
  24a17c:	orr	x8, x8, x9
  24a180:	cmp	x8, #0x0
  24a184:	stp	x0, x1, [sp, #16]
  24a188:	cset	w0, eq  // eq = none
  24a18c:	stp	x2, x3, [sp], #32
  24a190:	ret

000000000024a194 <builtin_uaccess>:
  24a194:	sub	sp, sp, #0x70
  24a198:	stp	x29, x30, [sp, #64]
  24a19c:	stp	x20, x19, [sp, #96]
  24a1a0:	add	x29, sp, #0x40
  24a1a4:	mov	x19, x0
  24a1a8:	mov	w0, #0x12                  	// #18
  24a1ac:	stp	x22, x21, [sp, #80]
  24a1b0:	stur	xzr, [x29, #-8]
  24a1b4:	bl	253630 <umask@plt>
  24a1b8:	bl	24a488 <logind_running>
  24a1bc:	tbz	w0, #0, 24a238 <builtin_uaccess+0xa4>
  24a1c0:	sub	x1, x29, #0x8
  24a1c4:	mov	x0, x19
  24a1c8:	bl	253ad0 <sd_device_get_devname@plt>
  24a1cc:	tbnz	w0, #31, 24a240 <builtin_uaccess+0xac>
  24a1d0:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24a1d4:	add	x1, x1, #0xe28
  24a1d8:	sub	x2, x29, #0x10
  24a1dc:	mov	x0, x19
  24a1e0:	bl	253be0 <sd_device_get_property_value@plt>
  24a1e4:	tbz	w0, #31, 24a1f4 <builtin_uaccess+0x60>
  24a1e8:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  24a1ec:	add	x8, x8, #0xc73
  24a1f0:	stur	x8, [x29, #-16]
  24a1f4:	ldur	x0, [x29, #-16]
  24a1f8:	sub	x2, x29, #0x14
  24a1fc:	mov	x1, xzr
  24a200:	bl	24c3f8 <sd_seat_get_active>
  24a204:	tbnz	w0, #31, 24a298 <builtin_uaccess+0x104>
  24a208:	ldur	x0, [x29, #-8]
  24a20c:	ldur	w5, [x29, #-20]
  24a210:	mov	w1, #0x1                   	// #1
  24a214:	mov	w4, #0x1                   	// #1
  24a218:	mov	w2, wzr
  24a21c:	mov	w3, wzr
  24a220:	mov	w21, #0x1                   	// #1
  24a224:	bl	24a4b0 <devnode_acl>
  24a228:	tbnz	w0, #31, 24a310 <builtin_uaccess+0x17c>
  24a22c:	mov	w20, wzr
  24a230:	tbz	w21, #0, 24a388 <builtin_uaccess+0x1f4>
  24a234:	b	24a424 <builtin_uaccess+0x290>
  24a238:	mov	w20, wzr
  24a23c:	b	24a424 <builtin_uaccess+0x290>
  24a240:	mov	w20, w0
  24a244:	stur	xzr, [x29, #-16]
  24a248:	cbz	x19, 24a25c <builtin_uaccess+0xc8>
  24a24c:	mov	w0, #0x1                   	// #1
  24a250:	bl	2535b0 <log_get_max_level_realm@plt>
  24a254:	cmp	w0, #0x3
  24a258:	b.ge	24a448 <builtin_uaccess+0x2b4>  // b.tcont
  24a25c:	ldur	x6, [x29, #-16]
  24a260:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24a264:	add	x8, x8, #0xb64
  24a268:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24a26c:	cmp	x6, #0x0
  24a270:	csel	x5, xzr, x8, eq  // eq = none
  24a274:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  24a278:	add	x8, x8, #0x7fb
  24a27c:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24a280:	add	x2, x2, #0x658
  24a284:	add	x4, x4, #0x6d0
  24a288:	stp	xzr, x8, [sp]
  24a28c:	mov	w0, #0x3                   	// #3
  24a290:	mov	w3, #0x21                  	// #33
  24a294:	b	24a374 <builtin_uaccess+0x1e0>
  24a298:	cmn	w0, #0x3d
  24a29c:	mov	w20, wzr
  24a2a0:	b.eq	24a43c <builtin_uaccess+0x2a8>  // b.none
  24a2a4:	cmn	w0, #0x6
  24a2a8:	mov	w21, w20
  24a2ac:	b.eq	24a384 <builtin_uaccess+0x1f0>  // b.none
  24a2b0:	mov	w20, w0
  24a2b4:	str	xzr, [sp, #32]
  24a2b8:	cbz	x19, 24a2cc <builtin_uaccess+0x138>
  24a2bc:	mov	w0, #0x1                   	// #1
  24a2c0:	bl	2535b0 <log_get_max_level_realm@plt>
  24a2c4:	cmp	w0, #0x3
  24a2c8:	b.ge	24a478 <builtin_uaccess+0x2e4>  // b.tcont
  24a2cc:	ldur	x8, [x29, #-16]
  24a2d0:	ldr	x6, [sp, #32]
  24a2d4:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  24a2d8:	add	x9, x9, #0xb64
  24a2dc:	str	x8, [sp, #16]
  24a2e0:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  24a2e4:	cmp	x6, #0x0
  24a2e8:	add	x8, x8, #0x577
  24a2ec:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24a2f0:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24a2f4:	csel	x5, xzr, x9, eq  // eq = none
  24a2f8:	add	x2, x2, #0x658
  24a2fc:	add	x4, x4, #0x6d0
  24a300:	stp	xzr, x8, [sp]
  24a304:	mov	w0, #0x3                   	// #3
  24a308:	mov	w3, #0x2e                  	// #46
  24a30c:	b	24a374 <builtin_uaccess+0x1e0>
  24a310:	cmn	w0, #0x2
  24a314:	mov	w8, #0x3                   	// #3
  24a318:	mov	w9, #0x7                   	// #7
  24a31c:	mov	w20, w0
  24a320:	csel	w21, w9, w8, eq  // eq = none
  24a324:	str	xzr, [sp, #32]
  24a328:	cbz	x19, 24a33c <builtin_uaccess+0x1a8>
  24a32c:	mov	w0, #0x1                   	// #1
  24a330:	bl	2535b0 <log_get_max_level_realm@plt>
  24a334:	cmp	w0, w21
  24a338:	b.ge	24a468 <builtin_uaccess+0x2d4>  // b.tcont
  24a33c:	ldr	x6, [sp, #32]
  24a340:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24a344:	add	x8, x8, #0xb64
  24a348:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24a34c:	cmp	x6, #0x0
  24a350:	csel	x5, xzr, x8, eq  // eq = none
  24a354:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  24a358:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24a35c:	add	x8, x8, #0x2b4
  24a360:	add	x2, x2, #0x658
  24a364:	add	x4, x4, #0x6d0
  24a368:	mov	w3, #0x35                  	// #53
  24a36c:	mov	w0, w21
  24a370:	stp	xzr, x8, [sp]
  24a374:	mov	w1, w20
  24a378:	mov	x7, xzr
  24a37c:	bl	2539f0 <log_object_internal@plt>
  24a380:	mov	w21, wzr
  24a384:	tbnz	w21, #0, 24a424 <builtin_uaccess+0x290>
  24a388:	ldur	x0, [x29, #-8]
  24a38c:	cbz	x0, 24a424 <builtin_uaccess+0x290>
  24a390:	mov	w1, #0x1                   	// #1
  24a394:	mov	w2, wzr
  24a398:	mov	w3, wzr
  24a39c:	mov	w4, wzr
  24a3a0:	mov	w5, wzr
  24a3a4:	bl	24a4b0 <devnode_acl>
  24a3a8:	tbz	w0, #31, 24a424 <builtin_uaccess+0x290>
  24a3ac:	cmn	w0, #0x2
  24a3b0:	mov	w8, #0x3                   	// #3
  24a3b4:	mov	w9, #0x7                   	// #7
  24a3b8:	mov	w21, w0
  24a3bc:	csel	w22, w9, w8, eq  // eq = none
  24a3c0:	str	xzr, [sp, #32]
  24a3c4:	cbz	x19, 24a3d8 <builtin_uaccess+0x244>
  24a3c8:	mov	w0, #0x1                   	// #1
  24a3cc:	bl	2535b0 <log_get_max_level_realm@plt>
  24a3d0:	cmp	w0, w22
  24a3d4:	b.ge	24a458 <builtin_uaccess+0x2c4>  // b.tcont
  24a3d8:	ldr	x6, [sp, #32]
  24a3dc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24a3e0:	add	x8, x8, #0xb64
  24a3e4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24a3e8:	cmp	x6, #0x0
  24a3ec:	csel	x5, xzr, x8, eq  // eq = none
  24a3f0:	adrp	x8, 217000 <worker_hash_op+0xcad0>
  24a3f4:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24a3f8:	add	x8, x8, #0x2b4
  24a3fc:	add	x2, x2, #0x658
  24a400:	add	x4, x4, #0x6d0
  24a404:	mov	w3, #0x43                  	// #67
  24a408:	mov	w0, w22
  24a40c:	mov	w1, w21
  24a410:	mov	x7, xzr
  24a414:	stp	xzr, x8, [sp]
  24a418:	bl	2539f0 <log_object_internal@plt>
  24a41c:	cmp	w20, #0x0
  24a420:	csel	w20, w21, w20, ge  // ge = tcont
  24a424:	mov	w0, w20
  24a428:	ldp	x20, x19, [sp, #96]
  24a42c:	ldp	x22, x21, [sp, #80]
  24a430:	ldp	x29, x30, [sp, #64]
  24a434:	add	sp, sp, #0x70
  24a438:	ret
  24a43c:	mov	w21, w20
  24a440:	tbz	w21, #0, 24a388 <builtin_uaccess+0x1f4>
  24a444:	b	24a424 <builtin_uaccess+0x290>
  24a448:	sub	x1, x29, #0x10
  24a44c:	mov	x0, x19
  24a450:	bl	253a40 <sd_device_get_sysname@plt>
  24a454:	b	24a25c <builtin_uaccess+0xc8>
  24a458:	add	x1, sp, #0x20
  24a45c:	mov	x0, x19
  24a460:	bl	253a40 <sd_device_get_sysname@plt>
  24a464:	b	24a3d8 <builtin_uaccess+0x244>
  24a468:	add	x1, sp, #0x20
  24a46c:	mov	x0, x19
  24a470:	bl	253a40 <sd_device_get_sysname@plt>
  24a474:	b	24a33c <builtin_uaccess+0x1a8>
  24a478:	add	x1, sp, #0x20
  24a47c:	mov	x0, x19
  24a480:	bl	253a40 <sd_device_get_sysname@plt>
  24a484:	b	24a2cc <builtin_uaccess+0x138>

000000000024a488 <logind_running>:
  24a488:	stp	x29, x30, [sp, #-16]!
  24a48c:	adrp	x0, 20d000 <worker_hash_op+0x2ad0>
  24a490:	add	x0, x0, #0x1b1
  24a494:	mov	w1, wzr
  24a498:	mov	x29, sp
  24a49c:	bl	254cd0 <access@plt>
  24a4a0:	mvn	w8, w0
  24a4a4:	lsr	w0, w8, #31
  24a4a8:	ldp	x29, x30, [sp], #16
  24a4ac:	ret

000000000024a4b0 <devnode_acl>:
  24a4b0:	sub	sp, sp, #0x60
  24a4b4:	stp	x29, x30, [sp, #32]
  24a4b8:	add	x29, sp, #0x20
  24a4bc:	stp	x24, x23, [sp, #48]
  24a4c0:	stp	x22, x21, [sp, #64]
  24a4c4:	stp	x20, x19, [sp, #80]
  24a4c8:	stur	w5, [x29, #-4]
  24a4cc:	cbz	x0, 24a6cc <devnode_acl+0x21c>
  24a4d0:	mov	w20, w1
  24a4d4:	mov	w1, #0x8000                	// #32768
  24a4d8:	mov	w21, w4
  24a4dc:	mov	w22, w3
  24a4e0:	mov	w23, w2
  24a4e4:	mov	x19, x0
  24a4e8:	bl	254ce0 <acl_get_file@plt>
  24a4ec:	str	x0, [sp, #16]
  24a4f0:	cbz	x0, 24a510 <devnode_acl+0x60>
  24a4f4:	tbz	w20, #0, 24a520 <devnode_acl+0x70>
  24a4f8:	bl	24a6f0 <flush_acl>
  24a4fc:	mov	w20, w0
  24a500:	tbnz	w0, #31, 24a6a8 <devnode_acl+0x1f8>
  24a504:	cmp	w20, #0x0
  24a508:	cset	w24, ne  // ne = any
  24a50c:	b	24a59c <devnode_acl+0xec>
  24a510:	bl	253660 <__errno_location@plt>
  24a514:	ldr	w8, [x0]
  24a518:	neg	w20, w8
  24a51c:	b	24a6b0 <devnode_acl+0x200>
  24a520:	mov	w24, wzr
  24a524:	mov	w20, wzr
  24a528:	cbz	w22, 24a59c <devnode_acl+0xec>
  24a52c:	tbz	w23, #0, 24a59c <devnode_acl+0xec>
  24a530:	add	x2, sp, #0x8
  24a534:	mov	w1, w22
  24a538:	bl	254cf0 <acl_find_uid@plt>
  24a53c:	mov	w20, w0
  24a540:	tbnz	w0, #31, 24a564 <devnode_acl+0xb4>
  24a544:	cbz	w20, 24a574 <devnode_acl+0xc4>
  24a548:	ldp	x1, x0, [sp, #8]
  24a54c:	bl	254d00 <acl_delete_entry@plt>
  24a550:	tbnz	w0, #31, 24a584 <devnode_acl+0xd4>
  24a554:	mov	w24, #0x1                   	// #1
  24a558:	mov	w8, #0x1                   	// #1
  24a55c:	cbnz	w8, 24a59c <devnode_acl+0xec>
  24a560:	b	24a6a8 <devnode_acl+0x1f8>
  24a564:	mov	w24, wzr
  24a568:	mov	w8, wzr
  24a56c:	cbnz	w8, 24a59c <devnode_acl+0xec>
  24a570:	b	24a6a8 <devnode_acl+0x1f8>
  24a574:	mov	w24, wzr
  24a578:	mov	w8, #0x1                   	// #1
  24a57c:	cbnz	w8, 24a59c <devnode_acl+0xec>
  24a580:	b	24a6a8 <devnode_acl+0x1f8>
  24a584:	bl	253660 <__errno_location@plt>
  24a588:	ldr	w9, [x0]
  24a58c:	mov	w24, wzr
  24a590:	mov	w8, wzr
  24a594:	neg	w20, w9
  24a598:	cbz	w8, 24a6a8 <devnode_acl+0x1f8>
  24a59c:	ldur	w1, [x29, #-4]
  24a5a0:	cbz	w1, 24a670 <devnode_acl+0x1c0>
  24a5a4:	tbz	w21, #0, 24a670 <devnode_acl+0x1c0>
  24a5a8:	ldr	x0, [sp, #16]
  24a5ac:	add	x2, sp, #0x8
  24a5b0:	bl	254cf0 <acl_find_uid@plt>
  24a5b4:	mov	w20, w0
  24a5b8:	tbnz	w0, #31, 24a604 <devnode_acl+0x154>
  24a5bc:	cbz	w20, 24a60c <devnode_acl+0x15c>
  24a5c0:	ldr	x0, [sp, #8]
  24a5c4:	mov	x1, sp
  24a5c8:	bl	254d10 <acl_get_permset@plt>
  24a5cc:	tbnz	w0, #31, 24a65c <devnode_acl+0x1ac>
  24a5d0:	ldr	x0, [sp]
  24a5d4:	mov	w1, #0x4                   	// #4
  24a5d8:	bl	254d20 <acl_get_perm@plt>
  24a5dc:	tbnz	w0, #31, 24a65c <devnode_acl+0x1ac>
  24a5e0:	mov	w21, w0
  24a5e4:	ldr	x0, [sp]
  24a5e8:	mov	w1, #0x2                   	// #2
  24a5ec:	bl	254d20 <acl_get_perm@plt>
  24a5f0:	tbnz	w0, #31, 24a65c <devnode_acl+0x1ac>
  24a5f4:	cbz	w21, 24a640 <devnode_acl+0x190>
  24a5f8:	cbz	w0, 24a640 <devnode_acl+0x190>
  24a5fc:	mov	w8, #0x1                   	// #1
  24a600:	b	24a66c <devnode_acl+0x1bc>
  24a604:	mov	w8, wzr
  24a608:	b	24a66c <devnode_acl+0x1bc>
  24a60c:	add	x0, sp, #0x10
  24a610:	add	x1, sp, #0x8
  24a614:	bl	254d30 <acl_create_entry@plt>
  24a618:	tbnz	w0, #31, 24a65c <devnode_acl+0x1ac>
  24a61c:	ldr	x0, [sp, #8]
  24a620:	mov	w1, #0x2                   	// #2
  24a624:	bl	254d40 <acl_set_tag_type@plt>
  24a628:	tbnz	w0, #31, 24a65c <devnode_acl+0x1ac>
  24a62c:	ldr	x0, [sp, #8]
  24a630:	sub	x1, x29, #0x4
  24a634:	bl	254d50 <acl_set_qualifier@plt>
  24a638:	tbz	w0, #31, 24a5c0 <devnode_acl+0x110>
  24a63c:	b	24a65c <devnode_acl+0x1ac>
  24a640:	ldr	x0, [sp]
  24a644:	mov	w1, #0x6                   	// #6
  24a648:	bl	254d60 <acl_add_perm@plt>
  24a64c:	tbnz	w0, #31, 24a65c <devnode_acl+0x1ac>
  24a650:	mov	w24, #0x1                   	// #1
  24a654:	mov	w8, #0x1                   	// #1
  24a658:	b	24a66c <devnode_acl+0x1bc>
  24a65c:	bl	253660 <__errno_location@plt>
  24a660:	ldr	w9, [x0]
  24a664:	mov	w8, wzr
  24a668:	neg	w20, w9
  24a66c:	cbz	w8, 24a6a8 <devnode_acl+0x1f8>
  24a670:	cbz	w24, 24a6a8 <devnode_acl+0x1f8>
  24a674:	add	x0, sp, #0x10
  24a678:	bl	254d70 <acl_calc_mask@plt>
  24a67c:	tbnz	w0, #31, 24a69c <devnode_acl+0x1ec>
  24a680:	ldr	x2, [sp, #16]
  24a684:	mov	w1, #0x8000                	// #32768
  24a688:	mov	x0, x19
  24a68c:	bl	254d80 <acl_set_file@plt>
  24a690:	tbnz	w0, #31, 24a69c <devnode_acl+0x1ec>
  24a694:	mov	w20, wzr
  24a698:	b	24a6a8 <devnode_acl+0x1f8>
  24a69c:	bl	253660 <__errno_location@plt>
  24a6a0:	ldr	w8, [x0]
  24a6a4:	neg	w20, w8
  24a6a8:	ldr	x0, [sp, #16]
  24a6ac:	bl	254d90 <acl_free@plt>
  24a6b0:	mov	w0, w20
  24a6b4:	ldp	x20, x19, [sp, #80]
  24a6b8:	ldp	x22, x21, [sp, #64]
  24a6bc:	ldp	x24, x23, [sp, #48]
  24a6c0:	ldp	x29, x30, [sp, #32]
  24a6c4:	add	sp, sp, #0x60
  24a6c8:	ret
  24a6cc:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24a6d0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24a6d4:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24a6d8:	add	x1, x1, #0x18d
  24a6dc:	add	x2, x2, #0xbea
  24a6e0:	add	x4, x4, #0x57c
  24a6e4:	mov	w0, #0x1                   	// #1
  24a6e8:	mov	w3, #0x3b                  	// #59
  24a6ec:	bl	253740 <log_assert_failed_realm@plt>

000000000024a6f0 <flush_acl>:
  24a6f0:	sub	sp, sp, #0x40
  24a6f4:	stp	x29, x30, [sp, #16]
  24a6f8:	str	x21, [sp, #32]
  24a6fc:	stp	x20, x19, [sp, #48]
  24a700:	add	x29, sp, #0x10
  24a704:	cbz	x0, 24a7e4 <flush_acl+0xf4>
  24a708:	add	x2, x29, #0x18
  24a70c:	mov	w1, wzr
  24a710:	mov	x19, x0
  24a714:	bl	254da0 <acl_get_entry@plt>
  24a718:	cmp	w0, #0x1
  24a71c:	b.lt	24a7b0 <flush_acl+0xc0>  // b.tstop
  24a720:	mov	w21, wzr
  24a724:	b	24a740 <flush_acl+0x50>
  24a728:	add	x2, x29, #0x18
  24a72c:	mov	w1, #0x1                   	// #1
  24a730:	mov	x0, x19
  24a734:	bl	254da0 <acl_get_entry@plt>
  24a738:	cmp	w0, #0x0
  24a73c:	b.le	24a7b4 <flush_acl+0xc4>
  24a740:	ldr	x0, [x29, #24]
  24a744:	sub	x1, x29, #0x4
  24a748:	bl	254db0 <acl_get_tag_type@plt>
  24a74c:	tbnz	w0, #31, 24a780 <flush_acl+0x90>
  24a750:	ldur	w8, [x29, #-4]
  24a754:	cmp	w8, #0x2
  24a758:	b.ne	24a79c <flush_acl+0xac>  // b.any
  24a75c:	ldr	x1, [x29, #24]
  24a760:	mov	x0, x19
  24a764:	bl	254d00 <acl_delete_entry@plt>
  24a768:	tbnz	w0, #31, 24a780 <flush_acl+0x90>
  24a76c:	mov	w8, wzr
  24a770:	mov	w21, #0x1                   	// #1
  24a774:	cmp	w8, #0x6
  24a778:	b.ne	24a7a8 <flush_acl+0xb8>  // b.any
  24a77c:	b	24a728 <flush_acl+0x38>
  24a780:	bl	253660 <__errno_location@plt>
  24a784:	ldr	w8, [x0]
  24a788:	neg	w20, w8
  24a78c:	mov	w8, #0x1                   	// #1
  24a790:	cmp	w8, #0x6
  24a794:	b.ne	24a7a8 <flush_acl+0xb8>  // b.any
  24a798:	b	24a728 <flush_acl+0x38>
  24a79c:	mov	w8, #0x6                   	// #6
  24a7a0:	cmp	w8, #0x6
  24a7a4:	b.eq	24a728 <flush_acl+0x38>  // b.none
  24a7a8:	cbz	w8, 24a728 <flush_acl+0x38>
  24a7ac:	b	24a7cc <flush_acl+0xdc>
  24a7b0:	mov	w21, wzr
  24a7b4:	tbnz	w0, #31, 24a7c0 <flush_acl+0xd0>
  24a7b8:	and	w20, w21, #0x1
  24a7bc:	b	24a7cc <flush_acl+0xdc>
  24a7c0:	bl	253660 <__errno_location@plt>
  24a7c4:	ldr	w8, [x0]
  24a7c8:	neg	w20, w8
  24a7cc:	mov	w0, w20
  24a7d0:	ldp	x20, x19, [sp, #48]
  24a7d4:	ldr	x21, [sp, #32]
  24a7d8:	ldp	x29, x30, [sp, #16]
  24a7dc:	add	sp, sp, #0x40
  24a7e0:	ret
  24a7e4:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  24a7e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24a7ec:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24a7f0:	add	x1, x1, #0x6e6
  24a7f4:	add	x2, x2, #0xbea
  24a7f8:	add	x4, x4, #0x91
  24a7fc:	mov	w0, #0x1                   	// #1
  24a800:	mov	w3, #0x18                  	// #24
  24a804:	bl	253740 <log_assert_failed_realm@plt>

000000000024a808 <devnode_acl_all>:
  24a808:	sub	sp, sp, #0xc0
  24a80c:	stp	x29, x30, [sp, #96]
  24a810:	add	x29, sp, #0x60
  24a814:	stp	x28, x27, [sp, #112]
  24a818:	stp	x26, x25, [sp, #128]
  24a81c:	stp	x24, x23, [sp, #144]
  24a820:	stp	x22, x21, [sp, #160]
  24a824:	stp	x20, x19, [sp, #176]
  24a828:	str	w4, [sp, #36]
  24a82c:	mov	x24, x0
  24a830:	stp	xzr, xzr, [x29, #-16]
  24a834:	stur	xzr, [x29, #-24]
  24a838:	adrp	x0, 27d000 <builtin_blkid.options+0x50>
  24a83c:	ldr	x0, [x0, #784]
  24a840:	mov	w19, w5
  24a844:	mov	w21, w3
  24a848:	mov	w22, w2
  24a84c:	mov	w20, w1
  24a850:	bl	254dc0 <internal_set_new@plt>
  24a854:	stur	x0, [x29, #-16]
  24a858:	cbz	x0, 24a9b0 <devnode_acl_all+0x1a8>
  24a85c:	mov	x23, x0
  24a860:	sub	x0, x29, #0x8
  24a864:	bl	253dc0 <sd_device_enumerator_new@plt>
  24a868:	tbnz	w0, #31, 24a9a8 <devnode_acl_all+0x1a0>
  24a86c:	mov	x0, x24
  24a870:	bl	24aca8 <isempty>
  24a874:	ldur	x8, [x29, #-8]
  24a878:	adrp	x28, 20b000 <worker_hash_op+0xad0>
  24a87c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24a880:	add	x28, x28, #0xc73
  24a884:	tst	w0, #0x1
  24a888:	add	x1, x1, #0x1a9
  24a88c:	mov	x0, x8
  24a890:	csel	x24, x28, x24, ne  // ne = any
  24a894:	bl	254dd0 <sd_device_enumerator_add_match_tag@plt>
  24a898:	tbnz	w0, #31, 24a9a8 <devnode_acl_all+0x1a0>
  24a89c:	ldur	x0, [x29, #-8]
  24a8a0:	bl	253e00 <sd_device_enumerator_get_device_first@plt>
  24a8a4:	cbz	x0, 24a9f0 <devnode_acl_all+0x1e8>
  24a8a8:	adrp	x27, 214000 <worker_hash_op+0x9ad0>
  24a8ac:	mov	x26, x0
  24a8b0:	add	x27, x27, #0xe28
  24a8b4:	add	x2, sp, #0x30
  24a8b8:	mov	x0, x26
  24a8bc:	mov	x1, x27
  24a8c0:	bl	253be0 <sd_device_get_property_value@plt>
  24a8c4:	tbnz	w0, #31, 24a8d4 <devnode_acl_all+0xcc>
  24a8c8:	ldr	x0, [sp, #48]
  24a8cc:	bl	24aca8 <isempty>
  24a8d0:	tbz	w0, #0, 24a8d8 <devnode_acl_all+0xd0>
  24a8d4:	str	x28, [sp, #48]
  24a8d8:	ldr	x1, [sp, #48]
  24a8dc:	mov	x0, x24
  24a8e0:	bl	253bc0 <strcmp@plt>
  24a8e4:	cbz	w0, 24a8f0 <devnode_acl_all+0xe8>
  24a8e8:	mov	w8, #0x4                   	// #4
  24a8ec:	b	24a978 <devnode_acl_all+0x170>
  24a8f0:	sub	x1, x29, #0x28
  24a8f4:	mov	x0, x26
  24a8f8:	bl	253ad0 <sd_device_get_devname@plt>
  24a8fc:	tbnz	w0, #31, 24a8e8 <devnode_acl_all+0xe0>
  24a900:	mov	w0, #0x1                   	// #1
  24a904:	str	xzr, [sp, #40]
  24a908:	bl	2535b0 <log_get_max_level_realm@plt>
  24a90c:	cmp	w0, #0x7
  24a910:	b.ge	24a998 <devnode_acl_all+0x190>  // b.tcont
  24a914:	ldr	x6, [sp, #40]
  24a918:	ldur	x8, [x29, #-40]
  24a91c:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  24a920:	add	x9, x9, #0xb64
  24a924:	cmp	x6, #0x0
  24a928:	stp	x8, x24, [sp, #16]
  24a92c:	adrp	x8, 20c000 <worker_hash_op+0x1ad0>
  24a930:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24a934:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24a938:	csel	x5, xzr, x9, eq  // eq = none
  24a93c:	add	x8, x8, #0xa17
  24a940:	mov	w0, #0x7                   	// #7
  24a944:	mov	w3, #0xd0                  	// #208
  24a948:	mov	w1, wzr
  24a94c:	add	x2, x2, #0xbea
  24a950:	add	x4, x4, #0x991
  24a954:	mov	x7, xzr
  24a958:	stp	xzr, x8, [sp]
  24a95c:	bl	2539f0 <log_object_internal@plt>
  24a960:	ldur	x1, [x29, #-40]
  24a964:	mov	x0, x23
  24a968:	bl	254de0 <set_put_strdup@plt>
  24a96c:	cmp	w0, #0x0
  24a970:	lsr	w8, w0, #31
  24a974:	csel	w25, w0, w25, lt  // lt = tstop
  24a978:	orr	w8, w8, #0x4
  24a97c:	cmp	w8, #0x4
  24a980:	b.ne	24a9b4 <devnode_acl_all+0x1ac>  // b.any
  24a984:	ldur	x0, [x29, #-8]
  24a988:	bl	253e10 <sd_device_enumerator_get_device_next@plt>
  24a98c:	mov	x26, x0
  24a990:	cbnz	x0, 24a8b4 <devnode_acl_all+0xac>
  24a994:	b	24a9f0 <devnode_acl_all+0x1e8>
  24a998:	add	x1, sp, #0x28
  24a99c:	mov	x0, x26
  24a9a0:	bl	253a40 <sd_device_get_sysname@plt>
  24a9a4:	b	24a914 <devnode_acl_all+0x10c>
  24a9a8:	mov	w25, w0
  24a9ac:	b	24a9b4 <devnode_acl_all+0x1ac>
  24a9b0:	mov	w25, #0xfffffff4            	// #-12
  24a9b4:	sub	x0, x29, #0x18
  24a9b8:	bl	24ac8c <closedirp>
  24a9bc:	sub	x0, x29, #0x10
  24a9c0:	bl	24ac70 <set_free_freep>
  24a9c4:	sub	x0, x29, #0x8
  24a9c8:	bl	24ac54 <sd_device_enumerator_unrefp>
  24a9cc:	mov	w0, w25
  24a9d0:	ldp	x20, x19, [sp, #176]
  24a9d4:	ldp	x22, x21, [sp, #160]
  24a9d8:	ldp	x24, x23, [sp, #144]
  24a9dc:	ldp	x26, x25, [sp, #128]
  24a9e0:	ldp	x28, x27, [sp, #112]
  24a9e4:	ldp	x29, x30, [sp, #96]
  24a9e8:	add	sp, sp, #0xc0
  24a9ec:	ret
  24a9f0:	adrp	x0, 218000 <worker_hash_op+0xdad0>
  24a9f4:	add	x0, x0, #0x6e0
  24a9f8:	bl	2543a0 <opendir@plt>
  24a9fc:	stur	x0, [x29, #-24]
  24aa00:	cbz	x0, 24ab24 <devnode_acl_all+0x31c>
  24aa04:	mov	x27, x0
  24aa08:	str	w20, [sp, #32]
  24aa0c:	bl	253660 <__errno_location@plt>
  24aa10:	mov	x28, x0
  24aa14:	str	wzr, [x0]
  24aa18:	b	24aa20 <devnode_acl_all+0x218>
  24aa1c:	str	wzr, [x28]
  24aa20:	mov	x0, x27
  24aa24:	bl	2543b0 <readdir64@plt>
  24aa28:	cbz	x0, 24ab0c <devnode_acl_all+0x304>
  24aa2c:	add	x26, x0, #0x13
  24aa30:	mov	x0, x26
  24aa34:	bl	254df0 <hidden_or_backup_file@plt>
  24aa38:	tbnz	w0, #0, 24aa1c <devnode_acl_all+0x214>
  24aa3c:	sub	x2, x29, #0x28
  24aa40:	mov	w1, #0x1                   	// #1
  24aa44:	mov	x0, x26
  24aa48:	stur	xzr, [x29, #-40]
  24aa4c:	mov	w20, #0x1                   	// #1
  24aa50:	bl	254e00 <cunescape@plt>
  24aa54:	tbnz	w0, #31, 24aad4 <devnode_acl_all+0x2cc>
  24aa58:	ldur	x1, [x29, #-40]
  24aa5c:	adrp	x0, 211000 <worker_hash_op+0x6ad0>
  24aa60:	mov	x2, #0xffffffffffffffff    	// #-1
  24aa64:	add	x0, x0, #0x667
  24aa68:	bl	254100 <path_join_internal@plt>
  24aa6c:	str	x0, [sp, #48]
  24aa70:	cbz	x0, 24aadc <devnode_acl_all+0x2d4>
  24aa74:	mov	x26, x0
  24aa78:	mov	w0, #0x1                   	// #1
  24aa7c:	bl	2535b0 <log_get_max_level_realm@plt>
  24aa80:	cmp	w0, #0x7
  24aa84:	b.lt	24aab8 <devnode_acl_all+0x2b0>  // b.tstop
  24aa88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24aa8c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24aa90:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  24aa94:	mov	w0, #0x407                 	// #1031
  24aa98:	mov	w3, #0xe4                  	// #228
  24aa9c:	mov	w1, wzr
  24aaa0:	add	x2, x2, #0xbea
  24aaa4:	add	x4, x4, #0x991
  24aaa8:	add	x5, x5, #0xb34
  24aaac:	mov	x6, x26
  24aab0:	mov	x7, x24
  24aab4:	bl	2535c0 <log_internal_realm@plt>
  24aab8:	ldr	x1, [sp, #48]
  24aabc:	mov	x0, x23
  24aac0:	bl	254e10 <set_consume@plt>
  24aac4:	cmn	w0, #0x11
  24aac8:	b.ne	24aae8 <devnode_acl_all+0x2e0>  // b.any
  24aacc:	mov	w20, #0x7                   	// #7
  24aad0:	b	24aaf4 <devnode_acl_all+0x2ec>
  24aad4:	mov	w25, #0xfffffff4            	// #-12
  24aad8:	b	24aaf4 <devnode_acl_all+0x2ec>
  24aadc:	mov	w25, #0xfffffff4            	// #-12
  24aae0:	mov	w20, #0x1                   	// #1
  24aae4:	b	24aaf4 <devnode_acl_all+0x2ec>
  24aae8:	cmp	w0, #0x0
  24aaec:	lsr	w20, w0, #31
  24aaf0:	csel	w25, w0, w25, lt  // lt = tstop
  24aaf4:	sub	x0, x29, #0x28
  24aaf8:	bl	24acc4 <freep>
  24aafc:	cmp	w20, #0x7
  24ab00:	b.eq	24aa1c <devnode_acl_all+0x214>  // b.none
  24ab04:	cbz	w20, 24aa1c <devnode_acl_all+0x214>
  24ab08:	b	24a9b4 <devnode_acl_all+0x1ac>
  24ab0c:	ldr	w8, [x28]
  24ab10:	ldr	w20, [sp, #32]
  24ab14:	cmp	w8, #0x1
  24ab18:	b.lt	24ab24 <devnode_acl_all+0x31c>  // b.tstop
  24ab1c:	neg	w25, w8
  24ab20:	b	24a9b4 <devnode_acl_all+0x1ac>
  24ab24:	mov	w8, #0xfffffffe            	// #-2
  24ab28:	sub	x1, x29, #0x28
  24ab2c:	add	x2, sp, #0x30
  24ab30:	mov	x0, x23
  24ab34:	stur	w8, [x29, #-40]
  24ab38:	stur	xzr, [x29, #-32]
  24ab3c:	bl	254e20 <set_iterate@plt>
  24ab40:	mov	w25, wzr
  24ab44:	tbz	w0, #0, 24a9b4 <devnode_acl_all+0x1ac>
  24ab48:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  24ab4c:	adrp	x9, 216000 <worker_hash_op+0xbad0>
  24ab50:	add	x8, x8, #0x7fa
  24ab54:	add	x9, x9, #0x493
  24ab58:	tst	w22, #0x1
  24ab5c:	csel	x27, x9, x8, ne  // ne = any
  24ab60:	ldr	w9, [sp, #36]
  24ab64:	adrp	x10, 210000 <worker_hash_op+0x5ad0>
  24ab68:	adrp	x11, 210000 <worker_hash_op+0x5ad0>
  24ab6c:	add	x10, x10, #0x5a6
  24ab70:	add	x11, x11, #0xbea
  24ab74:	tst	w9, #0x1
  24ab78:	and	w26, w20, #0x1
  24ab7c:	mov	x20, x11
  24ab80:	csel	x28, x10, x8, ne  // ne = any
  24ab84:	b	24aba8 <devnode_acl_all+0x3a0>
  24ab88:	cmp	w0, #0x0
  24ab8c:	ccmp	w25, #0x0, #0x0, lt  // lt = tstop
  24ab90:	csel	w25, w0, w25, eq  // eq = none
  24ab94:	sub	x1, x29, #0x28
  24ab98:	add	x2, sp, #0x30
  24ab9c:	mov	x0, x23
  24aba0:	bl	254e20 <set_iterate@plt>
  24aba4:	tbz	w0, #0, 24a9b4 <devnode_acl_all+0x1ac>
  24aba8:	mov	w0, #0x1                   	// #1
  24abac:	bl	2535b0 <log_get_max_level_realm@plt>
  24abb0:	cmp	w0, #0x7
  24abb4:	b.lt	24abf0 <devnode_acl_all+0x3e8>  // b.tstop
  24abb8:	ldr	x6, [sp, #48]
  24abbc:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24abc0:	adrp	x5, 214000 <worker_hash_op+0x9ad0>
  24abc4:	mov	w0, #0x407                 	// #1031
  24abc8:	mov	w3, #0xf3                  	// #243
  24abcc:	mov	w1, wzr
  24abd0:	mov	x2, x20
  24abd4:	add	x4, x4, #0x991
  24abd8:	add	x5, x5, #0x544
  24abdc:	mov	x7, x24
  24abe0:	stp	x27, x28, [sp, #16]
  24abe4:	str	w19, [sp, #8]
  24abe8:	str	w21, [sp]
  24abec:	bl	2535c0 <log_internal_realm@plt>
  24abf0:	ldr	w8, [sp, #36]
  24abf4:	ldr	x0, [sp, #48]
  24abf8:	and	w2, w22, #0x1
  24abfc:	mov	w1, w26
  24ac00:	and	w4, w8, #0x1
  24ac04:	mov	w3, w21
  24ac08:	mov	w5, w19
  24ac0c:	bl	24a4b0 <devnode_acl>
  24ac10:	cmn	w0, #0x2
  24ac14:	b.ne	24ab88 <devnode_acl_all+0x380>  // b.any
  24ac18:	mov	w0, #0x1                   	// #1
  24ac1c:	bl	2535b0 <log_get_max_level_realm@plt>
  24ac20:	cmp	w0, #0x7
  24ac24:	b.lt	24ab94 <devnode_acl_all+0x38c>  // b.tstop
  24ac28:	ldr	x6, [sp, #48]
  24ac2c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24ac30:	adrp	x5, 20a000 <parse_argv.options-0x3f0>
  24ac34:	mov	w0, #0x407                 	// #1031
  24ac38:	mov	w3, #0xf7                  	// #247
  24ac3c:	mov	w1, wzr
  24ac40:	mov	x2, x20
  24ac44:	add	x4, x4, #0x991
  24ac48:	add	x5, x5, #0x978
  24ac4c:	bl	2535c0 <log_internal_realm@plt>
  24ac50:	b	24ab94 <devnode_acl_all+0x38c>

000000000024ac54 <sd_device_enumerator_unrefp>:
  24ac54:	stp	x29, x30, [sp, #-16]!
  24ac58:	ldr	x0, [x0]
  24ac5c:	mov	x29, sp
  24ac60:	cbz	x0, 24ac68 <sd_device_enumerator_unrefp+0x14>
  24ac64:	bl	253e30 <sd_device_enumerator_unref@plt>
  24ac68:	ldp	x29, x30, [sp], #16
  24ac6c:	ret

000000000024ac70 <set_free_freep>:
  24ac70:	stp	x29, x30, [sp, #-16]!
  24ac74:	ldr	x0, [x0]
  24ac78:	mov	x29, sp
  24ac7c:	cbz	x0, 24ac84 <set_free_freep+0x14>
  24ac80:	bl	24acdc <set_free_free>
  24ac84:	ldp	x29, x30, [sp], #16
  24ac88:	ret

000000000024ac8c <closedirp>:
  24ac8c:	stp	x29, x30, [sp, #-16]!
  24ac90:	ldr	x0, [x0]
  24ac94:	mov	x29, sp
  24ac98:	cbz	x0, 24aca0 <closedirp+0x14>
  24ac9c:	bl	2543e0 <closedir@plt>
  24aca0:	ldp	x29, x30, [sp], #16
  24aca4:	ret

000000000024aca8 <isempty>:
  24aca8:	cbz	x0, 24acbc <isempty+0x14>
  24acac:	ldrb	w8, [x0]
  24acb0:	cmp	w8, #0x0
  24acb4:	cset	w0, eq  // eq = none
  24acb8:	ret
  24acbc:	mov	w0, #0x1                   	// #1
  24acc0:	ret

000000000024acc4 <freep>:
  24acc4:	stp	x29, x30, [sp, #-16]!
  24acc8:	ldr	x0, [x0]
  24accc:	mov	x29, sp
  24acd0:	bl	2536e0 <free@plt>
  24acd4:	ldp	x29, x30, [sp], #16
  24acd8:	ret

000000000024acdc <set_free_free>:
  24acdc:	stp	x29, x30, [sp, #-16]!
  24ace0:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  24ace4:	ldr	x1, [x1, #728]
  24ace8:	mov	x2, xzr
  24acec:	mov	x29, sp
  24acf0:	bl	253940 <internal_hashmap_free@plt>
  24acf4:	ldp	x29, x30, [sp], #16
  24acf8:	ret

000000000024acfc <sd_pid_get_session>:
  24acfc:	stp	x29, x30, [sp, #-16]!
  24ad00:	mov	x29, sp
  24ad04:	tbnz	w0, #31, 24ad2c <sd_pid_get_session+0x30>
  24ad08:	cbz	x1, 24ad50 <sd_pid_get_session+0x54>
  24ad0c:	bl	254e30 <cg_pid_get_session@plt>
  24ad10:	cmn	w0, #0x6
  24ad14:	b.eq	24ad20 <sd_pid_get_session+0x24>  // b.none
  24ad18:	cmn	w0, #0x7b
  24ad1c:	b.ne	24ad24 <sd_pid_get_session+0x28>  // b.any
  24ad20:	mov	w0, #0xffffffc3            	// #-61
  24ad24:	ldp	x29, x30, [sp], #16
  24ad28:	ret
  24ad2c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24ad30:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ad34:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24ad38:	add	x1, x1, #0xf59
  24ad3c:	add	x2, x2, #0xc6e
  24ad40:	add	x4, x4, #0xa00
  24ad44:	mov	w0, #0x1                   	// #1
  24ad48:	mov	w3, #0x2b                  	// #43
  24ad4c:	b	24ad70 <sd_pid_get_session+0x74>
  24ad50:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24ad54:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ad58:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24ad5c:	add	x1, x1, #0x9f9
  24ad60:	add	x2, x2, #0xc6e
  24ad64:	add	x4, x4, #0xa00
  24ad68:	mov	w0, #0x1                   	// #1
  24ad6c:	mov	w3, #0x2c                  	// #44
  24ad70:	bl	253f10 <log_assert_failed_return_realm@plt>
  24ad74:	mov	w0, #0xffffffea            	// #-22
  24ad78:	ldp	x29, x30, [sp], #16
  24ad7c:	ret

000000000024ad80 <sd_pid_get_unit>:
  24ad80:	stp	x29, x30, [sp, #-16]!
  24ad84:	mov	x29, sp
  24ad88:	tbnz	w0, #31, 24adb0 <sd_pid_get_unit+0x30>
  24ad8c:	cbz	x1, 24add4 <sd_pid_get_unit+0x54>
  24ad90:	bl	254e40 <cg_pid_get_unit@plt>
  24ad94:	cmn	w0, #0x6
  24ad98:	b.eq	24ada4 <sd_pid_get_unit+0x24>  // b.none
  24ad9c:	cmn	w0, #0x7b
  24ada0:	b.ne	24ada8 <sd_pid_get_unit+0x28>  // b.any
  24ada4:	mov	w0, #0xffffffc3            	// #-61
  24ada8:	ldp	x29, x30, [sp], #16
  24adac:	ret
  24adb0:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24adb4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24adb8:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24adbc:	add	x1, x1, #0xf59
  24adc0:	add	x2, x2, #0xc6e
  24adc4:	add	x4, x4, #0x6ea
  24adc8:	mov	w0, #0x1                   	// #1
  24adcc:	mov	w3, #0x35                  	// #53
  24add0:	b	24adf4 <sd_pid_get_unit+0x74>
  24add4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24add8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24addc:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24ade0:	add	x1, x1, #0xa27
  24ade4:	add	x2, x2, #0xc6e
  24ade8:	add	x4, x4, #0x6ea
  24adec:	mov	w0, #0x1                   	// #1
  24adf0:	mov	w3, #0x36                  	// #54
  24adf4:	bl	253f10 <log_assert_failed_return_realm@plt>
  24adf8:	mov	w0, #0xffffffea            	// #-22
  24adfc:	ldp	x29, x30, [sp], #16
  24ae00:	ret

000000000024ae04 <sd_pid_get_user_unit>:
  24ae04:	stp	x29, x30, [sp, #-16]!
  24ae08:	mov	x29, sp
  24ae0c:	tbnz	w0, #31, 24ae34 <sd_pid_get_user_unit+0x30>
  24ae10:	cbz	x1, 24ae58 <sd_pid_get_user_unit+0x54>
  24ae14:	bl	254e50 <cg_pid_get_user_unit@plt>
  24ae18:	cmn	w0, #0x6
  24ae1c:	b.eq	24ae28 <sd_pid_get_user_unit+0x24>  // b.none
  24ae20:	cmn	w0, #0x7b
  24ae24:	b.ne	24ae2c <sd_pid_get_user_unit+0x28>  // b.any
  24ae28:	mov	w0, #0xffffffc3            	// #-61
  24ae2c:	ldp	x29, x30, [sp], #16
  24ae30:	ret
  24ae34:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24ae38:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ae3c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24ae40:	add	x1, x1, #0xf59
  24ae44:	add	x2, x2, #0xc6e
  24ae48:	add	x4, x4, #0x246
  24ae4c:	mov	w0, #0x1                   	// #1
  24ae50:	mov	w3, #0x3f                  	// #63
  24ae54:	b	24ae78 <sd_pid_get_user_unit+0x74>
  24ae58:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24ae5c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ae60:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24ae64:	add	x1, x1, #0xa27
  24ae68:	add	x2, x2, #0xc6e
  24ae6c:	add	x4, x4, #0x246
  24ae70:	mov	w0, #0x1                   	// #1
  24ae74:	mov	w3, #0x40                  	// #64
  24ae78:	bl	253f10 <log_assert_failed_return_realm@plt>
  24ae7c:	mov	w0, #0xffffffea            	// #-22
  24ae80:	ldp	x29, x30, [sp], #16
  24ae84:	ret

000000000024ae88 <sd_pid_get_machine_name>:
  24ae88:	stp	x29, x30, [sp, #-16]!
  24ae8c:	mov	x29, sp
  24ae90:	tbnz	w0, #31, 24aeb8 <sd_pid_get_machine_name+0x30>
  24ae94:	cbz	x1, 24aedc <sd_pid_get_machine_name+0x54>
  24ae98:	bl	254e60 <cg_pid_get_machine_name@plt>
  24ae9c:	cmn	w0, #0x6
  24aea0:	b.eq	24aeac <sd_pid_get_machine_name+0x24>  // b.none
  24aea4:	cmn	w0, #0x7b
  24aea8:	b.ne	24aeb0 <sd_pid_get_machine_name+0x28>  // b.any
  24aeac:	mov	w0, #0xffffffc3            	// #-61
  24aeb0:	ldp	x29, x30, [sp], #16
  24aeb4:	ret
  24aeb8:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24aebc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24aec0:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24aec4:	add	x1, x1, #0xf59
  24aec8:	add	x2, x2, #0xc6e
  24aecc:	add	x4, x4, #0x70e
  24aed0:	mov	w0, #0x1                   	// #1
  24aed4:	mov	w3, #0x49                  	// #73
  24aed8:	b	24aefc <sd_pid_get_machine_name+0x74>
  24aedc:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24aee0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24aee4:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24aee8:	add	x1, x1, #0xefb
  24aeec:	add	x2, x2, #0xc6e
  24aef0:	add	x4, x4, #0x70e
  24aef4:	mov	w0, #0x1                   	// #1
  24aef8:	mov	w3, #0x4a                  	// #74
  24aefc:	bl	253f10 <log_assert_failed_return_realm@plt>
  24af00:	mov	w0, #0xffffffea            	// #-22
  24af04:	ldp	x29, x30, [sp], #16
  24af08:	ret

000000000024af0c <sd_pid_get_slice>:
  24af0c:	stp	x29, x30, [sp, #-16]!
  24af10:	mov	x29, sp
  24af14:	tbnz	w0, #31, 24af3c <sd_pid_get_slice+0x30>
  24af18:	cbz	x1, 24af60 <sd_pid_get_slice+0x54>
  24af1c:	bl	254e70 <cg_pid_get_slice@plt>
  24af20:	cmn	w0, #0x6
  24af24:	b.eq	24af30 <sd_pid_get_slice+0x24>  // b.none
  24af28:	cmn	w0, #0x7b
  24af2c:	b.ne	24af34 <sd_pid_get_slice+0x28>  // b.any
  24af30:	mov	w0, #0xffffffc3            	// #-61
  24af34:	ldp	x29, x30, [sp], #16
  24af38:	ret
  24af3c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24af40:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24af44:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  24af48:	add	x1, x1, #0xf59
  24af4c:	add	x2, x2, #0xc6e
  24af50:	add	x4, x4, #0xc01
  24af54:	mov	w0, #0x1                   	// #1
  24af58:	mov	w3, #0x53                  	// #83
  24af5c:	b	24af80 <sd_pid_get_slice+0x74>
  24af60:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24af64:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24af68:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  24af6c:	add	x1, x1, #0xc79
  24af70:	add	x2, x2, #0xc6e
  24af74:	add	x4, x4, #0xc01
  24af78:	mov	w0, #0x1                   	// #1
  24af7c:	mov	w3, #0x54                  	// #84
  24af80:	bl	253f10 <log_assert_failed_return_realm@plt>
  24af84:	mov	w0, #0xffffffea            	// #-22
  24af88:	ldp	x29, x30, [sp], #16
  24af8c:	ret

000000000024af90 <sd_pid_get_user_slice>:
  24af90:	stp	x29, x30, [sp, #-16]!
  24af94:	mov	x29, sp
  24af98:	tbnz	w0, #31, 24afc0 <sd_pid_get_user_slice+0x30>
  24af9c:	cbz	x1, 24afe4 <sd_pid_get_user_slice+0x54>
  24afa0:	bl	254e80 <cg_pid_get_user_slice@plt>
  24afa4:	cmn	w0, #0x6
  24afa8:	b.eq	24afb4 <sd_pid_get_user_slice+0x24>  // b.none
  24afac:	cmn	w0, #0x7b
  24afb0:	b.ne	24afb8 <sd_pid_get_user_slice+0x28>  // b.any
  24afb4:	mov	w0, #0xffffffc3            	// #-61
  24afb8:	ldp	x29, x30, [sp], #16
  24afbc:	ret
  24afc0:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24afc4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24afc8:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24afcc:	add	x1, x1, #0xf59
  24afd0:	add	x2, x2, #0xc6e
  24afd4:	add	x4, x4, #0x5bd
  24afd8:	mov	w0, #0x1                   	// #1
  24afdc:	mov	w3, #0x5d                  	// #93
  24afe0:	b	24b004 <sd_pid_get_user_slice+0x74>
  24afe4:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24afe8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24afec:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24aff0:	add	x1, x1, #0xc79
  24aff4:	add	x2, x2, #0xc6e
  24aff8:	add	x4, x4, #0x5bd
  24affc:	mov	w0, #0x1                   	// #1
  24b000:	mov	w3, #0x5e                  	// #94
  24b004:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b008:	mov	w0, #0xffffffea            	// #-22
  24b00c:	ldp	x29, x30, [sp], #16
  24b010:	ret

000000000024b014 <sd_pid_get_owner_uid>:
  24b014:	stp	x29, x30, [sp, #-16]!
  24b018:	mov	x29, sp
  24b01c:	tbnz	w0, #31, 24b044 <sd_pid_get_owner_uid+0x30>
  24b020:	cbz	x1, 24b068 <sd_pid_get_owner_uid+0x54>
  24b024:	bl	254e90 <cg_pid_get_owner_uid@plt>
  24b028:	cmn	w0, #0x6
  24b02c:	b.eq	24b038 <sd_pid_get_owner_uid+0x24>  // b.none
  24b030:	cmn	w0, #0x7b
  24b034:	b.ne	24b03c <sd_pid_get_owner_uid+0x28>  // b.any
  24b038:	mov	w0, #0xffffffc3            	// #-61
  24b03c:	ldp	x29, x30, [sp], #16
  24b040:	ret
  24b044:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24b048:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b04c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24b050:	add	x1, x1, #0xf59
  24b054:	add	x2, x2, #0xc6e
  24b058:	add	x4, x4, #0x678
  24b05c:	mov	w0, #0x1                   	// #1
  24b060:	mov	w3, #0x67                  	// #103
  24b064:	b	24b088 <sd_pid_get_owner_uid+0x74>
  24b068:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24b06c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b070:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24b074:	add	x1, x1, #0x498
  24b078:	add	x2, x2, #0xc6e
  24b07c:	add	x4, x4, #0x678
  24b080:	mov	w0, #0x1                   	// #1
  24b084:	mov	w3, #0x68                  	// #104
  24b088:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b08c:	mov	w0, #0xffffffea            	// #-22
  24b090:	ldp	x29, x30, [sp], #16
  24b094:	ret

000000000024b098 <sd_pid_get_cgroup>:
  24b098:	sub	sp, sp, #0x30
  24b09c:	stp	x29, x30, [sp, #16]
  24b0a0:	stp	x20, x19, [sp, #32]
  24b0a4:	add	x29, sp, #0x10
  24b0a8:	tbnz	w0, #31, 24b11c <sd_pid_get_cgroup+0x84>
  24b0ac:	mov	x19, x1
  24b0b0:	cbz	x1, 24b140 <sd_pid_get_cgroup+0xa8>
  24b0b4:	mov	w1, w0
  24b0b8:	adrp	x0, 20c000 <worker_hash_op+0x1ad0>
  24b0bc:	add	x0, x0, #0xc33
  24b0c0:	add	x2, sp, #0x8
  24b0c4:	bl	2536a0 <cg_pid_get_path@plt>
  24b0c8:	tbnz	w0, #31, 24b104 <sd_pid_get_cgroup+0x6c>
  24b0cc:	ldr	x20, [sp, #8]
  24b0d0:	mov	x0, x20
  24b0d4:	bl	24b16c <isempty>
  24b0d8:	tbz	w0, #0, 24b0f8 <sd_pid_get_cgroup+0x60>
  24b0dc:	mov	x0, x20
  24b0e0:	bl	2536e0 <free@plt>
  24b0e4:	adrp	x0, 20b000 <worker_hash_op+0xad0>
  24b0e8:	add	x0, x0, #0x9d
  24b0ec:	bl	253ab0 <strdup@plt>
  24b0f0:	str	x0, [sp, #8]
  24b0f4:	cbz	x0, 24b114 <sd_pid_get_cgroup+0x7c>
  24b0f8:	ldr	x8, [sp, #8]
  24b0fc:	mov	w0, wzr
  24b100:	str	x8, [x19]
  24b104:	ldp	x20, x19, [sp, #32]
  24b108:	ldp	x29, x30, [sp, #16]
  24b10c:	add	sp, sp, #0x30
  24b110:	ret
  24b114:	mov	w0, #0xfffffff4            	// #-12
  24b118:	b	24b104 <sd_pid_get_cgroup+0x6c>
  24b11c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24b120:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b124:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24b128:	add	x1, x1, #0xf59
  24b12c:	add	x2, x2, #0xc6e
  24b130:	add	x4, x4, #0xb55
  24b134:	mov	w0, #0x1                   	// #1
  24b138:	mov	w3, #0x72                  	// #114
  24b13c:	b	24b160 <sd_pid_get_cgroup+0xc8>
  24b140:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24b144:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b148:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24b14c:	add	x1, x1, #0x26f
  24b150:	add	x2, x2, #0xc6e
  24b154:	add	x4, x4, #0xb55
  24b158:	mov	w0, #0x1                   	// #1
  24b15c:	mov	w3, #0x73                  	// #115
  24b160:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b164:	mov	w0, #0xffffffea            	// #-22
  24b168:	b	24b104 <sd_pid_get_cgroup+0x6c>

000000000024b16c <isempty>:
  24b16c:	cbz	x0, 24b180 <isempty+0x14>
  24b170:	ldrb	w8, [x0]
  24b174:	cmp	w8, #0x0
  24b178:	cset	w0, eq  // eq = none
  24b17c:	ret
  24b180:	mov	w0, #0x1                   	// #1
  24b184:	ret

000000000024b188 <sd_peer_get_session>:
  24b188:	sub	sp, sp, #0x30
  24b18c:	stp	x29, x30, [sp, #16]
  24b190:	str	x19, [sp, #32]
  24b194:	add	x29, sp, #0x10
  24b198:	str	wzr, [sp, #8]
  24b19c:	str	xzr, [sp]
  24b1a0:	tbnz	w0, #31, 24b1d4 <sd_peer_get_session+0x4c>
  24b1a4:	mov	x19, x1
  24b1a8:	cbz	x1, 24b200 <sd_peer_get_session+0x78>
  24b1ac:	mov	x1, sp
  24b1b0:	bl	253f30 <getpeercred@plt>
  24b1b4:	tbnz	w0, #31, 24b1c4 <sd_peer_get_session+0x3c>
  24b1b8:	ldr	w0, [sp]
  24b1bc:	mov	x1, x19
  24b1c0:	bl	254e30 <cg_pid_get_session@plt>
  24b1c4:	ldr	x19, [sp, #32]
  24b1c8:	ldp	x29, x30, [sp, #16]
  24b1cc:	add	sp, sp, #0x30
  24b1d0:	ret
  24b1d4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b1d8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b1dc:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24b1e0:	add	x1, x1, #0x106
  24b1e4:	add	x2, x2, #0xc6e
  24b1e8:	add	x4, x4, #0xa36
  24b1ec:	mov	w0, #0x1                   	// #1
  24b1f0:	mov	w3, #0x8c                  	// #140
  24b1f4:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b1f8:	mov	w0, #0xfffffff7            	// #-9
  24b1fc:	b	24b1c4 <sd_peer_get_session+0x3c>
  24b200:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24b204:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b208:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24b20c:	add	x1, x1, #0x9f9
  24b210:	add	x2, x2, #0xc6e
  24b214:	add	x4, x4, #0xa36
  24b218:	mov	w0, #0x1                   	// #1
  24b21c:	mov	w3, #0x8d                  	// #141
  24b220:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b224:	mov	w0, #0xffffffea            	// #-22
  24b228:	b	24b1c4 <sd_peer_get_session+0x3c>

000000000024b22c <sd_peer_get_owner_uid>:
  24b22c:	sub	sp, sp, #0x30
  24b230:	stp	x29, x30, [sp, #16]
  24b234:	str	x19, [sp, #32]
  24b238:	add	x29, sp, #0x10
  24b23c:	tbnz	w0, #31, 24b270 <sd_peer_get_owner_uid+0x44>
  24b240:	mov	x19, x1
  24b244:	cbz	x1, 24b29c <sd_peer_get_owner_uid+0x70>
  24b248:	mov	x1, sp
  24b24c:	bl	253f30 <getpeercred@plt>
  24b250:	tbnz	w0, #31, 24b260 <sd_peer_get_owner_uid+0x34>
  24b254:	ldr	w0, [sp]
  24b258:	mov	x1, x19
  24b25c:	bl	254e90 <cg_pid_get_owner_uid@plt>
  24b260:	ldr	x19, [sp, #32]
  24b264:	ldp	x29, x30, [sp, #16]
  24b268:	add	sp, sp, #0x30
  24b26c:	ret
  24b270:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b274:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b278:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24b27c:	add	x1, x1, #0x106
  24b280:	add	x2, x2, #0xc6e
  24b284:	add	x4, x4, #0x9a1
  24b288:	mov	w0, #0x1                   	// #1
  24b28c:	mov	w3, #0x9a                  	// #154
  24b290:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b294:	mov	w0, #0xfffffff7            	// #-9
  24b298:	b	24b260 <sd_peer_get_owner_uid+0x34>
  24b29c:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24b2a0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b2a4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24b2a8:	add	x1, x1, #0x498
  24b2ac:	add	x2, x2, #0xc6e
  24b2b0:	add	x4, x4, #0x9a1
  24b2b4:	mov	w0, #0x1                   	// #1
  24b2b8:	mov	w3, #0x9b                  	// #155
  24b2bc:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b2c0:	mov	w0, #0xffffffea            	// #-22
  24b2c4:	b	24b260 <sd_peer_get_owner_uid+0x34>

000000000024b2c8 <sd_peer_get_unit>:
  24b2c8:	sub	sp, sp, #0x30
  24b2cc:	stp	x29, x30, [sp, #16]
  24b2d0:	str	x19, [sp, #32]
  24b2d4:	add	x29, sp, #0x10
  24b2d8:	tbnz	w0, #31, 24b30c <sd_peer_get_unit+0x44>
  24b2dc:	mov	x19, x1
  24b2e0:	cbz	x1, 24b338 <sd_peer_get_unit+0x70>
  24b2e4:	mov	x1, sp
  24b2e8:	bl	253f30 <getpeercred@plt>
  24b2ec:	tbnz	w0, #31, 24b2fc <sd_peer_get_unit+0x34>
  24b2f0:	ldr	w0, [sp]
  24b2f4:	mov	x1, x19
  24b2f8:	bl	254e40 <cg_pid_get_unit@plt>
  24b2fc:	ldr	x19, [sp, #32]
  24b300:	ldp	x29, x30, [sp, #16]
  24b304:	add	sp, sp, #0x30
  24b308:	ret
  24b30c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b310:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b314:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24b318:	add	x1, x1, #0x106
  24b31c:	add	x2, x2, #0xc6e
  24b320:	add	x4, x4, #0x5e7
  24b324:	mov	w0, #0x1                   	// #1
  24b328:	mov	w3, #0xa8                  	// #168
  24b32c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b330:	mov	w0, #0xfffffff7            	// #-9
  24b334:	b	24b2fc <sd_peer_get_unit+0x34>
  24b338:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24b33c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b340:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24b344:	add	x1, x1, #0xa27
  24b348:	add	x2, x2, #0xc6e
  24b34c:	add	x4, x4, #0x5e7
  24b350:	mov	w0, #0x1                   	// #1
  24b354:	mov	w3, #0xa9                  	// #169
  24b358:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b35c:	mov	w0, #0xffffffea            	// #-22
  24b360:	b	24b2fc <sd_peer_get_unit+0x34>

000000000024b364 <sd_peer_get_user_unit>:
  24b364:	sub	sp, sp, #0x30
  24b368:	stp	x29, x30, [sp, #16]
  24b36c:	str	x19, [sp, #32]
  24b370:	add	x29, sp, #0x10
  24b374:	tbnz	w0, #31, 24b3a8 <sd_peer_get_user_unit+0x44>
  24b378:	mov	x19, x1
  24b37c:	cbz	x1, 24b3d4 <sd_peer_get_user_unit+0x70>
  24b380:	mov	x1, sp
  24b384:	bl	253f30 <getpeercred@plt>
  24b388:	tbnz	w0, #31, 24b398 <sd_peer_get_user_unit+0x34>
  24b38c:	ldr	w0, [sp]
  24b390:	mov	x1, x19
  24b394:	bl	254e50 <cg_pid_get_user_unit@plt>
  24b398:	ldr	x19, [sp, #32]
  24b39c:	ldp	x29, x30, [sp, #16]
  24b3a0:	add	sp, sp, #0x30
  24b3a4:	ret
  24b3a8:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b3ac:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b3b0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24b3b4:	add	x1, x1, #0x106
  24b3b8:	add	x2, x2, #0xc6e
  24b3bc:	add	x4, x4, #0x1c5
  24b3c0:	mov	w0, #0x1                   	// #1
  24b3c4:	mov	w3, #0xb6                  	// #182
  24b3c8:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b3cc:	mov	w0, #0xfffffff7            	// #-9
  24b3d0:	b	24b398 <sd_peer_get_user_unit+0x34>
  24b3d4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24b3d8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b3dc:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24b3e0:	add	x1, x1, #0xa27
  24b3e4:	add	x2, x2, #0xc6e
  24b3e8:	add	x4, x4, #0x1c5
  24b3ec:	mov	w0, #0x1                   	// #1
  24b3f0:	mov	w3, #0xb7                  	// #183
  24b3f4:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b3f8:	mov	w0, #0xffffffea            	// #-22
  24b3fc:	b	24b398 <sd_peer_get_user_unit+0x34>

000000000024b400 <sd_peer_get_machine_name>:
  24b400:	sub	sp, sp, #0x30
  24b404:	stp	x29, x30, [sp, #16]
  24b408:	str	x19, [sp, #32]
  24b40c:	add	x29, sp, #0x10
  24b410:	tbnz	w0, #31, 24b444 <sd_peer_get_machine_name+0x44>
  24b414:	mov	x19, x1
  24b418:	cbz	x1, 24b470 <sd_peer_get_machine_name+0x70>
  24b41c:	mov	x1, sp
  24b420:	bl	253f30 <getpeercred@plt>
  24b424:	tbnz	w0, #31, 24b434 <sd_peer_get_machine_name+0x34>
  24b428:	ldr	w0, [sp]
  24b42c:	mov	x1, x19
  24b430:	bl	254e60 <cg_pid_get_machine_name@plt>
  24b434:	ldr	x19, [sp, #32]
  24b438:	ldp	x29, x30, [sp, #16]
  24b43c:	add	sp, sp, #0x30
  24b440:	ret
  24b444:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b448:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b44c:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24b450:	add	x1, x1, #0x106
  24b454:	add	x2, x2, #0xc6e
  24b458:	add	x4, x4, #0x1ed
  24b45c:	mov	w0, #0x1                   	// #1
  24b460:	mov	w3, #0xc4                  	// #196
  24b464:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b468:	mov	w0, #0xfffffff7            	// #-9
  24b46c:	b	24b434 <sd_peer_get_machine_name+0x34>
  24b470:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  24b474:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b478:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24b47c:	add	x1, x1, #0x73a
  24b480:	add	x2, x2, #0xc6e
  24b484:	add	x4, x4, #0x1ed
  24b488:	mov	w0, #0x1                   	// #1
  24b48c:	mov	w3, #0xc5                  	// #197
  24b490:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b494:	mov	w0, #0xffffffea            	// #-22
  24b498:	b	24b434 <sd_peer_get_machine_name+0x34>

000000000024b49c <sd_peer_get_slice>:
  24b49c:	sub	sp, sp, #0x30
  24b4a0:	stp	x29, x30, [sp, #16]
  24b4a4:	str	x19, [sp, #32]
  24b4a8:	add	x29, sp, #0x10
  24b4ac:	tbnz	w0, #31, 24b4e0 <sd_peer_get_slice+0x44>
  24b4b0:	mov	x19, x1
  24b4b4:	cbz	x1, 24b50c <sd_peer_get_slice+0x70>
  24b4b8:	mov	x1, sp
  24b4bc:	bl	253f30 <getpeercred@plt>
  24b4c0:	tbnz	w0, #31, 24b4d0 <sd_peer_get_slice+0x34>
  24b4c4:	ldr	w0, [sp]
  24b4c8:	mov	x1, x19
  24b4cc:	bl	254e70 <cg_pid_get_slice@plt>
  24b4d0:	ldr	x19, [sp, #32]
  24b4d4:	ldp	x29, x30, [sp, #16]
  24b4d8:	add	sp, sp, #0x30
  24b4dc:	ret
  24b4e0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b4e4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b4e8:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24b4ec:	add	x1, x1, #0x106
  24b4f0:	add	x2, x2, #0xc6e
  24b4f4:	add	x4, x4, #0xc7f
  24b4f8:	mov	w0, #0x1                   	// #1
  24b4fc:	mov	w3, #0xd2                  	// #210
  24b500:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b504:	mov	w0, #0xfffffff7            	// #-9
  24b508:	b	24b4d0 <sd_peer_get_slice+0x34>
  24b50c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24b510:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b514:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24b518:	add	x1, x1, #0xc79
  24b51c:	add	x2, x2, #0xc6e
  24b520:	add	x4, x4, #0xc7f
  24b524:	mov	w0, #0x1                   	// #1
  24b528:	mov	w3, #0xd3                  	// #211
  24b52c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b530:	mov	w0, #0xffffffea            	// #-22
  24b534:	b	24b4d0 <sd_peer_get_slice+0x34>

000000000024b538 <sd_peer_get_user_slice>:
  24b538:	sub	sp, sp, #0x30
  24b53c:	stp	x29, x30, [sp, #16]
  24b540:	str	x19, [sp, #32]
  24b544:	add	x29, sp, #0x10
  24b548:	tbnz	w0, #31, 24b57c <sd_peer_get_user_slice+0x44>
  24b54c:	mov	x19, x1
  24b550:	cbz	x1, 24b5a8 <sd_peer_get_user_slice+0x70>
  24b554:	mov	x1, sp
  24b558:	bl	253f30 <getpeercred@plt>
  24b55c:	tbnz	w0, #31, 24b56c <sd_peer_get_user_slice+0x34>
  24b560:	ldr	w0, [sp]
  24b564:	mov	x1, x19
  24b568:	bl	254e80 <cg_pid_get_user_slice@plt>
  24b56c:	ldr	x19, [sp, #32]
  24b570:	ldp	x29, x30, [sp, #16]
  24b574:	add	sp, sp, #0x30
  24b578:	ret
  24b57c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b580:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b584:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24b588:	add	x1, x1, #0x106
  24b58c:	add	x2, x2, #0xc6e
  24b590:	add	x4, x4, #0x6a2
  24b594:	mov	w0, #0x1                   	// #1
  24b598:	mov	w3, #0xe0                  	// #224
  24b59c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b5a0:	mov	w0, #0xfffffff7            	// #-9
  24b5a4:	b	24b56c <sd_peer_get_user_slice+0x34>
  24b5a8:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24b5ac:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b5b0:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24b5b4:	add	x1, x1, #0xc79
  24b5b8:	add	x2, x2, #0xc6e
  24b5bc:	add	x4, x4, #0x6a2
  24b5c0:	mov	w0, #0x1                   	// #1
  24b5c4:	mov	w3, #0xe1                  	// #225
  24b5c8:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b5cc:	mov	w0, #0xffffffea            	// #-22
  24b5d0:	b	24b56c <sd_peer_get_user_slice+0x34>

000000000024b5d4 <sd_peer_get_cgroup>:
  24b5d4:	sub	sp, sp, #0x30
  24b5d8:	stp	x29, x30, [sp, #16]
  24b5dc:	str	x19, [sp, #32]
  24b5e0:	add	x29, sp, #0x10
  24b5e4:	tbnz	w0, #31, 24b618 <sd_peer_get_cgroup+0x44>
  24b5e8:	mov	x19, x1
  24b5ec:	cbz	x1, 24b644 <sd_peer_get_cgroup+0x70>
  24b5f0:	mov	x1, sp
  24b5f4:	bl	253f30 <getpeercred@plt>
  24b5f8:	tbnz	w0, #31, 24b608 <sd_peer_get_cgroup+0x34>
  24b5fc:	ldr	w0, [sp]
  24b600:	mov	x1, x19
  24b604:	bl	24b098 <sd_pid_get_cgroup>
  24b608:	ldr	x19, [sp, #32]
  24b60c:	ldp	x29, x30, [sp, #16]
  24b610:	add	sp, sp, #0x30
  24b614:	ret
  24b618:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b61c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b620:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24b624:	add	x1, x1, #0x106
  24b628:	add	x2, x2, #0xc6e
  24b62c:	add	x4, x4, #0x2cc
  24b630:	mov	w0, #0x1                   	// #1
  24b634:	mov	w3, #0xee                  	// #238
  24b638:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b63c:	mov	w0, #0xfffffff7            	// #-9
  24b640:	b	24b608 <sd_peer_get_cgroup+0x34>
  24b644:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24b648:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b64c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24b650:	add	x1, x1, #0x26f
  24b654:	add	x2, x2, #0xc6e
  24b658:	add	x4, x4, #0x2cc
  24b65c:	mov	w0, #0x1                   	// #1
  24b660:	mov	w3, #0xef                  	// #239
  24b664:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b668:	mov	w0, #0xffffffea            	// #-22
  24b66c:	b	24b608 <sd_peer_get_cgroup+0x34>

000000000024b670 <sd_uid_get_state>:
  24b670:	sub	sp, sp, #0x30
  24b674:	stp	x29, x30, [sp, #16]
  24b678:	stp	x20, x19, [sp, #32]
  24b67c:	add	x29, sp, #0x10
  24b680:	stp	xzr, xzr, [sp]
  24b684:	cbz	x1, 24b728 <sd_uid_get_state+0xb8>
  24b688:	mov	x19, x1
  24b68c:	add	x1, sp, #0x8
  24b690:	bl	24b76c <file_of_uid>
  24b694:	tbnz	w0, #31, 24b6d0 <sd_uid_get_state+0x60>
  24b698:	ldr	x1, [sp, #8]
  24b69c:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24b6a0:	add	x2, x2, #0xb7b
  24b6a4:	mov	x3, sp
  24b6a8:	mov	x0, xzr
  24b6ac:	mov	x4, xzr
  24b6b0:	bl	254ea0 <parse_env_file_sentinel@plt>
  24b6b4:	cmn	w0, #0x2
  24b6b8:	b.ne	24b6d8 <sd_uid_get_state+0x68>  // b.any
  24b6bc:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  24b6c0:	add	x1, x1, #0x703
  24b6c4:	mov	x0, sp
  24b6c8:	bl	2543d0 <free_and_strdup@plt>
  24b6cc:	tbz	w0, #31, 24b6f4 <sd_uid_get_state+0x84>
  24b6d0:	mov	w20, w0
  24b6d4:	b	24b704 <sd_uid_get_state+0x94>
  24b6d8:	mov	w20, w0
  24b6dc:	tbnz	w0, #31, 24b704 <sd_uid_get_state+0x94>
  24b6e0:	ldr	x0, [sp]
  24b6e4:	bl	24b16c <isempty>
  24b6e8:	tbz	w0, #0, 24b6f4 <sd_uid_get_state+0x84>
  24b6ec:	mov	w20, #0xfffffffb            	// #-5
  24b6f0:	b	24b704 <sd_uid_get_state+0x94>
  24b6f4:	ldr	x8, [sp]
  24b6f8:	mov	w20, wzr
  24b6fc:	str	xzr, [sp]
  24b700:	str	x8, [x19]
  24b704:	mov	x0, sp
  24b708:	bl	24b754 <freep>
  24b70c:	add	x0, sp, #0x8
  24b710:	bl	24b754 <freep>
  24b714:	mov	w0, w20
  24b718:	ldp	x20, x19, [sp, #32]
  24b71c:	ldp	x29, x30, [sp, #16]
  24b720:	add	sp, sp, #0x30
  24b724:	ret
  24b728:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24b72c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b730:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24b734:	add	x1, x1, #0xc91
  24b738:	add	x2, x2, #0xc6e
  24b73c:	add	x4, x4, #0xfda
  24b740:	mov	w0, #0x1                   	// #1
  24b744:	mov	w3, #0x107                 	// #263
  24b748:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b74c:	mov	w20, #0xffffffea            	// #-22
  24b750:	b	24b704 <sd_uid_get_state+0x94>

000000000024b754 <freep>:
  24b754:	stp	x29, x30, [sp, #-16]!
  24b758:	ldr	x0, [x0]
  24b75c:	mov	x29, sp
  24b760:	bl	2536e0 <free@plt>
  24b764:	ldp	x29, x30, [sp], #16
  24b768:	ret

000000000024b76c <file_of_uid>:
  24b76c:	stp	x29, x30, [sp, #-32]!
  24b770:	stp	x20, x19, [sp, #16]
  24b774:	mov	x29, sp
  24b778:	mov	x20, x1
  24b77c:	mov	w19, w0
  24b780:	bl	2541d0 <uid_is_valid@plt>
  24b784:	tbz	w0, #0, 24b7b4 <file_of_uid+0x48>
  24b788:	cbz	x20, 24b7e0 <file_of_uid+0x74>
  24b78c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  24b790:	add	x1, x1, #0x333
  24b794:	mov	x0, x20
  24b798:	mov	w2, w19
  24b79c:	bl	254eb0 <asprintf@plt>
  24b7a0:	mov	w8, #0xfffffff4            	// #-12
  24b7a4:	and	w0, w8, w0, asr #31
  24b7a8:	ldp	x20, x19, [sp, #16]
  24b7ac:	ldp	x29, x30, [sp], #32
  24b7b0:	ret
  24b7b4:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24b7b8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b7bc:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24b7c0:	add	x1, x1, #0x870
  24b7c4:	add	x2, x2, #0xc6e
  24b7c8:	add	x4, x4, #0x6a1
  24b7cc:	mov	w0, #0x1                   	// #1
  24b7d0:	mov	w3, #0xfa                  	// #250
  24b7d4:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b7d8:	mov	w0, #0xffffffea            	// #-22
  24b7dc:	b	24b7a8 <file_of_uid+0x3c>
  24b7e0:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24b7e4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b7e8:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24b7ec:	add	x1, x1, #0xc4d
  24b7f0:	add	x2, x2, #0xc6e
  24b7f4:	add	x4, x4, #0x6a1
  24b7f8:	mov	w0, #0x1                   	// #1
  24b7fc:	mov	w3, #0xfb                  	// #251
  24b800:	bl	253740 <log_assert_failed_realm@plt>

000000000024b804 <sd_uid_get_display>:
  24b804:	sub	sp, sp, #0x30
  24b808:	stp	x29, x30, [sp, #16]
  24b80c:	stp	x20, x19, [sp, #32]
  24b810:	add	x29, sp, #0x10
  24b814:	stp	xzr, xzr, [sp]
  24b818:	cbz	x1, 24b8a8 <sd_uid_get_display+0xa4>
  24b81c:	mov	x19, x1
  24b820:	add	x1, sp, #0x8
  24b824:	bl	24b76c <file_of_uid>
  24b828:	tbnz	w0, #31, 24b86c <sd_uid_get_display+0x68>
  24b82c:	ldr	x1, [sp, #8]
  24b830:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24b834:	add	x2, x2, #0x49c
  24b838:	mov	x3, sp
  24b83c:	mov	x0, xzr
  24b840:	mov	x4, xzr
  24b844:	bl	254ea0 <parse_env_file_sentinel@plt>
  24b848:	cmn	w0, #0x2
  24b84c:	b.eq	24b864 <sd_uid_get_display+0x60>  // b.none
  24b850:	mov	w20, w0
  24b854:	tbnz	w0, #31, 24b884 <sd_uid_get_display+0x80>
  24b858:	ldr	x0, [sp]
  24b85c:	bl	24b16c <isempty>
  24b860:	tbz	w0, #0, 24b874 <sd_uid_get_display+0x70>
  24b864:	mov	w20, #0xffffffc3            	// #-61
  24b868:	b	24b884 <sd_uid_get_display+0x80>
  24b86c:	mov	w20, w0
  24b870:	b	24b884 <sd_uid_get_display+0x80>
  24b874:	ldr	x8, [sp]
  24b878:	mov	w20, wzr
  24b87c:	str	xzr, [sp]
  24b880:	str	x8, [x19]
  24b884:	mov	x0, sp
  24b888:	bl	24b754 <freep>
  24b88c:	add	x0, sp, #0x8
  24b890:	bl	24b754 <freep>
  24b894:	mov	w0, w20
  24b898:	ldp	x20, x19, [sp, #32]
  24b89c:	ldp	x29, x30, [sp, #16]
  24b8a0:	add	sp, sp, #0x30
  24b8a4:	ret
  24b8a8:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24b8ac:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24b8b0:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24b8b4:	add	x1, x1, #0x9f9
  24b8b8:	add	x2, x2, #0xc6e
  24b8bc:	add	x4, x4, #0x276
  24b8c0:	mov	w0, #0x1                   	// #1
  24b8c4:	mov	w3, #0x11f                 	// #287
  24b8c8:	bl	253f10 <log_assert_failed_return_realm@plt>
  24b8cc:	mov	w20, #0xffffffea            	// #-22
  24b8d0:	b	24b884 <sd_uid_get_display+0x80>

000000000024b8d4 <sd_uid_is_on_seat>:
  24b8d4:	sub	sp, sp, #0x50
  24b8d8:	stp	x29, x30, [sp, #32]
  24b8dc:	add	x29, sp, #0x20
  24b8e0:	str	x21, [sp, #48]
  24b8e4:	stp	x20, x19, [sp, #64]
  24b8e8:	mov	x20, x2
  24b8ec:	mov	w21, w1
  24b8f0:	mov	w19, w0
  24b8f4:	str	xzr, [x29, #24]
  24b8f8:	stur	xzr, [x29, #-8]
  24b8fc:	str	xzr, [sp, #16]
  24b900:	bl	2541d0 <uid_is_valid@plt>
  24b904:	tbz	w0, #0, 24ba28 <sd_uid_is_on_seat+0x154>
  24b908:	add	x1, sp, #0x10
  24b90c:	mov	x0, x20
  24b910:	bl	24ba54 <file_of_seat>
  24b914:	tbnz	w0, #31, 24b968 <sd_uid_is_on_seat+0x94>
  24b918:	ldr	x1, [sp, #16]
  24b91c:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  24b920:	adrp	x9, 215000 <worker_hash_op+0xaad0>
  24b924:	add	x8, x8, #0x60a
  24b928:	add	x9, x9, #0xd1f
  24b92c:	cmp	w21, #0x0
  24b930:	csel	x2, x9, x8, eq  // eq = none
  24b934:	sub	x3, x29, #0x8
  24b938:	mov	x0, xzr
  24b93c:	mov	x4, xzr
  24b940:	bl	254ea0 <parse_env_file_sentinel@plt>
  24b944:	cmn	w0, #0x2
  24b948:	b.eq	24b960 <sd_uid_is_on_seat+0x8c>  // b.none
  24b94c:	mov	w20, w0
  24b950:	tbnz	w0, #31, 24b96c <sd_uid_is_on_seat+0x98>
  24b954:	ldur	x0, [x29, #-8]
  24b958:	bl	24b16c <isempty>
  24b95c:	tbz	w0, #0, 24b99c <sd_uid_is_on_seat+0xc8>
  24b960:	mov	w20, wzr
  24b964:	b	24b96c <sd_uid_is_on_seat+0x98>
  24b968:	mov	w20, w0
  24b96c:	add	x0, sp, #0x10
  24b970:	bl	24b754 <freep>
  24b974:	sub	x0, x29, #0x8
  24b978:	bl	24b754 <freep>
  24b97c:	add	x0, x29, #0x18
  24b980:	bl	24b754 <freep>
  24b984:	mov	w0, w20
  24b988:	ldp	x20, x19, [sp, #64]
  24b98c:	ldr	x21, [sp, #48]
  24b990:	ldp	x29, x30, [sp, #32]
  24b994:	add	sp, sp, #0x50
  24b998:	ret
  24b99c:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24b9a0:	add	x1, x1, #0x93c
  24b9a4:	add	x0, x29, #0x18
  24b9a8:	mov	w2, w19
  24b9ac:	bl	254eb0 <asprintf@plt>
  24b9b0:	tbnz	w0, #31, 24ba18 <sd_uid_is_on_seat+0x144>
  24b9b4:	ldur	x8, [x29, #-8]
  24b9b8:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  24b9bc:	add	x2, x2, #0x33a
  24b9c0:	mov	x0, sp
  24b9c4:	add	x1, sp, #0x8
  24b9c8:	mov	w3, wzr
  24b9cc:	str	x8, [sp]
  24b9d0:	bl	254a70 <split@plt>
  24b9d4:	cbz	x0, 24b960 <sd_uid_is_on_seat+0x8c>
  24b9d8:	adrp	x19, 218000 <worker_hash_op+0xdad0>
  24b9dc:	mov	x1, x0
  24b9e0:	add	x19, x19, #0x33a
  24b9e4:	ldr	x0, [x29, #24]
  24b9e8:	ldr	x2, [sp, #8]
  24b9ec:	bl	2539b0 <strncmp@plt>
  24b9f0:	cbz	w0, 24ba20 <sd_uid_is_on_seat+0x14c>
  24b9f4:	mov	x0, sp
  24b9f8:	add	x1, sp, #0x8
  24b9fc:	mov	x2, x19
  24ba00:	mov	w3, wzr
  24ba04:	bl	254a70 <split@plt>
  24ba08:	mov	x1, x0
  24ba0c:	mov	w20, wzr
  24ba10:	cbnz	x0, 24b9e4 <sd_uid_is_on_seat+0x110>
  24ba14:	b	24b96c <sd_uid_is_on_seat+0x98>
  24ba18:	mov	w20, #0xfffffff4            	// #-12
  24ba1c:	b	24b96c <sd_uid_is_on_seat+0x98>
  24ba20:	mov	w20, #0x1                   	// #1
  24ba24:	b	24b96c <sd_uid_is_on_seat+0x98>
  24ba28:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24ba2c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ba30:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24ba34:	add	x1, x1, #0x870
  24ba38:	add	x2, x2, #0xc6e
  24ba3c:	add	x4, x4, #0xa6
  24ba40:	mov	w0, #0x1                   	// #1
  24ba44:	mov	w3, #0x153                 	// #339
  24ba48:	bl	253f10 <log_assert_failed_return_realm@plt>
  24ba4c:	mov	w20, #0xffffffea            	// #-22
  24ba50:	b	24b96c <sd_uid_is_on_seat+0x98>

000000000024ba54 <file_of_seat>:
  24ba54:	sub	sp, sp, #0x40
  24ba58:	stp	x29, x30, [sp, #16]
  24ba5c:	stp	x22, x21, [sp, #32]
  24ba60:	stp	x20, x19, [sp, #48]
  24ba64:	add	x29, sp, #0x10
  24ba68:	cbz	x1, 24bb1c <file_of_seat+0xc8>
  24ba6c:	mov	x19, x1
  24ba70:	mov	x20, x0
  24ba74:	cbz	x0, 24baa0 <file_of_seat+0x4c>
  24ba78:	mov	x0, x20
  24ba7c:	bl	254ec0 <filename_is_valid@plt>
  24ba80:	tbz	w0, #0, 24bad8 <file_of_seat+0x84>
  24ba84:	adrp	x0, 20d000 <worker_hash_op+0x2ad0>
  24ba88:	add	x0, x0, #0x232
  24ba8c:	mov	x2, #0xffffffffffffffff    	// #-1
  24ba90:	mov	x1, x20
  24ba94:	bl	254100 <path_join_internal@plt>
  24ba98:	mov	x21, x0
  24ba9c:	b	24baf0 <file_of_seat+0x9c>
  24baa0:	add	x1, sp, #0x8
  24baa4:	mov	x0, xzr
  24baa8:	str	xzr, [sp, #8]
  24baac:	bl	24c094 <sd_session_get_seat>
  24bab0:	mov	w20, w0
  24bab4:	tbnz	w0, #31, 24bae0 <file_of_seat+0x8c>
  24bab8:	ldr	x1, [sp, #8]
  24babc:	adrp	x0, 20d000 <worker_hash_op+0x2ad0>
  24bac0:	add	x0, x0, #0x232
  24bac4:	mov	x2, #0xffffffffffffffff    	// #-1
  24bac8:	bl	254100 <path_join_internal@plt>
  24bacc:	mov	x21, x0
  24bad0:	mov	w22, #0x1                   	// #1
  24bad4:	b	24bae4 <file_of_seat+0x90>
  24bad8:	mov	w20, #0xffffffea            	// #-22
  24badc:	b	24bb04 <file_of_seat+0xb0>
  24bae0:	mov	w22, wzr
  24bae4:	add	x0, sp, #0x8
  24bae8:	bl	24b754 <freep>
  24baec:	cbz	w22, 24bb04 <file_of_seat+0xb0>
  24baf0:	cbz	x21, 24bb00 <file_of_seat+0xac>
  24baf4:	mov	w20, wzr
  24baf8:	str	x21, [x19]
  24bafc:	b	24bb04 <file_of_seat+0xb0>
  24bb00:	mov	w20, #0xfffffff4            	// #-12
  24bb04:	mov	w0, w20
  24bb08:	ldp	x20, x19, [sp, #48]
  24bb0c:	ldp	x22, x21, [sp, #32]
  24bb10:	ldp	x29, x30, [sp, #16]
  24bb14:	add	sp, sp, #0x40
  24bb18:	ret
  24bb1c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24bb20:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24bb24:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24bb28:	add	x1, x1, #0x7e3
  24bb2c:	add	x2, x2, #0xc6e
  24bb30:	add	x4, x4, #0x722
  24bb34:	mov	w0, #0x1                   	// #1
  24bb38:	mov	w3, #0x136                 	// #310
  24bb3c:	bl	253740 <log_assert_failed_realm@plt>

000000000024bb40 <sd_uid_get_sessions>:
  24bb40:	stp	x29, x30, [sp, #-16]!
  24bb44:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24bb48:	adrp	x9, 20c000 <worker_hash_op+0x1ad0>
  24bb4c:	add	x8, x8, #0x29d
  24bb50:	add	x9, x9, #0xa5c
  24bb54:	cmp	w1, #0x0
  24bb58:	csel	x8, x9, x8, gt
  24bb5c:	adrp	x9, 214000 <worker_hash_op+0x9ad0>
  24bb60:	add	x9, x9, #0xe30
  24bb64:	csel	x1, x9, x8, eq  // eq = none
  24bb68:	mov	x29, sp
  24bb6c:	bl	24bb78 <uid_get_array>
  24bb70:	ldp	x29, x30, [sp], #16
  24bb74:	ret

000000000024bb78 <uid_get_array>:
  24bb78:	sub	sp, sp, #0x40
  24bb7c:	stp	x29, x30, [sp, #16]
  24bb80:	add	x29, sp, #0x10
  24bb84:	str	x21, [sp, #32]
  24bb88:	stp	x20, x19, [sp, #48]
  24bb8c:	str	xzr, [x29, #24]
  24bb90:	str	xzr, [sp, #8]
  24bb94:	cbz	x1, 24bc60 <uid_get_array+0xe8>
  24bb98:	mov	x21, x1
  24bb9c:	add	x1, x29, #0x18
  24bba0:	mov	x19, x2
  24bba4:	bl	24b76c <file_of_uid>
  24bba8:	tbnz	w0, #31, 24bbf0 <uid_get_array+0x78>
  24bbac:	ldr	x1, [x29, #24]
  24bbb0:	add	x3, sp, #0x8
  24bbb4:	mov	x0, xzr
  24bbb8:	mov	x2, x21
  24bbbc:	mov	x4, xzr
  24bbc0:	bl	254ea0 <parse_env_file_sentinel@plt>
  24bbc4:	cmn	w0, #0x2
  24bbc8:	b.eq	24bbe0 <uid_get_array+0x68>  // b.none
  24bbcc:	mov	w20, w0
  24bbd0:	tbnz	w0, #31, 24bc1c <uid_get_array+0xa4>
  24bbd4:	ldr	x0, [sp, #8]
  24bbd8:	bl	24b16c <isempty>
  24bbdc:	tbz	w0, #0, 24bc1c <uid_get_array+0xa4>
  24bbe0:	mov	w20, wzr
  24bbe4:	cbz	x19, 24bbf4 <uid_get_array+0x7c>
  24bbe8:	str	xzr, [x19]
  24bbec:	b	24bbf4 <uid_get_array+0x7c>
  24bbf0:	mov	w20, w0
  24bbf4:	add	x0, sp, #0x8
  24bbf8:	bl	24b754 <freep>
  24bbfc:	add	x0, x29, #0x18
  24bc00:	bl	24b754 <freep>
  24bc04:	mov	w0, w20
  24bc08:	ldp	x20, x19, [sp, #48]
  24bc0c:	ldr	x21, [sp, #32]
  24bc10:	ldp	x29, x30, [sp, #16]
  24bc14:	add	sp, sp, #0x40
  24bc18:	ret
  24bc1c:	tbnz	w20, #31, 24bbf4 <uid_get_array+0x7c>
  24bc20:	ldr	x0, [sp, #8]
  24bc24:	bl	24c798 <strv_split>
  24bc28:	cbz	x0, 24bc4c <uid_get_array+0xd4>
  24bc2c:	mov	x21, x0
  24bc30:	bl	254ed0 <strv_uniq@plt>
  24bc34:	mov	x0, x21
  24bc38:	bl	2547a0 <strv_length@plt>
  24bc3c:	mov	x20, x0
  24bc40:	cbz	x19, 24bc54 <uid_get_array+0xdc>
  24bc44:	str	x21, [x19]
  24bc48:	b	24bbf4 <uid_get_array+0x7c>
  24bc4c:	mov	w20, #0xfffffff4            	// #-12
  24bc50:	b	24bbf4 <uid_get_array+0x7c>
  24bc54:	mov	x0, x21
  24bc58:	bl	254150 <strv_free@plt>
  24bc5c:	b	24bbf4 <uid_get_array+0x7c>
  24bc60:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24bc64:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24bc68:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24bc6c:	add	x1, x1, #0xf6f
  24bc70:	add	x2, x2, #0xc6e
  24bc74:	add	x4, x4, #0x894
  24bc78:	mov	w0, #0x1                   	// #1
  24bc7c:	mov	w3, #0x172                 	// #370
  24bc80:	bl	253740 <log_assert_failed_realm@plt>

000000000024bc84 <sd_uid_get_seats>:
  24bc84:	stp	x29, x30, [sp, #-16]!
  24bc88:	adrp	x8, 20d000 <worker_hash_op+0x2ad0>
  24bc8c:	adrp	x9, 213000 <worker_hash_op+0x8ad0>
  24bc90:	add	x8, x8, #0x882
  24bc94:	add	x9, x9, #0xe3f
  24bc98:	cmp	w1, #0x0
  24bc9c:	csel	x8, x9, x8, gt
  24bca0:	adrp	x9, 216000 <worker_hash_op+0xbad0>
  24bca4:	add	x9, x9, #0xb81
  24bca8:	csel	x1, x9, x8, eq  // eq = none
  24bcac:	mov	x29, sp
  24bcb0:	bl	24bb78 <uid_get_array>
  24bcb4:	ldp	x29, x30, [sp], #16
  24bcb8:	ret

000000000024bcbc <sd_session_is_active>:
  24bcbc:	sub	sp, sp, #0x30
  24bcc0:	stp	x29, x30, [sp, #16]
  24bcc4:	add	x29, sp, #0x10
  24bcc8:	add	x1, x29, #0x18
  24bccc:	str	x19, [sp, #32]
  24bcd0:	str	xzr, [x29, #24]
  24bcd4:	str	xzr, [sp, #8]
  24bcd8:	bl	24bd5c <file_of_session>
  24bcdc:	tbnz	w0, #31, 24bd34 <sd_session_is_active+0x78>
  24bce0:	ldr	x1, [x29, #24]
  24bce4:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  24bce8:	add	x2, x2, #0x2f1
  24bcec:	add	x3, sp, #0x8
  24bcf0:	mov	x0, xzr
  24bcf4:	mov	x4, xzr
  24bcf8:	bl	254ea0 <parse_env_file_sentinel@plt>
  24bcfc:	cmn	w0, #0x2
  24bd00:	b.ne	24bd0c <sd_session_is_active+0x50>  // b.any
  24bd04:	mov	w19, #0xfffffffa            	// #-6
  24bd08:	b	24bd38 <sd_session_is_active+0x7c>
  24bd0c:	mov	w19, w0
  24bd10:	tbnz	w0, #31, 24bd38 <sd_session_is_active+0x7c>
  24bd14:	ldr	x19, [sp, #8]
  24bd18:	mov	x0, x19
  24bd1c:	bl	24b16c <isempty>
  24bd20:	tbz	w0, #0, 24bd2c <sd_session_is_active+0x70>
  24bd24:	mov	w19, #0xfffffffb            	// #-5
  24bd28:	b	24bd38 <sd_session_is_active+0x7c>
  24bd2c:	mov	x0, x19
  24bd30:	bl	254ee0 <parse_boolean@plt>
  24bd34:	mov	w19, w0
  24bd38:	add	x0, sp, #0x8
  24bd3c:	bl	24b754 <freep>
  24bd40:	add	x0, x29, #0x18
  24bd44:	bl	24b754 <freep>
  24bd48:	mov	w0, w19
  24bd4c:	ldr	x19, [sp, #32]
  24bd50:	ldp	x29, x30, [sp, #16]
  24bd54:	add	sp, sp, #0x30
  24bd58:	ret

000000000024bd5c <file_of_session>:
  24bd5c:	sub	sp, sp, #0x40
  24bd60:	stp	x29, x30, [sp, #16]
  24bd64:	stp	x22, x21, [sp, #32]
  24bd68:	stp	x20, x19, [sp, #48]
  24bd6c:	add	x29, sp, #0x10
  24bd70:	cbz	x1, 24be24 <file_of_session+0xc8>
  24bd74:	mov	x19, x1
  24bd78:	mov	x20, x0
  24bd7c:	cbz	x0, 24bda8 <file_of_session+0x4c>
  24bd80:	mov	x0, x20
  24bd84:	bl	254ef0 <session_id_valid@plt>
  24bd88:	tbz	w0, #0, 24bde0 <file_of_session+0x84>
  24bd8c:	adrp	x0, 20d000 <worker_hash_op+0x2ad0>
  24bd90:	add	x0, x0, #0x245
  24bd94:	mov	x2, #0xffffffffffffffff    	// #-1
  24bd98:	mov	x1, x20
  24bd9c:	bl	254100 <path_join_internal@plt>
  24bda0:	mov	x21, x0
  24bda4:	b	24bdf8 <file_of_session+0x9c>
  24bda8:	add	x1, sp, #0x8
  24bdac:	mov	w0, wzr
  24bdb0:	str	xzr, [sp, #8]
  24bdb4:	bl	24acfc <sd_pid_get_session>
  24bdb8:	mov	w20, w0
  24bdbc:	tbnz	w0, #31, 24bde8 <file_of_session+0x8c>
  24bdc0:	ldr	x1, [sp, #8]
  24bdc4:	adrp	x0, 20d000 <worker_hash_op+0x2ad0>
  24bdc8:	add	x0, x0, #0x245
  24bdcc:	mov	x2, #0xffffffffffffffff    	// #-1
  24bdd0:	bl	254100 <path_join_internal@plt>
  24bdd4:	mov	x21, x0
  24bdd8:	mov	w22, #0x1                   	// #1
  24bddc:	b	24bdec <file_of_session+0x90>
  24bde0:	mov	w20, #0xffffffea            	// #-22
  24bde4:	b	24be0c <file_of_session+0xb0>
  24bde8:	mov	w22, wzr
  24bdec:	add	x0, sp, #0x8
  24bdf0:	bl	24b754 <freep>
  24bdf4:	cbz	w22, 24be0c <file_of_session+0xb0>
  24bdf8:	cbz	x21, 24be08 <file_of_session+0xac>
  24bdfc:	mov	w20, wzr
  24be00:	str	x21, [x19]
  24be04:	b	24be0c <file_of_session+0xb0>
  24be08:	mov	w20, #0xfffffff4            	// #-12
  24be0c:	mov	w0, w20
  24be10:	ldp	x20, x19, [sp, #48]
  24be14:	ldp	x22, x21, [sp, #32]
  24be18:	ldp	x29, x30, [sp, #16]
  24be1c:	add	sp, sp, #0x40
  24be20:	ret
  24be24:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24be28:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24be2c:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24be30:	add	x1, x1, #0x7e3
  24be34:	add	x2, x2, #0xc6e
  24be38:	add	x4, x4, #0xe40
  24be3c:	mov	w0, #0x1                   	// #1
  24be40:	mov	w3, #0x1a6                 	// #422
  24be44:	bl	253740 <log_assert_failed_realm@plt>

000000000024be48 <sd_session_is_remote>:
  24be48:	sub	sp, sp, #0x30
  24be4c:	stp	x29, x30, [sp, #16]
  24be50:	add	x29, sp, #0x10
  24be54:	add	x1, x29, #0x18
  24be58:	str	x19, [sp, #32]
  24be5c:	str	xzr, [x29, #24]
  24be60:	str	xzr, [sp, #8]
  24be64:	bl	24bd5c <file_of_session>
  24be68:	tbnz	w0, #31, 24bec0 <sd_session_is_remote+0x78>
  24be6c:	ldr	x1, [x29, #24]
  24be70:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24be74:	add	x2, x2, #0xc97
  24be78:	add	x3, sp, #0x8
  24be7c:	mov	x0, xzr
  24be80:	mov	x4, xzr
  24be84:	bl	254ea0 <parse_env_file_sentinel@plt>
  24be88:	cmn	w0, #0x2
  24be8c:	b.ne	24be98 <sd_session_is_remote+0x50>  // b.any
  24be90:	mov	w19, #0xfffffffa            	// #-6
  24be94:	b	24bec4 <sd_session_is_remote+0x7c>
  24be98:	mov	w19, w0
  24be9c:	tbnz	w0, #31, 24bec4 <sd_session_is_remote+0x7c>
  24bea0:	ldr	x19, [sp, #8]
  24bea4:	mov	x0, x19
  24bea8:	bl	24b16c <isempty>
  24beac:	tbz	w0, #0, 24beb8 <sd_session_is_remote+0x70>
  24beb0:	mov	w19, #0xffffffc3            	// #-61
  24beb4:	b	24bec4 <sd_session_is_remote+0x7c>
  24beb8:	mov	x0, x19
  24bebc:	bl	254ee0 <parse_boolean@plt>
  24bec0:	mov	w19, w0
  24bec4:	add	x0, sp, #0x8
  24bec8:	bl	24b754 <freep>
  24becc:	add	x0, x29, #0x18
  24bed0:	bl	24b754 <freep>
  24bed4:	mov	w0, w19
  24bed8:	ldr	x19, [sp, #32]
  24bedc:	ldp	x29, x30, [sp, #16]
  24bee0:	add	sp, sp, #0x30
  24bee4:	ret

000000000024bee8 <sd_session_get_state>:
  24bee8:	sub	sp, sp, #0x30
  24beec:	stp	x29, x30, [sp, #16]
  24bef0:	stp	x20, x19, [sp, #32]
  24bef4:	add	x29, sp, #0x10
  24bef8:	stp	xzr, xzr, [sp]
  24befc:	cbz	x1, 24bf94 <sd_session_get_state+0xac>
  24bf00:	mov	x19, x1
  24bf04:	add	x1, sp, #0x8
  24bf08:	bl	24bd5c <file_of_session>
  24bf0c:	tbnz	w0, #31, 24bf3c <sd_session_get_state+0x54>
  24bf10:	ldr	x1, [sp, #8]
  24bf14:	adrp	x2, 216000 <worker_hash_op+0xbad0>
  24bf18:	add	x2, x2, #0xb7b
  24bf1c:	mov	x3, sp
  24bf20:	mov	x0, xzr
  24bf24:	mov	x4, xzr
  24bf28:	bl	254ea0 <parse_env_file_sentinel@plt>
  24bf2c:	cmn	w0, #0x2
  24bf30:	b.ne	24bf44 <sd_session_get_state+0x5c>  // b.any
  24bf34:	mov	w20, #0xfffffffa            	// #-6
  24bf38:	b	24bf70 <sd_session_get_state+0x88>
  24bf3c:	mov	w20, w0
  24bf40:	b	24bf70 <sd_session_get_state+0x88>
  24bf44:	mov	w20, w0
  24bf48:	tbnz	w0, #31, 24bf70 <sd_session_get_state+0x88>
  24bf4c:	ldr	x0, [sp]
  24bf50:	bl	24b16c <isempty>
  24bf54:	tbz	w0, #0, 24bf60 <sd_session_get_state+0x78>
  24bf58:	mov	w20, #0xfffffffb            	// #-5
  24bf5c:	b	24bf70 <sd_session_get_state+0x88>
  24bf60:	ldr	x8, [sp]
  24bf64:	mov	w20, wzr
  24bf68:	str	xzr, [sp]
  24bf6c:	str	x8, [x19]
  24bf70:	mov	x0, sp
  24bf74:	bl	24b754 <freep>
  24bf78:	add	x0, sp, #0x8
  24bf7c:	bl	24b754 <freep>
  24bf80:	mov	w0, w20
  24bf84:	ldp	x20, x19, [sp, #32]
  24bf88:	ldp	x29, x30, [sp, #16]
  24bf8c:	add	sp, sp, #0x30
  24bf90:	ret
  24bf94:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24bf98:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24bf9c:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24bfa0:	add	x1, x1, #0xc91
  24bfa4:	add	x2, x2, #0xc6e
  24bfa8:	add	x4, x4, #0x6cb
  24bfac:	mov	w0, #0x1                   	// #1
  24bfb0:	mov	w3, #0x1e8                 	// #488
  24bfb4:	bl	253f10 <log_assert_failed_return_realm@plt>
  24bfb8:	mov	w20, #0xffffffea            	// #-22
  24bfbc:	b	24bf70 <sd_session_get_state+0x88>

000000000024bfc0 <sd_session_get_uid>:
  24bfc0:	sub	sp, sp, #0x30
  24bfc4:	stp	x29, x30, [sp, #16]
  24bfc8:	stp	x20, x19, [sp, #32]
  24bfcc:	add	x29, sp, #0x10
  24bfd0:	stp	xzr, xzr, [sp]
  24bfd4:	cbz	x1, 24c068 <sd_session_get_uid+0xa8>
  24bfd8:	mov	x19, x1
  24bfdc:	add	x1, sp, #0x8
  24bfe0:	bl	24bd5c <file_of_session>
  24bfe4:	tbnz	w0, #31, 24c040 <sd_session_get_uid+0x80>
  24bfe8:	ldr	x1, [sp, #8]
  24bfec:	adrp	x2, 20b000 <worker_hash_op+0xad0>
  24bff0:	add	x2, x2, #0x6fb
  24bff4:	mov	x3, sp
  24bff8:	mov	x0, xzr
  24bffc:	mov	x4, xzr
  24c000:	bl	254ea0 <parse_env_file_sentinel@plt>
  24c004:	cmn	w0, #0x2
  24c008:	b.ne	24c014 <sd_session_get_uid+0x54>  // b.any
  24c00c:	mov	w20, #0xfffffffa            	// #-6
  24c010:	b	24c044 <sd_session_get_uid+0x84>
  24c014:	mov	w20, w0
  24c018:	tbnz	w0, #31, 24c044 <sd_session_get_uid+0x84>
  24c01c:	ldr	x20, [sp]
  24c020:	mov	x0, x20
  24c024:	bl	24b16c <isempty>
  24c028:	tbz	w0, #0, 24c034 <sd_session_get_uid+0x74>
  24c02c:	mov	w20, #0xfffffffb            	// #-5
  24c030:	b	24c044 <sd_session_get_uid+0x84>
  24c034:	mov	x0, x20
  24c038:	mov	x1, x19
  24c03c:	bl	2544d0 <parse_uid@plt>
  24c040:	mov	w20, w0
  24c044:	mov	x0, sp
  24c048:	bl	24b754 <freep>
  24c04c:	add	x0, sp, #0x8
  24c050:	bl	24b754 <freep>
  24c054:	mov	w0, w20
  24c058:	ldp	x20, x19, [sp, #32]
  24c05c:	ldp	x29, x30, [sp, #16]
  24c060:	add	sp, sp, #0x30
  24c064:	ret
  24c068:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24c06c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24c070:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24c074:	add	x1, x1, #0x498
  24c078:	add	x2, x2, #0xc6e
  24c07c:	add	x4, x4, #0x2a6
  24c080:	mov	w0, #0x1                   	// #1
  24c084:	mov	w3, #0x1ff                 	// #511
  24c088:	bl	253f10 <log_assert_failed_return_realm@plt>
  24c08c:	mov	w20, #0xffffffea            	// #-22
  24c090:	b	24c044 <sd_session_get_uid+0x84>

000000000024c094 <sd_session_get_seat>:
  24c094:	stp	x29, x30, [sp, #-16]!
  24c098:	mov	x2, x1
  24c09c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24c0a0:	add	x1, x1, #0x7c6
  24c0a4:	mov	x29, sp
  24c0a8:	bl	24c0b4 <session_get_string>
  24c0ac:	ldp	x29, x30, [sp], #16
  24c0b0:	ret

000000000024c0b4 <session_get_string>:
  24c0b4:	sub	sp, sp, #0x40
  24c0b8:	stp	x29, x30, [sp, #16]
  24c0bc:	add	x29, sp, #0x10
  24c0c0:	str	x21, [sp, #32]
  24c0c4:	stp	x20, x19, [sp, #48]
  24c0c8:	str	xzr, [x29, #24]
  24c0cc:	str	xzr, [sp, #8]
  24c0d0:	cbz	x2, 24c170 <session_get_string+0xbc>
  24c0d4:	mov	x21, x1
  24c0d8:	cbz	x1, 24c19c <session_get_string+0xe8>
  24c0dc:	add	x1, x29, #0x18
  24c0e0:	mov	x19, x2
  24c0e4:	bl	24bd5c <file_of_session>
  24c0e8:	tbnz	w0, #31, 24c114 <session_get_string+0x60>
  24c0ec:	ldr	x1, [x29, #24]
  24c0f0:	add	x3, sp, #0x8
  24c0f4:	mov	x0, xzr
  24c0f8:	mov	x2, x21
  24c0fc:	mov	x4, xzr
  24c100:	bl	254ea0 <parse_env_file_sentinel@plt>
  24c104:	cmn	w0, #0x2
  24c108:	b.ne	24c11c <session_get_string+0x68>  // b.any
  24c10c:	mov	w20, #0xfffffffa            	// #-6
  24c110:	b	24c148 <session_get_string+0x94>
  24c114:	mov	w20, w0
  24c118:	b	24c148 <session_get_string+0x94>
  24c11c:	mov	w20, w0
  24c120:	tbnz	w0, #31, 24c148 <session_get_string+0x94>
  24c124:	ldr	x0, [sp, #8]
  24c128:	bl	24b16c <isempty>
  24c12c:	tbz	w0, #0, 24c138 <session_get_string+0x84>
  24c130:	mov	w20, #0xffffffc3            	// #-61
  24c134:	b	24c148 <session_get_string+0x94>
  24c138:	ldr	x8, [sp, #8]
  24c13c:	mov	w20, wzr
  24c140:	str	xzr, [sp, #8]
  24c144:	str	x8, [x19]
  24c148:	add	x0, sp, #0x8
  24c14c:	bl	24b754 <freep>
  24c150:	add	x0, x29, #0x18
  24c154:	bl	24b754 <freep>
  24c158:	mov	w0, w20
  24c15c:	ldp	x20, x19, [sp, #48]
  24c160:	ldr	x21, [sp, #32]
  24c164:	ldp	x29, x30, [sp, #16]
  24c168:	add	sp, sp, #0x40
  24c16c:	ret
  24c170:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24c174:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24c178:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24c17c:	add	x1, x1, #0xb91
  24c180:	add	x2, x2, #0xc6e
  24c184:	add	x4, x4, #0x30e
  24c188:	mov	w0, #0x1                   	// #1
  24c18c:	mov	w3, #0x214                 	// #532
  24c190:	bl	253f10 <log_assert_failed_return_realm@plt>
  24c194:	mov	w20, #0xffffffea            	// #-22
  24c198:	b	24c148 <session_get_string+0x94>
  24c19c:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24c1a0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24c1a4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24c1a8:	add	x1, x1, #0x34a
  24c1ac:	add	x2, x2, #0xc6e
  24c1b0:	add	x4, x4, #0x30e
  24c1b4:	mov	w0, #0x1                   	// #1
  24c1b8:	mov	w3, #0x215                 	// #533
  24c1bc:	bl	253740 <log_assert_failed_realm@plt>

000000000024c1c0 <sd_session_get_tty>:
  24c1c0:	stp	x29, x30, [sp, #-16]!
  24c1c4:	mov	x2, x1
  24c1c8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24c1cc:	add	x1, x1, #0xc9e
  24c1d0:	mov	x29, sp
  24c1d4:	bl	24c0b4 <session_get_string>
  24c1d8:	ldp	x29, x30, [sp], #16
  24c1dc:	ret

000000000024c1e0 <sd_session_get_vt>:
  24c1e0:	sub	sp, sp, #0x30
  24c1e4:	stp	x29, x30, [sp, #16]
  24c1e8:	stp	x20, x19, [sp, #32]
  24c1ec:	add	x29, sp, #0x10
  24c1f0:	str	xzr, [sp, #8]
  24c1f4:	cbz	x1, 24c250 <sd_session_get_vt+0x70>
  24c1f8:	mov	x19, x1
  24c1fc:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24c200:	add	x1, x1, #0xb8e
  24c204:	add	x2, sp, #0x8
  24c208:	bl	24c0b4 <session_get_string>
  24c20c:	tbnz	w0, #31, 24c230 <sd_session_get_vt+0x50>
  24c210:	ldr	x0, [sp, #8]
  24c214:	add	x1, sp, #0x4
  24c218:	bl	24c27c <safe_atou>
  24c21c:	tbnz	w0, #31, 24c230 <sd_session_get_vt+0x50>
  24c220:	ldr	w8, [sp, #4]
  24c224:	mov	w20, wzr
  24c228:	str	w8, [x19]
  24c22c:	b	24c234 <sd_session_get_vt+0x54>
  24c230:	mov	w20, w0
  24c234:	add	x0, sp, #0x8
  24c238:	bl	24b754 <freep>
  24c23c:	mov	w0, w20
  24c240:	ldp	x20, x19, [sp, #32]
  24c244:	ldp	x29, x30, [sp, #16]
  24c248:	add	sp, sp, #0x30
  24c24c:	ret
  24c250:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24c254:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24c258:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24c25c:	add	x1, x1, #0x576
  24c260:	add	x2, x2, #0xc6e
  24c264:	add	x4, x4, #0xca2
  24c268:	mov	w0, #0x1                   	// #1
  24c26c:	mov	w3, #0x234                 	// #564
  24c270:	bl	253f10 <log_assert_failed_return_realm@plt>
  24c274:	mov	w20, #0xffffffea            	// #-22
  24c278:	b	24c234 <sd_session_get_vt+0x54>

000000000024c27c <safe_atou>:
  24c27c:	stp	x29, x30, [sp, #-16]!
  24c280:	mov	x2, x1
  24c284:	mov	w1, wzr
  24c288:	mov	x29, sp
  24c28c:	bl	253970 <safe_atou_full@plt>
  24c290:	ldp	x29, x30, [sp], #16
  24c294:	ret

000000000024c298 <sd_session_get_service>:
  24c298:	stp	x29, x30, [sp, #-16]!
  24c29c:	mov	x2, x1
  24c2a0:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24c2a4:	add	x1, x1, #0xcd6
  24c2a8:	mov	x29, sp
  24c2ac:	bl	24c0b4 <session_get_string>
  24c2b0:	ldp	x29, x30, [sp], #16
  24c2b4:	ret

000000000024c2b8 <sd_session_get_type>:
  24c2b8:	stp	x29, x30, [sp, #-16]!
  24c2bc:	mov	x2, x1
  24c2c0:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24c2c4:	add	x1, x1, #0xb2f
  24c2c8:	mov	x29, sp
  24c2cc:	bl	24c0b4 <session_get_string>
  24c2d0:	ldp	x29, x30, [sp], #16
  24c2d4:	ret

000000000024c2d8 <sd_session_get_class>:
  24c2d8:	stp	x29, x30, [sp, #-16]!
  24c2dc:	mov	x2, x1
  24c2e0:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24c2e4:	add	x1, x1, #0xcde
  24c2e8:	mov	x29, sp
  24c2ec:	bl	24c0b4 <session_get_string>
  24c2f0:	ldp	x29, x30, [sp], #16
  24c2f4:	ret

000000000024c2f8 <sd_session_get_desktop>:
  24c2f8:	sub	sp, sp, #0x30
  24c2fc:	stp	x29, x30, [sp, #16]
  24c300:	stp	x20, x19, [sp, #32]
  24c304:	add	x29, sp, #0x10
  24c308:	str	xzr, [sp, #8]
  24c30c:	cbz	x1, 24c36c <sd_session_get_desktop+0x74>
  24c310:	mov	x19, x1
  24c314:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  24c318:	add	x1, x1, #0x70b
  24c31c:	add	x2, sp, #0x8
  24c320:	bl	24c0b4 <session_get_string>
  24c324:	tbnz	w0, #31, 24c34c <sd_session_get_desktop+0x54>
  24c328:	ldr	x0, [sp, #8]
  24c32c:	mov	x2, sp
  24c330:	mov	w1, wzr
  24c334:	bl	254e00 <cunescape@plt>
  24c338:	tbnz	w0, #31, 24c34c <sd_session_get_desktop+0x54>
  24c33c:	ldr	x8, [sp]
  24c340:	mov	w20, wzr
  24c344:	str	x8, [x19]
  24c348:	b	24c350 <sd_session_get_desktop+0x58>
  24c34c:	mov	w20, w0
  24c350:	add	x0, sp, #0x8
  24c354:	bl	24b754 <freep>
  24c358:	mov	w0, w20
  24c35c:	ldp	x20, x19, [sp, #32]
  24c360:	ldp	x29, x30, [sp, #16]
  24c364:	add	sp, sp, #0x30
  24c368:	ret
  24c36c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24c370:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24c374:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24c378:	add	x1, x1, #0xce4
  24c37c:	add	x2, x2, #0xc6e
  24c380:	add	x4, x4, #0xca3
  24c384:	mov	w0, #0x1                   	// #1
  24c388:	mov	w3, #0x253                 	// #595
  24c38c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24c390:	mov	w20, #0xffffffea            	// #-22
  24c394:	b	24c350 <sd_session_get_desktop+0x58>

000000000024c398 <sd_session_get_display>:
  24c398:	stp	x29, x30, [sp, #-16]!
  24c39c:	mov	x2, x1
  24c3a0:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24c3a4:	add	x1, x1, #0x49c
  24c3a8:	mov	x29, sp
  24c3ac:	bl	24c0b4 <session_get_string>
  24c3b0:	ldp	x29, x30, [sp], #16
  24c3b4:	ret

000000000024c3b8 <sd_session_get_remote_user>:
  24c3b8:	stp	x29, x30, [sp, #-16]!
  24c3bc:	mov	x2, x1
  24c3c0:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24c3c4:	add	x1, x1, #0x888
  24c3c8:	mov	x29, sp
  24c3cc:	bl	24c0b4 <session_get_string>
  24c3d0:	ldp	x29, x30, [sp], #16
  24c3d4:	ret

000000000024c3d8 <sd_session_get_remote_host>:
  24c3d8:	stp	x29, x30, [sp, #-16]!
  24c3dc:	mov	x2, x1
  24c3e0:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24c3e4:	add	x1, x1, #0x5ab
  24c3e8:	mov	x29, sp
  24c3ec:	bl	24c0b4 <session_get_string>
  24c3f0:	ldp	x29, x30, [sp], #16
  24c3f4:	ret

000000000024c3f8 <sd_seat_get_active>:
  24c3f8:	sub	sp, sp, #0x40
  24c3fc:	stp	x29, x30, [sp, #16]
  24c400:	str	x21, [sp, #32]
  24c404:	stp	x20, x19, [sp, #48]
  24c408:	add	x29, sp, #0x10
  24c40c:	mov	x21, x2
  24c410:	mov	x19, x1
  24c414:	str	xzr, [x29, #24]
  24c418:	stp	xzr, xzr, [sp]
  24c41c:	cbnz	x1, 24c424 <sd_seat_get_active+0x2c>
  24c420:	cbz	x21, 24c4f8 <sd_seat_get_active+0x100>
  24c424:	add	x1, x29, #0x18
  24c428:	bl	24ba54 <file_of_seat>
  24c42c:	tbnz	w0, #31, 24c4c4 <sd_seat_get_active+0xcc>
  24c430:	ldr	x1, [x29, #24]
  24c434:	adrp	x2, 217000 <worker_hash_op+0xcad0>
  24c438:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24c43c:	add	x2, x2, #0x2f1
  24c440:	add	x4, x4, #0x60a
  24c444:	add	x3, sp, #0x8
  24c448:	mov	x5, sp
  24c44c:	mov	x0, xzr
  24c450:	mov	x6, xzr
  24c454:	bl	254ea0 <parse_env_file_sentinel@plt>
  24c458:	cmn	w0, #0x2
  24c45c:	b.ne	24c468 <sd_seat_get_active+0x70>  // b.any
  24c460:	mov	w20, #0xfffffffa            	// #-6
  24c464:	b	24c4c8 <sd_seat_get_active+0xd0>
  24c468:	mov	w20, w0
  24c46c:	tbnz	w0, #31, 24c4c8 <sd_seat_get_active+0xd0>
  24c470:	cbz	x19, 24c47c <sd_seat_get_active+0x84>
  24c474:	ldr	x8, [sp, #8]
  24c478:	cbz	x8, 24c488 <sd_seat_get_active+0x90>
  24c47c:	ldr	x0, [sp]
  24c480:	cbz	x21, 24c490 <sd_seat_get_active+0x98>
  24c484:	cbnz	x0, 24c490 <sd_seat_get_active+0x98>
  24c488:	mov	w20, #0xffffffc3            	// #-61
  24c48c:	b	24c4c8 <sd_seat_get_active+0xd0>
  24c490:	cbz	x21, 24c4a4 <sd_seat_get_active+0xac>
  24c494:	cbz	x0, 24c4a4 <sd_seat_get_active+0xac>
  24c498:	mov	x1, x21
  24c49c:	bl	2544d0 <parse_uid@plt>
  24c4a0:	tbnz	w0, #31, 24c4c4 <sd_seat_get_active+0xcc>
  24c4a4:	mov	w20, wzr
  24c4a8:	cbz	x19, 24c4c8 <sd_seat_get_active+0xd0>
  24c4ac:	ldr	x8, [sp, #8]
  24c4b0:	cbz	x8, 24c4c8 <sd_seat_get_active+0xd0>
  24c4b4:	mov	w20, wzr
  24c4b8:	str	xzr, [sp, #8]
  24c4bc:	str	x8, [x19]
  24c4c0:	b	24c4c8 <sd_seat_get_active+0xd0>
  24c4c4:	mov	w20, w0
  24c4c8:	mov	x0, sp
  24c4cc:	bl	24b754 <freep>
  24c4d0:	add	x0, sp, #0x8
  24c4d4:	bl	24b754 <freep>
  24c4d8:	add	x0, x29, #0x18
  24c4dc:	bl	24b754 <freep>
  24c4e0:	mov	w0, w20
  24c4e4:	ldp	x20, x19, [sp, #48]
  24c4e8:	ldr	x21, [sp, #32]
  24c4ec:	ldp	x29, x30, [sp, #16]
  24c4f0:	add	sp, sp, #0x40
  24c4f4:	ret
  24c4f8:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  24c4fc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24c500:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24c504:	add	x1, x1, #0x713
  24c508:	add	x2, x2, #0xc6e
  24c50c:	add	x4, x4, #0x10e
  24c510:	mov	w0, #0x1                   	// #1
  24c514:	mov	w3, #0x271                 	// #625
  24c518:	bl	253f10 <log_assert_failed_return_realm@plt>
  24c51c:	mov	w20, #0xffffffea            	// #-22
  24c520:	b	24c4c8 <sd_seat_get_active+0xd0>

000000000024c524 <sd_seat_get_sessions>:
  24c524:	sub	sp, sp, #0xa0
  24c528:	stp	x29, x30, [sp, #64]
  24c52c:	add	x29, sp, #0x40
  24c530:	stp	x22, x21, [sp, #128]
  24c534:	mov	x21, x1
  24c538:	add	x1, x29, #0x18
  24c53c:	str	x27, [sp, #80]
  24c540:	stp	x26, x25, [sp, #96]
  24c544:	stp	x24, x23, [sp, #112]
  24c548:	stp	x20, x19, [sp, #144]
  24c54c:	mov	x19, x3
  24c550:	mov	x20, x2
  24c554:	str	xzr, [x29, #24]
  24c558:	stp	xzr, xzr, [x29, #-16]
  24c55c:	stur	xzr, [x29, #-24]
  24c560:	str	xzr, [sp, #32]
  24c564:	bl	24ba54 <file_of_seat>
  24c568:	tbnz	w0, #31, 24c5a4 <sd_seat_get_sessions+0x80>
  24c56c:	ldr	x1, [x29, #24]
  24c570:	adrp	x2, 211000 <worker_hash_op+0x6ad0>
  24c574:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24c578:	add	x2, x2, #0x29d
  24c57c:	add	x4, x4, #0xd1f
  24c580:	sub	x3, x29, #0x8
  24c584:	sub	x5, x29, #0x10
  24c588:	mov	x0, xzr
  24c58c:	mov	x6, xzr
  24c590:	bl	254ea0 <parse_env_file_sentinel@plt>
  24c594:	cmn	w0, #0x2
  24c598:	b.ne	24c5ac <sd_seat_get_sessions+0x88>  // b.any
  24c59c:	mov	w22, #0xfffffffa            	// #-6
  24c5a0:	b	24c730 <sd_seat_get_sessions+0x20c>
  24c5a4:	mov	w22, w0
  24c5a8:	b	24c730 <sd_seat_get_sessions+0x20c>
  24c5ac:	mov	w22, w0
  24c5b0:	tbnz	w0, #31, 24c730 <sd_seat_get_sessions+0x20c>
  24c5b4:	ldur	x0, [x29, #-8]
  24c5b8:	cbz	x0, 24c5c8 <sd_seat_get_sessions+0xa4>
  24c5bc:	bl	24c798 <strv_split>
  24c5c0:	stur	x0, [x29, #-24]
  24c5c4:	cbz	x0, 24c6d4 <sd_seat_get_sessions+0x1b0>
  24c5c8:	mov	w24, wzr
  24c5cc:	cbz	x20, 24c6fc <sd_seat_get_sessions+0x1d8>
  24c5d0:	ldur	x8, [x29, #-16]
  24c5d4:	cbz	x8, 24c6fc <sd_seat_get_sessions+0x1d8>
  24c5d8:	ldur	x8, [x29, #-16]
  24c5dc:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  24c5e0:	add	x2, x2, #0x33a
  24c5e4:	add	x0, sp, #0x18
  24c5e8:	add	x1, sp, #0x10
  24c5ec:	mov	w3, wzr
  24c5f0:	str	x8, [sp, #24]
  24c5f4:	bl	254a70 <split@plt>
  24c5f8:	mov	w24, wzr
  24c5fc:	cbz	x0, 24c624 <sd_seat_get_sessions+0x100>
  24c600:	adrp	x22, 218000 <worker_hash_op+0xdad0>
  24c604:	add	x22, x22, #0x33a
  24c608:	add	x0, sp, #0x18
  24c60c:	add	x1, sp, #0x10
  24c610:	mov	x2, x22
  24c614:	mov	w3, wzr
  24c618:	add	w24, w24, #0x1
  24c61c:	bl	254a70 <split@plt>
  24c620:	cbnz	x0, 24c608 <sd_seat_get_sessions+0xe4>
  24c624:	cbz	w24, 24c6dc <sd_seat_get_sessions+0x1b8>
  24c628:	mov	w0, w24
  24c62c:	bl	24c7b8 <malloc_multiply>
  24c630:	str	x0, [sp, #32]
  24c634:	cbz	x0, 24c6e0 <sd_seat_get_sessions+0x1bc>
  24c638:	ldur	x8, [x29, #-16]
  24c63c:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  24c640:	add	x2, x2, #0x33a
  24c644:	add	x0, sp, #0x18
  24c648:	add	x1, sp, #0x10
  24c64c:	mov	w3, wzr
  24c650:	str	x8, [sp, #24]
  24c654:	bl	254a70 <split@plt>
  24c658:	cbz	x0, 24c6ec <sd_seat_get_sessions+0x1c8>
  24c65c:	ldr	x26, [sp, #32]
  24c660:	adrp	x23, 218000 <worker_hash_op+0xdad0>
  24c664:	mov	w25, wzr
  24c668:	add	x23, x23, #0x33a
  24c66c:	ldr	x1, [sp, #16]
  24c670:	str	xzr, [sp, #8]
  24c674:	bl	253a70 <strndup@plt>
  24c678:	str	x0, [sp, #8]
  24c67c:	cbz	x0, 24c6a0 <sd_seat_get_sessions+0x17c>
  24c680:	add	x1, x26, w25, uxtw #2
  24c684:	bl	2544d0 <parse_uid@plt>
  24c688:	mvn	w8, w0
  24c68c:	cmp	w0, #0x0
  24c690:	lsr	w27, w0, #31
  24c694:	add	w25, w25, w8, lsr #31
  24c698:	csel	w22, w0, w22, lt  // lt = tstop
  24c69c:	b	24c6a8 <sd_seat_get_sessions+0x184>
  24c6a0:	mov	w22, #0xfffffff4            	// #-12
  24c6a4:	mov	w27, #0x1                   	// #1
  24c6a8:	add	x0, sp, #0x8
  24c6ac:	bl	24b754 <freep>
  24c6b0:	cbnz	w27, 24c6f0 <sd_seat_get_sessions+0x1cc>
  24c6b4:	add	x0, sp, #0x18
  24c6b8:	add	x1, sp, #0x10
  24c6bc:	mov	x2, x23
  24c6c0:	mov	w3, wzr
  24c6c4:	bl	254a70 <split@plt>
  24c6c8:	cbnz	x0, 24c66c <sd_seat_get_sessions+0x148>
  24c6cc:	mov	w27, wzr
  24c6d0:	b	24c6f0 <sd_seat_get_sessions+0x1cc>
  24c6d4:	mov	w22, #0xfffffff4            	// #-12
  24c6d8:	b	24c730 <sd_seat_get_sessions+0x20c>
  24c6dc:	b	24c6f4 <sd_seat_get_sessions+0x1d0>
  24c6e0:	mov	w22, #0xfffffff4            	// #-12
  24c6e4:	mov	w27, #0x1                   	// #1
  24c6e8:	b	24c6f0 <sd_seat_get_sessions+0x1cc>
  24c6ec:	mov	w27, wzr
  24c6f0:	cbnz	w27, 24c6f8 <sd_seat_get_sessions+0x1d4>
  24c6f4:	mov	w27, wzr
  24c6f8:	cbnz	w27, 24c730 <sd_seat_get_sessions+0x20c>
  24c6fc:	ldur	x23, [x29, #-24]
  24c700:	mov	x0, x23
  24c704:	bl	2547a0 <strv_length@plt>
  24c708:	mov	x22, x0
  24c70c:	cbz	x21, 24c718 <sd_seat_get_sessions+0x1f4>
  24c710:	stur	xzr, [x29, #-24]
  24c714:	str	x23, [x21]
  24c718:	cbz	x20, 24c728 <sd_seat_get_sessions+0x204>
  24c71c:	ldr	x8, [sp, #32]
  24c720:	str	xzr, [sp, #32]
  24c724:	str	x8, [x20]
  24c728:	cbz	x19, 24c730 <sd_seat_get_sessions+0x20c>
  24c72c:	str	w24, [x19]
  24c730:	add	x0, sp, #0x20
  24c734:	bl	24b754 <freep>
  24c738:	sub	x0, x29, #0x18
  24c73c:	bl	24c77c <strv_freep>
  24c740:	sub	x0, x29, #0x10
  24c744:	bl	24b754 <freep>
  24c748:	sub	x0, x29, #0x8
  24c74c:	bl	24b754 <freep>
  24c750:	add	x0, x29, #0x18
  24c754:	bl	24b754 <freep>
  24c758:	mov	w0, w22
  24c75c:	ldp	x20, x19, [sp, #144]
  24c760:	ldp	x22, x21, [sp, #128]
  24c764:	ldp	x24, x23, [sp, #112]
  24c768:	ldp	x26, x25, [sp, #96]
  24c76c:	ldr	x27, [sp, #80]
  24c770:	ldp	x29, x30, [sp, #64]
  24c774:	add	sp, sp, #0xa0
  24c778:	ret

000000000024c77c <strv_freep>:
  24c77c:	stp	x29, x30, [sp, #-16]!
  24c780:	ldr	x0, [x0]
  24c784:	mov	x29, sp
  24c788:	cbz	x0, 24c790 <strv_freep+0x14>
  24c78c:	bl	254150 <strv_free@plt>
  24c790:	ldp	x29, x30, [sp], #16
  24c794:	ret

000000000024c798 <strv_split>:
  24c798:	stp	x29, x30, [sp, #-16]!
  24c79c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24c7a0:	add	x1, x1, #0x6c2
  24c7a4:	mov	w2, wzr
  24c7a8:	mov	x29, sp
  24c7ac:	bl	2540e0 <strv_split_full@plt>
  24c7b0:	ldp	x29, x30, [sp], #16
  24c7b4:	ret

000000000024c7b8 <malloc_multiply>:
  24c7b8:	stp	x29, x30, [sp, #-32]!
  24c7bc:	str	x19, [sp, #16]
  24c7c0:	mov	x19, x0
  24c7c4:	mov	w0, #0x4                   	// #4
  24c7c8:	mov	x1, x19
  24c7cc:	mov	x29, sp
  24c7d0:	bl	24ce48 <size_multiply_overflow>
  24c7d4:	tbz	w0, #0, 24c7e0 <malloc_multiply+0x28>
  24c7d8:	mov	x0, xzr
  24c7dc:	b	24c7f0 <malloc_multiply+0x38>
  24c7e0:	lsl	x8, x19, #2
  24c7e4:	cmp	x8, #0x0
  24c7e8:	csinc	x0, x8, xzr, ne  // ne = any
  24c7ec:	bl	2539c0 <malloc@plt>
  24c7f0:	ldr	x19, [sp, #16]
  24c7f4:	ldp	x29, x30, [sp], #32
  24c7f8:	ret

000000000024c7fc <sd_seat_can_multi_session>:
  24c7fc:	stp	x29, x30, [sp, #-16]!
  24c800:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24c804:	add	x1, x1, #0x7cb
  24c808:	mov	x29, sp
  24c80c:	bl	24c818 <seat_get_can>
  24c810:	ldp	x29, x30, [sp], #16
  24c814:	ret

000000000024c818 <seat_get_can>:
  24c818:	sub	sp, sp, #0x30
  24c81c:	stp	x29, x30, [sp, #16]
  24c820:	stp	x20, x19, [sp, #32]
  24c824:	add	x29, sp, #0x10
  24c828:	stp	xzr, xzr, [sp]
  24c82c:	cbz	x1, 24c8b8 <seat_get_can+0xa0>
  24c830:	mov	x20, x1
  24c834:	add	x1, sp, #0x8
  24c838:	bl	24ba54 <file_of_seat>
  24c83c:	tbnz	w0, #31, 24c890 <seat_get_can+0x78>
  24c840:	ldr	x1, [sp, #8]
  24c844:	mov	x3, sp
  24c848:	mov	x0, xzr
  24c84c:	mov	x2, x20
  24c850:	mov	x4, xzr
  24c854:	bl	254ea0 <parse_env_file_sentinel@plt>
  24c858:	cmn	w0, #0x2
  24c85c:	b.ne	24c868 <seat_get_can+0x50>  // b.any
  24c860:	mov	w19, #0xfffffffa            	// #-6
  24c864:	b	24c894 <seat_get_can+0x7c>
  24c868:	mov	w19, w0
  24c86c:	tbnz	w0, #31, 24c894 <seat_get_can+0x7c>
  24c870:	ldr	x19, [sp]
  24c874:	mov	x0, x19
  24c878:	bl	24b16c <isempty>
  24c87c:	tbz	w0, #0, 24c888 <seat_get_can+0x70>
  24c880:	mov	w19, #0xffffffc3            	// #-61
  24c884:	b	24c894 <seat_get_can+0x7c>
  24c888:	mov	x0, x19
  24c88c:	bl	254ee0 <parse_boolean@plt>
  24c890:	mov	w19, w0
  24c894:	mov	x0, sp
  24c898:	bl	24b754 <freep>
  24c89c:	add	x0, sp, #0x8
  24c8a0:	bl	24b754 <freep>
  24c8a4:	mov	w0, w19
  24c8a8:	ldp	x20, x19, [sp, #32]
  24c8ac:	ldp	x29, x30, [sp, #16]
  24c8b0:	add	sp, sp, #0x30
  24c8b4:	ret
  24c8b8:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24c8bc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24c8c0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24c8c4:	add	x1, x1, #0xf6f
  24c8c8:	add	x2, x2, #0xc6e
  24c8cc:	add	x4, x4, #0x5ab
  24c8d0:	mov	w0, #0x1                   	// #1
  24c8d4:	mov	w3, #0x2da                 	// #730
  24c8d8:	bl	253740 <log_assert_failed_realm@plt>

000000000024c8dc <sd_seat_can_tty>:
  24c8dc:	stp	x29, x30, [sp, #-16]!
  24c8e0:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24c8e4:	add	x1, x1, #0x615
  24c8e8:	mov	x29, sp
  24c8ec:	bl	24c818 <seat_get_can>
  24c8f0:	ldp	x29, x30, [sp], #16
  24c8f4:	ret

000000000024c8f8 <sd_seat_can_graphical>:
  24c8f8:	stp	x29, x30, [sp, #-16]!
  24c8fc:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24c900:	add	x1, x1, #0xb93
  24c904:	mov	x29, sp
  24c908:	bl	24c818 <seat_get_can>
  24c90c:	ldp	x29, x30, [sp], #16
  24c910:	ret

000000000024c914 <sd_get_seats>:
  24c914:	stp	x29, x30, [sp, #-32]!
  24c918:	str	x19, [sp, #16]
  24c91c:	mov	x19, x0
  24c920:	adrp	x0, 20d000 <worker_hash_op+0x2ad0>
  24c924:	add	x0, x0, #0x1b1
  24c928:	mov	x1, x19
  24c92c:	mov	x29, sp
  24c930:	bl	254f00 <get_files_in_directory@plt>
  24c934:	cmn	w0, #0x2
  24c938:	b.ne	24c948 <sd_get_seats+0x34>  // b.any
  24c93c:	mov	w0, wzr
  24c940:	cbz	x19, 24c948 <sd_get_seats+0x34>
  24c944:	str	xzr, [x19]
  24c948:	ldr	x19, [sp, #16]
  24c94c:	ldp	x29, x30, [sp], #32
  24c950:	ret

000000000024c954 <sd_get_sessions>:
  24c954:	stp	x29, x30, [sp, #-32]!
  24c958:	str	x19, [sp, #16]
  24c95c:	mov	x19, x0
  24c960:	adrp	x0, 211000 <worker_hash_op+0x6ad0>
  24c964:	add	x0, x0, #0x9c9
  24c968:	mov	x1, x19
  24c96c:	mov	x29, sp
  24c970:	bl	254f00 <get_files_in_directory@plt>
  24c974:	cmn	w0, #0x2
  24c978:	b.ne	24c988 <sd_get_sessions+0x34>  // b.any
  24c97c:	mov	w0, wzr
  24c980:	cbz	x19, 24c988 <sd_get_sessions+0x34>
  24c984:	str	xzr, [x19]
  24c988:	ldr	x19, [sp, #16]
  24c98c:	ldp	x29, x30, [sp], #32
  24c990:	ret

000000000024c994 <sd_get_uids>:
  24c994:	sub	sp, sp, #0x60
  24c998:	stp	x20, x19, [sp, #80]
  24c99c:	mov	x19, x0
  24c9a0:	adrp	x0, 20b000 <worker_hash_op+0xad0>
  24c9a4:	add	x0, x0, #0x6ff
  24c9a8:	stp	x29, x30, [sp, #16]
  24c9ac:	str	x25, [sp, #32]
  24c9b0:	stp	x24, x23, [sp, #48]
  24c9b4:	stp	x22, x21, [sp, #64]
  24c9b8:	add	x29, sp, #0x10
  24c9bc:	str	xzr, [sp, #8]
  24c9c0:	bl	2543a0 <opendir@plt>
  24c9c4:	mov	x22, x0
  24c9c8:	str	x0, [x29, #24]
  24c9cc:	bl	253660 <__errno_location@plt>
  24c9d0:	mov	x21, x0
  24c9d4:	cbz	x22, 24cab0 <sd_get_uids+0x11c>
  24c9d8:	mov	x0, x22
  24c9dc:	str	wzr, [x21]
  24c9e0:	bl	2543b0 <readdir64@plt>
  24c9e4:	cbz	x0, 24cacc <sd_get_uids+0x138>
  24c9e8:	mov	x24, x0
  24c9ec:	mov	w20, wzr
  24c9f0:	mov	w23, wzr
  24c9f4:	mov	w25, #0x10                  	// #16
  24c9f8:	mov	x0, x22
  24c9fc:	mov	x1, x24
  24ca00:	bl	254f10 <dirent_ensure_type@plt>
  24ca04:	mov	x0, x24
  24ca08:	bl	254f20 <dirent_is_file@plt>
  24ca0c:	tbz	w0, #0, 24ca4c <sd_get_uids+0xb8>
  24ca10:	add	x0, x24, #0x13
  24ca14:	add	x1, sp, #0x4
  24ca18:	bl	2544d0 <parse_uid@plt>
  24ca1c:	tbnz	w0, #31, 24ca4c <sd_get_uids+0xb8>
  24ca20:	cbz	x19, 24ca40 <sd_get_uids+0xac>
  24ca24:	cmp	w20, w23
  24ca28:	b.cs	24ca74 <sd_get_uids+0xe0>  // b.hs, b.nlast
  24ca2c:	cmp	w20, w23
  24ca30:	b.cs	24cb2c <sd_get_uids+0x198>  // b.hs, b.nlast
  24ca34:	ldr	w8, [sp, #4]
  24ca38:	ldr	x9, [sp, #8]
  24ca3c:	str	w8, [x9, w20, sxtw #2]
  24ca40:	mov	w8, wzr
  24ca44:	add	w20, w20, #0x1
  24ca48:	b	24ca50 <sd_get_uids+0xbc>
  24ca4c:	mov	w8, #0x4                   	// #4
  24ca50:	orr	w8, w8, #0x4
  24ca54:	cmp	w8, #0x4
  24ca58:	b.ne	24cae4 <sd_get_uids+0x150>  // b.any
  24ca5c:	mov	x0, x22
  24ca60:	str	wzr, [x21]
  24ca64:	bl	2543b0 <readdir64@plt>
  24ca68:	mov	x24, x0
  24ca6c:	cbnz	x0, 24c9f8 <sd_get_uids+0x64>
  24ca70:	b	24cad0 <sd_get_uids+0x13c>
  24ca74:	ldr	x0, [sp, #8]
  24ca78:	lsl	w8, w20, #1
  24ca7c:	cmp	w8, #0x10
  24ca80:	csel	w23, w8, w25, gt
  24ca84:	mov	w1, #0x4                   	// #4
  24ca88:	mov	x2, x23
  24ca8c:	bl	254f30 <reallocarray@plt>
  24ca90:	cbz	x0, 24caa4 <sd_get_uids+0x110>
  24ca94:	mov	w8, wzr
  24ca98:	str	x0, [sp, #8]
  24ca9c:	cbnz	w8, 24ca50 <sd_get_uids+0xbc>
  24caa0:	b	24ca2c <sd_get_uids+0x98>
  24caa4:	mov	w8, #0x1                   	// #1
  24caa8:	cbnz	w8, 24ca50 <sd_get_uids+0xbc>
  24caac:	b	24ca2c <sd_get_uids+0x98>
  24cab0:	ldr	w8, [x21]
  24cab4:	cmp	w8, #0x2
  24cab8:	b.ne	24cadc <sd_get_uids+0x148>  // b.any
  24cabc:	mov	w20, wzr
  24cac0:	cbz	x19, 24cafc <sd_get_uids+0x168>
  24cac4:	str	xzr, [x19]
  24cac8:	b	24cafc <sd_get_uids+0x168>
  24cacc:	mov	w20, wzr
  24cad0:	ldr	w8, [x21]
  24cad4:	cmp	w8, #0x1
  24cad8:	b.lt	24caec <sd_get_uids+0x158>  // b.tstop
  24cadc:	neg	w20, w8
  24cae0:	b	24cafc <sd_get_uids+0x168>
  24cae4:	mov	w20, #0xfffffff4            	// #-12
  24cae8:	b	24cafc <sd_get_uids+0x168>
  24caec:	cbz	x19, 24cafc <sd_get_uids+0x168>
  24caf0:	ldr	x8, [sp, #8]
  24caf4:	str	xzr, [sp, #8]
  24caf8:	str	x8, [x19]
  24cafc:	add	x0, sp, #0x8
  24cb00:	bl	24b754 <freep>
  24cb04:	add	x0, x29, #0x18
  24cb08:	bl	24cb50 <closedirp>
  24cb0c:	mov	w0, w20
  24cb10:	ldp	x20, x19, [sp, #80]
  24cb14:	ldp	x22, x21, [sp, #64]
  24cb18:	ldp	x24, x23, [sp, #48]
  24cb1c:	ldr	x25, [sp, #32]
  24cb20:	ldp	x29, x30, [sp, #16]
  24cb24:	add	sp, sp, #0x60
  24cb28:	ret
  24cb2c:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  24cb30:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24cb34:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  24cb38:	add	x1, x1, #0x742
  24cb3c:	add	x2, x2, #0xc6e
  24cb40:	add	x4, x4, #0x218
  24cb44:	mov	w0, #0x1                   	// #1
  24cb48:	mov	w3, #0x33a                 	// #826
  24cb4c:	bl	253740 <log_assert_failed_realm@plt>

000000000024cb50 <closedirp>:
  24cb50:	stp	x29, x30, [sp, #-16]!
  24cb54:	ldr	x0, [x0]
  24cb58:	mov	x29, sp
  24cb5c:	cbz	x0, 24cb64 <closedirp+0x14>
  24cb60:	bl	2543e0 <closedir@plt>
  24cb64:	ldp	x29, x30, [sp], #16
  24cb68:	ret

000000000024cb6c <sd_get_machine_names>:
  24cb6c:	stp	x29, x30, [sp, #-64]!
  24cb70:	stp	x20, x19, [sp, #48]
  24cb74:	mov	x29, sp
  24cb78:	mov	x20, x0
  24cb7c:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  24cb80:	add	x0, x0, #0xc26
  24cb84:	add	x1, x29, #0x18
  24cb88:	str	x23, [sp, #16]
  24cb8c:	stp	x22, x21, [sp, #32]
  24cb90:	str	xzr, [x29, #24]
  24cb94:	bl	254f00 <get_files_in_directory@plt>
  24cb98:	cmn	w0, #0x2
  24cb9c:	b.ne	24cbb0 <sd_get_machine_names+0x44>  // b.any
  24cba0:	mov	w19, wzr
  24cba4:	cbz	x20, 24cc2c <sd_get_machine_names+0xc0>
  24cba8:	str	xzr, [x20]
  24cbac:	b	24cc2c <sd_get_machine_names+0xc0>
  24cbb0:	mov	w19, w0
  24cbb4:	tbnz	w0, #31, 24cc2c <sd_get_machine_names+0xc0>
  24cbb8:	ldr	x22, [x29, #24]
  24cbbc:	cbz	x22, 24cc1c <sd_get_machine_names+0xb0>
  24cbc0:	ldr	x21, [x22]
  24cbc4:	cbz	x21, 24cc14 <sd_get_machine_names+0xa8>
  24cbc8:	mov	w19, wzr
  24cbcc:	add	x23, x22, #0x8
  24cbd0:	b	24cbe4 <sd_get_machine_names+0x78>
  24cbd4:	mov	x0, x21
  24cbd8:	bl	2536e0 <free@plt>
  24cbdc:	ldr	x21, [x23], #8
  24cbe0:	cbz	x21, 24cc18 <sd_get_machine_names+0xac>
  24cbe4:	mov	x0, x21
  24cbe8:	bl	24cc4c <startswith>
  24cbec:	cbnz	x0, 24cbd4 <sd_get_machine_names+0x68>
  24cbf0:	mov	x0, x21
  24cbf4:	mov	w1, wzr
  24cbf8:	bl	254f40 <hostname_is_valid@plt>
  24cbfc:	tbz	w0, #0, 24cbd4 <sd_get_machine_names+0x68>
  24cc00:	str	x21, [x22], #8
  24cc04:	add	w19, w19, #0x1
  24cc08:	ldr	x21, [x23], #8
  24cc0c:	cbnz	x21, 24cbe4 <sd_get_machine_names+0x78>
  24cc10:	b	24cc18 <sd_get_machine_names+0xac>
  24cc14:	mov	w19, wzr
  24cc18:	str	xzr, [x22]
  24cc1c:	cbz	x20, 24cc2c <sd_get_machine_names+0xc0>
  24cc20:	ldr	x8, [x29, #24]
  24cc24:	str	xzr, [x29, #24]
  24cc28:	str	x8, [x20]
  24cc2c:	add	x0, x29, #0x18
  24cc30:	bl	24c77c <strv_freep>
  24cc34:	mov	w0, w19
  24cc38:	ldp	x20, x19, [sp, #48]
  24cc3c:	ldp	x22, x21, [sp, #32]
  24cc40:	ldr	x23, [sp, #16]
  24cc44:	ldp	x29, x30, [sp], #64
  24cc48:	ret

000000000024cc4c <startswith>:
  24cc4c:	stp	x29, x30, [sp, #-32]!
  24cc50:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24cc54:	add	x1, x1, #0x2d4
  24cc58:	mov	w2, #0x5                   	// #5
  24cc5c:	str	x19, [sp, #16]
  24cc60:	mov	x29, sp
  24cc64:	mov	x19, x0
  24cc68:	bl	2539b0 <strncmp@plt>
  24cc6c:	add	x8, x19, #0x5
  24cc70:	ldr	x19, [sp, #16]
  24cc74:	cmp	w0, #0x0
  24cc78:	csel	x0, x8, xzr, eq  // eq = none
  24cc7c:	ldp	x29, x30, [sp], #32
  24cc80:	ret

000000000024cc84 <sd_machine_get_class>:
  24cc84:	stp	x29, x30, [sp, #-48]!
  24cc88:	stp	x22, x21, [sp, #16]
  24cc8c:	stp	x20, x19, [sp, #32]
  24cc90:	mov	x29, sp
  24cc94:	sub	sp, sp, #0x20
  24cc98:	stur	xzr, [x29, #-8]
  24cc9c:	cbz	x1, 24cdec <sd_machine_get_class+0x168>
  24cca0:	mov	x19, x1
  24cca4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24cca8:	add	x1, x1, #0x7dd
  24ccac:	mov	x20, x0
  24ccb0:	bl	253bc0 <strcmp@plt>
  24ccb4:	cbz	w0, 24cd80 <sd_machine_get_class+0xfc>
  24ccb8:	mov	x0, x20
  24ccbc:	mov	w1, wzr
  24ccc0:	bl	254f40 <hostname_is_valid@plt>
  24ccc4:	tbz	w0, #0, 24cd9c <sd_machine_get_class+0x118>
  24ccc8:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  24cccc:	add	x8, x8, #0xc26
  24ccd0:	mov	x22, xzr
  24ccd4:	mov	x21, xzr
  24ccd8:	stp	x8, x20, [x29, #-24]
  24ccdc:	sub	x20, x29, #0x18
  24cce0:	ldr	x0, [x20, x22]
  24cce4:	cbz	x0, 24ccfc <sd_machine_get_class+0x78>
  24cce8:	bl	2539a0 <strlen@plt>
  24ccec:	add	x22, x22, #0x8
  24ccf0:	cmp	x22, #0x10
  24ccf4:	add	x21, x0, x21
  24ccf8:	b.ne	24cce0 <sd_machine_get_class+0x5c>  // b.any
  24ccfc:	add	x20, x21, #0x1
  24cd00:	mov	w0, #0x1                   	// #1
  24cd04:	mov	x1, x20
  24cd08:	bl	24ce48 <size_multiply_overflow>
  24cd0c:	tbnz	w0, #0, 24ce18 <sd_machine_get_class+0x194>
  24cd10:	cmp	x20, #0x400, lsl #12
  24cd14:	b.hi	24ce24 <sd_machine_get_class+0x1a0>  // b.pmore
  24cd18:	add	x9, x20, #0xf
  24cd1c:	mov	x8, sp
  24cd20:	and	x9, x9, #0xfffffffffffffff0
  24cd24:	sub	x20, x8, x9
  24cd28:	mov	sp, x20
  24cd2c:	mov	x21, xzr
  24cd30:	sub	x22, x29, #0x18
  24cd34:	mov	x0, x20
  24cd38:	ldr	x1, [x22, x21]
  24cd3c:	cbz	x1, 24cd50 <sd_machine_get_class+0xcc>
  24cd40:	bl	253e40 <stpcpy@plt>
  24cd44:	add	x21, x21, #0x8
  24cd48:	cmp	x21, #0x10
  24cd4c:	b.ne	24cd38 <sd_machine_get_class+0xb4>  // b.any
  24cd50:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24cd54:	strb	wzr, [x0]
  24cd58:	add	x2, x2, #0xcde
  24cd5c:	sub	x3, x29, #0x8
  24cd60:	mov	x0, xzr
  24cd64:	mov	x1, x20
  24cd68:	mov	x4, xzr
  24cd6c:	bl	254ea0 <parse_env_file_sentinel@plt>
  24cd70:	cmn	w0, #0x2
  24cd74:	b.ne	24cda4 <sd_machine_get_class+0x120>  // b.any
  24cd78:	mov	w20, #0xfffffffa            	// #-6
  24cd7c:	b	24cdc4 <sd_machine_get_class+0x140>
  24cd80:	adrp	x0, 212000 <worker_hash_op+0x7ad0>
  24cd84:	add	x0, x0, #0x87
  24cd88:	bl	253ab0 <strdup@plt>
  24cd8c:	stur	x0, [x29, #-8]
  24cd90:	cbnz	x0, 24cdb4 <sd_machine_get_class+0x130>
  24cd94:	mov	w20, #0xfffffff4            	// #-12
  24cd98:	b	24cdc4 <sd_machine_get_class+0x140>
  24cd9c:	mov	w20, #0xffffffea            	// #-22
  24cda0:	b	24cdc4 <sd_machine_get_class+0x140>
  24cda4:	mov	w20, w0
  24cda8:	tbnz	w0, #31, 24cdc4 <sd_machine_get_class+0x140>
  24cdac:	ldur	x8, [x29, #-8]
  24cdb0:	cbz	x8, 24cde4 <sd_machine_get_class+0x160>
  24cdb4:	ldur	x8, [x29, #-8]
  24cdb8:	mov	w20, wzr
  24cdbc:	stur	xzr, [x29, #-8]
  24cdc0:	str	x8, [x19]
  24cdc4:	sub	x0, x29, #0x8
  24cdc8:	bl	24b754 <freep>
  24cdcc:	mov	w0, w20
  24cdd0:	mov	sp, x29
  24cdd4:	ldp	x20, x19, [sp, #32]
  24cdd8:	ldp	x22, x21, [sp, #16]
  24cddc:	ldp	x29, x30, [sp], #48
  24cde0:	ret
  24cde4:	mov	w20, #0xfffffffb            	// #-5
  24cde8:	b	24cdc4 <sd_machine_get_class+0x140>
  24cdec:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24cdf0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24cdf4:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24cdf8:	add	x1, x1, #0x5f0
  24cdfc:	add	x2, x2, #0xc6e
  24ce00:	add	x4, x4, #0x57b
  24ce04:	mov	w0, #0x1                   	// #1
  24ce08:	mov	w3, #0x370                 	// #880
  24ce0c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24ce10:	mov	w20, #0xffffffea            	// #-22
  24ce14:	b	24cdc4 <sd_machine_get_class+0x140>
  24ce18:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  24ce1c:	add	x1, x1, #0x498
  24ce20:	b	24ce2c <sd_machine_get_class+0x1a8>
  24ce24:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24ce28:	add	x1, x1, #0x166
  24ce2c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ce30:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24ce34:	add	x2, x2, #0xc6e
  24ce38:	add	x4, x4, #0x57b
  24ce3c:	mov	w0, #0x1                   	// #1
  24ce40:	mov	w3, #0x37a                 	// #890
  24ce44:	bl	253740 <log_assert_failed_realm@plt>

000000000024ce48 <size_multiply_overflow>:
  24ce48:	umulh	x8, x1, x0
  24ce4c:	cmp	xzr, x8
  24ce50:	cset	w0, ne  // ne = any
  24ce54:	ret

000000000024ce58 <sd_machine_get_ifindices>:
  24ce58:	stp	x29, x30, [sp, #-64]!
  24ce5c:	stp	x24, x23, [sp, #16]
  24ce60:	stp	x22, x21, [sp, #32]
  24ce64:	stp	x20, x19, [sp, #48]
  24ce68:	mov	x29, sp
  24ce6c:	sub	sp, sp, #0x40
  24ce70:	mov	x19, x1
  24ce74:	mov	w1, wzr
  24ce78:	mov	x20, x0
  24ce7c:	stp	xzr, xzr, [x29, #-16]
  24ce80:	stur	xzr, [x29, #-24]
  24ce84:	bl	254f40 <hostname_is_valid@plt>
  24ce88:	tbz	w0, #0, 24d084 <sd_machine_get_ifindices+0x22c>
  24ce8c:	cbz	x19, 24d0a8 <sd_machine_get_ifindices+0x250>
  24ce90:	adrp	x8, 210000 <worker_hash_op+0x5ad0>
  24ce94:	add	x8, x8, #0xc26
  24ce98:	mov	x22, xzr
  24ce9c:	mov	x21, xzr
  24cea0:	stp	x8, x20, [x29, #-48]
  24cea4:	sub	x20, x29, #0x30
  24cea8:	ldr	x0, [x20, x22]
  24ceac:	cbz	x0, 24cec4 <sd_machine_get_ifindices+0x6c>
  24ceb0:	bl	2539a0 <strlen@plt>
  24ceb4:	add	x22, x22, #0x8
  24ceb8:	cmp	x22, #0x10
  24cebc:	add	x21, x0, x21
  24cec0:	b.ne	24cea8 <sd_machine_get_ifindices+0x50>  // b.any
  24cec4:	add	x20, x21, #0x1
  24cec8:	mov	w0, #0x1                   	// #1
  24cecc:	mov	x1, x20
  24ced0:	bl	24ce48 <size_multiply_overflow>
  24ced4:	tbnz	w0, #0, 24d0d4 <sd_machine_get_ifindices+0x27c>
  24ced8:	cmp	x20, #0x400, lsl #12
  24cedc:	b.hi	24d0e0 <sd_machine_get_ifindices+0x288>  // b.pmore
  24cee0:	add	x9, x20, #0xf
  24cee4:	mov	x8, sp
  24cee8:	and	x9, x9, #0xfffffffffffffff0
  24ceec:	sub	x20, x8, x9
  24cef0:	mov	sp, x20
  24cef4:	mov	x21, xzr
  24cef8:	sub	x22, x29, #0x30
  24cefc:	mov	x0, x20
  24cf00:	ldr	x1, [x22, x21]
  24cf04:	cbz	x1, 24cf18 <sd_machine_get_ifindices+0xc0>
  24cf08:	bl	253e40 <stpcpy@plt>
  24cf0c:	add	x21, x21, #0x8
  24cf10:	cmp	x21, #0x10
  24cf14:	b.ne	24cf00 <sd_machine_get_ifindices+0xa8>  // b.any
  24cf18:	adrp	x2, 212000 <worker_hash_op+0x7ad0>
  24cf1c:	strb	wzr, [x0]
  24cf20:	add	x2, x2, #0x145
  24cf24:	sub	x3, x29, #0x8
  24cf28:	mov	x0, xzr
  24cf2c:	mov	x1, x20
  24cf30:	mov	x4, xzr
  24cf34:	bl	254ea0 <parse_env_file_sentinel@plt>
  24cf38:	cmn	w0, #0x2
  24cf3c:	b.ne	24cf48 <sd_machine_get_ifindices+0xf0>  // b.any
  24cf40:	mov	w20, #0xfffffffa            	// #-6
  24cf44:	b	24d060 <sd_machine_get_ifindices+0x208>
  24cf48:	mov	w20, w0
  24cf4c:	tbnz	w0, #31, 24d060 <sd_machine_get_ifindices+0x208>
  24cf50:	ldur	x8, [x29, #-8]
  24cf54:	cbz	x8, 24d048 <sd_machine_get_ifindices+0x1f0>
  24cf58:	adrp	x2, 218000 <worker_hash_op+0xdad0>
  24cf5c:	add	x2, x2, #0x33a
  24cf60:	sub	x0, x29, #0x20
  24cf64:	sub	x1, x29, #0x30
  24cf68:	mov	w3, wzr
  24cf6c:	stur	x8, [x29, #-32]
  24cf70:	bl	254a70 <split@plt>
  24cf74:	cbz	x0, 24d054 <sd_machine_get_ifindices+0x1fc>
  24cf78:	adrp	x21, 218000 <worker_hash_op+0xdad0>
  24cf7c:	mov	x1, x0
  24cf80:	mov	x20, xzr
  24cf84:	add	x21, x21, #0x33a
  24cf88:	b	24cfa8 <sd_machine_get_ifindices+0x150>
  24cf8c:	sub	x0, x29, #0x20
  24cf90:	sub	x1, x29, #0x30
  24cf94:	mov	x2, x21
  24cf98:	mov	w3, wzr
  24cf9c:	bl	254a70 <split@plt>
  24cfa0:	mov	x1, x0
  24cfa4:	cbz	x0, 24d058 <sd_machine_get_ifindices+0x200>
  24cfa8:	ldur	x8, [x29, #-48]
  24cfac:	mov	x9, sp
  24cfb0:	mov	x24, sp
  24cfb4:	add	x8, x8, #0x10
  24cfb8:	and	x8, x8, #0xfffffffffffffff0
  24cfbc:	sub	x22, x9, x8
  24cfc0:	mov	sp, x22
  24cfc4:	ldur	x23, [x29, #-48]
  24cfc8:	mov	x0, x22
  24cfcc:	mov	x2, x23
  24cfd0:	bl	2540c0 <memcpy@plt>
  24cfd4:	sub	x1, x29, #0x34
  24cfd8:	mov	x0, x22
  24cfdc:	strb	wzr, [x22, x23]
  24cfe0:	bl	254f50 <parse_ifindex@plt>
  24cfe4:	tbnz	w0, #31, 24d01c <sd_machine_get_ifindices+0x1c4>
  24cfe8:	add	x22, x20, #0x1
  24cfec:	sub	x0, x29, #0x18
  24cff0:	sub	x1, x29, #0x10
  24cff4:	mov	w3, #0x4                   	// #4
  24cff8:	mov	x2, x22
  24cffc:	bl	254f60 <greedy_realloc@plt>
  24d000:	cbz	x0, 24d024 <sd_machine_get_ifindices+0x1cc>
  24d004:	ldur	w9, [x29, #-52]
  24d008:	ldur	x10, [x29, #-24]
  24d00c:	mov	w8, wzr
  24d010:	str	w9, [x10, x20, lsl #2]
  24d014:	mov	x20, x22
  24d018:	b	24d030 <sd_machine_get_ifindices+0x1d8>
  24d01c:	mov	w8, #0x12                  	// #18
  24d020:	b	24d030 <sd_machine_get_ifindices+0x1d8>
  24d024:	ldur	x0, [x29, #-24]
  24d028:	bl	2536e0 <free@plt>
  24d02c:	mov	w8, #0x1                   	// #1
  24d030:	mov	sp, x24
  24d034:	cmp	w8, #0x12
  24d038:	b.eq	24cf8c <sd_machine_get_ifindices+0x134>  // b.none
  24d03c:	cbz	w8, 24cf8c <sd_machine_get_ifindices+0x134>
  24d040:	mov	w20, #0xfffffff4            	// #-12
  24d044:	b	24d060 <sd_machine_get_ifindices+0x208>
  24d048:	mov	w20, wzr
  24d04c:	str	xzr, [x19]
  24d050:	b	24d060 <sd_machine_get_ifindices+0x208>
  24d054:	mov	x20, xzr
  24d058:	ldur	x8, [x29, #-24]
  24d05c:	str	x8, [x19]
  24d060:	sub	x0, x29, #0x8
  24d064:	bl	24b754 <freep>
  24d068:	mov	w0, w20
  24d06c:	mov	sp, x29
  24d070:	ldp	x20, x19, [sp, #48]
  24d074:	ldp	x22, x21, [sp, #32]
  24d078:	ldp	x24, x23, [sp, #16]
  24d07c:	ldp	x29, x30, [sp], #64
  24d080:	ret
  24d084:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24d088:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d08c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24d090:	add	x1, x1, #0xc3d
  24d094:	add	x2, x2, #0xc6e
  24d098:	add	x4, x4, #0xcec
  24d09c:	mov	w0, #0x1                   	// #1
  24d0a0:	mov	w3, #0x38f                 	// #911
  24d0a4:	b	24d0c8 <sd_machine_get_ifindices+0x270>
  24d0a8:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24d0ac:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d0b0:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24d0b4:	add	x1, x1, #0x2f8
  24d0b8:	add	x2, x2, #0xc6e
  24d0bc:	add	x4, x4, #0xcec
  24d0c0:	mov	w0, #0x1                   	// #1
  24d0c4:	mov	w3, #0x390                 	// #912
  24d0c8:	bl	253f10 <log_assert_failed_return_realm@plt>
  24d0cc:	mov	w20, #0xffffffea            	// #-22
  24d0d0:	b	24d060 <sd_machine_get_ifindices+0x208>
  24d0d4:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  24d0d8:	add	x1, x1, #0x498
  24d0dc:	b	24d0e8 <sd_machine_get_ifindices+0x290>
  24d0e0:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24d0e4:	add	x1, x1, #0x166
  24d0e8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d0ec:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24d0f0:	add	x2, x2, #0xc6e
  24d0f4:	add	x4, x4, #0xcec
  24d0f8:	mov	w0, #0x1                   	// #1
  24d0fc:	mov	w3, #0x392                 	// #914
  24d100:	bl	253740 <log_assert_failed_realm@plt>

000000000024d104 <sd_login_monitor_new>:
  24d104:	sub	sp, sp, #0x40
  24d108:	stp	x29, x30, [sp, #16]
  24d10c:	add	x29, sp, #0x10
  24d110:	mov	w8, #0xffffffff            	// #-1
  24d114:	stp	x22, x21, [sp, #32]
  24d118:	stp	x20, x19, [sp, #48]
  24d11c:	stur	w8, [x29, #-4]
  24d120:	cbz	x1, 24d280 <sd_login_monitor_new+0x17c>
  24d124:	mov	x21, x0
  24d128:	mov	w0, #0x800                 	// #2048
  24d12c:	movk	w0, #0x8, lsl #16
  24d130:	mov	x19, x1
  24d134:	bl	254710 <inotify_init1@plt>
  24d138:	stur	w0, [x29, #-4]
  24d13c:	tbnz	w0, #31, 24d254 <sd_login_monitor_new+0x150>
  24d140:	mov	w20, w0
  24d144:	cbz	x21, 24d168 <sd_login_monitor_new+0x64>
  24d148:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  24d14c:	add	x1, x1, #0x753
  24d150:	mov	x0, x21
  24d154:	bl	253bc0 <strcmp@plt>
  24d158:	cbz	w0, 24d168 <sd_login_monitor_new+0x64>
  24d15c:	mov	w22, wzr
  24d160:	cbnz	x21, 24d188 <sd_login_monitor_new+0x84>
  24d164:	b	24d1a4 <sd_login_monitor_new+0xa0>
  24d168:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24d16c:	add	x1, x1, #0x1b1
  24d170:	mov	w2, #0x280                 	// #640
  24d174:	mov	w0, w20
  24d178:	bl	254740 <inotify_add_watch@plt>
  24d17c:	tbnz	w0, #31, 24d254 <sd_login_monitor_new+0x150>
  24d180:	mov	w22, #0x1                   	// #1
  24d184:	cbz	x21, 24d1a4 <sd_login_monitor_new+0xa0>
  24d188:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24d18c:	add	x1, x1, #0x9f9
  24d190:	mov	x0, x21
  24d194:	bl	253bc0 <strcmp@plt>
  24d198:	cbz	w0, 24d1a4 <sd_login_monitor_new+0xa0>
  24d19c:	cbnz	x21, 24d1c4 <sd_login_monitor_new+0xc0>
  24d1a0:	b	24d1e0 <sd_login_monitor_new+0xdc>
  24d1a4:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24d1a8:	add	x1, x1, #0x9c9
  24d1ac:	mov	w2, #0x280                 	// #640
  24d1b0:	mov	w0, w20
  24d1b4:	bl	254740 <inotify_add_watch@plt>
  24d1b8:	tbnz	w0, #31, 24d254 <sd_login_monitor_new+0x150>
  24d1bc:	mov	w22, #0x1                   	// #1
  24d1c0:	cbz	x21, 24d1e0 <sd_login_monitor_new+0xdc>
  24d1c4:	adrp	x1, 216000 <worker_hash_op+0xbad0>
  24d1c8:	add	x1, x1, #0x498
  24d1cc:	mov	x0, x21
  24d1d0:	bl	253bc0 <strcmp@plt>
  24d1d4:	cbz	w0, 24d1e0 <sd_login_monitor_new+0xdc>
  24d1d8:	cbnz	x21, 24d200 <sd_login_monitor_new+0xfc>
  24d1dc:	b	24d220 <sd_login_monitor_new+0x11c>
  24d1e0:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  24d1e4:	add	x1, x1, #0x6ff
  24d1e8:	mov	w2, #0x280                 	// #640
  24d1ec:	mov	w0, w20
  24d1f0:	bl	254740 <inotify_add_watch@plt>
  24d1f4:	tbnz	w0, #31, 24d254 <sd_login_monitor_new+0x150>
  24d1f8:	mov	w22, #0x1                   	// #1
  24d1fc:	cbz	x21, 24d220 <sd_login_monitor_new+0x11c>
  24d200:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  24d204:	add	x1, x1, #0x73a
  24d208:	mov	x0, x21
  24d20c:	bl	253bc0 <strcmp@plt>
  24d210:	cbz	w0, 24d220 <sd_login_monitor_new+0x11c>
  24d214:	cbnz	w22, 24d238 <sd_login_monitor_new+0x134>
  24d218:	mov	w20, #0xffffffea            	// #-22
  24d21c:	b	24d260 <sd_login_monitor_new+0x15c>
  24d220:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24d224:	add	x1, x1, #0xc26
  24d228:	mov	w2, #0x280                 	// #640
  24d22c:	mov	w0, w20
  24d230:	bl	254740 <inotify_add_watch@plt>
  24d234:	tbnz	w0, #31, 24d254 <sd_login_monitor_new+0x150>
  24d238:	mov	w0, w20
  24d23c:	bl	24d2c0 <FD_TO_MONITOR>
  24d240:	mov	w8, #0xffffffff            	// #-1
  24d244:	mov	w20, wzr
  24d248:	str	x0, [x19]
  24d24c:	stur	w8, [x29, #-4]
  24d250:	b	24d260 <sd_login_monitor_new+0x15c>
  24d254:	bl	253660 <__errno_location@plt>
  24d258:	ldr	w8, [x0]
  24d25c:	neg	w20, w8
  24d260:	sub	x0, x29, #0x4
  24d264:	bl	24d2a8 <closep>
  24d268:	mov	w0, w20
  24d26c:	ldp	x20, x19, [sp, #48]
  24d270:	ldp	x22, x21, [sp, #32]
  24d274:	ldp	x29, x30, [sp, #16]
  24d278:	add	sp, sp, #0x40
  24d27c:	ret
  24d280:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24d284:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d288:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  24d28c:	add	x1, x1, #0x5ab
  24d290:	add	x2, x2, #0xc6e
  24d294:	add	x4, x4, #0x5b7
  24d298:	mov	w0, #0x1                   	// #1
  24d29c:	mov	w3, #0x3bf                 	// #959
  24d2a0:	bl	253f10 <log_assert_failed_return_realm@plt>
  24d2a4:	b	24d218 <sd_login_monitor_new+0x114>

000000000024d2a8 <closep>:
  24d2a8:	stp	x29, x30, [sp, #-16]!
  24d2ac:	ldr	w0, [x0]
  24d2b0:	mov	x29, sp
  24d2b4:	bl	2538f0 <safe_close@plt>
  24d2b8:	ldp	x29, x30, [sp], #16
  24d2bc:	ret

000000000024d2c0 <FD_TO_MONITOR>:
  24d2c0:	add	w8, w0, #0x1
  24d2c4:	sxtw	x0, w8
  24d2c8:	ret

000000000024d2cc <sd_login_monitor_unref>:
  24d2cc:	cbz	x0, 24d2e4 <sd_login_monitor_unref+0x18>
  24d2d0:	stp	x29, x30, [sp, #-16]!
  24d2d4:	mov	x29, sp
  24d2d8:	bl	24d2ec <MONITOR_TO_FD>
  24d2dc:	bl	254f70 <close_nointr@plt>
  24d2e0:	ldp	x29, x30, [sp], #16
  24d2e4:	mov	x0, xzr
  24d2e8:	ret

000000000024d2ec <MONITOR_TO_FD>:
  24d2ec:	sub	w0, w0, #0x1
  24d2f0:	ret

000000000024d2f4 <sd_login_monitor_flush>:
  24d2f4:	stp	x29, x30, [sp, #-16]!
  24d2f8:	mov	x29, sp
  24d2fc:	cbz	x0, 24d314 <sd_login_monitor_flush+0x20>
  24d300:	bl	24d2ec <MONITOR_TO_FD>
  24d304:	bl	254f80 <flush_fd@plt>
  24d308:	and	w0, w0, w0, asr #31
  24d30c:	ldp	x29, x30, [sp], #16
  24d310:	ret
  24d314:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24d318:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d31c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24d320:	add	x1, x1, #0x5ab
  24d324:	add	x2, x2, #0xc6e
  24d328:	add	x4, x4, #0x304
  24d32c:	mov	w0, #0x1                   	// #1
  24d330:	mov	w3, #0x3fd                 	// #1021
  24d334:	bl	253f10 <log_assert_failed_return_realm@plt>
  24d338:	mov	w0, #0xffffffea            	// #-22
  24d33c:	ldp	x29, x30, [sp], #16
  24d340:	ret

000000000024d344 <sd_login_monitor_get_fd>:
  24d344:	stp	x29, x30, [sp, #-16]!
  24d348:	mov	x29, sp
  24d34c:	cbz	x0, 24d35c <sd_login_monitor_get_fd+0x18>
  24d350:	bl	24d2ec <MONITOR_TO_FD>
  24d354:	ldp	x29, x30, [sp], #16
  24d358:	ret
  24d35c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24d360:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d364:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24d368:	add	x1, x1, #0x5ab
  24d36c:	add	x2, x2, #0xc6e
  24d370:	add	x4, x4, #0x61d
  24d374:	mov	w0, #0x1                   	// #1
  24d378:	mov	w3, #0x408                 	// #1032
  24d37c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24d380:	mov	w0, #0xffffffea            	// #-22
  24d384:	ldp	x29, x30, [sp], #16
  24d388:	ret

000000000024d38c <sd_login_monitor_get_events>:
  24d38c:	cbz	x0, 24d398 <sd_login_monitor_get_events+0xc>
  24d390:	mov	w0, #0x1                   	// #1
  24d394:	ret
  24d398:	stp	x29, x30, [sp, #-16]!
  24d39c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24d3a0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d3a4:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  24d3a8:	add	x1, x1, #0x5ab
  24d3ac:	add	x2, x2, #0xc6e
  24d3b0:	add	x4, x4, #0x2da
  24d3b4:	mov	w0, #0x1                   	// #1
  24d3b8:	mov	w3, #0x40f                 	// #1039
  24d3bc:	mov	x29, sp
  24d3c0:	bl	253f10 <log_assert_failed_return_realm@plt>
  24d3c4:	mov	w0, #0xffffffea            	// #-22
  24d3c8:	ldp	x29, x30, [sp], #16
  24d3cc:	ret

000000000024d3d0 <sd_login_monitor_get_timeout>:
  24d3d0:	stp	x29, x30, [sp, #-16]!
  24d3d4:	mov	x29, sp
  24d3d8:	cbz	x0, 24d3f4 <sd_login_monitor_get_timeout+0x24>
  24d3dc:	cbz	x1, 24d418 <sd_login_monitor_get_timeout+0x48>
  24d3e0:	mov	x8, #0xffffffffffffffff    	// #-1
  24d3e4:	mov	w0, wzr
  24d3e8:	str	x8, [x1]
  24d3ec:	ldp	x29, x30, [sp], #16
  24d3f0:	ret
  24d3f4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24d3f8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d3fc:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24d400:	add	x1, x1, #0x5ab
  24d404:	add	x2, x2, #0xc6e
  24d408:	add	x4, x4, #0xd24
  24d40c:	mov	w0, #0x1                   	// #1
  24d410:	mov	w3, #0x41a                 	// #1050
  24d414:	b	24d438 <sd_login_monitor_get_timeout+0x68>
  24d418:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24d41c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d420:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  24d424:	add	x1, x1, #0x5f3
  24d428:	add	x2, x2, #0xc6e
  24d42c:	add	x4, x4, #0xd24
  24d430:	mov	w0, #0x1                   	// #1
  24d434:	mov	w3, #0x41b                 	// #1051
  24d438:	bl	253f10 <log_assert_failed_return_realm@plt>
  24d43c:	mov	w0, #0xffffffea            	// #-22
  24d440:	ldp	x29, x30, [sp], #16
  24d444:	ret

000000000024d448 <net_get_name_persistent>:
  24d448:	sub	sp, sp, #0x50
  24d44c:	stp	x29, x30, [sp, #48]
  24d450:	stp	x20, x19, [sp, #64]
  24d454:	add	x29, sp, #0x30
  24d458:	cbz	x0, 24d4c8 <net_get_name_persistent+0x80>
  24d45c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  24d460:	mov	x8, sp
  24d464:	adrp	x9, 20d000 <worker_hash_op+0x2ad0>
  24d468:	adrp	x10, 20d000 <worker_hash_op+0x2ad0>
  24d46c:	adrp	x11, 217000 <worker_hash_op+0xcad0>
  24d470:	mov	x19, x0
  24d474:	add	x1, x1, #0x19
  24d478:	add	x9, x9, #0x776
  24d47c:	add	x10, x10, #0xe31
  24d480:	add	x11, x11, #0x888
  24d484:	add	x20, x8, #0x8
  24d488:	stp	x1, x9, [sp]
  24d48c:	stp	x10, x11, [sp, #16]
  24d490:	str	xzr, [sp, #32]
  24d494:	sub	x2, x29, #0x8
  24d498:	mov	x0, x19
  24d49c:	bl	253be0 <sd_device_get_property_value@plt>
  24d4a0:	tbz	w0, #31, 24d4b4 <net_get_name_persistent+0x6c>
  24d4a4:	ldr	x1, [x20], #8
  24d4a8:	cbnz	x1, 24d494 <net_get_name_persistent+0x4c>
  24d4ac:	mov	x0, xzr
  24d4b0:	b	24d4b8 <net_get_name_persistent+0x70>
  24d4b4:	ldur	x0, [x29, #-8]
  24d4b8:	ldp	x20, x19, [sp, #64]
  24d4bc:	ldp	x29, x30, [sp, #48]
  24d4c0:	add	sp, sp, #0x50
  24d4c4:	ret
  24d4c8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24d4cc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d4d0:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24d4d4:	add	x1, x1, #0x2ed
  24d4d8:	add	x2, x2, #0x6c4
  24d4dc:	add	x4, x4, #0xd6
  24d4e0:	mov	w3, #0x20                  	// #32
  24d4e4:	bl	253740 <log_assert_failed_realm@plt>

000000000024d4e8 <net_get_unique_predictable_data>:
  24d4e8:	stp	x29, x30, [sp, #-48]!
  24d4ec:	stp	x22, x21, [sp, #16]
  24d4f0:	stp	x20, x19, [sp, #32]
  24d4f4:	mov	x29, sp
  24d4f8:	sub	sp, sp, #0x20
  24d4fc:	cbz	x0, 24d6c8 <net_get_unique_predictable_data+0x1e0>
  24d500:	mov	x19, x2
  24d504:	mov	w21, w1
  24d508:	mov	x20, x0
  24d50c:	bl	24d448 <net_get_name_persistent>
  24d510:	stur	x0, [x29, #-8]
  24d514:	cbnz	x0, 24d528 <net_get_unique_predictable_data+0x40>
  24d518:	tbz	w21, #0, 24d528 <net_get_unique_predictable_data+0x40>
  24d51c:	sub	x1, x29, #0x8
  24d520:	mov	x0, x20
  24d524:	bl	253a40 <sd_device_get_sysname@plt>
  24d528:	ldur	x8, [x29, #-8]
  24d52c:	cbz	x8, 24d634 <net_get_unique_predictable_data+0x14c>
  24d530:	mov	w0, wzr
  24d534:	stur	xzr, [x29, #-16]
  24d538:	bl	2535b0 <log_get_max_level_realm@plt>
  24d53c:	cmp	w0, #0x7
  24d540:	b.ge	24d6a8 <net_get_unique_predictable_data+0x1c0>  // b.tcont
  24d544:	ldp	x6, x8, [x29, #-16]
  24d548:	adrp	x9, 211000 <worker_hash_op+0x6ad0>
  24d54c:	add	x9, x9, #0xb64
  24d550:	cmp	x6, #0x0
  24d554:	csel	x5, xzr, x9, eq  // eq = none
  24d558:	sub	sp, sp, #0x20
  24d55c:	str	x8, [sp, #16]
  24d560:	adrp	x8, 212000 <worker_hash_op+0x7ad0>
  24d564:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d568:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24d56c:	add	x8, x8, #0x7e6
  24d570:	add	x2, x2, #0x6c4
  24d574:	add	x4, x4, #0xb58
  24d578:	mov	w0, #0x7                   	// #7
  24d57c:	mov	w3, #0x3d                  	// #61
  24d580:	mov	w1, wzr
  24d584:	mov	x7, xzr
  24d588:	stp	xzr, x8, [sp]
  24d58c:	bl	2539f0 <log_object_internal@plt>
  24d590:	add	sp, sp, #0x20
  24d594:	ldur	x0, [x29, #-8]
  24d598:	bl	2539a0 <strlen@plt>
  24d59c:	add	x20, x0, #0x10
  24d5a0:	mov	x21, x0
  24d5a4:	mov	w0, #0x1                   	// #1
  24d5a8:	mov	x1, x20
  24d5ac:	bl	24d718 <size_multiply_overflow>
  24d5b0:	tbnz	w0, #0, 24d6e8 <net_get_unique_predictable_data+0x200>
  24d5b4:	cmp	x20, #0x400, lsl #12
  24d5b8:	b.hi	24d6f4 <net_get_unique_predictable_data+0x20c>  // b.pmore
  24d5bc:	add	x9, x20, #0xf
  24d5c0:	mov	x8, sp
  24d5c4:	and	x9, x9, #0xfffffffffffffff0
  24d5c8:	sub	x22, x8, x9
  24d5cc:	mov	sp, x22
  24d5d0:	mov	x0, x22
  24d5d4:	bl	254f90 <sd_id128_get_machine@plt>
  24d5d8:	tbnz	w0, #31, 24d694 <net_get_unique_predictable_data+0x1ac>
  24d5dc:	ldur	x1, [x29, #-8]
  24d5e0:	add	x0, x22, #0x10
  24d5e4:	mov	x2, x21
  24d5e8:	bl	2540c0 <memcpy@plt>
  24d5ec:	mov	x8, #0x1ed3                	// #7891
  24d5f0:	mov	x9, #0xaf9d                	// #44957
  24d5f4:	movk	x8, #0xfa48, lsl #16
  24d5f8:	movk	x9, #0xd7d5, lsl #16
  24d5fc:	movk	x8, #0xfe90, lsl #32
  24d600:	movk	x9, #0xb1a1, lsl #32
  24d604:	movk	x8, #0x4c4b, lsl #48
  24d608:	movk	x9, #0x8a2e, lsl #48
  24d60c:	sub	x2, x29, #0x20
  24d610:	mov	x0, x22
  24d614:	mov	x1, x20
  24d618:	stp	x8, x9, [x29, #-32]
  24d61c:	bl	254fa0 <siphash24@plt>
  24d620:	mov	x20, x0
  24d624:	bl	24d728 <htole64>
  24d628:	mov	w0, wzr
  24d62c:	str	x20, [x19]
  24d630:	b	24d694 <net_get_unique_predictable_data+0x1ac>
  24d634:	mov	w0, wzr
  24d638:	stur	xzr, [x29, #-16]
  24d63c:	bl	2535b0 <log_get_max_level_realm@plt>
  24d640:	cmp	w0, #0x7
  24d644:	b.ge	24d6b8 <net_get_unique_predictable_data+0x1d0>  // b.tcont
  24d648:	ldur	x6, [x29, #-16]
  24d64c:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24d650:	add	x8, x8, #0xb64
  24d654:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d658:	cmp	x6, #0x0
  24d65c:	csel	x5, xzr, x8, eq  // eq = none
  24d660:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  24d664:	add	x8, x8, #0x74a
  24d668:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24d66c:	add	x2, x2, #0x6c4
  24d670:	add	x4, x4, #0xb58
  24d674:	stp	xzr, x8, [sp, #-16]!
  24d678:	mov	w1, #0x3d                  	// #61
  24d67c:	mov	w0, #0x7                   	// #7
  24d680:	movk	w1, #0x4000, lsl #16
  24d684:	mov	w3, #0x3b                  	// #59
  24d688:	mov	x7, xzr
  24d68c:	bl	2539f0 <log_object_internal@plt>
  24d690:	add	sp, sp, #0x10
  24d694:	mov	sp, x29
  24d698:	ldp	x20, x19, [sp, #32]
  24d69c:	ldp	x22, x21, [sp, #16]
  24d6a0:	ldp	x29, x30, [sp], #48
  24d6a4:	ret
  24d6a8:	sub	x1, x29, #0x10
  24d6ac:	mov	x0, x20
  24d6b0:	bl	253a40 <sd_device_get_sysname@plt>
  24d6b4:	b	24d544 <net_get_unique_predictable_data+0x5c>
  24d6b8:	sub	x1, x29, #0x10
  24d6bc:	mov	x0, x20
  24d6c0:	bl	253a40 <sd_device_get_sysname@plt>
  24d6c4:	b	24d648 <net_get_unique_predictable_data+0x160>
  24d6c8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24d6cc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d6d0:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24d6d4:	add	x1, x1, #0x2ed
  24d6d8:	add	x2, x2, #0x6c4
  24d6dc:	add	x4, x4, #0xba1
  24d6e0:	mov	w3, #0x32                  	// #50
  24d6e4:	bl	253740 <log_assert_failed_realm@plt>
  24d6e8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24d6ec:	add	x1, x1, #0x6ee
  24d6f0:	b	24d6fc <net_get_unique_predictable_data+0x214>
  24d6f4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24d6f8:	add	x1, x1, #0xd1f
  24d6fc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24d700:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24d704:	add	x2, x2, #0x6c4
  24d708:	add	x4, x4, #0xba1
  24d70c:	mov	w3, #0x40                  	// #64
  24d710:	mov	w0, wzr
  24d714:	bl	253740 <log_assert_failed_realm@plt>

000000000024d718 <size_multiply_overflow>:
  24d718:	umulh	x8, x1, x0
  24d71c:	cmp	xzr, x8
  24d720:	cset	w0, ne  // ne = any
  24d724:	ret

000000000024d728 <htole64>:
  24d728:	ret

000000000024d72c <net_match_config>:
  24d72c:	sub	sp, sp, #0x80
  24d730:	stp	x29, x30, [sp, #32]
  24d734:	add	x29, sp, #0x20
  24d738:	stp	x28, x27, [sp, #48]
  24d73c:	stp	x22, x21, [sp, #96]
  24d740:	ldp	x22, x28, [x29, #104]
  24d744:	stp	x26, x25, [sp, #64]
  24d748:	stp	x24, x23, [sp, #80]
  24d74c:	stp	x20, x19, [sp, #112]
  24d750:	mov	x19, x7
  24d754:	mov	x20, x6
  24d758:	mov	x21, x5
  24d75c:	mov	x23, x4
  24d760:	mov	x24, x3
  24d764:	mov	x25, x2
  24d768:	mov	x26, x1
  24d76c:	mov	x27, x0
  24d770:	stur	xzr, [x29, #-8]
  24d774:	stp	xzr, xzr, [sp, #8]
  24d778:	cbz	x22, 24d7bc <net_match_config+0x90>
  24d77c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24d780:	add	x1, x1, #0xfc3
  24d784:	sub	x2, x29, #0x8
  24d788:	mov	x0, x22
  24d78c:	bl	253be0 <sd_device_get_property_value@plt>
  24d790:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24d794:	add	x1, x1, #0xfb5
  24d798:	add	x2, sp, #0x10
  24d79c:	mov	x0, x22
  24d7a0:	bl	253be0 <sd_device_get_property_value@plt>
  24d7a4:	add	x1, sp, #0x8
  24d7a8:	mov	x0, x22
  24d7ac:	bl	253d50 <sd_device_get_devtype@plt>
  24d7b0:	ldr	x8, [x29, #120]
  24d7b4:	cbz	x8, 24d7d8 <net_match_config+0xac>
  24d7b8:	cbz	x28, 24d7e8 <net_match_config+0xbc>
  24d7bc:	cbz	x27, 24d81c <net_match_config+0xf0>
  24d7c0:	cbz	x28, 24d8b4 <net_match_config+0x188>
  24d7c4:	mov	x0, x27
  24d7c8:	mov	x1, x28
  24d7cc:	bl	24d8d8 <set_contains>
  24d7d0:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d7d4:	b	24d81c <net_match_config+0xf0>
  24d7d8:	add	x1, x29, #0x78
  24d7dc:	mov	x0, x22
  24d7e0:	bl	253a40 <sd_device_get_sysname@plt>
  24d7e4:	cbnz	x28, 24d7bc <net_match_config+0x90>
  24d7e8:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24d7ec:	add	x1, x1, #0x4e0
  24d7f0:	mov	x2, sp
  24d7f4:	mov	x0, x22
  24d7f8:	bl	254070 <sd_device_get_sysattr_value@plt>
  24d7fc:	tbnz	w0, #31, 24d814 <net_match_config+0xe8>
  24d800:	ldr	x0, [sp]
  24d804:	bl	254fb0 <ether_aton@plt>
  24d808:	mov	x28, x0
  24d80c:	cbnz	x27, 24d7c0 <net_match_config+0x94>
  24d810:	b	24d81c <net_match_config+0xf0>
  24d814:	mov	x28, xzr
  24d818:	cbnz	x27, 24d7c0 <net_match_config+0x94>
  24d81c:	ldur	x1, [x29, #-8]
  24d820:	mov	x0, x26
  24d824:	bl	24d8f0 <net_condition_test_strv>
  24d828:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d82c:	ldr	x1, [sp, #16]
  24d830:	mov	x0, x25
  24d834:	bl	24d8f0 <net_condition_test_strv>
  24d838:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d83c:	ldr	x1, [sp, #8]
  24d840:	mov	x0, x24
  24d844:	bl	24d8f0 <net_condition_test_strv>
  24d848:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d84c:	ldr	x1, [x29, #120]
  24d850:	mov	x0, x23
  24d854:	bl	24d8f0 <net_condition_test_strv>
  24d858:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d85c:	mov	x0, x21
  24d860:	mov	x1, x22
  24d864:	bl	24d9cc <net_condition_test_property>
  24d868:	cbz	w0, 24d8b8 <net_match_config+0x18c>
  24d86c:	ldr	w0, [x29, #128]
  24d870:	bl	24db00 <wifi_iftype_to_string>
  24d874:	mov	x1, x0
  24d878:	mov	x0, x20
  24d87c:	bl	24d8f0 <net_condition_test_strv>
  24d880:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d884:	ldr	x1, [x29, #136]
  24d888:	mov	x0, x19
  24d88c:	bl	24d8f0 <net_condition_test_strv>
  24d890:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d894:	ldr	x0, [x29, #96]
  24d898:	cbz	x0, 24d8ac <net_match_config+0x180>
  24d89c:	ldr	x1, [x29, #144]
  24d8a0:	cbz	x1, 24d8b4 <net_match_config+0x188>
  24d8a4:	bl	24d8d8 <set_contains>
  24d8a8:	tbz	w0, #0, 24d8b4 <net_match_config+0x188>
  24d8ac:	mov	w0, #0x1                   	// #1
  24d8b0:	b	24d8b8 <net_match_config+0x18c>
  24d8b4:	mov	w0, wzr
  24d8b8:	ldp	x20, x19, [sp, #112]
  24d8bc:	ldp	x22, x21, [sp, #96]
  24d8c0:	ldp	x24, x23, [sp, #80]
  24d8c4:	ldp	x26, x25, [sp, #64]
  24d8c8:	ldp	x28, x27, [sp, #48]
  24d8cc:	ldp	x29, x30, [sp, #32]
  24d8d0:	add	sp, sp, #0x80
  24d8d4:	ret

000000000024d8d8 <set_contains>:
  24d8d8:	stp	x29, x30, [sp, #-16]!
  24d8dc:	mov	x29, sp
  24d8e0:	bl	254fc0 <internal_hashmap_contains@plt>
  24d8e4:	and	w0, w0, #0x1
  24d8e8:	ldp	x29, x30, [sp], #16
  24d8ec:	ret

000000000024d8f0 <net_condition_test_strv>:
  24d8f0:	stp	x29, x30, [sp, #-64]!
  24d8f4:	stp	x24, x23, [sp, #16]
  24d8f8:	stp	x22, x21, [sp, #32]
  24d8fc:	stp	x20, x19, [sp, #48]
  24d900:	mov	x29, sp
  24d904:	mov	x19, x1
  24d908:	mov	x20, x0
  24d90c:	bl	24f770 <strv_isempty>
  24d910:	tbz	w0, #0, 24d91c <net_condition_test_strv+0x2c>
  24d914:	mov	w8, #0x1                   	// #1
  24d918:	b	24d9ac <net_condition_test_strv+0xbc>
  24d91c:	cbz	x20, 24d99c <net_condition_test_strv+0xac>
  24d920:	ldr	x8, [x20]
  24d924:	cbz	x8, 24d99c <net_condition_test_strv+0xac>
  24d928:	mov	w22, wzr
  24d92c:	mov	w21, wzr
  24d930:	add	x20, x20, #0x8
  24d934:	ldrb	w24, [x8]
  24d938:	cmp	w24, #0x21
  24d93c:	cset	w23, ne  // ne = any
  24d940:	cbz	x19, 24d97c <net_condition_test_strv+0x8c>
  24d944:	cmp	w24, #0x21
  24d948:	cinc	x0, x8, eq  // eq = none
  24d94c:	mov	x1, x19
  24d950:	mov	w2, wzr
  24d954:	bl	254680 <fnmatch@plt>
  24d958:	cmp	w0, #0x0
  24d95c:	cset	w8, eq  // eq = none
  24d960:	orr	w8, w22, w8
  24d964:	cbnz	w0, 24d980 <net_condition_test_strv+0x90>
  24d968:	cmp	w24, #0x21
  24d96c:	mov	w9, wzr
  24d970:	b.ne	24d980 <net_condition_test_strv+0x90>  // b.any
  24d974:	tbnz	w9, #0, 24d98c <net_condition_test_strv+0x9c>
  24d978:	b	24d9c4 <net_condition_test_strv+0xd4>
  24d97c:	mov	w8, w22
  24d980:	mov	w9, #0x1                   	// #1
  24d984:	mov	w22, w8
  24d988:	tbz	w9, #0, 24d9c4 <net_condition_test_strv+0xd4>
  24d98c:	ldr	x8, [x20], #8
  24d990:	orr	w21, w21, w23
  24d994:	cbnz	x8, 24d934 <net_condition_test_strv+0x44>
  24d998:	b	24d9a4 <net_condition_test_strv+0xb4>
  24d99c:	mov	w22, wzr
  24d9a0:	mov	w21, wzr
  24d9a4:	eor	w8, w21, #0x1
  24d9a8:	orr	w8, w22, w8
  24d9ac:	ldp	x20, x19, [sp, #48]
  24d9b0:	ldp	x22, x21, [sp, #32]
  24d9b4:	ldp	x24, x23, [sp, #16]
  24d9b8:	and	w0, w8, #0x1
  24d9bc:	ldp	x29, x30, [sp], #64
  24d9c0:	ret
  24d9c4:	mov	w8, wzr
  24d9c8:	b	24d9ac <net_condition_test_strv+0xbc>

000000000024d9cc <net_condition_test_property>:
  24d9cc:	sub	sp, sp, #0x60
  24d9d0:	stp	x29, x30, [sp, #16]
  24d9d4:	str	x25, [sp, #32]
  24d9d8:	stp	x24, x23, [sp, #48]
  24d9dc:	stp	x22, x21, [sp, #64]
  24d9e0:	stp	x20, x19, [sp, #80]
  24d9e4:	add	x29, sp, #0x10
  24d9e8:	mov	x19, x1
  24d9ec:	mov	x21, x0
  24d9f0:	bl	24f770 <strv_isempty>
  24d9f4:	mov	w20, #0x1                   	// #1
  24d9f8:	tbnz	w0, #0, 24dae0 <net_condition_test_property+0x114>
  24d9fc:	cbz	x21, 24dae0 <net_condition_test_property+0x114>
  24da00:	ldr	x8, [x21]
  24da04:	cbz	x8, 24dadc <net_condition_test_property+0x110>
  24da08:	add	x23, x21, #0x8
  24da0c:	str	xzr, [x29, #24]
  24da10:	ldur	x25, [x23, #-8]
  24da14:	mov	w1, #0x3d                  	// #61
  24da18:	mov	x8, x25
  24da1c:	ldrb	w24, [x8], #1
  24da20:	cmp	w24, #0x21
  24da24:	csel	x22, x25, x8, ne  // ne = any
  24da28:	mov	x0, x22
  24da2c:	bl	253a60 <strchr@plt>
  24da30:	mov	x21, x0
  24da34:	cbz	x0, 24da9c <net_condition_test_property+0xd0>
  24da38:	cmp	w24, #0x21
  24da3c:	cset	w8, eq  // eq = none
  24da40:	sub	x9, x21, x25
  24da44:	sub	x1, x9, x8
  24da48:	mov	x0, x22
  24da4c:	bl	253a70 <strndup@plt>
  24da50:	str	x0, [x29, #24]
  24da54:	cbz	x0, 24dac0 <net_condition_test_property+0xf4>
  24da58:	cbz	x19, 24daa4 <net_condition_test_property+0xd8>
  24da5c:	mov	x1, x0
  24da60:	add	x2, sp, #0x8
  24da64:	mov	x0, x19
  24da68:	bl	253be0 <sd_device_get_property_value@plt>
  24da6c:	tbnz	w0, #31, 24daa4 <net_condition_test_property+0xd8>
  24da70:	ldr	x1, [sp, #8]
  24da74:	add	x0, x21, #0x1
  24da78:	mov	w2, wzr
  24da7c:	bl	254680 <fnmatch@plt>
  24da80:	cmp	w0, #0x0
  24da84:	cset	w8, eq  // eq = none
  24da88:	cmp	w24, #0x21
  24da8c:	b.eq	24dab0 <net_condition_test_property+0xe4>  // b.none
  24da90:	cbz	w8, 24dab4 <net_condition_test_property+0xe8>
  24da94:	mov	w21, #0x1                   	// #1
  24da98:	b	24dac8 <net_condition_test_property+0xfc>
  24da9c:	mov	w20, #0xffffffea            	// #-22
  24daa0:	b	24dac8 <net_condition_test_property+0xfc>
  24daa4:	mov	w8, wzr
  24daa8:	cmp	w24, #0x21
  24daac:	b.ne	24da90 <net_condition_test_property+0xc4>  // b.any
  24dab0:	tbz	w8, #0, 24da94 <net_condition_test_property+0xc8>
  24dab4:	mov	w21, wzr
  24dab8:	mov	w20, wzr
  24dabc:	b	24dac8 <net_condition_test_property+0xfc>
  24dac0:	mov	w21, wzr
  24dac4:	mov	w20, #0xfffffff4            	// #-12
  24dac8:	add	x0, x29, #0x18
  24dacc:	bl	24deec <freep>
  24dad0:	tbz	w21, #0, 24dae0 <net_condition_test_property+0x114>
  24dad4:	ldr	x8, [x23], #8
  24dad8:	cbnz	x8, 24da0c <net_condition_test_property+0x40>
  24dadc:	mov	w20, #0x1                   	// #1
  24dae0:	mov	w0, w20
  24dae4:	ldp	x20, x19, [sp, #80]
  24dae8:	ldp	x22, x21, [sp, #64]
  24daec:	ldp	x24, x23, [sp, #48]
  24daf0:	ldr	x25, [sp, #32]
  24daf4:	ldp	x29, x30, [sp, #16]
  24daf8:	add	sp, sp, #0x60
  24dafc:	ret

000000000024db00 <wifi_iftype_to_string>:
  24db00:	cmp	w0, #0xc
  24db04:	b.ls	24db10 <wifi_iftype_to_string+0x10>  // b.plast
  24db08:	mov	x0, xzr
  24db0c:	ret
  24db10:	adrp	x8, 27d000 <builtin_blkid.options+0x50>
  24db14:	add	x8, x8, #0x48
  24db18:	ldr	x0, [x8, w0, uxtw #3]
  24db1c:	ret

000000000024db20 <config_parse_net_condition>:
  24db20:	stp	x29, x30, [sp, #-48]!
  24db24:	str	x21, [sp, #16]
  24db28:	stp	x20, x19, [sp, #32]
  24db2c:	mov	x29, sp
  24db30:	cbz	x1, 24dbf0 <config_parse_net_condition+0xd0>
  24db34:	cbz	x5, 24dc14 <config_parse_net_condition+0xf4>
  24db38:	mov	x20, x7
  24db3c:	cbz	x7, 24dc38 <config_parse_net_condition+0x118>
  24db40:	ldr	x21, [x29, #48]
  24db44:	cbz	x21, 24dc5c <config_parse_net_condition+0x13c>
  24db48:	mov	x0, x20
  24db4c:	mov	w19, w6
  24db50:	bl	24dc80 <isempty>
  24db54:	tbz	w0, #0, 24db74 <config_parse_net_condition+0x54>
  24db58:	ldr	x0, [x21]
  24db5c:	mov	w1, w19
  24db60:	bl	254a90 <condition_free_list_type@plt>
  24db64:	mov	x8, x0
  24db68:	mov	w0, wzr
  24db6c:	str	x8, [x21]
  24db70:	b	24dbe0 <config_parse_net_condition+0xc0>
  24db74:	mov	x8, x20
  24db78:	ldrb	w9, [x8], #1
  24db7c:	mov	w0, w19
  24db80:	mov	w2, wzr
  24db84:	cmp	w9, #0x21
  24db88:	cset	w3, eq  // eq = none
  24db8c:	csel	x1, x8, x20, eq  // eq = none
  24db90:	bl	254fd0 <condition_new@plt>
  24db94:	cbz	x0, 24dbc8 <config_parse_net_condition+0xa8>
  24db98:	mov	x20, x0
  24db9c:	ldr	x0, [x21]
  24dba0:	mov	w1, w19
  24dba4:	bl	254a90 <condition_free_list_type@plt>
  24dba8:	str	x0, [x21]
  24dbac:	str	x0, [x20, #16]
  24dbb0:	cbz	x0, 24dbb8 <config_parse_net_condition+0x98>
  24dbb4:	str	x20, [x0, #24]
  24dbb8:	mov	w0, wzr
  24dbbc:	str	xzr, [x20, #24]
  24dbc0:	str	x20, [x21]
  24dbc4:	b	24dbe0 <config_parse_net_condition+0xc0>
  24dbc8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24dbcc:	adrp	x3, 215000 <worker_hash_op+0xaad0>
  24dbd0:	add	x1, x1, #0x6c4
  24dbd4:	add	x3, x3, #0xd65
  24dbd8:	mov	w2, #0xf8                  	// #248
  24dbdc:	bl	2537c0 <log_oom_internal@plt>
  24dbe0:	ldp	x20, x19, [sp, #32]
  24dbe4:	ldr	x21, [sp, #16]
  24dbe8:	ldp	x29, x30, [sp], #48
  24dbec:	ret
  24dbf0:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24dbf4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24dbf8:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24dbfc:	add	x1, x1, #0x4b9
  24dc00:	add	x2, x2, #0x6c4
  24dc04:	add	x4, x4, #0xcd5
  24dc08:	mov	w3, #0xe8                  	// #232
  24dc0c:	mov	w0, wzr
  24dc10:	bl	253740 <log_assert_failed_realm@plt>
  24dc14:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24dc18:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24dc1c:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24dc20:	add	x1, x1, #0x510
  24dc24:	add	x2, x2, #0x6c4
  24dc28:	add	x4, x4, #0xcd5
  24dc2c:	mov	w3, #0xe9                  	// #233
  24dc30:	mov	w0, wzr
  24dc34:	bl	253740 <log_assert_failed_realm@plt>
  24dc38:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24dc3c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24dc40:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24dc44:	add	x1, x1, #0x3a8
  24dc48:	add	x2, x2, #0x6c4
  24dc4c:	add	x4, x4, #0xcd5
  24dc50:	mov	w3, #0xea                  	// #234
  24dc54:	mov	w0, wzr
  24dc58:	bl	253740 <log_assert_failed_realm@plt>
  24dc5c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24dc60:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24dc64:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24dc68:	add	x1, x1, #0x1ea
  24dc6c:	add	x2, x2, #0x6c4
  24dc70:	add	x4, x4, #0xcd5
  24dc74:	mov	w3, #0xeb                  	// #235
  24dc78:	mov	w0, wzr
  24dc7c:	bl	253740 <log_assert_failed_realm@plt>

000000000024dc80 <isempty>:
  24dc80:	cbz	x0, 24dc94 <isempty+0x14>
  24dc84:	ldrb	w8, [x0]
  24dc88:	cmp	w8, #0x0
  24dc8c:	cset	w0, eq  // eq = none
  24dc90:	ret
  24dc94:	mov	w0, #0x1                   	// #1
  24dc98:	ret

000000000024dc9c <config_parse_match_strv>:
  24dc9c:	sub	sp, sp, #0x90
  24dca0:	stp	x29, x30, [sp, #48]
  24dca4:	add	x29, sp, #0x30
  24dca8:	stp	x28, x27, [sp, #64]
  24dcac:	stp	x26, x25, [sp, #80]
  24dcb0:	stp	x24, x23, [sp, #96]
  24dcb4:	stp	x22, x21, [sp, #112]
  24dcb8:	stp	x20, x19, [sp, #128]
  24dcbc:	str	w2, [sp, #20]
  24dcc0:	stur	x7, [x29, #-8]
  24dcc4:	cbz	x1, 24de5c <config_parse_match_strv+0x1c0>
  24dcc8:	cbz	x5, 24de80 <config_parse_match_strv+0x1e4>
  24dccc:	mov	x19, x7
  24dcd0:	cbz	x7, 24dea4 <config_parse_match_strv+0x208>
  24dcd4:	ldr	x23, [x29, #96]
  24dcd8:	cbz	x23, 24dec8 <config_parse_match_strv+0x22c>
  24dcdc:	mov	x22, x0
  24dce0:	mov	x0, x19
  24dce4:	mov	x21, x1
  24dce8:	bl	24dc80 <isempty>
  24dcec:	tbz	w0, #0, 24dd24 <config_parse_match_strv+0x88>
  24dcf0:	ldr	x0, [x23]
  24dcf4:	bl	254150 <strv_free@plt>
  24dcf8:	mov	w27, wzr
  24dcfc:	str	x0, [x23]
  24dd00:	mov	w0, w27
  24dd04:	ldp	x20, x19, [sp, #128]
  24dd08:	ldp	x22, x21, [sp, #112]
  24dd0c:	ldp	x24, x23, [sp, #96]
  24dd10:	ldp	x26, x25, [sp, #80]
  24dd14:	ldp	x28, x27, [sp, #64]
  24dd18:	ldp	x29, x30, [sp, #48]
  24dd1c:	add	sp, sp, #0x90
  24dd20:	ret
  24dd24:	mov	x8, x19
  24dd28:	ldrb	w28, [x8], #1
  24dd2c:	adrp	x24, 20e000 <worker_hash_op+0x3ad0>
  24dd30:	adrp	x25, 212000 <worker_hash_op+0x7ad0>
  24dd34:	add	x24, x24, #0x6c4
  24dd38:	cmp	w28, #0x21
  24dd3c:	add	x25, x25, #0x14b
  24dd40:	csel	x8, x19, x8, ne  // ne = any
  24dd44:	stur	x8, [x29, #-8]
  24dd48:	b	24dd80 <config_parse_match_strv+0xe4>
  24dd4c:	mov	w2, #0x126                 	// #294
  24dd50:	mov	w0, wzr
  24dd54:	mov	x1, x24
  24dd58:	mov	x3, x25
  24dd5c:	bl	2537c0 <log_oom_internal@plt>
  24dd60:	mov	w27, w0
  24dd64:	mov	w20, wzr
  24dd68:	add	x0, sp, #0x18
  24dd6c:	bl	24deec <freep>
  24dd70:	sub	x0, x29, #0x10
  24dd74:	bl	24deec <freep>
  24dd78:	mov	w26, w27
  24dd7c:	tbz	w20, #0, 24dd00 <config_parse_match_strv+0x64>
  24dd80:	sub	x0, x29, #0x8
  24dd84:	sub	x1, x29, #0x10
  24dd88:	mov	w3, #0x28                  	// #40
  24dd8c:	mov	x2, xzr
  24dd90:	stur	xzr, [x29, #-16]
  24dd94:	str	xzr, [sp, #24]
  24dd98:	bl	254fe0 <extract_first_word@plt>
  24dd9c:	mov	w27, w0
  24dda0:	cbz	w0, 24dd64 <config_parse_match_strv+0xc8>
  24dda4:	cmn	w27, #0xc
  24dda8:	b.eq	24dd4c <config_parse_match_strv+0xb0>  // b.none
  24ddac:	tbnz	w27, #31, 24dddc <config_parse_match_strv+0x140>
  24ddb0:	cmp	w28, #0x21
  24ddb4:	b.ne	24de28 <config_parse_match_strv+0x18c>  // b.any
  24ddb8:	ldur	x1, [x29, #-16]
  24ddbc:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  24ddc0:	add	x0, x0, #0x600
  24ddc4:	mov	x2, xzr
  24ddc8:	bl	2547b0 <strjoin_real@plt>
  24ddcc:	str	x0, [sp, #24]
  24ddd0:	cbnz	x0, 24de34 <config_parse_match_strv+0x198>
  24ddd4:	mov	w2, #0x12f                 	// #303
  24ddd8:	b	24dd54 <config_parse_match_strv+0xb8>
  24dddc:	mov	w0, wzr
  24dde0:	bl	2535b0 <log_get_max_level_realm@plt>
  24dde4:	cmp	w0, #0x3
  24dde8:	b.lt	24de1c <config_parse_match_strv+0x180>  // b.tstop
  24ddec:	ldr	w3, [sp, #20]
  24ddf0:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  24ddf4:	mov	w1, #0x3                   	// #3
  24ddf8:	mov	w6, #0x128                 	// #296
  24ddfc:	add	x8, x8, #0xd41
  24de00:	mov	x0, x22
  24de04:	mov	x2, x21
  24de08:	mov	w4, w27
  24de0c:	mov	x5, x24
  24de10:	mov	x7, x25
  24de14:	stp	x8, x19, [sp]
  24de18:	bl	254a60 <log_syntax_internal@plt>
  24de1c:	mov	w20, wzr
  24de20:	mov	w27, wzr
  24de24:	b	24dd68 <config_parse_match_strv+0xcc>
  24de28:	ldur	x8, [x29, #-16]
  24de2c:	stur	xzr, [x29, #-16]
  24de30:	str	x8, [sp, #24]
  24de34:	ldr	x1, [sp, #24]
  24de38:	mov	x0, x23
  24de3c:	str	xzr, [sp, #24]
  24de40:	bl	254ff0 <strv_consume@plt>
  24de44:	tbnz	w0, #31, 24de54 <config_parse_match_strv+0x1b8>
  24de48:	mov	w20, #0x1                   	// #1
  24de4c:	mov	w27, w26
  24de50:	b	24dd68 <config_parse_match_strv+0xcc>
  24de54:	mov	w2, #0x135                 	// #309
  24de58:	b	24dd50 <config_parse_match_strv+0xb4>
  24de5c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24de60:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24de64:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24de68:	add	x1, x1, #0x4b9
  24de6c:	add	x2, x2, #0x6c4
  24de70:	add	x4, x4, #0x47f
  24de74:	mov	w3, #0x112                 	// #274
  24de78:	mov	w0, wzr
  24de7c:	bl	253740 <log_assert_failed_realm@plt>
  24de80:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24de84:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24de88:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24de8c:	add	x1, x1, #0x510
  24de90:	add	x2, x2, #0x6c4
  24de94:	add	x4, x4, #0x47f
  24de98:	mov	w3, #0x113                 	// #275
  24de9c:	mov	w0, wzr
  24dea0:	bl	253740 <log_assert_failed_realm@plt>
  24dea4:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24dea8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24deac:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24deb0:	add	x1, x1, #0x3a8
  24deb4:	add	x2, x2, #0x6c4
  24deb8:	add	x4, x4, #0x47f
  24debc:	mov	w3, #0x114                 	// #276
  24dec0:	mov	w0, wzr
  24dec4:	bl	253740 <log_assert_failed_realm@plt>
  24dec8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24decc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ded0:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24ded4:	add	x1, x1, #0x1ea
  24ded8:	add	x2, x2, #0x6c4
  24dedc:	add	x4, x4, #0x47f
  24dee0:	mov	w3, #0x115                 	// #277
  24dee4:	mov	w0, wzr
  24dee8:	bl	253740 <log_assert_failed_realm@plt>

000000000024deec <freep>:
  24deec:	stp	x29, x30, [sp, #-16]!
  24def0:	ldr	x0, [x0]
  24def4:	mov	x29, sp
  24def8:	bl	2536e0 <free@plt>
  24defc:	ldp	x29, x30, [sp], #16
  24df00:	ret

000000000024df04 <config_parse_match_ifnames>:
  24df04:	sub	sp, sp, #0x90
  24df08:	stp	x29, x30, [sp, #48]
  24df0c:	add	x29, sp, #0x30
  24df10:	stp	x28, x27, [sp, #64]
  24df14:	stp	x26, x25, [sp, #80]
  24df18:	stp	x24, x23, [sp, #96]
  24df1c:	stp	x22, x21, [sp, #112]
  24df20:	stp	x20, x19, [sp, #128]
  24df24:	stur	x7, [x29, #-8]
  24df28:	cbz	x1, 24e118 <config_parse_match_ifnames+0x214>
  24df2c:	cbz	x5, 24e13c <config_parse_match_ifnames+0x238>
  24df30:	mov	x19, x7
  24df34:	cbz	x7, 24e160 <config_parse_match_ifnames+0x25c>
  24df38:	ldr	x23, [x29, #96]
  24df3c:	cbz	x23, 24e184 <config_parse_match_ifnames+0x280>
  24df40:	mov	x8, x19
  24df44:	ldrb	w28, [x8], #1
  24df48:	adrp	x24, 20e000 <worker_hash_op+0x3ad0>
  24df4c:	adrp	x25, 20e000 <worker_hash_op+0x3ad0>
  24df50:	mov	w20, w2
  24df54:	cmp	w28, #0x21
  24df58:	mov	x21, x1
  24df5c:	mov	x22, x0
  24df60:	add	x24, x24, #0x6c4
  24df64:	add	x25, x25, #0x71c
  24df68:	csel	x8, x19, x8, ne  // ne = any
  24df6c:	stur	x8, [x29, #-8]
  24df70:	sub	x0, x29, #0x8
  24df74:	sub	x1, x29, #0x10
  24df78:	mov	x2, xzr
  24df7c:	mov	w3, wzr
  24df80:	stur	xzr, [x29, #-16]
  24df84:	str	xzr, [sp, #24]
  24df88:	bl	254fe0 <extract_first_word@plt>
  24df8c:	cbz	w0, 24dfb8 <config_parse_match_ifnames+0xb4>
  24df90:	cmn	w0, #0xc
  24df94:	b.ne	24dfe0 <config_parse_match_ifnames+0xdc>  // b.any
  24df98:	mov	w2, #0x159                 	// #345
  24df9c:	mov	w0, wzr
  24dfa0:	mov	x1, x24
  24dfa4:	mov	x3, x25
  24dfa8:	bl	2537c0 <log_oom_internal@plt>
  24dfac:	mov	w27, w0
  24dfb0:	mov	w26, #0x1                   	// #1
  24dfb4:	b	24dfc0 <config_parse_match_ifnames+0xbc>
  24dfb8:	mov	w26, #0x1                   	// #1
  24dfbc:	mov	w27, w0
  24dfc0:	add	x0, sp, #0x18
  24dfc4:	bl	24deec <freep>
  24dfc8:	sub	x0, x29, #0x10
  24dfcc:	bl	24deec <freep>
  24dfd0:	cbz	w26, 24df70 <config_parse_match_ifnames+0x6c>
  24dfd4:	cmp	w26, #0xb
  24dfd8:	b.eq	24df70 <config_parse_match_ifnames+0x6c>  // b.none
  24dfdc:	b	24e0f4 <config_parse_match_ifnames+0x1f0>
  24dfe0:	tbnz	w0, #31, 24e01c <config_parse_match_ifnames+0x118>
  24dfe4:	ldur	x0, [x29, #-16]
  24dfe8:	bl	255000 <ifname_valid@plt>
  24dfec:	tbz	w0, #0, 24e064 <config_parse_match_ifnames+0x160>
  24dff0:	cmp	w28, #0x21
  24dff4:	b.ne	24e0bc <config_parse_match_ifnames+0x1b8>  // b.any
  24dff8:	ldur	x1, [x29, #-16]
  24dffc:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  24e000:	add	x0, x0, #0x600
  24e004:	mov	x2, xzr
  24e008:	bl	2547b0 <strjoin_real@plt>
  24e00c:	str	x0, [sp, #24]
  24e010:	cbnz	x0, 24e0c8 <config_parse_match_ifnames+0x1c4>
  24e014:	mov	w2, #0x169                 	// #361
  24e018:	b	24dfa0 <config_parse_match_ifnames+0x9c>
  24e01c:	mov	w0, wzr
  24e020:	bl	2535b0 <log_get_max_level_realm@plt>
  24e024:	cmp	w0, #0x3
  24e028:	b.lt	24e0b4 <config_parse_match_ifnames+0x1b0>  // b.tstop
  24e02c:	adrp	x8, 20a000 <parse_argv.options-0x3f0>
  24e030:	mov	w1, #0x3                   	// #3
  24e034:	mov	w6, #0x15c                 	// #348
  24e038:	add	x8, x8, #0xf62
  24e03c:	mov	x0, x22
  24e040:	mov	x2, x21
  24e044:	mov	w3, w20
  24e048:	mov	w4, wzr
  24e04c:	mov	x5, x24
  24e050:	mov	x7, x25
  24e054:	stp	x8, x19, [sp]
  24e058:	bl	254a60 <log_syntax_internal@plt>
  24e05c:	mov	w27, wzr
  24e060:	b	24dfb0 <config_parse_match_ifnames+0xac>
  24e064:	mov	w0, wzr
  24e068:	bl	2535b0 <log_get_max_level_realm@plt>
  24e06c:	cmp	w0, #0x3
  24e070:	b.lt	24e0e4 <config_parse_match_ifnames+0x1e0>  // b.tstop
  24e074:	ldur	x8, [x29, #-16]
  24e078:	mov	w1, #0x3                   	// #3
  24e07c:	mov	w6, #0x162                 	// #354
  24e080:	mov	x0, x22
  24e084:	str	x8, [sp, #8]
  24e088:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  24e08c:	add	x8, x8, #0x4a4
  24e090:	mov	x2, x21
  24e094:	mov	w3, w20
  24e098:	mov	w4, wzr
  24e09c:	mov	x5, x24
  24e0a0:	mov	x7, x25
  24e0a4:	str	x8, [sp]
  24e0a8:	bl	254a60 <log_syntax_internal@plt>
  24e0ac:	mov	w26, #0xb                   	// #11
  24e0b0:	b	24dfc0 <config_parse_match_ifnames+0xbc>
  24e0b4:	mov	w27, wzr
  24e0b8:	b	24dfb0 <config_parse_match_ifnames+0xac>
  24e0bc:	ldur	x8, [x29, #-16]
  24e0c0:	stur	xzr, [x29, #-16]
  24e0c4:	str	x8, [sp, #24]
  24e0c8:	ldr	x1, [sp, #24]
  24e0cc:	mov	x0, x23
  24e0d0:	str	xzr, [sp, #24]
  24e0d4:	bl	254ff0 <strv_consume@plt>
  24e0d8:	tbnz	w0, #31, 24e0ec <config_parse_match_ifnames+0x1e8>
  24e0dc:	mov	w26, wzr
  24e0e0:	b	24dfc0 <config_parse_match_ifnames+0xbc>
  24e0e4:	mov	w26, #0xb                   	// #11
  24e0e8:	b	24dfc0 <config_parse_match_ifnames+0xbc>
  24e0ec:	mov	w2, #0x16f                 	// #367
  24e0f0:	b	24df9c <config_parse_match_ifnames+0x98>
  24e0f4:	mov	w0, w27
  24e0f8:	ldp	x20, x19, [sp, #128]
  24e0fc:	ldp	x22, x21, [sp, #112]
  24e100:	ldp	x24, x23, [sp, #96]
  24e104:	ldp	x26, x25, [sp, #80]
  24e108:	ldp	x28, x27, [sp, #64]
  24e10c:	ldp	x29, x30, [sp, #48]
  24e110:	add	sp, sp, #0x90
  24e114:	ret
  24e118:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e11c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e120:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24e124:	add	x1, x1, #0x4b9
  24e128:	add	x2, x2, #0x6c4
  24e12c:	add	x4, x4, #0xf78
  24e130:	mov	w3, #0x14a                 	// #330
  24e134:	mov	w0, wzr
  24e138:	bl	253740 <log_assert_failed_realm@plt>
  24e13c:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24e140:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e144:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24e148:	add	x1, x1, #0x510
  24e14c:	add	x2, x2, #0x6c4
  24e150:	add	x4, x4, #0xf78
  24e154:	mov	w3, #0x14b                 	// #331
  24e158:	mov	w0, wzr
  24e15c:	bl	253740 <log_assert_failed_realm@plt>
  24e160:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24e164:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e168:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24e16c:	add	x1, x1, #0x3a8
  24e170:	add	x2, x2, #0x6c4
  24e174:	add	x4, x4, #0xf78
  24e178:	mov	w3, #0x14c                 	// #332
  24e17c:	mov	w0, wzr
  24e180:	bl	253740 <log_assert_failed_realm@plt>
  24e184:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e188:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e18c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24e190:	add	x1, x1, #0x1ea
  24e194:	add	x2, x2, #0x6c4
  24e198:	add	x4, x4, #0xf78
  24e19c:	mov	w3, #0x14d                 	// #333
  24e1a0:	mov	w0, wzr
  24e1a4:	bl	253740 <log_assert_failed_realm@plt>

000000000024e1a8 <config_parse_match_property>:
  24e1a8:	sub	sp, sp, #0x90
  24e1ac:	stp	x29, x30, [sp, #48]
  24e1b0:	add	x29, sp, #0x30
  24e1b4:	stp	x28, x27, [sp, #64]
  24e1b8:	stp	x26, x25, [sp, #80]
  24e1bc:	stp	x24, x23, [sp, #96]
  24e1c0:	stp	x22, x21, [sp, #112]
  24e1c4:	stp	x20, x19, [sp, #128]
  24e1c8:	stur	x7, [x29, #-8]
  24e1cc:	cbz	x1, 24e3bc <config_parse_match_property+0x214>
  24e1d0:	cbz	x5, 24e3e0 <config_parse_match_property+0x238>
  24e1d4:	mov	x19, x7
  24e1d8:	cbz	x7, 24e404 <config_parse_match_property+0x25c>
  24e1dc:	ldr	x23, [x29, #96]
  24e1e0:	cbz	x23, 24e428 <config_parse_match_property+0x280>
  24e1e4:	mov	x8, x19
  24e1e8:	ldrb	w28, [x8], #1
  24e1ec:	adrp	x24, 20e000 <worker_hash_op+0x3ad0>
  24e1f0:	adrp	x25, 218000 <worker_hash_op+0xdad0>
  24e1f4:	mov	w20, w2
  24e1f8:	cmp	w28, #0x21
  24e1fc:	mov	x21, x1
  24e200:	mov	x22, x0
  24e204:	add	x24, x24, #0x6c4
  24e208:	add	x25, x25, #0x772
  24e20c:	csel	x8, x19, x8, ne  // ne = any
  24e210:	stur	x8, [x29, #-8]
  24e214:	sub	x0, x29, #0x8
  24e218:	sub	x1, x29, #0x10
  24e21c:	mov	w3, #0xa                   	// #10
  24e220:	mov	x2, xzr
  24e224:	stur	xzr, [x29, #-16]
  24e228:	str	xzr, [sp, #24]
  24e22c:	bl	254fe0 <extract_first_word@plt>
  24e230:	cbz	w0, 24e25c <config_parse_match_property+0xb4>
  24e234:	cmn	w0, #0xc
  24e238:	b.ne	24e284 <config_parse_match_property+0xdc>  // b.any
  24e23c:	mov	w2, #0x193                 	// #403
  24e240:	mov	w0, wzr
  24e244:	mov	x1, x24
  24e248:	mov	x3, x25
  24e24c:	bl	2537c0 <log_oom_internal@plt>
  24e250:	mov	w27, w0
  24e254:	mov	w26, #0x1                   	// #1
  24e258:	b	24e264 <config_parse_match_property+0xbc>
  24e25c:	mov	w26, #0x1                   	// #1
  24e260:	mov	w27, w0
  24e264:	add	x0, sp, #0x18
  24e268:	bl	24deec <freep>
  24e26c:	sub	x0, x29, #0x10
  24e270:	bl	24deec <freep>
  24e274:	cbz	w26, 24e214 <config_parse_match_property+0x6c>
  24e278:	cmp	w26, #0xb
  24e27c:	b.eq	24e214 <config_parse_match_property+0x6c>  // b.none
  24e280:	b	24e398 <config_parse_match_property+0x1f0>
  24e284:	tbnz	w0, #31, 24e2c0 <config_parse_match_property+0x118>
  24e288:	ldur	x0, [x29, #-16]
  24e28c:	bl	255010 <env_assignment_is_valid@plt>
  24e290:	tbz	w0, #0, 24e308 <config_parse_match_property+0x160>
  24e294:	cmp	w28, #0x21
  24e298:	b.ne	24e360 <config_parse_match_property+0x1b8>  // b.any
  24e29c:	ldur	x1, [x29, #-16]
  24e2a0:	adrp	x0, 210000 <worker_hash_op+0x5ad0>
  24e2a4:	add	x0, x0, #0x600
  24e2a8:	mov	x2, xzr
  24e2ac:	bl	2547b0 <strjoin_real@plt>
  24e2b0:	str	x0, [sp, #24]
  24e2b4:	cbnz	x0, 24e36c <config_parse_match_property+0x1c4>
  24e2b8:	mov	w2, #0x1a3                 	// #419
  24e2bc:	b	24e244 <config_parse_match_property+0x9c>
  24e2c0:	mov	w0, wzr
  24e2c4:	bl	2535b0 <log_get_max_level_realm@plt>
  24e2c8:	cmp	w0, #0x3
  24e2cc:	b.lt	24e358 <config_parse_match_property+0x1b0>  // b.tstop
  24e2d0:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  24e2d4:	mov	w1, #0x3                   	// #3
  24e2d8:	mov	w6, #0x196                 	// #406
  24e2dc:	add	x8, x8, #0xd41
  24e2e0:	mov	x0, x22
  24e2e4:	mov	x2, x21
  24e2e8:	mov	w3, w20
  24e2ec:	mov	w4, wzr
  24e2f0:	mov	x5, x24
  24e2f4:	mov	x7, x25
  24e2f8:	stp	x8, x19, [sp]
  24e2fc:	bl	254a60 <log_syntax_internal@plt>
  24e300:	mov	w27, wzr
  24e304:	b	24e254 <config_parse_match_property+0xac>
  24e308:	mov	w0, wzr
  24e30c:	bl	2535b0 <log_get_max_level_realm@plt>
  24e310:	cmp	w0, #0x3
  24e314:	b.lt	24e388 <config_parse_match_property+0x1e0>  // b.tstop
  24e318:	ldur	x8, [x29, #-16]
  24e31c:	mov	w1, #0x3                   	// #3
  24e320:	mov	w6, #0x19c                 	// #412
  24e324:	mov	x0, x22
  24e328:	str	x8, [sp, #8]
  24e32c:	adrp	x8, 213000 <worker_hash_op+0x8ad0>
  24e330:	add	x8, x8, #0xe
  24e334:	mov	x2, x21
  24e338:	mov	w3, w20
  24e33c:	mov	w4, wzr
  24e340:	mov	x5, x24
  24e344:	mov	x7, x25
  24e348:	str	x8, [sp]
  24e34c:	bl	254a60 <log_syntax_internal@plt>
  24e350:	mov	w26, #0xb                   	// #11
  24e354:	b	24e264 <config_parse_match_property+0xbc>
  24e358:	mov	w27, wzr
  24e35c:	b	24e254 <config_parse_match_property+0xac>
  24e360:	ldur	x8, [x29, #-16]
  24e364:	stur	xzr, [x29, #-16]
  24e368:	str	x8, [sp, #24]
  24e36c:	ldr	x1, [sp, #24]
  24e370:	mov	x0, x23
  24e374:	str	xzr, [sp, #24]
  24e378:	bl	254ff0 <strv_consume@plt>
  24e37c:	tbnz	w0, #31, 24e390 <config_parse_match_property+0x1e8>
  24e380:	mov	w26, wzr
  24e384:	b	24e264 <config_parse_match_property+0xbc>
  24e388:	mov	w26, #0xb                   	// #11
  24e38c:	b	24e264 <config_parse_match_property+0xbc>
  24e390:	mov	w2, #0x1a9                 	// #425
  24e394:	b	24e240 <config_parse_match_property+0x98>
  24e398:	mov	w0, w27
  24e39c:	ldp	x20, x19, [sp, #128]
  24e3a0:	ldp	x22, x21, [sp, #112]
  24e3a4:	ldp	x24, x23, [sp, #96]
  24e3a8:	ldp	x26, x25, [sp, #80]
  24e3ac:	ldp	x28, x27, [sp, #64]
  24e3b0:	ldp	x29, x30, [sp, #48]
  24e3b4:	add	sp, sp, #0x90
  24e3b8:	ret
  24e3bc:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e3c0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e3c4:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24e3c8:	add	x1, x1, #0x4b9
  24e3cc:	add	x2, x2, #0x6c4
  24e3d0:	add	x4, x4, #0x302
  24e3d4:	mov	w3, #0x184                 	// #388
  24e3d8:	mov	w0, wzr
  24e3dc:	bl	253740 <log_assert_failed_realm@plt>
  24e3e0:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24e3e4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e3e8:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24e3ec:	add	x1, x1, #0x510
  24e3f0:	add	x2, x2, #0x6c4
  24e3f4:	add	x4, x4, #0x302
  24e3f8:	mov	w3, #0x185                 	// #389
  24e3fc:	mov	w0, wzr
  24e400:	bl	253740 <log_assert_failed_realm@plt>
  24e404:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24e408:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e40c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24e410:	add	x1, x1, #0x3a8
  24e414:	add	x2, x2, #0x6c4
  24e418:	add	x4, x4, #0x302
  24e41c:	mov	w3, #0x186                 	// #390
  24e420:	mov	w0, wzr
  24e424:	bl	253740 <log_assert_failed_realm@plt>
  24e428:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e42c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e430:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24e434:	add	x1, x1, #0x1ea
  24e438:	add	x2, x2, #0x6c4
  24e43c:	add	x4, x4, #0x302
  24e440:	mov	w3, #0x187                 	// #391
  24e444:	mov	w0, wzr
  24e448:	bl	253740 <log_assert_failed_realm@plt>

000000000024e44c <config_parse_ifalias>:
  24e44c:	sub	sp, sp, #0x60
  24e450:	stp	x29, x30, [sp, #32]
  24e454:	add	x29, sp, #0x20
  24e458:	stp	x24, x23, [sp, #48]
  24e45c:	stp	x22, x21, [sp, #64]
  24e460:	stp	x20, x19, [sp, #80]
  24e464:	stur	xzr, [x29, #-8]
  24e468:	cbz	x1, 24e58c <config_parse_ifalias+0x140>
  24e46c:	cbz	x5, 24e5b0 <config_parse_ifalias+0x164>
  24e470:	mov	x22, x7
  24e474:	cbz	x7, 24e5d4 <config_parse_ifalias+0x188>
  24e478:	ldr	x24, [x29, #64]
  24e47c:	cbz	x24, 24e5f8 <config_parse_ifalias+0x1ac>
  24e480:	mov	x21, x0
  24e484:	mov	x0, x22
  24e488:	mov	w19, w2
  24e48c:	mov	x20, x1
  24e490:	bl	253ab0 <strdup@plt>
  24e494:	stur	x0, [x29, #-8]
  24e498:	cbz	x0, 24e50c <config_parse_ifalias+0xc0>
  24e49c:	mov	x23, x0
  24e4a0:	bl	255020 <ascii_is_valid@plt>
  24e4a4:	cbz	x0, 24e4b8 <config_parse_ifalias+0x6c>
  24e4a8:	mov	x0, x23
  24e4ac:	bl	2539a0 <strlen@plt>
  24e4b0:	cmp	x0, #0x100
  24e4b4:	b.cc	24e52c <config_parse_ifalias+0xe0>  // b.lo, b.ul, b.last
  24e4b8:	mov	w0, wzr
  24e4bc:	bl	2535b0 <log_get_max_level_realm@plt>
  24e4c0:	cmp	w0, #0x3
  24e4c4:	mov	w23, wzr
  24e4c8:	b.lt	24e568 <config_parse_ifalias+0x11c>  // b.tstop
  24e4cc:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24e4d0:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  24e4d4:	adrp	x7, 211000 <worker_hash_op+0x6ad0>
  24e4d8:	add	x8, x8, #0x365
  24e4dc:	add	x5, x5, #0x6c4
  24e4e0:	add	x7, x7, #0x350
  24e4e4:	mov	w1, #0x3                   	// #3
  24e4e8:	mov	w6, #0x1c5                 	// #453
  24e4ec:	mov	x0, x21
  24e4f0:	mov	x2, x20
  24e4f4:	mov	w3, w19
  24e4f8:	mov	w4, wzr
  24e4fc:	stp	x8, x22, [sp]
  24e500:	bl	254a60 <log_syntax_internal@plt>
  24e504:	mov	w23, wzr
  24e508:	b	24e568 <config_parse_ifalias+0x11c>
  24e50c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24e510:	adrp	x3, 211000 <worker_hash_op+0x6ad0>
  24e514:	add	x1, x1, #0x6c4
  24e518:	add	x3, x3, #0x350
  24e51c:	mov	w2, #0x1c2                 	// #450
  24e520:	bl	2537c0 <log_oom_internal@plt>
  24e524:	mov	w23, w0
  24e528:	b	24e568 <config_parse_ifalias+0x11c>
  24e52c:	mov	x0, x23
  24e530:	bl	24dc80 <isempty>
  24e534:	ldr	x8, [x24]
  24e538:	tbz	w0, #0, 24e550 <config_parse_ifalias+0x104>
  24e53c:	mov	x0, x8
  24e540:	bl	24e61c <mfree>
  24e544:	mov	w23, wzr
  24e548:	str	xzr, [x24]
  24e54c:	b	24e568 <config_parse_ifalias+0x11c>
  24e550:	mov	x0, x8
  24e554:	bl	2536e0 <free@plt>
  24e558:	ldur	x8, [x29, #-8]
  24e55c:	mov	w23, wzr
  24e560:	str	x8, [x24]
  24e564:	stur	xzr, [x29, #-8]
  24e568:	sub	x0, x29, #0x8
  24e56c:	bl	24deec <freep>
  24e570:	mov	w0, w23
  24e574:	ldp	x20, x19, [sp, #80]
  24e578:	ldp	x22, x21, [sp, #64]
  24e57c:	ldp	x24, x23, [sp, #48]
  24e580:	ldp	x29, x30, [sp, #32]
  24e584:	add	sp, sp, #0x60
  24e588:	ret
  24e58c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e590:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e594:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24e598:	add	x1, x1, #0x4b9
  24e59c:	add	x2, x2, #0x6c4
  24e5a0:	add	x4, x4, #0x713
  24e5a4:	mov	w3, #0x1bb                 	// #443
  24e5a8:	mov	w0, wzr
  24e5ac:	bl	253740 <log_assert_failed_realm@plt>
  24e5b0:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24e5b4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e5b8:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24e5bc:	add	x1, x1, #0x510
  24e5c0:	add	x2, x2, #0x6c4
  24e5c4:	add	x4, x4, #0x713
  24e5c8:	mov	w3, #0x1bc                 	// #444
  24e5cc:	mov	w0, wzr
  24e5d0:	bl	253740 <log_assert_failed_realm@plt>
  24e5d4:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24e5d8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e5dc:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24e5e0:	add	x1, x1, #0x3a8
  24e5e4:	add	x2, x2, #0x6c4
  24e5e8:	add	x4, x4, #0x713
  24e5ec:	mov	w3, #0x1bd                 	// #445
  24e5f0:	mov	w0, wzr
  24e5f4:	bl	253740 <log_assert_failed_realm@plt>
  24e5f8:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e5fc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e600:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  24e604:	add	x1, x1, #0x1ea
  24e608:	add	x2, x2, #0x6c4
  24e60c:	add	x4, x4, #0x713
  24e610:	mov	w3, #0x1be                 	// #446
  24e614:	mov	w0, wzr
  24e618:	bl	253740 <log_assert_failed_realm@plt>

000000000024e61c <mfree>:
  24e61c:	stp	x29, x30, [sp, #-16]!
  24e620:	mov	x29, sp
  24e624:	bl	2536e0 <free@plt>
  24e628:	ldp	x29, x30, [sp], #16
  24e62c:	ret

000000000024e630 <config_parse_hwaddr>:
  24e630:	sub	sp, sp, #0x60
  24e634:	stp	x29, x30, [sp, #16]
  24e638:	add	x29, sp, #0x10
  24e63c:	str	x25, [sp, #32]
  24e640:	stp	x24, x23, [sp, #48]
  24e644:	stp	x22, x21, [sp, #64]
  24e648:	stp	x20, x19, [sp, #80]
  24e64c:	str	xzr, [x29, #24]
  24e650:	cbz	x1, 24e750 <config_parse_hwaddr+0x120>
  24e654:	cbz	x5, 24e774 <config_parse_hwaddr+0x144>
  24e658:	mov	x22, x7
  24e65c:	cbz	x7, 24e798 <config_parse_hwaddr+0x168>
  24e660:	ldr	x25, [x29, #80]
  24e664:	cbz	x25, 24e7bc <config_parse_hwaddr+0x18c>
  24e668:	mov	x20, x1
  24e66c:	mov	x21, x0
  24e670:	mov	w0, #0x1                   	// #1
  24e674:	mov	w1, #0x6                   	// #6
  24e678:	mov	w19, w2
  24e67c:	bl	254940 <calloc@plt>
  24e680:	str	x0, [x29, #24]
  24e684:	cbz	x0, 24e6b4 <config_parse_hwaddr+0x84>
  24e688:	mov	x1, x0
  24e68c:	mov	x0, x22
  24e690:	bl	255030 <ether_addr_from_string@plt>
  24e694:	tbnz	w0, #31, 24e6d4 <config_parse_hwaddr+0xa4>
  24e698:	ldr	x0, [x25]
  24e69c:	bl	2536e0 <free@plt>
  24e6a0:	ldr	x8, [x29, #24]
  24e6a4:	mov	w24, wzr
  24e6a8:	str	x8, [x25]
  24e6ac:	str	xzr, [x29, #24]
  24e6b0:	b	24e728 <config_parse_hwaddr+0xf8>
  24e6b4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24e6b8:	adrp	x3, 217000 <worker_hash_op+0xcad0>
  24e6bc:	add	x1, x1, #0x6c4
  24e6c0:	add	x3, x3, #0xa2c
  24e6c4:	mov	w2, #0x1e7                 	// #487
  24e6c8:	bl	2537c0 <log_oom_internal@plt>
  24e6cc:	mov	w24, w0
  24e6d0:	b	24e728 <config_parse_hwaddr+0xf8>
  24e6d4:	mov	w23, w0
  24e6d8:	mov	w0, wzr
  24e6dc:	bl	2535b0 <log_get_max_level_realm@plt>
  24e6e0:	cmp	w0, #0x3
  24e6e4:	mov	w24, wzr
  24e6e8:	b.lt	24e728 <config_parse_hwaddr+0xf8>  // b.tstop
  24e6ec:	adrp	x8, 218000 <worker_hash_op+0xdad0>
  24e6f0:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  24e6f4:	adrp	x7, 217000 <worker_hash_op+0xcad0>
  24e6f8:	add	x8, x8, #0x107
  24e6fc:	add	x5, x5, #0x6c4
  24e700:	add	x7, x7, #0xa2c
  24e704:	mov	w1, #0x3                   	// #3
  24e708:	mov	w6, #0x1eb                 	// #491
  24e70c:	mov	x0, x21
  24e710:	mov	x2, x20
  24e714:	mov	w3, w19
  24e718:	mov	w4, w23
  24e71c:	stp	x8, x22, [sp]
  24e720:	bl	254a60 <log_syntax_internal@plt>
  24e724:	mov	w24, wzr
  24e728:	add	x0, x29, #0x18
  24e72c:	bl	24deec <freep>
  24e730:	mov	w0, w24
  24e734:	ldp	x20, x19, [sp, #80]
  24e738:	ldp	x22, x21, [sp, #64]
  24e73c:	ldp	x24, x23, [sp, #48]
  24e740:	ldr	x25, [sp, #32]
  24e744:	ldp	x29, x30, [sp, #16]
  24e748:	add	sp, sp, #0x60
  24e74c:	ret
  24e750:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e754:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e758:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24e75c:	add	x1, x1, #0x4b9
  24e760:	add	x2, x2, #0x6c4
  24e764:	add	x4, x4, #0xa6c
  24e768:	mov	w3, #0x1e0                 	// #480
  24e76c:	mov	w0, wzr
  24e770:	bl	253740 <log_assert_failed_realm@plt>
  24e774:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24e778:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e77c:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24e780:	add	x1, x1, #0x510
  24e784:	add	x2, x2, #0x6c4
  24e788:	add	x4, x4, #0xa6c
  24e78c:	mov	w3, #0x1e1                 	// #481
  24e790:	mov	w0, wzr
  24e794:	bl	253740 <log_assert_failed_realm@plt>
  24e798:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24e79c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e7a0:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24e7a4:	add	x1, x1, #0x3a8
  24e7a8:	add	x2, x2, #0x6c4
  24e7ac:	add	x4, x4, #0xa6c
  24e7b0:	mov	w3, #0x1e2                 	// #482
  24e7b4:	mov	w0, wzr
  24e7b8:	bl	253740 <log_assert_failed_realm@plt>
  24e7bc:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24e7c0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24e7c4:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  24e7c8:	add	x1, x1, #0x1ea
  24e7cc:	add	x2, x2, #0x6c4
  24e7d0:	add	x4, x4, #0xa6c
  24e7d4:	mov	w3, #0x1e3                 	// #483
  24e7d8:	mov	w0, wzr
  24e7dc:	bl	253740 <log_assert_failed_realm@plt>

000000000024e7e0 <config_parse_hwaddrs>:
  24e7e0:	sub	sp, sp, #0x90
  24e7e4:	stp	x29, x30, [sp, #48]
  24e7e8:	add	x29, sp, #0x30
  24e7ec:	stp	x28, x27, [sp, #64]
  24e7f0:	stp	x26, x25, [sp, #80]
  24e7f4:	stp	x24, x23, [sp, #96]
  24e7f8:	stp	x22, x21, [sp, #112]
  24e7fc:	stp	x20, x19, [sp, #128]
  24e800:	stp	x7, xzr, [x29, #-16]
  24e804:	cbz	x1, 24ea80 <config_parse_hwaddrs+0x2a0>
  24e808:	cbz	x5, 24eaa4 <config_parse_hwaddrs+0x2c4>
  24e80c:	mov	x20, x7
  24e810:	cbz	x7, 24eac8 <config_parse_hwaddrs+0x2e8>
  24e814:	ldr	x19, [x29, #96]
  24e818:	cbz	x19, 24eaec <config_parse_hwaddrs+0x30c>
  24e81c:	mov	x23, x0
  24e820:	mov	x0, x20
  24e824:	mov	w21, w2
  24e828:	mov	x22, x1
  24e82c:	bl	24dc80 <isempty>
  24e830:	tbz	w0, #0, 24e848 <config_parse_hwaddrs+0x68>
  24e834:	ldr	x0, [x19]
  24e838:	bl	24eb2c <set_free_free>
  24e83c:	mov	w27, wzr
  24e840:	str	x0, [x19]
  24e844:	b	24ea54 <config_parse_hwaddrs+0x274>
  24e848:	adrp	x0, 27d000 <builtin_blkid.options+0x50>
  24e84c:	ldr	x0, [x0, #792]
  24e850:	bl	254dc0 <internal_set_new@plt>
  24e854:	stur	x0, [x29, #-8]
  24e858:	cbz	x0, 24ea04 <config_parse_hwaddrs+0x224>
  24e85c:	adrp	x25, 20e000 <worker_hash_op+0x3ad0>
  24e860:	adrp	x26, 210000 <worker_hash_op+0x5ad0>
  24e864:	mov	x24, x0
  24e868:	add	x25, x25, #0x6c4
  24e86c:	add	x26, x26, #0xc5c
  24e870:	sub	x0, x29, #0x10
  24e874:	add	x1, sp, #0x18
  24e878:	mov	x2, xzr
  24e87c:	mov	w3, wzr
  24e880:	stp	xzr, xzr, [sp, #16]
  24e884:	bl	254fe0 <extract_first_word@plt>
  24e888:	cbz	w0, 24e8b4 <config_parse_hwaddrs+0xd4>
  24e88c:	mov	w28, w0
  24e890:	cmn	w0, #0xc
  24e894:	b.ne	24e8bc <config_parse_hwaddrs+0xdc>  // b.any
  24e898:	mov	w2, #0x21b                 	// #539
  24e89c:	mov	w0, wzr
  24e8a0:	mov	x1, x25
  24e8a4:	mov	x3, x26
  24e8a8:	bl	2537c0 <log_oom_internal@plt>
  24e8ac:	mov	w27, w0
  24e8b0:	b	24e944 <config_parse_hwaddrs+0x164>
  24e8b4:	mov	w28, #0xa                   	// #10
  24e8b8:	b	24e948 <config_parse_hwaddrs+0x168>
  24e8bc:	tbnz	w28, #31, 24e900 <config_parse_hwaddrs+0x120>
  24e8c0:	bl	24eb4c <malloc_multiply>
  24e8c4:	str	x0, [sp, #16]
  24e8c8:	cbz	x0, 24e968 <config_parse_hwaddrs+0x188>
  24e8cc:	mov	x28, x0
  24e8d0:	ldr	x0, [sp, #24]
  24e8d4:	mov	x1, x28
  24e8d8:	bl	255030 <ether_addr_from_string@plt>
  24e8dc:	tbnz	w0, #31, 24e970 <config_parse_hwaddrs+0x190>
  24e8e0:	mov	x0, x24
  24e8e4:	mov	x1, x28
  24e8e8:	bl	255040 <set_put@plt>
  24e8ec:	tbnz	w0, #31, 24e9c0 <config_parse_hwaddrs+0x1e0>
  24e8f0:	mov	w28, wzr
  24e8f4:	cbz	w0, 24e948 <config_parse_hwaddrs+0x168>
  24e8f8:	str	xzr, [sp, #16]
  24e8fc:	b	24e948 <config_parse_hwaddrs+0x168>
  24e900:	mov	w0, wzr
  24e904:	bl	2535b0 <log_get_max_level_realm@plt>
  24e908:	cmp	w0, #0x4
  24e90c:	b.lt	24e940 <config_parse_hwaddrs+0x160>  // b.tstop
  24e910:	adrp	x8, 20e000 <worker_hash_op+0x3ad0>
  24e914:	mov	w1, #0x4                   	// #4
  24e918:	mov	w6, #0x21d                 	// #541
  24e91c:	add	x8, x8, #0xd41
  24e920:	mov	x0, x23
  24e924:	mov	x2, x22
  24e928:	mov	w3, w21
  24e92c:	mov	w4, w28
  24e930:	mov	x5, x25
  24e934:	mov	x7, x26
  24e938:	stp	x8, x20, [sp]
  24e93c:	bl	254a60 <log_syntax_internal@plt>
  24e940:	mov	w27, wzr
  24e944:	mov	w28, #0x1                   	// #1
  24e948:	add	x0, sp, #0x10
  24e94c:	bl	24deec <freep>
  24e950:	add	x0, sp, #0x18
  24e954:	bl	24deec <freep>
  24e958:	cbz	w28, 24e870 <config_parse_hwaddrs+0x90>
  24e95c:	cmp	w28, #0xb
  24e960:	b.eq	24e870 <config_parse_hwaddrs+0x90>  // b.none
  24e964:	b	24e9d0 <config_parse_hwaddrs+0x1f0>
  24e968:	mov	w2, #0x223                 	// #547
  24e96c:	b	24e8a0 <config_parse_hwaddrs+0xc0>
  24e970:	mov	w0, wzr
  24e974:	bl	2535b0 <log_get_max_level_realm@plt>
  24e978:	cmp	w0, #0x3
  24e97c:	b.lt	24e9c8 <config_parse_hwaddrs+0x1e8>  // b.tstop
  24e980:	ldr	x8, [sp, #24]
  24e984:	mov	w1, #0x3                   	// #3
  24e988:	mov	w6, #0x227                 	// #551
  24e98c:	mov	x0, x23
  24e990:	str	x8, [sp, #8]
  24e994:	adrp	x8, 216000 <worker_hash_op+0xbad0>
  24e998:	add	x8, x8, #0xbe5
  24e99c:	mov	x2, x22
  24e9a0:	mov	w3, w21
  24e9a4:	mov	w4, wzr
  24e9a8:	mov	x5, x25
  24e9ac:	mov	x7, x26
  24e9b0:	str	x8, [sp]
  24e9b4:	bl	254a60 <log_syntax_internal@plt>
  24e9b8:	mov	w28, #0xb                   	// #11
  24e9bc:	b	24e948 <config_parse_hwaddrs+0x168>
  24e9c0:	mov	w2, #0x22d                 	// #557
  24e9c4:	b	24e89c <config_parse_hwaddrs+0xbc>
  24e9c8:	mov	w28, #0xb                   	// #11
  24e9cc:	b	24e948 <config_parse_hwaddrs+0x168>
  24e9d0:	cmp	w28, #0xa
  24e9d4:	b.ne	24ea54 <config_parse_hwaddrs+0x274>  // b.any
  24e9d8:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  24e9dc:	ldr	x1, [x1, #792]
  24e9e0:	mov	x0, x19
  24e9e4:	bl	255050 <internal_set_ensure_allocated@plt>
  24e9e8:	tbnz	w0, #31, 24ea1c <config_parse_hwaddrs+0x23c>
  24e9ec:	ldr	x0, [x19]
  24e9f0:	mov	x1, x24
  24e9f4:	bl	24eb80 <set_move>
  24e9f8:	tbnz	w0, #31, 24ea34 <config_parse_hwaddrs+0x254>
  24e9fc:	mov	w27, wzr
  24ea00:	b	24ea54 <config_parse_hwaddrs+0x274>
  24ea04:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24ea08:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  24ea0c:	add	x1, x1, #0x6c4
  24ea10:	add	x3, x3, #0xc5c
  24ea14:	mov	w2, #0x211                 	// #529
  24ea18:	b	24ea4c <config_parse_hwaddrs+0x26c>
  24ea1c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24ea20:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  24ea24:	add	x1, x1, #0x6c4
  24ea28:	add	x3, x3, #0xc5c
  24ea2c:	mov	w2, #0x234                 	// #564
  24ea30:	b	24ea48 <config_parse_hwaddrs+0x268>
  24ea34:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24ea38:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  24ea3c:	add	x1, x1, #0x6c4
  24ea40:	add	x3, x3, #0xc5c
  24ea44:	mov	w2, #0x238                 	// #568
  24ea48:	mov	w0, wzr
  24ea4c:	bl	2537c0 <log_oom_internal@plt>
  24ea50:	mov	w27, w0
  24ea54:	sub	x0, x29, #0x8
  24ea58:	bl	24eb10 <set_free_freep>
  24ea5c:	mov	w0, w27
  24ea60:	ldp	x20, x19, [sp, #128]
  24ea64:	ldp	x22, x21, [sp, #112]
  24ea68:	ldp	x24, x23, [sp, #96]
  24ea6c:	ldp	x26, x25, [sp, #80]
  24ea70:	ldp	x28, x27, [sp, #64]
  24ea74:	ldp	x29, x30, [sp, #48]
  24ea78:	add	sp, sp, #0x90
  24ea7c:	ret
  24ea80:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24ea84:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ea88:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24ea8c:	add	x1, x1, #0x4b9
  24ea90:	add	x2, x2, #0x6c4
  24ea94:	add	x4, x4, #0xb78
  24ea98:	mov	w3, #0x204                 	// #516
  24ea9c:	mov	w0, wzr
  24eaa0:	bl	253740 <log_assert_failed_realm@plt>
  24eaa4:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24eaa8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24eaac:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24eab0:	add	x1, x1, #0x510
  24eab4:	add	x2, x2, #0x6c4
  24eab8:	add	x4, x4, #0xb78
  24eabc:	mov	w3, #0x205                 	// #517
  24eac0:	mov	w0, wzr
  24eac4:	bl	253740 <log_assert_failed_realm@plt>
  24eac8:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24eacc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ead0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24ead4:	add	x1, x1, #0x3a8
  24ead8:	add	x2, x2, #0x6c4
  24eadc:	add	x4, x4, #0xb78
  24eae0:	mov	w3, #0x206                 	// #518
  24eae4:	mov	w0, wzr
  24eae8:	bl	253740 <log_assert_failed_realm@plt>
  24eaec:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24eaf0:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24eaf4:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24eaf8:	add	x1, x1, #0x1ea
  24eafc:	add	x2, x2, #0x6c4
  24eb00:	add	x4, x4, #0xb78
  24eb04:	mov	w3, #0x207                 	// #519
  24eb08:	mov	w0, wzr
  24eb0c:	bl	253740 <log_assert_failed_realm@plt>

000000000024eb10 <set_free_freep>:
  24eb10:	stp	x29, x30, [sp, #-16]!
  24eb14:	ldr	x0, [x0]
  24eb18:	mov	x29, sp
  24eb1c:	cbz	x0, 24eb24 <set_free_freep+0x14>
  24eb20:	bl	24eb2c <set_free_free>
  24eb24:	ldp	x29, x30, [sp], #16
  24eb28:	ret

000000000024eb2c <set_free_free>:
  24eb2c:	stp	x29, x30, [sp, #-16]!
  24eb30:	adrp	x1, 27d000 <builtin_blkid.options+0x50>
  24eb34:	ldr	x1, [x1, #728]
  24eb38:	mov	x2, xzr
  24eb3c:	mov	x29, sp
  24eb40:	bl	253940 <internal_hashmap_free@plt>
  24eb44:	ldp	x29, x30, [sp], #16
  24eb48:	ret

000000000024eb4c <malloc_multiply>:
  24eb4c:	stp	x29, x30, [sp, #-16]!
  24eb50:	mov	w0, #0x6                   	// #6
  24eb54:	mov	w1, #0x1                   	// #1
  24eb58:	mov	x29, sp
  24eb5c:	bl	24d718 <size_multiply_overflow>
  24eb60:	tbz	w0, #0, 24eb70 <malloc_multiply+0x24>
  24eb64:	mov	x0, xzr
  24eb68:	ldp	x29, x30, [sp], #16
  24eb6c:	ret
  24eb70:	mov	w0, #0x6                   	// #6
  24eb74:	bl	2539c0 <malloc@plt>
  24eb78:	ldp	x29, x30, [sp], #16
  24eb7c:	ret

000000000024eb80 <set_move>:
  24eb80:	stp	x29, x30, [sp, #-16]!
  24eb84:	mov	x29, sp
  24eb88:	bl	255060 <internal_hashmap_move@plt>
  24eb8c:	ldp	x29, x30, [sp], #16
  24eb90:	ret

000000000024eb94 <config_parse_bridge_port_priority>:
  24eb94:	sub	sp, sp, #0x60
  24eb98:	stp	x29, x30, [sp, #32]
  24eb9c:	stp	x24, x23, [sp, #48]
  24eba0:	stp	x22, x21, [sp, #64]
  24eba4:	stp	x20, x19, [sp, #80]
  24eba8:	add	x29, sp, #0x20
  24ebac:	cbz	x1, 24eca0 <config_parse_bridge_port_priority+0x10c>
  24ebb0:	cbz	x5, 24ecc4 <config_parse_bridge_port_priority+0x130>
  24ebb4:	mov	x23, x7
  24ebb8:	cbz	x7, 24ece8 <config_parse_bridge_port_priority+0x154>
  24ebbc:	ldr	x24, [x29, #64]
  24ebc0:	cbz	x24, 24ed0c <config_parse_bridge_port_priority+0x178>
  24ebc4:	mov	x20, x1
  24ebc8:	mov	x21, x0
  24ebcc:	sub	x1, x29, #0x4
  24ebd0:	mov	x0, x23
  24ebd4:	mov	w19, w2
  24ebd8:	bl	24ed30 <safe_atou16>
  24ebdc:	mov	w22, w0
  24ebe0:	tbnz	w0, #31, 24ec34 <config_parse_bridge_port_priority+0xa0>
  24ebe4:	ldurh	w8, [x29, #-4]
  24ebe8:	cmp	w8, #0x40
  24ebec:	b.cc	24ec80 <config_parse_bridge_port_priority+0xec>  // b.lo, b.ul, b.last
  24ebf0:	mov	w0, wzr
  24ebf4:	bl	2535b0 <log_get_max_level_realm@plt>
  24ebf8:	cmp	w0, #0x3
  24ebfc:	b.lt	24ec84 <config_parse_bridge_port_priority+0xf0>  // b.tstop
  24ec00:	adrp	x9, 216000 <worker_hash_op+0xbad0>
  24ec04:	mov	w8, #0x3f                  	// #63
  24ec08:	add	x9, x9, #0x582
  24ec0c:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  24ec10:	adrp	x7, 20a000 <parse_argv.options-0x3f0>
  24ec14:	str	x23, [sp, #16]
  24ec18:	add	x5, x5, #0x6c4
  24ec1c:	add	x7, x7, #0x9a1
  24ec20:	str	w8, [sp, #8]
  24ec24:	mov	w1, #0x3                   	// #3
  24ec28:	mov	w6, #0x25a                 	// #602
  24ec2c:	str	x9, [sp]
  24ec30:	b	24ec68 <config_parse_bridge_port_priority+0xd4>
  24ec34:	mov	w0, wzr
  24ec38:	bl	2535b0 <log_get_max_level_realm@plt>
  24ec3c:	cmp	w0, #0x3
  24ec40:	b.lt	24ec84 <config_parse_bridge_port_priority+0xf0>  // b.tstop
  24ec44:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  24ec48:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  24ec4c:	adrp	x7, 20a000 <parse_argv.options-0x3f0>
  24ec50:	add	x8, x8, #0x9e0
  24ec54:	add	x5, x5, #0x6c4
  24ec58:	add	x7, x7, #0x9a1
  24ec5c:	mov	w1, #0x3                   	// #3
  24ec60:	mov	w6, #0x254                 	// #596
  24ec64:	stp	x8, x23, [sp]
  24ec68:	mov	x0, x21
  24ec6c:	mov	x2, x20
  24ec70:	mov	w3, w19
  24ec74:	mov	w4, w22
  24ec78:	bl	254a60 <log_syntax_internal@plt>
  24ec7c:	b	24ec84 <config_parse_bridge_port_priority+0xf0>
  24ec80:	strh	w8, [x24]
  24ec84:	ldp	x20, x19, [sp, #80]
  24ec88:	ldp	x22, x21, [sp, #64]
  24ec8c:	ldp	x24, x23, [sp, #48]
  24ec90:	ldp	x29, x30, [sp, #32]
  24ec94:	mov	w0, wzr
  24ec98:	add	sp, sp, #0x60
  24ec9c:	ret
  24eca0:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24eca4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24eca8:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24ecac:	add	x1, x1, #0x4b9
  24ecb0:	add	x2, x2, #0x6c4
  24ecb4:	add	x4, x4, #0x4e5
  24ecb8:	mov	w3, #0x24c                 	// #588
  24ecbc:	mov	w0, wzr
  24ecc0:	bl	253740 <log_assert_failed_realm@plt>
  24ecc4:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24ecc8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24eccc:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24ecd0:	add	x1, x1, #0x510
  24ecd4:	add	x2, x2, #0x6c4
  24ecd8:	add	x4, x4, #0x4e5
  24ecdc:	mov	w3, #0x24d                 	// #589
  24ece0:	mov	w0, wzr
  24ece4:	bl	253740 <log_assert_failed_realm@plt>
  24ece8:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24ecec:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ecf0:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24ecf4:	add	x1, x1, #0x3a8
  24ecf8:	add	x2, x2, #0x6c4
  24ecfc:	add	x4, x4, #0x4e5
  24ed00:	mov	w3, #0x24e                 	// #590
  24ed04:	mov	w0, wzr
  24ed08:	bl	253740 <log_assert_failed_realm@plt>
  24ed0c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24ed10:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ed14:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24ed18:	add	x1, x1, #0x1ea
  24ed1c:	add	x2, x2, #0x6c4
  24ed20:	add	x4, x4, #0x4e5
  24ed24:	mov	w3, #0x24f                 	// #591
  24ed28:	mov	w0, wzr
  24ed2c:	bl	253740 <log_assert_failed_realm@plt>

000000000024ed30 <safe_atou16>:
  24ed30:	stp	x29, x30, [sp, #-16]!
  24ed34:	mov	x2, x1
  24ed38:	mov	w1, wzr
  24ed3c:	mov	x29, sp
  24ed40:	bl	254810 <safe_atou16_full@plt>
  24ed44:	ldp	x29, x30, [sp], #16
  24ed48:	ret

000000000024ed4c <serialize_in_addrs>:
  24ed4c:	sub	sp, sp, #0x50
  24ed50:	stp	x29, x30, [sp, #16]
  24ed54:	stp	x24, x23, [sp, #32]
  24ed58:	stp	x22, x21, [sp, #48]
  24ed5c:	stp	x20, x19, [sp, #64]
  24ed60:	add	x29, sp, #0x10
  24ed64:	cbz	x0, 24ee00 <serialize_in_addrs+0xb4>
  24ed68:	mov	x22, x1
  24ed6c:	cbz	x1, 24ee20 <serialize_in_addrs+0xd4>
  24ed70:	mov	x20, x2
  24ed74:	cbz	x2, 24ede0 <serialize_in_addrs+0x94>
  24ed78:	mov	x19, x4
  24ed7c:	mov	w21, w3
  24ed80:	mov	x23, x0
  24ed84:	mov	x24, xzr
  24ed88:	b	24edc4 <serialize_in_addrs+0x78>
  24ed8c:	mov	w0, #0x20                  	// #32
  24ed90:	mov	x1, x23
  24ed94:	bl	255070 <fputc@plt>
  24ed98:	mov	x2, sp
  24ed9c:	mov	w0, #0x2                   	// #2
  24eda0:	mov	w3, #0x10                  	// #16
  24eda4:	mov	x1, x22
  24eda8:	bl	255080 <inet_ntop@plt>
  24edac:	mov	x1, x23
  24edb0:	bl	255090 <fputs@plt>
  24edb4:	add	x24, x24, #0x1
  24edb8:	subs	x20, x20, #0x1
  24edbc:	add	x22, x22, #0x4
  24edc0:	b.eq	24ede4 <serialize_in_addrs+0x98>  // b.none
  24edc4:	cbz	x19, 24edd4 <serialize_in_addrs+0x88>
  24edc8:	mov	x0, x22
  24edcc:	blr	x19
  24edd0:	tbz	w0, #0, 24edb8 <serialize_in_addrs+0x6c>
  24edd4:	tbnz	w21, #0, 24ed8c <serialize_in_addrs+0x40>
  24edd8:	mov	w21, #0x1                   	// #1
  24eddc:	b	24ed98 <serialize_in_addrs+0x4c>
  24ede0:	mov	x24, xzr
  24ede4:	mov	x0, x24
  24ede8:	ldp	x20, x19, [sp, #64]
  24edec:	ldp	x22, x21, [sp, #48]
  24edf0:	ldp	x24, x23, [sp, #32]
  24edf4:	ldp	x29, x30, [sp, #16]
  24edf8:	add	sp, sp, #0x50
  24edfc:	ret
  24ee00:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24ee04:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ee08:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24ee0c:	add	x1, x1, #0x15d
  24ee10:	add	x2, x2, #0x6c4
  24ee14:	add	x4, x4, #0xc08
  24ee18:	mov	w3, #0x26b                 	// #619
  24ee1c:	bl	253740 <log_assert_failed_realm@plt>
  24ee20:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24ee24:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ee28:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24ee2c:	add	x1, x1, #0xd80
  24ee30:	add	x2, x2, #0x6c4
  24ee34:	add	x4, x4, #0xc08
  24ee38:	mov	w3, #0x26c                 	// #620
  24ee3c:	mov	w0, wzr
  24ee40:	bl	253740 <log_assert_failed_realm@plt>

000000000024ee44 <deserialize_in_addrs>:
  24ee44:	sub	sp, sp, #0x70
  24ee48:	stp	x29, x30, [sp, #32]
  24ee4c:	add	x29, sp, #0x20
  24ee50:	stp	x26, x25, [sp, #48]
  24ee54:	stp	x24, x23, [sp, #64]
  24ee58:	stp	x22, x21, [sp, #80]
  24ee5c:	stp	x20, x19, [sp, #96]
  24ee60:	stur	x1, [x29, #-8]
  24ee64:	str	xzr, [sp, #16]
  24ee68:	cbz	x0, 24ef70 <deserialize_in_addrs+0x12c>
  24ee6c:	cbz	x1, 24ef90 <deserialize_in_addrs+0x14c>
  24ee70:	ldr	x21, [sp, #16]
  24ee74:	mov	x20, x0
  24ee78:	mov	w19, wzr
  24ee7c:	mov	w23, #0x7                   	// #7
  24ee80:	sub	x0, x29, #0x8
  24ee84:	add	x1, sp, #0x8
  24ee88:	mov	x2, xzr
  24ee8c:	mov	w3, wzr
  24ee90:	str	xzr, [sp, #8]
  24ee94:	bl	254fe0 <extract_first_word@plt>
  24ee98:	tbnz	w0, #31, 24eee0 <deserialize_in_addrs+0x9c>
  24ee9c:	cbz	w0, 24eeec <deserialize_in_addrs+0xa8>
  24eea0:	add	w26, w19, #0x1
  24eea4:	sxtw	x1, w26
  24eea8:	mov	w2, #0x4                   	// #4
  24eeac:	mov	x0, x21
  24eeb0:	bl	254f30 <reallocarray@plt>
  24eeb4:	cbz	x0, 24eef4 <deserialize_in_addrs+0xb0>
  24eeb8:	ldr	x1, [sp, #8]
  24eebc:	mov	x22, x0
  24eec0:	add	x2, x0, w19, sxtw #2
  24eec4:	mov	w0, #0x2                   	// #2
  24eec8:	bl	2550a0 <inet_pton@plt>
  24eecc:	cmp	w0, #0x1
  24eed0:	csel	w25, w23, wzr, lt  // lt = tstop
  24eed4:	csel	w19, w19, w26, lt  // lt = tstop
  24eed8:	mov	x21, x22
  24eedc:	b	24eefc <deserialize_in_addrs+0xb8>
  24eee0:	mov	w25, #0x1                   	// #1
  24eee4:	mov	w24, w0
  24eee8:	b	24eefc <deserialize_in_addrs+0xb8>
  24eeec:	mov	w25, #0x6                   	// #6
  24eef0:	b	24eefc <deserialize_in_addrs+0xb8>
  24eef4:	mov	w24, #0xfffffff4            	// #-12
  24eef8:	mov	w25, #0x1                   	// #1
  24eefc:	add	x0, sp, #0x8
  24ef00:	bl	24deec <freep>
  24ef04:	cbz	w25, 24ee80 <deserialize_in_addrs+0x3c>
  24ef08:	cmp	w25, #0x7
  24ef0c:	b.eq	24ee80 <deserialize_in_addrs+0x3c>  // b.none
  24ef10:	cmp	w25, #0x6
  24ef14:	b.ne	24ef34 <deserialize_in_addrs+0xf0>  // b.any
  24ef18:	cmp	w19, #0x1
  24ef1c:	str	x21, [sp, #16]
  24ef20:	b.lt	24ef40 <deserialize_in_addrs+0xfc>  // b.tstop
  24ef24:	ldr	x8, [sp, #16]
  24ef28:	str	xzr, [sp, #16]
  24ef2c:	str	x8, [x20]
  24ef30:	b	24ef48 <deserialize_in_addrs+0x104>
  24ef34:	mov	w19, w24
  24ef38:	str	x21, [sp, #16]
  24ef3c:	b	24ef48 <deserialize_in_addrs+0x104>
  24ef40:	mov	x8, xzr
  24ef44:	str	xzr, [x20]
  24ef48:	add	x0, sp, #0x10
  24ef4c:	bl	24deec <freep>
  24ef50:	mov	w0, w19
  24ef54:	ldp	x20, x19, [sp, #96]
  24ef58:	ldp	x22, x21, [sp, #80]
  24ef5c:	ldp	x24, x23, [sp, #64]
  24ef60:	ldp	x26, x25, [sp, #48]
  24ef64:	ldp	x29, x30, [sp, #32]
  24ef68:	add	sp, sp, #0x70
  24ef6c:	ret
  24ef70:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24ef74:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ef78:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24ef7c:	add	x1, x1, #0xb2b
  24ef80:	add	x2, x2, #0x6c4
  24ef84:	add	x4, x4, #0xa40
  24ef88:	mov	w3, #0x284                 	// #644
  24ef8c:	bl	253740 <log_assert_failed_realm@plt>
  24ef90:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24ef94:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24ef98:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24ef9c:	add	x1, x1, #0xc71
  24efa0:	add	x2, x2, #0x6c4
  24efa4:	add	x4, x4, #0xa40
  24efa8:	mov	w3, #0x285                 	// #645
  24efac:	mov	w0, wzr
  24efb0:	bl	253740 <log_assert_failed_realm@plt>

000000000024efb4 <serialize_in6_addrs>:
  24efb4:	sub	sp, sp, #0x70
  24efb8:	stp	x29, x30, [sp, #48]
  24efbc:	stp	x24, x23, [sp, #64]
  24efc0:	stp	x22, x21, [sp, #80]
  24efc4:	stp	x20, x19, [sp, #96]
  24efc8:	add	x29, sp, #0x30
  24efcc:	cbz	x0, 24f050 <serialize_in6_addrs+0x9c>
  24efd0:	mov	x20, x1
  24efd4:	cbz	x1, 24f070 <serialize_in6_addrs+0xbc>
  24efd8:	mov	x19, x2
  24efdc:	cbz	x2, 24f094 <serialize_in6_addrs+0xe0>
  24efe0:	mov	x21, x0
  24efe4:	mov	x24, xzr
  24efe8:	sub	x22, x19, #0x1
  24efec:	mov	w23, #0x1                   	// #1
  24eff0:	b	24f004 <serialize_in6_addrs+0x50>
  24eff4:	mov	w24, w23
  24eff8:	cmp	x24, x19
  24effc:	add	w23, w23, #0x1
  24f000:	b.cs	24f038 <serialize_in6_addrs+0x84>  // b.hs, b.nlast
  24f004:	add	x1, x20, x24, lsl #4
  24f008:	mov	x2, sp
  24f00c:	mov	w0, #0xa                   	// #10
  24f010:	mov	w3, #0x2e                  	// #46
  24f014:	bl	255080 <inet_ntop@plt>
  24f018:	mov	x1, x21
  24f01c:	bl	255090 <fputs@plt>
  24f020:	cmp	x22, x24
  24f024:	b.ls	24eff4 <serialize_in6_addrs+0x40>  // b.plast
  24f028:	mov	w0, #0x20                  	// #32
  24f02c:	mov	x1, x21
  24f030:	bl	255070 <fputc@plt>
  24f034:	b	24eff4 <serialize_in6_addrs+0x40>
  24f038:	ldp	x20, x19, [sp, #96]
  24f03c:	ldp	x22, x21, [sp, #80]
  24f040:	ldp	x24, x23, [sp, #64]
  24f044:	ldp	x29, x30, [sp, #48]
  24f048:	add	sp, sp, #0x70
  24f04c:	ret
  24f050:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24f054:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f058:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f05c:	add	x1, x1, #0x15d
  24f060:	add	x2, x2, #0x6c4
  24f064:	add	x4, x4, #0x163
  24f068:	mov	w3, #0x2a7                 	// #679
  24f06c:	bl	253740 <log_assert_failed_realm@plt>
  24f070:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24f074:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f078:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f07c:	add	x1, x1, #0xd80
  24f080:	add	x2, x2, #0x6c4
  24f084:	add	x4, x4, #0x163
  24f088:	mov	w3, #0x2a8                 	// #680
  24f08c:	mov	w0, wzr
  24f090:	bl	253740 <log_assert_failed_realm@plt>
  24f094:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24f098:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f09c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f0a0:	add	x1, x1, #0xc78
  24f0a4:	add	x2, x2, #0x6c4
  24f0a8:	add	x4, x4, #0x163
  24f0ac:	mov	w3, #0x2a9                 	// #681
  24f0b0:	mov	w0, wzr
  24f0b4:	bl	253740 <log_assert_failed_realm@plt>

000000000024f0b8 <deserialize_in6_addrs>:
  24f0b8:	sub	sp, sp, #0x70
  24f0bc:	stp	x29, x30, [sp, #32]
  24f0c0:	add	x29, sp, #0x20
  24f0c4:	stp	x26, x25, [sp, #48]
  24f0c8:	stp	x24, x23, [sp, #64]
  24f0cc:	stp	x22, x21, [sp, #80]
  24f0d0:	stp	x20, x19, [sp, #96]
  24f0d4:	stur	x1, [x29, #-8]
  24f0d8:	str	xzr, [sp, #16]
  24f0dc:	cbz	x0, 24f1c8 <deserialize_in6_addrs+0x110>
  24f0e0:	cbz	x1, 24f1e8 <deserialize_in6_addrs+0x130>
  24f0e4:	ldr	x21, [sp, #16]
  24f0e8:	mov	x20, x0
  24f0ec:	mov	w19, wzr
  24f0f0:	mov	w23, #0x7                   	// #7
  24f0f4:	sub	x0, x29, #0x8
  24f0f8:	add	x1, sp, #0x8
  24f0fc:	mov	x2, xzr
  24f100:	mov	w3, wzr
  24f104:	str	xzr, [sp, #8]
  24f108:	bl	254fe0 <extract_first_word@plt>
  24f10c:	tbnz	w0, #31, 24f154 <deserialize_in6_addrs+0x9c>
  24f110:	cbz	w0, 24f160 <deserialize_in6_addrs+0xa8>
  24f114:	add	w26, w19, #0x1
  24f118:	sxtw	x1, w26
  24f11c:	mov	w2, #0x10                  	// #16
  24f120:	mov	x0, x21
  24f124:	bl	254f30 <reallocarray@plt>
  24f128:	cbz	x0, 24f168 <deserialize_in6_addrs+0xb0>
  24f12c:	ldr	x1, [sp, #8]
  24f130:	mov	x22, x0
  24f134:	add	x2, x0, w19, sxtw #4
  24f138:	mov	w0, #0xa                   	// #10
  24f13c:	bl	2550a0 <inet_pton@plt>
  24f140:	cmp	w0, #0x1
  24f144:	csel	w25, w23, wzr, lt  // lt = tstop
  24f148:	csel	w19, w19, w26, lt  // lt = tstop
  24f14c:	mov	x21, x22
  24f150:	b	24f170 <deserialize_in6_addrs+0xb8>
  24f154:	mov	w25, #0x1                   	// #1
  24f158:	mov	w24, w0
  24f15c:	b	24f170 <deserialize_in6_addrs+0xb8>
  24f160:	mov	w25, #0x6                   	// #6
  24f164:	b	24f170 <deserialize_in6_addrs+0xb8>
  24f168:	mov	w24, #0xfffffff4            	// #-12
  24f16c:	mov	w25, #0x1                   	// #1
  24f170:	add	x0, sp, #0x8
  24f174:	bl	24deec <freep>
  24f178:	cbz	w25, 24f0f4 <deserialize_in6_addrs+0x3c>
  24f17c:	cmp	w25, #0x7
  24f180:	b.eq	24f0f4 <deserialize_in6_addrs+0x3c>  // b.none
  24f184:	cmp	w25, #0x6
  24f188:	b.ne	24f198 <deserialize_in6_addrs+0xe0>  // b.any
  24f18c:	str	xzr, [sp, #16]
  24f190:	str	x21, [x20]
  24f194:	b	24f1a0 <deserialize_in6_addrs+0xe8>
  24f198:	mov	w19, w24
  24f19c:	str	x21, [sp, #16]
  24f1a0:	add	x0, sp, #0x10
  24f1a4:	bl	24deec <freep>
  24f1a8:	mov	w0, w19
  24f1ac:	ldp	x20, x19, [sp, #96]
  24f1b0:	ldp	x22, x21, [sp, #80]
  24f1b4:	ldp	x24, x23, [sp, #64]
  24f1b8:	ldp	x26, x25, [sp, #48]
  24f1bc:	ldp	x29, x30, [sp, #32]
  24f1c0:	add	sp, sp, #0x70
  24f1c4:	ret
  24f1c8:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24f1cc:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f1d0:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24f1d4:	add	x1, x1, #0xb2b
  24f1d8:	add	x2, x2, #0x6c4
  24f1dc:	add	x4, x4, #0xc0b
  24f1e0:	mov	w3, #0x2b9                 	// #697
  24f1e4:	bl	253740 <log_assert_failed_realm@plt>
  24f1e8:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24f1ec:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f1f0:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  24f1f4:	add	x1, x1, #0xc71
  24f1f8:	add	x2, x2, #0x6c4
  24f1fc:	add	x4, x4, #0xc0b
  24f200:	mov	w3, #0x2ba                 	// #698
  24f204:	mov	w0, wzr
  24f208:	bl	253740 <log_assert_failed_realm@plt>

000000000024f20c <serialize_dhcp_routes>:
  24f20c:	sub	sp, sp, #0x90
  24f210:	stp	x29, x30, [sp, #48]
  24f214:	stp	x28, x27, [sp, #64]
  24f218:	stp	x26, x25, [sp, #80]
  24f21c:	stp	x24, x23, [sp, #96]
  24f220:	stp	x22, x21, [sp, #112]
  24f224:	stp	x20, x19, [sp, #128]
  24f228:	add	x29, sp, #0x30
  24f22c:	cbz	x0, 24f3b0 <serialize_dhcp_routes+0x1a4>
  24f230:	mov	x21, x2
  24f234:	mov	x2, x1
  24f238:	cbz	x1, 24f3d0 <serialize_dhcp_routes+0x1c4>
  24f23c:	cbz	x21, 24f3f4 <serialize_dhcp_routes+0x1e8>
  24f240:	mov	x20, x3
  24f244:	cbz	x3, 24f418 <serialize_dhcp_routes+0x20c>
  24f248:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  24f24c:	add	x1, x1, #0xe4c
  24f250:	mov	x19, x0
  24f254:	bl	254780 <fprintf@plt>
  24f258:	adrp	x22, 213000 <worker_hash_op+0x8ad0>
  24f25c:	adrp	x27, 216000 <worker_hash_op+0xbad0>
  24f260:	adrp	x28, 20c000 <worker_hash_op+0x1ad0>
  24f264:	adrp	x23, 217000 <worker_hash_op+0xcad0>
  24f268:	mov	x26, xzr
  24f26c:	sub	x24, x20, #0x1
  24f270:	mov	w25, #0x1                   	// #1
  24f274:	add	x22, x22, #0x758
  24f278:	add	x27, x27, #0x7fa
  24f27c:	add	x28, x28, #0x6c2
  24f280:	add	x23, x23, #0x399
  24f284:	ldr	x0, [x21, x26, lsl #3]
  24f288:	add	x1, sp, #0x18
  24f28c:	bl	253148 <sd_dhcp_route_get_destination>
  24f290:	tbnz	w0, #31, 24f344 <serialize_dhcp_routes+0x138>
  24f294:	ldr	x0, [x21, x26, lsl #3]
  24f298:	add	x1, sp, #0x10
  24f29c:	bl	253238 <sd_dhcp_route_get_gateway>
  24f2a0:	tbnz	w0, #31, 24f368 <serialize_dhcp_routes+0x15c>
  24f2a4:	ldr	x0, [x21, x26, lsl #3]
  24f2a8:	add	x1, sp, #0xc
  24f2ac:	bl	2531c0 <sd_dhcp_route_get_destination_prefix_length>
  24f2b0:	tbnz	w0, #31, 24f38c <serialize_dhcp_routes+0x180>
  24f2b4:	add	x1, sp, #0x18
  24f2b8:	sub	x2, x29, #0x10
  24f2bc:	mov	w0, #0x2                   	// #2
  24f2c0:	mov	w3, #0x10                  	// #16
  24f2c4:	bl	255080 <inet_ntop@plt>
  24f2c8:	ldrb	w3, [sp, #12]
  24f2cc:	mov	x2, x0
  24f2d0:	mov	x0, x19
  24f2d4:	mov	x1, x22
  24f2d8:	bl	254780 <fprintf@plt>
  24f2dc:	add	x1, sp, #0x10
  24f2e0:	sub	x2, x29, #0x10
  24f2e4:	mov	w0, #0x2                   	// #2
  24f2e8:	mov	w3, #0x10                  	// #16
  24f2ec:	bl	255080 <inet_ntop@plt>
  24f2f0:	cmp	x24, x26
  24f2f4:	mov	x2, x0
  24f2f8:	csel	x3, x28, x27, hi  // hi = pmore
  24f2fc:	mov	x0, x19
  24f300:	mov	x1, x23
  24f304:	bl	254780 <fprintf@plt>
  24f308:	mov	w26, w25
  24f30c:	cmp	x26, x20
  24f310:	add	w25, w25, #0x1
  24f314:	b.cc	24f284 <serialize_dhcp_routes+0x78>  // b.lo, b.ul, b.last
  24f318:	mov	w0, #0xa                   	// #10
  24f31c:	mov	x1, x19
  24f320:	bl	255070 <fputc@plt>
  24f324:	ldp	x20, x19, [sp, #128]
  24f328:	ldp	x22, x21, [sp, #112]
  24f32c:	ldp	x24, x23, [sp, #96]
  24f330:	ldp	x26, x25, [sp, #80]
  24f334:	ldp	x28, x27, [sp, #64]
  24f338:	ldp	x29, x30, [sp, #48]
  24f33c:	add	sp, sp, #0x90
  24f340:	ret
  24f344:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24f348:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f34c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f350:	add	x1, x1, #0xd8a
  24f354:	add	x2, x2, #0x6c4
  24f358:	add	x4, x4, #0x1a5
  24f35c:	mov	w3, #0x2e8                 	// #744
  24f360:	mov	w0, wzr
  24f364:	bl	253740 <log_assert_failed_realm@plt>
  24f368:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24f36c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f370:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f374:	add	x1, x1, #0x5d8
  24f378:	add	x2, x2, #0x6c4
  24f37c:	add	x4, x4, #0x1a5
  24f380:	mov	w3, #0x2e9                 	// #745
  24f384:	mov	w0, wzr
  24f388:	bl	253740 <log_assert_failed_realm@plt>
  24f38c:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24f390:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f394:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f398:	add	x1, x1, #0xafb
  24f39c:	add	x2, x2, #0x6c4
  24f3a0:	add	x4, x4, #0x1a5
  24f3a4:	mov	w3, #0x2ea                 	// #746
  24f3a8:	mov	w0, wzr
  24f3ac:	bl	253740 <log_assert_failed_realm@plt>
  24f3b0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24f3b4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f3b8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f3bc:	add	x1, x1, #0x15d
  24f3c0:	add	x2, x2, #0x6c4
  24f3c4:	add	x4, x4, #0x1a5
  24f3c8:	mov	w3, #0x2dc                 	// #732
  24f3cc:	bl	253740 <log_assert_failed_realm@plt>
  24f3d0:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24f3d4:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f3d8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f3dc:	add	x1, x1, #0xc4b
  24f3e0:	add	x2, x2, #0x6c4
  24f3e4:	add	x4, x4, #0x1a5
  24f3e8:	mov	w3, #0x2dd                 	// #733
  24f3ec:	mov	w0, wzr
  24f3f0:	bl	253740 <log_assert_failed_realm@plt>
  24f3f4:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  24f3f8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f3fc:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f400:	add	x1, x1, #0x78e
  24f404:	add	x2, x2, #0x6c4
  24f408:	add	x4, x4, #0x1a5
  24f40c:	mov	w3, #0x2de                 	// #734
  24f410:	mov	w0, wzr
  24f414:	bl	253740 <log_assert_failed_realm@plt>
  24f418:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24f41c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f420:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24f424:	add	x1, x1, #0xc78
  24f428:	add	x2, x2, #0x6c4
  24f42c:	add	x4, x4, #0x1a5
  24f430:	mov	w3, #0x2df                 	// #735
  24f434:	mov	w0, wzr
  24f438:	bl	253740 <log_assert_failed_realm@plt>

000000000024f43c <deserialize_dhcp_routes>:
  24f43c:	sub	sp, sp, #0x90
  24f440:	stp	x29, x30, [sp, #48]
  24f444:	add	x29, sp, #0x30
  24f448:	stp	x28, x27, [sp, #64]
  24f44c:	stp	x26, x25, [sp, #80]
  24f450:	stp	x24, x23, [sp, #96]
  24f454:	stp	x22, x21, [sp, #112]
  24f458:	stp	x20, x19, [sp, #128]
  24f45c:	stp	xzr, x3, [x29, #-16]
  24f460:	str	xzr, [sp, #24]
  24f464:	cbz	x0, 24f5e4 <deserialize_dhcp_routes+0x1a8>
  24f468:	mov	x21, x1
  24f46c:	cbz	x1, 24f604 <deserialize_dhcp_routes+0x1c8>
  24f470:	mov	x20, x2
  24f474:	cbz	x2, 24f628 <deserialize_dhcp_routes+0x1ec>
  24f478:	cbz	x3, 24f64c <deserialize_dhcp_routes+0x210>
  24f47c:	mov	x19, x0
  24f480:	mov	x26, xzr
  24f484:	mov	w27, #0xc                   	// #12
  24f488:	mov	w28, #0xb                   	// #11
  24f48c:	sub	x0, x29, #0x8
  24f490:	add	x1, sp, #0x10
  24f494:	mov	x2, xzr
  24f498:	mov	w3, wzr
  24f49c:	str	xzr, [sp, #16]
  24f4a0:	bl	254fe0 <extract_first_word@plt>
  24f4a4:	tbnz	w0, #31, 24f55c <deserialize_dhcp_routes+0x120>
  24f4a8:	cbz	w0, 24f568 <deserialize_dhcp_routes+0x12c>
  24f4ac:	add	x23, x26, #0x1
  24f4b0:	sub	x0, x29, #0x10
  24f4b4:	add	x1, sp, #0x18
  24f4b8:	mov	w3, #0xc                   	// #12
  24f4bc:	mov	x2, x23
  24f4c0:	bl	254f60 <greedy_realloc@plt>
  24f4c4:	cbz	x0, 24f578 <deserialize_dhcp_routes+0x13c>
  24f4c8:	ldr	x25, [sp, #16]
  24f4cc:	mov	w1, #0x2f                  	// #47
  24f4d0:	mov	x0, x25
  24f4d4:	bl	253a60 <strchr@plt>
  24f4d8:	cbz	x0, 24f570 <deserialize_dhcp_routes+0x134>
  24f4dc:	strb	wzr, [x0]
  24f4e0:	ldur	x8, [x29, #-16]
  24f4e4:	mov	x24, x0
  24f4e8:	mov	x0, x25
  24f4ec:	madd	x1, x26, x27, x8
  24f4f0:	bl	2550b0 <inet_aton@plt>
  24f4f4:	cbz	w0, 24f570 <deserialize_dhcp_routes+0x134>
  24f4f8:	add	x25, x24, #0x1
  24f4fc:	mov	w1, #0x2c                  	// #44
  24f500:	mov	x0, x25
  24f504:	bl	253a60 <strchr@plt>
  24f508:	cbz	x0, 24f570 <deserialize_dhcp_routes+0x134>
  24f50c:	mov	x24, x0
  24f510:	strb	wzr, [x0]
  24f514:	add	x1, sp, #0xc
  24f518:	mov	x0, x25
  24f51c:	bl	24f670 <safe_atou>
  24f520:	mov	w25, #0xb                   	// #11
  24f524:	tbnz	w0, #31, 24f580 <deserialize_dhcp_routes+0x144>
  24f528:	ldr	w8, [sp, #12]
  24f52c:	cmp	w8, #0x20
  24f530:	b.hi	24f580 <deserialize_dhcp_routes+0x144>  // b.pmore
  24f534:	ldur	x9, [x29, #-16]
  24f538:	add	x0, x24, #0x1
  24f53c:	madd	x9, x26, x27, x9
  24f540:	add	x1, x9, #0x4
  24f544:	strb	w8, [x9, #8]
  24f548:	bl	2550b0 <inet_aton@plt>
  24f54c:	cmp	w0, #0x0
  24f550:	csel	w25, w28, wzr, eq  // eq = none
  24f554:	csel	x26, x26, x23, eq  // eq = none
  24f558:	b	24f580 <deserialize_dhcp_routes+0x144>
  24f55c:	mov	w25, #0x1                   	// #1
  24f560:	mov	w22, w0
  24f564:	b	24f580 <deserialize_dhcp_routes+0x144>
  24f568:	mov	w25, #0xa                   	// #10
  24f56c:	b	24f580 <deserialize_dhcp_routes+0x144>
  24f570:	mov	w25, #0xb                   	// #11
  24f574:	b	24f580 <deserialize_dhcp_routes+0x144>
  24f578:	mov	w22, #0xfffffff4            	// #-12
  24f57c:	mov	w25, #0x1                   	// #1
  24f580:	add	x0, sp, #0x10
  24f584:	bl	24deec <freep>
  24f588:	cbz	w25, 24f48c <deserialize_dhcp_routes+0x50>
  24f58c:	cmp	w25, #0xb
  24f590:	b.eq	24f48c <deserialize_dhcp_routes+0x50>  // b.none
  24f594:	cmp	w25, #0xa
  24f598:	b.ne	24f5b8 <deserialize_dhcp_routes+0x17c>  // b.any
  24f59c:	str	x26, [x21]
  24f5a0:	ldr	x8, [sp, #24]
  24f5a4:	mov	w22, wzr
  24f5a8:	str	x8, [x20]
  24f5ac:	ldur	x8, [x29, #-16]
  24f5b0:	stur	xzr, [x29, #-16]
  24f5b4:	str	x8, [x19]
  24f5b8:	sub	x0, x29, #0x10
  24f5bc:	bl	24deec <freep>
  24f5c0:	mov	w0, w22
  24f5c4:	ldp	x20, x19, [sp, #128]
  24f5c8:	ldp	x22, x21, [sp, #112]
  24f5cc:	ldp	x24, x23, [sp, #96]
  24f5d0:	ldp	x26, x25, [sp, #80]
  24f5d4:	ldp	x28, x27, [sp, #64]
  24f5d8:	ldp	x29, x30, [sp, #48]
  24f5dc:	add	sp, sp, #0x90
  24f5e0:	ret
  24f5e4:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  24f5e8:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f5ec:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24f5f0:	add	x1, x1, #0xb2b
  24f5f4:	add	x2, x2, #0x6c4
  24f5f8:	add	x4, x4, #0x795
  24f5fc:	mov	w3, #0x2f7                 	// #759
  24f600:	bl	253740 <log_assert_failed_realm@plt>
  24f604:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  24f608:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f60c:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24f610:	add	x1, x1, #0x7ec
  24f614:	add	x2, x2, #0x6c4
  24f618:	add	x4, x4, #0x795
  24f61c:	mov	w3, #0x2f8                 	// #760
  24f620:	mov	w0, wzr
  24f624:	bl	253740 <log_assert_failed_realm@plt>
  24f628:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  24f62c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f630:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24f634:	add	x1, x1, #0xa7a
  24f638:	add	x2, x2, #0x6c4
  24f63c:	add	x4, x4, #0x795
  24f640:	mov	w3, #0x2f9                 	// #761
  24f644:	mov	w0, wzr
  24f648:	bl	253740 <log_assert_failed_realm@plt>
  24f64c:	adrp	x1, 210000 <worker_hash_op+0x5ad0>
  24f650:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f654:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24f658:	add	x1, x1, #0xc71
  24f65c:	add	x2, x2, #0x6c4
  24f660:	add	x4, x4, #0x795
  24f664:	mov	w3, #0x2fa                 	// #762
  24f668:	mov	w0, wzr
  24f66c:	bl	253740 <log_assert_failed_realm@plt>

000000000024f670 <safe_atou>:
  24f670:	stp	x29, x30, [sp, #-16]!
  24f674:	mov	x2, x1
  24f678:	mov	w1, wzr
  24f67c:	mov	x29, sp
  24f680:	bl	253970 <safe_atou_full@plt>
  24f684:	ldp	x29, x30, [sp], #16
  24f688:	ret

000000000024f68c <serialize_dhcp_option>:
  24f68c:	sub	sp, sp, #0x30
  24f690:	stp	x29, x30, [sp, #16]
  24f694:	stp	x20, x19, [sp, #32]
  24f698:	add	x29, sp, #0x10
  24f69c:	str	xzr, [sp, #8]
  24f6a0:	cbz	x0, 24f708 <serialize_dhcp_option+0x7c>
  24f6a4:	mov	x19, x1
  24f6a8:	cbz	x1, 24f728 <serialize_dhcp_option+0x9c>
  24f6ac:	cbz	x2, 24f74c <serialize_dhcp_option+0xc0>
  24f6b0:	mov	x20, x0
  24f6b4:	mov	x0, x2
  24f6b8:	mov	x1, x3
  24f6bc:	bl	2550c0 <hexmem@plt>
  24f6c0:	str	x0, [sp, #8]
  24f6c4:	cbz	x0, 24f6e8 <serialize_dhcp_option+0x5c>
  24f6c8:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  24f6cc:	mov	x3, x0
  24f6d0:	add	x1, x1, #0x2c1
  24f6d4:	mov	x0, x20
  24f6d8:	mov	x2, x19
  24f6dc:	bl	254780 <fprintf@plt>
  24f6e0:	mov	w19, wzr
  24f6e4:	b	24f6ec <serialize_dhcp_option+0x60>
  24f6e8:	mov	w19, #0xfffffff4            	// #-12
  24f6ec:	add	x0, sp, #0x8
  24f6f0:	bl	24deec <freep>
  24f6f4:	mov	w0, w19
  24f6f8:	ldp	x20, x19, [sp, #32]
  24f6fc:	ldp	x29, x30, [sp, #16]
  24f700:	add	sp, sp, #0x30
  24f704:	ret
  24f708:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24f70c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f710:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  24f714:	add	x1, x1, #0x15d
  24f718:	add	x2, x2, #0x6c4
  24f71c:	add	x4, x4, #0x602
  24f720:	mov	w3, #0x33a                 	// #826
  24f724:	bl	253740 <log_assert_failed_realm@plt>
  24f728:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  24f72c:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f730:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  24f734:	add	x1, x1, #0xc4b
  24f738:	add	x2, x2, #0x6c4
  24f73c:	add	x4, x4, #0x602
  24f740:	mov	w3, #0x33b                 	// #827
  24f744:	mov	w0, wzr
  24f748:	bl	253740 <log_assert_failed_realm@plt>
  24f74c:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  24f750:	adrp	x2, 20e000 <worker_hash_op+0x3ad0>
  24f754:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  24f758:	add	x1, x1, #0x1ea
  24f75c:	add	x2, x2, #0x6c4
  24f760:	add	x4, x4, #0x602
  24f764:	mov	w3, #0x33c                 	// #828
  24f768:	mov	w0, wzr
  24f76c:	bl	253740 <log_assert_failed_realm@plt>

000000000024f770 <strv_isempty>:
  24f770:	cbz	x0, 24f784 <strv_isempty+0x14>
  24f774:	ldr	x8, [x0]
  24f778:	cmp	x8, #0x0
  24f77c:	cset	w0, eq  // eq = none
  24f780:	ret
  24f784:	mov	w0, #0x1                   	// #1
  24f788:	ret

000000000024f78c <sd_dhcp_lease_get_address>:
  24f78c:	stp	x29, x30, [sp, #-16]!
  24f790:	mov	x29, sp
  24f794:	cbz	x0, 24f7c0 <sd_dhcp_lease_get_address+0x34>
  24f798:	cbz	x1, 24f7e0 <sd_dhcp_lease_get_address+0x54>
  24f79c:	ldr	w8, [x0, #16]
  24f7a0:	cbz	w8, 24f7b4 <sd_dhcp_lease_get_address+0x28>
  24f7a4:	mov	w0, wzr
  24f7a8:	str	w8, [x1]
  24f7ac:	ldp	x29, x30, [sp], #16
  24f7b0:	ret
  24f7b4:	mov	w0, #0xffffffc3            	// #-61
  24f7b8:	ldp	x29, x30, [sp], #16
  24f7bc:	ret
  24f7c0:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24f7c4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f7c8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24f7cc:	add	x1, x1, #0x3
  24f7d0:	add	x2, x2, #0xc80
  24f7d4:	add	x4, x4, #0xe6b
  24f7d8:	mov	w3, #0x22                  	// #34
  24f7dc:	b	24f800 <sd_dhcp_lease_get_address+0x74>
  24f7e0:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24f7e4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f7e8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24f7ec:	add	x1, x1, #0xf8a
  24f7f0:	add	x2, x2, #0xc80
  24f7f4:	add	x4, x4, #0xe6b
  24f7f8:	mov	w3, #0x23                  	// #35
  24f7fc:	mov	w0, wzr
  24f800:	bl	253f10 <log_assert_failed_return_realm@plt>
  24f804:	mov	w0, #0xffffffea            	// #-22
  24f808:	ldp	x29, x30, [sp], #16
  24f80c:	ret

000000000024f810 <sd_dhcp_lease_get_broadcast>:
  24f810:	stp	x29, x30, [sp, #-16]!
  24f814:	mov	x29, sp
  24f818:	cbz	x0, 24f84c <sd_dhcp_lease_get_broadcast+0x3c>
  24f81c:	cbz	x1, 24f86c <sd_dhcp_lease_get_broadcast+0x5c>
  24f820:	ldrb	w9, [x0, #36]
  24f824:	mov	x8, x0
  24f828:	cbz	w9, 24f840 <sd_dhcp_lease_get_broadcast+0x30>
  24f82c:	ldr	w8, [x8, #40]
  24f830:	mov	w0, wzr
  24f834:	str	w8, [x1]
  24f838:	ldp	x29, x30, [sp], #16
  24f83c:	ret
  24f840:	mov	w0, #0xffffffc3            	// #-61
  24f844:	ldp	x29, x30, [sp], #16
  24f848:	ret
  24f84c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24f850:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f854:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24f858:	add	x1, x1, #0x3
  24f85c:	add	x2, x2, #0xc80
  24f860:	add	x4, x4, #0x607
  24f864:	mov	w3, #0x2d                  	// #45
  24f868:	b	24f88c <sd_dhcp_lease_get_broadcast+0x7c>
  24f86c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24f870:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f874:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24f878:	add	x1, x1, #0xf8a
  24f87c:	add	x2, x2, #0xc80
  24f880:	add	x4, x4, #0x607
  24f884:	mov	w3, #0x2e                  	// #46
  24f888:	mov	w0, wzr
  24f88c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24f890:	mov	w0, #0xffffffea            	// #-22
  24f894:	ldp	x29, x30, [sp], #16
  24f898:	ret

000000000024f89c <sd_dhcp_lease_get_lifetime>:
  24f89c:	stp	x29, x30, [sp, #-16]!
  24f8a0:	mov	x29, sp
  24f8a4:	cbz	x0, 24f8d0 <sd_dhcp_lease_get_lifetime+0x34>
  24f8a8:	cbz	x1, 24f8f0 <sd_dhcp_lease_get_lifetime+0x54>
  24f8ac:	ldr	w8, [x0, #12]
  24f8b0:	cbz	w8, 24f8c4 <sd_dhcp_lease_get_lifetime+0x28>
  24f8b4:	mov	w0, wzr
  24f8b8:	str	w8, [x1]
  24f8bc:	ldp	x29, x30, [sp], #16
  24f8c0:	ret
  24f8c4:	mov	w0, #0xffffffc3            	// #-61
  24f8c8:	ldp	x29, x30, [sp], #16
  24f8cc:	ret
  24f8d0:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24f8d4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f8d8:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24f8dc:	add	x1, x1, #0x3
  24f8e0:	add	x2, x2, #0xc80
  24f8e4:	add	x4, x4, #0xe50
  24f8e8:	mov	w3, #0x38                  	// #56
  24f8ec:	b	24f910 <sd_dhcp_lease_get_lifetime+0x74>
  24f8f0:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24f8f4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f8f8:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24f8fc:	add	x1, x1, #0x9c3
  24f900:	add	x2, x2, #0xc80
  24f904:	add	x4, x4, #0xe50
  24f908:	mov	w3, #0x39                  	// #57
  24f90c:	mov	w0, wzr
  24f910:	bl	253f10 <log_assert_failed_return_realm@plt>
  24f914:	mov	w0, #0xffffffea            	// #-22
  24f918:	ldp	x29, x30, [sp], #16
  24f91c:	ret

000000000024f920 <sd_dhcp_lease_get_t1>:
  24f920:	stp	x29, x30, [sp, #-16]!
  24f924:	mov	x29, sp
  24f928:	cbz	x0, 24f954 <sd_dhcp_lease_get_t1+0x34>
  24f92c:	cbz	x1, 24f974 <sd_dhcp_lease_get_t1+0x54>
  24f930:	ldr	w8, [x0, #4]
  24f934:	cbz	w8, 24f948 <sd_dhcp_lease_get_t1+0x28>
  24f938:	mov	w0, wzr
  24f93c:	str	w8, [x1]
  24f940:	ldp	x29, x30, [sp], #16
  24f944:	ret
  24f948:	mov	w0, #0xffffffc3            	// #-61
  24f94c:	ldp	x29, x30, [sp], #16
  24f950:	ret
  24f954:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24f958:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f95c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24f960:	add	x1, x1, #0x3
  24f964:	add	x2, x2, #0xc80
  24f968:	add	x4, x4, #0x9
  24f96c:	mov	w3, #0x43                  	// #67
  24f970:	b	24f994 <sd_dhcp_lease_get_t1+0x74>
  24f974:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24f978:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f97c:	adrp	x4, 20e000 <worker_hash_op+0x3ad0>
  24f980:	add	x1, x1, #0x813
  24f984:	add	x2, x2, #0xc80
  24f988:	add	x4, x4, #0x9
  24f98c:	mov	w3, #0x44                  	// #68
  24f990:	mov	w0, wzr
  24f994:	bl	253f10 <log_assert_failed_return_realm@plt>
  24f998:	mov	w0, #0xffffffea            	// #-22
  24f99c:	ldp	x29, x30, [sp], #16
  24f9a0:	ret

000000000024f9a4 <sd_dhcp_lease_get_t2>:
  24f9a4:	stp	x29, x30, [sp, #-16]!
  24f9a8:	mov	x29, sp
  24f9ac:	cbz	x0, 24f9d8 <sd_dhcp_lease_get_t2+0x34>
  24f9b0:	cbz	x1, 24f9f8 <sd_dhcp_lease_get_t2+0x54>
  24f9b4:	ldr	w8, [x0, #8]
  24f9b8:	cbz	w8, 24f9cc <sd_dhcp_lease_get_t2+0x28>
  24f9bc:	mov	w0, wzr
  24f9c0:	str	w8, [x1]
  24f9c4:	ldp	x29, x30, [sp], #16
  24f9c8:	ret
  24f9cc:	mov	w0, #0xffffffc3            	// #-61
  24f9d0:	ldp	x29, x30, [sp], #16
  24f9d4:	ret
  24f9d8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24f9dc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24f9e0:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24f9e4:	add	x1, x1, #0x3
  24f9e8:	add	x2, x2, #0xc80
  24f9ec:	add	x4, x4, #0xeac
  24f9f0:	mov	w3, #0x4e                  	// #78
  24f9f4:	b	24fa18 <sd_dhcp_lease_get_t2+0x74>
  24f9f8:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  24f9fc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fa00:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  24fa04:	add	x1, x1, #0x1f4
  24fa08:	add	x2, x2, #0xc80
  24fa0c:	add	x4, x4, #0xeac
  24fa10:	mov	w3, #0x4f                  	// #79
  24fa14:	mov	w0, wzr
  24fa18:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fa1c:	mov	w0, #0xffffffea            	// #-22
  24fa20:	ldp	x29, x30, [sp], #16
  24fa24:	ret

000000000024fa28 <sd_dhcp_lease_get_mtu>:
  24fa28:	stp	x29, x30, [sp, #-16]!
  24fa2c:	mov	x29, sp
  24fa30:	cbz	x0, 24fa5c <sd_dhcp_lease_get_mtu+0x34>
  24fa34:	cbz	x1, 24fa7c <sd_dhcp_lease_get_mtu+0x54>
  24fa38:	ldrh	w8, [x0, #136]
  24fa3c:	cbz	w8, 24fa50 <sd_dhcp_lease_get_mtu+0x28>
  24fa40:	mov	w0, wzr
  24fa44:	strh	w8, [x1]
  24fa48:	ldp	x29, x30, [sp], #16
  24fa4c:	ret
  24fa50:	mov	w0, #0xffffffc3            	// #-61
  24fa54:	ldp	x29, x30, [sp], #16
  24fa58:	ret
  24fa5c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fa60:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fa64:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fa68:	add	x1, x1, #0x3
  24fa6c:	add	x2, x2, #0xc80
  24fa70:	add	x4, x4, #0x41
  24fa74:	mov	w3, #0x59                  	// #89
  24fa78:	b	24fa9c <sd_dhcp_lease_get_mtu+0x74>
  24fa7c:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  24fa80:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fa84:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fa88:	add	x1, x1, #0x766
  24fa8c:	add	x2, x2, #0xc80
  24fa90:	add	x4, x4, #0x41
  24fa94:	mov	w3, #0x5a                  	// #90
  24fa98:	mov	w0, wzr
  24fa9c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24faa0:	mov	w0, #0xffffffea            	// #-22
  24faa4:	ldp	x29, x30, [sp], #16
  24faa8:	ret

000000000024faac <sd_dhcp_lease_get_dns>:
  24faac:	stp	x29, x30, [sp, #-16]!
  24fab0:	mov	x29, sp
  24fab4:	cbz	x0, 24fae4 <sd_dhcp_lease_get_dns+0x38>
  24fab8:	cbz	x1, 24fb04 <sd_dhcp_lease_get_dns+0x58>
  24fabc:	mov	x8, x0
  24fac0:	ldr	x0, [x0, #72]
  24fac4:	cbz	x0, 24fad8 <sd_dhcp_lease_get_dns+0x2c>
  24fac8:	ldr	x8, [x8, #64]
  24facc:	str	x8, [x1]
  24fad0:	ldp	x29, x30, [sp], #16
  24fad4:	ret
  24fad8:	mov	w0, #0xffffffc3            	// #-61
  24fadc:	ldp	x29, x30, [sp], #16
  24fae0:	ret
  24fae4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fae8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24faec:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24faf0:	add	x1, x1, #0x3
  24faf4:	add	x2, x2, #0xc80
  24faf8:	add	x4, x4, #0x349
  24fafc:	mov	w3, #0x64                  	// #100
  24fb00:	b	24fb24 <sd_dhcp_lease_get_dns+0x78>
  24fb04:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24fb08:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fb0c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  24fb10:	add	x1, x1, #0xf8a
  24fb14:	add	x2, x2, #0xc80
  24fb18:	add	x4, x4, #0x349
  24fb1c:	mov	w3, #0x65                  	// #101
  24fb20:	mov	w0, wzr
  24fb24:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fb28:	mov	w0, #0xffffffea            	// #-22
  24fb2c:	ldp	x29, x30, [sp], #16
  24fb30:	ret

000000000024fb34 <sd_dhcp_lease_get_ntp>:
  24fb34:	stp	x29, x30, [sp, #-16]!
  24fb38:	mov	x29, sp
  24fb3c:	cbz	x0, 24fb6c <sd_dhcp_lease_get_ntp+0x38>
  24fb40:	cbz	x1, 24fb8c <sd_dhcp_lease_get_ntp+0x58>
  24fb44:	mov	x8, x0
  24fb48:	ldr	x0, [x0, #88]
  24fb4c:	cbz	x0, 24fb60 <sd_dhcp_lease_get_ntp+0x2c>
  24fb50:	ldr	x8, [x8, #80]
  24fb54:	str	x8, [x1]
  24fb58:	ldp	x29, x30, [sp], #16
  24fb5c:	ret
  24fb60:	mov	w0, #0xffffffc3            	// #-61
  24fb64:	ldp	x29, x30, [sp], #16
  24fb68:	ret
  24fb6c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fb70:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fb74:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24fb78:	add	x1, x1, #0x3
  24fb7c:	add	x2, x2, #0xc80
  24fb80:	add	x4, x4, #0x816
  24fb84:	mov	w3, #0x6f                  	// #111
  24fb88:	b	24fbac <sd_dhcp_lease_get_ntp+0x78>
  24fb8c:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24fb90:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fb94:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24fb98:	add	x1, x1, #0xf8a
  24fb9c:	add	x2, x2, #0xc80
  24fba0:	add	x4, x4, #0x816
  24fba4:	mov	w3, #0x70                  	// #112
  24fba8:	mov	w0, wzr
  24fbac:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fbb0:	mov	w0, #0xffffffea            	// #-22
  24fbb4:	ldp	x29, x30, [sp], #16
  24fbb8:	ret

000000000024fbbc <sd_dhcp_lease_get_sip>:
  24fbbc:	stp	x29, x30, [sp, #-16]!
  24fbc0:	mov	x29, sp
  24fbc4:	cbz	x0, 24fbf4 <sd_dhcp_lease_get_sip+0x38>
  24fbc8:	cbz	x1, 24fc14 <sd_dhcp_lease_get_sip+0x58>
  24fbcc:	mov	x8, x0
  24fbd0:	ldr	x0, [x0, #104]
  24fbd4:	cbz	x0, 24fbe8 <sd_dhcp_lease_get_sip+0x2c>
  24fbd8:	ldr	x8, [x8, #96]
  24fbdc:	str	x8, [x1]
  24fbe0:	ldp	x29, x30, [sp], #16
  24fbe4:	ret
  24fbe8:	mov	w0, #0xffffffc3            	// #-61
  24fbec:	ldp	x29, x30, [sp], #16
  24fbf0:	ret
  24fbf4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fbf8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fbfc:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fc00:	add	x1, x1, #0x3
  24fc04:	add	x2, x2, #0xc80
  24fc08:	add	x4, x4, #0xe8c
  24fc0c:	mov	w3, #0x7a                  	// #122
  24fc10:	b	24fc34 <sd_dhcp_lease_get_sip+0x78>
  24fc14:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24fc18:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fc1c:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fc20:	add	x1, x1, #0xf8a
  24fc24:	add	x2, x2, #0xc80
  24fc28:	add	x4, x4, #0xe8c
  24fc2c:	mov	w3, #0x7b                  	// #123
  24fc30:	mov	w0, wzr
  24fc34:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fc38:	mov	w0, #0xffffffea            	// #-22
  24fc3c:	ldp	x29, x30, [sp], #16
  24fc40:	ret

000000000024fc44 <sd_dhcp_lease_get_domainname>:
  24fc44:	stp	x29, x30, [sp, #-16]!
  24fc48:	mov	x29, sp
  24fc4c:	cbz	x0, 24fc78 <sd_dhcp_lease_get_domainname+0x34>
  24fc50:	cbz	x1, 24fc98 <sd_dhcp_lease_get_domainname+0x54>
  24fc54:	ldr	x8, [x0, #144]
  24fc58:	cbz	x8, 24fc6c <sd_dhcp_lease_get_domainname+0x28>
  24fc5c:	mov	w0, wzr
  24fc60:	str	x8, [x1]
  24fc64:	ldp	x29, x30, [sp], #16
  24fc68:	ret
  24fc6c:	mov	w0, #0xffffffc3            	// #-61
  24fc70:	ldp	x29, x30, [sp], #16
  24fc74:	ret
  24fc78:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fc7c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fc80:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fc84:	add	x1, x1, #0x3
  24fc88:	add	x2, x2, #0xc80
  24fc8c:	add	x4, x4, #0x78
  24fc90:	mov	w3, #0x85                  	// #133
  24fc94:	b	24fcb8 <sd_dhcp_lease_get_domainname+0x74>
  24fc98:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  24fc9c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fca0:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fca4:	add	x1, x1, #0x143
  24fca8:	add	x2, x2, #0xc80
  24fcac:	add	x4, x4, #0x78
  24fcb0:	mov	w3, #0x86                  	// #134
  24fcb4:	mov	w0, wzr
  24fcb8:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fcbc:	mov	w0, #0xffffffea            	// #-22
  24fcc0:	ldp	x29, x30, [sp], #16
  24fcc4:	ret

000000000024fcc8 <sd_dhcp_lease_get_hostname>:
  24fcc8:	stp	x29, x30, [sp, #-16]!
  24fccc:	mov	x29, sp
  24fcd0:	cbz	x0, 24fcfc <sd_dhcp_lease_get_hostname+0x34>
  24fcd4:	cbz	x1, 24fd1c <sd_dhcp_lease_get_hostname+0x54>
  24fcd8:	ldr	x8, [x0, #160]
  24fcdc:	cbz	x8, 24fcf0 <sd_dhcp_lease_get_hostname+0x28>
  24fce0:	mov	w0, wzr
  24fce4:	str	x8, [x1]
  24fce8:	ldp	x29, x30, [sp], #16
  24fcec:	ret
  24fcf0:	mov	w0, #0xffffffc3            	// #-61
  24fcf4:	ldp	x29, x30, [sp], #16
  24fcf8:	ret
  24fcfc:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fd00:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fd04:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fd08:	add	x1, x1, #0x3
  24fd0c:	add	x2, x2, #0xc80
  24fd10:	add	x4, x4, #0xb9
  24fd14:	mov	w3, #0x90                  	// #144
  24fd18:	b	24fd3c <sd_dhcp_lease_get_hostname+0x74>
  24fd1c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fd20:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fd24:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24fd28:	add	x1, x1, #0xd5e
  24fd2c:	add	x2, x2, #0xc80
  24fd30:	add	x4, x4, #0xb9
  24fd34:	mov	w3, #0x91                  	// #145
  24fd38:	mov	w0, wzr
  24fd3c:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fd40:	mov	w0, #0xffffffea            	// #-22
  24fd44:	ldp	x29, x30, [sp], #16
  24fd48:	ret

000000000024fd4c <sd_dhcp_lease_get_root_path>:
  24fd4c:	stp	x29, x30, [sp, #-16]!
  24fd50:	mov	x29, sp
  24fd54:	cbz	x0, 24fd80 <sd_dhcp_lease_get_root_path+0x34>
  24fd58:	cbz	x1, 24fda0 <sd_dhcp_lease_get_root_path+0x54>
  24fd5c:	ldr	x8, [x0, #168]
  24fd60:	cbz	x8, 24fd74 <sd_dhcp_lease_get_root_path+0x28>
  24fd64:	mov	w0, wzr
  24fd68:	str	x8, [x1]
  24fd6c:	ldp	x29, x30, [sp], #16
  24fd70:	ret
  24fd74:	mov	w0, #0xffffffc3            	// #-61
  24fd78:	ldp	x29, x30, [sp], #16
  24fd7c:	ret
  24fd80:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fd84:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fd88:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24fd8c:	add	x1, x1, #0x3
  24fd90:	add	x2, x2, #0xc80
  24fd94:	add	x4, x4, #0x39f
  24fd98:	mov	w3, #0x9b                  	// #155
  24fd9c:	b	24fdc0 <sd_dhcp_lease_get_root_path+0x74>
  24fda0:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  24fda4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fda8:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24fdac:	add	x1, x1, #0xc74
  24fdb0:	add	x2, x2, #0xc80
  24fdb4:	add	x4, x4, #0x39f
  24fdb8:	mov	w3, #0x9c                  	// #156
  24fdbc:	mov	w0, wzr
  24fdc0:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fdc4:	mov	w0, #0xffffffea            	// #-22
  24fdc8:	ldp	x29, x30, [sp], #16
  24fdcc:	ret

000000000024fdd0 <sd_dhcp_lease_get_router>:
  24fdd0:	stp	x29, x30, [sp, #-16]!
  24fdd4:	mov	x29, sp
  24fdd8:	cbz	x0, 24fe08 <sd_dhcp_lease_get_router+0x38>
  24fddc:	cbz	x1, 24fe28 <sd_dhcp_lease_get_router+0x58>
  24fde0:	mov	x8, x0
  24fde4:	ldr	x0, [x0, #56]
  24fde8:	cbz	x0, 24fdfc <sd_dhcp_lease_get_router+0x2c>
  24fdec:	ldr	x8, [x8, #48]
  24fdf0:	str	x8, [x1]
  24fdf4:	ldp	x29, x30, [sp], #16
  24fdf8:	ret
  24fdfc:	mov	w0, #0xffffffc3            	// #-61
  24fe00:	ldp	x29, x30, [sp], #16
  24fe04:	ret
  24fe08:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fe0c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fe10:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24fe14:	add	x1, x1, #0x3
  24fe18:	add	x2, x2, #0xc80
  24fe1c:	add	x4, x4, #0x85a
  24fe20:	mov	w3, #0xa6                  	// #166
  24fe24:	b	24fe48 <sd_dhcp_lease_get_router+0x78>
  24fe28:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24fe2c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fe30:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  24fe34:	add	x1, x1, #0xf8a
  24fe38:	add	x2, x2, #0xc80
  24fe3c:	add	x4, x4, #0x85a
  24fe40:	mov	w3, #0xa7                  	// #167
  24fe44:	mov	w0, wzr
  24fe48:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fe4c:	mov	w0, #0xffffffea            	// #-22
  24fe50:	ldp	x29, x30, [sp], #16
  24fe54:	ret

000000000024fe58 <sd_dhcp_lease_get_netmask>:
  24fe58:	stp	x29, x30, [sp, #-16]!
  24fe5c:	mov	x29, sp
  24fe60:	cbz	x0, 24fe94 <sd_dhcp_lease_get_netmask+0x3c>
  24fe64:	cbz	x1, 24feb4 <sd_dhcp_lease_get_netmask+0x5c>
  24fe68:	ldrb	w9, [x0, #28]
  24fe6c:	mov	x8, x0
  24fe70:	cbz	w9, 24fe88 <sd_dhcp_lease_get_netmask+0x30>
  24fe74:	ldr	w8, [x8, #32]
  24fe78:	mov	w0, wzr
  24fe7c:	str	w8, [x1]
  24fe80:	ldp	x29, x30, [sp], #16
  24fe84:	ret
  24fe88:	mov	w0, #0xffffffc3            	// #-61
  24fe8c:	ldp	x29, x30, [sp], #16
  24fe90:	ret
  24fe94:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24fe98:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24fe9c:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24fea0:	add	x1, x1, #0x3
  24fea4:	add	x2, x2, #0xc80
  24fea8:	add	x4, x4, #0x7f5
  24feac:	mov	w3, #0xb1                  	// #177
  24feb0:	b	24fed4 <sd_dhcp_lease_get_netmask+0x7c>
  24feb4:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24feb8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24febc:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  24fec0:	add	x1, x1, #0xf8a
  24fec4:	add	x2, x2, #0xc80
  24fec8:	add	x4, x4, #0x7f5
  24fecc:	mov	w3, #0xb2                  	// #178
  24fed0:	mov	w0, wzr
  24fed4:	bl	253f10 <log_assert_failed_return_realm@plt>
  24fed8:	mov	w0, #0xffffffea            	// #-22
  24fedc:	ldp	x29, x30, [sp], #16
  24fee0:	ret

000000000024fee4 <sd_dhcp_lease_get_server_identifier>:
  24fee4:	stp	x29, x30, [sp, #-16]!
  24fee8:	mov	x29, sp
  24feec:	cbz	x0, 24ff18 <sd_dhcp_lease_get_server_identifier+0x34>
  24fef0:	cbz	x1, 24ff38 <sd_dhcp_lease_get_server_identifier+0x54>
  24fef4:	ldr	w8, [x0, #20]
  24fef8:	cbz	w8, 24ff0c <sd_dhcp_lease_get_server_identifier+0x28>
  24fefc:	mov	w0, wzr
  24ff00:	str	w8, [x1]
  24ff04:	ldp	x29, x30, [sp], #16
  24ff08:	ret
  24ff0c:	mov	w0, #0xffffffc3            	// #-61
  24ff10:	ldp	x29, x30, [sp], #16
  24ff14:	ret
  24ff18:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24ff1c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24ff20:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24ff24:	add	x1, x1, #0x3
  24ff28:	add	x2, x2, #0xc80
  24ff2c:	add	x4, x4, #0x3df
  24ff30:	mov	w3, #0xbc                  	// #188
  24ff34:	b	24ff58 <sd_dhcp_lease_get_server_identifier+0x74>
  24ff38:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24ff3c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24ff40:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  24ff44:	add	x1, x1, #0xf8a
  24ff48:	add	x2, x2, #0xc80
  24ff4c:	add	x4, x4, #0x3df
  24ff50:	mov	w3, #0xbd                  	// #189
  24ff54:	mov	w0, wzr
  24ff58:	bl	253f10 <log_assert_failed_return_realm@plt>
  24ff5c:	mov	w0, #0xffffffea            	// #-22
  24ff60:	ldp	x29, x30, [sp], #16
  24ff64:	ret

000000000024ff68 <sd_dhcp_lease_get_next_server>:
  24ff68:	stp	x29, x30, [sp, #-16]!
  24ff6c:	mov	x29, sp
  24ff70:	cbz	x0, 24ff9c <sd_dhcp_lease_get_next_server+0x34>
  24ff74:	cbz	x1, 24ffbc <sd_dhcp_lease_get_next_server+0x54>
  24ff78:	ldr	w8, [x0, #24]
  24ff7c:	cbz	w8, 24ff90 <sd_dhcp_lease_get_next_server+0x28>
  24ff80:	mov	w0, wzr
  24ff84:	str	w8, [x1]
  24ff88:	ldp	x29, x30, [sp], #16
  24ff8c:	ret
  24ff90:	mov	w0, #0xffffffc3            	// #-61
  24ff94:	ldp	x29, x30, [sp], #16
  24ff98:	ret
  24ff9c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  24ffa0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24ffa4:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24ffa8:	add	x1, x1, #0x3
  24ffac:	add	x2, x2, #0xc80
  24ffb0:	add	x4, x4, #0x76a
  24ffb4:	mov	w3, #0xc7                  	// #199
  24ffb8:	b	24ffdc <sd_dhcp_lease_get_next_server+0x74>
  24ffbc:	adrp	x1, 20a000 <parse_argv.options-0x3f0>
  24ffc0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  24ffc4:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  24ffc8:	add	x1, x1, #0xf8a
  24ffcc:	add	x2, x2, #0xc80
  24ffd0:	add	x4, x4, #0x76a
  24ffd4:	mov	w3, #0xc8                  	// #200
  24ffd8:	mov	w0, wzr
  24ffdc:	bl	253f10 <log_assert_failed_return_realm@plt>
  24ffe0:	mov	w0, #0xffffffea            	// #-22
  24ffe4:	ldp	x29, x30, [sp], #16
  24ffe8:	ret

000000000024ffec <sd_dhcp_lease_get_routes>:
  24ffec:	stp	x29, x30, [sp, #-32]!
  24fff0:	stp	x20, x19, [sp, #16]
  24fff4:	mov	x29, sp
  24fff8:	cbz	x0, 250070 <sd_dhcp_lease_get_routes+0x84>
  24fffc:	mov	x19, x1
  250000:	cbz	x1, 250090 <sd_dhcp_lease_get_routes+0xa4>
  250004:	ldr	x1, [x0, #120]
  250008:	mov	x20, x0
  25000c:	cbz	x1, 250058 <sd_dhcp_lease_get_routes+0x6c>
  250010:	mov	w0, #0x8                   	// #8
  250014:	bl	2500bc <malloc_multiply>
  250018:	cbz	x0, 250060 <sd_dhcp_lease_get_routes+0x74>
  25001c:	mov	x8, x0
  250020:	ldr	x0, [x20, #120]
  250024:	cbz	x0, 250050 <sd_dhcp_lease_get_routes+0x64>
  250028:	ldp	x9, x0, [x20, #112]
  25002c:	mov	x10, xzr
  250030:	mov	w11, #0x1                   	// #1
  250034:	mov	w12, #0xc                   	// #12
  250038:	madd	x13, x10, x12, x9
  25003c:	str	x13, [x8, x10, lsl #3]
  250040:	mov	w10, w11
  250044:	cmp	x0, x10
  250048:	add	w11, w11, #0x1
  25004c:	b.hi	250038 <sd_dhcp_lease_get_routes+0x4c>  // b.pmore
  250050:	str	x8, [x19]
  250054:	b	250064 <sd_dhcp_lease_get_routes+0x78>
  250058:	mov	w0, #0xffffffc3            	// #-61
  25005c:	b	250064 <sd_dhcp_lease_get_routes+0x78>
  250060:	mov	w0, #0xfffffff4            	// #-12
  250064:	ldp	x20, x19, [sp, #16]
  250068:	ldp	x29, x30, [sp], #32
  25006c:	ret
  250070:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  250074:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250078:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  25007c:	add	x1, x1, #0x3
  250080:	add	x2, x2, #0xc80
  250084:	add	x4, x4, #0xee2
  250088:	mov	w3, #0xd9                  	// #217
  25008c:	b	2500b0 <sd_dhcp_lease_get_routes+0xc4>
  250090:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  250094:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250098:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  25009c:	add	x1, x1, #0x78e
  2500a0:	add	x2, x2, #0xc80
  2500a4:	add	x4, x4, #0xee2
  2500a8:	mov	w3, #0xda                  	// #218
  2500ac:	mov	w0, wzr
  2500b0:	bl	253f10 <log_assert_failed_return_realm@plt>
  2500b4:	mov	w0, #0xffffffea            	// #-22
  2500b8:	b	250064 <sd_dhcp_lease_get_routes+0x78>

00000000002500bc <malloc_multiply>:
  2500bc:	stp	x29, x30, [sp, #-32]!
  2500c0:	stp	x20, x19, [sp, #16]
  2500c4:	mov	x29, sp
  2500c8:	mov	x19, x1
  2500cc:	mov	x20, x0
  2500d0:	bl	2532f4 <size_multiply_overflow>
  2500d4:	tbz	w0, #0, 2500e0 <malloc_multiply+0x24>
  2500d8:	mov	x0, xzr
  2500dc:	b	2500f0 <malloc_multiply+0x34>
  2500e0:	mul	x8, x19, x20
  2500e4:	cmp	x8, #0x0
  2500e8:	csinc	x0, x8, xzr, ne  // ne = any
  2500ec:	bl	2539c0 <malloc@plt>
  2500f0:	ldp	x20, x19, [sp, #16]
  2500f4:	ldp	x29, x30, [sp], #32
  2500f8:	ret

00000000002500fc <sd_dhcp_lease_get_search_domains>:
  2500fc:	stp	x29, x30, [sp, #-32]!
  250100:	stp	x20, x19, [sp, #16]
  250104:	mov	x29, sp
  250108:	cbz	x0, 25013c <sd_dhcp_lease_get_search_domains+0x40>
  25010c:	mov	x19, x1
  250110:	cbz	x1, 25015c <sd_dhcp_lease_get_search_domains+0x60>
  250114:	ldr	x20, [x0, #152]
  250118:	mov	x0, x20
  25011c:	bl	2547a0 <strv_length@plt>
  250120:	cbz	x0, 25012c <sd_dhcp_lease_get_search_domains+0x30>
  250124:	str	x20, [x19]
  250128:	b	250130 <sd_dhcp_lease_get_search_domains+0x34>
  25012c:	mov	w0, #0xffffffc3            	// #-61
  250130:	ldp	x20, x19, [sp, #16]
  250134:	ldp	x29, x30, [sp], #32
  250138:	ret
  25013c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  250140:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250144:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  250148:	add	x1, x1, #0x3
  25014c:	add	x2, x2, #0xc80
  250150:	add	x4, x4, #0x25b
  250154:	mov	w3, #0xed                  	// #237
  250158:	b	25017c <sd_dhcp_lease_get_search_domains+0x80>
  25015c:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  250160:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250164:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  250168:	add	x1, x1, #0x3b0
  25016c:	add	x2, x2, #0xc80
  250170:	add	x4, x4, #0x25b
  250174:	mov	w3, #0xee                  	// #238
  250178:	mov	w0, wzr
  25017c:	bl	253f10 <log_assert_failed_return_realm@plt>
  250180:	mov	w0, #0xffffffea            	// #-22
  250184:	b	250130 <sd_dhcp_lease_get_search_domains+0x34>

0000000000250188 <sd_dhcp_lease_get_vendor_specific>:
  250188:	stp	x29, x30, [sp, #-16]!
  25018c:	mov	x29, sp
  250190:	cbz	x0, 2501cc <sd_dhcp_lease_get_vendor_specific+0x44>
  250194:	cbz	x1, 2501ec <sd_dhcp_lease_get_vendor_specific+0x64>
  250198:	cbz	x2, 25020c <sd_dhcp_lease_get_vendor_specific+0x84>
  25019c:	ldr	x9, [x0, #200]
  2501a0:	mov	x8, x0
  2501a4:	cbz	x9, 2501c0 <sd_dhcp_lease_get_vendor_specific+0x38>
  2501a8:	ldr	x8, [x8, #192]
  2501ac:	mov	w0, wzr
  2501b0:	str	x8, [x1]
  2501b4:	str	x9, [x2]
  2501b8:	ldp	x29, x30, [sp], #16
  2501bc:	ret
  2501c0:	mov	w0, #0xffffffc3            	// #-61
  2501c4:	ldp	x29, x30, [sp], #16
  2501c8:	ret
  2501cc:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2501d0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2501d4:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2501d8:	add	x1, x1, #0x3
  2501dc:	add	x2, x2, #0xc80
  2501e0:	add	x4, x4, #0xf8f
  2501e4:	mov	w3, #0xfa                  	// #250
  2501e8:	b	25022c <sd_dhcp_lease_get_vendor_specific+0xa4>
  2501ec:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  2501f0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2501f4:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  2501f8:	add	x1, x1, #0x1ea
  2501fc:	add	x2, x2, #0xc80
  250200:	add	x4, x4, #0xf8f
  250204:	mov	w3, #0xfb                  	// #251
  250208:	b	250228 <sd_dhcp_lease_get_vendor_specific+0xa0>
  25020c:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  250210:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250214:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  250218:	add	x1, x1, #0x836
  25021c:	add	x2, x2, #0xc80
  250220:	add	x4, x4, #0xf8f
  250224:	mov	w3, #0xfc                  	// #252
  250228:	mov	w0, wzr
  25022c:	bl	253f10 <log_assert_failed_return_realm@plt>
  250230:	mov	w0, #0xffffffea            	// #-22
  250234:	ldp	x29, x30, [sp], #16
  250238:	ret

000000000025023c <sd_dhcp_lease_ref>:
  25023c:	stp	x29, x30, [sp, #-16]!
  250240:	mov	x29, sp
  250244:	cbz	x0, 250258 <sd_dhcp_lease_ref+0x1c>
  250248:	ldr	w8, [x0]
  25024c:	cbz	w8, 250260 <sd_dhcp_lease_ref+0x24>
  250250:	add	w8, w8, #0x1
  250254:	str	w8, [x0]
  250258:	ldp	x29, x30, [sp], #16
  25025c:	ret
  250260:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  250264:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250268:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  25026c:	add	x1, x1, #0x9ce
  250270:	add	x2, x2, #0xc80
  250274:	add	x4, x4, #0x42a
  250278:	mov	w3, #0x121                 	// #289
  25027c:	mov	w0, wzr
  250280:	bl	253740 <log_assert_failed_realm@plt>

0000000000250284 <sd_dhcp_lease_unref>:
  250284:	stp	x29, x30, [sp, #-16]!
  250288:	mov	x29, sp
  25028c:	cbz	x0, 2502a8 <sd_dhcp_lease_unref+0x24>
  250290:	ldr	w8, [x0]
  250294:	cbz	w8, 2502b4 <sd_dhcp_lease_unref+0x30>
  250298:	subs	w8, w8, #0x1
  25029c:	str	w8, [x0]
  2502a0:	b.ne	2502a8 <sd_dhcp_lease_unref+0x24>  // b.any
  2502a4:	bl	2502d8 <dhcp_lease_free>
  2502a8:	mov	x0, xzr
  2502ac:	ldp	x29, x30, [sp], #16
  2502b0:	ret
  2502b4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2502b8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2502bc:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2502c0:	add	x1, x1, #0x9ce
  2502c4:	add	x2, x2, #0xc80
  2502c8:	add	x4, x4, #0xa13
  2502cc:	mov	w3, #0x121                 	// #289
  2502d0:	mov	w0, wzr
  2502d4:	bl	253740 <log_assert_failed_realm@plt>

00000000002502d8 <dhcp_lease_free>:
  2502d8:	stp	x29, x30, [sp, #-32]!
  2502dc:	stp	x20, x19, [sp, #16]
  2502e0:	mov	x29, sp
  2502e4:	cbz	x0, 2503dc <dhcp_lease_free+0x104>
  2502e8:	mov	x19, x0
  2502ec:	b	25030c <dhcp_lease_free+0x34>
  2502f0:	ldr	x9, [x20]
  2502f4:	str	x9, [x8]
  2502f8:	ldr	x0, [x20, #24]
  2502fc:	stp	xzr, xzr, [x20]
  250300:	bl	2536e0 <free@plt>
  250304:	mov	x0, x20
  250308:	bl	2536e0 <free@plt>
  25030c:	ldr	x20, [x19, #216]
  250310:	cbz	x20, 250344 <dhcp_lease_free+0x6c>
  250314:	ldr	x8, [x20]
  250318:	cbz	x8, 250324 <dhcp_lease_free+0x4c>
  25031c:	ldr	x9, [x20, #8]
  250320:	str	x9, [x8, #8]
  250324:	ldr	x8, [x20, #8]
  250328:	cbnz	x8, 2502f0 <dhcp_lease_free+0x18>
  25032c:	ldr	x8, [x19, #216]
  250330:	cmp	x8, x20
  250334:	b.ne	2503b8 <dhcp_lease_free+0xe0>  // b.any
  250338:	ldr	x8, [x20]
  25033c:	str	x8, [x19, #216]
  250340:	b	2502f8 <dhcp_lease_free+0x20>
  250344:	ldr	x0, [x19, #168]
  250348:	bl	2536e0 <free@plt>
  25034c:	ldr	x0, [x19, #48]
  250350:	bl	2536e0 <free@plt>
  250354:	ldr	x0, [x19, #208]
  250358:	bl	2536e0 <free@plt>
  25035c:	ldr	x0, [x19, #160]
  250360:	bl	2536e0 <free@plt>
  250364:	ldr	x0, [x19, #144]
  250368:	bl	2536e0 <free@plt>
  25036c:	ldr	x0, [x19, #64]
  250370:	bl	2536e0 <free@plt>
  250374:	ldr	x0, [x19, #80]
  250378:	bl	2536e0 <free@plt>
  25037c:	ldr	x0, [x19, #96]
  250380:	bl	2536e0 <free@plt>
  250384:	ldr	x0, [x19, #112]
  250388:	bl	2536e0 <free@plt>
  25038c:	ldr	x0, [x19, #176]
  250390:	bl	2536e0 <free@plt>
  250394:	ldr	x0, [x19, #192]
  250398:	bl	2536e0 <free@plt>
  25039c:	ldr	x0, [x19, #152]
  2503a0:	bl	254150 <strv_free@plt>
  2503a4:	mov	x0, x19
  2503a8:	bl	2518b0 <mfree>
  2503ac:	ldp	x20, x19, [sp, #16]
  2503b0:	ldp	x29, x30, [sp], #32
  2503b4:	ret
  2503b8:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2503bc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2503c0:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  2503c4:	add	x1, x1, #0xd67
  2503c8:	add	x2, x2, #0xc80
  2503cc:	add	x4, x4, #0x528
  2503d0:	mov	w3, #0x10c                 	// #268
  2503d4:	mov	w0, wzr
  2503d8:	bl	253740 <log_assert_failed_realm@plt>
  2503dc:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2503e0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2503e4:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  2503e8:	add	x1, x1, #0x3
  2503ec:	add	x2, x2, #0xc80
  2503f0:	add	x4, x4, #0x528
  2503f4:	mov	w3, #0x107                 	// #263
  2503f8:	bl	253740 <log_assert_failed_realm@plt>

00000000002503fc <dhcp_lease_parse_options>:
  2503fc:	stp	x29, x30, [sp, #-48]!
  250400:	str	x21, [sp, #16]
  250404:	stp	x20, x19, [sp, #32]
  250408:	mov	x29, sp
  25040c:	cbz	x3, 250b74 <dhcp_lease_parse_options+0x778>
  250410:	and	w21, w0, #0xff
  250414:	sub	w9, w21, #0x1
  250418:	mov	w20, w1
  25041c:	mov	w1, w0
  250420:	cmp	w9, #0xfd
  250424:	b.hi	250a24 <dhcp_lease_parse_options+0x628>  // b.pmore
  250428:	adrp	x10, 218000 <worker_hash_op+0xdad0>
  25042c:	add	x10, x10, #0xdb0
  250430:	adr	x11, 250448 <dhcp_lease_parse_options+0x4c>
  250434:	ldrh	w12, [x10, x9, lsl #1]
  250438:	add	x11, x11, x12, lsl #2
  25043c:	mov	x19, x3
  250440:	mov	x8, x2
  250444:	br	x11
  250448:	mov	x0, x19
  25044c:	mov	x2, x8
  250450:	mov	w3, w20
  250454:	bl	2518c4 <dhcp_lease_insert_private_option>
  250458:	tbnz	w0, #31, 250460 <dhcp_lease_parse_options+0x64>
  25045c:	mov	w0, wzr
  250460:	ldp	x20, x19, [sp, #32]
  250464:	ldr	x21, [sp, #16]
  250468:	ldp	x29, x30, [sp], #48
  25046c:	ret
  250470:	and	x1, x20, #0xff
  250474:	add	x2, x19, #0x4
  250478:	mov	x0, x8
  25047c:	bl	250b98 <lease_parse_u32>
  250480:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250484:	mov	w19, w0
  250488:	mov	w0, wzr
  25048c:	bl	2535b0 <log_get_max_level_realm@plt>
  250490:	cmp	w0, #0x7
  250494:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250498:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25049c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2504a0:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  2504a4:	add	x2, x2, #0xc80
  2504a8:	add	x4, x4, #0x38d
  2504ac:	add	x5, x5, #0xcaa
  2504b0:	mov	w0, #0x7                   	// #7
  2504b4:	mov	w3, #0x28e                 	// #654
  2504b8:	b	250a18 <dhcp_lease_parse_options+0x61c>
  2504bc:	and	x1, x20, #0xff
  2504c0:	add	x2, x19, #0x70
  2504c4:	add	x3, x19, #0x78
  2504c8:	add	x4, x19, #0x80
  2504cc:	mov	x0, x8
  2504d0:	bl	251664 <lease_parse_classless_routes>
  2504d4:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  2504d8:	mov	w19, w0
  2504dc:	mov	w0, wzr
  2504e0:	bl	2535b0 <log_get_max_level_realm@plt>
  2504e4:	cmp	w0, #0x7
  2504e8:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  2504ec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2504f0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2504f4:	adrp	x5, 210000 <worker_hash_op+0x5ad0>
  2504f8:	add	x2, x2, #0xc80
  2504fc:	add	x4, x4, #0x38d
  250500:	add	x5, x5, #0x653
  250504:	mov	w0, #0x7                   	// #7
  250508:	mov	w3, #0x29e                 	// #670
  25050c:	b	250a18 <dhcp_lease_parse_options+0x61c>
  250510:	and	x1, x20, #0xff
  250514:	add	x2, x19, #0x20
  250518:	mov	x0, x8
  25051c:	bl	250c28 <lease_parse_be32>
  250520:	tbnz	w0, #31, 250a7c <dhcp_lease_parse_options+0x680>
  250524:	mov	w8, #0x1                   	// #1
  250528:	strb	w8, [x19, #28]
  25052c:	b	25045c <dhcp_lease_parse_options+0x60>
  250530:	and	x1, x20, #0xff
  250534:	add	x2, x19, #0x30
  250538:	add	x3, x19, #0x38
  25053c:	mov	x0, x8
  250540:	bl	250ca8 <lease_parse_in_addrs>
  250544:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250548:	mov	w19, w0
  25054c:	mov	w0, wzr
  250550:	bl	2535b0 <log_get_max_level_realm@plt>
  250554:	cmp	w0, #0x7
  250558:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  25055c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250560:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250564:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  250568:	add	x2, x2, #0xc80
  25056c:	add	x4, x4, #0x38d
  250570:	add	x5, x5, #0xa47
  250574:	mov	w0, #0x7                   	// #7
  250578:	mov	w3, #0x247                 	// #583
  25057c:	b	250a18 <dhcp_lease_parse_options+0x61c>
  250580:	and	x1, x20, #0xff
  250584:	add	x2, x19, #0x40
  250588:	add	x3, x19, #0x48
  25058c:	mov	x0, x8
  250590:	bl	250ca8 <lease_parse_in_addrs>
  250594:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250598:	mov	w19, w0
  25059c:	mov	w0, wzr
  2505a0:	bl	2535b0 <log_get_max_level_realm@plt>
  2505a4:	cmp	w0, #0x7
  2505a8:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  2505ac:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2505b0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2505b4:	adrp	x5, 218000 <worker_hash_op+0xdad0>
  2505b8:	add	x2, x2, #0xc80
  2505bc:	add	x4, x4, #0x38d
  2505c0:	add	x5, x5, #0x14e
  2505c4:	mov	w0, #0x7                   	// #7
  2505c8:	mov	w3, #0x24d                 	// #589
  2505cc:	b	250a18 <dhcp_lease_parse_options+0x61c>
  2505d0:	and	x1, x20, #0xff
  2505d4:	add	x2, x19, #0xa0
  2505d8:	mov	x0, x8
  2505dc:	bl	2511b8 <lease_parse_domain>
  2505e0:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  2505e4:	mov	w19, w0
  2505e8:	mov	w0, wzr
  2505ec:	bl	2535b0 <log_get_max_level_realm@plt>
  2505f0:	cmp	w0, #0x7
  2505f4:	mov	w0, wzr
  2505f8:	b.lt	250460 <dhcp_lease_parse_options+0x64>  // b.tstop
  2505fc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250600:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250604:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  250608:	add	x2, x2, #0xc80
  25060c:	add	x4, x4, #0x38d
  250610:	add	x5, x5, #0xb71
  250614:	mov	w0, #0x7                   	// #7
  250618:	mov	w3, #0x27f                 	// #639
  25061c:	b	250a18 <dhcp_lease_parse_options+0x61c>
  250620:	and	x1, x20, #0xff
  250624:	add	x2, x19, #0x90
  250628:	mov	x0, x8
  25062c:	bl	2511b8 <lease_parse_domain>
  250630:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250634:	mov	w19, w0
  250638:	mov	w0, wzr
  25063c:	bl	2535b0 <log_get_max_level_realm@plt>
  250640:	cmp	w0, #0x7
  250644:	mov	w0, wzr
  250648:	b.lt	250460 <dhcp_lease_parse_options+0x64>  // b.tstop
  25064c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250650:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250654:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  250658:	add	x2, x2, #0xc80
  25065c:	add	x4, x4, #0x38d
  250660:	add	x5, x5, #0xf8
  250664:	mov	w0, #0x7                   	// #7
  250668:	mov	w3, #0x270                 	// #624
  25066c:	b	250a18 <dhcp_lease_parse_options+0x61c>
  250670:	and	x1, x20, #0xff
  250674:	add	x2, x19, #0xa8
  250678:	mov	x0, x8
  25067c:	bl	25157c <lease_parse_string>
  250680:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250684:	mov	w19, w0
  250688:	mov	w0, wzr
  25068c:	bl	2535b0 <log_get_max_level_realm@plt>
  250690:	cmp	w0, #0x7
  250694:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250698:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25069c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2506a0:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  2506a4:	add	x2, x2, #0xc80
  2506a8:	add	x4, x4, #0x38d
  2506ac:	add	x5, x5, #0x45c
  2506b0:	mov	w0, #0x7                   	// #7
  2506b4:	mov	w3, #0x288                 	// #648
  2506b8:	b	250a18 <dhcp_lease_parse_options+0x61c>
  2506bc:	add	x19, x19, #0x88
  2506c0:	and	x1, x20, #0xff
  2506c4:	mov	x0, x8
  2506c8:	mov	x2, x19
  2506cc:	bl	251120 <lease_parse_u16>
  2506d0:	tbz	w0, #31, 250710 <dhcp_lease_parse_options+0x314>
  2506d4:	mov	w20, w0
  2506d8:	mov	w0, wzr
  2506dc:	bl	2535b0 <log_get_max_level_realm@plt>
  2506e0:	cmp	w0, #0x7
  2506e4:	b.lt	250710 <dhcp_lease_parse_options+0x314>  // b.tstop
  2506e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2506ec:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2506f0:	adrp	x5, 218000 <worker_hash_op+0xdad0>
  2506f4:	add	x2, x2, #0xc80
  2506f8:	add	x4, x4, #0x38d
  2506fc:	add	x5, x5, #0x177
  250700:	mov	w0, #0x7                   	// #7
  250704:	mov	w3, #0x265                 	// #613
  250708:	mov	w1, w20
  25070c:	bl	2535c0 <log_internal_realm@plt>
  250710:	ldrh	w20, [x19]
  250714:	cmp	w20, #0x23f
  250718:	b.hi	25045c <dhcp_lease_parse_options+0x60>  // b.pmore
  25071c:	mov	w0, wzr
  250720:	bl	2535b0 <log_get_max_level_realm@plt>
  250724:	cmp	w0, #0x7
  250728:	b.lt	25075c <dhcp_lease_parse_options+0x360>  // b.tstop
  25072c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250730:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250734:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  250738:	add	x2, x2, #0xc80
  25073c:	add	x4, x4, #0x38d
  250740:	add	x5, x5, #0x2c5
  250744:	mov	w0, #0x7                   	// #7
  250748:	mov	w3, #0x267                 	// #615
  25074c:	mov	w7, #0x240                 	// #576
  250750:	mov	w1, wzr
  250754:	mov	w6, w20
  250758:	bl	2535c0 <log_internal_realm@plt>
  25075c:	mov	w8, #0x240                 	// #576
  250760:	strh	w8, [x19]
  250764:	b	25045c <dhcp_lease_parse_options+0x60>
  250768:	and	x1, x20, #0xff
  25076c:	add	x2, x19, #0x70
  250770:	add	x3, x19, #0x78
  250774:	add	x4, x19, #0x80
  250778:	mov	x0, x8
  25077c:	bl	250ed4 <lease_parse_routes>
  250780:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250784:	mov	w19, w0
  250788:	mov	w0, wzr
  25078c:	bl	2535b0 <log_get_max_level_realm@plt>
  250790:	cmp	w0, #0x7
  250794:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250798:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25079c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2507a0:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  2507a4:	add	x2, x2, #0xc80
  2507a8:	add	x4, x4, #0x38d
  2507ac:	add	x5, x5, #0xc7e
  2507b0:	mov	w0, #0x7                   	// #7
  2507b4:	mov	w3, #0x25f                 	// #607
  2507b8:	b	250a18 <dhcp_lease_parse_options+0x61c>
  2507bc:	tst	w20, #0xff
  2507c0:	b.eq	250a64 <dhcp_lease_parse_options+0x668>  // b.none
  2507c4:	and	x1, x20, #0xff
  2507c8:	mov	x0, x8
  2507cc:	bl	2550d0 <memdup@plt>
  2507d0:	cbz	x0, 250b6c <dhcp_lease_parse_options+0x770>
  2507d4:	mov	x21, x0
  2507d8:	ldr	x0, [x19, #192]
  2507dc:	bl	2536e0 <free@plt>
  2507e0:	str	x21, [x19, #192]
  2507e4:	b	250a70 <dhcp_lease_parse_options+0x674>
  2507e8:	and	x1, x20, #0xff
  2507ec:	add	x2, x19, #0xc
  2507f0:	mov	x0, x8
  2507f4:	bl	250b98 <lease_parse_u32>
  2507f8:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  2507fc:	mov	w19, w0
  250800:	mov	w0, wzr
  250804:	bl	2535b0 <log_get_max_level_realm@plt>
  250808:	cmp	w0, #0x7
  25080c:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250810:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250814:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250818:	adrp	x5, 20a000 <parse_argv.options-0x3f0>
  25081c:	add	x2, x2, #0xc80
  250820:	add	x4, x4, #0x38d
  250824:	add	x5, x5, #0xfdf
  250828:	mov	w0, #0x7                   	// #7
  25082c:	mov	w3, #0x229                 	// #553
  250830:	b	250a18 <dhcp_lease_parse_options+0x61c>
  250834:	and	x1, x20, #0xff
  250838:	add	x2, x19, #0x14
  25083c:	mov	x0, x8
  250840:	bl	250c28 <lease_parse_be32>
  250844:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250848:	mov	w19, w0
  25084c:	mov	w0, wzr
  250850:	bl	2535b0 <log_get_max_level_realm@plt>
  250854:	cmp	w0, #0x7
  250858:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  25085c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250860:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250864:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  250868:	add	x2, x2, #0xc80
  25086c:	add	x4, x4, #0x38d
  250870:	add	x5, x5, #0x1f7
  250874:	mov	w0, #0x7                   	// #7
  250878:	mov	w3, #0x230                 	// #560
  25087c:	b	250a18 <dhcp_lease_parse_options+0x61c>
  250880:	and	x1, x20, #0xff
  250884:	add	x2, x19, #0x28
  250888:	mov	x0, x8
  25088c:	bl	250c28 <lease_parse_be32>
  250890:	tbnz	w0, #31, 250ab4 <dhcp_lease_parse_options+0x6b8>
  250894:	mov	w8, #0x1                   	// #1
  250898:	strb	w8, [x19, #36]
  25089c:	b	25045c <dhcp_lease_parse_options+0x60>
  2508a0:	and	x1, x20, #0xff
  2508a4:	add	x2, x19, #0x50
  2508a8:	add	x3, x19, #0x58
  2508ac:	mov	x0, x8
  2508b0:	bl	250ca8 <lease_parse_in_addrs>
  2508b4:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  2508b8:	mov	w19, w0
  2508bc:	mov	w0, wzr
  2508c0:	bl	2535b0 <log_get_max_level_realm@plt>
  2508c4:	cmp	w0, #0x7
  2508c8:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  2508cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2508d0:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2508d4:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  2508d8:	add	x2, x2, #0xc80
  2508dc:	add	x4, x4, #0x38d
  2508e0:	add	x5, x5, #0xc47
  2508e4:	mov	w0, #0x7                   	// #7
  2508e8:	mov	w3, #0x253                 	// #595
  2508ec:	b	250a18 <dhcp_lease_parse_options+0x61c>
  2508f0:	and	x1, x20, #0xff
  2508f4:	add	x2, x19, #0x8
  2508f8:	mov	x0, x8
  2508fc:	bl	250b98 <lease_parse_u32>
  250900:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250904:	mov	w19, w0
  250908:	mov	w0, wzr
  25090c:	bl	2535b0 <log_get_max_level_realm@plt>
  250910:	cmp	w0, #0x7
  250914:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250918:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25091c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250920:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  250924:	add	x2, x2, #0xc80
  250928:	add	x4, x4, #0x38d
  25092c:	add	x5, x5, #0x7af
  250930:	mov	w0, #0x7                   	// #7
  250934:	mov	w3, #0x294                 	// #660
  250938:	b	250a18 <dhcp_lease_parse_options+0x61c>
  25093c:	and	x1, x20, #0xff
  250940:	add	x2, x29, #0x18
  250944:	mov	x0, x8
  250948:	str	xzr, [x29, #24]
  25094c:	bl	25157c <lease_parse_string>
  250950:	mov	w20, w0
  250954:	tbnz	w0, #31, 250af4 <dhcp_lease_parse_options+0x6f8>
  250958:	ldr	x0, [x29, #24]
  25095c:	mov	w1, #0x7                   	// #7
  250960:	bl	2550e0 <timezone_is_valid@plt>
  250964:	tbz	w0, #0, 250b28 <dhcp_lease_parse_options+0x72c>
  250968:	ldr	x0, [x19, #208]
  25096c:	bl	2536e0 <free@plt>
  250970:	ldr	x8, [x29, #24]
  250974:	str	x8, [x19, #208]
  250978:	str	xzr, [x29, #24]
  25097c:	b	250b60 <dhcp_lease_parse_options+0x764>
  250980:	and	x1, x20, #0xff
  250984:	add	x2, x19, #0x98
  250988:	mov	x0, x8
  25098c:	bl	2512b4 <dhcp_lease_parse_search_domains>
  250990:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  250994:	mov	w19, w0
  250998:	mov	w0, wzr
  25099c:	bl	2535b0 <log_get_max_level_realm@plt>
  2509a0:	cmp	w0, #0x7
  2509a4:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  2509a8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2509ac:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  2509b0:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  2509b4:	add	x2, x2, #0xc80
  2509b8:	add	x4, x4, #0x38d
  2509bc:	add	x5, x5, #0xb40
  2509c0:	mov	w0, #0x7                   	// #7
  2509c4:	mov	w3, #0x279                 	// #633
  2509c8:	b	250a18 <dhcp_lease_parse_options+0x61c>
  2509cc:	and	x1, x20, #0xff
  2509d0:	add	x2, x19, #0x60
  2509d4:	add	x3, x19, #0x68
  2509d8:	mov	x0, x8
  2509dc:	bl	250db4 <lease_parse_sip_server>
  2509e0:	tbz	w0, #31, 25045c <dhcp_lease_parse_options+0x60>
  2509e4:	mov	w19, w0
  2509e8:	mov	w0, wzr
  2509ec:	bl	2535b0 <log_get_max_level_realm@plt>
  2509f0:	cmp	w0, #0x7
  2509f4:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  2509f8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2509fc:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250a00:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  250a04:	add	x2, x2, #0xc80
  250a08:	add	x4, x4, #0x38d
  250a0c:	add	x5, x5, #0xd6b
  250a10:	mov	w0, #0x7                   	// #7
  250a14:	mov	w3, #0x259                 	// #601
  250a18:	mov	w1, w19
  250a1c:	bl	2535c0 <log_internal_realm@plt>
  250a20:	b	25045c <dhcp_lease_parse_options+0x60>
  250a24:	mov	w0, wzr
  250a28:	bl	2535b0 <log_get_max_level_realm@plt>
  250a2c:	cmp	w0, #0x7
  250a30:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250a34:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250a38:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250a3c:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  250a40:	add	x2, x2, #0xc80
  250a44:	add	x4, x4, #0x38d
  250a48:	add	x5, x5, #0x67d
  250a4c:	mov	w0, #0x7                   	// #7
  250a50:	mov	w3, #0x2ce                 	// #718
  250a54:	mov	w1, wzr
  250a58:	mov	w6, w21
  250a5c:	bl	2535c0 <log_internal_realm@plt>
  250a60:	b	25045c <dhcp_lease_parse_options+0x60>
  250a64:	ldr	x0, [x19, #192]
  250a68:	bl	2518b0 <mfree>
  250a6c:	str	xzr, [x19, #192]
  250a70:	and	x8, x20, #0xff
  250a74:	str	x8, [x19, #200]
  250a78:	b	25045c <dhcp_lease_parse_options+0x60>
  250a7c:	mov	w20, w0
  250a80:	mov	w0, wzr
  250a84:	bl	2535b0 <log_get_max_level_realm@plt>
  250a88:	cmp	w0, #0x7
  250a8c:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250a90:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250a94:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250a98:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  250a9c:	add	x2, x2, #0xc80
  250aa0:	add	x4, x4, #0x38d
  250aa4:	add	x5, x5, #0x29b
  250aa8:	mov	w0, #0x7                   	// #7
  250aac:	mov	w3, #0x237                 	// #567
  250ab0:	b	250ae8 <dhcp_lease_parse_options+0x6ec>
  250ab4:	mov	w20, w0
  250ab8:	mov	w0, wzr
  250abc:	bl	2535b0 <log_get_max_level_realm@plt>
  250ac0:	cmp	w0, #0x7
  250ac4:	b.lt	25045c <dhcp_lease_parse_options+0x60>  // b.tstop
  250ac8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250acc:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250ad0:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  250ad4:	add	x2, x2, #0xc80
  250ad8:	add	x4, x4, #0x38d
  250adc:	add	x5, x5, #0x64d
  250ae0:	mov	w0, #0x7                   	// #7
  250ae4:	mov	w3, #0x23f                 	// #575
  250ae8:	mov	w1, w20
  250aec:	bl	2535c0 <log_internal_realm@plt>
  250af0:	b	25045c <dhcp_lease_parse_options+0x60>
  250af4:	mov	w0, wzr
  250af8:	bl	2535b0 <log_get_max_level_realm@plt>
  250afc:	cmp	w0, #0x7
  250b00:	b.lt	250b60 <dhcp_lease_parse_options+0x764>  // b.tstop
  250b04:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250b08:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250b0c:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  250b10:	add	x2, x2, #0xc80
  250b14:	add	x4, x4, #0x38d
  250b18:	add	x5, x5, #0xa8c
  250b1c:	mov	w0, #0x7                   	// #7
  250b20:	mov	w3, #0x2a6                 	// #678
  250b24:	b	250b58 <dhcp_lease_parse_options+0x75c>
  250b28:	mov	w0, wzr
  250b2c:	bl	2535b0 <log_get_max_level_realm@plt>
  250b30:	cmp	w0, #0x7
  250b34:	b.lt	250b60 <dhcp_lease_parse_options+0x764>  // b.tstop
  250b38:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250b3c:	adrp	x4, 20f000 <worker_hash_op+0x4ad0>
  250b40:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  250b44:	add	x2, x2, #0xc80
  250b48:	add	x4, x4, #0x38d
  250b4c:	add	x5, x5, #0xaba
  250b50:	mov	w0, #0x7                   	// #7
  250b54:	mov	w3, #0x2ab                 	// #683
  250b58:	mov	w1, w20
  250b5c:	bl	2535c0 <log_internal_realm@plt>
  250b60:	add	x0, x29, #0x18
  250b64:	bl	251898 <freep>
  250b68:	b	25045c <dhcp_lease_parse_options+0x60>
  250b6c:	mov	w0, #0xfffffff4            	// #-12
  250b70:	b	250460 <dhcp_lease_parse_options+0x64>
  250b74:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  250b78:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250b7c:	adrp	x4, 210000 <worker_hash_op+0x5ad0>
  250b80:	add	x1, x1, #0x3
  250b84:	add	x2, x2, #0xc80
  250b88:	add	x4, x4, #0xca7
  250b8c:	mov	w3, #0x222                 	// #546
  250b90:	mov	w0, wzr
  250b94:	bl	253740 <log_assert_failed_realm@plt>

0000000000250b98 <lease_parse_u32>:
  250b98:	stp	x29, x30, [sp, #-32]!
  250b9c:	str	x19, [sp, #16]
  250ba0:	mov	x29, sp
  250ba4:	cbz	x0, 250be4 <lease_parse_u32+0x4c>
  250ba8:	mov	x19, x2
  250bac:	cbz	x2, 250c04 <lease_parse_u32+0x6c>
  250bb0:	cmp	x1, #0x4
  250bb4:	b.ne	250bd4 <lease_parse_u32+0x3c>  // b.any
  250bb8:	bl	253304 <unaligned_read_be32>
  250bbc:	mov	w8, w0
  250bc0:	cmp	w8, #0x0
  250bc4:	mov	w0, wzr
  250bc8:	csinc	w8, w8, wzr, ne  // ne = any
  250bcc:	str	w8, [x19]
  250bd0:	b	250bd8 <lease_parse_u32+0x40>
  250bd4:	mov	w0, #0xffffffea            	// #-22
  250bd8:	ldr	x19, [sp, #16]
  250bdc:	ldp	x29, x30, [sp], #32
  250be0:	ret
  250be4:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  250be8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250bec:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  250bf0:	add	x1, x1, #0x756
  250bf4:	add	x2, x2, #0xc80
  250bf8:	add	x4, x4, #0x407
  250bfc:	mov	w3, #0x124                 	// #292
  250c00:	bl	253740 <log_assert_failed_realm@plt>
  250c04:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  250c08:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250c0c:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  250c10:	add	x1, x1, #0xb2b
  250c14:	add	x2, x2, #0xc80
  250c18:	add	x4, x4, #0x407
  250c1c:	mov	w3, #0x125                 	// #293
  250c20:	mov	w0, wzr
  250c24:	bl	253740 <log_assert_failed_realm@plt>

0000000000250c28 <lease_parse_be32>:
  250c28:	stp	x29, x30, [sp, #-16]!
  250c2c:	mov	x29, sp
  250c30:	cbz	x0, 250c64 <lease_parse_be32+0x3c>
  250c34:	cbz	x2, 250c84 <lease_parse_be32+0x5c>
  250c38:	cmp	x1, #0x4
  250c3c:	b.ne	250c58 <lease_parse_be32+0x30>  // b.any
  250c40:	mov	x8, x0
  250c44:	ldr	w8, [x8]
  250c48:	mov	w0, wzr
  250c4c:	str	w8, [x2]
  250c50:	ldp	x29, x30, [sp], #16
  250c54:	ret
  250c58:	mov	w0, #0xffffffea            	// #-22
  250c5c:	ldp	x29, x30, [sp], #16
  250c60:	ret
  250c64:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  250c68:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250c6c:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  250c70:	add	x1, x1, #0x756
  250c74:	add	x2, x2, #0xc80
  250c78:	add	x4, x4, #0xbfb
  250c7c:	mov	w3, #0x140                 	// #320
  250c80:	bl	253740 <log_assert_failed_realm@plt>
  250c84:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  250c88:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250c8c:	adrp	x4, 20c000 <worker_hash_op+0x1ad0>
  250c90:	add	x1, x1, #0xb2b
  250c94:	add	x2, x2, #0xc80
  250c98:	add	x4, x4, #0xbfb
  250c9c:	mov	w3, #0x141                 	// #321
  250ca0:	mov	w0, wzr
  250ca4:	bl	253740 <log_assert_failed_realm@plt>

0000000000250ca8 <lease_parse_in_addrs>:
  250ca8:	stp	x29, x30, [sp, #-48]!
  250cac:	stp	x22, x21, [sp, #16]
  250cb0:	stp	x20, x19, [sp, #32]
  250cb4:	mov	x29, sp
  250cb8:	cbz	x0, 250d4c <lease_parse_in_addrs+0xa4>
  250cbc:	mov	x20, x2
  250cc0:	cbz	x2, 250d6c <lease_parse_in_addrs+0xc4>
  250cc4:	mov	x19, x3
  250cc8:	cbz	x3, 250d90 <lease_parse_in_addrs+0xe8>
  250ccc:	cbz	x1, 250ce8 <lease_parse_in_addrs+0x40>
  250cd0:	tst	x1, #0x3
  250cd4:	b.eq	250cfc <lease_parse_in_addrs+0x54>  // b.none
  250cd8:	mov	w8, wzr
  250cdc:	mov	w0, #0xffffffea            	// #-22
  250ce0:	cbnz	w8, 250d28 <lease_parse_in_addrs+0x80>
  250ce4:	b	250d2c <lease_parse_in_addrs+0x84>
  250ce8:	ldr	x0, [x20]
  250cec:	bl	2518b0 <mfree>
  250cf0:	str	xzr, [x20]
  250cf4:	str	xzr, [x19]
  250cf8:	b	250d28 <lease_parse_in_addrs+0x80>
  250cfc:	lsr	x21, x1, #2
  250d00:	mov	x1, x21
  250d04:	bl	253338 <memdup_multiply>
  250d08:	cbz	x0, 250d3c <lease_parse_in_addrs+0x94>
  250d0c:	mov	x22, x0
  250d10:	ldr	x0, [x20]
  250d14:	bl	2536e0 <free@plt>
  250d18:	mov	w8, #0x1                   	// #1
  250d1c:	str	x22, [x20]
  250d20:	str	x21, [x19]
  250d24:	cbz	w8, 250d2c <lease_parse_in_addrs+0x84>
  250d28:	mov	w0, wzr
  250d2c:	ldp	x20, x19, [sp, #32]
  250d30:	ldp	x22, x21, [sp, #16]
  250d34:	ldp	x29, x30, [sp], #48
  250d38:	ret
  250d3c:	mov	w8, wzr
  250d40:	mov	w0, #0xfffffff4            	// #-12
  250d44:	cbnz	w8, 250d28 <lease_parse_in_addrs+0x80>
  250d48:	b	250d2c <lease_parse_in_addrs+0x84>
  250d4c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  250d50:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250d54:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  250d58:	add	x1, x1, #0x756
  250d5c:	add	x2, x2, #0xc80
  250d60:	add	x4, x4, #0x9ec
  250d64:	mov	w3, #0x183                 	// #387
  250d68:	bl	253740 <log_assert_failed_realm@plt>
  250d6c:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  250d70:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250d74:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  250d78:	add	x1, x1, #0xb2b
  250d7c:	add	x2, x2, #0xc80
  250d80:	add	x4, x4, #0x9ec
  250d84:	mov	w3, #0x184                 	// #388
  250d88:	mov	w0, wzr
  250d8c:	bl	253740 <log_assert_failed_realm@plt>
  250d90:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  250d94:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250d98:	adrp	x4, 20a000 <parse_argv.options-0x3f0>
  250d9c:	add	x1, x1, #0x655
  250da0:	add	x2, x2, #0xc80
  250da4:	add	x4, x4, #0x9ec
  250da8:	mov	w3, #0x185                 	// #389
  250dac:	mov	w0, wzr
  250db0:	bl	253740 <log_assert_failed_realm@plt>

0000000000250db4 <lease_parse_sip_server>:
  250db4:	stp	x29, x30, [sp, #-48]!
  250db8:	stp	x22, x21, [sp, #16]
  250dbc:	stp	x20, x19, [sp, #32]
  250dc0:	mov	x29, sp
  250dc4:	cbz	x0, 250e6c <lease_parse_sip_server+0xb8>
  250dc8:	mov	x20, x2
  250dcc:	cbz	x2, 250e8c <lease_parse_sip_server+0xd8>
  250dd0:	mov	x19, x3
  250dd4:	cbz	x3, 250eb0 <lease_parse_sip_server+0xfc>
  250dd8:	cbz	x1, 250df8 <lease_parse_sip_server+0x44>
  250ddc:	sub	w8, w1, #0x1
  250de0:	tst	w8, #0x3
  250de4:	b.eq	250e0c <lease_parse_sip_server+0x58>  // b.none
  250de8:	mov	w8, wzr
  250dec:	mov	w0, #0xffffffea            	// #-22
  250df0:	cbnz	w8, 250e48 <lease_parse_sip_server+0x94>
  250df4:	b	250e4c <lease_parse_sip_server+0x98>
  250df8:	ldr	x0, [x20]
  250dfc:	bl	2518b0 <mfree>
  250e00:	str	xzr, [x20]
  250e04:	str	xzr, [x19]
  250e08:	b	250e48 <lease_parse_sip_server+0x94>
  250e0c:	add	w9, w8, #0x3
  250e10:	cmp	w8, #0x0
  250e14:	csel	w8, w9, w8, lt  // lt = tstop
  250e18:	sbfx	x21, x8, #2, #30
  250e1c:	add	x0, x0, #0x1
  250e20:	mov	x1, x21
  250e24:	bl	253338 <memdup_multiply>
  250e28:	cbz	x0, 250e5c <lease_parse_sip_server+0xa8>
  250e2c:	mov	x22, x0
  250e30:	ldr	x0, [x20]
  250e34:	bl	2536e0 <free@plt>
  250e38:	mov	w8, #0x1                   	// #1
  250e3c:	str	x22, [x20]
  250e40:	str	x21, [x19]
  250e44:	cbz	w8, 250e4c <lease_parse_sip_server+0x98>
  250e48:	mov	w0, wzr
  250e4c:	ldp	x20, x19, [sp, #32]
  250e50:	ldp	x22, x21, [sp, #16]
  250e54:	ldp	x29, x30, [sp], #48
  250e58:	ret
  250e5c:	mov	w8, wzr
  250e60:	mov	w0, #0xfffffff4            	// #-12
  250e64:	cbnz	w8, 250e48 <lease_parse_sip_server+0x94>
  250e68:	b	250e4c <lease_parse_sip_server+0x98>
  250e6c:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  250e70:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250e74:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  250e78:	add	x1, x1, #0x756
  250e7c:	add	x2, x2, #0xc80
  250e80:	add	x4, x4, #0xf6d
  250e84:	mov	w3, #0x1a0                 	// #416
  250e88:	bl	253740 <log_assert_failed_realm@plt>
  250e8c:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  250e90:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250e94:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  250e98:	add	x1, x1, #0xb2b
  250e9c:	add	x2, x2, #0xc80
  250ea0:	add	x4, x4, #0xf6d
  250ea4:	mov	w3, #0x1a1                 	// #417
  250ea8:	mov	w0, wzr
  250eac:	bl	253740 <log_assert_failed_realm@plt>
  250eb0:	adrp	x1, 214000 <worker_hash_op+0x9ad0>
  250eb4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250eb8:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  250ebc:	add	x1, x1, #0x655
  250ec0:	add	x2, x2, #0xc80
  250ec4:	add	x4, x4, #0xf6d
  250ec8:	mov	w3, #0x1a2                 	// #418
  250ecc:	mov	w0, wzr
  250ed0:	bl	253740 <log_assert_failed_realm@plt>

0000000000250ed4 <lease_parse_routes>:
  250ed4:	sub	sp, sp, #0x70
  250ed8:	stp	x22, x21, [sp, #80]
  250edc:	stp	x20, x19, [sp, #96]
  250ee0:	mov	x19, x3
  250ee4:	mov	x20, x2
  250ee8:	mov	x21, x1
  250eec:	mov	x22, x0
  250ef0:	stp	x29, x30, [sp, #16]
  250ef4:	stp	x28, x27, [sp, #32]
  250ef8:	stp	x26, x25, [sp, #48]
  250efc:	stp	x24, x23, [sp, #64]
  250f00:	add	x29, sp, #0x10
  250f04:	cbnz	x0, 250f0c <lease_parse_routes+0x38>
  250f08:	cbnz	x21, 251090 <lease_parse_routes+0x1bc>
  250f0c:	cbz	x20, 2510b4 <lease_parse_routes+0x1e0>
  250f10:	cbz	x19, 2510d8 <lease_parse_routes+0x204>
  250f14:	cbz	x4, 2510fc <lease_parse_routes+0x228>
  250f18:	cbz	x21, 25101c <lease_parse_routes+0x148>
  250f1c:	tst	x21, #0x7
  250f20:	b.eq	250f2c <lease_parse_routes+0x58>  // b.none
  250f24:	mov	w0, #0xffffffea            	// #-22
  250f28:	b	251020 <lease_parse_routes+0x14c>
  250f2c:	ldr	x8, [x19]
  250f30:	mov	w3, #0xc                   	// #12
  250f34:	mov	x0, x20
  250f38:	mov	x1, x4
  250f3c:	add	x2, x8, x21, lsr #3
  250f40:	bl	254f60 <greedy_realloc@plt>
  250f44:	cbz	x0, 251040 <lease_parse_routes+0x16c>
  250f48:	cmp	x21, #0x8
  250f4c:	b.cc	25101c <lease_parse_routes+0x148>  // b.lo, b.ul, b.last
  250f50:	adrp	x24, 215000 <worker_hash_op+0xaad0>
  250f54:	adrp	x25, 210000 <worker_hash_op+0x5ad0>
  250f58:	mov	w26, #0xc                   	// #12
  250f5c:	mov	w27, #0x21                  	// #33
  250f60:	add	x24, x24, #0x736
  250f64:	add	x25, x25, #0x682
  250f68:	b	250f74 <lease_parse_routes+0xa0>
  250f6c:	cmp	x21, #0x7
  250f70:	b.ls	25101c <lease_parse_routes+0x148>  // b.plast
  250f74:	ldr	x28, [x20]
  250f78:	ldr	x23, [x19]
  250f7c:	mov	x0, x22
  250f80:	madd	x8, x23, x26, x28
  250f84:	add	x1, x8, #0x8
  250f88:	strb	w27, [x8, #9]
  250f8c:	bl	2550f0 <in4_addr_default_prefixlen@plt>
  250f90:	tbnz	w0, #31, 250fe8 <lease_parse_routes+0x114>
  250f94:	add	x2, sp, #0x8
  250f98:	mov	w1, #0x4                   	// #4
  250f9c:	mov	x0, x22
  250fa0:	bl	250c28 <lease_parse_be32>
  250fa4:	tbnz	w0, #31, 251048 <lease_parse_routes+0x174>
  250fa8:	ldr	w0, [sp, #8]
  250fac:	bl	255100 <inet_netof@plt>
  250fb0:	mov	w1, wzr
  250fb4:	bl	255110 <inet_makeaddr@plt>
  250fb8:	madd	x2, x23, x26, x28
  250fbc:	str	w0, [x2], #4
  250fc0:	add	x0, x22, #0x4
  250fc4:	mov	w1, #0x4                   	// #4
  250fc8:	bl	250c28 <lease_parse_be32>
  250fcc:	tbnz	w0, #31, 25106c <lease_parse_routes+0x198>
  250fd0:	ldr	x8, [x19]
  250fd4:	add	x22, x22, #0x8
  250fd8:	sub	x21, x21, #0x8
  250fdc:	add	x8, x8, #0x1
  250fe0:	str	x8, [x19]
  250fe4:	b	250f6c <lease_parse_routes+0x98>
  250fe8:	mov	w0, wzr
  250fec:	bl	2535b0 <log_get_max_level_realm@plt>
  250ff0:	cmp	w0, #0x7
  250ff4:	b.lt	250f6c <lease_parse_routes+0x98>  // b.tstop
  250ff8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  250ffc:	mov	w0, #0x7                   	// #7
  251000:	mov	w3, #0x1d8                 	// #472
  251004:	mov	w1, wzr
  251008:	add	x2, x2, #0xc80
  25100c:	mov	x4, x24
  251010:	mov	x5, x25
  251014:	bl	2535c0 <log_internal_realm@plt>
  251018:	b	250f6c <lease_parse_routes+0x98>
  25101c:	mov	w0, wzr
  251020:	ldp	x20, x19, [sp, #96]
  251024:	ldp	x22, x21, [sp, #80]
  251028:	ldp	x24, x23, [sp, #64]
  25102c:	ldp	x26, x25, [sp, #48]
  251030:	ldp	x28, x27, [sp, #32]
  251034:	ldp	x29, x30, [sp, #16]
  251038:	add	sp, sp, #0x70
  25103c:	ret
  251040:	mov	w0, #0xfffffff4            	// #-12
  251044:	b	251020 <lease_parse_routes+0x14c>
  251048:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  25104c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251050:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  251054:	add	x1, x1, #0xe1b
  251058:	add	x2, x2, #0xc80
  25105c:	add	x4, x4, #0x7e0
  251060:	mov	w3, #0x1dc                 	// #476
  251064:	mov	w0, wzr
  251068:	bl	253740 <log_assert_failed_realm@plt>
  25106c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  251070:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251074:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  251078:	add	x1, x1, #0xd5f
  25107c:	add	x2, x2, #0xc80
  251080:	add	x4, x4, #0x7e0
  251084:	mov	w3, #0x1e0                 	// #480
  251088:	mov	w0, wzr
  25108c:	bl	253740 <log_assert_failed_realm@plt>
  251090:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  251094:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251098:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  25109c:	add	x1, x1, #0x2af
  2510a0:	add	x2, x2, #0xc80
  2510a4:	add	x4, x4, #0x7e0
  2510a8:	mov	w3, #0x1c3                 	// #451
  2510ac:	mov	w0, wzr
  2510b0:	bl	253740 <log_assert_failed_realm@plt>
  2510b4:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  2510b8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2510bc:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  2510c0:	add	x1, x1, #0x78e
  2510c4:	add	x2, x2, #0xc80
  2510c8:	add	x4, x4, #0x7e0
  2510cc:	mov	w3, #0x1c4                 	// #452
  2510d0:	mov	w0, wzr
  2510d4:	bl	253740 <log_assert_failed_realm@plt>
  2510d8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  2510dc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2510e0:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  2510e4:	add	x1, x1, #0x334
  2510e8:	add	x2, x2, #0xc80
  2510ec:	add	x4, x4, #0x7e0
  2510f0:	mov	w3, #0x1c5                 	// #453
  2510f4:	mov	w0, wzr
  2510f8:	bl	253740 <log_assert_failed_realm@plt>
  2510fc:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  251100:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251104:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  251108:	add	x1, x1, #0x44a
  25110c:	add	x2, x2, #0xc80
  251110:	add	x4, x4, #0x7e0
  251114:	mov	w3, #0x1c6                 	// #454
  251118:	mov	w0, wzr
  25111c:	bl	253740 <log_assert_failed_realm@plt>

0000000000251120 <lease_parse_u16>:
  251120:	stp	x29, x30, [sp, #-32]!
  251124:	str	x19, [sp, #16]
  251128:	mov	x29, sp
  25112c:	cbz	x0, 251174 <lease_parse_u16+0x54>
  251130:	mov	x19, x2
  251134:	cbz	x2, 251194 <lease_parse_u16+0x74>
  251138:	cmp	x1, #0x2
  25113c:	b.ne	251164 <lease_parse_u16+0x44>  // b.any
  251140:	bl	253378 <unaligned_read_be16>
  251144:	mov	w8, w0
  251148:	and	w9, w8, #0xffff
  25114c:	cmp	w9, #0x44
  251150:	mov	w9, #0x44                  	// #68
  251154:	mov	w0, wzr
  251158:	csel	w8, w8, w9, hi  // hi = pmore
  25115c:	strh	w8, [x19]
  251160:	b	251168 <lease_parse_u16+0x48>
  251164:	mov	w0, #0xffffffea            	// #-22
  251168:	ldr	x19, [sp, #16]
  25116c:	ldp	x29, x30, [sp], #32
  251170:	ret
  251174:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  251178:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25117c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  251180:	add	x1, x1, #0x756
  251184:	add	x2, x2, #0xc80
  251188:	add	x4, x4, #0xb47
  25118c:	mov	w3, #0x132                 	// #306
  251190:	bl	253740 <log_assert_failed_realm@plt>
  251194:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  251198:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25119c:	adrp	x4, 217000 <worker_hash_op+0xcad0>
  2511a0:	add	x1, x1, #0xb2b
  2511a4:	add	x2, x2, #0xc80
  2511a8:	add	x4, x4, #0xb47
  2511ac:	mov	w3, #0x133                 	// #307
  2511b0:	mov	w0, wzr
  2511b4:	bl	253740 <log_assert_failed_realm@plt>

00000000002511b8 <lease_parse_domain>:
  2511b8:	sub	sp, sp, #0x30
  2511bc:	stp	x29, x30, [sp, #16]
  2511c0:	stp	x20, x19, [sp, #32]
  2511c4:	add	x29, sp, #0x10
  2511c8:	stp	xzr, xzr, [sp]
  2511cc:	cbz	x0, 251270 <lease_parse_domain+0xb8>
  2511d0:	mov	x19, x2
  2511d4:	cbz	x2, 251290 <lease_parse_domain+0xd8>
  2511d8:	add	x2, sp, #0x8
  2511dc:	bl	25157c <lease_parse_string>
  2511e0:	tbnz	w0, #31, 251218 <lease_parse_domain+0x60>
  2511e4:	ldr	x0, [sp, #8]
  2511e8:	cbz	x0, 251220 <lease_parse_domain+0x68>
  2511ec:	mov	x1, sp
  2511f0:	bl	2533b0 <dns_name_normalize>
  2511f4:	tbnz	w0, #31, 251218 <lease_parse_domain+0x60>
  2511f8:	ldr	x0, [sp]
  2511fc:	bl	255120 <is_localhost@plt>
  251200:	tbnz	w0, #0, 251210 <lease_parse_domain+0x58>
  251204:	ldr	x0, [sp]
  251208:	bl	255130 <dns_name_is_root@plt>
  25120c:	tbz	w0, #0, 251234 <lease_parse_domain+0x7c>
  251210:	mov	w20, #0xffffffea            	// #-22
  251214:	b	25124c <lease_parse_domain+0x94>
  251218:	mov	w20, w0
  25121c:	b	25124c <lease_parse_domain+0x94>
  251220:	ldr	x0, [x19]
  251224:	bl	2518b0 <mfree>
  251228:	mov	w20, wzr
  25122c:	str	xzr, [x19]
  251230:	b	25124c <lease_parse_domain+0x94>
  251234:	ldr	x0, [x19]
  251238:	bl	2536e0 <free@plt>
  25123c:	ldr	x8, [sp]
  251240:	mov	w20, wzr
  251244:	str	x8, [x19]
  251248:	str	xzr, [sp]
  25124c:	mov	x0, sp
  251250:	bl	251898 <freep>
  251254:	add	x0, sp, #0x8
  251258:	bl	251898 <freep>
  25125c:	mov	w0, w20
  251260:	ldp	x20, x19, [sp, #32]
  251264:	ldp	x29, x30, [sp, #16]
  251268:	add	sp, sp, #0x30
  25126c:	ret
  251270:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  251274:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251278:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  25127c:	add	x1, x1, #0x756
  251280:	add	x2, x2, #0xc80
  251284:	add	x4, x4, #0xfbe
  251288:	mov	w3, #0x168                 	// #360
  25128c:	bl	253740 <log_assert_failed_realm@plt>
  251290:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  251294:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251298:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  25129c:	add	x1, x1, #0xb2b
  2512a0:	add	x2, x2, #0xc80
  2512a4:	add	x4, x4, #0xfbe
  2512a8:	mov	w3, #0x169                 	// #361
  2512ac:	mov	w0, wzr
  2512b0:	bl	253740 <log_assert_failed_realm@plt>

00000000002512b4 <dhcp_lease_parse_search_domains>:
  2512b4:	sub	sp, sp, #0x90
  2512b8:	stp	x29, x30, [sp, #48]
  2512bc:	add	x29, sp, #0x30
  2512c0:	stp	x28, x27, [sp, #64]
  2512c4:	stp	x26, x25, [sp, #80]
  2512c8:	stp	x24, x23, [sp, #96]
  2512cc:	stp	x22, x21, [sp, #112]
  2512d0:	stp	x20, x19, [sp, #128]
  2512d4:	stur	xzr, [x29, #-8]
  2512d8:	cbz	x2, 251558 <dhcp_lease_parse_search_domains+0x2a4>
  2512dc:	mov	x21, x0
  2512e0:	cbz	x0, 25152c <dhcp_lease_parse_search_domains+0x278>
  2512e4:	mov	x20, x1
  2512e8:	cbz	x1, 25152c <dhcp_lease_parse_search_domains+0x278>
  2512ec:	mov	x27, xzr
  2512f0:	stp	x2, xzr, [sp]
  2512f4:	b	25130c <dhcp_lease_parse_search_domains+0x58>
  2512f8:	mov	w22, #0xfffffff4            	// #-12
  2512fc:	sub	x0, x29, #0x10
  251300:	bl	251898 <freep>
  251304:	mov	x27, x24
  251308:	cbnz	w25, 251500 <dhcp_lease_parse_search_domains+0x24c>
  25130c:	cmp	x27, x20
  251310:	b.cs	2514e8 <dhcp_lease_parse_search_domains+0x234>  // b.hs, b.nlast
  251314:	mov	x28, xzr
  251318:	mov	w26, #0x1                   	// #1
  25131c:	mov	x24, x27
  251320:	stp	xzr, xzr, [sp, #16]
  251324:	stur	xzr, [x29, #-16]
  251328:	b	251338 <dhcp_lease_parse_search_domains+0x84>
  25132c:	mov	w25, #0x8                   	// #8
  251330:	mov	x24, x19
  251334:	cbnz	w25, 251480 <dhcp_lease_parse_search_domains+0x1cc>
  251338:	ldrb	w23, [x21, x24]
  25133c:	add	x19, x24, #0x1
  251340:	cbz	x23, 25132c <dhcp_lease_parse_search_domains+0x78>
  251344:	cmp	w23, #0x3f
  251348:	b.hi	251390 <dhcp_lease_parse_search_domains+0xdc>  // b.pmore
  25134c:	add	x24, x19, x23
  251350:	cmp	x24, x20
  251354:	b.cs	2513dc <dhcp_lease_parse_search_domains+0x128>  // b.hs, b.nlast
  251358:	tst	w26, #0x1
  25135c:	mov	w8, #0xfd                  	// #253
  251360:	cinc	x8, x8, eq  // eq = none
  251364:	add	x2, x8, x28
  251368:	sub	x0, x29, #0x10
  25136c:	add	x1, sp, #0x18
  251370:	mov	w3, #0x1                   	// #1
  251374:	mov	w25, #0x1                   	// #1
  251378:	bl	254f60 <greedy_realloc@plt>
  25137c:	cbz	x0, 25140c <dhcp_lease_parse_search_domains+0x158>
  251380:	add	x0, x21, x19
  251384:	tbz	w26, #0, 251418 <dhcp_lease_parse_search_domains+0x164>
  251388:	mov	w26, wzr
  25138c:	b	25142c <dhcp_lease_parse_search_domains+0x178>
  251390:	cmp	w23, #0xc0
  251394:	b.cc	2513ec <dhcp_lease_parse_search_domains+0x138>  // b.lo, b.ul, b.last
  251398:	cmp	x19, x20
  25139c:	b.cs	2513f8 <dhcp_lease_parse_search_domains+0x144>  // b.hs, b.nlast
  2513a0:	ldrb	w19, [x21, x19]
  2513a4:	and	x8, x23, #0x3f
  2513a8:	bfi	x19, x8, #8, #6
  2513ac:	cmp	x19, x27
  2513b0:	add	x8, x24, #0x2
  2513b4:	b.cs	251454 <dhcp_lease_parse_search_domains+0x1a0>  // b.hs, b.nlast
  2513b8:	ldr	x9, [sp, #16]
  2513bc:	mov	w25, wzr
  2513c0:	mov	x27, x19
  2513c4:	cmp	x9, #0x0
  2513c8:	csel	x9, x8, x9, eq  // eq = none
  2513cc:	str	x9, [sp, #16]
  2513d0:	mov	x24, x19
  2513d4:	cbnz	w25, 251334 <dhcp_lease_parse_search_domains+0x80>
  2513d8:	b	251478 <dhcp_lease_parse_search_domains+0x1c4>
  2513dc:	mov	w22, #0xffffffb6            	// #-74
  2513e0:	mov	w25, #0x1                   	// #1
  2513e4:	cbnz	w25, 251334 <dhcp_lease_parse_search_domains+0x80>
  2513e8:	b	251478 <dhcp_lease_parse_search_domains+0x1c4>
  2513ec:	mov	w22, #0xffffffb6            	// #-74
  2513f0:	mov	w25, #0x1                   	// #1
  2513f4:	b	251330 <dhcp_lease_parse_search_domains+0x7c>
  2513f8:	mov	w22, #0xffffffb6            	// #-74
  2513fc:	mov	w25, #0x1                   	// #1
  251400:	mov	x24, x19
  251404:	cbnz	w25, 251334 <dhcp_lease_parse_search_domains+0x80>
  251408:	b	251478 <dhcp_lease_parse_search_domains+0x1c4>
  25140c:	mov	w22, #0xfffffff4            	// #-12
  251410:	cbnz	w25, 251334 <dhcp_lease_parse_search_domains+0x80>
  251414:	b	251478 <dhcp_lease_parse_search_domains+0x1c4>
  251418:	ldur	x8, [x29, #-16]
  25141c:	add	x9, x28, #0x1
  251420:	mov	w10, #0x2e                  	// #46
  251424:	strb	w10, [x8, x28]
  251428:	mov	x28, x9
  25142c:	ldur	x8, [x29, #-16]
  251430:	mov	w3, #0xfd                  	// #253
  251434:	mov	x1, x23
  251438:	add	x2, x8, x28
  25143c:	bl	255140 <dns_label_escape@plt>
  251440:	tbnz	w0, #31, 25146c <dhcp_lease_parse_search_domains+0x1b8>
  251444:	mov	w25, wzr
  251448:	add	x28, x28, w0, sxtw
  25144c:	cbnz	wzr, 251334 <dhcp_lease_parse_search_domains+0x80>
  251450:	b	251478 <dhcp_lease_parse_search_domains+0x1c4>
  251454:	mov	w22, #0xffffffb6            	// #-74
  251458:	mov	w25, #0x1                   	// #1
  25145c:	mov	x19, x8
  251460:	mov	x24, x19
  251464:	cbnz	w25, 251334 <dhcp_lease_parse_search_domains+0x80>
  251468:	b	251478 <dhcp_lease_parse_search_domains+0x1c4>
  25146c:	mov	w25, #0x1                   	// #1
  251470:	mov	w22, w0
  251474:	cbnz	w25, 251334 <dhcp_lease_parse_search_domains+0x80>
  251478:	mov	w25, wzr
  25147c:	b	251334 <dhcp_lease_parse_search_domains+0x80>
  251480:	cmp	w25, #0x8
  251484:	b.ne	2512fc <dhcp_lease_parse_search_domains+0x48>  // b.any
  251488:	add	x2, x28, #0x1
  25148c:	sub	x0, x29, #0x10
  251490:	add	x1, sp, #0x18
  251494:	mov	w3, #0x1                   	// #1
  251498:	mov	w25, #0x1                   	// #1
  25149c:	bl	254f60 <greedy_realloc@plt>
  2514a0:	cbz	x0, 2512f8 <dhcp_lease_parse_search_domains+0x44>
  2514a4:	ldur	x8, [x29, #-16]
  2514a8:	sub	x0, x29, #0x8
  2514ac:	strb	wzr, [x8, x28]
  2514b0:	ldur	x1, [x29, #-16]
  2514b4:	bl	254460 <strv_extend@plt>
  2514b8:	tbnz	w0, #31, 2514dc <dhcp_lease_parse_search_domains+0x228>
  2514bc:	ldr	x8, [sp, #8]
  2514c0:	mov	w25, wzr
  2514c4:	add	x8, x8, #0x1
  2514c8:	str	x8, [sp, #8]
  2514cc:	ldr	x8, [sp, #16]
  2514d0:	cmp	x8, #0x0
  2514d4:	csel	x24, x24, x8, eq  // eq = none
  2514d8:	b	2512fc <dhcp_lease_parse_search_domains+0x48>
  2514dc:	mov	w25, #0x1                   	// #1
  2514e0:	mov	w22, w0
  2514e4:	b	2512fc <dhcp_lease_parse_search_domains+0x48>
  2514e8:	ldur	x8, [x29, #-8]
  2514ec:	ldr	x9, [sp]
  2514f0:	stur	xzr, [x29, #-8]
  2514f4:	str	x8, [x9]
  2514f8:	ldr	x8, [sp, #8]
  2514fc:	mov	w22, w8
  251500:	sub	x0, x29, #0x8
  251504:	bl	251a40 <strv_freep>
  251508:	mov	w0, w22
  25150c:	ldp	x20, x19, [sp, #128]
  251510:	ldp	x22, x21, [sp, #112]
  251514:	ldp	x24, x23, [sp, #96]
  251518:	ldp	x26, x25, [sp, #80]
  25151c:	ldp	x28, x27, [sp, #64]
  251520:	ldp	x29, x30, [sp, #48]
  251524:	add	sp, sp, #0x90
  251528:	ret
  25152c:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  251530:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251534:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  251538:	add	x1, x1, #0x8a1
  25153c:	add	x2, x2, #0xc80
  251540:	add	x4, x4, #0x6ab
  251544:	mov	w3, #0x2dc                 	// #732
  251548:	mov	w0, wzr
  25154c:	bl	253f10 <log_assert_failed_return_realm@plt>
  251550:	mov	w22, #0xffffffc3            	// #-61
  251554:	b	251500 <dhcp_lease_parse_search_domains+0x24c>
  251558:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  25155c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251560:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  251564:	add	x1, x1, #0x3b0
  251568:	add	x2, x2, #0xc80
  25156c:	add	x4, x4, #0x6ab
  251570:	mov	w3, #0x2db                 	// #731
  251574:	mov	w0, wzr
  251578:	bl	253740 <log_assert_failed_realm@plt>

000000000025157c <lease_parse_string>:
  25157c:	stp	x29, x30, [sp, #-48]!
  251580:	str	x21, [sp, #16]
  251584:	stp	x20, x19, [sp, #32]
  251588:	mov	x29, sp
  25158c:	cbz	x0, 251620 <lease_parse_string+0xa4>
  251590:	mov	x19, x2
  251594:	cbz	x2, 251640 <lease_parse_string+0xc4>
  251598:	mov	x20, x1
  25159c:	cbz	x1, 2515c4 <lease_parse_string+0x48>
  2515a0:	sub	x2, x20, #0x1
  2515a4:	mov	w1, wzr
  2515a8:	mov	x21, x0
  2515ac:	bl	254490 <memchr@plt>
  2515b0:	cbz	x0, 2515d4 <lease_parse_string+0x58>
  2515b4:	mov	w8, wzr
  2515b8:	mov	w0, #0xffffffea            	// #-22
  2515bc:	cbnz	w8, 2515fc <lease_parse_string+0x80>
  2515c0:	b	251600 <lease_parse_string+0x84>
  2515c4:	ldr	x0, [x19]
  2515c8:	bl	2518b0 <mfree>
  2515cc:	str	xzr, [x19]
  2515d0:	b	2515fc <lease_parse_string+0x80>
  2515d4:	mov	x0, x21
  2515d8:	mov	x1, x20
  2515dc:	bl	255150 <memdup_suffix0@plt>
  2515e0:	cbz	x0, 251610 <lease_parse_string+0x94>
  2515e4:	mov	x20, x0
  2515e8:	ldr	x0, [x19]
  2515ec:	bl	2536e0 <free@plt>
  2515f0:	mov	w8, #0x1                   	// #1
  2515f4:	str	x20, [x19]
  2515f8:	cbz	w8, 251600 <lease_parse_string+0x84>
  2515fc:	mov	w0, wzr
  251600:	ldp	x20, x19, [sp, #32]
  251604:	ldr	x21, [sp, #16]
  251608:	ldp	x29, x30, [sp], #48
  25160c:	ret
  251610:	mov	w8, wzr
  251614:	mov	w0, #0xfffffff4            	// #-12
  251618:	cbnz	w8, 2515fc <lease_parse_string+0x80>
  25161c:	b	251600 <lease_parse_string+0x84>
  251620:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  251624:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251628:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  25162c:	add	x1, x1, #0x756
  251630:	add	x2, x2, #0xc80
  251634:	add	x4, x4, #0xe4a
  251638:	mov	w3, #0x14b                 	// #331
  25163c:	bl	253740 <log_assert_failed_realm@plt>
  251640:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  251644:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251648:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  25164c:	add	x1, x1, #0xb2b
  251650:	add	x2, x2, #0xc80
  251654:	add	x4, x4, #0xe4a
  251658:	mov	w3, #0x14c                 	// #332
  25165c:	mov	w0, wzr
  251660:	bl	253740 <log_assert_failed_realm@plt>

0000000000251664 <lease_parse_classless_routes>:
  251664:	stp	x29, x30, [sp, #-96]!
  251668:	stp	x24, x23, [sp, #48]
  25166c:	stp	x22, x21, [sp, #64]
  251670:	stp	x20, x19, [sp, #80]
  251674:	mov	x19, x4
  251678:	mov	x20, x3
  25167c:	mov	x21, x2
  251680:	mov	x23, x1
  251684:	mov	x22, x0
  251688:	stp	x28, x27, [sp, #16]
  25168c:	stp	x26, x25, [sp, #32]
  251690:	mov	x29, sp
  251694:	cbnz	x0, 25169c <lease_parse_classless_routes+0x38>
  251698:	cbnz	x23, 2517e4 <lease_parse_classless_routes+0x180>
  25169c:	cbz	x21, 251808 <lease_parse_classless_routes+0x1a4>
  2516a0:	cbz	x20, 25182c <lease_parse_classless_routes+0x1c8>
  2516a4:	cbz	x19, 251850 <lease_parse_classless_routes+0x1ec>
  2516a8:	cbz	x23, 2517c0 <lease_parse_classless_routes+0x15c>
  2516ac:	mov	w26, #0xc                   	// #12
  2516b0:	b	2516c0 <lease_parse_classless_routes+0x5c>
  2516b4:	mov	w8, wzr
  2516b8:	mov	w24, #0xfffffff4            	// #-12
  2516bc:	tbz	w8, #0, 2517c4 <lease_parse_classless_routes+0x160>
  2516c0:	cbz	x23, 2517c0 <lease_parse_classless_routes+0x15c>
  2516c4:	ldr	x8, [x20]
  2516c8:	mov	w3, #0xc                   	// #12
  2516cc:	mov	x0, x21
  2516d0:	mov	x1, x19
  2516d4:	add	x2, x8, #0x1
  2516d8:	bl	254f60 <greedy_realloc@plt>
  2516dc:	cbz	x0, 2516b4 <lease_parse_classless_routes+0x50>
  2516e0:	ldr	x28, [x21]
  2516e4:	ldr	x27, [x20]
  2516e8:	mov	w8, #0x79                  	// #121
  2516ec:	madd	x0, x27, x26, x28
  2516f0:	strb	w8, [x0, #9]
  2516f4:	ldrb	w8, [x22]
  2516f8:	cbz	w8, 251718 <lease_parse_classless_routes+0xb4>
  2516fc:	sub	w9, w8, #0x1
  251700:	add	w10, w8, #0x6
  251704:	cmp	w9, #0x0
  251708:	csel	w9, w10, w9, lt  // lt = tstop
  25170c:	asr	w9, w9, #3
  251710:	add	w9, w9, #0x1
  251714:	b	25171c <lease_parse_classless_routes+0xb8>
  251718:	mov	w9, wzr
  25171c:	and	w25, w9, #0xff
  251720:	madd	x10, x27, x26, x28
  251724:	add	x22, x22, #0x1
  251728:	cmp	w25, #0x4
  25172c:	sub	x23, x23, #0x1
  251730:	strb	w8, [x10, #8]
  251734:	b.ls	251744 <lease_parse_classless_routes+0xe0>  // b.plast
  251738:	mov	w8, wzr
  25173c:	mov	w24, #0xffffffea            	// #-22
  251740:	b	2516bc <lease_parse_classless_routes+0x58>
  251744:	subs	x26, x23, x25
  251748:	b.cs	25175c <lease_parse_classless_routes+0xf8>  // b.hs, b.nlast
  25174c:	mov	w8, wzr
  251750:	mov	w24, #0xffffffea            	// #-22
  251754:	mov	w26, #0xc                   	// #12
  251758:	b	2516bc <lease_parse_classless_routes+0x58>
  25175c:	mov	x1, x22
  251760:	mov	x2, x25
  251764:	str	wzr, [x0]
  251768:	bl	2540c0 <memcpy@plt>
  25176c:	subs	x23, x26, #0x4
  251770:	add	x22, x22, x25
  251774:	b.cs	25178c <lease_parse_classless_routes+0x128>  // b.hs, b.nlast
  251778:	mov	w8, wzr
  25177c:	mov	w24, #0xffffffea            	// #-22
  251780:	mov	x23, x26
  251784:	mov	w26, #0xc                   	// #12
  251788:	b	2516bc <lease_parse_classless_routes+0x58>
  25178c:	mov	w26, #0xc                   	// #12
  251790:	madd	x8, x27, x26, x28
  251794:	add	x2, x8, #0x4
  251798:	mov	w1, #0x4                   	// #4
  25179c:	mov	x0, x22
  2517a0:	bl	250c28 <lease_parse_be32>
  2517a4:	tbnz	w0, #31, 251874 <lease_parse_classless_routes+0x210>
  2517a8:	ldr	x8, [x20]
  2517ac:	add	x22, x22, #0x4
  2517b0:	add	x8, x8, #0x1
  2517b4:	str	x8, [x20]
  2517b8:	mov	w8, #0x1                   	// #1
  2517bc:	b	2516bc <lease_parse_classless_routes+0x58>
  2517c0:	mov	w24, wzr
  2517c4:	mov	w0, w24
  2517c8:	ldp	x20, x19, [sp, #80]
  2517cc:	ldp	x22, x21, [sp, #64]
  2517d0:	ldp	x24, x23, [sp, #48]
  2517d4:	ldp	x26, x25, [sp, #32]
  2517d8:	ldp	x28, x27, [sp, #16]
  2517dc:	ldp	x29, x30, [sp], #96
  2517e0:	ret
  2517e4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  2517e8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2517ec:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  2517f0:	add	x1, x1, #0x2af
  2517f4:	add	x2, x2, #0xc80
  2517f8:	add	x4, x4, #0x92e
  2517fc:	mov	w3, #0x1ef                 	// #495
  251800:	mov	w0, wzr
  251804:	bl	253740 <log_assert_failed_realm@plt>
  251808:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  25180c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251810:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  251814:	add	x1, x1, #0x78e
  251818:	add	x2, x2, #0xc80
  25181c:	add	x4, x4, #0x92e
  251820:	mov	w3, #0x1f0                 	// #496
  251824:	mov	w0, wzr
  251828:	bl	253740 <log_assert_failed_realm@plt>
  25182c:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  251830:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251834:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  251838:	add	x1, x1, #0x334
  25183c:	add	x2, x2, #0xc80
  251840:	add	x4, x4, #0x92e
  251844:	mov	w3, #0x1f1                 	// #497
  251848:	mov	w0, wzr
  25184c:	bl	253740 <log_assert_failed_realm@plt>
  251850:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  251854:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251858:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  25185c:	add	x1, x1, #0x44a
  251860:	add	x2, x2, #0xc80
  251864:	add	x4, x4, #0x92e
  251868:	mov	w3, #0x1f2                 	// #498
  25186c:	mov	w0, wzr
  251870:	bl	253740 <log_assert_failed_realm@plt>
  251874:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  251878:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25187c:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  251880:	add	x1, x1, #0xd5f
  251884:	add	x2, x2, #0xc80
  251888:	add	x4, x4, #0x92e
  25188c:	mov	w3, #0x214                 	// #532
  251890:	mov	w0, wzr
  251894:	bl	253740 <log_assert_failed_realm@plt>

0000000000251898 <freep>:
  251898:	stp	x29, x30, [sp, #-16]!
  25189c:	ldr	x0, [x0]
  2518a0:	mov	x29, sp
  2518a4:	bl	2536e0 <free@plt>
  2518a8:	ldp	x29, x30, [sp], #16
  2518ac:	ret

00000000002518b0 <mfree>:
  2518b0:	stp	x29, x30, [sp, #-16]!
  2518b4:	mov	x29, sp
  2518b8:	bl	2536e0 <free@plt>
  2518bc:	ldp	x29, x30, [sp], #16
  2518c0:	ret

00000000002518c4 <dhcp_lease_insert_private_option>:
  2518c4:	stp	x29, x30, [sp, #-80]!
  2518c8:	str	x25, [sp, #16]
  2518cc:	stp	x24, x23, [sp, #32]
  2518d0:	stp	x22, x21, [sp, #48]
  2518d4:	stp	x20, x19, [sp, #64]
  2518d8:	mov	x29, sp
  2518dc:	cbz	x0, 251a20 <dhcp_lease_insert_private_option+0x15c>
  2518e0:	mov	x19, x0
  2518e4:	ldr	x24, [x19, #216]!
  2518e8:	mov	w22, w3
  2518ec:	mov	x21, x2
  2518f0:	mov	w20, w1
  2518f4:	cmp	x24, #0x0
  2518f8:	cset	w25, ne  // ne = any
  2518fc:	cbz	x24, 251920 <dhcp_lease_insert_private_option+0x5c>
  251900:	ldrb	w8, [x24, #16]
  251904:	cmp	w8, w20, uxtb
  251908:	b.hi	251920 <dhcp_lease_insert_private_option+0x5c>  // b.pmore
  25190c:	and	w8, w8, #0xff
  251910:	cmp	w8, w20, uxtb
  251914:	b.eq	2519b4 <dhcp_lease_insert_private_option+0xf0>  // b.none
  251918:	ldr	x24, [x24]
  25191c:	b	2518f4 <dhcp_lease_insert_private_option+0x30>
  251920:	mov	w0, #0x20                  	// #32
  251924:	mov	w1, #0x1                   	// #1
  251928:	bl	2500bc <malloc_multiply>
  25192c:	cbz	x0, 251978 <dhcp_lease_insert_private_option+0xb4>
  251930:	mov	x23, x0
  251934:	strb	w20, [x0, #16]
  251938:	strb	w22, [x0, #17]
  25193c:	and	x1, x22, #0xff
  251940:	mov	x0, x21
  251944:	bl	2550d0 <memdup@plt>
  251948:	str	x0, [x23, #24]
  25194c:	cbz	x0, 251980 <dhcp_lease_insert_private_option+0xbc>
  251950:	tbz	w25, #0, 251990 <dhcp_lease_insert_private_option+0xcc>
  251954:	ldr	x8, [x24, #8]
  251958:	mov	w0, wzr
  25195c:	cmp	x8, #0x0
  251960:	str	x8, [x23, #8]
  251964:	csel	x8, x19, x8, eq  // eq = none
  251968:	str	x23, [x8]
  25196c:	str	x24, [x23]
  251970:	str	x23, [x24, #8]
  251974:	b	251a08 <dhcp_lease_insert_private_option+0x144>
  251978:	mov	w0, #0xfffffff4            	// #-12
  25197c:	b	251a08 <dhcp_lease_insert_private_option+0x144>
  251980:	mov	x0, x23
  251984:	bl	2536e0 <free@plt>
  251988:	mov	w0, #0xfffffff4            	// #-12
  25198c:	b	251a08 <dhcp_lease_insert_private_option+0x144>
  251990:	ldr	x8, [x19]
  251994:	cbz	x8, 2519fc <dhcp_lease_insert_private_option+0x138>
  251998:	mov	x9, x8
  25199c:	ldr	x8, [x8]
  2519a0:	cbnz	x8, 251998 <dhcp_lease_insert_private_option+0xd4>
  2519a4:	mov	w0, wzr
  2519a8:	stp	xzr, x9, [x23]
  2519ac:	str	x23, [x9]
  2519b0:	b	251a08 <dhcp_lease_insert_private_option+0x144>
  2519b4:	mov	w0, wzr
  2519b8:	bl	2535b0 <log_get_max_level_realm@plt>
  2519bc:	cmp	w0, #0x7
  2519c0:	mov	w0, wzr
  2519c4:	b.lt	251a08 <dhcp_lease_insert_private_option+0x144>  // b.tstop
  2519c8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2519cc:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2519d0:	adrp	x5, 212000 <worker_hash_op+0x7ad0>
  2519d4:	and	w6, w20, #0xff
  2519d8:	add	x2, x2, #0xc80
  2519dc:	add	x4, x4, #0x3b8
  2519e0:	add	x5, x5, #0x227
  2519e4:	mov	w0, #0x7                   	// #7
  2519e8:	mov	w3, #0x337                 	// #823
  2519ec:	mov	w1, wzr
  2519f0:	bl	2535c0 <log_internal_realm@plt>
  2519f4:	mov	w0, wzr
  2519f8:	b	251a08 <dhcp_lease_insert_private_option+0x144>
  2519fc:	mov	w0, wzr
  251a00:	stp	xzr, xzr, [x23]
  251a04:	str	x23, [x19]
  251a08:	ldp	x20, x19, [sp, #64]
  251a0c:	ldp	x22, x21, [sp, #48]
  251a10:	ldp	x24, x23, [sp, #32]
  251a14:	ldr	x25, [sp, #16]
  251a18:	ldp	x29, x30, [sp], #80
  251a1c:	ret
  251a20:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  251a24:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  251a28:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  251a2c:	add	x1, x1, #0x3
  251a30:	add	x2, x2, #0xc80
  251a34:	add	x4, x4, #0x5ce
  251a38:	mov	w3, #0x331                 	// #817
  251a3c:	bl	253740 <log_assert_failed_realm@plt>

0000000000251a40 <strv_freep>:
  251a40:	stp	x29, x30, [sp, #-16]!
  251a44:	ldr	x0, [x0]
  251a48:	mov	x29, sp
  251a4c:	cbz	x0, 251a54 <strv_freep+0x14>
  251a50:	bl	254150 <strv_free@plt>
  251a54:	ldp	x29, x30, [sp], #16
  251a58:	ret

0000000000251a5c <dhcp_lease_new>:
  251a5c:	stp	x29, x30, [sp, #-32]!
  251a60:	stp	x20, x19, [sp, #16]
  251a64:	mov	x19, x0
  251a68:	mov	w0, #0x1                   	// #1
  251a6c:	mov	w1, #0xe0                  	// #224
  251a70:	mov	x29, sp
  251a74:	mov	w20, #0x1                   	// #1
  251a78:	bl	254940 <calloc@plt>
  251a7c:	cbz	x0, 251a94 <dhcp_lease_new+0x38>
  251a80:	mov	x8, x0
  251a84:	mov	w0, wzr
  251a88:	str	w20, [x8]
  251a8c:	str	x8, [x19]
  251a90:	b	251a98 <dhcp_lease_new+0x3c>
  251a94:	mov	w0, #0xfffffff4            	// #-12
  251a98:	ldp	x20, x19, [sp, #16]
  251a9c:	ldp	x29, x30, [sp], #32
  251aa0:	ret

0000000000251aa4 <dhcp_lease_save>:
  251aa4:	sub	sp, sp, #0xc0
  251aa8:	stp	x29, x30, [sp, #144]
  251aac:	add	x29, sp, #0x90
  251ab0:	stp	x22, x21, [sp, #160]
  251ab4:	stp	x20, x19, [sp, #176]
  251ab8:	stp	xzr, xzr, [x29, #-16]
  251abc:	stp	xzr, xzr, [sp, #32]
  251ac0:	cbz	x0, 252144 <dhcp_lease_save+0x6a0>
  251ac4:	mov	x19, x1
  251ac8:	cbz	x1, 252164 <dhcp_lease_save+0x6c0>
  251acc:	mov	x20, x0
  251ad0:	sub	x1, x29, #0x10
  251ad4:	sub	x2, x29, #0x8
  251ad8:	mov	x0, x19
  251adc:	bl	255160 <fopen_temporary@plt>
  251ae0:	tbnz	w0, #31, 252064 <dhcp_lease_save+0x5c0>
  251ae4:	ldur	x0, [x29, #-16]
  251ae8:	bl	254420 <fileno@plt>
  251aec:	mov	w1, #0x1a4                 	// #420
  251af0:	bl	255170 <fchmod@plt>
  251af4:	ldur	x3, [x29, #-16]
  251af8:	adrp	x0, 213000 <worker_hash_op+0x8ad0>
  251afc:	add	x0, x0, #0xedb
  251b00:	mov	w1, #0x26                  	// #38
  251b04:	mov	w2, #0x1                   	// #1
  251b08:	bl	255180 <fwrite@plt>
  251b0c:	sub	x1, x29, #0x18
  251b10:	mov	x0, x20
  251b14:	bl	24f78c <sd_dhcp_lease_get_address>
  251b18:	tbnz	w0, #31, 251b48 <dhcp_lease_save+0xa4>
  251b1c:	ldur	x21, [x29, #-16]
  251b20:	sub	x1, x29, #0x18
  251b24:	add	x2, sp, #0x40
  251b28:	mov	w0, #0x2                   	// #2
  251b2c:	mov	w3, #0x10                  	// #16
  251b30:	bl	255080 <inet_ntop@plt>
  251b34:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  251b38:	mov	x2, x0
  251b3c:	add	x1, x1, #0x8d0
  251b40:	mov	x0, x21
  251b44:	bl	254780 <fprintf@plt>
  251b48:	sub	x1, x29, #0x18
  251b4c:	mov	x0, x20
  251b50:	bl	24fe58 <sd_dhcp_lease_get_netmask>
  251b54:	tbnz	w0, #31, 251b84 <dhcp_lease_save+0xe0>
  251b58:	ldur	x21, [x29, #-16]
  251b5c:	sub	x1, x29, #0x18
  251b60:	add	x2, sp, #0x40
  251b64:	mov	w0, #0x2                   	// #2
  251b68:	mov	w3, #0x10                  	// #16
  251b6c:	bl	255080 <inet_ntop@plt>
  251b70:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  251b74:	mov	x2, x0
  251b78:	add	x1, x1, #0xa76
  251b7c:	mov	x0, x21
  251b80:	bl	254780 <fprintf@plt>
  251b84:	sub	x1, x29, #0x20
  251b88:	mov	x0, x20
  251b8c:	bl	24fdd0 <sd_dhcp_lease_get_router>
  251b90:	cmp	w0, #0x1
  251b94:	b.lt	251bd8 <dhcp_lease_save+0x134>  // b.tstop
  251b98:	ldur	x3, [x29, #-16]
  251b9c:	mov	w21, w0
  251ba0:	adrp	x0, 20c000 <worker_hash_op+0x1ad0>
  251ba4:	add	x0, x0, #0x512
  251ba8:	mov	w1, #0x7                   	// #7
  251bac:	mov	w2, #0x1                   	// #1
  251bb0:	bl	255180 <fwrite@plt>
  251bb4:	ldur	x0, [x29, #-16]
  251bb8:	ldur	x1, [x29, #-32]
  251bbc:	sxtw	x2, w21
  251bc0:	mov	w3, wzr
  251bc4:	mov	x4, xzr
  251bc8:	bl	24ed4c <serialize_in_addrs>
  251bcc:	ldur	x1, [x29, #-16]
  251bd0:	mov	w0, #0xa                   	// #10
  251bd4:	bl	255070 <fputc@plt>
  251bd8:	sub	x1, x29, #0x18
  251bdc:	mov	x0, x20
  251be0:	bl	24fee4 <sd_dhcp_lease_get_server_identifier>
  251be4:	tbnz	w0, #31, 251c14 <dhcp_lease_save+0x170>
  251be8:	ldur	x21, [x29, #-16]
  251bec:	sub	x1, x29, #0x18
  251bf0:	add	x2, sp, #0x40
  251bf4:	mov	w0, #0x2                   	// #2
  251bf8:	mov	w3, #0x10                  	// #16
  251bfc:	bl	255080 <inet_ntop@plt>
  251c00:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  251c04:	mov	x2, x0
  251c08:	add	x1, x1, #0xcd0
  251c0c:	mov	x0, x21
  251c10:	bl	254780 <fprintf@plt>
  251c14:	sub	x1, x29, #0x18
  251c18:	mov	x0, x20
  251c1c:	bl	24ff68 <sd_dhcp_lease_get_next_server>
  251c20:	tbnz	w0, #31, 251c50 <dhcp_lease_save+0x1ac>
  251c24:	ldur	x21, [x29, #-16]
  251c28:	sub	x1, x29, #0x18
  251c2c:	add	x2, sp, #0x40
  251c30:	mov	w0, #0x2                   	// #2
  251c34:	mov	w3, #0x10                  	// #16
  251c38:	bl	255080 <inet_ntop@plt>
  251c3c:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  251c40:	mov	x2, x0
  251c44:	add	x1, x1, #0x3f
  251c48:	mov	x0, x21
  251c4c:	bl	254780 <fprintf@plt>
  251c50:	sub	x1, x29, #0x18
  251c54:	mov	x0, x20
  251c58:	bl	24f810 <sd_dhcp_lease_get_broadcast>
  251c5c:	tbnz	w0, #31, 251c8c <dhcp_lease_save+0x1e8>
  251c60:	ldur	x21, [x29, #-16]
  251c64:	sub	x1, x29, #0x18
  251c68:	add	x2, sp, #0x40
  251c6c:	mov	w0, #0x2                   	// #2
  251c70:	mov	w3, #0x10                  	// #16
  251c74:	bl	255080 <inet_ntop@plt>
  251c78:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  251c7c:	mov	x2, x0
  251c80:	add	x1, x1, #0x280
  251c84:	mov	x0, x21
  251c88:	bl	254780 <fprintf@plt>
  251c8c:	add	x1, sp, #0x34
  251c90:	mov	x0, x20
  251c94:	bl	24fa28 <sd_dhcp_lease_get_mtu>
  251c98:	tbnz	w0, #31, 251cb0 <dhcp_lease_save+0x20c>
  251c9c:	ldur	x0, [x29, #-16]
  251ca0:	ldrh	w2, [sp, #52]
  251ca4:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  251ca8:	add	x1, x1, #0x8b3
  251cac:	bl	254780 <fprintf@plt>
  251cb0:	add	x1, sp, #0x1c
  251cb4:	mov	x0, x20
  251cb8:	bl	24f920 <sd_dhcp_lease_get_t1>
  251cbc:	tbnz	w0, #31, 251cd4 <dhcp_lease_save+0x230>
  251cc0:	ldur	x0, [x29, #-16]
  251cc4:	ldr	w2, [sp, #28]
  251cc8:	adrp	x1, 212000 <worker_hash_op+0x7ad0>
  251ccc:	add	x1, x1, #0x8bb
  251cd0:	bl	254780 <fprintf@plt>
  251cd4:	add	x1, sp, #0x18
  251cd8:	mov	x0, x20
  251cdc:	bl	24f9a4 <sd_dhcp_lease_get_t2>
  251ce0:	tbnz	w0, #31, 251cf8 <dhcp_lease_save+0x254>
  251ce4:	ldur	x0, [x29, #-16]
  251ce8:	ldr	w2, [sp, #24]
  251cec:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  251cf0:	add	x1, x1, #0xade
  251cf4:	bl	254780 <fprintf@plt>
  251cf8:	add	x1, sp, #0x14
  251cfc:	mov	x0, x20
  251d00:	bl	24f89c <sd_dhcp_lease_get_lifetime>
  251d04:	tbnz	w0, #31, 251d1c <dhcp_lease_save+0x278>
  251d08:	ldur	x0, [x29, #-16]
  251d0c:	ldr	w2, [sp, #20]
  251d10:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  251d14:	add	x1, x1, #0xdbf
  251d18:	bl	254780 <fprintf@plt>
  251d1c:	sub	x1, x29, #0x20
  251d20:	mov	x0, x20
  251d24:	bl	24faac <sd_dhcp_lease_get_dns>
  251d28:	cmp	w0, #0x1
  251d2c:	b.lt	251d70 <dhcp_lease_save+0x2cc>  // b.tstop
  251d30:	ldur	x3, [x29, #-16]
  251d34:	mov	w21, w0
  251d38:	adrp	x0, 20c000 <worker_hash_op+0x1ad0>
  251d3c:	add	x0, x0, #0x51a
  251d40:	mov	w1, #0x4                   	// #4
  251d44:	mov	w2, #0x1                   	// #1
  251d48:	bl	255180 <fwrite@plt>
  251d4c:	ldur	x0, [x29, #-16]
  251d50:	ldur	x1, [x29, #-32]
  251d54:	sxtw	x2, w21
  251d58:	mov	w3, wzr
  251d5c:	mov	x4, xzr
  251d60:	bl	24ed4c <serialize_in_addrs>
  251d64:	ldur	x1, [x29, #-16]
  251d68:	mov	w0, #0xa                   	// #10
  251d6c:	bl	255070 <fputc@plt>
  251d70:	sub	x1, x29, #0x20
  251d74:	mov	x0, x20
  251d78:	bl	24fb34 <sd_dhcp_lease_get_ntp>
  251d7c:	cmp	w0, #0x1
  251d80:	b.lt	251dc4 <dhcp_lease_save+0x320>  // b.tstop
  251d84:	ldur	x3, [x29, #-16]
  251d88:	mov	w21, w0
  251d8c:	adrp	x0, 217000 <worker_hash_op+0xcad0>
  251d90:	add	x0, x0, #0x484
  251d94:	mov	w1, #0x4                   	// #4
  251d98:	mov	w2, #0x1                   	// #1
  251d9c:	bl	255180 <fwrite@plt>
  251da0:	ldur	x0, [x29, #-16]
  251da4:	ldur	x1, [x29, #-32]
  251da8:	sxtw	x2, w21
  251dac:	mov	w3, wzr
  251db0:	mov	x4, xzr
  251db4:	bl	24ed4c <serialize_in_addrs>
  251db8:	ldur	x1, [x29, #-16]
  251dbc:	mov	w0, #0xa                   	// #10
  251dc0:	bl	255070 <fputc@plt>
  251dc4:	sub	x1, x29, #0x20
  251dc8:	mov	x0, x20
  251dcc:	bl	24fbbc <sd_dhcp_lease_get_sip>
  251dd0:	cmp	w0, #0x1
  251dd4:	b.lt	251e18 <dhcp_lease_save+0x374>  // b.tstop
  251dd8:	ldur	x3, [x29, #-16]
  251ddc:	mov	w21, w0
  251de0:	adrp	x0, 217000 <worker_hash_op+0xcad0>
  251de4:	add	x0, x0, #0x489
  251de8:	mov	w1, #0x4                   	// #4
  251dec:	mov	w2, #0x1                   	// #1
  251df0:	bl	255180 <fwrite@plt>
  251df4:	ldur	x0, [x29, #-16]
  251df8:	ldur	x1, [x29, #-32]
  251dfc:	sxtw	x2, w21
  251e00:	mov	w3, wzr
  251e04:	mov	x4, xzr
  251e08:	bl	24ed4c <serialize_in_addrs>
  251e0c:	ldur	x1, [x29, #-16]
  251e10:	mov	w0, #0xa                   	// #10
  251e14:	bl	255070 <fputc@plt>
  251e18:	add	x1, sp, #0x38
  251e1c:	mov	x0, x20
  251e20:	bl	24fc44 <sd_dhcp_lease_get_domainname>
  251e24:	tbnz	w0, #31, 251e3c <dhcp_lease_save+0x398>
  251e28:	ldur	x0, [x29, #-16]
  251e2c:	ldr	x2, [sp, #56]
  251e30:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  251e34:	add	x1, x1, #0x83f
  251e38:	bl	254780 <fprintf@plt>
  251e3c:	add	x1, sp, #0x20
  251e40:	mov	x0, x20
  251e44:	bl	2500fc <sd_dhcp_lease_get_search_domains>
  251e48:	cmp	w0, #0x1
  251e4c:	b.lt	251e88 <dhcp_lease_save+0x3e4>  // b.tstop
  251e50:	ldur	x3, [x29, #-16]
  251e54:	adrp	x0, 20b000 <worker_hash_op+0xad0>
  251e58:	add	x0, x0, #0x8
  251e5c:	mov	w1, #0x13                  	// #19
  251e60:	mov	w2, #0x1                   	// #1
  251e64:	bl	255180 <fwrite@plt>
  251e68:	ldur	x0, [x29, #-16]
  251e6c:	ldr	x1, [sp, #32]
  251e70:	mov	x2, xzr
  251e74:	mov	x3, xzr
  251e78:	bl	255190 <fputstrv@plt>
  251e7c:	ldur	x1, [x29, #-16]
  251e80:	mov	w0, #0xa                   	// #10
  251e84:	bl	255070 <fputc@plt>
  251e88:	add	x1, sp, #0x38
  251e8c:	mov	x0, x20
  251e90:	bl	24fcc8 <sd_dhcp_lease_get_hostname>
  251e94:	tbnz	w0, #31, 251eac <dhcp_lease_save+0x408>
  251e98:	ldur	x0, [x29, #-16]
  251e9c:	ldr	x2, [sp, #56]
  251ea0:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  251ea4:	add	x1, x1, #0x1c
  251ea8:	bl	254780 <fprintf@plt>
  251eac:	add	x1, sp, #0x38
  251eb0:	mov	x0, x20
  251eb4:	bl	24fd4c <sd_dhcp_lease_get_root_path>
  251eb8:	tbnz	w0, #31, 251ed0 <dhcp_lease_save+0x42c>
  251ebc:	ldur	x0, [x29, #-16]
  251ec0:	ldr	x2, [sp, #56]
  251ec4:	adrp	x1, 215000 <worker_hash_op+0xaad0>
  251ec8:	add	x1, x1, #0x6f2
  251ecc:	bl	254780 <fprintf@plt>
  251ed0:	add	x1, sp, #0x28
  251ed4:	mov	x0, x20
  251ed8:	bl	24ffec <sd_dhcp_lease_get_routes>
  251edc:	cmp	w0, #0x1
  251ee0:	b.lt	251f00 <dhcp_lease_save+0x45c>  // b.tstop
  251ee4:	ldur	x8, [x29, #-16]
  251ee8:	ldr	x2, [sp, #40]
  251eec:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  251ef0:	sxtw	x3, w0
  251ef4:	add	x1, x1, #0x3a6
  251ef8:	mov	x0, x8
  251efc:	bl	24f20c <serialize_dhcp_routes>
  251f00:	add	x1, sp, #0x38
  251f04:	mov	x0, x20
  251f08:	bl	2521a0 <sd_dhcp_lease_get_timezone>
  251f0c:	tbnz	w0, #31, 251f24 <dhcp_lease_save+0x480>
  251f10:	ldur	x0, [x29, #-16]
  251f14:	ldr	x2, [sp, #56]
  251f18:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  251f1c:	add	x1, x1, #0xae5
  251f20:	bl	254780 <fprintf@plt>
  251f24:	sub	x1, x29, #0x28
  251f28:	sub	x2, x29, #0x38
  251f2c:	mov	x0, x20
  251f30:	bl	252224 <sd_dhcp_lease_get_client_id>
  251f34:	tbnz	w0, #31, 251f8c <dhcp_lease_save+0x4e8>
  251f38:	mov	w21, w0
  251f3c:	ldur	x0, [x29, #-40]
  251f40:	ldur	x1, [x29, #-56]
  251f44:	str	xzr, [sp, #8]
  251f48:	bl	2550c0 <hexmem@plt>
  251f4c:	str	x0, [sp, #8]
  251f50:	cbz	x0, 251f70 <dhcp_lease_save+0x4cc>
  251f54:	mov	x2, x0
  251f58:	ldur	x0, [x29, #-16]
  251f5c:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  251f60:	add	x1, x1, #0x3ad
  251f64:	bl	254780 <fprintf@plt>
  251f68:	mov	w22, wzr
  251f6c:	b	251f78 <dhcp_lease_save+0x4d4>
  251f70:	mov	w21, #0xfffffff4            	// #-12
  251f74:	mov	w22, #0x6                   	// #6
  251f78:	add	x0, sp, #0x8
  251f7c:	bl	251898 <freep>
  251f80:	cmp	w22, #0x6
  251f84:	b.eq	252078 <dhcp_lease_save+0x5d4>  // b.none
  251f88:	cbnz	w22, 2520d8 <dhcp_lease_save+0x634>
  251f8c:	sub	x1, x29, #0x30
  251f90:	sub	x2, x29, #0x40
  251f94:	mov	x0, x20
  251f98:	bl	250188 <sd_dhcp_lease_get_vendor_specific>
  251f9c:	tbnz	w0, #31, 251ff4 <dhcp_lease_save+0x550>
  251fa0:	mov	w21, w0
  251fa4:	ldur	x0, [x29, #-48]
  251fa8:	ldur	x1, [x29, #-64]
  251fac:	str	xzr, [sp, #8]
  251fb0:	bl	2550c0 <hexmem@plt>
  251fb4:	str	x0, [sp, #8]
  251fb8:	cbz	x0, 251fd8 <dhcp_lease_save+0x534>
  251fbc:	mov	x2, x0
  251fc0:	ldur	x0, [x29, #-16]
  251fc4:	adrp	x1, 20f000 <worker_hash_op+0x4ad0>
  251fc8:	add	x1, x1, #0xce3
  251fcc:	bl	254780 <fprintf@plt>
  251fd0:	mov	w22, wzr
  251fd4:	b	251fe0 <dhcp_lease_save+0x53c>
  251fd8:	mov	w21, #0xfffffff4            	// #-12
  251fdc:	mov	w22, #0x6                   	// #6
  251fe0:	add	x0, sp, #0x8
  251fe4:	bl	251898 <freep>
  251fe8:	cmp	w22, #0x6
  251fec:	b.eq	252078 <dhcp_lease_save+0x5d4>  // b.none
  251ff0:	cbnz	w22, 2520d8 <dhcp_lease_save+0x634>
  251ff4:	ldr	x22, [x20, #216]
  251ff8:	cbz	x22, 252040 <dhcp_lease_save+0x59c>
  251ffc:	adrp	x20, 20a000 <parse_argv.options-0x3f0>
  252000:	add	x20, x20, #0x9cc
  252004:	ldrb	w3, [x22, #16]
  252008:	add	x0, sp, #0x8
  25200c:	mov	w1, #0xb                   	// #11
  252010:	mov	x2, x20
  252014:	bl	2542f0 <snprintf@plt>
  252018:	cmp	w0, #0xb
  25201c:	b.cs	252120 <dhcp_lease_save+0x67c>  // b.hs, b.nlast
  252020:	ldur	x0, [x29, #-16]
  252024:	ldr	x2, [x22, #24]
  252028:	ldrb	w3, [x22, #17]
  25202c:	add	x1, sp, #0x8
  252030:	bl	24f68c <serialize_dhcp_option>
  252034:	tbnz	w0, #31, 252064 <dhcp_lease_save+0x5c0>
  252038:	ldr	x22, [x22]
  25203c:	cbnz	x22, 252004 <dhcp_lease_save+0x560>
  252040:	ldur	x0, [x29, #-16]
  252044:	bl	2551a0 <fflush_and_check@plt>
  252048:	tbnz	w0, #31, 252074 <dhcp_lease_save+0x5d0>
  25204c:	ldur	x0, [x29, #-8]
  252050:	mov	x1, x19
  252054:	bl	254370 <rename@plt>
  252058:	tbnz	w0, #31, 252108 <dhcp_lease_save+0x664>
  25205c:	mov	w21, wzr
  252060:	b	2520d8 <dhcp_lease_save+0x634>
  252064:	mov	w21, w0
  252068:	ldur	x0, [x29, #-8]
  25206c:	cbnz	x0, 252080 <dhcp_lease_save+0x5dc>
  252070:	b	252084 <dhcp_lease_save+0x5e0>
  252074:	mov	w21, w0
  252078:	ldur	x0, [x29, #-8]
  25207c:	cbz	x0, 252084 <dhcp_lease_save+0x5e0>
  252080:	bl	253960 <unlink@plt>
  252084:	mov	w0, wzr
  252088:	bl	2535b0 <log_get_max_level_realm@plt>
  25208c:	cmp	w0, #0x3
  252090:	b.lt	2520c8 <dhcp_lease_save+0x624>  // b.tstop
  252094:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252098:	adrp	x4, 20b000 <worker_hash_op+0xad0>
  25209c:	adrp	x5, 218000 <worker_hash_op+0xdad0>
  2520a0:	add	x2, x2, #0xc80
  2520a4:	add	x4, x4, #0x29
  2520a8:	add	x5, x5, #0x84e
  2520ac:	mov	w0, #0x3                   	// #3
  2520b0:	mov	w3, #0x400                 	// #1024
  2520b4:	mov	w1, w21
  2520b8:	mov	x6, x19
  2520bc:	bl	2535c0 <log_internal_realm@plt>
  2520c0:	mov	w21, w0
  2520c4:	b	2520d8 <dhcp_lease_save+0x634>
  2520c8:	cmp	w21, #0x0
  2520cc:	mov	w8, wzr
  2520d0:	cneg	w9, w21, mi  // mi = first
  2520d4:	sub	w21, w8, w9, uxtb
  2520d8:	add	x0, sp, #0x28
  2520dc:	bl	251898 <freep>
  2520e0:	sub	x0, x29, #0x10
  2520e4:	bl	252188 <fclosep>
  2520e8:	sub	x0, x29, #0x8
  2520ec:	bl	251898 <freep>
  2520f0:	mov	w0, w21
  2520f4:	ldp	x20, x19, [sp, #176]
  2520f8:	ldp	x22, x21, [sp, #160]
  2520fc:	ldp	x29, x30, [sp, #144]
  252100:	add	sp, sp, #0xc0
  252104:	ret
  252108:	bl	253660 <__errno_location@plt>
  25210c:	ldr	w8, [x0]
  252110:	neg	w21, w8
  252114:	ldur	x0, [x29, #-8]
  252118:	cbnz	x0, 252080 <dhcp_lease_save+0x5dc>
  25211c:	b	252084 <dhcp_lease_save+0x5e0>
  252120:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  252124:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252128:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  25212c:	add	x1, x1, #0xb99
  252130:	add	x2, x2, #0xc80
  252134:	add	x4, x4, #0x24d
  252138:	mov	w3, #0x3eb                 	// #1003
  25213c:	mov	w0, wzr
  252140:	bl	253740 <log_assert_failed_realm@plt>
  252144:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  252148:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25214c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252150:	add	x1, x1, #0x3
  252154:	add	x2, x2, #0xc80
  252158:	add	x4, x4, #0x24d
  25215c:	mov	w3, #0x369                 	// #873
  252160:	bl	253740 <log_assert_failed_realm@plt>
  252164:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  252168:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25216c:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252170:	add	x1, x1, #0xed0
  252174:	add	x2, x2, #0xc80
  252178:	add	x4, x4, #0x24d
  25217c:	mov	w3, #0x36a                 	// #874
  252180:	mov	w0, wzr
  252184:	bl	253740 <log_assert_failed_realm@plt>

0000000000252188 <fclosep>:
  252188:	stp	x29, x30, [sp, #-16]!
  25218c:	ldr	x0, [x0]
  252190:	mov	x29, sp
  252194:	bl	254470 <safe_fclose@plt>
  252198:	ldp	x29, x30, [sp], #16
  25219c:	ret

00000000002521a0 <sd_dhcp_lease_get_timezone>:
  2521a0:	stp	x29, x30, [sp, #-16]!
  2521a4:	mov	x29, sp
  2521a8:	cbz	x0, 2521d4 <sd_dhcp_lease_get_timezone+0x34>
  2521ac:	cbz	x1, 2521f4 <sd_dhcp_lease_get_timezone+0x54>
  2521b0:	ldr	x8, [x0, #208]
  2521b4:	cbz	x8, 2521c8 <sd_dhcp_lease_get_timezone+0x28>
  2521b8:	mov	w0, wzr
  2521bc:	str	x8, [x1]
  2521c0:	ldp	x29, x30, [sp], #16
  2521c4:	ret
  2521c8:	mov	w0, #0xffffffc3            	// #-61
  2521cc:	ldp	x29, x30, [sp], #16
  2521d0:	ret
  2521d4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2521d8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2521dc:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  2521e0:	add	x1, x1, #0x3
  2521e4:	add	x2, x2, #0xc80
  2521e8:	add	x4, x4, #0xf2e
  2521ec:	mov	w3, #0x528                 	// #1320
  2521f0:	b	252214 <sd_dhcp_lease_get_timezone+0x74>
  2521f4:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  2521f8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2521fc:	adrp	x4, 214000 <worker_hash_op+0x9ad0>
  252200:	add	x1, x1, #0x757
  252204:	add	x2, x2, #0xc80
  252208:	add	x4, x4, #0xf2e
  25220c:	mov	w3, #0x529                 	// #1321
  252210:	mov	w0, wzr
  252214:	bl	253f10 <log_assert_failed_return_realm@plt>
  252218:	mov	w0, #0xffffffea            	// #-22
  25221c:	ldp	x29, x30, [sp], #16
  252220:	ret

0000000000252224 <sd_dhcp_lease_get_client_id>:
  252224:	stp	x29, x30, [sp, #-16]!
  252228:	mov	x29, sp
  25222c:	cbz	x0, 252268 <sd_dhcp_lease_get_client_id+0x44>
  252230:	cbz	x1, 252288 <sd_dhcp_lease_get_client_id+0x64>
  252234:	cbz	x2, 2522a8 <sd_dhcp_lease_get_client_id+0x84>
  252238:	ldr	x9, [x0, #176]
  25223c:	mov	x8, x0
  252240:	cbz	x9, 25225c <sd_dhcp_lease_get_client_id+0x38>
  252244:	str	x9, [x1]
  252248:	ldr	x8, [x8, #184]
  25224c:	mov	w0, wzr
  252250:	str	x8, [x2]
  252254:	ldp	x29, x30, [sp], #16
  252258:	ret
  25225c:	mov	w0, #0xffffffc3            	// #-61
  252260:	ldp	x29, x30, [sp], #16
  252264:	ret
  252268:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  25226c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252270:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  252274:	add	x1, x1, #0x3
  252278:	add	x2, x2, #0xc80
  25227c:	add	x4, x4, #0x1bb
  252280:	mov	w3, #0x505                 	// #1285
  252284:	b	2522c8 <sd_dhcp_lease_get_client_id+0xa4>
  252288:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  25228c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252290:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  252294:	add	x1, x1, #0x8e1
  252298:	add	x2, x2, #0xc80
  25229c:	add	x4, x4, #0x1bb
  2522a0:	mov	w3, #0x506                 	// #1286
  2522a4:	b	2522c4 <sd_dhcp_lease_get_client_id+0xa0>
  2522a8:	adrp	x1, 218000 <worker_hash_op+0xdad0>
  2522ac:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2522b0:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  2522b4:	add	x1, x1, #0x8eb
  2522b8:	add	x2, x2, #0xc80
  2522bc:	add	x4, x4, #0x1bb
  2522c0:	mov	w3, #0x507                 	// #1287
  2522c4:	mov	w0, wzr
  2522c8:	bl	253f10 <log_assert_failed_return_realm@plt>
  2522cc:	mov	w0, #0xffffffea            	// #-22
  2522d0:	ldp	x29, x30, [sp], #16
  2522d4:	ret

00000000002522d8 <dhcp_lease_load>:
  2522d8:	stp	x29, x30, [sp, #-96]!
  2522dc:	stp	x28, x27, [sp, #16]
  2522e0:	stp	x26, x25, [sp, #32]
  2522e4:	stp	x24, x23, [sp, #48]
  2522e8:	stp	x22, x21, [sp, #64]
  2522ec:	stp	x20, x19, [sp, #80]
  2522f0:	mov	x29, sp
  2522f4:	sub	sp, sp, #0x500
  2522f8:	movi	v0.2d, #0x0
  2522fc:	stp	xzr, xzr, [x29, #-24]
  252300:	stp	xzr, xzr, [x29, #-40]
  252304:	stp	xzr, xzr, [x29, #-56]
  252308:	stp	xzr, xzr, [x29, #-72]
  25230c:	stp	xzr, xzr, [x29, #-88]
  252310:	stp	xzr, xzr, [x29, #-104]
  252314:	stp	xzr, xzr, [x29, #-120]
  252318:	stp	xzr, xzr, [x29, #-136]
  25231c:	stp	xzr, xzr, [x29, #-152]
  252320:	str	xzr, [sp, #1120]
  252324:	str	q0, [sp, #1104]
  252328:	str	q0, [sp, #1088]
  25232c:	str	q0, [sp, #1072]
  252330:	str	q0, [sp, #1056]
  252334:	str	q0, [sp, #1040]
  252338:	stp	q0, q0, [sp, #1008]
  25233c:	stp	q0, q0, [sp, #976]
  252340:	stp	q0, q0, [sp, #944]
  252344:	stp	q0, q0, [sp, #912]
  252348:	stp	q0, q0, [sp, #880]
  25234c:	cbz	x1, 252f10 <dhcp_lease_load+0xc38>
  252350:	mov	x19, x0
  252354:	cbz	x0, 252f34 <dhcp_lease_load+0xc5c>
  252358:	sub	x0, x29, #0x10
  25235c:	mov	x20, x1
  252360:	bl	251a5c <dhcp_lease_new>
  252364:	tbnz	w0, #31, 2527b8 <dhcp_lease_load+0x4e0>
  252368:	ldur	x13, [x29, #-16]
  25236c:	add	x11, sp, #0x370
  252370:	orr	x8, x11, #0x8
  252374:	str	x8, [sp, #824]
  252378:	add	x8, x11, #0x10
  25237c:	add	x10, x11, #0xe0
  252380:	str	x8, [sp, #808]
  252384:	add	x8, x13, #0x90
  252388:	add	x9, x11, #0xe8
  25238c:	str	x10, [sp, #744]
  252390:	adrp	x10, 218000 <worker_hash_op+0xdad0>
  252394:	str	x8, [sp, #848]
  252398:	add	x8, x13, #0xa0
  25239c:	str	x9, [sp, #760]
  2523a0:	adrp	x9, 212000 <worker_hash_op+0x7ad0>
  2523a4:	add	x10, x10, #0x1b0
  2523a8:	str	x8, [sp, #840]
  2523ac:	add	x8, x13, #0xa8
  2523b0:	add	x9, x9, #0x8c6
  2523b4:	str	x10, [sp, #736]
  2523b8:	adrp	x10, 20b000 <worker_hash_op+0xad0>
  2523bc:	str	x8, [sp, #832]
  2523c0:	add	x8, x13, #0xd0
  2523c4:	str	x9, [sp, #752]
  2523c8:	adrp	x9, 20a000 <parse_argv.options-0x3f0>
  2523cc:	add	x10, x10, #0x49
  2523d0:	str	x8, [sp, #816]
  2523d4:	add	x8, x11, #0xf0
  2523d8:	add	x9, x9, #0x9d6
  2523dc:	str	x10, [sp, #560]
  2523e0:	adrp	x10, 213000 <worker_hash_op+0x8ad0>
  2523e4:	add	x17, x11, #0x28
  2523e8:	add	x7, x11, #0x70
  2523ec:	str	x8, [sp, #776]
  2523f0:	adrp	x8, 20b000 <worker_hash_op+0xad0>
  2523f4:	str	x9, [sp, #576]
  2523f8:	adrp	x9, 213000 <worker_hash_op+0x8ad0>
  2523fc:	add	x10, x10, #0xf06
  252400:	add	x18, x11, #0x30
  252404:	add	x8, x8, #0x5f
  252408:	str	x7, [sp, #520]
  25240c:	adrp	x7, 217000 <worker_hash_op+0xcad0>
  252410:	add	x9, x9, #0xf11
  252414:	stp	x17, x10, [sp, #376]
  252418:	adrp	x10, 20f000 <worker_hash_op+0x4ad0>
  25241c:	add	x14, x11, #0xc8
  252420:	add	x7, x7, #0xb0f
  252424:	str	x8, [sp, #768]
  252428:	adrp	x8, 211000 <worker_hash_op+0x6ad0>
  25242c:	stp	x18, x9, [sp, #392]
  252430:	sub	x18, x29, #0x68
  252434:	add	x10, x10, #0x3a6
  252438:	str	x19, [sp, #800]
  25243c:	add	x19, x11, #0xc0
  252440:	str	x14, [sp, #696]
  252444:	adrp	x14, 212000 <worker_hash_op+0x7ad0>
  252448:	add	x8, x8, #0xa82
  25244c:	str	x7, [sp, #608]
  252450:	adrp	x7, 20b000 <worker_hash_op+0xad0>
  252454:	stp	x10, x18, [sp, #176]
  252458:	ldr	x10, [sp, #832]
  25245c:	add	x1, x11, #0x40
  252460:	str	x19, [sp, #680]
  252464:	add	x14, x14, #0x2a4
  252468:	adrp	x19, 20e000 <worker_hash_op+0x3ad0>
  25246c:	add	x7, x7, #0x7b5
  252470:	str	x8, [sp, #592]
  252474:	adrp	x8, 215000 <worker_hash_op+0xaad0>
  252478:	add	x0, x11, #0x38
  25247c:	add	x19, x19, #0x74c
  252480:	str	x14, [sp, #704]
  252484:	adrp	x14, 213000 <worker_hash_op+0x8ad0>
  252488:	add	x8, x8, #0xdcc
  25248c:	stp	x1, x7, [sp, #424]
  252490:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  252494:	adrp	x17, 20e000 <worker_hash_op+0x3ad0>
  252498:	add	x21, x11, #0x78
  25249c:	add	x22, x11, #0x80
  2524a0:	add	x23, x11, #0x88
  2524a4:	str	x20, [sp, #856]
  2524a8:	add	x20, x11, #0xd0
  2524ac:	add	x12, x11, #0xd8
  2524b0:	add	x14, x14, #0x7d5
  2524b4:	str	x19, [sp, #688]
  2524b8:	adrp	x19, 214000 <worker_hash_op+0x9ad0>
  2524bc:	sub	x7, x29, #0x80
  2524c0:	add	x1, x1, #0x39
  2524c4:	stp	x0, x8, [sp, #408]
  2524c8:	add	x17, x17, #0x737
  2524cc:	ldr	x8, [sp, #808]
  2524d0:	add	x6, x11, #0x68
  2524d4:	str	x12, [sp, #728]
  2524d8:	str	x20, [sp, #712]
  2524dc:	adrp	x12, 216000 <worker_hash_op+0xbad0>
  2524e0:	adrp	x20, 20c000 <worker_hash_op+0x1ad0>
  2524e4:	str	x23, [sp, #568]
  2524e8:	adrp	x23, 20b000 <worker_hash_op+0xad0>
  2524ec:	str	x22, [sp, #552]
  2524f0:	adrp	x22, 20a000 <parse_argv.options-0x3f0>
  2524f4:	str	x21, [sp, #536]
  2524f8:	adrp	x21, 213000 <worker_hash_op+0x8ad0>
  2524fc:	add	x19, x19, #0x64a
  252500:	str	x14, [sp, #528]
  252504:	adrp	x14, 212000 <worker_hash_op+0x7ad0>
  252508:	stp	x1, x7, [sp, #224]
  25250c:	ldr	x1, [sp, #816]
  252510:	stp	x17, x10, [sp, #160]
  252514:	ldr	x10, [sp, #840]
  252518:	add	x15, x11, #0x18
  25251c:	add	x12, x12, #0xc74
  252520:	add	x20, x20, #0xbc6
  252524:	add	x23, x23, #0x54
  252528:	add	x22, x22, #0x9e1
  25252c:	add	x21, x21, #0x134
  252530:	add	x14, x14, #0x28e
  252534:	stp	x6, x19, [sp, #504]
  252538:	adrp	x6, 218000 <worker_hash_op+0xdad0>
  25253c:	str	x12, [sp, #720]
  252540:	adrp	x12, 213000 <worker_hash_op+0x8ad0>
  252544:	str	x20, [sp, #672]
  252548:	adrp	x20, 212000 <worker_hash_op+0x7ad0>
  25254c:	str	x23, [sp, #656]
  252550:	adrp	x23, 210000 <worker_hash_op+0x5ad0>
  252554:	str	x22, [sp, #640]
  252558:	adrp	x22, 214000 <worker_hash_op+0x9ad0>
  25255c:	str	x21, [sp, #624]
  252560:	adrp	x21, 20e000 <worker_hash_op+0x3ad0>
  252564:	add	x6, x6, #0x1a5
  252568:	adrp	x13, 20c000 <worker_hash_op+0x1ad0>
  25256c:	stp	x15, x14, [sp, #344]
  252570:	adrp	x14, 215000 <worker_hash_op+0xaad0>
  252574:	add	x2, x11, #0x48
  252578:	add	x3, x11, #0x50
  25257c:	add	x4, x11, #0x58
  252580:	add	x5, x11, #0x60
  252584:	add	x12, x12, #0x129
  252588:	add	x20, x20, #0x299
  25258c:	add	x23, x23, #0xcf3
  252590:	add	x22, x22, #0xf23
  252594:	add	x21, x21, #0x741
  252598:	add	x13, x13, #0x51f
  25259c:	add	x14, x14, #0x700
  2525a0:	stp	x6, x8, [sp, #320]
  2525a4:	ldr	x8, [sp, #824]
  2525a8:	str	x12, [sp, #544]
  2525ac:	adrp	x12, 20f000 <worker_hash_op+0x4ad0>
  2525b0:	stp	x5, x20, [sp, #488]
  2525b4:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  2525b8:	stp	x4, x23, [sp, #472]
  2525bc:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  2525c0:	stp	x3, x22, [sp, #456]
  2525c4:	adrp	x3, 210000 <worker_hash_op+0x5ad0>
  2525c8:	stp	x2, x21, [sp, #440]
  2525cc:	adrp	x2, 20b000 <worker_hash_op+0xad0>
  2525d0:	stp	x13, x1, [sp, #208]
  2525d4:	stp	x14, x10, [sp, #128]
  2525d8:	ldr	x10, [sp, #848]
  2525dc:	ldr	x1, [sp, #856]
  2525e0:	add	x16, x11, #0x20
  2525e4:	add	x24, x11, #0x90
  2525e8:	add	x26, x11, #0xa0
  2525ec:	add	x27, x11, #0xa8
  2525f0:	add	x12, x12, #0x3ba
  2525f4:	adrp	x19, 20b000 <worker_hash_op+0xad0>
  2525f8:	adrp	x20, 20b000 <worker_hash_op+0xad0>
  2525fc:	add	x5, x5, #0xb04
  252600:	sub	x23, x29, #0x98
  252604:	add	x4, x4, #0x8ab
  252608:	sub	x22, x29, #0x90
  25260c:	add	x3, x3, #0xcf0
  252610:	sub	x21, x29, #0x88
  252614:	add	x2, x2, #0xd9f
  252618:	adrp	x13, 20d000 <worker_hash_op+0x2ad0>
  25261c:	add	x25, x11, #0x98
  252620:	add	x28, x11, #0xb0
  252624:	add	x30, x11, #0xb8
  252628:	str	x27, [sp, #632]
  25262c:	str	x26, [sp, #616]
  252630:	str	x24, [sp, #584]
  252634:	add	x19, x19, #0xda8
  252638:	add	x20, x20, #0x7aa
  25263c:	sub	x0, x29, #0x78
  252640:	stp	x16, x12, [sp, #360]
  252644:	adrp	x16, 217000 <worker_hash_op+0xcad0>
  252648:	adrp	x15, 20b000 <worker_hash_op+0xad0>
  25264c:	adrp	x24, 213000 <worker_hash_op+0x8ad0>
  252650:	adrp	x26, 212000 <worker_hash_op+0x7ad0>
  252654:	stp	x5, x11, [sp, #288]
  252658:	adrp	x11, 216000 <worker_hash_op+0xbad0>
  25265c:	stp	x4, x23, [sp, #272]
  252660:	adrp	x23, 210000 <worker_hash_op+0x5ad0>
  252664:	stp	x3, x22, [sp, #256]
  252668:	adrp	x22, 20c000 <worker_hash_op+0x1ad0>
  25266c:	stp	x2, x21, [sp, #240]
  252670:	adrp	x21, 218000 <worker_hash_op+0xdad0>
  252674:	adrp	x27, 217000 <worker_hash_op+0xcad0>
  252678:	adrp	x2, 20f000 <worker_hash_op+0x4ad0>
  25267c:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  252680:	adrp	x6, 218000 <worker_hash_op+0xdad0>
  252684:	add	x13, x13, #0x307
  252688:	str	x30, [sp, #664]
  25268c:	str	x28, [sp, #648]
  252690:	str	x25, [sp, #600]
  252694:	sub	x12, x29, #0x70
  252698:	add	x16, x16, #0x48e
  25269c:	add	x15, x15, #0xd94
  2526a0:	str	x19, [sp, #336]
  2526a4:	sub	x19, x29, #0x60
  2526a8:	add	x24, x24, #0xf02
  2526ac:	sub	x25, x29, #0x58
  2526b0:	stp	x20, x8, [sp, #304]
  2526b4:	add	x26, x26, #0x8c2
  2526b8:	sub	x20, x29, #0x50
  2526bc:	add	x11, x11, #0xc70
  2526c0:	sub	x9, x29, #0x48
  2526c4:	add	x23, x23, #0xcec
  2526c8:	sub	x28, x29, #0x40
  2526cc:	add	x22, x22, #0xbbc
  2526d0:	sub	x30, x29, #0x38
  2526d4:	add	x21, x21, #0x199
  2526d8:	sub	x8, x29, #0x30
  2526dc:	add	x27, x27, #0xaf2
  2526e0:	add	x2, x2, #0xcf7
  2526e4:	add	x4, x4, #0x122
  2526e8:	add	x6, x6, #0x8a3
  2526ec:	sub	x3, x29, #0x18
  2526f0:	stp	x13, x0, [sp, #192]
  2526f4:	sub	x5, x29, #0x20
  2526f8:	sub	x7, x29, #0x28
  2526fc:	mov	x0, xzr
  252700:	str	xzr, [sp, #784]
  252704:	stp	x16, x12, [sp, #144]
  252708:	stp	x15, x10, [sp, #112]
  25270c:	stp	x24, x19, [sp, #96]
  252710:	stp	x26, x25, [sp, #80]
  252714:	stp	x11, x20, [sp, #64]
  252718:	stp	x23, x9, [sp, #48]
  25271c:	stp	x22, x28, [sp, #32]
  252720:	stp	x21, x30, [sp, #16]
  252724:	stp	x27, x8, [sp]
  252728:	bl	254ea0 <parse_env_file_sentinel@plt>
  25272c:	tbnz	w0, #31, 2527b8 <dhcp_lease_load+0x4e0>
  252730:	ldur	x1, [x29, #-24]
  252734:	cbz	x1, 25278c <dhcp_lease_load+0x4b4>
  252738:	ldur	x8, [x29, #-16]
  25273c:	mov	w0, #0x2                   	// #2
  252740:	add	x2, x8, #0x10
  252744:	bl	2550a0 <inet_pton@plt>
  252748:	cmp	w0, #0x0
  25274c:	b.gt	25278c <dhcp_lease_load+0x4b4>
  252750:	mov	w0, wzr
  252754:	bl	2535b0 <log_get_max_level_realm@plt>
  252758:	cmp	w0, #0x7
  25275c:	b.lt	25278c <dhcp_lease_load+0x4b4>  // b.tstop
  252760:	ldur	x6, [x29, #-24]
  252764:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252768:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  25276c:	adrp	x5, 20e000 <worker_hash_op+0x3ad0>
  252770:	add	x2, x2, #0xc80
  252774:	add	x4, x4, #0x8d1
  252778:	add	x5, x5, #0x4f
  25277c:	mov	w0, #0x7                   	// #7
  252780:	mov	w3, #0x45e                 	// #1118
  252784:	mov	w1, wzr
  252788:	bl	2535c0 <log_internal_realm@plt>
  25278c:	ldur	x1, [x29, #-32]
  252790:	cbz	x1, 2528b4 <dhcp_lease_load+0x5dc>
  252794:	ldur	x8, [x29, #-16]
  252798:	add	x0, x8, #0x30
  25279c:	bl	24ee44 <deserialize_in_addrs>
  2527a0:	mov	w20, w0
  2527a4:	tbnz	w0, #31, 252878 <dhcp_lease_load+0x5a0>
  2527a8:	ldur	x8, [x29, #-16]
  2527ac:	sxtw	x9, w20
  2527b0:	str	x9, [x8, #56]
  2527b4:	b	2528b4 <dhcp_lease_load+0x5dc>
  2527b8:	mov	w21, w0
  2527bc:	add	x0, sp, #0x370
  2527c0:	bl	251898 <freep>
  2527c4:	sub	x0, x29, #0x98
  2527c8:	bl	251898 <freep>
  2527cc:	sub	x0, x29, #0x90
  2527d0:	bl	251898 <freep>
  2527d4:	sub	x0, x29, #0x88
  2527d8:	bl	251898 <freep>
  2527dc:	sub	x0, x29, #0x80
  2527e0:	bl	251898 <freep>
  2527e4:	sub	x0, x29, #0x78
  2527e8:	bl	251898 <freep>
  2527ec:	sub	x0, x29, #0x70
  2527f0:	bl	251898 <freep>
  2527f4:	sub	x0, x29, #0x68
  2527f8:	bl	251898 <freep>
  2527fc:	sub	x0, x29, #0x60
  252800:	bl	251898 <freep>
  252804:	sub	x0, x29, #0x58
  252808:	bl	251898 <freep>
  25280c:	sub	x0, x29, #0x50
  252810:	bl	251898 <freep>
  252814:	sub	x0, x29, #0x48
  252818:	bl	251898 <freep>
  25281c:	sub	x0, x29, #0x40
  252820:	bl	251898 <freep>
  252824:	sub	x0, x29, #0x38
  252828:	bl	251898 <freep>
  25282c:	sub	x0, x29, #0x30
  252830:	bl	251898 <freep>
  252834:	sub	x0, x29, #0x28
  252838:	bl	251898 <freep>
  25283c:	sub	x0, x29, #0x20
  252840:	bl	251898 <freep>
  252844:	sub	x0, x29, #0x18
  252848:	bl	251898 <freep>
  25284c:	sub	x0, x29, #0x10
  252850:	bl	252f58 <sd_dhcp_lease_unrefp>
  252854:	mov	w0, w21
  252858:	add	sp, sp, #0x500
  25285c:	ldp	x20, x19, [sp, #80]
  252860:	ldp	x22, x21, [sp, #64]
  252864:	ldp	x24, x23, [sp, #48]
  252868:	ldp	x26, x25, [sp, #32]
  25286c:	ldp	x28, x27, [sp, #16]
  252870:	ldp	x29, x30, [sp], #96
  252874:	ret
  252878:	mov	w0, wzr
  25287c:	bl	2535b0 <log_get_max_level_realm@plt>
  252880:	cmp	w0, #0x7
  252884:	b.lt	2528b4 <dhcp_lease_load+0x5dc>  // b.tstop
  252888:	ldur	x6, [x29, #-32]
  25288c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252890:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252894:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  252898:	add	x2, x2, #0xc80
  25289c:	add	x4, x4, #0x8d1
  2528a0:	add	x5, x5, #0xdb3
  2528a4:	mov	w0, #0x7                   	// #7
  2528a8:	mov	w3, #0x464                 	// #1124
  2528ac:	mov	w1, w20
  2528b0:	bl	2535c0 <log_internal_realm@plt>
  2528b4:	ldur	x1, [x29, #-40]
  2528b8:	cbz	x1, 252920 <dhcp_lease_load+0x648>
  2528bc:	ldur	x8, [x29, #-16]
  2528c0:	mov	w0, #0x2                   	// #2
  2528c4:	add	x2, x8, #0x20
  2528c8:	bl	2550a0 <inet_pton@plt>
  2528cc:	cmp	w0, #0x0
  2528d0:	b.le	2528e4 <dhcp_lease_load+0x60c>
  2528d4:	ldur	x8, [x29, #-16]
  2528d8:	mov	w9, #0x1                   	// #1
  2528dc:	strb	w9, [x8, #28]
  2528e0:	b	252920 <dhcp_lease_load+0x648>
  2528e4:	mov	w0, wzr
  2528e8:	bl	2535b0 <log_get_max_level_realm@plt>
  2528ec:	cmp	w0, #0x7
  2528f0:	b.lt	252920 <dhcp_lease_load+0x648>  // b.tstop
  2528f4:	ldur	x6, [x29, #-40]
  2528f8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2528fc:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252900:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  252904:	add	x2, x2, #0xc80
  252908:	add	x4, x4, #0x8d1
  25290c:	add	x5, x5, #0xa8d
  252910:	mov	w0, #0x7                   	// #7
  252914:	mov	w3, #0x46c                 	// #1132
  252918:	mov	w1, wzr
  25291c:	bl	2535c0 <log_internal_realm@plt>
  252920:	ldur	x1, [x29, #-48]
  252924:	cbz	x1, 25297c <dhcp_lease_load+0x6a4>
  252928:	ldur	x8, [x29, #-16]
  25292c:	mov	w0, #0x2                   	// #2
  252930:	add	x2, x8, #0x14
  252934:	bl	2550a0 <inet_pton@plt>
  252938:	cmp	w0, #0x0
  25293c:	b.gt	25297c <dhcp_lease_load+0x6a4>
  252940:	mov	w0, wzr
  252944:	bl	2535b0 <log_get_max_level_realm@plt>
  252948:	cmp	w0, #0x7
  25294c:	b.lt	25297c <dhcp_lease_load+0x6a4>  // b.tstop
  252950:	ldur	x6, [x29, #-48]
  252954:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252958:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  25295c:	adrp	x5, 215000 <worker_hash_op+0xaad0>
  252960:	add	x2, x2, #0xc80
  252964:	add	x4, x4, #0x8d1
  252968:	add	x5, x5, #0x709
  25296c:	mov	w0, #0x7                   	// #7
  252970:	mov	w3, #0x474                 	// #1140
  252974:	mov	w1, wzr
  252978:	bl	2535c0 <log_internal_realm@plt>
  25297c:	ldur	x1, [x29, #-56]
  252980:	cbz	x1, 2529d8 <dhcp_lease_load+0x700>
  252984:	ldur	x8, [x29, #-16]
  252988:	mov	w0, #0x2                   	// #2
  25298c:	add	x2, x8, #0x18
  252990:	bl	2550a0 <inet_pton@plt>
  252994:	cmp	w0, #0x0
  252998:	b.gt	2529d8 <dhcp_lease_load+0x700>
  25299c:	mov	w0, wzr
  2529a0:	bl	2535b0 <log_get_max_level_realm@plt>
  2529a4:	cmp	w0, #0x7
  2529a8:	b.lt	2529d8 <dhcp_lease_load+0x700>  // b.tstop
  2529ac:	ldur	x6, [x29, #-56]
  2529b0:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2529b4:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  2529b8:	adrp	x5, 20c000 <worker_hash_op+0x1ad0>
  2529bc:	add	x2, x2, #0xc80
  2529c0:	add	x4, x4, #0x8d1
  2529c4:	add	x5, x5, #0xbd1
  2529c8:	mov	w0, #0x7                   	// #7
  2529cc:	mov	w3, #0x47a                 	// #1146
  2529d0:	mov	w1, wzr
  2529d4:	bl	2535c0 <log_internal_realm@plt>
  2529d8:	ldur	x1, [x29, #-64]
  2529dc:	cbz	x1, 252a44 <dhcp_lease_load+0x76c>
  2529e0:	ldur	x8, [x29, #-16]
  2529e4:	mov	w0, #0x2                   	// #2
  2529e8:	add	x2, x8, #0x28
  2529ec:	bl	2550a0 <inet_pton@plt>
  2529f0:	cmp	w0, #0x0
  2529f4:	b.le	252a08 <dhcp_lease_load+0x730>
  2529f8:	ldur	x8, [x29, #-16]
  2529fc:	mov	w9, #0x1                   	// #1
  252a00:	strb	w9, [x8, #36]
  252a04:	b	252a44 <dhcp_lease_load+0x76c>
  252a08:	mov	w0, wzr
  252a0c:	bl	2535b0 <log_get_max_level_realm@plt>
  252a10:	cmp	w0, #0x7
  252a14:	b.lt	252a44 <dhcp_lease_load+0x76c>  // b.tstop
  252a18:	ldur	x6, [x29, #-64]
  252a1c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252a20:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252a24:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  252a28:	add	x2, x2, #0xc80
  252a2c:	add	x4, x4, #0x8d1
  252a30:	add	x5, x5, #0x3c5
  252a34:	mov	w0, #0x7                   	// #7
  252a38:	mov	w3, #0x480                 	// #1152
  252a3c:	mov	w1, wzr
  252a40:	bl	2535c0 <log_internal_realm@plt>
  252a44:	ldur	x1, [x29, #-72]
  252a48:	cbz	x1, 252aac <dhcp_lease_load+0x7d4>
  252a4c:	ldur	x8, [x29, #-16]
  252a50:	add	x0, x8, #0x40
  252a54:	bl	24ee44 <deserialize_in_addrs>
  252a58:	mov	w20, w0
  252a5c:	tbnz	w0, #31, 252a70 <dhcp_lease_load+0x798>
  252a60:	ldur	x8, [x29, #-16]
  252a64:	sxtw	x9, w20
  252a68:	str	x9, [x8, #72]
  252a6c:	b	252aac <dhcp_lease_load+0x7d4>
  252a70:	mov	w0, wzr
  252a74:	bl	2535b0 <log_get_max_level_realm@plt>
  252a78:	cmp	w0, #0x7
  252a7c:	b.lt	252aac <dhcp_lease_load+0x7d4>  // b.tstop
  252a80:	ldur	x6, [x29, #-72]
  252a84:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252a88:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252a8c:	adrp	x5, 20b000 <worker_hash_op+0xad0>
  252a90:	add	x2, x2, #0xc80
  252a94:	add	x4, x4, #0x8d1
  252a98:	add	x5, x5, #0x6a
  252a9c:	mov	w0, #0x7                   	// #7
  252aa0:	mov	w3, #0x488                 	// #1160
  252aa4:	mov	w1, w20
  252aa8:	bl	2535c0 <log_internal_realm@plt>
  252aac:	ldur	x1, [x29, #-80]
  252ab0:	cbz	x1, 252b14 <dhcp_lease_load+0x83c>
  252ab4:	ldur	x8, [x29, #-16]
  252ab8:	add	x0, x8, #0x50
  252abc:	bl	24ee44 <deserialize_in_addrs>
  252ac0:	mov	w20, w0
  252ac4:	tbnz	w0, #31, 252ad8 <dhcp_lease_load+0x800>
  252ac8:	ldur	x8, [x29, #-16]
  252acc:	sxtw	x9, w20
  252ad0:	str	x9, [x8, #88]
  252ad4:	b	252b14 <dhcp_lease_load+0x83c>
  252ad8:	mov	w0, wzr
  252adc:	bl	2535b0 <log_get_max_level_realm@plt>
  252ae0:	cmp	w0, #0x7
  252ae4:	b.lt	252b14 <dhcp_lease_load+0x83c>  // b.tstop
  252ae8:	ldur	x6, [x29, #-80]
  252aec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252af0:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252af4:	adrp	x5, 218000 <worker_hash_op+0xdad0>
  252af8:	add	x2, x2, #0xc80
  252afc:	add	x4, x4, #0x8d1
  252b00:	add	x5, x5, #0x8ae
  252b04:	mov	w0, #0x7                   	// #7
  252b08:	mov	w3, #0x490                 	// #1168
  252b0c:	mov	w1, w20
  252b10:	bl	2535c0 <log_internal_realm@plt>
  252b14:	ldur	x1, [x29, #-88]
  252b18:	cbz	x1, 252b7c <dhcp_lease_load+0x8a4>
  252b1c:	ldur	x8, [x29, #-16]
  252b20:	add	x0, x8, #0x60
  252b24:	bl	24ee44 <deserialize_in_addrs>
  252b28:	mov	w20, w0
  252b2c:	tbnz	w0, #31, 252b40 <dhcp_lease_load+0x868>
  252b30:	ldur	x8, [x29, #-16]
  252b34:	sxtw	x9, w20
  252b38:	str	x9, [x8, #88]
  252b3c:	b	252b7c <dhcp_lease_load+0x8a4>
  252b40:	mov	w0, wzr
  252b44:	bl	2535b0 <log_get_max_level_realm@plt>
  252b48:	cmp	w0, #0x7
  252b4c:	b.lt	252b7c <dhcp_lease_load+0x8a4>  // b.tstop
  252b50:	ldur	x6, [x29, #-88]
  252b54:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252b58:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252b5c:	adrp	x5, 211000 <worker_hash_op+0x6ad0>
  252b60:	add	x2, x2, #0xc80
  252b64:	add	x4, x4, #0x8d1
  252b68:	add	x5, x5, #0xab3
  252b6c:	mov	w0, #0x7                   	// #7
  252b70:	mov	w3, #0x498                 	// #1176
  252b74:	mov	w1, w20
  252b78:	bl	2535c0 <log_internal_realm@plt>
  252b7c:	ldur	x0, [x29, #-96]
  252b80:	cbz	x0, 252bd4 <dhcp_lease_load+0x8fc>
  252b84:	ldur	x8, [x29, #-16]
  252b88:	add	x1, x8, #0x88
  252b8c:	bl	252f74 <safe_atou16>
  252b90:	tbz	w0, #31, 252bd4 <dhcp_lease_load+0x8fc>
  252b94:	mov	w20, w0
  252b98:	mov	w0, wzr
  252b9c:	bl	2535b0 <log_get_max_level_realm@plt>
  252ba0:	cmp	w0, #0x7
  252ba4:	b.lt	252bd4 <dhcp_lease_load+0x8fc>  // b.tstop
  252ba8:	ldur	x6, [x29, #-96]
  252bac:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252bb0:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252bb4:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  252bb8:	add	x2, x2, #0xc80
  252bbc:	add	x4, x4, #0x8d1
  252bc0:	add	x5, x5, #0x13f
  252bc4:	mov	w0, #0x7                   	// #7
  252bc8:	mov	w3, #0x4a0                 	// #1184
  252bcc:	mov	w1, w20
  252bd0:	bl	2535c0 <log_internal_realm@plt>
  252bd4:	ldur	x0, [x29, #-112]
  252bd8:	cbz	x0, 252c0c <dhcp_lease_load+0x934>
  252bdc:	str	xzr, [sp, #872]
  252be0:	bl	252f90 <strv_split>
  252be4:	str	x0, [sp, #872]
  252be8:	cbz	x0, 252f00 <dhcp_lease_load+0xc28>
  252bec:	bl	252fb0 <strv_isempty>
  252bf0:	tbnz	w0, #0, 252c04 <dhcp_lease_load+0x92c>
  252bf4:	ldr	x8, [sp, #872]
  252bf8:	ldur	x9, [x29, #-16]
  252bfc:	str	x8, [x9, #152]
  252c00:	str	xzr, [sp, #872]
  252c04:	add	x0, sp, #0x368
  252c08:	bl	251a40 <strv_freep>
  252c0c:	ldur	x3, [x29, #-104]
  252c10:	cbz	x3, 252c6c <dhcp_lease_load+0x994>
  252c14:	ldur	x8, [x29, #-16]
  252c18:	add	x0, x8, #0x70
  252c1c:	add	x1, x8, #0x78
  252c20:	add	x2, x8, #0x80
  252c24:	bl	24f43c <deserialize_dhcp_routes>
  252c28:	tbz	w0, #31, 252c6c <dhcp_lease_load+0x994>
  252c2c:	mov	w20, w0
  252c30:	mov	w0, wzr
  252c34:	bl	2535b0 <log_get_max_level_realm@plt>
  252c38:	cmp	w0, #0x7
  252c3c:	b.lt	252c6c <dhcp_lease_load+0x994>  // b.tstop
  252c40:	ldur	x6, [x29, #-104]
  252c44:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252c48:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252c4c:	adrp	x5, 217000 <worker_hash_op+0xcad0>
  252c50:	add	x2, x2, #0xc80
  252c54:	add	x4, x4, #0x8d1
  252c58:	add	x5, x5, #0xb1a
  252c5c:	mov	w0, #0x7                   	// #7
  252c60:	mov	w3, #0x4b6                 	// #1206
  252c64:	mov	w1, w20
  252c68:	bl	2535c0 <log_internal_realm@plt>
  252c6c:	ldur	x0, [x29, #-136]
  252c70:	cbz	x0, 252cc4 <dhcp_lease_load+0x9ec>
  252c74:	ldur	x8, [x29, #-16]
  252c78:	add	x1, x8, #0xc
  252c7c:	bl	252fcc <safe_atou32>
  252c80:	tbz	w0, #31, 252cc4 <dhcp_lease_load+0x9ec>
  252c84:	mov	w20, w0
  252c88:	mov	w0, wzr
  252c8c:	bl	2535b0 <log_get_max_level_realm@plt>
  252c90:	cmp	w0, #0x7
  252c94:	b.lt	252cc4 <dhcp_lease_load+0x9ec>  // b.tstop
  252c98:	ldur	x6, [x29, #-136]
  252c9c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252ca0:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252ca4:	adrp	x5, 216000 <worker_hash_op+0xbad0>
  252ca8:	add	x2, x2, #0xc80
  252cac:	add	x4, x4, #0x8d1
  252cb0:	add	x5, x5, #0x624
  252cb4:	mov	w0, #0x7                   	// #7
  252cb8:	mov	w3, #0x4bc                 	// #1212
  252cbc:	mov	w1, w20
  252cc0:	bl	2535c0 <log_internal_realm@plt>
  252cc4:	ldur	x0, [x29, #-144]
  252cc8:	cbz	x0, 252d1c <dhcp_lease_load+0xa44>
  252ccc:	ldur	x8, [x29, #-16]
  252cd0:	add	x1, x8, #0x4
  252cd4:	bl	252fcc <safe_atou32>
  252cd8:	tbz	w0, #31, 252d1c <dhcp_lease_load+0xa44>
  252cdc:	mov	w20, w0
  252ce0:	mov	w0, wzr
  252ce4:	bl	2535b0 <log_get_max_level_realm@plt>
  252ce8:	cmp	w0, #0x7
  252cec:	b.lt	252d1c <dhcp_lease_load+0xa44>  // b.tstop
  252cf0:	ldur	x6, [x29, #-144]
  252cf4:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252cf8:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252cfc:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  252d00:	add	x2, x2, #0xc80
  252d04:	add	x4, x4, #0x8d1
  252d08:	add	x5, x5, #0xf1c
  252d0c:	mov	w0, #0x7                   	// #7
  252d10:	mov	w3, #0x4c2                 	// #1218
  252d14:	mov	w1, w20
  252d18:	bl	2535c0 <log_internal_realm@plt>
  252d1c:	ldur	x0, [x29, #-152]
  252d20:	cbz	x0, 252d74 <dhcp_lease_load+0xa9c>
  252d24:	ldur	x8, [x29, #-16]
  252d28:	add	x1, x8, #0x8
  252d2c:	bl	252fcc <safe_atou32>
  252d30:	tbz	w0, #31, 252d74 <dhcp_lease_load+0xa9c>
  252d34:	mov	w20, w0
  252d38:	mov	w0, wzr
  252d3c:	bl	2535b0 <log_get_max_level_realm@plt>
  252d40:	cmp	w0, #0x7
  252d44:	b.lt	252d74 <dhcp_lease_load+0xa9c>  // b.tstop
  252d48:	ldur	x6, [x29, #-152]
  252d4c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252d50:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252d54:	adrp	x5, 20d000 <worker_hash_op+0x2ad0>
  252d58:	add	x2, x2, #0xc80
  252d5c:	add	x4, x4, #0x8d1
  252d60:	add	x5, x5, #0x310
  252d64:	mov	w0, #0x7                   	// #7
  252d68:	mov	w3, #0x4c8                 	// #1224
  252d6c:	mov	w1, w20
  252d70:	bl	2535c0 <log_internal_realm@plt>
  252d74:	ldur	x0, [x29, #-120]
  252d78:	cbz	x0, 252dd0 <dhcp_lease_load+0xaf8>
  252d7c:	ldur	x8, [x29, #-16]
  252d80:	add	x1, x8, #0xb0
  252d84:	add	x2, x8, #0xb8
  252d88:	bl	252fe0 <unhexmem>
  252d8c:	tbz	w0, #31, 252dd0 <dhcp_lease_load+0xaf8>
  252d90:	mov	w20, w0
  252d94:	mov	w0, wzr
  252d98:	bl	2535b0 <log_get_max_level_realm@plt>
  252d9c:	cmp	w0, #0x7
  252da0:	b.lt	252dd0 <dhcp_lease_load+0xaf8>  // b.tstop
  252da4:	ldur	x6, [x29, #-120]
  252da8:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252dac:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252db0:	adrp	x5, 20f000 <worker_hash_op+0x4ad0>
  252db4:	add	x2, x2, #0xc80
  252db8:	add	x4, x4, #0x8d1
  252dbc:	add	x5, x5, #0xcff
  252dc0:	mov	w0, #0x7                   	// #7
  252dc4:	mov	w3, #0x4ce                 	// #1230
  252dc8:	mov	w1, w20
  252dcc:	bl	2535c0 <log_internal_realm@plt>
  252dd0:	ldur	x0, [x29, #-128]
  252dd4:	cbz	x0, 252e2c <dhcp_lease_load+0xb54>
  252dd8:	ldur	x8, [x29, #-16]
  252ddc:	add	x1, x8, #0xc0
  252de0:	add	x2, x8, #0xc8
  252de4:	bl	252fe0 <unhexmem>
  252de8:	tbz	w0, #31, 252e2c <dhcp_lease_load+0xb54>
  252dec:	mov	w20, w0
  252df0:	mov	w0, wzr
  252df4:	bl	2535b0 <log_get_max_level_realm@plt>
  252df8:	cmp	w0, #0x7
  252dfc:	b.lt	252e2c <dhcp_lease_load+0xb54>  // b.tstop
  252e00:	ldur	x6, [x29, #-128]
  252e04:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252e08:	adrp	x4, 212000 <worker_hash_op+0x7ad0>
  252e0c:	adrp	x5, 213000 <worker_hash_op+0x8ad0>
  252e10:	add	x2, x2, #0xc80
  252e14:	add	x4, x4, #0x8d1
  252e18:	add	x5, x5, #0xf40
  252e1c:	mov	w0, #0x7                   	// #7
  252e20:	mov	w3, #0x4d4                 	// #1236
  252e24:	mov	w1, w20
  252e28:	bl	2535c0 <log_internal_realm@plt>
  252e2c:	adrp	x20, 210000 <worker_hash_op+0x5ad0>
  252e30:	adrp	x22, 212000 <worker_hash_op+0x7ad0>
  252e34:	adrp	x23, 20f000 <worker_hash_op+0x4ad0>
  252e38:	mov	x25, xzr
  252e3c:	mov	w21, #0xfffffff4            	// #-12
  252e40:	add	x26, sp, #0x370
  252e44:	add	x20, x20, #0xc80
  252e48:	add	x22, x22, #0x8d1
  252e4c:	add	x23, x23, #0xd2a
  252e50:	ldr	x0, [x26, x25, lsl #3]
  252e54:	str	xzr, [sp, #872]
  252e58:	cbz	x0, 252ec4 <dhcp_lease_load+0xbec>
  252e5c:	add	x1, sp, #0x368
  252e60:	add	x2, sp, #0x360
  252e64:	bl	252fe0 <unhexmem>
  252e68:	tbnz	w0, #31, 252e90 <dhcp_lease_load+0xbb8>
  252e6c:	ldur	x0, [x29, #-16]
  252e70:	ldr	x2, [sp, #872]
  252e74:	ldrb	w3, [sp, #864]
  252e78:	sub	w1, w25, #0x20
  252e7c:	bl	2518c4 <dhcp_lease_insert_private_option>
  252e80:	cmp	w0, #0x0
  252e84:	lsr	w24, w0, #31
  252e88:	csel	w21, w0, w21, lt  // lt = tstop
  252e8c:	b	252ec8 <dhcp_lease_load+0xbf0>
  252e90:	mov	w24, w0
  252e94:	mov	w0, wzr
  252e98:	bl	2535b0 <log_get_max_level_realm@plt>
  252e9c:	cmp	w0, #0x7
  252ea0:	b.lt	252ec4 <dhcp_lease_load+0xbec>  // b.tstop
  252ea4:	ldr	x6, [x26, x25, lsl #3]
  252ea8:	mov	w0, #0x7                   	// #7
  252eac:	mov	w3, #0x4e0                 	// #1248
  252eb0:	mov	w1, w24
  252eb4:	mov	x2, x20
  252eb8:	mov	x4, x22
  252ebc:	mov	x5, x23
  252ec0:	bl	2535c0 <log_internal_realm@plt>
  252ec4:	mov	w24, #0x8                   	// #8
  252ec8:	add	x0, sp, #0x368
  252ecc:	bl	251898 <freep>
  252ed0:	orr	w8, w24, #0x8
  252ed4:	cmp	w8, #0x8
  252ed8:	b.ne	2527bc <dhcp_lease_load+0x4e4>  // b.any
  252edc:	add	x25, x25, #0x1
  252ee0:	cmp	x25, #0x1f
  252ee4:	b.ne	252e50 <dhcp_lease_load+0xb78>  // b.any
  252ee8:	ldur	x8, [x29, #-16]
  252eec:	ldr	x9, [sp, #800]
  252ef0:	mov	w21, wzr
  252ef4:	stur	xzr, [x29, #-16]
  252ef8:	str	x8, [x9]
  252efc:	b	2527bc <dhcp_lease_load+0x4e4>
  252f00:	add	x0, sp, #0x368
  252f04:	bl	251a40 <strv_freep>
  252f08:	mov	w21, #0xfffffff4            	// #-12
  252f0c:	b	2527bc <dhcp_lease_load+0x4e4>
  252f10:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  252f14:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252f18:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  252f1c:	add	x1, x1, #0xed0
  252f20:	add	x2, x2, #0xc80
  252f24:	add	x4, x4, #0x86f
  252f28:	mov	w3, #0x41c                 	// #1052
  252f2c:	mov	w0, wzr
  252f30:	bl	253740 <log_assert_failed_realm@plt>
  252f34:	adrp	x1, 211000 <worker_hash_op+0x6ad0>
  252f38:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  252f3c:	adrp	x4, 218000 <worker_hash_op+0xdad0>
  252f40:	add	x1, x1, #0xb2b
  252f44:	add	x2, x2, #0xc80
  252f48:	add	x4, x4, #0x86f
  252f4c:	mov	w3, #0x41d                 	// #1053
  252f50:	mov	w0, wzr
  252f54:	bl	253740 <log_assert_failed_realm@plt>

0000000000252f58 <sd_dhcp_lease_unrefp>:
  252f58:	stp	x29, x30, [sp, #-16]!
  252f5c:	ldr	x0, [x0]
  252f60:	mov	x29, sp
  252f64:	cbz	x0, 252f6c <sd_dhcp_lease_unrefp+0x14>
  252f68:	bl	250284 <sd_dhcp_lease_unref>
  252f6c:	ldp	x29, x30, [sp], #16
  252f70:	ret

0000000000252f74 <safe_atou16>:
  252f74:	stp	x29, x30, [sp, #-16]!
  252f78:	mov	x2, x1
  252f7c:	mov	w1, wzr
  252f80:	mov	x29, sp
  252f84:	bl	254810 <safe_atou16_full@plt>
  252f88:	ldp	x29, x30, [sp], #16
  252f8c:	ret

0000000000252f90 <strv_split>:
  252f90:	stp	x29, x30, [sp, #-16]!
  252f94:	adrp	x1, 20c000 <worker_hash_op+0x1ad0>
  252f98:	add	x1, x1, #0x6c2
  252f9c:	mov	w2, wzr
  252fa0:	mov	x29, sp
  252fa4:	bl	2540e0 <strv_split_full@plt>
  252fa8:	ldp	x29, x30, [sp], #16
  252fac:	ret

0000000000252fb0 <strv_isempty>:
  252fb0:	cbz	x0, 252fc4 <strv_isempty+0x14>
  252fb4:	ldr	x8, [x0]
  252fb8:	cmp	x8, #0x0
  252fbc:	cset	w0, eq  // eq = none
  252fc0:	ret
  252fc4:	mov	w0, #0x1                   	// #1
  252fc8:	ret

0000000000252fcc <safe_atou32>:
  252fcc:	stp	x29, x30, [sp, #-16]!
  252fd0:	mov	x29, sp
  252fd4:	bl	2533d0 <safe_atou>
  252fd8:	ldp	x29, x30, [sp], #16
  252fdc:	ret

0000000000252fe0 <unhexmem>:
  252fe0:	stp	x29, x30, [sp, #-16]!
  252fe4:	mov	x4, x2
  252fe8:	mov	x3, x1
  252fec:	mov	x1, #0xffffffffffffffff    	// #-1
  252ff0:	mov	w2, wzr
  252ff4:	mov	x29, sp
  252ff8:	bl	2551b0 <unhexmem_full@plt>
  252ffc:	ldp	x29, x30, [sp], #16
  253000:	ret

0000000000253004 <dhcp_lease_set_default_subnet_mask>:
  253004:	sub	sp, sp, #0x30
  253008:	stp	x29, x30, [sp, #16]
  25300c:	str	x19, [sp, #32]
  253010:	add	x29, sp, #0x10
  253014:	cbz	x0, 253064 <dhcp_lease_set_default_subnet_mask+0x60>
  253018:	ldr	w8, [x0, #16]
  25301c:	mov	x19, x0
  253020:	cbz	w8, 253050 <dhcp_lease_set_default_subnet_mask+0x4c>
  253024:	add	x0, x29, #0x18
  253028:	add	x1, sp, #0x8
  25302c:	str	w8, [x29, #24]
  253030:	bl	2551c0 <in4_addr_default_subnet_mask@plt>
  253034:	tbnz	w0, #31, 253054 <dhcp_lease_set_default_subnet_mask+0x50>
  253038:	ldr	w8, [sp, #8]
  25303c:	mov	w0, wzr
  253040:	mov	w9, #0x1                   	// #1
  253044:	strb	w9, [x19, #28]
  253048:	str	w8, [x19, #32]
  25304c:	b	253054 <dhcp_lease_set_default_subnet_mask+0x50>
  253050:	mov	w0, #0xffffffc3            	// #-61
  253054:	ldr	x19, [sp, #32]
  253058:	ldp	x29, x30, [sp, #16]
  25305c:	add	sp, sp, #0x30
  253060:	ret
  253064:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  253068:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  25306c:	adrp	x4, 216000 <worker_hash_op+0xbad0>
  253070:	add	x1, x1, #0x3
  253074:	add	x2, x2, #0xc80
  253078:	add	x4, x4, #0xc7f
  25307c:	mov	w3, #0x4f2                 	// #1266
  253080:	bl	253740 <log_assert_failed_realm@plt>

0000000000253084 <dhcp_lease_set_client_id>:
  253084:	stp	x29, x30, [sp, #-48]!
  253088:	str	x21, [sp, #16]
  25308c:	stp	x20, x19, [sp, #32]
  253090:	mov	x29, sp
  253094:	cbz	x0, 2530fc <dhcp_lease_set_client_id+0x78>
  253098:	mov	x20, x2
  25309c:	mov	x19, x0
  2530a0:	cbnz	x1, 2530a8 <dhcp_lease_set_client_id+0x24>
  2530a4:	cbnz	x20, 25311c <dhcp_lease_set_client_id+0x98>
  2530a8:	cbz	x20, 2530d4 <dhcp_lease_set_client_id+0x50>
  2530ac:	mov	x0, x1
  2530b0:	mov	x1, x20
  2530b4:	bl	2550d0 <memdup@plt>
  2530b8:	cbz	x0, 2530e8 <dhcp_lease_set_client_id+0x64>
  2530bc:	mov	x21, x0
  2530c0:	ldr	x0, [x19, #176]
  2530c4:	bl	2536e0 <free@plt>
  2530c8:	mov	w0, wzr
  2530cc:	stp	x21, x20, [x19, #176]
  2530d0:	b	2530ec <dhcp_lease_set_client_id+0x68>
  2530d4:	ldr	x0, [x19, #176]
  2530d8:	bl	2518b0 <mfree>
  2530dc:	mov	w0, wzr
  2530e0:	str	xzr, [x19, #176]
  2530e4:	b	2530ec <dhcp_lease_set_client_id+0x68>
  2530e8:	mov	w0, #0xfffffff4            	// #-12
  2530ec:	ldp	x20, x19, [sp, #32]
  2530f0:	ldr	x21, [sp, #16]
  2530f4:	ldp	x29, x30, [sp], #48
  2530f8:	ret
  2530fc:	adrp	x1, 20e000 <worker_hash_op+0x3ad0>
  253100:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  253104:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  253108:	add	x1, x1, #0x3
  25310c:	add	x2, x2, #0xc80
  253110:	add	x4, x4, #0xdd7
  253114:	mov	w3, #0x513                 	// #1299
  253118:	b	25313c <dhcp_lease_set_client_id+0xb8>
  25311c:	adrp	x1, 213000 <worker_hash_op+0x8ad0>
  253120:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  253124:	adrp	x4, 215000 <worker_hash_op+0xaad0>
  253128:	add	x1, x1, #0x164
  25312c:	add	x2, x2, #0xc80
  253130:	add	x4, x4, #0xdd7
  253134:	mov	w3, #0x514                 	// #1300
  253138:	mov	w0, wzr
  25313c:	bl	253f10 <log_assert_failed_return_realm@plt>
  253140:	mov	w0, #0xffffffea            	// #-22
  253144:	b	2530ec <dhcp_lease_set_client_id+0x68>

0000000000253148 <sd_dhcp_route_get_destination>:
  253148:	stp	x29, x30, [sp, #-16]!
  25314c:	mov	x29, sp
  253150:	cbz	x0, 253170 <sd_dhcp_route_get_destination+0x28>
  253154:	cbz	x1, 253190 <sd_dhcp_route_get_destination+0x48>
  253158:	mov	x8, x0
  25315c:	ldr	w8, [x8]
  253160:	mov	w0, wzr
  253164:	str	w8, [x1]
  253168:	ldp	x29, x30, [sp], #16
  25316c:	ret
  253170:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  253174:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  253178:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  25317c:	add	x1, x1, #0x8dc
  253180:	add	x2, x2, #0xc80
  253184:	add	x4, x4, #0xae6
  253188:	mov	w3, #0x533                 	// #1331
  25318c:	b	2531b0 <sd_dhcp_route_get_destination+0x68>
  253190:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  253194:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  253198:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  25319c:	add	x1, x1, #0x7c0
  2531a0:	add	x2, x2, #0xc80
  2531a4:	add	x4, x4, #0xae6
  2531a8:	mov	w3, #0x534                 	// #1332
  2531ac:	mov	w0, wzr
  2531b0:	bl	253f10 <log_assert_failed_return_realm@plt>
  2531b4:	mov	w0, #0xffffffea            	// #-22
  2531b8:	ldp	x29, x30, [sp], #16
  2531bc:	ret

00000000002531c0 <sd_dhcp_route_get_destination_prefix_length>:
  2531c0:	stp	x29, x30, [sp, #-16]!
  2531c4:	mov	x29, sp
  2531c8:	cbz	x0, 2531e8 <sd_dhcp_route_get_destination_prefix_length+0x28>
  2531cc:	cbz	x1, 253208 <sd_dhcp_route_get_destination_prefix_length+0x48>
  2531d0:	mov	x8, x0
  2531d4:	ldrb	w8, [x8, #8]
  2531d8:	mov	w0, wzr
  2531dc:	strb	w8, [x1]
  2531e0:	ldp	x29, x30, [sp], #16
  2531e4:	ret
  2531e8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  2531ec:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2531f0:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  2531f4:	add	x1, x1, #0x8dc
  2531f8:	add	x2, x2, #0xc80
  2531fc:	add	x4, x4, #0x8e2
  253200:	mov	w3, #0x53b                 	// #1339
  253204:	b	253228 <sd_dhcp_route_get_destination_prefix_length+0x68>
  253208:	adrp	x1, 20b000 <worker_hash_op+0xad0>
  25320c:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  253210:	adrp	x4, 20d000 <worker_hash_op+0x2ad0>
  253214:	add	x1, x1, #0x7cc
  253218:	add	x2, x2, #0xc80
  25321c:	add	x4, x4, #0x8e2
  253220:	mov	w3, #0x53c                 	// #1340
  253224:	mov	w0, wzr
  253228:	bl	253f10 <log_assert_failed_return_realm@plt>
  25322c:	mov	w0, #0xffffffea            	// #-22
  253230:	ldp	x29, x30, [sp], #16
  253234:	ret

0000000000253238 <sd_dhcp_route_get_gateway>:
  253238:	stp	x29, x30, [sp, #-16]!
  25323c:	mov	x29, sp
  253240:	cbz	x0, 253260 <sd_dhcp_route_get_gateway+0x28>
  253244:	cbz	x1, 253280 <sd_dhcp_route_get_gateway+0x48>
  253248:	mov	x8, x0
  25324c:	ldr	w8, [x8, #4]
  253250:	mov	w0, wzr
  253254:	str	w8, [x1]
  253258:	ldp	x29, x30, [sp], #16
  25325c:	ret
  253260:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  253264:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  253268:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  25326c:	add	x1, x1, #0x8dc
  253270:	add	x2, x2, #0xc80
  253274:	add	x4, x4, #0xf76
  253278:	mov	w3, #0x543                 	// #1347
  25327c:	b	2532a0 <sd_dhcp_route_get_gateway+0x68>
  253280:	adrp	x1, 217000 <worker_hash_op+0xcad0>
  253284:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  253288:	adrp	x4, 213000 <worker_hash_op+0x8ad0>
  25328c:	add	x1, x1, #0x4a1
  253290:	add	x2, x2, #0xc80
  253294:	add	x4, x4, #0xf76
  253298:	mov	w3, #0x544                 	// #1348
  25329c:	mov	w0, wzr
  2532a0:	bl	253f10 <log_assert_failed_return_realm@plt>
  2532a4:	mov	w0, #0xffffffea            	// #-22
  2532a8:	ldp	x29, x30, [sp], #16
  2532ac:	ret

00000000002532b0 <sd_dhcp_route_get_option>:
  2532b0:	stp	x29, x30, [sp, #-16]!
  2532b4:	mov	x29, sp
  2532b8:	cbz	x0, 2532c8 <sd_dhcp_route_get_option+0x18>
  2532bc:	ldrb	w0, [x0, #9]
  2532c0:	ldp	x29, x30, [sp], #16
  2532c4:	ret
  2532c8:	adrp	x1, 20d000 <worker_hash_op+0x2ad0>
  2532cc:	adrp	x2, 210000 <worker_hash_op+0x5ad0>
  2532d0:	adrp	x4, 211000 <worker_hash_op+0x6ad0>
  2532d4:	add	x1, x1, #0x8dc
  2532d8:	add	x2, x2, #0xc80
  2532dc:	add	x4, x4, #0x3d9
  2532e0:	mov	w3, #0x54b                 	// #1355
  2532e4:	bl	253f10 <log_assert_failed_return_realm@plt>
  2532e8:	mov	w0, #0xffffffea            	// #-22
  2532ec:	ldp	x29, x30, [sp], #16
  2532f0:	ret

00000000002532f4 <size_multiply_overflow>:
  2532f4:	umulh	x8, x1, x0
  2532f8:	cmp	xzr, x8
  2532fc:	cset	w0, ne  // ne = any
  253300:	ret

0000000000253304 <unaligned_read_be32>:
  253304:	stp	x29, x30, [sp, #-16]!
  253308:	ldr	w0, [x0]
  25330c:	mov	x29, sp
  253310:	bl	25331c <be32toh>
  253314:	ldp	x29, x30, [sp], #16
  253318:	ret

000000000025331c <be32toh>:
  25331c:	stp	x29, x30, [sp, #-16]!
  253320:	mov	x29, sp
  253324:	bl	253330 <__bswap_32>
  253328:	ldp	x29, x30, [sp], #16
  25332c:	ret

0000000000253330 <__bswap_32>:
  253330:	rev	w0, w0
  253334:	ret

0000000000253338 <memdup_multiply>:
  253338:	stp	x29, x30, [sp, #-32]!
  25333c:	stp	x20, x19, [sp, #16]
  253340:	mov	x19, x0
  253344:	mov	w0, #0x4                   	// #4
  253348:	mov	x29, sp
  25334c:	mov	x20, x1
  253350:	bl	2532f4 <size_multiply_overflow>
  253354:	tbz	w0, #0, 253360 <memdup_multiply+0x28>
  253358:	mov	x0, xzr
  25335c:	b	25336c <memdup_multiply+0x34>
  253360:	lsl	x1, x20, #2
  253364:	mov	x0, x19
  253368:	bl	2550d0 <memdup@plt>
  25336c:	ldp	x20, x19, [sp, #16]
  253370:	ldp	x29, x30, [sp], #32
  253374:	ret

0000000000253378 <unaligned_read_be16>:
  253378:	stp	x29, x30, [sp, #-16]!
  25337c:	ldrh	w0, [x0]
  253380:	mov	x29, sp
  253384:	bl	253390 <be16toh>
  253388:	ldp	x29, x30, [sp], #16
  25338c:	ret

0000000000253390 <be16toh>:
  253390:	stp	x29, x30, [sp, #-16]!
  253394:	mov	x29, sp
  253398:	bl	2533a4 <__bswap_16>
  25339c:	ldp	x29, x30, [sp], #16
  2533a0:	ret

00000000002533a4 <__bswap_16>:
  2533a4:	rev	w8, w0
  2533a8:	lsr	w0, w8, #16
  2533ac:	ret

00000000002533b0 <dns_name_normalize>:
  2533b0:	stp	x29, x30, [sp, #-16]!
  2533b4:	mov	x3, x1
  2533b8:	mov	x1, xzr
  2533bc:	mov	w2, wzr
  2533c0:	mov	x29, sp
  2533c4:	bl	2551d0 <dns_name_concat@plt>
  2533c8:	ldp	x29, x30, [sp], #16
  2533cc:	ret

00000000002533d0 <safe_atou>:
  2533d0:	stp	x29, x30, [sp, #-16]!
  2533d4:	mov	x2, x1
  2533d8:	mov	w1, wzr
  2533dc:	mov	x29, sp
  2533e0:	bl	253970 <safe_atou_full@plt>
  2533e4:	ldp	x29, x30, [sp], #16
  2533e8:	ret
  2533ec:	udf	#0

00000000002533f0 <__libc_csu_init>:
  2533f0:	stp	x29, x30, [sp, #-64]!
  2533f4:	mov	x29, sp
  2533f8:	stp	x19, x20, [sp, #16]
  2533fc:	adrp	x20, 265000 <__lxstat64@plt+0xfe00>
  253400:	add	x20, x20, #0x220
  253404:	stp	x21, x22, [sp, #32]
  253408:	adrp	x21, 265000 <__lxstat64@plt+0xfe00>
  25340c:	add	x21, x21, #0x218
  253410:	sub	x20, x20, x21
  253414:	mov	w22, w0
  253418:	stp	x23, x24, [sp, #48]
  25341c:	mov	x23, x1
  253420:	mov	x24, x2
  253424:	bl	2534a8 <_init>
  253428:	cmp	xzr, x20, asr #3
  25342c:	b.eq	253458 <__libc_csu_init+0x68>  // b.none
  253430:	asr	x20, x20, #3
  253434:	mov	x19, #0x0                   	// #0
  253438:	ldr	x3, [x21, x19, lsl #3]
  25343c:	mov	x2, x24
  253440:	add	x19, x19, #0x1
  253444:	mov	x1, x23
  253448:	mov	w0, w22
  25344c:	blr	x3
  253450:	cmp	x20, x19
  253454:	b.ne	253438 <__libc_csu_init+0x48>  // b.any
  253458:	ldp	x19, x20, [sp, #16]
  25345c:	ldp	x21, x22, [sp, #32]
  253460:	ldp	x23, x24, [sp, #48]
  253464:	ldp	x29, x30, [sp], #64
  253468:	ret
  25346c:	nop

0000000000253470 <__libc_csu_fini>:
  253470:	ret
  253474:	udf	#0

0000000000253478 <stat64>:
  253478:	mov	x2, x1
  25347c:	mov	x1, x0
  253480:	mov	w0, #0x0                   	// #0
  253484:	b	2551e0 <__xstat64@plt>

0000000000253488 <fstat64>:
  253488:	mov	x2, x1
  25348c:	mov	w1, w0
  253490:	mov	w0, #0x0                   	// #0
  253494:	b	2551f0 <__fxstat64@plt>

0000000000253498 <lstat64>:
  253498:	mov	x2, x1
  25349c:	mov	x1, x0
  2534a0:	mov	w0, #0x0                   	// #0
  2534a4:	b	255200 <__lxstat64@plt>

Disassembly of section .init:

00000000002534a8 <_init>:
  2534a8:	stp	x29, x30, [sp, #-16]!
  2534ac:	mov	x29, sp
  2534b0:	bl	229190 <call_weak_fn>
  2534b4:	ldp	x29, x30, [sp], #16
  2534b8:	ret

Disassembly of section .fini:

00000000002534bc <_fini>:
  2534bc:	stp	x29, x30, [sp, #-16]!
  2534c0:	mov	x29, sp
  2534c4:	ldp	x29, x30, [sp], #16
  2534c8:	ret

Disassembly of section .plt:

00000000002534d0 <__libc_start_main@plt-0x20>:
  2534d0:	stp	x16, x30, [sp, #-16]!
  2534d4:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2534d8:	ldr	x17, [x16, #816]
  2534dc:	add	x16, x16, #0x330
  2534e0:	br	x17
  2534e4:	nop
  2534e8:	nop
  2534ec:	nop

00000000002534f0 <__libc_start_main@plt>:
  2534f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2534f4:	ldr	x17, [x16, #824]
  2534f8:	add	x16, x16, #0x338
  2534fc:	br	x17

0000000000253500 <abort@plt>:
  253500:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253504:	ldr	x17, [x16, #832]
  253508:	add	x16, x16, #0x340
  25350c:	br	x17

0000000000253510 <__gmon_start__@plt>:
  253510:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253514:	ldr	x17, [x16, #840]
  253518:	add	x16, x16, #0x348
  25351c:	br	x17

0000000000253520 <ask_password_agent_close@plt>:
  253520:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253524:	ldr	x17, [x16, #848]
  253528:	add	x16, x16, #0x350
  25352c:	br	x17

0000000000253530 <polkit_agent_close@plt>:
  253530:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253534:	ldr	x17, [x16, #856]
  253538:	add	x16, x16, #0x358
  25353c:	br	x17

0000000000253540 <pager_close@plt>:
  253540:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253544:	ldr	x17, [x16, #864]
  253548:	add	x16, x16, #0x360
  25354c:	br	x17

0000000000253550 <mac_selinux_finish@plt>:
  253550:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253554:	ldr	x17, [x16, #872]
  253558:	add	x16, x16, #0x368
  25355c:	br	x17

0000000000253560 <log_set_target@plt>:
  253560:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253564:	ldr	x17, [x16, #880]
  253568:	add	x16, x16, #0x370
  25356c:	br	x17

0000000000253570 <log_open@plt>:
  253570:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253574:	ldr	x17, [x16, #888]
  253578:	add	x16, x16, #0x378
  25357c:	br	x17

0000000000253580 <udev_parse_config_full@plt>:
  253580:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253584:	ldr	x17, [x16, #896]
  253588:	add	x16, x16, #0x380
  25358c:	br	x17

0000000000253590 <log_parse_environment_realm@plt>:
  253590:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253594:	ldr	x17, [x16, #904]
  253598:	add	x16, x16, #0x388
  25359c:	br	x17

00000000002535a0 <proc_cmdline_parse@plt>:
  2535a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2535a4:	ldr	x17, [x16, #912]
  2535a8:	add	x16, x16, #0x390
  2535ac:	br	x17

00000000002535b0 <log_get_max_level_realm@plt>:
  2535b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2535b4:	ldr	x17, [x16, #920]
  2535b8:	add	x16, x16, #0x398
  2535bc:	br	x17

00000000002535c0 <log_internal_realm@plt>:
  2535c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2535c4:	ldr	x17, [x16, #928]
  2535c8:	add	x16, x16, #0x3a0
  2535cc:	br	x17

00000000002535d0 <log_set_max_level_realm@plt>:
  2535d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2535d4:	ldr	x17, [x16, #936]
  2535d8:	add	x16, x16, #0x3a8
  2535dc:	br	x17

00000000002535e0 <must_be_root@plt>:
  2535e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2535e4:	ldr	x17, [x16, #944]
  2535e8:	add	x16, x16, #0x3b0
  2535ec:	br	x17

00000000002535f0 <sched_getaffinity@plt>:
  2535f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2535f4:	ldr	x17, [x16, #952]
  2535f8:	add	x16, x16, #0x3b8
  2535fc:	br	x17

0000000000253600 <__sched_cpucount@plt>:
  253600:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253604:	ldr	x17, [x16, #960]
  253608:	add	x16, x16, #0x3c0
  25360c:	br	x17

0000000000253610 <physical_memory@plt>:
  253610:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253614:	ldr	x17, [x16, #968]
  253618:	add	x16, x16, #0x3c8
  25361c:	br	x17

0000000000253620 <chdir@plt>:
  253620:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253624:	ldr	x17, [x16, #976]
  253628:	add	x16, x16, #0x3d0
  25362c:	br	x17

0000000000253630 <umask@plt>:
  253630:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253634:	ldr	x17, [x16, #984]
  253638:	add	x16, x16, #0x3d8
  25363c:	br	x17

0000000000253640 <mac_selinux_init@plt>:
  253640:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253644:	ldr	x17, [x16, #992]
  253648:	add	x16, x16, #0x3e0
  25364c:	br	x17

0000000000253650 <mkdir_errno_wrapper@plt>:
  253650:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253654:	ldr	x17, [x16, #1000]
  253658:	add	x16, x16, #0x3e8
  25365c:	br	x17

0000000000253660 <__errno_location@plt>:
  253660:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253664:	ldr	x17, [x16, #1008]
  253668:	add	x16, x16, #0x3f0
  25366c:	br	x17

0000000000253670 <dev_setup@plt>:
  253670:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253674:	ldr	x17, [x16, #1016]
  253678:	add	x16, x16, #0x3f8
  25367c:	br	x17

0000000000253680 <getppid@plt>:
  253680:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253684:	ldr	x17, [x16, #1024]
  253688:	add	x16, x16, #0x400
  25368c:	br	x17

0000000000253690 <sd_booted@plt>:
  253690:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253694:	ldr	x17, [x16, #1032]
  253698:	add	x16, x16, #0x408
  25369c:	br	x17

00000000002536a0 <cg_pid_get_path@plt>:
  2536a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2536a4:	ldr	x17, [x16, #1040]
  2536a8:	add	x16, x16, #0x410
  2536ac:	br	x17

00000000002536b0 <fork@plt>:
  2536b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2536b4:	ldr	x17, [x16, #1048]
  2536b8:	add	x16, x16, #0x418
  2536bc:	br	x17

00000000002536c0 <setsid@plt>:
  2536c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2536c4:	ldr	x17, [x16, #1056]
  2536c8:	add	x16, x16, #0x420
  2536cc:	br	x17

00000000002536d0 <set_oom_score_adjust@plt>:
  2536d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2536d4:	ldr	x17, [x16, #1064]
  2536d8:	add	x16, x16, #0x428
  2536dc:	br	x17

00000000002536e0 <free@plt>:
  2536e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2536e4:	ldr	x17, [x16, #1072]
  2536e8:	add	x16, x16, #0x430
  2536ec:	br	x17

00000000002536f0 <getopt_long@plt>:
  2536f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2536f4:	ldr	x17, [x16, #1080]
  2536f8:	add	x16, x16, #0x438
  2536fc:	br	x17

0000000000253700 <resolve_name_timing_from_string@plt>:
  253700:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253704:	ldr	x17, [x16, #1088]
  253708:	add	x16, x16, #0x440
  25370c:	br	x17

0000000000253710 <parse_sec@plt>:
  253710:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253714:	ldr	x17, [x16, #1096]
  253718:	add	x16, x16, #0x448
  25371c:	br	x17

0000000000253720 <puts@plt>:
  253720:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253724:	ldr	x17, [x16, #1104]
  253728:	add	x16, x16, #0x450
  25372c:	br	x17

0000000000253730 <log_assert_failed_unreachable_realm@plt>:
  253730:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253734:	ldr	x17, [x16, #1112]
  253738:	add	x16, x16, #0x458
  25373c:	br	x17

0000000000253740 <log_assert_failed_realm@plt>:
  253740:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253744:	ldr	x17, [x16, #1120]
  253748:	add	x16, x16, #0x460
  25374c:	br	x17

0000000000253750 <proc_cmdline_key_streq@plt>:
  253750:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253754:	ldr	x17, [x16, #1128]
  253758:	add	x16, x16, #0x468
  25375c:	br	x17

0000000000253760 <log_level_from_string@plt>:
  253760:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253764:	ldr	x17, [x16, #1136]
  253768:	add	x16, x16, #0x470
  25376c:	br	x17

0000000000253770 <sd_listen_fds@plt>:
  253770:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253774:	ldr	x17, [x16, #1144]
  253778:	add	x16, x16, #0x478
  25377c:	br	x17

0000000000253780 <sd_is_socket@plt>:
  253780:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253784:	ldr	x17, [x16, #1152]
  253788:	add	x16, x16, #0x480
  25378c:	br	x17

0000000000253790 <device_monitor_new_full@plt>:
  253790:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253794:	ldr	x17, [x16, #1160]
  253798:	add	x16, x16, #0x488
  25379c:	br	x17

00000000002537a0 <sd_device_monitor_set_receive_buffer_size@plt>:
  2537a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2537a4:	ldr	x17, [x16, #1168]
  2537a8:	add	x16, x16, #0x490
  2537ac:	br	x17

00000000002537b0 <device_monitor_enable_receiving@plt>:
  2537b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2537b4:	ldr	x17, [x16, #1176]
  2537b8:	add	x16, x16, #0x498
  2537bc:	br	x17

00000000002537c0 <log_oom_internal@plt>:
  2537c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2537c4:	ldr	x17, [x16, #1184]
  2537c8:	add	x16, x16, #0x4a0
  2537cc:	br	x17

00000000002537d0 <rearrange_stdio@plt>:
  2537d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2537d4:	ldr	x17, [x16, #1192]
  2537d8:	add	x16, x16, #0x4a8
  2537dc:	br	x17

00000000002537e0 <getpid_cached@plt>:
  2537e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2537e4:	ldr	x17, [x16, #1200]
  2537e8:	add	x16, x16, #0x4b0
  2537ec:	br	x17

00000000002537f0 <socketpair@plt>:
  2537f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2537f4:	ldr	x17, [x16, #1208]
  2537f8:	add	x16, x16, #0x4b8
  2537fc:	br	x17

0000000000253800 <sigprocmask_many@plt>:
  253800:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253804:	ldr	x17, [x16, #1216]
  253808:	add	x16, x16, #0x4c0
  25380c:	br	x17

0000000000253810 <sd_event_default@plt>:
  253810:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253814:	ldr	x17, [x16, #1224]
  253818:	add	x16, x16, #0x4c8
  25381c:	br	x17

0000000000253820 <sd_event_add_signal@plt>:
  253820:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253824:	ldr	x17, [x16, #1232]
  253828:	add	x16, x16, #0x4d0
  25382c:	br	x17

0000000000253830 <sd_event_set_watchdog@plt>:
  253830:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253834:	ldr	x17, [x16, #1240]
  253838:	add	x16, x16, #0x4d8
  25383c:	br	x17

0000000000253840 <sd_event_source_set_priority@plt>:
  253840:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253844:	ldr	x17, [x16, #1248]
  253848:	add	x16, x16, #0x4e0
  25384c:	br	x17

0000000000253850 <sd_event_add_io@plt>:
  253850:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253854:	ldr	x17, [x16, #1256]
  253858:	add	x16, x16, #0x4e8
  25385c:	br	x17

0000000000253860 <sd_device_monitor_attach_event@plt>:
  253860:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253864:	ldr	x17, [x16, #1264]
  253868:	add	x16, x16, #0x4f0
  25386c:	br	x17

0000000000253870 <sd_device_monitor_start@plt>:
  253870:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253874:	ldr	x17, [x16, #1272]
  253878:	add	x16, x16, #0x4f8
  25387c:	br	x17

0000000000253880 <sd_device_monitor_get_event_source@plt>:
  253880:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253884:	ldr	x17, [x16, #1280]
  253888:	add	x16, x16, #0x500
  25388c:	br	x17

0000000000253890 <sd_event_source_set_description@plt>:
  253890:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253894:	ldr	x17, [x16, #1288]
  253898:	add	x16, x16, #0x508
  25389c:	br	x17

00000000002538a0 <sd_event_add_post@plt>:
  2538a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2538a4:	ldr	x17, [x16, #1296]
  2538a8:	add	x16, x16, #0x510
  2538ac:	br	x17

00000000002538b0 <sd_notifyf@plt>:
  2538b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2538b4:	ldr	x17, [x16, #1304]
  2538b8:	add	x16, x16, #0x518
  2538bc:	br	x17

00000000002538c0 <sd_event_loop@plt>:
  2538c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2538c4:	ldr	x17, [x16, #1312]
  2538c8:	add	x16, x16, #0x520
  2538cc:	br	x17

00000000002538d0 <sd_notify@plt>:
  2538d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2538d4:	ldr	x17, [x16, #1320]
  2538d8:	add	x16, x16, #0x528
  2538dc:	br	x17

00000000002538e0 <sd_netlink_unref@plt>:
  2538e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2538e4:	ldr	x17, [x16, #1328]
  2538e8:	add	x16, x16, #0x530
  2538ec:	br	x17

00000000002538f0 <safe_close@plt>:
  2538f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2538f4:	ldr	x17, [x16, #1336]
  2538f8:	add	x16, x16, #0x538
  2538fc:	br	x17

0000000000253900 <safe_close_pair@plt>:
  253900:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253904:	ldr	x17, [x16, #1344]
  253908:	add	x16, x16, #0x540
  25390c:	br	x17

0000000000253910 <sd_event_source_unref@plt>:
  253910:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253914:	ldr	x17, [x16, #1352]
  253918:	add	x16, x16, #0x548
  25391c:	br	x17

0000000000253920 <sd_event_unref@plt>:
  253920:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253924:	ldr	x17, [x16, #1360]
  253928:	add	x16, x16, #0x550
  25392c:	br	x17

0000000000253930 <sd_device_monitor_unref@plt>:
  253930:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253934:	ldr	x17, [x16, #1368]
  253938:	add	x16, x16, #0x558
  25393c:	br	x17

0000000000253940 <internal_hashmap_free@plt>:
  253940:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253944:	ldr	x17, [x16, #1376]
  253948:	add	x16, x16, #0x560
  25394c:	br	x17

0000000000253950 <sd_device_unref@plt>:
  253950:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253954:	ldr	x17, [x16, #1384]
  253958:	add	x16, x16, #0x568
  25395c:	br	x17

0000000000253960 <unlink@plt>:
  253960:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253964:	ldr	x17, [x16, #1392]
  253968:	add	x16, x16, #0x570
  25396c:	br	x17

0000000000253970 <safe_atou_full@plt>:
  253970:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253974:	ldr	x17, [x16, #1400]
  253978:	add	x16, x16, #0x578
  25397c:	br	x17

0000000000253980 <terminal_urlify_man@plt>:
  253980:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253984:	ldr	x17, [x16, #1408]
  253988:	add	x16, x16, #0x580
  25398c:	br	x17

0000000000253990 <printf@plt>:
  253990:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253994:	ldr	x17, [x16, #1416]
  253998:	add	x16, x16, #0x588
  25399c:	br	x17

00000000002539a0 <strlen@plt>:
  2539a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2539a4:	ldr	x17, [x16, #1424]
  2539a8:	add	x16, x16, #0x590
  2539ac:	br	x17

00000000002539b0 <strncmp@plt>:
  2539b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2539b4:	ldr	x17, [x16, #1432]
  2539b8:	add	x16, x16, #0x598
  2539bc:	br	x17

00000000002539c0 <malloc@plt>:
  2539c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2539c4:	ldr	x17, [x16, #1440]
  2539c8:	add	x16, x16, #0x5a0
  2539cc:	br	x17

00000000002539d0 <setsockopt@plt>:
  2539d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2539d4:	ldr	x17, [x16, #1448]
  2539d8:	add	x16, x16, #0x5a8
  2539dc:	br	x17

00000000002539e0 <waitpid@plt>:
  2539e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2539e4:	ldr	x17, [x16, #1456]
  2539e8:	add	x16, x16, #0x5b0
  2539ec:	br	x17

00000000002539f0 <log_object_internal@plt>:
  2539f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2539f4:	ldr	x17, [x16, #1464]
  2539f8:	add	x16, x16, #0x5b8
  2539fc:	br	x17

0000000000253a00 <signal_to_string@plt>:
  253a00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a04:	ldr	x17, [x16, #1472]
  253a08:	add	x16, x16, #0x5c0
  253a0c:	br	x17

0000000000253a10 <device_delete_db@plt>:
  253a10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a14:	ldr	x17, [x16, #1480]
  253a18:	add	x16, x16, #0x5c8
  253a1c:	br	x17

0000000000253a20 <device_tag_index@plt>:
  253a20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a24:	ldr	x17, [x16, #1488]
  253a28:	add	x16, x16, #0x5d0
  253a2c:	br	x17

0000000000253a30 <device_monitor_send_device@plt>:
  253a30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a34:	ldr	x17, [x16, #1496]
  253a38:	add	x16, x16, #0x5d8
  253a3c:	br	x17

0000000000253a40 <sd_device_get_sysname@plt>:
  253a40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a44:	ldr	x17, [x16, #1504]
  253a48:	add	x16, x16, #0x5e0
  253a4c:	br	x17

0000000000253a50 <event_source_disable@plt>:
  253a50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a54:	ldr	x17, [x16, #1512]
  253a58:	add	x16, x16, #0x5e8
  253a5c:	br	x17

0000000000253a60 <strchr@plt>:
  253a60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a64:	ldr	x17, [x16, #1520]
  253a68:	add	x16, x16, #0x5f0
  253a6c:	br	x17

0000000000253a70 <strndup@plt>:
  253a70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a74:	ldr	x17, [x16, #1528]
  253a78:	add	x16, x16, #0x5f8
  253a7c:	br	x17

0000000000253a80 <hashmap_remove2@plt>:
  253a80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a84:	ldr	x17, [x16, #1536]
  253a88:	add	x16, x16, #0x600
  253a8c:	br	x17

0000000000253a90 <internal_hashmap_ensure_allocated@plt>:
  253a90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253a94:	ldr	x17, [x16, #1544]
  253a98:	add	x16, x16, #0x608
  253a9c:	br	x17

0000000000253aa0 <hashmap_put@plt>:
  253aa0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253aa4:	ldr	x17, [x16, #1552]
  253aa8:	add	x16, x16, #0x610
  253aac:	br	x17

0000000000253ab0 <strdup@plt>:
  253ab0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ab4:	ldr	x17, [x16, #1560]
  253ab8:	add	x16, x16, #0x618
  253abc:	br	x17

0000000000253ac0 <read@plt>:
  253ac0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ac4:	ldr	x17, [x16, #1568]
  253ac8:	add	x16, x16, #0x620
  253acc:	br	x17

0000000000253ad0 <sd_device_get_devname@plt>:
  253ad0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ad4:	ldr	x17, [x16, #1576]
  253ad8:	add	x16, x16, #0x628
  253adc:	br	x17

0000000000253ae0 <device_ensure_usec_initialized@plt>:
  253ae0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ae4:	ldr	x17, [x16, #1584]
  253ae8:	add	x16, x16, #0x630
  253aec:	br	x17

0000000000253af0 <recvmsg@plt>:
  253af0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253af4:	ldr	x17, [x16, #1592]
  253af8:	add	x16, x16, #0x638
  253afc:	br	x17

0000000000253b00 <__cmsg_nxthdr@plt>:
  253b00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b04:	ldr	x17, [x16, #1600]
  253b08:	add	x16, x16, #0x640
  253b0c:	br	x17

0000000000253b10 <cg_kill@plt>:
  253b10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b14:	ldr	x17, [x16, #1608]
  253b18:	add	x16, x16, #0x648
  253b1c:	br	x17

0000000000253b20 <now@plt>:
  253b20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b24:	ldr	x17, [x16, #1616]
  253b28:	add	x16, x16, #0x650
  253b2c:	br	x17

0000000000253b30 <event_reset_time@plt>:
  253b30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b34:	ldr	x17, [x16, #1624]
  253b38:	add	x16, x16, #0x658
  253b3c:	br	x17

0000000000253b40 <sd_event_exit@plt>:
  253b40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b44:	ldr	x17, [x16, #1632]
  253b48:	add	x16, x16, #0x660
  253b4c:	br	x17

0000000000253b50 <kill@plt>:
  253b50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b54:	ldr	x17, [x16, #1640]
  253b58:	add	x16, x16, #0x668
  253b5c:	br	x17

0000000000253b60 <internal_hashmap_iterate@plt>:
  253b60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b64:	ldr	x17, [x16, #1648]
  253b68:	add	x16, x16, #0x670
  253b6c:	br	x17

0000000000253b70 <internal_hashmap_get@plt>:
  253b70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b74:	ldr	x17, [x16, #1656]
  253b78:	add	x16, x16, #0x678
  253b7c:	br	x17

0000000000253b80 <sd_event_now@plt>:
  253b80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b84:	ldr	x17, [x16, #1664]
  253b88:	add	x16, x16, #0x680
  253b8c:	br	x17

0000000000253b90 <internal_hashmap_remove@plt>:
  253b90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253b94:	ldr	x17, [x16, #1672]
  253b98:	add	x16, x16, #0x688
  253b9c:	br	x17

0000000000253ba0 <gnu_dev_makedev@plt>:
  253ba0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ba4:	ldr	x17, [x16, #1680]
  253ba8:	add	x16, x16, #0x690
  253bac:	br	x17

0000000000253bb0 <sd_device_get_subsystem@plt>:
  253bb0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253bb4:	ldr	x17, [x16, #1688]
  253bb8:	add	x16, x16, #0x698
  253bbc:	br	x17

0000000000253bc0 <strcmp@plt>:
  253bc0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253bc4:	ldr	x17, [x16, #1696]
  253bc8:	add	x16, x16, #0x6a0
  253bcc:	br	x17

0000000000253bd0 <sd_device_get_devpath@plt>:
  253bd0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253bd4:	ldr	x17, [x16, #1704]
  253bd8:	add	x16, x16, #0x6a8
  253bdc:	br	x17

0000000000253be0 <sd_device_get_property_value@plt>:
  253be0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253be4:	ldr	x17, [x16, #1712]
  253be8:	add	x16, x16, #0x6b0
  253bec:	br	x17

0000000000253bf0 <sd_device_get_devnum@plt>:
  253bf0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253bf4:	ldr	x17, [x16, #1720]
  253bf8:	add	x16, x16, #0x6b8
  253bfc:	br	x17

0000000000253c00 <sd_device_get_ifindex@plt>:
  253c00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c04:	ldr	x17, [x16, #1728]
  253c08:	add	x16, x16, #0x6c0
  253c0c:	br	x17

0000000000253c10 <gnu_dev_major@plt>:
  253c10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c14:	ldr	x17, [x16, #1736]
  253c18:	add	x16, x16, #0x6c8
  253c1c:	br	x17

0000000000253c20 <sd_event_add_time@plt>:
  253c20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c24:	ldr	x17, [x16, #1744]
  253c28:	add	x16, x16, #0x6d0
  253c2c:	br	x17

0000000000253c30 <internal_hashmap_size@plt>:
  253c30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c34:	ldr	x17, [x16, #1752]
  253c38:	add	x16, x16, #0x6d8
  253c3c:	br	x17

0000000000253c40 <device_monitor_allow_unicast_sender@plt>:
  253c40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c44:	ldr	x17, [x16, #1760]
  253c48:	add	x16, x16, #0x6e0
  253c4c:	br	x17

0000000000253c50 <sd_device_ref@plt>:
  253c50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c54:	ldr	x17, [x16, #1768]
  253c58:	add	x16, x16, #0x6e8
  253c5c:	br	x17

0000000000253c60 <log_close@plt>:
  253c60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c64:	ldr	x17, [x16, #1776]
  253c68:	add	x16, x16, #0x6f0
  253c6c:	br	x17

0000000000253c70 <_exit@plt>:
  253c70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c74:	ldr	x17, [x16, #1784]
  253c78:	add	x16, x16, #0x6f8
  253c7c:	br	x17

0000000000253c80 <kill_and_sigcont@plt>:
  253c80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c84:	ldr	x17, [x16, #1792]
  253c88:	add	x16, x16, #0x700
  253c8c:	br	x17

0000000000253c90 <safe_fork_full@plt>:
  253c90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253c94:	ldr	x17, [x16, #1800]
  253c98:	add	x16, x16, #0x708
  253c9c:	br	x17

0000000000253ca0 <unsetenv@plt>:
  253ca0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ca4:	ldr	x17, [x16, #1808]
  253ca8:	add	x16, x16, #0x710
  253cac:	br	x17

0000000000253cb0 <sd_event_new@plt>:
  253cb0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253cb4:	ldr	x17, [x16, #1816]
  253cb8:	add	x16, x16, #0x718
  253cbc:	br	x17

0000000000253cc0 <device_monitor_disconnect@plt>:
  253cc0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253cc4:	ldr	x17, [x16, #1824]
  253cc8:	add	x16, x16, #0x720
  253ccc:	br	x17

0000000000253cd0 <sd_device_monitor_ref@plt>:
  253cd0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253cd4:	ldr	x17, [x16, #1832]
  253cd8:	add	x16, x16, #0x728
  253cdc:	br	x17

0000000000253ce0 <device_get_seqnum@plt>:
  253ce0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ce4:	ldr	x17, [x16, #1840]
  253ce8:	add	x16, x16, #0x730
  253cec:	br	x17

0000000000253cf0 <device_get_action@plt>:
  253cf0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253cf4:	ldr	x17, [x16, #1848]
  253cf8:	add	x16, x16, #0x738
  253cfc:	br	x17

0000000000253d00 <device_action_to_string@plt>:
  253d00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d04:	ldr	x17, [x16, #1856]
  253d08:	add	x16, x16, #0x740
  253d0c:	br	x17

0000000000253d10 <sd_netlink_ref@plt>:
  253d10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d14:	ldr	x17, [x16, #1864]
  253d18:	add	x16, x16, #0x748
  253d1c:	br	x17

0000000000253d20 <device_update_db@plt>:
  253d20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d24:	ldr	x17, [x16, #1872]
  253d28:	add	x16, x16, #0x750
  253d2c:	br	x17

0000000000253d30 <loop_write@plt>:
  253d30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d34:	ldr	x17, [x16, #1880]
  253d38:	add	x16, x16, #0x758
  253d3c:	br	x17

0000000000253d40 <device_for_action@plt>:
  253d40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d44:	ldr	x17, [x16, #1888]
  253d48:	add	x16, x16, #0x760
  253d4c:	br	x17

0000000000253d50 <sd_device_get_devtype@plt>:
  253d50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d54:	ldr	x17, [x16, #1896]
  253d58:	add	x16, x16, #0x768
  253d5c:	br	x17

0000000000253d60 <sd_device_get_parent@plt>:
  253d60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d64:	ldr	x17, [x16, #1904]
  253d68:	add	x16, x16, #0x770
  253d6c:	br	x17

0000000000253d70 <open64@plt>:
  253d70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d74:	ldr	x17, [x16, #1912]
  253d78:	add	x16, x16, #0x778
  253d7c:	br	x17

0000000000253d80 <flock@plt>:
  253d80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d84:	ldr	x17, [x16, #1920]
  253d88:	add	x16, x16, #0x780
  253d8c:	br	x17

0000000000253d90 <sd_device_get_syspath@plt>:
  253d90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253d94:	ldr	x17, [x16, #1928]
  253d98:	add	x16, x16, #0x788
  253d9c:	br	x17

0000000000253da0 <ioctl@plt>:
  253da0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253da4:	ldr	x17, [x16, #1936]
  253da8:	add	x16, x16, #0x790
  253dac:	br	x17

0000000000253db0 <close@plt>:
  253db0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253db4:	ldr	x17, [x16, #1944]
  253db8:	add	x16, x16, #0x798
  253dbc:	br	x17

0000000000253dc0 <sd_device_enumerator_new@plt>:
  253dc0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253dc4:	ldr	x17, [x16, #1952]
  253dc8:	add	x16, x16, #0x7a0
  253dcc:	br	x17

0000000000253dd0 <sd_device_enumerator_allow_uninitialized@plt>:
  253dd0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253dd4:	ldr	x17, [x16, #1960]
  253dd8:	add	x16, x16, #0x7a8
  253ddc:	br	x17

0000000000253de0 <sd_device_enumerator_add_match_parent@plt>:
  253de0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253de4:	ldr	x17, [x16, #1968]
  253de8:	add	x16, x16, #0x7b0
  253dec:	br	x17

0000000000253df0 <sd_device_enumerator_add_match_subsystem@plt>:
  253df0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253df4:	ldr	x17, [x16, #1976]
  253df8:	add	x16, x16, #0x7b8
  253dfc:	br	x17

0000000000253e00 <sd_device_enumerator_get_device_first@plt>:
  253e00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e04:	ldr	x17, [x16, #1984]
  253e08:	add	x16, x16, #0x7c0
  253e0c:	br	x17

0000000000253e10 <sd_device_enumerator_get_device_next@plt>:
  253e10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e14:	ldr	x17, [x16, #1992]
  253e18:	add	x16, x16, #0x7c8
  253e1c:	br	x17

0000000000253e20 <strcmp_ptr@plt>:
  253e20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e24:	ldr	x17, [x16, #2000]
  253e28:	add	x16, x16, #0x7d0
  253e2c:	br	x17

0000000000253e30 <sd_device_enumerator_unref@plt>:
  253e30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e34:	ldr	x17, [x16, #2008]
  253e38:	add	x16, x16, #0x7d8
  253e3c:	br	x17

0000000000253e40 <stpcpy@plt>:
  253e40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e44:	ldr	x17, [x16, #2016]
  253e48:	add	x16, x16, #0x7e0
  253e4c:	br	x17

0000000000253e50 <write_string_file_ts@plt>:
  253e50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e54:	ldr	x17, [x16, #2024]
  253e58:	add	x16, x16, #0x7e8
  253e5c:	br	x17

0000000000253e60 <device_shallow_clone@plt>:
  253e60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e64:	ldr	x17, [x16, #2032]
  253e68:	add	x16, x16, #0x7f0
  253e6c:	br	x17

0000000000253e70 <device_copy_properties@plt>:
  253e70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e74:	ldr	x17, [x16, #2040]
  253e78:	add	x16, x16, #0x7f8
  253e7c:	br	x17

0000000000253e80 <touch@plt>:
  253e80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e84:	ldr	x17, [x16, #2048]
  253e88:	add	x16, x16, #0x800
  253e8c:	br	x17

0000000000253e90 <trivial_hash_func@plt>:
  253e90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253e94:	ldr	x17, [x16, #2056]
  253e98:	add	x16, x16, #0x808
  253e9c:	br	x17

0000000000253ea0 <trivial_compare_func@plt>:
  253ea0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ea4:	ldr	x17, [x16, #2064]
  253ea8:	add	x16, x16, #0x810
  253eac:	br	x17

0000000000253eb0 <socket@plt>:
  253eb0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253eb4:	ldr	x17, [x16, #2072]
  253eb8:	add	x16, x16, #0x818
  253ebc:	br	x17

0000000000253ec0 <strnlen@plt>:
  253ec0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ec4:	ldr	x17, [x16, #2080]
  253ec8:	add	x16, x16, #0x820
  253ecc:	br	x17

0000000000253ed0 <bind@plt>:
  253ed0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ed4:	ldr	x17, [x16, #2088]
  253ed8:	add	x16, x16, #0x828
  253edc:	br	x17

0000000000253ee0 <sockaddr_un_unlink@plt>:
  253ee0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ee4:	ldr	x17, [x16, #2096]
  253ee8:	add	x16, x16, #0x830
  253eec:	br	x17

0000000000253ef0 <listen@plt>:
  253ef0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ef4:	ldr	x17, [x16, #2104]
  253ef8:	add	x16, x16, #0x838
  253efc:	br	x17

0000000000253f00 <sd_event_ref@plt>:
  253f00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f04:	ldr	x17, [x16, #2112]
  253f08:	add	x16, x16, #0x840
  253f0c:	br	x17

0000000000253f10 <log_assert_failed_return_realm@plt>:
  253f10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f14:	ldr	x17, [x16, #2120]
  253f18:	add	x16, x16, #0x848
  253f1c:	br	x17

0000000000253f20 <accept4@plt>:
  253f20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f24:	ldr	x17, [x16, #2128]
  253f28:	add	x16, x16, #0x850
  253f2c:	br	x17

0000000000253f30 <getpeercred@plt>:
  253f30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f34:	ldr	x17, [x16, #2136]
  253f38:	add	x16, x16, #0x858
  253f3c:	br	x17

0000000000253f40 <sd_event_source_set_enabled@plt>:
  253f40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f44:	ldr	x17, [x16, #2144]
  253f48:	add	x16, x16, #0x860
  253f4c:	br	x17

0000000000253f50 <strscpy@plt>:
  253f50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f54:	ldr	x17, [x16, #2152]
  253f58:	add	x16, x16, #0x868
  253f5c:	br	x17

0000000000253f60 <connect@plt>:
  253f60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f64:	ldr	x17, [x16, #2160]
  253f68:	add	x16, x16, #0x870
  253f6c:	br	x17

0000000000253f70 <send@plt>:
  253f70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f74:	ldr	x17, [x16, #2168]
  253f78:	add	x16, x16, #0x878
  253f7c:	br	x17

0000000000253f80 <clock_boottime_or_monotonic@plt>:
  253f80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f84:	ldr	x17, [x16, #2176]
  253f88:	add	x16, x16, #0x880
  253f8c:	br	x17

0000000000253f90 <sd_event_source_get_event@plt>:
  253f90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253f94:	ldr	x17, [x16, #2184]
  253f98:	add	x16, x16, #0x888
  253f9c:	br	x17

0000000000253fa0 <next_datagram_size_fd@plt>:
  253fa0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253fa4:	ldr	x17, [x16, #2192]
  253fa8:	add	x16, x16, #0x890
  253fac:	br	x17

0000000000253fb0 <cmsg_close_all@plt>:
  253fb0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253fb4:	ldr	x17, [x16, #2200]
  253fb8:	add	x16, x16, #0x898
  253fbc:	br	x17

0000000000253fc0 <util_replace_whitespace@plt>:
  253fc0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253fc4:	ldr	x17, [x16, #2208]
  253fc8:	add	x16, x16, #0x8a0
  253fcc:	br	x17

0000000000253fd0 <strnscpy@plt>:
  253fd0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253fd4:	ldr	x17, [x16, #2216]
  253fd8:	add	x16, x16, #0x8a8
  253fdc:	br	x17

0000000000253fe0 <sd_device_get_sysnum@plt>:
  253fe0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253fe4:	ldr	x17, [x16, #2224]
  253fe8:	add	x16, x16, #0x8b0
  253fec:	br	x17

0000000000253ff0 <sd_device_get_devlink_first@plt>:
  253ff0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  253ff4:	ldr	x17, [x16, #2232]
  253ff8:	add	x16, x16, #0x8b8
  253ffc:	br	x17

0000000000254000 <strpcpyl@plt>:
  254000:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254004:	ldr	x17, [x16, #2240]
  254008:	add	x16, x16, #0x8c0
  25400c:	br	x17

0000000000254010 <sd_device_get_devlink_next@plt>:
  254010:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254014:	ldr	x17, [x16, #2248]
  254018:	add	x16, x16, #0x8c8
  25401c:	br	x17

0000000000254020 <strpcpy@plt>:
  254020:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254024:	ldr	x17, [x16, #2256]
  254028:	add	x16, x16, #0x8d0
  25402c:	br	x17

0000000000254030 <sd_device_get_driver@plt>:
  254030:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254034:	ldr	x17, [x16, #2264]
  254038:	add	x16, x16, #0x8d8
  25403c:	br	x17

0000000000254040 <util_resolve_subsys_kernel@plt>:
  254040:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254044:	ldr	x17, [x16, #2272]
  254048:	add	x16, x16, #0x8e0
  25404c:	br	x17

0000000000254050 <gnu_dev_minor@plt>:
  254050:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254054:	ldr	x17, [x16, #2280]
  254058:	add	x16, x16, #0x8e8
  25405c:	br	x17

0000000000254060 <strpcpyf@plt>:
  254060:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254064:	ldr	x17, [x16, #2288]
  254068:	add	x16, x16, #0x8f0
  25406c:	br	x17

0000000000254070 <sd_device_get_sysattr_value@plt>:
  254070:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254074:	ldr	x17, [x16, #2296]
  254078:	add	x16, x16, #0x8f8
  25407c:	br	x17

0000000000254080 <delete_trailing_chars@plt>:
  254080:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254084:	ldr	x17, [x16, #2304]
  254088:	add	x16, x16, #0x900
  25408c:	br	x17

0000000000254090 <util_replace_chars@plt>:
  254090:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254094:	ldr	x17, [x16, #2312]
  254098:	add	x16, x16, #0x908
  25409c:	br	x17

00000000002540a0 <strnpcpy@plt>:
  2540a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2540a4:	ldr	x17, [x16, #2320]
  2540a8:	add	x16, x16, #0x910
  2540ac:	br	x17

00000000002540b0 <endswith@plt>:
  2540b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2540b4:	ldr	x17, [x16, #2328]
  2540b8:	add	x16, x16, #0x918
  2540bc:	br	x17

00000000002540c0 <memcpy@plt>:
  2540c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2540c4:	ldr	x17, [x16, #2336]
  2540c8:	add	x16, x16, #0x920
  2540cc:	br	x17

00000000002540d0 <pipe2@plt>:
  2540d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2540d4:	ldr	x17, [x16, #2344]
  2540d8:	add	x16, x16, #0x928
  2540dc:	br	x17

00000000002540e0 <strv_split_full@plt>:
  2540e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2540e4:	ldr	x17, [x16, #2352]
  2540e8:	add	x16, x16, #0x930
  2540ec:	br	x17

00000000002540f0 <path_is_absolute@plt>:
  2540f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2540f4:	ldr	x17, [x16, #2360]
  2540f8:	add	x16, x16, #0x938
  2540fc:	br	x17

0000000000254100 <path_join_internal@plt>:
  254100:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254104:	ldr	x17, [x16, #2368]
  254108:	add	x16, x16, #0x940
  25410c:	br	x17

0000000000254110 <device_get_properties_strv@plt>:
  254110:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254114:	ldr	x17, [x16, #2376]
  254118:	add	x16, x16, #0x948
  25411c:	br	x17

0000000000254120 <close_all_fds@plt>:
  254120:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254124:	ldr	x17, [x16, #2384]
  254128:	add	x16, x16, #0x950
  25412c:	br	x17

0000000000254130 <rlimit_nofile_safe@plt>:
  254130:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254134:	ldr	x17, [x16, #2392]
  254138:	add	x16, x16, #0x958
  25413c:	br	x17

0000000000254140 <execve@plt>:
  254140:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254144:	ldr	x17, [x16, #2400]
  254148:	add	x16, x16, #0x960
  25414c:	br	x17

0000000000254150 <strv_free@plt>:
  254150:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254154:	ldr	x17, [x16, #2408]
  254158:	add	x16, x16, #0x968
  25415c:	br	x17

0000000000254160 <sd_event_add_child@plt>:
  254160:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254164:	ldr	x17, [x16, #2416]
  254168:	add	x16, x16, #0x970
  25416c:	br	x17

0000000000254170 <device_clone_with_db@plt>:
  254170:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254174:	ldr	x17, [x16, #2424]
  254178:	add	x16, x16, #0x978
  25417c:	br	x17

0000000000254180 <device_set_is_initialized@plt>:
  254180:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254184:	ldr	x17, [x16, #2432]
  254188:	add	x16, x16, #0x980
  25418c:	br	x17

0000000000254190 <device_read_db_internal@plt>:
  254190:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254194:	ldr	x17, [x16, #2440]
  254198:	add	x16, x16, #0x988
  25419c:	br	x17

00000000002541a0 <device_add_property@plt>:
  2541a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2541a4:	ldr	x17, [x16, #2448]
  2541a8:	add	x16, x16, #0x990
  2541ac:	br	x17

00000000002541b0 <rtnl_set_link_name@plt>:
  2541b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2541b4:	ldr	x17, [x16, #2456]
  2541b8:	add	x16, x16, #0x998
  2541bc:	br	x17

00000000002541c0 <device_rename@plt>:
  2541c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2541c4:	ldr	x17, [x16, #2464]
  2541c8:	add	x16, x16, #0x9a0
  2541cc:	br	x17

00000000002541d0 <uid_is_valid@plt>:
  2541d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2541d4:	ldr	x17, [x16, #2472]
  2541d8:	add	x16, x16, #0x9a8
  2541dc:	br	x17

00000000002541e0 <device_get_devnode_uid@plt>:
  2541e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2541e4:	ldr	x17, [x16, #2480]
  2541e8:	add	x16, x16, #0x9b0
  2541ec:	br	x17

00000000002541f0 <device_get_devnode_gid@plt>:
  2541f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2541f4:	ldr	x17, [x16, #2488]
  2541f8:	add	x16, x16, #0x9b8
  2541fc:	br	x17

0000000000254200 <device_get_devnode_mode@plt>:
  254200:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254204:	ldr	x17, [x16, #2496]
  254208:	add	x16, x16, #0x9c0
  25420c:	br	x17

0000000000254210 <format_timespan@plt>:
  254210:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254214:	ldr	x17, [x16, #2504]
  254218:	add	x16, x16, #0x9c8
  25421c:	br	x17

0000000000254220 <usleep@plt>:
  254220:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254224:	ldr	x17, [x16, #2512]
  254228:	add	x16, x16, #0x9d0
  25422c:	br	x17

0000000000254230 <strspn@plt>:
  254230:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254234:	ldr	x17, [x16, #2520]
  254238:	add	x16, x16, #0x9d8
  25423c:	br	x17

0000000000254240 <strv_split_newlines@plt>:
  254240:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254244:	ldr	x17, [x16, #2528]
  254248:	add	x16, x16, #0x9e0
  25424c:	br	x17

0000000000254250 <device_get_id_filename@plt>:
  254250:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254254:	ldr	x17, [x16, #2536]
  254258:	add	x16, x16, #0x9e8
  25425c:	br	x17

0000000000254260 <util_path_encode@plt>:
  254260:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254264:	ldr	x17, [x16, #2544]
  254268:	add	x16, x16, #0x9f0
  25426c:	br	x17

0000000000254270 <rmdir@plt>:
  254270:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254274:	ldr	x17, [x16, #2552]
  254278:	add	x16, x16, #0x9f8
  25427c:	br	x17

0000000000254280 <rmdir_parents@plt>:
  254280:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254284:	ldr	x17, [x16, #2560]
  254288:	add	x16, x16, #0xa00
  25428c:	br	x17

0000000000254290 <mkdir_parents@plt>:
  254290:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254294:	ldr	x17, [x16, #2568]
  254298:	add	x16, x16, #0xa08
  25429c:	br	x17

00000000002542a0 <chmod_and_chown@plt>:
  2542a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2542a4:	ldr	x17, [x16, #2576]
  2542a8:	add	x16, x16, #0xa10
  2542ac:	br	x17

00000000002542b0 <mac_smack_apply@plt>:
  2542b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2542b4:	ldr	x17, [x16, #2584]
  2542b8:	add	x16, x16, #0xa18
  2542bc:	br	x17

00000000002542c0 <mac_selinux_apply@plt>:
  2542c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2542c4:	ldr	x17, [x16, #2592]
  2542c8:	add	x16, x16, #0xa20
  2542cc:	br	x17

00000000002542d0 <mac_selinux_fix@plt>:
  2542d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2542d4:	ldr	x17, [x16, #2600]
  2542d8:	add	x16, x16, #0xa28
  2542dc:	br	x17

00000000002542e0 <utimensat@plt>:
  2542e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2542e4:	ldr	x17, [x16, #2608]
  2542e8:	add	x16, x16, #0xa30
  2542ec:	br	x17

00000000002542f0 <snprintf@plt>:
  2542f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2542f4:	ldr	x17, [x16, #2616]
  2542f8:	add	x16, x16, #0xa38
  2542fc:	br	x17

0000000000254300 <dirname_malloc@plt>:
  254300:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254304:	ldr	x17, [x16, #2624]
  254308:	add	x16, x16, #0xa40
  25430c:	br	x17

0000000000254310 <path_make_relative@plt>:
  254310:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254314:	ldr	x17, [x16, #2632]
  254318:	add	x16, x16, #0xa48
  25431c:	br	x17

0000000000254320 <mac_selinux_create_file_clear@plt>:
  254320:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254324:	ldr	x17, [x16, #2640]
  254328:	add	x16, x16, #0xa50
  25432c:	br	x17

0000000000254330 <mkdir_parents_label@plt>:
  254330:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254334:	ldr	x17, [x16, #2648]
  254338:	add	x16, x16, #0xa58
  25433c:	br	x17

0000000000254340 <mac_selinux_create_file_prepare@plt>:
  254340:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254344:	ldr	x17, [x16, #2656]
  254348:	add	x16, x16, #0xa60
  25434c:	br	x17

0000000000254350 <symlink@plt>:
  254350:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254354:	ldr	x17, [x16, #2664]
  254358:	add	x16, x16, #0xa68
  25435c:	br	x17

0000000000254360 <readlink_malloc@plt>:
  254360:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254364:	ldr	x17, [x16, #2672]
  254368:	add	x16, x16, #0xa70
  25436c:	br	x17

0000000000254370 <rename@plt>:
  254370:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254374:	ldr	x17, [x16, #2680]
  254378:	add	x16, x16, #0xa78
  25437c:	br	x17

0000000000254380 <label_fix@plt>:
  254380:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254384:	ldr	x17, [x16, #2688]
  254388:	add	x16, x16, #0xa80
  25438c:	br	x17

0000000000254390 <device_get_devlink_priority@plt>:
  254390:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254394:	ldr	x17, [x16, #2696]
  254398:	add	x16, x16, #0xa88
  25439c:	br	x17

00000000002543a0 <opendir@plt>:
  2543a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2543a4:	ldr	x17, [x16, #2704]
  2543a8:	add	x16, x16, #0xa90
  2543ac:	br	x17

00000000002543b0 <readdir64@plt>:
  2543b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2543b4:	ldr	x17, [x16, #2712]
  2543b8:	add	x16, x16, #0xa98
  2543bc:	br	x17

00000000002543c0 <sd_device_new_from_device_id@plt>:
  2543c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2543c4:	ldr	x17, [x16, #2720]
  2543c8:	add	x16, x16, #0xaa0
  2543cc:	br	x17

00000000002543d0 <free_and_strdup@plt>:
  2543d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2543d4:	ldr	x17, [x16, #2728]
  2543d8:	add	x16, x16, #0xaa8
  2543dc:	br	x17

00000000002543e0 <closedir@plt>:
  2543e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2543e4:	ldr	x17, [x16, #2736]
  2543e8:	add	x16, x16, #0xab0
  2543ec:	br	x17

00000000002543f0 <conf_files_list_strv@plt>:
  2543f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2543f4:	ldr	x17, [x16, #2744]
  2543f8:	add	x16, x16, #0xab8
  2543fc:	br	x17

0000000000254400 <paths_check_timestamp@plt>:
  254400:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254404:	ldr	x17, [x16, #2752]
  254408:	add	x16, x16, #0xac0
  25440c:	br	x17

0000000000254410 <fopen64@plt>:
  254410:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254414:	ldr	x17, [x16, #2760]
  254418:	add	x16, x16, #0xac8
  25441c:	br	x17

0000000000254420 <fileno@plt>:
  254420:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254424:	ldr	x17, [x16, #2768]
  254428:	add	x16, x16, #0xad0
  25442c:	br	x17

0000000000254430 <fd_warn_permissions@plt>:
  254430:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254434:	ldr	x17, [x16, #2776]
  254438:	add	x16, x16, #0xad8
  25443c:	br	x17

0000000000254440 <null_or_empty_fd@plt>:
  254440:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254444:	ldr	x17, [x16, #2784]
  254448:	add	x16, x16, #0xae0
  25444c:	br	x17

0000000000254450 <strextend_with_separator@plt>:
  254450:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254454:	ldr	x17, [x16, #2792]
  254458:	add	x16, x16, #0xae8
  25445c:	br	x17

0000000000254460 <strv_extend@plt>:
  254460:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254464:	ldr	x17, [x16, #2800]
  254468:	add	x16, x16, #0xaf0
  25446c:	br	x17

0000000000254470 <safe_fclose@plt>:
  254470:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254474:	ldr	x17, [x16, #2808]
  254478:	add	x16, x16, #0xaf8
  25447c:	br	x17

0000000000254480 <read_line_full@plt>:
  254480:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254484:	ldr	x17, [x16, #2816]
  254488:	add	x16, x16, #0xb00
  25448c:	br	x17

0000000000254490 <memchr@plt>:
  254490:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254494:	ldr	x17, [x16, #2824]
  254498:	add	x16, x16, #0xb08
  25449c:	br	x17

00000000002544a0 <strv_find@plt>:
  2544a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2544a4:	ldr	x17, [x16, #2832]
  2544a8:	add	x16, x16, #0xb10
  2544ac:	br	x17

00000000002544b0 <parse_mode@plt>:
  2544b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2544b4:	ldr	x17, [x16, #2840]
  2544b8:	add	x16, x16, #0xb18
  2544bc:	br	x17

00000000002544c0 <strstr@plt>:
  2544c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2544c4:	ldr	x17, [x16, #2848]
  2544c8:	add	x16, x16, #0xb20
  2544cc:	br	x17

00000000002544d0 <parse_uid@plt>:
  2544d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2544d4:	ldr	x17, [x16, #2856]
  2544d8:	add	x16, x16, #0xb28
  2544dc:	br	x17

00000000002544e0 <safe_atoi@plt>:
  2544e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2544e4:	ldr	x17, [x16, #2864]
  2544e8:	add	x16, x16, #0xb30
  2544ec:	br	x17

00000000002544f0 <__ctype_b_loc@plt>:
  2544f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2544f4:	ldr	x17, [x16, #2872]
  2544f8:	add	x16, x16, #0xb38
  2544fc:	br	x17

0000000000254500 <get_user_creds@plt>:
  254500:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254504:	ldr	x17, [x16, #2880]
  254508:	add	x16, x16, #0xb40
  25450c:	br	x17

0000000000254510 <get_group_creds@plt>:
  254510:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254514:	ldr	x17, [x16, #2888]
  254518:	add	x16, x16, #0xb48
  25451c:	br	x17

0000000000254520 <strpbrk@plt>:
  254520:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254524:	ldr	x17, [x16, #2896]
  254528:	add	x16, x16, #0xb50
  25452c:	br	x17

0000000000254530 <internal_ordered_hashmap_ensure_allocated@plt>:
  254530:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254534:	ldr	x17, [x16, #2904]
  254538:	add	x16, x16, #0xb58
  25453c:	br	x17

0000000000254540 <sd_device_get_tag_first@plt>:
  254540:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254544:	ldr	x17, [x16, #2912]
  254548:	add	x16, x16, #0xb60
  25454c:	br	x17

0000000000254550 <sd_device_get_tag_next@plt>:
  254550:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254554:	ldr	x17, [x16, #2920]
  254558:	add	x16, x16, #0xb68
  25455c:	br	x17

0000000000254560 <sysctl_normalize@plt>:
  254560:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254564:	ldr	x17, [x16, #2928]
  254568:	add	x16, x16, #0xb70
  25456c:	br	x17

0000000000254570 <device_set_devlink_priority@plt>:
  254570:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254574:	ldr	x17, [x16, #2936]
  254578:	add	x16, x16, #0xb78
  25457c:	br	x17

0000000000254580 <sysctl_read@plt>:
  254580:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254584:	ldr	x17, [x16, #2944]
  254588:	add	x16, x16, #0xb80
  25458c:	br	x17

0000000000254590 <proc_cmdline_get_key@plt>:
  254590:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254594:	ldr	x17, [x16, #2952]
  254598:	add	x16, x16, #0xb88
  25459c:	br	x17

00000000002545a0 <device_set_db_persist@plt>:
  2545a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2545a4:	ldr	x17, [x16, #2960]
  2545a8:	add	x16, x16, #0xb90
  2545ac:	br	x17

00000000002545b0 <memset@plt>:
  2545b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2545b4:	ldr	x17, [x16, #2968]
  2545b8:	add	x16, x16, #0xb98
  2545bc:	br	x17

00000000002545c0 <device_cleanup_devlinks@plt>:
  2545c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2545c4:	ldr	x17, [x16, #2976]
  2545c8:	add	x16, x16, #0xba0
  2545cc:	br	x17

00000000002545d0 <detect_virtualization@plt>:
  2545d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2545d4:	ldr	x17, [x16, #2984]
  2545d8:	add	x16, x16, #0xba8
  2545dc:	br	x17

00000000002545e0 <virtualization_to_string@plt>:
  2545e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2545e4:	ldr	x17, [x16, #2992]
  2545e8:	add	x16, x16, #0xbb0
  2545ec:	br	x17

00000000002545f0 <device_cleanup_tags@plt>:
  2545f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2545f4:	ldr	x17, [x16, #3000]
  2545f8:	add	x16, x16, #0xbb8
  2545fc:	br	x17

0000000000254600 <strscpyl@plt>:
  254600:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254604:	ldr	x17, [x16, #3008]
  254608:	add	x16, x16, #0xbc0
  25460c:	br	x17

0000000000254610 <strstrip@plt>:
  254610:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254614:	ldr	x17, [x16, #3016]
  254618:	add	x16, x16, #0xbc8
  25461c:	br	x17

0000000000254620 <sysctl_write@plt>:
  254620:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254624:	ldr	x17, [x16, #3024]
  254628:	add	x16, x16, #0xbd0
  25462c:	br	x17

0000000000254630 <uname_architecture@plt>:
  254630:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254634:	ldr	x17, [x16, #3032]
  254638:	add	x16, x16, #0xbd8
  25463c:	br	x17

0000000000254640 <architecture_to_string@plt>:
  254640:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254644:	ldr	x17, [x16, #3040]
  254648:	add	x16, x16, #0xbe0
  25464c:	br	x17

0000000000254650 <device_remove_tag@plt>:
  254650:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254654:	ldr	x17, [x16, #3048]
  254658:	add	x16, x16, #0xbe8
  25465c:	br	x17

0000000000254660 <device_add_tag@plt>:
  254660:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254664:	ldr	x17, [x16, #3056]
  254668:	add	x16, x16, #0xbf0
  25466c:	br	x17

0000000000254670 <device_add_devlink@plt>:
  254670:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254674:	ldr	x17, [x16, #3064]
  254678:	add	x16, x16, #0xbf8
  25467c:	br	x17

0000000000254680 <fnmatch@plt>:
  254680:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254684:	ldr	x17, [x16, #3072]
  254688:	add	x16, x16, #0xc00
  25468c:	br	x17

0000000000254690 <dirfd@plt>:
  254690:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254694:	ldr	x17, [x16, #3080]
  254698:	add	x16, x16, #0xc08
  25469c:	br	x17

00000000002546a0 <faccessat@plt>:
  2546a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2546a4:	ldr	x17, [x16, #3088]
  2546a8:	add	x16, x16, #0xc10
  2546ac:	br	x17

00000000002546b0 <strcpy@plt>:
  2546b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2546b4:	ldr	x17, [x16, #3096]
  2546b8:	add	x16, x16, #0xc18
  2546bc:	br	x17

00000000002546c0 <sd_device_get_property_first@plt>:
  2546c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2546c4:	ldr	x17, [x16, #3104]
  2546c8:	add	x16, x16, #0xc20
  2546cc:	br	x17

00000000002546d0 <sd_device_get_property_next@plt>:
  2546d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2546d4:	ldr	x17, [x16, #3112]
  2546d8:	add	x16, x16, #0xc28
  2546dc:	br	x17

00000000002546e0 <internal_hashmap_clear@plt>:
  2546e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2546e4:	ldr	x17, [x16, #3120]
  2546e8:	add	x16, x16, #0xc30
  2546ec:	br	x17

00000000002546f0 <mkdir_p@plt>:
  2546f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2546f4:	ldr	x17, [x16, #3128]
  2546f8:	add	x16, x16, #0xc38
  2546fc:	br	x17

0000000000254700 <xescape_full@plt>:
  254700:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254704:	ldr	x17, [x16, #3136]
  254708:	add	x16, x16, #0xc40
  25470c:	br	x17

0000000000254710 <inotify_init1@plt>:
  254710:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254714:	ldr	x17, [x16, #3144]
  254718:	add	x16, x16, #0xc48
  25471c:	br	x17

0000000000254720 <unlinkat@plt>:
  254720:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254724:	ldr	x17, [x16, #3152]
  254728:	add	x16, x16, #0xc50
  25472c:	br	x17

0000000000254730 <readlinkat_malloc@plt>:
  254730:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254734:	ldr	x17, [x16, #3160]
  254738:	add	x16, x16, #0xc58
  25473c:	br	x17

0000000000254740 <inotify_add_watch@plt>:
  254740:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254744:	ldr	x17, [x16, #3168]
  254748:	add	x16, x16, #0xc60
  25474c:	br	x17

0000000000254750 <device_set_watch_handle@plt>:
  254750:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254754:	ldr	x17, [x16, #3176]
  254758:	add	x16, x16, #0xc68
  25475c:	br	x17

0000000000254760 <device_get_watch_handle@plt>:
  254760:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254764:	ldr	x17, [x16, #3184]
  254768:	add	x16, x16, #0xc70
  25476c:	br	x17

0000000000254770 <inotify_rm_watch@plt>:
  254770:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254774:	ldr	x17, [x16, #3192]
  254778:	add	x16, x16, #0xc78
  25477c:	br	x17

0000000000254780 <fprintf@plt>:
  254780:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254784:	ldr	x17, [x16, #3200]
  254788:	add	x16, x16, #0xc80
  25478c:	br	x17

0000000000254790 <strcspn@plt>:
  254790:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254794:	ldr	x17, [x16, #3208]
  254798:	add	x16, x16, #0xc88
  25479c:	br	x17

00000000002547a0 <strv_length@plt>:
  2547a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2547a4:	ldr	x17, [x16, #3216]
  2547a8:	add	x16, x16, #0xc90
  2547ac:	br	x17

00000000002547b0 <strjoin_real@plt>:
  2547b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2547b4:	ldr	x17, [x16, #3224]
  2547b8:	add	x16, x16, #0xc98
  2547bc:	br	x17

00000000002547c0 <sd_hwdb_seek@plt>:
  2547c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2547c4:	ldr	x17, [x16, #3232]
  2547c8:	add	x16, x16, #0xca0
  2547cc:	br	x17

00000000002547d0 <sd_hwdb_enumerate@plt>:
  2547d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2547d4:	ldr	x17, [x16, #3240]
  2547d8:	add	x16, x16, #0xca8
  2547dc:	br	x17

00000000002547e0 <sd_hwdb_new@plt>:
  2547e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2547e4:	ldr	x17, [x16, #3248]
  2547e8:	add	x16, x16, #0xcb0
  2547ec:	br	x17

00000000002547f0 <sd_hwdb_unref@plt>:
  2547f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2547f4:	ldr	x17, [x16, #3256]
  2547f8:	add	x16, x16, #0xcb8
  2547fc:	br	x17

0000000000254800 <hwdb_validate@plt>:
  254800:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254804:	ldr	x17, [x16, #3264]
  254808:	add	x16, x16, #0xcc0
  25480c:	br	x17

0000000000254810 <safe_atou16_full@plt>:
  254810:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254814:	ldr	x17, [x16, #3272]
  254818:	add	x16, x16, #0xcc8
  25481c:	br	x17

0000000000254820 <sd_device_get_parent_with_subsystem_devtype@plt>:
  254820:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254824:	ldr	x17, [x16, #3280]
  254828:	add	x16, x16, #0xcd0
  25482c:	br	x17

0000000000254830 <strrchr@plt>:
  254830:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254834:	ldr	x17, [x16, #3288]
  254838:	add	x16, x16, #0xcd8
  25483c:	br	x17

0000000000254840 <strtoul@plt>:
  254840:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254844:	ldr	x17, [x16, #3296]
  254848:	add	x16, x16, #0xce0
  25484c:	br	x17

0000000000254850 <sd_device_set_sysattr_value@plt>:
  254850:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254854:	ldr	x17, [x16, #3304]
  254858:	add	x16, x16, #0xce8
  25485c:	br	x17

0000000000254860 <strtol@plt>:
  254860:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254864:	ldr	x17, [x16, #3312]
  254868:	add	x16, x16, #0xcf0
  25486c:	br	x17

0000000000254870 <__isoc99_sscanf@plt>:
  254870:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254874:	ldr	x17, [x16, #3320]
  254878:	add	x16, x16, #0xcf8
  25487c:	br	x17

0000000000254880 <ascii_strlower@plt>:
  254880:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254884:	ldr	x17, [x16, #3328]
  254888:	add	x16, x16, #0xd00
  25488c:	br	x17

0000000000254890 <chase_symlinks@plt>:
  254890:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254894:	ldr	x17, [x16, #3336]
  254898:	add	x16, x16, #0xd08
  25489c:	br	x17

00000000002548a0 <sd_device_new_from_syspath@plt>:
  2548a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2548a4:	ldr	x17, [x16, #3344]
  2548a8:	add	x16, x16, #0xd10
  2548ac:	br	x17

00000000002548b0 <strncpy@plt>:
  2548b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2548b4:	ldr	x17, [x16, #3352]
  2548b8:	add	x16, x16, #0xd18
  2548bc:	br	x17

00000000002548c0 <sd_device_new_from_subsystem_sysname@plt>:
  2548c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2548c4:	ldr	x17, [x16, #3360]
  2548c8:	add	x16, x16, #0xd20
  2548cc:	br	x17

00000000002548d0 <read_one_line_file@plt>:
  2548d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2548d4:	ldr	x17, [x16, #3368]
  2548d8:	add	x16, x16, #0xd28
  2548dc:	br	x17

00000000002548e0 <rewinddir@plt>:
  2548e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2548e4:	ldr	x17, [x16, #3376]
  2548e8:	add	x16, x16, #0xd30
  2548ec:	br	x17

00000000002548f0 <safe_atollu@plt>:
  2548f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2548f4:	ldr	x17, [x16, #3384]
  2548f8:	add	x16, x16, #0xd38
  2548fc:	br	x17

0000000000254900 <vasprintf@plt>:
  254900:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254904:	ldr	x17, [x16, #3392]
  254908:	add	x16, x16, #0xd40
  25490c:	br	x17

0000000000254910 <exit@plt>:
  254910:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254914:	ldr	x17, [x16, #3400]
  254918:	add	x16, x16, #0xd48
  25491c:	br	x17

0000000000254920 <udev_util_encode_string@plt>:
  254920:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254924:	ldr	x17, [x16, #3408]
  254928:	add	x16, x16, #0xd50
  25492c:	br	x17

0000000000254930 <sprintf@plt>:
  254930:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254934:	ldr	x17, [x16, #3416]
  254938:	add	x16, x16, #0xd58
  25493c:	br	x17

0000000000254940 <calloc@plt>:
  254940:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254944:	ldr	x17, [x16, #3424]
  254948:	add	x16, x16, #0xd60
  25494c:	br	x17

0000000000254950 <config_parse@plt>:
  254950:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254954:	ldr	x17, [x16, #3432]
  254958:	add	x16, x16, #0xd68
  25495c:	br	x17

0000000000254960 <condition_test_list@plt>:
  254960:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254964:	ldr	x17, [x16, #3440]
  254968:	add	x16, x16, #0xd70
  25496c:	br	x17

0000000000254970 <proc_cmdline_get_bool@plt>:
  254970:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254974:	ldr	x17, [x16, #3448]
  254978:	add	x16, x16, #0xd78
  25497c:	br	x17

0000000000254980 <ethtool_set_glinksettings@plt>:
  254980:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254984:	ldr	x17, [x16, #3456]
  254988:	add	x16, x16, #0xd80
  25498c:	br	x17

0000000000254990 <ethtool_set_wol@plt>:
  254990:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254994:	ldr	x17, [x16, #3464]
  254998:	add	x16, x16, #0xd88
  25499c:	br	x17

00000000002549a0 <wol_to_string@plt>:
  2549a0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2549a4:	ldr	x17, [x16, #3472]
  2549a8:	add	x16, x16, #0xd90
  2549ac:	br	x17

00000000002549b0 <ethtool_set_features@plt>:
  2549b0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2549b4:	ldr	x17, [x16, #3480]
  2549b8:	add	x16, x16, #0xd98
  2549bc:	br	x17

00000000002549c0 <ethtool_set_channels@plt>:
  2549c0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2549c4:	ldr	x17, [x16, #3488]
  2549c8:	add	x16, x16, #0xda0
  2549cc:	br	x17

00000000002549d0 <ethtool_set_nic_buffer_size@plt>:
  2549d0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2549d4:	ldr	x17, [x16, #3496]
  2549d8:	add	x16, x16, #0xda8
  2549dc:	br	x17

00000000002549e0 <port_to_string@plt>:
  2549e0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2549e4:	ldr	x17, [x16, #3504]
  2549e8:	add	x16, x16, #0xdb0
  2549ec:	br	x17

00000000002549f0 <memeqzero@plt>:
  2549f0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  2549f4:	ldr	x17, [x16, #3512]
  2549f8:	add	x16, x16, #0xdb8
  2549fc:	br	x17

0000000000254a00 <ethtool_set_speed@plt>:
  254a00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a04:	ldr	x17, [x16, #3520]
  254a08:	add	x16, x16, #0xdc0
  254a0c:	br	x17

0000000000254a10 <duplex_to_string@plt>:
  254a10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a14:	ldr	x17, [x16, #3528]
  254a18:	add	x16, x16, #0xdc8
  254a1c:	br	x17

0000000000254a20 <rtnl_set_link_properties@plt>:
  254a20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a24:	ldr	x17, [x16, #3536]
  254a28:	add	x16, x16, #0xdd0
  254a2c:	br	x17

0000000000254a30 <random_bytes@plt>:
  254a30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a34:	ldr	x17, [x16, #3544]
  254a38:	add	x16, x16, #0xdd8
  254a3c:	br	x17

0000000000254a40 <ethtool_get_driver@plt>:
  254a40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a44:	ldr	x17, [x16, #3552]
  254a48:	add	x16, x16, #0xde0
  254a4c:	br	x17

0000000000254a50 <string_table_lookup@plt>:
  254a50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a54:	ldr	x17, [x16, #3560]
  254a58:	add	x16, x16, #0xde8
  254a5c:	br	x17

0000000000254a60 <log_syntax_internal@plt>:
  254a60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a64:	ldr	x17, [x16, #3568]
  254a68:	add	x16, x16, #0xdf0
  254a6c:	br	x17

0000000000254a70 <split@plt>:
  254a70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a74:	ldr	x17, [x16, #3576]
  254a78:	add	x16, x16, #0xdf8
  254a7c:	br	x17

0000000000254a80 <realloc@plt>:
  254a80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a84:	ldr	x17, [x16, #3584]
  254a88:	add	x16, x16, #0xe00
  254a8c:	br	x17

0000000000254a90 <condition_free_list_type@plt>:
  254a90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254a94:	ldr	x17, [x16, #3592]
  254a98:	add	x16, x16, #0xe08
  254a9c:	br	x17

0000000000254aa0 <getenv@plt>:
  254aa0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254aa4:	ldr	x17, [x16, #3600]
  254aa8:	add	x16, x16, #0xe10
  254aac:	br	x17

0000000000254ab0 <module_load_and_warn@plt>:
  254ab0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254ab4:	ldr	x17, [x16, #3608]
  254ab8:	add	x16, x16, #0xe18
  254abc:	br	x17

0000000000254ac0 <kmod_new@plt>:
  254ac0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254ac4:	ldr	x17, [x16, #3616]
  254ac8:	add	x16, x16, #0xe20
  254acc:	br	x17

0000000000254ad0 <kmod_set_log_fn@plt>:
  254ad0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254ad4:	ldr	x17, [x16, #3624]
  254ad8:	add	x16, x16, #0xe28
  254adc:	br	x17

0000000000254ae0 <kmod_load_resources@plt>:
  254ae0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254ae4:	ldr	x17, [x16, #3632]
  254ae8:	add	x16, x16, #0xe30
  254aec:	br	x17

0000000000254af0 <kmod_unref@plt>:
  254af0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254af4:	ldr	x17, [x16, #3640]
  254af8:	add	x16, x16, #0xe38
  254afc:	br	x17

0000000000254b00 <kmod_validate_resources@plt>:
  254b00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b04:	ldr	x17, [x16, #3648]
  254b08:	add	x16, x16, #0xe40
  254b0c:	br	x17

0000000000254b10 <log_internalv_realm@plt>:
  254b10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b14:	ldr	x17, [x16, #3656]
  254b18:	add	x16, x16, #0xe48
  254b1c:	br	x17

0000000000254b20 <blkid_new_probe@plt>:
  254b20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b24:	ldr	x17, [x16, #3664]
  254b28:	add	x16, x16, #0xe50
  254b2c:	br	x17

0000000000254b30 <blkid_probe_set_superblocks_flags@plt>:
  254b30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b34:	ldr	x17, [x16, #3672]
  254b38:	add	x16, x16, #0xe58
  254b3c:	br	x17

0000000000254b40 <blkid_probe_filter_superblocks_usage@plt>:
  254b40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b44:	ldr	x17, [x16, #3680]
  254b48:	add	x16, x16, #0xe60
  254b4c:	br	x17

0000000000254b50 <blkid_probe_set_device@plt>:
  254b50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b54:	ldr	x17, [x16, #3688]
  254b58:	add	x16, x16, #0xe68
  254b5c:	br	x17

0000000000254b60 <blkid_probe_numof_values@plt>:
  254b60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b64:	ldr	x17, [x16, #3696]
  254b68:	add	x16, x16, #0xe70
  254b6c:	br	x17

0000000000254b70 <blkid_probe_get_value@plt>:
  254b70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b74:	ldr	x17, [x16, #3704]
  254b78:	add	x16, x16, #0xe78
  254b7c:	br	x17

0000000000254b80 <blkid_free_probe@plt>:
  254b80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b84:	ldr	x17, [x16, #3712]
  254b88:	add	x16, x16, #0xe80
  254b8c:	br	x17

0000000000254b90 <safe_atolli@plt>:
  254b90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254b94:	ldr	x17, [x16, #3720]
  254b98:	add	x16, x16, #0xe88
  254b9c:	br	x17

0000000000254ba0 <blkid_probe_get_fd@plt>:
  254ba0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254ba4:	ldr	x17, [x16, #3728]
  254ba8:	add	x16, x16, #0xe90
  254bac:	br	x17

0000000000254bb0 <blkid_probe_enable_partitions@plt>:
  254bb0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254bb4:	ldr	x17, [x16, #3736]
  254bb8:	add	x16, x16, #0xe98
  254bbc:	br	x17

0000000000254bc0 <blkid_probe_get_size@plt>:
  254bc0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254bc4:	ldr	x17, [x16, #3744]
  254bc8:	add	x16, x16, #0xea0
  254bcc:	br	x17

0000000000254bd0 <blkid_probe_is_wholedisk@plt>:
  254bd0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254bd4:	ldr	x17, [x16, #3752]
  254bd8:	add	x16, x16, #0xea8
  254bdc:	br	x17

0000000000254be0 <blkid_probe_enable_superblocks@plt>:
  254be0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254be4:	ldr	x17, [x16, #3760]
  254be8:	add	x16, x16, #0xeb0
  254bec:	br	x17

0000000000254bf0 <blkid_do_fullprobe@plt>:
  254bf0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254bf4:	ldr	x17, [x16, #3768]
  254bf8:	add	x16, x16, #0xeb8
  254bfc:	br	x17

0000000000254c00 <blkid_probe_lookup_value@plt>:
  254c00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c04:	ldr	x17, [x16, #3776]
  254c08:	add	x16, x16, #0xec0
  254c0c:	br	x17

0000000000254c10 <blkid_probe_set_partitions_flags@plt>:
  254c10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c14:	ldr	x17, [x16, #3784]
  254c18:	add	x16, x16, #0xec8
  254c1c:	br	x17

0000000000254c20 <blkid_do_safeprobe@plt>:
  254c20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c24:	ldr	x17, [x16, #3792]
  254c28:	add	x16, x16, #0xed0
  254c2c:	br	x17

0000000000254c30 <blkid_safe_string@plt>:
  254c30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c34:	ldr	x17, [x16, #3800]
  254c38:	add	x16, x16, #0xed8
  254c3c:	br	x17

0000000000254c40 <blkid_encode_string@plt>:
  254c40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c44:	ldr	x17, [x16, #3808]
  254c48:	add	x16, x16, #0xee0
  254c4c:	br	x17

0000000000254c50 <blkid_probe_get_partitions@plt>:
  254c50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c54:	ldr	x17, [x16, #3816]
  254c58:	add	x16, x16, #0xee8
  254c5c:	br	x17

0000000000254c60 <blkid_partlist_numof_partitions@plt>:
  254c60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c64:	ldr	x17, [x16, #3824]
  254c68:	add	x16, x16, #0xef0
  254c6c:	br	x17

0000000000254c70 <blkid_partlist_get_partition@plt>:
  254c70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c74:	ldr	x17, [x16, #3832]
  254c78:	add	x16, x16, #0xef8
  254c7c:	br	x17

0000000000254c80 <blkid_partition_get_uuid@plt>:
  254c80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c84:	ldr	x17, [x16, #3840]
  254c88:	add	x16, x16, #0xf00
  254c8c:	br	x17

0000000000254c90 <blkid_partition_get_type_string@plt>:
  254c90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254c94:	ldr	x17, [x16, #3848]
  254c98:	add	x16, x16, #0xf08
  254c9c:	br	x17

0000000000254ca0 <sd_id128_from_string@plt>:
  254ca0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254ca4:	ldr	x17, [x16, #3856]
  254ca8:	add	x16, x16, #0xf10
  254cac:	br	x17

0000000000254cb0 <efi_loader_get_device_part_uuid@plt>:
  254cb0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254cb4:	ldr	x17, [x16, #3864]
  254cb8:	add	x16, x16, #0xf18
  254cbc:	br	x17

0000000000254cc0 <blkid_partition_get_flags@plt>:
  254cc0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254cc4:	ldr	x17, [x16, #3872]
  254cc8:	add	x16, x16, #0xf20
  254ccc:	br	x17

0000000000254cd0 <access@plt>:
  254cd0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254cd4:	ldr	x17, [x16, #3880]
  254cd8:	add	x16, x16, #0xf28
  254cdc:	br	x17

0000000000254ce0 <acl_get_file@plt>:
  254ce0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254ce4:	ldr	x17, [x16, #3888]
  254ce8:	add	x16, x16, #0xf30
  254cec:	br	x17

0000000000254cf0 <acl_find_uid@plt>:
  254cf0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254cf4:	ldr	x17, [x16, #3896]
  254cf8:	add	x16, x16, #0xf38
  254cfc:	br	x17

0000000000254d00 <acl_delete_entry@plt>:
  254d00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d04:	ldr	x17, [x16, #3904]
  254d08:	add	x16, x16, #0xf40
  254d0c:	br	x17

0000000000254d10 <acl_get_permset@plt>:
  254d10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d14:	ldr	x17, [x16, #3912]
  254d18:	add	x16, x16, #0xf48
  254d1c:	br	x17

0000000000254d20 <acl_get_perm@plt>:
  254d20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d24:	ldr	x17, [x16, #3920]
  254d28:	add	x16, x16, #0xf50
  254d2c:	br	x17

0000000000254d30 <acl_create_entry@plt>:
  254d30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d34:	ldr	x17, [x16, #3928]
  254d38:	add	x16, x16, #0xf58
  254d3c:	br	x17

0000000000254d40 <acl_set_tag_type@plt>:
  254d40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d44:	ldr	x17, [x16, #3936]
  254d48:	add	x16, x16, #0xf60
  254d4c:	br	x17

0000000000254d50 <acl_set_qualifier@plt>:
  254d50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d54:	ldr	x17, [x16, #3944]
  254d58:	add	x16, x16, #0xf68
  254d5c:	br	x17

0000000000254d60 <acl_add_perm@plt>:
  254d60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d64:	ldr	x17, [x16, #3952]
  254d68:	add	x16, x16, #0xf70
  254d6c:	br	x17

0000000000254d70 <acl_calc_mask@plt>:
  254d70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d74:	ldr	x17, [x16, #3960]
  254d78:	add	x16, x16, #0xf78
  254d7c:	br	x17

0000000000254d80 <acl_set_file@plt>:
  254d80:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d84:	ldr	x17, [x16, #3968]
  254d88:	add	x16, x16, #0xf80
  254d8c:	br	x17

0000000000254d90 <acl_free@plt>:
  254d90:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254d94:	ldr	x17, [x16, #3976]
  254d98:	add	x16, x16, #0xf88
  254d9c:	br	x17

0000000000254da0 <acl_get_entry@plt>:
  254da0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254da4:	ldr	x17, [x16, #3984]
  254da8:	add	x16, x16, #0xf90
  254dac:	br	x17

0000000000254db0 <acl_get_tag_type@plt>:
  254db0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254db4:	ldr	x17, [x16, #3992]
  254db8:	add	x16, x16, #0xf98
  254dbc:	br	x17

0000000000254dc0 <internal_set_new@plt>:
  254dc0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254dc4:	ldr	x17, [x16, #4000]
  254dc8:	add	x16, x16, #0xfa0
  254dcc:	br	x17

0000000000254dd0 <sd_device_enumerator_add_match_tag@plt>:
  254dd0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254dd4:	ldr	x17, [x16, #4008]
  254dd8:	add	x16, x16, #0xfa8
  254ddc:	br	x17

0000000000254de0 <set_put_strdup@plt>:
  254de0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254de4:	ldr	x17, [x16, #4016]
  254de8:	add	x16, x16, #0xfb0
  254dec:	br	x17

0000000000254df0 <hidden_or_backup_file@plt>:
  254df0:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254df4:	ldr	x17, [x16, #4024]
  254df8:	add	x16, x16, #0xfb8
  254dfc:	br	x17

0000000000254e00 <cunescape@plt>:
  254e00:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e04:	ldr	x17, [x16, #4032]
  254e08:	add	x16, x16, #0xfc0
  254e0c:	br	x17

0000000000254e10 <set_consume@plt>:
  254e10:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e14:	ldr	x17, [x16, #4040]
  254e18:	add	x16, x16, #0xfc8
  254e1c:	br	x17

0000000000254e20 <set_iterate@plt>:
  254e20:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e24:	ldr	x17, [x16, #4048]
  254e28:	add	x16, x16, #0xfd0
  254e2c:	br	x17

0000000000254e30 <cg_pid_get_session@plt>:
  254e30:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e34:	ldr	x17, [x16, #4056]
  254e38:	add	x16, x16, #0xfd8
  254e3c:	br	x17

0000000000254e40 <cg_pid_get_unit@plt>:
  254e40:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e44:	ldr	x17, [x16, #4064]
  254e48:	add	x16, x16, #0xfe0
  254e4c:	br	x17

0000000000254e50 <cg_pid_get_user_unit@plt>:
  254e50:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e54:	ldr	x17, [x16, #4072]
  254e58:	add	x16, x16, #0xfe8
  254e5c:	br	x17

0000000000254e60 <cg_pid_get_machine_name@plt>:
  254e60:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e64:	ldr	x17, [x16, #4080]
  254e68:	add	x16, x16, #0xff0
  254e6c:	br	x17

0000000000254e70 <cg_pid_get_slice@plt>:
  254e70:	adrp	x16, 27d000 <builtin_blkid.options+0x50>
  254e74:	ldr	x17, [x16, #4088]
  254e78:	add	x16, x16, #0xff8
  254e7c:	br	x17

0000000000254e80 <cg_pid_get_user_slice@plt>:
  254e80:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254e84:	ldr	x17, [x16]
  254e88:	add	x16, x16, #0x0
  254e8c:	br	x17

0000000000254e90 <cg_pid_get_owner_uid@plt>:
  254e90:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254e94:	ldr	x17, [x16, #8]
  254e98:	add	x16, x16, #0x8
  254e9c:	br	x17

0000000000254ea0 <parse_env_file_sentinel@plt>:
  254ea0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254ea4:	ldr	x17, [x16, #16]
  254ea8:	add	x16, x16, #0x10
  254eac:	br	x17

0000000000254eb0 <asprintf@plt>:
  254eb0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254eb4:	ldr	x17, [x16, #24]
  254eb8:	add	x16, x16, #0x18
  254ebc:	br	x17

0000000000254ec0 <filename_is_valid@plt>:
  254ec0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254ec4:	ldr	x17, [x16, #32]
  254ec8:	add	x16, x16, #0x20
  254ecc:	br	x17

0000000000254ed0 <strv_uniq@plt>:
  254ed0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254ed4:	ldr	x17, [x16, #40]
  254ed8:	add	x16, x16, #0x28
  254edc:	br	x17

0000000000254ee0 <parse_boolean@plt>:
  254ee0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254ee4:	ldr	x17, [x16, #48]
  254ee8:	add	x16, x16, #0x30
  254eec:	br	x17

0000000000254ef0 <session_id_valid@plt>:
  254ef0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254ef4:	ldr	x17, [x16, #56]
  254ef8:	add	x16, x16, #0x38
  254efc:	br	x17

0000000000254f00 <get_files_in_directory@plt>:
  254f00:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f04:	ldr	x17, [x16, #64]
  254f08:	add	x16, x16, #0x40
  254f0c:	br	x17

0000000000254f10 <dirent_ensure_type@plt>:
  254f10:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f14:	ldr	x17, [x16, #72]
  254f18:	add	x16, x16, #0x48
  254f1c:	br	x17

0000000000254f20 <dirent_is_file@plt>:
  254f20:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f24:	ldr	x17, [x16, #80]
  254f28:	add	x16, x16, #0x50
  254f2c:	br	x17

0000000000254f30 <reallocarray@plt>:
  254f30:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f34:	ldr	x17, [x16, #88]
  254f38:	add	x16, x16, #0x58
  254f3c:	br	x17

0000000000254f40 <hostname_is_valid@plt>:
  254f40:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f44:	ldr	x17, [x16, #96]
  254f48:	add	x16, x16, #0x60
  254f4c:	br	x17

0000000000254f50 <parse_ifindex@plt>:
  254f50:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f54:	ldr	x17, [x16, #104]
  254f58:	add	x16, x16, #0x68
  254f5c:	br	x17

0000000000254f60 <greedy_realloc@plt>:
  254f60:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f64:	ldr	x17, [x16, #112]
  254f68:	add	x16, x16, #0x70
  254f6c:	br	x17

0000000000254f70 <close_nointr@plt>:
  254f70:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f74:	ldr	x17, [x16, #120]
  254f78:	add	x16, x16, #0x78
  254f7c:	br	x17

0000000000254f80 <flush_fd@plt>:
  254f80:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f84:	ldr	x17, [x16, #128]
  254f88:	add	x16, x16, #0x80
  254f8c:	br	x17

0000000000254f90 <sd_id128_get_machine@plt>:
  254f90:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254f94:	ldr	x17, [x16, #136]
  254f98:	add	x16, x16, #0x88
  254f9c:	br	x17

0000000000254fa0 <siphash24@plt>:
  254fa0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254fa4:	ldr	x17, [x16, #144]
  254fa8:	add	x16, x16, #0x90
  254fac:	br	x17

0000000000254fb0 <ether_aton@plt>:
  254fb0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254fb4:	ldr	x17, [x16, #152]
  254fb8:	add	x16, x16, #0x98
  254fbc:	br	x17

0000000000254fc0 <internal_hashmap_contains@plt>:
  254fc0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254fc4:	ldr	x17, [x16, #160]
  254fc8:	add	x16, x16, #0xa0
  254fcc:	br	x17

0000000000254fd0 <condition_new@plt>:
  254fd0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254fd4:	ldr	x17, [x16, #168]
  254fd8:	add	x16, x16, #0xa8
  254fdc:	br	x17

0000000000254fe0 <extract_first_word@plt>:
  254fe0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254fe4:	ldr	x17, [x16, #176]
  254fe8:	add	x16, x16, #0xb0
  254fec:	br	x17

0000000000254ff0 <strv_consume@plt>:
  254ff0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  254ff4:	ldr	x17, [x16, #184]
  254ff8:	add	x16, x16, #0xb8
  254ffc:	br	x17

0000000000255000 <ifname_valid@plt>:
  255000:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255004:	ldr	x17, [x16, #192]
  255008:	add	x16, x16, #0xc0
  25500c:	br	x17

0000000000255010 <env_assignment_is_valid@plt>:
  255010:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255014:	ldr	x17, [x16, #200]
  255018:	add	x16, x16, #0xc8
  25501c:	br	x17

0000000000255020 <ascii_is_valid@plt>:
  255020:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255024:	ldr	x17, [x16, #208]
  255028:	add	x16, x16, #0xd0
  25502c:	br	x17

0000000000255030 <ether_addr_from_string@plt>:
  255030:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255034:	ldr	x17, [x16, #216]
  255038:	add	x16, x16, #0xd8
  25503c:	br	x17

0000000000255040 <set_put@plt>:
  255040:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255044:	ldr	x17, [x16, #224]
  255048:	add	x16, x16, #0xe0
  25504c:	br	x17

0000000000255050 <internal_set_ensure_allocated@plt>:
  255050:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255054:	ldr	x17, [x16, #232]
  255058:	add	x16, x16, #0xe8
  25505c:	br	x17

0000000000255060 <internal_hashmap_move@plt>:
  255060:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255064:	ldr	x17, [x16, #240]
  255068:	add	x16, x16, #0xf0
  25506c:	br	x17

0000000000255070 <fputc@plt>:
  255070:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255074:	ldr	x17, [x16, #248]
  255078:	add	x16, x16, #0xf8
  25507c:	br	x17

0000000000255080 <inet_ntop@plt>:
  255080:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255084:	ldr	x17, [x16, #256]
  255088:	add	x16, x16, #0x100
  25508c:	br	x17

0000000000255090 <fputs@plt>:
  255090:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255094:	ldr	x17, [x16, #264]
  255098:	add	x16, x16, #0x108
  25509c:	br	x17

00000000002550a0 <inet_pton@plt>:
  2550a0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2550a4:	ldr	x17, [x16, #272]
  2550a8:	add	x16, x16, #0x110
  2550ac:	br	x17

00000000002550b0 <inet_aton@plt>:
  2550b0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2550b4:	ldr	x17, [x16, #280]
  2550b8:	add	x16, x16, #0x118
  2550bc:	br	x17

00000000002550c0 <hexmem@plt>:
  2550c0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2550c4:	ldr	x17, [x16, #288]
  2550c8:	add	x16, x16, #0x120
  2550cc:	br	x17

00000000002550d0 <memdup@plt>:
  2550d0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2550d4:	ldr	x17, [x16, #296]
  2550d8:	add	x16, x16, #0x128
  2550dc:	br	x17

00000000002550e0 <timezone_is_valid@plt>:
  2550e0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2550e4:	ldr	x17, [x16, #304]
  2550e8:	add	x16, x16, #0x130
  2550ec:	br	x17

00000000002550f0 <in4_addr_default_prefixlen@plt>:
  2550f0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2550f4:	ldr	x17, [x16, #312]
  2550f8:	add	x16, x16, #0x138
  2550fc:	br	x17

0000000000255100 <inet_netof@plt>:
  255100:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255104:	ldr	x17, [x16, #320]
  255108:	add	x16, x16, #0x140
  25510c:	br	x17

0000000000255110 <inet_makeaddr@plt>:
  255110:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255114:	ldr	x17, [x16, #328]
  255118:	add	x16, x16, #0x148
  25511c:	br	x17

0000000000255120 <is_localhost@plt>:
  255120:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255124:	ldr	x17, [x16, #336]
  255128:	add	x16, x16, #0x150
  25512c:	br	x17

0000000000255130 <dns_name_is_root@plt>:
  255130:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255134:	ldr	x17, [x16, #344]
  255138:	add	x16, x16, #0x158
  25513c:	br	x17

0000000000255140 <dns_label_escape@plt>:
  255140:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255144:	ldr	x17, [x16, #352]
  255148:	add	x16, x16, #0x160
  25514c:	br	x17

0000000000255150 <memdup_suffix0@plt>:
  255150:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255154:	ldr	x17, [x16, #360]
  255158:	add	x16, x16, #0x168
  25515c:	br	x17

0000000000255160 <fopen_temporary@plt>:
  255160:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255164:	ldr	x17, [x16, #368]
  255168:	add	x16, x16, #0x170
  25516c:	br	x17

0000000000255170 <fchmod@plt>:
  255170:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255174:	ldr	x17, [x16, #376]
  255178:	add	x16, x16, #0x178
  25517c:	br	x17

0000000000255180 <fwrite@plt>:
  255180:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255184:	ldr	x17, [x16, #384]
  255188:	add	x16, x16, #0x180
  25518c:	br	x17

0000000000255190 <fputstrv@plt>:
  255190:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255194:	ldr	x17, [x16, #392]
  255198:	add	x16, x16, #0x188
  25519c:	br	x17

00000000002551a0 <fflush_and_check@plt>:
  2551a0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2551a4:	ldr	x17, [x16, #400]
  2551a8:	add	x16, x16, #0x190
  2551ac:	br	x17

00000000002551b0 <unhexmem_full@plt>:
  2551b0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2551b4:	ldr	x17, [x16, #408]
  2551b8:	add	x16, x16, #0x198
  2551bc:	br	x17

00000000002551c0 <in4_addr_default_subnet_mask@plt>:
  2551c0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2551c4:	ldr	x17, [x16, #416]
  2551c8:	add	x16, x16, #0x1a0
  2551cc:	br	x17

00000000002551d0 <dns_name_concat@plt>:
  2551d0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2551d4:	ldr	x17, [x16, #424]
  2551d8:	add	x16, x16, #0x1a8
  2551dc:	br	x17

00000000002551e0 <__xstat64@plt>:
  2551e0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2551e4:	ldr	x17, [x16, #432]
  2551e8:	add	x16, x16, #0x1b0
  2551ec:	br	x17

00000000002551f0 <__fxstat64@plt>:
  2551f0:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  2551f4:	ldr	x17, [x16, #440]
  2551f8:	add	x16, x16, #0x1b8
  2551fc:	br	x17

0000000000255200 <__lxstat64@plt>:
  255200:	adrp	x16, 27e000 <cg_pid_get_user_slice@SD_SHARED>
  255204:	ldr	x17, [x16, #448]
  255208:	add	x16, x16, #0x1c0
  25520c:	br	x17
