
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//udf.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <read_string>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	cbz	x1, 280 <read_string+0x280>
      10:	stp	x21, x22, [sp, #32]
      14:	str	x23, [sp, #48]
      18:	mov	x21, x0
      1c:	mov	x23, x1
      20:	mov	x19, x2
      24:	ldrb	w1, [x0]
      28:	sub	w0, w1, #0x8
      2c:	and	w0, w0, #0xfffffff7
      30:	tst	w0, #0xff
      34:	b.ne	288 <read_string+0x288>  // b.any
      38:	mov	x22, #0x0                   	// #0
      3c:	mov	x20, #0x0                   	// #0
      40:	cmp	w1, #0x8
      44:	b.eq	84 <read_string+0x84>  // b.none
      48:	ldrb	w0, [x21]
      4c:	cmp	w0, #0x10
      50:	b.eq	c4 <read_string+0xc4>  // b.none
      54:	cbz	x19, 124 <read_string+0x124>
      58:	sub	x5, x22, #0x1
      5c:	cbz	x22, 258 <read_string+0x258>
      60:	mov	x1, x19
      64:	mov	x0, x20
      68:	mov	w3, #0x0                   	// #0
      6c:	mov	w8, #0xffff2800            	// #-55296
      70:	mov	w7, #0xffff2400            	// #-56320
      74:	mov	w9, #0x3f                  	// #63
      78:	mov	w6, #0x0                   	// #0
      7c:	mov	w10, #0x2400                	// #9216
      80:	b	150 <read_string+0x150>
      84:	sub	x22, x23, #0x1
      88:	lsl	x0, x22, #1
      8c:	bl	0 <grub_malloc>
      90:	mov	x20, x0
      94:	cbz	x0, 298 <read_string+0x298>
      98:	cbz	x22, 48 <read_string+0x48>
      9c:	mov	w0, #0x0                   	// #0
      a0:	mov	x1, #0x0                   	// #0
      a4:	add	w0, w0, #0x1
      a8:	mov	x2, x1
      ac:	mov	w1, w0
      b0:	ldrb	w3, [x21, w0, uxtw]
      b4:	strh	w3, [x20, x2, lsl #1]
      b8:	cmp	x22, w0, uxtw
      bc:	b.hi	a4 <read_string+0xa4>  // b.pmore
      c0:	b	48 <read_string+0x48>
      c4:	sub	x23, x23, #0x1
      c8:	lsr	x22, x23, #1
      cc:	and	x0, x23, #0xfffffffffffffffe
      d0:	bl	0 <grub_malloc>
      d4:	mov	x20, x0
      d8:	cbz	x0, 2a8 <read_string+0x2a8>
      dc:	cmp	x23, #0x1
      e0:	b.ls	11c <read_string+0x11c>  // b.plast
      e4:	mov	w2, #0x1                   	// #1
      e8:	mov	w0, #0x0                   	// #0
      ec:	mov	x3, #0x0                   	// #0
      f0:	add	w0, w0, #0x1
      f4:	ldrb	w1, [x21, w2, uxtw]
      f8:	lsl	w4, w0, #1
      fc:	ldrb	w4, [x21, w4, uxtw]
     100:	orr	w1, w4, w1, lsl #8
     104:	strh	w1, [x20, x3, lsl #1]
     108:	mov	w3, w0
     10c:	add	w2, w2, #0x2
     110:	cmp	x22, w0, uxtw
     114:	b.hi	f0 <read_string+0xf0>  // b.pmore
     118:	b	54 <read_string+0x54>
     11c:	mov	x22, #0x0                   	// #0
     120:	b	54 <read_string+0x54>
     124:	lsl	x0, x22, #2
     128:	add	x0, x0, #0x1
     12c:	bl	0 <grub_malloc>
     130:	mov	x19, x0
     134:	cbz	x0, 260 <read_string+0x260>
     138:	b	58 <read_string+0x58>
     13c:	strb	w9, [x1], #1
     140:	mov	w3, w6
     144:	sub	x5, x5, #0x1
     148:	cmn	x5, #0x1
     14c:	b.eq	25c <read_string+0x25c>  // b.none
     150:	mov	x2, x0
     154:	ldrh	w4, [x2], #2
     158:	cbz	w3, 1b4 <read_string+0x1b4>
     15c:	add	w11, w4, w7
     160:	cmp	w11, #0x3ff
     164:	b.hi	13c <read_string+0x13c>  // b.pmore
     168:	add	w3, w3, w8
     16c:	add	w3, w4, w3, lsl #10
     170:	add	w3, w3, w10
     174:	lsr	w0, w3, #18
     178:	orr	w0, w0, #0xfffffff0
     17c:	strb	w0, [x1]
     180:	ubfx	x0, x3, #12, #6
     184:	orr	w0, w0, #0xffffff80
     188:	strb	w0, [x1, #1]
     18c:	ubfx	x0, x3, #6, #6
     190:	orr	w0, w0, #0xffffff80
     194:	strb	w0, [x1, #2]
     198:	and	w3, w3, #0x3f
     19c:	orr	w3, w3, #0xffffff80
     1a0:	strb	w3, [x1, #3]
     1a4:	mov	x0, x2
     1a8:	add	x1, x1, #0x4
     1ac:	mov	w3, w6
     1b0:	b	144 <read_string+0x144>
     1b4:	cmp	w4, #0x7f
     1b8:	b.hi	1c8 <read_string+0x1c8>  // b.pmore
     1bc:	strb	w4, [x1], #1
     1c0:	mov	x0, x2
     1c4:	b	144 <read_string+0x144>
     1c8:	cmp	w4, #0x7ff
     1cc:	b.hi	1f8 <read_string+0x1f8>  // b.pmore
     1d0:	lsr	w0, w4, #6
     1d4:	orr	w0, w0, #0xffffffc0
     1d8:	mov	x11, x1
     1dc:	strb	w0, [x11], #2
     1e0:	and	w4, w4, #0x3f
     1e4:	orr	w4, w4, #0xffffff80
     1e8:	strb	w4, [x1, #1]
     1ec:	mov	x0, x2
     1f0:	mov	x1, x11
     1f4:	b	144 <read_string+0x144>
     1f8:	add	w0, w4, w8
     1fc:	cmp	w0, #0x3ff
     200:	b.ls	24c <read_string+0x24c>  // b.plast
     204:	add	w0, w4, w7
     208:	cmp	w0, #0x3ff
     20c:	b.hi	21c <read_string+0x21c>  // b.pmore
     210:	strb	w9, [x1], #1
     214:	mov	x0, x2
     218:	b	144 <read_string+0x144>
     21c:	lsr	w0, w4, #12
     220:	orr	w0, w0, #0xffffffe0
     224:	strb	w0, [x1]
     228:	ubfx	x0, x4, #6, #6
     22c:	orr	w0, w0, #0xffffff80
     230:	strb	w0, [x1, #1]
     234:	and	w4, w4, #0x3f
     238:	orr	w4, w4, #0xffffff80
     23c:	strb	w4, [x1, #2]
     240:	mov	x0, x2
     244:	add	x1, x1, #0x3
     248:	b	144 <read_string+0x144>
     24c:	mov	w3, w4
     250:	mov	x0, x2
     254:	b	144 <read_string+0x144>
     258:	mov	x1, x19
     25c:	strb	wzr, [x1]
     260:	mov	x0, x20
     264:	bl	0 <grub_free>
     268:	ldp	x21, x22, [sp, #32]
     26c:	ldr	x23, [sp, #48]
     270:	mov	x0, x19
     274:	ldp	x19, x20, [sp, #16]
     278:	ldp	x29, x30, [sp], #64
     27c:	ret
     280:	mov	x19, #0x0                   	// #0
     284:	b	270 <read_string+0x270>
     288:	mov	x19, #0x0                   	// #0
     28c:	ldp	x21, x22, [sp, #32]
     290:	ldr	x23, [sp, #48]
     294:	b	270 <read_string+0x270>
     298:	mov	x19, x0
     29c:	ldp	x21, x22, [sp, #32]
     2a0:	ldr	x23, [sp, #48]
     2a4:	b	270 <read_string+0x270>
     2a8:	mov	x19, x0
     2ac:	ldp	x21, x22, [sp, #32]
     2b0:	ldr	x23, [sp, #48]
     2b4:	b	270 <read_string+0x270>

00000000000002b8 <read_dstring>:
     2b8:	stp	x29, x30, [sp, #-16]!
     2bc:	mov	x29, sp
     2c0:	ldrb	w2, [x0]
     2c4:	cbnz	w2, 2dc <read_dstring+0x24>
     2c8:	mov	x0, #0x1                   	// #1
     2cc:	bl	0 <grub_malloc>
     2d0:	cbz	x0, 2f4 <read_dstring+0x3c>
     2d4:	strb	wzr, [x0]
     2d8:	b	2f4 <read_dstring+0x3c>
     2dc:	sub	x1, x1, #0x1
     2e0:	ldrb	w3, [x0, x1]
     2e4:	cmp	x1, x3
     2e8:	mov	x2, #0x0                   	// #0
     2ec:	csel	x1, x1, x3, ls  // ls = plast
     2f0:	bl	0 <read_string>
     2f4:	ldp	x29, x30, [sp], #16
     2f8:	ret

00000000000002fc <grub_udf_get_block>:
     2fc:	ldr	w4, [x0, #3028]
     300:	cmp	w4, w1, uxth
     304:	b.le	330 <grub_udf_get_block+0x34>
     308:	and	w3, w1, #0xffff
     30c:	add	x3, x0, w3, sxtw #3
     310:	ldr	x1, [x3, #2960]
     314:	ldrh	w3, [x1, #4]
     318:	add	x1, x3, x3, lsl #1
     31c:	add	x1, x3, x1, lsl #4
     320:	add	x0, x0, x1, lsl #2
     324:	ldr	w0, [x0, #2756]
     328:	add	w0, w2, w0
     32c:	ret
     330:	stp	x29, x30, [sp, #-16]!
     334:	mov	x29, sp
     338:	adrp	x0, 0 <read_string>
     33c:	ldr	x1, [x0]
     340:	mov	w0, #0x9                   	// #9
     344:	bl	0 <grub_error>
     348:	mov	w0, #0x0                   	// #0
     34c:	ldp	x29, x30, [sp], #16
     350:	ret
     354:	nop
	...

0000000000000360 <grub_udf_read_block>:
     360:	stp	x29, x30, [sp, #-64]!
     364:	mov	x29, sp
     368:	stp	x19, x20, [sp, #16]
     36c:	mov	x19, x0
     370:	ldrh	w0, [x0, #12]
     374:	cmp	w0, #0x105
     378:	b.eq	39c <grub_udf_read_block+0x3c>  // b.none
     37c:	cmp	w0, #0x10a
     380:	b.eq	3dc <grub_udf_read_block+0x7c>  // b.none
     384:	adrp	x0, 0 <read_string>
     388:	ldr	x1, [x0]
     38c:	mov	w0, #0x9                   	// #9
     390:	bl	0 <grub_error>
     394:	mov	x0, #0x0                   	// #0
     398:	b	460 <grub_udf_read_block+0x100>
     39c:	stp	x21, x22, [sp, #32]
     3a0:	add	x3, x19, #0xbc
     3a4:	ldr	w0, [x19, #180]
     3a8:	add	x3, x3, x0
     3ac:	ldr	w2, [x19, #184]
     3b0:	ldrh	w0, [x19, #46]
     3b4:	tst	x0, #0x7
     3b8:	b.ne	52c <grub_udf_read_block+0x1cc>  // b.any
     3bc:	ldr	x0, [x19]
     3c0:	ldr	w20, [x0, #732]
     3c4:	mul	x20, x20, x1
     3c8:	cmp	x2, #0x7
     3cc:	b.le	670 <grub_udf_read_block+0x310>
     3d0:	str	x23, [sp, #48]
     3d4:	mov	x21, #0x0                   	// #0
     3d8:	b	4a0 <grub_udf_read_block+0x140>
     3dc:	stp	x21, x22, [sp, #32]
     3e0:	add	x3, x19, #0xe4
     3e4:	ldr	w0, [x19, #220]
     3e8:	add	x3, x3, x0
     3ec:	ldr	w2, [x19, #224]
     3f0:	b	3b0 <grub_udf_read_block+0x50>
     3f4:	ldr	w2, [x3, #4]
     3f8:	ldrh	w1, [x19, #8]
     3fc:	ldr	x0, [x19]
     400:	bl	2fc <grub_udf_get_block>
     404:	mov	w23, w0
     408:	cbz	x21, 46c <grub_udf_read_block+0x10c>
     40c:	ldr	x0, [x19]
     410:	ldr	w1, [x0, #3032]
     414:	mov	x4, x21
     418:	and	x3, x22, #0x3fffffff
     41c:	mov	x2, #0x0                   	// #0
     420:	lsl	x1, x23, x1
     424:	ldr	x0, [x0]
     428:	bl	0 <grub_disk_read>
     42c:	cbnz	w0, 680 <grub_udf_read_block+0x320>
     430:	ldrh	w0, [x21]
     434:	cmp	w0, #0x102
     438:	b.eq	490 <grub_udf_read_block+0x130>  // b.none
     43c:	adrp	x0, 0 <read_string>
     440:	ldr	x1, [x0]
     444:	mov	w0, #0x9                   	// #9
     448:	bl	0 <grub_error>
     44c:	ldr	x23, [sp, #48]
     450:	mov	x0, x21
     454:	bl	0 <grub_free>
     458:	mov	x0, #0x0                   	// #0
     45c:	ldp	x21, x22, [sp, #32]
     460:	ldp	x19, x20, [sp, #16]
     464:	ldp	x29, x30, [sp], #64
     468:	ret
     46c:	ldr	x0, [x19]
     470:	ldr	w0, [x0, #732]
     474:	bl	0 <grub_malloc>
     478:	mov	x21, x0
     47c:	cbnz	x0, 40c <grub_udf_read_block+0xac>
     480:	mov	x0, #0x0                   	// #0
     484:	ldp	x21, x22, [sp, #32]
     488:	ldr	x23, [sp, #48]
     48c:	b	460 <grub_udf_read_block+0x100>
     490:	ldr	w2, [x21, #20]
     494:	add	x3, x21, #0x18
     498:	cmp	x2, #0x7
     49c:	b.le	524 <grub_udf_read_block+0x1c4>
     4a0:	ldr	w1, [x3]
     4a4:	and	w22, w1, #0x3fffffff
     4a8:	lsr	w1, w1, #30
     4ac:	cmp	w1, #0x3
     4b0:	b.eq	3f4 <grub_udf_read_block+0x94>  // b.none
     4b4:	mov	w0, w22
     4b8:	cmp	x20, w22, uxtw
     4bc:	b.cc	4d0 <grub_udf_read_block+0x170>  // b.lo, b.ul, b.last
     4c0:	sub	x20, x20, x0
     4c4:	add	x3, x3, #0x8
     4c8:	sub	x2, x2, #0x8
     4cc:	b	498 <grub_udf_read_block+0x138>
     4d0:	ldr	w22, [x3, #4]
     4d4:	mov	x0, x21
     4d8:	bl	0 <grub_free>
     4dc:	mov	x0, #0x0                   	// #0
     4e0:	tst	w22, #0xc0000000
     4e4:	b.eq	4f4 <grub_udf_read_block+0x194>  // b.none
     4e8:	ldp	x21, x22, [sp, #32]
     4ec:	ldr	x23, [sp, #48]
     4f0:	b	460 <grub_udf_read_block+0x100>
     4f4:	mov	w2, w22
     4f8:	ldrh	w1, [x19, #8]
     4fc:	ldr	x0, [x19]
     500:	bl	2fc <grub_udf_get_block>
     504:	ldr	x1, [x19]
     508:	ldr	w1, [x1, #3032]
     50c:	add	w1, w1, #0x9
     510:	lsr	x20, x20, x1
     514:	add	x0, x20, w0, uxtw
     518:	ldp	x21, x22, [sp, #32]
     51c:	ldr	x23, [sp, #48]
     520:	b	460 <grub_udf_read_block+0x100>
     524:	ldr	x23, [sp, #48]
     528:	b	450 <grub_udf_read_block+0xf0>
     52c:	ldr	x0, [x19]
     530:	ldr	w20, [x0, #732]
     534:	mul	x20, x20, x1
     538:	cmp	x2, #0xf
     53c:	b.le	678 <grub_udf_read_block+0x318>
     540:	str	x23, [sp, #48]
     544:	mov	x21, #0x0                   	// #0
     548:	b	5e0 <grub_udf_read_block+0x280>
     54c:	ldr	w2, [x3, #4]
     550:	ldrh	w1, [x3, #8]
     554:	ldr	x0, [x19]
     558:	bl	2fc <grub_udf_get_block>
     55c:	mov	w23, w0
     560:	cbz	x21, 5ac <grub_udf_read_block+0x24c>
     564:	ldr	x0, [x19]
     568:	ldr	w1, [x0, #3032]
     56c:	mov	x4, x21
     570:	and	x3, x22, #0x3fffffff
     574:	mov	x2, #0x0                   	// #0
     578:	lsl	x1, x23, x1
     57c:	ldr	x0, [x0]
     580:	bl	0 <grub_disk_read>
     584:	cbnz	w0, 688 <grub_udf_read_block+0x328>
     588:	ldrh	w0, [x21]
     58c:	cmp	w0, #0x102
     590:	b.eq	5d0 <grub_udf_read_block+0x270>  // b.none
     594:	adrp	x0, 0 <read_string>
     598:	ldr	x1, [x0]
     59c:	mov	w0, #0x9                   	// #9
     5a0:	bl	0 <grub_error>
     5a4:	ldr	x23, [sp, #48]
     5a8:	b	450 <grub_udf_read_block+0xf0>
     5ac:	ldr	x0, [x19]
     5b0:	ldr	w0, [x0, #732]
     5b4:	bl	0 <grub_malloc>
     5b8:	mov	x21, x0
     5bc:	cbnz	x0, 564 <grub_udf_read_block+0x204>
     5c0:	mov	x0, #0x0                   	// #0
     5c4:	ldp	x21, x22, [sp, #32]
     5c8:	ldr	x23, [sp, #48]
     5cc:	b	460 <grub_udf_read_block+0x100>
     5d0:	ldr	w2, [x21, #20]
     5d4:	add	x3, x21, #0x18
     5d8:	cmp	x2, #0xf
     5dc:	b.le	668 <grub_udf_read_block+0x308>
     5e0:	ldr	w1, [x3]
     5e4:	and	w22, w1, #0x3fffffff
     5e8:	lsr	w1, w1, #30
     5ec:	cmp	w1, #0x3
     5f0:	b.eq	54c <grub_udf_read_block+0x1ec>  // b.none
     5f4:	mov	w0, w22
     5f8:	cmp	x20, w22, uxtw
     5fc:	b.cc	610 <grub_udf_read_block+0x2b0>  // b.lo, b.ul, b.last
     600:	sub	x20, x20, x0
     604:	add	x3, x3, #0x10
     608:	sub	x2, x2, #0x10
     60c:	b	5d8 <grub_udf_read_block+0x278>
     610:	ldr	w22, [x3, #4]
     614:	ldrh	w23, [x3, #8]
     618:	mov	x0, x21
     61c:	bl	0 <grub_free>
     620:	mov	x0, #0x0                   	// #0
     624:	tst	w22, #0xc0000000
     628:	b.eq	638 <grub_udf_read_block+0x2d8>  // b.none
     62c:	ldp	x21, x22, [sp, #32]
     630:	ldr	x23, [sp, #48]
     634:	b	460 <grub_udf_read_block+0x100>
     638:	mov	w2, w22
     63c:	mov	w1, w23
     640:	ldr	x0, [x19]
     644:	bl	2fc <grub_udf_get_block>
     648:	ldr	x1, [x19]
     64c:	ldr	w1, [x1, #3032]
     650:	add	w1, w1, #0x9
     654:	lsr	x1, x20, x1
     658:	add	x0, x1, w0, uxtw
     65c:	ldp	x21, x22, [sp, #32]
     660:	ldr	x23, [sp, #48]
     664:	b	460 <grub_udf_read_block+0x100>
     668:	ldr	x23, [sp, #48]
     66c:	b	450 <grub_udf_read_block+0xf0>
     670:	mov	x21, #0x0                   	// #0
     674:	b	450 <grub_udf_read_block+0xf0>
     678:	mov	x21, #0x0                   	// #0
     67c:	b	450 <grub_udf_read_block+0xf0>
     680:	ldr	x23, [sp, #48]
     684:	b	450 <grub_udf_read_block+0xf0>
     688:	ldr	x23, [sp, #48]
     68c:	b	450 <grub_udf_read_block+0xf0>
	...

00000000000006a0 <grub_udf_read_icb>:
     6a0:	stp	x29, x30, [sp, #-48]!
     6a4:	mov	x29, sp
     6a8:	stp	x19, x20, [sp, #16]
     6ac:	str	x21, [sp, #32]
     6b0:	mov	x21, x0
     6b4:	mov	x19, x1
     6b8:	mov	x20, x2
     6bc:	ldr	w2, [x1, #4]
     6c0:	ldrh	w1, [x1, #8]
     6c4:	bl	2fc <grub_udf_get_block>
     6c8:	mov	w1, w0
     6cc:	adrp	x2, 0 <read_string>
     6d0:	ldr	x2, [x2]
     6d4:	ldr	w0, [x2]
     6d8:	cbz	w0, 6ec <grub_udf_read_icb+0x4c>
     6dc:	ldp	x19, x20, [sp, #16]
     6e0:	ldr	x21, [sp, #32]
     6e4:	ldp	x29, x30, [sp], #48
     6e8:	ret
     6ec:	ldr	w0, [x21, #3032]
     6f0:	add	w2, w0, #0x9
     6f4:	mov	w3, #0x1                   	// #1
     6f8:	lsl	w3, w3, w2
     6fc:	add	x4, x20, #0xc
     700:	sxtw	x3, w3
     704:	mov	x2, #0x0                   	// #0
     708:	lsl	w1, w1, w0
     70c:	ldr	x0, [x21]
     710:	bl	0 <grub_disk_read>
     714:	cbnz	w0, 73c <grub_udf_read_icb+0x9c>
     718:	ldrh	w1, [x20, #12]
     71c:	cmp	w1, #0x105
     720:	mov	w2, #0x10a                 	// #266
     724:	ccmp	w1, w2, #0x4, ne  // ne = any
     728:	b.ne	74c <grub_udf_read_icb+0xac>  // b.any
     72c:	ldrh	w1, [x19, #8]
     730:	str	w1, [x20, #8]
     734:	str	x21, [x20]
     738:	b	6dc <grub_udf_read_icb+0x3c>
     73c:	adrp	x0, 0 <read_string>
     740:	ldr	x0, [x0]
     744:	ldr	w0, [x0]
     748:	b	6dc <grub_udf_read_icb+0x3c>
     74c:	adrp	x0, 0 <read_string>
     750:	ldr	x1, [x0]
     754:	mov	w0, #0x9                   	// #9
     758:	bl	0 <grub_error>
     75c:	b	6dc <grub_udf_read_icb+0x3c>
	...

0000000000000770 <grub_udf_mount>:
     770:	sub	sp, sp, #0x260
     774:	stp	x29, x30, [sp]
     778:	mov	x29, sp
     77c:	stp	x19, x20, [sp, #16]
     780:	stp	x21, x22, [sp, #32]
     784:	mov	x20, x0
     788:	mov	x0, #0xbe0                 	// #3040
     78c:	bl	0 <grub_malloc>
     790:	mov	x22, x0
     794:	cbz	x0, 7e0 <grub_udf_mount+0x70>
     798:	stp	x23, x24, [sp, #48]
     79c:	str	x20, [x0]
     7a0:	mov	w21, #0x0                   	// #0
     7a4:	adrp	x24, 0 <read_string>
     7a8:	mov	x23, #0x18                  	// #24
     7ac:	ldr	x0, [x24]
     7b0:	ldr	w1, [x0]
     7b4:	cbz	w1, 880 <grub_udf_mount+0x110>
     7b8:	ldr	x19, [x24]
     7bc:	b	838 <grub_udf_mount+0xc8>
     7c0:	adrp	x0, 0 <read_string>
     7c4:	ldr	x1, [x0]
     7c8:	mov	w0, #0x9                   	// #9
     7cc:	bl	0 <grub_error>
     7d0:	mov	x0, x22
     7d4:	bl	0 <grub_free>
     7d8:	mov	x22, #0x0                   	// #0
     7dc:	ldp	x23, x24, [sp, #48]
     7e0:	mov	x0, x22
     7e4:	ldp	x19, x20, [sp, #16]
     7e8:	ldp	x21, x22, [sp, #32]
     7ec:	ldp	x29, x30, [sp]
     7f0:	add	sp, sp, #0x260
     7f4:	ret
     7f8:	stp	x27, x28, [sp, #80]
     7fc:	str	w21, [x22, #3032]
     800:	add	w0, w21, #0x9
     804:	mov	w24, #0x7fff                	// #32767
     808:	asr	w24, w24, w0
     80c:	add	w24, w24, #0x1
     810:	mov	w26, #0x7ff                 	// #2047
     814:	asr	w26, w26, w0
     818:	add	w26, w26, #0x1
     81c:	mov	x27, #0x7                   	// #7
     820:	adrp	x28, 0 <read_string>
     824:	add	x23, sp, #0x69
     828:	mov	x19, #0x5                   	// #5
     82c:	b	8c0 <grub_udf_mount+0x150>
     830:	ldr	w1, [x19, #4]!
     834:	cbz	w1, 880 <grub_udf_mount+0x110>
     838:	add	x4, sp, #0x68
     83c:	mov	x3, x23
     840:	mov	x2, #0x0                   	// #0
     844:	lsl	w1, w1, w21
     848:	mov	x0, x20
     84c:	bl	0 <grub_disk_read>
     850:	cbnz	w0, 7c0 <grub_udf_mount+0x50>
     854:	ldrh	w1, [sp, #104]
     858:	cmp	w1, #0x2
     85c:	b.ne	830 <grub_udf_mount+0xc0>  // b.any
     860:	ldr	w0, [x19]
     864:	ldr	w1, [sp, #116]
     868:	cmp	w1, w0
     86c:	b.ne	830 <grub_udf_mount+0xc0>  // b.any
     870:	stp	x25, x26, [sp, #64]
     874:	ldr	w25, [sp, #124]
     878:	cbnz	w25, 7f8 <grub_udf_mount+0x88>
     87c:	ldp	x25, x26, [sp, #64]
     880:	add	w21, w21, #0x1
     884:	cmp	w21, #0x4
     888:	b.ne	7ac <grub_udf_mount+0x3c>  // b.any
     88c:	adrp	x0, 0 <read_string>
     890:	ldr	x1, [x0]
     894:	mov	w0, #0x9                   	// #9
     898:	bl	0 <grub_error>
     89c:	b	7d0 <grub_udf_mount+0x60>
     8a0:	adrp	x0, 0 <read_string>
     8a4:	ldr	x1, [x0]
     8a8:	mov	w0, #0x9                   	// #9
     8ac:	bl	0 <grub_error>
     8b0:	ldp	x25, x26, [sp, #64]
     8b4:	ldp	x27, x28, [sp, #80]
     8b8:	b	7d0 <grub_udf_mount+0x60>
     8bc:	add	w24, w24, w26
     8c0:	add	x4, sp, #0x68
     8c4:	mov	x3, x27
     8c8:	mov	x2, #0x0                   	// #0
     8cc:	lsl	w1, w24, w21
     8d0:	mov	x0, x20
     8d4:	bl	0 <grub_disk_read>
     8d8:	cbnz	w0, 8a0 <grub_udf_mount+0x130>
     8dc:	mov	x2, x19
     8e0:	ldr	x1, [x28]
     8e4:	mov	x0, x23
     8e8:	bl	0 <grub_memcmp>
     8ec:	cbz	w0, 99c <grub_udf_mount+0x22c>
     8f0:	mov	x2, x19
     8f4:	adrp	x0, 0 <read_string>
     8f8:	ldr	x1, [x0]
     8fc:	mov	x0, x23
     900:	bl	0 <grub_memcmp>
     904:	cbz	w0, 99c <grub_udf_mount+0x22c>
     908:	mov	x2, x19
     90c:	adrp	x0, 0 <read_string>
     910:	ldr	x1, [x0]
     914:	mov	x0, x23
     918:	bl	0 <grub_memcmp>
     91c:	cbz	w0, 8bc <grub_udf_mount+0x14c>
     920:	mov	x2, x19
     924:	adrp	x0, 0 <read_string>
     928:	ldr	x1, [x0]
     92c:	mov	x0, x23
     930:	bl	0 <grub_memcmp>
     934:	cbz	w0, 8bc <grub_udf_mount+0x14c>
     938:	mov	x2, x19
     93c:	adrp	x0, 0 <read_string>
     940:	ldr	x1, [x0]
     944:	mov	x0, x23
     948:	bl	0 <grub_memcmp>
     94c:	cbz	w0, 8bc <grub_udf_mount+0x14c>
     950:	mov	x2, x19
     954:	adrp	x0, 0 <read_string>
     958:	ldr	x1, [x0]
     95c:	mov	x0, x23
     960:	bl	0 <grub_memcmp>
     964:	cbz	w0, 8bc <grub_udf_mount+0x14c>
     968:	mov	x2, x19
     96c:	adrp	x0, 0 <read_string>
     970:	ldr	x1, [x0]
     974:	mov	x0, x23
     978:	bl	0 <grub_memcmp>
     97c:	cbz	w0, 8bc <grub_udf_mount+0x14c>
     980:	adrp	x0, 0 <read_string>
     984:	ldr	x1, [x0]
     988:	mov	w0, #0x9                   	// #9
     98c:	bl	0 <grub_error>
     990:	ldp	x25, x26, [sp, #64]
     994:	ldp	x27, x28, [sp, #80]
     998:	b	7d0 <grub_udf_mount+0x60>
     99c:	str	wzr, [x22, #3028]
     9a0:	str	wzr, [x22, #3024]
     9a4:	mov	x23, #0x10                  	// #16
     9a8:	add	x27, x22, #0x208
     9ac:	mov	x26, #0x800                 	// #2048
     9b0:	mov	x24, #0xc4                  	// #196
     9b4:	b	a54 <grub_udf_mount+0x2e4>
     9b8:	adrp	x0, 0 <read_string>
     9bc:	ldr	x1, [x0]
     9c0:	mov	w0, #0x9                   	// #9
     9c4:	bl	0 <grub_error>
     9c8:	ldp	x25, x26, [sp, #64]
     9cc:	ldp	x27, x28, [sp, #80]
     9d0:	b	7d0 <grub_udf_mount+0x60>
     9d4:	add	x4, x22, #0x8
     9d8:	mov	x3, #0x200                 	// #512
     9dc:	mov	x2, #0x0                   	// #0
     9e0:	mov	x1, x19
     9e4:	mov	x0, x20
     9e8:	bl	0 <grub_disk_read>
     9ec:	cbz	w0, a50 <grub_udf_mount+0x2e0>
     9f0:	adrp	x0, 0 <read_string>
     9f4:	ldr	x1, [x0]
     9f8:	mov	w0, #0x9                   	// #9
     9fc:	bl	0 <grub_error>
     a00:	ldp	x25, x26, [sp, #64]
     a04:	ldp	x27, x28, [sp, #80]
     a08:	b	7d0 <grub_udf_mount+0x60>
     a0c:	ldr	w0, [x22, #3024]
     a10:	cmp	w0, #0x1
     a14:	b.gt	ac0 <grub_udf_mount+0x350>
     a18:	sxtw	x1, w0
     a1c:	add	x4, x1, w0, sxtw #1
     a20:	add	x4, x1, x4, lsl #4
     a24:	add	x4, x22, x4, lsl #2
     a28:	add	x4, x4, #0xa08
     a2c:	mov	x3, x24
     a30:	mov	x2, #0x0                   	// #0
     a34:	mov	x1, x19
     a38:	mov	x0, x20
     a3c:	bl	0 <grub_disk_read>
     a40:	cbnz	w0, adc <grub_udf_mount+0x36c>
     a44:	ldr	w0, [x22, #3024]
     a48:	add	w0, w0, #0x1
     a4c:	str	w0, [x22, #3024]
     a50:	add	w25, w25, #0x1
     a54:	lsl	w19, w25, w21
     a58:	add	x4, sp, #0x68
     a5c:	mov	x3, x23
     a60:	mov	x2, #0x0                   	// #0
     a64:	mov	x1, x19
     a68:	mov	x0, x20
     a6c:	bl	0 <grub_disk_read>
     a70:	cbnz	w0, 9b8 <grub_udf_mount+0x248>
     a74:	ldrh	w0, [sp, #104]
     a78:	cmp	w0, #0x1
     a7c:	b.eq	9d4 <grub_udf_mount+0x264>  // b.none
     a80:	cmp	w0, #0x5
     a84:	b.eq	a0c <grub_udf_mount+0x29c>  // b.none
     a88:	cmp	w0, #0x6
     a8c:	b.eq	af8 <grub_udf_mount+0x388>  // b.none
     a90:	cmp	w0, #0x8
     a94:	b.hi	bc0 <grub_udf_mount+0x450>  // b.pmore
     a98:	b.ne	a50 <grub_udf_mount+0x2e0>  // b.any
     a9c:	ldr	w1, [x22, #3028]
     aa0:	mov	x0, #0x0                   	// #0
     aa4:	cmp	w1, #0x0
     aa8:	b.le	c6c <grub_udf_mount+0x4fc>
     aac:	mov	w8, #0x0                   	// #0
     ab0:	add	x5, x22, #0xb90
     ab4:	mov	w7, #0x1                   	// #1
     ab8:	mov	w6, #0x2                   	// #2
     abc:	b	c00 <grub_udf_mount+0x490>
     ac0:	adrp	x0, 0 <read_string>
     ac4:	ldr	x1, [x0]
     ac8:	mov	w0, #0x9                   	// #9
     acc:	bl	0 <grub_error>
     ad0:	ldp	x25, x26, [sp, #64]
     ad4:	ldp	x27, x28, [sp, #80]
     ad8:	b	7d0 <grub_udf_mount+0x60>
     adc:	adrp	x0, 0 <read_string>
     ae0:	ldr	x1, [x0]
     ae4:	mov	w0, #0x9                   	// #9
     ae8:	bl	0 <grub_error>
     aec:	ldp	x25, x26, [sp, #64]
     af0:	ldp	x27, x28, [sp, #80]
     af4:	b	7d0 <grub_udf_mount+0x60>
     af8:	mov	x4, x27
     afc:	mov	x3, x26
     b00:	mov	x2, #0x0                   	// #0
     b04:	mov	x1, x19
     b08:	mov	x0, x20
     b0c:	bl	0 <grub_disk_read>
     b10:	cbnz	w0, b6c <grub_udf_mount+0x3fc>
     b14:	ldr	w1, [x22, #788]
     b18:	ldr	w0, [x22, #3028]
     b1c:	add	w0, w1, w0
     b20:	cmp	w0, #0x6
     b24:	b.hi	b88 <grub_udf_mount+0x418>  // b.pmore
     b28:	add	x0, x22, #0x3c0
     b2c:	mov	w2, w1
     b30:	cmp	w1, #0x0
     b34:	b.le	a50 <grub_udf_mount+0x2e0>
     b38:	ldrb	w1, [x0]
     b3c:	cmp	w1, #0x1
     b40:	b.ne	ba4 <grub_udf_mount+0x434>  // b.any
     b44:	ldr	w1, [x22, #3028]
     b48:	add	w3, w1, #0x1
     b4c:	str	w3, [x22, #3028]
     b50:	add	x1, x22, w1, sxtw #3
     b54:	str	x0, [x1, #2960]
     b58:	ldrb	w1, [x0, #1]
     b5c:	add	x0, x0, x1
     b60:	subs	w2, w2, #0x1
     b64:	b.ne	b38 <grub_udf_mount+0x3c8>  // b.any
     b68:	b	a50 <grub_udf_mount+0x2e0>
     b6c:	adrp	x0, 0 <read_string>
     b70:	ldr	x1, [x0]
     b74:	mov	w0, #0x9                   	// #9
     b78:	bl	0 <grub_error>
     b7c:	ldp	x25, x26, [sp, #64]
     b80:	ldp	x27, x28, [sp, #80]
     b84:	b	7d0 <grub_udf_mount+0x60>
     b88:	adrp	x0, 0 <read_string>
     b8c:	ldr	x1, [x0]
     b90:	mov	w0, #0x9                   	// #9
     b94:	bl	0 <grub_error>
     b98:	ldp	x25, x26, [sp, #64]
     b9c:	ldp	x27, x28, [sp, #80]
     ba0:	b	7d0 <grub_udf_mount+0x60>
     ba4:	adrp	x0, 0 <read_string>
     ba8:	ldr	x1, [x0]
     bac:	mov	w0, #0x9                   	// #9
     bb0:	bl	0 <grub_error>
     bb4:	ldp	x25, x26, [sp, #64]
     bb8:	ldp	x27, x28, [sp, #80]
     bbc:	b	7d0 <grub_udf_mount+0x60>
     bc0:	adrp	x0, 0 <read_string>
     bc4:	ldr	x1, [x0]
     bc8:	mov	w0, #0x9                   	// #9
     bcc:	bl	0 <grub_error>
     bd0:	ldp	x25, x26, [sp, #64]
     bd4:	ldp	x27, x28, [sp, #80]
     bd8:	b	7d0 <grub_udf_mount+0x60>
     bdc:	mov	w1, w8
     be0:	strh	w1, [x3, #4]
     be4:	ldr	w2, [x22, #3024]
     be8:	cmp	w2, w1
     bec:	b.eq	c48 <grub_udf_mount+0x4d8>  // b.none
     bf0:	add	x0, x0, #0x1
     bf4:	ldr	w1, [x22, #3028]
     bf8:	cmp	w1, w0
     bfc:	b.le	c6c <grub_udf_mount+0x4fc>
     c00:	ldr	w1, [x22, #3024]
     c04:	cmp	w1, #0x0
     c08:	b.le	c64 <grub_udf_mount+0x4f4>
     c0c:	ldr	x3, [x5, x0, lsl #3]
     c10:	ldrh	w2, [x3, #4]
     c14:	ldrh	w4, [x22, #2590]
     c18:	cmp	w4, w2
     c1c:	b.eq	bdc <grub_udf_mount+0x46c>  // b.none
     c20:	cmp	w1, #0x1
     c24:	b.le	c40 <grub_udf_mount+0x4d0>
     c28:	ldrh	w4, [x22, #2786]
     c2c:	mov	w1, w6
     c30:	cmp	w4, w2
     c34:	b.ne	be4 <grub_udf_mount+0x474>  // b.any
     c38:	mov	w1, w7
     c3c:	b	be0 <grub_udf_mount+0x470>
     c40:	mov	w1, w7
     c44:	b	be4 <grub_udf_mount+0x474>
     c48:	adrp	x0, 0 <read_string>
     c4c:	ldr	x1, [x0]
     c50:	mov	w0, #0x9                   	// #9
     c54:	bl	0 <grub_error>
     c58:	ldp	x25, x26, [sp, #64]
     c5c:	ldp	x27, x28, [sp, #80]
     c60:	b	7d0 <grub_udf_mount+0x60>
     c64:	mov	w1, w8
     c68:	b	be4 <grub_udf_mount+0x474>
     c6c:	ldr	w2, [x22, #772]
     c70:	ldrh	w1, [x22, #776]
     c74:	mov	x0, x22
     c78:	bl	2fc <grub_udf_get_block>
     c7c:	mov	w1, w0
     c80:	adrp	x0, 0 <read_string>
     c84:	ldr	x0, [x0]
     c88:	ldr	w0, [x0]
     c8c:	cbnz	w0, d10 <grub_udf_mount+0x5a0>
     c90:	add	x4, sp, #0x80
     c94:	mov	x3, #0x1e0                 	// #480
     c98:	mov	x2, #0x0                   	// #0
     c9c:	lsl	w1, w1, w21
     ca0:	mov	x0, x20
     ca4:	bl	0 <grub_disk_read>
     ca8:	cbnz	w0, cd8 <grub_udf_mount+0x568>
     cac:	ldrh	w0, [sp, #128]
     cb0:	cmp	w0, #0x100
     cb4:	b.ne	cf4 <grub_udf_mount+0x584>  // b.any
     cb8:	add	x0, x22, #0xbc0
     cbc:	add	x1, sp, #0x200
     cc0:	ldp	x2, x3, [x1, #16]
     cc4:	stp	x2, x3, [x0]
     cc8:	ldp	x23, x24, [sp, #48]
     ccc:	ldp	x25, x26, [sp, #64]
     cd0:	ldp	x27, x28, [sp, #80]
     cd4:	b	7e0 <grub_udf_mount+0x70>
     cd8:	adrp	x0, 0 <read_string>
     cdc:	ldr	x1, [x0]
     ce0:	mov	w0, #0x9                   	// #9
     ce4:	bl	0 <grub_error>
     ce8:	ldp	x25, x26, [sp, #64]
     cec:	ldp	x27, x28, [sp, #80]
     cf0:	b	7d0 <grub_udf_mount+0x60>
     cf4:	adrp	x0, 0 <read_string>
     cf8:	ldr	x1, [x0]
     cfc:	mov	w0, #0x9                   	// #9
     d00:	bl	0 <grub_error>
     d04:	ldp	x25, x26, [sp, #64]
     d08:	ldp	x27, x28, [sp, #80]
     d0c:	b	7d0 <grub_udf_mount+0x60>
     d10:	ldp	x25, x26, [sp, #64]
     d14:	ldp	x27, x28, [sp, #80]
     d18:	b	7d0 <grub_udf_mount+0x60>
     d1c:	nop
	...

0000000000000da0 <grub_udf_label>:
     da0:	stp	x29, x30, [sp, #-32]!
     da4:	mov	x29, sp
     da8:	stp	x19, x20, [sp, #16]
     dac:	mov	x20, x1
     db0:	ldr	x0, [x0]
     db4:	bl	770 <grub_udf_mount>
     db8:	cbz	x0, df0 <grub_udf_label+0x50>
     dbc:	mov	x19, x0
     dc0:	mov	x1, #0x80                  	// #128
     dc4:	add	x0, x0, #0x25c
     dc8:	bl	2b8 <read_dstring>
     dcc:	str	x0, [x20]
     dd0:	mov	x0, x19
     dd4:	bl	0 <grub_free>
     dd8:	adrp	x0, 0 <read_string>
     ddc:	ldr	x0, [x0]
     de0:	ldr	w0, [x0]
     de4:	ldp	x19, x20, [sp, #16]
     de8:	ldp	x29, x30, [sp], #32
     dec:	ret
     df0:	str	xzr, [x20]
     df4:	b	dd8 <grub_udf_label+0x38>
	...

0000000000000e00 <grub_udf_dir_iter>:
     e00:	stp	x29, x30, [sp, #-112]!
     e04:	mov	x29, sp
     e08:	stp	x19, x20, [sp, #16]
     e0c:	stp	x21, x22, [sp, #32]
     e10:	mov	x22, x0
     e14:	mov	w19, w1
     e18:	mov	x20, x2
     e1c:	mov	x21, x3
     e20:	mov	x2, #0x10                  	// #16
     e24:	mov	w1, #0x0                   	// #0
     e28:	add	x0, sp, #0x60
     e2c:	bl	0 <grub_memset>
     e30:	and	w19, w19, #0xff
     e34:	cmp	w19, #0x2
     e38:	cset	w1, eq  // eq = none
     e3c:	ldrb	w0, [sp, #96]
     e40:	bfxil	w0, w1, #0, #1
     e44:	strb	w0, [sp, #96]
     e48:	ldrh	w0, [x20, #12]
     e4c:	cmp	w0, #0x105
     e50:	b.eq	e88 <grub_udf_dir_iter+0x88>  // b.none
     e54:	cmp	w0, #0x10a
     e58:	b.eq	1038 <grub_udf_dir_iter+0x238>  // b.none
     e5c:	mov	x0, x20
     e60:	bl	0 <grub_free>
     e64:	ldr	x3, [x21]
     e68:	ldr	x2, [x21, #8]
     e6c:	add	x1, sp, #0x60
     e70:	mov	x0, x22
     e74:	blr	x3
     e78:	ldp	x19, x20, [sp, #16]
     e7c:	ldp	x21, x22, [sp, #32]
     e80:	ldp	x29, x30, [sp], #112
     e84:	ret
     e88:	add	x0, x20, #0x60
     e8c:	ldrh	w1, [x0]
     e90:	and	w2, w1, #0xf000
     e94:	cmp	w2, #0x1, lsl #12
     e98:	b.ne	e5c <grub_udf_dir_iter+0x5c>  // b.any
     e9c:	ldrh	w3, [x0, #2]
     ea0:	ldrb	w4, [x0, #4]
     ea4:	ldrb	w5, [x0, #5]
     ea8:	ldrb	w8, [x0, #6]
     eac:	ldrb	w9, [x0, #7]
     eb0:	ldrb	w10, [x0, #8]
     eb4:	and	w0, w1, #0xfff
     eb8:	tbz	w1, #11, ec8 <grub_udf_dir_iter+0xc8>
     ebc:	orr	w0, w0, #0xfffff000
     ec0:	cmn	w0, #0x7ff
     ec4:	csel	w0, w0, wzr, ne  // ne = any
     ec8:	adrp	x1, 0 <read_string>
     ecc:	ldr	x1, [x1]
     ed0:	ldp	x6, x7, [x1]
     ed4:	stp	x6, x7, [sp, #72]
     ed8:	ldr	x1, [x1, #16]
     edc:	str	x1, [sp, #88]
     ee0:	adrp	x1, 0 <read_string>
     ee4:	ldr	x1, [x1]
     ee8:	ldr	x2, [x1]
     eec:	str	x2, [sp, #56]
     ef0:	ldr	w1, [x1, #8]
     ef4:	str	w1, [sp, #64]
     ef8:	sub	w2, w3, #0x76d
     efc:	and	w2, w2, #0xffff
     f00:	mov	w1, #0x0                   	// #0
     f04:	cmp	w2, #0x89
     f08:	b.hi	1010 <grub_udf_dir_iter+0x210>  // b.pmore
     f0c:	sub	w2, w4, #0x1
     f10:	and	w2, w2, #0xff
     f14:	cmp	w2, #0xb
     f18:	b.hi	1010 <grub_udf_dir_iter+0x210>  // b.pmore
     f1c:	sub	w2, w3, #0x1
     f20:	asr	w2, w2, #2
     f24:	sub	w2, w2, #0x1ed
     f28:	sub	w1, w3, #0x7b5
     f2c:	sub	w1, w1, w2, lsl #2
     f30:	mov	w7, #0x1f80                	// #8064
     f34:	movk	w7, #0x786, lsl #16
     f38:	mov	w6, #0xec00                	// #60416
     f3c:	movk	w6, #0x5a4, lsl #16
     f40:	madd	w2, w2, w7, w6
     f44:	mov	w6, #0x3380                	// #13184
     f48:	movk	w6, #0x1e1, lsl #16
     f4c:	madd	w2, w1, w6, w2
     f50:	sub	w7, w4, #0x1
     f54:	add	x6, sp, #0x48
     f58:	ldrh	w6, [x6, w7, sxtw #1]
     f5c:	mov	w11, #0x5180                	// #20864
     f60:	movk	w11, #0x1, lsl #16
     f64:	madd	w6, w6, w11, w2
     f68:	cmp	w4, #0x2
     f6c:	ccmp	w1, #0x3, #0x0, hi  // hi = pmore
     f70:	b.eq	1040 <grub_udf_dir_iter+0x240>  // b.none
     f74:	sub	w2, w5, #0x1
     f78:	mov	w11, #0x5180                	// #20864
     f7c:	movk	w11, #0x1, lsl #16
     f80:	madd	w6, w2, w11, w6
     f84:	add	x2, sp, #0x38
     f88:	ldrb	w2, [x2, w7, sxtw]
     f8c:	cmp	w2, w5
     f90:	b.cs	fb4 <grub_udf_dir_iter+0x1b4>  // b.hs, b.nlast
     f94:	cbz	w1, 1010 <grub_udf_dir_iter+0x210>
     f98:	mov	x2, #0x0                   	// #0
     f9c:	bfi	x2, x4, #16, #8
     fa0:	bfi	x2, x5, #24, #8
     fa4:	mov	w1, #0x0                   	// #0
     fa8:	mov	w4, #0x1d02                	// #7426
     fac:	cmp	w4, w2, lsr #16
     fb0:	b.ne	1010 <grub_udf_dir_iter+0x210>  // b.any
     fb4:	mov	w1, #0x0                   	// #0
     fb8:	cbz	w5, 1010 <grub_udf_dir_iter+0x210>
     fbc:	cmp	w8, #0x17
     fc0:	b.hi	1010 <grub_udf_dir_iter+0x210>  // b.pmore
     fc4:	cmp	w9, #0x3b
     fc8:	b.hi	1010 <grub_udf_dir_iter+0x210>  // b.pmore
     fcc:	cmp	w10, #0x3c
     fd0:	b.hi	1010 <grub_udf_dir_iter+0x210>  // b.pmore
     fd4:	mov	w1, #0xe10                 	// #3600
     fd8:	madd	w6, w8, w1, w6
     fdc:	lsl	w1, w9, #4
     fe0:	sub	w9, w1, w9
     fe4:	add	w6, w6, w9, lsl #2
     fe8:	add	w10, w10, w6
     fec:	cmp	w3, #0x7bc
     ff0:	ccmp	w10, #0x0, #0x0, hi  // hi = pmore
     ff4:	b.lt	1058 <grub_udf_dir_iter+0x258>  // b.tstop
     ff8:	cmp	w3, #0x7a7
     ffc:	mov	w1, #0x0                   	// #0
    1000:	ccmp	w10, #0x0, #0x4, ls  // ls = plast
    1004:	b.gt	1010 <grub_udf_dir_iter+0x210>
    1008:	str	w10, [sp, #100]
    100c:	mov	w1, #0x1                   	// #1
    1010:	cmp	w1, #0x0
    1014:	cset	w2, ne  // ne = any
    1018:	ldrb	w1, [sp, #96]
    101c:	bfi	w1, w2, #1, #1
    1020:	strb	w1, [sp, #96]
    1024:	sub	w0, w0, w0, lsl #4
    1028:	ldr	w1, [sp, #100]
    102c:	add	w0, w1, w0, lsl #2
    1030:	str	w0, [sp, #100]
    1034:	b	e5c <grub_udf_dir_iter+0x5c>
    1038:	add	x0, x20, #0x68
    103c:	b	e8c <grub_udf_dir_iter+0x8c>
    1040:	madd	w6, w5, w11, w6
    1044:	add	x1, sp, #0x38
    1048:	ldrb	w1, [x1, w7, sxtw]
    104c:	cmp	w1, w5
    1050:	b.cc	f98 <grub_udf_dir_iter+0x198>  // b.lo, b.ul, b.last
    1054:	b	fb4 <grub_udf_dir_iter+0x1b4>
    1058:	mov	w1, #0x0                   	// #0
    105c:	b	1010 <grub_udf_dir_iter+0x210>
	...

0000000000001070 <grub_udf_uuid>:
    1070:	sub	sp, sp, #0x80
    1074:	stp	x29, x30, [sp, #32]
    1078:	add	x29, sp, #0x20
    107c:	stp	x19, x20, [sp, #48]
    1080:	mov	x20, x1
    1084:	ldr	x0, [x0]
    1088:	bl	770 <grub_udf_mount>
    108c:	cbz	x0, 1268 <grub_udf_uuid+0x1f8>
    1090:	stp	x21, x22, [sp, #64]
    1094:	mov	x19, x0
    1098:	mov	x1, #0x80                  	// #128
    109c:	add	x0, x0, #0x50
    10a0:	bl	2b8 <read_dstring>
    10a4:	mov	x21, x0
    10a8:	cbz	x0, 1260 <grub_udf_uuid+0x1f0>
    10ac:	str	x23, [sp, #80]
    10b0:	bl	0 <grub_strlen>
    10b4:	mov	x23, x0
    10b8:	mov	x22, #0x0                   	// #0
    10bc:	cmp	x0, #0x7
    10c0:	b.ls	11a0 <grub_udf_uuid+0x130>  // b.plast
    10c4:	mov	x0, #0x11                  	// #17
    10c8:	bl	0 <grub_malloc>
    10cc:	mov	x22, x0
    10d0:	cbz	x0, 11a0 <grub_udf_uuid+0x130>
    10d4:	mov	x2, #0x11                  	// #17
    10d8:	mov	w1, #0x0                   	// #0
    10dc:	add	x0, sp, #0x68
    10e0:	bl	0 <grub_memset>
    10e4:	cmp	x23, #0x10
    10e8:	mov	x2, #0x10                  	// #16
    10ec:	csel	x2, x23, x2, ls  // ls = plast
    10f0:	mov	x1, x21
    10f4:	add	x0, sp, #0x68
    10f8:	bl	0 <grub_memmove>
    10fc:	add	x0, sp, #0x68
    1100:	mov	x2, #0x0                   	// #0
    1104:	b	1118 <grub_udf_uuid+0xa8>
    1108:	add	x2, x2, #0x1
    110c:	add	x0, x0, #0x1
    1110:	cmp	x2, #0x10
    1114:	b.eq	11d8 <grub_udf_uuid+0x168>  // b.none
    1118:	ldrb	w1, [x0]
    111c:	sub	w3, w1, #0x30
    1120:	cmp	w3, #0x9
    1124:	b.ls	1108 <grub_udf_uuid+0x98>  // b.plast
    1128:	and	w1, w1, #0xffffffdf
    112c:	sub	w1, w1, #0x41
    1130:	and	w1, w1, #0xff
    1134:	cmp	w1, #0x5
    1138:	b.ls	1108 <grub_udf_uuid+0x98>  // b.plast
    113c:	cmp	x2, #0x7
    1140:	b.ls	11e0 <grub_udf_uuid+0x170>  // b.plast
    1144:	cmp	x2, #0xf
    1148:	b.hi	1224 <grub_udf_uuid+0x1b4>  // b.pmore
    114c:	mov	x1, #0x1                   	// #1
    1150:	sub	x4, x22, #0x1
    1154:	add	x0, sp, #0x68
    1158:	add	x0, x1, x0
    115c:	ldurb	w0, [x0, #-1]
    1160:	sub	w3, w0, #0x41
    1164:	add	w2, w0, #0x20
    1168:	cmp	w3, #0x1a
    116c:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    1170:	strb	w0, [x4, x1]
    1174:	add	x1, x1, #0x1
    1178:	cmp	x1, #0x9
    117c:	b.ne	1154 <grub_udf_uuid+0xe4>  // b.any
    1180:	ldrb	w6, [sp, #115]
    1184:	ldrb	w5, [sp, #114]
    1188:	ldrb	w4, [sp, #113]
    118c:	ldrb	w3, [sp, #112]
    1190:	adrp	x0, 0 <read_string>
    1194:	ldr	x2, [x0]
    1198:	add	x0, x22, #0x8
    119c:	bl	0 <grub_snprintf>
    11a0:	str	x22, [x20]
    11a4:	mov	x0, x21
    11a8:	bl	0 <grub_free>
    11ac:	ldr	x23, [sp, #80]
    11b0:	mov	x0, x19
    11b4:	bl	0 <grub_free>
    11b8:	ldp	x21, x22, [sp, #64]
    11bc:	adrp	x0, 0 <read_string>
    11c0:	ldr	x0, [x0]
    11c4:	ldr	w0, [x0]
    11c8:	ldp	x19, x20, [sp, #48]
    11cc:	ldp	x29, x30, [sp, #32]
    11d0:	add	sp, sp, #0x80
    11d4:	ret
    11d8:	mov	x3, #0x1                   	// #1
    11dc:	b	1228 <grub_udf_uuid+0x1b8>
    11e0:	ldrb	w0, [sp, #111]
    11e4:	str	w0, [sp, #16]
    11e8:	ldrb	w0, [sp, #110]
    11ec:	str	w0, [sp, #8]
    11f0:	ldrb	w0, [sp, #109]
    11f4:	str	w0, [sp]
    11f8:	ldrb	w7, [sp, #108]
    11fc:	ldrb	w6, [sp, #107]
    1200:	ldrb	w5, [sp, #106]
    1204:	ldrb	w4, [sp, #105]
    1208:	ldrb	w3, [sp, #104]
    120c:	adrp	x0, 0 <read_string>
    1210:	ldr	x2, [x0]
    1214:	mov	x1, #0x11                  	// #17
    1218:	mov	x0, x22
    121c:	bl	0 <grub_snprintf>
    1220:	b	11a0 <grub_udf_uuid+0x130>
    1224:	mov	x3, #0x1                   	// #1
    1228:	sub	x4, x22, #0x1
    122c:	add	x0, sp, #0x68
    1230:	add	x0, x3, x0
    1234:	ldurb	w2, [x0, #-1]
    1238:	sub	w1, w2, #0x41
    123c:	add	w0, w2, #0x20
    1240:	cmp	w1, #0x1a
    1244:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1248:	strb	w2, [x4, x3]
    124c:	add	x3, x3, #0x1
    1250:	cmp	x3, #0x11
    1254:	b.ne	122c <grub_udf_uuid+0x1bc>  // b.any
    1258:	strb	wzr, [x22, #16]
    125c:	b	11a0 <grub_udf_uuid+0x130>
    1260:	str	xzr, [x20]
    1264:	b	11b0 <grub_udf_uuid+0x140>
    1268:	str	xzr, [x20]
    126c:	b	11bc <grub_udf_uuid+0x14c>
	...

0000000000001288 <grub_udf_close>:
    1288:	stp	x29, x30, [sp, #-32]!
    128c:	mov	x29, sp
    1290:	str	x19, [sp, #16]
    1294:	ldr	x19, [x0, #80]
    1298:	cbz	x19, 12ac <grub_udf_close+0x24>
    129c:	ldr	x0, [x19]
    12a0:	bl	0 <grub_free>
    12a4:	mov	x0, x19
    12a8:	bl	0 <grub_free>
    12ac:	adrp	x0, 0 <read_string>
    12b0:	ldr	x0, [x0]
    12b4:	ldr	x0, [x0]
    12b8:	bl	0 <grub_dl_unref>
    12bc:	mov	w0, #0x0                   	// #0
    12c0:	ldr	x19, [sp, #16]
    12c4:	ldp	x29, x30, [sp], #32
    12c8:	ret
    12cc:	nop
	...

00000000000012d8 <grub_udf_read_file>:
    12d8:	sub	sp, sp, #0x40
    12dc:	stp	x29, x30, [sp, #32]
    12e0:	add	x29, sp, #0x20
    12e4:	ldrh	w7, [x0, #46]
    12e8:	and	w7, w7, #0x7
    12ec:	cmp	w7, #0x2
    12f0:	b.eq	1354 <grub_udf_read_file+0x7c>  // b.none
    12f4:	str	x19, [sp, #48]
    12f8:	mov	x8, x0
    12fc:	mov	x19, x4
    1300:	cmp	w7, #0x3
    1304:	b.ne	136c <grub_udf_read_file+0x94>  // b.any
    1308:	ldrh	w0, [x0, #12]
    130c:	cmp	w0, #0x105
    1310:	b.eq	1344 <grub_udf_read_file+0x6c>  // b.none
    1314:	add	x1, x8, #0xe4
    1318:	ldr	w0, [x8, #220]
    131c:	add	x1, x1, x0
    1320:	mov	x2, x19
    1324:	add	x1, x1, x3
    1328:	mov	x0, x5
    132c:	bl	0 <grub_memmove>
    1330:	mov	x0, x19
    1334:	ldr	x19, [sp, #48]
    1338:	ldp	x29, x30, [sp, #32]
    133c:	add	sp, sp, #0x40
    1340:	ret
    1344:	add	x1, x8, #0xbc
    1348:	ldr	w0, [x8, #180]
    134c:	add	x1, x1, x0
    1350:	b	1320 <grub_udf_read_file+0x48>
    1354:	adrp	x0, 0 <read_string>
    1358:	ldr	x1, [x0]
    135c:	mov	w0, #0x9                   	// #9
    1360:	bl	0 <grub_error>
    1364:	mov	x0, #0x0                   	// #0
    1368:	b	1338 <grub_udf_read_file+0x60>
    136c:	ldr	x4, [x0]
    1370:	ldr	x0, [x4]
    1374:	str	xzr, [sp, #16]
    1378:	ldr	w4, [x4, #3032]
    137c:	str	w4, [sp, #8]
    1380:	ldur	x4, [x8, #68]
    1384:	str	x4, [sp]
    1388:	adrp	x4, 0 <read_string>
    138c:	ldr	x7, [x4]
    1390:	mov	x6, x5
    1394:	mov	x5, x19
    1398:	mov	x4, x3
    139c:	mov	x3, x2
    13a0:	mov	x2, x1
    13a4:	mov	x1, x8
    13a8:	bl	0 <grub_fshelp_read_file>
    13ac:	ldr	x19, [sp, #48]
    13b0:	b	1338 <grub_udf_read_file+0x60>
    13b4:	nop
	...

00000000000013c8 <grub_udf_read>:
    13c8:	stp	x29, x30, [sp, #-16]!
    13cc:	mov	x29, sp
    13d0:	mov	x5, x1
    13d4:	mov	x4, x2
    13d8:	ldr	x3, [x0, #24]
    13dc:	ldr	x2, [x0, #96]
    13e0:	ldr	x1, [x0, #88]
    13e4:	ldr	x0, [x0, #80]
    13e8:	bl	12d8 <grub_udf_read_file>
    13ec:	ldp	x29, x30, [sp], #16
    13f0:	ret

00000000000013f4 <grub_udf_read_symlink>:
    13f4:	stp	x29, x30, [sp, #-96]!
    13f8:	mov	x29, sp
    13fc:	stp	x21, x22, [sp, #32]
    1400:	ldur	x22, [x0, #68]
    1404:	mov	x21, #0x0                   	// #0
    1408:	cmp	x22, #0x3
    140c:	b.ls	15a0 <grub_udf_read_symlink+0x1ac>  // b.plast
    1410:	stp	x19, x20, [sp, #16]
    1414:	mov	x19, x0
    1418:	mov	x0, x22
    141c:	bl	0 <grub_malloc>
    1420:	mov	x21, x0
    1424:	cbz	x0, 1610 <grub_udf_read_symlink+0x21c>
    1428:	mov	x5, x0
    142c:	mov	x4, x22
    1430:	mov	x3, #0x0                   	// #0
    1434:	mov	x2, #0x0                   	// #0
    1438:	mov	x1, #0x0                   	// #0
    143c:	mov	x0, x19
    1440:	bl	12d8 <grub_udf_read_file>
    1444:	tbnz	x0, #63, 148c <grub_udf_read_symlink+0x98>
    1448:	stp	x23, x24, [sp, #48]
    144c:	lsl	x0, x22, #1
    1450:	add	x0, x0, #0x1
    1454:	bl	0 <grub_malloc>
    1458:	mov	x23, x0
    145c:	cbz	x0, 14a0 <grub_udf_read_symlink+0xac>
    1460:	add	x24, x21, x22
    1464:	cmp	x21, x24
    1468:	b.cs	15f4 <grub_udf_read_symlink+0x200>  // b.hs, b.nlast
    146c:	stp	x25, x26, [sp, #64]
    1470:	stp	x27, x28, [sp, #80]
    1474:	mov	x19, x21
    1478:	mov	x1, #0x0                   	// #0
    147c:	mov	w26, #0x2e                  	// #46
    1480:	mov	w25, #0x2f                  	// #47
    1484:	add	x27, x0, #0x1
    1488:	b	14ec <grub_udf_read_symlink+0xf8>
    148c:	mov	x0, x21
    1490:	bl	0 <grub_free>
    1494:	mov	x21, #0x0                   	// #0
    1498:	ldp	x19, x20, [sp, #16]
    149c:	b	15a0 <grub_udf_read_symlink+0x1ac>
    14a0:	mov	x0, x21
    14a4:	bl	0 <grub_free>
    14a8:	mov	x21, x23
    14ac:	ldp	x19, x20, [sp, #16]
    14b0:	ldp	x23, x24, [sp, #48]
    14b4:	b	15a0 <grub_udf_read_symlink+0x1ac>
    14b8:	cmp	w1, #0x1
    14bc:	b.eq	1568 <grub_udf_read_symlink+0x174>  // b.none
    14c0:	cmp	w1, #0x2
    14c4:	b.ne	156c <grub_udf_read_symlink+0x178>  // b.any
    14c8:	mov	x0, x27
    14cc:	strb	w25, [x23]
    14d0:	add	x19, x19, x20
    14d4:	cmp	x19, x24
    14d8:	b.cs	15ec <grub_udf_read_symlink+0x1f8>  // b.hs, b.nlast
    14dc:	sub	x1, x19, x21
    14e0:	add	x2, x1, #0x4
    14e4:	cmp	x2, x22
    14e8:	b.hi	156c <grub_udf_read_symlink+0x178>  // b.pmore
    14ec:	ldrb	w2, [x19, #2]
    14f0:	cbnz	w2, 156c <grub_udf_read_symlink+0x178>
    14f4:	ldrb	w2, [x19, #3]
    14f8:	cbnz	w2, 156c <grub_udf_read_symlink+0x178>
    14fc:	ldrb	w2, [x19, #1]
    1500:	add	w20, w2, #0x4
    1504:	sxtw	x20, w20
    1508:	add	x1, x1, x20
    150c:	cmp	x1, x22
    1510:	b.hi	156c <grub_udf_read_symlink+0x178>  // b.pmore
    1514:	ldrb	w1, [x19]
    1518:	cmp	w1, #0x3
    151c:	b.eq	15b0 <grub_udf_read_symlink+0x1bc>  // b.none
    1520:	b.ls	14b8 <grub_udf_read_symlink+0xc4>  // b.plast
    1524:	cmp	w1, #0x4
    1528:	b.eq	15d0 <grub_udf_read_symlink+0x1dc>  // b.none
    152c:	cmp	w1, #0x5
    1530:	b.ne	156c <grub_udf_read_symlink+0x178>  // b.any
    1534:	mov	x28, x0
    1538:	cmp	x23, x0
    153c:	b.eq	1544 <grub_udf_read_symlink+0x150>  // b.none
    1540:	strb	w25, [x28], #1
    1544:	mov	x2, x28
    1548:	sub	x1, x20, #0x4
    154c:	add	x0, x19, #0x4
    1550:	bl	0 <read_string>
    1554:	cbz	x0, 156c <grub_udf_read_symlink+0x178>
    1558:	mov	x0, x28
    155c:	bl	0 <grub_strlen>
    1560:	add	x0, x28, x0
    1564:	b	14d0 <grub_udf_read_symlink+0xdc>
    1568:	cbz	w2, 14c8 <grub_udf_read_symlink+0xd4>
    156c:	mov	x0, x21
    1570:	bl	0 <grub_free>
    1574:	mov	x0, x23
    1578:	bl	0 <grub_free>
    157c:	adrp	x0, 0 <read_string>
    1580:	ldr	x1, [x0]
    1584:	mov	w0, #0x9                   	// #9
    1588:	bl	0 <grub_error>
    158c:	mov	x21, #0x0                   	// #0
    1590:	ldp	x19, x20, [sp, #16]
    1594:	ldp	x23, x24, [sp, #48]
    1598:	ldp	x25, x26, [sp, #64]
    159c:	ldp	x27, x28, [sp, #80]
    15a0:	mov	x0, x21
    15a4:	ldp	x21, x22, [sp, #32]
    15a8:	ldp	x29, x30, [sp], #96
    15ac:	ret
    15b0:	mov	x1, x0
    15b4:	cmp	x23, x0
    15b8:	b.eq	15c0 <grub_udf_read_symlink+0x1cc>  // b.none
    15bc:	strb	w25, [x1], #1
    15c0:	mov	x0, x1
    15c4:	strb	w26, [x0], #2
    15c8:	strb	w26, [x1, #1]
    15cc:	b	14d0 <grub_udf_read_symlink+0xdc>
    15d0:	mov	x1, x0
    15d4:	cmp	x23, x0
    15d8:	b.eq	15e0 <grub_udf_read_symlink+0x1ec>  // b.none
    15dc:	strb	w25, [x1], #1
    15e0:	mov	x0, x1
    15e4:	strb	w26, [x0], #1
    15e8:	b	14d0 <grub_udf_read_symlink+0xdc>
    15ec:	ldp	x25, x26, [sp, #64]
    15f0:	ldp	x27, x28, [sp, #80]
    15f4:	strb	wzr, [x0]
    15f8:	mov	x0, x21
    15fc:	bl	0 <grub_free>
    1600:	mov	x21, x23
    1604:	ldp	x19, x20, [sp, #16]
    1608:	ldp	x23, x24, [sp, #48]
    160c:	b	15a0 <grub_udf_read_symlink+0x1ac>
    1610:	ldp	x19, x20, [sp, #16]
    1614:	b	15a0 <grub_udf_read_symlink+0x1ac>
	...

0000000000001620 <grub_udf_open>:
    1620:	stp	x29, x30, [sp, #-64]!
    1624:	mov	x29, sp
    1628:	stp	x19, x20, [sp, #16]
    162c:	stp	x21, x22, [sp, #32]
    1630:	mov	x21, x0
    1634:	mov	x22, x1
    1638:	adrp	x0, 0 <read_string>
    163c:	ldr	x0, [x0]
    1640:	ldr	x0, [x0]
    1644:	bl	0 <grub_dl_ref>
    1648:	ldr	x0, [x21, #8]
    164c:	ldr	x0, [x0]
    1650:	bl	770 <grub_udf_mount>
    1654:	mov	x19, x0
    1658:	cbz	x0, 16e0 <grub_udf_open+0xc0>
    165c:	ldr	w0, [x0, #3032]
    1660:	add	w1, w0, #0x9
    1664:	mov	w0, #0x1                   	// #1
    1668:	lsl	w0, w0, w1
    166c:	sxtw	x0, w0
    1670:	add	x0, x0, #0x10
    1674:	bl	0 <grub_malloc>
    1678:	mov	x20, x0
    167c:	cbz	x0, 16e4 <grub_udf_open+0xc4>
    1680:	mov	x2, x0
    1684:	add	x1, x19, #0xbc0
    1688:	mov	x0, x19
    168c:	bl	6a0 <grub_udf_read_icb>
    1690:	cbnz	w0, 16e4 <grub_udf_open+0xc4>
    1694:	mov	w5, #0x1                   	// #1
    1698:	adrp	x0, 0 <read_string>
    169c:	ldr	x4, [x0]
    16a0:	adrp	x0, 0 <read_string>
    16a4:	ldr	x3, [x0]
    16a8:	add	x2, sp, #0x38
    16ac:	mov	x1, x20
    16b0:	mov	x0, x22
    16b4:	bl	0 <grub_fshelp_find_file>
    16b8:	mov	w22, w0
    16bc:	cbnz	w0, 16e4 <grub_udf_open+0xc4>
    16c0:	ldr	x0, [sp, #56]
    16c4:	str	x0, [x21, #80]
    16c8:	str	xzr, [x21, #24]
    16cc:	ldur	x0, [x0, #68]
    16d0:	str	x0, [x21, #64]
    16d4:	mov	x0, x20
    16d8:	bl	0 <grub_free>
    16dc:	b	1710 <grub_udf_open+0xf0>
    16e0:	mov	x20, x0
    16e4:	adrp	x0, 0 <read_string>
    16e8:	ldr	x0, [x0]
    16ec:	ldr	x0, [x0]
    16f0:	bl	0 <grub_dl_unref>
    16f4:	mov	x0, x19
    16f8:	bl	0 <grub_free>
    16fc:	mov	x0, x20
    1700:	bl	0 <grub_free>
    1704:	adrp	x0, 0 <read_string>
    1708:	ldr	x0, [x0]
    170c:	ldr	w22, [x0]
    1710:	mov	w0, w22
    1714:	ldp	x19, x20, [sp, #16]
    1718:	ldp	x21, x22, [sp, #32]
    171c:	ldp	x29, x30, [sp], #64
    1720:	ret
    1724:	nop
	...

0000000000001748 <grub_udf_iterate_dir>:
    1748:	stp	x29, x30, [sp, #-416]!
    174c:	mov	x29, sp
    1750:	stp	x19, x20, [sp, #16]
    1754:	stp	x23, x24, [sp, #48]
    1758:	stp	x25, x26, [sp, #64]
    175c:	mov	x20, x0
    1760:	mov	x23, x1
    1764:	mov	x24, x2
    1768:	ldr	x0, [x0]
    176c:	ldr	w0, [x0, #3032]
    1770:	add	w1, w0, #0x9
    1774:	mov	w0, #0x1                   	// #1
    1778:	lsl	w0, w0, w1
    177c:	sxtw	x0, w0
    1780:	add	x0, x0, #0x10
    1784:	bl	0 <grub_malloc>
    1788:	mov	w26, #0x0                   	// #0
    178c:	cbz	x0, 198c <grub_udf_iterate_dir+0x244>
    1790:	mov	x19, x0
    1794:	ldr	x0, [x20]
    1798:	ldr	w2, [x0, #3032]
    179c:	add	w0, w2, #0x9
    17a0:	mov	w2, #0x1                   	// #1
    17a4:	lsl	w2, w2, w0
    17a8:	sxtw	x2, w2
    17ac:	add	x2, x2, #0x10
    17b0:	mov	x1, x20
    17b4:	mov	x0, x19
    17b8:	bl	0 <grub_memmove>
    17bc:	mov	x3, x24
    17c0:	mov	x2, x19
    17c4:	mov	w1, #0x2                   	// #2
    17c8:	adrp	x0, 0 <read_string>
    17cc:	ldr	x0, [x0]
    17d0:	blr	x23
    17d4:	mov	w26, w0
    17d8:	cbnz	w0, 1988 <grub_udf_iterate_dir+0x240>
    17dc:	ldur	x0, [x20, #68]
    17e0:	cbz	x0, 198c <grub_udf_iterate_dir+0x244>
    17e4:	stp	x21, x22, [sp, #32]
    17e8:	stp	x27, x28, [sp, #80]
    17ec:	mov	x21, #0x0                   	// #0
    17f0:	mov	x22, #0x26                  	// #38
    17f4:	mov	w27, #0x1                   	// #1
    17f8:	add	x28, sp, #0x18c
    17fc:	b	18ac <grub_udf_iterate_dir+0x164>
    1800:	adrp	x0, 0 <read_string>
    1804:	ldr	x1, [x0]
    1808:	mov	w0, #0x9                   	// #9
    180c:	bl	0 <grub_error>
    1810:	ldp	x21, x22, [sp, #32]
    1814:	ldp	x27, x28, [sp, #80]
    1818:	b	198c <grub_udf_iterate_dir+0x244>
    181c:	ubfx	x0, x0, #1, #1
    1820:	ldrb	w1, [x21, #39]
    1824:	cmp	w1, #0xc
    1828:	mov	w1, #0x3                   	// #3
    182c:	csinc	w0, w1, w0, eq  // eq = none
    1830:	str	w0, [sp, #108]
    1834:	add	x5, sp, #0x78
    1838:	ldrb	w4, [sp, #395]
    183c:	mov	x3, x19
    1840:	mov	x2, #0x0                   	// #0
    1844:	mov	x1, #0x0                   	// #0
    1848:	mov	x0, x20
    184c:	bl	12d8 <grub_udf_read_file>
    1850:	ldrb	w1, [sp, #395]
    1854:	cmp	x0, w1, uxtb
    1858:	b.ne	19c8 <grub_udf_iterate_dir+0x280>  // b.any
    185c:	mov	x2, #0x0                   	// #0
    1860:	and	x1, x1, #0xff
    1864:	add	x0, sp, #0x78
    1868:	bl	0 <read_string>
    186c:	mov	x25, x0
    1870:	cbz	x0, 195c <grub_udf_iterate_dir+0x214>
    1874:	mov	x3, x24
    1878:	mov	x2, x21
    187c:	ldr	w1, [sp, #108]
    1880:	blr	x23
    1884:	cbnz	w0, 1964 <grub_udf_iterate_dir+0x21c>
    1888:	mov	x0, x25
    188c:	bl	0 <grub_free>
    1890:	ldrb	w21, [sp, #395]
    1894:	add	x21, x21, #0x3
    1898:	add	x19, x21, x19
    189c:	and	x21, x19, #0xfffffffffffffffc
    18a0:	ldur	x0, [x20, #68]
    18a4:	cmp	x0, x21
    18a8:	b.ls	197c <grub_udf_iterate_dir+0x234>  // b.plast
    18ac:	add	x5, sp, #0x178
    18b0:	mov	x4, x22
    18b4:	mov	x3, x21
    18b8:	mov	x2, #0x0                   	// #0
    18bc:	mov	x1, #0x0                   	// #0
    18c0:	mov	x0, x20
    18c4:	bl	12d8 <grub_udf_read_file>
    18c8:	cmp	x0, #0x26
    18cc:	b.ne	19a4 <grub_udf_iterate_dir+0x25c>  // b.any
    18d0:	ldrh	w0, [sp, #376]
    18d4:	cmp	w0, #0x101
    18d8:	b.ne	1800 <grub_udf_iterate_dir+0xb8>  // b.any
    18dc:	ldrh	w19, [sp, #412]
    18e0:	add	x19, x19, #0x26
    18e4:	add	x19, x19, x21
    18e8:	ldrb	w0, [sp, #394]
    18ec:	tbnz	w0, #2, 1890 <grub_udf_iterate_dir+0x148>
    18f0:	ldr	x0, [x20]
    18f4:	ldr	w0, [x0, #3032]
    18f8:	add	w0, w0, #0x9
    18fc:	lsl	w0, w27, w0
    1900:	sxtw	x0, w0
    1904:	add	x0, x0, #0x10
    1908:	bl	0 <grub_malloc>
    190c:	mov	x21, x0
    1910:	cbz	x0, 19b0 <grub_udf_iterate_dir+0x268>
    1914:	mov	x2, x0
    1918:	mov	x1, x28
    191c:	ldr	x0, [x20]
    1920:	bl	6a0 <grub_udf_read_icb>
    1924:	cbnz	w0, 19bc <grub_udf_iterate_dir+0x274>
    1928:	ldrb	w0, [sp, #394]
    192c:	tbz	w0, #3, 181c <grub_udf_iterate_dir+0xd4>
    1930:	mov	x3, x24
    1934:	mov	x2, x21
    1938:	mov	w1, #0x2                   	// #2
    193c:	adrp	x0, 0 <read_string>
    1940:	ldr	x0, [x0]
    1944:	blr	x23
    1948:	cbz	w0, 1890 <grub_udf_iterate_dir+0x148>
    194c:	mov	w26, #0x1                   	// #1
    1950:	ldp	x21, x22, [sp, #32]
    1954:	ldp	x27, x28, [sp, #80]
    1958:	b	198c <grub_udf_iterate_dir+0x244>
    195c:	bl	0 <grub_print_error>
    1960:	b	1888 <grub_udf_iterate_dir+0x140>
    1964:	mov	x0, x25
    1968:	bl	0 <grub_free>
    196c:	mov	w26, #0x1                   	// #1
    1970:	ldp	x21, x22, [sp, #32]
    1974:	ldp	x27, x28, [sp, #80]
    1978:	b	198c <grub_udf_iterate_dir+0x244>
    197c:	ldp	x21, x22, [sp, #32]
    1980:	ldp	x27, x28, [sp, #80]
    1984:	b	198c <grub_udf_iterate_dir+0x244>
    1988:	mov	w26, #0x1                   	// #1
    198c:	mov	w0, w26
    1990:	ldp	x19, x20, [sp, #16]
    1994:	ldp	x23, x24, [sp, #48]
    1998:	ldp	x25, x26, [sp, #64]
    199c:	ldp	x29, x30, [sp], #416
    19a0:	ret
    19a4:	ldp	x21, x22, [sp, #32]
    19a8:	ldp	x27, x28, [sp, #80]
    19ac:	b	198c <grub_udf_iterate_dir+0x244>
    19b0:	ldp	x21, x22, [sp, #32]
    19b4:	ldp	x27, x28, [sp, #80]
    19b8:	b	198c <grub_udf_iterate_dir+0x244>
    19bc:	ldp	x21, x22, [sp, #32]
    19c0:	ldp	x27, x28, [sp, #80]
    19c4:	b	198c <grub_udf_iterate_dir+0x244>
    19c8:	ldp	x21, x22, [sp, #32]
    19cc:	ldp	x27, x28, [sp, #80]
    19d0:	b	198c <grub_udf_iterate_dir+0x244>
    19d4:	nop
	...

00000000000019f0 <grub_udf_dir>:
    19f0:	stp	x29, x30, [sp, #-80]!
    19f4:	mov	x29, sp
    19f8:	stp	x19, x20, [sp, #16]
    19fc:	str	x21, [sp, #32]
    1a00:	mov	x19, x0
    1a04:	mov	x21, x1
    1a08:	str	x2, [sp, #64]
    1a0c:	str	x3, [sp, #72]
    1a10:	str	xzr, [sp, #56]
    1a14:	adrp	x0, 0 <read_string>
    1a18:	ldr	x0, [x0]
    1a1c:	ldr	x0, [x0]
    1a20:	bl	0 <grub_dl_ref>
    1a24:	ldr	x0, [x19]
    1a28:	bl	770 <grub_udf_mount>
    1a2c:	mov	x19, x0
    1a30:	mov	x20, x0
    1a34:	cbz	x0, 1a70 <grub_udf_dir+0x80>
    1a38:	ldr	w0, [x0, #3032]
    1a3c:	add	w1, w0, #0x9
    1a40:	mov	w0, #0x1                   	// #1
    1a44:	lsl	w0, w0, w1
    1a48:	sxtw	x0, w0
    1a4c:	add	x0, x0, #0x10
    1a50:	bl	0 <grub_malloc>
    1a54:	mov	x20, x0
    1a58:	cbz	x0, 1a70 <grub_udf_dir+0x80>
    1a5c:	mov	x2, x0
    1a60:	add	x1, x19, #0xbc0
    1a64:	mov	x0, x19
    1a68:	bl	6a0 <grub_udf_read_icb>
    1a6c:	cbz	w0, 1aac <grub_udf_dir+0xbc>
    1a70:	mov	x0, x20
    1a74:	bl	0 <grub_free>
    1a78:	mov	x0, x19
    1a7c:	bl	0 <grub_free>
    1a80:	adrp	x0, 0 <read_string>
    1a84:	ldr	x0, [x0]
    1a88:	ldr	x0, [x0]
    1a8c:	bl	0 <grub_dl_unref>
    1a90:	adrp	x0, 0 <read_string>
    1a94:	ldr	x0, [x0]
    1a98:	ldr	w0, [x0]
    1a9c:	ldp	x19, x20, [sp, #16]
    1aa0:	ldr	x21, [sp, #32]
    1aa4:	ldp	x29, x30, [sp], #80
    1aa8:	ret
    1aac:	mov	w5, #0x2                   	// #2
    1ab0:	adrp	x0, 0 <read_string>
    1ab4:	ldr	x4, [x0]
    1ab8:	adrp	x0, 0 <read_string>
    1abc:	ldr	x3, [x0]
    1ac0:	add	x2, sp, #0x38
    1ac4:	mov	x1, x20
    1ac8:	mov	x0, x21
    1acc:	bl	0 <grub_fshelp_find_file>
    1ad0:	cbnz	w0, 1a70 <grub_udf_dir+0x80>
    1ad4:	add	x2, sp, #0x40
    1ad8:	adrp	x0, 0 <read_string>
    1adc:	ldr	x1, [x0]
    1ae0:	ldr	x0, [sp, #56]
    1ae4:	bl	1748 <grub_udf_iterate_dir>
    1ae8:	ldr	x0, [sp, #56]
    1aec:	cmp	x0, x20
    1af0:	b.eq	1a70 <grub_udf_dir+0x80>  // b.none
    1af4:	bl	0 <grub_free>
    1af8:	b	1a70 <grub_udf_dir+0x80>
    1afc:	nop
	...

0000000000001b28 <grub_mod_init>:
    1b28:	stp	x29, x30, [sp, #-32]!
    1b2c:	mov	x29, sp
    1b30:	str	x19, [sp, #16]
    1b34:	mov	x19, x0
    1b38:	adrp	x0, 0 <read_string>
    1b3c:	ldr	x1, [x0]
    1b40:	add	x1, x1, #0x10
    1b44:	adrp	x0, 0 <read_string>
    1b48:	ldr	x0, [x0]
    1b4c:	bl	0 <grub_list_push>
    1b50:	adrp	x0, 0 <read_string>
    1b54:	ldr	x0, [x0]
    1b58:	str	x19, [x0]
    1b5c:	ldr	x19, [sp, #16]
    1b60:	ldp	x29, x30, [sp], #32
    1b64:	ret
	...

0000000000001b80 <grub_mod_fini>:
    1b80:	stp	x29, x30, [sp, #-16]!
    1b84:	mov	x29, sp
    1b88:	adrp	x0, 0 <read_string>
    1b8c:	ldr	x0, [x0]
    1b90:	add	x0, x0, #0x10
    1b94:	bl	0 <grub_list_remove>
    1b98:	ldp	x29, x30, [sp], #16
    1b9c:	ret
	...
