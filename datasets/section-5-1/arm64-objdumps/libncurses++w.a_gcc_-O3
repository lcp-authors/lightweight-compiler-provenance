In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libncurses++w.a_gcc_-O3:

cursesf.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11NCursesForm12On_Form_InitEv>:
   0:	ret
   4:	nop

0000000000000008 <_ZN11NCursesForm13On_Field_InitER16NCursesFormField>:
   8:	ret
   c:	nop

0000000000000010 <_ZN11NCursesForm10virtualizeEi>:
  10:	mov	w0, w1
  14:	cmp	w1, #0x19
  18:	b.gt	60 <_ZN11NCursesForm10virtualizeEi+0x50>
  1c:	cmp	w1, #0x0
  20:	b.le	4c <_ZN11NCursesForm10virtualizeEi+0x3c>
  24:	sub	w2, w1, #0x1
  28:	cmp	w2, #0x18
  2c:	b.hi	4c <_ZN11NCursesForm10virtualizeEi+0x3c>  // b.pmore
  30:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
  34:	add	x1, x1, #0x0
  38:	ldrb	w1, [x1, w2, uxtw]
  3c:	adr	x2, 48 <_ZN11NCursesForm10virtualizeEi+0x38>
  40:	add	x1, x2, w1, sxtb #2
  44:	br	x1
  48:	mov	w0, #0x280                 	// #640
  4c:	ret
  50:	mov	w0, #0x204                 	// #516
  54:	ret
  58:	mov	w0, #0x21e                 	// #542
  5c:	ret
  60:	cmp	w1, #0x107
  64:	b.eq	fc <_ZN11NCursesForm10virtualizeEi+0xec>  // b.none
  68:	b.le	90 <_ZN11NCursesForm10virtualizeEi+0x80>
  6c:	cmp	w1, #0x153
  70:	b.eq	104 <_ZN11NCursesForm10virtualizeEi+0xf4>  // b.none
  74:	b.le	b4 <_ZN11NCursesForm10virtualizeEi+0xa4>
  78:	cmp	w1, #0x157
  7c:	b.eq	58 <_ZN11NCursesForm10virtualizeEi+0x48>  // b.none
  80:	cmp	w1, #0x168
  84:	mov	w1, #0x207                 	// #519
  88:	csel	w0, w0, w1, ne  // ne = any
  8c:	ret
  90:	cmp	w1, #0x104
  94:	b.eq	10c <_ZN11NCursesForm10virtualizeEi+0xfc>  // b.none
  98:	b.le	cc <_ZN11NCursesForm10virtualizeEi+0xbc>
  9c:	cmp	w1, #0x105
  a0:	b.eq	f4 <_ZN11NCursesForm10virtualizeEi+0xe4>  // b.none
  a4:	cmp	w1, #0x106
  a8:	mov	w1, #0x206                 	// #518
  ac:	csel	w0, w0, w1, ne  // ne = any
  b0:	ret
  b4:	cmp	w1, #0x14d
  b8:	b.eq	ec <_ZN11NCursesForm10virtualizeEi+0xdc>  // b.none
  bc:	cmp	w1, #0x152
  c0:	mov	w1, #0x200                 	// #512
  c4:	csel	w0, w0, w1, ne  // ne = any
  c8:	ret
  cc:	cmp	w1, #0x102
  d0:	b.eq	e4 <_ZN11NCursesForm10virtualizeEi+0xd4>  // b.none
  d4:	cmp	w1, #0x103
  d8:	mov	w1, #0x21c                 	// #540
  dc:	csel	w0, w0, w1, ne  // ne = any
  e0:	ret
  e4:	mov	w0, #0x21d                 	// #541
  e8:	ret
  ec:	mov	w0, #0x227                 	// #551
  f0:	ret
  f4:	mov	w0, #0x210                 	// #528
  f8:	ret
  fc:	mov	w0, #0x222                 	// #546
 100:	ret
 104:	mov	w0, #0x201                 	// #513
 108:	ret
 10c:	mov	w0, #0x211                 	// #529
 110:	ret
 114:	mov	w0, #0x21f                 	// #543
 118:	ret
 11c:	mov	w0, #0x224                 	// #548
 120:	ret
 124:	mov	w0, #0x217                 	// #535
 128:	ret
 12c:	mov	w0, #0x20f                 	// #527
 130:	ret
 134:	mov	w0, #0x205                 	// #517
 138:	ret
 13c:	mov	w0, #0x216                 	// #534
 140:	ret
 144:	mov	w0, #0x223                 	// #547
 148:	ret
 14c:	mov	w0, #0x214                 	// #532
 150:	ret
 154:	mov	w0, #0x221                 	// #545
 158:	ret
 15c:	mov	w0, #0x20e                 	// #526
 160:	ret
 164:	mov	w0, #0x215                 	// #533
 168:	ret
 16c:	mov	w0, #0x20d                 	// #525
 170:	ret
 174:	mov	w0, #0x238                 	// #568
 178:	ret
 17c:	mov	w0, #0x220                 	// #544
 180:	ret
 184:	mov	w0, #0x237                 	// #567
 188:	ret
 18c:	mov	w0, #0x20c                 	// #524
 190:	ret
 194:	mov	w0, #0x226                 	// #550
 198:	ret
 19c:	nop

00000000000001a0 <_nc_xx_fld_fcheck>:
 1a0:	ldr	x0, [x1, #16]
 1a4:	ldr	x2, [x0]
 1a8:	ldr	x2, [x2, #24]
 1ac:	mov	x16, x2
 1b0:	br	x16
 1b4:	nop

00000000000001b8 <_nc_xx_fld_ccheck>:
 1b8:	mov	x2, x1
 1bc:	mov	w1, w0
 1c0:	ldr	x0, [x2, #16]
 1c4:	ldr	x2, [x0]
 1c8:	ldr	x2, [x2, #32]
 1cc:	mov	x16, x2
 1d0:	br	x16
 1d4:	nop

00000000000001d8 <_nc_xx_fld_makearg>:
 1d8:	ldr	w2, [x0, #24]
 1dc:	ldr	x1, [x0]
 1e0:	tbnz	w2, #31, 1f8 <_nc_xx_fld_makearg+0x20>
 1e4:	add	x2, x1, #0xf
 1e8:	and	x2, x2, #0xfffffffffffffff8
 1ec:	str	x2, [x0]
 1f0:	ldr	x0, [x1]
 1f4:	ret
 1f8:	add	w3, w2, #0x8
 1fc:	str	w3, [x0, #24]
 200:	cmp	w3, #0x0
 204:	b.gt	1e4 <_nc_xx_fld_makearg+0xc>
 208:	ldr	x1, [x0, #8]
 20c:	add	x1, x1, w2, sxtw
 210:	ldr	x0, [x1]
 214:	ret

0000000000000218 <_nc_xx_next_choice>:
 218:	ldr	x0, [x1, #16]
 21c:	ldr	x2, [x0]
 220:	ldr	x2, [x2, #40]
 224:	mov	x16, x2
 228:	br	x16
 22c:	nop

0000000000000230 <_nc_xx_prev_choice>:
 230:	ldr	x0, [x1, #16]
 234:	ldr	x2, [x0]
 238:	ldr	x2, [x2, #48]
 23c:	mov	x16, x2
 240:	br	x16
 244:	nop

0000000000000248 <_ZNK11NCursesForm16On_Invalid_FieldEi>:
 248:	b	0 <beep>
 24c:	nop

0000000000000250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>:
 250:	stp	x29, x30, [sp, #-32]!
 254:	mov	x0, #0x20                  	// #32
 258:	mov	x29, sp
 25c:	str	x19, [sp, #16]
 260:	adrp	x19, 0 <_ZSt4cerr>
 264:	bl	0 <_Znwm>
 268:	bl	0 <endwin>
 26c:	ldr	x19, [x19]
 270:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 274:	add	x1, x1, #0x0
 278:	mov	x2, #0x19                  	// #25
 27c:	mov	x0, x19
 280:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
 284:	mov	x0, x19
 288:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
 28c:	mov	w0, #0x1                   	// #1
 290:	bl	0 <exit>
 294:	nop

0000000000000298 <_ZN16NCursesFormFieldD1Ev>:
 298:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 29c:	mov	x2, x0
 2a0:	ldr	x0, [x0, #8]
 2a4:	ldr	x1, [x1]
 2a8:	add	x1, x1, #0x10
 2ac:	str	x1, [x2]
 2b0:	cbz	x0, 2cc <_ZN16NCursesFormFieldD1Ev+0x34>
 2b4:	stp	x29, x30, [sp, #-16]!
 2b8:	mov	x29, sp
 2bc:	bl	0 <free_field>
 2c0:	cbnz	w0, 2d0 <_ZN16NCursesFormFieldD1Ev+0x38>
 2c4:	ldp	x29, x30, [sp], #16
 2c8:	ret
 2cc:	ret
 2d0:	bl	250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>
 2d4:	nop

00000000000002d8 <_ZN16NCursesFormFieldD0Ev>:
 2d8:	stp	x29, x30, [sp, #-32]!
 2dc:	mov	x29, sp
 2e0:	str	x19, [sp, #16]
 2e4:	mov	x19, x0
 2e8:	bl	298 <_ZN16NCursesFormFieldD1Ev>
 2ec:	mov	x0, x19
 2f0:	mov	x1, #0x18                  	// #24
 2f4:	ldr	x19, [sp, #16]
 2f8:	ldp	x29, x30, [sp], #32
 2fc:	b	0 <_ZdlPvm>

0000000000000300 <_ZN11NCursesForm6driverEi>:
 300:	stp	x29, x30, [sp, #-16]!
 304:	mov	x29, sp
 308:	ldr	x0, [x0, #56]
 30c:	bl	0 <form_driver>
 310:	add	w1, w0, #0xd
 314:	cmp	w1, #0xd
 318:	b.hi	330 <_ZN11NCursesForm6driverEi+0x30>  // b.pmore
 31c:	mov	x2, #0x1                   	// #1
 320:	mov	x3, #0x2023                	// #8227
 324:	lsl	x1, x2, x1
 328:	tst	x1, x3
 32c:	b.ne	334 <_ZN11NCursesForm6driverEi+0x34>  // b.any
 330:	bl	250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>
 334:	ldp	x29, x30, [sp], #16
 338:	ret
 33c:	nop

0000000000000340 <_nc_xx_fld_term>:
 340:	stp	x29, x30, [sp, #-48]!
 344:	mov	x29, sp
 348:	stp	x19, x20, [sp, #16]
 34c:	str	x21, [sp, #32]
 350:	bl	0 <form_userptr>
 354:	ldr	x19, [x0, #8]
 358:	ldr	x1, [x19]
 35c:	ldr	x0, [x19, #56]
 360:	ldr	x20, [x1, #128]
 364:	ldr	x21, [x19, #80]
 368:	bl	0 <current_field>
 36c:	bl	0 <field_index>
 370:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 374:	add	x1, x1, #0x0
 378:	cmp	x20, x1
 37c:	b.ne	390 <_nc_xx_fld_term+0x50>  // b.any
 380:	ldp	x19, x20, [sp, #16]
 384:	ldr	x21, [sp, #32]
 388:	ldp	x29, x30, [sp], #48
 38c:	ret
 390:	mov	x16, x20
 394:	ldr	x1, [x21, w0, sxtw #3]
 398:	mov	x0, x19
 39c:	ldp	x19, x20, [sp, #16]
 3a0:	ldr	x21, [sp, #32]
 3a4:	ldp	x29, x30, [sp], #48
 3a8:	br	x16
 3ac:	nop

00000000000003b0 <_nc_xx_frm_init>:
 3b0:	stp	x29, x30, [sp, #-16]!
 3b4:	mov	x29, sp
 3b8:	bl	0 <form_userptr>
 3bc:	ldr	x0, [x0, #8]
 3c0:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 3c4:	add	x1, x1, #0x0
 3c8:	ldr	x2, [x0]
 3cc:	ldr	x2, [x2, #104]
 3d0:	cmp	x2, x1
 3d4:	b.ne	3e0 <_nc_xx_frm_init+0x30>  // b.any
 3d8:	ldp	x29, x30, [sp], #16
 3dc:	ret
 3e0:	ldp	x29, x30, [sp], #16
 3e4:	mov	x16, x2
 3e8:	br	x16
 3ec:	nop

00000000000003f0 <_nc_xx_frm_term>:
 3f0:	stp	x29, x30, [sp, #-16]!
 3f4:	mov	x29, sp
 3f8:	bl	0 <form_userptr>
 3fc:	ldr	x0, [x0, #8]
 400:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 404:	add	x1, x1, #0x0
 408:	ldr	x2, [x0]
 40c:	ldr	x2, [x2, #112]
 410:	cmp	x2, x1
 414:	b.ne	420 <_nc_xx_frm_term+0x30>  // b.any
 418:	ldp	x29, x30, [sp], #16
 41c:	ret
 420:	ldp	x29, x30, [sp], #16
 424:	mov	x16, x2
 428:	br	x16
 42c:	nop

0000000000000430 <_nc_xx_fld_init>:
 430:	stp	x29, x30, [sp, #-48]!
 434:	mov	x29, sp
 438:	stp	x19, x20, [sp, #16]
 43c:	str	x21, [sp, #32]
 440:	bl	0 <form_userptr>
 444:	ldr	x19, [x0, #8]
 448:	ldr	x1, [x19]
 44c:	ldr	x0, [x19, #56]
 450:	ldr	x20, [x1, #120]
 454:	ldr	x21, [x19, #80]
 458:	bl	0 <current_field>
 45c:	bl	0 <field_index>
 460:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 464:	add	x1, x1, #0x0
 468:	cmp	x20, x1
 46c:	b.ne	480 <_nc_xx_fld_init+0x50>  // b.any
 470:	ldp	x19, x20, [sp, #16]
 474:	ldr	x21, [sp, #32]
 478:	ldp	x29, x30, [sp], #48
 47c:	ret
 480:	mov	x16, x20
 484:	ldr	x1, [x21, w0, sxtw #3]
 488:	mov	x0, x19
 48c:	ldp	x19, x20, [sp, #16]
 490:	ldr	x21, [sp, #32]
 494:	ldp	x29, x30, [sp], #48
 498:	br	x16
 49c:	nop

00000000000004a0 <_ZN11NCursesFormD1Ev>:
 4a0:	stp	x29, x30, [sp, #-64]!
 4a4:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 4a8:	mov	x29, sp
 4ac:	ldr	x1, [x1]
 4b0:	stp	x19, x20, [sp, #16]
 4b4:	mov	x19, x0
 4b8:	ldr	x0, [x0, #56]
 4bc:	add	x1, x1, #0x10
 4c0:	str	x1, [x19]
 4c4:	bl	0 <form_userptr>
 4c8:	cbz	x0, 4d4 <_ZN11NCursesFormD1Ev+0x34>
 4cc:	mov	x1, #0x18                  	// #24
 4d0:	bl	0 <_ZdlPvm>
 4d4:	ldrb	w0, [x19, #72]
 4d8:	cbz	w0, 4fc <_ZN11NCursesFormD1Ev+0x5c>
 4dc:	ldr	x0, [x19, #64]
 4e0:	cbz	x0, 4f0 <_ZN11NCursesFormD1Ev+0x50>
 4e4:	ldr	x1, [x0]
 4e8:	ldr	x1, [x1, #16]
 4ec:	blr	x1
 4f0:	ldr	x0, [x19, #56]
 4f4:	mov	x1, #0x0                   	// #0
 4f8:	bl	0 <set_form_sub>
 4fc:	ldr	x0, [x19, #56]
 500:	cbz	x0, 5d4 <_ZN11NCursesFormD1Ev+0x134>
 504:	stp	x21, x22, [sp, #32]
 508:	stp	x23, x24, [sp, #48]
 50c:	bl	0 <form_fields>
 510:	mov	x23, x0
 514:	ldr	x0, [x19, #56]
 518:	bl	0 <field_count>
 51c:	sxtw	x22, w0
 520:	ldr	x0, [x19, #56]
 524:	mov	x1, #0x0                   	// #0
 528:	bl	0 <set_form_fields>
 52c:	cbnz	w0, 5fc <_ZN11NCursesFormD1Ev+0x15c>
 530:	ldrb	w0, [x19, #74]
 534:	cbz	w0, 5b8 <_ZN11NCursesFormD1Ev+0x118>
 538:	cmp	w22, #0x0
 53c:	ldr	x0, [x19, #80]
 540:	b.le	5b0 <_ZN11NCursesFormD1Ev+0x110>
 544:	add	x22, x22, #0x1
 548:	adrp	x24, 0 <_ZN11NCursesForm12On_Form_InitEv>
 54c:	mov	x20, #0x0                   	// #0
 550:	add	x24, x24, #0x0
 554:	lsl	x22, x22, #3
 558:	b	57c <_ZN11NCursesFormD1Ev+0xdc>
 55c:	bl	298 <_ZN16NCursesFormFieldD1Ev>
 560:	mov	x0, x21
 564:	mov	x1, #0x18                  	// #24
 568:	bl	0 <_ZdlPvm>
 56c:	ldr	x0, [x19, #80]
 570:	add	x20, x20, #0x8
 574:	cmp	x22, x20
 578:	b.eq	5b0 <_ZN11NCursesFormD1Ev+0x110>  // b.none
 57c:	ldr	x21, [x0, x20]
 580:	cbz	x21, 570 <_ZN11NCursesFormD1Ev+0xd0>
 584:	ldr	x0, [x21]
 588:	ldr	x1, [x0, #8]
 58c:	mov	x0, x21
 590:	cmp	x1, x24
 594:	b.eq	55c <_ZN11NCursesFormD1Ev+0xbc>  // b.none
 598:	blr	x1
 59c:	add	x20, x20, #0x8
 5a0:	cmp	x22, x20
 5a4:	ldr	x0, [x19, #80]
 5a8:	b.ne	57c <_ZN11NCursesFormD1Ev+0xdc>  // b.any
 5ac:	nop
 5b0:	cbz	x0, 5b8 <_ZN11NCursesFormD1Ev+0x118>
 5b4:	bl	0 <_ZdaPv>
 5b8:	ldr	x0, [x19, #56]
 5bc:	bl	0 <free_form>
 5c0:	cbz	x23, 5e4 <_ZN11NCursesFormD1Ev+0x144>
 5c4:	mov	x0, x23
 5c8:	bl	0 <_ZdaPv>
 5cc:	ldp	x21, x22, [sp, #32]
 5d0:	ldp	x23, x24, [sp, #48]
 5d4:	mov	x0, x19
 5d8:	ldp	x19, x20, [sp, #16]
 5dc:	ldp	x29, x30, [sp], #64
 5e0:	b	0 <_ZN12NCursesPanelD2Ev>
 5e4:	mov	x0, x19
 5e8:	ldp	x19, x20, [sp, #16]
 5ec:	ldp	x21, x22, [sp, #32]
 5f0:	ldp	x23, x24, [sp, #48]
 5f4:	ldp	x29, x30, [sp], #64
 5f8:	b	0 <_ZN12NCursesPanelD2Ev>
 5fc:	bl	250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>

0000000000000600 <_ZN11NCursesFormD0Ev>:
 600:	stp	x29, x30, [sp, #-32]!
 604:	mov	x29, sp
 608:	str	x19, [sp, #16]
 60c:	mov	x19, x0
 610:	bl	4a0 <_ZN11NCursesFormD1Ev>
 614:	mov	x0, x19
 618:	mov	x1, #0x58                  	// #88
 61c:	ldr	x19, [sp, #16]
 620:	ldp	x29, x30, [sp], #32
 624:	b	0 <_ZdlPvm>

0000000000000628 <_ZN11NCursesForm20setDefaultAttributesEv>:
 628:	stp	x29, x30, [sp, #-80]!
 62c:	adrp	x1, 0 <_ZN18NCursesApplication6theAppE>
 630:	mov	x29, sp
 634:	ldr	x1, [x1]
 638:	stp	x21, x22, [sp, #32]
 63c:	mov	x22, x0
 640:	ldr	x0, [x0, #56]
 644:	stp	x19, x20, [sp, #16]
 648:	ldr	x21, [x1]
 64c:	bl	0 <field_count>
 650:	cmp	w0, #0x0
 654:	b.le	7d0 <_ZN11NCursesForm20setDefaultAttributesEv+0x1a8>
 658:	stp	x25, x26, [sp, #64]
 65c:	adrp	x25, 0 <_ZN11NCursesForm12On_Form_InitEv>
 660:	adrp	x26, 0 <_ZN11NCursesForm12On_Form_InitEv>
 664:	ldr	x25, [x25]
 668:	mov	x19, #0x0                   	// #0
 66c:	ldr	x26, [x26]
 670:	stp	x23, x24, [sp, #48]
 674:	mov	w23, w0
 678:	mov	w24, #0xa                   	// #10
 67c:	b	6bc <_ZN11NCursesForm20setDefaultAttributesEv+0x94>
 680:	cbz	x21, 6b0 <_ZN11NCursesForm20setDefaultAttributesEv+0x88>
 684:	ldr	x0, [x21]
 688:	ldr	x1, [x0, #96]
 68c:	cmp	x1, x25
 690:	b.ne	798 <_ZN11NCursesForm20setDefaultAttributesEv+0x170>  // b.any
 694:	ldrb	w0, [x21, #8]
 698:	cmp	w0, #0x0
 69c:	cset	w1, ne  // ne = any
 6a0:	lsl	w1, w1, #10
 6a4:	ldr	x0, [x20, #8]
 6a8:	bl	0 <set_field_back>
 6ac:	cbnz	w0, 760 <_ZN11NCursesForm20setDefaultAttributesEv+0x138>
 6b0:	add	x19, x19, #0x1
 6b4:	cmp	w23, w19
 6b8:	b.le	7c8 <_ZN11NCursesForm20setDefaultAttributesEv+0x1a0>
 6bc:	ldr	x0, [x22, #56]
 6c0:	bl	0 <field_count>
 6c4:	cmp	w0, w19
 6c8:	b.le	760 <_ZN11NCursesForm20setDefaultAttributesEv+0x138>
 6cc:	ldr	x0, [x22, #80]
 6d0:	ldr	x20, [x0, x19, lsl #3]
 6d4:	ldr	x0, [x20, #8]
 6d8:	bl	0 <field_opts>
 6dc:	and	w0, w0, w24
 6e0:	cmp	w0, #0xa
 6e4:	b.ne	680 <_ZN11NCursesForm20setDefaultAttributesEv+0x58>  // b.any
 6e8:	cbz	x21, 750 <_ZN11NCursesForm20setDefaultAttributesEv+0x128>
 6ec:	ldr	x0, [x21]
 6f0:	ldr	x1, [x0, #72]
 6f4:	cmp	x1, x26
 6f8:	b.ne	7b8 <_ZN11NCursesForm20setDefaultAttributesEv+0x190>  // b.any
 6fc:	ldrb	w2, [x21, #8]
 700:	mov	w1, #0x100                 	// #256
 704:	mov	w0, #0x200000              	// #2097152
 708:	cmp	w2, #0x0
 70c:	csel	w1, w1, w0, ne  // ne = any
 710:	ldr	x0, [x20, #8]
 714:	bl	0 <set_field_fore>
 718:	cbnz	w0, 760 <_ZN11NCursesForm20setDefaultAttributesEv+0x138>
 71c:	ldr	x1, [x21]
 720:	adrp	x0, 0 <_ZN11NCursesForm12On_Form_InitEv>
 724:	ldr	x0, [x0]
 728:	ldr	x1, [x1, #80]
 72c:	cmp	x1, x0
 730:	b.ne	7a8 <_ZN11NCursesForm20setDefaultAttributesEv+0x180>  // b.any
 734:	ldrb	w0, [x21, #8]
 738:	cmp	w0, #0x0
 73c:	cset	w1, ne  // ne = any
 740:	lsl	w1, w1, #9
 744:	ldr	x0, [x20, #8]
 748:	bl	0 <set_field_back>
 74c:	cbnz	w0, 760 <_ZN11NCursesForm20setDefaultAttributesEv+0x138>
 750:	ldr	x0, [x20, #8]
 754:	mov	w1, #0x5f                  	// #95
 758:	bl	0 <set_field_pad>
 75c:	cbz	w0, 6b0 <_ZN11NCursesForm20setDefaultAttributesEv+0x88>
 760:	adrp	x19, 0 <_ZSt4cerr>
 764:	mov	x0, #0x20                  	// #32
 768:	bl	0 <_Znwm>
 76c:	bl	0 <endwin>
 770:	ldr	x19, [x19]
 774:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 778:	add	x1, x1, #0x0
 77c:	mov	x2, #0x19                  	// #25
 780:	mov	x0, x19
 784:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
 788:	mov	x0, x19
 78c:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
 790:	mov	w0, #0x1                   	// #1
 794:	bl	0 <exit>
 798:	mov	x0, x21
 79c:	blr	x1
 7a0:	mov	w1, w0
 7a4:	b	6a4 <_ZN11NCursesForm20setDefaultAttributesEv+0x7c>
 7a8:	mov	x0, x21
 7ac:	blr	x1
 7b0:	mov	w1, w0
 7b4:	b	744 <_ZN11NCursesForm20setDefaultAttributesEv+0x11c>
 7b8:	mov	x0, x21
 7bc:	blr	x1
 7c0:	mov	w1, w0
 7c4:	b	710 <_ZN11NCursesForm20setDefaultAttributesEv+0xe8>
 7c8:	ldp	x23, x24, [sp, #48]
 7cc:	ldp	x25, x26, [sp, #64]
 7d0:	cbz	x21, 84c <_ZN11NCursesForm20setDefaultAttributesEv+0x224>
 7d4:	ldr	x1, [x21]
 7d8:	adrp	x19, 0 <_ZN11NCursesForm12On_Form_InitEv>
 7dc:	ldr	x0, [x19]
 7e0:	ldr	x1, [x1, #104]
 7e4:	cmp	x1, x0
 7e8:	b.ne	85c <_ZN11NCursesForm20setDefaultAttributesEv+0x234>  // b.any
 7ec:	ldrb	w2, [x21, #8]
 7f0:	mov	w1, #0x420                 	// #1056
 7f4:	mov	w0, #0x20                  	// #32
 7f8:	cmp	w2, #0x0
 7fc:	csel	w1, w1, w0, ne  // ne = any
 800:	ldr	x0, [x22, #8]
 804:	bl	0 <wbkgd>
 808:	ldr	x20, [x22, #64]
 80c:	cbz	x20, 84c <_ZN11NCursesForm20setDefaultAttributesEv+0x224>
 810:	ldr	x0, [x21]
 814:	ldr	x19, [x19]
 818:	ldr	x1, [x0, #104]
 81c:	cmp	x1, x19
 820:	b.ne	86c <_ZN11NCursesForm20setDefaultAttributesEv+0x244>  // b.any
 824:	ldrb	w2, [x21, #8]
 828:	mov	w1, #0x420                 	// #1056
 82c:	mov	w0, #0x20                  	// #32
 830:	cmp	w2, #0x0
 834:	csel	w1, w1, w0, ne  // ne = any
 838:	ldr	x0, [x20, #8]
 83c:	ldp	x19, x20, [sp, #16]
 840:	ldp	x21, x22, [sp, #32]
 844:	ldp	x29, x30, [sp], #80
 848:	b	0 <wbkgd>
 84c:	ldp	x19, x20, [sp, #16]
 850:	ldp	x21, x22, [sp, #32]
 854:	ldp	x29, x30, [sp], #80
 858:	ret
 85c:	mov	x0, x21
 860:	blr	x1
 864:	orr	w1, w0, #0x20
 868:	b	800 <_ZN11NCursesForm20setDefaultAttributesEv+0x1d8>
 86c:	mov	x0, x21
 870:	blr	x1
 874:	orr	w1, w0, #0x20
 878:	b	838 <_ZN11NCursesForm20setDefaultAttributesEv+0x210>
 87c:	nop

0000000000000880 <_ZN11NCursesFormclEv>:
 880:	stp	x29, x30, [sp, #-64]!
 884:	mov	x29, sp
 888:	stp	x19, x20, [sp, #16]
 88c:	mov	x19, x0
 890:	ldr	x0, [x0, #56]
 894:	stp	x21, x22, [sp, #32]
 898:	stp	x23, x24, [sp, #48]
 89c:	bl	0 <post_form>
 8a0:	cbnz	w0, a5c <_ZN11NCursesFormclEv+0x1dc>
 8a4:	ldr	x0, [x19, #48]
 8a8:	bl	0 <show_panel>
 8ac:	cmn	w0, #0x1
 8b0:	b.eq	a58 <_ZN11NCursesFormclEv+0x1d8>  // b.none
 8b4:	ldr	x1, [x19]
 8b8:	adrp	x22, 0 <_ZN11NCursesForm12On_Form_InitEv>
 8bc:	mov	x0, x19
 8c0:	add	x22, x22, #0x0
 8c4:	mov	x23, #0x1                   	// #1
 8c8:	ldr	x1, [x1, #32]
 8cc:	blr	x1
 8d0:	mov	x21, #0x2023                	// #8227
 8d4:	ldr	x1, [x19]
 8d8:	mov	x0, x19
 8dc:	ldr	x2, [x1, #48]
 8e0:	ldr	x24, [x1, #136]
 8e4:	blr	x2
 8e8:	mov	w20, w0
 8ec:	mov	w1, w20
 8f0:	mov	x0, x19
 8f4:	blr	x24
 8f8:	mov	w1, w0
 8fc:	cmp	w0, #0x280
 900:	b.eq	a04 <_ZN11NCursesFormclEv+0x184>  // b.none
 904:	ldr	x0, [x19]
 908:	ldr	x2, [x0, #88]
 90c:	cmp	x2, x22
 910:	b.ne	96c <_ZN11NCursesFormclEv+0xec>  // b.any
 914:	ldr	x0, [x19, #56]
 918:	bl	0 <form_driver>
 91c:	add	w1, w0, #0xd
 920:	cmp	w1, #0xd
 924:	b.hi	934 <_ZN11NCursesFormclEv+0xb4>  // b.pmore
 928:	lsl	x1, x23, x1
 92c:	tst	x1, x21
 930:	b.ne	974 <_ZN11NCursesFormclEv+0xf4>  // b.any
 934:	adrp	x19, 0 <_ZSt4cerr>
 938:	mov	x0, #0x20                  	// #32
 93c:	bl	0 <_Znwm>
 940:	bl	0 <endwin>
 944:	ldr	x19, [x19]
 948:	adrp	x1, 0 <_ZN11NCursesForm12On_Form_InitEv>
 94c:	add	x1, x1, #0x0
 950:	mov	x2, #0x19                  	// #25
 954:	mov	x0, x19
 958:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
 95c:	mov	x0, x19
 960:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
 964:	mov	w0, #0x1                   	// #1
 968:	bl	0 <exit>
 96c:	mov	x0, x19
 970:	blr	x2
 974:	cmn	w0, #0x8
 978:	b.eq	9e4 <_ZN11NCursesFormclEv+0x164>  // b.none
 97c:	cmn	w0, #0x7
 980:	b.ge	9dc <_ZN11NCursesFormclEv+0x15c>  // b.tcont
 984:	cmn	w0, #0xd
 988:	b.ne	9ac <_ZN11NCursesFormclEv+0x12c>  // b.any
 98c:	ldr	x1, [x19]
 990:	adrp	x0, 0 <_ZN11NCursesForm12On_Form_InitEv>
 994:	add	x0, x0, #0x0
 998:	ldr	x2, [x1, #160]
 99c:	cmp	x2, x0
 9a0:	b.ne	9cc <_ZN11NCursesFormclEv+0x14c>  // b.any
 9a4:	bl	0 <beep>
 9a8:	b	8d0 <_ZN11NCursesFormclEv+0x50>
 9ac:	cmn	w0, #0xc
 9b0:	b.ne	934 <_ZN11NCursesFormclEv+0xb4>  // b.any
 9b4:	ldr	x1, [x19]
 9b8:	adrp	x0, 0 <_ZN11NCursesForm12On_Form_InitEv>
 9bc:	add	x0, x0, #0x0
 9c0:	ldr	x2, [x1, #152]
 9c4:	cmp	x2, x0
 9c8:	b.eq	9a4 <_ZN11NCursesFormclEv+0x124>  // b.none
 9cc:	mov	w1, w20
 9d0:	mov	x0, x19
 9d4:	blr	x2
 9d8:	b	8d0 <_ZN11NCursesFormclEv+0x50>
 9dc:	cbz	w0, 8d4 <_ZN11NCursesFormclEv+0x54>
 9e0:	b	934 <_ZN11NCursesFormclEv+0xb4>
 9e4:	ldr	x1, [x19]
 9e8:	adrp	x0, 0 <_ZN11NCursesForm12On_Form_InitEv>
 9ec:	add	x0, x0, #0x0
 9f0:	ldr	x2, [x1, #168]
 9f4:	cmp	x2, x0
 9f8:	b.ne	9cc <_ZN11NCursesFormclEv+0x14c>  // b.any
 9fc:	bl	0 <beep>
 a00:	b	8d0 <_ZN11NCursesFormclEv+0x50>
 a04:	ldr	x0, [x19, #56]
 a08:	bl	0 <unpost_form>
 a0c:	cbnz	w0, a5c <_ZN11NCursesFormclEv+0x1dc>
 a10:	ldr	x0, [x19, #48]
 a14:	bl	0 <hide_panel>
 a18:	cmn	w0, #0x1
 a1c:	b.eq	a58 <_ZN11NCursesFormclEv+0x1d8>  // b.none
 a20:	ldr	x1, [x19]
 a24:	mov	x0, x19
 a28:	ldr	x1, [x1, #32]
 a2c:	blr	x1
 a30:	ldr	x0, [x19, #56]
 a34:	ldr	x19, [x19, #80]
 a38:	bl	0 <current_field>
 a3c:	bl	0 <field_index>
 a40:	ldr	x0, [x19, w0, sxtw #3]
 a44:	ldp	x19, x20, [sp, #16]
 a48:	ldp	x21, x22, [sp, #32]
 a4c:	ldp	x23, x24, [sp, #48]
 a50:	ldp	x29, x30, [sp], #64
 a54:	ret
 a58:	bl	250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>
 a5c:	bl	250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>

0000000000000a60 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>:
 a60:	stp	x29, x30, [sp, #-48]!
 a64:	mov	x29, sp
 a68:	str	x21, [sp, #32]
 a6c:	mov	x21, x0
 a70:	ldr	x0, [x1]
 a74:	stp	x19, x20, [sp, #16]
 a78:	mov	x19, x1
 a7c:	ldr	x0, [x0, #8]
 a80:	cbz	x0, b24 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xc4>
 a84:	mov	x2, #0x1                   	// #1
 a88:	ldr	x1, [x19, x2, lsl #3]
 a8c:	mov	w3, w2
 a90:	add	x2, x2, #0x1
 a94:	ldr	x1, [x1, #8]
 a98:	cbnz	x1, a88 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x28>
 a9c:	add	w3, w3, #0x1
 aa0:	sbfiz	x0, x3, #3, #32
 aa4:	bl	0 <_Znam>
 aa8:	mov	x20, x0
 aac:	ldr	x1, [x19]
 ab0:	ldr	x3, [x1, #8]
 ab4:	cbz	x3, b1c <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xbc>
 ab8:	mov	x2, #0x0                   	// #0
 abc:	nop
 ac0:	str	x3, [x20, x2]
 ac4:	add	x2, x2, #0x8
 ac8:	ldr	x1, [x19, x2]
 acc:	ldr	x3, [x1, #8]
 ad0:	cbnz	x3, ac0 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x60>
 ad4:	add	x2, x20, x2
 ad8:	ldr	x0, [x21, #56]
 adc:	str	xzr, [x2]
 ae0:	str	x19, [x21, #80]
 ae4:	cbz	x0, b08 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xa8>
 ae8:	bl	0 <form_fields>
 aec:	mov	x19, x0
 af0:	cbz	x0, b08 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xa8>
 af4:	ldr	x0, [x21, #56]
 af8:	mov	x1, #0x0                   	// #0
 afc:	bl	0 <set_form_fields>
 b00:	mov	x0, x19
 b04:	bl	0 <_ZdaPv>
 b08:	mov	x0, x20
 b0c:	ldp	x19, x20, [sp, #16]
 b10:	ldr	x21, [sp, #32]
 b14:	ldp	x29, x30, [sp], #48
 b18:	ret
 b1c:	mov	x2, x0
 b20:	b	ad8 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x78>
 b24:	mov	x0, #0x8                   	// #8
 b28:	b	aa4 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x44>
 b2c:	nop

0000000000000b30 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb>:
 b30:	stp	x29, x30, [sp, #-64]!
 b34:	mov	x29, sp
 b38:	stp	x19, x20, [sp, #16]
 b3c:	mov	x19, x0
 b40:	mov	x20, x1
 b44:	ldr	x0, [x0, #8]
 b48:	mov	w1, #0x1                   	// #1
 b4c:	stp	x21, x22, [sp, #32]
 b50:	and	w21, w2, #0xff
 b54:	and	w22, w3, #0xff
 b58:	bl	0 <keypad>
 b5c:	ldr	x0, [x19, #8]
 b60:	mov	w1, #0x1                   	// #1
 b64:	bl	0 <meta>
 b68:	str	xzr, [x19, #56]
 b6c:	mov	x1, x20
 b70:	strb	w21, [x19, #73]
 b74:	strb	w22, [x19, #74]
 b78:	mov	x0, x19
 b7c:	bl	a60 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>
 b80:	bl	0 <new_form>
 b84:	str	x0, [x19, #56]
 b88:	cbz	x0, cd4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a4>
 b8c:	mov	x0, #0x18                  	// #24
 b90:	bl	0 <_Znwm>
 b94:	mov	x1, x0
 b98:	ldr	x0, [x19, #56]
 b9c:	stp	xzr, x19, [x1]
 ba0:	str	x0, [x1, #16]
 ba4:	bl	0 <set_form_userptr>
 ba8:	adrp	x1, 3b0 <_nc_xx_frm_init>
 bac:	ldr	x0, [x19, #56]
 bb0:	ldr	x1, [x1]
 bb4:	bl	0 <set_form_init>
 bb8:	adrp	x1, 3f0 <_nc_xx_frm_term>
 bbc:	ldr	x0, [x19, #56]
 bc0:	ldr	x1, [x1]
 bc4:	bl	0 <set_form_term>
 bc8:	adrp	x1, 430 <_nc_xx_fld_init>
 bcc:	ldr	x0, [x19, #56]
 bd0:	ldr	x1, [x1]
 bd4:	bl	0 <set_field_init>
 bd8:	adrp	x1, 340 <_nc_xx_fld_term>
 bdc:	ldr	x0, [x19, #56]
 be0:	ldr	x1, [x1]
 be4:	bl	0 <set_field_term>
 be8:	ldr	x0, [x19, #56]
 bec:	add	x2, sp, #0x3c
 bf0:	add	x1, sp, #0x38
 bf4:	bl	0 <scale_form>
 bf8:	cbnz	w0, cd4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a4>
 bfc:	ldr	x1, [x19, #8]
 c00:	ldr	x0, [x19, #56]
 c04:	bl	0 <set_form_win>
 c08:	cbz	w21, c84 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x154>
 c0c:	ldr	x0, [x19, #8]
 c10:	ldr	w2, [sp, #56]
 c14:	cbz	x0, cbc <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x18c>
 c18:	ldrsh	w1, [x0, #4]
 c1c:	cmn	w1, #0x2
 c20:	b.eq	ccc <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x19c>  // b.none
 c24:	cmp	w2, w1
 c28:	b.ge	cd4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a4>  // b.tcont
 c2c:	ldrsh	w0, [x0, #6]
 c30:	cmn	w0, #0x2
 c34:	b.eq	cc4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x194>  // b.none
 c38:	ldr	w1, [sp, #60]
 c3c:	cmp	w1, w0
 c40:	b.ge	cd4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a4>  // b.tcont
 c44:	mov	x0, #0x30                  	// #48
 c48:	bl	0 <_Znwm>
 c4c:	ldp	w2, w3, [sp, #56]
 c50:	mov	w5, #0x1                   	// #1
 c54:	mov	x20, x0
 c58:	mov	w4, w5
 c5c:	mov	x1, x19
 c60:	mov	w6, #0x72                  	// #114
 c64:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 c68:	ldr	x1, [x20, #8]
 c6c:	str	x20, [x19, #64]
 c70:	ldr	x0, [x19, #56]
 c74:	bl	0 <set_form_sub>
 c78:	mov	w0, #0x1                   	// #1
 c7c:	strb	w0, [x19, #72]
 c80:	b	c8c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x15c>
 c84:	str	xzr, [x19, #64]
 c88:	strb	wzr, [x19, #72]
 c8c:	ldr	x0, [x19, #56]
 c90:	mov	w1, #0x1                   	// #1
 c94:	bl	0 <form_opts_on>
 c98:	cbnz	w0, cd4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a4>
 c9c:	ldr	x1, [x19]
 ca0:	mov	x0, x19
 ca4:	ldr	x1, [x1, #96]
 ca8:	blr	x1
 cac:	ldp	x19, x20, [sp, #16]
 cb0:	ldp	x21, x22, [sp, #32]
 cb4:	ldp	x29, x30, [sp], #64
 cb8:	ret
 cbc:	cmn	w2, #0x1
 cc0:	b.ge	cd4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1a4>  // b.tcont
 cc4:	mov	w0, #0xffffffff            	// #-1
 cc8:	b	c38 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x108>
 ccc:	mov	w1, #0xffffffff            	// #-1
 cd0:	b	c24 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0xf4>
 cd4:	bl	250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>
 cd8:	mov	x1, #0x30                  	// #48
 cdc:	mov	x19, x0
 ce0:	mov	x0, x20
 ce4:	bl	0 <_ZdlPvm>
 ce8:	mov	x0, x19
 cec:	bl	0 <_Unwind_Resume>

0000000000000cf0 <_ZN11NCursesForm12setSubWindowER13NCursesWindow>:
 cf0:	stp	x29, x30, [sp, #-32]!
 cf4:	mov	x29, sp
 cf8:	stp	x19, x20, [sp, #16]
 cfc:	mov	x19, x0
 d00:	mov	x20, x1
 d04:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 d08:	tst	w0, #0xff
 d0c:	b.eq	d44 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x54>  // b.none
 d10:	ldrb	w0, [x19, #72]
 d14:	cbz	w0, d2c <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x3c>
 d18:	ldr	x0, [x19, #64]
 d1c:	cbz	x0, d2c <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x3c>
 d20:	ldr	x1, [x0]
 d24:	ldr	x1, [x1, #16]
 d28:	blr	x1
 d2c:	ldr	x1, [x20, #8]
 d30:	str	x20, [x19, #64]
 d34:	ldr	x0, [x19, #56]
 d38:	ldp	x19, x20, [sp, #16]
 d3c:	ldp	x29, x30, [sp], #32
 d40:	b	0 <set_form_sub>
 d44:	bl	250 <_ZNK11NCursesForm7OnErrorEi.isra.0.part.0>

Disassembly of section .text._ZNK18NCursesApplication11foregroundsEv:

0000000000000000 <_ZNK18NCursesApplication11foregroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	mov	w2, #0x100                 	// #256
   8:	mov	w1, #0x200000              	// #2097152
   c:	cmp	w0, #0x0
  10:	csel	w0, w2, w1, ne  // ne = any
  14:	ret

Disassembly of section .text._ZNK18NCursesApplication11backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication11backgroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #9
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication6labelsEv:

0000000000000000 <_ZNK18NCursesApplication6labelsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #10
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication18dialog_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18dialog_backgroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #10
  10:	ret

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, #0x0                   	// #0
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	bl	0 <_ZN12NCursesPanel5mvwinEii>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesf.cc>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesf.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	stp	x21, x22, [sp, #32]
  1c:	adrp	x21, 1b8 <_nc_xx_fld_ccheck>
  20:	str	x23, [sp, #48]
  24:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  28:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  2c:	mov	x1, x19
  30:	adrp	x19, 1a0 <_nc_xx_fld_fcheck>
  34:	adrp	x2, 0 <__dso_handle>
  38:	ldr	x0, [x0]
  3c:	add	x2, x2, #0x0
  40:	adrp	x20, 18 <_GLOBAL__sub_I_cursesf.cc+0x18>
  44:	adrp	x22, 10 <_GLOBAL__sub_I_cursesf.cc+0x10>
  48:	adrp	x23, 1d8 <_nc_xx_fld_makearg>
  4c:	bl	0 <__cxa_atexit>
  50:	ldr	x19, [x19]
  54:	ldr	x21, [x21]
  58:	mov	x0, x19
  5c:	mov	x1, x21
  60:	bl	0 <new_fieldtype>
  64:	ldr	x20, [x20]
  68:	mov	x2, x0
  6c:	mov	x1, x21
  70:	mov	x0, x19
  74:	str	x2, [x20]
  78:	bl	0 <new_fieldtype>
  7c:	ldr	x1, [x22]
  80:	mov	x2, x0
  84:	mov	x0, #0x4                   	// #4
  88:	str	x2, [x1]
  8c:	bl	0 <_Znwm>
  90:	mov	x19, x0
  94:	mov	x3, #0x0                   	// #0
  98:	ldr	x1, [x23]
  9c:	mov	x2, #0x0                   	// #0
  a0:	ldr	x0, [x20]
  a4:	str	wzr, [x19]
  a8:	bl	0 <set_fieldtype_arg>
  ac:	str	w0, [x19]
  b0:	cbz	w0, d4 <_GLOBAL__sub_I_cursesf.cc+0xd4>
  b4:	adrp	x0, 8 <_GLOBAL__sub_I_cursesf.cc+0x8>
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldr	x0, [x0]
  c0:	ldr	x23, [sp, #48]
  c4:	str	x19, [x0]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	ldr	x0, [x22]
  d8:	mov	x3, #0x0                   	// #0
  dc:	ldr	x1, [x23]
  e0:	mov	x2, #0x0                   	// #0
  e4:	ldr	x0, [x0]
  e8:	bl	0 <set_fieldtype_arg>
  ec:	str	w0, [x19]
  f0:	cbnz	w0, b4 <_GLOBAL__sub_I_cursesf.cc+0xb4>
  f4:	ldr	x22, [x22]
  f8:	adrp	x2, 230 <_nc_xx_prev_choice>
  fc:	adrp	x1, 218 <_nc_xx_next_choice>
 100:	ldr	x2, [x2]
 104:	ldr	x1, [x1]
 108:	ldr	x0, [x22]
 10c:	bl	0 <set_fieldtype_choice>
 110:	str	w0, [x19]
 114:	b	b4 <_GLOBAL__sub_I_cursesf.cc+0xb4>
 118:	mov	x1, #0x4                   	// #4
 11c:	mov	x20, x0
 120:	mov	x0, x19
 124:	bl	0 <_ZdlPvm>
 128:	mov	x0, x20
 12c:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN11NCursesForm5labelEPKcS1_:

0000000000000000 <_ZN11NCursesForm5labelEPKcS1_>:
   0:	ldrb	w3, [x0, #73]
   4:	cbz	w3, c <_ZN11NCursesForm5labelEPKcS1_+0xc>
   8:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZN11NCursesForm5labelEPKcS1_>

Disassembly of section .text._ZN11NCursesForm9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesForm9boldframeEPKcS1_>:
   0:	ldrb	w3, [x0, #73]
   4:	cbz	w3, c <_ZN11NCursesForm9boldframeEPKcS1_+0xc>
   8:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZN11NCursesForm9boldframeEPKcS1_>

Disassembly of section .text._ZN11NCursesForm5frameEPKcS1_:

0000000000000000 <_ZN11NCursesForm5frameEPKcS1_>:
   0:	ldrb	w3, [x0, #73]
   4:	cbz	w3, c <_ZN11NCursesForm5frameEPKcS1_+0xc>
   8:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZN11NCursesForm5frameEPKcS1_>

cursesm.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN15NCursesMenuItem6actionEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

0000000000000008 <_ZN23NCursesMenuCallbackItem6actionEv>:
   8:	ldr	x1, [x0, #16]
   c:	cbz	x1, 18 <_ZN23NCursesMenuCallbackItem6actionEv+0x10>
  10:	mov	x16, x1
  14:	br	x16
  18:	mov	w0, #0x0                   	// #0
  1c:	ret

0000000000000020 <_ZN11NCursesMenu10virtualizeEi>:
  20:	cmp	w1, #0x15
  24:	b.eq	180 <_ZN11NCursesMenu10virtualizeEi+0x160>  // b.none
  28:	b.le	a8 <_ZN11NCursesMenu10virtualizeEi+0x88>
  2c:	cmp	w1, #0x105
  30:	b.eq	178 <_ZN11NCursesMenu10virtualizeEi+0x158>  // b.none
  34:	b.le	7c <_ZN11NCursesMenu10virtualizeEi+0x5c>
  38:	cmp	w1, #0x152
  3c:	b.eq	158 <_ZN11NCursesMenu10virtualizeEi+0x138>  // b.none
  40:	b.le	60 <_ZN11NCursesMenu10virtualizeEi+0x40>
  44:	cmp	w1, #0x153
  48:	mov	w0, #0x207                 	// #519
  4c:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
  50:	cmp	w1, #0x168
  54:	mov	w0, #0x209                 	// #521
  58:	csel	w0, w1, w0, ne  // ne = any
  5c:	ret
  60:	cmp	w1, #0x106
  64:	mov	w0, #0x208                 	// #520
  68:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
  6c:	cmp	w1, #0x107
  70:	mov	w0, #0x20e                 	// #526
  74:	csel	w0, w1, w0, ne  // ne = any
  78:	ret
  7c:	cmp	w1, #0x102
  80:	b.eq	160 <_ZN11NCursesMenu10virtualizeEi+0x140>  // b.none
  84:	b.le	e0 <_ZN11NCursesMenu10virtualizeEi+0xc0>
  88:	cmp	w1, #0x103
  8c:	mov	w0, #0x202                 	// #514
  90:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
  94:	cmp	w1, #0x104
  98:	mov	w0, #0x200                 	// #512
  9c:	mov	w1, #0x105                 	// #261
  a0:	csel	w0, w0, w1, eq  // eq = none
  a4:	ret
  a8:	cmp	w1, #0x8
  ac:	b.eq	170 <_ZN11NCursesMenu10virtualizeEi+0x150>  // b.none
  b0:	b.le	114 <_ZN11NCursesMenu10virtualizeEi+0xf4>
  b4:	cmp	w1, #0xe
  b8:	mov	w0, #0x20a                 	// #522
  bc:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
  c0:	b.le	fc <_ZN11NCursesMenu10virtualizeEi+0xdc>
  c4:	cmp	w1, #0x10
  c8:	mov	w0, #0x20b                 	// #523
  cc:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
  d0:	cmp	w1, #0x14
  d4:	mov	w0, #0x20c                 	// #524
  d8:	csel	w0, w1, w0, ne  // ne = any
  dc:	ret
  e0:	cmp	w1, #0x18
  e4:	mov	w0, #0x280                 	// #640
  e8:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
  ec:	cmp	w1, #0x19
  f0:	mov	w0, #0x20d                 	// #525
  f4:	csel	w0, w1, w0, ne  // ne = any
  f8:	ret
  fc:	cmp	w1, #0xa
 100:	mov	w0, #0x281                 	// #641
 104:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
 108:	cmp	w1, #0xd
 10c:	csel	w0, w1, w0, ne  // ne = any
 110:	ret
 114:	cmp	w1, #0x4
 118:	b.eq	168 <_ZN11NCursesMenu10virtualizeEi+0x148>  // b.none
 11c:	b.le	13c <_ZN11NCursesMenu10virtualizeEi+0x11c>
 120:	cmp	w1, #0x5
 124:	mov	w0, #0x210                 	// #528
 128:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
 12c:	cmp	w1, #0x6
 130:	mov	w0, #0x206                 	// #518
 134:	csel	w0, w1, w0, ne  // ne = any
 138:	ret
 13c:	cmp	w1, #0x1
 140:	mov	w0, #0x20f                 	// #527
 144:	b.eq	5c <_ZN11NCursesMenu10virtualizeEi+0x3c>  // b.none
 148:	cmp	w1, #0x2
 14c:	mov	w0, #0x207                 	// #519
 150:	csel	w0, w1, w0, ne  // ne = any
 154:	ret
 158:	mov	w0, #0x206                 	// #518
 15c:	ret
 160:	mov	w0, #0x203                 	// #515
 164:	ret
 168:	mov	w0, #0x205                 	// #517
 16c:	ret
 170:	mov	w0, #0x20e                 	// #526
 174:	ret
 178:	mov	w0, #0x201                 	// #513
 17c:	ret
 180:	mov	w0, #0x204                 	// #516
 184:	ret

0000000000000188 <_ZN11NCursesMenu12On_Menu_InitEv>:
 188:	ret
 18c:	nop

0000000000000190 <_ZN11NCursesMenu12On_Item_InitER15NCursesMenuItem>:
 190:	ret
 194:	nop

0000000000000198 <_ZNK11NCursesMenu11On_No_MatchEi>:
 198:	b	0 <beep>
 19c:	nop

00000000000001a0 <_Z5THROWPK16NCursesException.isra.0>:
 1a0:	stp	x29, x30, [sp, #-32]!
 1a4:	mov	x29, sp
 1a8:	str	x19, [sp, #16]
 1ac:	adrp	x19, 0 <_ZSt4cerr>
 1b0:	bl	0 <endwin>
 1b4:	ldr	x19, [x19]
 1b8:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 1bc:	add	x1, x1, #0x0
 1c0:	mov	x2, #0x19                  	// #25
 1c4:	mov	x0, x19
 1c8:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
 1cc:	mov	x0, x19
 1d0:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
 1d4:	mov	w0, #0x1                   	// #1
 1d8:	bl	0 <exit>
 1dc:	nop

00000000000001e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>:
 1e0:	stp	x29, x30, [sp, #-16]!
 1e4:	mov	x0, #0x20                  	// #32
 1e8:	mov	x29, sp
 1ec:	bl	0 <_Znwm>
 1f0:	bl	1a0 <_Z5THROWPK16NCursesException.isra.0>
 1f4:	nop

00000000000001f8 <_ZN15NCursesMenuItemD1Ev>:
 1f8:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 1fc:	mov	x2, x0
 200:	ldr	x0, [x0, #8]
 204:	ldr	x1, [x1]
 208:	add	x1, x1, #0x10
 20c:	str	x1, [x2]
 210:	cbz	x0, 22c <_ZN15NCursesMenuItemD1Ev+0x34>
 214:	stp	x29, x30, [sp, #-16]!
 218:	mov	x29, sp
 21c:	bl	0 <free_item>
 220:	cbnz	w0, 230 <_ZN15NCursesMenuItemD1Ev+0x38>
 224:	ldp	x29, x30, [sp], #16
 228:	ret
 22c:	ret
 230:	mov	x0, #0x20                  	// #32
 234:	bl	0 <_Znwm>
 238:	bl	1a0 <_Z5THROWPK16NCursesException.isra.0>
 23c:	nop

0000000000000240 <_ZN15NCursesMenuItemD0Ev>:
 240:	stp	x29, x30, [sp, #-32]!
 244:	mov	x29, sp
 248:	str	x19, [sp, #16]
 24c:	mov	x19, x0
 250:	bl	1f8 <_ZN15NCursesMenuItemD1Ev>
 254:	mov	x0, x19
 258:	mov	x1, #0x10                  	// #16
 25c:	ldr	x19, [sp, #16]
 260:	ldp	x29, x30, [sp], #32
 264:	b	0 <_ZdlPvm>

0000000000000268 <_ZN23NCursesMenuCallbackItemD1Ev>:
 268:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 26c:	ldr	x1, [x1]
 270:	add	x1, x1, #0x10
 274:	str	x1, [x0]
 278:	b	1f8 <_ZN15NCursesMenuItemD1Ev>
 27c:	nop

0000000000000280 <_ZN23NCursesMenuCallbackItemD0Ev>:
 280:	stp	x29, x30, [sp, #-32]!
 284:	mov	x29, sp
 288:	str	x19, [sp, #16]
 28c:	mov	x19, x0
 290:	bl	268 <_ZN23NCursesMenuCallbackItemD1Ev>
 294:	mov	x0, x19
 298:	mov	x1, #0x18                  	// #24
 29c:	ldr	x19, [sp, #16]
 2a0:	ldp	x29, x30, [sp], #32
 2a4:	b	0 <_ZdlPvm>

00000000000002a8 <_ZN11NCursesMenu6driverEi>:
 2a8:	stp	x29, x30, [sp, #-16]!
 2ac:	mov	x29, sp
 2b0:	ldr	x0, [x0, #56]
 2b4:	bl	0 <menu_driver>
 2b8:	add	w1, w0, #0xc
 2bc:	cmp	w1, #0xc
 2c0:	b.hi	2d8 <_ZN11NCursesMenu6driverEi+0x30>  // b.pmore
 2c4:	mov	x2, #0x1                   	// #1
 2c8:	mov	x3, #0x101d                	// #4125
 2cc:	lsl	x1, x2, x1
 2d0:	tst	x1, x3
 2d4:	b.ne	2dc <_ZN11NCursesMenu6driverEi+0x34>  // b.any
 2d8:	bl	1e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>
 2dc:	ldp	x29, x30, [sp], #16
 2e0:	ret
 2e4:	nop

00000000000002e8 <_ZN11NCursesMenuD1Ev>:
 2e8:	stp	x29, x30, [sp, #-48]!
 2ec:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 2f0:	mov	x29, sp
 2f4:	ldr	x1, [x1]
 2f8:	stp	x19, x20, [sp, #16]
 2fc:	mov	x19, x0
 300:	ldr	x0, [x0, #56]
 304:	add	x1, x1, #0x10
 308:	str	x1, [x19]
 30c:	bl	0 <menu_userptr>
 310:	cbz	x0, 31c <_ZN11NCursesMenuD1Ev+0x34>
 314:	mov	x1, #0x18                  	// #24
 318:	bl	0 <_ZdlPvm>
 31c:	ldrb	w1, [x19, #72]
 320:	ldr	x0, [x19, #56]
 324:	cbnz	w1, 3d0 <_ZN11NCursesMenuD1Ev+0xe8>
 328:	cbz	x0, 3c0 <_ZN11NCursesMenuD1Ev+0xd8>
 32c:	stp	x21, x22, [sp, #32]
 330:	bl	0 <menu_items>
 334:	mov	x22, x0
 338:	ldr	x0, [x19, #56]
 33c:	bl	0 <item_count>
 340:	sxtw	x21, w0
 344:	ldr	x0, [x19, #56]
 348:	mov	x1, #0x0                   	// #0
 34c:	bl	0 <set_menu_items>
 350:	cbnz	w0, 408 <_ZN11NCursesMenuD1Ev+0x120>
 354:	ldrb	w0, [x19, #74]
 358:	cbz	w0, 3a8 <_ZN11NCursesMenuD1Ev+0xc0>
 35c:	cmp	w21, #0x0
 360:	ldr	x1, [x19, #80]
 364:	b.le	39c <_ZN11NCursesMenuD1Ev+0xb4>
 368:	add	x21, x21, #0x1
 36c:	mov	x20, #0x0                   	// #0
 370:	lsl	x21, x21, #3
 374:	nop
 378:	ldr	x0, [x1, x20]
 37c:	cbz	x0, 390 <_ZN11NCursesMenuD1Ev+0xa8>
 380:	ldr	x1, [x0]
 384:	ldr	x1, [x1, #8]
 388:	blr	x1
 38c:	ldr	x1, [x19, #80]
 390:	add	x20, x20, #0x8
 394:	cmp	x21, x20
 398:	b.ne	378 <_ZN11NCursesMenuD1Ev+0x90>  // b.any
 39c:	cbz	x1, 3a8 <_ZN11NCursesMenuD1Ev+0xc0>
 3a0:	mov	x0, x1
 3a4:	bl	0 <_ZdaPv>
 3a8:	ldr	x0, [x19, #56]
 3ac:	bl	0 <free_menu>
 3b0:	cbz	x22, 3f4 <_ZN11NCursesMenuD1Ev+0x10c>
 3b4:	mov	x0, x22
 3b8:	bl	0 <_ZdaPv>
 3bc:	ldp	x21, x22, [sp, #32]
 3c0:	mov	x0, x19
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldp	x29, x30, [sp], #48
 3cc:	b	0 <_ZN12NCursesPanelD2Ev>
 3d0:	mov	x1, #0x0                   	// #0
 3d4:	bl	0 <set_menu_sub>
 3d8:	ldr	x0, [x19, #64]
 3dc:	cbz	x0, 3ec <_ZN11NCursesMenuD1Ev+0x104>
 3e0:	ldr	x1, [x0]
 3e4:	ldr	x1, [x1, #16]
 3e8:	blr	x1
 3ec:	ldr	x0, [x19, #56]
 3f0:	b	328 <_ZN11NCursesMenuD1Ev+0x40>
 3f4:	mov	x0, x19
 3f8:	ldp	x19, x20, [sp, #16]
 3fc:	ldp	x21, x22, [sp, #32]
 400:	ldp	x29, x30, [sp], #48
 404:	b	0 <_ZN12NCursesPanelD2Ev>
 408:	bl	1e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>
 40c:	nop

0000000000000410 <_ZN11NCursesMenuD0Ev>:
 410:	stp	x29, x30, [sp, #-32]!
 414:	mov	x29, sp
 418:	str	x19, [sp, #16]
 41c:	mov	x19, x0
 420:	bl	2e8 <_ZN11NCursesMenuD1Ev>
 424:	mov	x0, x19
 428:	mov	x1, #0x58                  	// #88
 42c:	ldr	x19, [sp, #16]
 430:	ldp	x29, x30, [sp], #32
 434:	b	0 <_ZdlPvm>

0000000000000438 <_ZN11NCursesMenu20setDefaultAttributesEv>:
 438:	stp	x29, x30, [sp, #-48]!
 43c:	adrp	x1, 0 <_ZN18NCursesApplication6theAppE>
 440:	mov	x29, sp
 444:	ldr	x1, [x1]
 448:	stp	x19, x20, [sp, #16]
 44c:	ldr	x19, [x1]
 450:	cbz	x19, 510 <_ZN11NCursesMenu20setDefaultAttributesEv+0xd8>
 454:	ldr	x1, [x19]
 458:	mov	x20, x0
 45c:	adrp	x0, 0 <_ZN15NCursesMenuItem6actionEv>
 460:	ldr	x0, [x0]
 464:	ldr	x1, [x1, #72]
 468:	str	x21, [sp, #32]
 46c:	ldr	x21, [x20, #56]
 470:	cmp	x1, x0
 474:	b.ne	53c <_ZN11NCursesMenu20setDefaultAttributesEv+0x104>  // b.any
 478:	ldrb	w2, [x19, #8]
 47c:	mov	w1, #0x100                 	// #256
 480:	mov	w0, #0x200000              	// #2097152
 484:	cmp	w2, #0x0
 488:	csel	w1, w1, w0, ne  // ne = any
 48c:	mov	x0, x21
 490:	bl	0 <set_menu_fore>
 494:	ldr	x1, [x19]
 498:	adrp	x0, 0 <_ZN15NCursesMenuItem6actionEv>
 49c:	ldr	x21, [x20, #56]
 4a0:	ldr	x0, [x0]
 4a4:	ldr	x1, [x1, #80]
 4a8:	cmp	x1, x0
 4ac:	b.ne	54c <_ZN11NCursesMenu20setDefaultAttributesEv+0x114>  // b.any
 4b0:	ldrb	w0, [x19, #8]
 4b4:	cmp	w0, #0x0
 4b8:	cset	w1, ne  // ne = any
 4bc:	lsl	w1, w1, #9
 4c0:	mov	x0, x21
 4c4:	bl	0 <set_menu_back>
 4c8:	ldr	x1, [x19]
 4cc:	adrp	x0, 0 <_ZN15NCursesMenuItem6actionEv>
 4d0:	ldr	x20, [x20, #56]
 4d4:	ldr	x0, [x0]
 4d8:	ldr	x1, [x1, #88]
 4dc:	cmp	x1, x0
 4e0:	b.ne	51c <_ZN11NCursesMenu20setDefaultAttributesEv+0xe4>  // b.any
 4e4:	ldrb	w2, [x19, #8]
 4e8:	mov	w0, #0x100000              	// #1048576
 4ec:	mov	w1, #0x300                 	// #768
 4f0:	cmp	w2, #0x0
 4f4:	movk	w1, #0x10, lsl #16
 4f8:	csel	w1, w1, w0, ne  // ne = any
 4fc:	mov	x0, x20
 500:	ldp	x19, x20, [sp, #16]
 504:	ldr	x21, [sp, #32]
 508:	ldp	x29, x30, [sp], #48
 50c:	b	0 <set_menu_grey>
 510:	ldp	x19, x20, [sp, #16]
 514:	ldp	x29, x30, [sp], #48
 518:	ret
 51c:	mov	x0, x19
 520:	blr	x1
 524:	mov	w1, w0
 528:	mov	x0, x20
 52c:	ldp	x19, x20, [sp, #16]
 530:	ldr	x21, [sp, #32]
 534:	ldp	x29, x30, [sp], #48
 538:	b	0 <set_menu_grey>
 53c:	mov	x0, x19
 540:	blr	x1
 544:	mov	w1, w0
 548:	b	48c <_ZN11NCursesMenu20setDefaultAttributesEv+0x54>
 54c:	mov	x0, x19
 550:	blr	x1
 554:	mov	w1, w0
 558:	b	4c0 <_ZN11NCursesMenu20setDefaultAttributesEv+0x88>
 55c:	nop

0000000000000560 <_nc_xx_mnu_init>:
 560:	stp	x29, x30, [sp, #-16]!
 564:	mov	x29, sp
 568:	bl	0 <menu_userptr>
 56c:	ldr	x0, [x0, #8]
 570:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 574:	add	x1, x1, #0x0
 578:	ldr	x2, [x0]
 57c:	ldr	x2, [x2, #104]
 580:	cmp	x2, x1
 584:	b.ne	590 <_nc_xx_mnu_init+0x30>  // b.any
 588:	ldp	x29, x30, [sp], #16
 58c:	ret
 590:	ldp	x29, x30, [sp], #16
 594:	mov	x16, x2
 598:	br	x16
 59c:	nop

00000000000005a0 <_nc_xx_mnu_term>:
 5a0:	stp	x29, x30, [sp, #-16]!
 5a4:	mov	x29, sp
 5a8:	bl	0 <menu_userptr>
 5ac:	ldr	x0, [x0, #8]
 5b0:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 5b4:	add	x1, x1, #0x0
 5b8:	ldr	x2, [x0]
 5bc:	ldr	x2, [x2, #112]
 5c0:	cmp	x2, x1
 5c4:	b.ne	5d0 <_nc_xx_mnu_term+0x30>  // b.any
 5c8:	ldp	x29, x30, [sp], #16
 5cc:	ret
 5d0:	ldp	x29, x30, [sp], #16
 5d4:	mov	x16, x2
 5d8:	br	x16
 5dc:	nop

00000000000005e0 <_nc_xx_itm_term>:
 5e0:	stp	x29, x30, [sp, #-48]!
 5e4:	mov	x29, sp
 5e8:	stp	x19, x20, [sp, #16]
 5ec:	str	x21, [sp, #32]
 5f0:	bl	0 <menu_userptr>
 5f4:	ldr	x19, [x0, #8]
 5f8:	ldr	x1, [x19]
 5fc:	ldr	x0, [x19, #56]
 600:	ldr	x20, [x1, #128]
 604:	ldr	x21, [x19, #80]
 608:	bl	0 <current_item>
 60c:	bl	0 <item_index>
 610:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 614:	add	x1, x1, #0x0
 618:	cmp	x20, x1
 61c:	b.ne	630 <_nc_xx_itm_term+0x50>  // b.any
 620:	ldp	x19, x20, [sp, #16]
 624:	ldr	x21, [sp, #32]
 628:	ldp	x29, x30, [sp], #48
 62c:	ret
 630:	mov	x16, x20
 634:	ldr	x1, [x21, w0, sxtw #3]
 638:	mov	x0, x19
 63c:	ldp	x19, x20, [sp, #16]
 640:	ldr	x21, [sp, #32]
 644:	ldp	x29, x30, [sp], #48
 648:	br	x16
 64c:	nop

0000000000000650 <_nc_xx_itm_init>:
 650:	stp	x29, x30, [sp, #-48]!
 654:	mov	x29, sp
 658:	stp	x19, x20, [sp, #16]
 65c:	str	x21, [sp, #32]
 660:	bl	0 <menu_userptr>
 664:	ldr	x19, [x0, #8]
 668:	ldr	x1, [x19]
 66c:	ldr	x0, [x19, #56]
 670:	ldr	x20, [x1, #120]
 674:	ldr	x21, [x19, #80]
 678:	bl	0 <current_item>
 67c:	bl	0 <item_index>
 680:	adrp	x1, 0 <_ZN15NCursesMenuItem6actionEv>
 684:	add	x1, x1, #0x0
 688:	cmp	x20, x1
 68c:	b.ne	6a0 <_nc_xx_itm_init+0x50>  // b.any
 690:	ldp	x19, x20, [sp, #16]
 694:	ldr	x21, [sp, #32]
 698:	ldp	x29, x30, [sp], #48
 69c:	ret
 6a0:	mov	x16, x20
 6a4:	ldr	x1, [x21, w0, sxtw #3]
 6a8:	mov	x0, x19
 6ac:	ldp	x19, x20, [sp, #16]
 6b0:	ldr	x21, [sp, #32]
 6b4:	ldp	x29, x30, [sp], #48
 6b8:	br	x16
 6bc:	nop

00000000000006c0 <_ZN11NCursesMenuclEv>:
 6c0:	stp	x29, x30, [sp, #-80]!
 6c4:	mov	x29, sp
 6c8:	stp	x19, x20, [sp, #16]
 6cc:	mov	x19, x0
 6d0:	ldr	x0, [x0, #56]
 6d4:	stp	x21, x22, [sp, #32]
 6d8:	stp	x23, x24, [sp, #48]
 6dc:	stp	x25, x26, [sp, #64]
 6e0:	bl	0 <post_menu>
 6e4:	cbnz	w0, 974 <_ZN11NCursesMenuclEv+0x2b4>
 6e8:	ldr	x0, [x19, #48]
 6ec:	bl	0 <show_panel>
 6f0:	cmn	w0, #0x1
 6f4:	b.eq	978 <_ZN11NCursesMenuclEv+0x2b8>  // b.none
 6f8:	ldr	x1, [x19]
 6fc:	adrp	x21, 0 <_ZN15NCursesMenuItem6actionEv>
 700:	adrp	x23, 0 <_ZN15NCursesMenuItem6actionEv>
 704:	mov	x0, x19
 708:	add	x21, x21, #0x0
 70c:	add	x23, x23, #0x0
 710:	ldr	x1, [x1, #32]
 714:	mov	x22, #0x1                   	// #1
 718:	blr	x1
 71c:	nop
 720:	ldr	x1, [x19]
 724:	mov	x0, x19
 728:	ldr	x2, [x1, #48]
 72c:	ldr	x24, [x1, #136]
 730:	blr	x2
 734:	mov	w20, w0
 738:	mov	w1, w20
 73c:	mov	x0, x19
 740:	blr	x24
 744:	mov	w24, w0
 748:	cmp	w0, #0x280
 74c:	b.eq	878 <_ZN11NCursesMenuclEv+0x1b8>  // b.none
 750:	ldr	x0, [x19]
 754:	ldr	x2, [x0, #88]
 758:	cmp	x2, x21
 75c:	b.ne	794 <_ZN11NCursesMenuclEv+0xd4>  // b.any
 760:	ldr	x0, [x19, #56]
 764:	mov	w1, w24
 768:	bl	0 <menu_driver>
 76c:	add	w2, w0, #0xc
 770:	cmp	w2, #0xc
 774:	b.hi	788 <_ZN11NCursesMenuclEv+0xc8>  // b.pmore
 778:	lsl	x2, x22, x2
 77c:	mov	x1, #0x101d                	// #4125
 780:	tst	x2, x1
 784:	b.ne	7a0 <_ZN11NCursesMenuclEv+0xe0>  // b.any
 788:	mov	x0, #0x20                  	// #32
 78c:	bl	0 <_Znwm>
 790:	bl	1a0 <_Z5THROWPK16NCursesException.isra.0>
 794:	mov	w1, w24
 798:	mov	x0, x19
 79c:	blr	x2
 7a0:	cmn	w0, #0x9
 7a4:	b.eq	8e4 <_ZN11NCursesMenuclEv+0x224>  // b.none
 7a8:	cmn	w0, #0x8
 7ac:	b.ge	7d0 <_ZN11NCursesMenuclEv+0x110>  // b.tcont
 7b0:	cmn	w0, #0xc
 7b4:	b.ne	7fc <_ZN11NCursesMenuclEv+0x13c>  // b.any
 7b8:	ldr	x0, [x19]
 7bc:	ldr	x2, [x0, #152]
 7c0:	cmp	x2, x23
 7c4:	b.ne	7ec <_ZN11NCursesMenuclEv+0x12c>  // b.any
 7c8:	bl	0 <beep>
 7cc:	b	720 <_ZN11NCursesMenuclEv+0x60>
 7d0:	b.ne	81c <_ZN11NCursesMenuclEv+0x15c>  // b.any
 7d4:	cmp	w24, #0x281
 7d8:	b.eq	824 <_ZN11NCursesMenuclEv+0x164>  // b.none
 7dc:	ldr	x0, [x19]
 7e0:	ldr	x2, [x0, #176]
 7e4:	cmp	x2, x23
 7e8:	b.eq	7c8 <_ZN11NCursesMenuclEv+0x108>  // b.none
 7ec:	mov	w1, w20
 7f0:	mov	x0, x19
 7f4:	blr	x2
 7f8:	b	720 <_ZN11NCursesMenuclEv+0x60>
 7fc:	cmn	w0, #0xa
 800:	b.ne	788 <_ZN11NCursesMenuclEv+0xc8>  // b.any
 804:	ldr	x0, [x19]
 808:	ldr	x2, [x0, #160]
 80c:	cmp	x2, x23
 810:	b.ne	7ec <_ZN11NCursesMenuclEv+0x12c>  // b.any
 814:	bl	0 <beep>
 818:	b	720 <_ZN11NCursesMenuclEv+0x60>
 81c:	cbz	w0, 720 <_ZN11NCursesMenuclEv+0x60>
 820:	b	788 <_ZN11NCursesMenuclEv+0xc8>
 824:	ldr	x0, [x19, #56]
 828:	bl	0 <menu_opts>
 82c:	tbz	w0, #0, 8fc <_ZN11NCursesMenuclEv+0x23c>
 830:	ldr	x0, [x19, #56]
 834:	ldr	x24, [x19, #80]
 838:	bl	0 <current_item>
 83c:	bl	0 <item_index>
 840:	ldr	x24, [x24, w0, sxtw #3]
 844:	ldr	x0, [x24, #8]
 848:	bl	0 <item_opts>
 84c:	tbz	w0, #0, 804 <_ZN11NCursesMenuclEv+0x144>
 850:	ldr	x1, [x24]
 854:	mov	x0, x24
 858:	ldr	x1, [x1, #16]
 85c:	blr	x1
 860:	and	w24, w0, #0xff
 864:	ldr	x1, [x19]
 868:	mov	x0, x19
 86c:	ldr	x1, [x1, #32]
 870:	blr	x1
 874:	cbz	w24, 720 <_ZN11NCursesMenuclEv+0x60>
 878:	ldr	x0, [x19, #56]
 87c:	bl	0 <unpost_menu>
 880:	cbnz	w0, 974 <_ZN11NCursesMenuclEv+0x2b4>
 884:	ldr	x0, [x19, #48]
 888:	bl	0 <hide_panel>
 88c:	cmn	w0, #0x1
 890:	b.eq	978 <_ZN11NCursesMenuclEv+0x2b8>  // b.none
 894:	ldr	x1, [x19]
 898:	mov	x0, x19
 89c:	ldr	x1, [x1, #32]
 8a0:	blr	x1
 8a4:	ldr	x0, [x19, #56]
 8a8:	bl	0 <menu_opts>
 8ac:	mov	w1, w0
 8b0:	mov	x0, #0x0                   	// #0
 8b4:	tbz	w1, #0, 8cc <_ZN11NCursesMenuclEv+0x20c>
 8b8:	ldr	x0, [x19, #56]
 8bc:	ldr	x19, [x19, #80]
 8c0:	bl	0 <current_item>
 8c4:	bl	0 <item_index>
 8c8:	ldr	x0, [x19, w0, sxtw #3]
 8cc:	ldp	x19, x20, [sp, #16]
 8d0:	ldp	x21, x22, [sp, #32]
 8d4:	ldp	x23, x24, [sp, #48]
 8d8:	ldp	x25, x26, [sp, #64]
 8dc:	ldp	x29, x30, [sp], #80
 8e0:	ret
 8e4:	ldr	x0, [x19]
 8e8:	ldr	x2, [x0, #168]
 8ec:	cmp	x2, x23
 8f0:	b.ne	7ec <_ZN11NCursesMenuclEv+0x12c>  // b.any
 8f4:	bl	0 <beep>
 8f8:	b	720 <_ZN11NCursesMenuclEv+0x60>
 8fc:	ldr	x0, [x19, #56]
 900:	bl	0 <item_count>
 904:	cmp	w0, #0x0
 908:	b.le	720 <_ZN11NCursesMenuclEv+0x60>
 90c:	sub	w26, w0, #0x1
 910:	mov	x20, #0x0                   	// #0
 914:	add	x26, x26, #0x1
 918:	mov	w24, #0x0                   	// #0
 91c:	lsl	x26, x26, #3
 920:	ldr	x0, [x19, #80]
 924:	ldr	x25, [x0, x20]
 928:	ldr	x0, [x25, #8]
 92c:	bl	0 <item_value>
 930:	tst	w0, #0xff
 934:	b.eq	960 <_ZN11NCursesMenuclEv+0x2a0>  // b.none
 938:	ldr	x1, [x25]
 93c:	mov	x0, x25
 940:	ldr	x1, [x1, #16]
 944:	blr	x1
 948:	and	w0, w0, #0xff
 94c:	ldr	x1, [x19]
 950:	orr	w24, w0, w24
 954:	mov	x0, x19
 958:	ldr	x1, [x1, #32]
 95c:	blr	x1
 960:	add	x20, x20, #0x8
 964:	cmp	x26, x20
 968:	b.ne	920 <_ZN11NCursesMenuclEv+0x260>  // b.any
 96c:	cbnz	w24, 878 <_ZN11NCursesMenuclEv+0x1b8>
 970:	b	720 <_ZN11NCursesMenuclEv+0x60>
 974:	bl	1e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>
 978:	bl	1e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>
 97c:	nop

0000000000000980 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>:
 980:	stp	x29, x30, [sp, #-48]!
 984:	mov	x29, sp
 988:	str	x21, [sp, #32]
 98c:	mov	x21, x0
 990:	ldr	x0, [x1]
 994:	stp	x19, x20, [sp, #16]
 998:	mov	x19, x1
 99c:	ldr	x0, [x0, #8]
 9a0:	cbz	x0, a30 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0xb0>
 9a4:	mov	x2, #0x1                   	// #1
 9a8:	ldr	x1, [x19, x2, lsl #3]
 9ac:	mov	w3, w2
 9b0:	add	x2, x2, #0x1
 9b4:	ldr	x1, [x1, #8]
 9b8:	cbnz	x1, 9a8 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x28>
 9bc:	add	w3, w3, #0x1
 9c0:	sbfiz	x0, x3, #3, #32
 9c4:	bl	0 <_Znam>
 9c8:	mov	x20, x0
 9cc:	ldr	x1, [x19]
 9d0:	ldr	x3, [x1, #8]
 9d4:	cbz	x3, a28 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0xa8>
 9d8:	mov	x2, #0x0                   	// #0
 9dc:	nop
 9e0:	str	x3, [x20, x2]
 9e4:	add	x2, x2, #0x8
 9e8:	ldr	x1, [x19, x2]
 9ec:	ldr	x3, [x1, #8]
 9f0:	cbnz	x3, 9e0 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x60>
 9f4:	add	x2, x20, x2
 9f8:	ldr	x0, [x21, #56]
 9fc:	str	xzr, [x2]
 a00:	str	x19, [x21, #80]
 a04:	cbz	x0, a14 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x94>
 a08:	bl	0 <menu_items>
 a0c:	cbz	x0, a14 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x94>
 a10:	bl	0 <_ZdaPv>
 a14:	mov	x0, x20
 a18:	ldp	x19, x20, [sp, #16]
 a1c:	ldr	x21, [sp, #32]
 a20:	ldp	x29, x30, [sp], #48
 a24:	ret
 a28:	mov	x2, x0
 a2c:	b	9f8 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x78>
 a30:	mov	x0, #0x8                   	// #8
 a34:	b	9c4 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x44>

0000000000000a38 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb>:
 a38:	stp	x29, x30, [sp, #-64]!
 a3c:	mov	x29, sp
 a40:	stp	x19, x20, [sp, #16]
 a44:	mov	x19, x0
 a48:	mov	x20, x1
 a4c:	ldr	x0, [x0, #8]
 a50:	mov	w1, #0x1                   	// #1
 a54:	stp	x21, x22, [sp, #32]
 a58:	and	w21, w2, #0xff
 a5c:	and	w22, w3, #0xff
 a60:	bl	0 <keypad>
 a64:	ldr	x0, [x19, #8]
 a68:	mov	w1, #0x1                   	// #1
 a6c:	bl	0 <meta>
 a70:	str	xzr, [x19, #56]
 a74:	mov	x1, x20
 a78:	strb	w21, [x19, #73]
 a7c:	strb	w22, [x19, #74]
 a80:	mov	x0, x19
 a84:	bl	980 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>
 a88:	bl	0 <new_menu>
 a8c:	str	x0, [x19, #56]
 a90:	cbz	x0, be8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1b0>
 a94:	mov	x0, #0x18                  	// #24
 a98:	bl	0 <_Znwm>
 a9c:	mov	x1, x0
 aa0:	ldr	x0, [x19, #56]
 aa4:	stp	xzr, x19, [x1]
 aa8:	str	x0, [x1, #16]
 aac:	bl	0 <set_menu_userptr>
 ab0:	adrp	x1, 560 <_nc_xx_mnu_init>
 ab4:	ldr	x0, [x19, #56]
 ab8:	ldr	x1, [x1]
 abc:	bl	0 <set_menu_init>
 ac0:	adrp	x1, 5a0 <_nc_xx_mnu_term>
 ac4:	ldr	x0, [x19, #56]
 ac8:	ldr	x1, [x1]
 acc:	bl	0 <set_menu_term>
 ad0:	adrp	x1, 650 <_nc_xx_itm_init>
 ad4:	ldr	x0, [x19, #56]
 ad8:	ldr	x1, [x1]
 adc:	bl	0 <set_item_init>
 ae0:	adrp	x1, 5e0 <_nc_xx_itm_term>
 ae4:	ldr	x0, [x19, #56]
 ae8:	ldr	x1, [x1]
 aec:	bl	0 <set_item_term>
 af0:	ldr	x0, [x19, #56]
 af4:	add	x2, sp, #0x3c
 af8:	add	x1, sp, #0x38
 afc:	bl	0 <scale_menu>
 b00:	cbnz	w0, be8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1b0>
 b04:	ldr	x1, [x19, #8]
 b08:	ldr	x0, [x19, #56]
 b0c:	bl	0 <set_menu_win>
 b10:	cbz	w21, ba8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x170>
 b14:	ldr	x0, [x19, #8]
 b18:	ldr	w2, [sp, #56]
 b1c:	cbz	x0, bd0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x198>
 b20:	ldrsh	w1, [x0, #4]
 b24:	cmn	w1, #0x2
 b28:	b.eq	be0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1a8>  // b.none
 b2c:	cmp	w2, w1
 b30:	b.ge	be8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1b0>  // b.tcont
 b34:	ldrsh	w0, [x0, #6]
 b38:	cmn	w0, #0x2
 b3c:	b.eq	bd8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1a0>  // b.none
 b40:	ldr	w1, [sp, #60]
 b44:	cmp	w1, w0
 b48:	b.ge	be8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1b0>  // b.tcont
 b4c:	mov	x0, #0x30                  	// #48
 b50:	bl	0 <_Znwm>
 b54:	ldp	w2, w3, [sp, #56]
 b58:	mov	w5, #0x1                   	// #1
 b5c:	mov	x20, x0
 b60:	mov	w4, w5
 b64:	mov	x1, x19
 b68:	mov	w6, #0x72                  	// #114
 b6c:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 b70:	ldr	x1, [x20, #8]
 b74:	str	x20, [x19, #64]
 b78:	ldr	x0, [x19, #56]
 b7c:	bl	0 <set_menu_sub>
 b80:	ldr	x1, [x19]
 b84:	mov	w0, #0x1                   	// #1
 b88:	strb	w0, [x19, #72]
 b8c:	mov	x0, x19
 b90:	ldr	x1, [x1, #96]
 b94:	blr	x1
 b98:	ldp	x19, x20, [sp, #16]
 b9c:	ldp	x21, x22, [sp, #32]
 ba0:	ldp	x29, x30, [sp], #64
 ba4:	ret
 ba8:	ldr	x1, [x19]
 bac:	str	xzr, [x19, #64]
 bb0:	strb	wzr, [x19, #72]
 bb4:	mov	x0, x19
 bb8:	ldr	x1, [x1, #96]
 bbc:	blr	x1
 bc0:	ldp	x19, x20, [sp, #16]
 bc4:	ldp	x21, x22, [sp, #32]
 bc8:	ldp	x29, x30, [sp], #64
 bcc:	ret
 bd0:	cmn	w2, #0x1
 bd4:	b.ge	be8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1b0>  // b.tcont
 bd8:	mov	w0, #0xffffffff            	// #-1
 bdc:	b	b40 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x108>
 be0:	mov	w1, #0xffffffff            	// #-1
 be4:	b	b2c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0xf4>
 be8:	bl	1e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>
 bec:	mov	x1, #0x30                  	// #48
 bf0:	mov	x19, x0
 bf4:	mov	x0, x20
 bf8:	bl	0 <_ZdlPvm>
 bfc:	mov	x0, x19
 c00:	bl	0 <_Unwind_Resume>
 c04:	nop

0000000000000c08 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow>:
 c08:	stp	x29, x30, [sp, #-32]!
 c0c:	mov	x29, sp
 c10:	stp	x19, x20, [sp, #16]
 c14:	mov	x19, x0
 c18:	mov	x20, x1
 c1c:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 c20:	tst	w0, #0xff
 c24:	b.eq	c5c <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x54>  // b.none
 c28:	ldrb	w0, [x19, #72]
 c2c:	cbz	w0, c44 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x3c>
 c30:	ldr	x0, [x19, #64]
 c34:	cbz	x0, c44 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x3c>
 c38:	ldr	x1, [x0]
 c3c:	ldr	x1, [x1, #16]
 c40:	blr	x1
 c44:	ldr	x1, [x20, #8]
 c48:	str	x20, [x19, #64]
 c4c:	ldr	x0, [x19, #56]
 c50:	ldp	x19, x20, [sp, #16]
 c54:	ldp	x29, x30, [sp], #32
 c58:	b	0 <set_menu_sub>
 c5c:	bl	1e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>

0000000000000c60 <_ZN11NCursesMenu11set_patternEPKc>:
 c60:	stp	x29, x30, [sp, #-16]!
 c64:	mov	x29, sp
 c68:	ldr	x0, [x0, #56]
 c6c:	bl	0 <set_menu_pattern>
 c70:	cmn	w0, #0x9
 c74:	b.eq	c8c <_ZN11NCursesMenu11set_patternEPKc+0x2c>  // b.none
 c78:	cbz	w0, c80 <_ZN11NCursesMenu11set_patternEPKc+0x20>
 c7c:	bl	1e0 <_ZNK11NCursesMenu7OnErrorEi.isra.0.part.0>
 c80:	mov	w0, #0x1                   	// #1
 c84:	ldp	x29, x30, [sp], #16
 c88:	ret
 c8c:	mov	w0, #0x0                   	// #0
 c90:	ldp	x29, x30, [sp], #16
 c94:	ret

Disassembly of section .text._ZNK18NCursesApplication11foregroundsEv:

0000000000000000 <_ZNK18NCursesApplication11foregroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	mov	w2, #0x100                 	// #256
   8:	mov	w1, #0x200000              	// #2097152
   c:	cmp	w0, #0x0
  10:	csel	w0, w2, w1, ne  // ne = any
  14:	ret

Disassembly of section .text._ZNK18NCursesApplication11backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication11backgroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #9
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication9inactivesEv:

0000000000000000 <_ZNK18NCursesApplication9inactivesEv>:
   0:	ldrb	w0, [x0, #8]
   4:	mov	w2, #0x300                 	// #768
   8:	movk	w2, #0x10, lsl #16
   c:	mov	w1, #0x100000              	// #1048576
  10:	cmp	w0, #0x0
  14:	csel	w0, w2, w1, ne  // ne = any
  18:	ret

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, #0x0                   	// #0
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	bl	0 <_ZN12NCursesPanel5mvwinEii>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesm.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesm.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	mov	x1, x19
  20:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  24:	ldr	x19, [sp, #16]
  28:	adrp	x2, 0 <__dso_handle>
  2c:	ldp	x29, x30, [sp], #32
  30:	add	x2, x2, #0x0
  34:	ldr	x0, [x0]
  38:	b	0 <__cxa_atexit>

Disassembly of section .text._ZN11NCursesMenu5labelEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5labelEPKcS1_>:
   0:	ldrb	w3, [x0, #73]
   4:	cbz	w3, c <_ZN11NCursesMenu5labelEPKcS1_+0xc>
   8:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZN11NCursesMenu5labelEPKcS1_>

Disassembly of section .text._ZN11NCursesMenu9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesMenu9boldframeEPKcS1_>:
   0:	ldrb	w3, [x0, #73]
   4:	cbz	w3, c <_ZN11NCursesMenu9boldframeEPKcS1_+0xc>
   8:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZN11NCursesMenu9boldframeEPKcS1_>

Disassembly of section .text._ZN11NCursesMenu5frameEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5frameEPKcS1_>:
   0:	ldrb	w3, [x0, #73]
   4:	cbz	w3, c <_ZN11NCursesMenu5frameEPKcS1_+0xc>
   8:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZN11NCursesMenu5frameEPKcS1_>

cursesw.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_Z5THROWPK16NCursesException.isra.0>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <_ZSt4cerr>
  10:	bl	0 <endwin>
  14:	ldr	x19, [x19]
  18:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
  1c:	add	x1, x1, #0x0
  20:	mov	x2, #0x19                  	// #25
  24:	mov	x0, x19
  28:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
  2c:	mov	x0, x19
  30:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  34:	mov	w0, #0x1                   	// #1
  38:	bl	0 <exit>
  3c:	nop

0000000000000040 <_ZNK13NCursesWindow11err_handlerEPKc>:
  40:	stp	x29, x30, [sp, #-16]!
  44:	mov	x0, #0x18                  	// #24
  48:	mov	x29, sp
  4c:	bl	0 <_Znwm>
  50:	bl	0 <_Z5THROWPK16NCursesException.isra.0>
  54:	nop

0000000000000058 <_ZN13NCursesWindow5scanwEPKcz>:
  58:	stp	x29, x30, [sp, #-256]!
  5c:	mov	w9, #0xffffffd0            	// #-48
  60:	mov	w8, #0xffffff80            	// #-128
  64:	mov	x29, sp
  68:	add	x10, sp, #0xd0
  6c:	add	x11, sp, #0x100
  70:	stp	x11, x11, [sp, #48]
  74:	str	x10, [sp, #64]
  78:	stp	w9, w8, [sp, #72]
  7c:	ldp	x10, x11, [sp, #48]
  80:	stp	x10, x11, [sp, #16]
  84:	ldp	x8, x9, [sp, #64]
  88:	stp	x8, x9, [sp, #32]
  8c:	str	q0, [sp, #80]
  90:	str	q1, [sp, #96]
  94:	str	q2, [sp, #112]
  98:	str	q3, [sp, #128]
  9c:	str	q4, [sp, #144]
  a0:	str	q5, [sp, #160]
  a4:	str	q6, [sp, #176]
  a8:	str	q7, [sp, #192]
  ac:	stp	x2, x3, [sp, #208]
  b0:	add	x2, sp, #0x10
  b4:	stp	x4, x5, [sp, #224]
  b8:	stp	x6, x7, [sp, #240]
  bc:	ldr	x0, [x0, #8]
  c0:	bl	0 <vw_scanw>
  c4:	ldp	x29, x30, [sp], #256
  c8:	ret
  cc:	nop

00000000000000d0 <_ZN13NCursesWindow5scanwEiiPKcz>:
  d0:	stp	x29, x30, [sp, #-256]!
  d4:	mov	x29, sp
  d8:	str	q0, [sp, #96]
  dc:	stp	x19, x20, [sp, #16]
  e0:	mov	x19, x0
  e4:	mov	x20, x3
  e8:	ldr	x0, [x0, #8]
  ec:	str	q1, [sp, #112]
  f0:	str	q2, [sp, #128]
  f4:	str	q3, [sp, #144]
  f8:	str	q4, [sp, #160]
  fc:	str	q5, [sp, #176]
 100:	str	q6, [sp, #192]
 104:	str	q7, [sp, #208]
 108:	stp	x4, x5, [sp, #224]
 10c:	stp	x6, x7, [sp, #240]
 110:	bl	0 <wmove>
 114:	cmn	w0, #0x1
 118:	b.eq	15c <_ZN13NCursesWindow5scanwEiiPKcz+0x8c>  // b.none
 11c:	add	x1, sp, #0x100
 120:	add	x2, sp, #0x100
 124:	stp	x1, x2, [sp, #64]
 128:	add	x5, sp, #0xe0
 12c:	mov	w4, #0xffffffe0            	// #-32
 130:	mov	w3, #0xffffff80            	// #-128
 134:	str	x5, [sp, #80]
 138:	stp	w4, w3, [sp, #88]
 13c:	mov	x1, x20
 140:	ldp	x4, x5, [sp, #64]
 144:	add	x2, sp, #0x20
 148:	ldr	x0, [x19, #8]
 14c:	stp	x4, x5, [sp, #32]
 150:	ldp	x4, x5, [sp, #80]
 154:	stp	x4, x5, [sp, #48]
 158:	bl	0 <vw_scanw>
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x29, x30, [sp], #256
 164:	ret

0000000000000168 <_ZN13NCursesWindow5scanwEPKcSt9__va_list>:
 168:	mov	x3, x2
 16c:	stp	x29, x30, [sp, #-48]!
 170:	mov	x29, sp
 174:	ldp	x4, x5, [x3]
 178:	stp	x4, x5, [sp, #16]
 17c:	add	x2, sp, #0x10
 180:	ldp	x4, x5, [x3, #16]
 184:	stp	x4, x5, [sp, #32]
 188:	ldr	x0, [x0, #8]
 18c:	bl	0 <vw_scanw>
 190:	ldp	x29, x30, [sp], #48
 194:	ret

0000000000000198 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list>:
 198:	stp	x29, x30, [sp, #-80]!
 19c:	mov	x29, sp
 1a0:	stp	x19, x20, [sp, #16]
 1a4:	mov	x19, x0
 1a8:	mov	x20, x4
 1ac:	ldr	x0, [x0, #8]
 1b0:	str	x21, [sp, #32]
 1b4:	mov	x21, x3
 1b8:	bl	0 <wmove>
 1bc:	cmn	w0, #0x1
 1c0:	b.eq	1e4 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list+0x4c>  // b.none
 1c4:	ldp	x6, x7, [x20]
 1c8:	mov	x1, x21
 1cc:	ldp	x4, x5, [x20, #16]
 1d0:	add	x2, sp, #0x30
 1d4:	ldr	x0, [x19, #8]
 1d8:	stp	x6, x7, [sp, #48]
 1dc:	stp	x4, x5, [sp, #64]
 1e0:	bl	0 <vw_scanw>
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldr	x21, [sp, #32]
 1ec:	ldp	x29, x30, [sp], #80
 1f0:	ret
 1f4:	nop

00000000000001f8 <_ZN13NCursesWindow6printwEPKcz>:
 1f8:	stp	x29, x30, [sp, #-256]!
 1fc:	mov	w9, #0xffffffd0            	// #-48
 200:	mov	w8, #0xffffff80            	// #-128
 204:	mov	x29, sp
 208:	add	x10, sp, #0xd0
 20c:	add	x11, sp, #0x100
 210:	stp	x11, x11, [sp, #48]
 214:	str	x10, [sp, #64]
 218:	stp	w9, w8, [sp, #72]
 21c:	ldp	x10, x11, [sp, #48]
 220:	stp	x10, x11, [sp, #16]
 224:	ldp	x8, x9, [sp, #64]
 228:	stp	x8, x9, [sp, #32]
 22c:	str	q0, [sp, #80]
 230:	str	q1, [sp, #96]
 234:	str	q2, [sp, #112]
 238:	str	q3, [sp, #128]
 23c:	str	q4, [sp, #144]
 240:	str	q5, [sp, #160]
 244:	str	q6, [sp, #176]
 248:	str	q7, [sp, #192]
 24c:	stp	x2, x3, [sp, #208]
 250:	add	x2, sp, #0x10
 254:	stp	x4, x5, [sp, #224]
 258:	stp	x6, x7, [sp, #240]
 25c:	ldr	x0, [x0, #8]
 260:	bl	0 <vw_printw>
 264:	ldp	x29, x30, [sp], #256
 268:	ret
 26c:	nop

0000000000000270 <_ZN13NCursesWindow6printwEiiPKcz>:
 270:	stp	x29, x30, [sp, #-256]!
 274:	mov	w8, #0xffffffe0            	// #-32
 278:	mov	x29, sp
 27c:	str	q0, [sp, #96]
 280:	add	x9, sp, #0xe0
 284:	stp	x19, x20, [sp, #16]
 288:	mov	x19, x0
 28c:	mov	x20, x3
 290:	ldr	x0, [x0, #8]
 294:	stp	x4, x5, [sp, #224]
 298:	add	x4, sp, #0x100
 29c:	mov	w3, #0xffffff80            	// #-128
 2a0:	stp	x4, x4, [sp, #64]
 2a4:	str	x9, [sp, #80]
 2a8:	stp	w8, w3, [sp, #88]
 2ac:	str	q1, [sp, #112]
 2b0:	str	q2, [sp, #128]
 2b4:	str	q3, [sp, #144]
 2b8:	str	q4, [sp, #160]
 2bc:	str	q5, [sp, #176]
 2c0:	str	q6, [sp, #192]
 2c4:	str	q7, [sp, #208]
 2c8:	stp	x6, x7, [sp, #240]
 2cc:	bl	0 <wmove>
 2d0:	cbz	w0, 2e0 <_ZN13NCursesWindow6printwEiiPKcz+0x70>
 2d4:	ldp	x19, x20, [sp, #16]
 2d8:	ldp	x29, x30, [sp], #256
 2dc:	ret
 2e0:	ldp	x6, x7, [sp, #64]
 2e4:	mov	x1, x20
 2e8:	ldp	x4, x5, [sp, #80]
 2ec:	add	x2, sp, #0x20
 2f0:	ldr	x0, [x19, #8]
 2f4:	stp	x6, x7, [sp, #32]
 2f8:	stp	x4, x5, [sp, #48]
 2fc:	bl	0 <vw_printw>
 300:	ldp	x19, x20, [sp, #16]
 304:	ldp	x29, x30, [sp], #256
 308:	ret
 30c:	nop

0000000000000310 <_ZN13NCursesWindow6printwEPKcSt9__va_list>:
 310:	mov	x3, x2
 314:	stp	x29, x30, [sp, #-48]!
 318:	mov	x29, sp
 31c:	ldp	x4, x5, [x3]
 320:	stp	x4, x5, [sp, #16]
 324:	add	x2, sp, #0x10
 328:	ldp	x4, x5, [x3, #16]
 32c:	stp	x4, x5, [sp, #32]
 330:	ldr	x0, [x0, #8]
 334:	bl	0 <vw_printw>
 338:	ldp	x29, x30, [sp], #48
 33c:	ret

0000000000000340 <_ZN13NCursesWindow6printwEiiPKcSt9__va_list>:
 340:	stp	x29, x30, [sp, #-80]!
 344:	mov	x29, sp
 348:	stp	x19, x20, [sp, #16]
 34c:	mov	x19, x0
 350:	mov	x20, x4
 354:	ldr	x0, [x0, #8]
 358:	str	x21, [sp, #32]
 35c:	mov	x21, x3
 360:	bl	0 <wmove>
 364:	cbz	w0, 378 <_ZN13NCursesWindow6printwEiiPKcSt9__va_list+0x38>
 368:	ldp	x19, x20, [sp, #16]
 36c:	ldr	x21, [sp, #32]
 370:	ldp	x29, x30, [sp], #80
 374:	ret
 378:	ldp	x6, x7, [x20]
 37c:	mov	x1, x21
 380:	ldp	x4, x5, [x20, #16]
 384:	add	x2, sp, #0x30
 388:	ldr	x0, [x19, #8]
 38c:	stp	x6, x7, [sp, #48]
 390:	stp	x4, x5, [sp, #64]
 394:	bl	0 <vw_printw>
 398:	ldp	x19, x20, [sp, #16]
 39c:	ldr	x21, [sp, #32]
 3a0:	ldp	x29, x30, [sp], #80
 3a4:	ret

00000000000003a8 <_ZN13NCursesWindow12set_keyboardEv>:
 3a8:	stp	x29, x30, [sp, #-32]!
 3ac:	mov	w1, #0x1                   	// #1
 3b0:	mov	x29, sp
 3b4:	str	x19, [sp, #16]
 3b8:	mov	x19, x0
 3bc:	ldr	x0, [x0, #8]
 3c0:	bl	0 <keypad>
 3c4:	ldr	x0, [x19, #8]
 3c8:	mov	w1, #0x1                   	// #1
 3cc:	ldr	x19, [sp, #16]
 3d0:	ldp	x29, x30, [sp], #32
 3d4:	b	0 <meta>

00000000000003d8 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>:
 3d8:	stp	x29, x30, [sp, #-32]!
 3dc:	adrp	x2, af8 <_nc_xx_ripoff_init>
 3e0:	mov	x29, sp
 3e4:	stp	x19, x20, [sp, #16]
 3e8:	mov	x19, x1
 3ec:	mov	w20, w0
 3f0:	ldr	x1, [x2]
 3f4:	bl	0 <_nc_ripoffline>
 3f8:	cmp	x19, #0x0
 3fc:	ccmp	w20, #0x0, #0x4, ne  // ne = any
 400:	ccmp	w0, #0x0, #0x0, ne  // ne = any
 404:	b.eq	414 <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x3c>  // b.none
 408:	ldp	x19, x20, [sp, #16]
 40c:	ldp	x29, x30, [sp], #32
 410:	ret
 414:	adrp	x2, 0 <_Z5THROWPK16NCursesException.isra.0>
 418:	add	x1, x2, #0x0
 41c:	add	x1, x1, #0x10
 420:	ldr	w3, [x2]
 424:	add	w4, w3, #0x1
 428:	str	w4, [x2]
 42c:	str	x19, [x1, w3, sxtw #3]
 430:	ldp	x19, x20, [sp, #16]
 434:	ldp	x29, x30, [sp], #32
 438:	ret
 43c:	nop

0000000000000440 <_ZN13NCursesWindow12isDescendantERS_>:
 440:	stp	x29, x30, [sp, #-32]!
 444:	mov	x29, sp
 448:	stp	x19, x20, [sp, #16]
 44c:	ldr	x19, [x0, #32]
 450:	cbz	x19, 494 <_ZN13NCursesWindow12isDescendantERS_+0x54>
 454:	mov	x20, x1
 458:	cmp	x19, x1
 45c:	b.eq	484 <_ZN13NCursesWindow12isDescendantERS_+0x44>  // b.none
 460:	mov	x1, x20
 464:	mov	x0, x19
 468:	bl	440 <_ZN13NCursesWindow12isDescendantERS_>
 46c:	ands	w0, w0, #0xff
 470:	b.ne	488 <_ZN13NCursesWindow12isDescendantERS_+0x48>  // b.any
 474:	ldr	x19, [x19, #40]
 478:	cmp	x20, x19
 47c:	cbz	x19, 488 <_ZN13NCursesWindow12isDescendantERS_+0x48>
 480:	b.ne	460 <_ZN13NCursesWindow12isDescendantERS_+0x20>  // b.any
 484:	mov	w0, #0x1                   	// #1
 488:	ldp	x19, x20, [sp, #16]
 48c:	ldp	x29, x30, [sp], #32
 490:	ret
 494:	mov	w0, #0x0                   	// #0
 498:	b	488 <_ZN13NCursesWindow12isDescendantERS_+0x48>
 49c:	nop

00000000000004a0 <_ZN13NCursesWindow15kill_subwindowsEv>:
 4a0:	stp	x29, x30, [sp, #-32]!
 4a4:	mov	x29, sp
 4a8:	stp	x19, x20, [sp, #16]
 4ac:	ldr	x20, [x0, #32]
 4b0:	str	xzr, [x0, #32]
 4b4:	cbz	x20, 4f0 <_ZN13NCursesWindow15kill_subwindowsEv+0x50>
 4b8:	mov	x19, x20
 4bc:	mov	x0, x20
 4c0:	ldr	x20, [x20, #40]
 4c4:	bl	4a0 <_ZN13NCursesWindow15kill_subwindowsEv>
 4c8:	ldrb	w0, [x19, #16]
 4cc:	cbz	w0, 4dc <_ZN13NCursesWindow15kill_subwindowsEv+0x3c>
 4d0:	ldr	x0, [x19, #8]
 4d4:	cbz	x0, 4dc <_ZN13NCursesWindow15kill_subwindowsEv+0x3c>
 4d8:	bl	0 <delwin>
 4dc:	ldr	x1, [x19]
 4e0:	mov	x0, x19
 4e4:	ldr	x1, [x1, #16]
 4e8:	blr	x1
 4ec:	cbnz	x20, 4b8 <_ZN13NCursesWindow15kill_subwindowsEv+0x18>
 4f0:	ldp	x19, x20, [sp, #16]
 4f4:	ldp	x29, x30, [sp], #32
 4f8:	ret
 4fc:	nop

0000000000000500 <_ZN13NCursesWindowD1Ev>:
 500:	stp	x29, x30, [sp, #-32]!
 504:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 508:	mov	x29, sp
 50c:	ldr	x1, [x1]
 510:	str	x19, [sp, #16]
 514:	mov	x19, x0
 518:	add	x1, x1, #0x10
 51c:	str	x1, [x0]
 520:	bl	4a0 <_ZN13NCursesWindow15kill_subwindowsEv>
 524:	ldr	x0, [x19, #24]
 528:	cbz	x0, 560 <_ZN13NCursesWindowD1Ev+0x60>
 52c:	ldr	x2, [x0, #32]
 530:	cbz	x2, 560 <_ZN13NCursesWindowD1Ev+0x60>
 534:	cmp	x19, x2
 538:	ldr	x1, [x2, #40]
 53c:	b.eq	5cc <_ZN13NCursesWindowD1Ev+0xcc>  // b.none
 540:	cbz	x1, 560 <_ZN13NCursesWindowD1Ev+0x60>
 544:	nop
 548:	cmp	x19, x1
 54c:	ldr	x0, [x1, #40]
 550:	b.eq	5a4 <_ZN13NCursesWindowD1Ev+0xa4>  // b.none
 554:	mov	x2, x1
 558:	mov	x1, x0
 55c:	cbnz	x1, 548 <_ZN13NCursesWindowD1Ev+0x48>
 560:	ldrb	w0, [x19, #16]
 564:	cbz	w0, 598 <_ZN13NCursesWindowD1Ev+0x98>
 568:	ldr	x0, [x19, #8]
 56c:	cbz	x0, 57c <_ZN13NCursesWindowD1Ev+0x7c>
 570:	bl	0 <delwin>
 574:	ldrb	w0, [x19, #16]
 578:	cbz	w0, 598 <_ZN13NCursesWindowD1Ev+0x98>
 57c:	adrp	x1, 48 <_ZNK13NCursesWindow11err_handlerEPKc+0x8>
 580:	ldr	x1, [x1]
 584:	ldr	x0, [x1]
 588:	subs	x0, x0, #0x1
 58c:	str	x0, [x1]
 590:	cbz	x0, 5ac <_ZN13NCursesWindowD1Ev+0xac>
 594:	b.mi	5bc <_ZN13NCursesWindowD1Ev+0xbc>  // b.first
 598:	ldr	x19, [sp, #16]
 59c:	ldp	x29, x30, [sp], #32
 5a0:	ret
 5a4:	str	x0, [x2, #40]
 5a8:	b	560 <_ZN13NCursesWindowD1Ev+0x60>
 5ac:	bl	0 <endwin>
 5b0:	ldr	x19, [sp, #16]
 5b4:	ldp	x29, x30, [sp], #32
 5b8:	ret
 5bc:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 5c0:	mov	x0, x19
 5c4:	add	x1, x1, #0x0
 5c8:	bl	40 <_ZNK13NCursesWindow11err_handlerEPKc>
 5cc:	str	x1, [x0, #32]
 5d0:	b	560 <_ZN13NCursesWindowD1Ev+0x60>
 5d4:	nop

00000000000005d8 <_ZN13NCursesWindowD0Ev>:
 5d8:	stp	x29, x30, [sp, #-32]!
 5dc:	mov	x29, sp
 5e0:	str	x19, [sp, #16]
 5e4:	mov	x19, x0
 5e8:	bl	500 <_ZN13NCursesWindowD1Ev>
 5ec:	mov	x0, x19
 5f0:	mov	x1, #0x30                  	// #48
 5f4:	ldr	x19, [sp, #16]
 5f8:	ldp	x29, x30, [sp], #32
 5fc:	b	0 <_ZdlPvm>

0000000000000600 <_ZN13NCursesWindow9useColorsEv>:
 600:	stp	x29, x30, [sp, #-32]!
 604:	mov	x29, sp
 608:	str	x19, [sp, #16]
 60c:	adrp	x19, 3c <_Z5THROWPK16NCursesException.isra.0+0x3c>
 610:	ldr	x19, [x19]
 614:	ldr	w0, [x19]
 618:	cbnz	w0, 634 <_ZN13NCursesWindow9useColorsEv+0x34>
 61c:	adrp	x0, 40 <_ZNK13NCursesWindow11err_handlerEPKc>
 620:	ldr	x0, [x0]
 624:	ldrb	w0, [x0]
 628:	cbnz	w0, 640 <_ZN13NCursesWindow9useColorsEv+0x40>
 62c:	mov	w0, #0xffffffff            	// #-1
 630:	str	w0, [x19]
 634:	ldr	x19, [sp, #16]
 638:	ldp	x29, x30, [sp], #32
 63c:	ret
 640:	bl	0 <has_colors>
 644:	tst	w0, #0xff
 648:	b.ne	660 <_ZN13NCursesWindow9useColorsEv+0x60>  // b.any
 64c:	mov	w0, #0x1                   	// #1
 650:	str	w0, [x19]
 654:	ldr	x19, [sp, #16]
 658:	ldp	x29, x30, [sp], #32
 65c:	ret
 660:	bl	0 <start_color>
 664:	mov	w0, #0x2                   	// #2
 668:	str	w0, [x19]
 66c:	b	634 <_ZN13NCursesWindow9useColorsEv+0x34>

0000000000000670 <_ZN13NCursesWindow10initializeEv>:
 670:	stp	x29, x30, [sp, #-32]!
 674:	mov	x29, sp
 678:	str	x19, [sp, #16]
 67c:	adrp	x19, 40 <_ZNK13NCursesWindow11err_handlerEPKc>
 680:	ldr	x19, [x19]
 684:	ldrb	w0, [x19]
 688:	cbz	w0, 698 <_ZN13NCursesWindow10initializeEv+0x28>
 68c:	ldr	x19, [sp, #16]
 690:	ldp	x29, x30, [sp], #32
 694:	ret
 698:	bl	0 <initscr>
 69c:	adrp	x0, 3c <_Z5THROWPK16NCursesException.isra.0+0x3c>
 6a0:	mov	w1, #0x1                   	// #1
 6a4:	strb	w1, [x19]
 6a8:	ldr	x0, [x0]
 6ac:	ldr	w1, [x0]
 6b0:	cmn	w1, #0x1
 6b4:	b.eq	6c8 <_ZN13NCursesWindow10initializeEv+0x58>  // b.none
 6b8:	bl	0 <noecho>
 6bc:	ldr	x19, [sp, #16]
 6c0:	ldp	x29, x30, [sp], #32
 6c4:	b	0 <cbreak>
 6c8:	str	wzr, [x0]
 6cc:	bl	600 <_ZN13NCursesWindow9useColorsEv>
 6d0:	b	6b8 <_ZN13NCursesWindow10initializeEv+0x48>
 6d4:	nop

00000000000006d8 <_ZN13NCursesWindow12constructingEv>:
 6d8:	stp	x29, x30, [sp, #-16]!
 6dc:	mov	x29, sp
 6e0:	bl	670 <_ZN13NCursesWindow10initializeEv>
 6e4:	adrp	x0, 48 <_ZNK13NCursesWindow11err_handlerEPKc+0x8>
 6e8:	ldr	x0, [x0]
 6ec:	ldr	x1, [x0]
 6f0:	add	x1, x1, #0x1
 6f4:	str	x1, [x0]
 6f8:	ldp	x29, x30, [sp], #16
 6fc:	ret

0000000000000700 <_ZN13NCursesWindowC1Ev>:
 700:	stp	x29, x30, [sp, #-32]!
 704:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 708:	mov	x29, sp
 70c:	ldr	x1, [x1]
 710:	str	x19, [sp, #16]
 714:	mov	x19, x0
 718:	strb	wzr, [x0, #16]
 71c:	add	x1, x1, #0x10
 720:	stp	x1, xzr, [x0]
 724:	stp	xzr, xzr, [x0, #24]
 728:	str	xzr, [x0, #40]
 72c:	bl	6d8 <_ZN13NCursesWindow12constructingEv>
 730:	str	xzr, [x19, #8]
 734:	ldr	x19, [sp, #16]
 738:	ldp	x29, x30, [sp], #32
 73c:	ret

0000000000000740 <_ZN13NCursesWindowC1Eiiii>:
 740:	stp	x29, x30, [sp, #-64]!
 744:	adrp	x5, 0 <_Z5THROWPK16NCursesException.isra.0>
 748:	mov	w6, #0x1                   	// #1
 74c:	mov	x29, sp
 750:	ldr	x5, [x5]
 754:	stp	x19, x20, [sp, #16]
 758:	mov	x19, x0
 75c:	add	x5, x5, #0x10
 760:	stp	x21, x22, [sp, #32]
 764:	mov	w20, w1
 768:	str	x23, [sp, #48]
 76c:	mov	w21, w2
 770:	stp	x5, xzr, [x0]
 774:	mov	w22, w3
 778:	mov	w23, w4
 77c:	strb	w6, [x0, #16]
 780:	stp	xzr, xzr, [x0, #24]
 784:	str	xzr, [x0, #40]
 788:	bl	6d8 <_ZN13NCursesWindow12constructingEv>
 78c:	mov	w3, w23
 790:	mov	w2, w22
 794:	mov	w1, w21
 798:	mov	w0, w20
 79c:	bl	0 <newwin>
 7a0:	str	x0, [x19, #8]
 7a4:	cbz	x0, 7c0 <_ZN13NCursesWindowC1Eiiii+0x80>
 7a8:	mov	x0, x19
 7ac:	ldp	x19, x20, [sp, #16]
 7b0:	ldp	x21, x22, [sp, #32]
 7b4:	ldr	x23, [sp, #48]
 7b8:	ldp	x29, x30, [sp], #64
 7bc:	b	3a8 <_ZN13NCursesWindow12set_keyboardEv>
 7c0:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 7c4:	mov	x0, x19
 7c8:	add	x1, x1, #0x0
 7cc:	bl	40 <_ZNK13NCursesWindow11err_handlerEPKc>

00000000000007d0 <_ZN13NCursesWindowC1EP7_win_st>:
 7d0:	stp	x29, x30, [sp, #-32]!
 7d4:	adrp	x2, 0 <_Z5THROWPK16NCursesException.isra.0>
 7d8:	mov	x29, sp
 7dc:	ldr	x2, [x2]
 7e0:	stp	x19, x20, [sp, #16]
 7e4:	mov	x20, x1
 7e8:	add	x2, x2, #0x10
 7ec:	stp	x2, xzr, [x0]
 7f0:	mov	x19, x0
 7f4:	strb	wzr, [x0, #16]
 7f8:	stp	xzr, xzr, [x0, #24]
 7fc:	str	xzr, [x0, #40]
 800:	bl	6d8 <_ZN13NCursesWindow12constructingEv>
 804:	cbz	x20, 81c <_ZN13NCursesWindowC1EP7_win_st+0x4c>
 808:	str	x20, [x19, #8]
 80c:	mov	x0, x19
 810:	ldp	x19, x20, [sp, #16]
 814:	ldp	x29, x30, [sp], #32
 818:	b	3a8 <_ZN13NCursesWindow12set_keyboardEv>
 81c:	adrp	x0, 0 <stdscr>
 820:	ldr	x0, [x0]
 824:	ldr	x20, [x0]
 828:	str	x20, [x19, #8]
 82c:	mov	x0, x19
 830:	ldp	x19, x20, [sp, #16]
 834:	ldp	x29, x30, [sp], #32
 838:	b	3a8 <_ZN13NCursesWindow12set_keyboardEv>
 83c:	nop

0000000000000840 <_ZN13NCursesWindow5CloneEv>:
 840:	stp	x29, x30, [sp, #-32]!
 844:	mov	x29, sp
 848:	stp	x19, x20, [sp, #16]
 84c:	mov	x20, x0
 850:	mov	x19, x8
 854:	ldr	x0, [x0, #8]
 858:	bl	0 <dupwin>
 85c:	mov	x1, x0
 860:	mov	x0, x19
 864:	bl	7d0 <_ZN13NCursesWindowC1EP7_win_st>
 868:	ldrb	w4, [x20, #16]
 86c:	mov	x0, x19
 870:	ldp	x3, x2, [x20, #24]
 874:	ldr	x1, [x20, #40]
 878:	strb	w4, [x19, #16]
 87c:	stp	x3, x2, [x19, #24]
 880:	str	x1, [x19, #40]
 884:	ldp	x19, x20, [sp, #16]
 888:	ldp	x29, x30, [sp], #32
 88c:	ret

0000000000000890 <_ZN13NCursesWindowC1ERS_iiiic>:
 890:	stp	x29, x30, [sp, #-80]!
 894:	adrp	x7, 0 <_Z5THROWPK16NCursesException.isra.0>
 898:	mov	w8, #0x1                   	// #1
 89c:	mov	x29, sp
 8a0:	ldr	x7, [x7]
 8a4:	stp	x19, x20, [sp, #16]
 8a8:	mov	x20, x1
 8ac:	add	x7, x7, #0x10
 8b0:	stp	x21, x22, [sp, #32]
 8b4:	mov	x19, x0
 8b8:	stp	x23, x24, [sp, #48]
 8bc:	mov	w21, w4
 8c0:	mov	w23, w2
 8c4:	str	x25, [sp, #64]
 8c8:	mov	w24, w3
 8cc:	stp	x7, xzr, [x0]
 8d0:	and	w25, w6, #0xff
 8d4:	mov	w22, w5
 8d8:	strb	w8, [x0, #16]
 8dc:	stp	xzr, xzr, [x0, #24]
 8e0:	str	xzr, [x0, #40]
 8e4:	bl	6d8 <_ZN13NCursesWindow12constructingEv>
 8e8:	cmp	w25, #0x61
 8ec:	ldr	x0, [x20, #8]
 8f0:	b.eq	938 <_ZN13NCursesWindowC1ERS_iiiic+0xa8>  // b.none
 8f4:	mov	w4, w22
 8f8:	mov	w3, w21
 8fc:	mov	w2, w24
 900:	mov	w1, w23
 904:	bl	0 <derwin>
 908:	str	x0, [x19, #8]
 90c:	cbz	x0, 968 <_ZN13NCursesWindowC1ERS_iiiic+0xd8>
 910:	ldr	x0, [x20, #32]
 914:	ldp	x21, x22, [sp, #32]
 918:	ldp	x23, x24, [sp, #48]
 91c:	ldr	x25, [sp, #64]
 920:	str	x20, [x19, #24]
 924:	str	x19, [x20, #32]
 928:	str	x0, [x19, #40]
 92c:	ldp	x19, x20, [sp, #16]
 930:	ldp	x29, x30, [sp], #80
 934:	ret
 938:	cbz	x0, 978 <_ZN13NCursesWindowC1ERS_iiiic+0xe8>
 93c:	ldrsh	w2, [x0, #8]
 940:	ldrsh	w1, [x0, #10]
 944:	sub	w21, w21, w2
 948:	sub	w22, w22, w1
 94c:	mov	w4, w22
 950:	mov	w3, w21
 954:	mov	w2, w24
 958:	mov	w1, w23
 95c:	bl	0 <derwin>
 960:	str	x0, [x19, #8]
 964:	cbnz	x0, 910 <_ZN13NCursesWindowC1ERS_iiiic+0x80>
 968:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 96c:	mov	x0, x19
 970:	add	x1, x1, #0x0
 974:	bl	40 <_ZNK13NCursesWindow11err_handlerEPKc>
 978:	mov	w1, #0xffffffff            	// #-1
 97c:	add	w21, w21, #0x1
 980:	sub	w22, w22, w1
 984:	b	94c <_ZN13NCursesWindowC1ERS_iiiic+0xbc>

0000000000000988 <_ZN13NCursesWindowC1ERS_b>:
 988:	sub	sp, sp, #0x40
 98c:	adrp	x3, 0 <_Z5THROWPK16NCursesException.isra.0>
 990:	stp	x29, x30, [sp, #16]
 994:	add	x29, sp, #0x10
 998:	ldr	x3, [x3]
 99c:	stp	x19, x20, [sp, #32]
 9a0:	mov	x20, x1
 9a4:	add	x3, x3, #0x10
 9a8:	str	x21, [sp, #48]
 9ac:	mov	w1, #0x1                   	// #1
 9b0:	stp	x3, xzr, [x0]
 9b4:	mov	x19, x0
 9b8:	strb	w1, [x0, #16]
 9bc:	and	w21, w2, #0xff
 9c0:	stp	xzr, xzr, [x0, #24]
 9c4:	str	xzr, [x0, #40]
 9c8:	bl	6d8 <_ZN13NCursesWindow12constructingEv>
 9cc:	ldr	x0, [x20, #8]
 9d0:	cbz	x0, a9c <_ZN13NCursesWindowC1ERS_b+0x114>
 9d4:	ldrsh	w1, [x0, #4]
 9d8:	ldrsh	w2, [x0, #6]
 9dc:	cmn	w1, #0x2
 9e0:	cset	w4, ne  // ne = any
 9e4:	cmn	w2, #0x2
 9e8:	cset	w3, ne  // ne = any
 9ec:	sub	w1, w1, w4
 9f0:	sub	w2, w2, w3
 9f4:	mov	w4, #0x1                   	// #1
 9f8:	mov	w3, w4
 9fc:	bl	0 <derwin>
 a00:	str	x0, [x19, #8]
 a04:	cbz	x0, a8c <_ZN13NCursesWindowC1ERS_b+0x104>
 a08:	ldr	x0, [x20, #32]
 a0c:	stp	x20, xzr, [x19, #24]
 a10:	str	x19, [x20, #32]
 a14:	str	x0, [x19, #40]
 a18:	cbnz	w21, a30 <_ZN13NCursesWindowC1ERS_b+0xa8>
 a1c:	ldp	x29, x30, [sp, #16]
 a20:	ldp	x19, x20, [sp, #32]
 a24:	ldr	x21, [sp, #48]
 a28:	add	sp, sp, #0x40
 a2c:	ret
 a30:	ldr	x0, [x20, #8]
 a34:	str	wzr, [sp]
 a38:	mov	w7, #0x0                   	// #0
 a3c:	mov	w6, #0x0                   	// #0
 a40:	mov	w5, #0x0                   	// #0
 a44:	mov	w4, #0x0                   	// #0
 a48:	mov	w3, #0x0                   	// #0
 a4c:	mov	w2, #0x0                   	// #0
 a50:	mov	w1, #0x0                   	// #0
 a54:	bl	0 <wborder>
 a58:	ldr	x0, [x20, #8]
 a5c:	cbz	x0, aa8 <_ZN13NCursesWindowC1ERS_b+0x120>
 a60:	ldrsh	w2, [x0, #4]
 a64:	cmn	w2, #0x2
 a68:	b.eq	aa8 <_ZN13NCursesWindowC1ERS_b+0x120>  // b.none
 a6c:	add	w2, w2, #0x1
 a70:	ldp	x29, x30, [sp, #16]
 a74:	mov	w3, #0x1                   	// #1
 a78:	ldp	x19, x20, [sp, #32]
 a7c:	mov	w1, #0x0                   	// #0
 a80:	ldr	x21, [sp, #48]
 a84:	add	sp, sp, #0x40
 a88:	b	0 <wtouchln>
 a8c:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 a90:	mov	x0, x19
 a94:	add	x1, x1, #0x0
 a98:	bl	40 <_ZNK13NCursesWindow11err_handlerEPKc>
 a9c:	mov	w2, #0xfffffffe            	// #-2
 aa0:	mov	w1, w2
 aa4:	b	9f4 <_ZN13NCursesWindowC1ERS_b+0x6c>
 aa8:	mov	w2, #0x0                   	// #0
 aac:	b	a70 <_ZN13NCursesWindowC1ERS_b+0xe8>

0000000000000ab0 <_ZN13NCursesWindowC1EP7_win_sti>:
 ab0:	stp	x29, x30, [sp, #-32]!
 ab4:	adrp	x2, 0 <_Z5THROWPK16NCursesException.isra.0>
 ab8:	mov	x29, sp
 abc:	ldr	x2, [x2]
 ac0:	stp	x19, x20, [sp, #16]
 ac4:	mov	x19, x0
 ac8:	add	x2, x2, #0x10
 acc:	stp	x2, xzr, [x0]
 ad0:	mov	x20, x1
 ad4:	strb	wzr, [x0, #16]
 ad8:	stp	xzr, xzr, [x0, #24]
 adc:	str	xzr, [x0, #40]
 ae0:	bl	670 <_ZN13NCursesWindow10initializeEv>
 ae4:	str	x20, [x19, #8]
 ae8:	ldp	x19, x20, [sp, #16]
 aec:	ldp	x29, x30, [sp], #32
 af0:	ret
 af4:	nop

0000000000000af8 <_nc_xx_ripoff_init>:
 af8:	stp	x29, x30, [sp, #-48]!
 afc:	adrp	x2, 0 <_Z5THROWPK16NCursesException.isra.0>
 b00:	mov	x29, sp
 b04:	stp	x19, x20, [sp, #16]
 b08:	mov	x19, x0
 b0c:	mov	w20, w1
 b10:	ldr	x0, [x2]
 b14:	str	x21, [sp, #32]
 b18:	add	x1, x0, #0x8
 b1c:	str	x1, [x2]
 b20:	ldr	x21, [x0]
 b24:	cbz	x21, b58 <_nc_xx_ripoff_init+0x60>
 b28:	mov	x0, #0x30                  	// #48
 b2c:	bl	0 <_Znwm>
 b30:	mov	x1, x19
 b34:	mov	w2, w20
 b38:	mov	x19, x0
 b3c:	bl	ab0 <_ZN13NCursesWindowC1EP7_win_sti>
 b40:	mov	x0, x19
 b44:	mov	x16, x21
 b48:	ldp	x19, x20, [sp, #16]
 b4c:	ldr	x21, [sp, #32]
 b50:	ldp	x29, x30, [sp], #48
 b54:	br	x16
 b58:	mov	w0, #0xffffffff            	// #-1
 b5c:	ldp	x19, x20, [sp, #16]
 b60:	ldr	x21, [sp, #32]
 b64:	ldp	x29, x30, [sp], #48
 b68:	ret
 b6c:	mov	x1, #0x30                  	// #48
 b70:	mov	x20, x0
 b74:	mov	x0, x19
 b78:	bl	0 <_ZdlPvm>
 b7c:	mov	x0, x20
 b80:	bl	0 <_Unwind_Resume>
 b84:	nop

0000000000000b88 <_ZNK13NCursesWindow7getPairEv>:
 b88:	ldr	x0, [x0, #8]
 b8c:	cbz	x0, b98 <_ZNK13NCursesWindow7getPairEv+0x10>
 b90:	ldrb	w0, [x0, #17]
 b94:	ret
 b98:	mov	w0, #0x0                   	// #0
 b9c:	ret

0000000000000ba0 <_ZNK13NCursesWindow8getcolorEi>:
 ba0:	stp	x29, x30, [sp, #-48]!
 ba4:	adrp	x2, 3c <_Z5THROWPK16NCursesException.isra.0+0x3c>
 ba8:	mov	x29, sp
 bac:	ldr	x2, [x2]
 bb0:	stp	x19, x20, [sp, #16]
 bb4:	mov	w19, w1
 bb8:	ldr	w1, [x2]
 bbc:	cmp	w1, #0x2
 bc0:	b.eq	bf4 <_ZNK13NCursesWindow8getcolorEi+0x54>  // b.none
 bc4:	mov	w0, #0x7                   	// #7
 bc8:	strh	w0, [sp, #44]
 bcc:	strh	wzr, [sp, #46]
 bd0:	cbnz	w19, be4 <_ZNK13NCursesWindow8getcolorEi+0x44>
 bd4:	ldrsh	w0, [sp, #44]
 bd8:	ldp	x19, x20, [sp, #16]
 bdc:	ldp	x29, x30, [sp], #48
 be0:	ret
 be4:	ldrsh	w0, [sp, #46]
 be8:	ldp	x19, x20, [sp, #16]
 bec:	ldp	x29, x30, [sp], #48
 bf0:	ret
 bf4:	mov	x20, x0
 bf8:	bl	b88 <_ZNK13NCursesWindow7getPairEv>
 bfc:	add	x2, sp, #0x2e
 c00:	add	x1, sp, #0x2c
 c04:	bl	0 <pair_content>
 c08:	cmn	w0, #0x1
 c0c:	b.ne	bd0 <_ZNK13NCursesWindow8getcolorEi+0x30>  // b.any
 c10:	ldr	x1, [x20]
 c14:	adrp	x0, 0 <_Z5THROWPK16NCursesException.isra.0>
 c18:	add	x0, x0, #0x0
 c1c:	ldr	x2, [x1]
 c20:	cmp	x2, x0
 c24:	b.ne	c34 <_ZNK13NCursesWindow8getcolorEi+0x94>  // b.any
 c28:	mov	x0, #0x18                  	// #24
 c2c:	bl	0 <_Znwm>
 c30:	bl	0 <_Z5THROWPK16NCursesException.isra.0>
 c34:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 c38:	mov	x0, x20
 c3c:	add	x1, x1, #0x0
 c40:	blr	x2
 c44:	cbz	w19, bd4 <_ZNK13NCursesWindow8getcolorEi+0x34>
 c48:	b	be4 <_ZNK13NCursesWindow8getcolorEi+0x44>
 c4c:	nop

0000000000000c50 <_ZN13NCursesWindow14NumberOfColorsEv>:
 c50:	adrp	x1, 3c <_Z5THROWPK16NCursesException.isra.0+0x3c>
 c54:	mov	w0, #0x1                   	// #1
 c58:	ldr	x1, [x1]
 c5c:	ldr	w1, [x1]
 c60:	cmp	w1, #0x2
 c64:	b.eq	c6c <_ZN13NCursesWindow14NumberOfColorsEv+0x1c>  // b.none
 c68:	ret
 c6c:	adrp	x0, 0 <COLORS>
 c70:	ldr	x0, [x0]
 c74:	ldr	w0, [x0]
 c78:	ret
 c7c:	nop

0000000000000c80 <_ZNK13NCursesWindow8getcolorEv>:
 c80:	adrp	x1, 3c <_Z5THROWPK16NCursesException.isra.0+0x3c>
 c84:	ldr	x1, [x1]
 c88:	ldr	w1, [x1]
 c8c:	cmp	w1, #0x2
 c90:	b.eq	c9c <_ZNK13NCursesWindow8getcolorEv+0x1c>  // b.none
 c94:	mov	w0, #0x0                   	// #0
 c98:	ret
 c9c:	b	b88 <_ZNK13NCursesWindow7getPairEv>

0000000000000ca0 <_ZN13NCursesWindow10setpaletteEsss>:
 ca0:	adrp	x3, 3c <_Z5THROWPK16NCursesException.isra.0+0x3c>
 ca4:	sxth	w4, w0
 ca8:	sxth	w0, w2
 cac:	sxth	w1, w1
 cb0:	ldr	x3, [x3]
 cb4:	ldr	w2, [x3]
 cb8:	cmp	w2, #0x2
 cbc:	b.eq	cc8 <_ZN13NCursesWindow10setpaletteEsss+0x28>  // b.none
 cc0:	mov	w0, #0x0                   	// #0
 cc4:	ret
 cc8:	mov	w2, w1
 ccc:	mov	w1, w4
 cd0:	b	0 <init_pair>
 cd4:	nop

0000000000000cd8 <_ZN13NCursesWindow10setpaletteEss>:
 cd8:	stp	x29, x30, [sp, #-32]!
 cdc:	mov	x29, sp
 ce0:	stp	x19, x20, [sp, #16]
 ce4:	sxth	w19, w1
 ce8:	sxth	w20, w2
 cec:	bl	b88 <_ZNK13NCursesWindow7getPairEv>
 cf0:	mov	w2, w0
 cf4:	mov	w1, w20
 cf8:	mov	w0, w19
 cfc:	ldp	x19, x20, [sp, #16]
 d00:	ldp	x29, x30, [sp], #32
 d04:	b	ca0 <_ZN13NCursesWindow10setpaletteEsss>

0000000000000d08 <_ZN13NCursesWindow8setcolorEs>:
 d08:	stp	x29, x30, [sp, #-32]!
 d0c:	adrp	x2, 3c <_Z5THROWPK16NCursesException.isra.0+0x3c>
 d10:	mov	x29, sp
 d14:	ldr	x2, [x2]
 d18:	stp	x19, x20, [sp, #16]
 d1c:	mov	x19, x0
 d20:	ldr	w0, [x2]
 d24:	cmp	w0, #0x2
 d28:	b.eq	d3c <_ZN13NCursesWindow8setcolorEs+0x34>  // b.none
 d2c:	mov	w0, #0x0                   	// #0
 d30:	ldp	x19, x20, [sp, #16]
 d34:	ldp	x29, x30, [sp], #32
 d38:	ret
 d3c:	sxth	w20, w1
 d40:	cmp	w20, #0x0
 d44:	b.le	d94 <_ZN13NCursesWindow8setcolorEs+0x8c>
 d48:	adrp	x0, 0 <COLOR_PAIRS>
 d4c:	ldr	x0, [x0]
 d50:	ldr	w0, [x0]
 d54:	cmp	w20, w0
 d58:	b.gt	d94 <_ZN13NCursesWindow8setcolorEs+0x8c>
 d5c:	ldr	x0, [x19, #8]
 d60:	mov	x2, #0x0                   	// #0
 d64:	mov	w1, #0xff00                	// #65280
 d68:	ubfiz	w20, w20, #8, #8
 d6c:	bl	0 <wattr_off>
 d70:	ldr	x0, [x19, #8]
 d74:	cbz	x0, d2c <_ZN13NCursesWindow8setcolorEs+0x24>
 d78:	ubfx	x1, x20, #8, #8
 d7c:	str	w20, [x0, #16]
 d80:	str	w1, [x0, #116]
 d84:	mov	w0, #0x0                   	// #0
 d88:	ldp	x19, x20, [sp, #16]
 d8c:	ldp	x29, x30, [sp], #32
 d90:	ret
 d94:	ldr	x1, [x19]
 d98:	adrp	x0, 0 <_Z5THROWPK16NCursesException.isra.0>
 d9c:	add	x0, x0, #0x0
 da0:	ldr	x2, [x1]
 da4:	cmp	x2, x0
 da8:	b.ne	db8 <_ZN13NCursesWindow8setcolorEs+0xb0>  // b.any
 dac:	mov	x0, #0x18                  	// #24
 db0:	bl	0 <_Znwm>
 db4:	bl	0 <_Z5THROWPK16NCursesException.isra.0>
 db8:	mov	x0, x19
 dbc:	adrp	x1, 0 <_Z5THROWPK16NCursesException.isra.0>
 dc0:	add	x1, x1, #0x0
 dc4:	blr	x2
 dc8:	b	d5c <_ZN13NCursesWindow8setcolorEs+0x54>
 dcc:	nop

0000000000000dd0 <_ZNK13NCursesWindow9has_mouseEv>:
 dd0:	stp	x29, x30, [sp, #-16]!
 dd4:	mov	w0, #0x199                 	// #409
 dd8:	mov	x29, sp
 ddc:	bl	0 <has_key>
 de0:	cbz	w0, df0 <_ZNK13NCursesWindow9has_mouseEv+0x20>
 de4:	mov	w0, #0x1                   	// #1
 de8:	ldp	x29, x30, [sp], #16
 dec:	ret
 df0:	ldp	x29, x30, [sp], #16
 df4:	b	0 <has_mouse>

Disassembly of section .text._ZN13NCursesWindow11noutrefreshEv:

0000000000000000 <_ZN13NCursesWindow11noutrefreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wnoutrefresh>

Disassembly of section .text._ZN13NCursesWindow7refreshEv:

0000000000000000 <_ZN13NCursesWindow7refreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wrefresh>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesw.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesw.cc>
  10:	add	x19, x19, #0x0
  14:	add	x19, x19, #0x38
  18:	mov	x0, x19
  1c:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  20:	mov	x1, x19
  24:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  28:	ldr	x19, [sp, #16]
  2c:	adrp	x2, 0 <__dso_handle>
  30:	ldp	x29, x30, [sp], #32
  34:	add	x2, x2, #0x0
  38:	ldr	x0, [x0]
  3c:	b	0 <__cxa_atexit>

cursespad.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN10NCursesPad6driverEi>:
   0:	cmp	w1, #0x104
   4:	b.eq	54 <_ZN10NCursesPad6driverEi+0x54>  // b.none
   8:	b.gt	28 <_ZN10NCursesPad6driverEi+0x28>
   c:	cmp	w1, #0x102
  10:	mov	w0, #0x202                 	// #514
  14:	b.eq	24 <_ZN10NCursesPad6driverEi+0x24>  // b.none
  18:	cmp	w1, #0x103
  1c:	mov	w0, #0x201                 	// #513
  20:	b.ne	44 <_ZN10NCursesPad6driverEi+0x44>  // b.any
  24:	ret
  28:	cmp	w1, #0x105
  2c:	mov	w0, #0x204                 	// #516
  30:	b.eq	24 <_ZN10NCursesPad6driverEi+0x24>  // b.none
  34:	cmp	w1, #0x169
  38:	mov	w0, #0x205                 	// #517
  3c:	csel	w0, w1, w0, ne  // ne = any
  40:	ret
  44:	cmp	w1, #0x18
  48:	mov	w0, #0x205                 	// #517
  4c:	csel	w0, w1, w0, ne  // ne = any
  50:	ret
  54:	mov	w0, #0x203                 	// #515
  58:	ret
  5c:	nop

0000000000000060 <_ZN10NCursesPad11noutrefreshEv>:
  60:	sub	sp, sp, #0x30
  64:	stp	x29, x30, [sp, #16]
  68:	add	x29, sp, #0x10
  6c:	stp	x19, x20, [sp, #32]
  70:	mov	x19, x0
  74:	ldr	x20, [x0, #56]
  78:	cbz	x20, f0 <_ZN10NCursesPad11noutrefreshEv+0x90>
  7c:	ldr	x1, [x20, #8]
  80:	cbz	x1, 11c <_ZN10NCursesPad11noutrefreshEv+0xbc>
  84:	ldrsh	w6, [x1, #4]
  88:	cmn	w6, #0x2
  8c:	b.eq	114 <_ZN10NCursesPad11noutrefreshEv+0xb4>  // b.none
  90:	ldrsh	w7, [x1, #6]
  94:	cmn	w7, #0x2
  98:	b.eq	10c <_ZN10NCursesPad11noutrefreshEv+0xac>  // b.none
  9c:	ldr	x0, [x19, #8]
  a0:	str	wzr, [sp]
  a4:	mov	w5, #0x0                   	// #0
  a8:	mov	w4, #0x0                   	// #0
  ac:	ldp	w2, w3, [x19, #72]
  b0:	bl	0 <copywin>
  b4:	cbz	w0, c8 <_ZN10NCursesPad11noutrefreshEv+0x68>
  b8:	ldp	x29, x30, [sp, #16]
  bc:	ldp	x19, x20, [sp, #32]
  c0:	add	sp, sp, #0x30
  c4:	ret
  c8:	ldr	x0, [x20, #8]
  cc:	bl	0 <wsyncup>
  d0:	ldr	x0, [x19, #48]
  d4:	ldp	x29, x30, [sp, #16]
  d8:	ldr	x1, [x0]
  dc:	ldp	x19, x20, [sp, #32]
  e0:	add	sp, sp, #0x30
  e4:	ldr	x1, [x1, #40]
  e8:	mov	x16, x1
  ec:	br	x16
  f0:	ldr	x20, [x19, #48]
  f4:	mov	w0, #0x0                   	// #0
  f8:	cbnz	x20, 7c <_ZN10NCursesPad11noutrefreshEv+0x1c>
  fc:	ldp	x29, x30, [sp, #16]
 100:	ldp	x19, x20, [sp, #32]
 104:	add	sp, sp, #0x30
 108:	ret
 10c:	mov	w7, #0xffffffff            	// #-1
 110:	b	9c <_ZN10NCursesPad11noutrefreshEv+0x3c>
 114:	mov	w6, #0xffffffff            	// #-1
 118:	b	90 <_ZN10NCursesPad11noutrefreshEv+0x30>
 11c:	mov	w6, #0xffffffff            	// #-1
 120:	mov	w7, w6
 124:	b	9c <_ZN10NCursesPad11noutrefreshEv+0x3c>

0000000000000128 <_ZN10NCursesPad9setWindowER13NCursesWindowii>:
 128:	str	x1, [x0, #48]
 12c:	cmp	w3, #0x0
 130:	str	xzr, [x0, #72]
 134:	ccmp	w2, #0x0, #0x4, gt
 138:	b.gt	154 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x2c>
 13c:	ldr	x2, [x0]
 140:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 144:	add	x1, x1, #0x0
 148:	ldr	x2, [x2]
 14c:	mov	x16, x2
 150:	br	x16
 154:	stp	w3, w2, [x0, #64]
 158:	ret
 15c:	nop

0000000000000160 <_ZN10NCursesPad12setSubWindowER13NCursesWindow>:
 160:	stp	x29, x30, [sp, #-32]!
 164:	mov	x29, sp
 168:	stp	x19, x20, [sp, #16]
 16c:	mov	x20, x1
 170:	mov	x19, x0
 174:	ldr	x1, [x0, #48]
 178:	cbz	x1, 1a0 <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x40>
 17c:	mov	x0, x1
 180:	mov	x1, x20
 184:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 188:	tst	w0, #0xff
 18c:	b.eq	1bc <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x5c>  // b.none
 190:	str	x20, [x19, #56]
 194:	ldp	x19, x20, [sp, #16]
 198:	ldp	x29, x30, [sp], #32
 19c:	ret
 1a0:	ldr	x2, [x0]
 1a4:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 1a8:	add	x1, x1, #0x0
 1ac:	ldr	x2, [x2]
 1b0:	blr	x2
 1b4:	ldr	x1, [x19, #48]
 1b8:	b	17c <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x1c>
 1bc:	adrp	x19, 0 <_ZSt4cerr>
 1c0:	mov	x0, #0x18                  	// #24
 1c4:	bl	0 <_Znwm>
 1c8:	bl	0 <endwin>
 1cc:	ldr	x19, [x19]
 1d0:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 1d4:	add	x1, x1, #0x0
 1d8:	mov	x2, #0x19                  	// #25
 1dc:	mov	x0, x19
 1e0:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
 1e4:	mov	x0, x19
 1e8:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
 1ec:	mov	w0, #0x1                   	// #1
 1f0:	bl	0 <exit>
 1f4:	nop

00000000000001f8 <_ZN16NCursesFramedPad11OnOperationEi>:
 1f8:	stp	x29, x30, [sp, #-112]!
 1fc:	mov	x29, sp
 200:	stp	x21, x22, [sp, #32]
 204:	ldp	x21, x1, [x0, #48]
 208:	cmp	x1, #0x0
 20c:	csel	x1, x1, x21, ne  // ne = any
 210:	cmp	x1, #0x0
 214:	ccmp	x21, #0x0, #0x4, ne  // ne = any
 218:	b.eq	458 <_ZN16NCursesFramedPad11OnOperationEi+0x260>  // b.none
 21c:	ldr	x1, [x1, #8]
 220:	stp	x19, x20, [sp, #16]
 224:	stp	x23, x24, [sp, #48]
 228:	stp	x25, x26, [sp, #64]
 22c:	stp	x27, x28, [sp, #80]
 230:	cbz	x1, 6b0 <_ZN16NCursesFramedPad11OnOperationEi+0x4b8>
 234:	ldrsh	w22, [x1, #6]
 238:	cmn	w22, #0x2
 23c:	b.eq	6f0 <_ZN16NCursesFramedPad11OnOperationEi+0x4f8>  // b.none
 240:	add	w28, w22, #0x1
 244:	add	w22, w22, #0x2
 248:	ldrsh	w27, [x1, #4]
 24c:	cmn	w27, #0x2
 250:	b.eq	6c4 <_ZN16NCursesFramedPad11OnOperationEi+0x4cc>  // b.none
 254:	add	w25, w27, #0x2
 258:	add	w27, w27, #0x1
 25c:	ldr	x1, [x0, #8]
 260:	cbz	x1, 47c <_ZN16NCursesFramedPad11OnOperationEi+0x284>
 264:	ldrsh	w19, [x1, #6]
 268:	cmn	w19, #0x2
 26c:	b.eq	6d0 <_ZN16NCursesFramedPad11OnOperationEi+0x4d8>  // b.none
 270:	adds	w20, w19, #0x1
 274:	b.eq	464 <_ZN16NCursesFramedPad11OnOperationEi+0x26c>  // b.none
 278:	madd	w24, w28, w28, w20
 27c:	ldrsh	w19, [x1, #4]
 280:	sub	w24, w24, #0x1
 284:	sdiv	w24, w24, w20
 288:	cmp	w24, #0x0
 28c:	csinc	w24, w24, wzr, ne  // ne = any
 290:	cmp	w24, w28
 294:	csel	w24, w24, w28, le
 298:	cmn	w19, #0x2
 29c:	b.eq	640 <_ZN16NCursesFramedPad11OnOperationEi+0x448>  // b.none
 2a0:	adds	w19, w19, #0x1
 2a4:	b.eq	640 <_ZN16NCursesFramedPad11OnOperationEi+0x448>  // b.none
 2a8:	madd	w23, w27, w27, w19
 2ac:	ldr	x4, [x21, #8]
 2b0:	sub	w23, w23, #0x1
 2b4:	sdiv	w23, w23, w19
 2b8:	cmp	w23, #0x0
 2bc:	csinc	w23, w23, wzr, ne  // ne = any
 2c0:	cmp	w23, w27
 2c4:	csel	w23, w23, w27, le
 2c8:	cbnz	w20, 61c <_ZN16NCursesFramedPad11OnOperationEi+0x424>
 2cc:	ldr	w3, [x0, #72]
 2d0:	sub	w5, w27, w23
 2d4:	mov	x0, x4
 2d8:	mov	w2, w22
 2dc:	mov	w1, #0x1                   	// #1
 2e0:	str	x4, [sp, #104]
 2e4:	madd	w3, w27, w3, w19
 2e8:	sub	w3, w3, #0x1
 2ec:	sdiv	w19, w3, w19
 2f0:	add	w26, w19, w23
 2f4:	cmp	w26, w27
 2f8:	csel	w19, w5, w19, gt
 2fc:	bl	0 <wmove>
 300:	cmn	w0, #0x1
 304:	ldr	x4, [sp, #104]
 308:	b.eq	31c <_ZN16NCursesFramedPad11OnOperationEi+0x124>  // b.none
 30c:	mov	w2, w27
 310:	mov	x0, x4
 314:	mov	w1, #0x0                   	// #0
 318:	bl	0 <wvline>
 31c:	ldr	x0, [x21, #8]
 320:	mov	x2, #0x0                   	// #0
 324:	mov	w1, #0x40000               	// #262144
 328:	bl	0 <wattr_on>
 32c:	cmp	w23, #0x1
 330:	b.gt	564 <_ZN16NCursesFramedPad11OnOperationEi+0x36c>
 334:	add	w19, w19, #0x1
 338:	mov	w27, #0x1                   	// #1
 33c:	cmp	w27, w23
 340:	mov	w2, w22
 344:	mov	w1, w19
 348:	mov	w27, #0x2                   	// #2
 34c:	ldr	x26, [x21, #8]
 350:	b.gt	388 <_ZN16NCursesFramedPad11OnOperationEi+0x190>
 354:	mov	x0, x26
 358:	bl	0 <wmove>
 35c:	mov	w1, #0x20                  	// #32
 360:	cmn	w0, #0x1
 364:	b.eq	33c <_ZN16NCursesFramedPad11OnOperationEi+0x144>  // b.none
 368:	mov	x0, x26
 36c:	bl	0 <waddch>
 370:	cmp	w27, w23
 374:	mov	w2, w22
 378:	mov	w1, w19
 37c:	mov	w27, #0x2                   	// #2
 380:	ldr	x26, [x21, #8]
 384:	b.le	354 <_ZN16NCursesFramedPad11OnOperationEi+0x15c>
 388:	mov	x2, #0x0                   	// #0
 38c:	mov	w1, #0x40000               	// #262144
 390:	mov	x0, x26
 394:	bl	0 <wattr_off>
 398:	ldr	x19, [x21, #8]
 39c:	mov	w1, w25
 3a0:	mov	w2, #0x1                   	// #1
 3a4:	mov	x0, x19
 3a8:	bl	0 <wmove>
 3ac:	cmn	w0, #0x1
 3b0:	b.eq	3c4 <_ZN16NCursesFramedPad11OnOperationEi+0x1cc>  // b.none
 3b4:	mov	w2, w28
 3b8:	mov	x0, x19
 3bc:	mov	w1, #0x0                   	// #0
 3c0:	bl	0 <whline>
 3c4:	ldr	x0, [x21, #8]
 3c8:	mov	x2, #0x0                   	// #0
 3cc:	mov	w1, #0x40000               	// #262144
 3d0:	mov	w22, #0x1                   	// #1
 3d4:	add	w23, w20, w22
 3d8:	bl	0 <wattr_on>
 3dc:	cmp	w24, w22
 3e0:	b.gt	4b4 <_ZN16NCursesFramedPad11OnOperationEi+0x2bc>
 3e4:	cmp	w22, w24
 3e8:	mov	w2, w23
 3ec:	mov	w1, w25
 3f0:	mov	w22, #0x2                   	// #2
 3f4:	ldr	x19, [x21, #8]
 3f8:	b.gt	430 <_ZN16NCursesFramedPad11OnOperationEi+0x238>
 3fc:	mov	x0, x19
 400:	bl	0 <wmove>
 404:	mov	w1, #0x20                  	// #32
 408:	cmn	w0, #0x1
 40c:	b.eq	3e4 <_ZN16NCursesFramedPad11OnOperationEi+0x1ec>  // b.none
 410:	mov	x0, x19
 414:	bl	0 <waddch>
 418:	cmp	w22, w24
 41c:	mov	w2, w23
 420:	mov	w1, w25
 424:	mov	w22, #0x2                   	// #2
 428:	ldr	x19, [x21, #8]
 42c:	b.le	3fc <_ZN16NCursesFramedPad11OnOperationEi+0x204>
 430:	mov	x0, x19
 434:	mov	x2, #0x0                   	// #0
 438:	ldp	x19, x20, [sp, #16]
 43c:	mov	w1, #0x40000               	// #262144
 440:	ldp	x21, x22, [sp, #32]
 444:	ldp	x23, x24, [sp, #48]
 448:	ldp	x25, x26, [sp, #64]
 44c:	ldp	x27, x28, [sp, #80]
 450:	ldp	x29, x30, [sp], #112
 454:	b	0 <wattr_off>
 458:	ldp	x21, x22, [sp, #32]
 45c:	ldp	x29, x30, [sp], #112
 460:	ret
 464:	ldrsh	w19, [x1, #4]
 468:	cmn	w19, #0x2
 46c:	b.eq	47c <_ZN16NCursesFramedPad11OnOperationEi+0x284>  // b.none
 470:	adds	w19, w19, #0x1
 474:	mov	w24, #0x1                   	// #1
 478:	b.ne	2a8 <_ZN16NCursesFramedPad11OnOperationEi+0xb0>  // b.any
 47c:	ldr	x4, [x21, #8]
 480:	mov	w2, w22
 484:	mov	w1, #0x1                   	// #1
 488:	str	x4, [sp, #104]
 48c:	mov	x0, x4
 490:	bl	0 <wmove>
 494:	cmn	w0, #0x1
 498:	ldr	x4, [sp, #104]
 49c:	b.eq	70c <_ZN16NCursesFramedPad11OnOperationEi+0x514>  // b.none
 4a0:	mov	w23, #0x1                   	// #1
 4a4:	mov	w20, #0x0                   	// #0
 4a8:	mov	w24, w23
 4ac:	mov	w19, #0x0                   	// #0
 4b0:	b	30c <_ZN16NCursesFramedPad11OnOperationEi+0x114>
 4b4:	adrp	x27, 0 <acs_map>
 4b8:	mov	w2, w23
 4bc:	ldr	x19, [x21, #8]
 4c0:	mov	w1, w25
 4c4:	ldr	x3, [x27]
 4c8:	mov	x0, x19
 4cc:	ldr	w22, [x3, #176]
 4d0:	bl	0 <wmove>
 4d4:	cmn	w0, #0x1
 4d8:	b.eq	4e8 <_ZN16NCursesFramedPad11OnOperationEi+0x2f0>  // b.none
 4dc:	mov	w1, w22
 4e0:	mov	x0, x19
 4e4:	bl	0 <waddch>
 4e8:	cmp	w24, #0x2
 4ec:	add	w26, w24, w20
 4f0:	add	w19, w20, #0x2
 4f4:	b.eq	6a8 <_ZN16NCursesFramedPad11OnOperationEi+0x4b0>  // b.none
 4f8:	ldr	x20, [x21, #8]
 4fc:	mov	w2, w19
 500:	mov	w1, w25
 504:	add	w19, w19, #0x1
 508:	mov	x0, x20
 50c:	bl	0 <wmove>
 510:	mov	w1, #0x20                  	// #32
 514:	cmn	w0, #0x1
 518:	b.eq	524 <_ZN16NCursesFramedPad11OnOperationEi+0x32c>  // b.none
 51c:	mov	x0, x20
 520:	bl	0 <waddch>
 524:	cmp	w19, w26
 528:	b.ne	4f8 <_ZN16NCursesFramedPad11OnOperationEi+0x300>  // b.any
 52c:	ldr	x27, [x27]
 530:	mov	w2, w26
 534:	ldr	x19, [x21, #8]
 538:	mov	w1, w25
 53c:	ldr	w20, [x27, #172]
 540:	mov	x0, x19
 544:	bl	0 <wmove>
 548:	cmn	w0, #0x1
 54c:	b.eq	6fc <_ZN16NCursesFramedPad11OnOperationEi+0x504>  // b.none
 550:	mov	x0, x19
 554:	mov	w1, w20
 558:	bl	0 <waddch>
 55c:	ldr	x19, [x21, #8]
 560:	b	430 <_ZN16NCursesFramedPad11OnOperationEi+0x238>
 564:	adrp	x27, 0 <acs_map>
 568:	mov	w2, w22
 56c:	ldr	x26, [x21, #8]
 570:	add	w1, w19, #0x1
 574:	ldr	x3, [x27]
 578:	mov	x0, x26
 57c:	ldr	w3, [x3, #180]
 580:	str	w3, [sp, #104]
 584:	bl	0 <wmove>
 588:	cmn	w0, #0x1
 58c:	b.eq	5a0 <_ZN16NCursesFramedPad11OnOperationEi+0x3a8>  // b.none
 590:	ldr	w3, [sp, #104]
 594:	mov	x0, x26
 598:	mov	w1, w3
 59c:	bl	0 <waddch>
 5a0:	add	w26, w19, w23
 5a4:	cmp	w23, #0x2
 5a8:	add	w19, w19, #0x2
 5ac:	b.eq	6a0 <_ZN16NCursesFramedPad11OnOperationEi+0x4a8>  // b.none
 5b0:	ldr	x23, [x21, #8]
 5b4:	mov	w1, w19
 5b8:	mov	w2, w22
 5bc:	add	w19, w19, #0x1
 5c0:	mov	x0, x23
 5c4:	bl	0 <wmove>
 5c8:	mov	w1, #0x20                  	// #32
 5cc:	cmn	w0, #0x1
 5d0:	b.eq	5dc <_ZN16NCursesFramedPad11OnOperationEi+0x3e4>  // b.none
 5d4:	mov	x0, x23
 5d8:	bl	0 <waddch>
 5dc:	cmp	w26, w19
 5e0:	b.ne	5b0 <_ZN16NCursesFramedPad11OnOperationEi+0x3b8>  // b.any
 5e4:	ldr	x27, [x27]
 5e8:	mov	w2, w22
 5ec:	ldr	x19, [x21, #8]
 5f0:	mov	w1, w26
 5f4:	ldr	w22, [x27, #184]
 5f8:	mov	x0, x19
 5fc:	bl	0 <wmove>
 600:	cmn	w0, #0x1
 604:	b.eq	704 <_ZN16NCursesFramedPad11OnOperationEi+0x50c>  // b.none
 608:	mov	w1, w22
 60c:	mov	x0, x19
 610:	bl	0 <waddch>
 614:	ldr	x26, [x21, #8]
 618:	b	388 <_ZN16NCursesFramedPad11OnOperationEi+0x190>
 61c:	ldr	w1, [x0, #76]
 620:	sub	w2, w28, w24
 624:	madd	w1, w28, w1, w20
 628:	sub	w1, w1, #0x1
 62c:	sdiv	w20, w1, w20
 630:	add	w26, w20, w24
 634:	cmp	w26, w28
 638:	csel	w20, w2, w20, gt
 63c:	b	2cc <_ZN16NCursesFramedPad11OnOperationEi+0xd4>
 640:	ldr	w3, [x0, #76]
 644:	sub	w5, w28, w24
 648:	ldr	x4, [x21, #8]
 64c:	mov	w1, #0x1                   	// #1
 650:	mov	w2, w22
 654:	mov	w23, w1
 658:	madd	w3, w28, w3, w20
 65c:	mov	x0, x4
 660:	str	x4, [sp, #104]
 664:	mov	w19, #0x0                   	// #0
 668:	sub	w3, w3, #0x1
 66c:	sdiv	w20, w3, w20
 670:	add	w26, w24, w20
 674:	cmp	w26, w28
 678:	csel	w20, w5, w20, gt
 67c:	bl	0 <wmove>
 680:	cmn	w0, #0x1
 684:	ldr	x4, [sp, #104]
 688:	b.ne	30c <_ZN16NCursesFramedPad11OnOperationEi+0x114>  // b.any
 68c:	ldr	x0, [x21, #8]
 690:	mov	x2, #0x0                   	// #0
 694:	mov	w1, #0x40000               	// #262144
 698:	bl	0 <wattr_on>
 69c:	b	334 <_ZN16NCursesFramedPad11OnOperationEi+0x13c>
 6a0:	mov	w26, w19
 6a4:	b	5e4 <_ZN16NCursesFramedPad11OnOperationEi+0x3ec>
 6a8:	mov	w26, w19
 6ac:	b	52c <_ZN16NCursesFramedPad11OnOperationEi+0x334>
 6b0:	mov	w22, #0x1                   	// #1
 6b4:	mov	w27, #0x0                   	// #0
 6b8:	mov	w25, w22
 6bc:	mov	w28, #0x0                   	// #0
 6c0:	b	25c <_ZN16NCursesFramedPad11OnOperationEi+0x64>
 6c4:	mov	w27, #0x0                   	// #0
 6c8:	mov	w25, #0x1                   	// #1
 6cc:	b	25c <_ZN16NCursesFramedPad11OnOperationEi+0x64>
 6d0:	ldrsh	w19, [x1, #4]
 6d4:	cmn	w19, #0x2
 6d8:	b.eq	47c <_ZN16NCursesFramedPad11OnOperationEi+0x284>  // b.none
 6dc:	adds	w19, w19, #0x1
 6e0:	b.eq	47c <_ZN16NCursesFramedPad11OnOperationEi+0x284>  // b.none
 6e4:	mov	w20, #0x0                   	// #0
 6e8:	mov	w24, #0x1                   	// #1
 6ec:	b	2a8 <_ZN16NCursesFramedPad11OnOperationEi+0xb0>
 6f0:	mov	w22, #0x1                   	// #1
 6f4:	mov	w28, #0x0                   	// #0
 6f8:	b	248 <_ZN16NCursesFramedPad11OnOperationEi+0x50>
 6fc:	ldr	x19, [x21, #8]
 700:	b	430 <_ZN16NCursesFramedPad11OnOperationEi+0x238>
 704:	ldr	x26, [x21, #8]
 708:	b	388 <_ZN16NCursesFramedPad11OnOperationEi+0x190>
 70c:	ldr	x0, [x21, #8]
 710:	mov	w23, #0x1                   	// #1
 714:	mov	x2, #0x0                   	// #0
 718:	mov	w24, w23
 71c:	mov	w1, #0x40000               	// #262144
 720:	mov	w20, #0x0                   	// #0
 724:	mov	w19, #0x0                   	// #0
 728:	bl	0 <wattr_on>
 72c:	b	334 <_ZN16NCursesFramedPad11OnOperationEi+0x13c>

0000000000000730 <_ZN10NCursesPadclEv>:
 730:	stp	x29, x30, [sp, #-112]!
 734:	mov	x29, sp
 738:	stp	x19, x20, [sp, #16]
 73c:	ldr	x20, [x0, #56]
 740:	stp	x27, x28, [sp, #80]
 744:	mov	x28, x0
 748:	cbz	x20, b24 <_ZN10NCursesPadclEv+0x3f4>
 74c:	ldr	x0, [x20, #8]
 750:	stp	x21, x22, [sp, #32]
 754:	stp	x23, x24, [sp, #48]
 758:	stp	x25, x26, [sp, #64]
 75c:	cbz	x0, b9c <_ZN10NCursesPadclEv+0x46c>
 760:	ldrsh	w22, [x0, #6]
 764:	cmn	w22, #0x2
 768:	b.eq	b94 <_ZN10NCursesPadclEv+0x464>  // b.none
 76c:	ldrsh	w23, [x0, #4]
 770:	cmn	w23, #0x2
 774:	b.eq	b8c <_ZN10NCursesPadclEv+0x45c>  // b.none
 778:	mov	w1, #0x1                   	// #1
 77c:	bl	0 <keypad>
 780:	ldr	x0, [x20, #8]
 784:	mov	w1, #0x1                   	// #1
 788:	bl	0 <meta>
 78c:	ldr	x1, [x28]
 790:	adrp	x0, 0 <_ZN10NCursesPad6driverEi>
 794:	add	x0, x0, #0x0
 798:	ldr	x2, [x1, #32]
 79c:	cmp	x2, x0
 7a0:	b.ne	b3c <_ZN10NCursesPadclEv+0x40c>  // b.any
 7a4:	ldr	x1, [x1, #40]
 7a8:	mov	x0, x28
 7ac:	blr	x1
 7b0:	cbz	w0, a5c <_ZN10NCursesPadclEv+0x32c>
 7b4:	mvn	w25, w23
 7b8:	mvn	w24, w22
 7bc:	sub	w27, w25, #0x1
 7c0:	sub	w0, w24, #0x1
 7c4:	mov	w19, #0x200                 	// #512
 7c8:	adrp	x21, 0 <_ZN10NCursesPad6driverEi>
 7cc:	str	w0, [sp, #108]
 7d0:	cmp	w19, #0x200
 7d4:	ldr	x0, [x28]
 7d8:	b.ne	8fc <_ZN10NCursesPadclEv+0x1cc>  // b.any
 7dc:	ldr	x1, [x0, #40]
 7e0:	mov	x0, x28
 7e4:	blr	x1
 7e8:	ldr	x0, [x20, #8]
 7ec:	bl	0 <wsyncup>
 7f0:	ldr	x2, [x28]
 7f4:	mov	w1, w19
 7f8:	mov	x0, x28
 7fc:	ldr	x2, [x2, #72]
 800:	blr	x2
 804:	ldr	x0, [x28, #48]
 808:	ldr	x1, [x0]
 80c:	ldr	x1, [x1, #32]
 810:	blr	x1
 814:	ldr	x1, [x28]
 818:	ldr	x0, [x20, #8]
 81c:	ldr	x26, [x1, #48]
 820:	bl	0 <wgetch>
 824:	mov	w19, w0
 828:	add	x1, x21, #0x0
 82c:	cmp	x26, x1
 830:	b.ne	950 <_ZN10NCursesPadclEv+0x220>  // b.any
 834:	cmp	w0, #0x104
 838:	b.eq	9c4 <_ZN10NCursesPadclEv+0x294>  // b.none
 83c:	b.gt	878 <_ZN10NCursesPadclEv+0x148>
 840:	cmp	w0, #0x102
 844:	b.eq	9ec <_ZN10NCursesPadclEv+0x2bc>  // b.none
 848:	cmp	w0, #0x103
 84c:	b.ne	8cc <_ZN10NCursesPadclEv+0x19c>  // b.any
 850:	ldr	x0, [x28]
 854:	ldr	w1, [x28, #72]
 858:	cmp	w1, #0x0
 85c:	b.le	b00 <_ZN10NCursesPadclEv+0x3d0>
 860:	ldr	w2, [x28, #68]
 864:	cmp	w1, w2
 868:	b.ge	a4c <_ZN10NCursesPadclEv+0x31c>  // b.tcont
 86c:	mov	w19, #0x201                 	// #513
 870:	str	wzr, [x28, #72]
 874:	b	7dc <_ZN10NCursesPadclEv+0xac>
 878:	cmp	w0, #0x105
 87c:	b.ne	8f0 <_ZN10NCursesPadclEv+0x1c0>  // b.any
 880:	ldr	x0, [x28]
 884:	ldr	x1, [x28, #8]
 888:	ldr	w2, [x28, #76]
 88c:	cbz	x1, b68 <_ZN10NCursesPadclEv+0x438>
 890:	ldrsh	w1, [x1, #6]
 894:	cmn	w1, #0x2
 898:	b.eq	a74 <_ZN10NCursesPadclEv+0x344>  // b.none
 89c:	sub	w1, w1, w22
 8a0:	sub	w3, w1, #0x1
 8a4:	cmp	w2, w3
 8a8:	b.ge	9f4 <_ZN10NCursesPadclEv+0x2c4>  // b.tcont
 8ac:	ldr	w4, [x28, #64]
 8b0:	sub	w1, w1, w4
 8b4:	cmp	w2, w1
 8b8:	b.ge	a98 <_ZN10NCursesPadclEv+0x368>  // b.tcont
 8bc:	add	w2, w2, w4
 8c0:	mov	w19, #0x204                 	// #516
 8c4:	str	w2, [x28, #76]
 8c8:	b	7dc <_ZN10NCursesPadclEv+0xac>
 8cc:	cmp	w0, #0x18
 8d0:	b.ne	7d0 <_ZN10NCursesPadclEv+0xa0>  // b.any
 8d4:	ldp	x19, x20, [sp, #16]
 8d8:	ldp	x21, x22, [sp, #32]
 8dc:	ldp	x23, x24, [sp, #48]
 8e0:	ldp	x25, x26, [sp, #64]
 8e4:	ldp	x27, x28, [sp, #80]
 8e8:	ldp	x29, x30, [sp], #112
 8ec:	ret
 8f0:	cmp	w0, #0x169
 8f4:	b.eq	8d4 <_ZN10NCursesPadclEv+0x1a4>  // b.none
 8f8:	b	960 <_ZN10NCursesPadclEv+0x230>
 8fc:	cmp	w19, #0x1ff
 900:	b.le	918 <_ZN10NCursesPadclEv+0x1e8>
 904:	cmp	w19, #0x203
 908:	b.eq	9c8 <_ZN10NCursesPadclEv+0x298>  // b.none
 90c:	b.le	96c <_ZN10NCursesPadclEv+0x23c>
 910:	cmp	w19, #0x204
 914:	b.eq	884 <_ZN10NCursesPadclEv+0x154>  // b.none
 918:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 91c:	ldr	x2, [x0, #56]
 920:	ldr	x0, [x1]
 924:	cmp	x2, x0
 928:	b.ne	acc <_ZN10NCursesPadclEv+0x39c>  // b.any
 92c:	bl	0 <beep>
 930:	ldr	x1, [x28]
 934:	ldr	x0, [x20, #8]
 938:	ldr	x26, [x1, #48]
 93c:	bl	0 <wgetch>
 940:	mov	w19, w0
 944:	add	x1, x21, #0x0
 948:	cmp	x26, x1
 94c:	b.eq	834 <_ZN10NCursesPadclEv+0x104>  // b.none
 950:	mov	w1, w0
 954:	mov	x0, x28
 958:	blr	x26
 95c:	mov	w19, w0
 960:	cmp	w19, #0x205
 964:	b.eq	8d4 <_ZN10NCursesPadclEv+0x1a4>  // b.none
 968:	b	7d0 <_ZN10NCursesPadclEv+0xa0>
 96c:	cmp	w19, #0x201
 970:	b.eq	854 <_ZN10NCursesPadclEv+0x124>  // b.none
 974:	cmp	w19, #0x202
 978:	b.ne	918 <_ZN10NCursesPadclEv+0x1e8>  // b.any
 97c:	ldr	x1, [x28, #8]
 980:	ldr	w2, [x28, #72]
 984:	cbz	x1, b48 <_ZN10NCursesPadclEv+0x418>
 988:	ldrsh	w1, [x1, #4]
 98c:	cmn	w1, #0x2
 990:	b.eq	aa4 <_ZN10NCursesPadclEv+0x374>  // b.none
 994:	sub	w1, w1, w23
 998:	sub	w3, w1, #0x1
 99c:	cmp	w2, w3
 9a0:	b.ge	a18 <_ZN10NCursesPadclEv+0x2e8>  // b.tcont
 9a4:	ldr	w4, [x28, #68]
 9a8:	sub	w1, w1, w4
 9ac:	cmp	w2, w1
 9b0:	b.ge	ac0 <_ZN10NCursesPadclEv+0x390>  // b.tcont
 9b4:	add	w2, w2, w4
 9b8:	mov	w19, #0x202                 	// #514
 9bc:	str	w2, [x28, #72]
 9c0:	b	7dc <_ZN10NCursesPadclEv+0xac>
 9c4:	ldr	x0, [x28]
 9c8:	ldr	w1, [x28, #76]
 9cc:	cmp	w1, #0x0
 9d0:	b.le	adc <_ZN10NCursesPadclEv+0x3ac>
 9d4:	ldr	w2, [x28, #64]
 9d8:	cmp	w1, w2
 9dc:	b.ge	a3c <_ZN10NCursesPadclEv+0x30c>  // b.tcont
 9e0:	mov	w19, #0x203                 	// #515
 9e4:	str	wzr, [x28, #76]
 9e8:	b	7dc <_ZN10NCursesPadclEv+0xac>
 9ec:	ldr	x0, [x28]
 9f0:	b	97c <_ZN10NCursesPadclEv+0x24c>
 9f4:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 9f8:	ldr	x2, [x0, #64]
 9fc:	ldr	x0, [x1]
 a00:	cmp	x2, x0
 a04:	b.eq	92c <_ZN10NCursesPadclEv+0x1fc>  // b.none
 a08:	mov	x0, x28
 a0c:	mov	w1, #0x204                 	// #516
 a10:	blr	x2
 a14:	b	814 <_ZN10NCursesPadclEv+0xe4>
 a18:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 a1c:	ldr	x2, [x0, #64]
 a20:	ldr	x0, [x1]
 a24:	cmp	x2, x0
 a28:	b.eq	92c <_ZN10NCursesPadclEv+0x1fc>  // b.none
 a2c:	mov	x0, x28
 a30:	mov	w1, #0x202                 	// #514
 a34:	blr	x2
 a38:	b	814 <_ZN10NCursesPadclEv+0xe4>
 a3c:	sub	w1, w1, w2
 a40:	mov	w19, #0x203                 	// #515
 a44:	str	w1, [x28, #76]
 a48:	b	7dc <_ZN10NCursesPadclEv+0xac>
 a4c:	sub	w1, w1, w2
 a50:	mov	w19, #0x201                 	// #513
 a54:	str	w1, [x28, #72]
 a58:	b	7dc <_ZN10NCursesPadclEv+0xac>
 a5c:	ldr	x0, [x28, #48]
 a60:	cbz	x0, 7b4 <_ZN10NCursesPadclEv+0x84>
 a64:	ldr	x1, [x0]
 a68:	ldr	x1, [x1, #32]
 a6c:	blr	x1
 a70:	b	7b4 <_ZN10NCursesPadclEv+0x84>
 a74:	ldr	w1, [sp, #108]
 a78:	cmp	w2, w1
 a7c:	b.ge	9f4 <_ZN10NCursesPadclEv+0x2c4>  // b.tcont
 a80:	ldr	w4, [x28, #64]
 a84:	sub	w1, w24, w4
 a88:	cmp	w2, w1
 a8c:	b.lt	8bc <_ZN10NCursesPadclEv+0x18c>  // b.tstop
 a90:	ldr	w3, [sp, #108]
 a94:	nop
 a98:	mov	w19, #0x204                 	// #516
 a9c:	str	w3, [x28, #76]
 aa0:	b	7dc <_ZN10NCursesPadclEv+0xac>
 aa4:	cmp	w2, w27
 aa8:	b.ge	a18 <_ZN10NCursesPadclEv+0x2e8>  // b.tcont
 aac:	ldr	w4, [x28, #68]
 ab0:	mov	w3, w27
 ab4:	sub	w1, w25, w4
 ab8:	cmp	w2, w1
 abc:	b.lt	9b4 <_ZN10NCursesPadclEv+0x284>  // b.tstop
 ac0:	mov	w19, #0x202                 	// #514
 ac4:	str	w3, [x28, #72]
 ac8:	b	7dc <_ZN10NCursesPadclEv+0xac>
 acc:	mov	w1, w19
 ad0:	mov	x0, x28
 ad4:	blr	x2
 ad8:	b	814 <_ZN10NCursesPadclEv+0xe4>
 adc:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 ae0:	ldr	x2, [x0, #64]
 ae4:	ldr	x0, [x1]
 ae8:	cmp	x2, x0
 aec:	b.eq	92c <_ZN10NCursesPadclEv+0x1fc>  // b.none
 af0:	mov	x0, x28
 af4:	mov	w1, #0x203                 	// #515
 af8:	blr	x2
 afc:	b	814 <_ZN10NCursesPadclEv+0xe4>
 b00:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 b04:	ldr	x2, [x0, #64]
 b08:	ldr	x0, [x1]
 b0c:	cmp	x2, x0
 b10:	b.eq	92c <_ZN10NCursesPadclEv+0x1fc>  // b.none
 b14:	mov	x0, x28
 b18:	mov	w1, #0x201                 	// #513
 b1c:	blr	x2
 b20:	b	814 <_ZN10NCursesPadclEv+0xe4>
 b24:	ldr	x20, [x0, #48]
 b28:	cbnz	x20, 74c <_ZN10NCursesPadclEv+0x1c>
 b2c:	ldp	x19, x20, [sp, #16]
 b30:	ldp	x27, x28, [sp, #80]
 b34:	ldp	x29, x30, [sp], #112
 b38:	ret
 b3c:	mov	x0, x28
 b40:	blr	x2
 b44:	b	7b4 <_ZN10NCursesPadclEv+0x84>
 b48:	cmp	w2, w27
 b4c:	mov	w3, w27
 b50:	b.ge	a18 <_ZN10NCursesPadclEv+0x2e8>  // b.tcont
 b54:	ldr	w4, [x28, #68]
 b58:	sub	w1, w25, w4
 b5c:	cmp	w2, w1
 b60:	b.ge	ac0 <_ZN10NCursesPadclEv+0x390>  // b.tcont
 b64:	b	9b4 <_ZN10NCursesPadclEv+0x284>
 b68:	ldr	w1, [sp, #108]
 b6c:	cmp	w2, w1
 b70:	mov	w3, w1
 b74:	b.ge	9f4 <_ZN10NCursesPadclEv+0x2c4>  // b.tcont
 b78:	ldr	w4, [x28, #64]
 b7c:	sub	w1, w24, w4
 b80:	cmp	w2, w1
 b84:	b.ge	a98 <_ZN10NCursesPadclEv+0x368>  // b.tcont
 b88:	b	8bc <_ZN10NCursesPadclEv+0x18c>
 b8c:	mov	w23, #0xffffffff            	// #-1
 b90:	b	778 <_ZN10NCursesPadclEv+0x48>
 b94:	mov	w22, #0xffffffff            	// #-1
 b98:	b	76c <_ZN10NCursesPadclEv+0x3c>
 b9c:	mov	w22, #0xffffffff            	// #-1
 ba0:	mov	w23, w22
 ba4:	b	778 <_ZN10NCursesPadclEv+0x48>

0000000000000ba8 <_ZN10NCursesPad7refreshEv>:
 ba8:	sub	sp, sp, #0x30
 bac:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 bb0:	add	x1, x1, #0x0
 bb4:	stp	x29, x30, [sp, #16]
 bb8:	add	x29, sp, #0x10
 bbc:	ldr	x2, [x0]
 bc0:	stp	x19, x20, [sp, #32]
 bc4:	mov	x19, x0
 bc8:	ldr	x2, [x2, #40]
 bcc:	cmp	x2, x1
 bd0:	b.ne	c44 <_ZN10NCursesPad7refreshEv+0x9c>  // b.any
 bd4:	ldr	x20, [x0, #56]
 bd8:	cbz	x20, c28 <_ZN10NCursesPad7refreshEv+0x80>
 bdc:	ldr	x1, [x20, #8]
 be0:	cbz	x1, ca0 <_ZN10NCursesPad7refreshEv+0xf8>
 be4:	ldrsh	w6, [x1, #4]
 be8:	cmn	w6, #0x2
 bec:	b.eq	c90 <_ZN10NCursesPad7refreshEv+0xe8>  // b.none
 bf0:	ldrsh	w7, [x1, #6]
 bf4:	cmn	w7, #0x2
 bf8:	b.eq	c98 <_ZN10NCursesPad7refreshEv+0xf0>  // b.none
 bfc:	ldr	x0, [x19, #8]
 c00:	str	wzr, [sp]
 c04:	mov	w5, #0x0                   	// #0
 c08:	mov	w4, #0x0                   	// #0
 c0c:	ldp	w2, w3, [x19, #72]
 c10:	bl	0 <copywin>
 c14:	cbz	w0, c74 <_ZN10NCursesPad7refreshEv+0xcc>
 c18:	ldp	x29, x30, [sp, #16]
 c1c:	ldp	x19, x20, [sp, #32]
 c20:	add	sp, sp, #0x30
 c24:	ret
 c28:	ldr	x20, [x19, #48]
 c2c:	mov	w0, #0x0                   	// #0
 c30:	cbnz	x20, bdc <_ZN10NCursesPad7refreshEv+0x34>
 c34:	ldp	x29, x30, [sp, #16]
 c38:	ldp	x19, x20, [sp, #32]
 c3c:	add	sp, sp, #0x30
 c40:	ret
 c44:	blr	x2
 c48:	cbnz	w0, c18 <_ZN10NCursesPad7refreshEv+0x70>
 c4c:	ldr	x1, [x19, #48]
 c50:	cbz	x1, c18 <_ZN10NCursesPad7refreshEv+0x70>
 c54:	ldr	x2, [x1]
 c58:	mov	x0, x1
 c5c:	ldp	x29, x30, [sp, #16]
 c60:	ldp	x19, x20, [sp, #32]
 c64:	add	sp, sp, #0x30
 c68:	ldr	x1, [x2, #32]
 c6c:	mov	x16, x1
 c70:	br	x16
 c74:	ldr	x0, [x20, #8]
 c78:	bl	0 <wsyncup>
 c7c:	ldr	x0, [x19, #48]
 c80:	ldr	x1, [x0]
 c84:	ldr	x1, [x1, #40]
 c88:	blr	x1
 c8c:	b	c48 <_ZN10NCursesPad7refreshEv+0xa0>
 c90:	mov	w6, #0xffffffff            	// #-1
 c94:	b	bf0 <_ZN10NCursesPad7refreshEv+0x48>
 c98:	mov	w7, #0xffffffff            	// #-1
 c9c:	b	bfc <_ZN10NCursesPad7refreshEv+0x54>
 ca0:	mov	w6, #0xffffffff            	// #-1
 ca4:	mov	w7, w6
 ca8:	b	bfc <_ZN10NCursesPad7refreshEv+0x54>
 cac:	nop

0000000000000cb0 <_ZN10NCursesPadC1Eii>:
 cb0:	stp	x29, x30, [sp, #-48]!
 cb4:	mov	x29, sp
 cb8:	stp	x19, x20, [sp, #16]
 cbc:	mov	x19, x0
 cc0:	mov	w20, w1
 cc4:	str	x21, [sp, #32]
 cc8:	mov	w21, w2
 ccc:	bl	0 <_ZN13NCursesWindowC2Ev>
 cd0:	stp	xzr, xzr, [x19, #48]
 cd4:	adrp	x3, 0 <_ZN10NCursesPad6driverEi>
 cd8:	stp	xzr, xzr, [x19, #64]
 cdc:	mov	w1, w21
 ce0:	mov	w0, w20
 ce4:	ldr	x3, [x3]
 ce8:	add	x3, x3, #0x10
 cec:	str	x3, [x19]
 cf0:	bl	0 <newpad>
 cf4:	str	x0, [x19, #8]
 cf8:	cbz	x0, d14 <_ZN10NCursesPadC1Eii+0x64>
 cfc:	mov	w0, #0x1                   	// #1
 d00:	strb	w0, [x19, #16]
 d04:	ldp	x19, x20, [sp, #16]
 d08:	ldr	x21, [sp, #32]
 d0c:	ldp	x29, x30, [sp], #48
 d10:	ret
 d14:	adrp	x2, 0 <_ZN13NCursesWindow5countE>
 d18:	adrp	x1, 0 <_ZN10NCursesPad6driverEi>
 d1c:	mov	x0, x19
 d20:	add	x1, x1, #0x0
 d24:	ldr	x2, [x2]
 d28:	ldr	x3, [x2]
 d2c:	sub	x3, x3, #0x1
 d30:	str	x3, [x2]
 d34:	bl	0 <_ZNK13NCursesWindow11err_handlerEPKc>
 d38:	mov	w0, #0x1                   	// #1
 d3c:	strb	w0, [x19, #16]
 d40:	ldp	x19, x20, [sp, #16]
 d44:	ldr	x21, [sp, #32]
 d48:	ldp	x29, x30, [sp], #48
 d4c:	ret
 d50:	mov	x1, x0
 d54:	mov	x0, x19
 d58:	mov	x19, x1
 d5c:	bl	0 <_ZN13NCursesWindowD2Ev>
 d60:	mov	x0, x19
 d64:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN10NCursesPad11OnOperationEi:

0000000000000000 <_ZN10NCursesPad11OnOperationEi>:
   0:	ret

Disassembly of section .text._ZN16NCursesFramedPad9setWindowER13NCursesWindowii:

0000000000000000 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>:
   0:	ldr	x2, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x2]
  10:	mov	x16, x2
  14:	br	x16

Disassembly of section .text._ZN16NCursesFramedPad12setSubWindowER13NCursesWindow:

0000000000000000 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>:
   0:	ldr	x2, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x2]
  10:	mov	x16, x2
  14:	br	x16

Disassembly of section .text._ZN10NCursesPadD2Ev:

0000000000000000 <_ZN10NCursesPadD1Ev>:
   0:	adrp	x1, 0 <_ZN10NCursesPadD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN13NCursesWindowD2Ev>

Disassembly of section .text._ZN16NCursesFramedPadD2Ev:

0000000000000000 <_ZN16NCursesFramedPadD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN16NCursesFramedPadD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 34 <_ZN16NCursesFramedPadD1Ev+0x34>
  28:	ldr	x1, [x0]
  2c:	ldr	x1, [x1, #16]
  30:	blr	x1
  34:	adrp	x1, 0 <_ZN16NCursesFramedPadD1Ev>
  38:	mov	x0, x19
  3c:	ldr	x1, [x1]
  40:	add	x1, x1, #0x10
  44:	str	x1, [x19]
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	b	0 <_ZN13NCursesWindowD2Ev>

Disassembly of section .text._ZN10NCursesPad17OnNavigationErrorEi:

0000000000000000 <_ZN10NCursesPad17OnNavigationErrorEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPad18OnUnknownOperationEi:

0000000000000000 <_ZN10NCursesPad18OnUnknownOperationEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPadD0Ev:

0000000000000000 <_ZN10NCursesPadD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN10NCursesPadD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN13NCursesWindowD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x50                  	// #80
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text._ZN16NCursesFramedPadD0Ev:

0000000000000000 <_ZN16NCursesFramedPadD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN16NCursesFramedPadD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 34 <_ZN16NCursesFramedPadD0Ev+0x34>
  28:	ldr	x1, [x0]
  2c:	ldr	x1, [x1, #16]
  30:	blr	x1
  34:	adrp	x1, 0 <_ZN16NCursesFramedPadD0Ev>
  38:	mov	x0, x19
  3c:	ldr	x1, [x1]
  40:	add	x1, x1, #0x10
  44:	str	x1, [x19]
  48:	bl	0 <_ZN13NCursesWindowD2Ev>
  4c:	mov	x0, x19
  50:	mov	x1, #0x50                  	// #80
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZdlPvm>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursespad.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursespad.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	mov	x1, x19
  20:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  24:	ldr	x19, [sp, #16]
  28:	adrp	x2, 0 <__dso_handle>
  2c:	ldp	x29, x30, [sp], #32
  30:	add	x2, x2, #0x0
  34:	ldr	x0, [x0]
  38:	b	0 <__cxa_atexit>

cursesp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12NCursesPanel5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x2
  10:	mov	x19, x0
  14:	cbz	x1, 2c <_ZN12NCursesPanel5labelEPKcS1_+0x2c>
  18:	ldr	x3, [x0]
  1c:	mov	x2, x1
  20:	mov	w1, #0x0                   	// #0
  24:	ldr	x3, [x3, #80]
  28:	blr	x3
  2c:	cbz	x20, 60 <_ZN12NCursesPanel5labelEPKcS1_+0x60>
  30:	ldp	x1, x0, [x19]
  34:	ldr	x3, [x1, #80]
  38:	cbz	x0, 6c <_ZN12NCursesPanel5labelEPKcS1_+0x6c>
  3c:	ldrsh	w1, [x0, #4]
  40:	cmn	w1, #0x2
  44:	b.eq	6c <_ZN12NCursesPanel5labelEPKcS1_+0x6c>  // b.none
  48:	mov	x2, x20
  4c:	mov	x0, x19
  50:	ldp	x19, x20, [sp, #16]
  54:	mov	x16, x3
  58:	ldp	x29, x30, [sp], #32
  5c:	br	x16
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret
  6c:	mov	w1, #0xffffffff            	// #-1
  70:	b	48 <_ZN12NCursesPanel5labelEPKcS1_+0x48>
  74:	nop

0000000000000078 <_ZN12NCursesPanel11noutrefreshEv>:
  78:	stp	x29, x30, [sp, #-16]!
  7c:	mov	x29, sp
  80:	bl	0 <update_panels>
  84:	mov	w0, #0x0                   	// #0
  88:	ldp	x29, x30, [sp], #16
  8c:	ret

0000000000000090 <_ZN12NCursesPanelD1Ev>:
  90:	stp	x29, x30, [sp, #-32]!
  94:	adrp	x1, 0 <_ZN12NCursesPanel5labelEPKcS1_>
  98:	mov	x29, sp
  9c:	ldr	x1, [x1]
  a0:	str	x19, [sp, #16]
  a4:	mov	x19, x0
  a8:	ldr	x0, [x0, #48]
  ac:	add	x1, x1, #0x10
  b0:	str	x1, [x19]
  b4:	bl	0 <panel_userptr>
  b8:	cbz	x0, c4 <_ZN12NCursesPanelD1Ev+0x34>
  bc:	mov	x1, #0x18                  	// #24
  c0:	bl	0 <_ZdlPvm>
  c4:	ldr	x0, [x19, #48]
  c8:	bl	0 <del_panel>
  cc:	bl	0 <update_panels>
  d0:	mov	x0, x19
  d4:	ldr	x19, [sp, #16]
  d8:	ldp	x29, x30, [sp], #32
  dc:	b	0 <_ZN13NCursesWindowD2Ev>

00000000000000e0 <_ZN12NCursesPanelD0Ev>:
  e0:	stp	x29, x30, [sp, #-32]!
  e4:	mov	x29, sp
  e8:	str	x19, [sp, #16]
  ec:	mov	x19, x0
  f0:	bl	90 <_ZN12NCursesPanelD1Ev>
  f4:	mov	x0, x19
  f8:	mov	x1, #0x38                  	// #56
  fc:	ldr	x19, [sp, #16]
 100:	ldp	x29, x30, [sp], #32
 104:	b	0 <_ZdlPvm>

0000000000000108 <_ZN12NCursesPanel7refreshEv>:
 108:	stp	x29, x30, [sp, #-16]!
 10c:	mov	x29, sp
 110:	bl	0 <update_panels>
 114:	ldp	x29, x30, [sp], #16
 118:	b	0 <doupdate>
 11c:	nop

0000000000000120 <_ZN12NCursesPanel6getKeyEv>:
 120:	ldr	x0, [x0, #8]
 124:	b	0 <wgetch>

0000000000000128 <_ZNK12NCursesPanel7OnErrorEi.isra.0.part.0>:
 128:	stp	x29, x30, [sp, #-32]!
 12c:	mov	x0, #0x20                  	// #32
 130:	mov	x29, sp
 134:	str	x19, [sp, #16]
 138:	adrp	x19, 0 <_ZSt4cerr>
 13c:	bl	0 <_Znwm>
 140:	bl	0 <endwin>
 144:	ldr	x19, [x19]
 148:	adrp	x1, 0 <_ZN12NCursesPanel5labelEPKcS1_>
 14c:	add	x1, x1, #0x0
 150:	mov	x2, #0x19                  	// #25
 154:	mov	x0, x19
 158:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
 15c:	mov	x0, x19
 160:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
 164:	mov	w0, #0x1                   	// #1
 168:	bl	0 <exit>
 16c:	nop

0000000000000170 <_ZN12NCursesPanel10centertextEiPKc>:
 170:	cbz	x2, 1fc <_ZN12NCursesPanel10centertextEiPKc+0x8c>
 174:	stp	x29, x30, [sp, #-48]!
 178:	mov	x29, sp
 17c:	stp	x21, x22, [sp, #32]
 180:	mov	w21, w1
 184:	ldr	x22, [x0, #8]
 188:	mov	x0, x2
 18c:	stp	x19, x20, [sp, #16]
 190:	mov	x19, x2
 194:	bl	0 <strlen>
 198:	cbz	x22, 204 <_ZN12NCursesPanel10centertextEiPKc+0x94>
 19c:	ldrsh	w2, [x22, #6]
 1a0:	cmn	w2, #0x2
 1a4:	b.eq	204 <_ZN12NCursesPanel10centertextEiPKc+0x94>  // b.none
 1a8:	sxth	x3, w2
 1ac:	add	w20, w2, #0x1
 1b0:	sub	x0, x3, x0
 1b4:	lsr	x0, x0, #1
 1b8:	cmp	w0, #0x0
 1bc:	csel	w2, w0, wzr, ge  // ge = tcont
 1c0:	mov	w1, w21
 1c4:	mov	x0, x22
 1c8:	bl	0 <wmove>
 1cc:	cmn	w0, #0x1
 1d0:	b.eq	200 <_ZN12NCursesPanel10centertextEiPKc+0x90>  // b.none
 1d4:	mov	w2, w20
 1d8:	mov	x1, x19
 1dc:	mov	x0, x22
 1e0:	bl	0 <waddnstr>
 1e4:	cmn	w0, #0x1
 1e8:	b.eq	200 <_ZN12NCursesPanel10centertextEiPKc+0x90>  // b.none
 1ec:	ldp	x19, x20, [sp, #16]
 1f0:	ldp	x21, x22, [sp, #32]
 1f4:	ldp	x29, x30, [sp], #48
 1f8:	ret
 1fc:	ret
 200:	bl	128 <_ZNK12NCursesPanel7OnErrorEi.isra.0.part.0>
 204:	mvn	x0, x0
 208:	mov	w20, #0x0                   	// #0
 20c:	lsr	x0, x0, #1
 210:	cmp	w0, #0x0
 214:	csel	w2, w0, wzr, ge  // ge = tcont
 218:	b	1c0 <_ZN12NCursesPanel10centertextEiPKc+0x50>
 21c:	nop

0000000000000220 <_ZN12NCursesPanel9boldframeEPKcS1_>:
 220:	sub	sp, sp, #0x40
 224:	stp	x29, x30, [sp, #16]
 228:	add	x29, sp, #0x10
 22c:	stp	x19, x20, [sp, #32]
 230:	mov	x19, x0
 234:	mov	x20, x1
 238:	ldr	x0, [x0, #8]
 23c:	str	x21, [sp, #48]
 240:	mov	x21, x2
 244:	cbz	x0, 254 <_ZN12NCursesPanel9boldframeEPKcS1_+0x34>
 248:	mov	w1, #0x10000               	// #65536
 24c:	str	w1, [x0, #16]
 250:	str	wzr, [x0, #116]
 254:	ldr	x2, [x19]
 258:	adrp	x1, 0 <_ZN12NCursesPanel5labelEPKcS1_>
 25c:	add	x1, x1, #0x0
 260:	ldr	x3, [x2, #56]
 264:	cmp	x3, x1
 268:	b.ne	330 <_ZN12NCursesPanel9boldframeEPKcS1_+0x110>  // b.any
 26c:	str	wzr, [sp]
 270:	orr	x1, x20, x21
 274:	mov	w7, #0x0                   	// #0
 278:	mov	w6, #0x0                   	// #0
 27c:	mov	w5, #0x0                   	// #0
 280:	mov	w4, #0x0                   	// #0
 284:	mov	w3, #0x0                   	// #0
 288:	mov	w2, #0x0                   	// #0
 28c:	cbnz	x1, 2c0 <_ZN12NCursesPanel9boldframeEPKcS1_+0xa0>
 290:	bl	0 <wborder>
 294:	cmn	w0, #0x1
 298:	b.eq	348 <_ZN12NCursesPanel9boldframeEPKcS1_+0x128>  // b.none
 29c:	ldr	x0, [x19, #8]
 2a0:	cbz	x0, 2ac <_ZN12NCursesPanel9boldframeEPKcS1_+0x8c>
 2a4:	str	wzr, [x0, #16]
 2a8:	str	wzr, [x0, #116]
 2ac:	ldp	x29, x30, [sp, #16]
 2b0:	ldp	x19, x20, [sp, #32]
 2b4:	ldr	x21, [sp, #48]
 2b8:	add	sp, sp, #0x40
 2bc:	ret
 2c0:	mov	w1, #0x0                   	// #0
 2c4:	bl	0 <wborder>
 2c8:	cbnz	w0, 294 <_ZN12NCursesPanel9boldframeEPKcS1_+0x74>
 2cc:	ldr	x1, [x19]
 2d0:	adrp	x0, 0 <_ZN12NCursesPanel5labelEPKcS1_>
 2d4:	add	x0, x0, #0x0
 2d8:	ldr	x3, [x1, #72]
 2dc:	cmp	x3, x0
 2e0:	b.ne	330 <_ZN12NCursesPanel9boldframeEPKcS1_+0x110>  // b.any
 2e4:	cbz	x20, 2fc <_ZN12NCursesPanel9boldframeEPKcS1_+0xdc>
 2e8:	ldr	x3, [x1, #80]
 2ec:	mov	x2, x20
 2f0:	mov	x0, x19
 2f4:	mov	w1, #0x0                   	// #0
 2f8:	blr	x3
 2fc:	ldr	x0, [x19, #8]
 300:	cbz	x21, 2a0 <_ZN12NCursesPanel9boldframeEPKcS1_+0x80>
 304:	ldr	x1, [x19]
 308:	ldr	x3, [x1, #80]
 30c:	cbz	x0, 34c <_ZN12NCursesPanel9boldframeEPKcS1_+0x12c>
 310:	ldrsh	w1, [x0, #4]
 314:	cmn	w1, #0x2
 318:	b.eq	34c <_ZN12NCursesPanel9boldframeEPKcS1_+0x12c>  // b.none
 31c:	mov	x0, x19
 320:	mov	x2, x21
 324:	blr	x3
 328:	ldr	x0, [x19, #8]
 32c:	b	2a0 <_ZN12NCursesPanel9boldframeEPKcS1_+0x80>
 330:	mov	x0, x19
 334:	mov	x2, x21
 338:	mov	x1, x20
 33c:	blr	x3
 340:	ldr	x0, [x19, #8]
 344:	b	2a0 <_ZN12NCursesPanel9boldframeEPKcS1_+0x80>
 348:	bl	128 <_ZNK12NCursesPanel7OnErrorEi.isra.0.part.0>
 34c:	mov	w1, #0xffffffff            	// #-1
 350:	b	31c <_ZN12NCursesPanel9boldframeEPKcS1_+0xfc>
 354:	nop

0000000000000358 <_ZN12NCursesPanel5frameEPKcS1_>:
 358:	sub	sp, sp, #0x40
 35c:	stp	x29, x30, [sp, #16]
 360:	add	x29, sp, #0x10
 364:	stp	x19, x20, [sp, #32]
 368:	mov	x19, x0
 36c:	mov	x20, x1
 370:	orr	x1, x1, x2
 374:	ldr	x0, [x0, #8]
 378:	cbnz	x1, 3b4 <_ZN12NCursesPanel5frameEPKcS1_+0x5c>
 37c:	str	wzr, [sp]
 380:	mov	w7, #0x0                   	// #0
 384:	mov	w6, #0x0                   	// #0
 388:	mov	w5, #0x0                   	// #0
 38c:	mov	w4, #0x0                   	// #0
 390:	mov	w3, #0x0                   	// #0
 394:	mov	w2, #0x0                   	// #0
 398:	bl	0 <wborder>
 39c:	cmn	w0, #0x1
 3a0:	b.eq	48c <_ZN12NCursesPanel5frameEPKcS1_+0x134>  // b.none
 3a4:	ldp	x29, x30, [sp, #16]
 3a8:	ldp	x19, x20, [sp, #32]
 3ac:	add	sp, sp, #0x40
 3b0:	ret
 3b4:	str	wzr, [sp]
 3b8:	mov	w7, #0x0                   	// #0
 3bc:	mov	w6, #0x0                   	// #0
 3c0:	mov	w5, #0x0                   	// #0
 3c4:	mov	w4, #0x0                   	// #0
 3c8:	mov	w3, #0x0                   	// #0
 3cc:	mov	w1, #0x0                   	// #0
 3d0:	str	x21, [sp, #48]
 3d4:	mov	x21, x2
 3d8:	mov	w2, #0x0                   	// #0
 3dc:	bl	0 <wborder>
 3e0:	cbnz	w0, 450 <_ZN12NCursesPanel5frameEPKcS1_+0xf8>
 3e4:	ldr	x1, [x19]
 3e8:	adrp	x0, 0 <_ZN12NCursesPanel5labelEPKcS1_>
 3ec:	add	x0, x0, #0x0
 3f0:	ldr	x3, [x1, #72]
 3f4:	cmp	x3, x0
 3f8:	b.ne	460 <_ZN12NCursesPanel5frameEPKcS1_+0x108>  // b.any
 3fc:	cbz	x20, 414 <_ZN12NCursesPanel5frameEPKcS1_+0xbc>
 400:	ldr	x3, [x1, #80]
 404:	mov	x2, x20
 408:	mov	x0, x19
 40c:	mov	w1, #0x0                   	// #0
 410:	blr	x3
 414:	cbz	x21, 458 <_ZN12NCursesPanel5frameEPKcS1_+0x100>
 418:	ldp	x1, x0, [x19]
 41c:	ldr	x3, [x1, #80]
 420:	cbz	x0, 484 <_ZN12NCursesPanel5frameEPKcS1_+0x12c>
 424:	ldrsh	w1, [x0, #4]
 428:	cmn	w1, #0x2
 42c:	b.eq	484 <_ZN12NCursesPanel5frameEPKcS1_+0x12c>  // b.none
 430:	mov	x0, x19
 434:	mov	x2, x21
 438:	ldp	x29, x30, [sp, #16]
 43c:	mov	x16, x3
 440:	ldp	x19, x20, [sp, #32]
 444:	ldr	x21, [sp, #48]
 448:	add	sp, sp, #0x40
 44c:	br	x16
 450:	ldr	x21, [sp, #48]
 454:	b	39c <_ZN12NCursesPanel5frameEPKcS1_+0x44>
 458:	ldr	x21, [sp, #48]
 45c:	b	3a4 <_ZN12NCursesPanel5frameEPKcS1_+0x4c>
 460:	mov	x1, x20
 464:	mov	x0, x19
 468:	ldp	x29, x30, [sp, #16]
 46c:	mov	x2, x21
 470:	ldp	x19, x20, [sp, #32]
 474:	mov	x16, x3
 478:	ldr	x21, [sp, #48]
 47c:	add	sp, sp, #0x40
 480:	br	x16
 484:	mov	w1, #0xffffffff            	// #-1
 488:	b	430 <_ZN12NCursesPanel5frameEPKcS1_+0xd8>
 48c:	str	x21, [sp, #48]
 490:	bl	128 <_ZNK12NCursesPanel7OnErrorEi.isra.0.part.0>
 494:	nop

0000000000000498 <_ZN12NCursesPanel4initEv>:
 498:	stp	x29, x30, [sp, #-32]!
 49c:	mov	x29, sp
 4a0:	str	x19, [sp, #16]
 4a4:	mov	x19, x0
 4a8:	ldr	x0, [x0, #8]
 4ac:	bl	0 <new_panel>
 4b0:	str	x0, [x19, #48]
 4b4:	cbz	x0, 4e0 <_ZN12NCursesPanel4initEv+0x48>
 4b8:	mov	x0, #0x18                  	// #24
 4bc:	bl	0 <_Znwm>
 4c0:	mov	x1, x0
 4c4:	ldr	x2, [x19, #48]
 4c8:	stp	xzr, x19, [x1]
 4cc:	mov	x0, x2
 4d0:	str	x2, [x1, #16]
 4d4:	ldr	x19, [sp, #16]
 4d8:	ldp	x29, x30, [sp], #32
 4dc:	b	0 <set_panel_userptr>
 4e0:	bl	128 <_ZNK12NCursesPanel7OnErrorEi.isra.0.part.0>
 4e4:	nop

00000000000004e8 <_ZN12NCursesPanel6redrawEv>:
 4e8:	stp	x29, x30, [sp, #-32]!
 4ec:	mov	x0, #0x0                   	// #0
 4f0:	mov	x29, sp
 4f4:	str	x19, [sp, #16]
 4f8:	bl	0 <panel_above>
 4fc:	mov	x19, x0
 500:	cbnz	x0, 524 <_ZN12NCursesPanel6redrawEv+0x3c>
 504:	b	558 <_ZN12NCursesPanel6redrawEv+0x70>
 508:	ldrsh	w2, [x0, #4]
 50c:	add	w2, w2, w3
 510:	bl	0 <wtouchln>
 514:	mov	x0, x19
 518:	bl	0 <panel_above>
 51c:	mov	x19, x0
 520:	cbz	x0, 558 <_ZN12NCursesPanel6redrawEv+0x70>
 524:	mov	x0, x19
 528:	bl	0 <panel_window>
 52c:	mov	w3, #0x1                   	// #1
 530:	mov	w1, #0x0                   	// #0
 534:	cbnz	x0, 508 <_ZN12NCursesPanel6redrawEv+0x20>
 538:	mov	w3, #0x1                   	// #1
 53c:	mov	w2, #0xffffffff            	// #-1
 540:	mov	w1, #0x0                   	// #0
 544:	bl	0 <wtouchln>
 548:	mov	x0, x19
 54c:	bl	0 <panel_above>
 550:	mov	x19, x0
 554:	cbnz	x0, 524 <_ZN12NCursesPanel6redrawEv+0x3c>
 558:	bl	0 <update_panels>
 55c:	ldr	x19, [sp, #16]
 560:	ldp	x29, x30, [sp], #32
 564:	b	0 <doupdate>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, #0x0                   	// #0
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	bl	0 <_ZN12NCursesPanel5mvwinEii>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesp.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesp.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	mov	x1, x19
  20:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  24:	ldr	x19, [sp, #16]
  28:	adrp	x2, 0 <__dso_handle>
  2c:	ldp	x29, x30, [sp], #32
  30:	add	x2, x2, #0x0
  34:	ldr	x0, [x0]
  38:	b	0 <__cxa_atexit>

cursslk.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x0, #0x18                  	// #24
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	adrp	x19, 0 <_ZSt4cerr>
  14:	bl	0 <_Znwm>
  18:	bl	0 <endwin>
  1c:	ldr	x19, [x19]
  20:	adrp	x1, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
  24:	add	x1, x1, #0x0
  28:	mov	x2, #0x19                  	// #25
  2c:	mov	x0, x19
  30:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
  34:	mov	x0, x19
  38:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
  3c:	mov	w0, #0x1                   	// #1
  40:	bl	0 <exit>
  44:	nop

0000000000000048 <_ZN18Soft_Label_Key_SetD1Ev>:
  48:	stp	x29, x30, [sp, #-64]!
  4c:	adrp	x1, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
  50:	mov	x29, sp
  54:	ldr	x1, [x1]
  58:	stp	x19, x20, [sp, #16]
  5c:	mov	x20, x0
  60:	add	x1, x1, #0x10
  64:	str	x1, [x0]
  68:	bl	0 <isendwin>
  6c:	tst	w0, #0xff
  70:	b.eq	138 <_ZN18Soft_Label_Key_SetD1Ev+0xf0>  // b.none
  74:	ldr	x2, [x20, #16]
  78:	cbz	x2, 118 <_ZN18Soft_Label_Key_SetD1Ev+0xd0>
  7c:	ldur	x1, [x2, #-8]
  80:	add	x1, x1, x1, lsl #1
  84:	lsl	x1, x1, #3
  88:	add	x19, x2, x1
  8c:	cmp	x2, x19
  90:	b.eq	10c <_ZN18Soft_Label_Key_SetD1Ev+0xc4>  // b.none
  94:	stp	x21, x22, [sp, #32]
  98:	adrp	x21, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
  9c:	adrp	x22, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
  a0:	ldr	x21, [x21]
  a4:	str	x23, [sp, #48]
  a8:	ldr	x22, [x22]
  ac:	add	x21, x21, #0x10
  b0:	b	d0 <_ZN18Soft_Label_Key_SetD1Ev+0x88>
  b4:	ldr	x0, [x19, #8]
  b8:	str	x21, [x19]
  bc:	cbz	x0, c8 <_ZN18Soft_Label_Key_SetD1Ev+0x80>
  c0:	bl	0 <_ZdaPv>
  c4:	ldr	x2, [x20, #16]
  c8:	cmp	x2, x19
  cc:	b.eq	f8 <_ZN18Soft_Label_Key_SetD1Ev+0xb0>  // b.none
  d0:	mov	x23, x19
  d4:	ldr	x1, [x19, #-24]!
  d8:	ldr	x1, [x1]
  dc:	cmp	x1, x22
  e0:	b.eq	b4 <_ZN18Soft_Label_Key_SetD1Ev+0x6c>  // b.none
  e4:	mov	x0, x19
  e8:	blr	x1
  ec:	ldr	x2, [x20, #16]
  f0:	cmp	x2, x19
  f4:	b.ne	d0 <_ZN18Soft_Label_Key_SetD1Ev+0x88>  // b.any
  f8:	ldur	x1, [x23, #-32]
  fc:	ldp	x21, x22, [sp, #32]
 100:	add	x1, x1, x1, lsl #1
 104:	ldr	x23, [sp, #48]
 108:	lsl	x1, x1, #3
 10c:	add	x1, x1, #0x8
 110:	sub	x0, x19, #0x8
 114:	bl	0 <_ZdaPvm>
 118:	adrp	x0, 8 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0+0x8>
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldr	x0, [x0]
 124:	ldr	x1, [x0]
 128:	sub	x1, x1, #0x1
 12c:	str	x1, [x0]
 130:	ldp	x29, x30, [sp], #64
 134:	ret
 138:	bl	0 <slk_clear>
 13c:	cmn	w0, #0x1
 140:	b.ne	74 <_ZN18Soft_Label_Key_SetD1Ev+0x2c>  // b.any
 144:	stp	x21, x22, [sp, #32]
 148:	str	x23, [sp, #48]
 14c:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>

0000000000000150 <_ZN18Soft_Label_Key_SetD0Ev>:
 150:	stp	x29, x30, [sp, #-32]!
 154:	mov	x29, sp
 158:	str	x19, [sp, #16]
 15c:	mov	x19, x0
 160:	bl	48 <_ZN18Soft_Label_Key_SetD1Ev>
 164:	mov	x0, x19
 168:	mov	x1, #0x18                  	// #24
 16c:	ldr	x19, [sp, #16]
 170:	ldp	x29, x30, [sp], #32
 174:	b	0 <_ZdlPvm>

0000000000000178 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>:
 178:	stp	x29, x30, [sp, #-32]!
 17c:	mov	x29, sp
 180:	stp	x19, x20, [sp, #16]
 184:	mov	x19, x0
 188:	mov	x20, x1
 18c:	ldr	x0, [x0, #8]
 190:	cbz	x0, 198 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x20>
 194:	bl	0 <_ZdaPv>
 198:	mov	x0, x20
 19c:	bl	0 <strlen>
 1a0:	add	x0, x0, #0x1
 1a4:	bl	0 <_Znam>
 1a8:	str	x0, [x19, #8]
 1ac:	mov	x1, x20
 1b0:	bl	0 <strcpy>
 1b4:	mov	x0, x19
 1b8:	ldp	x19, x20, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #32
 1c0:	ret
 1c4:	nop

00000000000001c8 <_ZN18Soft_Label_Key_Set4initEv>:
 1c8:	stp	x29, x30, [sp, #-48]!
 1cc:	mov	w2, #0x18                  	// #24
 1d0:	mov	x1, #0x8                   	// #8
 1d4:	mov	x29, sp
 1d8:	stp	x21, x22, [sp, #32]
 1dc:	adrp	x21, 4 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0+0x4>
 1e0:	mov	x3, #0x5555555555555555    	// #6148914691236517205
 1e4:	ldr	x4, [x21]
 1e8:	stp	x19, x20, [sp, #16]
 1ec:	mov	x20, x0
 1f0:	movk	x3, #0x555, lsl #48
 1f4:	mov	x19, #0xffffffffffffffff    	// #-1
 1f8:	ldr	w0, [x4]
 1fc:	sxtw	x22, w0
 200:	cmp	x22, x3
 204:	smaddl	x0, w0, w2, x1
 208:	csel	x0, x0, x19, ls  // ls = plast
 20c:	bl	0 <_Znam>
 210:	mov	x5, x0
 214:	adds	x2, x22, x19
 218:	str	x22, [x5], #8
 21c:	b.mi	250 <_ZN18Soft_Label_Key_Set4initEv+0x88>  // b.first
 220:	adrp	x3, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 224:	mov	w4, w19
 228:	mov	x1, x5
 22c:	ldr	x3, [x3]
 230:	add	x3, x3, #0x10
 234:	nop
 238:	stp	x3, xzr, [x1]
 23c:	sub	x2, x2, #0x1
 240:	cmn	x2, #0x1
 244:	stp	wzr, w4, [x1, #16]
 248:	add	x1, x1, #0x18
 24c:	b.ne	238 <_ZN18Soft_Label_Key_Set4initEv+0x70>  // b.any
 250:	ldr	x21, [x21]
 254:	str	x5, [x20, #16]
 258:	ldr	w3, [x21]
 25c:	cmp	w3, #0x0
 260:	b.le	280 <_ZN18Soft_Label_Key_Set4initEv+0xb8>
 264:	add	x2, x0, #0x1c
 268:	mov	w1, #0x0                   	// #0
 26c:	nop
 270:	add	w1, w1, #0x1
 274:	str	w1, [x2], #24
 278:	cmp	w1, w3
 27c:	b.ne	270 <_ZN18Soft_Label_Key_Set4initEv+0xa8>  // b.any
 280:	strb	wzr, [x20, #8]
 284:	ldp	x19, x20, [sp, #16]
 288:	ldp	x21, x22, [sp, #32]
 28c:	ldp	x29, x30, [sp], #48
 290:	ret
 294:	nop

0000000000000298 <_ZN18Soft_Label_Key_SetC1Ev>:
 298:	adrp	x3, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 29c:	adrp	x2, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 2a0:	strb	wzr, [x0, #8]
 2a4:	ldr	x3, [x3]
 2a8:	str	xzr, [x0, #16]
 2ac:	ldr	x2, [x2]
 2b0:	ldr	w1, [x3]
 2b4:	add	x2, x2, #0x10
 2b8:	str	x2, [x0]
 2bc:	cmn	w1, #0x1
 2c0:	b.eq	2c8 <_ZN18Soft_Label_Key_SetC1Ev+0x30>  // b.none
 2c4:	b	1c8 <_ZN18Soft_Label_Key_Set4initEv>
 2c8:	stp	x29, x30, [sp, #-16]!
 2cc:	mov	x29, sp
 2d0:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 2d4:	nop

00000000000002d8 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>:
 2d8:	stp	x29, x30, [sp, #-32]!
 2dc:	adrp	x2, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 2e0:	cmn	w1, #0x1
 2e4:	mov	x29, sp
 2e8:	ldr	x2, [x2]
 2ec:	stp	x19, x20, [sp, #16]
 2f0:	add	x2, x2, #0x10
 2f4:	str	x2, [x0]
 2f8:	strb	wzr, [x0, #8]
 2fc:	str	xzr, [x0, #16]
 300:	b.eq	390 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xb8>  // b.none
 304:	mov	x19, x0
 308:	adrp	x0, 8 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0+0x8>
 30c:	mov	w20, w1
 310:	ldr	x0, [x0]
 314:	ldr	x1, [x0]
 318:	add	x2, x1, #0x1
 31c:	str	x2, [x0]
 320:	cbz	x1, 348 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x70>
 324:	adrp	x0, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 328:	ldr	x0, [x0]
 32c:	ldr	w0, [x0]
 330:	cmp	w0, w20
 334:	b.ne	390 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xb8>  // b.any
 338:	mov	x0, x19
 33c:	ldp	x19, x20, [sp, #16]
 340:	ldp	x29, x30, [sp], #32
 344:	b	1c8 <_ZN18Soft_Label_Key_Set4initEv>
 348:	adrp	x1, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 34c:	mov	w0, w20
 350:	ldr	x1, [x1]
 354:	str	w20, [x1]
 358:	bl	0 <slk_init>
 35c:	cmn	w0, #0x1
 360:	b.eq	390 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xb8>  // b.none
 364:	adrp	x0, 4 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0+0x4>
 368:	cmp	w20, #0x1
 36c:	mov	w2, #0x8                   	// #8
 370:	mov	w1, #0xc                   	// #12
 374:	ldr	x0, [x0]
 378:	csel	w1, w1, w2, gt
 37c:	str	w1, [x0]
 380:	mov	x0, x19
 384:	ldp	x19, x20, [sp, #16]
 388:	ldp	x29, x30, [sp], #32
 38c:	b	1c8 <_ZN18Soft_Label_Key_Set4initEv>
 390:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 394:	nop

0000000000000398 <_ZN18Soft_Label_Key_SetixEi>:
 398:	cmp	w1, #0x0
 39c:	b.le	3cc <_ZN18Soft_Label_Key_SetixEi+0x34>
 3a0:	adrp	x2, 4 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0+0x4>
 3a4:	ldr	x2, [x2]
 3a8:	ldr	w2, [x2]
 3ac:	cmp	w2, w1
 3b0:	b.lt	3cc <_ZN18Soft_Label_Key_SetixEi+0x34>  // b.tstop
 3b4:	mov	w3, #0x18                  	// #24
 3b8:	mov	x2, #0xffffffffffffffe8    	// #-24
 3bc:	ldr	x0, [x0, #16]
 3c0:	smaddl	x1, w1, w3, x2
 3c4:	add	x0, x0, x1
 3c8:	ret
 3cc:	stp	x29, x30, [sp, #-16]!
 3d0:	mov	x29, sp
 3d4:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>

00000000000003d8 <_ZN18Soft_Label_Key_Set14activate_labelEib>:
 3d8:	stp	x29, x30, [sp, #-48]!
 3dc:	mov	x29, sp
 3e0:	stp	x19, x20, [sp, #16]
 3e4:	mov	x19, x0
 3e8:	ldrb	w0, [x0, #8]
 3ec:	str	x21, [sp, #32]
 3f0:	mov	w20, w1
 3f4:	and	w21, w2, #0xff
 3f8:	cbnz	w0, 448 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x70>
 3fc:	adrp	x0, 0 <_ZN18NCursesApplication6theAppE>
 400:	ldr	x0, [x0]
 404:	ldr	x0, [x0]
 408:	cbz	x0, 440 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x68>
 40c:	ldr	x2, [x0]
 410:	adrp	x1, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 414:	ldr	x1, [x1]
 418:	ldr	x2, [x2, #96]
 41c:	cmp	x2, x1
 420:	b.ne	49c <_ZN18Soft_Label_Key_Set14activate_labelEib+0xc4>  // b.any
 424:	ldrb	w0, [x0, #8]
 428:	cmp	w0, #0x0
 42c:	cset	w0, ne  // ne = any
 430:	lsl	w0, w0, #10
 434:	bl	0 <slk_attrset>
 438:	cmn	w0, #0x1
 43c:	b.eq	4a4 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xcc>  // b.none
 440:	mov	w0, #0x1                   	// #1
 444:	strb	w0, [x19, #8]
 448:	mov	w1, w20
 44c:	mov	x0, x19
 450:	bl	398 <_ZN18Soft_Label_Key_SetixEi>
 454:	mov	x2, x0
 458:	ldr	w0, [x0, #20]
 45c:	cbnz	w21, 494 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xbc>
 460:	adrp	x1, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 464:	add	x1, x1, #0x0
 468:	ldr	w2, [x2, #16]
 46c:	bl	0 <slk_set>
 470:	cmn	w0, #0x1
 474:	b.eq	4a4 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xcc>  // b.none
 478:	bl	0 <slk_noutrefresh>
 47c:	cmn	w0, #0x1
 480:	b.eq	4a4 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xcc>  // b.none
 484:	ldp	x19, x20, [sp, #16]
 488:	ldr	x21, [sp, #32]
 48c:	ldp	x29, x30, [sp], #48
 490:	ret
 494:	ldr	x1, [x2, #8]
 498:	b	468 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x90>
 49c:	blr	x2
 4a0:	b	434 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x5c>
 4a4:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>

00000000000004a8 <_ZN18Soft_Label_Key_Set15activate_labelsEb>:
 4a8:	stp	x29, x30, [sp, #-48]!
 4ac:	mov	x29, sp
 4b0:	stp	x21, x22, [sp, #32]
 4b4:	mov	x21, x0
 4b8:	ldrb	w0, [x0, #8]
 4bc:	stp	x19, x20, [sp, #16]
 4c0:	and	w19, w1, #0xff
 4c4:	cbnz	w0, 514 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x6c>
 4c8:	adrp	x0, 0 <_ZN18NCursesApplication6theAppE>
 4cc:	ldr	x0, [x0]
 4d0:	ldr	x0, [x0]
 4d4:	cbz	x0, 50c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x64>
 4d8:	ldr	x2, [x0]
 4dc:	adrp	x1, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 4e0:	ldr	x1, [x1]
 4e4:	ldr	x2, [x2, #96]
 4e8:	cmp	x2, x1
 4ec:	b.ne	5dc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x134>  // b.any
 4f0:	ldrb	w0, [x0, #8]
 4f4:	cmp	w0, #0x0
 4f8:	cset	w0, ne  // ne = any
 4fc:	lsl	w0, w0, #10
 500:	bl	0 <slk_attrset>
 504:	cmn	w0, #0x1
 508:	b.eq	5d8 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x130>  // b.none
 50c:	mov	w0, #0x1                   	// #1
 510:	strb	w0, [x21, #8]
 514:	adrp	x20, 4 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0+0x4>
 518:	ldr	x20, [x20]
 51c:	ldr	w0, [x20]
 520:	cmp	w0, #0x0
 524:	b.le	5e4 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x13c>
 528:	cbnz	w19, 590 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xe8>
 52c:	adrp	x22, 0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 530:	add	x22, x22, #0x0
 534:	mov	w19, #0x1                   	// #1
 538:	mov	w1, w19
 53c:	mov	x0, x21
 540:	bl	398 <_ZN18Soft_Label_Key_SetixEi>
 544:	ldp	w2, w0, [x0, #16]
 548:	mov	x1, x22
 54c:	bl	0 <slk_set>
 550:	cmn	w0, #0x1
 554:	b.eq	5d8 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x130>  // b.none
 558:	ldr	w0, [x20]
 55c:	add	w19, w19, #0x1
 560:	cmp	w19, w0
 564:	b.le	538 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x90>
 568:	bl	0 <slk_clear>
 56c:	cmn	w0, #0x1
 570:	b.eq	5d8 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x130>  // b.none
 574:	bl	0 <slk_noutrefresh>
 578:	cmn	w0, #0x1
 57c:	b.eq	5d8 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x130>  // b.none
 580:	ldp	x19, x20, [sp, #16]
 584:	ldp	x21, x22, [sp, #32]
 588:	ldp	x29, x30, [sp], #48
 58c:	ret
 590:	mov	w19, #0x1                   	// #1
 594:	nop
 598:	mov	w1, w19
 59c:	mov	x0, x21
 5a0:	bl	398 <_ZN18Soft_Label_Key_SetixEi>
 5a4:	ldr	w2, [x0, #16]
 5a8:	ldr	x1, [x0, #8]
 5ac:	ldr	w0, [x0, #20]
 5b0:	bl	0 <slk_set>
 5b4:	cmn	w0, #0x1
 5b8:	b.eq	5d8 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x130>  // b.none
 5bc:	ldr	w0, [x20]
 5c0:	add	w19, w19, #0x1
 5c4:	cmp	w0, w19
 5c8:	b.ge	598 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xf0>  // b.tcont
 5cc:	bl	0 <slk_restore>
 5d0:	cmn	w0, #0x1
 5d4:	b.ne	574 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xcc>  // b.any
 5d8:	bl	0 <_ZNK18Soft_Label_Key_Set5ErrorEPKc.isra.0>
 5dc:	blr	x2
 5e0:	b	500 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x58>
 5e4:	cbz	w19, 568 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xc0>
 5e8:	b	5cc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x124>

Disassembly of section .text._ZNK18NCursesApplication6labelsEv:

0000000000000000 <_ZNK18NCursesApplication6labelsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #10
  10:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD1Ev>:
   0:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD1Ev>
   4:	mov	x2, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x1, [x1]
  10:	add	x1, x1, #0x10
  14:	str	x1, [x2]
  18:	cbz	x0, 20 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD1Ev+0x20>
  1c:	b	0 <_ZdaPv>
  20:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #8]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev+0x2c>
  28:	bl	0 <_ZdaPv>
  2c:	mov	x0, x19
  30:	mov	x1, #0x18                  	// #24
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZdlPvm>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursslk.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursslk.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	mov	x1, x19
  20:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  24:	ldr	x19, [sp, #16]
  28:	adrp	x2, 0 <__dso_handle>
  2c:	ldp	x29, x30, [sp], #32
  30:	add	x2, x2, #0x0
  34:	ldr	x0, [x0]
  38:	b	0 <__cxa_atexit>

cursesapp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18NCursesApplication5rinitER13NCursesWindow>:
   0:	adrp	x1, 10 <_ZN18NCursesApplication5rinitER13NCursesWindow+0x10>
   4:	mov	x2, x0
   8:	mov	w0, #0x0                   	// #0
   c:	ldr	x1, [x1]
  10:	str	x2, [x1]
  14:	ret

0000000000000018 <_ZN18NCursesApplication4initEb>:
  18:	stp	x29, x30, [sp, #-32]!
  1c:	tst	w1, #0xff
  20:	mov	x29, sp
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x19, x0
  2c:	b.ne	17c <_ZN18NCursesApplication4initEb+0x164>  // b.any
  30:	bl	0 <_ZN13NCursesWindow14NumberOfColorsEv>
  34:	cmp	w0, #0x1
  38:	b.gt	8c <_ZN18NCursesApplication4initEb+0x74>
  3c:	ldr	x2, [x19]
  40:	adrp	x0, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
  44:	strb	wzr, [x19, #8]
  48:	mov	w1, #0x20                  	// #32
  4c:	ldr	x0, [x0]
  50:	ldr	x2, [x2, #112]
  54:	ldr	x20, [x19, #16]
  58:	cmp	x2, x0
  5c:	b.ne	70 <_ZN18NCursesApplication4initEb+0x58>  // b.any
  60:	ldr	x0, [x20, #8]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <wbkgd>
  70:	mov	x0, x19
  74:	blr	x2
  78:	orr	w1, w0, #0x20
  7c:	ldr	x0, [x20, #8]
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	b	0 <wbkgd>
  8c:	ldr	x0, [x19, #16]
  90:	mov	w1, #0x1                   	// #1
  94:	strb	w1, [x19, #8]
  98:	mov	w1, #0x1                   	// #1
  9c:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  a0:	ldr	x0, [x19, #16]
  a4:	mov	w2, #0x4                   	// #4
  a8:	mov	w1, #0x3                   	// #3
  ac:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  b0:	ldr	x0, [x19, #16]
  b4:	mov	w1, #0x2                   	// #2
  b8:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  bc:	ldr	x0, [x19, #16]
  c0:	mov	w2, #0x4                   	// #4
  c4:	mov	w1, #0x6                   	// #6
  c8:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  cc:	ldr	x0, [x19, #16]
  d0:	mov	w1, #0x3                   	// #3
  d4:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  d8:	ldr	x0, [x19, #16]
  dc:	mov	w2, #0x4                   	// #4
  e0:	mov	w1, #0x0                   	// #0
  e4:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  e8:	ldr	x0, [x19, #16]
  ec:	mov	w1, #0x4                   	// #4
  f0:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  f4:	ldr	x0, [x19, #16]
  f8:	mov	w2, #0x6                   	// #6
  fc:	mov	w1, #0x0                   	// #0
 100:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
 104:	ldr	x0, [x19, #16]
 108:	mov	w1, #0x5                   	// #5
 10c:	bl	0 <_ZN13NCursesWindow8setcolorEs>
 110:	ldr	x0, [x19, #16]
 114:	mov	w2, #0x3                   	// #3
 118:	mov	w1, #0x4                   	// #4
 11c:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
 120:	ldr	x0, [x19, #16]
 124:	mov	w1, #0x6                   	// #6
 128:	bl	0 <_ZN13NCursesWindow8setcolorEs>
 12c:	ldr	x0, [x19, #16]
 130:	mov	w2, #0x2                   	// #2
 134:	mov	w1, #0x0                   	// #0
 138:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
 13c:	ldr	x1, [x19]
 140:	adrp	x0, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 144:	ldr	x20, [x19, #16]
 148:	ldr	x0, [x0]
 14c:	ldr	x2, [x1, #112]
 150:	cmp	x2, x0
 154:	b.ne	70 <_ZN18NCursesApplication4initEb+0x58>  // b.any
 158:	ldrb	w2, [x19, #8]
 15c:	mov	w0, #0x20                  	// #32
 160:	mov	w1, #0x520                 	// #1312
 164:	cmp	w2, #0x0
 168:	csel	w1, w1, w0, ne  // ne = any
 16c:	ldr	x0, [x20, #8]
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x29, x30, [sp], #32
 178:	b	0 <wbkgd>
 17c:	bl	0 <_ZN13NCursesWindow9useColorsEv>
 180:	b	30 <_ZN18NCursesApplication4initEb+0x18>
 184:	nop

0000000000000188 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>:
 188:	stp	x29, x30, [sp, #-32]!
 18c:	mov	x29, sp
 190:	stp	x19, x20, [sp, #16]
 194:	mov	x19, x1
 198:	mov	x20, x0
 19c:	mov	x0, #0x10                  	// #16
 1a0:	bl	0 <_Znwm>
 1a4:	adrp	x1, 8 <_ZN18NCursesApplication5rinitER13NCursesWindow+0x8>
 1a8:	ldr	x2, [x20, #16]
 1ac:	ldr	x1, [x1]
 1b0:	ldr	x3, [x1]
 1b4:	stp	x3, x19, [x0]
 1b8:	str	x0, [x1]
 1bc:	cbz	x2, 1e0 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set+0x58>
 1c0:	mov	x0, x19
 1c4:	mov	w1, #0x0                   	// #0
 1c8:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 1cc:	mov	x0, x19
 1d0:	mov	w1, #0x1                   	// #1
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x29, x30, [sp], #32
 1dc:	b	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 1e0:	ldp	x19, x20, [sp, #16]
 1e4:	ldp	x29, x30, [sp], #32
 1e8:	ret
 1ec:	nop

00000000000001f0 <_ZNK18NCursesApplication3topEv>:
 1f0:	adrp	x0, 8 <_ZN18NCursesApplication5rinitER13NCursesWindow+0x8>
 1f4:	ldr	x0, [x0]
 1f8:	ldr	x0, [x0]
 1fc:	cbz	x0, 204 <_ZNK18NCursesApplication3topEv+0x14>
 200:	ldr	x0, [x0, #8]
 204:	ret

0000000000000208 <_ZN18NCursesApplication3popEv>:
 208:	stp	x29, x30, [sp, #-32]!
 20c:	mov	x29, sp
 210:	stp	x19, x20, [sp, #16]
 214:	adrp	x19, 8 <_ZN18NCursesApplication5rinitER13NCursesWindow+0x8>
 218:	mov	x20, x0
 21c:	ldr	x19, [x19]
 220:	ldr	x0, [x19]
 224:	cbz	x0, 268 <_ZN18NCursesApplication3popEv+0x60>
 228:	ldr	x2, [x0]
 22c:	mov	x1, #0x10                  	// #16
 230:	str	x2, [x19]
 234:	bl	0 <_ZdlPvm>
 238:	ldr	x0, [x20, #16]
 23c:	cbz	x0, 264 <_ZN18NCursesApplication3popEv+0x5c>
 240:	mov	x0, x20
 244:	bl	1f0 <_ZNK18NCursesApplication3topEv>
 248:	mov	x20, x0
 24c:	cbz	x0, 264 <_ZN18NCursesApplication3popEv+0x5c>
 250:	mov	w1, #0x0                   	// #0
 254:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 258:	mov	x0, x20
 25c:	mov	w1, #0x1                   	// #1
 260:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 264:	ldr	x0, [x19]
 268:	cmp	x0, #0x0
 26c:	cset	w0, eq  // eq = none
 270:	ldp	x19, x20, [sp, #16]
 274:	ldp	x29, x30, [sp], #32
 278:	ret
 27c:	nop

0000000000000280 <_ZN18NCursesApplicationD1Ev>:
 280:	stp	x29, x30, [sp, #-32]!
 284:	adrp	x1, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 288:	mov	x29, sp
 28c:	stp	x19, x20, [sp, #16]
 290:	adrp	x19, 10 <_ZN18NCursesApplication5rinitER13NCursesWindow+0x10>
 294:	mov	x20, x0
 298:	ldr	x2, [x19]
 29c:	ldr	x1, [x1]
 2a0:	ldr	x0, [x2]
 2a4:	add	x1, x1, #0x10
 2a8:	str	x1, [x20]
 2ac:	cbz	x0, 2bc <_ZN18NCursesApplicationD1Ev+0x3c>
 2b0:	ldr	x1, [x0]
 2b4:	ldr	x1, [x1, #16]
 2b8:	blr	x1
 2bc:	ldr	x19, [x19]
 2c0:	str	xzr, [x19]
 2c4:	b	2e0 <_ZN18NCursesApplicationD1Ev+0x60>
 2c8:	mov	x0, x20
 2cc:	bl	208 <_ZN18NCursesApplication3popEv>
 2d0:	ldr	x1, [x19]
 2d4:	mov	x0, x19
 2d8:	ldr	x1, [x1, #8]
 2dc:	blr	x1
 2e0:	mov	x0, x20
 2e4:	bl	1f0 <_ZNK18NCursesApplication3topEv>
 2e8:	mov	x19, x0
 2ec:	cbnz	x0, 2c8 <_ZN18NCursesApplicationD1Ev+0x48>
 2f0:	ldr	x0, [x20, #16]
 2f4:	cbz	x0, 304 <_ZN18NCursesApplicationD1Ev+0x84>
 2f8:	ldr	x1, [x0]
 2fc:	ldr	x1, [x1, #16]
 300:	blr	x1
 304:	str	xzr, [x20, #16]
 308:	bl	0 <endwin>
 30c:	ldp	x19, x20, [sp, #16]
 310:	ldp	x29, x30, [sp], #32
 314:	ret

0000000000000318 <_ZN18NCursesApplicationD0Ev>:
 318:	stp	x29, x30, [sp, #-32]!
 31c:	mov	x29, sp
 320:	str	x19, [sp, #16]
 324:	mov	x19, x0
 328:	bl	280 <_ZN18NCursesApplicationD1Ev>
 32c:	mov	x0, x19
 330:	mov	x1, #0x18                  	// #24
 334:	ldr	x19, [sp, #16]
 338:	ldp	x29, x30, [sp], #32
 33c:	b	0 <_ZdlPvm>

0000000000000340 <_ZN18NCursesApplicationclEv>:
 340:	stp	x29, x30, [sp, #-64]!
 344:	adrp	x1, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 348:	mov	x29, sp
 34c:	ldr	x2, [x0]
 350:	stp	x19, x20, [sp, #16]
 354:	mov	x19, x0
 358:	ldr	x1, [x1]
 35c:	stp	x21, x22, [sp, #32]
 360:	ldrb	w22, [x0, #8]
 364:	ldr	x3, [x2, #8]
 368:	stp	x23, x24, [sp, #48]
 36c:	mov	w21, #0x0                   	// #0
 370:	cmp	x3, x1
 374:	b.ne	470 <_ZN18NCursesApplicationclEv+0x130>  // b.any
 378:	adrp	x1, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 37c:	ldr	x2, [x2, #24]
 380:	ldr	x1, [x1]
 384:	cmp	x2, x1
 388:	b.ne	420 <_ZN18NCursesApplicationclEv+0xe0>  // b.any
 38c:	mov	w24, #0xffffffff            	// #-1
 390:	mov	x23, #0x0                   	// #0
 394:	mov	x0, #0x30                  	// #48
 398:	bl	0 <_Znwm>
 39c:	adrp	x1, 0 <stdscr>
 3a0:	mov	x20, x0
 3a4:	ldr	x1, [x1]
 3a8:	ldr	x1, [x1]
 3ac:	bl	0 <_ZN13NCursesWindowC1EP7_win_st>
 3b0:	ldr	x2, [x19]
 3b4:	mov	w1, w22
 3b8:	mov	x0, x19
 3bc:	ldr	x2, [x2]
 3c0:	str	x20, [x19, #16]
 3c4:	blr	x2
 3c8:	cmp	w21, #0x0
 3cc:	b.le	3e8 <_ZN18NCursesApplicationclEv+0xa8>
 3d0:	ldr	x1, [x19]
 3d4:	adrp	x0, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 3d8:	ldr	x0, [x0]
 3dc:	ldr	x1, [x1, #16]
 3e0:	cmp	x1, x0
 3e4:	b.ne	494 <_ZN18NCursesApplicationclEv+0x154>  // b.any
 3e8:	cmn	w24, #0x1
 3ec:	b.eq	3fc <_ZN18NCursesApplicationclEv+0xbc>  // b.none
 3f0:	mov	x1, x23
 3f4:	mov	x0, x19
 3f8:	bl	188 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>
 3fc:	ldr	x1, [x19]
 400:	mov	x0, x19
 404:	ldp	x19, x20, [sp, #16]
 408:	ldp	x21, x22, [sp, #32]
 40c:	ldp	x23, x24, [sp, #48]
 410:	ldp	x29, x30, [sp], #64
 414:	ldr	x1, [x1, #40]
 418:	mov	x16, x1
 41c:	br	x16
 420:	mov	x0, x19
 424:	blr	x2
 428:	mov	w24, w0
 42c:	cmn	w0, #0x1
 430:	b.eq	38c <_ZN18NCursesApplicationclEv+0x4c>  // b.none
 434:	mov	x0, #0x18                  	// #24
 438:	bl	0 <_Znwm>
 43c:	mov	w1, w24
 440:	mov	x23, x0
 444:	bl	0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>
 448:	ldr	x1, [x19]
 44c:	adrp	x0, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 450:	ldr	x0, [x0]
 454:	ldr	x2, [x1, #32]
 458:	cmp	x2, x0
 45c:	b.eq	394 <_ZN18NCursesApplicationclEv+0x54>  // b.none
 460:	mov	x1, x23
 464:	mov	x0, x19
 468:	blr	x2
 46c:	b	394 <_ZN18NCursesApplicationclEv+0x54>
 470:	blr	x3
 474:	mov	w21, w0
 478:	cmp	w0, #0x0
 47c:	b.le	48c <_ZN18NCursesApplicationclEv+0x14c>
 480:	adrp	x1, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 484:	ldr	x1, [x1]
 488:	bl	0 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>
 48c:	ldr	x2, [x19]
 490:	b	378 <_ZN18NCursesApplicationclEv+0x38>
 494:	mov	x0, x19
 498:	blr	x1
 49c:	b	3e8 <_ZN18NCursesApplicationclEv+0xa8>
 4a0:	mov	x1, #0x18                  	// #24
 4a4:	mov	x19, x0
 4a8:	mov	x0, x23
 4ac:	bl	0 <_ZdlPvm>
 4b0:	mov	x0, x19
 4b4:	bl	0 <_Unwind_Resume>
 4b8:	mov	x1, #0x30                  	// #48
 4bc:	mov	x19, x0
 4c0:	mov	x0, x20
 4c4:	bl	0 <_ZdlPvm>
 4c8:	mov	x0, x19
 4cc:	bl	0 <_Unwind_Resume>

00000000000004d0 <_ZN18NCursesApplicationC1Eb>:
 4d0:	adrp	x3, 18 <_ZN18NCursesApplication4initEb>
 4d4:	adrp	x2, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 4d8:	strb	w1, [x0, #8]
 4dc:	ldr	x3, [x3]
 4e0:	str	xzr, [x0, #16]
 4e4:	ldr	x2, [x2]
 4e8:	ldr	x4, [x3]
 4ec:	add	x2, x2, #0x10
 4f0:	str	x2, [x0]
 4f4:	cbnz	x4, 500 <_ZN18NCursesApplicationC1Eb+0x30>
 4f8:	str	x0, [x3]
 4fc:	ret
 500:	stp	x29, x30, [sp, #-32]!
 504:	mov	x0, #0x18                  	// #24
 508:	mov	x29, sp
 50c:	str	x19, [sp, #16]
 510:	adrp	x19, 0 <_ZSt4cerr>
 514:	bl	0 <_Znwm>
 518:	bl	0 <endwin>
 51c:	ldr	x19, [x19]
 520:	adrp	x1, 0 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 524:	add	x1, x1, #0x0
 528:	mov	x2, #0x19                  	// #25
 52c:	mov	x0, x19
 530:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
 534:	mov	x0, x19
 538:	bl	0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_>
 53c:	mov	w0, #0x1                   	// #1
 540:	bl	0 <exit>

Disassembly of section .text._ZNK18NCursesApplication9titlesizeEv:

0000000000000000 <_ZNK18NCursesApplication9titlesizeEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN18NCursesApplication5titleEv:

0000000000000000 <_ZN18NCursesApplication5titleEv>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication7useSLKsEv:

0000000000000000 <_ZNK18NCursesApplication7useSLKsEv>:
   0:	mov	w0, #0xffffffff            	// #-1
   4:	ret

Disassembly of section .text._ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set:

0000000000000000 <_ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set>:
   0:	ret

Disassembly of section .text._ZN18NCursesApplication10handleArgsEiPPc:

0000000000000000 <_ZN18NCursesApplication10handleArgsEiPPc>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication11foregroundsEv:

0000000000000000 <_ZNK18NCursesApplication11foregroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	mov	w2, #0x100                 	// #256
   8:	mov	w1, #0x200000              	// #2097152
   c:	cmp	w0, #0x0
  10:	csel	w0, w2, w1, ne  // ne = any
  14:	ret

Disassembly of section .text._ZNK18NCursesApplication11backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication11backgroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #9
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication9inactivesEv:

0000000000000000 <_ZNK18NCursesApplication9inactivesEv>:
   0:	ldrb	w0, [x0, #8]
   4:	mov	w2, #0x300                 	// #768
   8:	movk	w2, #0x10, lsl #16
   c:	mov	w1, #0x100000              	// #1048576
  10:	cmp	w0, #0x0
  14:	csel	w0, w2, w1, ne  // ne = any
  18:	ret

Disassembly of section .text._ZNK18NCursesApplication6labelsEv:

0000000000000000 <_ZNK18NCursesApplication6labelsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #10
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication18dialog_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18dialog_backgroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	cmp	w0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	lsl	w0, w0, #10
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication18window_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18window_backgroundsEv>:
   0:	ldrb	w0, [x0, #8]
   4:	mov	w1, #0x500                 	// #1280
   8:	cmp	w0, #0x0
   c:	csel	w0, w1, wzr, ne  // ne = any
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication13screen_titlesEv:

0000000000000000 <_ZNK18NCursesApplication13screen_titlesEv>:
   0:	ldrb	w0, [x0, #8]
   4:	mov	w2, #0x600                 	// #1536
   8:	mov	w1, #0x200000              	// #2097152
   c:	cmp	w0, #0x0
  10:	csel	w0, w2, w1, ne  // ne = any
  14:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesapp.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesapp.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	mov	x1, x19
  20:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  24:	ldr	x19, [sp, #16]
  28:	adrp	x2, 0 <__dso_handle>
  2c:	ldp	x29, x30, [sp], #32
  30:	add	x2, x2, #0x0
  34:	ldr	x0, [x0]
  38:	b	0 <__cxa_atexit>

cursesmain.o:     file format elf64-littleaarch64


Disassembly of section .text.startup:

0000000000000000 <main>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	w20, w0
  10:	mov	w0, #0x6                   	// #6
  14:	str	x21, [sp, #32]
  18:	mov	x21, x1
  1c:	adrp	x1, 0 <main>
  20:	add	x1, x1, #0x0
  24:	bl	0 <setlocale>
  28:	adrp	x3, 0 <_ZN18NCursesApplication6theAppE>
  2c:	ldr	x3, [x3]
  30:	ldr	x19, [x3]
  34:	cbz	x19, 78 <main+0x78>
  38:	ldr	x3, [x19]
  3c:	mov	x2, x21
  40:	mov	w1, w20
  44:	mov	x0, x19
  48:	ldr	x3, [x3, #64]
  4c:	blr	x3
  50:	bl	0 <endwin>
  54:	mov	x0, x19
  58:	bl	0 <_ZN18NCursesApplicationclEv>
  5c:	mov	w19, w0
  60:	bl	0 <endwin>
  64:	mov	w0, w19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldr	x21, [sp, #32]
  70:	ldp	x29, x30, [sp], #48
  74:	ret
  78:	mov	w19, #0x1                   	// #1
  7c:	b	64 <main+0x64>

0000000000000080 <_GLOBAL__sub_I_cursesmain.cc>:
  80:	stp	x29, x30, [sp, #-32]!
  84:	mov	x29, sp
  88:	str	x19, [sp, #16]
  8c:	adrp	x19, 0 <main>
  90:	add	x19, x19, #0x0
  94:	mov	x0, x19
  98:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  9c:	mov	x1, x19
  a0:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  a4:	ldr	x19, [sp, #16]
  a8:	adrp	x2, 0 <__dso_handle>
  ac:	ldp	x29, x30, [sp], #32
  b0:	add	x2, x2, #0x0
  b4:	ldr	x0, [x0]
  b8:	b	0 <__cxa_atexit>
