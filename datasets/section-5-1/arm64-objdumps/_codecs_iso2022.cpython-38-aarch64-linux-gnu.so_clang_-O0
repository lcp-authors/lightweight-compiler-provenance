
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_iso2022.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001918 <.init>:
    1918:	stp	x29, x30, [sp, #-16]!
    191c:	mov	x29, sp
    1920:	bl	1a80 <PyCapsule_GetPointer@plt+0x10>
    1924:	ldp	x29, x30, [sp], #16
    1928:	ret

Disassembly of section .plt:

0000000000001930 <PyObject_GetAttrString@plt-0x20>:
    1930:	stp	x16, x30, [sp, #-16]!
    1934:	adrp	x16, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    1938:	ldr	x17, [x16, #4088]
    193c:	add	x16, x16, #0xff8
    1940:	br	x17
    1944:	nop
    1948:	nop
    194c:	nop

0000000000001950 <PyObject_GetAttrString@plt>:
    1950:	adrp	x16, 18000 <PyObject_GetAttrString>
    1954:	ldr	x17, [x16]
    1958:	add	x16, x16, #0x0
    195c:	br	x17

0000000000001960 <__cxa_finalize@plt>:
    1960:	adrp	x16, 18000 <PyObject_GetAttrString>
    1964:	ldr	x17, [x16, #8]
    1968:	add	x16, x16, #0x8
    196c:	br	x17

0000000000001970 <_Py_Dealloc@plt>:
    1970:	adrp	x16, 18000 <PyObject_GetAttrString>
    1974:	ldr	x17, [x16, #16]
    1978:	add	x16, x16, #0x10
    197c:	br	x17

0000000000001980 <PyErr_SetString@plt>:
    1980:	adrp	x16, 18000 <PyObject_GetAttrString>
    1984:	ldr	x17, [x16, #24]
    1988:	add	x16, x16, #0x18
    198c:	br	x17

0000000000001990 <memset@plt>:
    1990:	adrp	x16, 18000 <PyObject_GetAttrString>
    1994:	ldr	x17, [x16, #32]
    1998:	add	x16, x16, #0x20
    199c:	br	x17

00000000000019a0 <PyCapsule_IsValid@plt>:
    19a0:	adrp	x16, 18000 <PyObject_GetAttrString>
    19a4:	ldr	x17, [x16, #40]
    19a8:	add	x16, x16, #0x28
    19ac:	br	x17

00000000000019b0 <__gmon_start__@plt>:
    19b0:	adrp	x16, 18000 <PyObject_GetAttrString>
    19b4:	ldr	x17, [x16, #48]
    19b8:	add	x16, x16, #0x30
    19bc:	br	x17

00000000000019c0 <PyModule_Create2@plt>:
    19c0:	adrp	x16, 18000 <PyObject_GetAttrString>
    19c4:	ldr	x17, [x16, #56]
    19c8:	add	x16, x16, #0x38
    19cc:	br	x17

00000000000019d0 <PyImport_ImportModule@plt>:
    19d0:	adrp	x16, 18000 <PyObject_GetAttrString>
    19d4:	ldr	x17, [x16, #64]
    19d8:	add	x16, x16, #0x40
    19dc:	br	x17

00000000000019e0 <PyImport_ImportModuleNoBlock@plt>:
    19e0:	adrp	x16, 18000 <PyObject_GetAttrString>
    19e4:	ldr	x17, [x16, #72]
    19e8:	add	x16, x16, #0x48
    19ec:	br	x17

00000000000019f0 <PyObject_CallFunctionObjArgs@plt>:
    19f0:	adrp	x16, 18000 <PyObject_GetAttrString>
    19f4:	ldr	x17, [x16, #80]
    19f8:	add	x16, x16, #0x50
    19fc:	br	x17

0000000000001a00 <strcmp@plt>:
    1a00:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a04:	ldr	x17, [x16, #88]
    1a08:	add	x16, x16, #0x58
    1a0c:	br	x17

0000000000001a10 <_PyUnicodeWriter_PrepareInternal@plt>:
    1a10:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a14:	ldr	x17, [x16, #96]
    1a18:	add	x16, x16, #0x60
    1a1c:	br	x17

0000000000001a20 <_PyUnicodeWriter_WriteChar@plt>:
    1a20:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a24:	ldr	x17, [x16, #104]
    1a28:	add	x16, x16, #0x68
    1a2c:	br	x17

0000000000001a30 <PyUnicode_AsUTF8@plt>:
    1a30:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a34:	ldr	x17, [x16, #112]
    1a38:	add	x16, x16, #0x70
    1a3c:	br	x17

0000000000001a40 <strcpy@plt>:
    1a40:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a44:	ldr	x17, [x16, #120]
    1a48:	add	x16, x16, #0x78
    1a4c:	br	x17

0000000000001a50 <PyModule_AddObject@plt>:
    1a50:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a54:	ldr	x17, [x16, #128]
    1a58:	add	x16, x16, #0x80
    1a5c:	br	x17

0000000000001a60 <PyCapsule_New@plt>:
    1a60:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a64:	ldr	x17, [x16, #136]
    1a68:	add	x16, x16, #0x88
    1a6c:	br	x17

0000000000001a70 <PyCapsule_GetPointer@plt>:
    1a70:	adrp	x16, 18000 <PyObject_GetAttrString>
    1a74:	ldr	x17, [x16, #144]
    1a78:	add	x16, x16, #0x90
    1a7c:	br	x17

Disassembly of section .text:

0000000000001a80 <PyInit__codecs_iso2022@@Base-0xd4>:
    1a80:	adrp	x0, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    1a84:	ldr	x0, [x0, #4048]
    1a88:	cbz	x0, 1a90 <PyCapsule_GetPointer@plt+0x20>
    1a8c:	b	19b0 <__gmon_start__@plt>
    1a90:	ret
    1a94:	nop
    1a98:	adrp	x0, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1a9c:	add	x0, x0, #0x158
    1aa0:	adrp	x1, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1aa4:	add	x1, x1, #0x158
    1aa8:	cmp	x1, x0
    1aac:	b.eq	1ac4 <PyCapsule_GetPointer@plt+0x54>  // b.none
    1ab0:	adrp	x1, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    1ab4:	ldr	x1, [x1, #4016]
    1ab8:	cbz	x1, 1ac4 <PyCapsule_GetPointer@plt+0x54>
    1abc:	mov	x16, x1
    1ac0:	br	x16
    1ac4:	ret
    1ac8:	adrp	x0, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1acc:	add	x0, x0, #0x158
    1ad0:	adrp	x1, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1ad4:	add	x1, x1, #0x158
    1ad8:	sub	x1, x1, x0
    1adc:	lsr	x2, x1, #63
    1ae0:	add	x1, x2, x1, asr #3
    1ae4:	cmp	xzr, x1, asr #1
    1ae8:	asr	x1, x1, #1
    1aec:	b.eq	1b04 <PyCapsule_GetPointer@plt+0x94>  // b.none
    1af0:	adrp	x2, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    1af4:	ldr	x2, [x2, #4056]
    1af8:	cbz	x2, 1b04 <PyCapsule_GetPointer@plt+0x94>
    1afc:	mov	x16, x2
    1b00:	br	x16
    1b04:	ret
    1b08:	stp	x29, x30, [sp, #-32]!
    1b0c:	mov	x29, sp
    1b10:	str	x19, [sp, #16]
    1b14:	adrp	x19, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1b18:	ldrb	w0, [x19, #344]
    1b1c:	cbnz	w0, 1b44 <PyCapsule_GetPointer@plt+0xd4>
    1b20:	adrp	x0, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    1b24:	ldr	x0, [x0, #4024]
    1b28:	cbz	x0, 1b38 <PyCapsule_GetPointer@plt+0xc8>
    1b2c:	adrp	x0, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1b30:	ldr	x0, [x0, #152]
    1b34:	bl	1960 <__cxa_finalize@plt>
    1b38:	bl	1a98 <PyCapsule_GetPointer@plt+0x28>
    1b3c:	mov	w0, #0x1                   	// #1
    1b40:	strb	w0, [x19, #344]
    1b44:	ldr	x19, [sp, #16]
    1b48:	ldp	x29, x30, [sp], #32
    1b4c:	ret
    1b50:	b	1ac8 <PyCapsule_GetPointer@plt+0x58>

0000000000001b54 <PyInit__codecs_iso2022@@Base>:
    1b54:	sub	sp, sp, #0x20
    1b58:	stp	x29, x30, [sp, #16]
    1b5c:	add	x29, sp, #0x10
    1b60:	adrp	x0, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1b64:	add	x0, x0, #0xa0
    1b68:	mov	w1, #0x3f5                 	// #1013
    1b6c:	bl	19c0 <PyModule_Create2@plt>
    1b70:	str	x0, [sp, #8]
    1b74:	ldr	x8, [sp, #8]
    1b78:	cbz	x8, 1b84 <PyInit__codecs_iso2022@@Base+0x30>
    1b7c:	ldr	x0, [sp, #8]
    1b80:	bl	1b94 <PyInit__codecs_iso2022@@Base+0x40>
    1b84:	ldr	x0, [sp, #8]
    1b88:	ldp	x29, x30, [sp, #16]
    1b8c:	add	sp, sp, #0x20
    1b90:	ret
    1b94:	sub	sp, sp, #0x160
    1b98:	stp	x29, x30, [sp, #320]
    1b9c:	str	x28, [sp, #336]
    1ba0:	add	x29, sp, #0x140
    1ba4:	sub	x8, x29, #0x18
    1ba8:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1bac:	add	x9, x9, #0x150
    1bb0:	str	x0, [x8, #8]
    1bb4:	ldr	x9, [x9]
    1bb8:	str	x9, [x8]
    1bbc:	str	x8, [sp, #24]
    1bc0:	ldr	x8, [sp, #24]
    1bc4:	ldr	x9, [x8]
    1bc8:	ldr	x9, [x9]
    1bcc:	ldrb	w10, [x9]
    1bd0:	cbz	w10, 1ca4 <PyInit__codecs_iso2022@@Base+0x150>
    1bd4:	add	x8, sp, #0x28
    1bd8:	mov	x0, x8
    1bdc:	mov	w9, wzr
    1be0:	mov	w1, w9
    1be4:	mov	x2, #0x100                 	// #256
    1be8:	str	x8, [sp, #16]
    1bec:	bl	1990 <memset@plt>
    1bf0:	mov	w9, #0x5f                  	// #95
    1bf4:	strb	w9, [sp, #40]
    1bf8:	ldr	x8, [sp, #16]
    1bfc:	strb	w9, [x8, #1]
    1c00:	mov	w10, #0x6d                  	// #109
    1c04:	strb	w10, [x8, #2]
    1c08:	mov	w10, #0x61                  	// #97
    1c0c:	strb	w10, [x8, #3]
    1c10:	mov	w10, #0x70                  	// #112
    1c14:	strb	w10, [x8, #4]
    1c18:	strb	w9, [x8, #5]
    1c1c:	add	x0, x8, #0x6
    1c20:	ldr	x11, [sp, #24]
    1c24:	ldr	x12, [x11]
    1c28:	ldr	x1, [x12]
    1c2c:	bl	1a40 <strcpy@plt>
    1c30:	ldr	x8, [sp, #24]
    1c34:	ldr	x11, [x8, #8]
    1c38:	ldr	x12, [x8]
    1c3c:	mov	x0, x12
    1c40:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1c44:	add	x1, x1, #0x561
    1c48:	mov	x12, xzr
    1c4c:	mov	x2, x12
    1c50:	str	x11, [sp, #8]
    1c54:	bl	1a60 <PyCapsule_New@plt>
    1c58:	ldr	x8, [sp, #8]
    1c5c:	str	x0, [sp]
    1c60:	mov	x0, x8
    1c64:	ldr	x1, [sp, #16]
    1c68:	ldr	x2, [sp]
    1c6c:	bl	1a50 <PyModule_AddObject@plt>
    1c70:	str	w0, [sp, #36]
    1c74:	ldr	w9, [sp, #36]
    1c78:	mov	w10, #0xffffffff            	// #-1
    1c7c:	cmp	w9, w10
    1c80:	b.ne	1c90 <PyInit__codecs_iso2022@@Base+0x13c>  // b.any
    1c84:	mov	w8, #0xffffffff            	// #-1
    1c88:	stur	w8, [x29, #-4]
    1c8c:	b	1ca8 <PyInit__codecs_iso2022@@Base+0x154>
    1c90:	ldr	x8, [sp, #24]
    1c94:	ldr	x9, [x8]
    1c98:	add	x9, x9, #0x18
    1c9c:	str	x9, [x8]
    1ca0:	b	1bc0 <PyInit__codecs_iso2022@@Base+0x6c>
    1ca4:	stur	wzr, [x29, #-4]
    1ca8:	ldur	w0, [x29, #-4]
    1cac:	ldr	x28, [sp, #336]
    1cb0:	ldp	x29, x30, [sp, #320]
    1cb4:	add	sp, sp, #0x160
    1cb8:	ret
    1cbc:	sub	sp, sp, #0x50
    1cc0:	stp	x29, x30, [sp, #64]
    1cc4:	add	x29, sp, #0x40
    1cc8:	stur	x0, [x29, #-16]
    1ccc:	stur	x1, [x29, #-24]
    1cd0:	ldur	x8, [x29, #-24]
    1cd4:	ldr	x8, [x8, #8]
    1cd8:	ldr	x8, [x8, #168]
    1cdc:	and	x8, x8, #0x10000000
    1ce0:	cbnz	x8, 1d08 <PyInit__codecs_iso2022@@Base+0x1b4>
    1ce4:	adrp	x8, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    1ce8:	ldr	x8, [x8, #4040]
    1cec:	ldr	x0, [x8]
    1cf0:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1cf4:	add	x1, x1, #0x525
    1cf8:	bl	1980 <PyErr_SetString@plt>
    1cfc:	mov	x8, xzr
    1d00:	stur	x8, [x29, #-8]
    1d04:	b	1e24 <PyInit__codecs_iso2022@@Base+0x2d0>
    1d08:	ldur	x0, [x29, #-24]
    1d0c:	bl	1a30 <PyUnicode_AsUTF8@plt>
    1d10:	str	x0, [sp]
    1d14:	ldr	x8, [sp]
    1d18:	cbnz	x8, 1d28 <PyInit__codecs_iso2022@@Base+0x1d4>
    1d1c:	mov	x8, xzr
    1d20:	stur	x8, [x29, #-8]
    1d24:	b	1e24 <PyInit__codecs_iso2022@@Base+0x2d0>
    1d28:	bl	1e34 <PyInit__codecs_iso2022@@Base+0x2e0>
    1d2c:	str	x0, [sp, #16]
    1d30:	ldr	x8, [sp, #16]
    1d34:	cbnz	x8, 1d44 <PyInit__codecs_iso2022@@Base+0x1f0>
    1d38:	mov	x8, xzr
    1d3c:	stur	x8, [x29, #-8]
    1d40:	b	1e24 <PyInit__codecs_iso2022@@Base+0x2d0>
    1d44:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1d48:	add	x8, x8, #0x148
    1d4c:	ldr	x8, [x8]
    1d50:	str	x8, [sp, #8]
    1d54:	ldr	x8, [sp, #8]
    1d58:	ldr	x8, [x8]
    1d5c:	ldrb	w9, [x8]
    1d60:	cbz	w9, 1d8c <PyInit__codecs_iso2022@@Base+0x238>
    1d64:	ldr	x8, [sp, #8]
    1d68:	ldr	x0, [x8]
    1d6c:	ldr	x1, [sp]
    1d70:	bl	1a00 <strcmp@plt>
    1d74:	cbnz	w0, 1d7c <PyInit__codecs_iso2022@@Base+0x228>
    1d78:	b	1d8c <PyInit__codecs_iso2022@@Base+0x238>
    1d7c:	ldr	x8, [sp, #8]
    1d80:	add	x8, x8, #0x48
    1d84:	str	x8, [sp, #8]
    1d88:	b	1d54 <PyInit__codecs_iso2022@@Base+0x200>
    1d8c:	ldr	x8, [sp, #8]
    1d90:	ldr	x8, [x8]
    1d94:	ldrb	w9, [x8]
    1d98:	cbnz	w9, 1dc0 <PyInit__codecs_iso2022@@Base+0x26c>
    1d9c:	adrp	x8, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    1da0:	ldr	x8, [x8, #4064]
    1da4:	ldr	x0, [x8]
    1da8:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1dac:	add	x1, x1, #0x545
    1db0:	bl	1980 <PyErr_SetString@plt>
    1db4:	mov	x8, xzr
    1db8:	stur	x8, [x29, #-8]
    1dbc:	b	1e24 <PyInit__codecs_iso2022@@Base+0x2d0>
    1dc0:	ldr	x0, [sp, #8]
    1dc4:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1dc8:	add	x1, x1, #0x561
    1dcc:	mov	x8, xzr
    1dd0:	mov	x2, x8
    1dd4:	bl	1a60 <PyCapsule_New@plt>
    1dd8:	str	x0, [sp, #32]
    1ddc:	ldr	x8, [sp, #32]
    1de0:	cbnz	x8, 1df0 <PyInit__codecs_iso2022@@Base+0x29c>
    1de4:	mov	x8, xzr
    1de8:	stur	x8, [x29, #-8]
    1dec:	b	1e24 <PyInit__codecs_iso2022@@Base+0x2d0>
    1df0:	ldr	x0, [sp, #16]
    1df4:	ldr	x1, [sp, #32]
    1df8:	mov	x8, xzr
    1dfc:	mov	x2, x8
    1e00:	bl	19f0 <PyObject_CallFunctionObjArgs@plt>
    1e04:	str	x0, [sp, #24]
    1e08:	ldr	x2, [sp, #32]
    1e0c:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1e10:	add	x0, x0, #0x578
    1e14:	mov	w1, #0x127                 	// #295
    1e18:	bl	1ec0 <PyInit__codecs_iso2022@@Base+0x36c>
    1e1c:	ldr	x8, [sp, #24]
    1e20:	stur	x8, [x29, #-8]
    1e24:	ldur	x0, [x29, #-8]
    1e28:	ldp	x29, x30, [sp, #64]
    1e2c:	add	sp, sp, #0x50
    1e30:	ret
    1e34:	sub	sp, sp, #0x30
    1e38:	stp	x29, x30, [sp, #32]
    1e3c:	add	x29, sp, #0x20
    1e40:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    1e44:	add	x8, x8, #0x160
    1e48:	ldr	x9, [x8]
    1e4c:	str	x8, [sp, #8]
    1e50:	cbnz	x9, 1ea4 <PyInit__codecs_iso2022@@Base+0x350>
    1e54:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1e58:	add	x0, x0, #0x5ac
    1e5c:	bl	19e0 <PyImport_ImportModuleNoBlock@plt>
    1e60:	str	x0, [sp, #16]
    1e64:	ldr	x8, [sp, #16]
    1e68:	cbnz	x8, 1e78 <PyInit__codecs_iso2022@@Base+0x324>
    1e6c:	mov	x8, xzr
    1e70:	stur	x8, [x29, #-8]
    1e74:	b	1eb0 <PyInit__codecs_iso2022@@Base+0x35c>
    1e78:	ldr	x0, [sp, #16]
    1e7c:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1e80:	add	x1, x1, #0x5bc
    1e84:	bl	1950 <PyObject_GetAttrString@plt>
    1e88:	ldr	x8, [sp, #8]
    1e8c:	str	x0, [x8]
    1e90:	ldr	x2, [sp, #16]
    1e94:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    1e98:	add	x0, x0, #0x578
    1e9c:	mov	w1, #0xff                  	// #255
    1ea0:	bl	1ec0 <PyInit__codecs_iso2022@@Base+0x36c>
    1ea4:	ldr	x8, [sp, #8]
    1ea8:	ldr	x9, [x8]
    1eac:	stur	x9, [x29, #-8]
    1eb0:	ldur	x0, [x29, #-8]
    1eb4:	ldp	x29, x30, [sp, #32]
    1eb8:	add	sp, sp, #0x30
    1ebc:	ret
    1ec0:	sub	sp, sp, #0x30
    1ec4:	stp	x29, x30, [sp, #32]
    1ec8:	add	x29, sp, #0x20
    1ecc:	stur	x0, [x29, #-8]
    1ed0:	stur	w1, [x29, #-12]
    1ed4:	str	x2, [sp, #8]
    1ed8:	ldr	x8, [sp, #8]
    1edc:	ldr	x9, [x8]
    1ee0:	subs	x9, x9, #0x1
    1ee4:	str	x9, [x8]
    1ee8:	cbz	x9, 1ef0 <PyInit__codecs_iso2022@@Base+0x39c>
    1eec:	b	1ef8 <PyInit__codecs_iso2022@@Base+0x3a4>
    1ef0:	ldr	x0, [sp, #8]
    1ef4:	bl	1970 <_Py_Dealloc@plt>
    1ef8:	ldp	x29, x30, [sp, #32]
    1efc:	add	sp, sp, #0x30
    1f00:	ret
    1f04:	sub	sp, sp, #0x30
    1f08:	stp	x29, x30, [sp, #32]
    1f0c:	add	x29, sp, #0x20
    1f10:	str	x0, [sp, #16]
    1f14:	ldr	x8, [sp, #16]
    1f18:	ldr	x8, [x8, #8]
    1f1c:	str	x8, [sp, #8]
    1f20:	ldr	x8, [sp, #8]
    1f24:	ldrb	w9, [x8]
    1f28:	cbz	w9, 1f64 <PyInit__codecs_iso2022@@Base+0x410>
    1f2c:	ldr	x8, [sp, #8]
    1f30:	ldr	x8, [x8, #8]
    1f34:	cbz	x8, 1f54 <PyInit__codecs_iso2022@@Base+0x400>
    1f38:	ldr	x8, [sp, #8]
    1f3c:	ldr	x8, [x8, #8]
    1f40:	blr	x8
    1f44:	cbz	w0, 1f54 <PyInit__codecs_iso2022@@Base+0x400>
    1f48:	mov	w8, #0xffffffff            	// #-1
    1f4c:	stur	w8, [x29, #-4]
    1f50:	b	1f68 <PyInit__codecs_iso2022@@Base+0x414>
    1f54:	ldr	x8, [sp, #8]
    1f58:	add	x8, x8, #0x20
    1f5c:	str	x8, [sp, #8]
    1f60:	b	1f20 <PyInit__codecs_iso2022@@Base+0x3cc>
    1f64:	stur	wzr, [x29, #-4]
    1f68:	ldur	w0, [x29, #-4]
    1f6c:	ldp	x29, x30, [sp, #32]
    1f70:	add	sp, sp, #0x30
    1f74:	ret
    1f78:	sub	sp, sp, #0x90
    1f7c:	stp	x29, x30, [sp, #128]
    1f80:	add	x29, sp, #0x80
    1f84:	ldr	w8, [x29, #16]
    1f88:	stur	x0, [x29, #-16]
    1f8c:	stur	x1, [x29, #-24]
    1f90:	stur	w2, [x29, #-28]
    1f94:	stur	x3, [x29, #-40]
    1f98:	stur	x4, [x29, #-48]
    1f9c:	stur	x5, [x29, #-56]
    1fa0:	str	x6, [sp, #64]
    1fa4:	str	x7, [sp, #56]
    1fa8:	str	w8, [sp, #52]
    1fac:	ldur	x8, [x29, #-48]
    1fb0:	ldr	x8, [x8]
    1fb4:	ldur	x9, [x29, #-56]
    1fb8:	cmp	x8, x9
    1fbc:	b.ge	2748 <PyInit__codecs_iso2022@@Base+0xbf4>  // b.tcont
    1fc0:	ldur	w8, [x29, #-28]
    1fc4:	cmp	w8, #0x1
    1fc8:	b.ne	1fe4 <PyInit__codecs_iso2022@@Base+0x490>  // b.any
    1fcc:	ldur	x8, [x29, #-40]
    1fd0:	ldur	x9, [x29, #-48]
    1fd4:	ldr	x9, [x9]
    1fd8:	ldrb	w10, [x8, x9]
    1fdc:	str	w10, [sp, #12]
    1fe0:	b	2024 <PyInit__codecs_iso2022@@Base+0x4d0>
    1fe4:	ldur	w8, [x29, #-28]
    1fe8:	cmp	w8, #0x2
    1fec:	b.ne	2008 <PyInit__codecs_iso2022@@Base+0x4b4>  // b.any
    1ff0:	ldur	x8, [x29, #-40]
    1ff4:	ldur	x9, [x29, #-48]
    1ff8:	ldr	x9, [x9]
    1ffc:	ldrh	w10, [x8, x9, lsl #1]
    2000:	str	w10, [sp, #8]
    2004:	b	201c <PyInit__codecs_iso2022@@Base+0x4c8>
    2008:	ldur	x8, [x29, #-40]
    200c:	ldur	x9, [x29, #-48]
    2010:	ldr	x9, [x9]
    2014:	ldr	w10, [x8, x9, lsl #2]
    2018:	str	w10, [sp, #8]
    201c:	ldr	w8, [sp, #8]
    2020:	str	w8, [sp, #12]
    2024:	ldr	w8, [sp, #12]
    2028:	str	w8, [sp, #32]
    202c:	ldr	w8, [sp, #32]
    2030:	cmp	w8, #0x80
    2034:	b.cs	2174 <PyInit__codecs_iso2022@@Base+0x620>  // b.hs, b.nlast
    2038:	ldur	x8, [x29, #-16]
    203c:	ldrb	w9, [x8]
    2040:	cmp	w9, #0x42
    2044:	b.eq	20b8 <PyInit__codecs_iso2022@@Base+0x564>  // b.none
    2048:	ldr	x8, [sp, #56]
    204c:	cmp	x8, #0x3
    2050:	b.ge	2060 <PyInit__codecs_iso2022@@Base+0x50c>  // b.tcont
    2054:	mov	x8, #0xffffffffffffffff    	// #-1
    2058:	stur	x8, [x29, #-8]
    205c:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    2060:	ldr	x8, [sp, #64]
    2064:	ldr	x8, [x8]
    2068:	mov	w9, #0x1b                  	// #27
    206c:	strb	w9, [x8]
    2070:	ldr	x8, [sp, #64]
    2074:	ldr	x8, [x8]
    2078:	mov	w9, #0x28                  	// #40
    207c:	strb	w9, [x8, #1]
    2080:	ldr	x8, [sp, #64]
    2084:	ldr	x8, [x8]
    2088:	mov	w9, #0x42                  	// #66
    208c:	strb	w9, [x8, #2]
    2090:	ldur	x8, [x29, #-16]
    2094:	mov	w9, #0x42                  	// #66
    2098:	strb	w9, [x8]
    209c:	ldr	x8, [sp, #64]
    20a0:	ldr	x9, [x8]
    20a4:	add	x9, x9, #0x3
    20a8:	str	x9, [x8]
    20ac:	ldr	x8, [sp, #56]
    20b0:	subs	x8, x8, #0x3
    20b4:	str	x8, [sp, #56]
    20b8:	ldur	x8, [x29, #-16]
    20bc:	ldrb	w9, [x8, #4]
    20c0:	and	w9, w9, #0x1
    20c4:	cbz	w9, 211c <PyInit__codecs_iso2022@@Base+0x5c8>
    20c8:	ldr	x8, [sp, #56]
    20cc:	cmp	x8, #0x1
    20d0:	b.ge	20e0 <PyInit__codecs_iso2022@@Base+0x58c>  // b.tcont
    20d4:	mov	x8, #0xffffffffffffffff    	// #-1
    20d8:	stur	x8, [x29, #-8]
    20dc:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    20e0:	ldr	x8, [sp, #64]
    20e4:	ldr	x8, [x8]
    20e8:	mov	w9, #0xf                   	// #15
    20ec:	strb	w9, [x8]
    20f0:	ldur	x8, [x29, #-16]
    20f4:	ldrb	w9, [x8, #4]
    20f8:	and	w9, w9, #0xfffffffe
    20fc:	strb	w9, [x8, #4]
    2100:	ldr	x8, [sp, #64]
    2104:	ldr	x9, [x8]
    2108:	add	x9, x9, #0x1
    210c:	str	x9, [x8]
    2110:	ldr	x8, [sp, #56]
    2114:	subs	x8, x8, #0x1
    2118:	str	x8, [sp, #56]
    211c:	ldr	x8, [sp, #56]
    2120:	cmp	x8, #0x1
    2124:	b.ge	2134 <PyInit__codecs_iso2022@@Base+0x5e0>  // b.tcont
    2128:	mov	x8, #0xffffffffffffffff    	// #-1
    212c:	stur	x8, [x29, #-8]
    2130:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    2134:	ldr	w8, [sp, #32]
    2138:	ldr	x9, [sp, #64]
    213c:	ldr	x9, [x9]
    2140:	strb	w8, [x9]
    2144:	ldur	x8, [x29, #-48]
    2148:	ldr	x9, [x8]
    214c:	add	x9, x9, #0x1
    2150:	str	x9, [x8]
    2154:	ldr	x8, [sp, #64]
    2158:	ldr	x9, [x8]
    215c:	add	x9, x9, #0x1
    2160:	str	x9, [x8]
    2164:	ldr	x8, [sp, #56]
    2168:	subs	x8, x8, #0x1
    216c:	str	x8, [sp, #56]
    2170:	b	1fac <PyInit__codecs_iso2022@@Base+0x458>
    2174:	mov	x8, #0x1                   	// #1
    2178:	str	x8, [sp, #24]
    217c:	mov	w9, #0xffff                	// #65535
    2180:	strh	w9, [sp, #38]
    2184:	ldur	x8, [x29, #-24]
    2188:	ldr	x8, [x8, #8]
    218c:	str	x8, [sp, #40]
    2190:	ldr	x8, [sp, #40]
    2194:	ldrb	w9, [x8]
    2198:	cbz	w9, 226c <PyInit__codecs_iso2022@@Base+0x718>
    219c:	add	x1, sp, #0x10
    21a0:	mov	x8, #0x1                   	// #1
    21a4:	str	x8, [sp, #16]
    21a8:	ldr	x8, [sp, #40]
    21ac:	ldr	x8, [x8, #24]
    21b0:	add	x0, sp, #0x20
    21b4:	blr	x8
    21b8:	strh	w0, [sp, #38]
    21bc:	ldrh	w9, [sp, #38]
    21c0:	mov	w10, #0xfffe                	// #65534
    21c4:	cmp	w9, w10
    21c8:	b.ne	2248 <PyInit__codecs_iso2022@@Base+0x6f4>  // b.any
    21cc:	ldur	x8, [x29, #-56]
    21d0:	ldur	x9, [x29, #-48]
    21d4:	ldr	x9, [x9]
    21d8:	subs	x8, x8, x9
    21dc:	cmp	x8, #0x2
    21e0:	b.ge	2208 <PyInit__codecs_iso2022@@Base+0x6b4>  // b.tcont
    21e4:	ldr	w8, [sp, #52]
    21e8:	and	w8, w8, #0x1
    21ec:	cbnz	w8, 21fc <PyInit__codecs_iso2022@@Base+0x6a8>
    21f0:	mov	x8, #0xfffffffffffffffe    	// #-2
    21f4:	stur	x8, [x29, #-8]
    21f8:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    21fc:	mov	x8, #0xffffffffffffffff    	// #-1
    2200:	str	x8, [sp, #16]
    2204:	b	2210 <PyInit__codecs_iso2022@@Base+0x6bc>
    2208:	mov	x8, #0x2                   	// #2
    220c:	str	x8, [sp, #16]
    2210:	ldr	x8, [sp, #40]
    2214:	ldr	x8, [x8, #24]
    2218:	add	x0, sp, #0x20
    221c:	add	x1, sp, #0x10
    2220:	blr	x8
    2224:	strh	w0, [sp, #38]
    2228:	ldrh	w9, [sp, #38]
    222c:	mov	w10, #0xffff                	// #65535
    2230:	cmp	w9, w10
    2234:	b.eq	2244 <PyInit__codecs_iso2022@@Base+0x6f0>  // b.none
    2238:	ldr	x8, [sp, #16]
    223c:	str	x8, [sp, #24]
    2240:	b	226c <PyInit__codecs_iso2022@@Base+0x718>
    2244:	b	225c <PyInit__codecs_iso2022@@Base+0x708>
    2248:	ldrh	w8, [sp, #38]
    224c:	mov	w9, #0xffff                	// #65535
    2250:	cmp	w8, w9
    2254:	b.eq	225c <PyInit__codecs_iso2022@@Base+0x708>  // b.none
    2258:	b	226c <PyInit__codecs_iso2022@@Base+0x718>
    225c:	ldr	x8, [sp, #40]
    2260:	add	x8, x8, #0x20
    2264:	str	x8, [sp, #40]
    2268:	b	2190 <PyInit__codecs_iso2022@@Base+0x63c>
    226c:	ldr	x8, [sp, #40]
    2270:	ldrb	w9, [x8]
    2274:	cbnz	w9, 2284 <PyInit__codecs_iso2022@@Base+0x730>
    2278:	mov	x8, #0x1                   	// #1
    227c:	stur	x8, [x29, #-8]
    2280:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    2284:	ldr	x8, [sp, #40]
    2288:	ldrb	w9, [x8, #1]
    228c:	str	w9, [sp, #4]
    2290:	cbz	w9, 22a8 <PyInit__codecs_iso2022@@Base+0x754>
    2294:	b	2298 <PyInit__codecs_iso2022@@Base+0x744>
    2298:	ldr	w8, [sp, #4]
    229c:	cmp	w8, #0x1
    22a0:	b.eq	24d4 <PyInit__codecs_iso2022@@Base+0x980>  // b.none
    22a4:	b	2670 <PyInit__codecs_iso2022@@Base+0xb1c>
    22a8:	ldur	x8, [x29, #-16]
    22ac:	ldrb	w9, [x8, #4]
    22b0:	and	w9, w9, #0x1
    22b4:	cbz	w9, 230c <PyInit__codecs_iso2022@@Base+0x7b8>
    22b8:	ldr	x8, [sp, #56]
    22bc:	cmp	x8, #0x1
    22c0:	b.ge	22d0 <PyInit__codecs_iso2022@@Base+0x77c>  // b.tcont
    22c4:	mov	x8, #0xffffffffffffffff    	// #-1
    22c8:	stur	x8, [x29, #-8]
    22cc:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    22d0:	ldr	x8, [sp, #64]
    22d4:	ldr	x8, [x8]
    22d8:	mov	w9, #0xf                   	// #15
    22dc:	strb	w9, [x8]
    22e0:	ldur	x8, [x29, #-16]
    22e4:	ldrb	w9, [x8, #4]
    22e8:	and	w9, w9, #0xfffffffe
    22ec:	strb	w9, [x8, #4]
    22f0:	ldr	x8, [sp, #64]
    22f4:	ldr	x9, [x8]
    22f8:	add	x9, x9, #0x1
    22fc:	str	x9, [x8]
    2300:	ldr	x8, [sp, #56]
    2304:	subs	x8, x8, #0x1
    2308:	str	x8, [sp, #56]
    230c:	ldur	x8, [x29, #-16]
    2310:	ldrb	w9, [x8]
    2314:	ldr	x8, [sp, #40]
    2318:	ldrb	w10, [x8]
    231c:	cmp	w9, w10
    2320:	b.eq	24d0 <PyInit__codecs_iso2022@@Base+0x97c>  // b.none
    2324:	ldr	x8, [sp, #40]
    2328:	ldrb	w9, [x8, #2]
    232c:	cmp	w9, #0x1
    2330:	b.ne	23b4 <PyInit__codecs_iso2022@@Base+0x860>  // b.any
    2334:	ldr	x8, [sp, #56]
    2338:	cmp	x8, #0x3
    233c:	b.ge	234c <PyInit__codecs_iso2022@@Base+0x7f8>  // b.tcont
    2340:	mov	x8, #0xffffffffffffffff    	// #-1
    2344:	stur	x8, [x29, #-8]
    2348:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    234c:	ldr	x8, [sp, #64]
    2350:	ldr	x8, [x8]
    2354:	mov	w9, #0x1b                  	// #27
    2358:	strb	w9, [x8]
    235c:	ldr	x8, [sp, #64]
    2360:	ldr	x8, [x8]
    2364:	mov	w9, #0x28                  	// #40
    2368:	strb	w9, [x8, #1]
    236c:	ldr	x8, [sp, #40]
    2370:	ldrb	w9, [x8]
    2374:	and	w9, w9, #0x7f
    2378:	ldr	x8, [sp, #64]
    237c:	ldr	x8, [x8]
    2380:	strb	w9, [x8, #2]
    2384:	ldr	x8, [sp, #40]
    2388:	ldrb	w9, [x8]
    238c:	ldur	x8, [x29, #-16]
    2390:	strb	w9, [x8]
    2394:	ldr	x8, [sp, #64]
    2398:	ldr	x9, [x8]
    239c:	add	x9, x9, #0x3
    23a0:	str	x9, [x8]
    23a4:	ldr	x8, [sp, #56]
    23a8:	subs	x8, x8, #0x3
    23ac:	str	x8, [sp, #56]
    23b0:	b	24d0 <PyInit__codecs_iso2022@@Base+0x97c>
    23b4:	ldr	x8, [sp, #40]
    23b8:	ldrb	w9, [x8]
    23bc:	cmp	w9, #0xc2
    23c0:	b.ne	2444 <PyInit__codecs_iso2022@@Base+0x8f0>  // b.any
    23c4:	ldr	x8, [sp, #56]
    23c8:	cmp	x8, #0x3
    23cc:	b.ge	23dc <PyInit__codecs_iso2022@@Base+0x888>  // b.tcont
    23d0:	mov	x8, #0xffffffffffffffff    	// #-1
    23d4:	stur	x8, [x29, #-8]
    23d8:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    23dc:	ldr	x8, [sp, #64]
    23e0:	ldr	x8, [x8]
    23e4:	mov	w9, #0x1b                  	// #27
    23e8:	strb	w9, [x8]
    23ec:	ldr	x8, [sp, #64]
    23f0:	ldr	x8, [x8]
    23f4:	mov	w9, #0x24                  	// #36
    23f8:	strb	w9, [x8, #1]
    23fc:	ldr	x8, [sp, #40]
    2400:	ldrb	w9, [x8]
    2404:	and	w9, w9, #0x7f
    2408:	ldr	x8, [sp, #64]
    240c:	ldr	x8, [x8]
    2410:	strb	w9, [x8, #2]
    2414:	ldr	x8, [sp, #40]
    2418:	ldrb	w9, [x8]
    241c:	ldur	x8, [x29, #-16]
    2420:	strb	w9, [x8]
    2424:	ldr	x8, [sp, #64]
    2428:	ldr	x9, [x8]
    242c:	add	x9, x9, #0x3
    2430:	str	x9, [x8]
    2434:	ldr	x8, [sp, #56]
    2438:	subs	x8, x8, #0x3
    243c:	str	x8, [sp, #56]
    2440:	b	24d0 <PyInit__codecs_iso2022@@Base+0x97c>
    2444:	ldr	x8, [sp, #56]
    2448:	cmp	x8, #0x4
    244c:	b.ge	245c <PyInit__codecs_iso2022@@Base+0x908>  // b.tcont
    2450:	mov	x8, #0xffffffffffffffff    	// #-1
    2454:	stur	x8, [x29, #-8]
    2458:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    245c:	ldr	x8, [sp, #64]
    2460:	ldr	x8, [x8]
    2464:	mov	w9, #0x1b                  	// #27
    2468:	strb	w9, [x8]
    246c:	ldr	x8, [sp, #64]
    2470:	ldr	x8, [x8]
    2474:	mov	w9, #0x24                  	// #36
    2478:	strb	w9, [x8, #1]
    247c:	ldr	x8, [sp, #64]
    2480:	ldr	x8, [x8]
    2484:	mov	w9, #0x28                  	// #40
    2488:	strb	w9, [x8, #2]
    248c:	ldr	x8, [sp, #40]
    2490:	ldrb	w9, [x8]
    2494:	and	w9, w9, #0x7f
    2498:	ldr	x8, [sp, #64]
    249c:	ldr	x8, [x8]
    24a0:	strb	w9, [x8, #3]
    24a4:	ldr	x8, [sp, #40]
    24a8:	ldrb	w9, [x8]
    24ac:	ldur	x8, [x29, #-16]
    24b0:	strb	w9, [x8]
    24b4:	ldr	x8, [sp, #64]
    24b8:	ldr	x9, [x8]
    24bc:	add	x9, x9, #0x4
    24c0:	str	x9, [x8]
    24c4:	ldr	x8, [sp, #56]
    24c8:	subs	x8, x8, #0x4
    24cc:	str	x8, [sp, #56]
    24d0:	b	267c <PyInit__codecs_iso2022@@Base+0xb28>
    24d4:	ldur	x8, [x29, #-16]
    24d8:	ldrb	w9, [x8, #1]
    24dc:	ldr	x8, [sp, #40]
    24e0:	ldrb	w10, [x8]
    24e4:	cmp	w9, w10
    24e8:	b.eq	2608 <PyInit__codecs_iso2022@@Base+0xab4>  // b.none
    24ec:	ldr	x8, [sp, #40]
    24f0:	ldrb	w9, [x8, #2]
    24f4:	cmp	w9, #0x1
    24f8:	b.ne	257c <PyInit__codecs_iso2022@@Base+0xa28>  // b.any
    24fc:	ldr	x8, [sp, #56]
    2500:	cmp	x8, #0x3
    2504:	b.ge	2514 <PyInit__codecs_iso2022@@Base+0x9c0>  // b.tcont
    2508:	mov	x8, #0xffffffffffffffff    	// #-1
    250c:	stur	x8, [x29, #-8]
    2510:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    2514:	ldr	x8, [sp, #64]
    2518:	ldr	x8, [x8]
    251c:	mov	w9, #0x1b                  	// #27
    2520:	strb	w9, [x8]
    2524:	ldr	x8, [sp, #64]
    2528:	ldr	x8, [x8]
    252c:	mov	w9, #0x29                  	// #41
    2530:	strb	w9, [x8, #1]
    2534:	ldr	x8, [sp, #40]
    2538:	ldrb	w9, [x8]
    253c:	and	w9, w9, #0x7f
    2540:	ldr	x8, [sp, #64]
    2544:	ldr	x8, [x8]
    2548:	strb	w9, [x8, #2]
    254c:	ldr	x8, [sp, #40]
    2550:	ldrb	w9, [x8]
    2554:	ldur	x8, [x29, #-16]
    2558:	strb	w9, [x8, #1]
    255c:	ldr	x8, [sp, #64]
    2560:	ldr	x9, [x8]
    2564:	add	x9, x9, #0x3
    2568:	str	x9, [x8]
    256c:	ldr	x8, [sp, #56]
    2570:	subs	x8, x8, #0x3
    2574:	str	x8, [sp, #56]
    2578:	b	2608 <PyInit__codecs_iso2022@@Base+0xab4>
    257c:	ldr	x8, [sp, #56]
    2580:	cmp	x8, #0x4
    2584:	b.ge	2594 <PyInit__codecs_iso2022@@Base+0xa40>  // b.tcont
    2588:	mov	x8, #0xffffffffffffffff    	// #-1
    258c:	stur	x8, [x29, #-8]
    2590:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    2594:	ldr	x8, [sp, #64]
    2598:	ldr	x8, [x8]
    259c:	mov	w9, #0x1b                  	// #27
    25a0:	strb	w9, [x8]
    25a4:	ldr	x8, [sp, #64]
    25a8:	ldr	x8, [x8]
    25ac:	mov	w9, #0x24                  	// #36
    25b0:	strb	w9, [x8, #1]
    25b4:	ldr	x8, [sp, #64]
    25b8:	ldr	x8, [x8]
    25bc:	mov	w9, #0x29                  	// #41
    25c0:	strb	w9, [x8, #2]
    25c4:	ldr	x8, [sp, #40]
    25c8:	ldrb	w9, [x8]
    25cc:	and	w9, w9, #0x7f
    25d0:	ldr	x8, [sp, #64]
    25d4:	ldr	x8, [x8]
    25d8:	strb	w9, [x8, #3]
    25dc:	ldr	x8, [sp, #40]
    25e0:	ldrb	w9, [x8]
    25e4:	ldur	x8, [x29, #-16]
    25e8:	strb	w9, [x8, #1]
    25ec:	ldr	x8, [sp, #64]
    25f0:	ldr	x9, [x8]
    25f4:	add	x9, x9, #0x4
    25f8:	str	x9, [x8]
    25fc:	ldr	x8, [sp, #56]
    2600:	subs	x8, x8, #0x4
    2604:	str	x8, [sp, #56]
    2608:	ldur	x8, [x29, #-16]
    260c:	ldrb	w9, [x8, #4]
    2610:	and	w9, w9, #0x1
    2614:	cbnz	w9, 266c <PyInit__codecs_iso2022@@Base+0xb18>
    2618:	ldr	x8, [sp, #56]
    261c:	cmp	x8, #0x1
    2620:	b.ge	2630 <PyInit__codecs_iso2022@@Base+0xadc>  // b.tcont
    2624:	mov	x8, #0xffffffffffffffff    	// #-1
    2628:	stur	x8, [x29, #-8]
    262c:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    2630:	ldr	x8, [sp, #64]
    2634:	ldr	x8, [x8]
    2638:	mov	w9, #0xe                   	// #14
    263c:	strb	w9, [x8]
    2640:	ldur	x8, [x29, #-16]
    2644:	ldrb	w9, [x8, #4]
    2648:	orr	w9, w9, #0x1
    264c:	strb	w9, [x8, #4]
    2650:	ldr	x8, [sp, #64]
    2654:	ldr	x9, [x8]
    2658:	add	x9, x9, #0x1
    265c:	str	x9, [x8]
    2660:	ldr	x8, [sp, #56]
    2664:	subs	x8, x8, #0x1
    2668:	str	x8, [sp, #56]
    266c:	b	267c <PyInit__codecs_iso2022@@Base+0xb28>
    2670:	mov	x8, #0xfffffffffffffffd    	// #-3
    2674:	stur	x8, [x29, #-8]
    2678:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    267c:	ldr	x8, [sp, #40]
    2680:	ldrb	w9, [x8, #2]
    2684:	cmp	w9, #0x1
    2688:	b.ne	26d4 <PyInit__codecs_iso2022@@Base+0xb80>  // b.any
    268c:	ldr	x8, [sp, #56]
    2690:	cmp	x8, #0x1
    2694:	b.ge	26a4 <PyInit__codecs_iso2022@@Base+0xb50>  // b.tcont
    2698:	mov	x8, #0xffffffffffffffff    	// #-1
    269c:	stur	x8, [x29, #-8]
    26a0:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    26a4:	ldrh	w8, [sp, #38]
    26a8:	ldr	x9, [sp, #64]
    26ac:	ldr	x9, [x9]
    26b0:	strb	w8, [x9]
    26b4:	ldr	x8, [sp, #64]
    26b8:	ldr	x9, [x8]
    26bc:	add	x9, x9, #0x1
    26c0:	str	x9, [x8]
    26c4:	ldr	x8, [sp, #56]
    26c8:	subs	x8, x8, #0x1
    26cc:	str	x8, [sp, #56]
    26d0:	b	2730 <PyInit__codecs_iso2022@@Base+0xbdc>
    26d4:	ldr	x8, [sp, #56]
    26d8:	cmp	x8, #0x2
    26dc:	b.ge	26ec <PyInit__codecs_iso2022@@Base+0xb98>  // b.tcont
    26e0:	mov	x8, #0xffffffffffffffff    	// #-1
    26e4:	stur	x8, [x29, #-8]
    26e8:	b	274c <PyInit__codecs_iso2022@@Base+0xbf8>
    26ec:	ldrh	w8, [sp, #38]
    26f0:	asr	w8, w8, #8
    26f4:	ldr	x9, [sp, #64]
    26f8:	ldr	x9, [x9]
    26fc:	strb	w8, [x9]
    2700:	ldrh	w8, [sp, #38]
    2704:	and	w8, w8, #0xff
    2708:	ldr	x9, [sp, #64]
    270c:	ldr	x9, [x9]
    2710:	strb	w8, [x9, #1]
    2714:	ldr	x8, [sp, #64]
    2718:	ldr	x9, [x8]
    271c:	add	x9, x9, #0x2
    2720:	str	x9, [x8]
    2724:	ldr	x8, [sp, #56]
    2728:	subs	x8, x8, #0x2
    272c:	str	x8, [sp, #56]
    2730:	ldr	x8, [sp, #24]
    2734:	ldur	x9, [x29, #-48]
    2738:	ldr	x10, [x9]
    273c:	add	x8, x10, x8
    2740:	str	x8, [x9]
    2744:	b	1fac <PyInit__codecs_iso2022@@Base+0x458>
    2748:	stur	xzr, [x29, #-8]
    274c:	ldur	x0, [x29, #-8]
    2750:	ldp	x29, x30, [sp, #128]
    2754:	add	sp, sp, #0x90
    2758:	ret
    275c:	sub	sp, sp, #0x10
    2760:	str	x0, [sp, #8]
    2764:	str	x1, [sp]
    2768:	ldr	x8, [sp, #8]
    276c:	mov	w9, #0x0                   	// #0
    2770:	strb	w9, [x8, #4]
    2774:	ldr	x8, [sp, #8]
    2778:	mov	w9, #0x42                  	// #66
    277c:	strb	w9, [x8]
    2780:	ldr	x8, [sp, #8]
    2784:	mov	w9, #0x42                  	// #66
    2788:	strb	w9, [x8, #1]
    278c:	mov	w8, wzr
    2790:	mov	w0, w8
    2794:	add	sp, sp, #0x10
    2798:	ret
    279c:	sub	sp, sp, #0x30
    27a0:	str	x0, [sp, #32]
    27a4:	str	x1, [sp, #24]
    27a8:	str	x2, [sp, #16]
    27ac:	str	x3, [sp, #8]
    27b0:	ldr	x8, [sp, #32]
    27b4:	ldrb	w9, [x8, #4]
    27b8:	and	w9, w9, #0x1
    27bc:	cbz	w9, 2814 <PyInit__codecs_iso2022@@Base+0xcc0>
    27c0:	ldr	x8, [sp, #8]
    27c4:	cmp	x8, #0x1
    27c8:	b.ge	27d8 <PyInit__codecs_iso2022@@Base+0xc84>  // b.tcont
    27cc:	mov	x8, #0xffffffffffffffff    	// #-1
    27d0:	str	x8, [sp, #40]
    27d4:	b	2898 <PyInit__codecs_iso2022@@Base+0xd44>
    27d8:	ldr	x8, [sp, #16]
    27dc:	ldr	x8, [x8]
    27e0:	mov	w9, #0xf                   	// #15
    27e4:	strb	w9, [x8]
    27e8:	ldr	x8, [sp, #16]
    27ec:	ldr	x9, [x8]
    27f0:	add	x9, x9, #0x1
    27f4:	str	x9, [x8]
    27f8:	ldr	x8, [sp, #8]
    27fc:	subs	x8, x8, #0x1
    2800:	str	x8, [sp, #8]
    2804:	ldr	x8, [sp, #32]
    2808:	ldrb	w9, [x8, #4]
    280c:	and	w9, w9, #0xfffffffe
    2810:	strb	w9, [x8, #4]
    2814:	ldr	x8, [sp, #32]
    2818:	ldrb	w9, [x8]
    281c:	cmp	w9, #0x42
    2820:	b.eq	2894 <PyInit__codecs_iso2022@@Base+0xd40>  // b.none
    2824:	ldr	x8, [sp, #8]
    2828:	cmp	x8, #0x3
    282c:	b.ge	283c <PyInit__codecs_iso2022@@Base+0xce8>  // b.tcont
    2830:	mov	x8, #0xffffffffffffffff    	// #-1
    2834:	str	x8, [sp, #40]
    2838:	b	2898 <PyInit__codecs_iso2022@@Base+0xd44>
    283c:	ldr	x8, [sp, #16]
    2840:	ldr	x8, [x8]
    2844:	mov	w9, #0x1b                  	// #27
    2848:	strb	w9, [x8]
    284c:	ldr	x8, [sp, #16]
    2850:	ldr	x8, [x8]
    2854:	mov	w9, #0x28                  	// #40
    2858:	strb	w9, [x8, #1]
    285c:	ldr	x8, [sp, #16]
    2860:	ldr	x8, [x8]
    2864:	mov	w9, #0x42                  	// #66
    2868:	strb	w9, [x8, #2]
    286c:	ldr	x8, [sp, #16]
    2870:	ldr	x9, [x8]
    2874:	add	x9, x9, #0x3
    2878:	str	x9, [x8]
    287c:	ldr	x8, [sp, #8]
    2880:	subs	x8, x8, #0x3
    2884:	str	x8, [sp, #8]
    2888:	ldr	x8, [sp, #32]
    288c:	mov	w9, #0x42                  	// #66
    2890:	strb	w9, [x8]
    2894:	str	xzr, [sp, #40]
    2898:	ldr	x0, [sp, #40]
    289c:	add	sp, sp, #0x30
    28a0:	ret
    28a4:	sub	sp, sp, #0xa0
    28a8:	stp	x29, x30, [sp, #144]
    28ac:	add	x29, sp, #0x90
    28b0:	mov	x8, xzr
    28b4:	stur	x0, [x29, #-16]
    28b8:	stur	x1, [x29, #-24]
    28bc:	stur	x2, [x29, #-32]
    28c0:	stur	x3, [x29, #-40]
    28c4:	stur	x4, [x29, #-48]
    28c8:	stur	x8, [x29, #-56]
    28cc:	ldur	x8, [x29, #-40]
    28d0:	cmp	x8, #0x0
    28d4:	cset	w9, le
    28d8:	tbnz	w9, #0, 3014 <PyInit__codecs_iso2022@@Base+0x14c0>
    28dc:	ldur	x8, [x29, #-32]
    28e0:	ldr	x8, [x8]
    28e4:	ldrb	w9, [x8]
    28e8:	sturb	w9, [x29, #-57]
    28ec:	ldur	x8, [x29, #-16]
    28f0:	ldrb	w9, [x8, #4]
    28f4:	and	w9, w9, #0x2
    28f8:	cbz	w9, 2974 <PyInit__codecs_iso2022@@Base+0xe20>
    28fc:	ldur	x0, [x29, #-48]
    2900:	ldurb	w1, [x29, #-57]
    2904:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    2908:	cmp	w0, #0x0
    290c:	cset	w8, ge  // ge = tcont
    2910:	tbnz	w8, #0, 2920 <PyInit__codecs_iso2022@@Base+0xdcc>
    2914:	mov	x8, #0xfffffffffffffffc    	// #-4
    2918:	stur	x8, [x29, #-8]
    291c:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2920:	ldur	x8, [x29, #-32]
    2924:	ldr	x9, [x8]
    2928:	add	x9, x9, #0x1
    292c:	str	x9, [x8]
    2930:	ldur	x8, [x29, #-40]
    2934:	subs	x8, x8, #0x1
    2938:	stur	x8, [x29, #-40]
    293c:	ldurb	w8, [x29, #-57]
    2940:	cmp	w8, #0x41
    2944:	b.lt	2954 <PyInit__codecs_iso2022@@Base+0xe00>  // b.tstop
    2948:	ldurb	w8, [x29, #-57]
    294c:	cmp	w8, #0x5a
    2950:	b.le	2960 <PyInit__codecs_iso2022@@Base+0xe0c>
    2954:	ldurb	w8, [x29, #-57]
    2958:	cmp	w8, #0x40
    295c:	b.ne	2970 <PyInit__codecs_iso2022@@Base+0xe1c>  // b.any
    2960:	ldur	x8, [x29, #-16]
    2964:	ldrb	w9, [x8, #4]
    2968:	and	w9, w9, #0xfffffffd
    296c:	strb	w9, [x8, #4]
    2970:	b	28cc <PyInit__codecs_iso2022@@Base+0xd78>
    2974:	ldurb	w8, [x29, #-57]
    2978:	subs	w8, w8, #0xa
    297c:	mov	w9, w8
    2980:	ubfx	x9, x9, #0, #32
    2984:	cmp	x9, #0x11
    2988:	str	x9, [sp, #40]
    298c:	b.hi	2bf4 <PyInit__codecs_iso2022@@Base+0x10a0>  // b.pmore
    2990:	adrp	x8, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    2994:	add	x8, x8, #0x4a8
    2998:	ldr	x11, [sp, #40]
    299c:	ldrsw	x10, [x8, x11, lsl #2]
    29a0:	add	x9, x8, x10
    29a4:	br	x9
    29a8:	ldur	x8, [x29, #-40]
    29ac:	cmp	x8, #0x2
    29b0:	b.ge	29c0 <PyInit__codecs_iso2022@@Base+0xe6c>  // b.tcont
    29b4:	mov	x8, #0xfffffffffffffffe    	// #-2
    29b8:	stur	x8, [x29, #-8]
    29bc:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    29c0:	ldur	x8, [x29, #-32]
    29c4:	ldr	x8, [x8]
    29c8:	ldrb	w9, [x8, #1]
    29cc:	cmp	w9, #0x28
    29d0:	b.eq	2a24 <PyInit__codecs_iso2022@@Base+0xed0>  // b.none
    29d4:	ldur	x8, [x29, #-32]
    29d8:	ldr	x8, [x8]
    29dc:	ldrb	w9, [x8, #1]
    29e0:	cmp	w9, #0x29
    29e4:	b.eq	2a24 <PyInit__codecs_iso2022@@Base+0xed0>  // b.none
    29e8:	ldur	x8, [x29, #-32]
    29ec:	ldr	x8, [x8]
    29f0:	ldrb	w9, [x8, #1]
    29f4:	cmp	w9, #0x24
    29f8:	b.eq	2a24 <PyInit__codecs_iso2022@@Base+0xed0>  // b.none
    29fc:	ldur	x8, [x29, #-32]
    2a00:	ldr	x8, [x8]
    2a04:	ldrb	w9, [x8, #1]
    2a08:	cmp	w9, #0x2e
    2a0c:	b.eq	2a24 <PyInit__codecs_iso2022@@Base+0xed0>  // b.none
    2a10:	ldur	x8, [x29, #-32]
    2a14:	ldr	x8, [x8]
    2a18:	ldrb	w9, [x8, #1]
    2a1c:	cmp	w9, #0x26
    2a20:	b.ne	2a54 <PyInit__codecs_iso2022@@Base+0xf00>  // b.any
    2a24:	ldur	x0, [x29, #-24]
    2a28:	ldur	x1, [x29, #-16]
    2a2c:	ldur	x2, [x29, #-32]
    2a30:	sub	x3, x29, #0x28
    2a34:	bl	3514 <PyInit__codecs_iso2022@@Base+0x19c0>
    2a38:	str	x0, [sp, #72]
    2a3c:	ldr	x8, [sp, #72]
    2a40:	cbz	x8, 2a50 <PyInit__codecs_iso2022@@Base+0xefc>
    2a44:	ldr	x8, [sp, #72]
    2a48:	stur	x8, [x29, #-8]
    2a4c:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2a50:	b	2b14 <PyInit__codecs_iso2022@@Base+0xfc0>
    2a54:	ldur	x8, [x29, #-24]
    2a58:	ldr	w9, [x8]
    2a5c:	and	w9, w9, #0x2
    2a60:	cbz	w9, 2ac4 <PyInit__codecs_iso2022@@Base+0xf70>
    2a64:	ldur	x8, [x29, #-32]
    2a68:	ldr	x8, [x8]
    2a6c:	ldrb	w9, [x8, #1]
    2a70:	cmp	w9, #0x4e
    2a74:	b.ne	2ac4 <PyInit__codecs_iso2022@@Base+0xf70>  // b.any
    2a78:	ldur	x8, [x29, #-40]
    2a7c:	cmp	x8, #0x3
    2a80:	b.ge	2a90 <PyInit__codecs_iso2022@@Base+0xf3c>  // b.tcont
    2a84:	mov	x8, #0xfffffffffffffffe    	// #-2
    2a88:	stur	x8, [x29, #-8]
    2a8c:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2a90:	ldur	x0, [x29, #-24]
    2a94:	ldur	x1, [x29, #-16]
    2a98:	ldur	x2, [x29, #-32]
    2a9c:	ldur	x4, [x29, #-48]
    2aa0:	sub	x3, x29, #0x28
    2aa4:	bl	38e0 <PyInit__codecs_iso2022@@Base+0x1d8c>
    2aa8:	str	x0, [sp, #72]
    2aac:	ldr	x8, [sp, #72]
    2ab0:	cbz	x8, 2ac0 <PyInit__codecs_iso2022@@Base+0xf6c>
    2ab4:	ldr	x8, [sp, #72]
    2ab8:	stur	x8, [x29, #-8]
    2abc:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2ac0:	b	2b14 <PyInit__codecs_iso2022@@Base+0xfc0>
    2ac4:	ldur	x0, [x29, #-48]
    2ac8:	mov	w1, #0x1b                  	// #27
    2acc:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    2ad0:	cmp	w0, #0x0
    2ad4:	cset	w8, ge  // ge = tcont
    2ad8:	tbnz	w8, #0, 2ae8 <PyInit__codecs_iso2022@@Base+0xf94>
    2adc:	mov	x8, #0xfffffffffffffffc    	// #-4
    2ae0:	stur	x8, [x29, #-8]
    2ae4:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2ae8:	ldur	x8, [x29, #-16]
    2aec:	ldrb	w9, [x8, #4]
    2af0:	orr	w9, w9, #0x2
    2af4:	strb	w9, [x8, #4]
    2af8:	ldur	x8, [x29, #-32]
    2afc:	ldr	x9, [x8]
    2b00:	add	x9, x9, #0x1
    2b04:	str	x9, [x8]
    2b08:	ldur	x8, [x29, #-40]
    2b0c:	subs	x8, x8, #0x1
    2b10:	stur	x8, [x29, #-40]
    2b14:	b	3010 <PyInit__codecs_iso2022@@Base+0x14bc>
    2b18:	ldur	x8, [x29, #-24]
    2b1c:	ldr	w9, [x8]
    2b20:	and	w9, w9, #0x1
    2b24:	cbz	w9, 2b2c <PyInit__codecs_iso2022@@Base+0xfd8>
    2b28:	b	2c54 <PyInit__codecs_iso2022@@Base+0x1100>
    2b2c:	ldur	x8, [x29, #-16]
    2b30:	ldrb	w9, [x8, #4]
    2b34:	and	w9, w9, #0xfffffffe
    2b38:	strb	w9, [x8, #4]
    2b3c:	ldur	x8, [x29, #-32]
    2b40:	ldr	x9, [x8]
    2b44:	add	x9, x9, #0x1
    2b48:	str	x9, [x8]
    2b4c:	ldur	x8, [x29, #-40]
    2b50:	subs	x8, x8, #0x1
    2b54:	stur	x8, [x29, #-40]
    2b58:	b	3010 <PyInit__codecs_iso2022@@Base+0x14bc>
    2b5c:	ldur	x8, [x29, #-24]
    2b60:	ldr	w9, [x8]
    2b64:	and	w9, w9, #0x1
    2b68:	cbz	w9, 2b70 <PyInit__codecs_iso2022@@Base+0x101c>
    2b6c:	b	2c54 <PyInit__codecs_iso2022@@Base+0x1100>
    2b70:	ldur	x8, [x29, #-16]
    2b74:	ldrb	w9, [x8, #4]
    2b78:	orr	w9, w9, #0x1
    2b7c:	strb	w9, [x8, #4]
    2b80:	ldur	x8, [x29, #-32]
    2b84:	ldr	x9, [x8]
    2b88:	add	x9, x9, #0x1
    2b8c:	str	x9, [x8]
    2b90:	ldur	x8, [x29, #-40]
    2b94:	subs	x8, x8, #0x1
    2b98:	stur	x8, [x29, #-40]
    2b9c:	b	3010 <PyInit__codecs_iso2022@@Base+0x14bc>
    2ba0:	ldur	x8, [x29, #-16]
    2ba4:	ldrb	w9, [x8, #4]
    2ba8:	and	w9, w9, #0xfffffffe
    2bac:	strb	w9, [x8, #4]
    2bb0:	ldur	x0, [x29, #-48]
    2bb4:	mov	w1, #0xa                   	// #10
    2bb8:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    2bbc:	cmp	w0, #0x0
    2bc0:	cset	w8, ge  // ge = tcont
    2bc4:	tbnz	w8, #0, 2bd4 <PyInit__codecs_iso2022@@Base+0x1080>
    2bc8:	mov	x8, #0xfffffffffffffffc    	// #-4
    2bcc:	stur	x8, [x29, #-8]
    2bd0:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2bd4:	ldur	x8, [x29, #-32]
    2bd8:	ldr	x9, [x8]
    2bdc:	add	x9, x9, #0x1
    2be0:	str	x9, [x8]
    2be4:	ldur	x8, [x29, #-40]
    2be8:	subs	x8, x8, #0x1
    2bec:	stur	x8, [x29, #-40]
    2bf0:	b	3010 <PyInit__codecs_iso2022@@Base+0x14bc>
    2bf4:	ldurb	w8, [x29, #-57]
    2bf8:	cmp	w8, #0x20
    2bfc:	b.ge	2c04 <PyInit__codecs_iso2022@@Base+0x10b0>  // b.tcont
    2c00:	b	2c54 <PyInit__codecs_iso2022@@Base+0x1100>
    2c04:	ldurb	w8, [x29, #-57]
    2c08:	cmp	w8, #0x80
    2c0c:	b.lt	2c1c <PyInit__codecs_iso2022@@Base+0x10c8>  // b.tstop
    2c10:	mov	x8, #0x1                   	// #1
    2c14:	stur	x8, [x29, #-8]
    2c18:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2c1c:	ldur	x8, [x29, #-16]
    2c20:	ldrb	w9, [x8, #4]
    2c24:	and	w9, w9, #0x1
    2c28:	cbz	w9, 2c3c <PyInit__codecs_iso2022@@Base+0x10e8>
    2c2c:	ldur	x8, [x29, #-16]
    2c30:	ldrb	w9, [x8, #1]
    2c34:	strb	w9, [sp, #63]
    2c38:	b	2c48 <PyInit__codecs_iso2022@@Base+0x10f4>
    2c3c:	ldur	x8, [x29, #-16]
    2c40:	ldrb	w9, [x8]
    2c44:	strb	w9, [sp, #63]
    2c48:	ldrb	w8, [sp, #63]
    2c4c:	cmp	w8, #0x42
    2c50:	b.ne	2c98 <PyInit__codecs_iso2022@@Base+0x1144>  // b.any
    2c54:	ldur	x0, [x29, #-48]
    2c58:	ldurb	w1, [x29, #-57]
    2c5c:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    2c60:	cmp	w0, #0x0
    2c64:	cset	w8, ge  // ge = tcont
    2c68:	tbnz	w8, #0, 2c78 <PyInit__codecs_iso2022@@Base+0x1124>
    2c6c:	mov	x8, #0xfffffffffffffffc    	// #-4
    2c70:	stur	x8, [x29, #-8]
    2c74:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2c78:	ldur	x8, [x29, #-32]
    2c7c:	ldr	x9, [x8]
    2c80:	add	x9, x9, #0x1
    2c84:	str	x9, [x8]
    2c88:	ldur	x8, [x29, #-40]
    2c8c:	subs	x8, x8, #0x1
    2c90:	stur	x8, [x29, #-40]
    2c94:	b	3010 <PyInit__codecs_iso2022@@Base+0x14bc>
    2c98:	ldur	x8, [x29, #-56]
    2c9c:	cbz	x8, 2cc0 <PyInit__codecs_iso2022@@Base+0x116c>
    2ca0:	ldur	x8, [x29, #-56]
    2ca4:	ldrb	w9, [x8]
    2ca8:	ldrb	w10, [sp, #63]
    2cac:	cmp	w9, w10
    2cb0:	b.ne	2cc0 <PyInit__codecs_iso2022@@Base+0x116c>  // b.any
    2cb4:	ldur	x8, [x29, #-56]
    2cb8:	str	x8, [sp, #64]
    2cbc:	b	2cf8 <PyInit__codecs_iso2022@@Base+0x11a4>
    2cc0:	ldur	x8, [x29, #-24]
    2cc4:	ldr	x8, [x8, #8]
    2cc8:	str	x8, [sp, #64]
    2ccc:	ldr	x8, [sp, #64]
    2cd0:	ldrb	w9, [x8]
    2cd4:	ldrb	w10, [sp, #63]
    2cd8:	cmp	w9, w10
    2cdc:	b.eq	2cf0 <PyInit__codecs_iso2022@@Base+0x119c>  // b.none
    2ce0:	ldr	x8, [sp, #64]
    2ce4:	add	x8, x8, #0x20
    2ce8:	str	x8, [sp, #64]
    2cec:	b	2ccc <PyInit__codecs_iso2022@@Base+0x1178>
    2cf0:	ldr	x8, [sp, #64]
    2cf4:	stur	x8, [x29, #-56]
    2cf8:	ldur	x8, [x29, #-40]
    2cfc:	ldr	x9, [sp, #64]
    2d00:	ldrb	w10, [x9, #2]
    2d04:	mov	w9, w10
    2d08:	cmp	x8, x9
    2d0c:	b.ge	2d1c <PyInit__codecs_iso2022@@Base+0x11c8>  // b.tcont
    2d10:	mov	x8, #0xfffffffffffffffe    	// #-2
    2d14:	stur	x8, [x29, #-8]
    2d18:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2d1c:	ldr	x8, [sp, #64]
    2d20:	ldr	x8, [x8, #16]
    2d24:	ldur	x9, [x29, #-32]
    2d28:	ldr	x0, [x9]
    2d2c:	blr	x8
    2d30:	str	w0, [sp, #56]
    2d34:	ldr	w10, [sp, #56]
    2d38:	mov	w11, #0xffff                	// #65535
    2d3c:	cmp	w10, w11
    2d40:	b.ne	2d58 <PyInit__codecs_iso2022@@Base+0x1204>  // b.any
    2d44:	ldr	x8, [sp, #64]
    2d48:	ldrb	w9, [x8, #2]
    2d4c:	mov	w8, w9
    2d50:	stur	x8, [x29, #-8]
    2d54:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2d58:	ldr	w8, [sp, #56]
    2d5c:	cmp	w8, #0x10, lsl #12
    2d60:	b.cs	2d8c <PyInit__codecs_iso2022@@Base+0x1238>  // b.hs, b.nlast
    2d64:	ldur	x0, [x29, #-48]
    2d68:	ldr	w1, [sp, #56]
    2d6c:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    2d70:	cmp	w0, #0x0
    2d74:	cset	w8, ge  // ge = tcont
    2d78:	tbnz	w8, #0, 2d88 <PyInit__codecs_iso2022@@Base+0x1234>
    2d7c:	mov	x8, #0xfffffffffffffffc    	// #-4
    2d80:	stur	x8, [x29, #-8]
    2d84:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2d88:	b	2fd8 <PyInit__codecs_iso2022@@Base+0x1484>
    2d8c:	ldr	w8, [sp, #56]
    2d90:	cmp	w8, #0x30, lsl #12
    2d94:	b.cs	2dc0 <PyInit__codecs_iso2022@@Base+0x126c>  // b.hs, b.nlast
    2d98:	ldur	x0, [x29, #-48]
    2d9c:	ldr	w1, [sp, #56]
    2da0:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    2da4:	cmp	w0, #0x0
    2da8:	cset	w8, ge  // ge = tcont
    2dac:	tbnz	w8, #0, 2dbc <PyInit__codecs_iso2022@@Base+0x1268>
    2db0:	mov	x8, #0xfffffffffffffffc    	// #-4
    2db4:	stur	x8, [x29, #-8]
    2db8:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2dbc:	b	2fd8 <PyInit__codecs_iso2022@@Base+0x1484>
    2dc0:	ldr	w8, [sp, #56]
    2dc4:	lsr	w8, w8, #16
    2dc8:	str	w8, [sp, #52]
    2dcc:	ldr	w8, [sp, #56]
    2dd0:	and	w8, w8, #0xffff
    2dd4:	str	w8, [sp, #48]
    2dd8:	ldr	w8, [sp, #52]
    2ddc:	ldr	w9, [sp, #56]
    2de0:	and	w9, w9, #0xffff
    2de4:	cmp	w8, w9
    2de8:	b.ls	2df8 <PyInit__codecs_iso2022@@Base+0x12a4>  // b.plast
    2dec:	ldr	w8, [sp, #52]
    2df0:	str	w8, [sp, #36]
    2df4:	b	2e04 <PyInit__codecs_iso2022@@Base+0x12b0>
    2df8:	ldr	w8, [sp, #56]
    2dfc:	and	w8, w8, #0xffff
    2e00:	str	w8, [sp, #36]
    2e04:	ldr	w8, [sp, #36]
    2e08:	ldur	x9, [x29, #-48]
    2e0c:	ldr	w10, [x9, #20]
    2e10:	cmp	w8, w10
    2e14:	b.hi	2e44 <PyInit__codecs_iso2022@@Base+0x12f0>  // b.pmore
    2e18:	ldur	x8, [x29, #-48]
    2e1c:	ldr	x8, [x8, #24]
    2e20:	ldur	x9, [x29, #-48]
    2e24:	ldr	x9, [x9, #32]
    2e28:	subs	x8, x8, x9
    2e2c:	mov	x9, #0x2                   	// #2
    2e30:	cmp	x9, x8
    2e34:	b.gt	2e44 <PyInit__codecs_iso2022@@Base+0x12f0>
    2e38:	mov	w8, wzr
    2e3c:	str	w8, [sp, #32]
    2e40:	b	2e90 <PyInit__codecs_iso2022@@Base+0x133c>
    2e44:	ldur	x0, [x29, #-48]
    2e48:	ldr	w8, [sp, #52]
    2e4c:	ldr	w9, [sp, #56]
    2e50:	and	w9, w9, #0xffff
    2e54:	cmp	w8, w9
    2e58:	str	x0, [sp, #24]
    2e5c:	b.ls	2e6c <PyInit__codecs_iso2022@@Base+0x1318>  // b.plast
    2e60:	ldr	w8, [sp, #52]
    2e64:	str	w8, [sp, #20]
    2e68:	b	2e78 <PyInit__codecs_iso2022@@Base+0x1324>
    2e6c:	ldr	w8, [sp, #56]
    2e70:	and	w8, w8, #0xffff
    2e74:	str	w8, [sp, #20]
    2e78:	ldr	w8, [sp, #20]
    2e7c:	ldr	x0, [sp, #24]
    2e80:	mov	x1, #0x2                   	// #2
    2e84:	mov	w2, w8
    2e88:	bl	1a10 <_PyUnicodeWriter_PrepareInternal@plt>
    2e8c:	str	w0, [sp, #32]
    2e90:	ldr	w8, [sp, #32]
    2e94:	cmp	w8, #0x0
    2e98:	cset	w8, ge  // ge = tcont
    2e9c:	tbnz	w8, #0, 2eac <PyInit__codecs_iso2022@@Base+0x1358>
    2ea0:	mov	x8, #0xfffffffffffffffc    	// #-4
    2ea4:	stur	x8, [x29, #-8]
    2ea8:	b	3018 <PyInit__codecs_iso2022@@Base+0x14c4>
    2eac:	ldur	x8, [x29, #-48]
    2eb0:	ldr	w9, [x8, #16]
    2eb4:	cmp	w9, #0x1
    2eb8:	str	w9, [sp, #16]
    2ebc:	b.eq	2ed4 <PyInit__codecs_iso2022@@Base+0x1380>  // b.none
    2ec0:	b	2ec4 <PyInit__codecs_iso2022@@Base+0x1370>
    2ec4:	ldr	w8, [sp, #16]
    2ec8:	cmp	w8, #0x2
    2ecc:	b.eq	2ef4 <PyInit__codecs_iso2022@@Base+0x13a0>  // b.none
    2ed0:	b	2f1c <PyInit__codecs_iso2022@@Base+0x13c8>
    2ed4:	ldr	w8, [sp, #52]
    2ed8:	ldur	x9, [x29, #-48]
    2edc:	ldr	x9, [x9, #8]
    2ee0:	ldur	x10, [x29, #-48]
    2ee4:	ldr	x10, [x10, #32]
    2ee8:	add	x9, x9, x10
    2eec:	strb	w8, [x9]
    2ef0:	b	2f34 <PyInit__codecs_iso2022@@Base+0x13e0>
    2ef4:	ldr	w8, [sp, #52]
    2ef8:	ldur	x9, [x29, #-48]
    2efc:	ldr	x9, [x9, #8]
    2f00:	ldur	x10, [x29, #-48]
    2f04:	ldr	x10, [x10, #32]
    2f08:	mov	x11, #0x2                   	// #2
    2f0c:	mul	x10, x11, x10
    2f10:	add	x9, x9, x10
    2f14:	strh	w8, [x9]
    2f18:	b	2f34 <PyInit__codecs_iso2022@@Base+0x13e0>
    2f1c:	ldr	w8, [sp, #52]
    2f20:	ldur	x9, [x29, #-48]
    2f24:	ldr	x9, [x9, #8]
    2f28:	ldur	x10, [x29, #-48]
    2f2c:	ldr	x10, [x10, #32]
    2f30:	str	w8, [x9, x10, lsl #2]
    2f34:	ldur	x8, [x29, #-48]
    2f38:	ldr	w9, [x8, #16]
    2f3c:	cmp	w9, #0x1
    2f40:	str	w9, [sp, #12]
    2f44:	b.eq	2f5c <PyInit__codecs_iso2022@@Base+0x1408>  // b.none
    2f48:	b	2f4c <PyInit__codecs_iso2022@@Base+0x13f8>
    2f4c:	ldr	w8, [sp, #12]
    2f50:	cmp	w8, #0x2
    2f54:	b.eq	2f80 <PyInit__codecs_iso2022@@Base+0x142c>  // b.none
    2f58:	b	2fac <PyInit__codecs_iso2022@@Base+0x1458>
    2f5c:	ldr	w8, [sp, #48]
    2f60:	ldur	x9, [x29, #-48]
    2f64:	ldr	x9, [x9, #8]
    2f68:	ldur	x10, [x29, #-48]
    2f6c:	ldr	x10, [x10, #32]
    2f70:	add	x10, x10, #0x1
    2f74:	add	x9, x9, x10
    2f78:	strb	w8, [x9]
    2f7c:	b	2fc8 <PyInit__codecs_iso2022@@Base+0x1474>
    2f80:	ldr	w8, [sp, #48]
    2f84:	ldur	x9, [x29, #-48]
    2f88:	ldr	x9, [x9, #8]
    2f8c:	ldur	x10, [x29, #-48]
    2f90:	ldr	x10, [x10, #32]
    2f94:	add	x10, x10, #0x1
    2f98:	mov	x11, #0x2                   	// #2
    2f9c:	mul	x10, x11, x10
    2fa0:	add	x9, x9, x10
    2fa4:	strh	w8, [x9]
    2fa8:	b	2fc8 <PyInit__codecs_iso2022@@Base+0x1474>
    2fac:	ldr	w8, [sp, #48]
    2fb0:	ldur	x9, [x29, #-48]
    2fb4:	ldr	x9, [x9, #8]
    2fb8:	ldur	x10, [x29, #-48]
    2fbc:	ldr	x10, [x10, #32]
    2fc0:	add	x10, x10, #0x1
    2fc4:	str	w8, [x9, x10, lsl #2]
    2fc8:	ldur	x8, [x29, #-48]
    2fcc:	ldr	x9, [x8, #32]
    2fd0:	add	x9, x9, #0x2
    2fd4:	str	x9, [x8, #32]
    2fd8:	ldr	x8, [sp, #64]
    2fdc:	ldrb	w9, [x8, #2]
    2fe0:	ldur	x8, [x29, #-32]
    2fe4:	ldr	x10, [x8]
    2fe8:	mov	w0, w9
    2fec:	sxtw	x11, w0
    2ff0:	add	x10, x10, x11
    2ff4:	str	x10, [x8]
    2ff8:	ldr	x8, [sp, #64]
    2ffc:	ldrb	w9, [x8, #2]
    3000:	mov	w8, w9
    3004:	ldur	x10, [x29, #-40]
    3008:	subs	x8, x10, x8
    300c:	stur	x8, [x29, #-40]
    3010:	b	28cc <PyInit__codecs_iso2022@@Base+0xd78>
    3014:	stur	xzr, [x29, #-8]
    3018:	ldur	x0, [x29, #-8]
    301c:	ldp	x29, x30, [sp, #144]
    3020:	add	sp, sp, #0xa0
    3024:	ret
    3028:	sub	sp, sp, #0x10
    302c:	str	x0, [sp, #8]
    3030:	str	x1, [sp]
    3034:	ldr	x8, [sp, #8]
    3038:	mov	w9, #0x0                   	// #0
    303c:	strb	w9, [x8, #4]
    3040:	ldr	x8, [sp, #8]
    3044:	mov	w9, #0x42                  	// #66
    3048:	strb	w9, [x8]
    304c:	ldr	x8, [sp, #8]
    3050:	mov	w9, #0x42                  	// #66
    3054:	strb	w9, [x8, #1]
    3058:	ldr	x8, [sp, #8]
    305c:	mov	w9, #0x42                  	// #66
    3060:	strb	w9, [x8, #2]
    3064:	mov	w8, wzr
    3068:	mov	w0, w8
    306c:	add	sp, sp, #0x10
    3070:	ret
    3074:	sub	sp, sp, #0x10
    3078:	str	x0, [sp, #8]
    307c:	str	x1, [sp]
    3080:	ldr	x8, [sp, #8]
    3084:	mov	w9, #0x42                  	// #66
    3088:	strb	w9, [x8]
    308c:	ldr	x8, [sp, #8]
    3090:	ldrb	w9, [x8, #4]
    3094:	and	w9, w9, #0xfffffffe
    3098:	strb	w9, [x8, #4]
    309c:	mov	x8, xzr
    30a0:	mov	x0, x8
    30a4:	add	sp, sp, #0x10
    30a8:	ret
    30ac:	sub	sp, sp, #0x20
    30b0:	stp	x29, x30, [sp, #16]
    30b4:	add	x29, sp, #0x10
    30b8:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    30bc:	add	x8, x8, #0x168
    30c0:	ldr	w9, [x8]
    30c4:	cbnz	w9, 3124 <PyInit__codecs_iso2022@@Base+0x15d0>
    30c8:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    30cc:	add	x0, x0, #0x627
    30d0:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    30d4:	add	x1, x1, #0x632
    30d8:	adrp	x2, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    30dc:	add	x2, x2, #0x170
    30e0:	mov	x8, xzr
    30e4:	mov	x3, x8
    30e8:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    30ec:	cbnz	w0, 3118 <PyInit__codecs_iso2022@@Base+0x15c4>
    30f0:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    30f4:	add	x0, x0, #0x627
    30f8:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    30fc:	add	x1, x1, #0x63e
    3100:	mov	x8, xzr
    3104:	mov	x2, x8
    3108:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    310c:	add	x3, x3, #0x178
    3110:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    3114:	cbz	w0, 3124 <PyInit__codecs_iso2022@@Base+0x15d0>
    3118:	mov	w8, #0xffffffff            	// #-1
    311c:	stur	w8, [x29, #-4]
    3120:	b	3138 <PyInit__codecs_iso2022@@Base+0x15e4>
    3124:	mov	w8, #0x1                   	// #1
    3128:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    312c:	add	x9, x9, #0x168
    3130:	str	w8, [x9]
    3134:	stur	wzr, [x29, #-4]
    3138:	ldur	w0, [x29, #-4]
    313c:	ldp	x29, x30, [sp, #16]
    3140:	add	sp, sp, #0x20
    3144:	ret
    3148:	sub	sp, sp, #0x20
    314c:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3150:	add	x8, x8, #0x178
    3154:	str	x0, [sp, #16]
    3158:	ldr	x9, [x8]
    315c:	ldr	x10, [sp, #16]
    3160:	ldrb	w11, [x10]
    3164:	mov	w10, w11
    3168:	mov	x12, #0x10                  	// #16
    316c:	mul	x10, x12, x10
    3170:	add	x9, x9, x10
    3174:	ldr	x9, [x9]
    3178:	str	x8, [sp]
    317c:	cbz	x9, 3254 <PyInit__codecs_iso2022@@Base+0x1700>
    3180:	ldr	x8, [sp, #16]
    3184:	ldrb	w9, [x8, #1]
    3188:	ldr	x8, [sp]
    318c:	ldr	x10, [x8]
    3190:	ldr	x11, [sp, #16]
    3194:	ldrb	w12, [x11]
    3198:	mov	w11, w12
    319c:	mov	x13, #0x10                  	// #16
    31a0:	mul	x11, x13, x11
    31a4:	add	x10, x10, x11
    31a8:	ldrb	w12, [x10, #8]
    31ac:	cmp	w9, w12
    31b0:	b.lt	3254 <PyInit__codecs_iso2022@@Base+0x1700>  // b.tstop
    31b4:	ldr	x8, [sp, #16]
    31b8:	ldrb	w9, [x8, #1]
    31bc:	ldr	x8, [sp]
    31c0:	ldr	x10, [x8]
    31c4:	ldr	x11, [sp, #16]
    31c8:	ldrb	w12, [x11]
    31cc:	mov	w11, w12
    31d0:	mov	x13, #0x10                  	// #16
    31d4:	mul	x11, x13, x11
    31d8:	add	x10, x10, x11
    31dc:	ldrb	w12, [x10, #9]
    31e0:	cmp	w9, w12
    31e4:	b.gt	3254 <PyInit__codecs_iso2022@@Base+0x1700>
    31e8:	ldr	x8, [sp]
    31ec:	ldr	x9, [x8]
    31f0:	ldr	x10, [sp, #16]
    31f4:	ldrb	w11, [x10]
    31f8:	mov	w10, w11
    31fc:	mov	x12, #0x10                  	// #16
    3200:	mul	x10, x12, x10
    3204:	add	x9, x9, x10
    3208:	ldr	x9, [x9]
    320c:	ldr	x10, [sp, #16]
    3210:	ldrb	w11, [x10, #1]
    3214:	ldr	x10, [x8]
    3218:	ldr	x13, [sp, #16]
    321c:	ldrb	w14, [x13]
    3220:	mov	w13, w14
    3224:	mul	x12, x12, x13
    3228:	add	x10, x10, x12
    322c:	ldrb	w14, [x10, #8]
    3230:	subs	w11, w11, w14
    3234:	ldrh	w11, [x9, w11, sxtw #1]
    3238:	str	w11, [sp, #12]
    323c:	mov	w14, #0xfffe                	// #65534
    3240:	cmp	w11, w14
    3244:	b.eq	3254 <PyInit__codecs_iso2022@@Base+0x1700>  // b.none
    3248:	ldr	w8, [sp, #12]
    324c:	str	w8, [sp, #28]
    3250:	b	325c <PyInit__codecs_iso2022@@Base+0x1708>
    3254:	mov	w8, #0xffff                	// #65535
    3258:	str	w8, [sp, #28]
    325c:	ldr	w0, [sp, #28]
    3260:	add	sp, sp, #0x20
    3264:	ret
    3268:	sub	sp, sp, #0x30
    326c:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3270:	add	x8, x8, #0x170
    3274:	str	x0, [sp, #32]
    3278:	str	x1, [sp, #24]
    327c:	ldr	x9, [sp, #32]
    3280:	ldr	w10, [x9]
    3284:	cmp	w10, #0x10, lsl #12
    3288:	str	x8, [sp, #8]
    328c:	b.cs	33d8 <PyInit__codecs_iso2022@@Base+0x1884>  // b.hs, b.nlast
    3290:	ldr	x8, [sp, #8]
    3294:	ldr	x9, [x8]
    3298:	ldr	x10, [sp, #32]
    329c:	ldr	w11, [x10]
    32a0:	lsr	w11, w11, #8
    32a4:	mov	w10, w11
    32a8:	ubfx	x10, x10, #0, #32
    32ac:	mov	x12, #0x10                  	// #16
    32b0:	mul	x10, x12, x10
    32b4:	add	x9, x9, x10
    32b8:	ldr	x9, [x9]
    32bc:	cbz	x9, 33d8 <PyInit__codecs_iso2022@@Base+0x1884>
    32c0:	ldr	x8, [sp, #32]
    32c4:	ldr	w9, [x8]
    32c8:	and	w9, w9, #0xff
    32cc:	ldr	x8, [sp, #8]
    32d0:	ldr	x10, [x8]
    32d4:	ldr	x11, [sp, #32]
    32d8:	ldr	w12, [x11]
    32dc:	mov	x11, #0x8                   	// #8
    32e0:	lsr	w11, w12, w11
    32e4:	mov	w13, w11
    32e8:	ubfx	x13, x13, #0, #32
    32ec:	mov	x14, #0x10                  	// #16
    32f0:	mul	x13, x14, x13
    32f4:	add	x10, x10, x13
    32f8:	ldrb	w11, [x10, #8]
    32fc:	cmp	w9, w11
    3300:	b.cc	33d8 <PyInit__codecs_iso2022@@Base+0x1884>  // b.lo, b.ul, b.last
    3304:	ldr	x8, [sp, #32]
    3308:	ldr	w9, [x8]
    330c:	and	w9, w9, #0xff
    3310:	ldr	x8, [sp, #8]
    3314:	ldr	x10, [x8]
    3318:	ldr	x11, [sp, #32]
    331c:	ldr	w12, [x11]
    3320:	lsr	w12, w12, #8
    3324:	mov	w11, w12
    3328:	ubfx	x11, x11, #0, #32
    332c:	mov	x13, #0x10                  	// #16
    3330:	mul	x11, x13, x11
    3334:	add	x10, x10, x11
    3338:	ldrb	w12, [x10, #9]
    333c:	cmp	w9, w12
    3340:	b.hi	33d8 <PyInit__codecs_iso2022@@Base+0x1884>  // b.pmore
    3344:	ldr	x8, [sp, #8]
    3348:	ldr	x9, [x8]
    334c:	ldr	x10, [sp, #32]
    3350:	ldr	w11, [x10]
    3354:	mov	x10, #0x8                   	// #8
    3358:	mov	x0, x10
    335c:	lsr	w11, w11, w0
    3360:	mov	w12, w11
    3364:	ubfx	x12, x12, #0, #32
    3368:	mov	x13, #0x10                  	// #16
    336c:	mul	x12, x13, x12
    3370:	add	x9, x9, x12
    3374:	ldr	x9, [x9]
    3378:	ldr	x12, [sp, #32]
    337c:	ldr	w11, [x12]
    3380:	and	w11, w11, #0xff
    3384:	ldr	x12, [x8]
    3388:	ldr	x14, [sp, #32]
    338c:	ldr	w15, [x14]
    3390:	lsr	w10, w15, w10
    3394:	mov	w14, w10
    3398:	ubfx	x14, x14, #0, #32
    339c:	mul	x13, x13, x14
    33a0:	add	x12, x12, x13
    33a4:	ldrb	w10, [x12, #8]
    33a8:	subs	w10, w11, w10
    33ac:	ldrh	w10, [x9, w10, uxtw #1]
    33b0:	strh	w10, [sp, #22]
    33b4:	mov	w11, #0xffff                	// #65535
    33b8:	cmp	w10, w11
    33bc:	b.eq	33d8 <PyInit__codecs_iso2022@@Base+0x1884>  // b.none
    33c0:	ldrh	w8, [sp, #22]
    33c4:	and	w8, w8, #0x8000
    33c8:	cbnz	w8, 33d8 <PyInit__codecs_iso2022@@Base+0x1884>
    33cc:	ldrh	w8, [sp, #22]
    33d0:	strh	w8, [sp, #46]
    33d4:	b	33e0 <PyInit__codecs_iso2022@@Base+0x188c>
    33d8:	mov	w8, #0xffff                	// #65535
    33dc:	strh	w8, [sp, #46]
    33e0:	ldrh	w0, [sp, #46]
    33e4:	add	sp, sp, #0x30
    33e8:	ret
    33ec:	sub	sp, sp, #0x60
    33f0:	stp	x29, x30, [sp, #80]
    33f4:	add	x29, sp, #0x50
    33f8:	adrp	x8, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    33fc:	add	x8, x8, #0x578
    3400:	stur	x0, [x29, #-16]
    3404:	stur	x1, [x29, #-24]
    3408:	stur	x2, [x29, #-32]
    340c:	str	x3, [sp, #40]
    3410:	ldur	x0, [x29, #-16]
    3414:	str	x8, [sp, #8]
    3418:	bl	19d0 <PyImport_ImportModule@plt>
    341c:	str	x0, [sp, #24]
    3420:	ldr	x8, [sp, #24]
    3424:	cbnz	x8, 3434 <PyInit__codecs_iso2022@@Base+0x18e0>
    3428:	mov	w8, #0xffffffff            	// #-1
    342c:	stur	w8, [x29, #-4]
    3430:	b	3504 <PyInit__codecs_iso2022@@Base+0x19b0>
    3434:	ldr	x0, [sp, #24]
    3438:	ldur	x1, [x29, #-24]
    343c:	bl	1950 <PyObject_GetAttrString@plt>
    3440:	str	x0, [sp, #32]
    3444:	ldr	x8, [sp, #32]
    3448:	cbnz	x8, 3450 <PyInit__codecs_iso2022@@Base+0x18fc>
    344c:	b	34ec <PyInit__codecs_iso2022@@Base+0x1998>
    3450:	ldr	x0, [sp, #32]
    3454:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3458:	add	x1, x1, #0x561
    345c:	bl	19a0 <PyCapsule_IsValid@plt>
    3460:	cbnz	w0, 3480 <PyInit__codecs_iso2022@@Base+0x192c>
    3464:	adrp	x8, 17000 <PyInit__codecs_iso2022@@Base+0x154ac>
    3468:	ldr	x8, [x8, #4032]
    346c:	ldr	x0, [x8]
    3470:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3474:	add	x1, x1, #0x64c
    3478:	bl	1980 <PyErr_SetString@plt>
    347c:	b	34ec <PyInit__codecs_iso2022@@Base+0x1998>
    3480:	ldr	x0, [sp, #32]
    3484:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3488:	add	x1, x1, #0x561
    348c:	bl	1a70 <PyCapsule_GetPointer@plt>
    3490:	str	x0, [sp, #16]
    3494:	ldur	x8, [x29, #-32]
    3498:	cbz	x8, 34ac <PyInit__codecs_iso2022@@Base+0x1958>
    349c:	ldr	x8, [sp, #16]
    34a0:	ldr	x8, [x8, #8]
    34a4:	ldur	x9, [x29, #-32]
    34a8:	str	x8, [x9]
    34ac:	ldr	x8, [sp, #40]
    34b0:	cbz	x8, 34c4 <PyInit__codecs_iso2022@@Base+0x1970>
    34b4:	ldr	x8, [sp, #16]
    34b8:	ldr	x8, [x8, #16]
    34bc:	ldr	x9, [sp, #40]
    34c0:	str	x8, [x9]
    34c4:	ldr	x2, [sp, #32]
    34c8:	ldr	x0, [sp, #8]
    34cc:	mov	w1, #0x182                 	// #386
    34d0:	bl	1ec0 <PyInit__codecs_iso2022@@Base+0x36c>
    34d4:	ldr	x2, [sp, #24]
    34d8:	ldr	x0, [sp, #8]
    34dc:	mov	w1, #0x185                 	// #389
    34e0:	bl	1ec0 <PyInit__codecs_iso2022@@Base+0x36c>
    34e4:	stur	wzr, [x29, #-4]
    34e8:	b	3504 <PyInit__codecs_iso2022@@Base+0x19b0>
    34ec:	ldr	x2, [sp, #24]
    34f0:	ldr	x0, [sp, #8]
    34f4:	mov	w1, #0x189                 	// #393
    34f8:	bl	1ec0 <PyInit__codecs_iso2022@@Base+0x36c>
    34fc:	mov	w8, #0xffffffff            	// #-1
    3500:	stur	w8, [x29, #-4]
    3504:	ldur	w0, [x29, #-4]
    3508:	ldp	x29, x30, [sp, #80]
    350c:	add	sp, sp, #0x60
    3510:	ret
    3514:	sub	sp, sp, #0x50
    3518:	mov	x8, #0x1                   	// #1
    351c:	str	x0, [sp, #64]
    3520:	str	x1, [sp, #56]
    3524:	str	x2, [sp, #48]
    3528:	str	x3, [sp, #40]
    352c:	str	xzr, [sp, #16]
    3530:	str	x8, [sp, #24]
    3534:	ldr	x8, [sp, #24]
    3538:	cmp	x8, #0x10
    353c:	b.ge	3630 <PyInit__codecs_iso2022@@Base+0x1adc>  // b.tcont
    3540:	ldr	x8, [sp, #24]
    3544:	ldr	x9, [sp, #40]
    3548:	ldr	x9, [x9]
    354c:	cmp	x8, x9
    3550:	b.lt	3560 <PyInit__codecs_iso2022@@Base+0x1a0c>  // b.tstop
    3554:	mov	x8, #0xfffffffffffffffe    	// #-2
    3558:	str	x8, [sp, #72]
    355c:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    3560:	ldr	x8, [sp, #48]
    3564:	ldr	x8, [x8]
    3568:	ldr	x9, [sp, #24]
    356c:	ldrb	w10, [x8, x9]
    3570:	cmp	w10, #0x41
    3574:	b.lt	3590 <PyInit__codecs_iso2022@@Base+0x1a3c>  // b.tstop
    3578:	ldr	x8, [sp, #48]
    357c:	ldr	x8, [x8]
    3580:	ldr	x9, [sp, #24]
    3584:	ldrb	w10, [x8, x9]
    3588:	cmp	w10, #0x5a
    358c:	b.le	35a8 <PyInit__codecs_iso2022@@Base+0x1a54>
    3590:	ldr	x8, [sp, #48]
    3594:	ldr	x8, [x8]
    3598:	ldr	x9, [sp, #24]
    359c:	ldrb	w10, [x8, x9]
    35a0:	cmp	w10, #0x40
    35a4:	b.ne	35b8 <PyInit__codecs_iso2022@@Base+0x1a64>  // b.any
    35a8:	ldr	x8, [sp, #24]
    35ac:	add	x8, x8, #0x1
    35b0:	str	x8, [sp, #16]
    35b4:	b	3630 <PyInit__codecs_iso2022@@Base+0x1adc>
    35b8:	ldr	x8, [sp, #64]
    35bc:	ldr	w9, [x8]
    35c0:	and	w9, w9, #0x4
    35c4:	cbz	w9, 3620 <PyInit__codecs_iso2022@@Base+0x1acc>
    35c8:	ldr	x8, [sp, #24]
    35cc:	add	x8, x8, #0x1
    35d0:	ldr	x9, [sp, #40]
    35d4:	ldr	x9, [x9]
    35d8:	cmp	x8, x9
    35dc:	b.ge	3620 <PyInit__codecs_iso2022@@Base+0x1acc>  // b.tcont
    35e0:	ldr	x8, [sp, #48]
    35e4:	ldr	x8, [x8]
    35e8:	ldr	x9, [sp, #24]
    35ec:	ldrb	w10, [x8, x9]
    35f0:	cmp	w10, #0x26
    35f4:	b.ne	3620 <PyInit__codecs_iso2022@@Base+0x1acc>  // b.any
    35f8:	ldr	x8, [sp, #48]
    35fc:	ldr	x8, [x8]
    3600:	ldr	x9, [sp, #24]
    3604:	add	x9, x9, #0x1
    3608:	ldrb	w10, [x8, x9]
    360c:	cmp	w10, #0x40
    3610:	b.ne	3620 <PyInit__codecs_iso2022@@Base+0x1acc>  // b.any
    3614:	ldr	x8, [sp, #24]
    3618:	add	x8, x8, #0x2
    361c:	str	x8, [sp, #24]
    3620:	ldr	x8, [sp, #24]
    3624:	add	x8, x8, #0x1
    3628:	str	x8, [sp, #24]
    362c:	b	3534 <PyInit__codecs_iso2022@@Base+0x19e0>
    3630:	ldr	x8, [sp, #16]
    3634:	subs	x8, x8, #0x0
    3638:	cmp	x8, #0x6
    363c:	str	x8, [sp]
    3640:	b.hi	3820 <PyInit__codecs_iso2022@@Base+0x1ccc>  // b.pmore
    3644:	adrp	x8, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3648:	add	x8, x8, #0x4f0
    364c:	ldr	x11, [sp]
    3650:	ldrsw	x10, [x8, x11, lsl #2]
    3654:	add	x9, x8, x10
    3658:	br	x9
    365c:	mov	x8, #0x1                   	// #1
    3660:	str	x8, [sp, #72]
    3664:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    3668:	ldr	x8, [sp, #48]
    366c:	ldr	x8, [x8]
    3670:	ldrb	w9, [x8, #1]
    3674:	cmp	w9, #0x24
    3678:	b.ne	369c <PyInit__codecs_iso2022@@Base+0x1b48>  // b.any
    367c:	ldr	x8, [sp, #48]
    3680:	ldr	x8, [x8]
    3684:	ldrb	w9, [x8, #2]
    3688:	orr	w9, w9, #0x80
    368c:	strb	w9, [sp, #39]
    3690:	mov	w9, #0x0                   	// #0
    3694:	strb	w9, [sp, #38]
    3698:	b	3728 <PyInit__codecs_iso2022@@Base+0x1bd4>
    369c:	ldr	x8, [sp, #48]
    36a0:	ldr	x8, [x8]
    36a4:	ldrb	w9, [x8, #2]
    36a8:	strb	w9, [sp, #39]
    36ac:	ldr	x8, [sp, #48]
    36b0:	ldr	x8, [x8]
    36b4:	ldrb	w9, [x8, #1]
    36b8:	cmp	w9, #0x28
    36bc:	b.ne	36cc <PyInit__codecs_iso2022@@Base+0x1b78>  // b.any
    36c0:	mov	w8, #0x0                   	// #0
    36c4:	strb	w8, [sp, #38]
    36c8:	b	3728 <PyInit__codecs_iso2022@@Base+0x1bd4>
    36cc:	ldr	x8, [sp, #48]
    36d0:	ldr	x8, [x8]
    36d4:	ldrb	w9, [x8, #1]
    36d8:	cmp	w9, #0x29
    36dc:	b.ne	36ec <PyInit__codecs_iso2022@@Base+0x1b98>  // b.any
    36e0:	mov	w8, #0x1                   	// #1
    36e4:	strb	w8, [sp, #38]
    36e8:	b	3728 <PyInit__codecs_iso2022@@Base+0x1bd4>
    36ec:	ldr	x8, [sp, #64]
    36f0:	ldr	w9, [x8]
    36f4:	and	w9, w9, #0x2
    36f8:	cbz	w9, 371c <PyInit__codecs_iso2022@@Base+0x1bc8>
    36fc:	ldr	x8, [sp, #48]
    3700:	ldr	x8, [x8]
    3704:	ldrb	w9, [x8, #1]
    3708:	cmp	w9, #0x2e
    370c:	b.ne	371c <PyInit__codecs_iso2022@@Base+0x1bc8>  // b.any
    3710:	mov	w8, #0x2                   	// #2
    3714:	strb	w8, [sp, #38]
    3718:	b	3728 <PyInit__codecs_iso2022@@Base+0x1bd4>
    371c:	mov	x8, #0x3                   	// #3
    3720:	str	x8, [sp, #72]
    3724:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    3728:	b	382c <PyInit__codecs_iso2022@@Base+0x1cd8>
    372c:	ldr	x8, [sp, #48]
    3730:	ldr	x8, [x8]
    3734:	ldrb	w9, [x8, #1]
    3738:	cmp	w9, #0x24
    373c:	b.eq	374c <PyInit__codecs_iso2022@@Base+0x1bf8>  // b.none
    3740:	mov	x8, #0x4                   	// #4
    3744:	str	x8, [sp, #72]
    3748:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    374c:	ldr	x8, [sp, #48]
    3750:	ldr	x8, [x8]
    3754:	ldrb	w9, [x8, #3]
    3758:	orr	w9, w9, #0x80
    375c:	strb	w9, [sp, #39]
    3760:	ldr	x8, [sp, #48]
    3764:	ldr	x8, [x8]
    3768:	ldrb	w9, [x8, #2]
    376c:	cmp	w9, #0x28
    3770:	b.ne	3780 <PyInit__codecs_iso2022@@Base+0x1c2c>  // b.any
    3774:	mov	w8, #0x0                   	// #0
    3778:	strb	w8, [sp, #38]
    377c:	b	37ac <PyInit__codecs_iso2022@@Base+0x1c58>
    3780:	ldr	x8, [sp, #48]
    3784:	ldr	x8, [x8]
    3788:	ldrb	w9, [x8, #2]
    378c:	cmp	w9, #0x29
    3790:	b.ne	37a0 <PyInit__codecs_iso2022@@Base+0x1c4c>  // b.any
    3794:	mov	w8, #0x1                   	// #1
    3798:	strb	w8, [sp, #38]
    379c:	b	37ac <PyInit__codecs_iso2022@@Base+0x1c58>
    37a0:	mov	x8, #0x4                   	// #4
    37a4:	str	x8, [sp, #72]
    37a8:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    37ac:	b	382c <PyInit__codecs_iso2022@@Base+0x1cd8>
    37b0:	ldr	x8, [sp, #64]
    37b4:	ldr	w9, [x8]
    37b8:	and	w9, w9, #0x4
    37bc:	cbz	w9, 3810 <PyInit__codecs_iso2022@@Base+0x1cbc>
    37c0:	ldr	x8, [sp, #48]
    37c4:	ldr	x8, [x8]
    37c8:	ldrb	w9, [x8, #3]
    37cc:	cmp	w9, #0x1b
    37d0:	b.ne	3810 <PyInit__codecs_iso2022@@Base+0x1cbc>  // b.any
    37d4:	ldr	x8, [sp, #48]
    37d8:	ldr	x8, [x8]
    37dc:	ldrb	w9, [x8, #4]
    37e0:	cmp	w9, #0x24
    37e4:	b.ne	3810 <PyInit__codecs_iso2022@@Base+0x1cbc>  // b.any
    37e8:	ldr	x8, [sp, #48]
    37ec:	ldr	x8, [x8]
    37f0:	ldrb	w9, [x8, #5]
    37f4:	cmp	w9, #0x42
    37f8:	b.ne	3810 <PyInit__codecs_iso2022@@Base+0x1cbc>  // b.any
    37fc:	mov	w8, #0xc2                  	// #194
    3800:	strb	w8, [sp, #39]
    3804:	mov	w8, #0x0                   	// #0
    3808:	strb	w8, [sp, #38]
    380c:	b	381c <PyInit__codecs_iso2022@@Base+0x1cc8>
    3810:	mov	x8, #0x6                   	// #6
    3814:	str	x8, [sp, #72]
    3818:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    381c:	b	382c <PyInit__codecs_iso2022@@Base+0x1cd8>
    3820:	ldr	x8, [sp, #16]
    3824:	str	x8, [sp, #72]
    3828:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    382c:	ldrb	w8, [sp, #39]
    3830:	cmp	w8, #0x42
    3834:	b.eq	3890 <PyInit__codecs_iso2022@@Base+0x1d3c>  // b.none
    3838:	ldr	x8, [sp, #64]
    383c:	ldr	x8, [x8, #8]
    3840:	str	x8, [sp, #8]
    3844:	ldr	x8, [sp, #8]
    3848:	ldrb	w9, [x8]
    384c:	cbz	w9, 3878 <PyInit__codecs_iso2022@@Base+0x1d24>
    3850:	ldr	x8, [sp, #8]
    3854:	ldrb	w9, [x8]
    3858:	ldrb	w10, [sp, #39]
    385c:	cmp	w9, w10
    3860:	b.ne	3868 <PyInit__codecs_iso2022@@Base+0x1d14>  // b.any
    3864:	b	3878 <PyInit__codecs_iso2022@@Base+0x1d24>
    3868:	ldr	x8, [sp, #8]
    386c:	add	x8, x8, #0x20
    3870:	str	x8, [sp, #8]
    3874:	b	3844 <PyInit__codecs_iso2022@@Base+0x1cf0>
    3878:	ldr	x8, [sp, #8]
    387c:	ldrb	w9, [x8]
    3880:	cbnz	w9, 3890 <PyInit__codecs_iso2022@@Base+0x1d3c>
    3884:	ldr	x8, [sp, #16]
    3888:	str	x8, [sp, #72]
    388c:	b	38d4 <PyInit__codecs_iso2022@@Base+0x1d80>
    3890:	ldrb	w8, [sp, #39]
    3894:	ldr	x9, [sp, #56]
    3898:	ldrb	w10, [sp, #38]
    389c:	mov	w11, w10
    38a0:	add	x9, x9, x11
    38a4:	strb	w8, [x9]
    38a8:	ldr	x8, [sp, #16]
    38ac:	ldr	x9, [sp, #40]
    38b0:	ldr	x10, [x9]
    38b4:	subs	x8, x10, x8
    38b8:	str	x8, [x9]
    38bc:	ldr	x8, [sp, #16]
    38c0:	ldr	x9, [sp, #48]
    38c4:	ldr	x10, [x9]
    38c8:	add	x8, x10, x8
    38cc:	str	x8, [x9]
    38d0:	str	xzr, [sp, #72]
    38d4:	ldr	x0, [sp, #72]
    38d8:	add	sp, sp, #0x50
    38dc:	ret
    38e0:	sub	sp, sp, #0x40
    38e4:	stp	x29, x30, [sp, #48]
    38e8:	add	x29, sp, #0x30
    38ec:	stur	x0, [x29, #-16]
    38f0:	str	x1, [sp, #24]
    38f4:	str	x2, [sp, #16]
    38f8:	str	x3, [sp, #8]
    38fc:	str	x4, [sp]
    3900:	ldr	x8, [sp, #24]
    3904:	ldrb	w9, [x8, #2]
    3908:	cmp	w9, #0x41
    390c:	b.ne	3968 <PyInit__codecs_iso2022@@Base+0x1e14>  // b.any
    3910:	ldr	x8, [sp, #16]
    3914:	ldr	x8, [x8]
    3918:	ldrb	w9, [x8, #2]
    391c:	cmp	w9, #0x80
    3920:	b.ge	3958 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.tcont
    3924:	ldr	x0, [sp]
    3928:	ldr	x8, [sp, #16]
    392c:	ldr	x8, [x8]
    3930:	ldrb	w9, [x8, #2]
    3934:	add	w1, w9, #0x80
    3938:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    393c:	cmp	w0, #0x0
    3940:	cset	w9, ge  // ge = tcont
    3944:	tbnz	w9, #0, 3954 <PyInit__codecs_iso2022@@Base+0x1e00>
    3948:	mov	x8, #0xfffffffffffffffc    	// #-4
    394c:	stur	x8, [x29, #-8]
    3950:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3954:	b	3964 <PyInit__codecs_iso2022@@Base+0x1e10>
    3958:	mov	x8, #0x3                   	// #3
    395c:	stur	x8, [x29, #-8]
    3960:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3964:	b	3c2c <PyInit__codecs_iso2022@@Base+0x20d8>
    3968:	ldr	x8, [sp, #24]
    396c:	ldrb	w9, [x8, #2]
    3970:	cmp	w9, #0x46
    3974:	b.ne	3bc0 <PyInit__codecs_iso2022@@Base+0x206c>  // b.any
    3978:	ldr	x8, [sp, #16]
    397c:	ldr	x8, [x8]
    3980:	ldrb	w9, [x8, #2]
    3984:	eor	w9, w9, #0x80
    3988:	cmp	w9, #0xa0
    398c:	b.ge	39c4 <PyInit__codecs_iso2022@@Base+0x1e70>  // b.tcont
    3990:	ldr	x0, [sp]
    3994:	ldr	x8, [sp, #16]
    3998:	ldr	x8, [x8]
    399c:	ldrb	w9, [x8, #2]
    39a0:	eor	w1, w9, #0x80
    39a4:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    39a8:	cmp	w0, #0x0
    39ac:	cset	w9, ge  // ge = tcont
    39b0:	tbnz	w9, #0, 39c0 <PyInit__codecs_iso2022@@Base+0x1e6c>
    39b4:	mov	x8, #0xfffffffffffffffc    	// #-4
    39b8:	stur	x8, [x29, #-8]
    39bc:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    39c0:	b	3bbc <PyInit__codecs_iso2022@@Base+0x2068>
    39c4:	ldr	x8, [sp, #16]
    39c8:	ldr	x8, [x8]
    39cc:	ldrb	w9, [x8, #2]
    39d0:	eor	w9, w9, #0x80
    39d4:	cmp	w9, #0xc0
    39d8:	b.ge	3a40 <PyInit__codecs_iso2022@@Base+0x1eec>  // b.tcont
    39dc:	ldr	x8, [sp, #16]
    39e0:	ldr	x8, [x8]
    39e4:	ldrb	w9, [x8, #2]
    39e8:	eor	w9, w9, #0x80
    39ec:	subs	w9, w9, #0xa0
    39f0:	mov	x8, #0x1                   	// #1
    39f4:	mov	w10, w9
    39f8:	lsl	x8, x8, x10
    39fc:	mov	x10, #0x3bc9                	// #15305
    3a00:	movk	x10, #0x288f, lsl #16
    3a04:	and	x8, x10, x8
    3a08:	cbz	x8, 3a40 <PyInit__codecs_iso2022@@Base+0x1eec>
    3a0c:	ldr	x0, [sp]
    3a10:	ldr	x8, [sp, #16]
    3a14:	ldr	x8, [x8]
    3a18:	ldrb	w9, [x8, #2]
    3a1c:	eor	w1, w9, #0x80
    3a20:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    3a24:	cmp	w0, #0x0
    3a28:	cset	w9, ge  // ge = tcont
    3a2c:	tbnz	w9, #0, 3a3c <PyInit__codecs_iso2022@@Base+0x1ee8>
    3a30:	mov	x8, #0xfffffffffffffffc    	// #-4
    3a34:	stur	x8, [x29, #-8]
    3a38:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3a3c:	b	3bbc <PyInit__codecs_iso2022@@Base+0x2068>
    3a40:	ldr	x8, [sp, #16]
    3a44:	ldr	x8, [x8]
    3a48:	ldrb	w9, [x8, #2]
    3a4c:	eor	w9, w9, #0x80
    3a50:	cmp	w9, #0xb4
    3a54:	b.lt	3af0 <PyInit__codecs_iso2022@@Base+0x1f9c>  // b.tstop
    3a58:	ldr	x8, [sp, #16]
    3a5c:	ldr	x8, [x8]
    3a60:	ldrb	w9, [x8, #2]
    3a64:	eor	w9, w9, #0x80
    3a68:	cmp	w9, #0xfe
    3a6c:	b.gt	3af0 <PyInit__codecs_iso2022@@Base+0x1f9c>
    3a70:	ldr	x8, [sp, #16]
    3a74:	ldr	x8, [x8]
    3a78:	ldrb	w9, [x8, #2]
    3a7c:	eor	w9, w9, #0x80
    3a80:	cmp	w9, #0xd4
    3a84:	b.ge	3ab8 <PyInit__codecs_iso2022@@Base+0x1f64>  // b.tcont
    3a88:	ldr	x8, [sp, #16]
    3a8c:	ldr	x8, [x8]
    3a90:	ldrb	w9, [x8, #2]
    3a94:	eor	w9, w9, #0x80
    3a98:	subs	w9, w9, #0xb4
    3a9c:	mov	x8, #0x1                   	// #1
    3aa0:	mov	w10, w9
    3aa4:	lsl	x8, x8, x10
    3aa8:	mov	x10, #0xfd77                	// #64887
    3aac:	movk	x10, #0xbfff, lsl #16
    3ab0:	and	x8, x10, x8
    3ab4:	cbz	x8, 3af0 <PyInit__codecs_iso2022@@Base+0x1f9c>
    3ab8:	ldr	x0, [sp]
    3abc:	ldr	x8, [sp, #16]
    3ac0:	ldr	x8, [x8]
    3ac4:	ldrb	w9, [x8, #2]
    3ac8:	eor	w9, w9, #0x80
    3acc:	add	w1, w9, #0x2d0
    3ad0:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    3ad4:	cmp	w0, #0x0
    3ad8:	cset	w9, ge  // ge = tcont
    3adc:	tbnz	w9, #0, 3aec <PyInit__codecs_iso2022@@Base+0x1f98>
    3ae0:	mov	x8, #0xfffffffffffffffc    	// #-4
    3ae4:	stur	x8, [x29, #-8]
    3ae8:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3aec:	b	3bbc <PyInit__codecs_iso2022@@Base+0x2068>
    3af0:	ldr	x8, [sp, #16]
    3af4:	ldr	x8, [x8]
    3af8:	ldrb	w9, [x8, #2]
    3afc:	eor	w9, w9, #0x80
    3b00:	cmp	w9, #0xa1
    3b04:	b.ne	3b30 <PyInit__codecs_iso2022@@Base+0x1fdc>  // b.any
    3b08:	ldr	x0, [sp]
    3b0c:	mov	w1, #0x2018                	// #8216
    3b10:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    3b14:	cmp	w0, #0x0
    3b18:	cset	w8, ge  // ge = tcont
    3b1c:	tbnz	w8, #0, 3b2c <PyInit__codecs_iso2022@@Base+0x1fd8>
    3b20:	mov	x8, #0xfffffffffffffffc    	// #-4
    3b24:	stur	x8, [x29, #-8]
    3b28:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3b2c:	b	3bbc <PyInit__codecs_iso2022@@Base+0x2068>
    3b30:	ldr	x8, [sp, #16]
    3b34:	ldr	x8, [x8]
    3b38:	ldrb	w9, [x8, #2]
    3b3c:	eor	w9, w9, #0x80
    3b40:	cmp	w9, #0xa2
    3b44:	b.ne	3b70 <PyInit__codecs_iso2022@@Base+0x201c>  // b.any
    3b48:	ldr	x0, [sp]
    3b4c:	mov	w1, #0x2019                	// #8217
    3b50:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    3b54:	cmp	w0, #0x0
    3b58:	cset	w8, ge  // ge = tcont
    3b5c:	tbnz	w8, #0, 3b6c <PyInit__codecs_iso2022@@Base+0x2018>
    3b60:	mov	x8, #0xfffffffffffffffc    	// #-4
    3b64:	stur	x8, [x29, #-8]
    3b68:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3b6c:	b	3bbc <PyInit__codecs_iso2022@@Base+0x2068>
    3b70:	ldr	x8, [sp, #16]
    3b74:	ldr	x8, [x8]
    3b78:	ldrb	w9, [x8, #2]
    3b7c:	eor	w9, w9, #0x80
    3b80:	cmp	w9, #0xaf
    3b84:	b.ne	3bb0 <PyInit__codecs_iso2022@@Base+0x205c>  // b.any
    3b88:	ldr	x0, [sp]
    3b8c:	mov	w1, #0x2015                	// #8213
    3b90:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    3b94:	cmp	w0, #0x0
    3b98:	cset	w8, ge  // ge = tcont
    3b9c:	tbnz	w8, #0, 3bac <PyInit__codecs_iso2022@@Base+0x2058>
    3ba0:	mov	x8, #0xfffffffffffffffc    	// #-4
    3ba4:	stur	x8, [x29, #-8]
    3ba8:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3bac:	b	3bbc <PyInit__codecs_iso2022@@Base+0x2068>
    3bb0:	mov	x8, #0x3                   	// #3
    3bb4:	stur	x8, [x29, #-8]
    3bb8:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3bbc:	b	3c2c <PyInit__codecs_iso2022@@Base+0x20d8>
    3bc0:	ldr	x8, [sp, #24]
    3bc4:	ldrb	w9, [x8, #2]
    3bc8:	cmp	w9, #0x42
    3bcc:	b.ne	3c20 <PyInit__codecs_iso2022@@Base+0x20cc>  // b.any
    3bd0:	ldr	x8, [sp, #16]
    3bd4:	ldr	x8, [x8]
    3bd8:	ldrb	w9, [x8, #2]
    3bdc:	and	w9, w9, #0x80
    3be0:	cbz	w9, 3bf0 <PyInit__codecs_iso2022@@Base+0x209c>
    3be4:	mov	x8, #0x3                   	// #3
    3be8:	stur	x8, [x29, #-8]
    3bec:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3bf0:	ldr	x0, [sp]
    3bf4:	ldr	x8, [sp, #16]
    3bf8:	ldr	x8, [x8]
    3bfc:	ldrb	w1, [x8, #2]
    3c00:	bl	1a20 <_PyUnicodeWriter_WriteChar@plt>
    3c04:	cmp	w0, #0x0
    3c08:	cset	w9, ge  // ge = tcont
    3c0c:	tbnz	w9, #0, 3c1c <PyInit__codecs_iso2022@@Base+0x20c8>
    3c10:	mov	x8, #0xfffffffffffffffc    	// #-4
    3c14:	stur	x8, [x29, #-8]
    3c18:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3c1c:	b	3c2c <PyInit__codecs_iso2022@@Base+0x20d8>
    3c20:	mov	x8, #0xfffffffffffffffd    	// #-3
    3c24:	stur	x8, [x29, #-8]
    3c28:	b	3c50 <PyInit__codecs_iso2022@@Base+0x20fc>
    3c2c:	ldr	x8, [sp, #16]
    3c30:	ldr	x9, [x8]
    3c34:	add	x9, x9, #0x3
    3c38:	str	x9, [x8]
    3c3c:	ldr	x8, [sp, #8]
    3c40:	ldr	x9, [x8]
    3c44:	subs	x9, x9, #0x3
    3c48:	str	x9, [x8]
    3c4c:	stur	xzr, [x29, #-8]
    3c50:	ldur	x0, [x29, #-8]
    3c54:	ldp	x29, x30, [sp, #48]
    3c58:	add	sp, sp, #0x40
    3c5c:	ret
    3c60:	sub	sp, sp, #0x20
    3c64:	stp	x29, x30, [sp, #16]
    3c68:	add	x29, sp, #0x10
    3c6c:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3c70:	add	x8, x8, #0x180
    3c74:	ldr	w9, [x8]
    3c78:	cbnz	w9, 3cd8 <PyInit__codecs_iso2022@@Base+0x2184>
    3c7c:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3c80:	add	x0, x0, #0x668
    3c84:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3c88:	add	x1, x1, #0x673
    3c8c:	adrp	x2, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3c90:	add	x2, x2, #0x188
    3c94:	mov	x8, xzr
    3c98:	mov	x3, x8
    3c9c:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    3ca0:	cbnz	w0, 3ccc <PyInit__codecs_iso2022@@Base+0x2178>
    3ca4:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3ca8:	add	x0, x0, #0x668
    3cac:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    3cb0:	add	x1, x1, #0x684
    3cb4:	mov	x8, xzr
    3cb8:	mov	x2, x8
    3cbc:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3cc0:	add	x3, x3, #0x190
    3cc4:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    3cc8:	cbz	w0, 3cd8 <PyInit__codecs_iso2022@@Base+0x2184>
    3ccc:	mov	w8, #0xffffffff            	// #-1
    3cd0:	stur	w8, [x29, #-4]
    3cd4:	b	3cec <PyInit__codecs_iso2022@@Base+0x2198>
    3cd8:	mov	w8, #0x1                   	// #1
    3cdc:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3ce0:	add	x9, x9, #0x180
    3ce4:	str	w8, [x9]
    3ce8:	stur	wzr, [x29, #-4]
    3cec:	ldur	w0, [x29, #-4]
    3cf0:	ldp	x29, x30, [sp, #16]
    3cf4:	add	sp, sp, #0x20
    3cf8:	ret
    3cfc:	sub	sp, sp, #0x20
    3d00:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3d04:	add	x8, x8, #0x190
    3d08:	str	x0, [sp, #16]
    3d0c:	ldr	x9, [sp, #16]
    3d10:	ldrb	w10, [x9]
    3d14:	cmp	w10, #0x21
    3d18:	str	x8, [sp]
    3d1c:	b.ne	3d3c <PyInit__codecs_iso2022@@Base+0x21e8>  // b.any
    3d20:	ldr	x8, [sp, #16]
    3d24:	ldrb	w9, [x8, #1]
    3d28:	cmp	w9, #0x40
    3d2c:	b.ne	3d3c <PyInit__codecs_iso2022@@Base+0x21e8>  // b.any
    3d30:	mov	w8, #0xff3c                	// #65340
    3d34:	str	w8, [sp, #28]
    3d38:	b	3e40 <PyInit__codecs_iso2022@@Base+0x22ec>
    3d3c:	ldr	x8, [sp]
    3d40:	ldr	x9, [x8]
    3d44:	ldr	x10, [sp, #16]
    3d48:	ldrb	w11, [x10]
    3d4c:	mov	w10, w11
    3d50:	mov	x12, #0x10                  	// #16
    3d54:	mul	x10, x12, x10
    3d58:	add	x9, x9, x10
    3d5c:	ldr	x9, [x9]
    3d60:	cbz	x9, 3e38 <PyInit__codecs_iso2022@@Base+0x22e4>
    3d64:	ldr	x8, [sp, #16]
    3d68:	ldrb	w9, [x8, #1]
    3d6c:	ldr	x8, [sp]
    3d70:	ldr	x10, [x8]
    3d74:	ldr	x11, [sp, #16]
    3d78:	ldrb	w12, [x11]
    3d7c:	mov	w11, w12
    3d80:	mov	x13, #0x10                  	// #16
    3d84:	mul	x11, x13, x11
    3d88:	add	x10, x10, x11
    3d8c:	ldrb	w12, [x10, #8]
    3d90:	cmp	w9, w12
    3d94:	b.lt	3e38 <PyInit__codecs_iso2022@@Base+0x22e4>  // b.tstop
    3d98:	ldr	x8, [sp, #16]
    3d9c:	ldrb	w9, [x8, #1]
    3da0:	ldr	x8, [sp]
    3da4:	ldr	x10, [x8]
    3da8:	ldr	x11, [sp, #16]
    3dac:	ldrb	w12, [x11]
    3db0:	mov	w11, w12
    3db4:	mov	x13, #0x10                  	// #16
    3db8:	mul	x11, x13, x11
    3dbc:	add	x10, x10, x11
    3dc0:	ldrb	w12, [x10, #9]
    3dc4:	cmp	w9, w12
    3dc8:	b.gt	3e38 <PyInit__codecs_iso2022@@Base+0x22e4>
    3dcc:	ldr	x8, [sp]
    3dd0:	ldr	x9, [x8]
    3dd4:	ldr	x10, [sp, #16]
    3dd8:	ldrb	w11, [x10]
    3ddc:	mov	w10, w11
    3de0:	mov	x12, #0x10                  	// #16
    3de4:	mul	x10, x12, x10
    3de8:	add	x9, x9, x10
    3dec:	ldr	x9, [x9]
    3df0:	ldr	x10, [sp, #16]
    3df4:	ldrb	w11, [x10, #1]
    3df8:	ldr	x10, [x8]
    3dfc:	ldr	x13, [sp, #16]
    3e00:	ldrb	w14, [x13]
    3e04:	mov	w13, w14
    3e08:	mul	x12, x12, x13
    3e0c:	add	x10, x10, x12
    3e10:	ldrb	w14, [x10, #8]
    3e14:	subs	w11, w11, w14
    3e18:	ldrh	w11, [x9, w11, sxtw #1]
    3e1c:	str	w11, [sp, #12]
    3e20:	mov	w14, #0xfffe                	// #65534
    3e24:	cmp	w11, w14
    3e28:	b.eq	3e38 <PyInit__codecs_iso2022@@Base+0x22e4>  // b.none
    3e2c:	ldr	w8, [sp, #12]
    3e30:	str	w8, [sp, #28]
    3e34:	b	3e40 <PyInit__codecs_iso2022@@Base+0x22ec>
    3e38:	mov	w8, #0xffff                	// #65535
    3e3c:	str	w8, [sp, #28]
    3e40:	ldr	w0, [sp, #28]
    3e44:	add	sp, sp, #0x20
    3e48:	ret
    3e4c:	sub	sp, sp, #0x30
    3e50:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    3e54:	add	x8, x8, #0x188
    3e58:	str	x0, [sp, #32]
    3e5c:	str	x1, [sp, #24]
    3e60:	ldr	x9, [sp, #32]
    3e64:	ldr	w10, [x9]
    3e68:	cmp	w10, #0x10, lsl #12
    3e6c:	str	x8, [sp, #8]
    3e70:	b.cs	3fdc <PyInit__codecs_iso2022@@Base+0x2488>  // b.hs, b.nlast
    3e74:	ldr	x8, [sp, #32]
    3e78:	ldr	w9, [x8]
    3e7c:	mov	w10, #0xff3c                	// #65340
    3e80:	cmp	w9, w10
    3e84:	b.ne	3e94 <PyInit__codecs_iso2022@@Base+0x2340>  // b.any
    3e88:	mov	w8, #0x2140                	// #8512
    3e8c:	strh	w8, [sp, #46]
    3e90:	b	3fe4 <PyInit__codecs_iso2022@@Base+0x2490>
    3e94:	ldr	x8, [sp, #8]
    3e98:	ldr	x9, [x8]
    3e9c:	ldr	x10, [sp, #32]
    3ea0:	ldr	w11, [x10]
    3ea4:	lsr	w11, w11, #8
    3ea8:	mov	w10, w11
    3eac:	ubfx	x10, x10, #0, #32
    3eb0:	mov	x12, #0x10                  	// #16
    3eb4:	mul	x10, x12, x10
    3eb8:	add	x9, x9, x10
    3ebc:	ldr	x9, [x9]
    3ec0:	cbz	x9, 3fdc <PyInit__codecs_iso2022@@Base+0x2488>
    3ec4:	ldr	x8, [sp, #32]
    3ec8:	ldr	w9, [x8]
    3ecc:	and	w9, w9, #0xff
    3ed0:	ldr	x8, [sp, #8]
    3ed4:	ldr	x10, [x8]
    3ed8:	ldr	x11, [sp, #32]
    3edc:	ldr	w12, [x11]
    3ee0:	mov	x11, #0x8                   	// #8
    3ee4:	lsr	w11, w12, w11
    3ee8:	mov	w13, w11
    3eec:	ubfx	x13, x13, #0, #32
    3ef0:	mov	x14, #0x10                  	// #16
    3ef4:	mul	x13, x14, x13
    3ef8:	add	x10, x10, x13
    3efc:	ldrb	w11, [x10, #8]
    3f00:	cmp	w9, w11
    3f04:	b.cc	3fdc <PyInit__codecs_iso2022@@Base+0x2488>  // b.lo, b.ul, b.last
    3f08:	ldr	x8, [sp, #32]
    3f0c:	ldr	w9, [x8]
    3f10:	and	w9, w9, #0xff
    3f14:	ldr	x8, [sp, #8]
    3f18:	ldr	x10, [x8]
    3f1c:	ldr	x11, [sp, #32]
    3f20:	ldr	w12, [x11]
    3f24:	lsr	w12, w12, #8
    3f28:	mov	w11, w12
    3f2c:	ubfx	x11, x11, #0, #32
    3f30:	mov	x13, #0x10                  	// #16
    3f34:	mul	x11, x13, x11
    3f38:	add	x10, x10, x11
    3f3c:	ldrb	w12, [x10, #9]
    3f40:	cmp	w9, w12
    3f44:	b.hi	3fdc <PyInit__codecs_iso2022@@Base+0x2488>  // b.pmore
    3f48:	ldr	x8, [sp, #8]
    3f4c:	ldr	x9, [x8]
    3f50:	ldr	x10, [sp, #32]
    3f54:	ldr	w11, [x10]
    3f58:	mov	x10, #0x8                   	// #8
    3f5c:	mov	x0, x10
    3f60:	lsr	w11, w11, w0
    3f64:	mov	w12, w11
    3f68:	ubfx	x12, x12, #0, #32
    3f6c:	mov	x13, #0x10                  	// #16
    3f70:	mul	x12, x13, x12
    3f74:	add	x9, x9, x12
    3f78:	ldr	x9, [x9]
    3f7c:	ldr	x12, [sp, #32]
    3f80:	ldr	w11, [x12]
    3f84:	and	w11, w11, #0xff
    3f88:	ldr	x12, [x8]
    3f8c:	ldr	x14, [sp, #32]
    3f90:	ldr	w15, [x14]
    3f94:	lsr	w10, w15, w10
    3f98:	mov	w14, w10
    3f9c:	ubfx	x14, x14, #0, #32
    3fa0:	mul	x13, x13, x14
    3fa4:	add	x12, x12, x13
    3fa8:	ldrb	w10, [x12, #8]
    3fac:	subs	w10, w11, w10
    3fb0:	ldrh	w10, [x9, w10, uxtw #1]
    3fb4:	strh	w10, [sp, #22]
    3fb8:	mov	w11, #0xffff                	// #65535
    3fbc:	cmp	w10, w11
    3fc0:	b.eq	3fdc <PyInit__codecs_iso2022@@Base+0x2488>  // b.none
    3fc4:	ldrh	w8, [sp, #22]
    3fc8:	and	w8, w8, #0x8000
    3fcc:	cbnz	w8, 3fdc <PyInit__codecs_iso2022@@Base+0x2488>
    3fd0:	ldrh	w8, [sp, #22]
    3fd4:	strh	w8, [sp, #46]
    3fd8:	b	3fe4 <PyInit__codecs_iso2022@@Base+0x2490>
    3fdc:	mov	w8, #0xffff                	// #65535
    3fe0:	strh	w8, [sp, #46]
    3fe4:	ldrh	w0, [sp, #46]
    3fe8:	add	sp, sp, #0x30
    3fec:	ret
    3ff0:	sub	sp, sp, #0x20
    3ff4:	str	x0, [sp, #16]
    3ff8:	ldr	x8, [sp, #16]
    3ffc:	ldrb	w9, [x8]
    4000:	cmp	w9, #0x5c
    4004:	b.ge	4018 <PyInit__codecs_iso2022@@Base+0x24c4>  // b.tcont
    4008:	ldr	x8, [sp, #16]
    400c:	ldrb	w9, [x8]
    4010:	str	w9, [sp, #12]
    4014:	b	4098 <PyInit__codecs_iso2022@@Base+0x2544>
    4018:	ldr	x8, [sp, #16]
    401c:	ldrb	w9, [x8]
    4020:	cmp	w9, #0x5c
    4024:	b.ne	4034 <PyInit__codecs_iso2022@@Base+0x24e0>  // b.any
    4028:	mov	w8, #0xa5                  	// #165
    402c:	str	w8, [sp, #12]
    4030:	b	4098 <PyInit__codecs_iso2022@@Base+0x2544>
    4034:	ldr	x8, [sp, #16]
    4038:	ldrb	w9, [x8]
    403c:	cmp	w9, #0x7e
    4040:	b.ge	4054 <PyInit__codecs_iso2022@@Base+0x2500>  // b.tcont
    4044:	ldr	x8, [sp, #16]
    4048:	ldrb	w9, [x8]
    404c:	str	w9, [sp, #12]
    4050:	b	4098 <PyInit__codecs_iso2022@@Base+0x2544>
    4054:	ldr	x8, [sp, #16]
    4058:	ldrb	w9, [x8]
    405c:	cmp	w9, #0x7e
    4060:	b.ne	4070 <PyInit__codecs_iso2022@@Base+0x251c>  // b.any
    4064:	mov	w8, #0x203e                	// #8254
    4068:	str	w8, [sp, #12]
    406c:	b	4098 <PyInit__codecs_iso2022@@Base+0x2544>
    4070:	ldr	x8, [sp, #16]
    4074:	ldrb	w9, [x8]
    4078:	cmp	w9, #0x7f
    407c:	b.ne	408c <PyInit__codecs_iso2022@@Base+0x2538>  // b.any
    4080:	mov	w8, #0x7f                  	// #127
    4084:	str	w8, [sp, #12]
    4088:	b	4098 <PyInit__codecs_iso2022@@Base+0x2544>
    408c:	mov	w8, #0xffff                	// #65535
    4090:	str	w8, [sp, #28]
    4094:	b	40a0 <PyInit__codecs_iso2022@@Base+0x254c>
    4098:	ldr	w8, [sp, #12]
    409c:	str	w8, [sp, #28]
    40a0:	ldr	w0, [sp, #28]
    40a4:	add	sp, sp, #0x20
    40a8:	ret
    40ac:	sub	sp, sp, #0x20
    40b0:	str	x0, [sp, #16]
    40b4:	str	x1, [sp, #8]
    40b8:	ldr	x8, [sp, #16]
    40bc:	ldr	w9, [x8]
    40c0:	cmp	w9, #0x80
    40c4:	b.cs	40f8 <PyInit__codecs_iso2022@@Base+0x25a4>  // b.hs, b.nlast
    40c8:	ldr	x8, [sp, #16]
    40cc:	ldr	w9, [x8]
    40d0:	cmp	w9, #0x5c
    40d4:	b.eq	40f8 <PyInit__codecs_iso2022@@Base+0x25a4>  // b.none
    40d8:	ldr	x8, [sp, #16]
    40dc:	ldr	w9, [x8]
    40e0:	cmp	w9, #0x7e
    40e4:	b.eq	40f8 <PyInit__codecs_iso2022@@Base+0x25a4>  // b.none
    40e8:	ldr	x8, [sp, #16]
    40ec:	ldr	w9, [x8]
    40f0:	strh	w9, [sp, #6]
    40f4:	b	4140 <PyInit__codecs_iso2022@@Base+0x25ec>
    40f8:	ldr	x8, [sp, #16]
    40fc:	ldr	w9, [x8]
    4100:	cmp	w9, #0xa5
    4104:	b.ne	4114 <PyInit__codecs_iso2022@@Base+0x25c0>  // b.any
    4108:	mov	w8, #0x5c                  	// #92
    410c:	strh	w8, [sp, #6]
    4110:	b	4140 <PyInit__codecs_iso2022@@Base+0x25ec>
    4114:	ldr	x8, [sp, #16]
    4118:	ldr	w9, [x8]
    411c:	mov	w10, #0x203e                	// #8254
    4120:	cmp	w9, w10
    4124:	b.ne	4134 <PyInit__codecs_iso2022@@Base+0x25e0>  // b.any
    4128:	mov	w8, #0x7e                  	// #126
    412c:	strh	w8, [sp, #6]
    4130:	b	4140 <PyInit__codecs_iso2022@@Base+0x25ec>
    4134:	mov	w8, #0xffff                	// #65535
    4138:	strh	w8, [sp, #30]
    413c:	b	4148 <PyInit__codecs_iso2022@@Base+0x25f4>
    4140:	ldrh	w8, [sp, #6]
    4144:	strh	w8, [sp, #30]
    4148:	ldrh	w0, [sp, #30]
    414c:	add	sp, sp, #0x20
    4150:	ret
    4154:	sub	sp, sp, #0x20
    4158:	stp	x29, x30, [sp, #16]
    415c:	add	x29, sp, #0x10
    4160:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4164:	add	x8, x8, #0x198
    4168:	ldr	w9, [x8]
    416c:	cbnz	w9, 41cc <PyInit__codecs_iso2022@@Base+0x2678>
    4170:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    4174:	add	x0, x0, #0x668
    4178:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    417c:	add	x1, x1, #0x673
    4180:	adrp	x2, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4184:	add	x2, x2, #0x188
    4188:	mov	x8, xzr
    418c:	mov	x3, x8
    4190:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    4194:	cbnz	w0, 41c0 <PyInit__codecs_iso2022@@Base+0x266c>
    4198:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    419c:	add	x0, x0, #0x668
    41a0:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    41a4:	add	x1, x1, #0x693
    41a8:	mov	x8, xzr
    41ac:	mov	x2, x8
    41b0:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    41b4:	add	x3, x3, #0x1a0
    41b8:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    41bc:	cbz	w0, 41cc <PyInit__codecs_iso2022@@Base+0x2678>
    41c0:	mov	w8, #0xffffffff            	// #-1
    41c4:	stur	w8, [x29, #-4]
    41c8:	b	41e0 <PyInit__codecs_iso2022@@Base+0x268c>
    41cc:	mov	w8, #0x1                   	// #1
    41d0:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    41d4:	add	x9, x9, #0x198
    41d8:	str	w8, [x9]
    41dc:	stur	wzr, [x29, #-4]
    41e0:	ldur	w0, [x29, #-4]
    41e4:	ldp	x29, x30, [sp, #16]
    41e8:	add	sp, sp, #0x20
    41ec:	ret
    41f0:	sub	sp, sp, #0x20
    41f4:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    41f8:	add	x8, x8, #0x1a0
    41fc:	str	x0, [sp, #16]
    4200:	ldr	x9, [x8]
    4204:	ldr	x10, [sp, #16]
    4208:	ldrb	w11, [x10]
    420c:	mov	w10, w11
    4210:	mov	x12, #0x10                  	// #16
    4214:	mul	x10, x12, x10
    4218:	add	x9, x9, x10
    421c:	ldr	x9, [x9]
    4220:	str	x8, [sp]
    4224:	cbz	x9, 42fc <PyInit__codecs_iso2022@@Base+0x27a8>
    4228:	ldr	x8, [sp, #16]
    422c:	ldrb	w9, [x8, #1]
    4230:	ldr	x8, [sp]
    4234:	ldr	x10, [x8]
    4238:	ldr	x11, [sp, #16]
    423c:	ldrb	w12, [x11]
    4240:	mov	w11, w12
    4244:	mov	x13, #0x10                  	// #16
    4248:	mul	x11, x13, x11
    424c:	add	x10, x10, x11
    4250:	ldrb	w12, [x10, #8]
    4254:	cmp	w9, w12
    4258:	b.lt	42fc <PyInit__codecs_iso2022@@Base+0x27a8>  // b.tstop
    425c:	ldr	x8, [sp, #16]
    4260:	ldrb	w9, [x8, #1]
    4264:	ldr	x8, [sp]
    4268:	ldr	x10, [x8]
    426c:	ldr	x11, [sp, #16]
    4270:	ldrb	w12, [x11]
    4274:	mov	w11, w12
    4278:	mov	x13, #0x10                  	// #16
    427c:	mul	x11, x13, x11
    4280:	add	x10, x10, x11
    4284:	ldrb	w12, [x10, #9]
    4288:	cmp	w9, w12
    428c:	b.gt	42fc <PyInit__codecs_iso2022@@Base+0x27a8>
    4290:	ldr	x8, [sp]
    4294:	ldr	x9, [x8]
    4298:	ldr	x10, [sp, #16]
    429c:	ldrb	w11, [x10]
    42a0:	mov	w10, w11
    42a4:	mov	x12, #0x10                  	// #16
    42a8:	mul	x10, x12, x10
    42ac:	add	x9, x9, x10
    42b0:	ldr	x9, [x9]
    42b4:	ldr	x10, [sp, #16]
    42b8:	ldrb	w11, [x10, #1]
    42bc:	ldr	x10, [x8]
    42c0:	ldr	x13, [sp, #16]
    42c4:	ldrb	w14, [x13]
    42c8:	mov	w13, w14
    42cc:	mul	x12, x12, x13
    42d0:	add	x10, x10, x12
    42d4:	ldrb	w14, [x10, #8]
    42d8:	subs	w11, w11, w14
    42dc:	ldrh	w11, [x9, w11, sxtw #1]
    42e0:	str	w11, [sp, #12]
    42e4:	mov	w14, #0xfffe                	// #65534
    42e8:	cmp	w11, w14
    42ec:	b.eq	42fc <PyInit__codecs_iso2022@@Base+0x27a8>  // b.none
    42f0:	ldr	w8, [sp, #12]
    42f4:	str	w8, [sp, #28]
    42f8:	b	4304 <PyInit__codecs_iso2022@@Base+0x27b0>
    42fc:	mov	w8, #0xffff                	// #65535
    4300:	str	w8, [sp, #28]
    4304:	ldr	w0, [sp, #28]
    4308:	add	sp, sp, #0x20
    430c:	ret
    4310:	sub	sp, sp, #0x30
    4314:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4318:	add	x8, x8, #0x188
    431c:	str	x0, [sp, #32]
    4320:	str	x1, [sp, #24]
    4324:	ldr	x9, [sp, #32]
    4328:	ldr	w10, [x9]
    432c:	cmp	w10, #0x10, lsl #12
    4330:	str	x8, [sp, #8]
    4334:	b.cs	4484 <PyInit__codecs_iso2022@@Base+0x2930>  // b.hs, b.nlast
    4338:	ldr	x8, [sp, #8]
    433c:	ldr	x9, [x8]
    4340:	ldr	x10, [sp, #32]
    4344:	ldr	w11, [x10]
    4348:	lsr	w11, w11, #8
    434c:	mov	w10, w11
    4350:	ubfx	x10, x10, #0, #32
    4354:	mov	x12, #0x10                  	// #16
    4358:	mul	x10, x12, x10
    435c:	add	x9, x9, x10
    4360:	ldr	x9, [x9]
    4364:	cbz	x9, 4484 <PyInit__codecs_iso2022@@Base+0x2930>
    4368:	ldr	x8, [sp, #32]
    436c:	ldr	w9, [x8]
    4370:	and	w9, w9, #0xff
    4374:	ldr	x8, [sp, #8]
    4378:	ldr	x10, [x8]
    437c:	ldr	x11, [sp, #32]
    4380:	ldr	w12, [x11]
    4384:	mov	x11, #0x8                   	// #8
    4388:	lsr	w11, w12, w11
    438c:	mov	w13, w11
    4390:	ubfx	x13, x13, #0, #32
    4394:	mov	x14, #0x10                  	// #16
    4398:	mul	x13, x14, x13
    439c:	add	x10, x10, x13
    43a0:	ldrb	w11, [x10, #8]
    43a4:	cmp	w9, w11
    43a8:	b.cc	4484 <PyInit__codecs_iso2022@@Base+0x2930>  // b.lo, b.ul, b.last
    43ac:	ldr	x8, [sp, #32]
    43b0:	ldr	w9, [x8]
    43b4:	and	w9, w9, #0xff
    43b8:	ldr	x8, [sp, #8]
    43bc:	ldr	x10, [x8]
    43c0:	ldr	x11, [sp, #32]
    43c4:	ldr	w12, [x11]
    43c8:	lsr	w12, w12, #8
    43cc:	mov	w11, w12
    43d0:	ubfx	x11, x11, #0, #32
    43d4:	mov	x13, #0x10                  	// #16
    43d8:	mul	x11, x13, x11
    43dc:	add	x10, x10, x11
    43e0:	ldrb	w12, [x10, #9]
    43e4:	cmp	w9, w12
    43e8:	b.hi	4484 <PyInit__codecs_iso2022@@Base+0x2930>  // b.pmore
    43ec:	ldr	x8, [sp, #8]
    43f0:	ldr	x9, [x8]
    43f4:	ldr	x10, [sp, #32]
    43f8:	ldr	w11, [x10]
    43fc:	mov	x10, #0x8                   	// #8
    4400:	mov	x0, x10
    4404:	lsr	w11, w11, w0
    4408:	mov	w12, w11
    440c:	ubfx	x12, x12, #0, #32
    4410:	mov	x13, #0x10                  	// #16
    4414:	mul	x12, x13, x12
    4418:	add	x9, x9, x12
    441c:	ldr	x9, [x9]
    4420:	ldr	x12, [sp, #32]
    4424:	ldr	w11, [x12]
    4428:	and	w11, w11, #0xff
    442c:	ldr	x12, [x8]
    4430:	ldr	x14, [sp, #32]
    4434:	ldr	w15, [x14]
    4438:	lsr	w10, w15, w10
    443c:	mov	w14, w10
    4440:	ubfx	x14, x14, #0, #32
    4444:	mul	x13, x13, x14
    4448:	add	x12, x12, x13
    444c:	ldrb	w10, [x12, #8]
    4450:	subs	w10, w11, w10
    4454:	ldrh	w10, [x9, w10, uxtw #1]
    4458:	strh	w10, [sp, #22]
    445c:	mov	w11, #0xffff                	// #65535
    4460:	cmp	w10, w11
    4464:	b.eq	4484 <PyInit__codecs_iso2022@@Base+0x2930>  // b.none
    4468:	ldrh	w8, [sp, #22]
    446c:	and	w8, w8, #0x8000
    4470:	cbz	w8, 4484 <PyInit__codecs_iso2022@@Base+0x2930>
    4474:	ldrh	w8, [sp, #22]
    4478:	and	w8, w8, #0x7fff
    447c:	strh	w8, [sp, #46]
    4480:	b	448c <PyInit__codecs_iso2022@@Base+0x2938>
    4484:	mov	w8, #0xffff                	// #65535
    4488:	strh	w8, [sp, #46]
    448c:	ldrh	w0, [sp, #46]
    4490:	add	sp, sp, #0x30
    4494:	ret
    4498:	sub	sp, sp, #0x20
    449c:	stp	x29, x30, [sp, #16]
    44a0:	add	x29, sp, #0x10
    44a4:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    44a8:	add	x8, x8, #0x1a8
    44ac:	ldr	w9, [x8]
    44b0:	cbnz	w9, 4510 <PyInit__codecs_iso2022@@Base+0x29bc>
    44b4:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    44b8:	add	x0, x0, #0x6a2
    44bc:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    44c0:	add	x1, x1, #0x6ad
    44c4:	adrp	x2, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    44c8:	add	x2, x2, #0x1b0
    44cc:	mov	x8, xzr
    44d0:	mov	x3, x8
    44d4:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    44d8:	cbnz	w0, 4504 <PyInit__codecs_iso2022@@Base+0x29b0>
    44dc:	adrp	x0, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    44e0:	add	x0, x0, #0x6a2
    44e4:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    44e8:	add	x1, x1, #0x6bc
    44ec:	mov	x8, xzr
    44f0:	mov	x2, x8
    44f4:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    44f8:	add	x3, x3, #0x1b8
    44fc:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    4500:	cbz	w0, 4510 <PyInit__codecs_iso2022@@Base+0x29bc>
    4504:	mov	w8, #0xffffffff            	// #-1
    4508:	stur	w8, [x29, #-4]
    450c:	b	4524 <PyInit__codecs_iso2022@@Base+0x29d0>
    4510:	mov	w8, #0x1                   	// #1
    4514:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4518:	add	x9, x9, #0x1a8
    451c:	str	w8, [x9]
    4520:	stur	wzr, [x29, #-4]
    4524:	ldur	w0, [x29, #-4]
    4528:	ldp	x29, x30, [sp, #16]
    452c:	add	sp, sp, #0x20
    4530:	ret
    4534:	sub	sp, sp, #0x20
    4538:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    453c:	add	x8, x8, #0x1b8
    4540:	str	x0, [sp, #16]
    4544:	ldr	x9, [x8]
    4548:	ldr	x10, [sp, #16]
    454c:	ldrb	w11, [x10]
    4550:	mov	w10, w11
    4554:	mov	x12, #0x10                  	// #16
    4558:	mul	x10, x12, x10
    455c:	add	x9, x9, x10
    4560:	ldr	x9, [x9]
    4564:	str	x8, [sp]
    4568:	cbz	x9, 4640 <PyInit__codecs_iso2022@@Base+0x2aec>
    456c:	ldr	x8, [sp, #16]
    4570:	ldrb	w9, [x8, #1]
    4574:	ldr	x8, [sp]
    4578:	ldr	x10, [x8]
    457c:	ldr	x11, [sp, #16]
    4580:	ldrb	w12, [x11]
    4584:	mov	w11, w12
    4588:	mov	x13, #0x10                  	// #16
    458c:	mul	x11, x13, x11
    4590:	add	x10, x10, x11
    4594:	ldrb	w12, [x10, #8]
    4598:	cmp	w9, w12
    459c:	b.lt	4640 <PyInit__codecs_iso2022@@Base+0x2aec>  // b.tstop
    45a0:	ldr	x8, [sp, #16]
    45a4:	ldrb	w9, [x8, #1]
    45a8:	ldr	x8, [sp]
    45ac:	ldr	x10, [x8]
    45b0:	ldr	x11, [sp, #16]
    45b4:	ldrb	w12, [x11]
    45b8:	mov	w11, w12
    45bc:	mov	x13, #0x10                  	// #16
    45c0:	mul	x11, x13, x11
    45c4:	add	x10, x10, x11
    45c8:	ldrb	w12, [x10, #9]
    45cc:	cmp	w9, w12
    45d0:	b.gt	4640 <PyInit__codecs_iso2022@@Base+0x2aec>
    45d4:	ldr	x8, [sp]
    45d8:	ldr	x9, [x8]
    45dc:	ldr	x10, [sp, #16]
    45e0:	ldrb	w11, [x10]
    45e4:	mov	w10, w11
    45e8:	mov	x12, #0x10                  	// #16
    45ec:	mul	x10, x12, x10
    45f0:	add	x9, x9, x10
    45f4:	ldr	x9, [x9]
    45f8:	ldr	x10, [sp, #16]
    45fc:	ldrb	w11, [x10, #1]
    4600:	ldr	x10, [x8]
    4604:	ldr	x13, [sp, #16]
    4608:	ldrb	w14, [x13]
    460c:	mov	w13, w14
    4610:	mul	x12, x12, x13
    4614:	add	x10, x10, x12
    4618:	ldrb	w14, [x10, #8]
    461c:	subs	w11, w11, w14
    4620:	ldrh	w11, [x9, w11, sxtw #1]
    4624:	str	w11, [sp, #12]
    4628:	mov	w14, #0xfffe                	// #65534
    462c:	cmp	w11, w14
    4630:	b.eq	4640 <PyInit__codecs_iso2022@@Base+0x2aec>  // b.none
    4634:	ldr	w8, [sp, #12]
    4638:	str	w8, [sp, #28]
    463c:	b	4648 <PyInit__codecs_iso2022@@Base+0x2af4>
    4640:	mov	w8, #0xffff                	// #65535
    4644:	str	w8, [sp, #28]
    4648:	ldr	w0, [sp, #28]
    464c:	add	sp, sp, #0x20
    4650:	ret
    4654:	sub	sp, sp, #0x30
    4658:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    465c:	add	x8, x8, #0x1b0
    4660:	str	x0, [sp, #32]
    4664:	str	x1, [sp, #24]
    4668:	ldr	x9, [sp, #32]
    466c:	ldr	w10, [x9]
    4670:	cmp	w10, #0x10, lsl #12
    4674:	str	x8, [sp, #8]
    4678:	b.cs	47c4 <PyInit__codecs_iso2022@@Base+0x2c70>  // b.hs, b.nlast
    467c:	ldr	x8, [sp, #8]
    4680:	ldr	x9, [x8]
    4684:	ldr	x10, [sp, #32]
    4688:	ldr	w11, [x10]
    468c:	lsr	w11, w11, #8
    4690:	mov	w10, w11
    4694:	ubfx	x10, x10, #0, #32
    4698:	mov	x12, #0x10                  	// #16
    469c:	mul	x10, x12, x10
    46a0:	add	x9, x9, x10
    46a4:	ldr	x9, [x9]
    46a8:	cbz	x9, 47c4 <PyInit__codecs_iso2022@@Base+0x2c70>
    46ac:	ldr	x8, [sp, #32]
    46b0:	ldr	w9, [x8]
    46b4:	and	w9, w9, #0xff
    46b8:	ldr	x8, [sp, #8]
    46bc:	ldr	x10, [x8]
    46c0:	ldr	x11, [sp, #32]
    46c4:	ldr	w12, [x11]
    46c8:	mov	x11, #0x8                   	// #8
    46cc:	lsr	w11, w12, w11
    46d0:	mov	w13, w11
    46d4:	ubfx	x13, x13, #0, #32
    46d8:	mov	x14, #0x10                  	// #16
    46dc:	mul	x13, x14, x13
    46e0:	add	x10, x10, x13
    46e4:	ldrb	w11, [x10, #8]
    46e8:	cmp	w9, w11
    46ec:	b.cc	47c4 <PyInit__codecs_iso2022@@Base+0x2c70>  // b.lo, b.ul, b.last
    46f0:	ldr	x8, [sp, #32]
    46f4:	ldr	w9, [x8]
    46f8:	and	w9, w9, #0xff
    46fc:	ldr	x8, [sp, #8]
    4700:	ldr	x10, [x8]
    4704:	ldr	x11, [sp, #32]
    4708:	ldr	w12, [x11]
    470c:	lsr	w12, w12, #8
    4710:	mov	w11, w12
    4714:	ubfx	x11, x11, #0, #32
    4718:	mov	x13, #0x10                  	// #16
    471c:	mul	x11, x13, x11
    4720:	add	x10, x10, x11
    4724:	ldrb	w12, [x10, #9]
    4728:	cmp	w9, w12
    472c:	b.hi	47c4 <PyInit__codecs_iso2022@@Base+0x2c70>  // b.pmore
    4730:	ldr	x8, [sp, #8]
    4734:	ldr	x9, [x8]
    4738:	ldr	x10, [sp, #32]
    473c:	ldr	w11, [x10]
    4740:	mov	x10, #0x8                   	// #8
    4744:	mov	x0, x10
    4748:	lsr	w11, w11, w0
    474c:	mov	w12, w11
    4750:	ubfx	x12, x12, #0, #32
    4754:	mov	x13, #0x10                  	// #16
    4758:	mul	x12, x13, x12
    475c:	add	x9, x9, x12
    4760:	ldr	x9, [x9]
    4764:	ldr	x12, [sp, #32]
    4768:	ldr	w11, [x12]
    476c:	and	w11, w11, #0xff
    4770:	ldr	x12, [x8]
    4774:	ldr	x14, [sp, #32]
    4778:	ldr	w15, [x14]
    477c:	lsr	w10, w15, w10
    4780:	mov	w14, w10
    4784:	ubfx	x14, x14, #0, #32
    4788:	mul	x13, x13, x14
    478c:	add	x12, x12, x13
    4790:	ldrb	w10, [x12, #8]
    4794:	subs	w10, w11, w10
    4798:	ldrh	w10, [x9, w10, uxtw #1]
    479c:	strh	w10, [sp, #22]
    47a0:	mov	w11, #0xffff                	// #65535
    47a4:	cmp	w10, w11
    47a8:	b.eq	47c4 <PyInit__codecs_iso2022@@Base+0x2c70>  // b.none
    47ac:	ldrh	w8, [sp, #22]
    47b0:	and	w8, w8, #0x8000
    47b4:	cbnz	w8, 47c4 <PyInit__codecs_iso2022@@Base+0x2c70>
    47b8:	ldrh	w8, [sp, #22]
    47bc:	strh	w8, [sp, #46]
    47c0:	b	47cc <PyInit__codecs_iso2022@@Base+0x2c78>
    47c4:	mov	w8, #0xffff                	// #65535
    47c8:	strh	w8, [sp, #46]
    47cc:	ldrh	w0, [sp, #46]
    47d0:	add	sp, sp, #0x30
    47d4:	ret
    47d8:	sub	sp, sp, #0x10
    47dc:	mov	w8, #0xffff                	// #65535
    47e0:	str	x0, [sp, #8]
    47e4:	mov	w0, w8
    47e8:	add	sp, sp, #0x10
    47ec:	ret
    47f0:	sub	sp, sp, #0x10
    47f4:	str	x0, [sp, #8]
    47f8:	str	x1, [sp]
    47fc:	mov	w0, #0xffffffff            	// #-1
    4800:	add	sp, sp, #0x10
    4804:	ret
    4808:	sub	sp, sp, #0x20
    480c:	stp	x29, x30, [sp, #16]
    4810:	add	x29, sp, #0x10
    4814:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4818:	add	x8, x8, #0x1c0
    481c:	adrp	x9, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    4820:	add	x9, x9, #0x668
    4824:	ldr	w10, [x8]
    4828:	str	x9, [sp]
    482c:	cbnz	w10, 4940 <PyInit__codecs_iso2022@@Base+0x2dec>
    4830:	bl	3c60 <PyInit__codecs_iso2022@@Base+0x210c>
    4834:	cbnz	w0, 4934 <PyInit__codecs_iso2022@@Base+0x2de0>
    4838:	ldr	x0, [sp]
    483c:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    4840:	add	x1, x1, #0x6c9
    4844:	adrp	x2, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4848:	add	x2, x2, #0x1c8
    484c:	mov	x8, xzr
    4850:	mov	x3, x8
    4854:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    4858:	cbnz	w0, 4934 <PyInit__codecs_iso2022@@Base+0x2de0>
    485c:	ldr	x0, [sp]
    4860:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    4864:	add	x1, x1, #0x6dc
    4868:	mov	x8, xzr
    486c:	mov	x2, x8
    4870:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4874:	add	x3, x3, #0x1d0
    4878:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    487c:	cbnz	w0, 4934 <PyInit__codecs_iso2022@@Base+0x2de0>
    4880:	ldr	x0, [sp]
    4884:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    4888:	add	x1, x1, #0x6f1
    488c:	mov	x8, xzr
    4890:	mov	x2, x8
    4894:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4898:	add	x3, x3, #0x1d8
    489c:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    48a0:	cbnz	w0, 4934 <PyInit__codecs_iso2022@@Base+0x2de0>
    48a4:	ldr	x0, [sp]
    48a8:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    48ac:	add	x1, x1, #0x706
    48b0:	adrp	x2, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    48b4:	add	x2, x2, #0x1e0
    48b8:	mov	x8, xzr
    48bc:	mov	x3, x8
    48c0:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    48c4:	cbnz	w0, 4934 <PyInit__codecs_iso2022@@Base+0x2de0>
    48c8:	ldr	x0, [sp]
    48cc:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    48d0:	add	x1, x1, #0x719
    48d4:	mov	x8, xzr
    48d8:	mov	x2, x8
    48dc:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    48e0:	add	x3, x3, #0x1e8
    48e4:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    48e8:	cbnz	w0, 4934 <PyInit__codecs_iso2022@@Base+0x2de0>
    48ec:	ldr	x0, [sp]
    48f0:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    48f4:	add	x1, x1, #0x72e
    48f8:	mov	x8, xzr
    48fc:	mov	x2, x8
    4900:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4904:	add	x3, x3, #0x1f0
    4908:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    490c:	cbnz	w0, 4934 <PyInit__codecs_iso2022@@Base+0x2de0>
    4910:	ldr	x0, [sp]
    4914:	adrp	x1, 6000 <PyInit__codecs_iso2022@@Base+0x44ac>
    4918:	add	x1, x1, #0x743
    491c:	adrp	x2, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4920:	add	x2, x2, #0x1f8
    4924:	adrp	x3, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4928:	add	x3, x3, #0x200
    492c:	bl	33ec <PyInit__codecs_iso2022@@Base+0x1898>
    4930:	cbz	w0, 4940 <PyInit__codecs_iso2022@@Base+0x2dec>
    4934:	mov	w8, #0xffffffff            	// #-1
    4938:	stur	w8, [x29, #-4]
    493c:	b	4954 <PyInit__codecs_iso2022@@Base+0x2e00>
    4940:	mov	w8, #0x1                   	// #1
    4944:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4948:	add	x9, x9, #0x1c0
    494c:	str	w8, [x9]
    4950:	stur	wzr, [x29, #-4]
    4954:	ldur	w0, [x29, #-4]
    4958:	ldp	x29, x30, [sp, #16]
    495c:	add	sp, sp, #0x20
    4960:	ret
    4964:	sub	sp, sp, #0x40
    4968:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    496c:	add	x8, x8, #0x190
    4970:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4974:	add	x9, x9, #0x1d0
    4978:	adrp	x10, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    497c:	add	x10, x10, #0x1e8
    4980:	adrp	x11, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4984:	add	x11, x11, #0x200
    4988:	str	x0, [sp, #48]
    498c:	ldr	x12, [sp, #48]
    4990:	ldrb	w13, [x12]
    4994:	cmp	w13, #0x21
    4998:	str	x8, [sp, #32]
    499c:	str	x9, [sp, #24]
    49a0:	str	x10, [sp, #16]
    49a4:	str	x11, [sp, #8]
    49a8:	b.ne	49c8 <PyInit__codecs_iso2022@@Base+0x2e74>  // b.any
    49ac:	ldr	x8, [sp, #48]
    49b0:	ldrb	w9, [x8, #1]
    49b4:	cmp	w9, #0x40
    49b8:	b.ne	49c8 <PyInit__codecs_iso2022@@Base+0x2e74>  // b.any
    49bc:	mov	w8, #0xff3c                	// #65340
    49c0:	str	w8, [sp, #60]
    49c4:	b	4db8 <PyInit__codecs_iso2022@@Base+0x3264>
    49c8:	ldr	x8, [sp, #32]
    49cc:	ldr	x9, [x8]
    49d0:	ldr	x10, [sp, #48]
    49d4:	ldrb	w11, [x10]
    49d8:	mov	w10, w11
    49dc:	mov	x12, #0x10                  	// #16
    49e0:	mul	x10, x12, x10
    49e4:	add	x9, x9, x10
    49e8:	ldr	x9, [x9]
    49ec:	cbz	x9, 4abc <PyInit__codecs_iso2022@@Base+0x2f68>
    49f0:	ldr	x8, [sp, #48]
    49f4:	ldrb	w9, [x8, #1]
    49f8:	ldr	x8, [sp, #32]
    49fc:	ldr	x10, [x8]
    4a00:	ldr	x11, [sp, #48]
    4a04:	ldrb	w12, [x11]
    4a08:	mov	w11, w12
    4a0c:	mov	x13, #0x10                  	// #16
    4a10:	mul	x11, x13, x11
    4a14:	add	x10, x10, x11
    4a18:	ldrb	w12, [x10, #8]
    4a1c:	cmp	w9, w12
    4a20:	b.lt	4abc <PyInit__codecs_iso2022@@Base+0x2f68>  // b.tstop
    4a24:	ldr	x8, [sp, #48]
    4a28:	ldrb	w9, [x8, #1]
    4a2c:	ldr	x8, [sp, #32]
    4a30:	ldr	x10, [x8]
    4a34:	ldr	x11, [sp, #48]
    4a38:	ldrb	w12, [x11]
    4a3c:	mov	w11, w12
    4a40:	mov	x13, #0x10                  	// #16
    4a44:	mul	x11, x13, x11
    4a48:	add	x10, x10, x11
    4a4c:	ldrb	w12, [x10, #9]
    4a50:	cmp	w9, w12
    4a54:	b.gt	4abc <PyInit__codecs_iso2022@@Base+0x2f68>
    4a58:	ldr	x8, [sp, #32]
    4a5c:	ldr	x9, [x8]
    4a60:	ldr	x10, [sp, #48]
    4a64:	ldrb	w11, [x10]
    4a68:	mov	w10, w11
    4a6c:	mov	x12, #0x10                  	// #16
    4a70:	mul	x10, x12, x10
    4a74:	add	x9, x9, x10
    4a78:	ldr	x9, [x9]
    4a7c:	ldr	x10, [sp, #48]
    4a80:	ldrb	w11, [x10, #1]
    4a84:	ldr	x10, [x8]
    4a88:	ldr	x13, [sp, #48]
    4a8c:	ldrb	w14, [x13]
    4a90:	mov	w13, w14
    4a94:	mul	x12, x12, x13
    4a98:	add	x10, x10, x12
    4a9c:	ldrb	w14, [x10, #8]
    4aa0:	subs	w11, w11, w14
    4aa4:	ldrh	w11, [x9, w11, sxtw #1]
    4aa8:	str	w11, [sp, #44]
    4aac:	mov	w14, #0xfffe                	// #65534
    4ab0:	cmp	w11, w14
    4ab4:	b.eq	4abc <PyInit__codecs_iso2022@@Base+0x2f68>  // b.none
    4ab8:	b	4db0 <PyInit__codecs_iso2022@@Base+0x325c>
    4abc:	ldr	x8, [sp, #24]
    4ac0:	ldr	x9, [x8]
    4ac4:	ldr	x10, [sp, #48]
    4ac8:	ldrb	w11, [x10]
    4acc:	mov	w10, w11
    4ad0:	mov	x12, #0x10                  	// #16
    4ad4:	mul	x10, x12, x10
    4ad8:	add	x9, x9, x10
    4adc:	ldr	x9, [x9]
    4ae0:	cbz	x9, 4bb0 <PyInit__codecs_iso2022@@Base+0x305c>
    4ae4:	ldr	x8, [sp, #48]
    4ae8:	ldrb	w9, [x8, #1]
    4aec:	ldr	x8, [sp, #24]
    4af0:	ldr	x10, [x8]
    4af4:	ldr	x11, [sp, #48]
    4af8:	ldrb	w12, [x11]
    4afc:	mov	w11, w12
    4b00:	mov	x13, #0x10                  	// #16
    4b04:	mul	x11, x13, x11
    4b08:	add	x10, x10, x11
    4b0c:	ldrb	w12, [x10, #8]
    4b10:	cmp	w9, w12
    4b14:	b.lt	4bb0 <PyInit__codecs_iso2022@@Base+0x305c>  // b.tstop
    4b18:	ldr	x8, [sp, #48]
    4b1c:	ldrb	w9, [x8, #1]
    4b20:	ldr	x8, [sp, #24]
    4b24:	ldr	x10, [x8]
    4b28:	ldr	x11, [sp, #48]
    4b2c:	ldrb	w12, [x11]
    4b30:	mov	w11, w12
    4b34:	mov	x13, #0x10                  	// #16
    4b38:	mul	x11, x13, x11
    4b3c:	add	x10, x10, x11
    4b40:	ldrb	w12, [x10, #9]
    4b44:	cmp	w9, w12
    4b48:	b.gt	4bb0 <PyInit__codecs_iso2022@@Base+0x305c>
    4b4c:	ldr	x8, [sp, #24]
    4b50:	ldr	x9, [x8]
    4b54:	ldr	x10, [sp, #48]
    4b58:	ldrb	w11, [x10]
    4b5c:	mov	w10, w11
    4b60:	mov	x12, #0x10                  	// #16
    4b64:	mul	x10, x12, x10
    4b68:	add	x9, x9, x10
    4b6c:	ldr	x9, [x9]
    4b70:	ldr	x10, [sp, #48]
    4b74:	ldrb	w11, [x10, #1]
    4b78:	ldr	x10, [x8]
    4b7c:	ldr	x13, [sp, #48]
    4b80:	ldrb	w14, [x13]
    4b84:	mov	w13, w14
    4b88:	mul	x12, x12, x13
    4b8c:	add	x10, x10, x12
    4b90:	ldrb	w14, [x10, #8]
    4b94:	subs	w11, w11, w14
    4b98:	ldrh	w11, [x9, w11, sxtw #1]
    4b9c:	str	w11, [sp, #44]
    4ba0:	mov	w14, #0xfffe                	// #65534
    4ba4:	cmp	w11, w14
    4ba8:	b.eq	4bb0 <PyInit__codecs_iso2022@@Base+0x305c>  // b.none
    4bac:	b	4db0 <PyInit__codecs_iso2022@@Base+0x325c>
    4bb0:	ldr	x8, [sp, #16]
    4bb4:	ldr	x9, [x8]
    4bb8:	ldr	x10, [sp, #48]
    4bbc:	ldrb	w11, [x10]
    4bc0:	mov	w10, w11
    4bc4:	mov	x12, #0x10                  	// #16
    4bc8:	mul	x10, x12, x10
    4bcc:	add	x9, x9, x10
    4bd0:	ldr	x9, [x9]
    4bd4:	cbz	x9, 4cb0 <PyInit__codecs_iso2022@@Base+0x315c>
    4bd8:	ldr	x8, [sp, #48]
    4bdc:	ldrb	w9, [x8, #1]
    4be0:	ldr	x8, [sp, #16]
    4be4:	ldr	x10, [x8]
    4be8:	ldr	x11, [sp, #48]
    4bec:	ldrb	w12, [x11]
    4bf0:	mov	w11, w12
    4bf4:	mov	x13, #0x10                  	// #16
    4bf8:	mul	x11, x13, x11
    4bfc:	add	x10, x10, x11
    4c00:	ldrb	w12, [x10, #8]
    4c04:	cmp	w9, w12
    4c08:	b.lt	4cb0 <PyInit__codecs_iso2022@@Base+0x315c>  // b.tstop
    4c0c:	ldr	x8, [sp, #48]
    4c10:	ldrb	w9, [x8, #1]
    4c14:	ldr	x8, [sp, #16]
    4c18:	ldr	x10, [x8]
    4c1c:	ldr	x11, [sp, #48]
    4c20:	ldrb	w12, [x11]
    4c24:	mov	w11, w12
    4c28:	mov	x13, #0x10                  	// #16
    4c2c:	mul	x11, x13, x11
    4c30:	add	x10, x10, x11
    4c34:	ldrb	w12, [x10, #9]
    4c38:	cmp	w9, w12
    4c3c:	b.gt	4cb0 <PyInit__codecs_iso2022@@Base+0x315c>
    4c40:	ldr	x8, [sp, #16]
    4c44:	ldr	x9, [x8]
    4c48:	ldr	x10, [sp, #48]
    4c4c:	ldrb	w11, [x10]
    4c50:	mov	w10, w11
    4c54:	mov	x12, #0x10                  	// #16
    4c58:	mul	x10, x12, x10
    4c5c:	add	x9, x9, x10
    4c60:	ldr	x9, [x9]
    4c64:	ldr	x10, [sp, #48]
    4c68:	ldrb	w11, [x10, #1]
    4c6c:	ldr	x10, [x8]
    4c70:	ldr	x13, [sp, #48]
    4c74:	ldrb	w14, [x13]
    4c78:	mov	w13, w14
    4c7c:	mul	x12, x12, x13
    4c80:	add	x10, x10, x12
    4c84:	ldrb	w14, [x10, #8]
    4c88:	subs	w11, w11, w14
    4c8c:	ldrh	w11, [x9, w11, sxtw #1]
    4c90:	str	w11, [sp, #44]
    4c94:	mov	w14, #0xfffe                	// #65534
    4c98:	cmp	w11, w14
    4c9c:	b.eq	4cb0 <PyInit__codecs_iso2022@@Base+0x315c>  // b.none
    4ca0:	ldr	w8, [sp, #44]
    4ca4:	orr	w8, w8, #0x20000
    4ca8:	str	w8, [sp, #44]
    4cac:	b	4db0 <PyInit__codecs_iso2022@@Base+0x325c>
    4cb0:	ldr	x8, [sp, #8]
    4cb4:	ldr	x9, [x8]
    4cb8:	ldr	x10, [sp, #48]
    4cbc:	ldrb	w11, [x10]
    4cc0:	mov	w10, w11
    4cc4:	mov	x12, #0x10                  	// #16
    4cc8:	mul	x10, x12, x10
    4ccc:	add	x9, x9, x10
    4cd0:	ldr	x9, [x9]
    4cd4:	cbz	x9, 4da4 <PyInit__codecs_iso2022@@Base+0x3250>
    4cd8:	ldr	x8, [sp, #48]
    4cdc:	ldrb	w9, [x8, #1]
    4ce0:	ldr	x8, [sp, #8]
    4ce4:	ldr	x10, [x8]
    4ce8:	ldr	x11, [sp, #48]
    4cec:	ldrb	w12, [x11]
    4cf0:	mov	w11, w12
    4cf4:	mov	x13, #0x10                  	// #16
    4cf8:	mul	x11, x13, x11
    4cfc:	add	x10, x10, x11
    4d00:	ldrb	w12, [x10, #8]
    4d04:	cmp	w9, w12
    4d08:	b.lt	4da4 <PyInit__codecs_iso2022@@Base+0x3250>  // b.tstop
    4d0c:	ldr	x8, [sp, #48]
    4d10:	ldrb	w9, [x8, #1]
    4d14:	ldr	x8, [sp, #8]
    4d18:	ldr	x10, [x8]
    4d1c:	ldr	x11, [sp, #48]
    4d20:	ldrb	w12, [x11]
    4d24:	mov	w11, w12
    4d28:	mov	x13, #0x10                  	// #16
    4d2c:	mul	x11, x13, x11
    4d30:	add	x10, x10, x11
    4d34:	ldrb	w12, [x10, #9]
    4d38:	cmp	w9, w12
    4d3c:	b.gt	4da4 <PyInit__codecs_iso2022@@Base+0x3250>
    4d40:	ldr	x8, [sp, #8]
    4d44:	ldr	x9, [x8]
    4d48:	ldr	x10, [sp, #48]
    4d4c:	ldrb	w11, [x10]
    4d50:	mov	w10, w11
    4d54:	mov	x12, #0x10                  	// #16
    4d58:	mul	x10, x12, x10
    4d5c:	add	x9, x9, x10
    4d60:	ldr	x9, [x9]
    4d64:	ldr	x10, [sp, #48]
    4d68:	ldrb	w11, [x10, #1]
    4d6c:	ldr	x10, [x8]
    4d70:	ldr	x13, [sp, #48]
    4d74:	ldrb	w14, [x13]
    4d78:	mov	w13, w14
    4d7c:	mul	x12, x12, x13
    4d80:	add	x10, x10, x12
    4d84:	ldrb	w14, [x10, #8]
    4d88:	subs	w11, w11, w14
    4d8c:	ldr	w11, [x9, w11, sxtw #2]
    4d90:	str	w11, [sp, #44]
    4d94:	mov	w14, #0xfffe                	// #65534
    4d98:	cmp	w11, w14
    4d9c:	b.eq	4da4 <PyInit__codecs_iso2022@@Base+0x3250>  // b.none
    4da0:	b	4db0 <PyInit__codecs_iso2022@@Base+0x325c>
    4da4:	mov	w8, #0xffff                	// #65535
    4da8:	str	w8, [sp, #60]
    4dac:	b	4db8 <PyInit__codecs_iso2022@@Base+0x3264>
    4db0:	ldr	w8, [sp, #44]
    4db4:	str	w8, [sp, #60]
    4db8:	ldr	w0, [sp, #60]
    4dbc:	add	sp, sp, #0x40
    4dc0:	ret
    4dc4:	sub	sp, sp, #0x40
    4dc8:	stp	x29, x30, [sp, #48]
    4dcc:	add	x29, sp, #0x30
    4dd0:	mov	x8, xzr
    4dd4:	stur	x0, [x29, #-16]
    4dd8:	str	x1, [sp, #24]
    4ddc:	ldr	x9, [sp, #24]
    4de0:	ldr	x9, [x9]
    4de4:	str	x9, [sp, #8]
    4de8:	ldur	x0, [x29, #-16]
    4dec:	ldr	x1, [sp, #24]
    4df0:	mov	x2, x8
    4df4:	bl	51dc <PyInit__codecs_iso2022@@Base+0x3688>
    4df8:	strh	w0, [sp, #22]
    4dfc:	ldr	x8, [sp, #8]
    4e00:	cmp	x8, #0x1
    4e04:	str	x8, [sp]
    4e08:	b.eq	4e20 <PyInit__codecs_iso2022@@Base+0x32cc>  // b.none
    4e0c:	b	4e10 <PyInit__codecs_iso2022@@Base+0x32bc>
    4e10:	ldr	x8, [sp]
    4e14:	cmp	x8, #0x2
    4e18:	b.eq	4e48 <PyInit__codecs_iso2022@@Base+0x32f4>  // b.none
    4e1c:	b	4e70 <PyInit__codecs_iso2022@@Base+0x331c>
    4e20:	ldrh	w8, [sp, #22]
    4e24:	mov	w9, #0xfffe                	// #65534
    4e28:	cmp	w8, w9
    4e2c:	b.ne	4e3c <PyInit__codecs_iso2022@@Base+0x32e8>  // b.any
    4e30:	mov	w8, #0xfffe                	// #65534
    4e34:	sturh	w8, [x29, #-2]
    4e38:	b	4e78 <PyInit__codecs_iso2022@@Base+0x3324>
    4e3c:	mov	w8, #0xffff                	// #65535
    4e40:	sturh	w8, [x29, #-2]
    4e44:	b	4e78 <PyInit__codecs_iso2022@@Base+0x3324>
    4e48:	ldr	x8, [sp, #24]
    4e4c:	ldr	x8, [x8]
    4e50:	cmp	x8, #0x2
    4e54:	b.eq	4e64 <PyInit__codecs_iso2022@@Base+0x3310>  // b.none
    4e58:	mov	w8, #0xffff                	// #65535
    4e5c:	sturh	w8, [x29, #-2]
    4e60:	b	4e78 <PyInit__codecs_iso2022@@Base+0x3324>
    4e64:	ldrh	w8, [sp, #22]
    4e68:	sturh	w8, [x29, #-2]
    4e6c:	b	4e78 <PyInit__codecs_iso2022@@Base+0x3324>
    4e70:	mov	w8, #0xffff                	// #65535
    4e74:	sturh	w8, [x29, #-2]
    4e78:	ldurh	w0, [x29, #-2]
    4e7c:	ldp	x29, x30, [sp, #48]
    4e80:	add	sp, sp, #0x40
    4e84:	ret
    4e88:	sub	sp, sp, #0x30
    4e8c:	stp	x29, x30, [sp, #32]
    4e90:	add	x29, sp, #0x20
    4e94:	mov	x8, xzr
    4e98:	mov	w9, #0xffff                	// #65535
    4e9c:	str	x0, [sp, #16]
    4ea0:	str	x1, [sp, #8]
    4ea4:	ldr	x0, [sp, #16]
    4ea8:	ldr	x1, [sp, #8]
    4eac:	mov	x2, x8
    4eb0:	str	w9, [sp]
    4eb4:	bl	51dc <PyInit__codecs_iso2022@@Base+0x3688>
    4eb8:	strh	w0, [sp, #6]
    4ebc:	ldrh	w9, [sp, #6]
    4ec0:	ldr	w10, [sp]
    4ec4:	cmp	w9, w10
    4ec8:	b.eq	4edc <PyInit__codecs_iso2022@@Base+0x3388>  // b.none
    4ecc:	ldrh	w8, [sp, #6]
    4ed0:	mov	w9, #0xfffe                	// #65534
    4ed4:	cmp	w8, w9
    4ed8:	b.ne	4ee8 <PyInit__codecs_iso2022@@Base+0x3394>  // b.any
    4edc:	ldrh	w8, [sp, #6]
    4ee0:	sturh	w8, [x29, #-2]
    4ee4:	b	4f08 <PyInit__codecs_iso2022@@Base+0x33b4>
    4ee8:	ldrh	w8, [sp, #6]
    4eec:	and	w8, w8, #0x8000
    4ef0:	cbz	w8, 4f00 <PyInit__codecs_iso2022@@Base+0x33ac>
    4ef4:	mov	w8, #0xffff                	// #65535
    4ef8:	sturh	w8, [x29, #-2]
    4efc:	b	4f08 <PyInit__codecs_iso2022@@Base+0x33b4>
    4f00:	ldrh	w8, [sp, #6]
    4f04:	sturh	w8, [x29, #-2]
    4f08:	ldurh	w0, [x29, #-2]
    4f0c:	ldp	x29, x30, [sp, #32]
    4f10:	add	sp, sp, #0x30
    4f14:	ret
    4f18:	sub	sp, sp, #0x30
    4f1c:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4f20:	add	x8, x8, #0x1d8
    4f24:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    4f28:	add	x9, x9, #0x1f0
    4f2c:	str	x0, [sp, #32]
    4f30:	ldr	x10, [x8]
    4f34:	ldr	x11, [sp, #32]
    4f38:	ldrb	w12, [x11]
    4f3c:	mov	w11, w12
    4f40:	mov	x13, #0x10                  	// #16
    4f44:	mul	x11, x13, x11
    4f48:	add	x10, x10, x11
    4f4c:	ldr	x10, [x10]
    4f50:	str	x8, [sp, #16]
    4f54:	str	x9, [sp, #8]
    4f58:	cbz	x10, 5028 <PyInit__codecs_iso2022@@Base+0x34d4>
    4f5c:	ldr	x8, [sp, #32]
    4f60:	ldrb	w9, [x8, #1]
    4f64:	ldr	x8, [sp, #16]
    4f68:	ldr	x10, [x8]
    4f6c:	ldr	x11, [sp, #32]
    4f70:	ldrb	w12, [x11]
    4f74:	mov	w11, w12
    4f78:	mov	x13, #0x10                  	// #16
    4f7c:	mul	x11, x13, x11
    4f80:	add	x10, x10, x11
    4f84:	ldrb	w12, [x10, #8]
    4f88:	cmp	w9, w12
    4f8c:	b.lt	5028 <PyInit__codecs_iso2022@@Base+0x34d4>  // b.tstop
    4f90:	ldr	x8, [sp, #32]
    4f94:	ldrb	w9, [x8, #1]
    4f98:	ldr	x8, [sp, #16]
    4f9c:	ldr	x10, [x8]
    4fa0:	ldr	x11, [sp, #32]
    4fa4:	ldrb	w12, [x11]
    4fa8:	mov	w11, w12
    4fac:	mov	x13, #0x10                  	// #16
    4fb0:	mul	x11, x13, x11
    4fb4:	add	x10, x10, x11
    4fb8:	ldrb	w12, [x10, #9]
    4fbc:	cmp	w9, w12
    4fc0:	b.gt	5028 <PyInit__codecs_iso2022@@Base+0x34d4>
    4fc4:	ldr	x8, [sp, #16]
    4fc8:	ldr	x9, [x8]
    4fcc:	ldr	x10, [sp, #32]
    4fd0:	ldrb	w11, [x10]
    4fd4:	mov	w10, w11
    4fd8:	mov	x12, #0x10                  	// #16
    4fdc:	mul	x10, x12, x10
    4fe0:	add	x9, x9, x10
    4fe4:	ldr	x9, [x9]
    4fe8:	ldr	x10, [sp, #32]
    4fec:	ldrb	w11, [x10, #1]
    4ff0:	ldr	x10, [x8]
    4ff4:	ldr	x13, [sp, #32]
    4ff8:	ldrb	w14, [x13]
    4ffc:	mov	w13, w14
    5000:	mul	x12, x12, x13
    5004:	add	x10, x10, x12
    5008:	ldrb	w14, [x10, #8]
    500c:	subs	w11, w11, w14
    5010:	ldrh	w11, [x9, w11, sxtw #1]
    5014:	str	w11, [sp, #28]
    5018:	mov	w14, #0xfffe                	// #65534
    501c:	cmp	w11, w14
    5020:	b.eq	5028 <PyInit__codecs_iso2022@@Base+0x34d4>  // b.none
    5024:	b	5134 <PyInit__codecs_iso2022@@Base+0x35e0>
    5028:	ldr	x8, [sp, #8]
    502c:	ldr	x9, [x8]
    5030:	ldr	x10, [sp, #32]
    5034:	ldrb	w11, [x10]
    5038:	mov	w10, w11
    503c:	mov	x12, #0x10                  	// #16
    5040:	mul	x10, x12, x10
    5044:	add	x9, x9, x10
    5048:	ldr	x9, [x9]
    504c:	cbz	x9, 5128 <PyInit__codecs_iso2022@@Base+0x35d4>
    5050:	ldr	x8, [sp, #32]
    5054:	ldrb	w9, [x8, #1]
    5058:	ldr	x8, [sp, #8]
    505c:	ldr	x10, [x8]
    5060:	ldr	x11, [sp, #32]
    5064:	ldrb	w12, [x11]
    5068:	mov	w11, w12
    506c:	mov	x13, #0x10                  	// #16
    5070:	mul	x11, x13, x11
    5074:	add	x10, x10, x11
    5078:	ldrb	w12, [x10, #8]
    507c:	cmp	w9, w12
    5080:	b.lt	5128 <PyInit__codecs_iso2022@@Base+0x35d4>  // b.tstop
    5084:	ldr	x8, [sp, #32]
    5088:	ldrb	w9, [x8, #1]
    508c:	ldr	x8, [sp, #8]
    5090:	ldr	x10, [x8]
    5094:	ldr	x11, [sp, #32]
    5098:	ldrb	w12, [x11]
    509c:	mov	w11, w12
    50a0:	mov	x13, #0x10                  	// #16
    50a4:	mul	x11, x13, x11
    50a8:	add	x10, x10, x11
    50ac:	ldrb	w12, [x10, #9]
    50b0:	cmp	w9, w12
    50b4:	b.gt	5128 <PyInit__codecs_iso2022@@Base+0x35d4>
    50b8:	ldr	x8, [sp, #8]
    50bc:	ldr	x9, [x8]
    50c0:	ldr	x10, [sp, #32]
    50c4:	ldrb	w11, [x10]
    50c8:	mov	w10, w11
    50cc:	mov	x12, #0x10                  	// #16
    50d0:	mul	x10, x12, x10
    50d4:	add	x9, x9, x10
    50d8:	ldr	x9, [x9]
    50dc:	ldr	x10, [sp, #32]
    50e0:	ldrb	w11, [x10, #1]
    50e4:	ldr	x10, [x8]
    50e8:	ldr	x13, [sp, #32]
    50ec:	ldrb	w14, [x13]
    50f0:	mov	w13, w14
    50f4:	mul	x12, x12, x13
    50f8:	add	x10, x10, x12
    50fc:	ldrb	w14, [x10, #8]
    5100:	subs	w11, w11, w14
    5104:	ldrh	w11, [x9, w11, sxtw #1]
    5108:	str	w11, [sp, #28]
    510c:	mov	w14, #0xfffe                	// #65534
    5110:	cmp	w11, w14
    5114:	b.eq	5128 <PyInit__codecs_iso2022@@Base+0x35d4>  // b.none
    5118:	ldr	w8, [sp, #28]
    511c:	orr	w8, w8, #0x20000
    5120:	str	w8, [sp, #28]
    5124:	b	5134 <PyInit__codecs_iso2022@@Base+0x35e0>
    5128:	mov	w8, #0xffff                	// #65535
    512c:	str	w8, [sp, #44]
    5130:	b	513c <PyInit__codecs_iso2022@@Base+0x35e8>
    5134:	ldr	w8, [sp, #28]
    5138:	str	w8, [sp, #44]
    513c:	ldr	w0, [sp, #44]
    5140:	add	sp, sp, #0x30
    5144:	ret
    5148:	sub	sp, sp, #0x30
    514c:	stp	x29, x30, [sp, #32]
    5150:	add	x29, sp, #0x20
    5154:	mov	x8, xzr
    5158:	mov	w9, #0xffff                	// #65535
    515c:	str	x0, [sp, #16]
    5160:	str	x1, [sp, #8]
    5164:	ldr	x0, [sp, #16]
    5168:	ldr	x1, [sp, #8]
    516c:	mov	x2, x8
    5170:	str	w9, [sp]
    5174:	bl	51dc <PyInit__codecs_iso2022@@Base+0x3688>
    5178:	strh	w0, [sp, #6]
    517c:	ldrh	w9, [sp, #6]
    5180:	ldr	w10, [sp]
    5184:	cmp	w9, w10
    5188:	b.eq	519c <PyInit__codecs_iso2022@@Base+0x3648>  // b.none
    518c:	ldrh	w8, [sp, #6]
    5190:	mov	w9, #0xfffe                	// #65534
    5194:	cmp	w8, w9
    5198:	b.ne	51a8 <PyInit__codecs_iso2022@@Base+0x3654>  // b.any
    519c:	ldrh	w8, [sp, #6]
    51a0:	sturh	w8, [x29, #-2]
    51a4:	b	51cc <PyInit__codecs_iso2022@@Base+0x3678>
    51a8:	ldrh	w8, [sp, #6]
    51ac:	and	w8, w8, #0x8000
    51b0:	cbz	w8, 51c4 <PyInit__codecs_iso2022@@Base+0x3670>
    51b4:	ldrh	w8, [sp, #6]
    51b8:	and	w8, w8, #0x7fff
    51bc:	sturh	w8, [x29, #-2]
    51c0:	b	51cc <PyInit__codecs_iso2022@@Base+0x3678>
    51c4:	mov	w8, #0xffff                	// #65535
    51c8:	sturh	w8, [x29, #-2]
    51cc:	ldurh	w0, [x29, #-2]
    51d0:	ldp	x29, x30, [sp, #32]
    51d4:	add	sp, sp, #0x30
    51d8:	ret
    51dc:	sub	sp, sp, #0x60
    51e0:	stp	x29, x30, [sp, #80]
    51e4:	add	x29, sp, #0x50
    51e8:	mov	x8, #0xffffffffffffffff    	// #-1
    51ec:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    51f0:	add	x9, x9, #0x1c8
    51f4:	adrp	x10, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    51f8:	add	x10, x10, #0x188
    51fc:	adrp	x11, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    5200:	add	x11, x11, #0x1e0
    5204:	stur	x0, [x29, #-16]
    5208:	stur	x1, [x29, #-24]
    520c:	stur	x2, [x29, #-32]
    5210:	ldur	x12, [x29, #-24]
    5214:	ldr	x12, [x12]
    5218:	cmp	x12, x8
    521c:	str	x9, [sp, #32]
    5220:	str	x10, [sp, #24]
    5224:	str	x11, [sp, #16]
    5228:	str	x12, [sp, #8]
    522c:	b.eq	581c <PyInit__codecs_iso2022@@Base+0x3cc8>  // b.none
    5230:	b	5234 <PyInit__codecs_iso2022@@Base+0x36e0>
    5234:	ldr	x8, [sp, #8]
    5238:	cmp	x8, #0x1
    523c:	b.eq	5254 <PyInit__codecs_iso2022@@Base+0x3700>  // b.none
    5240:	b	5244 <PyInit__codecs_iso2022@@Base+0x36f0>
    5244:	ldr	x8, [sp, #8]
    5248:	cmp	x8, #0x2
    524c:	b.eq	57d0 <PyInit__codecs_iso2022@@Base+0x3c7c>  // b.none
    5250:	b	587c <PyInit__codecs_iso2022@@Base+0x3d28>
    5254:	ldur	x8, [x29, #-16]
    5258:	ldr	w9, [x8]
    525c:	cmp	w9, #0x10, lsl #12
    5260:	b.cc	5410 <PyInit__codecs_iso2022@@Base+0x38bc>  // b.lo, b.ul, b.last
    5264:	ldur	x8, [x29, #-16]
    5268:	ldr	w9, [x8]
    526c:	lsr	w9, w9, #16
    5270:	cmp	w9, #0x2
    5274:	b.ne	5404 <PyInit__codecs_iso2022@@Base+0x38b0>  // b.any
    5278:	ldur	x8, [x29, #-32]
    527c:	cmp	x8, #0x7d0
    5280:	b.ne	52a8 <PyInit__codecs_iso2022@@Base+0x3754>  // b.any
    5284:	ldur	x8, [x29, #-16]
    5288:	ldr	w9, [x8]
    528c:	mov	w10, #0xb9f                 	// #2975
    5290:	movk	w10, #0x2, lsl #16
    5294:	cmp	w9, w10
    5298:	b.ne	52a8 <PyInit__codecs_iso2022@@Base+0x3754>  // b.any
    529c:	mov	w8, #0xffff                	// #65535
    52a0:	sturh	w8, [x29, #-2]
    52a4:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    52a8:	ldr	x8, [sp, #16]
    52ac:	ldr	x9, [x8]
    52b0:	ldur	x10, [x29, #-16]
    52b4:	ldr	w11, [x10]
    52b8:	and	w11, w11, #0xffff
    52bc:	lsr	w11, w11, #8
    52c0:	mov	w10, w11
    52c4:	ubfx	x10, x10, #0, #32
    52c8:	mov	x12, #0x10                  	// #16
    52cc:	mul	x10, x12, x10
    52d0:	add	x9, x9, x10
    52d4:	ldr	x9, [x9]
    52d8:	cbz	x9, 5404 <PyInit__codecs_iso2022@@Base+0x38b0>
    52dc:	ldur	x8, [x29, #-16]
    52e0:	ldr	w9, [x8]
    52e4:	and	w9, w9, #0xffff
    52e8:	and	w9, w9, #0xff
    52ec:	ldr	x8, [sp, #16]
    52f0:	ldr	x10, [x8]
    52f4:	ldur	x11, [x29, #-16]
    52f8:	ldr	w12, [x11]
    52fc:	and	w12, w12, #0xffff
    5300:	mov	x11, #0x8                   	// #8
    5304:	lsr	w11, w12, w11
    5308:	mov	w13, w11
    530c:	ubfx	x13, x13, #0, #32
    5310:	mov	x14, #0x10                  	// #16
    5314:	mul	x13, x14, x13
    5318:	add	x10, x10, x13
    531c:	ldrb	w11, [x10, #8]
    5320:	cmp	w9, w11
    5324:	b.cc	5404 <PyInit__codecs_iso2022@@Base+0x38b0>  // b.lo, b.ul, b.last
    5328:	ldur	x8, [x29, #-16]
    532c:	ldr	w9, [x8]
    5330:	and	w9, w9, #0xffff
    5334:	and	w9, w9, #0xff
    5338:	ldr	x8, [sp, #16]
    533c:	ldr	x10, [x8]
    5340:	ldur	x11, [x29, #-16]
    5344:	ldr	w12, [x11]
    5348:	and	w12, w12, #0xffff
    534c:	lsr	w12, w12, #8
    5350:	mov	w11, w12
    5354:	ubfx	x11, x11, #0, #32
    5358:	mov	x13, #0x10                  	// #16
    535c:	mul	x11, x13, x11
    5360:	add	x10, x10, x11
    5364:	ldrb	w12, [x10, #9]
    5368:	cmp	w9, w12
    536c:	b.hi	5404 <PyInit__codecs_iso2022@@Base+0x38b0>  // b.pmore
    5370:	ldr	x8, [sp, #16]
    5374:	ldr	x9, [x8]
    5378:	ldur	x10, [x29, #-16]
    537c:	ldr	w11, [x10]
    5380:	mov	w12, #0xffff                	// #65535
    5384:	and	w11, w11, #0xffff
    5388:	mov	x10, #0x8                   	// #8
    538c:	mov	x0, x10
    5390:	lsr	w11, w11, w0
    5394:	mov	w13, w11
    5398:	ubfx	x13, x13, #0, #32
    539c:	mov	x14, #0x10                  	// #16
    53a0:	mul	x13, x14, x13
    53a4:	add	x9, x9, x13
    53a8:	ldr	x9, [x9]
    53ac:	ldur	x13, [x29, #-16]
    53b0:	ldr	w11, [x13]
    53b4:	and	w11, w11, #0xffff
    53b8:	and	w11, w11, #0xff
    53bc:	ldr	x13, [x8]
    53c0:	ldur	x15, [x29, #-16]
    53c4:	ldr	w16, [x15]
    53c8:	and	w16, w16, #0xffff
    53cc:	lsr	w10, w16, w10
    53d0:	mov	w15, w10
    53d4:	ubfx	x15, x15, #0, #32
    53d8:	mul	x14, x14, x15
    53dc:	add	x13, x13, x14
    53e0:	ldrb	w10, [x13, #8]
    53e4:	subs	w10, w11, w10
    53e8:	ldrh	w10, [x9, w10, uxtw #1]
    53ec:	sturh	w10, [x29, #-34]
    53f0:	cmp	w10, w12
    53f4:	b.eq	5404 <PyInit__codecs_iso2022@@Base+0x38b0>  // b.none
    53f8:	ldurh	w8, [x29, #-34]
    53fc:	sturh	w8, [x29, #-2]
    5400:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    5404:	mov	w8, #0xffff                	// #65535
    5408:	sturh	w8, [x29, #-2]
    540c:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    5410:	ldur	x8, [x29, #-32]
    5414:	cmp	x8, #0x7d0
    5418:	b.ne	54f0 <PyInit__codecs_iso2022@@Base+0x399c>  // b.any
    541c:	ldur	x8, [x29, #-16]
    5420:	ldr	w9, [x8]
    5424:	mov	w10, #0x9b1c                	// #39708
    5428:	cmp	w9, w10
    542c:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    5430:	ldur	x8, [x29, #-16]
    5434:	ldr	w9, [x8]
    5438:	mov	w10, #0x4ff1                	// #20465
    543c:	cmp	w9, w10
    5440:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    5444:	ldur	x8, [x29, #-16]
    5448:	ldr	w9, [x8]
    544c:	mov	w10, #0x525d                	// #21085
    5450:	cmp	w9, w10
    5454:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    5458:	ldur	x8, [x29, #-16]
    545c:	ldr	w9, [x8]
    5460:	mov	w10, #0x541e                	// #21534
    5464:	cmp	w9, w10
    5468:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    546c:	ldur	x8, [x29, #-16]
    5470:	ldr	w9, [x8]
    5474:	mov	w10, #0x5653                	// #22099
    5478:	cmp	w9, w10
    547c:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    5480:	ldur	x8, [x29, #-16]
    5484:	ldr	w9, [x8]
    5488:	mov	w10, #0x59f8                	// #23032
    548c:	cmp	w9, w10
    5490:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    5494:	ldur	x8, [x29, #-16]
    5498:	ldr	w9, [x8]
    549c:	mov	w10, #0x5c5b                	// #23643
    54a0:	cmp	w9, w10
    54a4:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    54a8:	ldur	x8, [x29, #-16]
    54ac:	ldr	w9, [x8]
    54b0:	mov	w10, #0x5e77                	// #24183
    54b4:	cmp	w9, w10
    54b8:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    54bc:	ldur	x8, [x29, #-16]
    54c0:	ldr	w9, [x8]
    54c4:	mov	w10, #0x7626                	// #30246
    54c8:	cmp	w9, w10
    54cc:	b.eq	54e4 <PyInit__codecs_iso2022@@Base+0x3990>  // b.none
    54d0:	ldur	x8, [x29, #-16]
    54d4:	ldr	w9, [x8]
    54d8:	mov	w10, #0x7e6b                	// #32363
    54dc:	cmp	w9, w10
    54e0:	b.ne	54f0 <PyInit__codecs_iso2022@@Base+0x399c>  // b.any
    54e4:	mov	w8, #0xffff                	// #65535
    54e8:	sturh	w8, [x29, #-2]
    54ec:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    54f0:	ldur	x8, [x29, #-32]
    54f4:	cmp	x8, #0x7d0
    54f8:	b.ne	551c <PyInit__codecs_iso2022@@Base+0x39c8>  // b.any
    54fc:	ldur	x8, [x29, #-16]
    5500:	ldr	w9, [x8]
    5504:	mov	w10, #0x9b1d                	// #39709
    5508:	cmp	w9, w10
    550c:	b.ne	551c <PyInit__codecs_iso2022@@Base+0x39c8>  // b.any
    5510:	mov	w8, #0xfd3b                	// #64827
    5514:	sturh	w8, [x29, #-34]
    5518:	b	57c4 <PyInit__codecs_iso2022@@Base+0x3c70>
    551c:	ldr	x8, [sp, #32]
    5520:	ldr	x9, [x8]
    5524:	ldur	x10, [x29, #-16]
    5528:	ldr	w11, [x10]
    552c:	lsr	w11, w11, #8
    5530:	mov	w10, w11
    5534:	ubfx	x10, x10, #0, #32
    5538:	mov	x12, #0x10                  	// #16
    553c:	mul	x10, x12, x10
    5540:	add	x9, x9, x10
    5544:	ldr	x9, [x9]
    5548:	cbz	x9, 566c <PyInit__codecs_iso2022@@Base+0x3b18>
    554c:	ldur	x8, [x29, #-16]
    5550:	ldr	w9, [x8]
    5554:	and	w9, w9, #0xff
    5558:	ldr	x8, [sp, #32]
    555c:	ldr	x10, [x8]
    5560:	ldur	x11, [x29, #-16]
    5564:	ldr	w12, [x11]
    5568:	mov	x11, #0x8                   	// #8
    556c:	lsr	w11, w12, w11
    5570:	mov	w13, w11
    5574:	ubfx	x13, x13, #0, #32
    5578:	mov	x14, #0x10                  	// #16
    557c:	mul	x13, x14, x13
    5580:	add	x10, x10, x13
    5584:	ldrb	w11, [x10, #8]
    5588:	cmp	w9, w11
    558c:	b.cc	566c <PyInit__codecs_iso2022@@Base+0x3b18>  // b.lo, b.ul, b.last
    5590:	ldur	x8, [x29, #-16]
    5594:	ldr	w9, [x8]
    5598:	and	w9, w9, #0xff
    559c:	ldr	x8, [sp, #32]
    55a0:	ldr	x10, [x8]
    55a4:	ldur	x11, [x29, #-16]
    55a8:	ldr	w12, [x11]
    55ac:	lsr	w12, w12, #8
    55b0:	mov	w11, w12
    55b4:	ubfx	x11, x11, #0, #32
    55b8:	mov	x13, #0x10                  	// #16
    55bc:	mul	x11, x13, x11
    55c0:	add	x10, x10, x11
    55c4:	ldrb	w12, [x10, #9]
    55c8:	cmp	w9, w12
    55cc:	b.hi	566c <PyInit__codecs_iso2022@@Base+0x3b18>  // b.pmore
    55d0:	ldr	x8, [sp, #32]
    55d4:	ldr	x9, [x8]
    55d8:	ldur	x10, [x29, #-16]
    55dc:	ldr	w11, [x10]
    55e0:	mov	x10, #0x8                   	// #8
    55e4:	mov	x0, x10
    55e8:	lsr	w11, w11, w0
    55ec:	mov	w12, w11
    55f0:	ubfx	x12, x12, #0, #32
    55f4:	mov	x13, #0x10                  	// #16
    55f8:	mul	x12, x13, x12
    55fc:	add	x9, x9, x12
    5600:	ldr	x9, [x9]
    5604:	ldur	x12, [x29, #-16]
    5608:	ldr	w11, [x12]
    560c:	and	w11, w11, #0xff
    5610:	ldr	x12, [x8]
    5614:	ldur	x14, [x29, #-16]
    5618:	ldr	w15, [x14]
    561c:	lsr	w10, w15, w10
    5620:	mov	w14, w10
    5624:	ubfx	x14, x14, #0, #32
    5628:	mul	x13, x13, x14
    562c:	add	x12, x12, x13
    5630:	ldrb	w10, [x12, #8]
    5634:	subs	w10, w11, w10
    5638:	ldrh	w10, [x9, w10, uxtw #1]
    563c:	sturh	w10, [x29, #-34]
    5640:	mov	w11, #0xffff                	// #65535
    5644:	cmp	w10, w11
    5648:	b.eq	566c <PyInit__codecs_iso2022@@Base+0x3b18>  // b.none
    564c:	ldurh	w8, [x29, #-34]
    5650:	mov	w9, #0xfffe                	// #65534
    5654:	cmp	w8, w9
    5658:	b.ne	5668 <PyInit__codecs_iso2022@@Base+0x3b14>  // b.any
    565c:	mov	w8, #0xfffe                	// #65534
    5660:	sturh	w8, [x29, #-2]
    5664:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    5668:	b	57c4 <PyInit__codecs_iso2022@@Base+0x3c70>
    566c:	ldr	x8, [sp, #24]
    5670:	ldr	x9, [x8]
    5674:	ldur	x10, [x29, #-16]
    5678:	ldr	w11, [x10]
    567c:	lsr	w11, w11, #8
    5680:	mov	w10, w11
    5684:	ubfx	x10, x10, #0, #32
    5688:	mov	x12, #0x10                  	// #16
    568c:	mul	x10, x12, x10
    5690:	add	x9, x9, x10
    5694:	ldr	x9, [x9]
    5698:	cbz	x9, 57b8 <PyInit__codecs_iso2022@@Base+0x3c64>
    569c:	ldur	x8, [x29, #-16]
    56a0:	ldr	w9, [x8]
    56a4:	and	w9, w9, #0xff
    56a8:	ldr	x8, [sp, #24]
    56ac:	ldr	x10, [x8]
    56b0:	ldur	x11, [x29, #-16]
    56b4:	ldr	w12, [x11]
    56b8:	mov	x11, #0x8                   	// #8
    56bc:	lsr	w11, w12, w11
    56c0:	mov	w13, w11
    56c4:	ubfx	x13, x13, #0, #32
    56c8:	mov	x14, #0x10                  	// #16
    56cc:	mul	x13, x14, x13
    56d0:	add	x10, x10, x13
    56d4:	ldrb	w11, [x10, #8]
    56d8:	cmp	w9, w11
    56dc:	b.cc	57b8 <PyInit__codecs_iso2022@@Base+0x3c64>  // b.lo, b.ul, b.last
    56e0:	ldur	x8, [x29, #-16]
    56e4:	ldr	w9, [x8]
    56e8:	and	w9, w9, #0xff
    56ec:	ldr	x8, [sp, #24]
    56f0:	ldr	x10, [x8]
    56f4:	ldur	x11, [x29, #-16]
    56f8:	ldr	w12, [x11]
    56fc:	lsr	w12, w12, #8
    5700:	mov	w11, w12
    5704:	ubfx	x11, x11, #0, #32
    5708:	mov	x13, #0x10                  	// #16
    570c:	mul	x11, x13, x11
    5710:	add	x10, x10, x11
    5714:	ldrb	w12, [x10, #9]
    5718:	cmp	w9, w12
    571c:	b.hi	57b8 <PyInit__codecs_iso2022@@Base+0x3c64>  // b.pmore
    5720:	ldr	x8, [sp, #24]
    5724:	ldr	x9, [x8]
    5728:	ldur	x10, [x29, #-16]
    572c:	ldr	w11, [x10]
    5730:	mov	x10, #0x8                   	// #8
    5734:	mov	x0, x10
    5738:	lsr	w11, w11, w0
    573c:	mov	w12, w11
    5740:	ubfx	x12, x12, #0, #32
    5744:	mov	x13, #0x10                  	// #16
    5748:	mul	x12, x13, x12
    574c:	add	x9, x9, x12
    5750:	ldr	x9, [x9]
    5754:	ldur	x12, [x29, #-16]
    5758:	ldr	w11, [x12]
    575c:	and	w11, w11, #0xff
    5760:	ldr	x12, [x8]
    5764:	ldur	x14, [x29, #-16]
    5768:	ldr	w15, [x14]
    576c:	lsr	w10, w15, w10
    5770:	mov	w14, w10
    5774:	ubfx	x14, x14, #0, #32
    5778:	mul	x13, x13, x14
    577c:	add	x12, x12, x13
    5780:	ldrb	w10, [x12, #8]
    5784:	subs	w10, w11, w10
    5788:	ldrh	w10, [x9, w10, uxtw #1]
    578c:	sturh	w10, [x29, #-34]
    5790:	mov	w11, #0xffff                	// #65535
    5794:	cmp	w10, w11
    5798:	b.eq	57b8 <PyInit__codecs_iso2022@@Base+0x3c64>  // b.none
    579c:	ldurh	w8, [x29, #-34]
    57a0:	and	w8, w8, #0x8000
    57a4:	cbz	w8, 57b4 <PyInit__codecs_iso2022@@Base+0x3c60>
    57a8:	mov	w8, #0xffff                	// #65535
    57ac:	sturh	w8, [x29, #-2]
    57b0:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    57b4:	b	57c4 <PyInit__codecs_iso2022@@Base+0x3c70>
    57b8:	mov	w8, #0xffff                	// #65535
    57bc:	sturh	w8, [x29, #-2]
    57c0:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    57c4:	ldurh	w8, [x29, #-34]
    57c8:	sturh	w8, [x29, #-2]
    57cc:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    57d0:	ldur	x8, [x29, #-16]
    57d4:	ldr	w9, [x8]
    57d8:	ldur	x8, [x29, #-16]
    57dc:	ldr	w10, [x8, #4]
    57e0:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    57e4:	add	x8, x8, #0x1f8
    57e8:	ldr	x2, [x8]
    57ec:	mov	w0, w9
    57f0:	mov	w1, w10
    57f4:	mov	w3, #0x2e                  	// #46
    57f8:	bl	5894 <PyInit__codecs_iso2022@@Base+0x3d40>
    57fc:	sturh	w0, [x29, #-34]
    5800:	ldurh	w9, [x29, #-34]
    5804:	mov	w10, #0xfffd                	// #65533
    5808:	cmp	w9, w10
    580c:	b.eq	581c <PyInit__codecs_iso2022@@Base+0x3cc8>  // b.none
    5810:	ldurh	w8, [x29, #-34]
    5814:	sturh	w8, [x29, #-2]
    5818:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    581c:	ldur	x8, [x29, #-24]
    5820:	mov	x9, #0x1                   	// #1
    5824:	str	x9, [x8]
    5828:	ldur	x8, [x29, #-16]
    582c:	ldr	w10, [x8]
    5830:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    5834:	add	x8, x8, #0x1f8
    5838:	ldr	x2, [x8]
    583c:	mov	w0, w10
    5840:	mov	w10, wzr
    5844:	mov	w1, w10
    5848:	mov	w3, #0x2e                  	// #46
    584c:	bl	5894 <PyInit__codecs_iso2022@@Base+0x3d40>
    5850:	sturh	w0, [x29, #-34]
    5854:	ldurh	w10, [x29, #-34]
    5858:	mov	w11, #0xfffd                	// #65533
    585c:	cmp	w10, w11
    5860:	b.ne	5870 <PyInit__codecs_iso2022@@Base+0x3d1c>  // b.any
    5864:	mov	w8, #0xffff                	// #65535
    5868:	sturh	w8, [x29, #-2]
    586c:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    5870:	ldurh	w8, [x29, #-34]
    5874:	sturh	w8, [x29, #-2]
    5878:	b	5884 <PyInit__codecs_iso2022@@Base+0x3d30>
    587c:	mov	w8, #0xffff                	// #65535
    5880:	sturh	w8, [x29, #-2]
    5884:	ldurh	w0, [x29, #-2]
    5888:	ldp	x29, x30, [sp, #80]
    588c:	add	sp, sp, #0x60
    5890:	ret
    5894:	sub	sp, sp, #0x30
    5898:	strh	w0, [sp, #44]
    589c:	strh	w1, [sp, #42]
    58a0:	str	x2, [sp, #32]
    58a4:	str	w3, [sp, #28]
    58a8:	ldrh	w8, [sp, #44]
    58ac:	ldrh	w9, [sp, #42]
    58b0:	orr	w8, w9, w8, lsl #16
    58b4:	str	w8, [sp, #12]
    58b8:	str	wzr, [sp, #20]
    58bc:	ldr	w8, [sp, #28]
    58c0:	str	w8, [sp, #16]
    58c4:	ldr	w8, [sp, #28]
    58c8:	asr	w8, w8, #1
    58cc:	str	w8, [sp, #24]
    58d0:	ldr	w8, [sp, #20]
    58d4:	ldr	w9, [sp, #16]
    58d8:	cmp	w8, w9
    58dc:	b.eq	5978 <PyInit__codecs_iso2022@@Base+0x3e24>  // b.none
    58e0:	ldr	w8, [sp, #12]
    58e4:	ldr	x9, [sp, #32]
    58e8:	ldrsw	x10, [sp, #24]
    58ec:	mov	x11, #0x8                   	// #8
    58f0:	mul	x10, x11, x10
    58f4:	ldr	w12, [x9, x10]
    58f8:	cmp	w8, w12
    58fc:	b.cs	5920 <PyInit__codecs_iso2022@@Base+0x3dcc>  // b.hs, b.nlast
    5900:	ldr	w8, [sp, #16]
    5904:	ldr	w9, [sp, #24]
    5908:	cmp	w8, w9
    590c:	b.eq	591c <PyInit__codecs_iso2022@@Base+0x3dc8>  // b.none
    5910:	ldr	w8, [sp, #24]
    5914:	str	w8, [sp, #16]
    5918:	b	5960 <PyInit__codecs_iso2022@@Base+0x3e0c>
    591c:	b	595c <PyInit__codecs_iso2022@@Base+0x3e08>
    5920:	ldr	w8, [sp, #12]
    5924:	ldr	x9, [sp, #32]
    5928:	ldrsw	x10, [sp, #24]
    592c:	mov	x11, #0x8                   	// #8
    5930:	mul	x10, x11, x10
    5934:	ldr	w12, [x9, x10]
    5938:	cmp	w8, w12
    593c:	b.ls	595c <PyInit__codecs_iso2022@@Base+0x3e08>  // b.plast
    5940:	ldr	w8, [sp, #20]
    5944:	ldr	w9, [sp, #24]
    5948:	cmp	w8, w9
    594c:	b.eq	595c <PyInit__codecs_iso2022@@Base+0x3e08>  // b.none
    5950:	ldr	w8, [sp, #24]
    5954:	str	w8, [sp, #20]
    5958:	b	5960 <PyInit__codecs_iso2022@@Base+0x3e0c>
    595c:	b	5978 <PyInit__codecs_iso2022@@Base+0x3e24>
    5960:	ldr	w8, [sp, #20]
    5964:	ldr	w9, [sp, #16]
    5968:	add	w8, w8, w9
    596c:	asr	w8, w8, #1
    5970:	str	w8, [sp, #24]
    5974:	b	58d0 <PyInit__codecs_iso2022@@Base+0x3d7c>
    5978:	ldr	w8, [sp, #12]
    597c:	ldr	x9, [sp, #32]
    5980:	ldrsw	x10, [sp, #24]
    5984:	mov	x11, #0x8                   	// #8
    5988:	mul	x10, x11, x10
    598c:	ldr	w12, [x9, x10]
    5990:	cmp	w8, w12
    5994:	b.ne	59b8 <PyInit__codecs_iso2022@@Base+0x3e64>  // b.any
    5998:	ldr	x8, [sp, #32]
    599c:	ldrsw	x9, [sp, #24]
    59a0:	mov	x10, #0x8                   	// #8
    59a4:	mul	x9, x10, x9
    59a8:	add	x8, x8, x9
    59ac:	ldrh	w11, [x8, #4]
    59b0:	strh	w11, [sp, #46]
    59b4:	b	59c0 <PyInit__codecs_iso2022@@Base+0x3e6c>
    59b8:	mov	w8, #0xfffd                	// #65533
    59bc:	strh	w8, [sp, #46]
    59c0:	ldrh	w0, [sp, #46]
    59c4:	add	sp, sp, #0x30
    59c8:	ret
    59cc:	sub	sp, sp, #0x40
    59d0:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    59d4:	add	x8, x8, #0x190
    59d8:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    59dc:	add	x9, x9, #0x1d0
    59e0:	adrp	x10, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    59e4:	add	x10, x10, #0x1e8
    59e8:	adrp	x11, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    59ec:	add	x11, x11, #0x200
    59f0:	str	x0, [sp, #48]
    59f4:	ldr	x12, [sp, #48]
    59f8:	ldrb	w13, [x12]
    59fc:	cmp	w13, #0x2e
    5a00:	str	x8, [sp, #32]
    5a04:	str	x9, [sp, #24]
    5a08:	str	x10, [sp, #16]
    5a0c:	str	x11, [sp, #8]
    5a10:	b.ne	5a24 <PyInit__codecs_iso2022@@Base+0x3ed0>  // b.any
    5a14:	ldr	x8, [sp, #48]
    5a18:	ldrb	w9, [x8, #1]
    5a1c:	cmp	w9, #0x21
    5a20:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5a24:	ldr	x8, [sp, #48]
    5a28:	ldrb	w9, [x8]
    5a2c:	cmp	w9, #0x2f
    5a30:	b.ne	5a44 <PyInit__codecs_iso2022@@Base+0x3ef0>  // b.any
    5a34:	ldr	x8, [sp, #48]
    5a38:	ldrb	w9, [x8, #1]
    5a3c:	cmp	w9, #0x7e
    5a40:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5a44:	ldr	x8, [sp, #48]
    5a48:	ldrb	w9, [x8]
    5a4c:	cmp	w9, #0x4f
    5a50:	b.ne	5a64 <PyInit__codecs_iso2022@@Base+0x3f10>  // b.any
    5a54:	ldr	x8, [sp, #48]
    5a58:	ldrb	w9, [x8, #1]
    5a5c:	cmp	w9, #0x54
    5a60:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5a64:	ldr	x8, [sp, #48]
    5a68:	ldrb	w9, [x8]
    5a6c:	cmp	w9, #0x4f
    5a70:	b.ne	5a84 <PyInit__codecs_iso2022@@Base+0x3f30>  // b.any
    5a74:	ldr	x8, [sp, #48]
    5a78:	ldrb	w9, [x8, #1]
    5a7c:	cmp	w9, #0x7e
    5a80:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5a84:	ldr	x8, [sp, #48]
    5a88:	ldrb	w9, [x8]
    5a8c:	cmp	w9, #0x74
    5a90:	b.ne	5aa4 <PyInit__codecs_iso2022@@Base+0x3f50>  // b.any
    5a94:	ldr	x8, [sp, #48]
    5a98:	ldrb	w9, [x8, #1]
    5a9c:	cmp	w9, #0x27
    5aa0:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5aa4:	ldr	x8, [sp, #48]
    5aa8:	ldrb	w9, [x8]
    5aac:	cmp	w9, #0x7e
    5ab0:	b.ne	5ac4 <PyInit__codecs_iso2022@@Base+0x3f70>  // b.any
    5ab4:	ldr	x8, [sp, #48]
    5ab8:	ldrb	w9, [x8, #1]
    5abc:	cmp	w9, #0x7a
    5ac0:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5ac4:	ldr	x8, [sp, #48]
    5ac8:	ldrb	w9, [x8]
    5acc:	cmp	w9, #0x7e
    5ad0:	b.ne	5ae4 <PyInit__codecs_iso2022@@Base+0x3f90>  // b.any
    5ad4:	ldr	x8, [sp, #48]
    5ad8:	ldrb	w9, [x8, #1]
    5adc:	cmp	w9, #0x7b
    5ae0:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5ae4:	ldr	x8, [sp, #48]
    5ae8:	ldrb	w9, [x8]
    5aec:	cmp	w9, #0x7e
    5af0:	b.ne	5b04 <PyInit__codecs_iso2022@@Base+0x3fb0>  // b.any
    5af4:	ldr	x8, [sp, #48]
    5af8:	ldrb	w9, [x8, #1]
    5afc:	cmp	w9, #0x7c
    5b00:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5b04:	ldr	x8, [sp, #48]
    5b08:	ldrb	w9, [x8]
    5b0c:	cmp	w9, #0x7e
    5b10:	b.ne	5b24 <PyInit__codecs_iso2022@@Base+0x3fd0>  // b.any
    5b14:	ldr	x8, [sp, #48]
    5b18:	ldrb	w9, [x8, #1]
    5b1c:	cmp	w9, #0x7d
    5b20:	b.eq	5b44 <PyInit__codecs_iso2022@@Base+0x3ff0>  // b.none
    5b24:	ldr	x8, [sp, #48]
    5b28:	ldrb	w9, [x8]
    5b2c:	cmp	w9, #0x7e
    5b30:	b.ne	5b50 <PyInit__codecs_iso2022@@Base+0x3ffc>  // b.any
    5b34:	ldr	x8, [sp, #48]
    5b38:	ldrb	w9, [x8, #1]
    5b3c:	cmp	w9, #0x7e
    5b40:	b.ne	5b50 <PyInit__codecs_iso2022@@Base+0x3ffc>  // b.any
    5b44:	mov	w8, #0xffff                	// #65535
    5b48:	str	w8, [sp, #60]
    5b4c:	b	5f6c <PyInit__codecs_iso2022@@Base+0x4418>
    5b50:	ldr	x8, [sp, #48]
    5b54:	ldrb	w9, [x8]
    5b58:	cmp	w9, #0x21
    5b5c:	b.ne	5b7c <PyInit__codecs_iso2022@@Base+0x4028>  // b.any
    5b60:	ldr	x8, [sp, #48]
    5b64:	ldrb	w9, [x8, #1]
    5b68:	cmp	w9, #0x40
    5b6c:	b.ne	5b7c <PyInit__codecs_iso2022@@Base+0x4028>  // b.any
    5b70:	mov	w8, #0xff3c                	// #65340
    5b74:	str	w8, [sp, #60]
    5b78:	b	5f6c <PyInit__codecs_iso2022@@Base+0x4418>
    5b7c:	ldr	x8, [sp, #32]
    5b80:	ldr	x9, [x8]
    5b84:	ldr	x10, [sp, #48]
    5b88:	ldrb	w11, [x10]
    5b8c:	mov	w10, w11
    5b90:	mov	x12, #0x10                  	// #16
    5b94:	mul	x10, x12, x10
    5b98:	add	x9, x9, x10
    5b9c:	ldr	x9, [x9]
    5ba0:	cbz	x9, 5c70 <PyInit__codecs_iso2022@@Base+0x411c>
    5ba4:	ldr	x8, [sp, #48]
    5ba8:	ldrb	w9, [x8, #1]
    5bac:	ldr	x8, [sp, #32]
    5bb0:	ldr	x10, [x8]
    5bb4:	ldr	x11, [sp, #48]
    5bb8:	ldrb	w12, [x11]
    5bbc:	mov	w11, w12
    5bc0:	mov	x13, #0x10                  	// #16
    5bc4:	mul	x11, x13, x11
    5bc8:	add	x10, x10, x11
    5bcc:	ldrb	w12, [x10, #8]
    5bd0:	cmp	w9, w12
    5bd4:	b.lt	5c70 <PyInit__codecs_iso2022@@Base+0x411c>  // b.tstop
    5bd8:	ldr	x8, [sp, #48]
    5bdc:	ldrb	w9, [x8, #1]
    5be0:	ldr	x8, [sp, #32]
    5be4:	ldr	x10, [x8]
    5be8:	ldr	x11, [sp, #48]
    5bec:	ldrb	w12, [x11]
    5bf0:	mov	w11, w12
    5bf4:	mov	x13, #0x10                  	// #16
    5bf8:	mul	x11, x13, x11
    5bfc:	add	x10, x10, x11
    5c00:	ldrb	w12, [x10, #9]
    5c04:	cmp	w9, w12
    5c08:	b.gt	5c70 <PyInit__codecs_iso2022@@Base+0x411c>
    5c0c:	ldr	x8, [sp, #32]
    5c10:	ldr	x9, [x8]
    5c14:	ldr	x10, [sp, #48]
    5c18:	ldrb	w11, [x10]
    5c1c:	mov	w10, w11
    5c20:	mov	x12, #0x10                  	// #16
    5c24:	mul	x10, x12, x10
    5c28:	add	x9, x9, x10
    5c2c:	ldr	x9, [x9]
    5c30:	ldr	x10, [sp, #48]
    5c34:	ldrb	w11, [x10, #1]
    5c38:	ldr	x10, [x8]
    5c3c:	ldr	x13, [sp, #48]
    5c40:	ldrb	w14, [x13]
    5c44:	mov	w13, w14
    5c48:	mul	x12, x12, x13
    5c4c:	add	x10, x10, x12
    5c50:	ldrb	w14, [x10, #8]
    5c54:	subs	w11, w11, w14
    5c58:	ldrh	w11, [x9, w11, sxtw #1]
    5c5c:	str	w11, [sp, #44]
    5c60:	mov	w14, #0xfffe                	// #65534
    5c64:	cmp	w11, w14
    5c68:	b.eq	5c70 <PyInit__codecs_iso2022@@Base+0x411c>  // b.none
    5c6c:	b	5f64 <PyInit__codecs_iso2022@@Base+0x4410>
    5c70:	ldr	x8, [sp, #24]
    5c74:	ldr	x9, [x8]
    5c78:	ldr	x10, [sp, #48]
    5c7c:	ldrb	w11, [x10]
    5c80:	mov	w10, w11
    5c84:	mov	x12, #0x10                  	// #16
    5c88:	mul	x10, x12, x10
    5c8c:	add	x9, x9, x10
    5c90:	ldr	x9, [x9]
    5c94:	cbz	x9, 5d64 <PyInit__codecs_iso2022@@Base+0x4210>
    5c98:	ldr	x8, [sp, #48]
    5c9c:	ldrb	w9, [x8, #1]
    5ca0:	ldr	x8, [sp, #24]
    5ca4:	ldr	x10, [x8]
    5ca8:	ldr	x11, [sp, #48]
    5cac:	ldrb	w12, [x11]
    5cb0:	mov	w11, w12
    5cb4:	mov	x13, #0x10                  	// #16
    5cb8:	mul	x11, x13, x11
    5cbc:	add	x10, x10, x11
    5cc0:	ldrb	w12, [x10, #8]
    5cc4:	cmp	w9, w12
    5cc8:	b.lt	5d64 <PyInit__codecs_iso2022@@Base+0x4210>  // b.tstop
    5ccc:	ldr	x8, [sp, #48]
    5cd0:	ldrb	w9, [x8, #1]
    5cd4:	ldr	x8, [sp, #24]
    5cd8:	ldr	x10, [x8]
    5cdc:	ldr	x11, [sp, #48]
    5ce0:	ldrb	w12, [x11]
    5ce4:	mov	w11, w12
    5ce8:	mov	x13, #0x10                  	// #16
    5cec:	mul	x11, x13, x11
    5cf0:	add	x10, x10, x11
    5cf4:	ldrb	w12, [x10, #9]
    5cf8:	cmp	w9, w12
    5cfc:	b.gt	5d64 <PyInit__codecs_iso2022@@Base+0x4210>
    5d00:	ldr	x8, [sp, #24]
    5d04:	ldr	x9, [x8]
    5d08:	ldr	x10, [sp, #48]
    5d0c:	ldrb	w11, [x10]
    5d10:	mov	w10, w11
    5d14:	mov	x12, #0x10                  	// #16
    5d18:	mul	x10, x12, x10
    5d1c:	add	x9, x9, x10
    5d20:	ldr	x9, [x9]
    5d24:	ldr	x10, [sp, #48]
    5d28:	ldrb	w11, [x10, #1]
    5d2c:	ldr	x10, [x8]
    5d30:	ldr	x13, [sp, #48]
    5d34:	ldrb	w14, [x13]
    5d38:	mov	w13, w14
    5d3c:	mul	x12, x12, x13
    5d40:	add	x10, x10, x12
    5d44:	ldrb	w14, [x10, #8]
    5d48:	subs	w11, w11, w14
    5d4c:	ldrh	w11, [x9, w11, sxtw #1]
    5d50:	str	w11, [sp, #44]
    5d54:	mov	w14, #0xfffe                	// #65534
    5d58:	cmp	w11, w14
    5d5c:	b.eq	5d64 <PyInit__codecs_iso2022@@Base+0x4210>  // b.none
    5d60:	b	5f64 <PyInit__codecs_iso2022@@Base+0x4410>
    5d64:	ldr	x8, [sp, #16]
    5d68:	ldr	x9, [x8]
    5d6c:	ldr	x10, [sp, #48]
    5d70:	ldrb	w11, [x10]
    5d74:	mov	w10, w11
    5d78:	mov	x12, #0x10                  	// #16
    5d7c:	mul	x10, x12, x10
    5d80:	add	x9, x9, x10
    5d84:	ldr	x9, [x9]
    5d88:	cbz	x9, 5e64 <PyInit__codecs_iso2022@@Base+0x4310>
    5d8c:	ldr	x8, [sp, #48]
    5d90:	ldrb	w9, [x8, #1]
    5d94:	ldr	x8, [sp, #16]
    5d98:	ldr	x10, [x8]
    5d9c:	ldr	x11, [sp, #48]
    5da0:	ldrb	w12, [x11]
    5da4:	mov	w11, w12
    5da8:	mov	x13, #0x10                  	// #16
    5dac:	mul	x11, x13, x11
    5db0:	add	x10, x10, x11
    5db4:	ldrb	w12, [x10, #8]
    5db8:	cmp	w9, w12
    5dbc:	b.lt	5e64 <PyInit__codecs_iso2022@@Base+0x4310>  // b.tstop
    5dc0:	ldr	x8, [sp, #48]
    5dc4:	ldrb	w9, [x8, #1]
    5dc8:	ldr	x8, [sp, #16]
    5dcc:	ldr	x10, [x8]
    5dd0:	ldr	x11, [sp, #48]
    5dd4:	ldrb	w12, [x11]
    5dd8:	mov	w11, w12
    5ddc:	mov	x13, #0x10                  	// #16
    5de0:	mul	x11, x13, x11
    5de4:	add	x10, x10, x11
    5de8:	ldrb	w12, [x10, #9]
    5dec:	cmp	w9, w12
    5df0:	b.gt	5e64 <PyInit__codecs_iso2022@@Base+0x4310>
    5df4:	ldr	x8, [sp, #16]
    5df8:	ldr	x9, [x8]
    5dfc:	ldr	x10, [sp, #48]
    5e00:	ldrb	w11, [x10]
    5e04:	mov	w10, w11
    5e08:	mov	x12, #0x10                  	// #16
    5e0c:	mul	x10, x12, x10
    5e10:	add	x9, x9, x10
    5e14:	ldr	x9, [x9]
    5e18:	ldr	x10, [sp, #48]
    5e1c:	ldrb	w11, [x10, #1]
    5e20:	ldr	x10, [x8]
    5e24:	ldr	x13, [sp, #48]
    5e28:	ldrb	w14, [x13]
    5e2c:	mov	w13, w14
    5e30:	mul	x12, x12, x13
    5e34:	add	x10, x10, x12
    5e38:	ldrb	w14, [x10, #8]
    5e3c:	subs	w11, w11, w14
    5e40:	ldrh	w11, [x9, w11, sxtw #1]
    5e44:	str	w11, [sp, #44]
    5e48:	mov	w14, #0xfffe                	// #65534
    5e4c:	cmp	w11, w14
    5e50:	b.eq	5e64 <PyInit__codecs_iso2022@@Base+0x4310>  // b.none
    5e54:	ldr	w8, [sp, #44]
    5e58:	orr	w8, w8, #0x20000
    5e5c:	str	w8, [sp, #44]
    5e60:	b	5f64 <PyInit__codecs_iso2022@@Base+0x4410>
    5e64:	ldr	x8, [sp, #8]
    5e68:	ldr	x9, [x8]
    5e6c:	ldr	x10, [sp, #48]
    5e70:	ldrb	w11, [x10]
    5e74:	mov	w10, w11
    5e78:	mov	x12, #0x10                  	// #16
    5e7c:	mul	x10, x12, x10
    5e80:	add	x9, x9, x10
    5e84:	ldr	x9, [x9]
    5e88:	cbz	x9, 5f58 <PyInit__codecs_iso2022@@Base+0x4404>
    5e8c:	ldr	x8, [sp, #48]
    5e90:	ldrb	w9, [x8, #1]
    5e94:	ldr	x8, [sp, #8]
    5e98:	ldr	x10, [x8]
    5e9c:	ldr	x11, [sp, #48]
    5ea0:	ldrb	w12, [x11]
    5ea4:	mov	w11, w12
    5ea8:	mov	x13, #0x10                  	// #16
    5eac:	mul	x11, x13, x11
    5eb0:	add	x10, x10, x11
    5eb4:	ldrb	w12, [x10, #8]
    5eb8:	cmp	w9, w12
    5ebc:	b.lt	5f58 <PyInit__codecs_iso2022@@Base+0x4404>  // b.tstop
    5ec0:	ldr	x8, [sp, #48]
    5ec4:	ldrb	w9, [x8, #1]
    5ec8:	ldr	x8, [sp, #8]
    5ecc:	ldr	x10, [x8]
    5ed0:	ldr	x11, [sp, #48]
    5ed4:	ldrb	w12, [x11]
    5ed8:	mov	w11, w12
    5edc:	mov	x13, #0x10                  	// #16
    5ee0:	mul	x11, x13, x11
    5ee4:	add	x10, x10, x11
    5ee8:	ldrb	w12, [x10, #9]
    5eec:	cmp	w9, w12
    5ef0:	b.gt	5f58 <PyInit__codecs_iso2022@@Base+0x4404>
    5ef4:	ldr	x8, [sp, #8]
    5ef8:	ldr	x9, [x8]
    5efc:	ldr	x10, [sp, #48]
    5f00:	ldrb	w11, [x10]
    5f04:	mov	w10, w11
    5f08:	mov	x12, #0x10                  	// #16
    5f0c:	mul	x10, x12, x10
    5f10:	add	x9, x9, x10
    5f14:	ldr	x9, [x9]
    5f18:	ldr	x10, [sp, #48]
    5f1c:	ldrb	w11, [x10, #1]
    5f20:	ldr	x10, [x8]
    5f24:	ldr	x13, [sp, #48]
    5f28:	ldrb	w14, [x13]
    5f2c:	mov	w13, w14
    5f30:	mul	x12, x12, x13
    5f34:	add	x10, x10, x12
    5f38:	ldrb	w14, [x10, #8]
    5f3c:	subs	w11, w11, w14
    5f40:	ldr	w11, [x9, w11, sxtw #2]
    5f44:	str	w11, [sp, #44]
    5f48:	mov	w14, #0xfffe                	// #65534
    5f4c:	cmp	w11, w14
    5f50:	b.eq	5f58 <PyInit__codecs_iso2022@@Base+0x4404>  // b.none
    5f54:	b	5f64 <PyInit__codecs_iso2022@@Base+0x4410>
    5f58:	mov	w8, #0xffff                	// #65535
    5f5c:	str	w8, [sp, #60]
    5f60:	b	5f6c <PyInit__codecs_iso2022@@Base+0x4418>
    5f64:	ldr	w8, [sp, #44]
    5f68:	str	w8, [sp, #60]
    5f6c:	ldr	w0, [sp, #60]
    5f70:	add	sp, sp, #0x40
    5f74:	ret
    5f78:	sub	sp, sp, #0x40
    5f7c:	stp	x29, x30, [sp, #48]
    5f80:	add	x29, sp, #0x30
    5f84:	mov	x8, #0x7d0                 	// #2000
    5f88:	stur	x0, [x29, #-16]
    5f8c:	str	x1, [sp, #24]
    5f90:	ldr	x9, [sp, #24]
    5f94:	ldr	x9, [x9]
    5f98:	str	x9, [sp, #8]
    5f9c:	ldur	x0, [x29, #-16]
    5fa0:	ldr	x1, [sp, #24]
    5fa4:	mov	x2, x8
    5fa8:	bl	51dc <PyInit__codecs_iso2022@@Base+0x3688>
    5fac:	strh	w0, [sp, #22]
    5fb0:	ldr	x8, [sp, #8]
    5fb4:	cmp	x8, #0x1
    5fb8:	str	x8, [sp]
    5fbc:	b.eq	5fd4 <PyInit__codecs_iso2022@@Base+0x4480>  // b.none
    5fc0:	b	5fc4 <PyInit__codecs_iso2022@@Base+0x4470>
    5fc4:	ldr	x8, [sp]
    5fc8:	cmp	x8, #0x2
    5fcc:	b.eq	5ffc <PyInit__codecs_iso2022@@Base+0x44a8>  // b.none
    5fd0:	b	6024 <PyInit__codecs_iso2022@@Base+0x44d0>
    5fd4:	ldrh	w8, [sp, #22]
    5fd8:	mov	w9, #0xfffe                	// #65534
    5fdc:	cmp	w8, w9
    5fe0:	b.ne	5ff0 <PyInit__codecs_iso2022@@Base+0x449c>  // b.any
    5fe4:	mov	w8, #0xfffe                	// #65534
    5fe8:	sturh	w8, [x29, #-2]
    5fec:	b	602c <PyInit__codecs_iso2022@@Base+0x44d8>
    5ff0:	mov	w8, #0xffff                	// #65535
    5ff4:	sturh	w8, [x29, #-2]
    5ff8:	b	602c <PyInit__codecs_iso2022@@Base+0x44d8>
    5ffc:	ldr	x8, [sp, #24]
    6000:	ldr	x8, [x8]
    6004:	cmp	x8, #0x2
    6008:	b.eq	6018 <PyInit__codecs_iso2022@@Base+0x44c4>  // b.none
    600c:	mov	w8, #0xffff                	// #65535
    6010:	sturh	w8, [x29, #-2]
    6014:	b	602c <PyInit__codecs_iso2022@@Base+0x44d8>
    6018:	ldrh	w8, [sp, #22]
    601c:	sturh	w8, [x29, #-2]
    6020:	b	602c <PyInit__codecs_iso2022@@Base+0x44d8>
    6024:	mov	w8, #0xffff                	// #65535
    6028:	sturh	w8, [x29, #-2]
    602c:	ldurh	w0, [x29, #-2]
    6030:	ldp	x29, x30, [sp, #48]
    6034:	add	sp, sp, #0x40
    6038:	ret
    603c:	sub	sp, sp, #0x30
    6040:	stp	x29, x30, [sp, #32]
    6044:	add	x29, sp, #0x20
    6048:	mov	x8, #0x7d0                 	// #2000
    604c:	mov	w9, #0xffff                	// #65535
    6050:	str	x0, [sp, #16]
    6054:	str	x1, [sp, #8]
    6058:	ldr	x0, [sp, #16]
    605c:	ldr	x1, [sp, #8]
    6060:	mov	x2, x8
    6064:	str	w9, [sp]
    6068:	bl	51dc <PyInit__codecs_iso2022@@Base+0x3688>
    606c:	strh	w0, [sp, #6]
    6070:	ldrh	w9, [sp, #6]
    6074:	ldr	w10, [sp]
    6078:	cmp	w9, w10
    607c:	b.eq	6090 <PyInit__codecs_iso2022@@Base+0x453c>  // b.none
    6080:	ldrh	w8, [sp, #6]
    6084:	mov	w9, #0xfffe                	// #65534
    6088:	cmp	w8, w9
    608c:	b.ne	609c <PyInit__codecs_iso2022@@Base+0x4548>  // b.any
    6090:	ldrh	w8, [sp, #6]
    6094:	sturh	w8, [x29, #-2]
    6098:	b	60bc <PyInit__codecs_iso2022@@Base+0x4568>
    609c:	ldrh	w8, [sp, #6]
    60a0:	and	w8, w8, #0x8000
    60a4:	cbz	w8, 60b4 <PyInit__codecs_iso2022@@Base+0x4560>
    60a8:	mov	w8, #0xffff                	// #65535
    60ac:	sturh	w8, [x29, #-2]
    60b0:	b	60bc <PyInit__codecs_iso2022@@Base+0x4568>
    60b4:	ldrh	w8, [sp, #6]
    60b8:	sturh	w8, [x29, #-2]
    60bc:	ldurh	w0, [x29, #-2]
    60c0:	ldp	x29, x30, [sp, #32]
    60c4:	add	sp, sp, #0x30
    60c8:	ret
    60cc:	sub	sp, sp, #0x30
    60d0:	adrp	x8, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    60d4:	add	x8, x8, #0x1d8
    60d8:	adrp	x9, 18000 <PyInit__codecs_iso2022@@Base+0x164ac>
    60dc:	add	x9, x9, #0x1f0
    60e0:	str	x0, [sp, #32]
    60e4:	ldr	x10, [sp, #32]
    60e8:	ldrb	w11, [x10]
    60ec:	cmp	w11, #0x7d
    60f0:	str	x8, [sp, #16]
    60f4:	str	x9, [sp, #8]
    60f8:	b.ne	6114 <PyInit__codecs_iso2022@@Base+0x45c0>  // b.any
    60fc:	ldr	x8, [sp, #32]
    6100:	ldrb	w9, [x8, #1]
    6104:	cmp	w9, #0x3b
    6108:	b.ne	6114 <PyInit__codecs_iso2022@@Base+0x45c0>  // b.any
    610c:	mov	w8, #0x9b1d                	// #39709
    6110:	str	w8, [sp, #28]
    6114:	ldr	x8, [sp, #16]
    6118:	ldr	x9, [x8]
    611c:	ldr	x10, [sp, #32]
    6120:	ldrb	w11, [x10]
    6124:	mov	w10, w11
    6128:	mov	x12, #0x10                  	// #16
    612c:	mul	x10, x12, x10
    6130:	add	x9, x9, x10
    6134:	ldr	x9, [x9]
    6138:	cbz	x9, 6208 <PyInit__codecs_iso2022@@Base+0x46b4>
    613c:	ldr	x8, [sp, #32]
    6140:	ldrb	w9, [x8, #1]
    6144:	ldr	x8, [sp, #16]
    6148:	ldr	x10, [x8]
    614c:	ldr	x11, [sp, #32]
    6150:	ldrb	w12, [x11]
    6154:	mov	w11, w12
    6158:	mov	x13, #0x10                  	// #16
    615c:	mul	x11, x13, x11
    6160:	add	x10, x10, x11
    6164:	ldrb	w12, [x10, #8]
    6168:	cmp	w9, w12
    616c:	b.lt	6208 <PyInit__codecs_iso2022@@Base+0x46b4>  // b.tstop
    6170:	ldr	x8, [sp, #32]
    6174:	ldrb	w9, [x8, #1]
    6178:	ldr	x8, [sp, #16]
    617c:	ldr	x10, [x8]
    6180:	ldr	x11, [sp, #32]
    6184:	ldrb	w12, [x11]
    6188:	mov	w11, w12
    618c:	mov	x13, #0x10                  	// #16
    6190:	mul	x11, x13, x11
    6194:	add	x10, x10, x11
    6198:	ldrb	w12, [x10, #9]
    619c:	cmp	w9, w12
    61a0:	b.gt	6208 <PyInit__codecs_iso2022@@Base+0x46b4>
    61a4:	ldr	x8, [sp, #16]
    61a8:	ldr	x9, [x8]
    61ac:	ldr	x10, [sp, #32]
    61b0:	ldrb	w11, [x10]
    61b4:	mov	w10, w11
    61b8:	mov	x12, #0x10                  	// #16
    61bc:	mul	x10, x12, x10
    61c0:	add	x9, x9, x10
    61c4:	ldr	x9, [x9]
    61c8:	ldr	x10, [sp, #32]
    61cc:	ldrb	w11, [x10, #1]
    61d0:	ldr	x10, [x8]
    61d4:	ldr	x13, [sp, #32]
    61d8:	ldrb	w14, [x13]
    61dc:	mov	w13, w14
    61e0:	mul	x12, x12, x13
    61e4:	add	x10, x10, x12
    61e8:	ldrb	w14, [x10, #8]
    61ec:	subs	w11, w11, w14
    61f0:	ldrh	w11, [x9, w11, sxtw #1]
    61f4:	str	w11, [sp, #28]
    61f8:	mov	w14, #0xfffe                	// #65534
    61fc:	cmp	w11, w14
    6200:	b.eq	6208 <PyInit__codecs_iso2022@@Base+0x46b4>  // b.none
    6204:	b	6314 <PyInit__codecs_iso2022@@Base+0x47c0>
    6208:	ldr	x8, [sp, #8]
    620c:	ldr	x9, [x8]
    6210:	ldr	x10, [sp, #32]
    6214:	ldrb	w11, [x10]
    6218:	mov	w10, w11
    621c:	mov	x12, #0x10                  	// #16
    6220:	mul	x10, x12, x10
    6224:	add	x9, x9, x10
    6228:	ldr	x9, [x9]
    622c:	cbz	x9, 6308 <PyInit__codecs_iso2022@@Base+0x47b4>
    6230:	ldr	x8, [sp, #32]
    6234:	ldrb	w9, [x8, #1]
    6238:	ldr	x8, [sp, #8]
    623c:	ldr	x10, [x8]
    6240:	ldr	x11, [sp, #32]
    6244:	ldrb	w12, [x11]
    6248:	mov	w11, w12
    624c:	mov	x13, #0x10                  	// #16
    6250:	mul	x11, x13, x11
    6254:	add	x10, x10, x11
    6258:	ldrb	w12, [x10, #8]
    625c:	cmp	w9, w12
    6260:	b.lt	6308 <PyInit__codecs_iso2022@@Base+0x47b4>  // b.tstop
    6264:	ldr	x8, [sp, #32]
    6268:	ldrb	w9, [x8, #1]
    626c:	ldr	x8, [sp, #8]
    6270:	ldr	x10, [x8]
    6274:	ldr	x11, [sp, #32]
    6278:	ldrb	w12, [x11]
    627c:	mov	w11, w12
    6280:	mov	x13, #0x10                  	// #16
    6284:	mul	x11, x13, x11
    6288:	add	x10, x10, x11
    628c:	ldrb	w12, [x10, #9]
    6290:	cmp	w9, w12
    6294:	b.gt	6308 <PyInit__codecs_iso2022@@Base+0x47b4>
    6298:	ldr	x8, [sp, #8]
    629c:	ldr	x9, [x8]
    62a0:	ldr	x10, [sp, #32]
    62a4:	ldrb	w11, [x10]
    62a8:	mov	w10, w11
    62ac:	mov	x12, #0x10                  	// #16
    62b0:	mul	x10, x12, x10
    62b4:	add	x9, x9, x10
    62b8:	ldr	x9, [x9]
    62bc:	ldr	x10, [sp, #32]
    62c0:	ldrb	w11, [x10, #1]
    62c4:	ldr	x10, [x8]
    62c8:	ldr	x13, [sp, #32]
    62cc:	ldrb	w14, [x13]
    62d0:	mov	w13, w14
    62d4:	mul	x12, x12, x13
    62d8:	add	x10, x10, x12
    62dc:	ldrb	w14, [x10, #8]
    62e0:	subs	w11, w11, w14
    62e4:	ldrh	w11, [x9, w11, sxtw #1]
    62e8:	str	w11, [sp, #28]
    62ec:	mov	w14, #0xfffe                	// #65534
    62f0:	cmp	w11, w14
    62f4:	b.eq	6308 <PyInit__codecs_iso2022@@Base+0x47b4>  // b.none
    62f8:	ldr	w8, [sp, #28]
    62fc:	orr	w8, w8, #0x20000
    6300:	str	w8, [sp, #28]
    6304:	b	6314 <PyInit__codecs_iso2022@@Base+0x47c0>
    6308:	mov	w8, #0xffff                	// #65535
    630c:	str	w8, [sp, #44]
    6310:	b	631c <PyInit__codecs_iso2022@@Base+0x47c8>
    6314:	ldr	w8, [sp, #28]
    6318:	str	w8, [sp, #44]
    631c:	ldr	w0, [sp, #44]
    6320:	add	sp, sp, #0x30
    6324:	ret
    6328:	sub	sp, sp, #0x30
    632c:	stp	x29, x30, [sp, #32]
    6330:	add	x29, sp, #0x20
    6334:	mov	x8, #0x7d0                 	// #2000
    6338:	mov	w9, #0xffff                	// #65535
    633c:	str	x0, [sp, #16]
    6340:	str	x1, [sp, #8]
    6344:	ldr	x0, [sp, #16]
    6348:	ldr	x1, [sp, #8]
    634c:	mov	x2, x8
    6350:	str	w9, [sp]
    6354:	bl	51dc <PyInit__codecs_iso2022@@Base+0x3688>
    6358:	strh	w0, [sp, #6]
    635c:	ldrh	w9, [sp, #6]
    6360:	ldr	w10, [sp]
    6364:	cmp	w9, w10
    6368:	b.eq	637c <PyInit__codecs_iso2022@@Base+0x4828>  // b.none
    636c:	ldrh	w8, [sp, #6]
    6370:	mov	w9, #0xfffe                	// #65534
    6374:	cmp	w8, w9
    6378:	b.ne	6388 <PyInit__codecs_iso2022@@Base+0x4834>  // b.any
    637c:	ldrh	w8, [sp, #6]
    6380:	sturh	w8, [x29, #-2]
    6384:	b	63ac <PyInit__codecs_iso2022@@Base+0x4858>
    6388:	ldrh	w8, [sp, #6]
    638c:	and	w8, w8, #0x8000
    6390:	cbz	w8, 63a4 <PyInit__codecs_iso2022@@Base+0x4850>
    6394:	ldrh	w8, [sp, #6]
    6398:	and	w8, w8, #0x7fff
    639c:	sturh	w8, [x29, #-2]
    63a0:	b	63ac <PyInit__codecs_iso2022@@Base+0x4858>
    63a4:	mov	w8, #0xffff                	// #65535
    63a8:	sturh	w8, [x29, #-2]
    63ac:	ldurh	w0, [x29, #-2]
    63b0:	ldp	x29, x30, [sp, #32]
    63b4:	add	sp, sp, #0x30
    63b8:	ret
    63bc:	sub	sp, sp, #0x20
    63c0:	str	x0, [sp, #16]
    63c4:	ldr	x8, [sp, #16]
    63c8:	ldrb	w9, [x8]
    63cc:	eor	w9, w9, #0x80
    63d0:	cmp	w9, #0xa1
    63d4:	b.lt	6408 <PyInit__codecs_iso2022@@Base+0x48b4>  // b.tstop
    63d8:	ldr	x8, [sp, #16]
    63dc:	ldrb	w9, [x8]
    63e0:	eor	w9, w9, #0x80
    63e4:	cmp	w9, #0xdf
    63e8:	b.gt	6408 <PyInit__codecs_iso2022@@Base+0x48b4>
    63ec:	ldr	x8, [sp, #16]
    63f0:	ldrb	w9, [x8]
    63f4:	eor	w9, w9, #0x80
    63f8:	mov	w10, #0xfec0                	// #65216
    63fc:	add	w9, w10, w9
    6400:	str	w9, [sp, #12]
    6404:	b	6414 <PyInit__codecs_iso2022@@Base+0x48c0>
    6408:	mov	w8, #0xffff                	// #65535
    640c:	str	w8, [sp, #28]
    6410:	b	641c <PyInit__codecs_iso2022@@Base+0x48c8>
    6414:	ldr	w8, [sp, #12]
    6418:	str	w8, [sp, #28]
    641c:	ldr	w0, [sp, #28]
    6420:	add	sp, sp, #0x20
    6424:	ret
    6428:	sub	sp, sp, #0x20
    642c:	mov	w8, #0xff61                	// #65377
    6430:	str	x0, [sp, #16]
    6434:	str	x1, [sp, #8]
    6438:	ldr	x9, [sp, #16]
    643c:	ldr	w10, [x9]
    6440:	cmp	w10, w8
    6444:	b.cc	6474 <PyInit__codecs_iso2022@@Base+0x4920>  // b.lo, b.ul, b.last
    6448:	ldr	x8, [sp, #16]
    644c:	ldr	w9, [x8]
    6450:	mov	w10, #0xff9f                	// #65439
    6454:	cmp	w9, w10
    6458:	b.hi	6474 <PyInit__codecs_iso2022@@Base+0x4920>  // b.pmore
    645c:	ldr	x8, [sp, #16]
    6460:	ldr	w9, [x8]
    6464:	mov	w10, #0xfec0                	// #65216
    6468:	subs	w9, w9, w10
    646c:	strh	w9, [sp, #6]
    6470:	b	6480 <PyInit__codecs_iso2022@@Base+0x492c>
    6474:	mov	w8, #0xffff                	// #65535
    6478:	strh	w8, [sp, #30]
    647c:	b	648c <PyInit__codecs_iso2022@@Base+0x4938>
    6480:	ldrh	w8, [sp, #6]
    6484:	subs	w8, w8, #0x80
    6488:	strh	w8, [sp, #30]
    648c:	ldrh	w0, [sp, #30]
    6490:	add	sp, sp, #0x20
    6494:	ret

Disassembly of section .fini:

0000000000006498 <.fini>:
    6498:	stp	x29, x30, [sp, #-16]!
    649c:	mov	x29, sp
    64a0:	ldp	x29, x30, [sp], #16
    64a4:	ret
