
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//loadenv.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_file_size>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	x0, [x0, #64]
      10:	add	sp, sp, #0x10
      14:	ret

0000000000000018 <grub_partition_get_start>:
      18:	sub	sp, sp, #0x20
      1c:	str	x0, [sp, #8]
      20:	str	xzr, [sp, #16]
      24:	ldr	x0, [sp, #8]
      28:	str	x0, [sp, #24]
      2c:	b	50 <grub_partition_get_start+0x38>
      30:	ldr	x0, [sp, #24]
      34:	ldr	x0, [x0, #8]
      38:	ldr	x1, [sp, #16]
      3c:	add	x0, x1, x0
      40:	str	x0, [sp, #16]
      44:	ldr	x0, [sp, #24]
      48:	ldr	x0, [x0, #40]
      4c:	str	x0, [sp, #24]
      50:	ldr	x0, [sp, #24]
      54:	cmp	x0, #0x0
      58:	b.ne	30 <grub_partition_get_start+0x18>  // b.any
      5c:	ldr	x0, [sp, #16]
      60:	add	sp, sp, #0x20
      64:	ret

0000000000000068 <grub_envblk_buffer>:
      68:	sub	sp, sp, #0x10
      6c:	str	x0, [sp, #8]
      70:	ldr	x0, [sp, #8]
      74:	ldr	x0, [x0]
      78:	add	sp, sp, #0x10
      7c:	ret

0000000000000080 <open_envblk_file>:
      80:	stp	x29, x30, [sp, #-64]!
      84:	mov	x29, sp
      88:	str	x0, [sp, #24]
      8c:	str	w1, [sp, #20]
      90:	str	xzr, [sp, #56]
      94:	ldr	x0, [sp, #24]
      98:	cmp	x0, #0x0
      9c:	b.ne	16c <open_envblk_file+0xec>  // b.any
      a0:	adrp	x0, 0 <grub_file_size>
      a4:	add	x0, x0, #0x0
      a8:	ldr	x0, [x0]
      ac:	bl	0 <grub_env_get>
      b0:	str	x0, [sp, #48]
      b4:	ldr	x0, [sp, #48]
      b8:	cmp	x0, #0x0
      bc:	b.ne	e8 <open_envblk_file+0x68>  // b.any
      c0:	adrp	x0, 0 <grub_file_size>
      c4:	add	x0, x0, #0x0
      c8:	ldr	x2, [x0]
      cc:	adrp	x0, 0 <grub_file_size>
      d0:	add	x0, x0, #0x0
      d4:	ldr	x1, [x0]
      d8:	mov	w0, #0x5                   	// #5
      dc:	bl	0 <grub_error>
      e0:	mov	x0, #0x0                   	// #0
      e4:	b	188 <open_envblk_file+0x108>
      e8:	ldr	x0, [sp, #48]
      ec:	bl	0 <grub_strlen>
      f0:	str	w0, [sp, #44]
      f4:	ldr	w0, [sp, #44]
      f8:	add	w0, w0, #0x1
      fc:	sxtw	x0, w0
     100:	add	x0, x0, #0x8
     104:	bl	0 <grub_malloc>
     108:	str	x0, [sp, #56]
     10c:	ldr	x0, [sp, #56]
     110:	cmp	x0, #0x0
     114:	b.ne	120 <open_envblk_file+0xa0>  // b.any
     118:	mov	x0, #0x0                   	// #0
     11c:	b	188 <open_envblk_file+0x108>
     120:	ldr	x0, [sp, #56]
     124:	str	x0, [sp, #24]
     128:	ldr	x1, [sp, #48]
     12c:	ldr	x0, [sp, #24]
     130:	bl	0 <grub_strcpy>
     134:	ldrsw	x0, [sp, #44]
     138:	ldr	x1, [sp, #24]
     13c:	add	x0, x1, x0
     140:	mov	w1, #0x2f                  	// #47
     144:	strb	w1, [x0]
     148:	ldrsw	x0, [sp, #44]
     14c:	add	x0, x0, #0x1
     150:	ldr	x1, [sp, #24]
     154:	add	x2, x1, x0
     158:	adrp	x0, 0 <grub_file_size>
     15c:	add	x0, x0, #0x0
     160:	ldr	x1, [x0]
     164:	mov	x0, x2
     168:	bl	0 <grub_strcpy>
     16c:	ldr	w1, [sp, #20]
     170:	ldr	x0, [sp, #24]
     174:	bl	0 <grub_file_open>
     178:	str	x0, [sp, #32]
     17c:	ldr	x0, [sp, #56]
     180:	bl	0 <grub_free>
     184:	ldr	x0, [sp, #32]
     188:	ldp	x29, x30, [sp], #64
     18c:	ret
	...

00000000000001a8 <read_envblk_file>:
     1a8:	stp	x29, x30, [sp, #-80]!
     1ac:	mov	x29, sp
     1b0:	str	x0, [sp, #24]
     1b4:	str	xzr, [sp, #72]
     1b8:	ldr	x0, [sp, #24]
     1bc:	bl	0 <grub_file_size>
     1c0:	str	x0, [sp, #64]
     1c4:	ldr	x0, [sp, #64]
     1c8:	bl	0 <grub_malloc>
     1cc:	str	x0, [sp, #56]
     1d0:	ldr	x0, [sp, #56]
     1d4:	cmp	x0, #0x0
     1d8:	b.ne	240 <read_envblk_file+0x98>  // b.any
     1dc:	mov	x0, #0x0                   	// #0
     1e0:	b	290 <read_envblk_file+0xe8>
     1e4:	ldr	x1, [sp, #56]
     1e8:	ldr	x0, [sp, #72]
     1ec:	add	x0, x1, x0
     1f0:	ldr	x2, [sp, #64]
     1f4:	mov	x1, x0
     1f8:	ldr	x0, [sp, #24]
     1fc:	bl	0 <grub_file_read>
     200:	str	x0, [sp, #40]
     204:	ldr	x0, [sp, #40]
     208:	cmp	x0, #0x0
     20c:	b.gt	220 <read_envblk_file+0x78>
     210:	ldr	x0, [sp, #56]
     214:	bl	0 <grub_free>
     218:	mov	x0, #0x0                   	// #0
     21c:	b	290 <read_envblk_file+0xe8>
     220:	ldr	x0, [sp, #40]
     224:	ldr	x1, [sp, #64]
     228:	sub	x0, x1, x0
     22c:	str	x0, [sp, #64]
     230:	ldr	x0, [sp, #40]
     234:	ldr	x1, [sp, #72]
     238:	add	x0, x1, x0
     23c:	str	x0, [sp, #72]
     240:	ldr	x0, [sp, #64]
     244:	cmp	x0, #0x0
     248:	b.ne	1e4 <read_envblk_file+0x3c>  // b.any
     24c:	ldr	x1, [sp, #72]
     250:	ldr	x0, [sp, #56]
     254:	bl	f24 <grub_envblk_open>
     258:	str	x0, [sp, #48]
     25c:	ldr	x0, [sp, #48]
     260:	cmp	x0, #0x0
     264:	b.ne	28c <read_envblk_file+0xe4>  // b.any
     268:	ldr	x0, [sp, #56]
     26c:	bl	0 <grub_free>
     270:	adrp	x0, 0 <grub_file_size>
     274:	add	x0, x0, #0x0
     278:	ldr	x1, [x0]
     27c:	mov	w0, #0x4                   	// #4
     280:	bl	0 <grub_error>
     284:	mov	x0, #0x0                   	// #0
     288:	b	290 <read_envblk_file+0xe8>
     28c:	ldr	x0, [sp, #48]
     290:	ldp	x29, x30, [sp], #80
     294:	ret
	...

00000000000002a0 <test_whitelist_membership>:
     2a0:	stp	x29, x30, [sp, #-48]!
     2a4:	mov	x29, sp
     2a8:	str	x0, [sp, #24]
     2ac:	str	x1, [sp, #16]
     2b0:	str	xzr, [sp, #40]
     2b4:	b	2f8 <test_whitelist_membership+0x58>
     2b8:	ldr	x0, [sp, #16]
     2bc:	ldr	x1, [x0, #8]
     2c0:	ldr	x0, [sp, #40]
     2c4:	lsl	x0, x0, #3
     2c8:	add	x0, x1, x0
     2cc:	ldr	x0, [x0]
     2d0:	mov	x1, x0
     2d4:	ldr	x0, [sp, #24]
     2d8:	bl	0 <grub_strcmp>
     2dc:	cmp	w0, #0x0
     2e0:	b.ne	2ec <test_whitelist_membership+0x4c>  // b.any
     2e4:	mov	w0, #0x1                   	// #1
     2e8:	b	310 <test_whitelist_membership+0x70>
     2ec:	ldr	x0, [sp, #40]
     2f0:	add	x0, x0, #0x1
     2f4:	str	x0, [sp, #40]
     2f8:	ldr	x0, [sp, #16]
     2fc:	ldr	x0, [x0]
     300:	ldr	x1, [sp, #40]
     304:	cmp	x1, x0
     308:	b.cc	2b8 <test_whitelist_membership+0x18>  // b.lo, b.ul, b.last
     30c:	mov	w0, #0x0                   	// #0
     310:	ldp	x29, x30, [sp], #48
     314:	ret

0000000000000318 <set_var>:
     318:	stp	x29, x30, [sp, #-48]!
     31c:	mov	x29, sp
     320:	str	x0, [sp, #40]
     324:	str	x1, [sp, #32]
     328:	str	x2, [sp, #24]
     32c:	ldr	x0, [sp, #24]
     330:	cmp	x0, #0x0
     334:	b.ne	34c <set_var+0x34>  // b.any
     338:	ldr	x1, [sp, #32]
     33c:	ldr	x0, [sp, #40]
     340:	bl	0 <grub_env_set>
     344:	mov	w0, #0x0                   	// #0
     348:	b	370 <set_var+0x58>
     34c:	ldr	x1, [sp, #24]
     350:	ldr	x0, [sp, #40]
     354:	bl	2a0 <test_whitelist_membership>
     358:	cmp	w0, #0x0
     35c:	b.eq	36c <set_var+0x54>  // b.none
     360:	ldr	x1, [sp, #32]
     364:	ldr	x0, [sp, #40]
     368:	bl	0 <grub_env_set>
     36c:	mov	w0, #0x0                   	// #0
     370:	ldp	x29, x30, [sp], #48
     374:	ret

0000000000000378 <grub_cmd_load_env>:
     378:	stp	x29, x30, [sp, #-96]!
     37c:	mov	x29, sp
     380:	str	x0, [sp, #40]
     384:	str	w1, [sp, #36]
     388:	str	x2, [sp, #24]
     38c:	ldr	x0, [sp, #40]
     390:	ldr	x0, [x0, #8]
     394:	str	x0, [sp, #88]
     398:	ldrsw	x0, [sp, #36]
     39c:	str	x0, [sp, #56]
     3a0:	ldr	x0, [sp, #24]
     3a4:	str	x0, [sp, #64]
     3a8:	ldr	x0, [sp, #88]
     3ac:	ldr	w0, [x0]
     3b0:	cmp	w0, #0x0
     3b4:	b.eq	3c4 <grub_cmd_load_env+0x4c>  // b.none
     3b8:	ldr	x0, [sp, #88]
     3bc:	ldr	x2, [x0, #8]
     3c0:	b	3c8 <grub_cmd_load_env+0x50>
     3c4:	mov	x2, #0x0                   	// #0
     3c8:	ldr	x0, [sp, #88]
     3cc:	add	x0, x0, #0x10
     3d0:	ldr	w0, [x0]
     3d4:	cmp	w0, #0x0
     3d8:	b.eq	3e8 <grub_cmd_load_env+0x70>  // b.none
     3dc:	mov	w0, #0x39                  	// #57
     3e0:	movk	w0, #0x1, lsl #16
     3e4:	b	3ec <grub_cmd_load_env+0x74>
     3e8:	mov	w0, #0x39                  	// #57
     3ec:	mov	w1, w0
     3f0:	mov	x0, x2
     3f4:	bl	80 <open_envblk_file>
     3f8:	str	x0, [sp, #80]
     3fc:	ldr	x0, [sp, #80]
     400:	cmp	x0, #0x0
     404:	b.ne	41c <grub_cmd_load_env+0xa4>  // b.any
     408:	adrp	x0, 0 <grub_file_size>
     40c:	add	x0, x0, #0x0
     410:	ldr	x0, [x0]
     414:	ldr	w0, [x0]
     418:	b	48c <grub_cmd_load_env+0x114>
     41c:	ldr	x0, [sp, #80]
     420:	bl	1a8 <read_envblk_file>
     424:	str	x0, [sp, #72]
     428:	ldr	x0, [sp, #72]
     42c:	cmp	x0, #0x0
     430:	b.eq	470 <grub_cmd_load_env+0xf8>  // b.none
     434:	ldr	w0, [sp, #36]
     438:	cmp	w0, #0x0
     43c:	b.le	448 <grub_cmd_load_env+0xd0>
     440:	add	x0, sp, #0x38
     444:	b	44c <grub_cmd_load_env+0xd4>
     448:	mov	x0, #0x0                   	// #0
     44c:	adrp	x1, 0 <grub_file_size>
     450:	add	x1, x1, #0x0
     454:	ldr	x2, [x1]
     458:	mov	x1, x0
     45c:	ldr	x0, [sp, #72]
     460:	bl	1654 <grub_envblk_iterate>
     464:	ldr	x0, [sp, #72]
     468:	bl	fc8 <grub_envblk_close>
     46c:	b	474 <grub_cmd_load_env+0xfc>
     470:	nop
     474:	ldr	x0, [sp, #80]
     478:	bl	0 <grub_file_close>
     47c:	adrp	x0, 0 <grub_file_size>
     480:	add	x0, x0, #0x0
     484:	ldr	x0, [x0]
     488:	ldr	w0, [x0]
     48c:	ldp	x29, x30, [sp], #96
     490:	ret
     494:	nop
	...

00000000000004a8 <print_var>:
     4a8:	stp	x29, x30, [sp, #-48]!
     4ac:	mov	x29, sp
     4b0:	str	x0, [sp, #40]
     4b4:	str	x1, [sp, #32]
     4b8:	str	x2, [sp, #24]
     4bc:	ldr	x2, [sp, #32]
     4c0:	ldr	x1, [sp, #40]
     4c4:	adrp	x0, 0 <grub_file_size>
     4c8:	add	x0, x0, #0x0
     4cc:	ldr	x0, [x0]
     4d0:	bl	0 <grub_printf>
     4d4:	mov	w0, #0x0                   	// #0
     4d8:	ldp	x29, x30, [sp], #48
     4dc:	ret
	...

00000000000004e8 <grub_cmd_list_env>:
     4e8:	stp	x29, x30, [sp, #-80]!
     4ec:	mov	x29, sp
     4f0:	str	x0, [sp, #40]
     4f4:	str	w1, [sp, #36]
     4f8:	str	x2, [sp, #24]
     4fc:	ldr	x0, [sp, #40]
     500:	ldr	x0, [x0, #8]
     504:	str	x0, [sp, #72]
     508:	ldr	x0, [sp, #72]
     50c:	ldr	w0, [x0]
     510:	cmp	w0, #0x0
     514:	b.eq	524 <grub_cmd_list_env+0x3c>  // b.none
     518:	ldr	x0, [sp, #72]
     51c:	ldr	x2, [x0, #8]
     520:	b	528 <grub_cmd_list_env+0x40>
     524:	mov	x2, #0x0                   	// #0
     528:	ldr	x0, [sp, #72]
     52c:	add	x0, x0, #0x10
     530:	ldr	w0, [x0]
     534:	cmp	w0, #0x0
     538:	b.eq	548 <grub_cmd_list_env+0x60>  // b.none
     53c:	mov	w0, #0x39                  	// #57
     540:	movk	w0, #0x1, lsl #16
     544:	b	54c <grub_cmd_list_env+0x64>
     548:	mov	w0, #0x39                  	// #57
     54c:	mov	w1, w0
     550:	mov	x0, x2
     554:	bl	80 <open_envblk_file>
     558:	str	x0, [sp, #64]
     55c:	ldr	x0, [sp, #64]
     560:	cmp	x0, #0x0
     564:	b.ne	57c <grub_cmd_list_env+0x94>  // b.any
     568:	adrp	x0, 0 <grub_file_size>
     56c:	add	x0, x0, #0x0
     570:	ldr	x0, [x0]
     574:	ldr	w0, [x0]
     578:	b	5d4 <grub_cmd_list_env+0xec>
     57c:	ldr	x0, [sp, #64]
     580:	bl	1a8 <read_envblk_file>
     584:	str	x0, [sp, #56]
     588:	ldr	x0, [sp, #56]
     58c:	cmp	x0, #0x0
     590:	b.eq	5b8 <grub_cmd_list_env+0xd0>  // b.none
     594:	adrp	x0, 0 <grub_file_size>
     598:	add	x0, x0, #0x0
     59c:	ldr	x2, [x0]
     5a0:	mov	x1, #0x0                   	// #0
     5a4:	ldr	x0, [sp, #56]
     5a8:	bl	1654 <grub_envblk_iterate>
     5ac:	ldr	x0, [sp, #56]
     5b0:	bl	fc8 <grub_envblk_close>
     5b4:	b	5bc <grub_cmd_list_env+0xd4>
     5b8:	nop
     5bc:	ldr	x0, [sp, #64]
     5c0:	bl	0 <grub_file_close>
     5c4:	adrp	x0, 0 <grub_file_size>
     5c8:	add	x0, x0, #0x0
     5cc:	ldr	x0, [x0]
     5d0:	ldr	w0, [x0]
     5d4:	ldp	x29, x30, [sp], #80
     5d8:	ret
     5dc:	nop
	...

00000000000005f0 <free_blocklists>:
     5f0:	stp	x29, x30, [sp, #-48]!
     5f4:	mov	x29, sp
     5f8:	str	x0, [sp, #24]
     5fc:	b	61c <free_blocklists+0x2c>
     600:	ldr	x0, [sp, #24]
     604:	ldr	x0, [x0, #16]
     608:	str	x0, [sp, #40]
     60c:	ldr	x0, [sp, #24]
     610:	bl	0 <grub_free>
     614:	ldr	x0, [sp, #40]
     618:	str	x0, [sp, #24]
     61c:	ldr	x0, [sp, #24]
     620:	cmp	x0, #0x0
     624:	b.ne	600 <free_blocklists+0x10>  // b.any
     628:	nop
     62c:	nop
     630:	ldp	x29, x30, [sp], #48
     634:	ret

0000000000000638 <check_blocklists>:
     638:	stp	x29, x30, [sp, #-160]!
     63c:	mov	x29, sp
     640:	str	x0, [sp, #40]
     644:	str	x1, [sp, #32]
     648:	str	x2, [sp, #24]
     64c:	str	xzr, [sp, #152]
     650:	ldr	x0, [sp, #32]
     654:	str	x0, [sp, #136]
     658:	b	738 <check_blocklists+0x100>
     65c:	ldr	x0, [sp, #136]
     660:	ldr	x0, [x0, #16]
     664:	str	x0, [sp, #128]
     668:	b	708 <check_blocklists+0xd0>
     66c:	ldr	x0, [sp, #136]
     670:	ldr	x0, [x0]
     674:	str	x0, [sp, #80]
     678:	ldr	x0, [sp, #136]
     67c:	ldr	w0, [x0, #12]
     680:	add	w0, w0, #0x1ff
     684:	lsr	w0, w0, #9
     688:	mov	w0, w0
     68c:	ldr	x1, [sp, #80]
     690:	add	x0, x1, x0
     694:	str	x0, [sp, #72]
     698:	ldr	x0, [sp, #128]
     69c:	ldr	x0, [x0]
     6a0:	str	x0, [sp, #64]
     6a4:	ldr	x0, [sp, #128]
     6a8:	ldr	w0, [x0, #12]
     6ac:	add	w0, w0, #0x1ff
     6b0:	lsr	w0, w0, #9
     6b4:	mov	w0, w0
     6b8:	ldr	x1, [sp, #64]
     6bc:	add	x0, x1, x0
     6c0:	str	x0, [sp, #56]
     6c4:	ldr	x1, [sp, #80]
     6c8:	ldr	x0, [sp, #56]
     6cc:	cmp	x1, x0
     6d0:	b.cs	6fc <check_blocklists+0xc4>  // b.hs, b.nlast
     6d4:	ldr	x1, [sp, #64]
     6d8:	ldr	x0, [sp, #72]
     6dc:	cmp	x1, x0
     6e0:	b.cs	6fc <check_blocklists+0xc4>  // b.hs, b.nlast
     6e4:	adrp	x0, 0 <grub_file_size>
     6e8:	add	x0, x0, #0x0
     6ec:	ldr	x1, [x0]
     6f0:	mov	w0, #0x9                   	// #9
     6f4:	bl	0 <grub_error>
     6f8:	b	8e8 <check_blocklists+0x2b0>
     6fc:	ldr	x0, [sp, #128]
     700:	ldr	x0, [x0, #16]
     704:	str	x0, [sp, #128]
     708:	ldr	x0, [sp, #128]
     70c:	cmp	x0, #0x0
     710:	b.ne	66c <check_blocklists+0x34>  // b.any
     714:	ldr	x0, [sp, #136]
     718:	ldr	w0, [x0, #12]
     71c:	mov	w0, w0
     720:	ldr	x1, [sp, #152]
     724:	add	x0, x1, x0
     728:	str	x0, [sp, #152]
     72c:	ldr	x0, [sp, #136]
     730:	ldr	x0, [x0, #16]
     734:	str	x0, [sp, #136]
     738:	ldr	x0, [sp, #136]
     73c:	cmp	x0, #0x0
     740:	b.ne	65c <check_blocklists+0x24>  // b.any
     744:	ldr	x0, [sp, #24]
     748:	bl	0 <grub_file_size>
     74c:	mov	x1, x0
     750:	ldr	x0, [sp, #152]
     754:	cmp	x0, x1
     758:	b.eq	774 <check_blocklists+0x13c>  // b.none
     75c:	adrp	x0, 0 <grub_file_size>
     760:	add	x0, x0, #0x0
     764:	ldr	x1, [x0]
     768:	mov	w0, #0x4                   	// #4
     76c:	bl	0 <grub_error>
     770:	b	8e8 <check_blocklists+0x2b0>
     774:	ldr	x0, [sp, #24]
     778:	ldr	x0, [x0, #8]
     77c:	ldr	x0, [x0]
     780:	str	x0, [sp, #104]
     784:	ldr	x0, [sp, #104]
     788:	ldr	x0, [x0, #40]
     78c:	bl	18 <grub_partition_get_start>
     790:	str	x0, [sp, #96]
     794:	ldr	x0, [sp, #40]
     798:	bl	68 <grub_envblk_buffer>
     79c:	str	x0, [sp, #88]
     7a0:	str	xzr, [sp, #120]
     7a4:	str	xzr, [sp, #112]
     7a8:	ldr	x0, [sp, #32]
     7ac:	str	x0, [sp, #136]
     7b0:	str	xzr, [sp, #144]
     7b4:	b	8d8 <check_blocklists+0x2a0>
     7b8:	ldr	x0, [sp, #136]
     7bc:	ldr	w0, [x0, #12]
     7c0:	mov	w0, w0
     7c4:	ldr	x1, [sp, #112]
     7c8:	cmp	x1, x0
     7cc:	b.cs	818 <check_blocklists+0x1e0>  // b.hs, b.nlast
     7d0:	ldr	x0, [sp, #120]
     7d4:	bl	0 <grub_free>
     7d8:	ldr	x0, [sp, #136]
     7dc:	ldr	w0, [x0, #12]
     7e0:	lsl	w0, w0, #1
     7e4:	mov	w0, w0
     7e8:	str	x0, [sp, #112]
     7ec:	ldr	x0, [sp, #112]
     7f0:	bl	0 <grub_malloc>
     7f4:	str	x0, [sp, #120]
     7f8:	ldr	x0, [sp, #120]
     7fc:	cmp	x0, #0x0
     800:	b.ne	818 <check_blocklists+0x1e0>  // b.any
     804:	adrp	x0, 0 <grub_file_size>
     808:	add	x0, x0, #0x0
     80c:	ldr	x0, [x0]
     810:	ldr	w0, [x0]
     814:	b	8e8 <check_blocklists+0x2b0>
     818:	ldr	x0, [sp, #136]
     81c:	ldr	x1, [x0]
     820:	ldr	x0, [sp, #96]
     824:	sub	x1, x1, x0
     828:	ldr	x0, [sp, #136]
     82c:	ldr	w0, [x0, #8]
     830:	mov	w2, w0
     834:	ldr	x0, [sp, #136]
     838:	ldr	w0, [x0, #12]
     83c:	mov	w0, w0
     840:	ldr	x4, [sp, #120]
     844:	mov	x3, x0
     848:	ldr	x0, [sp, #104]
     84c:	bl	0 <grub_disk_read>
     850:	cmp	w0, #0x0
     854:	b.eq	86c <check_blocklists+0x234>  // b.none
     858:	adrp	x0, 0 <grub_file_size>
     85c:	add	x0, x0, #0x0
     860:	ldr	x0, [x0]
     864:	ldr	w0, [x0]
     868:	b	8e8 <check_blocklists+0x2b0>
     86c:	ldr	x1, [sp, #88]
     870:	ldr	x0, [sp, #144]
     874:	add	x3, x1, x0
     878:	ldr	x0, [sp, #136]
     87c:	ldr	w0, [x0, #12]
     880:	mov	w0, w0
     884:	mov	x2, x0
     888:	ldr	x1, [sp, #120]
     88c:	mov	x0, x3
     890:	bl	0 <grub_memcmp>
     894:	cmp	w0, #0x0
     898:	b.eq	8b4 <check_blocklists+0x27c>  // b.none
     89c:	adrp	x0, 0 <grub_file_size>
     8a0:	add	x0, x0, #0x0
     8a4:	ldr	x1, [x0]
     8a8:	mov	w0, #0x6                   	// #6
     8ac:	bl	0 <grub_error>
     8b0:	b	8e8 <check_blocklists+0x2b0>
     8b4:	ldr	x0, [sp, #136]
     8b8:	ldr	w0, [x0, #12]
     8bc:	mov	w0, w0
     8c0:	ldr	x1, [sp, #144]
     8c4:	add	x0, x1, x0
     8c8:	str	x0, [sp, #144]
     8cc:	ldr	x0, [sp, #136]
     8d0:	ldr	x0, [x0, #16]
     8d4:	str	x0, [sp, #136]
     8d8:	ldr	x0, [sp, #136]
     8dc:	cmp	x0, #0x0
     8e0:	b.ne	7b8 <check_blocklists+0x180>  // b.any
     8e4:	mov	w0, #0x0                   	// #0
     8e8:	ldp	x29, x30, [sp], #160
     8ec:	ret
	...

0000000000000910 <write_blocklists>:
     910:	stp	x29, x30, [sp, #-96]!
     914:	mov	x29, sp
     918:	str	x0, [sp, #40]
     91c:	str	x1, [sp, #32]
     920:	str	x2, [sp, #24]
     924:	ldr	x0, [sp, #40]
     928:	bl	68 <grub_envblk_buffer>
     92c:	str	x0, [sp, #72]
     930:	ldr	x0, [sp, #24]
     934:	ldr	x0, [x0, #8]
     938:	ldr	x0, [x0]
     93c:	str	x0, [sp, #64]
     940:	ldr	x0, [sp, #64]
     944:	ldr	x0, [x0, #40]
     948:	bl	18 <grub_partition_get_start>
     94c:	str	x0, [sp, #56]
     950:	str	xzr, [sp, #80]
     954:	ldr	x0, [sp, #32]
     958:	str	x0, [sp, #88]
     95c:	b	9d8 <write_blocklists+0xc8>
     960:	ldr	x0, [sp, #88]
     964:	ldr	x1, [x0]
     968:	ldr	x0, [sp, #56]
     96c:	sub	x5, x1, x0
     970:	ldr	x0, [sp, #88]
     974:	ldr	w0, [x0, #8]
     978:	mov	w2, w0
     97c:	ldr	x0, [sp, #88]
     980:	ldr	w0, [x0, #12]
     984:	mov	w3, w0
     988:	ldr	x1, [sp, #72]
     98c:	ldr	x0, [sp, #80]
     990:	add	x0, x1, x0
     994:	mov	x4, x0
     998:	mov	x1, x5
     99c:	ldr	x0, [sp, #64]
     9a0:	bl	0 <grub_disk_write>
     9a4:	cmp	w0, #0x0
     9a8:	b.eq	9b4 <write_blocklists+0xa4>  // b.none
     9ac:	mov	w0, #0x0                   	// #0
     9b0:	b	9e8 <write_blocklists+0xd8>
     9b4:	ldr	x0, [sp, #88]
     9b8:	ldr	w0, [x0, #12]
     9bc:	mov	w0, w0
     9c0:	ldr	x1, [sp, #80]
     9c4:	add	x0, x1, x0
     9c8:	str	x0, [sp, #80]
     9cc:	ldr	x0, [sp, #88]
     9d0:	ldr	x0, [x0, #16]
     9d4:	str	x0, [sp, #88]
     9d8:	ldr	x0, [sp, #88]
     9dc:	cmp	x0, #0x0
     9e0:	b.ne	960 <write_blocklists+0x50>  // b.any
     9e4:	mov	w0, #0x1                   	// #1
     9e8:	ldp	x29, x30, [sp], #96
     9ec:	ret

00000000000009f0 <save_env_read_hook>:
     9f0:	stp	x29, x30, [sp, #-64]!
     9f4:	mov	x29, sp
     9f8:	str	x0, [sp, #40]
     9fc:	str	w1, [sp, #36]
     a00:	str	w2, [sp, #32]
     a04:	str	x3, [sp, #24]
     a08:	ldr	x0, [sp, #24]
     a0c:	str	x0, [sp, #56]
     a10:	mov	x0, #0x18                  	// #24
     a14:	bl	0 <grub_malloc>
     a18:	str	x0, [sp, #48]
     a1c:	ldr	x0, [sp, #48]
     a20:	cmp	x0, #0x0
     a24:	b.eq	aa0 <save_env_read_hook+0xb0>  // b.none
     a28:	ldr	x0, [sp, #48]
     a2c:	ldr	x1, [sp, #40]
     a30:	str	x1, [x0]
     a34:	ldr	x0, [sp, #48]
     a38:	ldr	w1, [sp, #36]
     a3c:	str	w1, [x0, #8]
     a40:	ldr	x0, [sp, #48]
     a44:	ldr	w1, [sp, #32]
     a48:	str	w1, [x0, #12]
     a4c:	ldr	x0, [sp, #48]
     a50:	str	xzr, [x0, #16]
     a54:	ldr	x0, [sp, #56]
     a58:	ldr	x0, [x0, #8]
     a5c:	cmp	x0, #0x0
     a60:	b.eq	a74 <save_env_read_hook+0x84>  // b.none
     a64:	ldr	x0, [sp, #56]
     a68:	ldr	x0, [x0, #8]
     a6c:	ldr	x1, [sp, #48]
     a70:	str	x1, [x0, #16]
     a74:	ldr	x0, [sp, #56]
     a78:	ldr	x1, [sp, #48]
     a7c:	str	x1, [x0, #8]
     a80:	ldr	x0, [sp, #56]
     a84:	ldr	x0, [x0]
     a88:	cmp	x0, #0x0
     a8c:	b.ne	aa4 <save_env_read_hook+0xb4>  // b.any
     a90:	ldr	x0, [sp, #56]
     a94:	ldr	x1, [sp, #48]
     a98:	str	x1, [x0]
     a9c:	b	aa4 <save_env_read_hook+0xb4>
     aa0:	nop
     aa4:	ldp	x29, x30, [sp], #64
     aa8:	ret

0000000000000aac <grub_cmd_save_env>:
     aac:	stp	x29, x30, [sp, #-96]!
     ab0:	mov	x29, sp
     ab4:	str	x0, [sp, #40]
     ab8:	str	w1, [sp, #36]
     abc:	str	x2, [sp, #24]
     ac0:	ldr	x0, [sp, #40]
     ac4:	ldr	x0, [x0, #8]
     ac8:	str	x0, [sp, #88]
     acc:	str	xzr, [sp, #48]
     ad0:	str	xzr, [sp, #56]
     ad4:	ldr	w0, [sp, #36]
     ad8:	cmp	w0, #0x0
     adc:	b.ne	af8 <grub_cmd_save_env+0x4c>  // b.any
     ae0:	adrp	x0, 0 <grub_file_size>
     ae4:	add	x0, x0, #0x0
     ae8:	ldr	x1, [x0]
     aec:	mov	w0, #0x12                  	// #18
     af0:	bl	0 <grub_error>
     af4:	b	cc0 <grub_cmd_save_env+0x214>
     af8:	ldr	x0, [sp, #88]
     afc:	ldr	w0, [x0]
     b00:	cmp	w0, #0x0
     b04:	b.eq	b14 <grub_cmd_save_env+0x68>  // b.none
     b08:	ldr	x0, [sp, #88]
     b0c:	ldr	x0, [x0, #8]
     b10:	b	b18 <grub_cmd_save_env+0x6c>
     b14:	mov	x0, #0x0                   	// #0
     b18:	mov	w1, #0x3a                  	// #58
     b1c:	movk	w1, #0x1, lsl #16
     b20:	bl	80 <open_envblk_file>
     b24:	str	x0, [sp, #80]
     b28:	ldr	x0, [sp, #80]
     b2c:	cmp	x0, #0x0
     b30:	b.ne	b48 <grub_cmd_save_env+0x9c>  // b.any
     b34:	adrp	x0, 0 <grub_file_size>
     b38:	add	x0, x0, #0x0
     b3c:	ldr	x0, [x0]
     b40:	ldr	w0, [x0]
     b44:	b	cc0 <grub_cmd_save_env+0x214>
     b48:	ldr	x0, [sp, #80]
     b4c:	ldr	x0, [x0, #8]
     b50:	ldr	x0, [x0]
     b54:	cmp	x0, #0x0
     b58:	b.ne	b7c <grub_cmd_save_env+0xd0>  // b.any
     b5c:	ldr	x0, [sp, #80]
     b60:	bl	0 <grub_file_close>
     b64:	adrp	x0, 0 <grub_file_size>
     b68:	add	x0, x0, #0x0
     b6c:	ldr	x1, [x0]
     b70:	mov	w0, #0xd                   	// #13
     b74:	bl	0 <grub_error>
     b78:	b	cc0 <grub_cmd_save_env+0x214>
     b7c:	ldr	x0, [sp, #80]
     b80:	adrp	x1, 0 <grub_file_size>
     b84:	add	x1, x1, #0x0
     b88:	ldr	x1, [x1]
     b8c:	str	x1, [x0, #88]
     b90:	ldr	x0, [sp, #80]
     b94:	add	x1, sp, #0x30
     b98:	str	x1, [x0, #96]
     b9c:	ldr	x0, [sp, #80]
     ba0:	bl	1a8 <read_envblk_file>
     ba4:	str	x0, [sp, #72]
     ba8:	ldr	x0, [sp, #80]
     bac:	str	xzr, [x0, #88]
     bb0:	ldr	x0, [sp, #72]
     bb4:	cmp	x0, #0x0
     bb8:	b.eq	c80 <grub_cmd_save_env+0x1d4>  // b.none
     bbc:	ldr	x0, [sp, #48]
     bc0:	ldr	x2, [sp, #80]
     bc4:	mov	x1, x0
     bc8:	ldr	x0, [sp, #72]
     bcc:	bl	638 <check_blocklists>
     bd0:	cmp	w0, #0x0
     bd4:	b.ne	c88 <grub_cmd_save_env+0x1dc>  // b.any
     bd8:	b	c5c <grub_cmd_save_env+0x1b0>
     bdc:	ldr	x0, [sp, #24]
     be0:	ldr	x0, [x0]
     be4:	bl	0 <grub_env_get>
     be8:	str	x0, [sp, #64]
     bec:	ldr	x0, [sp, #64]
     bf0:	cmp	x0, #0x0
     bf4:	b.eq	c30 <grub_cmd_save_env+0x184>  // b.none
     bf8:	ldr	x0, [sp, #24]
     bfc:	ldr	x0, [x0]
     c00:	ldr	x2, [sp, #64]
     c04:	mov	x1, x0
     c08:	ldr	x0, [sp, #72]
     c0c:	bl	10e4 <grub_envblk_set>
     c10:	cmp	w0, #0x0
     c14:	b.ne	c44 <grub_cmd_save_env+0x198>  // b.any
     c18:	adrp	x0, 0 <grub_file_size>
     c1c:	add	x0, x0, #0x0
     c20:	ldr	x1, [x0]
     c24:	mov	w0, #0x12                  	// #18
     c28:	bl	0 <grub_error>
     c2c:	b	c8c <grub_cmd_save_env+0x1e0>
     c30:	ldr	x0, [sp, #24]
     c34:	ldr	x0, [x0]
     c38:	mov	x1, x0
     c3c:	ldr	x0, [sp, #72]
     c40:	bl	14a8 <grub_envblk_delete>
     c44:	ldr	w0, [sp, #36]
     c48:	sub	w0, w0, #0x1
     c4c:	str	w0, [sp, #36]
     c50:	ldr	x0, [sp, #24]
     c54:	add	x0, x0, #0x8
     c58:	str	x0, [sp, #24]
     c5c:	ldr	w0, [sp, #36]
     c60:	cmp	w0, #0x0
     c64:	b.ne	bdc <grub_cmd_save_env+0x130>  // b.any
     c68:	ldr	x0, [sp, #48]
     c6c:	ldr	x2, [sp, #80]
     c70:	mov	x1, x0
     c74:	ldr	x0, [sp, #72]
     c78:	bl	910 <write_blocklists>
     c7c:	b	c8c <grub_cmd_save_env+0x1e0>
     c80:	nop
     c84:	b	c8c <grub_cmd_save_env+0x1e0>
     c88:	nop
     c8c:	ldr	x0, [sp, #72]
     c90:	cmp	x0, #0x0
     c94:	b.eq	ca0 <grub_cmd_save_env+0x1f4>  // b.none
     c98:	ldr	x0, [sp, #72]
     c9c:	bl	fc8 <grub_envblk_close>
     ca0:	ldr	x0, [sp, #48]
     ca4:	bl	5f0 <free_blocklists>
     ca8:	ldr	x0, [sp, #80]
     cac:	bl	0 <grub_file_close>
     cb0:	adrp	x0, 0 <grub_file_size>
     cb4:	add	x0, x0, #0x0
     cb8:	ldr	x0, [x0]
     cbc:	ldr	w0, [x0]
     cc0:	ldp	x29, x30, [sp], #96
     cc4:	ret
	...

0000000000000cf0 <grub_mod_init>:
     cf0:	stp	x29, x30, [sp, #-32]!
     cf4:	mov	x29, sp
     cf8:	str	x0, [sp, #24]
     cfc:	adrp	x0, 0 <grub_file_size>
     d00:	add	x0, x0, #0x0
     d04:	ldr	x5, [x0]
     d08:	adrp	x0, 0 <grub_file_size>
     d0c:	add	x0, x0, #0x0
     d10:	ldr	x4, [x0]
     d14:	adrp	x0, 0 <grub_file_size>
     d18:	add	x0, x0, #0x0
     d1c:	ldr	x3, [x0]
     d20:	mov	w2, #0x0                   	// #0
     d24:	adrp	x0, 0 <grub_file_size>
     d28:	add	x0, x0, #0x0
     d2c:	ldr	x1, [x0]
     d30:	adrp	x0, 0 <grub_file_size>
     d34:	add	x0, x0, #0x0
     d38:	ldr	x0, [x0]
     d3c:	bl	0 <grub_register_extcmd>
     d40:	mov	x1, x0
     d44:	adrp	x0, 0 <grub_file_size>
     d48:	add	x0, x0, #0x0
     d4c:	ldr	x0, [x0]
     d50:	str	x1, [x0]
     d54:	adrp	x0, 0 <grub_file_size>
     d58:	add	x0, x0, #0x0
     d5c:	ldr	x5, [x0]
     d60:	adrp	x0, 0 <grub_file_size>
     d64:	add	x0, x0, #0x0
     d68:	ldr	x4, [x0]
     d6c:	adrp	x0, 0 <grub_file_size>
     d70:	add	x0, x0, #0x0
     d74:	ldr	x3, [x0]
     d78:	mov	w2, #0x0                   	// #0
     d7c:	adrp	x0, 0 <grub_file_size>
     d80:	add	x0, x0, #0x0
     d84:	ldr	x1, [x0]
     d88:	adrp	x0, 0 <grub_file_size>
     d8c:	add	x0, x0, #0x0
     d90:	ldr	x0, [x0]
     d94:	bl	0 <grub_register_extcmd>
     d98:	mov	x1, x0
     d9c:	adrp	x0, 0 <grub_file_size>
     da0:	add	x0, x0, #0x0
     da4:	ldr	x0, [x0]
     da8:	str	x1, [x0]
     dac:	adrp	x0, 0 <grub_file_size>
     db0:	add	x0, x0, #0x0
     db4:	ldr	x5, [x0]
     db8:	adrp	x0, 0 <grub_file_size>
     dbc:	add	x0, x0, #0x0
     dc0:	ldr	x4, [x0]
     dc4:	adrp	x0, 0 <grub_file_size>
     dc8:	add	x0, x0, #0x0
     dcc:	ldr	x3, [x0]
     dd0:	mov	w2, #0x0                   	// #0
     dd4:	adrp	x0, 0 <grub_file_size>
     dd8:	add	x0, x0, #0x0
     ddc:	ldr	x1, [x0]
     de0:	adrp	x0, 0 <grub_file_size>
     de4:	add	x0, x0, #0x0
     de8:	ldr	x0, [x0]
     dec:	bl	0 <grub_register_extcmd>
     df0:	mov	x1, x0
     df4:	adrp	x0, 0 <grub_file_size>
     df8:	add	x0, x0, #0x0
     dfc:	ldr	x0, [x0]
     e00:	str	x1, [x0]
     e04:	nop
     e08:	ldp	x29, x30, [sp], #32
     e0c:	ret
	...

0000000000000e90 <grub_mod_fini>:
     e90:	stp	x29, x30, [sp, #-16]!
     e94:	mov	x29, sp
     e98:	adrp	x0, 0 <grub_file_size>
     e9c:	add	x0, x0, #0x0
     ea0:	ldr	x0, [x0]
     ea4:	ldr	x0, [x0]
     ea8:	bl	0 <grub_unregister_extcmd>
     eac:	adrp	x0, 0 <grub_file_size>
     eb0:	add	x0, x0, #0x0
     eb4:	ldr	x0, [x0]
     eb8:	ldr	x0, [x0]
     ebc:	bl	0 <grub_unregister_extcmd>
     ec0:	adrp	x0, 0 <grub_file_size>
     ec4:	add	x0, x0, #0x0
     ec8:	ldr	x0, [x0]
     ecc:	ldr	x0, [x0]
     ed0:	bl	0 <grub_unregister_extcmd>
     ed4:	nop
     ed8:	ldp	x29, x30, [sp], #16
     edc:	ret
	...

0000000000000ef8 <grub_memcpy>:
     ef8:	stp	x29, x30, [sp, #-48]!
     efc:	mov	x29, sp
     f00:	str	x0, [sp, #40]
     f04:	str	x1, [sp, #32]
     f08:	str	x2, [sp, #24]
     f0c:	ldr	x2, [sp, #24]
     f10:	ldr	x1, [sp, #32]
     f14:	ldr	x0, [sp, #40]
     f18:	bl	0 <grub_memmove>
     f1c:	ldp	x29, x30, [sp], #48
     f20:	ret

0000000000000f24 <grub_envblk_open>:
     f24:	stp	x29, x30, [sp, #-48]!
     f28:	mov	x29, sp
     f2c:	str	x0, [sp, #24]
     f30:	str	x1, [sp, #16]
     f34:	ldr	x0, [sp, #16]
     f38:	cmp	x0, #0x19
     f3c:	b.ls	f60 <grub_envblk_open+0x3c>  // b.plast
     f40:	mov	x2, #0x19                  	// #25
     f44:	adrp	x0, 0 <grub_file_size>
     f48:	add	x0, x0, #0x0
     f4c:	ldr	x1, [x0]
     f50:	ldr	x0, [sp, #24]
     f54:	bl	0 <grub_memcmp>
     f58:	cmp	w0, #0x0
     f5c:	b.eq	f7c <grub_envblk_open+0x58>  // b.none
     f60:	adrp	x0, 0 <grub_file_size>
     f64:	add	x0, x0, #0x0
     f68:	ldr	x1, [x0]
     f6c:	mov	w0, #0x4                   	// #4
     f70:	bl	0 <grub_error>
     f74:	mov	x0, #0x0                   	// #0
     f78:	b	fb0 <grub_envblk_open+0x8c>
     f7c:	mov	x0, #0x10                  	// #16
     f80:	bl	0 <grub_malloc>
     f84:	str	x0, [sp, #40]
     f88:	ldr	x0, [sp, #40]
     f8c:	cmp	x0, #0x0
     f90:	b.eq	fac <grub_envblk_open+0x88>  // b.none
     f94:	ldr	x0, [sp, #40]
     f98:	ldr	x1, [sp, #24]
     f9c:	str	x1, [x0]
     fa0:	ldr	x0, [sp, #40]
     fa4:	ldr	x1, [sp, #16]
     fa8:	str	x1, [x0, #8]
     fac:	ldr	x0, [sp, #40]
     fb0:	ldp	x29, x30, [sp], #48
     fb4:	ret
	...

0000000000000fc8 <grub_envblk_close>:
     fc8:	stp	x29, x30, [sp, #-32]!
     fcc:	mov	x29, sp
     fd0:	str	x0, [sp, #24]
     fd4:	ldr	x0, [sp, #24]
     fd8:	ldr	x0, [x0]
     fdc:	bl	0 <grub_free>
     fe0:	ldr	x0, [sp, #24]
     fe4:	bl	0 <grub_free>
     fe8:	nop
     fec:	ldp	x29, x30, [sp], #32
     ff0:	ret

0000000000000ff4 <escaped_value_len>:
     ff4:	sub	sp, sp, #0x20
     ff8:	str	x0, [sp, #8]
     ffc:	str	wzr, [sp, #28]
    1000:	ldr	x0, [sp, #8]
    1004:	str	x0, [sp, #16]
    1008:	b	1054 <escaped_value_len+0x60>
    100c:	ldr	x0, [sp, #16]
    1010:	ldrb	w0, [x0]
    1014:	cmp	w0, #0x5c
    1018:	b.eq	102c <escaped_value_len+0x38>  // b.none
    101c:	ldr	x0, [sp, #16]
    1020:	ldrb	w0, [x0]
    1024:	cmp	w0, #0xa
    1028:	b.ne	103c <escaped_value_len+0x48>  // b.any
    102c:	ldr	w0, [sp, #28]
    1030:	add	w0, w0, #0x2
    1034:	str	w0, [sp, #28]
    1038:	b	1048 <escaped_value_len+0x54>
    103c:	ldr	w0, [sp, #28]
    1040:	add	w0, w0, #0x1
    1044:	str	w0, [sp, #28]
    1048:	ldr	x0, [sp, #16]
    104c:	add	x0, x0, #0x1
    1050:	str	x0, [sp, #16]
    1054:	ldr	x0, [sp, #16]
    1058:	ldrb	w0, [x0]
    105c:	cmp	w0, #0x0
    1060:	b.ne	100c <escaped_value_len+0x18>  // b.any
    1064:	ldr	w0, [sp, #28]
    1068:	add	sp, sp, #0x20
    106c:	ret

0000000000001070 <find_next_line>:
    1070:	sub	sp, sp, #0x10
    1074:	str	x0, [sp, #8]
    1078:	str	x1, [sp]
    107c:	b	10bc <find_next_line+0x4c>
    1080:	ldr	x0, [sp, #8]
    1084:	ldrb	w0, [x0]
    1088:	cmp	w0, #0x5c
    108c:	b.ne	10a0 <find_next_line+0x30>  // b.any
    1090:	ldr	x0, [sp, #8]
    1094:	add	x0, x0, #0x2
    1098:	str	x0, [sp, #8]
    109c:	b	10bc <find_next_line+0x4c>
    10a0:	ldr	x0, [sp, #8]
    10a4:	ldrb	w0, [x0]
    10a8:	cmp	w0, #0xa
    10ac:	b.eq	10d0 <find_next_line+0x60>  // b.none
    10b0:	ldr	x0, [sp, #8]
    10b4:	add	x0, x0, #0x1
    10b8:	str	x0, [sp, #8]
    10bc:	ldr	x1, [sp, #8]
    10c0:	ldr	x0, [sp]
    10c4:	cmp	x1, x0
    10c8:	b.cc	1080 <find_next_line+0x10>  // b.lo, b.ul, b.last
    10cc:	b	10d4 <find_next_line+0x64>
    10d0:	nop
    10d4:	ldr	x0, [sp, #8]
    10d8:	add	x0, x0, #0x1
    10dc:	add	sp, sp, #0x10
    10e0:	ret

00000000000010e4 <grub_envblk_set>:
    10e4:	stp	x29, x30, [sp, #-96]!
    10e8:	mov	x29, sp
    10ec:	str	x0, [sp, #40]
    10f0:	str	x1, [sp, #32]
    10f4:	str	x2, [sp, #24]
    10f8:	str	wzr, [sp, #76]
    10fc:	ldr	x0, [sp, #32]
    1100:	bl	0 <grub_strlen>
    1104:	str	w0, [sp, #64]
    1108:	ldr	x0, [sp, #24]
    110c:	bl	ff4 <escaped_value_len>
    1110:	str	w0, [sp, #60]
    1114:	ldr	x0, [sp, #40]
    1118:	ldr	x0, [x0]
    111c:	add	x0, x0, #0x19
    1120:	str	x0, [sp, #88]
    1124:	ldr	x0, [sp, #40]
    1128:	ldr	x1, [x0]
    112c:	ldr	x0, [sp, #40]
    1130:	ldr	x0, [x0, #8]
    1134:	add	x0, x1, x0
    1138:	str	x0, [sp, #48]
    113c:	ldr	x0, [sp, #48]
    1140:	sub	x0, x0, #0x1
    1144:	str	x0, [sp, #80]
    1148:	b	1158 <grub_envblk_set+0x74>
    114c:	ldr	x0, [sp, #80]
    1150:	sub	x0, x0, #0x1
    1154:	str	x0, [sp, #80]
    1158:	ldr	x0, [sp, #80]
    115c:	ldrb	w0, [x0]
    1160:	cmp	w0, #0x23
    1164:	b.eq	114c <grub_envblk_set+0x68>  // b.none
    1168:	ldr	x0, [sp, #80]
    116c:	ldrb	w0, [x0]
    1170:	cmp	w0, #0xa
    1174:	b.eq	1180 <grub_envblk_set+0x9c>  // b.none
    1178:	mov	w0, #0x0                   	// #0
    117c:	b	14a0 <grub_envblk_set+0x3bc>
    1180:	ldr	x0, [sp, #80]
    1184:	add	x0, x0, #0x1
    1188:	str	x0, [sp, #80]
    118c:	b	136c <grub_envblk_set+0x288>
    1190:	ldrsw	x0, [sp, #64]
    1194:	mov	x2, x0
    1198:	ldr	x1, [sp, #32]
    119c:	ldr	x0, [sp, #88]
    11a0:	bl	0 <grub_memcmp>
    11a4:	cmp	w0, #0x0
    11a8:	b.ne	135c <grub_envblk_set+0x278>  // b.any
    11ac:	ldrsw	x0, [sp, #64]
    11b0:	ldr	x1, [sp, #88]
    11b4:	add	x0, x1, x0
    11b8:	ldrb	w0, [x0]
    11bc:	cmp	w0, #0x3d
    11c0:	b.ne	135c <grub_envblk_set+0x278>  // b.any
    11c4:	ldrsw	x0, [sp, #64]
    11c8:	add	x0, x0, #0x1
    11cc:	ldr	x1, [sp, #88]
    11d0:	add	x0, x1, x0
    11d4:	str	x0, [sp, #88]
    11d8:	str	wzr, [sp, #68]
    11dc:	b	1214 <grub_envblk_set+0x130>
    11e0:	ldrsw	x0, [sp, #68]
    11e4:	ldr	x1, [sp, #88]
    11e8:	add	x0, x1, x0
    11ec:	ldrb	w0, [x0]
    11f0:	cmp	w0, #0x5c
    11f4:	b.ne	1208 <grub_envblk_set+0x124>  // b.any
    11f8:	ldr	w0, [sp, #68]
    11fc:	add	w0, w0, #0x2
    1200:	str	w0, [sp, #68]
    1204:	b	1214 <grub_envblk_set+0x130>
    1208:	ldr	w0, [sp, #68]
    120c:	add	w0, w0, #0x1
    1210:	str	w0, [sp, #68]
    1214:	ldrsw	x0, [sp, #68]
    1218:	ldr	x1, [sp, #88]
    121c:	add	x0, x1, x0
    1220:	ldr	x1, [sp, #48]
    1224:	cmp	x1, x0
    1228:	b.ls	1244 <grub_envblk_set+0x160>  // b.plast
    122c:	ldrsw	x0, [sp, #68]
    1230:	ldr	x1, [sp, #88]
    1234:	add	x0, x1, x0
    1238:	ldrb	w0, [x0]
    123c:	cmp	w0, #0xa
    1240:	b.ne	11e0 <grub_envblk_set+0xfc>  // b.any
    1244:	ldrsw	x0, [sp, #68]
    1248:	ldr	x1, [sp, #88]
    124c:	add	x0, x1, x0
    1250:	ldr	x1, [sp, #48]
    1254:	cmp	x1, x0
    1258:	b.hi	1264 <grub_envblk_set+0x180>  // b.pmore
    125c:	mov	w0, #0x0                   	// #0
    1260:	b	14a0 <grub_envblk_set+0x3bc>
    1264:	ldr	x1, [sp, #48]
    1268:	ldr	x0, [sp, #80]
    126c:	sub	x1, x1, x0
    1270:	ldr	w2, [sp, #60]
    1274:	ldr	w0, [sp, #68]
    1278:	sub	w0, w2, w0
    127c:	sxtw	x0, w0
    1280:	cmp	x1, x0
    1284:	b.ge	1290 <grub_envblk_set+0x1ac>  // b.tcont
    1288:	mov	w0, #0x0                   	// #0
    128c:	b	14a0 <grub_envblk_set+0x3bc>
    1290:	ldr	w1, [sp, #60]
    1294:	ldr	w0, [sp, #68]
    1298:	cmp	w1, w0
    129c:	b.ge	1314 <grub_envblk_set+0x230>  // b.tcont
    12a0:	ldrsw	x0, [sp, #60]
    12a4:	ldr	x1, [sp, #88]
    12a8:	add	x3, x1, x0
    12ac:	ldrsw	x0, [sp, #68]
    12b0:	ldr	x1, [sp, #88]
    12b4:	add	x4, x1, x0
    12b8:	ldrsw	x0, [sp, #68]
    12bc:	ldr	x1, [sp, #88]
    12c0:	add	x0, x1, x0
    12c4:	ldr	x1, [sp, #48]
    12c8:	sub	x0, x1, x0
    12cc:	mov	x2, x0
    12d0:	mov	x1, x4
    12d4:	mov	x0, x3
    12d8:	bl	0 <grub_memmove>
    12dc:	ldrsw	x1, [sp, #68]
    12e0:	ldrsw	x0, [sp, #60]
    12e4:	sub	x0, x1, x0
    12e8:	ldr	x1, [sp, #80]
    12ec:	add	x3, x1, x0
    12f0:	ldr	w1, [sp, #68]
    12f4:	ldr	w0, [sp, #60]
    12f8:	sub	w0, w1, w0
    12fc:	sxtw	x0, w0
    1300:	mov	x2, x0
    1304:	mov	w1, #0x23                  	// #35
    1308:	mov	x0, x3
    130c:	bl	0 <grub_memset>
    1310:	b	1350 <grub_envblk_set+0x26c>
    1314:	ldrsw	x0, [sp, #60]
    1318:	ldr	x1, [sp, #88]
    131c:	add	x3, x1, x0
    1320:	ldrsw	x0, [sp, #68]
    1324:	ldr	x1, [sp, #88]
    1328:	add	x4, x1, x0
    132c:	ldrsw	x0, [sp, #60]
    1330:	ldr	x1, [sp, #88]
    1334:	add	x0, x1, x0
    1338:	ldr	x1, [sp, #48]
    133c:	sub	x0, x1, x0
    1340:	mov	x2, x0
    1344:	mov	x1, x4
    1348:	mov	x0, x3
    134c:	bl	0 <grub_memmove>
    1350:	mov	w0, #0x1                   	// #1
    1354:	str	w0, [sp, #76]
    1358:	b	1388 <grub_envblk_set+0x2a4>
    135c:	ldr	x1, [sp, #48]
    1360:	ldr	x0, [sp, #88]
    1364:	bl	1070 <find_next_line>
    1368:	str	x0, [sp, #88]
    136c:	ldrsw	x0, [sp, #64]
    1370:	add	x0, x0, #0x1
    1374:	ldr	x1, [sp, #88]
    1378:	add	x0, x1, x0
    137c:	ldr	x1, [sp, #80]
    1380:	cmp	x1, x0
    1384:	b.hi	1190 <grub_envblk_set+0xac>  // b.pmore
    1388:	ldr	w0, [sp, #76]
    138c:	cmp	w0, #0x0
    1390:	b.ne	1400 <grub_envblk_set+0x31c>  // b.any
    1394:	ldr	x1, [sp, #48]
    1398:	ldr	x0, [sp, #80]
    139c:	sub	x1, x1, x0
    13a0:	ldr	w0, [sp, #64]
    13a4:	add	w2, w0, #0x1
    13a8:	ldr	w0, [sp, #60]
    13ac:	add	w0, w2, w0
    13b0:	add	w0, w0, #0x1
    13b4:	sxtw	x0, w0
    13b8:	cmp	x1, x0
    13bc:	b.ge	13c8 <grub_envblk_set+0x2e4>  // b.tcont
    13c0:	mov	w0, #0x0                   	// #0
    13c4:	b	14a0 <grub_envblk_set+0x3bc>
    13c8:	ldrsw	x0, [sp, #64]
    13cc:	mov	x2, x0
    13d0:	ldr	x1, [sp, #32]
    13d4:	ldr	x0, [sp, #80]
    13d8:	bl	ef8 <grub_memcpy>
    13dc:	ldrsw	x0, [sp, #64]
    13e0:	ldr	x1, [sp, #80]
    13e4:	add	x0, x1, x0
    13e8:	str	x0, [sp, #88]
    13ec:	ldr	x0, [sp, #88]
    13f0:	add	x1, x0, #0x1
    13f4:	str	x1, [sp, #88]
    13f8:	mov	w1, #0x3d                  	// #61
    13fc:	strb	w1, [x0]
    1400:	str	wzr, [sp, #72]
    1404:	b	1478 <grub_envblk_set+0x394>
    1408:	ldrsw	x0, [sp, #72]
    140c:	ldr	x1, [sp, #24]
    1410:	add	x0, x1, x0
    1414:	ldrb	w0, [x0]
    1418:	cmp	w0, #0x5c
    141c:	b.eq	1438 <grub_envblk_set+0x354>  // b.none
    1420:	ldrsw	x0, [sp, #72]
    1424:	ldr	x1, [sp, #24]
    1428:	add	x0, x1, x0
    142c:	ldrb	w0, [x0]
    1430:	cmp	w0, #0xa
    1434:	b.ne	144c <grub_envblk_set+0x368>  // b.any
    1438:	ldr	x0, [sp, #88]
    143c:	add	x1, x0, #0x1
    1440:	str	x1, [sp, #88]
    1444:	mov	w1, #0x5c                  	// #92
    1448:	strb	w1, [x0]
    144c:	ldrsw	x0, [sp, #72]
    1450:	ldr	x1, [sp, #24]
    1454:	add	x1, x1, x0
    1458:	ldr	x0, [sp, #88]
    145c:	add	x2, x0, #0x1
    1460:	str	x2, [sp, #88]
    1464:	ldrb	w1, [x1]
    1468:	strb	w1, [x0]
    146c:	ldr	w0, [sp, #72]
    1470:	add	w0, w0, #0x1
    1474:	str	w0, [sp, #72]
    1478:	ldrsw	x0, [sp, #72]
    147c:	ldr	x1, [sp, #24]
    1480:	add	x0, x1, x0
    1484:	ldrb	w0, [x0]
    1488:	cmp	w0, #0x0
    148c:	b.ne	1408 <grub_envblk_set+0x324>  // b.any
    1490:	ldr	x0, [sp, #88]
    1494:	mov	w1, #0xa                   	// #10
    1498:	strb	w1, [x0]
    149c:	mov	w0, #0x1                   	// #1
    14a0:	ldp	x29, x30, [sp], #96
    14a4:	ret

00000000000014a8 <grub_envblk_delete>:
    14a8:	stp	x29, x30, [sp, #-64]!
    14ac:	mov	x29, sp
    14b0:	str	x0, [sp, #24]
    14b4:	str	x1, [sp, #16]
    14b8:	ldr	x0, [sp, #16]
    14bc:	bl	0 <grub_strlen>
    14c0:	str	w0, [sp, #48]
    14c4:	ldr	x0, [sp, #24]
    14c8:	ldr	x0, [x0]
    14cc:	add	x0, x0, #0x19
    14d0:	str	x0, [sp, #56]
    14d4:	ldr	x0, [sp, #24]
    14d8:	ldr	x1, [x0]
    14dc:	ldr	x0, [sp, #24]
    14e0:	ldr	x0, [x0, #8]
    14e4:	add	x0, x1, x0
    14e8:	str	x0, [sp, #40]
    14ec:	b	1628 <grub_envblk_delete+0x180>
    14f0:	ldrsw	x0, [sp, #48]
    14f4:	mov	x2, x0
    14f8:	ldr	x1, [sp, #16]
    14fc:	ldr	x0, [sp, #56]
    1500:	bl	0 <grub_memcmp>
    1504:	cmp	w0, #0x0
    1508:	b.ne	1618 <grub_envblk_delete+0x170>  // b.any
    150c:	ldrsw	x0, [sp, #48]
    1510:	ldr	x1, [sp, #56]
    1514:	add	x0, x1, x0
    1518:	ldrb	w0, [x0]
    151c:	cmp	w0, #0x3d
    1520:	b.ne	1618 <grub_envblk_delete+0x170>  // b.any
    1524:	ldr	w0, [sp, #48]
    1528:	add	w0, w0, #0x1
    152c:	str	w0, [sp, #52]
    1530:	b	1580 <grub_envblk_delete+0xd8>
    1534:	ldrsw	x0, [sp, #52]
    1538:	ldr	x1, [sp, #56]
    153c:	add	x0, x1, x0
    1540:	ldrb	w0, [x0]
    1544:	cmp	w0, #0xa
    1548:	b.eq	159c <grub_envblk_delete+0xf4>  // b.none
    154c:	ldrsw	x0, [sp, #52]
    1550:	ldr	x1, [sp, #56]
    1554:	add	x0, x1, x0
    1558:	ldrb	w0, [x0]
    155c:	cmp	w0, #0x5c
    1560:	b.ne	1574 <grub_envblk_delete+0xcc>  // b.any
    1564:	ldr	w0, [sp, #52]
    1568:	add	w0, w0, #0x2
    156c:	str	w0, [sp, #52]
    1570:	b	1580 <grub_envblk_delete+0xd8>
    1574:	ldr	w0, [sp, #52]
    1578:	add	w0, w0, #0x1
    157c:	str	w0, [sp, #52]
    1580:	ldrsw	x0, [sp, #52]
    1584:	ldr	x1, [sp, #56]
    1588:	add	x0, x1, x0
    158c:	ldr	x1, [sp, #40]
    1590:	cmp	x1, x0
    1594:	b.hi	1534 <grub_envblk_delete+0x8c>  // b.pmore
    1598:	b	15a0 <grub_envblk_delete+0xf8>
    159c:	nop
    15a0:	ldrsw	x0, [sp, #52]
    15a4:	ldr	x1, [sp, #56]
    15a8:	add	x0, x1, x0
    15ac:	ldr	x1, [sp, #40]
    15b0:	cmp	x1, x0
    15b4:	b.ls	1648 <grub_envblk_delete+0x1a0>  // b.plast
    15b8:	ldr	w0, [sp, #52]
    15bc:	add	w0, w0, #0x1
    15c0:	str	w0, [sp, #52]
    15c4:	ldrsw	x0, [sp, #52]
    15c8:	ldr	x1, [sp, #56]
    15cc:	add	x3, x1, x0
    15d0:	ldrsw	x0, [sp, #52]
    15d4:	ldr	x1, [sp, #56]
    15d8:	add	x0, x1, x0
    15dc:	ldr	x1, [sp, #40]
    15e0:	sub	x0, x1, x0
    15e4:	mov	x2, x0
    15e8:	mov	x1, x3
    15ec:	ldr	x0, [sp, #56]
    15f0:	bl	0 <grub_memmove>
    15f4:	ldrsw	x0, [sp, #52]
    15f8:	neg	x0, x0
    15fc:	ldr	x1, [sp, #40]
    1600:	add	x0, x1, x0
    1604:	ldrsw	x1, [sp, #52]
    1608:	mov	x2, x1
    160c:	mov	w1, #0x23                  	// #35
    1610:	bl	0 <grub_memset>
    1614:	b	164c <grub_envblk_delete+0x1a4>
    1618:	ldr	x1, [sp, #40]
    161c:	ldr	x0, [sp, #56]
    1620:	bl	1070 <find_next_line>
    1624:	str	x0, [sp, #56]
    1628:	ldrsw	x0, [sp, #48]
    162c:	add	x0, x0, #0x1
    1630:	ldr	x1, [sp, #56]
    1634:	add	x0, x1, x0
    1638:	ldr	x1, [sp, #40]
    163c:	cmp	x1, x0
    1640:	b.hi	14f0 <grub_envblk_delete+0x48>  // b.pmore
    1644:	b	164c <grub_envblk_delete+0x1a4>
    1648:	nop
    164c:	ldp	x29, x30, [sp], #64
    1650:	ret

0000000000001654 <grub_envblk_iterate>:
    1654:	stp	x29, x30, [sp, #-128]!
    1658:	mov	x29, sp
    165c:	str	x0, [sp, #40]
    1660:	str	x1, [sp, #32]
    1664:	str	x2, [sp, #24]
    1668:	ldr	x0, [sp, #40]
    166c:	ldr	x0, [x0]
    1670:	add	x0, x0, #0x19
    1674:	str	x0, [sp, #120]
    1678:	ldr	x0, [sp, #40]
    167c:	ldr	x1, [x0]
    1680:	ldr	x0, [sp, #40]
    1684:	ldr	x0, [x0, #8]
    1688:	add	x0, x1, x0
    168c:	str	x0, [sp, #104]
    1690:	b	18ac <grub_envblk_iterate+0x258>
    1694:	ldr	x0, [sp, #120]
    1698:	ldrb	w0, [x0]
    169c:	cmp	w0, #0x23
    16a0:	b.eq	189c <grub_envblk_iterate+0x248>  // b.none
    16a4:	ldr	x0, [sp, #120]
    16a8:	str	x0, [sp, #96]
    16ac:	b	16bc <grub_envblk_iterate+0x68>
    16b0:	ldr	x0, [sp, #120]
    16b4:	add	x0, x0, #0x1
    16b8:	str	x0, [sp, #120]
    16bc:	ldr	x1, [sp, #120]
    16c0:	ldr	x0, [sp, #104]
    16c4:	cmp	x1, x0
    16c8:	b.cs	16dc <grub_envblk_iterate+0x88>  // b.hs, b.nlast
    16cc:	ldr	x0, [sp, #120]
    16d0:	ldrb	w0, [x0]
    16d4:	cmp	w0, #0x3d
    16d8:	b.ne	16b0 <grub_envblk_iterate+0x5c>  // b.any
    16dc:	ldr	x1, [sp, #120]
    16e0:	ldr	x0, [sp, #104]
    16e4:	cmp	x1, x0
    16e8:	b.eq	18c0 <grub_envblk_iterate+0x26c>  // b.none
    16ec:	ldr	x0, [sp, #120]
    16f0:	str	x0, [sp, #88]
    16f4:	ldr	x0, [sp, #120]
    16f8:	add	x0, x0, #0x1
    16fc:	str	x0, [sp, #120]
    1700:	ldr	x0, [sp, #120]
    1704:	str	x0, [sp, #80]
    1708:	b	1748 <grub_envblk_iterate+0xf4>
    170c:	ldr	x0, [sp, #120]
    1710:	ldrb	w0, [x0]
    1714:	cmp	w0, #0xa
    1718:	b.eq	175c <grub_envblk_iterate+0x108>  // b.none
    171c:	ldr	x0, [sp, #120]
    1720:	ldrb	w0, [x0]
    1724:	cmp	w0, #0x5c
    1728:	b.ne	173c <grub_envblk_iterate+0xe8>  // b.any
    172c:	ldr	x0, [sp, #120]
    1730:	add	x0, x0, #0x2
    1734:	str	x0, [sp, #120]
    1738:	b	1748 <grub_envblk_iterate+0xf4>
    173c:	ldr	x0, [sp, #120]
    1740:	add	x0, x0, #0x1
    1744:	str	x0, [sp, #120]
    1748:	ldr	x1, [sp, #120]
    174c:	ldr	x0, [sp, #104]
    1750:	cmp	x1, x0
    1754:	b.cc	170c <grub_envblk_iterate+0xb8>  // b.lo, b.ul, b.last
    1758:	b	1760 <grub_envblk_iterate+0x10c>
    175c:	nop
    1760:	ldr	x1, [sp, #120]
    1764:	ldr	x0, [sp, #104]
    1768:	cmp	x1, x0
    176c:	b.cs	18c8 <grub_envblk_iterate+0x274>  // b.hs, b.nlast
    1770:	ldr	x1, [sp, #120]
    1774:	ldr	x0, [sp, #96]
    1778:	sub	x0, x1, x0
    177c:	add	x0, x0, #0x1
    1780:	bl	0 <grub_malloc>
    1784:	str	x0, [sp, #72]
    1788:	ldr	x0, [sp, #72]
    178c:	cmp	x0, #0x0
    1790:	b.eq	18d0 <grub_envblk_iterate+0x27c>  // b.none
    1794:	ldr	x1, [sp, #80]
    1798:	ldr	x0, [sp, #96]
    179c:	sub	x0, x1, x0
    17a0:	mov	x1, x0
    17a4:	ldr	x0, [sp, #72]
    17a8:	add	x0, x0, x1
    17ac:	str	x0, [sp, #64]
    17b0:	ldr	x1, [sp, #88]
    17b4:	ldr	x0, [sp, #96]
    17b8:	sub	x0, x1, x0
    17bc:	mov	x2, x0
    17c0:	ldr	x1, [sp, #96]
    17c4:	ldr	x0, [sp, #72]
    17c8:	bl	ef8 <grub_memcpy>
    17cc:	ldr	x1, [sp, #88]
    17d0:	ldr	x0, [sp, #96]
    17d4:	sub	x0, x1, x0
    17d8:	mov	x1, x0
    17dc:	ldr	x0, [sp, #72]
    17e0:	add	x0, x0, x1
    17e4:	strb	wzr, [x0]
    17e8:	ldr	x0, [sp, #80]
    17ec:	str	x0, [sp, #120]
    17f0:	ldr	x0, [sp, #64]
    17f4:	str	x0, [sp, #112]
    17f8:	b	1858 <grub_envblk_iterate+0x204>
    17fc:	ldr	x0, [sp, #120]
    1800:	ldrb	w0, [x0]
    1804:	cmp	w0, #0x5c
    1808:	b.ne	1834 <grub_envblk_iterate+0x1e0>  // b.any
    180c:	ldr	x0, [sp, #120]
    1810:	add	x0, x0, #0x1
    1814:	str	x0, [sp, #120]
    1818:	ldr	x0, [sp, #112]
    181c:	add	x1, x0, #0x1
    1820:	str	x1, [sp, #112]
    1824:	ldr	x1, [sp, #120]
    1828:	ldrb	w1, [x1]
    182c:	strb	w1, [x0]
    1830:	b	184c <grub_envblk_iterate+0x1f8>
    1834:	ldr	x0, [sp, #112]
    1838:	add	x1, x0, #0x1
    183c:	str	x1, [sp, #112]
    1840:	ldr	x1, [sp, #120]
    1844:	ldrb	w1, [x1]
    1848:	strb	w1, [x0]
    184c:	ldr	x0, [sp, #120]
    1850:	add	x0, x0, #0x1
    1854:	str	x0, [sp, #120]
    1858:	ldr	x0, [sp, #120]
    185c:	ldrb	w0, [x0]
    1860:	cmp	w0, #0xa
    1864:	b.ne	17fc <grub_envblk_iterate+0x1a8>  // b.any
    1868:	ldr	x0, [sp, #112]
    186c:	strb	wzr, [x0]
    1870:	ldr	x3, [sp, #24]
    1874:	ldr	x2, [sp, #32]
    1878:	ldr	x1, [sp, #64]
    187c:	ldr	x0, [sp, #72]
    1880:	blr	x3
    1884:	str	w0, [sp, #60]
    1888:	ldr	x0, [sp, #72]
    188c:	bl	0 <grub_free>
    1890:	ldr	w0, [sp, #60]
    1894:	cmp	w0, #0x0
    1898:	b.ne	18d8 <grub_envblk_iterate+0x284>  // b.any
    189c:	ldr	x1, [sp, #104]
    18a0:	ldr	x0, [sp, #120]
    18a4:	bl	1070 <find_next_line>
    18a8:	str	x0, [sp, #120]
    18ac:	ldr	x1, [sp, #120]
    18b0:	ldr	x0, [sp, #104]
    18b4:	cmp	x1, x0
    18b8:	b.cc	1694 <grub_envblk_iterate+0x40>  // b.lo, b.ul, b.last
    18bc:	b	18dc <grub_envblk_iterate+0x288>
    18c0:	nop
    18c4:	b	18dc <grub_envblk_iterate+0x288>
    18c8:	nop
    18cc:	b	18dc <grub_envblk_iterate+0x288>
    18d0:	nop
    18d4:	b	18dc <grub_envblk_iterate+0x288>
    18d8:	nop
    18dc:	ldp	x29, x30, [sp], #128
    18e0:	ret
