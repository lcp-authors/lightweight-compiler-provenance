
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Piece.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000f48 <.init>:
 f48:	stp	x29, x30, [sp, #-16]!
 f4c:	mov	x29, sp
 f50:	bl	1200 <Perl_newSVpvn@plt+0x10>
 f54:	ldp	x29, x30, [sp], #16
 f58:	ret

Disassembly of section .plt:

0000000000000f60 <Perl_sv_2iv_flags@plt-0x20>:
     f60:	stp	x16, x30, [sp, #-16]!
     f64:	adrp	x16, 13000 <boot_Time__Piece@@Base+0x11d2c>
     f68:	ldr	x17, [x16, #4088]
     f6c:	add	x16, x16, #0xff8
     f70:	br	x17
     f74:	nop
     f78:	nop
     f7c:	nop

0000000000000f80 <Perl_sv_2iv_flags@plt>:
     f80:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     f84:	ldr	x17, [x16]
     f88:	add	x16, x16, #0x0
     f8c:	br	x17

0000000000000f90 <strlen@plt>:
     f90:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     f94:	ldr	x17, [x16, #8]
     f98:	add	x16, x16, #0x8
     f9c:	br	x17

0000000000000fa0 <Perl_newRV_noinc@plt>:
     fa0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fa4:	ldr	x17, [x16, #16]
     fa8:	add	x16, x16, #0x10
     fac:	br	x17

0000000000000fb0 <Perl_stack_grow@plt>:
     fb0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fb4:	ldr	x17, [x16, #24]
     fb8:	add	x16, x16, #0x18
     fbc:	br	x17

0000000000000fc0 <__cxa_finalize@plt>:
     fc0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fc4:	ldr	x17, [x16, #32]
     fc8:	add	x16, x16, #0x20
     fcc:	br	x17

0000000000000fd0 <strftime@plt>:
     fd0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fd4:	ldr	x17, [x16, #40]
     fd8:	add	x16, x16, #0x28
     fdc:	br	x17

0000000000000fe0 <Perl_av_len@plt>:
     fe0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fe4:	ldr	x17, [x16, #48]
     fe8:	add	x16, x16, #0x30
     fec:	br	x17

0000000000000ff0 <Perl_warn_nocontext@plt>:
     ff0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     ff4:	ldr	x17, [x16, #56]
     ff8:	add	x16, x16, #0x38
     ffc:	br	x17

0000000000001000 <localtime@plt>:
    1000:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1004:	ldr	x17, [x16, #64]
    1008:	add	x16, x16, #0x40
    100c:	br	x17

0000000000001010 <malloc@plt>:
    1010:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1014:	ldr	x17, [x16, #72]
    1018:	add	x16, x16, #0x48
    101c:	br	x17

0000000000001020 <tzset@plt>:
    1020:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1024:	ldr	x17, [x16, #80]
    1028:	add	x16, x16, #0x50
    102c:	br	x17

0000000000001030 <Perl_sv_2pv_flags@plt>:
    1030:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1034:	ldr	x17, [x16, #88]
    1038:	add	x16, x16, #0x58
    103c:	br	x17

0000000000001040 <Perl_xs_boot_epilog@plt>:
    1040:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1044:	ldr	x17, [x16, #96]
    1048:	add	x16, x16, #0x60
    104c:	br	x17

0000000000001050 <Perl_safesysmalloc@plt>:
    1050:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1054:	ldr	x17, [x16, #104]
    1058:	add	x16, x16, #0x68
    105c:	br	x17

0000000000001060 <gmtime@plt>:
    1060:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1064:	ldr	x17, [x16, #112]
    1068:	add	x16, x16, #0x70
    106c:	br	x17

0000000000001070 <__stack_chk_fail@plt>:
    1070:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1074:	ldr	x17, [x16, #120]
    1078:	add	x16, x16, #0x78
    107c:	br	x17

0000000000001080 <__gmon_start__@plt>:
    1080:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1084:	ldr	x17, [x16, #128]
    1088:	add	x16, x16, #0x80
    108c:	br	x17

0000000000001090 <Perl_croak_xs_usage@plt>:
    1090:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1094:	ldr	x17, [x16, #136]
    1098:	add	x16, x16, #0x88
    109c:	br	x17

00000000000010a0 <Perl_sv_2nv_flags@plt>:
    10a0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10a4:	ldr	x17, [x16, #144]
    10a8:	add	x16, x16, #0x90
    10ac:	br	x17

00000000000010b0 <Perl_av_push@plt>:
    10b0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10b4:	ldr	x17, [x16, #152]
    10b8:	add	x16, x16, #0x98
    10bc:	br	x17

00000000000010c0 <Perl_newSVpv@plt>:
    10c0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10c4:	ldr	x17, [x16, #160]
    10c8:	add	x16, x16, #0xa0
    10cc:	br	x17

00000000000010d0 <strcmp@plt>:
    10d0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10d4:	ldr	x17, [x16, #168]
    10d8:	add	x16, x16, #0xa8
    10dc:	br	x17

00000000000010e0 <__ctype_b_loc@plt>:
    10e0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10e4:	ldr	x17, [x16, #176]
    10e8:	add	x16, x16, #0xb0
    10ec:	br	x17

00000000000010f0 <strtol@plt>:
    10f0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10f4:	ldr	x17, [x16, #184]
    10f8:	add	x16, x16, #0xb8
    10fc:	br	x17

0000000000001100 <Perl_croak_nocontext@plt>:
    1100:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1104:	ldr	x17, [x16, #192]
    1108:	add	x16, x16, #0xc0
    110c:	br	x17

0000000000001110 <free@plt>:
    1110:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1114:	ldr	x17, [x16, #200]
    1118:	add	x16, x16, #0xc8
    111c:	br	x17

0000000000001120 <strncasecmp@plt>:
    1120:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1124:	ldr	x17, [x16, #208]
    1128:	add	x16, x16, #0xd0
    112c:	br	x17

0000000000001130 <Perl_newXS_flags@plt>:
    1130:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1134:	ldr	x17, [x16, #216]
    1138:	add	x16, x16, #0xd8
    113c:	br	x17

0000000000001140 <Perl_sv_2mortal@plt>:
    1140:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1144:	ldr	x17, [x16, #224]
    1148:	add	x16, x16, #0xe0
    114c:	br	x17

0000000000001150 <Perl_safesysfree@plt>:
    1150:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1154:	ldr	x17, [x16, #232]
    1158:	add	x16, x16, #0xe8
    115c:	br	x17

0000000000001160 <Perl_safesysrealloc@plt>:
    1160:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1164:	ldr	x17, [x16, #240]
    1168:	add	x16, x16, #0xf0
    116c:	br	x17

0000000000001170 <Perl_xs_handshake@plt>:
    1170:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1174:	ldr	x17, [x16, #248]
    1178:	add	x16, x16, #0xf8
    117c:	br	x17

0000000000001180 <Perl_av_fetch@plt>:
    1180:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1184:	ldr	x17, [x16, #256]
    1188:	add	x16, x16, #0x100
    118c:	br	x17

0000000000001190 <Perl_hv_common_key_len@plt>:
    1190:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1194:	ldr	x17, [x16, #264]
    1198:	add	x16, x16, #0x108
    119c:	br	x17

00000000000011a0 <Perl_newRV@plt>:
    11a0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11a4:	ldr	x17, [x16, #272]
    11a8:	add	x16, x16, #0x110
    11ac:	br	x17

00000000000011b0 <Perl_newSV_type@plt>:
    11b0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11b4:	ldr	x17, [x16, #280]
    11b8:	add	x16, x16, #0x118
    11bc:	br	x17

00000000000011c0 <strncpy@plt>:
    11c0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11c4:	ldr	x17, [x16, #288]
    11c8:	add	x16, x16, #0x120
    11cc:	br	x17

00000000000011d0 <Perl_newSViv@plt>:
    11d0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11d4:	ldr	x17, [x16, #296]
    11d8:	add	x16, x16, #0x128
    11dc:	br	x17

00000000000011e0 <__errno_location@plt>:
    11e0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11e4:	ldr	x17, [x16, #304]
    11e8:	add	x16, x16, #0x130
    11ec:	br	x17

00000000000011f0 <Perl_newSVpvn@plt>:
    11f0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11f4:	ldr	x17, [x16, #312]
    11f8:	add	x16, x16, #0x138
    11fc:	br	x17

Disassembly of section .text:

0000000000001200 <boot_Time__Piece@@Base-0xd4>:
    1200:	adrp	x0, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1204:	ldr	x0, [x0, #4048]
    1208:	cbz	x0, 1210 <Perl_newSVpvn@plt+0x20>
    120c:	b	1080 <__gmon_start__@plt>
    1210:	ret
    1214:	nop
    1218:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    121c:	add	x0, x0, #0x148
    1220:	adrp	x1, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1224:	add	x1, x1, #0x148
    1228:	cmp	x1, x0
    122c:	b.eq	1244 <Perl_newSVpvn@plt+0x54>  // b.none
    1230:	adrp	x1, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1234:	ldr	x1, [x1, #4032]
    1238:	cbz	x1, 1244 <Perl_newSVpvn@plt+0x54>
    123c:	mov	x16, x1
    1240:	br	x16
    1244:	ret
    1248:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    124c:	add	x0, x0, #0x148
    1250:	adrp	x1, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1254:	add	x1, x1, #0x148
    1258:	sub	x1, x1, x0
    125c:	lsr	x2, x1, #63
    1260:	add	x1, x2, x1, asr #3
    1264:	cmp	xzr, x1, asr #1
    1268:	asr	x1, x1, #1
    126c:	b.eq	1284 <Perl_newSVpvn@plt+0x94>  // b.none
    1270:	adrp	x2, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1274:	ldr	x2, [x2, #4064]
    1278:	cbz	x2, 1284 <Perl_newSVpvn@plt+0x94>
    127c:	mov	x16, x2
    1280:	br	x16
    1284:	ret
    1288:	stp	x29, x30, [sp, #-32]!
    128c:	mov	x29, sp
    1290:	str	x19, [sp, #16]
    1294:	adrp	x19, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1298:	ldrb	w0, [x19, #328]
    129c:	cbnz	w0, 12c4 <Perl_newSVpvn@plt+0xd4>
    12a0:	adrp	x0, 13000 <boot_Time__Piece@@Base+0x11d2c>
    12a4:	ldr	x0, [x0, #4040]
    12a8:	cbz	x0, 12b8 <Perl_newSVpvn@plt+0xc8>
    12ac:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    12b0:	ldr	x0, [x0, #320]
    12b4:	bl	fc0 <__cxa_finalize@plt>
    12b8:	bl	1218 <Perl_newSVpvn@plt+0x28>
    12bc:	mov	w0, #0x1                   	// #1
    12c0:	strb	w0, [x19, #328]
    12c4:	ldr	x19, [sp, #16]
    12c8:	ldp	x29, x30, [sp], #32
    12cc:	ret
    12d0:	b	1248 <Perl_newSVpvn@plt+0x58>

00000000000012d4 <boot_Time__Piece@@Base>:
    12d4:	stp	x29, x30, [sp, #-64]!
    12d8:	stp	x20, x19, [sp, #48]
    12dc:	adrp	x20, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12e0:	mov	x19, x0
    12e4:	add	x20, x20, #0x69c
    12e8:	adrp	x3, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12ec:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12f0:	mov	w0, #0x4e7                 	// #1255
    12f4:	add	x3, x3, #0x6a4
    12f8:	add	x4, x4, #0x6ac
    12fc:	movk	w0, #0xd30, lsl #16
    1300:	mov	x1, x19
    1304:	mov	x2, x20
    1308:	stp	x24, x23, [sp, #16]
    130c:	stp	x22, x21, [sp, #32]
    1310:	mov	x29, sp
    1314:	bl	1170 <Perl_xs_handshake@plt>
    1318:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    131c:	adrp	x2, 1000 <localtime@plt>
    1320:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1324:	mov	w21, w0
    1328:	add	x1, x1, #0x6b1
    132c:	add	x2, x2, #0x464
    1330:	add	x4, x4, #0x6c8
    1334:	mov	x0, x19
    1338:	mov	x3, x20
    133c:	mov	w5, wzr
    1340:	bl	1130 <Perl_newXS_flags@plt>
    1344:	adrp	x22, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1348:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    134c:	adrp	x2, 1000 <localtime@plt>
    1350:	add	x22, x22, #0x718
    1354:	add	x1, x1, #0x6cd
    1358:	add	x2, x2, #0x720
    135c:	mov	x0, x19
    1360:	mov	x3, x20
    1364:	mov	x4, x22
    1368:	mov	w5, wzr
    136c:	bl	1130 <Perl_newXS_flags@plt>
    1370:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1374:	adrp	x2, 1000 <localtime@plt>
    1378:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    137c:	add	x1, x1, #0x6e1
    1380:	add	x2, x2, #0x76c
    1384:	add	x4, x4, #0x714
    1388:	mov	x0, x19
    138c:	mov	x3, x20
    1390:	mov	w5, wzr
    1394:	bl	1130 <Perl_newXS_flags@plt>
    1398:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    139c:	adrp	x2, 1000 <localtime@plt>
    13a0:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13a4:	add	x1, x1, #0x6f8
    13a8:	add	x2, x2, #0xea0
    13ac:	add	x4, x4, #0x712
    13b0:	mov	x0, x19
    13b4:	mov	x3, x20
    13b8:	mov	w5, wzr
    13bc:	bl	1130 <Perl_newXS_flags@plt>
    13c0:	adrp	x23, 2000 <boot_Time__Piece@@Base+0xd2c>
    13c4:	adrp	x24, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13c8:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13cc:	add	x23, x23, #0xe8
    13d0:	add	x24, x24, #0x717
    13d4:	add	x1, x1, #0x719
    13d8:	mov	x0, x19
    13dc:	mov	x2, x23
    13e0:	mov	x3, x20
    13e4:	mov	x4, x24
    13e8:	mov	w5, wzr
    13ec:	bl	1130 <Perl_newXS_flags@plt>
    13f0:	ldr	x8, [x0]
    13f4:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13f8:	mov	w9, #0x1                   	// #1
    13fc:	add	x1, x1, #0x732
    1400:	mov	x0, x19
    1404:	mov	x2, x23
    1408:	mov	x3, x20
    140c:	mov	x4, x24
    1410:	mov	w5, wzr
    1414:	str	w9, [x8, #40]
    1418:	bl	1130 <Perl_newXS_flags@plt>
    141c:	ldr	x8, [x0]
    1420:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1424:	adrp	x2, 2000 <boot_Time__Piece@@Base+0xd2c>
    1428:	add	x1, x1, #0x74e
    142c:	add	x2, x2, #0x260
    1430:	mov	x0, x19
    1434:	mov	x3, x20
    1438:	mov	x4, x22
    143c:	mov	w5, wzr
    1440:	str	wzr, [x8, #40]
    1444:	bl	1130 <Perl_newXS_flags@plt>
    1448:	mov	x0, x19
    144c:	mov	w1, w21
    1450:	ldp	x20, x19, [sp, #48]
    1454:	ldp	x22, x21, [sp, #32]
    1458:	ldp	x24, x23, [sp, #16]
    145c:	ldp	x29, x30, [sp], #64
    1460:	b	1040 <Perl_xs_boot_epilog@plt>
    1464:	sub	sp, sp, #0x150
    1468:	stp	x29, x30, [sp, #240]
    146c:	str	x28, [sp, #256]
    1470:	stp	x26, x25, [sp, #272]
    1474:	stp	x24, x23, [sp, #288]
    1478:	stp	x22, x21, [sp, #304]
    147c:	stp	x20, x19, [sp, #320]
    1480:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1484:	ldr	x8, [x8, #4056]
    1488:	add	x29, sp, #0xf0
    148c:	ldr	x8, [x8]
    1490:	stur	x8, [x29, #-8]
    1494:	ldr	x8, [x0, #120]
    1498:	sub	x9, x8, #0x4
    149c:	str	x9, [x0, #120]
    14a0:	ldr	w21, [x8]
    14a4:	ldr	x8, [x0, #24]
    14a8:	ldr	x9, [x0]
    14ac:	add	x10, x8, x21, lsl #3
    14b0:	sub	x9, x9, x10
    14b4:	lsr	x22, x9, #3
    14b8:	and	w9, w22, #0xfffffffe
    14bc:	cmp	w9, #0x2
    14c0:	b.ne	170c <boot_Time__Piece@@Base+0x438>  // b.any
    14c4:	add	w24, w21, #0x1
    14c8:	ldr	x1, [x8, w24, sxtw #3]
    14cc:	mov	w23, #0x100                 	// #256
    14d0:	movk	w23, #0x20, lsl #16
    14d4:	add	w10, w23, #0x300
    14d8:	ldr	w9, [x1, #12]
    14dc:	mov	x19, x0
    14e0:	and	w9, w9, w10
    14e4:	cmp	w9, #0x400
    14e8:	b.ne	14f4 <boot_Time__Piece@@Base+0x220>  // b.any
    14ec:	ldr	x20, [x1, #16]
    14f0:	b	150c <boot_Time__Piece@@Base+0x238>
    14f4:	mov	w3, #0x2                   	// #2
    14f8:	mov	x0, x19
    14fc:	mov	x2, xzr
    1500:	bl	1030 <Perl_sv_2pv_flags@plt>
    1504:	ldr	x8, [x19, #24]
    1508:	mov	x20, x0
    150c:	add	w9, w21, #0x2
    1510:	ldr	x1, [x8, w9, sxtw #3]
    1514:	add	w9, w23, #0x100
    1518:	ldr	w8, [x1, #12]
    151c:	and	w8, w8, w9
    1520:	cmp	w8, #0x200
    1524:	b.ne	1534 <boot_Time__Piece@@Base+0x260>  // b.any
    1528:	ldr	x8, [x1]
    152c:	ldr	d0, [x8, #40]
    1530:	b	1540 <boot_Time__Piece@@Base+0x26c>
    1534:	mov	w2, #0x2                   	// #2
    1538:	mov	x0, x19
    153c:	bl	10a0 <Perl_sv_2nv_flags@plt>
    1540:	sxtw	x26, w24
    1544:	fcvtzs	x8, d0
    1548:	cmp	w22, #0x2
    154c:	str	x8, [sp, #64]
    1550:	b.le	1590 <boot_Time__Piece@@Base+0x2bc>
    1554:	ldr	x8, [x19, #24]
    1558:	add	w9, w21, #0x3
    155c:	ldr	x1, [x8, w9, sxtw #3]
    1560:	ldr	w8, [x1, #12]
    1564:	and	w8, w8, w23
    1568:	cmp	w8, #0x100
    156c:	b.ne	157c <boot_Time__Piece@@Base+0x2a8>  // b.any
    1570:	ldr	x8, [x1]
    1574:	ldr	x0, [x8, #32]
    1578:	b	1588 <boot_Time__Piece@@Base+0x2b4>
    157c:	mov	w2, #0x2                   	// #2
    1580:	mov	x0, x19
    1584:	bl	f80 <Perl_sv_2iv_flags@plt>
    1588:	cmp	w0, #0x1
    158c:	b.ne	15a4 <boot_Time__Piece@@Base+0x2d0>  // b.any
    1590:	add	x0, sp, #0x40
    1594:	add	x21, sp, #0x48
    1598:	add	x22, sp, #0x8
    159c:	bl	1000 <localtime@plt>
    15a0:	b	15b4 <boot_Time__Piece@@Base+0x2e0>
    15a4:	add	x0, sp, #0x40
    15a8:	add	x22, sp, #0x8
    15ac:	add	x21, sp, #0x48
    15b0:	bl	1060 <gmtime@plt>
    15b4:	ldr	x8, [x0, #48]
    15b8:	ldp	q1, q0, [x0, #16]
    15bc:	ldr	q2, [x0]
    15c0:	add	x3, sp, #0x8
    15c4:	mov	w1, #0xa0                  	// #160
    15c8:	mov	x0, x21
    15cc:	mov	x2, x20
    15d0:	str	x8, [x22, #48]
    15d4:	stp	q1, q0, [x22, #16]
    15d8:	str	q2, [x22]
    15dc:	bl	fd0 <strftime@plt>
    15e0:	sub	x8, x0, #0x1
    15e4:	mov	x22, x0
    15e8:	cmp	x8, #0x9f
    15ec:	b.cc	16a0 <boot_Time__Piece@@Base+0x3cc>  // b.lo, b.ul, b.last
    15f0:	cbnz	x22, 15fc <boot_Time__Piece@@Base+0x328>
    15f4:	ldrb	w8, [x20]
    15f8:	cbz	w8, 16a0 <boot_Time__Piece@@Base+0x3cc>
    15fc:	mov	x0, x20
    1600:	bl	f90 <strlen@plt>
    1604:	add	x24, x0, #0xa0
    1608:	mov	x25, x0
    160c:	mov	x0, x24
    1610:	bl	1050 <Perl_safesysmalloc@plt>
    1614:	cbz	x0, 16a0 <boot_Time__Piece@@Base+0x3cc>
    1618:	mov	w8, #0x64                  	// #100
    161c:	mov	x23, x0
    1620:	mul	x25, x25, x8
    1624:	add	x3, sp, #0x8
    1628:	mov	x0, x23
    162c:	mov	x1, x24
    1630:	mov	x2, x20
    1634:	bl	fd0 <strftime@plt>
    1638:	cbz	x0, 1648 <boot_Time__Piece@@Base+0x374>
    163c:	mov	x2, x0
    1640:	cmp	x0, x24
    1644:	b.cc	166c <boot_Time__Piece@@Base+0x398>  // b.lo, b.ul, b.last
    1648:	cmp	x24, x25
    164c:	b.hi	1698 <boot_Time__Piece@@Base+0x3c4>  // b.pmore
    1650:	lsl	x24, x24, #1
    1654:	mov	x0, x23
    1658:	mov	x1, x24
    165c:	bl	1160 <Perl_safesysrealloc@plt>
    1660:	mov	x23, x0
    1664:	cbnz	x0, 1624 <boot_Time__Piece@@Base+0x350>
    1668:	b	16a0 <boot_Time__Piece@@Base+0x3cc>
    166c:	mov	x0, x19
    1670:	mov	x1, x23
    1674:	bl	10c0 <Perl_newSVpv@plt>
    1678:	mov	x1, x0
    167c:	mov	x0, x19
    1680:	bl	1140 <Perl_sv_2mortal@plt>
    1684:	ldr	x8, [x19, #24]
    1688:	str	x0, [x8, x26, lsl #3]
    168c:	mov	x0, x23
    1690:	bl	1150 <Perl_safesysfree@plt>
    1694:	b	16c4 <boot_Time__Piece@@Base+0x3f0>
    1698:	mov	x0, x23
    169c:	bl	1150 <Perl_safesysfree@plt>
    16a0:	mov	x0, x19
    16a4:	mov	x1, x21
    16a8:	mov	x2, x22
    16ac:	bl	10c0 <Perl_newSVpv@plt>
    16b0:	mov	x1, x0
    16b4:	mov	x0, x19
    16b8:	bl	1140 <Perl_sv_2mortal@plt>
    16bc:	ldr	x8, [x19, #24]
    16c0:	str	x0, [x8, x26, lsl #3]
    16c4:	ldr	x8, [x19, #24]
    16c8:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    16cc:	add	x8, x8, x26, lsl #3
    16d0:	str	x8, [x19]
    16d4:	ldur	x8, [x29, #-8]
    16d8:	ldr	x9, [x9, #4056]
    16dc:	ldr	x9, [x9]
    16e0:	cmp	x9, x8
    16e4:	b.ne	1708 <boot_Time__Piece@@Base+0x434>  // b.any
    16e8:	ldp	x20, x19, [sp, #320]
    16ec:	ldp	x22, x21, [sp, #304]
    16f0:	ldp	x24, x23, [sp, #288]
    16f4:	ldp	x26, x25, [sp, #272]
    16f8:	ldr	x28, [sp, #256]
    16fc:	ldp	x29, x30, [sp, #240]
    1700:	add	sp, sp, #0x150
    1704:	ret
    1708:	bl	1070 <__stack_chk_fail@plt>
    170c:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1710:	add	x8, x8, #0x76d
    1714:	mov	x0, x1
    1718:	mov	x1, x8
    171c:	bl	1090 <Perl_croak_xs_usage@plt>
    1720:	stp	x29, x30, [sp, #-16]!
    1724:	ldr	x8, [x0, #120]
    1728:	ldr	x10, [x0]
    172c:	mov	x29, sp
    1730:	sub	x9, x8, #0x4
    1734:	str	x9, [x0, #120]
    1738:	ldr	x9, [x0, #24]
    173c:	ldr	w8, [x8]
    1740:	add	x8, x9, x8, lsl #3
    1744:	sub	x8, x10, x8
    1748:	tst	x8, #0x7fffffff8
    174c:	b.ne	1758 <boot_Time__Piece@@Base+0x484>  // b.any
    1750:	ldp	x29, x30, [sp], #16
    1754:	b	1020 <tzset@plt>
    1758:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    175c:	add	x8, x8, #0x718
    1760:	mov	x0, x1
    1764:	mov	x1, x8
    1768:	bl	1090 <Perl_croak_xs_usage@plt>
    176c:	sub	sp, sp, #0xc0
    1770:	stp	x29, x30, [sp, #96]
    1774:	stp	x28, x27, [sp, #112]
    1778:	stp	x26, x25, [sp, #128]
    177c:	stp	x24, x23, [sp, #144]
    1780:	stp	x22, x21, [sp, #160]
    1784:	stp	x20, x19, [sp, #176]
    1788:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    178c:	ldr	x8, [x8, #4056]
    1790:	add	x29, sp, #0x60
    1794:	ldr	x8, [x8]
    1798:	stur	x8, [x29, #-8]
    179c:	ldr	x8, [x0, #120]
    17a0:	ldr	x27, [x0]
    17a4:	sub	x9, x8, #0x4
    17a8:	str	x9, [x0, #120]
    17ac:	ldr	w20, [x8]
    17b0:	ldr	x8, [x0, #24]
    17b4:	add	x9, x8, x20, lsl #3
    17b8:	sub	x9, x27, x9
    17bc:	and	x9, x9, #0x7fffffff8
    17c0:	cmp	x9, #0x20
    17c4:	b.ne	1e74 <boot_Time__Piece@@Base+0xba0>  // b.any
    17c8:	add	w9, w20, #0x1
    17cc:	ldr	x1, [x8, w9, sxtw #3]
    17d0:	mov	w28, #0x400                 	// #1024
    17d4:	movk	w28, #0x20, lsl #16
    17d8:	mov	x19, x0
    17dc:	ldr	w9, [x1, #12]
    17e0:	and	w9, w9, w28
    17e4:	cmp	w9, #0x400
    17e8:	b.ne	17f8 <boot_Time__Piece@@Base+0x524>  // b.any
    17ec:	ldr	x9, [x1, #16]
    17f0:	str	x9, [sp, #8]
    17f4:	b	1810 <boot_Time__Piece@@Base+0x53c>
    17f8:	mov	w3, #0x2                   	// #2
    17fc:	mov	x0, x19
    1800:	mov	x2, xzr
    1804:	bl	1030 <Perl_sv_2pv_flags@plt>
    1808:	ldr	x8, [x19, #24]
    180c:	str	x0, [sp, #8]
    1810:	add	w9, w20, #0x2
    1814:	ldr	x1, [x8, w9, sxtw #3]
    1818:	ldr	w9, [x1, #12]
    181c:	and	w9, w9, w28
    1820:	cmp	w9, #0x400
    1824:	b.ne	1834 <boot_Time__Piece@@Base+0x560>  // b.any
    1828:	ldr	x9, [x1, #16]
    182c:	str	x9, [sp]
    1830:	b	184c <boot_Time__Piece@@Base+0x578>
    1834:	mov	w3, #0x2                   	// #2
    1838:	mov	x0, x19
    183c:	mov	x2, xzr
    1840:	bl	1030 <Perl_sv_2pv_flags@plt>
    1844:	ldr	x8, [x19, #24]
    1848:	str	x0, [sp]
    184c:	add	w9, w20, #0x3
    1850:	ldr	x1, [x8, w9, sxtw #3]
    1854:	sub	w10, w28, #0x300
    1858:	ldr	w9, [x1, #12]
    185c:	and	w9, w9, w10
    1860:	cmp	w9, #0x100
    1864:	b.ne	1874 <boot_Time__Piece@@Base+0x5a0>  // b.any
    1868:	ldr	x9, [x1]
    186c:	ldr	x0, [x9, #32]
    1870:	b	1884 <boot_Time__Piece@@Base+0x5b0>
    1874:	mov	w2, #0x2                   	// #2
    1878:	mov	x0, x19
    187c:	bl	f80 <Perl_sv_2iv_flags@plt>
    1880:	ldr	x8, [x19, #24]
    1884:	stur	w0, [x29, #-12]
    1888:	add	w9, w20, #0x4
    188c:	movi	v0.2d, #0x0
    1890:	ldr	x8, [x8, w9, sxtw #3]
    1894:	adrp	x9, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1898:	stp	q0, q0, [sp, #16]
    189c:	str	q0, [sp, #48]
    18a0:	ldr	d0, [x9, #1512]
    18a4:	mov	w10, #0x1                   	// #1
    18a8:	mov	w9, #0xffffffff            	// #-1
    18ac:	str	xzr, [sp, #64]
    18b0:	str	w10, [sp, #28]
    18b4:	stur	d0, [sp, #36]
    18b8:	str	w9, [sp, #48]
    18bc:	ldr	x22, [x8, #16]
    18c0:	ldrb	w8, [x22, #12]
    18c4:	cmp	w8, #0xc
    18c8:	b.ne	1e88 <boot_Time__Piece@@Base+0xbb4>  // b.any
    18cc:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    18d0:	add	x2, x2, #0x84c
    18d4:	mov	w3, #0x9                   	// #9
    18d8:	mov	w4, #0x20                  	// #32
    18dc:	mov	x0, x19
    18e0:	mov	x1, x22
    18e4:	mov	x5, xzr
    18e8:	mov	w6, wzr
    18ec:	bl	1190 <Perl_hv_common_key_len@plt>
    18f0:	ldr	x8, [x0]
    18f4:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    18f8:	add	x2, x2, #0x850
    18fc:	mov	w3, #0x5                   	// #5
    1900:	ldr	x23, [x8, #16]
    1904:	mov	w4, #0x20                  	// #32
    1908:	mov	x0, x19
    190c:	mov	x1, x22
    1910:	mov	x5, xzr
    1914:	mov	w6, wzr
    1918:	bl	1190 <Perl_hv_common_key_len@plt>
    191c:	ldr	x8, [x0]
    1920:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1924:	add	x2, x2, #0x856
    1928:	mov	w3, #0x3                   	// #3
    192c:	ldr	x24, [x8, #16]
    1930:	mov	w4, #0x20                  	// #32
    1934:	mov	x0, x19
    1938:	mov	x1, x22
    193c:	mov	x5, xzr
    1940:	mov	w6, wzr
    1944:	bl	1190 <Perl_hv_common_key_len@plt>
    1948:	ldr	x8, [x0]
    194c:	mov	x0, x19
    1950:	mov	x1, x24
    1954:	ldr	x25, [x8, #16]
    1958:	bl	fe0 <Perl_av_len@plt>
    195c:	adrp	x20, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1960:	add	x20, x20, #0x150
    1964:	tbnz	w0, #31, 1aa4 <boot_Time__Piece@@Base+0x7d0>
    1968:	mov	x26, xzr
    196c:	mov	x0, x19
    1970:	mov	x1, x23
    1974:	mov	x2, x26
    1978:	mov	w3, wzr
    197c:	bl	1180 <Perl_av_fetch@plt>
    1980:	ldr	x8, [x0]
    1984:	mov	x0, x19
    1988:	mov	x1, x23
    198c:	mov	x2, x26
    1990:	ldr	w8, [x8, #12]
    1994:	mov	w3, wzr
    1998:	and	w21, w8, w28
    199c:	bl	1180 <Perl_av_fetch@plt>
    19a0:	ldr	x1, [x0]
    19a4:	cmp	w21, #0x400
    19a8:	b.ne	19b4 <boot_Time__Piece@@Base+0x6e0>  // b.any
    19ac:	ldr	x0, [x1, #16]
    19b0:	b	19c4 <boot_Time__Piece@@Base+0x6f0>
    19b4:	mov	w3, #0x2                   	// #2
    19b8:	mov	x0, x19
    19bc:	mov	x2, xzr
    19c0:	bl	1030 <Perl_sv_2pv_flags@plt>
    19c4:	add	x8, x20, x26, lsl #3
    19c8:	str	x0, [x8, #336]
    19cc:	mov	x0, x19
    19d0:	mov	x1, x24
    19d4:	mov	x2, x26
    19d8:	mov	w3, wzr
    19dc:	bl	1180 <Perl_av_fetch@plt>
    19e0:	ldr	x8, [x0]
    19e4:	mov	x0, x19
    19e8:	mov	x1, x24
    19ec:	mov	x2, x26
    19f0:	ldr	w8, [x8, #12]
    19f4:	mov	w3, wzr
    19f8:	and	w21, w8, w28
    19fc:	bl	1180 <Perl_av_fetch@plt>
    1a00:	ldr	x1, [x0]
    1a04:	cmp	w21, #0x400
    1a08:	b.ne	1a14 <boot_Time__Piece@@Base+0x740>  // b.any
    1a0c:	ldr	x0, [x1, #16]
    1a10:	b	1a24 <boot_Time__Piece@@Base+0x750>
    1a14:	mov	w3, #0x2                   	// #2
    1a18:	mov	x0, x19
    1a1c:	mov	x2, xzr
    1a20:	bl	1030 <Perl_sv_2pv_flags@plt>
    1a24:	add	x8, x20, x26, lsl #3
    1a28:	str	x0, [x8, #96]
    1a2c:	mov	x0, x19
    1a30:	mov	x1, x25
    1a34:	mov	x2, x26
    1a38:	mov	w3, wzr
    1a3c:	bl	1180 <Perl_av_fetch@plt>
    1a40:	ldr	x8, [x0]
    1a44:	mov	x0, x19
    1a48:	mov	x1, x25
    1a4c:	mov	x2, x26
    1a50:	ldr	w8, [x8, #12]
    1a54:	mov	w3, wzr
    1a58:	and	w21, w8, w28
    1a5c:	bl	1180 <Perl_av_fetch@plt>
    1a60:	ldr	x1, [x0]
    1a64:	cmp	w21, #0x400
    1a68:	b.ne	1a74 <boot_Time__Piece@@Base+0x7a0>  // b.any
    1a6c:	ldr	x0, [x1, #16]
    1a70:	b	1a84 <boot_Time__Piece@@Base+0x7b0>
    1a74:	mov	w3, #0x2                   	// #2
    1a78:	mov	x0, x19
    1a7c:	mov	x2, xzr
    1a80:	bl	1030 <Perl_sv_2pv_flags@plt>
    1a84:	str	x0, [x20, x26, lsl #3]
    1a88:	mov	x0, x19
    1a8c:	mov	x1, x24
    1a90:	add	x21, x26, #0x1
    1a94:	bl	fe0 <Perl_av_len@plt>
    1a98:	cmp	x26, w0, sxtw
    1a9c:	mov	x26, x21
    1aa0:	b.lt	196c <boot_Time__Piece@@Base+0x698>  // b.tstop
    1aa4:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1aa8:	add	x2, x2, #0x85a
    1aac:	mov	w3, #0x7                   	// #7
    1ab0:	mov	w4, #0x20                  	// #32
    1ab4:	mov	x0, x19
    1ab8:	mov	x1, x22
    1abc:	mov	x5, xzr
    1ac0:	mov	w6, wzr
    1ac4:	bl	1190 <Perl_hv_common_key_len@plt>
    1ac8:	ldr	x8, [x0]
    1acc:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1ad0:	add	x2, x2, #0x862
    1ad4:	mov	w3, #0x4                   	// #4
    1ad8:	ldr	x23, [x8, #16]
    1adc:	mov	w4, #0x20                  	// #32
    1ae0:	mov	x0, x19
    1ae4:	mov	x1, x22
    1ae8:	mov	x5, xzr
    1aec:	mov	w6, wzr
    1af0:	bl	1190 <Perl_hv_common_key_len@plt>
    1af4:	ldr	x8, [x0]
    1af8:	mov	x0, x19
    1afc:	mov	x1, x23
    1b00:	ldr	x24, [x8, #16]
    1b04:	bl	fe0 <Perl_av_len@plt>
    1b08:	tbnz	w0, #31, 1bec <boot_Time__Piece@@Base+0x918>
    1b0c:	mov	x25, xzr
    1b10:	mov	x0, x19
    1b14:	mov	x1, x24
    1b18:	mov	x2, x25
    1b1c:	mov	w3, wzr
    1b20:	bl	1180 <Perl_av_fetch@plt>
    1b24:	ldr	x8, [x0]
    1b28:	mov	x0, x19
    1b2c:	mov	x1, x24
    1b30:	mov	x2, x25
    1b34:	ldr	w8, [x8, #12]
    1b38:	mov	w3, wzr
    1b3c:	and	w21, w8, w28
    1b40:	bl	1180 <Perl_av_fetch@plt>
    1b44:	ldr	x1, [x0]
    1b48:	cmp	w21, #0x400
    1b4c:	b.ne	1b58 <boot_Time__Piece@@Base+0x884>  // b.any
    1b50:	ldr	x0, [x1, #16]
    1b54:	b	1b68 <boot_Time__Piece@@Base+0x894>
    1b58:	mov	w3, #0x2                   	// #2
    1b5c:	mov	x0, x19
    1b60:	mov	x2, xzr
    1b64:	bl	1030 <Perl_sv_2pv_flags@plt>
    1b68:	add	x8, x20, x25, lsl #3
    1b6c:	str	x0, [x8, #192]
    1b70:	mov	x0, x19
    1b74:	mov	x1, x23
    1b78:	mov	x2, x25
    1b7c:	mov	w3, wzr
    1b80:	bl	1180 <Perl_av_fetch@plt>
    1b84:	ldr	x8, [x0]
    1b88:	mov	x0, x19
    1b8c:	mov	x1, x23
    1b90:	mov	x2, x25
    1b94:	ldr	w8, [x8, #12]
    1b98:	mov	w3, wzr
    1b9c:	and	w21, w8, w28
    1ba0:	bl	1180 <Perl_av_fetch@plt>
    1ba4:	ldr	x1, [x0]
    1ba8:	cmp	w21, #0x400
    1bac:	b.ne	1bb8 <boot_Time__Piece@@Base+0x8e4>  // b.any
    1bb0:	ldr	x0, [x1, #16]
    1bb4:	b	1bc8 <boot_Time__Piece@@Base+0x8f4>
    1bb8:	mov	w3, #0x2                   	// #2
    1bbc:	mov	x0, x19
    1bc0:	mov	x2, xzr
    1bc4:	bl	1030 <Perl_sv_2pv_flags@plt>
    1bc8:	add	x8, x20, x25, lsl #3
    1bcc:	str	x0, [x8, #248]
    1bd0:	mov	x0, x19
    1bd4:	mov	x1, x23
    1bd8:	add	x21, x25, #0x1
    1bdc:	bl	fe0 <Perl_av_len@plt>
    1be0:	cmp	x25, w0, sxtw
    1be4:	mov	x25, x21
    1be8:	b.lt	1b10 <boot_Time__Piece@@Base+0x83c>  // b.tstop
    1bec:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1bf0:	add	x23, x23, #0x867
    1bf4:	mov	w3, #0x2                   	// #2
    1bf8:	mov	w4, #0x20                  	// #32
    1bfc:	mov	x0, x19
    1c00:	mov	x1, x22
    1c04:	mov	x2, x23
    1c08:	mov	x5, xzr
    1c0c:	mov	w6, wzr
    1c10:	bl	1190 <Perl_hv_common_key_len@plt>
    1c14:	ldr	x8, [x0]
    1c18:	mov	w3, #0x2                   	// #2
    1c1c:	mov	w4, #0x20                  	// #32
    1c20:	mov	x0, x19
    1c24:	ldr	w8, [x8, #12]
    1c28:	mov	x1, x22
    1c2c:	mov	x2, x23
    1c30:	mov	x5, xzr
    1c34:	mov	w6, wzr
    1c38:	and	w20, w8, w28
    1c3c:	bl	1190 <Perl_hv_common_key_len@plt>
    1c40:	ldr	x1, [x0]
    1c44:	cmp	w20, #0x400
    1c48:	b.ne	1c54 <boot_Time__Piece@@Base+0x980>  // b.any
    1c4c:	ldr	x0, [x1, #16]
    1c50:	b	1c64 <boot_Time__Piece@@Base+0x990>
    1c54:	mov	w3, #0x2                   	// #2
    1c58:	mov	x0, x19
    1c5c:	mov	x2, xzr
    1c60:	bl	1030 <Perl_sv_2pv_flags@plt>
    1c64:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1c68:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1c6c:	add	x23, x23, #0x86a
    1c70:	str	x0, [x8, #640]
    1c74:	mov	w3, #0x2                   	// #2
    1c78:	mov	w4, #0x20                  	// #32
    1c7c:	mov	x0, x19
    1c80:	mov	x1, x22
    1c84:	mov	x2, x23
    1c88:	mov	x5, xzr
    1c8c:	mov	w6, wzr
    1c90:	bl	1190 <Perl_hv_common_key_len@plt>
    1c94:	ldr	x8, [x0]
    1c98:	mov	w3, #0x2                   	// #2
    1c9c:	mov	w4, #0x20                  	// #32
    1ca0:	mov	x0, x19
    1ca4:	ldr	w8, [x8, #12]
    1ca8:	mov	x1, x22
    1cac:	mov	x2, x23
    1cb0:	mov	x5, xzr
    1cb4:	mov	w6, wzr
    1cb8:	and	w20, w8, w28
    1cbc:	bl	1190 <Perl_hv_common_key_len@plt>
    1cc0:	ldr	x1, [x0]
    1cc4:	cmp	w20, #0x400
    1cc8:	b.ne	1cd4 <boot_Time__Piece@@Base+0xa00>  // b.any
    1ccc:	ldr	x0, [x1, #16]
    1cd0:	b	1ce4 <boot_Time__Piece@@Base+0xa10>
    1cd4:	mov	w3, #0x2                   	// #2
    1cd8:	mov	x0, x19
    1cdc:	mov	x2, xzr
    1ce0:	bl	1030 <Perl_sv_2pv_flags@plt>
    1ce4:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1ce8:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1cec:	add	x23, x23, #0x86d
    1cf0:	str	x0, [x8, #648]
    1cf4:	mov	w3, #0x2                   	// #2
    1cf8:	mov	w4, #0x20                  	// #32
    1cfc:	mov	x0, x19
    1d00:	mov	x1, x22
    1d04:	mov	x2, x23
    1d08:	mov	x5, xzr
    1d0c:	mov	w6, wzr
    1d10:	bl	1190 <Perl_hv_common_key_len@plt>
    1d14:	ldr	x8, [x0]
    1d18:	mov	w3, #0x2                   	// #2
    1d1c:	mov	w4, #0x20                  	// #32
    1d20:	mov	x0, x19
    1d24:	ldr	w8, [x8, #12]
    1d28:	mov	x1, x22
    1d2c:	mov	x2, x23
    1d30:	mov	x5, xzr
    1d34:	mov	w6, wzr
    1d38:	and	w20, w8, w28
    1d3c:	bl	1190 <Perl_hv_common_key_len@plt>
    1d40:	ldr	x1, [x0]
    1d44:	cmp	w20, #0x400
    1d48:	b.ne	1d54 <boot_Time__Piece@@Base+0xa80>  // b.any
    1d4c:	ldr	x0, [x1, #16]
    1d50:	b	1d64 <boot_Time__Piece@@Base+0xa90>
    1d54:	mov	w3, #0x2                   	// #2
    1d58:	mov	x0, x19
    1d5c:	mov	x2, xzr
    1d60:	bl	1030 <Perl_sv_2pv_flags@plt>
    1d64:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1d68:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1d6c:	add	x23, x23, #0x870
    1d70:	str	x0, [x8, #656]
    1d74:	mov	w3, #0x2                   	// #2
    1d78:	mov	w4, #0x20                  	// #32
    1d7c:	mov	x0, x19
    1d80:	mov	x1, x22
    1d84:	mov	x2, x23
    1d88:	mov	x5, xzr
    1d8c:	mov	w6, wzr
    1d90:	bl	1190 <Perl_hv_common_key_len@plt>
    1d94:	ldr	x8, [x0]
    1d98:	mov	w3, #0x2                   	// #2
    1d9c:	mov	w4, #0x20                  	// #32
    1da0:	mov	x0, x19
    1da4:	ldr	w8, [x8, #12]
    1da8:	mov	x1, x22
    1dac:	mov	x2, x23
    1db0:	mov	x5, xzr
    1db4:	mov	w6, wzr
    1db8:	and	w20, w8, w28
    1dbc:	bl	1190 <Perl_hv_common_key_len@plt>
    1dc0:	ldr	x1, [x0]
    1dc4:	cmp	w20, #0x400
    1dc8:	b.ne	1dd4 <boot_Time__Piece@@Base+0xb00>  // b.any
    1dcc:	ldr	x0, [x1, #16]
    1dd0:	b	1de4 <boot_Time__Piece@@Base+0xb10>
    1dd4:	mov	w3, #0x2                   	// #2
    1dd8:	mov	x0, x19
    1ddc:	mov	x2, xzr
    1de0:	bl	1030 <Perl_sv_2pv_flags@plt>
    1de4:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1de8:	str	x0, [x8, #664]
    1dec:	ldp	x1, x0, [sp]
    1df0:	add	x2, sp, #0x10
    1df4:	sub	x3, x29, #0xc
    1df8:	bl	2680 <boot_Time__Piece@@Base+0x13ac>
    1dfc:	cbz	x0, 1e94 <boot_Time__Piece@@Base+0xbc0>
    1e00:	ldrb	w8, [x0]
    1e04:	mov	x1, x0
    1e08:	sub	x20, x27, #0x20
    1e0c:	cbz	w8, 1e28 <boot_Time__Piece@@Base+0xb54>
    1e10:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e14:	add	x0, x0, #0x7ed
    1e18:	bl	ff0 <Perl_warn_nocontext@plt>
    1e1c:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e20:	add	x0, x0, #0x816
    1e24:	bl	ff0 <Perl_warn_nocontext@plt>
    1e28:	add	x2, sp, #0x10
    1e2c:	mov	x0, x19
    1e30:	mov	x1, x20
    1e34:	bl	30ec <boot_Time__Piece@@Base+0x1e18>
    1e38:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1e3c:	ldur	x8, [x29, #-8]
    1e40:	ldr	x9, [x9, #4056]
    1e44:	ldr	x9, [x9]
    1e48:	cmp	x9, x8
    1e4c:	b.ne	1e70 <boot_Time__Piece@@Base+0xb9c>  // b.any
    1e50:	ldp	x20, x19, [sp, #176]
    1e54:	ldp	x22, x21, [sp, #160]
    1e58:	ldp	x24, x23, [sp, #144]
    1e5c:	ldp	x26, x25, [sp, #128]
    1e60:	ldp	x28, x27, [sp, #112]
    1e64:	ldp	x29, x30, [sp, #96]
    1e68:	add	sp, sp, #0xc0
    1e6c:	ret
    1e70:	bl	1070 <__stack_chk_fail@plt>
    1e74:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e78:	add	x8, x8, #0x785
    1e7c:	mov	x0, x1
    1e80:	mov	x1, x8
    1e84:	bl	1090 <Perl_croak_xs_usage@plt>
    1e88:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e8c:	add	x0, x0, #0x7ab
    1e90:	bl	1100 <Perl_croak_nocontext@plt>
    1e94:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e98:	add	x0, x0, #0x7da
    1e9c:	bl	1100 <Perl_croak_nocontext@plt>
    1ea0:	sub	sp, sp, #0xb0
    1ea4:	stp	x29, x30, [sp, #80]
    1ea8:	str	x27, [sp, #96]
    1eac:	stp	x26, x25, [sp, #112]
    1eb0:	stp	x24, x23, [sp, #128]
    1eb4:	stp	x22, x21, [sp, #144]
    1eb8:	stp	x20, x19, [sp, #160]
    1ebc:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1ec0:	ldr	x8, [x8, #4056]
    1ec4:	add	x29, sp, #0x50
    1ec8:	ldr	x8, [x8]
    1ecc:	stur	x8, [x29, #-8]
    1ed0:	ldr	x8, [x0, #120]
    1ed4:	ldr	x24, [x0]
    1ed8:	sub	x9, x8, #0x4
    1edc:	str	x9, [x0, #120]
    1ee0:	ldr	w26, [x8]
    1ee4:	ldr	x8, [x0, #24]
    1ee8:	add	x9, x8, x26, lsl #3
    1eec:	sub	x9, x24, x9
    1ef0:	and	x9, x9, #0x7fffffff8
    1ef4:	cmp	x9, #0x30
    1ef8:	b.ne	20d4 <boot_Time__Piece@@Base+0xe00>  // b.any
    1efc:	add	w9, w26, #0x1
    1f00:	ldr	x1, [x8, w9, sxtw #3]
    1f04:	mov	w27, #0x100                 	// #256
    1f08:	movk	w27, #0x20, lsl #16
    1f0c:	mov	x19, x0
    1f10:	ldr	w9, [x1, #12]
    1f14:	and	w9, w9, w27
    1f18:	cmp	w9, #0x100
    1f1c:	b.ne	1f2c <boot_Time__Piece@@Base+0xc58>  // b.any
    1f20:	ldr	x9, [x1]
    1f24:	ldr	x20, [x9, #32]
    1f28:	b	1f40 <boot_Time__Piece@@Base+0xc6c>
    1f2c:	mov	w2, #0x2                   	// #2
    1f30:	mov	x0, x19
    1f34:	bl	f80 <Perl_sv_2iv_flags@plt>
    1f38:	ldr	x8, [x19, #24]
    1f3c:	mov	x20, x0
    1f40:	add	w9, w26, #0x2
    1f44:	ldr	x1, [x8, w9, sxtw #3]
    1f48:	ldr	w9, [x1, #12]
    1f4c:	and	w9, w9, w27
    1f50:	cmp	w9, #0x100
    1f54:	b.ne	1f64 <boot_Time__Piece@@Base+0xc90>  // b.any
    1f58:	ldr	x9, [x1]
    1f5c:	ldr	x21, [x9, #32]
    1f60:	b	1f78 <boot_Time__Piece@@Base+0xca4>
    1f64:	mov	w2, #0x2                   	// #2
    1f68:	mov	x0, x19
    1f6c:	bl	f80 <Perl_sv_2iv_flags@plt>
    1f70:	ldr	x8, [x19, #24]
    1f74:	mov	x21, x0
    1f78:	add	w9, w26, #0x3
    1f7c:	ldr	x1, [x8, w9, sxtw #3]
    1f80:	ldr	w9, [x1, #12]
    1f84:	and	w9, w9, w27
    1f88:	cmp	w9, #0x100
    1f8c:	b.ne	1f9c <boot_Time__Piece@@Base+0xcc8>  // b.any
    1f90:	ldr	x9, [x1]
    1f94:	ldr	x22, [x9, #32]
    1f98:	b	1fb0 <boot_Time__Piece@@Base+0xcdc>
    1f9c:	mov	w2, #0x2                   	// #2
    1fa0:	mov	x0, x19
    1fa4:	bl	f80 <Perl_sv_2iv_flags@plt>
    1fa8:	ldr	x8, [x19, #24]
    1fac:	mov	x22, x0
    1fb0:	add	w9, w26, #0x4
    1fb4:	ldr	x1, [x8, w9, sxtw #3]
    1fb8:	ldr	w9, [x1, #12]
    1fbc:	and	w9, w9, w27
    1fc0:	cmp	w9, #0x100
    1fc4:	b.ne	1fd4 <boot_Time__Piece@@Base+0xd00>  // b.any
    1fc8:	ldr	x9, [x1]
    1fcc:	ldr	x23, [x9, #32]
    1fd0:	b	1fe8 <boot_Time__Piece@@Base+0xd14>
    1fd4:	mov	w2, #0x2                   	// #2
    1fd8:	mov	x0, x19
    1fdc:	bl	f80 <Perl_sv_2iv_flags@plt>
    1fe0:	ldr	x8, [x19, #24]
    1fe4:	mov	x23, x0
    1fe8:	add	w9, w26, #0x5
    1fec:	ldr	x1, [x8, w9, sxtw #3]
    1ff0:	sub	x24, x24, #0x30
    1ff4:	ldr	w9, [x1, #12]
    1ff8:	and	w9, w9, w27
    1ffc:	cmp	w9, #0x100
    2000:	b.ne	2010 <boot_Time__Piece@@Base+0xd3c>  // b.any
    2004:	ldr	x9, [x1]
    2008:	ldr	x25, [x9, #32]
    200c:	b	2024 <boot_Time__Piece@@Base+0xd50>
    2010:	mov	w2, #0x2                   	// #2
    2014:	mov	x0, x19
    2018:	bl	f80 <Perl_sv_2iv_flags@plt>
    201c:	ldr	x8, [x19, #24]
    2020:	mov	x25, x0
    2024:	add	w9, w26, #0x6
    2028:	ldr	x1, [x8, w9, sxtw #3]
    202c:	ldr	w8, [x1, #12]
    2030:	and	w8, w8, w27
    2034:	cmp	w8, #0x100
    2038:	b.ne	2048 <boot_Time__Piece@@Base+0xd74>  // b.any
    203c:	ldr	x8, [x1]
    2040:	ldr	x26, [x8, #32]
    2044:	b	2058 <boot_Time__Piece@@Base+0xd84>
    2048:	mov	w2, #0x2                   	// #2
    204c:	mov	x0, x19
    2050:	bl	f80 <Perl_sv_2iv_flags@plt>
    2054:	mov	x26, x0
    2058:	add	x0, sp, #0x8
    205c:	str	xzr, [sp, #8]
    2060:	bl	1060 <gmtime@plt>
    2064:	ldp	q0, q1, [x0]
    2068:	ldr	x8, [x0, #48]
    206c:	ldr	q2, [x0, #32]
    2070:	add	x2, sp, #0x10
    2074:	mov	x0, x19
    2078:	mov	x1, x24
    207c:	stp	q0, q1, [sp, #16]
    2080:	str	x8, [sp, #64]
    2084:	str	q2, [sp, #48]
    2088:	stp	w20, w21, [sp, #16]
    208c:	stp	w22, w23, [sp, #24]
    2090:	stp	w25, w26, [sp, #32]
    2094:	bl	30ec <boot_Time__Piece@@Base+0x1e18>
    2098:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    209c:	ldur	x8, [x29, #-8]
    20a0:	ldr	x9, [x9, #4056]
    20a4:	ldr	x9, [x9]
    20a8:	cmp	x9, x8
    20ac:	b.ne	20d0 <boot_Time__Piece@@Base+0xdfc>  // b.any
    20b0:	ldp	x20, x19, [sp, #160]
    20b4:	ldp	x22, x21, [sp, #144]
    20b8:	ldp	x24, x23, [sp, #128]
    20bc:	ldp	x26, x25, [sp, #112]
    20c0:	ldr	x27, [sp, #96]
    20c4:	ldp	x29, x30, [sp, #80]
    20c8:	add	sp, sp, #0xb0
    20cc:	ret
    20d0:	bl	1070 <__stack_chk_fail@plt>
    20d4:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    20d8:	add	x8, x8, #0x8ce
    20dc:	mov	x0, x1
    20e0:	mov	x1, x8
    20e4:	bl	1090 <Perl_croak_xs_usage@plt>
    20e8:	sub	sp, sp, #0x80
    20ec:	stp	x29, x30, [sp, #80]
    20f0:	str	x21, [sp, #96]
    20f4:	stp	x20, x19, [sp, #112]
    20f8:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    20fc:	ldr	x8, [x8, #4056]
    2100:	add	x29, sp, #0x50
    2104:	mov	x19, x0
    2108:	ldr	x8, [x8]
    210c:	stur	x8, [x29, #-8]
    2110:	ldr	x8, [x0, #120]
    2114:	ldr	x20, [x0]
    2118:	sub	x9, x8, #0x4
    211c:	str	x9, [x0, #120]
    2120:	ldrsw	x8, [x8]
    2124:	ldr	x9, [x0, #24]
    2128:	mov	x0, x1
    212c:	add	x8, x9, x8, lsl #3
    2130:	sub	x9, x20, x8
    2134:	and	x9, x9, #0x7fffffff8
    2138:	cmp	x9, #0x8
    213c:	b.ne	2254 <boot_Time__Piece@@Base+0xf80>  // b.any
    2140:	ldr	x1, [x8, #8]
    2144:	ldr	x8, [x0]
    2148:	ldr	w9, [x1, #12]
    214c:	ldr	w21, [x8, #40]
    2150:	mov	w8, #0x200                 	// #512
    2154:	movk	w8, #0x20, lsl #16
    2158:	and	w8, w9, w8
    215c:	cmp	w8, #0x200
    2160:	b.ne	2170 <boot_Time__Piece@@Base+0xe9c>  // b.any
    2164:	ldr	x8, [x1]
    2168:	ldr	d0, [x8, #40]
    216c:	b	217c <boot_Time__Piece@@Base+0xea8>
    2170:	mov	w2, #0x2                   	// #2
    2174:	mov	x0, x19
    2178:	bl	10a0 <Perl_sv_2nv_flags@plt>
    217c:	sub	x20, x20, #0x8
    2180:	fcvtzs	x8, d0
    2184:	add	x0, sp, #0x8
    2188:	str	x8, [sp, #8]
    218c:	cbz	w21, 2198 <boot_Time__Piece@@Base+0xec4>
    2190:	bl	1060 <gmtime@plt>
    2194:	b	219c <boot_Time__Piece@@Base+0xec8>
    2198:	bl	1000 <localtime@plt>
    219c:	ldr	x8, [x0, #48]
    21a0:	ldp	q1, q0, [x0, #16]
    21a4:	ldr	q2, [x0]
    21a8:	str	x8, [sp, #64]
    21ac:	stp	q1, q0, [sp, #32]
    21b0:	str	q2, [sp, #16]
    21b4:	ldr	x8, [x19, #32]
    21b8:	sub	x8, x8, x20
    21bc:	cmp	x8, #0x4f
    21c0:	b.le	2234 <boot_Time__Piece@@Base+0xf60>
    21c4:	add	x2, sp, #0x10
    21c8:	mov	x0, x19
    21cc:	mov	x1, x20
    21d0:	bl	3518 <boot_Time__Piece@@Base+0x2244>
    21d4:	ldrsw	x1, [sp, #48]
    21d8:	mov	x20, x0
    21dc:	mov	x0, x19
    21e0:	bl	11d0 <Perl_newSViv@plt>
    21e4:	mov	x8, x20
    21e8:	str	x0, [x8, #8]!
    21ec:	sub	x21, x20, #0x48
    21f0:	str	x8, [x19]
    21f4:	ldr	x1, [x21, #8]!
    21f8:	mov	x0, x19
    21fc:	bl	1140 <Perl_sv_2mortal@plt>
    2200:	cmp	x21, x20
    2204:	b.ls	21f4 <boot_Time__Piece@@Base+0xf20>  // b.plast
    2208:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    220c:	ldur	x8, [x29, #-8]
    2210:	ldr	x9, [x9, #4056]
    2214:	ldr	x9, [x9]
    2218:	cmp	x9, x8
    221c:	b.ne	2250 <boot_Time__Piece@@Base+0xf7c>  // b.any
    2220:	ldp	x20, x19, [sp, #112]
    2224:	ldr	x21, [sp, #96]
    2228:	ldp	x29, x30, [sp, #80]
    222c:	add	sp, sp, #0x80
    2230:	ret
    2234:	mov	w3, #0xa                   	// #10
    2238:	mov	x0, x19
    223c:	mov	x1, x20
    2240:	mov	x2, x20
    2244:	bl	fb0 <Perl_stack_grow@plt>
    2248:	mov	x20, x0
    224c:	b	21c4 <boot_Time__Piece@@Base+0xef0>
    2250:	bl	1070 <__stack_chk_fail@plt>
    2254:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2258:	add	x1, x1, #0x8ee
    225c:	bl	1090 <Perl_croak_xs_usage@plt>
    2260:	sub	sp, sp, #0x150
    2264:	stp	x29, x30, [sp, #240]
    2268:	stp	x28, x27, [sp, #256]
    226c:	stp	x26, x25, [sp, #272]
    2270:	stp	x24, x23, [sp, #288]
    2274:	stp	x22, x21, [sp, #304]
    2278:	stp	x20, x19, [sp, #320]
    227c:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    2280:	ldr	x8, [x8, #4056]
    2284:	add	x29, sp, #0xf0
    2288:	ldr	x8, [x8]
    228c:	stur	x8, [x29, #-16]
    2290:	ldr	x8, [x0, #120]
    2294:	ldr	x10, [x0]
    2298:	sub	x9, x8, #0x4
    229c:	str	x9, [x0, #120]
    22a0:	ldrsw	x8, [x8]
    22a4:	ldr	x9, [x0, #24]
    22a8:	add	x9, x9, x8, lsl #3
    22ac:	sub	x9, x10, x9
    22b0:	tst	x9, #0x7fffffff8
    22b4:	b.ne	266c <boot_Time__Piece@@Base+0x1398>  // b.any
    22b8:	mov	w1, #0xc                   	// #12
    22bc:	mov	x19, x0
    22c0:	add	x27, x8, #0x1
    22c4:	bl	11b0 <Perl_newSV_type@plt>
    22c8:	mov	x20, x0
    22cc:	mov	w1, #0xb                   	// #11
    22d0:	mov	x0, x19
    22d4:	bl	11b0 <Perl_newSV_type@plt>
    22d8:	mov	x24, x0
    22dc:	mov	w1, #0xb                   	// #11
    22e0:	mov	x0, x19
    22e4:	bl	11b0 <Perl_newSV_type@plt>
    22e8:	mov	x23, x0
    22ec:	mov	w1, #0xb                   	// #11
    22f0:	mov	x0, x19
    22f4:	bl	11b0 <Perl_newSV_type@plt>
    22f8:	mov	x22, x0
    22fc:	mov	w1, #0xb                   	// #11
    2300:	mov	x0, x19
    2304:	bl	11b0 <Perl_newSV_type@plt>
    2308:	mov	w8, #0xcc30                	// #52272
    230c:	mov	x21, x0
    2310:	movk	w8, #0x4eff, lsl #16
    2314:	add	x0, sp, #0x38
    2318:	str	x8, [sp, #56]
    231c:	bl	1060 <gmtime@plt>
    2320:	ldp	q1, q0, [x0, #16]
    2324:	ldr	x8, [x0, #48]
    2328:	ldr	q2, [x0]
    232c:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2330:	adrp	x26, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2334:	mov	w28, #0x7                   	// #7
    2338:	add	x25, x25, #0x8f2
    233c:	add	x26, x26, #0x8f5
    2340:	str	x8, [sp, #48]
    2344:	stp	q1, q0, [sp, #16]
    2348:	str	q2, [sp]
    234c:	add	x0, sp, #0x40
    2350:	mov	x3, sp
    2354:	mov	w1, #0xa0                  	// #160
    2358:	mov	x2, x25
    235c:	bl	fd0 <strftime@plt>
    2360:	mov	x2, x0
    2364:	add	x1, sp, #0x40
    2368:	mov	x0, x19
    236c:	bl	11f0 <Perl_newSVpvn@plt>
    2370:	mov	x2, x0
    2374:	mov	x0, x19
    2378:	mov	x1, x24
    237c:	bl	10b0 <Perl_av_push@plt>
    2380:	add	x0, sp, #0x40
    2384:	mov	x3, sp
    2388:	mov	w1, #0xa0                  	// #160
    238c:	mov	x2, x26
    2390:	bl	fd0 <strftime@plt>
    2394:	mov	x2, x0
    2398:	add	x1, sp, #0x40
    239c:	mov	x0, x19
    23a0:	bl	11f0 <Perl_newSVpvn@plt>
    23a4:	mov	x2, x0
    23a8:	mov	x0, x19
    23ac:	mov	x1, x23
    23b0:	bl	10b0 <Perl_av_push@plt>
    23b4:	ldr	w8, [sp, #24]
    23b8:	subs	x28, x28, #0x1
    23bc:	add	w8, w8, #0x1
    23c0:	str	w8, [sp, #24]
    23c4:	b.ne	234c <boot_Time__Piece@@Base+0x1078>  // b.any
    23c8:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    23cc:	adrp	x26, 3000 <boot_Time__Piece@@Base+0x1d2c>
    23d0:	mov	w28, #0xc                   	// #12
    23d4:	add	x25, x25, #0x8f8
    23d8:	add	x26, x26, #0x8fb
    23dc:	add	x0, sp, #0x40
    23e0:	mov	x3, sp
    23e4:	mov	w1, #0xa0                  	// #160
    23e8:	mov	x2, x25
    23ec:	bl	fd0 <strftime@plt>
    23f0:	mov	x2, x0
    23f4:	add	x1, sp, #0x40
    23f8:	mov	x0, x19
    23fc:	bl	11f0 <Perl_newSVpvn@plt>
    2400:	mov	x2, x0
    2404:	mov	x0, x19
    2408:	mov	x1, x22
    240c:	bl	10b0 <Perl_av_push@plt>
    2410:	add	x0, sp, #0x40
    2414:	mov	x3, sp
    2418:	mov	w1, #0xa0                  	// #160
    241c:	mov	x2, x26
    2420:	bl	fd0 <strftime@plt>
    2424:	mov	x2, x0
    2428:	add	x1, sp, #0x40
    242c:	mov	x0, x19
    2430:	bl	11f0 <Perl_newSVpvn@plt>
    2434:	mov	x2, x0
    2438:	mov	x0, x19
    243c:	mov	x1, x21
    2440:	bl	10b0 <Perl_av_push@plt>
    2444:	ldr	w8, [sp, #16]
    2448:	subs	x28, x28, #0x1
    244c:	add	w8, w8, #0x1
    2450:	str	w8, [sp, #16]
    2454:	b.ne	23dc <boot_Time__Piece@@Base+0x1108>  // b.any
    2458:	mov	x0, x19
    245c:	mov	x1, x24
    2460:	bl	fa0 <Perl_newRV_noinc@plt>
    2464:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2468:	mov	x5, x0
    246c:	add	x2, x2, #0x862
    2470:	mov	w3, #0x4                   	// #4
    2474:	mov	w4, #0x24                  	// #36
    2478:	mov	x0, x19
    247c:	mov	x1, x20
    2480:	mov	w6, wzr
    2484:	bl	1190 <Perl_hv_common_key_len@plt>
    2488:	mov	x0, x19
    248c:	mov	x1, x23
    2490:	bl	fa0 <Perl_newRV_noinc@plt>
    2494:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2498:	mov	x5, x0
    249c:	add	x2, x2, #0x85a
    24a0:	mov	w3, #0x7                   	// #7
    24a4:	mov	w4, #0x24                  	// #36
    24a8:	mov	x0, x19
    24ac:	mov	x1, x20
    24b0:	mov	w6, wzr
    24b4:	bl	1190 <Perl_hv_common_key_len@plt>
    24b8:	mov	x0, x19
    24bc:	mov	x1, x22
    24c0:	bl	fa0 <Perl_newRV_noinc@plt>
    24c4:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    24c8:	mov	x5, x0
    24cc:	add	x2, x2, #0x856
    24d0:	mov	w3, #0x3                   	// #3
    24d4:	mov	w4, #0x24                  	// #36
    24d8:	mov	x0, x19
    24dc:	mov	x1, x20
    24e0:	mov	w6, wzr
    24e4:	bl	1190 <Perl_hv_common_key_len@plt>
    24e8:	mov	x0, x19
    24ec:	mov	x1, x21
    24f0:	bl	fa0 <Perl_newRV_noinc@plt>
    24f4:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    24f8:	mov	x5, x0
    24fc:	add	x2, x2, #0x850
    2500:	mov	w3, #0x5                   	// #5
    2504:	mov	w4, #0x24                  	// #36
    2508:	mov	x0, x19
    250c:	mov	x1, x20
    2510:	mov	w6, wzr
    2514:	bl	1190 <Perl_hv_common_key_len@plt>
    2518:	mov	x0, x19
    251c:	mov	x1, x21
    2520:	bl	11a0 <Perl_newRV@plt>
    2524:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2528:	mov	x5, x0
    252c:	add	x2, x2, #0x84c
    2530:	mov	w3, #0x9                   	// #9
    2534:	mov	w4, #0x24                  	// #36
    2538:	mov	x0, x19
    253c:	mov	x1, x20
    2540:	mov	w6, wzr
    2544:	bl	1190 <Perl_hv_common_key_len@plt>
    2548:	adrp	x21, 3000 <boot_Time__Piece@@Base+0x1d2c>
    254c:	add	x21, x21, #0x8b2
    2550:	add	x0, sp, #0x40
    2554:	mov	x3, sp
    2558:	mov	w1, #0xa0                  	// #160
    255c:	mov	x2, x21
    2560:	bl	fd0 <strftime@plt>
    2564:	mov	x2, x0
    2568:	add	x1, sp, #0x40
    256c:	mov	x0, x19
    2570:	bl	11f0 <Perl_newSVpvn@plt>
    2574:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2578:	mov	x5, x0
    257c:	add	x2, x2, #0x86d
    2580:	mov	w3, #0x2                   	// #2
    2584:	mov	w4, #0x24                  	// #36
    2588:	mov	x0, x19
    258c:	mov	x1, x20
    2590:	mov	w6, wzr
    2594:	bl	1190 <Perl_hv_common_key_len@plt>
    2598:	mov	w8, #0x12                  	// #18
    259c:	add	x0, sp, #0x40
    25a0:	mov	x3, sp
    25a4:	mov	w1, #0xa0                  	// #160
    25a8:	mov	x2, x21
    25ac:	str	w8, [sp, #8]
    25b0:	bl	fd0 <strftime@plt>
    25b4:	mov	x2, x0
    25b8:	add	x1, sp, #0x40
    25bc:	mov	x0, x19
    25c0:	bl	11f0 <Perl_newSVpvn@plt>
    25c4:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    25c8:	mov	x5, x0
    25cc:	add	x2, x2, #0x870
    25d0:	mov	w3, #0x2                   	// #2
    25d4:	mov	w4, #0x24                  	// #36
    25d8:	mov	x0, x19
    25dc:	mov	x1, x20
    25e0:	mov	w6, wzr
    25e4:	bl	1190 <Perl_hv_common_key_len@plt>
    25e8:	cbz	x0, 2660 <boot_Time__Piece@@Base+0x138c>
    25ec:	ldr	x8, [x0]
    25f0:	ldrb	w8, [x8, #13]
    25f4:	cbz	w8, 2660 <boot_Time__Piece@@Base+0x138c>
    25f8:	mov	x0, x19
    25fc:	mov	x1, x20
    2600:	bl	fa0 <Perl_newRV_noinc@plt>
    2604:	mov	x1, x0
    2608:	mov	x0, x19
    260c:	bl	1140 <Perl_sv_2mortal@plt>
    2610:	ldr	x8, [x19, #24]
    2614:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    2618:	str	x0, [x8, x27, lsl #3]
    261c:	ldr	x8, [x19, #24]
    2620:	add	x8, x8, x27, lsl #3
    2624:	str	x8, [x19]
    2628:	ldur	x8, [x29, #-16]
    262c:	ldr	x9, [x9, #4056]
    2630:	ldr	x9, [x9]
    2634:	cmp	x9, x8
    2638:	b.ne	265c <boot_Time__Piece@@Base+0x1388>  // b.any
    263c:	ldp	x20, x19, [sp, #320]
    2640:	ldp	x22, x21, [sp, #304]
    2644:	ldp	x24, x23, [sp, #288]
    2648:	ldp	x26, x25, [sp, #272]
    264c:	ldp	x28, x27, [sp, #256]
    2650:	ldp	x29, x30, [sp, #240]
    2654:	add	sp, sp, #0x150
    2658:	ret
    265c:	bl	1070 <__stack_chk_fail@plt>
    2660:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2664:	add	x0, x0, #0x8fe
    2668:	bl	1100 <Perl_croak_nocontext@plt>
    266c:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2670:	add	x8, x8, #0x718
    2674:	mov	x0, x1
    2678:	mov	x1, x8
    267c:	bl	1090 <Perl_croak_xs_usage@plt>
    2680:	sub	sp, sp, #0x80
    2684:	stp	x29, x30, [sp, #32]
    2688:	stp	x28, x27, [sp, #48]
    268c:	stp	x26, x25, [sp, #64]
    2690:	stp	x24, x23, [sp, #80]
    2694:	stp	x22, x21, [sp, #96]
    2698:	stp	x20, x19, [sp, #112]
    269c:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    26a0:	ldr	x8, [x8, #4056]
    26a4:	add	x29, sp, #0x20
    26a8:	mov	x22, x0
    26ac:	ldr	x8, [x8]
    26b0:	stur	x8, [x29, #-8]
    26b4:	ldrb	w24, [x1]
    26b8:	cbz	w24, 308c <boot_Time__Piece@@Base+0x1db8>
    26bc:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    26c0:	mov	x19, x3
    26c4:	mov	x20, x2
    26c8:	mov	x21, x1
    26cc:	add	x25, x25, #0x5f0
    26d0:	ldrb	w23, [x22]
    26d4:	cbz	x23, 308c <boot_Time__Piece@@Base+0x1db8>
    26d8:	and	w8, w24, #0xff
    26dc:	cmp	w8, #0x25
    26e0:	b.ne	2738 <boot_Time__Piece@@Base+0x1464>  // b.any
    26e4:	mov	w8, wzr
    26e8:	mov	w27, wzr
    26ec:	add	x21, x21, #0x2
    26f0:	ldurb	w26, [x21, #-1]
    26f4:	sub	w9, w26, #0x25
    26f8:	cmp	w9, #0x55
    26fc:	b.hi	2be4 <boot_Time__Piece@@Base+0x1910>  // b.pmore
    2700:	adr	x10, 2710 <boot_Time__Piece@@Base+0x143c>
    2704:	ldrh	w11, [x25, x9, lsl #1]
    2708:	add	x10, x10, x11, lsl #2
    270c:	br	x10
    2710:	orr	w8, w27, w8
    2714:	cbnz	w8, 2774 <boot_Time__Piece@@Base+0x14a0>
    2718:	mov	w27, wzr
    271c:	mov	w8, #0x1                   	// #1
    2720:	b	2730 <boot_Time__Piece@@Base+0x145c>
    2724:	orr	w8, w27, w8
    2728:	cbnz	w8, 2774 <boot_Time__Piece@@Base+0x14a0>
    272c:	mov	w27, #0x1                   	// #1
    2730:	add	x21, x21, #0x1
    2734:	b	26f0 <boot_Time__Piece@@Base+0x141c>
    2738:	bl	10e0 <__ctype_b_loc@plt>
    273c:	ldr	x8, [x0]
    2740:	and	x9, x24, #0xff
    2744:	ldrh	w9, [x8, x9, lsl #1]
    2748:	tbnz	w9, #13, 275c <boot_Time__Piece@@Base+0x1488>
    274c:	cmp	w23, w24, uxtb
    2750:	b.ne	3088 <boot_Time__Piece@@Base+0x1db4>  // b.any
    2754:	add	x22, x22, #0x1
    2758:	b	2770 <boot_Time__Piece@@Base+0x149c>
    275c:	and	x9, x23, #0xff
    2760:	ldrh	w9, [x8, x9, lsl #1]
    2764:	tbz	w9, #13, 2770 <boot_Time__Piece@@Base+0x149c>
    2768:	ldrb	w23, [x22, #1]!
    276c:	cbnz	w23, 275c <boot_Time__Piece@@Base+0x1488>
    2770:	add	x21, x21, #0x1
    2774:	ldrb	w24, [x21]
    2778:	cbnz	w24, 26d0 <boot_Time__Piece@@Base+0x13fc>
    277c:	b	308c <boot_Time__Piece@@Base+0x1db8>
    2780:	bl	10e0 <__ctype_b_loc@plt>
    2784:	ldr	x10, [x0]
    2788:	ldrh	w8, [x10, x23, lsl #1]
    278c:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2790:	mov	x11, xzr
    2794:	mov	w9, wzr
    2798:	add	x8, x22, #0x2
    279c:	and	x12, x23, #0xff
    27a0:	ldrh	w12, [x10, x12, lsl #1]
    27a4:	tbz	w12, #11, 27d0 <boot_Time__Piece@@Base+0x14fc>
    27a8:	mov	w12, #0xa                   	// #10
    27ac:	mul	w9, w9, w12
    27b0:	add	w9, w9, w23, uxtb
    27b4:	cmp	x11, #0x1
    27b8:	sub	w9, w9, #0x30
    27bc:	b.eq	27d4 <boot_Time__Piece@@Base+0x1500>  // b.none
    27c0:	add	x12, x22, x11
    27c4:	ldrb	w23, [x12, #1]
    27c8:	add	x11, x11, #0x1
    27cc:	cbnz	w23, 279c <boot_Time__Piece@@Base+0x14c8>
    27d0:	add	x8, x22, x11
    27d4:	cmp	w26, #0x6b
    27d8:	b.eq	27e4 <boot_Time__Piece@@Base+0x1510>  // b.none
    27dc:	cmp	w26, #0x48
    27e0:	b.ne	2bf8 <boot_Time__Piece@@Base+0x1924>  // b.any
    27e4:	cmp	w9, #0x17
    27e8:	b.le	2c00 <boot_Time__Piece@@Base+0x192c>
    27ec:	b	3088 <boot_Time__Piece@@Base+0x1db4>
    27f0:	mov	x28, xzr
    27f4:	cmp	w26, #0x42
    27f8:	cbz	w27, 2814 <boot_Time__Piece@@Base+0x1540>
    27fc:	b.ne	2850 <boot_Time__Piece@@Base+0x157c>  // b.any
    2800:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2804:	add	x8, x8, #0x150
    2808:	add	x8, x8, x28, lsl #3
    280c:	ldr	x24, [x8, #336]
    2810:	b	2830 <boot_Time__Piece@@Base+0x155c>
    2814:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2818:	add	x8, x8, #0x150
    281c:	b.ne	282c <boot_Time__Piece@@Base+0x1558>  // b.any
    2820:	add	x8, x8, x28, lsl #3
    2824:	ldr	x24, [x8, #96]
    2828:	b	2830 <boot_Time__Piece@@Base+0x155c>
    282c:	ldr	x24, [x8, x28, lsl #3]
    2830:	mov	x0, x24
    2834:	bl	f90 <strlen@plt>
    2838:	mov	x23, x0
    283c:	mov	x0, x22
    2840:	mov	x1, x24
    2844:	mov	x2, x23
    2848:	bl	1120 <strncasecmp@plt>
    284c:	cbz	w0, 2c38 <boot_Time__Piece@@Base+0x1964>
    2850:	add	x28, x28, #0x1
    2854:	cmp	x28, #0xc
    2858:	b.ne	27f4 <boot_Time__Piece@@Base+0x1520>  // b.any
    285c:	b	3088 <boot_Time__Piece@@Base+0x1db4>
    2860:	bl	10e0 <__ctype_b_loc@plt>
    2864:	ldr	x9, [x0]
    2868:	ldrh	w8, [x9, x23, lsl #1]
    286c:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2870:	mov	x11, xzr
    2874:	mov	w10, wzr
    2878:	add	x8, x22, #0x2
    287c:	and	x12, x23, #0xff
    2880:	ldrh	w12, [x9, x12, lsl #1]
    2884:	tbz	w12, #11, 28b0 <boot_Time__Piece@@Base+0x15dc>
    2888:	mov	w12, #0xa                   	// #10
    288c:	mul	w10, w10, w12
    2890:	add	w10, w10, w23, uxtb
    2894:	cmp	x11, #0x1
    2898:	sub	w10, w10, #0x30
    289c:	b.eq	28b4 <boot_Time__Piece@@Base+0x15e0>  // b.none
    28a0:	add	x12, x22, x11
    28a4:	ldrb	w23, [x12, #1]
    28a8:	add	x11, x11, #0x1
    28ac:	cbnz	w23, 287c <boot_Time__Piece@@Base+0x15a8>
    28b0:	add	x8, x22, x11
    28b4:	cmp	w10, #0x35
    28b8:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    28bc:	ldrb	w10, [x8]
    28c0:	cbz	x10, 3020 <boot_Time__Piece@@Base+0x1d4c>
    28c4:	ldrh	w10, [x9, x10, lsl #1]
    28c8:	tbz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    28cc:	ldrb	w10, [x21]
    28d0:	cbz	w10, 3080 <boot_Time__Piece@@Base+0x1dac>
    28d4:	and	x10, x10, #0xff
    28d8:	ldrh	w10, [x9, x10, lsl #1]
    28dc:	tbnz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    28e0:	ldrb	w10, [x21, #1]!
    28e4:	cbnz	w10, 28d4 <boot_Time__Piece@@Base+0x1600>
    28e8:	b	3080 <boot_Time__Piece@@Base+0x1dac>
    28ec:	mov	x27, xzr
    28f0:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    28f4:	add	x8, x8, #0x150
    28f8:	add	x8, x8, x27, lsl #3
    28fc:	cmp	w26, #0x41
    2900:	b.ne	290c <boot_Time__Piece@@Base+0x1638>  // b.any
    2904:	ldr	x24, [x8, #248]
    2908:	b	2910 <boot_Time__Piece@@Base+0x163c>
    290c:	ldr	x24, [x8, #192]
    2910:	mov	x0, x24
    2914:	bl	f90 <strlen@plt>
    2918:	mov	x23, x0
    291c:	mov	x0, x22
    2920:	mov	x1, x24
    2924:	mov	x2, x23
    2928:	bl	1120 <strncasecmp@plt>
    292c:	cbz	w0, 2c58 <boot_Time__Piece@@Base+0x1984>
    2930:	add	x27, x27, #0x1
    2934:	cmp	x27, #0x7
    2938:	b.ne	28f0 <boot_Time__Piece@@Base+0x161c>  // b.any
    293c:	b	3088 <boot_Time__Piece@@Base+0x1db4>
    2940:	bl	10e0 <__ctype_b_loc@plt>
    2944:	ldr	x10, [x0]
    2948:	ldrh	w8, [x10, x23, lsl #1]
    294c:	tbnz	w8, #13, 2774 <boot_Time__Piece@@Base+0x14a0>
    2950:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2954:	mov	x11, xzr
    2958:	mov	w9, wzr
    295c:	add	x8, x22, #0x2
    2960:	and	x12, x23, #0xff
    2964:	ldrh	w12, [x10, x12, lsl #1]
    2968:	tbz	w12, #11, 2994 <boot_Time__Piece@@Base+0x16c0>
    296c:	mov	w12, #0xa                   	// #10
    2970:	mul	w9, w9, w12
    2974:	add	w9, w9, w23, uxtb
    2978:	cmp	x11, #0x1
    297c:	sub	w9, w9, #0x30
    2980:	b.eq	2998 <boot_Time__Piece@@Base+0x16c4>  // b.none
    2984:	add	x12, x22, x11
    2988:	ldrb	w23, [x12, #1]
    298c:	add	x11, x11, #0x1
    2990:	cbnz	w23, 2960 <boot_Time__Piece@@Base+0x168c>
    2994:	add	x8, x22, x11
    2998:	cmp	w26, #0x4d
    299c:	b.ne	2f00 <boot_Time__Piece@@Base+0x1c2c>  // b.any
    29a0:	cmp	w9, #0x3b
    29a4:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    29a8:	str	w9, [x20, #4]
    29ac:	b	2f0c <boot_Time__Piece@@Base+0x1c38>
    29b0:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    29b4:	ldr	x24, [x8, #640]
    29b8:	mov	x0, x24
    29bc:	bl	f90 <strlen@plt>
    29c0:	mov	x23, x0
    29c4:	mov	x0, x22
    29c8:	mov	x1, x24
    29cc:	mov	x2, x23
    29d0:	bl	1120 <strncasecmp@plt>
    29d4:	cbz	w0, 2c40 <boot_Time__Piece@@Base+0x196c>
    29d8:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    29dc:	ldr	x1, [x8, #656]
    29e0:	mov	x0, x22
    29e4:	mov	x2, x23
    29e8:	bl	1120 <strncasecmp@plt>
    29ec:	cbz	w0, 2c40 <boot_Time__Piece@@Base+0x196c>
    29f0:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    29f4:	ldr	x24, [x8, #648]
    29f8:	mov	x0, x24
    29fc:	bl	f90 <strlen@plt>
    2a00:	mov	x23, x0
    2a04:	mov	x0, x22
    2a08:	mov	x1, x24
    2a0c:	mov	x2, x23
    2a10:	bl	1120 <strncasecmp@plt>
    2a14:	cbz	w0, 2a30 <boot_Time__Piece@@Base+0x175c>
    2a18:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2a1c:	ldr	x1, [x8, #664]
    2a20:	mov	x0, x22
    2a24:	mov	x2, x23
    2a28:	bl	1120 <strncasecmp@plt>
    2a2c:	cbnz	w0, 3088 <boot_Time__Piece@@Base+0x1db4>
    2a30:	ldr	w8, [x20, #8]
    2a34:	cmp	w8, #0xc
    2a38:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    2a3c:	b.eq	2c5c <boot_Time__Piece@@Base+0x1988>  // b.none
    2a40:	add	w8, w8, #0xc
    2a44:	str	w8, [x20, #8]
    2a48:	b	2c5c <boot_Time__Piece@@Base+0x1988>
    2a4c:	bl	10e0 <__ctype_b_loc@plt>
    2a50:	ldr	x10, [x0]
    2a54:	ldrh	w8, [x10, x23, lsl #1]
    2a58:	tbnz	w8, #13, 2774 <boot_Time__Piece@@Base+0x14a0>
    2a5c:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2a60:	cmp	w26, #0x59
    2a64:	mov	w8, #0x2                   	// #2
    2a68:	mov	w11, #0x4                   	// #4
    2a6c:	csel	x8, x11, x8, eq  // eq = none
    2a70:	mov	w9, wzr
    2a74:	add	x11, x22, x8
    2a78:	sub	x12, x8, #0x1
    2a7c:	and	x8, x23, #0xff
    2a80:	ldrh	w8, [x10, x8, lsl #1]
    2a84:	tbz	w8, #11, 2fd8 <boot_Time__Piece@@Base+0x1d04>
    2a88:	mov	w8, #0xa                   	// #10
    2a8c:	mul	w8, w9, w8
    2a90:	add	w8, w8, w23, uxtb
    2a94:	sub	w9, w8, #0x30
    2a98:	cbz	x12, 2fe0 <boot_Time__Piece@@Base+0x1d0c>
    2a9c:	ldrb	w23, [x22, #1]
    2aa0:	add	x8, x22, #0x1
    2aa4:	sub	x12, x12, #0x1
    2aa8:	mov	x22, x8
    2aac:	cbnz	w23, 2a7c <boot_Time__Piece@@Base+0x17a8>
    2ab0:	b	2fe4 <boot_Time__Piece@@Base+0x1d10>
    2ab4:	bl	10e0 <__ctype_b_loc@plt>
    2ab8:	ldr	x10, [x0]
    2abc:	ldrh	w8, [x10, x23, lsl #1]
    2ac0:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2ac4:	mov	x11, xzr
    2ac8:	mov	w9, wzr
    2acc:	add	x8, x22, #0x2
    2ad0:	and	x12, x23, #0xff
    2ad4:	ldrh	w12, [x10, x12, lsl #1]
    2ad8:	tbz	w12, #11, 2b04 <boot_Time__Piece@@Base+0x1830>
    2adc:	mov	w12, #0xa                   	// #10
    2ae0:	mul	w9, w9, w12
    2ae4:	add	w9, w9, w23, uxtb
    2ae8:	cmp	x11, #0x1
    2aec:	sub	w9, w9, #0x30
    2af0:	b.eq	2b08 <boot_Time__Piece@@Base+0x1834>  // b.none
    2af4:	add	x12, x22, x11
    2af8:	ldrb	w23, [x12, #1]
    2afc:	add	x11, x11, #0x1
    2b00:	cbnz	w23, 2ad0 <boot_Time__Piece@@Base+0x17fc>
    2b04:	add	x8, x22, x11
    2b08:	cmp	w9, #0x1f
    2b0c:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    2b10:	str	w9, [x20, #12]
    2b14:	ldrb	w10, [x8]
    2b18:	cbz	x10, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2b1c:	ldr	x9, [x0]
    2b20:	ldrh	w10, [x9, x10, lsl #1]
    2b24:	tbz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2b28:	ldrb	w10, [x21]
    2b2c:	cbz	w10, 3080 <boot_Time__Piece@@Base+0x1dac>
    2b30:	and	x10, x10, #0xff
    2b34:	ldrh	w10, [x9, x10, lsl #1]
    2b38:	tbnz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2b3c:	ldrb	w10, [x21, #1]!
    2b40:	cbnz	w10, 2b30 <boot_Time__Piece@@Base+0x185c>
    2b44:	b	3080 <boot_Time__Piece@@Base+0x1dac>
    2b48:	bl	10e0 <__ctype_b_loc@plt>
    2b4c:	ldr	x8, [x0]
    2b50:	ldrh	w9, [x8, x23, lsl #1]
    2b54:	tbz	w9, #13, 3088 <boot_Time__Piece@@Base+0x1db4>
    2b58:	ldrh	w9, [x8, x23, lsl #1]
    2b5c:	tbz	w9, #13, 2774 <boot_Time__Piece@@Base+0x14a0>
    2b60:	ldrb	w9, [x22, #1]!
    2b64:	ldrh	w9, [x8, x9, lsl #1]
    2b68:	tbnz	w9, #13, 2b60 <boot_Time__Piece@@Base+0x188c>
    2b6c:	b	2774 <boot_Time__Piece@@Base+0x14a0>
    2b70:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2b74:	add	x1, x1, #0x8a9
    2b78:	b	2ecc <boot_Time__Piece@@Base+0x1bf8>
    2b7c:	bl	10e0 <__ctype_b_loc@plt>
    2b80:	ldr	x8, [x0]
    2b84:	ldrh	w8, [x8, x23, lsl #1]
    2b88:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2b8c:	cmp	w26, #0x75
    2b90:	mov	w9, #0x6                   	// #6
    2b94:	sub	w8, w23, #0x30
    2b98:	cinc	w9, w9, eq  // eq = none
    2b9c:	cmp	w8, w9
    2ba0:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    2ba4:	cmp	w8, #0x7
    2ba8:	csel	w8, wzr, w8, eq  // eq = none
    2bac:	str	w8, [x20, #24]
    2bb0:	ldrb	w9, [x22, #1]!
    2bb4:	cbz	x9, 2774 <boot_Time__Piece@@Base+0x14a0>
    2bb8:	ldr	x8, [x0]
    2bbc:	ldrh	w9, [x8, x9, lsl #1]
    2bc0:	tbz	w9, #13, 2774 <boot_Time__Piece@@Base+0x14a0>
    2bc4:	ldrb	w9, [x21]
    2bc8:	cbz	w9, 308c <boot_Time__Piece@@Base+0x1db8>
    2bcc:	and	x9, x9, #0xff
    2bd0:	ldrh	w9, [x8, x9, lsl #1]
    2bd4:	tbnz	w9, #13, 2774 <boot_Time__Piece@@Base+0x14a0>
    2bd8:	ldrb	w9, [x21, #1]!
    2bdc:	cbnz	w9, 2bcc <boot_Time__Piece@@Base+0x18f8>
    2be0:	b	308c <boot_Time__Piece@@Base+0x1db8>
    2be4:	cbnz	w26, 2774 <boot_Time__Piece@@Base+0x14a0>
    2be8:	cmp	w23, #0x25
    2bec:	b.ne	3088 <boot_Time__Piece@@Base+0x1db4>  // b.any
    2bf0:	add	x22, x22, #0x1
    2bf4:	b	2774 <boot_Time__Piece@@Base+0x14a0>
    2bf8:	cmp	w9, #0xc
    2bfc:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    2c00:	str	w9, [x20, #8]
    2c04:	ldrb	w10, [x8]
    2c08:	cbz	x10, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2c0c:	ldr	x9, [x0]
    2c10:	ldrh	w10, [x9, x10, lsl #1]
    2c14:	tbz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2c18:	ldrb	w10, [x21]
    2c1c:	cbz	w10, 3080 <boot_Time__Piece@@Base+0x1dac>
    2c20:	and	x10, x10, #0xff
    2c24:	ldrh	w10, [x9, x10, lsl #1]
    2c28:	tbnz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2c2c:	ldrb	w10, [x21, #1]!
    2c30:	cbnz	w10, 2c20 <boot_Time__Piece@@Base+0x194c>
    2c34:	b	3080 <boot_Time__Piece@@Base+0x1dac>
    2c38:	str	w28, [x20, #16]
    2c3c:	b	2c5c <boot_Time__Piece@@Base+0x1988>
    2c40:	ldr	w8, [x20, #8]
    2c44:	cmp	w8, #0xc
    2c48:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    2c4c:	b.ne	2c5c <boot_Time__Piece@@Base+0x1988>  // b.any
    2c50:	str	wzr, [x20, #8]
    2c54:	b	2c5c <boot_Time__Piece@@Base+0x1988>
    2c58:	str	w27, [x20, #24]
    2c5c:	add	x22, x22, x23
    2c60:	b	2774 <boot_Time__Piece@@Base+0x14a0>
    2c64:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2c68:	add	x1, x1, #0x873
    2c6c:	b	2ecc <boot_Time__Piece@@Base+0x1bf8>
    2c70:	bl	10e0 <__ctype_b_loc@plt>
    2c74:	ldr	x9, [x0]
    2c78:	ldrh	w8, [x9, x23, lsl #1]
    2c7c:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2c80:	mov	x10, xzr
    2c84:	mov	w8, wzr
    2c88:	add	x11, x22, #0x2
    2c8c:	and	x12, x23, #0xff
    2c90:	ldrh	w12, [x9, x12, lsl #1]
    2c94:	tbz	w12, #11, 2cc0 <boot_Time__Piece@@Base+0x19ec>
    2c98:	mov	w12, #0xa                   	// #10
    2c9c:	mul	w8, w8, w12
    2ca0:	add	w8, w8, w23, uxtb
    2ca4:	cmp	x10, #0x1
    2ca8:	sub	w8, w8, #0x30
    2cac:	b.eq	3028 <boot_Time__Piece@@Base+0x1d54>  // b.none
    2cb0:	add	x12, x22, x10
    2cb4:	ldrb	w23, [x12, #1]
    2cb8:	add	x10, x10, #0x1
    2cbc:	cbnz	w23, 2c8c <boot_Time__Piece@@Base+0x19b8>
    2cc0:	add	x22, x22, x10
    2cc4:	b	302c <boot_Time__Piece@@Base+0x1d58>
    2cc8:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2ccc:	add	x1, x1, #0x891
    2cd0:	b	2ecc <boot_Time__Piece@@Base+0x1bf8>
    2cd4:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2cd8:	add	x1, x1, #0x89a
    2cdc:	b	2ecc <boot_Time__Piece@@Base+0x1bf8>
    2ce0:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2ce4:	add	x1, x1, #0x8a3
    2ce8:	b	2ecc <boot_Time__Piece@@Base+0x1bf8>
    2cec:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2cf0:	add	x1, x1, #0x8b5
    2cf4:	b	2ecc <boot_Time__Piece@@Base+0x1bf8>
    2cf8:	bl	10e0 <__ctype_b_loc@plt>
    2cfc:	ldr	x8, [x0]
    2d00:	mov	x26, x22
    2d04:	and	x9, x23, #0xff
    2d08:	ldrh	w9, [x8, x9, lsl #1]
    2d0c:	tbz	w9, #8, 2d18 <boot_Time__Piece@@Base+0x1a44>
    2d10:	ldrb	w23, [x26, #1]!
    2d14:	cbnz	w23, 2d04 <boot_Time__Piece@@Base+0x1a30>
    2d18:	subs	x24, x26, x22
    2d1c:	b.eq	2774 <boot_Time__Piece@@Base+0x14a0>  // b.none
    2d20:	add	x0, x24, #0x1
    2d24:	bl	1010 <malloc@plt>
    2d28:	cbz	x0, 30d4 <boot_Time__Piece@@Base+0x1e00>
    2d2c:	mov	x1, x22
    2d30:	mov	x2, x24
    2d34:	mov	x23, x0
    2d38:	bl	11c0 <strncpy@plt>
    2d3c:	strb	wzr, [x0, x24]
    2d40:	bl	1020 <tzset@plt>
    2d44:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2d48:	add	x1, x1, #0x8ca
    2d4c:	mov	x0, x23
    2d50:	bl	10d0 <strcmp@plt>
    2d54:	cbnz	w0, 2d60 <boot_Time__Piece@@Base+0x1a8c>
    2d58:	mov	w8, #0x1                   	// #1
    2d5c:	str	w8, [x19]
    2d60:	mov	x0, x23
    2d64:	bl	1110 <free@plt>
    2d68:	ldr	w8, [x19]
    2d6c:	mov	x22, x26
    2d70:	cbnz	w8, 2774 <boot_Time__Piece@@Base+0x14a0>
    2d74:	b	3088 <boot_Time__Piece@@Base+0x1db4>
    2d78:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2d7c:	add	x1, x1, #0x876
    2d80:	b	2ecc <boot_Time__Piece@@Base+0x1bf8>
    2d84:	bl	10e0 <__ctype_b_loc@plt>
    2d88:	ldr	x9, [x0]
    2d8c:	ldrh	w8, [x9, x23, lsl #1]
    2d90:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2d94:	mov	x10, xzr
    2d98:	mov	w8, wzr
    2d9c:	add	x11, x22, #0x3
    2da0:	and	x12, x23, #0xff
    2da4:	ldrh	w12, [x9, x12, lsl #1]
    2da8:	tbz	w12, #11, 2dd4 <boot_Time__Piece@@Base+0x1b00>
    2dac:	mov	w12, #0xa                   	// #10
    2db0:	mul	w8, w8, w12
    2db4:	add	w8, w8, w23, uxtb
    2db8:	cmp	x10, #0x2
    2dbc:	sub	w8, w8, #0x30
    2dc0:	b.eq	3048 <boot_Time__Piece@@Base+0x1d74>  // b.none
    2dc4:	add	x12, x22, x10
    2dc8:	ldrb	w23, [x12, #1]
    2dcc:	add	x10, x10, #0x1
    2dd0:	cbnz	w23, 2da0 <boot_Time__Piece@@Base+0x1acc>
    2dd4:	add	x22, x22, x10
    2dd8:	b	304c <boot_Time__Piece@@Base+0x1d78>
    2ddc:	bl	10e0 <__ctype_b_loc@plt>
    2de0:	ldr	x10, [x0]
    2de4:	ldrh	w8, [x10, x23, lsl #1]
    2de8:	tbz	w8, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2dec:	mov	x11, xzr
    2df0:	mov	w9, wzr
    2df4:	add	x8, x22, #0x2
    2df8:	and	x12, x23, #0xff
    2dfc:	ldrh	w12, [x10, x12, lsl #1]
    2e00:	tbz	w12, #11, 2e2c <boot_Time__Piece@@Base+0x1b58>
    2e04:	mov	w12, #0xa                   	// #10
    2e08:	mul	w9, w9, w12
    2e0c:	add	w9, w9, w23, uxtb
    2e10:	cmp	x11, #0x1
    2e14:	sub	w9, w9, #0x30
    2e18:	b.eq	2e30 <boot_Time__Piece@@Base+0x1b5c>  // b.none
    2e1c:	add	x12, x22, x11
    2e20:	ldrb	w23, [x12, #1]
    2e24:	add	x11, x11, #0x1
    2e28:	cbnz	w23, 2df8 <boot_Time__Piece@@Base+0x1b24>
    2e2c:	add	x8, x22, x11
    2e30:	sub	w9, w9, #0x1
    2e34:	cmp	w9, #0xb
    2e38:	b.hi	3088 <boot_Time__Piece@@Base+0x1db4>  // b.pmore
    2e3c:	str	w9, [x20, #16]
    2e40:	ldrb	w10, [x8]
    2e44:	cbz	x10, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2e48:	ldr	x9, [x0]
    2e4c:	ldrh	w10, [x9, x10, lsl #1]
    2e50:	tbz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2e54:	ldrb	w10, [x21]
    2e58:	cbz	w10, 3080 <boot_Time__Piece@@Base+0x1dac>
    2e5c:	and	x10, x10, #0xff
    2e60:	ldrh	w10, [x9, x10, lsl #1]
    2e64:	tbnz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2e68:	ldrb	w10, [x21, #1]!
    2e6c:	cbnz	w10, 2e5c <boot_Time__Piece@@Base+0x1b88>
    2e70:	b	3080 <boot_Time__Piece@@Base+0x1dac>
    2e74:	bl	11e0 <__errno_location@plt>
    2e78:	ldr	w24, [x0]
    2e7c:	mov	x23, x0
    2e80:	str	wzr, [x0]
    2e84:	add	x1, sp, #0x10
    2e88:	mov	w2, #0xa                   	// #10
    2e8c:	mov	x0, x22
    2e90:	bl	10f0 <strtol@plt>
    2e94:	ldr	w8, [x23]
    2e98:	cmp	w8, #0x22
    2e9c:	b.eq	30c8 <boot_Time__Piece@@Base+0x1df4>  // b.none
    2ea0:	str	x0, [sp, #8]
    2ea4:	str	w24, [x23]
    2ea8:	ldr	w8, [x19]
    2eac:	ldr	x22, [sp, #16]
    2eb0:	add	x0, sp, #0x8
    2eb4:	cmp	w8, #0x1
    2eb8:	b.ne	2f40 <boot_Time__Piece@@Base+0x1c6c>  // b.any
    2ebc:	bl	1000 <localtime@plt>
    2ec0:	b	2f44 <boot_Time__Piece@@Base+0x1c70>
    2ec4:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2ec8:	add	x1, x1, #0x8be
    2ecc:	mov	x0, x22
    2ed0:	mov	x2, x20
    2ed4:	mov	x3, x19
    2ed8:	bl	2680 <boot_Time__Piece@@Base+0x13ac>
    2edc:	mov	x22, x0
    2ee0:	cbnz	x0, 2774 <boot_Time__Piece@@Base+0x14a0>
    2ee4:	b	308c <boot_Time__Piece@@Base+0x1db8>
    2ee8:	cmp	w23, #0x2b
    2eec:	b.eq	2f58 <boot_Time__Piece@@Base+0x1c84>  // b.none
    2ef0:	cmp	w23, #0x2d
    2ef4:	b.ne	3088 <boot_Time__Piece@@Base+0x1db4>  // b.any
    2ef8:	mov	w23, #0xffffffff            	// #-1
    2efc:	b	2f5c <boot_Time__Piece@@Base+0x1c88>
    2f00:	cmp	w9, #0x3c
    2f04:	b.gt	3088 <boot_Time__Piece@@Base+0x1db4>
    2f08:	str	w9, [x20]
    2f0c:	ldrb	w10, [x8]
    2f10:	cbz	x10, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2f14:	ldr	x9, [x0]
    2f18:	ldrh	w10, [x9, x10, lsl #1]
    2f1c:	tbz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2f20:	ldrb	w10, [x21]
    2f24:	cbz	w10, 3080 <boot_Time__Piece@@Base+0x1dac>
    2f28:	and	x10, x10, #0xff
    2f2c:	ldrh	w10, [x9, x10, lsl #1]
    2f30:	tbnz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    2f34:	ldrb	w10, [x21, #1]!
    2f38:	cbnz	w10, 2f28 <boot_Time__Piece@@Base+0x1c54>
    2f3c:	b	3080 <boot_Time__Piece@@Base+0x1dac>
    2f40:	bl	1060 <gmtime@plt>
    2f44:	ldp	q0, q1, [x0]
    2f48:	ldr	w8, [x0, #32]
    2f4c:	stp	q0, q1, [x20]
    2f50:	str	w8, [x20, #32]
    2f54:	b	2774 <boot_Time__Piece@@Base+0x14a0>
    2f58:	mov	w23, #0x1                   	// #1
    2f5c:	bl	10e0 <__ctype_b_loc@plt>
    2f60:	ldr	x11, [x0]
    2f64:	mov	x10, xzr
    2f68:	mov	w9, wzr
    2f6c:	add	x8, x22, #0x5
    2f70:	add	x12, x22, #0x1
    2f74:	ldrb	w13, [x12, x10]
    2f78:	ldrh	w14, [x11, x13, lsl #1]
    2f7c:	tbz	w14, #11, 3088 <boot_Time__Piece@@Base+0x1db4>
    2f80:	mov	w14, #0xa                   	// #10
    2f84:	add	x10, x10, #0x1
    2f88:	madd	w9, w9, w14, w13
    2f8c:	cmp	x10, #0x4
    2f90:	sub	w9, w9, #0x30
    2f94:	b.ne	2f74 <boot_Time__Piece@@Base+0x1ca0>  // b.any
    2f98:	mov	w10, #0x851f                	// #34079
    2f9c:	movk	w10, #0x51eb, lsl #16
    2fa0:	smull	x10, w9, w10
    2fa4:	lsr	x11, x10, #63
    2fa8:	asr	x10, x10, #37
    2fac:	add	w10, w10, w11
    2fb0:	mov	w12, #0x64                  	// #100
    2fb4:	msub	w9, w10, w12, w9
    2fb8:	ldp	w12, w11, [x20, #4]
    2fbc:	msub	w10, w10, w23, w11
    2fc0:	str	w10, [x20, #8]
    2fc4:	mov	w10, #0x1                   	// #1
    2fc8:	msub	w9, w9, w23, w12
    2fcc:	str	w9, [x20, #4]
    2fd0:	str	w10, [x19]
    2fd4:	b	3020 <boot_Time__Piece@@Base+0x1d4c>
    2fd8:	mov	x8, x22
    2fdc:	b	2fe4 <boot_Time__Piece@@Base+0x1d10>
    2fe0:	mov	x8, x11
    2fe4:	sub	w10, w9, #0x76c
    2fe8:	cmp	w26, #0x59
    2fec:	csel	w9, w10, w9, eq  // eq = none
    2ff0:	mov	w11, #0x79                  	// #121
    2ff4:	cmp	w9, #0x45
    2ff8:	ccmp	w26, w11, #0x0, lt  // lt = tstop
    2ffc:	add	w10, w9, #0x64
    3000:	csel	w9, w10, w9, eq  // eq = none
    3004:	tbnz	w9, #31, 3088 <boot_Time__Piece@@Base+0x1db4>
    3008:	str	w9, [x20, #20]
    300c:	ldrb	w10, [x8]
    3010:	cbz	x10, 3020 <boot_Time__Piece@@Base+0x1d4c>
    3014:	ldr	x9, [x0]
    3018:	ldrh	w10, [x9, x10, lsl #1]
    301c:	tbnz	w10, #13, 3064 <boot_Time__Piece@@Base+0x1d90>
    3020:	mov	x22, x8
    3024:	b	2774 <boot_Time__Piece@@Base+0x14a0>
    3028:	mov	x22, x11
    302c:	cmp	w8, #0x13
    3030:	b.lt	3088 <boot_Time__Piece@@Base+0x1db4>  // b.tstop
    3034:	mov	w9, #0x64                  	// #100
    3038:	mul	w8, w8, w9
    303c:	sub	w8, w8, #0x76c
    3040:	str	w8, [x20, #20]
    3044:	b	2774 <boot_Time__Piece@@Base+0x14a0>
    3048:	mov	x22, x11
    304c:	sub	w8, w8, #0x1
    3050:	cmp	w8, #0x16d
    3054:	b.hi	3088 <boot_Time__Piece@@Base+0x1db4>  // b.pmore
    3058:	str	w8, [x20, #28]
    305c:	str	wzr, [x20, #12]
    3060:	b	2774 <boot_Time__Piece@@Base+0x14a0>
    3064:	ldrb	w10, [x21]
    3068:	cbz	w10, 3080 <boot_Time__Piece@@Base+0x1dac>
    306c:	and	x10, x10, #0xff
    3070:	ldrh	w10, [x9, x10, lsl #1]
    3074:	tbnz	w10, #13, 3020 <boot_Time__Piece@@Base+0x1d4c>
    3078:	ldrb	w10, [x21, #1]!
    307c:	cbnz	w10, 306c <boot_Time__Piece@@Base+0x1d98>
    3080:	mov	x22, x8
    3084:	b	308c <boot_Time__Piece@@Base+0x1db8>
    3088:	mov	x22, xzr
    308c:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    3090:	ldur	x8, [x29, #-8]
    3094:	ldr	x9, [x9, #4056]
    3098:	ldr	x9, [x9]
    309c:	cmp	x9, x8
    30a0:	b.ne	30e8 <boot_Time__Piece@@Base+0x1e14>  // b.any
    30a4:	mov	x0, x22
    30a8:	ldp	x20, x19, [sp, #112]
    30ac:	ldp	x22, x21, [sp, #96]
    30b0:	ldp	x24, x23, [sp, #80]
    30b4:	ldp	x26, x25, [sp, #64]
    30b8:	ldp	x28, x27, [sp, #48]
    30bc:	ldp	x29, x30, [sp, #32]
    30c0:	add	sp, sp, #0x80
    30c4:	ret
    30c8:	mov	x22, xzr
    30cc:	str	w24, [x23]
    30d0:	b	308c <boot_Time__Piece@@Base+0x1db8>
    30d4:	bl	11e0 <__errno_location@plt>
    30d8:	mov	w8, #0xc                   	// #12
    30dc:	mov	x22, xzr
    30e0:	str	w8, [x0]
    30e4:	b	308c <boot_Time__Piece@@Base+0x1db8>
    30e8:	bl	1070 <__stack_chk_fail@plt>
    30ec:	stp	x29, x30, [sp, #-48]!
    30f0:	stp	x20, x19, [sp, #32]
    30f4:	ldr	w9, [x2, #28]
    30f8:	str	x21, [sp, #16]
    30fc:	ldr	w11, [x2, #12]
    3100:	ldp	w10, w8, [x2, #16]
    3104:	cmp	w9, #0x0
    3108:	cset	w14, ge  // ge = tcont
    310c:	cmp	w11, #0x1
    3110:	cset	w15, lt  // lt = tstop
    3114:	cmp	w10, #0x1
    3118:	and	w14, w15, w14
    311c:	cset	w15, lt  // lt = tstop
    3120:	tst	w15, w14
    3124:	csel	w10, wzr, w10, ne  // ne = any
    3128:	mov	w12, #0xe                   	// #14
    312c:	mov	w13, #0x2                   	// #2
    3130:	mov	w14, #0x76b                 	// #1899
    3134:	csinc	w9, w11, w9, eq  // eq = none
    3138:	cmp	w10, #0x1
    313c:	mov	w11, #0x7ae1                	// #31457
    3140:	csel	w12, w13, w12, gt
    3144:	cinc	w14, w14, gt
    3148:	movk	w11, #0xae14, lsl #16
    314c:	mov	w13, #0x851f                	// #34079
    3150:	add	w10, w12, w10
    3154:	mov	w12, #0x99                  	// #153
    3158:	add	w14, w14, w8
    315c:	mov	w8, #0x6667                	// #26215
    3160:	movk	w13, #0x51eb, lsl #16
    3164:	movk	w8, #0x6666, lsl #16
    3168:	mul	w12, w10, w12
    316c:	smull	x11, w14, w11
    3170:	smull	x13, w14, w13
    3174:	smull	x8, w12, w8
    3178:	lsr	x12, x11, #63
    317c:	asr	x11, x11, #37
    3180:	add	w11, w11, w12
    3184:	lsr	x12, x13, #63
    3188:	asr	x13, x13, #39
    318c:	add	w12, w13, w12
    3190:	add	w13, w14, #0x3
    3194:	cmp	w14, #0x0
    3198:	ldr	w10, [x2]
    319c:	csel	w13, w13, w14, lt  // lt = tstop
    31a0:	mov	w15, #0x16d                 	// #365
    31a4:	add	w9, w9, w13, asr #2
    31a8:	madd	w9, w14, w15, w9
    31ac:	lsr	x13, x8, #63
    31b0:	asr	x8, x8, #33
    31b4:	add	w9, w9, w11
    31b8:	mov	x20, x2
    31bc:	mov	x19, x0
    31c0:	add	w8, w8, w13
    31c4:	cmp	w10, #0x3d
    31c8:	add	w11, w9, w12
    31cc:	mov	x29, sp
    31d0:	b.cs	31e0 <boot_Time__Piece@@Base+0x1f0c>  // b.hs, b.nlast
    31d4:	mov	w9, w10
    31d8:	mov	w10, wzr
    31dc:	b	31e8 <boot_Time__Piece@@Base+0x1f14>
    31e0:	mov	w9, wzr
    31e4:	str	wzr, [x20]
    31e8:	add	w8, w11, w8
    31ec:	ldp	w12, w11, [x20, #4]
    31f0:	mov	w13, #0x3c                  	// #60
    31f4:	madd	w10, w12, w13, w10
    31f8:	mov	w12, #0xe10                 	// #3600
    31fc:	madd	w11, w11, w12, w10
    3200:	mov	w10, #0x5180                	// #20864
    3204:	movk	w10, #0x1, lsl #16
    3208:	tbnz	w11, #31, 3228 <boot_Time__Piece@@Base+0x1f54>
    320c:	sub	w12, w10, #0x1
    3210:	cmp	w11, w12
    3214:	b.le	3244 <boot_Time__Piece@@Base+0x1f70>
    3218:	udiv	w12, w11, w10
    321c:	add	w8, w12, w8
    3220:	msub	w10, w12, w10, w11
    3224:	b	3258 <boot_Time__Piece@@Base+0x1f84>
    3228:	mov	w12, #0xae80                	// #44672
    322c:	movk	w12, #0xfffe, lsl #16
    3230:	sdiv	w13, w11, w10
    3234:	madd	w10, w13, w12, w11
    3238:	tbnz	w10, #31, 324c <boot_Time__Piece@@Base+0x1f78>
    323c:	add	w8, w13, w8
    3240:	b	3258 <boot_Time__Piece@@Base+0x1f84>
    3244:	mov	w10, w11
    3248:	b	3258 <boot_Time__Piece@@Base+0x1f84>
    324c:	sub	w10, w13, #0x1
    3250:	add	w8, w10, w8
    3254:	madd	w10, w10, w12, w11
    3258:	mov	w15, #0x6bd                 	// #1725
    325c:	sub	w11, w8, #0x7b
    3260:	movk	w15, #0x396b, lsl #16
    3264:	mov	w12, #0xb3c5                	// #46021
    3268:	smull	x15, w11, w15
    326c:	movk	w12, #0x91a2, lsl #16
    3270:	lsr	x16, x15, #32
    3274:	lsr	x15, x15, #63
    3278:	add	w15, w15, w16, asr #15
    327c:	mov	w16, #0x3ab1                	// #15025
    3280:	smull	x12, w10, w12
    3284:	movk	w16, #0x2, lsl #16
    3288:	lsr	x12, x12, #32
    328c:	msub	w11, w15, w16, w11
    3290:	mov	w16, #0x190                 	// #400
    3294:	add	w12, w12, w10
    3298:	mul	w15, w15, w16
    329c:	asr	w16, w12, #11
    32a0:	mov	w13, #0xe10                 	// #3600
    32a4:	add	w12, w16, w12, lsr #31
    32a8:	msub	w13, w12, w13, w10
    32ac:	mov	w10, #0x81fb                	// #33275
    32b0:	movk	w10, #0xe5ac, lsl #16
    32b4:	mov	w14, #0x8889                	// #34953
    32b8:	smull	x10, w11, w10
    32bc:	movk	w14, #0x8888, lsl #16
    32c0:	lsr	x10, x10, #32
    32c4:	add	w10, w10, w11
    32c8:	smull	x14, w13, w14
    32cc:	str	w12, [x20, #8]
    32d0:	asr	w12, w10, #15
    32d4:	lsr	x14, x14, #32
    32d8:	add	w12, w12, w10, lsr #31
    32dc:	mov	w10, #0x64                  	// #100
    32e0:	add	w14, w14, w13
    32e4:	madd	w15, w12, w10, w15
    32e8:	asr	w10, w14, #5
    32ec:	mov	w16, #0x3c                  	// #60
    32f0:	add	w14, w10, w14, lsr #31
    32f4:	mov	w10, #0x8eac                	// #36524
    32f8:	msub	w13, w14, w16, w13
    32fc:	mov	w16, #0xb073                	// #45171
    3300:	movk	w16, #0x166d, lsl #16
    3304:	msub	w12, w12, w10, w11
    3308:	smull	x16, w12, w16
    330c:	add	w9, w13, w9
    3310:	lsr	x13, x16, #32
    3314:	lsr	x16, x16, #63
    3318:	add	w13, w16, w13, asr #7
    331c:	stp	w9, w14, [x20]
    3320:	mov	w9, #0x5b5                 	// #1461
    3324:	msub	w12, w13, w9, w12
    3328:	mov	w9, #0xf9b1                	// #63921
    332c:	movk	w9, #0xb38c, lsl #16
    3330:	smull	x9, w12, w9
    3334:	lsr	x9, x9, #32
    3338:	add	w9, w9, w12
    333c:	add	w14, w15, w13, lsl #2
    3340:	asr	w13, w9, #8
    3344:	add	w9, w13, w9, lsr #31
    3348:	mov	w13, #0x16d                 	// #365
    334c:	msub	w13, w9, w13, w12
    3350:	add	w9, w14, w9
    3354:	cbnz	w13, 3378 <boot_Time__Piece@@Base+0x20a4>
    3358:	mov	w14, #0xc550                	// #50512
    335c:	movk	w14, #0xfffd, lsl #16
    3360:	add	w11, w11, w14
    3364:	cmp	w11, w10
    3368:	b.cc	33f0 <boot_Time__Piece@@Base+0x211c>  // b.lo, b.ul, b.last
    336c:	sub	w10, w12, #0x5b4
    3370:	cmp	w10, #0x16c
    3374:	b.ls	33f0 <boot_Time__Piece@@Base+0x211c>  // b.plast
    3378:	add	w11, w13, #0x7b
    337c:	mov	w10, #0x80d7                	// #32983
    3380:	movk	w10, #0xd62b, lsl #16
    3384:	add	w14, w11, w11, lsl #2
    3388:	smull	x10, w14, w10
    338c:	lsr	x10, x10, #32
    3390:	add	w10, w10, w14
    3394:	mov	w12, #0xfffffffe            	// #-2
    3398:	mov	w13, #0xfffffff2            	// #-14
    339c:	cmp	w14, #0x85d
    33a0:	asr	w14, w10, #7
    33a4:	csel	w12, w13, w12, gt
    33a8:	mov	w13, #0x99                  	// #153
    33ac:	add	w10, w14, w10, lsr #31
    33b0:	mov	w14, #0x6667                	// #26215
    33b4:	movk	w14, #0x6666, lsl #16
    33b8:	mul	w13, w10, w13
    33bc:	add	w10, w12, w10
    33c0:	smull	x12, w13, w14
    33c4:	lsr	x13, x12, #63
    33c8:	asr	x12, x12, #33
    33cc:	cinc	w9, w9, gt
    33d0:	add	w12, w12, w13
    33d4:	sub	w11, w11, w12
    33d8:	sub	w12, w9, #0x76c
    33dc:	str	w12, [x20, #20]
    33e0:	cbnz	w11, 3400 <boot_Time__Piece@@Base+0x212c>
    33e4:	mov	w11, #0x1f                  	// #31
    33e8:	sub	w10, w10, #0x1
    33ec:	b	3400 <boot_Time__Piece@@Base+0x212c>
    33f0:	sub	w11, w9, #0x76c
    33f4:	mov	w10, #0x1                   	// #1
    33f8:	str	w11, [x20, #20]
    33fc:	mov	w11, #0x1d                  	// #29
    3400:	str	w11, [x20, #12]
    3404:	mov	w11, #0x7ae1                	// #31457
    3408:	str	w10, [x20, #16]
    340c:	sub	w10, w9, #0x1
    3410:	movk	w11, #0xae14, lsl #16
    3414:	mov	w13, #0x851f                	// #34079
    3418:	movk	w13, #0x51eb, lsl #16
    341c:	smull	x11, w10, w11
    3420:	add	w9, w9, #0x2
    3424:	smull	x13, w10, w13
    3428:	lsr	x14, x11, #32
    342c:	lsr	x11, x11, #63
    3430:	cmp	w10, #0x0
    3434:	add	w11, w11, w14, asr #7
    3438:	lsr	x14, x13, #32
    343c:	lsr	x13, x13, #63
    3440:	csel	w9, w9, w10, lt  // lt = tstop
    3444:	add	w13, w13, w14, asr #5
    3448:	add	w14, w8, #0x6
    344c:	sub	w8, w8, w9, asr #2
    3450:	mov	w9, #0x2493                	// #9363
    3454:	movk	w9, #0x9249, lsl #16
    3458:	smull	x9, w14, w9
    345c:	lsr	x9, x9, #32
    3460:	mov	w12, #0xfffffe93            	// #-365
    3464:	add	w9, w9, w14
    3468:	madd	w8, w10, w12, w8
    346c:	asr	w10, w9, #2
    3470:	add	w8, w8, w13
    3474:	add	w9, w10, w9, lsr #31
    3478:	add	w8, w8, w11
    347c:	sub	w9, w9, w9, lsl #3
    3480:	sub	w8, w8, #0x1ad
    3484:	add	w9, w14, w9
    3488:	stp	w9, w8, [x20, #24]
    348c:	ldr	x8, [x19, #32]
    3490:	sub	x8, x8, x1
    3494:	cmp	x8, #0x57
    3498:	b.le	3500 <boot_Time__Piece@@Base+0x222c>
    349c:	mov	x0, x19
    34a0:	mov	x2, x20
    34a4:	bl	3518 <boot_Time__Piece@@Base+0x2244>
    34a8:	mov	x20, x0
    34ac:	mov	x0, x19
    34b0:	mov	x1, xzr
    34b4:	bl	11d0 <Perl_newSViv@plt>
    34b8:	str	x0, [x20, #8]
    34bc:	mov	x0, x19
    34c0:	mov	x1, xzr
    34c4:	bl	11d0 <Perl_newSViv@plt>
    34c8:	str	x0, [x20, #16]!
    34cc:	mov	x21, xzr
    34d0:	str	x20, [x19]
    34d4:	sub	x20, x20, #0x50
    34d8:	ldr	x1, [x20, x21]
    34dc:	mov	x0, x19
    34e0:	bl	1140 <Perl_sv_2mortal@plt>
    34e4:	add	x21, x21, #0x8
    34e8:	cmp	x21, #0x58
    34ec:	b.ne	34d8 <boot_Time__Piece@@Base+0x2204>  // b.any
    34f0:	ldp	x20, x19, [sp, #32]
    34f4:	ldr	x21, [sp, #16]
    34f8:	ldp	x29, x30, [sp], #48
    34fc:	ret
    3500:	mov	w3, #0xb                   	// #11
    3504:	mov	x0, x19
    3508:	mov	x2, x1
    350c:	bl	fb0 <Perl_stack_grow@plt>
    3510:	mov	x1, x0
    3514:	b	349c <boot_Time__Piece@@Base+0x21c8>
    3518:	stp	x29, x30, [sp, #-48]!
    351c:	stp	x20, x19, [sp, #32]
    3520:	mov	x19, x1
    3524:	ldrsw	x1, [x2]
    3528:	str	x21, [sp, #16]
    352c:	mov	x29, sp
    3530:	mov	x20, x2
    3534:	mov	x21, x0
    3538:	bl	11d0 <Perl_newSViv@plt>
    353c:	str	x0, [x19, #8]
    3540:	ldrsw	x1, [x20, #4]
    3544:	mov	x0, x21
    3548:	bl	11d0 <Perl_newSViv@plt>
    354c:	str	x0, [x19, #16]
    3550:	ldrsw	x1, [x20, #8]
    3554:	mov	x0, x21
    3558:	bl	11d0 <Perl_newSViv@plt>
    355c:	str	x0, [x19, #24]
    3560:	ldrsw	x1, [x20, #12]
    3564:	mov	x0, x21
    3568:	bl	11d0 <Perl_newSViv@plt>
    356c:	str	x0, [x19, #32]
    3570:	ldrsw	x1, [x20, #16]
    3574:	mov	x0, x21
    3578:	bl	11d0 <Perl_newSViv@plt>
    357c:	str	x0, [x19, #40]
    3580:	ldrsw	x1, [x20, #20]
    3584:	mov	x0, x21
    3588:	bl	11d0 <Perl_newSViv@plt>
    358c:	str	x0, [x19, #48]
    3590:	ldrsw	x1, [x20, #24]
    3594:	mov	x0, x21
    3598:	bl	11d0 <Perl_newSViv@plt>
    359c:	str	x0, [x19, #56]
    35a0:	ldrsw	x1, [x20, #28]
    35a4:	mov	x0, x21
    35a8:	bl	11d0 <Perl_newSViv@plt>
    35ac:	str	x0, [x19, #64]
    35b0:	ldrsw	x1, [x20, #32]
    35b4:	mov	x0, x21
    35b8:	bl	11d0 <Perl_newSViv@plt>
    35bc:	str	x0, [x19, #72]!
    35c0:	mov	x0, x19
    35c4:	ldp	x20, x19, [sp, #32]
    35c8:	ldr	x21, [sp, #16]
    35cc:	ldp	x29, x30, [sp], #48
    35d0:	ret

Disassembly of section .fini:

00000000000035d4 <.fini>:
    35d4:	stp	x29, x30, [sp, #-16]!
    35d8:	mov	x29, sp
    35dc:	ldp	x29, x30, [sp], #16
    35e0:	ret
