
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//column_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402240 <.init>:
  402240:	stp	x29, x30, [sp, #-16]!
  402244:	mov	x29, sp
  402248:	bl	403764 <scols_reset_iter@plt+0xe84>
  40224c:	ldp	x29, x30, [sp], #16
  402250:	ret

Disassembly of section .plt:

0000000000402260 <mbrtowc@plt-0x20>:
  402260:	stp	x16, x30, [sp, #-16]!
  402264:	adrp	x16, 419000 <scols_reset_iter@plt+0x16720>
  402268:	ldr	x17, [x16, #4088]
  40226c:	add	x16, x16, #0xff8
  402270:	br	x17
  402274:	nop
  402278:	nop
  40227c:	nop

0000000000402280 <mbrtowc@plt>:
  402280:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402284:	ldr	x17, [x16]
  402288:	add	x16, x16, #0x0
  40228c:	br	x17

0000000000402290 <memcpy@plt>:
  402290:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402294:	ldr	x17, [x16, #8]
  402298:	add	x16, x16, #0x8
  40229c:	br	x17

00000000004022a0 <_exit@plt>:
  4022a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4022a4:	ldr	x17, [x16, #16]
  4022a8:	add	x16, x16, #0x10
  4022ac:	br	x17

00000000004022b0 <strtoul@plt>:
  4022b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4022b4:	ldr	x17, [x16, #24]
  4022b8:	add	x16, x16, #0x18
  4022bc:	br	x17

00000000004022c0 <strlen@plt>:
  4022c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4022c4:	ldr	x17, [x16, #32]
  4022c8:	add	x16, x16, #0x20
  4022cc:	br	x17

00000000004022d0 <fputs@plt>:
  4022d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4022d4:	ldr	x17, [x16, #40]
  4022d8:	add	x16, x16, #0x28
  4022dc:	br	x17

00000000004022e0 <mbstowcs@plt>:
  4022e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4022e4:	ldr	x17, [x16, #48]
  4022e8:	add	x16, x16, #0x30
  4022ec:	br	x17

00000000004022f0 <exit@plt>:
  4022f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4022f4:	ldr	x17, [x16, #56]
  4022f8:	add	x16, x16, #0x38
  4022fc:	br	x17

0000000000402300 <dup@plt>:
  402300:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402304:	ldr	x17, [x16, #64]
  402308:	add	x16, x16, #0x40
  40230c:	br	x17

0000000000402310 <scols_line_refer_data@plt>:
  402310:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402314:	ldr	x17, [x16, #72]
  402318:	add	x16, x16, #0x48
  40231c:	br	x17

0000000000402320 <strtoimax@plt>:
  402320:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402324:	ldr	x17, [x16, #80]
  402328:	add	x16, x16, #0x50
  40232c:	br	x17

0000000000402330 <scols_line_get_column_cell@plt>:
  402330:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402334:	ldr	x17, [x16, #88]
  402338:	add	x16, x16, #0x58
  40233c:	br	x17

0000000000402340 <scols_table_set_name@plt>:
  402340:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402344:	ldr	x17, [x16, #96]
  402348:	add	x16, x16, #0x60
  40234c:	br	x17

0000000000402350 <strtod@plt>:
  402350:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402354:	ldr	x17, [x16, #104]
  402358:	add	x16, x16, #0x68
  40235c:	br	x17

0000000000402360 <scols_table_enable_noheadings@plt>:
  402360:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402364:	ldr	x17, [x16, #112]
  402368:	add	x16, x16, #0x70
  40236c:	br	x17

0000000000402370 <scols_column_get_header@plt>:
  402370:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402374:	ldr	x17, [x16, #120]
  402378:	add	x16, x16, #0x78
  40237c:	br	x17

0000000000402380 <scols_table_new_column@plt>:
  402380:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402384:	ldr	x17, [x16, #128]
  402388:	add	x16, x16, #0x80
  40238c:	br	x17

0000000000402390 <scols_free_iter@plt>:
  402390:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402394:	ldr	x17, [x16, #136]
  402398:	add	x16, x16, #0x88
  40239c:	br	x17

00000000004023a0 <ttyname@plt>:
  4023a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4023a4:	ldr	x17, [x16, #144]
  4023a8:	add	x16, x16, #0x90
  4023ac:	br	x17

00000000004023b0 <sprintf@plt>:
  4023b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4023b4:	ldr	x17, [x16, #152]
  4023b8:	add	x16, x16, #0x98
  4023bc:	br	x17

00000000004023c0 <__cxa_atexit@plt>:
  4023c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4023c4:	ldr	x17, [x16, #160]
  4023c8:	add	x16, x16, #0xa0
  4023cc:	br	x17

00000000004023d0 <fputc@plt>:
  4023d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4023d4:	ldr	x17, [x16, #168]
  4023d8:	add	x16, x16, #0xa8
  4023dc:	br	x17

00000000004023e0 <putwchar@plt>:
  4023e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4023e4:	ldr	x17, [x16, #176]
  4023e8:	add	x16, x16, #0xb0
  4023ec:	br	x17

00000000004023f0 <scols_table_set_column_separator@plt>:
  4023f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4023f4:	ldr	x17, [x16, #184]
  4023f8:	add	x16, x16, #0xb8
  4023fc:	br	x17

0000000000402400 <snprintf@plt>:
  402400:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402404:	ldr	x17, [x16, #192]
  402408:	add	x16, x16, #0xc0
  40240c:	br	x17

0000000000402410 <localeconv@plt>:
  402410:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402414:	ldr	x17, [x16, #200]
  402418:	add	x16, x16, #0xc8
  40241c:	br	x17

0000000000402420 <stpcpy@plt>:
  402420:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402424:	ldr	x17, [x16, #208]
  402428:	add	x16, x16, #0xd0
  40242c:	br	x17

0000000000402430 <fileno@plt>:
  402430:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402434:	ldr	x17, [x16, #216]
  402438:	add	x16, x16, #0xd8
  40243c:	br	x17

0000000000402440 <wcspbrk@plt>:
  402440:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402444:	ldr	x17, [x16, #224]
  402448:	add	x16, x16, #0xe0
  40244c:	br	x17

0000000000402450 <fclose@plt>:
  402450:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402454:	ldr	x17, [x16, #232]
  402458:	add	x16, x16, #0xe8
  40245c:	br	x17

0000000000402460 <fopen@plt>:
  402460:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402464:	ldr	x17, [x16, #240]
  402468:	add	x16, x16, #0xf0
  40246c:	br	x17

0000000000402470 <malloc@plt>:
  402470:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402474:	ldr	x17, [x16, #248]
  402478:	add	x16, x16, #0xf8
  40247c:	br	x17

0000000000402480 <wcwidth@plt>:
  402480:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402484:	ldr	x17, [x16, #256]
  402488:	add	x16, x16, #0x100
  40248c:	br	x17

0000000000402490 <scols_column_get_flags@plt>:
  402490:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402494:	ldr	x17, [x16, #264]
  402498:	add	x16, x16, #0x108
  40249c:	br	x17

00000000004024a0 <strncmp@plt>:
  4024a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4024a4:	ldr	x17, [x16, #272]
  4024a8:	add	x16, x16, #0x110
  4024ac:	br	x17

00000000004024b0 <bindtextdomain@plt>:
  4024b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4024b4:	ldr	x17, [x16, #280]
  4024b8:	add	x16, x16, #0x118
  4024bc:	br	x17

00000000004024c0 <__libc_start_main@plt>:
  4024c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4024c4:	ldr	x17, [x16, #288]
  4024c8:	add	x16, x16, #0x120
  4024cc:	br	x17

00000000004024d0 <fgetc@plt>:
  4024d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4024d4:	ldr	x17, [x16, #296]
  4024d8:	add	x16, x16, #0x128
  4024dc:	br	x17

00000000004024e0 <scols_table_get_column@plt>:
  4024e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4024e4:	ldr	x17, [x16, #304]
  4024e8:	add	x16, x16, #0x130
  4024ec:	br	x17

00000000004024f0 <memset@plt>:
  4024f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4024f4:	ldr	x17, [x16, #312]
  4024f8:	add	x16, x16, #0x138
  4024fc:	br	x17

0000000000402500 <scols_new_table@plt>:
  402500:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402504:	ldr	x17, [x16, #320]
  402508:	add	x16, x16, #0x140
  40250c:	br	x17

0000000000402510 <scols_column_set_flags@plt>:
  402510:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402514:	ldr	x17, [x16, #328]
  402518:	add	x16, x16, #0x148
  40251c:	br	x17

0000000000402520 <calloc@plt>:
  402520:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402524:	ldr	x17, [x16, #336]
  402528:	add	x16, x16, #0x150
  40252c:	br	x17

0000000000402530 <strcasecmp@plt>:
  402530:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402534:	ldr	x17, [x16, #344]
  402538:	add	x16, x16, #0x158
  40253c:	br	x17

0000000000402540 <realloc@plt>:
  402540:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402544:	ldr	x17, [x16, #352]
  402548:	add	x16, x16, #0x160
  40254c:	br	x17

0000000000402550 <strdup@plt>:
  402550:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402554:	ldr	x17, [x16, #360]
  402558:	add	x16, x16, #0x168
  40255c:	br	x17

0000000000402560 <scols_table_new_line@plt>:
  402560:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402564:	ldr	x17, [x16, #368]
  402568:	add	x16, x16, #0x170
  40256c:	br	x17

0000000000402570 <wcstok@plt>:
  402570:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402574:	ldr	x17, [x16, #376]
  402578:	add	x16, x16, #0x178
  40257c:	br	x17

0000000000402580 <close@plt>:
  402580:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402584:	ldr	x17, [x16, #384]
  402588:	add	x16, x16, #0x180
  40258c:	br	x17

0000000000402590 <scols_table_is_json@plt>:
  402590:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402594:	ldr	x17, [x16, #392]
  402598:	add	x16, x16, #0x188
  40259c:	br	x17

00000000004025a0 <__gmon_start__@plt>:
  4025a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4025a4:	ldr	x17, [x16, #400]
  4025a8:	add	x16, x16, #0x190
  4025ac:	br	x17

00000000004025b0 <strtoumax@plt>:
  4025b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4025b4:	ldr	x17, [x16, #408]
  4025b8:	add	x16, x16, #0x198
  4025bc:	br	x17

00000000004025c0 <abort@plt>:
  4025c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4025c4:	ldr	x17, [x16, #416]
  4025c8:	add	x16, x16, #0x1a0
  4025cc:	br	x17

00000000004025d0 <scols_table_set_termforce@plt>:
  4025d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4025d4:	ldr	x17, [x16, #424]
  4025d8:	add	x16, x16, #0x1a8
  4025dc:	br	x17

00000000004025e0 <scols_table_get_ncols@plt>:
  4025e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4025e4:	ldr	x17, [x16, #432]
  4025e8:	add	x16, x16, #0x1b0
  4025ec:	br	x17

00000000004025f0 <scols_table_enable_header_repeat@plt>:
  4025f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4025f4:	ldr	x17, [x16, #440]
  4025f8:	add	x16, x16, #0x1b8
  4025fc:	br	x17

0000000000402600 <scols_table_next_line@plt>:
  402600:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402604:	ldr	x17, [x16, #448]
  402608:	add	x16, x16, #0x1c0
  40260c:	br	x17

0000000000402610 <feof@plt>:
  402610:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402614:	ldr	x17, [x16, #456]
  402618:	add	x16, x16, #0x1c8
  40261c:	br	x17

0000000000402620 <textdomain@plt>:
  402620:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402624:	ldr	x17, [x16, #464]
  402628:	add	x16, x16, #0x1d0
  40262c:	br	x17

0000000000402630 <getopt_long@plt>:
  402630:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402634:	ldr	x17, [x16, #472]
  402638:	add	x16, x16, #0x1d8
  40263c:	br	x17

0000000000402640 <strcmp@plt>:
  402640:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402644:	ldr	x17, [x16, #480]
  402648:	add	x16, x16, #0x1e0
  40264c:	br	x17

0000000000402650 <warn@plt>:
  402650:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402654:	ldr	x17, [x16, #488]
  402658:	add	x16, x16, #0x1e8
  40265c:	br	x17

0000000000402660 <__ctype_b_loc@plt>:
  402660:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402664:	ldr	x17, [x16, #496]
  402668:	add	x16, x16, #0x1f0
  40266c:	br	x17

0000000000402670 <strtol@plt>:
  402670:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402674:	ldr	x17, [x16, #504]
  402678:	add	x16, x16, #0x1f8
  40267c:	br	x17

0000000000402680 <scols_table_next_column@plt>:
  402680:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402684:	ldr	x17, [x16, #512]
  402688:	add	x16, x16, #0x200
  40268c:	br	x17

0000000000402690 <getline@plt>:
  402690:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402694:	ldr	x17, [x16, #520]
  402698:	add	x16, x16, #0x208
  40269c:	br	x17

00000000004026a0 <scols_cell_get_data@plt>:
  4026a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4026a4:	ldr	x17, [x16, #528]
  4026a8:	add	x16, x16, #0x210
  4026ac:	br	x17

00000000004026b0 <free@plt>:
  4026b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4026b4:	ldr	x17, [x16, #536]
  4026b8:	add	x16, x16, #0x218
  4026bc:	br	x17

00000000004026c0 <scols_line_is_ancestor@plt>:
  4026c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4026c4:	ldr	x17, [x16, #544]
  4026c8:	add	x16, x16, #0x220
  4026cc:	br	x17

00000000004026d0 <__ctype_get_mb_cur_max@plt>:
  4026d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4026d4:	ldr	x17, [x16, #552]
  4026d8:	add	x16, x16, #0x228
  4026dc:	br	x17

00000000004026e0 <mempcpy@plt>:
  4026e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4026e4:	ldr	x17, [x16, #560]
  4026e8:	add	x16, x16, #0x230
  4026ec:	br	x17

00000000004026f0 <scols_table_get_nlines@plt>:
  4026f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4026f4:	ldr	x17, [x16, #568]
  4026f8:	add	x16, x16, #0x238
  4026fc:	br	x17

0000000000402700 <scols_table_enable_json@plt>:
  402700:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402704:	ldr	x17, [x16, #576]
  402708:	add	x16, x16, #0x240
  40270c:	br	x17

0000000000402710 <vasprintf@plt>:
  402710:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402714:	ldr	x17, [x16, #584]
  402718:	add	x16, x16, #0x248
  40271c:	br	x17

0000000000402720 <scols_table_move_column@plt>:
  402720:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402724:	ldr	x17, [x16, #592]
  402728:	add	x16, x16, #0x250
  40272c:	br	x17

0000000000402730 <scols_table_set_termwidth@plt>:
  402730:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402734:	ldr	x17, [x16, #600]
  402738:	add	x16, x16, #0x258
  40273c:	br	x17

0000000000402740 <strndup@plt>:
  402740:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402744:	ldr	x17, [x16, #608]
  402748:	add	x16, x16, #0x260
  40274c:	br	x17

0000000000402750 <strspn@plt>:
  402750:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402754:	ldr	x17, [x16, #616]
  402758:	add	x16, x16, #0x268
  40275c:	br	x17

0000000000402760 <strchr@plt>:
  402760:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402764:	ldr	x17, [x16, #624]
  402768:	add	x16, x16, #0x270
  40276c:	br	x17

0000000000402770 <fflush@plt>:
  402770:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402774:	ldr	x17, [x16, #632]
  402778:	add	x16, x16, #0x278
  40277c:	br	x17

0000000000402780 <scols_print_table@plt>:
  402780:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402784:	ldr	x17, [x16, #640]
  402788:	add	x16, x16, #0x280
  40278c:	br	x17

0000000000402790 <warnx@plt>:
  402790:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402794:	ldr	x17, [x16, #648]
  402798:	add	x16, x16, #0x288
  40279c:	br	x17

00000000004027a0 <isatty@plt>:
  4027a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4027a4:	ldr	x17, [x16, #656]
  4027a8:	add	x16, x16, #0x290
  4027ac:	br	x17

00000000004027b0 <wcstombs@plt>:
  4027b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4027b4:	ldr	x17, [x16, #664]
  4027b8:	add	x16, x16, #0x298
  4027bc:	br	x17

00000000004027c0 <fputws@plt>:
  4027c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4027c4:	ldr	x17, [x16, #672]
  4027c8:	add	x16, x16, #0x2a0
  4027cc:	br	x17

00000000004027d0 <scols_new_iter@plt>:
  4027d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4027d4:	ldr	x17, [x16, #680]
  4027d8:	add	x16, x16, #0x2a8
  4027dc:	br	x17

00000000004027e0 <dcgettext@plt>:
  4027e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4027e4:	ldr	x17, [x16, #688]
  4027e8:	add	x16, x16, #0x2b0
  4027ec:	br	x17

00000000004027f0 <scols_line_add_child@plt>:
  4027f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4027f4:	ldr	x17, [x16, #696]
  4027f8:	add	x16, x16, #0x2b8
  4027fc:	br	x17

0000000000402800 <errx@plt>:
  402800:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402804:	ldr	x17, [x16, #704]
  402808:	add	x16, x16, #0x2c0
  40280c:	br	x17

0000000000402810 <iswprint@plt>:
  402810:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402814:	ldr	x17, [x16, #712]
  402818:	add	x16, x16, #0x2c8
  40281c:	br	x17

0000000000402820 <strcspn@plt>:
  402820:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402824:	ldr	x17, [x16, #720]
  402828:	add	x16, x16, #0x2d0
  40282c:	br	x17

0000000000402830 <printf@plt>:
  402830:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402834:	ldr	x17, [x16, #728]
  402838:	add	x16, x16, #0x2d8
  40283c:	br	x17

0000000000402840 <__assert_fail@plt>:
  402840:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402844:	ldr	x17, [x16, #736]
  402848:	add	x16, x16, #0x2e0
  40284c:	br	x17

0000000000402850 <__errno_location@plt>:
  402850:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402854:	ldr	x17, [x16, #744]
  402858:	add	x16, x16, #0x2e8
  40285c:	br	x17

0000000000402860 <getenv@plt>:
  402860:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402864:	ldr	x17, [x16, #752]
  402868:	add	x16, x16, #0x2f0
  40286c:	br	x17

0000000000402870 <scols_table_enable_noencoding@plt>:
  402870:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402874:	ldr	x17, [x16, #760]
  402878:	add	x16, x16, #0x2f8
  40287c:	br	x17

0000000000402880 <fprintf@plt>:
  402880:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402884:	ldr	x17, [x16, #768]
  402888:	add	x16, x16, #0x300
  40288c:	br	x17

0000000000402890 <scols_init_debug@plt>:
  402890:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  402894:	ldr	x17, [x16, #776]
  402898:	add	x16, x16, #0x308
  40289c:	br	x17

00000000004028a0 <err@plt>:
  4028a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4028a4:	ldr	x17, [x16, #784]
  4028a8:	add	x16, x16, #0x310
  4028ac:	br	x17

00000000004028b0 <ioctl@plt>:
  4028b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4028b4:	ldr	x17, [x16, #792]
  4028b8:	add	x16, x16, #0x318
  4028bc:	br	x17

00000000004028c0 <setlocale@plt>:
  4028c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4028c4:	ldr	x17, [x16, #800]
  4028c8:	add	x16, x16, #0x320
  4028cc:	br	x17

00000000004028d0 <ferror@plt>:
  4028d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4028d4:	ldr	x17, [x16, #808]
  4028d8:	add	x16, x16, #0x328
  4028dc:	br	x17

00000000004028e0 <scols_reset_iter@plt>:
  4028e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17720>
  4028e4:	ldr	x17, [x16, #816]
  4028e8:	add	x16, x16, #0x330
  4028ec:	br	x17

Disassembly of section .text:

00000000004028f0 <.text>:
  4028f0:	stp	x29, x30, [sp, #-288]!
  4028f4:	mov	x2, #0xa0                  	// #160
  4028f8:	mov	x29, sp
  4028fc:	stp	x19, x20, [sp, #16]
  402900:	mov	w19, w0
  402904:	add	x0, sp, #0x80
  402908:	stp	x21, x22, [sp, #32]
  40290c:	mov	x22, x1
  402910:	mov	w1, #0x0                   	// #0
  402914:	stp	x23, x24, [sp, #48]
  402918:	adrp	x20, 407000 <scols_reset_iter@plt+0x4720>
  40291c:	add	x20, x20, #0x50
  402920:	stp	x25, x26, [sp, #64]
  402924:	adrp	x21, 407000 <scols_reset_iter@plt+0x4720>
  402928:	adrp	x23, 407000 <scols_reset_iter@plt+0x4720>
  40292c:	stp	x27, x28, [sp, #80]
  402930:	bl	4024f0 <memset@plt>
  402934:	mov	x0, #0xffffffffffffffff    	// #-1
  402938:	str	x0, [sp, #136]
  40293c:	mov	w0, #0x1                   	// #1
  402940:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402944:	add	x1, x1, #0x5eb
  402948:	str	xzr, [sp, #112]
  40294c:	adrp	x24, 407000 <scols_reset_iter@plt+0x4720>
  402950:	str	wzr, [sp, #120]
  402954:	add	x21, x21, #0xa08
  402958:	strb	w0, [sp, #280]
  40295c:	mov	w0, #0x6                   	// #6
  402960:	bl	4028c0 <setlocale@plt>
  402964:	add	x23, x23, #0x71d
  402968:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  40296c:	add	x1, x1, #0x3e
  402970:	mov	x0, x20
  402974:	bl	4024b0 <bindtextdomain@plt>
  402978:	mov	x0, x20
  40297c:	add	x24, x24, #0x998
  402980:	bl	402620 <textdomain@plt>
  402984:	mov	w25, #0x1                   	// #1
  402988:	adrp	x0, 403000 <scols_reset_iter@plt+0x720>
  40298c:	add	x0, x0, #0x8ac
  402990:	bl	406eb0 <scols_reset_iter@plt+0x45d0>
  402994:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  402998:	add	x0, x0, #0x5b
  40299c:	str	x0, [sp, #248]
  4029a0:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  4029a4:	add	x0, x0, #0x5e
  4029a8:	bl	403960 <scols_reset_iter@plt+0x1080>
  4029ac:	str	x0, [sp, #240]
  4029b0:	mov	x3, x21
  4029b4:	mov	x2, x23
  4029b8:	mov	x1, x22
  4029bc:	mov	w0, w19
  4029c0:	mov	x4, #0x0                   	// #0
  4029c4:	bl	402630 <getopt_long@plt>
  4029c8:	cmn	w0, #0x1
  4029cc:	b.eq	40302c <scols_reset_iter@plt+0x74c>  // b.none
  4029d0:	add	x20, x21, #0x300
  4029d4:	add	x1, sp, #0x70
  4029d8:	b	402a0c <scols_reset_iter@plt+0x12c>
  4029dc:	b.eq	4029f8 <scols_reset_iter@plt+0x118>  // b.none
  4029e0:	add	x2, x2, #0x4
  4029e4:	ldr	w3, [x2]
  4029e8:	cbz	w3, 402a04 <scols_reset_iter@plt+0x124>
  4029ec:	cmp	w0, w3
  4029f0:	b.ge	4029dc <scols_reset_iter@plt+0xfc>  // b.tcont
  4029f4:	b	402a04 <scols_reset_iter@plt+0x124>
  4029f8:	ldr	w2, [x1]
  4029fc:	cbnz	w2, 402a38 <scols_reset_iter@plt+0x158>
  402a00:	str	w0, [x1]
  402a04:	add	x20, x20, #0x40
  402a08:	add	x1, x1, #0x4
  402a0c:	ldr	w2, [x20]
  402a10:	cbz	w2, 402a1c <scols_reset_iter@plt+0x13c>
  402a14:	cmp	w0, w2
  402a18:	b.ge	402ae8 <scols_reset_iter@plt+0x208>  // b.tcont
  402a1c:	sub	w2, w0, #0x45
  402a20:	cmp	w2, #0x33
  402a24:	b.hi	402ff8 <scols_reset_iter@plt+0x718>  // b.pmore
  402a28:	ldrh	w0, [x24, w2, uxtw #1]
  402a2c:	adr	x1, 402a38 <scols_reset_iter@plt+0x158>
  402a30:	add	x0, x1, w0, sxth #2
  402a34:	br	x0
  402a38:	cmp	w0, w2
  402a3c:	b.eq	402a04 <scols_reset_iter@plt+0x124>  // b.none
  402a40:	adrp	x19, 41a000 <scols_reset_iter@plt+0x17720>
  402a44:	mov	w2, #0x5                   	// #5
  402a48:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402a4c:	mov	x0, #0x0                   	// #0
  402a50:	ldr	x22, [x19, #848]
  402a54:	add	x1, x1, #0x61
  402a58:	bl	4027e0 <dcgettext@plt>
  402a5c:	adrp	x24, 407000 <scols_reset_iter@plt+0x4720>
  402a60:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17720>
  402a64:	adrp	x23, 407000 <scols_reset_iter@plt+0x4720>
  402a68:	add	x24, x24, #0x83
  402a6c:	add	x23, x23, #0x8b0
  402a70:	ldr	x2, [x1, #888]
  402a74:	mov	x1, x0
  402a78:	mov	x0, x22
  402a7c:	mov	x22, #0x0                   	// #0
  402a80:	bl	402880 <fprintf@plt>
  402a84:	ldr	w0, [x20, x22]
  402a88:	cbz	w0, 402ad4 <scols_reset_iter@plt+0x1f4>
  402a8c:	mov	x1, x21
  402a90:	b	402aa4 <scols_reset_iter@plt+0x1c4>
  402a94:	ldr	w3, [x1, #24]
  402a98:	cmp	w0, w3
  402a9c:	b.eq	403704 <scols_reset_iter@plt+0xe24>  // b.none
  402aa0:	add	x1, x1, #0x20
  402aa4:	ldr	x2, [x1]
  402aa8:	cbnz	x2, 402a94 <scols_reset_iter@plt+0x1b4>
  402aac:	sub	w1, w0, #0x21
  402ab0:	cmp	w1, #0x5d
  402ab4:	b.hi	402ac8 <scols_reset_iter@plt+0x1e8>  // b.pmore
  402ab8:	mov	w2, w0
  402abc:	mov	x1, x24
  402ac0:	ldr	x0, [x19, #848]
  402ac4:	bl	402880 <fprintf@plt>
  402ac8:	add	x22, x22, #0x4
  402acc:	cmp	x22, #0x3c
  402ad0:	b.ne	402a84 <scols_reset_iter@plt+0x1a4>  // b.any
  402ad4:	ldr	x1, [x19, #848]
  402ad8:	mov	w0, #0xa                   	// #10
  402adc:	bl	4023d0 <fputc@plt>
  402ae0:	mov	w0, #0x1                   	// #1
  402ae4:	b	402fc8 <scols_reset_iter@plt+0x6e8>
  402ae8:	mov	x2, x20
  402aec:	b	4029e4 <scols_reset_iter@plt+0x104>
  402af0:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402af4:	mov	w2, #0x5                   	// #5
  402af8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402afc:	add	x1, x1, #0x88
  402b00:	ldr	x20, [x0, #856]
  402b04:	mov	x0, #0x0                   	// #0
  402b08:	bl	4027e0 <dcgettext@plt>
  402b0c:	mov	x1, x0
  402b10:	mov	x0, x20
  402b14:	bl	4052e4 <scols_reset_iter@plt+0x2a04>
  402b18:	mov	w0, w0
  402b1c:	str	x0, [sp, #136]
  402b20:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402b24:	ldrb	w0, [sp, #280]
  402b28:	orr	w0, w0, #0x10
  402b2c:	strb	w0, [sp, #280]
  402b30:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402b34:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402b38:	ldr	x0, [x0, #856]
  402b3c:	str	x0, [sp, #192]
  402b40:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402b44:	ldrb	w0, [sp, #280]
  402b48:	orr	w0, w0, #0x4
  402b4c:	b	402b2c <scols_reset_iter@plt+0x24c>
  402b50:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402b54:	ldr	x0, [x0, #856]
  402b58:	str	x0, [sp, #208]
  402b5c:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402b60:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402b64:	ldr	x0, [x0, #856]
  402b68:	str	x0, [sp, #224]
  402b6c:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402b70:	ldrb	w0, [sp, #280]
  402b74:	orr	w0, w0, #0x2
  402b78:	strb	w0, [sp, #280]
  402b7c:	mov	w0, #0x2                   	// #2
  402b80:	str	w0, [sp, #128]
  402b84:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402b88:	ldrb	w0, [sp, #280]
  402b8c:	orr	w0, w0, #0x8
  402b90:	b	402b2c <scols_reset_iter@plt+0x24c>
  402b94:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402b98:	mov	w2, #0x5                   	// #5
  402b9c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402ba0:	add	x1, x1, #0xa1
  402ba4:	ldr	x20, [x0, #856]
  402ba8:	mov	x0, #0x0                   	// #0
  402bac:	bl	4027e0 <dcgettext@plt>
  402bb0:	mov	x1, x0
  402bb4:	mov	x0, x20
  402bb8:	bl	403f48 <scols_reset_iter@plt+0x1668>
  402bbc:	str	x0, [sp, #152]
  402bc0:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402bc4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402bc8:	ldr	x0, [x0, #856]
  402bcc:	str	x0, [sp, #160]
  402bd0:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402bd4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402bd8:	ldr	x0, [x0, #856]
  402bdc:	str	x0, [sp, #168]
  402be0:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402be4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402be8:	ldr	x0, [x0, #856]
  402bec:	str	x0, [sp, #248]
  402bf0:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402bf4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402bf8:	ldr	x0, [x0, #856]
  402bfc:	str	x0, [sp, #232]
  402c00:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402c04:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402c08:	ldr	x0, [x0, #856]
  402c0c:	str	x0, [sp, #176]
  402c10:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402c14:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402c18:	ldr	x0, [x0, #856]
  402c1c:	str	x0, [sp, #216]
  402c20:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402c24:	ldr	x0, [sp, #240]
  402c28:	bl	4026b0 <free@plt>
  402c2c:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402c30:	ldr	x0, [x0, #856]
  402c34:	bl	403960 <scols_reset_iter@plt+0x1080>
  402c38:	str	x0, [sp, #240]
  402c3c:	ldrb	w0, [sp, #280]
  402c40:	and	w0, w0, #0xfffffffe
  402c44:	b	402b2c <scols_reset_iter@plt+0x24c>
  402c48:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402c4c:	ldr	x0, [x0, #856]
  402c50:	str	x0, [sp, #184]
  402c54:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402c58:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402c5c:	ldr	x0, [x0, #856]
  402c60:	str	x0, [sp, #200]
  402c64:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402c68:	str	w25, [sp, #128]
  402c6c:	b	4029b0 <scols_reset_iter@plt+0xd0>
  402c70:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402c74:	mov	w2, #0x5                   	// #5
  402c78:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402c7c:	add	x1, x1, #0xbe
  402c80:	ldr	x19, [x0, #872]
  402c84:	mov	x0, #0x0                   	// #0
  402c88:	bl	4027e0 <dcgettext@plt>
  402c8c:	mov	x1, x19
  402c90:	bl	4022d0 <fputs@plt>
  402c94:	mov	w2, #0x5                   	// #5
  402c98:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402c9c:	mov	x0, #0x0                   	// #0
  402ca0:	add	x1, x1, #0xc7
  402ca4:	bl	4027e0 <dcgettext@plt>
  402ca8:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17720>
  402cac:	ldr	x2, [x1, #888]
  402cb0:	mov	x1, x0
  402cb4:	mov	x0, x19
  402cb8:	bl	402880 <fprintf@plt>
  402cbc:	mov	x1, x19
  402cc0:	mov	w0, #0xa                   	// #10
  402cc4:	bl	4023d0 <fputc@plt>
  402cc8:	mov	w2, #0x5                   	// #5
  402ccc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402cd0:	mov	x0, #0x0                   	// #0
  402cd4:	add	x1, x1, #0xe2
  402cd8:	bl	4027e0 <dcgettext@plt>
  402cdc:	mov	x1, x19
  402ce0:	bl	4022d0 <fputs@plt>
  402ce4:	mov	w2, #0x5                   	// #5
  402ce8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402cec:	mov	x0, #0x0                   	// #0
  402cf0:	add	x1, x1, #0xf4
  402cf4:	bl	4027e0 <dcgettext@plt>
  402cf8:	mov	x1, x19
  402cfc:	bl	4022d0 <fputs@plt>
  402d00:	mov	w2, #0x5                   	// #5
  402d04:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402d08:	mov	x0, #0x0                   	// #0
  402d0c:	add	x1, x1, #0xff
  402d10:	bl	4027e0 <dcgettext@plt>
  402d14:	mov	x1, x19
  402d18:	bl	4022d0 <fputs@plt>
  402d1c:	mov	w2, #0x5                   	// #5
  402d20:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402d24:	mov	x0, #0x0                   	// #0
  402d28:	add	x1, x1, #0x131
  402d2c:	bl	4027e0 <dcgettext@plt>
  402d30:	mov	x1, x19
  402d34:	bl	4022d0 <fputs@plt>
  402d38:	mov	w2, #0x5                   	// #5
  402d3c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402d40:	mov	x0, #0x0                   	// #0
  402d44:	add	x1, x1, #0x16f
  402d48:	bl	4027e0 <dcgettext@plt>
  402d4c:	mov	x1, x19
  402d50:	bl	4022d0 <fputs@plt>
  402d54:	mov	w2, #0x5                   	// #5
  402d58:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402d5c:	mov	x0, #0x0                   	// #0
  402d60:	add	x1, x1, #0x1b2
  402d64:	bl	4027e0 <dcgettext@plt>
  402d68:	mov	x1, x19
  402d6c:	bl	4022d0 <fputs@plt>
  402d70:	mov	w2, #0x5                   	// #5
  402d74:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402d78:	mov	x0, #0x0                   	// #0
  402d7c:	add	x1, x1, #0x1f3
  402d80:	bl	4027e0 <dcgettext@plt>
  402d84:	mov	x1, x19
  402d88:	bl	4022d0 <fputs@plt>
  402d8c:	mov	w2, #0x5                   	// #5
  402d90:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402d94:	mov	x0, #0x0                   	// #0
  402d98:	add	x1, x1, #0x24d
  402d9c:	bl	4027e0 <dcgettext@plt>
  402da0:	mov	x1, x19
  402da4:	bl	4022d0 <fputs@plt>
  402da8:	mov	w2, #0x5                   	// #5
  402dac:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402db0:	mov	x0, #0x0                   	// #0
  402db4:	add	x1, x1, #0x283
  402db8:	bl	4027e0 <dcgettext@plt>
  402dbc:	mov	x1, x19
  402dc0:	bl	4022d0 <fputs@plt>
  402dc4:	mov	w2, #0x5                   	// #5
  402dc8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402dcc:	mov	x0, #0x0                   	// #0
  402dd0:	add	x1, x1, #0x2c2
  402dd4:	bl	4027e0 <dcgettext@plt>
  402dd8:	mov	x1, x19
  402ddc:	bl	4022d0 <fputs@plt>
  402de0:	mov	w2, #0x5                   	// #5
  402de4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402de8:	mov	x0, #0x0                   	// #0
  402dec:	add	x1, x1, #0x2fd
  402df0:	bl	4027e0 <dcgettext@plt>
  402df4:	mov	x1, x19
  402df8:	bl	4022d0 <fputs@plt>
  402dfc:	mov	w2, #0x5                   	// #5
  402e00:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402e04:	mov	x0, #0x0                   	// #0
  402e08:	add	x1, x1, #0x342
  402e0c:	bl	4027e0 <dcgettext@plt>
  402e10:	mov	x1, x19
  402e14:	bl	4022d0 <fputs@plt>
  402e18:	mov	w2, #0x5                   	// #5
  402e1c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402e20:	mov	x0, #0x0                   	// #0
  402e24:	add	x1, x1, #0x391
  402e28:	bl	4027e0 <dcgettext@plt>
  402e2c:	mov	x1, x19
  402e30:	bl	4022d0 <fputs@plt>
  402e34:	mov	w2, #0x5                   	// #5
  402e38:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402e3c:	mov	x0, #0x0                   	// #0
  402e40:	add	x1, x1, #0x3dc
  402e44:	bl	4027e0 <dcgettext@plt>
  402e48:	mov	x1, x19
  402e4c:	bl	4022d0 <fputs@plt>
  402e50:	mov	w2, #0x5                   	// #5
  402e54:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402e58:	mov	x0, #0x0                   	// #0
  402e5c:	add	x1, x1, #0x418
  402e60:	bl	4027e0 <dcgettext@plt>
  402e64:	mov	x1, x19
  402e68:	bl	4022d0 <fputs@plt>
  402e6c:	mov	x1, x19
  402e70:	mov	w0, #0xa                   	// #10
  402e74:	bl	4023d0 <fputc@plt>
  402e78:	mov	w2, #0x5                   	// #5
  402e7c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402e80:	mov	x0, #0x0                   	// #0
  402e84:	add	x1, x1, #0x45c
  402e88:	bl	4027e0 <dcgettext@plt>
  402e8c:	mov	x1, x19
  402e90:	bl	4022d0 <fputs@plt>
  402e94:	mov	w2, #0x5                   	// #5
  402e98:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402e9c:	mov	x0, #0x0                   	// #0
  402ea0:	add	x1, x1, #0x4ac
  402ea4:	bl	4027e0 <dcgettext@plt>
  402ea8:	mov	x1, x19
  402eac:	bl	4022d0 <fputs@plt>
  402eb0:	mov	w2, #0x5                   	// #5
  402eb4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402eb8:	mov	x0, #0x0                   	// #0
  402ebc:	add	x1, x1, #0x4f8
  402ec0:	bl	4027e0 <dcgettext@plt>
  402ec4:	mov	x1, x19
  402ec8:	bl	4022d0 <fputs@plt>
  402ecc:	mov	x1, x19
  402ed0:	mov	w0, #0xa                   	// #10
  402ed4:	bl	4023d0 <fputc@plt>
  402ed8:	mov	w2, #0x5                   	// #5
  402edc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402ee0:	mov	x0, #0x0                   	// #0
  402ee4:	add	x1, x1, #0x543
  402ee8:	bl	4027e0 <dcgettext@plt>
  402eec:	mov	x1, x19
  402ef0:	bl	4022d0 <fputs@plt>
  402ef4:	mov	w2, #0x5                   	// #5
  402ef8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402efc:	mov	x0, #0x0                   	// #0
  402f00:	add	x1, x1, #0x58e
  402f04:	bl	4027e0 <dcgettext@plt>
  402f08:	mov	x1, x19
  402f0c:	bl	4022d0 <fputs@plt>
  402f10:	mov	w2, #0x5                   	// #5
  402f14:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402f18:	mov	x0, #0x0                   	// #0
  402f1c:	add	x1, x1, #0x5ec
  402f20:	bl	4027e0 <dcgettext@plt>
  402f24:	mov	x1, x19
  402f28:	bl	4022d0 <fputs@plt>
  402f2c:	mov	w2, #0x5                   	// #5
  402f30:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402f34:	mov	x0, #0x0                   	// #0
  402f38:	add	x1, x1, #0x629
  402f3c:	bl	4027e0 <dcgettext@plt>
  402f40:	mov	x1, x19
  402f44:	bl	4022d0 <fputs@plt>
  402f48:	mov	x1, x19
  402f4c:	mov	w0, #0xa                   	// #10
  402f50:	bl	4023d0 <fputc@plt>
  402f54:	mov	w2, #0x5                   	// #5
  402f58:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402f5c:	mov	x0, #0x0                   	// #0
  402f60:	add	x1, x1, #0x665
  402f64:	bl	4027e0 <dcgettext@plt>
  402f68:	mov	x19, x0
  402f6c:	mov	w2, #0x5                   	// #5
  402f70:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402f74:	mov	x0, #0x0                   	// #0
  402f78:	add	x1, x1, #0x677
  402f7c:	bl	4027e0 <dcgettext@plt>
  402f80:	mov	x4, x0
  402f84:	adrp	x3, 407000 <scols_reset_iter@plt+0x4720>
  402f88:	add	x3, x3, #0x687
  402f8c:	mov	x2, x19
  402f90:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402f94:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  402f98:	add	x1, x1, #0x696
  402f9c:	add	x0, x0, #0x6a2
  402fa0:	bl	402830 <printf@plt>
  402fa4:	mov	w2, #0x5                   	// #5
  402fa8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402fac:	mov	x0, #0x0                   	// #0
  402fb0:	add	x1, x1, #0x6b3
  402fb4:	bl	4027e0 <dcgettext@plt>
  402fb8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402fbc:	add	x1, x1, #0x6ce
  402fc0:	bl	402830 <printf@plt>
  402fc4:	mov	w0, #0x0                   	// #0
  402fc8:	bl	4022f0 <exit@plt>
  402fcc:	mov	w2, #0x5                   	// #5
  402fd0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  402fd4:	mov	x0, #0x0                   	// #0
  402fd8:	add	x1, x1, #0x6d8
  402fdc:	bl	4027e0 <dcgettext@plt>
  402fe0:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17720>
  402fe4:	adrp	x2, 407000 <scols_reset_iter@plt+0x4720>
  402fe8:	add	x2, x2, #0x6e4
  402fec:	ldr	x1, [x1, #888]
  402ff0:	bl	402830 <printf@plt>
  402ff4:	b	402fc4 <scols_reset_iter@plt+0x6e4>
  402ff8:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  402ffc:	mov	w2, #0x5                   	// #5
  403000:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403004:	add	x1, x1, #0x6f6
  403008:	ldr	x19, [x0, #848]
  40300c:	mov	x0, #0x0                   	// #0
  403010:	bl	4027e0 <dcgettext@plt>
  403014:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17720>
  403018:	ldr	x2, [x1, #888]
  40301c:	mov	x1, x0
  403020:	mov	x0, x19
  403024:	bl	402880 <fprintf@plt>
  403028:	b	402ae0 <scols_reset_iter@plt+0x200>
  40302c:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  403030:	ldrsw	x19, [x0, #864]
  403034:	ldr	x0, [sp, #136]
  403038:	lsl	x20, x19, #3
  40303c:	add	x19, x22, x19, lsl #3
  403040:	cmn	x0, #0x1
  403044:	b.ne	403058 <scols_reset_iter@plt+0x778>  // b.any
  403048:	mov	w0, #0x50                  	// #80
  40304c:	bl	40634c <scols_reset_iter@plt+0x3a6c>
  403050:	sxtw	x0, w0
  403054:	str	x0, [sp, #136]
  403058:	ldr	x0, [sp, #216]
  40305c:	cbz	x0, 403098 <scols_reset_iter@plt+0x7b8>
  403060:	mov	w0, #0x2                   	// #2
  403064:	str	w0, [sp, #128]
  403068:	ldr	x0, [sp, #232]
  40306c:	cbz	x0, 403078 <scols_reset_iter@plt+0x798>
  403070:	ldr	x0, [sp, #224]
  403074:	cbnz	x0, 40310c <scols_reset_iter@plt+0x82c>
  403078:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  40307c:	add	x1, x1, #0x742
  403080:	mov	w2, #0x5                   	// #5
  403084:	mov	x0, #0x0                   	// #0
  403088:	bl	4027e0 <dcgettext@plt>
  40308c:	mov	x1, x0
  403090:	mov	w0, #0x1                   	// #1
  403094:	bl	402800 <errx@plt>
  403098:	ldr	w0, [sp, #128]
  40309c:	cmp	w0, #0x2
  4030a0:	b.eq	40310c <scols_reset_iter@plt+0x82c>  // b.none
  4030a4:	ldr	x0, [sp, #168]
  4030a8:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030ac:	ldr	x0, [sp, #160]
  4030b0:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030b4:	ldr	x0, [sp, #200]
  4030b8:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030bc:	ldr	x0, [sp, #208]
  4030c0:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030c4:	ldr	x0, [sp, #184]
  4030c8:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030cc:	ldr	x0, [sp, #192]
  4030d0:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030d4:	ldr	x0, [sp, #176]
  4030d8:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030dc:	ldr	x0, [sp, #152]
  4030e0:	cbnz	x0, 4030fc <scols_reset_iter@plt+0x81c>
  4030e4:	ldrb	w0, [sp, #280]
  4030e8:	tbz	w0, #1, 403114 <scols_reset_iter@plt+0x834>
  4030ec:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  4030f0:	mov	w2, #0x5                   	// #5
  4030f4:	add	x1, x1, #0x7b1
  4030f8:	b	403084 <scols_reset_iter@plt+0x7a4>
  4030fc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403100:	mov	w2, #0x5                   	// #5
  403104:	add	x1, x1, #0x787
  403108:	b	403084 <scols_reset_iter@plt+0x7a4>
  40310c:	ldr	x0, [sp, #152]
  403110:	cbz	x0, 4030e4 <scols_reset_iter@plt+0x804>
  403114:	ldr	x0, [x22, x20]
  403118:	cbnz	x0, 403198 <scols_reset_iter@plt+0x8b8>
  40311c:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  403120:	ldr	x1, [x0, #880]
  403124:	add	x0, sp, #0x80
  403128:	bl	403ae4 <scols_reset_iter@plt+0x1204>
  40312c:	mov	w20, w0
  403130:	ldr	w21, [sp, #128]
  403134:	cmp	w21, #0x2
  403138:	b.eq	40321c <scols_reset_iter@plt+0x93c>  // b.none
  40313c:	ldr	x1, [sp, #264]
  403140:	cbnz	x1, 4031b0 <scols_reset_iter@plt+0x8d0>
  403144:	mov	w0, w20
  403148:	b	402fc8 <scols_reset_iter@plt+0x6e8>
  40314c:	mov	x1, x22
  403150:	bl	402460 <fopen@plt>
  403154:	mov	x21, x0
  403158:	cbz	x0, 403184 <scols_reset_iter@plt+0x8a4>
  40315c:	mov	x1, x0
  403160:	add	x0, sp, #0x80
  403164:	bl	403ae4 <scols_reset_iter@plt+0x1204>
  403168:	add	w20, w20, w0
  40316c:	mov	x0, x21
  403170:	bl	402450 <fclose@plt>
  403174:	add	x19, x19, #0x8
  403178:	ldr	x0, [x19]
  40317c:	cbnz	x0, 40314c <scols_reset_iter@plt+0x86c>
  403180:	b	403130 <scols_reset_iter@plt+0x850>
  403184:	ldr	x1, [x19]
  403188:	mov	x0, x23
  40318c:	add	w20, w20, #0x1
  403190:	bl	402650 <warn@plt>
  403194:	b	403174 <scols_reset_iter@plt+0x894>
  403198:	adrp	x22, 407000 <scols_reset_iter@plt+0x4720>
  40319c:	adrp	x23, 407000 <scols_reset_iter@plt+0x4720>
  4031a0:	add	x22, x22, #0x92c
  4031a4:	add	x23, x23, #0x8b3
  4031a8:	mov	w20, #0x0                   	// #0
  4031ac:	b	403178 <scols_reset_iter@plt+0x898>
  4031b0:	ldr	x0, [sp, #136]
  4031b4:	ldr	x19, [sp, #272]
  4031b8:	cmp	x19, x0
  4031bc:	b.cc	4031fc <scols_reset_iter@plt+0x91c>  // b.lo, b.ul, b.last
  4031c0:	mov	w0, #0x3                   	// #3
  4031c4:	str	w0, [sp, #128]
  4031c8:	ldr	x22, [sp, #256]
  4031cc:	and	x19, x1, #0xffffffff
  4031d0:	mov	x21, #0x0                   	// #0
  4031d4:	adrp	x23, 41a000 <scols_reset_iter@plt+0x17720>
  4031d8:	cmp	x19, x21
  4031dc:	b.eq	403570 <scols_reset_iter@plt+0xc90>  // b.none
  4031e0:	ldr	x1, [x23, #872]
  4031e4:	ldr	x0, [x22, x21, lsl #3]
  4031e8:	add	x21, x21, #0x1
  4031ec:	bl	4027c0 <fputws@plt>
  4031f0:	mov	w0, #0xa                   	// #10
  4031f4:	bl	4023e0 <putwchar@plt>
  4031f8:	b	4031d8 <scols_reset_iter@plt+0x8f8>
  4031fc:	cmp	w21, #0x3
  403200:	b.hi	403570 <scols_reset_iter@plt+0xc90>  // b.pmore
  403204:	adrp	x2, 407000 <scols_reset_iter@plt+0x4720>
  403208:	add	x2, x2, #0xa00
  40320c:	ldrh	w2, [x2, w21, uxtw #1]
  403210:	adr	x3, 40321c <scols_reset_iter@plt+0x93c>
  403214:	add	x2, x3, w2, sxth #2
  403218:	br	x2
  40321c:	ldr	x0, [sp, #144]
  403220:	cbz	x0, 403570 <scols_reset_iter@plt+0xc90>
  403224:	bl	4026f0 <scols_table_get_nlines@plt>
  403228:	cbz	x0, 403570 <scols_reset_iter@plt+0xc90>
  40322c:	ldp	x1, x0, [sp, #136]
  403230:	bl	402730 <scols_table_set_termwidth@plt>
  403234:	ldr	x0, [sp, #144]
  403238:	mov	w1, w21
  40323c:	bl	4025d0 <scols_table_set_termforce@plt>
  403240:	ldr	x19, [sp, #176]
  403244:	cbz	x19, 403270 <scols_reset_iter@plt+0x990>
  403248:	mov	w2, #0x5                   	// #5
  40324c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403250:	mov	x0, #0x0                   	// #0
  403254:	add	x1, x1, #0x7dc
  403258:	bl	4027e0 <dcgettext@plt>
  40325c:	mov	x3, x0
  403260:	mov	x1, x19
  403264:	add	x0, sp, #0x80
  403268:	mov	w2, #0x4                   	// #4
  40326c:	bl	403fa8 <scols_reset_iter@plt+0x16c8>
  403270:	ldr	x19, [sp, #184]
  403274:	cbz	x19, 4032a0 <scols_reset_iter@plt+0x9c0>
  403278:	mov	w2, #0x5                   	// #5
  40327c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403280:	mov	x0, #0x0                   	// #0
  403284:	add	x1, x1, #0x7ff
  403288:	bl	4027e0 <dcgettext@plt>
  40328c:	mov	x3, x0
  403290:	mov	x1, x19
  403294:	add	x0, sp, #0x80
  403298:	mov	w2, #0x1                   	// #1
  40329c:	bl	403fa8 <scols_reset_iter@plt+0x16c8>
  4032a0:	ldr	x19, [sp, #192]
  4032a4:	cbz	x19, 4032d0 <scols_reset_iter@plt+0x9f0>
  4032a8:	mov	w2, #0x5                   	// #5
  4032ac:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  4032b0:	mov	x0, #0x0                   	// #0
  4032b4:	add	x1, x1, #0x822
  4032b8:	bl	4027e0 <dcgettext@plt>
  4032bc:	mov	x3, x0
  4032c0:	mov	x1, x19
  4032c4:	add	x0, sp, #0x80
  4032c8:	mov	w2, #0x10                  	// #16
  4032cc:	bl	403fa8 <scols_reset_iter@plt+0x16c8>
  4032d0:	ldr	x19, [sp, #200]
  4032d4:	cbz	x19, 403300 <scols_reset_iter@plt+0xa20>
  4032d8:	mov	w2, #0x5                   	// #5
  4032dc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  4032e0:	mov	x0, #0x0                   	// #0
  4032e4:	add	x1, x1, #0x849
  4032e8:	bl	4027e0 <dcgettext@plt>
  4032ec:	mov	x3, x0
  4032f0:	mov	x1, x19
  4032f4:	add	x0, sp, #0x80
  4032f8:	mov	w2, #0x40                  	// #64
  4032fc:	bl	403fa8 <scols_reset_iter@plt+0x16c8>
  403300:	ldr	x19, [sp, #208]
  403304:	cbz	x19, 403330 <scols_reset_iter@plt+0xa50>
  403308:	mov	w2, #0x5                   	// #5
  40330c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403310:	mov	x0, #0x0                   	// #0
  403314:	add	x1, x1, #0x86b
  403318:	bl	4027e0 <dcgettext@plt>
  40331c:	mov	x3, x0
  403320:	mov	x1, x19
  403324:	add	x0, sp, #0x80
  403328:	mov	w2, #0x20                  	// #32
  40332c:	bl	403fa8 <scols_reset_iter@plt+0x16c8>
  403330:	ldr	x20, [sp, #192]
  403334:	cbnz	x20, 40338c <scols_reset_iter@plt+0xaac>
  403338:	mov	w0, #0x0                   	// #0
  40333c:	bl	4027d0 <scols_new_iter@plt>
  403340:	mov	x19, x0
  403344:	cbnz	x0, 403360 <scols_reset_iter@plt+0xa80>
  403348:	mov	w0, #0x102                 	// #258
  40334c:	bl	403f24 <scols_reset_iter@plt+0x1644>
  403350:	ldr	x0, [sp, #104]
  403354:	bl	402490 <scols_column_get_flags@plt>
  403358:	tbnz	w0, #5, 403360 <scols_reset_iter@plt+0xa80>
  40335c:	ldr	x20, [sp, #104]
  403360:	add	x2, sp, #0x68
  403364:	ldr	x0, [sp, #144]
  403368:	mov	x1, x19
  40336c:	bl	402680 <scols_table_next_column@plt>
  403370:	cbz	w0, 403350 <scols_reset_iter@plt+0xa70>
  403374:	mov	x0, x19
  403378:	bl	402390 <scols_free_iter@plt>
  40337c:	cbz	x20, 40338c <scols_reset_iter@plt+0xaac>
  403380:	mov	x0, x20
  403384:	mov	w1, #0x10                  	// #16
  403388:	bl	403ef8 <scols_reset_iter@plt+0x1618>
  40338c:	ldr	x1, [sp, #216]
  403390:	cbz	x1, 403468 <scols_reset_iter@plt+0xb88>
  403394:	add	x0, sp, #0x80
  403398:	bl	403e44 <scols_reset_iter@plt+0x1564>
  40339c:	ldr	x1, [sp, #232]
  4033a0:	mov	x19, x0
  4033a4:	add	x0, sp, #0x80
  4033a8:	bl	403e44 <scols_reset_iter@plt+0x1564>
  4033ac:	mov	x21, x0
  4033b0:	ldr	x1, [sp, #224]
  4033b4:	add	x0, sp, #0x80
  4033b8:	bl	403e44 <scols_reset_iter@plt+0x1564>
  4033bc:	mov	x22, x0
  4033c0:	cmp	x21, #0x0
  4033c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4033c8:	b.eq	403468 <scols_reset_iter@plt+0xb88>  // b.none
  4033cc:	cbz	x19, 403468 <scols_reset_iter@plt+0xb88>
  4033d0:	mov	w1, #0x2                   	// #2
  4033d4:	mov	x0, x19
  4033d8:	bl	403ef8 <scols_reset_iter@plt+0x1618>
  4033dc:	mov	w0, #0x0                   	// #0
  4033e0:	bl	4027d0 <scols_new_iter@plt>
  4033e4:	mov	x19, x0
  4033e8:	mov	w0, #0x0                   	// #0
  4033ec:	bl	4027d0 <scols_new_iter@plt>
  4033f0:	mov	x20, x0
  4033f4:	cmp	x19, #0x0
  4033f8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4033fc:	b.ne	403444 <scols_reset_iter@plt+0xb64>  // b.any
  403400:	mov	w0, #0x165                 	// #357
  403404:	b	40334c <scols_reset_iter@plt+0xa6c>
  403408:	ldr	x0, [sp, #96]
  40340c:	mov	x1, x22
  403410:	bl	402330 <scols_line_get_column_cell@plt>
  403414:	cbz	x0, 403444 <scols_reset_iter@plt+0xb64>
  403418:	bl	4026a0 <scols_cell_get_data@plt>
  40341c:	mov	x23, x0
  403420:	cbz	x0, 403444 <scols_reset_iter@plt+0xb64>
  403424:	mov	x0, x19
  403428:	mov	w1, #0x0                   	// #0
  40342c:	bl	4028e0 <scols_reset_iter@plt>
  403430:	ldr	x0, [sp, #144]
  403434:	add	x2, sp, #0x68
  403438:	mov	x1, x19
  40343c:	bl	402600 <scols_table_next_line@plt>
  403440:	cbz	w0, 4034d4 <scols_reset_iter@plt+0xbf4>
  403444:	ldr	x0, [sp, #144]
  403448:	add	x2, sp, #0x60
  40344c:	mov	x1, x20
  403450:	bl	402600 <scols_table_next_line@plt>
  403454:	cbz	w0, 403408 <scols_reset_iter@plt+0xb28>
  403458:	mov	x0, x19
  40345c:	bl	402390 <scols_free_iter@plt>
  403460:	mov	x0, x20
  403464:	bl	402390 <scols_free_iter@plt>
  403468:	ldr	x0, [sp, #168]
  40346c:	cbz	x0, 403564 <scols_reset_iter@plt+0xc84>
  403470:	ldr	x0, [sp, #144]
  403474:	mov	x23, #0x0                   	// #0
  403478:	bl	4025e0 <scols_table_get_ncols@plt>
  40347c:	mov	x19, x0
  403480:	ldr	x20, [sp, #168]
  403484:	mov	w2, #0x5                   	// #5
  403488:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  40348c:	mov	x0, #0x0                   	// #0
  403490:	add	x1, x1, #0x88d
  403494:	bl	4027e0 <dcgettext@plt>
  403498:	mov	x1, x0
  40349c:	mov	x0, x20
  4034a0:	bl	403f48 <scols_reset_iter@plt+0x1668>
  4034a4:	mov	x22, x0
  4034a8:	mov	x1, #0x8                   	// #8
  4034ac:	mov	x0, x19
  4034b0:	mov	x19, x22
  4034b4:	bl	403920 <scols_reset_iter@plt+0x1040>
  4034b8:	mov	x20, x0
  4034bc:	cbz	x19, 4034cc <scols_reset_iter@plt+0xbec>
  4034c0:	ldr	x1, [x19]
  4034c4:	cbnz	x1, 403514 <scols_reset_iter@plt+0xc34>
  4034c8:	mov	x19, #0x0                   	// #0
  4034cc:	mov	x21, #0x0                   	// #0
  4034d0:	b	40354c <scols_reset_iter@plt+0xc6c>
  4034d4:	ldr	x0, [sp, #104]
  4034d8:	mov	x1, x21
  4034dc:	bl	402330 <scols_line_get_column_cell@plt>
  4034e0:	cbz	x0, 403430 <scols_reset_iter@plt+0xb50>
  4034e4:	bl	4026a0 <scols_cell_get_data@plt>
  4034e8:	mov	x1, x0
  4034ec:	cbz	x0, 403430 <scols_reset_iter@plt+0xb50>
  4034f0:	mov	x0, x23
  4034f4:	bl	402640 <strcmp@plt>
  4034f8:	cbnz	w0, 403430 <scols_reset_iter@plt+0xb50>
  4034fc:	ldp	x1, x0, [sp, #96]
  403500:	bl	4026c0 <scols_line_is_ancestor@plt>
  403504:	cbnz	w0, 403430 <scols_reset_iter@plt+0xb50>
  403508:	ldp	x0, x1, [sp, #96]
  40350c:	bl	4027f0 <scols_line_add_child@plt>
  403510:	b	403430 <scols_reset_iter@plt+0xb50>
  403514:	add	x0, sp, #0x80
  403518:	bl	403e44 <scols_reset_iter@plt+0x1564>
  40351c:	cbz	x0, 403528 <scols_reset_iter@plt+0xc48>
  403520:	str	x0, [x20, x23, lsl #3]
  403524:	add	x23, x23, #0x1
  403528:	add	x19, x19, #0x8
  40352c:	b	4034bc <scols_reset_iter@plt+0xbdc>
  403530:	ldr	x0, [sp, #144]
  403534:	mov	x1, x19
  403538:	ldr	x24, [x20, x21, lsl #3]
  40353c:	add	x21, x21, #0x1
  403540:	mov	x2, x24
  403544:	mov	x19, x24
  403548:	bl	402720 <scols_table_move_column@plt>
  40354c:	cmp	x23, x21
  403550:	b.ne	403530 <scols_reset_iter@plt+0xc50>  // b.any
  403554:	mov	x0, x20
  403558:	bl	4026b0 <free@plt>
  40355c:	mov	x0, x22
  403560:	bl	406518 <scols_reset_iter@plt+0x3c38>
  403564:	ldr	x0, [sp, #144]
  403568:	bl	402780 <scols_print_table@plt>
  40356c:	mov	w20, w0
  403570:	cmp	w20, #0x0
  403574:	cset	w0, ne  // ne = any
  403578:	ldp	x19, x20, [sp, #16]
  40357c:	ldp	x21, x22, [sp, #32]
  403580:	ldp	x23, x24, [sp, #48]
  403584:	ldp	x25, x26, [sp, #64]
  403588:	ldp	x27, x28, [sp, #80]
  40358c:	ldp	x29, x30, [sp], #288
  403590:	ret
  403594:	add	x19, x19, #0x8
  403598:	and	x19, x19, #0xfffffffffffffff8
  40359c:	str	x19, [sp, #272]
  4035a0:	cmp	x0, x19
  4035a4:	b.cc	403628 <scols_reset_iter@plt+0xd48>  // b.lo, b.ul, b.last
  4035a8:	udiv	x19, x0, x19
  4035ac:	udiv	x21, x1, x19
  4035b0:	msub	x1, x21, x19, x1
  4035b4:	cbz	x1, 4035bc <scols_reset_iter@plt+0xcdc>
  4035b8:	add	x21, x21, #0x1
  4035bc:	mov	x22, #0x0                   	// #0
  4035c0:	adrp	x27, 41a000 <scols_reset_iter@plt+0x17720>
  4035c4:	cmp	x21, x22
  4035c8:	b.eq	403570 <scols_reset_iter@plt+0xc90>  // b.none
  4035cc:	ldr	x28, [sp, #272]
  4035d0:	mov	x23, x22
  4035d4:	mov	x26, #0x0                   	// #0
  4035d8:	mov	x24, #0x0                   	// #0
  4035dc:	cmp	x19, x26
  4035e0:	b.eq	403618 <scols_reset_iter@plt+0xd38>  // b.none
  4035e4:	ldr	x0, [sp, #256]
  4035e8:	lsl	x25, x23, #3
  4035ec:	ldr	x1, [x27, #872]
  4035f0:	add	x23, x23, x21
  4035f4:	ldr	x0, [x0, x25]
  4035f8:	bl	4027c0 <fputws@plt>
  4035fc:	ldr	x0, [sp, #256]
  403600:	ldr	x0, [x0, x25]
  403604:	bl	403aa0 <scols_reset_iter@plt+0x11c0>
  403608:	add	x24, x24, x0
  40360c:	ldr	x0, [sp, #264]
  403610:	cmp	x23, x0
  403614:	b.cc	40363c <scols_reset_iter@plt+0xd5c>  // b.lo, b.ul, b.last
  403618:	mov	w0, #0xa                   	// #10
  40361c:	add	x22, x22, #0x1
  403620:	bl	4023e0 <putwchar@plt>
  403624:	b	4035c4 <scols_reset_iter@plt+0xce4>
  403628:	mov	x19, #0x1                   	// #1
  40362c:	b	4035ac <scols_reset_iter@plt+0xccc>
  403630:	mov	x24, x25
  403634:	mov	w0, #0x9                   	// #9
  403638:	bl	4023e0 <putwchar@plt>
  40363c:	add	x25, x24, #0x8
  403640:	and	x25, x25, #0xfffffffffffffff8
  403644:	cmp	x25, x28
  403648:	b.ls	403630 <scols_reset_iter@plt+0xd50>  // b.plast
  40364c:	ldr	x0, [sp, #272]
  403650:	add	x26, x26, #0x1
  403654:	add	x28, x28, x0
  403658:	b	4035dc <scols_reset_iter@plt+0xcfc>
  40365c:	add	x19, x19, #0x8
  403660:	mov	x24, #0x0                   	// #0
  403664:	and	x19, x19, #0xfffffffffffffff8
  403668:	mov	x22, #0x0                   	// #0
  40366c:	ldr	x23, [sp, #256]
  403670:	adrp	x26, 41a000 <scols_reset_iter@plt+0x17720>
  403674:	udiv	x21, x0, x19
  403678:	str	x19, [sp, #272]
  40367c:	ldr	x1, [x26, #872]
  403680:	ldr	x0, [x23]
  403684:	bl	4027c0 <fputws@plt>
  403688:	ldr	x0, [x23]
  40368c:	bl	403aa0 <scols_reset_iter@plt+0x11c0>
  403690:	add	x22, x22, x0
  403694:	ldr	x0, [sp, #264]
  403698:	sub	x0, x0, #0x1
  40369c:	str	x0, [sp, #264]
  4036a0:	cbz	x0, 4036f4 <scols_reset_iter@plt+0xe14>
  4036a4:	add	x24, x24, #0x1
  4036a8:	cmp	x21, x24
  4036ac:	b.ne	4036d8 <scols_reset_iter@plt+0xdf8>  // b.any
  4036b0:	mov	w0, #0xa                   	// #10
  4036b4:	mov	x24, #0x0                   	// #0
  4036b8:	mov	x22, #0x0                   	// #0
  4036bc:	ldr	x19, [sp, #272]
  4036c0:	bl	4023e0 <putwchar@plt>
  4036c4:	add	x23, x23, #0x8
  4036c8:	b	40367c <scols_reset_iter@plt+0xd9c>
  4036cc:	mov	x22, x25
  4036d0:	mov	w0, #0x9                   	// #9
  4036d4:	bl	4023e0 <putwchar@plt>
  4036d8:	add	x25, x22, #0x8
  4036dc:	and	x25, x25, #0xfffffffffffffff8
  4036e0:	cmp	x25, x19
  4036e4:	b.ls	4036cc <scols_reset_iter@plt+0xdec>  // b.plast
  4036e8:	ldr	x0, [sp, #272]
  4036ec:	add	x19, x19, x0
  4036f0:	b	4036c4 <scols_reset_iter@plt+0xde4>
  4036f4:	cbz	x22, 403570 <scols_reset_iter@plt+0xc90>
  4036f8:	mov	w0, #0xa                   	// #10
  4036fc:	bl	4023e0 <putwchar@plt>
  403700:	b	403570 <scols_reset_iter@plt+0xc90>
  403704:	ldr	x0, [x19, #848]
  403708:	mov	x1, x23
  40370c:	bl	402880 <fprintf@plt>
  403710:	b	402ac8 <scols_reset_iter@plt+0x1e8>
  403714:	mov	x29, #0x0                   	// #0
  403718:	mov	x30, #0x0                   	// #0
  40371c:	mov	x5, x0
  403720:	ldr	x1, [sp]
  403724:	add	x2, sp, #0x8
  403728:	mov	x6, sp
  40372c:	movz	x0, #0x0, lsl #48
  403730:	movk	x0, #0x0, lsl #32
  403734:	movk	x0, #0x40, lsl #16
  403738:	movk	x0, #0x28f0
  40373c:	movz	x3, #0x0, lsl #48
  403740:	movk	x3, #0x0, lsl #32
  403744:	movk	x3, #0x40, lsl #16
  403748:	movk	x3, #0x6e28
  40374c:	movz	x4, #0x0, lsl #48
  403750:	movk	x4, #0x0, lsl #32
  403754:	movk	x4, #0x40, lsl #16
  403758:	movk	x4, #0x6ea8
  40375c:	bl	4024c0 <__libc_start_main@plt>
  403760:	bl	4025c0 <abort@plt>
  403764:	adrp	x0, 419000 <scols_reset_iter@plt+0x16720>
  403768:	ldr	x0, [x0, #4064]
  40376c:	cbz	x0, 403774 <scols_reset_iter@plt+0xe94>
  403770:	b	4025a0 <__gmon_start__@plt>
  403774:	ret
  403778:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  40377c:	add	x1, x0, #0x350
  403780:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  403784:	add	x0, x0, #0x350
  403788:	cmp	x1, x0
  40378c:	b.eq	4037b8 <scols_reset_iter@plt+0xed8>  // b.none
  403790:	sub	sp, sp, #0x10
  403794:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403798:	ldr	x1, [x1, #3800]
  40379c:	str	x1, [sp, #8]
  4037a0:	cbz	x1, 4037b0 <scols_reset_iter@plt+0xed0>
  4037a4:	mov	x16, x1
  4037a8:	add	sp, sp, #0x10
  4037ac:	br	x16
  4037b0:	add	sp, sp, #0x10
  4037b4:	ret
  4037b8:	ret
  4037bc:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  4037c0:	add	x1, x0, #0x350
  4037c4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  4037c8:	add	x0, x0, #0x350
  4037cc:	sub	x1, x1, x0
  4037d0:	mov	x2, #0x2                   	// #2
  4037d4:	asr	x1, x1, #3
  4037d8:	sdiv	x1, x1, x2
  4037dc:	cbz	x1, 403808 <scols_reset_iter@plt+0xf28>
  4037e0:	sub	sp, sp, #0x10
  4037e4:	adrp	x2, 406000 <scols_reset_iter@plt+0x3720>
  4037e8:	ldr	x2, [x2, #3808]
  4037ec:	str	x2, [sp, #8]
  4037f0:	cbz	x2, 403800 <scols_reset_iter@plt+0xf20>
  4037f4:	mov	x16, x2
  4037f8:	add	sp, sp, #0x10
  4037fc:	br	x16
  403800:	add	sp, sp, #0x10
  403804:	ret
  403808:	ret
  40380c:	stp	x29, x30, [sp, #-32]!
  403810:	mov	x29, sp
  403814:	str	x19, [sp, #16]
  403818:	adrp	x19, 41a000 <scols_reset_iter@plt+0x17720>
  40381c:	ldrb	w0, [x19, #896]
  403820:	cbnz	w0, 403830 <scols_reset_iter@plt+0xf50>
  403824:	bl	403778 <scols_reset_iter@plt+0xe98>
  403828:	mov	w0, #0x1                   	// #1
  40382c:	strb	w0, [x19, #896]
  403830:	ldr	x19, [sp, #16]
  403834:	ldp	x29, x30, [sp], #32
  403838:	ret
  40383c:	b	4037bc <scols_reset_iter@plt+0xedc>
  403840:	stp	x29, x30, [sp, #-32]!
  403844:	mov	x29, sp
  403848:	stp	x19, x20, [sp, #16]
  40384c:	mov	x19, x0
  403850:	bl	402850 <__errno_location@plt>
  403854:	str	wzr, [x0]
  403858:	mov	x20, x0
  40385c:	mov	x0, x19
  403860:	bl	4028d0 <ferror@plt>
  403864:	cbz	w0, 403880 <scols_reset_iter@plt+0xfa0>
  403868:	ldr	w0, [x20]
  40386c:	cmp	w0, #0x9
  403870:	csetm	w0, ne  // ne = any
  403874:	ldp	x19, x20, [sp, #16]
  403878:	ldp	x29, x30, [sp], #32
  40387c:	ret
  403880:	mov	x0, x19
  403884:	bl	402770 <fflush@plt>
  403888:	cbnz	w0, 403868 <scols_reset_iter@plt+0xf88>
  40388c:	mov	x0, x19
  403890:	bl	402430 <fileno@plt>
  403894:	tbnz	w0, #31, 403868 <scols_reset_iter@plt+0xf88>
  403898:	bl	402300 <dup@plt>
  40389c:	tbnz	w0, #31, 403868 <scols_reset_iter@plt+0xf88>
  4038a0:	bl	402580 <close@plt>
  4038a4:	cbz	w0, 403874 <scols_reset_iter@plt+0xf94>
  4038a8:	b	403868 <scols_reset_iter@plt+0xf88>
  4038ac:	stp	x29, x30, [sp, #-16]!
  4038b0:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  4038b4:	mov	x29, sp
  4038b8:	ldr	x0, [x0, #872]
  4038bc:	bl	403840 <scols_reset_iter@plt+0xf60>
  4038c0:	cbz	w0, 403908 <scols_reset_iter@plt+0x1028>
  4038c4:	bl	402850 <__errno_location@plt>
  4038c8:	ldr	w0, [x0]
  4038cc:	cmp	w0, #0x20
  4038d0:	b.eq	403908 <scols_reset_iter@plt+0x1028>  // b.none
  4038d4:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  4038d8:	mov	w2, #0x5                   	// #5
  4038dc:	add	x1, x1, #0xee8
  4038e0:	cbz	w0, 4038f8 <scols_reset_iter@plt+0x1018>
  4038e4:	mov	x0, #0x0                   	// #0
  4038e8:	bl	4027e0 <dcgettext@plt>
  4038ec:	bl	402650 <warn@plt>
  4038f0:	mov	w0, #0x1                   	// #1
  4038f4:	bl	4022a0 <_exit@plt>
  4038f8:	mov	x0, #0x0                   	// #0
  4038fc:	bl	4027e0 <dcgettext@plt>
  403900:	bl	402790 <warnx@plt>
  403904:	b	4038f0 <scols_reset_iter@plt+0x1010>
  403908:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  40390c:	ldr	x0, [x0, #848]
  403910:	bl	403840 <scols_reset_iter@plt+0xf60>
  403914:	cbnz	w0, 4038f0 <scols_reset_iter@plt+0x1010>
  403918:	ldp	x29, x30, [sp], #16
  40391c:	ret
  403920:	stp	x29, x30, [sp, #-32]!
  403924:	mov	x29, sp
  403928:	stp	x19, x20, [sp, #16]
  40392c:	mov	x20, x0
  403930:	mov	x19, x1
  403934:	bl	402520 <calloc@plt>
  403938:	cbnz	x0, 403954 <scols_reset_iter@plt+0x1074>
  40393c:	cbz	x20, 403954 <scols_reset_iter@plt+0x1074>
  403940:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403944:	mov	x2, x19
  403948:	add	x1, x1, #0xef4
  40394c:	mov	w0, #0x1                   	// #1
  403950:	bl	4028a0 <err@plt>
  403954:	ldp	x19, x20, [sp, #16]
  403958:	ldp	x29, x30, [sp], #32
  40395c:	ret
  403960:	stp	x29, x30, [sp, #-48]!
  403964:	mov	x1, x0
  403968:	mov	x2, #0x0                   	// #0
  40396c:	mov	x29, sp
  403970:	stp	x19, x20, [sp, #16]
  403974:	str	x21, [sp, #32]
  403978:	mov	x21, x0
  40397c:	mov	x0, #0x0                   	// #0
  403980:	bl	4022e0 <mbstowcs@plt>
  403984:	tbnz	x0, #63, 4039b4 <scols_reset_iter@plt+0x10d4>
  403988:	add	x19, x0, #0x1
  40398c:	mov	x1, #0x1                   	// #1
  403990:	lsl	x0, x19, #2
  403994:	bl	403920 <scols_reset_iter@plt+0x1040>
  403998:	mov	x2, x19
  40399c:	mov	x20, x0
  4039a0:	mov	x1, x21
  4039a4:	bl	4022e0 <mbstowcs@plt>
  4039a8:	tbz	x0, #63, 4039b8 <scols_reset_iter@plt+0x10d8>
  4039ac:	mov	x0, x20
  4039b0:	bl	4026b0 <free@plt>
  4039b4:	mov	x20, #0x0                   	// #0
  4039b8:	mov	x0, x20
  4039bc:	ldp	x19, x20, [sp, #16]
  4039c0:	ldr	x21, [sp, #32]
  4039c4:	ldp	x29, x30, [sp], #48
  4039c8:	ret
  4039cc:	stp	x29, x30, [sp, #-32]!
  4039d0:	mov	x29, sp
  4039d4:	stp	x19, x20, [sp, #16]
  4039d8:	mov	x19, x0
  4039dc:	mov	w0, #0x0                   	// #0
  4039e0:	bl	402890 <scols_init_debug@plt>
  4039e4:	bl	402500 <scols_new_table@plt>
  4039e8:	str	x0, [x19, #16]
  4039ec:	cbnz	x0, 403a0c <scols_reset_iter@plt+0x112c>
  4039f0:	mov	w2, #0x5                   	// #5
  4039f4:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  4039f8:	add	x1, x1, #0xf0e
  4039fc:	bl	4027e0 <dcgettext@plt>
  403a00:	mov	x1, x0
  403a04:	mov	w0, #0x1                   	// #1
  403a08:	bl	4028a0 <err@plt>
  403a0c:	ldr	x1, [x19, #120]
  403a10:	bl	4023f0 <scols_table_set_column_separator@plt>
  403a14:	ldrb	w0, [x19, #152]
  403a18:	mov	w1, #0x1                   	// #1
  403a1c:	tbz	w0, #1, 403a50 <scols_reset_iter@plt+0x1170>
  403a20:	ldr	x0, [x19, #16]
  403a24:	bl	402700 <scols_table_enable_json@plt>
  403a28:	ldr	x1, [x19, #32]
  403a2c:	ldr	x0, [x19, #16]
  403a30:	cbnz	x1, 403a3c <scols_reset_iter@plt+0x115c>
  403a34:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403a38:	add	x1, x1, #0xf28
  403a3c:	bl	402340 <scols_table_set_name@plt>
  403a40:	ldr	x20, [x19, #24]
  403a44:	cbnz	x20, 403a6c <scols_reset_iter@plt+0x118c>
  403a48:	mov	w1, #0x1                   	// #1
  403a4c:	b	403a90 <scols_reset_iter@plt+0x11b0>
  403a50:	ldr	x0, [x19, #16]
  403a54:	bl	402870 <scols_table_enable_noencoding@plt>
  403a58:	b	403a40 <scols_reset_iter@plt+0x1160>
  403a5c:	movi	d0, #0x0
  403a60:	add	x20, x20, #0x8
  403a64:	mov	w2, #0x0                   	// #0
  403a68:	bl	402380 <scols_table_new_column@plt>
  403a6c:	ldr	x1, [x20]
  403a70:	ldr	x0, [x19, #16]
  403a74:	cbnz	x1, 403a5c <scols_reset_iter@plt+0x117c>
  403a78:	ldrb	w1, [x19, #152]
  403a7c:	tbz	w1, #2, 403a88 <scols_reset_iter@plt+0x11a8>
  403a80:	mov	w1, #0x1                   	// #1
  403a84:	bl	4025f0 <scols_table_enable_header_repeat@plt>
  403a88:	ldrb	w1, [x19, #152]
  403a8c:	ubfx	x1, x1, #4, #1
  403a90:	ldr	x0, [x19, #16]
  403a94:	ldp	x19, x20, [sp, #16]
  403a98:	ldp	x29, x30, [sp], #32
  403a9c:	b	402360 <scols_table_enable_noheadings@plt>
  403aa0:	stp	x29, x30, [sp, #-32]!
  403aa4:	mov	x29, sp
  403aa8:	stp	x19, x20, [sp, #16]
  403aac:	mov	x19, x0
  403ab0:	mov	x20, #0x0                   	// #0
  403ab4:	ldr	w0, [x19]
  403ab8:	cbnz	w0, 403acc <scols_reset_iter@plt+0x11ec>
  403abc:	mov	x0, x20
  403ac0:	ldp	x19, x20, [sp, #16]
  403ac4:	ldp	x29, x30, [sp], #32
  403ac8:	ret
  403acc:	bl	402480 <wcwidth@plt>
  403ad0:	cmp	w0, #0x0
  403ad4:	b.le	403adc <scols_reset_iter@plt+0x11fc>
  403ad8:	add	x20, x20, w0, sxtw
  403adc:	add	x19, x19, #0x4
  403ae0:	b	403ab4 <scols_reset_iter@plt+0x11d4>
  403ae4:	stp	x29, x30, [sp, #-128]!
  403ae8:	mov	x29, sp
  403aec:	stp	x19, x20, [sp, #16]
  403af0:	mov	x19, x0
  403af4:	stp	x23, x24, [sp, #48]
  403af8:	mov	x24, x1
  403afc:	mov	x23, #0x0                   	// #0
  403b00:	stp	x21, x22, [sp, #32]
  403b04:	stp	x25, x26, [sp, #64]
  403b08:	stp	x27, x28, [sp, #80]
  403b0c:	stp	xzr, xzr, [sp, #104]
  403b10:	mov	x2, x24
  403b14:	add	x1, sp, #0x70
  403b18:	add	x0, sp, #0x68
  403b1c:	bl	402690 <getline@plt>
  403b20:	tbz	x0, #63, 403b44 <scols_reset_iter@plt+0x1264>
  403b24:	mov	x0, x24
  403b28:	bl	402610 <feof@plt>
  403b2c:	cbnz	w0, 403e24 <scols_reset_iter@plt+0x1544>
  403b30:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403b34:	add	x1, x1, #0xf2e
  403b38:	mov	w2, #0x5                   	// #5
  403b3c:	mov	x0, #0x0                   	// #0
  403b40:	b	403bf8 <scols_reset_iter@plt+0x1318>
  403b44:	bl	402660 <__ctype_b_loc@plt>
  403b48:	ldr	x1, [x0]
  403b4c:	ldr	x20, [sp, #104]
  403b50:	ldrsb	x0, [x20]
  403b54:	ldrh	w0, [x1, x0, lsl #1]
  403b58:	tbnz	w0, #13, 403bb0 <scols_reset_iter@plt+0x12d0>
  403b5c:	mov	x0, x20
  403b60:	mov	w1, #0xa                   	// #10
  403b64:	bl	402760 <strchr@plt>
  403b68:	cbz	x0, 403b70 <scols_reset_iter@plt+0x1290>
  403b6c:	strb	wzr, [x0]
  403b70:	ldrsb	w0, [x20]
  403b74:	cbz	w0, 403bb8 <scols_reset_iter@plt+0x12d8>
  403b78:	ldr	x0, [sp, #104]
  403b7c:	bl	403960 <scols_reset_iter@plt+0x1080>
  403b80:	mov	x21, x0
  403b84:	cbnz	x0, 403c18 <scols_reset_iter@plt+0x1338>
  403b88:	ldr	x0, [sp, #104]
  403b8c:	add	x1, sp, #0x78
  403b90:	str	xzr, [sp, #120]
  403b94:	bl	4046dc <scols_reset_iter@plt+0x1dfc>
  403b98:	mov	x20, x0
  403b9c:	cbnz	x0, 403c08 <scols_reset_iter@plt+0x1328>
  403ba0:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403ba4:	mov	w2, #0x5                   	// #5
  403ba8:	add	x1, x1, #0xf2e
  403bac:	b	403bf8 <scols_reset_iter@plt+0x1318>
  403bb0:	add	x20, x20, #0x1
  403bb4:	b	403b50 <scols_reset_iter@plt+0x1270>
  403bb8:	ldr	w0, [x19]
  403bbc:	cmp	w0, #0x2
  403bc0:	b.ne	403b10 <scols_reset_iter@plt+0x1230>  // b.any
  403bc4:	ldrb	w0, [x19, #152]
  403bc8:	tbz	w0, #3, 403b10 <scols_reset_iter@plt+0x1230>
  403bcc:	ldr	x0, [x19, #16]
  403bd0:	cbnz	x0, 403bdc <scols_reset_iter@plt+0x12fc>
  403bd4:	mov	x0, x19
  403bd8:	bl	4039cc <scols_reset_iter@plt+0x10ec>
  403bdc:	ldr	x0, [x19, #16]
  403be0:	mov	x1, #0x0                   	// #0
  403be4:	bl	402560 <scols_table_new_line@plt>
  403be8:	cbnz	x0, 403b10 <scols_reset_iter@plt+0x1230>
  403bec:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403bf0:	add	x1, x1, #0xf3a
  403bf4:	mov	w2, #0x5                   	// #5
  403bf8:	bl	4027e0 <dcgettext@plt>
  403bfc:	mov	x1, x0
  403c00:	mov	w0, #0x1                   	// #1
  403c04:	bl	4028a0 <err@plt>
  403c08:	bl	403960 <scols_reset_iter@plt+0x1080>
  403c0c:	mov	x21, x0
  403c10:	mov	x0, x20
  403c14:	bl	4026b0 <free@plt>
  403c18:	ldr	w0, [x19]
  403c1c:	cmp	w0, #0x1
  403c20:	b.gt	403c68 <scols_reset_iter@plt+0x1388>
  403c24:	tbnz	w0, #31, 403d54 <scols_reset_iter@plt+0x1474>
  403c28:	ldr	x0, [x19, #136]
  403c2c:	cmp	x0, x23
  403c30:	b.hi	403df4 <scols_reset_iter@plt+0x1514>  // b.pmore
  403c34:	ldr	x0, [x19, #128]
  403c38:	add	x23, x23, #0x3e8
  403c3c:	lsl	x20, x23, #3
  403c40:	mov	x1, x20
  403c44:	bl	402540 <realloc@plt>
  403c48:	cmp	x0, #0x0
  403c4c:	ccmp	x20, #0x0, #0x4, eq  // eq = none
  403c50:	b.eq	403df0 <scols_reset_iter@plt+0x1510>  // b.none
  403c54:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403c58:	mov	x2, x20
  403c5c:	add	x1, x1, #0xef4
  403c60:	mov	w0, #0x1                   	// #1
  403c64:	bl	4028a0 <err@plt>
  403c68:	cmp	w0, #0x2
  403c6c:	b.ne	403d54 <scols_reset_iter@plt+0x1474>  // b.any
  403c70:	ldr	x0, [x19, #16]
  403c74:	str	xzr, [sp, #120]
  403c78:	cbnz	x0, 403c84 <scols_reset_iter@plt+0x13a4>
  403c7c:	mov	x0, x19
  403c80:	bl	4039cc <scols_reset_iter@plt+0x10ec>
  403c84:	mov	x20, x21
  403c88:	mov	x22, #0x0                   	// #0
  403c8c:	mov	x25, #0x0                   	// #0
  403c90:	b	403d34 <scols_reset_iter@plt+0x1454>
  403c94:	movi	d0, #0x0
  403c98:	mov	w2, #0x0                   	// #0
  403c9c:	ldr	x0, [x19, #16]
  403ca0:	mov	x1, #0x0                   	// #0
  403ca4:	bl	402380 <scols_table_new_column@plt>
  403ca8:	cbnz	x22, 403cc0 <scols_reset_iter@plt+0x13e0>
  403cac:	ldr	x0, [x19, #16]
  403cb0:	mov	x1, #0x0                   	// #0
  403cb4:	bl	402560 <scols_table_new_line@plt>
  403cb8:	mov	x22, x0
  403cbc:	cbz	x0, 403bec <scols_reset_iter@plt+0x130c>
  403cc0:	mov	x1, x20
  403cc4:	mov	x2, #0x0                   	// #0
  403cc8:	mov	x0, #0x0                   	// #0
  403ccc:	bl	4027b0 <wcstombs@plt>
  403cd0:	mov	x26, x0
  403cd4:	cmn	x0, #0x1
  403cd8:	b.eq	403d08 <scols_reset_iter@plt+0x1428>  // b.none
  403cdc:	mov	x1, #0x1                   	// #1
  403ce0:	add	x0, x0, x1
  403ce4:	bl	403920 <scols_reset_iter@plt+0x1040>
  403ce8:	mov	x28, x0
  403cec:	mov	x2, x26
  403cf0:	mov	x1, x20
  403cf4:	bl	4027b0 <wcstombs@plt>
  403cf8:	cmn	x0, #0x1
  403cfc:	b.ne	403d18 <scols_reset_iter@plt+0x1438>  // b.any
  403d00:	mov	x0, x28
  403d04:	bl	4026b0 <free@plt>
  403d08:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403d0c:	mov	w2, #0x5                   	// #5
  403d10:	add	x1, x1, #0xf93
  403d14:	b	403b3c <scols_reset_iter@plt+0x125c>
  403d18:	mov	x2, x28
  403d1c:	mov	x1, x25
  403d20:	mov	x0, x22
  403d24:	mov	x20, #0x0                   	// #0
  403d28:	bl	402310 <scols_line_refer_data@plt>
  403d2c:	cbnz	w0, 403d60 <scols_reset_iter@plt+0x1480>
  403d30:	mov	x25, x27
  403d34:	ldrb	w0, [x19, #152]
  403d38:	tbz	w0, #0, 403d70 <scols_reset_iter@plt+0x1490>
  403d3c:	ldr	x1, [x19, #112]
  403d40:	mov	x0, x20
  403d44:	add	x2, sp, #0x78
  403d48:	bl	402570 <wcstok@plt>
  403d4c:	mov	x20, x0
  403d50:	cbnz	x0, 403d90 <scols_reset_iter@plt+0x14b0>
  403d54:	mov	x0, x21
  403d58:	bl	4026b0 <free@plt>
  403d5c:	b	403b10 <scols_reset_iter@plt+0x1230>
  403d60:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403d64:	mov	w2, #0x5                   	// #5
  403d68:	add	x1, x1, #0xfb2
  403d6c:	b	403b3c <scols_reset_iter@plt+0x125c>
  403d70:	cbnz	x20, 403d7c <scols_reset_iter@plt+0x149c>
  403d74:	ldr	x20, [sp, #120]
  403d78:	cbz	x20, 403d54 <scols_reset_iter@plt+0x1474>
  403d7c:	ldr	x1, [x19, #112]
  403d80:	mov	x0, x20
  403d84:	bl	402440 <wcspbrk@plt>
  403d88:	cbnz	x0, 403de4 <scols_reset_iter@plt+0x1504>
  403d8c:	str	xzr, [sp, #120]
  403d90:	ldr	x0, [x19, #16]
  403d94:	add	x27, x25, #0x1
  403d98:	bl	4025e0 <scols_table_get_ncols@plt>
  403d9c:	cmp	x0, x27
  403da0:	b.cs	403ca8 <scols_reset_iter@plt+0x13c8>  // b.hs, b.nlast
  403da4:	ldr	x0, [x19, #16]
  403da8:	bl	402590 <scols_table_is_json@plt>
  403dac:	cbz	w0, 403c94 <scols_reset_iter@plt+0x13b4>
  403db0:	mov	w2, #0x5                   	// #5
  403db4:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403db8:	mov	x0, #0x0                   	// #0
  403dbc:	add	x1, x1, #0xf59
  403dc0:	bl	4027e0 <dcgettext@plt>
  403dc4:	mov	x20, x0
  403dc8:	ldr	x0, [x19, #16]
  403dcc:	bl	4026f0 <scols_table_get_nlines@plt>
  403dd0:	add	x2, x0, #0x1
  403dd4:	mov	x3, x27
  403dd8:	mov	x1, x20
  403ddc:	mov	w0, #0x1                   	// #1
  403de0:	bl	402800 <errx@plt>
  403de4:	str	wzr, [x0], #4
  403de8:	str	x0, [sp, #120]
  403dec:	b	403d90 <scols_reset_iter@plt+0x14b0>
  403df0:	str	x0, [x19, #128]
  403df4:	ldp	x0, x1, [x19, #128]
  403df8:	str	x21, [x0, x1, lsl #3]
  403dfc:	mov	x0, x21
  403e00:	bl	403aa0 <scols_reset_iter@plt+0x11c0>
  403e04:	ldr	x1, [x19, #144]
  403e08:	cmp	x1, x0
  403e0c:	b.cs	403e14 <scols_reset_iter@plt+0x1534>  // b.hs, b.nlast
  403e10:	str	x0, [x19, #144]
  403e14:	ldr	x0, [x19, #136]
  403e18:	add	x0, x0, #0x1
  403e1c:	str	x0, [x19, #136]
  403e20:	b	403b10 <scols_reset_iter@plt+0x1230>
  403e24:	mov	w0, #0x0                   	// #0
  403e28:	ldp	x19, x20, [sp, #16]
  403e2c:	ldp	x21, x22, [sp, #32]
  403e30:	ldp	x23, x24, [sp, #48]
  403e34:	ldp	x25, x26, [sp, #64]
  403e38:	ldp	x27, x28, [sp, #80]
  403e3c:	ldp	x29, x30, [sp], #128
  403e40:	ret
  403e44:	stp	x29, x30, [sp, #-48]!
  403e48:	mov	x29, sp
  403e4c:	stp	x19, x20, [sp, #16]
  403e50:	mov	x20, x1
  403e54:	mov	x1, #0x0                   	// #0
  403e58:	stp	x21, x22, [sp, #32]
  403e5c:	mov	x21, x0
  403e60:	mov	x0, x20
  403e64:	bl	405028 <scols_reset_iter@plt+0x2748>
  403e68:	cbz	w0, 403ea8 <scols_reset_iter@plt+0x15c8>
  403e6c:	mov	w2, #0x5                   	// #5
  403e70:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403e74:	mov	x0, #0x0                   	// #0
  403e78:	add	x1, x1, #0xfcc
  403e7c:	bl	4027e0 <dcgettext@plt>
  403e80:	mov	x1, x0
  403e84:	mov	x0, x20
  403e88:	bl	4052e4 <scols_reset_iter@plt+0x2a04>
  403e8c:	sub	w19, w0, #0x1
  403e90:	mov	w1, w19
  403e94:	ldr	x0, [x21, #16]
  403e98:	ldp	x19, x20, [sp, #16]
  403e9c:	ldp	x21, x22, [sp, #32]
  403ea0:	ldp	x29, x30, [sp], #48
  403ea4:	b	4024e0 <scols_table_get_column@plt>
  403ea8:	ldr	x22, [x21, #24]
  403eac:	mov	w19, #0x0                   	// #0
  403eb0:	cbz	x22, 403ebc <scols_reset_iter@plt+0x15dc>
  403eb4:	ldr	x0, [x22]
  403eb8:	cbnz	x0, 403ee0 <scols_reset_iter@plt+0x1600>
  403ebc:	mov	w2, #0x5                   	// #5
  403ec0:	adrp	x1, 406000 <scols_reset_iter@plt+0x3720>
  403ec4:	mov	x0, #0x0                   	// #0
  403ec8:	add	x1, x1, #0xfe3
  403ecc:	bl	4027e0 <dcgettext@plt>
  403ed0:	mov	x1, x0
  403ed4:	mov	x2, x20
  403ed8:	mov	w0, #0x1                   	// #1
  403edc:	bl	402800 <errx@plt>
  403ee0:	mov	x1, x20
  403ee4:	bl	402530 <strcasecmp@plt>
  403ee8:	cbz	w0, 403e90 <scols_reset_iter@plt+0x15b0>
  403eec:	add	w19, w19, #0x1
  403ef0:	add	x22, x22, #0x8
  403ef4:	b	403eb0 <scols_reset_iter@plt+0x15d0>
  403ef8:	stp	x29, x30, [sp, #-32]!
  403efc:	mov	x29, sp
  403f00:	stp	x19, x20, [sp, #16]
  403f04:	mov	x19, x0
  403f08:	mov	w20, w1
  403f0c:	bl	402490 <scols_column_get_flags@plt>
  403f10:	orr	w1, w0, w20
  403f14:	mov	x0, x19
  403f18:	ldp	x19, x20, [sp, #16]
  403f1c:	ldp	x29, x30, [sp], #32
  403f20:	b	402510 <scols_column_set_flags@plt>
  403f24:	stp	x29, x30, [sp, #-16]!
  403f28:	mov	w3, w0
  403f2c:	adrp	x2, 406000 <scols_reset_iter@plt+0x3720>
  403f30:	mov	x29, sp
  403f34:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403f38:	add	x2, x2, #0xffe
  403f3c:	add	x1, x1, #0x12
  403f40:	mov	w0, #0x1                   	// #1
  403f44:	bl	4028a0 <err@plt>
  403f48:	stp	x29, x30, [sp, #-32]!
  403f4c:	mov	x29, sp
  403f50:	stp	x19, x20, [sp, #16]
  403f54:	mov	x19, x1
  403f58:	mov	x20, x0
  403f5c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403f60:	add	x1, x1, #0x31
  403f64:	bl	4067dc <scols_reset_iter@plt+0x3efc>
  403f68:	cbnz	x0, 403f9c <scols_reset_iter@plt+0x16bc>
  403f6c:	bl	402850 <__errno_location@plt>
  403f70:	ldr	w0, [x0]
  403f74:	cmp	w0, #0xc
  403f78:	b.ne	403f84 <scols_reset_iter@plt+0x16a4>  // b.any
  403f7c:	mov	w0, #0xc5                  	// #197
  403f80:	bl	403f24 <scols_reset_iter@plt+0x1644>
  403f84:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  403f88:	mov	x3, x20
  403f8c:	mov	x2, x19
  403f90:	add	x1, x1, #0x33
  403f94:	mov	w0, #0x1                   	// #1
  403f98:	bl	402800 <errx@plt>
  403f9c:	ldp	x19, x20, [sp, #16]
  403fa0:	ldp	x29, x30, [sp], #32
  403fa4:	ret
  403fa8:	stp	x29, x30, [sp, #-96]!
  403fac:	mov	x29, sp
  403fb0:	stp	x19, x20, [sp, #16]
  403fb4:	mov	w20, w2
  403fb8:	stp	x21, x22, [sp, #32]
  403fbc:	mov	x21, x0
  403fc0:	mov	x0, x1
  403fc4:	mov	x1, x3
  403fc8:	stp	x23, x24, [sp, #48]
  403fcc:	adrp	x24, 407000 <scols_reset_iter@plt+0x4720>
  403fd0:	add	x24, x24, #0x3c
  403fd4:	str	x25, [sp, #64]
  403fd8:	bl	403f48 <scols_reset_iter@plt+0x1668>
  403fdc:	mov	x19, x0
  403fe0:	mov	x22, x0
  403fe4:	mov	w25, #0x0                   	// #0
  403fe8:	cbz	x22, 403ff4 <scols_reset_iter@plt+0x1714>
  403fec:	ldr	x23, [x22]
  403ff0:	cbnz	x23, 404018 <scols_reset_iter@plt+0x1738>
  403ff4:	mov	x0, x19
  403ff8:	bl	406518 <scols_reset_iter@plt+0x3c38>
  403ffc:	cbz	w25, 40408c <scols_reset_iter@plt+0x17ac>
  404000:	mov	w0, #0x0                   	// #0
  404004:	bl	4027d0 <scols_new_iter@plt>
  404008:	mov	x19, x0
  40400c:	cbnz	x0, 404070 <scols_reset_iter@plt+0x1790>
  404010:	mov	w0, #0x130                 	// #304
  404014:	bl	403f24 <scols_reset_iter@plt+0x1644>
  404018:	cmp	w20, #0x20
  40401c:	b.ne	404030 <scols_reset_iter@plt+0x1750>  // b.any
  404020:	mov	x1, x24
  404024:	mov	x0, x23
  404028:	bl	402640 <strcmp@plt>
  40402c:	cbz	w0, 404050 <scols_reset_iter@plt+0x1770>
  404030:	mov	x1, x23
  404034:	mov	x0, x21
  404038:	bl	403e44 <scols_reset_iter@plt+0x1564>
  40403c:	cbz	x0, 404048 <scols_reset_iter@plt+0x1768>
  404040:	mov	w1, w20
  404044:	bl	403ef8 <scols_reset_iter@plt+0x1618>
  404048:	add	x22, x22, #0x8
  40404c:	b	403fe8 <scols_reset_iter@plt+0x1708>
  404050:	mov	w25, #0x1                   	// #1
  404054:	b	404048 <scols_reset_iter@plt+0x1768>
  404058:	ldr	x0, [sp, #88]
  40405c:	bl	402370 <scols_column_get_header@plt>
  404060:	cbnz	x0, 4040a4 <scols_reset_iter@plt+0x17c4>
  404064:	ldr	x0, [sp, #88]
  404068:	mov	w1, w20
  40406c:	bl	403ef8 <scols_reset_iter@plt+0x1618>
  404070:	ldr	x0, [x21, #16]
  404074:	add	x2, sp, #0x58
  404078:	mov	x1, x19
  40407c:	bl	402680 <scols_table_next_column@plt>
  404080:	cbz	w0, 404058 <scols_reset_iter@plt+0x1778>
  404084:	mov	x0, x19
  404088:	bl	402390 <scols_free_iter@plt>
  40408c:	ldp	x19, x20, [sp, #16]
  404090:	ldp	x21, x22, [sp, #32]
  404094:	ldp	x23, x24, [sp, #48]
  404098:	ldr	x25, [sp, #64]
  40409c:	ldp	x29, x30, [sp], #96
  4040a0:	ret
  4040a4:	bl	4026a0 <scols_cell_get_data@plt>
  4040a8:	cbnz	x0, 404070 <scols_reset_iter@plt+0x1790>
  4040ac:	b	404064 <scols_reset_iter@plt+0x1784>
  4040b0:	stp	x29, x30, [sp, #-48]!
  4040b4:	mov	x29, sp
  4040b8:	stp	x19, x20, [sp, #16]
  4040bc:	mov	x19, x0
  4040c0:	mov	x20, #0x0                   	// #0
  4040c4:	stp	x21, x22, [sp, #32]
  4040c8:	mov	x21, x1
  4040cc:	mov	w22, #0xfffd                	// #65533
  4040d0:	ldr	w0, [x19]
  4040d4:	cbnz	w0, 4040f0 <scols_reset_iter@plt+0x1810>
  4040d8:	ldp	x21, x22, [sp, #32]
  4040dc:	str	wzr, [x19]
  4040e0:	mov	x0, x20
  4040e4:	ldp	x19, x20, [sp, #16]
  4040e8:	ldp	x29, x30, [sp], #48
  4040ec:	ret
  4040f0:	bl	402480 <wcwidth@plt>
  4040f4:	cmn	w0, #0x1
  4040f8:	b.ne	404104 <scols_reset_iter@plt+0x1824>  // b.any
  4040fc:	mov	w0, #0x1                   	// #1
  404100:	str	w22, [x19]
  404104:	add	x2, x20, w0, sxtw
  404108:	cmp	x2, x21
  40410c:	b.hi	4040d8 <scols_reset_iter@plt+0x17f8>  // b.pmore
  404110:	add	x19, x19, #0x4
  404114:	mov	x20, x2
  404118:	b	4040d0 <scols_reset_iter@plt+0x17f0>
  40411c:	stp	x29, x30, [sp, #-112]!
  404120:	mov	x29, sp
  404124:	stp	x19, x20, [sp, #16]
  404128:	stp	x21, x22, [sp, #32]
  40412c:	stp	x23, x24, [sp, #48]
  404130:	mov	x24, x2
  404134:	stp	x25, x26, [sp, #64]
  404138:	str	x27, [sp, #80]
  40413c:	str	xzr, [sp, #104]
  404140:	cbz	x0, 404278 <scols_reset_iter@plt+0x1998>
  404144:	mov	x19, x0
  404148:	ldrsb	w0, [x0]
  40414c:	cbz	w0, 404270 <scols_reset_iter@plt+0x1990>
  404150:	sub	x23, x1, #0x1
  404154:	cmp	x1, #0x0
  404158:	add	x23, x19, x23
  40415c:	csel	x23, x23, x19, ne  // ne = any
  404160:	add	x25, sp, #0x68
  404164:	add	x26, sp, #0x64
  404168:	mov	x21, #0x0                   	// #0
  40416c:	mov	x20, #0x0                   	// #0
  404170:	b	4041b0 <scols_reset_iter@plt+0x18d0>
  404174:	b.ls	40418c <scols_reset_iter@plt+0x18ac>  // b.plast
  404178:	cmp	w22, #0x5c
  40417c:	b.ne	40418c <scols_reset_iter@plt+0x18ac>  // b.any
  404180:	ldrsb	w0, [x19, #1]
  404184:	cmp	w0, #0x78
  404188:	b.eq	4041a4 <scols_reset_iter@plt+0x18c4>  // b.none
  40418c:	bl	402660 <__ctype_b_loc@plt>
  404190:	mov	x27, x0
  404194:	ldr	x0, [x0]
  404198:	ubfiz	x22, x22, #1, #8
  40419c:	ldrh	w0, [x0, x22]
  4041a0:	tbz	w0, #1, 4041e8 <scols_reset_iter@plt+0x1908>
  4041a4:	add	x20, x20, #0x4
  4041a8:	add	x21, x21, #0x4
  4041ac:	add	x19, x19, #0x1
  4041b0:	ldrsb	w22, [x19]
  4041b4:	cbz	w22, 4041c0 <scols_reset_iter@plt+0x18e0>
  4041b8:	cmp	x23, x19
  4041bc:	b.cs	404174 <scols_reset_iter@plt+0x1894>  // b.hs, b.nlast
  4041c0:	cbz	x24, 4041c8 <scols_reset_iter@plt+0x18e8>
  4041c4:	str	x21, [x24]
  4041c8:	mov	x0, x20
  4041cc:	ldp	x19, x20, [sp, #16]
  4041d0:	ldp	x21, x22, [sp, #32]
  4041d4:	ldp	x23, x24, [sp, #48]
  4041d8:	ldp	x25, x26, [sp, #64]
  4041dc:	ldr	x27, [sp, #80]
  4041e0:	ldp	x29, x30, [sp], #112
  4041e4:	ret
  4041e8:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  4041ec:	mov	x2, x0
  4041f0:	mov	x3, x25
  4041f4:	mov	x1, x19
  4041f8:	mov	x0, x26
  4041fc:	bl	402280 <mbrtowc@plt>
  404200:	mov	x22, x0
  404204:	cbz	x0, 4041c0 <scols_reset_iter@plt+0x18e0>
  404208:	cmn	x0, #0x3
  40420c:	b.ls	404240 <scols_reset_iter@plt+0x1960>  // b.plast
  404210:	ldrb	w1, [x19]
  404214:	ldr	x0, [x27]
  404218:	ldrh	w0, [x0, x1, lsl #1]
  40421c:	tbz	w0, #14, 404234 <scols_reset_iter@plt+0x1954>
  404220:	add	x20, x20, #0x1
  404224:	add	x21, x21, #0x1
  404228:	mov	x22, #0x1                   	// #1
  40422c:	add	x19, x19, x22
  404230:	b	4041b0 <scols_reset_iter@plt+0x18d0>
  404234:	add	x20, x20, #0x4
  404238:	add	x21, x21, #0x4
  40423c:	b	404228 <scols_reset_iter@plt+0x1948>
  404240:	ldr	w27, [sp, #100]
  404244:	mov	w0, w27
  404248:	bl	402810 <iswprint@plt>
  40424c:	cbnz	w0, 40425c <scols_reset_iter@plt+0x197c>
  404250:	add	x20, x20, x22, lsl #2
  404254:	add	x21, x21, x22, lsl #2
  404258:	b	40422c <scols_reset_iter@plt+0x194c>
  40425c:	mov	w0, w27
  404260:	add	x21, x21, x22
  404264:	bl	402480 <wcwidth@plt>
  404268:	add	x20, x20, w0, sxtw
  40426c:	b	40422c <scols_reset_iter@plt+0x194c>
  404270:	mov	x23, x19
  404274:	b	404160 <scols_reset_iter@plt+0x1880>
  404278:	mov	x21, #0x0                   	// #0
  40427c:	mov	x20, #0x0                   	// #0
  404280:	b	4041c0 <scols_reset_iter@plt+0x18e0>
  404284:	cbz	x0, 4042cc <scols_reset_iter@plt+0x19ec>
  404288:	stp	x29, x30, [sp, #-32]!
  40428c:	mov	x29, sp
  404290:	str	x19, [sp, #16]
  404294:	mov	x19, x0
  404298:	ldrsb	w1, [x0]
  40429c:	cbz	w1, 4042bc <scols_reset_iter@plt+0x19dc>
  4042a0:	bl	4022c0 <strlen@plt>
  4042a4:	mov	x1, x0
  4042a8:	mov	x0, x19
  4042ac:	mov	x2, #0x0                   	// #0
  4042b0:	ldr	x19, [sp, #16]
  4042b4:	ldp	x29, x30, [sp], #32
  4042b8:	b	40411c <scols_reset_iter@plt+0x183c>
  4042bc:	mov	x0, #0x0                   	// #0
  4042c0:	ldr	x19, [sp, #16]
  4042c4:	ldp	x29, x30, [sp], #32
  4042c8:	ret
  4042cc:	mov	x0, #0x0                   	// #0
  4042d0:	ret
  4042d4:	stp	x29, x30, [sp, #-128]!
  4042d8:	mov	x29, sp
  4042dc:	stp	x19, x20, [sp, #16]
  4042e0:	mov	x20, x0
  4042e4:	stp	x21, x22, [sp, #32]
  4042e8:	mov	x21, x1
  4042ec:	stp	x23, x24, [sp, #48]
  4042f0:	mov	x23, x2
  4042f4:	stp	x25, x26, [sp, #64]
  4042f8:	mov	x25, x3
  4042fc:	stp	x27, x28, [sp, #80]
  404300:	cbz	x0, 404360 <scols_reset_iter@plt+0x1a80>
  404304:	bl	4022c0 <strlen@plt>
  404308:	str	xzr, [sp, #120]
  40430c:	cmp	x0, #0x0
  404310:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  404314:	b.eq	4044d8 <scols_reset_iter@plt+0x1bf8>  // b.none
  404318:	adrp	x24, 407000 <scols_reset_iter@plt+0x4720>
  40431c:	mov	x19, x23
  404320:	add	x24, x24, #0xdc8
  404324:	add	x26, sp, #0x78
  404328:	add	x27, sp, #0x74
  40432c:	str	xzr, [x21]
  404330:	cbz	x20, 40433c <scols_reset_iter@plt+0x1a5c>
  404334:	ldrsb	w22, [x20]
  404338:	cbnz	w22, 404368 <scols_reset_iter@plt+0x1a88>
  40433c:	mov	x0, x23
  404340:	strb	wzr, [x19]
  404344:	ldp	x19, x20, [sp, #16]
  404348:	ldp	x21, x22, [sp, #32]
  40434c:	ldp	x23, x24, [sp, #48]
  404350:	ldp	x25, x26, [sp, #64]
  404354:	ldp	x27, x28, [sp, #80]
  404358:	ldp	x29, x30, [sp], #128
  40435c:	ret
  404360:	mov	x0, #0x0                   	// #0
  404364:	b	404308 <scols_reset_iter@plt+0x1a28>
  404368:	cbz	x25, 404388 <scols_reset_iter@plt+0x1aa8>
  40436c:	mov	w1, w22
  404370:	mov	x0, x25
  404374:	bl	402760 <strchr@plt>
  404378:	cbz	x0, 404388 <scols_reset_iter@plt+0x1aa8>
  40437c:	add	x20, x20, #0x1
  404380:	strb	w22, [x19], #1
  404384:	b	404330 <scols_reset_iter@plt+0x1a50>
  404388:	cmp	w22, #0x5c
  40438c:	and	w22, w22, #0xff
  404390:	b.ne	4043a0 <scols_reset_iter@plt+0x1ac0>  // b.any
  404394:	ldrsb	w0, [x20, #1]
  404398:	cmp	w0, #0x78
  40439c:	b.eq	4043b8 <scols_reset_iter@plt+0x1ad8>  // b.none
  4043a0:	bl	402660 <__ctype_b_loc@plt>
  4043a4:	mov	x4, x0
  4043a8:	ubfiz	x0, x22, #1, #8
  4043ac:	ldr	x1, [x4]
  4043b0:	ldrh	w0, [x1, x0]
  4043b4:	tbz	w0, #1, 4043e0 <scols_reset_iter@plt+0x1b00>
  4043b8:	mov	x0, x19
  4043bc:	mov	w2, w22
  4043c0:	mov	x1, x24
  4043c4:	bl	4023b0 <sprintf@plt>
  4043c8:	ldr	x0, [x21]
  4043cc:	add	x19, x19, #0x4
  4043d0:	add	x20, x20, #0x1
  4043d4:	add	x0, x0, #0x4
  4043d8:	str	x0, [x21]
  4043dc:	b	404330 <scols_reset_iter@plt+0x1a50>
  4043e0:	str	x4, [sp, #104]
  4043e4:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  4043e8:	mov	x3, x26
  4043ec:	mov	x2, x0
  4043f0:	mov	x1, x20
  4043f4:	mov	x0, x27
  4043f8:	bl	402280 <mbrtowc@plt>
  4043fc:	mov	x28, x0
  404400:	cbz	x0, 40433c <scols_reset_iter@plt+0x1a5c>
  404404:	cmn	x0, #0x3
  404408:	b.ls	404464 <scols_reset_iter@plt+0x1b84>  // b.plast
  40440c:	ldr	x4, [sp, #104]
  404410:	ldrb	w1, [x20]
  404414:	ldrb	w2, [x20]
  404418:	ldr	x0, [x4]
  40441c:	ldrh	w0, [x0, x1, lsl #1]
  404420:	tbnz	w0, #14, 40444c <scols_reset_iter@plt+0x1b6c>
  404424:	mov	x0, x19
  404428:	mov	x1, x24
  40442c:	bl	4023b0 <sprintf@plt>
  404430:	add	x19, x19, #0x4
  404434:	ldr	x0, [x21]
  404438:	add	x0, x0, #0x4
  40443c:	str	x0, [x21]
  404440:	mov	x22, #0x1                   	// #1
  404444:	add	x20, x20, x22
  404448:	b	404330 <scols_reset_iter@plt+0x1a50>
  40444c:	ldr	x0, [x21]
  404450:	add	x0, x0, #0x1
  404454:	str	x0, [x21]
  404458:	ldrsb	w0, [x20]
  40445c:	strb	w0, [x19], #1
  404460:	b	404440 <scols_reset_iter@plt+0x1b60>
  404464:	ldr	w22, [sp, #116]
  404468:	mov	w0, w22
  40446c:	bl	402810 <iswprint@plt>
  404470:	cbnz	w0, 4044a8 <scols_reset_iter@plt+0x1bc8>
  404474:	mov	x22, #0x0                   	// #0
  404478:	ldrb	w2, [x20, x22]
  40447c:	add	x0, x19, x22, lsl #2
  404480:	mov	x1, x24
  404484:	add	x22, x22, #0x1
  404488:	bl	4023b0 <sprintf@plt>
  40448c:	ldr	x0, [x21]
  404490:	cmp	x28, x22
  404494:	add	x0, x0, #0x4
  404498:	str	x0, [x21]
  40449c:	b.ne	404478 <scols_reset_iter@plt+0x1b98>  // b.any
  4044a0:	add	x19, x19, x22, lsl #2
  4044a4:	b	404444 <scols_reset_iter@plt+0x1b64>
  4044a8:	mov	x1, x20
  4044ac:	mov	x2, x28
  4044b0:	mov	x0, x19
  4044b4:	bl	402290 <memcpy@plt>
  4044b8:	mov	w0, w22
  4044bc:	add	x19, x19, x28
  4044c0:	bl	402480 <wcwidth@plt>
  4044c4:	mov	x22, x28
  4044c8:	ldr	x1, [x21]
  4044cc:	add	x0, x1, w0, sxtw
  4044d0:	str	x0, [x21]
  4044d4:	b	404444 <scols_reset_iter@plt+0x1b64>
  4044d8:	mov	x0, #0x0                   	// #0
  4044dc:	b	404344 <scols_reset_iter@plt+0x1a64>
  4044e0:	stp	x29, x30, [sp, #-112]!
  4044e4:	mov	x29, sp
  4044e8:	stp	x19, x20, [sp, #16]
  4044ec:	mov	x20, x0
  4044f0:	stp	x21, x22, [sp, #32]
  4044f4:	mov	x22, x2
  4044f8:	stp	x23, x24, [sp, #48]
  4044fc:	stp	x25, x26, [sp, #64]
  404500:	str	x27, [sp, #80]
  404504:	mov	x27, x1
  404508:	cbz	x0, 404568 <scols_reset_iter@plt+0x1c88>
  40450c:	bl	4022c0 <strlen@plt>
  404510:	str	xzr, [sp, #104]
  404514:	cmp	x0, #0x0
  404518:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  40451c:	b.eq	404654 <scols_reset_iter@plt+0x1d74>  // b.none
  404520:	adrp	x24, 407000 <scols_reset_iter@plt+0x4720>
  404524:	mov	x19, x22
  404528:	add	x25, sp, #0x68
  40452c:	add	x26, sp, #0x64
  404530:	add	x24, x24, #0xdc8
  404534:	str	xzr, [x27]
  404538:	cbz	x20, 404544 <scols_reset_iter@plt+0x1c64>
  40453c:	ldrsb	w0, [x20]
  404540:	cbnz	w0, 404570 <scols_reset_iter@plt+0x1c90>
  404544:	mov	x0, x22
  404548:	strb	wzr, [x19]
  40454c:	ldp	x19, x20, [sp, #16]
  404550:	ldp	x21, x22, [sp, #32]
  404554:	ldp	x23, x24, [sp, #48]
  404558:	ldp	x25, x26, [sp, #64]
  40455c:	ldr	x27, [sp, #80]
  404560:	ldp	x29, x30, [sp], #112
  404564:	ret
  404568:	mov	x0, #0x0                   	// #0
  40456c:	b	404510 <scols_reset_iter@plt+0x1c30>
  404570:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  404574:	mov	x2, x0
  404578:	mov	x3, x25
  40457c:	mov	x1, x20
  404580:	mov	x0, x26
  404584:	bl	402280 <mbrtowc@plt>
  404588:	mov	x21, x0
  40458c:	cbz	x0, 404544 <scols_reset_iter@plt+0x1c64>
  404590:	ldrsb	w23, [x20]
  404594:	cmn	x0, #0x3
  404598:	b.ls	4045f4 <scols_reset_iter@plt+0x1d14>  // b.plast
  40459c:	bl	402660 <__ctype_b_loc@plt>
  4045a0:	ldr	x0, [x0]
  4045a4:	and	w2, w23, #0xff
  4045a8:	ubfiz	x23, x23, #1, #8
  4045ac:	ldrh	w0, [x0, x23]
  4045b0:	tbnz	w0, #14, 4045dc <scols_reset_iter@plt+0x1cfc>
  4045b4:	mov	x0, x19
  4045b8:	mov	x1, x24
  4045bc:	bl	4023b0 <sprintf@plt>
  4045c0:	add	x19, x19, #0x4
  4045c4:	ldr	x0, [x27]
  4045c8:	add	x0, x0, #0x4
  4045cc:	str	x0, [x27]
  4045d0:	mov	x21, #0x1                   	// #1
  4045d4:	add	x20, x20, x21
  4045d8:	b	404538 <scols_reset_iter@plt+0x1c58>
  4045dc:	ldr	x0, [x27]
  4045e0:	add	x0, x0, #0x1
  4045e4:	str	x0, [x27]
  4045e8:	ldrsb	w0, [x20]
  4045ec:	strb	w0, [x19], #1
  4045f0:	b	4045d0 <scols_reset_iter@plt+0x1cf0>
  4045f4:	cmp	w23, #0x5c
  4045f8:	b.ne	40462c <scols_reset_iter@plt+0x1d4c>  // b.any
  4045fc:	ldrsb	w0, [x20, #1]
  404600:	cmp	w0, #0x78
  404604:	b.ne	40462c <scols_reset_iter@plt+0x1d4c>  // b.any
  404608:	mov	x0, x19
  40460c:	mov	w2, w23
  404610:	mov	x1, x24
  404614:	bl	4023b0 <sprintf@plt>
  404618:	ldr	x0, [x27]
  40461c:	add	x19, x19, #0x4
  404620:	add	x0, x0, #0x4
  404624:	str	x0, [x27]
  404628:	b	4045d4 <scols_reset_iter@plt+0x1cf4>
  40462c:	mov	x1, x20
  404630:	mov	x2, x21
  404634:	mov	x0, x19
  404638:	bl	402290 <memcpy@plt>
  40463c:	ldr	w0, [sp, #100]
  404640:	add	x19, x19, x21
  404644:	bl	402480 <wcwidth@plt>
  404648:	ldr	x1, [x27]
  40464c:	add	x0, x1, w0, sxtw
  404650:	b	404624 <scols_reset_iter@plt+0x1d44>
  404654:	mov	x0, #0x0                   	// #0
  404658:	b	40454c <scols_reset_iter@plt+0x1c6c>
  40465c:	lsl	x0, x0, #2
  404660:	add	x0, x0, #0x1
  404664:	ret
  404668:	stp	x29, x30, [sp, #-48]!
  40466c:	mov	x29, sp
  404670:	stp	x19, x20, [sp, #16]
  404674:	mov	x19, x0
  404678:	str	x21, [sp, #32]
  40467c:	cbz	x0, 4046c8 <scols_reset_iter@plt+0x1de8>
  404680:	mov	x21, x1
  404684:	bl	4022c0 <strlen@plt>
  404688:	cbz	x0, 4046a4 <scols_reset_iter@plt+0x1dc4>
  40468c:	bl	40465c <scols_reset_iter@plt+0x1d7c>
  404690:	bl	402470 <malloc@plt>
  404694:	mov	x20, x0
  404698:	cbnz	x0, 4046ac <scols_reset_iter@plt+0x1dcc>
  40469c:	mov	x0, x20
  4046a0:	bl	4026b0 <free@plt>
  4046a4:	mov	x19, #0x0                   	// #0
  4046a8:	b	4046c8 <scols_reset_iter@plt+0x1de8>
  4046ac:	mov	x2, x0
  4046b0:	mov	x1, x21
  4046b4:	mov	x0, x19
  4046b8:	mov	x3, #0x0                   	// #0
  4046bc:	bl	4042d4 <scols_reset_iter@plt+0x19f4>
  4046c0:	mov	x19, x0
  4046c4:	cbz	x0, 40469c <scols_reset_iter@plt+0x1dbc>
  4046c8:	mov	x0, x19
  4046cc:	ldp	x19, x20, [sp, #16]
  4046d0:	ldr	x21, [sp, #32]
  4046d4:	ldp	x29, x30, [sp], #48
  4046d8:	ret
  4046dc:	stp	x29, x30, [sp, #-48]!
  4046e0:	mov	x29, sp
  4046e4:	stp	x19, x20, [sp, #16]
  4046e8:	mov	x19, x0
  4046ec:	str	x21, [sp, #32]
  4046f0:	cbz	x0, 404738 <scols_reset_iter@plt+0x1e58>
  4046f4:	mov	x21, x1
  4046f8:	bl	4022c0 <strlen@plt>
  4046fc:	cbz	x0, 404718 <scols_reset_iter@plt+0x1e38>
  404700:	bl	40465c <scols_reset_iter@plt+0x1d7c>
  404704:	bl	402470 <malloc@plt>
  404708:	mov	x20, x0
  40470c:	cbnz	x0, 404720 <scols_reset_iter@plt+0x1e40>
  404710:	mov	x0, x20
  404714:	bl	4026b0 <free@plt>
  404718:	mov	x19, #0x0                   	// #0
  40471c:	b	404738 <scols_reset_iter@plt+0x1e58>
  404720:	mov	x2, x0
  404724:	mov	x1, x21
  404728:	mov	x0, x19
  40472c:	bl	4044e0 <scols_reset_iter@plt+0x1c00>
  404730:	mov	x19, x0
  404734:	cbz	x0, 404710 <scols_reset_iter@plt+0x1e30>
  404738:	mov	x0, x19
  40473c:	ldp	x19, x20, [sp, #16]
  404740:	ldr	x21, [sp, #32]
  404744:	ldp	x29, x30, [sp], #48
  404748:	ret
  40474c:	stp	x29, x30, [sp, #-64]!
  404750:	mov	x29, sp
  404754:	stp	x19, x20, [sp, #16]
  404758:	stp	x21, x22, [sp, #32]
  40475c:	mov	x21, x0
  404760:	str	x23, [sp, #48]
  404764:	mov	x23, x1
  404768:	bl	4022c0 <strlen@plt>
  40476c:	mov	x19, x0
  404770:	mov	x1, x21
  404774:	mov	x2, #0x0                   	// #0
  404778:	mov	x0, #0x0                   	// #0
  40477c:	bl	4022e0 <mbstowcs@plt>
  404780:	cmn	x0, #0x1
  404784:	b.eq	404800 <scols_reset_iter@plt+0x1f20>  // b.none
  404788:	add	x1, x0, #0x1
  40478c:	mov	x22, x0
  404790:	mov	x0, #0x1                   	// #1
  404794:	lsl	x1, x1, #2
  404798:	bl	402520 <calloc@plt>
  40479c:	mov	x20, x0
  4047a0:	cbz	x0, 4047d8 <scols_reset_iter@plt+0x1ef8>
  4047a4:	mov	x2, x22
  4047a8:	mov	x1, x21
  4047ac:	bl	4022e0 <mbstowcs@plt>
  4047b0:	cbz	x0, 4047d8 <scols_reset_iter@plt+0x1ef8>
  4047b4:	ldr	x1, [x23]
  4047b8:	mov	x0, x20
  4047bc:	bl	4040b0 <scols_reset_iter@plt+0x17d0>
  4047c0:	str	x0, [x23]
  4047c4:	mov	x2, x19
  4047c8:	mov	x1, x20
  4047cc:	mov	x0, x21
  4047d0:	bl	4027b0 <wcstombs@plt>
  4047d4:	mov	x19, x0
  4047d8:	mov	x0, x20
  4047dc:	bl	4026b0 <free@plt>
  4047e0:	tbnz	x19, #63, 4047e8 <scols_reset_iter@plt+0x1f08>
  4047e4:	strb	wzr, [x21, x19]
  4047e8:	mov	x0, x19
  4047ec:	ldp	x19, x20, [sp, #16]
  4047f0:	ldp	x21, x22, [sp, #32]
  4047f4:	ldr	x23, [sp, #48]
  4047f8:	ldp	x29, x30, [sp], #64
  4047fc:	ret
  404800:	mov	x20, #0x0                   	// #0
  404804:	b	4047d8 <scols_reset_iter@plt+0x1ef8>
  404808:	stp	x29, x30, [sp, #-128]!
  40480c:	mov	x29, sp
  404810:	stp	x19, x20, [sp, #16]
  404814:	stp	x21, x22, [sp, #32]
  404818:	mov	x22, x2
  40481c:	stp	x23, x24, [sp, #48]
  404820:	mov	x24, x3
  404824:	mov	x23, x0
  404828:	stp	x25, x26, [sp, #64]
  40482c:	mov	w25, w4
  404830:	mov	w26, w5
  404834:	stp	x27, x28, [sp, #80]
  404838:	str	x1, [sp, #104]
  40483c:	str	w6, [sp, #116]
  404840:	bl	4022c0 <strlen@plt>
  404844:	mov	x19, x0
  404848:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  40484c:	cmp	x0, #0x1
  404850:	b.ls	404a20 <scols_reset_iter@plt+0x2140>  // b.plast
  404854:	mov	x1, x23
  404858:	mov	x2, #0x0                   	// #0
  40485c:	mov	x0, #0x0                   	// #0
  404860:	bl	4022e0 <mbstowcs@plt>
  404864:	mov	x27, x0
  404868:	cmn	x0, #0x1
  40486c:	b.ne	4048b0 <scols_reset_iter@plt+0x1fd0>  // b.any
  404870:	tbnz	w26, #0, 404a20 <scols_reset_iter@plt+0x2140>
  404874:	mov	x20, #0x0                   	// #0
  404878:	mov	x28, #0x0                   	// #0
  40487c:	mov	x26, #0xffffffffffffffff    	// #-1
  404880:	mov	x0, x20
  404884:	bl	4026b0 <free@plt>
  404888:	mov	x0, x28
  40488c:	bl	4026b0 <free@plt>
  404890:	mov	x0, x26
  404894:	ldp	x19, x20, [sp, #16]
  404898:	ldp	x21, x22, [sp, #32]
  40489c:	ldp	x23, x24, [sp, #48]
  4048a0:	ldp	x25, x26, [sp, #64]
  4048a4:	ldp	x27, x28, [sp, #80]
  4048a8:	ldp	x29, x30, [sp], #128
  4048ac:	ret
  4048b0:	add	x21, x0, #0x1
  4048b4:	lsl	x28, x21, #2
  4048b8:	mov	x0, x28
  4048bc:	bl	402470 <malloc@plt>
  4048c0:	mov	x20, x0
  4048c4:	cbnz	x0, 4048d4 <scols_reset_iter@plt+0x1ff4>
  4048c8:	tbz	w26, #0, 404874 <scols_reset_iter@plt+0x1f94>
  4048cc:	mov	x27, x19
  4048d0:	b	404a28 <scols_reset_iter@plt+0x2148>
  4048d4:	mov	x2, x21
  4048d8:	mov	x1, x23
  4048dc:	bl	4022e0 <mbstowcs@plt>
  4048e0:	cbz	x0, 4048cc <scols_reset_iter@plt+0x1fec>
  4048e4:	add	x28, x20, x28
  4048e8:	mov	x21, x20
  4048ec:	stur	wzr, [x28, #-4]
  4048f0:	mov	w28, #0x0                   	// #0
  4048f4:	ldr	w0, [x21]
  4048f8:	cbnz	w0, 40497c <scols_reset_iter@plt+0x209c>
  4048fc:	mov	w21, #0x0                   	// #0
  404900:	mov	x2, #0x0                   	// #0
  404904:	ldr	w0, [x20, x2, lsl #2]
  404908:	cbnz	w0, 404998 <scols_reset_iter@plt+0x20b8>
  40490c:	sxtw	x27, w21
  404910:	cbnz	w28, 4049dc <scols_reset_iter@plt+0x20fc>
  404914:	ldr	x0, [x24]
  404918:	cmp	x0, x27
  40491c:	b.cs	404a28 <scols_reset_iter@plt+0x2148>  // b.hs, b.nlast
  404920:	add	x21, x19, #0x1
  404924:	mov	x0, x21
  404928:	bl	402470 <malloc@plt>
  40492c:	mov	x28, x0
  404930:	cbnz	x0, 4049f4 <scols_reset_iter@plt+0x2114>
  404934:	tbz	w26, #0, 40487c <scols_reset_iter@plt+0x1f9c>
  404938:	ldr	x1, [x24]
  40493c:	cmp	x1, x27
  404940:	b.cc	404a30 <scols_reset_iter@plt+0x2150>  // b.lo, b.ul, b.last
  404944:	sub	x1, x1, x27
  404948:	csel	x1, x1, xzr, hi  // hi = pmore
  40494c:	str	x27, [x24]
  404950:	add	x26, x1, x19
  404954:	cbz	x22, 404880 <scols_reset_iter@plt+0x1fa0>
  404958:	ldr	x0, [sp, #104]
  40495c:	sub	x22, x22, #0x1
  404960:	cmp	w25, #0x1
  404964:	add	x22, x0, x22
  404968:	b.eq	404a90 <scols_reset_iter@plt+0x21b0>  // b.none
  40496c:	cmp	w25, #0x2
  404970:	b.eq	404a40 <scols_reset_iter@plt+0x2160>  // b.none
  404974:	cbz	w25, 404a98 <scols_reset_iter@plt+0x21b8>
  404978:	bl	4025c0 <abort@plt>
  40497c:	bl	402810 <iswprint@plt>
  404980:	mov	w2, #0xfffd                	// #65533
  404984:	cbnz	w0, 404990 <scols_reset_iter@plt+0x20b0>
  404988:	mov	w28, #0x1                   	// #1
  40498c:	str	w2, [x21]
  404990:	add	x21, x21, #0x4
  404994:	b	4048f4 <scols_reset_iter@plt+0x2014>
  404998:	str	x2, [sp, #120]
  40499c:	bl	402480 <wcwidth@plt>
  4049a0:	cmn	w0, #0x1
  4049a4:	b.eq	4049d4 <scols_reset_iter@plt+0x20f4>  // b.none
  4049a8:	ldr	x2, [sp, #120]
  4049ac:	mov	w3, #0x7fffffff            	// #2147483647
  4049b0:	sub	w5, w3, w0
  4049b4:	cmp	w5, w21
  4049b8:	add	x4, x2, #0x1
  4049bc:	b.lt	4049d4 <scols_reset_iter@plt+0x20f4>  // b.tstop
  4049c0:	add	w21, w21, w0
  4049c4:	cmp	x27, x2
  4049c8:	b.eq	40490c <scols_reset_iter@plt+0x202c>  // b.none
  4049cc:	mov	x2, x4
  4049d0:	b	404904 <scols_reset_iter@plt+0x2024>
  4049d4:	mov	w21, #0xffffffff            	// #-1
  4049d8:	b	40490c <scols_reset_iter@plt+0x202c>
  4049dc:	mov	x1, x20
  4049e0:	mov	x2, #0x0                   	// #0
  4049e4:	mov	x0, #0x0                   	// #0
  4049e8:	bl	4027b0 <wcstombs@plt>
  4049ec:	add	x21, x0, #0x1
  4049f0:	b	404924 <scols_reset_iter@plt+0x2044>
  4049f4:	ldr	x1, [x24]
  4049f8:	mov	x0, x20
  4049fc:	mov	x23, x28
  404a00:	bl	4040b0 <scols_reset_iter@plt+0x17d0>
  404a04:	mov	x27, x0
  404a08:	mov	x2, x21
  404a0c:	mov	x1, x20
  404a10:	mov	x0, x28
  404a14:	bl	4027b0 <wcstombs@plt>
  404a18:	mov	x19, x0
  404a1c:	b	404938 <scols_reset_iter@plt+0x2058>
  404a20:	mov	x27, x19
  404a24:	mov	x20, #0x0                   	// #0
  404a28:	mov	x28, #0x0                   	// #0
  404a2c:	b	404938 <scols_reset_iter@plt+0x2058>
  404a30:	mov	x19, x1
  404a34:	mov	x27, x1
  404a38:	mov	x1, #0x0                   	// #0
  404a3c:	b	40494c <scols_reset_iter@plt+0x206c>
  404a40:	lsr	x24, x1, #1
  404a44:	and	x1, x1, #0x1
  404a48:	add	x1, x1, x24
  404a4c:	ldr	x0, [sp, #104]
  404a50:	add	x1, x0, x1
  404a54:	cmp	x1, x0
  404a58:	ccmp	x22, x0, #0x0, ne  // ne = any
  404a5c:	b.hi	404aa4 <scols_reset_iter@plt+0x21c4>  // b.pmore
  404a60:	sub	x2, x22, x0
  404a64:	strb	wzr, [x0]
  404a68:	cmp	x2, x19
  404a6c:	mov	x1, x23
  404a70:	csel	x2, x2, x19, ls  // ls = plast
  404a74:	bl	4026e0 <mempcpy@plt>
  404a78:	add	x24, x0, x24
  404a7c:	cmp	x24, x0
  404a80:	ccmp	x22, x0, #0x0, ne  // ne = any
  404a84:	b.hi	404ab0 <scols_reset_iter@plt+0x21d0>  // b.pmore
  404a88:	strb	wzr, [x0]
  404a8c:	b	404880 <scols_reset_iter@plt+0x1fa0>
  404a90:	mov	x24, #0x0                   	// #0
  404a94:	b	404a4c <scols_reset_iter@plt+0x216c>
  404a98:	mov	x24, x1
  404a9c:	mov	x1, #0x0                   	// #0
  404aa0:	b	404a4c <scols_reset_iter@plt+0x216c>
  404aa4:	ldrb	w2, [sp, #116]
  404aa8:	strb	w2, [x0], #1
  404aac:	b	404a54 <scols_reset_iter@plt+0x2174>
  404ab0:	ldrb	w1, [sp, #116]
  404ab4:	strb	w1, [x0], #1
  404ab8:	b	404a7c <scols_reset_iter@plt+0x219c>
  404abc:	mov	w6, #0x20                  	// #32
  404ac0:	b	404808 <scols_reset_iter@plt+0x1f28>
  404ac4:	str	xzr, [x1]
  404ac8:	cbz	x0, 404b00 <scols_reset_iter@plt+0x2220>
  404acc:	ldrsb	w2, [x0]
  404ad0:	cmp	w2, #0x2f
  404ad4:	b.ne	404b20 <scols_reset_iter@plt+0x2240>  // b.any
  404ad8:	ldrsb	w2, [x0, #1]
  404adc:	cmp	w2, #0x2f
  404ae0:	b.eq	404b04 <scols_reset_iter@plt+0x2224>  // b.none
  404ae4:	mov	x2, #0x1                   	// #1
  404ae8:	str	x2, [x1]
  404aec:	add	x2, x0, x2
  404af0:	ldrsb	w3, [x2]
  404af4:	cmp	w3, #0x2f
  404af8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  404afc:	b.ne	404b0c <scols_reset_iter@plt+0x222c>  // b.any
  404b00:	ret
  404b04:	add	x0, x0, #0x1
  404b08:	b	404ac8 <scols_reset_iter@plt+0x21e8>
  404b0c:	ldr	x3, [x1]
  404b10:	add	x2, x2, #0x1
  404b14:	add	x3, x3, #0x1
  404b18:	str	x3, [x1]
  404b1c:	b	404af0 <scols_reset_iter@plt+0x2210>
  404b20:	cbnz	w2, 404ae4 <scols_reset_iter@plt+0x2204>
  404b24:	mov	x0, #0x0                   	// #0
  404b28:	b	404b00 <scols_reset_iter@plt+0x2220>
  404b2c:	stp	x29, x30, [sp, #-64]!
  404b30:	mov	x29, sp
  404b34:	stp	x21, x22, [sp, #32]
  404b38:	mov	x22, x0
  404b3c:	str	x23, [sp, #48]
  404b40:	mov	x23, x1
  404b44:	stp	x19, x20, [sp, #16]
  404b48:	mov	x20, #0x0                   	// #0
  404b4c:	mov	w19, #0x0                   	// #0
  404b50:	ldrsb	w1, [x22, x20]
  404b54:	mov	w21, w20
  404b58:	cbz	w1, 404b74 <scols_reset_iter@plt+0x2294>
  404b5c:	cbnz	w19, 404b90 <scols_reset_iter@plt+0x22b0>
  404b60:	cmp	w1, #0x5c
  404b64:	b.eq	404b9c <scols_reset_iter@plt+0x22bc>  // b.none
  404b68:	mov	x0, x23
  404b6c:	bl	402760 <strchr@plt>
  404b70:	cbz	x0, 404b94 <scols_reset_iter@plt+0x22b4>
  404b74:	sub	w0, w21, w19
  404b78:	ldp	x19, x20, [sp, #16]
  404b7c:	sxtw	x0, w0
  404b80:	ldp	x21, x22, [sp, #32]
  404b84:	ldr	x23, [sp, #48]
  404b88:	ldp	x29, x30, [sp], #64
  404b8c:	ret
  404b90:	mov	w19, #0x0                   	// #0
  404b94:	add	x20, x20, #0x1
  404b98:	b	404b50 <scols_reset_iter@plt+0x2270>
  404b9c:	mov	w19, #0x1                   	// #1
  404ba0:	b	404b94 <scols_reset_iter@plt+0x22b4>
  404ba4:	stp	x29, x30, [sp, #-64]!
  404ba8:	mov	x29, sp
  404bac:	stp	x19, x20, [sp, #16]
  404bb0:	mov	x19, x0
  404bb4:	stp	x21, x22, [sp, #32]
  404bb8:	mov	x21, x1
  404bbc:	mov	w22, w2
  404bc0:	str	xzr, [sp, #56]
  404bc4:	bl	402850 <__errno_location@plt>
  404bc8:	str	wzr, [x0]
  404bcc:	mov	x20, x0
  404bd0:	cbz	x19, 404c0c <scols_reset_iter@plt+0x232c>
  404bd4:	ldrsb	w0, [x19]
  404bd8:	cbz	w0, 404c0c <scols_reset_iter@plt+0x232c>
  404bdc:	add	x1, sp, #0x38
  404be0:	mov	w2, w22
  404be4:	mov	x0, x19
  404be8:	bl	4025b0 <strtoumax@plt>
  404bec:	ldr	w1, [x20]
  404bf0:	cbnz	w1, 404c0c <scols_reset_iter@plt+0x232c>
  404bf4:	ldr	x1, [sp, #56]
  404bf8:	cmp	x1, x19
  404bfc:	b.eq	404c0c <scols_reset_iter@plt+0x232c>  // b.none
  404c00:	cbz	x1, 404c38 <scols_reset_iter@plt+0x2358>
  404c04:	ldrsb	w1, [x1]
  404c08:	cbz	w1, 404c38 <scols_reset_iter@plt+0x2358>
  404c0c:	ldr	w1, [x20]
  404c10:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  404c14:	mov	x3, x19
  404c18:	mov	x2, x21
  404c1c:	cmp	w1, #0x22
  404c20:	ldr	w0, [x0, #840]
  404c24:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  404c28:	add	x1, x1, #0x33
  404c2c:	b.ne	404c34 <scols_reset_iter@plt+0x2354>  // b.any
  404c30:	bl	4028a0 <err@plt>
  404c34:	bl	402800 <errx@plt>
  404c38:	ldp	x19, x20, [sp, #16]
  404c3c:	ldp	x21, x22, [sp, #32]
  404c40:	ldp	x29, x30, [sp], #64
  404c44:	ret
  404c48:	stp	x29, x30, [sp, #-32]!
  404c4c:	mov	x29, sp
  404c50:	stp	x19, x20, [sp, #16]
  404c54:	mov	x19, x1
  404c58:	mov	x20, x0
  404c5c:	bl	402850 <__errno_location@plt>
  404c60:	mov	w1, #0x22                  	// #34
  404c64:	str	w1, [x0]
  404c68:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  404c6c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  404c70:	mov	x3, x20
  404c74:	mov	x2, x19
  404c78:	ldr	w0, [x0, #840]
  404c7c:	add	x1, x1, #0x33
  404c80:	bl	4028a0 <err@plt>
  404c84:	stp	x29, x30, [sp, #-32]!
  404c88:	mov	x29, sp
  404c8c:	stp	x19, x20, [sp, #16]
  404c90:	mov	x20, x1
  404c94:	mov	x19, x0
  404c98:	bl	404ba4 <scols_reset_iter@plt+0x22c4>
  404c9c:	mov	x1, #0xffffffff            	// #4294967295
  404ca0:	cmp	x0, x1
  404ca4:	b.ls	404cb4 <scols_reset_iter@plt+0x23d4>  // b.plast
  404ca8:	mov	x1, x20
  404cac:	mov	x0, x19
  404cb0:	bl	404c48 <scols_reset_iter@plt+0x2368>
  404cb4:	ldp	x19, x20, [sp, #16]
  404cb8:	ldp	x29, x30, [sp], #32
  404cbc:	ret
  404cc0:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17720>
  404cc4:	str	w0, [x1, #840]
  404cc8:	ret
  404ccc:	stp	x29, x30, [sp, #-128]!
  404cd0:	mov	x29, sp
  404cd4:	stp	x19, x20, [sp, #16]
  404cd8:	stp	x21, x22, [sp, #32]
  404cdc:	stp	x23, x24, [sp, #48]
  404ce0:	stp	x25, x26, [sp, #64]
  404ce4:	stp	x27, x28, [sp, #80]
  404ce8:	str	xzr, [x1]
  404cec:	cbnz	x0, 404d04 <scols_reset_iter@plt+0x2424>
  404cf0:	mov	w23, #0xffffffea            	// #-22
  404cf4:	bl	402850 <__errno_location@plt>
  404cf8:	neg	w1, w23
  404cfc:	str	w1, [x0]
  404d00:	b	405000 <scols_reset_iter@plt+0x2720>
  404d04:	mov	x21, x0
  404d08:	ldrsb	w0, [x0]
  404d0c:	cbz	w0, 404cf0 <scols_reset_iter@plt+0x2410>
  404d10:	mov	x20, x1
  404d14:	mov	x22, x2
  404d18:	bl	402660 <__ctype_b_loc@plt>
  404d1c:	mov	x25, x0
  404d20:	mov	x0, x21
  404d24:	ldr	x3, [x25]
  404d28:	ldrb	w2, [x0]
  404d2c:	ldrsb	w1, [x0]
  404d30:	ldrh	w2, [x3, x2, lsl #1]
  404d34:	tbnz	w2, #13, 404d98 <scols_reset_iter@plt+0x24b8>
  404d38:	cmp	w1, #0x2d
  404d3c:	b.eq	404cf0 <scols_reset_iter@plt+0x2410>  // b.none
  404d40:	bl	402850 <__errno_location@plt>
  404d44:	mov	x24, x0
  404d48:	add	x26, sp, #0x78
  404d4c:	mov	x0, x21
  404d50:	mov	x1, x26
  404d54:	mov	w2, #0x0                   	// #0
  404d58:	str	wzr, [x24]
  404d5c:	str	xzr, [sp, #120]
  404d60:	bl	4025b0 <strtoumax@plt>
  404d64:	ldr	w23, [x24]
  404d68:	ldr	x28, [sp, #120]
  404d6c:	mov	x19, x0
  404d70:	cmp	x28, x21
  404d74:	b.eq	404d88 <scols_reset_iter@plt+0x24a8>  // b.none
  404d78:	cbz	w23, 404da0 <scols_reset_iter@plt+0x24c0>
  404d7c:	sub	x0, x0, #0x1
  404d80:	cmn	x0, #0x3
  404d84:	b.ls	404da0 <scols_reset_iter@plt+0x24c0>  // b.plast
  404d88:	cbz	w23, 404cf0 <scols_reset_iter@plt+0x2410>
  404d8c:	neg	w23, w23
  404d90:	tbnz	w23, #31, 404cf4 <scols_reset_iter@plt+0x2414>
  404d94:	b	405000 <scols_reset_iter@plt+0x2720>
  404d98:	add	x0, x0, #0x1
  404d9c:	b	404d28 <scols_reset_iter@plt+0x2448>
  404da0:	cbz	x28, 404ff8 <scols_reset_iter@plt+0x2718>
  404da4:	ldrsb	w0, [x28]
  404da8:	cbz	w0, 404ff8 <scols_reset_iter@plt+0x2718>
  404dac:	mov	w21, #0x0                   	// #0
  404db0:	mov	x27, #0x0                   	// #0
  404db4:	ldrsb	w0, [x28, #1]
  404db8:	cmp	w0, #0x69
  404dbc:	b.ne	404e94 <scols_reset_iter@plt+0x25b4>  // b.any
  404dc0:	ldrsb	w0, [x28, #2]
  404dc4:	and	w0, w0, #0xffffffdf
  404dc8:	cmp	w0, #0x42
  404dcc:	b.ne	404dd8 <scols_reset_iter@plt+0x24f8>  // b.any
  404dd0:	ldrsb	w0, [x28, #3]
  404dd4:	cbz	w0, 404fa0 <scols_reset_iter@plt+0x26c0>
  404dd8:	bl	402410 <localeconv@plt>
  404ddc:	mov	x3, x0
  404de0:	cbz	x0, 404f7c <scols_reset_iter@plt+0x269c>
  404de4:	ldr	x3, [x0]
  404de8:	cbz	x3, 404f7c <scols_reset_iter@plt+0x269c>
  404dec:	mov	x0, x3
  404df0:	str	x3, [sp, #104]
  404df4:	bl	4022c0 <strlen@plt>
  404df8:	mov	x23, x0
  404dfc:	ldr	x3, [sp, #104]
  404e00:	cbnz	x27, 404cf0 <scols_reset_iter@plt+0x2410>
  404e04:	ldrsb	w0, [x28]
  404e08:	cbz	w0, 404cf0 <scols_reset_iter@plt+0x2410>
  404e0c:	cbz	x3, 404cf0 <scols_reset_iter@plt+0x2410>
  404e10:	mov	x2, x23
  404e14:	mov	x1, x28
  404e18:	mov	x0, x3
  404e1c:	bl	4024a0 <strncmp@plt>
  404e20:	cbnz	w0, 404cf0 <scols_reset_iter@plt+0x2410>
  404e24:	add	x23, x28, x23
  404e28:	sub	w1, w21, w23
  404e2c:	ldrsb	w0, [x23]
  404e30:	add	w21, w1, w23
  404e34:	cmp	w0, #0x30
  404e38:	b.eq	404f84 <scols_reset_iter@plt+0x26a4>  // b.none
  404e3c:	ldr	x1, [x25]
  404e40:	ldrh	w0, [x1, w0, sxtw #1]
  404e44:	tbz	w0, #11, 404f8c <scols_reset_iter@plt+0x26ac>
  404e48:	str	wzr, [x24]
  404e4c:	mov	x0, x23
  404e50:	mov	x1, x26
  404e54:	mov	w2, #0x0                   	// #0
  404e58:	str	xzr, [sp, #120]
  404e5c:	bl	4025b0 <strtoumax@plt>
  404e60:	mov	x27, x0
  404e64:	ldr	x0, [sp, #120]
  404e68:	cmp	x0, x23
  404e6c:	ldr	w23, [x24]
  404e70:	b.eq	404d88 <scols_reset_iter@plt+0x24a8>  // b.none
  404e74:	cbz	w23, 404f98 <scols_reset_iter@plt+0x26b8>
  404e78:	sub	x1, x27, #0x1
  404e7c:	cmn	x1, #0x3
  404e80:	b.hi	404d88 <scols_reset_iter@plt+0x24a8>  // b.pmore
  404e84:	cbz	x0, 404cf0 <scols_reset_iter@plt+0x2410>
  404e88:	ldrsb	w0, [x0]
  404e8c:	cbnz	w0, 404f90 <scols_reset_iter@plt+0x26b0>
  404e90:	b	404cf0 <scols_reset_iter@plt+0x2410>
  404e94:	and	w1, w0, #0xffffffdf
  404e98:	cmp	w1, #0x42
  404e9c:	b.ne	404dd4 <scols_reset_iter@plt+0x24f4>  // b.any
  404ea0:	ldrsb	w0, [x28, #2]
  404ea4:	cbnz	w0, 404dd8 <scols_reset_iter@plt+0x24f8>
  404ea8:	mov	w24, #0x3e8                 	// #1000
  404eac:	adrp	x3, 407000 <scols_reset_iter@plt+0x4720>
  404eb0:	ldrsb	w25, [x28]
  404eb4:	add	x23, x3, #0xdcf
  404eb8:	mov	w1, w25
  404ebc:	mov	x0, x23
  404ec0:	bl	402760 <strchr@plt>
  404ec4:	mov	x3, x0
  404ec8:	cbz	x0, 404fa8 <scols_reset_iter@plt+0x26c8>
  404ecc:	sub	x3, x3, x23
  404ed0:	sxtw	x4, w24
  404ed4:	add	w3, w3, #0x1
  404ed8:	mov	w1, w3
  404edc:	mov	w0, w3
  404ee0:	cbnz	w0, 404fc8 <scols_reset_iter@plt+0x26e8>
  404ee4:	mov	w23, #0x0                   	// #0
  404ee8:	cbz	x22, 404ef0 <scols_reset_iter@plt+0x2610>
  404eec:	str	w3, [x22]
  404ef0:	cmp	x27, #0x0
  404ef4:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  404ef8:	b.eq	404f74 <scols_reset_iter@plt+0x2694>  // b.none
  404efc:	sxtw	x0, w24
  404f00:	mov	x2, #0x1                   	// #1
  404f04:	umulh	x3, x2, x0
  404f08:	sub	w1, w1, #0x1
  404f0c:	cbnz	x3, 404f18 <scols_reset_iter@plt+0x2638>
  404f10:	mul	x2, x2, x0
  404f14:	cbnz	w1, 404f04 <scols_reset_iter@plt+0x2624>
  404f18:	mov	x0, #0xa                   	// #10
  404f1c:	mov	x1, x0
  404f20:	cmp	x27, x0
  404f24:	b.hi	404fe4 <scols_reset_iter@plt+0x2704>  // b.pmore
  404f28:	mov	w1, #0x0                   	// #0
  404f2c:	mov	x3, #0xa                   	// #10
  404f30:	cmp	w21, w1
  404f34:	b.ne	404fec <scols_reset_iter@plt+0x270c>  // b.any
  404f38:	mov	x3, #0x1                   	// #1
  404f3c:	mov	x4, #0xa                   	// #10
  404f40:	udiv	x1, x27, x4
  404f44:	mov	x6, x27
  404f48:	msub	x5, x1, x4, x27
  404f4c:	mov	x27, x1
  404f50:	mov	x1, x3
  404f54:	mul	x3, x3, x4
  404f58:	cbz	x5, 404f6c <scols_reset_iter@plt+0x268c>
  404f5c:	udiv	x1, x0, x1
  404f60:	udiv	x1, x1, x5
  404f64:	udiv	x1, x2, x1
  404f68:	add	x19, x19, x1
  404f6c:	cmp	x6, #0x9
  404f70:	b.hi	404f40 <scols_reset_iter@plt+0x2660>  // b.pmore
  404f74:	str	x19, [x20]
  404f78:	b	404d90 <scols_reset_iter@plt+0x24b0>
  404f7c:	mov	x23, #0x0                   	// #0
  404f80:	b	404e00 <scols_reset_iter@plt+0x2520>
  404f84:	add	x23, x23, #0x1
  404f88:	b	404e2c <scols_reset_iter@plt+0x254c>
  404f8c:	str	x23, [sp, #120]
  404f90:	ldr	x28, [sp, #120]
  404f94:	b	404db4 <scols_reset_iter@plt+0x24d4>
  404f98:	cbnz	x27, 404e84 <scols_reset_iter@plt+0x25a4>
  404f9c:	b	404f90 <scols_reset_iter@plt+0x26b0>
  404fa0:	mov	w24, #0x400                 	// #1024
  404fa4:	b	404eac <scols_reset_iter@plt+0x25cc>
  404fa8:	adrp	x3, 407000 <scols_reset_iter@plt+0x4720>
  404fac:	add	x23, x3, #0xdd8
  404fb0:	mov	w1, w25
  404fb4:	mov	x0, x23
  404fb8:	bl	402760 <strchr@plt>
  404fbc:	mov	x3, x0
  404fc0:	cbnz	x0, 404ecc <scols_reset_iter@plt+0x25ec>
  404fc4:	b	404cf0 <scols_reset_iter@plt+0x2410>
  404fc8:	umulh	x2, x19, x4
  404fcc:	sub	w0, w0, #0x1
  404fd0:	cbnz	x2, 404fdc <scols_reset_iter@plt+0x26fc>
  404fd4:	mul	x19, x19, x4
  404fd8:	b	404ee0 <scols_reset_iter@plt+0x2600>
  404fdc:	mov	w23, #0xffffffde            	// #-34
  404fe0:	b	404ee8 <scols_reset_iter@plt+0x2608>
  404fe4:	mul	x0, x0, x1
  404fe8:	b	404f20 <scols_reset_iter@plt+0x2640>
  404fec:	mul	x0, x0, x3
  404ff0:	add	w1, w1, #0x1
  404ff4:	b	404f30 <scols_reset_iter@plt+0x2650>
  404ff8:	mov	w23, #0x0                   	// #0
  404ffc:	str	x19, [x20]
  405000:	mov	w0, w23
  405004:	ldp	x19, x20, [sp, #16]
  405008:	ldp	x21, x22, [sp, #32]
  40500c:	ldp	x23, x24, [sp, #48]
  405010:	ldp	x25, x26, [sp, #64]
  405014:	ldp	x27, x28, [sp, #80]
  405018:	ldp	x29, x30, [sp], #128
  40501c:	ret
  405020:	mov	x2, #0x0                   	// #0
  405024:	b	404ccc <scols_reset_iter@plt+0x23ec>
  405028:	stp	x29, x30, [sp, #-48]!
  40502c:	mov	x29, sp
  405030:	stp	x19, x20, [sp, #16]
  405034:	mov	x20, x1
  405038:	mov	x19, x0
  40503c:	stp	x21, x22, [sp, #32]
  405040:	mov	x21, x0
  405044:	cbz	x19, 4050a0 <scols_reset_iter@plt+0x27c0>
  405048:	ldrsb	w22, [x19]
  40504c:	cbnz	w22, 40507c <scols_reset_iter@plt+0x279c>
  405050:	cbnz	x20, 4050a4 <scols_reset_iter@plt+0x27c4>
  405054:	cmp	x19, #0x0
  405058:	ccmp	x21, x19, #0x2, ne  // ne = any
  40505c:	b.cs	405068 <scols_reset_iter@plt+0x2788>  // b.hs, b.nlast
  405060:	ldrsb	w0, [x19]
  405064:	cbz	w0, 405098 <scols_reset_iter@plt+0x27b8>
  405068:	mov	w0, #0x0                   	// #0
  40506c:	ldp	x19, x20, [sp, #16]
  405070:	ldp	x21, x22, [sp, #32]
  405074:	ldp	x29, x30, [sp], #48
  405078:	ret
  40507c:	bl	402660 <__ctype_b_loc@plt>
  405080:	ubfiz	x22, x22, #1, #8
  405084:	ldr	x0, [x0]
  405088:	ldrh	w0, [x0, x22]
  40508c:	tbz	w0, #11, 405050 <scols_reset_iter@plt+0x2770>
  405090:	add	x19, x19, #0x1
  405094:	b	405044 <scols_reset_iter@plt+0x2764>
  405098:	mov	w0, #0x1                   	// #1
  40509c:	b	40506c <scols_reset_iter@plt+0x278c>
  4050a0:	cbz	x20, 405068 <scols_reset_iter@plt+0x2788>
  4050a4:	str	x19, [x20]
  4050a8:	b	405054 <scols_reset_iter@plt+0x2774>
  4050ac:	stp	x29, x30, [sp, #-48]!
  4050b0:	mov	x29, sp
  4050b4:	stp	x19, x20, [sp, #16]
  4050b8:	mov	x20, x1
  4050bc:	mov	x19, x0
  4050c0:	stp	x21, x22, [sp, #32]
  4050c4:	mov	x21, x0
  4050c8:	cbz	x19, 405124 <scols_reset_iter@plt+0x2844>
  4050cc:	ldrsb	w22, [x19]
  4050d0:	cbnz	w22, 405100 <scols_reset_iter@plt+0x2820>
  4050d4:	cbnz	x20, 405128 <scols_reset_iter@plt+0x2848>
  4050d8:	cmp	x19, #0x0
  4050dc:	ccmp	x21, x19, #0x2, ne  // ne = any
  4050e0:	b.cs	4050ec <scols_reset_iter@plt+0x280c>  // b.hs, b.nlast
  4050e4:	ldrsb	w0, [x19]
  4050e8:	cbz	w0, 40511c <scols_reset_iter@plt+0x283c>
  4050ec:	mov	w0, #0x0                   	// #0
  4050f0:	ldp	x19, x20, [sp, #16]
  4050f4:	ldp	x21, x22, [sp, #32]
  4050f8:	ldp	x29, x30, [sp], #48
  4050fc:	ret
  405100:	bl	402660 <__ctype_b_loc@plt>
  405104:	ubfiz	x22, x22, #1, #8
  405108:	ldr	x0, [x0]
  40510c:	ldrh	w0, [x0, x22]
  405110:	tbz	w0, #12, 4050d4 <scols_reset_iter@plt+0x27f4>
  405114:	add	x19, x19, #0x1
  405118:	b	4050c8 <scols_reset_iter@plt+0x27e8>
  40511c:	mov	w0, #0x1                   	// #1
  405120:	b	4050f0 <scols_reset_iter@plt+0x2810>
  405124:	cbz	x20, 4050ec <scols_reset_iter@plt+0x280c>
  405128:	str	x19, [x20]
  40512c:	b	4050d8 <scols_reset_iter@plt+0x27f8>
  405130:	stp	x29, x30, [sp, #-128]!
  405134:	mov	x29, sp
  405138:	stp	x19, x20, [sp, #16]
  40513c:	mov	x19, x0
  405140:	add	x0, sp, #0x80
  405144:	mov	x20, x1
  405148:	stp	x21, x22, [sp, #32]
  40514c:	add	x21, sp, #0x80
  405150:	stp	x0, x0, [sp, #48]
  405154:	add	x0, sp, #0x50
  405158:	str	x0, [sp, #64]
  40515c:	mov	w0, #0xffffffd0            	// #-48
  405160:	str	w0, [sp, #72]
  405164:	str	wzr, [sp, #76]
  405168:	stp	x2, x3, [sp, #80]
  40516c:	stp	x4, x5, [sp, #96]
  405170:	stp	x6, x7, [sp, #112]
  405174:	ldr	w1, [sp, #72]
  405178:	ldr	x0, [sp, #48]
  40517c:	tbnz	w1, #31, 4051e0 <scols_reset_iter@plt+0x2900>
  405180:	add	x1, x0, #0xf
  405184:	and	x1, x1, #0xfffffffffffffff8
  405188:	str	x1, [sp, #48]
  40518c:	ldr	x1, [x0]
  405190:	cbz	x1, 405210 <scols_reset_iter@plt+0x2930>
  405194:	ldr	w2, [sp, #72]
  405198:	ldr	x0, [sp, #48]
  40519c:	tbnz	w2, #31, 4051f8 <scols_reset_iter@plt+0x2918>
  4051a0:	add	x2, x0, #0xf
  4051a4:	and	x2, x2, #0xfffffffffffffff8
  4051a8:	str	x2, [sp, #48]
  4051ac:	ldr	x22, [x0]
  4051b0:	cbz	x22, 405210 <scols_reset_iter@plt+0x2930>
  4051b4:	mov	x0, x19
  4051b8:	bl	402640 <strcmp@plt>
  4051bc:	cbz	w0, 40522c <scols_reset_iter@plt+0x294c>
  4051c0:	mov	x1, x22
  4051c4:	mov	x0, x19
  4051c8:	bl	402640 <strcmp@plt>
  4051cc:	cbnz	w0, 405174 <scols_reset_iter@plt+0x2894>
  4051d0:	ldp	x19, x20, [sp, #16]
  4051d4:	ldp	x21, x22, [sp, #32]
  4051d8:	ldp	x29, x30, [sp], #128
  4051dc:	ret
  4051e0:	add	w2, w1, #0x8
  4051e4:	str	w2, [sp, #72]
  4051e8:	cmp	w2, #0x0
  4051ec:	b.gt	405180 <scols_reset_iter@plt+0x28a0>
  4051f0:	add	x0, x21, w1, sxtw
  4051f4:	b	40518c <scols_reset_iter@plt+0x28ac>
  4051f8:	add	w3, w2, #0x8
  4051fc:	str	w3, [sp, #72]
  405200:	cmp	w3, #0x0
  405204:	b.gt	4051a0 <scols_reset_iter@plt+0x28c0>
  405208:	add	x0, x21, w2, sxtw
  40520c:	b	4051ac <scols_reset_iter@plt+0x28cc>
  405210:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  405214:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  405218:	mov	x3, x19
  40521c:	mov	x2, x20
  405220:	ldr	w0, [x0, #840]
  405224:	add	x1, x1, #0x33
  405228:	bl	402800 <errx@plt>
  40522c:	mov	w0, #0x1                   	// #1
  405230:	b	4051d0 <scols_reset_iter@plt+0x28f0>
  405234:	add	x1, x0, x1
  405238:	sxtb	w2, w2
  40523c:	cmp	x0, x1
  405240:	b.eq	40524c <scols_reset_iter@plt+0x296c>  // b.none
  405244:	ldrsb	w3, [x0]
  405248:	cbnz	w3, 405254 <scols_reset_iter@plt+0x2974>
  40524c:	mov	x0, #0x0                   	// #0
  405250:	ret
  405254:	cmp	w2, w3
  405258:	b.eq	405250 <scols_reset_iter@plt+0x2970>  // b.none
  40525c:	add	x0, x0, #0x1
  405260:	b	40523c <scols_reset_iter@plt+0x295c>
  405264:	stp	x29, x30, [sp, #-32]!
  405268:	mov	w2, #0xa                   	// #10
  40526c:	mov	x29, sp
  405270:	stp	x19, x20, [sp, #16]
  405274:	mov	x20, x1
  405278:	mov	x19, x0
  40527c:	bl	404c84 <scols_reset_iter@plt+0x23a4>
  405280:	mov	w1, #0xffff                	// #65535
  405284:	cmp	w0, w1
  405288:	b.ls	405298 <scols_reset_iter@plt+0x29b8>  // b.plast
  40528c:	mov	x1, x20
  405290:	mov	x0, x19
  405294:	bl	404c48 <scols_reset_iter@plt+0x2368>
  405298:	ldp	x19, x20, [sp, #16]
  40529c:	ldp	x29, x30, [sp], #32
  4052a0:	ret
  4052a4:	stp	x29, x30, [sp, #-32]!
  4052a8:	mov	w2, #0x10                  	// #16
  4052ac:	mov	x29, sp
  4052b0:	stp	x19, x20, [sp, #16]
  4052b4:	mov	x20, x1
  4052b8:	mov	x19, x0
  4052bc:	bl	404c84 <scols_reset_iter@plt+0x23a4>
  4052c0:	mov	w1, #0xffff                	// #65535
  4052c4:	cmp	w0, w1
  4052c8:	b.ls	4052d8 <scols_reset_iter@plt+0x29f8>  // b.plast
  4052cc:	mov	x1, x20
  4052d0:	mov	x0, x19
  4052d4:	bl	404c48 <scols_reset_iter@plt+0x2368>
  4052d8:	ldp	x19, x20, [sp, #16]
  4052dc:	ldp	x29, x30, [sp], #32
  4052e0:	ret
  4052e4:	mov	w2, #0xa                   	// #10
  4052e8:	b	404c84 <scols_reset_iter@plt+0x23a4>
  4052ec:	mov	w2, #0x10                  	// #16
  4052f0:	b	404c84 <scols_reset_iter@plt+0x23a4>
  4052f4:	stp	x29, x30, [sp, #-64]!
  4052f8:	mov	x29, sp
  4052fc:	stp	x19, x20, [sp, #16]
  405300:	mov	x19, x0
  405304:	str	x21, [sp, #32]
  405308:	mov	x21, x1
  40530c:	str	xzr, [sp, #56]
  405310:	bl	402850 <__errno_location@plt>
  405314:	str	wzr, [x0]
  405318:	mov	x20, x0
  40531c:	cbz	x19, 405358 <scols_reset_iter@plt+0x2a78>
  405320:	ldrsb	w0, [x19]
  405324:	cbz	w0, 405358 <scols_reset_iter@plt+0x2a78>
  405328:	add	x1, sp, #0x38
  40532c:	mov	x0, x19
  405330:	mov	w2, #0xa                   	// #10
  405334:	bl	402320 <strtoimax@plt>
  405338:	ldr	w1, [x20]
  40533c:	cbnz	w1, 405358 <scols_reset_iter@plt+0x2a78>
  405340:	ldr	x1, [sp, #56]
  405344:	cmp	x1, x19
  405348:	b.eq	405358 <scols_reset_iter@plt+0x2a78>  // b.none
  40534c:	cbz	x1, 405384 <scols_reset_iter@plt+0x2aa4>
  405350:	ldrsb	w1, [x1]
  405354:	cbz	w1, 405384 <scols_reset_iter@plt+0x2aa4>
  405358:	ldr	w1, [x20]
  40535c:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  405360:	mov	x3, x19
  405364:	mov	x2, x21
  405368:	cmp	w1, #0x22
  40536c:	ldr	w0, [x0, #840]
  405370:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  405374:	add	x1, x1, #0x33
  405378:	b.ne	405380 <scols_reset_iter@plt+0x2aa0>  // b.any
  40537c:	bl	4028a0 <err@plt>
  405380:	bl	402800 <errx@plt>
  405384:	ldp	x19, x20, [sp, #16]
  405388:	ldr	x21, [sp, #32]
  40538c:	ldp	x29, x30, [sp], #64
  405390:	ret
  405394:	stp	x29, x30, [sp, #-32]!
  405398:	mov	x29, sp
  40539c:	stp	x19, x20, [sp, #16]
  4053a0:	mov	x19, x1
  4053a4:	mov	x20, x0
  4053a8:	bl	4052f4 <scols_reset_iter@plt+0x2a14>
  4053ac:	mov	x1, #0x80000000            	// #2147483648
  4053b0:	add	x1, x0, x1
  4053b4:	mov	x2, #0xffffffff            	// #4294967295
  4053b8:	cmp	x1, x2
  4053bc:	b.ls	4053e8 <scols_reset_iter@plt+0x2b08>  // b.plast
  4053c0:	bl	402850 <__errno_location@plt>
  4053c4:	mov	w1, #0x22                  	// #34
  4053c8:	str	w1, [x0]
  4053cc:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  4053d0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  4053d4:	mov	x3, x20
  4053d8:	mov	x2, x19
  4053dc:	ldr	w0, [x0, #840]
  4053e0:	add	x1, x1, #0x33
  4053e4:	bl	4028a0 <err@plt>
  4053e8:	ldp	x19, x20, [sp, #16]
  4053ec:	ldp	x29, x30, [sp], #32
  4053f0:	ret
  4053f4:	stp	x29, x30, [sp, #-32]!
  4053f8:	mov	x29, sp
  4053fc:	stp	x19, x20, [sp, #16]
  405400:	mov	x19, x1
  405404:	mov	x20, x0
  405408:	bl	405394 <scols_reset_iter@plt+0x2ab4>
  40540c:	add	w2, w0, #0x8, lsl #12
  405410:	mov	w1, #0xffff                	// #65535
  405414:	cmp	w2, w1
  405418:	b.ls	405444 <scols_reset_iter@plt+0x2b64>  // b.plast
  40541c:	bl	402850 <__errno_location@plt>
  405420:	mov	w1, #0x22                  	// #34
  405424:	str	w1, [x0]
  405428:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  40542c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  405430:	mov	x3, x20
  405434:	mov	x2, x19
  405438:	ldr	w0, [x0, #840]
  40543c:	add	x1, x1, #0x33
  405440:	bl	4028a0 <err@plt>
  405444:	ldp	x19, x20, [sp, #16]
  405448:	ldp	x29, x30, [sp], #32
  40544c:	ret
  405450:	mov	w2, #0xa                   	// #10
  405454:	b	404ba4 <scols_reset_iter@plt+0x22c4>
  405458:	mov	w2, #0x10                  	// #16
  40545c:	b	404ba4 <scols_reset_iter@plt+0x22c4>
  405460:	stp	x29, x30, [sp, #-64]!
  405464:	mov	x29, sp
  405468:	stp	x19, x20, [sp, #16]
  40546c:	mov	x19, x0
  405470:	str	x21, [sp, #32]
  405474:	mov	x21, x1
  405478:	str	xzr, [sp, #56]
  40547c:	bl	402850 <__errno_location@plt>
  405480:	str	wzr, [x0]
  405484:	mov	x20, x0
  405488:	cbz	x19, 4054c0 <scols_reset_iter@plt+0x2be0>
  40548c:	ldrsb	w0, [x19]
  405490:	cbz	w0, 4054c0 <scols_reset_iter@plt+0x2be0>
  405494:	mov	x0, x19
  405498:	add	x1, sp, #0x38
  40549c:	bl	402350 <strtod@plt>
  4054a0:	ldr	w0, [x20]
  4054a4:	cbnz	w0, 4054c0 <scols_reset_iter@plt+0x2be0>
  4054a8:	ldr	x0, [sp, #56]
  4054ac:	cmp	x0, x19
  4054b0:	b.eq	4054c0 <scols_reset_iter@plt+0x2be0>  // b.none
  4054b4:	cbz	x0, 4054ec <scols_reset_iter@plt+0x2c0c>
  4054b8:	ldrsb	w0, [x0]
  4054bc:	cbz	w0, 4054ec <scols_reset_iter@plt+0x2c0c>
  4054c0:	ldr	w1, [x20]
  4054c4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  4054c8:	mov	x3, x19
  4054cc:	mov	x2, x21
  4054d0:	cmp	w1, #0x22
  4054d4:	ldr	w0, [x0, #840]
  4054d8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  4054dc:	add	x1, x1, #0x33
  4054e0:	b.ne	4054e8 <scols_reset_iter@plt+0x2c08>  // b.any
  4054e4:	bl	4028a0 <err@plt>
  4054e8:	bl	402800 <errx@plt>
  4054ec:	ldp	x19, x20, [sp, #16]
  4054f0:	ldr	x21, [sp, #32]
  4054f4:	ldp	x29, x30, [sp], #64
  4054f8:	ret
  4054fc:	stp	x29, x30, [sp, #-64]!
  405500:	mov	x29, sp
  405504:	stp	x19, x20, [sp, #16]
  405508:	mov	x19, x0
  40550c:	str	x21, [sp, #32]
  405510:	mov	x21, x1
  405514:	str	xzr, [sp, #56]
  405518:	bl	402850 <__errno_location@plt>
  40551c:	str	wzr, [x0]
  405520:	mov	x20, x0
  405524:	cbz	x19, 405560 <scols_reset_iter@plt+0x2c80>
  405528:	ldrsb	w0, [x19]
  40552c:	cbz	w0, 405560 <scols_reset_iter@plt+0x2c80>
  405530:	add	x1, sp, #0x38
  405534:	mov	x0, x19
  405538:	mov	w2, #0xa                   	// #10
  40553c:	bl	402670 <strtol@plt>
  405540:	ldr	w1, [x20]
  405544:	cbnz	w1, 405560 <scols_reset_iter@plt+0x2c80>
  405548:	ldr	x1, [sp, #56]
  40554c:	cmp	x1, x19
  405550:	b.eq	405560 <scols_reset_iter@plt+0x2c80>  // b.none
  405554:	cbz	x1, 40558c <scols_reset_iter@plt+0x2cac>
  405558:	ldrsb	w1, [x1]
  40555c:	cbz	w1, 40558c <scols_reset_iter@plt+0x2cac>
  405560:	ldr	w1, [x20]
  405564:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  405568:	mov	x3, x19
  40556c:	mov	x2, x21
  405570:	cmp	w1, #0x22
  405574:	ldr	w0, [x0, #840]
  405578:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  40557c:	add	x1, x1, #0x33
  405580:	b.ne	405588 <scols_reset_iter@plt+0x2ca8>  // b.any
  405584:	bl	4028a0 <err@plt>
  405588:	bl	402800 <errx@plt>
  40558c:	ldp	x19, x20, [sp, #16]
  405590:	ldr	x21, [sp, #32]
  405594:	ldp	x29, x30, [sp], #64
  405598:	ret
  40559c:	stp	x29, x30, [sp, #-64]!
  4055a0:	mov	x29, sp
  4055a4:	stp	x19, x20, [sp, #16]
  4055a8:	mov	x19, x0
  4055ac:	str	x21, [sp, #32]
  4055b0:	mov	x21, x1
  4055b4:	str	xzr, [sp, #56]
  4055b8:	bl	402850 <__errno_location@plt>
  4055bc:	str	wzr, [x0]
  4055c0:	mov	x20, x0
  4055c4:	cbz	x19, 405600 <scols_reset_iter@plt+0x2d20>
  4055c8:	ldrsb	w0, [x19]
  4055cc:	cbz	w0, 405600 <scols_reset_iter@plt+0x2d20>
  4055d0:	add	x1, sp, #0x38
  4055d4:	mov	x0, x19
  4055d8:	mov	w2, #0xa                   	// #10
  4055dc:	bl	4022b0 <strtoul@plt>
  4055e0:	ldr	w1, [x20]
  4055e4:	cbnz	w1, 405600 <scols_reset_iter@plt+0x2d20>
  4055e8:	ldr	x1, [sp, #56]
  4055ec:	cmp	x1, x19
  4055f0:	b.eq	405600 <scols_reset_iter@plt+0x2d20>  // b.none
  4055f4:	cbz	x1, 40562c <scols_reset_iter@plt+0x2d4c>
  4055f8:	ldrsb	w1, [x1]
  4055fc:	cbz	w1, 40562c <scols_reset_iter@plt+0x2d4c>
  405600:	ldr	w1, [x20]
  405604:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  405608:	mov	x3, x19
  40560c:	mov	x2, x21
  405610:	cmp	w1, #0x22
  405614:	ldr	w0, [x0, #840]
  405618:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  40561c:	add	x1, x1, #0x33
  405620:	b.ne	405628 <scols_reset_iter@plt+0x2d48>  // b.any
  405624:	bl	4028a0 <err@plt>
  405628:	bl	402800 <errx@plt>
  40562c:	ldp	x19, x20, [sp, #16]
  405630:	ldr	x21, [sp, #32]
  405634:	ldp	x29, x30, [sp], #64
  405638:	ret
  40563c:	stp	x29, x30, [sp, #-48]!
  405640:	mov	x29, sp
  405644:	stp	x19, x20, [sp, #16]
  405648:	mov	x19, x1
  40564c:	mov	x20, x0
  405650:	add	x1, sp, #0x28
  405654:	bl	405020 <scols_reset_iter@plt+0x2740>
  405658:	cbnz	w0, 40566c <scols_reset_iter@plt+0x2d8c>
  40565c:	ldp	x19, x20, [sp, #16]
  405660:	ldr	x0, [sp, #40]
  405664:	ldp	x29, x30, [sp], #48
  405668:	ret
  40566c:	bl	402850 <__errno_location@plt>
  405670:	mov	x1, x0
  405674:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17720>
  405678:	mov	x3, x20
  40567c:	ldr	w2, [x1]
  405680:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  405684:	ldr	w0, [x0, #840]
  405688:	cbz	w2, 405698 <scols_reset_iter@plt+0x2db8>
  40568c:	mov	x2, x19
  405690:	add	x1, x1, #0x33
  405694:	bl	4028a0 <err@plt>
  405698:	mov	x2, x19
  40569c:	add	x1, x1, #0x33
  4056a0:	bl	402800 <errx@plt>
  4056a4:	stp	x29, x30, [sp, #-32]!
  4056a8:	mov	x29, sp
  4056ac:	str	x19, [sp, #16]
  4056b0:	mov	x19, x1
  4056b4:	mov	x1, x2
  4056b8:	bl	405460 <scols_reset_iter@plt+0x2b80>
  4056bc:	fcvtzs	d1, d0
  4056c0:	mov	x0, #0x848000000000        	// #145685290680320
  4056c4:	movk	x0, #0x412e, lsl #48
  4056c8:	str	d1, [x19]
  4056cc:	scvtf	d1, d1
  4056d0:	fsub	d0, d0, d1
  4056d4:	fmov	d1, x0
  4056d8:	fmul	d0, d0, d1
  4056dc:	fcvtzs	d0, d0
  4056e0:	str	d0, [x19, #8]
  4056e4:	ldr	x19, [sp, #16]
  4056e8:	ldp	x29, x30, [sp], #32
  4056ec:	ret
  4056f0:	mov	w3, w0
  4056f4:	mov	x0, x1
  4056f8:	and	w1, w3, #0xf000
  4056fc:	cmp	w1, #0x4, lsl #12
  405700:	b.ne	405830 <scols_reset_iter@plt+0x2f50>  // b.any
  405704:	mov	w1, #0x64                  	// #100
  405708:	mov	w2, #0x1                   	// #1
  40570c:	strb	w1, [x0]
  405710:	and	x4, x2, #0xffff
  405714:	add	w5, w2, #0x1
  405718:	and	x5, x5, #0x3
  40571c:	tst	x3, #0x100
  405720:	mov	w6, #0x2d                  	// #45
  405724:	mov	w1, #0x72                  	// #114
  405728:	csel	w1, w1, w6, ne  // ne = any
  40572c:	tst	x3, #0x80
  405730:	strb	w1, [x0, x4]
  405734:	mov	w1, #0x77                  	// #119
  405738:	csel	w1, w1, w6, ne  // ne = any
  40573c:	strb	w1, [x0, x5]
  405740:	add	w4, w2, #0x2
  405744:	and	w1, w3, #0x40
  405748:	and	w4, w4, #0xffff
  40574c:	tbz	w3, #11, 405898 <scols_reset_iter@plt+0x2fb8>
  405750:	cmp	w1, #0x0
  405754:	mov	w5, #0x53                  	// #83
  405758:	mov	w1, #0x73                  	// #115
  40575c:	csel	w1, w1, w5, ne  // ne = any
  405760:	and	x4, x4, #0xffff
  405764:	add	w5, w2, #0x3
  405768:	and	x5, x5, #0x7
  40576c:	tst	x3, #0x20
  405770:	mov	w6, #0x2d                  	// #45
  405774:	strb	w1, [x0, x4]
  405778:	add	w4, w2, #0x4
  40577c:	and	x4, x4, #0xf
  405780:	mov	w1, #0x72                  	// #114
  405784:	csel	w1, w1, w6, ne  // ne = any
  405788:	tst	x3, #0x10
  40578c:	strb	w1, [x0, x5]
  405790:	mov	w1, #0x77                  	// #119
  405794:	csel	w1, w1, w6, ne  // ne = any
  405798:	strb	w1, [x0, x4]
  40579c:	add	w5, w2, #0x5
  4057a0:	and	w1, w3, #0x8
  4057a4:	and	w5, w5, #0xffff
  4057a8:	tbz	w3, #10, 4058a8 <scols_reset_iter@plt+0x2fc8>
  4057ac:	cmp	w1, #0x0
  4057b0:	mov	w4, #0x53                  	// #83
  4057b4:	mov	w1, #0x73                  	// #115
  4057b8:	csel	w1, w1, w4, ne  // ne = any
  4057bc:	and	x5, x5, #0xffff
  4057c0:	add	w4, w2, #0x6
  4057c4:	and	x4, x4, #0xf
  4057c8:	tst	x3, #0x4
  4057cc:	mov	w6, #0x2d                  	// #45
  4057d0:	strb	w1, [x0, x5]
  4057d4:	add	w5, w2, #0x7
  4057d8:	and	x5, x5, #0xf
  4057dc:	mov	w1, #0x72                  	// #114
  4057e0:	csel	w1, w1, w6, ne  // ne = any
  4057e4:	tst	x3, #0x2
  4057e8:	strb	w1, [x0, x4]
  4057ec:	mov	w1, #0x77                  	// #119
  4057f0:	csel	w1, w1, w6, ne  // ne = any
  4057f4:	strb	w1, [x0, x5]
  4057f8:	add	w4, w2, #0x8
  4057fc:	and	w1, w3, #0x1
  405800:	and	w4, w4, #0xffff
  405804:	tbz	w3, #9, 4058b8 <scols_reset_iter@plt+0x2fd8>
  405808:	cmp	w1, #0x0
  40580c:	mov	w3, #0x54                  	// #84
  405810:	mov	w1, #0x74                  	// #116
  405814:	csel	w1, w1, w3, ne  // ne = any
  405818:	and	x3, x4, #0xffff
  40581c:	add	w2, w2, #0x9
  405820:	and	x2, x2, #0xffff
  405824:	strb	w1, [x0, x3]
  405828:	strb	wzr, [x0, x2]
  40582c:	ret
  405830:	cmp	w1, #0xa, lsl #12
  405834:	b.ne	405840 <scols_reset_iter@plt+0x2f60>  // b.any
  405838:	mov	w1, #0x6c                  	// #108
  40583c:	b	405708 <scols_reset_iter@plt+0x2e28>
  405840:	cmp	w1, #0x2, lsl #12
  405844:	b.ne	405850 <scols_reset_iter@plt+0x2f70>  // b.any
  405848:	mov	w1, #0x63                  	// #99
  40584c:	b	405708 <scols_reset_iter@plt+0x2e28>
  405850:	cmp	w1, #0x6, lsl #12
  405854:	b.ne	405860 <scols_reset_iter@plt+0x2f80>  // b.any
  405858:	mov	w1, #0x62                  	// #98
  40585c:	b	405708 <scols_reset_iter@plt+0x2e28>
  405860:	cmp	w1, #0xc, lsl #12
  405864:	b.ne	405870 <scols_reset_iter@plt+0x2f90>  // b.any
  405868:	mov	w1, #0x73                  	// #115
  40586c:	b	405708 <scols_reset_iter@plt+0x2e28>
  405870:	cmp	w1, #0x1, lsl #12
  405874:	b.ne	405880 <scols_reset_iter@plt+0x2fa0>  // b.any
  405878:	mov	w1, #0x70                  	// #112
  40587c:	b	405708 <scols_reset_iter@plt+0x2e28>
  405880:	cmp	w1, #0x8, lsl #12
  405884:	b.ne	405890 <scols_reset_iter@plt+0x2fb0>  // b.any
  405888:	mov	w1, #0x2d                  	// #45
  40588c:	b	405708 <scols_reset_iter@plt+0x2e28>
  405890:	mov	w2, #0x0                   	// #0
  405894:	b	405710 <scols_reset_iter@plt+0x2e30>
  405898:	cmp	w1, #0x0
  40589c:	mov	w1, #0x78                  	// #120
  4058a0:	csel	w1, w1, w6, ne  // ne = any
  4058a4:	b	405760 <scols_reset_iter@plt+0x2e80>
  4058a8:	cmp	w1, #0x0
  4058ac:	mov	w1, #0x78                  	// #120
  4058b0:	csel	w1, w1, w6, ne  // ne = any
  4058b4:	b	4057bc <scols_reset_iter@plt+0x2edc>
  4058b8:	cmp	w1, #0x0
  4058bc:	mov	w1, #0x78                  	// #120
  4058c0:	csel	w1, w1, w6, ne  // ne = any
  4058c4:	b	405818 <scols_reset_iter@plt+0x2f38>
  4058c8:	stp	x29, x30, [sp, #-96]!
  4058cc:	mov	x29, sp
  4058d0:	stp	x19, x20, [sp, #16]
  4058d4:	stp	x21, x22, [sp, #32]
  4058d8:	add	x21, sp, #0x38
  4058dc:	tbz	w0, #1, 4059f0 <scols_reset_iter@plt+0x3110>
  4058e0:	add	x4, x21, #0x1
  4058e4:	mov	w2, #0x20                  	// #32
  4058e8:	strb	w2, [sp, #56]
  4058ec:	mov	w2, #0xa                   	// #10
  4058f0:	mov	x3, #0x1                   	// #1
  4058f4:	lsl	x5, x3, x2
  4058f8:	cmp	x1, x5
  4058fc:	b.cc	40590c <scols_reset_iter@plt+0x302c>  // b.lo, b.ul, b.last
  405900:	add	w2, w2, #0xa
  405904:	cmp	w2, #0x46
  405908:	b.ne	4058f4 <scols_reset_iter@plt+0x3014>  // b.any
  40590c:	subs	w5, w2, #0xa
  405910:	b.eq	4059f8 <scols_reset_iter@plt+0x3118>  // b.none
  405914:	mov	w3, #0xa                   	// #10
  405918:	udiv	w3, w5, w3
  40591c:	sxtw	x3, w3
  405920:	adrp	x6, 407000 <scols_reset_iter@plt+0x4720>
  405924:	add	x6, x6, #0xde3
  405928:	ldrsb	w6, [x3, x6]
  40592c:	cbz	w5, 405a00 <scols_reset_iter@plt+0x3120>
  405930:	mov	x19, #0xffffffffffffffff    	// #-1
  405934:	lsr	x20, x1, x5
  405938:	lsl	x19, x19, x5
  40593c:	bic	x1, x1, x19
  405940:	mov	x3, x4
  405944:	strb	w6, [x3], #1
  405948:	tbz	w0, #0, 405960 <scols_reset_iter@plt+0x3080>
  40594c:	cmp	w6, #0x42
  405950:	b.eq	405960 <scols_reset_iter@plt+0x3080>  // b.none
  405954:	add	x3, x4, #0x3
  405958:	mov	w5, #0x4269                	// #17001
  40595c:	sturh	w5, [x4, #1]
  405960:	strb	wzr, [x3]
  405964:	add	x22, sp, #0x40
  405968:	cbz	x1, 405a24 <scols_reset_iter@plt+0x3144>
  40596c:	sub	w2, w2, #0x14
  405970:	lsr	x1, x1, x2
  405974:	tbz	w0, #2, 405a0c <scols_reset_iter@plt+0x312c>
  405978:	add	x1, x1, #0x5
  40597c:	mov	x0, #0xa                   	// #10
  405980:	udiv	x19, x1, x0
  405984:	udiv	x1, x19, x0
  405988:	msub	x0, x1, x0, x19
  40598c:	cmp	x0, #0x0
  405990:	csel	x19, x19, x1, ne  // ne = any
  405994:	cbz	x19, 405a24 <scols_reset_iter@plt+0x3144>
  405998:	bl	402410 <localeconv@plt>
  40599c:	cbz	x0, 4059b0 <scols_reset_iter@plt+0x30d0>
  4059a0:	ldr	x4, [x0]
  4059a4:	cbz	x4, 4059b0 <scols_reset_iter@plt+0x30d0>
  4059a8:	ldrsb	w1, [x4]
  4059ac:	cbnz	w1, 4059b8 <scols_reset_iter@plt+0x30d8>
  4059b0:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  4059b4:	add	x4, x0, #0xde1
  4059b8:	adrp	x2, 407000 <scols_reset_iter@plt+0x4720>
  4059bc:	mov	x6, x21
  4059c0:	mov	x5, x19
  4059c4:	mov	w3, w20
  4059c8:	add	x2, x2, #0xdeb
  4059cc:	mov	x0, x22
  4059d0:	mov	x1, #0x20                  	// #32
  4059d4:	bl	402400 <snprintf@plt>
  4059d8:	mov	x0, x22
  4059dc:	bl	402550 <strdup@plt>
  4059e0:	ldp	x19, x20, [sp, #16]
  4059e4:	ldp	x21, x22, [sp, #32]
  4059e8:	ldp	x29, x30, [sp], #96
  4059ec:	ret
  4059f0:	mov	x4, x21
  4059f4:	b	4058ec <scols_reset_iter@plt+0x300c>
  4059f8:	mov	x3, #0x0                   	// #0
  4059fc:	b	405920 <scols_reset_iter@plt+0x3040>
  405a00:	mov	w20, w1
  405a04:	mov	x1, #0x0                   	// #0
  405a08:	b	405940 <scols_reset_iter@plt+0x3060>
  405a0c:	add	x1, x1, #0x32
  405a10:	mov	x19, #0x64                  	// #100
  405a14:	udiv	x19, x1, x19
  405a18:	cmp	x19, #0xa
  405a1c:	b.ne	405994 <scols_reset_iter@plt+0x30b4>  // b.any
  405a20:	add	w20, w20, #0x1
  405a24:	mov	x4, x21
  405a28:	mov	w3, w20
  405a2c:	mov	x0, x22
  405a30:	adrp	x2, 407000 <scols_reset_iter@plt+0x4720>
  405a34:	mov	x1, #0x20                  	// #32
  405a38:	add	x2, x2, #0xdf5
  405a3c:	bl	402400 <snprintf@plt>
  405a40:	b	4059d8 <scols_reset_iter@plt+0x30f8>
  405a44:	cbnz	x0, 405a68 <scols_reset_iter@plt+0x3188>
  405a48:	mov	w0, #0xffffffff            	// #-1
  405a4c:	ret
  405a50:	mov	w0, #0xffffffff            	// #-1
  405a54:	ldp	x19, x20, [sp, #16]
  405a58:	ldp	x21, x22, [sp, #32]
  405a5c:	ldp	x23, x24, [sp, #48]
  405a60:	ldp	x29, x30, [sp], #64
  405a64:	ret
  405a68:	stp	x29, x30, [sp, #-64]!
  405a6c:	mov	x29, sp
  405a70:	stp	x19, x20, [sp, #16]
  405a74:	mov	x19, x0
  405a78:	stp	x21, x22, [sp, #32]
  405a7c:	stp	x23, x24, [sp, #48]
  405a80:	ldrsb	w0, [x0]
  405a84:	cbz	w0, 405a50 <scols_reset_iter@plt+0x3170>
  405a88:	cmp	x1, #0x0
  405a8c:	mov	x22, x1
  405a90:	mov	x23, x2
  405a94:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  405a98:	b.eq	405a50 <scols_reset_iter@plt+0x3170>  // b.none
  405a9c:	mov	x24, x3
  405aa0:	cbz	x3, 405a50 <scols_reset_iter@plt+0x3170>
  405aa4:	mov	x0, #0x0                   	// #0
  405aa8:	mov	x20, #0x0                   	// #0
  405aac:	ldrsb	w1, [x19]
  405ab0:	cbnz	w1, 405abc <scols_reset_iter@plt+0x31dc>
  405ab4:	mov	x0, x20
  405ab8:	b	405a54 <scols_reset_iter@plt+0x3174>
  405abc:	cmp	x23, x20
  405ac0:	b.ls	405b24 <scols_reset_iter@plt+0x3244>  // b.plast
  405ac4:	cmp	x0, #0x0
  405ac8:	csel	x0, x0, x19, ne  // ne = any
  405acc:	cmp	w1, #0x2c
  405ad0:	ldrsb	w1, [x19, #1]
  405ad4:	csel	x21, x19, xzr, eq  // eq = none
  405ad8:	cbnz	w1, 405b18 <scols_reset_iter@plt+0x3238>
  405adc:	add	x21, x19, #0x1
  405ae0:	cmp	x0, x21
  405ae4:	b.cs	405a50 <scols_reset_iter@plt+0x3170>  // b.hs, b.nlast
  405ae8:	sub	x1, x21, x0
  405aec:	blr	x24
  405af0:	mov	w1, w0
  405af4:	cmn	w0, #0x1
  405af8:	b.eq	405a50 <scols_reset_iter@plt+0x3170>  // b.none
  405afc:	str	w1, [x22, x20, lsl #2]
  405b00:	add	x0, x20, #0x1
  405b04:	ldrsb	w1, [x21]
  405b08:	cbz	w1, 405a54 <scols_reset_iter@plt+0x3174>
  405b0c:	mov	x20, x0
  405b10:	mov	x0, #0x0                   	// #0
  405b14:	b	405b1c <scols_reset_iter@plt+0x323c>
  405b18:	cbnz	x21, 405ae0 <scols_reset_iter@plt+0x3200>
  405b1c:	add	x19, x19, #0x1
  405b20:	b	405aac <scols_reset_iter@plt+0x31cc>
  405b24:	mov	w0, #0xfffffffe            	// #-2
  405b28:	b	405a54 <scols_reset_iter@plt+0x3174>
  405b2c:	cbz	x0, 405ba0 <scols_reset_iter@plt+0x32c0>
  405b30:	stp	x29, x30, [sp, #-32]!
  405b34:	mov	x29, sp
  405b38:	str	x19, [sp, #16]
  405b3c:	mov	x19, x3
  405b40:	mov	x3, x4
  405b44:	ldrsb	w4, [x0]
  405b48:	cbz	w4, 405ba8 <scols_reset_iter@plt+0x32c8>
  405b4c:	cbz	x19, 405ba8 <scols_reset_iter@plt+0x32c8>
  405b50:	ldr	x5, [x19]
  405b54:	cmp	x5, x2
  405b58:	b.hi	405ba8 <scols_reset_iter@plt+0x32c8>  // b.pmore
  405b5c:	cmp	w4, #0x2b
  405b60:	b.ne	405b98 <scols_reset_iter@plt+0x32b8>  // b.any
  405b64:	add	x0, x0, #0x1
  405b68:	ldr	x4, [x19]
  405b6c:	sub	x2, x2, x4
  405b70:	add	x1, x1, x4, lsl #2
  405b74:	bl	405a44 <scols_reset_iter@plt+0x3164>
  405b78:	cmp	w0, #0x0
  405b7c:	b.le	405b8c <scols_reset_iter@plt+0x32ac>
  405b80:	ldr	x1, [x19]
  405b84:	add	x1, x1, w0, sxtw
  405b88:	str	x1, [x19]
  405b8c:	ldr	x19, [sp, #16]
  405b90:	ldp	x29, x30, [sp], #32
  405b94:	ret
  405b98:	str	xzr, [x19]
  405b9c:	b	405b68 <scols_reset_iter@plt+0x3288>
  405ba0:	mov	w0, #0xffffffff            	// #-1
  405ba4:	ret
  405ba8:	mov	w0, #0xffffffff            	// #-1
  405bac:	b	405b8c <scols_reset_iter@plt+0x32ac>
  405bb0:	cmp	x0, #0x0
  405bb4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  405bb8:	b.eq	405c70 <scols_reset_iter@plt+0x3390>  // b.none
  405bbc:	stp	x29, x30, [sp, #-64]!
  405bc0:	mov	x29, sp
  405bc4:	stp	x19, x20, [sp, #16]
  405bc8:	mov	x20, x1
  405bcc:	stp	x21, x22, [sp, #32]
  405bd0:	str	x23, [sp, #48]
  405bd4:	cbz	x1, 405c78 <scols_reset_iter@plt+0x3398>
  405bd8:	mov	x22, x2
  405bdc:	mov	x19, x0
  405be0:	mov	w23, #0x1                   	// #1
  405be4:	mov	x0, #0x0                   	// #0
  405be8:	ldrsb	w1, [x19]
  405bec:	cbz	w1, 405c44 <scols_reset_iter@plt+0x3364>
  405bf0:	cmp	x0, #0x0
  405bf4:	csel	x0, x0, x19, ne  // ne = any
  405bf8:	cmp	w1, #0x2c
  405bfc:	ldrsb	w1, [x19, #1]
  405c00:	csel	x21, x19, xzr, eq  // eq = none
  405c04:	cbnz	w1, 405c5c <scols_reset_iter@plt+0x337c>
  405c08:	add	x21, x19, #0x1
  405c0c:	cmp	x0, x21
  405c10:	b.cs	405c80 <scols_reset_iter@plt+0x33a0>  // b.hs, b.nlast
  405c14:	sub	x1, x21, x0
  405c18:	blr	x22
  405c1c:	tbnz	w0, #31, 405c48 <scols_reset_iter@plt+0x3368>
  405c20:	asr	w1, w0, #3
  405c24:	and	w3, w0, #0x7
  405c28:	sxtw	x1, w1
  405c2c:	lsl	w3, w23, w3
  405c30:	ldrb	w0, [x20, x1]
  405c34:	orr	w3, w3, w0
  405c38:	strb	w3, [x20, x1]
  405c3c:	ldrsb	w0, [x21]
  405c40:	cbnz	w0, 405c68 <scols_reset_iter@plt+0x3388>
  405c44:	mov	w0, #0x0                   	// #0
  405c48:	ldp	x19, x20, [sp, #16]
  405c4c:	ldp	x21, x22, [sp, #32]
  405c50:	ldr	x23, [sp, #48]
  405c54:	ldp	x29, x30, [sp], #64
  405c58:	ret
  405c5c:	cbnz	x21, 405c0c <scols_reset_iter@plt+0x332c>
  405c60:	add	x19, x19, #0x1
  405c64:	b	405be8 <scols_reset_iter@plt+0x3308>
  405c68:	mov	x0, #0x0                   	// #0
  405c6c:	b	405c60 <scols_reset_iter@plt+0x3380>
  405c70:	mov	w0, #0xffffffea            	// #-22
  405c74:	ret
  405c78:	mov	w0, #0xffffffea            	// #-22
  405c7c:	b	405c48 <scols_reset_iter@plt+0x3368>
  405c80:	mov	w0, #0xffffffff            	// #-1
  405c84:	b	405c48 <scols_reset_iter@plt+0x3368>
  405c88:	cmp	x0, #0x0
  405c8c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  405c90:	b.eq	405d2c <scols_reset_iter@plt+0x344c>  // b.none
  405c94:	stp	x29, x30, [sp, #-48]!
  405c98:	mov	x29, sp
  405c9c:	stp	x19, x20, [sp, #16]
  405ca0:	mov	x20, x1
  405ca4:	stp	x21, x22, [sp, #32]
  405ca8:	cbz	x1, 405d34 <scols_reset_iter@plt+0x3454>
  405cac:	mov	x22, x2
  405cb0:	mov	x19, x0
  405cb4:	mov	x0, #0x0                   	// #0
  405cb8:	ldrsb	w1, [x19]
  405cbc:	cbz	w1, 405d04 <scols_reset_iter@plt+0x3424>
  405cc0:	cmp	x0, #0x0
  405cc4:	csel	x0, x0, x19, ne  // ne = any
  405cc8:	cmp	w1, #0x2c
  405ccc:	ldrsb	w1, [x19, #1]
  405cd0:	csel	x21, x19, xzr, eq  // eq = none
  405cd4:	cbnz	w1, 405d18 <scols_reset_iter@plt+0x3438>
  405cd8:	add	x21, x19, #0x1
  405cdc:	cmp	x0, x21
  405ce0:	b.cs	405d3c <scols_reset_iter@plt+0x345c>  // b.hs, b.nlast
  405ce4:	sub	x1, x21, x0
  405ce8:	blr	x22
  405cec:	tbnz	x0, #63, 405d08 <scols_reset_iter@plt+0x3428>
  405cf0:	ldr	x1, [x20]
  405cf4:	orr	x0, x1, x0
  405cf8:	str	x0, [x20]
  405cfc:	ldrsb	w0, [x21]
  405d00:	cbnz	w0, 405d24 <scols_reset_iter@plt+0x3444>
  405d04:	mov	w0, #0x0                   	// #0
  405d08:	ldp	x19, x20, [sp, #16]
  405d0c:	ldp	x21, x22, [sp, #32]
  405d10:	ldp	x29, x30, [sp], #48
  405d14:	ret
  405d18:	cbnz	x21, 405cdc <scols_reset_iter@plt+0x33fc>
  405d1c:	add	x19, x19, #0x1
  405d20:	b	405cb8 <scols_reset_iter@plt+0x33d8>
  405d24:	mov	x0, #0x0                   	// #0
  405d28:	b	405d1c <scols_reset_iter@plt+0x343c>
  405d2c:	mov	w0, #0xffffffea            	// #-22
  405d30:	ret
  405d34:	mov	w0, #0xffffffea            	// #-22
  405d38:	b	405d08 <scols_reset_iter@plt+0x3428>
  405d3c:	mov	w0, #0xffffffff            	// #-1
  405d40:	b	405d08 <scols_reset_iter@plt+0x3428>
  405d44:	stp	x29, x30, [sp, #-80]!
  405d48:	mov	x29, sp
  405d4c:	stp	x19, x20, [sp, #16]
  405d50:	stp	x21, x22, [sp, #32]
  405d54:	stp	x23, x24, [sp, #48]
  405d58:	str	xzr, [sp, #72]
  405d5c:	cbnz	x0, 405d78 <scols_reset_iter@plt+0x3498>
  405d60:	mov	w0, #0x0                   	// #0
  405d64:	ldp	x19, x20, [sp, #16]
  405d68:	ldp	x21, x22, [sp, #32]
  405d6c:	ldp	x23, x24, [sp, #48]
  405d70:	ldp	x29, x30, [sp], #80
  405d74:	ret
  405d78:	str	w3, [x1]
  405d7c:	mov	x19, x0
  405d80:	str	w3, [x2]
  405d84:	mov	x23, x1
  405d88:	mov	x21, x2
  405d8c:	mov	w22, w3
  405d90:	bl	402850 <__errno_location@plt>
  405d94:	str	wzr, [x0]
  405d98:	mov	x20, x0
  405d9c:	add	x24, sp, #0x48
  405da0:	ldrsb	w0, [x19]
  405da4:	cmp	w0, #0x3a
  405da8:	b.ne	405dec <scols_reset_iter@plt+0x350c>  // b.any
  405dac:	add	x19, x19, #0x1
  405db0:	mov	x1, x24
  405db4:	mov	x0, x19
  405db8:	mov	w2, #0xa                   	// #10
  405dbc:	bl	402670 <strtol@plt>
  405dc0:	str	w0, [x21]
  405dc4:	ldr	w0, [x20]
  405dc8:	cbnz	w0, 405de4 <scols_reset_iter@plt+0x3504>
  405dcc:	ldr	x0, [sp, #72]
  405dd0:	cbz	x0, 405de4 <scols_reset_iter@plt+0x3504>
  405dd4:	ldrsb	w1, [x0]
  405dd8:	cbnz	w1, 405de4 <scols_reset_iter@plt+0x3504>
  405ddc:	cmp	x0, x19
  405de0:	b.ne	405d60 <scols_reset_iter@plt+0x3480>  // b.any
  405de4:	mov	w0, #0xffffffff            	// #-1
  405de8:	b	405d64 <scols_reset_iter@plt+0x3484>
  405dec:	mov	x1, x24
  405df0:	mov	x0, x19
  405df4:	mov	w2, #0xa                   	// #10
  405df8:	bl	402670 <strtol@plt>
  405dfc:	str	w0, [x23]
  405e00:	str	w0, [x21]
  405e04:	ldr	w0, [x20]
  405e08:	cbnz	w0, 405de4 <scols_reset_iter@plt+0x3504>
  405e0c:	ldr	x4, [sp, #72]
  405e10:	cbz	x4, 405de4 <scols_reset_iter@plt+0x3504>
  405e14:	cmp	x4, x19
  405e18:	b.eq	405de4 <scols_reset_iter@plt+0x3504>  // b.none
  405e1c:	ldrsb	w1, [x4]
  405e20:	cmp	w1, #0x3a
  405e24:	b.ne	405e38 <scols_reset_iter@plt+0x3558>  // b.any
  405e28:	ldrsb	w1, [x4, #1]
  405e2c:	cbnz	w1, 405e40 <scols_reset_iter@plt+0x3560>
  405e30:	str	w22, [x21]
  405e34:	b	405d64 <scols_reset_iter@plt+0x3484>
  405e38:	cmp	w1, #0x2d
  405e3c:	b.ne	405d60 <scols_reset_iter@plt+0x3480>  // b.any
  405e40:	add	x19, x4, #0x1
  405e44:	str	wzr, [x20]
  405e48:	str	xzr, [sp, #72]
  405e4c:	b	405db0 <scols_reset_iter@plt+0x34d0>
  405e50:	stp	x29, x30, [sp, #-80]!
  405e54:	mov	x29, sp
  405e58:	stp	x19, x20, [sp, #16]
  405e5c:	mov	x19, x1
  405e60:	stp	x21, x22, [sp, #32]
  405e64:	add	x22, sp, #0x40
  405e68:	str	x23, [sp, #48]
  405e6c:	add	x23, sp, #0x48
  405e70:	cmp	x0, #0x0
  405e74:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  405e78:	b.ne	405e84 <scols_reset_iter@plt+0x35a4>  // b.any
  405e7c:	mov	w0, #0x0                   	// #0
  405e80:	b	405f0c <scols_reset_iter@plt+0x362c>
  405e84:	mov	x1, x22
  405e88:	bl	404ac4 <scols_reset_iter@plt+0x21e4>
  405e8c:	mov	x1, x23
  405e90:	mov	x20, x0
  405e94:	mov	x0, x19
  405e98:	bl	404ac4 <scols_reset_iter@plt+0x21e4>
  405e9c:	mov	x19, x0
  405ea0:	ldp	x21, x0, [sp, #64]
  405ea4:	adds	x1, x21, x0
  405ea8:	b.eq	405f08 <scols_reset_iter@plt+0x3628>  // b.none
  405eac:	cmp	x1, #0x1
  405eb0:	b.ne	405ed4 <scols_reset_iter@plt+0x35f4>  // b.any
  405eb4:	cbz	x20, 405ec4 <scols_reset_iter@plt+0x35e4>
  405eb8:	ldrsb	w1, [x20]
  405ebc:	cmp	w1, #0x2f
  405ec0:	b.eq	405f08 <scols_reset_iter@plt+0x3628>  // b.none
  405ec4:	cbz	x19, 405e7c <scols_reset_iter@plt+0x359c>
  405ec8:	ldrsb	w1, [x19]
  405ecc:	cmp	w1, #0x2f
  405ed0:	b.eq	405f08 <scols_reset_iter@plt+0x3628>  // b.none
  405ed4:	cmp	x20, #0x0
  405ed8:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  405edc:	b.eq	405e7c <scols_reset_iter@plt+0x359c>  // b.none
  405ee0:	cmp	x21, x0
  405ee4:	b.ne	405e7c <scols_reset_iter@plt+0x359c>  // b.any
  405ee8:	mov	x2, x21
  405eec:	mov	x1, x19
  405ef0:	mov	x0, x20
  405ef4:	bl	4024a0 <strncmp@plt>
  405ef8:	cbnz	w0, 405e7c <scols_reset_iter@plt+0x359c>
  405efc:	add	x0, x20, x21
  405f00:	add	x19, x19, x21
  405f04:	b	405e70 <scols_reset_iter@plt+0x3590>
  405f08:	mov	w0, #0x1                   	// #1
  405f0c:	ldp	x19, x20, [sp, #16]
  405f10:	ldp	x21, x22, [sp, #32]
  405f14:	ldr	x23, [sp, #48]
  405f18:	ldp	x29, x30, [sp], #80
  405f1c:	ret
  405f20:	stp	x29, x30, [sp, #-64]!
  405f24:	mov	x29, sp
  405f28:	stp	x19, x20, [sp, #16]
  405f2c:	stp	x21, x22, [sp, #32]
  405f30:	mov	x21, x1
  405f34:	orr	x1, x0, x1
  405f38:	stp	x23, x24, [sp, #48]
  405f3c:	cbnz	x1, 405f5c <scols_reset_iter@plt+0x367c>
  405f40:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  405f44:	add	x0, x0, #0x5eb
  405f48:	ldp	x19, x20, [sp, #16]
  405f4c:	ldp	x21, x22, [sp, #32]
  405f50:	ldp	x23, x24, [sp, #48]
  405f54:	ldp	x29, x30, [sp], #64
  405f58:	b	402550 <strdup@plt>
  405f5c:	mov	x23, x0
  405f60:	mov	x22, x2
  405f64:	cbnz	x0, 405f84 <scols_reset_iter@plt+0x36a4>
  405f68:	mov	x0, x21
  405f6c:	mov	x1, x2
  405f70:	ldp	x19, x20, [sp, #16]
  405f74:	ldp	x21, x22, [sp, #32]
  405f78:	ldp	x23, x24, [sp, #48]
  405f7c:	ldp	x29, x30, [sp], #64
  405f80:	b	402740 <strndup@plt>
  405f84:	cbz	x21, 405f48 <scols_reset_iter@plt+0x3668>
  405f88:	bl	4022c0 <strlen@plt>
  405f8c:	mov	x20, x0
  405f90:	mvn	x0, x0
  405f94:	cmp	x22, x0
  405f98:	b.hi	405fe8 <scols_reset_iter@plt+0x3708>  // b.pmore
  405f9c:	add	x24, x22, x20
  405fa0:	add	x0, x24, #0x1
  405fa4:	bl	402470 <malloc@plt>
  405fa8:	mov	x19, x0
  405fac:	cbz	x0, 405fd0 <scols_reset_iter@plt+0x36f0>
  405fb0:	mov	x2, x20
  405fb4:	mov	x1, x23
  405fb8:	bl	402290 <memcpy@plt>
  405fbc:	mov	x2, x22
  405fc0:	mov	x1, x21
  405fc4:	add	x0, x19, x20
  405fc8:	bl	402290 <memcpy@plt>
  405fcc:	strb	wzr, [x19, x24]
  405fd0:	mov	x0, x19
  405fd4:	ldp	x19, x20, [sp, #16]
  405fd8:	ldp	x21, x22, [sp, #32]
  405fdc:	ldp	x23, x24, [sp, #48]
  405fe0:	ldp	x29, x30, [sp], #64
  405fe4:	ret
  405fe8:	mov	x19, #0x0                   	// #0
  405fec:	b	405fd0 <scols_reset_iter@plt+0x36f0>
  405ff0:	stp	x29, x30, [sp, #-32]!
  405ff4:	mov	x29, sp
  405ff8:	stp	x19, x20, [sp, #16]
  405ffc:	mov	x20, x0
  406000:	mov	x19, x1
  406004:	cbz	x1, 406028 <scols_reset_iter@plt+0x3748>
  406008:	mov	x0, x1
  40600c:	bl	4022c0 <strlen@plt>
  406010:	mov	x2, x0
  406014:	mov	x1, x19
  406018:	mov	x0, x20
  40601c:	ldp	x19, x20, [sp, #16]
  406020:	ldp	x29, x30, [sp], #32
  406024:	b	405f20 <scols_reset_iter@plt+0x3640>
  406028:	mov	x2, #0x0                   	// #0
  40602c:	b	406014 <scols_reset_iter@plt+0x3734>
  406030:	stp	x29, x30, [sp, #-288]!
  406034:	mov	x29, sp
  406038:	str	x19, [sp, #16]
  40603c:	mov	x19, x0
  406040:	add	x0, sp, #0x120
  406044:	stp	x0, x0, [sp, #80]
  406048:	add	x0, sp, #0xf0
  40604c:	str	x0, [sp, #96]
  406050:	mov	w0, #0xffffffd0            	// #-48
  406054:	str	w0, [sp, #104]
  406058:	mov	w0, #0xffffff80            	// #-128
  40605c:	str	w0, [sp, #108]
  406060:	add	x0, sp, #0x48
  406064:	stp	x2, x3, [sp, #240]
  406068:	ldp	x2, x3, [sp, #80]
  40606c:	stp	x2, x3, [sp, #32]
  406070:	ldp	x2, x3, [sp, #96]
  406074:	stp	x2, x3, [sp, #48]
  406078:	add	x2, sp, #0x20
  40607c:	str	q0, [sp, #112]
  406080:	str	q1, [sp, #128]
  406084:	str	q2, [sp, #144]
  406088:	str	q3, [sp, #160]
  40608c:	str	q4, [sp, #176]
  406090:	str	q5, [sp, #192]
  406094:	str	q6, [sp, #208]
  406098:	str	q7, [sp, #224]
  40609c:	stp	x4, x5, [sp, #256]
  4060a0:	stp	x6, x7, [sp, #272]
  4060a4:	bl	402710 <vasprintf@plt>
  4060a8:	tbnz	w0, #31, 4060d8 <scols_reset_iter@plt+0x37f8>
  4060ac:	ldr	x1, [sp, #72]
  4060b0:	sxtw	x2, w0
  4060b4:	mov	x0, x19
  4060b8:	bl	405f20 <scols_reset_iter@plt+0x3640>
  4060bc:	mov	x19, x0
  4060c0:	ldr	x0, [sp, #72]
  4060c4:	bl	4026b0 <free@plt>
  4060c8:	mov	x0, x19
  4060cc:	ldr	x19, [sp, #16]
  4060d0:	ldp	x29, x30, [sp], #288
  4060d4:	ret
  4060d8:	mov	x19, #0x0                   	// #0
  4060dc:	b	4060c8 <scols_reset_iter@plt+0x37e8>
  4060e0:	stp	x29, x30, [sp, #-80]!
  4060e4:	mov	x29, sp
  4060e8:	stp	x23, x24, [sp, #48]
  4060ec:	ldr	x23, [x0]
  4060f0:	stp	x19, x20, [sp, #16]
  4060f4:	mov	x20, x0
  4060f8:	stp	x21, x22, [sp, #32]
  4060fc:	ldrsb	w0, [x23]
  406100:	cbz	w0, 40612c <scols_reset_iter@plt+0x384c>
  406104:	mov	x0, x23
  406108:	mov	x22, x1
  40610c:	mov	x21, x2
  406110:	mov	w24, w3
  406114:	mov	x1, x2
  406118:	bl	402750 <strspn@plt>
  40611c:	add	x19, x23, x0
  406120:	ldrsb	w23, [x23, x0]
  406124:	cbnz	w23, 406134 <scols_reset_iter@plt+0x3854>
  406128:	str	x19, [x20]
  40612c:	mov	x19, #0x0                   	// #0
  406130:	b	4061a0 <scols_reset_iter@plt+0x38c0>
  406134:	cbz	w24, 4061e8 <scols_reset_iter@plt+0x3908>
  406138:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  40613c:	mov	w1, w23
  406140:	add	x0, x0, #0xdfa
  406144:	bl	402760 <strchr@plt>
  406148:	cbz	x0, 4061b8 <scols_reset_iter@plt+0x38d8>
  40614c:	add	x1, sp, #0x48
  406150:	add	x24, x19, #0x1
  406154:	mov	x0, x24
  406158:	strb	w23, [sp, #72]
  40615c:	strb	wzr, [sp, #73]
  406160:	bl	404b2c <scols_reset_iter@plt+0x224c>
  406164:	add	x1, x19, x0
  406168:	str	x0, [x22]
  40616c:	ldrsb	w1, [x1, #1]
  406170:	cbz	w1, 406128 <scols_reset_iter@plt+0x3848>
  406174:	cmp	w23, w1
  406178:	b.ne	406128 <scols_reset_iter@plt+0x3848>  // b.any
  40617c:	add	x0, x0, #0x2
  406180:	add	x22, x19, x0
  406184:	ldrsb	w1, [x19, x0]
  406188:	cbz	w1, 406198 <scols_reset_iter@plt+0x38b8>
  40618c:	mov	x0, x21
  406190:	bl	402760 <strchr@plt>
  406194:	cbz	x0, 406128 <scols_reset_iter@plt+0x3848>
  406198:	mov	x19, x24
  40619c:	str	x22, [x20]
  4061a0:	mov	x0, x19
  4061a4:	ldp	x19, x20, [sp, #16]
  4061a8:	ldp	x21, x22, [sp, #32]
  4061ac:	ldp	x23, x24, [sp, #48]
  4061b0:	ldp	x29, x30, [sp], #80
  4061b4:	ret
  4061b8:	mov	x1, x21
  4061bc:	mov	x0, x19
  4061c0:	bl	404b2c <scols_reset_iter@plt+0x224c>
  4061c4:	str	x0, [x22]
  4061c8:	add	x22, x19, x0
  4061cc:	ldrsb	w1, [x19, x0]
  4061d0:	cbz	w1, 4061e0 <scols_reset_iter@plt+0x3900>
  4061d4:	mov	x0, x21
  4061d8:	bl	402760 <strchr@plt>
  4061dc:	cbz	x0, 406128 <scols_reset_iter@plt+0x3848>
  4061e0:	str	x22, [x20]
  4061e4:	b	4061a0 <scols_reset_iter@plt+0x38c0>
  4061e8:	mov	x1, x21
  4061ec:	mov	x0, x19
  4061f0:	bl	402820 <strcspn@plt>
  4061f4:	str	x0, [x22]
  4061f8:	add	x0, x19, x0
  4061fc:	str	x0, [x20]
  406200:	b	4061a0 <scols_reset_iter@plt+0x38c0>
  406204:	stp	x29, x30, [sp, #-32]!
  406208:	mov	x29, sp
  40620c:	str	x19, [sp, #16]
  406210:	mov	x19, x0
  406214:	mov	x0, x19
  406218:	bl	4024d0 <fgetc@plt>
  40621c:	cmn	w0, #0x1
  406220:	b.eq	40623c <scols_reset_iter@plt+0x395c>  // b.none
  406224:	cmp	w0, #0xa
  406228:	b.ne	406214 <scols_reset_iter@plt+0x3934>  // b.any
  40622c:	mov	w0, #0x0                   	// #0
  406230:	ldr	x19, [sp, #16]
  406234:	ldp	x29, x30, [sp], #32
  406238:	ret
  40623c:	mov	w0, #0x1                   	// #1
  406240:	b	406230 <scols_reset_iter@plt+0x3950>
  406244:	stp	x29, x30, [sp, #-48]!
  406248:	mov	x29, sp
  40624c:	stp	x19, x20, [sp, #16]
  406250:	bl	402860 <getenv@plt>
  406254:	cbz	x0, 4062ac <scols_reset_iter@plt+0x39cc>
  406258:	mov	x19, x0
  40625c:	str	xzr, [sp, #40]
  406260:	bl	402850 <__errno_location@plt>
  406264:	mov	x20, x0
  406268:	add	x1, sp, #0x28
  40626c:	mov	x0, x19
  406270:	mov	w2, #0xa                   	// #10
  406274:	str	wzr, [x20]
  406278:	bl	402670 <strtol@plt>
  40627c:	ldr	w1, [x20]
  406280:	cbnz	w1, 4062ac <scols_reset_iter@plt+0x39cc>
  406284:	ldr	x1, [sp, #40]
  406288:	cbz	x1, 4062ac <scols_reset_iter@plt+0x39cc>
  40628c:	ldrsb	w2, [x1]
  406290:	cbnz	w2, 4062ac <scols_reset_iter@plt+0x39cc>
  406294:	cmp	x1, x19
  406298:	b.ls	4062ac <scols_reset_iter@plt+0x39cc>  // b.plast
  40629c:	sub	x2, x0, #0x1
  4062a0:	mov	x1, #0x7ffffffe            	// #2147483646
  4062a4:	cmp	x2, x1
  4062a8:	b.ls	4062b0 <scols_reset_iter@plt+0x39d0>  // b.plast
  4062ac:	mov	w0, #0xffffffff            	// #-1
  4062b0:	ldp	x19, x20, [sp, #16]
  4062b4:	ldp	x29, x30, [sp], #48
  4062b8:	ret
  4062bc:	stp	x29, x30, [sp, #-64]!
  4062c0:	mov	x29, sp
  4062c4:	add	x2, sp, #0x38
  4062c8:	stp	x19, x20, [sp, #16]
  4062cc:	mov	x20, x1
  4062d0:	mov	x1, #0x5413                	// #21523
  4062d4:	str	x21, [sp, #32]
  4062d8:	mov	x21, x0
  4062dc:	mov	w0, #0x1                   	// #1
  4062e0:	bl	4028b0 <ioctl@plt>
  4062e4:	cbnz	w0, 406340 <scols_reset_iter@plt+0x3a60>
  4062e8:	ldrh	w0, [sp, #58]
  4062ec:	ldrh	w19, [sp, #56]
  4062f0:	cbz	x21, 406308 <scols_reset_iter@plt+0x3a28>
  4062f4:	cbnz	w0, 406304 <scols_reset_iter@plt+0x3a24>
  4062f8:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  4062fc:	add	x0, x0, #0xdfd
  406300:	bl	406244 <scols_reset_iter@plt+0x3964>
  406304:	str	w0, [x21]
  406308:	cbz	x20, 406324 <scols_reset_iter@plt+0x3a44>
  40630c:	cbnz	w19, 406320 <scols_reset_iter@plt+0x3a40>
  406310:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  406314:	add	x0, x0, #0xe05
  406318:	bl	406244 <scols_reset_iter@plt+0x3964>
  40631c:	mov	w19, w0
  406320:	str	w19, [x20]
  406324:	mov	w0, #0x0                   	// #0
  406328:	ldp	x19, x20, [sp, #16]
  40632c:	ldr	x21, [sp, #32]
  406330:	ldp	x29, x30, [sp], #64
  406334:	ret
  406338:	mov	w19, #0x0                   	// #0
  40633c:	b	4062f8 <scols_reset_iter@plt+0x3a18>
  406340:	cbnz	x21, 406338 <scols_reset_iter@plt+0x3a58>
  406344:	cbnz	x20, 406310 <scols_reset_iter@plt+0x3a30>
  406348:	b	406324 <scols_reset_iter@plt+0x3a44>
  40634c:	stp	x29, x30, [sp, #-48]!
  406350:	mov	x1, #0x0                   	// #0
  406354:	mov	x29, sp
  406358:	str	x19, [sp, #16]
  40635c:	mov	w19, w0
  406360:	add	x0, sp, #0x2c
  406364:	str	wzr, [sp, #44]
  406368:	bl	4062bc <scols_reset_iter@plt+0x39dc>
  40636c:	ldr	w0, [sp, #44]
  406370:	cmp	w0, #0x0
  406374:	csel	w0, w19, w0, le
  406378:	ldr	x19, [sp, #16]
  40637c:	ldp	x29, x30, [sp], #48
  406380:	ret
  406384:	stp	x29, x30, [sp, #-16]!
  406388:	mov	w0, #0x0                   	// #0
  40638c:	mov	x29, sp
  406390:	bl	4027a0 <isatty@plt>
  406394:	cbnz	w0, 4063c4 <scols_reset_iter@plt+0x3ae4>
  406398:	mov	w0, #0x1                   	// #1
  40639c:	bl	4027a0 <isatty@plt>
  4063a0:	cbnz	w0, 4063cc <scols_reset_iter@plt+0x3aec>
  4063a4:	mov	w0, #0x2                   	// #2
  4063a8:	bl	4027a0 <isatty@plt>
  4063ac:	cmp	w0, #0x0
  4063b0:	mov	w1, #0x2                   	// #2
  4063b4:	mov	w0, #0xffffffea            	// #-22
  4063b8:	csel	w0, w0, w1, eq  // eq = none
  4063bc:	ldp	x29, x30, [sp], #16
  4063c0:	ret
  4063c4:	mov	w0, #0x0                   	// #0
  4063c8:	b	4063bc <scols_reset_iter@plt+0x3adc>
  4063cc:	mov	w0, #0x1                   	// #1
  4063d0:	b	4063bc <scols_reset_iter@plt+0x3adc>
  4063d4:	stp	x29, x30, [sp, #-48]!
  4063d8:	mov	x29, sp
  4063dc:	stp	x19, x20, [sp, #16]
  4063e0:	mov	x20, x2
  4063e4:	stp	x21, x22, [sp, #32]
  4063e8:	mov	x22, x0
  4063ec:	mov	x21, x1
  4063f0:	cbz	x1, 4063f8 <scols_reset_iter@plt+0x3b18>
  4063f4:	str	xzr, [x1]
  4063f8:	cbz	x22, 406400 <scols_reset_iter@plt+0x3b20>
  4063fc:	str	xzr, [x22]
  406400:	cbz	x20, 406408 <scols_reset_iter@plt+0x3b28>
  406404:	str	xzr, [x20]
  406408:	bl	406384 <scols_reset_iter@plt+0x3aa4>
  40640c:	mov	w3, w0
  406410:	tbnz	w0, #31, 406434 <scols_reset_iter@plt+0x3b54>
  406414:	bl	4023a0 <ttyname@plt>
  406418:	mov	x19, x0
  40641c:	cbz	x0, 406498 <scols_reset_iter@plt+0x3bb8>
  406420:	cbz	x22, 406428 <scols_reset_iter@plt+0x3b48>
  406424:	str	x0, [x22]
  406428:	orr	x0, x21, x20
  40642c:	cbnz	x0, 406448 <scols_reset_iter@plt+0x3b68>
  406430:	mov	w3, #0x0                   	// #0
  406434:	mov	w0, w3
  406438:	ldp	x19, x20, [sp, #16]
  40643c:	ldp	x21, x22, [sp, #32]
  406440:	ldp	x29, x30, [sp], #48
  406444:	ret
  406448:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  40644c:	mov	x0, x19
  406450:	add	x1, x1, #0xe0b
  406454:	mov	x2, #0x5                   	// #5
  406458:	bl	4024a0 <strncmp@plt>
  40645c:	cbnz	w0, 406464 <scols_reset_iter@plt+0x3b84>
  406460:	add	x19, x19, #0x5
  406464:	cbz	x21, 406470 <scols_reset_iter@plt+0x3b90>
  406468:	str	x19, [x21]
  40646c:	cbz	x20, 406430 <scols_reset_iter@plt+0x3b50>
  406470:	ldrsb	w21, [x19]
  406474:	cbz	w21, 406430 <scols_reset_iter@plt+0x3b50>
  406478:	bl	402660 <__ctype_b_loc@plt>
  40647c:	ldr	x0, [x0]
  406480:	ldrh	w0, [x0, w21, sxtw #1]
  406484:	tbz	w0, #11, 406490 <scols_reset_iter@plt+0x3bb0>
  406488:	str	x19, [x20]
  40648c:	b	406430 <scols_reset_iter@plt+0x3b50>
  406490:	add	x19, x19, #0x1
  406494:	b	406470 <scols_reset_iter@plt+0x3b90>
  406498:	mov	w3, #0xffffffff            	// #-1
  40649c:	b	406434 <scols_reset_iter@plt+0x3b54>
  4064a0:	stp	x29, x30, [sp, #-32]!
  4064a4:	mov	x29, sp
  4064a8:	str	x19, [sp, #16]
  4064ac:	mov	x19, x0
  4064b0:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  4064b4:	add	x0, x0, #0xe11
  4064b8:	bl	402860 <getenv@plt>
  4064bc:	cmp	x0, #0x0
  4064c0:	str	x0, [x19]
  4064c4:	mov	w0, #0xffffffea            	// #-22
  4064c8:	csel	w0, w0, wzr, ne  // ne = any
  4064cc:	ldr	x19, [sp, #16]
  4064d0:	ldp	x29, x30, [sp], #32
  4064d4:	ret
  4064d8:	cbz	x0, 406514 <scols_reset_iter@plt+0x3c34>
  4064dc:	stp	x29, x30, [sp, #-32]!
  4064e0:	mov	x29, sp
  4064e4:	stp	x19, x20, [sp, #16]
  4064e8:	mov	x19, x0
  4064ec:	mov	x20, x0
  4064f0:	ldr	x0, [x20]
  4064f4:	cbnz	x0, 406508 <scols_reset_iter@plt+0x3c28>
  4064f8:	str	xzr, [x19]
  4064fc:	ldp	x19, x20, [sp, #16]
  406500:	ldp	x29, x30, [sp], #32
  406504:	ret
  406508:	add	x20, x20, #0x8
  40650c:	bl	4026b0 <free@plt>
  406510:	b	4064f0 <scols_reset_iter@plt+0x3c10>
  406514:	ret
  406518:	stp	x29, x30, [sp, #-32]!
  40651c:	mov	x29, sp
  406520:	str	x19, [sp, #16]
  406524:	mov	x19, x0
  406528:	bl	4064d8 <scols_reset_iter@plt+0x3bf8>
  40652c:	mov	x0, x19
  406530:	bl	4026b0 <free@plt>
  406534:	mov	x0, #0x0                   	// #0
  406538:	ldr	x19, [sp, #16]
  40653c:	ldp	x29, x30, [sp], #32
  406540:	ret
  406544:	cbz	x0, 406564 <scols_reset_iter@plt+0x3c84>
  406548:	sub	x1, x0, #0x8
  40654c:	mov	x2, #0x0                   	// #0
  406550:	mov	w0, w2
  406554:	add	x2, x2, #0x1
  406558:	ldr	x3, [x1, x2, lsl #3]
  40655c:	cbnz	x3, 406550 <scols_reset_iter@plt+0x3c70>
  406560:	ret
  406564:	mov	w0, #0x0                   	// #0
  406568:	b	406560 <scols_reset_iter@plt+0x3c80>
  40656c:	stp	x29, x30, [sp, #-48]!
  406570:	mov	x29, sp
  406574:	stp	x19, x20, [sp, #16]
  406578:	str	x21, [sp, #32]
  40657c:	mov	x21, x0
  406580:	bl	406544 <scols_reset_iter@plt+0x3c64>
  406584:	add	w0, w0, #0x1
  406588:	lsl	x0, x0, #3
  40658c:	bl	402470 <malloc@plt>
  406590:	mov	x19, x0
  406594:	cbz	x0, 4065d4 <scols_reset_iter@plt+0x3cf4>
  406598:	cbnz	x21, 4065a8 <scols_reset_iter@plt+0x3cc8>
  40659c:	mov	x1, x0
  4065a0:	str	xzr, [x1]
  4065a4:	b	4065d4 <scols_reset_iter@plt+0x3cf4>
  4065a8:	mov	x20, #0x0                   	// #0
  4065ac:	ldr	x0, [x21, x20]
  4065b0:	add	x1, x19, x20
  4065b4:	cbz	x0, 4065a0 <scols_reset_iter@plt+0x3cc0>
  4065b8:	bl	402550 <strdup@plt>
  4065bc:	str	x0, [x19, x20]
  4065c0:	add	x20, x20, #0x8
  4065c4:	cbnz	x0, 4065ac <scols_reset_iter@plt+0x3ccc>
  4065c8:	mov	x0, x19
  4065cc:	mov	x19, #0x0                   	// #0
  4065d0:	bl	406518 <scols_reset_iter@plt+0x3c38>
  4065d4:	mov	x0, x19
  4065d8:	ldp	x19, x20, [sp, #16]
  4065dc:	ldr	x21, [sp, #32]
  4065e0:	ldp	x29, x30, [sp], #48
  4065e4:	ret
  4065e8:	stp	x29, x30, [sp, #-96]!
  4065ec:	mov	x29, sp
  4065f0:	stp	x19, x20, [sp, #16]
  4065f4:	mov	x20, x1
  4065f8:	stp	x21, x22, [sp, #32]
  4065fc:	mov	x21, x0
  406600:	ldr	x22, [x1]
  406604:	str	x23, [sp, #48]
  406608:	ldr	w23, [x1, #24]
  40660c:	cbz	x0, 4066f4 <scols_reset_iter@plt+0x3e14>
  406610:	ldp	x2, x3, [x1]
  406614:	stp	x2, x3, [sp, #64]
  406618:	cmn	x0, #0x1
  40661c:	ldp	x2, x3, [x1, #16]
  406620:	stp	x2, x3, [sp, #80]
  406624:	cset	w0, ne  // ne = any
  406628:	ldr	w1, [sp, #88]
  40662c:	ldr	x4, [sp, #72]
  406630:	ldr	x2, [sp, #64]
  406634:	tbnz	w1, #31, 4066d0 <scols_reset_iter@plt+0x3df0>
  406638:	add	x3, x2, #0xf
  40663c:	and	x3, x3, #0xfffffffffffffff8
  406640:	str	x3, [sp, #64]
  406644:	mov	w3, w1
  406648:	ldr	x1, [x2]
  40664c:	cbnz	x1, 4066bc <scols_reset_iter@plt+0x3ddc>
  406650:	add	w0, w0, #0x1
  406654:	lsl	x0, x0, #3
  406658:	bl	402470 <malloc@plt>
  40665c:	mov	x19, x0
  406660:	cbz	x0, 4066a4 <scols_reset_iter@plt+0x3dc4>
  406664:	cbz	x21, 40674c <scols_reset_iter@plt+0x3e6c>
  406668:	cmn	x21, #0x1
  40666c:	b.eq	4066fc <scols_reset_iter@plt+0x3e1c>  // b.none
  406670:	mov	x0, x21
  406674:	bl	402550 <strdup@plt>
  406678:	str	x0, [x19]
  40667c:	cbz	x0, 406754 <scols_reset_iter@plt+0x3e74>
  406680:	mov	w21, #0x1                   	// #1
  406684:	ldr	x2, [x20, #8]
  406688:	tbnz	w23, #31, 406720 <scols_reset_iter@plt+0x3e40>
  40668c:	add	x1, x22, #0xf
  406690:	mov	x0, x22
  406694:	and	x22, x1, #0xfffffffffffffff8
  406698:	ldr	x0, [x0]
  40669c:	cbnz	x0, 406704 <scols_reset_iter@plt+0x3e24>
  4066a0:	str	xzr, [x19, w21, uxtw #3]
  4066a4:	mov	x0, x19
  4066a8:	ldp	x19, x20, [sp, #16]
  4066ac:	ldp	x21, x22, [sp, #32]
  4066b0:	ldr	x23, [sp, #48]
  4066b4:	ldp	x29, x30, [sp], #96
  4066b8:	ret
  4066bc:	cmn	x1, #0x1
  4066c0:	b.eq	4066c8 <scols_reset_iter@plt+0x3de8>  // b.none
  4066c4:	add	w0, w0, #0x1
  4066c8:	mov	w1, w3
  4066cc:	b	406630 <scols_reset_iter@plt+0x3d50>
  4066d0:	add	w3, w1, #0x8
  4066d4:	cmp	w3, #0x0
  4066d8:	b.le	4066ec <scols_reset_iter@plt+0x3e0c>
  4066dc:	add	x1, x2, #0xf
  4066e0:	and	x1, x1, #0xfffffffffffffff8
  4066e4:	str	x1, [sp, #64]
  4066e8:	b	406648 <scols_reset_iter@plt+0x3d68>
  4066ec:	add	x2, x4, w1, sxtw
  4066f0:	b	406648 <scols_reset_iter@plt+0x3d68>
  4066f4:	mov	w0, #0x0                   	// #0
  4066f8:	b	406650 <scols_reset_iter@plt+0x3d70>
  4066fc:	mov	w21, #0x0                   	// #0
  406700:	b	406684 <scols_reset_iter@plt+0x3da4>
  406704:	cmn	x0, #0x1
  406708:	b.eq	406688 <scols_reset_iter@plt+0x3da8>  // b.none
  40670c:	bl	402550 <strdup@plt>
  406710:	str	x0, [x19, w21, uxtw #3]
  406714:	cbz	x0, 406754 <scols_reset_iter@plt+0x3e74>
  406718:	add	w21, w21, #0x1
  40671c:	b	406684 <scols_reset_iter@plt+0x3da4>
  406720:	add	w1, w23, #0x8
  406724:	cmp	w1, #0x0
  406728:	b.le	406740 <scols_reset_iter@plt+0x3e60>
  40672c:	add	x3, x22, #0xf
  406730:	mov	x0, x22
  406734:	mov	w23, w1
  406738:	and	x22, x3, #0xfffffffffffffff8
  40673c:	b	406698 <scols_reset_iter@plt+0x3db8>
  406740:	add	x0, x2, w23, sxtw
  406744:	mov	w23, w1
  406748:	b	406698 <scols_reset_iter@plt+0x3db8>
  40674c:	mov	w21, #0x0                   	// #0
  406750:	b	4066a0 <scols_reset_iter@plt+0x3dc0>
  406754:	mov	x0, x19
  406758:	mov	x19, #0x0                   	// #0
  40675c:	bl	406518 <scols_reset_iter@plt+0x3c38>
  406760:	b	4066a4 <scols_reset_iter@plt+0x3dc4>
  406764:	stp	x29, x30, [sp, #-272]!
  406768:	mov	x29, sp
  40676c:	stp	x1, x2, [sp, #216]
  406770:	add	x1, sp, #0x110
  406774:	stp	x1, x1, [sp, #48]
  406778:	add	x1, sp, #0xd0
  40677c:	str	x1, [sp, #64]
  406780:	mov	w1, #0xffffffc8            	// #-56
  406784:	str	w1, [sp, #72]
  406788:	mov	w1, #0xffffff80            	// #-128
  40678c:	str	w1, [sp, #76]
  406790:	add	x1, sp, #0x10
  406794:	stp	x3, x4, [sp, #232]
  406798:	ldp	x2, x3, [sp, #48]
  40679c:	stp	x2, x3, [sp, #16]
  4067a0:	ldp	x2, x3, [sp, #64]
  4067a4:	stp	x2, x3, [sp, #32]
  4067a8:	str	q0, [sp, #80]
  4067ac:	str	q1, [sp, #96]
  4067b0:	str	q2, [sp, #112]
  4067b4:	str	q3, [sp, #128]
  4067b8:	str	q4, [sp, #144]
  4067bc:	str	q5, [sp, #160]
  4067c0:	str	q6, [sp, #176]
  4067c4:	str	q7, [sp, #192]
  4067c8:	stp	x5, x6, [sp, #248]
  4067cc:	str	x7, [sp, #264]
  4067d0:	bl	4065e8 <scols_reset_iter@plt+0x3d08>
  4067d4:	ldp	x29, x30, [sp], #272
  4067d8:	ret
  4067dc:	stp	x29, x30, [sp, #-80]!
  4067e0:	mov	x29, sp
  4067e4:	stp	x19, x20, [sp, #16]
  4067e8:	stp	x21, x22, [sp, #32]
  4067ec:	stp	x23, x24, [sp, #48]
  4067f0:	cbnz	x0, 406814 <scols_reset_iter@plt+0x3f34>
  4067f4:	adrp	x3, 407000 <scols_reset_iter@plt+0x4720>
  4067f8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  4067fc:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  406800:	add	x3, x3, #0xe21
  406804:	add	x1, x1, #0xe16
  406808:	add	x0, x0, #0x8b4
  40680c:	mov	w2, #0xc1                  	// #193
  406810:	bl	402840 <__assert_fail@plt>
  406814:	add	x21, sp, #0x48
  406818:	add	x22, sp, #0x40
  40681c:	mov	x23, x0
  406820:	mov	x20, x1
  406824:	mov	x2, x1
  406828:	mov	x0, x22
  40682c:	mov	x1, x21
  406830:	mov	w3, #0x0                   	// #0
  406834:	mov	w19, #0x0                   	// #0
  406838:	str	x23, [sp, #64]
  40683c:	bl	4060e0 <scols_reset_iter@plt+0x3800>
  406840:	add	w19, w19, #0x1
  406844:	cbnz	x0, 406888 <scols_reset_iter@plt+0x3fa8>
  406848:	ubfiz	x0, x19, #3, #32
  40684c:	bl	402470 <malloc@plt>
  406850:	mov	x19, x0
  406854:	cbz	x0, 4068bc <scols_reset_iter@plt+0x3fdc>
  406858:	str	x23, [sp, #64]
  40685c:	mov	w23, #0x0                   	// #0
  406860:	mov	x2, x20
  406864:	mov	x1, x21
  406868:	mov	x0, x22
  40686c:	mov	w3, #0x0                   	// #0
  406870:	bl	4060e0 <scols_reset_iter@plt+0x3800>
  406874:	ubfiz	x24, x23, #3, #32
  406878:	add	x1, x19, x24
  40687c:	cbnz	x0, 4068a0 <scols_reset_iter@plt+0x3fc0>
  406880:	str	xzr, [x1]
  406884:	b	4068bc <scols_reset_iter@plt+0x3fdc>
  406888:	mov	x2, x20
  40688c:	mov	x1, x21
  406890:	mov	x0, x22
  406894:	mov	w3, #0x0                   	// #0
  406898:	bl	4060e0 <scols_reset_iter@plt+0x3800>
  40689c:	b	406840 <scols_reset_iter@plt+0x3f60>
  4068a0:	ldr	x1, [sp, #72]
  4068a4:	bl	402740 <strndup@plt>
  4068a8:	str	x0, [x19, x24]
  4068ac:	cbnz	x0, 4068d4 <scols_reset_iter@plt+0x3ff4>
  4068b0:	mov	x0, x19
  4068b4:	mov	x19, #0x0                   	// #0
  4068b8:	bl	406518 <scols_reset_iter@plt+0x3c38>
  4068bc:	mov	x0, x19
  4068c0:	ldp	x19, x20, [sp, #16]
  4068c4:	ldp	x21, x22, [sp, #32]
  4068c8:	ldp	x23, x24, [sp, #48]
  4068cc:	ldp	x29, x30, [sp], #80
  4068d0:	ret
  4068d4:	add	w23, w23, #0x1
  4068d8:	mov	x2, x20
  4068dc:	mov	x1, x21
  4068e0:	mov	x0, x22
  4068e4:	mov	w3, #0x0                   	// #0
  4068e8:	bl	4060e0 <scols_reset_iter@plt+0x3800>
  4068ec:	b	406874 <scols_reset_iter@plt+0x3f94>
  4068f0:	stp	x29, x30, [sp, #-64]!
  4068f4:	mov	x29, sp
  4068f8:	stp	x19, x20, [sp, #16]
  4068fc:	stp	x21, x22, [sp, #32]
  406900:	mov	x21, x0
  406904:	str	x23, [sp, #48]
  406908:	cbnz	x1, 40695c <scols_reset_iter@plt+0x407c>
  40690c:	adrp	x19, 407000 <scols_reset_iter@plt+0x4720>
  406910:	add	x19, x19, #0x5f
  406914:	mov	x0, x19
  406918:	mov	x22, x21
  40691c:	bl	4022c0 <strlen@plt>
  406920:	mov	x23, x0
  406924:	mov	x20, #0x0                   	// #0
  406928:	cbnz	x22, 406964 <scols_reset_iter@plt+0x4084>
  40692c:	add	x0, x20, #0x1
  406930:	bl	402470 <malloc@plt>
  406934:	mov	x20, x0
  406938:	cbz	x0, 406944 <scols_reset_iter@plt+0x4064>
  40693c:	cbnz	x21, 40698c <scols_reset_iter@plt+0x40ac>
  406940:	strb	wzr, [x0]
  406944:	mov	x0, x20
  406948:	ldp	x19, x20, [sp, #16]
  40694c:	ldp	x21, x22, [sp, #32]
  406950:	ldr	x23, [sp, #48]
  406954:	ldp	x29, x30, [sp], #64
  406958:	ret
  40695c:	mov	x19, x1
  406960:	b	406914 <scols_reset_iter@plt+0x4034>
  406964:	ldr	x0, [x22]
  406968:	cbz	x0, 40692c <scols_reset_iter@plt+0x404c>
  40696c:	cbz	x20, 406974 <scols_reset_iter@plt+0x4094>
  406970:	add	x20, x20, x23
  406974:	bl	4022c0 <strlen@plt>
  406978:	add	x22, x22, #0x8
  40697c:	add	x20, x20, x0
  406980:	b	406928 <scols_reset_iter@plt+0x4048>
  406984:	mov	x0, x20
  406988:	b	4069a4 <scols_reset_iter@plt+0x40c4>
  40698c:	ldr	x22, [x21]
  406990:	cbz	x22, 406940 <scols_reset_iter@plt+0x4060>
  406994:	cmp	x0, x20
  406998:	b.eq	406984 <scols_reset_iter@plt+0x40a4>  // b.none
  40699c:	mov	x1, x19
  4069a0:	bl	402420 <stpcpy@plt>
  4069a4:	mov	x1, x22
  4069a8:	add	x21, x21, #0x8
  4069ac:	bl	402420 <stpcpy@plt>
  4069b0:	b	40693c <scols_reset_iter@plt+0x405c>
  4069b4:	cbz	x1, 406a20 <scols_reset_iter@plt+0x4140>
  4069b8:	stp	x29, x30, [sp, #-48]!
  4069bc:	mov	x29, sp
  4069c0:	stp	x19, x20, [sp, #16]
  4069c4:	mov	x20, x0
  4069c8:	ldr	x0, [x0]
  4069cc:	str	x21, [sp, #32]
  4069d0:	mov	x21, x1
  4069d4:	bl	406544 <scols_reset_iter@plt+0x3c64>
  4069d8:	mov	w19, w0
  4069dc:	adds	w1, w0, #0x2
  4069e0:	b.cs	4069f4 <scols_reset_iter@plt+0x4114>  // b.hs, b.nlast
  4069e4:	ldr	x0, [x20]
  4069e8:	ubfiz	x1, x1, #3, #32
  4069ec:	bl	402540 <realloc@plt>
  4069f0:	cbnz	x0, 406a08 <scols_reset_iter@plt+0x4128>
  4069f4:	mov	w0, #0xfffffff4            	// #-12
  4069f8:	ldp	x19, x20, [sp, #16]
  4069fc:	ldr	x21, [sp, #32]
  406a00:	ldp	x29, x30, [sp], #48
  406a04:	ret
  406a08:	str	x21, [x0, w19, uxtw #3]
  406a0c:	add	w19, w19, #0x1
  406a10:	str	xzr, [x0, x19, lsl #3]
  406a14:	str	x0, [x20]
  406a18:	mov	w0, #0x0                   	// #0
  406a1c:	b	4069f8 <scols_reset_iter@plt+0x4118>
  406a20:	mov	w0, #0x0                   	// #0
  406a24:	ret
  406a28:	stp	x29, x30, [sp, #-64]!
  406a2c:	mov	x29, sp
  406a30:	stp	x19, x20, [sp, #16]
  406a34:	mov	x20, x1
  406a38:	stp	x21, x22, [sp, #32]
  406a3c:	mov	x22, x0
  406a40:	str	x23, [sp, #48]
  406a44:	mov	x23, x2
  406a48:	cbz	x20, 406a54 <scols_reset_iter@plt+0x4174>
  406a4c:	ldr	x0, [x20]
  406a50:	cbnz	x0, 406a5c <scols_reset_iter@plt+0x417c>
  406a54:	mov	w19, #0x0                   	// #0
  406a58:	b	406a88 <scols_reset_iter@plt+0x41a8>
  406a5c:	mov	x1, x23
  406a60:	bl	405ff0 <scols_reset_iter@plt+0x3710>
  406a64:	mov	x21, x0
  406a68:	cbz	x0, 406aa8 <scols_reset_iter@plt+0x41c8>
  406a6c:	mov	x1, x0
  406a70:	mov	x0, x22
  406a74:	bl	4069b4 <scols_reset_iter@plt+0x40d4>
  406a78:	mov	w19, w0
  406a7c:	tbz	w0, #31, 406aa0 <scols_reset_iter@plt+0x41c0>
  406a80:	mov	x0, x21
  406a84:	bl	4026b0 <free@plt>
  406a88:	mov	w0, w19
  406a8c:	ldp	x19, x20, [sp, #16]
  406a90:	ldp	x21, x22, [sp, #32]
  406a94:	ldr	x23, [sp, #48]
  406a98:	ldp	x29, x30, [sp], #64
  406a9c:	ret
  406aa0:	add	x20, x20, #0x8
  406aa4:	b	406a48 <scols_reset_iter@plt+0x4168>
  406aa8:	mov	w19, #0xfffffff4            	// #-12
  406aac:	b	406a88 <scols_reset_iter@plt+0x41a8>
  406ab0:	cbz	x1, 406b44 <scols_reset_iter@plt+0x4264>
  406ab4:	stp	x29, x30, [sp, #-48]!
  406ab8:	mov	x29, sp
  406abc:	stp	x21, x22, [sp, #32]
  406ac0:	mov	x21, x0
  406ac4:	mov	x22, x1
  406ac8:	ldr	x0, [x0]
  406acc:	stp	x19, x20, [sp, #16]
  406ad0:	bl	406544 <scols_reset_iter@plt+0x3c64>
  406ad4:	mov	w19, w0
  406ad8:	adds	w0, w0, #0x2
  406adc:	b.cs	406af0 <scols_reset_iter@plt+0x4210>  // b.hs, b.nlast
  406ae0:	ubfiz	x0, x0, #3, #32
  406ae4:	bl	402470 <malloc@plt>
  406ae8:	mov	x20, x0
  406aec:	cbnz	x0, 406b04 <scols_reset_iter@plt+0x4224>
  406af0:	mov	w0, #0xfffffff4            	// #-12
  406af4:	ldp	x19, x20, [sp, #16]
  406af8:	ldp	x21, x22, [sp, #32]
  406afc:	ldp	x29, x30, [sp], #48
  406b00:	ret
  406b04:	add	x1, x0, #0x8
  406b08:	mov	x2, #0x0                   	// #0
  406b0c:	ldr	x0, [x21]
  406b10:	cmp	w19, w2
  406b14:	b.hi	406b34 <scols_reset_iter@plt+0x4254>  // b.pmore
  406b18:	add	w19, w19, #0x1
  406b1c:	str	x22, [x20]
  406b20:	str	xzr, [x20, x19, lsl #3]
  406b24:	bl	4026b0 <free@plt>
  406b28:	mov	w0, #0x0                   	// #0
  406b2c:	str	x20, [x21]
  406b30:	b	406af4 <scols_reset_iter@plt+0x4214>
  406b34:	ldr	x3, [x0, x2, lsl #3]
  406b38:	str	x3, [x1, x2, lsl #3]
  406b3c:	add	x2, x2, #0x1
  406b40:	b	406b10 <scols_reset_iter@plt+0x4230>
  406b44:	mov	w0, #0x0                   	// #0
  406b48:	ret
  406b4c:	stp	x29, x30, [sp, #-32]!
  406b50:	mov	x29, sp
  406b54:	stp	x19, x20, [sp, #16]
  406b58:	mov	x20, x1
  406b5c:	bl	4069b4 <scols_reset_iter@plt+0x40d4>
  406b60:	mov	w19, w0
  406b64:	tbz	w0, #31, 406b70 <scols_reset_iter@plt+0x4290>
  406b68:	mov	x0, x20
  406b6c:	bl	4026b0 <free@plt>
  406b70:	mov	w0, w19
  406b74:	ldp	x19, x20, [sp, #16]
  406b78:	ldp	x29, x30, [sp], #32
  406b7c:	ret
  406b80:	stp	x29, x30, [sp, #-32]!
  406b84:	mov	x29, sp
  406b88:	stp	x19, x20, [sp, #16]
  406b8c:	mov	x20, x1
  406b90:	bl	406ab0 <scols_reset_iter@plt+0x41d0>
  406b94:	mov	w19, w0
  406b98:	tbz	w0, #31, 406ba4 <scols_reset_iter@plt+0x42c4>
  406b9c:	mov	x0, x20
  406ba0:	bl	4026b0 <free@plt>
  406ba4:	mov	w0, w19
  406ba8:	ldp	x19, x20, [sp, #16]
  406bac:	ldp	x29, x30, [sp], #32
  406bb0:	ret
  406bb4:	cbz	x1, 406be8 <scols_reset_iter@plt+0x4308>
  406bb8:	stp	x29, x30, [sp, #-32]!
  406bbc:	mov	x29, sp
  406bc0:	str	x19, [sp, #16]
  406bc4:	mov	x19, x0
  406bc8:	mov	x0, x1
  406bcc:	bl	402550 <strdup@plt>
  406bd0:	mov	x1, x0
  406bd4:	cbz	x0, 406bf0 <scols_reset_iter@plt+0x4310>
  406bd8:	mov	x0, x19
  406bdc:	ldr	x19, [sp, #16]
  406be0:	ldp	x29, x30, [sp], #32
  406be4:	b	406b4c <scols_reset_iter@plt+0x426c>
  406be8:	mov	w0, #0x0                   	// #0
  406bec:	ret
  406bf0:	mov	w0, #0xfffffff4            	// #-12
  406bf4:	ldr	x19, [sp, #16]
  406bf8:	ldp	x29, x30, [sp], #32
  406bfc:	ret
  406c00:	stp	x29, x30, [sp, #-32]!
  406c04:	mov	x29, sp
  406c08:	stp	x19, x20, [sp, #16]
  406c0c:	mov	x20, x0
  406c10:	mov	x19, x1
  406c14:	cbz	x19, 406c20 <scols_reset_iter@plt+0x4340>
  406c18:	ldr	x1, [x19]
  406c1c:	cbnz	x1, 406c30 <scols_reset_iter@plt+0x4350>
  406c20:	mov	w0, #0x0                   	// #0
  406c24:	ldp	x19, x20, [sp, #16]
  406c28:	ldp	x29, x30, [sp], #32
  406c2c:	ret
  406c30:	mov	x0, x20
  406c34:	bl	406bb4 <scols_reset_iter@plt+0x42d4>
  406c38:	tbnz	w0, #31, 406c24 <scols_reset_iter@plt+0x4344>
  406c3c:	add	x19, x19, #0x8
  406c40:	b	406c14 <scols_reset_iter@plt+0x4334>
  406c44:	stp	x29, x30, [sp, #-64]!
  406c48:	mov	x29, sp
  406c4c:	stp	x19, x20, [sp, #16]
  406c50:	mov	x20, x0
  406c54:	stp	x21, x22, [sp, #32]
  406c58:	str	x23, [sp, #48]
  406c5c:	cbz	x0, 406cb4 <scols_reset_iter@plt+0x43d4>
  406c60:	mov	x22, x1
  406c64:	cbnz	x1, 406cd4 <scols_reset_iter@plt+0x43f4>
  406c68:	adrp	x3, 407000 <scols_reset_iter@plt+0x4720>
  406c6c:	add	x3, x3, #0xe21
  406c70:	adrp	x1, 407000 <scols_reset_iter@plt+0x4720>
  406c74:	adrp	x0, 407000 <scols_reset_iter@plt+0x4720>
  406c78:	add	x3, x3, #0xb
  406c7c:	add	x1, x1, #0xe16
  406c80:	add	x0, x0, #0x8b4
  406c84:	mov	w2, #0x15a                 	// #346
  406c88:	bl	402840 <__assert_fail@plt>
  406c8c:	mov	x1, x22
  406c90:	mov	x0, x21
  406c94:	bl	402640 <strcmp@plt>
  406c98:	cbnz	w0, 406ccc <scols_reset_iter@plt+0x43ec>
  406c9c:	mov	x0, x21
  406ca0:	bl	4026b0 <free@plt>
  406ca4:	add	x23, x23, #0x8
  406ca8:	ldr	x21, [x23]
  406cac:	cbnz	x21, 406c8c <scols_reset_iter@plt+0x43ac>
  406cb0:	str	xzr, [x19]
  406cb4:	mov	x0, x20
  406cb8:	ldp	x19, x20, [sp, #16]
  406cbc:	ldp	x21, x22, [sp, #32]
  406cc0:	ldr	x23, [sp, #48]
  406cc4:	ldp	x29, x30, [sp], #64
  406cc8:	ret
  406ccc:	str	x21, [x19], #8
  406cd0:	b	406ca4 <scols_reset_iter@plt+0x43c4>
  406cd4:	mov	x19, x0
  406cd8:	mov	x23, x0
  406cdc:	b	406ca8 <scols_reset_iter@plt+0x43c8>
  406ce0:	stp	x29, x30, [sp, #-288]!
  406ce4:	mov	x29, sp
  406ce8:	str	x19, [sp, #16]
  406cec:	mov	x19, x0
  406cf0:	add	x0, sp, #0x120
  406cf4:	stp	x0, x0, [sp, #80]
  406cf8:	add	x0, sp, #0xf0
  406cfc:	str	x0, [sp, #96]
  406d00:	mov	w0, #0xffffffd0            	// #-48
  406d04:	str	w0, [sp, #104]
  406d08:	mov	w0, #0xffffff80            	// #-128
  406d0c:	str	w0, [sp, #108]
  406d10:	add	x0, sp, #0x48
  406d14:	stp	x2, x3, [sp, #240]
  406d18:	ldp	x2, x3, [sp, #80]
  406d1c:	stp	x2, x3, [sp, #32]
  406d20:	ldp	x2, x3, [sp, #96]
  406d24:	stp	x2, x3, [sp, #48]
  406d28:	add	x2, sp, #0x20
  406d2c:	str	q0, [sp, #112]
  406d30:	str	q1, [sp, #128]
  406d34:	str	q2, [sp, #144]
  406d38:	str	q3, [sp, #160]
  406d3c:	str	q4, [sp, #176]
  406d40:	str	q5, [sp, #192]
  406d44:	str	q6, [sp, #208]
  406d48:	str	q7, [sp, #224]
  406d4c:	stp	x4, x5, [sp, #256]
  406d50:	stp	x6, x7, [sp, #272]
  406d54:	bl	402710 <vasprintf@plt>
  406d58:	tbnz	w0, #31, 406d74 <scols_reset_iter@plt+0x4494>
  406d5c:	ldr	x1, [sp, #72]
  406d60:	mov	x0, x19
  406d64:	bl	406b4c <scols_reset_iter@plt+0x426c>
  406d68:	ldr	x19, [sp, #16]
  406d6c:	ldp	x29, x30, [sp], #288
  406d70:	ret
  406d74:	mov	w0, #0xfffffff4            	// #-12
  406d78:	b	406d68 <scols_reset_iter@plt+0x4488>
  406d7c:	stp	x29, x30, [sp, #-80]!
  406d80:	mov	x29, sp
  406d84:	ldp	x4, x5, [x2]
  406d88:	stp	x4, x5, [sp, #32]
  406d8c:	ldp	x2, x3, [x2, #16]
  406d90:	str	x19, [sp, #16]
  406d94:	mov	x19, x0
  406d98:	add	x0, sp, #0x48
  406d9c:	stp	x2, x3, [sp, #48]
  406da0:	add	x2, sp, #0x20
  406da4:	bl	402710 <vasprintf@plt>
  406da8:	tbnz	w0, #31, 406dc4 <scols_reset_iter@plt+0x44e4>
  406dac:	ldr	x1, [sp, #72]
  406db0:	mov	x0, x19
  406db4:	bl	406b4c <scols_reset_iter@plt+0x426c>
  406db8:	ldr	x19, [sp, #16]
  406dbc:	ldp	x29, x30, [sp], #80
  406dc0:	ret
  406dc4:	mov	w0, #0xfffffff4            	// #-12
  406dc8:	b	406db8 <scols_reset_iter@plt+0x44d8>
  406dcc:	stp	x29, x30, [sp, #-32]!
  406dd0:	mov	x29, sp
  406dd4:	str	x19, [sp, #16]
  406dd8:	mov	x19, x0
  406ddc:	bl	406544 <scols_reset_iter@plt+0x3c64>
  406de0:	cmp	w0, #0x1
  406de4:	b.ls	406e18 <scols_reset_iter@plt+0x4538>  // b.plast
  406de8:	lsr	w3, w0, #1
  406dec:	sub	w0, w0, #0x1
  406df0:	mov	x1, #0x0                   	// #0
  406df4:	sub	w2, w0, w1
  406df8:	ldr	x4, [x19, x1, lsl #3]
  406dfc:	lsl	x2, x2, #3
  406e00:	ldr	x5, [x19, x2]
  406e04:	str	x5, [x19, x1, lsl #3]
  406e08:	str	x4, [x19, x2]
  406e0c:	add	x1, x1, #0x1
  406e10:	cmp	w3, w1
  406e14:	b.hi	406df4 <scols_reset_iter@plt+0x4514>  // b.pmore
  406e18:	mov	x0, x19
  406e1c:	ldr	x19, [sp, #16]
  406e20:	ldp	x29, x30, [sp], #32
  406e24:	ret
  406e28:	stp	x29, x30, [sp, #-64]!
  406e2c:	mov	x29, sp
  406e30:	stp	x19, x20, [sp, #16]
  406e34:	adrp	x20, 419000 <scols_reset_iter@plt+0x16720>
  406e38:	add	x20, x20, #0xde0
  406e3c:	stp	x21, x22, [sp, #32]
  406e40:	adrp	x21, 419000 <scols_reset_iter@plt+0x16720>
  406e44:	add	x21, x21, #0xdd8
  406e48:	sub	x20, x20, x21
  406e4c:	mov	w22, w0
  406e50:	stp	x23, x24, [sp, #48]
  406e54:	mov	x23, x1
  406e58:	mov	x24, x2
  406e5c:	bl	402240 <mbrtowc@plt-0x40>
  406e60:	cmp	xzr, x20, asr #3
  406e64:	b.eq	406e90 <scols_reset_iter@plt+0x45b0>  // b.none
  406e68:	asr	x20, x20, #3
  406e6c:	mov	x19, #0x0                   	// #0
  406e70:	ldr	x3, [x21, x19, lsl #3]
  406e74:	mov	x2, x24
  406e78:	add	x19, x19, #0x1
  406e7c:	mov	x1, x23
  406e80:	mov	w0, w22
  406e84:	blr	x3
  406e88:	cmp	x20, x19
  406e8c:	b.ne	406e70 <scols_reset_iter@plt+0x4590>  // b.any
  406e90:	ldp	x19, x20, [sp, #16]
  406e94:	ldp	x21, x22, [sp, #32]
  406e98:	ldp	x23, x24, [sp, #48]
  406e9c:	ldp	x29, x30, [sp], #64
  406ea0:	ret
  406ea4:	nop
  406ea8:	ret
  406eac:	nop
  406eb0:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17720>
  406eb4:	mov	x1, #0x0                   	// #0
  406eb8:	ldr	x2, [x2, #832]
  406ebc:	b	4023c0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000406ec0 <.fini>:
  406ec0:	stp	x29, x30, [sp, #-16]!
  406ec4:	mov	x29, sp
  406ec8:	ldp	x29, x30, [sp], #16
  406ecc:	ret
