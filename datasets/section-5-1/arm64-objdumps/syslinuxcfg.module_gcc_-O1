
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//syslinuxcfg.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_strcasecmp>:
       0:	ldrb	w2, [x0]
       4:	cbz	w2, 48 <grub_strcasecmp+0x48>
       8:	ldrb	w3, [x1]
       c:	cbz	w3, 7c <grub_strcasecmp+0x7c>
      10:	mov	w7, w2
      14:	sub	w5, w2, #0x41
      18:	add	w4, w2, #0x20
      1c:	cmp	w5, #0x1a
      20:	csel	w2, w4, w2, cc  // cc = lo, ul, last
      24:	sub	w6, w3, #0x41
      28:	add	w4, w3, #0x20
      2c:	cmp	w6, #0x1a
      30:	csel	w3, w4, w3, cc  // cc = lo, ul, last
      34:	cmp	w3, w2
      38:	b.ne	68 <grub_strcasecmp+0x68>  // b.any
      3c:	add	x1, x1, #0x1
      40:	ldrb	w2, [x0, #1]!
      44:	cbnz	w2, 8 <grub_strcasecmp+0x8>
      48:	mov	w7, #0x0                   	// #0
      4c:	ldrb	w0, [x1]
      50:	sub	w2, w0, #0x41
      54:	add	w1, w0, #0x20
      58:	cmp	w2, #0x1a
      5c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
      60:	sub	w0, w7, w0
      64:	ret
      68:	cmp	w5, #0x19
      6c:	b.ls	8c <grub_strcasecmp+0x8c>  // b.plast
      70:	b	4c <grub_strcasecmp+0x4c>
      74:	ldrb	w0, [x1]
      78:	b	60 <grub_strcasecmp+0x60>
      7c:	mov	w7, w2
      80:	sub	w2, w2, #0x41
      84:	cmp	w2, #0x19
      88:	b.hi	74 <grub_strcasecmp+0x74>  // b.pmore
      8c:	add	w7, w7, #0x20
      90:	b	4c <grub_strcasecmp+0x4c>

0000000000000094 <cmd_say>:
      94:	stp	x29, x30, [sp, #-48]!
      98:	mov	x29, sp
      9c:	stp	x19, x20, [sp, #16]
      a0:	str	x21, [sp, #32]
      a4:	mov	x21, x0
      a8:	mov	x20, x1
      ac:	bl	0 <grub_strlen>
      b0:	add	x0, x0, #0x11
      b4:	bl	0 <grub_malloc>
      b8:	cbz	x0, 114 <cmd_say+0x80>
      bc:	mov	x19, x0
      c0:	str	xzr, [x0, #8]
      c4:	ldr	x0, [x20, #8]
      c8:	cbz	x0, 124 <cmd_say+0x90>
      cc:	ldr	x0, [x0, #104]
      d0:	str	x0, [x19]
      d4:	ldr	x0, [x20, #8]
      d8:	str	x19, [x0, #104]
      dc:	ldr	x0, [x19]
      e0:	cbz	x0, e8 <cmd_say+0x54>
      e4:	str	x19, [x0, #8]
      e8:	mov	x0, x21
      ec:	bl	0 <grub_strlen>
      f0:	add	x2, x0, #0x1
      f4:	mov	x1, x21
      f8:	add	x0, x19, #0x10
      fc:	bl	0 <grub_memmove>
     100:	mov	w0, #0x0                   	// #0
     104:	ldp	x19, x20, [sp, #16]
     108:	ldr	x21, [sp, #32]
     10c:	ldp	x29, x30, [sp], #48
     110:	ret
     114:	adrp	x0, 0 <grub_strcasecmp>
     118:	ldr	x0, [x0]
     11c:	ldr	w0, [x0]
     120:	b	104 <cmd_say+0x70>
     124:	ldr	x0, [x20, #96]
     128:	str	x0, [x19]
     12c:	str	x19, [x20, #96]
     130:	b	dc <cmd_say+0x48>
     134:	nop
	...

0000000000000140 <cmd_timeout>:
     140:	stp	x29, x30, [sp, #-32]!
     144:	mov	x29, sp
     148:	str	x19, [sp, #16]
     14c:	mov	x19, x1
     150:	mov	w2, #0x0                   	// #0
     154:	mov	x1, #0x0                   	// #0
     158:	bl	0 <grub_strtoul>
     15c:	str	x0, [x19, #88]
     160:	mov	w0, #0x0                   	// #0
     164:	ldr	x19, [sp, #16]
     168:	ldp	x29, x30, [sp], #32
     16c:	ret

0000000000000170 <cmd_menubackground>:
     170:	stp	x29, x30, [sp, #-32]!
     174:	mov	x29, sp
     178:	str	x19, [sp, #16]
     17c:	mov	x19, x1
     180:	bl	0 <grub_strdup>
     184:	str	x0, [x19, #32]
     188:	mov	w0, #0x0                   	// #0
     18c:	ldr	x19, [sp, #16]
     190:	ldp	x29, x30, [sp], #32
     194:	ret

0000000000000198 <cmd_default>:
     198:	stp	x29, x30, [sp, #-32]!
     19c:	mov	x29, sp
     1a0:	str	x19, [sp, #16]
     1a4:	mov	x19, x1
     1a8:	bl	0 <grub_strdup>
     1ac:	str	x0, [x19, #16]
     1b0:	cbz	x0, 1c4 <cmd_default+0x2c>
     1b4:	mov	w0, #0x0                   	// #0
     1b8:	ldr	x19, [sp, #16]
     1bc:	ldp	x29, x30, [sp], #32
     1c0:	ret
     1c4:	adrp	x0, 0 <grub_strcasecmp>
     1c8:	ldr	x0, [x0]
     1cc:	ldr	w0, [x0]
     1d0:	b	1b8 <cmd_default+0x20>
     1d4:	nop
	...

00000000000001e0 <cmd_menudefault>:
     1e0:	ldr	x0, [x1, #8]
     1e4:	cbz	x0, 1f8 <cmd_menudefault+0x18>
     1e8:	mov	w1, #0x1                   	// #1
     1ec:	str	w1, [x0, #100]
     1f0:	mov	w0, #0x0                   	// #0
     1f4:	ret
     1f8:	stp	x29, x30, [sp, #-16]!
     1fc:	mov	x29, sp
     200:	adrp	x0, 0 <grub_strcasecmp>
     204:	ldr	x1, [x0]
     208:	mov	w0, #0x12                  	// #18
     20c:	bl	0 <grub_error>
     210:	ldp	x29, x30, [sp], #16
     214:	ret
	...

0000000000000220 <cmd_extlabel>:
     220:	stp	x29, x30, [sp, #-48]!
     224:	mov	x29, sp
     228:	stp	x19, x20, [sp, #16]
     22c:	mov	x19, x0
     230:	ldr	x0, [x1, #8]
     234:	cbz	x0, 284 <cmd_extlabel+0x64>
     238:	str	x21, [sp, #32]
     23c:	mov	x20, x1
     240:	mov	x0, x19
     244:	bl	0 <grub_strlen>
     248:	ldr	x21, [x20, #8]
     24c:	add	x0, x0, #0x1
     250:	bl	0 <grub_malloc>
     254:	str	x0, [x21, #24]
     258:	ldr	x0, [x20, #8]
     25c:	ldr	x3, [x0, #24]
     260:	cbz	x3, 298 <cmd_extlabel+0x78>
     264:	ldrb	w2, [x19]
     268:	cbnz	w2, 2c0 <cmd_extlabel+0xa0>
     26c:	strb	wzr, [x3]
     270:	mov	w0, #0x0                   	// #0
     274:	ldr	x21, [sp, #32]
     278:	ldp	x19, x20, [sp, #16]
     27c:	ldp	x29, x30, [sp], #48
     280:	ret
     284:	adrp	x0, 0 <grub_strcasecmp>
     288:	ldr	x1, [x0]
     28c:	mov	w0, #0x12                  	// #18
     290:	bl	0 <grub_error>
     294:	b	278 <cmd_extlabel+0x58>
     298:	adrp	x0, 0 <grub_strcasecmp>
     29c:	ldr	x0, [x0]
     2a0:	ldr	w0, [x0]
     2a4:	ldr	x21, [sp, #32]
     2a8:	b	278 <cmd_extlabel+0x58>
     2ac:	mov	x19, x0
     2b0:	ldrb	w2, [x19], #1
     2b4:	strb	w2, [x3], #1
     2b8:	ldrb	w2, [x0, #1]
     2bc:	cbz	w2, 26c <cmd_extlabel+0x4c>
     2c0:	mov	x0, x19
     2c4:	cmp	w2, #0x5e
     2c8:	b.ne	2ac <cmd_extlabel+0x8c>  // b.any
     2cc:	ldrb	w1, [x19, #1]
     2d0:	cbz	w1, 2ac <cmd_extlabel+0x8c>
     2d4:	sub	w2, w1, #0x41
     2d8:	add	w0, w1, #0x20
     2dc:	cmp	w2, #0x1a
     2e0:	csel	w1, w0, w1, cc  // cc = lo, ul, last
     2e4:	ldr	x0, [x20, #8]
     2e8:	strb	w1, [x0, #96]
     2ec:	add	x0, x19, #0x1
     2f0:	b	2ac <cmd_extlabel+0x8c>
     2f4:	nop
	...

0000000000000308 <cmd_localboot>:
     308:	stp	x29, x30, [sp, #-32]!
     30c:	mov	x29, sp
     310:	stp	x19, x20, [sp, #16]
     314:	ldr	x20, [x1, #8]
     318:	cbz	x20, 34c <cmd_localboot+0x44>
     31c:	mov	x19, x1
     320:	bl	0 <grub_strdup>
     324:	str	x0, [x20, #32]
     328:	ldr	x0, [x19, #8]
     32c:	ldr	x1, [x0, #32]
     330:	cbz	x1, 360 <cmd_localboot+0x58>
     334:	mov	w1, #0xa                   	// #10
     338:	str	w1, [x0, #112]
     33c:	mov	w0, #0x0                   	// #0
     340:	ldp	x19, x20, [sp, #16]
     344:	ldp	x29, x30, [sp], #32
     348:	ret
     34c:	adrp	x0, 0 <grub_strcasecmp>
     350:	ldr	x1, [x0]
     354:	mov	w0, #0x12                  	// #18
     358:	bl	0 <grub_error>
     35c:	b	340 <cmd_localboot+0x38>
     360:	adrp	x0, 0 <grub_strcasecmp>
     364:	ldr	x0, [x0]
     368:	ldr	w0, [x0]
     36c:	b	340 <cmd_localboot+0x38>
	...

0000000000000380 <cmd_append>:
     380:	stp	x29, x30, [sp, #-32]!
     384:	mov	x29, sp
     388:	stp	x19, x20, [sp, #16]
     38c:	ldr	x20, [x1, #8]
     390:	cbz	x20, 3bc <cmd_append+0x3c>
     394:	mov	x19, x1
     398:	bl	0 <grub_strdup>
     39c:	str	x0, [x20, #56]
     3a0:	ldr	x0, [x19, #8]
     3a4:	ldr	x1, [x0, #56]
     3a8:	mov	w0, #0x0                   	// #0
     3ac:	cbz	x1, 3d0 <cmd_append+0x50>
     3b0:	ldp	x19, x20, [sp, #16]
     3b4:	ldp	x29, x30, [sp], #32
     3b8:	ret
     3bc:	adrp	x0, 0 <grub_strcasecmp>
     3c0:	ldr	x1, [x0]
     3c4:	mov	w0, #0x12                  	// #18
     3c8:	bl	0 <grub_error>
     3cc:	b	3b0 <cmd_append+0x30>
     3d0:	adrp	x0, 0 <grub_strcasecmp>
     3d4:	ldr	x0, [x0]
     3d8:	ldr	w0, [x0]
     3dc:	b	3b0 <cmd_append+0x30>
	...

00000000000003f0 <cmd_com32>:
     3f0:	stp	x29, x30, [sp, #-32]!
     3f4:	mov	x29, sp
     3f8:	stp	x19, x20, [sp, #16]
     3fc:	ldr	x20, [x1, #8]
     400:	cbz	x20, 434 <cmd_com32+0x44>
     404:	mov	x19, x1
     408:	bl	0 <grub_strdup>
     40c:	str	x0, [x20, #32]
     410:	ldr	x0, [x19, #8]
     414:	ldr	x1, [x0, #32]
     418:	cbz	x1, 448 <cmd_com32+0x58>
     41c:	mov	w1, #0x6                   	// #6
     420:	str	w1, [x0, #112]
     424:	mov	w0, #0x0                   	// #0
     428:	ldp	x19, x20, [sp, #16]
     42c:	ldp	x29, x30, [sp], #32
     430:	ret
     434:	adrp	x0, 0 <grub_strcasecmp>
     438:	ldr	x1, [x0]
     43c:	mov	w0, #0x12                  	// #18
     440:	bl	0 <grub_error>
     444:	b	428 <cmd_com32+0x38>
     448:	adrp	x0, 0 <grub_strcasecmp>
     44c:	ldr	x0, [x0]
     450:	ldr	w0, [x0]
     454:	b	428 <cmd_com32+0x38>
	...

0000000000000468 <cmd_comboot>:
     468:	stp	x29, x30, [sp, #-32]!
     46c:	mov	x29, sp
     470:	stp	x19, x20, [sp, #16]
     474:	ldr	x20, [x1, #8]
     478:	cbz	x20, 4ac <cmd_comboot+0x44>
     47c:	mov	x19, x1
     480:	bl	0 <grub_strdup>
     484:	str	x0, [x20, #32]
     488:	ldr	x0, [x19, #8]
     48c:	ldr	x1, [x0, #32]
     490:	cbz	x1, 4c0 <cmd_comboot+0x58>
     494:	mov	w1, #0x7                   	// #7
     498:	str	w1, [x0, #112]
     49c:	mov	w0, #0x0                   	// #0
     4a0:	ldp	x19, x20, [sp, #16]
     4a4:	ldp	x29, x30, [sp], #32
     4a8:	ret
     4ac:	adrp	x0, 0 <grub_strcasecmp>
     4b0:	ldr	x1, [x0]
     4b4:	mov	w0, #0x12                  	// #18
     4b8:	bl	0 <grub_error>
     4bc:	b	4a0 <cmd_comboot+0x38>
     4c0:	adrp	x0, 0 <grub_strcasecmp>
     4c4:	ldr	x0, [x0]
     4c8:	ldr	w0, [x0]
     4cc:	b	4a0 <cmd_comboot+0x38>
	...

00000000000004e0 <cmd_fdimage>:
     4e0:	stp	x29, x30, [sp, #-32]!
     4e4:	mov	x29, sp
     4e8:	stp	x19, x20, [sp, #16]
     4ec:	ldr	x20, [x1, #8]
     4f0:	cbz	x20, 524 <cmd_fdimage+0x44>
     4f4:	mov	x19, x1
     4f8:	bl	0 <grub_strdup>
     4fc:	str	x0, [x20, #32]
     500:	ldr	x0, [x19, #8]
     504:	ldr	x1, [x0, #32]
     508:	cbz	x1, 538 <cmd_fdimage+0x58>
     50c:	mov	w1, #0x8                   	// #8
     510:	str	w1, [x0, #112]
     514:	mov	w0, #0x0                   	// #0
     518:	ldp	x19, x20, [sp, #16]
     51c:	ldp	x29, x30, [sp], #32
     520:	ret
     524:	adrp	x0, 0 <grub_strcasecmp>
     528:	ldr	x1, [x0]
     52c:	mov	w0, #0x12                  	// #18
     530:	bl	0 <grub_error>
     534:	b	518 <cmd_fdimage+0x38>
     538:	adrp	x0, 0 <grub_strcasecmp>
     53c:	ldr	x0, [x0]
     540:	ldr	w0, [x0]
     544:	b	518 <cmd_fdimage+0x38>
	...

0000000000000558 <cmd_pxe>:
     558:	stp	x29, x30, [sp, #-32]!
     55c:	mov	x29, sp
     560:	stp	x19, x20, [sp, #16]
     564:	ldr	x20, [x1, #8]
     568:	cbz	x20, 59c <cmd_pxe+0x44>
     56c:	mov	x19, x1
     570:	bl	0 <grub_strdup>
     574:	str	x0, [x20, #32]
     578:	ldr	x0, [x19, #8]
     57c:	ldr	x1, [x0, #32]
     580:	cbz	x1, 5b0 <cmd_pxe+0x58>
     584:	mov	w1, #0x4                   	// #4
     588:	str	w1, [x0, #112]
     58c:	mov	w0, #0x0                   	// #0
     590:	ldp	x19, x20, [sp, #16]
     594:	ldp	x29, x30, [sp], #32
     598:	ret
     59c:	adrp	x0, 0 <grub_strcasecmp>
     5a0:	ldr	x1, [x0]
     5a4:	mov	w0, #0x12                  	// #18
     5a8:	bl	0 <grub_error>
     5ac:	b	590 <cmd_pxe+0x38>
     5b0:	adrp	x0, 0 <grub_strcasecmp>
     5b4:	ldr	x0, [x0]
     5b8:	ldr	w0, [x0]
     5bc:	b	590 <cmd_pxe+0x38>
	...

00000000000005d0 <cmd_bss>:
     5d0:	stp	x29, x30, [sp, #-32]!
     5d4:	mov	x29, sp
     5d8:	stp	x19, x20, [sp, #16]
     5dc:	ldr	x20, [x1, #8]
     5e0:	cbz	x20, 614 <cmd_bss+0x44>
     5e4:	mov	x19, x1
     5e8:	bl	0 <grub_strdup>
     5ec:	str	x0, [x20, #32]
     5f0:	ldr	x0, [x19, #8]
     5f4:	ldr	x1, [x0, #32]
     5f8:	cbz	x1, 628 <cmd_bss+0x58>
     5fc:	mov	w1, #0x5                   	// #5
     600:	str	w1, [x0, #112]
     604:	mov	w0, #0x0                   	// #0
     608:	ldp	x19, x20, [sp, #16]
     60c:	ldp	x29, x30, [sp], #32
     610:	ret
     614:	adrp	x0, 0 <grub_strcasecmp>
     618:	ldr	x1, [x0]
     61c:	mov	w0, #0x12                  	// #18
     620:	bl	0 <grub_error>
     624:	b	608 <cmd_bss+0x38>
     628:	adrp	x0, 0 <grub_strcasecmp>
     62c:	ldr	x0, [x0]
     630:	ldr	w0, [x0]
     634:	b	608 <cmd_bss+0x38>
	...

0000000000000648 <cmd_boot>:
     648:	stp	x29, x30, [sp, #-32]!
     64c:	mov	x29, sp
     650:	stp	x19, x20, [sp, #16]
     654:	ldr	x20, [x1, #8]
     658:	cbz	x20, 68c <cmd_boot+0x44>
     65c:	mov	x19, x1
     660:	bl	0 <grub_strdup>
     664:	str	x0, [x20, #32]
     668:	ldr	x0, [x19, #8]
     66c:	ldr	x1, [x0, #32]
     670:	cbz	x1, 6a0 <cmd_boot+0x58>
     674:	mov	w1, #0x2                   	// #2
     678:	str	w1, [x0, #112]
     67c:	mov	w0, #0x0                   	// #0
     680:	ldp	x19, x20, [sp, #16]
     684:	ldp	x29, x30, [sp], #32
     688:	ret
     68c:	adrp	x0, 0 <grub_strcasecmp>
     690:	ldr	x1, [x0]
     694:	mov	w0, #0x12                  	// #18
     698:	bl	0 <grub_error>
     69c:	b	680 <cmd_boot+0x38>
     6a0:	adrp	x0, 0 <grub_strcasecmp>
     6a4:	ldr	x0, [x0]
     6a8:	ldr	w0, [x0]
     6ac:	b	680 <cmd_boot+0x38>
	...

00000000000006c0 <cmd_linux>:
     6c0:	stp	x29, x30, [sp, #-32]!
     6c4:	mov	x29, sp
     6c8:	stp	x19, x20, [sp, #16]
     6cc:	ldr	x20, [x1, #8]
     6d0:	cbz	x20, 704 <cmd_linux+0x44>
     6d4:	mov	x19, x1
     6d8:	bl	0 <grub_strdup>
     6dc:	str	x0, [x20, #32]
     6e0:	ldr	x0, [x19, #8]
     6e4:	ldr	x1, [x0, #32]
     6e8:	cbz	x1, 718 <cmd_linux+0x58>
     6ec:	mov	w1, #0x1                   	// #1
     6f0:	str	w1, [x0, #112]
     6f4:	mov	w0, #0x0                   	// #0
     6f8:	ldp	x19, x20, [sp, #16]
     6fc:	ldp	x29, x30, [sp], #32
     700:	ret
     704:	adrp	x0, 0 <grub_strcasecmp>
     708:	ldr	x1, [x0]
     70c:	mov	w0, #0x12                  	// #18
     710:	bl	0 <grub_error>
     714:	b	6f8 <cmd_linux+0x38>
     718:	adrp	x0, 0 <grub_strcasecmp>
     71c:	ldr	x0, [x0]
     720:	ldr	w0, [x0]
     724:	b	6f8 <cmd_linux+0x38>
	...

0000000000000738 <cmd_initrd>:
     738:	stp	x29, x30, [sp, #-64]!
     73c:	mov	x29, sp
     740:	stp	x21, x22, [sp, #32]
     744:	mov	x21, x0
     748:	ldr	x0, [x1, #8]
     74c:	cbz	x0, 774 <cmd_initrd+0x3c>
     750:	str	x23, [sp, #48]
     754:	mov	x22, x1
     758:	ldrb	w0, [x21]
     75c:	mov	x23, #0x10                  	// #16
     760:	cbz	w0, 76c <cmd_initrd+0x34>
     764:	stp	x19, x20, [sp, #16]
     768:	b	7f8 <cmd_initrd+0xc0>
     76c:	ldr	x23, [sp, #48]
     770:	b	79c <cmd_initrd+0x64>
     774:	adrp	x0, 0 <grub_strcasecmp>
     778:	ldr	x1, [x0]
     77c:	mov	w0, #0x12                  	// #18
     780:	bl	0 <grub_error>
     784:	b	79c <cmd_initrd+0x64>
     788:	adrp	x0, 0 <grub_strcasecmp>
     78c:	ldr	x0, [x0]
     790:	ldr	w0, [x0]
     794:	ldp	x19, x20, [sp, #16]
     798:	ldr	x23, [sp, #48]
     79c:	ldp	x21, x22, [sp, #32]
     7a0:	ldp	x29, x30, [sp], #64
     7a4:	ret
     7a8:	mov	x0, x20
     7ac:	bl	0 <grub_free>
     7b0:	adrp	x0, 0 <grub_strcasecmp>
     7b4:	ldr	x0, [x0]
     7b8:	ldr	w0, [x0]
     7bc:	ldp	x19, x20, [sp, #16]
     7c0:	ldr	x23, [sp, #48]
     7c4:	b	79c <cmd_initrd+0x64>
     7c8:	str	x20, [x1, #48]
     7cc:	ldr	x0, [x22, #8]
     7d0:	str	x20, [x0, #40]
     7d4:	ldrb	w0, [x19]
     7d8:	cmp	w0, #0x2c
     7dc:	b.ne	858 <cmd_initrd+0x120>  // b.any
     7e0:	ldrb	w0, [x19, #1]!
     7e4:	cmp	w0, #0x2c
     7e8:	b.eq	7e0 <cmd_initrd+0xa8>  // b.none
     7ec:	mov	x21, x19
     7f0:	ldrb	w0, [x21]
     7f4:	cbz	w0, 860 <cmd_initrd+0x128>
     7f8:	ldrb	w0, [x21]
     7fc:	cmp	w0, #0x2c
     800:	mov	x19, x21
     804:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     808:	b.eq	81c <cmd_initrd+0xe4>  // b.none
     80c:	ldrb	w2, [x19, #1]!
     810:	cmp	w2, #0x2c
     814:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     818:	b.ne	80c <cmd_initrd+0xd4>  // b.any
     81c:	mov	x0, x23
     820:	bl	0 <grub_malloc>
     824:	mov	x20, x0
     828:	cbz	x0, 788 <cmd_initrd+0x50>
     82c:	sub	x1, x19, x21
     830:	mov	x0, x21
     834:	bl	0 <grub_strndup>
     838:	str	x0, [x20, #8]
     83c:	cbz	x0, 7a8 <cmd_initrd+0x70>
     840:	str	xzr, [x20]
     844:	ldr	x1, [x22, #8]
     848:	ldr	x0, [x1, #48]
     84c:	cbz	x0, 7c8 <cmd_initrd+0x90>
     850:	str	x20, [x0]
     854:	b	7d4 <cmd_initrd+0x9c>
     858:	mov	x21, x19
     85c:	b	7f0 <cmd_initrd+0xb8>
     860:	mov	w0, #0x0                   	// #0
     864:	ldp	x19, x20, [sp, #16]
     868:	ldr	x23, [sp, #48]
     86c:	b	79c <cmd_initrd+0x64>
	...

0000000000000880 <cmd_config>:
     880:	stp	x29, x30, [sp, #-48]!
     884:	mov	x29, sp
     888:	stp	x21, x22, [sp, #32]
     88c:	mov	x21, x0
     890:	ldr	x0, [x1, #8]
     894:	cbz	x0, 914 <cmd_config+0x94>
     898:	stp	x19, x20, [sp, #16]
     89c:	mov	x20, x1
     8a0:	ldrb	w0, [x21]
     8a4:	mov	x19, x21
     8a8:	cbz	w0, 8bc <cmd_config+0x3c>
     8ac:	bl	0 <grub_isspace>
     8b0:	cbnz	w0, 8bc <cmd_config+0x3c>
     8b4:	ldrb	w0, [x19, #1]!
     8b8:	cbnz	w0, 8ac <cmd_config+0x2c>
     8bc:	ldr	x22, [x20, #8]
     8c0:	sub	x1, x19, x21
     8c4:	mov	x0, x21
     8c8:	bl	0 <grub_strndup>
     8cc:	str	x0, [x22, #32]
     8d0:	ldr	x0, [x20, #8]
     8d4:	ldr	x0, [x0, #32]
     8d8:	cbz	x0, 928 <cmd_config+0xa8>
     8dc:	ldrb	w0, [x19]
     8e0:	cbz	w0, 8f4 <cmd_config+0x74>
     8e4:	bl	0 <grub_isspace>
     8e8:	cbz	w0, 93c <cmd_config+0xbc>
     8ec:	ldrb	w0, [x19, #1]!
     8f0:	cbnz	w0, 8e4 <cmd_config+0x64>
     8f4:	ldr	x0, [x20, #8]
     8f8:	mov	w1, #0x9                   	// #9
     8fc:	str	w1, [x0, #112]
     900:	mov	w0, #0x0                   	// #0
     904:	ldp	x19, x20, [sp, #16]
     908:	ldp	x21, x22, [sp, #32]
     90c:	ldp	x29, x30, [sp], #48
     910:	ret
     914:	adrp	x0, 0 <grub_strcasecmp>
     918:	ldr	x1, [x0]
     91c:	mov	w0, #0x12                  	// #18
     920:	bl	0 <grub_error>
     924:	b	908 <cmd_config+0x88>
     928:	adrp	x0, 0 <grub_strcasecmp>
     92c:	ldr	x0, [x0]
     930:	ldr	w0, [x0]
     934:	ldp	x19, x20, [sp, #16]
     938:	b	908 <cmd_config+0x88>
     93c:	ldrb	w0, [x19]
     940:	cbz	w0, 8f4 <cmd_config+0x74>
     944:	ldr	x21, [x20, #8]
     948:	mov	x0, x19
     94c:	bl	0 <grub_strdup>
     950:	str	x0, [x21, #64]
     954:	ldr	x0, [x20, #8]
     958:	ldr	x0, [x0, #64]
     95c:	cbnz	x0, 8f4 <cmd_config+0x74>
     960:	adrp	x0, 0 <grub_strcasecmp>
     964:	ldr	x0, [x0]
     968:	ldr	w0, [x0]
     96c:	ldp	x19, x20, [sp, #16]
     970:	b	908 <cmd_config+0x88>
     974:	nop
	...

0000000000000988 <label>:
     988:	stp	x29, x30, [sp, #-48]!
     98c:	mov	x29, sp
     990:	stp	x19, x20, [sp, #16]
     994:	str	x21, [sp, #32]
     998:	mov	x21, x0
     99c:	mov	x20, x1
     9a0:	mov	x0, #0x78                  	// #120
     9a4:	bl	0 <grub_malloc>
     9a8:	cbz	x0, 9fc <label+0x74>
     9ac:	mov	x19, x0
     9b0:	mov	x2, #0x78                  	// #120
     9b4:	mov	w1, #0x0                   	// #0
     9b8:	bl	0 <grub_memset>
     9bc:	mov	x0, x21
     9c0:	bl	0 <grub_strdup>
     9c4:	str	x0, [x19, #16]
     9c8:	cbz	x0, a0c <label+0x84>
     9cc:	ldr	x0, [x20, #8]
     9d0:	str	x0, [x19]
     9d4:	str	xzr, [x19, #8]
     9d8:	ldr	x0, [x20, #8]
     9dc:	cbz	x0, 9e4 <label+0x5c>
     9e0:	str	x19, [x0, #8]
     9e4:	str	x19, [x20, #8]
     9e8:	mov	w0, #0x0                   	// #0
     9ec:	ldp	x19, x20, [sp, #16]
     9f0:	ldr	x21, [sp, #32]
     9f4:	ldp	x29, x30, [sp], #48
     9f8:	ret
     9fc:	adrp	x0, 0 <grub_strcasecmp>
     a00:	ldr	x0, [x0]
     a04:	ldr	w0, [x0]
     a08:	b	9ec <label+0x64>
     a0c:	mov	x0, x19
     a10:	bl	0 <grub_free>
     a14:	adrp	x0, 0 <grub_strcasecmp>
     a18:	ldr	x0, [x0]
     a1c:	ldr	w0, [x0]
     a20:	b	9ec <label+0x64>
     a24:	nop
	...

0000000000000a30 <get_read_filename>:
     a30:	stp	x29, x30, [sp, #-16]!
     a34:	mov	x29, sp
     a38:	mov	x2, x1
     a3c:	ldrb	w1, [x1]
     a40:	cmp	w1, #0x2f
     a44:	b.eq	a60 <get_read_filename+0x30>  // b.none
     a48:	ldr	x1, [x0, #56]
     a4c:	adrp	x0, 0 <grub_strcasecmp>
     a50:	ldr	x0, [x0]
     a54:	bl	0 <grub_xasprintf>
     a58:	ldp	x29, x30, [sp], #16
     a5c:	ret
     a60:	ldr	x1, [x0, #40]
     a64:	b	a4c <get_read_filename+0x1c>
	...

0000000000000a70 <add_comment>:
     a70:	stp	x29, x30, [sp, #-64]!
     a74:	mov	x29, sp
     a78:	stp	x19, x20, [sp, #16]
     a7c:	stp	x21, x22, [sp, #32]
     a80:	mov	x20, x0
     a84:	mov	x19, x1
     a88:	mov	w21, w2
     a8c:	ldr	x1, [x0, #8]
     a90:	cbz	x1, b60 <add_comment+0xf0>
     a94:	ldr	x22, [x1, #88]
     a98:	cbnz	x22, aa8 <add_comment+0x38>
     a9c:	ldrb	w2, [x19]
     aa0:	mov	w0, #0x0                   	// #0
     aa4:	cbz	w2, b3c <add_comment+0xcc>
     aa8:	stp	x23, x24, [sp, #48]
     aac:	ldr	x24, [x1, #80]
     ab0:	mov	x0, x19
     ab4:	bl	0 <grub_strlen>
     ab8:	ldr	x23, [x20, #8]
     abc:	add	x22, x22, #0x2
     ac0:	add	x1, x22, x0
     ac4:	mov	x0, x24
     ac8:	bl	0 <grub_realloc>
     acc:	str	x0, [x23, #80]
     ad0:	ldr	x0, [x20, #8]
     ad4:	ldr	x1, [x0, #80]
     ad8:	cbz	x1, b4c <add_comment+0xdc>
     adc:	ldr	x0, [x0, #88]
     ae0:	add	x1, x1, x0
     ae4:	mov	x0, x1
     ae8:	ldrb	w3, [x19], #1
     aec:	strb	w3, [x1], #1
     af0:	cbnz	w3, ae4 <add_comment+0x74>
     af4:	ldr	x1, [x20, #8]
     af8:	ldr	x2, [x1, #80]
     afc:	sub	x0, x0, x2
     b00:	str	x0, [x1, #88]
     b04:	cbz	w21, b24 <add_comment+0xb4>
     b08:	ldr	x0, [x20, #8]
     b0c:	ldr	x2, [x0, #80]
     b10:	ldr	x1, [x0, #88]
     b14:	add	x3, x1, #0x1
     b18:	str	x3, [x0, #88]
     b1c:	mov	w0, #0xa                   	// #10
     b20:	strb	w0, [x2, x1]
     b24:	ldr	x0, [x20, #8]
     b28:	ldr	x1, [x0, #80]
     b2c:	ldr	x0, [x0, #88]
     b30:	strb	wzr, [x1, x0]
     b34:	mov	w0, #0x0                   	// #0
     b38:	ldp	x23, x24, [sp, #48]
     b3c:	ldp	x19, x20, [sp, #16]
     b40:	ldp	x21, x22, [sp, #32]
     b44:	ldp	x29, x30, [sp], #64
     b48:	ret
     b4c:	adrp	x0, 0 <grub_strcasecmp>
     b50:	ldr	x0, [x0]
     b54:	ldr	w0, [x0]
     b58:	ldp	x23, x24, [sp, #48]
     b5c:	b	b3c <add_comment+0xcc>
     b60:	ldr	x22, [x0, #80]
     b64:	cbnz	x22, b74 <add_comment+0x104>
     b68:	ldrb	w1, [x19]
     b6c:	mov	w0, #0x0                   	// #0
     b70:	cbz	w1, b3c <add_comment+0xcc>
     b74:	stp	x23, x24, [sp, #48]
     b78:	ldr	x23, [x20, #24]
     b7c:	mov	x0, x19
     b80:	bl	0 <grub_strlen>
     b84:	add	x22, x22, #0x2
     b88:	add	x1, x22, x0
     b8c:	mov	x0, x23
     b90:	bl	0 <grub_realloc>
     b94:	str	x0, [x20, #24]
     b98:	cbz	x0, bdc <add_comment+0x16c>
     b9c:	ldr	x1, [x20, #80]
     ba0:	add	x0, x0, x1
     ba4:	mov	x2, x0
     ba8:	ldrb	w1, [x19], #1
     bac:	strb	w1, [x0], #1
     bb0:	cbnz	w1, ba4 <add_comment+0x134>
     bb4:	ldr	x0, [x20, #24]
     bb8:	sub	x2, x2, x0
     bbc:	cbnz	w21, bf0 <add_comment+0x180>
     bc0:	str	x2, [x20, #80]
     bc4:	ldr	x1, [x20, #24]
     bc8:	ldr	x0, [x20, #80]
     bcc:	strb	wzr, [x1, x0]
     bd0:	mov	w0, #0x0                   	// #0
     bd4:	ldp	x23, x24, [sp, #48]
     bd8:	b	b3c <add_comment+0xcc>
     bdc:	adrp	x0, 0 <grub_strcasecmp>
     be0:	ldr	x0, [x0]
     be4:	ldr	w0, [x0]
     be8:	ldp	x23, x24, [sp, #48]
     bec:	b	b3c <add_comment+0xcc>
     bf0:	add	x1, x2, #0x1
     bf4:	str	x1, [x20, #80]
     bf8:	mov	w1, #0xa                   	// #10
     bfc:	strb	w1, [x0, x2]
     c00:	b	bc4 <add_comment+0x154>
     c04:	nop
	...

0000000000000c10 <ensure_space>:
     c10:	stp	x29, x30, [sp, #-32]!
     c14:	mov	x29, sp
     c18:	stp	x19, x20, [sp, #16]
     c1c:	mov	x20, x0
     c20:	ldr	x2, [x0, #8]
     c24:	ldr	x0, [x0]
     c28:	sub	x0, x0, x2
     c2c:	cmp	x0, x1
     c30:	b.ls	c44 <ensure_space+0x34>  // b.plast
     c34:	mov	w0, #0x0                   	// #0
     c38:	ldp	x19, x20, [sp, #16]
     c3c:	ldp	x29, x30, [sp], #32
     c40:	ret
     c44:	add	x19, x1, #0xa
     c48:	add	x19, x19, x2
     c4c:	lsl	x19, x19, #1
     c50:	mov	x1, x19
     c54:	ldr	x0, [x20, #16]
     c58:	bl	0 <grub_realloc>
     c5c:	cbz	x0, c70 <ensure_space+0x60>
     c60:	str	x19, [x20]
     c64:	str	x0, [x20, #16]
     c68:	mov	w0, #0x0                   	// #0
     c6c:	b	c38 <ensure_space+0x28>
     c70:	adrp	x0, 0 <grub_strcasecmp>
     c74:	ldr	x0, [x0]
     c78:	ldr	w0, [x0]
     c7c:	b	c38 <ensure_space+0x28>
	...

0000000000000c88 <print_escaped>:
     c88:	stp	x29, x30, [sp, #-48]!
     c8c:	mov	x29, sp
     c90:	stp	x19, x20, [sp, #16]
     c94:	str	x21, [sp, #32]
     c98:	mov	x19, x0
     c9c:	mov	x20, x1
     ca0:	mov	x21, x2
     ca4:	cbz	x2, cf4 <print_escaped+0x6c>
     ca8:	sub	x1, x21, x20
     cac:	lsl	x1, x1, #2
     cb0:	add	x1, x1, #0x2
     cb4:	mov	x0, x19
     cb8:	bl	c10 <ensure_space>
     cbc:	cbnz	w0, da0 <print_escaped+0x118>
     cc0:	ldr	x2, [x19, #16]
     cc4:	ldr	x1, [x19, #8]
     cc8:	add	x3, x1, #0x1
     ccc:	str	x3, [x19, #8]
     cd0:	mov	w3, #0x27                  	// #39
     cd4:	strb	w3, [x2, x1]
     cd8:	ldrb	w1, [x20]
     cdc:	cmp	w1, #0x0
     ce0:	ccmp	x21, x20, #0x0, ne  // ne = any
     ce4:	b.ls	d88 <print_escaped+0x100>  // b.plast
     ce8:	mov	w4, w3
     cec:	mov	w5, #0x5c                  	// #92
     cf0:	b	d2c <print_escaped+0xa4>
     cf4:	mov	x0, x1
     cf8:	bl	0 <grub_strlen>
     cfc:	add	x21, x20, x0
     d00:	b	ca8 <print_escaped+0x20>
     d04:	ldr	x2, [x19, #16]
     d08:	ldr	x1, [x19, #8]
     d0c:	add	x3, x1, #0x1
     d10:	str	x3, [x19, #8]
     d14:	ldrb	w3, [x20]
     d18:	strb	w3, [x2, x1]
     d1c:	ldrb	w1, [x20, #1]!
     d20:	cmp	w1, #0x0
     d24:	ccmp	x21, x20, #0x0, ne  // ne = any
     d28:	b.ls	d88 <print_escaped+0x100>  // b.plast
     d2c:	cmp	w1, #0x27
     d30:	b.ne	d04 <print_escaped+0x7c>  // b.any
     d34:	ldr	x2, [x19, #16]
     d38:	ldr	x1, [x19, #8]
     d3c:	add	x3, x1, #0x1
     d40:	str	x3, [x19, #8]
     d44:	strb	w4, [x2, x1]
     d48:	ldr	x2, [x19, #16]
     d4c:	ldr	x1, [x19, #8]
     d50:	add	x3, x1, #0x1
     d54:	str	x3, [x19, #8]
     d58:	strb	w5, [x2, x1]
     d5c:	ldr	x2, [x19, #16]
     d60:	ldr	x1, [x19, #8]
     d64:	add	x3, x1, #0x1
     d68:	str	x3, [x19, #8]
     d6c:	strb	w4, [x2, x1]
     d70:	ldr	x2, [x19, #16]
     d74:	ldr	x1, [x19, #8]
     d78:	add	x3, x1, #0x1
     d7c:	str	x3, [x19, #8]
     d80:	strb	w4, [x2, x1]
     d84:	b	d1c <print_escaped+0x94>
     d88:	ldr	x2, [x19, #16]
     d8c:	ldr	x1, [x19, #8]
     d90:	add	x3, x1, #0x1
     d94:	str	x3, [x19, #8]
     d98:	mov	w3, #0x27                  	// #39
     d9c:	strb	w3, [x2, x1]
     da0:	ldp	x19, x20, [sp, #16]
     da4:	ldr	x21, [sp, #32]
     da8:	ldp	x29, x30, [sp], #48
     dac:	ret

0000000000000db0 <print>:
     db0:	stp	x29, x30, [sp, #-48]!
     db4:	mov	x29, sp
     db8:	stp	x19, x20, [sp, #16]
     dbc:	stp	x21, x22, [sp, #32]
     dc0:	mov	x21, x0
     dc4:	mov	x22, x1
     dc8:	mov	x20, x2
     dcc:	mov	x1, x2
     dd0:	bl	c10 <ensure_space>
     dd4:	mov	w19, w0
     dd8:	cbz	w0, df0 <print+0x40>
     ddc:	mov	w0, w19
     de0:	ldp	x19, x20, [sp, #16]
     de4:	ldp	x21, x22, [sp, #32]
     de8:	ldp	x29, x30, [sp], #48
     dec:	ret
     df0:	ldr	x3, [x21, #16]
     df4:	ldr	x0, [x21, #8]
     df8:	mov	x2, x20
     dfc:	mov	x1, x22
     e00:	add	x0, x3, x0
     e04:	bl	0 <grub_memmove>
     e08:	ldr	x2, [x21, #8]
     e0c:	add	x20, x2, x20
     e10:	str	x20, [x21, #8]
     e14:	b	ddc <print+0x2c>

0000000000000e18 <print_file>:
     e18:	stp	x29, x30, [sp, #-48]!
     e1c:	mov	x29, sp
     e20:	stp	x19, x20, [sp, #16]
     e24:	stp	x21, x22, [sp, #32]
     e28:	mov	x20, x0
     e2c:	mov	x22, x1
     e30:	mov	x21, x2
     e34:	mov	x19, x3
     e38:	cbz	x3, e6c <print_file+0x54>
     e3c:	ldrb	w0, [x21]
     e40:	cmp	w0, #0x2f
     e44:	b.eq	e7c <print_file+0x64>  // b.none
     e48:	ldr	x1, [x22, #64]
     e4c:	mov	x2, #0x0                   	// #0
     e50:	mov	x0, x20
     e54:	bl	c88 <print_escaped>
     e58:	cbz	w0, e84 <print_file+0x6c>
     e5c:	ldp	x19, x20, [sp, #16]
     e60:	ldp	x21, x22, [sp, #32]
     e64:	ldp	x29, x30, [sp], #48
     e68:	ret
     e6c:	mov	x0, x2
     e70:	bl	0 <grub_strlen>
     e74:	add	x19, x21, x0
     e78:	b	e3c <print_file+0x24>
     e7c:	ldr	x1, [x22, #48]
     e80:	b	e4c <print_file+0x34>
     e84:	mov	x2, #0x1                   	// #1
     e88:	adrp	x0, 0 <grub_strcasecmp>
     e8c:	ldr	x1, [x0]
     e90:	mov	x0, x20
     e94:	bl	db0 <print>
     e98:	cbnz	w0, e5c <print_file+0x44>
     e9c:	mov	x2, x19
     ea0:	mov	x1, x21
     ea4:	mov	x0, x20
     ea8:	bl	c88 <print_escaped>
     eac:	b	e5c <print_file+0x44>
	...

0000000000000eb8 <print_num>:
     eb8:	stp	x29, x30, [sp, #-64]!
     ebc:	mov	x29, sp
     ec0:	str	x19, [sp, #16]
     ec4:	mov	x19, x0
     ec8:	mov	w3, w1
     ecc:	adrp	x0, 0 <grub_strcasecmp>
     ed0:	ldr	x2, [x0]
     ed4:	mov	x1, #0x14                  	// #20
     ed8:	add	x0, sp, #0x28
     edc:	bl	0 <grub_snprintf>
     ee0:	add	x0, sp, #0x28
     ee4:	bl	0 <grub_strlen>
     ee8:	mov	x2, x0
     eec:	add	x1, sp, #0x28
     ef0:	mov	x0, x19
     ef4:	bl	db0 <print>
     ef8:	ldr	x19, [sp, #16]
     efc:	ldp	x29, x30, [sp], #64
     f00:	ret
     f04:	nop
	...

0000000000000f10 <kernel>:
     f10:	stp	x29, x30, [sp, #-48]!
     f14:	mov	x29, sp
     f18:	stp	x19, x20, [sp, #16]
     f1c:	stp	x21, x22, [sp, #32]
     f20:	mov	x19, x0
     f24:	mov	x20, x1
     f28:	bl	0 <grub_strlen>
     f2c:	ldr	x22, [x20, #8]
     f30:	cbz	x22, f84 <kernel+0x74>
     f34:	mov	x21, x0
     f38:	mov	x0, x19
     f3c:	bl	0 <grub_strdup>
     f40:	str	x0, [x22, #32]
     f44:	ldr	x0, [x20, #8]
     f48:	ldr	x1, [x0, #32]
     f4c:	cbz	x1, f98 <kernel+0x88>
     f50:	add	x19, x19, x21
     f54:	mov	w1, #0x1                   	// #1
     f58:	str	w1, [x0, #112]
     f5c:	cmp	x21, #0x1
     f60:	b.gt	fa8 <kernel+0x98>
     f64:	cmp	x21, #0x3
     f68:	b.gt	fcc <kernel+0xbc>
     f6c:	mov	w0, #0x0                   	// #0
     f70:	b.eq	1058 <kernel+0x148>  // b.none
     f74:	ldp	x19, x20, [sp, #16]
     f78:	ldp	x21, x22, [sp, #32]
     f7c:	ldp	x29, x30, [sp], #48
     f80:	ret
     f84:	adrp	x0, 0 <grub_strcasecmp>
     f88:	ldr	x1, [x0]
     f8c:	mov	w0, #0x12                  	// #18
     f90:	bl	0 <grub_error>
     f94:	b	f74 <kernel+0x64>
     f98:	adrp	x0, 0 <grub_strcasecmp>
     f9c:	ldr	x0, [x0]
     fa0:	ldr	w0, [x0]
     fa4:	b	f74 <kernel+0x64>
     fa8:	adrp	x0, 0 <grub_strcasecmp>
     fac:	ldr	x1, [x0]
     fb0:	sub	x0, x19, #0x2
     fb4:	bl	0 <grub_strcmp>
     fb8:	cbnz	w0, f64 <kernel+0x54>
     fbc:	ldr	x0, [x20, #8]
     fc0:	mov	w1, #0x4                   	// #4
     fc4:	str	w1, [x0, #112]
     fc8:	b	f64 <kernel+0x54>
     fcc:	sub	x5, x19, #0x4
     fd0:	ldurb	w2, [x19, #-4]
     fd4:	cbz	w2, 13e4 <kernel+0x4d4>
     fd8:	adrp	x0, 0 <grub_strcasecmp>
     fdc:	ldr	x4, [x0]
     fe0:	mov	w0, #0x2e                  	// #46
     fe4:	sub	w3, w2, #0x41
     fe8:	add	w1, w2, #0x20
     fec:	cmp	w3, #0x1a
     ff0:	csel	w1, w1, w2, cc  // cc = lo, ul, last
     ff4:	sub	w6, w0, #0x41
     ff8:	add	w3, w0, #0x20
     ffc:	cmp	w6, #0x1a
    1000:	csel	w0, w3, w0, cc  // cc = lo, ul, last
    1004:	cmp	w0, w1
    1008:	b.ne	1020 <kernel+0x110>  // b.any
    100c:	add	x4, x4, #0x1
    1010:	ldrb	w2, [x5, #1]!
    1014:	cbz	w2, 13dc <kernel+0x4cc>
    1018:	ldrb	w0, [x4]
    101c:	cbnz	w0, fe4 <kernel+0xd4>
    1020:	sub	w1, w2, #0x41
    1024:	add	w0, w2, #0x20
    1028:	cmp	w1, #0x1a
    102c:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1030:	ldrb	w0, [x4]
    1034:	sub	w3, w0, #0x41
    1038:	add	w1, w0, #0x20
    103c:	cmp	w3, #0x1a
    1040:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1044:	cmp	w0, w2
    1048:	b.ne	1058 <kernel+0x148>  // b.any
    104c:	ldr	x0, [x20, #8]
    1050:	mov	w1, #0x3                   	// #3
    1054:	str	w1, [x0, #112]
    1058:	sub	x4, x19, #0x3
    105c:	ldurb	w2, [x19, #-3]
    1060:	cbz	w2, 1404 <kernel+0x4f4>
    1064:	adrp	x0, 0 <grub_strcasecmp>
    1068:	ldr	x3, [x0]
    106c:	mov	w0, #0x2e                  	// #46
    1070:	mov	w7, w2
    1074:	sub	w5, w2, #0x41
    1078:	add	w1, w2, #0x20
    107c:	cmp	w5, #0x1a
    1080:	csel	w2, w1, w2, cc  // cc = lo, ul, last
    1084:	sub	w6, w0, #0x41
    1088:	add	w1, w0, #0x20
    108c:	cmp	w6, #0x1a
    1090:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1094:	cmp	w0, w2
    1098:	b.ne	13f0 <kernel+0x4e0>  // b.any
    109c:	add	x3, x3, #0x1
    10a0:	ldrb	w2, [x4, #1]!
    10a4:	cbz	w2, 13fc <kernel+0x4ec>
    10a8:	ldrb	w0, [x3]
    10ac:	cbnz	w0, 1070 <kernel+0x160>
    10b0:	mov	w7, w2
    10b4:	sub	w2, w2, #0x41
    10b8:	cmp	w2, #0x19
    10bc:	b.hi	1480 <kernel+0x570>  // b.pmore
    10c0:	add	w7, w7, #0x20
    10c4:	ldrb	w0, [x3]
    10c8:	sub	w2, w0, #0x41
    10cc:	add	w1, w0, #0x20
    10d0:	cmp	w2, #0x1a
    10d4:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    10d8:	cmp	w0, w7
    10dc:	b.ne	10ec <kernel+0x1dc>  // b.any
    10e0:	ldr	x0, [x20, #8]
    10e4:	mov	w1, #0x2                   	// #2
    10e8:	str	w1, [x0, #112]
    10ec:	cmp	x21, #0x3
    10f0:	b.le	145c <kernel+0x54c>
    10f4:	sub	x3, x19, #0x4
    10f8:	ldurb	w1, [x19, #-4]
    10fc:	cbz	w1, 1418 <kernel+0x508>
    1100:	mov	x6, x3
    1104:	adrp	x0, 0 <grub_strcasecmp>
    1108:	ldr	x5, [x0]
    110c:	mov	w2, #0x2e                  	// #46
    1110:	sub	w4, w1, #0x41
    1114:	add	w0, w1, #0x20
    1118:	cmp	w4, #0x1a
    111c:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    1120:	sub	w7, w2, #0x41
    1124:	add	w4, w2, #0x20
    1128:	cmp	w7, #0x1a
    112c:	csel	w2, w4, w2, cc  // cc = lo, ul, last
    1130:	cmp	w2, w0
    1134:	b.ne	114c <kernel+0x23c>  // b.any
    1138:	add	x5, x5, #0x1
    113c:	ldrb	w1, [x6, #1]!
    1140:	cbz	w1, 1410 <kernel+0x500>
    1144:	ldrb	w2, [x5]
    1148:	cbnz	w2, 1110 <kernel+0x200>
    114c:	sub	w2, w1, #0x41
    1150:	add	w0, w1, #0x20
    1154:	cmp	w2, #0x1a
    1158:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    115c:	ldrb	w0, [x5]
    1160:	sub	w4, w0, #0x41
    1164:	add	w2, w0, #0x20
    1168:	cmp	w4, #0x1a
    116c:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    1170:	cmp	w0, w1
    1174:	b.ne	1184 <kernel+0x274>  // b.any
    1178:	ldr	x0, [x20, #8]
    117c:	mov	w1, #0x5                   	// #5
    1180:	str	w1, [x0, #112]
    1184:	ldurb	w1, [x19, #-4]
    1188:	mov	w0, #0x2e                  	// #46
    118c:	cbz	w1, 1200 <kernel+0x2f0>
    1190:	mov	x6, x3
    1194:	adrp	x0, 0 <grub_strcasecmp>
    1198:	ldr	x5, [x0]
    119c:	mov	w2, #0x2e                  	// #46
    11a0:	sub	w4, w1, #0x41
    11a4:	add	w0, w1, #0x20
    11a8:	cmp	w4, #0x1a
    11ac:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    11b0:	sub	w7, w2, #0x41
    11b4:	add	w4, w2, #0x20
    11b8:	cmp	w7, #0x1a
    11bc:	csel	w2, w4, w2, cc  // cc = lo, ul, last
    11c0:	cmp	w2, w0
    11c4:	b.ne	11dc <kernel+0x2cc>  // b.any
    11c8:	add	x5, x5, #0x1
    11cc:	ldrb	w1, [x6, #1]!
    11d0:	cbz	w1, 1424 <kernel+0x514>
    11d4:	ldrb	w2, [x5]
    11d8:	cbnz	w2, 11a0 <kernel+0x290>
    11dc:	sub	w2, w1, #0x41
    11e0:	add	w0, w1, #0x20
    11e4:	cmp	w2, #0x1a
    11e8:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    11ec:	ldrb	w0, [x5]
    11f0:	sub	w4, w0, #0x41
    11f4:	add	w2, w0, #0x20
    11f8:	cmp	w4, #0x1a
    11fc:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    1200:	cmp	w0, w1
    1204:	b.ne	1214 <kernel+0x304>  // b.any
    1208:	ldr	x0, [x20, #8]
    120c:	mov	w1, #0x6                   	// #6
    1210:	str	w1, [x0, #112]
    1214:	ldurb	w1, [x19, #-4]
    1218:	mov	w0, #0x2e                  	// #46
    121c:	cbz	w1, 1290 <kernel+0x380>
    1220:	mov	x6, x3
    1224:	adrp	x0, 0 <grub_strcasecmp>
    1228:	ldr	x5, [x0]
    122c:	mov	w2, #0x2e                  	// #46
    1230:	sub	w4, w1, #0x41
    1234:	add	w0, w1, #0x20
    1238:	cmp	w4, #0x1a
    123c:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    1240:	sub	w7, w2, #0x41
    1244:	add	w4, w2, #0x20
    1248:	cmp	w7, #0x1a
    124c:	csel	w2, w4, w2, cc  // cc = lo, ul, last
    1250:	cmp	w2, w0
    1254:	b.ne	126c <kernel+0x35c>  // b.any
    1258:	add	x5, x5, #0x1
    125c:	ldrb	w1, [x6, #1]!
    1260:	cbz	w1, 142c <kernel+0x51c>
    1264:	ldrb	w2, [x5]
    1268:	cbnz	w2, 1230 <kernel+0x320>
    126c:	sub	w2, w1, #0x41
    1270:	add	w0, w1, #0x20
    1274:	cmp	w2, #0x1a
    1278:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    127c:	ldrb	w0, [x5]
    1280:	sub	w4, w0, #0x41
    1284:	add	w2, w0, #0x20
    1288:	cmp	w4, #0x1a
    128c:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    1290:	cmp	w0, w1
    1294:	b.ne	12a4 <kernel+0x394>  // b.any
    1298:	ldr	x0, [x20, #8]
    129c:	mov	w1, #0x7                   	// #7
    12a0:	str	w1, [x0, #112]
    12a4:	ldurb	w0, [x19, #-4]
    12a8:	cbz	w0, 1474 <kernel+0x564>
    12ac:	mov	x5, x3
    12b0:	adrp	x1, 0 <grub_strcasecmp>
    12b4:	ldr	x4, [x1]
    12b8:	mov	w1, #0x2e                  	// #46
    12bc:	mov	w8, w0
    12c0:	sub	w6, w0, #0x41
    12c4:	add	w2, w0, #0x20
    12c8:	cmp	w6, #0x1a
    12cc:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    12d0:	sub	w7, w1, #0x41
    12d4:	add	w2, w1, #0x20
    12d8:	cmp	w7, #0x1a
    12dc:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    12e0:	cmp	w1, w0
    12e4:	b.ne	1434 <kernel+0x524>  // b.any
    12e8:	add	x4, x4, #0x1
    12ec:	ldrb	w0, [x5, #1]!
    12f0:	cbz	w0, 1440 <kernel+0x530>
    12f4:	ldrb	w1, [x4]
    12f8:	cbnz	w1, 12bc <kernel+0x3ac>
    12fc:	mov	w8, w0
    1300:	sub	w0, w0, #0x41
    1304:	cmp	w0, #0x19
    1308:	b.hi	146c <kernel+0x55c>  // b.pmore
    130c:	add	w8, w8, #0x20
    1310:	ldrb	w0, [x4]
    1314:	sub	w2, w0, #0x41
    1318:	add	w1, w0, #0x20
    131c:	cmp	w2, #0x1a
    1320:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1324:	cmp	w0, w8
    1328:	b.ne	1338 <kernel+0x428>  // b.any
    132c:	ldr	x0, [x20, #8]
    1330:	mov	w1, #0x7                   	// #7
    1334:	str	w1, [x0, #112]
    1338:	ldurb	w0, [x19, #-4]
    133c:	mov	w7, #0x0                   	// #0
    1340:	mov	w1, #0x2e                  	// #46
    1344:	cbz	w0, 13bc <kernel+0x4ac>
    1348:	adrp	x1, 0 <grub_strcasecmp>
    134c:	ldr	x4, [x1]
    1350:	mov	w1, #0x2e                  	// #46
    1354:	mov	w7, w0
    1358:	sub	w5, w0, #0x41
    135c:	add	w2, w0, #0x20
    1360:	cmp	w5, #0x1a
    1364:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    1368:	sub	w6, w1, #0x41
    136c:	add	w2, w1, #0x20
    1370:	cmp	w6, #0x1a
    1374:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    1378:	cmp	w1, w0
    137c:	b.ne	1448 <kernel+0x538>  // b.any
    1380:	add	x4, x4, #0x1
    1384:	ldrb	w0, [x3, #1]!
    1388:	cbz	w0, 1454 <kernel+0x544>
    138c:	ldrb	w1, [x4]
    1390:	cbnz	w1, 1354 <kernel+0x444>
    1394:	mov	w7, w0
    1398:	sub	w0, w0, #0x41
    139c:	cmp	w0, #0x19
    13a0:	b.hi	1464 <kernel+0x554>  // b.pmore
    13a4:	add	w7, w7, #0x20
    13a8:	ldrb	w1, [x4]
    13ac:	sub	w2, w1, #0x41
    13b0:	add	w0, w1, #0x20
    13b4:	cmp	w2, #0x1a
    13b8:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    13bc:	mov	w0, #0x0                   	// #0
    13c0:	cmp	w1, w7
    13c4:	b.ne	f74 <kernel+0x64>  // b.any
    13c8:	ldr	x0, [x20, #8]
    13cc:	mov	w1, #0x8                   	// #8
    13d0:	str	w1, [x0, #112]
    13d4:	mov	w0, #0x0                   	// #0
    13d8:	b	f74 <kernel+0x64>
    13dc:	mov	w2, #0x0                   	// #0
    13e0:	b	1030 <kernel+0x120>
    13e4:	mov	w2, #0x0                   	// #0
    13e8:	mov	w0, #0x2e                  	// #46
    13ec:	b	1044 <kernel+0x134>
    13f0:	cmp	w5, #0x19
    13f4:	b.ls	10c0 <kernel+0x1b0>  // b.plast
    13f8:	b	10c4 <kernel+0x1b4>
    13fc:	mov	w7, #0x0                   	// #0
    1400:	b	10c4 <kernel+0x1b4>
    1404:	mov	w7, #0x0                   	// #0
    1408:	mov	w0, #0x2e                  	// #46
    140c:	b	10d8 <kernel+0x1c8>
    1410:	mov	w1, #0x0                   	// #0
    1414:	b	115c <kernel+0x24c>
    1418:	mov	w1, #0x0                   	// #0
    141c:	mov	w0, #0x2e                  	// #46
    1420:	b	1170 <kernel+0x260>
    1424:	mov	w1, #0x0                   	// #0
    1428:	b	11ec <kernel+0x2dc>
    142c:	mov	w1, #0x0                   	// #0
    1430:	b	127c <kernel+0x36c>
    1434:	cmp	w6, #0x19
    1438:	b.ls	130c <kernel+0x3fc>  // b.plast
    143c:	b	1310 <kernel+0x400>
    1440:	mov	w8, #0x0                   	// #0
    1444:	b	1310 <kernel+0x400>
    1448:	cmp	w5, #0x19
    144c:	b.ls	13a4 <kernel+0x494>  // b.plast
    1450:	b	13a8 <kernel+0x498>
    1454:	mov	w7, #0x0                   	// #0
    1458:	b	13a8 <kernel+0x498>
    145c:	mov	w0, #0x0                   	// #0
    1460:	b	f74 <kernel+0x64>
    1464:	ldrb	w1, [x4]
    1468:	b	13bc <kernel+0x4ac>
    146c:	ldrb	w0, [x4]
    1470:	b	1324 <kernel+0x414>
    1474:	mov	w8, #0x0                   	// #0
    1478:	mov	w0, #0x2e                  	// #46
    147c:	b	1324 <kernel+0x414>
    1480:	ldrb	w0, [x3]
    1484:	b	10d8 <kernel+0x1c8>
	...

00000000000014d8 <syslinux_parse_real>:
    14d8:	stp	x29, x30, [sp, #-144]!
    14dc:	mov	x29, sp
    14e0:	stp	x19, x20, [sp, #16]
    14e4:	stp	x23, x24, [sp, #48]
    14e8:	str	x0, [sp, #128]
    14ec:	mov	w1, #0x33                  	// #51
    14f0:	ldr	x0, [x0, #72]
    14f4:	bl	0 <grub_file_open>
    14f8:	str	x0, [sp, #120]
    14fc:	mov	x24, #0x0                   	// #0
    1500:	cbz	x0, 15c0 <syslinux_parse_real+0xe8>
    1504:	stp	x21, x22, [sp, #32]
    1508:	stp	x25, x26, [sp, #64]
    150c:	stp	x27, x28, [sp, #80]
    1510:	mov	x0, x24
    1514:	bl	0 <grub_free>
    1518:	ldr	x0, [sp, #120]
    151c:	bl	0 <grub_file_getline>
    1520:	mov	x24, x0
    1524:	cbz	x0, 1bf0 <syslinux_parse_real+0x718>
    1528:	mov	x0, x24
    152c:	bl	0 <grub_strlen>
    1530:	add	x0, x24, x0
    1534:	cmp	x24, x0
    1538:	b.cs	155c <syslinux_parse_real+0x84>  // b.hs, b.nlast
    153c:	ldurb	w1, [x0, #-1]
    1540:	cmp	w1, #0xa
    1544:	ccmp	w1, #0xd, #0x4, ne  // ne = any
    1548:	b.ne	155c <syslinux_parse_real+0x84>  // b.any
    154c:	sub	x0, x0, #0x1
    1550:	cmp	x24, x0
    1554:	b.ne	153c <syslinux_parse_real+0x64>  // b.any
    1558:	mov	x0, x24
    155c:	strb	wzr, [x0]
    1560:	ldrb	w0, [x24]
    1564:	mov	x23, x24
    1568:	cbz	w0, 1580 <syslinux_parse_real+0xa8>
    156c:	bl	0 <grub_isspace>
    1570:	mov	w20, w0
    1574:	cbz	w0, 15d0 <syslinux_parse_real+0xf8>
    1578:	ldrb	w0, [x23, #1]!
    157c:	cbnz	w0, 156c <syslinux_parse_real+0x94>
    1580:	mov	w2, #0x1                   	// #1
    1584:	mov	x1, x23
    1588:	ldr	x0, [sp, #128]
    158c:	bl	a70 <add_comment>
    1590:	mov	w19, w0
    1594:	cbz	w0, 1510 <syslinux_parse_real+0x38>
    1598:	ldr	x0, [sp, #120]
    159c:	bl	0 <grub_file_close>
    15a0:	ldp	x21, x22, [sp, #32]
    15a4:	ldp	x25, x26, [sp, #64]
    15a8:	ldp	x27, x28, [sp, #80]
    15ac:	mov	w0, w19
    15b0:	ldp	x19, x20, [sp, #16]
    15b4:	ldp	x23, x24, [sp, #48]
    15b8:	ldp	x29, x30, [sp], #144
    15bc:	ret
    15c0:	adrp	x0, 0 <grub_strcasecmp>
    15c4:	ldr	x0, [x0]
    15c8:	ldr	w19, [x0]
    15cc:	b	15ac <syslinux_parse_real+0xd4>
    15d0:	ldrb	w0, [x23]
    15d4:	cmp	w0, #0x23
    15d8:	mov	x22, x23
    15dc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    15e0:	b.ne	15ec <syslinux_parse_real+0x114>  // b.any
    15e4:	b	1580 <syslinux_parse_real+0xa8>
    15e8:	add	x22, x22, #0x1
    15ec:	ldrb	w0, [x22]
    15f0:	bl	0 <grub_isspace>
    15f4:	cbnz	w0, 1608 <syslinux_parse_real+0x130>
    15f8:	ldrb	w0, [x22]
    15fc:	cbnz	w0, 15e8 <syslinux_parse_real+0x110>
    1600:	mov	x25, x22
    1604:	b	160c <syslinux_parse_real+0x134>
    1608:	mov	x25, x22
    160c:	ldrb	w0, [x25]
    1610:	bl	0 <grub_isspace>
    1614:	cbz	w0, 1630 <syslinux_parse_real+0x158>
    1618:	ldrb	w0, [x25]
    161c:	cbz	w0, 1628 <syslinux_parse_real+0x150>
    1620:	add	x25, x25, #0x1
    1624:	b	160c <syslinux_parse_real+0x134>
    1628:	mov	x26, x25
    162c:	b	1634 <syslinux_parse_real+0x15c>
    1630:	mov	x26, x25
    1634:	ldrb	w0, [x26]
    1638:	bl	0 <grub_isspace>
    163c:	cbnz	w0, 169c <syslinux_parse_real+0x1c4>
    1640:	ldrb	w0, [x26]
    1644:	cbz	w0, 1650 <syslinux_parse_real+0x178>
    1648:	add	x26, x26, #0x1
    164c:	b	1634 <syslinux_parse_real+0x15c>
    1650:	mov	x27, x26
    1654:	b	165c <syslinux_parse_real+0x184>
    1658:	add	x27, x27, #0x1
    165c:	ldrb	w0, [x27]
    1660:	bl	0 <grub_isspace>
    1664:	cbz	w0, 1670 <syslinux_parse_real+0x198>
    1668:	ldrb	w0, [x27]
    166c:	cbnz	w0, 1658 <syslinux_parse_real+0x180>
    1670:	adrp	x0, 0 <grub_strcasecmp>
    1674:	ldr	x19, [x0]
    1678:	mov	w21, #0x0                   	// #0
    167c:	sub	x22, x22, x23
    1680:	sub	x0, x26, x25
    1684:	str	x0, [sp, #104]
    1688:	sub	x0, x0, #0x1
    168c:	str	x0, [sp, #136]
    1690:	sub	x0, x22, #0x1
    1694:	str	x0, [sp, #112]
    1698:	b	16e4 <syslinux_parse_real+0x20c>
    169c:	mov	x27, x26
    16a0:	b	165c <syslinux_parse_real+0x184>
    16a4:	mov	w1, w0
    16a8:	sub	w0, w0, #0x41
    16ac:	cmp	w0, #0x19
    16b0:	b.hi	16b8 <syslinux_parse_real+0x1e0>  // b.pmore
    16b4:	add	w1, w1, #0x20
    16b8:	ldrb	w0, [x5]
    16bc:	sub	w3, w0, #0x41
    16c0:	add	w2, w0, #0x20
    16c4:	cmp	w3, #0x1a
    16c8:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    16cc:	cmp	w0, w1
    16d0:	b.eq	1760 <syslinux_parse_real+0x288>  // b.none
    16d4:	add	w21, w21, #0x1
    16d8:	add	x19, x19, #0x18
    16dc:	cmp	w21, #0x1a
    16e0:	b.eq	1860 <syslinux_parse_real+0x388>  // b.none
    16e4:	mov	x28, x19
    16e8:	ldr	x0, [x19]
    16ec:	bl	0 <grub_strlen>
    16f0:	cmp	x0, x22
    16f4:	b.ne	16d4 <syslinux_parse_real+0x1fc>  // b.any
    16f8:	cbz	x22, 1760 <syslinux_parse_real+0x288>
    16fc:	ldr	x4, [x19]
    1700:	ldrb	w0, [x4]
    1704:	cbz	w0, 1c48 <syslinux_parse_real+0x770>
    1708:	ldr	x1, [sp, #112]
    170c:	add	x7, x4, x1
    1710:	mov	x5, x23
    1714:	ldrb	w2, [x5]
    1718:	cbz	w2, 1c50 <syslinux_parse_real+0x778>
    171c:	cmp	x7, x4
    1720:	b.eq	16a4 <syslinux_parse_real+0x1cc>  // b.none
    1724:	sub	w3, w0, #0x41
    1728:	add	w1, w0, #0x20
    172c:	cmp	w3, #0x1a
    1730:	csel	w1, w1, w0, cc  // cc = lo, ul, last
    1734:	sub	w6, w2, #0x41
    1738:	add	w3, w2, #0x20
    173c:	cmp	w6, #0x1a
    1740:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    1744:	cmp	w2, w1
    1748:	b.ne	16a4 <syslinux_parse_real+0x1cc>  // b.any
    174c:	add	x5, x5, #0x1
    1750:	ldrb	w0, [x4, #1]!
    1754:	cbnz	w0, 1714 <syslinux_parse_real+0x23c>
    1758:	mov	w1, w20
    175c:	b	16b8 <syslinux_parse_real+0x1e0>
    1760:	ldr	x0, [x28, #8]
    1764:	cbz	x0, 1810 <syslinux_parse_real+0x338>
    1768:	bl	0 <grub_strlen>
    176c:	ldr	x1, [sp, #104]
    1770:	cmp	x0, x1
    1774:	b.ne	16d4 <syslinux_parse_real+0x1fc>  // b.any
    1778:	cbz	x1, 1810 <syslinux_parse_real+0x338>
    177c:	ldr	x4, [x28, #8]
    1780:	ldrb	w1, [x4]
    1784:	cbz	w1, 1c28 <syslinux_parse_real+0x750>
    1788:	ldr	x0, [sp, #136]
    178c:	add	x7, x4, x0
    1790:	mov	x5, x25
    1794:	ldrb	w2, [x5]
    1798:	cbz	w2, 1c30 <syslinux_parse_real+0x758>
    179c:	cmp	x4, x7
    17a0:	b.eq	17e0 <syslinux_parse_real+0x308>  // b.none
    17a4:	sub	w3, w1, #0x41
    17a8:	add	w0, w1, #0x20
    17ac:	cmp	w3, #0x1a
    17b0:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    17b4:	sub	w6, w2, #0x41
    17b8:	add	w3, w2, #0x20
    17bc:	cmp	w6, #0x1a
    17c0:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    17c4:	cmp	w2, w0
    17c8:	b.ne	17e0 <syslinux_parse_real+0x308>  // b.any
    17cc:	add	x5, x5, #0x1
    17d0:	ldrb	w1, [x4, #1]!
    17d4:	cbnz	w1, 1794 <syslinux_parse_real+0x2bc>
    17d8:	mov	w2, w20
    17dc:	b	17f4 <syslinux_parse_real+0x31c>
    17e0:	mov	w2, w1
    17e4:	sub	w1, w1, #0x41
    17e8:	cmp	w1, #0x19
    17ec:	b.hi	17f4 <syslinux_parse_real+0x31c>  // b.pmore
    17f0:	add	w2, w2, #0x20
    17f4:	ldrb	w0, [x5]
    17f8:	sub	w3, w0, #0x41
    17fc:	add	w1, w0, #0x20
    1800:	cmp	w3, #0x1a
    1804:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1808:	cmp	w0, w2
    180c:	b.ne	16d4 <syslinux_parse_real+0x1fc>  // b.any
    1810:	cmp	w21, #0x1a
    1814:	b.eq	1860 <syslinux_parse_real+0x388>  // b.none
    1818:	adrp	x0, 0 <grub_strcasecmp>
    181c:	ldr	x1, [x0]
    1820:	ubfiz	x0, x21, #1, #32
    1824:	add	x0, x0, w21, uxtw
    1828:	add	x0, x1, x0, lsl #3
    182c:	ldr	x2, [x0, #16]
    1830:	cbz	x2, 1510 <syslinux_parse_real+0x38>
    1834:	ubfiz	x0, x21, #1, #32
    1838:	add	x0, x0, w21, uxtw
    183c:	add	x0, x1, x0, lsl #3
    1840:	ldr	x0, [x0, #8]
    1844:	cmp	x0, #0x0
    1848:	ldr	x1, [sp, #128]
    184c:	csel	x0, x27, x25, ne  // ne = any
    1850:	blr	x2
    1854:	mov	w19, w0
    1858:	cbz	w0, 1510 <syslinux_parse_real+0x38>
    185c:	b	1598 <syslinux_parse_real+0xc0>
    1860:	cmp	x22, #0x4
    1864:	b.ne	1bb0 <syslinux_parse_real+0x6d8>  // b.any
    1868:	add	x7, x23, #0x3
    186c:	mov	x3, x23
    1870:	adrp	x0, 0 <grub_strcasecmp>
    1874:	ldr	x5, [x0]
    1878:	mov	w1, #0x74                  	// #116
    187c:	ldrb	w2, [x3]
    1880:	cbz	w2, 1c10 <syslinux_parse_real+0x738>
    1884:	cmp	x3, x7
    1888:	b.eq	18d0 <syslinux_parse_real+0x3f8>  // b.none
    188c:	sub	w4, w1, #0x41
    1890:	add	w0, w1, #0x20
    1894:	cmp	w4, #0x1a
    1898:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    189c:	sub	w6, w2, #0x41
    18a0:	add	w4, w2, #0x20
    18a4:	cmp	w6, #0x1a
    18a8:	csel	w2, w4, w2, cc  // cc = lo, ul, last
    18ac:	cmp	w2, w0
    18b0:	b.ne	18cc <syslinux_parse_real+0x3f4>  // b.any
    18b4:	add	x3, x3, #0x1
    18b8:	ldrb	w1, [x5, #1]!
    18bc:	cbnz	w1, 187c <syslinux_parse_real+0x3a4>
    18c0:	mov	x7, x3
    18c4:	mov	w2, w20
    18c8:	b	18e4 <syslinux_parse_real+0x40c>
    18cc:	mov	x7, x3
    18d0:	mov	w2, w1
    18d4:	sub	w1, w1, #0x41
    18d8:	cmp	w1, #0x19
    18dc:	b.hi	18e4 <syslinux_parse_real+0x40c>  // b.pmore
    18e0:	add	w2, w2, #0x20
    18e4:	ldrb	w0, [x7]
    18e8:	sub	w3, w0, #0x41
    18ec:	add	w1, w0, #0x20
    18f0:	cmp	w3, #0x1a
    18f4:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    18f8:	cmp	w0, w2
    18fc:	b.ne	1bb0 <syslinux_parse_real+0x6d8>  // b.any
    1900:	sub	x26, x26, x25
    1904:	cmp	x26, #0x4
    1908:	b.ne	1bb0 <syslinux_parse_real+0x6d8>  // b.any
    190c:	add	x6, x25, #0x3
    1910:	adrp	x0, 0 <grub_strcasecmp>
    1914:	ldr	x4, [x0]
    1918:	mov	w1, #0x68                  	// #104
    191c:	ldrb	w2, [x25]
    1920:	cbz	w2, 1bf8 <syslinux_parse_real+0x720>
    1924:	cmp	x25, x6
    1928:	b.eq	1970 <syslinux_parse_real+0x498>  // b.none
    192c:	sub	w3, w1, #0x41
    1930:	add	w0, w1, #0x20
    1934:	cmp	w3, #0x1a
    1938:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    193c:	sub	w5, w2, #0x41
    1940:	add	w3, w2, #0x20
    1944:	cmp	w5, #0x1a
    1948:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    194c:	cmp	w2, w0
    1950:	b.ne	1974 <syslinux_parse_real+0x49c>  // b.any
    1954:	add	x25, x25, #0x1
    1958:	ldrb	w1, [x4, #1]!
    195c:	cbnz	w1, 191c <syslinux_parse_real+0x444>
    1960:	mov	w2, w20
    1964:	b	1988 <syslinux_parse_real+0x4b0>
    1968:	mov	x7, x3
    196c:	b	18e0 <syslinux_parse_real+0x408>
    1970:	mov	x25, x6
    1974:	mov	w2, w1
    1978:	sub	w1, w1, #0x41
    197c:	cmp	w1, #0x19
    1980:	b.hi	1988 <syslinux_parse_real+0x4b0>  // b.pmore
    1984:	add	w2, w2, #0x20
    1988:	ldrb	w0, [x25]
    198c:	sub	w3, w0, #0x41
    1990:	add	w1, w0, #0x20
    1994:	cmp	w3, #0x1a
    1998:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    199c:	cmp	w0, w2
    19a0:	b.ne	1bb0 <syslinux_parse_real+0x6d8>  // b.any
    19a4:	mov	x0, x27
    19a8:	bl	0 <grub_strdup>
    19ac:	mov	x25, x0
    19b0:	cbz	x0, 19cc <syslinux_parse_real+0x4f4>
    19b4:	mov	x0, x27
    19b8:	bl	0 <grub_strlen>
    19bc:	mov	x23, x0
    19c0:	mov	x26, #0x0                   	// #0
    19c4:	mov	x22, #0x0                   	// #0
    19c8:	b	1ac0 <syslinux_parse_real+0x5e8>
    19cc:	adrp	x0, 0 <grub_strcasecmp>
    19d0:	ldr	x0, [x0]
    19d4:	ldr	w0, [x0]
    19d8:	b	1b98 <syslinux_parse_real+0x6c0>
    19dc:	ldrb	w2, [x19]
    19e0:	cbz	w2, 1af4 <syslinux_parse_real+0x61c>
    19e4:	add	x8, x19, #0x6
    19e8:	mov	x6, x19
    19ec:	adrp	x1, 0 <grub_strcasecmp>
    19f0:	ldr	x5, [x1]
    19f4:	mov	w3, #0x65                  	// #101
    19f8:	cmp	x8, x6
    19fc:	b.eq	1a54 <syslinux_parse_real+0x57c>  // b.none
    1a00:	sub	w4, w2, #0x41
    1a04:	add	w1, w2, #0x20
    1a08:	cmp	w4, #0x1a
    1a0c:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    1a10:	sub	w7, w3, #0x41
    1a14:	add	w4, w3, #0x20
    1a18:	cmp	w7, #0x1a
    1a1c:	csel	w3, w4, w3, cc  // cc = lo, ul, last
    1a20:	cmp	w3, w1
    1a24:	b.ne	1a54 <syslinux_parse_real+0x57c>  // b.any
    1a28:	add	x5, x5, #0x1
    1a2c:	ldrb	w2, [x6, #1]!
    1a30:	cbz	w2, 1a68 <syslinux_parse_real+0x590>
    1a34:	ldrb	w3, [x5]
    1a38:	cbnz	w3, 19f8 <syslinux_parse_real+0x520>
    1a3c:	mov	w0, w2
    1a40:	sub	w2, w2, #0x41
    1a44:	cmp	w2, #0x19
    1a48:	b.ls	1a64 <syslinux_parse_real+0x58c>  // b.plast
    1a4c:	ldrb	w1, [x5]
    1a50:	b	1a7c <syslinux_parse_real+0x5a4>
    1a54:	mov	w0, w2
    1a58:	sub	w2, w2, #0x41
    1a5c:	cmp	w2, #0x19
    1a60:	b.hi	1a68 <syslinux_parse_real+0x590>  // b.pmore
    1a64:	add	w0, w0, #0x20
    1a68:	ldrb	w1, [x5]
    1a6c:	sub	w3, w1, #0x41
    1a70:	add	w2, w1, #0x20
    1a74:	cmp	w3, #0x1a
    1a78:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    1a7c:	cmp	w1, w0
    1a80:	b.eq	1b00 <syslinux_parse_real+0x628>  // b.none
    1a84:	mov	x0, x22
    1a88:	bl	0 <grub_strlen>
    1a8c:	add	x1, x23, #0x1
    1a90:	add	x0, x1, x0
    1a94:	cmp	x0, x26
    1a98:	b.hi	1b4c <syslinux_parse_real+0x674>  // b.pmore
    1a9c:	add	x4, x25, x23
    1aa0:	mov	x2, x22
    1aa4:	mov	x0, x4
    1aa8:	mov	x3, x0
    1aac:	ldrb	w1, [x2], #1
    1ab0:	strb	w1, [x0], #1
    1ab4:	cbnz	w1, 1aa8 <syslinux_parse_real+0x5d0>
    1ab8:	sub	x3, x3, x4
    1abc:	add	x23, x23, x3
    1ac0:	mov	x0, x22
    1ac4:	bl	0 <grub_free>
    1ac8:	ldr	x0, [sp, #120]
    1acc:	bl	0 <grub_file_getline>
    1ad0:	mov	x22, x0
    1ad4:	cbz	x0, 1b7c <syslinux_parse_real+0x6a4>
    1ad8:	ldrb	w0, [x0]
    1adc:	mov	x19, x22
    1ae0:	cbz	w0, 1af4 <syslinux_parse_real+0x61c>
    1ae4:	bl	0 <grub_isspace>
    1ae8:	cbz	w0, 19dc <syslinux_parse_real+0x504>
    1aec:	ldrb	w0, [x19, #1]!
    1af0:	cbnz	w0, 1ae4 <syslinux_parse_real+0x60c>
    1af4:	mov	w0, w20
    1af8:	mov	w1, #0x65                  	// #101
    1afc:	b	1a7c <syslinux_parse_real+0x5a4>
    1b00:	add	x21, x19, #0x7
    1b04:	ldrb	w0, [x19, #7]
    1b08:	cbnz	w0, 1b2c <syslinux_parse_real+0x654>
    1b0c:	ldr	x0, [sp, #128]
    1b10:	ldr	x0, [x0, #8]
    1b14:	str	x25, [x0, #72]
    1b18:	mov	x0, x22
    1b1c:	bl	0 <grub_free>
    1b20:	b	1510 <syslinux_parse_real+0x38>
    1b24:	ldrb	w0, [x21, #1]!
    1b28:	cbz	w0, 1b0c <syslinux_parse_real+0x634>
    1b2c:	bl	0 <grub_isspace>
    1b30:	cbnz	w0, 1b24 <syslinux_parse_real+0x64c>
    1b34:	ldrb	w0, [x21]
    1b38:	cmp	w0, #0xd
    1b3c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    1b40:	b.eq	1b24 <syslinux_parse_real+0x64c>  // b.none
    1b44:	cbnz	w0, 1a84 <syslinux_parse_real+0x5ac>
    1b48:	b	1b0c <syslinux_parse_real+0x634>
    1b4c:	lsl	x26, x0, #1
    1b50:	mov	x1, x26
    1b54:	mov	x0, x25
    1b58:	bl	0 <grub_realloc>
    1b5c:	mov	x25, x0
    1b60:	cbnz	x0, 1a9c <syslinux_parse_real+0x5c4>
    1b64:	mov	x0, x22
    1b68:	bl	0 <grub_free>
    1b6c:	adrp	x0, 0 <grub_strcasecmp>
    1b70:	ldr	x0, [x0]
    1b74:	ldr	w0, [x0]
    1b78:	b	1b98 <syslinux_parse_real+0x6c0>
    1b7c:	mov	x0, #0x0                   	// #0
    1b80:	bl	0 <grub_free>
    1b84:	mov	x0, x25
    1b88:	bl	0 <grub_free>
    1b8c:	adrp	x0, 0 <grub_strcasecmp>
    1b90:	ldr	x0, [x0]
    1b94:	ldr	w0, [x0]
    1b98:	cbz	w0, 1510 <syslinux_parse_real+0x38>
    1b9c:	mov	w19, #0x1                   	// #1
    1ba0:	ldp	x21, x22, [sp, #32]
    1ba4:	ldp	x25, x26, [sp, #64]
    1ba8:	ldp	x27, x28, [sp, #80]
    1bac:	b	15ac <syslinux_parse_real+0xd4>
    1bb0:	mov	w2, #0x0                   	// #0
    1bb4:	adrp	x0, 0 <grub_strcasecmp>
    1bb8:	ldr	x1, [x0]
    1bbc:	ldr	x19, [sp, #128]
    1bc0:	mov	x0, x19
    1bc4:	bl	a70 <add_comment>
    1bc8:	mov	w2, #0x0                   	// #0
    1bcc:	mov	x1, x23
    1bd0:	mov	x0, x19
    1bd4:	bl	a70 <add_comment>
    1bd8:	mov	w2, #0x1                   	// #1
    1bdc:	adrp	x0, 0 <grub_strcasecmp>
    1be0:	ldr	x1, [x0]
    1be4:	mov	x0, x19
    1be8:	bl	a70 <add_comment>
    1bec:	b	1510 <syslinux_parse_real+0x38>
    1bf0:	mov	w19, #0x0                   	// #0
    1bf4:	b	1598 <syslinux_parse_real+0xc0>
    1bf8:	mov	w2, w1
    1bfc:	sub	w1, w1, #0x41
    1c00:	cmp	w1, #0x19
    1c04:	b.ls	1984 <syslinux_parse_real+0x4ac>  // b.plast
    1c08:	ldrb	w0, [x25]
    1c0c:	b	199c <syslinux_parse_real+0x4c4>
    1c10:	mov	w2, w1
    1c14:	sub	w1, w1, #0x41
    1c18:	cmp	w1, #0x19
    1c1c:	b.ls	1968 <syslinux_parse_real+0x490>  // b.plast
    1c20:	ldrb	w0, [x3]
    1c24:	b	18f8 <syslinux_parse_real+0x420>
    1c28:	mov	x5, x25
    1c2c:	b	17d8 <syslinux_parse_real+0x300>
    1c30:	mov	w2, w1
    1c34:	sub	w1, w1, #0x41
    1c38:	cmp	w1, #0x19
    1c3c:	b.ls	17f0 <syslinux_parse_real+0x318>  // b.plast
    1c40:	ldrb	w0, [x5]
    1c44:	b	1808 <syslinux_parse_real+0x330>
    1c48:	mov	x5, x23
    1c4c:	b	1758 <syslinux_parse_real+0x280>
    1c50:	mov	w1, w0
    1c54:	sub	w0, w0, #0x41
    1c58:	cmp	w0, #0x19
    1c5c:	b.ls	16b4 <syslinux_parse_real+0x1dc>  // b.plast
    1c60:	ldrb	w0, [x5]
    1c64:	b	16cc <syslinux_parse_real+0x1f4>
	...

0000000000001ca0 <syslinux_parse>:
    1ca0:	stp	x29, x30, [sp, #-48]!
    1ca4:	mov	x29, sp
    1ca8:	stp	x19, x20, [sp, #16]
    1cac:	stp	x21, x22, [sp, #32]
    1cb0:	mov	x19, x1
    1cb4:	ldr	x22, [x1, #72]
    1cb8:	mov	x1, x0
    1cbc:	mov	x0, x19
    1cc0:	bl	a30 <get_read_filename>
    1cc4:	cbz	x0, 1d08 <syslinux_parse+0x68>
    1cc8:	mov	x20, x0
    1ccc:	str	x0, [x19, #72]
    1cd0:	mov	x0, x19
    1cd4:	bl	14d8 <syslinux_parse_real>
    1cd8:	mov	w21, w0
    1cdc:	and	w0, w0, #0xfffffffd
    1ce0:	cmp	w0, #0x5
    1ce4:	b.eq	1d18 <syslinux_parse+0x78>  // b.none
    1ce8:	mov	x0, x20
    1cec:	bl	0 <grub_free>
    1cf0:	str	x22, [x19, #72]
    1cf4:	mov	w0, w21
    1cf8:	ldp	x19, x20, [sp, #16]
    1cfc:	ldp	x21, x22, [sp, #32]
    1d00:	ldp	x29, x30, [sp], #48
    1d04:	ret
    1d08:	adrp	x0, 0 <grub_strcasecmp>
    1d0c:	ldr	x0, [x0]
    1d10:	ldr	w21, [x0]
    1d14:	b	1cf4 <syslinux_parse+0x54>
    1d18:	adrp	x0, 0 <grub_strcasecmp>
    1d1c:	ldr	x0, [x0]
    1d20:	str	wzr, [x0]
    1d24:	mov	w2, #0x0                   	// #0
    1d28:	adrp	x0, 0 <grub_strcasecmp>
    1d2c:	ldr	x1, [x0]
    1d30:	mov	x0, x19
    1d34:	bl	a70 <add_comment>
    1d38:	mov	w2, #0x0                   	// #0
    1d3c:	mov	x1, x20
    1d40:	mov	x0, x19
    1d44:	bl	a70 <add_comment>
    1d48:	mov	w2, #0x1                   	// #1
    1d4c:	adrp	x0, 0 <grub_strcasecmp>
    1d50:	ldr	x1, [x0]
    1d54:	mov	x0, x19
    1d58:	bl	a70 <add_comment>
    1d5c:	mov	w21, #0x0                   	// #0
    1d60:	b	1ce8 <syslinux_parse+0x48>
    1d64:	nop
	...

0000000000001d80 <write_entry>:
    1d80:	stp	x29, x30, [sp, #-144]!
    1d84:	mov	x29, sp
    1d88:	stp	x19, x20, [sp, #16]
    1d8c:	stp	x21, x22, [sp, #32]
    1d90:	stp	x23, x24, [sp, #48]
    1d94:	mov	x19, x0
    1d98:	mov	x20, x1
    1d9c:	mov	x23, x2
    1da0:	ldr	x21, [x2, #80]
    1da4:	cbz	x21, 1dc8 <write_entry+0x48>
    1da8:	mov	x0, x21
    1dac:	bl	0 <grub_strlen>
    1db0:	mov	x2, x0
    1db4:	mov	x1, x21
    1db8:	mov	x0, x19
    1dbc:	bl	db0 <print>
    1dc0:	mov	w21, w0
    1dc4:	cbnz	w0, 3728 <write_entry+0x19a8>
    1dc8:	ldr	x22, [x23, #104]
    1dcc:	b	1dd4 <write_entry+0x54>
    1dd0:	mov	x22, x0
    1dd4:	cbz	x22, 1e78 <write_entry+0xf8>
    1dd8:	ldr	x0, [x22]
    1ddc:	cbnz	x0, 1dd0 <write_entry+0x50>
    1de0:	stp	x25, x26, [sp, #64]
    1de4:	stp	x27, x28, [sp, #80]
    1de8:	adrp	x25, 0 <grub_strcasecmp>
    1dec:	mov	x24, #0x5                   	// #5
    1df0:	adrp	x27, 0 <grub_strcasecmp>
    1df4:	mov	x26, #0x1                   	// #1
    1df8:	ldr	x0, [x22, #8]
    1dfc:	cbz	x0, 1e70 <write_entry+0xf0>
    1e00:	mov	x2, x24
    1e04:	ldr	x1, [x25]
    1e08:	mov	x0, x19
    1e0c:	bl	db0 <print>
    1e10:	mov	w21, w0
    1e14:	cbnz	w0, 3720 <write_entry+0x19a0>
    1e18:	mov	x2, #0x0                   	// #0
    1e1c:	add	x1, x22, #0x10
    1e20:	mov	x0, x19
    1e24:	bl	c88 <print_escaped>
    1e28:	cbnz	w0, 1e58 <write_entry+0xd8>
    1e2c:	mov	x2, x26
    1e30:	ldr	x1, [x27]
    1e34:	mov	x0, x19
    1e38:	bl	db0 <print>
    1e3c:	mov	w21, w0
    1e40:	cbnz	w0, 3740 <write_entry+0x19c0>
    1e44:	ldr	x22, [x22, #8]
    1e48:	cbnz	x22, 1df8 <write_entry+0x78>
    1e4c:	ldp	x25, x26, [sp, #64]
    1e50:	ldp	x27, x28, [sp, #80]
    1e54:	b	1e78 <write_entry+0xf8>
    1e58:	adrp	x0, 0 <grub_strcasecmp>
    1e5c:	ldr	x0, [x0]
    1e60:	ldr	w21, [x0]
    1e64:	ldp	x25, x26, [sp, #64]
    1e68:	ldp	x27, x28, [sp, #80]
    1e6c:	b	3728 <write_entry+0x19a8>
    1e70:	ldp	x25, x26, [sp, #64]
    1e74:	ldp	x27, x28, [sp, #80]
    1e78:	ldr	w0, [x23, #112]
    1e7c:	cmp	w0, #0x5
    1e80:	b.eq	2298 <write_entry+0x518>  // b.none
    1e84:	b.ls	1f44 <write_entry+0x1c4>  // b.plast
    1e88:	cmp	w0, #0x9
    1e8c:	b.eq	33a4 <write_entry+0x1624>  // b.none
    1e90:	cmp	w0, #0x9
    1e94:	b.ls	1fb8 <write_entry+0x238>  // b.plast
    1e98:	mov	w21, #0x0                   	// #0
    1e9c:	cmp	w0, #0xa
    1ea0:	b.ne	3728 <write_entry+0x19a8>  // b.any
    1ea4:	ldr	x21, [x23, #32]
    1ea8:	ldrb	w0, [x21]
    1eac:	cbz	w0, 1ec4 <write_entry+0x144>
    1eb0:	bl	0 <grub_isspace>
    1eb4:	mov	w20, w0
    1eb8:	cbz	w0, 22e4 <write_entry+0x564>
    1ebc:	ldrb	w0, [x21, #1]!
    1ec0:	cbnz	w0, 1eb0 <write_entry+0x130>
    1ec4:	mov	w2, #0x0                   	// #0
    1ec8:	mov	x1, #0x0                   	// #0
    1ecc:	mov	x0, x21
    1ed0:	bl	0 <grub_strtoull>
    1ed4:	tbz	x0, #63, 2314 <write_entry+0x594>
    1ed8:	adrp	x0, 0 <grub_strcasecmp>
    1edc:	ldr	x1, [x0]
    1ee0:	mov	w0, #0xb                   	// #11
    1ee4:	bl	0 <grub_error>
    1ee8:	mov	w20, #0xffffffff            	// #-1
    1eec:	mov	x2, #0x1f                  	// #31
    1ef0:	adrp	x0, 0 <grub_strcasecmp>
    1ef4:	ldr	x1, [x0]
    1ef8:	mov	x0, x19
    1efc:	bl	db0 <print>
    1f00:	mov	w21, w0
    1f04:	cbnz	w0, 3728 <write_entry+0x19a8>
    1f08:	mov	x2, #0x7                   	// #7
    1f0c:	adrp	x0, 0 <grub_strcasecmp>
    1f10:	ldr	x1, [x0]
    1f14:	mov	x0, x19
    1f18:	bl	db0 <print>
    1f1c:	mov	w21, w0
    1f20:	cbnz	w0, 3728 <write_entry+0x19a8>
    1f24:	mov	w1, w20
    1f28:	mov	x0, x19
    1f2c:	bl	eb8 <print_num>
    1f30:	cbz	w0, 23ec <write_entry+0x66c>
    1f34:	adrp	x0, 0 <grub_strcasecmp>
    1f38:	ldr	x0, [x0]
    1f3c:	ldr	w21, [x0]
    1f40:	b	3728 <write_entry+0x19a8>
    1f44:	cmp	w0, #0x2
    1f48:	b.eq	224c <write_entry+0x4cc>  // b.none
    1f4c:	b.ls	1f8c <write_entry+0x20c>  // b.plast
    1f50:	mov	x2, #0x1b                  	// #27
    1f54:	adrp	x0, 0 <grub_strcasecmp>
    1f58:	ldr	x1, [x0]
    1f5c:	mov	x0, x19
    1f60:	bl	db0 <print>
    1f64:	mov	w21, w0
    1f68:	cbnz	w0, 3728 <write_entry+0x19a8>
    1f6c:	ldr	w1, [x23, #112]
    1f70:	mov	x0, x19
    1f74:	bl	eb8 <print_num>
    1f78:	cbz	w0, 33d8 <write_entry+0x1658>
    1f7c:	adrp	x0, 0 <grub_strcasecmp>
    1f80:	ldr	x0, [x0]
    1f84:	ldr	w21, [x0]
    1f88:	b	3728 <write_entry+0x19a8>
    1f8c:	cbz	w0, 1f50 <write_entry+0x1d0>
    1f90:	mov	w21, #0x0                   	// #0
    1f94:	cmp	w0, #0x1
    1f98:	b.ne	3728 <write_entry+0x19a8>  // b.any
    1f9c:	ldr	x22, [x23, #56]
    1fa0:	cbz	x22, 21c0 <write_entry+0x440>
    1fa4:	stp	x25, x26, [sp, #64]
    1fa8:	add	x21, x22, #0x6
    1fac:	adrp	x24, 0 <grub_strcasecmp>
    1fb0:	mov	w25, #0x69                  	// #105
    1fb4:	b	2104 <write_entry+0x384>
    1fb8:	cmp	w0, #0x7
    1fbc:	b.hi	20bc <write_entry+0x33c>  // b.pmore
    1fc0:	ldr	x4, [x23, #32]
    1fc4:	ldrb	w0, [x4]
    1fc8:	cbz	w0, 370c <write_entry+0x198c>
    1fcc:	mov	x1, x4
    1fd0:	mov	x2, #0x0                   	// #0
    1fd4:	mov	w3, #0x5c                  	// #92
    1fd8:	cmp	w0, #0x2f
    1fdc:	ccmp	w0, w3, #0x4, ne  // ne = any
    1fe0:	csel	x2, x2, x1, ne  // ne = any
    1fe4:	ldrb	w0, [x1, #1]!
    1fe8:	cbnz	w0, 1fd8 <write_entry+0x258>
    1fec:	cbz	x2, 36fc <write_entry+0x197c>
    1ff0:	add	x4, x2, #0x1
    1ff4:	ldrb	w0, [x2, #1]
    1ff8:	cbz	w0, 36f0 <write_entry+0x1970>
    1ffc:	mov	w8, w0
    2000:	mov	x22, x4
    2004:	adrp	x1, 0 <grub_strcasecmp>
    2008:	ldr	x3, [x1]
    200c:	mov	w1, #0x63                  	// #99
    2010:	mov	w7, w0
    2014:	sub	w5, w0, #0x41
    2018:	add	w2, w0, #0x20
    201c:	cmp	w5, #0x1a
    2020:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    2024:	sub	w6, w1, #0x41
    2028:	add	w2, w1, #0x20
    202c:	cmp	w6, #0x1a
    2030:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    2034:	cmp	w1, w0
    2038:	b.ne	2408 <write_entry+0x688>  // b.any
    203c:	add	x3, x3, #0x1
    2040:	ldrb	w0, [x4, #1]!
    2044:	cbz	w0, 2414 <write_entry+0x694>
    2048:	ldrb	w1, [x3]
    204c:	cbnz	w1, 2010 <write_entry+0x290>
    2050:	mov	w7, w0
    2054:	sub	w0, w0, #0x41
    2058:	cmp	w0, #0x19
    205c:	b.hi	36e8 <write_entry+0x1968>  // b.pmore
    2060:	add	w7, w7, #0x20
    2064:	ldrb	w0, [x3]
    2068:	sub	w2, w0, #0x41
    206c:	add	w1, w0, #0x20
    2070:	cmp	w2, #0x1a
    2074:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    2078:	cmp	w0, w7
    207c:	b.ne	241c <write_entry+0x69c>  // b.any
    2080:	ldr	x0, [x23, #56]
    2084:	str	x0, [sp, #112]
    2088:	ldrb	w0, [x0]
    208c:	cbz	w0, 27cc <write_entry+0xa4c>
    2090:	stp	x25, x26, [sp, #64]
    2094:	stp	x27, x28, [sp, #80]
    2098:	mov	w25, #0x0                   	// #0
    209c:	mov	w23, #0xffffffff            	// #-1
    20a0:	str	wzr, [sp, #108]
    20a4:	mov	w26, w23
    20a8:	mov	x27, #0x0                   	// #0
    20ac:	mov	w28, #0x1                   	// #1
    20b0:	adrp	x24, 0 <grub_strcasecmp>
    20b4:	adrp	x22, 0 <grub_strcasecmp>
    20b8:	b	24a0 <write_entry+0x720>
    20bc:	mov	w21, #0x0                   	// #0
    20c0:	cmp	w0, #0x8
    20c4:	b.eq	1f50 <write_entry+0x1d0>  // b.none
    20c8:	b	3728 <write_entry+0x19a8>
    20cc:	mov	w2, w1
    20d0:	sub	w1, w1, #0x41
    20d4:	cmp	w1, #0x19
    20d8:	b.hi	20e0 <write_entry+0x360>  // b.pmore
    20dc:	add	w2, w2, #0x20
    20e0:	ldrb	w0, [x4]
    20e4:	sub	w3, w0, #0x41
    20e8:	add	w1, w0, #0x20
    20ec:	cmp	w3, #0x1a
    20f0:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    20f4:	cmp	w0, w2
    20f8:	b.eq	340c <write_entry+0x168c>  // b.none
    20fc:	add	x22, x22, #0x1
    2100:	add	x21, x21, #0x1
    2104:	ldrb	w1, [x22]
    2108:	cbz	w1, 340c <write_entry+0x168c>
    210c:	ldr	x0, [x23, #56]
    2110:	cmp	x0, x22
    2114:	b.eq	2134 <write_entry+0x3b4>  // b.none
    2118:	ldurb	w0, [x22, #-1]
    211c:	bl	0 <grub_isspace>
    2120:	cbz	w0, 20fc <write_entry+0x37c>
    2124:	ldrb	w1, [x22]
    2128:	mov	w2, #0x0                   	// #0
    212c:	mov	w0, w25
    2130:	cbz	w1, 20f4 <write_entry+0x374>
    2134:	mov	x5, x22
    2138:	ldr	x4, [x24]
    213c:	ldrb	w2, [x4]
    2140:	cbz	w2, 3520 <write_entry+0x17a0>
    2144:	cmp	x5, x21
    2148:	b.eq	20cc <write_entry+0x34c>  // b.none
    214c:	sub	w3, w1, #0x41
    2150:	add	w0, w1, #0x20
    2154:	cmp	w3, #0x1a
    2158:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    215c:	sub	w6, w2, #0x41
    2160:	add	w3, w2, #0x20
    2164:	cmp	w6, #0x1a
    2168:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    216c:	cmp	w2, w0
    2170:	b.ne	20cc <write_entry+0x34c>  // b.any
    2174:	add	x4, x4, #0x1
    2178:	ldrb	w1, [x5, #1]!
    217c:	cbnz	w1, 213c <write_entry+0x3bc>
    2180:	mov	w2, #0x0                   	// #0
    2184:	b	20e0 <write_entry+0x360>
    2188:	add	x24, x22, #0x7
    218c:	ldrb	w0, [x22, #7]
    2190:	mov	x22, x24
    2194:	cbz	w0, 21b0 <write_entry+0x430>
    2198:	bl	0 <grub_isspace>
    219c:	cbnz	w0, 21b8 <write_entry+0x438>
    21a0:	ldrb	w0, [x22, #1]!
    21a4:	cbnz	w0, 2198 <write_entry+0x418>
    21a8:	ldp	x25, x26, [sp, #64]
    21ac:	b	3420 <write_entry+0x16a0>
    21b0:	ldp	x25, x26, [sp, #64]
    21b4:	b	3420 <write_entry+0x16a0>
    21b8:	ldp	x25, x26, [sp, #64]
    21bc:	b	3420 <write_entry+0x16a0>
    21c0:	mov	x24, x22
    21c4:	b	3420 <write_entry+0x16a0>
    21c8:	ldr	x0, [x23, #40]
    21cc:	cbz	x0, 3728 <write_entry+0x19a8>
    21d0:	mov	x2, #0x16                  	// #22
    21d4:	adrp	x0, 0 <grub_strcasecmp>
    21d8:	ldr	x1, [x0]
    21dc:	mov	x0, x19
    21e0:	bl	db0 <print>
    21e4:	mov	w21, w0
    21e8:	cbnz	w0, 3728 <write_entry+0x19a8>
    21ec:	ldr	x22, [x23, #40]
    21f0:	cbz	x22, 2230 <write_entry+0x4b0>
    21f4:	adrp	x24, 0 <grub_strcasecmp>
    21f8:	mov	x23, #0x1                   	// #1
    21fc:	mov	x3, #0x0                   	// #0
    2200:	ldr	x2, [x22, #8]
    2204:	mov	x1, x20
    2208:	mov	x0, x19
    220c:	bl	e18 <print_file>
    2210:	mov	x2, x23
    2214:	ldr	x1, [x24]
    2218:	mov	x0, x19
    221c:	bl	db0 <print>
    2220:	mov	w21, w0
    2224:	cbnz	w0, 3728 <write_entry+0x19a8>
    2228:	ldr	x22, [x22]
    222c:	cbnz	x22, 21fc <write_entry+0x47c>
    2230:	mov	x2, #0x1                   	// #1
    2234:	adrp	x0, 0 <grub_strcasecmp>
    2238:	ldr	x1, [x0]
    223c:	mov	x0, x19
    2240:	bl	db0 <print>
    2244:	mov	w21, w0
    2248:	b	3728 <write_entry+0x19a8>
    224c:	mov	x2, #0xe                   	// #14
    2250:	adrp	x0, 0 <grub_strcasecmp>
    2254:	ldr	x1, [x0]
    2258:	mov	x0, x19
    225c:	bl	db0 <print>
    2260:	mov	w21, w0
    2264:	cbnz	w0, 3728 <write_entry+0x19a8>
    2268:	mov	x3, #0x0                   	// #0
    226c:	ldr	x2, [x23, #32]
    2270:	mov	x1, x20
    2274:	mov	x0, x19
    2278:	bl	e18 <print_file>
    227c:	mov	x2, #0x1                   	// #1
    2280:	adrp	x0, 0 <grub_strcasecmp>
    2284:	ldr	x1, [x0]
    2288:	mov	x0, x19
    228c:	bl	db0 <print>
    2290:	mov	w21, w0
    2294:	b	3728 <write_entry+0x19a8>
    2298:	mov	x2, #0x14                  	// #20
    229c:	adrp	x0, 0 <grub_strcasecmp>
    22a0:	ldr	x1, [x0]
    22a4:	mov	x0, x19
    22a8:	bl	db0 <print>
    22ac:	mov	w21, w0
    22b0:	cbnz	w0, 3728 <write_entry+0x19a8>
    22b4:	mov	x3, #0x0                   	// #0
    22b8:	ldr	x2, [x23, #32]
    22bc:	mov	x1, x20
    22c0:	mov	x0, x19
    22c4:	bl	e18 <print_file>
    22c8:	mov	x2, #0x1                   	// #1
    22cc:	adrp	x0, 0 <grub_strcasecmp>
    22d0:	ldr	x1, [x0]
    22d4:	mov	x0, x19
    22d8:	bl	db0 <print>
    22dc:	mov	w21, w0
    22e0:	b	3728 <write_entry+0x19a8>
    22e4:	ldrb	w0, [x21]
    22e8:	cmp	w0, #0x2d
    22ec:	b.ne	1ec4 <write_entry+0x144>  // b.any
    22f0:	mov	w2, #0x0                   	// #0
    22f4:	mov	x1, #0x0                   	// #0
    22f8:	add	x0, x21, #0x1
    22fc:	bl	0 <grub_strtoull>
    2300:	mov	x1, x0
    2304:	neg	x0, x0
    2308:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    230c:	cmp	x1, x2
    2310:	b.hi	2368 <write_entry+0x5e8>  // b.pmore
    2314:	mov	w20, w0
    2318:	cmp	w0, #0x2
    231c:	b.ls	2378 <write_entry+0x5f8>  // b.plast
    2320:	sub	w0, w0, #0x80
    2324:	cmp	w0, #0x9
    2328:	b.hi	1eec <write_entry+0x16c>  // b.pmore
    232c:	mov	x2, #0x9                   	// #9
    2330:	adrp	x0, 0 <grub_strcasecmp>
    2334:	ldr	x1, [x0]
    2338:	mov	x0, x19
    233c:	bl	db0 <print>
    2340:	mov	w21, w0
    2344:	cbnz	w0, 3728 <write_entry+0x19a8>
    2348:	sub	w1, w20, #0x80
    234c:	mov	x0, x19
    2350:	bl	eb8 <print_num>
    2354:	cbz	w0, 23d0 <write_entry+0x650>
    2358:	adrp	x0, 0 <grub_strcasecmp>
    235c:	ldr	x0, [x0]
    2360:	ldr	w21, [x0]
    2364:	b	3728 <write_entry+0x19a8>
    2368:	adrp	x0, 0 <grub_strcasecmp>
    236c:	ldr	x1, [x0]
    2370:	mov	w0, #0xb                   	// #11
    2374:	bl	0 <grub_error>
    2378:	mov	x2, #0x9                   	// #9
    237c:	adrp	x0, 0 <grub_strcasecmp>
    2380:	ldr	x1, [x0]
    2384:	mov	x0, x19
    2388:	bl	db0 <print>
    238c:	mov	w21, w0
    2390:	cbnz	w0, 3728 <write_entry+0x19a8>
    2394:	mov	w1, w20
    2398:	mov	x0, x19
    239c:	bl	eb8 <print_num>
    23a0:	cbz	w0, 23b4 <write_entry+0x634>
    23a4:	adrp	x0, 0 <grub_strcasecmp>
    23a8:	ldr	x0, [x0]
    23ac:	ldr	w21, [x0]
    23b0:	b	3728 <write_entry+0x19a8>
    23b4:	mov	x2, #0x14                  	// #20
    23b8:	adrp	x0, 0 <grub_strcasecmp>
    23bc:	ldr	x1, [x0]
    23c0:	mov	x0, x19
    23c4:	bl	db0 <print>
    23c8:	mov	w21, w0
    23cc:	b	3728 <write_entry+0x19a8>
    23d0:	mov	x2, #0x14                  	// #20
    23d4:	adrp	x0, 0 <grub_strcasecmp>
    23d8:	ldr	x1, [x0]
    23dc:	mov	x0, x19
    23e0:	bl	db0 <print>
    23e4:	mov	w21, w0
    23e8:	b	3728 <write_entry+0x19a8>
    23ec:	mov	x2, #0x1                   	// #1
    23f0:	adrp	x0, 0 <grub_strcasecmp>
    23f4:	ldr	x1, [x0]
    23f8:	mov	x0, x19
    23fc:	bl	db0 <print>
    2400:	mov	w21, w0
    2404:	b	3728 <write_entry+0x19a8>
    2408:	cmp	w5, #0x19
    240c:	b.ls	2060 <write_entry+0x2e0>  // b.plast
    2410:	b	2064 <write_entry+0x2e4>
    2414:	mov	w7, #0x0                   	// #0
    2418:	b	2064 <write_entry+0x2e4>
    241c:	adrp	x0, 0 <grub_strcasecmp>
    2420:	ldr	x3, [x0]
    2424:	cbz	w8, 368c <write_entry+0x190c>
    2428:	mov	x5, x22
    242c:	mov	w0, w8
    2430:	adrp	x1, 0 <grub_strcasecmp>
    2434:	ldr	x3, [x1]
    2438:	mov	w1, #0x6d                  	// #109
    243c:	mov	w7, w0
    2440:	sub	w4, w0, #0x41
    2444:	add	w2, w0, #0x20
    2448:	cmp	w4, #0x1a
    244c:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    2450:	sub	w6, w1, #0x41
    2454:	add	w2, w1, #0x20
    2458:	cmp	w6, #0x1a
    245c:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    2460:	cmp	w1, w0
    2464:	b.ne	295c <write_entry+0xbdc>  // b.any
    2468:	add	x3, x3, #0x1
    246c:	ldrb	w0, [x5, #1]!
    2470:	cbz	w0, 368c <write_entry+0x190c>
    2474:	ldrb	w1, [x3]
    2478:	cbnz	w1, 243c <write_entry+0x6bc>
    247c:	mov	w7, w0
    2480:	sub	w0, w0, #0x41
    2484:	cmp	w0, #0x19
    2488:	b.hi	36e0 <write_entry+0x1960>  // b.pmore
    248c:	add	w7, w7, #0x20
    2490:	b	3690 <write_entry+0x1910>
    2494:	ldr	x0, [sp, #112]
    2498:	add	x0, x0, #0x1
    249c:	str	x0, [sp, #112]
    24a0:	ldr	x0, [sp, #112]
    24a4:	ldrb	w0, [x0]
    24a8:	bl	0 <grub_isspace>
    24ac:	mov	w21, w0
    24b0:	cbnz	w0, 2494 <write_entry+0x714>
    24b4:	ldr	x0, [sp, #112]
    24b8:	ldrb	w5, [x0]
    24bc:	cmp	w5, #0x68
    24c0:	b.eq	2528 <write_entry+0x7a8>  // b.none
    24c4:	cbz	w5, 2550 <write_entry+0x7d0>
    24c8:	add	x9, x0, #0x4
    24cc:	mov	x7, x0
    24d0:	mov	w2, w5
    24d4:	adrp	x1, 0 <grub_strcasecmp>
    24d8:	ldr	x6, [x1]
    24dc:	ldrb	w3, [x6]
    24e0:	cbz	w3, 355c <write_entry+0x17dc>
    24e4:	cmp	x7, x9
    24e8:	b.eq	255c <write_entry+0x7dc>  // b.none
    24ec:	sub	w4, w2, #0x41
    24f0:	add	w1, w2, #0x20
    24f4:	cmp	w4, #0x1a
    24f8:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    24fc:	sub	w8, w3, #0x41
    2500:	add	w4, w3, #0x20
    2504:	cmp	w8, #0x1a
    2508:	csel	w3, w4, w3, cc  // cc = lo, ul, last
    250c:	cmp	w3, w1
    2510:	b.ne	255c <write_entry+0x7dc>  // b.any
    2514:	add	x6, x6, #0x1
    2518:	ldrb	w2, [x7, #1]!
    251c:	cbnz	w2, 24dc <write_entry+0x75c>
    2520:	mov	w3, w21
    2524:	b	2570 <write_entry+0x7f0>
    2528:	ldrb	w1, [x0, #1]
    252c:	cmp	w1, #0x64
    2530:	b.ne	24c8 <write_entry+0x748>  // b.any
    2534:	mov	w2, #0x0                   	// #0
    2538:	add	x1, sp, #0x70
    253c:	add	x0, x0, #0x2
    2540:	bl	0 <grub_strtoul>
    2544:	str	w0, [sp, #108]
    2548:	mov	w26, w21
    254c:	b	2700 <write_entry+0x980>
    2550:	adrp	x1, 0 <grub_strcasecmp>
    2554:	ldr	x6, [x1]
    2558:	b	2520 <write_entry+0x7a0>
    255c:	mov	w3, w2
    2560:	sub	w2, w2, #0x41
    2564:	cmp	w2, #0x19
    2568:	b.hi	2570 <write_entry+0x7f0>  // b.pmore
    256c:	add	w3, w3, #0x20
    2570:	ldrb	w1, [x6]
    2574:	sub	w4, w1, #0x41
    2578:	add	w2, w1, #0x20
    257c:	cmp	w4, #0x1a
    2580:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    2584:	cmp	w1, w3
    2588:	b.eq	2660 <write_entry+0x8e0>  // b.none
    258c:	cbz	w5, 2658 <write_entry+0x8d8>
    2590:	mov	x7, x0
    2594:	mov	w2, w5
    2598:	ldr	x4, [x24]
    259c:	mov	w3, #0x73                  	// #115
    25a0:	sub	w6, w2, #0x41
    25a4:	add	w1, w2, #0x20
    25a8:	cmp	w6, #0x1a
    25ac:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    25b0:	sub	w8, w3, #0x41
    25b4:	add	w6, w3, #0x20
    25b8:	cmp	w8, #0x1a
    25bc:	csel	w3, w6, w3, cc  // cc = lo, ul, last
    25c0:	cmp	w3, w1
    25c4:	b.ne	26e0 <write_entry+0x960>  // b.any
    25c8:	add	x4, x4, #0x1
    25cc:	ldrb	w2, [x7, #1]!
    25d0:	cbz	w2, 2600 <write_entry+0x880>
    25d4:	ldrb	w3, [x4]
    25d8:	cbz	w3, 3544 <write_entry+0x17c4>
    25dc:	ldr	x1, [x22]
    25e0:	cmp	x4, x1
    25e4:	b.ne	25a0 <write_entry+0x820>  // b.any
    25e8:	mov	w21, w2
    25ec:	sub	w2, w2, #0x41
    25f0:	mov	w1, #0x70                  	// #112
    25f4:	cmp	w2, #0x19
    25f8:	b.hi	2614 <write_entry+0x894>  // b.pmore
    25fc:	add	w21, w21, #0x20
    2600:	ldrb	w1, [x4]
    2604:	sub	w3, w1, #0x41
    2608:	add	w2, w1, #0x20
    260c:	cmp	w3, #0x1a
    2610:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    2614:	cmp	w1, w21
    2618:	b.eq	26f4 <write_entry+0x974>  // b.none
    261c:	cmp	w5, #0x66
    2620:	b.eq	2710 <write_entry+0x990>  // b.none
    2624:	sub	w5, w5, #0x30
    2628:	cmp	w5, #0x9
    262c:	b.ls	2738 <write_entry+0x9b8>  // b.plast
    2630:	mov	x2, #0x17                  	// #23
    2634:	adrp	x0, 0 <grub_strcasecmp>
    2638:	ldr	x1, [x0]
    263c:	mov	x0, x19
    2640:	bl	db0 <print>
    2644:	mov	w21, w0
    2648:	cbz	w0, 274c <write_entry+0x9cc>
    264c:	ldp	x25, x26, [sp, #64]
    2650:	ldp	x27, x28, [sp, #80]
    2654:	b	3728 <write_entry+0x19a8>
    2658:	ldr	x4, [x24]
    265c:	b	2600 <write_entry+0x880>
    2660:	add	x27, x0, #0x5
    2664:	str	x27, [sp, #112]
    2668:	ldrb	w0, [x0, #5]
    266c:	cbz	w0, 268c <write_entry+0x90c>
    2670:	bl	0 <grub_isspace>
    2674:	cbnz	w0, 26c0 <write_entry+0x940>
    2678:	ldr	x0, [sp, #112]
    267c:	add	x1, x0, #0x1
    2680:	str	x1, [sp, #112]
    2684:	ldrb	w0, [x0, #1]
    2688:	cbnz	w0, 2670 <write_entry+0x8f0>
    268c:	cmn	w26, #0x1
    2690:	b.eq	3538 <write_entry+0x17b8>  // b.none
    2694:	cbnz	w26, 27ec <write_entry+0xa6c>
    2698:	adrp	x0, 0 <grub_strcasecmp>
    269c:	ldr	x1, [x0]
    26a0:	mov	x2, #0x7                   	// #7
    26a4:	mov	x0, x19
    26a8:	bl	db0 <print>
    26ac:	mov	w21, w0
    26b0:	cbz	w0, 27f8 <write_entry+0xa78>
    26b4:	ldp	x25, x26, [sp, #64]
    26b8:	ldp	x27, x28, [sp, #80]
    26bc:	b	3728 <write_entry+0x19a8>
    26c0:	ldr	x0, [sp, #112]
    26c4:	ldrb	w1, [x0]
    26c8:	cbz	w1, 268c <write_entry+0x90c>
    26cc:	strb	wzr, [x0]
    26d0:	ldr	x0, [sp, #112]
    26d4:	add	x0, x0, #0x1
    26d8:	str	x0, [sp, #112]
    26dc:	b	2700 <write_entry+0x980>
    26e0:	mov	w21, w2
    26e4:	sub	w2, w2, #0x41
    26e8:	cmp	w2, #0x19
    26ec:	b.hi	2600 <write_entry+0x880>  // b.pmore
    26f0:	b	25fc <write_entry+0x87c>
    26f4:	add	x0, x0, #0x4
    26f8:	str	x0, [sp, #112]
    26fc:	mov	w25, w28
    2700:	ldr	x0, [sp, #112]
    2704:	ldrb	w0, [x0]
    2708:	cbnz	w0, 24a0 <write_entry+0x720>
    270c:	b	268c <write_entry+0x90c>
    2710:	ldrb	w1, [x0, #1]
    2714:	cmp	w1, #0x64
    2718:	b.ne	2630 <write_entry+0x8b0>  // b.any
    271c:	mov	w2, #0x0                   	// #0
    2720:	add	x1, sp, #0x70
    2724:	add	x0, x0, #0x2
    2728:	bl	0 <grub_strtoul>
    272c:	str	w0, [sp, #108]
    2730:	mov	w26, w28
    2734:	b	2700 <write_entry+0x980>
    2738:	mov	w2, #0x0                   	// #0
    273c:	add	x1, sp, #0x70
    2740:	bl	0 <grub_strtoul>
    2744:	mov	w23, w0
    2748:	b	2700 <write_entry+0x980>
    274c:	ldr	x22, [sp, #112]
    2750:	mov	x0, x22
    2754:	bl	0 <grub_strlen>
    2758:	mov	x2, x0
    275c:	mov	x1, x22
    2760:	mov	x0, x19
    2764:	bl	db0 <print>
    2768:	cbz	w0, 2778 <write_entry+0x9f8>
    276c:	ldp	x25, x26, [sp, #64]
    2770:	ldp	x27, x28, [sp, #80]
    2774:	b	3728 <write_entry+0x19a8>
    2778:	mov	x2, #0x1                   	// #1
    277c:	adrp	x0, 0 <grub_strcasecmp>
    2780:	ldr	x1, [x0]
    2784:	mov	x0, x19
    2788:	bl	db0 <print>
    278c:	mov	w21, w0
    2790:	cbnz	w0, 27b8 <write_entry+0xa38>
    2794:	cmn	w26, #0x1
    2798:	b.eq	27c4 <write_entry+0xa44>  // b.none
    279c:	ldr	x0, [sp, #112]
    27a0:	ldrb	w0, [x0]
    27a4:	cbz	w0, 2694 <write_entry+0x914>
    27a8:	ldp	x25, x26, [sp, #64]
    27ac:	ldp	x27, x28, [sp, #80]
    27b0:	mov	w21, #0x0                   	// #0
    27b4:	b	3728 <write_entry+0x19a8>
    27b8:	ldp	x25, x26, [sp, #64]
    27bc:	ldp	x27, x28, [sp, #80]
    27c0:	b	3728 <write_entry+0x19a8>
    27c4:	ldp	x25, x26, [sp, #64]
    27c8:	ldp	x27, x28, [sp, #80]
    27cc:	mov	x2, #0x17                  	// #23
    27d0:	adrp	x0, 0 <grub_strcasecmp>
    27d4:	ldr	x1, [x0]
    27d8:	mov	x0, x19
    27dc:	bl	db0 <print>
    27e0:	mov	w21, w0
    27e4:	cbz	w0, 27b0 <write_entry+0xa30>
    27e8:	b	3728 <write_entry+0x19a8>
    27ec:	adrp	x0, 0 <grub_strcasecmp>
    27f0:	ldr	x1, [x0]
    27f4:	b	26a0 <write_entry+0x920>
    27f8:	ldr	w1, [sp, #108]
    27fc:	mov	x0, x19
    2800:	bl	eb8 <print_num>
    2804:	cbnz	w0, 2838 <write_entry+0xab8>
    2808:	cmn	w23, #0x1
    280c:	b.eq	2860 <write_entry+0xae0>  // b.none
    2810:	mov	x2, #0x1                   	// #1
    2814:	adrp	x0, 0 <grub_strcasecmp>
    2818:	ldr	x1, [x0]
    281c:	mov	x0, x19
    2820:	bl	db0 <print>
    2824:	mov	w21, w0
    2828:	cbz	w0, 2850 <write_entry+0xad0>
    282c:	ldp	x25, x26, [sp, #64]
    2830:	ldp	x27, x28, [sp, #80]
    2834:	b	3728 <write_entry+0x19a8>
    2838:	adrp	x0, 0 <grub_strcasecmp>
    283c:	ldr	x0, [x0]
    2840:	ldr	w21, [x0]
    2844:	ldp	x25, x26, [sp, #64]
    2848:	ldp	x27, x28, [sp, #80]
    284c:	b	3728 <write_entry+0x19a8>
    2850:	add	w1, w23, #0x1
    2854:	mov	x0, x19
    2858:	bl	eb8 <print_num>
    285c:	cbnz	w0, 28a8 <write_entry+0xb28>
    2860:	mov	x2, #0x2                   	// #2
    2864:	adrp	x0, 0 <grub_strcasecmp>
    2868:	ldr	x1, [x0]
    286c:	mov	x0, x19
    2870:	bl	db0 <print>
    2874:	mov	w21, w0
    2878:	cbnz	w0, 374c <write_entry+0x19cc>
    287c:	cbz	x27, 290c <write_entry+0xb8c>
    2880:	mov	x2, #0xe                   	// #14
    2884:	adrp	x0, 0 <grub_strcasecmp>
    2888:	ldr	x1, [x0]
    288c:	mov	x0, x19
    2890:	bl	db0 <print>
    2894:	mov	w21, w0
    2898:	cbz	w0, 28c0 <write_entry+0xb40>
    289c:	ldp	x25, x26, [sp, #64]
    28a0:	ldp	x27, x28, [sp, #80]
    28a4:	b	3728 <write_entry+0x19a8>
    28a8:	adrp	x0, 0 <grub_strcasecmp>
    28ac:	ldr	x0, [x0]
    28b0:	ldr	w21, [x0]
    28b4:	ldp	x25, x26, [sp, #64]
    28b8:	ldp	x27, x28, [sp, #80]
    28bc:	b	3728 <write_entry+0x19a8>
    28c0:	mov	x3, #0x0                   	// #0
    28c4:	mov	x2, x27
    28c8:	mov	x1, x20
    28cc:	mov	x0, x19
    28d0:	bl	e18 <print_file>
    28d4:	mov	x2, #0x2                   	// #2
    28d8:	adrp	x0, 0 <grub_strcasecmp>
    28dc:	ldr	x1, [x0]
    28e0:	mov	x0, x19
    28e4:	bl	db0 <print>
    28e8:	mov	w21, w0
    28ec:	cbnz	w0, 2900 <write_entry+0xb80>
    28f0:	cbnz	w25, 2934 <write_entry+0xbb4>
    28f4:	ldp	x25, x26, [sp, #64]
    28f8:	ldp	x27, x28, [sp, #80]
    28fc:	b	27b0 <write_entry+0xa30>
    2900:	ldp	x25, x26, [sp, #64]
    2904:	ldp	x27, x28, [sp, #80]
    2908:	b	3728 <write_entry+0x19a8>
    290c:	mov	x2, #0x11                  	// #17
    2910:	adrp	x0, 0 <grub_strcasecmp>
    2914:	ldr	x1, [x0]
    2918:	mov	x0, x19
    291c:	bl	db0 <print>
    2920:	mov	w21, w0
    2924:	cbz	w0, 28f0 <write_entry+0xb70>
    2928:	ldp	x25, x26, [sp, #64]
    292c:	ldp	x27, x28, [sp, #80]
    2930:	b	3728 <write_entry+0x19a8>
    2934:	mov	x2, #0x19                  	// #25
    2938:	adrp	x0, 0 <grub_strcasecmp>
    293c:	ldr	x1, [x0]
    2940:	mov	x0, x19
    2944:	bl	db0 <print>
    2948:	mov	w21, w0
    294c:	cbnz	w0, 3758 <write_entry+0x19d8>
    2950:	ldp	x25, x26, [sp, #64]
    2954:	ldp	x27, x28, [sp, #80]
    2958:	b	27b0 <write_entry+0xa30>
    295c:	cmp	w4, #0x19
    2960:	b.ls	248c <write_entry+0x70c>  // b.plast
    2964:	b	3690 <write_entry+0x1910>
    2968:	adrp	x0, 0 <grub_strcasecmp>
    296c:	ldr	x3, [x0]
    2970:	cbz	w8, 3658 <write_entry+0x18d8>
    2974:	mov	x5, x22
    2978:	mov	w0, w8
    297c:	adrp	x1, 0 <grub_strcasecmp>
    2980:	ldr	x3, [x1]
    2984:	mov	w1, #0x69                  	// #105
    2988:	mov	w6, w0
    298c:	sub	w4, w0, #0x41
    2990:	add	w2, w0, #0x20
    2994:	cmp	w4, #0x1a
    2998:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    299c:	sub	w7, w1, #0x41
    29a0:	add	w2, w1, #0x20
    29a4:	cmp	w7, #0x1a
    29a8:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    29ac:	cmp	w1, w0
    29b0:	b.ne	2b14 <write_entry+0xd94>  // b.any
    29b4:	add	x3, x3, #0x1
    29b8:	ldrb	w0, [x5, #1]!
    29bc:	cbz	w0, 3658 <write_entry+0x18d8>
    29c0:	ldrb	w1, [x3]
    29c4:	cbnz	w1, 2988 <write_entry+0xc08>
    29c8:	mov	w6, w0
    29cc:	sub	w0, w0, #0x41
    29d0:	cmp	w0, #0x19
    29d4:	b.hi	3684 <write_entry+0x1904>  // b.pmore
    29d8:	add	w6, w6, #0x20
    29dc:	b	365c <write_entry+0x18dc>
    29e0:	ldrb	w0, [x23]
    29e4:	cmp	w0, #0x2d
    29e8:	b.ne	2a9c <write_entry+0xd1c>  // b.any
    29ec:	ldrb	w0, [x23, #1]
    29f0:	cmp	w0, #0x2d
    29f4:	b.ne	2a9c <write_entry+0xd1c>  // b.any
    29f8:	mov	x2, x28
    29fc:	ldr	x1, [x27]
    2a00:	mov	x0, x19
    2a04:	bl	db0 <print>
    2a08:	mov	w21, w0
    2a0c:	cbz	w0, 2a1c <write_entry+0xc9c>
    2a10:	ldp	x25, x26, [sp, #64]
    2a14:	ldp	x27, x28, [sp, #80]
    2a18:	b	3728 <write_entry+0x19a8>
    2a1c:	mov	w21, w26
    2a20:	b	2a68 <write_entry+0xce8>
    2a24:	ldp	x25, x26, [sp, #64]
    2a28:	ldp	x27, x28, [sp, #80]
    2a2c:	b	3728 <write_entry+0x19a8>
    2a30:	mov	x2, #0x9                   	// #9
    2a34:	ldr	x1, [x25]
    2a38:	mov	x0, x19
    2a3c:	bl	db0 <print>
    2a40:	mov	w21, w0
    2a44:	cbz	w0, 2ac0 <write_entry+0xd40>
    2a48:	ldp	x25, x26, [sp, #64]
    2a4c:	ldp	x27, x28, [sp, #80]
    2a50:	b	3728 <write_entry+0x19a8>
    2a54:	mov	x2, x22
    2a58:	mov	x1, x23
    2a5c:	mov	x0, x19
    2a60:	bl	c88 <print_escaped>
    2a64:	cbnz	w0, 2af0 <write_entry+0xd70>
    2a68:	ldrb	w0, [x22]
    2a6c:	cbz	w0, 33f4 <write_entry+0x1674>
    2a70:	mov	x23, x22
    2a74:	ldrb	w0, [x23]
    2a78:	mov	x22, x23
    2a7c:	cbz	w0, 2a9c <write_entry+0xd1c>
    2a80:	bl	0 <grub_isspace>
    2a84:	cbnz	w0, 2a90 <write_entry+0xd10>
    2a88:	ldrb	w0, [x22, #1]!
    2a8c:	cbnz	w0, 2a80 <write_entry+0xd00>
    2a90:	add	x0, x23, #0x2
    2a94:	cmp	x22, x0
    2a98:	b.eq	29e0 <write_entry+0xc60>  // b.none
    2a9c:	cbz	w21, 2a54 <write_entry+0xcd4>
    2aa0:	cbz	w24, 2a30 <write_entry+0xcb0>
    2aa4:	mov	x2, #0xc                   	// #12
    2aa8:	adrp	x0, 0 <grub_strcasecmp>
    2aac:	ldr	x1, [x0]
    2ab0:	mov	x0, x19
    2ab4:	bl	db0 <print>
    2ab8:	mov	w21, w0
    2abc:	cbnz	w0, 2a24 <write_entry+0xca4>
    2ac0:	mov	x3, x22
    2ac4:	mov	x2, x23
    2ac8:	mov	x1, x20
    2acc:	mov	x0, x19
    2ad0:	bl	e18 <print_file>
    2ad4:	cbz	w0, 2b08 <write_entry+0xd88>
    2ad8:	adrp	x0, 0 <grub_strcasecmp>
    2adc:	ldr	x0, [x0]
    2ae0:	ldr	w21, [x0]
    2ae4:	ldp	x25, x26, [sp, #64]
    2ae8:	ldp	x27, x28, [sp, #80]
    2aec:	b	3728 <write_entry+0x19a8>
    2af0:	adrp	x0, 0 <grub_strcasecmp>
    2af4:	ldr	x0, [x0]
    2af8:	ldr	w21, [x0]
    2afc:	ldp	x25, x26, [sp, #64]
    2b00:	ldp	x27, x28, [sp, #80]
    2b04:	b	3728 <write_entry+0x19a8>
    2b08:	mov	w24, #0x0                   	// #0
    2b0c:	mov	w21, #0x0                   	// #0
    2b10:	b	2a68 <write_entry+0xce8>
    2b14:	cmp	w4, #0x19
    2b18:	b.ls	29d8 <write_entry+0xc58>  // b.plast
    2b1c:	b	365c <write_entry+0x18dc>
    2b20:	adrp	x0, 0 <grub_strcasecmp>
    2b24:	ldr	x0, [x0]
    2b28:	cbz	w8, 3614 <write_entry+0x1894>
    2b2c:	mov	x5, x22
    2b30:	adrp	x0, 0 <grub_strcasecmp>
    2b34:	ldr	x0, [x0]
    2b38:	mov	w2, #0x72                  	// #114
    2b3c:	mov	w1, w8
    2b40:	sub	w4, w8, #0x41
    2b44:	add	w3, w8, #0x20
    2b48:	cmp	w4, #0x1a
    2b4c:	csel	w8, w3, w8, cc  // cc = lo, ul, last
    2b50:	sub	w6, w2, #0x41
    2b54:	add	w3, w2, #0x20
    2b58:	cmp	w6, #0x1a
    2b5c:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    2b60:	cmp	w2, w8
    2b64:	b.ne	2df0 <write_entry+0x1070>  // b.any
    2b68:	add	x0, x0, #0x1
    2b6c:	ldrb	w8, [x5, #1]!
    2b70:	cbz	w8, 3614 <write_entry+0x1894>
    2b74:	ldrb	w2, [x0]
    2b78:	cbnz	w2, 2b3c <write_entry+0xdbc>
    2b7c:	mov	w1, w8
    2b80:	sub	w8, w8, #0x41
    2b84:	cmp	w8, #0x19
    2b88:	b.hi	3650 <write_entry+0x18d0>  // b.pmore
    2b8c:	add	w1, w1, #0x20
    2b90:	b	3618 <write_entry+0x1898>
    2b94:	add	x24, x24, #0x1
    2b98:	ldrb	w0, [x24]
    2b9c:	bl	0 <grub_isspace>
    2ba0:	cbnz	w0, 2b94 <write_entry+0xe14>
    2ba4:	ldrb	w0, [x24]
    2ba8:	mov	x26, x24
    2bac:	cbz	w0, 2bc0 <write_entry+0xe40>
    2bb0:	bl	0 <grub_isspace>
    2bb4:	cbnz	w0, 2bc0 <write_entry+0xe40>
    2bb8:	ldrb	w0, [x26, #1]!
    2bbc:	cbnz	w0, 2bb0 <write_entry+0xe30>
    2bc0:	mov	x22, x26
    2bc4:	b	2bcc <write_entry+0xe4c>
    2bc8:	add	x22, x22, #0x1
    2bcc:	ldrb	w0, [x22]
    2bd0:	bl	0 <grub_isspace>
    2bd4:	cbnz	w0, 2bc8 <write_entry+0xe48>
    2bd8:	ldrb	w0, [x22]
    2bdc:	mov	x25, #0x0                   	// #0
    2be0:	mov	x23, #0x0                   	// #0
    2be4:	cmp	w0, #0x2d
    2be8:	b.ne	2c44 <write_entry+0xec4>  // b.any
    2bec:	ldrb	w0, [x22, #1]
    2bf0:	cmp	w0, #0x2d
    2bf4:	b.ne	2c44 <write_entry+0xec4>  // b.any
    2bf8:	add	x23, x22, #0x2
    2bfc:	b	2c04 <write_entry+0xe84>
    2c00:	add	x23, x23, #0x1
    2c04:	ldrb	w0, [x23]
    2c08:	bl	0 <grub_isspace>
    2c0c:	cbnz	w0, 2c00 <write_entry+0xe80>
    2c10:	ldrb	w0, [x23]
    2c14:	mov	x25, x23
    2c18:	mov	x22, x23
    2c1c:	cbz	w0, 2c44 <write_entry+0xec4>
    2c20:	bl	0 <grub_isspace>
    2c24:	cbnz	w0, 2c38 <write_entry+0xeb8>
    2c28:	ldrb	w0, [x25, #1]!
    2c2c:	cbnz	w0, 2c20 <write_entry+0xea0>
    2c30:	mov	x22, x25
    2c34:	b	2c44 <write_entry+0xec4>
    2c38:	mov	x22, x25
    2c3c:	b	2c44 <write_entry+0xec4>
    2c40:	add	x22, x22, #0x1
    2c44:	ldrb	w0, [x22]
    2c48:	bl	0 <grub_isspace>
    2c4c:	cbnz	w0, 2c40 <write_entry+0xec0>
    2c50:	ldrb	w0, [x22]
    2c54:	cmp	w0, #0x2d
    2c58:	b.eq	2cb0 <write_entry+0xf30>  // b.none
    2c5c:	strb	wzr, [x26]
    2c60:	mov	x21, #0x0                   	// #0
    2c64:	mov	x22, #0x0                   	// #0
    2c68:	cbz	x25, 3574 <write_entry+0x17f4>
    2c6c:	strb	wzr, [x25]
    2c70:	cbz	x21, 2c78 <write_entry+0xef8>
    2c74:	strb	wzr, [x21]
    2c78:	cmp	x22, #0x0
    2c7c:	csel	x0, x23, x22, ne  // ne = any
    2c80:	csel	x21, x22, x23, ne  // ne = any
    2c84:	mov	x23, x0
    2c88:	mov	x22, x21
    2c8c:	mov	x2, #0x21                  	// #33
    2c90:	adrp	x0, 0 <grub_strcasecmp>
    2c94:	ldr	x1, [x0]
    2c98:	mov	x0, x19
    2c9c:	bl	db0 <print>
    2ca0:	mov	w21, w0
    2ca4:	cbz	w0, 2d0c <write_entry+0xf8c>
    2ca8:	ldp	x25, x26, [sp, #64]
    2cac:	b	3728 <write_entry+0x19a8>
    2cb0:	ldrb	w0, [x22, #1]
    2cb4:	add	x22, x22, #0x2
    2cb8:	cmp	w0, #0x2d
    2cbc:	b.ne	2c5c <write_entry+0xedc>  // b.any
    2cc0:	b	2cc8 <write_entry+0xf48>
    2cc4:	add	x22, x22, #0x1
    2cc8:	ldrb	w0, [x22]
    2ccc:	bl	0 <grub_isspace>
    2cd0:	cbnz	w0, 2cc4 <write_entry+0xf44>
    2cd4:	ldrb	w0, [x22]
    2cd8:	mov	x21, x22
    2cdc:	cbz	w0, 2cf0 <write_entry+0xf70>
    2ce0:	bl	0 <grub_isspace>
    2ce4:	cbnz	w0, 2cfc <write_entry+0xf7c>
    2ce8:	ldrb	w0, [x21, #1]!
    2cec:	cbnz	w0, 2ce0 <write_entry+0xf60>
    2cf0:	strb	wzr, [x26]
    2cf4:	cbnz	x25, 2c6c <write_entry+0xeec>
    2cf8:	b	2c74 <write_entry+0xef4>
    2cfc:	strb	wzr, [x26]
    2d00:	cbnz	x25, 2c6c <write_entry+0xeec>
    2d04:	cbnz	x21, 2c74 <write_entry+0xef4>
    2d08:	b	2c8c <write_entry+0xf0c>
    2d0c:	mov	x2, x24
    2d10:	mov	x1, x20
    2d14:	mov	x0, x19
    2d18:	bl	3970 <print_entry>
    2d1c:	cbnz	w0, 2d48 <write_entry+0xfc8>
    2d20:	cbz	x23, 2d70 <write_entry+0xff0>
    2d24:	mov	x2, #0x1d                  	// #29
    2d28:	adrp	x0, 0 <grub_strcasecmp>
    2d2c:	ldr	x1, [x0]
    2d30:	mov	x0, x19
    2d34:	bl	db0 <print>
    2d38:	mov	w21, w0
    2d3c:	cbz	w0, 2d5c <write_entry+0xfdc>
    2d40:	ldp	x25, x26, [sp, #64]
    2d44:	b	3728 <write_entry+0x19a8>
    2d48:	adrp	x0, 0 <grub_strcasecmp>
    2d4c:	ldr	x0, [x0]
    2d50:	ldr	w21, [x0]
    2d54:	ldp	x25, x26, [sp, #64]
    2d58:	b	3728 <write_entry+0x19a8>
    2d5c:	mov	x2, x23
    2d60:	mov	x1, x20
    2d64:	mov	x0, x19
    2d68:	bl	3970 <print_entry>
    2d6c:	cbnz	w0, 2d94 <write_entry+0x1014>
    2d70:	mov	x2, #0x5                   	// #5
    2d74:	adrp	x0, 0 <grub_strcasecmp>
    2d78:	ldr	x1, [x0]
    2d7c:	mov	x0, x19
    2d80:	bl	db0 <print>
    2d84:	mov	w21, w0
    2d88:	cbz	w0, 2da8 <write_entry+0x1028>
    2d8c:	ldp	x25, x26, [sp, #64]
    2d90:	b	3728 <write_entry+0x19a8>
    2d94:	adrp	x0, 0 <grub_strcasecmp>
    2d98:	ldr	x0, [x0]
    2d9c:	ldr	w21, [x0]
    2da0:	ldp	x25, x26, [sp, #64]
    2da4:	b	3728 <write_entry+0x19a8>
    2da8:	mov	x2, x22
    2dac:	mov	x1, x20
    2db0:	mov	x0, x19
    2db4:	bl	3970 <print_entry>
    2db8:	cbz	w0, 2dd0 <write_entry+0x1050>
    2dbc:	adrp	x0, 0 <grub_strcasecmp>
    2dc0:	ldr	x0, [x0]
    2dc4:	ldr	w21, [x0]
    2dc8:	ldp	x25, x26, [sp, #64]
    2dcc:	b	3728 <write_entry+0x19a8>
    2dd0:	mov	x2, #0x3                   	// #3
    2dd4:	adrp	x0, 0 <grub_strcasecmp>
    2dd8:	ldr	x1, [x0]
    2ddc:	mov	x0, x19
    2de0:	bl	db0 <print>
    2de4:	mov	w21, w0
    2de8:	ldp	x25, x26, [sp, #64]
    2dec:	b	3728 <write_entry+0x19a8>
    2df0:	cmp	w4, #0x19
    2df4:	b.ls	2b8c <write_entry+0xe0c>  // b.plast
    2df8:	b	3618 <write_entry+0x1898>
    2dfc:	adrp	x0, 0 <grub_strcasecmp>
    2e00:	ldr	x1, [x0]
    2e04:	mov	x0, x22
    2e08:	bl	0 <grub_strcasecmp>
    2e0c:	cbnz	w0, 2e2c <write_entry+0x10ac>
    2e10:	mov	x2, #0x7                   	// #7
    2e14:	adrp	x0, 0 <grub_strcasecmp>
    2e18:	ldr	x1, [x0]
    2e1c:	mov	x0, x19
    2e20:	bl	db0 <print>
    2e24:	mov	w21, w0
    2e28:	b	3728 <write_entry+0x19a8>
    2e2c:	adrp	x0, 0 <grub_strcasecmp>
    2e30:	ldr	x1, [x0]
    2e34:	mov	x0, x22
    2e38:	bl	0 <grub_strcasecmp>
    2e3c:	cbnz	w0, 3268 <write_entry+0x14e8>
    2e40:	str	xzr, [sp, #112]
    2e44:	adrp	x0, 0 <grub_strcasecmp>
    2e48:	ldr	x0, [x0]
    2e4c:	str	x0, [sp, #120]
    2e50:	adrp	x0, 0 <grub_strcasecmp>
    2e54:	ldr	x0, [x0]
    2e58:	str	x0, [sp, #128]
    2e5c:	adrp	x0, 0 <grub_strcasecmp>
    2e60:	ldr	x0, [x0]
    2e64:	str	x0, [sp, #136]
    2e68:	ldr	x22, [x23, #56]
    2e6c:	ldrb	w0, [x22]
    2e70:	mov	w23, #0x1                   	// #1
    2e74:	cbz	w0, 3260 <write_entry+0x14e0>
    2e78:	stp	x25, x26, [sp, #64]
    2e7c:	stp	x27, x28, [sp, #80]
    2e80:	add	x26, sp, #0x70
    2e84:	adrp	x25, 0 <grub_strcasecmp>
    2e88:	adrp	x24, 0 <grub_strcasecmp>
    2e8c:	b	30a8 <write_entry+0x1328>
    2e90:	ldrb	w6, [x22]
    2e94:	cbz	w6, 308c <write_entry+0x130c>
    2e98:	mov	x8, x22
    2e9c:	mov	w2, w6
    2ea0:	adrp	x1, 0 <grub_strcasecmp>
    2ea4:	ldr	x5, [x1]
    2ea8:	mov	w3, #0x2d                  	// #45
    2eac:	adrp	x9, 0 <grub_strcasecmp>
    2eb0:	sub	w4, w2, #0x41
    2eb4:	add	w1, w2, #0x20
    2eb8:	cmp	w4, #0x1a
    2ebc:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    2ec0:	sub	w7, w3, #0x41
    2ec4:	add	w4, w3, #0x20
    2ec8:	cmp	w7, #0x1a
    2ecc:	csel	w3, w4, w3, cc  // cc = lo, ul, last
    2ed0:	cmp	w3, w1
    2ed4:	b.ne	3070 <write_entry+0x12f0>  // b.any
    2ed8:	add	x5, x5, #0x1
    2edc:	ldrb	w2, [x8, #1]!
    2ee0:	cbz	w2, 3084 <write_entry+0x1304>
    2ee4:	ldrb	w3, [x5]
    2ee8:	cbz	w3, 35e0 <write_entry+0x1860>
    2eec:	ldr	x1, [x9]
    2ef0:	cmp	x5, x1
    2ef4:	b.ne	2eb0 <write_entry+0x1130>  // b.any
    2ef8:	mov	w1, w2
    2efc:	sub	w2, w2, #0x41
    2f00:	mov	w3, #0x2d                  	// #45
    2f04:	cmp	w2, #0x19
    2f08:	b.hi	2f24 <write_entry+0x11a4>  // b.pmore
    2f0c:	add	w1, w1, #0x20
    2f10:	ldrb	w3, [x5]
    2f14:	sub	w4, w3, #0x41
    2f18:	add	w2, w3, #0x20
    2f1c:	cmp	w4, #0x1a
    2f20:	csel	w3, w2, w3, cc  // cc = lo, ul, last
    2f24:	cmp	w3, w1
    2f28:	b.eq	3098 <write_entry+0x1318>  // b.none
    2f2c:	adrp	x1, 0 <grub_strcasecmp>
    2f30:	ldr	x4, [x1]
    2f34:	cbz	w6, 35a4 <write_entry+0x1824>
    2f38:	mov	x7, x22
    2f3c:	mov	w1, w6
    2f40:	adrp	x2, 0 <grub_strcasecmp>
    2f44:	ldr	x4, [x2]
    2f48:	mov	w3, #0x2d                  	// #45
    2f4c:	sub	w5, w1, #0x41
    2f50:	add	w2, w1, #0x20
    2f54:	cmp	w5, #0x1a
    2f58:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    2f5c:	sub	w8, w3, #0x41
    2f60:	add	w5, w3, #0x20
    2f64:	cmp	w8, #0x1a
    2f68:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    2f6c:	cmp	w3, w2
    2f70:	b.ne	30bc <write_entry+0x133c>  // b.any
    2f74:	add	x4, x4, #0x1
    2f78:	ldrb	w1, [x7, #1]!
    2f7c:	cbz	w1, 35a4 <write_entry+0x1824>
    2f80:	ldrb	w3, [x4]
    2f84:	cbz	w3, 35ac <write_entry+0x182c>
    2f88:	ldr	x2, [x24]
    2f8c:	cmp	x4, x2
    2f90:	b.ne	2f4c <write_entry+0x11cc>  // b.any
    2f94:	mov	w2, w1
    2f98:	sub	w1, w1, #0x41
    2f9c:	mov	w3, #0x2d                  	// #45
    2fa0:	cmp	w1, #0x19
    2fa4:	b.hi	2fc0 <write_entry+0x1240>  // b.pmore
    2fa8:	add	w2, w2, #0x20
    2fac:	ldrb	w3, [x4]
    2fb0:	sub	w4, w3, #0x41
    2fb4:	add	w1, w3, #0x20
    2fb8:	cmp	w4, #0x1a
    2fbc:	csel	w3, w1, w3, cc  // cc = lo, ul, last
    2fc0:	cmp	w3, w2
    2fc4:	b.eq	30d0 <write_entry+0x1350>  // b.none
    2fc8:	adrp	x1, 0 <grub_strcasecmp>
    2fcc:	ldr	x4, [x1]
    2fd0:	cbz	w6, 3048 <write_entry+0x12c8>
    2fd4:	mov	x7, x22
    2fd8:	mov	w1, w6
    2fdc:	adrp	x2, 0 <grub_strcasecmp>
    2fe0:	ldr	x4, [x2]
    2fe4:	mov	w3, #0x2d                  	// #45
    2fe8:	sub	w5, w1, #0x41
    2fec:	add	w2, w1, #0x20
    2ff0:	cmp	w5, #0x1a
    2ff4:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    2ff8:	sub	w8, w3, #0x41
    2ffc:	add	w5, w3, #0x20
    3000:	cmp	w8, #0x1a
    3004:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    3008:	cmp	w3, w2
    300c:	b.ne	30dc <write_entry+0x135c>  // b.any
    3010:	add	x4, x4, #0x1
    3014:	ldrb	w1, [x7, #1]!
    3018:	cbz	w1, 3048 <write_entry+0x12c8>
    301c:	ldrb	w3, [x4]
    3020:	cbz	w3, 3580 <write_entry+0x1800>
    3024:	ldr	x2, [x25]
    3028:	cmp	x4, x2
    302c:	b.ne	2fe8 <write_entry+0x1268>  // b.any
    3030:	mov	w0, w1
    3034:	sub	w1, w1, #0x41
    3038:	mov	w2, #0x2d                  	// #45
    303c:	cmp	w1, #0x19
    3040:	b.hi	305c <write_entry+0x12dc>  // b.pmore
    3044:	add	w0, w0, #0x20
    3048:	ldrb	w2, [x4]
    304c:	sub	w3, w2, #0x41
    3050:	add	w1, w2, #0x20
    3054:	cmp	w3, #0x1a
    3058:	csel	w2, w1, w2, cc  // cc = lo, ul, last
    305c:	cmp	w2, w0
    3060:	b.ne	30f0 <write_entry+0x1370>  // b.any
    3064:	add	x22, x22, #0x5
    3068:	mov	w23, #0x3                   	// #3
    306c:	b	30a0 <write_entry+0x1320>
    3070:	mov	w1, w2
    3074:	sub	w2, w2, #0x41
    3078:	cmp	w2, #0x19
    307c:	b.hi	2f10 <write_entry+0x1190>  // b.pmore
    3080:	b	2f0c <write_entry+0x118c>
    3084:	mov	w1, w0
    3088:	b	2f10 <write_entry+0x1190>
    308c:	mov	w1, w0
    3090:	mov	w3, #0x2d                  	// #45
    3094:	b	2f24 <write_entry+0x11a4>
    3098:	add	x22, x22, #0x5
    309c:	mov	w23, #0x1                   	// #1
    30a0:	ldrb	w0, [x22]
    30a4:	cbz	w0, 3258 <write_entry+0x14d8>
    30a8:	ldrb	w0, [x22]
    30ac:	bl	0 <grub_isspace>
    30b0:	cbz	w0, 2e90 <write_entry+0x1110>
    30b4:	add	x22, x22, #0x1
    30b8:	b	30a8 <write_entry+0x1328>
    30bc:	mov	w2, w1
    30c0:	sub	w1, w1, #0x41
    30c4:	cmp	w1, #0x19
    30c8:	b.hi	2fac <write_entry+0x122c>  // b.pmore
    30cc:	b	2fa8 <write_entry+0x1228>
    30d0:	add	x22, x22, #0x5
    30d4:	mov	w23, #0x2                   	// #2
    30d8:	b	30a0 <write_entry+0x1320>
    30dc:	mov	w0, w1
    30e0:	sub	w1, w1, #0x41
    30e4:	cmp	w1, #0x19
    30e8:	b.hi	3048 <write_entry+0x12c8>  // b.pmore
    30ec:	b	3044 <write_entry+0x12c4>
    30f0:	mov	x27, x22
    30f4:	cbz	w6, 310c <write_entry+0x138c>
    30f8:	mov	w0, w6
    30fc:	bl	0 <grub_isspace>
    3100:	cbnz	w0, 310c <write_entry+0x138c>
    3104:	ldrb	w6, [x27, #1]!
    3108:	cbnz	w6, 30f8 <write_entry+0x1378>
    310c:	ldrb	w28, [x27]
    3110:	strb	wzr, [x27]
    3114:	ldr	w0, [x20, #104]
    3118:	cmp	w0, #0x0
    311c:	ccmp	w23, #0x1, #0x0, eq  // eq = none
    3120:	b.eq	3144 <write_entry+0x13c4>  // b.none
    3124:	cbz	w0, 31a4 <write_entry+0x1424>
    3128:	ldr	w0, [x20, #104]
    312c:	cmp	w0, #0x0
    3130:	ccmp	w0, w23, #0x0, ne  // ne = any
    3134:	b.eq	3244 <write_entry+0x14c4>  // b.none
    3138:	strb	w28, [x27]
    313c:	mov	x22, x27
    3140:	b	30a0 <write_entry+0x1320>
    3144:	mov	x2, #0x47                  	// #71
    3148:	adrp	x0, 0 <grub_strcasecmp>
    314c:	ldr	x1, [x0]
    3150:	mov	x0, x19
    3154:	bl	db0 <print>
    3158:	mov	w21, w0
    315c:	cbnz	w0, 3764 <write_entry+0x19e4>
    3160:	mov	w0, #0x1                   	// #1
    3164:	str	w0, [x20, #104]
    3168:	mov	x2, x22
    316c:	mov	x1, x20
    3170:	mov	x0, x19
    3174:	bl	3970 <print_entry>
    3178:	str	wzr, [x20, #104]
    317c:	mov	x2, #0x3                   	// #3
    3180:	adrp	x0, 0 <grub_strcasecmp>
    3184:	ldr	x1, [x0]
    3188:	mov	x0, x19
    318c:	bl	db0 <print>
    3190:	mov	w21, w0
    3194:	cbz	w0, 3128 <write_entry+0x13a8>
    3198:	ldp	x25, x26, [sp, #64]
    319c:	ldp	x27, x28, [sp, #80]
    31a0:	b	3728 <write_entry+0x19a8>
    31a4:	mov	x2, #0x1b                  	// #27
    31a8:	adrp	x0, 0 <grub_strcasecmp>
    31ac:	ldr	x1, [x0]
    31b0:	mov	x0, x19
    31b4:	bl	db0 <print>
    31b8:	mov	w21, w0
    31bc:	cbnz	w0, 3770 <write_entry+0x19f0>
    31c0:	ubfiz	x0, x23, #3, #2
    31c4:	ldr	x21, [x26, x0]
    31c8:	mov	x0, x21
    31cc:	bl	0 <grub_strlen>
    31d0:	mov	x2, x0
    31d4:	mov	x1, x21
    31d8:	mov	x0, x19
    31dc:	bl	db0 <print>
    31e0:	mov	w21, w0
    31e4:	cbnz	w0, 377c <write_entry+0x19fc>
    31e8:	mov	x2, #0xf                   	// #15
    31ec:	adrp	x0, 0 <grub_strcasecmp>
    31f0:	ldr	x1, [x0]
    31f4:	mov	x0, x19
    31f8:	bl	db0 <print>
    31fc:	mov	w21, w0
    3200:	cbnz	w0, 3788 <write_entry+0x1a08>
    3204:	str	w23, [x20, #104]
    3208:	mov	x2, x22
    320c:	mov	x1, x20
    3210:	mov	x0, x19
    3214:	bl	3970 <print_entry>
    3218:	str	wzr, [x20, #104]
    321c:	mov	x2, #0x3                   	// #3
    3220:	adrp	x0, 0 <grub_strcasecmp>
    3224:	ldr	x1, [x0]
    3228:	mov	x0, x19
    322c:	bl	db0 <print>
    3230:	mov	w21, w0
    3234:	cbz	w0, 3128 <write_entry+0x13a8>
    3238:	ldp	x25, x26, [sp, #64]
    323c:	ldp	x27, x28, [sp, #80]
    3240:	b	3728 <write_entry+0x19a8>
    3244:	mov	x2, x22
    3248:	mov	x1, x20
    324c:	mov	x0, x19
    3250:	bl	3970 <print_entry>
    3254:	b	3138 <write_entry+0x13b8>
    3258:	ldp	x25, x26, [sp, #64]
    325c:	ldp	x27, x28, [sp, #80]
    3260:	mov	w21, #0x0                   	// #0
    3264:	b	3728 <write_entry+0x19a8>
    3268:	adrp	x0, 0 <grub_strcasecmp>
    326c:	ldr	x1, [x0]
    3270:	mov	x0, x22
    3274:	bl	0 <grub_strcasecmp>
    3278:	cbnz	w0, 3298 <write_entry+0x1518>
    327c:	ldr	x22, [x23, #56]
    3280:	cbz	x22, 330c <write_entry+0x158c>
    3284:	ldrb	w0, [x22]
    3288:	cbz	w0, 3304 <write_entry+0x1584>
    328c:	adrp	x24, 0 <grub_strcasecmp>
    3290:	adrp	x23, 0 <grub_strcasecmp>
    3294:	b	3384 <write_entry+0x1604>
    3298:	adrp	x0, 0 <grub_strcasecmp>
    329c:	ldr	x1, [x0]
    32a0:	mov	x0, x22
    32a4:	bl	0 <grub_strcasecmp>
    32a8:	cbz	w0, 327c <write_entry+0x14fc>
    32ac:	mov	x2, #0x18                  	// #24
    32b0:	adrp	x0, 0 <grub_strcasecmp>
    32b4:	ldr	x1, [x0]
    32b8:	mov	x0, x19
    32bc:	bl	db0 <print>
    32c0:	mov	w21, w0
    32c4:	cbnz	w0, 3728 <write_entry+0x19a8>
    32c8:	mov	x0, x22
    32cc:	bl	0 <grub_strlen>
    32d0:	mov	x2, x0
    32d4:	mov	x1, x22
    32d8:	mov	x0, x19
    32dc:	bl	db0 <print>
    32e0:	mov	w21, w0
    32e4:	cbnz	w0, 3728 <write_entry+0x19a8>
    32e8:	mov	x2, #0x7                   	// #7
    32ec:	adrp	x0, 0 <grub_strcasecmp>
    32f0:	ldr	x1, [x0]
    32f4:	mov	x0, x19
    32f8:	bl	db0 <print>
    32fc:	mov	w21, w0
    3300:	b	3728 <write_entry+0x19a8>
    3304:	mov	w21, #0x0                   	// #0
    3308:	b	3728 <write_entry+0x19a8>
    330c:	adrp	x0, 0 <grub_strcasecmp>
    3310:	ldr	x0, [x0]
    3314:	ldr	w21, [x0]
    3318:	b	3728 <write_entry+0x19a8>
    331c:	ldrb	w0, [x21]
    3320:	cbz	w0, 3328 <write_entry+0x15a8>
    3324:	strb	wzr, [x21], #1
    3328:	ldr	x1, [x24]
    332c:	mov	x0, x22
    3330:	bl	0 <grub_strcmp>
    3334:	cbnz	w0, 3358 <write_entry+0x15d8>
    3338:	ldrb	w0, [x21]
    333c:	cbz	w0, 3350 <write_entry+0x15d0>
    3340:	bl	0 <grub_isspace>
    3344:	cbz	w0, 3378 <write_entry+0x15f8>
    3348:	ldrb	w0, [x21, #1]!
    334c:	cbnz	w0, 3340 <write_entry+0x15c0>
    3350:	mov	w21, #0x0                   	// #0
    3354:	b	3728 <write_entry+0x19a8>
    3358:	ldr	x3, [x23]
    335c:	mov	x2, x22
    3360:	mov	x1, x20
    3364:	mov	x0, x19
    3368:	bl	3f78 <print_config>
    336c:	cbz	w0, 3338 <write_entry+0x15b8>
    3370:	mov	w21, #0x0                   	// #0
    3374:	b	3728 <write_entry+0x19a8>
    3378:	ldrb	w0, [x21]
    337c:	cbz	w0, 3404 <write_entry+0x1684>
    3380:	mov	x22, x21
    3384:	ldrb	w0, [x22]
    3388:	mov	x21, x22
    338c:	cbz	w0, 3328 <write_entry+0x15a8>
    3390:	bl	0 <grub_isspace>
    3394:	cbnz	w0, 331c <write_entry+0x159c>
    3398:	ldrb	w0, [x21, #1]!
    339c:	cbnz	w0, 3390 <write_entry+0x1610>
    33a0:	b	3328 <write_entry+0x15a8>
    33a4:	ldr	x3, [x23, #56]
    33a8:	cbz	x3, 33c4 <write_entry+0x1644>
    33ac:	ldr	x2, [x23, #32]
    33b0:	mov	x1, x20
    33b4:	mov	x0, x19
    33b8:	bl	3f78 <print_config>
    33bc:	mov	w21, #0x0                   	// #0
    33c0:	b	3728 <write_entry+0x19a8>
    33c4:	ldr	x3, [x23, #64]
    33c8:	cbnz	x3, 33ac <write_entry+0x162c>
    33cc:	adrp	x0, 0 <grub_strcasecmp>
    33d0:	ldr	x3, [x0]
    33d4:	b	33ac <write_entry+0x162c>
    33d8:	mov	x2, #0x7                   	// #7
    33dc:	adrp	x0, 0 <grub_strcasecmp>
    33e0:	ldr	x1, [x0]
    33e4:	mov	x0, x19
    33e8:	bl	db0 <print>
    33ec:	mov	w21, w0
    33f0:	b	3728 <write_entry+0x19a8>
    33f4:	mov	w21, #0x0                   	// #0
    33f8:	ldp	x25, x26, [sp, #64]
    33fc:	ldp	x27, x28, [sp, #80]
    3400:	b	3728 <write_entry+0x19a8>
    3404:	mov	w21, #0x0                   	// #0
    3408:	b	3728 <write_entry+0x19a8>
    340c:	ldrb	w0, [x22]
    3410:	cbnz	w0, 2188 <write_entry+0x408>
    3414:	mov	x22, #0x0                   	// #0
    3418:	mov	x24, #0x0                   	// #0
    341c:	ldp	x25, x26, [sp, #64]
    3420:	mov	x2, #0x4e                  	// #78
    3424:	adrp	x0, 0 <grub_strcasecmp>
    3428:	ldr	x1, [x0]
    342c:	mov	x0, x19
    3430:	bl	db0 <print>
    3434:	mov	w21, w0
    3438:	cbnz	w0, 3728 <write_entry+0x19a8>
    343c:	mov	x2, #0x15                  	// #21
    3440:	adrp	x0, 0 <grub_strcasecmp>
    3444:	ldr	x1, [x0]
    3448:	mov	x0, x19
    344c:	bl	db0 <print>
    3450:	mov	w21, w0
    3454:	cbnz	w0, 3728 <write_entry+0x19a8>
    3458:	mov	x3, #0x0                   	// #0
    345c:	ldr	x2, [x23, #32]
    3460:	mov	x1, x20
    3464:	mov	x0, x19
    3468:	bl	e18 <print_file>
    346c:	mov	x2, #0x1                   	// #1
    3470:	adrp	x0, 0 <grub_strcasecmp>
    3474:	ldr	x1, [x0]
    3478:	mov	x0, x19
    347c:	bl	db0 <print>
    3480:	mov	w21, w0
    3484:	cbnz	w0, 3728 <write_entry+0x19a8>
    3488:	ldr	x21, [x23, #56]
    348c:	cbz	x21, 34b0 <write_entry+0x1730>
    3490:	mov	x0, x21
    3494:	bl	0 <grub_strlen>
    3498:	mov	x2, x0
    349c:	mov	x1, x21
    34a0:	mov	x0, x19
    34a4:	bl	db0 <print>
    34a8:	mov	w21, w0
    34ac:	cbnz	w0, 3728 <write_entry+0x19a8>
    34b0:	mov	x2, #0x1                   	// #1
    34b4:	adrp	x0, 0 <grub_strcasecmp>
    34b8:	ldr	x1, [x0]
    34bc:	mov	x0, x19
    34c0:	bl	db0 <print>
    34c4:	mov	w21, w0
    34c8:	cbnz	w0, 3728 <write_entry+0x19a8>
    34cc:	cbz	x24, 21c8 <write_entry+0x448>
    34d0:	mov	x2, #0x16                  	// #22
    34d4:	adrp	x0, 0 <grub_strcasecmp>
    34d8:	ldr	x1, [x0]
    34dc:	mov	x0, x19
    34e0:	bl	db0 <print>
    34e4:	mov	w21, w0
    34e8:	cbnz	w0, 3728 <write_entry+0x19a8>
    34ec:	mov	x3, x22
    34f0:	mov	x2, x24
    34f4:	mov	x1, x20
    34f8:	mov	x0, x19
    34fc:	bl	e18 <print_file>
    3500:	mov	x2, #0x1                   	// #1
    3504:	adrp	x0, 0 <grub_strcasecmp>
    3508:	ldr	x1, [x0]
    350c:	mov	x0, x19
    3510:	bl	db0 <print>
    3514:	mov	w21, w0
    3518:	cbz	w0, 21ec <write_entry+0x46c>
    351c:	b	3728 <write_entry+0x19a8>
    3520:	mov	w2, w1
    3524:	sub	w1, w1, #0x41
    3528:	cmp	w1, #0x19
    352c:	b.ls	20dc <write_entry+0x35c>  // b.plast
    3530:	ldrb	w0, [x4]
    3534:	b	20f4 <write_entry+0x374>
    3538:	ldp	x25, x26, [sp, #64]
    353c:	ldp	x27, x28, [sp, #80]
    3540:	b	27cc <write_entry+0xa4c>
    3544:	mov	w21, w2
    3548:	sub	w2, w2, #0x41
    354c:	cmp	w2, #0x19
    3550:	b.ls	25fc <write_entry+0x87c>  // b.plast
    3554:	ldrb	w1, [x4]
    3558:	b	2614 <write_entry+0x894>
    355c:	mov	w3, w2
    3560:	sub	w2, w2, #0x41
    3564:	cmp	w2, #0x19
    3568:	b.ls	256c <write_entry+0x7ec>  // b.plast
    356c:	ldrb	w1, [x6]
    3570:	b	2584 <write_entry+0x804>
    3574:	mov	x22, x23
    3578:	mov	x23, x25
    357c:	b	2c8c <write_entry+0xf0c>
    3580:	mov	w0, w1
    3584:	sub	w2, w1, #0x41
    3588:	cmp	w2, #0x19
    358c:	b.ls	3044 <write_entry+0x12c4>  // b.plast
    3590:	ldrb	w0, [x4]
    3594:	cmp	w1, w0
    3598:	b.eq	3064 <write_entry+0x12e4>  // b.none
    359c:	mov	x27, x22
    35a0:	b	30f8 <write_entry+0x1378>
    35a4:	mov	w2, w0
    35a8:	b	2fac <write_entry+0x122c>
    35ac:	mov	w2, w1
    35b0:	sub	w3, w1, #0x41
    35b4:	cmp	w3, #0x19
    35b8:	b.ls	2fa8 <write_entry+0x1228>  // b.plast
    35bc:	ldrb	w2, [x4]
    35c0:	cmp	w2, w1
    35c4:	b.eq	30d0 <write_entry+0x1350>  // b.none
    35c8:	mov	x7, x22
    35cc:	mov	w1, w6
    35d0:	adrp	x2, 0 <grub_strcasecmp>
    35d4:	ldr	x4, [x2]
    35d8:	mov	w3, #0x2d                  	// #45
    35dc:	b	2fe8 <write_entry+0x1268>
    35e0:	mov	w1, w2
    35e4:	sub	w3, w2, #0x41
    35e8:	cmp	w3, #0x19
    35ec:	b.ls	2f0c <write_entry+0x118c>  // b.plast
    35f0:	ldrb	w1, [x5]
    35f4:	cmp	w1, w2
    35f8:	b.eq	3098 <write_entry+0x1318>  // b.none
    35fc:	mov	x7, x22
    3600:	mov	w1, w6
    3604:	adrp	x2, 0 <grub_strcasecmp>
    3608:	ldr	x4, [x2]
    360c:	mov	w3, #0x2d                  	// #45
    3610:	b	2f4c <write_entry+0x11cc>
    3614:	mov	w1, #0x0                   	// #0
    3618:	ldrb	w0, [x0]
    361c:	sub	w3, w0, #0x41
    3620:	add	w2, w0, #0x20
    3624:	cmp	w3, #0x1a
    3628:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    362c:	cmp	w0, w1
    3630:	b.ne	2dfc <write_entry+0x107c>  // b.any
    3634:	mov	x2, #0x9                   	// #9
    3638:	adrp	x0, 0 <grub_strcasecmp>
    363c:	ldr	x1, [x0]
    3640:	mov	x0, x19
    3644:	bl	db0 <print>
    3648:	mov	w21, w0
    364c:	b	3728 <write_entry+0x19a8>
    3650:	ldrb	w0, [x0]
    3654:	b	362c <write_entry+0x18ac>
    3658:	mov	w6, #0x0                   	// #0
    365c:	ldrb	w0, [x3]
    3660:	sub	w2, w0, #0x41
    3664:	add	w1, w0, #0x20
    3668:	cmp	w2, #0x1a
    366c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    3670:	cmp	w0, w6
    3674:	b.ne	2b20 <write_entry+0xda0>  // b.any
    3678:	stp	x25, x26, [sp, #64]
    367c:	ldr	x24, [x23, #56]
    3680:	b	2b98 <write_entry+0xe18>
    3684:	ldrb	w0, [x3]
    3688:	b	3670 <write_entry+0x18f0>
    368c:	mov	w7, #0x0                   	// #0
    3690:	ldrb	w0, [x3]
    3694:	sub	w2, w0, #0x41
    3698:	add	w1, w0, #0x20
    369c:	cmp	w2, #0x1a
    36a0:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    36a4:	cmp	w0, w7
    36a8:	b.ne	2968 <write_entry+0xbe8>  // b.any
    36ac:	ldr	x23, [x23, #56]
    36b0:	ldrb	w0, [x23]
    36b4:	mov	w21, #0x0                   	// #0
    36b8:	cbz	w0, 3728 <write_entry+0x19a8>
    36bc:	stp	x25, x26, [sp, #64]
    36c0:	stp	x27, x28, [sp, #80]
    36c4:	mov	w24, #0x1                   	// #1
    36c8:	mov	w21, w24
    36cc:	mov	x28, #0x1                   	// #1
    36d0:	adrp	x27, 0 <grub_strcasecmp>
    36d4:	mov	w26, w24
    36d8:	adrp	x25, 0 <grub_strcasecmp>
    36dc:	b	2a74 <write_entry+0xcf4>
    36e0:	ldrb	w0, [x3]
    36e4:	b	36a4 <write_entry+0x1924>
    36e8:	ldrb	w0, [x3]
    36ec:	b	2078 <write_entry+0x2f8>
    36f0:	mov	w8, w0
    36f4:	mov	x22, x4
    36f8:	b	3714 <write_entry+0x1994>
    36fc:	ldrb	w0, [x4]
    3700:	mov	w8, w0
    3704:	mov	x22, x4
    3708:	b	2004 <write_entry+0x284>
    370c:	ldrb	w8, [x4]
    3710:	mov	x22, x4
    3714:	mov	w7, #0x0                   	// #0
    3718:	mov	w0, #0x63                  	// #99
    371c:	b	2078 <write_entry+0x2f8>
    3720:	ldp	x25, x26, [sp, #64]
    3724:	ldp	x27, x28, [sp, #80]
    3728:	mov	w0, w21
    372c:	ldp	x19, x20, [sp, #16]
    3730:	ldp	x21, x22, [sp, #32]
    3734:	ldp	x23, x24, [sp, #48]
    3738:	ldp	x29, x30, [sp], #144
    373c:	ret
    3740:	ldp	x25, x26, [sp, #64]
    3744:	ldp	x27, x28, [sp, #80]
    3748:	b	3728 <write_entry+0x19a8>
    374c:	ldp	x25, x26, [sp, #64]
    3750:	ldp	x27, x28, [sp, #80]
    3754:	b	3728 <write_entry+0x19a8>
    3758:	ldp	x25, x26, [sp, #64]
    375c:	ldp	x27, x28, [sp, #80]
    3760:	b	3728 <write_entry+0x19a8>
    3764:	ldp	x25, x26, [sp, #64]
    3768:	ldp	x27, x28, [sp, #80]
    376c:	b	3728 <write_entry+0x19a8>
    3770:	ldp	x25, x26, [sp, #64]
    3774:	ldp	x27, x28, [sp, #80]
    3778:	b	3728 <write_entry+0x19a8>
    377c:	ldp	x25, x26, [sp, #64]
    3780:	ldp	x27, x28, [sp, #80]
    3784:	b	3728 <write_entry+0x19a8>
    3788:	ldp	x25, x26, [sp, #64]
    378c:	ldp	x27, x28, [sp, #80]
    3790:	b	3728 <write_entry+0x19a8>
    3794:	nop
	...

0000000000003970 <print_entry>:
    3970:	stp	x29, x30, [sp, #-48]!
    3974:	mov	x29, sp
    3978:	stp	x19, x20, [sp, #16]
    397c:	stp	x21, x22, [sp, #32]
    3980:	mov	x22, x0
    3984:	mov	x21, x1
    3988:	mov	x20, x2
    398c:	ldr	x19, [x1, #8]
    3990:	cbnz	x19, 39fc <print_entry+0x8c>
    3994:	mov	w0, #0x0                   	// #0
    3998:	b	39c4 <print_entry+0x54>
    399c:	cmp	w6, #0x19
    39a0:	b.ls	3a68 <print_entry+0xf8>  // b.plast
    39a4:	b	39d8 <print_entry+0x68>
    39a8:	mov	x2, x19
    39ac:	mov	x1, x21
    39b0:	mov	x0, x22
    39b4:	bl	1d80 <write_entry>
    39b8:	cbz	w0, 39f4 <print_entry+0x84>
    39bc:	b	39c4 <print_entry+0x54>
    39c0:	mov	w0, #0x0                   	// #0
    39c4:	ldp	x19, x20, [sp, #16]
    39c8:	ldp	x21, x22, [sp, #32]
    39cc:	ldp	x29, x30, [sp], #48
    39d0:	ret
    39d4:	mov	w2, #0x0                   	// #0
    39d8:	ldrb	w3, [x5]
    39dc:	sub	w1, w3, #0x41
    39e0:	add	w0, w3, #0x20
    39e4:	cmp	w1, #0x1a
    39e8:	csel	w3, w0, w3, cc  // cc = lo, ul, last
    39ec:	cmp	w3, w2
    39f0:	b.eq	39a8 <print_entry+0x38>  // b.none
    39f4:	ldr	x19, [x19]
    39f8:	cbz	x19, 39c0 <print_entry+0x50>
    39fc:	ldr	x1, [x19, #16]
    3a00:	ldrb	w3, [x1]
    3a04:	mov	x5, x20
    3a08:	cbz	w3, 39d4 <print_entry+0x64>
    3a0c:	ldrb	w4, [x5]
    3a10:	cbz	w4, 3a58 <print_entry+0xe8>
    3a14:	mov	w2, w3
    3a18:	sub	w6, w3, #0x41
    3a1c:	add	w0, w3, #0x20
    3a20:	cmp	w6, #0x1a
    3a24:	csel	w3, w0, w3, cc  // cc = lo, ul, last
    3a28:	sub	w7, w4, #0x41
    3a2c:	add	w0, w4, #0x20
    3a30:	cmp	w7, #0x1a
    3a34:	csel	w4, w0, w4, cc  // cc = lo, ul, last
    3a38:	cmp	w4, w3
    3a3c:	b.ne	399c <print_entry+0x2c>  // b.any
    3a40:	add	x5, x5, #0x1
    3a44:	ldrb	w3, [x1, #1]!
    3a48:	cbnz	w3, 3a0c <print_entry+0x9c>
    3a4c:	b	39d4 <print_entry+0x64>
    3a50:	ldrb	w3, [x5]
    3a54:	b	39ec <print_entry+0x7c>
    3a58:	mov	w2, w3
    3a5c:	sub	w3, w3, #0x41
    3a60:	cmp	w3, #0x19
    3a64:	b.hi	3a50 <print_entry+0xe0>  // b.pmore
    3a68:	add	w2, w2, #0x20
    3a6c:	b	39d8 <print_entry+0x68>

0000000000003a70 <config_file>:
    3a70:	stp	x29, x30, [sp, #-208]!
    3a74:	mov	x29, sp
    3a78:	stp	x19, x20, [sp, #16]
    3a7c:	stp	x21, x22, [sp, #32]
    3a80:	stp	x23, x24, [sp, #48]
    3a84:	stp	x25, x26, [sp, #64]
    3a88:	mov	x20, x0
    3a8c:	mov	x25, x1
    3a90:	mov	x24, x2
    3a94:	mov	x23, x3
    3a98:	mov	x22, x4
    3a9c:	mov	x21, x5
    3aa0:	mov	x19, x6
    3aa4:	mov	w26, w7
    3aa8:	mov	x2, #0x70                  	// #112
    3aac:	mov	w1, #0x0                   	// #0
    3ab0:	add	x0, sp, #0x60
    3ab4:	bl	0 <grub_memset>
    3ab8:	str	w26, [sp, #200]
    3abc:	str	x25, [sp, #136]
    3ac0:	str	x24, [sp, #144]
    3ac4:	str	x23, [sp, #152]
    3ac8:	str	x22, [sp, #160]
    3acc:	str	x21, [sp, #168]
    3ad0:	str	x19, [sp, #96]
    3ad4:	add	x0, sp, #0x60
    3ad8:	bl	14d8 <syslinux_parse_real>
    3adc:	mov	w25, w0
    3ae0:	cbnz	w0, 3e94 <config_file+0x424>
    3ae4:	ldr	x19, [sp, #192]
    3ae8:	b	3af0 <config_file+0x80>
    3aec:	mov	x19, x0
    3af0:	cbz	x19, 3b58 <config_file+0xe8>
    3af4:	ldr	x0, [x19]
    3af8:	cbnz	x0, 3aec <config_file+0x7c>
    3afc:	adrp	x22, 0 <grub_strcasecmp>
    3b00:	mov	x21, #0x5                   	// #5
    3b04:	adrp	x24, 0 <grub_strcasecmp>
    3b08:	mov	x23, #0x1                   	// #1
    3b0c:	ldr	x0, [x19, #8]
    3b10:	cbz	x0, 3b58 <config_file+0xe8>
    3b14:	mov	x2, x21
    3b18:	ldr	x1, [x22]
    3b1c:	mov	x0, x20
    3b20:	bl	db0 <print>
    3b24:	cbnz	w0, 3e90 <config_file+0x420>
    3b28:	mov	x2, #0x0                   	// #0
    3b2c:	add	x1, x19, #0x10
    3b30:	mov	x0, x20
    3b34:	bl	c88 <print_escaped>
    3b38:	cbnz	w0, 3eb0 <config_file+0x440>
    3b3c:	mov	x2, x23
    3b40:	ldr	x1, [x24]
    3b44:	mov	x0, x20
    3b48:	bl	db0 <print>
    3b4c:	cbnz	w0, 3eb8 <config_file+0x448>
    3b50:	ldr	x19, [x19, #8]
    3b54:	cbnz	x19, 3b0c <config_file+0x9c>
    3b58:	ldr	x0, [sp, #128]
    3b5c:	cbz	x0, 3bb8 <config_file+0x148>
    3b60:	mov	x2, #0x13                  	// #19
    3b64:	adrp	x0, 0 <grub_strcasecmp>
    3b68:	ldr	x1, [x0]
    3b6c:	mov	x0, x20
    3b70:	bl	db0 <print>
    3b74:	cbz	w0, 3b80 <config_file+0x110>
    3b78:	mov	w25, w0
    3b7c:	b	3e94 <config_file+0x424>
    3b80:	mov	x3, #0x0                   	// #0
    3b84:	ldr	x2, [sp, #128]
    3b88:	add	x1, sp, #0x60
    3b8c:	mov	x0, x20
    3b90:	bl	e18 <print_file>
    3b94:	cbz	w0, 3ba0 <config_file+0x130>
    3b98:	mov	w25, w0
    3b9c:	b	3e94 <config_file+0x424>
    3ba0:	mov	x2, #0x1                   	// #1
    3ba4:	adrp	x0, 0 <grub_strcasecmp>
    3ba8:	ldr	x1, [x0]
    3bac:	mov	x0, x20
    3bb0:	bl	db0 <print>
    3bb4:	cbnz	w0, 3ec0 <config_file+0x450>
    3bb8:	ldr	x19, [sp, #120]
    3bbc:	cbz	x19, 3bdc <config_file+0x16c>
    3bc0:	mov	x0, x19
    3bc4:	bl	0 <grub_strlen>
    3bc8:	mov	x2, x0
    3bcc:	mov	x1, x19
    3bd0:	mov	x0, x20
    3bd4:	bl	db0 <print>
    3bd8:	cbnz	w0, 3ec8 <config_file+0x458>
    3bdc:	ldr	x0, [sp, #184]
    3be0:	cbnz	x0, 3ca8 <config_file+0x238>
    3be4:	ldr	x0, [sp, #104]
    3be8:	cbz	x0, 3c04 <config_file+0x194>
    3bec:	ldr	x2, [sp, #112]
    3bf0:	cbz	x2, 3cb0 <config_file+0x240>
    3bf4:	add	x1, sp, #0x60
    3bf8:	mov	x0, x20
    3bfc:	bl	3970 <print_entry>
    3c00:	cbnz	w0, 3ed0 <config_file+0x460>
    3c04:	ldr	x0, [sp, #112]
    3c08:	bl	0 <grub_free>
    3c0c:	ldr	x0, [sp, #120]
    3c10:	bl	0 <grub_free>
    3c14:	ldr	x0, [sp, #128]
    3c18:	bl	0 <grub_free>
    3c1c:	ldr	x19, [sp, #192]
    3c20:	cbz	x19, 3c34 <config_file+0x1c4>
    3c24:	mov	x0, x19
    3c28:	ldr	x19, [x19]
    3c2c:	bl	0 <grub_free>
    3c30:	cbnz	x19, 3c24 <config_file+0x1b4>
    3c34:	ldr	x22, [sp, #104]
    3c38:	cbz	x22, 3e94 <config_file+0x424>
    3c3c:	mov	x21, x22
    3c40:	ldr	x22, [x22]
    3c44:	ldr	x19, [x21, #40]
    3c48:	cbz	x19, 3c68 <config_file+0x1f8>
    3c4c:	mov	x20, x19
    3c50:	ldr	x19, [x19]
    3c54:	ldr	x0, [x20, #8]
    3c58:	bl	0 <grub_free>
    3c5c:	mov	x0, x20
    3c60:	bl	0 <grub_free>
    3c64:	cbnz	x19, 3c4c <config_file+0x1dc>
    3c68:	ldr	x0, [x21, #80]
    3c6c:	bl	0 <grub_free>
    3c70:	ldr	x0, [x21, #32]
    3c74:	bl	0 <grub_free>
    3c78:	ldr	x0, [x21, #16]
    3c7c:	bl	0 <grub_free>
    3c80:	ldr	x0, [x21, #24]
    3c84:	bl	0 <grub_free>
    3c88:	ldr	x0, [x21, #56]
    3c8c:	bl	0 <grub_free>
    3c90:	ldr	x0, [x21, #72]
    3c94:	bl	0 <grub_free>
    3c98:	mov	x0, x21
    3c9c:	bl	0 <grub_free>
    3ca0:	cbnz	x22, 3c3c <config_file+0x1cc>
    3ca4:	b	3e94 <config_file+0x424>
    3ca8:	ldr	x0, [sp, #104]
    3cac:	cbz	x0, 3c04 <config_file+0x194>
    3cb0:	mov	x19, x0
    3cb4:	ldr	x0, [x0]
    3cb8:	cbnz	x0, 3cb0 <config_file+0x240>
    3cbc:	mov	x2, #0xc                   	// #12
    3cc0:	adrp	x0, 0 <grub_strcasecmp>
    3cc4:	ldr	x1, [x0]
    3cc8:	mov	x0, x20
    3ccc:	bl	db0 <print>
    3cd0:	cbz	w0, 3cdc <config_file+0x26c>
    3cd4:	mov	w25, w0
    3cd8:	b	3e94 <config_file+0x424>
    3cdc:	ldr	x1, [sp, #184]
    3ce0:	add	x1, x1, #0x9
    3ce4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
    3ce8:	movk	x0, #0xcccd
    3cec:	umulh	x1, x1, x0
    3cf0:	ubfx	x1, x1, #3, #32
    3cf4:	mov	x0, x20
    3cf8:	bl	eb8 <print_num>
    3cfc:	cbz	w0, 3d08 <config_file+0x298>
    3d00:	mov	w25, w0
    3d04:	b	3e94 <config_file+0x424>
    3d08:	mov	x2, #0x1                   	// #1
    3d0c:	adrp	x0, 0 <grub_strcasecmp>
    3d10:	ldr	x1, [x0]
    3d14:	mov	x0, x20
    3d18:	bl	db0 <print>
    3d1c:	cbnz	w0, 3ed8 <config_file+0x468>
    3d20:	ldr	x0, [sp, #112]
    3d24:	cbz	x0, 3d7c <config_file+0x30c>
    3d28:	mov	x2, #0x9                   	// #9
    3d2c:	adrp	x0, 0 <grub_strcasecmp>
    3d30:	ldr	x1, [x0]
    3d34:	mov	x0, x20
    3d38:	bl	db0 <print>
    3d3c:	cbz	w0, 3d48 <config_file+0x2d8>
    3d40:	mov	w25, w0
    3d44:	b	3e94 <config_file+0x424>
    3d48:	mov	x2, #0x0                   	// #0
    3d4c:	ldr	x1, [sp, #112]
    3d50:	mov	x0, x20
    3d54:	bl	c88 <print_escaped>
    3d58:	cbz	w0, 3d64 <config_file+0x2f4>
    3d5c:	mov	w25, w0
    3d60:	b	3e94 <config_file+0x424>
    3d64:	mov	x2, #0x1                   	// #1
    3d68:	adrp	x0, 0 <grub_strcasecmp>
    3d6c:	ldr	x1, [x0]
    3d70:	mov	x0, x20
    3d74:	bl	db0 <print>
    3d78:	cbnz	w0, 3ee0 <config_file+0x470>
    3d7c:	adrp	x22, 0 <grub_strcasecmp>
    3d80:	mov	x21, #0xa                   	// #10
    3d84:	adrp	x23, 0 <grub_strcasecmp>
    3d88:	b	3e0c <config_file+0x39c>
    3d8c:	ldr	x1, [x19, #16]
    3d90:	b	3e28 <config_file+0x3b8>
    3d94:	mov	x2, #0x6                   	// #6
    3d98:	adrp	x0, 0 <grub_strcasecmp>
    3d9c:	ldr	x1, [x0]
    3da0:	mov	x0, x20
    3da4:	bl	db0 <print>
    3da8:	cbnz	w0, 3ef8 <config_file+0x488>
    3dac:	mov	x2, #0x0                   	// #0
    3db0:	ldr	x1, [x19, #16]
    3db4:	mov	x0, x20
    3db8:	bl	c88 <print_escaped>
    3dbc:	cbnz	w0, 3f00 <config_file+0x490>
    3dc0:	mov	x2, #0x3                   	// #3
    3dc4:	adrp	x0, 0 <grub_strcasecmp>
    3dc8:	ldr	x1, [x0]
    3dcc:	mov	x0, x20
    3dd0:	bl	db0 <print>
    3dd4:	cbnz	w0, 3f08 <config_file+0x498>
    3dd8:	mov	x2, x19
    3ddc:	add	x1, sp, #0x60
    3de0:	mov	x0, x20
    3de4:	bl	1d80 <write_entry>
    3de8:	cbnz	w0, 3f10 <config_file+0x4a0>
    3dec:	mov	x2, #0x2                   	// #2
    3df0:	adrp	x0, 0 <grub_strcasecmp>
    3df4:	ldr	x1, [x0]
    3df8:	mov	x0, x20
    3dfc:	bl	db0 <print>
    3e00:	cbnz	w0, 3f18 <config_file+0x4a8>
    3e04:	ldr	x19, [x19, #8]
    3e08:	cbz	x19, 3c04 <config_file+0x194>
    3e0c:	mov	x2, x21
    3e10:	ldr	x1, [x22]
    3e14:	mov	x0, x20
    3e18:	bl	db0 <print>
    3e1c:	cbnz	w0, 3ee8 <config_file+0x478>
    3e20:	ldr	x1, [x19, #24]
    3e24:	cbz	x1, 3d8c <config_file+0x31c>
    3e28:	mov	x2, #0x0                   	// #0
    3e2c:	mov	x0, x20
    3e30:	bl	c88 <print_escaped>
    3e34:	cbnz	w0, 3ef0 <config_file+0x480>
    3e38:	ldrb	w0, [x19, #96]
    3e3c:	cbz	w0, 3d94 <config_file+0x324>
    3e40:	strb	w0, [sp, #88]
    3e44:	strb	wzr, [sp, #89]
    3e48:	mov	x2, #0xb                   	// #11
    3e4c:	ldr	x1, [x23]
    3e50:	mov	x0, x20
    3e54:	bl	db0 <print>
    3e58:	cbnz	w0, 3e88 <config_file+0x418>
    3e5c:	mov	x2, #0x1                   	// #1
    3e60:	add	x1, sp, #0x58
    3e64:	mov	x0, x20
    3e68:	bl	db0 <print>
    3e6c:	cbnz	w0, 3e88 <config_file+0x418>
    3e70:	mov	x2, #0x1                   	// #1
    3e74:	adrp	x0, 0 <grub_strcasecmp>
    3e78:	ldr	x1, [x0]
    3e7c:	mov	x0, x20
    3e80:	bl	db0 <print>
    3e84:	cbz	w0, 3d94 <config_file+0x324>
    3e88:	mov	w25, w0
    3e8c:	b	3e94 <config_file+0x424>
    3e90:	mov	w25, w0
    3e94:	mov	w0, w25
    3e98:	ldp	x19, x20, [sp, #16]
    3e9c:	ldp	x21, x22, [sp, #32]
    3ea0:	ldp	x23, x24, [sp, #48]
    3ea4:	ldp	x25, x26, [sp, #64]
    3ea8:	ldp	x29, x30, [sp], #208
    3eac:	ret
    3eb0:	mov	w25, w0
    3eb4:	b	3e94 <config_file+0x424>
    3eb8:	mov	w25, w0
    3ebc:	b	3e94 <config_file+0x424>
    3ec0:	mov	w25, w0
    3ec4:	b	3e94 <config_file+0x424>
    3ec8:	mov	w25, w0
    3ecc:	b	3e94 <config_file+0x424>
    3ed0:	mov	w25, w0
    3ed4:	b	3e94 <config_file+0x424>
    3ed8:	mov	w25, w0
    3edc:	b	3e94 <config_file+0x424>
    3ee0:	mov	w25, w0
    3ee4:	b	3e94 <config_file+0x424>
    3ee8:	mov	w25, w0
    3eec:	b	3e94 <config_file+0x424>
    3ef0:	mov	w25, w0
    3ef4:	b	3e94 <config_file+0x424>
    3ef8:	mov	w25, w0
    3efc:	b	3e94 <config_file+0x424>
    3f00:	mov	w25, w0
    3f04:	b	3e94 <config_file+0x424>
    3f08:	mov	w25, w0
    3f0c:	b	3e94 <config_file+0x424>
    3f10:	mov	w25, w0
    3f14:	b	3e94 <config_file+0x424>
    3f18:	mov	w25, w0
    3f1c:	b	3e94 <config_file+0x424>
	...

0000000000003f78 <print_config>:
    3f78:	stp	x29, x30, [sp, #-96]!
    3f7c:	mov	x29, sp
    3f80:	stp	x19, x20, [sp, #16]
    3f84:	stp	x21, x22, [sp, #32]
    3f88:	stp	x23, x24, [sp, #48]
    3f8c:	stp	x25, x26, [sp, #64]
    3f90:	mov	x24, x0
    3f94:	mov	x20, x1
    3f98:	mov	x25, x2
    3f9c:	mov	x21, x3
    3fa0:	mov	x1, x3
    3fa4:	mov	x0, x20
    3fa8:	bl	a30 <get_read_filename>
    3fac:	mov	x22, x0
    3fb0:	cbz	x0, 4160 <print_config+0x1e8>
    3fb4:	ldrb	w0, [x21]
    3fb8:	cmp	w0, #0x2f
    3fbc:	b.eq	41a8 <print_config+0x230>  // b.none
    3fc0:	ldr	x1, [x20, #64]
    3fc4:	mov	x2, x21
    3fc8:	adrp	x0, 0 <grub_strcasecmp>
    3fcc:	ldr	x0, [x0]
    3fd0:	bl	0 <grub_xasprintf>
    3fd4:	mov	x23, x0
    3fd8:	cbz	x0, 41b0 <print_config+0x238>
    3fdc:	mov	x1, x25
    3fe0:	mov	x0, x20
    3fe4:	bl	a30 <get_read_filename>
    3fe8:	mov	x19, x0
    3fec:	cbz	x0, 41c4 <print_config+0x24c>
    3ff0:	ldrb	w5, [x0]
    3ff4:	mov	x4, x0
    3ff8:	mov	w2, #0x2f                  	// #47
    3ffc:	cbnz	w5, 4200 <print_config+0x288>
    4000:	strb	wzr, [x4]
    4004:	mov	x2, #0x1                   	// #1
    4008:	adrp	x0, 0 <grub_strcasecmp>
    400c:	ldr	x1, [x0]
    4010:	mov	x0, x24
    4014:	bl	db0 <print>
    4018:	mov	w26, w0
    401c:	cbnz	w0, 418c <print_config+0x214>
    4020:	mov	x3, #0x0                   	// #0
    4024:	mov	x2, x25
    4028:	mov	x1, x20
    402c:	mov	x0, x24
    4030:	bl	e18 <print_file>
    4034:	mov	x2, #0x1                   	// #1
    4038:	adrp	x0, 0 <grub_strcasecmp>
    403c:	ldr	x1, [x0]
    4040:	mov	x0, x24
    4044:	bl	db0 <print>
    4048:	mov	w26, w0
    404c:	cbnz	w0, 418c <print_config+0x214>
    4050:	mov	x0, x19
    4054:	bl	0 <grub_strlen>
    4058:	mov	x2, x0
    405c:	mov	x1, x19
    4060:	mov	x0, x24
    4064:	bl	db0 <print>
    4068:	mov	w26, w0
    406c:	cbnz	w0, 418c <print_config+0x214>
    4070:	mov	x2, #0x2                   	// #2
    4074:	adrp	x0, 0 <grub_strcasecmp>
    4078:	ldr	x1, [x0]
    407c:	mov	x0, x24
    4080:	bl	db0 <print>
    4084:	mov	w26, w0
    4088:	cbnz	w0, 418c <print_config+0x214>
    408c:	cbz	x20, 40c4 <print_config+0x14c>
    4090:	str	x27, [sp, #80]
    4094:	mov	x26, x20
    4098:	mov	w27, #0x0                   	// #0
    409c:	mov	x1, x19
    40a0:	ldr	x0, [x26, #72]
    40a4:	bl	0 <grub_strcmp>
    40a8:	cmp	w0, #0x0
    40ac:	ccmp	w27, #0x14, #0x0, ne  // ne = any
    40b0:	b.gt	4340 <print_config+0x3c8>
    40b4:	ldr	x26, [x26]
    40b8:	add	w27, w27, #0x1
    40bc:	cbnz	x26, 409c <print_config+0x124>
    40c0:	ldr	x27, [sp, #80]
    40c4:	ldr	w7, [x20, #104]
    40c8:	mov	x6, x20
    40cc:	mov	x5, x19
    40d0:	mov	x4, x23
    40d4:	mov	x3, x22
    40d8:	ldr	x2, [x20, #48]
    40dc:	ldr	x1, [x20, #40]
    40e0:	mov	x0, x24
    40e4:	bl	3a70 <config_file>
    40e8:	mov	w26, w0
    40ec:	and	w0, w0, #0xfffffffd
    40f0:	cmp	w0, #0x5
    40f4:	b.ne	4174 <print_config+0x1fc>  // b.any
    40f8:	adrp	x0, 0 <grub_strcasecmp>
    40fc:	ldr	x0, [x0]
    4100:	str	wzr, [x0]
    4104:	mov	x2, #0x7                   	// #7
    4108:	adrp	x0, 0 <grub_strcasecmp>
    410c:	ldr	x1, [x0]
    4110:	mov	x0, x24
    4114:	bl	db0 <print>
    4118:	mov	w26, w0
    411c:	cbnz	w0, 418c <print_config+0x214>
    4120:	mov	x0, x19
    4124:	bl	0 <grub_strlen>
    4128:	mov	x2, x0
    412c:	mov	x1, x19
    4130:	mov	x0, x24
    4134:	bl	db0 <print>
    4138:	mov	w26, w0
    413c:	cbnz	w0, 4174 <print_config+0x1fc>
    4140:	mov	x2, #0xb                   	// #11
    4144:	adrp	x0, 0 <grub_strcasecmp>
    4148:	ldr	x1, [x0]
    414c:	mov	x0, x24
    4150:	bl	db0 <print>
    4154:	mov	w26, w0
    4158:	cbz	w0, 4174 <print_config+0x1fc>
    415c:	b	418c <print_config+0x214>
    4160:	adrp	x0, 0 <grub_strcasecmp>
    4164:	ldr	x0, [x0]
    4168:	ldr	w26, [x0]
    416c:	mov	x19, x22
    4170:	mov	x23, x22
    4174:	mov	x0, x19
    4178:	bl	0 <grub_free>
    417c:	mov	x0, x22
    4180:	bl	0 <grub_free>
    4184:	mov	x0, x23
    4188:	bl	0 <grub_free>
    418c:	mov	w0, w26
    4190:	ldp	x19, x20, [sp, #16]
    4194:	ldp	x21, x22, [sp, #32]
    4198:	ldp	x23, x24, [sp, #48]
    419c:	ldp	x25, x26, [sp, #64]
    41a0:	ldp	x29, x30, [sp], #96
    41a4:	ret
    41a8:	ldr	x1, [x20, #48]
    41ac:	b	3fc4 <print_config+0x4c>
    41b0:	adrp	x0, 0 <grub_strcasecmp>
    41b4:	ldr	x0, [x0]
    41b8:	ldr	w26, [x0]
    41bc:	mov	x19, x23
    41c0:	b	4174 <print_config+0x1fc>
    41c4:	adrp	x0, 0 <grub_strcasecmp>
    41c8:	ldr	x0, [x0]
    41cc:	ldr	w26, [x0]
    41d0:	b	4174 <print_config+0x1fc>
    41d4:	ldurb	w1, [x4, #-1]
    41d8:	cmp	w1, #0x2f
    41dc:	b.eq	4284 <print_config+0x30c>  // b.none
    41e0:	ldrb	w1, [x0, #1]
    41e4:	cmp	w1, #0x2e
    41e8:	b.eq	4218 <print_config+0x2a0>  // b.none
    41ec:	strb	w5, [x4], #1
    41f0:	mov	x1, x0
    41f4:	add	x0, x1, #0x1
    41f8:	ldrb	w5, [x1, #1]
    41fc:	cbz	w5, 4000 <print_config+0x88>
    4200:	cmp	w5, #0x2f
    4204:	ccmp	x19, x4, #0x4, eq  // eq = none
    4208:	b.ne	41d4 <print_config+0x25c>  // b.any
    420c:	cmp	w5, #0x2f
    4210:	b.ne	41ec <print_config+0x274>  // b.any
    4214:	b	41e0 <print_config+0x268>
    4218:	ldrb	w1, [x0, #2]
    421c:	cmp	w1, #0x2f
    4220:	b.eq	426c <print_config+0x2f4>  // b.none
    4224:	ldrb	w1, [x0, #2]
    4228:	cmp	w1, #0x2e
    422c:	b.ne	41ec <print_config+0x274>  // b.any
    4230:	ldrb	w1, [x0, #3]
    4234:	cmp	w1, #0x2f
    4238:	b.ne	41ec <print_config+0x274>  // b.any
    423c:	add	x1, x0, #0x3
    4240:	cmp	x19, x4
    4244:	b.hi	4260 <print_config+0x2e8>  // b.pmore
    4248:	ldrb	w0, [x4]
    424c:	cmp	w0, #0x2f
    4250:	b.eq	4274 <print_config+0x2fc>  // b.none
    4254:	sub	x4, x4, #0x1
    4258:	cmp	x19, x4
    425c:	b.ls	4248 <print_config+0x2d0>  // b.plast
    4260:	strb	w2, [x19]
    4264:	mov	x4, x19
    4268:	b	427c <print_config+0x304>
    426c:	add	x1, x0, #0x2
    4270:	b	41f4 <print_config+0x27c>
    4274:	cmp	x19, x4
    4278:	b.hi	4260 <print_config+0x2e8>  // b.pmore
    427c:	add	x4, x4, #0x1
    4280:	b	41f4 <print_config+0x27c>
    4284:	mov	x1, x0
    4288:	b	41f4 <print_config+0x27c>
    428c:	mov	x3, #0x0                   	// #0
    4290:	adrp	x0, 0 <grub_strcasecmp>
    4294:	ldr	x2, [x0]
    4298:	mov	x1, x20
    429c:	mov	x0, x24
    42a0:	bl	e18 <print_file>
    42a4:	mov	x2, #0x4                   	// #4
    42a8:	adrp	x0, 0 <grub_strcasecmp>
    42ac:	ldr	x1, [x0]
    42b0:	mov	x0, x24
    42b4:	bl	db0 <print>
    42b8:	mov	w26, w0
    42bc:	cbz	w0, 42c8 <print_config+0x350>
    42c0:	ldr	x27, [sp, #80]
    42c4:	b	418c <print_config+0x214>
    42c8:	mov	x3, #0x0                   	// #0
    42cc:	mov	x2, x21
    42d0:	mov	x1, x20
    42d4:	mov	x0, x24
    42d8:	bl	e18 <print_file>
    42dc:	mov	x2, #0x1                   	// #1
    42e0:	adrp	x0, 0 <grub_strcasecmp>
    42e4:	ldr	x1, [x0]
    42e8:	mov	x0, x24
    42ec:	bl	db0 <print>
    42f0:	mov	w26, w0
    42f4:	cbz	w0, 4300 <print_config+0x388>
    42f8:	ldr	x27, [sp, #80]
    42fc:	b	418c <print_config+0x214>
    4300:	mov	x3, #0x0                   	// #0
    4304:	mov	x2, x25
    4308:	mov	x1, x20
    430c:	mov	x0, x24
    4310:	bl	e18 <print_file>
    4314:	mov	x2, #0x1                   	// #1
    4318:	adrp	x0, 0 <grub_strcasecmp>
    431c:	ldr	x1, [x0]
    4320:	mov	x0, x24
    4324:	bl	db0 <print>
    4328:	mov	w26, w0
    432c:	cbnz	w0, 4338 <print_config+0x3c0>
    4330:	ldr	x27, [sp, #80]
    4334:	b	4174 <print_config+0x1fc>
    4338:	ldr	x27, [sp, #80]
    433c:	b	418c <print_config+0x214>
    4340:	mov	x2, #0x19                  	// #25
    4344:	adrp	x0, 0 <grub_strcasecmp>
    4348:	ldr	x1, [x0]
    434c:	mov	x0, x24
    4350:	bl	db0 <print>
    4354:	mov	w26, w0
    4358:	cbz	w0, 428c <print_config+0x314>
    435c:	ldr	x27, [sp, #80]
    4360:	b	418c <print_config+0x214>
    4364:	nop
	...

00000000000043c0 <grub_syslinux_config_file>:
    43c0:	stp	x29, x30, [sp, #-48]!
    43c4:	mov	x29, sp
    43c8:	str	xzr, [sp, #24]
    43cc:	str	xzr, [sp, #32]
    43d0:	str	xzr, [sp, #40]
    43d4:	mov	w7, w5
    43d8:	mov	x6, #0x0                   	// #0
    43dc:	mov	x5, x4
    43e0:	mov	x4, x3
    43e4:	mov	x3, x2
    43e8:	mov	x2, x1
    43ec:	mov	x1, x0
    43f0:	add	x0, sp, #0x18
    43f4:	bl	3a70 <config_file>
    43f8:	cbnz	w0, 4424 <grub_syslinux_config_file+0x64>
    43fc:	mov	x2, #0x1                   	// #1
    4400:	adrp	x0, 0 <grub_strcasecmp>
    4404:	ldr	x1, [x0]
    4408:	add	x0, sp, #0x18
    440c:	bl	db0 <print>
    4410:	cmp	w0, #0x0
    4414:	ldr	x0, [sp, #40]
    4418:	csel	x0, x0, xzr, eq  // eq = none
    441c:	ldp	x29, x30, [sp], #48
    4420:	ret
    4424:	mov	x0, #0x0                   	// #0
    4428:	b	441c <grub_syslinux_config_file+0x5c>
    442c:	nop
	...

0000000000004438 <syslinux_file_getline>:
    4438:	str	xzr, [x0]
    443c:	mov	w0, #0x0                   	// #0
    4440:	ret

0000000000004444 <grub_cmd_syslinux_source>:
    4444:	stp	x29, x30, [sp, #-96]!
    4448:	mov	x29, sp
    444c:	stp	x19, x20, [sp, #16]
    4450:	cmp	w1, #0x1
    4454:	b.ne	45c8 <grub_cmd_syslinux_source+0x184>  // b.any
    4458:	stp	x21, x22, [sp, #32]
    445c:	stp	x23, x24, [sp, #48]
    4460:	stp	x25, x26, [sp, #64]
    4464:	str	x27, [sp, #80]
    4468:	mov	x19, x0
    446c:	mov	x20, x2
    4470:	ldr	x0, [x0]
    4474:	ldr	x0, [x0]
    4478:	ldr	x0, [x0, #16]
    447c:	ldrb	w21, [x0]
    4480:	cmp	w21, #0x65
    4484:	b.eq	45e0 <grub_cmd_syslinux_source+0x19c>  // b.none
    4488:	ldrb	w22, [x0, #9]
    448c:	cmp	w22, #0x63
    4490:	cset	w23, eq  // eq = none
    4494:	b.eq	4718 <grub_cmd_syslinux_source+0x2d4>  // b.none
    4498:	mov	w24, #0x0                   	// #0
    449c:	cmp	w21, #0x65
    44a0:	b.eq	460c <grub_cmd_syslinux_source+0x1c8>  // b.none
    44a4:	ldr	x26, [x20]
    44a8:	ldr	x1, [x19, #8]
    44ac:	ldr	w0, [x1]
    44b0:	cbz	w0, 4620 <grub_cmd_syslinux_source+0x1dc>
    44b4:	ldr	x25, [x1, #8]
    44b8:	ldr	w0, [x1, #16]
    44bc:	mov	x19, #0x0                   	// #0
    44c0:	cbz	w0, 44c8 <grub_cmd_syslinux_source+0x84>
    44c4:	ldr	x19, [x1, #24]
    44c8:	ldr	w2, [x1, #32]
    44cc:	ldr	w0, [x1, #48]
    44d0:	mov	w20, #0x2                   	// #2
    44d4:	cbnz	w0, 44e0 <grub_cmd_syslinux_source+0x9c>
    44d8:	cmp	w2, #0x0
    44dc:	cset	w20, ne  // ne = any
    44e0:	ldr	w0, [x1, #64]
    44e4:	cmp	w0, #0x0
    44e8:	mov	w0, #0x3                   	// #3
    44ec:	csel	w20, w20, w0, eq  // eq = none
    44f0:	mov	x27, #0x0                   	// #0
    44f4:	cbz	x19, 462c <grub_cmd_syslinux_source+0x1e8>
    44f8:	mov	x6, x19
    44fc:	mov	x5, x25
    4500:	mov	x4, x26
    4504:	adrp	x0, 0 <grub_strcasecmp>
    4508:	ldr	x3, [x0]
    450c:	adrp	x0, 0 <grub_strcasecmp>
    4510:	ldr	x2, [x0]
    4514:	mov	w1, #0x6b                  	// #107
    4518:	adrp	x0, 0 <grub_strcasecmp>
    451c:	ldr	x0, [x0]
    4520:	bl	0 <grub_real_dprintf>
    4524:	mov	w5, w20
    4528:	mov	x4, x26
    452c:	mov	x3, x19
    4530:	mov	x2, x19
    4534:	mov	x1, x25
    4538:	mov	x0, x25
    453c:	bl	43c0 <grub_syslinux_config_file>
    4540:	mov	x19, x0
    4544:	cbz	x0, 467c <grub_cmd_syslinux_source+0x238>
    4548:	adrp	x0, 0 <grub_strcasecmp>
    454c:	ldr	x3, [x0]
    4550:	adrp	x0, 0 <grub_strcasecmp>
    4554:	ldr	x2, [x0]
    4558:	mov	w1, #0x73                  	// #115
    455c:	adrp	x0, 0 <grub_strcasecmp>
    4560:	ldr	x0, [x0]
    4564:	bl	0 <grub_real_dprintf>
    4568:	bl	0 <grub_env_get_menu>
    456c:	cbz	x0, 468c <grub_cmd_syslinux_source+0x248>
    4570:	mov	x2, #0x0                   	// #0
    4574:	adrp	x0, 0 <grub_strcasecmp>
    4578:	ldr	x1, [x0]
    457c:	mov	x0, x19
    4580:	bl	0 <grub_normal_parse_line>
    4584:	bl	0 <grub_print_error>
    4588:	mov	x0, x19
    458c:	bl	0 <grub_free>
    4590:	mov	x0, x27
    4594:	bl	0 <grub_free>
    4598:	mov	w19, #0x0                   	// #0
    459c:	cbnz	w23, 46b8 <grub_cmd_syslinux_source+0x274>
    45a0:	cmp	w21, #0x65
    45a4:	b.eq	46cc <grub_cmd_syslinux_source+0x288>  // b.none
    45a8:	ldp	x21, x22, [sp, #32]
    45ac:	ldp	x23, x24, [sp, #48]
    45b0:	ldp	x25, x26, [sp, #64]
    45b4:	ldr	x27, [sp, #80]
    45b8:	mov	w0, w19
    45bc:	ldp	x19, x20, [sp, #16]
    45c0:	ldp	x29, x30, [sp], #96
    45c4:	ret
    45c8:	adrp	x0, 0 <grub_strcasecmp>
    45cc:	ldr	x1, [x0]
    45d0:	mov	w0, #0x12                  	// #18
    45d4:	bl	0 <grub_error>
    45d8:	mov	w19, w0
    45dc:	b	45b8 <grub_cmd_syslinux_source+0x174>
    45e0:	ldrb	w22, [x0, #25]
    45e4:	cmp	w22, #0x63
    45e8:	cset	w23, eq  // eq = none
    45ec:	b.ne	4498 <grub_cmd_syslinux_source+0x54>  // b.any
    45f0:	bl	0 <grub_cls>
    45f4:	cmp	w21, #0x65
    45f8:	cset	w24, ne  // ne = any
    45fc:	b.eq	4610 <grub_cmd_syslinux_source+0x1cc>  // b.none
    4600:	bl	0 <grub_env_context_open>
    4604:	mov	w24, #0x1                   	// #1
    4608:	b	44a4 <grub_cmd_syslinux_source+0x60>
    460c:	mov	w24, #0x0                   	// #0
    4610:	cmp	w22, #0x63
    4614:	cset	w0, ne  // ne = any
    4618:	bl	0 <grub_env_extractor_open>
    461c:	b	44a4 <grub_cmd_syslinux_source+0x60>
    4620:	adrp	x0, 0 <grub_strcasecmp>
    4624:	ldr	x25, [x0]
    4628:	b	44b8 <grub_cmd_syslinux_source+0x74>
    462c:	mov	x0, x26
    4630:	bl	0 <grub_strdup>
    4634:	mov	x19, x0
    4638:	cbz	x0, 4658 <grub_cmd_syslinux_source+0x214>
    463c:	mov	w1, #0x2f                  	// #47
    4640:	bl	0 <grub_strrchr>
    4644:	mov	x27, x0
    4648:	cbz	x0, 4668 <grub_cmd_syslinux_source+0x224>
    464c:	strb	wzr, [x0]
    4650:	mov	x27, x19
    4654:	b	44f8 <grub_cmd_syslinux_source+0xb4>
    4658:	adrp	x0, 0 <grub_strcasecmp>
    465c:	ldr	x0, [x0]
    4660:	ldr	w19, [x0]
    4664:	b	459c <grub_cmd_syslinux_source+0x158>
    4668:	mov	x0, x19
    466c:	bl	0 <grub_free>
    4670:	adrp	x0, 0 <grub_strcasecmp>
    4674:	ldr	x19, [x0]
    4678:	b	44f8 <grub_cmd_syslinux_source+0xb4>
    467c:	adrp	x0, 0 <grub_strcasecmp>
    4680:	ldr	x0, [x0]
    4684:	ldr	w19, [x0]
    4688:	b	459c <grub_cmd_syslinux_source+0x158>
    468c:	mov	x0, #0x10                  	// #16
    4690:	bl	0 <grub_zalloc>
    4694:	cbz	x0, 46a0 <grub_cmd_syslinux_source+0x25c>
    4698:	bl	0 <grub_env_set_menu>
    469c:	b	4570 <grub_cmd_syslinux_source+0x12c>
    46a0:	mov	x0, x19
    46a4:	bl	0 <grub_free>
    46a8:	adrp	x0, 0 <grub_strcasecmp>
    46ac:	ldr	x0, [x0]
    46b0:	ldr	w19, [x0]
    46b4:	b	459c <grub_cmd_syslinux_source+0x158>
    46b8:	bl	0 <grub_env_get_menu>
    46bc:	cbz	x0, 46fc <grub_cmd_syslinux_source+0x2b8>
    46c0:	ldr	w1, [x0]
    46c4:	cbnz	w1, 46ec <grub_cmd_syslinux_source+0x2a8>
    46c8:	cbnz	w24, 4700 <grub_cmd_syslinux_source+0x2bc>
    46cc:	cmp	w22, #0x63
    46d0:	cset	w0, ne  // ne = any
    46d4:	bl	0 <grub_env_extractor_close>
    46d8:	ldp	x21, x22, [sp, #32]
    46dc:	ldp	x23, x24, [sp, #48]
    46e0:	ldp	x25, x26, [sp, #64]
    46e4:	ldr	x27, [sp, #80]
    46e8:	b	45b8 <grub_cmd_syslinux_source+0x174>
    46ec:	mov	w2, #0x0                   	// #0
    46f0:	mov	w1, #0x1                   	// #1
    46f4:	bl	0 <grub_show_menu>
    46f8:	b	46c8 <grub_cmd_syslinux_source+0x284>
    46fc:	cbz	w24, 45a0 <grub_cmd_syslinux_source+0x15c>
    4700:	bl	0 <grub_env_context_close>
    4704:	ldp	x21, x22, [sp, #32]
    4708:	ldp	x23, x24, [sp, #48]
    470c:	ldp	x25, x26, [sp, #64]
    4710:	ldr	x27, [sp, #80]
    4714:	b	45b8 <grub_cmd_syslinux_source+0x174>
    4718:	bl	0 <grub_cls>
    471c:	b	4600 <grub_cmd_syslinux_source+0x1bc>
	...

0000000000004760 <grub_mod_init>:
    4760:	stp	x29, x30, [sp, #-48]!
    4764:	mov	x29, sp
    4768:	stp	x19, x20, [sp, #16]
    476c:	stp	x21, x22, [sp, #32]
    4770:	adrp	x0, 0 <grub_strcasecmp>
    4774:	ldr	x22, [x0]
    4778:	adrp	x0, 0 <grub_strcasecmp>
    477c:	ldr	x21, [x0]
    4780:	adrp	x0, 0 <grub_strcasecmp>
    4784:	ldr	x20, [x0]
    4788:	mov	x5, x22
    478c:	adrp	x0, 0 <grub_strcasecmp>
    4790:	ldr	x4, [x0]
    4794:	mov	x3, x21
    4798:	mov	w2, #0x0                   	// #0
    479c:	mov	x1, x20
    47a0:	adrp	x0, 0 <grub_strcasecmp>
    47a4:	ldr	x0, [x0]
    47a8:	bl	0 <grub_register_extcmd>
    47ac:	adrp	x1, 0 <grub_strcasecmp>
    47b0:	ldr	x19, [x1]
    47b4:	str	x0, [x19]
    47b8:	mov	x5, x22
    47bc:	adrp	x0, 0 <grub_strcasecmp>
    47c0:	ldr	x4, [x0]
    47c4:	mov	x3, x21
    47c8:	mov	w2, #0x0                   	// #0
    47cc:	mov	x1, x20
    47d0:	adrp	x0, 0 <grub_strcasecmp>
    47d4:	ldr	x0, [x0]
    47d8:	bl	0 <grub_register_extcmd>
    47dc:	str	x0, [x19, #8]
    47e0:	mov	x5, x22
    47e4:	adrp	x0, 0 <grub_strcasecmp>
    47e8:	ldr	x4, [x0]
    47ec:	mov	x3, x21
    47f0:	mov	w2, #0x0                   	// #0
    47f4:	mov	x1, x20
    47f8:	adrp	x0, 0 <grub_strcasecmp>
    47fc:	ldr	x0, [x0]
    4800:	bl	0 <grub_register_extcmd>
    4804:	str	x0, [x19, #16]
    4808:	mov	x5, x22
    480c:	adrp	x0, 0 <grub_strcasecmp>
    4810:	ldr	x4, [x0]
    4814:	mov	x3, x21
    4818:	mov	w2, #0x0                   	// #0
    481c:	mov	x1, x20
    4820:	adrp	x0, 0 <grub_strcasecmp>
    4824:	ldr	x0, [x0]
    4828:	bl	0 <grub_register_extcmd>
    482c:	str	x0, [x19, #24]
    4830:	ldp	x19, x20, [sp, #16]
    4834:	ldp	x21, x22, [sp, #32]
    4838:	ldp	x29, x30, [sp], #48
    483c:	ret
	...

00000000000048a0 <grub_mod_fini>:
    48a0:	stp	x29, x30, [sp, #-32]!
    48a4:	mov	x29, sp
    48a8:	str	x19, [sp, #16]
    48ac:	adrp	x0, 0 <grub_strcasecmp>
    48b0:	ldr	x19, [x0]
    48b4:	ldr	x0, [x19]
    48b8:	bl	0 <grub_unregister_extcmd>
    48bc:	ldr	x0, [x19, #8]
    48c0:	bl	0 <grub_unregister_extcmd>
    48c4:	ldr	x0, [x19, #16]
    48c8:	bl	0 <grub_unregister_extcmd>
    48cc:	ldr	x0, [x19, #24]
    48d0:	bl	0 <grub_unregister_extcmd>
    48d4:	ldr	x19, [sp, #16]
    48d8:	ldp	x29, x30, [sp], #32
    48dc:	ret
	...
