
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-vconsole-setup_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400da8 <_init>:
  400da8:	stp	x29, x30, [sp, #-16]!
  400dac:	mov	x29, sp
  400db0:	bl	401040 <call_weak_fn>
  400db4:	ldp	x29, x30, [sp], #16
  400db8:	ret

Disassembly of section .plt:

0000000000400dc0 <__libc_start_main@plt-0x20>:
  400dc0:	stp	x16, x30, [sp, #-16]!
  400dc4:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400dc8:	ldr	x17, [x16, #3824]
  400dcc:	add	x16, x16, #0xef0
  400dd0:	br	x17
  400dd4:	nop
  400dd8:	nop
  400ddc:	nop

0000000000400de0 <__libc_start_main@plt>:
  400de0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400de4:	ldr	x17, [x16, #3832]
  400de8:	add	x16, x16, #0xef8
  400dec:	br	x17

0000000000400df0 <abort@plt>:
  400df0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400df4:	ldr	x17, [x16, #3840]
  400df8:	add	x16, x16, #0xf00
  400dfc:	br	x17

0000000000400e00 <__gmon_start__@plt>:
  400e00:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e04:	ldr	x17, [x16, #3848]
  400e08:	add	x16, x16, #0xf08
  400e0c:	br	x17

0000000000400e10 <log_setup_service@plt>:
  400e10:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e14:	ldr	x17, [x16, #3856]
  400e18:	add	x16, x16, #0xf10
  400e1c:	br	x17

0000000000400e20 <umask@plt>:
  400e20:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e24:	ldr	x17, [x16, #3864]
  400e28:	add	x16, x16, #0xf18
  400e2c:	br	x17

0000000000400e30 <is_locale_utf8@plt>:
  400e30:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e34:	ldr	x17, [x16, #3872]
  400e38:	add	x16, x16, #0xf20
  400e3c:	br	x17

0000000000400e40 <parse_env_file_sentinel@plt>:
  400e40:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e44:	ldr	x17, [x16, #3880]
  400e48:	add	x16, x16, #0xf28
  400e4c:	br	x17

0000000000400e50 <log_get_max_level_realm@plt>:
  400e50:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e54:	ldr	x17, [x16, #3888]
  400e58:	add	x16, x16, #0xf30
  400e5c:	br	x17

0000000000400e60 <log_internal_realm@plt>:
  400e60:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e64:	ldr	x17, [x16, #3896]
  400e68:	add	x16, x16, #0xf38
  400e6c:	br	x17

0000000000400e70 <abs@plt>:
  400e70:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e74:	ldr	x17, [x16, #3904]
  400e78:	add	x16, x16, #0xf40
  400e7c:	br	x17

0000000000400e80 <proc_cmdline_get_key_many_internal@plt>:
  400e80:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e84:	ldr	x17, [x16, #3912]
  400e88:	add	x16, x16, #0xf48
  400e8c:	br	x17

0000000000400e90 <free@plt>:
  400e90:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400e94:	ldr	x17, [x16, #3920]
  400e98:	add	x16, x16, #0xf50
  400e9c:	br	x17

0000000000400ea0 <safe_close@plt>:
  400ea0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400ea4:	ldr	x17, [x16, #3928]
  400ea8:	add	x16, x16, #0xf58
  400eac:	br	x17

0000000000400eb0 <open_terminal@plt>:
  400eb0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400eb4:	ldr	x17, [x16, #3936]
  400eb8:	add	x16, x16, #0xf60
  400ebc:	br	x17

0000000000400ec0 <strdup@plt>:
  400ec0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400ec4:	ldr	x17, [x16, #3944]
  400ec8:	add	x16, x16, #0xf68
  400ecc:	br	x17

0000000000400ed0 <log_oom_internal@plt>:
  400ed0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400ed4:	ldr	x17, [x16, #3952]
  400ed8:	add	x16, x16, #0xf70
  400edc:	br	x17

0000000000400ee0 <sprintf@plt>:
  400ee0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400ee4:	ldr	x17, [x16, #3960]
  400ee8:	add	x16, x16, #0xf78
  400eec:	br	x17

0000000000400ef0 <memset@plt>:
  400ef0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400ef4:	ldr	x17, [x16, #3968]
  400ef8:	add	x16, x16, #0xf80
  400efc:	br	x17

0000000000400f00 <log_assert_failed_realm@plt>:
  400f00:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f04:	ldr	x17, [x16, #3976]
  400f08:	add	x16, x16, #0xf88
  400f0c:	br	x17

0000000000400f10 <ioctl@plt>:
  400f10:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f14:	ldr	x17, [x16, #3984]
  400f18:	add	x16, x16, #0xf90
  400f1c:	br	x17

0000000000400f20 <__errno_location@plt>:
  400f20:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f24:	ldr	x17, [x16, #3992]
  400f28:	add	x16, x16, #0xf98
  400f2c:	br	x17

0000000000400f30 <loop_write@plt>:
  400f30:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f34:	ldr	x17, [x16, #4000]
  400f38:	add	x16, x16, #0xfa0
  400f3c:	br	x17

0000000000400f40 <tcgetattr@plt>:
  400f40:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f44:	ldr	x17, [x16, #4008]
  400f48:	add	x16, x16, #0xfa8
  400f4c:	br	x17

0000000000400f50 <tcsetattr@plt>:
  400f50:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f54:	ldr	x17, [x16, #4016]
  400f58:	add	x16, x16, #0xfb0
  400f5c:	br	x17

0000000000400f60 <execv@plt>:
  400f60:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f64:	ldr	x17, [x16, #4024]
  400f68:	add	x16, x16, #0xfb8
  400f6c:	br	x17

0000000000400f70 <_exit@plt>:
  400f70:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f74:	ldr	x17, [x16, #4032]
  400f78:	add	x16, x16, #0xfc0
  400f7c:	br	x17

0000000000400f80 <wait_for_terminate_and_check@plt>:
  400f80:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f84:	ldr	x17, [x16, #4040]
  400f88:	add	x16, x16, #0xfc8
  400f8c:	br	x17

0000000000400f90 <snprintf@plt>:
  400f90:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400f94:	ldr	x17, [x16, #4048]
  400f98:	add	x16, x16, #0xfd0
  400f9c:	br	x17

0000000000400fa0 <access@plt>:
  400fa0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400fa4:	ldr	x17, [x16, #4056]
  400fa8:	add	x16, x16, #0xfd8
  400fac:	br	x17

0000000000400fb0 <malloc@plt>:
  400fb0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400fb4:	ldr	x17, [x16, #4064]
  400fb8:	add	x16, x16, #0xfe0
  400fbc:	br	x17

0000000000400fc0 <write_string_file_ts@plt>:
  400fc0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400fc4:	ldr	x17, [x16, #4072]
  400fc8:	add	x16, x16, #0xfe8
  400fcc:	br	x17

0000000000400fd0 <strv_join_prefix@plt>:
  400fd0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400fd4:	ldr	x17, [x16, #4080]
  400fd8:	add	x16, x16, #0xff0
  400fdc:	br	x17

0000000000400fe0 <safe_fork_full@plt>:
  400fe0:	adrp	x16, 41f000 <__FRAME_END__+0x1ac70>
  400fe4:	ldr	x17, [x16, #4088]
  400fe8:	add	x16, x16, #0xff8
  400fec:	br	x17

Disassembly of section .text:

0000000000400ff0 <_start>:
  400ff0:	mov	x29, #0x0                   	// #0
  400ff4:	mov	x30, #0x0                   	// #0
  400ff8:	mov	x5, x0
  400ffc:	ldr	x1, [sp]
  401000:	add	x2, sp, #0x8
  401004:	mov	x6, sp
  401008:	movz	x0, #0x0, lsl #48
  40100c:	movk	x0, #0x0, lsl #32
  401010:	movk	x0, #0x40, lsl #16
  401014:	movk	x0, #0x11b8
  401018:	movz	x3, #0x0, lsl #48
  40101c:	movk	x3, #0x0, lsl #32
  401020:	movk	x3, #0x40, lsl #16
  401024:	movk	x3, #0x39a8
  401028:	movz	x4, #0x0, lsl #48
  40102c:	movk	x4, #0x0, lsl #32
  401030:	movk	x4, #0x40, lsl #16
  401034:	movk	x4, #0x3a28
  401038:	bl	400de0 <__libc_start_main@plt>
  40103c:	bl	400df0 <abort@plt>

0000000000401040 <call_weak_fn>:
  401040:	adrp	x0, 41f000 <__FRAME_END__+0x1ac70>
  401044:	ldr	x0, [x0, #3800]
  401048:	cbz	x0, 401050 <call_weak_fn+0x10>
  40104c:	b	400e00 <__gmon_start__@plt>
  401050:	ret

0000000000401054 <deregister_tm_clones>:
  401054:	stp	x29, x30, [sp, #-32]!
  401058:	mov	x29, sp
  40105c:	adrp	x0, 420000 <completed.8445>
  401060:	add	x0, x0, #0x0
  401064:	str	x0, [sp, #24]
  401068:	ldr	x0, [sp, #24]
  40106c:	str	x0, [sp, #24]
  401070:	ldr	x1, [sp, #24]
  401074:	adrp	x0, 420000 <completed.8445>
  401078:	add	x0, x0, #0x0
  40107c:	cmp	x1, x0
  401080:	b.eq	4010bc <deregister_tm_clones+0x68>  // b.none
  401084:	adrp	x0, 403000 <setup_remaining_vcs+0x4d8>
  401088:	add	x0, x0, #0xa40
  40108c:	ldr	x0, [x0]
  401090:	str	x0, [sp, #16]
  401094:	ldr	x0, [sp, #16]
  401098:	str	x0, [sp, #16]
  40109c:	ldr	x0, [sp, #16]
  4010a0:	cmp	x0, #0x0
  4010a4:	b.eq	4010c0 <deregister_tm_clones+0x6c>  // b.none
  4010a8:	ldr	x1, [sp, #16]
  4010ac:	adrp	x0, 420000 <completed.8445>
  4010b0:	add	x0, x0, #0x0
  4010b4:	blr	x1
  4010b8:	b	4010c0 <deregister_tm_clones+0x6c>
  4010bc:	nop
  4010c0:	ldp	x29, x30, [sp], #32
  4010c4:	ret

00000000004010c8 <register_tm_clones>:
  4010c8:	stp	x29, x30, [sp, #-48]!
  4010cc:	mov	x29, sp
  4010d0:	adrp	x0, 420000 <completed.8445>
  4010d4:	add	x0, x0, #0x0
  4010d8:	str	x0, [sp, #40]
  4010dc:	ldr	x0, [sp, #40]
  4010e0:	str	x0, [sp, #40]
  4010e4:	ldr	x1, [sp, #40]
  4010e8:	adrp	x0, 420000 <completed.8445>
  4010ec:	add	x0, x0, #0x0
  4010f0:	sub	x0, x1, x0
  4010f4:	asr	x0, x0, #3
  4010f8:	lsr	x1, x0, #63
  4010fc:	add	x0, x1, x0
  401100:	asr	x0, x0, #1
  401104:	str	x0, [sp, #32]
  401108:	ldr	x0, [sp, #32]
  40110c:	cmp	x0, #0x0
  401110:	b.eq	401150 <register_tm_clones+0x88>  // b.none
  401114:	adrp	x0, 403000 <setup_remaining_vcs+0x4d8>
  401118:	add	x0, x0, #0xa48
  40111c:	ldr	x0, [x0]
  401120:	str	x0, [sp, #24]
  401124:	ldr	x0, [sp, #24]
  401128:	str	x0, [sp, #24]
  40112c:	ldr	x0, [sp, #24]
  401130:	cmp	x0, #0x0
  401134:	b.eq	401154 <register_tm_clones+0x8c>  // b.none
  401138:	ldr	x2, [sp, #24]
  40113c:	ldr	x1, [sp, #32]
  401140:	adrp	x0, 420000 <completed.8445>
  401144:	add	x0, x0, #0x0
  401148:	blr	x2
  40114c:	b	401154 <register_tm_clones+0x8c>
  401150:	nop
  401154:	ldp	x29, x30, [sp], #48
  401158:	ret

000000000040115c <__do_global_dtors_aux>:
  40115c:	stp	x29, x30, [sp, #-16]!
  401160:	mov	x29, sp
  401164:	adrp	x0, 420000 <completed.8445>
  401168:	add	x0, x0, #0x0
  40116c:	ldrb	w0, [x0]
  401170:	and	x0, x0, #0xff
  401174:	cmp	x0, #0x0
  401178:	b.ne	401194 <__do_global_dtors_aux+0x38>  // b.any
  40117c:	bl	401054 <deregister_tm_clones>
  401180:	adrp	x0, 420000 <completed.8445>
  401184:	add	x0, x0, #0x0
  401188:	mov	w1, #0x1                   	// #1
  40118c:	strb	w1, [x0]
  401190:	b	401198 <__do_global_dtors_aux+0x3c>
  401194:	nop
  401198:	ldp	x29, x30, [sp], #16
  40119c:	ret

00000000004011a0 <frame_dummy>:
  4011a0:	stp	x29, x30, [sp, #-16]!
  4011a4:	mov	x29, sp
  4011a8:	bl	4010c8 <register_tm_clones>
  4011ac:	nop
  4011b0:	ldp	x29, x30, [sp], #16
  4011b4:	ret

00000000004011b8 <main>:
  4011b8:	sub	sp, sp, #0x150
  4011bc:	stp	x29, x30, [sp, #304]
  4011c0:	str	x28, [sp, #320]
  4011c4:	add	x29, sp, #0x130
  4011c8:	sub	x8, x29, #0x10
  4011cc:	mov	x9, xzr
  4011d0:	mov	w10, #0xffffffff            	// #-1
  4011d4:	mov	w11, #0x12                  	// #18
  4011d8:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  4011dc:	add	x12, x12, #0xa92
  4011e0:	add	x12, x12, #0x3
  4011e4:	adrp	x13, 403000 <setup_remaining_vcs+0x4d8>
  4011e8:	add	x13, x13, #0xab3
  4011ec:	str	wzr, [x8, #12]
  4011f0:	str	w0, [x8, #8]
  4011f4:	str	x1, [x8]
  4011f8:	stur	x9, [x29, #-24]
  4011fc:	stur	x9, [x29, #-32]
  401200:	stur	x9, [x29, #-40]
  401204:	stur	x9, [x29, #-48]
  401208:	stur	x9, [x29, #-56]
  40120c:	stur	x9, [x29, #-64]
  401210:	stur	w10, [x29, #-68]
  401214:	stur	wzr, [x29, #-76]
  401218:	str	x8, [sp, #144]
  40121c:	str	w11, [sp, #140]
  401220:	str	x12, [sp, #128]
  401224:	str	x13, [sp, #120]
  401228:	bl	400e10 <log_setup_service@plt>
  40122c:	ldr	w0, [sp, #140]
  401230:	bl	400e20 <umask@plt>
  401234:	ldr	x8, [sp, #144]
  401238:	ldr	x9, [x8]
  40123c:	ldr	x9, [x9, #8]
  401240:	cbz	x9, 401260 <main+0xa8>
  401244:	ldr	x8, [sp, #144]
  401248:	ldr	x9, [x8]
  40124c:	ldr	x1, [x9, #8]
  401250:	sub	x0, x29, #0x18
  401254:	bl	4017c8 <verify_source_vc>
  401258:	stur	w0, [x29, #-68]
  40125c:	b	401270 <main+0xb8>
  401260:	sub	x0, x29, #0x18
  401264:	sub	x1, x29, #0x4c
  401268:	bl	401b44 <find_source_vc>
  40126c:	stur	w0, [x29, #-68]
  401270:	ldur	w8, [x29, #-68]
  401274:	cmp	w8, #0x0
  401278:	cset	w8, ge  // ge = tcont
  40127c:	tbnz	w8, #0, 401294 <main+0xdc>
  401280:	mov	w8, #0x1                   	// #1
  401284:	ldr	x9, [sp, #144]
  401288:	str	w8, [x9, #12]
  40128c:	stur	w8, [x29, #-84]
  401290:	b	401728 <main+0x570>
  401294:	bl	400e30 <is_locale_utf8@plt>
  401298:	and	w8, w0, #0x1
  40129c:	sturb	w8, [x29, #-69]
  4012a0:	mov	x9, xzr
  4012a4:	mov	x1, x9
  4012a8:	mov	x0, x1
  4012ac:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  4012b0:	add	x1, x1, #0xa50
  4012b4:	adrp	x2, 403000 <setup_remaining_vcs+0x4d8>
  4012b8:	add	x2, x2, #0xa63
  4012bc:	sub	x3, x29, #0x20
  4012c0:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  4012c4:	add	x4, x4, #0xa6a
  4012c8:	sub	x5, x29, #0x28
  4012cc:	adrp	x6, 403000 <setup_remaining_vcs+0x4d8>
  4012d0:	add	x6, x6, #0xa78
  4012d4:	sub	x7, x29, #0x30
  4012d8:	mov	x10, sp
  4012dc:	adrp	x11, 403000 <setup_remaining_vcs+0x4d8>
  4012e0:	add	x11, x11, #0xa7d
  4012e4:	str	x11, [x10]
  4012e8:	mov	x10, sp
  4012ec:	sub	x11, x29, #0x38
  4012f0:	str	x11, [x10, #8]
  4012f4:	mov	x10, sp
  4012f8:	adrp	x11, 403000 <setup_remaining_vcs+0x4d8>
  4012fc:	add	x11, x11, #0xa86
  401300:	str	x11, [x10, #16]
  401304:	mov	x10, sp
  401308:	sub	x11, x29, #0x40
  40130c:	str	x11, [x10, #24]
  401310:	mov	x10, sp
  401314:	str	x9, [x10, #32]
  401318:	bl	400e40 <parse_env_file_sentinel@plt>
  40131c:	stur	w0, [x29, #-80]
  401320:	ldur	w8, [x29, #-80]
  401324:	cmp	w8, #0x0
  401328:	cset	w8, ge  // ge = tcont
  40132c:	tbnz	w8, #0, 4013b8 <main+0x200>
  401330:	ldur	w8, [x29, #-80]
  401334:	mov	w9, #0xfffffffe            	// #-2
  401338:	cmp	w8, w9
  40133c:	b.eq	4013b8 <main+0x200>  // b.none
  401340:	mov	w8, #0x4                   	// #4
  401344:	stur	w8, [x29, #-88]
  401348:	ldur	w8, [x29, #-80]
  40134c:	stur	w8, [x29, #-92]
  401350:	stur	wzr, [x29, #-96]
  401354:	ldur	w0, [x29, #-96]
  401358:	bl	400e50 <log_get_max_level_realm@plt>
  40135c:	ldur	w8, [x29, #-88]
  401360:	and	w8, w8, #0x7
  401364:	cmp	w0, w8
  401368:	b.lt	40139c <main+0x1e4>  // b.tstop
  40136c:	ldur	w8, [x29, #-96]
  401370:	ldur	w9, [x29, #-88]
  401374:	orr	w0, w9, w8, lsl #10
  401378:	ldur	w1, [x29, #-92]
  40137c:	ldr	x2, [sp, #128]
  401380:	mov	w3, #0x1bb                 	// #443
  401384:	ldr	x4, [sp, #120]
  401388:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  40138c:	add	x5, x5, #0xab8
  401390:	bl	400e60 <log_internal_realm@plt>
  401394:	str	w0, [sp, #116]
  401398:	b	4013b0 <main+0x1f8>
  40139c:	ldur	w0, [x29, #-92]
  4013a0:	bl	400e70 <abs@plt>
  4013a4:	mov	w8, wzr
  4013a8:	subs	w8, w8, w0, uxtb
  4013ac:	str	w8, [sp, #116]
  4013b0:	ldr	w8, [sp, #116]
  4013b4:	stur	w8, [x29, #-100]
  4013b8:	mov	w0, #0x1                   	// #1
  4013bc:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  4013c0:	add	x1, x1, #0xade
  4013c4:	sub	x2, x29, #0x20
  4013c8:	adrp	x3, 403000 <setup_remaining_vcs+0x4d8>
  4013cc:	add	x3, x3, #0xaee
  4013d0:	sub	x8, x29, #0x28
  4013d4:	mov	x4, x8
  4013d8:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  4013dc:	add	x5, x5, #0xb05
  4013e0:	sub	x6, x29, #0x30
  4013e4:	adrp	x7, 403000 <setup_remaining_vcs+0x4d8>
  4013e8:	add	x7, x7, #0xb13
  4013ec:	mov	x9, sp
  4013f0:	sub	x10, x29, #0x38
  4013f4:	str	x10, [x9]
  4013f8:	mov	x9, sp
  4013fc:	adrp	x11, 403000 <setup_remaining_vcs+0x4d8>
  401400:	add	x11, x11, #0xb25
  401404:	str	x11, [x9, #8]
  401408:	mov	x9, sp
  40140c:	sub	x11, x29, #0x40
  401410:	str	x11, [x9, #16]
  401414:	mov	x9, sp
  401418:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  40141c:	add	x12, x12, #0xb3a
  401420:	str	x12, [x9, #24]
  401424:	mov	x9, sp
  401428:	str	x8, [x9, #32]
  40142c:	mov	x8, sp
  401430:	adrp	x9, 403000 <setup_remaining_vcs+0x4d8>
  401434:	add	x9, x9, #0xb51
  401438:	str	x9, [x8, #40]
  40143c:	mov	x8, sp
  401440:	str	x10, [x8, #48]
  401444:	mov	x8, sp
  401448:	adrp	x9, 403000 <setup_remaining_vcs+0x4d8>
  40144c:	add	x9, x9, #0xb63
  401450:	str	x9, [x8, #56]
  401454:	mov	x8, sp
  401458:	str	x11, [x8, #64]
  40145c:	mov	x8, sp
  401460:	mov	x9, xzr
  401464:	str	x9, [x8, #72]
  401468:	bl	400e80 <proc_cmdline_get_key_many_internal@plt>
  40146c:	stur	w0, [x29, #-80]
  401470:	ldur	w13, [x29, #-80]
  401474:	cmp	w13, #0x0
  401478:	cset	w13, ge  // ge = tcont
  40147c:	tbnz	w13, #0, 401508 <main+0x350>
  401480:	ldur	w8, [x29, #-80]
  401484:	mov	w9, #0xfffffffe            	// #-2
  401488:	cmp	w8, w9
  40148c:	b.eq	401508 <main+0x350>  // b.none
  401490:	mov	w8, #0x4                   	// #4
  401494:	stur	w8, [x29, #-104]
  401498:	ldur	w8, [x29, #-80]
  40149c:	stur	w8, [x29, #-108]
  4014a0:	stur	wzr, [x29, #-112]
  4014a4:	ldur	w0, [x29, #-112]
  4014a8:	bl	400e50 <log_get_max_level_realm@plt>
  4014ac:	ldur	w8, [x29, #-104]
  4014b0:	and	w8, w8, #0x7
  4014b4:	cmp	w0, w8
  4014b8:	b.lt	4014ec <main+0x334>  // b.tstop
  4014bc:	ldur	w8, [x29, #-112]
  4014c0:	ldur	w9, [x29, #-104]
  4014c4:	orr	w0, w9, w8, lsl #10
  4014c8:	ldur	w1, [x29, #-108]
  4014cc:	ldr	x2, [sp, #128]
  4014d0:	mov	w3, #0x1ca                 	// #458
  4014d4:	ldr	x4, [sp, #120]
  4014d8:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  4014dc:	add	x5, x5, #0xb78
  4014e0:	bl	400e60 <log_internal_realm@plt>
  4014e4:	str	w0, [sp, #112]
  4014e8:	b	401500 <main+0x348>
  4014ec:	ldur	w0, [x29, #-108]
  4014f0:	bl	400e70 <abs@plt>
  4014f4:	mov	w8, wzr
  4014f8:	subs	w8, w8, w0, uxtb
  4014fc:	str	w8, [sp, #112]
  401500:	ldr	w8, [sp, #112]
  401504:	stur	w8, [x29, #-116]
  401508:	ldurb	w8, [x29, #-69]
  40150c:	mov	w9, #0x1                   	// #1
  401510:	and	w0, w8, #0x1
  401514:	str	w9, [sp, #108]
  401518:	bl	401de8 <toggle_utf8_sysfs>
  40151c:	ldur	x10, [x29, #-24]
  401520:	ldur	w1, [x29, #-68]
  401524:	ldurb	w8, [x29, #-69]
  401528:	mov	x0, x10
  40152c:	and	w2, w8, #0x1
  401530:	bl	401fc8 <toggle_utf8_vc>
  401534:	ldur	x10, [x29, #-24]
  401538:	ldur	x1, [x29, #-48]
  40153c:	ldur	x2, [x29, #-56]
  401540:	ldur	x3, [x29, #-64]
  401544:	mov	x0, x10
  401548:	bl	402494 <font_load_and_wait>
  40154c:	stur	w0, [x29, #-80]
  401550:	ldur	x0, [x29, #-24]
  401554:	ldur	x1, [x29, #-32]
  401558:	ldur	x2, [x29, #-40]
  40155c:	ldurb	w8, [x29, #-69]
  401560:	and	w3, w8, #0x1
  401564:	bl	402804 <keyboard_load_and_wait>
  401568:	cmp	w0, #0x0
  40156c:	cset	w8, eq  // eq = none
  401570:	ldr	w9, [sp, #108]
  401574:	and	w8, w8, w9
  401578:	sturb	w8, [x29, #-70]
  40157c:	ldur	w8, [x29, #-76]
  401580:	cmp	w8, #0x0
  401584:	cset	w8, ls  // ls = plast
  401588:	tbnz	w8, #0, 4016a4 <main+0x4ec>
  40158c:	ldur	w8, [x29, #-80]
  401590:	cbnz	w8, 4015ac <main+0x3f4>
  401594:	ldur	w0, [x29, #-68]
  401598:	ldur	w1, [x29, #-76]
  40159c:	ldurb	w8, [x29, #-69]
  4015a0:	and	w2, w8, #0x1
  4015a4:	bl	402b28 <setup_remaining_vcs>
  4015a8:	b	4016a4 <main+0x4ec>
  4015ac:	ldur	w8, [x29, #-80]
  4015b0:	cmp	w8, #0x47
  4015b4:	b.ne	401630 <main+0x478>  // b.any
  4015b8:	mov	w8, #0x5                   	// #5
  4015bc:	stur	w8, [x29, #-120]
  4015c0:	stur	wzr, [x29, #-124]
  4015c4:	stur	wzr, [x29, #-128]
  4015c8:	ldur	w0, [x29, #-128]
  4015cc:	bl	400e50 <log_get_max_level_realm@plt>
  4015d0:	ldur	w8, [x29, #-120]
  4015d4:	and	w8, w8, #0x7
  4015d8:	cmp	w0, w8
  4015dc:	b.lt	401610 <main+0x458>  // b.tstop
  4015e0:	ldur	w8, [x29, #-128]
  4015e4:	ldur	w9, [x29, #-120]
  4015e8:	orr	w0, w9, w8, lsl #10
  4015ec:	ldur	w1, [x29, #-124]
  4015f0:	ldr	x2, [sp, #128]
  4015f4:	mov	w3, #0x1d9                 	// #473
  4015f8:	ldr	x4, [sp, #120]
  4015fc:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401600:	add	x5, x5, #0xb99
  401604:	bl	400e60 <log_internal_realm@plt>
  401608:	str	w0, [sp, #104]
  40160c:	b	401624 <main+0x46c>
  401610:	ldur	w0, [x29, #-124]
  401614:	bl	400e70 <abs@plt>
  401618:	mov	w8, wzr
  40161c:	subs	w8, w8, w0, uxtb
  401620:	str	w8, [sp, #104]
  401624:	ldr	w8, [sp, #104]
  401628:	stur	w8, [x29, #-132]
  40162c:	b	4016a4 <main+0x4ec>
  401630:	mov	w8, #0x4                   	// #4
  401634:	stur	w8, [x29, #-136]
  401638:	stur	wzr, [x29, #-140]
  40163c:	stur	wzr, [x29, #-144]
  401640:	ldur	w0, [x29, #-144]
  401644:	bl	400e50 <log_get_max_level_realm@plt>
  401648:	ldur	w8, [x29, #-136]
  40164c:	and	w8, w8, #0x7
  401650:	cmp	w0, w8
  401654:	b.lt	401688 <main+0x4d0>  // b.tstop
  401658:	ldur	w8, [x29, #-144]
  40165c:	ldur	w9, [x29, #-136]
  401660:	orr	w0, w9, w8, lsl #10
  401664:	ldur	w1, [x29, #-140]
  401668:	ldr	x2, [sp, #128]
  40166c:	mov	w3, #0x1db                 	// #475
  401670:	ldr	x4, [sp, #120]
  401674:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401678:	add	x5, x5, #0xbcf
  40167c:	bl	400e60 <log_internal_realm@plt>
  401680:	str	w0, [sp, #100]
  401684:	b	40169c <main+0x4e4>
  401688:	ldur	w0, [x29, #-140]
  40168c:	bl	400e70 <abs@plt>
  401690:	mov	w8, wzr
  401694:	subs	w8, w8, w0, uxtb
  401698:	str	w8, [sp, #100]
  40169c:	ldr	w8, [sp, #100]
  4016a0:	stur	w8, [x29, #-148]
  4016a4:	mov	w8, #0x0                   	// #0
  4016a8:	sturb	w8, [x29, #-149]
  4016ac:	ldur	w8, [x29, #-80]
  4016b0:	str	w8, [sp, #96]
  4016b4:	cbz	w8, 4016d4 <main+0x51c>
  4016b8:	b	4016bc <main+0x504>
  4016bc:	ldr	w8, [sp, #96]
  4016c0:	cmp	w8, #0x47
  4016c4:	cset	w9, eq  // eq = none
  4016c8:	eor	w9, w9, #0x1
  4016cc:	tbnz	w9, #0, 4016e0 <main+0x528>
  4016d0:	b	4016d4 <main+0x51c>
  4016d4:	mov	w8, #0x1                   	// #1
  4016d8:	sturb	w8, [x29, #-149]
  4016dc:	b	4016e0 <main+0x528>
  4016e0:	ldurb	w8, [x29, #-149]
  4016e4:	and	w8, w8, #0x1
  4016e8:	sturb	w8, [x29, #-150]
  4016ec:	ldurb	w8, [x29, #-150]
  4016f0:	mov	w9, #0x0                   	// #0
  4016f4:	str	w9, [sp, #92]
  4016f8:	tbnz	w8, #0, 401700 <main+0x548>
  4016fc:	b	401708 <main+0x550>
  401700:	ldurb	w8, [x29, #-70]
  401704:	str	w8, [sp, #92]
  401708:	ldr	w8, [sp, #92]
  40170c:	mov	w9, #0x1                   	// #1
  401710:	mov	w10, wzr
  401714:	tst	w8, #0x1
  401718:	csel	w8, w10, w9, ne  // ne = any
  40171c:	ldr	x11, [sp, #144]
  401720:	str	w8, [x11, #12]
  401724:	stur	w9, [x29, #-84]
  401728:	sub	x0, x29, #0x44
  40172c:	bl	4017a0 <closep>
  401730:	sub	x0, x29, #0x40
  401734:	bl	401778 <freep>
  401738:	sub	x0, x29, #0x38
  40173c:	bl	401778 <freep>
  401740:	sub	x0, x29, #0x30
  401744:	bl	401778 <freep>
  401748:	sub	x0, x29, #0x28
  40174c:	bl	401778 <freep>
  401750:	sub	x0, x29, #0x20
  401754:	bl	401778 <freep>
  401758:	sub	x0, x29, #0x18
  40175c:	bl	401778 <freep>
  401760:	ldr	x8, [sp, #144]
  401764:	ldr	w0, [x8, #12]
  401768:	ldr	x28, [sp, #320]
  40176c:	ldp	x29, x30, [sp, #304]
  401770:	add	sp, sp, #0x150
  401774:	ret

0000000000401778 <freep>:
  401778:	sub	sp, sp, #0x20
  40177c:	stp	x29, x30, [sp, #16]
  401780:	add	x29, sp, #0x10
  401784:	str	x0, [sp, #8]
  401788:	ldr	x8, [sp, #8]
  40178c:	ldr	x0, [x8]
  401790:	bl	400e90 <free@plt>
  401794:	ldp	x29, x30, [sp, #16]
  401798:	add	sp, sp, #0x20
  40179c:	ret

00000000004017a0 <closep>:
  4017a0:	sub	sp, sp, #0x20
  4017a4:	stp	x29, x30, [sp, #16]
  4017a8:	add	x29, sp, #0x10
  4017ac:	str	x0, [sp, #8]
  4017b0:	ldr	x8, [sp, #8]
  4017b4:	ldr	w0, [x8]
  4017b8:	bl	400ea0 <safe_close@plt>
  4017bc:	ldp	x29, x30, [sp, #16]
  4017c0:	add	sp, sp, #0x20
  4017c4:	ret

00000000004017c8 <verify_source_vc>:
  4017c8:	sub	sp, sp, #0xb0
  4017cc:	stp	x29, x30, [sp, #160]
  4017d0:	add	x29, sp, #0xa0
  4017d4:	mov	w8, #0xffffffff            	// #-1
  4017d8:	mov	w9, #0x102                 	// #258
  4017dc:	movk	w9, #0x8, lsl #16
  4017e0:	adrp	x10, 403000 <setup_remaining_vcs+0x4d8>
  4017e4:	add	x10, x10, #0xa92
  4017e8:	add	x10, x10, #0x3
  4017ec:	adrp	x11, 403000 <setup_remaining_vcs+0x4d8>
  4017f0:	add	x11, x11, #0xc0e
  4017f4:	stur	x0, [x29, #-16]
  4017f8:	stur	x1, [x29, #-24]
  4017fc:	stur	w8, [x29, #-28]
  401800:	ldur	x0, [x29, #-24]
  401804:	mov	w1, w9
  401808:	str	x10, [sp, #32]
  40180c:	str	x11, [sp, #24]
  401810:	bl	400eb0 <open_terminal@plt>
  401814:	stur	w0, [x29, #-28]
  401818:	ldur	w8, [x29, #-28]
  40181c:	cmp	w8, #0x0
  401820:	cset	w8, ge  // ge = tcont
  401824:	tbnz	w8, #0, 4018b8 <verify_source_vc+0xf0>
  401828:	mov	w8, #0x3                   	// #3
  40182c:	stur	w8, [x29, #-48]
  401830:	ldur	w8, [x29, #-28]
  401834:	stur	w8, [x29, #-52]
  401838:	stur	wzr, [x29, #-56]
  40183c:	ldur	w0, [x29, #-56]
  401840:	bl	400e50 <log_get_max_level_realm@plt>
  401844:	ldur	w8, [x29, #-48]
  401848:	and	w8, w8, #0x7
  40184c:	cmp	w0, w8
  401850:	b.lt	401888 <verify_source_vc+0xc0>  // b.tstop
  401854:	ldur	w8, [x29, #-56]
  401858:	ldur	w9, [x29, #-48]
  40185c:	orr	w0, w9, w8, lsl #10
  401860:	ldur	w1, [x29, #-52]
  401864:	ldur	x6, [x29, #-24]
  401868:	ldr	x2, [sp, #32]
  40186c:	mov	w3, #0x187                 	// #391
  401870:	ldr	x4, [sp, #24]
  401874:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401878:	add	x5, x5, #0xc1f
  40187c:	bl	400e60 <log_internal_realm@plt>
  401880:	str	w0, [sp, #20]
  401884:	b	40189c <verify_source_vc+0xd4>
  401888:	ldur	w0, [x29, #-52]
  40188c:	bl	400e70 <abs@plt>
  401890:	mov	w8, wzr
  401894:	subs	w8, w8, w0, uxtb
  401898:	str	w8, [sp, #20]
  40189c:	ldr	w8, [sp, #20]
  4018a0:	stur	w8, [x29, #-60]
  4018a4:	ldur	w8, [x29, #-60]
  4018a8:	stur	w8, [x29, #-4]
  4018ac:	mov	w8, #0x1                   	// #1
  4018b0:	stur	w8, [x29, #-64]
  4018b4:	b	401b2c <verify_source_vc+0x364>
  4018b8:	ldur	w0, [x29, #-28]
  4018bc:	bl	4034bc <verify_vc_device>
  4018c0:	stur	w0, [x29, #-44]
  4018c4:	ldur	w8, [x29, #-44]
  4018c8:	cmp	w8, #0x0
  4018cc:	cset	w8, ge  // ge = tcont
  4018d0:	tbnz	w8, #0, 401964 <verify_source_vc+0x19c>
  4018d4:	mov	w8, #0x3                   	// #3
  4018d8:	stur	w8, [x29, #-68]
  4018dc:	ldur	w8, [x29, #-44]
  4018e0:	stur	w8, [x29, #-72]
  4018e4:	stur	wzr, [x29, #-76]
  4018e8:	ldur	w0, [x29, #-76]
  4018ec:	bl	400e50 <log_get_max_level_realm@plt>
  4018f0:	ldur	w8, [x29, #-68]
  4018f4:	and	w8, w8, #0x7
  4018f8:	cmp	w0, w8
  4018fc:	b.lt	401934 <verify_source_vc+0x16c>  // b.tstop
  401900:	ldur	w8, [x29, #-76]
  401904:	ldur	w9, [x29, #-68]
  401908:	orr	w0, w9, w8, lsl #10
  40190c:	ldur	w1, [x29, #-72]
  401910:	ldur	x6, [x29, #-24]
  401914:	ldr	x2, [sp, #32]
  401918:	mov	w3, #0x18b                 	// #395
  40191c:	ldr	x4, [sp, #24]
  401920:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401924:	add	x5, x5, #0xc35
  401928:	bl	400e60 <log_internal_realm@plt>
  40192c:	str	w0, [sp, #16]
  401930:	b	401948 <verify_source_vc+0x180>
  401934:	ldur	w0, [x29, #-72]
  401938:	bl	400e70 <abs@plt>
  40193c:	mov	w8, wzr
  401940:	subs	w8, w8, w0, uxtb
  401944:	str	w8, [sp, #16]
  401948:	ldr	w8, [sp, #16]
  40194c:	str	w8, [sp, #80]
  401950:	ldr	w8, [sp, #80]
  401954:	stur	w8, [x29, #-4]
  401958:	mov	w8, #0x1                   	// #1
  40195c:	stur	w8, [x29, #-64]
  401960:	b	401b2c <verify_source_vc+0x364>
  401964:	ldur	w0, [x29, #-28]
  401968:	bl	403530 <verify_vc_allocation_byfd>
  40196c:	stur	w0, [x29, #-44]
  401970:	ldur	w8, [x29, #-44]
  401974:	cmp	w8, #0x0
  401978:	cset	w8, ge  // ge = tcont
  40197c:	tbnz	w8, #0, 401a10 <verify_source_vc+0x248>
  401980:	mov	w8, #0x3                   	// #3
  401984:	str	w8, [sp, #76]
  401988:	ldur	w8, [x29, #-44]
  40198c:	str	w8, [sp, #72]
  401990:	str	wzr, [sp, #68]
  401994:	ldr	w0, [sp, #68]
  401998:	bl	400e50 <log_get_max_level_realm@plt>
  40199c:	ldr	w8, [sp, #76]
  4019a0:	and	w8, w8, #0x7
  4019a4:	cmp	w0, w8
  4019a8:	b.lt	4019e0 <verify_source_vc+0x218>  // b.tstop
  4019ac:	ldr	w8, [sp, #68]
  4019b0:	ldr	w9, [sp, #76]
  4019b4:	orr	w0, w9, w8, lsl #10
  4019b8:	ldr	w1, [sp, #72]
  4019bc:	ldur	x6, [x29, #-24]
  4019c0:	ldr	x2, [sp, #32]
  4019c4:	mov	w3, #0x18f                 	// #399
  4019c8:	ldr	x4, [sp, #24]
  4019cc:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  4019d0:	add	x5, x5, #0xc5c
  4019d4:	bl	400e60 <log_internal_realm@plt>
  4019d8:	str	w0, [sp, #12]
  4019dc:	b	4019f4 <verify_source_vc+0x22c>
  4019e0:	ldr	w0, [sp, #72]
  4019e4:	bl	400e70 <abs@plt>
  4019e8:	mov	w8, wzr
  4019ec:	subs	w8, w8, w0, uxtb
  4019f0:	str	w8, [sp, #12]
  4019f4:	ldr	w8, [sp, #12]
  4019f8:	str	w8, [sp, #64]
  4019fc:	ldr	w8, [sp, #64]
  401a00:	stur	w8, [x29, #-4]
  401a04:	mov	w8, #0x1                   	// #1
  401a08:	stur	w8, [x29, #-64]
  401a0c:	b	401b2c <verify_source_vc+0x364>
  401a10:	ldur	w0, [x29, #-28]
  401a14:	bl	4035a0 <verify_vc_kbmode>
  401a18:	stur	w0, [x29, #-44]
  401a1c:	ldur	w8, [x29, #-44]
  401a20:	cmp	w8, #0x0
  401a24:	cset	w8, ge  // ge = tcont
  401a28:	tbnz	w8, #0, 401abc <verify_source_vc+0x2f4>
  401a2c:	mov	w8, #0x3                   	// #3
  401a30:	str	w8, [sp, #60]
  401a34:	ldur	w8, [x29, #-44]
  401a38:	str	w8, [sp, #56]
  401a3c:	str	wzr, [sp, #52]
  401a40:	ldr	w0, [sp, #52]
  401a44:	bl	400e50 <log_get_max_level_realm@plt>
  401a48:	ldr	w8, [sp, #60]
  401a4c:	and	w8, w8, #0x7
  401a50:	cmp	w0, w8
  401a54:	b.lt	401a8c <verify_source_vc+0x2c4>  // b.tstop
  401a58:	ldr	w8, [sp, #52]
  401a5c:	ldr	w9, [sp, #60]
  401a60:	orr	w0, w9, w8, lsl #10
  401a64:	ldr	w1, [sp, #56]
  401a68:	ldur	x6, [x29, #-24]
  401a6c:	ldr	x2, [sp, #32]
  401a70:	mov	w3, #0x193                 	// #403
  401a74:	ldr	x4, [sp, #24]
  401a78:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401a7c:	add	x5, x5, #0xc84
  401a80:	bl	400e60 <log_internal_realm@plt>
  401a84:	str	w0, [sp, #8]
  401a88:	b	401aa0 <verify_source_vc+0x2d8>
  401a8c:	ldr	w0, [sp, #56]
  401a90:	bl	400e70 <abs@plt>
  401a94:	mov	w8, wzr
  401a98:	subs	w8, w8, w0, uxtb
  401a9c:	str	w8, [sp, #8]
  401aa0:	ldr	w8, [sp, #8]
  401aa4:	str	w8, [sp, #48]
  401aa8:	ldr	w8, [sp, #48]
  401aac:	stur	w8, [x29, #-4]
  401ab0:	mov	w8, #0x1                   	// #1
  401ab4:	stur	w8, [x29, #-64]
  401ab8:	b	401b2c <verify_source_vc+0x364>
  401abc:	ldur	x0, [x29, #-24]
  401ac0:	bl	400ec0 <strdup@plt>
  401ac4:	stur	x0, [x29, #-40]
  401ac8:	ldur	x8, [x29, #-40]
  401acc:	cbnz	x8, 401af8 <verify_source_vc+0x330>
  401ad0:	mov	w8, wzr
  401ad4:	mov	w0, w8
  401ad8:	ldr	x1, [sp, #32]
  401adc:	mov	w2, #0x197                 	// #407
  401ae0:	ldr	x3, [sp, #24]
  401ae4:	bl	400ed0 <log_oom_internal@plt>
  401ae8:	stur	w0, [x29, #-4]
  401aec:	mov	w8, #0x1                   	// #1
  401af0:	stur	w8, [x29, #-64]
  401af4:	b	401b2c <verify_source_vc+0x364>
  401af8:	ldur	x8, [x29, #-40]
  401afc:	ldur	x9, [x29, #-16]
  401b00:	str	x8, [x9]
  401b04:	ldur	w10, [x29, #-28]
  401b08:	str	w10, [sp, #44]
  401b0c:	mov	w10, #0xffffffff            	// #-1
  401b10:	stur	w10, [x29, #-28]
  401b14:	ldr	w10, [sp, #44]
  401b18:	str	w10, [sp, #40]
  401b1c:	ldr	w10, [sp, #40]
  401b20:	stur	w10, [x29, #-4]
  401b24:	mov	w10, #0x1                   	// #1
  401b28:	stur	w10, [x29, #-64]
  401b2c:	sub	x0, x29, #0x1c
  401b30:	bl	4017a0 <closep>
  401b34:	ldur	w0, [x29, #-4]
  401b38:	ldp	x29, x30, [sp, #160]
  401b3c:	add	sp, sp, #0xb0
  401b40:	ret

0000000000401b44 <find_source_vc>:
  401b44:	sub	sp, sp, #0x80
  401b48:	stp	x29, x30, [sp, #112]
  401b4c:	add	x29, sp, #0x70
  401b50:	mov	x8, xzr
  401b54:	mov	x9, #0x1                   	// #1
  401b58:	mov	x10, #0xb                   	// #11
  401b5c:	adrp	x11, 403000 <setup_remaining_vcs+0x4d8>
  401b60:	add	x11, x11, #0xa92
  401b64:	add	x11, x11, #0x3
  401b68:	stur	x0, [x29, #-16]
  401b6c:	stur	x1, [x29, #-24]
  401b70:	stur	x8, [x29, #-32]
  401b74:	stur	wzr, [x29, #-40]
  401b78:	mov	x0, x9
  401b7c:	mov	x1, x10
  401b80:	str	x11, [sp, #8]
  401b84:	bl	40372c <malloc_multiply>
  401b88:	stur	x0, [x29, #-32]
  401b8c:	ldur	x8, [x29, #-32]
  401b90:	cbnz	x8, 401bc0 <find_source_vc+0x7c>
  401b94:	mov	w8, wzr
  401b98:	mov	w0, w8
  401b9c:	ldr	x1, [sp, #8]
  401ba0:	mov	w2, #0x15d                 	// #349
  401ba4:	adrp	x3, 403000 <setup_remaining_vcs+0x4d8>
  401ba8:	add	x3, x3, #0xd12
  401bac:	bl	400ed0 <log_oom_internal@plt>
  401bb0:	stur	w0, [x29, #-4]
  401bb4:	mov	w8, #0x1                   	// #1
  401bb8:	stur	w8, [x29, #-48]
  401bbc:	b	401dd0 <find_source_vc+0x28c>
  401bc0:	mov	w8, #0x1                   	// #1
  401bc4:	stur	w8, [x29, #-44]
  401bc8:	ldur	w8, [x29, #-44]
  401bcc:	cmp	w8, #0x3f
  401bd0:	b.hi	401d44 <find_source_vc+0x200>  // b.pmore
  401bd4:	mov	w8, #0xffffffff            	// #-1
  401bd8:	stur	w8, [x29, #-52]
  401bdc:	ldur	w0, [x29, #-44]
  401be0:	bl	403658 <verify_vc_allocation>
  401be4:	stur	w0, [x29, #-36]
  401be8:	ldur	w8, [x29, #-36]
  401bec:	cmp	w8, #0x0
  401bf0:	cset	w8, ge  // ge = tcont
  401bf4:	tbnz	w8, #0, 401c1c <find_source_vc+0xd8>
  401bf8:	ldur	w8, [x29, #-40]
  401bfc:	cbnz	w8, 401c10 <find_source_vc+0xcc>
  401c00:	ldur	w8, [x29, #-36]
  401c04:	mov	w9, wzr
  401c08:	subs	w8, w9, w8
  401c0c:	stur	w8, [x29, #-40]
  401c10:	mov	w8, #0x4                   	// #4
  401c14:	stur	w8, [x29, #-48]
  401c18:	b	401d14 <find_source_vc+0x1d0>
  401c1c:	ldur	x0, [x29, #-32]
  401c20:	ldur	w2, [x29, #-44]
  401c24:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  401c28:	add	x1, x1, #0xd21
  401c2c:	bl	400ee0 <sprintf@plt>
  401c30:	ldur	x8, [x29, #-32]
  401c34:	mov	x0, x8
  401c38:	mov	w1, #0x102                 	// #258
  401c3c:	movk	w1, #0x8, lsl #16
  401c40:	bl	400eb0 <open_terminal@plt>
  401c44:	stur	w0, [x29, #-52]
  401c48:	ldur	w9, [x29, #-52]
  401c4c:	cmp	w9, #0x0
  401c50:	cset	w9, ge  // ge = tcont
  401c54:	tbnz	w9, #0, 401c7c <find_source_vc+0x138>
  401c58:	ldur	w8, [x29, #-40]
  401c5c:	cbnz	w8, 401c70 <find_source_vc+0x12c>
  401c60:	ldur	w8, [x29, #-52]
  401c64:	mov	w9, wzr
  401c68:	subs	w8, w9, w8
  401c6c:	stur	w8, [x29, #-40]
  401c70:	mov	w8, #0x4                   	// #4
  401c74:	stur	w8, [x29, #-48]
  401c78:	b	401d14 <find_source_vc+0x1d0>
  401c7c:	ldur	w0, [x29, #-52]
  401c80:	bl	4035a0 <verify_vc_kbmode>
  401c84:	stur	w0, [x29, #-36]
  401c88:	ldur	w8, [x29, #-36]
  401c8c:	cmp	w8, #0x0
  401c90:	cset	w8, ge  // ge = tcont
  401c94:	tbnz	w8, #0, 401cbc <find_source_vc+0x178>
  401c98:	ldur	w8, [x29, #-40]
  401c9c:	cbnz	w8, 401cb0 <find_source_vc+0x16c>
  401ca0:	ldur	w8, [x29, #-36]
  401ca4:	mov	w9, wzr
  401ca8:	subs	w8, w9, w8
  401cac:	stur	w8, [x29, #-40]
  401cb0:	mov	w8, #0x4                   	// #4
  401cb4:	stur	w8, [x29, #-48]
  401cb8:	b	401d14 <find_source_vc+0x1d0>
  401cbc:	ldur	w8, [x29, #-44]
  401cc0:	ldur	x9, [x29, #-24]
  401cc4:	str	w8, [x9]
  401cc8:	ldur	x9, [x29, #-32]
  401ccc:	str	x9, [sp, #48]
  401cd0:	mov	x9, xzr
  401cd4:	stur	x9, [x29, #-32]
  401cd8:	ldr	x9, [sp, #48]
  401cdc:	str	x9, [sp, #40]
  401ce0:	ldr	x9, [sp, #40]
  401ce4:	ldur	x10, [x29, #-16]
  401ce8:	str	x9, [x10]
  401cec:	ldur	w8, [x29, #-52]
  401cf0:	str	w8, [sp, #36]
  401cf4:	mov	w8, #0xffffffff            	// #-1
  401cf8:	stur	w8, [x29, #-52]
  401cfc:	ldr	w8, [sp, #36]
  401d00:	str	w8, [sp, #32]
  401d04:	ldr	w8, [sp, #32]
  401d08:	stur	w8, [x29, #-4]
  401d0c:	mov	w8, #0x1                   	// #1
  401d10:	stur	w8, [x29, #-48]
  401d14:	sub	x0, x29, #0x34
  401d18:	bl	4017a0 <closep>
  401d1c:	ldur	w8, [x29, #-48]
  401d20:	cmp	w8, #0x4
  401d24:	cset	w8, eq  // eq = none
  401d28:	eor	w8, w8, #0x1
  401d2c:	tbnz	w8, #0, 401dd0 <find_source_vc+0x28c>
  401d30:	b	401d34 <find_source_vc+0x1f0>
  401d34:	ldur	w8, [x29, #-44]
  401d38:	add	w8, w8, #0x1
  401d3c:	stur	w8, [x29, #-44]
  401d40:	b	401bc8 <find_source_vc+0x84>
  401d44:	mov	w8, #0x3                   	// #3
  401d48:	str	w8, [sp, #28]
  401d4c:	ldur	w8, [x29, #-40]
  401d50:	str	w8, [sp, #24]
  401d54:	str	wzr, [sp, #20]
  401d58:	ldr	w0, [sp, #20]
  401d5c:	bl	400e50 <log_get_max_level_realm@plt>
  401d60:	ldr	w8, [sp, #28]
  401d64:	and	w8, w8, #0x7
  401d68:	cmp	w0, w8
  401d6c:	b.lt	401da4 <find_source_vc+0x260>  // b.tstop
  401d70:	ldr	w8, [sp, #20]
  401d74:	ldr	w9, [sp, #28]
  401d78:	orr	w0, w9, w8, lsl #10
  401d7c:	ldr	w1, [sp, #24]
  401d80:	ldr	x2, [sp, #8]
  401d84:	mov	w3, #0x17d                 	// #381
  401d88:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  401d8c:	add	x4, x4, #0xd12
  401d90:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401d94:	add	x5, x5, #0xd2c
  401d98:	bl	400e60 <log_internal_realm@plt>
  401d9c:	str	w0, [sp, #4]
  401da0:	b	401db8 <find_source_vc+0x274>
  401da4:	ldr	w0, [sp, #24]
  401da8:	bl	400e70 <abs@plt>
  401dac:	mov	w8, wzr
  401db0:	subs	w8, w8, w0, uxtb
  401db4:	str	w8, [sp, #4]
  401db8:	ldr	w8, [sp, #4]
  401dbc:	str	w8, [sp, #16]
  401dc0:	ldr	w8, [sp, #16]
  401dc4:	stur	w8, [x29, #-4]
  401dc8:	mov	w8, #0x1                   	// #1
  401dcc:	stur	w8, [x29, #-48]
  401dd0:	sub	x0, x29, #0x20
  401dd4:	bl	401778 <freep>
  401dd8:	ldur	w0, [x29, #-4]
  401ddc:	ldp	x29, x30, [sp, #112]
  401de0:	add	sp, sp, #0x80
  401de4:	ret

0000000000401de8 <toggle_utf8_sysfs>:
  401de8:	sub	sp, sp, #0x90
  401dec:	stp	x29, x30, [sp, #128]
  401df0:	add	x29, sp, #0x80
  401df4:	adrp	x8, 403000 <setup_remaining_vcs+0x4d8>
  401df8:	add	x8, x8, #0xd4f
  401dfc:	mov	w2, #0x20                  	// #32
  401e00:	adrp	x9, 403000 <setup_remaining_vcs+0x4d8>
  401e04:	add	x9, x9, #0xa92
  401e08:	add	x9, x9, #0x3
  401e0c:	mov	w10, #0x1                   	// #1
  401e10:	and	w10, w0, w10
  401e14:	sturb	w10, [x29, #-5]
  401e18:	ldurb	w10, [x29, #-5]
  401e1c:	and	w0, w10, #0x1
  401e20:	stur	x8, [x29, #-56]
  401e24:	stur	w2, [x29, #-60]
  401e28:	str	x9, [sp, #56]
  401e2c:	bl	40384c <one_zero>
  401e30:	ldur	x8, [x29, #-56]
  401e34:	str	x0, [sp, #48]
  401e38:	mov	x0, x8
  401e3c:	ldr	x1, [sp, #48]
  401e40:	ldur	w2, [x29, #-60]
  401e44:	bl	403810 <write_string_file>
  401e48:	stur	w0, [x29, #-12]
  401e4c:	ldur	w10, [x29, #-12]
  401e50:	cmp	w10, #0x0
  401e54:	cset	w10, ge  // ge = tcont
  401e58:	tbnz	w10, #0, 401f10 <toggle_utf8_sysfs+0x128>
  401e5c:	mov	w8, #0x4                   	// #4
  401e60:	stur	w8, [x29, #-16]
  401e64:	ldur	w8, [x29, #-12]
  401e68:	stur	w8, [x29, #-20]
  401e6c:	stur	wzr, [x29, #-24]
  401e70:	ldur	w0, [x29, #-24]
  401e74:	bl	400e50 <log_get_max_level_realm@plt>
  401e78:	ldur	w8, [x29, #-16]
  401e7c:	and	w8, w8, #0x7
  401e80:	cmp	w0, w8
  401e84:	b.lt	401ee8 <toggle_utf8_sysfs+0x100>  // b.tstop
  401e88:	ldur	w8, [x29, #-24]
  401e8c:	ldur	w9, [x29, #-16]
  401e90:	orr	w0, w9, w8, lsl #10
  401e94:	ldur	w1, [x29, #-20]
  401e98:	ldurb	w8, [x29, #-5]
  401e9c:	and	w8, w8, #0x1
  401ea0:	str	w0, [sp, #44]
  401ea4:	mov	w0, w8
  401ea8:	str	w1, [sp, #40]
  401eac:	bl	40387c <enable_disable>
  401eb0:	ldr	w8, [sp, #44]
  401eb4:	str	x0, [sp, #32]
  401eb8:	mov	w0, w8
  401ebc:	ldr	w1, [sp, #40]
  401ec0:	ldr	x2, [sp, #56]
  401ec4:	mov	w3, #0x79                  	// #121
  401ec8:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  401ecc:	add	x4, x4, #0xd76
  401ed0:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401ed4:	add	x5, x5, #0xd88
  401ed8:	ldr	x6, [sp, #32]
  401edc:	bl	400e60 <log_internal_realm@plt>
  401ee0:	str	w0, [sp, #28]
  401ee4:	b	401efc <toggle_utf8_sysfs+0x114>
  401ee8:	ldur	w0, [x29, #-20]
  401eec:	bl	400e70 <abs@plt>
  401ef0:	mov	w8, wzr
  401ef4:	subs	w8, w8, w0, uxtb
  401ef8:	str	w8, [sp, #28]
  401efc:	ldr	w8, [sp, #28]
  401f00:	stur	w8, [x29, #-28]
  401f04:	ldur	w8, [x29, #-28]
  401f08:	stur	w8, [x29, #-4]
  401f0c:	b	401fb8 <toggle_utf8_sysfs+0x1d0>
  401f10:	mov	w8, #0x7                   	// #7
  401f14:	stur	w8, [x29, #-32]
  401f18:	stur	wzr, [x29, #-36]
  401f1c:	stur	wzr, [x29, #-40]
  401f20:	ldur	w0, [x29, #-40]
  401f24:	bl	400e50 <log_get_max_level_realm@plt>
  401f28:	ldur	w8, [x29, #-32]
  401f2c:	and	w8, w8, #0x7
  401f30:	cmp	w0, w8
  401f34:	b.lt	401f98 <toggle_utf8_sysfs+0x1b0>  // b.tstop
  401f38:	ldur	w8, [x29, #-40]
  401f3c:	ldur	w9, [x29, #-32]
  401f40:	orr	w0, w9, w8, lsl #10
  401f44:	ldur	w1, [x29, #-36]
  401f48:	ldurb	w8, [x29, #-5]
  401f4c:	and	w8, w8, #0x1
  401f50:	str	w0, [sp, #24]
  401f54:	mov	w0, w8
  401f58:	str	w1, [sp, #20]
  401f5c:	bl	40387c <enable_disable>
  401f60:	ldr	w8, [sp, #24]
  401f64:	str	x0, [sp, #8]
  401f68:	mov	w0, w8
  401f6c:	ldr	w1, [sp, #20]
  401f70:	ldr	x2, [sp, #56]
  401f74:	mov	w3, #0x7b                  	// #123
  401f78:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  401f7c:	add	x4, x4, #0xd76
  401f80:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  401f84:	add	x5, x5, #0xdaa
  401f88:	ldr	x6, [sp, #8]
  401f8c:	bl	400e60 <log_internal_realm@plt>
  401f90:	str	w0, [sp, #4]
  401f94:	b	401fac <toggle_utf8_sysfs+0x1c4>
  401f98:	ldur	w0, [x29, #-36]
  401f9c:	bl	400e70 <abs@plt>
  401fa0:	mov	w8, wzr
  401fa4:	subs	w8, w8, w0, uxtb
  401fa8:	str	w8, [sp, #4]
  401fac:	ldr	w8, [sp, #4]
  401fb0:	stur	w8, [x29, #-44]
  401fb4:	stur	wzr, [x29, #-4]
  401fb8:	ldur	w0, [x29, #-4]
  401fbc:	ldp	x29, x30, [sp, #128]
  401fc0:	add	sp, sp, #0x90
  401fc4:	ret

0000000000401fc8 <toggle_utf8_vc>:
  401fc8:	sub	sp, sp, #0x130
  401fcc:	stp	x29, x30, [sp, #272]
  401fd0:	str	x28, [sp, #288]
  401fd4:	add	x29, sp, #0x110
  401fd8:	mov	x8, #0x3c                  	// #60
  401fdc:	mov	w9, wzr
  401fe0:	mov	w10, #0x1                   	// #1
  401fe4:	adrp	x11, 403000 <setup_remaining_vcs+0x4d8>
  401fe8:	add	x11, x11, #0xa92
  401fec:	add	x11, x11, #0x3
  401ff0:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  401ff4:	add	x12, x12, #0xe0c
  401ff8:	sub	x13, x29, #0x58
  401ffc:	stur	x0, [x29, #-16]
  402000:	stur	w1, [x29, #-20]
  402004:	and	w10, w2, w10
  402008:	sturb	w10, [x29, #-21]
  40200c:	mov	x0, x13
  402010:	mov	w1, w9
  402014:	mov	x2, x8
  402018:	str	x11, [sp, #112]
  40201c:	str	x12, [sp, #104]
  402020:	bl	400ef0 <memset@plt>
  402024:	ldur	x8, [x29, #-16]
  402028:	cmp	x8, #0x0
  40202c:	cset	w9, ne  // ne = any
  402030:	mov	w10, #0x1                   	// #1
  402034:	eor	w9, w9, #0x1
  402038:	eor	w9, w9, w10
  40203c:	eor	w9, w9, w10
  402040:	and	w9, w9, #0x1
  402044:	mov	w0, w9
  402048:	sxtw	x8, w0
  40204c:	cbz	x8, 402074 <toggle_utf8_vc+0xac>
  402050:	mov	w8, wzr
  402054:	mov	w0, w8
  402058:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  40205c:	add	x1, x1, #0xdd2
  402060:	ldr	x2, [sp, #112]
  402064:	mov	w3, #0x5d                  	// #93
  402068:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  40206c:	add	x4, x4, #0xdd7
  402070:	bl	400f00 <log_assert_failed_realm@plt>
  402074:	ldur	w8, [x29, #-20]
  402078:	cmp	w8, #0x0
  40207c:	cset	w8, ge  // ge = tcont
  402080:	mov	w9, #0x1                   	// #1
  402084:	eor	w8, w8, #0x1
  402088:	eor	w8, w8, w9
  40208c:	eor	w8, w8, w9
  402090:	and	w8, w8, #0x1
  402094:	mov	w0, w8
  402098:	sxtw	x10, w0
  40209c:	cbz	x10, 4020c4 <toggle_utf8_vc+0xfc>
  4020a0:	mov	w8, wzr
  4020a4:	mov	w0, w8
  4020a8:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  4020ac:	add	x1, x1, #0xe04
  4020b0:	ldr	x2, [sp, #112]
  4020b4:	mov	w3, #0x5e                  	// #94
  4020b8:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  4020bc:	add	x4, x4, #0xdd7
  4020c0:	bl	400f00 <log_assert_failed_realm@plt>
  4020c4:	ldur	w0, [x29, #-20]
  4020c8:	ldurb	w8, [x29, #-21]
  4020cc:	mov	w9, #0x1                   	// #1
  4020d0:	mov	w10, #0x3                   	// #3
  4020d4:	tst	w8, #0x1
  4020d8:	csel	w2, w10, w9, ne  // ne = any
  4020dc:	mov	x1, #0x4b45                	// #19269
  4020e0:	bl	400f10 <ioctl@plt>
  4020e4:	stur	w0, [x29, #-28]
  4020e8:	ldur	w8, [x29, #-28]
  4020ec:	cmp	w8, #0x0
  4020f0:	cset	w8, ge  // ge = tcont
  4020f4:	tbnz	w8, #0, 4021b0 <toggle_utf8_vc+0x1e8>
  4020f8:	mov	w8, #0x4                   	// #4
  4020fc:	stur	w8, [x29, #-92]
  402100:	bl	400f20 <__errno_location@plt>
  402104:	ldr	w8, [x0]
  402108:	stur	w8, [x29, #-96]
  40210c:	stur	wzr, [x29, #-100]
  402110:	ldur	w0, [x29, #-100]
  402114:	bl	400e50 <log_get_max_level_realm@plt>
  402118:	ldur	w8, [x29, #-92]
  40211c:	and	w8, w8, #0x7
  402120:	cmp	w0, w8
  402124:	b.lt	402188 <toggle_utf8_vc+0x1c0>  // b.tstop
  402128:	ldur	w8, [x29, #-100]
  40212c:	ldur	w9, [x29, #-92]
  402130:	orr	w0, w9, w8, lsl #10
  402134:	ldur	w1, [x29, #-96]
  402138:	ldurb	w8, [x29, #-21]
  40213c:	and	w8, w8, #0x1
  402140:	str	w0, [sp, #100]
  402144:	mov	w0, w8
  402148:	str	w1, [sp, #96]
  40214c:	bl	40387c <enable_disable>
  402150:	ldur	x7, [x29, #-16]
  402154:	ldr	w8, [sp, #100]
  402158:	str	x0, [sp, #88]
  40215c:	mov	w0, w8
  402160:	ldr	w1, [sp, #96]
  402164:	ldr	x2, [sp, #112]
  402168:	mov	w3, #0x62                  	// #98
  40216c:	ldr	x4, [sp, #104]
  402170:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  402174:	add	x5, x5, #0xe1b
  402178:	ldr	x6, [sp, #88]
  40217c:	bl	400e60 <log_internal_realm@plt>
  402180:	str	w0, [sp, #84]
  402184:	b	40219c <toggle_utf8_vc+0x1d4>
  402188:	ldur	w0, [x29, #-96]
  40218c:	bl	400e70 <abs@plt>
  402190:	mov	w8, wzr
  402194:	subs	w8, w8, w0, uxtb
  402198:	str	w8, [sp, #84]
  40219c:	ldr	w8, [sp, #84]
  4021a0:	stur	w8, [x29, #-104]
  4021a4:	ldur	w8, [x29, #-104]
  4021a8:	stur	w8, [x29, #-4]
  4021ac:	b	402480 <toggle_utf8_vc+0x4b8>
  4021b0:	ldur	w0, [x29, #-20]
  4021b4:	ldurb	w8, [x29, #-21]
  4021b8:	adrp	x9, 403000 <setup_remaining_vcs+0x4d8>
  4021bc:	add	x9, x9, #0xe44
  4021c0:	adrp	x10, 403000 <setup_remaining_vcs+0x4d8>
  4021c4:	add	x10, x10, #0xe40
  4021c8:	tst	w8, #0x1
  4021cc:	csel	x1, x10, x9, ne  // ne = any
  4021d0:	mov	x2, #0x3                   	// #3
  4021d4:	mov	w8, wzr
  4021d8:	and	w3, w8, #0x1
  4021dc:	bl	400f30 <loop_write@plt>
  4021e0:	stur	w0, [x29, #-28]
  4021e4:	ldur	w8, [x29, #-28]
  4021e8:	cmp	w8, #0x0
  4021ec:	cset	w8, ge  // ge = tcont
  4021f0:	tbnz	w8, #0, 4022a8 <toggle_utf8_vc+0x2e0>
  4021f4:	mov	w8, #0x4                   	// #4
  4021f8:	stur	w8, [x29, #-108]
  4021fc:	ldur	w8, [x29, #-28]
  402200:	stur	w8, [x29, #-112]
  402204:	stur	wzr, [x29, #-116]
  402208:	ldur	w0, [x29, #-116]
  40220c:	bl	400e50 <log_get_max_level_realm@plt>
  402210:	ldur	w8, [x29, #-108]
  402214:	and	w8, w8, #0x7
  402218:	cmp	w0, w8
  40221c:	b.lt	402280 <toggle_utf8_vc+0x2b8>  // b.tstop
  402220:	ldur	w8, [x29, #-116]
  402224:	ldur	w9, [x29, #-108]
  402228:	orr	w0, w9, w8, lsl #10
  40222c:	ldur	w1, [x29, #-112]
  402230:	ldurb	w8, [x29, #-21]
  402234:	and	w8, w8, #0x1
  402238:	str	w0, [sp, #80]
  40223c:	mov	w0, w8
  402240:	str	w1, [sp, #76]
  402244:	bl	40387c <enable_disable>
  402248:	ldur	x7, [x29, #-16]
  40224c:	ldr	w8, [sp, #80]
  402250:	str	x0, [sp, #64]
  402254:	mov	w0, w8
  402258:	ldr	w1, [sp, #76]
  40225c:	ldr	x2, [sp, #112]
  402260:	mov	w3, #0x66                  	// #102
  402264:	ldr	x4, [sp, #104]
  402268:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  40226c:	add	x5, x5, #0xe48
  402270:	ldr	x6, [sp, #64]
  402274:	bl	400e60 <log_internal_realm@plt>
  402278:	str	w0, [sp, #60]
  40227c:	b	402294 <toggle_utf8_vc+0x2cc>
  402280:	ldur	w0, [x29, #-112]
  402284:	bl	400e70 <abs@plt>
  402288:	mov	w8, wzr
  40228c:	subs	w8, w8, w0, uxtb
  402290:	str	w8, [sp, #60]
  402294:	ldr	w8, [sp, #60]
  402298:	stur	w8, [x29, #-120]
  40229c:	ldur	w8, [x29, #-120]
  4022a0:	stur	w8, [x29, #-4]
  4022a4:	b	402480 <toggle_utf8_vc+0x4b8>
  4022a8:	ldur	w0, [x29, #-20]
  4022ac:	sub	x1, x29, #0x58
  4022b0:	bl	400f40 <tcgetattr@plt>
  4022b4:	stur	w0, [x29, #-28]
  4022b8:	ldur	w8, [x29, #-28]
  4022bc:	cmp	w8, #0x0
  4022c0:	cset	w8, lt  // lt = tstop
  4022c4:	tbnz	w8, #0, 402310 <toggle_utf8_vc+0x348>
  4022c8:	ldurb	w8, [x29, #-21]
  4022cc:	tbnz	w8, #0, 4022d4 <toggle_utf8_vc+0x30c>
  4022d0:	b	4022e4 <toggle_utf8_vc+0x31c>
  4022d4:	ldur	w8, [x29, #-88]
  4022d8:	orr	w8, w8, #0x4000
  4022dc:	str	w8, [sp, #56]
  4022e0:	b	4022f0 <toggle_utf8_vc+0x328>
  4022e4:	ldur	w8, [x29, #-88]
  4022e8:	and	w8, w8, #0xffffbfff
  4022ec:	str	w8, [sp, #56]
  4022f0:	ldr	w8, [sp, #56]
  4022f4:	sub	x2, x29, #0x58
  4022f8:	stur	w8, [x29, #-88]
  4022fc:	ldur	w0, [x29, #-20]
  402300:	mov	w8, wzr
  402304:	mov	w1, w8
  402308:	bl	400f50 <tcsetattr@plt>
  40230c:	stur	w0, [x29, #-28]
  402310:	ldur	w8, [x29, #-28]
  402314:	cmp	w8, #0x0
  402318:	cset	w8, ge  // ge = tcont
  40231c:	tbnz	w8, #0, 4023d8 <toggle_utf8_vc+0x410>
  402320:	mov	w8, #0x4                   	// #4
  402324:	stur	w8, [x29, #-124]
  402328:	bl	400f20 <__errno_location@plt>
  40232c:	ldr	w8, [x0]
  402330:	stur	w8, [x29, #-128]
  402334:	stur	wzr, [x29, #-132]
  402338:	ldur	w0, [x29, #-132]
  40233c:	bl	400e50 <log_get_max_level_realm@plt>
  402340:	ldur	w8, [x29, #-124]
  402344:	and	w8, w8, #0x7
  402348:	cmp	w0, w8
  40234c:	b.lt	4023b0 <toggle_utf8_vc+0x3e8>  // b.tstop
  402350:	ldur	w8, [x29, #-132]
  402354:	ldur	w9, [x29, #-124]
  402358:	orr	w0, w9, w8, lsl #10
  40235c:	ldur	w1, [x29, #-128]
  402360:	ldurb	w8, [x29, #-21]
  402364:	and	w8, w8, #0x1
  402368:	str	w0, [sp, #52]
  40236c:	mov	w0, w8
  402370:	str	w1, [sp, #48]
  402374:	bl	40387c <enable_disable>
  402378:	ldur	x7, [x29, #-16]
  40237c:	ldr	w8, [sp, #52]
  402380:	str	x0, [sp, #40]
  402384:	mov	w0, w8
  402388:	ldr	w1, [sp, #48]
  40238c:	ldr	x2, [sp, #112]
  402390:	mov	w3, #0x6e                  	// #110
  402394:	ldr	x4, [sp, #104]
  402398:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  40239c:	add	x5, x5, #0xe75
  4023a0:	ldr	x6, [sp, #40]
  4023a4:	bl	400e60 <log_internal_realm@plt>
  4023a8:	str	w0, [sp, #36]
  4023ac:	b	4023c4 <toggle_utf8_vc+0x3fc>
  4023b0:	ldur	w0, [x29, #-128]
  4023b4:	bl	400e70 <abs@plt>
  4023b8:	mov	w8, wzr
  4023bc:	subs	w8, w8, w0, uxtb
  4023c0:	str	w8, [sp, #36]
  4023c4:	ldr	w8, [sp, #36]
  4023c8:	str	w8, [sp, #136]
  4023cc:	ldr	w8, [sp, #136]
  4023d0:	stur	w8, [x29, #-4]
  4023d4:	b	402480 <toggle_utf8_vc+0x4b8>
  4023d8:	mov	w8, #0x7                   	// #7
  4023dc:	str	w8, [sp, #132]
  4023e0:	str	wzr, [sp, #128]
  4023e4:	str	wzr, [sp, #124]
  4023e8:	ldr	w0, [sp, #124]
  4023ec:	bl	400e50 <log_get_max_level_realm@plt>
  4023f0:	ldr	w8, [sp, #132]
  4023f4:	and	w8, w8, #0x7
  4023f8:	cmp	w0, w8
  4023fc:	b.lt	402460 <toggle_utf8_vc+0x498>  // b.tstop
  402400:	ldr	w8, [sp, #124]
  402404:	ldr	w9, [sp, #132]
  402408:	orr	w0, w9, w8, lsl #10
  40240c:	ldr	w1, [sp, #128]
  402410:	ldurb	w8, [x29, #-21]
  402414:	and	w8, w8, #0x1
  402418:	str	w0, [sp, #32]
  40241c:	mov	w0, w8
  402420:	str	w1, [sp, #28]
  402424:	bl	40387c <enable_disable>
  402428:	ldur	x7, [x29, #-16]
  40242c:	ldr	w8, [sp, #32]
  402430:	str	x0, [sp, #16]
  402434:	mov	w0, w8
  402438:	ldr	w1, [sp, #28]
  40243c:	ldr	x2, [sp, #112]
  402440:	mov	w3, #0x70                  	// #112
  402444:	ldr	x4, [sp, #104]
  402448:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  40244c:	add	x5, x5, #0xe97
  402450:	ldr	x6, [sp, #16]
  402454:	bl	400e60 <log_internal_realm@plt>
  402458:	str	w0, [sp, #12]
  40245c:	b	402474 <toggle_utf8_vc+0x4ac>
  402460:	ldr	w0, [sp, #128]
  402464:	bl	400e70 <abs@plt>
  402468:	mov	w8, wzr
  40246c:	subs	w8, w8, w0, uxtb
  402470:	str	w8, [sp, #12]
  402474:	ldr	w8, [sp, #12]
  402478:	str	w8, [sp, #120]
  40247c:	stur	wzr, [x29, #-4]
  402480:	ldur	w0, [x29, #-4]
  402484:	ldr	x28, [sp, #288]
  402488:	ldp	x29, x30, [sp, #272]
  40248c:	add	sp, sp, #0x130
  402490:	ret

0000000000402494 <font_load_and_wait>:
  402494:	sub	sp, sp, #0xd0
  402498:	stp	x29, x30, [sp, #192]
  40249c:	add	x29, sp, #0xc0
  4024a0:	adrp	x8, 403000 <setup_remaining_vcs+0x4d8>
  4024a4:	add	x8, x8, #0xa92
  4024a8:	add	x8, x8, #0x3
  4024ac:	stur	x0, [x29, #-16]
  4024b0:	stur	x1, [x29, #-24]
  4024b4:	stur	x2, [x29, #-32]
  4024b8:	stur	x3, [x29, #-40]
  4024bc:	str	wzr, [sp, #76]
  4024c0:	ldur	x0, [x29, #-24]
  4024c4:	str	x8, [sp, #32]
  4024c8:	bl	4038ac <isempty>
  4024cc:	tbnz	w0, #0, 4024d4 <font_load_and_wait+0x40>
  4024d0:	b	4024fc <font_load_and_wait+0x68>
  4024d4:	ldur	x0, [x29, #-32]
  4024d8:	bl	4038ac <isempty>
  4024dc:	tbnz	w0, #0, 4024e4 <font_load_and_wait+0x50>
  4024e0:	b	4024fc <font_load_and_wait+0x68>
  4024e4:	ldur	x0, [x29, #-40]
  4024e8:	bl	4038ac <isempty>
  4024ec:	tbnz	w0, #0, 4024f4 <font_load_and_wait+0x60>
  4024f0:	b	4024fc <font_load_and_wait+0x68>
  4024f4:	stur	wzr, [x29, #-4]
  4024f8:	b	4027f4 <font_load_and_wait+0x360>
  4024fc:	ldr	w8, [sp, #76]
  402500:	mov	w9, w8
  402504:	mov	w8, w9
  402508:	add	w8, w8, #0x1
  40250c:	str	w8, [sp, #76]
  402510:	mov	x10, #0x8                   	// #8
  402514:	mul	x9, x10, x9
  402518:	add	x11, sp, #0x50
  40251c:	add	x9, x11, x9
  402520:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  402524:	add	x12, x12, #0xeaf
  402528:	str	x12, [x9]
  40252c:	ldr	w8, [sp, #76]
  402530:	mov	w9, w8
  402534:	mov	w8, w9
  402538:	add	w8, w8, #0x1
  40253c:	str	w8, [sp, #76]
  402540:	mul	x9, x10, x9
  402544:	add	x9, x11, x9
  402548:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  40254c:	add	x12, x12, #0xec0
  402550:	str	x12, [x9]
  402554:	ldur	x9, [x29, #-16]
  402558:	ldr	w8, [sp, #76]
  40255c:	mov	w12, w8
  402560:	mov	w8, w12
  402564:	add	w8, w8, #0x1
  402568:	str	w8, [sp, #76]
  40256c:	mul	x10, x10, x12
  402570:	add	x10, x11, x10
  402574:	str	x9, [x10]
  402578:	ldur	x0, [x29, #-32]
  40257c:	bl	4038ac <isempty>
  402580:	tbnz	w0, #0, 4025d8 <font_load_and_wait+0x144>
  402584:	ldr	w8, [sp, #76]
  402588:	mov	w9, w8
  40258c:	mov	w8, w9
  402590:	add	w8, w8, #0x1
  402594:	str	w8, [sp, #76]
  402598:	mov	x10, #0x8                   	// #8
  40259c:	mul	x9, x10, x9
  4025a0:	add	x11, sp, #0x50
  4025a4:	add	x9, x11, x9
  4025a8:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  4025ac:	add	x12, x12, #0xec3
  4025b0:	str	x12, [x9]
  4025b4:	ldur	x9, [x29, #-32]
  4025b8:	ldr	w8, [sp, #76]
  4025bc:	mov	w12, w8
  4025c0:	mov	w8, w12
  4025c4:	add	w8, w8, #0x1
  4025c8:	str	w8, [sp, #76]
  4025cc:	mul	x10, x10, x12
  4025d0:	add	x10, x11, x10
  4025d4:	str	x9, [x10]
  4025d8:	ldur	x0, [x29, #-40]
  4025dc:	bl	4038ac <isempty>
  4025e0:	tbnz	w0, #0, 402638 <font_load_and_wait+0x1a4>
  4025e4:	ldr	w8, [sp, #76]
  4025e8:	mov	w9, w8
  4025ec:	mov	w8, w9
  4025f0:	add	w8, w8, #0x1
  4025f4:	str	w8, [sp, #76]
  4025f8:	mov	x10, #0x8                   	// #8
  4025fc:	mul	x9, x10, x9
  402600:	add	x11, sp, #0x50
  402604:	add	x9, x11, x9
  402608:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  40260c:	add	x12, x12, #0xec6
  402610:	str	x12, [x9]
  402614:	ldur	x9, [x29, #-40]
  402618:	ldr	w8, [sp, #76]
  40261c:	mov	w12, w8
  402620:	mov	w8, w12
  402624:	add	w8, w8, #0x1
  402628:	str	w8, [sp, #76]
  40262c:	mul	x10, x10, x12
  402630:	add	x10, x11, x10
  402634:	str	x9, [x10]
  402638:	ldur	x0, [x29, #-24]
  40263c:	bl	4038ac <isempty>
  402640:	tbnz	w0, #0, 402670 <font_load_and_wait+0x1dc>
  402644:	ldur	x8, [x29, #-24]
  402648:	ldr	w9, [sp, #76]
  40264c:	mov	w10, w9
  402650:	mov	w9, w10
  402654:	add	w9, w9, #0x1
  402658:	str	w9, [sp, #76]
  40265c:	mov	x11, #0x8                   	// #8
  402660:	mul	x10, x11, x10
  402664:	add	x11, sp, #0x50
  402668:	add	x10, x11, x10
  40266c:	str	x8, [x10]
  402670:	ldr	w8, [sp, #76]
  402674:	mov	w9, w8
  402678:	mov	w8, w9
  40267c:	add	w8, w8, #0x1
  402680:	str	w8, [sp, #76]
  402684:	mov	x10, #0x8                   	// #8
  402688:	mul	x9, x10, x9
  40268c:	add	x10, sp, #0x50
  402690:	add	x9, x10, x9
  402694:	mov	x10, xzr
  402698:	str	x10, [x9]
  40269c:	mov	w8, wzr
  4026a0:	mov	w0, w8
  4026a4:	bl	400e50 <log_get_max_level_realm@plt>
  4026a8:	cmp	w0, #0x7
  4026ac:	cset	w8, ge  // ge = tcont
  4026b0:	mov	w11, #0x1                   	// #1
  4026b4:	eor	w8, w8, #0x1
  4026b8:	eor	w8, w8, w11
  4026bc:	and	w8, w8, #0x1
  4026c0:	mov	w1, w8
  4026c4:	sxtw	x9, w1
  4026c8:	cbz	x9, 402788 <font_load_and_wait+0x2f4>
  4026cc:	add	x0, sp, #0x50
  4026d0:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  4026d4:	add	x1, x1, #0xec9
  4026d8:	bl	4038ec <strv_join>
  4026dc:	str	x0, [sp, #56]
  4026e0:	mov	w8, #0x7                   	// #7
  4026e4:	str	w8, [sp, #52]
  4026e8:	str	wzr, [sp, #48]
  4026ec:	str	wzr, [sp, #44]
  4026f0:	ldr	w0, [sp, #44]
  4026f4:	bl	400e50 <log_get_max_level_realm@plt>
  4026f8:	ldr	w8, [sp, #52]
  4026fc:	and	w8, w8, #0x7
  402700:	cmp	w0, w8
  402704:	b.lt	402764 <font_load_and_wait+0x2d0>  // b.tstop
  402708:	ldr	w8, [sp, #44]
  40270c:	ldr	w9, [sp, #52]
  402710:	orr	w0, w9, w8, lsl #10
  402714:	ldr	w1, [sp, #48]
  402718:	ldr	x10, [sp, #56]
  40271c:	str	w0, [sp, #28]
  402720:	mov	x0, x10
  402724:	str	w1, [sp, #24]
  402728:	bl	403920 <strnull>
  40272c:	ldr	w8, [sp, #28]
  402730:	str	x0, [sp, #16]
  402734:	mov	w0, w8
  402738:	ldr	w1, [sp, #24]
  40273c:	ldr	x2, [sp, #32]
  402740:	mov	w3, #0xc3                  	// #195
  402744:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  402748:	add	x4, x4, #0xecb
  40274c:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  402750:	add	x5, x5, #0xede
  402754:	ldr	x6, [sp, #16]
  402758:	bl	400e60 <log_internal_realm@plt>
  40275c:	str	w0, [sp, #12]
  402760:	b	402778 <font_load_and_wait+0x2e4>
  402764:	ldr	w0, [sp, #48]
  402768:	bl	400e70 <abs@plt>
  40276c:	mov	w8, wzr
  402770:	subs	w8, w8, w0, uxtb
  402774:	str	w8, [sp, #12]
  402778:	ldr	w8, [sp, #12]
  40277c:	str	w8, [sp, #40]
  402780:	add	x0, sp, #0x38
  402784:	bl	401778 <freep>
  402788:	adrp	x0, 403000 <setup_remaining_vcs+0x4d8>
  40278c:	add	x0, x0, #0xef0
  402790:	mov	w1, #0x223                 	// #547
  402794:	add	x2, sp, #0x48
  402798:	bl	40395c <safe_fork>
  40279c:	str	w0, [sp, #68]
  4027a0:	ldr	w8, [sp, #68]
  4027a4:	cmp	w8, #0x0
  4027a8:	cset	w8, ge  // ge = tcont
  4027ac:	tbnz	w8, #0, 4027bc <font_load_and_wait+0x328>
  4027b0:	ldr	w8, [sp, #68]
  4027b4:	stur	w8, [x29, #-4]
  4027b8:	b	4027f4 <font_load_and_wait+0x360>
  4027bc:	ldr	w8, [sp, #68]
  4027c0:	cbnz	w8, 4027dc <font_load_and_wait+0x348>
  4027c4:	add	x1, sp, #0x50
  4027c8:	ldr	x0, [sp, #80]
  4027cc:	bl	400f60 <execv@plt>
  4027d0:	mov	w8, #0x1                   	// #1
  4027d4:	mov	w0, w8
  4027d8:	bl	400f70 <_exit@plt>
  4027dc:	ldr	w1, [sp, #72]
  4027e0:	adrp	x0, 403000 <setup_remaining_vcs+0x4d8>
  4027e4:	add	x0, x0, #0xeaf
  4027e8:	mov	w2, #0x3                   	// #3
  4027ec:	bl	400f80 <wait_for_terminate_and_check@plt>
  4027f0:	stur	w0, [x29, #-4]
  4027f4:	ldur	w0, [x29, #-4]
  4027f8:	ldp	x29, x30, [sp, #192]
  4027fc:	add	sp, sp, #0xd0
  402800:	ret

0000000000402804 <keyboard_load_and_wait>:
  402804:	sub	sp, sp, #0xc0
  402808:	stp	x29, x30, [sp, #176]
  40280c:	add	x29, sp, #0xb0
  402810:	mov	w8, #0x1                   	// #1
  402814:	adrp	x9, 403000 <setup_remaining_vcs+0x4d8>
  402818:	add	x9, x9, #0xa92
  40281c:	add	x9, x9, #0x3
  402820:	stur	x0, [x29, #-16]
  402824:	stur	x1, [x29, #-24]
  402828:	stur	x2, [x29, #-32]
  40282c:	and	w8, w3, w8
  402830:	sturb	w8, [x29, #-33]
  402834:	str	wzr, [sp, #68]
  402838:	ldur	x0, [x29, #-24]
  40283c:	str	x9, [sp, #24]
  402840:	bl	4038ac <isempty>
  402844:	tbnz	w0, #0, 40284c <keyboard_load_and_wait+0x48>
  402848:	b	402854 <keyboard_load_and_wait+0x50>
  40284c:	stur	wzr, [x29, #-4]
  402850:	b	402b18 <keyboard_load_and_wait+0x314>
  402854:	ldr	w8, [sp, #68]
  402858:	mov	w9, w8
  40285c:	mov	w8, w9
  402860:	add	w8, w8, #0x1
  402864:	str	w8, [sp, #68]
  402868:	mov	x10, #0x8                   	// #8
  40286c:	mul	x9, x10, x9
  402870:	add	x11, sp, #0x48
  402874:	add	x9, x11, x9
  402878:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  40287c:	add	x12, x12, #0xf01
  402880:	str	x12, [x9]
  402884:	ldr	w8, [sp, #68]
  402888:	mov	w9, w8
  40288c:	mov	w8, w9
  402890:	add	w8, w8, #0x1
  402894:	str	w8, [sp, #68]
  402898:	mul	x9, x10, x9
  40289c:	add	x9, x11, x9
  4028a0:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  4028a4:	add	x12, x12, #0xf13
  4028a8:	str	x12, [x9]
  4028ac:	ldr	w8, [sp, #68]
  4028b0:	mov	w9, w8
  4028b4:	mov	w8, w9
  4028b8:	add	w8, w8, #0x1
  4028bc:	str	w8, [sp, #68]
  4028c0:	mul	x9, x10, x9
  4028c4:	add	x9, x11, x9
  4028c8:	adrp	x12, 403000 <setup_remaining_vcs+0x4d8>
  4028cc:	add	x12, x12, #0xec0
  4028d0:	str	x12, [x9]
  4028d4:	ldur	x9, [x29, #-16]
  4028d8:	ldr	w8, [sp, #68]
  4028dc:	mov	w12, w8
  4028e0:	mov	w8, w12
  4028e4:	add	w8, w8, #0x1
  4028e8:	str	w8, [sp, #68]
  4028ec:	mul	x10, x10, x12
  4028f0:	add	x10, x11, x10
  4028f4:	str	x9, [x10]
  4028f8:	ldurb	w8, [x29, #-33]
  4028fc:	tbnz	w8, #0, 402904 <keyboard_load_and_wait+0x100>
  402900:	b	402934 <keyboard_load_and_wait+0x130>
  402904:	ldr	w8, [sp, #68]
  402908:	mov	w9, w8
  40290c:	mov	w8, w9
  402910:	add	w8, w8, #0x1
  402914:	str	w8, [sp, #68]
  402918:	mov	x10, #0x8                   	// #8
  40291c:	mul	x9, x10, x9
  402920:	add	x10, sp, #0x48
  402924:	add	x9, x10, x9
  402928:	adrp	x10, 403000 <setup_remaining_vcs+0x4d8>
  40292c:	add	x10, x10, #0xec6
  402930:	str	x10, [x9]
  402934:	ldur	x8, [x29, #-24]
  402938:	ldr	w9, [sp, #68]
  40293c:	mov	w10, w9
  402940:	mov	w9, w10
  402944:	add	w9, w9, #0x1
  402948:	str	w9, [sp, #68]
  40294c:	mov	x11, #0x8                   	// #8
  402950:	mul	x10, x11, x10
  402954:	add	x11, sp, #0x48
  402958:	add	x10, x11, x10
  40295c:	str	x8, [x10]
  402960:	ldur	x8, [x29, #-32]
  402964:	cbz	x8, 402994 <keyboard_load_and_wait+0x190>
  402968:	ldur	x8, [x29, #-32]
  40296c:	ldr	w9, [sp, #68]
  402970:	mov	w10, w9
  402974:	mov	w9, w10
  402978:	add	w9, w9, #0x1
  40297c:	str	w9, [sp, #68]
  402980:	mov	x11, #0x8                   	// #8
  402984:	mul	x10, x11, x10
  402988:	add	x11, sp, #0x48
  40298c:	add	x10, x11, x10
  402990:	str	x8, [x10]
  402994:	ldr	w8, [sp, #68]
  402998:	mov	w9, w8
  40299c:	mov	w8, w9
  4029a0:	add	w8, w8, #0x1
  4029a4:	str	w8, [sp, #68]
  4029a8:	mov	x10, #0x8                   	// #8
  4029ac:	mul	x9, x10, x9
  4029b0:	add	x10, sp, #0x48
  4029b4:	add	x9, x10, x9
  4029b8:	mov	x10, xzr
  4029bc:	str	x10, [x9]
  4029c0:	mov	w8, wzr
  4029c4:	mov	w0, w8
  4029c8:	bl	400e50 <log_get_max_level_realm@plt>
  4029cc:	cmp	w0, #0x7
  4029d0:	cset	w8, ge  // ge = tcont
  4029d4:	mov	w11, #0x1                   	// #1
  4029d8:	eor	w8, w8, #0x1
  4029dc:	eor	w8, w8, w11
  4029e0:	and	w8, w8, #0x1
  4029e4:	mov	w1, w8
  4029e8:	sxtw	x9, w1
  4029ec:	cbz	x9, 402aac <keyboard_load_and_wait+0x2a8>
  4029f0:	add	x0, sp, #0x48
  4029f4:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  4029f8:	add	x1, x1, #0xec9
  4029fc:	bl	4038ec <strv_join>
  402a00:	str	x0, [sp, #48]
  402a04:	mov	w8, #0x7                   	// #7
  402a08:	str	w8, [sp, #44]
  402a0c:	str	wzr, [sp, #40]
  402a10:	str	wzr, [sp, #36]
  402a14:	ldr	w0, [sp, #36]
  402a18:	bl	400e50 <log_get_max_level_realm@plt>
  402a1c:	ldr	w8, [sp, #44]
  402a20:	and	w8, w8, #0x7
  402a24:	cmp	w0, w8
  402a28:	b.lt	402a88 <keyboard_load_and_wait+0x284>  // b.tstop
  402a2c:	ldr	w8, [sp, #36]
  402a30:	ldr	w9, [sp, #44]
  402a34:	orr	w0, w9, w8, lsl #10
  402a38:	ldr	w1, [sp, #40]
  402a3c:	ldr	x10, [sp, #48]
  402a40:	str	w0, [sp, #20]
  402a44:	mov	x0, x10
  402a48:	str	w1, [sp, #16]
  402a4c:	bl	403920 <strnull>
  402a50:	ldr	w8, [sp, #20]
  402a54:	str	x0, [sp, #8]
  402a58:	mov	w0, w8
  402a5c:	ldr	w1, [sp, #16]
  402a60:	ldr	x2, [sp, #24]
  402a64:	mov	w3, #0x98                  	// #152
  402a68:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  402a6c:	add	x4, x4, #0xf16
  402a70:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  402a74:	add	x5, x5, #0xede
  402a78:	ldr	x6, [sp, #8]
  402a7c:	bl	400e60 <log_internal_realm@plt>
  402a80:	str	w0, [sp, #4]
  402a84:	b	402a9c <keyboard_load_and_wait+0x298>
  402a88:	ldr	w0, [sp, #40]
  402a8c:	bl	400e70 <abs@plt>
  402a90:	mov	w8, wzr
  402a94:	subs	w8, w8, w0, uxtb
  402a98:	str	w8, [sp, #4]
  402a9c:	ldr	w8, [sp, #4]
  402aa0:	str	w8, [sp, #32]
  402aa4:	add	x0, sp, #0x30
  402aa8:	bl	401778 <freep>
  402aac:	adrp	x0, 403000 <setup_remaining_vcs+0x4d8>
  402ab0:	add	x0, x0, #0xf2d
  402ab4:	mov	w1, #0x223                 	// #547
  402ab8:	add	x2, sp, #0x40
  402abc:	bl	40395c <safe_fork>
  402ac0:	str	w0, [sp, #60]
  402ac4:	ldr	w8, [sp, #60]
  402ac8:	cmp	w8, #0x0
  402acc:	cset	w8, ge  // ge = tcont
  402ad0:	tbnz	w8, #0, 402ae0 <keyboard_load_and_wait+0x2dc>
  402ad4:	ldr	w8, [sp, #60]
  402ad8:	stur	w8, [x29, #-4]
  402adc:	b	402b18 <keyboard_load_and_wait+0x314>
  402ae0:	ldr	w8, [sp, #60]
  402ae4:	cbnz	w8, 402b00 <keyboard_load_and_wait+0x2fc>
  402ae8:	add	x1, sp, #0x48
  402aec:	ldr	x0, [sp, #72]
  402af0:	bl	400f60 <execv@plt>
  402af4:	mov	w8, #0x1                   	// #1
  402af8:	mov	w0, w8
  402afc:	bl	400f70 <_exit@plt>
  402b00:	ldr	w1, [sp, #64]
  402b04:	adrp	x0, 403000 <setup_remaining_vcs+0x4d8>
  402b08:	add	x0, x0, #0xf01
  402b0c:	mov	w2, #0x3                   	// #3
  402b10:	bl	400f80 <wait_for_terminate_and_check@plt>
  402b14:	stur	w0, [x29, #-4]
  402b18:	ldur	w0, [x29, #-4]
  402b1c:	ldp	x29, x30, [sp, #176]
  402b20:	add	sp, sp, #0xc0
  402b24:	ret

0000000000402b28 <setup_remaining_vcs>:
  402b28:	sub	sp, sp, #0x1a0
  402b2c:	stp	x29, x30, [sp, #384]
  402b30:	str	x28, [sp, #400]
  402b34:	add	x29, sp, #0x180
  402b38:	sub	x8, x29, #0x58
  402b3c:	adrp	x9, 404000 <_fini+0x5d4>
  402b40:	add	x9, x9, #0x280
  402b44:	mov	x10, xzr
  402b48:	mov	x11, #0x4                   	// #4
  402b4c:	mov	x12, #0xffff                	// #65535
  402b50:	adrp	x13, 403000 <setup_remaining_vcs+0x4d8>
  402b54:	add	x13, x13, #0xa92
  402b58:	add	x13, x13, #0x3
  402b5c:	adrp	x14, 403000 <setup_remaining_vcs+0x4d8>
  402b60:	add	x14, x14, #0xf38
  402b64:	mov	w15, #0x1                   	// #1
  402b68:	sub	x16, x29, #0x38
  402b6c:	stur	w0, [x29, #-4]
  402b70:	stur	w1, [x29, #-8]
  402b74:	and	w15, w2, w15
  402b78:	sturb	w15, [x29, #-9]
  402b7c:	ldr	q0, [x9]
  402b80:	stur	q0, [x8, #40]
  402b84:	ldr	q0, [x9, #16]
  402b88:	stur	q0, [x8, #56]
  402b8c:	stur	wzr, [x29, #-56]
  402b90:	mov	w15, #0x0                   	// #0
  402b94:	strh	w15, [x16, #4]
  402b98:	str	x10, [x8, #8]
  402b9c:	str	x10, [x8]
  402ba0:	mov	x0, x11
  402ba4:	mov	x1, x12
  402ba8:	str	x8, [sp, #72]
  402bac:	str	x13, [sp, #64]
  402bb0:	str	x14, [sp, #56]
  402bb4:	bl	40372c <malloc_multiply>
  402bb8:	ldr	x8, [sp, #72]
  402bbc:	str	x0, [x8, #8]
  402bc0:	ldr	x9, [x8, #8]
  402bc4:	cbnz	x9, 402bec <setup_remaining_vcs+0xc4>
  402bc8:	mov	w8, wzr
  402bcc:	mov	w0, w8
  402bd0:	ldr	x1, [sp, #64]
  402bd4:	mov	w2, #0xe9                  	// #233
  402bd8:	ldr	x3, [sp, #56]
  402bdc:	bl	400ed0 <log_oom_internal@plt>
  402be0:	mov	w8, #0x1                   	// #1
  402be4:	stur	w8, [x29, #-100]
  402be8:	b	40349c <setup_remaining_vcs+0x974>
  402bec:	ldur	w0, [x29, #-4]
  402bf0:	mov	x1, #0x4b72                	// #19314
  402bf4:	sub	x2, x29, #0x30
  402bf8:	bl	400f10 <ioctl@plt>
  402bfc:	stur	w0, [x29, #-96]
  402c00:	ldur	w8, [x29, #-96]
  402c04:	cmp	w8, #0x0
  402c08:	cset	w8, ge  // ge = tcont
  402c0c:	tbnz	w8, #0, 402c90 <setup_remaining_vcs+0x168>
  402c10:	mov	w8, #0x4                   	// #4
  402c14:	stur	w8, [x29, #-104]
  402c18:	bl	400f20 <__errno_location@plt>
  402c1c:	ldr	w8, [x0]
  402c20:	stur	w8, [x29, #-108]
  402c24:	stur	wzr, [x29, #-112]
  402c28:	ldur	w0, [x29, #-112]
  402c2c:	bl	400e50 <log_get_max_level_realm@plt>
  402c30:	ldur	w8, [x29, #-104]
  402c34:	and	w8, w8, #0x7
  402c38:	cmp	w0, w8
  402c3c:	b.lt	402c70 <setup_remaining_vcs+0x148>  // b.tstop
  402c40:	ldur	w8, [x29, #-112]
  402c44:	ldur	w9, [x29, #-104]
  402c48:	orr	w0, w9, w8, lsl #10
  402c4c:	ldur	w1, [x29, #-108]
  402c50:	ldr	x2, [sp, #64]
  402c54:	mov	w3, #0xf0                  	// #240
  402c58:	ldr	x4, [sp, #56]
  402c5c:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  402c60:	add	x5, x5, #0xf4c
  402c64:	bl	400e60 <log_internal_realm@plt>
  402c68:	str	w0, [sp, #52]
  402c6c:	b	402c84 <setup_remaining_vcs+0x15c>
  402c70:	ldur	w0, [x29, #-108]
  402c74:	bl	400e70 <abs@plt>
  402c78:	mov	w8, wzr
  402c7c:	subs	w8, w8, w0, uxtb
  402c80:	str	w8, [sp, #52]
  402c84:	ldr	w8, [sp, #52]
  402c88:	stur	w8, [x29, #-116]
  402c8c:	b	402f14 <setup_remaining_vcs+0x3ec>
  402c90:	ldur	w8, [x29, #-40]
  402c94:	cmp	w8, #0x20
  402c98:	b.hi	402cb4 <setup_remaining_vcs+0x18c>  // b.pmore
  402c9c:	ldur	w8, [x29, #-36]
  402ca0:	cmp	w8, #0x20
  402ca4:	b.hi	402cb4 <setup_remaining_vcs+0x18c>  // b.pmore
  402ca8:	ldur	w8, [x29, #-32]
  402cac:	cmp	w8, #0x200
  402cb0:	b.ls	402d40 <setup_remaining_vcs+0x218>  // b.plast
  402cb4:	mov	w8, #0x4                   	// #4
  402cb8:	stur	w8, [x29, #-120]
  402cbc:	stur	wzr, [x29, #-124]
  402cc0:	stur	wzr, [x29, #-128]
  402cc4:	ldur	w0, [x29, #-128]
  402cc8:	bl	400e50 <log_get_max_level_realm@plt>
  402ccc:	ldur	w8, [x29, #-120]
  402cd0:	and	w8, w8, #0x7
  402cd4:	cmp	w0, w8
  402cd8:	b.lt	402d20 <setup_remaining_vcs+0x1f8>  // b.tstop
  402cdc:	ldur	w8, [x29, #-128]
  402ce0:	ldur	w9, [x29, #-120]
  402ce4:	orr	w0, w9, w8, lsl #10
  402ce8:	ldur	w1, [x29, #-124]
  402cec:	ldur	w6, [x29, #-40]
  402cf0:	ldur	w7, [x29, #-36]
  402cf4:	ldur	w8, [x29, #-32]
  402cf8:	ldr	x2, [sp, #64]
  402cfc:	mov	w3, #0xf5                  	// #245
  402d00:	ldr	x4, [sp, #56]
  402d04:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  402d08:	add	x5, x5, #0xf8c
  402d0c:	mov	x10, sp
  402d10:	str	w8, [x10]
  402d14:	bl	400e60 <log_internal_realm@plt>
  402d18:	str	w0, [sp, #48]
  402d1c:	b	402d34 <setup_remaining_vcs+0x20c>
  402d20:	ldur	w0, [x29, #-124]
  402d24:	bl	400e70 <abs@plt>
  402d28:	mov	w8, wzr
  402d2c:	subs	w8, w8, w0, uxtb
  402d30:	str	w8, [sp, #48]
  402d34:	ldr	w8, [sp, #48]
  402d38:	stur	w8, [x29, #-132]
  402d3c:	b	402f14 <setup_remaining_vcs+0x3ec>
  402d40:	ldur	w8, [x29, #-40]
  402d44:	add	w8, w8, #0x7
  402d48:	mov	w9, #0x8                   	// #8
  402d4c:	udiv	w8, w8, w9
  402d50:	mov	w9, #0x20                  	// #32
  402d54:	mul	w8, w8, w9
  402d58:	mov	w10, w8
  402d5c:	ubfx	x0, x10, #0, #32
  402d60:	ldur	w8, [x29, #-32]
  402d64:	mov	w1, w8
  402d68:	bl	40372c <malloc_multiply>
  402d6c:	ldr	x10, [sp, #72]
  402d70:	str	x0, [x10]
  402d74:	ldr	x11, [x10]
  402d78:	cbnz	x11, 402da0 <setup_remaining_vcs+0x278>
  402d7c:	mov	w8, wzr
  402d80:	mov	w0, w8
  402d84:	ldr	x1, [sp, #64]
  402d88:	mov	w2, #0xff                  	// #255
  402d8c:	ldr	x3, [sp, #56]
  402d90:	bl	400ed0 <log_oom_internal@plt>
  402d94:	mov	w8, #0x1                   	// #1
  402d98:	stur	w8, [x29, #-100]
  402d9c:	b	40349c <setup_remaining_vcs+0x974>
  402da0:	ldr	x8, [sp, #72]
  402da4:	ldr	x9, [x8]
  402da8:	sub	x10, x29, #0x30
  402dac:	str	x9, [x10, #24]
  402db0:	ldur	w0, [x29, #-4]
  402db4:	mov	x1, #0x4b72                	// #19314
  402db8:	mov	x2, x10
  402dbc:	bl	400f10 <ioctl@plt>
  402dc0:	stur	w0, [x29, #-96]
  402dc4:	ldur	w11, [x29, #-96]
  402dc8:	cmp	w11, #0x0
  402dcc:	cset	w11, ge  // ge = tcont
  402dd0:	tbnz	w11, #0, 402e54 <setup_remaining_vcs+0x32c>
  402dd4:	mov	w8, #0x4                   	// #4
  402dd8:	stur	w8, [x29, #-136]
  402ddc:	bl	400f20 <__errno_location@plt>
  402de0:	ldr	w8, [x0]
  402de4:	stur	w8, [x29, #-140]
  402de8:	stur	wzr, [x29, #-144]
  402dec:	ldur	w0, [x29, #-144]
  402df0:	bl	400e50 <log_get_max_level_realm@plt>
  402df4:	ldur	w8, [x29, #-136]
  402df8:	and	w8, w8, #0x7
  402dfc:	cmp	w0, w8
  402e00:	b.lt	402e34 <setup_remaining_vcs+0x30c>  // b.tstop
  402e04:	ldur	w8, [x29, #-144]
  402e08:	ldur	w9, [x29, #-136]
  402e0c:	orr	w0, w9, w8, lsl #10
  402e10:	ldur	w1, [x29, #-140]
  402e14:	ldr	x2, [sp, #64]
  402e18:	mov	w3, #0x106                 	// #262
  402e1c:	ldr	x4, [sp, #56]
  402e20:	adrp	x5, 403000 <setup_remaining_vcs+0x4d8>
  402e24:	add	x5, x5, #0xfe1
  402e28:	bl	400e60 <log_internal_realm@plt>
  402e2c:	str	w0, [sp, #44]
  402e30:	b	402e48 <setup_remaining_vcs+0x320>
  402e34:	ldur	w0, [x29, #-140]
  402e38:	bl	400e70 <abs@plt>
  402e3c:	mov	w8, wzr
  402e40:	subs	w8, w8, w0, uxtb
  402e44:	str	w8, [sp, #44]
  402e48:	ldr	w8, [sp, #44]
  402e4c:	stur	w8, [x29, #-148]
  402e50:	b	402f14 <setup_remaining_vcs+0x3ec>
  402e54:	ldr	x8, [sp, #72]
  402e58:	ldr	x9, [x8, #8]
  402e5c:	sub	x10, x29, #0x48
  402e60:	str	x9, [x10, #8]
  402e64:	mov	w11, #0xffff                	// #65535
  402e68:	sturh	w11, [x29, #-72]
  402e6c:	ldur	w0, [x29, #-4]
  402e70:	mov	x1, #0x4b66                	// #19302
  402e74:	mov	x2, x10
  402e78:	bl	400f10 <ioctl@plt>
  402e7c:	stur	w0, [x29, #-96]
  402e80:	ldur	w11, [x29, #-96]
  402e84:	cmp	w11, #0x0
  402e88:	cset	w11, ge  // ge = tcont
  402e8c:	tbnz	w11, #0, 402f10 <setup_remaining_vcs+0x3e8>
  402e90:	mov	w8, #0x4                   	// #4
  402e94:	stur	w8, [x29, #-152]
  402e98:	bl	400f20 <__errno_location@plt>
  402e9c:	ldr	w8, [x0]
  402ea0:	stur	w8, [x29, #-156]
  402ea4:	stur	wzr, [x29, #-160]
  402ea8:	ldur	w0, [x29, #-160]
  402eac:	bl	400e50 <log_get_max_level_realm@plt>
  402eb0:	ldur	w8, [x29, #-152]
  402eb4:	and	w8, w8, #0x7
  402eb8:	cmp	w0, w8
  402ebc:	b.lt	402ef0 <setup_remaining_vcs+0x3c8>  // b.tstop
  402ec0:	ldur	w8, [x29, #-160]
  402ec4:	ldur	w9, [x29, #-152]
  402ec8:	orr	w0, w9, w8, lsl #10
  402ecc:	ldur	w1, [x29, #-156]
  402ed0:	ldr	x2, [sp, #64]
  402ed4:	mov	w3, #0x10c                 	// #268
  402ed8:	ldr	x4, [sp, #56]
  402edc:	adrp	x5, 404000 <_fini+0x5d4>
  402ee0:	add	x5, x5, #0x1e
  402ee4:	bl	400e60 <log_internal_realm@plt>
  402ee8:	str	w0, [sp, #40]
  402eec:	b	402f04 <setup_remaining_vcs+0x3dc>
  402ef0:	ldur	w0, [x29, #-156]
  402ef4:	bl	400e70 <abs@plt>
  402ef8:	mov	w8, wzr
  402efc:	subs	w8, w8, w0, uxtb
  402f00:	str	w8, [sp, #40]
  402f04:	ldr	w8, [sp, #40]
  402f08:	stur	w8, [x29, #-164]
  402f0c:	b	402f14 <setup_remaining_vcs+0x3ec>
  402f10:	stur	wzr, [x29, #-48]
  402f14:	ldur	w8, [x29, #-48]
  402f18:	cbz	w8, 402f90 <setup_remaining_vcs+0x468>
  402f1c:	mov	w8, #0x4                   	// #4
  402f20:	stur	w8, [x29, #-168]
  402f24:	stur	wzr, [x29, #-172]
  402f28:	stur	wzr, [x29, #-176]
  402f2c:	ldur	w0, [x29, #-176]
  402f30:	bl	400e50 <log_get_max_level_realm@plt>
  402f34:	ldur	w8, [x29, #-168]
  402f38:	and	w8, w8, #0x7
  402f3c:	cmp	w0, w8
  402f40:	b.lt	402f74 <setup_remaining_vcs+0x44c>  // b.tstop
  402f44:	ldur	w8, [x29, #-176]
  402f48:	ldur	w9, [x29, #-168]
  402f4c:	orr	w0, w9, w8, lsl #10
  402f50:	ldur	w1, [x29, #-172]
  402f54:	ldr	x2, [sp, #64]
  402f58:	mov	w3, #0x114                 	// #276
  402f5c:	ldr	x4, [sp, #56]
  402f60:	adrp	x5, 404000 <_fini+0x5d4>
  402f64:	add	x5, x5, #0x5a
  402f68:	bl	400e60 <log_internal_realm@plt>
  402f6c:	str	w0, [sp, #36]
  402f70:	b	402f88 <setup_remaining_vcs+0x460>
  402f74:	ldur	w0, [x29, #-172]
  402f78:	bl	400e70 <abs@plt>
  402f7c:	mov	w8, wzr
  402f80:	subs	w8, w8, w0, uxtb
  402f84:	str	w8, [sp, #36]
  402f88:	ldr	w8, [sp, #36]
  402f8c:	stur	w8, [x29, #-180]
  402f90:	mov	w8, #0x1                   	// #1
  402f94:	stur	w8, [x29, #-92]
  402f98:	ldur	w8, [x29, #-92]
  402f9c:	cmp	w8, #0x3f
  402fa0:	b.hi	403498 <setup_remaining_vcs+0x970>  // b.pmore
  402fa4:	mov	w8, #0xffffffff            	// #-1
  402fa8:	str	w8, [sp, #188]
  402fac:	ldur	w8, [x29, #-92]
  402fb0:	ldur	w9, [x29, #-8]
  402fb4:	cmp	w8, w9
  402fb8:	b.eq	402fd0 <setup_remaining_vcs+0x4a8>  // b.none
  402fbc:	ldur	w0, [x29, #-92]
  402fc0:	bl	403658 <verify_vc_allocation>
  402fc4:	cmp	w0, #0x0
  402fc8:	cset	w8, ge  // ge = tcont
  402fcc:	tbnz	w8, #0, 402fdc <setup_remaining_vcs+0x4b4>
  402fd0:	mov	w8, #0x4                   	// #4
  402fd4:	stur	w8, [x29, #-100]
  402fd8:	b	403470 <setup_remaining_vcs+0x948>
  402fdc:	ldur	w3, [x29, #-92]
  402fe0:	sub	x0, x29, #0xbf
  402fe4:	mov	x1, #0xb                   	// #11
  402fe8:	adrp	x2, 403000 <setup_remaining_vcs+0x4d8>
  402fec:	add	x2, x2, #0xd21
  402ff0:	bl	400f90 <snprintf@plt>
  402ff4:	mov	w1, w0
  402ff8:	sxtw	x8, w1
  402ffc:	cmp	x8, #0xb
  403000:	cset	w9, cc  // cc = lo, ul, last
  403004:	mov	w10, #0x1                   	// #1
  403008:	eor	w9, w9, #0x1
  40300c:	eor	w9, w9, w10
  403010:	eor	w9, w9, w10
  403014:	and	w9, w9, #0x1
  403018:	mov	w1, w9
  40301c:	sxtw	x8, w1
  403020:	cbz	x8, 403048 <setup_remaining_vcs+0x520>
  403024:	mov	w8, wzr
  403028:	mov	w0, w8
  40302c:	adrp	x1, 404000 <_fini+0x5d4>
  403030:	add	x1, x1, #0x89
  403034:	ldr	x2, [sp, #64]
  403038:	mov	w3, #0x11e                 	// #286
  40303c:	adrp	x4, 404000 <_fini+0x5d4>
  403040:	add	x4, x4, #0xb0
  403044:	bl	400f00 <log_assert_failed_realm@plt>
  403048:	sub	x0, x29, #0xbf
  40304c:	mov	w1, #0x102                 	// #258
  403050:	movk	w1, #0x8, lsl #16
  403054:	bl	400eb0 <open_terminal@plt>
  403058:	str	w0, [sp, #188]
  40305c:	ldr	w8, [sp, #188]
  403060:	cmp	w8, #0x0
  403064:	cset	w8, ge  // ge = tcont
  403068:	tbnz	w8, #0, 4030f4 <setup_remaining_vcs+0x5cc>
  40306c:	mov	w8, #0x4                   	// #4
  403070:	str	w8, [sp, #184]
  403074:	ldr	w8, [sp, #188]
  403078:	str	w8, [sp, #180]
  40307c:	str	wzr, [sp, #176]
  403080:	ldr	w0, [sp, #176]
  403084:	bl	400e50 <log_get_max_level_realm@plt>
  403088:	ldr	w8, [sp, #184]
  40308c:	and	w8, w8, #0x7
  403090:	cmp	w0, w8
  403094:	b.lt	4030cc <setup_remaining_vcs+0x5a4>  // b.tstop
  403098:	ldr	w8, [sp, #176]
  40309c:	ldr	w9, [sp, #184]
  4030a0:	orr	w0, w9, w8, lsl #10
  4030a4:	ldr	w1, [sp, #180]
  4030a8:	ldur	w6, [x29, #-92]
  4030ac:	ldr	x2, [sp, #64]
  4030b0:	mov	w3, #0x121                 	// #289
  4030b4:	ldr	x4, [sp, #56]
  4030b8:	adrp	x5, 404000 <_fini+0x5d4>
  4030bc:	add	x5, x5, #0xe3
  4030c0:	bl	400e60 <log_internal_realm@plt>
  4030c4:	str	w0, [sp, #32]
  4030c8:	b	4030e0 <setup_remaining_vcs+0x5b8>
  4030cc:	ldr	w0, [sp, #180]
  4030d0:	bl	400e70 <abs@plt>
  4030d4:	mov	w8, wzr
  4030d8:	subs	w8, w8, w0, uxtb
  4030dc:	str	w8, [sp, #32]
  4030e0:	ldr	w8, [sp, #32]
  4030e4:	str	w8, [sp, #172]
  4030e8:	mov	w8, #0x4                   	// #4
  4030ec:	stur	w8, [x29, #-100]
  4030f0:	b	403470 <setup_remaining_vcs+0x948>
  4030f4:	ldr	w0, [sp, #188]
  4030f8:	bl	4035a0 <verify_vc_kbmode>
  4030fc:	cmp	w0, #0x0
  403100:	cset	w8, ge  // ge = tcont
  403104:	tbnz	w8, #0, 403114 <setup_remaining_vcs+0x5ec>
  403108:	mov	w8, #0x4                   	// #4
  40310c:	stur	w8, [x29, #-100]
  403110:	b	403470 <setup_remaining_vcs+0x948>
  403114:	ldr	w1, [sp, #188]
  403118:	ldurb	w8, [x29, #-9]
  40311c:	sub	x0, x29, #0xbf
  403120:	and	w2, w8, #0x1
  403124:	bl	401fc8 <toggle_utf8_vc>
  403128:	ldur	w8, [x29, #-48]
  40312c:	cbz	w8, 40313c <setup_remaining_vcs+0x614>
  403130:	mov	w8, #0x4                   	// #4
  403134:	stur	w8, [x29, #-100]
  403138:	b	403470 <setup_remaining_vcs+0x948>
  40313c:	ldr	w0, [sp, #188]
  403140:	mov	x1, #0x4b72                	// #19314
  403144:	sub	x2, x29, #0x30
  403148:	bl	400f10 <ioctl@plt>
  40314c:	stur	w0, [x29, #-96]
  403150:	ldur	w8, [x29, #-96]
  403154:	cmp	w8, #0x0
  403158:	cset	w8, ge  // ge = tcont
  40315c:	tbnz	w8, #0, 403294 <setup_remaining_vcs+0x76c>
  403160:	bl	400f20 <__errno_location@plt>
  403164:	ldr	w8, [x0]
  403168:	str	w8, [sp, #168]
  40316c:	ldr	w0, [sp, #188]
  403170:	mov	x1, #0x4b3b                	// #19259
  403174:	add	x2, sp, #0xa4
  403178:	bl	400f10 <ioctl@plt>
  40317c:	cmp	w0, #0x0
  403180:	cset	w8, lt  // lt = tstop
  403184:	tbnz	w8, #0, 40320c <setup_remaining_vcs+0x6e4>
  403188:	ldr	w8, [sp, #164]
  40318c:	cbz	w8, 40320c <setup_remaining_vcs+0x6e4>
  403190:	mov	w8, #0x7                   	// #7
  403194:	str	w8, [sp, #160]
  403198:	str	wzr, [sp, #156]
  40319c:	str	wzr, [sp, #152]
  4031a0:	ldr	w0, [sp, #152]
  4031a4:	bl	400e50 <log_get_max_level_realm@plt>
  4031a8:	ldr	w8, [sp, #160]
  4031ac:	and	w8, w8, #0x7
  4031b0:	cmp	w0, w8
  4031b4:	b.lt	4031ec <setup_remaining_vcs+0x6c4>  // b.tstop
  4031b8:	ldr	w8, [sp, #152]
  4031bc:	ldr	w9, [sp, #160]
  4031c0:	orr	w0, w9, w8, lsl #10
  4031c4:	ldr	w1, [sp, #156]
  4031c8:	ldur	w6, [x29, #-92]
  4031cc:	ldr	x2, [sp, #64]
  4031d0:	mov	w3, #0x13b                 	// #315
  4031d4:	ldr	x4, [sp, #56]
  4031d8:	adrp	x5, 404000 <_fini+0x5d4>
  4031dc:	add	x5, x5, #0x116
  4031e0:	bl	400e60 <log_internal_realm@plt>
  4031e4:	str	w0, [sp, #28]
  4031e8:	b	403200 <setup_remaining_vcs+0x6d8>
  4031ec:	ldr	w0, [sp, #156]
  4031f0:	bl	400e70 <abs@plt>
  4031f4:	mov	w8, wzr
  4031f8:	subs	w8, w8, w0, uxtb
  4031fc:	str	w8, [sp, #28]
  403200:	ldr	w8, [sp, #28]
  403204:	str	w8, [sp, #148]
  403208:	b	403288 <setup_remaining_vcs+0x760>
  40320c:	mov	w8, #0x4                   	// #4
  403210:	str	w8, [sp, #144]
  403214:	ldr	w8, [sp, #168]
  403218:	str	w8, [sp, #140]
  40321c:	str	wzr, [sp, #136]
  403220:	ldr	w0, [sp, #136]
  403224:	bl	400e50 <log_get_max_level_realm@plt>
  403228:	ldr	w8, [sp, #144]
  40322c:	and	w8, w8, #0x7
  403230:	cmp	w0, w8
  403234:	b.lt	40326c <setup_remaining_vcs+0x744>  // b.tstop
  403238:	ldr	w8, [sp, #136]
  40323c:	ldr	w9, [sp, #144]
  403240:	orr	w0, w9, w8, lsl #10
  403244:	ldr	w1, [sp, #140]
  403248:	ldur	w6, [x29, #-92]
  40324c:	ldr	x2, [sp, #64]
  403250:	mov	w3, #0x13d                 	// #317
  403254:	ldr	x4, [sp, #56]
  403258:	adrp	x5, 404000 <_fini+0x5d4>
  40325c:	add	x5, x5, #0x148
  403260:	bl	400e60 <log_internal_realm@plt>
  403264:	str	w0, [sp, #24]
  403268:	b	403280 <setup_remaining_vcs+0x758>
  40326c:	ldr	w0, [sp, #140]
  403270:	bl	400e70 <abs@plt>
  403274:	mov	w8, wzr
  403278:	subs	w8, w8, w0, uxtb
  40327c:	str	w8, [sp, #24]
  403280:	ldr	w8, [sp, #24]
  403284:	str	w8, [sp, #132]
  403288:	mov	w8, #0x4                   	// #4
  40328c:	stur	w8, [x29, #-100]
  403290:	b	403470 <setup_remaining_vcs+0x948>
  403294:	ldr	w0, [sp, #188]
  403298:	mov	x1, #0x4b68                	// #19304
  40329c:	sub	x2, x29, #0x38
  4032a0:	bl	400f10 <ioctl@plt>
  4032a4:	stur	w0, [x29, #-96]
  4032a8:	ldur	w8, [x29, #-96]
  4032ac:	cmp	w8, #0x0
  4032b0:	cset	w8, ge  // ge = tcont
  4032b4:	tbnz	w8, #0, 403344 <setup_remaining_vcs+0x81c>
  4032b8:	mov	w8, #0x4                   	// #4
  4032bc:	str	w8, [sp, #128]
  4032c0:	bl	400f20 <__errno_location@plt>
  4032c4:	ldr	w8, [x0]
  4032c8:	str	w8, [sp, #124]
  4032cc:	str	wzr, [sp, #120]
  4032d0:	ldr	w0, [sp, #120]
  4032d4:	bl	400e50 <log_get_max_level_realm@plt>
  4032d8:	ldr	w8, [sp, #128]
  4032dc:	and	w8, w8, #0x7
  4032e0:	cmp	w0, w8
  4032e4:	b.lt	40331c <setup_remaining_vcs+0x7f4>  // b.tstop
  4032e8:	ldr	w8, [sp, #120]
  4032ec:	ldr	w9, [sp, #128]
  4032f0:	orr	w0, w9, w8, lsl #10
  4032f4:	ldr	w1, [sp, #124]
  4032f8:	ldur	w6, [x29, #-92]
  4032fc:	ldr	x2, [sp, #64]
  403300:	mov	w3, #0x148                 	// #328
  403304:	ldr	x4, [sp, #56]
  403308:	adrp	x5, 404000 <_fini+0x5d4>
  40330c:	add	x5, x5, #0x185
  403310:	bl	400e60 <log_internal_realm@plt>
  403314:	str	w0, [sp, #20]
  403318:	b	403330 <setup_remaining_vcs+0x808>
  40331c:	ldr	w0, [sp, #124]
  403320:	bl	400e70 <abs@plt>
  403324:	mov	w8, wzr
  403328:	subs	w8, w8, w0, uxtb
  40332c:	str	w8, [sp, #20]
  403330:	ldr	w8, [sp, #20]
  403334:	str	w8, [sp, #116]
  403338:	mov	w8, #0x4                   	// #4
  40333c:	stur	w8, [x29, #-100]
  403340:	b	403470 <setup_remaining_vcs+0x948>
  403344:	ldr	w0, [sp, #188]
  403348:	mov	x1, #0x4b67                	// #19303
  40334c:	sub	x2, x29, #0x48
  403350:	bl	400f10 <ioctl@plt>
  403354:	stur	w0, [x29, #-96]
  403358:	ldur	w8, [x29, #-96]
  40335c:	cmp	w8, #0x0
  403360:	cset	w8, ge  // ge = tcont
  403364:	tbnz	w8, #0, 4033f4 <setup_remaining_vcs+0x8cc>
  403368:	mov	w8, #0x4                   	// #4
  40336c:	str	w8, [sp, #112]
  403370:	bl	400f20 <__errno_location@plt>
  403374:	ldr	w8, [x0]
  403378:	str	w8, [sp, #108]
  40337c:	str	wzr, [sp, #104]
  403380:	ldr	w0, [sp, #104]
  403384:	bl	400e50 <log_get_max_level_realm@plt>
  403388:	ldr	w8, [sp, #112]
  40338c:	and	w8, w8, #0x7
  403390:	cmp	w0, w8
  403394:	b.lt	4033cc <setup_remaining_vcs+0x8a4>  // b.tstop
  403398:	ldr	w8, [sp, #104]
  40339c:	ldr	w9, [sp, #112]
  4033a0:	orr	w0, w9, w8, lsl #10
  4033a4:	ldr	w1, [sp, #108]
  4033a8:	ldur	w6, [x29, #-92]
  4033ac:	ldr	x2, [sp, #64]
  4033b0:	mov	w3, #0x14e                 	// #334
  4033b4:	ldr	x4, [sp, #56]
  4033b8:	adrp	x5, 404000 <_fini+0x5d4>
  4033bc:	add	x5, x5, #0x1c4
  4033c0:	bl	400e60 <log_internal_realm@plt>
  4033c4:	str	w0, [sp, #16]
  4033c8:	b	4033e0 <setup_remaining_vcs+0x8b8>
  4033cc:	ldr	w0, [sp, #108]
  4033d0:	bl	400e70 <abs@plt>
  4033d4:	mov	w8, wzr
  4033d8:	subs	w8, w8, w0, uxtb
  4033dc:	str	w8, [sp, #16]
  4033e0:	ldr	w8, [sp, #16]
  4033e4:	str	w8, [sp, #100]
  4033e8:	mov	w8, #0x4                   	// #4
  4033ec:	stur	w8, [x29, #-100]
  4033f0:	b	403470 <setup_remaining_vcs+0x948>
  4033f4:	mov	w8, #0x7                   	// #7
  4033f8:	str	w8, [sp, #96]
  4033fc:	str	wzr, [sp, #92]
  403400:	str	wzr, [sp, #88]
  403404:	ldr	w0, [sp, #88]
  403408:	bl	400e50 <log_get_max_level_realm@plt>
  40340c:	ldr	w8, [sp, #96]
  403410:	and	w8, w8, #0x7
  403414:	cmp	w0, w8
  403418:	b.lt	403450 <setup_remaining_vcs+0x928>  // b.tstop
  40341c:	ldr	w8, [sp, #88]
  403420:	ldr	w9, [sp, #96]
  403424:	orr	w0, w9, w8, lsl #10
  403428:	ldr	w1, [sp, #92]
  40342c:	ldr	x2, [sp, #64]
  403430:	mov	w3, #0x152                 	// #338
  403434:	ldr	x4, [sp, #56]
  403438:	adrp	x5, 404000 <_fini+0x5d4>
  40343c:	add	x5, x5, #0x200
  403440:	sub	x6, x29, #0xbf
  403444:	bl	400e60 <log_internal_realm@plt>
  403448:	str	w0, [sp, #12]
  40344c:	b	403464 <setup_remaining_vcs+0x93c>
  403450:	ldr	w0, [sp, #92]
  403454:	bl	400e70 <abs@plt>
  403458:	mov	w8, wzr
  40345c:	subs	w8, w8, w0, uxtb
  403460:	str	w8, [sp, #12]
  403464:	ldr	w8, [sp, #12]
  403468:	str	w8, [sp, #84]
  40346c:	stur	wzr, [x29, #-100]
  403470:	add	x0, sp, #0xbc
  403474:	bl	4017a0 <closep>
  403478:	ldur	w8, [x29, #-100]
  40347c:	cbz	w8, 403488 <setup_remaining_vcs+0x960>
  403480:	b	403484 <setup_remaining_vcs+0x95c>
  403484:	b	403488 <setup_remaining_vcs+0x960>
  403488:	ldur	w8, [x29, #-92]
  40348c:	add	w8, w8, #0x1
  403490:	stur	w8, [x29, #-92]
  403494:	b	402f98 <setup_remaining_vcs+0x470>
  403498:	stur	wzr, [x29, #-100]
  40349c:	sub	x0, x29, #0x58
  4034a0:	bl	401778 <freep>
  4034a4:	sub	x0, x29, #0x50
  4034a8:	bl	401778 <freep>
  4034ac:	ldr	x28, [sp, #400]
  4034b0:	ldp	x29, x30, [sp, #384]
  4034b4:	add	sp, sp, #0x1a0
  4034b8:	ret

00000000004034bc <verify_vc_device>:
  4034bc:	sub	sp, sp, #0x20
  4034c0:	stp	x29, x30, [sp, #16]
  4034c4:	add	x29, sp, #0x10
  4034c8:	adrp	x8, 404000 <_fini+0x5d4>
  4034cc:	add	x8, x8, #0x250
  4034d0:	mov	x1, #0x541c                	// #21532
  4034d4:	add	x2, sp, #0x7
  4034d8:	str	w0, [sp, #8]
  4034dc:	ldrb	w9, [x8]
  4034e0:	strb	w9, [sp, #7]
  4034e4:	ldr	w0, [sp, #8]
  4034e8:	bl	400f10 <ioctl@plt>
  4034ec:	str	w0, [sp]
  4034f0:	ldr	w9, [sp]
  4034f4:	cmp	w9, #0x0
  4034f8:	cset	w9, ge  // ge = tcont
  4034fc:	tbnz	w9, #0, 403518 <verify_vc_device+0x5c>
  403500:	bl	400f20 <__errno_location@plt>
  403504:	ldr	w8, [x0]
  403508:	mov	w9, wzr
  40350c:	subs	w8, w9, w8
  403510:	stur	w8, [x29, #-4]
  403514:	b	403520 <verify_vc_device+0x64>
  403518:	ldr	w8, [sp]
  40351c:	stur	w8, [x29, #-4]
  403520:	ldur	w0, [x29, #-4]
  403524:	ldp	x29, x30, [sp, #16]
  403528:	add	sp, sp, #0x20
  40352c:	ret

0000000000403530 <verify_vc_allocation_byfd>:
  403530:	sub	sp, sp, #0x20
  403534:	stp	x29, x30, [sp, #16]
  403538:	add	x29, sp, #0x10
  40353c:	mov	x1, #0x5603                	// #22019
  403540:	mov	x8, sp
  403544:	str	w0, [sp, #8]
  403548:	str	wzr, [sp]
  40354c:	mov	w9, #0x0                   	// #0
  403550:	strh	w9, [x8, #4]
  403554:	ldr	w0, [sp, #8]
  403558:	mov	x2, x8
  40355c:	bl	400f10 <ioctl@plt>
  403560:	cmp	w0, #0x0
  403564:	cset	w9, ge  // ge = tcont
  403568:	tbnz	w9, #0, 403584 <verify_vc_allocation_byfd+0x54>
  40356c:	bl	400f20 <__errno_location@plt>
  403570:	ldr	w8, [x0]
  403574:	mov	w9, wzr
  403578:	subs	w8, w9, w8
  40357c:	stur	w8, [x29, #-4]
  403580:	b	403590 <verify_vc_allocation_byfd+0x60>
  403584:	ldrh	w0, [sp]
  403588:	bl	403658 <verify_vc_allocation>
  40358c:	stur	w0, [x29, #-4]
  403590:	ldur	w0, [x29, #-4]
  403594:	ldp	x29, x30, [sp, #16]
  403598:	add	sp, sp, #0x20
  40359c:	ret

00000000004035a0 <verify_vc_kbmode>:
  4035a0:	sub	sp, sp, #0x30
  4035a4:	stp	x29, x30, [sp, #32]
  4035a8:	add	x29, sp, #0x20
  4035ac:	mov	x1, #0x4b44                	// #19268
  4035b0:	sub	x2, x29, #0xc
  4035b4:	stur	w0, [x29, #-8]
  4035b8:	ldur	w0, [x29, #-8]
  4035bc:	bl	400f10 <ioctl@plt>
  4035c0:	cmp	w0, #0x0
  4035c4:	cset	w8, ge  // ge = tcont
  4035c8:	tbnz	w8, #0, 4035e4 <verify_vc_kbmode+0x44>
  4035cc:	bl	400f20 <__errno_location@plt>
  4035d0:	ldr	w8, [x0]
  4035d4:	mov	w9, wzr
  4035d8:	subs	w8, w9, w8
  4035dc:	stur	w8, [x29, #-4]
  4035e0:	b	403648 <verify_vc_kbmode+0xa8>
  4035e4:	mov	w8, #0x0                   	// #0
  4035e8:	sturb	w8, [x29, #-13]
  4035ec:	ldur	w8, [x29, #-12]
  4035f0:	cmp	w8, #0x1
  4035f4:	str	w8, [sp, #12]
  4035f8:	b.eq	403618 <verify_vc_kbmode+0x78>  // b.none
  4035fc:	b	403600 <verify_vc_kbmode+0x60>
  403600:	ldr	w8, [sp, #12]
  403604:	cmp	w8, #0x3
  403608:	cset	w9, eq  // eq = none
  40360c:	eor	w9, w9, #0x1
  403610:	tbnz	w9, #0, 403624 <verify_vc_kbmode+0x84>
  403614:	b	403618 <verify_vc_kbmode+0x78>
  403618:	mov	w8, #0x1                   	// #1
  40361c:	sturb	w8, [x29, #-13]
  403620:	b	403624 <verify_vc_kbmode+0x84>
  403624:	ldurb	w8, [x29, #-13]
  403628:	and	w8, w8, #0x1
  40362c:	sturb	w8, [x29, #-14]
  403630:	ldurb	w8, [x29, #-14]
  403634:	mov	w9, #0xfffffff0            	// #-16
  403638:	mov	w10, wzr
  40363c:	tst	w8, #0x1
  403640:	csel	w8, w10, w9, ne  // ne = any
  403644:	stur	w8, [x29, #-4]
  403648:	ldur	w0, [x29, #-4]
  40364c:	ldp	x29, x30, [sp, #32]
  403650:	add	sp, sp, #0x30
  403654:	ret

0000000000403658 <verify_vc_allocation>:
  403658:	sub	sp, sp, #0x40
  40365c:	stp	x29, x30, [sp, #48]
  403660:	add	x29, sp, #0x30
  403664:	adrp	x8, 403000 <setup_remaining_vcs+0x4d8>
  403668:	add	x8, x8, #0xa92
  40366c:	add	x2, x8, #0x3
  403670:	stur	w0, [x29, #-8]
  403674:	str	x2, [sp, #8]
  403678:	ldur	w3, [x29, #-8]
  40367c:	add	x0, sp, #0x15
  403680:	mov	x1, #0x13                  	// #19
  403684:	adrp	x2, 403000 <setup_remaining_vcs+0x4d8>
  403688:	add	x2, x2, #0xcba
  40368c:	bl	400f90 <snprintf@plt>
  403690:	mov	w1, w0
  403694:	sxtw	x8, w1
  403698:	cmp	x8, #0x13
  40369c:	cset	w9, cc  // cc = lo, ul, last
  4036a0:	mov	w10, #0x1                   	// #1
  4036a4:	eor	w9, w9, #0x1
  4036a8:	eor	w9, w9, w10
  4036ac:	eor	w9, w9, w10
  4036b0:	and	w9, w9, #0x1
  4036b4:	mov	w1, w9
  4036b8:	sxtw	x8, w1
  4036bc:	cbz	x8, 4036e4 <verify_vc_allocation+0x8c>
  4036c0:	mov	w8, wzr
  4036c4:	mov	w0, w8
  4036c8:	adrp	x1, 403000 <setup_remaining_vcs+0x4d8>
  4036cc:	add	x1, x1, #0xcc5
  4036d0:	ldr	x2, [sp, #8]
  4036d4:	mov	w3, #0x37                  	// #55
  4036d8:	adrp	x4, 403000 <setup_remaining_vcs+0x4d8>
  4036dc:	add	x4, x4, #0xceb
  4036e0:	bl	400f00 <log_assert_failed_realm@plt>
  4036e4:	add	x0, sp, #0x15
  4036e8:	mov	w8, wzr
  4036ec:	mov	w1, w8
  4036f0:	bl	400fa0 <access@plt>
  4036f4:	cmp	w0, #0x0
  4036f8:	cset	w8, ge  // ge = tcont
  4036fc:	tbnz	w8, #0, 403718 <verify_vc_allocation+0xc0>
  403700:	bl	400f20 <__errno_location@plt>
  403704:	ldr	w8, [x0]
  403708:	mov	w9, wzr
  40370c:	subs	w8, w9, w8
  403710:	stur	w8, [x29, #-4]
  403714:	b	40371c <verify_vc_allocation+0xc4>
  403718:	stur	wzr, [x29, #-4]
  40371c:	ldur	w0, [x29, #-4]
  403720:	ldp	x29, x30, [sp, #48]
  403724:	add	sp, sp, #0x40
  403728:	ret

000000000040372c <malloc_multiply>:
  40372c:	sub	sp, sp, #0x40
  403730:	stp	x29, x30, [sp, #48]
  403734:	add	x29, sp, #0x30
  403738:	stur	x0, [x29, #-16]
  40373c:	str	x1, [sp, #24]
  403740:	ldur	x0, [x29, #-16]
  403744:	ldr	x1, [sp, #24]
  403748:	bl	4037a8 <size_multiply_overflow>
  40374c:	tbnz	w0, #0, 403754 <malloc_multiply+0x28>
  403750:	b	403760 <malloc_multiply+0x34>
  403754:	mov	x8, xzr
  403758:	stur	x8, [x29, #-8]
  40375c:	b	403798 <malloc_multiply+0x6c>
  403760:	ldur	x8, [x29, #-16]
  403764:	ldr	x9, [sp, #24]
  403768:	mul	x8, x8, x9
  40376c:	str	x8, [sp, #16]
  403770:	cbz	x8, 403780 <malloc_multiply+0x54>
  403774:	ldr	x8, [sp, #16]
  403778:	str	x8, [sp, #8]
  40377c:	b	403788 <malloc_multiply+0x5c>
  403780:	mov	x8, #0x1                   	// #1
  403784:	str	x8, [sp, #8]
  403788:	ldr	x8, [sp, #8]
  40378c:	mov	x0, x8
  403790:	bl	400fb0 <malloc@plt>
  403794:	stur	x0, [x29, #-8]
  403798:	ldur	x0, [x29, #-8]
  40379c:	ldp	x29, x30, [sp, #48]
  4037a0:	add	sp, sp, #0x40
  4037a4:	ret

00000000004037a8 <size_multiply_overflow>:
  4037a8:	sub	sp, sp, #0x20
  4037ac:	str	x0, [sp, #24]
  4037b0:	str	x1, [sp, #16]
  4037b4:	ldr	x8, [sp, #16]
  4037b8:	mov	w9, #0x0                   	// #0
  4037bc:	str	w9, [sp, #12]
  4037c0:	cbz	x8, 4037e0 <size_multiply_overflow+0x38>
  4037c4:	ldr	x8, [sp, #24]
  4037c8:	ldr	x9, [sp, #16]
  4037cc:	mov	x10, #0xffffffffffffffff    	// #-1
  4037d0:	udiv	x9, x10, x9
  4037d4:	cmp	x8, x9
  4037d8:	cset	w11, hi  // hi = pmore
  4037dc:	str	w11, [sp, #12]
  4037e0:	ldr	w8, [sp, #12]
  4037e4:	mov	w9, #0x1                   	// #1
  4037e8:	eor	w8, w8, #0x1
  4037ec:	eor	w8, w8, w9
  4037f0:	and	w8, w8, #0x1
  4037f4:	mov	w0, w8
  4037f8:	sxtw	x10, w0
  4037fc:	cmp	x10, #0x0
  403800:	cset	w8, ne  // ne = any
  403804:	and	w0, w8, #0x1
  403808:	add	sp, sp, #0x20
  40380c:	ret

0000000000403810 <write_string_file>:
  403810:	sub	sp, sp, #0x30
  403814:	stp	x29, x30, [sp, #32]
  403818:	add	x29, sp, #0x20
  40381c:	mov	x8, xzr
  403820:	stur	x0, [x29, #-8]
  403824:	str	x1, [sp, #16]
  403828:	str	w2, [sp, #12]
  40382c:	ldur	x0, [x29, #-8]
  403830:	ldr	x1, [sp, #16]
  403834:	ldr	w2, [sp, #12]
  403838:	mov	x3, x8
  40383c:	bl	400fc0 <write_string_file_ts@plt>
  403840:	ldp	x29, x30, [sp, #32]
  403844:	add	sp, sp, #0x30
  403848:	ret

000000000040384c <one_zero>:
  40384c:	sub	sp, sp, #0x10
  403850:	adrp	x8, 403000 <setup_remaining_vcs+0x4d8>
  403854:	add	x8, x8, #0xdbf
  403858:	adrp	x9, 403000 <setup_remaining_vcs+0x4d8>
  40385c:	add	x9, x9, #0xdc1
  403860:	and	w10, w0, #0x1
  403864:	strb	w10, [sp, #15]
  403868:	ldrb	w10, [sp, #15]
  40386c:	tst	w10, #0x1
  403870:	csel	x0, x8, x9, ne  // ne = any
  403874:	add	sp, sp, #0x10
  403878:	ret

000000000040387c <enable_disable>:
  40387c:	sub	sp, sp, #0x10
  403880:	adrp	x8, 403000 <setup_remaining_vcs+0x4d8>
  403884:	add	x8, x8, #0xdc3
  403888:	adrp	x9, 403000 <setup_remaining_vcs+0x4d8>
  40388c:	add	x9, x9, #0xdca
  403890:	and	w10, w0, #0x1
  403894:	strb	w10, [sp, #15]
  403898:	ldrb	w10, [sp, #15]
  40389c:	tst	w10, #0x1
  4038a0:	csel	x0, x8, x9, ne  // ne = any
  4038a4:	add	sp, sp, #0x10
  4038a8:	ret

00000000004038ac <isempty>:
  4038ac:	sub	sp, sp, #0x10
  4038b0:	str	x0, [sp, #8]
  4038b4:	ldr	x8, [sp, #8]
  4038b8:	mov	w9, #0x1                   	// #1
  4038bc:	str	w9, [sp, #4]
  4038c0:	cbz	x8, 4038dc <isempty+0x30>
  4038c4:	ldr	x8, [sp, #8]
  4038c8:	ldrb	w9, [x8]
  4038cc:	cmp	w9, #0x0
  4038d0:	cset	w9, ne  // ne = any
  4038d4:	eor	w9, w9, #0x1
  4038d8:	str	w9, [sp, #4]
  4038dc:	ldr	w8, [sp, #4]
  4038e0:	and	w0, w8, #0x1
  4038e4:	add	sp, sp, #0x10
  4038e8:	ret

00000000004038ec <strv_join>:
  4038ec:	sub	sp, sp, #0x20
  4038f0:	stp	x29, x30, [sp, #16]
  4038f4:	add	x29, sp, #0x10
  4038f8:	mov	x8, xzr
  4038fc:	str	x0, [sp, #8]
  403900:	str	x1, [sp]
  403904:	ldr	x0, [sp, #8]
  403908:	ldr	x1, [sp]
  40390c:	mov	x2, x8
  403910:	bl	400fd0 <strv_join_prefix@plt>
  403914:	ldp	x29, x30, [sp, #16]
  403918:	add	sp, sp, #0x20
  40391c:	ret

0000000000403920 <strnull>:
  403920:	sub	sp, sp, #0x20
  403924:	str	x0, [sp, #24]
  403928:	ldr	x8, [sp, #24]
  40392c:	str	x8, [sp, #16]
  403930:	cbz	x8, 403940 <strnull+0x20>
  403934:	ldr	x8, [sp, #16]
  403938:	str	x8, [sp, #8]
  40393c:	b	40394c <strnull+0x2c>
  403940:	adrp	x8, 403000 <setup_remaining_vcs+0x4d8>
  403944:	add	x8, x8, #0xefa
  403948:	str	x8, [sp, #8]
  40394c:	ldr	x8, [sp, #8]
  403950:	mov	x0, x8
  403954:	add	sp, sp, #0x20
  403958:	ret

000000000040395c <safe_fork>:
  40395c:	sub	sp, sp, #0x30
  403960:	stp	x29, x30, [sp, #32]
  403964:	add	x29, sp, #0x20
  403968:	mov	x8, xzr
  40396c:	mov	x3, x8
  403970:	stur	x0, [x29, #-8]
  403974:	stur	w1, [x29, #-12]
  403978:	str	x2, [sp, #8]
  40397c:	ldur	x0, [x29, #-8]
  403980:	ldur	w9, [x29, #-12]
  403984:	ldr	x4, [sp, #8]
  403988:	mov	x1, x3
  40398c:	mov	x2, x8
  403990:	mov	w3, w9
  403994:	bl	400fe0 <safe_fork_full@plt>
  403998:	ldp	x29, x30, [sp, #32]
  40399c:	add	sp, sp, #0x30
  4039a0:	ret
  4039a4:	udf	#0

00000000004039a8 <__libc_csu_init>:
  4039a8:	stp	x29, x30, [sp, #-64]!
  4039ac:	mov	x29, sp
  4039b0:	stp	x19, x20, [sp, #16]
  4039b4:	adrp	x20, 41f000 <__FRAME_END__+0x1ac70>
  4039b8:	add	x20, x20, #0xcb0
  4039bc:	stp	x21, x22, [sp, #32]
  4039c0:	adrp	x21, 41f000 <__FRAME_END__+0x1ac70>
  4039c4:	add	x21, x21, #0xca8
  4039c8:	sub	x20, x20, x21
  4039cc:	mov	w22, w0
  4039d0:	stp	x23, x24, [sp, #48]
  4039d4:	mov	x23, x1
  4039d8:	mov	x24, x2
  4039dc:	bl	400da8 <_init>
  4039e0:	cmp	xzr, x20, asr #3
  4039e4:	b.eq	403a10 <__libc_csu_init+0x68>  // b.none
  4039e8:	asr	x20, x20, #3
  4039ec:	mov	x19, #0x0                   	// #0
  4039f0:	ldr	x3, [x21, x19, lsl #3]
  4039f4:	mov	x2, x24
  4039f8:	add	x19, x19, #0x1
  4039fc:	mov	x1, x23
  403a00:	mov	w0, w22
  403a04:	blr	x3
  403a08:	cmp	x20, x19
  403a0c:	b.ne	4039f0 <__libc_csu_init+0x48>  // b.any
  403a10:	ldp	x19, x20, [sp, #16]
  403a14:	ldp	x21, x22, [sp, #32]
  403a18:	ldp	x23, x24, [sp, #48]
  403a1c:	ldp	x29, x30, [sp], #64
  403a20:	ret
  403a24:	nop

0000000000403a28 <__libc_csu_fini>:
  403a28:	ret

Disassembly of section .fini:

0000000000403a2c <_fini>:
  403a2c:	stp	x29, x30, [sp, #-16]!
  403a30:	mov	x29, sp
  403a34:	ldp	x29, x30, [sp], #16
  403a38:	ret
